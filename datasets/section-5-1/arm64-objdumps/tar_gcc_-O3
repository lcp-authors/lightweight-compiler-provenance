
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403f28 <.init>:
  403f28:	stp	x29, x30, [sp, #-16]!
  403f2c:	mov	x29, sp
  403f30:	bl	404f2c <wcrtomb@plt+0x30c>
  403f34:	ldp	x29, x30, [sp], #16
  403f38:	ret

Disassembly of section .plt:

0000000000403f40 <mbrtowc@plt-0x20>:
  403f40:	stp	x16, x30, [sp, #-16]!
  403f44:	adrp	x16, 492000 <_obstack_memory_used@@Base+0x40bf0>
  403f48:	ldr	x17, [x16, #4088]
  403f4c:	add	x16, x16, #0xff8
  403f50:	br	x17
  403f54:	nop
  403f58:	nop
  403f5c:	nop

0000000000403f60 <mbrtowc@plt>:
  403f60:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403f64:	ldr	x17, [x16]
  403f68:	add	x16, x16, #0x0
  403f6c:	br	x17

0000000000403f70 <memcpy@plt>:
  403f70:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403f74:	ldr	x17, [x16, #8]
  403f78:	add	x16, x16, #0x8
  403f7c:	br	x17

0000000000403f80 <memmove@plt>:
  403f80:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403f84:	ldr	x17, [x16, #16]
  403f88:	add	x16, x16, #0x10
  403f8c:	br	x17

0000000000403f90 <_exit@plt>:
  403f90:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403f94:	ldr	x17, [x16, #24]
  403f98:	add	x16, x16, #0x18
  403f9c:	br	x17

0000000000403fa0 <getcwd@plt>:
  403fa0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403fa4:	ldr	x17, [x16, #32]
  403fa8:	add	x16, x16, #0x20
  403fac:	br	x17

0000000000403fb0 <setuid@plt>:
  403fb0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403fb4:	ldr	x17, [x16, #40]
  403fb8:	add	x16, x16, #0x28
  403fbc:	br	x17

0000000000403fc0 <strtok@plt>:
  403fc0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403fc4:	ldr	x17, [x16, #48]
  403fc8:	add	x16, x16, #0x30
  403fcc:	br	x17

0000000000403fd0 <fwrite_unlocked@plt>:
  403fd0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403fd4:	ldr	x17, [x16, #56]
  403fd8:	add	x16, x16, #0x38
  403fdc:	br	x17

0000000000403fe0 <strtoul@plt>:
  403fe0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403fe4:	ldr	x17, [x16, #64]
  403fe8:	add	x16, x16, #0x40
  403fec:	br	x17

0000000000403ff0 <strlen@plt>:
  403ff0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  403ff4:	ldr	x17, [x16, #72]
  403ff8:	add	x16, x16, #0x48
  403ffc:	br	x17

0000000000404000 <fputs@plt>:
  404000:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404004:	ldr	x17, [x16, #80]
  404008:	add	x16, x16, #0x50
  40400c:	br	x17

0000000000404010 <__sprintf_chk@plt>:
  404010:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404014:	ldr	x17, [x16, #88]
  404018:	add	x16, x16, #0x58
  40401c:	br	x17

0000000000404020 <exit@plt>:
  404020:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404024:	ldr	x17, [x16, #96]
  404028:	add	x16, x16, #0x60
  40402c:	br	x17

0000000000404030 <raise@plt>:
  404030:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404034:	ldr	x17, [x16, #104]
  404038:	add	x16, x16, #0x68
  40403c:	br	x17

0000000000404040 <dup@plt>:
  404040:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404044:	ldr	x17, [x16, #112]
  404048:	add	x16, x16, #0x70
  40404c:	br	x17

0000000000404050 <error@plt>:
  404050:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404054:	ldr	x17, [x16, #120]
  404058:	add	x16, x16, #0x78
  40405c:	br	x17

0000000000404060 <fchdir@plt>:
  404060:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404064:	ldr	x17, [x16, #128]
  404068:	add	x16, x16, #0x80
  40406c:	br	x17

0000000000404070 <rpmatch@plt>:
  404070:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404074:	ldr	x17, [x16, #136]
  404078:	add	x16, x16, #0x88
  40407c:	br	x17

0000000000404080 <execl@plt>:
  404080:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404084:	ldr	x17, [x16, #144]
  404088:	add	x16, x16, #0x90
  40408c:	br	x17

0000000000404090 <flockfile@plt>:
  404090:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404094:	ldr	x17, [x16, #152]
  404098:	add	x16, x16, #0x98
  40409c:	br	x17

00000000004040a0 <wctype@plt>:
  4040a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4040a4:	ldr	x17, [x16, #160]
  4040a8:	add	x16, x16, #0xa0
  4040ac:	br	x17

00000000004040b0 <sigprocmask@plt>:
  4040b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4040b4:	ldr	x17, [x16, #168]
  4040b8:	add	x16, x16, #0xa8
  4040bc:	br	x17

00000000004040c0 <strnlen@plt>:
  4040c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4040c4:	ldr	x17, [x16, #176]
  4040c8:	add	x16, x16, #0xb0
  4040cc:	br	x17

00000000004040d0 <geteuid@plt>:
  4040d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4040d4:	ldr	x17, [x16, #184]
  4040d8:	add	x16, x16, #0xb8
  4040dc:	br	x17

00000000004040e0 <linkat@plt>:
  4040e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16, #192]
  4040e8:	add	x16, x16, #0xc0
  4040ec:	br	x17

00000000004040f0 <localtime_r@plt>:
  4040f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #200]
  4040f8:	add	x16, x16, #0xc8
  4040fc:	br	x17

0000000000404100 <setenv@plt>:
  404100:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #208]
  404108:	add	x16, x16, #0xd0
  40410c:	br	x17

0000000000404110 <getgrnam@plt>:
  404110:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #216]
  404118:	add	x16, x16, #0xd8
  40411c:	br	x17

0000000000404120 <getuid@plt>:
  404120:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #224]
  404128:	add	x16, x16, #0xe0
  40412c:	br	x17

0000000000404130 <pipe@plt>:
  404130:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #232]
  404138:	add	x16, x16, #0xe8
  40413c:	br	x17

0000000000404140 <opendir@plt>:
  404140:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #240]
  404148:	add	x16, x16, #0xf0
  40414c:	br	x17

0000000000404150 <strftime@plt>:
  404150:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #248]
  404158:	add	x16, x16, #0xf8
  40415c:	br	x17

0000000000404160 <unlinkat@plt>:
  404160:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #256]
  404168:	add	x16, x16, #0x100
  40416c:	br	x17

0000000000404170 <fputc@plt>:
  404170:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #264]
  404178:	add	x16, x16, #0x108
  40417c:	br	x17

0000000000404180 <iswcntrl@plt>:
  404180:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #272]
  404188:	add	x16, x16, #0x110
  40418c:	br	x17

0000000000404190 <clock_gettime@plt>:
  404190:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #280]
  404198:	add	x16, x16, #0x118
  40419c:	br	x17

00000000004041a0 <qsort@plt>:
  4041a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #288]
  4041a8:	add	x16, x16, #0x120
  4041ac:	br	x17

00000000004041b0 <pathconf@plt>:
  4041b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #296]
  4041b8:	add	x16, x16, #0x128
  4041bc:	br	x17

00000000004041c0 <fork@plt>:
  4041c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #304]
  4041c8:	add	x16, x16, #0x130
  4041cc:	br	x17

00000000004041d0 <lseek@plt>:
  4041d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #312]
  4041d8:	add	x16, x16, #0x138
  4041dc:	br	x17

00000000004041e0 <__fpending@plt>:
  4041e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #320]
  4041e8:	add	x16, x16, #0x140
  4041ec:	br	x17

00000000004041f0 <__ctype_tolower_loc@plt>:
  4041f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #328]
  4041f8:	add	x16, x16, #0x148
  4041fc:	br	x17

0000000000404200 <snprintf@plt>:
  404200:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #336]
  404208:	add	x16, x16, #0x150
  40420c:	br	x17

0000000000404210 <localeconv@plt>:
  404210:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #344]
  404218:	add	x16, x16, #0x158
  40421c:	br	x17

0000000000404220 <stpcpy@plt>:
  404220:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #352]
  404228:	add	x16, x16, #0x160
  40422c:	br	x17

0000000000404230 <fileno@plt>:
  404230:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #360]
  404238:	add	x16, x16, #0x168
  40423c:	br	x17

0000000000404240 <localtime@plt>:
  404240:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #368]
  404248:	add	x16, x16, #0x170
  40424c:	br	x17

0000000000404250 <__memcpy_chk@plt>:
  404250:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #376]
  404258:	add	x16, x16, #0x178
  40425c:	br	x17

0000000000404260 <mkdirat@plt>:
  404260:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #384]
  404268:	add	x16, x16, #0x180
  40426c:	br	x17

0000000000404270 <signal@plt>:
  404270:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #392]
  404278:	add	x16, x16, #0x188
  40427c:	br	x17

0000000000404280 <acl_delete_def_file@plt>:
  404280:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #400]
  404288:	add	x16, x16, #0x190
  40428c:	br	x17

0000000000404290 <__snprintf_chk@plt>:
  404290:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #408]
  404298:	add	x16, x16, #0x198
  40429c:	br	x17

00000000004042a0 <fclose@plt>:
  4042a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #416]
  4042a8:	add	x16, x16, #0x1a0
  4042ac:	br	x17

00000000004042b0 <fsync@plt>:
  4042b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #424]
  4042b8:	add	x16, x16, #0x1a8
  4042bc:	br	x17

00000000004042c0 <getpid@plt>:
  4042c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #432]
  4042c8:	add	x16, x16, #0x1b0
  4042cc:	br	x17

00000000004042d0 <nl_langinfo@plt>:
  4042d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #440]
  4042d8:	add	x16, x16, #0x1b8
  4042dc:	br	x17

00000000004042e0 <fopen@plt>:
  4042e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #448]
  4042e8:	add	x16, x16, #0x1c0
  4042ec:	br	x17

00000000004042f0 <__vsnprintf_chk@plt>:
  4042f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #456]
  4042f8:	add	x16, x16, #0x1c8
  4042fc:	br	x17

0000000000404300 <iswctype@plt>:
  404300:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #464]
  404308:	add	x16, x16, #0x1d0
  40430c:	br	x17

0000000000404310 <malloc@plt>:
  404310:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #472]
  404318:	add	x16, x16, #0x1d8
  40431c:	br	x17

0000000000404320 <wcwidth@plt>:
  404320:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #480]
  404328:	add	x16, x16, #0x1e0
  40432c:	br	x17

0000000000404330 <funlockfile@plt>:
  404330:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #488]
  404338:	add	x16, x16, #0x1e8
  40433c:	br	x17

0000000000404340 <open@plt>:
  404340:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #496]
  404348:	add	x16, x16, #0x1f0
  40434c:	br	x17

0000000000404350 <__vasprintf_chk@plt>:
  404350:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #504]
  404358:	add	x16, x16, #0x1f8
  40435c:	br	x17

0000000000404360 <tzset@plt>:
  404360:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #512]
  404368:	add	x16, x16, #0x200
  40436c:	br	x17

0000000000404370 <__strcpy_chk@plt>:
  404370:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #520]
  404378:	add	x16, x16, #0x208
  40437c:	br	x17

0000000000404380 <__isoc99_fscanf@plt>:
  404380:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #528]
  404388:	add	x16, x16, #0x210
  40438c:	br	x17

0000000000404390 <__strtol_internal@plt>:
  404390:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #536]
  404398:	add	x16, x16, #0x218
  40439c:	br	x17

00000000004043a0 <sigemptyset@plt>:
  4043a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #544]
  4043a8:	add	x16, x16, #0x220
  4043ac:	br	x17

00000000004043b0 <futimens@plt>:
  4043b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #552]
  4043b8:	add	x16, x16, #0x228
  4043bc:	br	x17

00000000004043c0 <strncmp@plt>:
  4043c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #560]
  4043c8:	add	x16, x16, #0x230
  4043cc:	br	x17

00000000004043d0 <bindtextdomain@plt>:
  4043d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #568]
  4043d8:	add	x16, x16, #0x238
  4043dc:	br	x17

00000000004043e0 <__libc_start_main@plt>:
  4043e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #576]
  4043e8:	add	x16, x16, #0x240
  4043ec:	br	x17

00000000004043f0 <setxattr@plt>:
  4043f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #584]
  4043f8:	add	x16, x16, #0x248
  4043fc:	br	x17

0000000000404400 <__printf_chk@plt>:
  404400:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #592]
  404408:	add	x16, x16, #0x250
  40440c:	br	x17

0000000000404410 <memset@plt>:
  404410:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #600]
  404418:	add	x16, x16, #0x258
  40441c:	br	x17

0000000000404420 <fdopen@plt>:
  404420:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #608]
  404428:	add	x16, x16, #0x260
  40442c:	br	x17

0000000000404430 <gettimeofday@plt>:
  404430:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #616]
  404438:	add	x16, x16, #0x268
  40443c:	br	x17

0000000000404440 <getpwnam@plt>:
  404440:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #624]
  404448:	add	x16, x16, #0x270
  40444c:	br	x17

0000000000404450 <gmtime_r@plt>:
  404450:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #632]
  404458:	add	x16, x16, #0x278
  40445c:	br	x17

0000000000404460 <sleep@plt>:
  404460:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #640]
  404468:	add	x16, x16, #0x280
  40446c:	br	x17

0000000000404470 <fchmod@plt>:
  404470:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #648]
  404478:	add	x16, x16, #0x288
  40447c:	br	x17

0000000000404480 <__xmknodat@plt>:
  404480:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #656]
  404488:	add	x16, x16, #0x290
  40448c:	br	x17

0000000000404490 <strerror_r@plt>:
  404490:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #664]
  404498:	add	x16, x16, #0x298
  40449c:	br	x17

00000000004044a0 <__vfprintf_chk@plt>:
  4044a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #672]
  4044a8:	add	x16, x16, #0x2a0
  4044ac:	br	x17

00000000004044b0 <__strtoul_internal@plt>:
  4044b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #680]
  4044b8:	add	x16, x16, #0x2a8
  4044bc:	br	x17

00000000004044c0 <calloc@plt>:
  4044c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #688]
  4044c8:	add	x16, x16, #0x2b0
  4044cc:	br	x17

00000000004044d0 <lsetxattr@plt>:
  4044d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #696]
  4044d8:	add	x16, x16, #0x2b8
  4044dc:	br	x17

00000000004044e0 <listxattr@plt>:
  4044e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #704]
  4044e8:	add	x16, x16, #0x2c0
  4044ec:	br	x17

00000000004044f0 <execv@plt>:
  4044f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #712]
  4044f8:	add	x16, x16, #0x2c8
  4044fc:	br	x17

0000000000404500 <strcasecmp@plt>:
  404500:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #720]
  404508:	add	x16, x16, #0x2d0
  40450c:	br	x17

0000000000404510 <gmtime@plt>:
  404510:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #728]
  404518:	add	x16, x16, #0x2d8
  40451c:	br	x17

0000000000404520 <readdir@plt>:
  404520:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #736]
  404528:	add	x16, x16, #0x2e0
  40452c:	br	x17

0000000000404530 <realloc@plt>:
  404530:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #744]
  404538:	add	x16, x16, #0x2e8
  40453c:	br	x17

0000000000404540 <__ctype_toupper_loc@plt>:
  404540:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #752]
  404548:	add	x16, x16, #0x2f0
  40454c:	br	x17

0000000000404550 <acl_set_file@plt>:
  404550:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #760]
  404558:	add	x16, x16, #0x2f8
  40455c:	br	x17

0000000000404560 <getpagesize@plt>:
  404560:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #768]
  404568:	add	x16, x16, #0x300
  40456c:	br	x17

0000000000404570 <lgetxattr@plt>:
  404570:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #776]
  404578:	add	x16, x16, #0x308
  40457c:	br	x17

0000000000404580 <strdup@plt>:
  404580:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #784]
  404588:	add	x16, x16, #0x310
  40458c:	br	x17

0000000000404590 <closedir@plt>:
  404590:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #792]
  404598:	add	x16, x16, #0x318
  40459c:	br	x17

00000000004045a0 <strerror@plt>:
  4045a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #800]
  4045a8:	add	x16, x16, #0x320
  4045ac:	br	x17

00000000004045b0 <__openat_2@plt>:
  4045b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #808]
  4045b8:	add	x16, x16, #0x328
  4045bc:	br	x17

00000000004045c0 <close@plt>:
  4045c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #816]
  4045c8:	add	x16, x16, #0x330
  4045cc:	br	x17

00000000004045d0 <strrchr@plt>:
  4045d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #824]
  4045d8:	add	x16, x16, #0x338
  4045dc:	br	x17

00000000004045e0 <acl_to_text@plt>:
  4045e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #832]
  4045e8:	add	x16, x16, #0x340
  4045ec:	br	x17

00000000004045f0 <__gmon_start__@plt>:
  4045f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #840]
  4045f8:	add	x16, x16, #0x348
  4045fc:	br	x17

0000000000404600 <mktime@plt>:
  404600:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #848]
  404608:	add	x16, x16, #0x350
  40460c:	br	x17

0000000000404610 <fdopendir@plt>:
  404610:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #856]
  404618:	add	x16, x16, #0x358
  40461c:	br	x17

0000000000404620 <write@plt>:
  404620:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #864]
  404628:	add	x16, x16, #0x360
  40462c:	br	x17

0000000000404630 <btowc@plt>:
  404630:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #872]
  404638:	add	x16, x16, #0x368
  40463c:	br	x17

0000000000404640 <mkdtemp@plt>:
  404640:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #880]
  404648:	add	x16, x16, #0x370
  40464c:	br	x17

0000000000404650 <abort@plt>:
  404650:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #888]
  404658:	add	x16, x16, #0x378
  40465c:	br	x17

0000000000404660 <setgid@plt>:
  404660:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #896]
  404668:	add	x16, x16, #0x380
  40466c:	br	x17

0000000000404670 <mbsinit@plt>:
  404670:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #904]
  404678:	add	x16, x16, #0x388
  40467c:	br	x17

0000000000404680 <__overflow@plt>:
  404680:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #912]
  404688:	add	x16, x16, #0x390
  40468c:	br	x17

0000000000404690 <access@plt>:
  404690:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #920]
  404698:	add	x16, x16, #0x398
  40469c:	br	x17

00000000004046a0 <fpathconf@plt>:
  4046a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #928]
  4046a8:	add	x16, x16, #0x3a0
  4046ac:	br	x17

00000000004046b0 <puts@plt>:
  4046b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #936]
  4046b8:	add	x16, x16, #0x3a8
  4046bc:	br	x17

00000000004046c0 <getxattr@plt>:
  4046c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #944]
  4046c8:	add	x16, x16, #0x3b0
  4046cc:	br	x17

00000000004046d0 <memcmp@plt>:
  4046d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #952]
  4046d8:	add	x16, x16, #0x3b8
  4046dc:	br	x17

00000000004046e0 <textdomain@plt>:
  4046e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #960]
  4046e8:	add	x16, x16, #0x3c0
  4046ec:	br	x17

00000000004046f0 <execvp@plt>:
  4046f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #968]
  4046f8:	add	x16, x16, #0x3c8
  4046fc:	br	x17

0000000000404700 <__fprintf_chk@plt>:
  404700:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #976]
  404708:	add	x16, x16, #0x3d0
  40470c:	br	x17

0000000000404710 <strcmp@plt>:
  404710:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #984]
  404718:	add	x16, x16, #0x3d8
  40471c:	br	x17

0000000000404720 <getpwuid@plt>:
  404720:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #992]
  404728:	add	x16, x16, #0x3e0
  40472c:	br	x17

0000000000404730 <iconv@plt>:
  404730:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #1000]
  404738:	add	x16, x16, #0x3e8
  40473c:	br	x17

0000000000404740 <__ctype_b_loc@plt>:
  404740:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #1008]
  404748:	add	x16, x16, #0x3f0
  40474c:	br	x17

0000000000404750 <rewinddir@plt>:
  404750:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #1016]
  404758:	add	x16, x16, #0x3f8
  40475c:	br	x17

0000000000404760 <acl_get_file@plt>:
  404760:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #1024]
  404768:	add	x16, x16, #0x400
  40476c:	br	x17

0000000000404770 <strtol@plt>:
  404770:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #1032]
  404778:	add	x16, x16, #0x408
  40477c:	br	x17

0000000000404780 <fseeko@plt>:
  404780:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #1040]
  404788:	add	x16, x16, #0x410
  40478c:	br	x17

0000000000404790 <sigwait@plt>:
  404790:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #1048]
  404798:	add	x16, x16, #0x418
  40479c:	br	x17

00000000004047a0 <chdir@plt>:
  4047a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #1056]
  4047a8:	add	x16, x16, #0x420
  4047ac:	br	x17

00000000004047b0 <free@plt>:
  4047b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #1064]
  4047b8:	add	x16, x16, #0x428
  4047bc:	br	x17

00000000004047c0 <__strcat_chk@plt>:
  4047c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #1072]
  4047c8:	add	x16, x16, #0x430
  4047cc:	br	x17

00000000004047d0 <renameat2@plt>:
  4047d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #1080]
  4047d8:	add	x16, x16, #0x438
  4047dc:	br	x17

00000000004047e0 <__ctype_get_mb_cur_max@plt>:
  4047e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #1088]
  4047e8:	add	x16, x16, #0x440
  4047ec:	br	x17

00000000004047f0 <getgid@plt>:
  4047f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #1096]
  4047f8:	add	x16, x16, #0x448
  4047fc:	br	x17

0000000000404800 <renameat@plt>:
  404800:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #1104]
  404808:	add	x16, x16, #0x450
  40480c:	br	x17

0000000000404810 <mempcpy@plt>:
  404810:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #1112]
  404818:	add	x16, x16, #0x458
  40481c:	br	x17

0000000000404820 <fgetxattr@plt>:
  404820:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #1120]
  404828:	add	x16, x16, #0x460
  40482c:	br	x17

0000000000404830 <fchownat@plt>:
  404830:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #1128]
  404838:	add	x16, x16, #0x468
  40483c:	br	x17

0000000000404840 <__stpcpy_chk@plt>:
  404840:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #1136]
  404848:	add	x16, x16, #0x470
  40484c:	br	x17

0000000000404850 <strndup@plt>:
  404850:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #1144]
  404858:	add	x16, x16, #0x478
  40485c:	br	x17

0000000000404860 <strspn@plt>:
  404860:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #1152]
  404868:	add	x16, x16, #0x480
  40486c:	br	x17

0000000000404870 <strchr@plt>:
  404870:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #1160]
  404878:	add	x16, x16, #0x488
  40487c:	br	x17

0000000000404880 <globfree@plt>:
  404880:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #1168]
  404888:	add	x16, x16, #0x490
  40488c:	br	x17

0000000000404890 <memrchr@plt>:
  404890:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #1176]
  404898:	add	x16, x16, #0x498
  40489c:	br	x17

00000000004048a0 <utimensat@plt>:
  4048a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #1184]
  4048a8:	add	x16, x16, #0x4a0
  4048ac:	br	x17

00000000004048b0 <fwrite@plt>:
  4048b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1192]
  4048b8:	add	x16, x16, #0x4a8
  4048bc:	br	x17

00000000004048c0 <fnmatch@plt>:
  4048c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1200]
  4048c8:	add	x16, x16, #0x4b0
  4048cc:	br	x17

00000000004048d0 <fflush_unlocked@plt>:
  4048d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1208]
  4048d8:	add	x16, x16, #0x4b8
  4048dc:	br	x17

00000000004048e0 <fcntl@plt>:
  4048e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1216]
  4048e8:	add	x16, x16, #0x4c0
  4048ec:	br	x17

00000000004048f0 <dcngettext@plt>:
  4048f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1224]
  4048f8:	add	x16, x16, #0x4c8
  4048fc:	br	x17

0000000000404900 <ftello@plt>:
  404900:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1232]
  404908:	add	x16, x16, #0x4d0
  40490c:	br	x17

0000000000404910 <strcpy@plt>:
  404910:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1240]
  404918:	add	x16, x16, #0x4d8
  40491c:	br	x17

0000000000404920 <dirfd@plt>:
  404920:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1248]
  404928:	add	x16, x16, #0x4e0
  40492c:	br	x17

0000000000404930 <unsetenv@plt>:
  404930:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1256]
  404938:	add	x16, x16, #0x4e8
  40493c:	br	x17

0000000000404940 <iconv_open@plt>:
  404940:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1264]
  404948:	add	x16, x16, #0x4f0
  40494c:	br	x17

0000000000404950 <read@plt>:
  404950:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1272]
  404958:	add	x16, x16, #0x4f8
  40495c:	br	x17

0000000000404960 <memchr@plt>:
  404960:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1280]
  404968:	add	x16, x16, #0x500
  40496c:	br	x17

0000000000404970 <isatty@plt>:
  404970:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1288]
  404978:	add	x16, x16, #0x508
  40497c:	br	x17

0000000000404980 <flistxattr@plt>:
  404980:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1296]
  404988:	add	x16, x16, #0x510
  40498c:	br	x17

0000000000404990 <iswalnum@plt>:
  404990:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1304]
  404998:	add	x16, x16, #0x518
  40499c:	br	x17

00000000004049a0 <__fxstat@plt>:
  4049a0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1312]
  4049a8:	add	x16, x16, #0x520
  4049ac:	br	x17

00000000004049b0 <strchrnul@plt>:
  4049b0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1320]
  4049b8:	add	x16, x16, #0x528
  4049bc:	br	x17

00000000004049c0 <dcgettext@plt>:
  4049c0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1328]
  4049c8:	add	x16, x16, #0x530
  4049cc:	br	x17

00000000004049d0 <mkfifoat@plt>:
  4049d0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1336]
  4049d8:	add	x16, x16, #0x538
  4049dc:	br	x17

00000000004049e0 <fputs_unlocked@plt>:
  4049e0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1344]
  4049e8:	add	x16, x16, #0x540
  4049ec:	br	x17

00000000004049f0 <acl_from_text@plt>:
  4049f0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1352]
  4049f8:	add	x16, x16, #0x548
  4049fc:	br	x17

0000000000404a00 <glob@plt>:
  404a00:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1360]
  404a08:	add	x16, x16, #0x550
  404a0c:	br	x17

0000000000404a10 <ftruncate@plt>:
  404a10:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1368]
  404a18:	add	x16, x16, #0x558
  404a1c:	br	x17

0000000000404a20 <llistxattr@plt>:
  404a20:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1376]
  404a28:	add	x16, x16, #0x560
  404a2c:	br	x17

0000000000404a30 <dup2@plt>:
  404a30:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1384]
  404a38:	add	x16, x16, #0x568
  404a3c:	br	x17

0000000000404a40 <symlinkat@plt>:
  404a40:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1392]
  404a48:	add	x16, x16, #0x570
  404a4c:	br	x17

0000000000404a50 <sigaddset@plt>:
  404a50:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1400]
  404a58:	add	x16, x16, #0x578
  404a5c:	br	x17

0000000000404a60 <towupper@plt>:
  404a60:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1408]
  404a68:	add	x16, x16, #0x580
  404a6c:	br	x17

0000000000404a70 <iswprint@plt>:
  404a70:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1416]
  404a78:	add	x16, x16, #0x588
  404a7c:	br	x17

0000000000404a80 <umask@plt>:
  404a80:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1424]
  404a88:	add	x16, x16, #0x590
  404a8c:	br	x17

0000000000404a90 <strcspn@plt>:
  404a90:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1432]
  404a98:	add	x16, x16, #0x598
  404a9c:	br	x17

0000000000404aa0 <faccessat@plt>:
  404aa0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1440]
  404aa8:	add	x16, x16, #0x5a0
  404aac:	br	x17

0000000000404ab0 <openat@plt>:
  404ab0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1448]
  404ab8:	add	x16, x16, #0x5a8
  404abc:	br	x17

0000000000404ac0 <__assert_fail@plt>:
  404ac0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1456]
  404ac8:	add	x16, x16, #0x5b0
  404acc:	br	x17

0000000000404ad0 <__errno_location@plt>:
  404ad0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1464]
  404ad8:	add	x16, x16, #0x5b8
  404adc:	br	x17

0000000000404ae0 <execlp@plt>:
  404ae0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1472]
  404ae8:	add	x16, x16, #0x5c0
  404aec:	br	x17

0000000000404af0 <getenv@plt>:
  404af0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1480]
  404af8:	add	x16, x16, #0x5c8
  404afc:	br	x17

0000000000404b00 <putchar@plt>:
  404b00:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1488]
  404b08:	add	x16, x16, #0x5d0
  404b0c:	br	x17

0000000000404b10 <__xstat@plt>:
  404b10:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1496]
  404b18:	add	x16, x16, #0x5d8
  404b1c:	br	x17

0000000000404b20 <getgrgid@plt>:
  404b20:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1504]
  404b28:	add	x16, x16, #0x5e0
  404b2c:	br	x17

0000000000404b30 <fchmodat@plt>:
  404b30:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1512]
  404b38:	add	x16, x16, #0x5e8
  404b3c:	br	x17

0000000000404b40 <__getdelim@plt>:
  404b40:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1520]
  404b48:	add	x16, x16, #0x5f0
  404b4c:	br	x17

0000000000404b50 <timegm@plt>:
  404b50:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1528]
  404b58:	add	x16, x16, #0x5f8
  404b5c:	br	x17

0000000000404b60 <waitpid@plt>:
  404b60:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1536]
  404b68:	add	x16, x16, #0x600
  404b6c:	br	x17

0000000000404b70 <fchown@plt>:
  404b70:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1544]
  404b78:	add	x16, x16, #0x608
  404b7c:	br	x17

0000000000404b80 <towlower@plt>:
  404b80:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1552]
  404b88:	add	x16, x16, #0x610
  404b8c:	br	x17

0000000000404b90 <__uflow@plt>:
  404b90:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1560]
  404b98:	add	x16, x16, #0x618
  404b9c:	br	x17

0000000000404ba0 <__open_2@plt>:
  404ba0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1568]
  404ba8:	add	x16, x16, #0x620
  404bac:	br	x17

0000000000404bb0 <creat@plt>:
  404bb0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1576]
  404bb8:	add	x16, x16, #0x628
  404bbc:	br	x17

0000000000404bc0 <gethostbyname@plt>:
  404bc0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1584]
  404bc8:	add	x16, x16, #0x630
  404bcc:	br	x17

0000000000404bd0 <ioctl@plt>:
  404bd0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1592]
  404bd8:	add	x16, x16, #0x638
  404bdc:	br	x17

0000000000404be0 <setlocale@plt>:
  404be0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1600]
  404be8:	add	x16, x16, #0x640
  404bec:	br	x17

0000000000404bf0 <acl_free@plt>:
  404bf0:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1608]
  404bf8:	add	x16, x16, #0x648
  404bfc:	br	x17

0000000000404c00 <__fxstatat@plt>:
  404c00:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1616]
  404c08:	add	x16, x16, #0x650
  404c0c:	br	x17

0000000000404c10 <readlinkat@plt>:
  404c10:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1624]
  404c18:	add	x16, x16, #0x658
  404c1c:	br	x17

0000000000404c20 <wcrtomb@plt>:
  404c20:	adrp	x16, 493000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1632]
  404c28:	add	x16, x16, #0x660
  404c2c:	br	x17

Disassembly of section .text:

0000000000404c30 <argp_failure@@Base-0x39080>:
  404c30:	stp	x29, x30, [sp, #-80]!
  404c34:	mov	x29, sp
  404c38:	stp	x19, x20, [sp, #16]
  404c3c:	mov	x20, x1
  404c40:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404c44:	stp	x21, x22, [sp, #32]
  404c48:	mov	w22, w0
  404c4c:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  404c50:	stp	x23, x24, [sp, #48]
  404c54:	add	x21, x21, #0x3b0
  404c58:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  404c5c:	str	x25, [sp, #64]
  404c60:	bl	405748 <wcrtomb@plt+0xb28>
  404c64:	ldr	x0, [x20]
  404c68:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  404c6c:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  404c70:	bl	44bbe8 <argp_parse@@Base+0xbe08>
  404c74:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  404c78:	mov	w0, #0x6                   	// #6
  404c7c:	add	x1, x1, #0x7e8
  404c80:	bl	404be0 <setlocale@plt>
  404c84:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  404c88:	add	x1, x1, #0x1b0
  404c8c:	mov	x0, x21
  404c90:	bl	4043d0 <bindtextdomain@plt>
  404c94:	mov	x0, x21
  404c98:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404c9c:	bl	4046e0 <textdomain@plt>
  404ca0:	str	wzr, [x19, #3568]
  404ca4:	adrp	x2, 40a000 <wcrtomb@plt+0x53e0>
  404ca8:	add	x2, x2, #0x198
  404cac:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404cb0:	mov	w4, #0x2                   	// #2
  404cb4:	mov	w1, #0x7                   	// #7
  404cb8:	mov	x0, #0x0                   	// #0
  404cbc:	str	w4, [x3, #1040]
  404cc0:	add	x21, x21, #0xc50
  404cc4:	str	x2, [x25, #1136]
  404cc8:	bl	44d210 <argp_parse@@Base+0xd430>
  404ccc:	bl	436130 <wcrtomb@plt+0x31510>
  404cd0:	mov	x1, #0xa                   	// #10
  404cd4:	mov	x0, #0x50                  	// #80
  404cd8:	str	x1, [x21, #112]
  404cdc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  404ce0:	str	x0, [x23, #816]
  404ce4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  404ce8:	mov	x1, #0x0                   	// #0
  404cec:	mov	w0, #0x11                  	// #17
  404cf0:	str	xzr, [x2, #976]
  404cf4:	bl	404270 <signal@plt>
  404cf8:	mov	w0, w22
  404cfc:	mov	x1, x20
  404d00:	bl	42e2d0 <wcrtomb@plt+0x296b0>
  404d04:	bl	4222e0 <wcrtomb@plt+0x1d6c0>
  404d08:	ldr	x0, [x24, #792]
  404d0c:	cbz	x0, 404d14 <wcrtomb@plt+0xf4>
  404d10:	bl	407110 <wcrtomb@plt+0x24f0>
  404d14:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  404d18:	ldr	w0, [x0, #988]
  404d1c:	cmp	w0, #0x5
  404d20:	b.eq	404e90 <wcrtomb@plt+0x270>  // b.none
  404d24:	b.ls	404e00 <wcrtomb@plt+0x1e0>  // b.plast
  404d28:	cmp	w0, #0x7
  404d2c:	b.eq	404e78 <wcrtomb@plt+0x258>  // b.none
  404d30:	b.ls	404de0 <wcrtomb@plt+0x1c0>  // b.plast
  404d34:	cmp	w0, #0x8
  404d38:	b.eq	404e24 <wcrtomb@plt+0x204>  // b.none
  404d3c:	cmp	w0, #0x9
  404d40:	b.ne	404d48 <wcrtomb@plt+0x128>  // b.any
  404d44:	bl	41e0c0 <wcrtomb@plt+0x194a0>
  404d48:	bl	40a528 <wcrtomb@plt+0x5908>
  404d4c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  404d50:	ldrb	w0, [x0, #825]
  404d54:	cbnz	w0, 404e34 <wcrtomb@plt+0x214>
  404d58:	ldr	w0, [x21, #120]
  404d5c:	cbnz	w0, 404e2c <wcrtomb@plt+0x20c>
  404d60:	ldr	x0, [x24, #792]
  404d64:	cbz	x0, 404d6c <wcrtomb@plt+0x14c>
  404d68:	bl	407220 <wcrtomb@plt+0x2600>
  404d6c:	ldr	x0, [x23, #816]
  404d70:	bl	4047b0 <free@plt>
  404d74:	bl	432a00 <wcrtomb@plt+0x2dde0>
  404d78:	bl	422328 <wcrtomb@plt+0x1d708>
  404d7c:	ldr	w0, [x19, #3568]
  404d80:	cmp	w0, #0x2
  404d84:	b.eq	404e48 <wcrtomb@plt+0x228>  // b.none
  404d88:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404d8c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404d90:	ldr	x1, [x1, #4056]
  404d94:	ldr	x0, [x0, #1184]
  404d98:	cmp	x1, x0
  404d9c:	b.eq	404e70 <wcrtomb@plt+0x250>  // b.none
  404da0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404da4:	ldr	x0, [x0, #1176]
  404da8:	ldr	w1, [x0]
  404dac:	tbz	w1, #5, 404e3c <wcrtomb@plt+0x21c>
  404db0:	ldr	w0, [x19, #3568]
  404db4:	cmp	w0, #0x1
  404db8:	b.gt	404dc4 <wcrtomb@plt+0x1a4>
  404dbc:	mov	w0, #0x2                   	// #2
  404dc0:	str	w0, [x19, #3568]
  404dc4:	ldr	w0, [x19, #3568]
  404dc8:	ldp	x19, x20, [sp, #16]
  404dcc:	ldp	x21, x22, [sp, #32]
  404dd0:	ldp	x23, x24, [sp, #48]
  404dd4:	ldr	x25, [sp, #64]
  404dd8:	ldp	x29, x30, [sp], #80
  404ddc:	ret
  404de0:	cmp	w0, #0x6
  404de4:	b.ne	404d48 <wcrtomb@plt+0x128>  // b.any
  404de8:	bl	413100 <wcrtomb@plt+0xe4e0>
  404dec:	adrp	x0, 413000 <wcrtomb@plt+0xe3e0>
  404df0:	add	x0, x0, #0x278
  404df4:	bl	41d920 <wcrtomb@plt+0x18d00>
  404df8:	bl	411828 <wcrtomb@plt+0xcc08>
  404dfc:	b	404d48 <wcrtomb@plt+0x128>
  404e00:	cmp	w0, #0x3
  404e04:	b.eq	404e88 <wcrtomb@plt+0x268>  // b.none
  404e08:	cmp	w0, #0x4
  404e0c:	b.ne	404e18 <wcrtomb@plt+0x1f8>  // b.any
  404e10:	bl	40fc08 <wcrtomb@plt+0xafe8>
  404e14:	b	404d48 <wcrtomb@plt+0x128>
  404e18:	cbz	w0, 404ea4 <wcrtomb@plt+0x284>
  404e1c:	cmp	w0, #0x3
  404e20:	b.eq	404d48 <wcrtomb@plt+0x128>  // b.none
  404e24:	bl	430f18 <wcrtomb@plt+0x2c2f8>
  404e28:	b	404d48 <wcrtomb@plt+0x128>
  404e2c:	bl	40dd30 <wcrtomb@plt+0x9110>
  404e30:	b	404d60 <wcrtomb@plt+0x140>
  404e34:	bl	405e78 <wcrtomb@plt+0x1258>
  404e38:	b	404d58 <wcrtomb@plt+0x138>
  404e3c:	bl	4042a0 <fclose@plt>
  404e40:	cbnz	w0, 404db0 <wcrtomb@plt+0x190>
  404e44:	b	404dc4 <wcrtomb@plt+0x1a4>
  404e48:	mov	w2, #0x5                   	// #5
  404e4c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  404e50:	mov	x0, #0x0                   	// #0
  404e54:	add	x1, x1, #0x218
  404e58:	bl	4049c0 <dcgettext@plt>
  404e5c:	mov	x2, x0
  404e60:	mov	w1, #0x0                   	// #0
  404e64:	mov	w0, #0x0                   	// #0
  404e68:	bl	404050 <error@plt>
  404e6c:	b	404d88 <wcrtomb@plt+0x168>
  404e70:	bl	4412e8 <argp_parse@@Base+0x1508>
  404e74:	b	404dc4 <wcrtomb@plt+0x1a4>
  404e78:	adrp	x0, 41d000 <wcrtomb@plt+0x183e0>
  404e7c:	add	x0, x0, #0xf00
  404e80:	bl	41d920 <wcrtomb@plt+0x18d00>
  404e84:	b	404d48 <wcrtomb@plt+0x128>
  404e88:	bl	40f5b8 <wcrtomb@plt+0xa998>
  404e8c:	b	404d48 <wcrtomb@plt+0x128>
  404e90:	bl	40a670 <wcrtomb@plt+0x5a50>
  404e94:	adrp	x0, 40a000 <wcrtomb@plt+0x53e0>
  404e98:	add	x0, x0, #0xa98
  404e9c:	bl	41d920 <wcrtomb@plt+0x18d00>
  404ea0:	b	404d48 <wcrtomb@plt+0x128>
  404ea4:	ldr	x0, [x25, #1136]
  404ea8:	cbz	x0, 404eb0 <wcrtomb@plt+0x290>
  404eac:	blr	x0
  404eb0:	mov	w2, #0x5                   	// #5
  404eb4:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  404eb8:	mov	x0, #0x0                   	// #0
  404ebc:	add	x1, x1, #0x1c8
  404ec0:	bl	4049c0 <dcgettext@plt>
  404ec4:	mov	x2, x0
  404ec8:	mov	w1, #0x0                   	// #0
  404ecc:	mov	w0, #0x0                   	// #0
  404ed0:	bl	404050 <error@plt>
  404ed4:	mov	w0, #0x2                   	// #2
  404ed8:	bl	42c3b0 <wcrtomb@plt+0x27790>
  404edc:	mov	x29, #0x0                   	// #0
  404ee0:	mov	x30, #0x0                   	// #0
  404ee4:	mov	x5, x0
  404ee8:	ldr	x1, [sp]
  404eec:	add	x2, sp, #0x8
  404ef0:	mov	x6, sp
  404ef4:	movz	x0, #0x0, lsl #48
  404ef8:	movk	x0, #0x0, lsl #32
  404efc:	movk	x0, #0x40, lsl #16
  404f00:	movk	x0, #0x4c30
  404f04:	movz	x3, #0x0, lsl #48
  404f08:	movk	x3, #0x0, lsl #32
  404f0c:	movk	x3, #0x46, lsl #16
  404f10:	movk	x3, #0x7860
  404f14:	movz	x4, #0x0, lsl #48
  404f18:	movk	x4, #0x0, lsl #32
  404f1c:	movk	x4, #0x46, lsl #16
  404f20:	movk	x4, #0x78e0
  404f24:	bl	4043e0 <__libc_start_main@plt>
  404f28:	bl	404650 <abort@plt>
  404f2c:	adrp	x0, 492000 <_obstack_memory_used@@Base+0x40bf0>
  404f30:	ldr	x0, [x0, #4064]
  404f34:	cbz	x0, 404f3c <wcrtomb@plt+0x31c>
  404f38:	b	4045f0 <__gmon_start__@plt>
  404f3c:	ret
  404f40:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404f44:	add	x0, x0, #0x488
  404f48:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404f4c:	add	x1, x1, #0x488
  404f50:	cmp	x1, x0
  404f54:	b.eq	404f6c <wcrtomb@plt+0x34c>  // b.none
  404f58:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  404f5c:	ldr	x1, [x1, #2312]
  404f60:	cbz	x1, 404f6c <wcrtomb@plt+0x34c>
  404f64:	mov	x16, x1
  404f68:	br	x16
  404f6c:	ret
  404f70:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404f74:	add	x0, x0, #0x488
  404f78:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404f7c:	add	x1, x1, #0x488
  404f80:	sub	x1, x1, x0
  404f84:	lsr	x2, x1, #63
  404f88:	add	x1, x2, x1, asr #3
  404f8c:	cmp	xzr, x1, asr #1
  404f90:	asr	x1, x1, #1
  404f94:	b.eq	404fac <wcrtomb@plt+0x38c>  // b.none
  404f98:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  404f9c:	ldr	x2, [x2, #2320]
  404fa0:	cbz	x2, 404fac <wcrtomb@plt+0x38c>
  404fa4:	mov	x16, x2
  404fa8:	br	x16
  404fac:	ret
  404fb0:	stp	x29, x30, [sp, #-32]!
  404fb4:	mov	x29, sp
  404fb8:	str	x19, [sp, #16]
  404fbc:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  404fc0:	ldrb	w0, [x19, #1216]
  404fc4:	cbnz	w0, 404fd4 <wcrtomb@plt+0x3b4>
  404fc8:	bl	404f40 <wcrtomb@plt+0x320>
  404fcc:	mov	w0, #0x1                   	// #1
  404fd0:	strb	w0, [x19, #1216]
  404fd4:	ldr	x19, [sp, #16]
  404fd8:	ldp	x29, x30, [sp], #32
  404fdc:	ret
  404fe0:	b	404f70 <wcrtomb@plt+0x350>
  404fe4:	nop
  404fe8:	sub	sp, sp, #0x550
  404fec:	stp	x29, x30, [sp]
  404ff0:	mov	x29, sp
  404ff4:	stp	x19, x20, [sp, #16]
  404ff8:	mov	x19, x0
  404ffc:	str	x21, [sp, #32]
  405000:	mov	w21, #0x0                   	// #0
  405004:	str	d8, [sp, #40]
  405008:	fmov	d8, d0
  40500c:	cbz	x1, 405018 <wcrtomb@plt+0x3f8>
  405010:	ldrb	w0, [x1]
  405014:	cbnz	w0, 405098 <wcrtomb@plt+0x478>
  405018:	fcvtzu	x0, d8
  40501c:	add	x1, sp, #0x30
  405020:	mov	x4, #0x1                   	// #1
  405024:	mov	w2, #0x1b0                 	// #432
  405028:	mov	x3, x4
  40502c:	bl	445798 <argp_parse@@Base+0x59b8>
  405030:	mov	x20, x0
  405034:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405038:	ldr	d0, [x1, #1232]
  40503c:	fcmpe	d0, #0.0
  405040:	b.le	405058 <wcrtomb@plt+0x438>
  405044:	fdiv	d0, d8, d0
  405048:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  40504c:	fmov	d1, x0
  405050:	fcmpe	d0, d1
  405054:	b.mi	4050c4 <wcrtomb@plt+0x4a4>  // b.first
  405058:	adrp	x4, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40505c:	add	x4, x4, #0x918
  405060:	fmov	d0, d8
  405064:	mov	x3, x20
  405068:	mov	x0, x19
  40506c:	mov	w1, #0x1                   	// #1
  405070:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405074:	add	x2, x2, #0x928
  405078:	bl	404700 <__fprintf_chk@plt>
  40507c:	add	w0, w21, w0
  405080:	ldp	x29, x30, [sp]
  405084:	ldp	x19, x20, [sp, #16]
  405088:	ldr	x21, [sp, #32]
  40508c:	ldr	d8, [sp, #40]
  405090:	add	sp, sp, #0x550
  405094:	ret
  405098:	mov	w2, #0x5                   	// #5
  40509c:	mov	x0, #0x0                   	// #0
  4050a0:	bl	4049c0 <dcgettext@plt>
  4050a4:	mov	x3, x0
  4050a8:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4050ac:	mov	x0, x19
  4050b0:	add	x2, x2, #0x920
  4050b4:	mov	w1, #0x1                   	// #1
  4050b8:	bl	404700 <__fprintf_chk@plt>
  4050bc:	mov	w21, w0
  4050c0:	b	405018 <wcrtomb@plt+0x3f8>
  4050c4:	fcvtzu	x0, d0
  4050c8:	mov	x4, #0x1                   	// #1
  4050cc:	add	x1, sp, #0x2c0
  4050d0:	mov	x3, x4
  4050d4:	mov	w2, #0x1b0                 	// #432
  4050d8:	bl	445798 <argp_parse@@Base+0x59b8>
  4050dc:	mov	x4, x0
  4050e0:	b	405060 <wcrtomb@plt+0x440>
  4050e4:	nop
  4050e8:	stp	x29, x30, [sp, #-16]!
  4050ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4050f0:	mov	x29, sp
  4050f4:	ldr	x0, [x0, #1136]
  4050f8:	cbz	x0, 405100 <wcrtomb@plt+0x4e0>
  4050fc:	blr	x0
  405100:	mov	w2, #0x5                   	// #5
  405104:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405108:	mov	x0, #0x0                   	// #0
  40510c:	add	x1, x1, #0x938
  405110:	bl	4049c0 <dcgettext@plt>
  405114:	mov	x2, x0
  405118:	mov	w1, #0x0                   	// #0
  40511c:	mov	w0, #0x0                   	// #0
  405120:	bl	404050 <error@plt>
  405124:	bl	410460 <wcrtomb@plt+0xb840>
  405128:	stp	x29, x30, [sp, #-464]!
  40512c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  405130:	mov	x29, sp
  405134:	stp	x19, x20, [sp, #16]
  405138:	mov	x20, x0
  40513c:	ldr	w0, [x2, #944]
  405140:	cmp	w0, #0x4
  405144:	b.eq	405154 <wcrtomb@plt+0x534>  // b.none
  405148:	ldp	x19, x20, [sp, #16]
  40514c:	ldp	x29, x30, [sp], #464
  405150:	ret
  405154:	mov	x2, #0x1a8                 	// #424
  405158:	mov	x19, x1
  40515c:	add	x0, sp, #0x20
  405160:	mov	w1, #0x0                   	// #0
  405164:	bl	404410 <memset@plt>
  405168:	ld1r	{v0.2d}, [x20]
  40516c:	mov	w0, #0x81a4                	// #33188
  405170:	str	w0, [sp, #136]
  405174:	str	q0, [sp, #32]
  405178:	bl	404120 <getuid@plt>
  40517c:	str	w0, [sp, #144]
  405180:	bl	4047f0 <getgid@plt>
  405184:	adrp	x2, 493000 <_obstack_memory_used@@Base+0x41bf0>
  405188:	mov	w3, w0
  40518c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405190:	add	x1, x1, #0x950
  405194:	ldrsw	x2, [x2, #1664]
  405198:	add	x0, sp, #0x20
  40519c:	str	w3, [sp, #148]
  4051a0:	bl	416468 <wcrtomb@plt+0x11848>
  4051a4:	mov	x1, x0
  4051a8:	ldr	x2, [x19]
  4051ac:	dup	v0.2d, x1
  4051b0:	add	x0, sp, #0x20
  4051b4:	str	x2, [sp, #168]
  4051b8:	str	x2, [sp, #296]
  4051bc:	str	q0, [sp, #32]
  4051c0:	bl	40ca58 <wcrtomb@plt+0x7e38>
  4051c4:	mov	x2, x0
  4051c8:	cbz	x0, 4051f0 <wcrtomb@plt+0x5d0>
  4051cc:	add	x1, sp, #0x20
  4051d0:	mov	w0, #0x0                   	// #0
  4051d4:	bl	40c720 <wcrtomb@plt+0x7b00>
  4051d8:	bl	40c748 <wcrtomb@plt+0x7b28>
  4051dc:	ldr	x0, [sp, #32]
  4051e0:	bl	4047b0 <free@plt>
  4051e4:	ldp	x19, x20, [sp, #16]
  4051e8:	ldp	x29, x30, [sp], #464
  4051ec:	ret
  4051f0:	bl	404650 <abort@plt>
  4051f4:	nop
  4051f8:	stp	x29, x30, [sp, #-32]!
  4051fc:	mov	x29, sp
  405200:	stp	x19, x20, [sp, #16]
  405204:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405208:	add	x19, x19, #0x4d0
  40520c:	add	x19, x19, #0x8
  405210:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  405214:	mov	x0, x19
  405218:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  40521c:	mov	x1, x19
  405220:	add	x0, x20, #0x68
  405224:	mov	w2, #0x0                   	// #0
  405228:	bl	41c318 <wcrtomb@plt+0x176f8>
  40522c:	cmp	w0, #0x1
  405230:	b.eq	405284 <wcrtomb@plt+0x664>  // b.none
  405234:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  405238:	ldr	x0, [x0, #1136]
  40523c:	cbz	x0, 405244 <wcrtomb@plt+0x624>
  405240:	blr	x0
  405244:	mov	w2, #0x5                   	// #5
  405248:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40524c:	mov	x0, #0x0                   	// #0
  405250:	add	x1, x1, #0x970
  405254:	bl	4049c0 <dcgettext@plt>
  405258:	mov	x2, x0
  40525c:	mov	w1, #0x0                   	// #0
  405260:	mov	w0, #0x0                   	// #0
  405264:	bl	404050 <error@plt>
  405268:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40526c:	mov	w2, #0x2                   	// #2
  405270:	mov	w0, #0x0                   	// #0
  405274:	str	w2, [x1, #3568]
  405278:	ldp	x19, x20, [sp, #16]
  40527c:	ldp	x29, x30, [sp], #32
  405280:	ret
  405284:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  405288:	ldr	x0, [x20, #104]
  40528c:	ldr	x1, [x2, #40]
  405290:	cmp	x0, x1
  405294:	b.cc	4052ac <wcrtomb@plt+0x68c>  // b.lo, b.ul, b.last
  405298:	sub	x0, x0, x1
  40529c:	and	x0, x0, #0xfffffffffffffe00
  4052a0:	add	x0, x0, #0x200
  4052a4:	add	x1, x1, x0
  4052a8:	str	x1, [x2, #40]
  4052ac:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4052b0:	mov	w0, #0x1                   	// #1
  4052b4:	ldr	x2, [x2, #4072]
  4052b8:	cmp	x1, x2
  4052bc:	b.ls	405278 <wcrtomb@plt+0x658>  // b.plast
  4052c0:	bl	404650 <abort@plt>
  4052c4:	nop
  4052c8:	stp	x29, x30, [sp, #-224]!
  4052cc:	mov	x29, sp
  4052d0:	stp	x25, x26, [sp, #64]
  4052d4:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  4052d8:	stp	x27, x28, [sp, #80]
  4052dc:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  4052e0:	stp	x21, x22, [sp, #32]
  4052e4:	ldr	x22, [x27, #16]
  4052e8:	stp	x19, x20, [sp, #16]
  4052ec:	mov	x19, x0
  4052f0:	ldr	x21, [x26, #1048]
  4052f4:	stp	x23, x24, [sp, #48]
  4052f8:	add	x22, x22, x0
  4052fc:	subs	x21, x21, x0
  405300:	mov	x23, #0x0                   	// #0
  405304:	b.eq	405330 <wcrtomb@plt+0x710>  // b.none
  405308:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40530c:	and	x23, x21, #0x1ff
  405310:	ldr	w0, [x0, #432]
  405314:	tbz	w0, #22, 405330 <wcrtomb@plt+0x710>
  405318:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40531c:	ldr	x0, [x0, #1664]
  405320:	orr	x0, x23, x0
  405324:	cbnz	x0, 405330 <wcrtomb@plt+0x710>
  405328:	cbnz	x19, 40543c <wcrtomb@plt+0x81c>
  40532c:	nop
  405330:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405334:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  405338:	add	x20, x20, #0x4d0
  40533c:	add	x25, x25, #0x450
  405340:	cbnz	x23, 4053f0 <wcrtomb@plt+0x7d0>
  405344:	nop
  405348:	cmp	x21, #0x0
  40534c:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  405350:	b.eq	4053f4 <wcrtomb@plt+0x7d4>  // b.none
  405354:	ldrb	w0, [x20, #444]
  405358:	cbz	w0, 4053f4 <wcrtomb@plt+0x7d4>
  40535c:	mov	w23, #0x3fffffff            	// #1073741823
  405360:	mov	w28, #0xc0000000            	// #-1073741824
  405364:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  405368:	b	4053b0 <wcrtomb@plt+0x790>
  40536c:	add	w0, w0, w28
  405370:	mov	x2, x21
  405374:	mov	x1, x22
  405378:	bl	435660 <wcrtomb@plt+0x30a40>
  40537c:	mov	x19, x0
  405380:	cmn	x19, #0x1
  405384:	b.ne	4053d4 <wcrtomb@plt+0x7b4>  // b.any
  405388:	ldr	x0, [x24, #864]
  40538c:	ldr	x0, [x0]
  405390:	bl	433c18 <wcrtomb@plt+0x2eff8>
  405394:	ldr	x0, [x20, #432]
  405398:	cbz	x0, 4054e8 <wcrtomb@plt+0x8c8>
  40539c:	ldr	w0, [x20, #440]
  4053a0:	add	w1, w0, #0x1
  4053a4:	str	w1, [x20, #440]
  4053a8:	cmp	w0, #0xa
  4053ac:	b.gt	4054b0 <wcrtomb@plt+0x890>
  4053b0:	ldr	w0, [x25]
  4053b4:	cmp	w0, w23
  4053b8:	b.gt	40536c <wcrtomb@plt+0x74c>
  4053bc:	mov	x2, x21
  4053c0:	mov	x1, x22
  4053c4:	bl	44f230 <argp_parse@@Base+0xf450>
  4053c8:	mov	x19, x0
  4053cc:	cmn	x19, #0x1
  4053d0:	b.eq	405388 <wcrtomb@plt+0x768>  // b.none
  4053d4:	cbz	x19, 4053f4 <wcrtomb@plt+0x7d4>
  4053d8:	ldrb	w0, [x20, #444]
  4053dc:	cbz	w0, 405508 <wcrtomb@plt+0x8e8>
  4053e0:	sub	x21, x21, x19
  4053e4:	add	x22, x22, x19
  4053e8:	and	x23, x21, #0x1ff
  4053ec:	cbz	x23, 405348 <wcrtomb@plt+0x728>
  4053f0:	cbnz	x19, 40535c <wcrtomb@plt+0x73c>
  4053f4:	ldr	x0, [x26, #1048]
  4053f8:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4053fc:	ldr	x1, [x27, #16]
  405400:	sub	x21, x0, x21
  405404:	ldr	x0, [x2, #4064]
  405408:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40540c:	and	x21, x21, #0xfffffffffffffe00
  405410:	add	x21, x1, x21
  405414:	add	x0, x0, #0x1
  405418:	str	x21, [x3, #4072]
  40541c:	str	x0, [x2, #4064]
  405420:	ldp	x19, x20, [sp, #16]
  405424:	ldp	x21, x22, [sp, #32]
  405428:	ldp	x23, x24, [sp, #48]
  40542c:	ldp	x25, x26, [sp, #64]
  405430:	ldp	x27, x28, [sp, #80]
  405434:	ldp	x29, x30, [sp], #224
  405438:	ret
  40543c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  405440:	add	x2, sp, #0x60
  405444:	ldr	w1, [x1, #1104]
  405448:	bl	4049a0 <__fxstat@plt>
  40544c:	cbnz	w0, 405558 <wcrtomb@plt+0x938>
  405450:	ldr	w0, [sp, #112]
  405454:	mov	w1, #0xb000                	// #45056
  405458:	and	w0, w0, w1
  40545c:	cmp	w0, #0x2, lsl #12
  405460:	b.ne	405330 <wcrtomb@plt+0x710>  // b.any
  405464:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  405468:	lsr	x20, x19, #9
  40546c:	ldr	x0, [x0, #1136]
  405470:	cbz	x0, 405478 <wcrtomb@plt+0x858>
  405474:	blr	x0
  405478:	mov	w4, #0x5                   	// #5
  40547c:	mov	x3, x20
  405480:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405484:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405488:	add	x2, x2, #0x998
  40548c:	add	x1, x1, #0x9b8
  405490:	mov	x0, #0x0                   	// #0
  405494:	bl	4048f0 <dcngettext@plt>
  405498:	mov	x3, x20
  40549c:	mov	x2, x0
  4054a0:	mov	w1, #0x0                   	// #0
  4054a4:	mov	w0, #0x0                   	// #0
  4054a8:	bl	404050 <error@plt>
  4054ac:	b	405330 <wcrtomb@plt+0x710>
  4054b0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4054b4:	ldr	x0, [x0, #1136]
  4054b8:	cbz	x0, 4054c0 <wcrtomb@plt+0x8a0>
  4054bc:	blr	x0
  4054c0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4054c4:	add	x1, x1, #0x9f8
  4054c8:	mov	w2, #0x5                   	// #5
  4054cc:	mov	x0, #0x0                   	// #0
  4054d0:	bl	4049c0 <dcgettext@plt>
  4054d4:	mov	x2, x0
  4054d8:	mov	w1, #0x0                   	// #0
  4054dc:	mov	w0, #0x0                   	// #0
  4054e0:	bl	404050 <error@plt>
  4054e4:	bl	410460 <wcrtomb@plt+0xb840>
  4054e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4054ec:	ldr	x0, [x0, #1136]
  4054f0:	cbz	x0, 4054f8 <wcrtomb@plt+0x8d8>
  4054f4:	blr	x0
  4054f8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4054fc:	mov	w2, #0x5                   	// #5
  405500:	add	x1, x1, #0x9d0
  405504:	b	4054cc <wcrtomb@plt+0x8ac>
  405508:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40550c:	ldr	x0, [x26, #1048]
  405510:	ldr	x1, [x1, #1136]
  405514:	sub	x21, x0, x21
  405518:	cbz	x1, 405520 <wcrtomb@plt+0x900>
  40551c:	blr	x1
  405520:	mov	x3, x21
  405524:	mov	w4, #0x5                   	// #5
  405528:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40552c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405530:	add	x2, x2, #0xa18
  405534:	add	x1, x1, #0xa40
  405538:	mov	x0, #0x0                   	// #0
  40553c:	bl	4048f0 <dcngettext@plt>
  405540:	mov	x3, x21
  405544:	mov	x2, x0
  405548:	mov	w1, #0x0                   	// #0
  40554c:	mov	w0, #0x0                   	// #0
  405550:	bl	404050 <error@plt>
  405554:	bl	410460 <wcrtomb@plt+0xb840>
  405558:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40555c:	ldr	x0, [x0, #864]
  405560:	ldr	x0, [x0]
  405564:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  405568:	b	405330 <wcrtomb@plt+0x710>
  40556c:	nop
  405570:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  405574:	ldrb	w3, [x3, #204]
  405578:	cbnz	w3, 405580 <wcrtomb@plt+0x960>
  40557c:	ret
  405580:	stp	x29, x30, [sp, #-48]!
  405584:	mov	x29, sp
  405588:	stp	x19, x20, [sp, #16]
  40558c:	mov	x20, x2
  405590:	stp	x21, x22, [sp, #32]
  405594:	mov	x22, x0
  405598:	mov	x21, x1
  40559c:	mov	x0, #0x30                  	// #48
  4055a0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4055a4:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4055a8:	add	x2, x2, #0x4d0
  4055ac:	mov	x19, x0
  4055b0:	ldr	x0, [x2, #448]
  4055b4:	cbz	x0, 4055fc <wcrtomb@plt+0x9dc>
  4055b8:	str	x19, [x0]
  4055bc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4055c0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4055c4:	str	x19, [x2, #448]
  4055c8:	mov	x0, x22
  4055cc:	ldr	x2, [x3, #16]
  4055d0:	ldr	x1, [x1, #40]
  4055d4:	sub	x1, x1, x2
  4055d8:	asr	x1, x1, #9
  4055dc:	stp	xzr, x1, [x19]
  4055e0:	bl	450328 <argp_parse@@Base+0x10548>
  4055e4:	stp	x0, x21, [x19, #16]
  4055e8:	stp	x20, xzr, [x19, #32]
  4055ec:	ldp	x19, x20, [sp, #16]
  4055f0:	ldp	x21, x22, [sp, #32]
  4055f4:	ldp	x29, x30, [sp], #48
  4055f8:	ret
  4055fc:	str	x19, [x2, #456]
  405600:	b	4055bc <wcrtomb@plt+0x99c>
  405604:	nop
  405608:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40560c:	add	x0, x0, #0x4d0
  405610:	add	x0, x0, #0x160
  405614:	b	417760 <wcrtomb@plt+0x12b40>
  405618:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40561c:	mov	x1, x0
  405620:	ldrb	w0, [x2, #204]
  405624:	cbnz	w0, 40562c <wcrtomb@plt+0xa0c>
  405628:	ret
  40562c:	stp	x29, x30, [sp, #-64]!
  405630:	mov	x0, #0x30                  	// #48
  405634:	mov	x29, sp
  405638:	stp	x19, x20, [sp, #16]
  40563c:	ldr	x20, [x1]
  405640:	str	d8, [sp, #32]
  405644:	ldr	d8, [x1, #136]
  405648:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40564c:	mov	x19, x0
  405650:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405654:	add	x2, x2, #0x4d0
  405658:	ldr	x0, [x2, #448]
  40565c:	cbz	x0, 4056b4 <wcrtomb@plt+0xa94>
  405660:	str	x19, [x0]
  405664:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  405668:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  40566c:	dup	v0.2d, v8.d[0]
  405670:	mov	x0, x20
  405674:	ldr	x3, [x3, #16]
  405678:	str	x19, [x2, #448]
  40567c:	ldr	x1, [x1, #40]
  405680:	str	q0, [sp, #48]
  405684:	sub	x1, x1, x3
  405688:	asr	x1, x1, #9
  40568c:	stp	xzr, x1, [x19]
  405690:	bl	450328 <argp_parse@@Base+0x10548>
  405694:	str	x0, [x19, #16]
  405698:	ldr	q0, [sp, #48]
  40569c:	str	xzr, [x19, #40]
  4056a0:	ldr	d8, [sp, #32]
  4056a4:	stur	q0, [x19, #24]
  4056a8:	ldp	x19, x20, [sp, #16]
  4056ac:	ldp	x29, x30, [sp], #64
  4056b0:	ret
  4056b4:	str	x19, [x2, #456]
  4056b8:	b	405664 <wcrtomb@plt+0xa44>
  4056bc:	nop
  4056c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4056c4:	ldrb	w0, [x0, #204]
  4056c8:	cbnz	w0, 4056d0 <wcrtomb@plt+0xab0>
  4056cc:	ret
  4056d0:	stp	x29, x30, [sp, #-48]!
  4056d4:	mov	x29, sp
  4056d8:	str	x21, [sp, #32]
  4056dc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4056e0:	add	x21, x21, #0x4d0
  4056e4:	stp	x19, x20, [sp, #16]
  4056e8:	ldr	x19, [x21, #456]
  4056ec:	cbz	x19, 40570c <wcrtomb@plt+0xaec>
  4056f0:	mov	x20, x19
  4056f4:	ldr	x19, [x19]
  4056f8:	ldr	x0, [x20, #16]
  4056fc:	bl	4047b0 <free@plt>
  405700:	mov	x0, x20
  405704:	bl	4047b0 <free@plt>
  405708:	cbnz	x19, 4056f0 <wcrtomb@plt+0xad0>
  40570c:	stp	xzr, xzr, [x21, #448]
  405710:	ldp	x19, x20, [sp, #16]
  405714:	ldr	x21, [sp, #32]
  405718:	ldp	x29, x30, [sp], #48
  40571c:	ret
  405720:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405724:	ldr	x1, [x1, #1688]
  405728:	cbz	x1, 405730 <wcrtomb@plt+0xb10>
  40572c:	str	x0, [x1, #32]
  405730:	ret
  405734:	nop
  405738:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40573c:	str	wzr, [x0, #1672]
  405740:	ret
  405744:	nop
  405748:	stp	x29, x30, [sp, #-32]!
  40574c:	mov	x29, sp
  405750:	str	x19, [sp, #16]
  405754:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  405758:	add	x19, x19, #0x348
  40575c:	mov	x0, x19
  405760:	bl	444438 <argp_parse@@Base+0x4658>
  405764:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  405768:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40576c:	add	x1, x1, #0x428
  405770:	add	x0, x0, #0x3e0
  405774:	ldp	x2, x3, [x19]
  405778:	stp	x2, x3, [x1]
  40577c:	stp	x2, x3, [x0]
  405780:	ldr	x19, [sp, #16]
  405784:	ldp	x29, x30, [sp], #32
  405788:	ret
  40578c:	nop
  405790:	stp	x29, x30, [sp, #-48]!
  405794:	mov	x29, sp
  405798:	add	x0, sp, #0x20
  40579c:	str	x19, [sp, #16]
  4057a0:	bl	444438 <argp_parse@@Base+0x4658>
  4057a4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4057a8:	mov	x2, #0xcd6500000000        	// #225833675390976
  4057ac:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4057b0:	movk	x2, #0x41cd, lsl #48
  4057b4:	add	x0, x3, #0x3e0
  4057b8:	fmov	d1, x2
  4057bc:	ldr	d2, [x19, #1232]
  4057c0:	ldp	x2, x1, [sp, #32]
  4057c4:	ldr	x4, [x0, #8]
  4057c8:	ldr	x3, [x3, #992]
  4057cc:	sub	x1, x1, x4
  4057d0:	sub	x2, x2, x3
  4057d4:	scvtf	d0, x1
  4057d8:	fdiv	d0, d0, d1
  4057dc:	scvtf	d1, x2
  4057e0:	fadd	d0, d0, d1
  4057e4:	fadd	d0, d0, d2
  4057e8:	str	d0, [x19, #1232]
  4057ec:	bl	444438 <argp_parse@@Base+0x4658>
  4057f0:	ldr	d0, [x19, #1232]
  4057f4:	ldr	x19, [sp, #16]
  4057f8:	ldp	x29, x30, [sp], #48
  4057fc:	ret
  405800:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  405804:	mov	x1, x0
  405808:	ldr	x0, [x2, #1032]
  40580c:	cbz	x0, 405814 <wcrtomb@plt+0xbf4>
  405810:	ret
  405814:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405818:	ldr	w2, [x2, #1696]
  40581c:	cbz	w2, 405810 <wcrtomb@plt+0xbf0>
  405820:	adrp	x3, 493000 <_obstack_memory_used@@Base+0x41bf0>
  405824:	add	x3, x3, #0x680
  405828:	str	wzr, [x1]
  40582c:	ldr	w5, [x3, #8]
  405830:	cbz	w5, 40590c <wcrtomb@plt+0xcec>
  405834:	cmp	w2, w5
  405838:	b.eq	405918 <wcrtomb@plt+0xcf8>  // b.none
  40583c:	ldr	w5, [x3, #32]
  405840:	cbz	w5, 405924 <wcrtomb@plt+0xd04>
  405844:	cmp	w2, w5
  405848:	b.eq	405930 <wcrtomb@plt+0xd10>  // b.none
  40584c:	ldr	w5, [x3, #56]
  405850:	cbz	w5, 40593c <wcrtomb@plt+0xd1c>
  405854:	cmp	w2, w5
  405858:	b.eq	405948 <wcrtomb@plt+0xd28>  // b.none
  40585c:	ldr	w4, [x3, #80]
  405860:	cbz	w4, 405954 <wcrtomb@plt+0xd34>
  405864:	cmp	w2, w4
  405868:	b.eq	405960 <wcrtomb@plt+0xd40>  // b.none
  40586c:	ldr	w5, [x3, #104]
  405870:	cbz	w5, 40596c <wcrtomb@plt+0xd4c>
  405874:	cmp	w2, w5
  405878:	b.eq	405978 <wcrtomb@plt+0xd58>  // b.none
  40587c:	ldr	w5, [x3, #128]
  405880:	cbz	w5, 405984 <wcrtomb@plt+0xd64>
  405884:	cmp	w2, w5
  405888:	b.eq	405900 <wcrtomb@plt+0xce0>  // b.none
  40588c:	ldr	w5, [x3, #152]
  405890:	cbz	w5, 405990 <wcrtomb@plt+0xd70>
  405894:	cmp	w2, w5
  405898:	b.eq	40599c <wcrtomb@plt+0xd7c>  // b.none
  40589c:	ldr	w5, [x3, #176]
  4058a0:	cbz	w5, 4059a8 <wcrtomb@plt+0xd88>
  4058a4:	cmp	w2, w5
  4058a8:	b.eq	4059b4 <wcrtomb@plt+0xd94>  // b.none
  4058ac:	ldr	w4, [x3, #200]
  4058b0:	cbz	w4, 4059c0 <wcrtomb@plt+0xda0>
  4058b4:	cmp	w2, w4
  4058b8:	b.eq	4059cc <wcrtomb@plt+0xdac>  // b.none
  4058bc:	ldr	w5, [x3, #224]
  4058c0:	cbz	w5, 4059d8 <wcrtomb@plt+0xdb8>
  4058c4:	cmp	w2, w5
  4058c8:	b.eq	4059e4 <wcrtomb@plt+0xdc4>  // b.none
  4058cc:	ldr	w5, [x3, #248]
  4058d0:	cbz	w5, 4059f0 <wcrtomb@plt+0xdd0>
  4058d4:	cmp	w2, w5
  4058d8:	b.eq	4059fc <wcrtomb@plt+0xddc>  // b.none
  4058dc:	ldr	w2, [x3, #272]
  4058e0:	cbz	w2, 405a08 <wcrtomb@plt+0xde8>
  4058e4:	mov	w2, #0xc                   	// #12
  4058e8:	mov	w0, #0xb                   	// #11
  4058ec:	mov	w4, #0x18                  	// #24
  4058f0:	smaddl	x3, w0, w4, x3
  4058f4:	ldr	x0, [x3, #16]
  4058f8:	str	w2, [x1]
  4058fc:	ret
  405900:	mov	w2, #0x6                   	// #6
  405904:	mov	w0, #0x5                   	// #5
  405908:	b	4058ec <wcrtomb@plt+0xccc>
  40590c:	mov	w2, #0x0                   	// #0
  405910:	str	w2, [x1]
  405914:	ret
  405918:	mov	w2, #0x1                   	// #1
  40591c:	mov	w0, #0x0                   	// #0
  405920:	b	4058ec <wcrtomb@plt+0xccc>
  405924:	mov	w2, #0x1                   	// #1
  405928:	str	w2, [x1]
  40592c:	b	405914 <wcrtomb@plt+0xcf4>
  405930:	mov	w2, #0x2                   	// #2
  405934:	mov	w0, #0x1                   	// #1
  405938:	b	4058ec <wcrtomb@plt+0xccc>
  40593c:	mov	w2, #0x2                   	// #2
  405940:	str	w2, [x1]
  405944:	b	405914 <wcrtomb@plt+0xcf4>
  405948:	mov	w2, #0x3                   	// #3
  40594c:	mov	w0, #0x2                   	// #2
  405950:	b	4058ec <wcrtomb@plt+0xccc>
  405954:	mov	w2, #0x3                   	// #3
  405958:	str	w2, [x1]
  40595c:	b	405914 <wcrtomb@plt+0xcf4>
  405960:	mov	w2, #0x4                   	// #4
  405964:	mov	w0, #0x3                   	// #3
  405968:	b	4058ec <wcrtomb@plt+0xccc>
  40596c:	mov	w2, #0x4                   	// #4
  405970:	str	w2, [x1]
  405974:	b	405914 <wcrtomb@plt+0xcf4>
  405978:	mov	w2, #0x5                   	// #5
  40597c:	mov	w0, #0x4                   	// #4
  405980:	b	4058ec <wcrtomb@plt+0xccc>
  405984:	mov	w2, #0x5                   	// #5
  405988:	str	w2, [x1]
  40598c:	b	405914 <wcrtomb@plt+0xcf4>
  405990:	mov	w2, #0x6                   	// #6
  405994:	str	w2, [x1]
  405998:	b	405914 <wcrtomb@plt+0xcf4>
  40599c:	mov	w2, #0x7                   	// #7
  4059a0:	mov	w0, #0x6                   	// #6
  4059a4:	b	4058ec <wcrtomb@plt+0xccc>
  4059a8:	mov	w2, #0x7                   	// #7
  4059ac:	str	w2, [x1]
  4059b0:	b	405914 <wcrtomb@plt+0xcf4>
  4059b4:	mov	w2, #0x8                   	// #8
  4059b8:	mov	w0, #0x7                   	// #7
  4059bc:	b	4058ec <wcrtomb@plt+0xccc>
  4059c0:	mov	w2, #0x8                   	// #8
  4059c4:	str	w2, [x1]
  4059c8:	b	405914 <wcrtomb@plt+0xcf4>
  4059cc:	mov	w2, #0x9                   	// #9
  4059d0:	mov	w0, #0x8                   	// #8
  4059d4:	b	4058ec <wcrtomb@plt+0xccc>
  4059d8:	mov	w2, #0x9                   	// #9
  4059dc:	str	w2, [x1]
  4059e0:	b	405914 <wcrtomb@plt+0xcf4>
  4059e4:	mov	w2, #0xa                   	// #10
  4059e8:	mov	w0, #0x9                   	// #9
  4059ec:	b	4058ec <wcrtomb@plt+0xccc>
  4059f0:	mov	w2, #0xa                   	// #10
  4059f4:	str	w2, [x1]
  4059f8:	b	405914 <wcrtomb@plt+0xcf4>
  4059fc:	mov	w2, #0xb                   	// #11
  405a00:	mov	w0, #0xa                   	// #10
  405a04:	b	4058ec <wcrtomb@plt+0xccc>
  405a08:	mov	w2, #0xb                   	// #11
  405a0c:	str	w2, [x1]
  405a10:	b	405914 <wcrtomb@plt+0xcf4>
  405a14:	nop
  405a18:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  405a1c:	mov	x4, x0
  405a20:	ldr	x0, [x1, #1032]
  405a24:	cbnz	x0, 405bc8 <wcrtomb@plt+0xfa8>
  405a28:	ldr	w1, [x4]
  405a2c:	adrp	x5, 493000 <_obstack_memory_used@@Base+0x41bf0>
  405a30:	add	x5, x5, #0x680
  405a34:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405a38:	add	x7, x5, #0x8
  405a3c:	sbfiz	x2, x1, #1, #32
  405a40:	ldr	w3, [x3, #1696]
  405a44:	add	x2, x2, w1, sxtw
  405a48:	lsl	x2, x2, #3
  405a4c:	ldr	w2, [x7, x2]
  405a50:	cbz	w2, 405bc0 <wcrtomb@plt+0xfa0>
  405a54:	cmp	w3, w2
  405a58:	add	w2, w1, #0x1
  405a5c:	b.eq	405bd4 <wcrtomb@plt+0xfb4>  // b.none
  405a60:	sbfiz	x6, x2, #1, #32
  405a64:	add	x6, x6, w2, sxtw
  405a68:	lsl	x6, x6, #3
  405a6c:	ldr	w6, [x7, x6]
  405a70:	cbz	w6, 405be8 <wcrtomb@plt+0xfc8>
  405a74:	cmp	w3, w6
  405a78:	add	w6, w1, #0x2
  405a7c:	b.eq	405bf4 <wcrtomb@plt+0xfd4>  // b.none
  405a80:	sbfiz	x2, x6, #1, #32
  405a84:	add	x2, x2, w6, sxtw
  405a88:	lsl	x2, x2, #3
  405a8c:	ldr	w2, [x7, x2]
  405a90:	cbz	w2, 405c10 <wcrtomb@plt+0xff0>
  405a94:	cmp	w3, w2
  405a98:	add	w2, w1, #0x3
  405a9c:	b.eq	405bd0 <wcrtomb@plt+0xfb0>  // b.none
  405aa0:	sbfiz	x6, x2, #1, #32
  405aa4:	add	x6, x6, w2, sxtw
  405aa8:	lsl	x6, x6, #3
  405aac:	ldr	w6, [x7, x6]
  405ab0:	cbz	w6, 405be8 <wcrtomb@plt+0xfc8>
  405ab4:	cmp	w3, w6
  405ab8:	add	w6, w1, #0x4
  405abc:	b.eq	405bf4 <wcrtomb@plt+0xfd4>  // b.none
  405ac0:	sbfiz	x2, x6, #1, #32
  405ac4:	add	x2, x2, w6, sxtw
  405ac8:	lsl	x2, x2, #3
  405acc:	ldr	w2, [x7, x2]
  405ad0:	cbz	w2, 405c10 <wcrtomb@plt+0xff0>
  405ad4:	cmp	w3, w2
  405ad8:	add	w2, w1, #0x5
  405adc:	b.eq	405bd0 <wcrtomb@plt+0xfb0>  // b.none
  405ae0:	sbfiz	x6, x2, #1, #32
  405ae4:	add	x6, x6, w2, sxtw
  405ae8:	lsl	x6, x6, #3
  405aec:	ldr	w6, [x7, x6]
  405af0:	cbz	w6, 405be8 <wcrtomb@plt+0xfc8>
  405af4:	cmp	w3, w6
  405af8:	add	w6, w1, #0x6
  405afc:	b.eq	405bf4 <wcrtomb@plt+0xfd4>  // b.none
  405b00:	sbfiz	x2, x6, #1, #32
  405b04:	add	x2, x2, w6, sxtw
  405b08:	lsl	x2, x2, #3
  405b0c:	ldr	w2, [x7, x2]
  405b10:	cbz	w2, 405c10 <wcrtomb@plt+0xff0>
  405b14:	cmp	w3, w2
  405b18:	add	w2, w1, #0x7
  405b1c:	b.eq	405bd0 <wcrtomb@plt+0xfb0>  // b.none
  405b20:	sbfiz	x6, x2, #1, #32
  405b24:	add	x6, x6, w2, sxtw
  405b28:	lsl	x6, x6, #3
  405b2c:	ldr	w6, [x7, x6]
  405b30:	cbz	w6, 405be8 <wcrtomb@plt+0xfc8>
  405b34:	cmp	w3, w6
  405b38:	add	w6, w1, #0x8
  405b3c:	b.eq	405bf4 <wcrtomb@plt+0xfd4>  // b.none
  405b40:	sbfiz	x2, x6, #1, #32
  405b44:	add	x2, x2, w6, sxtw
  405b48:	lsl	x2, x2, #3
  405b4c:	ldr	w2, [x7, x2]
  405b50:	cbz	w2, 405c10 <wcrtomb@plt+0xff0>
  405b54:	cmp	w3, w2
  405b58:	add	w2, w1, #0x9
  405b5c:	b.eq	405bd0 <wcrtomb@plt+0xfb0>  // b.none
  405b60:	sbfiz	x6, x2, #1, #32
  405b64:	add	x6, x6, w2, sxtw
  405b68:	lsl	x6, x6, #3
  405b6c:	ldr	w6, [x7, x6]
  405b70:	cbz	w6, 405be8 <wcrtomb@plt+0xfc8>
  405b74:	cmp	w3, w6
  405b78:	add	w6, w1, #0xa
  405b7c:	b.eq	405bf4 <wcrtomb@plt+0xfd4>  // b.none
  405b80:	sbfiz	x2, x6, #1, #32
  405b84:	add	x2, x2, w6, sxtw
  405b88:	lsl	x2, x2, #3
  405b8c:	ldr	w2, [x7, x2]
  405b90:	cbz	w2, 405c10 <wcrtomb@plt+0xff0>
  405b94:	cmp	w3, w2
  405b98:	add	w2, w1, #0xb
  405b9c:	b.eq	405bd0 <wcrtomb@plt+0xfb0>  // b.none
  405ba0:	sbfiz	x6, x2, #1, #32
  405ba4:	add	x6, x6, w2, sxtw
  405ba8:	lsl	x6, x6, #3
  405bac:	ldr	w6, [x7, x6]
  405bb0:	cbz	w6, 405be8 <wcrtomb@plt+0xfc8>
  405bb4:	add	w1, w1, #0xc
  405bb8:	cmp	w3, w6
  405bbc:	b.eq	405c1c <wcrtomb@plt+0xffc>  // b.none
  405bc0:	str	w1, [x4]
  405bc4:	ret
  405bc8:	mov	x0, #0x0                   	// #0
  405bcc:	ret
  405bd0:	mov	w1, w6
  405bd4:	mov	w0, #0x18                  	// #24
  405bd8:	smaddl	x1, w1, w0, x5
  405bdc:	ldr	x0, [x1, #16]
  405be0:	str	w2, [x4]
  405be4:	ret
  405be8:	mov	w1, w2
  405bec:	str	w1, [x4]
  405bf0:	b	405bc4 <wcrtomb@plt+0xfa4>
  405bf4:	mov	w1, w2
  405bf8:	mov	w0, #0x18                  	// #24
  405bfc:	mov	w2, w6
  405c00:	smaddl	x1, w1, w0, x5
  405c04:	ldr	x0, [x1, #16]
  405c08:	str	w2, [x4]
  405c0c:	b	405be4 <wcrtomb@plt+0xfc4>
  405c10:	mov	w1, w6
  405c14:	str	w1, [x4]
  405c18:	b	405bc4 <wcrtomb@plt+0xfa4>
  405c1c:	mov	w0, w1
  405c20:	mov	w1, w2
  405c24:	mov	w2, w0
  405c28:	b	405bd4 <wcrtomb@plt+0xfb4>
  405c2c:	nop
  405c30:	stp	x29, x30, [sp, #-112]!
  405c34:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  405c38:	mov	x29, sp
  405c3c:	ldr	w4, [x4, #988]
  405c40:	stp	x19, x20, [sp, #16]
  405c44:	mov	x19, x0
  405c48:	cmp	w4, #0x4
  405c4c:	stp	x21, x22, [sp, #32]
  405c50:	mov	x22, x1
  405c54:	mov	w21, w3
  405c58:	b.eq	405d1c <wcrtomb@plt+0x10fc>  // b.none
  405c5c:	b.ls	405d04 <wcrtomb@plt+0x10e4>  // b.plast
  405c60:	cmp	w4, #0x7
  405c64:	b.hi	405cd4 <wcrtomb@plt+0x10b4>  // b.pmore
  405c68:	ldr	x1, [x1]
  405c6c:	mov	w2, #0x5                   	// #5
  405c70:	mov	x0, #0x0                   	// #0
  405c74:	bl	4049c0 <dcgettext@plt>
  405c78:	mov	x1, x0
  405c7c:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405c80:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  405c84:	mov	x0, x19
  405c88:	ldr	x2, [x2, #4064]
  405c8c:	ldr	x3, [x3, #1048]
  405c90:	mul	x2, x2, x3
  405c94:	ucvtf	d0, x2
  405c98:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405c9c:	mov	w20, w0
  405ca0:	cbz	w21, 405cc0 <wcrtomb@plt+0x10a0>
  405ca4:	ldp	x0, x1, [x19, #40]
  405ca8:	cmp	x0, x1
  405cac:	b.cs	405e40 <wcrtomb@plt+0x1220>  // b.hs, b.nlast
  405cb0:	add	x1, x0, #0x1
  405cb4:	add	w20, w20, #0x1
  405cb8:	str	x1, [x19, #40]
  405cbc:	strb	w21, [x0]
  405cc0:	mov	w0, w20
  405cc4:	ldp	x19, x20, [sp, #16]
  405cc8:	ldp	x21, x22, [sp, #32]
  405ccc:	ldp	x29, x30, [sp], #112
  405cd0:	ret
  405cd4:	cmp	w4, #0x8
  405cd8:	b.ne	405d10 <wcrtomb@plt+0x10f0>  // b.any
  405cdc:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405ce0:	add	x2, x2, #0x4d0
  405ce4:	ldr	x1, [x22, #8]
  405ce8:	mov	x0, x19
  405cec:	ldp	d1, d0, [x2, #472]
  405cf0:	fadd	d0, d1, d0
  405cf4:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405cf8:	mov	w20, w0
  405cfc:	cbz	w21, 405cc0 <wcrtomb@plt+0x10a0>
  405d00:	b	405ca4 <wcrtomb@plt+0x1084>
  405d04:	sub	w4, w4, #0x1
  405d08:	cmp	w4, #0x2
  405d0c:	b.ls	405cdc <wcrtomb@plt+0x10bc>  // b.plast
  405d10:	stp	x23, x24, [sp, #48]
  405d14:	stp	x25, x26, [sp, #64]
  405d18:	bl	404650 <abort@plt>
  405d1c:	stp	x23, x24, [sp, #48]
  405d20:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405d24:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  405d28:	stp	x25, x26, [sp, #64]
  405d2c:	mov	w25, w2
  405d30:	ldr	x3, [x23, #1048]
  405d34:	ldr	x2, [x24, #4064]
  405d38:	ldr	x1, [x1]
  405d3c:	mul	x2, x2, x3
  405d40:	ucvtf	d0, x2
  405d44:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405d48:	mov	w20, w0
  405d4c:	ldp	x0, x1, [x19, #40]
  405d50:	cmp	x0, x1
  405d54:	b.cs	405e54 <wcrtomb@plt+0x1234>  // b.hs, b.nlast
  405d58:	add	x1, x0, #0x1
  405d5c:	str	x1, [x19, #40]
  405d60:	strb	w25, [x0]
  405d64:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405d68:	add	x26, x26, #0x4d0
  405d6c:	ldr	x1, [x22, #8]
  405d70:	mov	x0, x19
  405d74:	ldp	d1, d0, [x26, #472]
  405d78:	add	w20, w20, #0x1
  405d7c:	fadd	d0, d1, d0
  405d80:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405d84:	add	w20, w20, w0
  405d88:	ldp	x1, x0, [x19, #40]
  405d8c:	cmp	x1, x0
  405d90:	b.cs	405e64 <wcrtomb@plt+0x1244>  // b.hs, b.nlast
  405d94:	add	x0, x1, #0x1
  405d98:	str	x0, [x19, #40]
  405d9c:	strb	w25, [x1]
  405da0:	ldr	x1, [x22, #16]
  405da4:	add	w20, w20, #0x1
  405da8:	cbz	x1, 405db4 <wcrtomb@plt+0x1194>
  405dac:	ldrb	w0, [x1]
  405db0:	cbnz	w0, 405e14 <wcrtomb@plt+0x11f4>
  405db4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  405db8:	add	x1, sp, #0x58
  405dbc:	ldr	x0, [x24, #4064]
  405dc0:	ldr	x3, [x2, #64]
  405dc4:	ldr	x2, [x23, #1048]
  405dc8:	sub	x0, x0, x3
  405dcc:	ldp	d0, d1, [x26, #472]
  405dd0:	mul	x0, x0, x2
  405dd4:	fadd	d1, d0, d1
  405dd8:	ucvtf	d0, x0
  405ddc:	fsub	d0, d0, d1
  405de0:	fcvtzu	x0, d0
  405de4:	bl	446868 <argp_parse@@Base+0x6a88>
  405de8:	mov	x3, x0
  405dec:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  405df0:	mov	x0, x19
  405df4:	add	x2, x2, #0x828
  405df8:	mov	w1, #0x1                   	// #1
  405dfc:	bl	404700 <__fprintf_chk@plt>
  405e00:	add	w20, w20, w0
  405e04:	ldp	x23, x24, [sp, #48]
  405e08:	ldp	x25, x26, [sp, #64]
  405e0c:	cbz	w21, 405cc0 <wcrtomb@plt+0x10a0>
  405e10:	b	405ca4 <wcrtomb@plt+0x1084>
  405e14:	mov	w2, #0x5                   	// #5
  405e18:	mov	x0, #0x0                   	// #0
  405e1c:	bl	4049c0 <dcgettext@plt>
  405e20:	mov	x3, x0
  405e24:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405e28:	mov	x0, x19
  405e2c:	add	x2, x2, #0x920
  405e30:	mov	w1, #0x1                   	// #1
  405e34:	bl	404700 <__fprintf_chk@plt>
  405e38:	add	w20, w20, w0
  405e3c:	b	405db4 <wcrtomb@plt+0x1194>
  405e40:	and	w1, w21, #0xff
  405e44:	mov	x0, x19
  405e48:	add	w20, w20, #0x1
  405e4c:	bl	404680 <__overflow@plt>
  405e50:	b	405cc0 <wcrtomb@plt+0x10a0>
  405e54:	and	w1, w25, #0xff
  405e58:	mov	x0, x19
  405e5c:	bl	404680 <__overflow@plt>
  405e60:	b	405d64 <wcrtomb@plt+0x1144>
  405e64:	and	w1, w25, #0xff
  405e68:	mov	x0, x19
  405e6c:	bl	404680 <__overflow@plt>
  405e70:	b	405da0 <wcrtomb@plt+0x1180>
  405e74:	nop
  405e78:	stp	x29, x30, [sp, #-80]!
  405e7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  405e80:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405e84:	mov	x29, sp
  405e88:	ldr	w0, [x0, #988]
  405e8c:	stp	x19, x20, [sp, #16]
  405e90:	cmp	w0, #0x4
  405e94:	ldr	x19, [x1, #1176]
  405e98:	b.eq	405f48 <wcrtomb@plt+0x1328>  // b.none
  405e9c:	b.ls	405f08 <wcrtomb@plt+0x12e8>  // b.plast
  405ea0:	cmp	w0, #0x7
  405ea4:	b.hi	405f38 <wcrtomb@plt+0x1318>  // b.pmore
  405ea8:	mov	w2, #0x5                   	// #5
  405eac:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405eb0:	mov	x0, #0x0                   	// #0
  405eb4:	add	x1, x1, #0xa80
  405eb8:	bl	4049c0 <dcgettext@plt>
  405ebc:	mov	x1, x0
  405ec0:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405ec4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  405ec8:	mov	x0, x19
  405ecc:	ldr	x2, [x2, #4064]
  405ed0:	ldr	x3, [x3, #1048]
  405ed4:	mul	x2, x2, x3
  405ed8:	ucvtf	d0, x2
  405edc:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405ee0:	ldp	x0, x1, [x19, #40]
  405ee4:	cmp	x0, x1
  405ee8:	b.cs	40603c <wcrtomb@plt+0x141c>  // b.hs, b.nlast
  405eec:	add	x1, x0, #0x1
  405ef0:	str	x1, [x19, #40]
  405ef4:	mov	w1, #0xa                   	// #10
  405ef8:	strb	w1, [x0]
  405efc:	ldp	x19, x20, [sp, #16]
  405f00:	ldp	x29, x30, [sp], #80
  405f04:	ret
  405f08:	sub	w0, w0, #0x1
  405f0c:	cmp	w0, #0x2
  405f10:	b.hi	405f40 <wcrtomb@plt+0x1320>  // b.pmore
  405f14:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405f18:	add	x2, x2, #0x4d0
  405f1c:	mov	x0, x19
  405f20:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405f24:	add	x1, x1, #0xa68
  405f28:	ldp	d1, d0, [x2, #472]
  405f2c:	fadd	d0, d1, d0
  405f30:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405f34:	b	405ee0 <wcrtomb@plt+0x12c0>
  405f38:	cmp	w0, #0x8
  405f3c:	b.eq	405f14 <wcrtomb@plt+0x12f4>  // b.none
  405f40:	stp	x21, x22, [sp, #32]
  405f44:	bl	404650 <abort@plt>
  405f48:	stp	x21, x22, [sp, #32]
  405f4c:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405f50:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  405f54:	ldr	x2, [x22, #4064]
  405f58:	mov	x0, x19
  405f5c:	ldr	x3, [x21, #1048]
  405f60:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405f64:	add	x1, x1, #0xa80
  405f68:	mul	x2, x2, x3
  405f6c:	ucvtf	d0, x2
  405f70:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405f74:	ldp	x0, x1, [x19, #40]
  405f78:	cmp	x0, x1
  405f7c:	b.cs	40605c <wcrtomb@plt+0x143c>  // b.hs, b.nlast
  405f80:	add	x1, x0, #0x1
  405f84:	str	x1, [x19, #40]
  405f88:	mov	w1, #0xa                   	// #10
  405f8c:	strb	w1, [x0]
  405f90:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  405f94:	add	x20, x20, #0x4d0
  405f98:	mov	x0, x19
  405f9c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405fa0:	add	x1, x1, #0xa68
  405fa4:	ldp	d1, d0, [x20, #472]
  405fa8:	fadd	d0, d1, d0
  405fac:	bl	404fe8 <wcrtomb@plt+0x3c8>
  405fb0:	ldp	x0, x1, [x19, #40]
  405fb4:	cmp	x0, x1
  405fb8:	b.cs	40604c <wcrtomb@plt+0x142c>  // b.hs, b.nlast
  405fbc:	add	x1, x0, #0x1
  405fc0:	str	x1, [x19, #40]
  405fc4:	mov	w1, #0xa                   	// #10
  405fc8:	strb	w1, [x0]
  405fcc:	mov	w2, #0x5                   	// #5
  405fd0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405fd4:	mov	x0, #0x0                   	// #0
  405fd8:	add	x1, x1, #0xa98
  405fdc:	bl	4049c0 <dcgettext@plt>
  405fe0:	mov	x3, x0
  405fe4:	mov	w1, #0x1                   	// #1
  405fe8:	mov	x0, x19
  405fec:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  405ff0:	add	x2, x2, #0x920
  405ff4:	bl	404700 <__fprintf_chk@plt>
  405ff8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  405ffc:	add	x1, sp, #0x38
  406000:	ldr	x0, [x22, #4064]
  406004:	ldr	x3, [x2, #64]
  406008:	ldr	x2, [x21, #1048]
  40600c:	sub	x0, x0, x3
  406010:	ldp	d0, d1, [x20, #472]
  406014:	mul	x0, x0, x2
  406018:	fadd	d1, d0, d1
  40601c:	ucvtf	d0, x0
  406020:	fsub	d0, d0, d1
  406024:	fcvtzu	x0, d0
  406028:	bl	446868 <argp_parse@@Base+0x6a88>
  40602c:	mov	x1, x19
  406030:	bl	404000 <fputs@plt>
  406034:	ldp	x21, x22, [sp, #32]
  406038:	b	405ee0 <wcrtomb@plt+0x12c0>
  40603c:	mov	x0, x19
  406040:	mov	w1, #0xa                   	// #10
  406044:	bl	404680 <__overflow@plt>
  406048:	b	405efc <wcrtomb@plt+0x12dc>
  40604c:	mov	x0, x19
  406050:	mov	w1, #0xa                   	// #10
  406054:	bl	404680 <__overflow@plt>
  406058:	b	405fcc <wcrtomb@plt+0x13ac>
  40605c:	mov	x0, x19
  406060:	mov	w1, #0xa                   	// #10
  406064:	bl	404680 <__overflow@plt>
  406068:	b	405f90 <wcrtomb@plt+0x1370>
  40606c:	nop
  406070:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  406074:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406078:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40607c:	ldr	x1, [x1, #40]
  406080:	ldr	x0, [x0, #16]
  406084:	ldr	x2, [x2, #1664]
  406088:	sub	x0, x1, x0
  40608c:	add	x0, x2, x0, asr #9
  406090:	ret
  406094:	nop
  406098:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40609c:	add	x0, x0, #0x4d0
  4060a0:	ldrb	w1, [x0, #488]
  4060a4:	cbz	w1, 4060dc <wcrtomb@plt+0x14bc>
  4060a8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4060ac:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4060b0:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  4060b4:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4060b8:	ldr	x2, [x2, #16]
  4060bc:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4060c0:	ldrsw	x1, [x1, #876]
  4060c4:	mov	w5, #0x1                   	// #1
  4060c8:	str	x2, [x6, #40]
  4060cc:	str	w5, [x4, #4088]
  4060d0:	add	x1, x2, x1, lsl #9
  4060d4:	str	x1, [x3, #4072]
  4060d8:	strb	wzr, [x0, #488]
  4060dc:	ret
  4060e0:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4060e4:	ldr	x1, [x2, #40]
  4060e8:	cmp	x0, x1
  4060ec:	b.cc	406104 <wcrtomb@plt+0x14e4>  // b.lo, b.ul, b.last
  4060f0:	sub	x0, x0, x1
  4060f4:	and	x0, x0, #0xfffffffffffffe00
  4060f8:	add	x0, x0, #0x200
  4060fc:	add	x1, x1, x0
  406100:	str	x1, [x2, #40]
  406104:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406108:	ldr	x0, [x0, #4072]
  40610c:	cmp	x0, x1
  406110:	b.cc	406118 <wcrtomb@plt+0x14f8>  // b.lo, b.ul, b.last
  406114:	ret
  406118:	stp	x29, x30, [sp, #-16]!
  40611c:	mov	x29, sp
  406120:	bl	404650 <abort@plt>
  406124:	nop
  406128:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40612c:	ldr	x1, [x1, #4072]
  406130:	sub	x0, x1, x0
  406134:	ret
  406138:	stp	x29, x30, [sp, #-16]!
  40613c:	mov	x29, sp
  406140:	bl	4045c0 <close@plt>
  406144:	cbnz	w0, 406150 <wcrtomb@plt+0x1530>
  406148:	ldp	x29, x30, [sp], #16
  40614c:	ret
  406150:	mov	w2, #0x5                   	// #5
  406154:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406158:	mov	x0, #0x0                   	// #0
  40615c:	add	x1, x1, #0xab0
  406160:	bl	4049c0 <dcgettext@plt>
  406164:	ldp	x29, x30, [sp], #16
  406168:	b	4337b8 <wcrtomb@plt+0x2eb98>
  40616c:	nop
  406170:	stp	x29, x30, [sp, #-16]!
  406174:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406178:	mov	x29, sp
  40617c:	ldr	x0, [x0, #864]
  406180:	ldr	x0, [x0]
  406184:	bl	433c18 <wcrtomb@plt+0x2eff8>
  406188:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40618c:	add	x0, x0, #0x4d0
  406190:	ldr	x1, [x0, #432]
  406194:	cbz	x1, 4061b4 <wcrtomb@plt+0x1594>
  406198:	ldr	w1, [x0, #440]
  40619c:	add	w2, w1, #0x1
  4061a0:	str	w2, [x0, #440]
  4061a4:	cmp	w1, #0xa
  4061a8:	b.gt	4061ec <wcrtomb@plt+0x15cc>
  4061ac:	ldp	x29, x30, [sp], #16
  4061b0:	ret
  4061b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4061b8:	ldr	x0, [x0, #1136]
  4061bc:	cbz	x0, 4061c4 <wcrtomb@plt+0x15a4>
  4061c0:	blr	x0
  4061c4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4061c8:	add	x1, x1, #0x9d0
  4061cc:	mov	w2, #0x5                   	// #5
  4061d0:	mov	x0, #0x0                   	// #0
  4061d4:	bl	4049c0 <dcgettext@plt>
  4061d8:	mov	x2, x0
  4061dc:	mov	w1, #0x0                   	// #0
  4061e0:	mov	w0, #0x0                   	// #0
  4061e4:	bl	404050 <error@plt>
  4061e8:	bl	410460 <wcrtomb@plt+0xb840>
  4061ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4061f0:	ldr	x0, [x0, #1136]
  4061f4:	cbz	x0, 4061fc <wcrtomb@plt+0x15dc>
  4061f8:	blr	x0
  4061fc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406200:	mov	w2, #0x5                   	// #5
  406204:	add	x1, x1, #0x9f8
  406208:	b	4061d0 <wcrtomb@plt+0x15b0>
  40620c:	nop
  406210:	stp	x29, x30, [sp, #-80]!
  406214:	mov	x29, sp
  406218:	stp	x19, x20, [sp, #16]
  40621c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406220:	ldr	w3, [x19, #4088]
  406224:	cbnz	w3, 406288 <wcrtomb@plt+0x1668>
  406228:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40622c:	ldrb	w1, [x0, #1120]
  406230:	cbnz	w1, 406308 <wcrtomb@plt+0x16e8>
  406234:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406238:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40623c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406240:	add	x1, x1, #0x4d0
  406244:	ldr	x3, [x0, #16]
  406248:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40624c:	ldr	x0, [x4, #4072]
  406250:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  406254:	ldr	x5, [x1, #432]
  406258:	sub	x0, x0, x3
  40625c:	ldrsw	x2, [x2, #876]
  406260:	str	x3, [x6, #40]
  406264:	add	x0, x5, x0, asr #9
  406268:	str	x0, [x1, #432]
  40626c:	add	x0, x3, x2, lsl #9
  406270:	str	x0, [x4, #4072]
  406274:	ldr	x0, [x1, #496]
  406278:	blr	x0
  40627c:	ldp	x19, x20, [sp, #16]
  406280:	ldp	x29, x30, [sp], #80
  406284:	ret
  406288:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40628c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406290:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  406294:	ldr	x0, [x0, #16]
  406298:	ldr	x2, [x20, #4072]
  40629c:	ldrsw	x4, [x1, #876]
  4062a0:	sub	x2, x2, x0
  4062a4:	asr	x2, x2, #9
  4062a8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4062ac:	add	x1, x1, #0x4d0
  4062b0:	add	x4, x0, x4, lsl #9
  4062b4:	str	x4, [x20, #4072]
  4062b8:	adrp	x5, 497000 <argp_program_version_hook@@Base+0x1e0>
  4062bc:	cmp	w3, #0x1
  4062c0:	ldr	x4, [x1, #432]
  4062c4:	ldr	x6, [x5, #40]
  4062c8:	add	x2, x4, x2
  4062cc:	str	x0, [x5, #40]
  4062d0:	str	x2, [x1, #432]
  4062d4:	b.ne	4062f0 <wcrtomb@plt+0x16d0>  // b.any
  4062d8:	ldr	x1, [x1, #504]
  4062dc:	sub	x0, x6, x0
  4062e0:	blr	x1
  4062e4:	ldp	x19, x20, [sp, #16]
  4062e8:	ldp	x29, x30, [sp], #80
  4062ec:	ret
  4062f0:	cmp	w3, #0x2
  4062f4:	b.eq	406544 <wcrtomb@plt+0x1924>  // b.none
  4062f8:	cbz	w3, 406274 <wcrtomb@plt+0x1654>
  4062fc:	ldp	x19, x20, [sp, #16]
  406300:	ldp	x29, x30, [sp], #80
  406304:	ret
  406308:	stp	x21, x22, [sp, #32]
  40630c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  406310:	mov	w1, #0x1                   	// #1
  406314:	strb	wzr, [x0, #1120]
  406318:	mov	w3, #0x4                   	// #4
  40631c:	ldr	w0, [x22, #1104]
  406320:	mov	w2, #0x3fffffff            	// #1073741823
  406324:	str	w1, [x19, #4088]
  406328:	add	x20, sp, #0x48
  40632c:	str	x23, [sp, #48]
  406330:	cmp	w0, w2
  406334:	strh	w3, [sp, #72]
  406338:	str	w1, [sp, #76]
  40633c:	b.le	40643c <wcrtomb@plt+0x181c>
  406340:	mov	w3, #0xc0000000            	// #-1073741824
  406344:	mov	w1, #0x6d01                	// #27905
  406348:	mov	x2, x20
  40634c:	add	w0, w0, w3
  406350:	movk	w1, #0x4008, lsl #16
  406354:	bl	435bc0 <wcrtomb@plt+0x30fa0>
  406358:	mvn	w0, w0
  40635c:	lsr	w0, w0, #31
  406360:	cbnz	w0, 406458 <wcrtomb@plt+0x1838>
  406364:	bl	404ad0 <__errno_location@plt>
  406368:	ldr	w0, [x0]
  40636c:	ldr	w3, [x22, #1104]
  406370:	cmp	w0, #0x5
  406374:	b.eq	4064bc <wcrtomb@plt+0x189c>  // b.none
  406378:	mov	w0, #0x3fffffff            	// #1073741823
  40637c:	cmp	w3, w0
  406380:	b.gt	406490 <wcrtomb@plt+0x1870>
  406384:	mov	w0, w3
  406388:	mov	w2, #0x1                   	// #1
  40638c:	mov	x1, #0x0                   	// #0
  406390:	bl	4041d0 <lseek@plt>
  406394:	mov	x21, x0
  406398:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40639c:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  4063a0:	ldr	w0, [x22, #1104]
  4063a4:	mov	w2, #0x3fffffff            	// #1073741823
  4063a8:	ldr	x1, [x20, #4072]
  4063ac:	ldr	x3, [x23, #16]
  4063b0:	sub	x1, x1, x3
  4063b4:	subs	x21, x21, x1
  4063b8:	csel	x21, x21, xzr, pl  // pl = nfrst
  4063bc:	cmp	w0, w2
  4063c0:	b.le	4064ac <wcrtomb@plt+0x188c>
  4063c4:	mov	w1, #0xc0000000            	// #-1073741824
  4063c8:	mov	w2, #0x0                   	// #0
  4063cc:	add	w0, w0, w1
  4063d0:	mov	x1, x21
  4063d4:	bl	4359b8 <wcrtomb@plt+0x30d98>
  4063d8:	cmp	x21, x0
  4063dc:	b.eq	406434 <wcrtomb@plt+0x1814>  // b.none
  4063e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4063e4:	ldr	x0, [x0, #1136]
  4063e8:	cbz	x0, 4063f0 <wcrtomb@plt+0x17d0>
  4063ec:	blr	x0
  4063f0:	mov	w2, #0x5                   	// #5
  4063f4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4063f8:	mov	x0, #0x0                   	// #0
  4063fc:	add	x1, x1, #0xab8
  406400:	bl	4049c0 <dcgettext@plt>
  406404:	mov	x2, x0
  406408:	mov	w1, #0x0                   	// #0
  40640c:	mov	w0, #0x0                   	// #0
  406410:	bl	404050 <error@plt>
  406414:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  406418:	ldr	x0, [x23, #16]
  40641c:	ldr	x2, [x1, #1128]
  406420:	cmp	x0, x2
  406424:	b.eq	406464 <wcrtomb@plt+0x1844>  // b.none
  406428:	sub	x2, x2, x0
  40642c:	mov	w1, #0x0                   	// #0
  406430:	bl	404410 <memset@plt>
  406434:	ldr	x0, [x23, #16]
  406438:	b	406464 <wcrtomb@plt+0x1844>
  40643c:	mov	x1, #0x6d01                	// #27905
  406440:	mov	x2, x20
  406444:	movk	x1, #0x4008, lsl #16
  406448:	bl	404bd0 <ioctl@plt>
  40644c:	mvn	w0, w0
  406450:	lsr	w0, w0, #31
  406454:	b	406360 <wcrtomb@plt+0x1740>
  406458:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  40645c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406460:	ldr	x0, [x23, #16]
  406464:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  406468:	ldr	x3, [x20, #4072]
  40646c:	ldrsw	x4, [x21, #876]
  406470:	sub	x1, x3, x0
  406474:	asr	x2, x1, #9
  406478:	cmp	x4, x1, asr #9
  40647c:	b.gt	4064f4 <wcrtomb@plt+0x18d4>
  406480:	ldr	w3, [x19, #4088]
  406484:	ldp	x21, x22, [sp, #32]
  406488:	ldr	x23, [sp, #48]
  40648c:	b	4062a8 <wcrtomb@plt+0x1688>
  406490:	mov	w0, #0xc0000000            	// #-1073741824
  406494:	mov	w2, #0x1                   	// #1
  406498:	add	w0, w3, w0
  40649c:	mov	x1, #0x0                   	// #0
  4064a0:	bl	4359b8 <wcrtomb@plt+0x30d98>
  4064a4:	mov	x21, x0
  4064a8:	b	406398 <wcrtomb@plt+0x1778>
  4064ac:	mov	x1, x21
  4064b0:	mov	w2, #0x0                   	// #0
  4064b4:	bl	4041d0 <lseek@plt>
  4064b8:	b	4063d8 <wcrtomb@plt+0x17b8>
  4064bc:	mov	w0, #0x3fffffff            	// #1073741823
  4064c0:	cmp	w3, w0
  4064c4:	b.le	406524 <wcrtomb@plt+0x1904>
  4064c8:	mov	w1, #0x6d01                	// #27905
  4064cc:	mov	x2, x20
  4064d0:	movk	w1, #0x4008, lsl #16
  4064d4:	mov	w0, #0xc0000000            	// #-1073741824
  4064d8:	add	w0, w3, w0
  4064dc:	bl	435bc0 <wcrtomb@plt+0x30fa0>
  4064e0:	mvn	w0, w0
  4064e4:	lsr	w0, w0, #31
  4064e8:	cbnz	w0, 406458 <wcrtomb@plt+0x1838>
  4064ec:	ldr	w3, [x22, #1104]
  4064f0:	b	406378 <wcrtomb@plt+0x1758>
  4064f4:	sub	x2, x4, x2
  4064f8:	mov	w1, #0x0                   	// #0
  4064fc:	mov	x0, x3
  406500:	lsl	x2, x2, #9
  406504:	bl	404410 <memset@plt>
  406508:	ldr	x1, [x23, #16]
  40650c:	ldrsw	x0, [x21, #876]
  406510:	ldp	x21, x22, [sp, #32]
  406514:	add	x0, x1, x0, lsl #9
  406518:	str	x0, [x20, #4072]
  40651c:	ldr	x23, [sp, #48]
  406520:	b	40627c <wcrtomb@plt+0x165c>
  406524:	mov	x1, #0x6d01                	// #27905
  406528:	mov	x2, x20
  40652c:	mov	w0, w3
  406530:	movk	x1, #0x4008, lsl #16
  406534:	bl	404bd0 <ioctl@plt>
  406538:	mvn	w0, w0
  40653c:	lsr	w0, w0, #31
  406540:	b	4064e8 <wcrtomb@plt+0x18c8>
  406544:	stp	x21, x22, [sp, #32]
  406548:	str	x23, [sp, #48]
  40654c:	bl	404650 <abort@plt>
  406550:	stp	x29, x30, [sp, #-48]!
  406554:	mov	x29, sp
  406558:	stp	x19, x20, [sp, #16]
  40655c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  406560:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406564:	ldr	x0, [x20, #40]
  406568:	ldr	x1, [x19, #4072]
  40656c:	cmp	x0, x1
  406570:	b.eq	406580 <wcrtomb@plt+0x1960>  // b.none
  406574:	ldp	x19, x20, [sp, #16]
  406578:	ldp	x29, x30, [sp], #48
  40657c:	ret
  406580:	str	x21, [sp, #32]
  406584:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406588:	add	x21, x21, #0x4d0
  40658c:	mov	x0, #0x0                   	// #0
  406590:	ldrb	w1, [x21, #488]
  406594:	cbnz	w1, 4065ac <wcrtomb@plt+0x198c>
  406598:	bl	406210 <wcrtomb@plt+0x15f0>
  40659c:	ldr	x0, [x20, #40]
  4065a0:	ldr	x1, [x19, #4072]
  4065a4:	cmp	x0, x1
  4065a8:	b.eq	4065bc <wcrtomb@plt+0x199c>  // b.none
  4065ac:	ldp	x19, x20, [sp, #16]
  4065b0:	ldr	x21, [sp, #32]
  4065b4:	ldp	x29, x30, [sp], #48
  4065b8:	ret
  4065bc:	mov	w1, #0x1                   	// #1
  4065c0:	mov	x0, #0x0                   	// #0
  4065c4:	strb	w1, [x21, #488]
  4065c8:	ldr	x21, [sp, #32]
  4065cc:	b	406574 <wcrtomb@plt+0x1954>
  4065d0:	stp	x29, x30, [sp, #-96]!
  4065d4:	mov	x29, sp
  4065d8:	stp	x21, x22, [sp, #32]
  4065dc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4065e0:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  4065e4:	add	x21, x21, #0x4d0
  4065e8:	stp	x23, x24, [sp, #48]
  4065ec:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  4065f0:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4065f4:	stp	x19, x20, [sp, #16]
  4065f8:	mov	x20, x0
  4065fc:	ldr	x19, [x22, #16]
  406600:	str	x19, [x23, #4072]
  406604:	ldr	x0, [x24, #40]
  406608:	stp	x25, x26, [sp, #64]
  40660c:	ldrb	w26, [x21, #444]
  406610:	mov	w25, #0x1                   	// #1
  406614:	strb	w25, [x21, #444]
  406618:	cmp	x20, #0x0
  40661c:	add	x1, sp, #0x5f
  406620:	csel	x20, x1, x20, eq  // eq = none
  406624:	mov	x1, x19
  406628:	cmp	x19, x0
  40662c:	b.eq	40677c <wcrtomb@plt+0x1b5c>  // b.none
  406630:	cmp	x0, #0x0
  406634:	cset	w0, eq  // eq = none
  406638:	strb	w0, [x20]
  40663c:	cmp	x1, x19
  406640:	strb	w26, [x21, #444]
  406644:	b.eq	40668c <wcrtomb@plt+0x1a6c>  // b.none
  406648:	add	x20, x19, #0x101
  40664c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406650:	mov	x0, x20
  406654:	add	x1, x1, #0xaf8
  406658:	bl	404710 <strcmp@plt>
  40665c:	cbz	w0, 406674 <wcrtomb@plt+0x1a54>
  406660:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406664:	mov	x0, x20
  406668:	add	x1, x1, #0xb00
  40666c:	bl	404710 <strcmp@plt>
  406670:	cbnz	w0, 40668c <wcrtomb@plt+0x1a6c>
  406674:	mov	x0, x19
  406678:	mov	w1, #0x1                   	// #1
  40667c:	bl	41c1e8 <wcrtomb@plt+0x175c8>
  406680:	cmp	w0, #0x1
  406684:	b.eq	406710 <wcrtomb@plt+0x1af0>  // b.none
  406688:	ldr	x19, [x22, #16]
  40668c:	mov	w1, #0x9d1f                	// #40223
  406690:	ldrh	w0, [x19]
  406694:	cmp	w0, w1
  406698:	b.eq	4067d4 <wcrtomb@plt+0x1bb4>  // b.none
  40669c:	mov	w1, #0x8b1f                	// #35615
  4066a0:	cmp	w0, w1
  4066a4:	b.eq	4067e8 <wcrtomb@plt+0x1bc8>  // b.none
  4066a8:	mov	w1, #0x5a42                	// #23106
  4066ac:	cmp	w0, w1
  4066b0:	b.eq	4067a8 <wcrtomb@plt+0x1b88>  // b.none
  4066b4:	ldr	w1, [x19]
  4066b8:	mov	w0, #0x5a4c                	// #23116
  4066bc:	movk	w0, #0x5049, lsl #16
  4066c0:	cmp	w1, w0
  4066c4:	b.eq	4067fc <wcrtomb@plt+0x1bdc>  // b.none
  4066c8:	mov	w0, #0x4cff                	// #19711
  4066cc:	mov	w2, w1
  4066d0:	movk	w0, #0x4d5a, lsl #16
  4066d4:	cmp	w1, w0
  4066d8:	b.eq	406728 <wcrtomb@plt+0x1b08>  // b.none
  4066dc:	mov	w0, #0x4c89                	// #19593
  4066e0:	movk	w0, #0x4f5a, lsl #16
  4066e4:	cmp	w1, w0
  4066e8:	b.eq	406810 <wcrtomb@plt+0x1bf0>  // b.none
  4066ec:	mov	w0, #0x37fd                	// #14333
  4066f0:	movk	w0, #0x587a, lsl #16
  4066f4:	cmp	w2, w0
  4066f8:	b.eq	40675c <wcrtomb@plt+0x1b3c>  // b.none
  4066fc:	mov	w2, #0xb528                	// #46376
  406700:	mov	w0, #0x0                   	// #0
  406704:	movk	w2, #0xfd2f, lsl #16
  406708:	cmp	w1, w2
  40670c:	b.eq	406824 <wcrtomb@plt+0x1c04>  // b.none
  406710:	ldp	x19, x20, [sp, #16]
  406714:	ldp	x21, x22, [sp, #32]
  406718:	ldp	x23, x24, [sp, #48]
  40671c:	ldp	x25, x26, [sp, #64]
  406720:	ldp	x29, x30, [sp], #96
  406724:	ret
  406728:	ldrh	w0, [x19, #4]
  40672c:	cmp	w0, #0x41
  406730:	b.ne	4066dc <wcrtomb@plt+0x1abc>  // b.any
  406734:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  406738:	add	x0, x0, #0x140
  40673c:	add	x0, x0, #0x90
  406740:	ldr	w0, [x0]
  406744:	ldp	x19, x20, [sp, #16]
  406748:	ldp	x21, x22, [sp, #32]
  40674c:	ldp	x23, x24, [sp, #48]
  406750:	ldp	x25, x26, [sp, #64]
  406754:	ldp	x29, x30, [sp], #96
  406758:	ret
  40675c:	ldrh	w0, [x19, #4]
  406760:	cmp	w0, #0x5a
  406764:	b.ne	4066fc <wcrtomb@plt+0x1adc>  // b.any
  406768:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40676c:	add	x0, x0, #0x140
  406770:	add	x0, x0, #0xc0
  406774:	ldr	w0, [x0]
  406778:	b	406744 <wcrtomb@plt+0x1b24>
  40677c:	ldrb	w0, [x21, #488]
  406780:	cbnz	w0, 4067c8 <wcrtomb@plt+0x1ba8>
  406784:	bl	406210 <wcrtomb@plt+0x15f0>
  406788:	ldr	x0, [x24, #40]
  40678c:	ldr	x1, [x23, #4072]
  406790:	ldr	x19, [x22, #16]
  406794:	cmp	x0, x1
  406798:	b.ne	406630 <wcrtomb@plt+0x1a10>  // b.any
  40679c:	mov	w0, #0x1                   	// #1
  4067a0:	strb	w25, [x21, #488]
  4067a4:	b	406638 <wcrtomb@plt+0x1a18>
  4067a8:	ldrb	w0, [x19, #2]
  4067ac:	cmp	w0, #0x68
  4067b0:	b.ne	4066b4 <wcrtomb@plt+0x1a94>  // b.any
  4067b4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4067b8:	add	x0, x0, #0x140
  4067bc:	add	x0, x0, #0x60
  4067c0:	ldr	w0, [x0]
  4067c4:	b	406744 <wcrtomb@plt+0x1b24>
  4067c8:	strb	w25, [x20]
  4067cc:	strb	w26, [x21, #444]
  4067d0:	b	40668c <wcrtomb@plt+0x1a6c>
  4067d4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4067d8:	add	x0, x0, #0x140
  4067dc:	add	x0, x0, #0x30
  4067e0:	ldr	w0, [x0]
  4067e4:	b	406744 <wcrtomb@plt+0x1b24>
  4067e8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4067ec:	add	x0, x0, #0x140
  4067f0:	add	x0, x0, #0x48
  4067f4:	ldr	w0, [x0]
  4067f8:	b	406744 <wcrtomb@plt+0x1b24>
  4067fc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  406800:	add	x0, x0, #0x140
  406804:	add	x0, x0, #0x78
  406808:	ldr	w0, [x0]
  40680c:	b	406744 <wcrtomb@plt+0x1b24>
  406810:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  406814:	add	x0, x0, #0x140
  406818:	add	x0, x0, #0xa8
  40681c:	ldr	w0, [x0]
  406820:	b	406744 <wcrtomb@plt+0x1b24>
  406824:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  406828:	add	x0, x0, #0x140
  40682c:	add	x0, x0, #0xd8
  406830:	ldr	w0, [x0]
  406834:	b	406744 <wcrtomb@plt+0x1b24>
  406838:	stp	x29, x30, [sp, #-64]!
  40683c:	mov	x29, sp
  406840:	stp	x19, x20, [sp, #16]
  406844:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  406848:	stp	x21, x22, [sp, #32]
  40684c:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406850:	mov	x21, x0
  406854:	ldr	x19, [x20, #40]
  406858:	ldr	x0, [x22, #4072]
  40685c:	cmp	x19, x0
  406860:	b.eq	406914 <wcrtomb@plt+0x1cf4>  // b.none
  406864:	mov	x2, #0x200                 	// #512
  406868:	mov	w1, #0x0                   	// #0
  40686c:	mov	x0, x19
  406870:	bl	404410 <memset@plt>
  406874:	mov	x2, #0x64                  	// #100
  406878:	mov	x1, x21
  40687c:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  406880:	add	x21, x21, #0xe0
  406884:	mov	x0, x19
  406888:	bl	404370 <__strcpy_chk@plt>
  40688c:	mov	x1, x19
  406890:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406894:	add	x0, x0, #0xe8
  406898:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40689c:	ldr	x0, [x21, #8]
  4068a0:	bl	4415f0 <argp_parse@@Base+0x1810>
  4068a4:	mov	w3, w0
  4068a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4068ac:	mov	w1, #0x56                  	// #86
  4068b0:	strb	w1, [x19, #156]
  4068b4:	mov	x2, #0xc                   	// #12
  4068b8:	ldr	x0, [x0, #840]
  4068bc:	add	x1, x19, #0x88
  4068c0:	strb	w3, [x21, #16]
  4068c4:	bl	40c380 <wcrtomb@plt+0x7760>
  4068c8:	mov	x0, x21
  4068cc:	mov	x1, x19
  4068d0:	mov	x2, #0xffffffffffffffff    	// #-1
  4068d4:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  4068d8:	ldr	x0, [x20, #40]
  4068dc:	cmp	x0, x19
  4068e0:	b.hi	4068f8 <wcrtomb@plt+0x1cd8>  // b.pmore
  4068e4:	sub	x19, x19, x0
  4068e8:	and	x19, x19, #0xfffffffffffffe00
  4068ec:	add	x19, x19, #0x200
  4068f0:	add	x0, x0, x19
  4068f4:	str	x0, [x20, #40]
  4068f8:	ldr	x1, [x22, #4072]
  4068fc:	cmp	x1, x0
  406900:	b.cc	40699c <wcrtomb@plt+0x1d7c>  // b.lo, b.ul, b.last
  406904:	ldp	x19, x20, [sp, #16]
  406908:	ldp	x21, x22, [sp, #32]
  40690c:	ldp	x29, x30, [sp], #64
  406910:	ret
  406914:	str	x23, [sp, #48]
  406918:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40691c:	add	x23, x23, #0x4d0
  406920:	ldrb	w0, [x23, #488]
  406924:	cbnz	w0, 40694c <wcrtomb@plt+0x1d2c>
  406928:	bl	406210 <wcrtomb@plt+0x15f0>
  40692c:	ldr	x0, [x22, #4072]
  406930:	ldr	x19, [x20, #40]
  406934:	cmp	x19, x0
  406938:	b.eq	406944 <wcrtomb@plt+0x1d24>  // b.none
  40693c:	ldr	x23, [sp, #48]
  406940:	b	406864 <wcrtomb@plt+0x1c44>
  406944:	mov	w0, #0x1                   	// #1
  406948:	strb	w0, [x23, #488]
  40694c:	mov	x2, #0x200                 	// #512
  406950:	mov	w1, #0x0                   	// #0
  406954:	mov	x0, #0x0                   	// #0
  406958:	bl	404410 <memset@plt>
  40695c:	mov	x2, #0x64                  	// #100
  406960:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  406964:	add	x19, x19, #0xe0
  406968:	mov	x1, x21
  40696c:	mov	x0, #0x0                   	// #0
  406970:	bl	404370 <__strcpy_chk@plt>
  406974:	mov	x1, #0x0                   	// #0
  406978:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40697c:	add	x0, x0, #0xe8
  406980:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  406984:	ldr	x0, [x19, #8]
  406988:	mov	x20, #0x0                   	// #0
  40698c:	bl	4415f0 <argp_parse@@Base+0x1810>
  406990:	strb	w0, [x19, #16]
  406994:	strb	wzr, [x20, #156]
  406998:	brk	#0x3e8
  40699c:	str	x23, [sp, #48]
  4069a0:	bl	404650 <abort@plt>
  4069a4:	nop
  4069a8:	stp	x29, x30, [sp, #-80]!
  4069ac:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4069b0:	mov	x29, sp
  4069b4:	ldrsw	x0, [x0, #1664]
  4069b8:	add	x1, sp, #0x38
  4069bc:	str	x21, [sp, #32]
  4069c0:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  4069c4:	stp	x19, x20, [sp, #16]
  4069c8:	bl	446868 <argp_parse@@Base+0x6a88>
  4069cc:	mov	x20, x0
  4069d0:	ldr	x0, [x21, #776]
  4069d4:	bl	403ff0 <strlen@plt>
  4069d8:	mov	x19, x0
  4069dc:	mov	x0, x20
  4069e0:	bl	403ff0 <strlen@plt>
  4069e4:	add	x0, x19, x0
  4069e8:	add	x0, x0, #0x9
  4069ec:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4069f0:	ldr	x4, [x21, #776]
  4069f4:	mov	x6, x20
  4069f8:	mov	x19, x0
  4069fc:	adrp	x5, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406a00:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406a04:	add	x5, x5, #0xb20
  406a08:	add	x3, x3, #0xb28
  406a0c:	mov	x2, #0xffffffffffffffff    	// #-1
  406a10:	mov	w1, #0x1                   	// #1
  406a14:	bl	404010 <__sprintf_chk@plt>
  406a18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406a1c:	ldr	w0, [x0, #944]
  406a20:	cmp	w0, #0x4
  406a24:	b.eq	406a44 <wcrtomb@plt+0x1e24>  // b.none
  406a28:	mov	x0, x19
  406a2c:	bl	406838 <wcrtomb@plt+0x1c18>
  406a30:	mov	x0, x19
  406a34:	ldp	x19, x20, [sp, #16]
  406a38:	ldr	x21, [sp, #32]
  406a3c:	ldp	x29, x30, [sp], #80
  406a40:	b	4047b0 <free@plt>
  406a44:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406a48:	add	x1, x1, #0x4d0
  406a4c:	mov	x2, x19
  406a50:	add	x1, x1, #0x8
  406a54:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406a58:	add	x0, x0, #0xb38
  406a5c:	bl	417440 <wcrtomb@plt+0x12820>
  406a60:	mov	x0, x19
  406a64:	ldp	x19, x20, [sp, #16]
  406a68:	ldr	x21, [sp, #32]
  406a6c:	ldp	x29, x30, [sp], #80
  406a70:	b	4047b0 <free@plt>
  406a74:	nop
  406a78:	stp	x29, x30, [sp, #-64]!
  406a7c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  406a80:	mov	x29, sp
  406a84:	stp	x21, x22, [sp, #32]
  406a88:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  406a8c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  406a90:	ldr	x3, [x1, #16]
  406a94:	ldr	x2, [x21, #40]
  406a98:	ldrsw	x1, [x22, #876]
  406a9c:	sub	x2, x2, x3
  406aa0:	sub	x1, x1, x2, asr #9
  406aa4:	cmp	x0, x1, lsl #9
  406aa8:	b.le	406b80 <wcrtomb@plt+0x1f60>
  406aac:	stp	x23, x24, [sp, #48]
  406ab0:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  406ab4:	lsl	x1, x1, #9
  406ab8:	stp	x19, x20, [sp, #16]
  406abc:	asr	x19, x2, #9
  406ac0:	sub	x0, x0, x1
  406ac4:	ldr	x2, [x23, #1048]
  406ac8:	cmp	x0, x2
  406acc:	b.cc	406b68 <wcrtomb@plt+0x1f48>  // b.lo, b.ul, b.last
  406ad0:	udiv	x1, x0, x2
  406ad4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406ad8:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406adc:	add	x20, x20, #0x4d0
  406ae0:	ldr	w0, [x0, #1104]
  406ae4:	mov	w3, #0x3fffffff            	// #1073741823
  406ae8:	mul	x1, x1, x2
  406aec:	cmp	w0, w3
  406af0:	ldr	x24, [x20, #432]
  406af4:	b.le	406b90 <wcrtomb@plt+0x1f70>
  406af8:	mov	w3, #0xc0000000            	// #-1073741824
  406afc:	mov	w2, #0x1                   	// #1
  406b00:	add	w0, w0, w3
  406b04:	bl	4359b8 <wcrtomb@plt+0x30d98>
  406b08:	tbnz	x0, #63, 406b9c <wcrtomb@plt+0x1f7c>
  406b0c:	ldr	x2, [x23, #1048]
  406b10:	udiv	x1, x0, x2
  406b14:	msub	x1, x1, x2, x0
  406b18:	cbnz	x1, 406bb0 <wcrtomb@plt+0x1f90>
  406b1c:	ldrsw	x1, [x22, #876]
  406b20:	asr	x2, x0, #9
  406b24:	add	x0, x19, x24
  406b28:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406b2c:	sub	x0, x2, x0
  406b30:	sub	x2, x2, x1
  406b34:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406b38:	str	x2, [x20, #432]
  406b3c:	ldr	x2, [x3, #4064]
  406b40:	sdiv	x1, x0, x1
  406b44:	ldr	x4, [x4, #4072]
  406b48:	str	x4, [x21, #40]
  406b4c:	ldp	x19, x20, [sp, #16]
  406b50:	add	x1, x1, x2
  406b54:	str	x1, [x3, #4064]
  406b58:	ldp	x21, x22, [sp, #32]
  406b5c:	ldp	x23, x24, [sp, #48]
  406b60:	ldp	x29, x30, [sp], #64
  406b64:	ret
  406b68:	mov	x0, #0x0                   	// #0
  406b6c:	ldp	x19, x20, [sp, #16]
  406b70:	ldp	x21, x22, [sp, #32]
  406b74:	ldp	x23, x24, [sp, #48]
  406b78:	ldp	x29, x30, [sp], #64
  406b7c:	ret
  406b80:	mov	x0, #0x0                   	// #0
  406b84:	ldp	x21, x22, [sp, #32]
  406b88:	ldp	x29, x30, [sp], #64
  406b8c:	ret
  406b90:	mov	w2, #0x1                   	// #1
  406b94:	bl	4041d0 <lseek@plt>
  406b98:	tbz	x0, #63, 406b0c <wcrtomb@plt+0x1eec>
  406b9c:	ldp	x19, x20, [sp, #16]
  406ba0:	ldp	x21, x22, [sp, #32]
  406ba4:	ldp	x23, x24, [sp, #48]
  406ba8:	ldp	x29, x30, [sp], #64
  406bac:	ret
  406bb0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406bb4:	ldr	x0, [x0, #1136]
  406bb8:	cbz	x0, 406bc0 <wcrtomb@plt+0x1fa0>
  406bbc:	blr	x0
  406bc0:	mov	w2, #0x5                   	// #5
  406bc4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  406bc8:	mov	x0, #0x0                   	// #0
  406bcc:	add	x1, x1, #0xb50
  406bd0:	bl	4049c0 <dcgettext@plt>
  406bd4:	mov	x2, x0
  406bd8:	mov	w1, #0x0                   	// #0
  406bdc:	mov	w0, #0x0                   	// #0
  406be0:	bl	404050 <error@plt>
  406be4:	bl	410460 <wcrtomb@plt+0xb840>
  406be8:	stp	x29, x30, [sp, #-64]!
  406bec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406bf0:	mov	x29, sp
  406bf4:	ldrb	w0, [x0, #1120]
  406bf8:	stp	x19, x20, [sp, #16]
  406bfc:	str	x21, [sp, #32]
  406c00:	cbnz	w0, 406d08 <wcrtomb@plt+0x20e8>
  406c04:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406c08:	ldr	w0, [x0, #4088]
  406c0c:	cmp	w0, #0x1
  406c10:	b.eq	406d08 <wcrtomb@plt+0x20e8>  // b.none
  406c14:	add	x0, sp, #0x30
  406c18:	bl	444438 <argp_parse@@Base+0x4658>
  406c1c:	mov	x2, #0xcd6500000000        	// #225833675390976
  406c20:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  406c24:	movk	x2, #0x41cd, lsl #48
  406c28:	add	x0, x3, #0x3e0
  406c2c:	fmov	d1, x2
  406c30:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406c34:	ldp	x2, x1, [sp, #48]
  406c38:	ldr	x4, [x0, #8]
  406c3c:	ldr	x3, [x3, #992]
  406c40:	sub	x1, x1, x4
  406c44:	ldr	d2, [x21, #1232]
  406c48:	sub	x2, x2, x3
  406c4c:	scvtf	d0, x1
  406c50:	fdiv	d0, d0, d1
  406c54:	scvtf	d1, x2
  406c58:	fadd	d0, d0, d1
  406c5c:	fadd	d0, d0, d2
  406c60:	str	d0, [x21, #1232]
  406c64:	bl	444438 <argp_parse@@Base+0x4658>
  406c68:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406c6c:	ldrb	w0, [x0, #970]
  406c70:	cbnz	w0, 406d54 <wcrtomb@plt+0x2134>
  406c74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406c78:	mov	w1, #0x3fffffff            	// #1073741823
  406c7c:	ldr	w0, [x0, #1104]
  406c80:	cmp	w0, w1
  406c84:	b.le	406d30 <wcrtomb@plt+0x2110>
  406c88:	mov	w1, #0xc0000000            	// #-1073741824
  406c8c:	add	w0, w0, w1
  406c90:	bl	435530 <wcrtomb@plt+0x30910>
  406c94:	cmp	w0, #0x0
  406c98:	cset	w0, ne  // ne = any
  406c9c:	cbnz	w0, 406d40 <wcrtomb@plt+0x2120>
  406ca0:	add	x21, x21, #0x4d0
  406ca4:	ldrb	w1, [x21, #488]
  406ca8:	ldr	w0, [x21, #512]
  406cac:	bl	42a618 <wcrtomb@plt+0x259f8>
  406cb0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406cb4:	add	x0, x0, #0xe0
  406cb8:	bl	42f438 <wcrtomb@plt+0x2a818>
  406cbc:	ldr	x0, [x21, #528]
  406cc0:	bl	4047b0 <free@plt>
  406cc4:	ldr	x0, [x21, #536]
  406cc8:	bl	4047b0 <free@plt>
  406ccc:	ldr	x19, [x21, #456]
  406cd0:	cbz	x19, 406cf4 <wcrtomb@plt+0x20d4>
  406cd4:	nop
  406cd8:	mov	x20, x19
  406cdc:	ldr	x19, [x19]
  406ce0:	ldr	x0, [x20, #16]
  406ce4:	bl	4047b0 <free@plt>
  406ce8:	mov	x0, x20
  406cec:	bl	4047b0 <free@plt>
  406cf0:	cbnz	x19, 406cd8 <wcrtomb@plt+0x20b8>
  406cf4:	stp	xzr, xzr, [x21, #448]
  406cf8:	ldp	x19, x20, [sp, #16]
  406cfc:	ldr	x21, [sp, #32]
  406d00:	ldp	x29, x30, [sp], #64
  406d04:	ret
  406d08:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  406d0c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  406d10:	add	x20, x20, #0x28
  406d14:	add	x19, x19, #0x10
  406d18:	bl	406210 <wcrtomb@plt+0x15f0>
  406d1c:	ldr	x0, [x19]
  406d20:	ldr	x1, [x20]
  406d24:	cmp	x1, x0
  406d28:	b.hi	406d18 <wcrtomb@plt+0x20f8>  // b.pmore
  406d2c:	b	406c14 <wcrtomb@plt+0x1ff4>
  406d30:	bl	4045c0 <close@plt>
  406d34:	cmp	w0, #0x0
  406d38:	cset	w0, ne  // ne = any
  406d3c:	cbz	w0, 406ca0 <wcrtomb@plt+0x2080>
  406d40:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406d44:	ldr	x0, [x0, #864]
  406d48:	ldr	x0, [x0]
  406d4c:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  406d50:	b	406ca0 <wcrtomb@plt+0x2080>
  406d54:	bl	40b2c0 <wcrtomb@plt+0x66a0>
  406d58:	b	406c74 <wcrtomb@plt+0x2054>
  406d5c:	nop
  406d60:	stp	x29, x30, [sp, #-16]!
  406d64:	mov	x29, sp
  406d68:	bl	434820 <wcrtomb@plt+0x2fc00>
  406d6c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406d70:	mov	w1, #0x3fffffff            	// #1073741823
  406d74:	ldr	w0, [x0, #1104]
  406d78:	cmp	w0, w1
  406d7c:	b.le	406dac <wcrtomb@plt+0x218c>
  406d80:	mov	w1, #0xc0000000            	// #-1073741824
  406d84:	add	w0, w0, w1
  406d88:	bl	435530 <wcrtomb@plt+0x30910>
  406d8c:	cmp	w0, #0x0
  406d90:	cset	w0, ne  // ne = any
  406d94:	cbnz	w0, 406dbc <wcrtomb@plt+0x219c>
  406d98:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406d9c:	mov	w1, #0x0                   	// #0
  406da0:	ldr	w0, [x0, #1744]
  406da4:	bl	42a618 <wcrtomb@plt+0x259f8>
  406da8:	bl	410460 <wcrtomb@plt+0xb840>
  406dac:	bl	4045c0 <close@plt>
  406db0:	cmp	w0, #0x0
  406db4:	cset	w0, ne  // ne = any
  406db8:	cbz	w0, 406d98 <wcrtomb@plt+0x2178>
  406dbc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406dc0:	ldr	x0, [x0, #864]
  406dc4:	ldr	x0, [x0]
  406dc8:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  406dcc:	b	406d98 <wcrtomb@plt+0x2178>
  406dd0:	stp	x29, x30, [sp, #-48]!
  406dd4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  406dd8:	mov	x29, sp
  406ddc:	stp	x19, x20, [sp, #16]
  406de0:	mov	x19, x0
  406de4:	ldrb	w0, [x1, #825]
  406de8:	str	x21, [sp, #32]
  406dec:	cbnz	w0, 406e0c <wcrtomb@plt+0x21ec>
  406df0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406df4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  406df8:	mov	x1, x19
  406dfc:	ldr	x0, [x0, #864]
  406e00:	ldr	x2, [x2, #1048]
  406e04:	ldr	x0, [x0]
  406e08:	bl	406d60 <wcrtomb@plt+0x2140>
  406e0c:	bl	404ad0 <__errno_location@plt>
  406e10:	mov	x20, x0
  406e14:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406e18:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  406e1c:	add	x1, x1, #0x140
  406e20:	mov	w3, #0xa                   	// #10
  406e24:	ldr	x0, [x2, #1176]
  406e28:	add	x1, x1, #0xf0
  406e2c:	ldr	w21, [x20]
  406e30:	mov	w2, w3
  406e34:	bl	405c30 <wcrtomb@plt+0x1010>
  406e38:	str	w21, [x20]
  406e3c:	b	406df0 <wcrtomb@plt+0x21d0>
  406e40:	stp	x29, x30, [sp, #-80]!
  406e44:	mov	w0, #0x1                   	// #1
  406e48:	mov	x29, sp
  406e4c:	stp	x19, x20, [sp, #16]
  406e50:	stp	x21, x22, [sp, #32]
  406e54:	bl	40a2d8 <wcrtomb@plt+0x56b8>
  406e58:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406e5c:	ldr	d0, [x0, #760]
  406e60:	fcmp	d0, #0.0
  406e64:	b.eq	406e78 <wcrtomb@plt+0x2258>  // b.none
  406e68:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406e6c:	ldr	d1, [x0, #1712]
  406e70:	fcmpe	d0, d1
  406e74:	b.ls	406f20 <wcrtomb@plt+0x2300>  // b.plast
  406e78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  406e7c:	ldrb	w0, [x0, #664]
  406e80:	cbz	w0, 406f38 <wcrtomb@plt+0x2318>
  406e84:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  406e88:	ldr	x0, [x22, #1048]
  406e8c:	mov	x19, x0
  406e90:	cbnz	x0, 406ed8 <wcrtomb@plt+0x22b8>
  406e94:	ldr	x0, [x22, #1048]
  406e98:	cmp	x0, x19
  406e9c:	b.ne	406fe8 <wcrtomb@plt+0x23c8>  // b.any
  406ea0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406ea4:	add	x0, x0, #0x4d0
  406ea8:	scvtf	d0, x19
  406eac:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406eb0:	ldp	x19, x20, [sp, #16]
  406eb4:	ldr	d1, [x0, #480]
  406eb8:	ldr	x1, [x2, #4080]
  406ebc:	fadd	d0, d0, d1
  406ec0:	add	x1, x1, #0x1
  406ec4:	str	x1, [x2, #4080]
  406ec8:	ldp	x21, x22, [sp, #32]
  406ecc:	str	d0, [x0, #480]
  406ed0:	ldp	x29, x30, [sp], #80
  406ed4:	ret
  406ed8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  406edc:	ldrb	w1, [x1, #204]
  406ee0:	cbz	w1, 406e94 <wcrtomb@plt+0x2274>
  406ee4:	stp	x23, x24, [sp, #48]
  406ee8:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  406eec:	add	x23, x23, #0x4d0
  406ef0:	ldr	w1, [x23, #544]
  406ef4:	cbnz	w1, 406f4c <wcrtomb@plt+0x232c>
  406ef8:	ldr	x21, [x23, #456]
  406efc:	mov	x20, x21
  406f00:	cbz	x20, 406f4c <wcrtomb@plt+0x232c>
  406f04:	ldr	x1, [x20]
  406f08:	cbz	x1, 406f54 <wcrtomb@plt+0x2334>
  406f0c:	ldr	x2, [x1, #8]
  406f10:	cmp	x0, x2, lsl #9
  406f14:	b.cc	406f54 <wcrtomb@plt+0x2334>  // b.lo, b.ul, b.last
  406f18:	mov	x20, x1
  406f1c:	b	406f00 <wcrtomb@plt+0x22e0>
  406f20:	bl	404ad0 <__errno_location@plt>
  406f24:	mov	x19, #0x0                   	// #0
  406f28:	mov	w1, #0x1c                  	// #28
  406f2c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  406f30:	str	w1, [x0]
  406f34:	b	406e94 <wcrtomb@plt+0x2274>
  406f38:	bl	42a888 <wcrtomb@plt+0x25c68>
  406f3c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  406f40:	mov	x19, x0
  406f44:	cbz	x0, 406e94 <wcrtomb@plt+0x2274>
  406f48:	b	406ed8 <wcrtomb@plt+0x22b8>
  406f4c:	ldp	x23, x24, [sp, #48]
  406f50:	b	406e94 <wcrtomb@plt+0x2274>
  406f54:	ldp	x2, x3, [x20, #32]
  406f58:	ldr	x24, [x20, #8]
  406f5c:	sub	x0, x0, x24, lsl #9
  406f60:	cmp	x0, x2
  406f64:	csel	x4, x0, x2, ls  // ls = plast
  406f68:	add	x0, x3, x0, lsr #9
  406f6c:	sub	x2, x2, x4
  406f70:	stp	x2, x0, [x20, #32]
  406f74:	cbz	x2, 406fd4 <wcrtomb@plt+0x23b4>
  406f78:	cmp	x21, #0x0
  406f7c:	ccmp	x21, x20, #0x4, ne  // ne = any
  406f80:	b.eq	406fb0 <wcrtomb@plt+0x2390>  // b.none
  406f84:	str	x25, [sp, #64]
  406f88:	mov	x25, x21
  406f8c:	ldr	x21, [x21]
  406f90:	ldr	x0, [x25, #16]
  406f94:	bl	4047b0 <free@plt>
  406f98:	mov	x0, x25
  406f9c:	bl	4047b0 <free@plt>
  406fa0:	cmp	x21, #0x0
  406fa4:	ccmp	x20, x21, #0x4, ne  // ne = any
  406fa8:	b.ne	406f88 <wcrtomb@plt+0x2368>  // b.any
  406fac:	ldr	x25, [sp, #64]
  406fb0:	str	x21, [x23, #456]
  406fb4:	cbz	x21, 406fe0 <wcrtomb@plt+0x23c0>
  406fb8:	cbz	x20, 406f4c <wcrtomb@plt+0x232c>
  406fbc:	ldr	x0, [x20, #8]
  406fc0:	str	xzr, [x20, #40]
  406fc4:	sub	x0, x0, x24
  406fc8:	str	x0, [x20, #8]
  406fcc:	ldr	x20, [x20]
  406fd0:	b	406fb8 <wcrtomb@plt+0x2398>
  406fd4:	add	x24, x24, x0
  406fd8:	mov	x20, x1
  406fdc:	b	406f78 <wcrtomb@plt+0x2358>
  406fe0:	str	xzr, [x23, #448]
  406fe4:	b	406fb8 <wcrtomb@plt+0x2398>
  406fe8:	mov	x0, x19
  406fec:	stp	x23, x24, [sp, #48]
  406ff0:	str	x25, [sp, #64]
  406ff4:	bl	406dd0 <wcrtomb@plt+0x21b0>
  406ff8:	stp	x29, x30, [sp, #-64]!
  406ffc:	mov	w0, #0x0                   	// #0
  407000:	mov	x29, sp
  407004:	stp	x19, x20, [sp, #16]
  407008:	stp	x21, x22, [sp, #32]
  40700c:	str	x23, [sp, #48]
  407010:	bl	40a2d8 <wcrtomb@plt+0x56b8>
  407014:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407018:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40701c:	add	x0, x0, #0x4d0
  407020:	ldrb	w1, [x1, #24]
  407024:	str	wzr, [x0, #440]
  407028:	cbz	w1, 407034 <wcrtomb@plt+0x2414>
  40702c:	ldr	x0, [x0, #432]
  407030:	cbnz	x0, 4070b8 <wcrtomb@plt+0x2498>
  407034:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  407038:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40703c:	ldr	w3, [x20, #1104]
  407040:	ldr	x2, [x1, #1048]
  407044:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  407048:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40704c:	add	x20, x20, #0x450
  407050:	add	x21, x21, #0x10
  407054:	add	x19, x19, #0x418
  407058:	mov	w22, #0x3fffffff            	// #1073741823
  40705c:	mov	w23, #0xc0000000            	// #-1073741824
  407060:	cmp	w3, w22
  407064:	ldr	x1, [x21]
  407068:	b.le	40709c <wcrtomb@plt+0x247c>
  40706c:	add	w0, w3, w23
  407070:	bl	435660 <wcrtomb@plt+0x30a40>
  407074:	ldr	x1, [x19]
  407078:	cmp	x1, x0
  40707c:	b.eq	4070e8 <wcrtomb@plt+0x24c8>  // b.none
  407080:	cmn	x0, #0x1
  407084:	b.eq	4070a8 <wcrtomb@plt+0x2488>  // b.none
  407088:	ldp	x19, x20, [sp, #16]
  40708c:	ldp	x21, x22, [sp, #32]
  407090:	ldr	x23, [sp, #48]
  407094:	ldp	x29, x30, [sp], #64
  407098:	b	4052c8 <wcrtomb@plt+0x6a8>
  40709c:	mov	w0, w3
  4070a0:	bl	44f230 <argp_parse@@Base+0xf450>
  4070a4:	b	407074 <wcrtomb@plt+0x2454>
  4070a8:	bl	406170 <wcrtomb@plt+0x1550>
  4070ac:	ldr	w3, [x20]
  4070b0:	ldr	x2, [x19]
  4070b4:	b	407060 <wcrtomb@plt+0x2440>
  4070b8:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  4070bc:	mov	w0, #0x1                   	// #1
  4070c0:	str	w0, [x20, #1104]
  4070c4:	bl	42a888 <wcrtomb@plt+0x25c68>
  4070c8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4070cc:	str	wzr, [x20, #1104]
  4070d0:	mov	x2, x0
  4070d4:	mov	w3, #0x0                   	// #0
  4070d8:	ldr	x1, [x1, #1048]
  4070dc:	cmp	x1, x0
  4070e0:	b.eq	407044 <wcrtomb@plt+0x2424>  // b.none
  4070e4:	bl	406dd0 <wcrtomb@plt+0x21b0>
  4070e8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4070ec:	ldp	x19, x20, [sp, #16]
  4070f0:	ldr	x0, [x1, #4064]
  4070f4:	ldp	x21, x22, [sp, #32]
  4070f8:	add	x0, x0, #0x1
  4070fc:	str	x0, [x1, #4064]
  407100:	ldr	x23, [sp, #48]
  407104:	ldp	x29, x30, [sp], #64
  407108:	ret
  40710c:	nop
  407110:	stp	x29, x30, [sp, #-48]!
  407114:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  407118:	add	x1, x1, #0xc28
  40711c:	mov	x29, sp
  407120:	str	x21, [sp, #32]
  407124:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  407128:	ldr	x0, [x21, #792]
  40712c:	bl	4042e0 <fopen@plt>
  407130:	cbz	x0, 407188 <wcrtomb@plt+0x2568>
  407134:	stp	x19, x20, [sp, #16]
  407138:	adrp	x20, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40713c:	add	x20, x20, #0x680
  407140:	mov	x19, x0
  407144:	add	x2, x20, #0x128
  407148:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  40714c:	add	x1, x1, #0x6b0
  407150:	bl	404380 <__isoc99_fscanf@plt>
  407154:	cmp	w0, #0x1
  407158:	b.ne	4071d4 <wcrtomb@plt+0x25b4>  // b.any
  40715c:	ldr	w0, [x20, #296]
  407160:	tbnz	w0, #31, 4071d4 <wcrtomb@plt+0x25b4>
  407164:	ldr	w0, [x19]
  407168:	tbnz	w0, #5, 4071bc <wcrtomb@plt+0x259c>
  40716c:	mov	x0, x19
  407170:	bl	4042a0 <fclose@plt>
  407174:	cbnz	w0, 4071a8 <wcrtomb@plt+0x2588>
  407178:	ldp	x19, x20, [sp, #16]
  40717c:	ldr	x21, [sp, #32]
  407180:	ldp	x29, x30, [sp], #48
  407184:	ret
  407188:	bl	404ad0 <__errno_location@plt>
  40718c:	ldr	w0, [x0]
  407190:	cmp	w0, #0x2
  407194:	b.eq	40717c <wcrtomb@plt+0x255c>  // b.none
  407198:	ldr	x0, [x21, #792]
  40719c:	ldr	x21, [sp, #32]
  4071a0:	ldp	x29, x30, [sp], #48
  4071a4:	b	433b00 <wcrtomb@plt+0x2eee0>
  4071a8:	ldr	x0, [x21, #792]
  4071ac:	ldp	x19, x20, [sp, #16]
  4071b0:	ldr	x21, [sp, #32]
  4071b4:	ldp	x29, x30, [sp], #48
  4071b8:	b	4337b8 <wcrtomb@plt+0x2eb98>
  4071bc:	ldr	x0, [x21, #792]
  4071c0:	bl	433c18 <wcrtomb@plt+0x2eff8>
  4071c4:	mov	x0, x19
  4071c8:	bl	4042a0 <fclose@plt>
  4071cc:	cbz	w0, 407178 <wcrtomb@plt+0x2558>
  4071d0:	b	4071a8 <wcrtomb@plt+0x2588>
  4071d4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4071d8:	ldr	x0, [x0, #1136]
  4071dc:	cbz	x0, 4071e4 <wcrtomb@plt+0x25c4>
  4071e0:	blr	x0
  4071e4:	mov	w2, #0x5                   	// #5
  4071e8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4071ec:	mov	x0, #0x0                   	// #0
  4071f0:	add	x1, x1, #0xb80
  4071f4:	bl	4049c0 <dcgettext@plt>
  4071f8:	mov	x19, x0
  4071fc:	ldr	x0, [x21, #792]
  407200:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  407204:	mov	x3, x0
  407208:	mov	x2, x19
  40720c:	mov	w1, #0x0                   	// #0
  407210:	mov	w0, #0x0                   	// #0
  407214:	bl	404050 <error@plt>
  407218:	bl	410460 <wcrtomb@plt+0xb840>
  40721c:	nop
  407220:	stp	x29, x30, [sp, #-32]!
  407224:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407228:	add	x1, x1, #0xba8
  40722c:	mov	x29, sp
  407230:	stp	x19, x20, [sp, #16]
  407234:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  407238:	ldr	x0, [x20, #792]
  40723c:	bl	4042e0 <fopen@plt>
  407240:	cbz	x0, 4072a8 <wcrtomb@plt+0x2688>
  407244:	adrp	x3, 493000 <_obstack_memory_used@@Base+0x41bf0>
  407248:	mov	x19, x0
  40724c:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407250:	mov	w1, #0x1                   	// #1
  407254:	ldr	w3, [x3, #1960]
  407258:	add	x2, x2, #0xbb0
  40725c:	bl	404700 <__fprintf_chk@plt>
  407260:	ldr	w0, [x19]
  407264:	tbnz	w0, #5, 407290 <wcrtomb@plt+0x2670>
  407268:	mov	x0, x19
  40726c:	bl	4042a0 <fclose@plt>
  407270:	cbnz	w0, 407280 <wcrtomb@plt+0x2660>
  407274:	ldp	x19, x20, [sp, #16]
  407278:	ldp	x29, x30, [sp], #32
  40727c:	ret
  407280:	ldr	x0, [x20, #792]
  407284:	ldp	x19, x20, [sp, #16]
  407288:	ldp	x29, x30, [sp], #32
  40728c:	b	4337b8 <wcrtomb@plt+0x2eb98>
  407290:	ldr	x0, [x20, #792]
  407294:	bl	434798 <wcrtomb@plt+0x2fb78>
  407298:	mov	x0, x19
  40729c:	bl	4042a0 <fclose@plt>
  4072a0:	cbz	w0, 407274 <wcrtomb@plt+0x2654>
  4072a4:	b	407280 <wcrtomb@plt+0x2660>
  4072a8:	ldr	x0, [x20, #792]
  4072ac:	ldp	x19, x20, [sp, #16]
  4072b0:	ldp	x29, x30, [sp], #32
  4072b4:	b	433b00 <wcrtomb@plt+0x2eee0>
  4072b8:	stp	x29, x30, [sp, #-288]!
  4072bc:	mov	x29, sp
  4072c0:	stp	x23, x24, [sp, #48]
  4072c4:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  4072c8:	str	w0, [sp, #124]
  4072cc:	ldrb	w0, [x24, #970]
  4072d0:	stp	x19, x20, [sp, #16]
  4072d4:	stp	x21, x22, [sp, #32]
  4072d8:	stp	x25, x26, [sp, #64]
  4072dc:	cbnz	w0, 40756c <wcrtomb@plt+0x294c>
  4072e0:	mov	x1, #0x0                   	// #0
  4072e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4072e8:	add	x0, x0, #0x0
  4072ec:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  4072f0:	mov	x1, #0x0                   	// #0
  4072f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4072f8:	add	x0, x0, #0x8
  4072fc:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  407300:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  407304:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407308:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  40730c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  407310:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  407314:	mov	w1, #0x3fffffff            	// #1073741823
  407318:	ldr	x4, [x4, #16]
  40731c:	str	x4, [x0, #40]
  407320:	str	xzr, [x3, #48]
  407324:	ldr	w0, [x23, #1104]
  407328:	str	xzr, [x2, #32]
  40732c:	cmp	w0, w1
  407330:	b.le	407544 <wcrtomb@plt+0x2924>
  407334:	mov	w1, #0xc0000000            	// #-1073741824
  407338:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40733c:	add	w0, w0, w1
  407340:	bl	435530 <wcrtomb@plt+0x30910>
  407344:	cmp	w0, #0x0
  407348:	ldr	x19, [x20, #864]
  40734c:	cset	w0, ne  // ne = any
  407350:	cbnz	w0, 40755c <wcrtomb@plt+0x293c>
  407354:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407358:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40735c:	add	x19, x19, #0x8
  407360:	str	x19, [x20, #864]
  407364:	ldr	x1, [x1, #816]
  407368:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40736c:	ldr	x0, [x0, #976]
  407370:	add	x21, x21, #0x4d0
  407374:	add	x0, x1, x0, lsl #3
  407378:	cmp	x19, x0
  40737c:	b.eq	407574 <wcrtomb@plt+0x2954>  // b.none
  407380:	ldr	w0, [x21, #548]
  407384:	cbnz	w0, 407498 <wcrtomb@plt+0x2878>
  407388:	ldr	x25, [x19]
  40738c:	ldrb	w0, [x25]
  407390:	cmp	w0, #0x2d
  407394:	b.ne	4074e0 <wcrtomb@plt+0x28c0>  // b.any
  407398:	ldrb	w0, [x25, #1]
  40739c:	cbnz	w0, 4074e0 <wcrtomb@plt+0x28c0>
  4073a0:	mov	w0, #0x1                   	// #1
  4073a4:	str	wzr, [x23, #1104]
  4073a8:	strb	w0, [x21, #444]
  4073ac:	mov	w0, #0x1                   	// #1
  4073b0:	ldp	x19, x20, [sp, #16]
  4073b4:	ldp	x21, x22, [sp, #32]
  4073b8:	ldp	x23, x24, [sp, #48]
  4073bc:	ldp	x25, x26, [sp, #64]
  4073c0:	ldp	x29, x30, [sp], #288
  4073c4:	ret
  4073c8:	ldr	w0, [sp, #124]
  4073cc:	cmp	w0, #0x1
  4073d0:	b.ne	407590 <wcrtomb@plt+0x2970>  // b.any
  4073d4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4073d8:	ldrb	w0, [x0, #885]
  4073dc:	cbz	w0, 4073f4 <wcrtomb@plt+0x27d4>
  4073e0:	ldrb	w1, [sp, #124]
  4073e4:	mov	x0, x25
  4073e8:	bl	41f848 <wcrtomb@plt+0x1ac28>
  4073ec:	ldr	x19, [x20, #864]
  4073f0:	ldr	x25, [x19]
  4073f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4073f8:	ldrb	w0, [x0, #1144]
  4073fc:	cbnz	w0, 407754 <wcrtomb@plt+0x2b34>
  407400:	mov	x0, x25
  407404:	mov	w1, #0x3a                  	// #58
  407408:	bl	404870 <strchr@plt>
  40740c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407410:	str	x0, [x1, #1152]
  407414:	ldr	x25, [x19]
  407418:	cbz	x0, 407754 <wcrtomb@plt+0x2b34>
  40741c:	cmp	x0, x25
  407420:	b.ls	407754 <wcrtomb@plt+0x2b34>  // b.plast
  407424:	sub	x2, x0, x25
  407428:	mov	w1, #0x2f                  	// #47
  40742c:	mov	x0, x25
  407430:	bl	404960 <memchr@plt>
  407434:	cbnz	x0, 407754 <wcrtomb@plt+0x2b34>
  407438:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  40743c:	mov	x0, x25
  407440:	mov	w2, #0x40000000            	// #1073741824
  407444:	mov	w1, #0x41                  	// #65
  407448:	ldr	x3, [x3, #936]
  40744c:	bl	434da8 <wcrtomb@plt+0x30188>
  407450:	str	w0, [x23, #1104]
  407454:	nop
  407458:	tbz	w0, #31, 4073ac <wcrtomb@plt+0x278c>
  40745c:	ldr	x0, [x20, #864]
  407460:	ldr	x0, [x0]
  407464:	bl	433ba0 <wcrtomb@plt+0x2ef80>
  407468:	ldr	w1, [sp, #124]
  40746c:	ldrb	w0, [x24, #970]
  407470:	cmp	w1, #0x1
  407474:	eor	w0, w0, #0x1
  407478:	cset	w1, eq  // eq = none
  40747c:	tst	w1, w0
  407480:	b.eq	407498 <wcrtomb@plt+0x2878>  // b.none
  407484:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407488:	ldrb	w0, [x0, #885]
  40748c:	cbz	w0, 407498 <wcrtomb@plt+0x2878>
  407490:	bl	41fa88 <wcrtomb@plt+0x1ae68>
  407494:	nop
  407498:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40749c:	ldr	x0, [x19, #896]
  4074a0:	cbz	x0, 407600 <wcrtomb@plt+0x29e0>
  4074a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4074a8:	ldr	x0, [x0, #792]
  4074ac:	cbz	x0, 4074b4 <wcrtomb@plt+0x2894>
  4074b0:	bl	407220 <wcrtomb@plt+0x2600>
  4074b4:	adrp	x25, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4074b8:	ldr	x0, [x20, #864]
  4074bc:	ldr	w1, [x25, #1960]
  4074c0:	add	w1, w1, #0x1
  4074c4:	bl	42b5d0 <wcrtomb@plt+0x269b0>
  4074c8:	cbnz	w0, 407a18 <wcrtomb@plt+0x2df8>
  4074cc:	ldr	x19, [x20, #864]
  4074d0:	ldr	x25, [x19]
  4074d4:	ldrb	w0, [x25]
  4074d8:	cmp	w0, #0x2d
  4074dc:	b.eq	407398 <wcrtomb@plt+0x2778>  // b.none
  4074e0:	ldrb	w26, [x24, #970]
  4074e4:	cbz	w26, 4073c8 <wcrtomb@plt+0x27a8>
  4074e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4074ec:	ldrb	w0, [x0, #1144]
  4074f0:	cbnz	w0, 40752c <wcrtomb@plt+0x290c>
  4074f4:	mov	x0, x25
  4074f8:	mov	w1, #0x3a                  	// #58
  4074fc:	bl	404870 <strchr@plt>
  407500:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407504:	str	x0, [x1, #1152]
  407508:	ldr	x25, [x19]
  40750c:	cbz	x0, 40752c <wcrtomb@plt+0x290c>
  407510:	cmp	x0, x25
  407514:	b.ls	40752c <wcrtomb@plt+0x290c>  // b.plast
  407518:	sub	x2, x0, x25
  40751c:	mov	w1, #0x2f                  	// #47
  407520:	mov	x0, x25
  407524:	bl	404960 <memchr@plt>
  407528:	cbz	x0, 40799c <wcrtomb@plt+0x2d7c>
  40752c:	mov	x0, x25
  407530:	mov	w2, #0x1b6                 	// #438
  407534:	mov	w1, #0x42                  	// #66
  407538:	bl	404340 <open@plt>
  40753c:	str	w0, [x23, #1104]
  407540:	b	407458 <wcrtomb@plt+0x2838>
  407544:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  407548:	bl	4045c0 <close@plt>
  40754c:	cmp	w0, #0x0
  407550:	ldr	x19, [x20, #864]
  407554:	cset	w0, ne  // ne = any
  407558:	cbz	w0, 407354 <wcrtomb@plt+0x2734>
  40755c:	ldr	x0, [x19]
  407560:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  407564:	ldr	x19, [x20, #864]
  407568:	b	407354 <wcrtomb@plt+0x2734>
  40756c:	bl	40b2c0 <wcrtomb@plt+0x66a0>
  407570:	b	4072e0 <wcrtomb@plt+0x26c0>
  407574:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  407578:	mov	w0, #0x1                   	// #1
  40757c:	str	w0, [x21, #548]
  407580:	ldr	x0, [x19, #896]
  407584:	str	x1, [x20, #864]
  407588:	cbnz	x0, 4074a4 <wcrtomb@plt+0x2884>
  40758c:	b	407600 <wcrtomb@plt+0x29e0>
  407590:	cmp	w0, #0x2
  407594:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407598:	ldrb	w0, [x0, #1144]
  40759c:	b.ne	4075a8 <wcrtomb@plt+0x2988>  // b.any
  4075a0:	cbz	w0, 4074f4 <wcrtomb@plt+0x28d4>
  4075a4:	b	40752c <wcrtomb@plt+0x290c>
  4075a8:	cbnz	w0, 407768 <wcrtomb@plt+0x2b48>
  4075ac:	mov	x0, x25
  4075b0:	mov	w1, #0x3a                  	// #58
  4075b4:	bl	404870 <strchr@plt>
  4075b8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4075bc:	str	x0, [x1, #1152]
  4075c0:	ldr	x25, [x19]
  4075c4:	cbz	x0, 407768 <wcrtomb@plt+0x2b48>
  4075c8:	cmp	x0, x25
  4075cc:	b.ls	407768 <wcrtomb@plt+0x2b48>  // b.plast
  4075d0:	sub	x2, x0, x25
  4075d4:	mov	w1, #0x2f                  	// #47
  4075d8:	mov	x0, x25
  4075dc:	bl	404960 <memchr@plt>
  4075e0:	cbnz	x0, 407768 <wcrtomb@plt+0x2b48>
  4075e4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4075e8:	mov	x0, x25
  4075ec:	mov	w2, #0x40000000            	// #1073741824
  4075f0:	mov	w1, #0x0                   	// #0
  4075f4:	ldr	x3, [x3, #936]
  4075f8:	bl	434da8 <wcrtomb@plt+0x30188>
  4075fc:	b	407778 <wcrtomb@plt+0x2b58>
  407600:	stp	x27, x28, [sp, #80]
  407604:	adrp	x25, 493000 <_obstack_memory_used@@Base+0x41bf0>
  407608:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40760c:	ldr	x28, [x21, #552]
  407610:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407614:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  407618:	add	x25, x25, #0x680
  40761c:	add	x19, x19, #0x498
  407620:	add	x27, x27, #0xbd0
  407624:	add	x26, x26, #0x360
  407628:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40762c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407630:	add	x1, x1, #0xc48
  407634:	add	x0, x0, #0x388
  407638:	stp	x0, x1, [sp, #128]
  40763c:	stp	xzr, xzr, [sp, #152]
  407640:	ldr	x0, [x19]
  407644:	ldp	x1, x2, [x0, #40]
  407648:	cmp	x1, x2
  40764c:	b.cs	407748 <wcrtomb@plt+0x2b28>  // b.hs, b.nlast
  407650:	add	x2, x1, #0x1
  407654:	str	x2, [x0, #40]
  407658:	mov	w0, #0x7                   	// #7
  40765c:	strb	w0, [x1]
  407660:	mov	x1, x27
  407664:	mov	w2, #0x5                   	// #5
  407668:	mov	x0, #0x0                   	// #0
  40766c:	ldr	x22, [x19]
  407670:	bl	4049c0 <dcgettext@plt>
  407674:	ldr	x1, [x26]
  407678:	mov	x2, x0
  40767c:	ldr	w3, [x25, #296]
  407680:	str	x2, [sp, #112]
  407684:	ldr	x0, [x1]
  407688:	add	w3, w3, #0x1
  40768c:	str	w3, [sp, #104]
  407690:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  407694:	mov	x4, x0
  407698:	ldr	w3, [sp, #104]
  40769c:	mov	w1, #0x1                   	// #1
  4076a0:	ldr	x2, [sp, #112]
  4076a4:	mov	x0, x22
  4076a8:	bl	404700 <__fprintf_chk@plt>
  4076ac:	ldr	x0, [x19]
  4076b0:	bl	4048d0 <fflush_unlocked@plt>
  4076b4:	mov	x3, x28
  4076b8:	add	x1, sp, #0xa0
  4076bc:	add	x0, sp, #0x98
  4076c0:	mov	w2, #0xa                   	// #10
  4076c4:	bl	404b40 <__getdelim@plt>
  4076c8:	cmp	x0, #0x0
  4076cc:	b.le	4079f8 <wcrtomb@plt+0x2dd8>
  4076d0:	ldr	x0, [sp, #152]
  4076d4:	ldrb	w1, [x0]
  4076d8:	and	w2, w1, #0xffffffdf
  4076dc:	cmp	w2, #0x59
  4076e0:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  4076e4:	b.eq	407970 <wcrtomb@plt+0x2d50>  // b.none
  4076e8:	cmp	w1, #0x3f
  4076ec:	b.eq	4078d4 <wcrtomb@plt+0x2cb4>  // b.none
  4076f0:	b.hi	4077c8 <wcrtomb@plt+0x2ba8>  // b.pmore
  4076f4:	cmp	w1, #0x21
  4076f8:	b.ne	407708 <wcrtomb@plt+0x2ae8>  // b.any
  4076fc:	ldr	x0, [sp, #128]
  407700:	ldrb	w0, [x0]
  407704:	cbz	w0, 407924 <wcrtomb@plt+0x2d04>
  407708:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40770c:	add	x1, x1, #0xd60
  407710:	ldr	x3, [x19]
  407714:	mov	w2, #0x5                   	// #5
  407718:	str	x3, [sp, #104]
  40771c:	mov	x0, #0x0                   	// #0
  407720:	bl	4049c0 <dcgettext@plt>
  407724:	ldr	x3, [sp, #104]
  407728:	mov	x2, x0
  40772c:	mov	w1, #0x1                   	// #1
  407730:	mov	x0, x3
  407734:	bl	404700 <__fprintf_chk@plt>
  407738:	ldr	x0, [x19]
  40773c:	ldp	x1, x2, [x0, #40]
  407740:	cmp	x1, x2
  407744:	b.cc	407650 <wcrtomb@plt+0x2a30>  // b.lo, b.ul, b.last
  407748:	mov	w1, #0x7                   	// #7
  40774c:	bl	404680 <__overflow@plt>
  407750:	b	407660 <wcrtomb@plt+0x2a40>
  407754:	mov	x0, x25
  407758:	mov	w1, #0x1b6                 	// #438
  40775c:	bl	404bb0 <creat@plt>
  407760:	str	w0, [x23, #1104]
  407764:	b	407458 <wcrtomb@plt+0x2838>
  407768:	mov	x0, x25
  40776c:	mov	w2, #0x1b6                 	// #438
  407770:	mov	w1, #0x0                   	// #0
  407774:	bl	404340 <open@plt>
  407778:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40777c:	str	w0, [x23, #1104]
  407780:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  407784:	ldr	w1, [x1, #988]
  407788:	cmp	w1, #0x4
  40778c:	b.eq	407994 <wcrtomb@plt+0x2d74>  // b.none
  407790:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407794:	ldr	w1, [x1, #200]
  407798:	cmn	w1, #0x1
  40779c:	b.ne	407980 <wcrtomb@plt+0x2d60>  // b.any
  4077a0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4077a4:	ldrb	w1, [x1, #204]
  4077a8:	cbnz	w1, 4077bc <wcrtomb@plt+0x2b9c>
  4077ac:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4077b0:	mov	w26, #0x0                   	// #0
  4077b4:	ldr	x1, [x1, #1032]
  4077b8:	cbz	x1, 4079bc <wcrtomb@plt+0x2d9c>
  4077bc:	strb	w26, [x19, #1056]
  4077c0:	tbz	w0, #31, 4073ac <wcrtomb@plt+0x278c>
  4077c4:	b	40745c <wcrtomb@plt+0x283c>
  4077c8:	cmp	w1, #0x6e
  4077cc:	b.ne	407850 <wcrtomb@plt+0x2c30>  // b.any
  4077d0:	ldrb	w1, [x0, #1]
  4077d4:	add	x0, x0, #0x1
  4077d8:	cmp	w1, #0x20
  4077dc:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4077e0:	b.ne	4077f8 <wcrtomb@plt+0x2bd8>  // b.any
  4077e4:	nop
  4077e8:	ldrb	w1, [x0, #1]!
  4077ec:	cmp	w1, #0x20
  4077f0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4077f4:	b.eq	4077e8 <wcrtomb@plt+0x2bc8>  // b.none
  4077f8:	cmp	w1, #0x0
  4077fc:	mov	x2, x0
  407800:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  407804:	b.eq	407818 <wcrtomb@plt+0x2bf8>  // b.none
  407808:	ldrb	w1, [x2, #1]!
  40780c:	cmp	w1, #0x0
  407810:	ccmp	w1, #0xa, #0x4, ne  // ne = any
  407814:	b.ne	407808 <wcrtomb@plt+0x2be8>  // b.any
  407818:	strb	wzr, [x2]
  40781c:	ldrb	w1, [x0]
  407820:	cbnz	w1, 407960 <wcrtomb@plt+0x2d40>
  407824:	ldr	x3, [x19]
  407828:	mov	w2, #0x5                   	// #5
  40782c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407830:	mov	x0, #0x0                   	// #0
  407834:	add	x1, x1, #0xd38
  407838:	str	x3, [sp, #104]
  40783c:	bl	4049c0 <dcgettext@plt>
  407840:	ldr	x3, [sp, #104]
  407844:	mov	x1, x3
  407848:	bl	404000 <fputs@plt>
  40784c:	b	407640 <wcrtomb@plt+0x2a20>
  407850:	cmp	w1, #0x71
  407854:	b.ne	407708 <wcrtomb@plt+0x2ae8>  // b.any
  407858:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40785c:	ldr	x0, [x19, #1136]
  407860:	cbz	x0, 407868 <wcrtomb@plt+0x2c48>
  407864:	blr	x0
  407868:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40786c:	add	x1, x1, #0xd18
  407870:	mov	w2, #0x5                   	// #5
  407874:	mov	x0, #0x0                   	// #0
  407878:	bl	4049c0 <dcgettext@plt>
  40787c:	mov	w1, #0x0                   	// #0
  407880:	mov	x2, x0
  407884:	mov	w0, #0x0                   	// #0
  407888:	bl	404050 <error@plt>
  40788c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407890:	ldr	w0, [x0, #988]
  407894:	sub	w0, w0, #0x5
  407898:	cmp	w0, #0x2
  40789c:	b.ls	4078d0 <wcrtomb@plt+0x2cb0>  // b.plast
  4078a0:	ldr	x0, [x19, #1136]
  4078a4:	cbz	x0, 4078ac <wcrtomb@plt+0x2c8c>
  4078a8:	blr	x0
  4078ac:	mov	w2, #0x5                   	// #5
  4078b0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4078b4:	mov	x0, #0x0                   	// #0
  4078b8:	add	x1, x1, #0xc28
  4078bc:	bl	4049c0 <dcgettext@plt>
  4078c0:	mov	x2, x0
  4078c4:	mov	w1, #0x0                   	// #0
  4078c8:	mov	w0, #0x0                   	// #0
  4078cc:	bl	404050 <error@plt>
  4078d0:	bl	410460 <wcrtomb@plt+0xb840>
  4078d4:	ldr	x3, [x19]
  4078d8:	mov	w2, #0x5                   	// #5
  4078dc:	ldr	x1, [sp, #136]
  4078e0:	mov	x0, #0x0                   	// #0
  4078e4:	str	x3, [sp, #104]
  4078e8:	bl	4049c0 <dcgettext@plt>
  4078ec:	mov	x2, x0
  4078f0:	ldr	x3, [sp, #104]
  4078f4:	mov	w1, #0x1                   	// #1
  4078f8:	mov	x0, x3
  4078fc:	bl	404700 <__fprintf_chk@plt>
  407900:	ldr	x0, [sp, #128]
  407904:	ldrb	w0, [x0]
  407908:	cbz	w0, 40792c <wcrtomb@plt+0x2d0c>
  40790c:	ldr	x3, [x19]
  407910:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407914:	mov	w2, #0x5                   	// #5
  407918:	add	x1, x1, #0xcf8
  40791c:	str	x3, [sp, #104]
  407920:	b	40771c <wcrtomb@plt+0x2afc>
  407924:	bl	42a738 <wcrtomb@plt+0x25b18>
  407928:	b	407640 <wcrtomb@plt+0x2a20>
  40792c:	ldr	x3, [x19]
  407930:	mov	w2, #0x5                   	// #5
  407934:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407938:	mov	x0, #0x0                   	// #0
  40793c:	add	x1, x1, #0xcd0
  407940:	str	x3, [sp, #104]
  407944:	bl	4049c0 <dcgettext@plt>
  407948:	mov	x2, x0
  40794c:	ldr	x3, [sp, #104]
  407950:	mov	w1, #0x1                   	// #1
  407954:	mov	x0, x3
  407958:	bl	404700 <__fprintf_chk@plt>
  40795c:	b	40790c <wcrtomb@plt+0x2cec>
  407960:	ldr	x19, [x20, #864]
  407964:	bl	450328 <argp_parse@@Base+0x10548>
  407968:	str	x0, [x19]
  40796c:	ldr	x0, [sp, #152]
  407970:	bl	4047b0 <free@plt>
  407974:	ldr	x19, [x20, #864]
  407978:	ldp	x27, x28, [sp, #80]
  40797c:	b	407388 <wcrtomb@plt+0x2768>
  407980:	cmp	w1, #0x0
  407984:	cset	w1, ne  // ne = any
  407988:	strb	w1, [x19, #1056]
  40798c:	tbz	w0, #31, 4073ac <wcrtomb@plt+0x278c>
  407990:	b	40745c <wcrtomb@plt+0x283c>
  407994:	strb	wzr, [x19, #1056]
  407998:	b	407790 <wcrtomb@plt+0x2b70>
  40799c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4079a0:	mov	x0, x25
  4079a4:	mov	w2, #0x40000000            	// #1073741824
  4079a8:	mov	w1, #0x42                  	// #66
  4079ac:	ldr	x3, [x3, #936]
  4079b0:	bl	434da8 <wcrtomb@plt+0x30188>
  4079b4:	str	w0, [x23, #1104]
  4079b8:	b	407458 <wcrtomb@plt+0x2838>
  4079bc:	mov	w1, w0
  4079c0:	add	x2, sp, #0xa0
  4079c4:	mov	w0, #0x0                   	// #0
  4079c8:	bl	4049a0 <__fxstat@plt>
  4079cc:	cbz	w0, 4079dc <wcrtomb@plt+0x2dbc>
  4079d0:	ldr	w0, [x23, #1104]
  4079d4:	strb	w26, [x19, #1056]
  4079d8:	b	4077c0 <wcrtomb@plt+0x2ba0>
  4079dc:	ldr	w1, [sp, #176]
  4079e0:	ldr	w0, [x23, #1104]
  4079e4:	and	w1, w1, #0xf000
  4079e8:	cmp	w1, #0x8, lsl #12
  4079ec:	cset	w26, eq  // eq = none
  4079f0:	strb	w26, [x19, #1056]
  4079f4:	b	4077c0 <wcrtomb@plt+0x2ba0>
  4079f8:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  4079fc:	ldr	x0, [x19, #1136]
  407a00:	cbz	x0, 407a08 <wcrtomb@plt+0x2de8>
  407a04:	blr	x0
  407a08:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407a0c:	mov	w2, #0x5                   	// #5
  407a10:	add	x1, x1, #0xc00
  407a14:	b	407874 <wcrtomb@plt+0x2c54>
  407a18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407a1c:	stp	x27, x28, [sp, #80]
  407a20:	ldr	x0, [x0, #1136]
  407a24:	cbz	x0, 407a2c <wcrtomb@plt+0x2e0c>
  407a28:	blr	x0
  407a2c:	mov	w2, #0x5                   	// #5
  407a30:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407a34:	mov	x0, #0x0                   	// #0
  407a38:	add	x1, x1, #0xbb8
  407a3c:	bl	4049c0 <dcgettext@plt>
  407a40:	mov	x1, x0
  407a44:	ldr	x0, [x19, #896]
  407a48:	mov	x19, x1
  407a4c:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  407a50:	mov	x3, x0
  407a54:	mov	x2, x19
  407a58:	mov	w1, #0x0                   	// #0
  407a5c:	mov	w0, #0x0                   	// #0
  407a60:	bl	404050 <error@plt>
  407a64:	bl	410460 <wcrtomb@plt+0xb840>
  407a68:	stp	x29, x30, [sp, #-224]!
  407a6c:	adrp	x1, 406000 <wcrtomb@plt+0x13e0>
  407a70:	add	x1, x1, #0xff8
  407a74:	mov	x29, sp
  407a78:	stp	x19, x20, [sp, #16]
  407a7c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  407a80:	add	x19, x19, #0x4d0
  407a84:	mov	w0, #0x0                   	// #0
  407a88:	stp	x21, x22, [sp, #32]
  407a8c:	str	x1, [x19, #496]
  407a90:	bl	40a2d8 <wcrtomb@plt+0x56b8>
  407a94:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407a98:	str	wzr, [x19, #440]
  407a9c:	ldrb	w0, [x0, #24]
  407aa0:	cbz	w0, 407aac <wcrtomb@plt+0x2e8c>
  407aa4:	ldr	x0, [x19, #432]
  407aa8:	cbnz	x0, 407e04 <wcrtomb@plt+0x31e4>
  407aac:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  407ab0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407ab4:	stp	x23, x24, [sp, #48]
  407ab8:	ldr	w0, [x22, #1104]
  407abc:	ldr	x2, [x1, #1048]
  407ac0:	stp	x25, x26, [sp, #64]
  407ac4:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  407ac8:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  407acc:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  407ad0:	add	x21, x21, #0x10
  407ad4:	add	x20, x20, #0x418
  407ad8:	add	x23, x23, #0xcc
  407adc:	add	x26, x22, #0x450
  407ae0:	mov	w24, #0x3fffffff            	// #1073741823
  407ae4:	mov	w25, #0xc0000000            	// #-1073741824
  407ae8:	cmp	w0, w24
  407aec:	ldr	x1, [x21]
  407af0:	b.le	407b3c <wcrtomb@plt+0x2f1c>
  407af4:	add	w0, w0, w25
  407af8:	bl	435660 <wcrtomb@plt+0x30a40>
  407afc:	ldr	x1, [x20]
  407b00:	cmp	x1, x0
  407b04:	b.eq	407f50 <wcrtomb@plt+0x3330>  // b.none
  407b08:	cbz	x0, 407b44 <wcrtomb@plt+0x2f24>
  407b0c:	cmn	x0, #0x1
  407b10:	b.eq	407de4 <wcrtomb@plt+0x31c4>  // b.none
  407b14:	bl	4052c8 <wcrtomb@plt+0x6a8>
  407b18:	adrp	x0, 407000 <wcrtomb@plt+0x23e0>
  407b1c:	add	x0, x0, #0xa68
  407b20:	str	x0, [x19, #496]
  407b24:	ldp	x19, x20, [sp, #16]
  407b28:	ldp	x21, x22, [sp, #32]
  407b2c:	ldp	x23, x24, [sp, #48]
  407b30:	ldp	x25, x26, [sp, #64]
  407b34:	ldp	x29, x30, [sp], #224
  407b38:	ret
  407b3c:	bl	44f230 <argp_parse@@Base+0xf450>
  407b40:	b	407afc <wcrtomb@plt+0x2edc>
  407b44:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407b48:	ldrb	w1, [x1, #204]
  407b4c:	cbz	w1, 407b14 <wcrtomb@plt+0x2ef4>
  407b50:	stp	x27, x28, [sp, #80]
  407b54:	adrp	x28, 497000 <argp_program_version_hook@@Base+0x1e0>
  407b58:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  407b5c:	add	x28, x28, #0x3dc
  407b60:	add	x27, x27, #0x38
  407b64:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  407b68:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407b6c:	add	x1, x1, #0xc28
  407b70:	add	x0, x0, #0xd88
  407b74:	stp	x1, x0, [sp, #104]
  407b78:	ldr	w23, [x28]
  407b7c:	cmp	w23, #0x2
  407b80:	b.hi	407e44 <wcrtomb@plt+0x3224>  // b.pmore
  407b84:	cmp	w23, #0x0
  407b88:	mov	w0, #0x2                   	// #2
  407b8c:	csel	w23, w23, w0, eq  // eq = none
  407b90:	ldr	x0, [x19, #552]
  407b94:	cbz	x0, 407e74 <wcrtomb@plt+0x3254>
  407b98:	ldrb	w0, [x27]
  407b9c:	cbnz	w0, 407e54 <wcrtomb@plt+0x3234>
  407ba0:	mov	w0, w23
  407ba4:	bl	4072b8 <wcrtomb@plt+0x2698>
  407ba8:	tst	w0, #0xff
  407bac:	b.eq	407e54 <wcrtomb@plt+0x3234>  // b.none
  407bb0:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  407bb4:	mov	w25, #0x3fffffff            	// #1073741823
  407bb8:	add	x23, x23, #0x450
  407bbc:	mov	w26, #0xc0000000            	// #-1073741824
  407bc0:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  407bc4:	b	407c00 <wcrtomb@plt+0x2fe0>
  407bc8:	add	w0, w0, w26
  407bcc:	bl	435660 <wcrtomb@plt+0x30a40>
  407bd0:	cmn	x0, #0x1
  407bd4:	b.ne	407c20 <wcrtomb@plt+0x3000>  // b.any
  407bd8:	ldr	x0, [x24, #864]
  407bdc:	ldr	x0, [x0]
  407be0:	bl	433c18 <wcrtomb@plt+0x2eff8>
  407be4:	ldr	x0, [x19, #432]
  407be8:	cbz	x0, 408218 <wcrtomb@plt+0x35f8>
  407bec:	ldr	w0, [x19, #440]
  407bf0:	add	w1, w0, #0x1
  407bf4:	str	w1, [x19, #440]
  407bf8:	cmp	w0, #0xa
  407bfc:	b.gt	4081e0 <wcrtomb@plt+0x35c0>
  407c00:	ldr	w0, [x23]
  407c04:	ldr	x2, [x20]
  407c08:	cmp	w0, w25
  407c0c:	ldr	x1, [x21]
  407c10:	b.gt	407bc8 <wcrtomb@plt+0x2fa8>
  407c14:	bl	44f230 <argp_parse@@Base+0xf450>
  407c18:	cmn	x0, #0x1
  407c1c:	b.eq	407bd8 <wcrtomb@plt+0x2fb8>  // b.none
  407c20:	ldr	x1, [x20]
  407c24:	cmp	x0, x1
  407c28:	b.eq	407c30 <wcrtomb@plt+0x3010>  // b.none
  407c2c:	bl	4052c8 <wcrtomb@plt+0x6a8>
  407c30:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  407c34:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  407c38:	add	x24, x25, #0x28
  407c3c:	add	x26, x23, #0xfe8
  407c40:	ldr	x0, [x25, #40]
  407c44:	ldr	x1, [x23, #4072]
  407c48:	cmp	x0, x1
  407c4c:	b.eq	407ef0 <wcrtomb@plt+0x32d0>  // b.none
  407c50:	str	x0, [sp, #144]
  407c54:	cbz	x0, 407f18 <wcrtomb@plt+0x32f8>
  407c58:	ldrb	w0, [x0, #156]
  407c5c:	cmp	w0, #0x56
  407c60:	b.eq	40802c <wcrtomb@plt+0x340c>  // b.none
  407c64:	cmp	w0, #0x67
  407c68:	b.eq	407fc4 <wcrtomb@plt+0x33a4>  // b.none
  407c6c:	cmp	w0, #0x4d
  407c70:	b.eq	407f64 <wcrtomb@plt+0x3344>  // b.none
  407c74:	ldr	x26, [x19, #456]
  407c78:	cbz	x26, 408098 <wcrtomb@plt+0x3478>
  407c7c:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  407c80:	ldr	x2, [x24, #8]
  407c84:	cbz	x2, 407e98 <wcrtomb@plt+0x3278>
  407c88:	ldr	x1, [x26, #16]
  407c8c:	mov	x0, x2
  407c90:	stp	x1, x2, [sp, #120]
  407c94:	bl	404710 <strcmp@plt>
  407c98:	cbz	w0, 407d34 <wcrtomb@plt+0x3114>
  407c9c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407ca0:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  407ca4:	ldr	w0, [x0, #944]
  407ca8:	ldr	x3, [x3, #1136]
  407cac:	and	w0, w0, #0xfffffffb
  407cb0:	cmp	w0, #0x2
  407cb4:	b.ne	4080c0 <wcrtomb@plt+0x34a0>  // b.any
  407cb8:	ldr	x1, [sp, #120]
  407cbc:	str	x3, [sp, #136]
  407cc0:	mov	x0, x1
  407cc4:	bl	403ff0 <strlen@plt>
  407cc8:	cmp	x0, #0x63
  407ccc:	ldr	x3, [sp, #136]
  407cd0:	b.ls	4080c0 <wcrtomb@plt+0x34a0>  // b.plast
  407cd4:	ldp	x1, x2, [sp, #120]
  407cd8:	mov	x0, x2
  407cdc:	mov	x2, #0x64                  	// #100
  407ce0:	bl	4043c0 <strncmp@plt>
  407ce4:	ldr	x3, [sp, #136]
  407ce8:	cbnz	w0, 4080c0 <wcrtomb@plt+0x34a0>
  407cec:	cbz	x3, 407cf8 <wcrtomb@plt+0x30d8>
  407cf0:	blr	x3
  407cf4:	ldr	x26, [x19, #456]
  407cf8:	mov	w2, #0x5                   	// #5
  407cfc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407d00:	mov	x0, #0x0                   	// #0
  407d04:	add	x1, x1, #0xdc0
  407d08:	bl	4049c0 <dcgettext@plt>
  407d0c:	mov	x2, x0
  407d10:	ldr	x0, [x26, #16]
  407d14:	mov	x26, x2
  407d18:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  407d1c:	mov	x3, x0
  407d20:	mov	x2, x26
  407d24:	mov	w1, #0x0                   	// #0
  407d28:	mov	w0, #0x0                   	// #0
  407d2c:	bl	404050 <error@plt>
  407d30:	ldr	x26, [x19, #456]
  407d34:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  407d38:	adrp	x5, 497000 <argp_program_version_hook@@Base+0x1e0>
  407d3c:	ldr	x1, [x6, #48]
  407d40:	ldr	x0, [x5, #32]
  407d44:	ldr	x2, [x26, #24]
  407d48:	adds	x0, x0, x1
  407d4c:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
  407d50:	b.eq	4080d8 <wcrtomb@plt+0x34b8>  // b.none
  407d54:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407d58:	ldr	x0, [x0, #1136]
  407d5c:	cbz	x0, 407d64 <wcrtomb@plt+0x3144>
  407d60:	blr	x0
  407d64:	mov	w2, #0x5                   	// #5
  407d68:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407d6c:	mov	x0, #0x0                   	// #0
  407d70:	add	x1, x1, #0xe08
  407d74:	bl	4049c0 <dcgettext@plt>
  407d78:	mov	x23, x0
  407d7c:	ldr	x0, [x24, #8]
  407d80:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  407d84:	mov	x24, x0
  407d88:	ldr	x2, [x19, #456]
  407d8c:	add	x1, sp, #0x98
  407d90:	ldr	x0, [x2, #24]
  407d94:	bl	446868 <argp_parse@@Base+0x6a88>
  407d98:	mov	x25, x0
  407d9c:	adrp	x5, 497000 <argp_program_version_hook@@Base+0x1e0>
  407da0:	add	x1, sp, #0xb0
  407da4:	ldr	x0, [x5, #32]
  407da8:	bl	446868 <argp_parse@@Base+0x6a88>
  407dac:	mov	x26, x0
  407db0:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  407db4:	add	x1, sp, #0xc8
  407db8:	ldr	x0, [x6, #48]
  407dbc:	bl	446868 <argp_parse@@Base+0x6a88>
  407dc0:	mov	x6, x0
  407dc4:	mov	x5, x26
  407dc8:	mov	x4, x25
  407dcc:	mov	x3, x24
  407dd0:	mov	x2, x23
  407dd4:	mov	w1, #0x0                   	// #0
  407dd8:	mov	w0, #0x0                   	// #0
  407ddc:	bl	404050 <error@plt>
  407de0:	b	407b78 <wcrtomb@plt+0x2f58>
  407de4:	bl	404ad0 <__errno_location@plt>
  407de8:	ldr	w0, [x0]
  407dec:	cmp	w0, #0x1c
  407df0:	b.eq	407e38 <wcrtomb@plt+0x3218>  // b.none
  407df4:	bl	406170 <wcrtomb@plt+0x1550>
  407df8:	ldr	w0, [x26]
  407dfc:	ldr	x2, [x20]
  407e00:	b	407ae8 <wcrtomb@plt+0x2ec8>
  407e04:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  407e08:	mov	w0, #0x1                   	// #1
  407e0c:	str	w0, [x22, #1104]
  407e10:	bl	42a888 <wcrtomb@plt+0x25c68>
  407e14:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407e18:	str	wzr, [x22, #1104]
  407e1c:	stp	x23, x24, [sp, #48]
  407e20:	ldr	x2, [x1, #1048]
  407e24:	stp	x25, x26, [sp, #64]
  407e28:	cmp	x0, x2
  407e2c:	b.ne	408238 <wcrtomb@plt+0x3618>  // b.any
  407e30:	mov	w0, #0x0                   	// #0
  407e34:	b	407ac4 <wcrtomb@plt+0x2ea4>
  407e38:	ldrb	w0, [x23]
  407e3c:	cbz	w0, 407df4 <wcrtomb@plt+0x31d4>
  407e40:	b	407b50 <wcrtomb@plt+0x2f30>
  407e44:	cmp	w23, #0x8
  407e48:	cset	w23, eq  // eq = none
  407e4c:	lsl	w23, w23, #1
  407e50:	b	407b90 <wcrtomb@plt+0x2f70>
  407e54:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  407e58:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  407e5c:	ldr	x1, [x25, #40]
  407e60:	ldr	x0, [x23, #4072]
  407e64:	cmp	x1, x0
  407e68:	b.eq	407ee4 <wcrtomb@plt+0x32c4>  // b.none
  407e6c:	ldp	x27, x28, [sp, #80]
  407e70:	b	407b18 <wcrtomb@plt+0x2ef8>
  407e74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407e78:	ldr	x0, [x0, #896]
  407e7c:	cbnz	x0, 407b98 <wcrtomb@plt+0x2f78>
  407e80:	ldr	w0, [x22, #1104]
  407e84:	cbz	w0, 408168 <wcrtomb@plt+0x3548>
  407e88:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  407e8c:	ldr	x0, [x0, #1192]
  407e90:	str	x0, [x19, #552]
  407e94:	b	407b98 <wcrtomb@plt+0x2f78>
  407e98:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407e9c:	ldr	x0, [x0, #1136]
  407ea0:	cbz	x0, 407eac <wcrtomb@plt+0x328c>
  407ea4:	blr	x0
  407ea8:	ldr	x26, [x19, #456]
  407eac:	mov	w2, #0x5                   	// #5
  407eb0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407eb4:	mov	x0, #0x0                   	// #0
  407eb8:	add	x1, x1, #0xd98
  407ebc:	bl	4049c0 <dcgettext@plt>
  407ec0:	mov	x23, x0
  407ec4:	ldr	x0, [x26, #16]
  407ec8:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  407ecc:	mov	x3, x0
  407ed0:	mov	x2, x23
  407ed4:	mov	w1, #0x0                   	// #0
  407ed8:	mov	w0, #0x0                   	// #0
  407edc:	bl	404050 <error@plt>
  407ee0:	b	407b78 <wcrtomb@plt+0x2f58>
  407ee4:	bl	406210 <wcrtomb@plt+0x15f0>
  407ee8:	ldp	x27, x28, [sp, #80]
  407eec:	b	407b18 <wcrtomb@plt+0x2ef8>
  407ef0:	ldrb	w0, [x19, #488]
  407ef4:	cbnz	w0, 4080d0 <wcrtomb@plt+0x34b0>
  407ef8:	bl	406210 <wcrtomb@plt+0x15f0>
  407efc:	ldr	x0, [x24]
  407f00:	ldr	x1, [x26]
  407f04:	cmp	x0, x1
  407f08:	b.ne	407c50 <wcrtomb@plt+0x3030>  // b.any
  407f0c:	mov	w0, #0x1                   	// #1
  407f10:	str	xzr, [sp, #144]
  407f14:	strb	w0, [x19, #488]
  407f18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407f1c:	ldr	x0, [x0, #1136]
  407f20:	cbz	x0, 407f28 <wcrtomb@plt+0x3308>
  407f24:	blr	x0
  407f28:	mov	w2, #0x5                   	// #5
  407f2c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  407f30:	mov	x0, #0x0                   	// #0
  407f34:	add	x1, x1, #0x970
  407f38:	bl	4049c0 <dcgettext@plt>
  407f3c:	mov	x2, x0
  407f40:	mov	w1, #0x0                   	// #0
  407f44:	mov	w0, #0x0                   	// #0
  407f48:	bl	404050 <error@plt>
  407f4c:	b	407b78 <wcrtomb@plt+0x2f58>
  407f50:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  407f54:	ldr	x0, [x1, #4064]
  407f58:	add	x0, x0, #0x1
  407f5c:	str	x0, [x1, #4064]
  407f60:	b	407b18 <wcrtomb@plt+0x2ef8>
  407f64:	bl	4051f8 <wcrtomb@plt+0x5d8>
  407f68:	tst	w0, #0xff
  407f6c:	b.eq	407b78 <wcrtomb@plt+0x2f58>  // b.none
  407f70:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  407f74:	add	x0, x19, #0x8
  407f78:	bl	42f438 <wcrtomb@plt+0x2a818>
  407f7c:	ldr	x1, [x24, #104]
  407f80:	mov	x2, #0x64                  	// #100
  407f84:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  407f88:	add	x0, x0, #0x8
  407f8c:	bl	41e910 <wcrtomb@plt+0x19cf0>
  407f90:	ldr	x0, [x24, #104]
  407f94:	mov	x1, #0xc                   	// #12
  407f98:	add	x0, x0, #0x7c
  407f9c:	bl	41cd58 <wcrtomb@plt+0x18138>
  407fa0:	ldr	x2, [x24, #104]
  407fa4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407fa8:	str	x0, [x1, #32]
  407fac:	mov	x1, #0xc                   	// #12
  407fb0:	add	x0, x2, #0x171
  407fb4:	bl	41cd58 <wcrtomb@plt+0x18138>
  407fb8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  407fbc:	str	x0, [x1, #48]
  407fc0:	b	407c74 <wcrtomb@plt+0x3054>
  407fc4:	add	x1, x19, #0x8
  407fc8:	str	x1, [sp, #120]
  407fcc:	mov	x0, x1
  407fd0:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  407fd4:	ldr	x1, [sp, #120]
  407fd8:	add	x0, sp, #0x90
  407fdc:	mov	w2, #0x2                   	// #2
  407fe0:	bl	41c318 <wcrtomb@plt+0x176f8>
  407fe4:	cmp	w0, #0x2
  407fe8:	ldr	x1, [sp, #120]
  407fec:	b.ne	407f18 <wcrtomb@plt+0x32f8>  // b.any
  407ff0:	mov	x0, x1
  407ff4:	str	x1, [sp, #120]
  407ff8:	bl	416dc0 <wcrtomb@plt+0x121a0>
  407ffc:	ldr	x1, [sp, #120]
  408000:	mov	x0, x1
  408004:	bl	42f438 <wcrtomb@plt+0x2a818>
  408008:	ldr	x1, [sp, #120]
  40800c:	add	x0, sp, #0x90
  408010:	mov	w2, #0x0                   	// #0
  408014:	bl	41c318 <wcrtomb@plt+0x176f8>
  408018:	cmp	w0, #0x1
  40801c:	b.eq	4081ac <wcrtomb@plt+0x358c>  // b.none
  408020:	cmp	w0, #0x5
  408024:	b.eq	407c74 <wcrtomb@plt+0x3054>  // b.none
  408028:	b	407f18 <wcrtomb@plt+0x32f8>
  40802c:	bl	4051f8 <wcrtomb@plt+0x5d8>
  408030:	tst	w0, #0xff
  408034:	b.eq	407b78 <wcrtomb@plt+0x2f58>  // b.none
  408038:	add	x0, x19, #0x8
  40803c:	bl	42f438 <wcrtomb@plt+0x2a818>
  408040:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408044:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408048:	mov	x2, #0x64                  	// #100
  40804c:	add	x0, x0, #0x0
  408050:	ldr	x1, [x1, #104]
  408054:	bl	41e910 <wcrtomb@plt+0x19cf0>
  408058:	ldr	x1, [x24]
  40805c:	ldr	x0, [sp, #144]
  408060:	cmp	x0, x1
  408064:	b.cc	40807c <wcrtomb@plt+0x345c>  // b.lo, b.ul, b.last
  408068:	sub	x0, x0, x1
  40806c:	and	x0, x0, #0xfffffffffffffe00
  408070:	add	x0, x0, #0x200
  408074:	add	x1, x1, x0
  408078:	str	x1, [x24]
  40807c:	ldr	x0, [x26]
  408080:	cmp	x1, x0
  408084:	b.hi	4081dc <wcrtomb@plt+0x35bc>  // b.pmore
  408088:	b.eq	408178 <wcrtomb@plt+0x3558>  // b.none
  40808c:	ldrb	w0, [x1, #156]
  408090:	str	x1, [sp, #144]
  408094:	b	407c6c <wcrtomb@plt+0x304c>
  408098:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40809c:	add	x2, x1, #0x680
  4080a0:	ldr	w0, [x2, #296]
  4080a4:	add	w0, w0, #0x1
  4080a8:	str	w0, [x2, #296]
  4080ac:	tbnz	w0, #31, 408240 <wcrtomb@plt+0x3620>
  4080b0:	ldr	w0, [x1, #1664]
  4080b4:	add	w0, w0, #0x1
  4080b8:	str	w0, [x1, #1664]
  4080bc:	b	407e5c <wcrtomb@plt+0x323c>
  4080c0:	cbz	x3, 407eac <wcrtomb@plt+0x328c>
  4080c4:	blr	x3
  4080c8:	ldr	x26, [x19, #456]
  4080cc:	b	407eac <wcrtomb@plt+0x328c>
  4080d0:	str	xzr, [sp, #144]
  4080d4:	b	407f18 <wcrtomb@plt+0x32f8>
  4080d8:	ldr	x0, [x26, #32]
  4080dc:	sub	x2, x2, x0
  4080e0:	cmp	x2, x1
  4080e4:	b.eq	408098 <wcrtomb@plt+0x3478>  // b.none
  4080e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4080ec:	ldr	x0, [x0, #1136]
  4080f0:	cbz	x0, 4080fc <wcrtomb@plt+0x34dc>
  4080f4:	blr	x0
  4080f8:	ldr	x26, [x19, #456]
  4080fc:	mov	w2, #0x5                   	// #5
  408100:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  408104:	mov	x0, #0x0                   	// #0
  408108:	add	x1, x1, #0xe30
  40810c:	bl	4049c0 <dcgettext@plt>
  408110:	mov	x23, x0
  408114:	add	x1, sp, #0x98
  408118:	ldr	x0, [x26, #24]
  40811c:	bl	446868 <argp_parse@@Base+0x6a88>
  408120:	mov	x24, x0
  408124:	ldr	x2, [x19, #456]
  408128:	add	x1, sp, #0xb0
  40812c:	ldr	x0, [x2, #32]
  408130:	bl	446868 <argp_parse@@Base+0x6a88>
  408134:	mov	x25, x0
  408138:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  40813c:	add	x1, sp, #0xc8
  408140:	ldr	x0, [x6, #48]
  408144:	bl	446868 <argp_parse@@Base+0x6a88>
  408148:	mov	x5, x0
  40814c:	mov	x4, x25
  408150:	mov	x3, x24
  408154:	mov	x2, x23
  408158:	mov	w1, #0x0                   	// #0
  40815c:	mov	w0, #0x0                   	// #0
  408160:	bl	404050 <error@plt>
  408164:	b	407b78 <wcrtomb@plt+0x2f58>
  408168:	ldp	x1, x0, [sp, #104]
  40816c:	bl	4042e0 <fopen@plt>
  408170:	str	x0, [x19, #552]
  408174:	b	407b98 <wcrtomb@plt+0x2f78>
  408178:	ldrb	w0, [x19, #488]
  40817c:	cbnz	w0, 40819c <wcrtomb@plt+0x357c>
  408180:	bl	406210 <wcrtomb@plt+0x15f0>
  408184:	ldr	x1, [x24]
  408188:	ldr	x0, [x26]
  40818c:	cmp	x1, x0
  408190:	b.ne	40808c <wcrtomb@plt+0x346c>  // b.any
  408194:	mov	w0, #0x1                   	// #1
  408198:	strb	w0, [x19, #488]
  40819c:	mov	x0, #0x0                   	// #0
  4081a0:	ldrb	w0, [x0, #156]
  4081a4:	str	xzr, [sp, #144]
  4081a8:	brk	#0x3e8
  4081ac:	ldr	x1, [x24]
  4081b0:	ldr	x0, [sp, #144]
  4081b4:	cmp	x0, x1
  4081b8:	b.cc	4081d0 <wcrtomb@plt+0x35b0>  // b.lo, b.ul, b.last
  4081bc:	sub	x0, x0, x1
  4081c0:	and	x0, x0, #0xfffffffffffffe00
  4081c4:	add	x0, x0, #0x200
  4081c8:	add	x1, x1, x0
  4081cc:	str	x1, [x24]
  4081d0:	ldr	x0, [x26]
  4081d4:	cmp	x0, x1
  4081d8:	b.cs	407c74 <wcrtomb@plt+0x3054>  // b.hs, b.nlast
  4081dc:	bl	404650 <abort@plt>
  4081e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4081e4:	ldr	x0, [x0, #1136]
  4081e8:	cbz	x0, 4081f0 <wcrtomb@plt+0x35d0>
  4081ec:	blr	x0
  4081f0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4081f4:	add	x1, x1, #0x9f8
  4081f8:	mov	w2, #0x5                   	// #5
  4081fc:	mov	x0, #0x0                   	// #0
  408200:	bl	4049c0 <dcgettext@plt>
  408204:	mov	x2, x0
  408208:	mov	w1, #0x0                   	// #0
  40820c:	mov	w0, #0x0                   	// #0
  408210:	bl	404050 <error@plt>
  408214:	bl	410460 <wcrtomb@plt+0xb840>
  408218:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40821c:	ldr	x0, [x0, #1136]
  408220:	cbz	x0, 408228 <wcrtomb@plt+0x3608>
  408224:	blr	x0
  408228:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40822c:	mov	w2, #0x5                   	// #5
  408230:	add	x1, x1, #0x9d0
  408234:	b	4081fc <wcrtomb@plt+0x35dc>
  408238:	stp	x27, x28, [sp, #80]
  40823c:	bl	406dd0 <wcrtomb@plt+0x21b0>
  408240:	bl	4050e8 <wcrtomb@plt+0x4c8>
  408244:	nop
  408248:	stp	x29, x30, [sp, #-112]!
  40824c:	adrp	x1, 406000 <wcrtomb@plt+0x13e0>
  408250:	add	x1, x1, #0xe40
  408254:	mov	x29, sp
  408258:	stp	x19, x20, [sp, #16]
  40825c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408260:	add	x20, x20, #0x4d0
  408264:	stp	x21, x22, [sp, #32]
  408268:	stp	x23, x24, [sp, #48]
  40826c:	mov	x24, x0
  408270:	mov	w0, #0x1                   	// #1
  408274:	stp	x25, x26, [sp, #64]
  408278:	str	x1, [x20, #504]
  40827c:	bl	40a2d8 <wcrtomb@plt+0x56b8>
  408280:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408284:	ldr	d0, [x0, #760]
  408288:	fcmp	d0, #0.0
  40828c:	b.eq	40829c <wcrtomb@plt+0x367c>  // b.none
  408290:	ldr	d1, [x20, #480]
  408294:	fcmpe	d0, d1
  408298:	b.ls	4082f8 <wcrtomb@plt+0x36d8>  // b.plast
  40829c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4082a0:	ldrb	w0, [x0, #664]
  4082a4:	cbz	w0, 408620 <wcrtomb@plt+0x3a00>
  4082a8:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  4082ac:	ldr	x22, [x19, #1048]
  4082b0:	mov	x23, x22
  4082b4:	cbz	x22, 408308 <wcrtomb@plt+0x36e8>
  4082b8:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  4082bc:	ldrb	w0, [x26, #204]
  4082c0:	cbz	w0, 408660 <wcrtomb@plt+0x3a40>
  4082c4:	ldr	w0, [x20, #544]
  4082c8:	cbnz	w0, 408890 <wcrtomb@plt+0x3c70>
  4082cc:	ldr	x25, [x20, #456]
  4082d0:	mov	x21, x25
  4082d4:	nop
  4082d8:	cbz	x21, 408890 <wcrtomb@plt+0x3c70>
  4082dc:	ldr	x0, [x21]
  4082e0:	cbz	x0, 4088fc <wcrtomb@plt+0x3cdc>
  4082e4:	ldr	x1, [x0, #8]
  4082e8:	cmp	x22, x1, lsl #9
  4082ec:	b.cc	4088fc <wcrtomb@plt+0x3cdc>  // b.lo, b.ul, b.last
  4082f0:	mov	x21, x0
  4082f4:	b	4082d8 <wcrtomb@plt+0x36b8>
  4082f8:	bl	404ad0 <__errno_location@plt>
  4082fc:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  408300:	mov	w1, #0x1c                  	// #28
  408304:	str	w1, [x0]
  408308:	ldr	x0, [x19, #1048]
  40830c:	cbz	x0, 40856c <wcrtomb@plt+0x394c>
  408310:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408314:	stp	x27, x28, [sp, #80]
  408318:	ldrb	w0, [x0, #204]
  40831c:	cbz	w0, 408a64 <wcrtomb@plt+0x3e44>
  408320:	movi	d1, #0x0
  408324:	ldr	d0, [x20, #480]
  408328:	ldr	x21, [x20, #456]
  40832c:	mov	x23, #0x0                   	// #0
  408330:	fadd	d0, d0, d1
  408334:	str	d0, [x20, #480]
  408338:	cbz	x21, 40835c <wcrtomb@plt+0x373c>
  40833c:	nop
  408340:	ldr	x0, [x21]
  408344:	cbz	x0, 40835c <wcrtomb@plt+0x373c>
  408348:	ldr	x1, [x0, #8]
  40834c:	cmp	x23, x1, lsl #9
  408350:	b.cc	40835c <wcrtomb@plt+0x373c>  // b.lo, b.ul, b.last
  408354:	mov	x21, x0
  408358:	cbnz	x21, 408340 <wcrtomb@plt+0x3720>
  40835c:	tst	x23, #0x1ff
  408360:	b.ne	408a18 <wcrtomb@plt+0x3df8>  // b.any
  408364:	tbz	x23, #63, 408380 <wcrtomb@plt+0x3760>
  408368:	bl	404ad0 <__errno_location@plt>
  40836c:	ldr	w0, [x0]
  408370:	sub	w1, w0, #0x5
  408374:	cmp	w1, #0x1
  408378:	ccmp	w0, #0x1c, #0x4, hi  // hi = pmore
  40837c:	b.ne	4089e0 <wcrtomb@plt+0x3dc0>  // b.any
  408380:	ldr	x0, [x20, #552]
  408384:	cbz	x0, 408638 <wcrtomb@plt+0x3a18>
  408388:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40838c:	ldrb	w0, [x0, #56]
  408390:	cbnz	w0, 408618 <wcrtomb@plt+0x39f8>
  408394:	mov	w0, #0x1                   	// #1
  408398:	bl	4072b8 <wcrtomb@plt+0x2698>
  40839c:	tst	w0, #0xff
  4083a0:	b.eq	408618 <wcrtomb@plt+0x39f8>  // b.none
  4083a4:	add	x0, x20, #0x8
  4083a8:	bl	42f438 <wcrtomb@plt+0x2a818>
  4083ac:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4083b0:	add	x2, x1, #0x680
  4083b4:	ldr	w0, [x2, #296]
  4083b8:	add	w0, w0, #0x1
  4083bc:	str	w0, [x2, #296]
  4083c0:	tbnz	w0, #31, 408a60 <wcrtomb@plt+0x3e40>
  4083c4:	ldr	w0, [x20, #560]
  4083c8:	add	x27, x20, #0x200
  4083cc:	ldp	d0, d1, [x20, #472]
  4083d0:	cmp	w0, #0x0
  4083d4:	cset	w2, eq  // eq = none
  4083d8:	ldr	w0, [x1, #1664]
  4083dc:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  4083e0:	str	xzr, [x20, #480]
  4083e4:	sxtw	x22, w2
  4083e8:	add	w0, w0, #0x1
  4083ec:	fadd	d0, d0, d1
  4083f0:	str	w0, [x1, #1664]
  4083f4:	add	x22, x27, x22, lsl #3
  4083f8:	str	w2, [x20, #560]
  4083fc:	ldr	x25, [x26, #16]
  408400:	sub	x24, x24, x23
  408404:	ldr	x0, [x22, #64]
  408408:	str	d0, [x20, #472]
  40840c:	add	x25, x25, x23
  408410:	cbz	x0, 4088d4 <wcrtomb@plt+0x3cb4>
  408414:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408418:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40841c:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408420:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  408424:	ldrsw	x1, [x1, #876]
  408428:	ldr	x2, [x2, #776]
  40842c:	str	x0, [x26, #16]
  408430:	add	x1, x0, x1, lsl #9
  408434:	str	x0, [x22, #40]
  408438:	str	x1, [x23, #4072]
  40843c:	mov	w0, #0x1                   	// #1
  408440:	str	w0, [x20, #544]
  408444:	cbz	x2, 40844c <wcrtomb@plt+0x382c>
  408448:	bl	4069a8 <wcrtomb@plt+0x1d88>
  40844c:	cbz	x21, 408850 <wcrtomb@plt+0x3c30>
  408450:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408454:	ldr	w0, [x0, #944]
  408458:	cmp	w0, #0x4
  40845c:	b.eq	4086a0 <wcrtomb@plt+0x3a80>  // b.none
  408460:	ldr	x19, [x22, #40]
  408464:	ldr	x0, [x23, #4072]
  408468:	cmp	x19, x0
  40846c:	b.eq	4089e8 <wcrtomb@plt+0x3dc8>  // b.none
  408470:	ldr	x0, [x21, #16]
  408474:	bl	403ff0 <strlen@plt>
  408478:	mov	x27, x0
  40847c:	cmp	x0, #0x64
  408480:	b.ls	4084cc <wcrtomb@plt+0x38ac>  // b.plast
  408484:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408488:	ldr	x0, [x0, #1136]
  40848c:	cbz	x0, 408494 <wcrtomb@plt+0x3874>
  408490:	blr	x0
  408494:	mov	w2, #0x5                   	// #5
  408498:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40849c:	mov	x0, #0x0                   	// #0
  4084a0:	add	x1, x1, #0xec8
  4084a4:	bl	4049c0 <dcgettext@plt>
  4084a8:	mov	x28, x0
  4084ac:	ldr	x0, [x21, #16]
  4084b0:	mov	x27, #0x64                  	// #100
  4084b4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4084b8:	mov	x3, x0
  4084bc:	mov	x2, x28
  4084c0:	mov	w1, #0x0                   	// #0
  4084c4:	mov	w0, #0x0                   	// #0
  4084c8:	bl	404050 <error@plt>
  4084cc:	mov	x2, #0x200                 	// #512
  4084d0:	mov	w1, #0x0                   	// #0
  4084d4:	mov	x0, x19
  4084d8:	bl	404410 <memset@plt>
  4084dc:	ldr	x1, [x21, #16]
  4084e0:	mov	x2, x27
  4084e4:	mov	x0, x19
  4084e8:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  4084ec:	bl	403f70 <memcpy@plt>
  4084f0:	ldr	x0, [x21, #32]
  4084f4:	mov	w1, #0x4d                  	// #77
  4084f8:	strb	w1, [x19, #156]
  4084fc:	mov	x2, #0xc                   	// #12
  408500:	add	x1, x19, #0x7c
  408504:	bl	40c1b0 <wcrtomb@plt+0x7590>
  408508:	ldp	x3, x0, [x21, #24]
  40850c:	add	x1, x19, #0x171
  408510:	mov	x2, #0xc                   	// #12
  408514:	sub	x0, x3, x0
  408518:	bl	40c1b0 <wcrtomb@plt+0x7590>
  40851c:	mov	x2, #0xffffffffffffffff    	// #-1
  408520:	ldr	w28, [x27, #772]
  408524:	mov	x1, x19
  408528:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40852c:	str	wzr, [x27, #772]
  408530:	add	x0, x0, #0xe0
  408534:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  408538:	str	w28, [x27, #772]
  40853c:	ldr	x2, [x22, #40]
  408540:	cmp	x19, x2
  408544:	b.cc	40855c <wcrtomb@plt+0x393c>  // b.lo, b.ul, b.last
  408548:	sub	x19, x19, x2
  40854c:	and	x19, x19, #0xfffffffffffffe00
  408550:	add	x19, x19, #0x200
  408554:	add	x2, x2, x19
  408558:	str	x2, [x22, #40]
  40855c:	ldr	x0, [x23, #4072]
  408560:	cmp	x0, x2
  408564:	b.cs	4086f4 <wcrtomb@plt+0x3ad4>  // b.hs, b.nlast
  408568:	bl	404650 <abort@plt>
  40856c:	movi	d1, #0x0
  408570:	ldr	d0, [x20, #480]
  408574:	fadd	d0, d0, d1
  408578:	str	d0, [x20, #480]
  40857c:	adrp	x0, 408000 <wcrtomb@plt+0x33e0>
  408580:	add	x0, x0, #0x248
  408584:	str	x0, [x20, #504]
  408588:	ldp	x19, x20, [sp, #16]
  40858c:	ldp	x21, x22, [sp, #32]
  408590:	ldp	x23, x24, [sp, #48]
  408594:	ldp	x25, x26, [sp, #64]
  408598:	ldp	x29, x30, [sp], #112
  40859c:	ret
  4085a0:	mov	x2, x24
  4085a4:	mov	x1, x25
  4085a8:	mov	x0, x19
  4085ac:	bl	403f70 <memcpy@plt>
  4085b0:	add	x0, x19, x24
  4085b4:	sub	x2, x28, x24
  4085b8:	mov	w1, #0x0                   	// #0
  4085bc:	bl	404410 <memset@plt>
  4085c0:	ldr	x0, [x22, #40]
  4085c4:	sub	x24, x24, #0x1
  4085c8:	and	x24, x24, #0xfffffffffffffe00
  4085cc:	add	x19, x19, x24
  4085d0:	cmp	x19, x0
  4085d4:	b.cc	4085ec <wcrtomb@plt+0x39cc>  // b.lo, b.ul, b.last
  4085d8:	sub	x19, x19, x0
  4085dc:	and	x19, x19, #0xfffffffffffffe00
  4085e0:	add	x19, x19, #0x200
  4085e4:	add	x0, x0, x19
  4085e8:	str	x0, [x22, #40]
  4085ec:	ldr	x1, [x23, #4072]
  4085f0:	cmp	x1, x0
  4085f4:	b.cc	408568 <wcrtomb@plt+0x3948>  // b.lo, b.ul, b.last
  4085f8:	b.ne	408618 <wcrtomb@plt+0x39f8>  // b.any
  4085fc:	ldrb	w0, [x20, #488]
  408600:	cbnz	w0, 408618 <wcrtomb@plt+0x39f8>
  408604:	bl	406210 <wcrtomb@plt+0x15f0>
  408608:	ldr	x1, [x22, #40]
  40860c:	ldr	x0, [x23, #4072]
  408610:	cmp	x1, x0
  408614:	b.eq	4089cc <wcrtomb@plt+0x3dac>  // b.none
  408618:	ldp	x27, x28, [sp, #80]
  40861c:	b	40857c <wcrtomb@plt+0x395c>
  408620:	bl	42a888 <wcrtomb@plt+0x25c68>
  408624:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  408628:	mov	x22, x0
  40862c:	mov	x23, x0
  408630:	cbz	x22, 408308 <wcrtomb@plt+0x36e8>
  408634:	b	4082b8 <wcrtomb@plt+0x3698>
  408638:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40863c:	ldr	x0, [x0, #896]
  408640:	cbnz	x0, 408388 <wcrtomb@plt+0x3768>
  408644:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408648:	ldr	w0, [x0, #1104]
  40864c:	cbz	w0, 4089a4 <wcrtomb@plt+0x3d84>
  408650:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408654:	ldr	x0, [x0, #1192]
  408658:	str	x0, [x20, #552]
  40865c:	b	408388 <wcrtomb@plt+0x3768>
  408660:	ldr	x0, [x19, #1048]
  408664:	cmp	x22, x0
  408668:	b.ne	4089dc <wcrtomb@plt+0x3dbc>  // b.any
  40866c:	scvtf	d1, x22
  408670:	ldr	d0, [x20, #480]
  408674:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408678:	cmp	x22, x0
  40867c:	ldr	x0, [x1, #4080]
  408680:	fadd	d0, d0, d1
  408684:	add	x0, x0, #0x1
  408688:	str	x0, [x1, #4080]
  40868c:	str	d0, [x20, #480]
  408690:	b.eq	40857c <wcrtomb@plt+0x395c>  // b.none
  408694:	stp	x27, x28, [sp, #80]
  408698:	ldr	x21, [x20, #456]
  40869c:	b	408338 <wcrtomb@plt+0x3718>
  4086a0:	ldp	x2, x3, [x21, #16]
  4086a4:	add	x19, x20, #0x8
  4086a8:	ldr	x4, [x21, #32]
  4086ac:	mov	x1, x19
  4086b0:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4086b4:	add	x0, x0, #0xe88
  4086b8:	sub	x3, x3, x4
  4086bc:	str	x3, [sp, #104]
  4086c0:	bl	417440 <wcrtomb@plt+0x12820>
  4086c4:	mov	x1, x19
  4086c8:	add	x2, x21, #0x20
  4086cc:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4086d0:	add	x0, x0, #0xea0
  4086d4:	bl	417440 <wcrtomb@plt+0x12820>
  4086d8:	add	x2, sp, #0x68
  4086dc:	mov	x1, x19
  4086e0:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4086e4:	add	x0, x0, #0xeb0
  4086e8:	bl	417440 <wcrtomb@plt+0x12820>
  4086ec:	ldr	x0, [x23, #4072]
  4086f0:	ldr	x2, [x22, #40]
  4086f4:	cmp	x0, x2
  4086f8:	b.eq	408860 <wcrtomb@plt+0x3c40>  // b.none
  4086fc:	add	x19, x20, #0x8
  408700:	mov	w0, #0x1                   	// #1
  408704:	mov	x1, x19
  408708:	bl	40c720 <wcrtomb@plt+0x7b00>
  40870c:	mov	x0, x19
  408710:	bl	42f438 <wcrtomb@plt+0x2a818>
  408714:	cbz	x21, 408724 <wcrtomb@plt+0x3b04>
  408718:	add	x1, x21, #0x20
  40871c:	add	x0, x21, #0x10
  408720:	bl	405128 <wcrtomb@plt+0x508>
  408724:	ldr	x19, [x22, #40]
  408728:	ldr	x0, [x23, #4072]
  40872c:	cmp	x19, x0
  408730:	b.eq	4088a4 <wcrtomb@plt+0x3c84>  // b.none
  408734:	ldr	x27, [x20, #456]
  408738:	ldr	x28, [x26, #16]
  40873c:	cmp	x27, #0x0
  408740:	ccmp	x27, x21, #0x4, ne  // ne = any
  408744:	b.eq	40876c <wcrtomb@plt+0x3b4c>  // b.none
  408748:	ldr	x0, [x27, #16]
  40874c:	mov	x26, x27
  408750:	ldr	x27, [x27]
  408754:	bl	4047b0 <free@plt>
  408758:	mov	x0, x26
  40875c:	bl	4047b0 <free@plt>
  408760:	cmp	x27, #0x0
  408764:	ccmp	x27, x21, #0x4, ne  // ne = any
  408768:	b.ne	408748 <wcrtomb@plt+0x3b28>  // b.any
  40876c:	str	x27, [x20, #456]
  408770:	cbz	x27, 40889c <wcrtomb@plt+0x3c7c>
  408774:	sub	x1, x19, x28
  408778:	asr	x1, x1, #9
  40877c:	cbz	x21, 408798 <wcrtomb@plt+0x3b78>
  408780:	ldr	x0, [x21, #8]
  408784:	str	xzr, [x21, #40]
  408788:	add	x0, x0, x1
  40878c:	str	x0, [x21, #8]
  408790:	ldr	x21, [x21]
  408794:	cbnz	x21, 408780 <wcrtomb@plt+0x3b60>
  408798:	ldr	x28, [x23, #4072]
  40879c:	str	wzr, [x20, #544]
  4087a0:	sub	x28, x28, x19
  4087a4:	cmp	x24, x28
  4087a8:	b.ls	4085a0 <wcrtomb@plt+0x3980>  // b.plast
  4087ac:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  4087b0:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4087b4:	add	x21, x21, #0x28
  4087b8:	add	x26, x26, #0xfe8
  4087bc:	mov	w27, #0x1                   	// #1
  4087c0:	b	4087d0 <wcrtomb@plt+0x3bb0>
  4087c4:	sub	x28, x28, x19
  4087c8:	cmp	x24, x28
  4087cc:	b.ls	4085a0 <wcrtomb@plt+0x3980>  // b.plast
  4087d0:	mov	x1, x25
  4087d4:	mov	x0, x19
  4087d8:	mov	x2, x28
  4087dc:	bl	403f70 <memcpy@plt>
  4087e0:	sub	x0, x28, #0x1
  4087e4:	sub	x24, x24, x28
  4087e8:	and	x0, x0, #0xfffffffffffffe00
  4087ec:	add	x25, x25, x28
  4087f0:	add	x0, x19, x0
  4087f4:	ldr	x19, [x21]
  4087f8:	cmp	x0, x19
  4087fc:	b.cc	408814 <wcrtomb@plt+0x3bf4>  // b.lo, b.ul, b.last
  408800:	sub	x0, x0, x19
  408804:	and	x0, x0, #0xfffffffffffffe00
  408808:	add	x0, x0, #0x200
  40880c:	add	x19, x19, x0
  408810:	str	x19, [x21]
  408814:	ldr	x28, [x26]
  408818:	cmp	x19, x28
  40881c:	b.hi	408568 <wcrtomb@plt+0x3948>  // b.pmore
  408820:	b.ne	4087c4 <wcrtomb@plt+0x3ba4>  // b.any
  408824:	ldrb	w0, [x20, #488]
  408828:	mov	x19, #0x0                   	// #0
  40882c:	cbnz	w0, 4087c4 <wcrtomb@plt+0x3ba4>
  408830:	bl	406210 <wcrtomb@plt+0x15f0>
  408834:	ldr	x19, [x21]
  408838:	ldr	x28, [x26]
  40883c:	cmp	x19, x28
  408840:	b.ne	4087c4 <wcrtomb@plt+0x3ba4>  // b.any
  408844:	mov	x19, #0x0                   	// #0
  408848:	strb	w27, [x20, #488]
  40884c:	b	4087c4 <wcrtomb@plt+0x3ba4>
  408850:	ldr	x0, [x23, #4072]
  408854:	ldr	x2, [x22, #40]
  408858:	cmp	x0, x2
  40885c:	b.ne	4086fc <wcrtomb@plt+0x3adc>  // b.any
  408860:	ldrb	w0, [x20, #488]
  408864:	mov	x2, #0x0                   	// #0
  408868:	cbnz	w0, 4086fc <wcrtomb@plt+0x3adc>
  40886c:	bl	406210 <wcrtomb@plt+0x15f0>
  408870:	ldr	x2, [x22, #40]
  408874:	ldr	x0, [x23, #4072]
  408878:	cmp	x2, x0
  40887c:	b.ne	4086fc <wcrtomb@plt+0x3adc>  // b.any
  408880:	mov	w0, #0x1                   	// #1
  408884:	mov	x2, #0x0                   	// #0
  408888:	strb	w0, [x20, #488]
  40888c:	b	4086fc <wcrtomb@plt+0x3adc>
  408890:	ldr	x0, [x19, #1048]
  408894:	scvtf	d1, x22
  408898:	b	408670 <wcrtomb@plt+0x3a50>
  40889c:	str	xzr, [x20, #448]
  4088a0:	b	408774 <wcrtomb@plt+0x3b54>
  4088a4:	ldrb	w0, [x20, #488]
  4088a8:	mov	x19, #0x0                   	// #0
  4088ac:	cbnz	w0, 408734 <wcrtomb@plt+0x3b14>
  4088b0:	bl	406210 <wcrtomb@plt+0x15f0>
  4088b4:	ldr	x0, [x23, #4072]
  4088b8:	ldr	x19, [x22, #40]
  4088bc:	cmp	x19, x0
  4088c0:	b.ne	408734 <wcrtomb@plt+0x3b14>  // b.any
  4088c4:	mov	w0, #0x1                   	// #1
  4088c8:	mov	x19, #0x0                   	// #0
  4088cc:	strb	w0, [x20, #488]
  4088d0:	b	408734 <wcrtomb@plt+0x3b14>
  4088d4:	ldr	x1, [x19, #1048]
  4088d8:	and	x2, x2, #0xff
  4088dc:	add	x0, x20, #0x210
  4088e0:	add	x0, x0, x2, lsl #3
  4088e4:	bl	420510 <wcrtomb@plt+0x1b8f0>
  4088e8:	str	x0, [x22, #64]
  4088ec:	ldrsw	x1, [x20, #560]
  4088f0:	add	x27, x27, x1, lsl #3
  4088f4:	ldr	x0, [x27, #64]
  4088f8:	b	408414 <wcrtomb@plt+0x37f4>
  4088fc:	ldp	x1, x3, [x21, #32]
  408900:	stp	x27, x28, [sp, #80]
  408904:	ldr	x27, [x21, #8]
  408908:	sub	x2, x22, x27, lsl #9
  40890c:	cmp	x2, x1
  408910:	csel	x4, x2, x1, ls  // ls = plast
  408914:	add	x2, x3, x2, lsr #9
  408918:	sub	x1, x1, x4
  40891c:	stp	x1, x2, [x21, #32]
  408920:	cbz	x1, 408998 <wcrtomb@plt+0x3d78>
  408924:	cmp	x25, #0x0
  408928:	ccmp	x25, x21, #0x4, ne  // ne = any
  40892c:	b.eq	408954 <wcrtomb@plt+0x3d34>  // b.none
  408930:	mov	x28, x25
  408934:	ldr	x25, [x25]
  408938:	ldr	x0, [x28, #16]
  40893c:	bl	4047b0 <free@plt>
  408940:	mov	x0, x28
  408944:	bl	4047b0 <free@plt>
  408948:	cmp	x25, #0x0
  40894c:	ccmp	x21, x25, #0x4, ne  // ne = any
  408950:	b.ne	408930 <wcrtomb@plt+0x3d10>  // b.any
  408954:	str	x25, [x20, #456]
  408958:	cbz	x25, 4089c0 <wcrtomb@plt+0x3da0>
  40895c:	cbz	x21, 408978 <wcrtomb@plt+0x3d58>
  408960:	ldr	x0, [x21, #8]
  408964:	str	xzr, [x21, #40]
  408968:	sub	x0, x0, x27
  40896c:	str	x0, [x21, #8]
  408970:	ldr	x21, [x21]
  408974:	cbnz	x21, 408960 <wcrtomb@plt+0x3d40>
  408978:	ldr	x0, [x19, #1048]
  40897c:	cmp	x22, x0
  408980:	b.eq	408a6c <wcrtomb@plt+0x3e4c>  // b.none
  408984:	ldrb	w1, [x26, #204]
  408988:	cbz	w1, 4089e0 <wcrtomb@plt+0x3dc0>
  40898c:	scvtf	d1, x22
  408990:	ldp	x27, x28, [sp, #80]
  408994:	b	408670 <wcrtomb@plt+0x3a50>
  408998:	add	x27, x27, x2
  40899c:	mov	x21, x0
  4089a0:	b	408924 <wcrtomb@plt+0x3d04>
  4089a4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4089a8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4089ac:	add	x1, x1, #0xc28
  4089b0:	add	x0, x0, #0xd88
  4089b4:	bl	4042e0 <fopen@plt>
  4089b8:	str	x0, [x20, #552]
  4089bc:	b	408388 <wcrtomb@plt+0x3768>
  4089c0:	str	xzr, [x20, #448]
  4089c4:	cbnz	x21, 408960 <wcrtomb@plt+0x3d40>
  4089c8:	b	408978 <wcrtomb@plt+0x3d58>
  4089cc:	mov	w0, #0x1                   	// #1
  4089d0:	strb	w0, [x20, #488]
  4089d4:	ldp	x27, x28, [sp, #80]
  4089d8:	b	40857c <wcrtomb@plt+0x395c>
  4089dc:	stp	x27, x28, [sp, #80]
  4089e0:	mov	x0, x23
  4089e4:	bl	406dd0 <wcrtomb@plt+0x21b0>
  4089e8:	ldrb	w0, [x20, #488]
  4089ec:	mov	x19, #0x0                   	// #0
  4089f0:	cbnz	w0, 408470 <wcrtomb@plt+0x3850>
  4089f4:	bl	406210 <wcrtomb@plt+0x15f0>
  4089f8:	ldr	x0, [x23, #4072]
  4089fc:	ldr	x19, [x22, #40]
  408a00:	cmp	x19, x0
  408a04:	b.ne	408470 <wcrtomb@plt+0x3850>  // b.any
  408a08:	mov	w0, #0x1                   	// #1
  408a0c:	mov	x19, #0x0                   	// #0
  408a10:	strb	w0, [x20, #488]
  408a14:	b	408470 <wcrtomb@plt+0x3850>
  408a18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408a1c:	ldr	x0, [x0, #1136]
  408a20:	cbz	x0, 408a28 <wcrtomb@plt+0x3e08>
  408a24:	blr	x0
  408a28:	mov	w2, #0x5                   	// #5
  408a2c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  408a30:	mov	x0, #0x0                   	// #0
  408a34:	add	x1, x1, #0xe60
  408a38:	bl	4049c0 <dcgettext@plt>
  408a3c:	mov	x2, x0
  408a40:	mov	w1, #0x0                   	// #0
  408a44:	mov	w0, #0x0                   	// #0
  408a48:	bl	404050 <error@plt>
  408a4c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408a50:	mov	w2, #0x2                   	// #2
  408a54:	mov	x0, x23
  408a58:	str	w2, [x1, #3568]
  408a5c:	bl	406dd0 <wcrtomb@plt+0x21b0>
  408a60:	bl	4050e8 <wcrtomb@plt+0x4c8>
  408a64:	mov	x23, #0x0                   	// #0
  408a68:	b	4089e0 <wcrtomb@plt+0x3dc0>
  408a6c:	ldp	x27, x28, [sp, #80]
  408a70:	b	40866c <wcrtomb@plt+0x3a4c>
  408a74:	nop
  408a78:	stp	x29, x30, [sp, #-48]!
  408a7c:	mov	x29, sp
  408a80:	stp	x19, x20, [sp, #16]
  408a84:	mov	x20, x0
  408a88:	str	x21, [sp, #32]
  408a8c:	bl	403ff0 <strlen@plt>
  408a90:	cbz	x0, 408b10 <wcrtomb@plt+0x3ef0>
  408a94:	sub	x19, x0, #0x1
  408a98:	add	x19, x20, x19
  408a9c:	cmp	x20, x19
  408aa0:	b.cs	408b10 <wcrtomb@plt+0x3ef0>  // b.hs, b.nlast
  408aa4:	bl	404740 <__ctype_b_loc@plt>
  408aa8:	ldr	x0, [x0]
  408aac:	b	408abc <wcrtomb@plt+0x3e9c>
  408ab0:	sub	x19, x19, #0x1
  408ab4:	cmp	x20, x19
  408ab8:	b.eq	408b10 <wcrtomb@plt+0x3ef0>  // b.none
  408abc:	ldrb	w2, [x19]
  408ac0:	ldrh	w2, [x0, x2, lsl #1]
  408ac4:	tbnz	w2, #11, 408ab0 <wcrtomb@plt+0x3e90>
  408ac8:	cmp	x20, x19
  408acc:	b.cs	408b10 <wcrtomb@plt+0x3ef0>  // b.hs, b.nlast
  408ad0:	sub	x0, x19, #0x7
  408ad4:	mov	x21, #0x0                   	// #0
  408ad8:	cmp	x0, x20
  408adc:	b.ls	408afc <wcrtomb@plt+0x3edc>  // b.plast
  408ae0:	mov	x1, #0x5620                	// #22048
  408ae4:	ldur	x2, [x19, #-7]
  408ae8:	movk	x1, #0x6c6f, lsl #16
  408aec:	movk	x1, #0x6d75, lsl #32
  408af0:	movk	x1, #0x2065, lsl #48
  408af4:	cmp	x2, x1
  408af8:	b.eq	408b28 <wcrtomb@plt+0x3f08>  // b.none
  408afc:	mov	x0, x21
  408b00:	ldp	x19, x20, [sp, #16]
  408b04:	ldr	x21, [sp, #32]
  408b08:	ldp	x29, x30, [sp], #48
  408b0c:	ret
  408b10:	mov	x21, #0x0                   	// #0
  408b14:	mov	x0, x21
  408b18:	ldp	x19, x20, [sp, #16]
  408b1c:	ldr	x21, [sp, #32]
  408b20:	ldp	x29, x30, [sp], #48
  408b24:	ret
  408b28:	sub	x19, x0, x20
  408b2c:	add	x0, x19, #0x1
  408b30:	bl	4501a0 <argp_parse@@Base+0x103c0>
  408b34:	mov	x21, x0
  408b38:	mov	x1, x20
  408b3c:	mov	x2, x19
  408b40:	bl	403f70 <memcpy@plt>
  408b44:	mov	x0, x21
  408b48:	strb	wzr, [x21, x19]
  408b4c:	ldp	x19, x20, [sp, #16]
  408b50:	ldr	x21, [sp, #32]
  408b54:	ldp	x29, x30, [sp], #48
  408b58:	ret
  408b5c:	nop
  408b60:	stp	x29, x30, [sp, #-496]!
  408b64:	mov	x29, sp
  408b68:	stp	x19, x20, [sp, #16]
  408b6c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  408b70:	ldr	x19, [x20]
  408b74:	stp	x21, x22, [sp, #32]
  408b78:	cbz	x19, 408c40 <wcrtomb@plt+0x4020>
  408b7c:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  408b80:	mov	x1, x19
  408b84:	mov	w2, #0x0                   	// #0
  408b88:	ldr	x0, [x21, #776]
  408b8c:	bl	4048c0 <fnmatch@plt>
  408b90:	cbz	w0, 408c30 <wcrtomb@plt+0x4010>
  408b94:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408b98:	ldrb	w0, [x0, #204]
  408b9c:	cbnz	w0, 408c04 <wcrtomb@plt+0x3fe4>
  408ba0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408ba4:	str	x23, [sp, #48]
  408ba8:	ldr	x0, [x0, #1136]
  408bac:	cbz	x0, 408bb4 <wcrtomb@plt+0x3f94>
  408bb0:	blr	x0
  408bb4:	mov	w2, #0x5                   	// #5
  408bb8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  408bbc:	mov	x0, #0x0                   	// #0
  408bc0:	add	x1, x1, #0xf38
  408bc4:	bl	4049c0 <dcgettext@plt>
  408bc8:	mov	x19, x0
  408bcc:	ldr	x1, [x20]
  408bd0:	mov	w0, #0x0                   	// #0
  408bd4:	bl	44ed50 <argp_parse@@Base+0xef70>
  408bd8:	mov	x20, x0
  408bdc:	ldr	x1, [x21, #776]
  408be0:	mov	w0, #0x1                   	// #1
  408be4:	bl	44ed50 <argp_parse@@Base+0xef70>
  408be8:	mov	x4, x0
  408bec:	mov	x3, x20
  408bf0:	mov	x2, x19
  408bf4:	mov	w1, #0x0                   	// #0
  408bf8:	mov	w0, #0x0                   	// #0
  408bfc:	bl	404050 <error@plt>
  408c00:	bl	410460 <wcrtomb@plt+0xb840>
  408c04:	mov	x0, x19
  408c08:	bl	408a78 <wcrtomb@plt+0x3e58>
  408c0c:	mov	x19, x0
  408c10:	cbz	x0, 408ba0 <wcrtomb@plt+0x3f80>
  408c14:	ldr	x1, [x21, #776]
  408c18:	mov	w2, #0x0                   	// #0
  408c1c:	bl	4048c0 <fnmatch@plt>
  408c20:	mov	w22, w0
  408c24:	mov	x0, x19
  408c28:	bl	4047b0 <free@plt>
  408c2c:	cbnz	w22, 408ba0 <wcrtomb@plt+0x3f80>
  408c30:	ldp	x19, x20, [sp, #16]
  408c34:	ldp	x21, x22, [sp, #32]
  408c38:	ldp	x29, x30, [sp], #496
  408c3c:	ret
  408c40:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  408c44:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408c48:	ldr	x19, [x22, #40]
  408c4c:	ldr	x0, [x21, #4072]
  408c50:	cmp	x19, x0
  408c54:	b.eq	408cc8 <wcrtomb@plt+0x40a8>  // b.none
  408c58:	cbz	x19, 408c78 <wcrtomb@plt+0x4058>
  408c5c:	ldrb	w0, [x19, #156]
  408c60:	cmp	w0, #0x56
  408c64:	b.eq	408cf8 <wcrtomb@plt+0x40d8>  // b.none
  408c68:	cmp	w0, #0x67
  408c6c:	b.eq	408d0c <wcrtomb@plt+0x40ec>  // b.none
  408c70:	ldr	x19, [x20]
  408c74:	cbnz	x19, 408b7c <wcrtomb@plt+0x3f5c>
  408c78:	str	x23, [sp, #48]
  408c7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408c80:	ldr	x0, [x0, #1136]
  408c84:	cbz	x0, 408c8c <wcrtomb@plt+0x406c>
  408c88:	blr	x0
  408c8c:	mov	w2, #0x5                   	// #5
  408c90:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  408c94:	mov	x0, #0x0                   	// #0
  408c98:	add	x1, x1, #0xf18
  408c9c:	bl	4049c0 <dcgettext@plt>
  408ca0:	mov	x19, x0
  408ca4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408ca8:	ldr	x0, [x1, #776]
  408cac:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  408cb0:	mov	x3, x0
  408cb4:	mov	x2, x19
  408cb8:	mov	w1, #0x0                   	// #0
  408cbc:	mov	w0, #0x0                   	// #0
  408cc0:	bl	404050 <error@plt>
  408cc4:	bl	410460 <wcrtomb@plt+0xb840>
  408cc8:	str	x23, [sp, #48]
  408ccc:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408cd0:	add	x23, x23, #0x4d0
  408cd4:	ldrb	w0, [x23, #488]
  408cd8:	cbnz	w0, 408c7c <wcrtomb@plt+0x405c>
  408cdc:	bl	406210 <wcrtomb@plt+0x15f0>
  408ce0:	ldr	x0, [x21, #4072]
  408ce4:	ldr	x19, [x22, #40]
  408ce8:	cmp	x19, x0
  408cec:	b.eq	408d44 <wcrtomb@plt+0x4124>  // b.none
  408cf0:	ldr	x23, [sp, #48]
  408cf4:	b	408c58 <wcrtomb@plt+0x4038>
  408cf8:	mov	x1, x19
  408cfc:	add	x0, x20, #0x0
  408d00:	mov	x2, #0x64                  	// #100
  408d04:	bl	41e910 <wcrtomb@plt+0x19cf0>
  408d08:	b	408c70 <wcrtomb@plt+0x4050>
  408d0c:	add	x0, sp, #0x48
  408d10:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  408d14:	add	x0, x19, #0x7c
  408d18:	mov	x1, #0xc                   	// #12
  408d1c:	bl	41cd38 <wcrtomb@plt+0x18118>
  408d20:	mov	x2, x0
  408d24:	mov	x1, x19
  408d28:	add	x0, sp, #0x1a0
  408d2c:	bl	417598 <wcrtomb@plt+0x12978>
  408d30:	add	x0, sp, #0x48
  408d34:	bl	416dc0 <wcrtomb@plt+0x121a0>
  408d38:	add	x0, sp, #0x48
  408d3c:	bl	42f438 <wcrtomb@plt+0x2a818>
  408d40:	b	408c70 <wcrtomb@plt+0x4050>
  408d44:	mov	w0, #0x1                   	// #1
  408d48:	strb	w0, [x23, #488]
  408d4c:	b	408c7c <wcrtomb@plt+0x405c>
  408d50:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408d54:	ldr	x0, [x0, #1728]
  408d58:	mov	x16, x0
  408d5c:	br	x16
  408d60:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408d64:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408d68:	ldr	x0, [x0, #1048]
  408d6c:	ldr	x1, [x1, #1736]
  408d70:	mov	x16, x1
  408d74:	br	x16
  408d78:	stp	x29, x30, [sp, #-240]!
  408d7c:	adrp	x2, 407000 <wcrtomb@plt+0x23e0>
  408d80:	adrp	x1, 408000 <wcrtomb@plt+0x33e0>
  408d84:	mov	x29, sp
  408d88:	stp	x21, x22, [sp, #32]
  408d8c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  408d90:	add	x2, x2, #0xa68
  408d94:	stp	x19, x20, [sp, #16]
  408d98:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408d9c:	add	x20, x20, #0x4d0
  408da0:	ldr	x3, [x22, #1048]
  408da4:	stp	x23, x24, [sp, #48]
  408da8:	add	x1, x1, #0x248
  408dac:	stp	x25, x26, [sp, #64]
  408db0:	stp	x27, x28, [sp, #80]
  408db4:	stp	x2, x1, [x20, #496]
  408db8:	cbz	x3, 409628 <wcrtomb@plt+0x4a08>
  408dbc:	mov	w19, w0
  408dc0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408dc4:	ldr	x0, [x0, #976]
  408dc8:	cbz	x0, 409654 <wcrtomb@plt+0x4a34>
  408dcc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408dd0:	add	x0, x0, #0xe0
  408dd4:	bl	42f438 <wcrtomb@plt+0x2a818>
  408dd8:	str	wzr, [x20, #560]
  408ddc:	ldr	x0, [x20, #576]
  408de0:	add	x21, x20, #0x200
  408de4:	cbz	x0, 4091d0 <wcrtomb@plt+0x45b0>
  408de8:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  408dec:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408df0:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408df4:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408df8:	ldr	x2, [x23, #816]
  408dfc:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  408e00:	ldrsw	x1, [x1, #876]
  408e04:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  408e08:	cmp	w19, #0x2
  408e0c:	ldr	x2, [x2]
  408e10:	add	x1, x0, x1, lsl #9
  408e14:	csel	w24, w19, wzr, ne  // ne = any
  408e18:	str	x1, [x21, #4072]
  408e1c:	str	w24, [x3, #4088]
  408e20:	str	x0, [x25, #16]
  408e24:	str	x0, [x22, #40]
  408e28:	ldrb	w0, [x2]
  408e2c:	cmp	w0, #0x2d
  408e30:	b.eq	408f00 <wcrtomb@plt+0x42e0>  // b.none
  408e34:	adrp	x28, 497000 <argp_program_version_hook@@Base+0x1e0>
  408e38:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408e3c:	adrp	x27, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408e40:	ldr	x3, [x28, #1032]
  408e44:	str	xzr, [x27, #4064]
  408e48:	ldrb	w0, [x0, #969]
  408e4c:	strb	w0, [x20, #444]
  408e50:	cbz	x3, 409000 <wcrtomb@plt+0x43e0>
  408e54:	cmp	w19, #0x1
  408e58:	b.eq	408fb4 <wcrtomb@plt+0x4394>  // b.none
  408e5c:	cmp	w19, #0x2
  408e60:	b.eq	409768 <wcrtomb@plt+0x4b48>  // b.none
  408e64:	cbz	w19, 408f90 <wcrtomb@plt+0x4370>
  408e68:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408e6c:	ldr	w1, [x0, #1104]
  408e70:	tbnz	w1, #31, 40918c <wcrtomb@plt+0x456c>
  408e74:	mov	w0, #0x3fffffff            	// #1073741823
  408e78:	cmp	w1, w0
  408e7c:	b.le	408f54 <wcrtomb@plt+0x4334>
  408e80:	bl	42a560 <wcrtomb@plt+0x25940>
  408e84:	bl	42a508 <wcrtomb@plt+0x258e8>
  408e88:	cbz	w19, 408f6c <wcrtomb@plt+0x434c>
  408e8c:	sub	w0, w19, #0x1
  408e90:	cmp	w0, #0x1
  408e94:	b.hi	408ec4 <wcrtomb@plt+0x42a4>  // b.pmore
  408e98:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408e9c:	cmp	w19, #0x1
  408ea0:	str	xzr, [x0, #4080]
  408ea4:	b.ne	408f7c <wcrtomb@plt+0x435c>  // b.any
  408ea8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408eac:	ldr	x0, [x0, #776]
  408eb0:	cbz	x0, 408ec4 <wcrtomb@plt+0x42a4>
  408eb4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408eb8:	ldrb	w1, [x1, #204]
  408ebc:	cbz	w1, 4091f0 <wcrtomb@plt+0x45d0>
  408ec0:	bl	4069a8 <wcrtomb@plt+0x1d88>
  408ec4:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  408ec8:	add	x19, x19, #0x428
  408ecc:	mov	x0, x19
  408ed0:	bl	444438 <argp_parse@@Base+0x4658>
  408ed4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408ed8:	add	x0, x0, #0x3e0
  408edc:	ldp	x2, x3, [x19]
  408ee0:	stp	x2, x3, [x0]
  408ee4:	ldp	x19, x20, [sp, #16]
  408ee8:	ldp	x21, x22, [sp, #32]
  408eec:	ldp	x23, x24, [sp, #48]
  408ef0:	ldp	x25, x26, [sp, #64]
  408ef4:	ldp	x27, x28, [sp, #80]
  408ef8:	ldp	x29, x30, [sp], #240
  408efc:	ret
  408f00:	ldrb	w0, [x2, #1]
  408f04:	cbnz	w0, 408e34 <wcrtomb@plt+0x4214>
  408f08:	cmp	w24, #0x0
  408f0c:	cset	w0, ne  // ne = any
  408f10:	bl	404970 <isatty@plt>
  408f14:	cbz	w0, 408e34 <wcrtomb@plt+0x4214>
  408f18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408f1c:	ldr	x0, [x0, #1136]
  408f20:	cbz	x0, 408f28 <wcrtomb@plt+0x4308>
  408f24:	blr	x0
  408f28:	cbnz	w24, 409690 <wcrtomb@plt+0x4a70>
  408f2c:	mov	w2, #0x5                   	// #5
  408f30:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  408f34:	mov	x0, #0x0                   	// #0
  408f38:	add	x1, x1, #0xf90
  408f3c:	bl	4049c0 <dcgettext@plt>
  408f40:	mov	x2, x0
  408f44:	mov	w1, #0x0                   	// #0
  408f48:	mov	w0, #0x0                   	// #0
  408f4c:	bl	404050 <error@plt>
  408f50:	bl	410460 <wcrtomb@plt+0xb840>
  408f54:	bl	42a490 <wcrtomb@plt+0x25870>
  408f58:	tst	w0, #0xff
  408f5c:	b.eq	40918c <wcrtomb@plt+0x456c>  // b.none
  408f60:	bl	42a560 <wcrtomb@plt+0x25940>
  408f64:	bl	42a508 <wcrtomb@plt+0x258e8>
  408f68:	cbnz	w19, 408e8c <wcrtomb@plt+0x426c>
  408f6c:	ldr	x1, [x22, #40]
  408f70:	ldr	x0, [x21, #4072]
  408f74:	cmp	x1, x0
  408f78:	b.eq	4091a8 <wcrtomb@plt+0x4588>  // b.none
  408f7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408f80:	ldr	x0, [x0, #776]
  408f84:	cbz	x0, 408ec4 <wcrtomb@plt+0x42a4>
  408f88:	bl	408b60 <wcrtomb@plt+0x3f40>
  408f8c:	b	408ec4 <wcrtomb@plt+0x42a4>
  408f90:	bl	42acc8 <wcrtomb@plt+0x260a8>
  408f94:	str	w0, [x20, #512]
  408f98:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408f9c:	mov	w2, #0x1                   	// #1
  408fa0:	ldr	x3, [x25, #16]
  408fa4:	str	x3, [x21, #4072]
  408fa8:	ldr	w1, [x1, #1104]
  408fac:	strb	w2, [x20, #444]
  408fb0:	b	408e70 <wcrtomb@plt+0x4250>
  408fb4:	bl	42a8c0 <wcrtomb@plt+0x25ca0>
  408fb8:	str	w0, [x20, #512]
  408fbc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  408fc0:	ldr	x0, [x1, #1088]
  408fc4:	cbnz	x0, 408e68 <wcrtomb@plt+0x4248>
  408fc8:	ldr	x0, [x23, #816]
  408fcc:	ldr	x0, [x0]
  408fd0:	ldrb	w1, [x0]
  408fd4:	cmp	w1, #0x2d
  408fd8:	b.ne	408e68 <wcrtomb@plt+0x4248>  // b.any
  408fdc:	ldrb	w0, [x0, #1]
  408fe0:	cbnz	w0, 408e68 <wcrtomb@plt+0x4248>
  408fe4:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408fe8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  408fec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  408ff0:	ldr	x2, [x2, #1176]
  408ff4:	str	x2, [x1, #4056]
  408ff8:	ldr	w1, [x0, #1104]
  408ffc:	b	408e70 <wcrtomb@plt+0x4250>
  409000:	ldr	x26, [x23, #816]
  409004:	ldr	x24, [x26]
  409008:	ldrb	w0, [x24]
  40900c:	cmp	w0, #0x2d
  409010:	b.ne	4090b8 <wcrtomb@plt+0x4498>  // b.any
  409014:	ldrb	w0, [x24, #1]
  409018:	cbnz	w0, 4090b8 <wcrtomb@plt+0x4498>
  40901c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  409020:	mov	w0, #0x1                   	// #1
  409024:	strb	w0, [x20, #444]
  409028:	ldrb	w1, [x1, #970]
  40902c:	cbnz	w1, 4096a0 <wcrtomb@plt+0x4a80>
  409030:	cmp	w19, #0x1
  409034:	b.eq	409244 <wcrtomb@plt+0x4624>  // b.none
  409038:	cmp	w19, #0x2
  40903c:	b.eq	409208 <wcrtomb@plt+0x45e8>  // b.none
  409040:	cbnz	w19, 408e68 <wcrtomb@plt+0x4248>
  409044:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  409048:	add	x0, sp, #0x70
  40904c:	str	x3, [sp, #104]
  409050:	str	wzr, [x26, #1104]
  409054:	bl	4065d0 <wcrtomb@plt+0x19b0>
  409058:	mov	w24, w0
  40905c:	cmp	w0, #0x1
  409060:	ldr	x3, [sp, #104]
  409064:	b.hi	4096e0 <wcrtomb@plt+0x4ac0>  // b.pmore
  409068:	ldrb	w0, [sp, #112]
  40906c:	cbz	w0, 4090b0 <wcrtomb@plt+0x4490>
  409070:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409074:	ldr	x0, [x0, #1136]
  409078:	cbz	x0, 409080 <wcrtomb@plt+0x4460>
  40907c:	blr	x0
  409080:	mov	w2, #0x5                   	// #5
  409084:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  409088:	mov	x0, #0x0                   	// #0
  40908c:	add	x1, x1, #0x970
  409090:	bl	4049c0 <dcgettext@plt>
  409094:	mov	x2, x0
  409098:	mov	w1, #0x0                   	// #0
  40909c:	mov	w0, #0x0                   	// #0
  4090a0:	bl	404050 <error@plt>
  4090a4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4090a8:	mov	w1, #0x2                   	// #2
  4090ac:	str	w1, [x0, #3568]
  4090b0:	ldr	w1, [x26, #1104]
  4090b4:	b	408e70 <wcrtomb@plt+0x4250>
  4090b8:	cmp	w19, #0x1
  4090bc:	b.eq	4092f0 <wcrtomb@plt+0x46d0>  // b.none
  4090c0:	cmp	w19, #0x2
  4090c4:	b.eq	409278 <wcrtomb@plt+0x4658>  // b.none
  4090c8:	cbnz	w19, 408e68 <wcrtomb@plt+0x4248>
  4090cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4090d0:	ldrb	w0, [x0, #1144]
  4090d4:	cbnz	w0, 409110 <wcrtomb@plt+0x44f0>
  4090d8:	mov	x0, x24
  4090dc:	mov	w1, #0x3a                  	// #58
  4090e0:	bl	404870 <strchr@plt>
  4090e4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4090e8:	str	x0, [x1, #1152]
  4090ec:	ldr	x24, [x26]
  4090f0:	cbz	x0, 409110 <wcrtomb@plt+0x44f0>
  4090f4:	cmp	x0, x24
  4090f8:	b.ls	409110 <wcrtomb@plt+0x44f0>  // b.plast
  4090fc:	sub	x2, x0, x24
  409100:	mov	w1, #0x2f                  	// #47
  409104:	mov	x0, x24
  409108:	bl	404960 <memchr@plt>
  40910c:	cbz	x0, 40955c <wcrtomb@plt+0x493c>
  409110:	mov	w1, #0x0                   	// #0
  409114:	mov	x0, x24
  409118:	mov	w2, #0x1b6                 	// #438
  40911c:	bl	404340 <open@plt>
  409120:	mov	w1, w0
  409124:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  409128:	cmn	w1, #0x1
  40912c:	str	w1, [x26, #1104]
  409130:	b.eq	40918c <wcrtomb@plt+0x456c>  // b.none
  409134:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  409138:	ldrb	w0, [x24, #204]
  40913c:	cbnz	w0, 409178 <wcrtomb@plt+0x4558>
  409140:	ldr	x0, [x28, #1032]
  409144:	cbz	x0, 4094d8 <wcrtomb@plt+0x48b8>
  409148:	mov	w0, #0x3fffffff            	// #1073741823
  40914c:	cmp	w1, w0
  409150:	b.le	409490 <wcrtomb@plt+0x4870>
  409154:	mov	w0, #0xc0000000            	// #-1073741824
  409158:	add	w0, w1, w0
  40915c:	bl	435530 <wcrtomb@plt+0x30910>
  409160:	strb	wzr, [x20, #488]
  409164:	bl	42acc8 <wcrtomb@plt+0x260a8>
  409168:	ldr	w1, [x26, #1104]
  40916c:	mov	w2, #0x1                   	// #1
  409170:	strb	w2, [x20, #444]
  409174:	str	w0, [x20, #512]
  409178:	ldr	x0, [x25, #16]
  40917c:	str	x0, [x21, #4072]
  409180:	str	xzr, [x27, #4064]
  409184:	str	w1, [x26, #1104]
  409188:	tbz	w1, #31, 409414 <wcrtomb@plt+0x47f4>
  40918c:	bl	404ad0 <__errno_location@plt>
  409190:	ldr	w20, [x0]
  409194:	mov	x19, x0
  409198:	ldr	x0, [x23, #816]
  40919c:	ldr	x0, [x0]
  4091a0:	str	w20, [x19]
  4091a4:	bl	433b88 <wcrtomb@plt+0x2ef68>
  4091a8:	ldrb	w0, [x20, #488]
  4091ac:	cbnz	w0, 408f7c <wcrtomb@plt+0x435c>
  4091b0:	bl	406210 <wcrtomb@plt+0x15f0>
  4091b4:	ldr	x1, [x22, #40]
  4091b8:	ldr	x0, [x21, #4072]
  4091bc:	cmp	x1, x0
  4091c0:	b.ne	408f7c <wcrtomb@plt+0x435c>  // b.any
  4091c4:	mov	w0, #0x1                   	// #1
  4091c8:	strb	w0, [x20, #488]
  4091cc:	b	408f7c <wcrtomb@plt+0x435c>
  4091d0:	ldr	x1, [x22, #1048]
  4091d4:	add	x0, x20, #0x210
  4091d8:	bl	420510 <wcrtomb@plt+0x1b8f0>
  4091dc:	str	x0, [x20, #576]
  4091e0:	ldrsw	x1, [x20, #560]
  4091e4:	add	x21, x21, x1, lsl #3
  4091e8:	ldr	x0, [x21, #64]
  4091ec:	b	408de8 <wcrtomb@plt+0x41c8>
  4091f0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4091f4:	ldr	w1, [x1, #944]
  4091f8:	cmp	w1, #0x4
  4091fc:	b.eq	40939c <wcrtomb@plt+0x477c>  // b.none
  409200:	bl	406838 <wcrtomb@plt+0x1c18>
  409204:	b	408ec4 <wcrtomb@plt+0x42a4>
  409208:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40920c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  409210:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  409214:	ldr	x1, [x1, #1088]
  409218:	str	wzr, [x3, #1104]
  40921c:	ldr	x3, [x25, #16]
  409220:	str	x3, [x21, #4072]
  409224:	strb	w0, [x2, #24]
  409228:	cbz	x1, 40947c <wcrtomb@plt+0x485c>
  40922c:	bl	42a490 <wcrtomb@plt+0x25870>
  409230:	tst	w0, #0xff
  409234:	b.eq	40918c <wcrtomb@plt+0x456c>  // b.none
  409238:	bl	42a560 <wcrtomb@plt+0x25940>
  40923c:	bl	42a508 <wcrtomb@plt+0x258e8>
  409240:	b	408e8c <wcrtomb@plt+0x426c>
  409244:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409248:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40924c:	ldr	x0, [x0, #1088]
  409250:	str	w19, [x1, #1104]
  409254:	cbnz	x0, 40922c <wcrtomb@plt+0x460c>
  409258:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40925c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  409260:	ldr	x1, [x1, #1176]
  409264:	str	x1, [x0, #4056]
  409268:	bl	42a490 <wcrtomb@plt+0x25870>
  40926c:	tst	w0, #0xff
  409270:	b.ne	409238 <wcrtomb@plt+0x4618>  // b.any
  409274:	b	40918c <wcrtomb@plt+0x456c>
  409278:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40927c:	ldrb	w0, [x0, #1144]
  409280:	cbnz	w0, 4092bc <wcrtomb@plt+0x469c>
  409284:	mov	x0, x24
  409288:	mov	w1, #0x3a                  	// #58
  40928c:	bl	404870 <strchr@plt>
  409290:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  409294:	str	x0, [x1, #1152]
  409298:	ldr	x24, [x26]
  40929c:	cbz	x0, 4092bc <wcrtomb@plt+0x469c>
  4092a0:	cmp	x0, x24
  4092a4:	b.ls	4092bc <wcrtomb@plt+0x469c>  // b.plast
  4092a8:	sub	x2, x0, x24
  4092ac:	mov	w1, #0x2f                  	// #47
  4092b0:	mov	x0, x24
  4092b4:	bl	404960 <memchr@plt>
  4092b8:	cbz	x0, 40953c <wcrtomb@plt+0x491c>
  4092bc:	mov	w1, #0x42                  	// #66
  4092c0:	mov	x0, x24
  4092c4:	mov	w2, #0x1b6                 	// #438
  4092c8:	bl	404340 <open@plt>
  4092cc:	mov	w1, w0
  4092d0:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  4092d4:	mov	x0, #0x0                   	// #0
  4092d8:	str	w1, [x24, #1104]
  4092dc:	bl	4065d0 <wcrtomb@plt+0x19b0>
  4092e0:	cmp	w0, #0x1
  4092e4:	b.hi	4096c0 <wcrtomb@plt+0x4aa0>  // b.pmore
  4092e8:	ldr	w1, [x24, #1104]
  4092ec:	b	408e70 <wcrtomb@plt+0x4250>
  4092f0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4092f4:	mov	w21, #0x0                   	// #0
  4092f8:	ldrb	w0, [x0, #885]
  4092fc:	cbnz	w0, 409460 <wcrtomb@plt+0x4840>
  409300:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409304:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  409308:	ldrb	w0, [x0, #970]
  40930c:	ldrb	w1, [x1, #1144]
  409310:	cbz	w0, 4093b4 <wcrtomb@plt+0x4794>
  409314:	cbnz	w1, 409350 <wcrtomb@plt+0x4730>
  409318:	mov	x0, x24
  40931c:	mov	w1, #0x3a                  	// #58
  409320:	bl	404870 <strchr@plt>
  409324:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  409328:	str	x0, [x1, #1152]
  40932c:	ldr	x24, [x26]
  409330:	cbz	x0, 409350 <wcrtomb@plt+0x4730>
  409334:	cmp	x0, x24
  409338:	b.ls	409350 <wcrtomb@plt+0x4730>  // b.plast
  40933c:	sub	x2, x0, x24
  409340:	mov	w1, #0x2f                  	// #47
  409344:	mov	x0, x24
  409348:	bl	404960 <memchr@plt>
  40934c:	cbz	x0, 4095f0 <wcrtomb@plt+0x49d0>
  409350:	mov	x0, x24
  409354:	mov	w2, #0x1b6                 	// #438
  409358:	mov	w1, #0x42                  	// #66
  40935c:	bl	404340 <open@plt>
  409360:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  409364:	str	w0, [x1, #1104]
  409368:	tbnz	w0, #31, 409384 <wcrtomb@plt+0x4764>
  40936c:	mov	w1, #0x3fffffff            	// #1073741823
  409370:	cmp	w0, w1
  409374:	b.gt	409400 <wcrtomb@plt+0x47e0>
  409378:	bl	42a490 <wcrtomb@plt+0x25870>
  40937c:	tst	w0, #0xff
  409380:	b.ne	409238 <wcrtomb@plt+0x4618>  // b.any
  409384:	bl	404ad0 <__errno_location@plt>
  409388:	ldr	w20, [x0]
  40938c:	mov	x19, x0
  409390:	cbz	w21, 409198 <wcrtomb@plt+0x4578>
  409394:	bl	41fa88 <wcrtomb@plt+0x1ae68>
  409398:	b	409198 <wcrtomb@plt+0x4578>
  40939c:	mov	x2, x0
  4093a0:	add	x1, x20, #0x8
  4093a4:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4093a8:	add	x0, x0, #0xb38
  4093ac:	bl	417440 <wcrtomb@plt+0x12820>
  4093b0:	b	408ec4 <wcrtomb@plt+0x42a4>
  4093b4:	cbnz	w1, 4093f0 <wcrtomb@plt+0x47d0>
  4093b8:	mov	x0, x24
  4093bc:	mov	w1, #0x3a                  	// #58
  4093c0:	bl	404870 <strchr@plt>
  4093c4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4093c8:	str	x0, [x1, #1152]
  4093cc:	ldr	x24, [x26]
  4093d0:	cbz	x0, 4093f0 <wcrtomb@plt+0x47d0>
  4093d4:	cmp	x0, x24
  4093d8:	b.ls	4093f0 <wcrtomb@plt+0x47d0>  // b.plast
  4093dc:	sub	x2, x0, x24
  4093e0:	mov	w1, #0x2f                  	// #47
  4093e4:	mov	x0, x24
  4093e8:	bl	404960 <memchr@plt>
  4093ec:	cbz	x0, 40960c <wcrtomb@plt+0x49ec>
  4093f0:	mov	x0, x24
  4093f4:	mov	w1, #0x1b6                 	// #438
  4093f8:	bl	404bb0 <creat@plt>
  4093fc:	b	409360 <wcrtomb@plt+0x4740>
  409400:	bl	42a560 <wcrtomb@plt+0x25940>
  409404:	bl	42a508 <wcrtomb@plt+0x258e8>
  409408:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40940c:	str	xzr, [x0, #4080]
  409410:	b	408ea8 <wcrtomb@plt+0x4288>
  409414:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409418:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40941c:	ldr	w0, [x0, #988]
  409420:	cmp	w0, #0x4
  409424:	b.ne	40942c <wcrtomb@plt+0x480c>  // b.any
  409428:	strb	wzr, [x25, #1056]
  40942c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409430:	ldr	w0, [x0, #200]
  409434:	cmn	w0, #0x1
  409438:	b.eq	40949c <wcrtomb@plt+0x487c>  // b.none
  40943c:	cmp	w0, #0x0
  409440:	mov	w0, #0x3fffffff            	// #1073741823
  409444:	cset	w2, ne  // ne = any
  409448:	strb	w2, [x25, #1056]
  40944c:	cmp	w1, w0
  409450:	b.le	408f54 <wcrtomb@plt+0x4334>
  409454:	bl	42a560 <wcrtomb@plt+0x25940>
  409458:	bl	42a508 <wcrtomb@plt+0x258e8>
  40945c:	b	408f6c <wcrtomb@plt+0x434c>
  409460:	mov	x0, x24
  409464:	mov	w1, w19
  409468:	bl	41f848 <wcrtomb@plt+0x1ac28>
  40946c:	mov	w21, w19
  409470:	ldr	x26, [x23, #816]
  409474:	ldr	x24, [x26]
  409478:	b	409300 <wcrtomb@plt+0x46e0>
  40947c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  409480:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  409484:	ldr	x1, [x1, #1176]
  409488:	str	x1, [x0, #4056]
  40948c:	b	40922c <wcrtomb@plt+0x460c>
  409490:	mov	w0, w1
  409494:	bl	4045c0 <close@plt>
  409498:	b	409160 <wcrtomb@plt+0x4540>
  40949c:	ldrb	w24, [x24, #204]
  4094a0:	cbnz	w24, 4094cc <wcrtomb@plt+0x48ac>
  4094a4:	ldr	x0, [x28, #1032]
  4094a8:	cbz	x0, 4094b4 <wcrtomb@plt+0x4894>
  4094ac:	strb	w24, [x25, #1056]
  4094b0:	b	408e70 <wcrtomb@plt+0x4250>
  4094b4:	add	x2, sp, #0x70
  4094b8:	bl	4049a0 <__fxstat@plt>
  4094bc:	cbz	w0, 409674 <wcrtomb@plt+0x4a54>
  4094c0:	ldr	w1, [x26, #1104]
  4094c4:	strb	w24, [x25, #1056]
  4094c8:	b	408e70 <wcrtomb@plt+0x4250>
  4094cc:	mov	w24, #0x0                   	// #0
  4094d0:	strb	w24, [x25, #1056]
  4094d4:	b	408e70 <wcrtomb@plt+0x4250>
  4094d8:	add	x0, sp, #0x70
  4094dc:	bl	4065d0 <wcrtomb@plt+0x19b0>
  4094e0:	cbz	w0, 409588 <wcrtomb@plt+0x4968>
  4094e4:	cmp	w0, #0x1
  4094e8:	b.ne	40957c <wcrtomb@plt+0x495c>  // b.any
  4094ec:	ldrb	w0, [sp, #112]
  4094f0:	cbz	w0, 409534 <wcrtomb@plt+0x4914>
  4094f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4094f8:	ldr	x0, [x0, #1136]
  4094fc:	cbz	x0, 409504 <wcrtomb@plt+0x48e4>
  409500:	blr	x0
  409504:	mov	w2, #0x5                   	// #5
  409508:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40950c:	mov	x0, #0x0                   	// #0
  409510:	add	x1, x1, #0x970
  409514:	bl	4049c0 <dcgettext@plt>
  409518:	mov	x2, x0
  40951c:	mov	w1, #0x0                   	// #0
  409520:	mov	w0, #0x0                   	// #0
  409524:	bl	404050 <error@plt>
  409528:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40952c:	mov	w1, #0x2                   	// #2
  409530:	str	w1, [x0, #3568]
  409534:	ldr	w1, [x26, #1104]
  409538:	b	409184 <wcrtomb@plt+0x4564>
  40953c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  409540:	mov	w1, #0x42                  	// #66
  409544:	mov	x0, x24
  409548:	mov	w2, #0x40000000            	// #1073741824
  40954c:	ldr	x3, [x3, #936]
  409550:	bl	434da8 <wcrtomb@plt+0x30188>
  409554:	mov	w1, w0
  409558:	b	4092d0 <wcrtomb@plt+0x46b0>
  40955c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  409560:	mov	w1, #0x0                   	// #0
  409564:	mov	x0, x24
  409568:	mov	w2, #0x40000000            	// #1073741824
  40956c:	ldr	x3, [x3, #936]
  409570:	bl	434da8 <wcrtomb@plt+0x30188>
  409574:	mov	w1, w0
  409578:	b	409124 <wcrtomb@plt+0x4504>
  40957c:	ldr	w1, [x26, #1104]
  409580:	str	w0, [x20, #464]
  409584:	b	409148 <wcrtomb@plt+0x4528>
  409588:	ldrb	w0, [sp, #112]
  40958c:	cbz	w0, 4095d0 <wcrtomb@plt+0x49b0>
  409590:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409594:	ldr	x0, [x0, #1136]
  409598:	cbz	x0, 4095a0 <wcrtomb@plt+0x4980>
  40959c:	blr	x0
  4095a0:	mov	w2, #0x5                   	// #5
  4095a4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  4095a8:	mov	x0, #0x0                   	// #0
  4095ac:	add	x1, x1, #0x970
  4095b0:	bl	4049c0 <dcgettext@plt>
  4095b4:	mov	x2, x0
  4095b8:	mov	w1, #0x0                   	// #0
  4095bc:	mov	w0, #0x0                   	// #0
  4095c0:	bl	404050 <error@plt>
  4095c4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4095c8:	mov	w1, #0x2                   	// #2
  4095cc:	str	w1, [x0, #3568]
  4095d0:	ldr	x0, [x23, #816]
  4095d4:	mov	x1, #0x0                   	// #0
  4095d8:	ldr	x0, [x0]
  4095dc:	bl	429f38 <wcrtomb@plt+0x25318>
  4095e0:	ldr	x0, [x28, #1032]
  4095e4:	cbz	x0, 409534 <wcrtomb@plt+0x4914>
  4095e8:	ldr	w1, [x26, #1104]
  4095ec:	b	409148 <wcrtomb@plt+0x4528>
  4095f0:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4095f4:	mov	x0, x24
  4095f8:	mov	w2, #0x40000000            	// #1073741824
  4095fc:	mov	w1, #0x42                  	// #66
  409600:	ldr	x3, [x3, #936]
  409604:	bl	434da8 <wcrtomb@plt+0x30188>
  409608:	b	409360 <wcrtomb@plt+0x4740>
  40960c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  409610:	mov	x0, x24
  409614:	mov	w2, #0x40000000            	// #1073741824
  409618:	mov	w1, #0x41                  	// #65
  40961c:	ldr	x3, [x3, #936]
  409620:	bl	434da8 <wcrtomb@plt+0x30188>
  409624:	b	409360 <wcrtomb@plt+0x4740>
  409628:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40962c:	ldr	x0, [x0, #1136]
  409630:	cbz	x0, 409638 <wcrtomb@plt+0x4a18>
  409634:	blr	x0
  409638:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40963c:	add	x1, x1, #0xf58
  409640:	mov	w2, #0x5                   	// #5
  409644:	mov	x0, #0x0                   	// #0
  409648:	bl	4049c0 <dcgettext@plt>
  40964c:	mov	x2, x0
  409650:	b	408f44 <wcrtomb@plt+0x4324>
  409654:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409658:	ldr	x0, [x0, #1136]
  40965c:	cbz	x0, 409664 <wcrtomb@plt+0x4a44>
  409660:	blr	x0
  409664:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  409668:	mov	w2, #0x5                   	// #5
  40966c:	add	x1, x1, #0xf78
  409670:	b	409644 <wcrtomb@plt+0x4a24>
  409674:	ldr	w0, [sp, #128]
  409678:	ldr	w1, [x26, #1104]
  40967c:	and	w0, w0, #0xf000
  409680:	cmp	w0, #0x8, lsl #12
  409684:	cset	w24, eq  // eq = none
  409688:	strb	w24, [x25, #1056]
  40968c:	b	408e70 <wcrtomb@plt+0x4250>
  409690:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  409694:	mov	w2, #0x5                   	// #5
  409698:	add	x1, x1, #0xfd8
  40969c:	b	409644 <wcrtomb@plt+0x4a24>
  4096a0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4096a4:	ldr	x0, [x0, #1136]
  4096a8:	cbz	x0, 4096b0 <wcrtomb@plt+0x4a90>
  4096ac:	blr	x0
  4096b0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4096b4:	mov	w2, #0x5                   	// #5
  4096b8:	add	x1, x1, #0x20
  4096bc:	b	409644 <wcrtomb@plt+0x4a24>
  4096c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4096c4:	ldr	x0, [x0, #1136]
  4096c8:	cbz	x0, 4096d0 <wcrtomb@plt+0x4ab0>
  4096cc:	blr	x0
  4096d0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4096d4:	mov	w2, #0x5                   	// #5
  4096d8:	add	x1, x1, #0x70
  4096dc:	b	409644 <wcrtomb@plt+0x4a24>
  4096e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4096e4:	ldr	x0, [x0, #1136]
  4096e8:	cbz	x0, 4096f4 <wcrtomb@plt+0x4ad4>
  4096ec:	blr	x0
  4096f0:	ldr	x3, [sp, #104]
  4096f4:	mov	w2, #0x5                   	// #5
  4096f8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4096fc:	mov	x0, #0x0                   	// #0
  409700:	add	x1, x1, #0x48
  409704:	str	x3, [sp, #104]
  409708:	bl	4049c0 <dcgettext@plt>
  40970c:	mov	x2, x0
  409710:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  409714:	add	x1, x1, #0x680
  409718:	add	x0, x1, #0x8
  40971c:	mov	x5, #0x18                  	// #24
  409720:	mov	x1, #0x0                   	// #0
  409724:	ldr	x3, [sp, #104]
  409728:	b	409738 <wcrtomb@plt+0x4b18>
  40972c:	add	x1, x1, #0x1
  409730:	cmp	w24, w6
  409734:	b.eq	409758 <wcrtomb@plt+0x4b38>  // b.none
  409738:	mul	x6, x1, x5
  40973c:	mov	w4, w1
  409740:	ldr	w6, [x6, x0]
  409744:	cbnz	w6, 40972c <wcrtomb@plt+0x4b0c>
  409748:	mov	w1, #0x0                   	// #0
  40974c:	mov	w0, #0x0                   	// #0
  409750:	bl	404050 <error@plt>
  409754:	bl	410460 <wcrtomb@plt+0xb840>
  409758:	smull	x4, w4, w5
  40975c:	add	x0, x0, x4
  409760:	ldr	x3, [x0, #16]
  409764:	b	409748 <wcrtomb@plt+0x4b28>
  409768:	bl	404650 <abort@plt>
  40976c:	nop
  409770:	stp	x29, x30, [sp, #-400]!
  409774:	mov	x29, sp
  409778:	stp	x19, x20, [sp, #16]
  40977c:	mov	x19, x2
  409780:	mov	w2, #0x5                   	// #5
  409784:	stp	x21, x22, [sp, #32]
  409788:	mov	w21, w4
  40978c:	mov	x20, x21
  409790:	stp	x23, x24, [sp, #48]
  409794:	stp	x25, x26, [sp, #64]
  409798:	mov	x26, x0
  40979c:	ands	w25, w3, #0xff
  4097a0:	stp	x27, x28, [sp, #80]
  4097a4:	mov	x27, x1
  4097a8:	b.eq	409974 <wcrtomb@plt+0x4d54>  // b.none
  4097ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4097b0:	mov	x0, #0x0                   	// #0
  4097b4:	add	x1, x1, #0x248
  4097b8:	bl	4049c0 <dcgettext@plt>
  4097bc:	add	x1, sp, #0x78
  4097c0:	mov	x22, x0
  4097c4:	mov	x0, x21
  4097c8:	bl	446868 <argp_parse@@Base+0x6a88>
  4097cc:	mov	x23, x0
  4097d0:	cbz	x19, 409a08 <wcrtomb@plt+0x4de8>
  4097d4:	ldrb	w1, [x19]
  4097d8:	cbz	w1, 409834 <wcrtomb@plt+0x4c14>
  4097dc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4097e0:	adrp	x24, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  4097e4:	add	x21, x21, #0x720
  4097e8:	add	x24, x24, #0xe20
  4097ec:	cmp	w1, #0x25
  4097f0:	add	x28, x19, #0x1
  4097f4:	b.eq	40985c <wcrtomb@plt+0x4c3c>  // b.none
  4097f8:	ldp	x2, x3, [x26, #40]
  4097fc:	cmp	x2, x3
  409800:	b.cs	4099fc <wcrtomb@plt+0x4ddc>  // b.hs, b.nlast
  409804:	add	x3, x2, #0x1
  409808:	str	x3, [x26, #40]
  40980c:	strb	w1, [x2]
  409810:	ldrb	w2, [x19]
  409814:	cmp	w2, #0xd
  409818:	b.eq	409958 <wcrtomb@plt+0x4d38>  // b.none
  40981c:	mov	x2, x28
  409820:	add	x27, x27, #0x1
  409824:	mov	x28, x19
  409828:	mov	x19, x2
  40982c:	ldrb	w1, [x28, #1]
  409830:	cbnz	w1, 4097ec <wcrtomb@plt+0x4bcc>
  409834:	mov	x0, x26
  409838:	bl	4048d0 <fflush_unlocked@plt>
  40983c:	mov	w0, w27
  409840:	ldp	x19, x20, [sp, #16]
  409844:	ldp	x21, x22, [sp, #32]
  409848:	ldp	x23, x24, [sp, #48]
  40984c:	ldp	x25, x26, [sp, #64]
  409850:	ldp	x27, x28, [sp, #80]
  409854:	ldp	x29, x30, [sp], #400
  409858:	ret
  40985c:	ldrb	w2, [x19, #1]
  409860:	cmp	w2, #0x7b
  409864:	b.eq	409ac4 <wcrtomb@plt+0x4ea4>  // b.none
  409868:	cmp	w2, #0x64
  40986c:	b.eq	409aa0 <wcrtomb@plt+0x4e80>  // b.none
  409870:	b.ls	4098a4 <wcrtomb@plt+0x4c84>  // b.plast
  409874:	cmp	w2, #0x74
  409878:	b.eq	4099b8 <wcrtomb@plt+0x4d98>  // b.none
  40987c:	cmp	w2, #0x75
  409880:	b.ne	4098dc <wcrtomb@plt+0x4cbc>  // b.any
  409884:	mov	x1, x26
  409888:	mov	x0, x23
  40988c:	bl	4049e0 <fputs_unlocked@plt>
  409890:	add	x19, x28, #0x1
  409894:	mov	x0, x23
  409898:	bl	403ff0 <strlen@plt>
  40989c:	add	x27, x27, x0
  4098a0:	b	40982c <wcrtomb@plt+0x4c0c>
  4098a4:	cmp	w2, #0x54
  4098a8:	b.eq	409c4c <wcrtomb@plt+0x502c>  // b.none
  4098ac:	cmp	w2, #0x63
  4098b0:	b.ne	409904 <wcrtomb@plt+0x4ce4>  // b.any
  4098b4:	mov	x1, x27
  4098b8:	mov	w4, w20
  4098bc:	mov	w3, w25
  4098c0:	mov	x0, x26
  4098c4:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4098c8:	add	x19, x28, #0x1
  4098cc:	add	x2, x2, #0x288
  4098d0:	bl	409770 <wcrtomb@plt+0x4b50>
  4098d4:	add	x27, x27, w0, sxtw
  4098d8:	b	40982c <wcrtomb@plt+0x4c0c>
  4098dc:	cmp	w2, #0x73
  4098e0:	b.ne	409a38 <wcrtomb@plt+0x4e18>  // b.any
  4098e4:	mov	x1, x26
  4098e8:	mov	x0, x22
  4098ec:	bl	4049e0 <fputs_unlocked@plt>
  4098f0:	add	x19, x28, #0x1
  4098f4:	mov	x0, x22
  4098f8:	bl	403ff0 <strlen@plt>
  4098fc:	add	x27, x27, x0
  409900:	b	40982c <wcrtomb@plt+0x4c0c>
  409904:	cmp	w2, #0x2a
  409908:	b.ne	409a38 <wcrtomb@plt+0x4e18>  // b.any
  40990c:	mov	x0, x26
  409910:	bl	404230 <fileno@plt>
  409914:	add	x2, sp, #0xa8
  409918:	mov	x1, #0x5413                	// #21523
  40991c:	bl	404bd0 <ioctl@plt>
  409920:	cbnz	w0, 40992c <wcrtomb@plt+0x4d0c>
  409924:	ldrh	w5, [sp, #170]
  409928:	cbnz	w5, 409d30 <wcrtomb@plt+0x5110>
  40992c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409930:	add	x0, x0, #0x2e8
  409934:	bl	404af0 <getenv@plt>
  409938:	cbz	x0, 409d08 <wcrtomb@plt+0x50e8>
  40993c:	mov	w2, #0xa                   	// #10
  409940:	mov	x1, #0x0                   	// #0
  409944:	bl	404770 <strtol@plt>
  409948:	cmp	x0, #0x0
  40994c:	b.le	409d08 <wcrtomb@plt+0x50e8>
  409950:	mov	x5, x0
  409954:	b	409b40 <wcrtomb@plt+0x4f20>
  409958:	mov	x1, x28
  40995c:	mov	w0, #0x1                   	// #1
  409960:	mov	x28, x19
  409964:	mov	x27, #0x0                   	// #0
  409968:	mov	x19, x1
  40996c:	str	w0, [x21, #16]
  409970:	b	40982c <wcrtomb@plt+0x4c0c>
  409974:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409978:	mov	x0, #0x0                   	// #0
  40997c:	add	x1, x1, #0x250
  409980:	bl	4049c0 <dcgettext@plt>
  409984:	add	x1, sp, #0x78
  409988:	mov	x22, x0
  40998c:	mov	x0, x21
  409990:	bl	446868 <argp_parse@@Base+0x6a88>
  409994:	mov	x23, x0
  409998:	cbnz	x19, 4097d4 <wcrtomb@plt+0x4bb4>
  40999c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4099a0:	mov	w2, #0x5                   	// #5
  4099a4:	add	x1, x1, #0x270
  4099a8:	mov	x0, #0x0                   	// #0
  4099ac:	bl	4049c0 <dcgettext@plt>
  4099b0:	mov	x19, x0
  4099b4:	b	4097d4 <wcrtomb@plt+0x4bb4>
  4099b8:	mov	x19, x24
  4099bc:	mov	x1, #0x0                   	// #0
  4099c0:	add	x0, sp, #0xa8
  4099c4:	bl	404430 <gettimeofday@plt>
  4099c8:	add	x0, sp, #0xa8
  4099cc:	bl	404240 <localtime@plt>
  4099d0:	ldr	x4, [sp, #176]
  4099d4:	mov	w5, #0x3e8                 	// #1000
  4099d8:	mov	x2, x0
  4099dc:	mov	x1, x19
  4099e0:	mov	x0, x26
  4099e4:	mov	x3, #0x0                   	// #0
  4099e8:	mul	w4, w5, w4
  4099ec:	add	x19, x28, #0x1
  4099f0:	bl	444380 <argp_parse@@Base+0x45a0>
  4099f4:	add	x27, x27, x0
  4099f8:	b	40982c <wcrtomb@plt+0x4c0c>
  4099fc:	mov	x0, x26
  409a00:	bl	404680 <__overflow@plt>
  409a04:	b	409810 <wcrtomb@plt+0x4bf0>
  409a08:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409a0c:	mov	w2, #0x5                   	// #5
  409a10:	add	x1, x1, #0x258
  409a14:	mov	x0, #0x0                   	// #0
  409a18:	bl	4049c0 <dcgettext@plt>
  409a1c:	mov	x19, x0
  409a20:	b	4097d4 <wcrtomb@plt+0x4bb4>
  409a24:	cmp	w0, #0x74
  409a28:	b.eq	4099bc <wcrtomb@plt+0x4d9c>  // b.none
  409a2c:	cmp	w0, #0x75
  409a30:	b.eq	409884 <wcrtomb@plt+0x4c64>  // b.none
  409a34:	nop
  409a38:	ldp	x0, x1, [x26, #40]
  409a3c:	cmp	x0, x1
  409a40:	b.cs	409d20 <wcrtomb@plt+0x5100>  // b.hs, b.nlast
  409a44:	add	x1, x0, #0x1
  409a48:	str	x1, [x26, #40]
  409a4c:	mov	w1, #0x25                  	// #37
  409a50:	strb	w1, [x0]
  409a54:	ldp	x0, x2, [x26, #40]
  409a58:	ldrb	w1, [x28]
  409a5c:	cmp	x0, x2
  409a60:	b.cs	409d10 <wcrtomb@plt+0x50f0>  // b.hs, b.nlast
  409a64:	add	x2, x0, #0x1
  409a68:	add	x27, x27, #0x2
  409a6c:	str	x2, [x26, #40]
  409a70:	strb	w1, [x0]
  409a74:	add	x19, x28, #0x1
  409a78:	b	40982c <wcrtomb@plt+0x4c0c>
  409a7c:	cmp	w0, #0x29
  409a80:	b.ls	409a38 <wcrtomb@plt+0x4e18>  // b.plast
  409a84:	cmp	w0, #0x73
  409a88:	b.eq	4098e4 <wcrtomb@plt+0x4cc4>  // b.none
  409a8c:	b.hi	409a24 <wcrtomb@plt+0x4e04>  // b.pmore
  409a90:	cmp	w0, #0x63
  409a94:	b.eq	4098b4 <wcrtomb@plt+0x4c94>  // b.none
  409a98:	cmp	w0, #0x64
  409a9c:	b.ne	409b98 <wcrtomb@plt+0x4f78>  // b.any
  409aa0:	bl	405790 <wcrtomb@plt+0xb70>
  409aa4:	add	x19, x28, #0x1
  409aa8:	mov	x0, x26
  409aac:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409ab0:	mov	w1, #0x1                   	// #1
  409ab4:	add	x2, x2, #0x2b8
  409ab8:	bl	404700 <__fprintf_chk@plt>
  409abc:	add	x27, x27, w0, sxtw
  409ac0:	b	40982c <wcrtomb@plt+0x4c0c>
  409ac4:	add	x2, x19, #0x2
  409ac8:	mov	w1, #0x7d                  	// #125
  409acc:	mov	x0, x2
  409ad0:	str	x2, [sp, #96]
  409ad4:	bl	404870 <strchr@plt>
  409ad8:	mov	x3, x0
  409adc:	cbz	x0, 409a38 <wcrtomb@plt+0x4e18>
  409ae0:	sub	x19, x0, x28
  409ae4:	ldp	x0, x1, [x21]
  409ae8:	ldr	x2, [sp, #96]
  409aec:	cmp	x19, x1
  409af0:	b.hi	409c74 <wcrtomb@plt+0x5054>  // b.pmore
  409af4:	sub	x19, x19, #0x1
  409af8:	mov	x1, x2
  409afc:	mov	x2, x19
  409b00:	str	x3, [sp, #96]
  409b04:	bl	403f70 <memcpy@plt>
  409b08:	ldr	x0, [x21]
  409b0c:	ldr	x3, [sp, #96]
  409b10:	strb	wzr, [x0, x19]
  409b14:	add	x28, x3, #0x1
  409b18:	ldr	x19, [x21]
  409b1c:	cbz	x19, 409a38 <wcrtomb@plt+0x4e18>
  409b20:	ldrb	w0, [x3, #1]
  409b24:	cmp	w0, #0x2a
  409b28:	b.ne	409a7c <wcrtomb@plt+0x4e5c>  // b.any
  409b2c:	mov	x0, x19
  409b30:	mov	w2, #0xa                   	// #10
  409b34:	mov	x1, #0x0                   	// #0
  409b38:	bl	404770 <strtol@plt>
  409b3c:	mov	x5, x0
  409b40:	cmp	x27, x5
  409b44:	add	x19, x28, #0x1
  409b48:	b.cs	40982c <wcrtomb@plt+0x4c0c>  // b.hs, b.nlast
  409b4c:	mov	w6, #0x20                  	// #32
  409b50:	b	409b68 <wcrtomb@plt+0x4f48>
  409b54:	str	x4, [x26, #40]
  409b58:	strb	w6, [x2]
  409b5c:	add	x27, x27, #0x1
  409b60:	cmp	x27, x5
  409b64:	b.eq	40982c <wcrtomb@plt+0x4c0c>  // b.none
  409b68:	ldp	x2, x3, [x26, #40]
  409b6c:	add	x4, x2, #0x1
  409b70:	cmp	x2, x3
  409b74:	b.cc	409b54 <wcrtomb@plt+0x4f34>  // b.lo, b.ul, b.last
  409b78:	mov	x0, x26
  409b7c:	mov	w1, #0x20                  	// #32
  409b80:	str	x5, [sp, #96]
  409b84:	str	w6, [sp, #104]
  409b88:	bl	404680 <__overflow@plt>
  409b8c:	ldr	w6, [sp, #104]
  409b90:	ldr	x5, [sp, #96]
  409b94:	b	409b5c <wcrtomb@plt+0x4f3c>
  409b98:	cmp	w0, #0x54
  409b9c:	b.ne	409a38 <wcrtomb@plt+0x4e18>  // b.any
  409ba0:	bl	405790 <wcrtomb@plt+0xb70>
  409ba4:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409ba8:	add	x3, x3, #0x2c0
  409bac:	add	x1, sp, #0xa8
  409bb0:	mov	x0, x19
  409bb4:	mov	w2, #0x4644                	// #17988
  409bb8:	str	x3, [sp, #224]
  409bbc:	bl	438ea0 <wcrtomb@plt+0x34280>
  409bc0:	cbz	w0, 409c90 <wcrtomb@plt+0x5070>
  409bc4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  409bc8:	ldr	x0, [x0, #1136]
  409bcc:	cbz	x0, 409bd4 <wcrtomb@plt+0x4fb4>
  409bd0:	blr	x0
  409bd4:	mov	w2, #0x5                   	// #5
  409bd8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409bdc:	mov	x0, #0x0                   	// #0
  409be0:	add	x1, x1, #0x2c8
  409be4:	bl	4049c0 <dcgettext@plt>
  409be8:	mov	x2, x0
  409bec:	add	x0, sp, #0xa8
  409bf0:	str	x2, [sp, #96]
  409bf4:	bl	43a9b0 <wcrtomb@plt+0x35d90>
  409bf8:	mov	x4, x0
  409bfc:	ldr	x2, [sp, #96]
  409c00:	mov	w1, #0x0                   	// #0
  409c04:	mov	w0, #0x0                   	// #0
  409c08:	mov	x3, x19
  409c0c:	bl	404050 <error@plt>
  409c10:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  409c14:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  409c18:	add	x1, x1, #0x7b0
  409c1c:	mov	w2, #0x2                   	// #2
  409c20:	str	w2, [x0, #3568]
  409c24:	mov	w3, #0x0                   	// #0
  409c28:	mov	w2, #0x2c                  	// #44
  409c2c:	mov	x0, x26
  409c30:	bl	405c30 <wcrtomb@plt+0x1010>
  409c34:	mov	w1, w0
  409c38:	add	x19, x28, #0x1
  409c3c:	add	x0, sp, #0xa8
  409c40:	add	x27, x27, w1, sxtw
  409c44:	bl	436e10 <wcrtomb@plt+0x321f0>
  409c48:	b	40982c <wcrtomb@plt+0x4c0c>
  409c4c:	bl	405790 <wcrtomb@plt+0xb70>
  409c50:	add	x19, x28, #0x1
  409c54:	mov	x0, x26
  409c58:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  409c5c:	mov	w3, #0x0                   	// #0
  409c60:	add	x1, x1, #0x7b0
  409c64:	mov	w2, #0x2c                  	// #44
  409c68:	bl	405c30 <wcrtomb@plt+0x1010>
  409c6c:	add	x27, x27, w0, sxtw
  409c70:	b	40982c <wcrtomb@plt+0x4c0c>
  409c74:	mov	x1, x19
  409c78:	str	x19, [x21, #8]
  409c7c:	str	x3, [sp, #104]
  409c80:	bl	4501d0 <argp_parse@@Base+0x103f0>
  409c84:	str	x0, [x21]
  409c88:	ldp	x2, x3, [sp, #96]
  409c8c:	b	409af4 <wcrtomb@plt+0x4ed4>
  409c90:	ldr	x1, [sp, #168]
  409c94:	cbz	x1, 409cd4 <wcrtomb@plt+0x50b4>
  409c98:	ldr	x0, [sp, #176]
  409c9c:	cmp	x1, #0x1
  409ca0:	ldr	x2, [x0]
  409ca4:	str	x2, [sp, #144]
  409ca8:	b.ls	409cc4 <wcrtomb@plt+0x50a4>  // b.plast
  409cac:	ldr	x2, [x0, #8]
  409cb0:	str	x2, [sp, #152]
  409cb4:	cmp	x1, #0x2
  409cb8:	b.eq	409cc4 <wcrtomb@plt+0x50a4>  // b.none
  409cbc:	ldr	x0, [x0, #16]
  409cc0:	str	x0, [sp, #160]
  409cc4:	mov	w0, w1
  409cc8:	add	x19, sp, #0x90
  409ccc:	cmp	w1, #0x2
  409cd0:	b.gt	409d00 <wcrtomb@plt+0x50e0>
  409cd4:	mov	w1, #0x2                   	// #2
  409cd8:	sub	w1, w1, w0
  409cdc:	cmp	w0, #0x2
  409ce0:	add	x1, x1, #0x1
  409ce4:	add	x19, sp, #0x90
  409ce8:	mov	x2, #0x8                   	// #8
  409cec:	lsl	x1, x1, #3
  409cf0:	add	x0, x19, w0, sxtw #3
  409cf4:	csel	x2, x1, x2, le
  409cf8:	mov	w1, #0x0                   	// #0
  409cfc:	bl	404410 <memset@plt>
  409d00:	mov	x1, x19
  409d04:	b	409c24 <wcrtomb@plt+0x5004>
  409d08:	mov	x5, #0x50                  	// #80
  409d0c:	b	409b40 <wcrtomb@plt+0x4f20>
  409d10:	mov	x0, x26
  409d14:	add	x27, x27, #0x2
  409d18:	bl	404680 <__overflow@plt>
  409d1c:	b	409a74 <wcrtomb@plt+0x4e54>
  409d20:	mov	x0, x26
  409d24:	mov	w1, #0x25                  	// #37
  409d28:	bl	404680 <__overflow@plt>
  409d2c:	b	409a54 <wcrtomb@plt+0x4e34>
  409d30:	and	x5, x5, #0xffff
  409d34:	b	409b40 <wcrtomb@plt+0x4f20>
  409d38:	stp	x29, x30, [sp, #-64]!
  409d3c:	mov	x29, sp
  409d40:	stp	x19, x20, [sp, #16]
  409d44:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  409d48:	add	x19, x19, #0x720
  409d4c:	mov	x20, x0
  409d50:	ldr	w0, [x19, #20]
  409d54:	cbz	w0, 409ea4 <wcrtomb@plt+0x5284>
  409d58:	ldrb	w0, [x20]
  409d5c:	cmp	w0, #0x2e
  409d60:	b.ne	409d94 <wcrtomb@plt+0x5174>  // b.any
  409d64:	ldrb	w0, [x20, #1]
  409d68:	cbnz	w0, 409d94 <wcrtomb@plt+0x5174>
  409d6c:	mov	x0, #0x18                  	// #24
  409d70:	bl	450278 <argp_parse@@Base+0x10498>
  409d74:	ldr	x1, [x19, #160]
  409d78:	cbz	x1, 409eb8 <wcrtomb@plt+0x5298>
  409d7c:	str	x0, [x1]
  409d80:	str	wzr, [x0, #8]
  409d84:	str	x0, [x19, #160]
  409d88:	ldp	x19, x20, [sp, #16]
  409d8c:	ldp	x29, x30, [sp], #64
  409d90:	ret
  409d94:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409d98:	mov	x0, x20
  409d9c:	add	x1, x1, #0x2f0
  409da0:	bl	404710 <strcmp@plt>
  409da4:	cbz	w0, 409d6c <wcrtomb@plt+0x514c>
  409da8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409dac:	mov	x0, x20
  409db0:	add	x1, x1, #0x2f8
  409db4:	bl	404710 <strcmp@plt>
  409db8:	cbz	w0, 409ee4 <wcrtomb@plt+0x52c4>
  409dbc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409dc0:	mov	x0, x20
  409dc4:	add	x1, x1, #0x300
  409dc8:	bl	404710 <strcmp@plt>
  409dcc:	cbz	w0, 409ec0 <wcrtomb@plt+0x52a0>
  409dd0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409dd4:	mov	x0, x20
  409dd8:	add	x1, x1, #0x308
  409ddc:	mov	x2, #0x5                   	// #5
  409de0:	bl	4043c0 <strncmp@plt>
  409de4:	cbz	w0, 409f88 <wcrtomb@plt+0x5368>
  409de8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409dec:	mov	x0, x20
  409df0:	add	x1, x1, #0x310
  409df4:	mov	x2, #0x5                   	// #5
  409df8:	bl	4043c0 <strncmp@plt>
  409dfc:	cbz	w0, 409fb0 <wcrtomb@plt+0x5390>
  409e00:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409e04:	mov	x0, x20
  409e08:	add	x1, x1, #0x318
  409e0c:	mov	x2, #0x7                   	// #7
  409e10:	bl	4043c0 <strncmp@plt>
  409e14:	cbz	w0, 409f10 <wcrtomb@plt+0x52f0>
  409e18:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409e1c:	mov	x0, x20
  409e20:	add	x1, x1, #0x320
  409e24:	mov	x2, #0x6                   	// #6
  409e28:	bl	4043c0 <strncmp@plt>
  409e2c:	cbz	w0, 409ff0 <wcrtomb@plt+0x53d0>
  409e30:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409e34:	mov	x0, x20
  409e38:	add	x1, x1, #0x340
  409e3c:	bl	404710 <strcmp@plt>
  409e40:	cbz	w0, 40a064 <wcrtomb@plt+0x5444>
  409e44:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  409e48:	mov	x0, x20
  409e4c:	add	x1, x1, #0x348
  409e50:	mov	x2, #0x5                   	// #5
  409e54:	str	x21, [sp, #32]
  409e58:	bl	4043c0 <strncmp@plt>
  409e5c:	cbnz	w0, 40a0e4 <wcrtomb@plt+0x54c4>
  409e60:	mov	x0, #0x18                  	// #24
  409e64:	bl	450278 <argp_parse@@Base+0x10498>
  409e68:	ldr	x1, [x19, #160]
  409e6c:	mov	x21, x0
  409e70:	cbz	x1, 40a090 <wcrtomb@plt+0x5470>
  409e74:	str	x0, [x1]
  409e78:	mov	w1, #0x7                   	// #7
  409e7c:	str	w1, [x21, #8]
  409e80:	add	x0, x20, #0x5
  409e84:	str	x21, [x19, #160]
  409e88:	bl	42c270 <wcrtomb@plt+0x27650>
  409e8c:	mov	w1, w0
  409e90:	str	w1, [x21, #16]
  409e94:	add	x0, x19, #0x20
  409e98:	bl	404a50 <sigaddset@plt>
  409e9c:	ldr	x21, [sp, #32]
  409ea0:	b	409d88 <wcrtomb@plt+0x5168>
  409ea4:	add	x0, x19, #0x20
  409ea8:	bl	4043a0 <sigemptyset@plt>
  409eac:	mov	w0, #0x1                   	// #1
  409eb0:	str	w0, [x19, #20]
  409eb4:	b	409d58 <wcrtomb@plt+0x5138>
  409eb8:	str	x0, [x19, #168]
  409ebc:	b	409d80 <wcrtomb@plt+0x5160>
  409ec0:	mov	x0, #0x18                  	// #24
  409ec4:	bl	450278 <argp_parse@@Base+0x10498>
  409ec8:	ldr	x1, [x19, #160]
  409ecc:	cbz	x1, 409fe0 <wcrtomb@plt+0x53c0>
  409ed0:	str	x0, [x1]
  409ed4:	mov	w1, #0x2                   	// #2
  409ed8:	str	w1, [x0, #8]
  409edc:	str	x0, [x19, #160]
  409ee0:	b	409d88 <wcrtomb@plt+0x5168>
  409ee4:	mov	x0, #0x18                  	// #24
  409ee8:	bl	450278 <argp_parse@@Base+0x10498>
  409eec:	ldr	x1, [x19, #160]
  409ef0:	cbz	x1, 409fd8 <wcrtomb@plt+0x53b8>
  409ef4:	str	x0, [x1]
  409ef8:	mov	w1, #0x1                   	// #1
  409efc:	str	w1, [x0, #8]
  409f00:	str	x0, [x19, #160]
  409f04:	ldp	x19, x20, [sp, #16]
  409f08:	ldp	x29, x30, [sp], #64
  409f0c:	ret
  409f10:	mov	x0, #0x18                  	// #24
  409f14:	str	x21, [sp, #32]
  409f18:	bl	450278 <argp_parse@@Base+0x10498>
  409f1c:	mov	x21, x0
  409f20:	ldr	x1, [x19, #160]
  409f24:	cbz	x1, 40a088 <wcrtomb@plt+0x5468>
  409f28:	str	x0, [x1]
  409f2c:	add	x0, x20, #0x7
  409f30:	mov	w1, #0x3                   	// #3
  409f34:	str	w1, [x21, #8]
  409f38:	str	x21, [x19, #160]
  409f3c:	bl	450328 <argp_parse@@Base+0x10548>
  409f40:	ldrb	w20, [x0]
  409f44:	mov	w1, #0x27                  	// #39
  409f48:	mov	x19, x0
  409f4c:	cmp	w20, #0x22
  409f50:	ccmp	w20, w1, #0x4, ne  // ne = any
  409f54:	b.ne	409f6c <wcrtomb@plt+0x534c>  // b.any
  409f58:	bl	403ff0 <strlen@plt>
  409f5c:	add	x1, x19, x0
  409f60:	ldurb	w1, [x1, #-1]
  409f64:	cmp	w1, w20
  409f68:	b.eq	40a040 <wcrtomb@plt+0x5420>  // b.none
  409f6c:	mov	x0, x19
  409f70:	bl	41e978 <wcrtomb@plt+0x19d58>
  409f74:	str	x19, [x21, #16]
  409f78:	ldp	x19, x20, [sp, #16]
  409f7c:	ldr	x21, [sp, #32]
  409f80:	ldp	x29, x30, [sp], #64
  409f84:	ret
  409f88:	mov	x0, #0x18                  	// #24
  409f8c:	str	x21, [sp, #32]
  409f90:	bl	450278 <argp_parse@@Base+0x10498>
  409f94:	mov	x21, x0
  409f98:	ldr	x1, [x19, #160]
  409f9c:	cbz	x1, 409fe8 <wcrtomb@plt+0x53c8>
  409fa0:	str	x0, [x1]
  409fa4:	add	x0, x20, #0x5
  409fa8:	mov	w1, #0x2                   	// #2
  409fac:	b	409f34 <wcrtomb@plt+0x5314>
  409fb0:	mov	x0, #0x18                  	// #24
  409fb4:	str	x21, [sp, #32]
  409fb8:	bl	450278 <argp_parse@@Base+0x10498>
  409fbc:	mov	x21, x0
  409fc0:	ldr	x1, [x19, #160]
  409fc4:	cbz	x1, 40a05c <wcrtomb@plt+0x543c>
  409fc8:	str	x0, [x1]
  409fcc:	add	x0, x20, #0x5
  409fd0:	mov	w1, #0x5                   	// #5
  409fd4:	b	409f34 <wcrtomb@plt+0x5314>
  409fd8:	str	x0, [x19, #168]
  409fdc:	b	409ef8 <wcrtomb@plt+0x52d8>
  409fe0:	str	x0, [x19, #168]
  409fe4:	b	409ed4 <wcrtomb@plt+0x52b4>
  409fe8:	str	x0, [x19, #168]
  409fec:	b	409fa4 <wcrtomb@plt+0x5384>
  409ff0:	add	x1, sp, #0x38
  409ff4:	add	x0, x20, #0x6
  409ff8:	mov	w2, #0xa                   	// #10
  409ffc:	str	x21, [sp, #32]
  40a000:	bl	403fe0 <strtoul@plt>
  40a004:	mov	x21, x0
  40a008:	ldr	x1, [sp, #56]
  40a00c:	ldrb	w0, [x1]
  40a010:	cbnz	w0, 40a0a8 <wcrtomb@plt+0x5488>
  40a014:	mov	x0, #0x18                  	// #24
  40a018:	bl	450278 <argp_parse@@Base+0x10498>
  40a01c:	ldr	x1, [x19, #160]
  40a020:	cbz	x1, 40a098 <wcrtomb@plt+0x5478>
  40a024:	str	x0, [x1]
  40a028:	mov	w1, #0x4                   	// #4
  40a02c:	str	w1, [x0, #8]
  40a030:	str	x21, [x0, #16]
  40a034:	ldr	x21, [sp, #32]
  40a038:	str	x0, [x19, #160]
  40a03c:	b	409d88 <wcrtomb@plt+0x5168>
  40a040:	sub	x20, x0, #0x2
  40a044:	add	x1, x19, #0x1
  40a048:	mov	x2, x20
  40a04c:	mov	x0, x19
  40a050:	bl	403f80 <memmove@plt>
  40a054:	strb	wzr, [x19, x20]
  40a058:	b	409f6c <wcrtomb@plt+0x534c>
  40a05c:	str	x0, [x19, #168]
  40a060:	b	409fcc <wcrtomb@plt+0x53ac>
  40a064:	mov	x0, #0x18                  	// #24
  40a068:	bl	450278 <argp_parse@@Base+0x10498>
  40a06c:	ldr	x1, [x19, #160]
  40a070:	cbz	x1, 40a0a0 <wcrtomb@plt+0x5480>
  40a074:	str	x0, [x1]
  40a078:	mov	w1, #0x6                   	// #6
  40a07c:	str	w1, [x0, #8]
  40a080:	str	x0, [x19, #160]
  40a084:	b	409d88 <wcrtomb@plt+0x5168>
  40a088:	str	x0, [x19, #168]
  40a08c:	b	409f2c <wcrtomb@plt+0x530c>
  40a090:	str	x0, [x19, #168]
  40a094:	b	409e78 <wcrtomb@plt+0x5258>
  40a098:	str	x0, [x19, #168]
  40a09c:	b	40a028 <wcrtomb@plt+0x5408>
  40a0a0:	str	x0, [x19, #168]
  40a0a4:	b	40a078 <wcrtomb@plt+0x5458>
  40a0a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a0ac:	ldr	x0, [x0, #1136]
  40a0b0:	cbz	x0, 40a0b8 <wcrtomb@plt+0x5498>
  40a0b4:	blr	x0
  40a0b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a0bc:	add	x1, x1, #0x328
  40a0c0:	mov	w2, #0x5                   	// #5
  40a0c4:	mov	x0, #0x0                   	// #0
  40a0c8:	bl	4049c0 <dcgettext@plt>
  40a0cc:	mov	x3, x20
  40a0d0:	mov	x2, x0
  40a0d4:	mov	w1, #0x0                   	// #0
  40a0d8:	mov	w0, #0x0                   	// #0
  40a0dc:	bl	404050 <error@plt>
  40a0e0:	bl	410460 <wcrtomb@plt+0xb840>
  40a0e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a0e8:	ldr	x0, [x0, #1136]
  40a0ec:	cbz	x0, 40a0f4 <wcrtomb@plt+0x54d4>
  40a0f0:	blr	x0
  40a0f4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a0f8:	mov	w2, #0x5                   	// #5
  40a0fc:	add	x1, x1, #0x350
  40a100:	b	40a0c4 <wcrtomb@plt+0x54a4>
  40a104:	nop
  40a108:	stp	x29, x30, [sp, #-32]!
  40a10c:	mov	x29, sp
  40a110:	str	x19, [sp, #16]
  40a114:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a118:	add	x19, x19, #0x720
  40a11c:	ldr	w0, [x19, #20]
  40a120:	cbnz	w0, 40a158 <wcrtomb@plt+0x5538>
  40a124:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a128:	ldr	w0, [x0, #984]
  40a12c:	cbz	w0, 40a138 <wcrtomb@plt+0x5518>
  40a130:	ldr	x0, [x19, #168]
  40a134:	cbz	x0, 40a144 <wcrtomb@plt+0x5524>
  40a138:	ldr	x19, [sp, #16]
  40a13c:	ldp	x29, x30, [sp], #32
  40a140:	ret
  40a144:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a148:	add	x0, x0, #0x300
  40a14c:	bl	409d38 <wcrtomb@plt+0x5118>
  40a150:	ldr	w0, [x19, #20]
  40a154:	nop
  40a158:	cmp	w0, #0x1
  40a15c:	b.ne	40a138 <wcrtomb@plt+0x5518>  // b.any
  40a160:	add	x1, x19, #0x20
  40a164:	mov	x2, #0x0                   	// #0
  40a168:	mov	w0, #0x0                   	// #0
  40a16c:	bl	4040b0 <sigprocmask@plt>
  40a170:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a174:	ldr	w1, [x0, #984]
  40a178:	cbnz	w1, 40a184 <wcrtomb@plt+0x5564>
  40a17c:	mov	w1, #0xa                   	// #10
  40a180:	str	w1, [x0, #984]
  40a184:	mov	w0, #0x2                   	// #2
  40a188:	str	w0, [x19, #20]
  40a18c:	ldr	x19, [sp, #16]
  40a190:	ldp	x29, x30, [sp], #32
  40a194:	ret
  40a198:	stp	x29, x30, [sp, #-80]!
  40a19c:	mov	x29, sp
  40a1a0:	stp	x21, x22, [sp, #32]
  40a1a4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a1a8:	add	x21, x21, #0x720
  40a1ac:	stp	x19, x20, [sp, #16]
  40a1b0:	ldr	x19, [x21, #168]
  40a1b4:	cbz	x19, 40a26c <wcrtomb@plt+0x564c>
  40a1b8:	stp	x23, x24, [sp, #48]
  40a1bc:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a1c0:	mov	w24, #0x20                  	// #32
  40a1c4:	add	x23, x23, #0x2e8
  40a1c8:	b	40a1d4 <wcrtomb@plt+0x55b4>
  40a1cc:	ldr	x19, [x19]
  40a1d0:	cbz	x19, 40a268 <wcrtomb@plt+0x5648>
  40a1d4:	ldr	w0, [x19, #8]
  40a1d8:	cmp	w0, #0x3
  40a1dc:	b.ne	40a1cc <wcrtomb@plt+0x55ac>  // b.any
  40a1e0:	ldr	x20, [x21, #176]
  40a1e4:	cbz	x20, 40a1cc <wcrtomb@plt+0x55ac>
  40a1e8:	ldr	w0, [x21, #16]
  40a1ec:	cbz	w0, 40a1cc <wcrtomb@plt+0x55ac>
  40a1f0:	mov	x0, x20
  40a1f4:	bl	404230 <fileno@plt>
  40a1f8:	add	x2, sp, #0x48
  40a1fc:	mov	x1, #0x5413                	// #21523
  40a200:	bl	404bd0 <ioctl@plt>
  40a204:	cbnz	w0, 40a27c <wcrtomb@plt+0x565c>
  40a208:	ldrh	w0, [sp, #74]
  40a20c:	cbz	w0, 40a27c <wcrtomb@plt+0x565c>
  40a210:	and	x0, x0, #0xffff
  40a214:	sub	x22, x0, #0x1
  40a218:	ldp	x0, x1, [x20, #40]
  40a21c:	add	x2, x0, #0x1
  40a220:	cmp	x0, x1
  40a224:	b.cs	40a2b0 <wcrtomb@plt+0x5690>  // b.hs, b.nlast
  40a228:	str	x2, [x20, #40]
  40a22c:	strb	w24, [x0]
  40a230:	sub	x22, x22, #0x1
  40a234:	cmn	x22, #0x1
  40a238:	b.ne	40a218 <wcrtomb@plt+0x55f8>  // b.any
  40a23c:	ldp	x0, x1, [x20, #40]
  40a240:	cmp	x0, x1
  40a244:	b.cs	40a2c4 <wcrtomb@plt+0x56a4>  // b.hs, b.nlast
  40a248:	add	x1, x0, #0x1
  40a24c:	str	x1, [x20, #40]
  40a250:	mov	w1, #0xd                   	// #13
  40a254:	strb	w1, [x0]
  40a258:	mov	x0, x20
  40a25c:	bl	4048d0 <fflush_unlocked@plt>
  40a260:	ldr	x19, [x19]
  40a264:	cbnz	x19, 40a1d4 <wcrtomb@plt+0x55b4>
  40a268:	ldp	x23, x24, [sp, #48]
  40a26c:	ldp	x19, x20, [sp, #16]
  40a270:	ldp	x21, x22, [sp, #32]
  40a274:	ldp	x29, x30, [sp], #80
  40a278:	ret
  40a27c:	mov	x0, x23
  40a280:	bl	404af0 <getenv@plt>
  40a284:	cbz	x0, 40a29c <wcrtomb@plt+0x567c>
  40a288:	mov	w2, #0xa                   	// #10
  40a28c:	mov	x1, #0x0                   	// #0
  40a290:	bl	404770 <strtol@plt>
  40a294:	cmp	x0, #0x0
  40a298:	b.gt	40a214 <wcrtomb@plt+0x55f4>
  40a29c:	ldp	x0, x1, [x20, #40]
  40a2a0:	mov	x22, #0x4f                  	// #79
  40a2a4:	add	x2, x0, #0x1
  40a2a8:	cmp	x0, x1
  40a2ac:	b.cc	40a228 <wcrtomb@plt+0x5608>  // b.lo, b.ul, b.last
  40a2b0:	mov	x0, x20
  40a2b4:	mov	w1, #0x20                  	// #32
  40a2b8:	bl	404680 <__overflow@plt>
  40a2bc:	ldr	x20, [x21, #176]
  40a2c0:	b	40a230 <wcrtomb@plt+0x5610>
  40a2c4:	mov	x0, x20
  40a2c8:	mov	w1, #0xd                   	// #13
  40a2cc:	bl	404680 <__overflow@plt>
  40a2d0:	ldr	x20, [x21, #176]
  40a2d4:	b	40a258 <wcrtomb@plt+0x5638>
  40a2d8:	stp	x29, x30, [sp, #-80]!
  40a2dc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a2e0:	mov	x29, sp
  40a2e4:	stp	x21, x22, [sp, #32]
  40a2e8:	and	w21, w0, #0xff
  40a2ec:	ldr	w0, [x1, #984]
  40a2f0:	cbz	w0, 40a31c <wcrtomb@plt+0x56fc>
  40a2f4:	stp	x19, x20, [sp, #16]
  40a2f8:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a2fc:	add	x20, x20, #0x720
  40a300:	ldr	w1, [x20, #184]
  40a304:	add	w1, w1, #0x1
  40a308:	str	w1, [x20, #184]
  40a30c:	udiv	w2, w1, w0
  40a310:	msub	w0, w2, w0, w1
  40a314:	cbz	w0, 40a328 <wcrtomb@plt+0x5708>
  40a318:	ldp	x19, x20, [sp, #16]
  40a31c:	ldp	x21, x22, [sp, #32]
  40a320:	ldp	x29, x30, [sp], #80
  40a324:	ret
  40a328:	ldr	x19, [x20, #168]
  40a32c:	cbz	x19, 40a318 <wcrtomb@plt+0x56f8>
  40a330:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40a334:	add	x22, x22, #0x920
  40a338:	stp	x23, x24, [sp, #48]
  40a33c:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40a340:	add	x23, x23, #0xba8
  40a344:	b	40a370 <wcrtomb@plt+0x5750>
  40a348:	ldr	x0, [x20, #176]
  40a34c:	cbz	x0, 40a4c8 <wcrtomb@plt+0x58a8>
  40a350:	ldr	w4, [x20, #184]
  40a354:	mov	w3, w21
  40a358:	ldr	x2, [x19, #16]
  40a35c:	mov	x1, #0x0                   	// #0
  40a360:	bl	409770 <wcrtomb@plt+0x4b50>
  40a364:	nop
  40a368:	ldr	x19, [x19]
  40a36c:	cbz	x19, 40a3d0 <wcrtomb@plt+0x57b0>
  40a370:	ldr	w0, [x19, #8]
  40a374:	cmp	w0, #0x4
  40a378:	b.eq	40a48c <wcrtomb@plt+0x586c>  // b.none
  40a37c:	b.hi	40a3e4 <wcrtomb@plt+0x57c4>  // b.pmore
  40a380:	cmp	w0, #0x2
  40a384:	b.eq	40a434 <wcrtomb@plt+0x5814>  // b.none
  40a388:	cmp	w0, #0x3
  40a38c:	b.eq	40a348 <wcrtomb@plt+0x5728>  // b.none
  40a390:	cbz	w0, 40a498 <wcrtomb@plt+0x5878>
  40a394:	cmp	w0, #0x1
  40a398:	b.ne	40a368 <wcrtomb@plt+0x5748>  // b.any
  40a39c:	ldr	x0, [x20, #176]
  40a3a0:	cbz	x0, 40a4e4 <wcrtomb@plt+0x58c4>
  40a3a4:	ldp	x1, x2, [x0, #40]
  40a3a8:	cmp	x1, x2
  40a3ac:	b.cs	40a518 <wcrtomb@plt+0x58f8>  // b.hs, b.nlast
  40a3b0:	add	x2, x1, #0x1
  40a3b4:	str	x2, [x0, #40]
  40a3b8:	mov	w0, #0x7                   	// #7
  40a3bc:	strb	w0, [x1]
  40a3c0:	ldr	x0, [x20, #176]
  40a3c4:	bl	4048d0 <fflush_unlocked@plt>
  40a3c8:	ldr	x19, [x19]
  40a3cc:	cbnz	x19, 40a370 <wcrtomb@plt+0x5750>
  40a3d0:	ldp	x19, x20, [sp, #16]
  40a3d4:	ldp	x21, x22, [sp, #32]
  40a3d8:	ldp	x23, x24, [sp, #48]
  40a3dc:	ldp	x29, x30, [sp], #80
  40a3e0:	ret
  40a3e4:	cmp	w0, #0x6
  40a3e8:	b.eq	40a428 <wcrtomb@plt+0x5808>  // b.none
  40a3ec:	cmp	w0, #0x7
  40a3f0:	b.ne	40a404 <wcrtomb@plt+0x57e4>  // b.any
  40a3f4:	add	x1, sp, #0x4c
  40a3f8:	add	x0, x20, #0x20
  40a3fc:	bl	404790 <sigwait@plt>
  40a400:	b	40a368 <wcrtomb@plt+0x5748>
  40a404:	cmp	w0, #0x5
  40a408:	b.ne	40a368 <wcrtomb@plt+0x5748>  // b.any
  40a40c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a410:	ldr	w2, [x20, #184]
  40a414:	ldr	x0, [x19, #16]
  40a418:	ldr	x1, [x1, #864]
  40a41c:	ldr	x1, [x1]
  40a420:	bl	42b860 <wcrtomb@plt+0x26c40>
  40a424:	b	40a368 <wcrtomb@plt+0x5748>
  40a428:	bl	405790 <wcrtomb@plt+0xb70>
  40a42c:	bl	405e78 <wcrtomb@plt+0x1258>
  40a430:	b	40a368 <wcrtomb@plt+0x5748>
  40a434:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a438:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a43c:	mov	x2, x22
  40a440:	mov	w1, #0x1                   	// #1
  40a444:	ldr	x3, [x0, #3664]
  40a448:	ldr	x0, [x24, #1176]
  40a44c:	bl	404700 <__fprintf_chk@plt>
  40a450:	sxtw	x1, w0
  40a454:	ldr	w4, [x20, #184]
  40a458:	mov	w3, w21
  40a45c:	ldr	x0, [x24, #1176]
  40a460:	ldr	x2, [x19, #16]
  40a464:	bl	409770 <wcrtomb@plt+0x4b50>
  40a468:	ldr	x0, [x24, #1176]
  40a46c:	ldp	x1, x2, [x0, #40]
  40a470:	cmp	x1, x2
  40a474:	b.cs	40a50c <wcrtomb@plt+0x58ec>  // b.hs, b.nlast
  40a478:	add	x2, x1, #0x1
  40a47c:	str	x2, [x0, #40]
  40a480:	mov	w0, #0xa                   	// #10
  40a484:	strb	w0, [x1]
  40a488:	b	40a368 <wcrtomb@plt+0x5748>
  40a48c:	ldr	w0, [x19, #16]
  40a490:	bl	404460 <sleep@plt>
  40a494:	b	40a368 <wcrtomb@plt+0x5748>
  40a498:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a49c:	ldr	x0, [x24, #4056]
  40a4a0:	ldp	x1, x2, [x0, #40]
  40a4a4:	cmp	x1, x2
  40a4a8:	b.cs	40a500 <wcrtomb@plt+0x58e0>  // b.hs, b.nlast
  40a4ac:	add	x2, x1, #0x1
  40a4b0:	str	x2, [x0, #40]
  40a4b4:	mov	w0, #0x2e                  	// #46
  40a4b8:	strb	w0, [x1]
  40a4bc:	ldr	x0, [x24, #4056]
  40a4c0:	bl	4048d0 <fflush_unlocked@plt>
  40a4c4:	b	40a368 <wcrtomb@plt+0x5748>
  40a4c8:	mov	x1, x23
  40a4cc:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40a4d0:	add	x0, x0, #0xd88
  40a4d4:	bl	4042e0 <fopen@plt>
  40a4d8:	str	x0, [x20, #176]
  40a4dc:	cbz	x0, 40a368 <wcrtomb@plt+0x5748>
  40a4e0:	b	40a350 <wcrtomb@plt+0x5730>
  40a4e4:	mov	x1, x23
  40a4e8:	adrp	x0, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40a4ec:	add	x0, x0, #0xd88
  40a4f0:	bl	4042e0 <fopen@plt>
  40a4f4:	str	x0, [x20, #176]
  40a4f8:	cbz	x0, 40a368 <wcrtomb@plt+0x5748>
  40a4fc:	b	40a3a4 <wcrtomb@plt+0x5784>
  40a500:	mov	w1, #0x2e                  	// #46
  40a504:	bl	404680 <__overflow@plt>
  40a508:	b	40a4bc <wcrtomb@plt+0x589c>
  40a50c:	mov	w1, #0xa                   	// #10
  40a510:	bl	404680 <__overflow@plt>
  40a514:	b	40a368 <wcrtomb@plt+0x5748>
  40a518:	mov	w1, #0x7                   	// #7
  40a51c:	bl	404680 <__overflow@plt>
  40a520:	b	40a3c0 <wcrtomb@plt+0x57a0>
  40a524:	nop
  40a528:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a52c:	ldr	w0, [x0, #984]
  40a530:	cbnz	w0, 40a538 <wcrtomb@plt+0x5918>
  40a534:	ret
  40a538:	stp	x29, x30, [sp, #-16]!
  40a53c:	mov	x29, sp
  40a540:	bl	40a198 <wcrtomb@plt+0x5578>
  40a544:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a548:	ldr	x0, [x0, #2000]
  40a54c:	cbz	x0, 40a558 <wcrtomb@plt+0x5938>
  40a550:	ldp	x29, x30, [sp], #16
  40a554:	b	4042a0 <fclose@plt>
  40a558:	ldp	x29, x30, [sp], #16
  40a55c:	ret
  40a560:	mov	w0, #0x1                   	// #1
  40a564:	ret
  40a568:	stp	x29, x30, [sp, #-64]!
  40a56c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a570:	add	x1, x1, #0xe0
  40a574:	mov	x29, sp
  40a578:	stp	x19, x20, [sp, #16]
  40a57c:	ldr	x20, [x1, #136]
  40a580:	stp	x21, x22, [sp, #32]
  40a584:	mov	x22, x0
  40a588:	mov	x0, x1
  40a58c:	bl	405618 <wcrtomb@plt+0x9f8>
  40a590:	cbz	x20, 40a644 <wcrtomb@plt+0x5a24>
  40a594:	str	x23, [sp, #48]
  40a598:	adrp	x23, 40a000 <wcrtomb@plt+0x53e0>
  40a59c:	add	x23, x23, #0x560
  40a5a0:	b	40a5e0 <wcrtomb@plt+0x59c0>
  40a5a4:	bl	406128 <wcrtomb@plt+0x1508>
  40a5a8:	cmp	x0, x20
  40a5ac:	csel	x19, x0, x20, ls  // ls = plast
  40a5b0:	mov	x1, x21
  40a5b4:	mov	x0, x19
  40a5b8:	sub	x20, x20, x19
  40a5bc:	blr	x22
  40a5c0:	cmp	w0, #0x0
  40a5c4:	sub	x19, x19, #0x1
  40a5c8:	csel	x22, x23, x22, eq  // eq = none
  40a5cc:	add	x0, x21, x19
  40a5d0:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40a5d4:	mov	x0, x20
  40a5d8:	bl	405720 <wcrtomb@plt+0xb00>
  40a5dc:	cbz	x20, 40a640 <wcrtomb@plt+0x5a20>
  40a5e0:	bl	406550 <wcrtomb@plt+0x1930>
  40a5e4:	mov	x21, x0
  40a5e8:	cbnz	x0, 40a5a4 <wcrtomb@plt+0x5984>
  40a5ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a5f0:	ldr	x0, [x0, #1136]
  40a5f4:	cbz	x0, 40a5fc <wcrtomb@plt+0x59dc>
  40a5f8:	blr	x0
  40a5fc:	mov	w2, #0x5                   	// #5
  40a600:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a604:	mov	x0, #0x0                   	// #0
  40a608:	add	x1, x1, #0x378
  40a60c:	bl	4049c0 <dcgettext@plt>
  40a610:	mov	x2, x0
  40a614:	mov	w1, #0x0                   	// #0
  40a618:	mov	w0, #0x0                   	// #0
  40a61c:	bl	404050 <error@plt>
  40a620:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a624:	mov	w1, #0x2                   	// #2
  40a628:	ldp	x19, x20, [sp, #16]
  40a62c:	str	w1, [x0, #3568]
  40a630:	ldp	x21, x22, [sp, #32]
  40a634:	ldr	x23, [sp, #48]
  40a638:	ldp	x29, x30, [sp], #64
  40a63c:	ret
  40a640:	ldr	x23, [sp, #48]
  40a644:	ldp	x19, x20, [sp, #16]
  40a648:	ldp	x21, x22, [sp, #32]
  40a64c:	ldp	x29, x30, [sp], #64
  40a650:	b	4056c0 <wcrtomb@plt+0xaa0>
  40a654:	nop
  40a658:	stp	x29, x30, [sp, #-16]!
  40a65c:	mov	w0, #0x1                   	// #1
  40a660:	mov	x29, sp
  40a664:	bl	42f548 <wcrtomb@plt+0x2a928>
  40a668:	ldp	x29, x30, [sp], #16
  40a66c:	ret
  40a670:	stp	x29, x30, [sp, #-32]!
  40a674:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a678:	mov	x29, sp
  40a67c:	ldr	x1, [x1, #1048]
  40a680:	add	x0, sp, #0x18
  40a684:	bl	420510 <wcrtomb@plt+0x1b8f0>
  40a688:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a68c:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a690:	ldr	x1, [x1, #960]
  40a694:	str	x0, [x2, #2016]
  40a698:	cbz	x1, 40a6a0 <wcrtomb@plt+0x5a80>
  40a69c:	bl	41a150 <wcrtomb@plt+0x15530>
  40a6a0:	ldp	x29, x30, [sp], #32
  40a6a4:	ret
  40a6a8:	stp	x29, x30, [sp, #-320]!
  40a6ac:	mov	x29, sp
  40a6b0:	str	q0, [sp, #144]
  40a6b4:	str	q1, [sp, #160]
  40a6b8:	str	q2, [sp, #176]
  40a6bc:	str	q3, [sp, #192]
  40a6c0:	str	q4, [sp, #208]
  40a6c4:	str	q5, [sp, #224]
  40a6c8:	str	q6, [sp, #240]
  40a6cc:	str	q7, [sp, #256]
  40a6d0:	stp	x2, x3, [sp, #272]
  40a6d4:	stp	x4, x5, [sp, #288]
  40a6d8:	stp	x6, x7, [sp, #304]
  40a6dc:	cbz	x1, 40a77c <wcrtomb@plt+0x5b5c>
  40a6e0:	mov	x8, x0
  40a6e4:	stp	x19, x20, [sp, #16]
  40a6e8:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a6ec:	mov	x19, x1
  40a6f0:	mov	w0, #0x1                   	// #1
  40a6f4:	ldr	x1, [x8, #8]
  40a6f8:	str	x21, [sp, #32]
  40a6fc:	ldr	x21, [x20, #4056]
  40a700:	bl	41e898 <wcrtomb@plt+0x19c78>
  40a704:	mov	x3, x0
  40a708:	mov	w1, #0x1                   	// #1
  40a70c:	mov	x0, x21
  40a710:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40a714:	add	x2, x2, #0x920
  40a718:	bl	404700 <__fprintf_chk@plt>
  40a71c:	add	x1, sp, #0x110
  40a720:	add	x2, sp, #0x140
  40a724:	add	x3, sp, #0x140
  40a728:	mov	w5, #0xffffffd0            	// #-48
  40a72c:	mov	w4, #0xffffff80            	// #-128
  40a730:	stp	x2, x3, [sp, #80]
  40a734:	mov	x2, x19
  40a738:	str	x1, [sp, #96]
  40a73c:	add	x3, sp, #0x30
  40a740:	stp	w5, w4, [sp, #104]
  40a744:	mov	w1, #0x1                   	// #1
  40a748:	ldp	x6, x7, [sp, #80]
  40a74c:	stp	x6, x7, [sp, #48]
  40a750:	ldp	x4, x5, [sp, #96]
  40a754:	stp	x4, x5, [sp, #64]
  40a758:	ldr	x0, [x20, #4056]
  40a75c:	stp	x6, x7, [sp, #112]
  40a760:	stp	x4, x5, [sp, #128]
  40a764:	bl	4044a0 <__vfprintf_chk@plt>
  40a768:	ldr	x1, [x20, #4056]
  40a76c:	mov	w0, #0xa                   	// #10
  40a770:	bl	404170 <fputc@plt>
  40a774:	ldp	x19, x20, [sp, #16]
  40a778:	ldr	x21, [sp, #32]
  40a77c:	mov	w0, #0x1                   	// #1
  40a780:	bl	42f548 <wcrtomb@plt+0x2a928>
  40a784:	ldp	x29, x30, [sp], #320
  40a788:	ret
  40a78c:	nop
  40a790:	stp	x29, x30, [sp, #-48]!
  40a794:	mov	x2, x0
  40a798:	mov	x29, sp
  40a79c:	stp	x21, x22, [sp, #32]
  40a7a0:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40a7a4:	add	x3, x22, #0x7e0
  40a7a8:	mov	x21, x1
  40a7ac:	stp	x19, x20, [sp, #16]
  40a7b0:	mov	x19, x0
  40a7b4:	ldr	x1, [x22, #2016]
  40a7b8:	ldr	w0, [x3, #8]
  40a7bc:	bl	41fbe8 <wcrtomb@plt+0x1afc8>
  40a7c0:	cmp	x19, x0
  40a7c4:	b.eq	40a820 <wcrtomb@plt+0x5c00>  // b.none
  40a7c8:	mov	x20, x0
  40a7cc:	cmn	x0, #0x1
  40a7d0:	b.eq	40a874 <wcrtomb@plt+0x5c54>  // b.none
  40a7d4:	mov	w4, #0x5                   	// #5
  40a7d8:	mov	x3, x19
  40a7dc:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a7e0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a7e4:	add	x2, x2, #0x398
  40a7e8:	add	x1, x1, #0x3c0
  40a7ec:	mov	x0, #0x0                   	// #0
  40a7f0:	bl	4048f0 <dcngettext@plt>
  40a7f4:	mov	x3, x19
  40a7f8:	mov	x1, x0
  40a7fc:	mov	x2, x20
  40a800:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a804:	add	x0, x0, #0xe0
  40a808:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40a80c:	mov	w0, #0x0                   	// #0
  40a810:	ldp	x19, x20, [sp, #16]
  40a814:	ldp	x21, x22, [sp, #32]
  40a818:	ldp	x29, x30, [sp], #48
  40a81c:	ret
  40a820:	ldr	x1, [x22, #2016]
  40a824:	mov	x2, x19
  40a828:	mov	x0, x21
  40a82c:	bl	4046d0 <memcmp@plt>
  40a830:	mov	w1, w0
  40a834:	mov	w0, #0x1                   	// #1
  40a838:	cbz	w1, 40a810 <wcrtomb@plt+0x5bf0>
  40a83c:	mov	w2, #0x5                   	// #5
  40a840:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a844:	mov	x0, #0x0                   	// #0
  40a848:	add	x1, x1, #0x3e0
  40a84c:	bl	4049c0 <dcgettext@plt>
  40a850:	mov	x1, x0
  40a854:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a858:	add	x0, x0, #0xe0
  40a85c:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40a860:	mov	w0, #0x0                   	// #0
  40a864:	ldp	x19, x20, [sp, #16]
  40a868:	ldp	x21, x22, [sp, #32]
  40a86c:	ldp	x29, x30, [sp], #48
  40a870:	ret
  40a874:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a878:	add	x19, x19, #0xe0
  40a87c:	ldr	x0, [x19, #8]
  40a880:	bl	433c18 <wcrtomb@plt+0x2eff8>
  40a884:	mov	x0, x19
  40a888:	mov	x1, #0x0                   	// #0
  40a88c:	bl	40a658 <wcrtomb@plt+0x5a38>
  40a890:	mov	w0, #0x0                   	// #0
  40a894:	ldp	x19, x20, [sp, #16]
  40a898:	ldp	x21, x22, [sp, #32]
  40a89c:	ldp	x29, x30, [sp], #48
  40a8a0:	ret
  40a8a4:	nop
  40a8a8:	sub	sp, sp, #0x440
  40a8ac:	stp	x29, x30, [sp]
  40a8b0:	mov	x29, sp
  40a8b4:	stp	x19, x20, [sp, #16]
  40a8b8:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a8bc:	add	x19, x19, #0xe0
  40a8c0:	stp	x21, x22, [sp, #32]
  40a8c4:	add	x22, sp, #0x40
  40a8c8:	mov	x21, x22
  40a8cc:	ldr	x0, [x19, #24]
  40a8d0:	str	x23, [sp, #48]
  40a8d4:	bl	403ff0 <strlen@plt>
  40a8d8:	mov	x20, x0
  40a8dc:	cmp	x0, #0x3ff
  40a8e0:	add	x23, x0, #0x1
  40a8e4:	b.hi	40a994 <wcrtomb@plt+0x5d74>  // b.pmore
  40a8e8:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40a8ec:	mov	x3, x23
  40a8f0:	ldr	x1, [x19, #8]
  40a8f4:	mov	x2, x21
  40a8f8:	ldr	w0, [x0, #2200]
  40a8fc:	bl	404c10 <readlinkat@plt>
  40a900:	tbnz	x0, #63, 40a968 <wcrtomb@plt+0x5d48>
  40a904:	cmp	x20, x0
  40a908:	b.ne	40a920 <wcrtomb@plt+0x5d00>  // b.any
  40a90c:	ldr	x0, [x19, #24]
  40a910:	mov	x2, x20
  40a914:	mov	x1, x21
  40a918:	bl	4046d0 <memcmp@plt>
  40a91c:	cbz	w0, 40a940 <wcrtomb@plt+0x5d20>
  40a920:	mov	w2, #0x5                   	// #5
  40a924:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40a928:	mov	x0, #0x0                   	// #0
  40a92c:	add	x1, x1, #0x3f0
  40a930:	bl	4049c0 <dcgettext@plt>
  40a934:	mov	x1, x0
  40a938:	mov	x0, x19
  40a93c:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40a940:	cmp	x21, x22
  40a944:	b.eq	40a950 <wcrtomb@plt+0x5d30>  // b.none
  40a948:	mov	x0, x21
  40a94c:	bl	4047b0 <free@plt>
  40a950:	ldp	x29, x30, [sp]
  40a954:	ldp	x19, x20, [sp, #16]
  40a958:	ldp	x21, x22, [sp, #32]
  40a95c:	ldr	x23, [sp, #48]
  40a960:	add	sp, sp, #0x440
  40a964:	ret
  40a968:	bl	404ad0 <__errno_location@plt>
  40a96c:	ldr	w1, [x0]
  40a970:	ldr	x2, [x19, #8]
  40a974:	cmp	w1, #0x2
  40a978:	mov	x0, x2
  40a97c:	b.eq	40a9a8 <wcrtomb@plt+0x5d88>  // b.none
  40a980:	bl	433ea8 <wcrtomb@plt+0x2f288>
  40a984:	mov	x0, x19
  40a988:	mov	x1, #0x0                   	// #0
  40a98c:	bl	40a658 <wcrtomb@plt+0x5a38>
  40a990:	b	40a940 <wcrtomb@plt+0x5d20>
  40a994:	mov	x0, x23
  40a998:	add	x22, sp, #0x40
  40a99c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40a9a0:	mov	x21, x0
  40a9a4:	b	40a8e8 <wcrtomb@plt+0x5cc8>
  40a9a8:	bl	433f30 <wcrtomb@plt+0x2f310>
  40a9ac:	b	40a984 <wcrtomb@plt+0x5d64>
  40a9b0:	stp	x29, x30, [sp, #-160]!
  40a9b4:	mov	x29, sp
  40a9b8:	stp	x19, x20, [sp, #16]
  40a9bc:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40a9c0:	add	x19, x19, #0xe0
  40a9c4:	add	x1, sp, #0x20
  40a9c8:	ldr	x20, [x19, #8]
  40a9cc:	mov	x0, x20
  40a9d0:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  40a9d4:	cbnz	w0, 40aa30 <wcrtomb@plt+0x5e10>
  40a9d8:	ldr	w0, [sp, #48]
  40a9dc:	and	w1, w0, #0xf000
  40a9e0:	cmp	w1, #0x4, lsl #12
  40a9e4:	b.ne	40aa04 <wcrtomb@plt+0x5de4>  // b.any
  40a9e8:	ldr	w1, [x19, #104]
  40a9ec:	eor	w0, w0, w1
  40a9f0:	tst	x0, #0xfff
  40a9f4:	b.ne	40aa68 <wcrtomb@plt+0x5e48>  // b.any
  40a9f8:	ldp	x19, x20, [sp, #16]
  40a9fc:	ldp	x29, x30, [sp], #160
  40aa00:	ret
  40aa04:	mov	w2, #0x5                   	// #5
  40aa08:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40aa0c:	mov	x0, #0x0                   	// #0
  40aa10:	add	x1, x1, #0x400
  40aa14:	bl	4049c0 <dcgettext@plt>
  40aa18:	mov	x1, x0
  40aa1c:	mov	x0, x19
  40aa20:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40aa24:	ldp	x19, x20, [sp, #16]
  40aa28:	ldp	x29, x30, [sp], #160
  40aa2c:	ret
  40aa30:	bl	404ad0 <__errno_location@plt>
  40aa34:	ldr	w0, [x0]
  40aa38:	cmp	w0, #0x2
  40aa3c:	mov	x0, x20
  40aa40:	b.eq	40aa60 <wcrtomb@plt+0x5e40>  // b.none
  40aa44:	bl	434400 <wcrtomb@plt+0x2f7e0>
  40aa48:	mov	x0, x19
  40aa4c:	mov	x1, #0x0                   	// #0
  40aa50:	bl	40a658 <wcrtomb@plt+0x5a38>
  40aa54:	ldp	x19, x20, [sp, #16]
  40aa58:	ldp	x29, x30, [sp], #160
  40aa5c:	ret
  40aa60:	bl	434488 <wcrtomb@plt+0x2f868>
  40aa64:	b	40aa48 <wcrtomb@plt+0x5e28>
  40aa68:	mov	w2, #0x5                   	// #5
  40aa6c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40aa70:	mov	x0, #0x0                   	// #0
  40aa74:	add	x1, x1, #0x418
  40aa78:	bl	4049c0 <dcgettext@plt>
  40aa7c:	mov	x1, x0
  40aa80:	mov	x0, x19
  40aa84:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40aa88:	ldp	x19, x20, [sp, #16]
  40aa8c:	ldp	x29, x30, [sp], #160
  40aa90:	ret
  40aa94:	nop
  40aa98:	stp	x29, x30, [sp, #-336]!
  40aa9c:	mov	x29, sp
  40aaa0:	stp	x21, x22, [sp, #32]
  40aaa4:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  40aaa8:	ldr	x0, [x21, #104]
  40aaac:	stp	x19, x20, [sp, #16]
  40aab0:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40aab4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40aab8:	ldr	w0, [x0, #772]
  40aabc:	cbz	w0, 40aae0 <wcrtomb@plt+0x5ec0>
  40aac0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40aac4:	ldrb	w0, [x0, #56]
  40aac8:	cbnz	w0, 40ade8 <wcrtomb@plt+0x61c8>
  40aacc:	ldr	x1, [x21, #104]
  40aad0:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40aad4:	mov	x2, #0xffffffffffffffff    	// #-1
  40aad8:	add	x0, x20, #0xe0
  40aadc:	bl	41d6f8 <wcrtomb@plt+0x18ad8>
  40aae0:	ldr	x0, [x21, #104]
  40aae4:	ldrb	w0, [x0, #156]
  40aae8:	cmp	w0, #0x36
  40aaec:	b.eq	40ab08 <wcrtomb@plt+0x5ee8>  // b.none
  40aaf0:	b.hi	40ab80 <wcrtomb@plt+0x5f60>  // b.pmore
  40aaf4:	cmp	w0, #0x32
  40aaf8:	b.eq	40aec8 <wcrtomb@plt+0x62a8>  // b.none
  40aafc:	b.ls	40abac <wcrtomb@plt+0x5f8c>  // b.plast
  40ab00:	cmp	w0, #0x35
  40ab04:	b.eq	40ad50 <wcrtomb@plt+0x6130>  // b.none
  40ab08:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ab0c:	add	x19, x20, #0xe0
  40ab10:	add	x1, sp, #0xd0
  40ab14:	ldr	x20, [x19, #8]
  40ab18:	mov	x0, x20
  40ab1c:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  40ab20:	cbnz	w0, 40ae2c <wcrtomb@plt+0x620c>
  40ab24:	ldr	x1, [x21, #104]
  40ab28:	ldr	w0, [sp, #224]
  40ab2c:	ldrb	w1, [x1, #156]
  40ab30:	and	w2, w0, #0xf000
  40ab34:	cmp	w1, #0x33
  40ab38:	b.eq	40b0bc <wcrtomb@plt+0x649c>  // b.none
  40ab3c:	cmp	w1, #0x34
  40ab40:	b.eq	40b038 <wcrtomb@plt+0x6418>  // b.none
  40ab44:	cmp	w2, #0x1, lsl #12
  40ab48:	b.ne	40b12c <wcrtomb@plt+0x650c>  // b.any
  40ab4c:	ldr	w1, [x19, #104]
  40ab50:	eor	w0, w0, w1
  40ab54:	tst	x0, #0xfff
  40ab58:	b.eq	40ab9c <wcrtomb@plt+0x5f7c>  // b.none
  40ab5c:	mov	w2, #0x5                   	// #5
  40ab60:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ab64:	mov	x0, #0x0                   	// #0
  40ab68:	add	x1, x1, #0x418
  40ab6c:	bl	4049c0 <dcgettext@plt>
  40ab70:	mov	x1, x0
  40ab74:	mov	x0, x19
  40ab78:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40ab7c:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40ab80:	cmp	w0, #0x4d
  40ab84:	b.eq	40ae60 <wcrtomb@plt+0x6240>  // b.none
  40ab88:	b.ls	40ad40 <wcrtomb@plt+0x6120>  // b.plast
  40ab8c:	cmp	w0, #0x53
  40ab90:	b.eq	40ac3c <wcrtomb@plt+0x601c>  // b.none
  40ab94:	cmp	w0, #0x56
  40ab98:	b.ne	40ad84 <wcrtomb@plt+0x6164>  // b.any
  40ab9c:	ldp	x19, x20, [sp, #16]
  40aba0:	ldp	x21, x22, [sp, #32]
  40aba4:	ldp	x29, x30, [sp], #336
  40aba8:	ret
  40abac:	cmp	w0, #0x31
  40abb0:	b.ne	40ad7c <wcrtomb@plt+0x615c>  // b.any
  40abb4:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40abb8:	add	x19, x20, #0xe0
  40abbc:	add	x1, sp, #0x50
  40abc0:	ldr	x20, [x19, #8]
  40abc4:	mov	x0, x20
  40abc8:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  40abcc:	cbnz	w0, 40ae2c <wcrtomb@plt+0x620c>
  40abd0:	ldr	x20, [x19, #24]
  40abd4:	add	x1, sp, #0xd0
  40abd8:	mov	x0, x20
  40abdc:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  40abe0:	cbnz	w0, 40ae2c <wcrtomb@plt+0x620c>
  40abe4:	add	x1, sp, #0xd0
  40abe8:	add	x0, sp, #0x50
  40abec:	bl	42a810 <wcrtomb@plt+0x25bf0>
  40abf0:	tst	w0, #0xff
  40abf4:	b.ne	40ab9c <wcrtomb@plt+0x5f7c>  // b.any
  40abf8:	mov	w2, #0x5                   	// #5
  40abfc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ac00:	mov	x0, #0x0                   	// #0
  40ac04:	add	x1, x1, #0x4b0
  40ac08:	bl	4049c0 <dcgettext@plt>
  40ac0c:	mov	x20, x0
  40ac10:	ldr	x1, [x19, #24]
  40ac14:	mov	w0, #0x0                   	// #0
  40ac18:	bl	41e898 <wcrtomb@plt+0x19c78>
  40ac1c:	mov	x2, x0
  40ac20:	mov	x1, x20
  40ac24:	mov	x0, x19
  40ac28:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40ac2c:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40ac30:	cbz	w0, 40ac3c <wcrtomb@plt+0x601c>
  40ac34:	cmp	w0, #0x30
  40ac38:	b.ne	40ad84 <wcrtomb@plt+0x6164>  // b.any
  40ac3c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ac40:	add	x19, x19, #0xe0
  40ac44:	ldrb	w0, [x19, #16]
  40ac48:	cbnz	w0, 40ad68 <wcrtomb@plt+0x6148>
  40ac4c:	ldr	x20, [x19, #8]
  40ac50:	add	x1, sp, #0xd0
  40ac54:	mov	x0, x20
  40ac58:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  40ac5c:	cbnz	w0, 40b080 <wcrtomb@plt+0x6460>
  40ac60:	ldr	w0, [sp, #224]
  40ac64:	and	w1, w0, #0xf000
  40ac68:	cmp	w1, #0x8, lsl #12
  40ac6c:	b.ne	40ae94 <wcrtomb@plt+0x6274>  // b.any
  40ac70:	ldr	w1, [x19, #104]
  40ac74:	eor	w0, w0, w1
  40ac78:	tst	x0, #0xfff
  40ac7c:	b.ne	40b158 <wcrtomb@plt+0x6538>  // b.any
  40ac80:	add	x0, sp, #0xd0
  40ac84:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ac88:	add	x1, x22, #0x138
  40ac8c:	bl	42a7e0 <wcrtomb@plt+0x25bc0>
  40ac90:	tst	w0, #0xff
  40ac94:	b.eq	40b1a0 <wcrtomb@plt+0x6580>  // b.none
  40ac98:	add	x1, x22, #0x138
  40ac9c:	add	x0, sp, #0xd0
  40aca0:	bl	42a7f8 <wcrtomb@plt+0x25bd8>
  40aca4:	tst	w0, #0xff
  40aca8:	b.eq	40b17c <wcrtomb@plt+0x655c>  // b.none
  40acac:	add	x0, sp, #0x200
  40acb0:	ldp	x2, x3, [x19, #232]
  40acb4:	ldp	x0, x1, [x0, #-216]
  40acb8:	bl	42f508 <wcrtomb@plt+0x2a8e8>
  40acbc:	cbnz	w0, 40b1c4 <wcrtomb@plt+0x65a4>
  40acc0:	ldr	x0, [x21, #104]
  40acc4:	ldrb	w0, [x0, #156]
  40acc8:	cmp	w0, #0x53
  40accc:	b.eq	40ace0 <wcrtomb@plt+0x60c0>  // b.none
  40acd0:	ldr	x0, [x19, #136]
  40acd4:	ldr	x1, [sp, #256]
  40acd8:	cmp	x1, x0
  40acdc:	b.ne	40b0ac <wcrtomb@plt+0x648c>  // b.any
  40ace0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ace4:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40ace8:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40acec:	add	x21, x21, #0x7e0
  40acf0:	ldr	w2, [x0, #836]
  40acf4:	mov	x1, x20
  40acf8:	ldr	w0, [x22, #2200]
  40acfc:	bl	4045b0 <__openat_2@plt>
  40ad00:	str	w0, [x21, #8]
  40ad04:	tbnz	w0, #31, 40b210 <wcrtomb@plt+0x65f0>
  40ad08:	ldrb	w1, [x19, #272]
  40ad0c:	cbz	w1, 40b1e8 <wcrtomb@plt+0x65c8>
  40ad10:	mov	x1, x19
  40ad14:	bl	429da8 <wcrtomb@plt+0x25188>
  40ad18:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ad1c:	ldr	w0, [x21, #8]
  40ad20:	ldr	w1, [x1, #684]
  40ad24:	cmp	w1, #0x1
  40ad28:	b.eq	40b22c <wcrtomb@plt+0x660c>  // b.none
  40ad2c:	bl	4045c0 <close@plt>
  40ad30:	cbz	w0, 40ab9c <wcrtomb@plt+0x5f7c>
  40ad34:	mov	x0, x20
  40ad38:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  40ad3c:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40ad40:	cmp	w0, #0x37
  40ad44:	b.eq	40ac3c <wcrtomb@plt+0x601c>  // b.none
  40ad48:	cmp	w0, #0x44
  40ad4c:	b.ne	40ad84 <wcrtomb@plt+0x6164>  // b.any
  40ad50:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ad54:	add	x19, x20, #0xe0
  40ad58:	mov	x0, x19
  40ad5c:	bl	41afc0 <wcrtomb@plt+0x163a0>
  40ad60:	tst	w0, #0xff
  40ad64:	b.ne	40aedc <wcrtomb@plt+0x62bc>  // b.any
  40ad68:	bl	40a9b0 <wcrtomb@plt+0x5d90>
  40ad6c:	ldp	x19, x20, [sp, #16]
  40ad70:	ldp	x21, x22, [sp, #32]
  40ad74:	ldp	x29, x30, [sp], #336
  40ad78:	ret
  40ad7c:	cmp	w0, #0x32
  40ad80:	b.ne	40ac30 <wcrtomb@plt+0x6010>  // b.any
  40ad84:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ad88:	ldr	x0, [x0, #1136]
  40ad8c:	cbz	x0, 40ad94 <wcrtomb@plt+0x6174>
  40ad90:	blr	x0
  40ad94:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ad98:	add	x19, x20, #0xe0
  40ad9c:	mov	w2, #0x5                   	// #5
  40ada0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ada4:	mov	x0, #0x0                   	// #0
  40ada8:	add	x1, x1, #0x430
  40adac:	bl	4049c0 <dcgettext@plt>
  40adb0:	mov	x20, x0
  40adb4:	ldr	x0, [x19, #8]
  40adb8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40adbc:	mov	x3, x0
  40adc0:	ldr	x4, [x21, #104]
  40adc4:	mov	w1, #0x0                   	// #0
  40adc8:	mov	w0, #0x0                   	// #0
  40adcc:	mov	x2, x20
  40add0:	ldrb	w4, [x4, #156]
  40add4:	bl	404050 <error@plt>
  40add8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40addc:	mov	w1, #0x2                   	// #2
  40ade0:	str	w1, [x0, #3568]
  40ade4:	b	40ac44 <wcrtomb@plt+0x6024>
  40ade8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40adec:	mov	w2, #0x5                   	// #5
  40adf0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40adf4:	add	x1, x1, #0x428
  40adf8:	ldr	x19, [x0, #4056]
  40adfc:	mov	x0, #0x0                   	// #0
  40ae00:	bl	4049c0 <dcgettext@plt>
  40ae04:	mov	x2, x0
  40ae08:	mov	w1, #0x1                   	// #1
  40ae0c:	mov	x0, x19
  40ae10:	bl	404700 <__fprintf_chk@plt>
  40ae14:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ae18:	ldr	x1, [x21, #104]
  40ae1c:	add	x0, x20, #0xe0
  40ae20:	mov	x2, #0xffffffffffffffff    	// #-1
  40ae24:	bl	41d6f8 <wcrtomb@plt+0x18ad8>
  40ae28:	b	40aae0 <wcrtomb@plt+0x5ec0>
  40ae2c:	bl	404ad0 <__errno_location@plt>
  40ae30:	ldr	w0, [x0]
  40ae34:	cmp	w0, #0x2
  40ae38:	mov	x0, x20
  40ae3c:	b.eq	40b078 <wcrtomb@plt+0x6458>  // b.none
  40ae40:	bl	434400 <wcrtomb@plt+0x2f7e0>
  40ae44:	mov	x0, x19
  40ae48:	mov	x1, #0x0                   	// #0
  40ae4c:	bl	40a658 <wcrtomb@plt+0x5a38>
  40ae50:	ldp	x19, x20, [sp, #16]
  40ae54:	ldp	x21, x22, [sp, #32]
  40ae58:	ldp	x29, x30, [sp], #336
  40ae5c:	ret
  40ae60:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ae64:	add	x19, x20, #0xe0
  40ae68:	ldrb	w0, [x19, #16]
  40ae6c:	cbnz	w0, 40ad68 <wcrtomb@plt+0x6148>
  40ae70:	ldr	x20, [x19, #8]
  40ae74:	add	x1, sp, #0xd0
  40ae78:	mov	x0, x20
  40ae7c:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  40ae80:	cbnz	w0, 40ae2c <wcrtomb@plt+0x620c>
  40ae84:	ldr	w0, [sp, #224]
  40ae88:	and	w0, w0, #0xf000
  40ae8c:	cmp	w0, #0x8, lsl #12
  40ae90:	b.eq	40afb4 <wcrtomb@plt+0x6394>  // b.none
  40ae94:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ae98:	add	x1, x1, #0x400
  40ae9c:	mov	w2, #0x5                   	// #5
  40aea0:	mov	x0, #0x0                   	// #0
  40aea4:	bl	4049c0 <dcgettext@plt>
  40aea8:	mov	x1, x0
  40aeac:	mov	x0, x19
  40aeb0:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40aeb4:	bl	41e038 <wcrtomb@plt+0x19418>
  40aeb8:	ldp	x19, x20, [sp, #16]
  40aebc:	ldp	x21, x22, [sp, #32]
  40aec0:	ldp	x29, x30, [sp], #336
  40aec4:	ret
  40aec8:	bl	40a8a8 <wcrtomb@plt+0x5c88>
  40aecc:	ldp	x19, x20, [sp, #16]
  40aed0:	ldp	x21, x22, [sp, #32]
  40aed4:	ldp	x29, x30, [sp], #336
  40aed8:	ret
  40aedc:	ldr	w0, [x19, #408]
  40aee0:	cbnz	w0, 40b0e0 <wcrtomb@plt+0x64c0>
  40aee4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40aee8:	ldr	x1, [x20, #224]
  40aeec:	ldr	w2, [x0, #836]
  40aef0:	ldr	x0, [x19, #392]
  40aef4:	bl	40dde8 <wcrtomb@plt+0x91c8>
  40aef8:	mov	w21, w0
  40aefc:	tbnz	w0, #31, 40b264 <wcrtomb@plt+0x6644>
  40af00:	mov	w1, w0
  40af04:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40af08:	mov	w0, #0x0                   	// #0
  40af0c:	add	x2, x2, #0x138
  40af10:	bl	4049a0 <__fxstat@plt>
  40af14:	cbnz	w0, 40b280 <wcrtomb@plt+0x6660>
  40af18:	stp	x23, x24, [sp, #48]
  40af1c:	str	w21, [x19, #408]
  40af20:	mov	x0, x19
  40af24:	bl	4196e0 <wcrtomb@plt+0x14ac0>
  40af28:	bl	419d28 <wcrtomb@plt+0x15108>
  40af2c:	mov	x24, x0
  40af30:	cbz	x0, 40b1f8 <wcrtomb@plt+0x65d8>
  40af34:	str	x25, [sp, #64]
  40af38:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40af3c:	ldr	x25, [x19, #384]
  40af40:	mov	x22, #0x4000                	// #16384
  40af44:	mov	x21, #0x400                 	// #1024
  40af48:	add	x20, x20, #0x4e0
  40af4c:	mov	x23, #0x1                   	// #1
  40af50:	movk	x22, #0x11, lsl #16
  40af54:	movk	x21, #0x20, lsl #16
  40af58:	ldrb	w1, [x25]
  40af5c:	cbz	w1, 40b0c8 <wcrtomb@plt+0x64a8>
  40af60:	sub	w1, w1, #0x44
  40af64:	and	w0, w1, #0xff
  40af68:	lsl	x1, x23, x1
  40af6c:	and	x3, x1, x22
  40af70:	and	x2, x1, x21
  40af74:	and	w1, w1, #0x1
  40af78:	cmp	w0, #0x15
  40af7c:	b.hi	40af78 <wcrtomb@plt+0x6358>  // b.pmore
  40af80:	cbnz	x3, 40b0c8 <wcrtomb@plt+0x64a8>
  40af84:	cbnz	x2, 40b0e8 <wcrtomb@plt+0x64c8>
  40af88:	cbz	w1, 40af78 <wcrtomb@plt+0x6358>
  40af8c:	mov	x1, x24
  40af90:	mov	x0, x25
  40af94:	bl	404710 <strcmp@plt>
  40af98:	cbnz	w0, 40b108 <wcrtomb@plt+0x64e8>
  40af9c:	mov	x0, x25
  40afa0:	bl	403ff0 <strlen@plt>
  40afa4:	add	x0, x0, #0x1
  40afa8:	add	x25, x25, x0
  40afac:	add	x24, x24, x0
  40afb0:	b	40af58 <wcrtomb@plt+0x6338>
  40afb4:	ldr	x0, [x21, #104]
  40afb8:	mov	x1, #0xc                   	// #12
  40afbc:	add	x0, x0, #0x171
  40afc0:	bl	41cd38 <wcrtomb@plt+0x18118>
  40afc4:	mov	x20, x0
  40afc8:	tbnz	x0, #63, 40b0ac <wcrtomb@plt+0x648c>
  40afcc:	ldr	x0, [x19, #136]
  40afd0:	adds	x0, x0, x20
  40afd4:	b.vs	40b0ac <wcrtomb@plt+0x648c>
  40afd8:	ldr	x1, [sp, #256]
  40afdc:	cmp	x1, x0
  40afe0:	b.ne	40b0ac <wcrtomb@plt+0x648c>  // b.any
  40afe4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40afe8:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40afec:	ldr	x1, [x19, #8]
  40aff0:	ldr	w2, [x2, #836]
  40aff4:	ldr	w0, [x0, #2200]
  40aff8:	bl	4045b0 <__openat_2@plt>
  40affc:	mov	w21, w0
  40b000:	tbnz	w0, #31, 40b2b0 <wcrtomb@plt+0x6690>
  40b004:	mov	x1, x20
  40b008:	mov	w2, #0x0                   	// #0
  40b00c:	bl	4041d0 <lseek@plt>
  40b010:	tbnz	x0, #63, 40b294 <wcrtomb@plt+0x6674>
  40b014:	adrp	x0, 40a000 <wcrtomb@plt+0x53e0>
  40b018:	add	x0, x0, #0x790
  40b01c:	bl	40a568 <wcrtomb@plt+0x5948>
  40b020:	mov	w0, w21
  40b024:	bl	4045c0 <close@plt>
  40b028:	cbz	w0, 40ab9c <wcrtomb@plt+0x5f7c>
  40b02c:	ldr	x0, [x19, #8]
  40b030:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  40b034:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40b038:	cmp	w2, #0x6, lsl #12
  40b03c:	cset	w1, ne  // ne = any
  40b040:	cbnz	w1, 40b12c <wcrtomb@plt+0x650c>
  40b044:	ldr	x2, [x19, #120]
  40b048:	ldr	x1, [sp, #240]
  40b04c:	cmp	x2, x1
  40b050:	b.eq	40ab4c <wcrtomb@plt+0x5f2c>  // b.none
  40b054:	mov	w2, #0x5                   	// #5
  40b058:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b05c:	mov	x0, #0x0                   	// #0
  40b060:	add	x1, x1, #0x4c8
  40b064:	bl	4049c0 <dcgettext@plt>
  40b068:	mov	x1, x0
  40b06c:	mov	x0, x19
  40b070:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b074:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40b078:	bl	434488 <wcrtomb@plt+0x2f868>
  40b07c:	b	40ae44 <wcrtomb@plt+0x6224>
  40b080:	bl	404ad0 <__errno_location@plt>
  40b084:	ldr	w0, [x0]
  40b088:	cmp	w0, #0x2
  40b08c:	mov	x0, x20
  40b090:	b.eq	40b150 <wcrtomb@plt+0x6530>  // b.none
  40b094:	bl	434400 <wcrtomb@plt+0x2f7e0>
  40b098:	mov	x0, x19
  40b09c:	mov	x1, #0x0                   	// #0
  40b0a0:	bl	40a658 <wcrtomb@plt+0x5a38>
  40b0a4:	bl	41e038 <wcrtomb@plt+0x19418>
  40b0a8:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40b0ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b0b0:	mov	w2, #0x5                   	// #5
  40b0b4:	add	x1, x1, #0x4a0
  40b0b8:	b	40aea0 <wcrtomb@plt+0x6280>
  40b0bc:	cmp	w2, #0x2, lsl #12
  40b0c0:	cset	w1, ne  // ne = any
  40b0c4:	b	40b040 <wcrtomb@plt+0x6420>
  40b0c8:	ldrb	w0, [x24]
  40b0cc:	cbnz	w0, 40b108 <wcrtomb@plt+0x64e8>
  40b0d0:	ldp	x23, x24, [sp, #48]
  40b0d4:	ldr	x25, [sp, #64]
  40b0d8:	bl	40a9b0 <wcrtomb@plt+0x5d90>
  40b0dc:	b	40ad6c <wcrtomb@plt+0x614c>
  40b0e0:	stp	x23, x24, [sp, #48]
  40b0e4:	b	40af20 <wcrtomb@plt+0x6300>
  40b0e8:	ldrb	w1, [x24]
  40b0ec:	mov	x0, x20
  40b0f0:	bl	404870 <strchr@plt>
  40b0f4:	cbz	x0, 40b108 <wcrtomb@plt+0x64e8>
  40b0f8:	add	x1, x24, #0x1
  40b0fc:	add	x0, x25, #0x1
  40b100:	bl	404710 <strcmp@plt>
  40b104:	cbz	w0, 40af9c <wcrtomb@plt+0x637c>
  40b108:	mov	w2, #0x5                   	// #5
  40b10c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b110:	mov	x0, #0x0                   	// #0
  40b114:	add	x1, x1, #0x3e0
  40b118:	bl	4049c0 <dcgettext@plt>
  40b11c:	mov	x1, x0
  40b120:	mov	x0, x19
  40b124:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b128:	b	40b0d0 <wcrtomb@plt+0x64b0>
  40b12c:	mov	w2, #0x5                   	// #5
  40b130:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b134:	mov	x0, #0x0                   	// #0
  40b138:	add	x1, x1, #0x400
  40b13c:	bl	4049c0 <dcgettext@plt>
  40b140:	mov	x1, x0
  40b144:	mov	x0, x19
  40b148:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b14c:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40b150:	bl	434488 <wcrtomb@plt+0x2f868>
  40b154:	b	40b098 <wcrtomb@plt+0x6478>
  40b158:	mov	w2, #0x5                   	// #5
  40b15c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b160:	mov	x0, #0x0                   	// #0
  40b164:	add	x1, x1, #0x418
  40b168:	bl	4049c0 <dcgettext@plt>
  40b16c:	mov	x1, x0
  40b170:	mov	x0, x19
  40b174:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b178:	b	40ac80 <wcrtomb@plt+0x6060>
  40b17c:	mov	w2, #0x5                   	// #5
  40b180:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b184:	mov	x0, #0x0                   	// #0
  40b188:	add	x1, x1, #0x478
  40b18c:	bl	4049c0 <dcgettext@plt>
  40b190:	mov	x1, x0
  40b194:	mov	x0, x19
  40b198:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b19c:	b	40acac <wcrtomb@plt+0x608c>
  40b1a0:	mov	w2, #0x5                   	// #5
  40b1a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b1a8:	mov	x0, #0x0                   	// #0
  40b1ac:	add	x1, x1, #0x468
  40b1b0:	bl	4049c0 <dcgettext@plt>
  40b1b4:	mov	x1, x0
  40b1b8:	mov	x0, x19
  40b1bc:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b1c0:	b	40ac98 <wcrtomb@plt+0x6078>
  40b1c4:	mov	w2, #0x5                   	// #5
  40b1c8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b1cc:	mov	x0, #0x0                   	// #0
  40b1d0:	add	x1, x1, #0x488
  40b1d4:	bl	4049c0 <dcgettext@plt>
  40b1d8:	mov	x1, x0
  40b1dc:	mov	x0, x19
  40b1e0:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  40b1e4:	b	40acc0 <wcrtomb@plt+0x60a0>
  40b1e8:	adrp	x0, 40a000 <wcrtomb@plt+0x53e0>
  40b1ec:	add	x0, x0, #0x790
  40b1f0:	bl	40a568 <wcrtomb@plt+0x5948>
  40b1f4:	b	40ad18 <wcrtomb@plt+0x60f8>
  40b1f8:	adrp	x0, 40a000 <wcrtomb@plt+0x53e0>
  40b1fc:	add	x0, x0, #0x560
  40b200:	bl	40a568 <wcrtomb@plt+0x5948>
  40b204:	ldp	x23, x24, [sp, #48]
  40b208:	bl	40a9b0 <wcrtomb@plt+0x5d90>
  40b20c:	b	40ad6c <wcrtomb@plt+0x614c>
  40b210:	mov	x0, x20
  40b214:	bl	433b00 <wcrtomb@plt+0x2eee0>
  40b218:	bl	41e038 <wcrtomb@plt+0x19418>
  40b21c:	mov	x0, x19
  40b220:	mov	x1, #0x0                   	// #0
  40b224:	bl	40a658 <wcrtomb@plt+0x5a38>
  40b228:	b	40ab9c <wcrtomb@plt+0x5f7c>
  40b22c:	ldr	x1, [sp, #256]
  40b230:	cbz	x1, 40ad2c <wcrtomb@plt+0x610c>
  40b234:	add	x3, sp, #0x200
  40b238:	ldr	w1, [x22, #2200]
  40b23c:	mov	x2, x20
  40b240:	ldp	x3, x4, [x3, #-232]
  40b244:	bl	41fd18 <wcrtomb@plt+0x1b0f8>
  40b248:	cbnz	w0, 40b254 <wcrtomb@plt+0x6634>
  40b24c:	ldr	w0, [x21, #8]
  40b250:	b	40ad2c <wcrtomb@plt+0x610c>
  40b254:	mov	x0, x20
  40b258:	bl	434688 <wcrtomb@plt+0x2fa68>
  40b25c:	ldr	w0, [x21, #8]
  40b260:	b	40ad2c <wcrtomb@plt+0x610c>
  40b264:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40b268:	add	x2, x2, #0x300
  40b26c:	ldr	x0, [x20, #224]
  40b270:	mov	w1, #0x0                   	// #0
  40b274:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40b278:	bl	40a9b0 <wcrtomb@plt+0x5d90>
  40b27c:	b	40ad6c <wcrtomb@plt+0x614c>
  40b280:	mov	w0, w21
  40b284:	bl	4045c0 <close@plt>
  40b288:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40b28c:	add	x2, x2, #0x3c8
  40b290:	b	40b26c <wcrtomb@plt+0x664c>
  40b294:	ldr	x0, [x19, #8]
  40b298:	mov	x1, x20
  40b29c:	bl	4341b8 <wcrtomb@plt+0x2f598>
  40b2a0:	mov	x0, x19
  40b2a4:	mov	x1, #0x0                   	// #0
  40b2a8:	bl	40a658 <wcrtomb@plt+0x5a38>
  40b2ac:	b	40b020 <wcrtomb@plt+0x6400>
  40b2b0:	ldr	x0, [x19, #8]
  40b2b4:	bl	433b00 <wcrtomb@plt+0x2eee0>
  40b2b8:	b	40b098 <wcrtomb@plt+0x6478>
  40b2bc:	nop
  40b2c0:	stp	x29, x30, [sp, #-128]!
  40b2c4:	mov	x29, sp
  40b2c8:	stp	x19, x20, [sp, #16]
  40b2cc:	bl	434950 <wcrtomb@plt+0x2fd30>
  40b2d0:	tst	w0, #0xff
  40b2d4:	b.ne	40b574 <wcrtomb@plt+0x6954>  // b.any
  40b2d8:	bl	430a30 <wcrtomb@plt+0x2be10>
  40b2dc:	tst	w0, #0xff
  40b2e0:	b.ne	40b61c <wcrtomb@plt+0x69fc>  // b.any
  40b2e4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b2e8:	bl	419520 <wcrtomb@plt+0x14900>
  40b2ec:	ldr	x0, [x19, #2016]
  40b2f0:	cbz	x0, 40b5f4 <wcrtomb@plt+0x69d4>
  40b2f4:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b2f8:	ldr	w0, [x19, #1104]
  40b2fc:	bl	4042b0 <fsync@plt>
  40b300:	ldr	w0, [x19, #1104]
  40b304:	mov	x1, #0x24b                 	// #587
  40b308:	bl	404bd0 <ioctl@plt>
  40b30c:	mov	w1, #0x2                   	// #2
  40b310:	ldr	w0, [x19, #1104]
  40b314:	mov	w2, #0x1                   	// #1
  40b318:	strh	w1, [sp, #104]
  40b31c:	str	w2, [sp, #108]
  40b320:	mov	w1, #0x3fffffff            	// #1073741823
  40b324:	cmp	w0, w1
  40b328:	b.le	40b560 <wcrtomb@plt+0x6940>
  40b32c:	mov	w2, #0xc0000000            	// #-1073741824
  40b330:	mov	w1, #0x6d01                	// #27905
  40b334:	add	w0, w0, w2
  40b338:	movk	w1, #0x4008, lsl #16
  40b33c:	add	x2, sp, #0x68
  40b340:	bl	435bc0 <wcrtomb@plt+0x30fa0>
  40b344:	tbz	w0, #31, 40b388 <wcrtomb@plt+0x6768>
  40b348:	bl	404ad0 <__errno_location@plt>
  40b34c:	ldr	w0, [x0]
  40b350:	ldr	w3, [x19, #1104]
  40b354:	cmp	w0, #0x5
  40b358:	b.eq	40b674 <wcrtomb@plt+0x6a54>  // b.none
  40b35c:	mov	w0, #0x3fffffff            	// #1073741823
  40b360:	cmp	w3, w0
  40b364:	b.le	40b654 <wcrtomb@plt+0x6a34>
  40b368:	mov	w0, #0xc0000000            	// #-1073741824
  40b36c:	mov	w2, #0x0                   	// #0
  40b370:	add	w0, w3, w0
  40b374:	mov	x1, #0x0                   	// #0
  40b378:	bl	4359b8 <wcrtomb@plt+0x30d98>
  40b37c:	cmp	x0, #0x0
  40b380:	cset	w0, ne  // ne = any
  40b384:	cbnz	w0, 40b6c8 <wcrtomb@plt+0x6aa8>
  40b388:	mov	w0, #0x1                   	// #1
  40b38c:	stp	x23, x24, [sp, #48]
  40b390:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b394:	stp	x25, x26, [sp, #64]
  40b398:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b39c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b3a0:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b3a4:	add	x20, x20, #0x68
  40b3a8:	add	x23, x23, #0x588
  40b3ac:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b3b0:	str	wzr, [x24, #4088]
  40b3b4:	strb	w0, [x25, #56]
  40b3b8:	stp	x21, x22, [sp, #32]
  40b3bc:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b3c0:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b3c4:	add	x21, x21, #0xe0
  40b3c8:	add	x22, x22, #0x5b8
  40b3cc:	str	x27, [sp, #80]
  40b3d0:	bl	408d50 <wcrtomb@plt+0x4130>
  40b3d4:	mov	x1, x21
  40b3d8:	mov	x0, x20
  40b3dc:	mov	w2, #0x0                   	// #0
  40b3e0:	bl	41c318 <wcrtomb@plt+0x176f8>
  40b3e4:	mov	w19, w0
  40b3e8:	cmp	w0, #0x5
  40b3ec:	b.eq	40b440 <wcrtomb@plt+0x6820>  // b.none
  40b3f0:	cmp	w19, #0x4
  40b3f4:	b.eq	40b4bc <wcrtomb@plt+0x689c>  // b.none
  40b3f8:	cmp	w19, #0x3
  40b3fc:	ldr	x0, [x20]
  40b400:	b.eq	40b4e4 <wcrtomb@plt+0x68c4>  // b.none
  40b404:	mov	x1, x21
  40b408:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b40c:	add	x2, x2, #0x50
  40b410:	mov	w3, #0x1                   	// #1
  40b414:	bl	41c8b0 <wcrtomb@plt+0x17c90>
  40b418:	bl	40aa98 <wcrtomb@plt+0x5e78>
  40b41c:	mov	x0, x21
  40b420:	bl	42f438 <wcrtomb@plt+0x2a818>
  40b424:	mov	x1, x21
  40b428:	mov	x0, x20
  40b42c:	mov	w2, #0x0                   	// #0
  40b430:	bl	41c318 <wcrtomb@plt+0x176f8>
  40b434:	mov	w19, w0
  40b438:	cmp	w0, #0x5
  40b43c:	b.ne	40b3f0 <wcrtomb@plt+0x67d0>  // b.any
  40b440:	mov	w27, #0x0                   	// #0
  40b444:	nop
  40b448:	ldr	x0, [x20]
  40b44c:	add	w27, w27, #0x1
  40b450:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40b454:	mov	x1, x21
  40b458:	mov	x0, x20
  40b45c:	mov	w2, #0x0                   	// #0
  40b460:	bl	41c318 <wcrtomb@plt+0x176f8>
  40b464:	mov	w19, w0
  40b468:	cmp	w0, #0x5
  40b46c:	b.eq	40b448 <wcrtomb@plt+0x6828>  // b.none
  40b470:	ldr	x0, [x26, #1136]
  40b474:	cbz	x0, 40b47c <wcrtomb@plt+0x685c>
  40b478:	blr	x0
  40b47c:	mov	w4, #0x5                   	// #5
  40b480:	sxtw	x3, w27
  40b484:	mov	x2, x23
  40b488:	mov	x1, x22
  40b48c:	mov	x0, #0x0                   	// #0
  40b490:	bl	4048f0 <dcngettext@plt>
  40b494:	mov	w1, #0x0                   	// #0
  40b498:	mov	x2, x0
  40b49c:	mov	w3, w27
  40b4a0:	mov	w0, #0x0                   	// #0
  40b4a4:	bl	404050 <error@plt>
  40b4a8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b4ac:	mov	w1, #0x2                   	// #2
  40b4b0:	cmp	w19, #0x4
  40b4b4:	str	w1, [x0, #3568]
  40b4b8:	b.ne	40b3f8 <wcrtomb@plt+0x67d8>  // b.any
  40b4bc:	strb	wzr, [x25, #56]
  40b4c0:	mov	w0, #0x1                   	// #1
  40b4c4:	str	w0, [x24, #4088]
  40b4c8:	ldp	x19, x20, [sp, #16]
  40b4cc:	ldp	x21, x22, [sp, #32]
  40b4d0:	ldp	x23, x24, [sp, #48]
  40b4d4:	ldp	x25, x26, [sp, #64]
  40b4d8:	ldr	x27, [sp, #80]
  40b4dc:	ldp	x29, x30, [sp], #128
  40b4e0:	ret
  40b4e4:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40b4e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b4ec:	ldrb	w0, [x0, #205]
  40b4f0:	cbnz	w0, 40b3d4 <wcrtomb@plt+0x67b4>
  40b4f4:	mov	x1, x21
  40b4f8:	mov	x0, x20
  40b4fc:	mov	w2, #0x0                   	// #0
  40b500:	bl	41c318 <wcrtomb@plt+0x176f8>
  40b504:	cmp	w0, #0x3
  40b508:	b.eq	40b4bc <wcrtomb@plt+0x689c>  // b.none
  40b50c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b510:	ldr	w0, [x0, #432]
  40b514:	tbz	w0, #0, 40b3d4 <wcrtomb@plt+0x67b4>
  40b518:	ldr	x0, [x26, #1136]
  40b51c:	cbz	x0, 40b524 <wcrtomb@plt+0x6904>
  40b520:	blr	x0
  40b524:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b528:	add	x1, x1, #0x5e8
  40b52c:	mov	w2, #0x5                   	// #5
  40b530:	mov	x0, #0x0                   	// #0
  40b534:	bl	4049c0 <dcgettext@plt>
  40b538:	mov	x19, x0
  40b53c:	bl	406070 <wcrtomb@plt+0x1450>
  40b540:	add	x1, sp, #0x68
  40b544:	bl	446868 <argp_parse@@Base+0x6a88>
  40b548:	mov	x2, x19
  40b54c:	mov	x3, x0
  40b550:	mov	w1, #0x0                   	// #0
  40b554:	mov	w0, #0x0                   	// #0
  40b558:	bl	404050 <error@plt>
  40b55c:	b	40b3d4 <wcrtomb@plt+0x67b4>
  40b560:	mov	x1, #0x6d01                	// #27905
  40b564:	add	x2, sp, #0x68
  40b568:	movk	x1, #0x4008, lsl #16
  40b56c:	bl	404bd0 <ioctl@plt>
  40b570:	b	40b344 <wcrtomb@plt+0x6724>
  40b574:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b578:	ldr	x0, [x19, #1136]
  40b57c:	cbz	x0, 40b584 <wcrtomb@plt+0x6964>
  40b580:	blr	x0
  40b584:	mov	w2, #0x5                   	// #5
  40b588:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b58c:	mov	x0, #0x0                   	// #0
  40b590:	add	x1, x1, #0x4e8
  40b594:	bl	4049c0 <dcgettext@plt>
  40b598:	mov	x2, x0
  40b59c:	mov	w1, #0x0                   	// #0
  40b5a0:	mov	w0, #0x0                   	// #0
  40b5a4:	bl	404050 <error@plt>
  40b5a8:	bl	430a30 <wcrtomb@plt+0x2be10>
  40b5ac:	tst	w0, #0xff
  40b5b0:	b.ne	40b620 <wcrtomb@plt+0x6a00>  // b.any
  40b5b4:	ldr	x0, [x19, #1136]
  40b5b8:	cbz	x0, 40b5c0 <wcrtomb@plt+0x69a0>
  40b5bc:	blr	x0
  40b5c0:	mov	w2, #0x5                   	// #5
  40b5c4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b5c8:	mov	x0, #0x0                   	// #0
  40b5cc:	add	x1, x1, #0x558
  40b5d0:	bl	4049c0 <dcgettext@plt>
  40b5d4:	mov	x2, x0
  40b5d8:	mov	w1, #0x0                   	// #0
  40b5dc:	mov	w0, #0x0                   	// #0
  40b5e0:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b5e4:	bl	404050 <error@plt>
  40b5e8:	bl	419520 <wcrtomb@plt+0x14900>
  40b5ec:	ldr	x0, [x19, #2016]
  40b5f0:	cbnz	x0, 40b2f4 <wcrtomb@plt+0x66d4>
  40b5f4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b5f8:	add	x0, sp, #0x68
  40b5fc:	ldr	x1, [x1, #1048]
  40b600:	bl	420510 <wcrtomb@plt+0x1b8f0>
  40b604:	str	x0, [x19, #2016]
  40b608:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b60c:	ldr	x0, [x1, #960]
  40b610:	cbz	x0, 40b2f4 <wcrtomb@plt+0x66d4>
  40b614:	bl	41a150 <wcrtomb@plt+0x15530>
  40b618:	b	40b2f4 <wcrtomb@plt+0x66d4>
  40b61c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b620:	ldr	x0, [x19, #1136]
  40b624:	cbz	x0, 40b62c <wcrtomb@plt+0x6a0c>
  40b628:	blr	x0
  40b62c:	mov	w2, #0x5                   	// #5
  40b630:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b634:	mov	x0, #0x0                   	// #0
  40b638:	add	x1, x1, #0x528
  40b63c:	bl	4049c0 <dcgettext@plt>
  40b640:	mov	x2, x0
  40b644:	mov	w1, #0x0                   	// #0
  40b648:	mov	w0, #0x0                   	// #0
  40b64c:	bl	404050 <error@plt>
  40b650:	b	40b5b4 <wcrtomb@plt+0x6994>
  40b654:	mov	w0, w3
  40b658:	mov	w2, #0x0                   	// #0
  40b65c:	mov	x1, #0x0                   	// #0
  40b660:	bl	4041d0 <lseek@plt>
  40b664:	cmp	x0, #0x0
  40b668:	cset	w0, ne  // ne = any
  40b66c:	cbz	w0, 40b388 <wcrtomb@plt+0x6768>
  40b670:	b	40b6c8 <wcrtomb@plt+0x6aa8>
  40b674:	mov	w0, #0x3fffffff            	// #1073741823
  40b678:	cmp	w3, w0
  40b67c:	b.le	40b6b0 <wcrtomb@plt+0x6a90>
  40b680:	mov	w1, #0x6d01                	// #27905
  40b684:	mov	w0, #0xc0000000            	// #-1073741824
  40b688:	add	x2, sp, #0x68
  40b68c:	add	w0, w3, w0
  40b690:	movk	w1, #0x4008, lsl #16
  40b694:	bl	435bc0 <wcrtomb@plt+0x30fa0>
  40b698:	tbz	w0, #31, 40b388 <wcrtomb@plt+0x6768>
  40b69c:	ldr	w3, [x19, #1104]
  40b6a0:	mov	w0, #0x3fffffff            	// #1073741823
  40b6a4:	cmp	w3, w0
  40b6a8:	b.le	40b654 <wcrtomb@plt+0x6a34>
  40b6ac:	b	40b368 <wcrtomb@plt+0x6748>
  40b6b0:	mov	x1, #0x6d01                	// #27905
  40b6b4:	mov	w0, w3
  40b6b8:	add	x2, sp, #0x68
  40b6bc:	movk	x1, #0x4008, lsl #16
  40b6c0:	bl	404bd0 <ioctl@plt>
  40b6c4:	b	40b698 <wcrtomb@plt+0x6a78>
  40b6c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b6cc:	ldr	x0, [x0, #816]
  40b6d0:	ldr	x0, [x0]
  40b6d4:	bl	434250 <wcrtomb@plt+0x2f630>
  40b6d8:	ldp	x19, x20, [sp, #16]
  40b6dc:	ldp	x29, x30, [sp], #128
  40b6e0:	ret
  40b6e4:	nop
  40b6e8:	ldp	x2, x0, [x0]
  40b6ec:	eor	x2, x2, x0
  40b6f0:	udiv	x0, x2, x1
  40b6f4:	msub	x0, x0, x1, x2
  40b6f8:	ret
  40b6fc:	nop
  40b700:	ldp	x2, x3, [x0]
  40b704:	ldp	x4, x1, [x1]
  40b708:	eor	x0, x2, x4
  40b70c:	eor	x1, x3, x1
  40b710:	orr	x0, x0, x1
  40b714:	cmp	x0, #0x0
  40b718:	cset	w0, eq  // eq = none
  40b71c:	ret
  40b720:	stp	x29, x30, [sp, #-32]!
  40b724:	mov	x29, sp
  40b728:	stp	x19, x20, [sp, #16]
  40b72c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b730:	mov	x19, x0
  40b734:	ldr	w2, [x20, #2032]
  40b738:	mov	w0, w2
  40b73c:	cbz	w2, 40b750 <wcrtomb@plt+0x6b30>
  40b740:	str	wzr, [x19]
  40b744:	ldp	x19, x20, [sp, #16]
  40b748:	ldp	x29, x30, [sp], #32
  40b74c:	ret
  40b750:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b754:	add	x1, x20, #0x7f0
  40b758:	add	x0, x0, #0x600
  40b75c:	bl	4220b8 <wcrtomb@plt+0x1d498>
  40b760:	cbnz	w0, 40b780 <wcrtomb@plt+0x6b60>
  40b764:	mov	w1, #0xfffffffe            	// #-2
  40b768:	str	w1, [x20, #2032]
  40b76c:	str	wzr, [x19]
  40b770:	mov	x0, #0xfffffffe            	// #4294967294
  40b774:	ldp	x19, x20, [sp, #16]
  40b778:	ldp	x29, x30, [sp], #32
  40b77c:	ret
  40b780:	ldr	w0, [x20, #2032]
  40b784:	str	wzr, [x19]
  40b788:	ldp	x19, x20, [sp, #16]
  40b78c:	ldp	x29, x30, [sp], #32
  40b790:	ret
  40b794:	nop
  40b798:	stp	x29, x30, [sp, #-32]!
  40b79c:	mov	x29, sp
  40b7a0:	stp	x19, x20, [sp, #16]
  40b7a4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b7a8:	add	x19, x19, #0x7f0
  40b7ac:	mov	x20, x0
  40b7b0:	ldr	w1, [x19, #4]
  40b7b4:	mov	w0, w1
  40b7b8:	cbz	w1, 40b7cc <wcrtomb@plt+0x6bac>
  40b7bc:	str	wzr, [x20]
  40b7c0:	ldp	x19, x20, [sp, #16]
  40b7c4:	ldp	x29, x30, [sp], #32
  40b7c8:	ret
  40b7cc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40b7d0:	add	x1, x19, #0x4
  40b7d4:	add	x0, x0, #0x600
  40b7d8:	bl	422180 <wcrtomb@plt+0x1d560>
  40b7dc:	cbnz	w0, 40b7fc <wcrtomb@plt+0x6bdc>
  40b7e0:	mov	w1, #0xfffffffe            	// #-2
  40b7e4:	str	w1, [x19, #4]
  40b7e8:	str	wzr, [x20]
  40b7ec:	mov	x0, #0xfffffffe            	// #4294967294
  40b7f0:	ldp	x19, x20, [sp, #16]
  40b7f4:	ldp	x29, x30, [sp], #32
  40b7f8:	ret
  40b7fc:	ldr	w0, [x19, #4]
  40b800:	str	wzr, [x20]
  40b804:	ldp	x19, x20, [sp, #16]
  40b808:	ldp	x29, x30, [sp], #32
  40b80c:	ret
  40b810:	stp	x29, x30, [sp, #-64]!
  40b814:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b818:	mov	w1, #0x1                   	// #1
  40b81c:	mov	x29, sp
  40b820:	ldrb	w2, [x2, #1080]
  40b824:	stp	x19, x20, [sp, #16]
  40b828:	mov	x20, x0
  40b82c:	ldr	x0, [x0]
  40b830:	str	x21, [sp, #32]
  40b834:	str	xzr, [sp, #56]
  40b838:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  40b83c:	mov	x1, x0
  40b840:	add	x0, sp, #0x38
  40b844:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40b848:	mov	w1, #0x2                   	// #2
  40b84c:	add	x0, sp, #0x38
  40b850:	bl	430a20 <wcrtomb@plt+0x2be00>
  40b854:	ldr	x0, [sp, #56]
  40b858:	bl	403ff0 <strlen@plt>
  40b85c:	add	x0, x0, #0x15
  40b860:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40b864:	mov	x19, x0
  40b868:	ldr	x21, [sp, #56]
  40b86c:	add	x0, x0, #0x14
  40b870:	ldr	w2, [x20, #108]
  40b874:	ldur	q0, [x20, #88]
  40b878:	mov	x1, x21
  40b87c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40b880:	add	x20, x20, #0x7f0
  40b884:	str	w2, [x19, #16]
  40b888:	str	q0, [x19]
  40b88c:	bl	404910 <strcpy@plt>
  40b890:	mov	x0, x21
  40b894:	bl	4047b0 <free@plt>
  40b898:	ldr	x0, [x20, #8]
  40b89c:	cbz	x0, 40b8d0 <wcrtomb@plt+0x6cb0>
  40b8a0:	mov	x1, x19
  40b8a4:	bl	445410 <argp_parse@@Base+0x5630>
  40b8a8:	cbz	x0, 40b8f4 <wcrtomb@plt+0x6cd4>
  40b8ac:	cmp	x19, x0
  40b8b0:	b.ne	40b8f8 <wcrtomb@plt+0x6cd8>  // b.any
  40b8b4:	ldr	w0, [x19, #16]
  40b8b8:	ldr	x21, [sp, #32]
  40b8bc:	sub	w0, w0, #0x1
  40b8c0:	str	w0, [x19, #16]
  40b8c4:	ldp	x19, x20, [sp, #16]
  40b8c8:	ldp	x29, x30, [sp], #64
  40b8cc:	ret
  40b8d0:	adrp	x3, 40b000 <wcrtomb@plt+0x63e0>
  40b8d4:	adrp	x2, 40b000 <wcrtomb@plt+0x63e0>
  40b8d8:	add	x3, x3, #0x700
  40b8dc:	add	x2, x2, #0x6e8
  40b8e0:	mov	x4, #0x0                   	// #0
  40b8e4:	mov	x1, #0x0                   	// #0
  40b8e8:	bl	444c38 <argp_parse@@Base+0x4e58>
  40b8ec:	str	x0, [x20, #8]
  40b8f0:	cbnz	x0, 40b8a0 <wcrtomb@plt+0x6c80>
  40b8f4:	bl	4104a0 <wcrtomb@plt+0xb880>
  40b8f8:	bl	404650 <abort@plt>
  40b8fc:	nop
  40b900:	sub	sp, sp, #0x230
  40b904:	stp	x29, x30, [sp]
  40b908:	mov	x29, sp
  40b90c:	stp	x21, x22, [sp, #32]
  40b910:	add	x21, x1, #0x158
  40b914:	and	w22, w0, #0xff
  40b918:	mov	x0, x21
  40b91c:	stp	x19, x20, [sp, #16]
  40b920:	mov	x19, x2
  40b924:	mov	x20, x1
  40b928:	bl	417670 <wcrtomb@plt+0x12a50>
  40b92c:	mov	x1, x19
  40b930:	add	x0, sp, #0x30
  40b934:	mov	x2, #0x200                 	// #512
  40b938:	bl	403f70 <memcpy@plt>
  40b93c:	cbz	w22, 40b994 <wcrtomb@plt+0x6d74>
  40b940:	bl	416840 <wcrtomb@plt+0x11c20>
  40b944:	mov	x19, x0
  40b948:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b94c:	mov	w0, #0x67                  	// #103
  40b950:	ldr	x2, [x1, #840]
  40b954:	mov	x3, x21
  40b958:	mov	x1, x19
  40b95c:	bl	4168f0 <wcrtomb@plt+0x11cd0>
  40b960:	mov	x0, x19
  40b964:	bl	4047b0 <free@plt>
  40b968:	bl	406550 <wcrtomb@plt+0x1930>
  40b96c:	mov	x19, x0
  40b970:	add	x1, sp, #0x30
  40b974:	mov	x2, #0x200                 	// #512
  40b978:	bl	403f70 <memcpy@plt>
  40b97c:	mov	x0, x19
  40b980:	ldp	x29, x30, [sp]
  40b984:	ldp	x19, x20, [sp, #16]
  40b988:	ldp	x21, x22, [sp, #32]
  40b98c:	add	sp, sp, #0x230
  40b990:	ret
  40b994:	mov	x0, x20
  40b998:	bl	4167e0 <wcrtomb@plt+0x11bc0>
  40b99c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b9a0:	mov	x19, x0
  40b9a4:	ldr	w0, [x1, #184]
  40b9a8:	cbz	w0, 40b9bc <wcrtomb@plt+0x6d9c>
  40b9ac:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40b9b0:	mov	w0, #0x78                  	// #120
  40b9b4:	ldr	x2, [x1, #920]
  40b9b8:	b	40b954 <wcrtomb@plt+0x6d34>
  40b9bc:	mov	w0, #0x78                  	// #120
  40b9c0:	ldr	x2, [x20, #176]
  40b9c4:	b	40b954 <wcrtomb@plt+0x6d34>
  40b9c8:	stp	x29, x30, [sp, #-208]!
  40b9cc:	mov	x29, sp
  40b9d0:	stp	x19, x20, [sp, #16]
  40b9d4:	mov	x20, x6
  40b9d8:	stp	x21, x22, [sp, #32]
  40b9dc:	mov	x21, x5
  40b9e0:	stp	x23, x24, [sp, #48]
  40b9e4:	mov	x24, x3
  40b9e8:	mov	x23, x7
  40b9ec:	stp	x25, x26, [sp, #64]
  40b9f0:	mov	x25, x2
  40b9f4:	stp	x27, x28, [sp, #80]
  40b9f8:	mov	w28, w0
  40b9fc:	mov	x27, x4
  40ba00:	cbz	w1, 40bc5c <wcrtomb@plt+0x703c>
  40ba04:	sub	x26, x6, #0x1
  40ba08:	lsl	x0, x26, #3
  40ba0c:	cmp	x0, #0x3f
  40ba10:	b.ls	40bba8 <wcrtomb@plt+0x6f88>  // b.plast
  40ba14:	add	x1, sp, #0x70
  40ba18:	mov	x0, #0xffffffffffffffff    	// #-1
  40ba1c:	bl	446868 <argp_parse@@Base+0x6a88>
  40ba20:	mov	x22, x0
  40ba24:	mov	x19, #0xffffffffffffffff    	// #-1
  40ba28:	mov	x26, #0x8000000000000000    	// #-9223372036854775808
  40ba2c:	mov	x0, x26
  40ba30:	add	x1, sp, #0xa1
  40ba34:	bl	446868 <argp_parse@@Base+0x6a88>
  40ba38:	sub	x26, x0, #0x1
  40ba3c:	mov	w1, #0x2d                  	// #45
  40ba40:	sturb	w1, [x0, #-1]
  40ba44:	cbz	w28, 40bbd8 <wcrtomb@plt+0x6fb8>
  40ba48:	neg	x0, x25
  40ba4c:	add	x1, sp, #0x89
  40ba50:	bl	446868 <argp_parse@@Base+0x6a88>
  40ba54:	sub	x25, x0, #0x1
  40ba58:	mov	w1, #0x2d                  	// #45
  40ba5c:	sturb	w1, [x0, #-1]
  40ba60:	cbz	x27, 40bbec <wcrtomb@plt+0x6fcc>
  40ba64:	adrp	x28, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ba68:	add	x0, sp, #0x6c
  40ba6c:	blr	x27
  40ba70:	and	x19, x0, x19
  40ba74:	ldr	w3, [x28, #944]
  40ba78:	add	x1, sp, #0xb9
  40ba7c:	ldr	w2, [sp, #108]
  40ba80:	cmp	w3, #0x6
  40ba84:	cset	w0, eq  // eq = none
  40ba88:	ands	w0, w0, w2
  40ba8c:	str	w0, [sp, #108]
  40ba90:	cneg	x19, x19, ne  // ne = any
  40ba94:	mov	x0, x19
  40ba98:	bl	446868 <argp_parse@@Base+0x6a88>
  40ba9c:	mov	x27, x0
  40baa0:	ldr	w1, [sp, #108]
  40baa4:	cbz	w1, 40bab4 <wcrtomb@plt+0x6e94>
  40baa8:	mov	w0, #0x2d                  	// #45
  40baac:	sub	x27, x27, #0x1
  40bab0:	strb	w0, [x27]
  40bab4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40bab8:	ldr	x0, [x0, #1136]
  40babc:	cbz	x0, 40bac4 <wcrtomb@plt+0x6ea4>
  40bac0:	blr	x0
  40bac4:	mov	w2, #0x5                   	// #5
  40bac8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40bacc:	mov	x0, #0x0                   	// #0
  40bad0:	add	x1, x1, #0x608
  40bad4:	bl	4049c0 <dcgettext@plt>
  40bad8:	mov	x2, x0
  40badc:	mov	w1, #0x0                   	// #0
  40bae0:	mov	w0, #0x0                   	// #0
  40bae4:	mov	x7, x27
  40bae8:	mov	x6, x22
  40baec:	mov	x5, x26
  40baf0:	mov	x4, x23
  40baf4:	mov	x3, x25
  40baf8:	bl	404050 <error@plt>
  40bafc:	ldr	w0, [sp, #108]
  40bb00:	ldr	w1, [x28, #944]
  40bb04:	and	w1, w1, #0xfffffffb
  40bb08:	cbnz	w0, 40bc8c <wcrtomb@plt+0x706c>
  40bb0c:	add	x2, x20, x20, lsl #1
  40bb10:	sub	x2, x2, #0x3
  40bb14:	cmp	x2, #0x3f
  40bb18:	b.hi	40bda0 <wcrtomb@plt+0x7180>  // b.pmore
  40bb1c:	add	w2, w20, w20, lsl #1
  40bb20:	mov	x3, #0x1                   	// #1
  40bb24:	sub	w2, w2, #0x3
  40bb28:	lsl	x2, x3, x2
  40bb2c:	sub	x2, x2, #0x1
  40bb30:	cmp	x19, x2
  40bb34:	b.ls	40bda0 <wcrtomb@plt+0x7180>  // b.plast
  40bb38:	cmp	w1, #0x2
  40bb3c:	b.ne	40bb64 <wcrtomb@plt+0x6f44>  // b.any
  40bb40:	sub	x22, x20, #0x1
  40bb44:	lsl	x2, x22, #3
  40bb48:	cmp	x2, #0x3f
  40bb4c:	b.hi	40bdf0 <wcrtomb@plt+0x71d0>  // b.pmore
  40bb50:	lsl	w2, w22, #3
  40bb54:	lsl	x3, x3, x2
  40bb58:	sub	x3, x3, #0x1
  40bb5c:	cmp	x19, x3
  40bb60:	b.ls	40bdf0 <wcrtomb@plt+0x71d0>  // b.plast
  40bb64:	cmp	w1, #0x2
  40bb68:	mov	x7, x23
  40bb6c:	mov	x6, x20
  40bb70:	mov	x5, x21
  40bb74:	mov	x3, x24
  40bb78:	mov	x2, x19
  40bb7c:	cset	w1, eq  // eq = none
  40bb80:	mov	x4, #0x0                   	// #0
  40bb84:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40bb88:	and	w0, w0, #0xff
  40bb8c:	ldp	x19, x20, [sp, #16]
  40bb90:	ldp	x21, x22, [sp, #32]
  40bb94:	ldp	x23, x24, [sp, #48]
  40bb98:	ldp	x25, x26, [sp, #64]
  40bb9c:	ldp	x27, x28, [sp, #80]
  40bba0:	ldp	x29, x30, [sp], #208
  40bba4:	ret
  40bba8:	lsl	w0, w26, #3
  40bbac:	mov	x26, #0x1                   	// #1
  40bbb0:	add	x1, sp, #0x70
  40bbb4:	lsl	x26, x26, x0
  40bbb8:	sub	x19, x26, #0x1
  40bbbc:	mov	x0, x19
  40bbc0:	bl	446868 <argp_parse@@Base+0x6a88>
  40bbc4:	cmn	x19, #0x1
  40bbc8:	mov	x22, x0
  40bbcc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  40bbd0:	csel	x26, x26, x0, ne  // ne = any
  40bbd4:	b	40ba2c <wcrtomb@plt+0x6e0c>
  40bbd8:	mov	x0, x25
  40bbdc:	add	x1, sp, #0x88
  40bbe0:	bl	446868 <argp_parse@@Base+0x6a88>
  40bbe4:	mov	x25, x0
  40bbe8:	cbnz	x27, 40ba64 <wcrtomb@plt+0x6e44>
  40bbec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40bbf0:	ldr	x0, [x0, #1136]
  40bbf4:	cbz	x0, 40bbfc <wcrtomb@plt+0x6fdc>
  40bbf8:	blr	x0
  40bbfc:	mov	w2, #0x5                   	// #5
  40bc00:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40bc04:	mov	x0, #0x0                   	// #0
  40bc08:	add	x1, x1, #0x668
  40bc0c:	bl	4049c0 <dcgettext@plt>
  40bc10:	mov	x2, x0
  40bc14:	mov	x6, x22
  40bc18:	mov	x5, x26
  40bc1c:	mov	x4, x23
  40bc20:	mov	x3, x25
  40bc24:	mov	w1, #0x0                   	// #0
  40bc28:	mov	w0, #0x0                   	// #0
  40bc2c:	bl	404050 <error@plt>
  40bc30:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40bc34:	mov	w2, #0x2                   	// #2
  40bc38:	mov	w0, #0x0                   	// #0
  40bc3c:	str	w2, [x1, #3568]
  40bc40:	ldp	x19, x20, [sp, #16]
  40bc44:	ldp	x21, x22, [sp, #32]
  40bc48:	ldp	x23, x24, [sp, #48]
  40bc4c:	ldp	x25, x26, [sp, #64]
  40bc50:	ldp	x27, x28, [sp, #80]
  40bc54:	ldp	x29, x30, [sp], #208
  40bc58:	ret
  40bc5c:	add	x0, x6, x6, lsl #1
  40bc60:	sub	x0, x0, #0x3
  40bc64:	cmp	x0, #0x3f
  40bc68:	b.ls	40bd70 <wcrtomb@plt+0x7150>  // b.plast
  40bc6c:	add	x1, sp, #0x70
  40bc70:	mov	x0, #0xffffffffffffffff    	// #-1
  40bc74:	adrp	x26, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  40bc78:	bl	446868 <argp_parse@@Base+0x6a88>
  40bc7c:	add	x26, x26, #0x3f8
  40bc80:	mov	x22, x0
  40bc84:	mov	x19, #0xffffffffffffffff    	// #-1
  40bc88:	b	40ba44 <wcrtomb@plt+0x6e24>
  40bc8c:	cmp	w1, #0x2
  40bc90:	b.ne	40bb64 <wcrtomb@plt+0x6f44>  // b.any
  40bc94:	sub	x22, x20, #0x1
  40bc98:	lsl	x2, x22, #3
  40bc9c:	cmp	x2, #0x3f
  40bca0:	b.hi	40bdc8 <wcrtomb@plt+0x71a8>  // b.pmore
  40bca4:	lsl	w2, w22, #3
  40bca8:	mov	x4, #0x1                   	// #1
  40bcac:	mvn	x3, x19
  40bcb0:	lsl	x2, x4, x2
  40bcb4:	sub	x2, x2, #0x1
  40bcb8:	cmp	x3, x2
  40bcbc:	b.ls	40bdc8 <wcrtomb@plt+0x71a8>  // b.plast
  40bcc0:	add	x2, x20, x20, lsl #1
  40bcc4:	lsl	x25, x24, #3
  40bcc8:	sub	x2, x2, #0x3
  40bccc:	cmp	x2, x24, lsl #3
  40bcd0:	b.cc	40bb64 <wcrtomb@plt+0x6f44>  // b.lo, b.ul, b.last
  40bcd4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40bcd8:	add	x0, x0, #0x7f0
  40bcdc:	ldr	w1, [x0, #16]
  40bce0:	cbnz	w1, 40bd1c <wcrtomb@plt+0x70fc>
  40bce4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40bce8:	str	w4, [x0, #16]
  40bcec:	ldr	x1, [x1, #1136]
  40bcf0:	cbz	x1, 40bcf8 <wcrtomb@plt+0x70d8>
  40bcf4:	blr	x1
  40bcf8:	mov	w2, #0x5                   	// #5
  40bcfc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40bd00:	mov	x0, #0x0                   	// #0
  40bd04:	add	x1, x1, #0x640
  40bd08:	bl	4049c0 <dcgettext@plt>
  40bd0c:	mov	x2, x0
  40bd10:	mov	w1, #0x0                   	// #0
  40bd14:	mov	w0, #0x0                   	// #0
  40bd18:	bl	404050 <error@plt>
  40bd1c:	lsl	w24, w24, #3
  40bd20:	mov	x0, #0xffffffffffffffff    	// #-1
  40bd24:	cmp	x25, #0x40
  40bd28:	strb	wzr, [x21, x22]
  40bd2c:	lsl	x0, x0, x24
  40bd30:	bic	x0, x19, x0
  40bd34:	csel	x19, x0, x19, ne  // ne = any
  40bd38:	sub	x22, x22, #0x1
  40bd3c:	and	w0, w19, #0x7
  40bd40:	add	w0, w0, #0x30
  40bd44:	lsr	x19, x19, #3
  40bd48:	strb	w0, [x21, x22]
  40bd4c:	cbnz	x22, 40bd38 <wcrtomb@plt+0x7118>
  40bd50:	mov	w0, #0x1                   	// #1
  40bd54:	ldp	x19, x20, [sp, #16]
  40bd58:	ldp	x21, x22, [sp, #32]
  40bd5c:	ldp	x23, x24, [sp, #48]
  40bd60:	ldp	x25, x26, [sp, #64]
  40bd64:	ldp	x27, x28, [sp, #80]
  40bd68:	ldp	x29, x30, [sp], #208
  40bd6c:	ret
  40bd70:	add	w0, w6, w6, lsl #1
  40bd74:	mov	x19, #0x1                   	// #1
  40bd78:	sub	w0, w0, #0x3
  40bd7c:	add	x1, sp, #0x70
  40bd80:	adrp	x26, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  40bd84:	add	x26, x26, #0x3f8
  40bd88:	lsl	x19, x19, x0
  40bd8c:	sub	x19, x19, #0x1
  40bd90:	mov	x0, x19
  40bd94:	bl	446868 <argp_parse@@Base+0x6a88>
  40bd98:	mov	x22, x0
  40bd9c:	b	40ba44 <wcrtomb@plt+0x6e24>
  40bda0:	sub	x20, x20, #0x1
  40bda4:	strb	wzr, [x21, x20]
  40bda8:	sub	x20, x20, #0x1
  40bdac:	and	w0, w19, #0x7
  40bdb0:	add	w0, w0, #0x30
  40bdb4:	lsr	x19, x19, #3
  40bdb8:	strb	w0, [x21, x20]
  40bdbc:	cbnz	x20, 40bda8 <wcrtomb@plt+0x7188>
  40bdc0:	mov	w0, #0x1                   	// #1
  40bdc4:	b	40bd54 <wcrtomb@plt+0x7134>
  40bdc8:	mov	w1, #0xff                  	// #255
  40bdcc:	neg	w0, w0
  40bdd0:	strb	w1, [x21], #1
  40bdd4:	lsl	x0, x0, #56
  40bdd8:	sub	x22, x22, #0x1
  40bddc:	strb	w19, [x21, x22]
  40bde0:	orr	x19, x0, x19, lsr #8
  40bde4:	cbnz	x22, 40bdd8 <wcrtomb@plt+0x71b8>
  40bde8:	mov	w0, #0x1                   	// #1
  40bdec:	b	40bd54 <wcrtomb@plt+0x7134>
  40bdf0:	mov	w1, #0x80                  	// #128
  40bdf4:	b	40bdcc <wcrtomb@plt+0x71ac>
  40bdf8:	adrp	x7, 497000 <argp_program_version_hook@@Base+0x1e0>
  40bdfc:	add	x8, x4, x4, lsl #1
  40be00:	sub	x8, x8, #0x3
  40be04:	mov	x6, x4
  40be08:	ldr	w10, [x7, #944]
  40be0c:	mov	x9, x3
  40be10:	mov	x4, x2
  40be14:	mov	x3, x1
  40be18:	mov	x7, x5
  40be1c:	cmp	x8, #0x3f
  40be20:	and	w10, w10, #0xfffffffb
  40be24:	b.ls	40be50 <wcrtomb@plt+0x7230>  // b.plast
  40be28:	sub	x6, x6, #0x1
  40be2c:	strb	wzr, [x9, x6]
  40be30:	sub	x6, x6, #0x1
  40be34:	and	w1, w0, #0x7
  40be38:	add	w1, w1, #0x30
  40be3c:	lsr	x0, x0, #3
  40be40:	strb	w1, [x9, x6]
  40be44:	cbnz	x6, 40be30 <wcrtomb@plt+0x7210>
  40be48:	mov	w0, #0x1                   	// #1
  40be4c:	ret
  40be50:	add	w1, w6, w6, lsl #1
  40be54:	mov	x2, #0x1                   	// #1
  40be58:	sub	w1, w1, #0x3
  40be5c:	lsl	x1, x2, x1
  40be60:	sub	x1, x1, #0x1
  40be64:	cmp	x1, x0
  40be68:	b.cs	40be28 <wcrtomb@plt+0x7208>  // b.hs, b.nlast
  40be6c:	cmp	w10, #0x2
  40be70:	b.ne	40bee0 <wcrtomb@plt+0x72c0>  // b.any
  40be74:	sub	x8, x6, #0x1
  40be78:	lsl	x1, x8, #3
  40be7c:	cmp	x1, #0x3f
  40be80:	b.ls	40beb4 <wcrtomb@plt+0x7294>  // b.plast
  40be84:	mov	w1, #0xffffff80            	// #-128
  40be88:	strb	w1, [x9], #1
  40be8c:	nop
  40be90:	sub	x8, x8, #0x1
  40be94:	strb	w0, [x9, x8]
  40be98:	lsr	x0, x0, #8
  40be9c:	cbz	x8, 40be48 <wcrtomb@plt+0x7228>
  40bea0:	sub	x8, x8, #0x1
  40bea4:	strb	w0, [x9, x8]
  40bea8:	lsr	x0, x0, #8
  40beac:	cbnz	x8, 40be90 <wcrtomb@plt+0x7270>
  40beb0:	b	40be48 <wcrtomb@plt+0x7228>
  40beb4:	lsl	w1, w8, #3
  40beb8:	lsl	x2, x2, x1
  40bebc:	sub	x2, x2, #0x1
  40bec0:	cmp	x0, x2
  40bec4:	b.ls	40be84 <wcrtomb@plt+0x7264>  // b.plast
  40bec8:	cmp	w10, #0x2
  40becc:	mov	x2, x0
  40bed0:	mov	x5, x9
  40bed4:	cset	w1, eq  // eq = none
  40bed8:	mov	w0, #0x0                   	// #0
  40bedc:	b	40b9c8 <wcrtomb@plt+0x6da8>
  40bee0:	cmp	w10, #0x2
  40bee4:	mov	x2, x0
  40bee8:	mov	x5, x9
  40beec:	cset	w1, eq  // eq = none
  40bef0:	mov	x4, #0x0                   	// #0
  40bef4:	mov	w0, #0x0                   	// #0
  40bef8:	b	40b9c8 <wcrtomb@plt+0x6da8>
  40befc:	nop
  40bf00:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  40bf04:	mov	x5, x2
  40bf08:	mov	x7, x3
  40bf0c:	ldr	w4, [x4, #944]
  40bf10:	and	w4, w4, #0xfffffffb
  40bf14:	cbnz	w0, 40bf94 <wcrtomb@plt+0x7374>
  40bf18:	mov	x2, #0x1ffffffff           	// #8589934591
  40bf1c:	cmp	x1, x2
  40bf20:	b.ls	40bfb8 <wcrtomb@plt+0x7398>  // b.plast
  40bf24:	cmp	w4, #0x2
  40bf28:	mov	w2, #0x80                  	// #128
  40bf2c:	b.ne	40bfa0 <wcrtomb@plt+0x7380>  // b.any
  40bf30:	neg	w0, w0
  40bf34:	strb	w1, [x5, #11]
  40bf38:	strb	w2, [x5]
  40bf3c:	extr	x1, x0, x1, #8
  40bf40:	strb	w1, [x5, #10]
  40bf44:	extr	x1, x0, x1, #8
  40bf48:	strb	w1, [x5, #9]
  40bf4c:	extr	x1, x0, x1, #8
  40bf50:	strb	w1, [x5, #8]
  40bf54:	extr	x1, x0, x1, #8
  40bf58:	strb	w1, [x5, #7]
  40bf5c:	extr	x1, x0, x1, #8
  40bf60:	strb	w1, [x5, #6]
  40bf64:	extr	x1, x0, x1, #8
  40bf68:	strb	w1, [x5, #5]
  40bf6c:	extr	x1, x0, x1, #8
  40bf70:	strb	w1, [x5, #4]
  40bf74:	extr	x1, x0, x1, #8
  40bf78:	strb	w1, [x5, #3]
  40bf7c:	extr	x1, x0, x1, #8
  40bf80:	strb	w1, [x5, #2]
  40bf84:	extr	x0, x0, x1, #8
  40bf88:	strb	w0, [x5, #1]
  40bf8c:	mov	w0, #0x1                   	// #1
  40bf90:	ret
  40bf94:	cmp	w4, #0x2
  40bf98:	mov	w2, #0xff                  	// #255
  40bf9c:	b.eq	40bf30 <wcrtomb@plt+0x7310>  // b.none
  40bfa0:	mov	x2, x1
  40bfa4:	mov	x6, #0xc                   	// #12
  40bfa8:	mov	x4, #0x0                   	// #0
  40bfac:	mov	x3, #0x8                   	// #8
  40bfb0:	mov	w1, #0x0                   	// #0
  40bfb4:	b	40b9c8 <wcrtomb@plt+0x6da8>
  40bfb8:	and	w0, w1, #0x7
  40bfbc:	ubfx	w2, w1, #3, #3
  40bfc0:	ubfx	w3, w1, #6, #3
  40bfc4:	ubfx	w4, w1, #9, #3
  40bfc8:	ubfx	w6, w1, #12, #3
  40bfcc:	ubfx	w7, w1, #15, #3
  40bfd0:	ubfx	w8, w1, #18, #3
  40bfd4:	ubfx	w9, w1, #21, #3
  40bfd8:	ubfx	w10, w1, #24, #3
  40bfdc:	ubfx	w11, w1, #27, #3
  40bfe0:	add	w0, w0, #0x30
  40bfe4:	lsr	x1, x1, #30
  40bfe8:	add	w2, w2, #0x30
  40bfec:	add	w3, w3, #0x30
  40bff0:	add	w4, w4, #0x30
  40bff4:	add	w6, w6, #0x30
  40bff8:	add	w7, w7, #0x30
  40bffc:	add	w8, w8, #0x30
  40c000:	add	w9, w9, #0x30
  40c004:	add	w10, w10, #0x30
  40c008:	add	w11, w11, #0x30
  40c00c:	add	w1, w1, #0x30
  40c010:	strb	w1, [x5]
  40c014:	strb	w11, [x5, #1]
  40c018:	strb	w10, [x5, #2]
  40c01c:	strb	w9, [x5, #3]
  40c020:	strb	w8, [x5, #4]
  40c024:	strb	w7, [x5, #5]
  40c028:	strb	w6, [x5, #6]
  40c02c:	strb	w4, [x5, #7]
  40c030:	strb	w3, [x5, #8]
  40c034:	strb	w2, [x5, #9]
  40c038:	strb	w0, [x5, #10]
  40c03c:	mov	w0, #0x1                   	// #1
  40c040:	strb	wzr, [x5, #11]
  40c044:	ret
  40c048:	stp	x29, x30, [sp, #-64]!
  40c04c:	mov	x29, sp
  40c050:	stp	x19, x20, [sp, #16]
  40c054:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40c058:	add	x20, x20, #0x7f0
  40c05c:	stp	x21, x22, [sp, #32]
  40c060:	mov	x22, x2
  40c064:	mov	x21, x0
  40c068:	mov	x0, #0x28                  	// #40
  40c06c:	str	x23, [sp, #48]
  40c070:	mov	w23, w1
  40c074:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40c078:	ldr	x1, [x20, #24]
  40c07c:	mov	x19, x0
  40c080:	mov	x0, x21
  40c084:	str	x21, [x19]
  40c088:	str	w23, [x19, #16]
  40c08c:	stp	x22, x1, [x19, #24]
  40c090:	bl	403ff0 <strlen@plt>
  40c094:	str	x0, [x19, #8]
  40c098:	str	x19, [x20, #24]
  40c09c:	ldp	x19, x20, [sp, #16]
  40c0a0:	ldp	x21, x22, [sp, #32]
  40c0a4:	ldr	x23, [sp, #48]
  40c0a8:	ldp	x29, x30, [sp], #64
  40c0ac:	ret
  40c0b0:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c0b4:	ldr	w3, [x3, #772]
  40c0b8:	cbnz	w3, 40c0c0 <wcrtomb@plt+0x74a0>
  40c0bc:	ret
  40c0c0:	stp	x29, x30, [sp, #-48]!
  40c0c4:	mov	x29, sp
  40c0c8:	stp	x21, x22, [sp, #32]
  40c0cc:	mov	x21, x0
  40c0d0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40c0d4:	ldr	w0, [x0, #432]
  40c0d8:	tbz	w0, #2, 40c150 <wcrtomb@plt+0x7530>
  40c0dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c0e0:	stp	x19, x20, [sp, #16]
  40c0e4:	mov	x20, x1
  40c0e8:	ldr	x0, [x0, #1136]
  40c0ec:	mov	x19, x2
  40c0f0:	cbz	x0, 40c0f8 <wcrtomb@plt+0x74d8>
  40c0f4:	blr	x0
  40c0f8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c0fc:	add	x1, x1, #0x688
  40c100:	mov	w2, #0x5                   	// #5
  40c104:	mov	x0, #0x0                   	// #0
  40c108:	bl	4049c0 <dcgettext@plt>
  40c10c:	mov	x22, x0
  40c110:	mov	x0, x21
  40c114:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40c118:	mov	x1, x20
  40c11c:	mov	x21, x0
  40c120:	mov	w0, #0x1                   	// #1
  40c124:	bl	44d5d0 <argp_parse@@Base+0xd7f0>
  40c128:	mov	x5, x19
  40c12c:	mov	x3, x21
  40c130:	mov	x2, x22
  40c134:	mov	x4, x0
  40c138:	ldp	x19, x20, [sp, #16]
  40c13c:	mov	w1, #0x0                   	// #0
  40c140:	ldp	x21, x22, [sp, #32]
  40c144:	mov	w0, #0x0                   	// #0
  40c148:	ldp	x29, x30, [sp], #48
  40c14c:	b	404050 <error@plt>
  40c150:	ldp	x21, x22, [sp, #32]
  40c154:	ldp	x29, x30, [sp], #48
  40c158:	ret
  40c15c:	nop
  40c160:	stp	x29, x30, [sp, #-64]!
  40c164:	mov	x2, #0x2b                  	// #43
  40c168:	mov	x29, sp
  40c16c:	add	x1, sp, #0x10
  40c170:	bl	404950 <read@plt>
  40c174:	cmp	x0, #0x2b
  40c178:	b.eq	40c188 <wcrtomb@plt+0x7568>  // b.none
  40c17c:	mov	w0, #0x0                   	// #0
  40c180:	ldp	x29, x30, [sp], #64
  40c184:	ret
  40c188:	mov	x2, x0
  40c18c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c190:	add	x0, sp, #0x10
  40c194:	add	x1, x1, #0x6b8
  40c198:	bl	4046d0 <memcmp@plt>
  40c19c:	cmp	w0, #0x0
  40c1a0:	cset	w0, eq  // eq = none
  40c1a4:	ldp	x29, x30, [sp], #64
  40c1a8:	ret
  40c1ac:	nop
  40c1b0:	stp	x29, x30, [sp, #-48]!
  40c1b4:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c1b8:	mov	x3, x0
  40c1bc:	mov	x29, sp
  40c1c0:	ldr	w4, [x4, #944]
  40c1c4:	mov	x6, x2
  40c1c8:	stp	x19, x20, [sp, #16]
  40c1cc:	mov	x5, x1
  40c1d0:	lsr	x0, x0, #63
  40c1d4:	mov	x19, x3
  40c1d8:	and	w2, w4, #0xfffffffb
  40c1dc:	tbnz	x3, #63, 40c2d8 <wcrtomb@plt+0x76b8>
  40c1e0:	add	x4, x6, x6, lsl #1
  40c1e4:	sub	x4, x4, #0x3
  40c1e8:	cmp	x4, #0x3f
  40c1ec:	b.hi	40c350 <wcrtomb@plt+0x7730>  // b.pmore
  40c1f0:	add	w1, w6, w6, lsl #1
  40c1f4:	mov	x4, #0x1                   	// #1
  40c1f8:	sub	w1, w1, #0x3
  40c1fc:	lsl	x1, x4, x1
  40c200:	sub	x1, x1, #0x1
  40c204:	cmp	x3, x1
  40c208:	b.ls	40c350 <wcrtomb@plt+0x7730>  // b.plast
  40c20c:	cmp	w2, #0x2
  40c210:	mov	x1, x3
  40c214:	b.ne	40c2e4 <wcrtomb@plt+0x76c4>  // b.any
  40c218:	sub	x20, x6, #0x1
  40c21c:	lsl	x4, x20, #3
  40c220:	cmp	x4, #0x3f
  40c224:	b.hi	40c30c <wcrtomb@plt+0x76ec>  // b.pmore
  40c228:	lsl	w4, w20, #3
  40c22c:	mov	x7, #0x1                   	// #1
  40c230:	lsl	x4, x7, x4
  40c234:	sub	x4, x4, #0x1
  40c238:	cmp	x4, x1
  40c23c:	b.cs	40c30c <wcrtomb@plt+0x76ec>  // b.hs, b.nlast
  40c240:	tbz	x3, #63, 40c2e4 <wcrtomb@plt+0x76c4>
  40c244:	add	x1, x6, x6, lsl #1
  40c248:	sub	x1, x1, #0x3
  40c24c:	cmp	x1, #0x3f
  40c250:	b.ls	40c2e4 <wcrtomb@plt+0x76c4>  // b.plast
  40c254:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40c258:	add	x0, x0, #0x7f0
  40c25c:	ldr	w1, [x0, #16]
  40c260:	cbnz	w1, 40c2ac <wcrtomb@plt+0x768c>
  40c264:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c268:	str	w7, [x0, #16]
  40c26c:	ldr	x0, [x1, #1136]
  40c270:	cbz	x0, 40c280 <wcrtomb@plt+0x7660>
  40c274:	str	x5, [sp, #40]
  40c278:	blr	x0
  40c27c:	ldr	x5, [sp, #40]
  40c280:	mov	w2, #0x5                   	// #5
  40c284:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c288:	mov	x0, #0x0                   	// #0
  40c28c:	add	x1, x1, #0x640
  40c290:	str	x5, [sp, #40]
  40c294:	bl	4049c0 <dcgettext@plt>
  40c298:	mov	x2, x0
  40c29c:	mov	w1, #0x0                   	// #0
  40c2a0:	mov	w0, #0x0                   	// #0
  40c2a4:	bl	404050 <error@plt>
  40c2a8:	ldr	x5, [sp, #40]
  40c2ac:	strb	wzr, [x5, x20]
  40c2b0:	sub	x20, x20, #0x1
  40c2b4:	and	w0, w19, #0x7
  40c2b8:	add	w0, w0, #0x30
  40c2bc:	lsr	x19, x19, #3
  40c2c0:	strb	w0, [x5, x20]
  40c2c4:	cbnz	x20, 40c2b0 <wcrtomb@plt+0x7690>
  40c2c8:	mov	w0, #0x1                   	// #1
  40c2cc:	ldp	x19, x20, [sp, #16]
  40c2d0:	ldp	x29, x30, [sp], #48
  40c2d4:	ret
  40c2d8:	cmp	w2, #0x2
  40c2dc:	mvn	x1, x3
  40c2e0:	b.eq	40c218 <wcrtomb@plt+0x75f8>  // b.none
  40c2e4:	ldp	x19, x20, [sp, #16]
  40c2e8:	cmp	w2, #0x2
  40c2ec:	ldp	x29, x30, [sp], #48
  40c2f0:	mov	x2, x3
  40c2f4:	cset	w1, eq  // eq = none
  40c2f8:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c2fc:	mov	x4, #0x0                   	// #0
  40c300:	add	x7, x7, #0x6e8
  40c304:	mov	x3, #0x8                   	// #8
  40c308:	b	40b9c8 <wcrtomb@plt+0x6da8>
  40c30c:	mov	x1, x5
  40c310:	neg	x0, x0
  40c314:	cmp	x3, #0x0
  40c318:	mov	w2, #0x80                  	// #128
  40c31c:	lsl	x0, x0, #56
  40c320:	mov	w3, #0xff                  	// #255
  40c324:	csel	w2, w2, w3, ge  // ge = tcont
  40c328:	strb	w2, [x1], #1
  40c32c:	nop
  40c330:	sub	x20, x20, #0x1
  40c334:	strb	w19, [x1, x20]
  40c338:	orr	x19, x0, x19, lsr #8
  40c33c:	cbnz	x20, 40c330 <wcrtomb@plt+0x7710>
  40c340:	mov	w0, #0x1                   	// #1
  40c344:	ldp	x19, x20, [sp, #16]
  40c348:	ldp	x29, x30, [sp], #48
  40c34c:	ret
  40c350:	sub	x2, x6, #0x1
  40c354:	strb	wzr, [x5, x2]
  40c358:	sub	x2, x2, #0x1
  40c35c:	and	w0, w19, #0x7
  40c360:	add	w0, w0, #0x30
  40c364:	lsr	x19, x19, #3
  40c368:	strb	w0, [x5, x2]
  40c36c:	cbnz	x2, 40c358 <wcrtomb@plt+0x7738>
  40c370:	mov	w0, #0x1                   	// #1
  40c374:	ldp	x19, x20, [sp, #16]
  40c378:	ldp	x29, x30, [sp], #48
  40c37c:	ret
  40c380:	stp	x29, x30, [sp, #-48]!
  40c384:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c388:	mov	x3, x0
  40c38c:	mov	x29, sp
  40c390:	ldr	w4, [x4, #944]
  40c394:	mov	x6, x2
  40c398:	stp	x19, x20, [sp, #16]
  40c39c:	mov	x5, x1
  40c3a0:	lsr	x0, x0, #63
  40c3a4:	mov	x19, x3
  40c3a8:	and	w2, w4, #0xfffffffb
  40c3ac:	tbnz	x3, #63, 40c4a8 <wcrtomb@plt+0x7888>
  40c3b0:	add	x4, x6, x6, lsl #1
  40c3b4:	sub	x4, x4, #0x3
  40c3b8:	cmp	x4, #0x3f
  40c3bc:	b.hi	40c520 <wcrtomb@plt+0x7900>  // b.pmore
  40c3c0:	add	w1, w6, w6, lsl #1
  40c3c4:	mov	x4, #0x1                   	// #1
  40c3c8:	sub	w1, w1, #0x3
  40c3cc:	lsl	x1, x4, x1
  40c3d0:	sub	x1, x1, #0x1
  40c3d4:	cmp	x3, x1
  40c3d8:	b.ls	40c520 <wcrtomb@plt+0x7900>  // b.plast
  40c3dc:	cmp	w2, #0x2
  40c3e0:	mov	x1, x3
  40c3e4:	b.ne	40c4b4 <wcrtomb@plt+0x7894>  // b.any
  40c3e8:	sub	x20, x6, #0x1
  40c3ec:	lsl	x4, x20, #3
  40c3f0:	cmp	x4, #0x3f
  40c3f4:	b.hi	40c4dc <wcrtomb@plt+0x78bc>  // b.pmore
  40c3f8:	lsl	w4, w20, #3
  40c3fc:	mov	x7, #0x1                   	// #1
  40c400:	lsl	x4, x7, x4
  40c404:	sub	x4, x4, #0x1
  40c408:	cmp	x4, x1
  40c40c:	b.cs	40c4dc <wcrtomb@plt+0x78bc>  // b.hs, b.nlast
  40c410:	tbz	x3, #63, 40c4b4 <wcrtomb@plt+0x7894>
  40c414:	add	x1, x6, x6, lsl #1
  40c418:	sub	x1, x1, #0x3
  40c41c:	cmp	x1, #0x3f
  40c420:	b.ls	40c4b4 <wcrtomb@plt+0x7894>  // b.plast
  40c424:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40c428:	add	x0, x0, #0x7f0
  40c42c:	ldr	w1, [x0, #16]
  40c430:	cbnz	w1, 40c47c <wcrtomb@plt+0x785c>
  40c434:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c438:	str	w7, [x0, #16]
  40c43c:	ldr	x0, [x1, #1136]
  40c440:	cbz	x0, 40c450 <wcrtomb@plt+0x7830>
  40c444:	str	x5, [sp, #40]
  40c448:	blr	x0
  40c44c:	ldr	x5, [sp, #40]
  40c450:	mov	w2, #0x5                   	// #5
  40c454:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c458:	mov	x0, #0x0                   	// #0
  40c45c:	add	x1, x1, #0x640
  40c460:	str	x5, [sp, #40]
  40c464:	bl	4049c0 <dcgettext@plt>
  40c468:	mov	x2, x0
  40c46c:	mov	w1, #0x0                   	// #0
  40c470:	mov	w0, #0x0                   	// #0
  40c474:	bl	404050 <error@plt>
  40c478:	ldr	x5, [sp, #40]
  40c47c:	strb	wzr, [x5, x20]
  40c480:	sub	x20, x20, #0x1
  40c484:	and	w0, w19, #0x7
  40c488:	add	w0, w0, #0x30
  40c48c:	lsr	x19, x19, #3
  40c490:	strb	w0, [x5, x20]
  40c494:	cbnz	x20, 40c480 <wcrtomb@plt+0x7860>
  40c498:	mov	w0, #0x1                   	// #1
  40c49c:	ldp	x19, x20, [sp, #16]
  40c4a0:	ldp	x29, x30, [sp], #48
  40c4a4:	ret
  40c4a8:	cmp	w2, #0x2
  40c4ac:	mvn	x1, x3
  40c4b0:	b.eq	40c3e8 <wcrtomb@plt+0x77c8>  // b.none
  40c4b4:	ldp	x19, x20, [sp, #16]
  40c4b8:	cmp	w2, #0x2
  40c4bc:	ldp	x29, x30, [sp], #48
  40c4c0:	mov	x2, x3
  40c4c4:	cset	w1, eq  // eq = none
  40c4c8:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c4cc:	mov	x4, #0x0                   	// #0
  40c4d0:	add	x7, x7, #0x6f0
  40c4d4:	mov	x3, #0x8                   	// #8
  40c4d8:	b	40b9c8 <wcrtomb@plt+0x6da8>
  40c4dc:	mov	x1, x5
  40c4e0:	neg	x0, x0
  40c4e4:	cmp	x3, #0x0
  40c4e8:	mov	w2, #0x80                  	// #128
  40c4ec:	lsl	x0, x0, #56
  40c4f0:	mov	w3, #0xff                  	// #255
  40c4f4:	csel	w2, w2, w3, ge  // ge = tcont
  40c4f8:	strb	w2, [x1], #1
  40c4fc:	nop
  40c500:	sub	x20, x20, #0x1
  40c504:	strb	w19, [x1, x20]
  40c508:	orr	x19, x0, x19, lsr #8
  40c50c:	cbnz	x20, 40c500 <wcrtomb@plt+0x78e0>
  40c510:	mov	w0, #0x1                   	// #1
  40c514:	ldp	x19, x20, [sp, #16]
  40c518:	ldp	x29, x30, [sp], #48
  40c51c:	ret
  40c520:	sub	x2, x6, #0x1
  40c524:	strb	wzr, [x5, x2]
  40c528:	sub	x2, x2, #0x1
  40c52c:	and	w0, w19, #0x7
  40c530:	add	w0, w0, #0x30
  40c534:	lsr	x19, x19, #3
  40c538:	strb	w0, [x5, x2]
  40c53c:	cbnz	x2, 40c528 <wcrtomb@plt+0x7908>
  40c540:	mov	w0, #0x1                   	// #1
  40c544:	ldp	x19, x20, [sp, #16]
  40c548:	ldp	x29, x30, [sp], #48
  40c54c:	ret
  40c550:	stp	x29, x30, [sp, #-32]!
  40c554:	mov	x29, sp
  40c558:	str	x19, [sp, #16]
  40c55c:	bl	406550 <wcrtomb@plt+0x1930>
  40c560:	mov	x2, #0x200                 	// #512
  40c564:	mov	w1, #0x0                   	// #0
  40c568:	mov	x19, x0
  40c56c:	bl	404410 <memset@plt>
  40c570:	mov	x0, x19
  40c574:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40c578:	bl	406550 <wcrtomb@plt+0x1930>
  40c57c:	mov	x19, x0
  40c580:	bl	406128 <wcrtomb@plt+0x1508>
  40c584:	mov	x2, x0
  40c588:	mov	w1, #0x0                   	// #0
  40c58c:	mov	x0, x19
  40c590:	bl	404410 <memset@plt>
  40c594:	mov	x0, x19
  40c598:	ldr	x19, [sp, #16]
  40c59c:	ldp	x29, x30, [sp], #32
  40c5a0:	b	4060e0 <wcrtomb@plt+0x14c0>
  40c5a4:	nop
  40c5a8:	stp	x29, x30, [sp, #-48]!
  40c5ac:	mov	x29, sp
  40c5b0:	stp	x19, x20, [sp, #16]
  40c5b4:	mov	x20, x0
  40c5b8:	stp	x21, x22, [sp, #32]
  40c5bc:	mov	x22, x1
  40c5c0:	mov	x21, x2
  40c5c4:	bl	406550 <wcrtomb@plt+0x1930>
  40c5c8:	mov	x19, x0
  40c5cc:	mov	x2, #0x200                 	// #512
  40c5d0:	mov	w1, #0x0                   	// #0
  40c5d4:	bl	404410 <memset@plt>
  40c5d8:	mov	x3, #0x0                   	// #0
  40c5dc:	nop
  40c5e0:	ldrb	w4, [x20, x3]
  40c5e4:	strb	w4, [x19, x3]
  40c5e8:	add	x3, x3, #0x1
  40c5ec:	cmp	x3, #0x64
  40c5f0:	cbz	w4, 40c5f8 <wcrtomb@plt+0x79d8>
  40c5f4:	b.ne	40c5e0 <wcrtomb@plt+0x79c0>  // b.any
  40c5f8:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c5fc:	ldr	w0, [x20, #944]
  40c600:	cmp	w0, #0x2
  40c604:	b.ne	40c60c <wcrtomb@plt+0x79ec>  // b.any
  40c608:	strb	wzr, [x19, #99]
  40c60c:	add	x2, x19, #0x7c
  40c610:	mov	x1, x22
  40c614:	lsr	x0, x22, #63
  40c618:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c61c:	add	x3, x3, #0x6e8
  40c620:	bl	40bf00 <wcrtomb@plt+0x72e0>
  40c624:	mov	x0, #0x0                   	// #0
  40c628:	tbnz	x21, #63, 40c638 <wcrtomb@plt+0x7a18>
  40c62c:	mov	x0, #0x1ffffffff           	// #8589934591
  40c630:	cmp	x21, x0
  40c634:	csel	x0, x21, x0, ls  // ls = plast
  40c638:	add	x3, x19, #0x88
  40c63c:	mov	x4, #0xc                   	// #12
  40c640:	mov	x2, #0x0                   	// #0
  40c644:	mov	x1, #0x8                   	// #8
  40c648:	adrp	x5, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c64c:	add	x5, x5, #0x6f0
  40c650:	bl	40bdf8 <wcrtomb@plt+0x71d8>
  40c654:	strb	wzr, [x19, #107]
  40c658:	ldr	w1, [x20, #944]
  40c65c:	mov	x2, #0x81a4                	// #33188
  40c660:	mov	x0, #0x1a4                 	// #420
  40c664:	mov	w11, #0x30                  	// #48
  40c668:	sub	w3, w1, #0x3
  40c66c:	add	x7, x19, #0x101
  40c670:	cmp	w3, #0x1
  40c674:	adrp	x3, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40c678:	ccmp	w1, #0x6, #0x4, hi  // hi = pmore
  40c67c:	add	x3, x3, #0xaf8
  40c680:	csel	x0, x0, x2, eq  // eq = none
  40c684:	strb	w11, [x19, #102]
  40c688:	and	w6, w0, #0x7
  40c68c:	strb	w11, [x19, #103]
  40c690:	lsr	x1, x0, #3
  40c694:	lsr	x2, x0, #6
  40c698:	and	w1, w1, #0x7
  40c69c:	and	w2, w2, #0x7
  40c6a0:	lsr	x0, x0, #15
  40c6a4:	add	w1, w1, w11
  40c6a8:	add	w2, w2, w11
  40c6ac:	add	w6, w6, w11
  40c6b0:	add	w0, w0, w11
  40c6b4:	add	x11, x19, #0x107
  40c6b8:	mov	w5, #0x30                  	// #48
  40c6bc:	mov	w4, #0x3030                	// #12336
  40c6c0:	mov	w9, #0x30303030            	// #808464432
  40c6c4:	strb	w5, [x19, #100]
  40c6c8:	strb	w0, [x19, #101]
  40c6cc:	mov	x0, x19
  40c6d0:	strb	w2, [x19, #104]
  40c6d4:	ldr	w2, [x3]
  40c6d8:	strb	w1, [x19, #105]
  40c6dc:	ldrh	w1, [x3, #4]
  40c6e0:	strb	w6, [x19, #106]
  40c6e4:	str	w9, [x19, #108]
  40c6e8:	strh	w4, [x19, #112]
  40c6ec:	strb	w5, [x19, #114]
  40c6f0:	strb	wzr, [x19, #115]
  40c6f4:	str	w9, [x19, #116]
  40c6f8:	strh	w4, [x19, #120]
  40c6fc:	strb	w5, [x19, #122]
  40c700:	strb	wzr, [x19, #123]
  40c704:	str	w2, [x7]
  40c708:	strh	w1, [x7, #4]
  40c70c:	strh	w4, [x11]
  40c710:	ldp	x19, x20, [sp, #16]
  40c714:	ldp	x21, x22, [sp, #32]
  40c718:	ldp	x29, x30, [sp], #48
  40c71c:	ret
  40c720:	ldr	x4, [x1, #360]
  40c724:	and	w5, w0, #0xff
  40c728:	mov	x0, x2
  40c72c:	cbz	x4, 40c734 <wcrtomb@plt+0x7b14>
  40c730:	ret
  40c734:	ldr	x3, [x1, #344]
  40c738:	cbz	x3, 40c730 <wcrtomb@plt+0x7b10>
  40c73c:	mov	w0, w5
  40c740:	b	40b900 <wcrtomb@plt+0x6ce0>
  40c744:	nop
  40c748:	stp	x29, x30, [sp, #-32]!
  40c74c:	add	x3, x0, #0x94
  40c750:	mov	x1, x0
  40c754:	mov	x29, sp
  40c758:	str	x19, [sp, #16]
  40c75c:	mov	x19, x0
  40c760:	movi	v0.4s, #0x0
  40c764:	add	x0, x0, #0x200
  40c768:	mov	x2, #0x2020202020202020    	// #2314885530818453536
  40c76c:	stur	x2, [x19, #148]
  40c770:	ldr	q1, [x1], #16
  40c774:	uxtl	v2.8h, v1.8b
  40c778:	cmp	x0, x1
  40c77c:	uxtl2	v1.8h, v1.16b
  40c780:	uaddw	v0.4s, v0.4s, v2.4h
  40c784:	uaddw2	v0.4s, v0.4s, v2.8h
  40c788:	uaddw	v0.4s, v0.4s, v1.4h
  40c78c:	uaddw2	v0.4s, v0.4s, v1.8h
  40c790:	b.ne	40c770 <wcrtomb@plt+0x7b50>  // b.any
  40c794:	addv	s0, v0.4s
  40c798:	mov	x4, #0x7                   	// #7
  40c79c:	mov	x2, #0x0                   	// #0
  40c7a0:	mov	x1, #0x8                   	// #8
  40c7a4:	adrp	x5, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c7a8:	add	x5, x5, #0x6f8
  40c7ac:	mov	w0, v0.s[0]
  40c7b0:	sxtw	x0, w0
  40c7b4:	bl	40bdf8 <wcrtomb@plt+0x71d8>
  40c7b8:	mov	x0, x19
  40c7bc:	ldr	x19, [sp, #16]
  40c7c0:	ldp	x29, x30, [sp], #32
  40c7c4:	b	4060e0 <wcrtomb@plt+0x14c0>
  40c7c8:	stp	x29, x30, [sp, #-32]!
  40c7cc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c7d0:	mov	x29, sp
  40c7d4:	ldr	w3, [x3, #772]
  40c7d8:	stp	x19, x20, [sp, #16]
  40c7dc:	mov	x20, x0
  40c7e0:	mov	x19, x1
  40c7e4:	cbz	w3, 40c808 <wcrtomb@plt+0x7be8>
  40c7e8:	ldrb	w4, [x1, #156]
  40c7ec:	mov	w5, #0x67                  	// #103
  40c7f0:	cmp	w4, #0x78
  40c7f4:	sub	w3, w4, #0x4b
  40c7f8:	ccmp	w4, w5, #0x4, ne  // ne = any
  40c7fc:	and	w3, w3, #0xff
  40c800:	ccmp	w3, #0x1, #0x0, ne  // ne = any
  40c804:	b.hi	40c8a0 <wcrtomb@plt+0x7c80>  // b.pmore
  40c808:	ldr	x0, [x20, #360]
  40c80c:	cbz	x0, 40c880 <wcrtomb@plt+0x7c60>
  40c810:	movi	v0.4s, #0x0
  40c814:	add	x3, x19, #0x94
  40c818:	mov	x0, x19
  40c81c:	add	x2, x19, #0x200
  40c820:	mov	x1, #0x2020202020202020    	// #2314885530818453536
  40c824:	stur	x1, [x19, #148]
  40c828:	ldr	q1, [x0], #16
  40c82c:	uxtl	v2.8h, v1.8b
  40c830:	cmp	x2, x0
  40c834:	uxtl2	v1.8h, v1.16b
  40c838:	uaddw	v0.4s, v0.4s, v2.4h
  40c83c:	uaddw2	v0.4s, v0.4s, v2.8h
  40c840:	uaddw	v0.4s, v0.4s, v1.4h
  40c844:	uaddw2	v0.4s, v0.4s, v1.8h
  40c848:	b.ne	40c828 <wcrtomb@plt+0x7c08>  // b.any
  40c84c:	addv	s0, v0.4s
  40c850:	mov	x4, #0x7                   	// #7
  40c854:	mov	x2, #0x0                   	// #0
  40c858:	mov	x1, #0x8                   	// #8
  40c85c:	adrp	x5, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c860:	add	x5, x5, #0x6f8
  40c864:	mov	w0, v0.s[0]
  40c868:	sxtw	x0, w0
  40c86c:	bl	40bdf8 <wcrtomb@plt+0x71d8>
  40c870:	mov	x0, x19
  40c874:	ldp	x19, x20, [sp, #16]
  40c878:	ldp	x29, x30, [sp], #32
  40c87c:	b	4060e0 <wcrtomb@plt+0x14c0>
  40c880:	ldr	x0, [x20, #344]
  40c884:	cbz	x0, 40c810 <wcrtomb@plt+0x7bf0>
  40c888:	mov	x2, x19
  40c88c:	mov	x1, x20
  40c890:	mov	w0, #0x0                   	// #0
  40c894:	bl	40b900 <wcrtomb@plt+0x6ce0>
  40c898:	mov	x19, x0
  40c89c:	b	40c810 <wcrtomb@plt+0x7bf0>
  40c8a0:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c8a4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c8a8:	ldr	w4, [x4, #944]
  40c8ac:	str	w4, [x3, #80]
  40c8b0:	bl	41d6f8 <wcrtomb@plt+0x18ad8>
  40c8b4:	b	40c808 <wcrtomb@plt+0x7be8>
  40c8b8:	stp	x29, x30, [sp, #-80]!
  40c8bc:	mov	x29, sp
  40c8c0:	stp	x19, x20, [sp, #16]
  40c8c4:	and	w20, w2, #0xff
  40c8c8:	stp	x21, x22, [sp, #32]
  40c8cc:	mov	x22, x1
  40c8d0:	stp	x23, x24, [sp, #48]
  40c8d4:	mov	x24, x0
  40c8d8:	mov	x0, x1
  40c8dc:	bl	403ff0 <strlen@plt>
  40c8e0:	mov	x23, x0
  40c8e4:	add	x21, x23, #0x1
  40c8e8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40c8ec:	mov	x1, x21
  40c8f0:	add	x0, x0, #0x708
  40c8f4:	mov	x2, #0x0                   	// #0
  40c8f8:	bl	40c5a8 <wcrtomb@plt+0x7988>
  40c8fc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40c900:	mov	x19, x0
  40c904:	ldrb	w0, [x1, #800]
  40c908:	cbnz	w0, 40c970 <wcrtomb@plt+0x7d50>
  40c90c:	str	x25, [sp, #64]
  40c910:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40c914:	add	x25, x25, #0x7f0
  40c918:	ldr	x3, [x25, #32]
  40c91c:	cbz	x3, 40ca38 <wcrtomb@plt+0x7e18>
  40c920:	add	x4, x19, #0x109
  40c924:	mov	x1, #0x0                   	// #0
  40c928:	ldrb	w2, [x3, x1]
  40c92c:	strb	w2, [x4, x1]
  40c930:	add	x1, x1, #0x1
  40c934:	cmp	x1, #0x20
  40c938:	cbz	w2, 40c940 <wcrtomb@plt+0x7d20>
  40c93c:	b.ne	40c928 <wcrtomb@plt+0x7d08>  // b.any
  40c940:	ldr	x4, [x25, #40]
  40c944:	add	x3, x19, #0x129
  40c948:	mov	x1, #0x0                   	// #0
  40c94c:	strb	wzr, [x19, #296]
  40c950:	ldrb	w2, [x4, x1]
  40c954:	strb	w2, [x3, x1]
  40c958:	add	x1, x1, #0x1
  40c95c:	cmp	x1, #0x20
  40c960:	cbz	w2, 40c968 <wcrtomb@plt+0x7d48>
  40c964:	b.ne	40c950 <wcrtomb@plt+0x7d30>  // b.any
  40c968:	strb	wzr, [x19, #328]
  40c96c:	ldr	x25, [sp, #64]
  40c970:	add	x3, x19, #0x101
  40c974:	mov	x4, #0x7375                	// #29557
  40c978:	mov	x1, x19
  40c97c:	movk	x4, #0x6174, lsl #16
  40c980:	mov	x0, x24
  40c984:	movk	x4, #0x2072, lsl #32
  40c988:	mov	x2, #0xffffffffffffffff    	// #-1
  40c98c:	movk	x4, #0x20, lsl #48
  40c990:	str	x4, [x3]
  40c994:	strb	w20, [x19, #156]
  40c998:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40c99c:	bl	406550 <wcrtomb@plt+0x1930>
  40c9a0:	mov	x20, x0
  40c9a4:	bl	406128 <wcrtomb@plt+0x1508>
  40c9a8:	mov	x19, x0
  40c9ac:	cmp	x21, x0
  40c9b0:	b.ls	40c9fc <wcrtomb@plt+0x7ddc>  // b.plast
  40c9b4:	nop
  40c9b8:	mov	x2, x19
  40c9bc:	mov	x1, x22
  40c9c0:	mov	x0, x20
  40c9c4:	bl	403f70 <memcpy@plt>
  40c9c8:	sub	x0, x19, #0x1
  40c9cc:	sub	x21, x21, x19
  40c9d0:	and	x0, x0, #0xfffffffffffffe00
  40c9d4:	add	x22, x22, x19
  40c9d8:	add	x0, x20, x0
  40c9dc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40c9e0:	bl	406550 <wcrtomb@plt+0x1930>
  40c9e4:	mov	x20, x0
  40c9e8:	bl	406128 <wcrtomb@plt+0x1508>
  40c9ec:	mov	x19, x0
  40c9f0:	cmp	x21, x0
  40c9f4:	b.hi	40c9b8 <wcrtomb@plt+0x7d98>  // b.pmore
  40c9f8:	sub	x23, x21, #0x1
  40c9fc:	mov	x1, x22
  40ca00:	mov	x2, x21
  40ca04:	mov	x0, x20
  40ca08:	bl	403f70 <memcpy@plt>
  40ca0c:	sub	x2, x19, x21
  40ca10:	add	x0, x20, x21
  40ca14:	mov	w1, #0x0                   	// #0
  40ca18:	bl	404410 <memset@plt>
  40ca1c:	and	x0, x23, #0xfffffffffffffe00
  40ca20:	add	x0, x20, x0
  40ca24:	ldp	x19, x20, [sp, #16]
  40ca28:	ldp	x21, x22, [sp, #32]
  40ca2c:	ldp	x23, x24, [sp, #48]
  40ca30:	ldp	x29, x30, [sp], #80
  40ca34:	b	4060e0 <wcrtomb@plt+0x14c0>
  40ca38:	add	x1, x25, #0x20
  40ca3c:	bl	421f48 <wcrtomb@plt+0x1d328>
  40ca40:	add	x1, x25, #0x28
  40ca44:	mov	w0, #0x0                   	// #0
  40ca48:	bl	422000 <wcrtomb@plt+0x1d3e0>
  40ca4c:	ldr	x3, [x25, #32]
  40ca50:	b	40c920 <wcrtomb@plt+0x7d00>
  40ca54:	nop
  40ca58:	stp	x29, x30, [sp, #-96]!
  40ca5c:	mov	x29, sp
  40ca60:	stp	x21, x22, [sp, #32]
  40ca64:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ca68:	stp	x19, x20, [sp, #16]
  40ca6c:	mov	x20, x0
  40ca70:	ldr	w19, [x22, #944]
  40ca74:	stp	x23, x24, [sp, #48]
  40ca78:	cmp	w19, #0x4
  40ca7c:	stp	xzr, xzr, [sp, #64]
  40ca80:	ldr	x24, [x0, #8]
  40ca84:	b.eq	40d2c0 <wcrtomb@plt+0x86a0>  // b.none
  40ca88:	mov	x0, x24
  40ca8c:	bl	403ff0 <strlen@plt>
  40ca90:	cmp	w19, #0x2
  40ca94:	b.eq	40cec0 <wcrtomb@plt+0x82a0>  // b.none
  40ca98:	cmp	x0, #0x64
  40ca9c:	b.ls	40cec8 <wcrtomb@plt+0x82a8>  // b.plast
  40caa0:	cmp	w19, #0x3
  40caa4:	b.eq	40d020 <wcrtomb@plt+0x8400>  // b.none
  40caa8:	b.ls	40d0a4 <wcrtomb@plt+0x8484>  // b.plast
  40caac:	cmp	w19, #0x4
  40cab0:	b.ne	40d018 <wcrtomb@plt+0x83f8>  // b.any
  40cab4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40cab8:	mov	x1, x20
  40cabc:	add	x0, x0, #0x718
  40cac0:	mov	x2, #0x0                   	// #0
  40cac4:	bl	417440 <wcrtomb@plt+0x12820>
  40cac8:	bl	406550 <wcrtomb@plt+0x1930>
  40cacc:	mov	x19, x0
  40cad0:	mov	x2, #0x200                 	// #512
  40cad4:	mov	w1, #0x0                   	// #0
  40cad8:	bl	404410 <memset@plt>
  40cadc:	ldr	x2, [x20, #8]
  40cae0:	mov	x0, #0x0                   	// #0
  40cae4:	nop
  40cae8:	ldrb	w1, [x2, x0]
  40caec:	strb	w1, [x19, x0]
  40caf0:	cbz	w1, 40cb00 <wcrtomb@plt+0x7ee0>
  40caf4:	add	x0, x0, #0x1
  40caf8:	cmp	x0, #0x64
  40cafc:	b.ne	40cae8 <wcrtomb@plt+0x7ec8>  // b.any
  40cb00:	ldr	w0, [x22, #944]
  40cb04:	cmp	w0, #0x2
  40cb08:	b.ne	40cb10 <wcrtomb@plt+0x7ef0>  // b.any
  40cb0c:	strb	wzr, [x19, #99]
  40cb10:	ldr	w0, [x20, #112]
  40cb14:	add	x2, sp, #0x40
  40cb18:	add	x1, x20, #0x70
  40cb1c:	bl	41e728 <wcrtomb@plt+0x19b08>
  40cb20:	ldr	w0, [x20, #116]
  40cb24:	add	x2, sp, #0x48
  40cb28:	add	x1, x20, #0x74
  40cb2c:	bl	41e7e8 <wcrtomb@plt+0x19bc8>
  40cb30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40cb34:	ldr	x3, [x0, #728]
  40cb38:	cbz	x3, 40d010 <wcrtomb@plt+0x83f0>
  40cb3c:	ldr	w21, [x20, #104]
  40cb40:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40cb44:	mov	x4, #0x0                   	// #0
  40cb48:	and	w0, w21, #0xf000
  40cb4c:	ldr	w2, [x1, #208]
  40cb50:	cmp	w0, #0x4, lsl #12
  40cb54:	mov	w0, w21
  40cb58:	and	w21, w21, #0xfffff000
  40cb5c:	cset	w1, eq  // eq = none
  40cb60:	bl	4473b8 <argp_parse@@Base+0x75d8>
  40cb64:	orr	w0, w21, w0
  40cb68:	str	w0, [x20, #104]
  40cb6c:	ldr	w1, [x22, #944]
  40cb70:	add	x5, x19, #0x64
  40cb74:	and	w2, w1, #0xfffffffd
  40cb78:	cmp	w2, #0x1
  40cb7c:	b.ne	40cfa0 <wcrtomb@plt+0x8380>  // b.any
  40cb80:	and	w1, w0, #0x7
  40cb84:	ubfx	x2, x0, #3, #3
  40cb88:	ubfx	x3, x0, #6, #3
  40cb8c:	ubfx	x0, x0, #9, #3
  40cb90:	add	w1, w1, #0x30
  40cb94:	add	w2, w2, #0x30
  40cb98:	add	w3, w3, #0x30
  40cb9c:	add	w0, w0, #0x30
  40cba0:	mov	w5, #0x3030                	// #12336
  40cba4:	mov	w4, #0x30                  	// #48
  40cba8:	strh	w5, [x19, #100]
  40cbac:	strb	w4, [x19, #102]
  40cbb0:	strb	w0, [x19, #103]
  40cbb4:	strb	w3, [x19, #104]
  40cbb8:	strb	w2, [x19, #105]
  40cbbc:	strb	w1, [x19, #106]
  40cbc0:	strb	wzr, [x19, #107]
  40cbc4:	ldr	w1, [x22, #944]
  40cbc8:	mov	w2, #0x1fffff              	// #2097151
  40cbcc:	ldr	w0, [x20, #112]
  40cbd0:	add	x5, x19, #0x6c
  40cbd4:	cmp	w1, #0x4
  40cbd8:	ccmp	w0, w2, #0x0, eq  // eq = none
  40cbdc:	rev	w4, w0
  40cbe0:	b.hi	40d18c <wcrtomb@plt+0x856c>  // b.pmore
  40cbe4:	mov	x3, #0x1fffff              	// #2097151
  40cbe8:	mov	w2, w0
  40cbec:	cmp	x3, w0, uxtw
  40cbf0:	b.cs	40d1a4 <wcrtomb@plt+0x8584>  // b.hs, b.nlast
  40cbf4:	and	w1, w1, #0xfffffffb
  40cbf8:	cmp	w1, #0x2
  40cbfc:	b.ne	40cf74 <wcrtomb@plt+0x8354>  // b.any
  40cc00:	mov	w0, #0x80                  	// #128
  40cc04:	stp	w0, w4, [x19, #108]
  40cc08:	ldr	w0, [x20, #116]
  40cc0c:	mov	w2, #0x1fffff              	// #2097151
  40cc10:	ldr	w1, [x22, #944]
  40cc14:	add	x5, x19, #0x74
  40cc18:	cmp	w0, w2
  40cc1c:	rev	w4, w0
  40cc20:	ccmp	w1, #0x4, #0x0, hi  // hi = pmore
  40cc24:	b.eq	40d24c <wcrtomb@plt+0x862c>  // b.none
  40cc28:	mov	x3, #0x1fffff              	// #2097151
  40cc2c:	mov	w2, w0
  40cc30:	cmp	x3, w0, uxtw
  40cc34:	b.cs	40d264 <wcrtomb@plt+0x8644>  // b.hs, b.nlast
  40cc38:	and	w1, w1, #0xfffffffb
  40cc3c:	cmp	w1, #0x2
  40cc40:	b.ne	40d128 <wcrtomb@plt+0x8508>  // b.any
  40cc44:	mov	w0, #0x80                  	// #128
  40cc48:	stp	w0, w4, [x19, #116]
  40cc4c:	ldr	w0, [x22, #944]
  40cc50:	ldr	x1, [x20, #136]
  40cc54:	cmp	w0, #0x4
  40cc58:	b.eq	40d160 <wcrtomb@plt+0x8540>  // b.none
  40cc5c:	lsr	x21, x1, #63
  40cc60:	mov	w0, w21
  40cc64:	add	x2, x19, #0x7c
  40cc68:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40cc6c:	add	x3, x3, #0x6e8
  40cc70:	bl	40bf00 <wcrtomb@plt+0x72e0>
  40cc74:	tst	w0, #0xff
  40cc78:	b.eq	40cf58 <wcrtomb@plt+0x8338>  // b.none
  40cc7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40cc80:	ldr	w0, [x0, #184]
  40cc84:	cmp	w0, #0x1
  40cc88:	b.eq	40d4e0 <wcrtomb@plt+0x88c0>  // b.none
  40cc8c:	cmp	w0, #0x2
  40cc90:	b.eq	40d498 <wcrtomb@plt+0x8878>  // b.none
  40cc94:	cbz	w0, 40d4c8 <wcrtomb@plt+0x88a8>
  40cc98:	ldr	w0, [x22, #944]
  40cc9c:	ldr	x1, [sp, #80]
  40cca0:	cmp	w0, #0x4
  40cca4:	b.eq	40d44c <wcrtomb@plt+0x882c>  // b.none
  40cca8:	lsr	x0, x1, #63
  40ccac:	adrp	x21, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ccb0:	add	x21, x21, #0x6f0
  40ccb4:	mov	x3, x21
  40ccb8:	add	x2, x19, #0x88
  40ccbc:	bl	40bf00 <wcrtomb@plt+0x72e0>
  40ccc0:	tst	w0, #0xff
  40ccc4:	b.eq	40cf58 <wcrtomb@plt+0x8338>  // b.none
  40ccc8:	ldr	w1, [x20, #104]
  40cccc:	mov	w2, #0xb000                	// #45056
  40ccd0:	ldr	w0, [x22, #944]
  40ccd4:	and	w1, w1, w2
  40ccd8:	cmp	w1, #0x2, lsl #12
  40ccdc:	b.eq	40d2dc <wcrtomb@plt+0x86bc>  // b.none
  40cce0:	and	w1, w0, #0xfffffffb
  40cce4:	cmp	w1, #0x2
  40cce8:	b.ne	40d570 <wcrtomb@plt+0x8950>  // b.any
  40ccec:	cmp	w0, #0x4
  40ccf0:	b.eq	40d5a8 <wcrtomb@plt+0x8988>  // b.none
  40ccf4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ccf8:	ldrb	w1, [x1, #161]
  40ccfc:	cbz	w1, 40cd0c <wcrtomb@plt+0x80ec>
  40cd00:	and	w1, w0, #0xfffffffb
  40cd04:	cmp	w1, #0x2
  40cd08:	b.eq	40d6a8 <wcrtomb@plt+0x8a88>  // b.none
  40cd0c:	cmp	w0, #0x1
  40cd10:	b.eq	40d4f4 <wcrtomb@plt+0x88d4>  // b.none
  40cd14:	mov	w1, #0x30                  	// #48
  40cd18:	strb	w1, [x19, #156]
  40cd1c:	cmp	w0, #0x4
  40cd20:	b.hi	40d428 <wcrtomb@plt+0x8808>  // b.pmore
  40cd24:	cmp	w0, #0x2
  40cd28:	b.ls	40d42c <wcrtomb@plt+0x880c>  // b.plast
  40cd2c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40cd30:	add	x1, x1, #0xaf8
  40cd34:	add	x3, x19, #0x101
  40cd38:	add	x2, x19, #0x107
  40cd3c:	mov	w4, #0x3030                	// #12336
  40cd40:	ldr	w5, [x1]
  40cd44:	ldrh	w1, [x1, #4]
  40cd48:	str	w5, [x3]
  40cd4c:	strh	w1, [x3, #4]
  40cd50:	strh	w4, [x2]
  40cd54:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40cd58:	ldrb	w1, [x1, #800]
  40cd5c:	cbnz	w1, 40cdf0 <wcrtomb@plt+0x81d0>
  40cd60:	ldr	x0, [sp, #64]
  40cd64:	cbz	x0, 40d7c4 <wcrtomb@plt+0x8ba4>
  40cd68:	bl	450328 <argp_parse@@Base+0x10548>
  40cd6c:	str	x0, [x20, #32]
  40cd70:	ldr	x0, [sp, #72]
  40cd74:	cbz	x0, 40d7d4 <wcrtomb@plt+0x8bb4>
  40cd78:	bl	450328 <argp_parse@@Base+0x10548>
  40cd7c:	str	x0, [x20, #40]
  40cd80:	ldr	w0, [x22, #944]
  40cd84:	ldr	x21, [x20, #32]
  40cd88:	cmp	w0, #0x4
  40cd8c:	b.eq	40d6d8 <wcrtomb@plt+0x8ab8>  // b.none
  40cd90:	add	x2, x19, #0x109
  40cd94:	mov	x0, #0x0                   	// #0
  40cd98:	ldrb	w1, [x21, x0]
  40cd9c:	strb	w1, [x2, x0]
  40cda0:	cbz	w1, 40cdb0 <wcrtomb@plt+0x8190>
  40cda4:	add	x0, x0, #0x1
  40cda8:	cmp	x0, #0x20
  40cdac:	b.ne	40cd98 <wcrtomb@plt+0x8178>  // b.any
  40cdb0:	ldr	w0, [x22, #944]
  40cdb4:	strb	wzr, [x19, #296]
  40cdb8:	cmp	w0, #0x4
  40cdbc:	b.eq	40d714 <wcrtomb@plt+0x8af4>  // b.none
  40cdc0:	ldr	x3, [x20, #40]
  40cdc4:	add	x2, x19, #0x129
  40cdc8:	mov	x0, #0x0                   	// #0
  40cdcc:	nop
  40cdd0:	ldrb	w1, [x3, x0]
  40cdd4:	strb	w1, [x2, x0]
  40cdd8:	cbz	w1, 40cde8 <wcrtomb@plt+0x81c8>
  40cddc:	add	x0, x0, #0x1
  40cde0:	cmp	x0, #0x20
  40cde4:	b.ne	40cdd0 <wcrtomb@plt+0x81b0>  // b.any
  40cde8:	ldr	w0, [x22, #944]
  40cdec:	strb	wzr, [x19, #328]
  40cdf0:	cmp	w0, #0x4
  40cdf4:	b.ne	40cf5c <wcrtomb@plt+0x833c>  // b.any
  40cdf8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40cdfc:	ldr	w0, [x0, #1024]
  40ce00:	cmp	w0, #0x0
  40ce04:	b.le	40ce40 <wcrtomb@plt+0x8220>
  40ce08:	ldr	x0, [x20, #56]
  40ce0c:	cbz	x0, 40ce24 <wcrtomb@plt+0x8204>
  40ce10:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ce14:	mov	x1, x20
  40ce18:	add	x0, x0, #0x808
  40ce1c:	mov	x2, #0x0                   	// #0
  40ce20:	bl	417440 <wcrtomb@plt+0x12820>
  40ce24:	ldr	x0, [x20, #72]
  40ce28:	cbz	x0, 40ce40 <wcrtomb@plt+0x8220>
  40ce2c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ce30:	mov	x1, x20
  40ce34:	add	x0, x0, #0x820
  40ce38:	mov	x2, #0x0                   	// #0
  40ce3c:	bl	417440 <wcrtomb@plt+0x12820>
  40ce40:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ce44:	ldr	w0, [x0, #1112]
  40ce48:	cmp	w0, #0x0
  40ce4c:	b.le	40ce6c <wcrtomb@plt+0x824c>
  40ce50:	ldr	x0, [x20, #48]
  40ce54:	cbz	x0, 40ce6c <wcrtomb@plt+0x824c>
  40ce58:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ce5c:	mov	x1, x20
  40ce60:	add	x0, x0, #0x838
  40ce64:	mov	x2, #0x0                   	// #0
  40ce68:	bl	417440 <wcrtomb@plt+0x12820>
  40ce6c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ce70:	ldr	w0, [x0, #784]
  40ce74:	cmp	w0, #0x0
  40ce78:	b.le	40cf5c <wcrtomb@plt+0x833c>
  40ce7c:	ldp	x1, x21, [x20, #328]
  40ce80:	str	xzr, [sp, #80]
  40ce84:	mov	x0, #0x0                   	// #0
  40ce88:	cbz	x1, 40cf5c <wcrtomb@plt+0x833c>
  40ce8c:	nop
  40ce90:	add	x0, x0, x0, lsl #1
  40ce94:	mov	x1, x20
  40ce98:	add	x2, sp, #0x50
  40ce9c:	ldr	x0, [x21, x0, lsl #3]
  40cea0:	bl	417440 <wcrtomb@plt+0x12820>
  40cea4:	ldr	x0, [sp, #80]
  40cea8:	ldr	x1, [x20, #328]
  40ceac:	add	x0, x0, #0x1
  40ceb0:	str	x0, [sp, #80]
  40ceb4:	cmp	x0, x1
  40ceb8:	b.cc	40ce90 <wcrtomb@plt+0x8270>  // b.lo, b.ul, b.last
  40cebc:	b	40cf5c <wcrtomb@plt+0x833c>
  40cec0:	cmp	x0, #0x63
  40cec4:	b.hi	40d114 <wcrtomb@plt+0x84f4>  // b.pmore
  40cec8:	bl	406550 <wcrtomb@plt+0x1930>
  40cecc:	mov	x19, x0
  40ced0:	mov	x2, #0x200                 	// #512
  40ced4:	mov	w1, #0x0                   	// #0
  40ced8:	bl	404410 <memset@plt>
  40cedc:	ldr	x2, [x20, #8]
  40cee0:	mov	x0, #0x0                   	// #0
  40cee4:	nop
  40cee8:	ldrb	w1, [x2, x0]
  40ceec:	strb	w1, [x19, x0]
  40cef0:	cbz	w1, 40cb00 <wcrtomb@plt+0x7ee0>
  40cef4:	add	x0, x0, #0x1
  40cef8:	cmp	x0, #0x64
  40cefc:	b.ne	40cee8 <wcrtomb@plt+0x82c8>  // b.any
  40cf00:	b	40cb00 <wcrtomb@plt+0x7ee0>
  40cf04:	sub	x0, x0, #0x1
  40cf08:	sub	x21, x0, x23
  40cf0c:	sub	x0, x21, #0x1
  40cf10:	cmp	x0, #0x63
  40cf14:	b.hi	40d04c <wcrtomb@plt+0x842c>  // b.pmore
  40cf18:	bl	406550 <wcrtomb@plt+0x1930>
  40cf1c:	mov	x19, x0
  40cf20:	mov	x2, #0x200                 	// #512
  40cf24:	mov	w1, #0x0                   	// #0
  40cf28:	bl	404410 <memset@plt>
  40cf2c:	mov	x2, x23
  40cf30:	mov	x1, x24
  40cf34:	add	x0, x19, #0x159
  40cf38:	bl	403f70 <memcpy@plt>
  40cf3c:	add	x1, x23, #0x1
  40cf40:	mov	x2, x21
  40cf44:	add	x1, x24, x1
  40cf48:	mov	x0, x19
  40cf4c:	bl	403f70 <memcpy@plt>
  40cf50:	cbnz	x19, 40cb10 <wcrtomb@plt+0x7ef0>
  40cf54:	nop
  40cf58:	mov	x19, #0x0                   	// #0
  40cf5c:	mov	x0, x19
  40cf60:	ldp	x19, x20, [sp, #16]
  40cf64:	ldp	x21, x22, [sp, #32]
  40cf68:	ldp	x23, x24, [sp, #48]
  40cf6c:	ldp	x29, x30, [sp], #96
  40cf70:	ret
  40cf74:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40cf78:	mov	x6, #0x8                   	// #8
  40cf7c:	add	x7, x7, #0x798
  40cf80:	mov	x4, #0x0                   	// #0
  40cf84:	mov	x3, #0x4                   	// #4
  40cf88:	mov	w1, #0x0                   	// #0
  40cf8c:	mov	w0, #0x0                   	// #0
  40cf90:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40cf94:	tst	w0, #0xff
  40cf98:	b.ne	40cc08 <wcrtomb@plt+0x7fe8>  // b.any
  40cf9c:	b	40cf58 <wcrtomb@plt+0x8338>
  40cfa0:	sub	w2, w1, #0x3
  40cfa4:	cmp	w2, #0x1
  40cfa8:	ccmp	w1, #0x6, #0x4, hi  // hi = pmore
  40cfac:	b.ne	40d200 <wcrtomb@plt+0x85e0>  // b.any
  40cfb0:	and	x2, x0, #0xfff
  40cfb4:	and	w0, w2, #0x7
  40cfb8:	ubfx	w1, w2, #3, #3
  40cfbc:	ubfx	w3, w2, #6, #3
  40cfc0:	ubfx	w4, w2, #9, #3
  40cfc4:	ubfx	w5, w2, #12, #3
  40cfc8:	ubfx	w6, w2, #15, #3
  40cfcc:	lsr	x2, x2, #18
  40cfd0:	add	w0, w0, #0x30
  40cfd4:	add	w1, w1, #0x30
  40cfd8:	add	w3, w3, #0x30
  40cfdc:	add	w4, w4, #0x30
  40cfe0:	add	w5, w5, #0x30
  40cfe4:	add	w6, w6, #0x30
  40cfe8:	add	w2, w2, #0x30
  40cfec:	strb	w2, [x19, #100]
  40cff0:	strb	w6, [x19, #101]
  40cff4:	strb	w5, [x19, #102]
  40cff8:	strb	w4, [x19, #103]
  40cffc:	strb	w3, [x19, #104]
  40d000:	strb	w1, [x19, #105]
  40d004:	strb	w0, [x19, #106]
  40d008:	strb	wzr, [x19, #107]
  40d00c:	b	40cbc4 <wcrtomb@plt+0x7fa4>
  40d010:	ldr	w0, [x20, #104]
  40d014:	b	40cb6c <wcrtomb@plt+0x7f4c>
  40d018:	cmp	w19, #0x5
  40d01c:	b.ne	40d10c <wcrtomb@plt+0x84ec>  // b.any
  40d020:	cmp	x0, #0x100
  40d024:	b.hi	40d63c <wcrtomb@plt+0x8a1c>  // b.pmore
  40d028:	cmp	x0, #0x9c
  40d02c:	mov	x23, #0x9b                  	// #155
  40d030:	b.ls	40d5d8 <wcrtomb@plt+0x89b8>  // b.plast
  40d034:	nop
  40d038:	ldrb	w1, [x24, x23]
  40d03c:	cmp	w1, #0x2f
  40d040:	b.eq	40cf04 <wcrtomb@plt+0x82e4>  // b.none
  40d044:	subs	x23, x23, #0x1
  40d048:	b.ne	40d038 <wcrtomb@plt+0x8418>  // b.any
  40d04c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d050:	ldr	x0, [x0, #1136]
  40d054:	cbz	x0, 40d05c <wcrtomb@plt+0x843c>
  40d058:	blr	x0
  40d05c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d060:	add	x1, x1, #0x750
  40d064:	mov	w2, #0x5                   	// #5
  40d068:	mov	x0, #0x0                   	// #0
  40d06c:	bl	4049c0 <dcgettext@plt>
  40d070:	mov	x19, x0
  40d074:	mov	x0, x24
  40d078:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40d07c:	mov	x2, x19
  40d080:	mov	x3, x0
  40d084:	mov	w1, #0x0                   	// #0
  40d088:	mov	w0, #0x0                   	// #0
  40d08c:	bl	404050 <error@plt>
  40d090:	mov	x19, #0x0                   	// #0
  40d094:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40d098:	mov	w1, #0x2                   	// #2
  40d09c:	str	w1, [x0, #3568]
  40d0a0:	b	40cf5c <wcrtomb@plt+0x833c>
  40d0a4:	cmp	w19, #0x1
  40d0a8:	b.ne	40d85c <wcrtomb@plt+0x8c3c>  // b.any
  40d0ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d0b0:	ldr	x0, [x0, #1136]
  40d0b4:	cbz	x0, 40d0bc <wcrtomb@plt+0x849c>
  40d0b8:	blr	x0
  40d0bc:	mov	w2, #0x5                   	// #5
  40d0c0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d0c4:	mov	x0, #0x0                   	// #0
  40d0c8:	add	x1, x1, #0x720
  40d0cc:	bl	4049c0 <dcgettext@plt>
  40d0d0:	mov	x2, x0
  40d0d4:	ldr	x0, [x20, #8]
  40d0d8:	mov	x20, x2
  40d0dc:	mov	x19, #0x0                   	// #0
  40d0e0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40d0e4:	mov	x3, x0
  40d0e8:	mov	w1, #0x0                   	// #0
  40d0ec:	mov	w0, #0x0                   	// #0
  40d0f0:	mov	x2, x20
  40d0f4:	mov	w4, #0x63                  	// #99
  40d0f8:	bl	404050 <error@plt>
  40d0fc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40d100:	mov	w1, #0x2                   	// #2
  40d104:	str	w1, [x0, #3568]
  40d108:	b	40cf5c <wcrtomb@plt+0x833c>
  40d10c:	cmp	w19, #0x6
  40d110:	b.ne	40d85c <wcrtomb@plt+0x8c3c>  // b.any
  40d114:	mov	x1, x24
  40d118:	mov	x0, x20
  40d11c:	mov	w2, #0x4c                  	// #76
  40d120:	bl	40c8b8 <wcrtomb@plt+0x7c98>
  40d124:	b	40cac8 <wcrtomb@plt+0x7ea8>
  40d128:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d12c:	mov	x6, #0x8                   	// #8
  40d130:	add	x7, x7, #0x7a8
  40d134:	mov	x4, #0x0                   	// #0
  40d138:	mov	x3, #0x4                   	// #4
  40d13c:	mov	w1, #0x0                   	// #0
  40d140:	mov	w0, #0x0                   	// #0
  40d144:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40d148:	tst	w0, #0xff
  40d14c:	b.eq	40cf58 <wcrtomb@plt+0x8338>  // b.none
  40d150:	ldr	w0, [x22, #944]
  40d154:	ldr	x1, [x20, #136]
  40d158:	cmp	w0, #0x4
  40d15c:	b.ne	40cc5c <wcrtomb@plt+0x803c>  // b.any
  40d160:	mov	x0, #0x1ffffffff           	// #8589934591
  40d164:	mov	w21, #0x0                   	// #0
  40d168:	cmp	x1, x0
  40d16c:	b.ls	40cc60 <wcrtomb@plt+0x8040>  // b.plast
  40d170:	mov	x1, x20
  40d174:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d178:	mov	x2, #0x0                   	// #0
  40d17c:	add	x0, x0, #0x7b0
  40d180:	bl	417440 <wcrtomb@plt+0x12820>
  40d184:	mov	x1, #0x0                   	// #0
  40d188:	b	40cc60 <wcrtomb@plt+0x8040>
  40d18c:	mov	x2, #0x0                   	// #0
  40d190:	mov	x1, x20
  40d194:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d198:	add	x0, x0, #0x790
  40d19c:	bl	417440 <wcrtomb@plt+0x12820>
  40d1a0:	mov	x2, #0x0                   	// #0
  40d1a4:	and	w0, w2, #0x7
  40d1a8:	ubfx	w1, w2, #3, #3
  40d1ac:	ubfx	w3, w2, #6, #3
  40d1b0:	ubfx	w4, w2, #9, #3
  40d1b4:	ubfx	w5, w2, #12, #3
  40d1b8:	ubfx	w6, w2, #15, #3
  40d1bc:	lsr	x2, x2, #18
  40d1c0:	add	w0, w0, #0x30
  40d1c4:	add	w1, w1, #0x30
  40d1c8:	add	w3, w3, #0x30
  40d1cc:	add	w4, w4, #0x30
  40d1d0:	add	w5, w5, #0x30
  40d1d4:	add	w6, w6, #0x30
  40d1d8:	add	w2, w2, #0x30
  40d1dc:	strb	w2, [x19, #108]
  40d1e0:	strb	w6, [x19, #109]
  40d1e4:	strb	w5, [x19, #110]
  40d1e8:	strb	w4, [x19, #111]
  40d1ec:	strb	w3, [x19, #112]
  40d1f0:	strb	w1, [x19, #113]
  40d1f4:	strb	w0, [x19, #114]
  40d1f8:	strb	wzr, [x19, #115]
  40d1fc:	b	40cc08 <wcrtomb@plt+0x7fe8>
  40d200:	mov	x3, #0x1fffff              	// #2097151
  40d204:	mov	w2, w0
  40d208:	cmp	x3, w0, uxtw
  40d20c:	b.cs	40cfb4 <wcrtomb@plt+0x8394>  // b.hs, b.nlast
  40d210:	cmp	w1, #0x2
  40d214:	b.ne	40d228 <wcrtomb@plt+0x8608>  // b.any
  40d218:	rev	w0, w0
  40d21c:	mov	w1, #0x80                  	// #128
  40d220:	stp	w1, w0, [x19, #100]
  40d224:	b	40cbc4 <wcrtomb@plt+0x7fa4>
  40d228:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d22c:	mov	x6, #0x8                   	// #8
  40d230:	add	x7, x7, #0x788
  40d234:	mov	x4, #0x0                   	// #0
  40d238:	mov	x3, #0x4                   	// #4
  40d23c:	mov	w1, #0x0                   	// #0
  40d240:	mov	w0, #0x0                   	// #0
  40d244:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40d248:	b	40cbc4 <wcrtomb@plt+0x7fa4>
  40d24c:	mov	x2, #0x0                   	// #0
  40d250:	mov	x1, x20
  40d254:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d258:	add	x0, x0, #0x7a0
  40d25c:	bl	417440 <wcrtomb@plt+0x12820>
  40d260:	mov	x2, #0x0                   	// #0
  40d264:	and	w0, w2, #0x7
  40d268:	ubfx	w1, w2, #3, #3
  40d26c:	ubfx	w3, w2, #6, #3
  40d270:	ubfx	w4, w2, #9, #3
  40d274:	ubfx	w5, w2, #12, #3
  40d278:	ubfx	w6, w2, #15, #3
  40d27c:	lsr	x2, x2, #18
  40d280:	add	w0, w0, #0x30
  40d284:	add	w1, w1, #0x30
  40d288:	add	w3, w3, #0x30
  40d28c:	add	w4, w4, #0x30
  40d290:	add	w5, w5, #0x30
  40d294:	add	w6, w6, #0x30
  40d298:	add	w2, w2, #0x30
  40d29c:	strb	w2, [x19, #116]
  40d2a0:	strb	w6, [x19, #117]
  40d2a4:	strb	w5, [x19, #118]
  40d2a8:	strb	w4, [x19, #119]
  40d2ac:	strb	w3, [x19, #120]
  40d2b0:	strb	w1, [x19, #121]
  40d2b4:	strb	w0, [x19, #122]
  40d2b8:	strb	wzr, [x19, #123]
  40d2bc:	b	40cc4c <wcrtomb@plt+0x802c>
  40d2c0:	mov	x0, x24
  40d2c4:	bl	431548 <wcrtomb@plt+0x2c928>
  40d2c8:	tst	w0, #0xff
  40d2cc:	b.eq	40d5f0 <wcrtomb@plt+0x89d0>  // b.none
  40d2d0:	ldr	w19, [x22, #944]
  40d2d4:	ldr	x24, [x20, #8]
  40d2d8:	b	40ca88 <wcrtomb@plt+0x7e68>
  40d2dc:	ldr	x1, [x20, #120]
  40d2e0:	mov	w2, #0x1fffff              	// #2097151
  40d2e4:	add	x5, x19, #0x149
  40d2e8:	lsr	x4, x1, #32
  40d2ec:	ubfx	w3, w1, #8, #12
  40d2f0:	and	w4, w4, #0xfffff000
  40d2f4:	lsr	x23, x1, #12
  40d2f8:	orr	w4, w4, w3
  40d2fc:	cmp	w4, w2
  40d300:	bfxil	w23, w1, #0, #8
  40d304:	ccmp	w0, #0x4, #0x0, hi  // hi = pmore
  40d308:	b.eq	40d750 <wcrtomb@plt+0x8b30>  // b.none
  40d30c:	and	w3, w0, #0xfffffffb
  40d310:	sxtw	x2, w4
  40d314:	cmp	w3, #0x2
  40d318:	lsr	w0, w4, #31
  40d31c:	cset	w1, eq  // eq = none
  40d320:	tbz	w4, #31, 40d510 <wcrtomb@plt+0x88f0>
  40d324:	cmp	w3, #0x2
  40d328:	b.ne	40d338 <wcrtomb@plt+0x8718>  // b.any
  40d32c:	mov	x3, #0xfeffffffffffffff    	// #-72057594037927937
  40d330:	cmp	x2, x3
  40d334:	b.hi	40d698 <wcrtomb@plt+0x8a78>  // b.pmore
  40d338:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d33c:	mov	x6, #0x8                   	// #8
  40d340:	add	x7, x7, #0x7c8
  40d344:	mov	x4, #0x0                   	// #0
  40d348:	mov	x3, #0x4                   	// #4
  40d34c:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40d350:	tst	w0, #0xff
  40d354:	b.eq	40cf58 <wcrtomb@plt+0x8338>  // b.none
  40d358:	ldr	w0, [x22, #944]
  40d35c:	mov	w1, #0x1fffff              	// #2097151
  40d360:	add	x5, x19, #0x151
  40d364:	cmp	w0, #0x4
  40d368:	ccmp	w23, w1, #0x0, eq  // eq = none
  40d36c:	b.hi	40d7e4 <wcrtomb@plt+0x8bc4>  // b.pmore
  40d370:	and	w3, w0, #0xfffffffb
  40d374:	sxtw	x2, w23
  40d378:	cmp	w3, #0x2
  40d37c:	lsr	w0, w23, #31
  40d380:	cset	w1, eq  // eq = none
  40d384:	tbz	w23, #31, 40d3e4 <wcrtomb@plt+0x87c4>
  40d388:	cmp	w3, #0x2
  40d38c:	b.ne	40d400 <wcrtomb@plt+0x87e0>  // b.any
  40d390:	mov	x3, #0xfeffffffffffffff    	// #-72057594037927937
  40d394:	cmp	x2, x3
  40d398:	b.ls	40d400 <wcrtomb@plt+0x87e0>  // b.plast
  40d39c:	mov	w3, #0xff                  	// #255
  40d3a0:	sbfx	x1, x0, #0, #1
  40d3a4:	strb	w3, [x19, #337]
  40d3a8:	ldr	w0, [x22, #944]
  40d3ac:	strb	w2, [x19, #344]
  40d3b0:	extr	x3, x1, x2, #8
  40d3b4:	strb	w3, [x19, #343]
  40d3b8:	extr	x3, x1, x3, #8
  40d3bc:	strb	w3, [x19, #342]
  40d3c0:	extr	x3, x1, x3, #8
  40d3c4:	strb	w3, [x19, #341]
  40d3c8:	extr	x3, x1, x3, #8
  40d3cc:	strb	w3, [x19, #340]
  40d3d0:	extr	x3, x1, x3, #8
  40d3d4:	strb	w3, [x19, #339]
  40d3d8:	extr	x1, x1, x3, #8
  40d3dc:	strb	w1, [x19, #338]
  40d3e0:	b	40ccec <wcrtomb@plt+0x80cc>
  40d3e4:	mov	x3, #0x1fffff              	// #2097151
  40d3e8:	cmp	x2, x3
  40d3ec:	b.ls	40d7fc <wcrtomb@plt+0x8bdc>  // b.plast
  40d3f0:	cmp	w1, #0x0
  40d3f4:	mov	x3, #0xffffffffffffff      	// #72057594037927935
  40d3f8:	ccmp	x2, x3, #0x2, ne  // ne = any
  40d3fc:	b.ls	40d6a0 <wcrtomb@plt+0x8a80>  // b.plast
  40d400:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d404:	mov	x6, #0x8                   	// #8
  40d408:	add	x7, x7, #0x7e0
  40d40c:	mov	x4, #0x0                   	// #0
  40d410:	mov	x3, #0x4                   	// #4
  40d414:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40d418:	tst	w0, #0xff
  40d41c:	b.eq	40cf58 <wcrtomb@plt+0x8338>  // b.none
  40d420:	ldr	w0, [x22, #944]
  40d424:	b	40ccec <wcrtomb@plt+0x80cc>
  40d428:	cmp	w0, #0x6
  40d42c:	b.ne	40d85c <wcrtomb@plt+0x8c3c>  // b.any
  40d430:	add	x1, x19, #0x101
  40d434:	mov	x2, #0x7375                	// #29557
  40d438:	movk	x2, #0x6174, lsl #16
  40d43c:	movk	x2, #0x2072, lsl #32
  40d440:	movk	x2, #0x20, lsl #48
  40d444:	str	x2, [x1]
  40d448:	b	40cd54 <wcrtomb@plt+0x8134>
  40d44c:	mov	x0, #0x1ffffffff           	// #8589934591
  40d450:	cmp	x1, x0
  40d454:	b.hi	40d464 <wcrtomb@plt+0x8844>  // b.pmore
  40d458:	ldr	x2, [sp, #88]
  40d45c:	mov	w0, #0x0                   	// #0
  40d460:	cbz	x2, 40ccac <wcrtomb@plt+0x808c>
  40d464:	add	x2, sp, #0x50
  40d468:	mov	x1, x20
  40d46c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  40d470:	add	x0, x0, #0x9c8
  40d474:	bl	417440 <wcrtomb@plt+0x12820>
  40d478:	ldr	x1, [sp, #80]
  40d47c:	mov	x2, #0x1ffffffff           	// #8589934591
  40d480:	mov	w0, #0x0                   	// #0
  40d484:	cmp	x1, x2
  40d488:	b.ls	40ccac <wcrtomb@plt+0x808c>  // b.plast
  40d48c:	mov	x1, #0x0                   	// #0
  40d490:	str	xzr, [sp, #80]
  40d494:	b	40ccac <wcrtomb@plt+0x808c>
  40d498:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d49c:	add	x1, x0, #0x398
  40d4a0:	ldr	x3, [x0, #920]
  40d4a4:	ldp	x2, x0, [x20, #232]
  40d4a8:	ldr	x4, [x1, #8]
  40d4ac:	cmp	x3, x2
  40d4b0:	b.gt	40d4c8 <wcrtomb@plt+0x88a8>
  40d4b4:	b.lt	40d4d4 <wcrtomb@plt+0x88b4>  // b.tstop
  40d4b8:	sub	w0, w0, w4
  40d4bc:	cmp	w0, #0x0
  40d4c0:	b.gt	40d4d4 <wcrtomb@plt+0x88b4>
  40d4c4:	nop
  40d4c8:	ldp	x0, x1, [x20, #232]
  40d4cc:	stp	x0, x1, [sp, #80]
  40d4d0:	b	40cc98 <wcrtomb@plt+0x8078>
  40d4d4:	ldp	x0, x1, [x1]
  40d4d8:	stp	x0, x1, [sp, #80]
  40d4dc:	b	40cc98 <wcrtomb@plt+0x8078>
  40d4e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d4e4:	add	x0, x0, #0x398
  40d4e8:	ldp	x0, x1, [x0]
  40d4ec:	stp	x0, x1, [sp, #80]
  40d4f0:	b	40cc98 <wcrtomb@plt+0x8078>
  40d4f4:	strb	wzr, [x19, #156]
  40d4f8:	mov	x0, x19
  40d4fc:	ldp	x19, x20, [sp, #16]
  40d500:	ldp	x21, x22, [sp, #32]
  40d504:	ldp	x23, x24, [sp, #48]
  40d508:	ldp	x29, x30, [sp], #96
  40d50c:	ret
  40d510:	mov	x3, #0x1fffff              	// #2097151
  40d514:	cmp	x2, x3
  40d518:	b.ls	40d768 <wcrtomb@plt+0x8b48>  // b.plast
  40d51c:	cmp	w1, #0x0
  40d520:	mov	x3, #0xffffffffffffff      	// #72057594037927935
  40d524:	ccmp	x2, x3, #0x2, ne  // ne = any
  40d528:	b.hi	40d338 <wcrtomb@plt+0x8718>  // b.pmore
  40d52c:	mov	w3, #0x80                  	// #128
  40d530:	sbfx	x1, x0, #0, #1
  40d534:	strb	w3, [x19, #329]
  40d538:	strb	w2, [x19, #336]
  40d53c:	extr	x0, x1, x2, #8
  40d540:	strb	w0, [x19, #335]
  40d544:	extr	x0, x1, x0, #8
  40d548:	strb	w0, [x19, #334]
  40d54c:	extr	x0, x1, x0, #8
  40d550:	strb	w0, [x19, #333]
  40d554:	extr	x0, x1, x0, #8
  40d558:	strb	w0, [x19, #332]
  40d55c:	extr	x0, x1, x0, #8
  40d560:	strb	w0, [x19, #331]
  40d564:	extr	x0, x1, x0, #8
  40d568:	strb	w0, [x19, #330]
  40d56c:	b	40d358 <wcrtomb@plt+0x8738>
  40d570:	add	x2, x19, #0x149
  40d574:	add	x1, x19, #0x151
  40d578:	strb	wzr, [x19, #336]
  40d57c:	mov	w5, #0x30303030            	// #808464432
  40d580:	mov	w4, #0x3030                	// #12336
  40d584:	mov	w3, #0x30                  	// #48
  40d588:	str	w5, [x2]
  40d58c:	strh	w4, [x2, #4]
  40d590:	strb	w3, [x19, #335]
  40d594:	strb	wzr, [x19, #344]
  40d598:	str	w5, [x1]
  40d59c:	strh	w4, [x1, #4]
  40d5a0:	strb	w3, [x19, #343]
  40d5a4:	b	40ccec <wcrtomb@plt+0x80cc>
  40d5a8:	mov	x1, x20
  40d5ac:	mov	x2, #0x0                   	// #0
  40d5b0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d5b4:	add	x0, x0, #0x7e8
  40d5b8:	bl	417440 <wcrtomb@plt+0x12820>
  40d5bc:	mov	x1, x20
  40d5c0:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d5c4:	mov	x2, #0x0                   	// #0
  40d5c8:	add	x0, x0, #0x7f0
  40d5cc:	bl	417440 <wcrtomb@plt+0x12820>
  40d5d0:	ldr	w0, [x22, #944]
  40d5d4:	b	40cd0c <wcrtomb@plt+0x80ec>
  40d5d8:	sub	x23, x0, #0x1
  40d5dc:	ldrb	w1, [x24, x23]
  40d5e0:	cmp	w1, #0x2f
  40d5e4:	cinc	x23, x0, ne  // ne = any
  40d5e8:	sub	x23, x23, #0x2
  40d5ec:	b	40d038 <wcrtomb@plt+0x8418>
  40d5f0:	mov	x1, x20
  40d5f4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d5f8:	add	x0, x0, #0x718
  40d5fc:	mov	x2, #0x0                   	// #0
  40d600:	bl	417440 <wcrtomb@plt+0x12820>
  40d604:	bl	406550 <wcrtomb@plt+0x1930>
  40d608:	mov	x19, x0
  40d60c:	mov	x2, #0x200                 	// #512
  40d610:	mov	w1, #0x0                   	// #0
  40d614:	bl	404410 <memset@plt>
  40d618:	ldr	x2, [x20, #8]
  40d61c:	mov	x0, #0x0                   	// #0
  40d620:	ldrb	w1, [x2, x0]
  40d624:	strb	w1, [x19, x0]
  40d628:	cbz	w1, 40cb00 <wcrtomb@plt+0x7ee0>
  40d62c:	add	x0, x0, #0x1
  40d630:	cmp	x0, #0x64
  40d634:	b.ne	40d620 <wcrtomb@plt+0x8a00>  // b.any
  40d638:	b	40cb00 <wcrtomb@plt+0x7ee0>
  40d63c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d640:	ldr	x0, [x0, #1136]
  40d644:	cbz	x0, 40d64c <wcrtomb@plt+0x8a2c>
  40d648:	blr	x0
  40d64c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d650:	add	x1, x1, #0x720
  40d654:	mov	w2, #0x5                   	// #5
  40d658:	mov	x0, #0x0                   	// #0
  40d65c:	bl	4049c0 <dcgettext@plt>
  40d660:	mov	x19, x0
  40d664:	mov	x0, x24
  40d668:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40d66c:	mov	x2, x19
  40d670:	mov	x3, x0
  40d674:	mov	w1, #0x0                   	// #0
  40d678:	mov	w0, #0x0                   	// #0
  40d67c:	mov	w4, #0x100                 	// #256
  40d680:	bl	404050 <error@plt>
  40d684:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40d688:	mov	w1, #0x2                   	// #2
  40d68c:	mov	x19, #0x0                   	// #0
  40d690:	str	w1, [x0, #3568]
  40d694:	b	40cf5c <wcrtomb@plt+0x833c>
  40d698:	mov	w3, #0xff                  	// #255
  40d69c:	b	40d530 <wcrtomb@plt+0x8910>
  40d6a0:	mov	w3, #0x80                  	// #128
  40d6a4:	b	40d3a0 <wcrtomb@plt+0x8780>
  40d6a8:	ldr	x1, [x20, #216]
  40d6ac:	mov	x3, x21
  40d6b0:	add	x2, x19, #0x159
  40d6b4:	lsr	x0, x1, #63
  40d6b8:	bl	40bf00 <wcrtomb@plt+0x72e0>
  40d6bc:	ldr	x1, [x20, #248]
  40d6c0:	mov	x3, x21
  40d6c4:	add	x2, x19, #0x165
  40d6c8:	lsr	x0, x1, #63
  40d6cc:	bl	40bf00 <wcrtomb@plt+0x72e0>
  40d6d0:	ldr	w0, [x22, #944]
  40d6d4:	b	40cd0c <wcrtomb@plt+0x80ec>
  40d6d8:	mov	x0, x21
  40d6dc:	bl	403ff0 <strlen@plt>
  40d6e0:	cmp	x0, #0x20
  40d6e4:	b.hi	40d6f8 <wcrtomb@plt+0x8ad8>  // b.pmore
  40d6e8:	mov	x0, x21
  40d6ec:	bl	431548 <wcrtomb@plt+0x2c928>
  40d6f0:	tst	w0, #0xff
  40d6f4:	b.ne	40d70c <wcrtomb@plt+0x8aec>  // b.any
  40d6f8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d6fc:	mov	x1, x20
  40d700:	add	x0, x0, #0x7f8
  40d704:	mov	x2, #0x0                   	// #0
  40d708:	bl	417440 <wcrtomb@plt+0x12820>
  40d70c:	ldr	x21, [x20, #32]
  40d710:	b	40cd90 <wcrtomb@plt+0x8170>
  40d714:	ldr	x21, [x20, #40]
  40d718:	mov	x0, x21
  40d71c:	bl	403ff0 <strlen@plt>
  40d720:	cmp	x0, #0x20
  40d724:	b.hi	40d738 <wcrtomb@plt+0x8b18>  // b.pmore
  40d728:	mov	x0, x21
  40d72c:	bl	431548 <wcrtomb@plt+0x2c928>
  40d730:	tst	w0, #0xff
  40d734:	b.ne	40cdc0 <wcrtomb@plt+0x81a0>  // b.any
  40d738:	mov	x1, x20
  40d73c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d740:	mov	x2, #0x0                   	// #0
  40d744:	add	x0, x0, #0x800
  40d748:	bl	417440 <wcrtomb@plt+0x12820>
  40d74c:	b	40cdc0 <wcrtomb@plt+0x81a0>
  40d750:	mov	x2, #0x0                   	// #0
  40d754:	mov	x1, x20
  40d758:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d75c:	add	x0, x0, #0x7b8
  40d760:	bl	417440 <wcrtomb@plt+0x12820>
  40d764:	mov	x2, #0x0                   	// #0
  40d768:	and	w0, w2, #0x7
  40d76c:	ubfx	w1, w2, #3, #3
  40d770:	ubfx	w3, w2, #6, #3
  40d774:	ubfx	w4, w2, #9, #3
  40d778:	ubfx	w5, w2, #12, #3
  40d77c:	ubfx	w6, w2, #15, #3
  40d780:	lsr	x2, x2, #18
  40d784:	add	w0, w0, #0x30
  40d788:	add	w1, w1, #0x30
  40d78c:	add	w3, w3, #0x30
  40d790:	add	w4, w4, #0x30
  40d794:	add	w5, w5, #0x30
  40d798:	add	w6, w6, #0x30
  40d79c:	add	w2, w2, #0x30
  40d7a0:	strb	w2, [x19, #329]
  40d7a4:	strb	w6, [x19, #330]
  40d7a8:	strb	w5, [x19, #331]
  40d7ac:	strb	w4, [x19, #332]
  40d7b0:	strb	w3, [x19, #333]
  40d7b4:	strb	w1, [x19, #334]
  40d7b8:	strb	w0, [x19, #335]
  40d7bc:	strb	wzr, [x19, #336]
  40d7c0:	b	40d358 <wcrtomb@plt+0x8738>
  40d7c4:	ldr	w0, [x20, #112]
  40d7c8:	add	x1, x20, #0x20
  40d7cc:	bl	421f48 <wcrtomb@plt+0x1d328>
  40d7d0:	b	40cd70 <wcrtomb@plt+0x8150>
  40d7d4:	ldr	w0, [x20, #116]
  40d7d8:	add	x1, x20, #0x28
  40d7dc:	bl	422000 <wcrtomb@plt+0x1d3e0>
  40d7e0:	b	40cd80 <wcrtomb@plt+0x8160>
  40d7e4:	mov	x2, #0x0                   	// #0
  40d7e8:	mov	x1, x20
  40d7ec:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d7f0:	add	x0, x0, #0x7d0
  40d7f4:	bl	417440 <wcrtomb@plt+0x12820>
  40d7f8:	mov	x2, #0x0                   	// #0
  40d7fc:	and	w0, w2, #0x7
  40d800:	ubfx	w3, w2, #3, #3
  40d804:	ubfx	w4, w2, #6, #3
  40d808:	ubfx	w5, w2, #9, #3
  40d80c:	ubfx	w6, w2, #12, #3
  40d810:	ubfx	w7, w2, #15, #3
  40d814:	lsr	x1, x2, #18
  40d818:	add	w3, w3, #0x30
  40d81c:	add	w2, w0, #0x30
  40d820:	add	w4, w4, #0x30
  40d824:	add	w5, w5, #0x30
  40d828:	add	w6, w6, #0x30
  40d82c:	add	w7, w7, #0x30
  40d830:	add	w1, w1, #0x30
  40d834:	ldr	w0, [x22, #944]
  40d838:	strb	w1, [x19, #337]
  40d83c:	strb	w7, [x19, #338]
  40d840:	strb	w6, [x19, #339]
  40d844:	strb	w5, [x19, #340]
  40d848:	strb	w4, [x19, #341]
  40d84c:	strb	w3, [x19, #342]
  40d850:	strb	w2, [x19, #343]
  40d854:	strb	wzr, [x19, #344]
  40d858:	b	40ccec <wcrtomb@plt+0x80cc>
  40d85c:	bl	404650 <abort@plt>
  40d860:	stp	x29, x30, [sp, #-32]!
  40d864:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d868:	mov	x29, sp
  40d86c:	ldr	w2, [x1, #944]
  40d870:	str	x19, [sp, #16]
  40d874:	cmp	w2, #0x6
  40d878:	b.hi	40d934 <wcrtomb@plt+0x8d14>  // b.pmore
  40d87c:	mov	x1, #0x1                   	// #1
  40d880:	mov	x3, #0x2a                  	// #42
  40d884:	lsl	x1, x1, x2
  40d888:	mov	x19, x0
  40d88c:	tst	x1, x3
  40d890:	b.eq	40d8f4 <wcrtomb@plt+0x8cd4>  // b.none
  40d894:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40d898:	ldr	x0, [x0, #1136]
  40d89c:	cbz	x0, 40d8a4 <wcrtomb@plt+0x8c84>
  40d8a0:	blr	x0
  40d8a4:	mov	w2, #0x5                   	// #5
  40d8a8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d8ac:	mov	x0, #0x0                   	// #0
  40d8b0:	add	x1, x1, #0x860
  40d8b4:	bl	4049c0 <dcgettext@plt>
  40d8b8:	mov	x2, x0
  40d8bc:	ldr	x0, [x19, #24]
  40d8c0:	mov	x19, x2
  40d8c4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40d8c8:	mov	x3, x0
  40d8cc:	mov	x2, x19
  40d8d0:	mov	w1, #0x0                   	// #0
  40d8d4:	mov	w0, #0x0                   	// #0
  40d8d8:	bl	404050 <error@plt>
  40d8dc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40d8e0:	mov	w1, #0x2                   	// #2
  40d8e4:	ldr	x19, [sp, #16]
  40d8e8:	str	w1, [x0, #3568]
  40d8ec:	ldp	x29, x30, [sp], #32
  40d8f0:	ret
  40d8f4:	mov	x2, #0x44                  	// #68
  40d8f8:	tst	x1, x2
  40d8fc:	b.eq	40d914 <wcrtomb@plt+0x8cf4>  // b.none
  40d900:	ldr	x19, [sp, #16]
  40d904:	mov	w2, #0x4b                  	// #75
  40d908:	ldp	x29, x30, [sp], #32
  40d90c:	ldr	x1, [x0, #24]
  40d910:	b	40c8b8 <wcrtomb@plt+0x7c98>
  40d914:	tbz	w1, #4, 40d934 <wcrtomb@plt+0x8d14>
  40d918:	ldr	x19, [sp, #16]
  40d91c:	mov	x1, x0
  40d920:	ldp	x29, x30, [sp], #32
  40d924:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40d928:	mov	x2, #0x0                   	// #0
  40d92c:	add	x0, x0, #0x850
  40d930:	b	417440 <wcrtomb@plt+0x12820>
  40d934:	bl	404650 <abort@plt>
  40d938:	stp	x29, x30, [sp, #-112]!
  40d93c:	mov	x29, sp
  40d940:	stp	x19, x20, [sp, #16]
  40d944:	stp	x23, x24, [sp, #48]
  40d948:	mov	x23, x1
  40d94c:	stp	x25, x26, [sp, #64]
  40d950:	mov	w25, w0
  40d954:	ldr	x19, [x1, #136]
  40d958:	bl	406070 <wcrtomb@plt+0x1450>
  40d95c:	mov	x20, x0
  40d960:	mov	x0, x23
  40d964:	bl	40ca58 <wcrtomb@plt+0x7e38>
  40d968:	cbz	x0, 40dbf0 <wcrtomb@plt+0x8fd0>
  40d96c:	mov	x1, x0
  40d970:	mov	x2, x20
  40d974:	mov	x0, x23
  40d978:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40d97c:	ldr	x0, [x23, #8]
  40d980:	ldr	x2, [x23, #136]
  40d984:	mov	x1, x2
  40d988:	bl	405570 <wcrtomb@plt+0x950>
  40d98c:	cmp	x19, #0x0
  40d990:	b.le	40d9d0 <wcrtomb@plt+0x8db0>
  40d994:	cmp	w25, #0x0
  40d998:	b.gt	40da1c <wcrtomb@plt+0x8dfc>
  40d99c:	nop
  40d9a0:	bl	406550 <wcrtomb@plt+0x1930>
  40d9a4:	mov	x20, x0
  40d9a8:	bl	406128 <wcrtomb@plt+0x1508>
  40d9ac:	sub	x1, x0, #0x1
  40d9b0:	cmp	x19, x0
  40d9b4:	and	x1, x1, #0xfffffffffffffe00
  40d9b8:	b.cc	40d9e8 <wcrtomb@plt+0x8dc8>  // b.lo, b.ul, b.last
  40d9bc:	sub	x19, x19, x0
  40d9c0:	add	x0, x20, x1
  40d9c4:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40d9c8:	cmp	x19, #0x0
  40d9cc:	b.gt	40d9a0 <wcrtomb@plt+0x8d80>
  40d9d0:	mov	w0, #0x0                   	// #0
  40d9d4:	ldp	x19, x20, [sp, #16]
  40d9d8:	ldp	x23, x24, [sp, #48]
  40d9dc:	ldp	x25, x26, [sp, #64]
  40d9e0:	ldp	x29, x30, [sp], #112
  40d9e4:	ret
  40d9e8:	ands	x0, x19, #0x1ff
  40d9ec:	b.ne	40da04 <wcrtomb@plt+0x8de4>  // b.any
  40d9f0:	sub	x0, x19, #0x1
  40d9f4:	and	x0, x0, #0xfffffffffffffe00
  40d9f8:	add	x0, x20, x0
  40d9fc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40da00:	b	40d9d0 <wcrtomb@plt+0x8db0>
  40da04:	mov	x2, #0x200                 	// #512
  40da08:	mov	w1, #0x0                   	// #0
  40da0c:	sub	x2, x2, x0
  40da10:	add	x0, x20, x19
  40da14:	bl	404410 <memset@plt>
  40da18:	b	40d9f0 <wcrtomb@plt+0x8dd0>
  40da1c:	mov	x26, #0x200                 	// #512
  40da20:	stp	x21, x22, [sp, #32]
  40da24:	b	40da68 <wcrtomb@plt+0x8e48>
  40da28:	mov	x1, x21
  40da2c:	mov	x2, x20
  40da30:	mov	w0, w25
  40da34:	bl	41fbe8 <wcrtomb@plt+0x1afc8>
  40da38:	sub	x1, x20, #0x1
  40da3c:	mov	x24, x0
  40da40:	and	x0, x1, #0xfffffffffffffe00
  40da44:	cmn	x24, #0x1
  40da48:	add	x0, x21, x0
  40da4c:	b.eq	40daac <wcrtomb@plt+0x8e8c>  // b.none
  40da50:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40da54:	sub	x19, x19, x24
  40da58:	cmp	x24, x20
  40da5c:	b.ne	40db04 <wcrtomb@plt+0x8ee4>  // b.any
  40da60:	cmp	x19, #0x0
  40da64:	b.le	40dc08 <wcrtomb@plt+0x8fe8>
  40da68:	bl	406550 <wcrtomb@plt+0x1930>
  40da6c:	mov	x22, x19
  40da70:	mov	x21, x0
  40da74:	bl	406128 <wcrtomb@plt+0x1508>
  40da78:	mov	x20, x0
  40da7c:	cmp	x19, x0
  40da80:	b.cs	40da28 <wcrtomb@plt+0x8e08>  // b.hs, b.nlast
  40da84:	ands	x2, x19, #0x1ff
  40da88:	b.ne	40da94 <wcrtomb@plt+0x8e74>  // b.any
  40da8c:	mov	x20, x19
  40da90:	b	40da28 <wcrtomb@plt+0x8e08>
  40da94:	sub	x2, x26, x2
  40da98:	add	x0, x21, x19
  40da9c:	mov	w1, #0x0                   	// #0
  40daa0:	mov	x20, x19
  40daa4:	bl	404410 <memset@plt>
  40daa8:	b	40da28 <wcrtomb@plt+0x8e08>
  40daac:	ldr	x0, [x23]
  40dab0:	mov	x2, x20
  40dab4:	ldr	x1, [x23, #136]
  40dab8:	sub	x1, x1, x19
  40dabc:	bl	420328 <wcrtomb@plt+0x1b708>
  40dac0:	bl	406550 <wcrtomb@plt+0x1930>
  40dac4:	mov	x20, x0
  40dac8:	mov	x2, #0x200                 	// #512
  40dacc:	mov	w1, #0x0                   	// #0
  40dad0:	bl	404410 <memset@plt>
  40dad4:	sub	x19, x19, #0x200
  40dad8:	mov	x0, x20
  40dadc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40dae0:	cmp	x19, #0x0
  40dae4:	b.gt	40dac0 <wcrtomb@plt+0x8ea0>
  40dae8:	ldp	x21, x22, [sp, #32]
  40daec:	mov	w0, #0x1                   	// #1
  40daf0:	ldp	x19, x20, [sp, #16]
  40daf4:	ldp	x23, x24, [sp, #48]
  40daf8:	ldp	x25, x26, [sp, #64]
  40dafc:	ldp	x29, x30, [sp], #112
  40db00:	ret
  40db04:	add	x0, x21, x24
  40db08:	sub	x2, x20, x24
  40db0c:	mov	w1, #0x0                   	// #0
  40db10:	bl	404410 <memset@plt>
  40db14:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40db18:	ldr	w0, [x0, #432]
  40db1c:	tbz	w0, #7, 40db84 <wcrtomb@plt+0x8f64>
  40db20:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40db24:	ldr	x0, [x0, #1136]
  40db28:	cbz	x0, 40db30 <wcrtomb@plt+0x8f10>
  40db2c:	blr	x0
  40db30:	mov	x3, x19
  40db34:	mov	w4, #0x5                   	// #5
  40db38:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40db3c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40db40:	add	x2, x2, #0x888
  40db44:	add	x1, x1, #0x8b8
  40db48:	mov	x0, #0x0                   	// #0
  40db4c:	bl	4048f0 <dcngettext@plt>
  40db50:	mov	x21, x0
  40db54:	ldr	x0, [x23]
  40db58:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40db5c:	mov	x23, x0
  40db60:	add	x1, sp, #0x58
  40db64:	mov	x0, x19
  40db68:	bl	446868 <argp_parse@@Base+0x6a88>
  40db6c:	mov	x4, x0
  40db70:	mov	x3, x23
  40db74:	mov	x2, x21
  40db78:	mov	w1, #0x0                   	// #0
  40db7c:	mov	w0, #0x0                   	// #0
  40db80:	bl	404050 <error@plt>
  40db84:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40db88:	ldrb	w0, [x0, #1081]
  40db8c:	cbz	w0, 40dbe4 <wcrtomb@plt+0x8fc4>
  40db90:	sub	x20, x22, x20
  40db94:	cmp	x20, #0x0
  40db98:	b.le	40dae8 <wcrtomb@plt+0x8ec8>
  40db9c:	sub	x21, x20, #0x1
  40dba0:	sub	x19, x20, #0x200
  40dba4:	and	x21, x21, #0xfffffffffffffe00
  40dba8:	sub	x21, x19, x21
  40dbac:	b	40dbb4 <wcrtomb@plt+0x8f94>
  40dbb0:	sub	x19, x19, #0x200
  40dbb4:	bl	406550 <wcrtomb@plt+0x1930>
  40dbb8:	mov	x20, x0
  40dbbc:	mov	x2, #0x200                 	// #512
  40dbc0:	mov	w1, #0x0                   	// #0
  40dbc4:	bl	404410 <memset@plt>
  40dbc8:	mov	x0, x20
  40dbcc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40dbd0:	cmp	x19, x21
  40dbd4:	b.ne	40dbb0 <wcrtomb@plt+0x8f90>  // b.any
  40dbd8:	mov	w0, #0x1                   	// #1
  40dbdc:	ldp	x21, x22, [sp, #32]
  40dbe0:	b	40daf0 <wcrtomb@plt+0x8ed0>
  40dbe4:	mov	w0, #0x1                   	// #1
  40dbe8:	bl	42f548 <wcrtomb@plt+0x2a928>
  40dbec:	b	40db90 <wcrtomb@plt+0x8f70>
  40dbf0:	mov	w0, #0x2                   	// #2
  40dbf4:	ldp	x19, x20, [sp, #16]
  40dbf8:	ldp	x23, x24, [sp, #48]
  40dbfc:	ldp	x25, x26, [sp, #64]
  40dc00:	ldp	x29, x30, [sp], #112
  40dc04:	ret
  40dc08:	ldp	x21, x22, [sp, #32]
  40dc0c:	b	40d9d0 <wcrtomb@plt+0x8db0>
  40dc10:	cmp	x0, #0x0
  40dc14:	b.le	40dc74 <wcrtomb@plt+0x9054>
  40dc18:	stp	x29, x30, [sp, #-48]!
  40dc1c:	mov	x29, sp
  40dc20:	str	x21, [sp, #32]
  40dc24:	sub	x21, x0, #0x1
  40dc28:	and	x21, x21, #0xfffffffffffffe00
  40dc2c:	stp	x19, x20, [sp, #16]
  40dc30:	sub	x20, x0, #0x200
  40dc34:	sub	x21, x20, x21
  40dc38:	b	40dc40 <wcrtomb@plt+0x9020>
  40dc3c:	sub	x20, x20, #0x200
  40dc40:	bl	406550 <wcrtomb@plt+0x1930>
  40dc44:	mov	x19, x0
  40dc48:	mov	x2, #0x200                 	// #512
  40dc4c:	mov	w1, #0x0                   	// #0
  40dc50:	bl	404410 <memset@plt>
  40dc54:	mov	x0, x19
  40dc58:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40dc5c:	cmp	x20, x21
  40dc60:	b.ne	40dc3c <wcrtomb@plt+0x901c>  // b.any
  40dc64:	ldp	x19, x20, [sp, #16]
  40dc68:	ldr	x21, [sp, #32]
  40dc6c:	ldp	x29, x30, [sp], #48
  40dc70:	ret
  40dc74:	ret
  40dc78:	stp	x29, x30, [sp, #-32]!
  40dc7c:	mov	x29, sp
  40dc80:	str	x19, [sp, #16]
  40dc84:	mov	x19, x0
  40dc88:	ldr	w0, [x19, #408]
  40dc8c:	bl	404610 <fdopendir@plt>
  40dc90:	str	x0, [x19, #400]
  40dc94:	cbnz	x0, 40dd1c <wcrtomb@plt+0x90fc>
  40dc98:	bl	404ad0 <__errno_location@plt>
  40dc9c:	ldr	w0, [x0]
  40dca0:	cmp	w0, #0x18
  40dca4:	b.eq	40dcb8 <wcrtomb@plt+0x9098>  // b.none
  40dca8:	mov	x0, #0x0                   	// #0
  40dcac:	ldr	x19, [sp, #16]
  40dcb0:	ldp	x29, x30, [sp], #32
  40dcb4:	ret
  40dcb8:	ldr	x1, [x19, #392]
  40dcbc:	cbz	x1, 40dca8 <wcrtomb@plt+0x9088>
  40dcc0:	ldr	x0, [x1, #392]
  40dcc4:	cbz	x0, 40dca8 <wcrtomb@plt+0x9088>
  40dcc8:	ldr	w2, [x0, #408]
  40dccc:	ldr	x1, [x0, #392]
  40dcd0:	cmp	w2, #0x0
  40dcd4:	b.le	40dcf8 <wcrtomb@plt+0x90d8>
  40dcd8:	cbz	x1, 40dd08 <wcrtomb@plt+0x90e8>
  40dcdc:	ldr	w2, [x1, #408]
  40dce0:	cmp	w2, #0x0
  40dce4:	b.le	40dd08 <wcrtomb@plt+0x90e8>
  40dce8:	mov	x0, x1
  40dcec:	cmp	w2, #0x0
  40dcf0:	ldr	x1, [x0, #392]
  40dcf4:	b.gt	40dcd8 <wcrtomb@plt+0x90b8>
  40dcf8:	cbz	x1, 40dca8 <wcrtomb@plt+0x9088>
  40dcfc:	ldr	w2, [x1, #408]
  40dd00:	mov	x0, x1
  40dd04:	b	40dcec <wcrtomb@plt+0x90cc>
  40dd08:	bl	42f3c0 <wcrtomb@plt+0x2a7a0>
  40dd0c:	ldr	w0, [x19, #408]
  40dd10:	bl	404610 <fdopendir@plt>
  40dd14:	str	x0, [x19, #400]
  40dd18:	cbz	x0, 40dc98 <wcrtomb@plt+0x9078>
  40dd1c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40dd20:	ldr	x19, [sp, #16]
  40dd24:	ldp	x29, x30, [sp], #32
  40dd28:	ldr	w1, [x1, #648]
  40dd2c:	b	44f3f8 <argp_parse@@Base+0xf618>
  40dd30:	stp	x29, x30, [sp, #-64]!
  40dd34:	mov	x29, sp
  40dd38:	stp	x21, x22, [sp, #32]
  40dd3c:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40dd40:	add	x21, x21, #0x7f0
  40dd44:	ldr	x0, [x21, #8]
  40dd48:	cbz	x0, 40ddd0 <wcrtomb@plt+0x91b0>
  40dd4c:	stp	x19, x20, [sp, #16]
  40dd50:	bl	444a00 <argp_parse@@Base+0x4c20>
  40dd54:	mov	x19, x0
  40dd58:	cbz	x0, 40dddc <wcrtomb@plt+0x91bc>
  40dd5c:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40dd60:	add	x22, x22, #0x8e8
  40dd64:	str	x23, [sp, #48]
  40dd68:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  40dd6c:	nop
  40dd70:	ldr	w0, [x19, #16]
  40dd74:	cbz	w0, 40ddb4 <wcrtomb@plt+0x9194>
  40dd78:	ldr	x0, [x23, #1136]
  40dd7c:	cbz	x0, 40dd84 <wcrtomb@plt+0x9164>
  40dd80:	blr	x0
  40dd84:	mov	x1, x22
  40dd88:	mov	w2, #0x5                   	// #5
  40dd8c:	mov	x0, #0x0                   	// #0
  40dd90:	bl	4049c0 <dcgettext@plt>
  40dd94:	mov	x20, x0
  40dd98:	add	x0, x19, #0x14
  40dd9c:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  40dda0:	mov	x3, x0
  40dda4:	mov	x2, x20
  40dda8:	mov	w1, #0x0                   	// #0
  40ddac:	mov	w0, #0x0                   	// #0
  40ddb0:	bl	404050 <error@plt>
  40ddb4:	ldr	x0, [x21, #8]
  40ddb8:	mov	x1, x19
  40ddbc:	bl	444a48 <argp_parse@@Base+0x4c68>
  40ddc0:	mov	x19, x0
  40ddc4:	cbnz	x0, 40dd70 <wcrtomb@plt+0x9150>
  40ddc8:	ldp	x19, x20, [sp, #16]
  40ddcc:	ldr	x23, [sp, #48]
  40ddd0:	ldp	x21, x22, [sp, #32]
  40ddd4:	ldp	x29, x30, [sp], #64
  40ddd8:	ret
  40dddc:	ldp	x19, x20, [sp, #16]
  40dde0:	b	40ddd0 <wcrtomb@plt+0x91b0>
  40dde4:	nop
  40dde8:	stp	x29, x30, [sp, #-48]!
  40ddec:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40ddf0:	add	x3, x3, #0x7f0
  40ddf4:	mov	x29, sp
  40ddf8:	stp	x19, x20, [sp, #16]
  40ddfc:	mov	x19, x0
  40de00:	ldrb	w0, [x3, #48]
  40de04:	stp	x21, x22, [sp, #32]
  40de08:	mov	x21, x1
  40de0c:	mov	w22, w2
  40de10:	cbz	w0, 40de54 <wcrtomb@plt+0x9234>
  40de14:	cbz	x19, 40de7c <wcrtomb@plt+0x925c>
  40de18:	ldr	w0, [x19, #408]
  40de1c:	mov	w2, w22
  40de20:	mov	x1, x21
  40de24:	bl	4045b0 <__openat_2@plt>
  40de28:	mov	w20, w0
  40de2c:	tbz	w0, #31, 40de40 <wcrtomb@plt+0x9220>
  40de30:	bl	404ad0 <__errno_location@plt>
  40de34:	ldr	w0, [x0]
  40de38:	cmp	w0, #0x18
  40de3c:	b.eq	40de9c <wcrtomb@plt+0x927c>  // b.none
  40de40:	mov	w0, w20
  40de44:	ldp	x19, x20, [sp, #16]
  40de48:	ldp	x21, x22, [sp, #32]
  40de4c:	ldp	x29, x30, [sp], #48
  40de50:	ret
  40de54:	mov	w1, #0x1                   	// #1
  40de58:	mov	w0, #0x2                   	// #2
  40de5c:	strb	w1, [x3, #48]
  40de60:	bl	4045a0 <strerror@plt>
  40de64:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  40de68:	mov	w2, #0x5                   	// #5
  40de6c:	add	x1, x1, #0x7e8
  40de70:	mov	x0, #0x0                   	// #0
  40de74:	bl	4049c0 <dcgettext@plt>
  40de78:	cbnz	x19, 40de18 <wcrtomb@plt+0x91f8>
  40de7c:	mov	w2, w22
  40de80:	mov	x1, x21
  40de84:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40de88:	ldp	x19, x20, [sp, #16]
  40de8c:	ldp	x21, x22, [sp, #32]
  40de90:	ldp	x29, x30, [sp], #48
  40de94:	ldr	w0, [x0, #2200]
  40de98:	b	4045b0 <__openat_2@plt>
  40de9c:	ldr	x0, [x19, #392]
  40dea0:	cbz	x0, 40de40 <wcrtomb@plt+0x9220>
  40dea4:	ldr	x0, [x0, #392]
  40dea8:	cbz	x0, 40de40 <wcrtomb@plt+0x9220>
  40deac:	ldr	w4, [x0, #408]
  40deb0:	ldr	x3, [x0, #392]
  40deb4:	cmp	w4, #0x0
  40deb8:	b.le	40dee0 <wcrtomb@plt+0x92c0>
  40debc:	nop
  40dec0:	cbz	x3, 40def0 <wcrtomb@plt+0x92d0>
  40dec4:	ldr	w4, [x3, #408]
  40dec8:	cmp	w4, #0x0
  40decc:	b.le	40def0 <wcrtomb@plt+0x92d0>
  40ded0:	mov	x0, x3
  40ded4:	cmp	w4, #0x0
  40ded8:	ldr	x3, [x0, #392]
  40dedc:	b.gt	40dec0 <wcrtomb@plt+0x92a0>
  40dee0:	cbz	x3, 40de40 <wcrtomb@plt+0x9220>
  40dee4:	ldr	w4, [x3, #408]
  40dee8:	mov	x0, x3
  40deec:	b	40ded4 <wcrtomb@plt+0x92b4>
  40def0:	bl	42f3c0 <wcrtomb@plt+0x2a7a0>
  40def4:	b	40de14 <wcrtomb@plt+0x91f4>
  40def8:	stp	x29, x30, [sp, #-64]!
  40defc:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40df00:	mov	x29, sp
  40df04:	stp	x19, x20, [sp, #16]
  40df08:	ldr	x19, [x2, #2056]
  40df0c:	cbz	x19, 40df9c <wcrtomb@plt+0x937c>
  40df10:	stp	x21, x22, [sp, #32]
  40df14:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  40df18:	mov	x21, x0
  40df1c:	add	x22, x22, #0x344
  40df20:	str	x23, [sp, #48]
  40df24:	mov	x23, x1
  40df28:	b	40df3c <wcrtomb@plt+0x931c>
  40df2c:	mov	w0, w20
  40df30:	bl	4045c0 <close@plt>
  40df34:	ldr	x19, [x19, #32]
  40df38:	cbz	x19, 40df94 <wcrtomb@plt+0x9374>
  40df3c:	ldr	w2, [x22]
  40df40:	mov	x0, x21
  40df44:	ldr	x1, [x19]
  40df48:	bl	40dde8 <wcrtomb@plt+0x91c8>
  40df4c:	mov	w20, w0
  40df50:	tbnz	w0, #31, 40df34 <wcrtomb@plt+0x9314>
  40df54:	ldr	x2, [x19, #24]
  40df58:	cbz	x2, 40df68 <wcrtomb@plt+0x9348>
  40df5c:	blr	x2
  40df60:	tst	w0, #0xff
  40df64:	b.eq	40df2c <wcrtomb@plt+0x930c>  // b.none
  40df68:	mov	w0, w20
  40df6c:	bl	4045c0 <close@plt>
  40df70:	cbz	x23, 40df7c <wcrtomb@plt+0x935c>
  40df74:	ldr	x0, [x19]
  40df78:	str	x0, [x23]
  40df7c:	ldr	w0, [x19, #16]
  40df80:	ldp	x19, x20, [sp, #16]
  40df84:	ldp	x21, x22, [sp, #32]
  40df88:	ldr	x23, [sp, #48]
  40df8c:	ldp	x29, x30, [sp], #64
  40df90:	ret
  40df94:	ldp	x21, x22, [sp, #32]
  40df98:	ldr	x23, [sp, #48]
  40df9c:	mov	w0, #0x0                   	// #0
  40dfa0:	ldp	x19, x20, [sp, #16]
  40dfa4:	ldp	x29, x30, [sp], #64
  40dfa8:	ret
  40dfac:	nop
  40dfb0:	stp	x29, x30, [sp, #-176]!
  40dfb4:	mov	x29, sp
  40dfb8:	stp	x19, x20, [sp, #16]
  40dfbc:	ldr	x19, [x0, #392]
  40dfc0:	cbz	x19, 40e00c <wcrtomb@plt+0x93ec>
  40dfc4:	ldr	w1, [x19, #408]
  40dfc8:	cbnz	w1, 40e00c <wcrtomb@plt+0x93ec>
  40dfcc:	ldr	w0, [x0, #408]
  40dfd0:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x1bbf0>
  40dfd4:	str	x21, [sp, #32]
  40dfd8:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  40dfdc:	add	x1, x1, #0xb00
  40dfe0:	ldr	w2, [x21, #828]
  40dfe4:	bl	4045b0 <__openat_2@plt>
  40dfe8:	mov	w20, w0
  40dfec:	tbz	w0, #31, 40e064 <wcrtomb@plt+0x9444>
  40dff0:	bl	404ad0 <__errno_location@plt>
  40dff4:	ldr	w20, [x0]
  40dff8:	cmp	w20, #0x0
  40dffc:	neg	w20, w20
  40e000:	b.gt	40e018 <wcrtomb@plt+0x93f8>
  40e004:	ldr	x21, [sp, #32]
  40e008:	str	w20, [x19, #408]
  40e00c:	ldp	x19, x20, [sp, #16]
  40e010:	ldp	x29, x30, [sp], #176
  40e014:	ret
  40e018:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40e01c:	ldr	w2, [x21, #828]
  40e020:	ldr	x1, [x19]
  40e024:	ldr	w0, [x0, #2200]
  40e028:	bl	4045b0 <__openat_2@plt>
  40e02c:	mov	w21, w0
  40e030:	tbnz	w0, #31, 40e004 <wcrtomb@plt+0x93e4>
  40e034:	add	x2, sp, #0x30
  40e038:	mov	w1, w20
  40e03c:	mov	w0, #0x0                   	// #0
  40e040:	bl	4049a0 <__fxstat@plt>
  40e044:	cbnz	w0, 40e058 <wcrtomb@plt+0x9438>
  40e048:	ldr	x0, [sp, #56]
  40e04c:	ldr	x1, [x19, #96]
  40e050:	cmp	x1, x0
  40e054:	b.eq	40e0b4 <wcrtomb@plt+0x9494>  // b.none
  40e058:	mov	w0, w21
  40e05c:	bl	4045c0 <close@plt>
  40e060:	b	40e004 <wcrtomb@plt+0x93e4>
  40e064:	mov	w1, w0
  40e068:	add	x2, sp, #0x30
  40e06c:	mov	w0, #0x0                   	// #0
  40e070:	bl	4049a0 <__fxstat@plt>
  40e074:	cbnz	w0, 40e088 <wcrtomb@plt+0x9468>
  40e078:	ldr	x0, [sp, #56]
  40e07c:	ldr	x1, [x19, #96]
  40e080:	cmp	x1, x0
  40e084:	b.eq	40e0a0 <wcrtomb@plt+0x9480>  // b.none
  40e088:	mov	w0, w20
  40e08c:	mov	w20, #0x2                   	// #2
  40e090:	bl	4045c0 <close@plt>
  40e094:	ldr	x21, [sp, #32]
  40e098:	str	w20, [x19, #408]
  40e09c:	b	40e00c <wcrtomb@plt+0x93ec>
  40e0a0:	ldr	x0, [sp, #48]
  40e0a4:	ldr	x1, [x19, #88]
  40e0a8:	cmp	x1, x0
  40e0ac:	b.ne	40e088 <wcrtomb@plt+0x9468>  // b.any
  40e0b0:	b	40e004 <wcrtomb@plt+0x93e4>
  40e0b4:	ldr	x0, [sp, #48]
  40e0b8:	ldr	x1, [x19, #88]
  40e0bc:	cmp	x1, x0
  40e0c0:	b.ne	40e058 <wcrtomb@plt+0x9438>  // b.any
  40e0c4:	mov	w20, w21
  40e0c8:	b	40e004 <wcrtomb@plt+0x93e4>
  40e0cc:	nop
  40e0d0:	stp	x29, x30, [sp, #-480]!
  40e0d4:	mov	x29, sp
  40e0d8:	stp	x19, x20, [sp, #16]
  40e0dc:	mov	x19, x0
  40e0e0:	mov	x20, x1
  40e0e4:	add	x0, sp, #0x38
  40e0e8:	str	x21, [sp, #32]
  40e0ec:	mov	x21, x2
  40e0f0:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  40e0f4:	mov	x2, x21
  40e0f8:	mov	x1, x20
  40e0fc:	add	x0, sp, #0x38
  40e100:	str	x19, [sp, #448]
  40e104:	bl	40e138 <wcrtomb@plt+0x9518>
  40e108:	cbz	x19, 40e120 <wcrtomb@plt+0x9500>
  40e10c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e110:	ldr	x0, [x0, #960]
  40e114:	cbz	x0, 40e120 <wcrtomb@plt+0x9500>
  40e118:	mov	x0, x19
  40e11c:	bl	4195a0 <wcrtomb@plt+0x14980>
  40e120:	add	x0, sp, #0x38
  40e124:	bl	42f438 <wcrtomb@plt+0x2a818>
  40e128:	ldp	x19, x20, [sp, #16]
  40e12c:	ldr	x21, [sp, #32]
  40e130:	ldp	x29, x30, [sp], #480
  40e134:	ret
  40e138:	stp	x29, x30, [sp, #-272]!
  40e13c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e140:	mov	x29, sp
  40e144:	stp	x19, x20, [sp, #16]
  40e148:	mov	x19, x2
  40e14c:	ldr	x20, [x0, #392]
  40e150:	stp	x21, x22, [sp, #32]
  40e154:	mov	x21, x1
  40e158:	stp	x23, x24, [sp, #48]
  40e15c:	cmp	x20, #0x0
  40e160:	ldrb	w23, [x3, #720]
  40e164:	stp	x25, x26, [sp, #64]
  40e168:	cset	w24, eq  // eq = none
  40e16c:	stp	x27, x28, [sp, #80]
  40e170:	mov	x28, x0
  40e174:	cbz	x20, 40e214 <wcrtomb@plt+0x95f4>
  40e178:	ldr	w22, [x20, #408]
  40e17c:	cbz	w23, 40e194 <wcrtomb@plt+0x9574>
  40e180:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40e184:	mov	x1, x2
  40e188:	add	x0, x0, #0x900
  40e18c:	bl	42c090 <wcrtomb@plt+0x27470>
  40e190:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e194:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e198:	mov	x1, x19
  40e19c:	mov	x0, x28
  40e1a0:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40e1a4:	ldrb	w2, [x25, #1080]
  40e1a8:	add	x23, x28, #0x8
  40e1ac:	mov	w1, #0x0                   	// #0
  40e1b0:	mov	x0, x19
  40e1b4:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  40e1b8:	mov	x1, x0
  40e1bc:	mov	x0, x23
  40e1c0:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40e1c4:	mov	x0, x23
  40e1c8:	mov	w1, #0x1                   	// #1
  40e1cc:	mov	w23, #0x1                   	// #1
  40e1d0:	bl	430a20 <wcrtomb@plt+0x2be00>
  40e1d4:	tbz	w22, #31, 40e258 <wcrtomb@plt+0x9638>
  40e1d8:	bl	404ad0 <__errno_location@plt>
  40e1dc:	neg	w22, w22
  40e1e0:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40e1e4:	add	x2, x2, #0x300
  40e1e8:	str	w22, [x0]
  40e1ec:	mov	w1, w24
  40e1f0:	mov	x0, x19
  40e1f4:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40e1f8:	ldp	x19, x20, [sp, #16]
  40e1fc:	ldp	x21, x22, [sp, #32]
  40e200:	ldp	x23, x24, [sp, #48]
  40e204:	ldp	x25, x26, [sp, #64]
  40e208:	ldp	x27, x28, [sp, #80]
  40e20c:	ldp	x29, x30, [sp], #272
  40e210:	ret
  40e214:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40e218:	ldr	w22, [x1, #2200]
  40e21c:	cbnz	w23, 40e3ec <wcrtomb@plt+0x97cc>
  40e220:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e224:	mov	x1, x2
  40e228:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40e22c:	add	x26, x28, #0x8
  40e230:	ldrb	w2, [x25, #1080]
  40e234:	mov	x0, x19
  40e238:	mov	w1, #0x0                   	// #0
  40e23c:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  40e240:	mov	x1, x0
  40e244:	mov	x0, x26
  40e248:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40e24c:	mov	x0, x26
  40e250:	mov	w1, #0x1                   	// #1
  40e254:	bl	430a20 <wcrtomb@plt+0x2be00>
  40e258:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e25c:	add	x27, x28, #0x58
  40e260:	mov	x3, x27
  40e264:	mov	x2, x21
  40e268:	ldr	w4, [x0, #688]
  40e26c:	mov	w1, w22
  40e270:	mov	w0, #0x0                   	// #0
  40e274:	bl	404c00 <__fxstatat@plt>
  40e278:	mov	w26, w0
  40e27c:	cbnz	w0, 40e47c <wcrtomb@plt+0x985c>
  40e280:	ldr	w1, [x27, #16]
  40e284:	and	w0, w1, #0xf000
  40e288:	cmp	w0, #0x4, lsl #12
  40e28c:	b.eq	40e2ac <wcrtomb@plt+0x968c>  // b.none
  40e290:	cmp	w0, #0x8, lsl #12
  40e294:	b.ne	40e2e0 <wcrtomb@plt+0x96c0>  // b.any
  40e298:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e29c:	ldrb	w0, [x0, #664]
  40e2a0:	cbnz	w0, 40e67c <wcrtomb@plt+0x9a5c>
  40e2a4:	ldr	x0, [x27, #48]
  40e2a8:	cbz	x0, 40e598 <wcrtomb@plt+0x9978>
  40e2ac:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e2b0:	mov	x1, x21
  40e2b4:	mov	x0, x20
  40e2b8:	ldr	w2, [x2, #836]
  40e2bc:	bl	40dde8 <wcrtomb@plt+0x91c8>
  40e2c0:	mov	w26, w0
  40e2c4:	tbnz	w0, #31, 40e670 <wcrtomb@plt+0x9a50>
  40e2c8:	str	w26, [x28, #408]
  40e2cc:	mov	w1, w0
  40e2d0:	mov	x2, x27
  40e2d4:	mov	w0, #0x0                   	// #0
  40e2d8:	bl	4049a0 <__fxstat@plt>
  40e2dc:	cbnz	w0, 40e47c <wcrtomb@plt+0x985c>
  40e2e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e2e4:	ldp	q2, q1, [x28, #160]
  40e2e8:	ldr	q0, [x28, #192]
  40e2ec:	ldr	x4, [x28, #192]
  40e2f0:	str	x4, [sp, #96]
  40e2f4:	ldrb	w1, [x0, #161]
  40e2f8:	ldr	x27, [x28, #136]
  40e2fc:	str	x27, [x28, #264]
  40e300:	ldr	x4, [x28, #200]
  40e304:	str	x4, [sp, #104]
  40e308:	eor	w0, w1, #0x1
  40e30c:	stur	q2, [x28, #216]
  40e310:	orr	w0, w24, w0
  40e314:	stur	q1, [x28, #232]
  40e318:	stur	q0, [x28, #248]
  40e31c:	ldp	x2, x3, [x28, #176]
  40e320:	cbz	w0, 40e358 <wcrtomb@plt+0x9738>
  40e324:	ldr	w0, [x28, #104]
  40e328:	and	w0, w0, #0xf000
  40e32c:	cmp	w0, #0x4, lsl #12
  40e330:	b.eq	40e358 <wcrtomb@plt+0x9738>  // b.none
  40e334:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e338:	add	x4, x0, #0xa8
  40e33c:	ldr	x0, [x0, #168]
  40e340:	ldr	x4, [x4, #8]
  40e344:	cmp	x2, x0
  40e348:	b.lt	40e5ac <wcrtomb@plt+0x998c>  // b.tstop
  40e34c:	b.gt	40e358 <wcrtomb@plt+0x9738>
  40e350:	cmp	w3, w4
  40e354:	b.mi	40e5ac <wcrtomb@plt+0x998c>  // b.first
  40e358:	mov	x0, x28
  40e35c:	bl	42a4c0 <wcrtomb@plt+0x258a0>
  40e360:	tst	w0, #0xff
  40e364:	b.ne	40e428 <wcrtomb@plt+0x9808>  // b.any
  40e368:	ldr	w0, [x28, #104]
  40e36c:	and	w0, w0, #0xf000
  40e370:	str	w0, [sp, #116]
  40e374:	cmp	w0, #0x4, lsl #12
  40e378:	b.ne	40e488 <wcrtomb@plt+0x9868>  // b.any
  40e37c:	mov	w4, #0x0                   	// #0
  40e380:	mov	w0, w22
  40e384:	mov	x2, x28
  40e388:	mov	x1, x21
  40e38c:	mov	w3, #0x0                   	// #0
  40e390:	bl	4325a8 <wcrtomb@plt+0x2d988>
  40e394:	mov	w0, w22
  40e398:	mov	w3, w26
  40e39c:	mov	x2, x28
  40e3a0:	mov	x1, x21
  40e3a4:	bl	432eb8 <wcrtomb@plt+0x2e298>
  40e3a8:	mov	w0, w22
  40e3ac:	mov	w3, w26
  40e3b0:	mov	x2, x28
  40e3b4:	mov	x1, x21
  40e3b8:	bl	432a50 <wcrtomb@plt+0x2de30>
  40e3bc:	ldr	x25, [x28]
  40e3c0:	mov	x0, x25
  40e3c4:	bl	403ff0 <strlen@plt>
  40e3c8:	mov	x22, x0
  40e3cc:	nop
  40e3d0:	cbz	x22, 40eac0 <wcrtomb@plt+0x9ea0>
  40e3d4:	sub	x0, x22, #0x1
  40e3d8:	ldrb	w1, [x25, x0]
  40e3dc:	cmp	w1, #0x2f
  40e3e0:	b.ne	40ee94 <wcrtomb@plt+0xa274>  // b.any
  40e3e4:	mov	x22, x0
  40e3e8:	b	40e3d0 <wcrtomb@plt+0x97b0>
  40e3ec:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40e3f0:	mov	x1, x2
  40e3f4:	add	x0, x0, #0x900
  40e3f8:	bl	42c090 <wcrtomb@plt+0x27470>
  40e3fc:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e400:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e404:	mov	x1, x19
  40e408:	mov	x0, x28
  40e40c:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40e410:	ldrb	w2, [x25, #1080]
  40e414:	add	x26, x28, #0x8
  40e418:	mov	x0, x19
  40e41c:	mov	w1, #0x0                   	// #0
  40e420:	mov	w23, #0x0                   	// #0
  40e424:	b	40e23c <wcrtomb@plt+0x961c>
  40e428:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40e42c:	ldr	w0, [x0, #432]
  40e430:	tbz	w0, #10, 40e1f8 <wcrtomb@plt+0x95d8>
  40e434:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e438:	ldr	x0, [x0, #1136]
  40e43c:	cbz	x0, 40e444 <wcrtomb@plt+0x9824>
  40e440:	blr	x0
  40e444:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40e448:	add	x1, x1, #0x930
  40e44c:	mov	w2, #0x5                   	// #5
  40e450:	mov	x0, #0x0                   	// #0
  40e454:	bl	4049c0 <dcgettext@plt>
  40e458:	mov	x20, x0
  40e45c:	mov	x0, x19
  40e460:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40e464:	mov	x2, x20
  40e468:	mov	x3, x0
  40e46c:	mov	w1, #0x0                   	// #0
  40e470:	mov	w0, #0x0                   	// #0
  40e474:	bl	404050 <error@plt>
  40e478:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40e47c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40e480:	add	x2, x2, #0x3c8
  40e484:	b	40e1ec <wcrtomb@plt+0x95cc>
  40e488:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40e48c:	add	x1, x0, #0x7f0
  40e490:	str	x1, [sp, #120]
  40e494:	ldr	x0, [x1, #8]
  40e498:	cbz	x0, 40e610 <wcrtomb@plt+0x99f0>
  40e49c:	ldr	w1, [x1, #52]
  40e4a0:	ldr	w2, [x28, #108]
  40e4a4:	cmp	w2, w1
  40e4a8:	b.hi	40e4b8 <wcrtomb@plt+0x9898>  // b.pmore
  40e4ac:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e4b0:	ldrb	w1, [x1, #872]
  40e4b4:	cbz	w1, 40e610 <wcrtomb@plt+0x99f0>
  40e4b8:	ldur	q0, [x28, #88]
  40e4bc:	add	x1, sp, #0x90
  40e4c0:	str	q0, [sp, #144]
  40e4c4:	bl	444958 <argp_parse@@Base+0x4b78>
  40e4c8:	mov	x20, x0
  40e4cc:	cbz	x0, 40e7e0 <wcrtomb@plt+0x9bc0>
  40e4d0:	ldrb	w2, [x25, #1080]
  40e4d4:	mov	w1, #0x1                   	// #1
  40e4d8:	add	x0, x0, #0x14
  40e4dc:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  40e4e0:	mov	x25, x0
  40e4e4:	ldr	w1, [x20, #16]
  40e4e8:	cbz	w1, 40e4f4 <wcrtomb@plt+0x98d4>
  40e4ec:	sub	w1, w1, #0x1
  40e4f0:	str	w1, [x20, #16]
  40e4f4:	bl	406070 <wcrtomb@plt+0x1450>
  40e4f8:	mov	x20, x0
  40e4fc:	mov	x1, x25
  40e500:	add	x0, x28, #0x18
  40e504:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  40e508:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e50c:	mov	x0, x25
  40e510:	ldr	w1, [x1, #944]
  40e514:	cmp	w1, #0x2
  40e518:	cset	x1, ne  // ne = any
  40e51c:	add	x1, x1, #0x63
  40e520:	stp	x1, x1, [sp, #128]
  40e524:	bl	403ff0 <strlen@plt>
  40e528:	ldr	x1, [sp, #128]
  40e52c:	cmp	x0, x1
  40e530:	b.hi	40ef30 <wcrtomb@plt+0xa310>  // b.pmore
  40e534:	str	xzr, [x28, #136]
  40e538:	mov	x0, x28
  40e53c:	bl	40ca58 <wcrtomb@plt+0x7e38>
  40e540:	mov	x1, x0
  40e544:	cbz	x0, 40e7e0 <wcrtomb@plt+0x9bc0>
  40e548:	add	x4, x0, #0x9d
  40e54c:	mov	x2, #0x0                   	// #0
  40e550:	ldrb	w3, [x25, x2]
  40e554:	strb	w3, [x4, x2]
  40e558:	cbz	w3, 40e568 <wcrtomb@plt+0x9948>
  40e55c:	add	x2, x2, #0x1
  40e560:	cmp	x2, #0x64
  40e564:	b.ne	40e550 <wcrtomb@plt+0x9930>  // b.any
  40e568:	mov	w0, #0x31                  	// #49
  40e56c:	strb	w0, [x1, #156]
  40e570:	mov	x2, x20
  40e574:	mov	x0, x28
  40e578:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40e57c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e580:	ldrb	w0, [x0, #872]
  40e584:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e588:	ldr	x0, [x28]
  40e58c:	mov	w1, #0x0                   	// #0
  40e590:	bl	430d18 <wcrtomb@plt+0x2c0f8>
  40e594:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40e598:	mov	w0, #0x124                 	// #292
  40e59c:	and	w1, w1, w0
  40e5a0:	cmp	w1, w0
  40e5a4:	b.eq	40e2e0 <wcrtomb@plt+0x96c0>  // b.none
  40e5a8:	b	40e2ac <wcrtomb@plt+0x968c>
  40e5ac:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e5b0:	ldr	w2, [x2, #1100]
  40e5b4:	cmp	w2, #0x0
  40e5b8:	ldr	x2, [sp, #96]
  40e5bc:	ccmp	x2, x0, #0x1, ne  // ne = any
  40e5c0:	b.lt	40e5d8 <wcrtomb@plt+0x99b8>  // b.tstop
  40e5c4:	cmp	x2, x0
  40e5c8:	b.gt	40e358 <wcrtomb@plt+0x9738>
  40e5cc:	ldr	w0, [sp, #104]
  40e5d0:	cmp	w0, w4
  40e5d4:	b.pl	40e358 <wcrtomb@plt+0x9738>  // b.nfrst
  40e5d8:	cbnz	w1, 40e1f8 <wcrtomb@plt+0x95d8>
  40e5dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e5e0:	ldr	w0, [x0, #772]
  40e5e4:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e5e8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40e5ec:	ldr	w0, [x0, #432]
  40e5f0:	tbz	w0, #8, 40e1f8 <wcrtomb@plt+0x95d8>
  40e5f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e5f8:	ldr	x0, [x0, #1136]
  40e5fc:	cbz	x0, 40e604 <wcrtomb@plt+0x99e4>
  40e600:	blr	x0
  40e604:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40e608:	add	x1, x1, #0x908
  40e60c:	b	40e44c <wcrtomb@plt+0x982c>
  40e610:	ldr	w0, [sp, #116]
  40e614:	cmp	w0, #0x8, lsl #12
  40e618:	b.eq	40e6c8 <wcrtomb@plt+0x9aa8>  // b.none
  40e61c:	cmp	w0, #0xa, lsl #12
  40e620:	b.eq	40e7ec <wcrtomb@plt+0x9bcc>  // b.none
  40e624:	cmp	w0, #0x2, lsl #12
  40e628:	b.eq	40e94c <wcrtomb@plt+0x9d2c>  // b.none
  40e62c:	cmp	w0, #0x6, lsl #12
  40e630:	b.eq	40eea0 <wcrtomb@plt+0xa280>  // b.none
  40e634:	cmp	w0, #0x1, lsl #12
  40e638:	b.eq	40eed4 <wcrtomb@plt+0xa2b4>  // b.none
  40e63c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40e640:	cmp	w0, #0xc, lsl #12
  40e644:	ldr	w0, [x1, #432]
  40e648:	and	w0, w0, #0x20
  40e64c:	b.ne	40e8ec <wcrtomb@plt+0x9ccc>  // b.any
  40e650:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e654:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e658:	ldr	x0, [x0, #1136]
  40e65c:	cbz	x0, 40e664 <wcrtomb@plt+0x9a44>
  40e660:	blr	x0
  40e664:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40e668:	add	x1, x1, #0x9f0
  40e66c:	b	40e44c <wcrtomb@plt+0x982c>
  40e670:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40e674:	add	x2, x2, #0x300
  40e678:	b	40e1ec <wcrtomb@plt+0x95cc>
  40e67c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e680:	ldrb	w0, [x0, #825]
  40e684:	cbz	w0, 40e2e0 <wcrtomb@plt+0x96c0>
  40e688:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e68c:	ldrb	w0, [x0, #1040]
  40e690:	cbz	w0, 40e2e0 <wcrtomb@plt+0x96c0>
  40e694:	ldr	x0, [x27, #48]
  40e698:	ldr	x3, [x27, #64]
  40e69c:	cmp	x0, #0x0
  40e6a0:	add	x2, x0, #0x1ff
  40e6a4:	csel	x1, x2, x0, lt  // lt = tstop
  40e6a8:	tst	x0, #0x1ff
  40e6ac:	asr	x0, x1, #9
  40e6b0:	b.eq	40e6bc <wcrtomb@plt+0x9a9c>  // b.none
  40e6b4:	cmp	x2, #0x3fe
  40e6b8:	cinc	x0, x0, hi  // hi = pmore
  40e6bc:	cmp	x3, x0
  40e6c0:	b.lt	40e2ac <wcrtomb@plt+0x968c>  // b.tstop
  40e6c4:	b	40e2e0 <wcrtomb@plt+0x96c0>
  40e6c8:	mov	w4, #0x1                   	// #1
  40e6cc:	mov	x2, x28
  40e6d0:	mov	x1, x21
  40e6d4:	mov	w0, w22
  40e6d8:	mov	w3, #0x0                   	// #0
  40e6dc:	bl	4325a8 <wcrtomb@plt+0x2d988>
  40e6e0:	mov	w3, w26
  40e6e4:	mov	x2, x28
  40e6e8:	mov	x1, x21
  40e6ec:	mov	w0, w22
  40e6f0:	bl	432eb8 <wcrtomb@plt+0x2e298>
  40e6f4:	mov	w3, w26
  40e6f8:	mov	x2, x28
  40e6fc:	mov	x1, x21
  40e700:	mov	w0, w22
  40e704:	bl	432a50 <wcrtomb@plt+0x2de30>
  40e708:	cbz	w26, 40e748 <wcrtomb@plt+0x9b28>
  40e70c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e710:	ldrb	w0, [x0, #1040]
  40e714:	cbz	w0, 40e748 <wcrtomb@plt+0x9b28>
  40e718:	ldr	x0, [x28, #136]
  40e71c:	ldr	x3, [x28, #152]
  40e720:	cmp	x0, #0x0
  40e724:	add	x2, x0, #0x1ff
  40e728:	csel	x1, x2, x0, lt  // lt = tstop
  40e72c:	tst	x0, #0x1ff
  40e730:	asr	x0, x1, #9
  40e734:	b.eq	40e740 <wcrtomb@plt+0x9b20>  // b.none
  40e738:	cmp	x2, #0x3fe
  40e73c:	cinc	x0, x0, hi  // hi = pmore
  40e740:	cmp	x3, x0
  40e744:	b.lt	40f0a8 <wcrtomb@plt+0xa488>  // b.tstop
  40e748:	mov	x1, x28
  40e74c:	mov	w0, w26
  40e750:	bl	40d938 <wcrtomb@plt+0x8d18>
  40e754:	mov	w20, w0
  40e758:	cmp	w0, #0x1
  40e75c:	b.hi	40e7d4 <wcrtomb@plt+0x9bb4>  // b.pmore
  40e760:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e764:	ldrb	w0, [x0, #212]
  40e768:	cbnz	w0, 40e780 <wcrtomb@plt+0x9b60>
  40e76c:	ldr	x0, [sp, #120]
  40e770:	ldr	w1, [x28, #108]
  40e774:	ldr	w0, [x0, #52]
  40e778:	cmp	w1, w0
  40e77c:	b.hi	40e7c4 <wcrtomb@plt+0x9ba4>  // b.pmore
  40e780:	cbnz	w20, 40e7b8 <wcrtomb@plt+0x9b98>
  40e784:	cbnz	w26, 40ef4c <wcrtomb@plt+0xa32c>
  40e788:	cmp	w22, #0x0
  40e78c:	ccmp	w23, #0x0, #0x4, lt  // lt = tstop
  40e790:	b.eq	40f28c <wcrtomb@plt+0xa66c>  // b.none
  40e794:	bl	404ad0 <__errno_location@plt>
  40e798:	mov	x3, x0
  40e79c:	neg	w22, w22
  40e7a0:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40e7a4:	mov	w1, w24
  40e7a8:	mov	x0, x19
  40e7ac:	str	w22, [x3]
  40e7b0:	add	x2, x2, #0x3c8
  40e7b4:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40e7b8:	mov	x0, x28
  40e7bc:	bl	42f3c0 <wcrtomb@plt+0x2a7a0>
  40e7c0:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40e7c4:	mov	x0, x28
  40e7c8:	bl	40b810 <wcrtomb@plt+0x6bf0>
  40e7cc:	cbz	w20, 40e784 <wcrtomb@plt+0x9b64>
  40e7d0:	b	40e7b8 <wcrtomb@plt+0x9b98>
  40e7d4:	cmp	w0, #0x3
  40e7d8:	b.ne	40e7b8 <wcrtomb@plt+0x9b98>  // b.any
  40e7dc:	bl	404650 <abort@plt>
  40e7e0:	ldr	w0, [x28, #104]
  40e7e4:	and	w0, w0, #0xf000
  40e7e8:	b	40e614 <wcrtomb@plt+0x99f4>
  40e7ec:	ldr	x2, [x28, #136]
  40e7f0:	mov	x1, x21
  40e7f4:	mov	w0, w22
  40e7f8:	bl	43b918 <wcrtomb@plt+0x36cf8>
  40e7fc:	str	x0, [x28, #24]
  40e800:	cbz	x0, 40ef08 <wcrtomb@plt+0xa2e8>
  40e804:	mov	w1, #0x4                   	// #4
  40e808:	add	x0, x28, #0x18
  40e80c:	bl	430a20 <wcrtomb@plt+0x2be00>
  40e810:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e814:	ldr	x0, [x28, #24]
  40e818:	ldr	w1, [x1, #944]
  40e81c:	cmp	w1, #0x2
  40e820:	cset	x20, ne  // ne = any
  40e824:	add	x20, x20, #0x63
  40e828:	bl	403ff0 <strlen@plt>
  40e82c:	cmp	x0, x20
  40e830:	b.hi	40f310 <wcrtomb@plt+0xa6f0>  // b.pmore
  40e834:	mov	x2, x28
  40e838:	mov	x1, x21
  40e83c:	mov	w0, w22
  40e840:	mov	w3, #0x0                   	// #0
  40e844:	bl	432eb8 <wcrtomb@plt+0x2e298>
  40e848:	mov	x1, x21
  40e84c:	mov	x2, x28
  40e850:	mov	w0, w22
  40e854:	mov	w3, #0x0                   	// #0
  40e858:	bl	432a50 <wcrtomb@plt+0x2de30>
  40e85c:	bl	406070 <wcrtomb@plt+0x1450>
  40e860:	str	xzr, [x28, #136]
  40e864:	mov	x20, x0
  40e868:	mov	x0, x28
  40e86c:	bl	40ca58 <wcrtomb@plt+0x7e38>
  40e870:	mov	x1, x0
  40e874:	cbz	x0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e878:	ldr	x6, [x28, #24]
  40e87c:	add	x5, x0, #0x9d
  40e880:	mov	x3, #0x0                   	// #0
  40e884:	nop
  40e888:	ldrb	w4, [x6, x3]
  40e88c:	strb	w4, [x5, x3]
  40e890:	cbz	w4, 40e8a0 <wcrtomb@plt+0x9c80>
  40e894:	add	x3, x3, #0x1
  40e898:	cmp	x3, #0x64
  40e89c:	b.ne	40e888 <wcrtomb@plt+0x9c68>  // b.any
  40e8a0:	mov	w0, #0x32                  	// #50
  40e8a4:	strb	w0, [x1, #156]
  40e8a8:	mov	x2, x20
  40e8ac:	mov	x0, x28
  40e8b0:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40e8b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e8b8:	ldrb	w0, [x0, #872]
  40e8bc:	cbnz	w0, 40f328 <wcrtomb@plt+0xa708>
  40e8c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e8c4:	ldrb	w0, [x0, #212]
  40e8c8:	cbnz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e8cc:	ldr	x0, [sp, #120]
  40e8d0:	ldr	w1, [x28, #108]
  40e8d4:	ldr	w0, [x0, #52]
  40e8d8:	cmp	w1, w0
  40e8dc:	b.ls	40e1f8 <wcrtomb@plt+0x95d8>  // b.plast
  40e8e0:	mov	x0, x28
  40e8e4:	bl	40b810 <wcrtomb@plt+0x6bf0>
  40e8e8:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40e8ec:	cbz	w0, 40e934 <wcrtomb@plt+0x9d14>
  40e8f0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e8f4:	ldr	x0, [x0, #1136]
  40e8f8:	cbz	x0, 40e900 <wcrtomb@plt+0x9ce0>
  40e8fc:	blr	x0
  40e900:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40e904:	add	x1, x1, #0xa08
  40e908:	mov	w2, #0x5                   	// #5
  40e90c:	mov	x0, #0x0                   	// #0
  40e910:	bl	4049c0 <dcgettext@plt>
  40e914:	mov	x20, x0
  40e918:	mov	x0, x19
  40e91c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40e920:	mov	x2, x20
  40e924:	mov	x3, x0
  40e928:	mov	w1, #0x0                   	// #0
  40e92c:	mov	w0, #0x0                   	// #0
  40e930:	bl	404050 <error@plt>
  40e934:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e938:	ldrb	w0, [x0, #1081]
  40e93c:	cbnz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e940:	mov	w0, #0x2                   	// #2
  40e944:	bl	42f548 <wcrtomb@plt+0x2a928>
  40e948:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40e94c:	mov	w4, #0x1                   	// #1
  40e950:	mov	w23, #0x33                  	// #51
  40e954:	mov	x2, x28
  40e958:	mov	x1, x21
  40e95c:	mov	w0, w22
  40e960:	mov	w3, #0x0                   	// #0
  40e964:	bl	4325a8 <wcrtomb@plt+0x2d988>
  40e968:	mov	x2, x28
  40e96c:	mov	x1, x21
  40e970:	mov	w0, w22
  40e974:	mov	w3, #0x0                   	// #0
  40e978:	bl	432eb8 <wcrtomb@plt+0x2e298>
  40e97c:	mov	w0, w22
  40e980:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  40e984:	mov	x1, x21
  40e988:	mov	x2, x28
  40e98c:	mov	w3, #0x0                   	// #0
  40e990:	bl	432a50 <wcrtomb@plt+0x2de30>
  40e994:	ldr	w0, [x22, #944]
  40e998:	cmp	w0, #0x1
  40e99c:	b.eq	40ef3c <wcrtomb@plt+0xa31c>  // b.none
  40e9a0:	bl	406070 <wcrtomb@plt+0x1450>
  40e9a4:	str	xzr, [x28, #136]
  40e9a8:	mov	x21, x0
  40e9ac:	mov	x0, x28
  40e9b0:	bl	40ca58 <wcrtomb@plt+0x7e38>
  40e9b4:	mov	x20, x0
  40e9b8:	cbz	x0, 40e1f8 <wcrtomb@plt+0x95d8>
  40e9bc:	strb	w23, [x0, #156]
  40e9c0:	cmp	w23, #0x36
  40e9c4:	b.eq	40ea94 <wcrtomb@plt+0x9e74>  // b.none
  40e9c8:	add	x5, x0, #0x149
  40e9cc:	ldr	w4, [x22, #944]
  40e9d0:	ldr	x0, [x28, #120]
  40e9d4:	and	w4, w4, #0xfffffffb
  40e9d8:	cmp	w4, #0x2
  40e9dc:	lsr	x1, x0, #32
  40e9e0:	ubfx	w0, w0, #8, #12
  40e9e4:	and	w1, w1, #0xfffff000
  40e9e8:	orr	w3, w1, w0
  40e9ec:	lsr	w0, w1, #31
  40e9f0:	cset	w1, eq  // eq = none
  40e9f4:	sxtw	x2, w3
  40e9f8:	tbnz	w3, #31, 40f124 <wcrtomb@plt+0xa504>
  40e9fc:	mov	x4, #0x1fffff              	// #2097151
  40ea00:	cmp	x2, x4
  40ea04:	b.ls	40f3ac <wcrtomb@plt+0xa78c>  // b.plast
  40ea08:	cmp	w1, #0x0
  40ea0c:	mov	x3, #0xffffffffffffff      	// #72057594037927935
  40ea10:	ccmp	x2, x3, #0x2, ne  // ne = any
  40ea14:	b.ls	40f464 <wcrtomb@plt+0xa844>  // b.plast
  40ea18:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ea1c:	mov	x6, #0x8                   	// #8
  40ea20:	add	x7, x7, #0x7c8
  40ea24:	mov	x4, #0x0                   	// #0
  40ea28:	mov	x3, #0x4                   	// #4
  40ea2c:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40ea30:	ldr	x1, [x28, #120]
  40ea34:	add	x5, x20, #0x151
  40ea38:	ldr	w3, [x22, #944]
  40ea3c:	lsr	x0, x1, #12
  40ea40:	and	w3, w3, #0xfffffffb
  40ea44:	mov	w4, w0
  40ea48:	cmp	w3, #0x2
  40ea4c:	lsr	w0, w0, #31
  40ea50:	bfxil	w4, w1, #0, #8
  40ea54:	cset	w1, eq  // eq = none
  40ea58:	sxtw	x2, w4
  40ea5c:	tbnz	w4, #31, 40f0cc <wcrtomb@plt+0xa4ac>
  40ea60:	mov	x3, #0x1fffff              	// #2097151
  40ea64:	cmp	x2, x3
  40ea68:	b.ls	40f408 <wcrtomb@plt+0xa7e8>  // b.plast
  40ea6c:	cmp	w1, #0x0
  40ea70:	mov	x3, #0xffffffffffffff      	// #72057594037927935
  40ea74:	ccmp	x2, x3, #0x2, ne  // ne = any
  40ea78:	b.ls	40f46c <wcrtomb@plt+0xa84c>  // b.plast
  40ea7c:	adrp	x7, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ea80:	mov	x6, #0x8                   	// #8
  40ea84:	add	x7, x7, #0x7e0
  40ea88:	mov	x4, #0x0                   	// #0
  40ea8c:	mov	x3, #0x4                   	// #4
  40ea90:	bl	40b9c8 <wcrtomb@plt+0x6da8>
  40ea94:	mov	x0, x28
  40ea98:	mov	x2, x21
  40ea9c:	mov	x1, x20
  40eaa0:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40eaa4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40eaa8:	ldrb	w0, [x0, #872]
  40eaac:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40eab0:	mov	x0, x19
  40eab4:	mov	w1, #0x0                   	// #0
  40eab8:	bl	430d18 <wcrtomb@plt+0x2c0f8>
  40eabc:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40eac0:	mov	x0, x25
  40eac4:	mov	x26, #0x1                   	// #1
  40eac8:	ldrb	w1, [x0]
  40eacc:	cmp	w1, #0x2f
  40ead0:	b.eq	40eae8 <wcrtomb@plt+0x9ec8>  // b.none
  40ead4:	mov	x0, x25
  40ead8:	add	x1, x22, #0x2
  40eadc:	bl	4501d0 <argp_parse@@Base+0x103f0>
  40eae0:	str	x0, [x28]
  40eae4:	add	x0, x0, x22
  40eae8:	mov	w1, #0x2f                  	// #47
  40eaec:	strb	w1, [x0]
  40eaf0:	ldr	x0, [x28]
  40eaf4:	strb	wzr, [x0, x26]
  40eaf8:	ldr	x25, [x28, #8]
  40eafc:	mov	x0, x25
  40eb00:	bl	403ff0 <strlen@plt>
  40eb04:	mov	x22, x0
  40eb08:	cbz	x22, 40eb24 <wcrtomb@plt+0x9f04>
  40eb0c:	sub	x0, x22, #0x1
  40eb10:	ldrb	w1, [x25, x0]
  40eb14:	cmp	w1, #0x2f
  40eb18:	b.ne	40ee88 <wcrtomb@plt+0xa268>  // b.any
  40eb1c:	mov	x22, x0
  40eb20:	b	40eb08 <wcrtomb@plt+0x9ee8>
  40eb24:	mov	x0, x25
  40eb28:	mov	x26, #0x1                   	// #1
  40eb2c:	ldrb	w1, [x0]
  40eb30:	cmp	w1, #0x2f
  40eb34:	b.eq	40eb4c <wcrtomb@plt+0x9f2c>  // b.none
  40eb38:	mov	x0, x25
  40eb3c:	add	x1, x22, #0x2
  40eb40:	bl	4501d0 <argp_parse@@Base+0x103f0>
  40eb44:	str	x0, [x28, #8]
  40eb48:	add	x0, x0, x22
  40eb4c:	mov	w1, #0x2f                  	// #47
  40eb50:	strb	w1, [x0]
  40eb54:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40eb58:	add	x0, x0, #0x7f0
  40eb5c:	mov	x1, x0
  40eb60:	str	x1, [sp, #120]
  40eb64:	ldr	x25, [x0, #24]
  40eb68:	ldr	x0, [x28, #8]
  40eb6c:	strb	wzr, [x0, x26]
  40eb70:	cbz	x25, 40ec68 <wcrtomb@plt+0xa048>
  40eb74:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40eb78:	add	x22, x2, #0x344
  40eb7c:	b	40eb90 <wcrtomb@plt+0x9f70>
  40eb80:	mov	w0, w26
  40eb84:	bl	4045c0 <close@plt>
  40eb88:	ldr	x25, [x25, #32]
  40eb8c:	cbz	x25, 40ec68 <wcrtomb@plt+0xa048>
  40eb90:	ldr	w2, [x22]
  40eb94:	mov	x0, x28
  40eb98:	ldr	x1, [x25]
  40eb9c:	bl	40dde8 <wcrtomb@plt+0x91c8>
  40eba0:	mov	w26, w0
  40eba4:	tbnz	w0, #31, 40eb88 <wcrtomb@plt+0x9f68>
  40eba8:	ldr	x2, [x25, #24]
  40ebac:	cbz	x2, 40ebbc <wcrtomb@plt+0x9f9c>
  40ebb0:	blr	x2
  40ebb4:	tst	w0, #0xff
  40ebb8:	b.eq	40eb80 <wcrtomb@plt+0x9f60>  // b.none
  40ebbc:	mov	w0, w26
  40ebc0:	bl	4045c0 <close@plt>
  40ebc4:	ldr	w0, [x25, #16]
  40ebc8:	cmp	w0, #0x3
  40ebcc:	b.ne	40ec68 <wcrtomb@plt+0xa048>  // b.any
  40ebd0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ebd4:	mov	w2, #0x5                   	// #5
  40ebd8:	add	x1, x1, #0x958
  40ebdc:	mov	x0, #0x0                   	// #0
  40ebe0:	ldr	x20, [x25]
  40ebe4:	ldr	x21, [x28]
  40ebe8:	bl	4049c0 <dcgettext@plt>
  40ebec:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ebf0:	mov	x19, x0
  40ebf4:	ldr	w0, [x1, #772]
  40ebf8:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40ebfc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40ec00:	ldr	w0, [x0, #432]
  40ec04:	tbz	w0, #2, 40e1f8 <wcrtomb@plt+0x95d8>
  40ec08:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ec0c:	ldr	x0, [x0, #1136]
  40ec10:	cbz	x0, 40ec18 <wcrtomb@plt+0x9ff8>
  40ec14:	blr	x0
  40ec18:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ec1c:	add	x1, x1, #0x688
  40ec20:	mov	w2, #0x5                   	// #5
  40ec24:	mov	x0, #0x0                   	// #0
  40ec28:	bl	4049c0 <dcgettext@plt>
  40ec2c:	mov	x22, x0
  40ec30:	mov	x0, x21
  40ec34:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40ec38:	mov	x1, x20
  40ec3c:	mov	x21, x0
  40ec40:	mov	w0, #0x1                   	// #1
  40ec44:	bl	44d5d0 <argp_parse@@Base+0xd7f0>
  40ec48:	mov	x5, x19
  40ec4c:	mov	x4, x0
  40ec50:	mov	x3, x21
  40ec54:	mov	x2, x22
  40ec58:	mov	w1, #0x0                   	// #0
  40ec5c:	mov	w0, #0x0                   	// #0
  40ec60:	bl	404050 <error@plt>
  40ec64:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40ec68:	mov	x0, x28
  40ec6c:	bl	40dc78 <wcrtomb@plt+0x9058>
  40ec70:	str	x0, [sp, #128]
  40ec74:	cbz	x0, 40f31c <wcrtomb@plt+0xa6fc>
  40ec78:	ldr	x0, [x28, #392]
  40ec7c:	str	x0, [sp, #136]
  40ec80:	bl	406070 <wcrtomb@plt+0x1450>
  40ec84:	str	xzr, [x28, #136]
  40ec88:	mov	x22, x0
  40ec8c:	mov	x0, x28
  40ec90:	bl	40ca58 <wcrtomb@plt+0x7e38>
  40ec94:	mov	x25, x0
  40ec98:	cbz	x0, 40ee40 <wcrtomb@plt+0xa220>
  40ec9c:	mov	x0, x28
  40eca0:	bl	410920 <wcrtomb@plt+0xbd00>
  40eca4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40eca8:	ldrb	w0, [x0, #161]
  40ecac:	cbnz	w0, 40f17c <wcrtomb@plt+0xa55c>
  40ecb0:	mov	w0, #0x35                  	// #53
  40ecb4:	strb	w0, [x25, #156]
  40ecb8:	mov	x2, x22
  40ecbc:	mov	x1, x25
  40ecc0:	mov	x0, x28
  40ecc4:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40ecc8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40eccc:	ldr	w0, [x0, #804]
  40ecd0:	cbz	w0, 40ee40 <wcrtomb@plt+0xa220>
  40ecd4:	ldr	x1, [sp, #136]
  40ecd8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ecdc:	cmp	x1, #0x0
  40ece0:	ldrb	w0, [x0, #213]
  40ece4:	cset	w1, ne  // ne = any
  40ece8:	tst	w1, w0
  40ecec:	b.ne	40f338 <wcrtomb@plt+0xa718>  // b.any
  40ecf0:	ldr	x0, [sp, #120]
  40ecf4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ecf8:	add	x22, x2, #0x344
  40ecfc:	ldr	x25, [x0, #24]
  40ed00:	cbnz	x25, 40ed18 <wcrtomb@plt+0xa0f8>
  40ed04:	b	40f508 <wcrtomb@plt+0xa8e8>
  40ed08:	mov	w0, w26
  40ed0c:	bl	4045c0 <close@plt>
  40ed10:	ldr	x25, [x25, #32]
  40ed14:	cbz	x25, 40f508 <wcrtomb@plt+0xa8e8>
  40ed18:	ldr	w2, [x22]
  40ed1c:	mov	x0, x28
  40ed20:	ldr	x1, [x25]
  40ed24:	bl	40dde8 <wcrtomb@plt+0x91c8>
  40ed28:	mov	w26, w0
  40ed2c:	tbnz	w0, #31, 40ed10 <wcrtomb@plt+0xa0f0>
  40ed30:	ldr	x1, [x25, #24]
  40ed34:	cbz	x1, 40ed44 <wcrtomb@plt+0xa124>
  40ed38:	blr	x1
  40ed3c:	tst	w0, #0xff
  40ed40:	b.eq	40ed08 <wcrtomb@plt+0xa0e8>  // b.none
  40ed44:	mov	w0, w26
  40ed48:	bl	4045c0 <close@plt>
  40ed4c:	ldr	w0, [x25, #16]
  40ed50:	ldr	x22, [x25]
  40ed54:	cmp	w0, #0x2
  40ed58:	b.eq	40f474 <wcrtomb@plt+0xa854>  // b.none
  40ed5c:	b.hi	40ee40 <wcrtomb@plt+0xa220>  // b.pmore
  40ed60:	cbz	w0, 40f508 <wcrtomb@plt+0xa8e8>
  40ed64:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40ed68:	mov	w2, #0x5                   	// #5
  40ed6c:	add	x1, x1, #0x9b8
  40ed70:	mov	x0, #0x0                   	// #0
  40ed74:	ldr	x25, [x28]
  40ed78:	bl	4049c0 <dcgettext@plt>
  40ed7c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ed80:	str	x0, [sp, #120]
  40ed84:	ldr	w0, [x1, #772]
  40ed88:	cbz	w0, 40edf4 <wcrtomb@plt+0xa1d4>
  40ed8c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40ed90:	ldr	w0, [x0, #432]
  40ed94:	tbz	w0, #2, 40edf4 <wcrtomb@plt+0xa1d4>
  40ed98:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ed9c:	ldr	x0, [x0, #1136]
  40eda0:	cbz	x0, 40eda8 <wcrtomb@plt+0xa188>
  40eda4:	blr	x0
  40eda8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40edac:	add	x1, x1, #0x688
  40edb0:	mov	w2, #0x5                   	// #5
  40edb4:	mov	x0, #0x0                   	// #0
  40edb8:	bl	4049c0 <dcgettext@plt>
  40edbc:	mov	x26, x0
  40edc0:	mov	x0, x25
  40edc4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40edc8:	mov	x1, x22
  40edcc:	mov	x25, x0
  40edd0:	mov	w0, #0x1                   	// #1
  40edd4:	bl	44d5d0 <argp_parse@@Base+0xd7f0>
  40edd8:	ldr	x5, [sp, #120]
  40eddc:	mov	x4, x0
  40ede0:	mov	x3, x25
  40ede4:	mov	x2, x26
  40ede8:	mov	w1, #0x0                   	// #0
  40edec:	mov	w0, #0x0                   	// #0
  40edf0:	bl	404050 <error@plt>
  40edf4:	ldr	x0, [x28]
  40edf8:	bl	403ff0 <strlen@plt>
  40edfc:	mov	x25, x0
  40ee00:	mov	x0, x22
  40ee04:	bl	403ff0 <strlen@plt>
  40ee08:	add	x0, x25, x0
  40ee0c:	add	x0, x0, #0x1
  40ee10:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40ee14:	ldr	x1, [x28]
  40ee18:	mov	x25, x0
  40ee1c:	bl	404220 <stpcpy@plt>
  40ee20:	mov	x1, x22
  40ee24:	bl	404910 <strcpy@plt>
  40ee28:	mov	x2, x25
  40ee2c:	mov	x1, x22
  40ee30:	mov	x0, x28
  40ee34:	bl	40e0d0 <wcrtomb@plt+0x94b0>
  40ee38:	mov	x0, x25
  40ee3c:	bl	4047b0 <free@plt>
  40ee40:	mov	x0, x28
  40ee44:	bl	40dfb0 <wcrtomb@plt+0x9390>
  40ee48:	ldr	x0, [sp, #128]
  40ee4c:	bl	4047b0 <free@plt>
  40ee50:	ldr	w26, [x28, #408]
  40ee54:	cbz	x20, 40f2b4 <wcrtomb@plt+0xa694>
  40ee58:	ldr	w22, [x20, #408]
  40ee5c:	tbz	w26, #31, 40e784 <wcrtomb@plt+0x9b64>
  40ee60:	bl	404ad0 <__errno_location@plt>
  40ee64:	mov	x3, x0
  40ee68:	neg	w5, w26
  40ee6c:	mov	w1, w24
  40ee70:	mov	x0, x19
  40ee74:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40ee78:	str	w5, [x3]
  40ee7c:	add	x2, x2, #0x3c8
  40ee80:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40ee84:	b	40e7b8 <wcrtomb@plt+0x9b98>
  40ee88:	add	x0, x25, x22
  40ee8c:	add	x26, x22, #0x1
  40ee90:	b	40eb2c <wcrtomb@plt+0x9f0c>
  40ee94:	add	x0, x25, x22
  40ee98:	add	x26, x22, #0x1
  40ee9c:	b	40eac8 <wcrtomb@plt+0x9ea8>
  40eea0:	mov	w4, #0x1                   	// #1
  40eea4:	mov	x2, x28
  40eea8:	mov	x1, x21
  40eeac:	mov	w0, w22
  40eeb0:	mov	w3, #0x0                   	// #0
  40eeb4:	bl	4325a8 <wcrtomb@plt+0x2d988>
  40eeb8:	mov	x2, x28
  40eebc:	mov	x1, x21
  40eec0:	mov	w0, w22
  40eec4:	mov	w3, #0x0                   	// #0
  40eec8:	mov	w23, #0x34                  	// #52
  40eecc:	bl	432eb8 <wcrtomb@plt+0x2e298>
  40eed0:	b	40e97c <wcrtomb@plt+0x9d5c>
  40eed4:	mov	w4, #0x1                   	// #1
  40eed8:	mov	x2, x28
  40eedc:	mov	x1, x21
  40eee0:	mov	w0, w22
  40eee4:	mov	w3, #0x0                   	// #0
  40eee8:	bl	4325a8 <wcrtomb@plt+0x2d988>
  40eeec:	mov	x2, x28
  40eef0:	mov	x1, x21
  40eef4:	mov	w0, w22
  40eef8:	mov	w3, #0x0                   	// #0
  40eefc:	mov	w23, #0x36                  	// #54
  40ef00:	bl	432eb8 <wcrtomb@plt+0x2e298>
  40ef04:	b	40e97c <wcrtomb@plt+0x9d5c>
  40ef08:	bl	404ad0 <__errno_location@plt>
  40ef0c:	ldr	w0, [x0]
  40ef10:	cmp	w0, #0xc
  40ef14:	b.eq	40f5b0 <wcrtomb@plt+0xa990>  // b.none
  40ef18:	mov	w1, w24
  40ef1c:	mov	x0, x19
  40ef20:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40ef24:	add	x2, x2, #0x350
  40ef28:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40ef2c:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40ef30:	mov	x0, x28
  40ef34:	bl	40d860 <wcrtomb@plt+0x8c40>
  40ef38:	b	40e534 <wcrtomb@plt+0x9914>
  40ef3c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40ef40:	ldr	w0, [x0, #432]
  40ef44:	tbz	w0, #5, 40e934 <wcrtomb@plt+0x9d14>
  40ef48:	b	40e8f0 <wcrtomb@plt+0x9cd0>
  40ef4c:	add	x2, sp, #0x90
  40ef50:	mov	w1, w26
  40ef54:	mov	w0, #0x0                   	// #0
  40ef58:	bl	4049a0 <__fxstat@plt>
  40ef5c:	cmp	w0, #0x0
  40ef60:	cset	w0, eq  // eq = none
  40ef64:	cbnz	w0, 40ef80 <wcrtomb@plt+0xa360>
  40ef68:	mov	w1, w24
  40ef6c:	mov	x0, x19
  40ef70:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40ef74:	add	x2, x2, #0x3c8
  40ef78:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40ef7c:	b	40e7b8 <wcrtomb@plt+0x9b98>
  40ef80:	ldr	w1, [sp, #116]
  40ef84:	ldr	x0, [sp, #248]
  40ef88:	cmp	w1, #0x4, lsl #12
  40ef8c:	ldr	x1, [sp, #96]
  40ef90:	cset	w20, eq  // eq = none
  40ef94:	mov	w2, w20
  40ef98:	cmp	x1, x0
  40ef9c:	ldr	x0, [sp, #256]
  40efa0:	b.ne	40efb0 <wcrtomb@plt+0xa390>  // b.any
  40efa4:	ldr	w1, [sp, #104]
  40efa8:	cmp	w0, w1
  40efac:	b.eq	40f058 <wcrtomb@plt+0xa438>  // b.none
  40efb0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40efb4:	ldr	w0, [sp, #116]
  40efb8:	ldrb	w1, [x1, #872]
  40efbc:	cmp	w0, #0x4, lsl #12
  40efc0:	cset	w0, ne  // ne = any
  40efc4:	eor	w1, w1, #0x1
  40efc8:	orr	w0, w0, w1
  40efcc:	tst	w0, #0xff
  40efd0:	b.eq	40f058 <wcrtomb@plt+0xa438>  // b.none
  40efd4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40efd8:	ldr	w0, [x0, #432]
  40efdc:	tbz	w0, #4, 40f024 <wcrtomb@plt+0xa404>
  40efe0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40efe4:	ldr	x0, [x0, #1136]
  40efe8:	cbz	x0, 40eff0 <wcrtomb@plt+0xa3d0>
  40efec:	blr	x0
  40eff0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40eff4:	add	x1, x1, #0x9d0
  40eff8:	mov	w2, #0x5                   	// #5
  40effc:	mov	x0, #0x0                   	// #0
  40f000:	bl	4049c0 <dcgettext@plt>
  40f004:	mov	x21, x0
  40f008:	mov	x0, x19
  40f00c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40f010:	mov	x2, x21
  40f014:	mov	x3, x0
  40f018:	mov	w1, #0x0                   	// #0
  40f01c:	mov	w0, #0x0                   	// #0
  40f020:	bl	404050 <error@plt>
  40f024:	mov	w0, #0x1                   	// #1
  40f028:	bl	42f548 <wcrtomb@plt+0x2a928>
  40f02c:	mov	x0, x28
  40f030:	bl	42f3c0 <wcrtomb@plt+0x2a7a0>
  40f034:	tst	w0, #0xff
  40f038:	b.eq	40e1f8 <wcrtomb@plt+0x95d8>  // b.none
  40f03c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f040:	ldrb	w0, [x0, #872]
  40f044:	cbz	w0, 40e1f8 <wcrtomb@plt+0x95d8>
  40f048:	mov	w1, w20
  40f04c:	mov	x0, x19
  40f050:	bl	430d18 <wcrtomb@plt+0x2c0f8>
  40f054:	b	40e1f8 <wcrtomb@plt+0x95d8>
  40f058:	ldr	x0, [sp, #192]
  40f05c:	cmp	x0, x27
  40f060:	b.gt	40efd4 <wcrtomb@plt+0xa3b4>
  40f064:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f068:	cmp	w26, #0x0
  40f06c:	ldr	w0, [x0, #684]
  40f070:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  40f074:	b.ne	40f02c <wcrtomb@plt+0xa40c>  // b.any
  40f078:	cmp	x27, #0x0
  40f07c:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  40f080:	b.eq	40f02c <wcrtomb@plt+0xa40c>  // b.none
  40f084:	ldp	x3, x4, [x28, #216]
  40f088:	mov	x2, x21
  40f08c:	mov	w1, w22
  40f090:	mov	w0, w26
  40f094:	bl	41fd18 <wcrtomb@plt+0x1b0f8>
  40f098:	cbz	w0, 40f02c <wcrtomb@plt+0xa40c>
  40f09c:	mov	x0, x19
  40f0a0:	bl	434688 <wcrtomb@plt+0x2fa68>
  40f0a4:	b	40f02c <wcrtomb@plt+0xa40c>
  40f0a8:	mov	x1, x28
  40f0ac:	mov	w0, w26
  40f0b0:	bl	4294d8 <wcrtomb@plt+0x248b8>
  40f0b4:	mov	w20, w0
  40f0b8:	cmp	w0, #0x3
  40f0bc:	b.eq	40e748 <wcrtomb@plt+0x9b28>  // b.none
  40f0c0:	cmp	w0, #0x1
  40f0c4:	b.ls	40e760 <wcrtomb@plt+0x9b40>  // b.plast
  40f0c8:	b	40e7b8 <wcrtomb@plt+0x9b98>
  40f0cc:	cmp	w3, #0x2
  40f0d0:	b.ne	40ea7c <wcrtomb@plt+0x9e5c>  // b.any
  40f0d4:	mov	x3, #0xfeffffffffffffff    	// #-72057594037927937
  40f0d8:	cmp	x2, x3
  40f0dc:	b.ls	40ea7c <wcrtomb@plt+0x9e5c>  // b.plast
  40f0e0:	mov	w3, #0xff                  	// #255
  40f0e4:	sbfx	x1, x0, #0, #1
  40f0e8:	strb	w3, [x20, #337]
  40f0ec:	strb	w2, [x20, #344]
  40f0f0:	extr	x0, x1, x2, #8
  40f0f4:	strb	w0, [x20, #343]
  40f0f8:	extr	x0, x1, x0, #8
  40f0fc:	strb	w0, [x20, #342]
  40f100:	extr	x0, x1, x0, #8
  40f104:	strb	w0, [x20, #341]
  40f108:	extr	x0, x1, x0, #8
  40f10c:	strb	w0, [x20, #340]
  40f110:	extr	x0, x1, x0, #8
  40f114:	strb	w0, [x20, #339]
  40f118:	extr	x0, x1, x0, #8
  40f11c:	strb	w0, [x20, #338]
  40f120:	b	40ea94 <wcrtomb@plt+0x9e74>
  40f124:	cmp	w4, #0x2
  40f128:	b.ne	40ea18 <wcrtomb@plt+0x9df8>  // b.any
  40f12c:	mov	x3, #0xfeffffffffffffff    	// #-72057594037927937
  40f130:	cmp	x2, x3
  40f134:	b.ls	40ea18 <wcrtomb@plt+0x9df8>  // b.plast
  40f138:	mov	w1, #0xff                  	// #255
  40f13c:	sbfx	x0, x0, #0, #1
  40f140:	strb	w1, [x20, #329]
  40f144:	strb	w2, [x20, #336]
  40f148:	extr	x1, x0, x2, #8
  40f14c:	strb	w1, [x20, #335]
  40f150:	extr	x1, x0, x1, #8
  40f154:	strb	w1, [x20, #334]
  40f158:	extr	x1, x0, x1, #8
  40f15c:	strb	w1, [x20, #333]
  40f160:	extr	x1, x0, x1, #8
  40f164:	strb	w1, [x20, #332]
  40f168:	extr	x1, x0, x1, #8
  40f16c:	strb	w1, [x20, #331]
  40f170:	extr	x0, x0, x1, #8
  40f174:	strb	w0, [x20, #330]
  40f178:	b	40ea30 <wcrtomb@plt+0x9e10>
  40f17c:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f180:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f184:	ldr	x0, [x26, #144]
  40f188:	ldr	w1, [x1, #944]
  40f18c:	cmp	w1, #0x4
  40f190:	ldr	x0, [x0, #56]
  40f194:	b.eq	40f2c0 <wcrtomb@plt+0xa6a0>  // b.none
  40f198:	mov	w1, #0x44                  	// #68
  40f19c:	strb	w1, [x25, #156]
  40f1a0:	cbz	x0, 40ecc8 <wcrtomb@plt+0xa0a8>
  40f1a4:	bl	406070 <wcrtomb@plt+0x1450>
  40f1a8:	mov	x4, x0
  40f1ac:	ldr	x1, [x26, #144]
  40f1b0:	str	x4, [sp, #120]
  40f1b4:	ldr	x0, [x1, #56]
  40f1b8:	bl	419d48 <wcrtomb@plt+0x15128>
  40f1bc:	mov	x26, x0
  40f1c0:	bl	4194c0 <wcrtomb@plt+0x148a0>
  40f1c4:	mov	x22, x0
  40f1c8:	mov	x1, x0
  40f1cc:	add	x2, x25, #0x7c
  40f1d0:	lsr	x0, x0, #63
  40f1d4:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40f1d8:	add	x3, x3, #0x6e8
  40f1dc:	bl	40bf00 <wcrtomb@plt+0x72e0>
  40f1e0:	ldr	x4, [sp, #120]
  40f1e4:	mov	x1, x25
  40f1e8:	mov	x0, x28
  40f1ec:	mov	x2, x4
  40f1f0:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40f1f4:	ldr	x0, [x28, #8]
  40f1f8:	mov	x2, x22
  40f1fc:	mov	x1, x22
  40f200:	bl	405570 <wcrtomb@plt+0x950>
  40f204:	cmp	x22, #0x0
  40f208:	b.le	40ee40 <wcrtomb@plt+0xa220>
  40f20c:	nop
  40f210:	bl	406550 <wcrtomb@plt+0x1930>
  40f214:	mov	x25, x0
  40f218:	bl	406128 <wcrtomb@plt+0x1508>
  40f21c:	mov	x2, x0
  40f220:	cmp	x0, x22
  40f224:	b.ls	40f254 <wcrtomb@plt+0xa634>  // b.plast
  40f228:	ands	x0, x22, #0x1ff
  40f22c:	b.ne	40f2f8 <wcrtomb@plt+0xa6d8>  // b.any
  40f230:	mov	x1, x26
  40f234:	mov	x2, x22
  40f238:	mov	x0, x25
  40f23c:	bl	403f70 <memcpy@plt>
  40f240:	sub	x0, x22, #0x1
  40f244:	and	x0, x0, #0xfffffffffffffe00
  40f248:	add	x0, x25, x0
  40f24c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40f250:	b	40ee40 <wcrtomb@plt+0xa220>
  40f254:	mov	x1, x26
  40f258:	mov	x0, x25
  40f25c:	str	x2, [sp, #120]
  40f260:	bl	403f70 <memcpy@plt>
  40f264:	ldr	x2, [sp, #120]
  40f268:	sub	x0, x2, #0x1
  40f26c:	sub	x22, x22, x2
  40f270:	and	x0, x0, #0xfffffffffffffe00
  40f274:	add	x26, x26, x2
  40f278:	add	x0, x25, x0
  40f27c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40f280:	cmp	x22, #0x0
  40f284:	b.gt	40f210 <wcrtomb@plt+0xa5f0>
  40f288:	b	40ee40 <wcrtomb@plt+0xa220>
  40f28c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f290:	add	x3, sp, #0x90
  40f294:	mov	x2, x21
  40f298:	mov	w1, w22
  40f29c:	ldr	w4, [x0, #688]
  40f2a0:	mov	w0, #0x0                   	// #0
  40f2a4:	bl	404c00 <__fxstatat@plt>
  40f2a8:	cmp	w0, #0x0
  40f2ac:	cset	w0, eq  // eq = none
  40f2b0:	b	40ef64 <wcrtomb@plt+0xa344>
  40f2b4:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40f2b8:	ldr	w22, [x0, #2200]
  40f2bc:	b	40ee5c <wcrtomb@plt+0xa23c>
  40f2c0:	mov	w1, #0x35                  	// #53
  40f2c4:	strb	w1, [x25, #156]
  40f2c8:	cbz	x0, 40ecc8 <wcrtomb@plt+0xa0a8>
  40f2cc:	bl	419d48 <wcrtomb@plt+0x15128>
  40f2d0:	mov	x2, x0
  40f2d4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40f2d8:	add	x0, x1, #0x970
  40f2dc:	mov	x1, x28
  40f2e0:	bl	417440 <wcrtomb@plt+0x12820>
  40f2e4:	mov	x2, x22
  40f2e8:	mov	x1, x25
  40f2ec:	mov	x0, x28
  40f2f0:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  40f2f4:	b	40ee40 <wcrtomb@plt+0xa220>
  40f2f8:	mov	x2, #0x200                 	// #512
  40f2fc:	mov	w1, #0x0                   	// #0
  40f300:	sub	x2, x2, x0
  40f304:	add	x0, x25, x22
  40f308:	bl	404410 <memset@plt>
  40f30c:	b	40f230 <wcrtomb@plt+0xa610>
  40f310:	mov	x0, x28
  40f314:	bl	40d860 <wcrtomb@plt+0x8c40>
  40f318:	b	40e834 <wcrtomb@plt+0x9c14>
  40f31c:	ldr	x0, [x28]
  40f320:	bl	420378 <wcrtomb@plt+0x1b758>
  40f324:	b	40e7b8 <wcrtomb@plt+0x9b98>
  40f328:	mov	x0, x19
  40f32c:	mov	w1, #0x0                   	// #0
  40f330:	bl	430d18 <wcrtomb@plt+0x2c0f8>
  40f334:	b	40e8c0 <wcrtomb@plt+0x9ca0>
  40f338:	ldr	x1, [x28, #392]
  40f33c:	ldr	x0, [x28, #88]
  40f340:	ldr	x1, [x1, #88]
  40f344:	cmp	x1, x0
  40f348:	b.eq	40ecf0 <wcrtomb@plt+0xa0d0>  // b.none
  40f34c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f350:	ldr	w0, [x0, #772]
  40f354:	cbz	w0, 40ee40 <wcrtomb@plt+0xa220>
  40f358:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40f35c:	ldr	w0, [x0, #432]
  40f360:	tbz	w0, #18, 40ee40 <wcrtomb@plt+0xa220>
  40f364:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f368:	ldr	x0, [x0, #1136]
  40f36c:	cbz	x0, 40f374 <wcrtomb@plt+0xa754>
  40f370:	blr	x0
  40f374:	mov	w2, #0x5                   	// #5
  40f378:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40f37c:	mov	x0, #0x0                   	// #0
  40f380:	add	x1, x1, #0x980
  40f384:	bl	4049c0 <dcgettext@plt>
  40f388:	mov	x22, x0
  40f38c:	ldr	x0, [x28]
  40f390:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40f394:	mov	x3, x0
  40f398:	mov	x2, x22
  40f39c:	mov	w1, #0x0                   	// #0
  40f3a0:	mov	w0, #0x0                   	// #0
  40f3a4:	bl	404050 <error@plt>
  40f3a8:	b	40ee40 <wcrtomb@plt+0xa220>
  40f3ac:	and	w3, w3, #0x7
  40f3b0:	ubfx	w1, w2, #3, #3
  40f3b4:	ubfx	w4, w2, #6, #3
  40f3b8:	ubfx	w5, w2, #9, #3
  40f3bc:	ubfx	w6, w2, #12, #3
  40f3c0:	ubfx	w7, w2, #15, #3
  40f3c4:	lsr	x0, x2, #18
  40f3c8:	add	w3, w3, #0x30
  40f3cc:	add	w1, w1, #0x30
  40f3d0:	add	w4, w4, #0x30
  40f3d4:	add	w5, w5, #0x30
  40f3d8:	add	w6, w6, #0x30
  40f3dc:	add	w7, w7, #0x30
  40f3e0:	add	w0, w0, #0x30
  40f3e4:	strb	w0, [x20, #329]
  40f3e8:	strb	w7, [x20, #330]
  40f3ec:	strb	w6, [x20, #331]
  40f3f0:	strb	w5, [x20, #332]
  40f3f4:	strb	w4, [x20, #333]
  40f3f8:	strb	w1, [x20, #334]
  40f3fc:	strb	w3, [x20, #335]
  40f400:	strb	wzr, [x20, #336]
  40f404:	b	40ea30 <wcrtomb@plt+0x9e10>
  40f408:	and	w4, w4, #0x7
  40f40c:	ubfx	w1, w2, #3, #3
  40f410:	ubfx	w3, w2, #6, #3
  40f414:	ubfx	w5, w2, #9, #3
  40f418:	ubfx	w6, w2, #12, #3
  40f41c:	ubfx	w7, w2, #15, #3
  40f420:	lsr	x0, x2, #18
  40f424:	add	w4, w4, #0x30
  40f428:	add	w1, w1, #0x30
  40f42c:	add	w3, w3, #0x30
  40f430:	add	w5, w5, #0x30
  40f434:	add	w6, w6, #0x30
  40f438:	add	w7, w7, #0x30
  40f43c:	add	w0, w0, #0x30
  40f440:	strb	w0, [x20, #337]
  40f444:	strb	w7, [x20, #338]
  40f448:	strb	w6, [x20, #339]
  40f44c:	strb	w5, [x20, #340]
  40f450:	strb	w3, [x20, #341]
  40f454:	strb	w1, [x20, #342]
  40f458:	strb	w4, [x20, #343]
  40f45c:	strb	wzr, [x20, #344]
  40f460:	b	40ea94 <wcrtomb@plt+0x9e74>
  40f464:	mov	w1, #0x80                  	// #128
  40f468:	b	40f13c <wcrtomb@plt+0xa51c>
  40f46c:	mov	w3, #0x80                  	// #128
  40f470:	b	40f0e4 <wcrtomb@plt+0xa4c4>
  40f474:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40f478:	mov	w2, #0x5                   	// #5
  40f47c:	add	x1, x1, #0x9b8
  40f480:	mov	x0, #0x0                   	// #0
  40f484:	ldr	x25, [x28]
  40f488:	bl	4049c0 <dcgettext@plt>
  40f48c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f490:	str	x0, [sp, #120]
  40f494:	ldr	w0, [x1, #772]
  40f498:	cbz	w0, 40ee40 <wcrtomb@plt+0xa220>
  40f49c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40f4a0:	ldr	w0, [x0, #432]
  40f4a4:	tbz	w0, #2, 40ee40 <wcrtomb@plt+0xa220>
  40f4a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f4ac:	ldr	x0, [x0, #1136]
  40f4b0:	cbz	x0, 40f4b8 <wcrtomb@plt+0xa898>
  40f4b4:	blr	x0
  40f4b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40f4bc:	add	x1, x1, #0x688
  40f4c0:	mov	w2, #0x5                   	// #5
  40f4c4:	mov	x0, #0x0                   	// #0
  40f4c8:	bl	4049c0 <dcgettext@plt>
  40f4cc:	mov	x26, x0
  40f4d0:	mov	x0, x25
  40f4d4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  40f4d8:	mov	x1, x22
  40f4dc:	mov	x25, x0
  40f4e0:	mov	w0, #0x1                   	// #1
  40f4e4:	bl	44d5d0 <argp_parse@@Base+0xd7f0>
  40f4e8:	ldr	x5, [sp, #120]
  40f4ec:	mov	x4, x0
  40f4f0:	mov	x3, x25
  40f4f4:	mov	x2, x26
  40f4f8:	mov	w1, #0x0                   	// #0
  40f4fc:	mov	w0, #0x0                   	// #0
  40f500:	bl	404050 <error@plt>
  40f504:	b	40ee40 <wcrtomb@plt+0xa220>
  40f508:	ldr	x0, [x28]
  40f50c:	ldr	x26, [sp, #128]
  40f510:	bl	450328 <argp_parse@@Base+0x10548>
  40f514:	mov	x22, x0
  40f518:	bl	403ff0 <strlen@plt>
  40f51c:	str	x0, [sp, #120]
  40f520:	str	x0, [sp, #136]
  40f524:	b	40f554 <wcrtomb@plt+0xa934>
  40f528:	ldr	x0, [sp, #120]
  40f52c:	mov	x1, x26
  40f530:	add	x0, x22, x0
  40f534:	bl	404910 <strcpy@plt>
  40f538:	mov	x1, x28
  40f53c:	mov	x0, x22
  40f540:	bl	410b88 <wcrtomb@plt+0xbf68>
  40f544:	tst	w0, #0xff
  40f548:	b.eq	40f590 <wcrtomb@plt+0xa970>  // b.none
  40f54c:	add	x3, x25, #0x1
  40f550:	add	x26, x26, x3
  40f554:	mov	x0, x26
  40f558:	bl	403ff0 <strlen@plt>
  40f55c:	mov	x25, x0
  40f560:	cbz	x0, 40f5a4 <wcrtomb@plt+0xa984>
  40f564:	ldr	x0, [sp, #120]
  40f568:	add	x2, x0, x25
  40f56c:	ldr	x0, [sp, #136]
  40f570:	cmp	x2, x0
  40f574:	b.ls	40f528 <wcrtomb@plt+0xa908>  // b.plast
  40f578:	mov	x0, x22
  40f57c:	add	x1, x2, #0x1
  40f580:	str	x2, [sp, #136]
  40f584:	bl	4501d0 <argp_parse@@Base+0x103f0>
  40f588:	mov	x22, x0
  40f58c:	b	40f528 <wcrtomb@plt+0xa908>
  40f590:	mov	x2, x22
  40f594:	mov	x1, x26
  40f598:	mov	x0, x28
  40f59c:	bl	40e0d0 <wcrtomb@plt+0x94b0>
  40f5a0:	b	40f54c <wcrtomb@plt+0xa92c>
  40f5a4:	mov	x0, x22
  40f5a8:	bl	4047b0 <free@plt>
  40f5ac:	b	40ee40 <wcrtomb@plt+0xa220>
  40f5b0:	bl	4104a0 <wcrtomb@plt+0xb880>
  40f5b4:	nop
  40f5b8:	sub	sp, sp, #0x3c0
  40f5bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f5c0:	mov	w2, #0x0                   	// #0
  40f5c4:	stp	x29, x30, [sp]
  40f5c8:	mov	x29, sp
  40f5cc:	ldr	x0, [x0, #136]
  40f5d0:	stp	x19, x20, [sp, #16]
  40f5d4:	stp	x25, x26, [sp, #64]
  40f5d8:	cmp	x0, #0x1
  40f5dc:	b.hi	40f5ec <wcrtomb@plt+0xa9cc>  // b.pmore
  40f5e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f5e4:	ldrb	w2, [x0, #704]
  40f5e8:	eor	w2, w2, #0x1
  40f5ec:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40f5f0:	mov	w0, #0x1                   	// #1
  40f5f4:	str	w2, [x1, #2084]
  40f5f8:	bl	408d78 <wcrtomb@plt+0x4158>
  40f5fc:	bl	405608 <wcrtomb@plt+0x9e8>
  40f600:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f604:	ldrb	w0, [x0, #161]
  40f608:	cbz	w0, 40f61c <wcrtomb@plt+0xa9fc>
  40f60c:	b	40f6c4 <wcrtomb@plt+0xaaa4>
  40f610:	bl	410b88 <wcrtomb@plt+0xbf68>
  40f614:	tst	w0, #0xff
  40f618:	b.eq	40f69c <wcrtomb@plt+0xaa7c>  // b.none
  40f61c:	mov	w0, #0x1                   	// #1
  40f620:	bl	422338 <wcrtomb@plt+0x1d718>
  40f624:	mov	x1, #0x0                   	// #0
  40f628:	mov	x19, x0
  40f62c:	cbnz	x0, 40f610 <wcrtomb@plt+0xa9f0>
  40f630:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f634:	bl	406550 <wcrtomb@plt+0x1930>
  40f638:	mov	x19, x0
  40f63c:	mov	x2, #0x200                 	// #512
  40f640:	mov	w1, #0x0                   	// #0
  40f644:	bl	404410 <memset@plt>
  40f648:	mov	x0, x19
  40f64c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40f650:	bl	406550 <wcrtomb@plt+0x1930>
  40f654:	mov	x19, x0
  40f658:	bl	406128 <wcrtomb@plt+0x1508>
  40f65c:	mov	x2, x0
  40f660:	mov	w1, #0x0                   	// #0
  40f664:	mov	x0, x19
  40f668:	bl	404410 <memset@plt>
  40f66c:	mov	x0, x19
  40f670:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40f674:	bl	406be8 <wcrtomb@plt+0x1fc8>
  40f678:	bl	430cd0 <wcrtomb@plt+0x2c0b0>
  40f67c:	ldr	x0, [x25, #960]
  40f680:	cbz	x0, 40f688 <wcrtomb@plt+0xaa68>
  40f684:	bl	41ae48 <wcrtomb@plt+0x16228>
  40f688:	ldp	x29, x30, [sp]
  40f68c:	ldp	x19, x20, [sp, #16]
  40f690:	ldp	x25, x26, [sp, #64]
  40f694:	add	sp, sp, #0x3c0
  40f698:	ret
  40f69c:	add	x0, sp, #0x218
  40f6a0:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  40f6a4:	mov	x2, x19
  40f6a8:	mov	x1, x19
  40f6ac:	add	x0, sp, #0x218
  40f6b0:	str	xzr, [sp, #928]
  40f6b4:	bl	40e138 <wcrtomb@plt+0x9518>
  40f6b8:	add	x0, sp, #0x218
  40f6bc:	bl	42f438 <wcrtomb@plt+0x2a818>
  40f6c0:	b	40f61c <wcrtomb@plt+0xa9fc>
  40f6c4:	mov	x0, #0x3e8                 	// #1000
  40f6c8:	stp	x21, x22, [sp, #32]
  40f6cc:	stp	x23, x24, [sp, #48]
  40f6d0:	stp	x27, x28, [sp, #80]
  40f6d4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40f6d8:	mov	x22, x0
  40f6dc:	bl	422fc0 <wcrtomb@plt+0x1e3a0>
  40f6e0:	b	40f6f4 <wcrtomb@plt+0xaad4>
  40f6e4:	ldr	x0, [x19, #16]
  40f6e8:	bl	410b88 <wcrtomb@plt+0xbf68>
  40f6ec:	tst	w0, #0xff
  40f6f0:	b.eq	40f754 <wcrtomb@plt+0xab34>  // b.none
  40f6f4:	bl	4273a8 <wcrtomb@plt+0x22788>
  40f6f8:	mov	x19, x0
  40f6fc:	mov	x1, #0x0                   	// #0
  40f700:	cbnz	x0, 40f6e4 <wcrtomb@plt+0xaac4>
  40f704:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f708:	mov	x24, #0x3e8                 	// #1000
  40f70c:	add	x27, x27, #0x33c
  40f710:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f714:	bl	427428 <wcrtomb@plt+0x22808>
  40f718:	b	40f730 <wcrtomb@plt+0xab10>
  40f71c:	ldr	x0, [x19, #16]
  40f720:	mov	x1, #0x0                   	// #0
  40f724:	bl	410b88 <wcrtomb@plt+0xbf68>
  40f728:	tst	w0, #0xff
  40f72c:	b.eq	40f780 <wcrtomb@plt+0xab60>  // b.none
  40f730:	bl	4273a8 <wcrtomb@plt+0x22788>
  40f734:	mov	x19, x0
  40f738:	cbnz	x0, 40f71c <wcrtomb@plt+0xaafc>
  40f73c:	mov	x0, x22
  40f740:	bl	4047b0 <free@plt>
  40f744:	ldp	x21, x22, [sp, #32]
  40f748:	ldp	x23, x24, [sp, #48]
  40f74c:	ldp	x27, x28, [sp, #80]
  40f750:	b	40f634 <wcrtomb@plt+0xaa14>
  40f754:	ldr	x19, [x19, #16]
  40f758:	add	x0, sp, #0x218
  40f75c:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  40f760:	str	xzr, [sp, #928]
  40f764:	mov	x2, x19
  40f768:	mov	x1, x19
  40f76c:	add	x0, sp, #0x218
  40f770:	bl	40e138 <wcrtomb@plt+0x9518>
  40f774:	add	x0, sp, #0x218
  40f778:	bl	42f438 <wcrtomb@plt+0x2a818>
  40f77c:	b	40f6f4 <wcrtomb@plt+0xaad4>
  40f780:	ldr	x20, [x19, #16]
  40f784:	mov	x0, x20
  40f788:	bl	403ff0 <strlen@plt>
  40f78c:	mov	x23, x0
  40f790:	cmp	x24, x0
  40f794:	b.ls	40f8a4 <wcrtomb@plt+0xac84>  // b.plast
  40f798:	mov	x1, x20
  40f79c:	mov	x2, x23
  40f7a0:	mov	x0, x22
  40f7a4:	bl	403f70 <memcpy@plt>
  40f7a8:	add	x0, x22, x23
  40f7ac:	ldurb	w0, [x0, #-1]
  40f7b0:	cmp	w0, #0x2f
  40f7b4:	b.eq	40f7c4 <wcrtomb@plt+0xaba4>  // b.none
  40f7b8:	mov	w0, #0x2f                  	// #47
  40f7bc:	strb	w0, [x22, x23]
  40f7c0:	add	x23, x23, #0x1
  40f7c4:	add	x26, sp, #0x70
  40f7c8:	mov	x0, x26
  40f7cc:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  40f7d0:	ldr	x0, [x19, #56]
  40f7d4:	bl	419d28 <wcrtomb@plt+0x15108>
  40f7d8:	mov	x21, x0
  40f7dc:	cbnz	x0, 40f7ec <wcrtomb@plt+0xabcc>
  40f7e0:	mov	x0, x26
  40f7e4:	bl	42f438 <wcrtomb@plt+0x2a818>
  40f7e8:	b	40f730 <wcrtomb@plt+0xab10>
  40f7ec:	ldrb	w20, [x0]
  40f7f0:	cbz	w20, 40f7e0 <wcrtomb@plt+0xabc0>
  40f7f4:	adrp	x28, 493000 <_obstack_memory_used@@Base+0x41bf0>
  40f7f8:	add	x0, x28, #0x898
  40f7fc:	str	x0, [sp, #104]
  40f800:	b	40f814 <wcrtomb@plt+0xabf4>
  40f804:	add	x20, x20, #0x1
  40f808:	add	x21, x21, x20
  40f80c:	ldrb	w20, [x21]
  40f810:	cbz	w20, 40f7e0 <wcrtomb@plt+0xabc0>
  40f814:	mov	x0, x21
  40f818:	bl	403ff0 <strlen@plt>
  40f81c:	cmp	w20, #0x59
  40f820:	mov	x20, x0
  40f824:	b.ne	40f804 <wcrtomb@plt+0xabe4>  // b.any
  40f828:	ldr	x0, [sp, #112]
  40f82c:	cbz	x0, 40f8c8 <wcrtomb@plt+0xaca8>
  40f830:	add	x0, x23, x20
  40f834:	cmp	x0, x24
  40f838:	b.hi	40f884 <wcrtomb@plt+0xac64>  // b.pmore
  40f83c:	add	x1, x21, #0x1
  40f840:	add	x0, x22, x23
  40f844:	mov	x28, x1
  40f848:	bl	404910 <strcpy@plt>
  40f84c:	add	x0, sp, #0x218
  40f850:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  40f854:	str	x26, [sp, #928]
  40f858:	add	x0, sp, #0x218
  40f85c:	mov	x1, x28
  40f860:	mov	x2, x22
  40f864:	bl	40e138 <wcrtomb@plt+0x9518>
  40f868:	ldr	x0, [x25, #960]
  40f86c:	cbz	x0, 40f878 <wcrtomb@plt+0xac58>
  40f870:	mov	x0, x26
  40f874:	bl	4195a0 <wcrtomb@plt+0x14980>
  40f878:	add	x0, sp, #0x218
  40f87c:	bl	42f438 <wcrtomb@plt+0x2a818>
  40f880:	b	40f804 <wcrtomb@plt+0xabe4>
  40f884:	lsl	x24, x24, #1
  40f888:	cmp	x0, x24
  40f88c:	b.hi	40f884 <wcrtomb@plt+0xac64>  // b.pmore
  40f890:	mov	x0, x22
  40f894:	mov	x1, x24
  40f898:	bl	4501d0 <argp_parse@@Base+0x103f0>
  40f89c:	mov	x22, x0
  40f8a0:	b	40f83c <wcrtomb@plt+0xac1c>
  40f8a4:	lsl	x24, x24, #1
  40f8a8:	cmp	x23, x24
  40f8ac:	b.cs	40f8a4 <wcrtomb@plt+0xac84>  // b.hs, b.nlast
  40f8b0:	mov	x0, x22
  40f8b4:	mov	x1, x24
  40f8b8:	bl	4501d0 <argp_parse@@Base+0x103f0>
  40f8bc:	mov	x22, x0
  40f8c0:	ldr	x20, [x19, #16]
  40f8c4:	b	40f798 <wcrtomb@plt+0xab78>
  40f8c8:	ldr	x0, [sp, #104]
  40f8cc:	ldr	w2, [x27]
  40f8d0:	ldr	x1, [x19, #16]
  40f8d4:	ldr	w0, [x0]
  40f8d8:	bl	4045b0 <__openat_2@plt>
  40f8dc:	mov	w1, w0
  40f8e0:	tbnz	w0, #31, 40f908 <wcrtomb@plt+0xace8>
  40f8e4:	add	x2, x26, #0x58
  40f8e8:	mov	w0, #0x0                   	// #0
  40f8ec:	str	w1, [sp, #520]
  40f8f0:	bl	4049a0 <__fxstat@plt>
  40f8f4:	cbnz	w0, 40f928 <wcrtomb@plt+0xad08>
  40f8f8:	ldr	x0, [x19, #16]
  40f8fc:	bl	450328 <argp_parse@@Base+0x10548>
  40f900:	str	x0, [sp, #112]
  40f904:	b	40f830 <wcrtomb@plt+0xac10>
  40f908:	ldr	x1, [x19, #64]
  40f90c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40f910:	ldr	x0, [x19, #16]
  40f914:	cmp	x1, #0x0
  40f918:	add	x2, x2, #0x300
  40f91c:	cset	w1, eq  // eq = none
  40f920:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40f924:	b	40f7e0 <wcrtomb@plt+0xabc0>
  40f928:	ldr	x1, [x19, #64]
  40f92c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  40f930:	ldr	x0, [x19, #16]
  40f934:	cmp	x1, #0x0
  40f938:	add	x2, x2, #0x3c8
  40f93c:	cset	w1, eq  // eq = none
  40f940:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  40f944:	b	40f7e0 <wcrtomb@plt+0xabc0>
  40f948:	stp	x29, x30, [sp, #-80]!
  40f94c:	mov	x29, sp
  40f950:	stp	x19, x20, [sp, #16]
  40f954:	mov	x19, x0
  40f958:	tbnz	x0, #63, 40fa78 <wcrtomb@plt+0xae58>
  40f95c:	cmp	x0, w0, sxtw
  40f960:	mov	w2, #0x3                   	// #3
  40f964:	cset	w1, eq  // eq = none
  40f968:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f96c:	strh	w2, [sp, #72]
  40f970:	str	w0, [sp, #76]
  40f974:	ldr	w0, [x20, #1104]
  40f978:	cbz	w1, 40f9d0 <wcrtomb@plt+0xadb0>
  40f97c:	str	x21, [sp, #32]
  40f980:	mov	w1, #0x3fffffff            	// #1073741823
  40f984:	add	x21, sp, #0x48
  40f988:	cmp	w0, w1
  40f98c:	b.le	40fa4c <wcrtomb@plt+0xae2c>
  40f990:	mov	w3, #0xc0000000            	// #-1073741824
  40f994:	mov	w1, #0x6d01                	// #27905
  40f998:	mov	x2, x21
  40f99c:	add	w0, w0, w3
  40f9a0:	movk	w1, #0x4008, lsl #16
  40f9a4:	bl	435bc0 <wcrtomb@plt+0x30fa0>
  40f9a8:	mvn	w0, w0
  40f9ac:	lsr	w0, w0, #31
  40f9b0:	cbnz	w0, 40fa68 <wcrtomb@plt+0xae48>
  40f9b4:	bl	404ad0 <__errno_location@plt>
  40f9b8:	mov	x1, x0
  40f9bc:	ldr	w0, [x20, #1104]
  40f9c0:	ldr	w1, [x1]
  40f9c4:	cmp	w1, #0x5
  40f9c8:	b.eq	40facc <wcrtomb@plt+0xaeac>  // b.none
  40f9cc:	ldr	x21, [sp, #32]
  40f9d0:	mov	w1, #0x3fffffff            	// #1073741823
  40f9d4:	cmp	w0, w1
  40f9d8:	b.gt	40fa34 <wcrtomb@plt+0xae14>
  40f9dc:	mov	w2, #0x1                   	// #1
  40f9e0:	mov	x1, #0x0                   	// #0
  40f9e4:	bl	4041d0 <lseek@plt>
  40f9e8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40f9ec:	ldr	x3, [x1, #1048]
  40f9f0:	mul	x2, x19, x3
  40f9f4:	add	x1, x2, x0
  40f9f8:	sdiv	x19, x2, x19
  40f9fc:	cmp	x19, x3
  40fa00:	b.ne	40fa18 <wcrtomb@plt+0xadf8>  // b.any
  40fa04:	cmp	x0, x1
  40fa08:	lsr	x2, x2, #63
  40fa0c:	cset	w0, gt
  40fa10:	cmp	w0, w2
  40fa14:	b.eq	40fa90 <wcrtomb@plt+0xae70>  // b.none
  40fa18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fa1c:	ldr	x0, [x0, #816]
  40fa20:	ldr	x0, [x0]
  40fa24:	bl	4341b8 <wcrtomb@plt+0x2f598>
  40fa28:	ldp	x19, x20, [sp, #16]
  40fa2c:	ldp	x29, x30, [sp], #80
  40fa30:	ret
  40fa34:	mov	w1, #0xc0000000            	// #-1073741824
  40fa38:	mov	w2, #0x1                   	// #1
  40fa3c:	add	w0, w0, w1
  40fa40:	mov	x1, #0x0                   	// #0
  40fa44:	bl	4359b8 <wcrtomb@plt+0x30d98>
  40fa48:	b	40f9e8 <wcrtomb@plt+0xadc8>
  40fa4c:	mov	x1, #0x6d01                	// #27905
  40fa50:	mov	x2, x21
  40fa54:	movk	x1, #0x4008, lsl #16
  40fa58:	bl	404bd0 <ioctl@plt>
  40fa5c:	mvn	w0, w0
  40fa60:	lsr	w0, w0, #31
  40fa64:	cbz	w0, 40f9b4 <wcrtomb@plt+0xad94>
  40fa68:	ldp	x19, x20, [sp, #16]
  40fa6c:	ldr	x21, [sp, #32]
  40fa70:	ldp	x29, x30, [sp], #80
  40fa74:	ret
  40fa78:	neg	w0, w0
  40fa7c:	mov	w2, #0x4                   	// #4
  40fa80:	sxtw	x1, w0
  40fa84:	cmn	x1, x19
  40fa88:	cset	w1, eq  // eq = none
  40fa8c:	b	40f968 <wcrtomb@plt+0xad48>
  40fa90:	ldr	w0, [x20, #1104]
  40fa94:	cmp	x1, #0x0
  40fa98:	csel	x1, x1, xzr, ge  // ge = tcont
  40fa9c:	mov	w2, #0x3fffffff            	// #1073741823
  40faa0:	cmp	w0, w2
  40faa4:	b.le	40fb08 <wcrtomb@plt+0xaee8>
  40faa8:	mov	w3, #0xc0000000            	// #-1073741824
  40faac:	mov	w2, #0x0                   	// #0
  40fab0:	add	w0, w0, w3
  40fab4:	str	x1, [sp, #56]
  40fab8:	bl	4359b8 <wcrtomb@plt+0x30d98>
  40fabc:	ldr	x1, [sp, #56]
  40fac0:	cmp	x1, x0
  40fac4:	b.ne	40fa18 <wcrtomb@plt+0xadf8>  // b.any
  40fac8:	b	40fa28 <wcrtomb@plt+0xae08>
  40facc:	mov	w1, #0x3fffffff            	// #1073741823
  40fad0:	cmp	w0, w1
  40fad4:	b.le	40fb1c <wcrtomb@plt+0xaefc>
  40fad8:	mov	w3, #0xc0000000            	// #-1073741824
  40fadc:	mov	w1, #0x6d01                	// #27905
  40fae0:	mov	x2, x21
  40fae4:	add	w0, w0, w3
  40fae8:	movk	w1, #0x4008, lsl #16
  40faec:	bl	435bc0 <wcrtomb@plt+0x30fa0>
  40faf0:	mvn	w0, w0
  40faf4:	lsr	w0, w0, #31
  40faf8:	cbnz	w0, 40fa68 <wcrtomb@plt+0xae48>
  40fafc:	ldr	w0, [x20, #1104]
  40fb00:	ldr	x21, [sp, #32]
  40fb04:	b	40f9d0 <wcrtomb@plt+0xadb0>
  40fb08:	mov	w2, #0x0                   	// #0
  40fb0c:	str	x1, [sp, #56]
  40fb10:	bl	4041d0 <lseek@plt>
  40fb14:	ldr	x1, [sp, #56]
  40fb18:	b	40fac0 <wcrtomb@plt+0xaea0>
  40fb1c:	mov	x1, #0x6d01                	// #27905
  40fb20:	mov	x2, x21
  40fb24:	movk	x1, #0x4008, lsl #16
  40fb28:	bl	404bd0 <ioctl@plt>
  40fb2c:	mvn	w0, w0
  40fb30:	lsr	w0, w0, #31
  40fb34:	b	40faf8 <wcrtomb@plt+0xaed8>
  40fb38:	stp	x29, x30, [sp, #-64]!
  40fb3c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fb40:	mov	x29, sp
  40fb44:	stp	x21, x22, [sp, #32]
  40fb48:	add	x21, x1, #0x828
  40fb4c:	stp	x19, x20, [sp, #16]
  40fb50:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fb54:	mov	w19, w0
  40fb58:	ldrb	w0, [x21, #8]
  40fb5c:	ldr	x1, [x1, #2088]
  40fb60:	ldr	x22, [x20, #16]
  40fb64:	str	x1, [x20, #16]
  40fb68:	cbnz	w0, 40fbe4 <wcrtomb@plt+0xafc4>
  40fb6c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fb70:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fb74:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fb78:	ldr	x1, [x1, #4080]
  40fb7c:	ldr	x2, [x2, #64]
  40fb80:	ldr	x0, [x0, #4064]
  40fb84:	add	x1, x1, x2
  40fb88:	subs	x0, x1, x0
  40fb8c:	b.eq	40fb94 <wcrtomb@plt+0xaf74>  // b.none
  40fb90:	bl	40f948 <wcrtomb@plt+0xad28>
  40fb94:	bl	408d60 <wcrtomb@plt+0x4140>
  40fb98:	str	x22, [x20, #16]
  40fb9c:	cbz	w19, 40fbd0 <wcrtomb@plt+0xafb0>
  40fba0:	ldrb	w0, [x21, #8]
  40fba4:	cbnz	w0, 40fbd0 <wcrtomb@plt+0xafb0>
  40fba8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fbac:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fbb0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fbb4:	ldr	x0, [x0, #4080]
  40fbb8:	ldr	x2, [x2, #64]
  40fbbc:	ldr	x1, [x1, #4064]
  40fbc0:	add	x0, x0, x2
  40fbc4:	subs	x0, x1, x0
  40fbc8:	b.eq	40fbd0 <wcrtomb@plt+0xafb0>  // b.none
  40fbcc:	bl	40f948 <wcrtomb@plt+0xad28>
  40fbd0:	str	wzr, [x21, #12]
  40fbd4:	ldp	x19, x20, [sp, #16]
  40fbd8:	ldp	x21, x22, [sp, #32]
  40fbdc:	ldp	x29, x30, [sp], #64
  40fbe0:	ret
  40fbe4:	mov	w0, #0x1                   	// #1
  40fbe8:	str	x23, [sp, #48]
  40fbec:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fbf0:	str	w0, [x23, #1104]
  40fbf4:	bl	408d60 <wcrtomb@plt+0x4140>
  40fbf8:	str	wzr, [x23, #1104]
  40fbfc:	ldr	x23, [sp, #48]
  40fc00:	b	40fb98 <wcrtomb@plt+0xaf78>
  40fc04:	nop
  40fc08:	stp	x29, x30, [sp, #-128]!
  40fc0c:	mov	x29, sp
  40fc10:	stp	x19, x20, [sp, #16]
  40fc14:	stp	x21, x22, [sp, #32]
  40fc18:	stp	x23, x24, [sp, #48]
  40fc1c:	stp	x25, x26, [sp, #64]
  40fc20:	bl	422440 <wcrtomb@plt+0x1d820>
  40fc24:	mov	w0, #0x2                   	// #2
  40fc28:	bl	408d78 <wcrtomb@plt+0x4158>
  40fc2c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fc30:	ldr	x0, [x0, #816]
  40fc34:	ldr	x1, [x0]
  40fc38:	ldrb	w0, [x1]
  40fc3c:	subs	w0, w0, #0x2d
  40fc40:	b.ne	40fc48 <wcrtomb@plt+0xb028>  // b.any
  40fc44:	ldrb	w0, [x1, #1]
  40fc48:	cmp	w0, #0x0
  40fc4c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fc50:	add	x19, x1, #0x828
  40fc54:	cset	w0, eq  // eq = none
  40fc58:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fc5c:	add	x22, x22, #0xe0
  40fc60:	mov	x1, x22
  40fc64:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fc68:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40fc6c:	mov	w2, #0x1                   	// #1
  40fc70:	add	x24, x24, #0xcd
  40fc74:	add	x25, x25, #0xa30
  40fc78:	mov	w21, #0x0                   	// #0
  40fc7c:	strb	w0, [x19, #8]
  40fc80:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fc84:	add	x0, x0, #0x68
  40fc88:	bl	41c318 <wcrtomb@plt+0x176f8>
  40fc8c:	mov	w20, w0
  40fc90:	cmp	w0, #0x3
  40fc94:	b.eq	40fdb0 <wcrtomb@plt+0xb190>  // b.none
  40fc98:	b.hi	40fce4 <wcrtomb@plt+0xb0c4>  // b.pmore
  40fc9c:	cmp	w0, #0x2
  40fca0:	b.eq	40fdd0 <wcrtomb@plt+0xb1b0>  // b.none
  40fca4:	cbz	w0, 41016c <wcrtomb@plt+0xb54c>
  40fca8:	ldr	x0, [x22, #8]
  40fcac:	bl	427308 <wcrtomb@plt+0x226e8>
  40fcb0:	cbz	x0, 410308 <wcrtomb@plt+0xb6e8>
  40fcb4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fcb8:	ldr	x1, [x0, #48]
  40fcbc:	ldr	x2, [x2, #888]
  40fcc0:	add	x1, x1, #0x1
  40fcc4:	str	x1, [x0, #48]
  40fcc8:	cbnz	x2, 4102fc <wcrtomb@plt+0xb6dc>
  40fccc:	cmp	x1, #0x0
  40fcd0:	cset	w0, eq  // eq = none
  40fcd4:	cbnz	w0, 410308 <wcrtomb@plt+0xb6e8>
  40fcd8:	mov	w20, #0x1                   	// #1
  40fcdc:	stp	x27, x28, [sp, #80]
  40fce0:	b	40fdd4 <wcrtomb@plt+0xb1b4>
  40fce4:	cmp	w0, #0x4
  40fce8:	b.eq	410318 <wcrtomb@plt+0xb6f8>  // b.none
  40fcec:	cmp	w0, #0x5
  40fcf0:	b.ne	40fd8c <wcrtomb@plt+0xb16c>  // b.any
  40fcf4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fcf8:	add	x0, x0, #0x68
  40fcfc:	ldr	x0, [x0]
  40fd00:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40fd04:	cmp	w21, #0x3
  40fd08:	b.hi	410164 <wcrtomb@plt+0xb544>  // b.pmore
  40fd0c:	cbnz	w21, 40fd4c <wcrtomb@plt+0xb12c>
  40fd10:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fd14:	add	x21, x0, #0x470
  40fd18:	ldr	x0, [x0, #1136]
  40fd1c:	cbz	x0, 40fd24 <wcrtomb@plt+0xb104>
  40fd20:	blr	x0
  40fd24:	mov	w2, #0x5                   	// #5
  40fd28:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  40fd2c:	mov	x0, #0x0                   	// #0
  40fd30:	add	x1, x1, #0x970
  40fd34:	bl	4049c0 <dcgettext@plt>
  40fd38:	mov	x2, x0
  40fd3c:	mov	w1, #0x0                   	// #0
  40fd40:	mov	w0, #0x0                   	// #0
  40fd44:	bl	404050 <error@plt>
  40fd48:	b	40fd54 <wcrtomb@plt+0xb134>
  40fd4c:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fd50:	add	x21, x21, #0x470
  40fd54:	ldr	x0, [x21]
  40fd58:	cbz	x0, 40fd60 <wcrtomb@plt+0xb140>
  40fd5c:	blr	x0
  40fd60:	mov	x1, x25
  40fd64:	mov	w2, #0x5                   	// #5
  40fd68:	mov	x0, #0x0                   	// #0
  40fd6c:	bl	4049c0 <dcgettext@plt>
  40fd70:	mov	w1, #0x0                   	// #0
  40fd74:	mov	x2, x0
  40fd78:	mov	w0, #0x0                   	// #0
  40fd7c:	bl	404050 <error@plt>
  40fd80:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fd84:	mov	w1, #0x2                   	// #2
  40fd88:	str	w1, [x0, #3568]
  40fd8c:	mov	w21, w20
  40fd90:	mov	x1, x22
  40fd94:	mov	w2, #0x1                   	// #1
  40fd98:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fd9c:	add	x0, x0, #0x68
  40fda0:	bl	41c318 <wcrtomb@plt+0x176f8>
  40fda4:	mov	w20, w0
  40fda8:	cmp	w0, #0x3
  40fdac:	b.ne	40fc98 <wcrtomb@plt+0xb078>  // b.any
  40fdb0:	ldrb	w0, [x24]
  40fdb4:	cbz	w0, 410318 <wcrtomb@plt+0xb6f8>
  40fdb8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fdbc:	add	x0, x0, #0x68
  40fdc0:	mov	w21, w20
  40fdc4:	ldr	x0, [x0]
  40fdc8:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40fdcc:	b	40fd90 <wcrtomb@plt+0xb170>
  40fdd0:	stp	x27, x28, [sp, #80]
  40fdd4:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fdd8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fddc:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fde0:	ldr	x1, [x1, #4064]
  40fde4:	ldr	x0, [x0, #1048]
  40fde8:	sub	x1, x1, #0x1
  40fdec:	str	x1, [x2, #64]
  40fdf0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  40fdf4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fdf8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fdfc:	ldr	x25, [x1, #40]
  40fe00:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fe04:	strb	wzr, [x2, #24]
  40fe08:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fe0c:	ldr	x1, [x1, #16]
  40fe10:	str	x0, [x2, #2088]
  40fe14:	sub	x2, x25, x1
  40fe18:	asr	x3, x2, #9
  40fe1c:	str	w3, [x19, #12]
  40fe20:	cbnz	w3, 41036c <wcrtomb@plt+0xb74c>
  40fe24:	cmp	w20, #0x1
  40fe28:	b.eq	41041c <wcrtomb@plt+0xb7fc>  // b.none
  40fe2c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fe30:	str	x0, [sp, #104]
  40fe34:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fe38:	add	x20, x20, #0x36c
  40fe3c:	ldr	x0, [x0, #4072]
  40fe40:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  40fe44:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  40fe48:	add	x2, x2, #0xa48
  40fe4c:	add	x1, x1, #0xdf0
  40fe50:	stp	x2, x1, [sp, #112]
  40fe54:	cmp	x25, x0
  40fe58:	b.eq	4100c0 <wcrtomb@plt+0xb4a0>  // b.none
  40fe5c:	mov	x1, x22
  40fe60:	mov	w2, #0x0                   	// #0
  40fe64:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fe68:	add	x0, x0, #0x68
  40fe6c:	bl	41c318 <wcrtomb@plt+0x176f8>
  40fe70:	mov	w21, w0
  40fe74:	mov	x0, x22
  40fe78:	bl	416dc0 <wcrtomb@plt+0x121a0>
  40fe7c:	cmp	w21, #0x3
  40fe80:	b.eq	4100e8 <wcrtomb@plt+0xb4c8>  // b.none
  40fe84:	sub	w0, w21, #0x3
  40fe88:	cmp	w0, #0x1
  40fe8c:	b.ls	410378 <wcrtomb@plt+0xb758>  // b.plast
  40fe90:	cmp	w21, #0x5
  40fe94:	b.eq	410104 <wcrtomb@plt+0xb4e4>  // b.none
  40fe98:	ldr	x0, [x22, #8]
  40fe9c:	bl	427308 <wcrtomb@plt+0x226e8>
  40fea0:	cbz	x0, 40fec8 <wcrtomb@plt+0xb2a8>
  40fea4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  40fea8:	ldr	x1, [x0, #48]
  40feac:	ldr	x2, [x2, #888]
  40feb0:	add	x1, x1, #0x1
  40feb4:	str	x1, [x0, #48]
  40feb8:	cbnz	x2, 410264 <wcrtomb@plt+0xb644>
  40febc:	cmp	x1, #0x0
  40fec0:	cset	w0, ne  // ne = any
  40fec4:	cbnz	w0, 410270 <wcrtomb@plt+0xb650>
  40fec8:	ldr	x24, [x22, #352]
  40fecc:	ldr	w2, [x19, #12]
  40fed0:	ldr	x21, [x19]
  40fed4:	cbz	x24, 410174 <wcrtomb@plt+0xb554>
  40fed8:	cmp	xzr, x24, lsr #9
  40fedc:	lsr	x25, x24, #9
  40fee0:	and	x23, x24, #0xfffffffffffffe00
  40fee4:	and	x24, x24, #0x1ff
  40fee8:	ldr	x28, [x22, #360]
  40feec:	b.eq	40ff34 <wcrtomb@plt+0xb314>  // b.none
  40fef0:	add	x25, x28, x25, lsl #9
  40fef4:	mov	x27, x28
  40fef8:	sbfiz	x0, x2, #9, #32
  40fefc:	add	w26, w2, #0x1
  40ff00:	mov	x1, x27
  40ff04:	add	x0, x21, x0
  40ff08:	mov	x2, #0x200                 	// #512
  40ff0c:	str	w26, [x19, #12]
  40ff10:	bl	403f70 <memcpy@plt>
  40ff14:	add	x27, x27, #0x200
  40ff18:	ldr	w0, [x20]
  40ff1c:	cmp	w26, w0
  40ff20:	b.eq	4100c8 <wcrtomb@plt+0xb4a8>  // b.none
  40ff24:	cmp	x25, x27
  40ff28:	b.eq	40ff38 <wcrtomb@plt+0xb318>  // b.none
  40ff2c:	mov	w2, w26
  40ff30:	b	40fef8 <wcrtomb@plt+0xb2d8>
  40ff34:	mov	w26, w2
  40ff38:	sbfiz	x4, x26, #9, #32
  40ff3c:	add	x1, x28, x23
  40ff40:	add	x4, x21, x4
  40ff44:	mov	x2, x24
  40ff48:	mov	x0, x4
  40ff4c:	add	w25, w26, #0x1
  40ff50:	bl	403f70 <memcpy@plt>
  40ff54:	add	x0, x0, x24
  40ff58:	mov	x1, #0x200                 	// #512
  40ff5c:	sub	x2, x1, x24
  40ff60:	mov	w1, #0x0                   	// #0
  40ff64:	bl	404410 <memset@plt>
  40ff68:	ldr	w0, [x20]
  40ff6c:	str	w25, [x19, #12]
  40ff70:	cmp	w25, w0
  40ff74:	b.eq	410408 <wcrtomb@plt+0xb7e8>  // b.none
  40ff78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ff7c:	add	x0, x0, #0x68
  40ff80:	mov	x2, #0x200                 	// #512
  40ff84:	ldr	x24, [x0]
  40ff88:	sbfiz	x0, x25, #9, #32
  40ff8c:	add	x0, x21, x0
  40ff90:	add	w25, w25, #0x1
  40ff94:	mov	x1, x24
  40ff98:	bl	403f70 <memcpy@plt>
  40ff9c:	ldr	x2, [x22, #136]
  40ffa0:	mov	x0, x24
  40ffa4:	str	w25, [x19, #12]
  40ffa8:	add	x5, x2, #0x3fe
  40ffac:	adds	x2, x2, #0x1ff
  40ffb0:	csel	x2, x5, x2, mi  // mi = first
  40ffb4:	asr	x27, x2, #9
  40ffb8:	bl	4060e0 <wcrtomb@plt+0x14c0>
  40ffbc:	ldr	w1, [x19, #12]
  40ffc0:	ldr	w0, [x20]
  40ffc4:	cmp	w1, w0
  40ffc8:	b.eq	410360 <wcrtomb@plt+0xb740>  // b.none
  40ffcc:	ldr	x1, [sp, #104]
  40ffd0:	ldr	x0, [x1, #4072]
  40ffd4:	add	x1, x1, #0xfe8
  40ffd8:	str	x1, [sp, #96]
  40ffdc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  40ffe0:	add	x28, x1, #0x28
  40ffe4:	ldr	x25, [x1, #40]
  40ffe8:	sub	x4, x0, x25
  40ffec:	sbfx	x1, x4, #9, #32
  40fff0:	asr	x4, x4, #9
  40fff4:	cmp	x1, x27
  40fff8:	csel	w26, w4, w27, le
  40fffc:	cbz	x27, 40fe54 <wcrtomb@plt+0xb234>
  410000:	cmp	x25, x0
  410004:	b.eq	41007c <wcrtomb@plt+0xb45c>  // b.none
  410008:	ldr	w24, [x20]
  41000c:	ldr	w23, [x19, #12]
  410010:	sub	w24, w24, w23
  410014:	cmp	w24, w26
  410018:	csel	w24, w24, w26, le
  41001c:	cbz	w24, 410458 <wcrtomb@plt+0xb838>
  410020:	ldr	x7, [x19]
  410024:	lsl	w2, w24, #9
  410028:	sbfiz	x0, x23, #9, #32
  41002c:	mov	x1, x25
  410030:	sxtw	x21, w2
  410034:	add	x0, x7, x0
  410038:	mov	x2, x21
  41003c:	bl	403f70 <memcpy@plt>
  410040:	ldr	x25, [x28]
  410044:	add	w3, w23, w24
  410048:	ldr	w0, [x20]
  41004c:	sub	x27, x27, w24, sxtw
  410050:	add	x25, x25, x21
  410054:	str	x25, [x28]
  410058:	str	w3, [x19, #12]
  41005c:	sub	w26, w26, w24
  410060:	cmp	w3, w0
  410064:	b.eq	41009c <wcrtomb@plt+0xb47c>  // b.none
  410068:	ldr	x0, [sp, #96]
  41006c:	ldr	x0, [x0]
  410070:	cbz	x27, 40fe54 <wcrtomb@plt+0xb234>
  410074:	cmp	x25, x0
  410078:	b.ne	410008 <wcrtomb@plt+0xb3e8>  // b.any
  41007c:	bl	408d50 <wcrtomb@plt+0x4130>
  410080:	ldr	w24, [x20]
  410084:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410088:	cmp	x27, w24, sxtw
  41008c:	ldr	x25, [x0, #16]
  410090:	csel	w26, w24, w27, ge  // ge = tcont
  410094:	str	x25, [x28]
  410098:	b	41000c <wcrtomb@plt+0xb3ec>
  41009c:	mov	w0, #0x1                   	// #1
  4100a0:	bl	40fb38 <wcrtomb@plt+0xaf18>
  4100a4:	ldr	x0, [sp, #96]
  4100a8:	ldr	x25, [x28]
  4100ac:	ldr	x0, [x0]
  4100b0:	cbnz	x27, 410000 <wcrtomb@plt+0xb3e0>
  4100b4:	cmp	x25, x0
  4100b8:	b.ne	40fe5c <wcrtomb@plt+0xb23c>  // b.any
  4100bc:	nop
  4100c0:	bl	406210 <wcrtomb@plt+0x15f0>
  4100c4:	b	40fe5c <wcrtomb@plt+0xb23c>
  4100c8:	mov	w0, #0x1                   	// #1
  4100cc:	bl	40fb38 <wcrtomb@plt+0xaf18>
  4100d0:	cmp	x27, x25
  4100d4:	ldr	w26, [x19, #12]
  4100d8:	ldr	x21, [x19]
  4100dc:	b.eq	40ff38 <wcrtomb@plt+0xb318>  // b.none
  4100e0:	mov	w2, w26
  4100e4:	b	40fef8 <wcrtomb@plt+0xb2d8>
  4100e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4100ec:	ldrb	w0, [x0, #205]
  4100f0:	cbz	w0, 40fe84 <wcrtomb@plt+0xb264>
  4100f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4100f8:	add	x0, x0, #0x68
  4100fc:	ldr	x0, [x0]
  410100:	b	41014c <wcrtomb@plt+0xb52c>
  410104:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410108:	ldr	x0, [x0, #1136]
  41010c:	cbz	x0, 410114 <wcrtomb@plt+0xb4f4>
  410110:	blr	x0
  410114:	ldr	x1, [sp, #112]
  410118:	mov	w2, #0x5                   	// #5
  41011c:	mov	x0, #0x0                   	// #0
  410120:	bl	4049c0 <dcgettext@plt>
  410124:	mov	x2, x0
  410128:	mov	w1, #0x0                   	// #0
  41012c:	mov	w0, #0x0                   	// #0
  410130:	bl	404050 <error@plt>
  410134:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410138:	add	x0, x0, #0x68
  41013c:	ldr	x2, [sp, #120]
  410140:	mov	w1, #0x2                   	// #2
  410144:	ldr	x0, [x0]
  410148:	str	w1, [x2]
  41014c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  410150:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410154:	ldr	x25, [x0, #40]
  410158:	ldr	x0, [sp, #104]
  41015c:	ldr	x0, [x0, #4072]
  410160:	b	40fe54 <wcrtomb@plt+0xb234>
  410164:	cmp	w21, #0x4
  410168:	b.ne	40fd8c <wcrtomb@plt+0xb16c>  // b.any
  41016c:	stp	x27, x28, [sp, #80]
  410170:	bl	404650 <abort@plt>
  410174:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  410178:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41017c:	ldr	x24, [x1, #96]
  410180:	ldr	x1, [x0, #88]
  410184:	cbz	x24, 4101cc <wcrtomb@plt+0xb5ac>
  410188:	mov	x26, x1
  41018c:	add	x24, x1, x24, lsl #9
  410190:	sbfiz	x0, x2, #9, #32
  410194:	add	w25, w2, #0x1
  410198:	mov	x1, x26
  41019c:	add	x0, x21, x0
  4101a0:	mov	x2, #0x200                 	// #512
  4101a4:	str	w25, [x19, #12]
  4101a8:	bl	403f70 <memcpy@plt>
  4101ac:	add	x26, x26, #0x200
  4101b0:	ldr	w0, [x20]
  4101b4:	cmp	w25, w0
  4101b8:	b.eq	410228 <wcrtomb@plt+0xb608>  // b.none
  4101bc:	cmp	x24, x26
  4101c0:	b.eq	4101d0 <wcrtomb@plt+0xb5b0>  // b.none
  4101c4:	mov	w2, w25
  4101c8:	b	410190 <wcrtomb@plt+0xb570>
  4101cc:	mov	w25, w2
  4101d0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4101d4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4101d8:	ldr	x24, [x1, #112]
  4101dc:	ldr	x1, [x0, #120]
  4101e0:	cbz	x24, 40ff78 <wcrtomb@plt+0xb358>
  4101e4:	mov	x26, x1
  4101e8:	add	x24, x1, x24, lsl #9
  4101ec:	nop
  4101f0:	sbfiz	x0, x25, #9, #32
  4101f4:	mov	x1, x26
  4101f8:	add	w25, w25, #0x1
  4101fc:	add	x0, x21, x0
  410200:	mov	x2, #0x200                 	// #512
  410204:	str	w25, [x19, #12]
  410208:	bl	403f70 <memcpy@plt>
  41020c:	add	x26, x26, #0x200
  410210:	ldr	w0, [x20]
  410214:	cmp	w25, w0
  410218:	b.eq	410248 <wcrtomb@plt+0xb628>  // b.none
  41021c:	cmp	x24, x26
  410220:	b.ne	4101f0 <wcrtomb@plt+0xb5d0>  // b.any
  410224:	b	40ff78 <wcrtomb@plt+0xb358>
  410228:	mov	w0, #0x1                   	// #1
  41022c:	bl	40fb38 <wcrtomb@plt+0xaf18>
  410230:	cmp	x26, x24
  410234:	ldr	w25, [x19, #12]
  410238:	ldr	x21, [x19]
  41023c:	b.eq	4101d0 <wcrtomb@plt+0xb5b0>  // b.none
  410240:	mov	w2, w25
  410244:	b	410190 <wcrtomb@plt+0xb570>
  410248:	mov	w0, #0x1                   	// #1
  41024c:	bl	40fb38 <wcrtomb@plt+0xaf18>
  410250:	cmp	x26, x24
  410254:	ldr	w25, [x19, #12]
  410258:	ldr	x21, [x19]
  41025c:	b.ne	4101f0 <wcrtomb@plt+0xb5d0>  // b.any
  410260:	b	40ff78 <wcrtomb@plt+0xb358>
  410264:	cmp	x1, x2
  410268:	cset	w0, eq  // eq = none
  41026c:	cbz	w0, 40fec8 <wcrtomb@plt+0xb2a8>
  410270:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410274:	ldr	x0, [x0, #104]
  410278:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41027c:	ldr	x0, [sp, #104]
  410280:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  410284:	ldr	x3, [x22, #136]
  410288:	ldr	x2, [x1, #40]
  41028c:	add	x4, x3, #0x3fe
  410290:	ldr	x0, [x0, #4072]
  410294:	adds	x3, x3, #0x1ff
  410298:	csel	x3, x4, x3, mi  // mi = first
  41029c:	sub	x1, x0, x2
  4102a0:	asr	x25, x3, #9
  4102a4:	asr	x1, x1, #9
  4102a8:	cmp	x1, x3, asr #9
  4102ac:	b.gt	4102ec <wcrtomb@plt+0xb6cc>
  4102b0:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  4102b4:	add	x28, x6, #0x28
  4102b8:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4102bc:	add	x0, x21, #0xfe8
  4102c0:	str	x0, [sp, #96]
  4102c4:	nop
  4102c8:	sub	x25, x25, x1
  4102cc:	bl	406210 <wcrtomb@plt+0x15f0>
  4102d0:	ldr	x0, [sp, #96]
  4102d4:	ldr	x2, [x28]
  4102d8:	ldr	x0, [x0]
  4102dc:	sub	x1, x0, x2
  4102e0:	cmp	x25, x1, asr #9
  4102e4:	asr	x1, x1, #9
  4102e8:	b.ge	4102c8 <wcrtomb@plt+0xb6a8>  // b.tcont
  4102ec:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4102f0:	add	x25, x2, x25, lsl #9
  4102f4:	str	x25, [x1, #40]
  4102f8:	b	40fe40 <wcrtomb@plt+0xb220>
  4102fc:	cmp	x1, x2
  410300:	cset	w0, ne  // ne = any
  410304:	cbz	w0, 40fcd8 <wcrtomb@plt+0xb0b8>
  410308:	mov	w20, #0x1                   	// #1
  41030c:	bl	41e038 <wcrtomb@plt+0x19418>
  410310:	mov	w21, w20
  410314:	b	40fd90 <wcrtomb@plt+0xb170>
  410318:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41031c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410320:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  410324:	ldr	x1, [x1, #4064]
  410328:	ldr	x0, [x0, #1048]
  41032c:	sub	x1, x1, #0x1
  410330:	str	x1, [x2, #64]
  410334:	bl	4501a0 <argp_parse@@Base+0x103c0>
  410338:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41033c:	str	x0, [x1, #2088]
  410340:	bl	4047b0 <free@plt>
  410344:	bl	406be8 <wcrtomb@plt+0x1fc8>
  410348:	ldp	x19, x20, [sp, #16]
  41034c:	ldp	x21, x22, [sp, #32]
  410350:	ldp	x23, x24, [sp, #48]
  410354:	ldp	x25, x26, [sp, #64]
  410358:	ldp	x29, x30, [sp], #128
  41035c:	b	422ca8 <wcrtomb@plt+0x1e088>
  410360:	mov	w0, #0x1                   	// #1
  410364:	bl	40fb38 <wcrtomb@plt+0xaf18>
  410368:	b	40ffcc <wcrtomb@plt+0xb3ac>
  41036c:	sxtw	x2, w2
  410370:	bl	403f70 <memcpy@plt>
  410374:	b	40fe24 <wcrtomb@plt+0xb204>
  410378:	mov	w21, #0x0                   	// #0
  41037c:	nop
  410380:	ldr	w3, [x19, #12]
  410384:	mov	w1, #0x0                   	// #0
  410388:	ldr	w2, [x20]
  41038c:	ldr	x0, [x19]
  410390:	sub	w2, w2, w3
  410394:	sbfiz	x3, x3, #9, #32
  410398:	add	w21, w21, w2
  41039c:	lsl	w2, w2, #9
  4103a0:	add	x0, x0, x3
  4103a4:	sxtw	x2, w2
  4103a8:	bl	404410 <memset@plt>
  4103ac:	cmp	w21, #0x1
  4103b0:	cset	w0, le
  4103b4:	bl	40fb38 <wcrtomb@plt+0xaf18>
  4103b8:	cmp	w21, #0x1
  4103bc:	b.le	410380 <wcrtomb@plt+0xb760>
  4103c0:	ldrb	w0, [x19, #8]
  4103c4:	cbnz	w0, 4103dc <wcrtomb@plt+0xb7bc>
  4103c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4103cc:	mov	w1, #0x3fffffff            	// #1073741823
  4103d0:	ldr	w0, [x0, #1104]
  4103d4:	cmp	w0, w1
  4103d8:	b.le	410430 <wcrtomb@plt+0xb810>
  4103dc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4103e0:	ldp	x27, x28, [sp, #80]
  4103e4:	ldr	x0, [x0, #2088]
  4103e8:	bl	4047b0 <free@plt>
  4103ec:	bl	406be8 <wcrtomb@plt+0x1fc8>
  4103f0:	ldp	x19, x20, [sp, #16]
  4103f4:	ldp	x21, x22, [sp, #32]
  4103f8:	ldp	x23, x24, [sp, #48]
  4103fc:	ldp	x25, x26, [sp, #64]
  410400:	ldp	x29, x30, [sp], #128
  410404:	b	422ca8 <wcrtomb@plt+0x1e088>
  410408:	mov	w0, #0x1                   	// #1
  41040c:	bl	40fb38 <wcrtomb@plt+0xaf18>
  410410:	ldr	w25, [x19, #12]
  410414:	ldr	x21, [x19]
  410418:	b	40ff78 <wcrtomb@plt+0xb358>
  41041c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  410420:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  410424:	add	x20, x20, #0x36c
  410428:	str	x0, [sp, #104]
  41042c:	b	410270 <wcrtomb@plt+0xb650>
  410430:	bl	42a840 <wcrtomb@plt+0x25c20>
  410434:	cbnz	w0, 410444 <wcrtomb@plt+0xb824>
  410438:	ldr	x0, [x19]
  41043c:	ldp	x27, x28, [sp, #80]
  410440:	b	410340 <wcrtomb@plt+0xb720>
  410444:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410448:	ldr	x0, [x0, #816]
  41044c:	ldr	x0, [x0]
  410450:	bl	434588 <wcrtomb@plt+0x2f968>
  410454:	b	410438 <wcrtomb@plt+0xb818>
  410458:	bl	404650 <abort@plt>
  41045c:	nop
  410460:	stp	x29, x30, [sp, #-16]!
  410464:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410468:	mov	x29, sp
  41046c:	ldr	x0, [x0, #72]
  410470:	cbz	x0, 410478 <wcrtomb@plt+0xb858>
  410474:	blr	x0
  410478:	mov	w2, #0x5                   	// #5
  41047c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  410480:	mov	x0, #0x0                   	// #0
  410484:	add	x1, x1, #0xa70
  410488:	bl	4049c0 <dcgettext@plt>
  41048c:	mov	x2, x0
  410490:	mov	w1, #0x0                   	// #0
  410494:	mov	w0, #0x2                   	// #2
  410498:	bl	404050 <error@plt>
  41049c:	bl	404650 <abort@plt>
  4104a0:	stp	x29, x30, [sp, #-16]!
  4104a4:	mov	w2, #0x5                   	// #5
  4104a8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4104ac:	mov	x29, sp
  4104b0:	add	x1, x1, #0xa98
  4104b4:	mov	x0, #0x0                   	// #0
  4104b8:	bl	4049c0 <dcgettext@plt>
  4104bc:	mov	x3, x0
  4104c0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4104c4:	add	x2, x2, #0x828
  4104c8:	mov	w1, #0x0                   	// #0
  4104cc:	mov	w0, #0x0                   	// #0
  4104d0:	bl	404050 <error@plt>
  4104d4:	bl	410460 <wcrtomb@plt+0xb840>
  4104d8:	cmp	x0, #0x0
  4104dc:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4104e0:	add	x1, x1, #0x838
  4104e4:	mov	w2, #0x8000000             	// #134217728
  4104e8:	csel	x0, x1, x0, eq  // eq = none
  4104ec:	str	w2, [x0]
  4104f0:	ret
  4104f4:	nop
  4104f8:	stp	x29, x30, [sp, #-48]!
  4104fc:	mov	x29, sp
  410500:	stp	x19, x20, [sp, #16]
  410504:	mov	x19, x1
  410508:	mov	w20, w2
  41050c:	str	x21, [sp, #32]
  410510:	mov	x21, x0
  410514:	bl	404740 <__ctype_b_loc@plt>
  410518:	ldrb	w1, [x19]
  41051c:	ldr	x4, [x0]
  410520:	ubfiz	x0, x1, #1, #8
  410524:	ldrh	w0, [x4, x0]
  410528:	tbz	w0, #13, 410540 <wcrtomb@plt+0xb920>
  41052c:	nop
  410530:	ldrb	w1, [x19, #1]!
  410534:	ubfiz	x3, x1, #1, #8
  410538:	ldrh	w3, [x4, x3]
  41053c:	tbnz	w3, #13, 410530 <wcrtomb@plt+0xb910>
  410540:	cmp	w1, #0x23
  410544:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410548:	b.eq	4105e0 <wcrtomb@plt+0xb9c0>  // b.none
  41054c:	cmp	w1, #0x21
  410550:	b.eq	4105bc <wcrtomb@plt+0xb99c>  // b.none
  410554:	ldrb	w0, [x19]
  410558:	cmp	w0, #0x52
  41055c:	b.eq	41057c <wcrtomb@plt+0xb95c>  // b.none
  410560:	mov	w2, w20
  410564:	mov	x1, x19
  410568:	mov	x0, x21
  41056c:	ldp	x19, x20, [sp, #16]
  410570:	ldr	x21, [sp, #32]
  410574:	ldp	x29, x30, [sp], #48
  410578:	b	442230 <argp_parse@@Base+0x2450>
  41057c:	ldrb	w0, [x19, #1]
  410580:	cmp	w0, #0x45
  410584:	b.ne	410560 <wcrtomb@plt+0xb940>  // b.any
  410588:	ldrb	w0, [x19, #2]
  41058c:	cmp	w0, #0x3a
  410590:	b.ne	410560 <wcrtomb@plt+0xb940>  // b.any
  410594:	and	w20, w20, #0xefffffff
  410598:	add	x19, x19, #0x3
  41059c:	orr	w20, w20, #0x8000000
  4105a0:	mov	x1, x19
  4105a4:	mov	w2, w20
  4105a8:	mov	x0, x21
  4105ac:	ldp	x19, x20, [sp, #16]
  4105b0:	ldr	x21, [sp, #32]
  4105b4:	ldp	x29, x30, [sp], #48
  4105b8:	b	442230 <argp_parse@@Base+0x2450>
  4105bc:	ldrb	w0, [x19, #1]
  4105c0:	cmp	w0, #0x21
  4105c4:	b.eq	4105f0 <wcrtomb@plt+0xb9d0>  // b.none
  4105c8:	ldrb	w0, [x19, #1]
  4105cc:	add	x19, x19, #0x1
  4105d0:	orr	w20, w20, #0x20000000
  4105d4:	cmp	w0, #0x52
  4105d8:	b.ne	410560 <wcrtomb@plt+0xb940>  // b.any
  4105dc:	b	41057c <wcrtomb@plt+0xb95c>
  4105e0:	ldp	x19, x20, [sp, #16]
  4105e4:	ldr	x21, [sp, #32]
  4105e8:	ldp	x29, x30, [sp], #48
  4105ec:	ret
  4105f0:	add	x19, x19, #0x2
  4105f4:	b	410554 <wcrtomb@plt+0xb934>
  4105f8:	stp	x29, x30, [sp, #-48]!
  4105fc:	mov	x29, sp
  410600:	stp	x19, x20, [sp, #16]
  410604:	mov	x19, x1
  410608:	mov	x20, x0
  41060c:	str	x21, [sp, #32]
  410610:	mov	w21, w2
  410614:	bl	404740 <__ctype_b_loc@plt>
  410618:	ldrb	w1, [x19]
  41061c:	ldr	x4, [x0]
  410620:	ubfiz	x0, x1, #1, #8
  410624:	ldrh	w0, [x4, x0]
  410628:	tbz	w0, #13, 410640 <wcrtomb@plt+0xba20>
  41062c:	nop
  410630:	ldrb	w1, [x19, #1]!
  410634:	ubfiz	x3, x1, #1, #8
  410638:	ldrh	w3, [x4, x3]
  41063c:	tbnz	w3, #13, 410630 <wcrtomb@plt+0xba10>
  410640:	cmp	w1, #0x23
  410644:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410648:	b.eq	410698 <wcrtomb@plt+0xba78>  // b.none
  41064c:	cmp	w1, #0x5c
  410650:	b.eq	410670 <wcrtomb@plt+0xba50>  // b.none
  410654:	mov	w2, w21
  410658:	mov	x1, x19
  41065c:	mov	x0, x20
  410660:	ldp	x19, x20, [sp, #16]
  410664:	ldr	x21, [sp, #32]
  410668:	ldp	x29, x30, [sp], #48
  41066c:	b	442230 <argp_parse@@Base+0x2450>
  410670:	ldrb	w0, [x19, #1]
  410674:	mov	w2, w21
  410678:	ldr	x21, [sp, #32]
  41067c:	cmp	w0, #0x23
  410680:	cinc	x19, x19, eq  // eq = none
  410684:	mov	x0, x20
  410688:	mov	x1, x19
  41068c:	ldp	x19, x20, [sp, #16]
  410690:	ldp	x29, x30, [sp], #48
  410694:	b	442230 <argp_parse@@Base+0x2450>
  410698:	ldp	x19, x20, [sp, #16]
  41069c:	ldr	x21, [sp, #32]
  4106a0:	ldp	x29, x30, [sp], #48
  4106a4:	ret
  4106a8:	stp	x29, x30, [sp, #-64]!
  4106ac:	mov	x29, sp
  4106b0:	stp	x19, x20, [sp, #16]
  4106b4:	mov	x19, x1
  4106b8:	stp	x21, x22, [sp, #32]
  4106bc:	mov	w21, w2
  4106c0:	mov	x22, x3
  4106c4:	stp	x23, x24, [sp, #48]
  4106c8:	mov	x23, x0
  4106cc:	bl	404740 <__ctype_b_loc@plt>
  4106d0:	ldrb	w1, [x19]
  4106d4:	ldr	x20, [x0]
  4106d8:	ubfiz	x0, x1, #1, #8
  4106dc:	ldrh	w0, [x20, x0]
  4106e0:	tbz	w0, #13, 4106f8 <wcrtomb@plt+0xbad8>
  4106e4:	nop
  4106e8:	ldrb	w1, [x19, #1]!
  4106ec:	ubfiz	x4, x1, #1, #8
  4106f0:	ldrh	w4, [x20, x4]
  4106f4:	tbnz	w4, #13, 4106e8 <wcrtomb@plt+0xbac8>
  4106f8:	cmp	w1, #0x23
  4106fc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  410700:	b.eq	4107b0 <wcrtomb@plt+0xbb90>  // b.none
  410704:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  410708:	mov	x0, x19
  41070c:	add	x1, x1, #0xab0
  410710:	mov	x2, #0x7                   	// #7
  410714:	bl	4043c0 <strncmp@plt>
  410718:	cbz	w0, 41076c <wcrtomb@plt+0xbb4c>
  41071c:	mov	x0, x19
  410720:	bl	403ff0 <strlen@plt>
  410724:	sub	x20, x0, #0x1
  410728:	ldrb	w1, [x19, x20]
  41072c:	cmp	w1, #0x2f
  410730:	b.eq	4107fc <wcrtomb@plt+0xbbdc>  // b.none
  410734:	ldr	w2, [x22]
  410738:	and	w0, w21, #0xefffffff
  41073c:	mov	w1, #0x8000000             	// #134217728
  410740:	and	w21, w21, #0xf7ffffff
  410744:	cmp	w2, w1
  410748:	mov	x1, x19
  41074c:	csel	w21, w21, w0, ne  // ne = any
  410750:	mov	x0, x23
  410754:	orr	w2, w2, w21
  410758:	ldp	x19, x20, [sp, #16]
  41075c:	ldp	x21, x22, [sp, #32]
  410760:	ldp	x23, x24, [sp, #48]
  410764:	ldp	x29, x30, [sp], #64
  410768:	b	442230 <argp_parse@@Base+0x2450>
  41076c:	ldrb	w0, [x19, #7]
  410770:	add	x19, x19, #0x7
  410774:	ldrh	w0, [x20, x0, lsl #1]
  410778:	tbnz	w0, #13, 4107c4 <wcrtomb@plt+0xbba4>
  41077c:	nop
  410780:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  410784:	mov	x0, x19
  410788:	add	x1, x1, #0xab8
  41078c:	bl	404710 <strcmp@plt>
  410790:	cbz	w0, 4107e0 <wcrtomb@plt+0xbbc0>
  410794:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  410798:	mov	x0, x19
  41079c:	add	x1, x1, #0xac0
  4107a0:	bl	404710 <strcmp@plt>
  4107a4:	cbnz	w0, 4107b0 <wcrtomb@plt+0xbb90>
  4107a8:	mov	w0, #0x10000000            	// #268435456
  4107ac:	str	w0, [x22]
  4107b0:	ldp	x19, x20, [sp, #16]
  4107b4:	ldp	x21, x22, [sp, #32]
  4107b8:	ldp	x23, x24, [sp, #48]
  4107bc:	ldp	x29, x30, [sp], #64
  4107c0:	ret
  4107c4:	ldrb	w0, [x19, #1]!
  4107c8:	ldrh	w0, [x20, x0, lsl #1]
  4107cc:	tbz	w0, #13, 410780 <wcrtomb@plt+0xbb60>
  4107d0:	ldrb	w0, [x19, #1]!
  4107d4:	ldrh	w0, [x20, x0, lsl #1]
  4107d8:	tbnz	w0, #13, 4107c4 <wcrtomb@plt+0xbba4>
  4107dc:	b	410780 <wcrtomb@plt+0xbb60>
  4107e0:	mov	w0, #0x8000000             	// #134217728
  4107e4:	str	w0, [x22]
  4107e8:	ldp	x19, x20, [sp, #16]
  4107ec:	ldp	x21, x22, [sp, #32]
  4107f0:	ldp	x23, x24, [sp, #48]
  4107f4:	ldp	x29, x30, [sp], #64
  4107f8:	ret
  4107fc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  410800:	mov	x24, x0
  410804:	mov	x2, x20
  410808:	mov	x1, x19
  41080c:	bl	403f70 <memcpy@plt>
  410810:	mov	x19, x24
  410814:	mov	x0, x23
  410818:	mov	x1, x24
  41081c:	strb	wzr, [x24, x20]
  410820:	bl	441980 <argp_parse@@Base+0x1ba0>
  410824:	mov	w0, #0x8                   	// #8
  410828:	movk	w0, #0x400, lsl #16
  41082c:	orr	w21, w21, w0
  410830:	b	410734 <wcrtomb@plt+0xbb14>
  410834:	nop
  410838:	stp	x29, x30, [sp, #-288]!
  41083c:	mov	x29, sp
  410840:	stp	x19, x20, [sp, #16]
  410844:	mov	x20, x0
  410848:	mov	x0, x1
  41084c:	add	x1, sp, #0x38
  410850:	str	x21, [sp, #32]
  410854:	mov	w21, w2
  410858:	mov	w2, #0x844                 	// #2116
  41085c:	bl	438ea0 <wcrtomb@plt+0x34280>
  410860:	cbnz	w0, 41089c <wcrtomb@plt+0xbc7c>
  410864:	ldr	x0, [sp, #56]
  410868:	mov	x19, #0x0                   	// #0
  41086c:	cbz	x0, 410894 <wcrtomb@plt+0xbc74>
  410870:	ldr	x1, [sp, #64]
  410874:	mov	w2, w21
  410878:	mov	x0, x20
  41087c:	ldr	x1, [x1, x19, lsl #3]
  410880:	add	x19, x19, #0x1
  410884:	bl	442230 <argp_parse@@Base+0x2450>
  410888:	ldr	x1, [sp, #56]
  41088c:	cmp	x1, x19
  410890:	b.hi	410870 <wcrtomb@plt+0xbc50>  // b.pmore
  410894:	add	x0, sp, #0x38
  410898:	bl	436e10 <wcrtomb@plt+0x321f0>
  41089c:	ldp	x19, x20, [sp, #16]
  4108a0:	ldr	x21, [sp, #32]
  4108a4:	ldp	x29, x30, [sp], #288
  4108a8:	ret
  4108ac:	nop
  4108b0:	stp	x29, x30, [sp, #-32]!
  4108b4:	mov	x29, sp
  4108b8:	stp	x19, x20, [sp, #16]
  4108bc:	mov	w20, w1
  4108c0:	mov	x19, x0
  4108c4:	bl	403ff0 <strlen@plt>
  4108c8:	add	x0, x0, #0x10
  4108cc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4108d0:	mov	x1, x19
  4108d4:	mov	x19, x0
  4108d8:	add	x0, x0, #0xc
  4108dc:	str	xzr, [x19]
  4108e0:	str	w20, [x19, #8]
  4108e4:	bl	404910 <strcpy@plt>
  4108e8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4108ec:	add	x0, x0, #0x838
  4108f0:	ldr	x1, [x0, #8]
  4108f4:	cbz	x1, 41090c <wcrtomb@plt+0xbcec>
  4108f8:	str	x19, [x1]
  4108fc:	str	x19, [x0, #8]
  410900:	ldp	x19, x20, [sp, #16]
  410904:	ldp	x29, x30, [sp], #32
  410908:	ret
  41090c:	str	x19, [x0, #8]
  410910:	str	x19, [x0, #16]
  410914:	ldp	x19, x20, [sp, #16]
  410918:	ldp	x29, x30, [sp], #32
  41091c:	ret
  410920:	stp	x29, x30, [sp, #-96]!
  410924:	mov	x29, sp
  410928:	stp	x27, x28, [sp, #80]
  41092c:	ldr	x28, [x0, #416]
  410930:	cbz	x28, 410940 <wcrtomb@plt+0xbd20>
  410934:	ldp	x27, x28, [sp, #80]
  410938:	ldp	x29, x30, [sp], #96
  41093c:	ret
  410940:	stp	x21, x22, [sp, #32]
  410944:	mov	x22, x0
  410948:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41094c:	stp	x19, x20, [sp, #16]
  410950:	ldr	x19, [x0, #2120]
  410954:	cbz	x19, 410a30 <wcrtomb@plt+0xbe10>
  410958:	adrp	x27, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41095c:	add	x27, x27, #0x7c8
  410960:	stp	x23, x24, [sp, #48]
  410964:	stp	x25, x26, [sp, #64]
  410968:	adrp	x26, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  41096c:	mov	x25, #0x0                   	// #0
  410970:	add	x26, x26, #0xc28
  410974:	b	410980 <wcrtomb@plt+0xbd60>
  410978:	ldr	x19, [x19]
  41097c:	cbz	x19, 410a28 <wcrtomb@plt+0xbe08>
  410980:	ldr	w0, [x22, #408]
  410984:	add	x20, x19, #0xc
  410988:	mov	x1, x20
  41098c:	mov	w3, #0x0                   	// #0
  410990:	mov	w2, #0x0                   	// #0
  410994:	bl	404aa0 <faccessat@plt>
  410998:	cbnz	w0, 410978 <wcrtomb@plt+0xbd58>
  41099c:	mov	x1, x20
  4109a0:	mov	x0, x22
  4109a4:	mov	w2, #0x0                   	// #0
  4109a8:	bl	40dde8 <wcrtomb@plt+0x91c8>
  4109ac:	mov	w21, w0
  4109b0:	cmn	w0, #0x1
  4109b4:	b.eq	410ae0 <wcrtomb@plt+0xbec0>  // b.none
  4109b8:	mov	x1, x26
  4109bc:	bl	404420 <fdopen@plt>
  4109c0:	mov	x23, x0
  4109c4:	cbnz	x0, 410a48 <wcrtomb@plt+0xbe28>
  4109c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4109cc:	ldr	x0, [x0, #1136]
  4109d0:	cbz	x0, 4109d8 <wcrtomb@plt+0xbdb8>
  4109d4:	blr	x0
  4109d8:	bl	404ad0 <__errno_location@plt>
  4109dc:	mov	x3, x0
  4109e0:	mov	w2, #0x5                   	// #5
  4109e4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4109e8:	mov	x0, #0x0                   	// #0
  4109ec:	add	x1, x1, #0xac8
  4109f0:	ldr	w23, [x3]
  4109f4:	bl	4049c0 <dcgettext@plt>
  4109f8:	mov	x3, x20
  4109fc:	mov	x2, x0
  410a00:	mov	w1, w23
  410a04:	mov	w0, #0x0                   	// #0
  410a08:	bl	404050 <error@plt>
  410a0c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  410a10:	mov	w2, #0x2                   	// #2
  410a14:	mov	w0, w21
  410a18:	str	w2, [x1, #3568]
  410a1c:	bl	4045c0 <close@plt>
  410a20:	ldr	x19, [x19]
  410a24:	cbnz	x19, 410980 <wcrtomb@plt+0xbd60>
  410a28:	ldp	x23, x24, [sp, #48]
  410a2c:	ldp	x25, x26, [sp, #64]
  410a30:	ldp	x19, x20, [sp, #16]
  410a34:	str	x28, [x22, #416]
  410a38:	ldp	x21, x22, [sp, #32]
  410a3c:	ldp	x27, x28, [sp, #80]
  410a40:	ldp	x29, x30, [sp], #96
  410a44:	ret
  410a48:	bl	441e08 <argp_parse@@Base+0x2028>
  410a4c:	mov	x24, x0
  410a50:	ldr	x0, [x27]
  410a54:	mov	x21, x27
  410a58:	cbnz	x0, 410a68 <wcrtomb@plt+0xbe48>
  410a5c:	b	410a74 <wcrtomb@plt+0xbe54>
  410a60:	ldr	x0, [x21, #40]!
  410a64:	cbz	x0, 410a74 <wcrtomb@plt+0xbe54>
  410a68:	mov	x1, x20
  410a6c:	bl	404710 <strcmp@plt>
  410a70:	cbnz	w0, 410a60 <wcrtomb@plt+0xbe40>
  410a74:	ldp	x1, x5, [x21, #24]
  410a78:	cbz	x1, 410a8c <wcrtomb@plt+0xbe6c>
  410a7c:	mov	x0, x5
  410a80:	blr	x1
  410a84:	mov	x5, x0
  410a88:	str	x0, [x21, #32]
  410a8c:	ldr	x0, [x21, #16]
  410a90:	mov	x2, x23
  410a94:	mov	x1, x24
  410a98:	mov	w4, #0xa                   	// #10
  410a9c:	mov	w3, #0x50000000            	// #1342177280
  410aa0:	bl	442578 <argp_parse@@Base+0x2798>
  410aa4:	cbnz	w0, 410af8 <wcrtomb@plt+0xbed8>
  410aa8:	mov	x0, x23
  410aac:	bl	4042a0 <fclose@plt>
  410ab0:	mov	x0, #0x20                  	// #32
  410ab4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  410ab8:	ldr	w1, [x19, #8]
  410abc:	str	x24, [x0, #24]
  410ac0:	cbz	w1, 410ac8 <wcrtomb@plt+0xbea8>
  410ac4:	ldr	w1, [x21, #8]
  410ac8:	stp	xzr, x25, [x0]
  410acc:	str	w1, [x0, #16]
  410ad0:	cbz	x25, 410aec <wcrtomb@plt+0xbecc>
  410ad4:	str	x0, [x25]
  410ad8:	mov	x25, x0
  410adc:	b	410978 <wcrtomb@plt+0xbd58>
  410ae0:	mov	x0, x20
  410ae4:	bl	433b00 <wcrtomb@plt+0x2eee0>
  410ae8:	b	410978 <wcrtomb@plt+0xbd58>
  410aec:	mov	x25, x0
  410af0:	mov	x28, x0
  410af4:	b	410978 <wcrtomb@plt+0xbd58>
  410af8:	bl	404ad0 <__errno_location@plt>
  410afc:	ldr	w19, [x0]
  410b00:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  410b04:	ldr	x1, [x1, #1136]
  410b08:	cbz	x1, 410b10 <wcrtomb@plt+0xbef0>
  410b0c:	blr	x1
  410b10:	mov	x0, x20
  410b14:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  410b18:	mov	w1, w19
  410b1c:	mov	x3, x0
  410b20:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  410b24:	add	x2, x2, #0x828
  410b28:	mov	w0, #0x0                   	// #0
  410b2c:	bl	404050 <error@plt>
  410b30:	bl	410460 <wcrtomb@plt+0xb840>
  410b34:	nop
  410b38:	stp	x29, x30, [sp, #-48]!
  410b3c:	mov	x29, sp
  410b40:	stp	x19, x20, [sp, #16]
  410b44:	ldr	x19, [x0, #416]
  410b48:	str	x21, [sp, #32]
  410b4c:	mov	x21, x0
  410b50:	cbz	x19, 410b74 <wcrtomb@plt+0xbf54>
  410b54:	nop
  410b58:	mov	x20, x19
  410b5c:	ldr	x19, [x19]
  410b60:	ldr	x0, [x20, #24]
  410b64:	bl	441e10 <argp_parse@@Base+0x2030>
  410b68:	mov	x0, x20
  410b6c:	bl	4047b0 <free@plt>
  410b70:	cbnz	x19, 410b58 <wcrtomb@plt+0xbf38>
  410b74:	ldp	x19, x20, [sp, #16]
  410b78:	str	xzr, [x21, #416]
  410b7c:	ldr	x21, [sp, #32]
  410b80:	ldp	x29, x30, [sp], #48
  410b84:	ret
  410b88:	stp	x29, x30, [sp, #-80]!
  410b8c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  410b90:	mov	x29, sp
  410b94:	stp	x23, x24, [sp, #48]
  410b98:	mov	x23, x0
  410b9c:	mov	x24, x1
  410ba0:	ldr	x0, [x2, #192]
  410ba4:	mov	x1, x23
  410ba8:	str	x25, [sp, #64]
  410bac:	bl	441fc8 <argp_parse@@Base+0x21e8>
  410bb0:	ands	w25, w0, #0xff
  410bb4:	b.ne	410c6c <wcrtomb@plt+0xc04c>  // b.any
  410bb8:	cbz	x24, 410c6c <wcrtomb@plt+0xc04c>
  410bbc:	stp	x19, x20, [sp, #16]
  410bc0:	mov	x20, #0x0                   	// #0
  410bc4:	stp	x21, x22, [sp, #32]
  410bc8:	mov	w22, #0x0                   	// #0
  410bcc:	mov	x21, #0x0                   	// #0
  410bd0:	ldr	x19, [x24, #416]
  410bd4:	cbnz	x19, 410bf8 <wcrtomb@plt+0xbfd8>
  410bd8:	b	410cb0 <wcrtomb@plt+0xc090>
  410bdc:	ldr	x0, [x19, #24]
  410be0:	mov	x1, x21
  410be4:	bl	441fc8 <argp_parse@@Base+0x21e8>
  410be8:	tst	w0, #0xff
  410bec:	b.ne	410c58 <wcrtomb@plt+0xc038>  // b.any
  410bf0:	ldr	x19, [x19]
  410bf4:	cbz	x19, 410cb0 <wcrtomb@plt+0xc090>
  410bf8:	ldr	w2, [x19, #16]
  410bfc:	tst	w22, w2
  410c00:	b.ne	410bf0 <wcrtomb@plt+0xbfd0>  // b.any
  410c04:	ldr	x0, [x19, #24]
  410c08:	mov	x1, x23
  410c0c:	bl	441fc8 <argp_parse@@Base+0x21e8>
  410c10:	tst	w0, #0xff
  410c14:	b.ne	410c58 <wcrtomb@plt+0xc038>  // b.any
  410c18:	cbz	x20, 410c80 <wcrtomb@plt+0xc060>
  410c1c:	ldr	x0, [x19, #24]
  410c20:	mov	x1, x20
  410c24:	bl	441fc8 <argp_parse@@Base+0x21e8>
  410c28:	tst	w0, #0xff
  410c2c:	b.ne	410c58 <wcrtomb@plt+0xc038>  // b.any
  410c30:	cbnz	x21, 410bdc <wcrtomb@plt+0xbfbc>
  410c34:	mov	x0, x23
  410c38:	bl	4413e8 <argp_parse@@Base+0x1608>
  410c3c:	mov	x21, x0
  410c40:	ldr	x0, [x19, #24]
  410c44:	mov	x1, x21
  410c48:	bl	441fc8 <argp_parse@@Base+0x21e8>
  410c4c:	tst	w0, #0xff
  410c50:	b.eq	410bf0 <wcrtomb@plt+0xbfd0>  // b.none
  410c54:	nop
  410c58:	mov	w25, #0x1                   	// #1
  410c5c:	mov	x0, x21
  410c60:	bl	4047b0 <free@plt>
  410c64:	ldp	x19, x20, [sp, #16]
  410c68:	ldp	x21, x22, [sp, #32]
  410c6c:	mov	w0, w25
  410c70:	ldp	x23, x24, [sp, #48]
  410c74:	ldr	x25, [sp, #64]
  410c78:	ldp	x29, x30, [sp], #80
  410c7c:	ret
  410c80:	ldrb	w0, [x23]
  410c84:	mov	x20, x23
  410c88:	cmp	w0, #0x2e
  410c8c:	b.eq	410ca0 <wcrtomb@plt+0xc080>  // b.none
  410c90:	b	410c1c <wcrtomb@plt+0xbffc>
  410c94:	ldrb	w2, [x20, #2]!
  410c98:	cmp	w2, #0x2e
  410c9c:	b.ne	410c1c <wcrtomb@plt+0xbffc>  // b.any
  410ca0:	ldrb	w2, [x20, #1]
  410ca4:	cmp	w2, #0x2f
  410ca8:	b.eq	410c94 <wcrtomb@plt+0xc074>  // b.none
  410cac:	b	410c1c <wcrtomb@plt+0xbffc>
  410cb0:	ldr	x24, [x24, #392]
  410cb4:	mov	w22, #0x2                   	// #2
  410cb8:	cbnz	x24, 410bd0 <wcrtomb@plt+0xbfb0>
  410cbc:	b	410c5c <wcrtomb@plt+0xc03c>
  410cc0:	stp	x29, x30, [sp, #-48]!
  410cc4:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  410cc8:	mov	x29, sp
  410ccc:	stp	x19, x20, [sp, #16]
  410cd0:	ldr	x20, [x0, #1992]
  410cd4:	cbz	x20, 410d2c <wcrtomb@plt+0xc10c>
  410cd8:	stp	x21, x22, [sp, #32]
  410cdc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  410ce0:	add	x22, x0, #0x7c8
  410ce4:	add	x21, x21, #0x838
  410ce8:	mov	x0, x20
  410cec:	bl	403ff0 <strlen@plt>
  410cf0:	add	x0, x0, #0x10
  410cf4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  410cf8:	mov	x19, x0
  410cfc:	mov	x1, x20
  410d00:	add	x0, x0, #0xc
  410d04:	str	xzr, [x19]
  410d08:	str	wzr, [x19, #8]
  410d0c:	bl	404910 <strcpy@plt>
  410d10:	ldr	x0, [x21, #8]
  410d14:	ldr	x20, [x22, #40]!
  410d18:	cbz	x0, 410d38 <wcrtomb@plt+0xc118>
  410d1c:	str	x19, [x0]
  410d20:	str	x19, [x21, #8]
  410d24:	cbnz	x20, 410ce8 <wcrtomb@plt+0xc0c8>
  410d28:	ldp	x21, x22, [sp, #32]
  410d2c:	ldp	x19, x20, [sp, #16]
  410d30:	ldp	x29, x30, [sp], #48
  410d34:	ret
  410d38:	stp	x19, x19, [x21, #8]
  410d3c:	cbnz	x20, 410ce8 <wcrtomb@plt+0xc0c8>
  410d40:	b	410d28 <wcrtomb@plt+0xc108>
  410d44:	nop
  410d48:	mov	w0, #0x1                   	// #1
  410d4c:	ret
  410d50:	stp	x29, x30, [sp, #-16]!
  410d54:	mov	x29, sp
  410d58:	bl	41e038 <wcrtomb@plt+0x19418>
  410d5c:	mov	w0, #0x0                   	// #0
  410d60:	ldp	x29, x30, [sp], #16
  410d64:	ret
  410d68:	stp	x29, x30, [sp, #-112]!
  410d6c:	mov	x29, sp
  410d70:	stp	x19, x20, [sp, #16]
  410d74:	mov	x19, x1
  410d78:	mov	x20, x2
  410d7c:	stp	x21, x22, [sp, #32]
  410d80:	mov	x21, x0
  410d84:	tbnz	x1, #63, 410dbc <wcrtomb@plt+0xc19c>
  410d88:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410d8c:	add	x1, x0, #0x428
  410d90:	ldr	x0, [x0, #1064]
  410d94:	ldr	x1, [x1, #8]
  410d98:	cmp	x19, x0
  410d9c:	b.gt	410e28 <wcrtomb@plt+0xc208>
  410da0:	b.lt	410dac <wcrtomb@plt+0xc18c>  // b.tstop
  410da4:	cmp	w1, w2
  410da8:	b.mi	410e28 <wcrtomb@plt+0xc208>  // b.first
  410dac:	ldp	x19, x20, [sp, #16]
  410db0:	ldp	x21, x22, [sp, #32]
  410db4:	ldp	x29, x30, [sp], #112
  410db8:	ret
  410dbc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  410dc0:	ldr	w0, [x0, #432]
  410dc4:	tbz	w0, #15, 410dac <wcrtomb@plt+0xc18c>
  410dc8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410dcc:	ldr	x0, [x0, #1136]
  410dd0:	cbz	x0, 410dd8 <wcrtomb@plt+0xc1b8>
  410dd4:	blr	x0
  410dd8:	mov	w2, #0x5                   	// #5
  410ddc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  410de0:	mov	x0, #0x0                   	// #0
  410de4:	add	x1, x1, #0xb20
  410de8:	bl	4049c0 <dcgettext@plt>
  410dec:	mov	x22, x0
  410df0:	mov	x1, x20
  410df4:	mov	x0, x19
  410df8:	mov	w2, #0x1                   	// #1
  410dfc:	bl	41cd78 <wcrtomb@plt+0x18158>
  410e00:	mov	x3, x21
  410e04:	mov	x4, x0
  410e08:	mov	x2, x22
  410e0c:	mov	w1, #0x0                   	// #0
  410e10:	mov	w0, #0x0                   	// #0
  410e14:	bl	404050 <error@plt>
  410e18:	ldp	x19, x20, [sp, #16]
  410e1c:	ldp	x21, x22, [sp, #32]
  410e20:	ldp	x29, x30, [sp], #112
  410e24:	ret
  410e28:	add	x0, sp, #0x40
  410e2c:	bl	444438 <argp_parse@@Base+0x4658>
  410e30:	ldp	x0, x1, [sp, #64]
  410e34:	cmp	x19, x0
  410e38:	b.gt	410e48 <wcrtomb@plt+0xc228>
  410e3c:	b.lt	410dac <wcrtomb@plt+0xc18c>  // b.tstop
  410e40:	cmp	w1, w20
  410e44:	b.pl	410dac <wcrtomb@plt+0xc18c>  // b.nfrst
  410e48:	stp	x23, x24, [sp, #48]
  410e4c:	sub	x22, x19, x0
  410e50:	subs	x23, x20, x1
  410e54:	b.pl	410e68 <wcrtomb@plt+0xc248>  // b.nfrst
  410e58:	mov	x0, #0xca00                	// #51712
  410e5c:	sub	x22, x22, #0x1
  410e60:	movk	x0, #0x3b9a, lsl #16
  410e64:	add	x23, x23, x0
  410e68:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  410e6c:	ldr	w0, [x0, #432]
  410e70:	tbz	w0, #15, 410ee4 <wcrtomb@plt+0xc2c4>
  410e74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410e78:	ldr	x0, [x0, #1136]
  410e7c:	cbz	x0, 410e84 <wcrtomb@plt+0xc264>
  410e80:	blr	x0
  410e84:	mov	w2, #0x5                   	// #5
  410e88:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  410e8c:	mov	x0, #0x0                   	// #0
  410e90:	add	x1, x1, #0xb48
  410e94:	bl	4049c0 <dcgettext@plt>
  410e98:	mov	x24, x0
  410e9c:	mov	x1, x20
  410ea0:	mov	x0, x19
  410ea4:	mov	w2, #0x1                   	// #1
  410ea8:	bl	41cd78 <wcrtomb@plt+0x18158>
  410eac:	mov	x1, x23
  410eb0:	mov	x19, x0
  410eb4:	add	x2, sp, #0x50
  410eb8:	mov	x0, x22
  410ebc:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  410ec0:	mov	x5, x0
  410ec4:	mov	x2, x24
  410ec8:	mov	x4, x19
  410ecc:	mov	x3, x21
  410ed0:	mov	w1, #0x0                   	// #0
  410ed4:	mov	w0, #0x0                   	// #0
  410ed8:	bl	404050 <error@plt>
  410edc:	ldp	x23, x24, [sp, #48]
  410ee0:	b	410dac <wcrtomb@plt+0xc18c>
  410ee4:	ldp	x23, x24, [sp, #48]
  410ee8:	b	410dac <wcrtomb@plt+0xc18c>
  410eec:	nop
  410ef0:	stp	x29, x30, [sp, #-16]!
  410ef4:	mov	x29, sp
  410ef8:	bl	41e038 <wcrtomb@plt+0x19418>
  410efc:	mov	w0, #0x0                   	// #0
  410f00:	ldp	x29, x30, [sp], #16
  410f04:	ret
  410f08:	stp	x29, x30, [sp, #-160]!
  410f0c:	mov	x29, sp
  410f10:	cbz	x1, 410f5c <wcrtomb@plt+0xc33c>
  410f14:	ldr	w2, [x1, #16]
  410f18:	mov	w0, #0x0                   	// #0
  410f1c:	and	w2, w2, #0xf000
  410f20:	cmp	w2, #0x4, lsl #12
  410f24:	b.ne	410f30 <wcrtomb@plt+0xc310>  // b.any
  410f28:	ldp	x29, x30, [sp], #160
  410f2c:	ret
  410f30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  410f34:	add	x0, x0, #0xe0
  410f38:	ldur	q0, [x1, #88]
  410f3c:	ldp	x0, x1, [x0, #232]
  410f40:	mov	x2, v0.d[0]
  410f44:	mov	x3, v0.d[1]
  410f48:	bl	42f508 <wcrtomb@plt+0x2a8e8>
  410f4c:	cmp	w0, #0x0
  410f50:	cset	w0, le
  410f54:	ldp	x29, x30, [sp], #160
  410f58:	ret
  410f5c:	add	x1, sp, #0x20
  410f60:	str	x19, [sp, #16]
  410f64:	mov	x19, x0
  410f68:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  410f6c:	cbz	w0, 410f90 <wcrtomb@plt+0xc370>
  410f70:	bl	404ad0 <__errno_location@plt>
  410f74:	mov	x1, x0
  410f78:	mov	w0, #0x0                   	// #0
  410f7c:	ldr	w1, [x1]
  410f80:	cmp	w1, #0x2
  410f84:	b.ne	410f9c <wcrtomb@plt+0xc37c>  // b.any
  410f88:	ldr	x19, [sp, #16]
  410f8c:	b	410f28 <wcrtomb@plt+0xc308>
  410f90:	add	x1, sp, #0x20
  410f94:	ldr	x19, [sp, #16]
  410f98:	b	410f14 <wcrtomb@plt+0xc2f4>
  410f9c:	mov	x0, x19
  410fa0:	bl	434488 <wcrtomb@plt+0x2f868>
  410fa4:	mov	w0, #0x1                   	// #1
  410fa8:	ldr	x19, [sp, #16]
  410fac:	b	410f28 <wcrtomb@plt+0xc308>
  410fb0:	stp	x29, x30, [sp, #-224]!
  410fb4:	adrp	x8, 497000 <argp_program_version_hook@@Base+0x1e0>
  410fb8:	mov	x29, sp
  410fbc:	stp	x21, x22, [sp, #32]
  410fc0:	mov	w21, w4
  410fc4:	ldrb	w4, [x8, #680]
  410fc8:	stp	x19, x20, [sp, #16]
  410fcc:	and	w22, w6, #0xff
  410fd0:	mov	x20, x0
  410fd4:	stp	x23, x24, [sp, #48]
  410fd8:	mov	x19, x1
  410fdc:	mov	w24, w2
  410fe0:	stp	x25, x26, [sp, #64]
  410fe4:	and	w23, w5, #0xff
  410fe8:	mov	w26, w3
  410fec:	stp	x27, x28, [sp, #80]
  410ff0:	mov	w25, w7
  410ff4:	mvn	w28, w21
  410ff8:	cbnz	w4, 4111ac <wcrtomb@plt+0xc58c>
  410ffc:	cbnz	w22, 411118 <wcrtomb@plt+0xc4f8>
  411000:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  411004:	ldrb	w0, [x27, #161]
  411008:	cbnz	w0, 411204 <wcrtomb@plt+0xc5e4>
  41100c:	mov	x0, #0x3ffffffe            	// #1073741822
  411010:	str	x0, [sp, #104]
  411014:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411018:	mov	w4, w25
  41101c:	ldp	x8, x9, [x19, #232]
  411020:	add	x3, sp, #0x60
  411024:	ldr	w1, [x0, #2200]
  411028:	mov	x2, x20
  41102c:	mov	w0, w24
  411030:	stp	x8, x9, [sp, #112]
  411034:	bl	442980 <argp_parse@@Base+0x2ba0>
  411038:	cbnz	w0, 411318 <wcrtomb@plt+0xc6f8>
  41103c:	ldrb	w0, [x27, #161]
  411040:	cbnz	w0, 4113a4 <wcrtomb@plt+0xc784>
  411044:	ldp	x2, x3, [sp, #112]
  411048:	mov	x0, x20
  41104c:	mov	x1, x2
  411050:	mov	x2, x3
  411054:	bl	410d68 <wcrtomb@plt+0xc148>
  411058:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41105c:	ldr	w0, [x0, #1108]
  411060:	cmp	w0, #0x0
  411064:	b.le	4111d4 <wcrtomb@plt+0xc5b4>
  411068:	ldp	w22, w27, [x19, #112]
  41106c:	tbnz	w24, #31, 41109c <wcrtomb@plt+0xc47c>
  411070:	mov	w2, w27
  411074:	mov	w1, w22
  411078:	mov	w0, w24
  41107c:	bl	404b70 <fchown@plt>
  411080:	cbz	w0, 411344 <wcrtomb@plt+0xc724>
  411084:	bl	404ad0 <__errno_location@plt>
  411088:	ldr	w0, [x0]
  41108c:	mov	w1, #0x5f                  	// #95
  411090:	cmp	w0, #0x26
  411094:	ccmp	w0, w1, #0x4, ne  // ne = any
  411098:	b.ne	4110bc <wcrtomb@plt+0xc49c>  // b.any
  41109c:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4110a0:	mov	w4, w25
  4110a4:	mov	w3, w27
  4110a8:	mov	w2, w22
  4110ac:	ldr	w0, [x0, #2200]
  4110b0:	mov	x1, x20
  4110b4:	bl	404830 <fchownat@plt>
  4110b8:	cbz	w0, 411344 <wcrtomb@plt+0xc724>
  4110bc:	cmp	w23, #0x32
  4110c0:	b.ne	4110dc <wcrtomb@plt+0xc4bc>  // b.any
  4110c4:	bl	404ad0 <__errno_location@plt>
  4110c8:	ldr	w0, [x0]
  4110cc:	mov	w1, #0x5f                  	// #95
  4110d0:	cmp	w0, #0x26
  4110d4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4110d8:	b.eq	4110ec <wcrtomb@plt+0xc4cc>  // b.none
  4110dc:	mov	w2, w27
  4110e0:	mov	w1, w22
  4110e4:	mov	x0, x20
  4110e8:	bl	433720 <wcrtomb@plt+0x2eb00>
  4110ec:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4110f0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4110f4:	ldr	w1, [x19, #104]
  4110f8:	mov	w22, #0xfff                 	// #4095
  4110fc:	ldr	w2, [x2, #740]
  411100:	mov	w27, #0x1ff                 	// #511
  411104:	ldr	w0, [x0, #2128]
  411108:	cmp	w2, #0x0
  41110c:	csel	w27, w22, w27, gt
  411110:	bic	w22, w1, w0
  411114:	b	41112c <wcrtomb@plt+0xc50c>
  411118:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41111c:	ldr	w1, [x1, #104]
  411120:	ldr	w22, [x2, #2128]
  411124:	bic	w22, w1, w22
  411128:	mov	w27, #0x1ff                 	// #511
  41112c:	eor	w0, w26, w22
  411130:	orr	w0, w0, w28
  411134:	tst	w0, w27
  411138:	b.eq	41115c <wcrtomb@plt+0xc53c>  // b.none
  41113c:	orr	w21, w27, w21
  411140:	mvn	w21, w21
  411144:	tst	x21, #0xfff
  411148:	b.ne	411210 <wcrtomb@plt+0xc5f0>  // b.any
  41114c:	and	w26, w26, #0xfff
  411150:	eor	w22, w26, w22
  411154:	ands	w22, w22, w27
  411158:	b.ne	41123c <wcrtomb@plt+0xc61c>  // b.any
  41115c:	mov	w3, #0x1                   	// #1
  411160:	mov	w2, w23
  411164:	mov	x1, x20
  411168:	mov	x0, x19
  41116c:	bl	432fa8 <wcrtomb@plt+0x2e388>
  411170:	mov	w2, w23
  411174:	mov	x1, x20
  411178:	mov	x0, x19
  41117c:	bl	4328a0 <wcrtomb@plt+0x2dc80>
  411180:	mov	w2, w23
  411184:	mov	x1, x20
  411188:	mov	x0, x19
  41118c:	bl	432f30 <wcrtomb@plt+0x2e310>
  411190:	ldp	x19, x20, [sp, #16]
  411194:	ldp	x21, x22, [sp, #32]
  411198:	ldp	x23, x24, [sp, #48]
  41119c:	ldp	x25, x26, [sp, #64]
  4111a0:	ldp	x27, x28, [sp, #80]
  4111a4:	ldp	x29, x30, [sp], #224
  4111a8:	ret
  4111ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4111b0:	ldr	w0, [x0, #1108]
  4111b4:	cmp	w0, #0x0
  4111b8:	b.le	4111d4 <wcrtomb@plt+0xc5b4>
  4111bc:	cbz	w22, 411068 <wcrtomb@plt+0xc448>
  4111c0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4111c4:	ldr	w0, [x19, #104]
  4111c8:	ldr	w22, [x1, #2128]
  4111cc:	bic	w22, w0, w22
  4111d0:	b	411128 <wcrtomb@plt+0xc508>
  4111d4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4111d8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4111dc:	ldr	w2, [x19, #104]
  4111e0:	mov	w27, #0xfff                 	// #4095
  4111e4:	ldr	w3, [x1, #740]
  4111e8:	mov	w1, #0x1ff                 	// #511
  4111ec:	ldr	w0, [x0, #2128]
  4111f0:	cmp	w3, #0x0
  4111f4:	ccmp	w22, #0x0, #0x0, gt
  4111f8:	bic	w22, w2, w0
  4111fc:	csel	w27, w27, w1, eq  // eq = none
  411200:	b	41112c <wcrtomb@plt+0xc50c>
  411204:	ldp	x0, x1, [x1, #216]
  411208:	stp	x0, x1, [sp, #96]
  41120c:	b	411014 <wcrtomb@plt+0xc3f4>
  411210:	tbnz	w24, #31, 411364 <wcrtomb@plt+0xc744>
  411214:	add	x2, sp, #0x60
  411218:	mov	w1, w24
  41121c:	mov	w0, #0x0                   	// #0
  411220:	bl	4049a0 <__fxstat@plt>
  411224:	cbnz	w0, 4113bc <wcrtomb@plt+0xc79c>
  411228:	ldr	w26, [sp, #112]
  41122c:	and	w26, w26, #0xfff
  411230:	eor	w22, w26, w22
  411234:	ands	w22, w22, w27
  411238:	b.eq	41115c <wcrtomb@plt+0xc53c>  // b.none
  41123c:	eor	w22, w26, w22
  411240:	tbnz	w24, #31, 411270 <wcrtomb@plt+0xc650>
  411244:	mov	w1, w22
  411248:	mov	w0, w24
  41124c:	bl	404470 <fchmod@plt>
  411250:	cbz	w0, 41115c <wcrtomb@plt+0xc53c>
  411254:	bl	404ad0 <__errno_location@plt>
  411258:	mov	x21, x0
  41125c:	mov	w0, #0x5f                  	// #95
  411260:	ldr	w1, [x21]
  411264:	cmp	w1, #0x26
  411268:	ccmp	w1, w0, #0x4, ne  // ne = any
  41126c:	b.ne	411298 <wcrtomb@plt+0xc678>  // b.any
  411270:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411274:	mov	w3, w25
  411278:	mov	w2, w22
  41127c:	mov	x1, x20
  411280:	ldr	w0, [x0, #2200]
  411284:	bl	404b30 <fchmodat@plt>
  411288:	cbz	w0, 41115c <wcrtomb@plt+0xc53c>
  41128c:	bl	404ad0 <__errno_location@plt>
  411290:	ldr	w1, [x0]
  411294:	mov	x21, x0
  411298:	cmp	w1, #0x1
  41129c:	b.eq	411304 <wcrtomb@plt+0xc6e4>  // b.none
  4112a0:	cmp	w23, #0x32
  4112a4:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  4112a8:	b.eq	411384 <wcrtomb@plt+0xc764>  // b.none
  4112ac:	cmp	w1, #0x26
  4112b0:	mov	w25, #0x5f                  	// #95
  4112b4:	ccmp	w1, w25, #0x4, ne  // ne = any
  4112b8:	b.ne	411300 <wcrtomb@plt+0xc6e0>  // b.any
  4112bc:	tbnz	w24, #31, 4112e0 <wcrtomb@plt+0xc6c0>
  4112c0:	mov	w0, w24
  4112c4:	mov	w1, w22
  4112c8:	bl	404470 <fchmod@plt>
  4112cc:	cbz	w0, 41115c <wcrtomb@plt+0xc53c>
  4112d0:	ldr	w1, [x21]
  4112d4:	cmp	w1, #0x26
  4112d8:	ccmp	w1, w25, #0x4, ne  // ne = any
  4112dc:	b.ne	411300 <wcrtomb@plt+0xc6e0>  // b.any
  4112e0:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4112e4:	mov	w2, w22
  4112e8:	mov	x1, x20
  4112ec:	mov	w3, #0x0                   	// #0
  4112f0:	ldr	w0, [x0, #2200]
  4112f4:	bl	404b30 <fchmodat@plt>
  4112f8:	cbz	w0, 41115c <wcrtomb@plt+0xc53c>
  4112fc:	ldr	w1, [x21]
  411300:	cbz	w1, 41115c <wcrtomb@plt+0xc53c>
  411304:	str	w1, [x21]
  411308:	mov	x0, x20
  41130c:	mov	w1, w22
  411310:	bl	433688 <wcrtomb@plt+0x2ea68>
  411314:	b	41115c <wcrtomb@plt+0xc53c>
  411318:	cmp	w23, #0x32
  41131c:	b.ne	411338 <wcrtomb@plt+0xc718>  // b.any
  411320:	bl	404ad0 <__errno_location@plt>
  411324:	ldr	w0, [x0]
  411328:	mov	w1, #0x26                  	// #38
  41132c:	cmp	w0, #0x5f
  411330:	ccmp	w0, w1, #0x4, ne  // ne = any
  411334:	b.eq	411058 <wcrtomb@plt+0xc438>  // b.none
  411338:	mov	x0, x20
  41133c:	bl	434688 <wcrtomb@plt+0x2fa68>
  411340:	b	411058 <wcrtomb@plt+0xc438>
  411344:	orr	w0, w26, w28
  411348:	mov	w1, #0x49                  	// #73
  41134c:	tst	w0, w1
  411350:	b.eq	4110ec <wcrtomb@plt+0xc4cc>  // b.none
  411354:	and	w0, w26, #0xc00
  411358:	bic	w21, w21, w0
  41135c:	mvn	w28, w21
  411360:	b	4110ec <wcrtomb@plt+0xc4cc>
  411364:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411368:	mov	w4, w25
  41136c:	add	x3, sp, #0x60
  411370:	mov	x2, x20
  411374:	ldr	w1, [x0, #2200]
  411378:	mov	w0, #0x0                   	// #0
  41137c:	bl	404c00 <__fxstatat@plt>
  411380:	b	411224 <wcrtomb@plt+0xc604>
  411384:	cbz	w1, 41115c <wcrtomb@plt+0xc53c>
  411388:	cmp	w23, #0x32
  41138c:	b.ne	411304 <wcrtomb@plt+0xc6e4>  // b.any
  411390:	cmp	w1, #0x26
  411394:	mov	w0, #0x5f                  	// #95
  411398:	ccmp	w1, w0, #0x4, ne  // ne = any
  41139c:	b.eq	41115c <wcrtomb@plt+0xc53c>  // b.none
  4113a0:	b	411304 <wcrtomb@plt+0xc6e4>
  4113a4:	ldp	x2, x3, [sp, #96]
  4113a8:	mov	x0, x20
  4113ac:	mov	x1, x2
  4113b0:	mov	x2, x3
  4113b4:	bl	410d68 <wcrtomb@plt+0xc148>
  4113b8:	b	411044 <wcrtomb@plt+0xc424>
  4113bc:	mov	x0, x20
  4113c0:	bl	434400 <wcrtomb@plt+0x2f7e0>
  4113c4:	b	41115c <wcrtomb@plt+0xc53c>
  4113c8:	sub	sp, sp, #0x290
  4113cc:	stp	x29, x30, [sp]
  4113d0:	mov	x29, sp
  4113d4:	stp	x21, x22, [sp, #32]
  4113d8:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4113dc:	add	x21, x21, #0x850
  4113e0:	mov	x22, x0
  4113e4:	stp	x19, x20, [sp, #16]
  4113e8:	stp	x23, x24, [sp, #48]
  4113ec:	and	w24, w1, #0xff
  4113f0:	bl	403ff0 <strlen@plt>
  4113f4:	ldr	x19, [x21, #8]
  4113f8:	cbz	x19, 4115c0 <wcrtomb@plt+0xc9a0>
  4113fc:	mov	x23, x0
  411400:	mov	w20, #0x0                   	// #0
  411404:	stp	x25, x26, [sp, #64]
  411408:	adrp	x25, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41140c:	add	x25, x25, #0x898
  411410:	str	x27, [sp, #80]
  411414:	b	4114d4 <wcrtomb@plt+0xc8b4>
  411418:	ldr	w0, [x19, #24]
  41141c:	add	x10, sp, #0x200
  411420:	ldrb	w6, [x19, #80]
  411424:	mov	w4, w27
  411428:	ldp	x8, x9, [x19, #40]
  41142c:	mov	w3, w26
  411430:	ldr	q0, [x19, #96]
  411434:	str	w0, [sp, #328]
  411438:	ldr	x0, [x19, #160]
  41143c:	add	x1, sp, #0xe0
  411440:	ldur	d1, [x19, #28]
  411444:	mov	w5, #0x35                  	// #53
  411448:	mov	w2, #0xffffffff            	// #-1
  41144c:	str	d1, [sp, #336]
  411450:	ldr	w7, [x19, #84]
  411454:	stp	x8, x9, [x10, #-72]
  411458:	ldr	x8, [x19, #112]
  41145c:	ldp	x10, x11, [x19, #56]
  411460:	str	x8, [sp, #288]
  411464:	ldr	x8, [x19, #120]
  411468:	str	x8, [sp, #296]
  41146c:	ldr	x8, [x19, #128]
  411470:	str	x8, [sp, #304]
  411474:	add	x8, sp, #0x200
  411478:	str	q0, [sp, #272]
  41147c:	ldr	x9, [x19, #136]
  411480:	stp	x10, x11, [x8, #-56]
  411484:	ldr	x8, [x19, #144]
  411488:	str	x9, [sp, #552]
  41148c:	str	x8, [sp, #560]
  411490:	bl	410fb0 <wcrtomb@plt+0xc390>
  411494:	ldr	x1, [x19]
  411498:	str	x1, [x21, #8]
  41149c:	ldr	x0, [x19, #160]
  4114a0:	bl	4047b0 <free@plt>
  4114a4:	ldp	x1, x0, [x19, #136]
  4114a8:	bl	416a90 <wcrtomb@plt+0x11e70>
  4114ac:	ldr	x0, [x19, #96]
  4114b0:	bl	4047b0 <free@plt>
  4114b4:	ldr	x0, [x19, #104]
  4114b8:	bl	4047b0 <free@plt>
  4114bc:	ldr	x0, [x19, #120]
  4114c0:	bl	4047b0 <free@plt>
  4114c4:	mov	x0, x19
  4114c8:	bl	4047b0 <free@plt>
  4114cc:	ldr	x19, [x21, #8]
  4114d0:	cbz	x19, 4115b8 <wcrtomb@plt+0xc998>
  4114d4:	ldrb	w1, [x19, #88]
  4114d8:	ldp	w26, w27, [x19, #72]
  4114dc:	orr	w20, w1, w20
  4114e0:	cmp	w1, w24
  4114e4:	b.hi	4115b8 <wcrtomb@plt+0xc998>  // b.pmore
  4114e8:	ldr	x2, [x19, #152]
  4114ec:	cmp	x2, x23
  4114f0:	b.cs	411518 <wcrtomb@plt+0xc8f8>  // b.hs, b.nlast
  4114f4:	ldrb	w0, [x22, x2]
  4114f8:	cbz	w0, 411518 <wcrtomb@plt+0xc8f8>
  4114fc:	cmp	w0, #0x2f
  411500:	b.eq	4115a4 <wcrtomb@plt+0xc984>  // b.none
  411504:	add	x0, x22, x2
  411508:	ldurb	w0, [x0, #-1]
  41150c:	cmp	w0, #0x2f
  411510:	b.eq	4115a4 <wcrtomb@plt+0xc984>  // b.none
  411514:	nop
  411518:	ldr	w0, [x19, #92]
  41151c:	bl	420060 <wcrtomb@plt+0x1b440>
  411520:	cbz	w20, 411418 <wcrtomb@plt+0xc7f8>
  411524:	ldr	w4, [x19, #84]
  411528:	add	x3, sp, #0x60
  41152c:	ldr	w1, [x25]
  411530:	mov	w0, #0x0                   	// #0
  411534:	ldr	x2, [x19, #160]
  411538:	bl	404c00 <__fxstatat@plt>
  41153c:	cbnz	w0, 4115d8 <wcrtomb@plt+0xc9b8>
  411540:	ldr	x0, [x19, #8]
  411544:	ldr	x1, [sp, #96]
  411548:	cmp	x1, x0
  41154c:	b.eq	4115e4 <wcrtomb@plt+0xc9c4>  // b.none
  411550:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  411554:	ldr	x0, [x0, #1136]
  411558:	cbz	x0, 411560 <wcrtomb@plt+0xc940>
  41155c:	blr	x0
  411560:	mov	w2, #0x5                   	// #5
  411564:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  411568:	mov	x0, #0x0                   	// #0
  41156c:	add	x1, x1, #0xb70
  411570:	bl	4049c0 <dcgettext@plt>
  411574:	mov	x26, x0
  411578:	ldr	x0, [x19, #160]
  41157c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  411580:	mov	x3, x0
  411584:	mov	w1, #0x0                   	// #0
  411588:	mov	w0, #0x0                   	// #0
  41158c:	mov	x2, x26
  411590:	bl	404050 <error@plt>
  411594:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  411598:	mov	w1, #0x2                   	// #2
  41159c:	str	w1, [x0, #3568]
  4115a0:	b	411494 <wcrtomb@plt+0xc874>
  4115a4:	ldr	x1, [x19, #160]
  4115a8:	mov	x0, x22
  4115ac:	bl	4046d0 <memcmp@plt>
  4115b0:	cbnz	w0, 411518 <wcrtomb@plt+0xc8f8>
  4115b4:	nop
  4115b8:	ldp	x25, x26, [sp, #64]
  4115bc:	ldr	x27, [sp, #80]
  4115c0:	ldp	x29, x30, [sp]
  4115c4:	ldp	x19, x20, [sp, #16]
  4115c8:	ldp	x21, x22, [sp, #32]
  4115cc:	ldp	x23, x24, [sp, #48]
  4115d0:	add	sp, sp, #0x290
  4115d4:	ret
  4115d8:	ldr	x0, [x19, #160]
  4115dc:	bl	434400 <wcrtomb@plt+0x2f7e0>
  4115e0:	b	411494 <wcrtomb@plt+0xc874>
  4115e4:	ldr	x0, [x19, #16]
  4115e8:	ldr	x1, [sp, #104]
  4115ec:	cmp	x1, x0
  4115f0:	b.ne	411550 <wcrtomb@plt+0xc930>  // b.any
  4115f4:	ldr	w26, [sp, #112]
  4115f8:	mov	w27, #0xffffffff            	// #-1
  4115fc:	b	411418 <wcrtomb@plt+0xc7f8>
  411600:	sub	sp, sp, #0x280
  411604:	stp	x29, x30, [sp]
  411608:	mov	x29, sp
  41160c:	stp	x23, x24, [sp, #48]
  411610:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  411614:	add	x23, x23, #0x850
  411618:	stp	x21, x22, [sp, #32]
  41161c:	ldr	x21, [x23, #16]
  411620:	cbz	x21, 411760 <wcrtomb@plt+0xcb40>
  411624:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411628:	add	x22, x22, #0x898
  41162c:	stp	x19, x20, [sp, #16]
  411630:	str	x25, [sp, #64]
  411634:	nop
  411638:	ldr	w0, [x21, #88]
  41163c:	add	x25, x21, #0xa0
  411640:	mov	x24, #0x0                   	// #0
  411644:	bl	420060 <wcrtomb@plt+0x1b440>
  411648:	ldr	x19, [x21, #96]
  41164c:	cbnz	x19, 41165c <wcrtomb@plt+0xca3c>
  411650:	b	411730 <wcrtomb@plt+0xcb10>
  411654:	ldr	x19, [x19]
  411658:	cbz	x19, 411718 <wcrtomb@plt+0xcaf8>
  41165c:	ldr	w1, [x22]
  411660:	add	x20, x19, #0x8
  411664:	mov	x2, x20
  411668:	add	x3, sp, #0x50
  41166c:	mov	w4, #0x100                 	// #256
  411670:	mov	w0, #0x0                   	// #0
  411674:	bl	404c00 <__fxstatat@plt>
  411678:	cbnz	w0, 411654 <wcrtomb@plt+0xca34>
  41167c:	ldr	x0, [x21, #8]
  411680:	ldr	x1, [sp, #80]
  411684:	cmp	x1, x0
  411688:	b.ne	411654 <wcrtomb@plt+0xca34>  // b.any
  41168c:	ldr	x0, [x21, #16]
  411690:	ldr	x1, [sp, #88]
  411694:	cmp	x1, x0
  411698:	b.ne	411654 <wcrtomb@plt+0xca34>  // b.any
  41169c:	ldr	x0, [x21, #24]
  4116a0:	cmn	x0, #0x1
  4116a4:	b.ne	411654 <wcrtomb@plt+0xca34>  // b.any
  4116a8:	ldr	x0, [x21, #32]
  4116ac:	cmn	w0, #0x1
  4116b0:	b.ne	411654 <wcrtomb@plt+0xca34>  // b.any
  4116b4:	ldr	w0, [x22]
  4116b8:	mov	x1, x20
  4116bc:	mov	w2, #0x0                   	// #0
  4116c0:	bl	404160 <unlinkat@plt>
  4116c4:	cbnz	w0, 411778 <wcrtomb@plt+0xcb58>
  4116c8:	ldr	w2, [x22]
  4116cc:	cbz	x24, 4116ec <wcrtomb@plt+0xcacc>
  4116d0:	mov	x3, x20
  4116d4:	mov	w0, w2
  4116d8:	mov	x1, x24
  4116dc:	mov	w4, #0x0                   	// #0
  4116e0:	bl	4040e0 <linkat@plt>
  4116e4:	cbz	w0, 411654 <wcrtomb@plt+0xca34>
  4116e8:	ldr	w2, [x22]
  4116ec:	ldrb	w0, [x21, #40]
  4116f0:	cbz	w0, 411784 <wcrtomb@plt+0xcb64>
  4116f4:	mov	w1, w2
  4116f8:	mov	x0, x25
  4116fc:	mov	x2, x20
  411700:	bl	404a40 <symlinkat@plt>
  411704:	cbz	w0, 4117ac <wcrtomb@plt+0xcb8c>
  411708:	mov	x1, x20
  41170c:	mov	x0, x25
  411710:	bl	434350 <wcrtomb@plt+0x2f730>
  411714:	b	411654 <wcrtomb@plt+0xca34>
  411718:	ldr	x19, [x21, #96]
  41171c:	cbz	x19, 411730 <wcrtomb@plt+0xcb10>
  411720:	mov	x0, x19
  411724:	ldr	x19, [x19]
  411728:	bl	4047b0 <free@plt>
  41172c:	cbnz	x19, 411720 <wcrtomb@plt+0xcb00>
  411730:	ldp	x1, x0, [x21, #144]
  411734:	bl	416a90 <wcrtomb@plt+0x11e70>
  411738:	ldr	x0, [x21, #104]
  41173c:	bl	4047b0 <free@plt>
  411740:	ldr	x19, [x21]
  411744:	mov	x0, x21
  411748:	bl	4047b0 <free@plt>
  41174c:	cbz	x19, 411758 <wcrtomb@plt+0xcb38>
  411750:	mov	x21, x19
  411754:	b	411638 <wcrtomb@plt+0xca18>
  411758:	ldp	x19, x20, [sp, #16]
  41175c:	ldr	x25, [sp, #64]
  411760:	str	xzr, [x23, #16]
  411764:	ldp	x29, x30, [sp]
  411768:	ldp	x21, x22, [sp, #32]
  41176c:	ldp	x23, x24, [sp, #48]
  411770:	add	sp, sp, #0x280
  411774:	ret
  411778:	mov	x0, x20
  41177c:	bl	434600 <wcrtomb@plt+0x2f9e0>
  411780:	b	411654 <wcrtomb@plt+0xca34>
  411784:	mov	x3, x20
  411788:	mov	w0, w2
  41178c:	mov	x1, x25
  411790:	mov	w4, #0x0                   	// #0
  411794:	bl	4040e0 <linkat@plt>
  411798:	cbz	w0, 411654 <wcrtomb@plt+0xca34>
  41179c:	mov	x1, x20
  4117a0:	mov	x0, x25
  4117a4:	bl	4338d0 <wcrtomb@plt+0x2ecb0>
  4117a8:	b	411654 <wcrtomb@plt+0xca34>
  4117ac:	ldr	w0, [x21, #44]
  4117b0:	mov	x24, x20
  4117b4:	ldp	x12, x13, [x21, #56]
  4117b8:	mov	w7, #0x100                 	// #256
  4117bc:	ldp	x10, x11, [x21, #72]
  4117c0:	mov	w6, #0x0                   	// #0
  4117c4:	ldur	q1, [x21, #104]
  4117c8:	str	w0, [sp, #312]
  4117cc:	ldp	x1, x8, [x21, #120]
  4117d0:	mov	x0, x20
  4117d4:	ldr	d0, [x21, #48]
  4117d8:	mov	w5, #0x32                  	// #50
  4117dc:	stp	x1, x8, [sp, #272]
  4117e0:	mov	w4, #0x0                   	// #0
  4117e4:	add	x1, sp, #0xd0
  4117e8:	ldr	x8, [x21, #136]
  4117ec:	str	x8, [sp, #288]
  4117f0:	add	x8, sp, #0x200
  4117f4:	mov	w3, #0x0                   	// #0
  4117f8:	ldr	x9, [x21, #144]
  4117fc:	mov	w2, #0xffffffff            	// #-1
  411800:	stp	x12, x13, [x8, #-88]
  411804:	add	x12, sp, #0x200
  411808:	ldr	x8, [x21, #152]
  41180c:	stp	x10, x11, [x12, #-72]
  411810:	str	q1, [sp, #256]
  411814:	str	d0, [sp, #320]
  411818:	str	x9, [sp, #536]
  41181c:	str	x8, [sp, #544]
  411820:	bl	410fb0 <wcrtomb@plt+0xc390>
  411824:	b	411654 <wcrtomb@plt+0xca34>
  411828:	stp	x29, x30, [sp, #-32]!
  41182c:	mov	w1, #0x0                   	// #0
  411830:	mov	x29, sp
  411834:	str	x19, [sp, #16]
  411838:	adrp	x19, 473000 <_obstack_memory_used@@Base+0x21bf0>
  41183c:	add	x19, x19, #0x7e8
  411840:	mov	x0, x19
  411844:	bl	4113c8 <wcrtomb@plt+0xc7a8>
  411848:	bl	411600 <wcrtomb@plt+0xc9e0>
  41184c:	mov	x0, x19
  411850:	mov	w1, #0x1                   	// #1
  411854:	ldr	x19, [sp, #16]
  411858:	ldp	x29, x30, [sp], #32
  41185c:	b	4113c8 <wcrtomb@plt+0xc7a8>
  411860:	stp	x29, x30, [sp, #-224]!
  411864:	mov	x29, sp
  411868:	stp	x19, x20, [sp, #16]
  41186c:	mov	x20, x0
  411870:	stp	x21, x22, [sp, #32]
  411874:	mov	w22, w5
  411878:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41187c:	add	x21, x21, #0x850
  411880:	stp	x23, x24, [sp, #48]
  411884:	mov	w24, w2
  411888:	mov	w23, w3
  41188c:	stp	x25, x26, [sp, #64]
  411890:	mov	w26, w4
  411894:	str	x27, [sp, #80]
  411898:	mov	x27, x1
  41189c:	bl	403ff0 <strlen@plt>
  4118a0:	mov	x25, x0
  4118a4:	mov	x0, #0xa8                  	// #168
  4118a8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4118ac:	mov	x19, x0
  4118b0:	ldr	x0, [x21, #8]
  4118b4:	str	x0, [x19]
  4118b8:	str	w26, [x19, #24]
  4118bc:	cbz	x27, 4119c0 <wcrtomb@plt+0xcda0>
  4118c0:	ldr	x0, [x27, #112]
  4118c4:	stur	x0, [x19, #28]
  4118c8:	ldp	x0, x1, [x27, #216]
  4118cc:	stp	x0, x1, [x19, #40]
  4118d0:	ldp	x2, x3, [x27, #232]
  4118d4:	stp	x2, x3, [x19, #56]
  4118d8:	mov	x0, x20
  4118dc:	ldur	q0, [x27, #88]
  4118e0:	str	x25, [x19, #152]
  4118e4:	stur	q0, [x19, #8]
  4118e8:	bl	450328 <argp_parse@@Base+0x10548>
  4118ec:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4118f0:	mov	x2, x0
  4118f4:	mov	x0, x19
  4118f8:	ldr	w3, [x3, #128]
  4118fc:	ldr	x1, [x27, #48]
  411900:	stp	w24, w23, [x19, #72]
  411904:	strb	wzr, [x19, #80]
  411908:	str	w22, [x19, #84]
  41190c:	strb	wzr, [x19, #88]
  411910:	str	w3, [x19, #92]
  411914:	str	x2, [x19, #160]
  411918:	str	xzr, [x0, #96]!
  41191c:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  411920:	ldr	x0, [x27, #56]
  411924:	cbz	x0, 4119ac <wcrtomb@plt+0xcd8c>
  411928:	ldr	x1, [x27, #64]
  41192c:	add	x1, x1, #0x1
  411930:	bl	4502e8 <argp_parse@@Base+0x10508>
  411934:	str	x0, [x19, #104]
  411938:	ldr	x0, [x27, #64]
  41193c:	str	x0, [x19, #112]
  411940:	ldr	x0, [x27, #72]
  411944:	cbz	x0, 4119b8 <wcrtomb@plt+0xcd98>
  411948:	ldr	x1, [x27, #80]
  41194c:	add	x1, x1, #0x1
  411950:	bl	4502e8 <argp_parse@@Base+0x10508>
  411954:	str	x0, [x19, #120]
  411958:	ldr	x0, [x27, #80]
  41195c:	str	x0, [x19, #128]
  411960:	add	x2, x19, #0x88
  411964:	mov	x0, x27
  411968:	add	x1, x19, #0x90
  41196c:	bl	416ce0 <wcrtomb@plt+0x120c0>
  411970:	ldr	x0, [x19, #160]
  411974:	mov	x1, x20
  411978:	bl	404910 <strcpy@plt>
  41197c:	str	x19, [x21, #8]
  411980:	mov	x0, x20
  411984:	bl	41f7b8 <wcrtomb@plt+0x1ab98>
  411988:	tst	w0, #0xff
  41198c:	b.ne	411a20 <wcrtomb@plt+0xce00>  // b.any
  411990:	ldp	x19, x20, [sp, #16]
  411994:	ldp	x21, x22, [sp, #32]
  411998:	ldp	x23, x24, [sp, #48]
  41199c:	ldp	x25, x26, [sp, #64]
  4119a0:	ldr	x27, [sp, #80]
  4119a4:	ldp	x29, x30, [sp], #224
  4119a8:	ret
  4119ac:	ldr	x0, [x27, #72]
  4119b0:	stp	xzr, xzr, [x19, #104]
  4119b4:	cbnz	x0, 411948 <wcrtomb@plt+0xcd28>
  4119b8:	stp	xzr, xzr, [x19, #120]
  4119bc:	b	411960 <wcrtomb@plt+0xcd40>
  4119c0:	str	x25, [x19, #152]
  4119c4:	mov	x0, x20
  4119c8:	bl	450328 <argp_parse@@Base+0x10548>
  4119cc:	stp	w24, w23, [x19, #72]
  4119d0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4119d4:	mov	w2, #0x1                   	// #1
  4119d8:	movi	v0.4s, #0x0
  4119dc:	strb	w2, [x19, #80]
  4119e0:	ldr	w1, [x1, #128]
  4119e4:	str	w22, [x19, #84]
  4119e8:	strb	wzr, [x19, #88]
  4119ec:	str	w1, [x19, #92]
  4119f0:	mov	x1, x20
  4119f4:	stp	xzr, xzr, [x19, #112]
  4119f8:	str	xzr, [x19, #144]
  4119fc:	str	x0, [x19, #160]
  411a00:	str	q0, [x19, #96]
  411a04:	str	q0, [x19, #128]
  411a08:	bl	404910 <strcpy@plt>
  411a0c:	mov	x0, x20
  411a10:	str	x19, [x21, #8]
  411a14:	bl	41f7b8 <wcrtomb@plt+0x1ab98>
  411a18:	tst	w0, #0xff
  411a1c:	b.eq	411990 <wcrtomb@plt+0xcd70>  // b.none
  411a20:	mov	w20, #0x1                   	// #1
  411a24:	b	411a40 <wcrtomb@plt+0xce20>
  411a28:	ldr	q0, [sp, #96]
  411a2c:	stur	q0, [x19, #8]
  411a30:	ldr	x19, [x19]
  411a34:	cbz	x19, 411990 <wcrtomb@plt+0xcd70>
  411a38:	ldrb	w0, [x19, #88]
  411a3c:	cbnz	w0, 411990 <wcrtomb@plt+0xcd70>
  411a40:	ldr	x0, [x19, #160]
  411a44:	strb	w20, [x19, #88]
  411a48:	add	x1, sp, #0x60
  411a4c:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  411a50:	cbz	w0, 411a28 <wcrtomb@plt+0xce08>
  411a54:	ldr	x0, [x19, #160]
  411a58:	bl	434400 <wcrtomb@plt+0x2f7e0>
  411a5c:	b	411a30 <wcrtomb@plt+0xce10>
  411a60:	stp	x29, x30, [sp, #-208]!
  411a64:	mov	x29, sp
  411a68:	stp	x19, x20, [sp, #16]
  411a6c:	mov	x19, x0
  411a70:	stp	x21, x22, [sp, #32]
  411a74:	mov	x21, x0
  411a78:	ldrb	w0, [x0]
  411a7c:	cbz	w0, 411b48 <wcrtomb@plt+0xcf28>
  411a80:	stp	x23, x24, [sp, #48]
  411a84:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  411a88:	adrp	x24, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411a8c:	add	x23, x23, #0x850
  411a90:	add	x24, x24, #0x898
  411a94:	stp	x25, x26, [sp, #64]
  411a98:	mov	x25, x1
  411a9c:	nop
  411aa0:	ldrb	w2, [x19, #1]!
  411aa4:	cbz	w2, 411b40 <wcrtomb@plt+0xcf20>
  411aa8:	cmp	w2, #0x2f
  411aac:	ccmp	x21, x19, #0x4, eq  // eq = none
  411ab0:	b.eq	411aa0 <wcrtomb@plt+0xce80>  // b.none
  411ab4:	ldurb	w0, [x19, #-1]
  411ab8:	cmp	w0, #0x2f
  411abc:	b.eq	411aa0 <wcrtomb@plt+0xce80>  // b.none
  411ac0:	cmp	w0, #0x2e
  411ac4:	b.eq	411b60 <wcrtomb@plt+0xcf40>  // b.none
  411ac8:	ldr	w20, [x23, #24]
  411acc:	mov	x1, x21
  411ad0:	strb	wzr, [x19]
  411ad4:	ldrb	w2, [x23, #28]
  411ad8:	mvn	w20, w20
  411adc:	ldr	w0, [x24]
  411ae0:	and	w20, w20, #0x1ff
  411ae4:	cmp	w2, #0x0
  411ae8:	orr	w22, w20, #0xc0
  411aec:	csel	w22, w22, w20, eq  // eq = none
  411af0:	mov	w2, w22
  411af4:	bl	404260 <mkdirat@plt>
  411af8:	cbz	w0, 411b9c <wcrtomb@plt+0xcf7c>
  411afc:	bl	404ad0 <__errno_location@plt>
  411b00:	ldr	w26, [x0]
  411b04:	mov	x20, x0
  411b08:	cmp	w26, #0x11
  411b0c:	b.eq	411b30 <wcrtomb@plt+0xcf10>  // b.none
  411b10:	ldr	w1, [x24]
  411b14:	add	x3, sp, #0x50
  411b18:	mov	x2, x21
  411b1c:	mov	w4, #0x0                   	// #0
  411b20:	mov	w0, #0x0                   	// #0
  411b24:	bl	404c00 <__fxstatat@plt>
  411b28:	mov	w22, w0
  411b2c:	cbnz	w0, 411be0 <wcrtomb@plt+0xcfc0>
  411b30:	mov	w0, #0x2f                  	// #47
  411b34:	strb	w0, [x19]
  411b38:	ldrb	w2, [x19, #1]!
  411b3c:	cbnz	w2, 411aa8 <wcrtomb@plt+0xce88>
  411b40:	ldp	x23, x24, [sp, #48]
  411b44:	ldp	x25, x26, [sp, #64]
  411b48:	mov	w22, #0x0                   	// #0
  411b4c:	mov	w0, w22
  411b50:	ldp	x19, x20, [sp, #16]
  411b54:	ldp	x21, x22, [sp, #32]
  411b58:	ldp	x29, x30, [sp], #208
  411b5c:	ret
  411b60:	add	x0, x21, #0x1
  411b64:	cmp	x19, x0
  411b68:	b.eq	411aa0 <wcrtomb@plt+0xce80>  // b.none
  411b6c:	ldurb	w0, [x19, #-2]
  411b70:	cmp	w0, #0x2f
  411b74:	b.eq	411aa0 <wcrtomb@plt+0xce80>  // b.none
  411b78:	cmp	w0, #0x2e
  411b7c:	b.ne	411ac8 <wcrtomb@plt+0xcea8>  // b.any
  411b80:	add	x0, x21, #0x2
  411b84:	cmp	x19, x0
  411b88:	b.eq	411aa0 <wcrtomb@plt+0xce80>  // b.none
  411b8c:	ldurb	w0, [x19, #-3]
  411b90:	cmp	w0, #0x2f
  411b94:	b.ne	411ac8 <wcrtomb@plt+0xcea8>  // b.any
  411b98:	b	411aa0 <wcrtomb@plt+0xce80>
  411b9c:	ldr	w2, [x23]
  411ba0:	mov	w4, w20
  411ba4:	mov	w5, #0x100                 	// #256
  411ba8:	mov	w3, #0x1ff                 	// #511
  411bac:	mov	x0, x21
  411bb0:	bic	w2, w22, w2
  411bb4:	mov	x1, #0x0                   	// #0
  411bb8:	bl	411860 <wcrtomb@plt+0xcc40>
  411bbc:	mov	x0, x21
  411bc0:	mov	w2, w20
  411bc4:	sub	w1, w19, w21
  411bc8:	bl	41d760 <wcrtomb@plt+0x18b40>
  411bcc:	mov	w0, #0x1                   	// #1
  411bd0:	strb	w0, [x25]
  411bd4:	mov	w0, #0x2f                  	// #47
  411bd8:	strb	w0, [x19]
  411bdc:	b	411aa0 <wcrtomb@plt+0xce80>
  411be0:	str	w26, [x20]
  411be4:	mov	x0, x21
  411be8:	bl	433968 <wcrtomb@plt+0x2ed48>
  411bec:	mov	w0, #0x2f                  	// #47
  411bf0:	strb	w0, [x19]
  411bf4:	mov	w0, w22
  411bf8:	ldp	x19, x20, [sp, #16]
  411bfc:	ldp	x21, x22, [sp, #32]
  411c00:	ldp	x23, x24, [sp, #48]
  411c04:	ldp	x25, x26, [sp, #64]
  411c08:	ldp	x29, x30, [sp], #208
  411c0c:	ret
  411c10:	stp	x29, x30, [sp, #-320]!
  411c14:	mov	x29, sp
  411c18:	str	x23, [sp, #48]
  411c1c:	and	w23, w1, #0xff
  411c20:	ldrb	w1, [x2]
  411c24:	cbnz	w1, 411cc4 <wcrtomb@plt+0xd0a4>
  411c28:	stp	x19, x20, [sp, #16]
  411c2c:	mov	x19, x2
  411c30:	stp	x21, x22, [sp, #32]
  411c34:	mov	x22, x0
  411c38:	bl	404ad0 <__errno_location@plt>
  411c3c:	ldr	w20, [x0]
  411c40:	mov	x21, x0
  411c44:	cmp	w20, #0x11
  411c48:	b.eq	411cd4 <wcrtomb@plt+0xd0b4>  // b.none
  411c4c:	b.le	411c94 <wcrtomb@plt+0xd074>
  411c50:	cmp	w20, #0x28
  411c54:	b.eq	411c64 <wcrtomb@plt+0xd044>  // b.none
  411c58:	and	w0, w20, #0xffffffbf
  411c5c:	cmp	w0, #0x1f
  411c60:	b.ne	411c78 <wcrtomb@plt+0xd058>  // b.any
  411c64:	cbz	w23, 411c78 <wcrtomb@plt+0xd058>
  411c68:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  411c6c:	ldr	w0, [x23, #880]
  411c70:	cmp	w0, #0x2
  411c74:	b.eq	411d98 <wcrtomb@plt+0xd178>  // b.none
  411c78:	str	w20, [x21]
  411c7c:	mov	w0, #0x0                   	// #0
  411c80:	ldp	x19, x20, [sp, #16]
  411c84:	ldp	x21, x22, [sp, #32]
  411c88:	ldr	x23, [sp, #48]
  411c8c:	ldp	x29, x30, [sp], #320
  411c90:	ret
  411c94:	cmp	w20, #0x2
  411c98:	b.ne	411c78 <wcrtomb@plt+0xd058>  // b.any
  411c9c:	mov	x0, x22
  411ca0:	mov	x1, x19
  411ca4:	bl	411a60 <wcrtomb@plt+0xce40>
  411ca8:	cbnz	w0, 411c78 <wcrtomb@plt+0xd058>
  411cac:	ldrb	w0, [x19]
  411cb0:	cbz	w0, 411c78 <wcrtomb@plt+0xd058>
  411cb4:	mov	w0, #0x1                   	// #1
  411cb8:	ldp	x19, x20, [sp, #16]
  411cbc:	ldp	x21, x22, [sp, #32]
  411cc0:	b	411c88 <wcrtomb@plt+0xd068>
  411cc4:	mov	w0, #0x0                   	// #0
  411cc8:	ldr	x23, [sp, #48]
  411ccc:	ldp	x29, x30, [sp], #320
  411cd0:	ret
  411cd4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  411cd8:	ldr	w0, [x0, #880]
  411cdc:	cmp	w0, #0x4
  411ce0:	b.eq	411e38 <wcrtomb@plt+0xd218>  // b.none
  411ce4:	b.ls	411d78 <wcrtomb@plt+0xd158>  // b.plast
  411ce8:	cmp	w0, #0x5
  411cec:	b.ne	411d48 <wcrtomb@plt+0xd128>  // b.any
  411cf0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  411cf4:	mov	w0, #0x2                   	// #2
  411cf8:	ldr	w1, [x1, #432]
  411cfc:	tbz	w1, #20, 411e0c <wcrtomb@plt+0xd1ec>
  411d00:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  411d04:	ldr	x0, [x0, #1136]
  411d08:	cbz	x0, 411d10 <wcrtomb@plt+0xd0f0>
  411d0c:	blr	x0
  411d10:	mov	w2, #0x5                   	// #5
  411d14:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  411d18:	mov	x0, #0x0                   	// #0
  411d1c:	add	x1, x1, #0xbb0
  411d20:	bl	4049c0 <dcgettext@plt>
  411d24:	mov	x2, x0
  411d28:	mov	x3, x22
  411d2c:	mov	w0, #0x0                   	// #0
  411d30:	mov	w1, #0x0                   	// #0
  411d34:	bl	404050 <error@plt>
  411d38:	mov	w0, #0x2                   	// #2
  411d3c:	ldp	x19, x20, [sp, #16]
  411d40:	ldp	x21, x22, [sp, #32]
  411d44:	b	411c88 <wcrtomb@plt+0xd068>
  411d48:	cmp	w0, #0x6
  411d4c:	b.ne	411c9c <wcrtomb@plt+0xd07c>  // b.any
  411d50:	mov	x0, x22
  411d54:	add	x1, sp, #0xc0
  411d58:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  411d5c:	cbz	w0, 411e48 <wcrtomb@plt+0xd228>
  411d60:	ldr	w0, [x21]
  411d64:	cmp	w0, #0x2
  411d68:	b.eq	411d80 <wcrtomb@plt+0xd160>  // b.none
  411d6c:	mov	x0, x22
  411d70:	bl	434488 <wcrtomb@plt+0x2f868>
  411d74:	b	411c9c <wcrtomb@plt+0xd07c>
  411d78:	cmp	w0, #0x3
  411d7c:	b.eq	411c9c <wcrtomb@plt+0xd07c>  // b.none
  411d80:	mov	x0, x22
  411d84:	mov	w1, #0x0                   	// #0
  411d88:	bl	420788 <wcrtomb@plt+0x1bb68>
  411d8c:	cmp	w0, #0x0
  411d90:	b.le	411c9c <wcrtomb@plt+0xd07c>
  411d94:	b	411cb4 <wcrtomb@plt+0xd094>
  411d98:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  411d9c:	ldrb	w0, [x0, #704]
  411da0:	cbnz	w0, 411c78 <wcrtomb@plt+0xd058>
  411da4:	mov	x0, x22
  411da8:	mov	w1, #0x2f                  	// #47
  411dac:	bl	404870 <strchr@plt>
  411db0:	cbz	x0, 411d80 <wcrtomb@plt+0xd160>
  411db4:	mov	x0, x22
  411db8:	add	x1, sp, #0x40
  411dbc:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  411dc0:	cbnz	w0, 411c78 <wcrtomb@plt+0xd058>
  411dc4:	ldr	w0, [x23, #880]
  411dc8:	add	x1, sp, #0x40
  411dcc:	cmp	w0, #0x6
  411dd0:	b.ne	411e18 <wcrtomb@plt+0xd1f8>  // b.any
  411dd4:	ldr	w0, [x1, #16]
  411dd8:	and	w0, w0, #0xf000
  411ddc:	cmp	w0, #0x4, lsl #12
  411de0:	b.eq	411d80 <wcrtomb@plt+0xd160>  // b.none
  411de4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  411de8:	add	x0, x0, #0xe0
  411dec:	ldur	q0, [x1, #88]
  411df0:	ldp	x0, x1, [x0, #232]
  411df4:	mov	x2, v0.d[0]
  411df8:	mov	x3, v0.d[1]
  411dfc:	bl	42f508 <wcrtomb@plt+0x2a8e8>
  411e00:	cmp	w0, #0x0
  411e04:	b.gt	411d80 <wcrtomb@plt+0xd160>
  411e08:	b	411c9c <wcrtomb@plt+0xd07c>
  411e0c:	ldp	x19, x20, [sp, #16]
  411e10:	ldp	x21, x22, [sp, #32]
  411e14:	b	411c88 <wcrtomb@plt+0xd068>
  411e18:	b.hi	411c9c <wcrtomb@plt+0xd07c>  // b.pmore
  411e1c:	cmp	w0, #0x5
  411e20:	b.eq	411cf0 <wcrtomb@plt+0xd0d0>  // b.none
  411e24:	cmp	w0, #0x2
  411e28:	b.ls	411d80 <wcrtomb@plt+0xd160>  // b.plast
  411e2c:	cmp	w0, #0x4
  411e30:	b.ne	411c9c <wcrtomb@plt+0xd07c>  // b.any
  411e34:	nop
  411e38:	mov	w0, #0x0                   	// #0
  411e3c:	ldp	x19, x20, [sp, #16]
  411e40:	ldp	x21, x22, [sp, #32]
  411e44:	b	411c88 <wcrtomb@plt+0xd068>
  411e48:	add	x1, sp, #0xc0
  411e4c:	b	411dd4 <wcrtomb@plt+0xd1b4>
  411e50:	stp	x29, x30, [sp, #-80]!
  411e54:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  411e58:	mov	x29, sp
  411e5c:	stp	x23, x24, [sp, #48]
  411e60:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  411e64:	add	x23, x23, #0xe0
  411e68:	stp	x19, x20, [sp, #16]
  411e6c:	mov	x20, x0
  411e70:	ldr	w0, [x2, #1108]
  411e74:	ldr	w2, [x23, #104]
  411e78:	mov	w24, w1
  411e7c:	cmp	w0, #0x0
  411e80:	stp	x21, x22, [sp, #32]
  411e84:	and	w0, w2, #0xffffffc0
  411e88:	csel	w2, w0, w2, gt
  411e8c:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411e90:	and	w21, w2, #0x1ff
  411e94:	add	x22, x22, #0x898
  411e98:	strb	wzr, [sp, #79]
  411e9c:	ldr	w0, [x22]
  411ea0:	mov	w2, w21
  411ea4:	mov	x1, x20
  411ea8:	bl	4049d0 <mkfifoat@plt>
  411eac:	mov	w19, w0
  411eb0:	add	x2, sp, #0x4f
  411eb4:	mov	x0, x20
  411eb8:	mov	w1, #0x0                   	// #0
  411ebc:	cbz	w19, 411f10 <wcrtomb@plt+0xd2f0>
  411ec0:	bl	411c10 <wcrtomb@plt+0xcff0>
  411ec4:	cbz	w0, 411eec <wcrtomb@plt+0xd2cc>
  411ec8:	cmp	w0, #0x2
  411ecc:	b.ne	411e9c <wcrtomb@plt+0xd27c>  // b.any
  411ed0:	mov	w19, #0x0                   	// #0
  411ed4:	mov	w0, w19
  411ed8:	ldp	x19, x20, [sp, #16]
  411edc:	ldp	x21, x22, [sp, #32]
  411ee0:	ldp	x23, x24, [sp, #48]
  411ee4:	ldp	x29, x30, [sp], #80
  411ee8:	ret
  411eec:	mov	x0, x20
  411ef0:	mov	w19, #0xffffffff            	// #-1
  411ef4:	bl	4339f0 <wcrtomb@plt+0x2edd0>
  411ef8:	mov	w0, w19
  411efc:	ldp	x19, x20, [sp, #16]
  411f00:	ldp	x21, x22, [sp, #32]
  411f04:	ldp	x23, x24, [sp, #48]
  411f08:	ldp	x29, x30, [sp], #80
  411f0c:	ret
  411f10:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  411f14:	mov	w5, w24
  411f18:	mov	x1, x23
  411f1c:	mov	w7, #0x100                 	// #256
  411f20:	ldr	w3, [x2, #2128]
  411f24:	mov	w6, #0x0                   	// #0
  411f28:	mov	w4, #0x1ff                 	// #511
  411f2c:	mov	w2, #0xffffffff            	// #-1
  411f30:	bic	w3, w21, w3
  411f34:	bl	410fb0 <wcrtomb@plt+0xc390>
  411f38:	b	411ed4 <wcrtomb@plt+0xd2b4>
  411f3c:	nop
  411f40:	stp	x29, x30, [sp, #-80]!
  411f44:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  411f48:	mov	x29, sp
  411f4c:	stp	x21, x22, [sp, #32]
  411f50:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  411f54:	add	x22, x22, #0xe0
  411f58:	ldr	w2, [x2, #1108]
  411f5c:	mov	w21, #0x61ff                	// #25087
  411f60:	stp	x19, x20, [sp, #16]
  411f64:	mov	x20, x0
  411f68:	ldr	w0, [x22, #104]
  411f6c:	cmp	w2, #0x0
  411f70:	stp	x23, x24, [sp, #48]
  411f74:	mov	w24, w1
  411f78:	and	w1, w0, #0xffffffc0
  411f7c:	adrp	x23, 493000 <_obstack_memory_used@@Base+0x41bf0>
  411f80:	csel	w0, w1, w0, gt
  411f84:	add	x23, x23, #0x898
  411f88:	and	w21, w0, w21
  411f8c:	strb	wzr, [sp, #71]
  411f90:	ldr	w1, [x23]
  411f94:	mov	x2, x20
  411f98:	ldr	x5, [x22, #120]
  411f9c:	add	x4, sp, #0x48
  411fa0:	mov	w3, w21
  411fa4:	mov	w0, #0x0                   	// #0
  411fa8:	str	x5, [sp, #72]
  411fac:	bl	404480 <__xmknodat@plt>
  411fb0:	mov	w19, w0
  411fb4:	add	x2, sp, #0x47
  411fb8:	mov	x0, x20
  411fbc:	mov	w1, #0x0                   	// #0
  411fc0:	cbz	w19, 412014 <wcrtomb@plt+0xd3f4>
  411fc4:	bl	411c10 <wcrtomb@plt+0xcff0>
  411fc8:	cbz	w0, 411ff0 <wcrtomb@plt+0xd3d0>
  411fcc:	cmp	w0, #0x2
  411fd0:	b.ne	411f90 <wcrtomb@plt+0xd370>  // b.any
  411fd4:	mov	w19, #0x0                   	// #0
  411fd8:	mov	w0, w19
  411fdc:	ldp	x19, x20, [sp, #16]
  411fe0:	ldp	x21, x22, [sp, #32]
  411fe4:	ldp	x23, x24, [sp, #48]
  411fe8:	ldp	x29, x30, [sp], #80
  411fec:	ret
  411ff0:	mov	x0, x20
  411ff4:	mov	w19, #0xffffffff            	// #-1
  411ff8:	bl	433a78 <wcrtomb@plt+0x2ee58>
  411ffc:	mov	w0, w19
  412000:	ldp	x19, x20, [sp, #16]
  412004:	ldp	x21, x22, [sp, #32]
  412008:	ldp	x23, x24, [sp, #48]
  41200c:	ldp	x29, x30, [sp], #80
  412010:	ret
  412014:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412018:	mov	w5, w24
  41201c:	mov	x1, x22
  412020:	mov	w7, #0x100                 	// #256
  412024:	ldr	w3, [x2, #2128]
  412028:	mov	w6, #0x0                   	// #0
  41202c:	mov	w4, #0x1ff                 	// #511
  412030:	mov	w2, #0xffffffff            	// #-1
  412034:	bic	w3, w21, w3
  412038:	bl	410fb0 <wcrtomb@plt+0xc390>
  41203c:	b	411fd8 <wcrtomb@plt+0xd3b8>
  412040:	stp	x29, x30, [sp, #-384]!
  412044:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  412048:	mov	x29, sp
  41204c:	ldrb	w2, [x2, #213]
  412050:	stp	x19, x20, [sp, #16]
  412054:	mov	x19, x0
  412058:	mov	w20, w1
  41205c:	stp	x21, x22, [sp, #32]
  412060:	stp	x23, x24, [sp, #48]
  412064:	stp	x25, x26, [sp, #64]
  412068:	stp	x27, x28, [sp, #80]
  41206c:	strb	wzr, [sp, #127]
  412070:	cbz	w2, 412080 <wcrtomb@plt+0xd460>
  412074:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  412078:	ldr	x0, [x21, #952]
  41207c:	cbz	x0, 412268 <wcrtomb@plt+0xd648>
  412080:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412084:	ldrb	w0, [x0, #161]
  412088:	cbnz	w0, 412248 <wcrtomb@plt+0xd628>
  41208c:	cmp	w20, #0x44
  412090:	b.eq	41229c <wcrtomb@plt+0xd67c>  // b.none
  412094:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  412098:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  41209c:	add	x22, x22, #0xe0
  4120a0:	mov	w0, #0x1c0                 	// #448
  4120a4:	ldr	w1, [x1, #1108]
  4120a8:	ldr	w20, [x22, #104]
  4120ac:	cmp	w1, #0x0
  4120b0:	b.gt	4120c8 <wcrtomb@plt+0xd4a8>
  4120b4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4120b8:	mov	w1, #0x1ff                 	// #511
  4120bc:	ldr	w2, [x2, #740]
  4120c0:	cmp	w2, #0x0
  4120c4:	csel	w0, w0, w1, gt
  4120c8:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4120cc:	add	x28, x26, #0x850
  4120d0:	and	w20, w20, w0
  4120d4:	adrp	x23, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4120d8:	orr	w0, w20, #0xc0
  4120dc:	add	x23, x23, #0x898
  4120e0:	ldrb	w1, [x28, #28]
  4120e4:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  4120e8:	mov	w27, #0x0                   	// #0
  4120ec:	add	x2, x24, #0x2f0
  4120f0:	cmp	w1, #0x0
  4120f4:	mov	w25, #0x0                   	// #0
  4120f8:	csel	w20, w0, w20, eq  // eq = none
  4120fc:	str	x2, [sp, #104]
  412100:	ldr	w0, [x23]
  412104:	mov	w2, w20
  412108:	mov	x1, x19
  41210c:	bl	404260 <mkdirat@plt>
  412110:	mov	w21, w0
  412114:	cbz	w0, 4122e8 <wcrtomb@plt+0xd6c8>
  412118:	bl	404ad0 <__errno_location@plt>
  41211c:	mov	x24, x0
  412120:	ldr	w0, [x0]
  412124:	cmp	w0, #0x11
  412128:	b.ne	41216c <wcrtomb@plt+0xd54c>  // b.any
  41212c:	ldrb	w1, [sp, #127]
  412130:	ldr	x0, [sp, #104]
  412134:	ldrb	w0, [x0]
  412138:	cbz	w1, 4121d4 <wcrtomb@plt+0xd5b4>
  41213c:	cbnz	w0, 4121d8 <wcrtomb@plt+0xd5b8>
  412140:	add	x1, sp, #0x80
  412144:	mov	x0, x19
  412148:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  41214c:	cbnz	w0, 412164 <wcrtomb@plt+0xd544>
  412150:	ldr	w25, [sp, #144]
  412154:	and	w0, w25, #0xf000
  412158:	cmp	w0, #0x4, lsl #12
  41215c:	b.eq	4122fc <wcrtomb@plt+0xd6dc>  // b.none
  412160:	mov	w27, #0xffffffff            	// #-1
  412164:	mov	w0, #0x11                  	// #17
  412168:	str	w0, [x24]
  41216c:	add	x2, sp, #0x7f
  412170:	mov	x0, x19
  412174:	mov	w1, #0x0                   	// #0
  412178:	bl	411c10 <wcrtomb@plt+0xcff0>
  41217c:	cbz	w0, 412210 <wcrtomb@plt+0xd5f0>
  412180:	cmp	w0, #0x1
  412184:	b.eq	412100 <wcrtomb@plt+0xd4e0>  // b.none
  412188:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41218c:	ldr	w0, [x0, #880]
  412190:	tst	w0, #0xfffffffd
  412194:	b.ne	4121b4 <wcrtomb@plt+0xd594>  // b.any
  412198:	mov	w5, #0x0                   	// #0
  41219c:	ldr	w4, [x22, #104]
  4121a0:	mov	w3, w27
  4121a4:	mov	w2, w25
  4121a8:	mov	x0, x19
  4121ac:	mov	x1, x22
  4121b0:	bl	411860 <wcrtomb@plt+0xcc40>
  4121b4:	mov	w0, w21
  4121b8:	ldp	x19, x20, [sp, #16]
  4121bc:	ldp	x21, x22, [sp, #32]
  4121c0:	ldp	x23, x24, [sp, #48]
  4121c4:	ldp	x25, x26, [sp, #64]
  4121c8:	ldp	x27, x28, [sp, #80]
  4121cc:	ldp	x29, x30, [sp], #384
  4121d0:	ret
  4121d4:	cbz	w0, 412254 <wcrtomb@plt+0xd634>
  4121d8:	ldr	w1, [x23]
  4121dc:	add	x3, sp, #0x100
  4121e0:	mov	x2, x19
  4121e4:	mov	w4, #0x100                 	// #256
  4121e8:	mov	w0, #0x0                   	// #0
  4121ec:	bl	404c00 <__fxstatat@plt>
  4121f0:	cbnz	w0, 412204 <wcrtomb@plt+0xd5e4>
  4121f4:	ldr	w1, [sp, #272]
  4121f8:	and	w1, w1, #0xf000
  4121fc:	cmp	w1, #0xa, lsl #12
  412200:	b.eq	4122b0 <wcrtomb@plt+0xd690>  // b.none
  412204:	mov	w0, #0x11                  	// #17
  412208:	str	w0, [x24]
  41220c:	b	412140 <wcrtomb@plt+0xd520>
  412210:	ldr	w0, [x24]
  412214:	cmp	w0, #0x11
  412218:	b.eq	412188 <wcrtomb@plt+0xd568>  // b.none
  41221c:	mov	x0, x19
  412220:	mov	w21, #0x1                   	// #1
  412224:	bl	433968 <wcrtomb@plt+0x2ed48>
  412228:	mov	w0, w21
  41222c:	ldp	x19, x20, [sp, #16]
  412230:	ldp	x21, x22, [sp, #32]
  412234:	ldp	x23, x24, [sp, #48]
  412238:	ldp	x25, x26, [sp, #64]
  41223c:	ldp	x27, x28, [sp, #80]
  412240:	ldp	x29, x30, [sp], #384
  412244:	ret
  412248:	mov	x0, x19
  41224c:	bl	41b008 <wcrtomb@plt+0x163e8>
  412250:	b	412094 <wcrtomb@plt+0xd474>
  412254:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412258:	ldr	w0, [x0, #880]
  41225c:	tst	w0, #0xfffffffd
  412260:	b.eq	412140 <wcrtomb@plt+0xd520>  // b.none
  412264:	b	41216c <wcrtomb@plt+0xd54c>
  412268:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41226c:	adrp	x22, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  412270:	add	x22, x22, #0x348
  412274:	add	x3, sp, #0x100
  412278:	ldr	w1, [x0, #2200]
  41227c:	mov	x2, x22
  412280:	mov	w4, #0x0                   	// #0
  412284:	mov	w0, #0x0                   	// #0
  412288:	bl	404c00 <__fxstatat@plt>
  41228c:	cbnz	w0, 4122a4 <wcrtomb@plt+0xd684>
  412290:	ldr	x0, [sp, #256]
  412294:	str	x0, [x21, #952]
  412298:	b	412080 <wcrtomb@plt+0xd460>
  41229c:	bl	41e038 <wcrtomb@plt+0x19418>
  4122a0:	b	412094 <wcrtomb@plt+0xd474>
  4122a4:	mov	x0, x22
  4122a8:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  4122ac:	b	412080 <wcrtomb@plt+0xd460>
  4122b0:	ldr	w1, [x23]
  4122b4:	add	x3, sp, #0x100
  4122b8:	mov	x2, x19
  4122bc:	mov	w4, #0x0                   	// #0
  4122c0:	bl	404c00 <__fxstatat@plt>
  4122c4:	cbnz	w0, 412204 <wcrtomb@plt+0xd5e4>
  4122c8:	ldr	w0, [sp, #272]
  4122cc:	and	w0, w0, #0xf000
  4122d0:	cmp	w0, #0x4, lsl #12
  4122d4:	b.ne	412204 <wcrtomb@plt+0xd5e4>  // b.any
  4122d8:	mov	w0, #0x11                  	// #17
  4122dc:	mov	w21, #0x0                   	// #0
  4122e0:	str	w0, [x24]
  4122e4:	b	4121b4 <wcrtomb@plt+0xd594>
  4122e8:	ldr	w25, [x26, #2128]
  4122ec:	mov	w5, #0x100                 	// #256
  4122f0:	mov	w27, #0x1ff                 	// #511
  4122f4:	bic	w25, w20, w25
  4122f8:	b	41219c <wcrtomb@plt+0xd57c>
  4122fc:	ldrb	w0, [sp, #127]
  412300:	mov	w27, #0xffffffff            	// #-1
  412304:	cbz	w0, 412188 <wcrtomb@plt+0xd568>
  412308:	ldr	x20, [x28, #8]
  41230c:	cbnz	x20, 41231c <wcrtomb@plt+0xd6fc>
  412310:	b	4123a8 <wcrtomb@plt+0xd788>
  412314:	ldr	x20, [x20]
  412318:	cbz	x20, 4123a8 <wcrtomb@plt+0xd788>
  41231c:	ldr	w4, [x20, #84]
  412320:	add	x3, sp, #0x100
  412324:	ldr	w1, [x23]
  412328:	mov	w0, #0x0                   	// #0
  41232c:	ldr	x2, [x20, #160]
  412330:	bl	404c00 <__fxstatat@plt>
  412334:	cbnz	w0, 412398 <wcrtomb@plt+0xd778>
  412338:	ldr	x0, [sp, #128]
  41233c:	ldr	x1, [sp, #256]
  412340:	cmp	x1, x0
  412344:	b.ne	412314 <wcrtomb@plt+0xd6f4>  // b.any
  412348:	ldr	x0, [sp, #136]
  41234c:	ldr	x1, [sp, #264]
  412350:	cmp	x1, x0
  412354:	b.ne	412314 <wcrtomb@plt+0xd6f4>  // b.any
  412358:	ldur	q0, [x22, #88]
  41235c:	mov	w0, #0xffffffff            	// #-1
  412360:	ldr	w2, [x22, #104]
  412364:	mov	w21, #0x0                   	// #0
  412368:	ldp	w7, w6, [x22, #112]
  41236c:	ldr	w1, [sp, #272]
  412370:	stur	q0, [x20, #8]
  412374:	ldp	x4, x5, [x22, #216]
  412378:	str	w2, [x20, #24]
  41237c:	ldp	x2, x3, [x22, #232]
  412380:	stp	w7, w6, [x20, #28]
  412384:	stp	x4, x5, [x20, #40]
  412388:	stp	x2, x3, [x20, #56]
  41238c:	stp	w1, w0, [x20, #72]
  412390:	strb	wzr, [x20, #80]
  412394:	b	4121b4 <wcrtomb@plt+0xd594>
  412398:	ldr	x0, [x20, #160]
  41239c:	mov	w21, #0x0                   	// #0
  4123a0:	bl	434400 <wcrtomb@plt+0x2f7e0>
  4123a4:	b	4121b4 <wcrtomb@plt+0xd594>
  4123a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4123ac:	ldr	x0, [x0, #1136]
  4123b0:	cbz	x0, 4123b8 <wcrtomb@plt+0xd798>
  4123b4:	blr	x0
  4123b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4123bc:	add	x1, x1, #0xbd0
  4123c0:	mov	w2, #0x5                   	// #5
  4123c4:	mov	x0, #0x0                   	// #0
  4123c8:	bl	4049c0 <dcgettext@plt>
  4123cc:	mov	x20, x0
  4123d0:	mov	x0, x19
  4123d4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4123d8:	mov	w1, #0x0                   	// #0
  4123dc:	mov	x3, x0
  4123e0:	mov	x2, x20
  4123e4:	mov	w0, #0x0                   	// #0
  4123e8:	bl	404050 <error@plt>
  4123ec:	mov	w21, #0x0                   	// #0
  4123f0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4123f4:	mov	w1, #0x2                   	// #2
  4123f8:	str	w1, [x0, #3568]
  4123fc:	b	4121b4 <wcrtomb@plt+0xd594>
  412400:	stp	x29, x30, [sp, #-256]!
  412404:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  412408:	mov	x29, sp
  41240c:	stp	x19, x20, [sp, #16]
  412410:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  412414:	add	x20, x20, #0xe0
  412418:	stp	x25, x26, [sp, #64]
  41241c:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  412420:	ldr	w4, [x2, #1108]
  412424:	ldrb	w3, [x25, #753]
  412428:	ldr	w2, [x20, #104]
  41242c:	cmp	w4, #0x0
  412430:	stp	x21, x22, [sp, #32]
  412434:	mov	x21, x0
  412438:	and	w22, w2, #0x1c0
  41243c:	stp	x23, x24, [sp, #48]
  412440:	mov	w23, w1
  412444:	and	w1, w2, #0x1ff
  412448:	stp	x27, x28, [sp, #80]
  41244c:	csel	w22, w22, w1, gt
  412450:	strb	wzr, [sp, #126]
  412454:	cbnz	w3, 4125dc <wcrtomb@plt+0xd9bc>
  412458:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41245c:	ldr	x1, [x1, #744]
  412460:	cbz	x1, 412560 <wcrtomb@plt+0xd940>
  412464:	mov	x2, x20
  412468:	mov	w1, #0x66                  	// #102
  41246c:	mov	w27, #0x0                   	// #0
  412470:	bl	42b018 <wcrtomb@plt+0x263f8>
  412474:	mov	w24, #0x0                   	// #0
  412478:	mov	w19, w0
  41247c:	tbnz	w0, #31, 41287c <wcrtomb@plt+0xdc5c>
  412480:	mov	x0, x20
  412484:	bl	405618 <wcrtomb@plt+0x9f8>
  412488:	ldrb	w0, [x20, #272]
  41248c:	cbnz	w0, 4125f8 <wcrtomb@plt+0xd9d8>
  412490:	ldr	x0, [x20, #136]
  412494:	str	x0, [sp, #128]
  412498:	b	412500 <wcrtomb@plt+0xd8e0>
  41249c:	bl	405720 <wcrtomb@plt+0xb00>
  4124a0:	bl	406550 <wcrtomb@plt+0x1930>
  4124a4:	mov	x26, x0
  4124a8:	cbz	x0, 4127a4 <wcrtomb@plt+0xdb84>
  4124ac:	bl	406128 <wcrtomb@plt+0x1508>
  4124b0:	ldr	x22, [sp, #128]
  4124b4:	cmp	x22, x0
  4124b8:	csel	x22, x22, x0, ls  // ls = plast
  4124bc:	bl	404ad0 <__errno_location@plt>
  4124c0:	mov	x3, x0
  4124c4:	mov	x2, x22
  4124c8:	mov	x1, x26
  4124cc:	mov	w0, w19
  4124d0:	str	wzr, [x3]
  4124d4:	bl	41fc80 <wcrtomb@plt+0x1b060>
  4124d8:	mov	x28, x0
  4124dc:	ldr	x1, [sp, #128]
  4124e0:	sub	x2, x22, #0x1
  4124e4:	add	x0, x26, x2
  4124e8:	sub	x1, x1, x22
  4124ec:	str	x1, [sp, #128]
  4124f0:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4124f4:	cmp	x22, x28
  4124f8:	b.ne	4127ec <wcrtomb@plt+0xdbcc>  // b.any
  4124fc:	ldr	x0, [sp, #128]
  412500:	cmp	x0, #0x0
  412504:	b.gt	41249c <wcrtomb@plt+0xd87c>
  412508:	bl	41d860 <wcrtomb@plt+0x18c40>
  41250c:	bl	4056c0 <wcrtomb@plt+0xaa0>
  412510:	ldrb	w0, [x25, #753]
  412514:	cbnz	w0, 41261c <wcrtomb@plt+0xd9fc>
  412518:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  41251c:	ldr	x0, [x22, #744]
  412520:	cbz	x0, 412800 <wcrtomb@plt+0xdbe0>
  412524:	mov	w0, w19
  412528:	bl	4045c0 <close@plt>
  41252c:	mov	w19, w0
  412530:	tbnz	w0, #31, 412844 <wcrtomb@plt+0xdc24>
  412534:	ldr	x0, [x22, #744]
  412538:	cbz	x0, 412540 <wcrtomb@plt+0xd920>
  41253c:	bl	42b448 <wcrtomb@plt+0x26828>
  412540:	mov	w0, w19
  412544:	ldp	x19, x20, [sp, #16]
  412548:	ldp	x21, x22, [sp, #32]
  41254c:	ldp	x23, x24, [sp, #48]
  412550:	ldp	x25, x26, [sp, #64]
  412554:	ldp	x27, x28, [sp, #80]
  412558:	ldp	x29, x30, [sp], #256
  41255c:	ret
  412560:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412564:	strb	wzr, [sp, #127]
  412568:	ldr	w0, [x0, #784]
  41256c:	cmp	w0, #0x0
  412570:	b.le	412640 <wcrtomb@plt+0xda20>
  412574:	ldr	x0, [x20, #328]
  412578:	cbz	x0, 412640 <wcrtomb@plt+0xda20>
  41257c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412580:	adrp	x26, 493000 <_obstack_memory_used@@Base+0x41bf0>
  412584:	add	x26, x26, #0x898
  412588:	ldr	w19, [x0, #2128]
  41258c:	bic	w2, w2, w19
  412590:	and	w19, w2, #0x1ff
  412594:	ldr	w1, [x26]
  412598:	mov	w3, w19
  41259c:	mov	x2, x21
  4125a0:	add	x4, sp, #0x80
  4125a4:	mov	w0, #0x0                   	// #0
  4125a8:	str	xzr, [sp, #128]
  4125ac:	bl	404480 <__xmknodat@plt>
  4125b0:	mov	w3, w0
  4125b4:	add	x2, sp, #0x7f
  4125b8:	mov	x0, x21
  4125bc:	mov	w1, #0x0                   	// #0
  4125c0:	cbz	w3, 4128b4 <wcrtomb@plt+0xdc94>
  4125c4:	bl	411c10 <wcrtomb@plt+0xcff0>
  4125c8:	cbz	w0, 4128a0 <wcrtomb@plt+0xdc80>
  4125cc:	cmp	w0, #0x2
  4125d0:	b.ne	412594 <wcrtomb@plt+0xd974>  // b.any
  4125d4:	mov	w28, #0x0                   	// #0
  4125d8:	b	41264c <wcrtomb@plt+0xda2c>
  4125dc:	mov	x0, x20
  4125e0:	bl	405618 <wcrtomb@plt+0x9f8>
  4125e4:	ldrb	w0, [x20, #272]
  4125e8:	mov	w27, #0x0                   	// #0
  4125ec:	mov	w24, #0x0                   	// #0
  4125f0:	mov	w19, #0x1                   	// #1
  4125f4:	cbz	w0, 412490 <wcrtomb@plt+0xd870>
  4125f8:	add	x2, sp, #0x80
  4125fc:	mov	x1, x20
  412600:	mov	w0, w19
  412604:	bl	429ac8 <wcrtomb@plt+0x24ea8>
  412608:	ldr	x0, [sp, #128]
  41260c:	bl	41d860 <wcrtomb@plt+0x18c40>
  412610:	bl	4056c0 <wcrtomb@plt+0xaa0>
  412614:	ldrb	w0, [x25, #753]
  412618:	cbz	w0, 412518 <wcrtomb@plt+0xd8f8>
  41261c:	mov	w19, #0x0                   	// #0
  412620:	mov	w0, w19
  412624:	ldp	x19, x20, [sp, #16]
  412628:	ldp	x21, x22, [sp, #32]
  41262c:	ldp	x23, x24, [sp, #48]
  412630:	ldp	x25, x26, [sp, #64]
  412634:	ldp	x27, x28, [sp, #80]
  412638:	ldp	x29, x30, [sp], #256
  41263c:	ret
  412640:	adrp	x26, 493000 <_obstack_memory_used@@Base+0x41bf0>
  412644:	add	x26, x26, #0x898
  412648:	mov	w28, #0x0                   	// #0
  41264c:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  412650:	add	x27, x27, #0x370
  412654:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412658:	add	x0, x0, #0x2c0
  41265c:	str	x0, [sp, #104]
  412660:	ldr	w24, [x27]
  412664:	cmp	w24, #0x2
  412668:	b.eq	412778 <wcrtomb@plt+0xdb58>  // b.none
  41266c:	mov	w0, #0x941                 	// #2369
  412670:	mov	w19, #0x9c1                 	// #2497
  412674:	movk	w0, #0x8, lsl #16
  412678:	movk	w19, #0x8, lsl #16
  41267c:	cmp	w28, #0x0
  412680:	csel	w19, w19, w0, eq  // eq = none
  412684:	cmp	w23, #0x37
  412688:	b.eq	41271c <wcrtomb@plt+0xdafc>  // b.none
  41268c:	ldr	w0, [x26]
  412690:	mov	w2, w19
  412694:	mov	w3, w22
  412698:	mov	x1, x21
  41269c:	bl	404ab0 <openat@plt>
  4126a0:	mov	w19, w0
  4126a4:	tbnz	w0, #31, 4126e0 <wcrtomb@plt+0xdac0>
  4126a8:	cmp	w24, #0x2
  4126ac:	b.eq	412850 <wcrtomb@plt+0xdc30>  // b.none
  4126b0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4126b4:	mov	w27, #0x1ff                 	// #511
  4126b8:	ldr	w24, [x0, #2128]
  4126bc:	bic	w24, w22, w24
  4126c0:	b	412480 <wcrtomb@plt+0xd860>
  4126c4:	bl	404ad0 <__errno_location@plt>
  4126c8:	mov	x24, x0
  4126cc:	mov	w0, w19
  4126d0:	ldr	w19, [x24]
  4126d4:	bl	4045c0 <close@plt>
  4126d8:	str	w19, [x24]
  4126dc:	nop
  4126e0:	add	x2, sp, #0x7e
  4126e4:	mov	x0, x21
  4126e8:	mov	w1, #0x1                   	// #1
  4126ec:	bl	411c10 <wcrtomb@plt+0xcff0>
  4126f0:	cmp	w0, #0x1
  4126f4:	b.eq	412660 <wcrtomb@plt+0xda40>  // b.none
  4126f8:	str	w0, [sp, #104]
  4126fc:	bl	41e038 <wcrtomb@plt+0x19418>
  412700:	ldr	w0, [sp, #104]
  412704:	cmp	w0, #0x2
  412708:	b.eq	41261c <wcrtomb@plt+0xd9fc>  // b.none
  41270c:	mov	x0, x21
  412710:	mov	w19, #0x1                   	// #1
  412714:	bl	433b00 <wcrtomb@plt+0x2eee0>
  412718:	b	412540 <wcrtomb@plt+0xd920>
  41271c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412720:	add	x0, x0, #0x850
  412724:	ldr	w1, [x0, #32]
  412728:	cbnz	w1, 41268c <wcrtomb@plt+0xda6c>
  41272c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412730:	mov	w2, #0x1                   	// #1
  412734:	str	w2, [x0, #32]
  412738:	ldr	w0, [x1, #432]
  41273c:	tbz	w0, #3, 41268c <wcrtomb@plt+0xda6c>
  412740:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412744:	ldr	x0, [x0, #1136]
  412748:	cbz	x0, 412750 <wcrtomb@plt+0xdb30>
  41274c:	blr	x0
  412750:	mov	w2, #0x5                   	// #5
  412754:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  412758:	mov	x0, #0x0                   	// #0
  41275c:	add	x1, x1, #0xc08
  412760:	bl	4049c0 <dcgettext@plt>
  412764:	mov	x2, x0
  412768:	mov	w1, #0x0                   	// #0
  41276c:	mov	w0, #0x0                   	// #0
  412770:	bl	404050 <error@plt>
  412774:	b	41268c <wcrtomb@plt+0xda6c>
  412778:	ldr	x0, [sp, #104]
  41277c:	ldrb	w0, [x0]
  412780:	cbnz	w0, 412794 <wcrtomb@plt+0xdb74>
  412784:	mov	w0, #0x8b41                	// #35649
  412788:	movk	w0, #0x8, lsl #16
  41278c:	mov	w19, w0
  412790:	b	41267c <wcrtomb@plt+0xda5c>
  412794:	mov	w0, #0xb41                 	// #2881
  412798:	movk	w0, #0x8, lsl #16
  41279c:	mov	w19, w0
  4127a0:	b	41267c <wcrtomb@plt+0xda5c>
  4127a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4127a8:	ldr	x0, [x0, #1136]
  4127ac:	cbz	x0, 4127b4 <wcrtomb@plt+0xdb94>
  4127b0:	blr	x0
  4127b4:	mov	w2, #0x5                   	// #5
  4127b8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4127bc:	mov	x0, #0x0                   	// #0
  4127c0:	add	x1, x1, #0x378
  4127c4:	bl	4049c0 <dcgettext@plt>
  4127c8:	mov	x2, x0
  4127cc:	mov	w1, #0x0                   	// #0
  4127d0:	mov	w0, #0x0                   	// #0
  4127d4:	bl	404050 <error@plt>
  4127d8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4127dc:	mov	w2, #0x2                   	// #2
  4127e0:	ldr	x0, [sp, #128]
  4127e4:	str	w2, [x1, #3568]
  4127e8:	b	412508 <wcrtomb@plt+0xd8e8>
  4127ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4127f0:	ldr	x0, [x0, #744]
  4127f4:	cbz	x0, 412888 <wcrtomb@plt+0xdc68>
  4127f8:	ldr	x0, [sp, #128]
  4127fc:	b	412508 <wcrtomb@plt+0xd8e8>
  412800:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412804:	mov	w2, w19
  412808:	mov	w5, w23
  41280c:	mov	w4, w27
  412810:	ldr	w0, [x0, #880]
  412814:	mov	w3, w24
  412818:	mov	x1, x20
  41281c:	mov	w6, #0x0                   	// #0
  412820:	cmp	w0, #0x2
  412824:	mov	x0, x21
  412828:	cset	w7, ne  // ne = any
  41282c:	lsl	w7, w7, #8
  412830:	bl	410fb0 <wcrtomb@plt+0xc390>
  412834:	mov	w0, w19
  412838:	bl	4045c0 <close@plt>
  41283c:	mov	w19, w0
  412840:	tbz	w0, #31, 412534 <wcrtomb@plt+0xd914>
  412844:	mov	x0, x21
  412848:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  41284c:	b	412534 <wcrtomb@plt+0xd914>
  412850:	mov	w1, w0
  412854:	add	x2, sp, #0x80
  412858:	mov	w0, #0x0                   	// #0
  41285c:	bl	4049a0 <__fxstat@plt>
  412860:	cbnz	w0, 4126c4 <wcrtomb@plt+0xdaa4>
  412864:	ldr	w24, [sp, #144]
  412868:	and	w0, w24, #0xf000
  41286c:	cmp	w0, #0x8, lsl #12
  412870:	b.ne	4128cc <wcrtomb@plt+0xdcac>  // b.any
  412874:	mov	w27, #0xffffffff            	// #-1
  412878:	b	412480 <wcrtomb@plt+0xd860>
  41287c:	mov	w19, #0x0                   	// #0
  412880:	bl	41e038 <wcrtomb@plt+0x19418>
  412884:	b	412540 <wcrtomb@plt+0xd920>
  412888:	mov	x0, x21
  41288c:	mov	x2, x22
  412890:	mov	x1, x28
  412894:	bl	434820 <wcrtomb@plt+0x2fc00>
  412898:	ldr	x0, [sp, #128]
  41289c:	b	412508 <wcrtomb@plt+0xd8e8>
  4128a0:	bl	41e038 <wcrtomb@plt+0x19418>
  4128a4:	mov	w19, #0x1                   	// #1
  4128a8:	mov	x0, x21
  4128ac:	bl	433b00 <wcrtomb@plt+0x2eee0>
  4128b0:	b	412540 <wcrtomb@plt+0xd920>
  4128b4:	mov	w2, w23
  4128b8:	mov	x1, x21
  4128bc:	mov	x0, x20
  4128c0:	mov	w28, #0x1                   	// #1
  4128c4:	bl	432fa8 <wcrtomb@plt+0x2e388>
  4128c8:	b	41264c <wcrtomb@plt+0xda2c>
  4128cc:	mov	w0, w19
  4128d0:	bl	4045c0 <close@plt>
  4128d4:	bl	404ad0 <__errno_location@plt>
  4128d8:	mov	w1, #0x11                  	// #17
  4128dc:	str	w1, [x0]
  4128e0:	b	4126e0 <wcrtomb@plt+0xdac0>
  4128e4:	nop
  4128e8:	stp	x29, x30, [sp, #-336]!
  4128ec:	mov	x29, sp
  4128f0:	stp	x19, x20, [sp, #16]
  4128f4:	mov	x20, x0
  4128f8:	stp	x21, x22, [sp, #32]
  4128fc:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  412900:	mov	x21, x2
  412904:	add	x22, x22, #0x898
  412908:	stp	x23, x24, [sp, #48]
  41290c:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  412910:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  412914:	add	x23, x23, #0x370
  412918:	add	x24, x24, #0xe0
  41291c:	stp	x25, x26, [sp, #64]
  412920:	and	w25, w1, #0xff
  412924:	ldr	w0, [x22]
  412928:	mov	x1, x20
  41292c:	mov	w3, #0x0                   	// #0
  412930:	mov	w2, #0xc1                  	// #193
  412934:	bl	404ab0 <openat@plt>
  412938:	mov	w19, w0
  41293c:	tbz	w0, #31, 412a40 <wcrtomb@plt+0xde20>
  412940:	ldrb	w0, [x21]
  412944:	cbnz	w0, 412968 <wcrtomb@plt+0xdd48>
  412948:	bl	404ad0 <__errno_location@plt>
  41294c:	ldr	w26, [x0]
  412950:	mov	x19, x0
  412954:	cmp	w26, #0x2
  412958:	b.eq	4129b0 <wcrtomb@plt+0xdd90>  // b.none
  41295c:	cmp	w26, #0x11
  412960:	b.eq	41298c <wcrtomb@plt+0xdd6c>  // b.none
  412964:	str	w26, [x19]
  412968:	mov	x0, x20
  41296c:	bl	433b00 <wcrtomb@plt+0x2eee0>
  412970:	mov	w0, #0xffffffff            	// #-1
  412974:	ldp	x19, x20, [sp, #16]
  412978:	ldp	x21, x22, [sp, #32]
  41297c:	ldp	x23, x24, [sp, #48]
  412980:	ldp	x25, x26, [sp, #64]
  412984:	ldp	x29, x30, [sp], #336
  412988:	ret
  41298c:	ldr	w0, [x23]
  412990:	cmp	w0, #0x5
  412994:	b.eq	412ba4 <wcrtomb@plt+0xdf84>  // b.none
  412998:	b.hi	4129cc <wcrtomb@plt+0xddac>  // b.pmore
  41299c:	cmp	w0, #0x2
  4129a0:	b.ls	412a28 <wcrtomb@plt+0xde08>  // b.plast
  4129a4:	cmp	w0, #0x4
  4129a8:	b.eq	412968 <wcrtomb@plt+0xdd48>  // b.none
  4129ac:	nop
  4129b0:	mov	x1, x21
  4129b4:	mov	x0, x20
  4129b8:	bl	411a60 <wcrtomb@plt+0xce40>
  4129bc:	cbnz	w0, 412964 <wcrtomb@plt+0xdd44>
  4129c0:	ldrb	w0, [x21]
  4129c4:	cbz	w0, 412964 <wcrtomb@plt+0xdd44>
  4129c8:	b	412924 <wcrtomb@plt+0xdd04>
  4129cc:	cmp	w0, #0x6
  4129d0:	b.ne	4129b0 <wcrtomb@plt+0xdd90>  // b.any
  4129d4:	add	x1, sp, #0xd0
  4129d8:	mov	x0, x20
  4129dc:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  4129e0:	cbz	w0, 4129fc <wcrtomb@plt+0xdddc>
  4129e4:	ldr	w0, [x19]
  4129e8:	cmp	w0, #0x2
  4129ec:	b.eq	412a28 <wcrtomb@plt+0xde08>  // b.none
  4129f0:	mov	x0, x20
  4129f4:	bl	434488 <wcrtomb@plt+0x2f868>
  4129f8:	b	4129b0 <wcrtomb@plt+0xdd90>
  4129fc:	ldr	w0, [sp, #224]
  412a00:	and	w0, w0, #0xf000
  412a04:	cmp	w0, #0x4, lsl #12
  412a08:	b.eq	412a28 <wcrtomb@plt+0xde08>  // b.none
  412a0c:	add	x2, sp, #0x200
  412a10:	ldp	x0, x1, [x24, #232]
  412a14:	ldp	x2, x3, [x2, #-216]
  412a18:	bl	42f508 <wcrtomb@plt+0x2a8e8>
  412a1c:	cmp	w0, #0x0
  412a20:	b.le	4129b0 <wcrtomb@plt+0xdd90>
  412a24:	nop
  412a28:	mov	x0, x20
  412a2c:	mov	w1, #0x0                   	// #0
  412a30:	bl	420788 <wcrtomb@plt+0x1bb68>
  412a34:	cmp	w0, #0x0
  412a38:	b.le	4129b0 <wcrtomb@plt+0xdd90>
  412a3c:	b	412924 <wcrtomb@plt+0xdd04>
  412a40:	mov	w1, w0
  412a44:	add	x2, sp, #0x50
  412a48:	mov	w0, #0x0                   	// #0
  412a4c:	bl	4049a0 <__fxstat@plt>
  412a50:	cbnz	w0, 412c40 <wcrtomb@plt+0xe020>
  412a54:	mov	w0, w19
  412a58:	bl	4045c0 <close@plt>
  412a5c:	cbnz	w0, 412c30 <wcrtomb@plt+0xe010>
  412a60:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  412a64:	add	x21, x21, #0xe0
  412a68:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412a6c:	add	x22, x22, #0x850
  412a70:	ldr	x0, [x21, #24]
  412a74:	bl	403ff0 <strlen@plt>
  412a78:	add	x0, x0, #0xa1
  412a7c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  412a80:	mov	x19, x0
  412a84:	mvni	v0.4s, #0x0
  412a88:	strb	w25, [x0, #40]
  412a8c:	ldr	q1, [sp, #80]
  412a90:	ldr	x0, [x22, #16]
  412a94:	str	x0, [x19]
  412a98:	str	x19, [x22, #16]
  412a9c:	stur	q1, [x19, #8]
  412aa0:	stur	q0, [x19, #24]
  412aa4:	cbnz	w25, 412bcc <wcrtomb@plt+0xdfac>
  412aa8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  412aac:	mov	x0, x20
  412ab0:	ldr	w1, [x1, #128]
  412ab4:	str	w1, [x19, #88]
  412ab8:	bl	403ff0 <strlen@plt>
  412abc:	add	x0, x0, #0x9
  412ac0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  412ac4:	str	x0, [x19, #96]
  412ac8:	str	xzr, [x0], #8
  412acc:	mov	x1, x20
  412ad0:	bl	404910 <strcpy@plt>
  412ad4:	mov	x0, x19
  412ad8:	ldr	x1, [x21, #48]
  412adc:	str	xzr, [x0, #104]!
  412ae0:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  412ae4:	stp	xzr, xzr, [x19, #112]
  412ae8:	add	x2, x19, #0x90
  412aec:	stp	xzr, xzr, [x19, #128]
  412af0:	add	x1, x19, #0x98
  412af4:	mov	x0, x21
  412af8:	bl	416ce0 <wcrtomb@plt+0x120c0>
  412afc:	ldr	x1, [x21, #24]
  412b00:	add	x0, x19, #0xa0
  412b04:	bl	404910 <strcpy@plt>
  412b08:	ldr	x19, [x22, #8]
  412b0c:	cbnz	x19, 412b1c <wcrtomb@plt+0xdefc>
  412b10:	b	412bb0 <wcrtomb@plt+0xdf90>
  412b14:	ldr	x19, [x19]
  412b18:	cbz	x19, 412bb0 <wcrtomb@plt+0xdf90>
  412b1c:	ldrb	w1, [x19, #88]
  412b20:	mov	x0, x20
  412b24:	cbnz	w1, 412b14 <wcrtomb@plt+0xdef4>
  412b28:	ldp	x21, x22, [x19, #152]
  412b2c:	mov	x2, x21
  412b30:	mov	x1, x22
  412b34:	bl	4043c0 <strncmp@plt>
  412b38:	cbnz	w0, 412b14 <wcrtomb@plt+0xdef4>
  412b3c:	ldrb	w0, [x20, x21]
  412b40:	cmp	w0, #0x2f
  412b44:	b.ne	412b14 <wcrtomb@plt+0xdef4>  // b.any
  412b48:	add	x21, x21, #0x1
  412b4c:	mov	x0, x20
  412b50:	add	x21, x20, x21
  412b54:	bl	441558 <argp_parse@@Base+0x1778>
  412b58:	cmp	x0, x21
  412b5c:	b.ne	412b14 <wcrtomb@plt+0xdef4>  // b.any
  412b60:	mov	w20, #0x1                   	// #1
  412b64:	b	412b84 <wcrtomb@plt+0xdf64>
  412b68:	ldr	q0, [sp, #208]
  412b6c:	stur	q0, [x19, #8]
  412b70:	ldr	x19, [x19]
  412b74:	cbz	x19, 412bb0 <wcrtomb@plt+0xdf90>
  412b78:	ldrb	w0, [x19, #88]
  412b7c:	cbnz	w0, 412bb0 <wcrtomb@plt+0xdf90>
  412b80:	ldr	x22, [x19, #160]
  412b84:	strb	w20, [x19, #88]
  412b88:	mov	x0, x22
  412b8c:	add	x1, sp, #0xd0
  412b90:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  412b94:	cbz	w0, 412b68 <wcrtomb@plt+0xdf48>
  412b98:	ldr	x0, [x19, #160]
  412b9c:	bl	434400 <wcrtomb@plt+0x2f7e0>
  412ba0:	b	412b70 <wcrtomb@plt+0xdf50>
  412ba4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412ba8:	ldr	w0, [x0, #432]
  412bac:	tbnz	w0, #20, 412bf0 <wcrtomb@plt+0xdfd0>
  412bb0:	mov	w0, #0x0                   	// #0
  412bb4:	ldp	x19, x20, [sp, #16]
  412bb8:	ldp	x21, x22, [sp, #32]
  412bbc:	ldp	x23, x24, [sp, #48]
  412bc0:	ldp	x25, x26, [sp, #64]
  412bc4:	ldp	x29, x30, [sp], #336
  412bc8:	ret
  412bcc:	ldr	w1, [x21, #104]
  412bd0:	ldr	x0, [x21, #112]
  412bd4:	str	w1, [x19, #44]
  412bd8:	str	x0, [x19, #48]
  412bdc:	ldp	x2, x3, [x21, #216]
  412be0:	stp	x2, x3, [x19, #56]
  412be4:	ldp	x0, x1, [x21, #232]
  412be8:	stp	x0, x1, [x19, #72]
  412bec:	b	412aa8 <wcrtomb@plt+0xde88>
  412bf0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412bf4:	ldr	x0, [x0, #1136]
  412bf8:	cbz	x0, 412c00 <wcrtomb@plt+0xdfe0>
  412bfc:	blr	x0
  412c00:	mov	w2, #0x5                   	// #5
  412c04:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  412c08:	mov	x0, #0x0                   	// #0
  412c0c:	add	x1, x1, #0xbb0
  412c10:	bl	4049c0 <dcgettext@plt>
  412c14:	mov	x2, x0
  412c18:	mov	x3, x20
  412c1c:	mov	w0, #0x0                   	// #0
  412c20:	mov	w1, #0x0                   	// #0
  412c24:	bl	404050 <error@plt>
  412c28:	mov	w0, #0x0                   	// #0
  412c2c:	b	412974 <wcrtomb@plt+0xdd54>
  412c30:	mov	x0, x20
  412c34:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  412c38:	mov	w0, #0xffffffff            	// #-1
  412c3c:	b	412974 <wcrtomb@plt+0xdd54>
  412c40:	mov	x0, x20
  412c44:	bl	434400 <wcrtomb@plt+0x2f7e0>
  412c48:	mov	w0, w19
  412c4c:	bl	4045c0 <close@plt>
  412c50:	mov	w0, #0xffffffff            	// #-1
  412c54:	b	412974 <wcrtomb@plt+0xdd54>
  412c58:	stp	x29, x30, [sp, #-352]!
  412c5c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  412c60:	mov	x29, sp
  412c64:	ldrb	w1, [x1, #1080]
  412c68:	str	x25, [sp, #64]
  412c6c:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  412c70:	add	x25, x25, #0xe0
  412c74:	stp	x21, x22, [sp, #32]
  412c78:	stp	x23, x24, [sp, #48]
  412c7c:	mov	x23, x0
  412c80:	strb	wzr, [sp, #95]
  412c84:	ldr	x22, [x25, #24]
  412c88:	cbz	w1, 412fa8 <wcrtomb@plt+0xe388>
  412c8c:	adrp	x21, 493000 <_obstack_memory_used@@Base+0x41bf0>
  412c90:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  412c94:	add	x21, x21, #0x898
  412c98:	add	x24, x24, #0x370
  412c9c:	stp	x19, x20, [sp, #16]
  412ca0:	bl	404ad0 <__errno_location@plt>
  412ca4:	mov	x20, x0
  412ca8:	ldr	w2, [x21]
  412cac:	mov	x3, x23
  412cb0:	mov	x1, x22
  412cb4:	mov	w4, #0x0                   	// #0
  412cb8:	mov	w0, w2
  412cbc:	bl	4040e0 <linkat@plt>
  412cc0:	ldr	w19, [x20]
  412cc4:	cbz	w0, 412de8 <wcrtomb@plt+0xe1c8>
  412cc8:	cmp	w19, #0x11
  412ccc:	b.ne	412ce0 <wcrtomb@plt+0xe0c0>  // b.any
  412cd0:	mov	x1, x23
  412cd4:	mov	x0, x22
  412cd8:	bl	404710 <strcmp@plt>
  412cdc:	cbz	w0, 412e90 <wcrtomb@plt+0xe270>
  412ce0:	ldr	w1, [x21]
  412ce4:	add	x3, sp, #0x60
  412ce8:	mov	x2, x22
  412cec:	mov	w4, #0x100                 	// #256
  412cf0:	mov	w0, #0x0                   	// #0
  412cf4:	bl	404c00 <__fxstatat@plt>
  412cf8:	cbnz	w0, 412d28 <wcrtomb@plt+0xe108>
  412cfc:	ldr	w1, [x21]
  412d00:	add	x3, sp, #0xe0
  412d04:	mov	x2, x23
  412d08:	mov	w4, #0x100                 	// #256
  412d0c:	bl	404c00 <__fxstatat@plt>
  412d10:	cbnz	w0, 412d28 <wcrtomb@plt+0xe108>
  412d14:	ldr	x1, [sp, #96]
  412d18:	ldr	x0, [sp, #224]
  412d1c:	cmp	x1, x0
  412d20:	b.eq	412f08 <wcrtomb@plt+0xe2e8>  // b.none
  412d24:	nop
  412d28:	ldrb	w0, [sp, #95]
  412d2c:	str	w19, [x20]
  412d30:	cbnz	w0, 412d48 <wcrtomb@plt+0xe128>
  412d34:	cmp	w19, #0x2
  412d38:	b.eq	412db0 <wcrtomb@plt+0xe190>  // b.none
  412d3c:	cmp	w19, #0x11
  412d40:	b.eq	412d84 <wcrtomb@plt+0xe164>  // b.none
  412d44:	str	w19, [x20]
  412d48:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412d4c:	ldrb	w0, [x0, #161]
  412d50:	cbz	w0, 412d5c <wcrtomb@plt+0xe13c>
  412d54:	cmp	w19, #0x11
  412d58:	b.eq	412e90 <wcrtomb@plt+0xe270>  // b.none
  412d5c:	mov	x0, x22
  412d60:	mov	x1, x23
  412d64:	bl	4338d0 <wcrtomb@plt+0x2ecb0>
  412d68:	ldp	x19, x20, [sp, #16]
  412d6c:	mov	w0, #0x1                   	// #1
  412d70:	ldp	x21, x22, [sp, #32]
  412d74:	ldp	x23, x24, [sp, #48]
  412d78:	ldr	x25, [sp, #64]
  412d7c:	ldp	x29, x30, [sp], #352
  412d80:	ret
  412d84:	ldr	w0, [x24]
  412d88:	cmp	w0, #0x5
  412d8c:	b.eq	412f48 <wcrtomb@plt+0xe328>  // b.none
  412d90:	b.hi	412ed8 <wcrtomb@plt+0xe2b8>  // b.pmore
  412d94:	cmp	w0, #0x2
  412d98:	b.hi	412eac <wcrtomb@plt+0xe28c>  // b.pmore
  412d9c:	mov	x0, x23
  412da0:	mov	w1, #0x0                   	// #0
  412da4:	bl	420788 <wcrtomb@plt+0x1bb68>
  412da8:	cmp	w0, #0x0
  412dac:	b.gt	412ca8 <wcrtomb@plt+0xe088>
  412db0:	add	x1, sp, #0x5f
  412db4:	mov	x0, x23
  412db8:	bl	411a60 <wcrtomb@plt+0xce40>
  412dbc:	cbnz	w0, 412d44 <wcrtomb@plt+0xe124>
  412dc0:	ldrb	w0, [sp, #95]
  412dc4:	cbz	w0, 412d44 <wcrtomb@plt+0xe124>
  412dc8:	ldr	w2, [x21]
  412dcc:	mov	x3, x23
  412dd0:	mov	x1, x22
  412dd4:	mov	w4, #0x0                   	// #0
  412dd8:	mov	w0, w2
  412ddc:	bl	4040e0 <linkat@plt>
  412de0:	ldr	w19, [x20]
  412de4:	cbnz	w0, 412cc8 <wcrtomb@plt+0xe0a8>
  412de8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412dec:	ldr	x19, [x1, #2144]
  412df0:	cbz	x19, 412e90 <wcrtomb@plt+0xe270>
  412df4:	ldr	w1, [x21]
  412df8:	mov	x2, x22
  412dfc:	add	x3, sp, #0x60
  412e00:	mov	w4, #0x100                 	// #256
  412e04:	bl	404c00 <__fxstatat@plt>
  412e08:	cbnz	w0, 412e90 <wcrtomb@plt+0xe270>
  412e0c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412e10:	ldp	x2, x3, [sp, #96]
  412e14:	ldr	w1, [x0, #128]
  412e18:	b	412e24 <wcrtomb@plt+0xe204>
  412e1c:	ldr	x19, [x19]
  412e20:	cbz	x19, 412e90 <wcrtomb@plt+0xe270>
  412e24:	ldr	w0, [x19, #88]
  412e28:	cmp	w0, w1
  412e2c:	b.ne	412e1c <wcrtomb@plt+0xe1fc>  // b.any
  412e30:	ldr	x0, [x19, #8]
  412e34:	cmp	x0, x2
  412e38:	b.ne	412e1c <wcrtomb@plt+0xe1fc>  // b.any
  412e3c:	ldr	x0, [x19, #16]
  412e40:	cmp	x0, x3
  412e44:	b.ne	412e1c <wcrtomb@plt+0xe1fc>  // b.any
  412e48:	ldr	x0, [x19, #24]
  412e4c:	cmn	x0, #0x1
  412e50:	b.ne	412e1c <wcrtomb@plt+0xe1fc>  // b.any
  412e54:	ldr	x0, [x19, #32]
  412e58:	cmn	w0, #0x1
  412e5c:	b.ne	412e1c <wcrtomb@plt+0xe1fc>  // b.any
  412e60:	mov	x0, x23
  412e64:	bl	403ff0 <strlen@plt>
  412e68:	add	x0, x0, #0x9
  412e6c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  412e70:	mov	x20, x0
  412e74:	mov	x1, x23
  412e78:	add	x0, x0, #0x8
  412e7c:	bl	404910 <strcpy@plt>
  412e80:	ldr	x0, [x19, #96]
  412e84:	str	x0, [x20]
  412e88:	str	x20, [x19, #96]
  412e8c:	nop
  412e90:	ldp	x19, x20, [sp, #16]
  412e94:	mov	w0, #0x0                   	// #0
  412e98:	ldp	x21, x22, [sp, #32]
  412e9c:	ldp	x23, x24, [sp, #48]
  412ea0:	ldr	x25, [sp, #64]
  412ea4:	ldp	x29, x30, [sp], #352
  412ea8:	ret
  412eac:	cmp	w0, #0x4
  412eb0:	b.ne	412db0 <wcrtomb@plt+0xe190>  // b.any
  412eb4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412eb8:	ldrb	w0, [x0, #161]
  412ebc:	cbnz	w0, 412e90 <wcrtomb@plt+0xe270>
  412ec0:	mov	x0, x22
  412ec4:	mov	x1, x23
  412ec8:	bl	4338d0 <wcrtomb@plt+0x2ecb0>
  412ecc:	mov	w0, #0x1                   	// #1
  412ed0:	ldp	x19, x20, [sp, #16]
  412ed4:	b	412d70 <wcrtomb@plt+0xe150>
  412ed8:	cmp	w0, #0x6
  412edc:	b.ne	412db0 <wcrtomb@plt+0xe190>  // b.any
  412ee0:	add	x1, sp, #0xe0
  412ee4:	mov	x0, x23
  412ee8:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  412eec:	cbz	w0, 412f1c <wcrtomb@plt+0xe2fc>
  412ef0:	ldr	w0, [x20]
  412ef4:	cmp	w0, #0x2
  412ef8:	b.eq	412d9c <wcrtomb@plt+0xe17c>  // b.none
  412efc:	mov	x0, x23
  412f00:	bl	434488 <wcrtomb@plt+0x2f868>
  412f04:	b	412db0 <wcrtomb@plt+0xe190>
  412f08:	ldr	x1, [sp, #104]
  412f0c:	ldr	x0, [sp, #232]
  412f10:	cmp	x1, x0
  412f14:	b.ne	412d28 <wcrtomb@plt+0xe108>  // b.any
  412f18:	b	412e90 <wcrtomb@plt+0xe270>
  412f1c:	ldr	w0, [sp, #240]
  412f20:	and	w0, w0, #0xf000
  412f24:	cmp	w0, #0x4, lsl #12
  412f28:	b.eq	412d9c <wcrtomb@plt+0xe17c>  // b.none
  412f2c:	add	x2, sp, #0x200
  412f30:	ldp	x0, x1, [x25, #232]
  412f34:	ldp	x2, x3, [x2, #-200]
  412f38:	bl	42f508 <wcrtomb@plt+0x2a8e8>
  412f3c:	cmp	w0, #0x0
  412f40:	b.gt	412d9c <wcrtomb@plt+0xe17c>
  412f44:	b	412db0 <wcrtomb@plt+0xe190>
  412f48:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  412f4c:	ldr	w0, [x0, #432]
  412f50:	tbz	w0, #20, 412e90 <wcrtomb@plt+0xe270>
  412f54:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  412f58:	ldr	x0, [x0, #1136]
  412f5c:	cbz	x0, 412f64 <wcrtomb@plt+0xe344>
  412f60:	blr	x0
  412f64:	mov	w2, #0x5                   	// #5
  412f68:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  412f6c:	mov	x0, #0x0                   	// #0
  412f70:	add	x1, x1, #0xbb0
  412f74:	bl	4049c0 <dcgettext@plt>
  412f78:	mov	x2, x0
  412f7c:	mov	x3, x23
  412f80:	mov	w1, #0x0                   	// #0
  412f84:	mov	w0, #0x0                   	// #0
  412f88:	bl	404050 <error@plt>
  412f8c:	mov	w0, #0x0                   	// #0
  412f90:	ldp	x19, x20, [sp, #16]
  412f94:	ldp	x21, x22, [sp, #32]
  412f98:	ldp	x23, x24, [sp, #48]
  412f9c:	ldr	x25, [sp, #64]
  412fa0:	ldp	x29, x30, [sp], #352
  412fa4:	ret
  412fa8:	mov	x0, x22
  412fac:	bl	427550 <wcrtomb@plt+0x22930>
  412fb0:	tst	w0, #0xff
  412fb4:	b.eq	412c8c <wcrtomb@plt+0xe06c>  // b.none
  412fb8:	mov	x0, x23
  412fbc:	add	x2, sp, #0x5f
  412fc0:	mov	w1, #0x0                   	// #0
  412fc4:	bl	4128e8 <wcrtomb@plt+0xdcc8>
  412fc8:	b	412e98 <wcrtomb@plt+0xe278>
  412fcc:	nop
  412fd0:	stp	x29, x30, [sp, #-64]!
  412fd4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  412fd8:	mov	x29, sp
  412fdc:	ldrb	w1, [x1, #1080]
  412fe0:	stp	x21, x22, [sp, #32]
  412fe4:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  412fe8:	add	x21, x21, #0xe0
  412fec:	stp	x19, x20, [sp, #16]
  412ff0:	mov	x20, x0
  412ff4:	strb	wzr, [sp, #63]
  412ff8:	ldr	x0, [x21, #24]
  412ffc:	cbnz	w1, 41301c <wcrtomb@plt+0xe3fc>
  413000:	ldrb	w1, [x0]
  413004:	cmp	w1, #0x2f
  413008:	b.eq	41309c <wcrtomb@plt+0xe47c>  // b.none
  41300c:	bl	427550 <wcrtomb@plt+0x22930>
  413010:	tst	w0, #0xff
  413014:	b.ne	41309c <wcrtomb@plt+0xe47c>  // b.any
  413018:	ldr	x0, [x21, #24]
  41301c:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  413020:	add	x22, x22, #0x898
  413024:	mov	x2, x20
  413028:	ldr	w1, [x22]
  41302c:	bl	404a40 <symlinkat@plt>
  413030:	mov	w19, w0
  413034:	add	x2, sp, #0x3f
  413038:	mov	x0, x20
  41303c:	mov	w1, #0x0                   	// #0
  413040:	cbz	w19, 413078 <wcrtomb@plt+0xe458>
  413044:	bl	411c10 <wcrtomb@plt+0xcff0>
  413048:	cbz	w0, 4130dc <wcrtomb@plt+0xe4bc>
  41304c:	cmp	w0, #0x2
  413050:	b.eq	4130c4 <wcrtomb@plt+0xe4a4>  // b.none
  413054:	ldr	w1, [x22]
  413058:	mov	x2, x20
  41305c:	ldr	x0, [x21, #24]
  413060:	bl	404a40 <symlinkat@plt>
  413064:	mov	w19, w0
  413068:	add	x2, sp, #0x3f
  41306c:	mov	x0, x20
  413070:	mov	w1, #0x0                   	// #0
  413074:	cbnz	w19, 413044 <wcrtomb@plt+0xe424>
  413078:	mov	x1, x21
  41307c:	mov	w7, #0x100                 	// #256
  413080:	mov	w6, #0x0                   	// #0
  413084:	mov	w5, #0x32                  	// #50
  413088:	mov	w4, #0x0                   	// #0
  41308c:	mov	w3, #0x0                   	// #0
  413090:	mov	w2, #0xffffffff            	// #-1
  413094:	bl	410fb0 <wcrtomb@plt+0xc390>
  413098:	b	4130b0 <wcrtomb@plt+0xe490>
  41309c:	mov	x0, x20
  4130a0:	add	x2, sp, #0x3f
  4130a4:	mov	w1, #0x1                   	// #1
  4130a8:	bl	4128e8 <wcrtomb@plt+0xdcc8>
  4130ac:	mov	w19, w0
  4130b0:	mov	w0, w19
  4130b4:	ldp	x19, x20, [sp, #16]
  4130b8:	ldp	x21, x22, [sp, #32]
  4130bc:	ldp	x29, x30, [sp], #64
  4130c0:	ret
  4130c4:	mov	w19, #0x0                   	// #0
  4130c8:	mov	w0, w19
  4130cc:	ldp	x19, x20, [sp, #16]
  4130d0:	ldp	x21, x22, [sp, #32]
  4130d4:	ldp	x29, x30, [sp], #64
  4130d8:	ret
  4130dc:	ldr	x0, [x21, #24]
  4130e0:	mov	x1, x20
  4130e4:	mov	w19, #0xffffffff            	// #-1
  4130e8:	bl	434350 <wcrtomb@plt+0x2f730>
  4130ec:	mov	w0, w19
  4130f0:	ldp	x19, x20, [sp, #16]
  4130f4:	ldp	x21, x22, [sp, #32]
  4130f8:	ldp	x29, x30, [sp], #64
  4130fc:	ret
  413100:	stp	x29, x30, [sp, #-48]!
  413104:	mov	x29, sp
  413108:	stp	x19, x20, [sp, #16]
  41310c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  413110:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  413114:	str	x21, [sp, #32]
  413118:	bl	4040d0 <geteuid@plt>
  41311c:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  413120:	cmp	w0, #0x0
  413124:	ldr	w3, [x19, #740]
  413128:	cset	w1, eq  // eq = none
  41312c:	ldr	w2, [x4, #1108]
  413130:	add	x21, x20, #0x850
  413134:	add	w3, w3, w1
  413138:	mov	w0, #0x0                   	// #0
  41313c:	add	w2, w2, w1
  413140:	str	w3, [x19, #740]
  413144:	str	w2, [x4, #1108]
  413148:	strb	w1, [x21, #28]
  41314c:	bl	404a80 <umask@plt>
  413150:	str	w0, [x21, #24]
  413154:	ldr	w1, [x19, #740]
  413158:	cmp	w1, #0x0
  41315c:	b.le	413174 <wcrtomb@plt+0xe554>
  413160:	str	wzr, [x20, #2128]
  413164:	ldp	x19, x20, [sp, #16]
  413168:	ldr	x21, [sp, #32]
  41316c:	ldp	x29, x30, [sp], #48
  413170:	ret
  413174:	mov	w19, w0
  413178:	bl	404a80 <umask@plt>
  41317c:	str	w19, [x20, #2128]
  413180:	ldp	x19, x20, [sp, #16]
  413184:	ldr	x21, [sp, #32]
  413188:	ldp	x29, x30, [sp], #48
  41318c:	ret
  413190:	stp	x29, x30, [sp, #-80]!
  413194:	mov	x29, sp
  413198:	str	x25, [sp, #64]
  41319c:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4131a0:	add	x25, x25, #0x850
  4131a4:	stp	x19, x20, [sp, #16]
  4131a8:	ldr	x19, [x25, #8]
  4131ac:	cbz	x19, 41323c <wcrtomb@plt+0xe61c>
  4131b0:	stp	x23, x24, [sp, #48]
  4131b4:	mov	x24, x0
  4131b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4131bc:	stp	x21, x22, [sp, #32]
  4131c0:	mov	x21, #0x0                   	// #0
  4131c4:	ldr	w22, [x0, #128]
  4131c8:	b	4131d8 <wcrtomb@plt+0xe5b8>
  4131cc:	mov	x21, x19
  4131d0:	mov	x19, x20
  4131d4:	cbz	x20, 41324c <wcrtomb@plt+0xe62c>
  4131d8:	ldr	w2, [x19, #92]
  4131dc:	ldr	x20, [x19]
  4131e0:	cmp	w2, w22
  4131e4:	b.ne	4131cc <wcrtomb@plt+0xe5ac>  // b.any
  4131e8:	ldr	x23, [x19, #160]
  4131ec:	mov	x1, x24
  4131f0:	mov	x0, x23
  4131f4:	bl	404710 <strcmp@plt>
  4131f8:	cbnz	w0, 4131cc <wcrtomb@plt+0xe5ac>
  4131fc:	mov	x0, x23
  413200:	bl	4047b0 <free@plt>
  413204:	ldp	x1, x0, [x19, #136]
  413208:	bl	416a90 <wcrtomb@plt+0x11e70>
  41320c:	ldr	x0, [x19, #96]
  413210:	bl	4047b0 <free@plt>
  413214:	ldr	x0, [x19, #104]
  413218:	bl	4047b0 <free@plt>
  41321c:	ldr	x0, [x19, #120]
  413220:	bl	4047b0 <free@plt>
  413224:	mov	x0, x19
  413228:	bl	4047b0 <free@plt>
  41322c:	cbz	x21, 413264 <wcrtomb@plt+0xe644>
  413230:	ldp	x23, x24, [sp, #48]
  413234:	str	x20, [x21]
  413238:	ldp	x21, x22, [sp, #32]
  41323c:	ldp	x19, x20, [sp, #16]
  413240:	ldr	x25, [sp, #64]
  413244:	ldp	x29, x30, [sp], #80
  413248:	ret
  41324c:	ldp	x19, x20, [sp, #16]
  413250:	ldp	x21, x22, [sp, #32]
  413254:	ldp	x23, x24, [sp, #48]
  413258:	ldr	x25, [sp, #64]
  41325c:	ldp	x29, x30, [sp], #80
  413260:	ret
  413264:	str	x20, [x25, #8]
  413268:	ldp	x21, x22, [sp, #32]
  41326c:	ldp	x23, x24, [sp, #48]
  413270:	b	41323c <wcrtomb@plt+0xe61c>
  413274:	nop
  413278:	stp	x29, x30, [sp, #-80]!
  41327c:	adrp	x1, 411000 <wcrtomb@plt+0xc3e0>
  413280:	add	x1, x1, #0x828
  413284:	mov	x29, sp
  413288:	stp	x19, x20, [sp, #16]
  41328c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  413290:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  413294:	ldr	x0, [x20, #104]
  413298:	str	x1, [x2, #72]
  41329c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  4132a0:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4132a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4132a8:	ldrb	w0, [x0, #1080]
  4132ac:	cbz	w0, 4133e4 <wcrtomb@plt+0xe7c4>
  4132b0:	add	x19, x19, #0xe0
  4132b4:	ldr	x1, [x19, #8]
  4132b8:	ldrb	w0, [x1]
  4132bc:	cbz	w0, 4133d8 <wcrtomb@plt+0xe7b8>
  4132c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4132c4:	ldrb	w0, [x0, #720]
  4132c8:	cbnz	w0, 4134bc <wcrtomb@plt+0xe89c>
  4132cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4132d0:	stp	x21, x22, [sp, #32]
  4132d4:	ldr	w0, [x0, #772]
  4132d8:	stp	x23, x24, [sp, #48]
  4132dc:	cbnz	w0, 4134e0 <wcrtomb@plt+0xe8c0>
  4132e0:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  4132e4:	ldrb	w0, [x24, #1096]
  4132e8:	cbz	w0, 4134fc <wcrtomb@plt+0xe8dc>
  4132ec:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  4132f0:	ldrb	w0, [x21, #885]
  4132f4:	cbz	w0, 41330c <wcrtomb@plt+0xe6ec>
  4132f8:	ldr	x0, [x19, #8]
  4132fc:	mov	w1, #0x0                   	// #0
  413300:	bl	41f848 <wcrtomb@plt+0x1ac28>
  413304:	tst	w0, #0xff
  413308:	b.eq	413370 <wcrtomb@plt+0xe750>  // b.none
  41330c:	mov	x0, x19
  413310:	bl	429940 <wcrtomb@plt+0x24d20>
  413314:	tst	w0, #0xff
  413318:	b.ne	413454 <wcrtomb@plt+0xe834>  // b.any
  41331c:	ldr	x1, [x20, #104]
  413320:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  413324:	ldr	x22, [x19, #8]
  413328:	ldrb	w0, [x0, #753]
  41332c:	ldrb	w20, [x1, #156]
  413330:	str	x25, [sp, #64]
  413334:	mov	w23, w20
  413338:	cbz	w0, 4136c8 <wcrtomb@plt+0xeaa8>
  41333c:	cmp	w20, #0x35
  413340:	b.eq	413544 <wcrtomb@plt+0xe924>  // b.none
  413344:	b.hi	41351c <wcrtomb@plt+0xe8fc>  // b.pmore
  413348:	cmp	w20, #0x32
  41334c:	b.eq	413550 <wcrtomb@plt+0xe930>  // b.none
  413350:	b.ls	413558 <wcrtomb@plt+0xe938>  // b.plast
  413354:	cmp	w20, #0x33
  413358:	b.eq	413710 <wcrtomb@plt+0xeaf0>  // b.none
  41335c:	ldr	w0, [x19, #104]
  413360:	ldr	x25, [sp, #64]
  413364:	orr	w0, w0, #0x6000
  413368:	str	w0, [x19, #104]
  41336c:	b	4133d0 <wcrtomb@plt+0xe7b0>
  413370:	bl	404ad0 <__errno_location@plt>
  413374:	ldr	w20, [x0]
  413378:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41337c:	ldr	x1, [x1, #1136]
  413380:	cbz	x1, 413388 <wcrtomb@plt+0xe768>
  413384:	blr	x1
  413388:	mov	w2, #0x5                   	// #5
  41338c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  413390:	mov	x0, #0x0                   	// #0
  413394:	add	x1, x1, #0xc60
  413398:	bl	4049c0 <dcgettext@plt>
  41339c:	mov	x2, x0
  4133a0:	ldr	x0, [x19, #8]
  4133a4:	mov	x19, x2
  4133a8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4133ac:	mov	x3, x0
  4133b0:	mov	w1, w20
  4133b4:	mov	w0, #0x0                   	// #0
  4133b8:	mov	x2, x19
  4133bc:	bl	404050 <error@plt>
  4133c0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4133c4:	mov	w1, #0x2                   	// #2
  4133c8:	str	w1, [x0, #3568]
  4133cc:	nop
  4133d0:	ldp	x21, x22, [sp, #32]
  4133d4:	ldp	x23, x24, [sp, #48]
  4133d8:	ldp	x19, x20, [sp, #16]
  4133dc:	ldp	x29, x30, [sp], #80
  4133e0:	b	41e038 <wcrtomb@plt+0x19418>
  4133e4:	ldr	x0, [x19, #224]
  4133e8:	bl	427550 <wcrtomb@plt+0x22930>
  4133ec:	tst	w0, #0xff
  4133f0:	b.eq	4132b0 <wcrtomb@plt+0xe690>  // b.none
  4133f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4133f8:	ldr	x0, [x0, #1136]
  4133fc:	cbz	x0, 413404 <wcrtomb@plt+0xe7e4>
  413400:	blr	x0
  413404:	mov	w2, #0x5                   	// #5
  413408:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41340c:	mov	x0, #0x0                   	// #0
  413410:	add	x1, x1, #0xc38
  413414:	bl	4049c0 <dcgettext@plt>
  413418:	mov	x2, x0
  41341c:	ldr	x0, [x19, #224]
  413420:	mov	x19, x2
  413424:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  413428:	mov	x3, x0
  41342c:	mov	x2, x19
  413430:	mov	w1, #0x0                   	// #0
  413434:	mov	w0, #0x0                   	// #0
  413438:	bl	404050 <error@plt>
  41343c:	ldp	x19, x20, [sp, #16]
  413440:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  413444:	ldp	x29, x30, [sp], #80
  413448:	mov	w1, #0x2                   	// #2
  41344c:	str	w1, [x0, #3568]
  413450:	b	41e038 <wcrtomb@plt+0x19418>
  413454:	ldr	x22, [x19, #8]
  413458:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  41345c:	add	x20, x20, #0x400
  413460:	mov	w23, #0x53                  	// #83
  413464:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  413468:	ldr	w0, [x0, #880]
  41346c:	cmp	w0, #0x3
  413470:	b.eq	413688 <wcrtomb@plt+0xea68>  // b.none
  413474:	cmp	w0, #0x6
  413478:	b.ne	413490 <wcrtomb@plt+0xe870>  // b.any
  41347c:	mov	x0, x22
  413480:	mov	x1, #0x0                   	// #0
  413484:	bl	410f08 <wcrtomb@plt+0xc2e8>
  413488:	tst	w0, #0xff
  41348c:	b.ne	413838 <wcrtomb@plt+0xec18>  // b.any
  413490:	ldr	x0, [x19, #8]
  413494:	mov	w1, w23
  413498:	blr	x20
  41349c:	cbz	w0, 4134a8 <wcrtomb@plt+0xe888>
  4134a0:	ldrb	w0, [x21, #885]
  4134a4:	cbnz	w0, 41388c <wcrtomb@plt+0xec6c>
  4134a8:	ldp	x19, x20, [sp, #16]
  4134ac:	ldp	x21, x22, [sp, #32]
  4134b0:	ldp	x23, x24, [sp, #48]
  4134b4:	ldp	x29, x30, [sp], #80
  4134b8:	ret
  4134bc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4134c0:	add	x0, x0, #0xc58
  4134c4:	bl	42c090 <wcrtomb@plt+0x27470>
  4134c8:	cbz	w0, 4133d8 <wcrtomb@plt+0xe7b8>
  4134cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4134d0:	stp	x21, x22, [sp, #32]
  4134d4:	ldr	w0, [x0, #772]
  4134d8:	stp	x23, x24, [sp, #48]
  4134dc:	cbz	w0, 4132e0 <wcrtomb@plt+0xe6c0>
  4134e0:	ldr	x1, [x20, #104]
  4134e4:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  4134e8:	mov	x0, x19
  4134ec:	mov	x2, #0xffffffffffffffff    	// #-1
  4134f0:	bl	41d6f8 <wcrtomb@plt+0x18ad8>
  4134f4:	ldrb	w0, [x24, #1096]
  4134f8:	cbnz	w0, 4132ec <wcrtomb@plt+0xe6cc>
  4134fc:	ldr	x0, [x19, #8]
  413500:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  413504:	mov	w1, #0x0                   	// #0
  413508:	ldr	w21, [x2, #128]
  41350c:	bl	4113c8 <wcrtomb@plt+0xc7a8>
  413510:	mov	w0, w21
  413514:	bl	420060 <wcrtomb@plt+0x1b440>
  413518:	b	4132ec <wcrtomb@plt+0xe6cc>
  41351c:	cmp	w20, #0x4c
  413520:	b.hi	4135d4 <wcrtomb@plt+0xe9b4>  // b.pmore
  413524:	cmp	w20, #0x4a
  413528:	b.hi	4137a8 <wcrtomb@plt+0xeb88>  // b.pmore
  41352c:	cmp	w20, #0x36
  413530:	b.eq	413550 <wcrtomb@plt+0xe930>  // b.none
  413534:	cmp	w20, #0x37
  413538:	b.eq	4138d4 <wcrtomb@plt+0xecb4>  // b.none
  41353c:	cmp	w20, #0x44
  413540:	b.ne	413568 <wcrtomb@plt+0xe948>  // b.any
  413544:	ldrb	w0, [x19, #376]
  413548:	cbnz	w0, 4136b8 <wcrtomb@plt+0xea98>
  41354c:	nop
  413550:	ldr	x25, [sp, #64]
  413554:	b	4133d0 <wcrtomb@plt+0xe7b0>
  413558:	cmp	w20, #0x31
  41355c:	b.eq	413550 <wcrtomb@plt+0xe930>  // b.none
  413560:	cmp	w20, #0x32
  413564:	b.ne	413648 <wcrtomb@plt+0xea28>  // b.any
  413568:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41356c:	mov	w25, #0x0                   	// #0
  413570:	ldr	w0, [x0, #432]
  413574:	tbz	w0, #16, 413550 <wcrtomb@plt+0xe930>
  413578:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41357c:	ldr	x0, [x0, #1136]
  413580:	cbz	x0, 413588 <wcrtomb@plt+0xe968>
  413584:	blr	x0
  413588:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41358c:	add	x1, x1, #0xce8
  413590:	mov	w2, #0x5                   	// #5
  413594:	mov	x0, #0x0                   	// #0
  413598:	bl	4049c0 <dcgettext@plt>
  41359c:	mov	x24, x0
  4135a0:	mov	x0, x22
  4135a4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4135a8:	mov	w4, w20
  4135ac:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  4135b0:	add	x20, x20, #0x400
  4135b4:	mov	x3, x0
  4135b8:	mov	x2, x24
  4135bc:	mov	w1, #0x0                   	// #0
  4135c0:	mov	w0, #0x0                   	// #0
  4135c4:	bl	404050 <error@plt>
  4135c8:	cbz	w25, 413550 <wcrtomb@plt+0xe930>
  4135cc:	ldr	x25, [sp, #64]
  4135d0:	b	413464 <wcrtomb@plt+0xe844>
  4135d4:	cmp	w20, #0x56
  4135d8:	b.eq	413550 <wcrtomb@plt+0xe930>  // b.none
  4135dc:	b.hi	413568 <wcrtomb@plt+0xe948>  // b.pmore
  4135e0:	cmp	w20, #0x4d
  4135e4:	mov	w25, #0x0                   	// #0
  4135e8:	b.ne	413670 <wcrtomb@plt+0xea50>  // b.any
  4135ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4135f0:	ldr	x0, [x0, #1136]
  4135f4:	cbz	x0, 4135fc <wcrtomb@plt+0xe9dc>
  4135f8:	blr	x0
  4135fc:	mov	w2, #0x5                   	// #5
  413600:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  413604:	mov	x0, #0x0                   	// #0
  413608:	add	x1, x1, #0xc88
  41360c:	bl	4049c0 <dcgettext@plt>
  413610:	mov	x20, x0
  413614:	ldr	x0, [x19, #8]
  413618:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41361c:	mov	x3, x0
  413620:	mov	x2, x20
  413624:	mov	w1, #0x0                   	// #0
  413628:	mov	w0, #0x0                   	// #0
  41362c:	bl	404050 <error@plt>
  413630:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  413634:	mov	w1, #0x2                   	// #2
  413638:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  41363c:	add	x20, x20, #0xef0
  413640:	str	w1, [x0, #3568]
  413644:	b	4135c8 <wcrtomb@plt+0xe9a8>
  413648:	cbz	w20, 4138b8 <wcrtomb@plt+0xec98>
  41364c:	cmp	w20, #0x30
  413650:	b.ne	413568 <wcrtomb@plt+0xe948>  // b.any
  413654:	ldrb	w0, [x19, #16]
  413658:	cbnz	w0, 413550 <wcrtomb@plt+0xe930>
  41365c:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  413660:	mov	w23, #0x30                  	// #48
  413664:	add	x20, x20, #0x400
  413668:	ldr	x25, [sp, #64]
  41366c:	b	413464 <wcrtomb@plt+0xe844>
  413670:	cmp	w20, #0x53
  413674:	b.ne	413568 <wcrtomb@plt+0xe948>  // b.any
  413678:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  41367c:	add	x20, x20, #0x400
  413680:	ldr	x25, [sp, #64]
  413684:	b	413464 <wcrtomb@plt+0xe844>
  413688:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41368c:	mov	x0, x22
  413690:	ldrb	w1, [x1, #162]
  413694:	bl	420788 <wcrtomb@plt+0x1bb68>
  413698:	cbnz	w0, 413490 <wcrtomb@plt+0xe870>
  41369c:	bl	404ad0 <__errno_location@plt>
  4136a0:	ldr	w0, [x0]
  4136a4:	tst	w0, #0xfffffffd
  4136a8:	b.eq	413490 <wcrtomb@plt+0xe870>  // b.none
  4136ac:	mov	x0, x22
  4136b0:	bl	434600 <wcrtomb@plt+0x2f9e0>
  4136b4:	b	4133d0 <wcrtomb@plt+0xe7b0>
  4136b8:	mov	w0, #0x1                   	// #1
  4136bc:	strb	w0, [x24, #1096]
  4136c0:	ldr	x25, [sp, #64]
  4136c4:	b	4133d0 <wcrtomb@plt+0xe7b0>
  4136c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4136cc:	ldr	x0, [x0, #744]
  4136d0:	cmp	x0, #0x0
  4136d4:	cset	w25, eq  // eq = none
  4136d8:	cmp	w20, #0x35
  4136dc:	b.eq	41378c <wcrtomb@plt+0xeb6c>  // b.none
  4136e0:	b.hi	413738 <wcrtomb@plt+0xeb18>  // b.pmore
  4136e4:	cmp	w20, #0x32
  4136e8:	b.eq	4138ac <wcrtomb@plt+0xec8c>  // b.none
  4136ec:	b.ls	413724 <wcrtomb@plt+0xeb04>  // b.plast
  4136f0:	cmp	w20, #0x33
  4136f4:	b.eq	4138e4 <wcrtomb@plt+0xecc4>  // b.none
  4136f8:	ldr	w0, [x19, #104]
  4136fc:	adrp	x20, 411000 <wcrtomb@plt+0xc3e0>
  413700:	add	x20, x20, #0xf40
  413704:	orr	w0, w0, #0x6000
  413708:	str	w0, [x19, #104]
  41370c:	b	4135c8 <wcrtomb@plt+0xe9a8>
  413710:	ldr	w0, [x19, #104]
  413714:	ldr	x25, [sp, #64]
  413718:	orr	w0, w0, #0x2000
  41371c:	str	w0, [x19, #104]
  413720:	b	4133d0 <wcrtomb@plt+0xe7b0>
  413724:	cmp	w20, #0x31
  413728:	b.ne	41375c <wcrtomb@plt+0xeb3c>  // b.any
  41372c:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  413730:	add	x20, x20, #0xc58
  413734:	b	4135c8 <wcrtomb@plt+0xe9a8>
  413738:	cmp	w20, #0x4c
  41373c:	b.hi	413818 <wcrtomb@plt+0xebf8>  // b.pmore
  413740:	cmp	w20, #0x4a
  413744:	b.hi	4137ac <wcrtomb@plt+0xeb8c>  // b.pmore
  413748:	cmp	w20, #0x36
  41374c:	b.ne	41377c <wcrtomb@plt+0xeb5c>  // b.any
  413750:	adrp	x20, 411000 <wcrtomb@plt+0xc3e0>
  413754:	add	x20, x20, #0xe50
  413758:	b	4135c8 <wcrtomb@plt+0xe9a8>
  41375c:	cmp	w20, #0x32
  413760:	b.ne	4137f8 <wcrtomb@plt+0xebd8>  // b.any
  413764:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  413768:	ldr	w0, [x0, #432]
  41376c:	tbnz	w0, #16, 413578 <wcrtomb@plt+0xe958>
  413770:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  413774:	add	x20, x20, #0x400
  413778:	b	4135c8 <wcrtomb@plt+0xe9a8>
  41377c:	cmp	w20, #0x37
  413780:	b.eq	413804 <wcrtomb@plt+0xebe4>  // b.none
  413784:	cmp	w20, #0x44
  413788:	b.ne	413764 <wcrtomb@plt+0xeb44>  // b.any
  41378c:	ldrb	w0, [x19, #376]
  413790:	cbz	w0, 41380c <wcrtomb@plt+0xebec>
  413794:	mov	w0, #0x1                   	// #1
  413798:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  41379c:	strb	w0, [x24, #1096]
  4137a0:	add	x20, x20, #0x40
  4137a4:	b	4135c8 <wcrtomb@plt+0xe9a8>
  4137a8:	mov	w25, #0x0                   	// #0
  4137ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4137b0:	ldr	x0, [x0, #1136]
  4137b4:	cbz	x0, 4137bc <wcrtomb@plt+0xeb9c>
  4137b8:	blr	x0
  4137bc:	mov	w2, #0x5                   	// #5
  4137c0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4137c4:	mov	x0, #0x0                   	// #0
  4137c8:	add	x1, x1, #0xcc8
  4137cc:	bl	4049c0 <dcgettext@plt>
  4137d0:	mov	x2, x0
  4137d4:	mov	w1, #0x0                   	// #0
  4137d8:	mov	w0, #0x0                   	// #0
  4137dc:	bl	404050 <error@plt>
  4137e0:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  4137e4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4137e8:	mov	w1, #0x2                   	// #2
  4137ec:	add	x20, x20, #0xd48
  4137f0:	str	w1, [x0, #3568]
  4137f4:	b	4135c8 <wcrtomb@plt+0xe9a8>
  4137f8:	cbz	w20, 413804 <wcrtomb@plt+0xebe4>
  4137fc:	cmp	w20, #0x30
  413800:	b.ne	413764 <wcrtomb@plt+0xeb44>  // b.any
  413804:	ldrb	w0, [x19, #16]
  413808:	cbz	w0, 413678 <wcrtomb@plt+0xea58>
  41380c:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  413810:	add	x20, x20, #0x40
  413814:	b	4135c8 <wcrtomb@plt+0xe9a8>
  413818:	cmp	w20, #0x56
  41381c:	b.eq	4138a0 <wcrtomb@plt+0xec80>  // b.none
  413820:	b.hi	413764 <wcrtomb@plt+0xeb44>  // b.pmore
  413824:	cmp	w20, #0x4d
  413828:	b.eq	4135ec <wcrtomb@plt+0xe9cc>  // b.none
  41382c:	cmp	w20, #0x53
  413830:	b.ne	413764 <wcrtomb@plt+0xeb44>  // b.any
  413834:	b	413678 <wcrtomb@plt+0xea58>
  413838:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41383c:	ldr	w0, [x0, #432]
  413840:	tbz	w0, #11, 4133d0 <wcrtomb@plt+0xe7b0>
  413844:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  413848:	ldr	x0, [x0, #1136]
  41384c:	cbz	x0, 413854 <wcrtomb@plt+0xec34>
  413850:	blr	x0
  413854:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  413858:	add	x1, x1, #0xd20
  41385c:	mov	w2, #0x5                   	// #5
  413860:	mov	x0, #0x0                   	// #0
  413864:	bl	4049c0 <dcgettext@plt>
  413868:	mov	x19, x0
  41386c:	mov	x0, x22
  413870:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  413874:	mov	x2, x19
  413878:	mov	x3, x0
  41387c:	mov	w1, #0x0                   	// #0
  413880:	mov	w0, #0x0                   	// #0
  413884:	bl	404050 <error@plt>
  413888:	b	4133d0 <wcrtomb@plt+0xe7b0>
  41388c:	ldp	x19, x20, [sp, #16]
  413890:	ldp	x21, x22, [sp, #32]
  413894:	ldp	x23, x24, [sp, #48]
  413898:	ldp	x29, x30, [sp], #80
  41389c:	b	41fa88 <wcrtomb@plt+0x1ae68>
  4138a0:	adrp	x20, 410000 <wcrtomb@plt+0xb3e0>
  4138a4:	add	x20, x20, #0xd50
  4138a8:	b	4135c8 <wcrtomb@plt+0xe9a8>
  4138ac:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  4138b0:	add	x20, x20, #0xfd0
  4138b4:	b	4135c8 <wcrtomb@plt+0xe9a8>
  4138b8:	ldrb	w0, [x19, #16]
  4138bc:	cbnz	w0, 413550 <wcrtomb@plt+0xe930>
  4138c0:	adrp	x20, 412000 <wcrtomb@plt+0xd3e0>
  4138c4:	mov	w23, #0x0                   	// #0
  4138c8:	add	x20, x20, #0x400
  4138cc:	ldr	x25, [sp, #64]
  4138d0:	b	413464 <wcrtomb@plt+0xe844>
  4138d4:	ldrb	w0, [x19, #16]
  4138d8:	cbz	w0, 413678 <wcrtomb@plt+0xea58>
  4138dc:	ldr	x25, [sp, #64]
  4138e0:	b	4133d0 <wcrtomb@plt+0xe7b0>
  4138e4:	ldr	w0, [x19, #104]
  4138e8:	adrp	x20, 411000 <wcrtomb@plt+0xc3e0>
  4138ec:	add	x20, x20, #0xf40
  4138f0:	orr	w0, w0, #0x2000
  4138f4:	str	w0, [x19, #104]
  4138f8:	b	4135c8 <wcrtomb@plt+0xe9a8>
  4138fc:	nop
  413900:	stp	x29, x30, [sp, #-80]!
  413904:	mov	x3, x1
  413908:	mov	x29, sp
  41390c:	stp	x21, x22, [sp, #32]
  413910:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  413914:	mov	x21, x1
  413918:	ldr	w2, [x22, #2200]
  41391c:	mov	x1, x0
  413920:	stp	x19, x20, [sp, #16]
  413924:	mov	x20, x0
  413928:	mov	w0, w2
  41392c:	bl	404800 <renameat@plt>
  413930:	cbz	w0, 413a04 <wcrtomb@plt+0xede4>
  413934:	str	x23, [sp, #48]
  413938:	bl	404ad0 <__errno_location@plt>
  41393c:	ldr	w23, [x0]
  413940:	mov	x19, x0
  413944:	cmp	w23, #0x2
  413948:	b.eq	4139cc <wcrtomb@plt+0xedac>  // b.none
  41394c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  413950:	ldr	x0, [x0, #1136]
  413954:	cbz	x0, 41395c <wcrtomb@plt+0xed3c>
  413958:	blr	x0
  41395c:	mov	w2, #0x5                   	// #5
  413960:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  413964:	mov	x0, #0x0                   	// #0
  413968:	add	x1, x1, #0xd40
  41396c:	bl	4049c0 <dcgettext@plt>
  413970:	mov	x19, x0
  413974:	mov	x1, x20
  413978:	mov	w0, #0x0                   	// #0
  41397c:	bl	44ed50 <argp_parse@@Base+0xef70>
  413980:	mov	x20, x0
  413984:	mov	x1, x21
  413988:	mov	w0, #0x1                   	// #1
  41398c:	bl	44ed50 <argp_parse@@Base+0xef70>
  413990:	mov	x4, x0
  413994:	mov	w1, w23
  413998:	mov	x2, x19
  41399c:	mov	w0, #0x0                   	// #0
  4139a0:	mov	x3, x20
  4139a4:	bl	404050 <error@plt>
  4139a8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4139ac:	mov	w2, #0x2                   	// #2
  4139b0:	ldr	x23, [sp, #48]
  4139b4:	mov	w0, #0x0                   	// #0
  4139b8:	str	w2, [x1, #3568]
  4139bc:	ldp	x19, x20, [sp, #16]
  4139c0:	ldp	x21, x22, [sp, #32]
  4139c4:	ldp	x29, x30, [sp], #80
  4139c8:	ret
  4139cc:	add	x1, sp, #0x4f
  4139d0:	mov	x0, x21
  4139d4:	bl	411a60 <wcrtomb@plt+0xce40>
  4139d8:	cbnz	w0, 41394c <wcrtomb@plt+0xed2c>
  4139dc:	ldr	w2, [x22, #2200]
  4139e0:	mov	x1, x20
  4139e4:	mov	x3, x21
  4139e8:	mov	w0, w2
  4139ec:	bl	404800 <renameat@plt>
  4139f0:	mov	w1, w0
  4139f4:	mov	w0, #0x1                   	// #1
  4139f8:	cbz	w1, 413a90 <wcrtomb@plt+0xee70>
  4139fc:	ldr	w23, [x19]
  413a00:	b	41394c <wcrtomb@plt+0xed2c>
  413a04:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  413a08:	ldr	x19, [x0, #2136]
  413a0c:	cbz	x19, 413a98 <wcrtomb@plt+0xee78>
  413a10:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  413a14:	str	x23, [sp, #48]
  413a18:	ldr	w23, [x0, #128]
  413a1c:	b	413a28 <wcrtomb@plt+0xee08>
  413a20:	ldr	x19, [x19]
  413a24:	cbz	x19, 413a78 <wcrtomb@plt+0xee58>
  413a28:	ldr	w0, [x19, #92]
  413a2c:	cmp	w0, w23
  413a30:	b.ne	413a20 <wcrtomb@plt+0xee00>  // b.any
  413a34:	ldr	x22, [x19, #160]
  413a38:	mov	x1, x20
  413a3c:	mov	x0, x22
  413a40:	bl	404710 <strcmp@plt>
  413a44:	cbnz	w0, 413a20 <wcrtomb@plt+0xee00>
  413a48:	mov	x0, x22
  413a4c:	bl	4047b0 <free@plt>
  413a50:	mov	x0, x21
  413a54:	bl	450328 <argp_parse@@Base+0x10548>
  413a58:	str	x0, [x19, #160]
  413a5c:	mov	x0, x21
  413a60:	bl	403ff0 <strlen@plt>
  413a64:	mov	x1, x0
  413a68:	mov	w0, #0x1                   	// #1
  413a6c:	ldr	x23, [sp, #48]
  413a70:	str	x1, [x19, #152]
  413a74:	b	4139bc <wcrtomb@plt+0xed9c>
  413a78:	mov	w0, #0x1                   	// #1
  413a7c:	ldp	x19, x20, [sp, #16]
  413a80:	ldp	x21, x22, [sp, #32]
  413a84:	ldr	x23, [sp, #48]
  413a88:	ldp	x29, x30, [sp], #80
  413a8c:	ret
  413a90:	ldr	x23, [sp, #48]
  413a94:	b	4139bc <wcrtomb@plt+0xed9c>
  413a98:	mov	w0, #0x1                   	// #1
  413a9c:	b	4139bc <wcrtomb@plt+0xed9c>
  413aa0:	ret
  413aa4:	nop
  413aa8:	ret
  413aac:	nop
  413ab0:	stp	x29, x30, [sp, #-48]!
  413ab4:	mov	x29, sp
  413ab8:	str	x21, [sp, #32]
  413abc:	mov	x21, x0
  413ac0:	mov	x0, x3
  413ac4:	stp	x19, x20, [sp, #16]
  413ac8:	mov	x19, x3
  413acc:	mov	x20, x2
  413ad0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  413ad4:	mov	x2, x19
  413ad8:	mov	x1, x20
  413adc:	ldp	x19, x20, [sp, #16]
  413ae0:	str	x0, [x21, #384]
  413ae4:	ldr	x21, [sp, #32]
  413ae8:	ldp	x29, x30, [sp], #48
  413aec:	b	403f70 <memcpy@plt>
  413af0:	stp	x29, x30, [sp, #-32]!
  413af4:	add	x1, x3, #0x1
  413af8:	mov	x29, sp
  413afc:	stp	x19, x20, [sp, #16]
  413b00:	mov	x19, x0
  413b04:	mov	x20, x3
  413b08:	mov	x0, x2
  413b0c:	bl	4502e8 <argp_parse@@Base+0x10508>
  413b10:	stp	x0, x20, [x19, #72]
  413b14:	ldp	x19, x20, [sp, #16]
  413b18:	ldp	x29, x30, [sp], #32
  413b1c:	ret
  413b20:	stp	x29, x30, [sp, #-32]!
  413b24:	add	x1, x3, #0x1
  413b28:	mov	x29, sp
  413b2c:	stp	x19, x20, [sp, #16]
  413b30:	mov	x19, x0
  413b34:	mov	x20, x3
  413b38:	mov	x0, x2
  413b3c:	bl	4502e8 <argp_parse@@Base+0x10508>
  413b40:	stp	x0, x20, [x19, #56]
  413b44:	ldp	x19, x20, [sp, #16]
  413b48:	ldp	x29, x30, [sp], #32
  413b4c:	ret
  413b50:	cbz	x0, 413c14 <wcrtomb@plt+0xeff4>
  413b54:	stp	x29, x30, [sp, #-80]!
  413b58:	mov	x29, sp
  413b5c:	stp	x21, x22, [sp, #32]
  413b60:	mov	x21, x0
  413b64:	stp	x23, x24, [sp, #48]
  413b68:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x16bf0>
  413b6c:	adrp	x23, 469000 <_obstack_memory_used@@Base+0x17bf0>
  413b70:	add	x24, x24, #0x7e8
  413b74:	add	x23, x23, #0x1f0
  413b78:	str	x25, [sp, #64]
  413b7c:	mov	x25, x1
  413b80:	stp	x19, x20, [sp, #16]
  413b84:	nop
  413b88:	mov	x19, x24
  413b8c:	mov	x20, x23
  413b90:	ldr	x22, [x21, #8]
  413b94:	b	413bb8 <wcrtomb@plt+0xef98>
  413b98:	bl	403ff0 <strlen@plt>
  413b9c:	mov	x2, x0
  413ba0:	mov	x1, x22
  413ba4:	mov	x0, x19
  413ba8:	bl	4043c0 <strncmp@plt>
  413bac:	cbz	w0, 413bd0 <wcrtomb@plt+0xefb0>
  413bb0:	ldr	x19, [x20, #32]!
  413bb4:	cbz	x19, 413bf4 <wcrtomb@plt+0xefd4>
  413bb8:	ldrb	w2, [x20, #28]
  413bbc:	mov	x0, x19
  413bc0:	mov	x1, x22
  413bc4:	cbnz	w2, 413b98 <wcrtomb@plt+0xef78>
  413bc8:	bl	404710 <strcmp@plt>
  413bcc:	cbnz	w0, 413bb0 <wcrtomb@plt+0xef90>
  413bd0:	ldr	x19, [x21, #16]
  413bd4:	mov	x0, x19
  413bd8:	bl	403ff0 <strlen@plt>
  413bdc:	ldr	x1, [x20]
  413be0:	mov	x3, x0
  413be4:	ldr	x4, [x20, #16]
  413be8:	mov	x2, x19
  413bec:	mov	x0, x25
  413bf0:	blr	x4
  413bf4:	ldr	x21, [x21]
  413bf8:	cbnz	x21, 413b88 <wcrtomb@plt+0xef68>
  413bfc:	ldp	x19, x20, [sp, #16]
  413c00:	ldp	x21, x22, [sp, #32]
  413c04:	ldp	x23, x24, [sp, #48]
  413c08:	ldr	x25, [sp, #64]
  413c0c:	ldp	x29, x30, [sp], #80
  413c10:	ret
  413c14:	ret
  413c18:	stp	x29, x30, [sp, #-128]!
  413c1c:	mov	x29, sp
  413c20:	stp	x19, x20, [sp, #16]
  413c24:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  413c28:	stp	x21, x22, [sp, #32]
  413c2c:	mov	x22, x0
  413c30:	ldr	x21, [x19, #2168]
  413c34:	stp	x23, x24, [sp, #48]
  413c38:	mov	x24, x2
  413c3c:	stp	x25, x26, [sp, #64]
  413c40:	mov	x23, x3
  413c44:	mov	x25, x1
  413c48:	stp	x27, x28, [sp, #80]
  413c4c:	add	x27, x19, #0x878
  413c50:	cbz	x21, 413eec <wcrtomb@plt+0xf2cc>
  413c54:	strb	wzr, [x21]
  413c58:	ldrb	w20, [x25]
  413c5c:	cbz	w20, 413f08 <wcrtomb@plt+0xf2e8>
  413c60:	add	x28, x27, #0x8
  413c64:	mov	x19, #0x0                   	// #0
  413c68:	b	413c90 <wcrtomb@plt+0xf070>
  413c6c:	cmp	w20, #0x25
  413c70:	add	x0, x21, x19
  413c74:	b.eq	413cc0 <wcrtomb@plt+0xf0a0>  // b.none
  413c78:	cmp	w20, #0x3d
  413c7c:	b.eq	413e60 <wcrtomb@plt+0xf240>  // b.none
  413c80:	strb	w20, [x0]
  413c84:	ldrb	w20, [x25, #1]!
  413c88:	add	x19, x19, #0x1
  413c8c:	cbz	w20, 413cdc <wcrtomb@plt+0xf0bc>
  413c90:	ldr	x0, [x27, #8]
  413c94:	add	x26, x19, #0x2
  413c98:	cmp	x26, x0
  413c9c:	b.cc	413c6c <wcrtomb@plt+0xf04c>  // b.lo, b.ul, b.last
  413ca0:	mov	x0, x21
  413ca4:	mov	x1, x28
  413ca8:	bl	450220 <argp_parse@@Base+0x10440>
  413cac:	str	x0, [x27]
  413cb0:	mov	x21, x0
  413cb4:	cmp	w20, #0x25
  413cb8:	add	x0, x21, x19
  413cbc:	b.ne	413c78 <wcrtomb@plt+0xf058>  // b.any
  413cc0:	mov	w0, #0x3225                	// #12837
  413cc4:	movk	w0, #0x35, lsl #16
  413cc8:	str	w0, [x21, x19]
  413ccc:	mov	x19, x26
  413cd0:	ldrb	w20, [x25, #1]!
  413cd4:	add	x19, x19, #0x1
  413cd8:	cbnz	w20, 413c90 <wcrtomb@plt+0xf070>
  413cdc:	add	x19, x21, x19
  413ce0:	strb	wzr, [x19]
  413ce4:	add	x25, x23, #0x3
  413ce8:	mov	x0, x21
  413cec:	add	x26, sp, #0x7c
  413cf0:	bl	403ff0 <strlen@plt>
  413cf4:	mov	x27, x0
  413cf8:	add	x25, x25, x0
  413cfc:	mov	x19, #0x0                   	// #0
  413d00:	add	x0, x19, x25
  413d04:	add	x1, sp, #0x68
  413d08:	bl	446868 <argp_parse@@Base+0x6a88>
  413d0c:	mov	x20, x0
  413d10:	mov	x0, x19
  413d14:	sub	x19, x26, x20
  413d18:	cmp	x0, x19
  413d1c:	b.ne	413d00 <wcrtomb@plt+0xf0e0>  // b.any
  413d20:	ldr	x25, [x22]
  413d24:	ldp	x0, x1, [x25, #24]
  413d28:	sub	x1, x1, x0
  413d2c:	cmp	x19, x1
  413d30:	b.hi	413e74 <wcrtomb@plt+0xf254>  // b.pmore
  413d34:	mov	x1, x20
  413d38:	mov	x2, x19
  413d3c:	bl	403f70 <memcpy@plt>
  413d40:	ldp	x20, x1, [x22]
  413d44:	ldr	x0, [x25, #24]
  413d48:	add	x0, x0, x19
  413d4c:	add	x19, x1, x19
  413d50:	ldr	x1, [x20, #32]
  413d54:	str	x0, [x25, #24]
  413d58:	ldr	x0, [x20, #24]
  413d5c:	str	x19, [x22, #8]
  413d60:	cmp	x1, x0
  413d64:	b.eq	413eb0 <wcrtomb@plt+0xf290>  // b.none
  413d68:	add	x1, x0, #0x1
  413d6c:	str	x1, [x20, #24]
  413d70:	mov	w1, #0x20                  	// #32
  413d74:	strb	w1, [x0]
  413d78:	ldp	x19, x2, [x22]
  413d7c:	ldp	x0, x1, [x19, #24]
  413d80:	add	x2, x2, #0x1
  413d84:	str	x2, [x22, #8]
  413d88:	sub	x1, x1, x0
  413d8c:	cmp	x27, x1
  413d90:	b.hi	413e9c <wcrtomb@plt+0xf27c>  // b.pmore
  413d94:	mov	x1, x21
  413d98:	mov	x2, x27
  413d9c:	bl	403f70 <memcpy@plt>
  413da0:	ldp	x20, x1, [x22]
  413da4:	ldr	x0, [x19, #24]
  413da8:	add	x0, x0, x27
  413dac:	add	x27, x1, x27
  413db0:	ldr	x1, [x20, #32]
  413db4:	str	x0, [x19, #24]
  413db8:	ldr	x0, [x20, #24]
  413dbc:	str	x27, [x22, #8]
  413dc0:	cmp	x1, x0
  413dc4:	b.eq	413ec4 <wcrtomb@plt+0xf2a4>  // b.none
  413dc8:	add	x1, x0, #0x1
  413dcc:	str	x1, [x20, #24]
  413dd0:	mov	w1, #0x3d                  	// #61
  413dd4:	strb	w1, [x0]
  413dd8:	ldp	x19, x2, [x22]
  413ddc:	ldp	x0, x1, [x19, #24]
  413de0:	add	x2, x2, #0x1
  413de4:	str	x2, [x22, #8]
  413de8:	sub	x1, x1, x0
  413dec:	cmp	x23, x1
  413df0:	b.hi	413e88 <wcrtomb@plt+0xf268>  // b.pmore
  413df4:	mov	x1, x24
  413df8:	mov	x2, x23
  413dfc:	bl	403f70 <memcpy@plt>
  413e00:	ldp	x20, x1, [x22]
  413e04:	ldr	x0, [x19, #24]
  413e08:	add	x0, x0, x23
  413e0c:	add	x23, x1, x23
  413e10:	ldr	x1, [x20, #32]
  413e14:	str	x0, [x19, #24]
  413e18:	ldr	x0, [x20, #24]
  413e1c:	str	x23, [x22, #8]
  413e20:	cmp	x1, x0
  413e24:	b.eq	413ed8 <wcrtomb@plt+0xf2b8>  // b.none
  413e28:	add	x1, x0, #0x1
  413e2c:	str	x1, [x20, #24]
  413e30:	mov	w1, #0xa                   	// #10
  413e34:	strb	w1, [x0]
  413e38:	ldr	x0, [x22, #8]
  413e3c:	ldp	x19, x20, [sp, #16]
  413e40:	add	x0, x0, #0x1
  413e44:	ldp	x23, x24, [sp, #48]
  413e48:	ldp	x25, x26, [sp, #64]
  413e4c:	ldp	x27, x28, [sp, #80]
  413e50:	str	x0, [x22, #8]
  413e54:	ldp	x21, x22, [sp, #32]
  413e58:	ldp	x29, x30, [sp], #128
  413e5c:	ret
  413e60:	mov	w1, #0x3325                	// #13093
  413e64:	mov	x19, x26
  413e68:	movk	w1, #0x44, lsl #16
  413e6c:	str	w1, [x0]
  413e70:	b	413c84 <wcrtomb@plt+0xf064>
  413e74:	mov	x0, x25
  413e78:	mov	x1, x19
  413e7c:	bl	4511d8 <_obstack_newchunk@@Base>
  413e80:	ldr	x0, [x25, #24]
  413e84:	b	413d34 <wcrtomb@plt+0xf114>
  413e88:	mov	x0, x19
  413e8c:	mov	x1, x23
  413e90:	bl	4511d8 <_obstack_newchunk@@Base>
  413e94:	ldr	x0, [x19, #24]
  413e98:	b	413df4 <wcrtomb@plt+0xf1d4>
  413e9c:	mov	x0, x19
  413ea0:	mov	x1, x27
  413ea4:	bl	4511d8 <_obstack_newchunk@@Base>
  413ea8:	ldr	x0, [x19, #24]
  413eac:	b	413d94 <wcrtomb@plt+0xf174>
  413eb0:	mov	x0, x20
  413eb4:	mov	x1, #0x1                   	// #1
  413eb8:	bl	4511d8 <_obstack_newchunk@@Base>
  413ebc:	ldr	x0, [x20, #24]
  413ec0:	b	413d68 <wcrtomb@plt+0xf148>
  413ec4:	mov	x0, x20
  413ec8:	mov	x1, #0x1                   	// #1
  413ecc:	bl	4511d8 <_obstack_newchunk@@Base>
  413ed0:	ldr	x0, [x20, #24]
  413ed4:	b	413dc8 <wcrtomb@plt+0xf1a8>
  413ed8:	mov	x0, x20
  413edc:	mov	x1, #0x1                   	// #1
  413ee0:	bl	4511d8 <_obstack_newchunk@@Base>
  413ee4:	ldr	x0, [x20, #24]
  413ee8:	b	413e28 <wcrtomb@plt+0xf208>
  413eec:	mov	x0, #0x100                 	// #256
  413ef0:	str	x0, [x27, #8]
  413ef4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  413ef8:	ldrb	w20, [x25]
  413efc:	str	x0, [x19, #2168]
  413f00:	mov	x21, x0
  413f04:	cbnz	w20, 413c60 <wcrtomb@plt+0xf040>
  413f08:	mov	x19, x21
  413f0c:	b	413ce0 <wcrtomb@plt+0xf0c0>
  413f10:	stp	x29, x30, [sp, #-64]!
  413f14:	mov	x29, sp
  413f18:	str	x21, [sp, #32]
  413f1c:	ldr	x21, [x0, #32]
  413f20:	mov	w0, #0x1                   	// #1
  413f24:	stp	x19, x20, [sp, #16]
  413f28:	mov	x20, x1
  413f2c:	mov	x19, x2
  413f30:	mov	x1, x21
  413f34:	add	x2, sp, #0x38
  413f38:	bl	431410 <wcrtomb@plt+0x2c7f0>
  413f3c:	tst	w0, #0xff
  413f40:	b.eq	413f7c <wcrtomb@plt+0xf35c>  // b.none
  413f44:	ldr	x21, [sp, #56]
  413f48:	mov	x0, x21
  413f4c:	bl	403ff0 <strlen@plt>
  413f50:	mov	x3, x0
  413f54:	mov	x2, x21
  413f58:	mov	x1, x20
  413f5c:	mov	x0, x19
  413f60:	bl	413c18 <wcrtomb@plt+0xeff8>
  413f64:	ldr	x0, [sp, #56]
  413f68:	bl	4047b0 <free@plt>
  413f6c:	ldp	x19, x20, [sp, #16]
  413f70:	ldr	x21, [sp, #32]
  413f74:	ldp	x29, x30, [sp], #64
  413f78:	ret
  413f7c:	mov	x0, x21
  413f80:	bl	450328 <argp_parse@@Base+0x10548>
  413f84:	mov	x21, x0
  413f88:	str	x0, [sp, #56]
  413f8c:	b	413f48 <wcrtomb@plt+0xf328>
  413f90:	mov	x4, x0
  413f94:	mov	x0, x2
  413f98:	ldr	x3, [x3]
  413f9c:	ldr	x2, [x4, #336]
  413fa0:	add	x3, x3, x3, lsl #1
  413fa4:	add	x3, x2, x3, lsl #3
  413fa8:	ldp	x2, x3, [x3, #8]
  413fac:	b	413c18 <wcrtomb@plt+0xeff8>
  413fb0:	mov	x3, x0
  413fb4:	mov	x0, x2
  413fb8:	ldp	x2, x3, [x3, #72]
  413fbc:	b	413c18 <wcrtomb@plt+0xeff8>
  413fc0:	mov	x3, x0
  413fc4:	mov	x0, x2
  413fc8:	ldp	x2, x3, [x3, #56]
  413fcc:	b	413c18 <wcrtomb@plt+0xeff8>
  413fd0:	stp	x29, x30, [sp, #-48]!
  413fd4:	mov	x0, x3
  413fd8:	mov	x29, sp
  413fdc:	stp	x19, x20, [sp, #16]
  413fe0:	mov	x19, x3
  413fe4:	mov	x20, x2
  413fe8:	str	x21, [sp, #32]
  413fec:	mov	x21, x1
  413ff0:	bl	4194c0 <wcrtomb@plt+0x148a0>
  413ff4:	mov	x3, x0
  413ff8:	mov	x2, x19
  413ffc:	mov	x1, x21
  414000:	mov	x0, x20
  414004:	ldp	x19, x20, [sp, #16]
  414008:	ldr	x21, [sp, #32]
  41400c:	ldp	x29, x30, [sp], #48
  414010:	b	413c18 <wcrtomb@plt+0xeff8>
  414014:	nop
  414018:	stp	x29, x30, [sp, #-80]!
  41401c:	mov	x29, sp
  414020:	stp	x19, x20, [sp, #16]
  414024:	mov	x20, x1
  414028:	mov	x19, x2
  41402c:	str	x21, [sp, #32]
  414030:	cbz	x3, 41406c <wcrtomb@plt+0xf44c>
  414034:	ldp	x0, x1, [x3]
  414038:	add	x2, sp, #0x30
  41403c:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  414040:	mov	x21, x0
  414044:	bl	403ff0 <strlen@plt>
  414048:	mov	x3, x0
  41404c:	mov	x2, x21
  414050:	mov	x1, x20
  414054:	mov	x0, x19
  414058:	bl	413c18 <wcrtomb@plt+0xeff8>
  41405c:	ldp	x19, x20, [sp, #16]
  414060:	ldr	x21, [sp, #32]
  414064:	ldp	x29, x30, [sp], #80
  414068:	ret
  41406c:	ldp	x0, x1, [x0, #232]
  414070:	b	414038 <wcrtomb@plt+0xf418>
  414074:	nop
  414078:	mov	x4, x3
  41407c:	stp	x29, x30, [sp, #-80]!
  414080:	mov	x29, sp
  414084:	ldr	x4, [x4]
  414088:	add	x3, sp, #0x38
  41408c:	ldr	x0, [x0, #304]
  414090:	stp	x19, x20, [sp, #16]
  414094:	mov	x20, x1
  414098:	mov	x19, x2
  41409c:	mov	x1, #0x0                   	// #0
  4140a0:	add	x4, x0, x4, lsl #4
  4140a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4140a8:	ldr	x0, [x4, #8]
  4140ac:	str	x21, [sp, #32]
  4140b0:	bl	41efa0 <wcrtomb@plt+0x1a380>
  4140b4:	mov	x21, x0
  4140b8:	bl	403ff0 <strlen@plt>
  4140bc:	mov	x3, x0
  4140c0:	mov	x2, x21
  4140c4:	mov	x1, x20
  4140c8:	mov	x0, x19
  4140cc:	bl	413c18 <wcrtomb@plt+0xeff8>
  4140d0:	ldp	x19, x20, [sp, #16]
  4140d4:	ldr	x21, [sp, #32]
  4140d8:	ldp	x29, x30, [sp], #80
  4140dc:	ret
  4140e0:	stp	x29, x30, [sp, #-80]!
  4140e4:	mov	x29, sp
  4140e8:	ldr	w0, [x0, #116]
  4140ec:	add	x3, sp, #0x38
  4140f0:	stp	x19, x20, [sp, #16]
  4140f4:	mov	x20, x1
  4140f8:	mov	x19, x2
  4140fc:	mov	x1, #0x0                   	// #0
  414100:	mov	x2, #0xffffffff            	// #4294967295
  414104:	str	x21, [sp, #32]
  414108:	bl	41efa0 <wcrtomb@plt+0x1a380>
  41410c:	mov	x21, x0
  414110:	bl	403ff0 <strlen@plt>
  414114:	mov	x2, x21
  414118:	mov	x3, x0
  41411c:	mov	x1, x20
  414120:	mov	x0, x19
  414124:	bl	413c18 <wcrtomb@plt+0xeff8>
  414128:	ldp	x19, x20, [sp, #16]
  41412c:	ldr	x21, [sp, #32]
  414130:	ldp	x29, x30, [sp], #80
  414134:	ret
  414138:	stp	x29, x30, [sp, #-80]!
  41413c:	mov	x29, sp
  414140:	ldr	w0, [x0, #112]
  414144:	add	x3, sp, #0x38
  414148:	stp	x19, x20, [sp, #16]
  41414c:	mov	x20, x1
  414150:	mov	x19, x2
  414154:	mov	x1, #0x0                   	// #0
  414158:	mov	x2, #0xffffffff            	// #4294967295
  41415c:	str	x21, [sp, #32]
  414160:	bl	41efa0 <wcrtomb@plt+0x1a380>
  414164:	mov	x21, x0
  414168:	bl	403ff0 <strlen@plt>
  41416c:	mov	x2, x21
  414170:	mov	x3, x0
  414174:	mov	x1, x20
  414178:	mov	x0, x19
  41417c:	bl	413c18 <wcrtomb@plt+0xeff8>
  414180:	ldp	x19, x20, [sp, #16]
  414184:	ldr	x21, [sp, #32]
  414188:	ldp	x29, x30, [sp], #80
  41418c:	ret
  414190:	stp	x29, x30, [sp, #-80]!
  414194:	mov	x29, sp
  414198:	stp	x19, x20, [sp, #16]
  41419c:	mov	x20, x1
  4141a0:	mov	x19, x2
  4141a4:	ldp	x0, x1, [x0, #216]
  4141a8:	add	x2, sp, #0x30
  4141ac:	str	x21, [sp, #32]
  4141b0:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  4141b4:	mov	x21, x0
  4141b8:	bl	403ff0 <strlen@plt>
  4141bc:	mov	x3, x0
  4141c0:	mov	x2, x21
  4141c4:	mov	x1, x20
  4141c8:	mov	x0, x19
  4141cc:	bl	413c18 <wcrtomb@plt+0xeff8>
  4141d0:	ldp	x19, x20, [sp, #16]
  4141d4:	ldr	x21, [sp, #32]
  4141d8:	ldp	x29, x30, [sp], #80
  4141dc:	ret
  4141e0:	stp	x29, x30, [sp, #-80]!
  4141e4:	mov	x29, sp
  4141e8:	stp	x19, x20, [sp, #16]
  4141ec:	mov	x20, x1
  4141f0:	mov	x19, x2
  4141f4:	ldp	x0, x1, [x0, #248]
  4141f8:	add	x2, sp, #0x30
  4141fc:	str	x21, [sp, #32]
  414200:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  414204:	mov	x21, x0
  414208:	bl	403ff0 <strlen@plt>
  41420c:	mov	x3, x0
  414210:	mov	x2, x21
  414214:	mov	x1, x20
  414218:	mov	x0, x19
  41421c:	bl	413c18 <wcrtomb@plt+0xeff8>
  414220:	ldp	x19, x20, [sp, #16]
  414224:	ldr	x21, [sp, #32]
  414228:	ldp	x29, x30, [sp], #80
  41422c:	ret
  414230:	stp	x29, x30, [sp, #-80]!
  414234:	mov	x29, sp
  414238:	ldr	x0, [x0, #136]
  41423c:	add	x3, sp, #0x38
  414240:	stp	x19, x20, [sp, #16]
  414244:	mov	x20, x1
  414248:	mov	x19, x2
  41424c:	mov	x1, #0x0                   	// #0
  414250:	mov	x2, #0xffffffffffffffff    	// #-1
  414254:	str	x21, [sp, #32]
  414258:	bl	41efa0 <wcrtomb@plt+0x1a380>
  41425c:	mov	x21, x0
  414260:	bl	403ff0 <strlen@plt>
  414264:	mov	x2, x21
  414268:	mov	x3, x0
  41426c:	mov	x1, x20
  414270:	mov	x0, x19
  414274:	bl	413c18 <wcrtomb@plt+0xeff8>
  414278:	ldp	x19, x20, [sp, #16]
  41427c:	ldr	x21, [sp, #32]
  414280:	ldp	x29, x30, [sp], #80
  414284:	ret
  414288:	mov	x0, x3
  41428c:	stp	x29, x30, [sp, #-80]!
  414290:	mov	x29, sp
  414294:	ldr	x0, [x0]
  414298:	add	x3, sp, #0x38
  41429c:	stp	x19, x20, [sp, #16]
  4142a0:	mov	x20, x1
  4142a4:	mov	x19, x2
  4142a8:	mov	x1, #0x0                   	// #0
  4142ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4142b0:	str	x21, [sp, #32]
  4142b4:	bl	41efa0 <wcrtomb@plt+0x1a380>
  4142b8:	mov	x21, x0
  4142bc:	bl	403ff0 <strlen@plt>
  4142c0:	mov	x2, x21
  4142c4:	mov	x3, x0
  4142c8:	mov	x1, x20
  4142cc:	mov	x0, x19
  4142d0:	bl	413c18 <wcrtomb@plt+0xeff8>
  4142d4:	ldp	x19, x20, [sp, #16]
  4142d8:	ldr	x21, [sp, #32]
  4142dc:	ldp	x29, x30, [sp], #80
  4142e0:	ret
  4142e4:	nop
  4142e8:	stp	x29, x30, [sp, #-80]!
  4142ec:	mov	x29, sp
  4142f0:	ldr	x0, [x0, #136]
  4142f4:	add	x3, sp, #0x38
  4142f8:	stp	x19, x20, [sp, #16]
  4142fc:	mov	x20, x1
  414300:	mov	x19, x2
  414304:	mov	x1, #0x0                   	// #0
  414308:	mov	x2, #0xffffffffffffffff    	// #-1
  41430c:	str	x21, [sp, #32]
  414310:	bl	41efa0 <wcrtomb@plt+0x1a380>
  414314:	mov	x21, x0
  414318:	bl	403ff0 <strlen@plt>
  41431c:	mov	x2, x21
  414320:	mov	x3, x0
  414324:	mov	x1, x20
  414328:	mov	x0, x19
  41432c:	bl	413c18 <wcrtomb@plt+0xeff8>
  414330:	ldp	x19, x20, [sp, #16]
  414334:	ldr	x21, [sp, #32]
  414338:	ldp	x29, x30, [sp], #80
  41433c:	ret
  414340:	mov	x0, x3
  414344:	stp	x29, x30, [sp, #-80]!
  414348:	mov	x29, sp
  41434c:	ldr	x0, [x0]
  414350:	add	x3, sp, #0x38
  414354:	stp	x19, x20, [sp, #16]
  414358:	mov	x20, x1
  41435c:	mov	x19, x2
  414360:	mov	x1, #0x0                   	// #0
  414364:	mov	x2, #0xffffffffffffffff    	// #-1
  414368:	str	x21, [sp, #32]
  41436c:	bl	41efa0 <wcrtomb@plt+0x1a380>
  414370:	mov	x21, x0
  414374:	bl	403ff0 <strlen@plt>
  414378:	mov	x2, x21
  41437c:	mov	x3, x0
  414380:	mov	x1, x20
  414384:	mov	x0, x19
  414388:	bl	413c18 <wcrtomb@plt+0xeff8>
  41438c:	ldp	x19, x20, [sp, #16]
  414390:	ldr	x21, [sp, #32]
  414394:	ldp	x29, x30, [sp], #80
  414398:	ret
  41439c:	nop
  4143a0:	stp	x29, x30, [sp, #-80]!
  4143a4:	mov	x29, sp
  4143a8:	ldr	x0, [x0, #288]
  4143ac:	add	x3, sp, #0x38
  4143b0:	stp	x19, x20, [sp, #16]
  4143b4:	mov	x20, x1
  4143b8:	mov	x19, x2
  4143bc:	mov	x1, #0x0                   	// #0
  4143c0:	mov	x2, #0xffffffffffffffff    	// #-1
  4143c4:	str	x21, [sp, #32]
  4143c8:	bl	41efa0 <wcrtomb@plt+0x1a380>
  4143cc:	mov	x21, x0
  4143d0:	bl	403ff0 <strlen@plt>
  4143d4:	mov	x2, x21
  4143d8:	mov	x3, x0
  4143dc:	mov	x1, x20
  4143e0:	mov	x0, x19
  4143e4:	bl	413c18 <wcrtomb@plt+0xeff8>
  4143e8:	ldp	x19, x20, [sp, #16]
  4143ec:	ldr	x21, [sp, #32]
  4143f0:	ldp	x29, x30, [sp], #80
  4143f4:	ret
  4143f8:	stp	x29, x30, [sp, #-80]!
  4143fc:	mov	x29, sp
  414400:	ldr	w0, [x0, #276]
  414404:	add	x3, sp, #0x38
  414408:	stp	x19, x20, [sp, #16]
  41440c:	mov	x20, x1
  414410:	mov	x19, x2
  414414:	mov	x1, #0x0                   	// #0
  414418:	mov	x2, #0xffffffffffffffff    	// #-1
  41441c:	str	x21, [sp, #32]
  414420:	bl	41efa0 <wcrtomb@plt+0x1a380>
  414424:	mov	x21, x0
  414428:	bl	403ff0 <strlen@plt>
  41442c:	mov	x2, x21
  414430:	mov	x3, x0
  414434:	mov	x1, x20
  414438:	mov	x0, x19
  41443c:	bl	413c18 <wcrtomb@plt+0xeff8>
  414440:	ldp	x19, x20, [sp, #16]
  414444:	ldr	x21, [sp, #32]
  414448:	ldp	x29, x30, [sp], #80
  41444c:	ret
  414450:	stp	x29, x30, [sp, #-80]!
  414454:	mov	x29, sp
  414458:	ldr	w0, [x0, #280]
  41445c:	add	x3, sp, #0x38
  414460:	stp	x19, x20, [sp, #16]
  414464:	mov	x20, x1
  414468:	mov	x19, x2
  41446c:	mov	x1, #0x0                   	// #0
  414470:	mov	x2, #0xffffffffffffffff    	// #-1
  414474:	str	x21, [sp, #32]
  414478:	bl	41efa0 <wcrtomb@plt+0x1a380>
  41447c:	mov	x21, x0
  414480:	bl	403ff0 <strlen@plt>
  414484:	mov	x2, x21
  414488:	mov	x3, x0
  41448c:	mov	x1, x20
  414490:	mov	x0, x19
  414494:	bl	413c18 <wcrtomb@plt+0xeff8>
  414498:	ldp	x19, x20, [sp, #16]
  41449c:	ldr	x21, [sp, #32]
  4144a0:	ldp	x29, x30, [sp], #80
  4144a4:	ret
  4144a8:	mov	x4, x3
  4144ac:	stp	x29, x30, [sp, #-80]!
  4144b0:	mov	x29, sp
  4144b4:	ldr	x4, [x4]
  4144b8:	add	x3, sp, #0x38
  4144bc:	ldr	x0, [x0, #304]
  4144c0:	stp	x19, x20, [sp, #16]
  4144c4:	lsl	x4, x4, #4
  4144c8:	mov	x20, x1
  4144cc:	mov	x19, x2
  4144d0:	mov	x1, #0x0                   	// #0
  4144d4:	mov	x2, #0xffffffffffffffff    	// #-1
  4144d8:	ldr	x0, [x0, x4]
  4144dc:	str	x21, [sp, #32]
  4144e0:	bl	41efa0 <wcrtomb@plt+0x1a380>
  4144e4:	mov	x21, x0
  4144e8:	bl	403ff0 <strlen@plt>
  4144ec:	mov	x3, x0
  4144f0:	mov	x2, x21
  4144f4:	mov	x1, x20
  4144f8:	mov	x0, x19
  4144fc:	bl	413c18 <wcrtomb@plt+0xeff8>
  414500:	ldp	x19, x20, [sp, #16]
  414504:	ldr	x21, [sp, #32]
  414508:	ldp	x29, x30, [sp], #80
  41450c:	ret
  414510:	stp	x29, x30, [sp, #-32]!
  414514:	mov	x29, sp
  414518:	stp	x19, x20, [sp, #16]
  41451c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  414520:	mov	x20, x2
  414524:	ldr	x0, [x19]
  414528:	cbz	x0, 414534 <wcrtomb@plt+0xf914>
  41452c:	bl	4047b0 <free@plt>
  414530:	str	xzr, [x19]
  414534:	add	x19, x19, #0x0
  414538:	mov	x1, x20
  41453c:	mov	x2, x19
  414540:	mov	w0, #0x0                   	// #0
  414544:	bl	431410 <wcrtomb@plt+0x2c7f0>
  414548:	tst	w0, #0xff
  41454c:	b.eq	41455c <wcrtomb@plt+0xf93c>  // b.none
  414550:	ldp	x19, x20, [sp, #16]
  414554:	ldp	x29, x30, [sp], #32
  414558:	ret
  41455c:	mov	x1, x20
  414560:	mov	x0, x19
  414564:	ldp	x19, x20, [sp, #16]
  414568:	ldp	x29, x30, [sp], #32
  41456c:	b	41e8d0 <wcrtomb@plt+0x19cb0>
  414570:	stp	x29, x30, [sp, #-32]!
  414574:	mov	x29, sp
  414578:	stp	x19, x20, [sp, #16]
  41457c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  414580:	mov	x20, x2
  414584:	ldr	x0, [x19, #8]
  414588:	cbz	x0, 414594 <wcrtomb@plt+0xf974>
  41458c:	bl	4047b0 <free@plt>
  414590:	str	xzr, [x19, #8]
  414594:	add	x19, x19, #0x8
  414598:	mov	x1, x20
  41459c:	mov	x2, x19
  4145a0:	mov	w0, #0x0                   	// #0
  4145a4:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4145a8:	tst	w0, #0xff
  4145ac:	b.eq	4145bc <wcrtomb@plt+0xf99c>  // b.none
  4145b0:	ldp	x19, x20, [sp, #16]
  4145b4:	ldp	x29, x30, [sp], #32
  4145b8:	ret
  4145bc:	mov	x1, x20
  4145c0:	mov	x0, x19
  4145c4:	ldp	x19, x20, [sp, #16]
  4145c8:	ldp	x29, x30, [sp], #32
  4145cc:	b	41e8d0 <wcrtomb@plt+0x19cb0>
  4145d0:	stp	x29, x30, [sp, #-48]!
  4145d4:	mov	x29, sp
  4145d8:	stp	x19, x20, [sp, #16]
  4145dc:	mov	x19, x0
  4145e0:	mov	x20, x2
  4145e4:	str	x21, [sp, #32]
  4145e8:	add	x21, x0, #0x30
  4145ec:	ldr	x0, [x0, #48]
  4145f0:	cbz	x0, 4145fc <wcrtomb@plt+0xf9dc>
  4145f4:	bl	4047b0 <free@plt>
  4145f8:	str	xzr, [x19, #48]
  4145fc:	mov	x2, x21
  414600:	mov	x1, x20
  414604:	mov	w0, #0x0                   	// #0
  414608:	bl	431410 <wcrtomb@plt+0x2c7f0>
  41460c:	tst	w0, #0xff
  414610:	b.eq	414624 <wcrtomb@plt+0xfa04>  // b.none
  414614:	ldp	x19, x20, [sp, #16]
  414618:	ldr	x21, [sp, #32]
  41461c:	ldp	x29, x30, [sp], #48
  414620:	ret
  414624:	mov	x1, x20
  414628:	mov	x0, x21
  41462c:	ldp	x19, x20, [sp, #16]
  414630:	ldr	x21, [sp, #32]
  414634:	ldp	x29, x30, [sp], #48
  414638:	b	41e8d0 <wcrtomb@plt+0x19cb0>
  41463c:	nop
  414640:	stp	x29, x30, [sp, #-48]!
  414644:	mov	x29, sp
  414648:	stp	x19, x20, [sp, #16]
  41464c:	mov	x19, x0
  414650:	mov	x20, x2
  414654:	str	x21, [sp, #32]
  414658:	add	x21, x0, #0x20
  41465c:	ldr	x0, [x0, #32]
  414660:	cbz	x0, 41466c <wcrtomb@plt+0xfa4c>
  414664:	bl	4047b0 <free@plt>
  414668:	str	xzr, [x19, #32]
  41466c:	mov	x2, x21
  414670:	mov	x1, x20
  414674:	mov	w0, #0x0                   	// #0
  414678:	bl	431410 <wcrtomb@plt+0x2c7f0>
  41467c:	tst	w0, #0xff
  414680:	b.eq	414694 <wcrtomb@plt+0xfa74>  // b.none
  414684:	ldp	x19, x20, [sp, #16]
  414688:	ldr	x21, [sp, #32]
  41468c:	ldp	x29, x30, [sp], #48
  414690:	ret
  414694:	mov	x1, x20
  414698:	mov	x0, x21
  41469c:	ldp	x19, x20, [sp, #16]
  4146a0:	ldr	x21, [sp, #32]
  4146a4:	ldp	x29, x30, [sp], #48
  4146a8:	b	41e8d0 <wcrtomb@plt+0x19cb0>
  4146ac:	nop
  4146b0:	stp	x29, x30, [sp, #-48]!
  4146b4:	mov	x29, sp
  4146b8:	stp	x19, x20, [sp, #16]
  4146bc:	mov	x19, x0
  4146c0:	mov	x20, x2
  4146c4:	str	x21, [sp, #32]
  4146c8:	add	x21, x0, #0x28
  4146cc:	ldr	x0, [x0, #40]
  4146d0:	cbz	x0, 4146dc <wcrtomb@plt+0xfabc>
  4146d4:	bl	4047b0 <free@plt>
  4146d8:	str	xzr, [x19, #40]
  4146dc:	mov	x2, x21
  4146e0:	mov	x1, x20
  4146e4:	mov	w0, #0x0                   	// #0
  4146e8:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4146ec:	tst	w0, #0xff
  4146f0:	b.eq	414704 <wcrtomb@plt+0xfae4>  // b.none
  4146f4:	ldp	x19, x20, [sp, #16]
  4146f8:	ldr	x21, [sp, #32]
  4146fc:	ldp	x29, x30, [sp], #48
  414700:	ret
  414704:	mov	x1, x20
  414708:	mov	x0, x21
  41470c:	ldp	x19, x20, [sp, #16]
  414710:	ldr	x21, [sp, #32]
  414714:	ldp	x29, x30, [sp], #48
  414718:	b	41e8d0 <wcrtomb@plt+0x19cb0>
  41471c:	nop
  414720:	stp	x29, x30, [sp, #-48]!
  414724:	mov	x29, sp
  414728:	stp	x19, x20, [sp, #16]
  41472c:	mov	x19, x0
  414730:	mov	x20, x2
  414734:	str	x21, [sp, #32]
  414738:	add	x21, x0, #0x18
  41473c:	ldr	x0, [x0, #24]
  414740:	cbz	x0, 41474c <wcrtomb@plt+0xfb2c>
  414744:	bl	4047b0 <free@plt>
  414748:	str	xzr, [x19, #24]
  41474c:	mov	x2, x21
  414750:	mov	x1, x20
  414754:	mov	w0, #0x0                   	// #0
  414758:	bl	431410 <wcrtomb@plt+0x2c7f0>
  41475c:	tst	w0, #0xff
  414760:	b.eq	414774 <wcrtomb@plt+0xfb54>  // b.none
  414764:	ldp	x19, x20, [sp, #16]
  414768:	ldr	x21, [sp, #32]
  41476c:	ldp	x29, x30, [sp], #48
  414770:	ret
  414774:	mov	x1, x20
  414778:	mov	x0, x21
  41477c:	ldp	x19, x20, [sp, #16]
  414780:	ldr	x21, [sp, #32]
  414784:	ldp	x29, x30, [sp], #48
  414788:	b	41e8d0 <wcrtomb@plt+0x19cb0>
  41478c:	nop
  414790:	stp	x29, x30, [sp, #-48]!
  414794:	mov	w1, #0x1                   	// #1
  414798:	mov	x29, sp
  41479c:	stp	x19, x20, [sp, #16]
  4147a0:	mov	x19, x0
  4147a4:	mov	x20, x2
  4147a8:	ldr	x0, [x0]
  4147ac:	str	x21, [sp, #32]
  4147b0:	strb	w1, [x19, #321]
  4147b4:	cbz	x0, 4147c0 <wcrtomb@plt+0xfba0>
  4147b8:	bl	4047b0 <free@plt>
  4147bc:	str	xzr, [x19]
  4147c0:	mov	x2, x19
  4147c4:	mov	x1, x20
  4147c8:	mov	w0, #0x0                   	// #0
  4147cc:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4147d0:	tst	w0, #0xff
  4147d4:	b.eq	414820 <wcrtomb@plt+0xfc00>  // b.none
  4147d8:	ldr	x0, [x19, #8]
  4147dc:	add	x21, x19, #0x8
  4147e0:	cbz	x0, 4147ec <wcrtomb@plt+0xfbcc>
  4147e4:	bl	4047b0 <free@plt>
  4147e8:	str	xzr, [x19, #8]
  4147ec:	mov	x2, x21
  4147f0:	mov	x1, x20
  4147f4:	mov	w0, #0x0                   	// #0
  4147f8:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4147fc:	tst	w0, #0xff
  414800:	b.eq	414830 <wcrtomb@plt+0xfc10>  // b.none
  414804:	ldr	x0, [x19, #8]
  414808:	bl	4415f0 <argp_parse@@Base+0x1810>
  41480c:	strb	w0, [x19, #16]
  414810:	ldp	x19, x20, [sp, #16]
  414814:	ldr	x21, [sp, #32]
  414818:	ldp	x29, x30, [sp], #48
  41481c:	ret
  414820:	mov	x1, x20
  414824:	mov	x0, x19
  414828:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41482c:	b	4147d8 <wcrtomb@plt+0xfbb8>
  414830:	mov	x1, x20
  414834:	mov	x0, x21
  414838:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41483c:	ldr	x0, [x19, #8]
  414840:	bl	4415f0 <argp_parse@@Base+0x1810>
  414844:	strb	w0, [x19, #16]
  414848:	ldp	x19, x20, [sp, #16]
  41484c:	ldr	x21, [sp, #32]
  414850:	ldp	x29, x30, [sp], #48
  414854:	ret
  414858:	stp	x29, x30, [sp, #-48]!
  41485c:	mov	x29, sp
  414860:	stp	x19, x20, [sp, #16]
  414864:	mov	x19, x0
  414868:	ldrb	w0, [x0, #321]
  41486c:	cbz	w0, 41487c <wcrtomb@plt+0xfc5c>
  414870:	ldp	x19, x20, [sp, #16]
  414874:	ldp	x29, x30, [sp], #48
  414878:	ret
  41487c:	ldr	x0, [x19]
  414880:	str	x21, [sp, #32]
  414884:	mov	x20, x2
  414888:	cbz	x0, 414894 <wcrtomb@plt+0xfc74>
  41488c:	bl	4047b0 <free@plt>
  414890:	str	xzr, [x19]
  414894:	mov	x2, x19
  414898:	mov	x1, x20
  41489c:	mov	w0, #0x0                   	// #0
  4148a0:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4148a4:	tst	w0, #0xff
  4148a8:	b.eq	4148f4 <wcrtomb@plt+0xfcd4>  // b.none
  4148ac:	ldr	x0, [x19, #8]
  4148b0:	add	x21, x19, #0x8
  4148b4:	cbz	x0, 4148c0 <wcrtomb@plt+0xfca0>
  4148b8:	bl	4047b0 <free@plt>
  4148bc:	str	xzr, [x19, #8]
  4148c0:	mov	x2, x21
  4148c4:	mov	x1, x20
  4148c8:	mov	w0, #0x0                   	// #0
  4148cc:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4148d0:	tst	w0, #0xff
  4148d4:	b.eq	414904 <wcrtomb@plt+0xfce4>  // b.none
  4148d8:	ldr	x0, [x19, #8]
  4148dc:	bl	4415f0 <argp_parse@@Base+0x1810>
  4148e0:	strb	w0, [x19, #16]
  4148e4:	ldp	x19, x20, [sp, #16]
  4148e8:	ldr	x21, [sp, #32]
  4148ec:	ldp	x29, x30, [sp], #48
  4148f0:	ret
  4148f4:	mov	x1, x20
  4148f8:	mov	x0, x19
  4148fc:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  414900:	b	4148ac <wcrtomb@plt+0xfc8c>
  414904:	mov	x1, x20
  414908:	mov	x0, x21
  41490c:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  414910:	b	4148d8 <wcrtomb@plt+0xfcb8>
  414914:	nop
  414918:	stp	x29, x30, [sp, #-64]!
  41491c:	mov	w0, #0x1                   	// #1
  414920:	mov	x29, sp
  414924:	stp	x19, x20, [sp, #16]
  414928:	mov	x19, x3
  41492c:	mov	x20, x2
  414930:	add	x2, sp, #0x38
  414934:	str	x21, [sp, #32]
  414938:	mov	x21, x1
  41493c:	mov	x1, x3
  414940:	bl	431410 <wcrtomb@plt+0x2c7f0>
  414944:	tst	w0, #0xff
  414948:	b.eq	414984 <wcrtomb@plt+0xfd64>  // b.none
  41494c:	ldr	x19, [sp, #56]
  414950:	mov	x0, x19
  414954:	bl	403ff0 <strlen@plt>
  414958:	mov	x3, x0
  41495c:	mov	x2, x19
  414960:	mov	x1, x21
  414964:	mov	x0, x20
  414968:	bl	413c18 <wcrtomb@plt+0xeff8>
  41496c:	ldr	x0, [sp, #56]
  414970:	bl	4047b0 <free@plt>
  414974:	ldp	x19, x20, [sp, #16]
  414978:	ldr	x21, [sp, #32]
  41497c:	ldp	x29, x30, [sp], #64
  414980:	ret
  414984:	mov	x0, x19
  414988:	bl	450328 <argp_parse@@Base+0x10548>
  41498c:	mov	x19, x0
  414990:	str	x0, [sp, #56]
  414994:	b	414950 <wcrtomb@plt+0xfd30>
  414998:	stp	x29, x30, [sp, #-64]!
  41499c:	mov	x29, sp
  4149a0:	str	x21, [sp, #32]
  4149a4:	ldr	x21, [x0, #48]
  4149a8:	mov	w0, #0x1                   	// #1
  4149ac:	stp	x19, x20, [sp, #16]
  4149b0:	mov	x20, x1
  4149b4:	mov	x19, x2
  4149b8:	mov	x1, x21
  4149bc:	add	x2, sp, #0x38
  4149c0:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4149c4:	tst	w0, #0xff
  4149c8:	b.eq	414a04 <wcrtomb@plt+0xfde4>  // b.none
  4149cc:	ldr	x21, [sp, #56]
  4149d0:	mov	x0, x21
  4149d4:	bl	403ff0 <strlen@plt>
  4149d8:	mov	x3, x0
  4149dc:	mov	x2, x21
  4149e0:	mov	x1, x20
  4149e4:	mov	x0, x19
  4149e8:	bl	413c18 <wcrtomb@plt+0xeff8>
  4149ec:	ldr	x0, [sp, #56]
  4149f0:	bl	4047b0 <free@plt>
  4149f4:	ldp	x19, x20, [sp, #16]
  4149f8:	ldr	x21, [sp, #32]
  4149fc:	ldp	x29, x30, [sp], #64
  414a00:	ret
  414a04:	mov	x0, x21
  414a08:	bl	450328 <argp_parse@@Base+0x10548>
  414a0c:	mov	x21, x0
  414a10:	str	x0, [sp, #56]
  414a14:	b	4149d0 <wcrtomb@plt+0xfdb0>
  414a18:	stp	x29, x30, [sp, #-64]!
  414a1c:	mov	x29, sp
  414a20:	str	x21, [sp, #32]
  414a24:	ldr	x21, [x0, #8]
  414a28:	mov	w0, #0x1                   	// #1
  414a2c:	stp	x19, x20, [sp, #16]
  414a30:	mov	x20, x1
  414a34:	mov	x19, x2
  414a38:	mov	x1, x21
  414a3c:	add	x2, sp, #0x38
  414a40:	bl	431410 <wcrtomb@plt+0x2c7f0>
  414a44:	tst	w0, #0xff
  414a48:	b.eq	414a84 <wcrtomb@plt+0xfe64>  // b.none
  414a4c:	ldr	x21, [sp, #56]
  414a50:	mov	x0, x21
  414a54:	bl	403ff0 <strlen@plt>
  414a58:	mov	x3, x0
  414a5c:	mov	x2, x21
  414a60:	mov	x1, x20
  414a64:	mov	x0, x19
  414a68:	bl	413c18 <wcrtomb@plt+0xeff8>
  414a6c:	ldr	x0, [sp, #56]
  414a70:	bl	4047b0 <free@plt>
  414a74:	ldp	x19, x20, [sp, #16]
  414a78:	ldr	x21, [sp, #32]
  414a7c:	ldp	x29, x30, [sp], #64
  414a80:	ret
  414a84:	mov	x0, x21
  414a88:	bl	450328 <argp_parse@@Base+0x10548>
  414a8c:	mov	x21, x0
  414a90:	str	x0, [sp, #56]
  414a94:	b	414a50 <wcrtomb@plt+0xfe30>
  414a98:	stp	x29, x30, [sp, #-64]!
  414a9c:	mov	x29, sp
  414aa0:	str	x21, [sp, #32]
  414aa4:	ldr	x21, [x0, #24]
  414aa8:	mov	w0, #0x1                   	// #1
  414aac:	stp	x19, x20, [sp, #16]
  414ab0:	mov	x20, x1
  414ab4:	mov	x19, x2
  414ab8:	mov	x1, x21
  414abc:	add	x2, sp, #0x38
  414ac0:	bl	431410 <wcrtomb@plt+0x2c7f0>
  414ac4:	tst	w0, #0xff
  414ac8:	b.eq	414b04 <wcrtomb@plt+0xfee4>  // b.none
  414acc:	ldr	x21, [sp, #56]
  414ad0:	mov	x0, x21
  414ad4:	bl	403ff0 <strlen@plt>
  414ad8:	mov	x3, x0
  414adc:	mov	x2, x21
  414ae0:	mov	x1, x20
  414ae4:	mov	x0, x19
  414ae8:	bl	413c18 <wcrtomb@plt+0xeff8>
  414aec:	ldr	x0, [sp, #56]
  414af0:	bl	4047b0 <free@plt>
  414af4:	ldp	x19, x20, [sp, #16]
  414af8:	ldr	x21, [sp, #32]
  414afc:	ldp	x29, x30, [sp], #64
  414b00:	ret
  414b04:	mov	x0, x21
  414b08:	bl	450328 <argp_parse@@Base+0x10548>
  414b0c:	mov	x21, x0
  414b10:	str	x0, [sp, #56]
  414b14:	b	414ad0 <wcrtomb@plt+0xfeb0>
  414b18:	stp	x29, x30, [sp, #-64]!
  414b1c:	mov	x29, sp
  414b20:	str	x21, [sp, #32]
  414b24:	ldr	x21, [x0, #40]
  414b28:	mov	w0, #0x1                   	// #1
  414b2c:	stp	x19, x20, [sp, #16]
  414b30:	mov	x20, x1
  414b34:	mov	x19, x2
  414b38:	mov	x1, x21
  414b3c:	add	x2, sp, #0x38
  414b40:	bl	431410 <wcrtomb@plt+0x2c7f0>
  414b44:	tst	w0, #0xff
  414b48:	b.eq	414b84 <wcrtomb@plt+0xff64>  // b.none
  414b4c:	ldr	x21, [sp, #56]
  414b50:	mov	x0, x21
  414b54:	bl	403ff0 <strlen@plt>
  414b58:	mov	x3, x0
  414b5c:	mov	x2, x21
  414b60:	mov	x1, x20
  414b64:	mov	x0, x19
  414b68:	bl	413c18 <wcrtomb@plt+0xeff8>
  414b6c:	ldr	x0, [sp, #56]
  414b70:	bl	4047b0 <free@plt>
  414b74:	ldp	x19, x20, [sp, #16]
  414b78:	ldr	x21, [sp, #32]
  414b7c:	ldp	x29, x30, [sp], #64
  414b80:	ret
  414b84:	mov	x0, x21
  414b88:	bl	450328 <argp_parse@@Base+0x10548>
  414b8c:	mov	x21, x0
  414b90:	str	x0, [sp, #56]
  414b94:	b	414b50 <wcrtomb@plt+0xff30>
  414b98:	stp	x29, x30, [sp, #-112]!
  414b9c:	mov	x29, sp
  414ba0:	stp	x19, x20, [sp, #16]
  414ba4:	mov	x19, x2
  414ba8:	mov	x20, x0
  414bac:	mov	x0, x2
  414bb0:	mov	w2, #0x1                   	// #1
  414bb4:	stp	x21, x22, [sp, #32]
  414bb8:	mov	x21, x1
  414bbc:	add	x1, sp, #0x38
  414bc0:	bl	41f550 <wcrtomb@plt+0x1a930>
  414bc4:	tbnz	x1, #63, 414bdc <wcrtomb@plt+0xffbc>
  414bc8:	stp	x0, x1, [x20, #216]
  414bcc:	ldp	x19, x20, [sp, #16]
  414bd0:	ldp	x21, x22, [sp, #32]
  414bd4:	ldp	x29, x30, [sp], #112
  414bd8:	ret
  414bdc:	ldr	x0, [sp, #56]
  414be0:	cmp	x19, x0
  414be4:	b.cs	414bf0 <wcrtomb@plt+0xffd0>  // b.hs, b.nlast
  414be8:	ldrb	w0, [x0]
  414bec:	cbz	w0, 414c48 <wcrtomb@plt+0x10028>
  414bf0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  414bf4:	ldr	x0, [x0, #1136]
  414bf8:	cbz	x0, 414c00 <wcrtomb@plt+0xffe0>
  414bfc:	blr	x0
  414c00:	mov	w2, #0x5                   	// #5
  414c04:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414c08:	mov	x0, #0x0                   	// #0
  414c0c:	add	x1, x1, #0xd88
  414c10:	bl	4049c0 <dcgettext@plt>
  414c14:	mov	x2, x0
  414c18:	mov	x4, x19
  414c1c:	mov	x3, x21
  414c20:	mov	w1, #0x0                   	// #0
  414c24:	mov	w0, #0x0                   	// #0
  414c28:	bl	404050 <error@plt>
  414c2c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414c30:	mov	w1, #0x2                   	// #2
  414c34:	ldp	x19, x20, [sp, #16]
  414c38:	str	w1, [x0, #3568]
  414c3c:	ldp	x21, x22, [sp, #32]
  414c40:	ldp	x29, x30, [sp], #112
  414c44:	ret
  414c48:	add	x1, sp, #0x40
  414c4c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  414c50:	bl	446768 <argp_parse@@Base+0x6988>
  414c54:	mov	x20, x0
  414c58:	add	x1, sp, #0x58
  414c5c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  414c60:	bl	446868 <argp_parse@@Base+0x6a88>
  414c64:	mov	x22, x0
  414c68:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  414c6c:	ldr	x0, [x1, #1136]
  414c70:	cbz	x0, 414c78 <wcrtomb@plt+0x10058>
  414c74:	blr	x0
  414c78:	mov	w2, #0x5                   	// #5
  414c7c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414c80:	mov	x0, #0x0                   	// #0
  414c84:	add	x1, x1, #0xd58
  414c88:	bl	4049c0 <dcgettext@plt>
  414c8c:	mov	x2, x0
  414c90:	mov	w1, #0x0                   	// #0
  414c94:	mov	w0, #0x0                   	// #0
  414c98:	mov	x6, x22
  414c9c:	mov	x5, x20
  414ca0:	mov	x4, x19
  414ca4:	mov	x3, x21
  414ca8:	bl	404050 <error@plt>
  414cac:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414cb0:	mov	w1, #0x2                   	// #2
  414cb4:	str	w1, [x0, #3568]
  414cb8:	b	414bcc <wcrtomb@plt+0xffac>
  414cbc:	nop
  414cc0:	stp	x29, x30, [sp, #-112]!
  414cc4:	mov	x29, sp
  414cc8:	stp	x19, x20, [sp, #16]
  414ccc:	mov	x19, x2
  414cd0:	mov	x20, x0
  414cd4:	mov	x0, x2
  414cd8:	mov	w2, #0x1                   	// #1
  414cdc:	stp	x21, x22, [sp, #32]
  414ce0:	mov	x21, x1
  414ce4:	add	x1, sp, #0x38
  414ce8:	bl	41f550 <wcrtomb@plt+0x1a930>
  414cec:	tbnz	x1, #63, 414d04 <wcrtomb@plt+0x100e4>
  414cf0:	stp	x0, x1, [x20, #232]
  414cf4:	ldp	x19, x20, [sp, #16]
  414cf8:	ldp	x21, x22, [sp, #32]
  414cfc:	ldp	x29, x30, [sp], #112
  414d00:	ret
  414d04:	ldr	x0, [sp, #56]
  414d08:	cmp	x19, x0
  414d0c:	b.cs	414d18 <wcrtomb@plt+0x100f8>  // b.hs, b.nlast
  414d10:	ldrb	w0, [x0]
  414d14:	cbz	w0, 414d70 <wcrtomb@plt+0x10150>
  414d18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  414d1c:	ldr	x0, [x0, #1136]
  414d20:	cbz	x0, 414d28 <wcrtomb@plt+0x10108>
  414d24:	blr	x0
  414d28:	mov	w2, #0x5                   	// #5
  414d2c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414d30:	mov	x0, #0x0                   	// #0
  414d34:	add	x1, x1, #0xd88
  414d38:	bl	4049c0 <dcgettext@plt>
  414d3c:	mov	x2, x0
  414d40:	mov	x4, x19
  414d44:	mov	x3, x21
  414d48:	mov	w1, #0x0                   	// #0
  414d4c:	mov	w0, #0x0                   	// #0
  414d50:	bl	404050 <error@plt>
  414d54:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414d58:	mov	w1, #0x2                   	// #2
  414d5c:	ldp	x19, x20, [sp, #16]
  414d60:	str	w1, [x0, #3568]
  414d64:	ldp	x21, x22, [sp, #32]
  414d68:	ldp	x29, x30, [sp], #112
  414d6c:	ret
  414d70:	add	x1, sp, #0x40
  414d74:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  414d78:	bl	446768 <argp_parse@@Base+0x6988>
  414d7c:	mov	x20, x0
  414d80:	add	x1, sp, #0x58
  414d84:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  414d88:	bl	446868 <argp_parse@@Base+0x6a88>
  414d8c:	mov	x22, x0
  414d90:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  414d94:	ldr	x0, [x1, #1136]
  414d98:	cbz	x0, 414da0 <wcrtomb@plt+0x10180>
  414d9c:	blr	x0
  414da0:	mov	w2, #0x5                   	// #5
  414da4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414da8:	mov	x0, #0x0                   	// #0
  414dac:	add	x1, x1, #0xd58
  414db0:	bl	4049c0 <dcgettext@plt>
  414db4:	mov	x2, x0
  414db8:	mov	w1, #0x0                   	// #0
  414dbc:	mov	w0, #0x0                   	// #0
  414dc0:	mov	x6, x22
  414dc4:	mov	x5, x20
  414dc8:	mov	x4, x19
  414dcc:	mov	x3, x21
  414dd0:	bl	404050 <error@plt>
  414dd4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414dd8:	mov	w1, #0x2                   	// #2
  414ddc:	str	w1, [x0, #3568]
  414de0:	b	414cf4 <wcrtomb@plt+0x100d4>
  414de4:	nop
  414de8:	stp	x29, x30, [sp, #-112]!
  414dec:	mov	x29, sp
  414df0:	stp	x19, x20, [sp, #16]
  414df4:	mov	x19, x2
  414df8:	mov	x20, x0
  414dfc:	mov	x0, x2
  414e00:	mov	w2, #0x1                   	// #1
  414e04:	stp	x21, x22, [sp, #32]
  414e08:	mov	x21, x1
  414e0c:	add	x1, sp, #0x38
  414e10:	bl	41f550 <wcrtomb@plt+0x1a930>
  414e14:	tbnz	x1, #63, 414e2c <wcrtomb@plt+0x1020c>
  414e18:	stp	x0, x1, [x20, #248]
  414e1c:	ldp	x19, x20, [sp, #16]
  414e20:	ldp	x21, x22, [sp, #32]
  414e24:	ldp	x29, x30, [sp], #112
  414e28:	ret
  414e2c:	ldr	x0, [sp, #56]
  414e30:	cmp	x19, x0
  414e34:	b.cs	414e40 <wcrtomb@plt+0x10220>  // b.hs, b.nlast
  414e38:	ldrb	w0, [x0]
  414e3c:	cbz	w0, 414e98 <wcrtomb@plt+0x10278>
  414e40:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  414e44:	ldr	x0, [x0, #1136]
  414e48:	cbz	x0, 414e50 <wcrtomb@plt+0x10230>
  414e4c:	blr	x0
  414e50:	mov	w2, #0x5                   	// #5
  414e54:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414e58:	mov	x0, #0x0                   	// #0
  414e5c:	add	x1, x1, #0xd88
  414e60:	bl	4049c0 <dcgettext@plt>
  414e64:	mov	x2, x0
  414e68:	mov	x4, x19
  414e6c:	mov	x3, x21
  414e70:	mov	w1, #0x0                   	// #0
  414e74:	mov	w0, #0x0                   	// #0
  414e78:	bl	404050 <error@plt>
  414e7c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414e80:	mov	w1, #0x2                   	// #2
  414e84:	ldp	x19, x20, [sp, #16]
  414e88:	str	w1, [x0, #3568]
  414e8c:	ldp	x21, x22, [sp, #32]
  414e90:	ldp	x29, x30, [sp], #112
  414e94:	ret
  414e98:	add	x1, sp, #0x40
  414e9c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  414ea0:	bl	446768 <argp_parse@@Base+0x6988>
  414ea4:	mov	x20, x0
  414ea8:	add	x1, sp, #0x58
  414eac:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  414eb0:	bl	446868 <argp_parse@@Base+0x6a88>
  414eb4:	mov	x22, x0
  414eb8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  414ebc:	ldr	x0, [x1, #1136]
  414ec0:	cbz	x0, 414ec8 <wcrtomb@plt+0x102a8>
  414ec4:	blr	x0
  414ec8:	mov	w2, #0x5                   	// #5
  414ecc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414ed0:	mov	x0, #0x0                   	// #0
  414ed4:	add	x1, x1, #0xd58
  414ed8:	bl	4049c0 <dcgettext@plt>
  414edc:	mov	x2, x0
  414ee0:	mov	w1, #0x0                   	// #0
  414ee4:	mov	w0, #0x0                   	// #0
  414ee8:	mov	x6, x22
  414eec:	mov	x5, x20
  414ef0:	mov	x4, x19
  414ef4:	mov	x3, x21
  414ef8:	bl	404050 <error@plt>
  414efc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414f00:	mov	w1, #0x2                   	// #2
  414f04:	str	w1, [x0, #3568]
  414f08:	b	414e1c <wcrtomb@plt+0x101fc>
  414f0c:	nop
  414f10:	stp	x29, x30, [sp, #-112]!
  414f14:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  414f18:	mov	x29, sp
  414f1c:	stp	x21, x22, [sp, #32]
  414f20:	mov	x22, x1
  414f24:	add	x1, sp, #0x38
  414f28:	stp	x19, x20, [sp, #16]
  414f2c:	mov	x20, x2
  414f30:	mov	x2, #0x0                   	// #0
  414f34:	mov	x19, x0
  414f38:	mov	x0, x20
  414f3c:	bl	41efb8 <wcrtomb@plt+0x1a398>
  414f40:	mov	x21, x0
  414f44:	bl	404ad0 <__errno_location@plt>
  414f48:	ldr	w2, [x0]
  414f4c:	cmp	w2, #0x16
  414f50:	b.eq	414ff0 <wcrtomb@plt+0x103d0>  // b.none
  414f54:	ldr	x0, [sp, #56]
  414f58:	ldrb	w0, [x0]
  414f5c:	cbnz	w0, 414ff0 <wcrtomb@plt+0x103d0>
  414f60:	cmp	w2, #0x22
  414f64:	b.eq	415010 <wcrtomb@plt+0x103f0>  // b.none
  414f68:	ldp	x2, x0, [x19, #288]
  414f6c:	cmp	x2, x0
  414f70:	b.cc	414fcc <wcrtomb@plt+0x103ac>  // b.lo, b.ul, b.last
  414f74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  414f78:	ldr	x0, [x0, #1136]
  414f7c:	cbz	x0, 414f84 <wcrtomb@plt+0x10364>
  414f80:	blr	x0
  414f84:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  414f88:	add	x1, x1, #0xdb8
  414f8c:	mov	w2, #0x5                   	// #5
  414f90:	mov	x0, #0x0                   	// #0
  414f94:	bl	4049c0 <dcgettext@plt>
  414f98:	mov	w1, #0x0                   	// #0
  414f9c:	mov	x2, x0
  414fa0:	mov	x4, x20
  414fa4:	mov	w0, #0x0                   	// #0
  414fa8:	mov	x3, x22
  414fac:	bl	404050 <error@plt>
  414fb0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  414fb4:	mov	w1, #0x2                   	// #2
  414fb8:	str	w1, [x0, #3568]
  414fbc:	ldp	x19, x20, [sp, #16]
  414fc0:	ldp	x21, x22, [sp, #32]
  414fc4:	ldp	x29, x30, [sp], #112
  414fc8:	ret
  414fcc:	ldr	x0, [x19, #304]
  414fd0:	add	x1, x2, #0x1
  414fd4:	str	x1, [x19, #288]
  414fd8:	ldp	x19, x20, [sp, #16]
  414fdc:	add	x2, x0, x2, lsl #4
  414fe0:	str	x21, [x2, #8]
  414fe4:	ldp	x21, x22, [sp, #32]
  414fe8:	ldp	x29, x30, [sp], #112
  414fec:	ret
  414ff0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  414ff4:	ldr	x0, [x0, #1136]
  414ff8:	cbz	x0, 415000 <wcrtomb@plt+0x103e0>
  414ffc:	blr	x0
  415000:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415004:	mov	w2, #0x5                   	// #5
  415008:	add	x1, x1, #0xd88
  41500c:	b	414f90 <wcrtomb@plt+0x10370>
  415010:	add	x1, sp, #0x40
  415014:	mov	x0, #0x0                   	// #0
  415018:	bl	446768 <argp_parse@@Base+0x6988>
  41501c:	mov	x19, x0
  415020:	add	x1, sp, #0x58
  415024:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  415028:	bl	446868 <argp_parse@@Base+0x6a88>
  41502c:	mov	x21, x0
  415030:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415034:	ldr	x0, [x1, #1136]
  415038:	cbz	x0, 415040 <wcrtomb@plt+0x10420>
  41503c:	blr	x0
  415040:	mov	w2, #0x5                   	// #5
  415044:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415048:	mov	x0, #0x0                   	// #0
  41504c:	add	x1, x1, #0xd58
  415050:	bl	4049c0 <dcgettext@plt>
  415054:	mov	x2, x0
  415058:	mov	w1, #0x0                   	// #0
  41505c:	mov	w0, #0x0                   	// #0
  415060:	mov	x6, x21
  415064:	mov	x5, x19
  415068:	mov	x4, x20
  41506c:	mov	x3, x22
  415070:	bl	404050 <error@plt>
  415074:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415078:	mov	w1, #0x2                   	// #2
  41507c:	str	w1, [x0, #3568]
  415080:	b	414fbc <wcrtomb@plt+0x1039c>
  415084:	nop
  415088:	stp	x29, x30, [sp, #-128]!
  41508c:	mov	x29, sp
  415090:	stp	x19, x20, [sp, #16]
  415094:	mov	x20, x2
  415098:	stp	x21, x22, [sp, #32]
  41509c:	mov	x22, x1
  4150a0:	stp	x23, x24, [sp, #48]
  4150a4:	mov	x23, x0
  4150a8:	str	xzr, [x0, #288]
  4150ac:	ldrb	w0, [x2]
  4150b0:	sub	w0, w0, #0x30
  4150b4:	cmp	w0, #0x9
  4150b8:	b.hi	4151d0 <wcrtomb@plt+0x105b0>  // b.pmore
  4150bc:	bl	404ad0 <__errno_location@plt>
  4150c0:	mov	w19, #0x1                   	// #1
  4150c4:	mov	x24, x0
  4150c8:	b	41510c <wcrtomb@plt+0x104ec>
  4150cc:	mov	x21, x0
  4150d0:	ldr	w0, [x24]
  4150d4:	cmp	w0, #0x22
  4150d8:	b.eq	41522c <wcrtomb@plt+0x1060c>  // b.none
  4150dc:	ldr	x3, [sp, #72]
  4150e0:	eor	w0, w19, #0x1
  4150e4:	add	x20, x3, #0x1
  4150e8:	ldrb	w5, [x3]
  4150ec:	cmp	w5, #0x2c
  4150f0:	cbz	w5, 415174 <wcrtomb@plt+0x10554>
  4150f4:	b.ne	4152b0 <wcrtomb@plt+0x10690>  // b.any
  4150f8:	ldrb	w3, [x3, #1]
  4150fc:	mov	w19, w0
  415100:	sub	w3, w3, #0x30
  415104:	cmp	w3, #0x9
  415108:	b.hi	4151d0 <wcrtomb@plt+0x105b0>  // b.pmore
  41510c:	str	wzr, [x24]
  415110:	add	x1, sp, #0x48
  415114:	mov	x0, x20
  415118:	mov	w3, #0x0                   	// #0
  41511c:	mov	w2, #0xa                   	// #10
  415120:	bl	404390 <__strtol_internal@plt>
  415124:	cbnz	w19, 4150cc <wcrtomb@plt+0x104ac>
  415128:	ldr	w1, [x24]
  41512c:	cmp	w1, #0x22
  415130:	b.eq	41522c <wcrtomb@plt+0x1060c>  // b.none
  415134:	ldp	x1, x3, [x23, #288]
  415138:	add	x4, x1, #0x1
  41513c:	lsl	x2, x1, #4
  415140:	cmp	x1, x3
  415144:	b.cs	415310 <wcrtomb@plt+0x106f0>  // b.hs, b.nlast
  415148:	ldr	x1, [x23, #304]
  41514c:	str	x4, [x23, #288]
  415150:	add	x3, x1, x2
  415154:	str	x21, [x1, x2]
  415158:	str	x0, [x3, #8]
  41515c:	eor	w0, w19, #0x1
  415160:	ldr	x3, [sp, #72]
  415164:	add	x20, x3, #0x1
  415168:	ldrb	w5, [x3]
  41516c:	cmp	w5, #0x2c
  415170:	cbnz	w5, 4150f4 <wcrtomb@plt+0x104d4>
  415174:	cbz	w19, 415218 <wcrtomb@plt+0x105f8>
  415178:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41517c:	ldr	x0, [x0, #1136]
  415180:	cbz	x0, 415188 <wcrtomb@plt+0x10568>
  415184:	blr	x0
  415188:	mov	w2, #0x5                   	// #5
  41518c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415190:	mov	x0, #0x0                   	// #0
  415194:	add	x1, x1, #0xe20
  415198:	bl	4049c0 <dcgettext@plt>
  41519c:	mov	x2, x0
  4151a0:	mov	x3, x22
  4151a4:	mov	w1, #0x0                   	// #0
  4151a8:	mov	w0, #0x0                   	// #0
  4151ac:	bl	404050 <error@plt>
  4151b0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4151b4:	mov	w1, #0x2                   	// #2
  4151b8:	ldp	x19, x20, [sp, #16]
  4151bc:	str	w1, [x0, #3568]
  4151c0:	ldp	x21, x22, [sp, #32]
  4151c4:	ldp	x23, x24, [sp, #48]
  4151c8:	ldp	x29, x30, [sp], #128
  4151cc:	ret
  4151d0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4151d4:	ldr	x0, [x0, #1136]
  4151d8:	cbz	x0, 4151e0 <wcrtomb@plt+0x105c0>
  4151dc:	blr	x0
  4151e0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4151e4:	add	x1, x1, #0xd88
  4151e8:	mov	w2, #0x5                   	// #5
  4151ec:	mov	x0, #0x0                   	// #0
  4151f0:	bl	4049c0 <dcgettext@plt>
  4151f4:	mov	w1, #0x0                   	// #0
  4151f8:	mov	x2, x0
  4151fc:	mov	x4, x20
  415200:	mov	w0, #0x0                   	// #0
  415204:	mov	x3, x22
  415208:	bl	404050 <error@plt>
  41520c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415210:	mov	w1, #0x2                   	// #2
  415214:	str	w1, [x0, #3568]
  415218:	ldp	x19, x20, [sp, #16]
  41521c:	ldp	x21, x22, [sp, #32]
  415220:	ldp	x23, x24, [sp, #48]
  415224:	ldp	x29, x30, [sp], #128
  415228:	ret
  41522c:	add	x1, sp, #0x50
  415230:	mov	x0, #0x0                   	// #0
  415234:	bl	446768 <argp_parse@@Base+0x6988>
  415238:	mov	x19, x0
  41523c:	add	x1, sp, #0x68
  415240:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  415244:	bl	446868 <argp_parse@@Base+0x6a88>
  415248:	mov	x21, x0
  41524c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415250:	ldr	x0, [x1, #1136]
  415254:	cbz	x0, 41525c <wcrtomb@plt+0x1063c>
  415258:	blr	x0
  41525c:	mov	w2, #0x5                   	// #5
  415260:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415264:	mov	x0, #0x0                   	// #0
  415268:	add	x1, x1, #0xd58
  41526c:	bl	4049c0 <dcgettext@plt>
  415270:	mov	x2, x0
  415274:	mov	x6, x21
  415278:	mov	x5, x19
  41527c:	mov	x4, x20
  415280:	mov	x3, x22
  415284:	mov	w1, #0x0                   	// #0
  415288:	mov	w0, #0x0                   	// #0
  41528c:	bl	404050 <error@plt>
  415290:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415294:	mov	w1, #0x2                   	// #2
  415298:	ldp	x19, x20, [sp, #16]
  41529c:	str	w1, [x0, #3568]
  4152a0:	ldp	x21, x22, [sp, #32]
  4152a4:	ldp	x23, x24, [sp, #48]
  4152a8:	ldp	x29, x30, [sp], #128
  4152ac:	ret
  4152b0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4152b4:	ldr	x0, [x0, #1136]
  4152b8:	cbz	x0, 4152c0 <wcrtomb@plt+0x106a0>
  4152bc:	blr	x0
  4152c0:	mov	w2, #0x5                   	// #5
  4152c4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4152c8:	mov	x0, #0x0                   	// #0
  4152cc:	add	x1, x1, #0xde0
  4152d0:	bl	4049c0 <dcgettext@plt>
  4152d4:	mov	x2, x0
  4152d8:	ldr	x4, [sp, #72]
  4152dc:	mov	x3, x22
  4152e0:	mov	w1, #0x0                   	// #0
  4152e4:	mov	w0, #0x0                   	// #0
  4152e8:	ldrb	w4, [x4]
  4152ec:	bl	404050 <error@plt>
  4152f0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4152f4:	mov	w1, #0x2                   	// #2
  4152f8:	ldp	x19, x20, [sp, #16]
  4152fc:	str	w1, [x0, #3568]
  415300:	ldp	x21, x22, [sp, #32]
  415304:	ldp	x23, x24, [sp, #48]
  415308:	ldp	x29, x30, [sp], #128
  41530c:	ret
  415310:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415314:	ldr	x0, [x0, #1136]
  415318:	cbz	x0, 415320 <wcrtomb@plt+0x10700>
  41531c:	blr	x0
  415320:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415324:	mov	w2, #0x5                   	// #5
  415328:	add	x1, x1, #0xdb8
  41532c:	b	4151ec <wcrtomb@plt+0x105cc>
  415330:	stp	x29, x30, [sp, #-112]!
  415334:	mov	x3, #0xffffffff            	// #4294967295
  415338:	mov	x29, sp
  41533c:	stp	x21, x22, [sp, #32]
  415340:	mov	x22, x1
  415344:	add	x1, sp, #0x38
  415348:	stp	x19, x20, [sp, #16]
  41534c:	mov	x19, x2
  415350:	mov	x2, #0x0                   	// #0
  415354:	mov	x20, x0
  415358:	mov	x0, x19
  41535c:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415360:	mov	x21, x0
  415364:	bl	404ad0 <__errno_location@plt>
  415368:	ldr	w0, [x0]
  41536c:	cmp	w0, #0x16
  415370:	b.eq	41539c <wcrtomb@plt+0x1077c>  // b.none
  415374:	ldr	x1, [sp, #56]
  415378:	ldrb	w1, [x1]
  41537c:	cbnz	w1, 41539c <wcrtomb@plt+0x1077c>
  415380:	cmp	w0, #0x22
  415384:	b.eq	4153f4 <wcrtomb@plt+0x107d4>  // b.none
  415388:	str	w21, [x20, #112]
  41538c:	ldp	x19, x20, [sp, #16]
  415390:	ldp	x21, x22, [sp, #32]
  415394:	ldp	x29, x30, [sp], #112
  415398:	ret
  41539c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4153a0:	ldr	x0, [x0, #1136]
  4153a4:	cbz	x0, 4153ac <wcrtomb@plt+0x1078c>
  4153a8:	blr	x0
  4153ac:	mov	w2, #0x5                   	// #5
  4153b0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4153b4:	mov	x0, #0x0                   	// #0
  4153b8:	add	x1, x1, #0xd88
  4153bc:	bl	4049c0 <dcgettext@plt>
  4153c0:	mov	x2, x0
  4153c4:	mov	x4, x19
  4153c8:	mov	x3, x22
  4153cc:	mov	w1, #0x0                   	// #0
  4153d0:	mov	w0, #0x0                   	// #0
  4153d4:	bl	404050 <error@plt>
  4153d8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4153dc:	mov	w1, #0x2                   	// #2
  4153e0:	ldp	x19, x20, [sp, #16]
  4153e4:	str	w1, [x0, #3568]
  4153e8:	ldp	x21, x22, [sp, #32]
  4153ec:	ldp	x29, x30, [sp], #112
  4153f0:	ret
  4153f4:	add	x1, sp, #0x40
  4153f8:	mov	x0, #0x0                   	// #0
  4153fc:	bl	446768 <argp_parse@@Base+0x6988>
  415400:	mov	x20, x0
  415404:	add	x1, sp, #0x58
  415408:	mov	x0, #0xffffffff            	// #4294967295
  41540c:	bl	446868 <argp_parse@@Base+0x6a88>
  415410:	mov	x21, x0
  415414:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415418:	ldr	x0, [x1, #1136]
  41541c:	cbz	x0, 415424 <wcrtomb@plt+0x10804>
  415420:	blr	x0
  415424:	mov	w2, #0x5                   	// #5
  415428:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41542c:	mov	x0, #0x0                   	// #0
  415430:	add	x1, x1, #0xd58
  415434:	bl	4049c0 <dcgettext@plt>
  415438:	mov	x2, x0
  41543c:	mov	w1, #0x0                   	// #0
  415440:	mov	w0, #0x0                   	// #0
  415444:	mov	x6, x21
  415448:	mov	x5, x20
  41544c:	mov	x4, x19
  415450:	mov	x3, x22
  415454:	bl	404050 <error@plt>
  415458:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41545c:	mov	w1, #0x2                   	// #2
  415460:	str	w1, [x0, #3568]
  415464:	b	41538c <wcrtomb@plt+0x1076c>
  415468:	stp	x29, x30, [sp, #-112]!
  41546c:	mov	x3, #0xffffffff            	// #4294967295
  415470:	mov	x29, sp
  415474:	stp	x21, x22, [sp, #32]
  415478:	mov	x22, x1
  41547c:	add	x1, sp, #0x38
  415480:	stp	x19, x20, [sp, #16]
  415484:	mov	x19, x2
  415488:	mov	x2, #0x0                   	// #0
  41548c:	mov	x20, x0
  415490:	mov	x0, x19
  415494:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415498:	mov	x21, x0
  41549c:	bl	404ad0 <__errno_location@plt>
  4154a0:	ldr	w0, [x0]
  4154a4:	cmp	w0, #0x16
  4154a8:	b.eq	4154d4 <wcrtomb@plt+0x108b4>  // b.none
  4154ac:	ldr	x1, [sp, #56]
  4154b0:	ldrb	w1, [x1]
  4154b4:	cbnz	w1, 4154d4 <wcrtomb@plt+0x108b4>
  4154b8:	cmp	w0, #0x22
  4154bc:	b.eq	41552c <wcrtomb@plt+0x1090c>  // b.none
  4154c0:	str	w21, [x20, #280]
  4154c4:	ldp	x19, x20, [sp, #16]
  4154c8:	ldp	x21, x22, [sp, #32]
  4154cc:	ldp	x29, x30, [sp], #112
  4154d0:	ret
  4154d4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4154d8:	ldr	x0, [x0, #1136]
  4154dc:	cbz	x0, 4154e4 <wcrtomb@plt+0x108c4>
  4154e0:	blr	x0
  4154e4:	mov	w2, #0x5                   	// #5
  4154e8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4154ec:	mov	x0, #0x0                   	// #0
  4154f0:	add	x1, x1, #0xd88
  4154f4:	bl	4049c0 <dcgettext@plt>
  4154f8:	mov	x2, x0
  4154fc:	mov	x4, x19
  415500:	mov	x3, x22
  415504:	mov	w1, #0x0                   	// #0
  415508:	mov	w0, #0x0                   	// #0
  41550c:	bl	404050 <error@plt>
  415510:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415514:	mov	w1, #0x2                   	// #2
  415518:	ldp	x19, x20, [sp, #16]
  41551c:	str	w1, [x0, #3568]
  415520:	ldp	x21, x22, [sp, #32]
  415524:	ldp	x29, x30, [sp], #112
  415528:	ret
  41552c:	add	x1, sp, #0x40
  415530:	mov	x0, #0x0                   	// #0
  415534:	bl	446768 <argp_parse@@Base+0x6988>
  415538:	mov	x20, x0
  41553c:	add	x1, sp, #0x58
  415540:	mov	x0, #0xffffffff            	// #4294967295
  415544:	bl	446868 <argp_parse@@Base+0x6a88>
  415548:	mov	x21, x0
  41554c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415550:	ldr	x0, [x1, #1136]
  415554:	cbz	x0, 41555c <wcrtomb@plt+0x1093c>
  415558:	blr	x0
  41555c:	mov	w2, #0x5                   	// #5
  415560:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415564:	mov	x0, #0x0                   	// #0
  415568:	add	x1, x1, #0xd58
  41556c:	bl	4049c0 <dcgettext@plt>
  415570:	mov	x2, x0
  415574:	mov	w1, #0x0                   	// #0
  415578:	mov	w0, #0x0                   	// #0
  41557c:	mov	x6, x21
  415580:	mov	x5, x20
  415584:	mov	x4, x19
  415588:	mov	x3, x22
  41558c:	bl	404050 <error@plt>
  415590:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415594:	mov	w1, #0x2                   	// #2
  415598:	str	w1, [x0, #3568]
  41559c:	b	4154c4 <wcrtomb@plt+0x108a4>
  4155a0:	stp	x29, x30, [sp, #-112]!
  4155a4:	mov	x3, #0xffffffff            	// #4294967295
  4155a8:	mov	x29, sp
  4155ac:	stp	x21, x22, [sp, #32]
  4155b0:	mov	x22, x1
  4155b4:	add	x1, sp, #0x38
  4155b8:	stp	x19, x20, [sp, #16]
  4155bc:	mov	x19, x2
  4155c0:	mov	x2, #0x0                   	// #0
  4155c4:	mov	x20, x0
  4155c8:	mov	x0, x19
  4155cc:	bl	41efb8 <wcrtomb@plt+0x1a398>
  4155d0:	mov	x21, x0
  4155d4:	bl	404ad0 <__errno_location@plt>
  4155d8:	ldr	w0, [x0]
  4155dc:	cmp	w0, #0x16
  4155e0:	b.eq	41560c <wcrtomb@plt+0x109ec>  // b.none
  4155e4:	ldr	x1, [sp, #56]
  4155e8:	ldrb	w1, [x1]
  4155ec:	cbnz	w1, 41560c <wcrtomb@plt+0x109ec>
  4155f0:	cmp	w0, #0x22
  4155f4:	b.eq	415664 <wcrtomb@plt+0x10a44>  // b.none
  4155f8:	str	w21, [x20, #276]
  4155fc:	ldp	x19, x20, [sp, #16]
  415600:	ldp	x21, x22, [sp, #32]
  415604:	ldp	x29, x30, [sp], #112
  415608:	ret
  41560c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415610:	ldr	x0, [x0, #1136]
  415614:	cbz	x0, 41561c <wcrtomb@plt+0x109fc>
  415618:	blr	x0
  41561c:	mov	w2, #0x5                   	// #5
  415620:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415624:	mov	x0, #0x0                   	// #0
  415628:	add	x1, x1, #0xd88
  41562c:	bl	4049c0 <dcgettext@plt>
  415630:	mov	x2, x0
  415634:	mov	x4, x19
  415638:	mov	x3, x22
  41563c:	mov	w1, #0x0                   	// #0
  415640:	mov	w0, #0x0                   	// #0
  415644:	bl	404050 <error@plt>
  415648:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41564c:	mov	w1, #0x2                   	// #2
  415650:	ldp	x19, x20, [sp, #16]
  415654:	str	w1, [x0, #3568]
  415658:	ldp	x21, x22, [sp, #32]
  41565c:	ldp	x29, x30, [sp], #112
  415660:	ret
  415664:	add	x1, sp, #0x40
  415668:	mov	x0, #0x0                   	// #0
  41566c:	bl	446768 <argp_parse@@Base+0x6988>
  415670:	mov	x20, x0
  415674:	add	x1, sp, #0x58
  415678:	mov	x0, #0xffffffff            	// #4294967295
  41567c:	bl	446868 <argp_parse@@Base+0x6a88>
  415680:	mov	x21, x0
  415684:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415688:	ldr	x0, [x1, #1136]
  41568c:	cbz	x0, 415694 <wcrtomb@plt+0x10a74>
  415690:	blr	x0
  415694:	mov	w2, #0x5                   	// #5
  415698:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41569c:	mov	x0, #0x0                   	// #0
  4156a0:	add	x1, x1, #0xd58
  4156a4:	bl	4049c0 <dcgettext@plt>
  4156a8:	mov	x2, x0
  4156ac:	mov	w1, #0x0                   	// #0
  4156b0:	mov	w0, #0x0                   	// #0
  4156b4:	mov	x6, x21
  4156b8:	mov	x5, x20
  4156bc:	mov	x4, x19
  4156c0:	mov	x3, x22
  4156c4:	bl	404050 <error@plt>
  4156c8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4156cc:	mov	w1, #0x2                   	// #2
  4156d0:	str	w1, [x0, #3568]
  4156d4:	b	4155fc <wcrtomb@plt+0x109dc>
  4156d8:	stp	x29, x30, [sp, #-112]!
  4156dc:	mov	x3, #0xffffffffffffffff    	// #-1
  4156e0:	mov	x29, sp
  4156e4:	stp	x21, x22, [sp, #32]
  4156e8:	mov	x21, x1
  4156ec:	add	x1, sp, #0x38
  4156f0:	stp	x19, x20, [sp, #16]
  4156f4:	mov	x19, x2
  4156f8:	mov	x2, #0x0                   	// #0
  4156fc:	mov	x0, x19
  415700:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415704:	mov	x20, x0
  415708:	bl	404ad0 <__errno_location@plt>
  41570c:	ldr	w0, [x0]
  415710:	cmp	w0, #0x16
  415714:	b.eq	415744 <wcrtomb@plt+0x10b24>  // b.none
  415718:	ldr	x1, [sp, #56]
  41571c:	ldrb	w1, [x1]
  415720:	cbnz	w1, 415744 <wcrtomb@plt+0x10b24>
  415724:	cmp	w0, #0x22
  415728:	b.eq	41579c <wcrtomb@plt+0x10b7c>  // b.none
  41572c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415730:	str	x20, [x0, #48]
  415734:	ldp	x19, x20, [sp, #16]
  415738:	ldp	x21, x22, [sp, #32]
  41573c:	ldp	x29, x30, [sp], #112
  415740:	ret
  415744:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415748:	ldr	x0, [x0, #1136]
  41574c:	cbz	x0, 415754 <wcrtomb@plt+0x10b34>
  415750:	blr	x0
  415754:	mov	w2, #0x5                   	// #5
  415758:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41575c:	mov	x0, #0x0                   	// #0
  415760:	add	x1, x1, #0xd88
  415764:	bl	4049c0 <dcgettext@plt>
  415768:	mov	x2, x0
  41576c:	mov	x4, x19
  415770:	mov	x3, x21
  415774:	mov	w1, #0x0                   	// #0
  415778:	mov	w0, #0x0                   	// #0
  41577c:	bl	404050 <error@plt>
  415780:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415784:	mov	w1, #0x2                   	// #2
  415788:	ldp	x19, x20, [sp, #16]
  41578c:	str	w1, [x0, #3568]
  415790:	ldp	x21, x22, [sp, #32]
  415794:	ldp	x29, x30, [sp], #112
  415798:	ret
  41579c:	add	x1, sp, #0x40
  4157a0:	mov	x0, #0x0                   	// #0
  4157a4:	bl	446768 <argp_parse@@Base+0x6988>
  4157a8:	mov	x20, x0
  4157ac:	add	x1, sp, #0x58
  4157b0:	mov	x0, #0xffffffffffffffff    	// #-1
  4157b4:	bl	446868 <argp_parse@@Base+0x6a88>
  4157b8:	mov	x22, x0
  4157bc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4157c0:	ldr	x0, [x1, #1136]
  4157c4:	cbz	x0, 4157cc <wcrtomb@plt+0x10bac>
  4157c8:	blr	x0
  4157cc:	mov	w2, #0x5                   	// #5
  4157d0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4157d4:	mov	x0, #0x0                   	// #0
  4157d8:	add	x1, x1, #0xd58
  4157dc:	bl	4049c0 <dcgettext@plt>
  4157e0:	mov	x2, x0
  4157e4:	mov	w1, #0x0                   	// #0
  4157e8:	mov	w0, #0x0                   	// #0
  4157ec:	mov	x6, x22
  4157f0:	mov	x5, x20
  4157f4:	mov	x4, x19
  4157f8:	mov	x3, x21
  4157fc:	bl	404050 <error@plt>
  415800:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415804:	mov	w1, #0x2                   	// #2
  415808:	str	w1, [x0, #3568]
  41580c:	b	415734 <wcrtomb@plt+0x10b14>
  415810:	stp	x29, x30, [sp, #-112]!
  415814:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  415818:	mov	x29, sp
  41581c:	stp	x21, x22, [sp, #32]
  415820:	mov	x22, x1
  415824:	add	x1, sp, #0x38
  415828:	stp	x19, x20, [sp, #16]
  41582c:	mov	x19, x2
  415830:	mov	x2, #0x0                   	// #0
  415834:	mov	x20, x0
  415838:	mov	x0, x19
  41583c:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415840:	mov	x21, x0
  415844:	bl	404ad0 <__errno_location@plt>
  415848:	ldr	w0, [x0]
  41584c:	cmp	w0, #0x16
  415850:	b.eq	41587c <wcrtomb@plt+0x10c5c>  // b.none
  415854:	ldr	x1, [sp, #56]
  415858:	ldrb	w1, [x1]
  41585c:	cbnz	w1, 41587c <wcrtomb@plt+0x10c5c>
  415860:	cmp	w0, #0x22
  415864:	b.eq	4158d4 <wcrtomb@plt+0x10cb4>  // b.none
  415868:	str	x21, [x20, #136]
  41586c:	ldp	x19, x20, [sp, #16]
  415870:	ldp	x21, x22, [sp, #32]
  415874:	ldp	x29, x30, [sp], #112
  415878:	ret
  41587c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415880:	ldr	x0, [x0, #1136]
  415884:	cbz	x0, 41588c <wcrtomb@plt+0x10c6c>
  415888:	blr	x0
  41588c:	mov	w2, #0x5                   	// #5
  415890:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415894:	mov	x0, #0x0                   	// #0
  415898:	add	x1, x1, #0xd88
  41589c:	bl	4049c0 <dcgettext@plt>
  4158a0:	mov	x2, x0
  4158a4:	mov	x4, x19
  4158a8:	mov	x3, x22
  4158ac:	mov	w1, #0x0                   	// #0
  4158b0:	mov	w0, #0x0                   	// #0
  4158b4:	bl	404050 <error@plt>
  4158b8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4158bc:	mov	w1, #0x2                   	// #2
  4158c0:	ldp	x19, x20, [sp, #16]
  4158c4:	str	w1, [x0, #3568]
  4158c8:	ldp	x21, x22, [sp, #32]
  4158cc:	ldp	x29, x30, [sp], #112
  4158d0:	ret
  4158d4:	add	x1, sp, #0x40
  4158d8:	mov	x0, #0x0                   	// #0
  4158dc:	bl	446768 <argp_parse@@Base+0x6988>
  4158e0:	mov	x20, x0
  4158e4:	add	x1, sp, #0x58
  4158e8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4158ec:	bl	446868 <argp_parse@@Base+0x6a88>
  4158f0:	mov	x21, x0
  4158f4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4158f8:	ldr	x0, [x1, #1136]
  4158fc:	cbz	x0, 415904 <wcrtomb@plt+0x10ce4>
  415900:	blr	x0
  415904:	mov	w2, #0x5                   	// #5
  415908:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41590c:	mov	x0, #0x0                   	// #0
  415910:	add	x1, x1, #0xd58
  415914:	bl	4049c0 <dcgettext@plt>
  415918:	mov	x2, x0
  41591c:	mov	w1, #0x0                   	// #0
  415920:	mov	w0, #0x0                   	// #0
  415924:	mov	x6, x21
  415928:	mov	x5, x20
  41592c:	mov	x4, x19
  415930:	mov	x3, x22
  415934:	bl	404050 <error@plt>
  415938:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41593c:	mov	w1, #0x2                   	// #2
  415940:	str	w1, [x0, #3568]
  415944:	b	41586c <wcrtomb@plt+0x10c4c>
  415948:	stp	x29, x30, [sp, #-112]!
  41594c:	mov	x3, #0xffffffff            	// #4294967295
  415950:	mov	x29, sp
  415954:	stp	x21, x22, [sp, #32]
  415958:	mov	x22, x1
  41595c:	add	x1, sp, #0x38
  415960:	stp	x19, x20, [sp, #16]
  415964:	mov	x19, x2
  415968:	mov	x2, #0x0                   	// #0
  41596c:	mov	x20, x0
  415970:	mov	x0, x19
  415974:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415978:	mov	x21, x0
  41597c:	bl	404ad0 <__errno_location@plt>
  415980:	ldr	w0, [x0]
  415984:	cmp	w0, #0x16
  415988:	b.eq	4159b4 <wcrtomb@plt+0x10d94>  // b.none
  41598c:	ldr	x1, [sp, #56]
  415990:	ldrb	w1, [x1]
  415994:	cbnz	w1, 4159b4 <wcrtomb@plt+0x10d94>
  415998:	cmp	w0, #0x22
  41599c:	b.eq	415a0c <wcrtomb@plt+0x10dec>  // b.none
  4159a0:	str	w21, [x20, #116]
  4159a4:	ldp	x19, x20, [sp, #16]
  4159a8:	ldp	x21, x22, [sp, #32]
  4159ac:	ldp	x29, x30, [sp], #112
  4159b0:	ret
  4159b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4159b8:	ldr	x0, [x0, #1136]
  4159bc:	cbz	x0, 4159c4 <wcrtomb@plt+0x10da4>
  4159c0:	blr	x0
  4159c4:	mov	w2, #0x5                   	// #5
  4159c8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4159cc:	mov	x0, #0x0                   	// #0
  4159d0:	add	x1, x1, #0xd88
  4159d4:	bl	4049c0 <dcgettext@plt>
  4159d8:	mov	x2, x0
  4159dc:	mov	x4, x19
  4159e0:	mov	x3, x22
  4159e4:	mov	w1, #0x0                   	// #0
  4159e8:	mov	w0, #0x0                   	// #0
  4159ec:	bl	404050 <error@plt>
  4159f0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4159f4:	mov	w1, #0x2                   	// #2
  4159f8:	ldp	x19, x20, [sp, #16]
  4159fc:	str	w1, [x0, #3568]
  415a00:	ldp	x21, x22, [sp, #32]
  415a04:	ldp	x29, x30, [sp], #112
  415a08:	ret
  415a0c:	add	x1, sp, #0x40
  415a10:	mov	x0, #0x0                   	// #0
  415a14:	bl	446768 <argp_parse@@Base+0x6988>
  415a18:	mov	x20, x0
  415a1c:	add	x1, sp, #0x58
  415a20:	mov	x0, #0xffffffff            	// #4294967295
  415a24:	bl	446868 <argp_parse@@Base+0x6a88>
  415a28:	mov	x21, x0
  415a2c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415a30:	ldr	x0, [x1, #1136]
  415a34:	cbz	x0, 415a3c <wcrtomb@plt+0x10e1c>
  415a38:	blr	x0
  415a3c:	mov	w2, #0x5                   	// #5
  415a40:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415a44:	mov	x0, #0x0                   	// #0
  415a48:	add	x1, x1, #0xd58
  415a4c:	bl	4049c0 <dcgettext@plt>
  415a50:	mov	x2, x0
  415a54:	mov	w1, #0x0                   	// #0
  415a58:	mov	w0, #0x0                   	// #0
  415a5c:	mov	x6, x21
  415a60:	mov	x5, x20
  415a64:	mov	x4, x19
  415a68:	mov	x3, x22
  415a6c:	bl	404050 <error@plt>
  415a70:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415a74:	mov	w1, #0x2                   	// #2
  415a78:	str	w1, [x0, #3568]
  415a7c:	b	4159a4 <wcrtomb@plt+0x10d84>
  415a80:	stp	x29, x30, [sp, #-112]!
  415a84:	mov	x3, #0xffffffffffffffff    	// #-1
  415a88:	mov	x29, sp
  415a8c:	stp	x21, x22, [sp, #32]
  415a90:	mov	x21, x1
  415a94:	add	x1, sp, #0x38
  415a98:	stp	x19, x20, [sp, #16]
  415a9c:	mov	x19, x2
  415aa0:	mov	x2, #0x0                   	// #0
  415aa4:	mov	x0, x19
  415aa8:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415aac:	mov	x20, x0
  415ab0:	bl	404ad0 <__errno_location@plt>
  415ab4:	ldr	w0, [x0]
  415ab8:	cmp	w0, #0x16
  415abc:	b.eq	415aec <wcrtomb@plt+0x10ecc>  // b.none
  415ac0:	ldr	x1, [sp, #56]
  415ac4:	ldrb	w1, [x1]
  415ac8:	cbnz	w1, 415aec <wcrtomb@plt+0x10ecc>
  415acc:	cmp	w0, #0x22
  415ad0:	b.eq	415b44 <wcrtomb@plt+0x10f24>  // b.none
  415ad4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415ad8:	str	x20, [x0, #32]
  415adc:	ldp	x19, x20, [sp, #16]
  415ae0:	ldp	x21, x22, [sp, #32]
  415ae4:	ldp	x29, x30, [sp], #112
  415ae8:	ret
  415aec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415af0:	ldr	x0, [x0, #1136]
  415af4:	cbz	x0, 415afc <wcrtomb@plt+0x10edc>
  415af8:	blr	x0
  415afc:	mov	w2, #0x5                   	// #5
  415b00:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415b04:	mov	x0, #0x0                   	// #0
  415b08:	add	x1, x1, #0xd88
  415b0c:	bl	4049c0 <dcgettext@plt>
  415b10:	mov	x2, x0
  415b14:	mov	x4, x19
  415b18:	mov	x3, x21
  415b1c:	mov	w1, #0x0                   	// #0
  415b20:	mov	w0, #0x0                   	// #0
  415b24:	bl	404050 <error@plt>
  415b28:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415b2c:	mov	w1, #0x2                   	// #2
  415b30:	ldp	x19, x20, [sp, #16]
  415b34:	str	w1, [x0, #3568]
  415b38:	ldp	x21, x22, [sp, #32]
  415b3c:	ldp	x29, x30, [sp], #112
  415b40:	ret
  415b44:	add	x1, sp, #0x40
  415b48:	mov	x0, #0x0                   	// #0
  415b4c:	bl	446768 <argp_parse@@Base+0x6988>
  415b50:	mov	x20, x0
  415b54:	add	x1, sp, #0x58
  415b58:	mov	x0, #0xffffffffffffffff    	// #-1
  415b5c:	bl	446868 <argp_parse@@Base+0x6a88>
  415b60:	mov	x22, x0
  415b64:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415b68:	ldr	x0, [x1, #1136]
  415b6c:	cbz	x0, 415b74 <wcrtomb@plt+0x10f54>
  415b70:	blr	x0
  415b74:	mov	w2, #0x5                   	// #5
  415b78:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415b7c:	mov	x0, #0x0                   	// #0
  415b80:	add	x1, x1, #0xd58
  415b84:	bl	4049c0 <dcgettext@plt>
  415b88:	mov	x2, x0
  415b8c:	mov	w1, #0x0                   	// #0
  415b90:	mov	w0, #0x0                   	// #0
  415b94:	mov	x6, x22
  415b98:	mov	x5, x20
  415b9c:	mov	x4, x19
  415ba0:	mov	x3, x21
  415ba4:	bl	404050 <error@plt>
  415ba8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415bac:	mov	w1, #0x2                   	// #2
  415bb0:	str	w1, [x0, #3568]
  415bb4:	b	415adc <wcrtomb@plt+0x10ebc>
  415bb8:	stp	x29, x30, [sp, #-112]!
  415bbc:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  415bc0:	mov	x29, sp
  415bc4:	stp	x21, x22, [sp, #32]
  415bc8:	mov	x22, x1
  415bcc:	add	x1, sp, #0x38
  415bd0:	stp	x19, x20, [sp, #16]
  415bd4:	mov	x19, x2
  415bd8:	mov	x2, #0x0                   	// #0
  415bdc:	mov	x20, x0
  415be0:	mov	x0, x19
  415be4:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415be8:	mov	x21, x0
  415bec:	bl	404ad0 <__errno_location@plt>
  415bf0:	ldr	w0, [x0]
  415bf4:	cmp	w0, #0x16
  415bf8:	b.eq	415c2c <wcrtomb@plt+0x1100c>  // b.none
  415bfc:	ldr	x1, [sp, #56]
  415c00:	ldrb	w1, [x1]
  415c04:	cbnz	w1, 415c2c <wcrtomb@plt+0x1100c>
  415c08:	cmp	w0, #0x22
  415c0c:	b.eq	415c84 <wcrtomb@plt+0x11064>  // b.none
  415c10:	mov	w0, #0x1                   	// #1
  415c14:	str	x21, [x20, #312]
  415c18:	strb	w0, [x20, #320]
  415c1c:	ldp	x19, x20, [sp, #16]
  415c20:	ldp	x21, x22, [sp, #32]
  415c24:	ldp	x29, x30, [sp], #112
  415c28:	ret
  415c2c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415c30:	ldr	x0, [x0, #1136]
  415c34:	cbz	x0, 415c3c <wcrtomb@plt+0x1101c>
  415c38:	blr	x0
  415c3c:	mov	w2, #0x5                   	// #5
  415c40:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415c44:	mov	x0, #0x0                   	// #0
  415c48:	add	x1, x1, #0xd88
  415c4c:	bl	4049c0 <dcgettext@plt>
  415c50:	mov	x2, x0
  415c54:	mov	x4, x19
  415c58:	mov	x3, x22
  415c5c:	mov	w1, #0x0                   	// #0
  415c60:	mov	w0, #0x0                   	// #0
  415c64:	bl	404050 <error@plt>
  415c68:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415c6c:	mov	w1, #0x2                   	// #2
  415c70:	ldp	x19, x20, [sp, #16]
  415c74:	str	w1, [x0, #3568]
  415c78:	ldp	x21, x22, [sp, #32]
  415c7c:	ldp	x29, x30, [sp], #112
  415c80:	ret
  415c84:	add	x1, sp, #0x40
  415c88:	mov	x0, #0x0                   	// #0
  415c8c:	bl	446768 <argp_parse@@Base+0x6988>
  415c90:	mov	x20, x0
  415c94:	add	x1, sp, #0x58
  415c98:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  415c9c:	bl	446868 <argp_parse@@Base+0x6a88>
  415ca0:	mov	x21, x0
  415ca4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415ca8:	ldr	x0, [x1, #1136]
  415cac:	cbz	x0, 415cb4 <wcrtomb@plt+0x11094>
  415cb0:	blr	x0
  415cb4:	mov	w2, #0x5                   	// #5
  415cb8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415cbc:	mov	x0, #0x0                   	// #0
  415cc0:	add	x1, x1, #0xd58
  415cc4:	bl	4049c0 <dcgettext@plt>
  415cc8:	mov	x2, x0
  415ccc:	mov	w1, #0x0                   	// #0
  415cd0:	mov	w0, #0x0                   	// #0
  415cd4:	mov	x6, x21
  415cd8:	mov	x5, x20
  415cdc:	mov	x4, x19
  415ce0:	mov	x3, x22
  415ce4:	bl	404050 <error@plt>
  415ce8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415cec:	mov	w1, #0x2                   	// #2
  415cf0:	str	w1, [x0, #3568]
  415cf4:	b	415c1c <wcrtomb@plt+0x10ffc>
  415cf8:	stp	x29, x30, [sp, #-112]!
  415cfc:	mov	x3, #0xffffffffffffffff    	// #-1
  415d00:	mov	x29, sp
  415d04:	stp	x21, x22, [sp, #32]
  415d08:	mov	x22, x1
  415d0c:	add	x1, sp, #0x38
  415d10:	stp	x19, x20, [sp, #16]
  415d14:	mov	x20, x2
  415d18:	mov	x2, #0x0                   	// #0
  415d1c:	mov	x19, x0
  415d20:	mov	x0, x20
  415d24:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415d28:	mov	x21, x0
  415d2c:	bl	404ad0 <__errno_location@plt>
  415d30:	ldr	w0, [x0]
  415d34:	cmp	w0, #0x16
  415d38:	b.eq	415d78 <wcrtomb@plt+0x11158>  // b.none
  415d3c:	ldr	x1, [sp, #56]
  415d40:	ldrb	w1, [x1]
  415d44:	cbnz	w1, 415d78 <wcrtomb@plt+0x11158>
  415d48:	cmp	w0, #0x22
  415d4c:	b.eq	415dd0 <wcrtomb@plt+0x111b0>  // b.none
  415d50:	str	x21, [x19, #296]
  415d54:	mov	x0, x21
  415d58:	mov	x1, #0x10                  	// #16
  415d5c:	bl	4502b0 <argp_parse@@Base+0x104d0>
  415d60:	str	xzr, [x19, #288]
  415d64:	str	x0, [x19, #304]
  415d68:	ldp	x19, x20, [sp, #16]
  415d6c:	ldp	x21, x22, [sp, #32]
  415d70:	ldp	x29, x30, [sp], #112
  415d74:	ret
  415d78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415d7c:	ldr	x0, [x0, #1136]
  415d80:	cbz	x0, 415d88 <wcrtomb@plt+0x11168>
  415d84:	blr	x0
  415d88:	mov	w2, #0x5                   	// #5
  415d8c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415d90:	mov	x0, #0x0                   	// #0
  415d94:	add	x1, x1, #0xd88
  415d98:	bl	4049c0 <dcgettext@plt>
  415d9c:	mov	x2, x0
  415da0:	mov	x4, x20
  415da4:	mov	x3, x22
  415da8:	mov	w1, #0x0                   	// #0
  415dac:	mov	w0, #0x0                   	// #0
  415db0:	bl	404050 <error@plt>
  415db4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415db8:	mov	w1, #0x2                   	// #2
  415dbc:	ldp	x19, x20, [sp, #16]
  415dc0:	str	w1, [x0, #3568]
  415dc4:	ldp	x21, x22, [sp, #32]
  415dc8:	ldp	x29, x30, [sp], #112
  415dcc:	ret
  415dd0:	add	x1, sp, #0x40
  415dd4:	mov	x0, #0x0                   	// #0
  415dd8:	bl	446768 <argp_parse@@Base+0x6988>
  415ddc:	mov	x19, x0
  415de0:	add	x1, sp, #0x58
  415de4:	mov	x0, #0xffffffffffffffff    	// #-1
  415de8:	bl	446868 <argp_parse@@Base+0x6a88>
  415dec:	mov	x21, x0
  415df0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415df4:	ldr	x0, [x1, #1136]
  415df8:	cbz	x0, 415e00 <wcrtomb@plt+0x111e0>
  415dfc:	blr	x0
  415e00:	mov	w2, #0x5                   	// #5
  415e04:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415e08:	mov	x0, #0x0                   	// #0
  415e0c:	add	x1, x1, #0xd58
  415e10:	bl	4049c0 <dcgettext@plt>
  415e14:	mov	x2, x0
  415e18:	mov	w1, #0x0                   	// #0
  415e1c:	mov	w0, #0x0                   	// #0
  415e20:	mov	x6, x21
  415e24:	mov	x5, x19
  415e28:	mov	x4, x20
  415e2c:	mov	x3, x22
  415e30:	bl	404050 <error@plt>
  415e34:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415e38:	mov	w1, #0x2                   	// #2
  415e3c:	str	w1, [x0, #3568]
  415e40:	b	415d68 <wcrtomb@plt+0x11148>
  415e44:	nop
  415e48:	stp	x29, x30, [sp, #-112]!
  415e4c:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  415e50:	mov	x29, sp
  415e54:	stp	x21, x22, [sp, #32]
  415e58:	mov	x21, x1
  415e5c:	add	x1, sp, #0x38
  415e60:	stp	x19, x20, [sp, #16]
  415e64:	mov	x19, x2
  415e68:	mov	x2, #0x0                   	// #0
  415e6c:	mov	x20, x0
  415e70:	mov	x0, x19
  415e74:	bl	41efb8 <wcrtomb@plt+0x1a398>
  415e78:	mov	x22, x0
  415e7c:	bl	404ad0 <__errno_location@plt>
  415e80:	ldr	w2, [x0]
  415e84:	cmp	w2, #0x16
  415e88:	b.eq	415f24 <wcrtomb@plt+0x11304>  // b.none
  415e8c:	ldr	x0, [sp, #56]
  415e90:	ldrb	w0, [x0]
  415e94:	cbnz	w0, 415f24 <wcrtomb@plt+0x11304>
  415e98:	cmp	w2, #0x22
  415e9c:	b.eq	415f5c <wcrtomb@plt+0x1133c>  // b.none
  415ea0:	ldp	x1, x0, [x20, #288]
  415ea4:	cmp	x1, x0
  415ea8:	b.cc	415f08 <wcrtomb@plt+0x112e8>  // b.lo, b.ul, b.last
  415eac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415eb0:	ldr	x0, [x0, #1136]
  415eb4:	cbz	x0, 415ebc <wcrtomb@plt+0x1129c>
  415eb8:	blr	x0
  415ebc:	mov	w2, #0x5                   	// #5
  415ec0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415ec4:	mov	x0, #0x0                   	// #0
  415ec8:	add	x1, x1, #0xdb8
  415ecc:	bl	4049c0 <dcgettext@plt>
  415ed0:	mov	x2, x0
  415ed4:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415ed8:	mov	x4, x19
  415edc:	add	x3, x3, #0xe60
  415ee0:	mov	w1, #0x0                   	// #0
  415ee4:	mov	w0, #0x0                   	// #0
  415ee8:	bl	404050 <error@plt>
  415eec:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415ef0:	mov	w1, #0x2                   	// #2
  415ef4:	str	w1, [x0, #3568]
  415ef8:	ldp	x19, x20, [sp, #16]
  415efc:	ldp	x21, x22, [sp, #32]
  415f00:	ldp	x29, x30, [sp], #112
  415f04:	ret
  415f08:	ldr	x0, [x20, #304]
  415f0c:	lsl	x1, x1, #4
  415f10:	ldp	x19, x20, [sp, #16]
  415f14:	str	x22, [x0, x1]
  415f18:	ldp	x21, x22, [sp, #32]
  415f1c:	ldp	x29, x30, [sp], #112
  415f20:	ret
  415f24:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  415f28:	ldr	x0, [x0, #1136]
  415f2c:	cbz	x0, 415f34 <wcrtomb@plt+0x11314>
  415f30:	blr	x0
  415f34:	mov	w2, #0x5                   	// #5
  415f38:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415f3c:	mov	x0, #0x0                   	// #0
  415f40:	add	x1, x1, #0xd88
  415f44:	bl	4049c0 <dcgettext@plt>
  415f48:	mov	x2, x0
  415f4c:	mov	x4, x19
  415f50:	mov	x3, x21
  415f54:	mov	w1, #0x0                   	// #0
  415f58:	b	415ee4 <wcrtomb@plt+0x112c4>
  415f5c:	add	x1, sp, #0x40
  415f60:	mov	x0, #0x0                   	// #0
  415f64:	bl	446768 <argp_parse@@Base+0x6988>
  415f68:	mov	x20, x0
  415f6c:	add	x1, sp, #0x58
  415f70:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  415f74:	bl	446868 <argp_parse@@Base+0x6a88>
  415f78:	mov	x22, x0
  415f7c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  415f80:	ldr	x0, [x1, #1136]
  415f84:	cbz	x0, 415f8c <wcrtomb@plt+0x1136c>
  415f88:	blr	x0
  415f8c:	mov	w2, #0x5                   	// #5
  415f90:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  415f94:	mov	x0, #0x0                   	// #0
  415f98:	add	x1, x1, #0xd58
  415f9c:	bl	4049c0 <dcgettext@plt>
  415fa0:	mov	x2, x0
  415fa4:	mov	w1, #0x0                   	// #0
  415fa8:	mov	w0, #0x0                   	// #0
  415fac:	mov	x6, x22
  415fb0:	mov	x5, x20
  415fb4:	mov	x4, x19
  415fb8:	mov	x3, x21
  415fbc:	bl	404050 <error@plt>
  415fc0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415fc4:	mov	w1, #0x2                   	// #2
  415fc8:	str	w1, [x0, #3568]
  415fcc:	b	415ef8 <wcrtomb@plt+0x112d8>
  415fd0:	stp	x29, x30, [sp, #-32]!
  415fd4:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  415fd8:	mov	x29, sp
  415fdc:	stp	x19, x20, [sp, #16]
  415fe0:	ldr	x19, [x1, #2184]
  415fe4:	cbz	x19, 41601c <wcrtomb@plt+0x113fc>
  415fe8:	mov	x20, x0
  415fec:	b	415ff8 <wcrtomb@plt+0x113d8>
  415ff0:	ldr	x19, [x19]
  415ff4:	cbz	x19, 41601c <wcrtomb@plt+0x113fc>
  415ff8:	ldr	x0, [x19, #8]
  415ffc:	mov	x1, x20
  416000:	mov	w2, #0x0                   	// #0
  416004:	bl	4048c0 <fnmatch@plt>
  416008:	cbnz	w0, 415ff0 <wcrtomb@plt+0x113d0>
  41600c:	mov	w0, #0x1                   	// #1
  416010:	ldp	x19, x20, [sp, #16]
  416014:	ldp	x29, x30, [sp], #32
  416018:	ret
  41601c:	mov	w0, #0x0                   	// #0
  416020:	ldp	x19, x20, [sp, #16]
  416024:	ldp	x29, x30, [sp], #32
  416028:	ret
  41602c:	nop
  416030:	stp	x29, x30, [sp, #-96]!
  416034:	mov	x29, sp
  416038:	stp	x23, x24, [sp, #48]
  41603c:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416040:	add	x23, x23, #0x2c0
  416044:	mov	x1, x23
  416048:	bl	403fc0 <strtok@plt>
  41604c:	cbz	x0, 4161f0 <wcrtomb@plt+0x115d0>
  416050:	stp	x21, x22, [sp, #32]
  416054:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416058:	add	x22, x22, #0x878
  41605c:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416060:	add	x24, x24, #0xec8
  416064:	stp	x19, x20, [sp, #16]
  416068:	mov	x19, x0
  41606c:	stp	x25, x26, [sp, #64]
  416070:	add	x25, x22, #0x40
  416074:	nop
  416078:	mov	x0, x19
  41607c:	mov	w1, #0x3d                  	// #61
  416080:	bl	404870 <strchr@plt>
  416084:	mov	x20, x0
  416088:	cbz	x0, 416408 <wcrtomb@plt+0x117e8>
  41608c:	cmp	x0, x19
  416090:	b.eq	4163cc <wcrtomb@plt+0x117ac>  // b.none
  416094:	ldurb	w0, [x0, #-1]
  416098:	mov	x21, x20
  41609c:	mov	w26, #0x1                   	// #1
  4160a0:	cmp	w0, #0x3a
  4160a4:	b.ne	4160b0 <wcrtomb@plt+0x11490>  // b.any
  4160a8:	sub	x21, x20, #0x1
  4160ac:	mov	w26, #0x0                   	// #0
  4160b0:	cmp	x21, x19
  4160b4:	b.ls	4160dc <wcrtomb@plt+0x114bc>  // b.plast
  4160b8:	bl	404740 <__ctype_b_loc@plt>
  4160bc:	ldr	x1, [x0]
  4160c0:	b	4160d0 <wcrtomb@plt+0x114b0>
  4160c4:	sub	x21, x21, #0x1
  4160c8:	cmp	x21, x19
  4160cc:	b.eq	4160dc <wcrtomb@plt+0x114bc>  // b.none
  4160d0:	ldrb	w0, [x21]
  4160d4:	ldrh	w0, [x1, x0, lsl #1]
  4160d8:	tbnz	w0, #13, 4160c4 <wcrtomb@plt+0x114a4>
  4160dc:	strb	wzr, [x21]
  4160e0:	add	x21, x20, #0x1
  4160e4:	ldrb	w20, [x20, #1]
  4160e8:	cbz	w20, 41610c <wcrtomb@plt+0x114ec>
  4160ec:	bl	404740 <__ctype_b_loc@plt>
  4160f0:	ldr	x1, [x0]
  4160f4:	b	416100 <wcrtomb@plt+0x114e0>
  4160f8:	ldrb	w20, [x21, #1]!
  4160fc:	cbz	w20, 41610c <wcrtomb@plt+0x114ec>
  416100:	ubfiz	x20, x20, #1, #8
  416104:	ldrh	w0, [x1, x20]
  416108:	tbnz	w0, #13, 4160f8 <wcrtomb@plt+0x114d8>
  41610c:	mov	x1, x24
  416110:	mov	x0, x19
  416114:	bl	404710 <strcmp@plt>
  416118:	cbz	w0, 4161fc <wcrtomb@plt+0x115dc>
  41611c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416120:	mov	x0, x19
  416124:	add	x1, x1, #0xef0
  416128:	bl	404710 <strcmp@plt>
  41612c:	cbz	w0, 4162ac <wcrtomb@plt+0x1168c>
  416130:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416134:	mov	x0, x19
  416138:	add	x1, x1, #0xf00
  41613c:	bl	404710 <strcmp@plt>
  416140:	cbz	w0, 4162bc <wcrtomb@plt+0x1169c>
  416144:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416148:	mov	x0, x19
  41614c:	add	x1, x1, #0xf10
  416150:	bl	404710 <strcmp@plt>
  416154:	cbz	w0, 416344 <wcrtomb@plt+0x11724>
  416158:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41615c:	mov	x0, x19
  416160:	add	x1, x1, #0xf48
  416164:	bl	404710 <strcmp@plt>
  416168:	cbnz	w0, 4162cc <wcrtomb@plt+0x116ac>
  41616c:	mov	w2, #0x0                   	// #0
  416170:	add	x1, sp, #0x58
  416174:	mov	x0, x21
  416178:	bl	41f550 <wcrtomb@plt+0x1a930>
  41617c:	mov	x2, x0
  416180:	tbnz	x1, #63, 416190 <wcrtomb@plt+0x11570>
  416184:	ldr	x0, [sp, #88]
  416188:	ldrb	w0, [x0]
  41618c:	cbz	w0, 4163b8 <wcrtomb@plt+0x11798>
  416190:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416194:	ldr	x0, [x0, #1136]
  416198:	cbz	x0, 4161a0 <wcrtomb@plt+0x11580>
  41619c:	blr	x0
  4161a0:	mov	w2, #0x5                   	// #5
  4161a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4161a8:	mov	x0, #0x0                   	// #0
  4161ac:	add	x1, x1, #0xf20
  4161b0:	bl	4049c0 <dcgettext@plt>
  4161b4:	mov	x2, x0
  4161b8:	mov	w1, #0x0                   	// #0
  4161bc:	mov	w0, #0x0                   	// #0
  4161c0:	bl	404050 <error@plt>
  4161c4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4161c8:	mov	w1, #0x2                   	// #2
  4161cc:	str	w1, [x0, #3568]
  4161d0:	mov	x1, x23
  4161d4:	mov	x0, #0x0                   	// #0
  4161d8:	bl	403fc0 <strtok@plt>
  4161dc:	mov	x19, x0
  4161e0:	cbnz	x0, 416078 <wcrtomb@plt+0x11458>
  4161e4:	ldp	x19, x20, [sp, #16]
  4161e8:	ldp	x21, x22, [sp, #32]
  4161ec:	ldp	x25, x26, [sp, #64]
  4161f0:	ldp	x23, x24, [sp, #48]
  4161f4:	ldp	x29, x30, [sp], #96
  4161f8:	ret
  4161fc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416200:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x17bf0>
  416204:	add	x1, x1, #0x7e8
  416208:	add	x19, x19, #0x1f0
  41620c:	b	416218 <wcrtomb@plt+0x115f8>
  416210:	ldr	x1, [x19, #32]!
  416214:	cbz	x1, 416284 <wcrtomb@plt+0x11664>
  416218:	ldrb	w0, [x19, #28]
  41621c:	cbnz	w0, 416210 <wcrtomb@plt+0x115f0>
  416220:	ldr	w0, [x19, #24]
  416224:	tbz	w0, #0, 416210 <wcrtomb@plt+0x115f0>
  416228:	mov	x0, x21
  41622c:	mov	w2, #0x0                   	// #0
  416230:	bl	4048c0 <fnmatch@plt>
  416234:	cbnz	w0, 416210 <wcrtomb@plt+0x115f0>
  416238:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41623c:	ldr	x0, [x0, #1136]
  416240:	cbz	x0, 416248 <wcrtomb@plt+0x11628>
  416244:	blr	x0
  416248:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41624c:	add	x1, x1, #0xed0
  416250:	mov	w2, #0x5                   	// #5
  416254:	mov	x0, #0x0                   	// #0
  416258:	bl	4049c0 <dcgettext@plt>
  41625c:	mov	x19, x0
  416260:	mov	x0, x21
  416264:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  416268:	mov	x2, x19
  41626c:	mov	x3, x0
  416270:	mov	w1, #0x0                   	// #0
  416274:	mov	w0, #0x0                   	// #0
  416278:	bl	404050 <error@plt>
  41627c:	mov	w0, #0x2                   	// #2
  416280:	bl	42c3b0 <wcrtomb@plt+0x27790>
  416284:	mov	x0, #0x18                  	// #24
  416288:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41628c:	mov	x19, x0
  416290:	mov	x0, x21
  416294:	bl	450328 <argp_parse@@Base+0x10548>
  416298:	ldr	x1, [x22, #16]
  41629c:	stp	x1, x0, [x19]
  4162a0:	str	xzr, [x19, #16]
  4162a4:	str	x19, [x22, #16]
  4162a8:	b	4161d0 <wcrtomb@plt+0x115b0>
  4162ac:	mov	x1, x21
  4162b0:	add	x0, x22, #0x18
  4162b4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  4162b8:	b	4161d0 <wcrtomb@plt+0x115b0>
  4162bc:	mov	x1, x21
  4162c0:	add	x0, x22, #0x20
  4162c4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  4162c8:	b	4161d0 <wcrtomb@plt+0x115b0>
  4162cc:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4162d0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4162d4:	add	x0, x0, #0x7e8
  4162d8:	add	x20, x20, #0x1f0
  4162dc:	nop
  4162e0:	ldrb	w1, [x20, #28]
  4162e4:	cbnz	w1, 4162fc <wcrtomb@plt+0x116dc>
  4162e8:	ldr	w1, [x20, #24]
  4162ec:	tbz	w1, #0, 4162fc <wcrtomb@plt+0x116dc>
  4162f0:	mov	x1, x19
  4162f4:	bl	404710 <strcmp@plt>
  4162f8:	cbz	w0, 416438 <wcrtomb@plt+0x11818>
  4162fc:	ldr	x0, [x20, #32]!
  416300:	cbnz	x0, 4162e0 <wcrtomb@plt+0x116c0>
  416304:	cbz	w26, 41637c <wcrtomb@plt+0x1175c>
  416308:	mov	x0, #0x18                  	// #24
  41630c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  416310:	mov	x1, x0
  416314:	mov	x0, x19
  416318:	mov	x19, x1
  41631c:	bl	450328 <argp_parse@@Base+0x10548>
  416320:	mov	x1, x0
  416324:	str	x1, [x19, #8]
  416328:	mov	x0, x21
  41632c:	bl	450328 <argp_parse@@Base+0x10548>
  416330:	str	x0, [x19, #16]
  416334:	ldr	x0, [x22, #72]
  416338:	str	x0, [x19]
  41633c:	str	x19, [x22, #72]
  416340:	b	4161d0 <wcrtomb@plt+0x115b0>
  416344:	mov	w2, #0x0                   	// #0
  416348:	add	x1, sp, #0x58
  41634c:	mov	x0, x21
  416350:	bl	41f550 <wcrtomb@plt+0x1a930>
  416354:	mov	x2, x0
  416358:	tbnz	x1, #63, 416190 <wcrtomb@plt+0x11570>
  41635c:	ldr	x0, [sp, #88]
  416360:	ldrb	w0, [x0]
  416364:	cbnz	w0, 416190 <wcrtomb@plt+0x11570>
  416368:	mov	x1, x21
  41636c:	add	x0, x22, #0x30
  416370:	str	x2, [x22, #40]
  416374:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  416378:	b	4161d0 <wcrtomb@plt+0x115b0>
  41637c:	mov	x0, #0x18                  	// #24
  416380:	bl	4501a0 <argp_parse@@Base+0x103c0>
  416384:	mov	x1, x0
  416388:	mov	x0, x19
  41638c:	mov	x19, x1
  416390:	bl	450328 <argp_parse@@Base+0x10548>
  416394:	mov	x1, x0
  416398:	str	x1, [x19, #8]
  41639c:	mov	x0, x21
  4163a0:	bl	450328 <argp_parse@@Base+0x10548>
  4163a4:	str	x0, [x19, #16]
  4163a8:	ldr	x0, [x22, #80]
  4163ac:	str	x0, [x19]
  4163b0:	str	x19, [x22, #80]
  4163b4:	b	4161d0 <wcrtomb@plt+0x115b0>
  4163b8:	mov	x1, x21
  4163bc:	mov	x0, x25
  4163c0:	str	x2, [x22, #56]
  4163c4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  4163c8:	b	4161d0 <wcrtomb@plt+0x115b0>
  4163cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4163d0:	ldr	x0, [x0, #1136]
  4163d4:	cbz	x0, 4163dc <wcrtomb@plt+0x117bc>
  4163d8:	blr	x0
  4163dc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4163e0:	add	x1, x1, #0xea8
  4163e4:	mov	w2, #0x5                   	// #5
  4163e8:	mov	x0, #0x0                   	// #0
  4163ec:	bl	4049c0 <dcgettext@plt>
  4163f0:	mov	x20, x0
  4163f4:	mov	x0, x19
  4163f8:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  4163fc:	mov	x2, x20
  416400:	mov	x3, x0
  416404:	b	416270 <wcrtomb@plt+0x11650>
  416408:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41640c:	ldr	x0, [x0, #1136]
  416410:	cbz	x0, 416418 <wcrtomb@plt+0x117f8>
  416414:	blr	x0
  416418:	mov	w2, #0x5                   	// #5
  41641c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416420:	mov	x0, #0x0                   	// #0
  416424:	add	x1, x1, #0xe78
  416428:	bl	4049c0 <dcgettext@plt>
  41642c:	mov	x2, x0
  416430:	mov	x3, x19
  416434:	b	416270 <wcrtomb@plt+0x11650>
  416438:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41643c:	ldr	x0, [x0, #1136]
  416440:	cbz	x0, 416448 <wcrtomb@plt+0x11828>
  416444:	blr	x0
  416448:	mov	w2, #0x5                   	// #5
  41644c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416450:	mov	x0, #0x0                   	// #0
  416454:	add	x1, x1, #0xf60
  416458:	bl	4049c0 <dcgettext@plt>
  41645c:	mov	x2, x0
  416460:	mov	x3, x19
  416464:	b	416270 <wcrtomb@plt+0x11650>
  416468:	stp	x29, x30, [sp, #-176]!
  41646c:	mov	x29, sp
  416470:	stp	x19, x20, [sp, #16]
  416474:	stp	x21, x22, [sp, #32]
  416478:	stp	x23, x24, [sp, #48]
  41647c:	stp	x25, x26, [sp, #64]
  416480:	stp	x27, x28, [sp, #80]
  416484:	mov	x28, x1
  416488:	ldrb	w3, [x1]
  41648c:	str	x2, [sp, #104]
  416490:	cbz	w3, 416798 <wcrtomb@plt+0x11b78>
  416494:	mov	x26, x0
  416498:	mov	x25, x1
  41649c:	add	x0, sp, #0xac
  4164a0:	mov	x22, #0x0                   	// #0
  4164a4:	mov	x21, #0x0                   	// #0
  4164a8:	mov	x24, #0x0                   	// #0
  4164ac:	mov	x23, #0x0                   	// #0
  4164b0:	mov	x20, #0x0                   	// #0
  4164b4:	mov	x27, #0x0                   	// #0
  4164b8:	str	x0, [sp, #112]
  4164bc:	add	x0, sp, #0x94
  4164c0:	str	x0, [sp, #120]
  4164c4:	nop
  4164c8:	mov	x1, x25
  4164cc:	cmp	w3, #0x25
  4164d0:	ldrb	w3, [x1, #1]!
  4164d4:	b.eq	4165e4 <wcrtomb@plt+0x119c4>  // b.none
  4164d8:	add	x27, x27, #0x1
  4164dc:	mov	x25, x1
  4164e0:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  4164e4:	add	x0, x27, #0x1
  4164e8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4164ec:	ldrb	w1, [x28]
  4164f0:	mov	x25, x0
  4164f4:	cbz	w1, 4167c0 <wcrtomb@plt+0x11ba0>
  4164f8:	mov	x19, x0
  4164fc:	nop
  416500:	ldrb	w2, [x28, #1]
  416504:	cmp	w1, #0x25
  416508:	b.eq	416574 <wcrtomb@plt+0x11954>  // b.none
  41650c:	mov	x0, x19
  416510:	add	x28, x28, #0x1
  416514:	strb	w1, [x0], #1
  416518:	mov	w1, w2
  41651c:	mov	x19, x0
  416520:	cbnz	w1, 416500 <wcrtomb@plt+0x118e0>
  416524:	mov	x0, x20
  416528:	bl	4047b0 <free@plt>
  41652c:	cmp	x25, x19
  416530:	b.cc	416544 <wcrtomb@plt+0x11924>  // b.lo, b.ul, b.last
  416534:	b	416550 <wcrtomb@plt+0x11930>
  416538:	sub	x19, x19, #0x1
  41653c:	cmp	x25, x19
  416540:	b.eq	416680 <wcrtomb@plt+0x11a60>  // b.none
  416544:	ldurb	w1, [x19, #-1]
  416548:	cmp	w1, #0x2f
  41654c:	b.eq	416538 <wcrtomb@plt+0x11918>  // b.none
  416550:	strb	wzr, [x19]
  416554:	mov	x0, x25
  416558:	ldp	x19, x20, [sp, #16]
  41655c:	ldp	x21, x22, [sp, #32]
  416560:	ldp	x23, x24, [sp, #48]
  416564:	ldp	x25, x26, [sp, #64]
  416568:	ldp	x27, x28, [sp, #80]
  41656c:	ldp	x29, x30, [sp], #176
  416570:	ret
  416574:	cmp	w2, #0x66
  416578:	b.eq	4166cc <wcrtomb@plt+0x11aac>  // b.none
  41657c:	b.hi	4165b4 <wcrtomb@plt+0x11994>  // b.pmore
  416580:	cmp	w2, #0x25
  416584:	b.eq	416688 <wcrtomb@plt+0x11a68>  // b.none
  416588:	cmp	w2, #0x64
  41658c:	b.ne	4166bc <wcrtomb@plt+0x11a9c>  // b.any
  416590:	cbz	x23, 4165a4 <wcrtomb@plt+0x11984>
  416594:	mov	x0, x19
  416598:	mov	x1, x23
  41659c:	bl	404220 <stpcpy@plt>
  4165a0:	mov	x19, x0
  4165a4:	ldrb	w1, [x28, #2]
  4165a8:	add	x28, x28, #0x2
  4165ac:	cbnz	w1, 416500 <wcrtomb@plt+0x118e0>
  4165b0:	b	416524 <wcrtomb@plt+0x11904>
  4165b4:	cmp	w2, #0x6e
  4165b8:	b.eq	41669c <wcrtomb@plt+0x11a7c>  // b.none
  4165bc:	cmp	w2, #0x70
  4165c0:	b.ne	416768 <wcrtomb@plt+0x11b48>  // b.any
  4165c4:	mov	x0, x19
  4165c8:	mov	x1, x21
  4165cc:	bl	404220 <stpcpy@plt>
  4165d0:	add	x28, x28, #0x2
  4165d4:	ldrb	w1, [x28]
  4165d8:	mov	x19, x0
  4165dc:	cbnz	w1, 416500 <wcrtomb@plt+0x118e0>
  4165e0:	b	416524 <wcrtomb@plt+0x11904>
  4165e4:	cbz	w3, 4164d8 <wcrtomb@plt+0x118b8>
  4165e8:	cmp	w3, #0x66
  4165ec:	add	x19, x25, #0x2
  4165f0:	b.eq	41672c <wcrtomb@plt+0x11b0c>  // b.none
  4165f4:	b.hi	416640 <wcrtomb@plt+0x11a20>  // b.pmore
  4165f8:	cmp	w3, #0x25
  4165fc:	b.eq	416754 <wcrtomb@plt+0x11b34>  // b.none
  416600:	cmp	w3, #0x64
  416604:	b.ne	416718 <wcrtomb@plt+0x11af8>  // b.any
  416608:	cbz	x26, 416788 <wcrtomb@plt+0x11b68>
  41660c:	cbz	x20, 4167d0 <wcrtomb@plt+0x11bb0>
  416610:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416614:	mov	w1, #0x0                   	// #0
  416618:	ldrb	w2, [x0, #1080]
  41661c:	mov	x0, x20
  416620:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  416624:	mov	x23, x0
  416628:	bl	403ff0 <strlen@plt>
  41662c:	add	x27, x27, x0
  416630:	ldrb	w3, [x25, #2]
  416634:	mov	x25, x19
  416638:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  41663c:	b	4164e4 <wcrtomb@plt+0x118c4>
  416640:	cmp	w3, #0x6e
  416644:	b.eq	4166ec <wcrtomb@plt+0x11acc>  // b.none
  416648:	cmp	w3, #0x70
  41664c:	b.ne	416718 <wcrtomb@plt+0x11af8>  // b.any
  416650:	bl	4042c0 <getpid@plt>
  416654:	sxtw	x0, w0
  416658:	add	x1, sp, #0x80
  41665c:	bl	446868 <argp_parse@@Base+0x6a88>
  416660:	ldrb	w3, [x25, #2]
  416664:	mov	x21, x0
  416668:	ldr	x0, [sp, #120]
  41666c:	mov	x25, x19
  416670:	sub	x0, x0, x21
  416674:	add	x27, x27, x0
  416678:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  41667c:	b	4164e4 <wcrtomb@plt+0x118c4>
  416680:	mov	x19, x25
  416684:	b	416550 <wcrtomb@plt+0x11930>
  416688:	strb	w1, [x19], #1
  41668c:	add	x28, x28, #0x2
  416690:	ldrb	w1, [x28]
  416694:	cbnz	w1, 416500 <wcrtomb@plt+0x118e0>
  416698:	b	416524 <wcrtomb@plt+0x11904>
  41669c:	mov	x0, x19
  4166a0:	mov	x1, x22
  4166a4:	bl	404220 <stpcpy@plt>
  4166a8:	add	x28, x28, #0x2
  4166ac:	ldrb	w1, [x28]
  4166b0:	mov	x19, x0
  4166b4:	cbnz	w1, 416500 <wcrtomb@plt+0x118e0>
  4166b8:	b	416524 <wcrtomb@plt+0x11904>
  4166bc:	strb	w1, [x19]
  4166c0:	cbnz	w2, 416770 <wcrtomb@plt+0x11b50>
  4166c4:	add	x19, x19, #0x1
  4166c8:	b	416524 <wcrtomb@plt+0x11904>
  4166cc:	cbz	x24, 4165a4 <wcrtomb@plt+0x11984>
  4166d0:	mov	x0, x19
  4166d4:	mov	x1, x24
  4166d8:	bl	404220 <stpcpy@plt>
  4166dc:	add	x28, x28, #0x2
  4166e0:	ldrb	w1, [x28]
  4166e4:	mov	x19, x0
  4166e8:	b	4165ac <wcrtomb@plt+0x1198c>
  4166ec:	ldr	x0, [sp, #104]
  4166f0:	add	x1, sp, #0x98
  4166f4:	bl	446868 <argp_parse@@Base+0x6a88>
  4166f8:	mov	x22, x0
  4166fc:	ldrb	w3, [x25, #2]
  416700:	mov	x25, x19
  416704:	ldr	x0, [sp, #112]
  416708:	sub	x0, x0, x22
  41670c:	add	x27, x27, x0
  416710:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  416714:	b	4164e4 <wcrtomb@plt+0x118c4>
  416718:	ldrb	w3, [x25, #2]
  41671c:	add	x27, x27, #0x2
  416720:	mov	x25, x19
  416724:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  416728:	b	4164e4 <wcrtomb@plt+0x118c4>
  41672c:	cbz	x26, 416788 <wcrtomb@plt+0x11b68>
  416730:	ldr	x0, [x26]
  416734:	bl	441558 <argp_parse@@Base+0x1778>
  416738:	mov	x24, x0
  41673c:	bl	403ff0 <strlen@plt>
  416740:	add	x27, x27, x0
  416744:	ldrb	w3, [x25, #2]
  416748:	mov	x25, x19
  41674c:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  416750:	b	4164e4 <wcrtomb@plt+0x118c4>
  416754:	ldrb	w3, [x25, #2]
  416758:	add	x27, x27, #0x1
  41675c:	mov	x25, x19
  416760:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  416764:	b	4164e4 <wcrtomb@plt+0x118c4>
  416768:	strb	w1, [x19]
  41676c:	nop
  416770:	ldrb	w1, [x28, #2]
  416774:	add	x19, x19, #0x2
  416778:	sturb	w2, [x19, #-1]
  41677c:	add	x28, x28, #0x2
  416780:	cbnz	w1, 416500 <wcrtomb@plt+0x118e0>
  416784:	b	416524 <wcrtomb@plt+0x11904>
  416788:	ldrb	w3, [x25, #2]
  41678c:	mov	x25, x19
  416790:	cbnz	w3, 4164c8 <wcrtomb@plt+0x118a8>
  416794:	b	4164e4 <wcrtomb@plt+0x118c4>
  416798:	mov	x0, #0x1                   	// #1
  41679c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4167a0:	ldrb	w1, [x28]
  4167a4:	mov	x25, x0
  4167a8:	mov	x22, #0x0                   	// #0
  4167ac:	mov	x21, #0x0                   	// #0
  4167b0:	mov	x24, #0x0                   	// #0
  4167b4:	mov	x23, #0x0                   	// #0
  4167b8:	mov	x20, #0x0                   	// #0
  4167bc:	cbnz	w1, 4164f8 <wcrtomb@plt+0x118d8>
  4167c0:	mov	x0, x20
  4167c4:	mov	x19, x25
  4167c8:	bl	4047b0 <free@plt>
  4167cc:	b	416550 <wcrtomb@plt+0x11930>
  4167d0:	ldr	x0, [x26]
  4167d4:	bl	4413c8 <argp_parse@@Base+0x15e8>
  4167d8:	mov	x20, x0
  4167dc:	b	416610 <wcrtomb@plt+0x119f0>
  4167e0:	stp	x29, x30, [sp, #-32]!
  4167e4:	mov	x29, sp
  4167e8:	stp	x19, x20, [sp, #16]
  4167ec:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4167f0:	add	x19, x19, #0x878
  4167f4:	mov	x20, x0
  4167f8:	ldr	x1, [x19, #24]
  4167fc:	cbz	x1, 416814 <wcrtomb@plt+0x11bf4>
  416800:	mov	x0, x20
  416804:	mov	x2, #0x0                   	// #0
  416808:	ldp	x19, x20, [sp, #16]
  41680c:	ldp	x29, x30, [sp], #32
  416810:	b	416468 <wcrtomb@plt+0x11848>
  416814:	add	x0, x19, #0x18
  416818:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41681c:	add	x1, x1, #0xf80
  416820:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  416824:	mov	x0, x20
  416828:	mov	x2, #0x0                   	// #0
  41682c:	ldr	x1, [x19, #24]
  416830:	ldp	x19, x20, [sp, #16]
  416834:	ldp	x29, x30, [sp], #32
  416838:	b	416468 <wcrtomb@plt+0x11848>
  41683c:	nop
  416840:	stp	x29, x30, [sp, #-32]!
  416844:	mov	x29, sp
  416848:	stp	x19, x20, [sp, #16]
  41684c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416850:	add	x19, x19, #0x878
  416854:	ldr	x20, [x19, #32]
  416858:	cbz	x20, 416878 <wcrtomb@plt+0x11c58>
  41685c:	mov	x1, x20
  416860:	mov	x0, #0x0                   	// #0
  416864:	ldr	x2, [x19, #88]
  416868:	ldp	x19, x20, [sp, #16]
  41686c:	add	x2, x2, #0x1
  416870:	ldp	x29, x30, [sp], #32
  416874:	b	416468 <wcrtomb@plt+0x11848>
  416878:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41687c:	add	x0, x0, #0xfa0
  416880:	bl	404af0 <getenv@plt>
  416884:	mov	x20, x0
  416888:	cbz	x0, 4168dc <wcrtomb@plt+0x11cbc>
  41688c:	bl	403ff0 <strlen@plt>
  416890:	add	x0, x0, #0x12
  416894:	bl	4501a0 <argp_parse@@Base+0x103c0>
  416898:	str	x0, [x19, #32]
  41689c:	mov	x1, x20
  4168a0:	mov	x20, x0
  4168a4:	bl	404220 <stpcpy@plt>
  4168a8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4168ac:	add	x1, x1, #0xfa8
  4168b0:	ldp	x2, x3, [x1]
  4168b4:	stp	x2, x3, [x0]
  4168b8:	ldrh	w1, [x1, #16]
  4168bc:	strh	w1, [x0, #16]
  4168c0:	mov	x1, x20
  4168c4:	ldr	x2, [x19, #88]
  4168c8:	mov	x0, #0x0                   	// #0
  4168cc:	ldp	x19, x20, [sp, #16]
  4168d0:	add	x2, x2, #0x1
  4168d4:	ldp	x29, x30, [sp], #32
  4168d8:	b	416468 <wcrtomb@plt+0x11848>
  4168dc:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4168e0:	mov	x0, #0x16                  	// #22
  4168e4:	add	x20, x20, #0xf98
  4168e8:	b	416894 <wcrtomb@plt+0x11c74>
  4168ec:	nop
  4168f0:	stp	x29, x30, [sp, #-64]!
  4168f4:	mov	x29, sp
  4168f8:	stp	x19, x20, [sp, #16]
  4168fc:	stp	x21, x22, [sp, #32]
  416900:	stp	x23, x24, [sp, #48]
  416904:	and	w24, w0, #0xff
  416908:	mov	x23, x3
  41690c:	cmp	w24, #0x67
  416910:	mov	x0, x1
  416914:	ldr	x21, [x3, #8]
  416918:	b.eq	4169fc <wcrtomb@plt+0x11ddc>  // b.none
  41691c:	cmp	w24, #0x78
  416920:	b.ne	416938 <wcrtomb@plt+0x11d18>  // b.any
  416924:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416928:	add	x1, x1, #0x878
  41692c:	ldr	x3, [x1, #48]
  416930:	cbz	x3, 416938 <wcrtomb@plt+0x11d18>
  416934:	ldr	x2, [x1, #40]
  416938:	mov	x1, x21
  41693c:	bl	40c5a8 <wcrtomb@plt+0x7988>
  416940:	strb	w24, [x0, #156]
  416944:	mov	x19, x21
  416948:	and	x21, x21, #0x1ff
  41694c:	bl	40c748 <wcrtomb@plt+0x7b28>
  416950:	ldr	x22, [x23, #16]
  416954:	add	x22, x22, x19
  416958:	bl	406550 <wcrtomb@plt+0x1930>
  41695c:	mov	x20, x0
  416960:	cmp	x19, x21
  416964:	sub	x1, x22, x19
  416968:	mov	x2, #0x200                 	// #512
  41696c:	b.ne	4169e4 <wcrtomb@plt+0x11dc4>  // b.any
  416970:	mov	x2, x19
  416974:	bl	403f70 <memcpy@plt>
  416978:	mov	x2, #0x200                 	// #512
  41697c:	sub	x2, x2, x19
  416980:	mov	w1, #0x0                   	// #0
  416984:	add	x0, x20, x19
  416988:	bl	404410 <memset@plt>
  41698c:	mov	x0, x20
  416990:	bl	4060e0 <wcrtomb@plt+0x14c0>
  416994:	ldr	x0, [x23]
  416998:	cbz	x0, 416a14 <wcrtomb@plt+0x11df4>
  41699c:	mov	x1, #0x0                   	// #0
  4169a0:	bl	451360 <_obstack_free@@Base>
  4169a4:	ldr	x0, [x23]
  4169a8:	bl	4047b0 <free@plt>
  4169ac:	str	xzr, [x23]
  4169b0:	stp	xzr, xzr, [x23, #8]
  4169b4:	cmp	w24, #0x67
  4169b8:	b.ne	4169d0 <wcrtomb@plt+0x11db0>  // b.any
  4169bc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4169c0:	add	x0, x0, #0x878
  4169c4:	ldr	x1, [x0, #88]
  4169c8:	add	x1, x1, #0x1
  4169cc:	str	x1, [x0, #88]
  4169d0:	ldp	x19, x20, [sp, #16]
  4169d4:	ldp	x21, x22, [sp, #32]
  4169d8:	ldp	x23, x24, [sp, #48]
  4169dc:	ldp	x29, x30, [sp], #64
  4169e0:	ret
  4169e4:	bl	403f70 <memcpy@plt>
  4169e8:	sub	x19, x19, #0x200
  4169ec:	mov	x0, x20
  4169f0:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4169f4:	cbnz	x19, 416958 <wcrtomb@plt+0x11d38>
  4169f8:	b	416994 <wcrtomb@plt+0x11d74>
  4169fc:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416a00:	add	x1, x1, #0x878
  416a04:	ldr	x3, [x1, #64]
  416a08:	cbz	x3, 416938 <wcrtomb@plt+0x11d18>
  416a0c:	ldr	x2, [x1, #56]
  416a10:	b	416938 <wcrtomb@plt+0x11d18>
  416a14:	ldr	x0, [x23, #16]
  416a18:	bl	4047b0 <free@plt>
  416a1c:	b	4169b0 <wcrtomb@plt+0x11d90>
  416a20:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416a24:	ldr	x0, [x0, #2240]
  416a28:	cbnz	x0, 416a30 <wcrtomb@plt+0x11e10>
  416a2c:	ret
  416a30:	stp	x29, x30, [sp, #-16]!
  416a34:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416a38:	mov	x29, sp
  416a3c:	ldr	x0, [x0, #1136]
  416a40:	cbz	x0, 416a48 <wcrtomb@plt+0x11e28>
  416a44:	blr	x0
  416a48:	mov	w2, #0x5                   	// #5
  416a4c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416a50:	mov	x0, #0x0                   	// #0
  416a54:	add	x1, x1, #0xfc0
  416a58:	bl	4049c0 <dcgettext@plt>
  416a5c:	mov	x2, x0
  416a60:	mov	w1, #0x0                   	// #0
  416a64:	mov	w0, #0x0                   	// #0
  416a68:	bl	404050 <error@plt>
  416a6c:	mov	w0, #0x2                   	// #2
  416a70:	bl	42c3b0 <wcrtomb@plt+0x27790>
  416a74:	nop
  416a78:	stp	xzr, xzr, [x0, #48]
  416a7c:	stp	xzr, xzr, [x0, #64]
  416a80:	str	xzr, [x0, #80]
  416a84:	stp	xzr, xzr, [x0, #328]
  416a88:	ret
  416a8c:	nop
  416a90:	stp	x29, x30, [sp, #-48]!
  416a94:	mov	x29, sp
  416a98:	str	x21, [sp, #32]
  416a9c:	mov	x21, x0
  416aa0:	cbz	x1, 416ad8 <wcrtomb@plt+0x11eb8>
  416aa4:	add	x1, x1, x1, lsl #1
  416aa8:	stp	x19, x20, [sp, #16]
  416aac:	mov	x19, x0
  416ab0:	add	x20, x0, x1, lsl #3
  416ab4:	nop
  416ab8:	ldr	x0, [x19]
  416abc:	add	x19, x19, #0x18
  416ac0:	bl	4047b0 <free@plt>
  416ac4:	ldur	x0, [x19, #-16]
  416ac8:	bl	4047b0 <free@plt>
  416acc:	cmp	x19, x20
  416ad0:	b.ne	416ab8 <wcrtomb@plt+0x11e98>  // b.any
  416ad4:	ldp	x19, x20, [sp, #16]
  416ad8:	mov	x0, x21
  416adc:	ldr	x21, [sp, #32]
  416ae0:	ldp	x29, x30, [sp], #48
  416ae4:	b	4047b0 <free@plt>
  416ae8:	stp	x29, x30, [sp, #-64]!
  416aec:	mov	x29, sp
  416af0:	stp	x19, x20, [sp, #16]
  416af4:	mov	x20, x0
  416af8:	mov	x19, x1
  416afc:	mov	x0, x1
  416b00:	stp	x21, x22, [sp, #32]
  416b04:	mov	x22, x3
  416b08:	stp	x23, x24, [sp, #48]
  416b0c:	mov	x24, x2
  416b10:	bl	403ff0 <strlen@plt>
  416b14:	add	x0, x0, #0xe
  416b18:	bl	4501a0 <argp_parse@@Base+0x103c0>
  416b1c:	adrp	x3, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416b20:	add	x3, x3, #0xff0
  416b24:	mov	x21, x0
  416b28:	mov	x1, x19
  416b2c:	add	x0, x0, #0xd
  416b30:	ldr	x2, [x3]
  416b34:	str	x2, [x21]
  416b38:	ldur	x2, [x3, #5]
  416b3c:	stur	x2, [x21, #5]
  416b40:	bl	404910 <strcpy@plt>
  416b44:	ldp	x1, x0, [x20, #328]
  416b48:	add	x1, x1, #0x1
  416b4c:	str	x1, [x20, #328]
  416b50:	add	x1, x1, x1, lsl #1
  416b54:	lsl	x19, x1, #3
  416b58:	mov	x1, x19
  416b5c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  416b60:	mov	x23, x0
  416b64:	str	x23, [x20, #336]
  416b68:	sub	x19, x19, #0x18
  416b6c:	mov	x0, x21
  416b70:	bl	450328 <argp_parse@@Base+0x10548>
  416b74:	ldr	x3, [x20, #336]
  416b78:	str	x0, [x23, x19]
  416b7c:	add	x1, x22, #0x1
  416b80:	mov	x0, x24
  416b84:	add	x23, x3, x19
  416b88:	bl	4502e8 <argp_parse@@Base+0x10508>
  416b8c:	mov	x2, x0
  416b90:	ldr	x1, [x20, #336]
  416b94:	str	x2, [x23, #8]
  416b98:	ldp	x23, x24, [sp, #48]
  416b9c:	add	x19, x1, x19
  416ba0:	mov	x0, x21
  416ba4:	str	x22, [x19, #16]
  416ba8:	ldp	x19, x20, [sp, #16]
  416bac:	ldp	x21, x22, [sp, #32]
  416bb0:	ldp	x29, x30, [sp], #64
  416bb4:	b	4047b0 <free@plt>
  416bb8:	stp	x29, x30, [sp, #-48]!
  416bbc:	mov	x29, sp
  416bc0:	stp	x19, x20, [sp, #16]
  416bc4:	mov	x19, x3
  416bc8:	mov	x20, x1
  416bcc:	stp	x21, x22, [sp, #32]
  416bd0:	mov	x22, x2
  416bd4:	mov	x21, x0
  416bd8:	mov	x0, x1
  416bdc:	bl	403ff0 <strlen@plt>
  416be0:	add	x3, x0, #0x10
  416be4:	mov	x1, x20
  416be8:	and	x3, x3, #0xfffffffffffffff0
  416bec:	add	x2, x0, #0x1
  416bf0:	sub	sp, sp, x3
  416bf4:	mov	x20, sp
  416bf8:	mov	x0, x20
  416bfc:	bl	403f70 <memcpy@plt>
  416c00:	add	x0, x19, #0x10
  416c04:	mov	x1, x22
  416c08:	and	x0, x0, #0xfffffffffffffff0
  416c0c:	add	x2, x19, #0x1
  416c10:	sub	sp, sp, x0
  416c14:	mov	x4, sp
  416c18:	mov	x0, x4
  416c1c:	bl	403f70 <memcpy@plt>
  416c20:	mov	x4, x0
  416c24:	mov	x1, x20
  416c28:	add	x2, x20, #0x1
  416c2c:	mov	w5, #0x25                  	// #37
  416c30:	mov	w6, #0x3d                  	// #61
  416c34:	ldrb	w3, [x1]
  416c38:	cmp	w3, #0x25
  416c3c:	b.eq	416c5c <wcrtomb@plt+0x1203c>  // b.none
  416c40:	sturb	w3, [x2, #-1]
  416c44:	cbz	w3, 416c88 <wcrtomb@plt+0x12068>
  416c48:	add	x1, x1, #0x1
  416c4c:	add	x2, x2, #0x1
  416c50:	ldrb	w3, [x1]
  416c54:	cmp	w3, #0x25
  416c58:	b.ne	416c40 <wcrtomb@plt+0x12020>  // b.any
  416c5c:	ldrb	w0, [x1, #1]
  416c60:	cmp	w0, #0x33
  416c64:	b.eq	416cb0 <wcrtomb@plt+0x12090>  // b.none
  416c68:	cmp	w0, #0x32
  416c6c:	b.ne	416c7c <wcrtomb@plt+0x1205c>  // b.any
  416c70:	ldrb	w0, [x1, #2]
  416c74:	cmp	w0, #0x35
  416c78:	b.eq	416ccc <wcrtomb@plt+0x120ac>  // b.none
  416c7c:	add	x1, x1, #0x1
  416c80:	sturb	w5, [x2, #-1]
  416c84:	b	416c4c <wcrtomb@plt+0x1202c>
  416c88:	mov	x3, x19
  416c8c:	add	x1, x20, #0xd
  416c90:	mov	x0, x21
  416c94:	mov	x2, x4
  416c98:	bl	416ae8 <wcrtomb@plt+0x11ec8>
  416c9c:	mov	sp, x29
  416ca0:	ldp	x19, x20, [sp, #16]
  416ca4:	ldp	x21, x22, [sp, #32]
  416ca8:	ldp	x29, x30, [sp], #48
  416cac:	ret
  416cb0:	ldrb	w0, [x1, #2]
  416cb4:	cmp	w0, #0x44
  416cb8:	b.ne	416c7c <wcrtomb@plt+0x1205c>  // b.any
  416cbc:	add	x1, x1, #0x3
  416cc0:	add	x2, x2, #0x1
  416cc4:	sturb	w6, [x2, #-2]
  416cc8:	b	416c50 <wcrtomb@plt+0x12030>
  416ccc:	add	x1, x1, #0x3
  416cd0:	add	x2, x2, #0x1
  416cd4:	sturb	w3, [x2, #-2]
  416cd8:	b	416c50 <wcrtomb@plt+0x12030>
  416cdc:	nop
  416ce0:	stp	x29, x30, [sp, #-96]!
  416ce4:	mov	x29, sp
  416ce8:	stp	x23, x24, [sp, #48]
  416cec:	mov	x24, x0
  416cf0:	str	xzr, [x1]
  416cf4:	str	xzr, [x2]
  416cf8:	ldr	x0, [x0, #328]
  416cfc:	cbz	x0, 416db4 <wcrtomb@plt+0x12194>
  416d00:	mov	x3, #0x0                   	// #0
  416d04:	stp	x19, x20, [sp, #16]
  416d08:	mov	x20, #0x0                   	// #0
  416d0c:	stp	x21, x22, [sp, #32]
  416d10:	mov	x22, x1
  416d14:	mov	x1, #0x0                   	// #0
  416d18:	stp	x25, x26, [sp, #64]
  416d1c:	mov	x25, x2
  416d20:	str	x27, [sp, #80]
  416d24:	b	416d2c <wcrtomb@plt+0x1210c>
  416d28:	ldr	x3, [x25]
  416d2c:	add	x6, x20, x20, lsl #1
  416d30:	ldr	x5, [x24, #336]
  416d34:	add	x3, x3, #0x1
  416d38:	mov	x0, x1
  416d3c:	add	x20, x20, #0x1
  416d40:	add	x1, x3, x3, lsl #1
  416d44:	add	x4, x5, x6, lsl #3
  416d48:	ldr	x27, [x5, x6, lsl #3]
  416d4c:	lsl	x1, x1, #3
  416d50:	ldp	x26, x23, [x4, #8]
  416d54:	str	x3, [x25]
  416d58:	sub	x19, x1, #0x18
  416d5c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  416d60:	mov	x21, x0
  416d64:	str	x21, [x22]
  416d68:	mov	x0, x27
  416d6c:	bl	450328 <argp_parse@@Base+0x10548>
  416d70:	ldr	x3, [x22]
  416d74:	str	x0, [x21, x19]
  416d78:	add	x1, x23, #0x1
  416d7c:	mov	x0, x26
  416d80:	add	x21, x3, x19
  416d84:	bl	4502e8 <argp_parse@@Base+0x10508>
  416d88:	ldr	x1, [x22]
  416d8c:	str	x0, [x21, #8]
  416d90:	ldr	x0, [x24, #328]
  416d94:	add	x19, x1, x19
  416d98:	cmp	x0, x20
  416d9c:	str	x23, [x19, #16]
  416da0:	b.hi	416d28 <wcrtomb@plt+0x12108>  // b.pmore
  416da4:	ldp	x19, x20, [sp, #16]
  416da8:	ldp	x21, x22, [sp, #32]
  416dac:	ldp	x25, x26, [sp, #64]
  416db0:	ldr	x27, [sp, #80]
  416db4:	ldp	x23, x24, [sp, #48]
  416db8:	ldp	x29, x30, [sp], #96
  416dbc:	ret
  416dc0:	stp	x29, x30, [sp, #-112]!
  416dc4:	mov	x1, x0
  416dc8:	mov	x29, sp
  416dcc:	stp	x19, x20, [sp, #16]
  416dd0:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416dd4:	add	x20, x20, #0x878
  416dd8:	mov	x19, x0
  416ddc:	stp	x25, x26, [sp, #64]
  416de0:	ldr	x0, [x20, #72]
  416de4:	bl	413b50 <wcrtomb@plt+0xef30>
  416de8:	ldr	x0, [x20, #96]
  416dec:	mov	x1, x19
  416df0:	bl	413b50 <wcrtomb@plt+0xef30>
  416df4:	ldr	x26, [x19, #352]
  416df8:	cbz	x26, 416e98 <wcrtomb@plt+0x12278>
  416dfc:	stp	x23, x24, [sp, #48]
  416e00:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416e04:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x16bf0>
  416e08:	ldr	x23, [x19, #360]
  416e0c:	add	x24, x24, #0x7e8
  416e10:	add	x25, x25, #0x1b0
  416e14:	stp	x21, x22, [sp, #32]
  416e18:	add	x22, x23, #0x200
  416e1c:	ldrb	w0, [x22]
  416e20:	mov	x21, x22
  416e24:	cmp	w0, #0x20
  416e28:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  416e2c:	b.ne	416e40 <wcrtomb@plt+0x12220>  // b.any
  416e30:	ldrb	w0, [x21, #1]!
  416e34:	cmp	w0, #0x20
  416e38:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  416e3c:	b.eq	416e30 <wcrtomb@plt+0x12210>  // b.none
  416e40:	sub	w1, w0, #0x30
  416e44:	cmp	w1, #0x9
  416e48:	b.ls	416ecc <wcrtomb@plt+0x122ac>  // b.plast
  416e4c:	cbz	w0, 416f28 <wcrtomb@plt+0x12308>
  416e50:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416e54:	ldr	x0, [x0, #1136]
  416e58:	cbz	x0, 416e60 <wcrtomb@plt+0x12240>
  416e5c:	blr	x0
  416e60:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  416e64:	add	x1, x1, #0x0
  416e68:	mov	w2, #0x5                   	// #5
  416e6c:	mov	x0, #0x0                   	// #0
  416e70:	bl	4049c0 <dcgettext@plt>
  416e74:	mov	w1, #0x0                   	// #0
  416e78:	mov	x2, x0
  416e7c:	mov	w0, #0x0                   	// #0
  416e80:	bl	404050 <error@plt>
  416e84:	ldp	x21, x22, [sp, #32]
  416e88:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  416e8c:	ldp	x23, x24, [sp, #48]
  416e90:	mov	w1, #0x2                   	// #2
  416e94:	str	w1, [x0, #3568]
  416e98:	ldr	x0, [x20, #80]
  416e9c:	mov	x1, x19
  416ea0:	bl	413b50 <wcrtomb@plt+0xef30>
  416ea4:	ldrb	w0, [x19, #320]
  416ea8:	ldr	x1, [x19, #136]
  416eac:	str	x1, [x19, #264]
  416eb0:	cbz	w0, 416ebc <wcrtomb@plt+0x1229c>
  416eb4:	ldr	x0, [x19, #312]
  416eb8:	str	x0, [x19, #136]
  416ebc:	ldp	x19, x20, [sp, #16]
  416ec0:	ldp	x25, x26, [sp, #64]
  416ec4:	ldp	x29, x30, [sp], #112
  416ec8:	ret
  416ecc:	add	x23, x23, x26
  416ed0:	add	x1, sp, #0x68
  416ed4:	sub	x23, x23, x22
  416ed8:	mov	x0, x21
  416edc:	mov	w3, #0x0                   	// #0
  416ee0:	mov	w2, #0xa                   	// #10
  416ee4:	bl	4044b0 <__strtoul_internal@plt>
  416ee8:	cmp	x23, x0
  416eec:	b.cc	416f98 <wcrtomb@plt+0x12378>  // b.lo, b.ul, b.last
  416ef0:	ldr	x1, [sp, #104]
  416ef4:	add	x22, x22, x0
  416ef8:	ldrb	w0, [x1]
  416efc:	cmp	w0, #0x20
  416f00:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  416f04:	b.eq	416f34 <wcrtomb@plt+0x12314>  // b.none
  416f08:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416f0c:	ldr	x0, [x0, #1136]
  416f10:	cbz	x0, 416f18 <wcrtomb@plt+0x122f8>
  416f14:	blr	x0
  416f18:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  416f1c:	mov	w2, #0x5                   	// #5
  416f20:	add	x1, x1, #0x60
  416f24:	b	416e6c <wcrtomb@plt+0x1224c>
  416f28:	ldp	x21, x22, [sp, #32]
  416f2c:	ldp	x23, x24, [sp, #48]
  416f30:	b	416e98 <wcrtomb@plt+0x12278>
  416f34:	mov	x23, x1
  416f38:	ldrb	w0, [x23, #1]!
  416f3c:	cmp	w0, #0x20
  416f40:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  416f44:	b.eq	416f38 <wcrtomb@plt+0x12318>  // b.none
  416f48:	cmp	x1, x23
  416f4c:	b.eq	416f08 <wcrtomb@plt+0x122e8>  // b.none
  416f50:	mov	x0, x23
  416f54:	mov	w1, #0x3d                  	// #61
  416f58:	bl	404870 <strchr@plt>
  416f5c:	cmp	x0, #0x0
  416f60:	mov	x26, x0
  416f64:	ccmp	x22, x0, #0x0, ne  // ne = any
  416f68:	b.ls	416fe0 <wcrtomb@plt+0x123c0>  // b.plast
  416f6c:	ldurb	w0, [x22, #-1]
  416f70:	cmp	w0, #0xa
  416f74:	b.eq	417000 <wcrtomb@plt+0x123e0>  // b.none
  416f78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416f7c:	ldr	x0, [x0, #1136]
  416f80:	cbz	x0, 416f88 <wcrtomb@plt+0x12368>
  416f84:	blr	x0
  416f88:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  416f8c:	mov	w2, #0x5                   	// #5
  416f90:	add	x1, x1, #0xc8
  416f94:	b	416e6c <wcrtomb@plt+0x1224c>
  416f98:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416f9c:	ldr	x22, [sp, #104]
  416fa0:	ldr	x0, [x0, #1136]
  416fa4:	sub	x22, x22, x21
  416fa8:	cbz	x0, 416fb0 <wcrtomb@plt+0x12390>
  416fac:	blr	x0
  416fb0:	mov	w2, #0x5                   	// #5
  416fb4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  416fb8:	mov	x0, #0x0                   	// #0
  416fbc:	add	x1, x1, #0x30
  416fc0:	bl	4049c0 <dcgettext@plt>
  416fc4:	mov	x2, x0
  416fc8:	mov	x4, x21
  416fcc:	mov	w3, w22
  416fd0:	mov	w1, #0x0                   	// #0
  416fd4:	mov	w0, #0x0                   	// #0
  416fd8:	bl	404050 <error@plt>
  416fdc:	b	416e84 <wcrtomb@plt+0x12264>
  416fe0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  416fe4:	ldr	x0, [x0, #1136]
  416fe8:	cbz	x0, 416ff0 <wcrtomb@plt+0x123d0>
  416fec:	blr	x0
  416ff0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  416ff4:	mov	w2, #0x5                   	// #5
  416ff8:	add	x1, x1, #0x98
  416ffc:	b	416e6c <wcrtomb@plt+0x1224c>
  417000:	sturb	wzr, [x22, #-1]
  417004:	strb	wzr, [x26]
  417008:	ldr	x21, [x20, #16]
  41700c:	cbnz	x21, 41701c <wcrtomb@plt+0x123fc>
  417010:	b	417048 <wcrtomb@plt+0x12428>
  417014:	ldr	x21, [x21]
  417018:	cbz	x21, 417048 <wcrtomb@plt+0x12428>
  41701c:	ldr	x0, [x21, #8]
  417020:	mov	x1, x23
  417024:	mov	w2, #0x0                   	// #0
  417028:	bl	4048c0 <fnmatch@plt>
  41702c:	cbnz	w0, 417014 <wcrtomb@plt+0x123f4>
  417030:	mov	w0, #0x3d                  	// #61
  417034:	strb	w0, [x26]
  417038:	mov	w0, #0xa                   	// #10
  41703c:	sturb	w0, [x22, #-1]
  417040:	ldp	x26, x23, [x19, #352]
  417044:	b	416e1c <wcrtomb@plt+0x121fc>
  417048:	ldr	x21, [x20, #80]
  41704c:	cbnz	x21, 41705c <wcrtomb@plt+0x1243c>
  417050:	b	417070 <wcrtomb@plt+0x12450>
  417054:	ldr	x21, [x21]
  417058:	cbz	x21, 417070 <wcrtomb@plt+0x12450>
  41705c:	ldr	x0, [x21, #8]
  417060:	mov	x1, x23
  417064:	bl	404710 <strcmp@plt>
  417068:	cbnz	w0, 417054 <wcrtomb@plt+0x12434>
  41706c:	b	417030 <wcrtomb@plt+0x12410>
  417070:	mov	x21, x24
  417074:	str	x27, [sp, #80]
  417078:	adrp	x27, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41707c:	add	x27, x27, #0x1f0
  417080:	b	4170a4 <wcrtomb@plt+0x12484>
  417084:	bl	403ff0 <strlen@plt>
  417088:	mov	x2, x0
  41708c:	mov	x1, x23
  417090:	mov	x0, x21
  417094:	bl	4043c0 <strncmp@plt>
  417098:	cbz	w0, 4170bc <wcrtomb@plt+0x1249c>
  41709c:	ldr	x21, [x27, #32]!
  4170a0:	cbz	x21, 4170e0 <wcrtomb@plt+0x124c0>
  4170a4:	ldrb	w2, [x27, #28]
  4170a8:	mov	x0, x21
  4170ac:	mov	x1, x23
  4170b0:	cbnz	w2, 417084 <wcrtomb@plt+0x12464>
  4170b4:	bl	404710 <strcmp@plt>
  4170b8:	cbnz	w0, 41709c <wcrtomb@plt+0x1247c>
  4170bc:	ldr	x4, [x27, #16]
  4170c0:	sub	x3, x22, x26
  4170c4:	mov	x1, x23
  4170c8:	sub	x3, x3, #0x2
  4170cc:	add	x2, x26, #0x1
  4170d0:	mov	x0, x19
  4170d4:	blr	x4
  4170d8:	ldr	x27, [sp, #80]
  4170dc:	b	417030 <wcrtomb@plt+0x12410>
  4170e0:	ldr	w0, [x25]
  4170e4:	tbz	w0, #17, 417120 <wcrtomb@plt+0x12500>
  4170e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4170ec:	ldr	x0, [x0, #1136]
  4170f0:	cbz	x0, 4170f8 <wcrtomb@plt+0x124d8>
  4170f4:	blr	x0
  4170f8:	mov	w2, #0x5                   	// #5
  4170fc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417100:	mov	x0, #0x0                   	// #0
  417104:	add	x1, x1, #0xf8
  417108:	bl	4049c0 <dcgettext@plt>
  41710c:	mov	x2, x0
  417110:	mov	x3, x23
  417114:	mov	w1, #0x0                   	// #0
  417118:	mov	w0, #0x0                   	// #0
  41711c:	bl	404050 <error@plt>
  417120:	ldr	x27, [sp, #80]
  417124:	b	417030 <wcrtomb@plt+0x12410>
  417128:	stp	x29, x30, [sp, #-112]!
  41712c:	mov	x29, sp
  417130:	stp	x21, x22, [sp, #32]
  417134:	ldr	x21, [x0, #8]
  417138:	cbnz	x21, 417148 <wcrtomb@plt+0x12528>
  41713c:	ldp	x21, x22, [sp, #32]
  417140:	ldp	x29, x30, [sp], #112
  417144:	ret
  417148:	stp	x23, x24, [sp, #48]
  41714c:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  417150:	add	x24, x24, #0x878
  417154:	stp	x19, x20, [sp, #16]
  417158:	mov	x19, x0
  41715c:	ldr	x20, [x24, #96]
  417160:	stp	x25, x26, [sp, #64]
  417164:	ldr	x22, [x0, #16]
  417168:	add	x23, x22, #0x200
  41716c:	cbz	x20, 417198 <wcrtomb@plt+0x12578>
  417170:	mov	x21, x20
  417174:	ldr	x20, [x20]
  417178:	ldr	x0, [x21, #8]
  41717c:	bl	4047b0 <free@plt>
  417180:	ldr	x0, [x21, #16]
  417184:	bl	4047b0 <free@plt>
  417188:	mov	x0, x21
  41718c:	bl	4047b0 <free@plt>
  417190:	cbnz	x20, 417170 <wcrtomb@plt+0x12550>
  417194:	ldp	x21, x22, [x19, #8]
  417198:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41719c:	add	x25, x25, #0x7e8
  4171a0:	str	xzr, [x24, #96]
  4171a4:	ldrb	w1, [x23]
  4171a8:	mov	x20, x23
  4171ac:	cmp	w1, #0x20
  4171b0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4171b4:	b.ne	4171c8 <wcrtomb@plt+0x125a8>  // b.any
  4171b8:	ldrb	w1, [x20, #1]!
  4171bc:	cmp	w1, #0x20
  4171c0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  4171c4:	b.eq	4171b8 <wcrtomb@plt+0x12598>  // b.none
  4171c8:	sub	w0, w1, #0x30
  4171cc:	cmp	w0, #0x9
  4171d0:	b.ls	417230 <wcrtomb@plt+0x12610>  // b.plast
  4171d4:	cbz	w1, 41728c <wcrtomb@plt+0x1266c>
  4171d8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4171dc:	ldr	x0, [x0, #1136]
  4171e0:	cbz	x0, 4171e8 <wcrtomb@plt+0x125c8>
  4171e4:	blr	x0
  4171e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4171ec:	add	x1, x1, #0x0
  4171f0:	mov	w2, #0x5                   	// #5
  4171f4:	mov	x0, #0x0                   	// #0
  4171f8:	bl	4049c0 <dcgettext@plt>
  4171fc:	mov	w1, #0x0                   	// #0
  417200:	mov	x2, x0
  417204:	mov	w0, #0x0                   	// #0
  417208:	bl	404050 <error@plt>
  41720c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  417210:	mov	w1, #0x2                   	// #2
  417214:	ldp	x19, x20, [sp, #16]
  417218:	str	w1, [x0, #3568]
  41721c:	ldp	x21, x22, [sp, #32]
  417220:	ldp	x23, x24, [sp, #48]
  417224:	ldp	x25, x26, [sp, #64]
  417228:	ldp	x29, x30, [sp], #112
  41722c:	ret
  417230:	add	x21, x22, x21
  417234:	add	x1, sp, #0x68
  417238:	sub	x21, x21, x23
  41723c:	mov	x0, x20
  417240:	mov	w3, #0x0                   	// #0
  417244:	mov	w2, #0xa                   	// #10
  417248:	bl	4044b0 <__strtoul_internal@plt>
  41724c:	cmp	x21, x0
  417250:	b.cc	4172a4 <wcrtomb@plt+0x12684>  // b.lo, b.ul, b.last
  417254:	ldr	x1, [sp, #104]
  417258:	add	x23, x23, x0
  41725c:	ldrb	w0, [x1]
  417260:	cmp	w0, #0x20
  417264:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  417268:	b.eq	4172ec <wcrtomb@plt+0x126cc>  // b.none
  41726c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  417270:	ldr	x0, [x0, #1136]
  417274:	cbz	x0, 41727c <wcrtomb@plt+0x1265c>
  417278:	blr	x0
  41727c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417280:	mov	w2, #0x5                   	// #5
  417284:	add	x1, x1, #0x60
  417288:	b	4171f4 <wcrtomb@plt+0x125d4>
  41728c:	ldp	x19, x20, [sp, #16]
  417290:	ldp	x21, x22, [sp, #32]
  417294:	ldp	x23, x24, [sp, #48]
  417298:	ldp	x25, x26, [sp, #64]
  41729c:	ldp	x29, x30, [sp], #112
  4172a0:	ret
  4172a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4172a8:	ldr	x19, [sp, #104]
  4172ac:	ldr	x0, [x0, #1136]
  4172b0:	sub	x19, x19, x20
  4172b4:	cbz	x0, 4172bc <wcrtomb@plt+0x1269c>
  4172b8:	blr	x0
  4172bc:	mov	w2, #0x5                   	// #5
  4172c0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4172c4:	mov	x0, #0x0                   	// #0
  4172c8:	add	x1, x1, #0x30
  4172cc:	bl	4049c0 <dcgettext@plt>
  4172d0:	mov	x2, x0
  4172d4:	mov	x4, x20
  4172d8:	mov	w3, w19
  4172dc:	mov	w1, #0x0                   	// #0
  4172e0:	mov	w0, #0x0                   	// #0
  4172e4:	bl	404050 <error@plt>
  4172e8:	b	41720c <wcrtomb@plt+0x125ec>
  4172ec:	mov	x22, x1
  4172f0:	ldrb	w0, [x22, #1]!
  4172f4:	cmp	w0, #0x20
  4172f8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4172fc:	b.eq	4172f0 <wcrtomb@plt+0x126d0>  // b.none
  417300:	cmp	x1, x22
  417304:	b.eq	41726c <wcrtomb@plt+0x1264c>  // b.none
  417308:	mov	x0, x22
  41730c:	mov	w1, #0x3d                  	// #61
  417310:	bl	404870 <strchr@plt>
  417314:	cmp	x0, #0x0
  417318:	mov	x26, x0
  41731c:	ccmp	x23, x0, #0x0, ne  // ne = any
  417320:	b.ls	4173e8 <wcrtomb@plt+0x127c8>  // b.plast
  417324:	ldurb	w0, [x23, #-1]
  417328:	cmp	w0, #0xa
  41732c:	b.ne	4173c8 <wcrtomb@plt+0x127a8>  // b.any
  417330:	str	x27, [sp, #80]
  417334:	mov	x27, x26
  417338:	sturb	wzr, [x23, #-1]
  41733c:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417340:	mov	x20, x25
  417344:	add	x21, x21, #0x1f0
  417348:	strb	wzr, [x27], #1
  41734c:	b	417370 <wcrtomb@plt+0x12750>
  417350:	bl	403ff0 <strlen@plt>
  417354:	mov	x2, x0
  417358:	mov	x1, x22
  41735c:	mov	x0, x20
  417360:	bl	4043c0 <strncmp@plt>
  417364:	cbz	w0, 417388 <wcrtomb@plt+0x12768>
  417368:	ldr	x20, [x21, #32]!
  41736c:	cbz	x20, 417408 <wcrtomb@plt+0x127e8>
  417370:	ldrb	w2, [x21, #28]
  417374:	mov	x0, x20
  417378:	mov	x1, x22
  41737c:	cbnz	w2, 417350 <wcrtomb@plt+0x12730>
  417380:	bl	404710 <strcmp@plt>
  417384:	cbnz	w0, 417368 <wcrtomb@plt+0x12748>
  417388:	ldr	w0, [x21, #24]
  41738c:	tbz	w0, #1, 417408 <wcrtomb@plt+0x127e8>
  417390:	ldr	x4, [x21, #16]
  417394:	sub	x3, x23, x26
  417398:	mov	x2, x27
  41739c:	mov	x1, x22
  4173a0:	sub	x3, x3, #0x2
  4173a4:	add	x0, x24, #0x60
  4173a8:	blr	x4
  4173ac:	mov	w0, #0x3d                  	// #61
  4173b0:	strb	w0, [x26]
  4173b4:	mov	w0, #0xa                   	// #10
  4173b8:	sturb	w0, [x23, #-1]
  4173bc:	ldp	x21, x22, [x19, #8]
  4173c0:	ldr	x27, [sp, #80]
  4173c4:	b	4171a4 <wcrtomb@plt+0x12584>
  4173c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4173cc:	ldr	x0, [x0, #1136]
  4173d0:	cbz	x0, 4173d8 <wcrtomb@plt+0x127b8>
  4173d4:	blr	x0
  4173d8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4173dc:	mov	w2, #0x5                   	// #5
  4173e0:	add	x1, x1, #0xc8
  4173e4:	b	4171f4 <wcrtomb@plt+0x125d4>
  4173e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4173ec:	ldr	x0, [x0, #1136]
  4173f0:	cbz	x0, 4173f8 <wcrtomb@plt+0x127d8>
  4173f4:	blr	x0
  4173f8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4173fc:	mov	w2, #0x5                   	// #5
  417400:	add	x1, x1, #0x98
  417404:	b	4171f4 <wcrtomb@plt+0x125d4>
  417408:	mov	x0, #0x18                  	// #24
  41740c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  417410:	mov	x20, x0
  417414:	mov	x0, x22
  417418:	bl	450328 <argp_parse@@Base+0x10548>
  41741c:	mov	x1, x0
  417420:	mov	x0, x27
  417424:	str	x1, [x20, #8]
  417428:	bl	450328 <argp_parse@@Base+0x10548>
  41742c:	str	x0, [x20, #16]
  417430:	ldr	x0, [x24, #96]
  417434:	str	x0, [x20]
  417438:	str	x20, [x24, #96]
  41743c:	b	4173ac <wcrtomb@plt+0x1278c>
  417440:	stp	x29, x30, [sp, #-64]!
  417444:	mov	x29, sp
  417448:	stp	x19, x20, [sp, #16]
  41744c:	mov	x19, x0
  417450:	ldr	x0, [x1, #360]
  417454:	cbz	x0, 417464 <wcrtomb@plt+0x12844>
  417458:	ldp	x19, x20, [sp, #16]
  41745c:	ldp	x29, x30, [sp], #64
  417460:	ret
  417464:	adrp	x20, 468000 <_obstack_memory_used@@Base+0x16bf0>
  417468:	add	x20, x20, #0x7e8
  41746c:	stp	x21, x22, [sp, #32]
  417470:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417474:	mov	x21, x1
  417478:	add	x22, x22, #0x1f0
  41747c:	stp	x23, x24, [sp, #48]
  417480:	mov	x23, x2
  417484:	b	4174a8 <wcrtomb@plt+0x12888>
  417488:	bl	403ff0 <strlen@plt>
  41748c:	mov	x2, x0
  417490:	mov	x1, x19
  417494:	mov	x0, x20
  417498:	bl	4043c0 <strncmp@plt>
  41749c:	cbz	w0, 4174c0 <wcrtomb@plt+0x128a0>
  4174a0:	ldr	x20, [x22, #32]!
  4174a4:	cbz	x20, 4174f8 <wcrtomb@plt+0x128d8>
  4174a8:	ldrb	w2, [x22, #28]
  4174ac:	mov	x0, x20
  4174b0:	mov	x1, x19
  4174b4:	cbnz	w2, 417488 <wcrtomb@plt+0x12868>
  4174b8:	bl	404710 <strcmp@plt>
  4174bc:	cbnz	w0, 4174a0 <wcrtomb@plt+0x12880>
  4174c0:	ldr	x0, [x22, #8]
  4174c4:	cbz	x0, 4174f8 <wcrtomb@plt+0x128d8>
  4174c8:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4174cc:	add	x24, x24, #0x878
  4174d0:	ldr	x20, [x24, #16]
  4174d4:	cbnz	x20, 4174e4 <wcrtomb@plt+0x128c4>
  4174d8:	b	41750c <wcrtomb@plt+0x128ec>
  4174dc:	ldr	x20, [x20]
  4174e0:	cbz	x20, 41750c <wcrtomb@plt+0x128ec>
  4174e4:	ldr	x0, [x20, #8]
  4174e8:	mov	x1, x19
  4174ec:	mov	w2, #0x0                   	// #0
  4174f0:	bl	4048c0 <fnmatch@plt>
  4174f4:	cbnz	w0, 4174dc <wcrtomb@plt+0x128bc>
  4174f8:	ldp	x19, x20, [sp, #16]
  4174fc:	ldp	x21, x22, [sp, #32]
  417500:	ldp	x23, x24, [sp, #48]
  417504:	ldp	x29, x30, [sp], #64
  417508:	ret
  41750c:	ldr	x0, [x21, #344]
  417510:	cbz	x0, 417568 <wcrtomb@plt+0x12948>
  417514:	ldr	x20, [x24, #80]
  417518:	cbnz	x20, 417528 <wcrtomb@plt+0x12908>
  41751c:	b	41753c <wcrtomb@plt+0x1291c>
  417520:	ldr	x20, [x20]
  417524:	cbz	x20, 41753c <wcrtomb@plt+0x1291c>
  417528:	ldr	x0, [x20, #8]
  41752c:	mov	x1, x19
  417530:	bl	404710 <strcmp@plt>
  417534:	cbnz	w0, 417520 <wcrtomb@plt+0x12900>
  417538:	b	4174f8 <wcrtomb@plt+0x128d8>
  41753c:	mov	x3, x23
  417540:	mov	x1, x19
  417544:	add	x2, x21, #0x158
  417548:	mov	x0, x21
  41754c:	ldr	x4, [x22, #8]
  417550:	ldp	x19, x20, [sp, #16]
  417554:	mov	x16, x4
  417558:	ldp	x21, x22, [sp, #32]
  41755c:	ldp	x23, x24, [sp, #48]
  417560:	ldp	x29, x30, [sp], #64
  417564:	br	x16
  417568:	mov	x0, #0x58                  	// #88
  41756c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  417570:	str	x0, [x21, #344]
  417574:	adrp	x4, 404000 <fputs@plt>
  417578:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  41757c:	add	x4, x4, #0x7b0
  417580:	add	x3, x3, #0x1a0
  417584:	mov	x2, #0x0                   	// #0
  417588:	mov	x1, #0x0                   	// #0
  41758c:	bl	451000 <_obstack_begin@@Base>
  417590:	b	417514 <wcrtomb@plt+0x128f4>
  417594:	nop
  417598:	stp	x29, x30, [sp, #-64]!
  41759c:	cmp	x2, #0x0
  4175a0:	mov	x29, sp
  4175a4:	stp	x23, x24, [sp, #48]
  4175a8:	mov	x23, x0
  4175ac:	csel	x0, x2, xzr, ge  // ge = tcont
  4175b0:	stp	x19, x20, [sp, #16]
  4175b4:	add	x20, x0, #0x200
  4175b8:	mov	x19, x1
  4175bc:	stp	x21, x22, [sp, #32]
  4175c0:	add	x0, x0, #0x201
  4175c4:	mov	x21, #0x0                   	// #0
  4175c8:	str	x20, [x23, #8]
  4175cc:	mov	x24, #0x200                 	// #512
  4175d0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4175d4:	strb	wzr, [x0, x20]
  4175d8:	str	x0, [x23, #16]
  4175dc:	nop
  4175e0:	cmp	x20, #0x200
  4175e4:	csel	x22, x20, x24, ls  // ls = plast
  4175e8:	cbz	x19, 417634 <wcrtomb@plt+0x12a14>
  4175ec:	ldr	x0, [x23, #16]
  4175f0:	mov	x1, x19
  4175f4:	mov	x2, x22
  4175f8:	sub	x20, x20, x22
  4175fc:	add	x0, x0, x21
  417600:	bl	403f70 <memcpy@plt>
  417604:	mov	x0, x19
  417608:	add	x21, x21, x22
  41760c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  417610:	bl	406550 <wcrtomb@plt+0x1930>
  417614:	mov	x19, x0
  417618:	cmp	x20, #0x0
  41761c:	b.gt	4175e0 <wcrtomb@plt+0x129c0>
  417620:	ldp	x19, x20, [sp, #16]
  417624:	ldp	x21, x22, [sp, #32]
  417628:	ldp	x23, x24, [sp, #48]
  41762c:	ldp	x29, x30, [sp], #64
  417630:	ret
  417634:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  417638:	ldr	x0, [x0, #1136]
  41763c:	cbz	x0, 417644 <wcrtomb@plt+0x12a24>
  417640:	blr	x0
  417644:	mov	w2, #0x5                   	// #5
  417648:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41764c:	mov	x0, #0x0                   	// #0
  417650:	add	x1, x1, #0x378
  417654:	bl	4049c0 <dcgettext@plt>
  417658:	mov	x2, x0
  41765c:	mov	w1, #0x0                   	// #0
  417660:	mov	w0, #0x0                   	// #0
  417664:	bl	404050 <error@plt>
  417668:	bl	410460 <wcrtomb@plt+0xb840>
  41766c:	nop
  417670:	stp	x29, x30, [sp, #-64]!
  417674:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  417678:	mov	x29, sp
  41767c:	stp	x19, x20, [sp, #16]
  417680:	ldr	x19, [x1, #2248]
  417684:	stp	x21, x22, [sp, #32]
  417688:	mov	x22, x0
  41768c:	cbnz	x19, 4176c4 <wcrtomb@plt+0x12aa4>
  417690:	b	4176f4 <wcrtomb@plt+0x12ad4>
  417694:	ldr	x20, [sp, #56]
  417698:	mov	x0, x20
  41769c:	bl	403ff0 <strlen@plt>
  4176a0:	mov	x3, x0
  4176a4:	mov	x2, x20
  4176a8:	mov	x1, x21
  4176ac:	mov	x0, x22
  4176b0:	bl	413c18 <wcrtomb@plt+0xeff8>
  4176b4:	ldr	x0, [sp, #56]
  4176b8:	bl	4047b0 <free@plt>
  4176bc:	ldr	x19, [x19]
  4176c0:	cbz	x19, 4176f4 <wcrtomb@plt+0x12ad4>
  4176c4:	ldp	x21, x20, [x19, #8]
  4176c8:	add	x2, sp, #0x38
  4176cc:	mov	w0, #0x1                   	// #1
  4176d0:	mov	x1, x20
  4176d4:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4176d8:	tst	w0, #0xff
  4176dc:	b.ne	417694 <wcrtomb@plt+0x12a74>  // b.any
  4176e0:	mov	x0, x20
  4176e4:	bl	450328 <argp_parse@@Base+0x10548>
  4176e8:	mov	x20, x0
  4176ec:	str	x0, [sp, #56]
  4176f0:	b	41769c <wcrtomb@plt+0x12a7c>
  4176f4:	ldr	x0, [x22]
  4176f8:	ldp	x4, x3, [x0, #16]
  4176fc:	cmp	x3, x4
  417700:	b.eq	41774c <wcrtomb@plt+0x12b2c>  // b.none
  417704:	ldr	x1, [x0, #48]
  417708:	ldr	x2, [x0, #8]
  41770c:	add	x3, x3, x1
  417710:	ldr	x5, [x0, #32]
  417714:	bic	x1, x3, x1
  417718:	str	x1, [x0, #24]
  41771c:	sub	x3, x1, x2
  417720:	sub	x2, x5, x2
  417724:	cmp	x3, x2
  417728:	b.ls	417734 <wcrtomb@plt+0x12b14>  // b.plast
  41772c:	mov	x1, x5
  417730:	str	x5, [x0, #24]
  417734:	ldp	x19, x20, [sp, #16]
  417738:	str	x1, [x0, #16]
  41773c:	str	x4, [x22, #16]
  417740:	ldp	x21, x22, [sp, #32]
  417744:	ldp	x29, x30, [sp], #64
  417748:	ret
  41774c:	ldrb	w1, [x0, #80]
  417750:	orr	w1, w1, #0x2
  417754:	strb	w1, [x0, #80]
  417758:	b	417704 <wcrtomb@plt+0x12ae4>
  41775c:	nop
  417760:	stp	x29, x30, [sp, #-64]!
  417764:	mov	x29, sp
  417768:	stp	x19, x20, [sp, #16]
  41776c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  417770:	add	x20, x20, #0x878
  417774:	stp	x21, x22, [sp, #32]
  417778:	mov	x21, x0
  41777c:	ldr	x19, [x20, #72]
  417780:	ldr	x0, [x0]
  417784:	cbz	x19, 417824 <wcrtomb@plt+0x12c04>
  417788:	cbnz	x0, 4177c0 <wcrtomb@plt+0x12ba0>
  41778c:	b	4177f0 <wcrtomb@plt+0x12bd0>
  417790:	ldr	x20, [sp, #56]
  417794:	mov	x0, x20
  417798:	bl	403ff0 <strlen@plt>
  41779c:	mov	x3, x0
  4177a0:	mov	x2, x20
  4177a4:	mov	x1, x22
  4177a8:	mov	x0, x21
  4177ac:	bl	413c18 <wcrtomb@plt+0xeff8>
  4177b0:	ldr	x0, [sp, #56]
  4177b4:	bl	4047b0 <free@plt>
  4177b8:	ldr	x19, [x19]
  4177bc:	cbz	x19, 417820 <wcrtomb@plt+0x12c00>
  4177c0:	ldp	x22, x20, [x19, #8]
  4177c4:	add	x2, sp, #0x38
  4177c8:	mov	w0, #0x1                   	// #1
  4177cc:	mov	x1, x20
  4177d0:	bl	431410 <wcrtomb@plt+0x2c7f0>
  4177d4:	tst	w0, #0xff
  4177d8:	b.ne	417790 <wcrtomb@plt+0x12b70>  // b.any
  4177dc:	mov	x0, x20
  4177e0:	bl	450328 <argp_parse@@Base+0x10548>
  4177e4:	mov	x20, x0
  4177e8:	str	x0, [sp, #56]
  4177ec:	b	417798 <wcrtomb@plt+0x12b78>
  4177f0:	mov	x0, #0x58                  	// #88
  4177f4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4177f8:	str	x0, [x21]
  4177fc:	adrp	x4, 404000 <fputs@plt>
  417800:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  417804:	add	x4, x4, #0x7b0
  417808:	add	x3, x3, #0x1a0
  41780c:	mov	x2, #0x0                   	// #0
  417810:	mov	x1, #0x0                   	// #0
  417814:	bl	451000 <_obstack_begin@@Base>
  417818:	ldr	x19, [x20, #72]
  41781c:	cbnz	x19, 4177c0 <wcrtomb@plt+0x12ba0>
  417820:	ldr	x0, [x21]
  417824:	cbz	x0, 417858 <wcrtomb@plt+0x12c38>
  417828:	mov	x0, x21
  41782c:	bl	417670 <wcrtomb@plt+0x12a50>
  417830:	bl	416840 <wcrtomb@plt+0x11c20>
  417834:	mov	x1, x0
  417838:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41783c:	mov	x3, x21
  417840:	mov	x19, x0
  417844:	mov	w0, #0x67                  	// #103
  417848:	ldr	x2, [x2, #840]
  41784c:	bl	4168f0 <wcrtomb@plt+0x11cd0>
  417850:	mov	x0, x19
  417854:	bl	4047b0 <free@plt>
  417858:	ldp	x19, x20, [sp, #16]
  41785c:	ldp	x21, x22, [sp, #32]
  417860:	ldp	x29, x30, [sp], #64
  417864:	ret
  417868:	stp	x29, x30, [sp, #-32]!
  41786c:	mov	x29, sp
  417870:	str	x19, [sp, #16]
  417874:	mov	x19, x0
  417878:	ldr	x0, [x0]
  41787c:	cbz	x0, 4178a4 <wcrtomb@plt+0x12c84>
  417880:	mov	x1, #0x0                   	// #0
  417884:	bl	451360 <_obstack_free@@Base>
  417888:	ldr	x0, [x19]
  41788c:	bl	4047b0 <free@plt>
  417890:	str	xzr, [x19]
  417894:	stp	xzr, xzr, [x19, #8]
  417898:	ldr	x19, [sp, #16]
  41789c:	ldp	x29, x30, [sp], #32
  4178a0:	ret
  4178a4:	ldr	x0, [x19, #16]
  4178a8:	bl	4047b0 <free@plt>
  4178ac:	stp	xzr, xzr, [x19, #8]
  4178b0:	ldr	x19, [sp, #16]
  4178b4:	ldp	x29, x30, [sp], #32
  4178b8:	ret
  4178bc:	nop
  4178c0:	str	xzr, [x0, #24]
  4178c4:	ret
  4178c8:	stp	x29, x30, [sp, #-48]!
  4178cc:	mov	x29, sp
  4178d0:	stp	x19, x20, [sp, #16]
  4178d4:	mov	x19, x0
  4178d8:	ldr	x0, [x0, #16]
  4178dc:	cbz	x0, 4178ec <wcrtomb@plt+0x12ccc>
  4178e0:	ldp	x19, x20, [sp, #16]
  4178e4:	ldp	x29, x30, [sp], #48
  4178e8:	ret
  4178ec:	stp	x21, x22, [sp, #32]
  4178f0:	mov	x20, x1
  4178f4:	ldr	x22, [x19]
  4178f8:	cbz	x22, 417978 <wcrtomb@plt+0x12d58>
  4178fc:	mov	x0, x20
  417900:	bl	403ff0 <strlen@plt>
  417904:	ldr	x1, [x19, #24]
  417908:	mov	x2, x0
  41790c:	mov	x0, x20
  417910:	add	x1, x1, x2
  417914:	str	x1, [x19, #24]
  417918:	bl	403ff0 <strlen@plt>
  41791c:	mov	x21, x0
  417920:	ldp	x0, x1, [x22, #24]
  417924:	sub	x1, x1, x0
  417928:	cmp	x21, x1
  41792c:	b.hi	417964 <wcrtomb@plt+0x12d44>  // b.pmore
  417930:	mov	x1, x20
  417934:	mov	x2, x21
  417938:	bl	403f70 <memcpy@plt>
  41793c:	ldr	x1, [x22, #24]
  417940:	ldr	x0, [x19, #8]
  417944:	add	x1, x1, x21
  417948:	str	x1, [x22, #24]
  41794c:	add	x0, x0, x21
  417950:	ldp	x21, x22, [sp, #32]
  417954:	str	x0, [x19, #8]
  417958:	ldp	x19, x20, [sp, #16]
  41795c:	ldp	x29, x30, [sp], #48
  417960:	ret
  417964:	mov	x0, x22
  417968:	mov	x1, x21
  41796c:	bl	4511d8 <_obstack_newchunk@@Base>
  417970:	ldr	x0, [x22, #24]
  417974:	b	417930 <wcrtomb@plt+0x12d10>
  417978:	mov	x0, #0x58                  	// #88
  41797c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  417980:	str	x0, [x19]
  417984:	adrp	x4, 404000 <fputs@plt>
  417988:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  41798c:	add	x4, x4, #0x7b0
  417990:	add	x3, x3, #0x1a0
  417994:	mov	x2, #0x0                   	// #0
  417998:	mov	x1, #0x0                   	// #0
  41799c:	bl	451000 <_obstack_begin@@Base>
  4179a0:	ldr	x22, [x19]
  4179a4:	b	4178fc <wcrtomb@plt+0x12cdc>
  4179a8:	stp	x29, x30, [sp, #-96]!
  4179ac:	mov	x29, sp
  4179b0:	stp	x21, x22, [sp, #32]
  4179b4:	mov	x21, x0
  4179b8:	ldr	x0, [x0, #16]
  4179bc:	cbz	x0, 4179d0 <wcrtomb@plt+0x12db0>
  4179c0:	mov	w0, #0x0                   	// #0
  4179c4:	ldp	x21, x22, [sp, #32]
  4179c8:	ldp	x29, x30, [sp], #96
  4179cc:	ret
  4179d0:	ldr	x0, [x21]
  4179d4:	stp	x19, x20, [sp, #16]
  4179d8:	mov	x22, x1
  4179dc:	stp	x23, x24, [sp, #48]
  4179e0:	cbz	x0, 417b00 <wcrtomb@plt+0x12ee0>
  4179e4:	mov	x0, x22
  4179e8:	bl	403ff0 <strlen@plt>
  4179ec:	ldr	x23, [x21, #24]
  4179f0:	add	x24, sp, #0x5c
  4179f4:	mov	x19, #0x0                   	// #0
  4179f8:	add	x23, x23, #0x3
  4179fc:	add	x23, x23, x0
  417a00:	add	x0, x19, x23
  417a04:	add	x1, sp, #0x48
  417a08:	bl	446868 <argp_parse@@Base+0x6a88>
  417a0c:	mov	x20, x0
  417a10:	mov	x2, x19
  417a14:	sub	x19, x24, x0
  417a18:	cmp	x2, x19
  417a1c:	b.ne	417a00 <wcrtomb@plt+0x12de0>  // b.any
  417a20:	mov	x0, x22
  417a24:	bl	403ff0 <strlen@plt>
  417a28:	ldr	x23, [x21]
  417a2c:	add	x19, x0, x19
  417a30:	add	x19, x19, #0x2
  417a34:	mov	x24, x23
  417a38:	ldp	x1, x2, [x23, #24]
  417a3c:	sub	x0, x2, x1
  417a40:	cmp	x19, x0
  417a44:	b.hi	417ae4 <wcrtomb@plt+0x12ec4>  // b.pmore
  417a48:	add	x1, x1, x19
  417a4c:	ldr	x0, [x21, #8]
  417a50:	str	x1, [x23, #24]
  417a54:	ldr	x1, [x24, #24]
  417a58:	add	x0, x0, x19
  417a5c:	str	x0, [x21, #8]
  417a60:	cmp	x1, x2
  417a64:	b.eq	417b2c <wcrtomb@plt+0x12f0c>  // b.none
  417a68:	add	x0, x1, #0x1
  417a6c:	str	x0, [x24, #24]
  417a70:	mov	w0, #0xa                   	// #10
  417a74:	strb	w0, [x1]
  417a78:	ldp	x3, x1, [x21]
  417a7c:	ldr	x2, [x21, #24]
  417a80:	mvn	x0, x2
  417a84:	ldr	x3, [x3, #24]
  417a88:	sub	x19, x0, x19
  417a8c:	add	x1, x1, #0x1
  417a90:	str	x1, [x21, #8]
  417a94:	add	x19, x3, x19
  417a98:	add	x0, x3, x0
  417a9c:	mov	x1, x19
  417aa0:	bl	403f80 <memmove@plt>
  417aa4:	mov	x1, x20
  417aa8:	mov	x0, x19
  417aac:	bl	404220 <stpcpy@plt>
  417ab0:	mov	w2, #0x20                  	// #32
  417ab4:	strb	w2, [x0], #1
  417ab8:	mov	x1, x22
  417abc:	bl	404220 <stpcpy@plt>
  417ac0:	mov	x1, x0
  417ac4:	mov	w2, #0x3d                  	// #61
  417ac8:	mov	w0, #0x1                   	// #1
  417acc:	strb	w2, [x1]
  417ad0:	ldp	x19, x20, [sp, #16]
  417ad4:	ldp	x21, x22, [sp, #32]
  417ad8:	ldp	x23, x24, [sp, #48]
  417adc:	ldp	x29, x30, [sp], #96
  417ae0:	ret
  417ae4:	mov	x1, x19
  417ae8:	mov	x0, x23
  417aec:	bl	4511d8 <_obstack_newchunk@@Base>
  417af0:	ldr	x24, [x21]
  417af4:	ldr	x1, [x23, #24]
  417af8:	ldr	x2, [x24, #32]
  417afc:	b	417a48 <wcrtomb@plt+0x12e28>
  417b00:	mov	x0, #0x58                  	// #88
  417b04:	bl	4501a0 <argp_parse@@Base+0x103c0>
  417b08:	str	x0, [x21]
  417b0c:	adrp	x4, 404000 <fputs@plt>
  417b10:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  417b14:	add	x4, x4, #0x7b0
  417b18:	add	x3, x3, #0x1a0
  417b1c:	mov	x2, #0x0                   	// #0
  417b20:	mov	x1, #0x0                   	// #0
  417b24:	bl	451000 <_obstack_begin@@Base>
  417b28:	b	4179e4 <wcrtomb@plt+0x12dc4>
  417b2c:	mov	x1, #0x1                   	// #1
  417b30:	mov	x0, x24
  417b34:	bl	4511d8 <_obstack_newchunk@@Base>
  417b38:	ldr	x1, [x24, #24]
  417b3c:	b	417a68 <wcrtomb@plt+0x12e48>
  417b40:	ldp	x2, x0, [x0, #24]
  417b44:	add	x2, x2, x0
  417b48:	udiv	x0, x2, x1
  417b4c:	msub	x0, x0, x1, x2
  417b50:	ret
  417b54:	nop
  417b58:	ldr	x3, [x0, #24]
  417b5c:	ldr	x2, [x1, #24]
  417b60:	cmp	x3, x2
  417b64:	b.eq	417b70 <wcrtomb@plt+0x12f50>  // b.none
  417b68:	mov	w0, #0x0                   	// #0
  417b6c:	ret
  417b70:	ldr	x2, [x0, #32]
  417b74:	ldr	x0, [x1, #32]
  417b78:	cmp	x2, x0
  417b7c:	cset	w0, eq  // eq = none
  417b80:	ret
  417b84:	nop
  417b88:	ldr	x0, [x0]
  417b8c:	ldr	x1, [x1]
  417b90:	b	404710 <strcmp@plt>
  417b94:	nop
  417b98:	stp	x29, x30, [sp, #-16]!
  417b9c:	mov	x29, sp
  417ba0:	ldr	x0, [x0, #80]
  417ba4:	ldr	x1, [x1, #80]
  417ba8:	bl	404710 <strcmp@plt>
  417bac:	cmp	w0, #0x0
  417bb0:	cset	w0, eq  // eq = none
  417bb4:	ldp	x29, x30, [sp], #16
  417bb8:	ret
  417bbc:	nop
  417bc0:	ldr	x0, [x0, #80]
  417bc4:	b	444be0 <argp_parse@@Base+0x4e00>
  417bc8:	stp	x29, x30, [sp, #-48]!
  417bcc:	mov	x29, sp
  417bd0:	stp	x19, x20, [sp, #16]
  417bd4:	mov	x19, x0
  417bd8:	mov	x20, x2
  417bdc:	stp	x21, x22, [sp, #32]
  417be0:	mov	x21, x1
  417be4:	ldrb	w0, [x1]
  417be8:	cbnz	w0, 417ca4 <wcrtomb@plt+0x13084>
  417bec:	ldp	x0, x1, [x19, #24]
  417bf0:	cmp	x1, x0
  417bf4:	b.eq	417cc8 <wcrtomb@plt+0x130a8>  // b.none
  417bf8:	add	x1, x0, #0x1
  417bfc:	str	x1, [x19, #24]
  417c00:	mov	w1, #0x52                  	// #82
  417c04:	strb	w1, [x0]
  417c08:	mov	x0, x21
  417c0c:	bl	403ff0 <strlen@plt>
  417c10:	add	x22, x0, #0x1
  417c14:	ldp	x0, x1, [x19, #24]
  417c18:	sub	x1, x1, x0
  417c1c:	cmp	x22, x1
  417c20:	b.hi	417d2c <wcrtomb@plt+0x1310c>  // b.pmore
  417c24:	mov	x1, x21
  417c28:	mov	x2, x22
  417c2c:	bl	403f70 <memcpy@plt>
  417c30:	ldr	x3, [x19, #24]
  417c34:	add	x3, x3, x22
  417c38:	str	x3, [x19, #24]
  417c3c:	ldrb	w0, [x20]
  417c40:	cbnz	w0, 417cf0 <wcrtomb@plt+0x130d0>
  417c44:	ldr	x0, [x19, #32]
  417c48:	cmp	x0, x3
  417c4c:	b.eq	417d18 <wcrtomb@plt+0x130f8>  // b.none
  417c50:	add	x0, x3, #0x1
  417c54:	str	x0, [x19, #24]
  417c58:	mov	w0, #0x54                  	// #84
  417c5c:	strb	w0, [x3]
  417c60:	mov	x0, x20
  417c64:	bl	403ff0 <strlen@plt>
  417c68:	add	x21, x0, #0x1
  417c6c:	ldp	x0, x1, [x19, #24]
  417c70:	sub	x1, x1, x0
  417c74:	cmp	x21, x1
  417c78:	b.hi	417cdc <wcrtomb@plt+0x130bc>  // b.pmore
  417c7c:	mov	x1, x20
  417c80:	mov	x2, x21
  417c84:	bl	403f70 <memcpy@plt>
  417c88:	ldr	x0, [x19, #24]
  417c8c:	add	x0, x0, x21
  417c90:	ldp	x21, x22, [sp, #32]
  417c94:	str	x0, [x19, #24]
  417c98:	ldp	x19, x20, [sp, #16]
  417c9c:	ldp	x29, x30, [sp], #48
  417ca0:	ret
  417ca4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  417ca8:	mov	x0, x1
  417cac:	mov	w1, #0x0                   	// #0
  417cb0:	ldrb	w2, [x2, #1080]
  417cb4:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  417cb8:	mov	x21, x0
  417cbc:	ldp	x0, x1, [x19, #24]
  417cc0:	cmp	x1, x0
  417cc4:	b.ne	417bf8 <wcrtomb@plt+0x12fd8>  // b.any
  417cc8:	mov	x0, x19
  417ccc:	mov	x1, #0x1                   	// #1
  417cd0:	bl	4511d8 <_obstack_newchunk@@Base>
  417cd4:	ldr	x0, [x19, #24]
  417cd8:	b	417bf8 <wcrtomb@plt+0x12fd8>
  417cdc:	mov	x0, x19
  417ce0:	mov	x1, x21
  417ce4:	bl	4511d8 <_obstack_newchunk@@Base>
  417ce8:	ldr	x0, [x19, #24]
  417cec:	b	417c7c <wcrtomb@plt+0x1305c>
  417cf0:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  417cf4:	mov	x0, x20
  417cf8:	mov	w1, #0x0                   	// #0
  417cfc:	ldrb	w2, [x2, #1080]
  417d00:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  417d04:	mov	x20, x0
  417d08:	ldr	x3, [x19, #24]
  417d0c:	ldr	x0, [x19, #32]
  417d10:	cmp	x0, x3
  417d14:	b.ne	417c50 <wcrtomb@plt+0x13030>  // b.any
  417d18:	mov	x0, x19
  417d1c:	mov	x1, #0x1                   	// #1
  417d20:	bl	4511d8 <_obstack_newchunk@@Base>
  417d24:	ldr	x3, [x19, #24]
  417d28:	b	417c50 <wcrtomb@plt+0x13030>
  417d2c:	mov	x0, x19
  417d30:	mov	x1, x22
  417d34:	bl	4511d8 <_obstack_newchunk@@Base>
  417d38:	ldr	x0, [x19, #24]
  417d3c:	b	417c24 <wcrtomb@plt+0x13004>
  417d40:	sub	sp, sp, #0xd0
  417d44:	stp	x29, x30, [sp, #16]
  417d48:	add	x29, sp, #0x10
  417d4c:	stp	x21, x22, [sp, #48]
  417d50:	mov	x22, x1
  417d54:	stp	x23, x24, [sp, #64]
  417d58:	mov	x24, x2
  417d5c:	mov	x23, x3
  417d60:	ldp	x1, x2, [x0, #8]
  417d64:	stp	x19, x20, [sp, #32]
  417d68:	mov	x20, x0
  417d6c:	stp	x25, x26, [sp, #80]
  417d70:	mov	x25, x4
  417d74:	str	x27, [sp, #96]
  417d78:	cmp	x1, x2
  417d7c:	b.cs	417fac <wcrtomb@plt+0x1338c>  // b.hs, b.nlast
  417d80:	add	x0, x1, #0x1
  417d84:	str	x0, [x20, #8]
  417d88:	ldrb	w21, [x1]
  417d8c:	cmp	w21, #0x2d
  417d90:	mov	x19, #0x0                   	// #0
  417d94:	cset	w26, eq  // eq = none
  417d98:	cmp	w19, #0x0
  417d9c:	add	x27, sp, #0x70
  417da0:	csel	w1, w26, wzr, eq  // eq = none
  417da4:	cbnz	w1, 417de8 <wcrtomb@plt+0x131c8>
  417da8:	sub	w2, w21, #0x30
  417dac:	cmp	w2, #0x9
  417db0:	b.hi	417e7c <wcrtomb@plt+0x1325c>  // b.pmore
  417db4:	strb	w21, [x27, x19]
  417db8:	cmp	x19, #0x14
  417dbc:	b.eq	417e0c <wcrtomb@plt+0x131ec>  // b.none
  417dc0:	ldp	x5, x0, [x20, #8]
  417dc4:	cmp	x5, x0
  417dc8:	b.cs	417df8 <wcrtomb@plt+0x131d8>  // b.hs, b.nlast
  417dcc:	add	x0, x5, #0x1
  417dd0:	str	x0, [x20, #8]
  417dd4:	add	x19, x19, #0x1
  417dd8:	ldrb	w21, [x5]
  417ddc:	cmp	w19, #0x0
  417de0:	csel	w1, w26, wzr, eq  // eq = none
  417de4:	cbz	w1, 417da8 <wcrtomb@plt+0x13188>
  417de8:	ldp	x5, x0, [x20, #8]
  417dec:	strb	w21, [sp, #112]
  417df0:	cmp	x5, x0
  417df4:	b.cc	417dcc <wcrtomb@plt+0x131ac>  // b.lo, b.ul, b.last
  417df8:	mov	x0, x20
  417dfc:	add	x19, x19, #0x1
  417e00:	bl	404b90 <__uflow@plt>
  417e04:	mov	w21, w0
  417e08:	b	417ddc <wcrtomb@plt+0x131bc>
  417e0c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  417e10:	ldr	x0, [x0, #1136]
  417e14:	cbz	x0, 417e1c <wcrtomb@plt+0x131fc>
  417e18:	blr	x0
  417e1c:	mov	w2, #0x5                   	// #5
  417e20:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417e24:	mov	x0, #0x0                   	// #0
  417e28:	add	x1, x1, #0x5d0
  417e2c:	bl	4049c0 <dcgettext@plt>
  417e30:	mov	x19, x0
  417e34:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  417e38:	ldr	x0, [x1, #960]
  417e3c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  417e40:	mov	x21, x0
  417e44:	mov	x0, x20
  417e48:	bl	404900 <ftello@plt>
  417e4c:	add	x1, sp, #0x88
  417e50:	bl	4467e8 <argp_parse@@Base+0x6a08>
  417e54:	mov	x7, x27
  417e58:	mov	x4, x0
  417e5c:	mov	x3, x21
  417e60:	mov	x2, x19
  417e64:	mov	x5, x22
  417e68:	mov	w6, #0x15                  	// #21
  417e6c:	mov	w1, #0x0                   	// #0
  417e70:	mov	w0, #0x0                   	// #0
  417e74:	bl	404050 <error@plt>
  417e78:	bl	410460 <wcrtomb@plt+0xb840>
  417e7c:	strb	wzr, [x27, w19, sxtw]
  417e80:	cmp	w21, #0x0
  417e84:	b.lt	417f4c <wcrtomb@plt+0x1332c>  // b.tstop
  417e88:	b.ne	418050 <wcrtomb@plt+0x13430>  // b.any
  417e8c:	mov	x3, x23
  417e90:	mov	x2, x24
  417e94:	mov	x1, #0x0                   	// #0
  417e98:	mov	x0, x27
  417e9c:	bl	41efb8 <wcrtomb@plt+0x1a398>
  417ea0:	str	x0, [x25]
  417ea4:	bl	404ad0 <__errno_location@plt>
  417ea8:	ldr	w19, [x0]
  417eac:	mov	w1, #0x1                   	// #1
  417eb0:	cbnz	w19, 417ed8 <wcrtomb@plt+0x132b8>
  417eb4:	mov	w0, w1
  417eb8:	ldp	x29, x30, [sp, #16]
  417ebc:	ldp	x19, x20, [sp, #32]
  417ec0:	ldp	x21, x22, [sp, #48]
  417ec4:	ldp	x23, x24, [sp, #64]
  417ec8:	ldp	x25, x26, [sp, #80]
  417ecc:	ldr	x27, [sp, #96]
  417ed0:	add	sp, sp, #0xd0
  417ed4:	ret
  417ed8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  417edc:	cmp	w19, #0x22
  417ee0:	ldr	x0, [x0, #1136]
  417ee4:	b.eq	417fb8 <wcrtomb@plt+0x13398>  // b.none
  417ee8:	cbz	x0, 417ef0 <wcrtomb@plt+0x132d0>
  417eec:	blr	x0
  417ef0:	mov	w2, #0x5                   	// #5
  417ef4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417ef8:	mov	x0, #0x0                   	// #0
  417efc:	add	x1, x1, #0x688
  417f00:	bl	4049c0 <dcgettext@plt>
  417f04:	mov	x21, x0
  417f08:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  417f0c:	ldr	x0, [x1, #960]
  417f10:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  417f14:	mov	x23, x0
  417f18:	mov	x0, x20
  417f1c:	bl	404900 <ftello@plt>
  417f20:	add	x1, sp, #0x88
  417f24:	bl	4467e8 <argp_parse@@Base+0x6a08>
  417f28:	mov	x6, x27
  417f2c:	mov	x4, x0
  417f30:	mov	x5, x22
  417f34:	mov	x3, x23
  417f38:	mov	x2, x21
  417f3c:	mov	w1, w19
  417f40:	mov	w0, #0x0                   	// #0
  417f44:	bl	404050 <error@plt>
  417f48:	bl	410460 <wcrtomb@plt+0xb840>
  417f4c:	ldr	w2, [x20]
  417f50:	tbnz	w2, #5, 418044 <wcrtomb@plt+0x13424>
  417f54:	cbz	w19, 417eb4 <wcrtomb@plt+0x13294>
  417f58:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  417f5c:	ldr	x0, [x0, #1136]
  417f60:	cbz	x0, 417f68 <wcrtomb@plt+0x13348>
  417f64:	blr	x0
  417f68:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  417f6c:	ldr	x0, [x0, #960]
  417f70:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  417f74:	mov	x19, x0
  417f78:	mov	w2, #0x5                   	// #5
  417f7c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417f80:	mov	x0, #0x0                   	// #0
  417f84:	add	x1, x1, #0x5f8
  417f88:	bl	4049c0 <dcgettext@plt>
  417f8c:	mov	x4, x0
  417f90:	mov	x3, x19
  417f94:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417f98:	add	x2, x2, #0x618
  417f9c:	mov	w1, #0x0                   	// #0
  417fa0:	mov	w0, #0x0                   	// #0
  417fa4:	bl	404050 <error@plt>
  417fa8:	bl	410460 <wcrtomb@plt+0xb840>
  417fac:	bl	404b90 <__uflow@plt>
  417fb0:	mov	w21, w0
  417fb4:	b	417d8c <wcrtomb@plt+0x1316c>
  417fb8:	cbz	x0, 417fc0 <wcrtomb@plt+0x133a0>
  417fbc:	blr	x0
  417fc0:	mov	w2, #0x5                   	// #5
  417fc4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  417fc8:	mov	x0, #0x0                   	// #0
  417fcc:	add	x1, x1, #0x658
  417fd0:	bl	4049c0 <dcgettext@plt>
  417fd4:	mov	x19, x0
  417fd8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  417fdc:	ldr	x0, [x1, #960]
  417fe0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  417fe4:	mov	x21, x0
  417fe8:	mov	x0, x20
  417fec:	bl	404900 <ftello@plt>
  417ff0:	add	x1, sp, #0x88
  417ff4:	bl	4467e8 <argp_parse@@Base+0x6a08>
  417ff8:	add	x1, sp, #0xa0
  417ffc:	mov	x20, x0
  418000:	mov	x0, x24
  418004:	bl	446768 <argp_parse@@Base+0x6988>
  418008:	add	x1, sp, #0xb8
  41800c:	mov	x24, x0
  418010:	mov	x0, x23
  418014:	bl	446868 <argp_parse@@Base+0x6a88>
  418018:	mov	x5, x24
  41801c:	mov	x6, x0
  418020:	mov	x4, x20
  418024:	mov	x3, x21
  418028:	mov	x2, x19
  41802c:	mov	x7, x22
  418030:	mov	w1, #0x22                  	// #34
  418034:	mov	w0, #0x0                   	// #0
  418038:	str	x27, [sp]
  41803c:	bl	404050 <error@plt>
  418040:	bl	410460 <wcrtomb@plt+0xb840>
  418044:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418048:	ldr	x0, [x0, #960]
  41804c:	bl	433df8 <wcrtomb@plt+0x2f1d8>
  418050:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418054:	ldr	x0, [x0, #1136]
  418058:	cbz	x0, 418060 <wcrtomb@plt+0x13440>
  41805c:	blr	x0
  418060:	mov	w2, #0x5                   	// #5
  418064:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418068:	mov	x0, #0x0                   	// #0
  41806c:	add	x1, x1, #0x620
  418070:	bl	4049c0 <dcgettext@plt>
  418074:	mov	x19, x0
  418078:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41807c:	ldr	x0, [x1, #960]
  418080:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  418084:	mov	x23, x0
  418088:	mov	x0, x20
  41808c:	bl	404900 <ftello@plt>
  418090:	add	x1, sp, #0x88
  418094:	bl	4467e8 <argp_parse@@Base+0x6a08>
  418098:	mov	w7, w21
  41809c:	mov	x4, x0
  4180a0:	mov	x6, x27
  4180a4:	mov	x5, x22
  4180a8:	mov	x3, x23
  4180ac:	mov	x2, x19
  4180b0:	mov	w1, #0x0                   	// #0
  4180b4:	mov	w0, #0x0                   	// #0
  4180b8:	bl	404050 <error@plt>
  4180bc:	bl	410460 <wcrtomb@plt+0xb840>
  4180c0:	stp	x29, x30, [sp, #-96]!
  4180c4:	mov	x29, sp
  4180c8:	stp	x19, x20, [sp, #16]
  4180cc:	ldr	x20, [x0, #136]
  4180d0:	stp	x21, x22, [sp, #32]
  4180d4:	mov	x22, x0
  4180d8:	mov	x0, x20
  4180dc:	stp	x25, x26, [sp, #64]
  4180e0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4180e4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4180e8:	mov	x25, x0
  4180ec:	ldr	x0, [x1, #104]
  4180f0:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4180f4:	mov	x0, x22
  4180f8:	bl	405618 <wcrtomb@plt+0x9f8>
  4180fc:	cbz	x20, 4181b4 <wcrtomb@plt+0x13594>
  418100:	mov	x21, x25
  418104:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  418108:	stp	x23, x24, [sp, #48]
  41810c:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x16bf0>
  418110:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  418114:	add	x24, x24, #0x378
  418118:	add	x23, x23, #0xdf0
  41811c:	str	x27, [sp, #80]
  418120:	b	418160 <wcrtomb@plt+0x13540>
  418124:	mov	x0, x27
  418128:	bl	406128 <wcrtomb@plt+0x1508>
  41812c:	mov	x19, x0
  418130:	mov	x1, x27
  418134:	cmp	x19, x20
  418138:	mov	x0, x21
  41813c:	csel	x19, x19, x20, ls  // ls = plast
  418140:	mov	x2, x19
  418144:	add	x21, x21, x19
  418148:	bl	403f70 <memcpy@plt>
  41814c:	sub	x0, x19, #0x1
  418150:	add	x0, x27, x0
  418154:	bl	4060e0 <wcrtomb@plt+0x14c0>
  418158:	subs	x20, x20, x19
  41815c:	b.eq	4181ac <wcrtomb@plt+0x1358c>  // b.none
  418160:	mov	x0, x20
  418164:	bl	405720 <wcrtomb@plt+0xb00>
  418168:	bl	406550 <wcrtomb@plt+0x1930>
  41816c:	mov	x27, x0
  418170:	cbnz	x0, 418124 <wcrtomb@plt+0x13504>
  418174:	ldr	x0, [x26, #1136]
  418178:	cbz	x0, 418180 <wcrtomb@plt+0x13560>
  41817c:	blr	x0
  418180:	mov	x1, x24
  418184:	mov	w2, #0x5                   	// #5
  418188:	mov	x0, #0x0                   	// #0
  41818c:	bl	4049c0 <dcgettext@plt>
  418190:	mov	w1, #0x0                   	// #0
  418194:	mov	x2, x0
  418198:	mov	w0, #0x1                   	// #1
  41819c:	bl	404050 <error@plt>
  4181a0:	mov	w0, #0x2                   	// #2
  4181a4:	str	w0, [x23]
  4181a8:	b	418124 <wcrtomb@plt+0x13504>
  4181ac:	ldp	x23, x24, [sp, #48]
  4181b0:	ldr	x27, [sp, #80]
  4181b4:	bl	4056c0 <wcrtomb@plt+0xaa0>
  4181b8:	mov	w0, #0x1                   	// #1
  4181bc:	strb	w0, [x22, #377]
  4181c0:	ldp	x19, x20, [sp, #16]
  4181c4:	str	x25, [x22, #384]
  4181c8:	ldp	x21, x22, [sp, #32]
  4181cc:	ldp	x25, x26, [sp, #64]
  4181d0:	ldp	x29, x30, [sp], #96
  4181d4:	ret
  4181d8:	sub	sp, sp, #0xc0
  4181dc:	stp	x29, x30, [sp, #16]
  4181e0:	add	x29, sp, #0x10
  4181e4:	stp	x21, x22, [sp, #48]
  4181e8:	mov	x22, x1
  4181ec:	stp	x23, x24, [sp, #64]
  4181f0:	mov	x23, x2
  4181f4:	mov	x24, x3
  4181f8:	ldp	x1, x2, [x0, #8]
  4181fc:	stp	x19, x20, [sp, #32]
  418200:	mov	x20, x0
  418204:	stp	x25, x26, [sp, #80]
  418208:	cmp	x1, x2
  41820c:	b.cs	418438 <wcrtomb@plt+0x13818>  // b.hs, b.nlast
  418210:	add	x0, x1, #0x1
  418214:	str	x0, [x20, #8]
  418218:	ldrb	w21, [x1]
  41821c:	cmp	w21, #0x2d
  418220:	mov	x19, #0x0                   	// #0
  418224:	cset	w25, eq  // eq = none
  418228:	cmp	w19, #0x0
  41822c:	add	x26, sp, #0x60
  418230:	csel	w4, w25, wzr, eq  // eq = none
  418234:	cbnz	w4, 418278 <wcrtomb@plt+0x13658>
  418238:	sub	w1, w21, #0x30
  41823c:	cmp	w1, #0x9
  418240:	b.hi	41830c <wcrtomb@plt+0x136ec>  // b.pmore
  418244:	strb	w21, [x26, x19]
  418248:	cmp	x19, #0x14
  41824c:	b.eq	41829c <wcrtomb@plt+0x1367c>  // b.none
  418250:	ldp	x4, x0, [x20, #8]
  418254:	cmp	x4, x0
  418258:	b.cs	418288 <wcrtomb@plt+0x13668>  // b.hs, b.nlast
  41825c:	add	x0, x4, #0x1
  418260:	str	x0, [x20, #8]
  418264:	add	x19, x19, #0x1
  418268:	ldrb	w21, [x4]
  41826c:	cmp	w19, #0x0
  418270:	csel	w4, w25, wzr, eq  // eq = none
  418274:	cbz	w4, 418238 <wcrtomb@plt+0x13618>
  418278:	ldp	x4, x0, [x20, #8]
  41827c:	strb	w21, [sp, #96]
  418280:	cmp	x4, x0
  418284:	b.cc	41825c <wcrtomb@plt+0x1363c>  // b.lo, b.ul, b.last
  418288:	mov	x0, x20
  41828c:	add	x19, x19, #0x1
  418290:	bl	404b90 <__uflow@plt>
  418294:	mov	w21, w0
  418298:	b	41826c <wcrtomb@plt+0x1364c>
  41829c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4182a0:	ldr	x0, [x0, #1136]
  4182a4:	cbz	x0, 4182ac <wcrtomb@plt+0x1368c>
  4182a8:	blr	x0
  4182ac:	mov	w2, #0x5                   	// #5
  4182b0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4182b4:	mov	x0, #0x0                   	// #0
  4182b8:	add	x1, x1, #0x5d0
  4182bc:	bl	4049c0 <dcgettext@plt>
  4182c0:	mov	x19, x0
  4182c4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4182c8:	ldr	x0, [x1, #960]
  4182cc:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4182d0:	mov	x21, x0
  4182d4:	mov	x0, x20
  4182d8:	bl	404900 <ftello@plt>
  4182dc:	add	x1, sp, #0x78
  4182e0:	bl	4467e8 <argp_parse@@Base+0x6a08>
  4182e4:	mov	x7, x26
  4182e8:	mov	x4, x0
  4182ec:	mov	x3, x21
  4182f0:	mov	x2, x19
  4182f4:	mov	x5, x22
  4182f8:	mov	w6, #0x15                  	// #21
  4182fc:	mov	w1, #0x0                   	// #0
  418300:	mov	w0, #0x0                   	// #0
  418304:	bl	404050 <error@plt>
  418308:	bl	410460 <wcrtomb@plt+0xb840>
  41830c:	strb	wzr, [x26, w19, sxtw]
  418310:	cmp	w21, #0x0
  418314:	b.lt	4183d8 <wcrtomb@plt+0x137b8>  // b.tstop
  418318:	b.ne	4184dc <wcrtomb@plt+0x138bc>  // b.any
  41831c:	mov	x3, x23
  418320:	mov	x2, #0x0                   	// #0
  418324:	mov	x1, #0x0                   	// #0
  418328:	mov	x0, x26
  41832c:	bl	41efb8 <wcrtomb@plt+0x1a398>
  418330:	str	x0, [x24]
  418334:	bl	404ad0 <__errno_location@plt>
  418338:	ldr	w19, [x0]
  41833c:	mov	w4, #0x1                   	// #1
  418340:	cbnz	w19, 418364 <wcrtomb@plt+0x13744>
  418344:	mov	w0, w4
  418348:	ldp	x29, x30, [sp, #16]
  41834c:	ldp	x19, x20, [sp, #32]
  418350:	ldp	x21, x22, [sp, #48]
  418354:	ldp	x23, x24, [sp, #64]
  418358:	ldp	x25, x26, [sp, #80]
  41835c:	add	sp, sp, #0xc0
  418360:	ret
  418364:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418368:	cmp	w19, #0x22
  41836c:	ldr	x0, [x0, #1136]
  418370:	b.eq	418444 <wcrtomb@plt+0x13824>  // b.none
  418374:	cbz	x0, 41837c <wcrtomb@plt+0x1375c>
  418378:	blr	x0
  41837c:	mov	w2, #0x5                   	// #5
  418380:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418384:	mov	x0, #0x0                   	// #0
  418388:	add	x1, x1, #0x688
  41838c:	bl	4049c0 <dcgettext@plt>
  418390:	mov	x21, x0
  418394:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  418398:	ldr	x0, [x1, #960]
  41839c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4183a0:	mov	x23, x0
  4183a4:	mov	x0, x20
  4183a8:	bl	404900 <ftello@plt>
  4183ac:	add	x1, sp, #0x78
  4183b0:	bl	4467e8 <argp_parse@@Base+0x6a08>
  4183b4:	mov	x6, x26
  4183b8:	mov	x4, x0
  4183bc:	mov	x5, x22
  4183c0:	mov	x3, x23
  4183c4:	mov	x2, x21
  4183c8:	mov	w1, w19
  4183cc:	mov	w0, #0x0                   	// #0
  4183d0:	bl	404050 <error@plt>
  4183d4:	bl	410460 <wcrtomb@plt+0xb840>
  4183d8:	ldr	w1, [x20]
  4183dc:	tbnz	w1, #5, 4184d0 <wcrtomb@plt+0x138b0>
  4183e0:	cbz	w19, 418344 <wcrtomb@plt+0x13724>
  4183e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4183e8:	ldr	x0, [x0, #1136]
  4183ec:	cbz	x0, 4183f4 <wcrtomb@plt+0x137d4>
  4183f0:	blr	x0
  4183f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4183f8:	ldr	x0, [x0, #960]
  4183fc:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  418400:	mov	x19, x0
  418404:	mov	w2, #0x5                   	// #5
  418408:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41840c:	mov	x0, #0x0                   	// #0
  418410:	add	x1, x1, #0x5f8
  418414:	bl	4049c0 <dcgettext@plt>
  418418:	mov	x4, x0
  41841c:	mov	x3, x19
  418420:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418424:	add	x2, x2, #0x618
  418428:	mov	w1, #0x0                   	// #0
  41842c:	mov	w0, #0x0                   	// #0
  418430:	bl	404050 <error@plt>
  418434:	bl	410460 <wcrtomb@plt+0xb840>
  418438:	bl	404b90 <__uflow@plt>
  41843c:	mov	w21, w0
  418440:	b	41821c <wcrtomb@plt+0x135fc>
  418444:	cbz	x0, 41844c <wcrtomb@plt+0x1382c>
  418448:	blr	x0
  41844c:	mov	w2, #0x5                   	// #5
  418450:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418454:	mov	x0, #0x0                   	// #0
  418458:	add	x1, x1, #0x658
  41845c:	bl	4049c0 <dcgettext@plt>
  418460:	mov	x19, x0
  418464:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  418468:	ldr	x0, [x1, #960]
  41846c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  418470:	mov	x21, x0
  418474:	mov	x0, x20
  418478:	bl	404900 <ftello@plt>
  41847c:	add	x1, sp, #0x78
  418480:	bl	4467e8 <argp_parse@@Base+0x6a08>
  418484:	add	x1, sp, #0x90
  418488:	mov	x20, x0
  41848c:	mov	x0, #0x0                   	// #0
  418490:	bl	446768 <argp_parse@@Base+0x6988>
  418494:	add	x1, sp, #0xa8
  418498:	mov	x24, x0
  41849c:	mov	x0, x23
  4184a0:	bl	446868 <argp_parse@@Base+0x6a88>
  4184a4:	mov	x5, x24
  4184a8:	mov	x6, x0
  4184ac:	mov	x4, x20
  4184b0:	mov	x3, x21
  4184b4:	mov	x2, x19
  4184b8:	mov	x7, x22
  4184bc:	mov	w1, #0x22                  	// #34
  4184c0:	mov	w0, #0x0                   	// #0
  4184c4:	str	x26, [sp]
  4184c8:	bl	404050 <error@plt>
  4184cc:	bl	410460 <wcrtomb@plt+0xb840>
  4184d0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4184d4:	ldr	x0, [x0, #960]
  4184d8:	bl	433df8 <wcrtomb@plt+0x2f1d8>
  4184dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4184e0:	ldr	x0, [x0, #1136]
  4184e4:	cbz	x0, 4184ec <wcrtomb@plt+0x138cc>
  4184e8:	blr	x0
  4184ec:	mov	w2, #0x5                   	// #5
  4184f0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4184f4:	mov	x0, #0x0                   	// #0
  4184f8:	add	x1, x1, #0x620
  4184fc:	bl	4049c0 <dcgettext@plt>
  418500:	mov	x19, x0
  418504:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  418508:	ldr	x0, [x1, #960]
  41850c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  418510:	mov	x23, x0
  418514:	mov	x0, x20
  418518:	bl	404900 <ftello@plt>
  41851c:	add	x1, sp, #0x78
  418520:	bl	4467e8 <argp_parse@@Base+0x6a08>
  418524:	mov	w7, w21
  418528:	mov	x4, x0
  41852c:	mov	x6, x26
  418530:	mov	x5, x22
  418534:	mov	x3, x23
  418538:	mov	x2, x19
  41853c:	mov	w1, #0x0                   	// #0
  418540:	mov	w0, #0x0                   	// #0
  418544:	bl	404050 <error@plt>
  418548:	bl	410460 <wcrtomb@plt+0xb840>
  41854c:	nop
  418550:	stp	x29, x30, [sp, #-64]!
  418554:	mov	x29, sp
  418558:	stp	x19, x20, [sp, #16]
  41855c:	stp	x21, x22, [sp, #32]
  418560:	mov	x22, x0
  418564:	str	x23, [sp, #48]
  418568:	ldrb	w0, [x0]
  41856c:	cbz	w0, 41863c <wcrtomb@plt+0x13a1c>
  418570:	mov	x19, x22
  418574:	mov	x20, #0x0                   	// #0
  418578:	mov	x21, #0x1                   	// #1
  41857c:	nop
  418580:	mov	x0, x19
  418584:	bl	403ff0 <strlen@plt>
  418588:	add	x0, x0, #0x1
  41858c:	mov	x2, x20
  418590:	add	x19, x19, x0
  418594:	add	x20, x20, #0x1
  418598:	add	x21, x21, x0
  41859c:	ldrb	w1, [x19]
  4185a0:	cbnz	w1, 418580 <wcrtomb@plt+0x13960>
  4185a4:	add	x19, x2, #0x2
  4185a8:	add	x0, x21, #0x20
  4185ac:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4185b0:	mov	x2, x21
  4185b4:	mov	x21, x0
  4185b8:	add	x0, x0, #0x20
  4185bc:	mov	x1, x22
  4185c0:	str	x0, [x21]
  4185c4:	bl	403f70 <memcpy@plt>
  4185c8:	dup	v0.2d, x20
  4185cc:	mov	x0, x19
  4185d0:	mov	x1, #0x8                   	// #8
  4185d4:	stur	q0, [x21, #8]
  4185d8:	bl	4502b0 <argp_parse@@Base+0x104d0>
  4185dc:	mov	x23, x0
  4185e0:	ldr	x19, [x21]
  4185e4:	str	x0, [x21, #24]
  4185e8:	ldrb	w0, [x19]
  4185ec:	cbz	w0, 418620 <wcrtomb@plt+0x13a00>
  4185f0:	sub	x22, x23, #0x8
  4185f4:	mov	x20, #0x0                   	// #0
  4185f8:	add	x20, x20, #0x1
  4185fc:	add	x1, x19, #0x1
  418600:	mov	x0, x19
  418604:	str	x1, [x22, x20, lsl #3]
  418608:	bl	403ff0 <strlen@plt>
  41860c:	add	x0, x0, #0x1
  418610:	add	x19, x19, x0
  418614:	ldrb	w1, [x19]
  418618:	cbnz	w1, 4185f8 <wcrtomb@plt+0x139d8>
  41861c:	add	x23, x23, x20, lsl #3
  418620:	mov	x0, x21
  418624:	str	xzr, [x23]
  418628:	ldp	x19, x20, [sp, #16]
  41862c:	ldp	x21, x22, [sp, #32]
  418630:	ldr	x23, [sp, #48]
  418634:	ldp	x29, x30, [sp], #64
  418638:	ret
  41863c:	mov	x19, #0x1                   	// #1
  418640:	mov	x0, #0x21                  	// #33
  418644:	mov	x21, x19
  418648:	mov	x20, #0x0                   	// #0
  41864c:	b	4185ac <wcrtomb@plt+0x1398c>
  418650:	stp	x29, x30, [sp, #-96]!
  418654:	mov	x29, sp
  418658:	stp	x19, x20, [sp, #16]
  41865c:	stp	x21, x22, [sp, #32]
  418660:	stp	x23, x24, [sp, #48]
  418664:	stp	x25, x26, [sp, #64]
  418668:	mov	x26, x0
  41866c:	str	x27, [sp, #80]
  418670:	ldrb	w20, [x0]
  418674:	cbz	w20, 4187a4 <wcrtomb@plt+0x13b84>
  418678:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41867c:	mov	x19, x0
  418680:	add	x21, x21, #0x6a0
  418684:	mov	x25, #0x0                   	// #0
  418688:	mov	x23, #0x0                   	// #0
  41868c:	mov	x27, #0x1                   	// #1
  418690:	mov	x0, x19
  418694:	bl	403ff0 <strlen@plt>
  418698:	add	x0, x0, #0x1
  41869c:	mov	w1, w20
  4186a0:	add	x22, x23, #0x1
  4186a4:	add	x19, x19, x0
  4186a8:	add	x27, x27, x0
  4186ac:	mov	x0, x21
  4186b0:	bl	404870 <strchr@plt>
  4186b4:	mov	x1, x22
  4186b8:	cbz	x0, 4186c4 <wcrtomb@plt+0x13aa4>
  4186bc:	add	x22, x23, #0x2
  4186c0:	mov	x23, x1
  4186c4:	ldrb	w20, [x19]
  4186c8:	add	x25, x25, #0x1
  4186cc:	cbnz	w20, 418690 <wcrtomb@plt+0x13a70>
  4186d0:	add	x0, x27, #0x20
  4186d4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4186d8:	mov	x24, x0
  4186dc:	mov	x2, x27
  4186e0:	mov	x1, x26
  4186e4:	add	x0, x0, #0x20
  4186e8:	str	x0, [x24]
  4186ec:	bl	403f70 <memcpy@plt>
  4186f0:	mov	x0, x22
  4186f4:	mov	x1, #0x8                   	// #8
  4186f8:	stp	x25, x23, [x24, #8]
  4186fc:	bl	4502b0 <argp_parse@@Base+0x104d0>
  418700:	mov	x22, x0
  418704:	ldr	x19, [x24]
  418708:	str	x0, [x24, #24]
  41870c:	ldrb	w1, [x19]
  418710:	cbz	w1, 4187bc <wcrtomb@plt+0x13b9c>
  418714:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418718:	mov	x23, #0x0                   	// #0
  41871c:	add	x21, x21, #0x6a0
  418720:	mov	x20, #0x0                   	// #0
  418724:	b	41874c <wcrtomb@plt+0x13b2c>
  418728:	str	x1, [x22, x20]
  41872c:	add	x25, x22, x2
  418730:	add	x23, x23, #0x1
  418734:	bl	403ff0 <strlen@plt>
  418738:	add	x1, x0, #0x1
  41873c:	add	x19, x19, x1
  418740:	lsl	x20, x23, #3
  418744:	ldrb	w1, [x19]
  418748:	cbz	w1, 418780 <wcrtomb@plt+0x13b60>
  41874c:	mov	x0, x21
  418750:	bl	404870 <strchr@plt>
  418754:	add	x25, x22, x20
  418758:	mov	x3, x0
  41875c:	add	x2, x20, #0x8
  418760:	add	x1, x19, #0x1
  418764:	mov	x0, x19
  418768:	cbnz	x3, 418728 <wcrtomb@plt+0x13b08>
  41876c:	bl	403ff0 <strlen@plt>
  418770:	add	x0, x0, #0x1
  418774:	add	x19, x19, x0
  418778:	ldrb	w1, [x19]
  41877c:	cbnz	w1, 41874c <wcrtomb@plt+0x13b2c>
  418780:	mov	x0, x24
  418784:	ldp	x19, x20, [sp, #16]
  418788:	ldp	x21, x22, [sp, #32]
  41878c:	ldp	x23, x24, [sp, #48]
  418790:	ldr	x27, [sp, #80]
  418794:	str	xzr, [x25]
  418798:	ldp	x25, x26, [sp, #64]
  41879c:	ldp	x29, x30, [sp], #96
  4187a0:	ret
  4187a4:	mov	x22, #0x1                   	// #1
  4187a8:	mov	x0, #0x21                  	// #33
  4187ac:	mov	x27, x22
  4187b0:	mov	x25, #0x0                   	// #0
  4187b4:	mov	x23, #0x0                   	// #0
  4187b8:	b	4186d4 <wcrtomb@plt+0x13ab4>
  4187bc:	mov	x25, x0
  4187c0:	b	418780 <wcrtomb@plt+0x13b60>
  4187c4:	nop
  4187c8:	stp	x29, x30, [sp, #-80]!
  4187cc:	mov	x29, sp
  4187d0:	stp	x19, x20, [sp, #16]
  4187d4:	mov	x19, x1
  4187d8:	ldr	w1, [x0, #60]
  4187dc:	tbz	w1, #2, 4189d8 <wcrtomb@plt+0x13db8>
  4187e0:	tst	x1, #0x2
  4187e4:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4187e8:	add	x20, x20, #0xc8
  4187ec:	stp	x21, x22, [sp, #32]
  4187f0:	mov	x21, x0
  4187f4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4187f8:	add	x0, x0, #0x3f8
  4187fc:	csel	x20, x20, x0, ne  // ne = any
  418800:	ldp	x0, x2, [x19, #40]
  418804:	ldrb	w1, [x20]
  418808:	cmp	x2, x0
  41880c:	b.ls	4189f0 <wcrtomb@plt+0x13dd0>  // b.plast
  418810:	add	x2, x0, #0x1
  418814:	str	x2, [x19, #40]
  418818:	strb	w1, [x0]
  41881c:	ldp	x0, x2, [x19, #40]
  418820:	ldrb	w1, [x20, #1]
  418824:	cmp	x0, x2
  418828:	b.cs	418a34 <wcrtomb@plt+0x13e14>  // b.hs, b.nlast
  41882c:	add	x2, x0, #0x1
  418830:	str	x2, [x19, #40]
  418834:	strb	w1, [x0]
  418838:	ldr	x0, [x21, #8]
  41883c:	add	x3, sp, #0x38
  418840:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  418844:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  418848:	bl	41efa0 <wcrtomb@plt+0x1a380>
  41884c:	mov	x20, x0
  418850:	bl	403ff0 <strlen@plt>
  418854:	mov	x1, x0
  418858:	mov	x3, x19
  41885c:	mov	x2, #0x1                   	// #1
  418860:	mov	x0, x20
  418864:	add	x1, x1, #0x1
  418868:	bl	403fd0 <fwrite_unlocked@plt>
  41886c:	ldr	x0, [x21, #16]
  418870:	add	x1, sp, #0x38
  418874:	bl	446768 <argp_parse@@Base+0x6988>
  418878:	mov	x20, x0
  41887c:	bl	403ff0 <strlen@plt>
  418880:	mov	x1, x0
  418884:	mov	x3, x19
  418888:	mov	x0, x20
  41888c:	add	x1, x1, #0x1
  418890:	mov	x2, #0x1                   	// #1
  418894:	bl	403fd0 <fwrite_unlocked@plt>
  418898:	ldr	x0, [x21, #24]
  41889c:	add	x3, sp, #0x38
  4188a0:	mov	x2, #0xffffffffffffffff    	// #-1
  4188a4:	mov	x1, #0x0                   	// #0
  4188a8:	bl	41efa0 <wcrtomb@plt+0x1a380>
  4188ac:	mov	x20, x0
  4188b0:	bl	403ff0 <strlen@plt>
  4188b4:	mov	x1, x0
  4188b8:	mov	x3, x19
  4188bc:	mov	x0, x20
  4188c0:	add	x1, x1, #0x1
  4188c4:	mov	x2, #0x1                   	// #1
  4188c8:	bl	403fd0 <fwrite_unlocked@plt>
  4188cc:	ldr	x0, [x21, #32]
  4188d0:	add	x3, sp, #0x38
  4188d4:	mov	x2, #0xffffffffffffffff    	// #-1
  4188d8:	mov	x1, #0x0                   	// #0
  4188dc:	bl	41efa0 <wcrtomb@plt+0x1a380>
  4188e0:	mov	x20, x0
  4188e4:	bl	403ff0 <strlen@plt>
  4188e8:	mov	x1, x0
  4188ec:	mov	x3, x19
  4188f0:	add	x1, x1, #0x1
  4188f4:	mov	x2, #0x1                   	// #1
  4188f8:	mov	x0, x20
  4188fc:	bl	403fd0 <fwrite_unlocked@plt>
  418900:	ldr	x20, [x21, #88]
  418904:	mov	x0, x20
  418908:	bl	403ff0 <strlen@plt>
  41890c:	mov	x3, x19
  418910:	add	x1, x0, #0x1
  418914:	mov	x2, #0x1                   	// #1
  418918:	mov	x0, x20
  41891c:	bl	403fd0 <fwrite_unlocked@plt>
  418920:	ldr	x22, [x21, #40]
  418924:	cbz	x22, 4189a4 <wcrtomb@plt+0x13d84>
  418928:	mov	x0, #0x18                  	// #24
  41892c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418930:	mov	x21, x0
  418934:	ldr	x0, [x22, #16]
  418938:	str	x22, [x21]
  41893c:	str	wzr, [x21, #8]
  418940:	cbz	x0, 41899c <wcrtomb@plt+0x13d7c>
  418944:	ldr	x0, [x22, #24]
  418948:	mov	x1, #0x1                   	// #1
  41894c:	str	x1, [x21, #16]
  418950:	ldr	x20, [x0]
  418954:	sub	x20, x20, #0x1
  418958:	mov	x0, x20
  41895c:	bl	403ff0 <strlen@plt>
  418960:	mov	x2, #0x1                   	// #1
  418964:	add	x1, x0, #0x1
  418968:	mov	x3, x19
  41896c:	mov	x0, x20
  418970:	bl	403fd0 <fwrite_unlocked@plt>
  418974:	ldr	x1, [x21, #16]
  418978:	ldr	x0, [x22, #16]
  41897c:	add	x2, x1, #0x1
  418980:	cmp	x1, x0
  418984:	b.cs	41899c <wcrtomb@plt+0x13d7c>  // b.hs, b.nlast
  418988:	ldr	x0, [x22, #24]
  41898c:	str	x2, [x21, #16]
  418990:	ldr	x20, [x0, x1, lsl #3]
  418994:	sub	x20, x20, #0x1
  418998:	b	418958 <wcrtomb@plt+0x13d38>
  41899c:	mov	x0, x21
  4189a0:	bl	4047b0 <free@plt>
  4189a4:	ldp	x0, x1, [x19, #40]
  4189a8:	cmp	x1, x0
  4189ac:	b.ls	418a04 <wcrtomb@plt+0x13de4>  // b.plast
  4189b0:	add	x1, x0, #0x1
  4189b4:	str	x1, [x19, #40]
  4189b8:	strb	wzr, [x0]
  4189bc:	ldp	x0, x1, [x19, #40]
  4189c0:	cmp	x0, x1
  4189c4:	b.cs	418a20 <wcrtomb@plt+0x13e00>  // b.hs, b.nlast
  4189c8:	add	x1, x0, #0x1
  4189cc:	str	x1, [x19, #40]
  4189d0:	strb	wzr, [x0]
  4189d4:	ldp	x21, x22, [sp, #32]
  4189d8:	ldr	w0, [x19]
  4189dc:	ldp	x19, x20, [sp, #16]
  4189e0:	eor	x0, x0, #0x20
  4189e4:	ldp	x29, x30, [sp], #80
  4189e8:	ubfx	x0, x0, #5, #1
  4189ec:	ret
  4189f0:	mov	x0, x19
  4189f4:	bl	404680 <__overflow@plt>
  4189f8:	cmn	w0, #0x1
  4189fc:	b.eq	418838 <wcrtomb@plt+0x13c18>  // b.none
  418a00:	b	41881c <wcrtomb@plt+0x13bfc>
  418a04:	mov	x0, x19
  418a08:	mov	w1, #0x0                   	// #0
  418a0c:	bl	404680 <__overflow@plt>
  418a10:	cmn	w0, #0x1
  418a14:	b.ne	4189bc <wcrtomb@plt+0x13d9c>  // b.any
  418a18:	ldp	x21, x22, [sp, #32]
  418a1c:	b	4189d8 <wcrtomb@plt+0x13db8>
  418a20:	mov	x0, x19
  418a24:	mov	w1, #0x0                   	// #0
  418a28:	bl	404680 <__overflow@plt>
  418a2c:	ldp	x21, x22, [sp, #32]
  418a30:	b	4189d8 <wcrtomb@plt+0x13db8>
  418a34:	mov	x0, x19
  418a38:	bl	404680 <__overflow@plt>
  418a3c:	b	418838 <wcrtomb@plt+0x13c18>
  418a40:	stp	x29, x30, [sp, #-96]!
  418a44:	adrp	x7, 497000 <argp_program_version_hook@@Base+0x1e0>
  418a48:	mov	x29, sp
  418a4c:	stp	x27, x28, [sp, #80]
  418a50:	mov	x28, x0
  418a54:	ldr	w0, [x7, #128]
  418a58:	stp	x25, x26, [sp, #64]
  418a5c:	mov	x25, x1
  418a60:	mov	x1, x28
  418a64:	and	w27, w5, #0xff
  418a68:	stp	x19, x20, [sp, #16]
  418a6c:	stp	x21, x22, [sp, #32]
  418a70:	mov	x22, x4
  418a74:	mov	x21, x6
  418a78:	stp	x23, x24, [sp, #48]
  418a7c:	mov	x24, x2
  418a80:	mov	x23, x3
  418a84:	bl	41edd0 <wcrtomb@plt+0x1a1b0>
  418a88:	mov	x26, x0
  418a8c:	mov	x0, x28
  418a90:	bl	403ff0 <strlen@plt>
  418a94:	mov	x20, x0
  418a98:	mov	x0, #0x60                  	// #96
  418a9c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418aa0:	str	xzr, [x0]
  418aa4:	stp	xzr, xzr, [x0, #40]
  418aa8:	mov	x19, x0
  418aac:	cmp	x20, #0x1
  418ab0:	str	wzr, [x0, #60]
  418ab4:	str	xzr, [x0, #64]
  418ab8:	b.ls	418acc <wcrtomb@plt+0x13eac>  // b.plast
  418abc:	sub	x1, x20, #0x1
  418ac0:	ldrb	w0, [x28, x1]
  418ac4:	cmp	w0, #0x2f
  418ac8:	b.eq	418b80 <wcrtomb@plt+0x13f60>  // b.none
  418acc:	add	x0, x20, #0x1
  418ad0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418ad4:	str	x0, [x19, #88]
  418ad8:	mov	x1, x28
  418adc:	mov	x2, x20
  418ae0:	mov	x28, x0
  418ae4:	bl	403f70 <memcpy@plt>
  418ae8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  418aec:	stp	xzr, x26, [x19, #72]
  418af0:	ldr	x1, [x0, #2272]
  418af4:	strb	wzr, [x28, x20]
  418af8:	add	x20, x0, #0x8e0
  418afc:	cbz	x1, 418bc0 <wcrtomb@plt+0x13fa0>
  418b00:	str	x19, [x1]
  418b04:	str	x19, [x0, #2272]
  418b08:	mov	w0, #0x1                   	// #1
  418b0c:	stp	x25, x24, [x19, #8]
  418b10:	stp	x23, x22, [x19, #24]
  418b14:	str	w0, [x19, #56]
  418b18:	cbz	w27, 418b28 <wcrtomb@plt+0x13f08>
  418b1c:	ldr	w0, [x19, #60]
  418b20:	orr	w0, w0, #0x2
  418b24:	str	w0, [x19, #60]
  418b28:	cbz	x21, 418b8c <wcrtomb@plt+0x13f6c>
  418b2c:	mov	x0, x21
  418b30:	bl	418650 <wcrtomb@plt+0x13a30>
  418b34:	str	x0, [x19, #40]
  418b38:	ldr	x0, [x20, #16]
  418b3c:	cbz	x0, 418b98 <wcrtomb@plt+0x13f78>
  418b40:	mov	x1, x19
  418b44:	bl	445410 <argp_parse@@Base+0x5630>
  418b48:	cbz	x0, 418bbc <wcrtomb@plt+0x13f9c>
  418b4c:	ldr	x0, [x20, #24]
  418b50:	cbz	x0, 418bc8 <wcrtomb@plt+0x13fa8>
  418b54:	mov	x1, x19
  418b58:	bl	445410 <argp_parse@@Base+0x5630>
  418b5c:	cbz	x0, 418bbc <wcrtomb@plt+0x13f9c>
  418b60:	mov	x0, x19
  418b64:	ldp	x19, x20, [sp, #16]
  418b68:	ldp	x21, x22, [sp, #32]
  418b6c:	ldp	x23, x24, [sp, #48]
  418b70:	ldp	x25, x26, [sp, #64]
  418b74:	ldp	x27, x28, [sp, #80]
  418b78:	ldp	x29, x30, [sp], #96
  418b7c:	ret
  418b80:	mov	x0, x20
  418b84:	mov	x20, x1
  418b88:	b	418ad0 <wcrtomb@plt+0x13eb0>
  418b8c:	ldr	x0, [x20, #16]
  418b90:	str	xzr, [x19, #40]
  418b94:	cbnz	x0, 418b40 <wcrtomb@plt+0x13f20>
  418b98:	adrp	x3, 417000 <wcrtomb@plt+0x123e0>
  418b9c:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  418ba0:	add	x3, x3, #0xb98
  418ba4:	add	x2, x2, #0xbc0
  418ba8:	mov	x4, #0x0                   	// #0
  418bac:	mov	x1, #0x0                   	// #0
  418bb0:	bl	444c38 <argp_parse@@Base+0x4e58>
  418bb4:	str	x0, [x20, #16]
  418bb8:	cbnz	x0, 418b40 <wcrtomb@plt+0x13f20>
  418bbc:	bl	4104a0 <wcrtomb@plt+0xb880>
  418bc0:	str	x19, [x20, #8]
  418bc4:	b	418b04 <wcrtomb@plt+0x13ee4>
  418bc8:	adrp	x3, 417000 <wcrtomb@plt+0x123e0>
  418bcc:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  418bd0:	add	x3, x3, #0xb58
  418bd4:	add	x2, x2, #0xb40
  418bd8:	mov	x4, #0x0                   	// #0
  418bdc:	mov	x1, #0x0                   	// #0
  418be0:	bl	444c38 <argp_parse@@Base+0x4e58>
  418be4:	str	x0, [x20, #24]
  418be8:	cbnz	x0, 418b54 <wcrtomb@plt+0x13f34>
  418bec:	bl	4104a0 <wcrtomb@plt+0xb880>
  418bf0:	stp	x29, x30, [sp, #-160]!
  418bf4:	mov	x29, sp
  418bf8:	stp	x21, x22, [sp, #32]
  418bfc:	mov	w21, w2
  418c00:	stp	x25, x26, [sp, #64]
  418c04:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  418c08:	add	x22, x25, #0x8e0
  418c0c:	stp	x19, x20, [sp, #16]
  418c10:	mov	x19, x0
  418c14:	mov	x20, x1
  418c18:	ldr	x0, [x22, #16]
  418c1c:	stp	x23, x24, [sp, #48]
  418c20:	ldr	x24, [x1, #88]
  418c24:	stp	x27, x28, [sp, #80]
  418c28:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  418c2c:	str	x3, [sp, #96]
  418c30:	mov	x28, x24
  418c34:	cbz	x0, 419078 <wcrtomb@plt+0x14458>
  418c38:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  418c3c:	mov	x1, x19
  418c40:	ldr	w0, [x27, #128]
  418c44:	bl	41edd0 <wcrtomb@plt+0x1a1b0>
  418c48:	mov	x28, x0
  418c4c:	mov	x0, x19
  418c50:	bl	403ff0 <strlen@plt>
  418c54:	mov	x23, x0
  418c58:	mov	x0, #0x60                  	// #96
  418c5c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418c60:	str	xzr, [x0]
  418c64:	stp	xzr, xzr, [x0, #40]
  418c68:	mov	x26, x0
  418c6c:	cmp	x23, #0x1
  418c70:	str	wzr, [x0, #60]
  418c74:	str	xzr, [x0, #64]
  418c78:	b.ls	418c8c <wcrtomb@plt+0x1406c>  // b.plast
  418c7c:	sub	x1, x23, #0x1
  418c80:	ldrb	w0, [x19, x1]
  418c84:	cmp	w0, #0x2f
  418c88:	b.eq	418ed4 <wcrtomb@plt+0x142b4>  // b.none
  418c8c:	add	x0, x23, #0x1
  418c90:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418c94:	str	x0, [x26, #88]
  418c98:	mov	x2, x23
  418c9c:	mov	x1, x19
  418ca0:	str	x0, [sp, #104]
  418ca4:	bl	403f70 <memcpy@plt>
  418ca8:	ldr	x3, [sp, #104]
  418cac:	stp	xzr, x28, [x26, #72]
  418cb0:	mov	x1, x26
  418cb4:	ldr	x0, [x22, #16]
  418cb8:	strb	wzr, [x3, x23]
  418cbc:	bl	444958 <argp_parse@@Base+0x4b78>
  418cc0:	mov	x23, x0
  418cc4:	ldr	x0, [x26, #80]
  418cc8:	bl	4047b0 <free@plt>
  418ccc:	ldr	x0, [x26, #88]
  418cd0:	bl	4047b0 <free@plt>
  418cd4:	mov	x0, x26
  418cd8:	bl	4047b0 <free@plt>
  418cdc:	cbz	x23, 419074 <wcrtomb@plt+0x14454>
  418ce0:	ldr	w0, [x23, #60]
  418ce4:	tbz	w0, #0, 418cf8 <wcrtomb@plt+0x140d8>
  418ce8:	tbz	w21, #5, 418ea8 <wcrtomb@plt+0x14288>
  418cec:	mov	x1, x19
  418cf0:	add	x0, x23, #0x58
  418cf4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  418cf8:	ldr	x0, [x23, #88]
  418cfc:	mov	x1, x19
  418d00:	bl	404710 <strcmp@plt>
  418d04:	cbnz	w0, 418ea8 <wcrtomb@plt+0x14288>
  418d08:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418d0c:	add	x27, x20, #0x58
  418d10:	ldr	x26, [x27, #8]
  418d14:	ldrb	w0, [x0, #160]
  418d18:	cbz	w0, 418d40 <wcrtomb@plt+0x14120>
  418d1c:	ldr	w0, [x23, #60]
  418d20:	tst	x0, #0x2
  418d24:	ccmp	x24, #0x0, #0x0, ne  // ne = any
  418d28:	b.lt	418d40 <wcrtomb@plt+0x14120>  // b.tstop
  418d2c:	ldr	x0, [x23, #24]
  418d30:	ldr	x28, [x20, #88]
  418d34:	cmp	x0, x28
  418d38:	b.ne	418d50 <wcrtomb@plt+0x14130>  // b.any
  418d3c:	nop
  418d40:	ldr	x0, [x23, #32]
  418d44:	cmp	x0, x26
  418d48:	b.eq	418ee0 <wcrtomb@plt+0x142c0>  // b.none
  418d4c:	ldr	x28, [x20, #88]
  418d50:	ldr	x0, [x22, #24]
  418d54:	cbz	x0, 4192e8 <wcrtomb@plt+0x146c8>
  418d58:	mov	x0, #0x60                  	// #96
  418d5c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418d60:	mov	x25, x0
  418d64:	mov	x0, #0x1                   	// #1
  418d68:	str	xzr, [x25]
  418d6c:	stp	xzr, xzr, [x25, #40]
  418d70:	str	wzr, [x25, #60]
  418d74:	str	xzr, [x25, #64]
  418d78:	bl	4501a0 <argp_parse@@Base+0x103c0>
  418d7c:	mov	x2, x0
  418d80:	strb	wzr, [x0]
  418d84:	mov	x1, x25
  418d88:	ldr	x0, [x22, #24]
  418d8c:	stp	x28, x26, [x25, #24]
  418d90:	stp	xzr, xzr, [x25, #72]
  418d94:	str	x2, [x25, #88]
  418d98:	bl	444958 <argp_parse@@Base+0x4b78>
  418d9c:	mov	x26, x0
  418da0:	ldr	x0, [x25, #80]
  418da4:	bl	4047b0 <free@plt>
  418da8:	ldr	x0, [x25, #88]
  418dac:	bl	4047b0 <free@plt>
  418db0:	mov	x0, x25
  418db4:	bl	4047b0 <free@plt>
  418db8:	cbz	x26, 4192e0 <wcrtomb@plt+0x146c0>
  418dbc:	ldr	x25, [x26, #88]
  418dc0:	mov	x1, x19
  418dc4:	mov	x0, x25
  418dc8:	bl	404710 <strcmp@plt>
  418dcc:	cbz	w0, 418e88 <wcrtomb@plt+0x14268>
  418dd0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  418dd4:	ldr	w0, [x0, #432]
  418dd8:	tbz	w0, #13, 418e38 <wcrtomb@plt+0x14218>
  418ddc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418de0:	ldr	x0, [x0, #1136]
  418de4:	cbz	x0, 418dec <wcrtomb@plt+0x141cc>
  418de8:	blr	x0
  418dec:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418df0:	add	x1, x1, #0x6a8
  418df4:	mov	w2, #0x5                   	// #5
  418df8:	mov	x0, #0x0                   	// #0
  418dfc:	bl	4049c0 <dcgettext@plt>
  418e00:	mov	x25, x0
  418e04:	mov	x0, x19
  418e08:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  418e0c:	ldr	x1, [x26, #88]
  418e10:	mov	x27, x0
  418e14:	mov	w0, #0x1                   	// #1
  418e18:	bl	44ed50 <argp_parse@@Base+0xef70>
  418e1c:	mov	x4, x0
  418e20:	mov	x2, x25
  418e24:	mov	x3, x27
  418e28:	mov	w1, #0x0                   	// #0
  418e2c:	mov	w0, #0x0                   	// #0
  418e30:	bl	404050 <error@plt>
  418e34:	ldr	x25, [x26, #88]
  418e38:	str	x26, [x23, #64]
  418e3c:	ldr	w27, [x23, #60]
  418e40:	mov	x0, x25
  418e44:	orr	w27, w27, #0x10
  418e48:	str	w27, [x23, #60]
  418e4c:	bl	403ff0 <strlen@plt>
  418e50:	mov	x26, x0
  418e54:	mov	x0, x19
  418e58:	bl	403ff0 <strlen@plt>
  418e5c:	ldr	x22, [x22, #8]
  418e60:	mov	x28, x0
  418e64:	cbz	x22, 418e8c <wcrtomb@plt+0x1426c>
  418e68:	add	x0, x22, #0x58
  418e6c:	mov	x4, x28
  418e70:	mov	x3, x19
  418e74:	mov	x2, x26
  418e78:	mov	x1, x25
  418e7c:	bl	41eec0 <wcrtomb@plt+0x1a2a0>
  418e80:	ldr	x22, [x22]
  418e84:	cbnz	x22, 418e68 <wcrtomb@plt+0x14248>
  418e88:	ldr	w27, [x23, #60]
  418e8c:	mov	w0, #0x1                   	// #1
  418e90:	mov	w1, #0x0                   	// #0
  418e94:	str	w0, [x23, #56]
  418e98:	cmp	x24, #0x0
  418e9c:	orr	w0, w27, #0x2
  418ea0:	csel	w27, w0, w27, lt  // lt = tstop
  418ea4:	b	418ef0 <wcrtomb@plt+0x142d0>
  418ea8:	ldr	x1, [sp, #96]
  418eac:	mov	w0, #0x4e                  	// #78
  418eb0:	strb	w0, [x1]
  418eb4:	mov	x0, x23
  418eb8:	ldp	x19, x20, [sp, #16]
  418ebc:	ldp	x21, x22, [sp, #32]
  418ec0:	ldp	x23, x24, [sp, #48]
  418ec4:	ldp	x25, x26, [sp, #64]
  418ec8:	ldp	x27, x28, [sp, #80]
  418ecc:	ldp	x29, x30, [sp], #160
  418ed0:	ret
  418ed4:	mov	x0, x23
  418ed8:	mov	x23, x1
  418edc:	b	418c90 <wcrtomb@plt+0x14070>
  418ee0:	ldr	w27, [x23, #60]
  418ee4:	mov	w0, #0x1                   	// #1
  418ee8:	mov	w1, #0x0                   	// #0
  418eec:	str	w0, [x23, #56]
  418ef0:	orr	w27, w27, #0x4
  418ef4:	str	w27, [x23, #60]
  418ef8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418efc:	ldrb	w0, [x0, #213]
  418f00:	cbz	w0, 418ffc <wcrtomb@plt+0x143dc>
  418f04:	ldr	x0, [x20, #392]
  418f08:	cbz	x0, 418ffc <wcrtomb@plt+0x143dc>
  418f0c:	ldr	x0, [x0, #88]
  418f10:	ldr	x2, [x20, #88]
  418f14:	cmp	x2, x0
  418f18:	b.eq	418ffc <wcrtomb@plt+0x143dc>  // b.none
  418f1c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  418f20:	ldr	w0, [x0, #432]
  418f24:	tbz	w0, #18, 418f6c <wcrtomb@plt+0x1434c>
  418f28:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  418f2c:	ldr	x0, [x0, #1136]
  418f30:	cbz	x0, 418f38 <wcrtomb@plt+0x14318>
  418f34:	blr	x0
  418f38:	mov	w2, #0x5                   	// #5
  418f3c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  418f40:	mov	x0, #0x0                   	// #0
  418f44:	add	x1, x1, #0x6e8
  418f48:	bl	4049c0 <dcgettext@plt>
  418f4c:	mov	x21, x0
  418f50:	ldr	x0, [x23, #88]
  418f54:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  418f58:	mov	x3, x0
  418f5c:	mov	x2, x21
  418f60:	mov	w1, #0x0                   	// #0
  418f64:	mov	w0, #0x0                   	// #0
  418f68:	bl	404050 <error@plt>
  418f6c:	ldr	x21, [x23, #40]
  418f70:	str	wzr, [x23, #56]
  418f74:	cbz	x21, 419300 <wcrtomb@plt+0x146e0>
  418f78:	ldr	x0, [x21, #24]
  418f7c:	bl	4047b0 <free@plt>
  418f80:	mov	x0, x21
  418f84:	bl	4047b0 <free@plt>
  418f88:	ldr	w1, [x23, #56]
  418f8c:	str	xzr, [x23, #40]
  418f90:	ldr	w0, [x23, #60]
  418f94:	orr	w0, w0, #0x1
  418f98:	str	w0, [x23, #60]
  418f9c:	cbz	w1, 418eb4 <wcrtomb@plt+0x14294>
  418fa0:	mov	x0, x20
  418fa4:	add	x1, sp, #0x98
  418fa8:	bl	40def8 <wcrtomb@plt+0x92d8>
  418fac:	cmp	w0, #0x2
  418fb0:	b.eq	419448 <wcrtomb@plt+0x14828>  // b.none
  418fb4:	cmp	w0, #0x3
  418fb8:	b.eq	41947c <wcrtomb@plt+0x1485c>  // b.none
  418fbc:	cmp	w0, #0x1
  418fc0:	b.ne	418eb4 <wcrtomb@plt+0x14294>  // b.any
  418fc4:	ldr	x20, [sp, #152]
  418fc8:	mov	w2, #0x5                   	// #5
  418fcc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  418fd0:	mov	x0, #0x0                   	// #0
  418fd4:	add	x1, x1, #0x9b8
  418fd8:	bl	4049c0 <dcgettext@plt>
  418fdc:	mov	x1, x20
  418fe0:	mov	x2, x0
  418fe4:	mov	x0, x19
  418fe8:	bl	40c0b0 <wcrtomb@plt+0x7490>
  418fec:	ldr	x0, [sp, #152]
  418ff0:	str	wzr, [x23, #56]
  418ff4:	str	x0, [x23, #72]
  418ff8:	b	418eb4 <wcrtomb@plt+0x14294>
  418ffc:	tbz	w21, #4, 419018 <wcrtomb@plt+0x143f8>
  419000:	and	w21, w21, #0x3
  419004:	str	w21, [x23, #56]
  419008:	cbnz	w21, 419018 <wcrtomb@plt+0x143f8>
  41900c:	ldr	x2, [sp, #96]
  419010:	mov	w0, #0x4e                  	// #78
  419014:	strb	w0, [x2]
  419018:	cbz	w1, 41906c <wcrtomb@plt+0x1444c>
  41901c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  419020:	ldr	w0, [x0, #432]
  419024:	tbz	w0, #13, 41906c <wcrtomb@plt+0x1444c>
  419028:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41902c:	ldr	x0, [x0, #1136]
  419030:	cbz	x0, 419038 <wcrtomb@plt+0x14418>
  419034:	blr	x0
  419038:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41903c:	add	x1, x1, #0x720
  419040:	mov	w2, #0x5                   	// #5
  419044:	mov	x0, #0x0                   	// #0
  419048:	bl	4049c0 <dcgettext@plt>
  41904c:	mov	x21, x0
  419050:	mov	x0, x19
  419054:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  419058:	mov	x2, x21
  41905c:	mov	x3, x0
  419060:	mov	w1, #0x0                   	// #0
  419064:	mov	w0, #0x0                   	// #0
  419068:	bl	404050 <error@plt>
  41906c:	ldr	w1, [x23, #56]
  419070:	b	418f90 <wcrtomb@plt+0x14370>
  419074:	ldr	x28, [x20, #88]
  419078:	add	x3, x20, #0x58
  41907c:	ldr	x26, [x22, #24]
  419080:	ldr	x0, [x20, #96]
  419084:	stp	x0, x3, [sp, #104]
  419088:	cbz	x26, 419100 <wcrtomb@plt+0x144e0>
  41908c:	mov	x0, #0x60                  	// #96
  419090:	bl	4501a0 <argp_parse@@Base+0x103c0>
  419094:	mov	x23, x0
  419098:	mov	x0, #0x1                   	// #1
  41909c:	str	xzr, [x23]
  4190a0:	stp	xzr, xzr, [x23, #40]
  4190a4:	str	wzr, [x23, #60]
  4190a8:	str	xzr, [x23, #64]
  4190ac:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4190b0:	mov	x2, x0
  4190b4:	strb	wzr, [x0]
  4190b8:	mov	x1, x23
  4190bc:	ldr	x0, [x22, #24]
  4190c0:	stp	xzr, xzr, [x23, #72]
  4190c4:	ldr	x3, [sp, #104]
  4190c8:	stp	x28, x3, [x23, #24]
  4190cc:	str	x2, [x23, #88]
  4190d0:	bl	444958 <argp_parse@@Base+0x4b78>
  4190d4:	mov	x26, x0
  4190d8:	ldr	x0, [x23, #80]
  4190dc:	bl	4047b0 <free@plt>
  4190e0:	ldr	x0, [x23, #88]
  4190e4:	bl	4047b0 <free@plt>
  4190e8:	mov	x0, x23
  4190ec:	bl	4047b0 <free@plt>
  4190f0:	ldr	x3, [sp, #112]
  4190f4:	ldr	x28, [x20, #88]
  4190f8:	ldr	x0, [x3, #8]
  4190fc:	str	x0, [sp, #104]
  419100:	ldr	x2, [x20, #176]
  419104:	str	x2, [sp, #112]
  419108:	ldr	w0, [x27, #128]
  41910c:	mov	x1, x19
  419110:	ldr	x2, [x20, #184]
  419114:	str	x2, [sp, #120]
  419118:	bl	41edd0 <wcrtomb@plt+0x1a1b0>
  41911c:	mov	x27, x0
  419120:	mov	x0, x19
  419124:	str	x27, [sp, #128]
  419128:	bl	403ff0 <strlen@plt>
  41912c:	mov	x27, x0
  419130:	mov	x0, #0x60                  	// #96
  419134:	bl	4501a0 <argp_parse@@Base+0x103c0>
  419138:	str	xzr, [x0]
  41913c:	cmp	x27, #0x1
  419140:	stp	xzr, xzr, [x0, #40]
  419144:	mov	x23, x0
  419148:	str	wzr, [x0, #60]
  41914c:	str	xzr, [x0, #64]
  419150:	b.ls	419164 <wcrtomb@plt+0x14544>  // b.plast
  419154:	sub	x1, x27, #0x1
  419158:	ldrb	w0, [x19, x1]
  41915c:	cmp	w0, #0x2f
  419160:	b.eq	4193e0 <wcrtomb@plt+0x147c0>  // b.none
  419164:	add	x0, x27, #0x1
  419168:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41916c:	str	x0, [x23, #88]
  419170:	mov	x1, x19
  419174:	mov	x2, x27
  419178:	str	x0, [sp, #136]
  41917c:	bl	403f70 <memcpy@plt>
  419180:	ldp	x1, x4, [sp, #128]
  419184:	stp	xzr, x1, [x23, #72]
  419188:	ldr	x0, [x25, #2272]
  41918c:	strb	wzr, [x4, x27]
  419190:	cbz	x0, 419360 <wcrtomb@plt+0x14740>
  419194:	str	x23, [x0]
  419198:	ldr	w1, [x23, #60]
  41919c:	cmp	x24, #0x0
  4191a0:	ldr	x3, [sp, #112]
  4191a4:	orr	w2, w1, #0x2
  4191a8:	str	x3, [x23, #8]
  4191ac:	csel	w1, w2, w1, lt  // lt = tstop
  4191b0:	ldr	x0, [x22, #16]
  4191b4:	orr	w1, w1, #0x4
  4191b8:	ldr	x3, [sp, #120]
  4191bc:	str	x3, [x23, #16]
  4191c0:	ldr	x3, [sp, #104]
  4191c4:	mov	w2, #0x1                   	// #1
  4191c8:	str	x23, [x25, #2272]
  4191cc:	str	x28, [x23, #24]
  4191d0:	str	x3, [x23, #32]
  4191d4:	str	xzr, [x23, #40]
  4191d8:	stp	w2, w1, [x23, #56]
  4191dc:	cbz	x0, 419338 <wcrtomb@plt+0x14718>
  4191e0:	mov	x1, x23
  4191e4:	bl	445410 <argp_parse@@Base+0x5630>
  4191e8:	cbz	x0, 419334 <wcrtomb@plt+0x14714>
  4191ec:	ldr	x0, [x22, #24]
  4191f0:	cbz	x0, 419310 <wcrtomb@plt+0x146f0>
  4191f4:	mov	x1, x23
  4191f8:	bl	445410 <argp_parse@@Base+0x5630>
  4191fc:	cbz	x0, 419334 <wcrtomb@plt+0x14714>
  419200:	cbz	x26, 419368 <wcrtomb@plt+0x14748>
  419204:	ldr	x24, [x26, #88]
  419208:	mov	x1, x19
  41920c:	mov	x0, x24
  419210:	bl	404710 <strcmp@plt>
  419214:	cbz	w0, 4192d0 <wcrtomb@plt+0x146b0>
  419218:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41921c:	ldr	w0, [x0, #432]
  419220:	tbz	w0, #13, 419280 <wcrtomb@plt+0x14660>
  419224:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  419228:	ldr	x0, [x0, #1136]
  41922c:	cbz	x0, 419234 <wcrtomb@plt+0x14614>
  419230:	blr	x0
  419234:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  419238:	add	x1, x1, #0x6a8
  41923c:	mov	w2, #0x5                   	// #5
  419240:	mov	x0, #0x0                   	// #0
  419244:	bl	4049c0 <dcgettext@plt>
  419248:	mov	x24, x0
  41924c:	mov	x0, x19
  419250:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  419254:	ldr	x1, [x26, #88]
  419258:	mov	x25, x0
  41925c:	mov	w0, #0x1                   	// #1
  419260:	bl	44ed50 <argp_parse@@Base+0xef70>
  419264:	mov	x4, x0
  419268:	mov	x2, x24
  41926c:	mov	x3, x25
  419270:	mov	w1, #0x0                   	// #0
  419274:	mov	w0, #0x0                   	// #0
  419278:	bl	404050 <error@plt>
  41927c:	ldr	x24, [x26, #88]
  419280:	str	x26, [x23, #64]
  419284:	ldr	w1, [x23, #60]
  419288:	mov	x0, x24
  41928c:	orr	w1, w1, #0x10
  419290:	str	w1, [x23, #60]
  419294:	bl	403ff0 <strlen@plt>
  419298:	mov	x26, x0
  41929c:	mov	x0, x19
  4192a0:	bl	403ff0 <strlen@plt>
  4192a4:	ldr	x22, [x22, #8]
  4192a8:	mov	x25, x0
  4192ac:	cbz	x22, 4192d0 <wcrtomb@plt+0x146b0>
  4192b0:	add	x0, x22, #0x58
  4192b4:	mov	x4, x25
  4192b8:	mov	x3, x19
  4192bc:	mov	x2, x26
  4192c0:	mov	x1, x24
  4192c4:	bl	41eec0 <wcrtomb@plt+0x1a2a0>
  4192c8:	ldr	x22, [x22]
  4192cc:	cbnz	x22, 4192b0 <wcrtomb@plt+0x14690>
  4192d0:	mov	w0, #0x1                   	// #1
  4192d4:	mov	w1, #0x0                   	// #0
  4192d8:	str	w0, [x23, #56]
  4192dc:	b	418ef8 <wcrtomb@plt+0x142d8>
  4192e0:	ldr	x26, [x27, #8]
  4192e4:	ldr	x28, [x20, #88]
  4192e8:	mov	w0, #0x2                   	// #2
  4192ec:	ldr	w27, [x23, #60]
  4192f0:	mov	w1, #0x1                   	// #1
  4192f4:	stp	x28, x26, [x23, #24]
  4192f8:	str	w0, [x23, #56]
  4192fc:	b	418e98 <wcrtomb@plt+0x14278>
  419300:	ldr	w0, [x23, #60]
  419304:	orr	w0, w0, #0x1
  419308:	str	w0, [x23, #60]
  41930c:	b	418eb4 <wcrtomb@plt+0x14294>
  419310:	adrp	x3, 417000 <wcrtomb@plt+0x123e0>
  419314:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  419318:	add	x3, x3, #0xb58
  41931c:	add	x2, x2, #0xb40
  419320:	mov	x4, #0x0                   	// #0
  419324:	mov	x1, #0x0                   	// #0
  419328:	bl	444c38 <argp_parse@@Base+0x4e58>
  41932c:	str	x0, [x22, #24]
  419330:	cbnz	x0, 4191f4 <wcrtomb@plt+0x145d4>
  419334:	bl	4104a0 <wcrtomb@plt+0xb880>
  419338:	adrp	x3, 417000 <wcrtomb@plt+0x123e0>
  41933c:	adrp	x2, 417000 <wcrtomb@plt+0x123e0>
  419340:	add	x3, x3, #0xb98
  419344:	add	x2, x2, #0xbc0
  419348:	mov	x4, #0x0                   	// #0
  41934c:	mov	x1, #0x0                   	// #0
  419350:	bl	444c38 <argp_parse@@Base+0x4e58>
  419354:	str	x0, [x22, #16]
  419358:	cbnz	x0, 4191e0 <wcrtomb@plt+0x145c0>
  41935c:	bl	4104a0 <wcrtomb@plt+0xb880>
  419360:	str	x23, [x22, #8]
  419364:	b	419198 <wcrtomb@plt+0x14578>
  419368:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41936c:	ldr	w0, [x23, #60]
  419370:	ldr	w1, [x1, #432]
  419374:	orr	w0, w0, #0x8
  419378:	str	w0, [x23, #60]
  41937c:	tbz	w1, #12, 4193c4 <wcrtomb@plt+0x147a4>
  419380:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  419384:	ldr	x0, [x0, #1136]
  419388:	cbz	x0, 419390 <wcrtomb@plt+0x14770>
  41938c:	blr	x0
  419390:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  419394:	add	x1, x1, #0x6d0
  419398:	mov	w2, #0x5                   	// #5
  41939c:	mov	x0, #0x0                   	// #0
  4193a0:	bl	4049c0 <dcgettext@plt>
  4193a4:	mov	x22, x0
  4193a8:	mov	x0, x19
  4193ac:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4193b0:	mov	x2, x22
  4193b4:	mov	x3, x0
  4193b8:	mov	w1, #0x0                   	// #0
  4193bc:	mov	w0, #0x0                   	// #0
  4193c0:	bl	404050 <error@plt>
  4193c4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4193c8:	mov	w0, #0x2                   	// #2
  4193cc:	ldr	x1, [x1, #960]
  4193d0:	cbz	x1, 4193ec <wcrtomb@plt+0x147cc>
  4193d4:	mov	w1, #0x0                   	// #0
  4193d8:	str	w0, [x23, #56]
  4193dc:	b	418ef8 <wcrtomb@plt+0x142d8>
  4193e0:	mov	x0, x27
  4193e4:	mov	x27, x1
  4193e8:	b	419168 <wcrtomb@plt+0x14548>
  4193ec:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4193f0:	add	x3, x1, #0xa8
  4193f4:	ldr	x2, [x20, #176]
  4193f8:	ldr	x1, [x1, #168]
  4193fc:	ldr	x3, [x3, #8]
  419400:	cmp	x2, x1
  419404:	ldr	x2, [x20, #184]
  419408:	b.lt	4193d4 <wcrtomb@plt+0x147b4>  // b.tstop
  41940c:	b.gt	419418 <wcrtomb@plt+0x147f8>
  419410:	cmp	w2, w3
  419414:	b.mi	4193d4 <wcrtomb@plt+0x147b4>  // b.first
  419418:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41941c:	mov	w0, #0x1                   	// #1
  419420:	ldr	w2, [x2, #1100]
  419424:	cbz	w2, 4193d4 <wcrtomb@plt+0x147b4>
  419428:	ldp	x4, x2, [x20, #192]
  41942c:	cmp	x1, x4
  419430:	b.gt	4194b8 <wcrtomb@plt+0x14898>
  419434:	b.lt	4193d4 <wcrtomb@plt+0x147b4>  // b.tstop
  419438:	sub	w0, w2, w3
  41943c:	lsr	w0, w0, #31
  419440:	add	w0, w0, #0x1
  419444:	b	4193d4 <wcrtomb@plt+0x147b4>
  419448:	ldr	x20, [sp, #152]
  41944c:	mov	w2, #0x5                   	// #5
  419450:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  419454:	mov	x0, #0x0                   	// #0
  419458:	add	x1, x1, #0x9b8
  41945c:	bl	4049c0 <dcgettext@plt>
  419460:	mov	x1, x20
  419464:	mov	x2, x0
  419468:	mov	x0, x19
  41946c:	bl	40c0b0 <wcrtomb@plt+0x7490>
  419470:	ldr	x0, [sp, #152]
  419474:	str	x0, [x23, #72]
  419478:	b	418eb4 <wcrtomb@plt+0x14294>
  41947c:	ldr	x20, [sp, #152]
  419480:	mov	w2, #0x5                   	// #5
  419484:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  419488:	mov	x0, #0x0                   	// #0
  41948c:	add	x1, x1, #0x958
  419490:	bl	4049c0 <dcgettext@plt>
  419494:	mov	x1, x20
  419498:	mov	x2, x0
  41949c:	mov	x0, x19
  4194a0:	bl	40c0b0 <wcrtomb@plt+0x7490>
  4194a4:	ldr	x1, [sp, #96]
  4194a8:	mov	w0, #0x4e                  	// #78
  4194ac:	strb	w0, [x1]
  4194b0:	str	wzr, [x23, #56]
  4194b4:	b	418eb4 <wcrtomb@plt+0x14294>
  4194b8:	mov	w0, #0x2                   	// #2
  4194bc:	b	4193d4 <wcrtomb@plt+0x147b4>
  4194c0:	stp	x29, x30, [sp, #-32]!
  4194c4:	mov	x29, sp
  4194c8:	stp	x19, x20, [sp, #16]
  4194cc:	mov	x19, x0
  4194d0:	ldrb	w0, [x0]
  4194d4:	cbz	w0, 41950c <wcrtomb@plt+0x148ec>
  4194d8:	mov	x20, #0x0                   	// #0
  4194dc:	nop
  4194e0:	mov	x0, x19
  4194e4:	bl	403ff0 <strlen@plt>
  4194e8:	add	x0, x0, #0x1
  4194ec:	add	x19, x19, x0
  4194f0:	add	x20, x20, x0
  4194f4:	ldrb	w0, [x19]
  4194f8:	cbnz	w0, 4194e0 <wcrtomb@plt+0x148c0>
  4194fc:	add	x0, x20, #0x1
  419500:	ldp	x19, x20, [sp, #16]
  419504:	ldp	x29, x30, [sp], #32
  419508:	ret
  41950c:	mov	x0, #0x1                   	// #1
  419510:	ldp	x19, x20, [sp, #16]
  419514:	ldp	x29, x30, [sp], #32
  419518:	ret
  41951c:	nop
  419520:	stp	x29, x30, [sp, #-48]!
  419524:	mov	x29, sp
  419528:	stp	x21, x22, [sp, #32]
  41952c:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  419530:	add	x21, x22, #0x8e0
  419534:	stp	x19, x20, [sp, #16]
  419538:	ldr	x0, [x21, #16]
  41953c:	cbz	x0, 419544 <wcrtomb@plt+0x14924>
  419540:	bl	444e68 <argp_parse@@Base+0x5088>
  419544:	ldr	x0, [x21, #24]
  419548:	cbz	x0, 419550 <wcrtomb@plt+0x14930>
  41954c:	bl	444e68 <argp_parse@@Base+0x5088>
  419550:	ldr	x19, [x21, #8]
  419554:	cbz	x19, 41957c <wcrtomb@plt+0x1495c>
  419558:	mov	x20, x19
  41955c:	ldr	x19, [x19]
  419560:	ldr	x0, [x20, #80]
  419564:	bl	4047b0 <free@plt>
  419568:	ldr	x0, [x20, #88]
  41956c:	bl	4047b0 <free@plt>
  419570:	mov	x0, x20
  419574:	bl	4047b0 <free@plt>
  419578:	cbnz	x19, 419558 <wcrtomb@plt+0x14938>
  41957c:	str	xzr, [x22, #2272]
  419580:	str	xzr, [x21, #8]
  419584:	ldp	x19, x20, [sp, #16]
  419588:	ldp	x21, x22, [sp, #32]
  41958c:	ldp	x29, x30, [sp], #48
  419590:	ret
  419594:	nop
  419598:	add	x0, x0, #0x58
  41959c:	b	41eec0 <wcrtomb@plt+0x1a2a0>
  4195a0:	stp	x29, x30, [sp, #-192]!
  4195a4:	mov	x29, sp
  4195a8:	stp	x21, x22, [sp, #32]
  4195ac:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4195b0:	add	x21, x21, #0x8e0
  4195b4:	mov	x22, x0
  4195b8:	ldr	x0, [x21, #16]
  4195bc:	cbz	x0, 419694 <wcrtomb@plt+0x14a74>
  4195c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4195c4:	stp	x23, x24, [sp, #48]
  4195c8:	ldr	x23, [x22]
  4195cc:	stp	x19, x20, [sp, #16]
  4195d0:	ldr	w0, [x0, #128]
  4195d4:	mov	x1, x23
  4195d8:	bl	41edd0 <wcrtomb@plt+0x1a1b0>
  4195dc:	mov	x24, x0
  4195e0:	mov	x0, x23
  4195e4:	bl	403ff0 <strlen@plt>
  4195e8:	mov	x20, x0
  4195ec:	mov	x0, #0x60                  	// #96
  4195f0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4195f4:	str	xzr, [x0]
  4195f8:	stp	xzr, xzr, [x0, #40]
  4195fc:	mov	x19, x0
  419600:	cmp	x20, #0x1
  419604:	str	wzr, [x0, #60]
  419608:	str	xzr, [x0, #64]
  41960c:	b.ls	419620 <wcrtomb@plt+0x14a00>  // b.plast
  419610:	sub	x1, x20, #0x1
  419614:	ldrb	w0, [x23, x1]
  419618:	cmp	w0, #0x2f
  41961c:	b.eq	4196bc <wcrtomb@plt+0x14a9c>  // b.none
  419620:	add	x0, x20, #0x1
  419624:	bl	4501a0 <argp_parse@@Base+0x103c0>
  419628:	str	x0, [x19, #88]
  41962c:	mov	x2, x20
  419630:	mov	x1, x23
  419634:	mov	x23, x0
  419638:	bl	403f70 <memcpy@plt>
  41963c:	ldr	x0, [x21, #16]
  419640:	mov	x1, x19
  419644:	strb	wzr, [x23, x20]
  419648:	stp	xzr, x24, [x19, #72]
  41964c:	bl	444958 <argp_parse@@Base+0x4b78>
  419650:	mov	x20, x0
  419654:	ldr	x0, [x19, #80]
  419658:	bl	4047b0 <free@plt>
  41965c:	ldr	x0, [x19, #88]
  419660:	bl	4047b0 <free@plt>
  419664:	mov	x0, x19
  419668:	bl	4047b0 <free@plt>
  41966c:	cbz	x20, 4196c8 <wcrtomb@plt+0x14aa8>
  419670:	ldr	w1, [x22, #408]
  419674:	add	x2, sp, #0x40
  419678:	mov	w0, #0x0                   	// #0
  41967c:	bl	4049a0 <__fxstat@plt>
  419680:	cbnz	w0, 4196a0 <wcrtomb@plt+0x14a80>
  419684:	ldur	q0, [sp, #152]
  419688:	ldp	x23, x24, [sp, #48]
  41968c:	stur	q0, [x20, #8]
  419690:	ldp	x19, x20, [sp, #16]
  419694:	ldp	x21, x22, [sp, #32]
  419698:	ldp	x29, x30, [sp], #192
  41969c:	ret
  4196a0:	ldr	x0, [x20, #88]
  4196a4:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  4196a8:	ldp	x19, x20, [sp, #16]
  4196ac:	ldp	x21, x22, [sp, #32]
  4196b0:	ldp	x23, x24, [sp, #48]
  4196b4:	ldp	x29, x30, [sp], #192
  4196b8:	ret
  4196bc:	mov	x0, x20
  4196c0:	mov	x20, x1
  4196c4:	b	419624 <wcrtomb@plt+0x14a04>
  4196c8:	ldp	x19, x20, [sp, #16]
  4196cc:	ldp	x21, x22, [sp, #32]
  4196d0:	ldp	x23, x24, [sp, #48]
  4196d4:	ldp	x29, x30, [sp], #192
  4196d8:	ret
  4196dc:	nop
  4196e0:	sub	sp, sp, #0x240
  4196e4:	stp	x29, x30, [sp]
  4196e8:	mov	x29, sp
  4196ec:	stp	x19, x20, [sp, #16]
  4196f0:	mov	x19, x0
  4196f4:	stp	x21, x22, [sp, #32]
  4196f8:	stp	x23, x24, [sp, #48]
  4196fc:	ldr	x23, [x0]
  419700:	bl	40dc78 <wcrtomb@plt+0x9058>
  419704:	mov	x22, x0
  419708:	ldr	x0, [x19, #88]
  41970c:	str	x0, [sp, #128]
  419710:	ldr	x20, [x19, #392]
  419714:	cbz	x22, 419b08 <wcrtomb@plt+0x14ee8>
  419718:	mov	x0, x19
  41971c:	bl	410920 <wcrtomb@plt+0xbd00>
  419720:	mov	x0, x23
  419724:	bl	450328 <argp_parse@@Base+0x10548>
  419728:	mov	x21, x0
  41972c:	bl	41ec08 <wcrtomb@plt+0x19fe8>
  419730:	cbz	x20, 419af8 <wcrtomb@plt+0x14ed8>
  419734:	add	x3, sp, #0x97
  419738:	mov	x1, x19
  41973c:	mov	w2, #0x0                   	// #0
  419740:	mov	x0, x21
  419744:	bl	418bf0 <wcrtomb@plt+0x13fd0>
  419748:	mov	x20, x0
  41974c:	mov	x0, x21
  419750:	bl	4047b0 <free@plt>
  419754:	mov	x0, x23
  419758:	bl	420568 <wcrtomb@plt+0x1b948>
  41975c:	mov	x24, x0
  419760:	ldr	w0, [x20, #56]
  419764:	cbnz	w0, 4197e8 <wcrtomb@plt+0x14bc8>
  419768:	ldr	x0, [x20, #72]
  41976c:	cbz	x0, 4197bc <wcrtomb@plt+0x14b9c>
  419770:	bl	403ff0 <strlen@plt>
  419774:	mov	x19, x0
  419778:	add	x0, x0, #0x3
  41977c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  419780:	mov	w1, #0x59                  	// #89
  419784:	mov	x21, x0
  419788:	strb	w1, [x0], #1
  41978c:	add	x2, x19, #0x1
  419790:	add	x19, x21, x19
  419794:	ldr	x1, [x20, #72]
  419798:	bl	403f70 <memcpy@plt>
  41979c:	strb	wzr, [x19, #2]
  4197a0:	mov	x0, x21
  4197a4:	ldr	x1, [x20, #40]
  4197a8:	str	x1, [x20, #48]
  4197ac:	bl	418550 <wcrtomb@plt+0x13930>
  4197b0:	str	x0, [x20, #40]
  4197b4:	mov	x0, x21
  4197b8:	bl	4047b0 <free@plt>
  4197bc:	mov	x0, x24
  4197c0:	bl	4205e8 <wcrtomb@plt+0x1b9c8>
  4197c4:	mov	x0, x22
  4197c8:	bl	4047b0 <free@plt>
  4197cc:	mov	x0, x20
  4197d0:	ldp	x29, x30, [sp]
  4197d4:	ldp	x19, x20, [sp, #16]
  4197d8:	ldp	x21, x22, [sp, #32]
  4197dc:	ldp	x23, x24, [sp, #48]
  4197e0:	add	sp, sp, #0x240
  4197e4:	ret
  4197e8:	stp	x25, x26, [sp, #64]
  4197ec:	cmp	w0, #0x2
  4197f0:	mov	x23, #0x0                   	// #0
  4197f4:	stp	x27, x28, [sp, #80]
  4197f8:	b.eq	419810 <wcrtomb@plt+0x14bf0>  // b.none
  4197fc:	ldr	w0, [x20, #60]
  419800:	tbz	w0, #4, 419b90 <wcrtomb@plt+0x14f70>
  419804:	ldr	x0, [x20, #64]
  419808:	ldr	x23, [x0, #48]
  41980c:	cbz	x23, 419be0 <wcrtomb@plt+0x14fc0>
  419810:	ldrb	w0, [x22]
  419814:	cbz	w0, 419c78 <wcrtomb@plt+0x15058>
  419818:	mov	x25, x22
  41981c:	mov	x21, #0x0                   	// #0
  419820:	mov	x27, #0x0                   	// #0
  419824:	nop
  419828:	mov	x0, x25
  41982c:	bl	403ff0 <strlen@plt>
  419830:	add	x1, x0, #0x1
  419834:	add	x0, x0, #0x2
  419838:	add	x25, x25, x1
  41983c:	add	x27, x27, x0
  419840:	add	x21, x21, #0x1
  419844:	ldrb	w0, [x25]
  419848:	cbnz	w0, 419828 <wcrtomb@plt+0x14c08>
  41984c:	mov	x1, #0x8                   	// #8
  419850:	mov	x0, x21
  419854:	bl	4502b0 <argp_parse@@Base+0x104d0>
  419858:	str	x0, [sp, #120]
  41985c:	ldrb	w1, [x22]
  419860:	add	x27, x27, #0x1
  419864:	cbz	w1, 41988c <wcrtomb@plt+0x14c6c>
  419868:	ldr	x28, [sp, #120]
  41986c:	mov	x25, x22
  419870:	str	x25, [x28], #8
  419874:	mov	x0, x25
  419878:	bl	403ff0 <strlen@plt>
  41987c:	add	x0, x0, #0x1
  419880:	add	x25, x25, x0
  419884:	ldrb	w0, [x25]
  419888:	cbnz	w0, 419870 <wcrtomb@plt+0x14c50>
  41988c:	ldr	x0, [sp, #120]
  419890:	mov	x1, x21
  419894:	adrp	x3, 417000 <wcrtomb@plt+0x123e0>
  419898:	add	x3, x3, #0xb88
  41989c:	mov	x2, #0x8                   	// #8
  4198a0:	bl	4041a0 <qsort@plt>
  4198a4:	mov	x0, x27
  4198a8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4198ac:	str	x0, [sp, #136]
  4198b0:	mov	x26, x0
  4198b4:	cbz	x21, 41995c <wcrtomb@plt+0x14d3c>
  4198b8:	ldr	x27, [sp, #120]
  4198bc:	add	x0, x27, x21, lsl #3
  4198c0:	str	x0, [sp, #112]
  4198c4:	nop
  4198c8:	ldr	x28, [x27]
  4198cc:	cbz	x23, 419928 <wcrtomb@plt+0x14d08>
  4198d0:	ldp	x21, x0, [x23, #16]
  4198d4:	mov	x25, #0x0                   	// #0
  4198d8:	str	x0, [sp, #104]
  4198dc:	nop
  4198e0:	add	x2, x21, x25
  4198e4:	mov	x0, x28
  4198e8:	cmp	x21, x25
  4198ec:	b.ls	419928 <wcrtomb@plt+0x14d08>  // b.plast
  4198f0:	ldr	x1, [sp, #104]
  4198f4:	lsr	x2, x2, #1
  4198f8:	str	x2, [sp, #96]
  4198fc:	ldr	x1, [x1, x2, lsl #3]
  419900:	bl	404710 <strcmp@plt>
  419904:	cmp	w0, #0x0
  419908:	ldr	x2, [sp, #96]
  41990c:	b.lt	419ad4 <wcrtomb@plt+0x14eb4>  // b.tstop
  419910:	b.eq	419adc <wcrtomb@plt+0x14ebc>  // b.none
  419914:	add	x25, x2, #0x1
  419918:	mov	x0, x28
  41991c:	add	x2, x21, x25
  419920:	cmp	x21, x25
  419924:	b.hi	4198f0 <wcrtomb@plt+0x14cd0>  // b.pmore
  419928:	ldr	x0, [x20, #72]
  41992c:	add	x1, x26, #0x1
  419930:	cbz	x0, 419b5c <wcrtomb@plt+0x14f3c>
  419934:	mov	w0, #0x49                  	// #73
  419938:	strb	w0, [x26]
  41993c:	mov	x26, x1
  419940:	ldrb	w0, [x28], #1
  419944:	strb	w0, [x26], #1
  419948:	cbnz	w0, 419940 <wcrtomb@plt+0x14d20>
  41994c:	ldr	x0, [sp, #112]
  419950:	add	x27, x27, #0x8
  419954:	cmp	x0, x27
  419958:	b.ne	4198c8 <wcrtomb@plt+0x14ca8>  // b.any
  41995c:	strb	wzr, [x26]
  419960:	ldr	x21, [sp, #136]
  419964:	ldr	x1, [x20, #40]
  419968:	str	x1, [x20, #48]
  41996c:	mov	x0, x21
  419970:	bl	418550 <wcrtomb@plt+0x13930>
  419974:	str	x0, [x20, #40]
  419978:	mov	x0, x21
  41997c:	bl	4047b0 <free@plt>
  419980:	ldr	x0, [sp, #120]
  419984:	bl	4047b0 <free@plt>
  419988:	ldr	x26, [x20, #40]
  41998c:	mov	x0, #0x18                  	// #24
  419990:	bl	4501a0 <argp_parse@@Base+0x103c0>
  419994:	mov	x27, x0
  419998:	mov	w0, #0x1                   	// #1
  41999c:	ldr	x28, [x26]
  4199a0:	str	w0, [x27, #8]
  4199a4:	str	x26, [x27]
  4199a8:	ldrb	w0, [x28]
  4199ac:	cbz	w0, 419ac0 <wcrtomb@plt+0x14ea0>
  4199b0:	add	x1, sp, #0xf0
  4199b4:	mov	x0, x28
  4199b8:	str	x1, [sp, #104]
  4199bc:	add	x25, x28, #0x1
  4199c0:	bl	403ff0 <strlen@plt>
  4199c4:	add	x21, x0, #0x1
  4199c8:	str	x21, [x27, #16]
  4199cc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4199d0:	add	x1, x1, #0x2b0
  4199d4:	mov	x0, x24
  4199d8:	str	x1, [sp, #112]
  4199dc:	mov	x1, x25
  4199e0:	bl	420610 <wcrtomb@plt+0x1b9f0>
  4199e4:	mov	x23, x0
  4199e8:	ldrb	w1, [x28]
  4199ec:	cmp	w1, #0x49
  4199f0:	b.eq	419a04 <wcrtomb@plt+0x14de4>  // b.none
  4199f4:	mov	x1, x19
  4199f8:	bl	410b88 <wcrtomb@plt+0xbf68>
  4199fc:	tst	w0, #0xff
  419a00:	b.eq	419a60 <wcrtomb@plt+0x14e40>  // b.none
  419a04:	mov	w0, #0x4e                  	// #78
  419a08:	strb	w0, [x28]
  419a0c:	ldr	x0, [x26]
  419a10:	add	x28, x0, x21
  419a14:	ldrb	w0, [x0, x21]
  419a18:	cbz	w0, 419ac0 <wcrtomb@plt+0x14ea0>
  419a1c:	mov	x0, x28
  419a20:	bl	403ff0 <strlen@plt>
  419a24:	add	x0, x0, #0x1
  419a28:	add	x25, x28, #0x1
  419a2c:	add	x21, x21, x0
  419a30:	str	x21, [x27, #16]
  419a34:	mov	x1, x25
  419a38:	mov	x0, x24
  419a3c:	bl	420610 <wcrtomb@plt+0x1b9f0>
  419a40:	mov	x23, x0
  419a44:	ldrb	w1, [x28]
  419a48:	cmp	w1, #0x49
  419a4c:	b.eq	419a04 <wcrtomb@plt+0x14de4>  // b.none
  419a50:	mov	x1, x19
  419a54:	bl	410b88 <wcrtomb@plt+0xbf68>
  419a58:	tst	w0, #0xff
  419a5c:	b.ne	419a04 <wcrtomb@plt+0x14de4>  // b.any
  419a60:	ldr	w1, [x19, #408]
  419a64:	add	x0, sp, #0x98
  419a68:	str	w1, [sp, #96]
  419a6c:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  419a70:	ldr	w1, [sp, #96]
  419a74:	tbz	w1, #31, 419b6c <wcrtomb@plt+0x14f4c>
  419a78:	str	w1, [sp, #96]
  419a7c:	bl	404ad0 <__errno_location@plt>
  419a80:	ldr	w1, [sp, #96]
  419a84:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  419a88:	add	x2, x2, #0x300
  419a8c:	neg	w1, w1
  419a90:	str	w1, [x0]
  419a94:	mov	x0, x23
  419a98:	mov	w1, #0x0                   	// #0
  419a9c:	bl	4203f0 <wcrtomb@plt+0x1b7d0>
  419aa0:	mov	w0, #0x4e                  	// #78
  419aa4:	strb	w0, [x28]
  419aa8:	add	x0, sp, #0x98
  419aac:	bl	42f438 <wcrtomb@plt+0x2a818>
  419ab0:	ldr	x0, [x26]
  419ab4:	add	x28, x0, x21
  419ab8:	ldrb	w0, [x0, x21]
  419abc:	cbnz	w0, 419a1c <wcrtomb@plt+0x14dfc>
  419ac0:	mov	x0, x27
  419ac4:	bl	4047b0 <free@plt>
  419ac8:	ldp	x25, x26, [sp, #64]
  419acc:	ldp	x27, x28, [sp, #80]
  419ad0:	b	4197bc <wcrtomb@plt+0x14b9c>
  419ad4:	mov	x21, x2
  419ad8:	b	4198e0 <wcrtomb@plt+0x14cc0>
  419adc:	ldr	x0, [x20, #72]
  419ae0:	mov	w1, #0x20                  	// #32
  419ae4:	cmp	x0, #0x0
  419ae8:	mov	w0, #0x49                  	// #73
  419aec:	csel	w0, w0, w1, ne  // ne = any
  419af0:	strb	w0, [x26], #1
  419af4:	b	419940 <wcrtomb@plt+0x14d20>
  419af8:	add	x3, sp, #0x97
  419afc:	mov	x1, x19
  419b00:	mov	w2, #0x20                  	// #32
  419b04:	b	419740 <wcrtomb@plt+0x14b20>
  419b08:	mov	x0, x23
  419b0c:	bl	434030 <wcrtomb@plt+0x2f410>
  419b10:	mov	x0, x19
  419b14:	bl	410920 <wcrtomb@plt+0xbd00>
  419b18:	mov	x0, x23
  419b1c:	bl	450328 <argp_parse@@Base+0x10548>
  419b20:	mov	x21, x0
  419b24:	bl	41ec08 <wcrtomb@plt+0x19fe8>
  419b28:	cbz	x20, 419bd0 <wcrtomb@plt+0x14fb0>
  419b2c:	mov	x1, x19
  419b30:	add	x3, sp, #0x97
  419b34:	mov	w2, #0x0                   	// #0
  419b38:	mov	x0, x21
  419b3c:	bl	418bf0 <wcrtomb@plt+0x13fd0>
  419b40:	mov	x20, x0
  419b44:	mov	x0, x21
  419b48:	bl	4047b0 <free@plt>
  419b4c:	mov	x0, x23
  419b50:	bl	420568 <wcrtomb@plt+0x1b948>
  419b54:	mov	x24, x0
  419b58:	b	4197bc <wcrtomb@plt+0x14b9c>
  419b5c:	mov	w0, #0x59                  	// #89
  419b60:	strb	w0, [x26]
  419b64:	mov	x26, x1
  419b68:	b	419940 <wcrtomb@plt+0x14d20>
  419b6c:	ldp	x3, x0, [sp, #104]
  419b70:	mov	x2, x25
  419b74:	ldr	w4, [x0]
  419b78:	mov	w0, #0x0                   	// #0
  419b7c:	bl	404c00 <__fxstatat@plt>
  419b80:	cbz	w0, 419b98 <wcrtomb@plt+0x14f78>
  419b84:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  419b88:	add	x2, x2, #0x3c8
  419b8c:	b	419a94 <wcrtomb@plt+0x14e74>
  419b90:	ldr	x23, [x20, #40]
  419b94:	b	419810 <wcrtomb@plt+0x14bf0>
  419b98:	ldr	w0, [sp, #256]
  419b9c:	and	w0, w0, #0xf000
  419ba0:	cmp	w0, #0x4, lsl #12
  419ba4:	b.eq	419be8 <wcrtomb@plt+0x14fc8>  // b.none
  419ba8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  419bac:	ldrb	w0, [x0, #213]
  419bb0:	cbz	w0, 419cc0 <wcrtomb@plt+0x150a0>
  419bb4:	ldr	x1, [sp, #128]
  419bb8:	ldr	x0, [sp, #240]
  419bbc:	cmp	x0, x1
  419bc0:	b.eq	419cc0 <wcrtomb@plt+0x150a0>  // b.none
  419bc4:	mov	w0, #0x4e                  	// #78
  419bc8:	strb	w0, [x28]
  419bcc:	b	419aa8 <wcrtomb@plt+0x14e88>
  419bd0:	mov	x1, x19
  419bd4:	add	x3, sp, #0x97
  419bd8:	mov	w2, #0x20                  	// #32
  419bdc:	b	419b38 <wcrtomb@plt+0x14f18>
  419be0:	ldr	x23, [x0, #40]
  419be4:	b	419810 <wcrtomb@plt+0x14bf0>
  419be8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  419bec:	mov	x1, x25
  419bf0:	mov	x0, x19
  419bf4:	ldr	w2, [x2, #836]
  419bf8:	bl	40dde8 <wcrtomb@plt+0x91c8>
  419bfc:	mov	w1, w0
  419c00:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  419c04:	add	x2, x2, #0x300
  419c08:	tbnz	w0, #31, 419a94 <wcrtomb@plt+0x14e74>
  419c0c:	ldr	x2, [sp, #104]
  419c10:	mov	w0, #0x0                   	// #0
  419c14:	str	w1, [sp, #560]
  419c18:	bl	4049a0 <__fxstat@plt>
  419c1c:	cbnz	w0, 419b84 <wcrtomb@plt+0x14f64>
  419c20:	ldr	w0, [sp, #256]
  419c24:	and	w0, w0, #0xf000
  419c28:	cmp	w0, #0x4, lsl #12
  419c2c:	b.ne	419ba8 <wcrtomb@plt+0x14f88>  // b.any
  419c30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  419c34:	mov	w2, #0x10                  	// #16
  419c38:	ldr	w0, [x0, #804]
  419c3c:	cbz	w0, 419c50 <wcrtomb@plt+0x15030>
  419c40:	ldr	w0, [x20, #56]
  419c44:	mov	w2, #0x12                  	// #18
  419c48:	cmp	w0, #0x2
  419c4c:	csel	w2, wzr, w2, ne  // ne = any
  419c50:	mov	x3, x28
  419c54:	add	x1, sp, #0x98
  419c58:	mov	w0, #0x44                  	// #68
  419c5c:	strb	w0, [x28]
  419c60:	mov	x0, x23
  419c64:	str	x19, [sp, #544]
  419c68:	bl	418bf0 <wcrtomb@plt+0x13fd0>
  419c6c:	add	x0, sp, #0x98
  419c70:	bl	40dfb0 <wcrtomb@plt+0x9390>
  419c74:	b	419aa8 <wcrtomb@plt+0x14e88>
  419c78:	mov	x1, #0x8                   	// #8
  419c7c:	mov	x0, #0x0                   	// #0
  419c80:	bl	4502b0 <argp_parse@@Base+0x104d0>
  419c84:	str	x0, [sp, #120]
  419c88:	ldrb	w1, [x22]
  419c8c:	mov	x21, #0x0                   	// #0
  419c90:	mov	x27, #0x1                   	// #1
  419c94:	cbnz	w1, 419868 <wcrtomb@plt+0x14c48>
  419c98:	adrp	x3, 417000 <wcrtomb@plt+0x123e0>
  419c9c:	add	x3, x3, #0xb88
  419ca0:	mov	x2, #0x8                   	// #8
  419ca4:	mov	x1, #0x0                   	// #0
  419ca8:	bl	4041a0 <qsort@plt>
  419cac:	mov	x0, x27
  419cb0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  419cb4:	mov	x26, x0
  419cb8:	str	x0, [sp, #136]
  419cbc:	b	41995c <wcrtomb@plt+0x14d3c>
  419cc0:	ldrb	w0, [x28]
  419cc4:	cmp	w0, #0x59
  419cc8:	b.eq	419aa8 <wcrtomb@plt+0x14e88>  // b.none
  419ccc:	ldp	x2, x3, [sp, #328]
  419cd0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  419cd4:	add	x1, x0, #0xa8
  419cd8:	ldr	x0, [x0, #168]
  419cdc:	ldr	x1, [x1, #8]
  419ce0:	cmp	x2, x0
  419ce4:	b.lt	419d00 <wcrtomb@plt+0x150e0>  // b.tstop
  419ce8:	b.gt	419cf4 <wcrtomb@plt+0x150d4>
  419cec:	cmp	w3, w1
  419cf0:	b.mi	419d00 <wcrtomb@plt+0x150e0>  // b.first
  419cf4:	mov	w0, #0x59                  	// #89
  419cf8:	strb	w0, [x28]
  419cfc:	b	419aa8 <wcrtomb@plt+0x14e88>
  419d00:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  419d04:	ldr	w2, [x2, #1100]
  419d08:	cbz	w2, 419bc4 <wcrtomb@plt+0x14fa4>
  419d0c:	ldp	x3, x2, [sp, #344]
  419d10:	cmp	x0, x3
  419d14:	b.gt	419bc4 <wcrtomb@plt+0x14fa4>
  419d18:	b.lt	419cf4 <wcrtomb@plt+0x150d4>  // b.tstop
  419d1c:	cmp	w2, w1
  419d20:	b.pl	419cf4 <wcrtomb@plt+0x150d4>  // b.nfrst
  419d24:	b	419bc4 <wcrtomb@plt+0x14fa4>
  419d28:	cbz	x0, 419d3c <wcrtomb@plt+0x1511c>
  419d2c:	ldr	x0, [x0, #40]
  419d30:	cbz	x0, 419d38 <wcrtomb@plt+0x15118>
  419d34:	ldr	x0, [x0]
  419d38:	ret
  419d3c:	mov	x0, #0x0                   	// #0
  419d40:	ret
  419d44:	nop
  419d48:	cbz	x0, 419d6c <wcrtomb@plt+0x1514c>
  419d4c:	ldr	x0, [x0, #40]
  419d50:	cbz	x0, 419d6c <wcrtomb@plt+0x1514c>
  419d54:	ldr	x0, [x0]
  419d58:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  419d5c:	add	x1, x1, #0xb90
  419d60:	cmp	x0, #0x0
  419d64:	csel	x0, x1, x0, eq  // eq = none
  419d68:	ret
  419d6c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  419d70:	add	x0, x0, #0xb90
  419d74:	ret
  419d78:	stp	x29, x30, [sp, #-192]!
  419d7c:	mov	x29, sp
  419d80:	stp	x19, x20, [sp, #16]
  419d84:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  419d88:	add	x20, x20, #0x8e0
  419d8c:	stp	x23, x24, [sp, #48]
  419d90:	mov	x23, x0
  419d94:	ldr	x0, [x20, #8]
  419d98:	cbz	x0, 419f60 <wcrtomb@plt+0x15340>
  419d9c:	adrp	x4, 404000 <fputs@plt>
  419da0:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  419da4:	add	x0, sp, #0x68
  419da8:	add	x4, x4, #0x7b0
  419dac:	add	x3, x3, #0x1a0
  419db0:	mov	x2, #0x0                   	// #0
  419db4:	mov	x1, #0x0                   	// #0
  419db8:	stp	x21, x22, [sp, #32]
  419dbc:	bl	451000 <_obstack_begin@@Base>
  419dc0:	cbz	x23, 41a06c <wcrtomb@plt+0x1544c>
  419dc4:	ldr	x0, [x23, #40]
  419dc8:	cbz	x0, 41a064 <wcrtomb@plt+0x15444>
  419dcc:	ldr	x21, [x0]
  419dd0:	mov	x22, #0x0                   	// #0
  419dd4:	cbz	x21, 419e40 <wcrtomb@plt+0x15220>
  419dd8:	ldrb	w0, [x21]
  419ddc:	ldr	x24, [sp, #128]
  419de0:	cbz	w0, 419e24 <wcrtomb@plt+0x15204>
  419de4:	mov	x19, x21
  419de8:	mov	x0, x19
  419dec:	bl	403ff0 <strlen@plt>
  419df0:	add	x0, x0, #0x1
  419df4:	add	x19, x19, x0
  419df8:	add	x22, x22, x0
  419dfc:	ldrb	w0, [x19]
  419e00:	cbnz	w0, 419de8 <wcrtomb@plt+0x151c8>
  419e04:	ldr	x0, [sp, #136]
  419e08:	sub	x0, x0, x24
  419e0c:	cmp	x0, x22
  419e10:	b.cs	419e24 <wcrtomb@plt+0x15204>  // b.hs, b.nlast
  419e14:	mov	x1, x22
  419e18:	add	x0, sp, #0x68
  419e1c:	bl	4511d8 <_obstack_newchunk@@Base>
  419e20:	ldr	x24, [sp, #128]
  419e24:	mov	x1, x21
  419e28:	mov	x0, x24
  419e2c:	mov	x2, x22
  419e30:	bl	403f70 <memcpy@plt>
  419e34:	ldr	x0, [sp, #128]
  419e38:	add	x0, x0, x22
  419e3c:	str	x0, [sp, #128]
  419e40:	ldr	x19, [x20, #8]
  419e44:	cbz	x19, 419ecc <wcrtomb@plt+0x152ac>
  419e48:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x21bf0>
  419e4c:	add	x24, x24, #0x7e8
  419e50:	stp	x25, x26, [sp, #64]
  419e54:	mov	w25, #0x58                  	// #88
  419e58:	str	x27, [sp, #80]
  419e5c:	nop
  419e60:	ldr	w1, [x19, #60]
  419e64:	tbz	w1, #4, 419eb8 <wcrtomb@plt+0x15298>
  419e68:	mov	x21, x19
  419e6c:	b	419e74 <wcrtomb@plt+0x15254>
  419e70:	ldr	w1, [x0, #60]
  419e74:	ldr	x0, [x21, #64]
  419e78:	and	w1, w1, #0xffffffef
  419e7c:	cmp	x0, x19
  419e80:	b.eq	419f70 <wcrtomb@plt+0x15350>  // b.none
  419e84:	str	w1, [x21, #60]
  419e88:	mov	x21, x0
  419e8c:	cbnz	x0, 419e70 <wcrtomb@plt+0x15250>
  419e90:	mov	x20, x19
  419e94:	b	419eac <wcrtomb@plt+0x1528c>
  419e98:	ldr	x2, [x20, #88]
  419e9c:	ldr	x1, [x1, #88]
  419ea0:	bl	417bc8 <wcrtomb@plt+0x12fa8>
  419ea4:	ldr	x20, [x20, #64]
  419ea8:	cbz	x20, 419eb8 <wcrtomb@plt+0x15298>
  419eac:	ldr	x1, [x20, #64]
  419eb0:	add	x0, sp, #0x68
  419eb4:	cbnz	x1, 419e98 <wcrtomb@plt+0x15278>
  419eb8:	ldr	x19, [x19]
  419ebc:	cbnz	x19, 419e60 <wcrtomb@plt+0x15240>
  419ec0:	ldp	x25, x26, [sp, #64]
  419ec4:	ldr	x27, [sp, #80]
  419ec8:	cbz	x23, 419f50 <wcrtomb@plt+0x15330>
  419ecc:	ldp	x1, x0, [sp, #120]
  419ed0:	sub	x1, x0, x1
  419ed4:	cmp	x1, x22
  419ed8:	b.eq	419f50 <wcrtomb@plt+0x15330>  // b.none
  419edc:	ldr	x1, [sp, #136]
  419ee0:	cmp	x0, x1
  419ee4:	b.eq	41a07c <wcrtomb@plt+0x1545c>  // b.none
  419ee8:	add	x1, x0, #0x1
  419eec:	str	x1, [sp, #128]
  419ef0:	strb	wzr, [x0]
  419ef4:	ldr	x19, [x23, #40]
  419ef8:	ldr	x0, [x19, #24]
  419efc:	bl	4047b0 <free@plt>
  419f00:	mov	x0, x19
  419f04:	bl	4047b0 <free@plt>
  419f08:	ldp	x0, x3, [sp, #120]
  419f0c:	cmp	x3, x0
  419f10:	b.eq	41a054 <wcrtomb@plt+0x15434>  // b.none
  419f14:	ldr	x1, [sp, #152]
  419f18:	ldr	x2, [sp, #112]
  419f1c:	add	x3, x3, x1
  419f20:	ldr	x4, [sp, #136]
  419f24:	bic	x1, x3, x1
  419f28:	str	x1, [sp, #128]
  419f2c:	sub	x3, x1, x2
  419f30:	sub	x2, x4, x2
  419f34:	cmp	x3, x2
  419f38:	b.ls	419f44 <wcrtomb@plt+0x15324>  // b.plast
  419f3c:	mov	x1, x4
  419f40:	str	x4, [sp, #128]
  419f44:	str	x1, [sp, #120]
  419f48:	bl	418650 <wcrtomb@plt+0x13a30>
  419f4c:	str	x0, [x23, #40]
  419f50:	add	x0, sp, #0x68
  419f54:	mov	x1, #0x0                   	// #0
  419f58:	bl	451360 <_obstack_free@@Base>
  419f5c:	ldp	x21, x22, [sp, #32]
  419f60:	ldp	x19, x20, [sp, #16]
  419f64:	ldp	x23, x24, [sp, #48]
  419f68:	ldp	x29, x30, [sp], #192
  419f6c:	ret
  419f70:	ldr	x0, [x19, #88]
  419f74:	str	w1, [x21, #60]
  419f78:	bl	4413c8 <argp_parse@@Base+0x15e8>
  419f7c:	mov	x27, x0
  419f80:	ldp	x1, x0, [sp, #128]
  419f84:	cmp	x0, x1
  419f88:	b.eq	41a040 <wcrtomb@plt+0x15420>  // b.none
  419f8c:	add	x0, x1, #0x1
  419f90:	str	x0, [sp, #128]
  419f94:	strb	w25, [x1]
  419f98:	mov	x0, x27
  419f9c:	bl	403ff0 <strlen@plt>
  419fa0:	add	x26, x0, #0x1
  419fa4:	ldp	x0, x1, [sp, #128]
  419fa8:	sub	x1, x1, x0
  419fac:	cmp	x26, x1
  419fb0:	b.hi	41a02c <wcrtomb@plt+0x1540c>  // b.pmore
  419fb4:	mov	x2, x26
  419fb8:	mov	x1, x27
  419fbc:	bl	403f70 <memcpy@plt>
  419fc0:	mov	x20, x19
  419fc4:	ldr	x1, [x19, #88]
  419fc8:	mov	x2, x24
  419fcc:	ldr	x3, [sp, #128]
  419fd0:	add	x0, sp, #0x68
  419fd4:	add	x26, x3, x26
  419fd8:	str	x26, [sp, #128]
  419fdc:	bl	417bc8 <wcrtomb@plt+0x12fa8>
  419fe0:	cmp	x19, x21
  419fe4:	b.eq	41a008 <wcrtomb@plt+0x153e8>  // b.none
  419fe8:	ldr	x1, [x20, #64]
  419fec:	add	x0, sp, #0x68
  419ff0:	ldr	x2, [x20, #88]
  419ff4:	ldr	x1, [x1, #88]
  419ff8:	bl	417bc8 <wcrtomb@plt+0x12fa8>
  419ffc:	ldr	x20, [x20, #64]
  41a000:	cmp	x20, x21
  41a004:	b.ne	419fe8 <wcrtomb@plt+0x153c8>  // b.any
  41a008:	ldr	x2, [x21, #88]
  41a00c:	mov	x1, x24
  41a010:	add	x0, sp, #0x68
  41a014:	bl	417bc8 <wcrtomb@plt+0x12fa8>
  41a018:	mov	x0, x27
  41a01c:	bl	4047b0 <free@plt>
  41a020:	ldr	x19, [x19]
  41a024:	cbnz	x19, 419e60 <wcrtomb@plt+0x15240>
  41a028:	b	419ec0 <wcrtomb@plt+0x152a0>
  41a02c:	add	x0, sp, #0x68
  41a030:	mov	x1, x26
  41a034:	bl	4511d8 <_obstack_newchunk@@Base>
  41a038:	ldr	x0, [sp, #128]
  41a03c:	b	419fb4 <wcrtomb@plt+0x15394>
  41a040:	mov	x1, #0x1                   	// #1
  41a044:	add	x0, sp, #0x68
  41a048:	bl	4511d8 <_obstack_newchunk@@Base>
  41a04c:	ldr	x1, [sp, #128]
  41a050:	b	419f8c <wcrtomb@plt+0x1536c>
  41a054:	ldrb	w1, [sp, #184]
  41a058:	orr	w1, w1, #0x2
  41a05c:	strb	w1, [sp, #184]
  41a060:	b	419f14 <wcrtomb@plt+0x152f4>
  41a064:	mov	x22, #0x0                   	// #0
  41a068:	b	419e40 <wcrtomb@plt+0x15220>
  41a06c:	ldr	x19, [x20, #8]
  41a070:	mov	x22, #0x0                   	// #0
  41a074:	cbnz	x19, 419e48 <wcrtomb@plt+0x15228>
  41a078:	b	419f50 <wcrtomb@plt+0x15330>
  41a07c:	add	x0, sp, #0x68
  41a080:	mov	x1, #0x1                   	// #1
  41a084:	bl	4511d8 <_obstack_newchunk@@Base>
  41a088:	ldr	x0, [sp, #128]
  41a08c:	b	419ee8 <wcrtomb@plt+0x152c8>
  41a090:	stp	x29, x30, [sp, #-96]!
  41a094:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a098:	add	x0, x0, #0x748
  41a09c:	mov	x29, sp
  41a0a0:	stp	x19, x20, [sp, #16]
  41a0a4:	adrp	x19, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0a8:	add	x19, x19, #0xb90
  41a0ac:	add	x19, x19, #0x8
  41a0b0:	stp	x21, x22, [sp, #32]
  41a0b4:	adrp	x21, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0b8:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0bc:	add	x21, x21, #0x740
  41a0c0:	add	x22, x22, #0x7b8
  41a0c4:	bl	4046b0 <puts@plt>
  41a0c8:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0cc:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0d0:	add	x4, x4, #0x778
  41a0d4:	add	x3, x3, #0x780
  41a0d8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0dc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a0e0:	add	x2, x2, #0x788
  41a0e4:	add	x1, x1, #0x798
  41a0e8:	mov	w0, #0x1                   	// #1
  41a0ec:	bl	404400 <__printf_chk@plt>
  41a0f0:	ldp	x1, x2, [x19, #8]
  41a0f4:	add	x3, sp, #0x30
  41a0f8:	mov	x0, x1
  41a0fc:	bl	41efa0 <wcrtomb@plt+0x1a380>
  41a100:	ldp	x1, x2, [x19, #8]
  41a104:	mov	x20, x0
  41a108:	add	x3, sp, #0x48
  41a10c:	mov	x0, x2
  41a110:	bl	41efa0 <wcrtomb@plt+0x1a380>
  41a114:	mov	x2, x21
  41a118:	mov	x4, x0
  41a11c:	mov	x3, x20
  41a120:	mov	x1, x22
  41a124:	mov	w0, #0x1                   	// #1
  41a128:	bl	404400 <__printf_chk@plt>
  41a12c:	ldr	x21, [x19, #24]!
  41a130:	cbnz	x21, 41a0f0 <wcrtomb@plt+0x154d0>
  41a134:	mov	w0, #0xa                   	// #10
  41a138:	bl	404b00 <putchar@plt>
  41a13c:	ldp	x19, x20, [sp, #16]
  41a140:	ldp	x21, x22, [sp, #32]
  41a144:	ldp	x29, x30, [sp], #96
  41a148:	ret
  41a14c:	nop
  41a150:	stp	x29, x30, [sp, #-320]!
  41a154:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a158:	mov	w3, #0x42                  	// #66
  41a15c:	mov	x29, sp
  41a160:	ldr	w4, [x0, #908]
  41a164:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a168:	mov	w1, #0x242                 	// #578
  41a16c:	mov	w2, #0x1b6                 	// #438
  41a170:	ldr	x0, [x0, #960]
  41a174:	cmp	w4, #0x0
  41a178:	csel	w1, w3, w1, ne  // ne = any
  41a17c:	stp	xzr, xzr, [sp, #168]
  41a180:	bl	404340 <open@plt>
  41a184:	tbnz	w0, #31, 41a798 <wcrtomb@plt+0x15b78>
  41a188:	stp	x19, x20, [sp, #16]
  41a18c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41a190:	add	x19, x19, #0x8e0
  41a194:	mov	w20, w0
  41a198:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a19c:	add	x1, x1, #0x7d8
  41a1a0:	bl	404420 <fdopen@plt>
  41a1a4:	str	x0, [x19, #32]
  41a1a8:	cbz	x0, 41aafc <wcrtomb@plt+0x15edc>
  41a1ac:	bl	4273a8 <wcrtomb@plt+0x22788>
  41a1b0:	bl	427428 <wcrtomb@plt+0x22808>
  41a1b4:	ldr	x3, [x19, #32]
  41a1b8:	add	x1, sp, #0xb0
  41a1bc:	add	x0, sp, #0xa8
  41a1c0:	mov	w2, #0xa                   	// #10
  41a1c4:	bl	404b40 <__getdelim@plt>
  41a1c8:	cmp	x0, #0x0
  41a1cc:	b.le	41a778 <wcrtomb@plt+0x15b58>
  41a1d0:	stp	x21, x22, [sp, #32]
  41a1d4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a1d8:	mov	x2, #0x7                   	// #7
  41a1dc:	ldr	x21, [sp, #168]
  41a1e0:	add	x1, x1, #0x7e0
  41a1e4:	stp	x23, x24, [sp, #48]
  41a1e8:	mov	x0, x21
  41a1ec:	bl	4043c0 <strncmp@plt>
  41a1f0:	cbnz	w0, 41ab1c <wcrtomb@plt+0x15efc>
  41a1f4:	ldrb	w0, [x21, #7]
  41a1f8:	add	x20, x21, #0x8
  41a1fc:	cmp	w0, #0x2d
  41a200:	b.eq	41a244 <wcrtomb@plt+0x15624>  // b.none
  41a204:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a208:	ldr	x0, [x0, #1136]
  41a20c:	cbz	x0, 41a214 <wcrtomb@plt+0x155f4>
  41a210:	blr	x0
  41a214:	mov	w2, #0x5                   	// #5
  41a218:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a21c:	mov	x0, #0x0                   	// #0
  41a220:	add	x1, x1, #0x7e8
  41a224:	bl	4049c0 <dcgettext@plt>
  41a228:	mov	x2, x0
  41a22c:	mov	w1, #0x0                   	// #0
  41a230:	mov	w0, #0x1                   	// #1
  41a234:	bl	404050 <error@plt>
  41a238:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41a23c:	mov	w1, #0x2                   	// #2
  41a240:	str	w1, [x0, #3568]
  41a244:	ldrb	w0, [x21, #8]
  41a248:	cmp	w0, #0x2d
  41a24c:	b.eq	41a2ac <wcrtomb@plt+0x1568c>  // b.none
  41a250:	adrp	x22, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a254:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41a258:	add	x22, x22, #0x7e8
  41a25c:	add	x21, x21, #0xdf0
  41a260:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a264:	nop
  41a268:	cbnz	w0, 41a2a0 <wcrtomb@plt+0x15680>
  41a26c:	ldr	x0, [x23, #1136]
  41a270:	cbz	x0, 41a278 <wcrtomb@plt+0x15658>
  41a274:	blr	x0
  41a278:	mov	x1, x22
  41a27c:	mov	w2, #0x5                   	// #5
  41a280:	mov	x0, #0x0                   	// #0
  41a284:	bl	4049c0 <dcgettext@plt>
  41a288:	mov	w1, #0x0                   	// #0
  41a28c:	mov	x2, x0
  41a290:	mov	w0, #0x1                   	// #1
  41a294:	bl	404050 <error@plt>
  41a298:	mov	w0, #0x2                   	// #2
  41a29c:	str	w0, [x21]
  41a2a0:	ldrb	w0, [x20, #1]!
  41a2a4:	cmp	w0, #0x2d
  41a2a8:	b.ne	41a268 <wcrtomb@plt+0x15648>  // b.any
  41a2ac:	add	x0, x20, #0x1
  41a2b0:	mov	w3, #0x0                   	// #0
  41a2b4:	mov	w2, #0xa                   	// #10
  41a2b8:	mov	x1, #0x0                   	// #0
  41a2bc:	bl	4044b0 <__strtoul_internal@plt>
  41a2c0:	str	x0, [sp, #104]
  41a2c4:	cmp	x0, #0x1
  41a2c8:	b.ls	41a7bc <wcrtomb@plt+0x15b9c>  // b.plast
  41a2cc:	cmp	x0, #0x2
  41a2d0:	b.ne	41a728 <wcrtomb@plt+0x15b08>  // b.any
  41a2d4:	add	x20, sp, #0xe0
  41a2d8:	mov	x2, #0x0                   	// #0
  41a2dc:	mov	x1, #0x0                   	// #0
  41a2e0:	mov	x0, x20
  41a2e4:	adrp	x4, 404000 <fputs@plt>
  41a2e8:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  41a2ec:	add	x4, x4, #0x7b0
  41a2f0:	add	x3, x3, #0x1a0
  41a2f4:	stp	x25, x26, [sp, #64]
  41a2f8:	add	x23, sp, #0xc0
  41a2fc:	stp	x27, x28, [sp, #80]
  41a300:	bl	451000 <_obstack_begin@@Base>
  41a304:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a308:	ldr	x21, [x19, #32]
  41a30c:	add	x0, x0, #0x8a8
  41a310:	mov	x1, x0
  41a314:	mov	x4, x23
  41a318:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41a31c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  41a320:	str	x0, [sp, #120]
  41a324:	mov	x0, x21
  41a328:	bl	417d40 <wcrtomb@plt+0x13120>
  41a32c:	tst	w0, #0xff
  41a330:	b.eq	41ad30 <wcrtomb@plt+0x16110>  // b.none
  41a334:	add	x22, sp, #0xc8
  41a338:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a33c:	mov	x2, #0xc9ff                	// #51711
  41a340:	add	x0, x0, #0x8b0
  41a344:	mov	x1, x0
  41a348:	mov	x3, x22
  41a34c:	mov	x0, x21
  41a350:	movk	x2, #0x3b9a, lsl #16
  41a354:	str	x1, [sp, #128]
  41a358:	bl	4181d8 <wcrtomb@plt+0x135b8>
  41a35c:	tst	w0, #0xff
  41a360:	b.eq	41ad30 <wcrtomb@plt+0x16110>  // b.none
  41a364:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a368:	add	x1, x0, #0xa8
  41a36c:	ldr	x2, [sp, #192]
  41a370:	str	x2, [x0, #168]
  41a374:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a378:	add	x2, x2, #0x8b8
  41a37c:	ldr	x0, [sp, #200]
  41a380:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a384:	add	x3, x3, #0x740
  41a388:	str	x0, [x1, #8]
  41a38c:	stp	x3, x2, [sp, #136]
  41a390:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a394:	add	x2, x2, #0x8c0
  41a398:	str	x2, [sp, #152]
  41a39c:	nop
  41a3a0:	ldr	x0, [x19, #32]
  41a3a4:	add	x3, sp, #0xb8
  41a3a8:	ldr	x1, [sp, #136]
  41a3ac:	mov	x2, #0x1                   	// #1
  41a3b0:	bl	4181d8 <wcrtomb@plt+0x135b8>
  41a3b4:	tst	w0, #0xff
  41a3b8:	b.eq	41ab88 <wcrtomb@plt+0x15f68>  // b.none
  41a3bc:	ldr	x0, [sp, #184]
  41a3c0:	mov	x4, x23
  41a3c4:	ldr	x1, [sp, #120]
  41a3c8:	cmp	x0, #0x0
  41a3cc:	ldr	x21, [x19, #32]
  41a3d0:	cset	w0, ne  // ne = any
  41a3d4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41a3d8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  41a3dc:	str	w0, [sp, #96]
  41a3e0:	mov	x0, x21
  41a3e4:	bl	417d40 <wcrtomb@plt+0x13120>
  41a3e8:	tst	w0, #0xff
  41a3ec:	b.eq	41ad30 <wcrtomb@plt+0x16110>  // b.none
  41a3f0:	ldr	x1, [sp, #128]
  41a3f4:	mov	x2, #0xc9ff                	// #51711
  41a3f8:	mov	x0, x21
  41a3fc:	mov	x3, x22
  41a400:	movk	x2, #0x3b9a, lsl #16
  41a404:	bl	4181d8 <wcrtomb@plt+0x135b8>
  41a408:	tst	w0, #0xff
  41a40c:	b.eq	41ad30 <wcrtomb@plt+0x16110>  // b.none
  41a410:	ldr	x0, [x19, #32]
  41a414:	add	x3, sp, #0xb8
  41a418:	ldr	x1, [sp, #144]
  41a41c:	mov	x2, #0xffffffffffffffff    	// #-1
  41a420:	ldp	x27, x28, [sp, #192]
  41a424:	bl	4181d8 <wcrtomb@plt+0x135b8>
  41a428:	tst	w0, #0xff
  41a42c:	b.eq	41ad30 <wcrtomb@plt+0x16110>  // b.none
  41a430:	ldr	x0, [x19, #32]
  41a434:	add	x3, sp, #0xb8
  41a438:	ldr	x1, [sp, #152]
  41a43c:	mov	x2, #0xffffffffffffffff    	// #-1
  41a440:	ldr	x4, [sp, #184]
  41a444:	str	x4, [sp, #104]
  41a448:	bl	4181d8 <wcrtomb@plt+0x135b8>
  41a44c:	tst	w0, #0xff
  41a450:	b.eq	41ad30 <wcrtomb@plt+0x16110>  // b.none
  41a454:	ldr	x24, [x19, #32]
  41a458:	ldr	x0, [sp, #184]
  41a45c:	str	x0, [sp, #112]
  41a460:	ldr	x0, [x24, #8]
  41a464:	ldr	x1, [x24, #16]
  41a468:	cmp	x0, x1
  41a46c:	b.cs	41aabc <wcrtomb@plt+0x15e9c>  // b.hs, b.nlast
  41a470:	add	x1, x0, #0x1
  41a474:	str	x1, [x24, #8]
  41a478:	ldrb	w21, [x0]
  41a47c:	add	w0, w21, #0x1
  41a480:	cmp	w0, #0x1
  41a484:	b.hi	41a4b4 <wcrtomb@plt+0x15894>  // b.pmore
  41a488:	b	41a500 <wcrtomb@plt+0x158e0>
  41a48c:	add	x1, x0, #0x1
  41a490:	str	x1, [sp, #248]
  41a494:	strb	w21, [x0]
  41a498:	ldp	x0, x1, [x24, #8]
  41a49c:	cmp	x0, x1
  41a4a0:	b.cs	41a4e8 <wcrtomb@plt+0x158c8>  // b.hs, b.nlast
  41a4a4:	add	x1, x0, #0x1
  41a4a8:	str	x1, [x24, #8]
  41a4ac:	ldrb	w21, [x0]
  41a4b0:	cbz	w21, 41a500 <wcrtomb@plt+0x158e0>
  41a4b4:	ldp	x0, x1, [sp, #248]
  41a4b8:	cmp	x1, x0
  41a4bc:	b.ne	41a48c <wcrtomb@plt+0x1586c>  // b.any
  41a4c0:	mov	x0, x20
  41a4c4:	mov	x1, #0x1                   	// #1
  41a4c8:	bl	4511d8 <_obstack_newchunk@@Base>
  41a4cc:	ldr	x0, [sp, #248]
  41a4d0:	add	x1, x0, #0x1
  41a4d4:	str	x1, [sp, #248]
  41a4d8:	strb	w21, [x0]
  41a4dc:	ldp	x0, x1, [x24, #8]
  41a4e0:	cmp	x0, x1
  41a4e4:	b.cc	41a4a4 <wcrtomb@plt+0x15884>  // b.lo, b.ul, b.last
  41a4e8:	mov	x0, x24
  41a4ec:	bl	404b90 <__uflow@plt>
  41a4f0:	mov	w21, w0
  41a4f4:	add	w0, w0, #0x1
  41a4f8:	cmp	w0, #0x1
  41a4fc:	b.hi	41a4b4 <wcrtomb@plt+0x15894>  // b.pmore
  41a500:	ldp	x0, x1, [sp, #248]
  41a504:	cmp	x1, x0
  41a508:	b.eq	41aa44 <wcrtomb@plt+0x15e24>  // b.none
  41a50c:	add	x1, x0, #0x1
  41a510:	str	x1, [sp, #248]
  41a514:	strb	wzr, [x0]
  41a518:	cbnz	w21, 41ad30 <wcrtomb@plt+0x16110>
  41a51c:	ldp	x21, x2, [sp, #240]
  41a520:	cmp	x21, x2
  41a524:	b.eq	41aa24 <wcrtomb@plt+0x15e04>  // b.none
  41a528:	ldr	x0, [sp, #272]
  41a52c:	ldr	x1, [sp, #232]
  41a530:	add	x2, x2, x0
  41a534:	ldr	x3, [sp, #256]
  41a538:	bic	x0, x2, x0
  41a53c:	str	x0, [sp, #248]
  41a540:	sub	x2, x0, x1
  41a544:	sub	x1, x3, x1
  41a548:	cmp	x2, x1
  41a54c:	b.ls	41a558 <wcrtomb@plt+0x15938>  // b.plast
  41a550:	mov	x0, x3
  41a554:	str	x3, [sp, #248]
  41a558:	ldr	x26, [x19, #32]
  41a55c:	str	x0, [sp, #240]
  41a560:	ldp	x0, x1, [x26, #8]
  41a564:	cmp	x0, x1
  41a568:	b.cs	41a650 <wcrtomb@plt+0x15a30>  // b.hs, b.nlast
  41a56c:	nop
  41a570:	add	x1, x0, #0x1
  41a574:	str	x1, [x26, #8]
  41a578:	ldrb	w24, [x0]
  41a57c:	add	w0, w24, #0x1
  41a580:	cmp	w0, #0x1
  41a584:	ldp	x1, x0, [sp, #248]
  41a588:	b.ls	41a670 <wcrtomb@plt+0x15a50>  // b.plast
  41a58c:	mov	x25, #0x0                   	// #0
  41a590:	b	41a5c4 <wcrtomb@plt+0x159a4>
  41a594:	add	x0, x1, #0x1
  41a598:	str	x0, [sp, #248]
  41a59c:	strb	w24, [x1]
  41a5a0:	ldp	x0, x1, [x26, #8]
  41a5a4:	cmp	x0, x1
  41a5a8:	b.cs	41a5f8 <wcrtomb@plt+0x159d8>  // b.hs, b.nlast
  41a5ac:	add	x1, x0, #0x1
  41a5b0:	str	x1, [x26, #8]
  41a5b4:	add	x25, x25, #0x1
  41a5b8:	ldrb	w24, [x0]
  41a5bc:	ldp	x1, x0, [sp, #248]
  41a5c0:	cbz	w24, 41a618 <wcrtomb@plt+0x159f8>
  41a5c4:	cmp	x0, x1
  41a5c8:	b.ne	41a594 <wcrtomb@plt+0x15974>  // b.any
  41a5cc:	mov	x0, x20
  41a5d0:	mov	x1, #0x1                   	// #1
  41a5d4:	bl	4511d8 <_obstack_newchunk@@Base>
  41a5d8:	ldr	x1, [sp, #248]
  41a5dc:	add	x0, x1, #0x1
  41a5e0:	str	x0, [sp, #248]
  41a5e4:	strb	w24, [x1]
  41a5e8:	ldp	x0, x1, [x26, #8]
  41a5ec:	cmp	x0, x1
  41a5f0:	b.cc	41a5ac <wcrtomb@plt+0x1598c>  // b.lo, b.ul, b.last
  41a5f4:	nop
  41a5f8:	mov	x0, x26
  41a5fc:	bl	404b90 <__uflow@plt>
  41a600:	mov	w24, w0
  41a604:	add	w0, w0, #0x1
  41a608:	cmp	w0, #0x1
  41a60c:	add	x25, x25, #0x1
  41a610:	ldp	x1, x0, [sp, #248]
  41a614:	b.hi	41a5c4 <wcrtomb@plt+0x159a4>  // b.pmore
  41a618:	cmp	x25, #0x1
  41a61c:	cset	w3, hi  // hi = pmore
  41a620:	cmp	w24, #0x0
  41a624:	csel	w24, w3, wzr, eq  // eq = none
  41a628:	cmp	x0, x1
  41a62c:	b.eq	41aa00 <wcrtomb@plt+0x15de0>  // b.none
  41a630:	add	x0, x1, #0x1
  41a634:	str	x0, [sp, #248]
  41a638:	strb	wzr, [x1]
  41a63c:	cbz	w24, 41a684 <wcrtomb@plt+0x15a64>
  41a640:	ldr	x26, [x19, #32]
  41a644:	ldp	x0, x1, [x26, #8]
  41a648:	cmp	x0, x1
  41a64c:	b.cc	41a570 <wcrtomb@plt+0x15950>  // b.lo, b.ul, b.last
  41a650:	mov	x0, x26
  41a654:	bl	404b90 <__uflow@plt>
  41a658:	mov	w24, w0
  41a65c:	add	w0, w24, #0x1
  41a660:	cmp	w0, #0x1
  41a664:	ldp	x1, x0, [sp, #248]
  41a668:	b.hi	41a58c <wcrtomb@plt+0x1596c>  // b.pmore
  41a66c:	nop
  41a670:	cmp	x0, x1
  41a674:	b.eq	41a9f8 <wcrtomb@plt+0x15dd8>  // b.none
  41a678:	add	x0, x1, #0x1
  41a67c:	str	x0, [sp, #248]
  41a680:	strb	wzr, [x1]
  41a684:	ldr	x0, [x19, #32]
  41a688:	ldp	x1, x2, [x0, #8]
  41a68c:	cmp	x1, x2
  41a690:	b.cs	41aacc <wcrtomb@plt+0x15eac>  // b.hs, b.nlast
  41a694:	add	x2, x1, #0x1
  41a698:	str	x2, [x0, #8]
  41a69c:	ldrb	w0, [x1]
  41a6a0:	cbnz	w0, 41adb8 <wcrtomb@plt+0x16198>
  41a6a4:	ldp	x6, x1, [sp, #240]
  41a6a8:	cmp	x6, x1
  41a6ac:	b.eq	41aa34 <wcrtomb@plt+0x15e14>  // b.none
  41a6b0:	ldr	x7, [sp, #272]
  41a6b4:	ldr	x0, [sp, #232]
  41a6b8:	add	x1, x1, x7
  41a6bc:	ldr	x2, [sp, #256]
  41a6c0:	bic	x7, x1, x7
  41a6c4:	str	x7, [sp, #248]
  41a6c8:	sub	x1, x7, x0
  41a6cc:	sub	x0, x2, x0
  41a6d0:	cmp	x1, x0
  41a6d4:	b.ls	41a6e0 <wcrtomb@plt+0x15ac0>  // b.plast
  41a6d8:	mov	x7, x2
  41a6dc:	str	x2, [sp, #248]
  41a6e0:	ldp	x3, x4, [sp, #104]
  41a6e4:	mov	x1, x27
  41a6e8:	ldrb	w5, [sp, #96]
  41a6ec:	mov	x2, x28
  41a6f0:	mov	x0, x21
  41a6f4:	str	x6, [sp, #96]
  41a6f8:	str	x7, [sp, #240]
  41a6fc:	bl	418a40 <wcrtomb@plt+0x13e20>
  41a700:	ldr	x6, [sp, #96]
  41a704:	ldr	x0, [sp, #232]
  41a708:	cmp	x6, x0
  41a70c:	b.ls	41aa14 <wcrtomb@plt+0x15df4>  // b.plast
  41a710:	ldr	x0, [sp, #256]
  41a714:	cmp	x6, x0
  41a718:	b.cs	41aa14 <wcrtomb@plt+0x15df4>  // b.hs, b.nlast
  41a71c:	dup	v0.2d, x6
  41a720:	str	q0, [sp, #240]
  41a724:	b	41a3a0 <wcrtomb@plt+0x15780>
  41a728:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a72c:	ldr	x0, [x0, #1136]
  41a730:	cbz	x0, 41a738 <wcrtomb@plt+0x15b18>
  41a734:	blr	x0
  41a738:	mov	w2, #0x5                   	// #5
  41a73c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41a740:	mov	x0, #0x0                   	// #0
  41a744:	add	x1, x1, #0x8f8
  41a748:	bl	4049c0 <dcgettext@plt>
  41a74c:	mov	x2, x0
  41a750:	ldr	x3, [sp, #104]
  41a754:	mov	w1, #0x0                   	// #0
  41a758:	mov	w0, #0x1                   	// #1
  41a75c:	bl	404050 <error@plt>
  41a760:	ldp	x21, x22, [sp, #32]
  41a764:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41a768:	ldp	x23, x24, [sp, #48]
  41a76c:	mov	w1, #0x2                   	// #2
  41a770:	str	w1, [x0, #3568]
  41a774:	nop
  41a778:	ldr	x0, [x19, #32]
  41a77c:	ldr	w0, [x0]
  41a780:	tbnz	w0, #5, 41a7ac <wcrtomb@plt+0x15b8c>
  41a784:	ldr	x0, [sp, #168]
  41a788:	bl	4047b0 <free@plt>
  41a78c:	ldp	x19, x20, [sp, #16]
  41a790:	ldp	x29, x30, [sp], #320
  41a794:	ret
  41a798:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a79c:	ldr	x0, [x0, #960]
  41a7a0:	bl	433b00 <wcrtomb@plt+0x2eee0>
  41a7a4:	ldp	x29, x30, [sp], #320
  41a7a8:	ret
  41a7ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a7b0:	ldr	x0, [x0, #960]
  41a7b4:	bl	433c18 <wcrtomb@plt+0x2eff8>
  41a7b8:	b	41a784 <wcrtomb@plt+0x15b64>
  41a7bc:	stp	xzr, xzr, [sp, #192]
  41a7c0:	ldr	x21, [sp, #168]
  41a7c4:	b.ne	41ac20 <wcrtomb@plt+0x16000>  // b.any
  41a7c8:	ldr	x3, [x19, #32]
  41a7cc:	add	x22, sp, #0xc8
  41a7d0:	add	x23, sp, #0xc0
  41a7d4:	mov	x1, x22
  41a7d8:	mov	x0, x23
  41a7dc:	mov	w2, #0xa                   	// #10
  41a7e0:	bl	404b40 <__getdelim@plt>
  41a7e4:	cmp	x0, #0x0
  41a7e8:	b.le	41ac2c <wcrtomb@plt+0x1600c>
  41a7ec:	ldr	x0, [sp, #192]
  41a7f0:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  41a7f4:	add	x21, x21, #0xa8
  41a7f8:	add	x20, sp, #0xe0
  41a7fc:	mov	x1, x20
  41a800:	mov	w2, #0x0                   	// #0
  41a804:	stp	x25, x26, [sp, #64]
  41a808:	stp	x27, x28, [sp, #80]
  41a80c:	bl	41f550 <wcrtomb@plt+0x1a930>
  41a810:	stp	x0, x1, [x21]
  41a814:	ldr	x0, [x21, #8]
  41a818:	tbnz	x0, #63, 41ae3c <wcrtomb@plt+0x1621c>
  41a81c:	ldr	x0, [sp, #224]
  41a820:	mov	x27, #0x2                   	// #2
  41a824:	ldrb	w1, [x0]
  41a828:	cbz	w1, 41a98c <wcrtomb@plt+0x15d6c>
  41a82c:	add	x24, x0, #0x1
  41a830:	bl	404ad0 <__errno_location@plt>
  41a834:	mov	x25, x0
  41a838:	mov	x1, x20
  41a83c:	mov	x0, x24
  41a840:	mov	w3, #0x0                   	// #0
  41a844:	mov	w2, #0xa                   	// #10
  41a848:	str	wzr, [x25]
  41a84c:	bl	4044b0 <__strtoul_internal@plt>
  41a850:	ldr	w26, [x25]
  41a854:	mov	x1, #0xc9ff                	// #51711
  41a858:	cmp	w26, #0x0
  41a85c:	movk	x1, #0x3b9a, lsl #16
  41a860:	ccmp	x0, x1, #0x0, eq  // eq = none
  41a864:	b.hi	41ab9c <wcrtomb@plt+0x15f7c>  // b.pmore
  41a868:	cbnz	w26, 41aba8 <wcrtomb@plt+0x15f88>
  41a86c:	ldr	x1, [sp, #224]
  41a870:	cmp	x24, x1
  41a874:	b.eq	41aba8 <wcrtomb@plt+0x15f88>  // b.none
  41a878:	str	x0, [x21, #8]
  41a87c:	b	41a98c <wcrtomb@plt+0x15d6c>
  41a880:	mov	x0, x26
  41a884:	mov	x1, x20
  41a888:	mov	w2, #0x0                   	// #0
  41a88c:	bl	41f550 <wcrtomb@plt+0x1a930>
  41a890:	mov	x25, x0
  41a894:	ldr	x4, [sp, #224]
  41a898:	tbnz	x1, #63, 41ad84 <wcrtomb@plt+0x16164>
  41a89c:	ldrb	w0, [x4]
  41a8a0:	cmp	w0, #0x20
  41a8a4:	b.ne	41ad84 <wcrtomb@plt+0x16164>  // b.any
  41a8a8:	str	wzr, [x21]
  41a8ac:	mov	x1, x20
  41a8b0:	mov	x0, x4
  41a8b4:	mov	w3, #0x0                   	// #0
  41a8b8:	mov	w2, #0xa                   	// #10
  41a8bc:	str	x4, [sp, #96]
  41a8c0:	bl	4044b0 <__strtoul_internal@plt>
  41a8c4:	mov	x24, x0
  41a8c8:	ldr	w1, [x21]
  41a8cc:	mov	x0, #0xc9ff                	// #51711
  41a8d0:	movk	x0, #0x3b9a, lsl #16
  41a8d4:	cmp	w1, #0x0
  41a8d8:	ccmp	x24, x0, #0x0, eq  // eq = none
  41a8dc:	ldr	x4, [sp, #96]
  41a8e0:	b.hi	41aa58 <wcrtomb@plt+0x15e38>  // b.pmore
  41a8e4:	cbnz	w1, 41aa60 <wcrtomb@plt+0x15e40>
  41a8e8:	ldr	x26, [sp, #224]
  41a8ec:	cmp	x4, x26
  41a8f0:	b.eq	41aa60 <wcrtomb@plt+0x15e40>  // b.none
  41a8f4:	ldrb	w0, [x26]
  41a8f8:	cmp	w0, #0x20
  41a8fc:	b.ne	41aa60 <wcrtomb@plt+0x15e40>  // b.any
  41a900:	mov	x0, x26
  41a904:	mov	x1, x20
  41a908:	mov	x3, #0xffffffffffffffff    	// #-1
  41a90c:	mov	x2, #0x0                   	// #0
  41a910:	bl	41efb8 <wcrtomb@plt+0x1a398>
  41a914:	mov	x26, x0
  41a918:	ldr	w6, [x21]
  41a91c:	ldr	x0, [sp, #224]
  41a920:	cbnz	w6, 41aca0 <wcrtomb@plt+0x16080>
  41a924:	ldrb	w1, [x0]
  41a928:	cmp	w1, #0x20
  41a92c:	b.ne	41aca0 <wcrtomb@plt+0x16080>  // b.any
  41a930:	mov	x1, x20
  41a934:	mov	x3, #0xffffffffffffffff    	// #-1
  41a938:	mov	x2, #0x0                   	// #0
  41a93c:	bl	41efb8 <wcrtomb@plt+0x1a398>
  41a940:	ldr	w6, [x21]
  41a944:	mov	x4, x0
  41a948:	ldr	x1, [sp, #224]
  41a94c:	cbnz	w6, 41ac4c <wcrtomb@plt+0x1602c>
  41a950:	ldrb	w0, [x1]
  41a954:	cmp	w0, #0x20
  41a958:	b.ne	41ac4c <wcrtomb@plt+0x1602c>  // b.any
  41a95c:	add	x21, x1, #0x1
  41a960:	str	x4, [sp, #96]
  41a964:	mov	x0, x21
  41a968:	bl	41e978 <wcrtomb@plt+0x19d58>
  41a96c:	ldr	x4, [sp, #96]
  41a970:	mov	x0, x21
  41a974:	mov	w5, w28
  41a978:	mov	x3, x26
  41a97c:	mov	x1, x25
  41a980:	mov	x2, x24
  41a984:	mov	x6, #0x0                   	// #0
  41a988:	bl	418a40 <wcrtomb@plt+0x13e20>
  41a98c:	ldr	x3, [x19, #32]
  41a990:	mov	x1, x22
  41a994:	mov	x0, x23
  41a998:	mov	w2, #0xa                   	// #10
  41a99c:	bl	404b40 <__getdelim@plt>
  41a9a0:	cmp	w0, #0x0
  41a9a4:	b.le	41aad4 <wcrtomb@plt+0x15eb4>
  41a9a8:	ldr	x1, [sp, #192]
  41a9ac:	sxtw	x0, w0
  41a9b0:	sub	x0, x0, #0x1
  41a9b4:	add	x27, x27, #0x1
  41a9b8:	ldrb	w3, [x1]
  41a9bc:	ldrb	w2, [x1, x0]
  41a9c0:	cmp	w3, #0x2b
  41a9c4:	cset	w28, eq  // eq = none
  41a9c8:	cinc	x26, x1, eq  // eq = none
  41a9cc:	cmp	w2, #0xa
  41a9d0:	b.ne	41a9d8 <wcrtomb@plt+0x15db8>  // b.any
  41a9d4:	strb	wzr, [x1, x0]
  41a9d8:	bl	404ad0 <__errno_location@plt>
  41a9dc:	mov	x21, x0
  41a9e0:	ldr	x0, [sp, #104]
  41a9e4:	mov	x25, #0x0                   	// #0
  41a9e8:	mov	x24, #0x0                   	// #0
  41a9ec:	cmp	x0, #0x1
  41a9f0:	b.ne	41a900 <wcrtomb@plt+0x15ce0>  // b.any
  41a9f4:	b	41a880 <wcrtomb@plt+0x15c60>
  41a9f8:	mov	w24, #0x0                   	// #0
  41a9fc:	nop
  41aa00:	mov	x1, #0x1                   	// #1
  41aa04:	mov	x0, x20
  41aa08:	bl	4511d8 <_obstack_newchunk@@Base>
  41aa0c:	ldr	x1, [sp, #248]
  41aa10:	b	41a630 <wcrtomb@plt+0x15a10>
  41aa14:	mov	x1, x6
  41aa18:	mov	x0, x20
  41aa1c:	bl	451360 <_obstack_free@@Base>
  41aa20:	b	41a3a0 <wcrtomb@plt+0x15780>
  41aa24:	ldrb	w0, [sp, #304]
  41aa28:	orr	w0, w0, #0x2
  41aa2c:	strb	w0, [sp, #304]
  41aa30:	b	41a528 <wcrtomb@plt+0x15908>
  41aa34:	ldrb	w0, [sp, #304]
  41aa38:	orr	w0, w0, #0x2
  41aa3c:	strb	w0, [sp, #304]
  41aa40:	b	41a6b0 <wcrtomb@plt+0x15a90>
  41aa44:	mov	x0, x20
  41aa48:	mov	x1, #0x1                   	// #1
  41aa4c:	bl	4511d8 <_obstack_newchunk@@Base>
  41aa50:	ldr	x0, [sp, #248]
  41aa54:	b	41a50c <wcrtomb@plt+0x158ec>
  41aa58:	mov	w0, #0x22                  	// #34
  41aa5c:	str	w0, [x21]
  41aa60:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41aa64:	ldr	x0, [x0, #1136]
  41aa68:	cbz	x0, 41aa70 <wcrtomb@plt+0x15e50>
  41aa6c:	blr	x0
  41aa70:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41aa74:	ldr	w20, [x21]
  41aa78:	ldr	x0, [x0, #960]
  41aa7c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41aa80:	mov	x19, x0
  41aa84:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41aa88:	add	x1, x1, #0x850
  41aa8c:	mov	w2, #0x5                   	// #5
  41aa90:	mov	x0, #0x0                   	// #0
  41aa94:	bl	4049c0 <dcgettext@plt>
  41aa98:	mov	x3, x19
  41aa9c:	mov	w1, w20
  41aaa0:	mov	x5, x0
  41aaa4:	mov	x4, x27
  41aaa8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41aaac:	add	x2, x2, #0x820
  41aab0:	mov	w0, #0x0                   	// #0
  41aab4:	bl	404050 <error@plt>
  41aab8:	bl	410460 <wcrtomb@plt+0xb840>
  41aabc:	mov	x0, x24
  41aac0:	bl	404b90 <__uflow@plt>
  41aac4:	mov	w21, w0
  41aac8:	b	41a47c <wcrtomb@plt+0x1585c>
  41aacc:	bl	404b90 <__uflow@plt>
  41aad0:	b	41a6a0 <wcrtomb@plt+0x15a80>
  41aad4:	ldr	x0, [sp, #192]
  41aad8:	bl	4047b0 <free@plt>
  41aadc:	ldr	x0, [x19, #32]
  41aae0:	ldp	x21, x22, [sp, #32]
  41aae4:	ldr	w0, [x0]
  41aae8:	ldp	x23, x24, [sp, #48]
  41aaec:	ldp	x25, x26, [sp, #64]
  41aaf0:	ldp	x27, x28, [sp, #80]
  41aaf4:	tbz	w0, #5, 41a784 <wcrtomb@plt+0x15b64>
  41aaf8:	b	41a7ac <wcrtomb@plt+0x15b8c>
  41aafc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ab00:	ldr	x0, [x0, #960]
  41ab04:	bl	433b00 <wcrtomb@plt+0x2eee0>
  41ab08:	mov	w0, w20
  41ab0c:	bl	4045c0 <close@plt>
  41ab10:	ldp	x19, x20, [sp, #16]
  41ab14:	ldp	x29, x30, [sp], #320
  41ab18:	ret
  41ab1c:	stp	x25, x26, [sp, #64]
  41ab20:	stp	x27, x28, [sp, #80]
  41ab24:	stp	xzr, xzr, [sp, #192]
  41ab28:	mov	x0, x21
  41ab2c:	bl	404580 <strdup@plt>
  41ab30:	mov	x21, x0
  41ab34:	str	x0, [sp, #192]
  41ab38:	bl	403ff0 <strlen@plt>
  41ab3c:	add	x3, x0, #0x1
  41ab40:	add	x20, sp, #0xe0
  41ab44:	mov	w2, #0x0                   	// #0
  41ab48:	mov	x0, x21
  41ab4c:	mov	x1, x20
  41ab50:	str	x3, [sp, #200]
  41ab54:	bl	41f550 <wcrtomb@plt+0x1a930>
  41ab58:	mov	x3, x1
  41ab5c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ab60:	add	x1, x1, #0xa8
  41ab64:	mov	x2, x0
  41ab68:	stp	x2, x3, [x1]
  41ab6c:	ldr	x0, [x1, #8]
  41ab70:	tbnz	x0, #63, 41acd8 <wcrtomb@plt+0x160b8>
  41ab74:	add	x22, sp, #0xc8
  41ab78:	add	x23, sp, #0xc0
  41ab7c:	mov	x27, #0x1                   	// #1
  41ab80:	str	xzr, [sp, #104]
  41ab84:	b	41a98c <wcrtomb@plt+0x15d6c>
  41ab88:	ldp	x21, x22, [sp, #32]
  41ab8c:	ldp	x23, x24, [sp, #48]
  41ab90:	ldp	x25, x26, [sp, #64]
  41ab94:	ldp	x27, x28, [sp, #80]
  41ab98:	b	41a778 <wcrtomb@plt+0x15b58>
  41ab9c:	mov	w0, #0x22                  	// #34
  41aba0:	mov	w26, w0
  41aba4:	str	w0, [x25]
  41aba8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41abac:	ldr	x0, [x0, #1136]
  41abb0:	cbz	x0, 41abbc <wcrtomb@plt+0x15f9c>
  41abb4:	blr	x0
  41abb8:	ldr	w26, [x25]
  41abbc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41abc0:	mov	x27, #0x2                   	// #2
  41abc4:	ldr	x0, [x0, #960]
  41abc8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41abcc:	mov	x24, x0
  41abd0:	mov	w2, #0x5                   	// #5
  41abd4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41abd8:	mov	x0, #0x0                   	// #0
  41abdc:	add	x1, x1, #0x808
  41abe0:	bl	4049c0 <dcgettext@plt>
  41abe4:	mov	x5, x0
  41abe8:	mov	w1, w26
  41abec:	mov	w0, #0x0                   	// #0
  41abf0:	mov	x3, x24
  41abf4:	mov	x4, x27
  41abf8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41abfc:	add	x2, x2, #0x820
  41ac00:	bl	404050 <error@plt>
  41ac04:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ac08:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41ac0c:	ldr	q0, [x1, #2944]
  41ac10:	mov	w1, #0x2                   	// #2
  41ac14:	str	w1, [x0, #3568]
  41ac18:	str	q0, [x21]
  41ac1c:	b	41a98c <wcrtomb@plt+0x15d6c>
  41ac20:	stp	x25, x26, [sp, #64]
  41ac24:	stp	x27, x28, [sp, #80]
  41ac28:	b	41ab28 <wcrtomb@plt+0x15f08>
  41ac2c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ac30:	ldr	x0, [x0, #960]
  41ac34:	bl	433c18 <wcrtomb@plt+0x2eff8>
  41ac38:	ldr	x0, [sp, #192]
  41ac3c:	bl	4047b0 <free@plt>
  41ac40:	ldp	x21, x22, [sp, #32]
  41ac44:	ldp	x23, x24, [sp, #48]
  41ac48:	b	41a778 <wcrtomb@plt+0x15b58>
  41ac4c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ac50:	ldr	x0, [x0, #1136]
  41ac54:	cbz	x0, 41ac60 <wcrtomb@plt+0x16040>
  41ac58:	blr	x0
  41ac5c:	ldr	w6, [x21]
  41ac60:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ac64:	str	w6, [sp, #96]
  41ac68:	ldr	x0, [x0, #960]
  41ac6c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41ac70:	mov	x19, x0
  41ac74:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ac78:	add	x1, x1, #0x890
  41ac7c:	mov	w2, #0x5                   	// #5
  41ac80:	mov	x0, #0x0                   	// #0
  41ac84:	bl	4049c0 <dcgettext@plt>
  41ac88:	ldr	w6, [sp, #96]
  41ac8c:	mov	x3, x19
  41ac90:	mov	x5, x0
  41ac94:	mov	x4, x27
  41ac98:	mov	w1, w6
  41ac9c:	b	41aaa8 <wcrtomb@plt+0x15e88>
  41aca0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41aca4:	ldr	x0, [x0, #1136]
  41aca8:	cbz	x0, 41acb4 <wcrtomb@plt+0x16094>
  41acac:	blr	x0
  41acb0:	ldr	w6, [x21]
  41acb4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41acb8:	str	w6, [sp, #96]
  41acbc:	ldr	x0, [x0, #960]
  41acc0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41acc4:	mov	x19, x0
  41acc8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41accc:	mov	w2, #0x5                   	// #5
  41acd0:	add	x1, x1, #0x878
  41acd4:	b	41ac80 <wcrtomb@plt+0x16060>
  41acd8:	mov	x19, #0x1                   	// #1
  41acdc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ace0:	ldr	x0, [x0, #1136]
  41ace4:	cbz	x0, 41acec <wcrtomb@plt+0x160cc>
  41ace8:	blr	x0
  41acec:	bl	404ad0 <__errno_location@plt>
  41acf0:	mov	x1, x0
  41acf4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41acf8:	ldr	x0, [x0, #960]
  41acfc:	ldr	w21, [x1]
  41ad00:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41ad04:	mov	x20, x0
  41ad08:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ad0c:	mov	w2, #0x5                   	// #5
  41ad10:	add	x1, x1, #0x808
  41ad14:	mov	x0, #0x0                   	// #0
  41ad18:	bl	4049c0 <dcgettext@plt>
  41ad1c:	mov	x5, x0
  41ad20:	mov	x3, x20
  41ad24:	mov	w1, w21
  41ad28:	mov	x4, x19
  41ad2c:	b	41aaa8 <wcrtomb@plt+0x15e88>
  41ad30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ad34:	ldr	x0, [x0, #1136]
  41ad38:	cbz	x0, 41ad40 <wcrtomb@plt+0x16120>
  41ad3c:	blr	x0
  41ad40:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ad44:	ldr	x0, [x0, #960]
  41ad48:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41ad4c:	mov	x19, x0
  41ad50:	mov	w2, #0x5                   	// #5
  41ad54:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ad58:	mov	x0, #0x0                   	// #0
  41ad5c:	add	x1, x1, #0x5f8
  41ad60:	bl	4049c0 <dcgettext@plt>
  41ad64:	mov	x4, x0
  41ad68:	mov	x3, x19
  41ad6c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ad70:	add	x2, x2, #0x618
  41ad74:	mov	w1, #0x0                   	// #0
  41ad78:	mov	w0, #0x0                   	// #0
  41ad7c:	bl	404050 <error@plt>
  41ad80:	bl	410460 <wcrtomb@plt+0xb840>
  41ad84:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ad88:	ldr	x0, [x0, #1136]
  41ad8c:	cbz	x0, 41ad94 <wcrtomb@plt+0x16174>
  41ad90:	blr	x0
  41ad94:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ad98:	ldr	w20, [x21]
  41ad9c:	ldr	x0, [x0, #960]
  41ada0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41ada4:	mov	x19, x0
  41ada8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41adac:	mov	w2, #0x5                   	// #5
  41adb0:	add	x1, x1, #0x830
  41adb4:	b	41aa90 <wcrtomb@plt+0x15e70>
  41adb8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41adbc:	ldr	x0, [x0, #1136]
  41adc0:	cbz	x0, 41adc8 <wcrtomb@plt+0x161a8>
  41adc4:	blr	x0
  41adc8:	mov	w2, #0x5                   	// #5
  41adcc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41add0:	mov	x0, #0x0                   	// #0
  41add4:	add	x1, x1, #0x8c8
  41add8:	bl	4049c0 <dcgettext@plt>
  41addc:	mov	x20, x0
  41ade0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ade4:	ldr	x0, [x0, #960]
  41ade8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41adec:	mov	x1, x0
  41adf0:	ldr	x0, [x19, #32]
  41adf4:	mov	x19, x1
  41adf8:	bl	404900 <ftello@plt>
  41adfc:	mov	x1, x22
  41ae00:	bl	4467e8 <argp_parse@@Base+0x6a08>
  41ae04:	mov	w2, #0x5                   	// #5
  41ae08:	mov	x21, x0
  41ae0c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ae10:	mov	x0, #0x0                   	// #0
  41ae14:	add	x1, x1, #0x8d8
  41ae18:	bl	4049c0 <dcgettext@plt>
  41ae1c:	mov	x4, x21
  41ae20:	mov	x5, x0
  41ae24:	mov	x3, x19
  41ae28:	mov	x2, x20
  41ae2c:	mov	w1, #0x0                   	// #0
  41ae30:	mov	w0, #0x0                   	// #0
  41ae34:	bl	404050 <error@plt>
  41ae38:	bl	410460 <wcrtomb@plt+0xb840>
  41ae3c:	mov	x19, #0x2                   	// #2
  41ae40:	b	41acdc <wcrtomb@plt+0x160bc>
  41ae44:	nop
  41ae48:	stp	x29, x30, [sp, #-80]!
  41ae4c:	mov	x29, sp
  41ae50:	stp	x19, x20, [sp, #16]
  41ae54:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41ae58:	add	x20, x20, #0x8e0
  41ae5c:	ldr	x19, [x20, #32]
  41ae60:	cbz	x19, 41af38 <wcrtomb@plt+0x16318>
  41ae64:	mov	x0, x19
  41ae68:	mov	w2, #0x0                   	// #0
  41ae6c:	mov	x1, #0x0                   	// #0
  41ae70:	stp	x21, x22, [sp, #32]
  41ae74:	bl	404780 <fseeko@plt>
  41ae78:	cbnz	w0, 41af9c <wcrtomb@plt+0x1637c>
  41ae7c:	mov	x0, x19
  41ae80:	bl	404230 <fileno@plt>
  41ae84:	bl	42a840 <wcrtomb@plt+0x25c20>
  41ae88:	cbnz	w0, 41af8c <wcrtomb@plt+0x1636c>
  41ae8c:	mov	w5, #0x2                   	// #2
  41ae90:	mov	w1, #0x1                   	// #1
  41ae94:	mov	x0, x19
  41ae98:	adrp	x4, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ae9c:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41aea0:	add	x4, x4, #0x928
  41aea4:	add	x3, x3, #0x7e0
  41aea8:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41aeac:	add	x2, x2, #0x930
  41aeb0:	bl	404700 <__fprintf_chk@plt>
  41aeb4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41aeb8:	add	x22, x0, #0x348
  41aebc:	add	x1, sp, #0x38
  41aec0:	ldr	x0, [x0, #840]
  41aec4:	bl	446768 <argp_parse@@Base+0x6988>
  41aec8:	mov	x21, x0
  41aecc:	bl	403ff0 <strlen@plt>
  41aed0:	mov	x1, x0
  41aed4:	mov	x3, x19
  41aed8:	mov	x2, #0x1                   	// #1
  41aedc:	mov	x0, x21
  41aee0:	add	x1, x1, #0x1
  41aee4:	bl	403fd0 <fwrite_unlocked@plt>
  41aee8:	ldr	x0, [x22, #8]
  41aeec:	add	x1, sp, #0x38
  41aef0:	bl	446868 <argp_parse@@Base+0x6a88>
  41aef4:	mov	x21, x0
  41aef8:	bl	403ff0 <strlen@plt>
  41aefc:	mov	x1, x0
  41af00:	mov	x3, x19
  41af04:	mov	x0, x21
  41af08:	add	x1, x1, #0x1
  41af0c:	mov	x2, #0x1                   	// #1
  41af10:	bl	403fd0 <fwrite_unlocked@plt>
  41af14:	ldr	w0, [x19]
  41af18:	tbz	w0, #5, 41af44 <wcrtomb@plt+0x16324>
  41af1c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41af20:	ldr	x0, [x0, #960]
  41af24:	bl	434798 <wcrtomb@plt+0x2fb78>
  41af28:	mov	x0, x19
  41af2c:	bl	4042a0 <fclose@plt>
  41af30:	cbnz	w0, 41af70 <wcrtomb@plt+0x16350>
  41af34:	ldp	x21, x22, [sp, #32]
  41af38:	ldp	x19, x20, [sp, #16]
  41af3c:	ldp	x29, x30, [sp], #80
  41af40:	ret
  41af44:	ldr	x0, [x20, #16]
  41af48:	cbz	x0, 41af28 <wcrtomb@plt+0x16308>
  41af4c:	mov	x2, x19
  41af50:	adrp	x1, 418000 <wcrtomb@plt+0x133e0>
  41af54:	add	x1, x1, #0x7c8
  41af58:	bl	444b48 <argp_parse@@Base+0x4d68>
  41af5c:	ldr	w0, [x19]
  41af60:	tbnz	w0, #5, 41af1c <wcrtomb@plt+0x162fc>
  41af64:	mov	x0, x19
  41af68:	bl	4042a0 <fclose@plt>
  41af6c:	cbz	w0, 41af34 <wcrtomb@plt+0x16314>
  41af70:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41af74:	ldr	x0, [x0, #960]
  41af78:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  41af7c:	ldp	x19, x20, [sp, #16]
  41af80:	ldp	x21, x22, [sp, #32]
  41af84:	ldp	x29, x30, [sp], #80
  41af88:	ret
  41af8c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41af90:	ldr	x0, [x0, #960]
  41af94:	bl	434500 <wcrtomb@plt+0x2f8e0>
  41af98:	b	41ae8c <wcrtomb@plt+0x1626c>
  41af9c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41afa0:	ldr	x0, [x0, #960]
  41afa4:	bl	434130 <wcrtomb@plt+0x2f510>
  41afa8:	mov	x0, x19
  41afac:	bl	404230 <fileno@plt>
  41afb0:	bl	42a840 <wcrtomb@plt+0x25c20>
  41afb4:	cbz	w0, 41ae8c <wcrtomb@plt+0x1626c>
  41afb8:	b	41af8c <wcrtomb@plt+0x1636c>
  41afbc:	nop
  41afc0:	ldrb	w1, [x0, #376]
  41afc4:	cbz	w1, 41aff0 <wcrtomb@plt+0x163d0>
  41afc8:	stp	x29, x30, [sp, #-32]!
  41afcc:	mov	x29, sp
  41afd0:	ldr	x2, [x0, #384]
  41afd4:	str	x19, [sp, #16]
  41afd8:	mov	x19, x0
  41afdc:	cbz	x2, 41aff8 <wcrtomb@plt+0x163d8>
  41afe0:	mov	w0, w1
  41afe4:	ldr	x19, [sp, #16]
  41afe8:	ldp	x29, x30, [sp], #32
  41afec:	ret
  41aff0:	mov	w0, w1
  41aff4:	ret
  41aff8:	bl	4180c0 <wcrtomb@plt+0x134a0>
  41affc:	ldrb	w1, [x19, #376]
  41b000:	b	41afe0 <wcrtomb@plt+0x163c0>
  41b004:	nop
  41b008:	stp	x29, x30, [sp, #-240]!
  41b00c:	mov	x29, sp
  41b010:	stp	x21, x22, [sp, #32]
  41b014:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b018:	add	x22, x22, #0xe0
  41b01c:	stp	x23, x24, [sp, #48]
  41b020:	mov	x23, x0
  41b024:	ldrb	w0, [x22, #376]
  41b028:	cbnz	w0, 41b040 <wcrtomb@plt+0x16420>
  41b02c:	bl	41e038 <wcrtomb@plt+0x19418>
  41b030:	ldp	x21, x22, [sp, #32]
  41b034:	ldp	x23, x24, [sp, #48]
  41b038:	ldp	x29, x30, [sp], #240
  41b03c:	ret
  41b040:	ldr	x0, [x22, #384]
  41b044:	cbz	x0, 41b338 <wcrtomb@plt+0x16718>
  41b048:	mov	x0, x23
  41b04c:	mov	w1, #0x0                   	// #0
  41b050:	bl	420690 <wcrtomb@plt+0x1ba70>
  41b054:	mov	x24, x0
  41b058:	cbz	x0, 41b02c <wcrtomb@plt+0x1640c>
  41b05c:	stp	x19, x20, [sp, #16]
  41b060:	ldr	x19, [x22, #384]
  41b064:	stp	x25, x26, [sp, #64]
  41b068:	stp	x27, x28, [sp, #80]
  41b06c:	ldrb	w28, [x19]
  41b070:	cbz	w28, 41b63c <wcrtomb@plt+0x16a1c>
  41b074:	mov	x25, x19
  41b078:	mov	w21, w28
  41b07c:	mov	w26, #0x0                   	// #0
  41b080:	mov	w20, #0x0                   	// #0
  41b084:	nop
  41b088:	cbz	w20, 41b304 <wcrtomb@plt+0x166e4>
  41b08c:	cmp	w20, w21
  41b090:	b.ne	41b51c <wcrtomb@plt+0x168fc>  // b.any
  41b094:	cmp	w20, #0x54
  41b098:	b.ne	41b2e4 <wcrtomb@plt+0x166c4>  // b.any
  41b09c:	ldrb	w0, [x25, #1]
  41b0a0:	cbnz	w0, 41b0a8 <wcrtomb@plt+0x16488>
  41b0a4:	cbz	w26, 41b644 <wcrtomb@plt+0x16a24>
  41b0a8:	mov	w20, #0x0                   	// #0
  41b0ac:	nop
  41b0b0:	mov	x0, x25
  41b0b4:	bl	403ff0 <strlen@plt>
  41b0b8:	add	x0, x0, #0x1
  41b0bc:	add	x25, x25, x0
  41b0c0:	ldrb	w21, [x25]
  41b0c4:	cbnz	w21, 41b088 <wcrtomb@plt+0x16468>
  41b0c8:	cbnz	w20, 41b5c0 <wcrtomb@plt+0x169a0>
  41b0cc:	cbz	w26, 41b0e0 <wcrtomb@plt+0x164c0>
  41b0d0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b0d4:	ldr	w0, [x0, #432]
  41b0d8:	tbnz	w0, #1, 41b5fc <wcrtomb@plt+0x169dc>
  41b0dc:	nop
  41b0e0:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b0e4:	adrp	x25, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b0e8:	add	x26, x26, #0x438
  41b0ec:	add	x25, x25, #0xa78
  41b0f0:	mov	x21, #0x0                   	// #0
  41b0f4:	mov	w27, #0x2f                  	// #47
  41b0f8:	b	41b108 <wcrtomb@plt+0x164e8>
  41b0fc:	mov	x19, x20
  41b100:	ldrb	w28, [x19]
  41b104:	cbz	w28, 41b180 <wcrtomb@plt+0x16560>
  41b108:	cmp	w28, #0x58
  41b10c:	b.eq	41b34c <wcrtomb@plt+0x1672c>  // b.none
  41b110:	mov	x0, x19
  41b114:	bl	403ff0 <strlen@plt>
  41b118:	add	x20, x0, #0x1
  41b11c:	cmp	w28, #0x52
  41b120:	add	x20, x19, x20
  41b124:	b.ne	41b0fc <wcrtomb@plt+0x164dc>  // b.any
  41b128:	ldrb	w0, [x19, #1]
  41b12c:	add	x28, x20, #0x1
  41b130:	add	x19, x19, #0x1
  41b134:	cbnz	w0, 41b3d4 <wcrtomb@plt+0x167b4>
  41b138:	ldrb	w0, [x20, #1]
  41b13c:	cbnz	w0, 41b3bc <wcrtomb@plt+0x1679c>
  41b140:	ldrb	w0, [x19]
  41b144:	cbz	w0, 41b3b4 <wcrtomb@plt+0x16794>
  41b148:	ldrb	w0, [x28]
  41b14c:	cmp	w0, #0x0
  41b150:	csel	x28, x28, x21, ne  // ne = any
  41b154:	mov	x1, x28
  41b158:	mov	x0, x19
  41b15c:	bl	413900 <wcrtomb@plt+0xece0>
  41b160:	tst	w0, #0xff
  41b164:	b.eq	41b67c <wcrtomb@plt+0x16a5c>  // b.none
  41b168:	mov	x0, x20
  41b16c:	bl	403ff0 <strlen@plt>
  41b170:	add	x19, x0, #0x1
  41b174:	add	x19, x20, x19
  41b178:	ldrb	w28, [x19]
  41b17c:	cbnz	w28, 41b108 <wcrtomb@plt+0x164e8>
  41b180:	mov	x0, x21
  41b184:	bl	4047b0 <free@plt>
  41b188:	ldr	x0, [x22, #384]
  41b18c:	bl	418650 <wcrtomb@plt+0x13a30>
  41b190:	mov	x22, x0
  41b194:	ldrb	w1, [x24]
  41b198:	cbz	w1, 41b760 <wcrtomb@plt+0x16b40>
  41b19c:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b1a0:	add	x0, x26, #0xd5
  41b1a4:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b1a8:	mov	x19, x24
  41b1ac:	mov	x21, #0x0                   	// #0
  41b1b0:	str	x0, [sp, #96]
  41b1b4:	add	x0, x27, #0x2d0
  41b1b8:	str	x0, [sp, #104]
  41b1bc:	b	41b234 <wcrtomb@plt+0x16614>
  41b1c0:	bl	404ad0 <__errno_location@plt>
  41b1c4:	ldr	w0, [x0]
  41b1c8:	cmp	w0, #0x2
  41b1cc:	b.eq	41b21c <wcrtomb@plt+0x165fc>  // b.none
  41b1d0:	mov	x0, x21
  41b1d4:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  41b1d8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b1dc:	ldr	x0, [x0, #1136]
  41b1e0:	cbz	x0, 41b1e8 <wcrtomb@plt+0x165c8>
  41b1e4:	blr	x0
  41b1e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b1ec:	add	x1, x1, #0xac0
  41b1f0:	mov	w2, #0x5                   	// #5
  41b1f4:	mov	x0, #0x0                   	// #0
  41b1f8:	bl	4049c0 <dcgettext@plt>
  41b1fc:	mov	x20, x0
  41b200:	mov	x0, x21
  41b204:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41b208:	mov	x2, x20
  41b20c:	mov	x3, x0
  41b210:	mov	w1, #0x0                   	// #0
  41b214:	mov	w0, #0x0                   	// #0
  41b218:	bl	404050 <error@plt>
  41b21c:	mov	x0, x19
  41b220:	bl	403ff0 <strlen@plt>
  41b224:	add	x0, x0, #0x1
  41b228:	add	x19, x19, x0
  41b22c:	ldrb	w0, [x19]
  41b230:	cbz	w0, 41b4b4 <wcrtomb@plt+0x16894>
  41b234:	mov	x0, x21
  41b238:	bl	4047b0 <free@plt>
  41b23c:	mov	x1, x19
  41b240:	mov	x0, x23
  41b244:	bl	427450 <wcrtomb@plt+0x22830>
  41b248:	mov	x21, x0
  41b24c:	add	x1, sp, #0x70
  41b250:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  41b254:	cbnz	w0, 41b1c0 <wcrtomb@plt+0x165a0>
  41b258:	cbz	x22, 41b2a8 <wcrtomb@plt+0x16688>
  41b25c:	ldp	x27, x25, [x22, #16]
  41b260:	mov	x26, #0x0                   	// #0
  41b264:	nop
  41b268:	add	x20, x27, x26
  41b26c:	mov	x0, x19
  41b270:	cmp	x27, x26
  41b274:	b.ls	41b2a8 <wcrtomb@plt+0x16688>  // b.plast
  41b278:	lsr	x20, x20, #1
  41b27c:	ldr	x28, [x25, x20, lsl #3]
  41b280:	mov	x1, x28
  41b284:	bl	404710 <strcmp@plt>
  41b288:	cmp	w0, #0x0
  41b28c:	b.lt	41b3ec <wcrtomb@plt+0x167cc>  // b.tstop
  41b290:	b.eq	41b3f4 <wcrtomb@plt+0x167d4>  // b.none
  41b294:	add	x26, x20, #0x1
  41b298:	mov	x0, x19
  41b29c:	add	x20, x27, x26
  41b2a0:	cmp	x27, x26
  41b2a4:	b.hi	41b278 <wcrtomb@plt+0x16658>  // b.pmore
  41b2a8:	ldr	x0, [sp, #96]
  41b2ac:	ldrb	w0, [x0]
  41b2b0:	cbz	w0, 41b41c <wcrtomb@plt+0x167fc>
  41b2b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b2b8:	ldr	x1, [sp, #112]
  41b2bc:	ldr	x0, [x0, #952]
  41b2c0:	cmp	x1, x0
  41b2c4:	b.eq	41b41c <wcrtomb@plt+0x167fc>  // b.none
  41b2c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b2cc:	ldr	x0, [x0, #1136]
  41b2d0:	cbz	x0, 41b2d8 <wcrtomb@plt+0x166b8>
  41b2d4:	blr	x0
  41b2d8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b2dc:	add	x1, x1, #0xaf0
  41b2e0:	b	41b1f0 <wcrtomb@plt+0x165d0>
  41b2e4:	cmp	w20, #0x52
  41b2e8:	b.ne	41b0b0 <wcrtomb@plt+0x16490>  // b.any
  41b2ec:	ldrb	w0, [x25, #1]
  41b2f0:	cbnz	w0, 41b324 <wcrtomb@plt+0x16704>
  41b2f4:	cbz	w26, 41b740 <wcrtomb@plt+0x16b20>
  41b2f8:	mov	w20, #0x54                  	// #84
  41b2fc:	mov	w26, #0x0                   	// #0
  41b300:	b	41b0b0 <wcrtomb@plt+0x16490>
  41b304:	cmp	w21, #0x54
  41b308:	b.eq	41b69c <wcrtomb@plt+0x16a7c>  // b.none
  41b30c:	cmp	w21, #0x58
  41b310:	b.eq	41b32c <wcrtomb@plt+0x1670c>  // b.none
  41b314:	cmp	w21, #0x52
  41b318:	b.ne	41b0b0 <wcrtomb@plt+0x16490>  // b.any
  41b31c:	ldrb	w0, [x25, #1]
  41b320:	cbz	w0, 41b2f4 <wcrtomb@plt+0x166d4>
  41b324:	mov	w20, #0x54                  	// #84
  41b328:	b	41b0b0 <wcrtomb@plt+0x16490>
  41b32c:	cbnz	w26, 41b6bc <wcrtomb@plt+0x16a9c>
  41b330:	mov	w26, #0x1                   	// #1
  41b334:	b	41b0b0 <wcrtomb@plt+0x16490>
  41b338:	mov	x0, x22
  41b33c:	bl	4180c0 <wcrtomb@plt+0x134a0>
  41b340:	ldrb	w0, [x22, #376]
  41b344:	cbnz	w0, 41b048 <wcrtomb@plt+0x16428>
  41b348:	b	41b02c <wcrtomb@plt+0x1640c>
  41b34c:	add	x28, x19, #0x1
  41b350:	mov	x0, x28
  41b354:	bl	403ff0 <strlen@plt>
  41b358:	mov	x20, x0
  41b35c:	mov	x0, x21
  41b360:	add	x1, x20, #0xc
  41b364:	bl	4501d0 <argp_parse@@Base+0x103f0>
  41b368:	mov	x1, x28
  41b36c:	mov	x21, x0
  41b370:	mov	x2, x20
  41b374:	bl	403f70 <memcpy@plt>
  41b378:	add	x1, x20, #0x1
  41b37c:	ldur	w3, [x25, #7]
  41b380:	add	x2, x21, x1
  41b384:	strb	w27, [x21, x20]
  41b388:	ldr	x4, [x25]
  41b38c:	str	x4, [x21, x1]
  41b390:	stur	w3, [x2, #7]
  41b394:	mov	x0, x21
  41b398:	bl	404640 <mkdtemp@plt>
  41b39c:	cbz	x0, 41b6dc <wcrtomb@plt+0x16abc>
  41b3a0:	mov	x0, x19
  41b3a4:	bl	403ff0 <strlen@plt>
  41b3a8:	add	x0, x0, #0x1
  41b3ac:	add	x19, x19, x0
  41b3b0:	b	41b100 <wcrtomb@plt+0x164e0>
  41b3b4:	mov	x19, x21
  41b3b8:	b	41b154 <wcrtomb@plt+0x16534>
  41b3bc:	ldrb	w2, [x26]
  41b3c0:	mov	x0, x28
  41b3c4:	mov	w1, #0x0                   	// #0
  41b3c8:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  41b3cc:	mov	x28, x0
  41b3d0:	b	41b140 <wcrtomb@plt+0x16520>
  41b3d4:	ldrb	w2, [x26]
  41b3d8:	mov	x0, x19
  41b3dc:	mov	w1, #0x0                   	// #0
  41b3e0:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  41b3e4:	mov	x19, x0
  41b3e8:	b	41b138 <wcrtomb@plt+0x16518>
  41b3ec:	mov	x27, x20
  41b3f0:	b	41b268 <wcrtomb@plt+0x16648>
  41b3f4:	ldurb	w0, [x28, #-1]
  41b3f8:	cmp	w0, #0x44
  41b3fc:	b.eq	41b4f0 <wcrtomb@plt+0x168d0>  // b.none
  41b400:	cmp	w0, #0x59
  41b404:	b.ne	41b21c <wcrtomb@plt+0x165fc>  // b.any
  41b408:	ldr	w0, [sp, #128]
  41b40c:	and	w0, w0, #0xf000
  41b410:	cmp	w0, #0x4, lsl #12
  41b414:	b.ne	41b21c <wcrtomb@plt+0x165fc>  // b.any
  41b418:	b	41b2a8 <wcrtomb@plt+0x16688>
  41b41c:	ldr	x0, [sp, #104]
  41b420:	ldrb	w0, [x0]
  41b424:	cbnz	w0, 41b504 <wcrtomb@plt+0x168e4>
  41b428:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b42c:	ldr	w0, [x0, #772]
  41b430:	cbnz	w0, 41b574 <wcrtomb@plt+0x16954>
  41b434:	mov	x0, x21
  41b438:	mov	w1, #0x1                   	// #1
  41b43c:	bl	420788 <wcrtomb@plt+0x1bb68>
  41b440:	cbnz	w0, 41b21c <wcrtomb@plt+0x165fc>
  41b444:	bl	404ad0 <__errno_location@plt>
  41b448:	ldr	w25, [x0]
  41b44c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b450:	ldr	x1, [x1, #1136]
  41b454:	cbz	x1, 41b45c <wcrtomb@plt+0x1683c>
  41b458:	blr	x1
  41b45c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b460:	add	x1, x1, #0xb40
  41b464:	mov	w2, #0x5                   	// #5
  41b468:	mov	x0, #0x0                   	// #0
  41b46c:	bl	4049c0 <dcgettext@plt>
  41b470:	mov	x20, x0
  41b474:	mov	x0, x21
  41b478:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41b47c:	mov	x2, x20
  41b480:	mov	x3, x0
  41b484:	mov	w1, w25
  41b488:	mov	w0, #0x0                   	// #0
  41b48c:	bl	404050 <error@plt>
  41b490:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b494:	mov	w1, #0x2                   	// #2
  41b498:	str	w1, [x0, #3568]
  41b49c:	mov	x0, x19
  41b4a0:	bl	403ff0 <strlen@plt>
  41b4a4:	add	x0, x0, #0x1
  41b4a8:	add	x19, x19, x0
  41b4ac:	ldrb	w0, [x19]
  41b4b0:	cbnz	w0, 41b234 <wcrtomb@plt+0x16614>
  41b4b4:	mov	x0, x21
  41b4b8:	bl	4047b0 <free@plt>
  41b4bc:	ldr	x0, [x22, #24]
  41b4c0:	bl	4047b0 <free@plt>
  41b4c4:	mov	x0, x22
  41b4c8:	bl	4047b0 <free@plt>
  41b4cc:	mov	x0, x24
  41b4d0:	bl	4047b0 <free@plt>
  41b4d4:	ldp	x19, x20, [sp, #16]
  41b4d8:	ldp	x21, x22, [sp, #32]
  41b4dc:	ldp	x23, x24, [sp, #48]
  41b4e0:	ldp	x25, x26, [sp, #64]
  41b4e4:	ldp	x27, x28, [sp, #80]
  41b4e8:	ldp	x29, x30, [sp], #240
  41b4ec:	ret
  41b4f0:	ldr	w0, [sp, #128]
  41b4f4:	and	w0, w0, #0xf000
  41b4f8:	cmp	w0, #0x4, lsl #12
  41b4fc:	b.ne	41b2a8 <wcrtomb@plt+0x16688>  // b.any
  41b500:	b	41b21c <wcrtomb@plt+0x165fc>
  41b504:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41b508:	mov	x1, x21
  41b50c:	add	x0, x0, #0xec8
  41b510:	bl	42c090 <wcrtomb@plt+0x27470>
  41b514:	cbnz	w0, 41b428 <wcrtomb@plt+0x16808>
  41b518:	b	41b21c <wcrtomb@plt+0x165fc>
  41b51c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b520:	ldr	x0, [x0, #1136]
  41b524:	cbz	x0, 41b52c <wcrtomb@plt+0x1690c>
  41b528:	blr	x0
  41b52c:	mov	w2, #0x5                   	// #5
  41b530:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b534:	mov	x0, #0x0                   	// #0
  41b538:	add	x1, x1, #0x940
  41b53c:	bl	4049c0 <dcgettext@plt>
  41b540:	mov	x2, x0
  41b544:	mov	w4, w21
  41b548:	mov	w3, w20
  41b54c:	mov	w1, #0x0                   	// #0
  41b550:	mov	w0, #0x0                   	// #0
  41b554:	bl	404050 <error@plt>
  41b558:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b55c:	mov	w1, #0x2                   	// #2
  41b560:	ldp	x19, x20, [sp, #16]
  41b564:	str	w1, [x0, #3568]
  41b568:	ldp	x25, x26, [sp, #64]
  41b56c:	ldp	x27, x28, [sp, #80]
  41b570:	b	41b02c <wcrtomb@plt+0x1640c>
  41b574:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b578:	mov	w2, #0x5                   	// #5
  41b57c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b580:	add	x1, x1, #0xb28
  41b584:	ldr	x25, [x0, #4056]
  41b588:	mov	x0, #0x0                   	// #0
  41b58c:	bl	4049c0 <dcgettext@plt>
  41b590:	mov	x20, x0
  41b594:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b598:	mov	x0, x21
  41b59c:	ldr	x28, [x1, #3664]
  41b5a0:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  41b5a4:	mov	x2, x20
  41b5a8:	mov	x4, x0
  41b5ac:	mov	x3, x28
  41b5b0:	mov	x0, x25
  41b5b4:	mov	w1, #0x1                   	// #1
  41b5b8:	bl	404700 <__fprintf_chk@plt>
  41b5bc:	b	41b434 <wcrtomb@plt+0x16814>
  41b5c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b5c4:	ldr	x0, [x0, #1136]
  41b5c8:	cbz	x0, 41b5d0 <wcrtomb@plt+0x169b0>
  41b5cc:	blr	x0
  41b5d0:	mov	w2, #0x5                   	// #5
  41b5d4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b5d8:	mov	x0, #0x0                   	// #0
  41b5dc:	add	x1, x1, #0xa18
  41b5e0:	bl	4049c0 <dcgettext@plt>
  41b5e4:	mov	x2, x0
  41b5e8:	mov	w3, w20
  41b5ec:	mov	w1, #0x0                   	// #0
  41b5f0:	mov	w0, #0x0                   	// #0
  41b5f4:	bl	404050 <error@plt>
  41b5f8:	b	41b558 <wcrtomb@plt+0x16938>
  41b5fc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b600:	ldr	x0, [x0, #1136]
  41b604:	cbz	x0, 41b60c <wcrtomb@plt+0x169ec>
  41b608:	blr	x0
  41b60c:	mov	w2, #0x5                   	// #5
  41b610:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b614:	mov	x0, #0x0                   	// #0
  41b618:	add	x1, x1, #0xa50
  41b61c:	bl	4049c0 <dcgettext@plt>
  41b620:	mov	x2, x0
  41b624:	mov	w1, #0x0                   	// #0
  41b628:	mov	w0, #0x0                   	// #0
  41b62c:	bl	404050 <error@plt>
  41b630:	ldr	x19, [x22, #384]
  41b634:	ldrb	w28, [x19]
  41b638:	cbnz	w28, 41b0e0 <wcrtomb@plt+0x164c0>
  41b63c:	mov	x21, #0x0                   	// #0
  41b640:	b	41b180 <wcrtomb@plt+0x16560>
  41b644:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b648:	ldr	x0, [x0, #1136]
  41b64c:	cbz	x0, 41b654 <wcrtomb@plt+0x16a34>
  41b650:	blr	x0
  41b654:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b658:	add	x1, x1, #0x9f0
  41b65c:	mov	w2, #0x5                   	// #5
  41b660:	mov	x0, #0x0                   	// #0
  41b664:	bl	4049c0 <dcgettext@plt>
  41b668:	mov	w1, #0x0                   	// #0
  41b66c:	mov	x2, x0
  41b670:	mov	w0, #0x0                   	// #0
  41b674:	bl	404050 <error@plt>
  41b678:	b	41b558 <wcrtomb@plt+0x16938>
  41b67c:	mov	x0, x21
  41b680:	bl	4047b0 <free@plt>
  41b684:	mov	x0, x24
  41b688:	bl	4047b0 <free@plt>
  41b68c:	ldp	x19, x20, [sp, #16]
  41b690:	ldp	x25, x26, [sp, #64]
  41b694:	ldp	x27, x28, [sp, #80]
  41b698:	b	41b02c <wcrtomb@plt+0x1640c>
  41b69c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b6a0:	ldr	x0, [x0, #1136]
  41b6a4:	cbz	x0, 41b6ac <wcrtomb@plt+0x16a8c>
  41b6a8:	blr	x0
  41b6ac:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b6b0:	mov	w2, #0x5                   	// #5
  41b6b4:	add	x1, x1, #0x9c0
  41b6b8:	b	41b660 <wcrtomb@plt+0x16a40>
  41b6bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b6c0:	ldr	x0, [x0, #1136]
  41b6c4:	cbz	x0, 41b6cc <wcrtomb@plt+0x16aac>
  41b6c8:	blr	x0
  41b6cc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b6d0:	mov	w2, #0x5                   	// #5
  41b6d4:	add	x1, x1, #0x970
  41b6d8:	b	41b660 <wcrtomb@plt+0x16a40>
  41b6dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b6e0:	ldr	x0, [x0, #1136]
  41b6e4:	cbz	x0, 41b6ec <wcrtomb@plt+0x16acc>
  41b6e8:	blr	x0
  41b6ec:	bl	404ad0 <__errno_location@plt>
  41b6f0:	mov	x3, x0
  41b6f4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b6f8:	add	x1, x1, #0xa88
  41b6fc:	mov	w2, #0x5                   	// #5
  41b700:	mov	x0, #0x0                   	// #0
  41b704:	ldr	w20, [x3]
  41b708:	bl	4049c0 <dcgettext@plt>
  41b70c:	mov	x19, x0
  41b710:	mov	x0, x21
  41b714:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  41b718:	mov	x3, x0
  41b71c:	mov	x2, x19
  41b720:	mov	w1, w20
  41b724:	mov	w0, #0x0                   	// #0
  41b728:	bl	404050 <error@plt>
  41b72c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b730:	mov	w2, #0x2                   	// #2
  41b734:	mov	x0, x21
  41b738:	str	w2, [x1, #3568]
  41b73c:	b	41b680 <wcrtomb@plt+0x16a60>
  41b740:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b744:	ldr	x0, [x0, #1136]
  41b748:	cbz	x0, 41b750 <wcrtomb@plt+0x16b30>
  41b74c:	blr	x0
  41b750:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41b754:	mov	w2, #0x5                   	// #5
  41b758:	add	x1, x1, #0x998
  41b75c:	b	41b660 <wcrtomb@plt+0x16a40>
  41b760:	mov	x21, #0x0                   	// #0
  41b764:	b	41b4b4 <wcrtomb@plt+0x16894>
  41b768:	cbz	x1, 41b878 <wcrtomb@plt+0x16c58>
  41b76c:	stp	x29, x30, [sp, #-80]!
  41b770:	mov	x29, sp
  41b774:	stp	x19, x20, [sp, #16]
  41b778:	add	x20, x0, x1
  41b77c:	add	x19, x0, #0x1
  41b780:	stp	x21, x22, [sp, #32]
  41b784:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41b788:	add	x21, x21, #0xfd8
  41b78c:	stp	x23, x24, [sp, #48]
  41b790:	mov	x23, #0x4401                	// #17409
  41b794:	mov	w22, #0xa                   	// #10
  41b798:	mov	x24, #0x1                   	// #1
  41b79c:	movk	x23, #0x31, lsl #16
  41b7a0:	str	x25, [sp, #64]
  41b7a4:	mov	w25, #0x0                   	// #0
  41b7a8:	ldurb	w0, [x19, #-1]
  41b7ac:	ldr	x2, [x21]
  41b7b0:	cbz	w0, 41b80c <wcrtomb@plt+0x16bec>
  41b7b4:	sub	w1, w0, #0x44
  41b7b8:	and	w1, w1, #0xff
  41b7bc:	cmp	w1, #0x15
  41b7c0:	b.hi	41b7d0 <wcrtomb@plt+0x16bb0>  // b.pmore
  41b7c4:	lsl	x1, x24, x1
  41b7c8:	tst	x1, x23
  41b7cc:	b.ne	41b830 <wcrtomb@plt+0x16c10>  // b.any
  41b7d0:	ldp	x1, x3, [x2, #40]
  41b7d4:	cmp	x1, x3
  41b7d8:	b.cs	41b858 <wcrtomb@plt+0x16c38>  // b.hs, b.nlast
  41b7dc:	add	x3, x1, #0x1
  41b7e0:	str	x3, [x2, #40]
  41b7e4:	strb	w0, [x1]
  41b7e8:	sub	x0, x20, x19
  41b7ec:	add	x19, x19, #0x1
  41b7f0:	cbnz	x0, 41b7a8 <wcrtomb@plt+0x16b88>
  41b7f4:	ldp	x19, x20, [sp, #16]
  41b7f8:	ldp	x21, x22, [sp, #32]
  41b7fc:	ldp	x23, x24, [sp, #48]
  41b800:	ldr	x25, [sp, #64]
  41b804:	ldp	x29, x30, [sp], #80
  41b808:	ret
  41b80c:	ldp	x0, x1, [x2, #40]
  41b810:	cmp	x0, x1
  41b814:	b.cs	41b868 <wcrtomb@plt+0x16c48>  // b.hs, b.nlast
  41b818:	add	x1, x0, #0x1
  41b81c:	str	x1, [x2, #40]
  41b820:	strb	w22, [x0]
  41b824:	sub	x0, x20, x19
  41b828:	mov	w25, #0x0                   	// #0
  41b82c:	b	41b7ec <wcrtomb@plt+0x16bcc>
  41b830:	mov	x1, x2
  41b834:	bl	404170 <fputc@plt>
  41b838:	cbz	w25, 41b848 <wcrtomb@plt+0x16c28>
  41b83c:	sub	x0, x20, x19
  41b840:	mov	w25, #0x1                   	// #1
  41b844:	b	41b7ec <wcrtomb@plt+0x16bcc>
  41b848:	ldr	x1, [x21]
  41b84c:	mov	w0, #0x20                  	// #32
  41b850:	bl	404170 <fputc@plt>
  41b854:	b	41b83c <wcrtomb@plt+0x16c1c>
  41b858:	mov	w1, w0
  41b85c:	mov	x0, x2
  41b860:	bl	404680 <__overflow@plt>
  41b864:	b	41b7e8 <wcrtomb@plt+0x16bc8>
  41b868:	mov	x0, x2
  41b86c:	mov	w1, #0xa                   	// #10
  41b870:	bl	404680 <__overflow@plt>
  41b874:	b	41b824 <wcrtomb@plt+0x16c04>
  41b878:	ret
  41b87c:	nop
  41b880:	stp	x29, x30, [sp, #-32]!
  41b884:	mov	x29, sp
  41b888:	ldr	w1, [x1]
  41b88c:	str	x19, [sp, #16]
  41b890:	cmp	w1, #0x2
  41b894:	b.eq	41b8c8 <wcrtomb@plt+0x16ca8>  // b.none
  41b898:	mov	x19, x0
  41b89c:	cmp	w1, #0x4
  41b8a0:	b.eq	41b8b8 <wcrtomb@plt+0x16c98>  // b.none
  41b8a4:	cmp	w1, #0x1
  41b8a8:	b.eq	41b90c <wcrtomb@plt+0x16cec>  // b.none
  41b8ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b8b0:	ldr	x1, [x0, #1008]
  41b8b4:	cbnz	x1, 41b8e8 <wcrtomb@plt+0x16cc8>
  41b8b8:	mov	x0, x19
  41b8bc:	ldr	x19, [sp, #16]
  41b8c0:	ldp	x29, x30, [sp], #32
  41b8c4:	ret
  41b8c8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b8cc:	mov	w1, #0x1                   	// #1
  41b8d0:	ldrb	w2, [x2, #1080]
  41b8d4:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  41b8d8:	mov	x19, x0
  41b8dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b8e0:	ldr	x1, [x0, #1008]
  41b8e4:	cbz	x1, 41b8b8 <wcrtomb@plt+0x16c98>
  41b8e8:	mov	x0, x19
  41b8ec:	bl	4274e0 <wcrtomb@plt+0x228c0>
  41b8f0:	cmn	x0, #0x1
  41b8f4:	b.eq	41b924 <wcrtomb@plt+0x16d04>  // b.none
  41b8f8:	add	x19, x19, x0
  41b8fc:	mov	x0, x19
  41b900:	ldr	x19, [sp, #16]
  41b904:	ldp	x29, x30, [sp], #32
  41b908:	ret
  41b90c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41b910:	mov	w1, #0x0                   	// #0
  41b914:	ldrb	w2, [x2, #1080]
  41b918:	bl	4349b0 <wcrtomb@plt+0x2fd90>
  41b91c:	mov	x19, x0
  41b920:	b	41b8ac <wcrtomb@plt+0x16c8c>
  41b924:	mov	x0, x19
  41b928:	bl	403ff0 <strlen@plt>
  41b92c:	add	x19, x19, x0
  41b930:	b	41b8fc <wcrtomb@plt+0x16cdc>
  41b934:	nop
  41b938:	sub	sp, sp, #0x490
  41b93c:	stp	x29, x30, [sp]
  41b940:	mov	x29, sp
  41b944:	stp	x19, x20, [sp, #16]
  41b948:	mov	x20, x2
  41b94c:	stp	x21, x22, [sp, #32]
  41b950:	and	w21, w6, #0xff
  41b954:	stp	x23, x24, [sp, #48]
  41b958:	add	x23, x0, x1
  41b95c:	stp	x25, x26, [sp, #64]
  41b960:	mov	x26, x0
  41b964:	stp	x27, x28, [sp, #80]
  41b968:	ldrb	w0, [x0]
  41b96c:	cmp	w0, #0x0
  41b970:	cinc	x19, x26, eq  // eq = none
  41b974:	cmp	x23, x19
  41b978:	b.eq	41ba88 <wcrtomb@plt+0x16e68>  // b.none
  41b97c:	mov	x28, x1
  41b980:	mov	x24, x3
  41b984:	mov	x22, x4
  41b988:	and	w25, w5, #0xff
  41b98c:	bl	404740 <__ctype_b_loc@plt>
  41b990:	mov	x27, x0
  41b994:	ldr	x2, [x0]
  41b998:	b	41b9a8 <wcrtomb@plt+0x16d88>
  41b99c:	add	x19, x19, #0x1
  41b9a0:	cmp	x23, x19
  41b9a4:	b.eq	41ba88 <wcrtomb@plt+0x16e68>  // b.none
  41b9a8:	ldrb	w5, [x19]
  41b9ac:	ubfiz	x6, x5, #1, #8
  41b9b0:	ldrh	w6, [x2, x6]
  41b9b4:	tbnz	w6, #13, 41b99c <wcrtomb@plt+0x16d7c>
  41b9b8:	sub	w7, w5, #0x30
  41b9bc:	neg	x3, x24
  41b9c0:	cmp	w7, #0x7
  41b9c4:	b.hi	41bae8 <wcrtomb@plt+0x16ec8>  // b.pmore
  41b9c8:	add	x0, x19, #0x1
  41b9cc:	sxtw	x24, w7
  41b9d0:	cmp	x0, x23
  41b9d4:	b.eq	41bcc4 <wcrtomb@plt+0x170a4>  // b.none
  41b9d8:	mov	x25, x0
  41b9dc:	mov	w4, #0x0                   	// #0
  41b9e0:	b	41ba04 <wcrtomb@plt+0x16de4>
  41b9e4:	tst	x24, #0xe000000000000000
  41b9e8:	add	x25, x25, #0x1
  41b9ec:	cset	w6, ne  // ne = any
  41b9f0:	sxtw	x1, w1
  41b9f4:	add	x24, x1, x24, lsl #3
  41b9f8:	orr	w4, w4, w6
  41b9fc:	cmp	x23, x25
  41ba00:	b.eq	41bcd0 <wcrtomb@plt+0x170b0>  // b.none
  41ba04:	ldrb	w1, [x25]
  41ba08:	sub	w1, w1, #0x30
  41ba0c:	cmp	w1, #0x7
  41ba10:	b.ls	41b9e4 <wcrtomb@plt+0x16dc4>  // b.plast
  41ba14:	cmp	w4, #0x0
  41ba18:	ccmp	x24, x22, #0x2, eq  // eq = none
  41ba1c:	b.hi	41bce4 <wcrtomb@plt+0x170c4>  // b.pmore
  41ba20:	cmp	x23, x25
  41ba24:	b.eq	41bcdc <wcrtomb@plt+0x170bc>  // b.none
  41ba28:	ldrb	w0, [x25]
  41ba2c:	cbz	w0, 41ba40 <wcrtomb@plt+0x16e20>
  41ba30:	ubfiz	x0, x0, #1, #8
  41ba34:	ldrh	w0, [x2, x0]
  41ba38:	tbz	w0, #13, 41bc9c <wcrtomb@plt+0x1707c>
  41ba3c:	nop
  41ba40:	cmp	x22, x24
  41ba44:	b.cs	41bcdc <wcrtomb@plt+0x170bc>  // b.hs, b.nlast
  41ba48:	cmp	x20, #0x0
  41ba4c:	eor	w21, w21, #0x1
  41ba50:	cset	w0, ne  // ne = any
  41ba54:	tst	w0, w21
  41ba58:	b.ne	41be44 <wcrtomb@plt+0x17224>  // b.any
  41ba5c:	nop
  41ba60:	mov	x0, #0xffffffffffffffff    	// #-1
  41ba64:	mov	sp, x29
  41ba68:	ldp	x29, x30, [sp]
  41ba6c:	ldp	x19, x20, [sp, #16]
  41ba70:	ldp	x21, x22, [sp, #32]
  41ba74:	ldp	x23, x24, [sp, #48]
  41ba78:	ldp	x25, x26, [sp, #64]
  41ba7c:	ldp	x27, x28, [sp, #80]
  41ba80:	add	sp, sp, #0x490
  41ba84:	ret
  41ba88:	cmp	x20, #0x0
  41ba8c:	eor	w21, w21, #0x1
  41ba90:	cset	w0, ne  // ne = any
  41ba94:	tst	w0, w21
  41ba98:	b.eq	41ba60 <wcrtomb@plt+0x16e40>  // b.none
  41ba9c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41baa0:	ldr	x0, [x0, #1136]
  41baa4:	cbz	x0, 41baac <wcrtomb@plt+0x16e8c>
  41baa8:	blr	x0
  41baac:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41bab0:	add	x1, x1, #0xc28
  41bab4:	mov	w2, #0x5                   	// #5
  41bab8:	mov	x0, #0x0                   	// #0
  41babc:	bl	4049c0 <dcgettext@plt>
  41bac0:	mov	w1, #0x0                   	// #0
  41bac4:	mov	x2, x0
  41bac8:	mov	x3, x20
  41bacc:	mov	w0, #0x0                   	// #0
  41bad0:	bl	404050 <error@plt>
  41bad4:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bad8:	mov	w2, #0x2                   	// #2
  41badc:	mov	x0, #0xffffffffffffffff    	// #-1
  41bae0:	str	w2, [x1, #3568]
  41bae4:	b	41ba64 <wcrtomb@plt+0x16e44>
  41bae8:	cbnz	w25, 41bc94 <wcrtomb@plt+0x17074>
  41baec:	sub	w0, w5, #0x2b
  41baf0:	mov	w1, #0xfd                  	// #253
  41baf4:	tst	w0, w1
  41baf8:	b.ne	41bde4 <wcrtomb@plt+0x171c4>  // b.any
  41bafc:	cbnz	w21, 41bb5c <wcrtomb@plt+0x16f3c>
  41bb00:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bb04:	ldrb	w1, [x0, #2320]
  41bb08:	cbnz	w1, 41bb5c <wcrtomb@plt+0x16f3c>
  41bb0c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41bb10:	mov	w2, #0x1                   	// #1
  41bb14:	strb	w2, [x0, #2320]
  41bb18:	ldr	x0, [x1, #1136]
  41bb1c:	cbz	x0, 41bb2c <wcrtomb@plt+0x16f0c>
  41bb20:	str	x3, [x29, #104]
  41bb24:	blr	x0
  41bb28:	ldr	x3, [x29, #104]
  41bb2c:	mov	w2, #0x5                   	// #5
  41bb30:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41bb34:	mov	x0, #0x0                   	// #0
  41bb38:	add	x1, x1, #0xcd8
  41bb3c:	str	x3, [x29, #104]
  41bb40:	bl	4049c0 <dcgettext@plt>
  41bb44:	mov	x2, x0
  41bb48:	mov	w1, #0x0                   	// #0
  41bb4c:	mov	w0, #0x0                   	// #0
  41bb50:	bl	404050 <error@plt>
  41bb54:	ldrb	w5, [x19]
  41bb58:	ldr	x3, [x29, #104]
  41bb5c:	cmp	w5, #0x2d
  41bb60:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bb64:	add	x19, x19, #0x1
  41bb68:	add	x24, x4, #0x910
  41bb6c:	cset	w6, eq  // eq = none
  41bb70:	add	x4, x24, #0x10
  41bb74:	cmp	x23, x19
  41bb78:	mov	x24, #0x0                   	// #0
  41bb7c:	b.ne	41bb9c <wcrtomb@plt+0x16f7c>  // b.any
  41bb80:	b	41bfe8 <wcrtomb@plt+0x173c8>
  41bb84:	add	x19, x19, #0x1
  41bb88:	tst	x24, #0xfc00000000000000
  41bb8c:	b.ne	41bf04 <wcrtomb@plt+0x172e4>  // b.any
  41bb90:	orr	x24, x2, x24, lsl #6
  41bb94:	cmp	x23, x19
  41bb98:	b.eq	41bbcc <wcrtomb@plt+0x16fac>  // b.none
  41bb9c:	ldrb	w1, [x19]
  41bba0:	ldrb	w0, [x4, w1, sxtw]
  41bba4:	and	x2, x0, #0xff
  41bba8:	cmp	w0, #0x3f
  41bbac:	b.ls	41bb84 <wcrtomb@plt+0x16f64>  // b.plast
  41bbb0:	cmp	x19, x23
  41bbb4:	b.eq	41bbcc <wcrtomb@plt+0x16fac>  // b.none
  41bbb8:	cbz	w1, 41bbcc <wcrtomb@plt+0x16fac>
  41bbbc:	ldr	x0, [x27]
  41bbc0:	ubfiz	x1, x1, #1, #8
  41bbc4:	ldrh	w0, [x0, x1]
  41bbc8:	tbz	w0, #13, 41bc9c <wcrtomb@plt+0x1707c>
  41bbcc:	cbz	w6, 41ba40 <wcrtomb@plt+0x16e20>
  41bbd0:	cmp	x3, x24
  41bbd4:	b.cs	41bdcc <wcrtomb@plt+0x171ac>  // b.hs, b.nlast
  41bbd8:	cmp	x20, #0x0
  41bbdc:	eor	w21, w21, #0x1
  41bbe0:	cset	w0, ne  // ne = any
  41bbe4:	tst	w0, w21
  41bbe8:	b.eq	41ba60 <wcrtomb@plt+0x16e40>  // b.none
  41bbec:	mov	x0, x3
  41bbf0:	add	x1, x29, #0x91
  41bbf4:	str	x3, [x29, #104]
  41bbf8:	bl	446868 <argp_parse@@Base+0x6a88>
  41bbfc:	add	x1, x29, #0xa9
  41bc00:	mov	x19, x0
  41bc04:	mov	x0, x24
  41bc08:	bl	446868 <argp_parse@@Base+0x6a88>
  41bc0c:	ldr	x3, [x29, #104]
  41bc10:	sub	x23, x0, #0x1
  41bc14:	mov	w1, #0x2d                  	// #45
  41bc18:	sturb	w1, [x0, #-1]
  41bc1c:	cbz	x3, 41bc2c <wcrtomb@plt+0x1700c>
  41bc20:	mov	w0, #0x2d                  	// #45
  41bc24:	sub	x19, x19, #0x1
  41bc28:	strb	w0, [x19]
  41bc2c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41bc30:	ldr	x0, [x0, #1136]
  41bc34:	cbz	x0, 41bc3c <wcrtomb@plt+0x1701c>
  41bc38:	blr	x0
  41bc3c:	mov	w2, #0x5                   	// #5
  41bc40:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41bc44:	mov	x0, #0x0                   	// #0
  41bc48:	add	x1, x1, #0xda8
  41bc4c:	bl	4049c0 <dcgettext@plt>
  41bc50:	mov	x21, x0
  41bc54:	add	x1, x29, #0x78
  41bc58:	mov	x0, x22
  41bc5c:	bl	446868 <argp_parse@@Base+0x6a88>
  41bc60:	mov	x6, x0
  41bc64:	mov	x2, x21
  41bc68:	mov	w1, #0x0                   	// #0
  41bc6c:	mov	w0, #0x0                   	// #0
  41bc70:	mov	x5, x19
  41bc74:	mov	x4, x20
  41bc78:	mov	x3, x23
  41bc7c:	bl	404050 <error@plt>
  41bc80:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bc84:	mov	w2, #0x2                   	// #2
  41bc88:	mov	x0, #0xffffffffffffffff    	// #-1
  41bc8c:	str	w2, [x1, #3568]
  41bc90:	b	41ba64 <wcrtomb@plt+0x16e44>
  41bc94:	mov	x0, #0x0                   	// #0
  41bc98:	cbz	w5, 41ba64 <wcrtomb@plt+0x16e44>
  41bc9c:	cbz	x20, 41ba60 <wcrtomb@plt+0x16e40>
  41bca0:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bca4:	add	x24, x4, #0x910
  41bca8:	ldr	x0, [x24, #272]
  41bcac:	cbnz	x0, 41be90 <wcrtomb@plt+0x17270>
  41bcb0:	bl	44d1a0 <argp_parse@@Base+0xd3c0>
  41bcb4:	str	x0, [x24, #272]
  41bcb8:	mov	w1, #0x8                   	// #8
  41bcbc:	bl	44d210 <argp_parse@@Base+0xd430>
  41bcc0:	b	41be90 <wcrtomb@plt+0x17270>
  41bcc4:	mov	x25, x23
  41bcc8:	mov	w4, #0x0                   	// #0
  41bccc:	nop
  41bcd0:	cmp	w4, #0x0
  41bcd4:	ccmp	x22, x24, #0x0, eq  // eq = none
  41bcd8:	b.cc	41bce4 <wcrtomb@plt+0x170c4>  // b.lo, b.ul, b.last
  41bcdc:	mov	x0, x24
  41bce0:	b	41ba64 <wcrtomb@plt+0x16e44>
  41bce4:	cmp	w5, #0x31
  41bce8:	b.ls	41bdd4 <wcrtomb@plt+0x171b4>  // b.plast
  41bcec:	cbz	x20, 41be7c <wcrtomb@plt+0x1725c>
  41bcf0:	orr	w28, w7, #0x4
  41bcf4:	mov	w6, #0x7                   	// #7
  41bcf8:	sub	w28, w6, w28
  41bcfc:	cmp	x0, x23
  41bd00:	sxtw	x28, w28
  41bd04:	b.eq	41bfdc <wcrtomb@plt+0x173bc>  // b.none
  41bd08:	mov	w4, #0x0                   	// #0
  41bd0c:	b	41bd30 <wcrtomb@plt+0x17110>
  41bd10:	tst	x28, #0xe000000000000000
  41bd14:	sxtw	x5, w5
  41bd18:	cset	w1, ne  // ne = any
  41bd1c:	add	x0, x0, #0x1
  41bd20:	add	x28, x5, x28, lsl #3
  41bd24:	orr	w4, w4, w1
  41bd28:	cmp	x23, x0
  41bd2c:	b.eq	41bf98 <wcrtomb@plt+0x17378>  // b.none
  41bd30:	ldrb	w1, [x0]
  41bd34:	sub	w1, w1, #0x30
  41bd38:	sub	w5, w6, w1
  41bd3c:	cmp	w1, #0x7
  41bd40:	b.ls	41bd10 <wcrtomb@plt+0x170f0>  // b.plast
  41bd44:	mov	x25, x0
  41bd48:	adds	x24, x28, #0x1
  41bd4c:	cset	w0, eq  // eq = none
  41bd50:	cmp	x3, x24
  41bd54:	orr	w4, w4, w0
  41bd58:	cset	w1, cs  // cs = hs, nlast
  41bd5c:	eor	w0, w4, #0x1
  41bd60:	tst	w1, w0
  41bd64:	b.eq	41bdd4 <wcrtomb@plt+0x171b4>  // b.none
  41bd68:	cbnz	w21, 41bdac <wcrtomb@plt+0x1718c>
  41bd6c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41bd70:	ldr	x0, [x0, #1136]
  41bd74:	cbz	x0, 41bd7c <wcrtomb@plt+0x1715c>
  41bd78:	blr	x0
  41bd7c:	mov	w2, #0x5                   	// #5
  41bd80:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41bd84:	mov	x0, #0x0                   	// #0
  41bd88:	add	x1, x1, #0xc60
  41bd8c:	bl	4049c0 <dcgettext@plt>
  41bd90:	mov	x2, x0
  41bd94:	mov	x5, x20
  41bd98:	mov	x4, x19
  41bd9c:	sub	w3, w25, w19
  41bda0:	mov	w1, #0x0                   	// #0
  41bda4:	mov	w0, #0x0                   	// #0
  41bda8:	bl	404050 <error@plt>
  41bdac:	cmp	x25, x23
  41bdb0:	b.eq	41bfd4 <wcrtomb@plt+0x173b4>  // b.none
  41bdb4:	ldrb	w0, [x25]
  41bdb8:	cbz	w0, 41bfd4 <wcrtomb@plt+0x173b4>
  41bdbc:	ldr	x1, [x27]
  41bdc0:	ubfiz	x0, x0, #1, #8
  41bdc4:	ldrh	w0, [x1, x0]
  41bdc8:	tbz	w0, #13, 41bca0 <wcrtomb@plt+0x17080>
  41bdcc:	neg	x0, x24
  41bdd0:	b	41ba64 <wcrtomb@plt+0x16e44>
  41bdd4:	cbnz	w4, 41bff8 <wcrtomb@plt+0x173d8>
  41bdd8:	cmp	x23, x25
  41bddc:	b.ne	41ba28 <wcrtomb@plt+0x16e08>  // b.any
  41bde0:	b	41ba40 <wcrtomb@plt+0x16e20>
  41bde4:	cmp	w5, #0x80
  41bde8:	mov	w0, #0xff                  	// #255
  41bdec:	ccmp	w5, w0, #0x4, ne  // ne = any
  41bdf0:	b.ne	41be70 <wcrtomb@plt+0x17250>  // b.any
  41bdf4:	and	w2, w5, #0x40
  41bdf8:	and	w24, w5, #0x3f
  41bdfc:	sub	w24, w24, w2
  41be00:	neg	w1, w2
  41be04:	add	x19, x19, #0x1
  41be08:	sxtw	x24, w24
  41be0c:	lsl	x1, x1, #50
  41be10:	b	41be24 <wcrtomb@plt+0x17204>
  41be14:	and	x0, x24, #0xffffffffffffff
  41be18:	orr	x0, x0, x1
  41be1c:	cmp	x0, x24
  41be20:	b.ne	41bfa0 <wcrtomb@plt+0x17380>  // b.any
  41be24:	ldrb	w0, [x19], #1
  41be28:	cmp	x23, x19
  41be2c:	add	x24, x0, x24, lsl #8
  41be30:	b.ne	41be14 <wcrtomb@plt+0x171f4>  // b.any
  41be34:	cmp	w2, #0x0
  41be38:	cset	w6, ne  // ne = any
  41be3c:	cneg	x24, x24, ne  // ne = any
  41be40:	b	41bbcc <wcrtomb@plt+0x16fac>
  41be44:	mov	x0, x3
  41be48:	add	x1, x29, #0x91
  41be4c:	str	x3, [x29, #104]
  41be50:	bl	446868 <argp_parse@@Base+0x6a88>
  41be54:	add	x1, x29, #0xa9
  41be58:	mov	x19, x0
  41be5c:	mov	x0, x24
  41be60:	bl	446868 <argp_parse@@Base+0x6a88>
  41be64:	mov	x23, x0
  41be68:	ldr	x3, [x29, #104]
  41be6c:	b	41bc1c <wcrtomb@plt+0x16ffc>
  41be70:	mov	x0, #0x0                   	// #0
  41be74:	cbz	w5, 41ba64 <wcrtomb@plt+0x16e44>
  41be78:	b	41bc9c <wcrtomb@plt+0x1707c>
  41be7c:	cbz	w4, 41bdd8 <wcrtomb@plt+0x171b8>
  41be80:	b	41ba60 <wcrtomb@plt+0x16e40>
  41be84:	ldurb	w0, [x23, #-1]
  41be88:	cbnz	w0, 41be98 <wcrtomb@plt+0x17278>
  41be8c:	sub	x23, x23, #0x1
  41be90:	cmp	x26, x23
  41be94:	b.ne	41be84 <wcrtomb@plt+0x17264>  // b.any
  41be98:	ldr	x4, [x24, #272]
  41be9c:	sub	x3, x23, x26
  41bea0:	mov	x2, x26
  41bea4:	add	x0, x29, #0xa8
  41bea8:	mov	x1, #0x3e8                 	// #1000
  41beac:	bl	44d2d8 <argp_parse@@Base+0xd4f8>
  41beb0:	cbnz	w21, 41ba60 <wcrtomb@plt+0x16e40>
  41beb4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41beb8:	ldr	x0, [x0, #1136]
  41bebc:	cbz	x0, 41bec4 <wcrtomb@plt+0x172a4>
  41bec0:	blr	x0
  41bec4:	mov	w2, #0x5                   	// #5
  41bec8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41becc:	mov	x0, #0x0                   	// #0
  41bed0:	add	x1, x1, #0xd70
  41bed4:	bl	4049c0 <dcgettext@plt>
  41bed8:	mov	x2, x0
  41bedc:	mov	w1, #0x0                   	// #0
  41bee0:	mov	w0, #0x0                   	// #0
  41bee4:	mov	x5, x20
  41bee8:	add	x4, x29, #0xa8
  41beec:	mov	w3, #0x3e8                 	// #1000
  41bef0:	bl	404050 <error@plt>
  41bef4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bef8:	mov	w1, #0x2                   	// #2
  41befc:	str	w1, [x0, #3568]
  41bf00:	b	41ba60 <wcrtomb@plt+0x16e40>
  41bf04:	add	x0, x28, #0x10
  41bf08:	mov	x1, x26
  41bf0c:	and	x0, x0, #0xfffffffffffffff0
  41bf10:	mov	x2, x28
  41bf14:	sub	sp, sp, x0
  41bf18:	eor	w21, w21, #0x1
  41bf1c:	mov	x19, sp
  41bf20:	mov	x0, x19
  41bf24:	bl	403f70 <memcpy@plt>
  41bf28:	cmp	x20, #0x0
  41bf2c:	strb	wzr, [x19, x28]
  41bf30:	cset	w0, ne  // ne = any
  41bf34:	tst	w0, w21
  41bf38:	b.eq	41ba60 <wcrtomb@plt+0x16e40>  // b.none
  41bf3c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41bf40:	ldr	x0, [x0, #1136]
  41bf44:	cbz	x0, 41bf4c <wcrtomb@plt+0x1732c>
  41bf48:	blr	x0
  41bf4c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41bf50:	add	x1, x1, #0xd08
  41bf54:	mov	w2, #0x5                   	// #5
  41bf58:	mov	x0, #0x0                   	// #0
  41bf5c:	bl	4049c0 <dcgettext@plt>
  41bf60:	mov	x21, x0
  41bf64:	mov	x0, x19
  41bf68:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  41bf6c:	mov	x2, x21
  41bf70:	mov	x3, x0
  41bf74:	mov	w1, #0x0                   	// #0
  41bf78:	mov	w0, #0x0                   	// #0
  41bf7c:	mov	x4, x20
  41bf80:	bl	404050 <error@plt>
  41bf84:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41bf88:	mov	w2, #0x2                   	// #2
  41bf8c:	mov	x0, #0xffffffffffffffff    	// #-1
  41bf90:	str	w2, [x1, #3568]
  41bf94:	b	41ba64 <wcrtomb@plt+0x16e44>
  41bf98:	mov	x25, x23
  41bf9c:	b	41bd48 <wcrtomb@plt+0x17128>
  41bfa0:	cmp	x20, #0x0
  41bfa4:	eor	w21, w21, #0x1
  41bfa8:	cset	w0, ne  // ne = any
  41bfac:	tst	w0, w21
  41bfb0:	b.eq	41ba60 <wcrtomb@plt+0x16e40>  // b.none
  41bfb4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41bfb8:	ldr	x0, [x0, #1136]
  41bfbc:	cbz	x0, 41bfc4 <wcrtomb@plt+0x173a4>
  41bfc0:	blr	x0
  41bfc4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41bfc8:	mov	w2, #0x5                   	// #5
  41bfcc:	add	x1, x1, #0xd40
  41bfd0:	b	41bab8 <wcrtomb@plt+0x16e98>
  41bfd4:	mvn	x0, x28
  41bfd8:	b	41ba64 <wcrtomb@plt+0x16e44>
  41bfdc:	mov	x25, x23
  41bfe0:	mov	w4, #0x0                   	// #0
  41bfe4:	b	41bd48 <wcrtomb@plt+0x17128>
  41bfe8:	cmp	w5, #0x2d
  41bfec:	mov	x0, #0x0                   	// #0
  41bff0:	b.eq	41ba64 <wcrtomb@plt+0x16e44>  // b.none
  41bff4:	b	41bcdc <wcrtomb@plt+0x170bc>
  41bff8:	cmp	x20, #0x0
  41bffc:	eor	w21, w21, #0x1
  41c000:	cset	w0, ne  // ne = any
  41c004:	tst	w0, w21
  41c008:	b.eq	41ba60 <wcrtomb@plt+0x16e40>  // b.none
  41c00c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c010:	ldr	x0, [x0, #1136]
  41c014:	cbz	x0, 41c01c <wcrtomb@plt+0x173fc>
  41c018:	blr	x0
  41c01c:	mov	w2, #0x5                   	// #5
  41c020:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41c024:	mov	x0, #0x0                   	// #0
  41c028:	add	x1, x1, #0xca8
  41c02c:	bl	4049c0 <dcgettext@plt>
  41c030:	mov	x2, x0
  41c034:	mov	w1, #0x0                   	// #0
  41c038:	mov	w0, #0x0                   	// #0
  41c03c:	mov	x5, x20
  41c040:	mov	x4, x19
  41c044:	sub	w3, w25, w19
  41c048:	bl	404050 <error@plt>
  41c04c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41c050:	mov	w2, #0x2                   	// #2
  41c054:	mov	x0, #0xffffffffffffffff    	// #-1
  41c058:	str	w2, [x1, #3568]
  41c05c:	b	41ba64 <wcrtomb@plt+0x16e44>
  41c060:	cmp	w0, #0x56
  41c064:	b.eq	41c1c8 <wcrtomb@plt+0x175a8>  // b.none
  41c068:	stp	x29, x30, [sp, #-80]!
  41c06c:	mov	x29, sp
  41c070:	stp	x19, x20, [sp, #16]
  41c074:	mov	x20, x1
  41c078:	mov	w19, w0
  41c07c:	stp	x21, x22, [sp, #32]
  41c080:	adrp	x21, 41b000 <wcrtomb@plt+0x163e0>
  41c084:	add	x21, x21, #0x880
  41c088:	mov	w1, #0x1                   	// #1
  41c08c:	add	x3, sp, #0x4c
  41c090:	mov	x2, x21
  41c094:	add	x0, x20, #0x8
  41c098:	str	w1, [sp, #76]
  41c09c:	bl	4304d8 <wcrtomb@plt+0x2b8b8>
  41c0a0:	cmp	w19, #0x31
  41c0a4:	b.eq	41c0f4 <wcrtomb@plt+0x174d4>  // b.none
  41c0a8:	cmp	w19, #0x32
  41c0ac:	b.eq	41c0cc <wcrtomb@plt+0x174ac>  // b.none
  41c0b0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c0b4:	ldrb	w0, [x0, #971]
  41c0b8:	cbnz	w0, 41c118 <wcrtomb@plt+0x174f8>
  41c0bc:	ldp	x19, x20, [sp, #16]
  41c0c0:	ldp	x21, x22, [sp, #32]
  41c0c4:	ldp	x29, x30, [sp], #80
  41c0c8:	ret
  41c0cc:	mov	w1, #0x4                   	// #4
  41c0d0:	add	x3, sp, #0x4c
  41c0d4:	mov	x2, x21
  41c0d8:	add	x0, x20, #0x18
  41c0dc:	str	w1, [sp, #76]
  41c0e0:	bl	4304d8 <wcrtomb@plt+0x2b8b8>
  41c0e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c0e8:	ldrb	w0, [x0, #971]
  41c0ec:	cbz	w0, 41c0bc <wcrtomb@plt+0x1749c>
  41c0f0:	b	41c118 <wcrtomb@plt+0x174f8>
  41c0f4:	mov	w1, #0x2                   	// #2
  41c0f8:	add	x3, sp, #0x4c
  41c0fc:	mov	x2, x21
  41c100:	add	x0, x20, #0x18
  41c104:	str	w1, [sp, #76]
  41c108:	bl	4304d8 <wcrtomb@plt+0x2b8b8>
  41c10c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c110:	ldrb	w0, [x0, #971]
  41c114:	cbz	w0, 41c0bc <wcrtomb@plt+0x1749c>
  41c118:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c11c:	add	x20, x20, #0xe0
  41c120:	ldr	x21, [x20, #8]
  41c124:	mov	x19, x21
  41c128:	ldrb	w1, [x21]
  41c12c:	sub	w0, w1, #0x2e
  41c130:	and	w0, w0, #0xff
  41c134:	cmp	w0, #0x1
  41c138:	b.hi	41c154 <wcrtomb@plt+0x17534>  // b.pmore
  41c13c:	nop
  41c140:	ldrb	w1, [x19, #1]!
  41c144:	sub	w0, w1, #0x2e
  41c148:	and	w0, w0, #0xff
  41c14c:	cmp	w0, #0x1
  41c150:	b.ls	41c140 <wcrtomb@plt+0x17520>  // b.plast
  41c154:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c158:	ldr	x22, [x0, #696]
  41c15c:	cbz	w1, 41c1cc <wcrtomb@plt+0x175ac>
  41c160:	mov	x0, x22
  41c164:	str	x23, [sp, #48]
  41c168:	bl	403ff0 <strlen@plt>
  41c16c:	mov	x23, x0
  41c170:	mov	x1, x22
  41c174:	mov	x0, x19
  41c178:	sxtw	x23, w23
  41c17c:	mov	x2, x23
  41c180:	bl	4043c0 <strncmp@plt>
  41c184:	cbnz	w0, 41c198 <wcrtomb@plt+0x17578>
  41c188:	ldrb	w0, [x19, x23]
  41c18c:	cmp	w0, #0x2f
  41c190:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41c194:	b.eq	41c1dc <wcrtomb@plt+0x175bc>  // b.none
  41c198:	mov	x1, x21
  41c19c:	mov	x0, x22
  41c1a0:	bl	427450 <wcrtomb@plt+0x22830>
  41c1a4:	str	x0, [x20, #8]
  41c1a8:	bl	41ec68 <wcrtomb@plt+0x1a048>
  41c1ac:	ldr	x23, [sp, #48]
  41c1b0:	mov	x0, x21
  41c1b4:	bl	4047b0 <free@plt>
  41c1b8:	ldp	x19, x20, [sp, #16]
  41c1bc:	ldp	x21, x22, [sp, #32]
  41c1c0:	ldp	x29, x30, [sp], #80
  41c1c4:	ret
  41c1c8:	ret
  41c1cc:	mov	x0, x22
  41c1d0:	bl	450328 <argp_parse@@Base+0x10548>
  41c1d4:	str	x0, [x20, #8]
  41c1d8:	b	41c1b0 <wcrtomb@plt+0x17590>
  41c1dc:	ldr	x23, [sp, #48]
  41c1e0:	b	41c0bc <wcrtomb@plt+0x1749c>
  41c1e4:	nop
  41c1e8:	movi	v0.4s, #0x0
  41c1ec:	mov	x4, x0
  41c1f0:	mov	x2, x0
  41c1f4:	and	w6, w1, #0xff
  41c1f8:	add	x0, x0, #0x200
  41c1fc:	mov	v1.16b, v0.16b
  41c200:	ldr	q2, [x2], #16
  41c204:	uxtl	v5.8h, v2.8b
  41c208:	cmp	x0, x2
  41c20c:	sxtl	v4.8h, v2.8b
  41c210:	uxtl2	v3.8h, v2.16b
  41c214:	sxtl2	v2.8h, v2.16b
  41c218:	uaddw	v1.4s, v1.4s, v5.4h
  41c21c:	saddw	v0.4s, v0.4s, v4.4h
  41c220:	uaddw2	v1.4s, v1.4s, v5.8h
  41c224:	saddw2	v0.4s, v0.4s, v4.8h
  41c228:	uaddw	v1.4s, v1.4s, v3.4h
  41c22c:	saddw	v0.4s, v0.4s, v2.4h
  41c230:	uaddw2	v1.4s, v1.4s, v3.8h
  41c234:	saddw2	v0.4s, v0.4s, v2.8h
  41c238:	b.ne	41c200 <wcrtomb@plt+0x175e0>  // b.any
  41c23c:	addv	s1, v1.4s
  41c240:	mov	w0, #0x3                   	// #3
  41c244:	addv	s0, v0.4s
  41c248:	mov	w3, v1.s[0]
  41c24c:	mov	w2, v0.s[0]
  41c250:	cbz	w3, 41c304 <wcrtomb@plt+0x176e4>
  41c254:	stp	x29, x30, [sp, #-32]!
  41c258:	mov	x0, x4
  41c25c:	mov	x29, sp
  41c260:	ldrb	w1, [x4, #155]
  41c264:	ldrb	w8, [x4, #154]
  41c268:	ldrb	w5, [x4, #153]
  41c26c:	sub	w3, w3, w1
  41c270:	ldrb	w7, [x4, #152]
  41c274:	sub	w1, w2, w1, sxtb
  41c278:	sub	w1, w1, w8, sxtb
  41c27c:	sub	w2, w3, w8
  41c280:	ldrb	w3, [x4, #151]
  41c284:	sub	w2, w2, w5
  41c288:	sub	w1, w1, w5, sxtb
  41c28c:	ldrb	w5, [x4, #150]
  41c290:	sub	w2, w2, w7
  41c294:	ldrb	w4, [x4, #149]
  41c298:	sub	w1, w1, w7, sxtb
  41c29c:	sub	w2, w2, w3
  41c2a0:	sub	w1, w1, w3, sxtb
  41c2a4:	ldrb	w3, [x0, #148]!
  41c2a8:	sub	w2, w2, w5
  41c2ac:	sub	w1, w1, w5, sxtb
  41c2b0:	sub	w2, w2, w4
  41c2b4:	sub	w1, w1, w4, sxtb
  41c2b8:	sub	w2, w2, w3
  41c2bc:	sub	w1, w1, w3, sxtb
  41c2c0:	mov	w5, #0x1                   	// #1
  41c2c4:	mov	x4, #0x7fffffff            	// #2147483647
  41c2c8:	mov	x3, #0x0                   	// #0
  41c2cc:	stp	x19, x20, [sp, #16]
  41c2d0:	add	w20, w2, #0x100
  41c2d4:	add	w19, w1, #0x100
  41c2d8:	mov	x2, #0x0                   	// #0
  41c2dc:	mov	x1, #0x8                   	// #8
  41c2e0:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c2e4:	tbnz	w0, #31, 41c308 <wcrtomb@plt+0x176e8>
  41c2e8:	cmp	w20, w0
  41c2ec:	mov	w1, #0x5                   	// #5
  41c2f0:	ccmp	w19, w0, #0x4, ne  // ne = any
  41c2f4:	csinc	w0, w1, wzr, ne  // ne = any
  41c2f8:	ldp	x19, x20, [sp, #16]
  41c2fc:	ldp	x29, x30, [sp], #32
  41c300:	ret
  41c304:	ret
  41c308:	mov	w0, #0x5                   	// #5
  41c30c:	ldp	x19, x20, [sp, #16]
  41c310:	ldp	x29, x30, [sp], #32
  41c314:	ret
  41c318:	stp	x29, x30, [sp, #-384]!
  41c31c:	mov	x29, sp
  41c320:	stp	x19, x20, [sp, #16]
  41c324:	mov	x20, x1
  41c328:	mov	w19, w2
  41c32c:	stp	x21, x22, [sp, #32]
  41c330:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41c334:	mov	x21, x0
  41c338:	add	x22, x22, #0x6e8
  41c33c:	stp	x23, x24, [sp, #48]
  41c340:	mov	x23, #0x0                   	// #0
  41c344:	mov	x24, #0x0                   	// #0
  41c348:	stp	x25, x26, [sp, #64]
  41c34c:	stp	x27, x28, [sp, #80]
  41c350:	stp	xzr, xzr, [sp, #96]
  41c354:	nop
  41c358:	bl	406550 <wcrtomb@plt+0x1930>
  41c35c:	str	x0, [x21]
  41c360:	mov	x26, x0
  41c364:	cbz	x0, 41c584 <wcrtomb@plt+0x17964>
  41c368:	movi	v0.4s, #0x0
  41c36c:	add	x1, x0, #0x200
  41c370:	mov	v1.16b, v0.16b
  41c374:	nop
  41c378:	ldr	q2, [x0], #16
  41c37c:	uxtl	v5.8h, v2.8b
  41c380:	cmp	x0, x1
  41c384:	sxtl	v4.8h, v2.8b
  41c388:	uxtl2	v3.8h, v2.16b
  41c38c:	sxtl2	v2.8h, v2.16b
  41c390:	uaddw	v1.4s, v1.4s, v5.4h
  41c394:	saddw	v0.4s, v0.4s, v4.4h
  41c398:	uaddw2	v1.4s, v1.4s, v5.8h
  41c39c:	saddw2	v0.4s, v0.4s, v4.8h
  41c3a0:	uaddw	v1.4s, v1.4s, v3.4h
  41c3a4:	saddw	v0.4s, v0.4s, v2.4h
  41c3a8:	uaddw2	v1.4s, v1.4s, v3.8h
  41c3ac:	saddw2	v0.4s, v0.4s, v2.8h
  41c3b0:	b.ne	41c378 <wcrtomb@plt+0x17758>  // b.any
  41c3b4:	addv	s1, v1.4s
  41c3b8:	addv	s0, v0.4s
  41c3bc:	mov	w1, v1.s[0]
  41c3c0:	mov	w3, v0.s[0]
  41c3c4:	cbz	w1, 41c670 <wcrtomb@plt+0x17a50>
  41c3c8:	ldrb	w2, [x26, #155]
  41c3cc:	mov	x0, x26
  41c3d0:	ldrb	w5, [x26, #154]
  41c3d4:	mov	w6, #0x0                   	// #0
  41c3d8:	ldrb	w4, [x26, #153]
  41c3dc:	sub	w27, w1, w2
  41c3e0:	sub	w3, w3, w2, sxtb
  41c3e4:	ldrb	w2, [x26, #152]
  41c3e8:	ldrb	w1, [x26, #151]
  41c3ec:	sub	w27, w27, w5
  41c3f0:	sub	w3, w3, w5, sxtb
  41c3f4:	sub	w27, w27, w4
  41c3f8:	sub	w3, w3, w4, sxtb
  41c3fc:	ldrb	w4, [x26, #150]
  41c400:	sub	w27, w27, w2
  41c404:	sub	w3, w3, w2, sxtb
  41c408:	ldrb	w2, [x26, #149]
  41c40c:	sub	w27, w27, w1
  41c410:	sub	w3, w3, w1, sxtb
  41c414:	ldrb	w1, [x0, #148]!
  41c418:	sub	w27, w27, w4
  41c41c:	sub	w3, w3, w4, sxtb
  41c420:	sub	w27, w27, w2
  41c424:	sub	w3, w3, w2, sxtb
  41c428:	sub	w3, w3, w1, sxtb
  41c42c:	sub	w27, w27, w1
  41c430:	add	w28, w3, #0x100
  41c434:	add	w27, w27, #0x100
  41c438:	mov	w5, #0x1                   	// #1
  41c43c:	mov	x4, #0x7fffffff            	// #2147483647
  41c440:	mov	x3, #0x0                   	// #0
  41c444:	mov	x2, #0x0                   	// #0
  41c448:	mov	x1, #0x8                   	// #8
  41c44c:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c450:	tbnz	w0, #31, 41c650 <wcrtomb@plt+0x17a30>
  41c454:	cmp	w27, w0
  41c458:	ccmp	w28, w0, #0x4, ne  // ne = any
  41c45c:	b.ne	41c650 <wcrtomb@plt+0x17a30>  // b.any
  41c460:	ldrb	w0, [x26, #156]
  41c464:	cmp	w0, #0x31
  41c468:	b.ne	41c4f0 <wcrtomb@plt+0x178d0>  // b.any
  41c46c:	str	xzr, [x20, #136]
  41c470:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c474:	ldr	x0, [x21, #88]
  41c478:	bl	4047b0 <free@plt>
  41c47c:	cbz	x24, 41c7b0 <wcrtomb@plt+0x17b90>
  41c480:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c484:	add	x19, x24, #0x200
  41c488:	ldr	x1, [sp, #104]
  41c48c:	str	x24, [x21, #88]
  41c490:	str	x1, [x0, #96]
  41c494:	mov	x1, x19
  41c498:	mov	x0, x20
  41c49c:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41c4a0:	mov	x1, x19
  41c4a4:	add	x0, x20, #0x8
  41c4a8:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41c4ac:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c4b0:	ldr	x0, [x20, #8]
  41c4b4:	bl	4415f0 <argp_parse@@Base+0x1810>
  41c4b8:	mov	w1, w0
  41c4bc:	ldr	x0, [x19, #120]
  41c4c0:	strb	w1, [x20, #16]
  41c4c4:	bl	4047b0 <free@plt>
  41c4c8:	cbz	x23, 41c820 <wcrtomb@plt+0x17c00>
  41c4cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c4d0:	add	x1, x23, #0x200
  41c4d4:	ldr	x2, [sp, #96]
  41c4d8:	str	x23, [x19, #120]
  41c4dc:	str	x2, [x0, #112]
  41c4e0:	add	x0, x20, #0x18
  41c4e4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41c4e8:	mov	w0, #0x1                   	// #1
  41c4ec:	b	41c654 <wcrtomb@plt+0x17a34>
  41c4f0:	add	x27, x26, #0x7c
  41c4f4:	mov	x2, x22
  41c4f8:	mov	x0, x27
  41c4fc:	mov	w6, #0x0                   	// #0
  41c500:	mov	w5, #0x0                   	// #0
  41c504:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41c508:	mov	x3, #0x0                   	// #0
  41c50c:	mov	x1, #0xc                   	// #12
  41c510:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c514:	str	x0, [x20, #136]
  41c518:	tbnz	x0, #63, 41c650 <wcrtomb@plt+0x17a30>
  41c51c:	ldrb	w1, [x26, #156]
  41c520:	sub	w2, w1, #0x4b
  41c524:	cmp	w1, #0x78
  41c528:	and	w2, w2, #0xff
  41c52c:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  41c530:	b.hi	41c5a4 <wcrtomb@plt+0x17984>  // b.pmore
  41c534:	cmp	w19, #0x1
  41c538:	b.eq	41c630 <wcrtomb@plt+0x17a10>  // b.none
  41c53c:	cmp	w2, #0x1
  41c540:	b.ls	41c690 <wcrtomb@plt+0x17a70>  // b.plast
  41c544:	mov	w6, #0x0                   	// #0
  41c548:	mov	w5, #0x0                   	// #0
  41c54c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41c550:	mov	x3, #0x0                   	// #0
  41c554:	mov	x2, x22
  41c558:	mov	x1, #0xc                   	// #12
  41c55c:	mov	x0, x27
  41c560:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c564:	mov	x1, x26
  41c568:	mov	x2, x0
  41c56c:	add	x0, x20, #0x158
  41c570:	bl	417598 <wcrtomb@plt+0x12978>
  41c574:	bl	406550 <wcrtomb@plt+0x1930>
  41c578:	str	x0, [x21]
  41c57c:	mov	x26, x0
  41c580:	cbnz	x0, 41c368 <wcrtomb@plt+0x17748>
  41c584:	mov	w0, #0x4                   	// #4
  41c588:	ldp	x19, x20, [sp, #16]
  41c58c:	ldp	x21, x22, [sp, #32]
  41c590:	ldp	x23, x24, [sp, #48]
  41c594:	ldp	x25, x26, [sp, #64]
  41c598:	ldp	x27, x28, [sp, #80]
  41c59c:	ldp	x29, x30, [sp], #384
  41c5a0:	ret
  41c5a4:	cmp	w1, #0x67
  41c5a8:	mov	w0, #0x58                  	// #88
  41c5ac:	ccmp	w1, w0, #0x4, ne  // ne = any
  41c5b0:	b.ne	41c470 <wcrtomb@plt+0x17850>  // b.any
  41c5b4:	cmp	w19, #0x1
  41c5b8:	b.eq	41c630 <wcrtomb@plt+0x17a10>  // b.none
  41c5bc:	cmp	w1, #0x58
  41c5c0:	b.eq	41c544 <wcrtomb@plt+0x17924>  // b.none
  41c5c4:	adrp	x28, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41c5c8:	add	x28, x28, #0x910
  41c5cc:	ldr	x0, [x28, #280]
  41c5d0:	cbz	x0, 41c7a0 <wcrtomb@plt+0x17b80>
  41c5d4:	mov	x1, x26
  41c5d8:	mov	x2, #0x200                 	// #512
  41c5dc:	bl	403f70 <memcpy@plt>
  41c5e0:	stp	xzr, xzr, [sp, #120]
  41c5e4:	mov	w6, #0x0                   	// #0
  41c5e8:	mov	w5, #0x0                   	// #0
  41c5ec:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41c5f0:	mov	x3, #0x0                   	// #0
  41c5f4:	mov	x2, x22
  41c5f8:	mov	x1, #0xc                   	// #12
  41c5fc:	mov	x0, x27
  41c600:	stp	xzr, xzr, [sp, #136]
  41c604:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c608:	mov	x1, x26
  41c60c:	mov	x2, x0
  41c610:	add	x0, sp, #0x78
  41c614:	bl	417598 <wcrtomb@plt+0x12978>
  41c618:	add	x0, sp, #0x78
  41c61c:	bl	417128 <wcrtomb@plt+0x12508>
  41c620:	add	x0, sp, #0x78
  41c624:	bl	417868 <wcrtomb@plt+0x12c48>
  41c628:	cmp	w19, #0x2
  41c62c:	b.ne	41c358 <wcrtomb@plt+0x17738>  // b.any
  41c630:	mov	w0, #0x2                   	// #2
  41c634:	ldp	x19, x20, [sp, #16]
  41c638:	ldp	x21, x22, [sp, #32]
  41c63c:	ldp	x23, x24, [sp, #48]
  41c640:	ldp	x25, x26, [sp, #64]
  41c644:	ldp	x27, x28, [sp, #80]
  41c648:	ldp	x29, x30, [sp], #384
  41c64c:	ret
  41c650:	mov	w0, #0x5                   	// #5
  41c654:	ldp	x19, x20, [sp, #16]
  41c658:	ldp	x21, x22, [sp, #32]
  41c65c:	ldp	x23, x24, [sp, #48]
  41c660:	ldp	x25, x26, [sp, #64]
  41c664:	ldp	x27, x28, [sp, #80]
  41c668:	ldp	x29, x30, [sp], #384
  41c66c:	ret
  41c670:	mov	w0, #0x3                   	// #3
  41c674:	ldp	x19, x20, [sp, #16]
  41c678:	ldp	x21, x22, [sp, #32]
  41c67c:	ldp	x23, x24, [sp, #48]
  41c680:	ldp	x25, x26, [sp, #64]
  41c684:	ldp	x27, x28, [sp, #80]
  41c688:	ldp	x29, x30, [sp], #384
  41c68c:	ret
  41c690:	add	x27, x0, #0x200
  41c694:	ands	x1, x0, #0x1ff
  41c698:	b.eq	41c6ac <wcrtomb@plt+0x17a8c>  // b.none
  41c69c:	add	x27, x0, #0x400
  41c6a0:	sub	x27, x27, x1
  41c6a4:	cmp	x0, x27
  41c6a8:	b.hi	41c8ac <wcrtomb@plt+0x17c8c>  // b.pmore
  41c6ac:	add	x0, x27, #0x1
  41c6b0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41c6b4:	ldrb	w1, [x26, #156]
  41c6b8:	mov	x28, x0
  41c6bc:	lsr	x2, x27, #9
  41c6c0:	cmp	w1, #0x4c
  41c6c4:	b.eq	41c78c <wcrtomb@plt+0x17b6c>  // b.none
  41c6c8:	mov	x0, x23
  41c6cc:	mov	x23, x28
  41c6d0:	str	x2, [sp, #96]
  41c6d4:	bl	4047b0 <free@plt>
  41c6d8:	mov	x0, x26
  41c6dc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41c6e0:	mov	x0, x28
  41c6e4:	mov	x1, x26
  41c6e8:	mov	x2, #0x200                 	// #512
  41c6ec:	bl	403f70 <memcpy@plt>
  41c6f0:	add	x28, x28, #0x200
  41c6f4:	subs	x27, x27, #0x200
  41c6f8:	b.ne	41c738 <wcrtomb@plt+0x17b18>  // b.any
  41c6fc:	b	41c784 <wcrtomb@plt+0x17b64>
  41c700:	bl	406128 <wcrtomb@plt+0x1508>
  41c704:	cmp	x27, x0
  41c708:	mov	x2, x0
  41c70c:	mov	x1, x25
  41c710:	csel	x26, x27, x2, ls  // ls = plast
  41c714:	mov	x0, x28
  41c718:	mov	x2, x26
  41c71c:	bl	403f70 <memcpy@plt>
  41c720:	sub	x0, x26, #0x1
  41c724:	add	x28, x28, x26
  41c728:	add	x0, x25, x0
  41c72c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41c730:	subs	x27, x27, x26
  41c734:	b.eq	41c784 <wcrtomb@plt+0x17b64>  // b.none
  41c738:	bl	406550 <wcrtomb@plt+0x1930>
  41c73c:	mov	x25, x0
  41c740:	cbnz	x0, 41c700 <wcrtomb@plt+0x17ae0>
  41c744:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c748:	ldr	x0, [x0, #1136]
  41c74c:	cbz	x0, 41c754 <wcrtomb@plt+0x17b34>
  41c750:	blr	x0
  41c754:	mov	w2, #0x5                   	// #5
  41c758:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41c75c:	mov	x0, #0x0                   	// #0
  41c760:	add	x1, x1, #0x378
  41c764:	bl	4049c0 <dcgettext@plt>
  41c768:	mov	x2, x0
  41c76c:	mov	w1, #0x0                   	// #0
  41c770:	mov	w0, #0x0                   	// #0
  41c774:	bl	404050 <error@plt>
  41c778:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41c77c:	mov	w1, #0x2                   	// #2
  41c780:	str	w1, [x0, #3568]
  41c784:	strb	wzr, [x28]
  41c788:	b	41c358 <wcrtomb@plt+0x17738>
  41c78c:	mov	x0, x24
  41c790:	mov	x24, x28
  41c794:	str	x2, [sp, #104]
  41c798:	bl	4047b0 <free@plt>
  41c79c:	b	41c6d8 <wcrtomb@plt+0x17ab8>
  41c7a0:	mov	x0, #0x200                 	// #512
  41c7a4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41c7a8:	str	x0, [x28, #280]
  41c7ac:	b	41c5d4 <wcrtomb@plt+0x179b4>
  41c7b0:	ldrb	w0, [x26, #345]
  41c7b4:	cbz	w0, 41c7cc <wcrtomb@plt+0x17bac>
  41c7b8:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  41c7bc:	add	x0, x26, #0x101
  41c7c0:	add	x1, x1, #0xaf8
  41c7c4:	bl	404710 <strcmp@plt>
  41c7c8:	cbz	w0, 41c874 <wcrtomb@plt+0x17c54>
  41c7cc:	add	x19, sp, #0x78
  41c7d0:	mov	x0, x19
  41c7d4:	ldp	x2, x3, [x26]
  41c7d8:	stp	x2, x3, [x0]
  41c7dc:	ldp	x4, x5, [x26, #16]
  41c7e0:	stp	x4, x5, [x0, #16]
  41c7e4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c7e8:	ldp	x4, x5, [x26, #32]
  41c7ec:	stp	x4, x5, [x0, #32]
  41c7f0:	ldp	x4, x5, [x26, #48]
  41c7f4:	stp	x4, x5, [x0, #48]
  41c7f8:	ldp	x4, x5, [x26, #64]
  41c7fc:	stp	x4, x5, [x0, #64]
  41c800:	ldp	x4, x5, [x26, #80]
  41c804:	stp	x4, x5, [x0, #80]
  41c808:	ldr	w1, [x26, #96]
  41c80c:	str	xzr, [x21, #88]
  41c810:	str	xzr, [x2, #96]
  41c814:	str	w1, [x0, #96]
  41c818:	strb	wzr, [x0, #100]
  41c81c:	b	41c494 <wcrtomb@plt+0x17874>
  41c820:	add	x7, x26, #0x9d
  41c824:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c828:	add	x1, sp, #0x78
  41c82c:	str	xzr, [x19, #120]
  41c830:	str	xzr, [x0, #112]
  41c834:	ldp	x2, x3, [x7]
  41c838:	stp	x2, x3, [sp, #120]
  41c83c:	ldp	x2, x3, [x7, #16]
  41c840:	stp	x2, x3, [sp, #136]
  41c844:	ldp	x2, x3, [x7, #32]
  41c848:	stp	x2, x3, [sp, #152]
  41c84c:	ldp	x2, x3, [x7, #48]
  41c850:	stp	x2, x3, [sp, #168]
  41c854:	ldp	x2, x3, [x7, #64]
  41c858:	stp	x2, x3, [sp, #184]
  41c85c:	ldp	x2, x3, [x7, #80]
  41c860:	stp	x2, x3, [sp, #200]
  41c864:	ldur	w0, [x26, #253]
  41c868:	str	w0, [sp, #216]
  41c86c:	strb	wzr, [sp, #220]
  41c870:	b	41c4e0 <wcrtomb@plt+0x178c0>
  41c874:	add	x1, x26, #0x159
  41c878:	add	x19, sp, #0x78
  41c87c:	mov	x2, #0x9b                  	// #155
  41c880:	mov	x0, x19
  41c884:	bl	403f70 <memcpy@plt>
  41c888:	strb	wzr, [sp, #275]
  41c88c:	mov	x0, x19
  41c890:	bl	403ff0 <strlen@plt>
  41c894:	mov	x1, x0
  41c898:	add	x0, x19, x0
  41c89c:	mov	w2, #0x2f                  	// #47
  41c8a0:	add	x0, x0, #0x1
  41c8a4:	strb	w2, [x19, x1]
  41c8a8:	b	41c7d4 <wcrtomb@plt+0x17bb4>
  41c8ac:	bl	4104a0 <wcrtomb@plt+0xb880>
  41c8b0:	stp	x29, x30, [sp, #-80]!
  41c8b4:	mov	w6, #0x0                   	// #0
  41c8b8:	mov	w5, #0x0                   	// #0
  41c8bc:	mov	x29, sp
  41c8c0:	stp	x23, x24, [sp, #48]
  41c8c4:	mov	x24, x2
  41c8c8:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41c8cc:	add	x2, x2, #0x788
  41c8d0:	mov	w23, w3
  41c8d4:	mov	x4, #0xffffffffffffffff    	// #-1
  41c8d8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41c8dc:	stp	x19, x20, [sp, #16]
  41c8e0:	mov	x20, x0
  41c8e4:	mov	x19, x1
  41c8e8:	add	x0, x0, #0x64
  41c8ec:	mov	x1, #0x8                   	// #8
  41c8f0:	stp	x21, x22, [sp, #32]
  41c8f4:	add	x21, x20, #0x101
  41c8f8:	str	x25, [sp, #64]
  41c8fc:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c900:	mov	x22, x0
  41c904:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  41c908:	mov	x0, x21
  41c90c:	and	w25, w22, #0xfff
  41c910:	add	x1, x1, #0xaf8
  41c914:	bl	404710 <strcmp@plt>
  41c918:	cbnz	w0, 41cba8 <wcrtomb@plt+0x17f88>
  41c91c:	ldrb	w0, [x20, #475]
  41c920:	cbz	w0, 41caa0 <wcrtomb@plt+0x17e80>
  41c924:	ldr	x0, [x19, #352]
  41c928:	cmp	x0, #0x0
  41c92c:	cset	w21, ne  // ne = any
  41c930:	add	w21, w21, #0x3
  41c934:	str	w21, [x24]
  41c938:	adrp	x22, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41c93c:	str	w25, [x19, #104]
  41c940:	add	x22, x22, #0x6f0
  41c944:	mov	w6, #0x0                   	// #0
  41c948:	mov	w5, #0x0                   	// #0
  41c94c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41c950:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41c954:	mov	x2, x22
  41c958:	mov	x1, #0xc                   	// #12
  41c95c:	add	x0, x20, #0x88
  41c960:	bl	41b938 <wcrtomb@plt+0x16d18>
  41c964:	ldrb	w2, [x20, #265]
  41c968:	add	x1, x20, #0x109
  41c96c:	stp	x0, xzr, [x19, #232]
  41c970:	cmp	w2, #0x0
  41c974:	csel	x1, x1, xzr, ne  // ne = any
  41c978:	mov	x2, #0x20                  	// #32
  41c97c:	add	x0, x19, x2
  41c980:	bl	41e910 <wcrtomb@plt+0x19cf0>
  41c984:	ldrb	w0, [x20, #297]
  41c988:	add	x1, x20, #0x129
  41c98c:	mov	x2, #0x20                  	// #32
  41c990:	cmp	w0, #0x0
  41c994:	add	x0, x19, #0x28
  41c998:	csel	x1, x1, xzr, ne  // ne = any
  41c99c:	bl	41e910 <wcrtomb@plt+0x19cf0>
  41c9a0:	mov	x0, x19
  41c9a4:	bl	416a78 <wcrtomb@plt+0x11e58>
  41c9a8:	cmp	w21, #0x2
  41c9ac:	b.eq	41cbd4 <wcrtomb@plt+0x17fb4>  // b.none
  41c9b0:	cmp	w21, #0x5
  41c9b4:	b.eq	41cc98 <wcrtomb@plt+0x18078>  // b.none
  41c9b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c9bc:	add	x0, x0, #0x348
  41c9c0:	cmp	w21, #0x1
  41c9c4:	ldp	x0, x1, [x0]
  41c9c8:	stp	x0, x1, [x19, #216]
  41c9cc:	stp	x0, x1, [x19, #248]
  41c9d0:	b.eq	41cae8 <wcrtomb@plt+0x17ec8>  // b.none
  41c9d4:	cbz	w23, 41ca4c <wcrtomb@plt+0x17e2c>
  41c9d8:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  41c9dc:	ldrb	w0, [x21, #800]
  41c9e0:	cbnz	w0, 41c9ec <wcrtomb@plt+0x17dcc>
  41c9e4:	ldrb	w0, [x20, #265]
  41c9e8:	cbnz	w0, 41cc70 <wcrtomb@plt+0x18050>
  41c9ec:	add	x0, x20, #0x6c
  41c9f0:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41c9f4:	mov	w6, #0x0                   	// #0
  41c9f8:	add	x2, x2, #0x798
  41c9fc:	mov	w5, #0x0                   	// #0
  41ca00:	mov	x4, #0xffffffff            	// #4294967295
  41ca04:	mov	x3, #0x0                   	// #0
  41ca08:	mov	x1, #0x8                   	// #8
  41ca0c:	bl	41b938 <wcrtomb@plt+0x16d18>
  41ca10:	str	w0, [x19, #112]
  41ca14:	ldrb	w0, [x21, #800]
  41ca18:	cbnz	w0, 41ca24 <wcrtomb@plt+0x17e04>
  41ca1c:	ldrb	w0, [x20, #297]
  41ca20:	cbnz	w0, 41cc84 <wcrtomb@plt+0x18064>
  41ca24:	add	x0, x20, #0x74
  41ca28:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41ca2c:	mov	w6, #0x0                   	// #0
  41ca30:	add	x2, x2, #0x7a8
  41ca34:	mov	w5, #0x0                   	// #0
  41ca38:	mov	x4, #0xffffffff            	// #4294967295
  41ca3c:	mov	x3, #0x0                   	// #0
  41ca40:	mov	x1, #0x8                   	// #8
  41ca44:	bl	41b938 <wcrtomb@plt+0x16d18>
  41ca48:	str	w0, [x19, #116]
  41ca4c:	ldrb	w0, [x20, #156]
  41ca50:	sub	w0, w0, #0x33
  41ca54:	cmp	w0, #0x1
  41ca58:	b.ls	41cbf8 <wcrtomb@plt+0x17fd8>  // b.plast
  41ca5c:	str	xzr, [x19, #120]
  41ca60:	mov	x0, x19
  41ca64:	bl	416dc0 <wcrtomb@plt+0x121a0>
  41ca68:	mov	x0, x19
  41ca6c:	bl	429940 <wcrtomb@plt+0x24d20>
  41ca70:	tst	w0, #0xff
  41ca74:	b.eq	41cb54 <wcrtomb@plt+0x17f34>  // b.none
  41ca78:	mov	x0, x19
  41ca7c:	bl	429a08 <wcrtomb@plt+0x24de8>
  41ca80:	mov	w0, #0x1                   	// #1
  41ca84:	strb	w0, [x19, #272]
  41ca88:	ldp	x19, x20, [sp, #16]
  41ca8c:	ldp	x21, x22, [sp, #32]
  41ca90:	ldp	x23, x24, [sp, #48]
  41ca94:	ldr	x25, [sp, #64]
  41ca98:	ldp	x29, x30, [sp], #80
  41ca9c:	ret
  41caa0:	ldrb	w0, [x20, #476]
  41caa4:	sub	w0, w0, #0x30
  41caa8:	and	w0, w0, #0xff
  41caac:	cmp	w0, #0x7
  41cab0:	b.hi	41c924 <wcrtomb@plt+0x17d04>  // b.pmore
  41cab4:	ldrb	w0, [x20, #487]
  41cab8:	cmp	w0, #0x20
  41cabc:	b.ne	41c924 <wcrtomb@plt+0x17d04>  // b.any
  41cac0:	ldrb	w0, [x20, #488]
  41cac4:	sub	w0, w0, #0x30
  41cac8:	and	w0, w0, #0xff
  41cacc:	cmp	w0, #0x7
  41cad0:	b.hi	41c924 <wcrtomb@plt+0x17d04>  // b.pmore
  41cad4:	ldrb	w0, [x20, #499]
  41cad8:	mov	w21, #0x5                   	// #5
  41cadc:	cmp	w0, #0x20
  41cae0:	b.ne	41c924 <wcrtomb@plt+0x17d04>  // b.any
  41cae4:	b	41c934 <wcrtomb@plt+0x17d14>
  41cae8:	mov	w6, #0x0                   	// #0
  41caec:	mov	w5, #0x0                   	// #0
  41caf0:	mov	x4, #0xffffffff            	// #4294967295
  41caf4:	mov	x3, #0x0                   	// #0
  41caf8:	mov	x1, #0x8                   	// #8
  41cafc:	add	x0, x20, #0x6c
  41cb00:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41cb04:	add	x2, x2, #0x798
  41cb08:	bl	41b938 <wcrtomb@plt+0x16d18>
  41cb0c:	str	w0, [x19, #112]
  41cb10:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41cb14:	add	x0, x20, #0x74
  41cb18:	add	x2, x2, #0x7a8
  41cb1c:	mov	w6, #0x0                   	// #0
  41cb20:	mov	w5, #0x0                   	// #0
  41cb24:	mov	x4, #0xffffffff            	// #4294967295
  41cb28:	mov	x3, #0x0                   	// #0
  41cb2c:	mov	x1, #0x8                   	// #8
  41cb30:	bl	41b938 <wcrtomb@plt+0x16d18>
  41cb34:	str	w0, [x19, #116]
  41cb38:	str	xzr, [x19, #120]
  41cb3c:	mov	x0, x19
  41cb40:	bl	416dc0 <wcrtomb@plt+0x121a0>
  41cb44:	mov	x0, x19
  41cb48:	bl	429940 <wcrtomb@plt+0x24d20>
  41cb4c:	tst	w0, #0xff
  41cb50:	b.ne	41ca78 <wcrtomb@plt+0x17e58>  // b.any
  41cb54:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cb58:	strb	wzr, [x19, #272]
  41cb5c:	ldr	w0, [x0, #80]
  41cb60:	and	w0, w0, #0xfffffffb
  41cb64:	cmp	w0, #0x2
  41cb68:	b.ne	41cb80 <wcrtomb@plt+0x17f60>  // b.any
  41cb6c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cb70:	ldr	x0, [x0, #104]
  41cb74:	ldrb	w0, [x0, #156]
  41cb78:	cmp	w0, #0x44
  41cb7c:	b.eq	41cb88 <wcrtomb@plt+0x17f68>  // b.none
  41cb80:	ldr	x0, [x19, #384]
  41cb84:	cbz	x0, 41cb90 <wcrtomb@plt+0x17f70>
  41cb88:	mov	w0, #0x1                   	// #1
  41cb8c:	strb	w0, [x19, #376]
  41cb90:	ldp	x19, x20, [sp, #16]
  41cb94:	ldp	x21, x22, [sp, #32]
  41cb98:	ldp	x23, x24, [sp, #48]
  41cb9c:	ldr	x25, [sp, #64]
  41cba0:	ldp	x29, x30, [sp], #80
  41cba4:	ret
  41cba8:	mov	x0, x21
  41cbac:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  41cbb0:	mov	w21, #0x1                   	// #1
  41cbb4:	add	x1, x1, #0xb00
  41cbb8:	bl	404710 <strcmp@plt>
  41cbbc:	cbnz	w0, 41c934 <wcrtomb@plt+0x17d14>
  41cbc0:	tst	x22, #0xfffffffffffff000
  41cbc4:	mov	w21, #0x2                   	// #2
  41cbc8:	mov	w0, #0x6                   	// #6
  41cbcc:	csel	w21, w21, w0, ne  // ne = any
  41cbd0:	b	41c934 <wcrtomb@plt+0x17d14>
  41cbd4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cbd8:	ldrb	w0, [x0, #161]
  41cbdc:	cbnz	w0, 41cce8 <wcrtomb@plt+0x180c8>
  41cbe0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cbe4:	add	x0, x0, #0x348
  41cbe8:	ldp	x0, x1, [x0]
  41cbec:	stp	x0, x1, [x19, #216]
  41cbf0:	stp	x0, x1, [x19, #248]
  41cbf4:	b	41c9d4 <wcrtomb@plt+0x17db4>
  41cbf8:	mov	w6, #0x0                   	// #0
  41cbfc:	mov	w5, #0x0                   	// #0
  41cc00:	mov	x4, #0x7fffffff            	// #2147483647
  41cc04:	mov	x3, #0xffffffff80000000    	// #-2147483648
  41cc08:	mov	x1, #0x8                   	// #8
  41cc0c:	add	x0, x20, #0x149
  41cc10:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41cc14:	add	x2, x2, #0x7c8
  41cc18:	bl	41b938 <wcrtomb@plt+0x16d18>
  41cc1c:	mov	x21, x0
  41cc20:	mov	x1, #0x8                   	// #8
  41cc24:	add	x0, x20, #0x151
  41cc28:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41cc2c:	mov	w6, #0x0                   	// #0
  41cc30:	add	x2, x2, #0x7e0
  41cc34:	mov	w5, #0x0                   	// #0
  41cc38:	mov	x4, #0x7fffffff            	// #2147483647
  41cc3c:	mov	x3, #0xffffffff80000000    	// #-2147483648
  41cc40:	bl	41b938 <wcrtomb@plt+0x16d18>
  41cc44:	and	x2, x0, #0xff
  41cc48:	lsl	x1, x21, #32
  41cc4c:	lsl	x0, x0, #12
  41cc50:	and	x1, x1, #0xfffff00000000000
  41cc54:	ubfiz	x21, x21, #8, #12
  41cc58:	and	x0, x0, #0xffffff00000
  41cc5c:	orr	x21, x21, x1
  41cc60:	orr	x0, x0, x2
  41cc64:	orr	x0, x0, x21
  41cc68:	str	x0, [x19, #120]
  41cc6c:	b	41cb3c <wcrtomb@plt+0x17f1c>
  41cc70:	add	x1, x19, #0x70
  41cc74:	add	x0, x20, #0x109
  41cc78:	bl	4220b8 <wcrtomb@plt+0x1d498>
  41cc7c:	cbz	w0, 41c9ec <wcrtomb@plt+0x17dcc>
  41cc80:	b	41ca14 <wcrtomb@plt+0x17df4>
  41cc84:	add	x1, x19, #0x74
  41cc88:	add	x0, x20, #0x129
  41cc8c:	bl	422180 <wcrtomb@plt+0x1d560>
  41cc90:	cbz	w0, 41ca24 <wcrtomb@plt+0x17e04>
  41cc94:	b	41ca4c <wcrtomb@plt+0x17e2c>
  41cc98:	mov	x2, x22
  41cc9c:	mov	w6, #0x0                   	// #0
  41cca0:	mov	w5, #0x0                   	// #0
  41cca4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41cca8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41ccac:	mov	x1, #0xc                   	// #12
  41ccb0:	add	x0, x20, #0x1dc
  41ccb4:	bl	41b938 <wcrtomb@plt+0x16d18>
  41ccb8:	str	x0, [x19, #216]
  41ccbc:	mov	x2, x22
  41ccc0:	add	x0, x20, #0x1e8
  41ccc4:	mov	w6, #0x0                   	// #0
  41ccc8:	mov	w5, #0x0                   	// #0
  41cccc:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41ccd0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41ccd4:	mov	x1, #0xc                   	// #12
  41ccd8:	bl	41b938 <wcrtomb@plt+0x16d18>
  41ccdc:	str	xzr, [x19, #224]
  41cce0:	stp	x0, xzr, [x19, #248]
  41cce4:	b	41c9d4 <wcrtomb@plt+0x17db4>
  41cce8:	mov	x2, x22
  41ccec:	mov	w6, #0x0                   	// #0
  41ccf0:	mov	w5, #0x0                   	// #0
  41ccf4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41ccf8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41ccfc:	mov	x1, #0xc                   	// #12
  41cd00:	add	x0, x20, #0x159
  41cd04:	bl	41b938 <wcrtomb@plt+0x16d18>
  41cd08:	str	x0, [x19, #216]
  41cd0c:	mov	x2, x22
  41cd10:	add	x0, x20, #0x165
  41cd14:	mov	w6, #0x0                   	// #0
  41cd18:	mov	w5, #0x0                   	// #0
  41cd1c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41cd20:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41cd24:	mov	x1, #0xc                   	// #12
  41cd28:	bl	41b938 <wcrtomb@plt+0x16d18>
  41cd2c:	str	xzr, [x19, #224]
  41cd30:	stp	x0, xzr, [x19, #248]
  41cd34:	b	41c9d4 <wcrtomb@plt+0x17db4>
  41cd38:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41cd3c:	mov	w6, #0x0                   	// #0
  41cd40:	add	x2, x2, #0x6e8
  41cd44:	mov	w5, #0x0                   	// #0
  41cd48:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41cd4c:	mov	x3, #0x0                   	// #0
  41cd50:	b	41b938 <wcrtomb@plt+0x16d18>
  41cd54:	nop
  41cd58:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41cd5c:	mov	w6, #0x0                   	// #0
  41cd60:	add	x2, x2, #0x6f8
  41cd64:	mov	w5, #0x0                   	// #0
  41cd68:	mov	x4, #0xffffffffffffffff    	// #-1
  41cd6c:	mov	x3, #0x0                   	// #0
  41cd70:	b	41b938 <wcrtomb@plt+0x16d18>
  41cd74:	nop
  41cd78:	stp	x29, x30, [sp, #-64]!
  41cd7c:	cmp	w1, #0x0
  41cd80:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41cd84:	mov	x29, sp
  41cd88:	stp	x19, x20, [sp, #16]
  41cd8c:	mov	x19, x0
  41cd90:	mov	w20, w1
  41cd94:	stp	x21, x22, [sp, #32]
  41cd98:	and	w21, w2, #0xff
  41cd9c:	str	x0, [sp, #56]
  41cda0:	b.ge	41cdb8 <wcrtomb@plt+0x18198>  // b.tcont
  41cda4:	mov	w20, #0xca00                	// #51712
  41cda8:	add	x0, x0, #0x1
  41cdac:	movk	w20, #0x3b9a, lsl #16
  41cdb0:	sub	w20, w20, w1
  41cdb4:	str	x0, [sp, #56]
  41cdb8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cdbc:	ldrb	w0, [x0, #681]
  41cdc0:	cbz	w0, 41ce58 <wcrtomb@plt+0x18238>
  41cdc4:	add	x0, sp, #0x38
  41cdc8:	bl	404510 <gmtime@plt>
  41cdcc:	mov	x3, x0
  41cdd0:	cbz	x3, 41ce68 <wcrtomb@plt+0x18248>
  41cdd4:	cbnz	w21, 41ce0c <wcrtomb@plt+0x181ec>
  41cdd8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41cddc:	add	x0, x0, #0x910
  41cde0:	add	x0, x0, #0x120
  41cde4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41cde8:	mov	x19, x0
  41cdec:	add	x2, x2, #0xdd8
  41cdf0:	mov	x1, #0x25                  	// #37
  41cdf4:	bl	404150 <strftime@plt>
  41cdf8:	mov	x0, x19
  41cdfc:	ldp	x19, x20, [sp, #16]
  41ce00:	ldp	x21, x22, [sp, #32]
  41ce04:	ldp	x29, x30, [sp], #64
  41ce08:	ret
  41ce0c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  41ce10:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41ce14:	add	x2, x2, #0x7c0
  41ce18:	add	x21, x21, #0x910
  41ce1c:	add	x21, x21, #0x120
  41ce20:	mov	x1, #0x25                  	// #37
  41ce24:	mov	x0, x21
  41ce28:	bl	404150 <strftime@plt>
  41ce2c:	mov	x0, x21
  41ce30:	bl	403ff0 <strlen@plt>
  41ce34:	mov	x19, x21
  41ce38:	add	x1, x21, x0
  41ce3c:	mov	w0, w20
  41ce40:	bl	41f098 <wcrtomb@plt+0x1a478>
  41ce44:	mov	x0, x19
  41ce48:	ldp	x19, x20, [sp, #16]
  41ce4c:	ldp	x21, x22, [sp, #32]
  41ce50:	ldp	x29, x30, [sp], #64
  41ce54:	ret
  41ce58:	add	x0, sp, #0x38
  41ce5c:	bl	404240 <localtime@plt>
  41ce60:	mov	x3, x0
  41ce64:	cbnz	x3, 41cdd4 <wcrtomb@plt+0x181b4>
  41ce68:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41ce6c:	add	x22, x22, #0x910
  41ce70:	ldr	x0, [sp, #56]
  41ce74:	tbnz	x19, #63, 41ced4 <wcrtomb@plt+0x182b4>
  41ce78:	add	x1, x22, #0x126
  41ce7c:	bl	446868 <argp_parse@@Base+0x6a88>
  41ce80:	cmp	w21, #0x0
  41ce84:	add	x2, x22, #0x141
  41ce88:	add	x3, x22, #0x134
  41ce8c:	mov	w1, #0x20                  	// #32
  41ce90:	csel	x2, x2, x3, ne  // ne = any
  41ce94:	subs	x19, x2, x0
  41ce98:	sub	x2, x0, x2
  41ce9c:	csel	x19, x19, xzr, ls  // ls = plast
  41cea0:	csel	x2, x2, xzr, ls  // ls = plast
  41cea4:	add	x19, x0, x19
  41cea8:	mov	x0, x19
  41ceac:	bl	404410 <memset@plt>
  41ceb0:	cbz	w21, 41cdf8 <wcrtomb@plt+0x181d8>
  41ceb4:	add	x1, x22, #0x13a
  41ceb8:	mov	w0, w20
  41cebc:	bl	41f098 <wcrtomb@plt+0x1a478>
  41cec0:	mov	x0, x19
  41cec4:	ldp	x19, x20, [sp, #16]
  41cec8:	ldp	x21, x22, [sp, #32]
  41cecc:	ldp	x29, x30, [sp], #64
  41ced0:	ret
  41ced4:	add	x1, x22, #0x126
  41ced8:	neg	x0, x0
  41cedc:	bl	446868 <argp_parse@@Base+0x6a88>
  41cee0:	mov	x1, x0
  41cee4:	mov	w2, #0x2d                  	// #45
  41cee8:	sub	x0, x0, #0x1
  41ceec:	sturb	w2, [x1, #-1]
  41cef0:	b	41ce80 <wcrtomb@plt+0x18260>
  41cef4:	nop
  41cef8:	sub	sp, sp, #0x120
  41cefc:	stp	x29, x30, [sp, #16]
  41cf00:	add	x29, sp, #0x10
  41cf04:	stp	x25, x26, [sp, #80]
  41cf08:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cf0c:	ldrb	w3, [x26, #968]
  41cf10:	stp	x19, x20, [sp, #32]
  41cf14:	mov	x19, x0
  41cf18:	mov	x0, x2
  41cf1c:	stp	x21, x22, [sp, #48]
  41cf20:	mov	x22, x1
  41cf24:	stp	x23, x24, [sp, #64]
  41cf28:	cbz	w3, 41d430 <wcrtomb@plt+0x18810>
  41cf2c:	ldr	x25, [x19, #8]
  41cf30:	cbz	x25, 41d4e8 <wcrtomb@plt+0x188c8>
  41cf34:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cf38:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41cf3c:	ldrb	w1, [x1, #801]
  41cf40:	cbz	w1, 41cfa0 <wcrtomb@plt+0x18380>
  41cf44:	tbnz	x0, #63, 41d4f0 <wcrtomb@plt+0x188d0>
  41cf48:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cf4c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cf50:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41cf54:	mov	w2, #0x5                   	// #5
  41cf58:	ldr	x3, [x3, #112]
  41cf5c:	ldr	x21, [x1, #96]
  41cf60:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41cf64:	ldr	x24, [x20, #4056]
  41cf68:	add	x21, x21, x3
  41cf6c:	add	x1, x1, #0xde8
  41cf70:	sub	x21, x0, x21
  41cf74:	mov	x0, #0x0                   	// #0
  41cf78:	bl	4049c0 <dcgettext@plt>
  41cf7c:	add	x1, sp, #0xf0
  41cf80:	mov	x23, x0
  41cf84:	mov	x0, x21
  41cf88:	bl	446868 <argp_parse@@Base+0x6a88>
  41cf8c:	mov	x2, x23
  41cf90:	mov	x3, x0
  41cf94:	mov	w1, #0x1                   	// #1
  41cf98:	mov	x0, x24
  41cf9c:	bl	404700 <__fprintf_chk@plt>
  41cfa0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41cfa4:	ldr	w0, [x0, #772]
  41cfa8:	cmp	w0, #0x1
  41cfac:	b.le	41d448 <wcrtomb@plt+0x18828>
  41cfb0:	ldrb	w0, [x22, #156]
  41cfb4:	mov	w1, #0x3f                  	// #63
  41cfb8:	stp	x27, x28, [sp, #96]
  41cfbc:	cmp	w0, #0x36
  41cfc0:	strb	w1, [sp, #152]
  41cfc4:	b.eq	41d5f4 <wcrtomb@plt+0x189d4>  // b.none
  41cfc8:	b.hi	41d1fc <wcrtomb@plt+0x185dc>  // b.pmore
  41cfcc:	cmp	w0, #0x33
  41cfd0:	b.eq	41d600 <wcrtomb@plt+0x189e0>  // b.none
  41cfd4:	b.ls	41d228 <wcrtomb@plt+0x18608>  // b.plast
  41cfd8:	cmp	w0, #0x34
  41cfdc:	b.ne	41d21c <wcrtomb@plt+0x185fc>  // b.any
  41cfe0:	mov	w0, #0x62                  	// #98
  41cfe4:	strb	w0, [sp, #152]
  41cfe8:	ldr	w0, [x19, #104]
  41cfec:	add	x1, sp, #0x99
  41cff0:	adrp	x24, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41cff4:	bl	433418 <wcrtomb@plt+0x2e7f8>
  41cff8:	add	x1, sp, #0xa2
  41cffc:	mov	x0, x19
  41d000:	bl	433130 <wcrtomb@plt+0x2e510>
  41d004:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d008:	ldp	x0, x1, [x19, #232]
  41d00c:	ldrb	w2, [x2, #824]
  41d010:	bl	41cd78 <wcrtomb@plt+0x18158>
  41d014:	str	x0, [sp, #120]
  41d018:	bl	403ff0 <strlen@plt>
  41d01c:	ldr	w1, [x24, #2192]
  41d020:	cmp	w1, w0
  41d024:	b.lt	41d2a4 <wcrtomb@plt+0x18684>  // b.tstop
  41d028:	ldr	x21, [x19, #32]
  41d02c:	cbz	x21, 41d038 <wcrtomb@plt+0x18418>
  41d030:	ldrb	w0, [x21]
  41d034:	cbnz	w0, 41d2ac <wcrtomb@plt+0x1868c>
  41d038:	ldr	w0, [x19, #112]
  41d03c:	add	x1, sp, #0xa8
  41d040:	bl	446868 <argp_parse@@Base+0x6a88>
  41d044:	mov	x21, x0
  41d048:	ldr	x28, [x19, #40]
  41d04c:	cbz	x28, 41d078 <wcrtomb@plt+0x18458>
  41d050:	ldrb	w0, [x28]
  41d054:	cbz	w0, 41d078 <wcrtomb@plt+0x18458>
  41d058:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d05c:	ldr	w0, [x0, #80]
  41d060:	cmp	w0, #0x1
  41d064:	b.eq	41d078 <wcrtomb@plt+0x18458>  // b.none
  41d068:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d06c:	ldrb	w0, [x0, #800]
  41d070:	cbz	w0, 41d088 <wcrtomb@plt+0x18468>
  41d074:	nop
  41d078:	ldr	w0, [x19, #116]
  41d07c:	add	x1, sp, #0xc0
  41d080:	bl	446868 <argp_parse@@Base+0x6a88>
  41d084:	mov	x28, x0
  41d088:	ldrb	w0, [x22, #156]
  41d08c:	sub	w0, w0, #0x33
  41d090:	cmp	w0, #0x1
  41d094:	b.ls	41d2cc <wcrtomb@plt+0x186ac>  // b.plast
  41d098:	ldr	x0, [x19, #136]
  41d09c:	add	x27, sp, #0xd8
  41d0a0:	mov	x1, x27
  41d0a4:	add	x23, sp, #0xf0
  41d0a8:	bl	446868 <argp_parse@@Base+0x6a88>
  41d0ac:	mov	x1, x0
  41d0b0:	mov	x2, #0x2a                  	// #42
  41d0b4:	mov	x0, x23
  41d0b8:	bl	404370 <__strcpy_chk@plt>
  41d0bc:	mov	x0, x23
  41d0c0:	bl	403ff0 <strlen@plt>
  41d0c4:	mov	x2, x0
  41d0c8:	mov	x0, x21
  41d0cc:	str	x2, [sp, #136]
  41d0d0:	bl	403ff0 <strlen@plt>
  41d0d4:	mov	x1, x0
  41d0d8:	mov	x0, x28
  41d0dc:	str	x1, [sp, #128]
  41d0e0:	bl	403ff0 <strlen@plt>
  41d0e4:	ldp	x1, x2, [sp, #128]
  41d0e8:	add	x3, x24, #0x890
  41d0ec:	add	w1, w1, w0
  41d0f0:	add	w0, w2, #0x2
  41d0f4:	add	w1, w0, w1
  41d0f8:	ldr	w0, [x3, #4]
  41d0fc:	mov	w6, w2
  41d100:	cmp	w0, w1
  41d104:	b.lt	41d440 <wcrtomb@plt+0x18820>  // b.tstop
  41d108:	sub	w1, w0, w1
  41d10c:	add	w6, w1, w2
  41d110:	ldr	x0, [x20, #4056]
  41d114:	mov	x4, x21
  41d118:	ldr	x1, [sp, #120]
  41d11c:	str	x1, [sp, #8]
  41d120:	ldr	w1, [x24, #2192]
  41d124:	mov	x5, x28
  41d128:	str	w1, [sp]
  41d12c:	add	x3, sp, #0x98
  41d130:	mov	x7, x23
  41d134:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d138:	add	x2, x2, #0xdf8
  41d13c:	mov	w1, #0x1                   	// #1
  41d140:	bl	404700 <__fprintf_chk@plt>
  41d144:	ldr	x21, [x20, #4056]
  41d148:	mov	x0, x25
  41d14c:	bl	44d8e8 <argp_parse@@Base+0xdb08>
  41d150:	mov	x3, x0
  41d154:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d158:	mov	x0, x21
  41d15c:	add	x2, x2, #0xab8
  41d160:	mov	w1, #0x1                   	// #1
  41d164:	bl	404700 <__fprintf_chk@plt>
  41d168:	ldrb	w0, [x26, #968]
  41d16c:	cbz	w0, 41d178 <wcrtomb@plt+0x18558>
  41d170:	ldrb	w0, [x19, #16]
  41d174:	cbnz	w0, 41d4c4 <wcrtomb@plt+0x188a4>
  41d178:	ldrb	w3, [x22, #156]
  41d17c:	cmp	w3, #0x4b
  41d180:	b.eq	41d524 <wcrtomb@plt+0x18904>  // b.none
  41d184:	b.ls	41d35c <wcrtomb@plt+0x1873c>  // b.plast
  41d188:	cmp	w3, #0x4d
  41d18c:	b.eq	41d538 <wcrtomb@plt+0x18918>  // b.none
  41d190:	b.ls	41d340 <wcrtomb@plt+0x18720>  // b.plast
  41d194:	cmp	w3, #0x53
  41d198:	b.eq	41d370 <wcrtomb@plt+0x18750>  // b.none
  41d19c:	cmp	w3, #0x56
  41d1a0:	b.ne	41d3e8 <wcrtomb@plt+0x187c8>  // b.any
  41d1a4:	ldr	x21, [x20, #4056]
  41d1a8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d1ac:	add	x1, x1, #0xe60
  41d1b0:	mov	w2, #0x5                   	// #5
  41d1b4:	mov	x0, #0x0                   	// #0
  41d1b8:	bl	4049c0 <dcgettext@plt>
  41d1bc:	mov	w1, #0x1                   	// #1
  41d1c0:	mov	x2, x0
  41d1c4:	mov	x0, x21
  41d1c8:	bl	404700 <__fprintf_chk@plt>
  41d1cc:	ldp	x27, x28, [sp, #96]
  41d1d0:	ldr	x0, [x20, #4056]
  41d1d4:	bl	4048d0 <fflush_unlocked@plt>
  41d1d8:	mov	x0, x19
  41d1dc:	bl	433288 <wcrtomb@plt+0x2e668>
  41d1e0:	ldp	x29, x30, [sp, #16]
  41d1e4:	ldp	x19, x20, [sp, #32]
  41d1e8:	ldp	x21, x22, [sp, #48]
  41d1ec:	ldp	x23, x24, [sp, #64]
  41d1f0:	ldp	x25, x26, [sp, #80]
  41d1f4:	add	sp, sp, #0x120
  41d1f8:	ret
  41d1fc:	cmp	w0, #0x4c
  41d200:	b.hi	41d248 <wcrtomb@plt+0x18628>  // b.pmore
  41d204:	cmp	w0, #0x4a
  41d208:	b.hi	41d5a8 <wcrtomb@plt+0x18988>  // b.pmore
  41d20c:	cmp	w0, #0x37
  41d210:	b.eq	41d4ac <wcrtomb@plt+0x1888c>  // b.none
  41d214:	cmp	w0, #0x44
  41d218:	b.ne	41cfe8 <wcrtomb@plt+0x183c8>  // b.any
  41d21c:	mov	w0, #0x64                  	// #100
  41d220:	strb	w0, [sp, #152]
  41d224:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d228:	cmp	w0, #0x31
  41d22c:	b.eq	41d4b8 <wcrtomb@plt+0x18898>  // b.none
  41d230:	b.ls	41d26c <wcrtomb@plt+0x1864c>  // b.plast
  41d234:	cmp	w0, #0x32
  41d238:	b.ne	41cfe8 <wcrtomb@plt+0x183c8>  // b.any
  41d23c:	mov	w0, #0x6c                  	// #108
  41d240:	strb	w0, [sp, #152]
  41d244:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d248:	cmp	w0, #0x53
  41d24c:	b.eq	41d278 <wcrtomb@plt+0x18658>  // b.none
  41d250:	cmp	w0, #0x56
  41d254:	b.ne	41d294 <wcrtomb@plt+0x18674>  // b.any
  41d258:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41d25c:	mov	w2, #0x1                   	// #1
  41d260:	strb	w0, [sp, #152]
  41d264:	strb	w2, [x1, #2645]
  41d268:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d26c:	cbz	w0, 41d278 <wcrtomb@plt+0x18658>
  41d270:	cmp	w0, #0x30
  41d274:	b.ne	41cfe8 <wcrtomb@plt+0x183c8>  // b.any
  41d278:	ldrb	w2, [x19, #16]
  41d27c:	mov	w0, #0x64                  	// #100
  41d280:	mov	w1, #0x2d                  	// #45
  41d284:	cmp	w2, #0x0
  41d288:	csel	w0, w0, w1, ne  // ne = any
  41d28c:	strb	w0, [sp, #152]
  41d290:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d294:	cmp	w0, #0x4d
  41d298:	b.ne	41cfe8 <wcrtomb@plt+0x183c8>  // b.any
  41d29c:	strb	w0, [sp, #152]
  41d2a0:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d2a4:	str	w0, [x24, #2192]
  41d2a8:	b	41d028 <wcrtomb@plt+0x18408>
  41d2ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d2b0:	ldr	w0, [x0, #80]
  41d2b4:	cmp	w0, #0x1
  41d2b8:	b.eq	41d038 <wcrtomb@plt+0x18418>  // b.none
  41d2bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d2c0:	ldrb	w0, [x0, #800]
  41d2c4:	cbz	w0, 41d048 <wcrtomb@plt+0x18428>
  41d2c8:	b	41d038 <wcrtomb@plt+0x18418>
  41d2cc:	ldr	x0, [x19, #120]
  41d2d0:	add	x27, sp, #0xd8
  41d2d4:	add	x23, sp, #0xf0
  41d2d8:	mov	x1, x27
  41d2dc:	lsr	x2, x0, #32
  41d2e0:	ubfx	w0, w0, #8, #12
  41d2e4:	and	w2, w2, #0xfffff000
  41d2e8:	orr	w0, w2, w0
  41d2ec:	bl	446868 <argp_parse@@Base+0x6a88>
  41d2f0:	mov	x1, x0
  41d2f4:	mov	x2, #0x2a                  	// #42
  41d2f8:	mov	x0, x23
  41d2fc:	bl	404840 <__stpcpy_chk@plt>
  41d300:	sub	x3, x23, x0
  41d304:	add	x3, x3, #0x2a
  41d308:	mov	x2, #0x2                   	// #2
  41d30c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41d310:	add	x1, x1, #0x2c0
  41d314:	bl	404250 <__memcpy_chk@plt>
  41d318:	ldr	x2, [x19, #120]
  41d31c:	mov	x1, x27
  41d320:	lsr	x0, x2, #12
  41d324:	bfxil	x0, x2, #0, #8
  41d328:	bl	446868 <argp_parse@@Base+0x6a88>
  41d32c:	mov	x2, #0x2a                  	// #42
  41d330:	mov	x1, x0
  41d334:	mov	x0, x23
  41d338:	bl	4047c0 <__strcat_chk@plt>
  41d33c:	b	41d0bc <wcrtomb@plt+0x1849c>
  41d340:	cmp	w3, #0x4c
  41d344:	b.ne	41d3e8 <wcrtomb@plt+0x187c8>  // b.any
  41d348:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d34c:	mov	w2, #0x5                   	// #5
  41d350:	ldr	x21, [x20, #4056]
  41d354:	add	x1, x1, #0xe50
  41d358:	b	41d1b4 <wcrtomb@plt+0x18594>
  41d35c:	cmp	w3, #0x32
  41d360:	b.eq	41d4f8 <wcrtomb@plt+0x188d8>  // b.none
  41d364:	b.ls	41d398 <wcrtomb@plt+0x18778>  // b.plast
  41d368:	cmp	w3, #0x37
  41d36c:	b.hi	41d3e0 <wcrtomb@plt+0x187c0>  // b.pmore
  41d370:	ldr	x0, [x20, #4056]
  41d374:	ldp	x1, x2, [x0, #40]
  41d378:	cmp	x1, x2
  41d37c:	b.cs	41d60c <wcrtomb@plt+0x189ec>  // b.hs, b.nlast
  41d380:	add	x2, x1, #0x1
  41d384:	str	x2, [x0, #40]
  41d388:	mov	w0, #0xa                   	// #10
  41d38c:	strb	w0, [x1]
  41d390:	ldp	x27, x28, [sp, #96]
  41d394:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d398:	cmp	w3, #0x31
  41d39c:	b.ne	41d418 <wcrtomb@plt+0x187f8>  // b.any
  41d3a0:	ldr	x22, [x20, #4056]
  41d3a4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d3a8:	mov	w2, #0x5                   	// #5
  41d3ac:	add	x1, x1, #0xe18
  41d3b0:	mov	x0, #0x0                   	// #0
  41d3b4:	bl	4049c0 <dcgettext@plt>
  41d3b8:	mov	x21, x0
  41d3bc:	ldr	x0, [x19, #24]
  41d3c0:	bl	44d8e8 <argp_parse@@Base+0xdb08>
  41d3c4:	mov	x3, x0
  41d3c8:	mov	x2, x21
  41d3cc:	mov	x0, x22
  41d3d0:	mov	w1, #0x1                   	// #1
  41d3d4:	bl	404700 <__fprintf_chk@plt>
  41d3d8:	ldp	x27, x28, [sp, #96]
  41d3dc:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d3e0:	cmp	w3, #0x44
  41d3e4:	b.eq	41d370 <wcrtomb@plt+0x18750>  // b.none
  41d3e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d3ec:	add	x1, x1, #0xe28
  41d3f0:	mov	w2, #0x5                   	// #5
  41d3f4:	mov	x0, #0x0                   	// #0
  41d3f8:	ldr	x22, [x20, #4056]
  41d3fc:	strb	w3, [sp, #144]
  41d400:	strb	wzr, [sp, #145]
  41d404:	bl	4049c0 <dcgettext@plt>
  41d408:	mov	x21, x0
  41d40c:	add	x0, sp, #0x90
  41d410:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  41d414:	b	41d3c4 <wcrtomb@plt+0x187a4>
  41d418:	cmp	w3, #0x32
  41d41c:	b.eq	41d3e8 <wcrtomb@plt+0x187c8>  // b.none
  41d420:	cbz	w3, 41d370 <wcrtomb@plt+0x18750>
  41d424:	cmp	w3, #0x30
  41d428:	b.eq	41d370 <wcrtomb@plt+0x18750>  // b.none
  41d42c:	b	41d3e8 <wcrtomb@plt+0x187c8>
  41d430:	ldr	x25, [x19]
  41d434:	cbnz	x25, 41cf34 <wcrtomb@plt+0x18314>
  41d438:	ldr	x25, [x19, #8]
  41d43c:	b	41cf34 <wcrtomb@plt+0x18314>
  41d440:	str	w1, [x3, #4]
  41d444:	b	41d110 <wcrtomb@plt+0x184f0>
  41d448:	mov	x0, x25
  41d44c:	bl	44d8e8 <argp_parse@@Base+0xdb08>
  41d450:	ldr	x1, [x20, #4056]
  41d454:	bl	4049e0 <fputs_unlocked@plt>
  41d458:	ldrb	w0, [x26, #968]
  41d45c:	cbz	w0, 41d488 <wcrtomb@plt+0x18868>
  41d460:	ldr	x0, [x20, #4056]
  41d464:	ldrb	w3, [x19, #16]
  41d468:	ldp	x1, x2, [x0, #40]
  41d46c:	cbz	w3, 41d490 <wcrtomb@plt+0x18870>
  41d470:	cmp	x1, x2
  41d474:	b.cs	41d634 <wcrtomb@plt+0x18a14>  // b.hs, b.nlast
  41d478:	add	x2, x1, #0x1
  41d47c:	str	x2, [x0, #40]
  41d480:	mov	w0, #0x2f                  	// #47
  41d484:	strb	w0, [x1]
  41d488:	ldr	x0, [x20, #4056]
  41d48c:	ldp	x1, x2, [x0, #40]
  41d490:	cmp	x1, x2
  41d494:	b.cs	41d61c <wcrtomb@plt+0x189fc>  // b.hs, b.nlast
  41d498:	add	x2, x1, #0x1
  41d49c:	str	x2, [x0, #40]
  41d4a0:	mov	w0, #0xa                   	// #10
  41d4a4:	strb	w0, [x1]
  41d4a8:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d4ac:	mov	w0, #0x43                  	// #67
  41d4b0:	strb	w0, [sp, #152]
  41d4b4:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d4b8:	mov	w0, #0x68                  	// #104
  41d4bc:	strb	w0, [sp, #152]
  41d4c0:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d4c4:	ldr	x0, [x20, #4056]
  41d4c8:	ldp	x1, x2, [x0, #40]
  41d4cc:	cmp	x1, x2
  41d4d0:	b.cs	41d628 <wcrtomb@plt+0x18a08>  // b.hs, b.nlast
  41d4d4:	add	x2, x1, #0x1
  41d4d8:	str	x2, [x0, #40]
  41d4dc:	mov	w0, #0x2f                  	// #47
  41d4e0:	strb	w0, [x1]
  41d4e4:	b	41d178 <wcrtomb@plt+0x18558>
  41d4e8:	ldr	x25, [x19]
  41d4ec:	b	41cf34 <wcrtomb@plt+0x18314>
  41d4f0:	bl	406070 <wcrtomb@plt+0x1450>
  41d4f4:	b	41cf48 <wcrtomb@plt+0x18328>
  41d4f8:	ldr	x0, [x19, #24]
  41d4fc:	ldr	x21, [x20, #4056]
  41d500:	bl	44d8e8 <argp_parse@@Base+0xdb08>
  41d504:	mov	x3, x0
  41d508:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d50c:	mov	x0, x21
  41d510:	add	x2, x2, #0xe10
  41d514:	mov	w1, #0x1                   	// #1
  41d518:	bl	404700 <__fprintf_chk@plt>
  41d51c:	ldp	x27, x28, [sp, #96]
  41d520:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d524:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d528:	mov	w2, #0x5                   	// #5
  41d52c:	ldr	x21, [x20, #4056]
  41d530:	add	x1, x1, #0xe40
  41d534:	b	41d1b4 <wcrtomb@plt+0x18594>
  41d538:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41d53c:	add	x2, x2, #0x6f8
  41d540:	mov	w6, #0x0                   	// #0
  41d544:	mov	w5, #0x0                   	// #0
  41d548:	mov	x4, #0xffffffffffffffff    	// #-1
  41d54c:	mov	x3, #0x0                   	// #0
  41d550:	mov	x1, #0xc                   	// #12
  41d554:	add	x0, x22, #0x171
  41d558:	bl	41b938 <wcrtomb@plt+0x16d18>
  41d55c:	mov	x1, x27
  41d560:	bl	446868 <argp_parse@@Base+0x6a88>
  41d564:	mov	x2, #0x2a                  	// #42
  41d568:	mov	x1, x0
  41d56c:	mov	x0, x23
  41d570:	bl	404370 <__strcpy_chk@plt>
  41d574:	ldr	x21, [x20, #4056]
  41d578:	mov	w2, #0x5                   	// #5
  41d57c:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d580:	mov	x0, #0x0                   	// #0
  41d584:	add	x1, x1, #0xe78
  41d588:	bl	4049c0 <dcgettext@plt>
  41d58c:	mov	x3, x23
  41d590:	mov	x2, x0
  41d594:	mov	w1, #0x1                   	// #1
  41d598:	mov	x0, x21
  41d59c:	bl	404700 <__fprintf_chk@plt>
  41d5a0:	ldp	x27, x28, [sp, #96]
  41d5a4:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d5a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d5ac:	mov	w1, #0x4c                  	// #76
  41d5b0:	strb	w1, [sp, #152]
  41d5b4:	ldr	x0, [x0, #1136]
  41d5b8:	cbz	x0, 41d5c0 <wcrtomb@plt+0x189a0>
  41d5bc:	blr	x0
  41d5c0:	mov	w2, #0x5                   	// #5
  41d5c4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41d5c8:	mov	x0, #0x0                   	// #0
  41d5cc:	add	x1, x1, #0xcc8
  41d5d0:	bl	4049c0 <dcgettext@plt>
  41d5d4:	mov	x2, x0
  41d5d8:	mov	w1, #0x0                   	// #0
  41d5dc:	mov	w0, #0x0                   	// #0
  41d5e0:	bl	404050 <error@plt>
  41d5e4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41d5e8:	mov	w1, #0x2                   	// #2
  41d5ec:	str	w1, [x0, #3568]
  41d5f0:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d5f4:	mov	w0, #0x70                  	// #112
  41d5f8:	strb	w0, [sp, #152]
  41d5fc:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d600:	mov	w0, #0x63                  	// #99
  41d604:	strb	w0, [sp, #152]
  41d608:	b	41cfe8 <wcrtomb@plt+0x183c8>
  41d60c:	mov	w1, #0xa                   	// #10
  41d610:	bl	404680 <__overflow@plt>
  41d614:	ldp	x27, x28, [sp, #96]
  41d618:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d61c:	mov	w1, #0xa                   	// #10
  41d620:	bl	404680 <__overflow@plt>
  41d624:	b	41d1d0 <wcrtomb@plt+0x185b0>
  41d628:	mov	w1, #0x2f                  	// #47
  41d62c:	bl	404680 <__overflow@plt>
  41d630:	b	41d178 <wcrtomb@plt+0x18558>
  41d634:	mov	w1, #0x2f                  	// #47
  41d638:	bl	404680 <__overflow@plt>
  41d63c:	ldr	x0, [x20, #4056]
  41d640:	ldp	x1, x2, [x0, #40]
  41d644:	b	41d490 <wcrtomb@plt+0x18870>
  41d648:	sub	sp, sp, #0x3d0
  41d64c:	mov	w1, #0x0                   	// #0
  41d650:	add	x0, sp, #0x1d0
  41d654:	mov	x2, #0x200                 	// #512
  41d658:	stp	x29, x30, [sp]
  41d65c:	mov	x29, sp
  41d660:	str	x19, [sp, #16]
  41d664:	bl	404410 <memset@plt>
  41d668:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41d66c:	mov	w1, #0x56                  	// #86
  41d670:	strb	w1, [sp, #620]
  41d674:	ldr	x0, [x0, #2600]
  41d678:	cbz	x0, 41d68c <wcrtomb@plt+0x18a6c>
  41d67c:	ldr	x1, [x0, #136]
  41d680:	str	x1, [sp, #600]
  41d684:	ldr	w0, [x0, #144]
  41d688:	str	w0, [sp, #608]
  41d68c:	add	x0, sp, #0x28
  41d690:	add	x19, x0, #0x8
  41d694:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  41d698:	mov	x0, x19
  41d69c:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  41d6a0:	add	x1, x1, #0x348
  41d6a4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41d6a8:	mov	w3, #0x0                   	// #0
  41d6ac:	add	x2, sp, #0x24
  41d6b0:	add	x1, sp, #0x28
  41d6b4:	add	x0, sp, #0x1d0
  41d6b8:	bl	41c8b0 <wcrtomb@plt+0x17c90>
  41d6bc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d6c0:	mov	x0, x19
  41d6c4:	ldr	x1, [x1]
  41d6c8:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  41d6cc:	add	x1, sp, #0x1d0
  41d6d0:	mov	x2, #0x0                   	// #0
  41d6d4:	add	x0, sp, #0x28
  41d6d8:	bl	41cef8 <wcrtomb@plt+0x182d8>
  41d6dc:	add	x0, sp, #0x28
  41d6e0:	bl	42f438 <wcrtomb@plt+0x2a818>
  41d6e4:	ldp	x29, x30, [sp]
  41d6e8:	ldr	x19, [sp, #16]
  41d6ec:	add	sp, sp, #0x3d0
  41d6f0:	ret
  41d6f4:	nop
  41d6f8:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d6fc:	ldr	w3, [x3, #80]
  41d700:	cmp	w3, #0x4
  41d704:	b.eq	41d70c <wcrtomb@plt+0x18aec>  // b.none
  41d708:	b	41cef8 <wcrtomb@plt+0x182d8>
  41d70c:	stp	x29, x30, [sp, #-64]!
  41d710:	mov	x29, sp
  41d714:	str	x19, [sp, #16]
  41d718:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41d71c:	add	x19, x19, #0x910
  41d720:	ldrb	w3, [x19, #325]
  41d724:	cbnz	w3, 41d750 <wcrtomb@plt+0x18b30>
  41d728:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d72c:	ldr	x3, [x3]
  41d730:	cbz	x3, 41d750 <wcrtomb@plt+0x18b30>
  41d734:	stp	x0, x1, [sp, #40]
  41d738:	str	x2, [sp, #56]
  41d73c:	bl	41d648 <wcrtomb@plt+0x18a28>
  41d740:	ldp	x0, x1, [sp, #40]
  41d744:	mov	w3, #0x1                   	// #1
  41d748:	ldr	x2, [sp, #56]
  41d74c:	strb	w3, [x19, #325]
  41d750:	ldr	x19, [sp, #16]
  41d754:	ldp	x29, x30, [sp], #64
  41d758:	b	41cef8 <wcrtomb@plt+0x182d8>
  41d75c:	nop
  41d760:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d764:	ldr	w1, [x1, #772]
  41d768:	cmp	w1, #0x1
  41d76c:	b.gt	41d774 <wcrtomb@plt+0x18b54>
  41d770:	ret
  41d774:	stp	x29, x30, [sp, #-96]!
  41d778:	mov	x29, sp
  41d77c:	stp	x19, x20, [sp, #16]
  41d780:	mov	x20, x0
  41d784:	mov	w0, w2
  41d788:	mov	w2, #0x64                  	// #100
  41d78c:	add	x1, sp, #0x39
  41d790:	stp	x21, x22, [sp, #32]
  41d794:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41d798:	strb	w2, [sp, #56]
  41d79c:	bl	433418 <wcrtomb@plt+0x2e7f8>
  41d7a0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d7a4:	ldrb	w0, [x0, #801]
  41d7a8:	cbnz	w0, 41d820 <wcrtomb@plt+0x18c00>
  41d7ac:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41d7b0:	add	x3, x0, #0x890
  41d7b4:	ldr	x21, [x21, #4056]
  41d7b8:	mov	w2, #0x5                   	// #5
  41d7bc:	ldr	w4, [x0, #2192]
  41d7c0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d7c4:	ldr	w19, [x3, #4]
  41d7c8:	add	x1, x1, #0xe98
  41d7cc:	mov	x0, #0x0                   	// #0
  41d7d0:	add	w19, w19, #0x1
  41d7d4:	add	w19, w19, w4
  41d7d8:	bl	4049c0 <dcgettext@plt>
  41d7dc:	mov	x5, x0
  41d7e0:	mov	x0, x20
  41d7e4:	mov	x20, x5
  41d7e8:	bl	44d8e8 <argp_parse@@Base+0xdb08>
  41d7ec:	mov	x6, x0
  41d7f0:	mov	w4, w19
  41d7f4:	mov	x5, x20
  41d7f8:	add	x3, sp, #0x38
  41d7fc:	mov	x0, x21
  41d800:	mov	w1, #0x1                   	// #1
  41d804:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d808:	add	x2, x2, #0xeb0
  41d80c:	bl	404700 <__fprintf_chk@plt>
  41d810:	ldp	x19, x20, [sp, #16]
  41d814:	ldp	x21, x22, [sp, #32]
  41d818:	ldp	x29, x30, [sp], #96
  41d81c:	ret
  41d820:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d824:	add	x1, x1, #0xde8
  41d828:	mov	w2, #0x5                   	// #5
  41d82c:	mov	x0, #0x0                   	// #0
  41d830:	ldr	x22, [x21, #4056]
  41d834:	bl	4049c0 <dcgettext@plt>
  41d838:	mov	x19, x0
  41d83c:	bl	406070 <wcrtomb@plt+0x1450>
  41d840:	add	x1, sp, #0x48
  41d844:	bl	446868 <argp_parse@@Base+0x6a88>
  41d848:	mov	x2, x19
  41d84c:	mov	x3, x0
  41d850:	mov	w1, #0x1                   	// #1
  41d854:	mov	x0, x22
  41d858:	bl	404700 <__fprintf_chk@plt>
  41d85c:	b	41d7ac <wcrtomb@plt+0x18b8c>
  41d860:	stp	x29, x30, [sp, #-32]!
  41d864:	mov	x29, sp
  41d868:	stp	x19, x20, [sp, #16]
  41d86c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d870:	mov	x19, x0
  41d874:	ldrb	w1, [x20, #1056]
  41d878:	cbnz	w1, 41d8cc <wcrtomb@plt+0x18cac>
  41d87c:	mov	x0, x19
  41d880:	bl	405720 <wcrtomb@plt+0xb00>
  41d884:	cmp	x19, #0x0
  41d888:	b.le	41d8c0 <wcrtomb@plt+0x18ca0>
  41d88c:	sub	x0, x19, #0x1
  41d890:	sub	x20, x19, #0x200
  41d894:	and	x0, x0, #0xfffffffffffffe00
  41d898:	sub	x20, x20, x0
  41d89c:	nop
  41d8a0:	bl	406550 <wcrtomb@plt+0x1930>
  41d8a4:	cbz	x0, 41d8e4 <wcrtomb@plt+0x18cc4>
  41d8a8:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41d8ac:	sub	x19, x19, #0x200
  41d8b0:	mov	x0, x19
  41d8b4:	bl	405720 <wcrtomb@plt+0xb00>
  41d8b8:	cmp	x19, x20
  41d8bc:	b.ne	41d8a0 <wcrtomb@plt+0x18c80>  // b.any
  41d8c0:	ldp	x19, x20, [sp, #16]
  41d8c4:	ldp	x29, x30, [sp], #32
  41d8c8:	ret
  41d8cc:	bl	406a78 <wcrtomb@plt+0x1e58>
  41d8d0:	tbnz	x0, #63, 41d8dc <wcrtomb@plt+0x18cbc>
  41d8d4:	sub	x19, x19, x0, lsl #9
  41d8d8:	b	41d87c <wcrtomb@plt+0x18c5c>
  41d8dc:	strb	wzr, [x20, #1056]
  41d8e0:	b	41d87c <wcrtomb@plt+0x18c5c>
  41d8e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d8e8:	ldr	x0, [x0, #1136]
  41d8ec:	cbz	x0, 41d8f4 <wcrtomb@plt+0x18cd4>
  41d8f0:	blr	x0
  41d8f4:	mov	w2, #0x5                   	// #5
  41d8f8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41d8fc:	mov	x0, #0x0                   	// #0
  41d900:	add	x1, x1, #0x378
  41d904:	bl	4049c0 <dcgettext@plt>
  41d908:	mov	x2, x0
  41d90c:	mov	w1, #0x0                   	// #0
  41d910:	mov	w0, #0x0                   	// #0
  41d914:	bl	404050 <error@plt>
  41d918:	bl	410460 <wcrtomb@plt+0xb840>
  41d91c:	nop
  41d920:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41d924:	add	x3, x3, #0x910
  41d928:	stp	x29, x30, [sp, #-144]!
  41d92c:	add	x3, x3, #0x10
  41d930:	mov	x2, #0x100                 	// #256
  41d934:	mov	x29, sp
  41d938:	mov	w1, #0x40                  	// #64
  41d93c:	stp	x19, x20, [sp, #16]
  41d940:	stp	x21, x22, [sp, #32]
  41d944:	mov	x21, x0
  41d948:	mov	x0, x3
  41d94c:	stp	x23, x24, [sp, #48]
  41d950:	stp	x25, x26, [sp, #64]
  41d954:	stp	x27, x28, [sp, #80]
  41d958:	bl	404410 <memset@plt>
  41d95c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41d960:	mov	x3, x0
  41d964:	add	x2, x2, #0xf10
  41d968:	mov	x1, #0x0                   	// #0
  41d96c:	nop
  41d970:	ldrb	w0, [x2, x1]
  41d974:	strb	w1, [x3, w0, sxtw]
  41d978:	add	x1, x1, #0x1
  41d97c:	cmp	x1, #0x40
  41d980:	b.ne	41d970 <wcrtomb@plt+0x18d50>  // b.any
  41d984:	bl	422440 <wcrtomb@plt+0x1d820>
  41d988:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d98c:	mov	w0, #0x0                   	// #0
  41d990:	bl	408d78 <wcrtomb@plt+0x4158>
  41d994:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d998:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d99c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d9a0:	add	x19, x19, #0xe0
  41d9a4:	add	x20, x20, #0x68
  41d9a8:	add	x22, x22, #0x321
  41d9ac:	add	x23, x1, #0xa8
  41d9b0:	mov	w24, #0x0                   	// #0
  41d9b4:	mov	x0, x19
  41d9b8:	bl	42f438 <wcrtomb@plt+0x2a818>
  41d9bc:	mov	x1, x19
  41d9c0:	mov	x0, x20
  41d9c4:	mov	w2, #0x0                   	// #0
  41d9c8:	bl	41c318 <wcrtomb@plt+0x176f8>
  41d9cc:	cmp	w0, #0x4
  41d9d0:	b.eq	41dcb8 <wcrtomb@plt+0x19098>  // b.none
  41d9d4:	b.hi	41dab0 <wcrtomb@plt+0x18e90>  // b.pmore
  41d9d8:	cmp	w0, #0x3
  41d9dc:	b.eq	41db90 <wcrtomb@plt+0x18f70>  // b.none
  41d9e0:	cmp	w0, #0x1
  41d9e4:	b.ne	41da88 <wcrtomb@plt+0x18e68>  // b.any
  41d9e8:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  41d9ec:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41d9f0:	add	x24, x24, #0x50
  41d9f4:	add	x25, x25, #0x6f0
  41d9f8:	ldr	x0, [x20]
  41d9fc:	mov	x2, x24
  41da00:	mov	x1, x19
  41da04:	mov	w3, #0x1                   	// #1
  41da08:	bl	41c8b0 <wcrtomb@plt+0x17c90>
  41da0c:	ldr	x0, [x19, #8]
  41da10:	bl	422a70 <wcrtomb@plt+0x1de50>
  41da14:	tst	w0, #0xff
  41da18:	b.ne	41dd08 <wcrtomb@plt+0x190e8>  // b.any
  41da1c:	ldr	x0, [x20]
  41da20:	ldrb	w0, [x0, #156]
  41da24:	cmp	w0, #0x4d
  41da28:	b.eq	41dd74 <wcrtomb@plt+0x19154>  // b.none
  41da2c:	cmp	w0, #0x56
  41da30:	b.eq	41dd74 <wcrtomb@plt+0x19154>  // b.none
  41da34:	cmp	w0, #0x35
  41da38:	b.eq	41de84 <wcrtomb@plt+0x19264>  // b.none
  41da3c:	ldrb	w0, [x19, #377]
  41da40:	cbz	w0, 41de14 <wcrtomb@plt+0x191f4>
  41da44:	mov	x0, x19
  41da48:	bl	422bf8 <wcrtomb@plt+0x1dfd8>
  41da4c:	tst	w0, #0xff
  41da50:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41da54:	mov	x0, x19
  41da58:	bl	42f438 <wcrtomb@plt+0x2a818>
  41da5c:	mov	x1, x19
  41da60:	mov	x0, x20
  41da64:	mov	w2, #0x0                   	// #0
  41da68:	bl	41c318 <wcrtomb@plt+0x176f8>
  41da6c:	cmp	w0, #0x4
  41da70:	b.eq	41dcb8 <wcrtomb@plt+0x19098>  // b.none
  41da74:	b.hi	41dc28 <wcrtomb@plt+0x19008>  // b.pmore
  41da78:	cmp	w0, #0x3
  41da7c:	b.eq	41ded8 <wcrtomb@plt+0x192b8>  // b.none
  41da80:	cmp	w0, #0x1
  41da84:	b.eq	41d9f8 <wcrtomb@plt+0x18dd8>  // b.none
  41da88:	tbz	w0, #0, 41dcb4 <wcrtomb@plt+0x19094>
  41da8c:	bl	406be8 <wcrtomb@plt+0x1fc8>
  41da90:	bl	422ca8 <wcrtomb@plt+0x1e088>
  41da94:	ldp	x19, x20, [sp, #16]
  41da98:	ldp	x21, x22, [sp, #32]
  41da9c:	ldp	x23, x24, [sp, #48]
  41daa0:	ldp	x25, x26, [sp, #64]
  41daa4:	ldp	x27, x28, [sp, #80]
  41daa8:	ldp	x29, x30, [sp], #144
  41daac:	ret
  41dab0:	cmp	w0, #0x5
  41dab4:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41dab8:	ldr	x0, [x20]
  41dabc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41dac0:	cbnz	w24, 41dc1c <wcrtomb@plt+0x18ffc>
  41dac4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dac8:	add	x26, x0, #0x470
  41dacc:	ldr	x0, [x0, #1136]
  41dad0:	cbz	x0, 41dad8 <wcrtomb@plt+0x18eb8>
  41dad4:	blr	x0
  41dad8:	mov	w2, #0x5                   	// #5
  41dadc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  41dae0:	mov	x0, #0x0                   	// #0
  41dae4:	add	x1, x1, #0x970
  41dae8:	bl	4049c0 <dcgettext@plt>
  41daec:	mov	x2, x0
  41daf0:	mov	w1, #0x0                   	// #0
  41daf4:	mov	w0, #0x0                   	// #0
  41daf8:	bl	404050 <error@plt>
  41dafc:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  41db00:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41db04:	mov	w1, #0x2                   	// #2
  41db08:	add	x25, x0, #0xdf0
  41db0c:	str	w1, [x0, #3568]
  41db10:	ldrb	w0, [x22]
  41db14:	cbnz	w0, 41ddac <wcrtomb@plt+0x1918c>
  41db18:	ldr	x0, [x26]
  41db1c:	cbz	x0, 41db24 <wcrtomb@plt+0x18f04>
  41db20:	blr	x0
  41db24:	mov	w2, #0x5                   	// #5
  41db28:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41db2c:	mov	x0, #0x0                   	// #0
  41db30:	add	x1, x1, #0xa30
  41db34:	bl	4049c0 <dcgettext@plt>
  41db38:	mov	x2, x0
  41db3c:	mov	w1, #0x0                   	// #0
  41db40:	mov	w0, #0x0                   	// #0
  41db44:	bl	404050 <error@plt>
  41db48:	mov	w1, #0x2                   	// #2
  41db4c:	mov	x0, x19
  41db50:	str	w1, [x25]
  41db54:	bl	422bf8 <wcrtomb@plt+0x1dfd8>
  41db58:	tst	w0, #0xff
  41db5c:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41db60:	mov	x0, x19
  41db64:	bl	42f438 <wcrtomb@plt+0x2a818>
  41db68:	mov	x1, x19
  41db6c:	mov	x0, x20
  41db70:	mov	w2, #0x0                   	// #0
  41db74:	bl	41c318 <wcrtomb@plt+0x176f8>
  41db78:	cmp	w0, #0x4
  41db7c:	b.eq	41dcbc <wcrtomb@plt+0x1909c>  // b.none
  41db80:	b.hi	41dc58 <wcrtomb@plt+0x19038>  // b.pmore
  41db84:	cmp	w0, #0x3
  41db88:	b.ne	41d9e0 <wcrtomb@plt+0x18dc0>  // b.any
  41db8c:	mov	w24, #0x5                   	// #5
  41db90:	ldrb	w0, [x22]
  41db94:	cbnz	w0, 41de40 <wcrtomb@plt+0x19220>
  41db98:	ldr	x0, [x20]
  41db9c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41dba0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dba4:	ldrb	w0, [x0, #205]
  41dba8:	cbnz	w0, 41dd98 <wcrtomb@plt+0x19178>
  41dbac:	mov	x1, x19
  41dbb0:	mov	x0, x20
  41dbb4:	mov	w2, #0x0                   	// #0
  41dbb8:	bl	41c318 <wcrtomb@plt+0x176f8>
  41dbbc:	cmp	w0, #0x3
  41dbc0:	b.eq	41da8c <wcrtomb@plt+0x18e6c>  // b.none
  41dbc4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41dbc8:	ldr	w0, [x0, #432]
  41dbcc:	tbz	w0, #0, 41da8c <wcrtomb@plt+0x18e6c>
  41dbd0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dbd4:	ldr	x0, [x0, #1136]
  41dbd8:	cbz	x0, 41dbe0 <wcrtomb@plt+0x18fc0>
  41dbdc:	blr	x0
  41dbe0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  41dbe4:	add	x1, x1, #0x5e8
  41dbe8:	mov	w2, #0x5                   	// #5
  41dbec:	mov	x0, #0x0                   	// #0
  41dbf0:	bl	4049c0 <dcgettext@plt>
  41dbf4:	mov	x19, x0
  41dbf8:	bl	406070 <wcrtomb@plt+0x1450>
  41dbfc:	add	x1, sp, #0x78
  41dc00:	bl	446868 <argp_parse@@Base+0x6a88>
  41dc04:	mov	x2, x19
  41dc08:	mov	x3, x0
  41dc0c:	mov	w1, #0x0                   	// #0
  41dc10:	mov	w0, #0x0                   	// #0
  41dc14:	bl	404050 <error@plt>
  41dc18:	b	41da8c <wcrtomb@plt+0x18e6c>
  41dc1c:	cmp	w24, #0x1
  41dc20:	b.ne	41dc68 <wcrtomb@plt+0x19048>  // b.any
  41dc24:	b	41dc38 <wcrtomb@plt+0x19018>
  41dc28:	cmp	w0, #0x5
  41dc2c:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41dc30:	ldr	x0, [x20]
  41dc34:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41dc38:	ldrb	w0, [x22]
  41dc3c:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dc40:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41dc44:	add	x26, x26, #0x470
  41dc48:	add	x25, x25, #0xdf0
  41dc4c:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dc50:	cbz	w0, 41db18 <wcrtomb@plt+0x18ef8>
  41dc54:	b	41ddac <wcrtomb@plt+0x1918c>
  41dc58:	cmp	w0, #0x5
  41dc5c:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41dc60:	ldr	x0, [x20]
  41dc64:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41dc68:	mov	x0, x19
  41dc6c:	bl	422bf8 <wcrtomb@plt+0x1dfd8>
  41dc70:	tst	w0, #0xff
  41dc74:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41dc78:	mov	x0, x19
  41dc7c:	bl	42f438 <wcrtomb@plt+0x2a818>
  41dc80:	mov	x1, x19
  41dc84:	mov	x0, x20
  41dc88:	mov	w2, #0x0                   	// #0
  41dc8c:	bl	41c318 <wcrtomb@plt+0x176f8>
  41dc90:	mov	w24, w0
  41dc94:	cmp	w0, #0x4
  41dc98:	b.eq	41dcb8 <wcrtomb@plt+0x19098>  // b.none
  41dc9c:	b.hi	41dd84 <wcrtomb@plt+0x19164>  // b.pmore
  41dca0:	cmp	w0, #0x3
  41dca4:	b.eq	41db8c <wcrtomb@plt+0x18f6c>  // b.none
  41dca8:	cmp	w0, #0x1
  41dcac:	b.eq	41d9e8 <wcrtomb@plt+0x18dc8>  // b.none
  41dcb0:	tbnz	w24, #0, 41da8c <wcrtomb@plt+0x18e6c>
  41dcb4:	bl	404650 <abort@plt>
  41dcb8:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dcbc:	ldrb	w0, [x24, #801]
  41dcc0:	cbz	w0, 41da8c <wcrtomb@plt+0x18e6c>
  41dcc4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41dcc8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41dccc:	add	x1, x1, #0xef0
  41dcd0:	mov	w2, #0x5                   	// #5
  41dcd4:	ldr	x20, [x0, #4056]
  41dcd8:	mov	x0, #0x0                   	// #0
  41dcdc:	bl	4049c0 <dcgettext@plt>
  41dce0:	mov	x19, x0
  41dce4:	bl	406070 <wcrtomb@plt+0x1450>
  41dce8:	add	x1, sp, #0x78
  41dcec:	bl	446868 <argp_parse@@Base+0x6a88>
  41dcf0:	mov	x2, x19
  41dcf4:	mov	x3, x0
  41dcf8:	mov	w1, #0x1                   	// #1
  41dcfc:	mov	x0, x20
  41dd00:	bl	404700 <__fprintf_chk@plt>
  41dd04:	b	41da8c <wcrtomb@plt+0x18e6c>
  41dd08:	ldr	x0, [x23, #8]
  41dd0c:	tbnz	x0, #63, 41dd58 <wcrtomb@plt+0x19138>
  41dd10:	ldr	x0, [x20]
  41dd14:	mov	x1, #0xc                   	// #12
  41dd18:	mov	x2, x25
  41dd1c:	mov	w6, #0x0                   	// #0
  41dd20:	add	x0, x0, #0x88
  41dd24:	mov	w5, #0x0                   	// #0
  41dd28:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  41dd2c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  41dd30:	bl	41b938 <wcrtomb@plt+0x16d18>
  41dd34:	stp	x0, xzr, [x19, #232]
  41dd38:	ldr	x1, [x23]
  41dd3c:	cmp	x0, x1
  41dd40:	b.lt	41da1c <wcrtomb@plt+0x18dfc>  // b.tstop
  41dd44:	b.gt	41dd58 <wcrtomb@plt+0x19138>
  41dd48:	ldr	x0, [x23, #8]
  41dd4c:	neg	w0, w0
  41dd50:	tbnz	w0, #31, 41da1c <wcrtomb@plt+0x18dfc>
  41dd54:	nop
  41dd58:	ldr	x0, [x19, #8]
  41dd5c:	ldr	x1, [x19, #392]
  41dd60:	bl	410b88 <wcrtomb@plt+0xbf68>
  41dd64:	tst	w0, #0xff
  41dd68:	b.ne	41da1c <wcrtomb@plt+0x18dfc>  // b.any
  41dd6c:	ldr	x0, [x20]
  41dd70:	ldrb	w0, [x0, #156]
  41dd74:	mov	x1, x19
  41dd78:	bl	41c060 <wcrtomb@plt+0x17440>
  41dd7c:	blr	x21
  41dd80:	b	41da44 <wcrtomb@plt+0x18e24>
  41dd84:	cmp	w0, #0x5
  41dd88:	b.ne	41da8c <wcrtomb@plt+0x18e6c>  // b.any
  41dd8c:	ldr	x0, [x20]
  41dd90:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41dd94:	nop
  41dd98:	mov	x0, x19
  41dd9c:	bl	422bf8 <wcrtomb@plt+0x1dfd8>
  41dda0:	tst	w0, #0xff
  41dda4:	b.eq	41d9b4 <wcrtomb@plt+0x18d94>  // b.none
  41dda8:	b	41da8c <wcrtomb@plt+0x18e6c>
  41ddac:	bl	406070 <wcrtomb@plt+0x1450>
  41ddb0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ddb4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  41ddb8:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41ddbc:	mov	w2, #0x5                   	// #5
  41ddc0:	ldr	x3, [x3, #112]
  41ddc4:	ldr	x4, [x4, #4056]
  41ddc8:	str	x4, [sp, #104]
  41ddcc:	ldr	x28, [x1, #96]
  41ddd0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41ddd4:	add	x1, x1, #0xde8
  41ddd8:	add	x28, x28, x3
  41dddc:	sub	x28, x0, x28
  41dde0:	mov	x0, #0x0                   	// #0
  41dde4:	bl	4049c0 <dcgettext@plt>
  41dde8:	mov	x27, x0
  41ddec:	add	x1, sp, #0x78
  41ddf0:	mov	x0, x28
  41ddf4:	bl	446868 <argp_parse@@Base+0x6a88>
  41ddf8:	mov	x3, x0
  41ddfc:	ldr	x4, [sp, #104]
  41de00:	mov	x2, x27
  41de04:	mov	w1, #0x1                   	// #1
  41de08:	mov	x0, x4
  41de0c:	bl	404700 <__fprintf_chk@plt>
  41de10:	b	41db18 <wcrtomb@plt+0x18ef8>
  41de14:	ldr	x0, [x20]
  41de18:	ldrb	w26, [x0, #156]
  41de1c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41de20:	mov	x0, x19
  41de24:	bl	405618 <wcrtomb@plt+0x9f8>
  41de28:	ldrb	w0, [x19, #272]
  41de2c:	cbnz	w0, 41def0 <wcrtomb@plt+0x192d0>
  41de30:	cmp	w26, #0x35
  41de34:	b.ne	41dee0 <wcrtomb@plt+0x192c0>  // b.any
  41de38:	bl	4056c0 <wcrtomb@plt+0xaa0>
  41de3c:	b	41da44 <wcrtomb@plt+0x18e24>
  41de40:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41de44:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41de48:	add	x1, x1, #0xed0
  41de4c:	mov	w2, #0x5                   	// #5
  41de50:	ldr	x26, [x0, #4056]
  41de54:	mov	x0, #0x0                   	// #0
  41de58:	bl	4049c0 <dcgettext@plt>
  41de5c:	mov	x25, x0
  41de60:	bl	406070 <wcrtomb@plt+0x1450>
  41de64:	add	x1, sp, #0x78
  41de68:	bl	446868 <argp_parse@@Base+0x6a88>
  41de6c:	mov	x2, x25
  41de70:	mov	x3, x0
  41de74:	mov	w1, #0x1                   	// #1
  41de78:	mov	x0, x26
  41de7c:	bl	404700 <__fprintf_chk@plt>
  41de80:	b	41db98 <wcrtomb@plt+0x18f78>
  41de84:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41de88:	ldrb	w0, [x0, #826]
  41de8c:	cbz	w0, 41da3c <wcrtomb@plt+0x18e1c>
  41de90:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41de94:	ldr	x0, [x0, #1136]
  41de98:	cbz	x0, 41dea0 <wcrtomb@plt+0x19280>
  41de9c:	blr	x0
  41dea0:	mov	w2, #0x5                   	// #5
  41dea4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41dea8:	mov	x0, #0x0                   	// #0
  41deac:	add	x1, x1, #0xec0
  41deb0:	bl	4049c0 <dcgettext@plt>
  41deb4:	mov	x26, x0
  41deb8:	ldr	x0, [x19, #8]
  41debc:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41dec0:	mov	x3, x0
  41dec4:	mov	x2, x26
  41dec8:	mov	w1, #0x0                   	// #0
  41decc:	mov	w0, #0x0                   	// #0
  41ded0:	bl	404050 <error@plt>
  41ded4:	b	41da3c <wcrtomb@plt+0x18e1c>
  41ded8:	mov	w24, #0x1                   	// #1
  41dedc:	b	41db90 <wcrtomb@plt+0x18f70>
  41dee0:	ldr	x0, [x19, #136]
  41dee4:	bl	41d860 <wcrtomb@plt+0x18c40>
  41dee8:	bl	4056c0 <wcrtomb@plt+0xaa0>
  41deec:	b	41da44 <wcrtomb@plt+0x18e24>
  41def0:	mov	x0, x19
  41def4:	bl	429c88 <wcrtomb@plt+0x25068>
  41def8:	bl	4056c0 <wcrtomb@plt+0xaa0>
  41defc:	b	41da44 <wcrtomb@plt+0x18e24>
  41df00:	stp	x29, x30, [sp, #-48]!
  41df04:	mov	x29, sp
  41df08:	stp	x19, x20, [sp, #16]
  41df0c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  41df10:	bl	406070 <wcrtomb@plt+0x1450>
  41df14:	ldr	w1, [x20, #772]
  41df18:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41df1c:	add	x19, x19, #0xe0
  41df20:	cbnz	w1, 41df38 <wcrtomb@plt+0x19318>
  41df24:	ldrb	w0, [x19, #377]
  41df28:	cbz	w0, 41dfa8 <wcrtomb@plt+0x19388>
  41df2c:	ldp	x19, x20, [sp, #16]
  41df30:	ldp	x29, x30, [sp], #48
  41df34:	ret
  41df38:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41df3c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41df40:	ldr	w2, [x2, #80]
  41df44:	ldr	x1, [x1, #104]
  41df48:	cmp	w2, #0x4
  41df4c:	b.eq	41dff0 <wcrtomb@plt+0x193d0>  // b.none
  41df50:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41df54:	add	x19, x19, #0xe0
  41df58:	mov	x2, x0
  41df5c:	mov	x0, x19
  41df60:	bl	41cef8 <wcrtomb@plt+0x182d8>
  41df64:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41df68:	ldrb	w0, [x0, #161]
  41df6c:	cbz	w0, 41df24 <wcrtomb@plt+0x19304>
  41df70:	ldr	w0, [x20, #772]
  41df74:	cmp	w0, #0x2
  41df78:	b.le	41df24 <wcrtomb@plt+0x19304>
  41df7c:	mov	x0, x19
  41df80:	bl	41afc0 <wcrtomb@plt+0x163a0>
  41df84:	tst	w0, #0xff
  41df88:	b.eq	41df24 <wcrtomb@plt+0x19304>  // b.none
  41df8c:	ldr	x20, [x19, #384]
  41df90:	mov	x0, x20
  41df94:	bl	4194c0 <wcrtomb@plt+0x148a0>
  41df98:	mov	x1, x0
  41df9c:	mov	x0, x20
  41dfa0:	bl	41b768 <wcrtomb@plt+0x16b48>
  41dfa4:	b	41df24 <wcrtomb@plt+0x19304>
  41dfa8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41dfac:	ldr	x0, [x0, #104]
  41dfb0:	ldrb	w20, [x0, #156]
  41dfb4:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41dfb8:	mov	x0, x19
  41dfbc:	bl	405618 <wcrtomb@plt+0x9f8>
  41dfc0:	ldrb	w0, [x19, #272]
  41dfc4:	cbnz	w0, 41e024 <wcrtomb@plt+0x19404>
  41dfc8:	cmp	w20, #0x35
  41dfcc:	b.ne	41dfdc <wcrtomb@plt+0x193bc>  // b.any
  41dfd0:	ldp	x19, x20, [sp, #16]
  41dfd4:	ldp	x29, x30, [sp], #48
  41dfd8:	b	4056c0 <wcrtomb@plt+0xaa0>
  41dfdc:	ldr	x0, [x19, #136]
  41dfe0:	bl	41d860 <wcrtomb@plt+0x18c40>
  41dfe4:	ldp	x19, x20, [sp, #16]
  41dfe8:	ldp	x29, x30, [sp], #48
  41dfec:	b	4056c0 <wcrtomb@plt+0xaa0>
  41dff0:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41dff4:	add	x19, x19, #0x910
  41dff8:	ldrb	w2, [x19, #325]
  41dffc:	cbnz	w2, 41df50 <wcrtomb@plt+0x19330>
  41e000:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e004:	ldr	x2, [x2]
  41e008:	cbz	x2, 41df50 <wcrtomb@plt+0x19330>
  41e00c:	stp	x1, x0, [sp, #32]
  41e010:	bl	41d648 <wcrtomb@plt+0x18a28>
  41e014:	mov	w2, #0x1                   	// #1
  41e018:	strb	w2, [x19, #325]
  41e01c:	ldp	x1, x0, [sp, #32]
  41e020:	b	41df50 <wcrtomb@plt+0x19330>
  41e024:	mov	x0, x19
  41e028:	bl	429c88 <wcrtomb@plt+0x25068>
  41e02c:	ldp	x19, x20, [sp, #16]
  41e030:	ldp	x29, x30, [sp], #48
  41e034:	b	4056c0 <wcrtomb@plt+0xaa0>
  41e038:	stp	x29, x30, [sp, #-32]!
  41e03c:	mov	x29, sp
  41e040:	stp	x19, x20, [sp, #16]
  41e044:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e048:	add	x19, x19, #0xe0
  41e04c:	ldrb	w0, [x19, #377]
  41e050:	cbz	w0, 41e060 <wcrtomb@plt+0x19440>
  41e054:	ldp	x19, x20, [sp, #16]
  41e058:	ldp	x29, x30, [sp], #32
  41e05c:	ret
  41e060:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e064:	ldr	x0, [x0, #104]
  41e068:	ldrb	w20, [x0, #156]
  41e06c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  41e070:	mov	x0, x19
  41e074:	bl	405618 <wcrtomb@plt+0x9f8>
  41e078:	ldrb	w0, [x19, #272]
  41e07c:	cbnz	w0, 41e0a8 <wcrtomb@plt+0x19488>
  41e080:	cmp	w20, #0x35
  41e084:	b.ne	41e094 <wcrtomb@plt+0x19474>  // b.any
  41e088:	ldp	x19, x20, [sp, #16]
  41e08c:	ldp	x29, x30, [sp], #32
  41e090:	b	4056c0 <wcrtomb@plt+0xaa0>
  41e094:	ldr	x0, [x19, #136]
  41e098:	bl	41d860 <wcrtomb@plt+0x18c40>
  41e09c:	ldp	x19, x20, [sp, #16]
  41e0a0:	ldp	x29, x30, [sp], #32
  41e0a4:	b	4056c0 <wcrtomb@plt+0xaa0>
  41e0a8:	mov	x0, x19
  41e0ac:	bl	429c88 <wcrtomb@plt+0x25068>
  41e0b0:	ldp	x19, x20, [sp, #16]
  41e0b4:	ldp	x29, x30, [sp], #32
  41e0b8:	b	4056c0 <wcrtomb@plt+0xaa0>
  41e0bc:	nop
  41e0c0:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41e0c4:	add	x3, x3, #0x910
  41e0c8:	stp	x29, x30, [sp, #-32]!
  41e0cc:	add	x3, x3, #0x10
  41e0d0:	mov	x0, x3
  41e0d4:	mov	x29, sp
  41e0d8:	mov	w1, #0x40                  	// #64
  41e0dc:	mov	x2, #0x100                 	// #256
  41e0e0:	stp	x19, x20, [sp, #16]
  41e0e4:	bl	404410 <memset@plt>
  41e0e8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e0ec:	add	x1, x1, #0xf10
  41e0f0:	mov	x3, x0
  41e0f4:	mov	x0, #0x0                   	// #0
  41e0f8:	ldrb	w2, [x1, x0]
  41e0fc:	strb	w0, [x3, w2, sxtw]
  41e100:	add	x0, x0, #0x1
  41e104:	cmp	x0, #0x40
  41e108:	b.ne	41e0f8 <wcrtomb@plt+0x194d8>  // b.any
  41e10c:	bl	422440 <wcrtomb@plt+0x1d820>
  41e110:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e114:	mov	w0, #0x0                   	// #0
  41e118:	add	x19, x19, #0xe0
  41e11c:	bl	408d78 <wcrtomb@plt+0x4158>
  41e120:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e124:	mov	x1, x19
  41e128:	add	x0, x20, #0x68
  41e12c:	mov	w2, #0x0                   	// #0
  41e130:	bl	41c318 <wcrtomb@plt+0x176f8>
  41e134:	cmp	w0, #0x1
  41e138:	b.eq	41e14c <wcrtomb@plt+0x1952c>  // b.none
  41e13c:	bl	406be8 <wcrtomb@plt+0x1fc8>
  41e140:	ldp	x19, x20, [sp, #16]
  41e144:	ldp	x29, x30, [sp], #32
  41e148:	b	422e38 <wcrtomb@plt+0x1e218>
  41e14c:	ldr	x0, [x20, #104]
  41e150:	mov	x1, x19
  41e154:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e158:	mov	w3, #0x0                   	// #0
  41e15c:	add	x2, x2, #0x50
  41e160:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e164:	bl	41c8b0 <wcrtomb@plt+0x17c90>
  41e168:	ldr	x1, [x20, #104]
  41e16c:	ldrb	w0, [x1, #156]
  41e170:	cmp	w0, #0x56
  41e174:	b.eq	41e1c0 <wcrtomb@plt+0x195a0>  // b.none
  41e178:	ldr	x0, [x19]
  41e17c:	cbz	x0, 41e13c <wcrtomb@plt+0x1951c>
  41e180:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e184:	ldr	w1, [x1, #772]
  41e188:	cbnz	w1, 41e1d0 <wcrtomb@plt+0x195b0>
  41e18c:	bl	422a70 <wcrtomb@plt+0x1de50>
  41e190:	tst	w0, #0xff
  41e194:	b.ne	41e13c <wcrtomb@plt+0x1951c>  // b.any
  41e198:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e19c:	ldrb	w0, [x0, #204]
  41e1a0:	cbz	w0, 41e13c <wcrtomb@plt+0x1951c>
  41e1a4:	ldr	x0, [x19]
  41e1a8:	bl	408a78 <wcrtomb@plt+0x3e58>
  41e1ac:	mov	x19, x0
  41e1b0:	bl	422a70 <wcrtomb@plt+0x1de50>
  41e1b4:	mov	x0, x19
  41e1b8:	bl	4047b0 <free@plt>
  41e1bc:	b	41e13c <wcrtomb@plt+0x1951c>
  41e1c0:	add	x0, x19, #0x0
  41e1c4:	mov	x2, #0x64                  	// #100
  41e1c8:	bl	41e910 <wcrtomb@plt+0x19cf0>
  41e1cc:	b	41e178 <wcrtomb@plt+0x19558>
  41e1d0:	bl	41d648 <wcrtomb@plt+0x18a28>
  41e1d4:	ldr	x0, [x19]
  41e1d8:	b	41e18c <wcrtomb@plt+0x1956c>
  41e1dc:	nop
  41e1e0:	ldr	x0, [x0]
  41e1e4:	udiv	x2, x0, x1
  41e1e8:	msub	x0, x2, x1, x0
  41e1ec:	ret
  41e1f0:	ldr	x2, [x0]
  41e1f4:	ldr	x0, [x1]
  41e1f8:	cmp	x2, x0
  41e1fc:	cset	w0, eq  // eq = none
  41e200:	ret
  41e204:	nop
  41e208:	stp	x29, x30, [sp, #-16]!
  41e20c:	mov	x29, sp
  41e210:	bl	404440 <getpwnam@plt>
  41e214:	cbz	x0, 41e224 <wcrtomb@plt+0x19604>
  41e218:	ldr	w0, [x0, #16]
  41e21c:	ldp	x29, x30, [sp], #16
  41e220:	ret
  41e224:	mov	x0, #0xffffffffffffffff    	// #-1
  41e228:	ldp	x29, x30, [sp], #16
  41e22c:	ret
  41e230:	stp	x29, x30, [sp, #-16]!
  41e234:	mov	x29, sp
  41e238:	bl	404110 <getgrnam@plt>
  41e23c:	cbz	x0, 41e24c <wcrtomb@plt+0x1962c>
  41e240:	ldr	w0, [x0, #16]
  41e244:	ldp	x29, x30, [sp], #16
  41e248:	ret
  41e24c:	mov	x0, #0xffffffffffffffff    	// #-1
  41e250:	ldp	x29, x30, [sp], #16
  41e254:	ret
  41e258:	stp	x29, x30, [sp, #-80]!
  41e25c:	mov	x29, sp
  41e260:	stp	x19, x20, [sp, #16]
  41e264:	mov	x20, x1
  41e268:	stp	x21, x22, [sp, #32]
  41e26c:	mov	x22, x3
  41e270:	mov	x21, x0
  41e274:	stp	x23, x24, [sp, #48]
  41e278:	mov	x24, x2
  41e27c:	mov	w23, w4
  41e280:	bl	404ad0 <__errno_location@plt>
  41e284:	mov	x19, x0
  41e288:	add	x1, sp, #0x48
  41e28c:	mov	x0, x20
  41e290:	mov	w3, #0x0                   	// #0
  41e294:	mov	w2, #0xa                   	// #10
  41e298:	str	wzr, [x19]
  41e29c:	bl	4044b0 <__strtoul_internal@plt>
  41e2a0:	mov	x5, x0
  41e2a4:	ldr	x1, [sp, #72]
  41e2a8:	ldrb	w0, [x1]
  41e2ac:	cbnz	w0, 41e2dc <wcrtomb@plt+0x196bc>
  41e2b0:	ldr	w0, [x19]
  41e2b4:	cbnz	w0, 41e2dc <wcrtomb@plt+0x196bc>
  41e2b8:	mov	x1, #0xffffffff            	// #4294967295
  41e2bc:	cmp	x5, x1
  41e2c0:	b.hi	41e318 <wcrtomb@plt+0x196f8>  // b.pmore
  41e2c4:	str	x5, [x21]
  41e2c8:	ldp	x19, x20, [sp, #16]
  41e2cc:	ldp	x21, x22, [sp, #32]
  41e2d0:	ldp	x23, x24, [sp, #48]
  41e2d4:	ldp	x29, x30, [sp], #80
  41e2d8:	ret
  41e2dc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e2e0:	add	x1, x1, #0xf50
  41e2e4:	mov	w2, #0x5                   	// #5
  41e2e8:	mov	x0, #0x0                   	// #0
  41e2ec:	bl	4049c0 <dcgettext@plt>
  41e2f0:	mov	x6, x20
  41e2f4:	mov	x2, x0
  41e2f8:	mov	x5, x24
  41e2fc:	mov	w0, #0x0                   	// #0
  41e300:	mov	w4, w23
  41e304:	mov	x3, x22
  41e308:	mov	w1, #0x0                   	// #0
  41e30c:	bl	404050 <error@plt>
  41e310:	mov	w0, #0xffffffff            	// #-1
  41e314:	b	41e2c8 <wcrtomb@plt+0x196a8>
  41e318:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e31c:	mov	w2, #0x5                   	// #5
  41e320:	add	x1, x1, #0xf68
  41e324:	b	41e2e8 <wcrtomb@plt+0x196c8>
  41e328:	stp	x29, x30, [sp, #-384]!
  41e32c:	mov	x29, sp
  41e330:	stp	x19, x20, [sp, #16]
  41e334:	stp	x21, x22, [sp, #32]
  41e338:	mov	x22, x1
  41e33c:	stp	x23, x24, [sp, #48]
  41e340:	mov	x24, x0
  41e344:	mov	x23, x3
  41e348:	mov	x0, x1
  41e34c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  41e350:	add	x1, x1, #0xc28
  41e354:	stp	x25, x26, [sp, #64]
  41e358:	mov	x26, x2
  41e35c:	stp	x27, x28, [sp, #80]
  41e360:	stp	xzr, xzr, [sp, #120]
  41e364:	bl	4042e0 <fopen@plt>
  41e368:	cbz	x0, 41e6fc <wcrtomb@plt+0x19adc>
  41e36c:	adrp	x28, 41e000 <wcrtomb@plt+0x193e0>
  41e370:	add	x1, x28, #0x1f0
  41e374:	mov	x21, x0
  41e378:	adrp	x27, 41e000 <wcrtomb@plt+0x193e0>
  41e37c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e380:	add	x0, x0, #0xf88
  41e384:	str	x1, [sp, #96]
  41e388:	add	x1, x27, #0x1e0
  41e38c:	mov	x3, x21
  41e390:	mov	w2, #0xa                   	// #10
  41e394:	mov	w25, #0x0                   	// #0
  41e398:	mov	w20, #0x0                   	// #0
  41e39c:	mov	w19, #0x8e44                	// #36420
  41e3a0:	str	x1, [sp, #104]
  41e3a4:	add	x1, sp, #0x80
  41e3a8:	str	x0, [sp, #216]
  41e3ac:	add	x0, sp, #0x78
  41e3b0:	bl	404b40 <__getdelim@plt>
  41e3b4:	cmp	x0, #0x0
  41e3b8:	b.le	41e478 <wcrtomb@plt+0x19858>
  41e3bc:	nop
  41e3c0:	ldr	x0, [sp, #120]
  41e3c4:	mov	w2, w19
  41e3c8:	add	w20, w20, #0x1
  41e3cc:	add	x1, sp, #0x98
  41e3d0:	bl	438ea0 <wcrtomb@plt+0x34280>
  41e3d4:	cbnz	w0, 41e674 <wcrtomb@plt+0x19a54>
  41e3d8:	ldr	x0, [sp, #152]
  41e3dc:	cbz	x0, 41e458 <wcrtomb@plt+0x19838>
  41e3e0:	cmp	x0, #0x2
  41e3e4:	b.ne	41e500 <wcrtomb@plt+0x198e0>  // b.any
  41e3e8:	ldr	x0, [sp, #160]
  41e3ec:	ldr	x0, [x0]
  41e3f0:	ldrb	w1, [x0]
  41e3f4:	cmp	w1, #0x2b
  41e3f8:	b.eq	41e594 <wcrtomb@plt+0x19974>  // b.none
  41e3fc:	blr	x26
  41e400:	str	x0, [sp, #136]
  41e404:	cmn	x0, #0x1
  41e408:	b.eq	41e5b8 <wcrtomb@plt+0x19998>  // b.none
  41e40c:	ldr	x0, [sp, #160]
  41e410:	mov	w1, #0x3a                  	// #58
  41e414:	ldr	x27, [x0, #8]
  41e418:	mov	x0, x27
  41e41c:	bl	404870 <strchr@plt>
  41e420:	mov	x19, x0
  41e424:	cbz	x0, 41e4a4 <wcrtomb@plt+0x19884>
  41e428:	cmp	x27, x0
  41e42c:	add	x1, x0, #0x1
  41e430:	b.cs	41e538 <wcrtomb@plt+0x19918>  // b.hs, b.nlast
  41e434:	strb	wzr, [x0]
  41e438:	mov	w4, w20
  41e43c:	mov	x3, x22
  41e440:	mov	x2, x23
  41e444:	add	x0, sp, #0x90
  41e448:	bl	41e258 <wcrtomb@plt+0x19638>
  41e44c:	cbz	w0, 41e4c4 <wcrtomb@plt+0x198a4>
  41e450:	mov	w25, #0x1                   	// #1
  41e454:	nop
  41e458:	mov	w19, #0x8e4c                	// #36428
  41e45c:	mov	x3, x21
  41e460:	add	x1, sp, #0x80
  41e464:	add	x0, sp, #0x78
  41e468:	mov	w2, #0xa                   	// #10
  41e46c:	bl	404b40 <__getdelim@plt>
  41e470:	cmp	x0, #0x0
  41e474:	b.gt	41e3c0 <wcrtomb@plt+0x197a0>
  41e478:	tbnz	w19, #3, 41e668 <wcrtomb@plt+0x19a48>
  41e47c:	mov	x0, x21
  41e480:	bl	4042a0 <fclose@plt>
  41e484:	cbnz	w25, 41e6c4 <wcrtomb@plt+0x19aa4>
  41e488:	ldp	x19, x20, [sp, #16]
  41e48c:	ldp	x21, x22, [sp, #32]
  41e490:	ldp	x23, x24, [sp, #48]
  41e494:	ldp	x25, x26, [sp, #64]
  41e498:	ldp	x27, x28, [sp, #80]
  41e49c:	ldp	x29, x30, [sp], #384
  41e4a0:	ret
  41e4a4:	ldrb	w0, [x27]
  41e4a8:	cmp	w0, #0x2b
  41e4ac:	b.eq	41e5fc <wcrtomb@plt+0x199dc>  // b.none
  41e4b0:	mov	x0, x27
  41e4b4:	blr	x26
  41e4b8:	str	x0, [sp, #144]
  41e4bc:	cmn	x0, #0x1
  41e4c0:	b.eq	41e624 <wcrtomb@plt+0x19a04>  // b.none
  41e4c4:	mov	x0, #0x18                  	// #24
  41e4c8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41e4cc:	mov	x28, x0
  41e4d0:	ldp	x1, x0, [sp, #136]
  41e4d4:	stp	x1, x0, [x28]
  41e4d8:	mov	x0, x27
  41e4dc:	bl	450328 <argp_parse@@Base+0x10548>
  41e4e0:	mov	x19, x0
  41e4e4:	ldr	x0, [x24]
  41e4e8:	str	x19, [x28, #16]
  41e4ec:	cbz	x0, 41e578 <wcrtomb@plt+0x19958>
  41e4f0:	mov	x1, x28
  41e4f4:	bl	445410 <argp_parse@@Base+0x5630>
  41e4f8:	cbnz	x0, 41e458 <wcrtomb@plt+0x19838>
  41e4fc:	bl	4104a0 <wcrtomb@plt+0xb880>
  41e500:	mov	w2, #0x5                   	// #5
  41e504:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e508:	mov	x0, #0x0                   	// #0
  41e50c:	add	x1, x1, #0xfb0
  41e510:	bl	4049c0 <dcgettext@plt>
  41e514:	mov	w25, #0x1                   	// #1
  41e518:	mov	x2, x0
  41e51c:	mov	w4, w20
  41e520:	mov	x3, x22
  41e524:	mov	w1, #0x0                   	// #0
  41e528:	mov	w0, #0x0                   	// #0
  41e52c:	mov	w19, #0x8e4c                	// #36428
  41e530:	bl	404050 <error@plt>
  41e534:	b	41e45c <wcrtomb@plt+0x1983c>
  41e538:	strb	wzr, [x0]
  41e53c:	mov	w4, w20
  41e540:	mov	x3, x22
  41e544:	mov	x2, x23
  41e548:	add	x0, sp, #0x90
  41e54c:	bl	41e258 <wcrtomb@plt+0x19638>
  41e550:	cbnz	w0, 41e450 <wcrtomb@plt+0x19830>
  41e554:	mov	x19, #0x0                   	// #0
  41e558:	mov	x0, #0x18                  	// #24
  41e55c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41e560:	mov	x28, x0
  41e564:	ldp	x1, x0, [sp, #136]
  41e568:	stp	x1, x0, [x28]
  41e56c:	ldr	x0, [x24]
  41e570:	str	x19, [x28, #16]
  41e574:	cbnz	x0, 41e4f0 <wcrtomb@plt+0x198d0>
  41e578:	ldp	x3, x2, [sp, #96]
  41e57c:	mov	x4, #0x0                   	// #0
  41e580:	mov	x1, #0x0                   	// #0
  41e584:	bl	444c38 <argp_parse@@Base+0x4e58>
  41e588:	str	x0, [x24]
  41e58c:	cbnz	x0, 41e4f0 <wcrtomb@plt+0x198d0>
  41e590:	bl	4104a0 <wcrtomb@plt+0xb880>
  41e594:	add	x1, x0, #0x1
  41e598:	mov	w4, w20
  41e59c:	mov	x3, x22
  41e5a0:	mov	x2, x23
  41e5a4:	add	x0, sp, #0x88
  41e5a8:	bl	41e258 <wcrtomb@plt+0x19638>
  41e5ac:	cbz	w0, 41e40c <wcrtomb@plt+0x197ec>
  41e5b0:	mov	w25, #0x1                   	// #1
  41e5b4:	b	41e458 <wcrtomb@plt+0x19838>
  41e5b8:	mov	w2, #0x5                   	// #5
  41e5bc:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e5c0:	mov	x0, #0x0                   	// #0
  41e5c4:	add	x1, x1, #0xfc8
  41e5c8:	bl	4049c0 <dcgettext@plt>
  41e5cc:	mov	w25, #0x1                   	// #1
  41e5d0:	ldr	x6, [sp, #160]
  41e5d4:	mov	x2, x0
  41e5d8:	mov	x5, x23
  41e5dc:	mov	w4, w20
  41e5e0:	mov	x3, x22
  41e5e4:	mov	w1, #0x0                   	// #0
  41e5e8:	ldr	x6, [x6]
  41e5ec:	mov	w0, #0x0                   	// #0
  41e5f0:	mov	w19, #0x8e4c                	// #36428
  41e5f4:	bl	404050 <error@plt>
  41e5f8:	b	41e45c <wcrtomb@plt+0x1983c>
  41e5fc:	mov	x1, x27
  41e600:	mov	w4, w20
  41e604:	mov	x3, x22
  41e608:	mov	x2, x23
  41e60c:	add	x0, sp, #0x90
  41e610:	bl	41e258 <wcrtomb@plt+0x19638>
  41e614:	cbnz	w0, 41e450 <wcrtomb@plt+0x19830>
  41e618:	mov	x0, #0x18                  	// #24
  41e61c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41e620:	b	41e560 <wcrtomb@plt+0x19940>
  41e624:	mov	w2, #0x5                   	// #5
  41e628:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e62c:	mov	x0, #0x0                   	// #0
  41e630:	add	x1, x1, #0xfc8
  41e634:	bl	4049c0 <dcgettext@plt>
  41e638:	mov	w25, #0x1                   	// #1
  41e63c:	ldr	x6, [sp, #160]
  41e640:	mov	x2, x0
  41e644:	mov	x5, x23
  41e648:	mov	w4, w20
  41e64c:	mov	x3, x22
  41e650:	mov	w1, #0x0                   	// #0
  41e654:	ldr	x6, [x6, #8]
  41e658:	mov	w0, #0x0                   	// #0
  41e65c:	mov	w19, #0x8e4c                	// #36428
  41e660:	bl	404050 <error@plt>
  41e664:	b	41e45c <wcrtomb@plt+0x1983c>
  41e668:	add	x0, sp, #0x98
  41e66c:	bl	436e10 <wcrtomb@plt+0x321f0>
  41e670:	b	41e47c <wcrtomb@plt+0x1985c>
  41e674:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e678:	ldr	x0, [x0, #1136]
  41e67c:	cbz	x0, 41e684 <wcrtomb@plt+0x19a64>
  41e680:	blr	x0
  41e684:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e688:	add	x1, x1, #0xf90
  41e68c:	mov	w2, #0x5                   	// #5
  41e690:	mov	x0, #0x0                   	// #0
  41e694:	bl	4049c0 <dcgettext@plt>
  41e698:	mov	x19, x0
  41e69c:	add	x0, sp, #0x98
  41e6a0:	bl	43a9b0 <wcrtomb@plt+0x35d90>
  41e6a4:	mov	w4, w20
  41e6a8:	mov	x5, x0
  41e6ac:	mov	x3, x22
  41e6b0:	mov	x2, x19
  41e6b4:	mov	w1, #0x0                   	// #0
  41e6b8:	mov	w0, #0x0                   	// #0
  41e6bc:	bl	404050 <error@plt>
  41e6c0:	bl	410460 <wcrtomb@plt+0xb840>
  41e6c4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e6c8:	ldr	x0, [x0, #1136]
  41e6cc:	cbz	x0, 41e6d4 <wcrtomb@plt+0x19ab4>
  41e6d0:	blr	x0
  41e6d4:	mov	w2, #0x5                   	// #5
  41e6d8:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  41e6dc:	mov	x0, #0x0                   	// #0
  41e6e0:	add	x1, x1, #0xfe8
  41e6e4:	bl	4049c0 <dcgettext@plt>
  41e6e8:	mov	x2, x0
  41e6ec:	mov	w1, #0x0                   	// #0
  41e6f0:	mov	w0, #0x0                   	// #0
  41e6f4:	bl	404050 <error@plt>
  41e6f8:	bl	410460 <wcrtomb@plt+0xb840>
  41e6fc:	mov	x0, x22
  41e700:	bl	433b88 <wcrtomb@plt+0x2ef68>
  41e704:	nop
  41e708:	mov	x1, x0
  41e70c:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41e710:	adrp	x2, 41e000 <wcrtomb@plt+0x193e0>
  41e714:	add	x3, x3, #0x0
  41e718:	add	x2, x2, #0x208
  41e71c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41e720:	add	x0, x0, #0xa58
  41e724:	b	41e328 <wcrtomb@plt+0x19708>
  41e728:	stp	x29, x30, [sp, #-64]!
  41e72c:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41e730:	mov	x29, sp
  41e734:	ldr	x4, [x3, #2648]
  41e738:	stp	x19, x20, [sp, #16]
  41e73c:	mov	x20, x1
  41e740:	mov	x19, x2
  41e744:	cbz	x4, 41e780 <wcrtomb@plt+0x19b60>
  41e748:	mov	w3, w0
  41e74c:	add	x1, sp, #0x28
  41e750:	mov	x0, x4
  41e754:	str	x3, [sp, #40]
  41e758:	bl	444958 <argp_parse@@Base+0x4b78>
  41e75c:	cbz	x0, 41e780 <wcrtomb@plt+0x19b60>
  41e760:	ldr	x1, [x0, #8]
  41e764:	str	w1, [x20]
  41e768:	ldr	x1, [x0, #16]
  41e76c:	mov	w0, #0x0                   	// #0
  41e770:	str	x1, [x19]
  41e774:	ldp	x19, x20, [sp, #16]
  41e778:	ldp	x29, x30, [sp], #64
  41e77c:	ret
  41e780:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e784:	mov	w0, #0x1                   	// #1
  41e788:	ldr	w1, [x1, #912]
  41e78c:	cmn	w1, #0x1
  41e790:	b.eq	41e79c <wcrtomb@plt+0x19b7c>  // b.none
  41e794:	mov	w0, #0x0                   	// #0
  41e798:	str	w1, [x20]
  41e79c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e7a0:	ldr	x1, [x1, #712]
  41e7a4:	cbz	x1, 41e774 <wcrtomb@plt+0x19b54>
  41e7a8:	str	x1, [x19]
  41e7ac:	mov	w0, #0x0                   	// #0
  41e7b0:	ldp	x19, x20, [sp, #16]
  41e7b4:	ldp	x29, x30, [sp], #64
  41e7b8:	ret
  41e7bc:	nop
  41e7c0:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41e7c4:	add	x2, x2, #0xa58
  41e7c8:	mov	x1, x0
  41e7cc:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41e7d0:	add	x0, x2, #0x8
  41e7d4:	add	x3, x3, #0x8
  41e7d8:	adrp	x2, 41e000 <wcrtomb@plt+0x193e0>
  41e7dc:	add	x2, x2, #0x230
  41e7e0:	b	41e328 <wcrtomb@plt+0x19708>
  41e7e4:	nop
  41e7e8:	stp	x29, x30, [sp, #-64]!
  41e7ec:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41e7f0:	mov	x29, sp
  41e7f4:	ldr	x4, [x3, #2656]
  41e7f8:	stp	x19, x20, [sp, #16]
  41e7fc:	mov	x20, x1
  41e800:	mov	x19, x2
  41e804:	cbz	x4, 41e840 <wcrtomb@plt+0x19c20>
  41e808:	mov	w3, w0
  41e80c:	add	x1, sp, #0x28
  41e810:	mov	x0, x4
  41e814:	str	x3, [sp, #40]
  41e818:	bl	444958 <argp_parse@@Base+0x4b78>
  41e81c:	cbz	x0, 41e840 <wcrtomb@plt+0x19c20>
  41e820:	ldr	x1, [x0, #8]
  41e824:	str	w1, [x20]
  41e828:	ldr	x1, [x0, #16]
  41e82c:	mov	w0, #0x0                   	// #0
  41e830:	str	x1, [x19]
  41e834:	ldp	x19, x20, [sp, #16]
  41e838:	ldp	x29, x30, [sp], #64
  41e83c:	ret
  41e840:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e844:	mov	w0, #0x1                   	// #1
  41e848:	ldr	w1, [x1, #832]
  41e84c:	cmn	w1, #0x1
  41e850:	b.eq	41e85c <wcrtomb@plt+0x19c3c>  // b.none
  41e854:	mov	w0, #0x0                   	// #0
  41e858:	str	w1, [x20]
  41e85c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41e860:	ldr	x1, [x1, #656]
  41e864:	cbz	x1, 41e834 <wcrtomb@plt+0x19c14>
  41e868:	str	x1, [x19]
  41e86c:	mov	w0, #0x0                   	// #0
  41e870:	ldp	x19, x20, [sp, #16]
  41e874:	ldp	x29, x30, [sp], #64
  41e878:	ret
  41e87c:	nop
  41e880:	ret
  41e884:	nop
  41e888:	mvn	x0, x1
  41e88c:	lsr	x0, x0, #63
  41e890:	ret
  41e894:	nop
  41e898:	stp	x29, x30, [sp, #-32]!
  41e89c:	mov	x29, sp
  41e8a0:	stp	x19, x20, [sp, #16]
  41e8a4:	mov	x20, x1
  41e8a8:	mov	w19, w0
  41e8ac:	mov	x0, #0x0                   	// #0
  41e8b0:	bl	44d1f0 <argp_parse@@Base+0xd410>
  41e8b4:	mov	x2, x20
  41e8b8:	mov	w1, w0
  41e8bc:	mov	w0, w19
  41e8c0:	ldp	x19, x20, [sp, #16]
  41e8c4:	ldp	x29, x30, [sp], #32
  41e8c8:	b	44e5c8 <argp_parse@@Base+0xe7e8>
  41e8cc:	nop
  41e8d0:	stp	x29, x30, [sp, #-32]!
  41e8d4:	mov	x29, sp
  41e8d8:	stp	x19, x20, [sp, #16]
  41e8dc:	mov	x20, x0
  41e8e0:	mov	x19, x1
  41e8e4:	ldr	x0, [x0]
  41e8e8:	bl	4047b0 <free@plt>
  41e8ec:	cbz	x19, 41e8fc <wcrtomb@plt+0x19cdc>
  41e8f0:	mov	x0, x19
  41e8f4:	bl	450328 <argp_parse@@Base+0x10548>
  41e8f8:	mov	x19, x0
  41e8fc:	str	x19, [x20]
  41e900:	ldp	x19, x20, [sp, #16]
  41e904:	ldp	x29, x30, [sp], #32
  41e908:	ret
  41e90c:	nop
  41e910:	stp	x29, x30, [sp, #-48]!
  41e914:	mov	x29, sp
  41e918:	stp	x19, x20, [sp, #16]
  41e91c:	mov	x20, x0
  41e920:	mov	x19, x1
  41e924:	ldr	x0, [x0]
  41e928:	str	x21, [sp, #32]
  41e92c:	mov	x21, x2
  41e930:	bl	4047b0 <free@plt>
  41e934:	cbz	x19, 41e968 <wcrtomb@plt+0x19d48>
  41e938:	mov	x1, x21
  41e93c:	mov	x0, x19
  41e940:	bl	4040c0 <strnlen@plt>
  41e944:	mov	x21, x0
  41e948:	add	x0, x0, #0x1
  41e94c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41e950:	mov	x1, x19
  41e954:	mov	x19, x0
  41e958:	mov	x2, x21
  41e95c:	bl	403f70 <memcpy@plt>
  41e960:	str	x19, [x20]
  41e964:	strb	wzr, [x19, x21]
  41e968:	ldp	x19, x20, [sp, #16]
  41e96c:	ldr	x21, [sp, #32]
  41e970:	ldp	x29, x30, [sp], #48
  41e974:	ret
  41e978:	ldrb	w4, [x0]
  41e97c:	mov	x1, x0
  41e980:	cbz	w4, 41ebdc <wcrtomb@plt+0x19fbc>
  41e984:	mov	x2, x0
  41e988:	mov	w15, #0xc                   	// #12
  41e98c:	mov	w0, #0x1                   	// #1
  41e990:	mov	w14, #0x5c                  	// #92
  41e994:	mov	w13, #0x9                   	// #9
  41e998:	mov	w12, #0xb                   	// #11
  41e99c:	mov	w11, #0xa                   	// #10
  41e9a0:	mov	w10, #0xd                   	// #13
  41e9a4:	mov	w9, #0x7                   	// #7
  41e9a8:	mov	w8, #0x8                   	// #8
  41e9ac:	mov	w7, #0x7f                  	// #127
  41e9b0:	cmp	w4, #0x5c
  41e9b4:	add	x6, x2, #0x1
  41e9b8:	add	x5, x1, #0x1
  41e9bc:	b.eq	41e9ec <wcrtomb@plt+0x19dcc>  // b.none
  41e9c0:	cmp	x1, x2
  41e9c4:	b.eq	41eadc <wcrtomb@plt+0x19ebc>  // b.none
  41e9c8:	strb	w4, [x1]
  41e9cc:	mov	x1, x5
  41e9d0:	ldrb	w4, [x2, #1]
  41e9d4:	mov	x2, x6
  41e9d8:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41e9dc:	cmp	x2, x1
  41e9e0:	b.eq	41e9e8 <wcrtomb@plt+0x19dc8>  // b.none
  41e9e4:	strb	wzr, [x1]
  41e9e8:	ret
  41e9ec:	ldrb	w3, [x2, #1]
  41e9f0:	cmp	w3, #0x66
  41e9f4:	b.eq	41eb80 <wcrtomb@plt+0x19f60>  // b.none
  41e9f8:	b.hi	41ea30 <wcrtomb@plt+0x19e10>  // b.pmore
  41e9fc:	cmp	w3, #0x5c
  41ea00:	b.eq	41eb68 <wcrtomb@plt+0x19f48>  // b.none
  41ea04:	b.ls	41ea5c <wcrtomb@plt+0x19e3c>  // b.plast
  41ea08:	cmp	w3, #0x61
  41ea0c:	b.eq	41eb50 <wcrtomb@plt+0x19f30>  // b.none
  41ea10:	cmp	w3, #0x62
  41ea14:	b.ne	41ea6c <wcrtomb@plt+0x19e4c>  // b.any
  41ea18:	strb	w8, [x1]
  41ea1c:	add	x2, x2, #0x2
  41ea20:	mov	x1, x5
  41ea24:	ldrb	w4, [x2]
  41ea28:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ea2c:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ea30:	cmp	w3, #0x74
  41ea34:	b.eq	41eb98 <wcrtomb@plt+0x19f78>  // b.none
  41ea38:	b.ls	41ea94 <wcrtomb@plt+0x19e74>  // b.plast
  41ea3c:	cmp	w3, #0x76
  41ea40:	b.ne	41ea6c <wcrtomb@plt+0x19e4c>  // b.any
  41ea44:	strb	w12, [x1]
  41ea48:	add	x2, x2, #0x2
  41ea4c:	mov	x1, x5
  41ea50:	ldrb	w4, [x2]
  41ea54:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ea58:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ea5c:	cmp	w3, #0x37
  41ea60:	b.hi	41eabc <wcrtomb@plt+0x19e9c>  // b.pmore
  41ea64:	cmp	w3, #0x2f
  41ea68:	b.hi	41eb08 <wcrtomb@plt+0x19ee8>  // b.pmore
  41ea6c:	strb	w14, [x1]
  41ea70:	ldrb	w0, [x2, #1]
  41ea74:	cbz	w0, 41ebcc <wcrtomb@plt+0x19fac>
  41ea78:	strb	w0, [x1, #1]
  41ea7c:	add	x2, x2, #0x2
  41ea80:	add	x1, x1, #0x2
  41ea84:	mov	w0, #0x0                   	// #0
  41ea88:	ldrb	w4, [x2]
  41ea8c:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ea90:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ea94:	cmp	w3, #0x6e
  41ea98:	b.eq	41eaf0 <wcrtomb@plt+0x19ed0>  // b.none
  41ea9c:	cmp	w3, #0x72
  41eaa0:	b.ne	41ea6c <wcrtomb@plt+0x19e4c>  // b.any
  41eaa4:	strb	w10, [x1]
  41eaa8:	add	x2, x2, #0x2
  41eaac:	mov	x1, x5
  41eab0:	ldrb	w4, [x2]
  41eab4:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eab8:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eabc:	cmp	w3, #0x3f
  41eac0:	b.ne	41ea6c <wcrtomb@plt+0x19e4c>  // b.any
  41eac4:	strb	w7, [x1]
  41eac8:	add	x2, x2, #0x2
  41eacc:	mov	x1, x5
  41ead0:	ldrb	w4, [x2]
  41ead4:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ead8:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eadc:	ldrb	w4, [x1, #1]
  41eae0:	mov	x2, x6
  41eae4:	mov	x1, x5
  41eae8:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eaec:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eaf0:	strb	w11, [x1]
  41eaf4:	add	x2, x2, #0x2
  41eaf8:	mov	x1, x5
  41eafc:	ldrb	w4, [x2]
  41eb00:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eb04:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eb08:	ldrb	w6, [x2, #2]
  41eb0c:	sub	w4, w6, #0x30
  41eb10:	and	w4, w4, #0xff
  41eb14:	cmp	w4, #0x7
  41eb18:	b.hi	41ebb0 <wcrtomb@plt+0x19f90>  // b.pmore
  41eb1c:	ldrb	w16, [x2, #3]
  41eb20:	add	w3, w6, w3, lsl #3
  41eb24:	sub	w3, w3, #0x1b0
  41eb28:	sub	w4, w16, #0x30
  41eb2c:	and	w4, w4, #0xff
  41eb30:	cmp	w4, #0x7
  41eb34:	b.ls	41ebe4 <wcrtomb@plt+0x19fc4>  // b.plast
  41eb38:	strb	w3, [x1]
  41eb3c:	add	x2, x2, #0x3
  41eb40:	mov	x1, x5
  41eb44:	ldrb	w4, [x2]
  41eb48:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eb4c:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eb50:	strb	w9, [x1]
  41eb54:	add	x2, x2, #0x2
  41eb58:	mov	x1, x5
  41eb5c:	ldrb	w4, [x2]
  41eb60:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eb64:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eb68:	strb	w4, [x1]
  41eb6c:	add	x2, x2, #0x2
  41eb70:	mov	x1, x5
  41eb74:	ldrb	w4, [x2]
  41eb78:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eb7c:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eb80:	strb	w15, [x1]
  41eb84:	add	x2, x2, #0x2
  41eb88:	mov	x1, x5
  41eb8c:	ldrb	w4, [x2]
  41eb90:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41eb94:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41eb98:	strb	w13, [x1]
  41eb9c:	add	x2, x2, #0x2
  41eba0:	mov	x1, x5
  41eba4:	ldrb	w4, [x2]
  41eba8:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ebac:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ebb0:	sub	w3, w3, #0x30
  41ebb4:	strb	w3, [x1]
  41ebb8:	add	x2, x2, #0x2
  41ebbc:	mov	x1, x5
  41ebc0:	ldrb	w4, [x2]
  41ebc4:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ebc8:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ebcc:	mov	x2, x6
  41ebd0:	mov	x1, x5
  41ebd4:	mov	w0, #0x0                   	// #0
  41ebd8:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ebdc:	mov	w0, #0x1                   	// #1
  41ebe0:	ret
  41ebe4:	add	w3, w16, w3, lsl #3
  41ebe8:	add	x2, x2, #0x4
  41ebec:	sub	w3, w3, #0x30
  41ebf0:	strb	w3, [x1]
  41ebf4:	mov	x1, x5
  41ebf8:	ldrb	w4, [x2]
  41ebfc:	cbnz	w4, 41e9b0 <wcrtomb@plt+0x19d90>
  41ec00:	b	41e9dc <wcrtomb@plt+0x19dbc>
  41ec04:	nop
  41ec08:	stp	x29, x30, [sp, #-32]!
  41ec0c:	mov	x29, sp
  41ec10:	str	x19, [sp, #16]
  41ec14:	mov	x19, x0
  41ec18:	cbz	x0, 41ec54 <wcrtomb@plt+0x1a034>
  41ec1c:	ldrb	w1, [x0]
  41ec20:	cbz	w1, 41ec54 <wcrtomb@plt+0x1a034>
  41ec24:	bl	403ff0 <strlen@plt>
  41ec28:	sub	x1, x0, #0x1
  41ec2c:	add	x1, x19, x1
  41ec30:	cmp	x19, x1
  41ec34:	b.cc	41ec48 <wcrtomb@plt+0x1a028>  // b.lo, b.ul, b.last
  41ec38:	b	41ec54 <wcrtomb@plt+0x1a034>
  41ec3c:	strb	wzr, [x1], #-1
  41ec40:	cmp	x19, x1
  41ec44:	b.eq	41ec54 <wcrtomb@plt+0x1a034>  // b.none
  41ec48:	ldrb	w0, [x1]
  41ec4c:	cmp	w0, #0x2f
  41ec50:	b.eq	41ec3c <wcrtomb@plt+0x1a01c>  // b.none
  41ec54:	mov	x0, x19
  41ec58:	ldr	x19, [sp, #16]
  41ec5c:	ldp	x29, x30, [sp], #32
  41ec60:	ret
  41ec64:	nop
  41ec68:	ldrb	w5, [x0]
  41ec6c:	mov	x1, x0
  41ec70:	mov	x4, x0
  41ec74:	cmp	w5, #0x2e
  41ec78:	b.eq	41ec94 <wcrtomb@plt+0x1a074>  // b.none
  41ec7c:	b	41ece0 <wcrtomb@plt+0x1a0c0>
  41ec80:	cmp	w2, #0x0
  41ec84:	cinc	x4, x4, eq  // eq = none
  41ec88:	cmp	w2, #0x2e
  41ec8c:	strb	w2, [x4]
  41ec90:	b.ne	41ecdc <wcrtomb@plt+0x1a0bc>  // b.any
  41ec94:	ldrb	w2, [x1, #1]
  41ec98:	cmp	w2, #0x2f
  41ec9c:	b.ne	41ecdc <wcrtomb@plt+0x1a0bc>  // b.any
  41eca0:	ldrb	w2, [x1, #2]
  41eca4:	add	x3, x1, #0x2
  41eca8:	mov	x1, x3
  41ecac:	cmp	w2, #0x2f
  41ecb0:	b.ne	41ec80 <wcrtomb@plt+0x1a060>  // b.any
  41ecb4:	ldrb	w2, [x3, #1]
  41ecb8:	add	x1, x3, #0x1
  41ecbc:	cmp	w2, #0x2f
  41ecc0:	b.ne	41ec80 <wcrtomb@plt+0x1a060>  // b.any
  41ecc4:	mov	x3, x1
  41ecc8:	add	x1, x3, #0x1
  41eccc:	ldrb	w2, [x3, #1]
  41ecd0:	cmp	w2, #0x2f
  41ecd4:	b.ne	41ec80 <wcrtomb@plt+0x1a060>  // b.any
  41ecd8:	b	41ecc4 <wcrtomb@plt+0x1a0a4>
  41ecdc:	ldrb	w5, [x1]
  41ece0:	mov	x6, x4
  41ece4:	add	x1, x1, #0x1
  41ece8:	strb	w5, [x6], #1
  41ecec:	cbnz	w5, 41ed0c <wcrtomb@plt+0x1a0ec>
  41ecf0:	b	41ed64 <wcrtomb@plt+0x1a144>
  41ecf4:	mov	x3, x6
  41ecf8:	mov	w5, w2
  41ecfc:	add	x1, x1, #0x1
  41ed00:	strb	w2, [x3], #1
  41ed04:	cbz	w2, 41ed70 <wcrtomb@plt+0x1a150>
  41ed08:	mov	x6, x3
  41ed0c:	ldrb	w2, [x1]
  41ed10:	cmp	w5, #0x2f
  41ed14:	b.ne	41ecf4 <wcrtomb@plt+0x1a0d4>  // b.any
  41ed18:	cmp	w2, #0x2e
  41ed1c:	cset	w3, eq  // eq = none
  41ed20:	ldrb	w3, [x1, w3, uxtw]
  41ed24:	cmp	w3, #0x2f
  41ed28:	b.eq	41ed4c <wcrtomb@plt+0x1a12c>  // b.none
  41ed2c:	b	41ecf4 <wcrtomb@plt+0x1a0d4>
  41ed30:	ldrb	w2, [x1, #1]
  41ed34:	cmp	w2, #0x2e
  41ed38:	cset	w1, eq  // eq = none
  41ed3c:	ldrb	w1, [x3, w1, uxtw]
  41ed40:	cmp	w1, #0x2f
  41ed44:	mov	x1, x3
  41ed48:	b.ne	41ecf4 <wcrtomb@plt+0x1a0d4>  // b.any
  41ed4c:	add	x3, x1, #0x1
  41ed50:	cmp	w2, #0x2e
  41ed54:	b.ne	41ed30 <wcrtomb@plt+0x1a110>  // b.any
  41ed58:	ldrb	w2, [x1, #2]
  41ed5c:	add	x3, x1, #0x2
  41ed60:	b	41ed34 <wcrtomb@plt+0x1a114>
  41ed64:	mov	x3, x6
  41ed68:	mov	x6, x4
  41ed6c:	nop
  41ed70:	sub	x1, x3, x0
  41ed74:	cmp	x1, #0x2
  41ed78:	b.le	41ed9c <wcrtomb@plt+0x1a17c>
  41ed7c:	ldurb	w1, [x3, #-2]
  41ed80:	cmp	w1, #0x2e
  41ed84:	b.eq	41eda0 <wcrtomb@plt+0x1a180>  // b.none
  41ed88:	cmp	w1, #0x2f
  41ed8c:	mov	x6, x3
  41ed90:	b.ne	41ed98 <wcrtomb@plt+0x1a178>  // b.any
  41ed94:	sub	x6, x3, #0x1
  41ed98:	sturb	wzr, [x6, #-1]
  41ed9c:	ret
  41eda0:	ldurb	w1, [x3, #-3]
  41eda4:	cmp	w1, #0x2f
  41eda8:	b.eq	41edb8 <wcrtomb@plt+0x1a198>  // b.none
  41edac:	mov	x6, x3
  41edb0:	sturb	wzr, [x6, #-1]
  41edb4:	b	41ed9c <wcrtomb@plt+0x1a17c>
  41edb8:	sub	x0, x6, x0
  41edbc:	cmp	x0, #0x2
  41edc0:	b.le	41ed98 <wcrtomb@plt+0x1a178>
  41edc4:	mov	x3, x6
  41edc8:	sub	x6, x3, #0x1
  41edcc:	b	41ed98 <wcrtomb@plt+0x1a178>
  41edd0:	stp	x29, x30, [sp, #-48]!
  41edd4:	mov	x29, sp
  41edd8:	stp	x19, x20, [sp, #16]
  41eddc:	mov	x20, x1
  41ede0:	ldrb	w1, [x1]
  41ede4:	cmp	w1, #0x2f
  41ede8:	b.eq	41ee70 <wcrtomb@plt+0x1a250>  // b.none
  41edec:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41edf0:	stp	x21, x22, [sp, #32]
  41edf4:	add	x21, x1, #0xa70
  41edf8:	ldr	x1, [x1, #2672]
  41edfc:	cbz	x1, 41ee94 <wcrtomb@plt+0x1a274>
  41ee00:	mov	w2, #0x18                  	// #24
  41ee04:	smaddl	x0, w0, w2, x1
  41ee08:	ldr	x19, [x0, #8]
  41ee0c:	cbz	x19, 41eeac <wcrtomb@plt+0x1a28c>
  41ee10:	mov	x0, x19
  41ee14:	bl	403ff0 <strlen@plt>
  41ee18:	mov	x21, x0
  41ee1c:	mov	x0, x20
  41ee20:	add	x22, x21, #0x1
  41ee24:	bl	403ff0 <strlen@plt>
  41ee28:	add	x0, x0, #0x1
  41ee2c:	add	x0, x0, x22
  41ee30:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41ee34:	mov	x1, x19
  41ee38:	mov	x19, x0
  41ee3c:	bl	404910 <strcpy@plt>
  41ee40:	mov	x1, x20
  41ee44:	mov	w2, #0x2f                  	// #47
  41ee48:	strb	w2, [x19, x21]
  41ee4c:	add	x0, x19, x22
  41ee50:	bl	404910 <strcpy@plt>
  41ee54:	mov	x0, x19
  41ee58:	ldp	x21, x22, [sp, #32]
  41ee5c:	bl	41ec68 <wcrtomb@plt+0x1a048>
  41ee60:	mov	x0, x19
  41ee64:	ldp	x19, x20, [sp, #16]
  41ee68:	ldp	x29, x30, [sp], #48
  41ee6c:	ret
  41ee70:	mov	x0, x20
  41ee74:	bl	450328 <argp_parse@@Base+0x10548>
  41ee78:	mov	x19, x0
  41ee7c:	mov	x0, x19
  41ee80:	bl	41ec68 <wcrtomb@plt+0x1a048>
  41ee84:	mov	x0, x19
  41ee88:	ldp	x19, x20, [sp, #16]
  41ee8c:	ldp	x29, x30, [sp], #48
  41ee90:	ret
  41ee94:	ldr	x19, [x21, #8]
  41ee98:	cbnz	x19, 41ee10 <wcrtomb@plt+0x1a1f0>
  41ee9c:	bl	450368 <argp_parse@@Base+0x10588>
  41eea0:	mov	x19, x0
  41eea4:	str	x0, [x21, #8]
  41eea8:	b	41ee0c <wcrtomb@plt+0x1a1ec>
  41eeac:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  41eeb0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41eeb4:	add	x1, x1, #0x348
  41eeb8:	add	x0, x0, #0x10
  41eebc:	bl	4335a0 <wcrtomb@plt+0x2e980>
  41eec0:	stp	x29, x30, [sp, #-80]!
  41eec4:	mov	x29, sp
  41eec8:	stp	x21, x22, [sp, #32]
  41eecc:	mov	x21, x4
  41eed0:	ldr	x22, [x0]
  41eed4:	stp	x19, x20, [sp, #16]
  41eed8:	mov	x19, x2
  41eedc:	stp	x23, x24, [sp, #48]
  41eee0:	mov	x23, x0
  41eee4:	mov	x24, x3
  41eee8:	mov	x0, x22
  41eeec:	stp	x25, x26, [sp, #64]
  41eef0:	mov	x25, x1
  41eef4:	bl	403ff0 <strlen@plt>
  41eef8:	cmp	x0, x19
  41eefc:	b.ls	41ef28 <wcrtomb@plt+0x1a308>  // b.plast
  41ef00:	mov	x20, x0
  41ef04:	mov	x1, x25
  41ef08:	mov	x2, x19
  41ef0c:	mov	x0, x22
  41ef10:	bl	4046d0 <memcmp@plt>
  41ef14:	cbnz	w0, 41ef28 <wcrtomb@plt+0x1a308>
  41ef18:	ldrb	w0, [x22, x19]
  41ef1c:	add	x1, x22, x19
  41ef20:	cmp	w0, #0x2f
  41ef24:	b.eq	41ef40 <wcrtomb@plt+0x1a320>  // b.none
  41ef28:	ldp	x19, x20, [sp, #16]
  41ef2c:	ldp	x21, x22, [sp, #32]
  41ef30:	ldp	x23, x24, [sp, #48]
  41ef34:	ldp	x25, x26, [sp, #64]
  41ef38:	ldp	x29, x30, [sp], #80
  41ef3c:	ret
  41ef40:	cmp	x19, x21
  41ef44:	b.cc	41ef7c <wcrtomb@plt+0x1a35c>  // b.lo, b.ul, b.last
  41ef48:	sub	x2, x20, x19
  41ef4c:	add	x0, x22, x21
  41ef50:	add	x2, x2, #0x1
  41ef54:	bl	403f80 <memmove@plt>
  41ef58:	mov	x2, x21
  41ef5c:	mov	x1, x24
  41ef60:	mov	x0, x22
  41ef64:	ldp	x19, x20, [sp, #16]
  41ef68:	ldp	x21, x22, [sp, #32]
  41ef6c:	ldp	x23, x24, [sp, #48]
  41ef70:	ldp	x25, x26, [sp, #64]
  41ef74:	ldp	x29, x30, [sp], #80
  41ef78:	b	403f70 <memcpy@plt>
  41ef7c:	add	x26, x21, #0x1
  41ef80:	sub	x1, x20, x19
  41ef84:	add	x1, x1, x26
  41ef88:	mov	x0, x22
  41ef8c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  41ef90:	mov	x22, x0
  41ef94:	add	x1, x0, x19
  41ef98:	str	x0, [x23]
  41ef9c:	b	41ef48 <wcrtomb@plt+0x1a328>
  41efa0:	mov	x1, x3
  41efa4:	cmp	x0, x2
  41efa8:	b.hi	41efb0 <wcrtomb@plt+0x1a390>  // b.pmore
  41efac:	b	446868 <argp_parse@@Base+0x6a88>
  41efb0:	b	446768 <argp_parse@@Base+0x6988>
  41efb4:	nop
  41efb8:	stp	x29, x30, [sp, #-64]!
  41efbc:	mov	x29, sp
  41efc0:	stp	x19, x20, [sp, #16]
  41efc4:	mov	x19, x0
  41efc8:	stp	x21, x22, [sp, #32]
  41efcc:	mov	x22, x2
  41efd0:	mov	x21, x3
  41efd4:	str	x23, [sp, #48]
  41efd8:	mov	x23, x1
  41efdc:	bl	404ad0 <__errno_location@plt>
  41efe0:	str	wzr, [x0]
  41efe4:	mov	x20, x0
  41efe8:	ldrb	w0, [x19]
  41efec:	tbnz	x21, #63, 41f028 <wcrtomb@plt+0x1a408>
  41eff0:	cmp	w0, #0x2d
  41eff4:	cset	w0, eq  // eq = none
  41eff8:	ldrb	w0, [x19, w0, uxtw]
  41effc:	sub	w0, w0, #0x30
  41f000:	cmp	w0, #0x9
  41f004:	b.ls	41f060 <wcrtomb@plt+0x1a440>  // b.plast
  41f008:	mov	w1, #0x16                  	// #22
  41f00c:	mov	x0, #0x0                   	// #0
  41f010:	str	w1, [x20]
  41f014:	ldp	x19, x20, [sp, #16]
  41f018:	ldp	x21, x22, [sp, #32]
  41f01c:	ldr	x23, [sp, #48]
  41f020:	ldp	x29, x30, [sp], #64
  41f024:	ret
  41f028:	sub	w0, w0, #0x30
  41f02c:	cmp	w0, #0x9
  41f030:	b.hi	41f008 <wcrtomb@plt+0x1a3e8>  // b.pmore
  41f034:	mov	x1, x23
  41f038:	mov	x0, x19
  41f03c:	mov	w3, #0x0                   	// #0
  41f040:	mov	w2, #0xa                   	// #10
  41f044:	bl	4044b0 <__strtoul_internal@plt>
  41f048:	cmp	x21, x0
  41f04c:	b.cs	41f014 <wcrtomb@plt+0x1a3f4>  // b.hs, b.nlast
  41f050:	mov	w1, #0x22                  	// #34
  41f054:	mov	x0, x21
  41f058:	str	w1, [x20]
  41f05c:	b	41f014 <wcrtomb@plt+0x1a3f4>
  41f060:	mov	x1, x23
  41f064:	mov	x0, x19
  41f068:	mov	w3, #0x0                   	// #0
  41f06c:	mov	w2, #0xa                   	// #10
  41f070:	bl	404390 <__strtol_internal@plt>
  41f074:	cmp	x0, x22
  41f078:	ccmp	x21, x0, #0x1, ge  // ge = tcont
  41f07c:	b.ge	41f014 <wcrtomb@plt+0x1a3f4>  // b.tcont
  41f080:	cmp	x0, x22
  41f084:	mov	w1, #0x22                  	// #34
  41f088:	csel	x0, x22, x21, lt  // lt = tstop
  41f08c:	str	w1, [x20]
  41f090:	b	41f014 <wcrtomb@plt+0x1a3f4>
  41f094:	nop
  41f098:	cbnz	w0, 41f0a4 <wcrtomb@plt+0x1a484>
  41f09c:	strb	wzr, [x1]
  41f0a0:	ret
  41f0a4:	mov	w3, #0x6667                	// #26215
  41f0a8:	asr	w4, w0, #31
  41f0ac:	movk	w3, #0x6666, lsl #16
  41f0b0:	mov	x6, x1
  41f0b4:	mov	w2, #0x2e                  	// #46
  41f0b8:	smull	x5, w0, w3
  41f0bc:	strb	w2, [x6], #1
  41f0c0:	asr	x5, x5, #34
  41f0c4:	sub	w5, w5, w4
  41f0c8:	add	w2, w5, w5, lsl #2
  41f0cc:	subs	w2, w0, w2, lsl #1
  41f0d0:	b.ne	41f260 <wcrtomb@plt+0x1a640>  // b.any
  41f0d4:	mov	w5, #0x9                   	// #9
  41f0d8:	smull	x0, w0, w3
  41f0dc:	mov	w7, w5
  41f0e0:	sub	w5, w5, #0x1
  41f0e4:	asr	x0, x0, #34
  41f0e8:	sub	w0, w0, w4
  41f0ec:	asr	w4, w0, #31
  41f0f0:	smull	x1, w0, w3
  41f0f4:	asr	x1, x1, #34
  41f0f8:	sub	w1, w1, w4
  41f0fc:	add	w2, w1, w1, lsl #2
  41f100:	subs	w2, w0, w2, lsl #1
  41f104:	b.eq	41f0d8 <wcrtomb@plt+0x1a4b8>  // b.none
  41f108:	sub	w0, w7, #0x2
  41f10c:	strb	wzr, [x6, w5, sxtw]
  41f110:	add	w2, w2, #0x30
  41f114:	strb	w2, [x6, w0, sxtw]
  41f118:	cbz	w0, 41f0a0 <wcrtomb@plt+0x1a480>
  41f11c:	smull	x2, w1, w3
  41f120:	sub	w4, w7, #0x3
  41f124:	asr	x2, x2, #34
  41f128:	sub	w2, w2, w1, asr #31
  41f12c:	add	w0, w2, w2, lsl #2
  41f130:	sub	w1, w1, w0, lsl #1
  41f134:	add	w1, w1, #0x30
  41f138:	strb	w1, [x6, w4, sxtw]
  41f13c:	cbz	w4, 41f0a0 <wcrtomb@plt+0x1a480>
  41f140:	smull	x0, w2, w3
  41f144:	sub	w7, w7, #0x4
  41f148:	asr	x0, x0, #34
  41f14c:	sub	w0, w0, w2, asr #31
  41f150:	add	w0, w0, w0, lsl #2
  41f154:	sub	w0, w2, w0, lsl #1
  41f158:	add	w0, w0, #0x30
  41f15c:	strb	w0, [x6, w7, sxtw]
  41f160:	cbz	w7, 41f0a0 <wcrtomb@plt+0x1a480>
  41f164:	mov	w0, #0x6667                	// #26215
  41f168:	sub	w4, w7, #0x1
  41f16c:	movk	w0, #0x6666, lsl #16
  41f170:	smull	x1, w2, w0
  41f174:	asr	x1, x1, #34
  41f178:	sub	w2, w1, w2, asr #31
  41f17c:	smull	x1, w2, w0
  41f180:	asr	x1, x1, #34
  41f184:	sub	w1, w1, w2, asr #31
  41f188:	add	w3, w1, w1, lsl #2
  41f18c:	sub	w2, w2, w3, lsl #1
  41f190:	add	w2, w2, #0x30
  41f194:	strb	w2, [x6, w4, sxtw]
  41f198:	cbz	w4, 41f0a0 <wcrtomb@plt+0x1a480>
  41f19c:	smull	x2, w1, w0
  41f1a0:	sub	w4, w7, #0x2
  41f1a4:	asr	x2, x2, #34
  41f1a8:	sub	w2, w2, w1, asr #31
  41f1ac:	add	w3, w2, w2, lsl #2
  41f1b0:	sub	w1, w1, w3, lsl #1
  41f1b4:	add	w1, w1, #0x30
  41f1b8:	strb	w1, [x6, w4, sxtw]
  41f1bc:	cbz	w4, 41f0a0 <wcrtomb@plt+0x1a480>
  41f1c0:	smull	x1, w2, w0
  41f1c4:	sub	w4, w7, #0x3
  41f1c8:	asr	x1, x1, #34
  41f1cc:	sub	w1, w1, w2, asr #31
  41f1d0:	add	w3, w1, w1, lsl #2
  41f1d4:	sub	w2, w2, w3, lsl #1
  41f1d8:	add	w2, w2, #0x30
  41f1dc:	strb	w2, [x6, w4, sxtw]
  41f1e0:	cbz	w4, 41f0a0 <wcrtomb@plt+0x1a480>
  41f1e4:	smull	x2, w1, w0
  41f1e8:	sub	w4, w7, #0x4
  41f1ec:	asr	x2, x2, #34
  41f1f0:	sub	w2, w2, w1, asr #31
  41f1f4:	add	w3, w2, w2, lsl #2
  41f1f8:	sub	w1, w1, w3, lsl #1
  41f1fc:	add	w1, w1, #0x30
  41f200:	strb	w1, [x6, w4, sxtw]
  41f204:	cbz	w4, 41f0a0 <wcrtomb@plt+0x1a480>
  41f208:	smull	x1, w2, w0
  41f20c:	sub	w4, w7, #0x5
  41f210:	asr	x1, x1, #34
  41f214:	sub	w1, w1, w2, asr #31
  41f218:	add	w3, w1, w1, lsl #2
  41f21c:	sub	w2, w2, w3, lsl #1
  41f220:	add	w2, w2, #0x30
  41f224:	strb	w2, [x6, w4, sxtw]
  41f228:	cbz	w4, 41f0a0 <wcrtomb@plt+0x1a480>
  41f22c:	smull	x0, w1, w0
  41f230:	sub	w3, w7, #0x6
  41f234:	asr	x0, x0, #34
  41f238:	sub	w0, w0, w1, asr #31
  41f23c:	add	w2, w0, w0, lsl #2
  41f240:	sub	w1, w1, w2, lsl #1
  41f244:	add	w1, w1, #0x30
  41f248:	strb	w1, [x6, w3, sxtw]
  41f24c:	cbz	w3, 41f0a0 <wcrtomb@plt+0x1a480>
  41f250:	sub	w7, w7, #0x7
  41f254:	add	w0, w0, #0x30
  41f258:	strb	w0, [x6, w7, sxtw]
  41f25c:	ret
  41f260:	smull	x0, w5, w3
  41f264:	add	w2, w2, #0x30
  41f268:	strb	w2, [x1, #9]
  41f26c:	mov	w7, #0x6                   	// #6
  41f270:	strb	wzr, [x1, #10]
  41f274:	asr	x0, x0, #34
  41f278:	sub	w0, w0, w5, asr #31
  41f27c:	mov	w2, w0
  41f280:	add	w4, w0, w0, lsl #2
  41f284:	smull	x0, w0, w3
  41f288:	sub	w3, w5, w4, lsl #1
  41f28c:	add	w3, w3, #0x30
  41f290:	strb	w3, [x1, #8]
  41f294:	asr	x0, x0, #34
  41f298:	sub	w0, w0, w2, asr #31
  41f29c:	add	w0, w0, w0, lsl #2
  41f2a0:	sub	w0, w2, w0, lsl #1
  41f2a4:	add	w0, w0, #0x30
  41f2a8:	strb	w0, [x1, #7]
  41f2ac:	b	41f164 <wcrtomb@plt+0x1a544>
  41f2b0:	stp	x29, x30, [sp, #-32]!
  41f2b4:	mov	x3, x1
  41f2b8:	mov	w1, #0xc9ff                	// #51711
  41f2bc:	mov	x29, sp
  41f2c0:	stp	x19, x20, [sp, #16]
  41f2c4:	movk	w1, #0x3b9a, lsl #16
  41f2c8:	mov	x20, x2
  41f2cc:	cmp	w3, w1
  41f2d0:	mov	x2, x0
  41f2d4:	b.hi	41f328 <wcrtomb@plt+0x1a708>  // b.pmore
  41f2d8:	cmp	w3, #0x0
  41f2dc:	mov	w19, w3
  41f2e0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41f2e4:	b.ge	41f32c <wcrtomb@plt+0x1a70c>  // b.tcont
  41f2e8:	mov	w19, #0xca00                	// #51712
  41f2ec:	add	x2, x0, #0x1
  41f2f0:	movk	w19, #0x3b9a, lsl #16
  41f2f4:	add	x1, x20, #0x1
  41f2f8:	sub	w19, w19, w3
  41f2fc:	neg	x0, x2
  41f300:	bl	446868 <argp_parse@@Base+0x6a88>
  41f304:	mov	x1, x0
  41f308:	mov	w2, #0x2d                  	// #45
  41f30c:	sub	x0, x0, #0x1
  41f310:	sturb	w2, [x1, #-1]
  41f314:	cbnz	w19, 41f33c <wcrtomb@plt+0x1a71c>
  41f318:	strb	wzr, [x20, #21]
  41f31c:	ldp	x19, x20, [sp, #16]
  41f320:	ldp	x29, x30, [sp], #32
  41f324:	ret
  41f328:	mov	w19, #0x0                   	// #0
  41f32c:	add	x1, x20, #0x1
  41f330:	tbnz	x0, #63, 41f2fc <wcrtomb@plt+0x1a6dc>
  41f334:	bl	446868 <argp_parse@@Base+0x6a88>
  41f338:	cbz	w19, 41f318 <wcrtomb@plt+0x1a6f8>
  41f33c:	mov	w1, #0x6667                	// #26215
  41f340:	asr	w5, w19, #31
  41f344:	movk	w1, #0x6666, lsl #16
  41f348:	mov	w2, #0x2e                  	// #46
  41f34c:	strb	w2, [x20, #21]
  41f350:	add	x4, x20, #0x16
  41f354:	smull	x6, w19, w1
  41f358:	asr	x6, x6, #34
  41f35c:	sub	w6, w6, w5
  41f360:	add	w2, w6, w6, lsl #2
  41f364:	subs	w2, w19, w2, lsl #1
  41f368:	b.ne	41f500 <wcrtomb@plt+0x1a8e0>  // b.any
  41f36c:	mov	w6, #0x9                   	// #9
  41f370:	smull	x19, w19, w1
  41f374:	mov	w7, w6
  41f378:	sub	w6, w6, #0x1
  41f37c:	asr	x19, x19, #34
  41f380:	sub	w19, w19, w5
  41f384:	asr	w5, w19, #31
  41f388:	smull	x2, w19, w1
  41f38c:	asr	x2, x2, #34
  41f390:	sub	w2, w2, w5
  41f394:	add	w3, w2, w2, lsl #2
  41f398:	subs	w3, w19, w3, lsl #1
  41f39c:	b.eq	41f370 <wcrtomb@plt+0x1a750>  // b.none
  41f3a0:	sub	w5, w7, #0x2
  41f3a4:	strb	wzr, [x4, w6, sxtw]
  41f3a8:	add	w3, w3, #0x30
  41f3ac:	strb	w3, [x4, w5, sxtw]
  41f3b0:	cbz	w5, 41f31c <wcrtomb@plt+0x1a6fc>
  41f3b4:	smull	x3, w2, w1
  41f3b8:	sub	w6, w7, #0x3
  41f3bc:	asr	x3, x3, #34
  41f3c0:	sub	w3, w3, w2, asr #31
  41f3c4:	add	w5, w3, w3, lsl #2
  41f3c8:	sub	w5, w2, w5, lsl #1
  41f3cc:	add	w5, w5, #0x30
  41f3d0:	strb	w5, [x4, w6, sxtw]
  41f3d4:	cbz	w6, 41f31c <wcrtomb@plt+0x1a6fc>
  41f3d8:	smull	x1, w3, w1
  41f3dc:	sub	w2, w7, #0x4
  41f3e0:	asr	x1, x1, #34
  41f3e4:	sub	w1, w1, w3, asr #31
  41f3e8:	add	w1, w1, w1, lsl #2
  41f3ec:	sub	w1, w3, w1, lsl #1
  41f3f0:	add	w1, w1, #0x30
  41f3f4:	strb	w1, [x4, w2, sxtw]
  41f3f8:	cbz	w2, 41f31c <wcrtomb@plt+0x1a6fc>
  41f3fc:	mov	w1, #0x6667                	// #26215
  41f400:	sub	w7, w2, #0x1
  41f404:	movk	w1, #0x6666, lsl #16
  41f408:	smull	x5, w3, w1
  41f40c:	asr	x5, x5, #34
  41f410:	sub	w3, w5, w3, asr #31
  41f414:	smull	x5, w3, w1
  41f418:	asr	x5, x5, #34
  41f41c:	sub	w5, w5, w3, asr #31
  41f420:	add	w6, w5, w5, lsl #2
  41f424:	sub	w3, w3, w6, lsl #1
  41f428:	add	w3, w3, #0x30
  41f42c:	strb	w3, [x4, w7, sxtw]
  41f430:	cbz	w7, 41f31c <wcrtomb@plt+0x1a6fc>
  41f434:	smull	x3, w5, w1
  41f438:	sub	w7, w2, #0x2
  41f43c:	asr	x3, x3, #34
  41f440:	sub	w3, w3, w5, asr #31
  41f444:	add	w6, w3, w3, lsl #2
  41f448:	sub	w5, w5, w6, lsl #1
  41f44c:	add	w5, w5, #0x30
  41f450:	strb	w5, [x4, w7, sxtw]
  41f454:	cbz	w7, 41f31c <wcrtomb@plt+0x1a6fc>
  41f458:	smull	x5, w3, w1
  41f45c:	sub	w7, w2, #0x3
  41f460:	asr	x5, x5, #34
  41f464:	sub	w5, w5, w3, asr #31
  41f468:	add	w6, w5, w5, lsl #2
  41f46c:	sub	w3, w3, w6, lsl #1
  41f470:	add	w3, w3, #0x30
  41f474:	strb	w3, [x4, w7, sxtw]
  41f478:	cbz	w7, 41f31c <wcrtomb@plt+0x1a6fc>
  41f47c:	smull	x3, w5, w1
  41f480:	sub	w7, w2, #0x4
  41f484:	asr	x3, x3, #34
  41f488:	sub	w3, w3, w5, asr #31
  41f48c:	add	w6, w3, w3, lsl #2
  41f490:	sub	w5, w5, w6, lsl #1
  41f494:	add	w5, w5, #0x30
  41f498:	strb	w5, [x4, w7, sxtw]
  41f49c:	cbz	w7, 41f31c <wcrtomb@plt+0x1a6fc>
  41f4a0:	smull	x5, w3, w1
  41f4a4:	sub	w7, w2, #0x5
  41f4a8:	asr	x5, x5, #34
  41f4ac:	sub	w5, w5, w3, asr #31
  41f4b0:	add	w6, w5, w5, lsl #2
  41f4b4:	sub	w3, w3, w6, lsl #1
  41f4b8:	add	w3, w3, #0x30
  41f4bc:	strb	w3, [x4, w7, sxtw]
  41f4c0:	cbz	w7, 41f31c <wcrtomb@plt+0x1a6fc>
  41f4c4:	smull	x1, w5, w1
  41f4c8:	sub	w6, w2, #0x6
  41f4cc:	asr	x1, x1, #34
  41f4d0:	sub	w1, w1, w5, asr #31
  41f4d4:	add	w3, w1, w1, lsl #2
  41f4d8:	sub	w5, w5, w3, lsl #1
  41f4dc:	add	w5, w5, #0x30
  41f4e0:	strb	w5, [x4, w6, sxtw]
  41f4e4:	cbz	w6, 41f31c <wcrtomb@plt+0x1a6fc>
  41f4e8:	sub	w2, w2, #0x7
  41f4ec:	add	w1, w1, #0x30
  41f4f0:	strb	w1, [x4, w2, sxtw]
  41f4f4:	ldp	x19, x20, [sp, #16]
  41f4f8:	ldp	x29, x30, [sp], #32
  41f4fc:	ret
  41f500:	smull	x5, w6, w1
  41f504:	add	w2, w2, #0x30
  41f508:	strb	w2, [x20, #30]
  41f50c:	mov	w2, #0x6                   	// #6
  41f510:	strb	wzr, [x20, #31]
  41f514:	asr	x5, x5, #34
  41f518:	sub	w5, w5, w6, asr #31
  41f51c:	mov	w3, w5
  41f520:	add	w5, w5, w5, lsl #2
  41f524:	smull	x1, w3, w1
  41f528:	sub	w6, w6, w5, lsl #1
  41f52c:	add	w6, w6, #0x30
  41f530:	strb	w6, [x20, #29]
  41f534:	asr	x1, x1, #34
  41f538:	sub	w1, w1, w3, asr #31
  41f53c:	add	w1, w1, w1, lsl #2
  41f540:	sub	w1, w3, w1, lsl #1
  41f544:	add	w1, w1, #0x30
  41f548:	strb	w1, [x4, #6]
  41f54c:	b	41f3fc <wcrtomb@plt+0x1a7dc>
  41f550:	stp	x29, x30, [sp, #-64]!
  41f554:	mov	x29, sp
  41f558:	stp	x19, x20, [sp, #16]
  41f55c:	mov	x19, x0
  41f560:	mov	x20, x1
  41f564:	stp	x21, x22, [sp, #32]
  41f568:	and	w22, w2, #0xff
  41f56c:	str	x23, [sp, #48]
  41f570:	bl	404ad0 <__errno_location@plt>
  41f574:	ldrb	w23, [x19]
  41f578:	mov	x21, x0
  41f57c:	cmp	w23, #0x2d
  41f580:	cset	w0, eq  // eq = none
  41f584:	ldrb	w0, [x19, w0, uxtw]
  41f588:	sub	w0, w0, #0x30
  41f58c:	cmp	w0, #0x9
  41f590:	b.ls	41f5bc <wcrtomb@plt+0x1a99c>  // b.plast
  41f594:	mov	w2, #0x16                  	// #22
  41f598:	str	w2, [x21]
  41f59c:	ldp	x21, x22, [sp, #32]
  41f5a0:	mov	x1, #0xffffffffffffffff    	// #-1
  41f5a4:	ldr	x23, [sp, #48]
  41f5a8:	str	x19, [x20]
  41f5ac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41f5b0:	ldp	x19, x20, [sp, #16]
  41f5b4:	ldp	x29, x30, [sp], #64
  41f5b8:	ret
  41f5bc:	str	wzr, [x21]
  41f5c0:	mov	x0, x19
  41f5c4:	mov	x1, x20
  41f5c8:	cmp	w23, #0x2d
  41f5cc:	mov	w3, #0x0                   	// #0
  41f5d0:	mov	w2, #0xa                   	// #10
  41f5d4:	b.eq	41f77c <wcrtomb@plt+0x1ab5c>  // b.none
  41f5d8:	bl	4044b0 <__strtoul_internal@plt>
  41f5dc:	tbnz	x0, #63, 41f740 <wcrtomb@plt+0x1ab20>
  41f5e0:	ldr	w5, [x21]
  41f5e4:	mov	w2, #0x0                   	// #0
  41f5e8:	ldr	x19, [x20]
  41f5ec:	cbz	w22, 41f71c <wcrtomb@plt+0x1aafc>
  41f5f0:	ldrb	w1, [x19]
  41f5f4:	cmp	w1, #0x2e
  41f5f8:	b.ne	41f71c <wcrtomb@plt+0x1aafc>  // b.any
  41f5fc:	ldrb	w3, [x19, #1]
  41f600:	mov	w7, #0x0                   	// #0
  41f604:	add	x19, x19, #0x1
  41f608:	sub	w4, w3, #0x30
  41f60c:	cmp	w4, #0x9
  41f610:	b.hi	41f7a4 <wcrtomb@plt+0x1ab84>  // b.pmore
  41f614:	mov	w1, #0x0                   	// #0
  41f618:	mov	w2, #0x0                   	// #0
  41f61c:	b	41f638 <wcrtomb@plt+0x1aa18>
  41f620:	add	w1, w1, #0x1
  41f624:	add	w2, w4, w6, lsl #1
  41f628:	ldrb	w3, [x19, #1]!
  41f62c:	sub	w4, w3, #0x30
  41f630:	cmp	w4, #0x9
  41f634:	b.hi	41f654 <wcrtomb@plt+0x1aa34>  // b.pmore
  41f638:	add	w6, w2, w2, lsl #2
  41f63c:	cmp	w1, #0x8
  41f640:	b.le	41f620 <wcrtomb@plt+0x1aa00>
  41f644:	cmp	w3, #0x30
  41f648:	cset	w3, ne  // ne = any
  41f64c:	orr	w7, w7, w3
  41f650:	b	41f628 <wcrtomb@plt+0x1aa08>
  41f654:	cmp	w1, #0x8
  41f658:	b.gt	41f6f0 <wcrtomb@plt+0x1aad0>
  41f65c:	add	w3, w2, w2, lsl #2
  41f660:	lsl	w3, w3, #1
  41f664:	b.eq	41f79c <wcrtomb@plt+0x1ab7c>  // b.none
  41f668:	mov	w3, #0x64                  	// #100
  41f66c:	cmp	w1, #0x7
  41f670:	add	w1, w1, #0x2
  41f674:	mul	w2, w2, w3
  41f678:	b.eq	41f6f0 <wcrtomb@plt+0x1aad0>  // b.none
  41f67c:	add	w3, w2, w2, lsl #2
  41f680:	cmp	w1, #0x8
  41f684:	lsl	w3, w3, #1
  41f688:	b.eq	41f79c <wcrtomb@plt+0x1ab7c>  // b.none
  41f68c:	mov	w3, #0x64                  	// #100
  41f690:	cmp	w1, #0x7
  41f694:	mul	w3, w2, w3
  41f698:	b.eq	41f79c <wcrtomb@plt+0x1ab7c>  // b.none
  41f69c:	mov	w3, #0x3e8                 	// #1000
  41f6a0:	cmp	w1, #0x6
  41f6a4:	mul	w3, w2, w3
  41f6a8:	b.eq	41f79c <wcrtomb@plt+0x1ab7c>  // b.none
  41f6ac:	mov	w3, #0x2710                	// #10000
  41f6b0:	cmp	w1, #0x5
  41f6b4:	mul	w3, w2, w3
  41f6b8:	b.eq	41f79c <wcrtomb@plt+0x1ab7c>  // b.none
  41f6bc:	mov	w3, #0x86a0                	// #34464
  41f6c0:	cmp	w1, #0x4
  41f6c4:	movk	w3, #0x1, lsl #16
  41f6c8:	mul	w3, w2, w3
  41f6cc:	b.eq	41f79c <wcrtomb@plt+0x1ab7c>  // b.none
  41f6d0:	mov	w3, #0x4240                	// #16960
  41f6d4:	mov	w4, #0x9680                	// #38528
  41f6d8:	movk	w3, #0xf, lsl #16
  41f6dc:	movk	w4, #0x98, lsl #16
  41f6e0:	cmp	w1, #0x2
  41f6e4:	mul	w1, w2, w3
  41f6e8:	mul	w2, w2, w4
  41f6ec:	csel	w2, w2, w1, eq  // eq = none
  41f6f0:	cmp	w23, #0x2d
  41f6f4:	b.ne	41f71c <wcrtomb@plt+0x1aafc>  // b.any
  41f6f8:	adds	w2, w2, w7
  41f6fc:	b.eq	41f71c <wcrtomb@plt+0x1aafc>  // b.none
  41f700:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41f704:	cmp	x0, x1
  41f708:	b.eq	41f7b0 <wcrtomb@plt+0x1ab90>  // b.none
  41f70c:	mov	w1, #0xca00                	// #51712
  41f710:	sub	x0, x0, #0x1
  41f714:	movk	w1, #0x3b9a, lsl #16
  41f718:	sub	w2, w1, w2
  41f71c:	ldp	x21, x22, [sp, #32]
  41f720:	sxtw	x2, w2
  41f724:	ldr	x23, [sp, #48]
  41f728:	str	x19, [x20]
  41f72c:	cmp	w5, #0x22
  41f730:	csinv	x1, x2, xzr, ne  // ne = any
  41f734:	ldp	x19, x20, [sp, #16]
  41f738:	ldp	x29, x30, [sp], #64
  41f73c:	ret
  41f740:	mov	w5, #0x22                  	// #34
  41f744:	ldr	x19, [x20]
  41f748:	str	w5, [x21]
  41f74c:	cbz	w22, 41f75c <wcrtomb@plt+0x1ab3c>
  41f750:	ldrb	w0, [x19]
  41f754:	cmp	w0, #0x2e
  41f758:	b.eq	41f794 <wcrtomb@plt+0x1ab74>  // b.none
  41f75c:	ldp	x21, x22, [sp, #32]
  41f760:	mov	x1, #0xffffffffffffffff    	// #-1
  41f764:	ldr	x23, [sp, #48]
  41f768:	str	x19, [x20]
  41f76c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41f770:	ldp	x19, x20, [sp, #16]
  41f774:	ldp	x29, x30, [sp], #64
  41f778:	ret
  41f77c:	bl	404390 <__strtol_internal@plt>
  41f780:	ldr	w5, [x21]
  41f784:	mov	w2, #0x0                   	// #0
  41f788:	ldr	x19, [x20]
  41f78c:	cbz	w22, 41f71c <wcrtomb@plt+0x1aafc>
  41f790:	b	41f5f0 <wcrtomb@plt+0x1a9d0>
  41f794:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41f798:	b	41f5fc <wcrtomb@plt+0x1a9dc>
  41f79c:	mov	w2, w3
  41f7a0:	b	41f6f0 <wcrtomb@plt+0x1aad0>
  41f7a4:	mov	w1, #0x2                   	// #2
  41f7a8:	mov	w2, #0x0                   	// #0
  41f7ac:	b	41f67c <wcrtomb@plt+0x1aa5c>
  41f7b0:	mov	w2, #0xffffffff            	// #-1
  41f7b4:	b	41f71c <wcrtomb@plt+0x1aafc>
  41f7b8:	ldrb	w1, [x0]
  41f7bc:	cmp	w1, #0x2f
  41f7c0:	b.eq	41f80c <wcrtomb@plt+0x1abec>  // b.none
  41f7c4:	cmp	w1, #0x2e
  41f7c8:	b.ne	41f7fc <wcrtomb@plt+0x1abdc>  // b.any
  41f7cc:	ldrb	w1, [x0, #1]
  41f7d0:	cmp	w1, #0x2f
  41f7d4:	b.ne	41f7fc <wcrtomb@plt+0x1abdc>  // b.any
  41f7d8:	ldrb	w1, [x0, #2]
  41f7dc:	add	x0, x0, #0x2
  41f7e0:	cmp	w1, #0x2f
  41f7e4:	b.ne	41f7c4 <wcrtomb@plt+0x1aba4>  // b.any
  41f7e8:	ldrb	w1, [x0, #1]!
  41f7ec:	cmp	w1, #0x2f
  41f7f0:	b.eq	41f7e8 <wcrtomb@plt+0x1abc8>  // b.none
  41f7f4:	cmp	w1, #0x2e
  41f7f8:	b.eq	41f7cc <wcrtomb@plt+0x1abac>  // b.none
  41f7fc:	cmp	w1, #0x0
  41f800:	cset	w0, eq  // eq = none
  41f804:	ret
  41f808:	add	x0, x0, #0x1
  41f80c:	ldrb	w1, [x0, #1]
  41f810:	cmp	w1, #0x2f
  41f814:	b.eq	41f808 <wcrtomb@plt+0x1abe8>  // b.none
  41f818:	cmp	w1, #0x2e
  41f81c:	b.ne	41f7fc <wcrtomb@plt+0x1abdc>  // b.any
  41f820:	ldrb	w1, [x0, #2]
  41f824:	cmp	w1, #0x2e
  41f828:	cset	x1, eq  // eq = none
  41f82c:	add	x1, x1, #0x2
  41f830:	add	x0, x0, x1
  41f834:	ldrb	w1, [x0]
  41f838:	cmp	w1, #0x2f
  41f83c:	b.eq	41f80c <wcrtomb@plt+0x1abec>  // b.none
  41f840:	mov	w0, #0x0                   	// #0
  41f844:	ret
  41f848:	stp	x29, x30, [sp, #-176]!
  41f84c:	mov	x29, sp
  41f850:	stp	x19, x20, [sp, #16]
  41f854:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41f858:	add	x19, x19, #0xa70
  41f85c:	mov	x20, x0
  41f860:	stp	x21, x22, [sp, #32]
  41f864:	and	w22, w1, #0xff
  41f868:	ldr	x0, [x19, #16]
  41f86c:	bl	4047b0 <free@plt>
  41f870:	mov	x1, #0x0                   	// #0
  41f874:	cbz	x20, 41f884 <wcrtomb@plt+0x1ac64>
  41f878:	mov	x0, x20
  41f87c:	bl	450328 <argp_parse@@Base+0x10548>
  41f880:	mov	x1, x0
  41f884:	ldr	x0, [x19, #24]
  41f888:	str	x1, [x19, #16]
  41f88c:	bl	4047b0 <free@plt>
  41f890:	str	xzr, [x19, #24]
  41f894:	cbz	w22, 41f8c4 <wcrtomb@plt+0x1aca4>
  41f898:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41f89c:	ldrb	w0, [x0, #1144]
  41f8a0:	cbnz	w0, 41f8c4 <wcrtomb@plt+0x1aca4>
  41f8a4:	mov	w1, #0x3a                  	// #58
  41f8a8:	mov	x0, x20
  41f8ac:	bl	404870 <strchr@plt>
  41f8b0:	cmp	x0, #0x0
  41f8b4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41f8b8:	ccmp	x0, x20, #0x0, ne  // ne = any
  41f8bc:	str	x0, [x1, #1152]
  41f8c0:	b.hi	41fa6c <wcrtomb@plt+0x1ae4c>  // b.pmore
  41f8c4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41f8c8:	adrp	x21, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41f8cc:	add	x3, sp, #0x30
  41f8d0:	mov	x2, x20
  41f8d4:	ldr	w4, [x0, #688]
  41f8d8:	mov	w0, #0x0                   	// #0
  41f8dc:	ldr	w1, [x21, #2200]
  41f8e0:	bl	404c00 <__fxstatat@plt>
  41f8e4:	cbz	w0, 41f914 <wcrtomb@plt+0x1acf4>
  41f8e8:	bl	404ad0 <__errno_location@plt>
  41f8ec:	ldr	w0, [x0]
  41f8f0:	cmp	w0, #0x2
  41f8f4:	b.eq	41fa58 <wcrtomb@plt+0x1ae38>  // b.none
  41f8f8:	mov	x0, x20
  41f8fc:	bl	434400 <wcrtomb@plt+0x2f7e0>
  41f900:	mov	w0, #0x0                   	// #0
  41f904:	ldp	x19, x20, [sp, #16]
  41f908:	ldp	x21, x22, [sp, #32]
  41f90c:	ldp	x29, x30, [sp], #176
  41f910:	ret
  41f914:	ldr	w0, [sp, #64]
  41f918:	and	w1, w0, #0xf000
  41f91c:	cmp	w1, #0x4, lsl #12
  41f920:	b.eq	41fa58 <wcrtomb@plt+0x1ae38>  // b.none
  41f924:	cbz	w22, 41f938 <wcrtomb@plt+0x1ad18>
  41f928:	mov	w1, #0xb000                	// #45056
  41f92c:	and	w0, w0, w1
  41f930:	cmp	w0, #0x2, lsl #12
  41f934:	b.eq	41fa58 <wcrtomb@plt+0x1ae38>  // b.none
  41f938:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  41f93c:	ldr	w0, [x21, #2200]
  41f940:	mov	x1, x20
  41f944:	ldr	w2, [x2, #856]
  41f948:	bl	441188 <argp_parse@@Base+0x13a8>
  41f94c:	str	x0, [x19, #24]
  41f950:	mov	x3, x0
  41f954:	cbz	x0, 41fa84 <wcrtomb@plt+0x1ae64>
  41f958:	ldr	w2, [x21, #2200]
  41f95c:	ldr	x1, [x19, #16]
  41f960:	mov	w0, w2
  41f964:	bl	404800 <renameat@plt>
  41f968:	cbz	w0, 41f9f8 <wcrtomb@plt+0x1add8>
  41f96c:	bl	404ad0 <__errno_location@plt>
  41f970:	ldr	w22, [x0]
  41f974:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41f978:	ldr	x1, [x1, #1136]
  41f97c:	cbz	x1, 41f984 <wcrtomb@plt+0x1ad64>
  41f980:	blr	x1
  41f984:	mov	w2, #0x5                   	// #5
  41f988:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41f98c:	mov	x0, #0x0                   	// #0
  41f990:	add	x1, x1, #0x30
  41f994:	bl	4049c0 <dcgettext@plt>
  41f998:	mov	x20, x0
  41f99c:	ldr	x0, [x19, #16]
  41f9a0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41f9a4:	mov	x21, x0
  41f9a8:	ldr	x1, [x19, #24]
  41f9ac:	mov	w0, #0x1                   	// #1
  41f9b0:	bl	44ed50 <argp_parse@@Base+0xef70>
  41f9b4:	mov	x4, x0
  41f9b8:	mov	x3, x21
  41f9bc:	mov	x2, x20
  41f9c0:	mov	w1, w22
  41f9c4:	mov	w0, #0x0                   	// #0
  41f9c8:	bl	404050 <error@plt>
  41f9cc:	ldr	x0, [x19, #24]
  41f9d0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41f9d4:	mov	w2, #0x2                   	// #2
  41f9d8:	str	w2, [x1, #3568]
  41f9dc:	bl	4047b0 <free@plt>
  41f9e0:	str	xzr, [x19, #24]
  41f9e4:	mov	w0, #0x0                   	// #0
  41f9e8:	ldp	x19, x20, [sp, #16]
  41f9ec:	ldp	x21, x22, [sp, #32]
  41f9f0:	ldp	x29, x30, [sp], #176
  41f9f4:	ret
  41f9f8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41f9fc:	ldr	w0, [x0, #772]
  41fa00:	cbz	w0, 41fa58 <wcrtomb@plt+0x1ae38>
  41fa04:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41fa08:	mov	w2, #0x5                   	// #5
  41fa0c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41fa10:	add	x1, x1, #0x18
  41fa14:	ldr	x21, [x0, #4056]
  41fa18:	mov	x0, #0x0                   	// #0
  41fa1c:	bl	4049c0 <dcgettext@plt>
  41fa20:	mov	x20, x0
  41fa24:	ldr	x1, [x19, #16]
  41fa28:	mov	w0, #0x0                   	// #0
  41fa2c:	bl	44ed50 <argp_parse@@Base+0xef70>
  41fa30:	ldr	x1, [x19, #24]
  41fa34:	mov	x19, x0
  41fa38:	mov	w0, #0x1                   	// #1
  41fa3c:	bl	44ed50 <argp_parse@@Base+0xef70>
  41fa40:	mov	x4, x0
  41fa44:	mov	x3, x19
  41fa48:	mov	x2, x20
  41fa4c:	mov	x0, x21
  41fa50:	mov	w1, #0x1                   	// #1
  41fa54:	bl	404700 <__fprintf_chk@plt>
  41fa58:	mov	w0, #0x1                   	// #1
  41fa5c:	ldp	x19, x20, [sp, #16]
  41fa60:	ldp	x21, x22, [sp, #32]
  41fa64:	ldp	x29, x30, [sp], #176
  41fa68:	ret
  41fa6c:	sub	x2, x0, x20
  41fa70:	mov	w1, #0x2f                  	// #47
  41fa74:	mov	x0, x20
  41fa78:	bl	404960 <memchr@plt>
  41fa7c:	cbnz	x0, 41f8c4 <wcrtomb@plt+0x1aca4>
  41fa80:	b	41fa58 <wcrtomb@plt+0x1ae38>
  41fa84:	bl	4104a0 <wcrtomb@plt+0xb880>
  41fa88:	stp	x29, x30, [sp, #-48]!
  41fa8c:	mov	x29, sp
  41fa90:	stp	x19, x20, [sp, #16]
  41fa94:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41fa98:	add	x19, x19, #0xa70
  41fa9c:	ldr	x20, [x19, #24]
  41faa0:	cbz	x20, 41fb58 <wcrtomb@plt+0x1af38>
  41faa4:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41faa8:	mov	x1, x20
  41faac:	ldr	x3, [x19, #16]
  41fab0:	ldr	w2, [x0, #2200]
  41fab4:	mov	w0, w2
  41fab8:	bl	404800 <renameat@plt>
  41fabc:	cbz	w0, 41fb40 <wcrtomb@plt+0x1af20>
  41fac0:	stp	x21, x22, [sp, #32]
  41fac4:	bl	404ad0 <__errno_location@plt>
  41fac8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  41facc:	ldr	w22, [x0]
  41fad0:	ldr	x1, [x1, #1136]
  41fad4:	cbz	x1, 41fae0 <wcrtomb@plt+0x1aec0>
  41fad8:	blr	x1
  41fadc:	ldr	x20, [x19, #24]
  41fae0:	mov	w2, #0x5                   	// #5
  41fae4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41fae8:	mov	x0, #0x0                   	// #0
  41faec:	add	x1, x1, #0x30
  41faf0:	bl	4049c0 <dcgettext@plt>
  41faf4:	mov	x2, x0
  41faf8:	mov	x0, x20
  41fafc:	mov	x20, x2
  41fb00:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  41fb04:	mov	x21, x0
  41fb08:	ldr	x1, [x19, #16]
  41fb0c:	mov	w0, #0x1                   	// #1
  41fb10:	bl	44ed50 <argp_parse@@Base+0xef70>
  41fb14:	mov	x4, x0
  41fb18:	mov	w1, w22
  41fb1c:	mov	x3, x21
  41fb20:	mov	x2, x20
  41fb24:	mov	w0, #0x0                   	// #0
  41fb28:	bl	404050 <error@plt>
  41fb2c:	ldp	x21, x22, [sp, #32]
  41fb30:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41fb34:	ldr	x20, [x19, #24]
  41fb38:	mov	w1, #0x2                   	// #2
  41fb3c:	str	w1, [x0, #3568]
  41fb40:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  41fb44:	ldr	w0, [x0, #772]
  41fb48:	cbnz	w0, 41fb64 <wcrtomb@plt+0x1af44>
  41fb4c:	mov	x0, x20
  41fb50:	bl	4047b0 <free@plt>
  41fb54:	str	xzr, [x19, #24]
  41fb58:	ldp	x19, x20, [sp, #16]
  41fb5c:	ldp	x29, x30, [sp], #48
  41fb60:	ret
  41fb64:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41fb68:	mov	w2, #0x5                   	// #5
  41fb6c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  41fb70:	mov	x0, #0x0                   	// #0
  41fb74:	add	x1, x1, #0x48
  41fb78:	stp	x21, x22, [sp, #32]
  41fb7c:	ldr	x22, [x3, #4056]
  41fb80:	bl	4049c0 <dcgettext@plt>
  41fb84:	mov	x1, x20
  41fb88:	mov	x21, x0
  41fb8c:	mov	w0, #0x0                   	// #0
  41fb90:	bl	44ed50 <argp_parse@@Base+0xef70>
  41fb94:	ldr	x1, [x19, #16]
  41fb98:	mov	x20, x0
  41fb9c:	mov	w0, #0x1                   	// #1
  41fba0:	bl	44ed50 <argp_parse@@Base+0xef70>
  41fba4:	mov	x4, x0
  41fba8:	mov	x3, x20
  41fbac:	mov	x2, x21
  41fbb0:	mov	x0, x22
  41fbb4:	mov	w1, #0x1                   	// #1
  41fbb8:	bl	404700 <__fprintf_chk@plt>
  41fbbc:	ldr	x20, [x19, #24]
  41fbc0:	ldp	x21, x22, [sp, #32]
  41fbc4:	b	41fb4c <wcrtomb@plt+0x1af2c>
  41fbc8:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  41fbcc:	adrp	x2, 493000 <_obstack_memory_used@@Base+0x41bf0>
  41fbd0:	ldr	w4, [x3, #688]
  41fbd4:	mov	x3, x1
  41fbd8:	ldr	w1, [x2, #2200]
  41fbdc:	mov	x2, x0
  41fbe0:	mov	w0, #0x0                   	// #0
  41fbe4:	b	404c00 <__fxstatat@plt>
  41fbe8:	stp	x29, x30, [sp, #-48]!
  41fbec:	mov	x29, sp
  41fbf0:	stp	x19, x20, [sp, #16]
  41fbf4:	mov	x20, x2
  41fbf8:	stp	x21, x22, [sp, #32]
  41fbfc:	mov	w22, w0
  41fc00:	mov	x21, x1
  41fc04:	bl	44f230 <argp_parse@@Base+0xf450>
  41fc08:	mov	x19, x0
  41fc0c:	cmn	x0, #0x1
  41fc10:	b.eq	41fc28 <wcrtomb@plt+0x1b008>  // b.none
  41fc14:	mov	x0, x19
  41fc18:	ldp	x19, x20, [sp, #16]
  41fc1c:	ldp	x21, x22, [sp, #32]
  41fc20:	ldp	x29, x30, [sp], #48
  41fc24:	ret
  41fc28:	bl	404ad0 <__errno_location@plt>
  41fc2c:	ldr	w0, [x0]
  41fc30:	cmp	w0, #0xb
  41fc34:	b.ne	41fc14 <wcrtomb@plt+0x1aff4>  // b.any
  41fc38:	mov	w0, w22
  41fc3c:	mov	w1, #0x3                   	// #3
  41fc40:	bl	450c98 <argp_parse@@Base+0x10eb8>
  41fc44:	tbnz	w0, #31, 41fc14 <wcrtomb@plt+0x1aff4>
  41fc48:	tbz	w0, #11, 41fc14 <wcrtomb@plt+0x1aff4>
  41fc4c:	and	w2, w0, #0xfffff7ff
  41fc50:	mov	w1, #0x4                   	// #4
  41fc54:	mov	w0, w22
  41fc58:	bl	450c98 <argp_parse@@Base+0x10eb8>
  41fc5c:	cmn	w0, #0x1
  41fc60:	b.eq	41fc14 <wcrtomb@plt+0x1aff4>  // b.none
  41fc64:	mov	x2, x20
  41fc68:	mov	x1, x21
  41fc6c:	mov	w0, w22
  41fc70:	ldp	x19, x20, [sp, #16]
  41fc74:	ldp	x21, x22, [sp, #32]
  41fc78:	ldp	x29, x30, [sp], #48
  41fc7c:	b	44f230 <argp_parse@@Base+0xf450>
  41fc80:	stp	x29, x30, [sp, #-48]!
  41fc84:	mov	x29, sp
  41fc88:	stp	x19, x20, [sp, #16]
  41fc8c:	mov	x20, x2
  41fc90:	stp	x21, x22, [sp, #32]
  41fc94:	mov	w22, w0
  41fc98:	mov	x21, x1
  41fc9c:	bl	4443a8 <argp_parse@@Base+0x45c8>
  41fca0:	mov	x19, x0
  41fca4:	cmp	x20, x0
  41fca8:	b.ls	41fcbc <wcrtomb@plt+0x1b09c>  // b.plast
  41fcac:	bl	404ad0 <__errno_location@plt>
  41fcb0:	ldr	w0, [x0]
  41fcb4:	cmp	w0, #0xb
  41fcb8:	b.eq	41fcd0 <wcrtomb@plt+0x1b0b0>  // b.none
  41fcbc:	mov	x0, x19
  41fcc0:	ldp	x19, x20, [sp, #16]
  41fcc4:	ldp	x21, x22, [sp, #32]
  41fcc8:	ldp	x29, x30, [sp], #48
  41fccc:	ret
  41fcd0:	mov	w0, w22
  41fcd4:	mov	w1, #0x3                   	// #3
  41fcd8:	bl	450c98 <argp_parse@@Base+0x10eb8>
  41fcdc:	tbnz	w0, #31, 41fcbc <wcrtomb@plt+0x1b09c>
  41fce0:	tbz	w0, #11, 41fcbc <wcrtomb@plt+0x1b09c>
  41fce4:	and	w2, w0, #0xfffff7ff
  41fce8:	mov	w1, #0x4                   	// #4
  41fcec:	mov	w0, w22
  41fcf0:	bl	450c98 <argp_parse@@Base+0x10eb8>
  41fcf4:	cmn	w0, #0x1
  41fcf8:	b.eq	41fcbc <wcrtomb@plt+0x1b09c>  // b.none
  41fcfc:	sub	x2, x20, x19
  41fd00:	add	x1, x21, x19
  41fd04:	mov	w0, w22
  41fd08:	bl	4443a8 <argp_parse@@Base+0x45c8>
  41fd0c:	add	x19, x19, x0
  41fd10:	b	41fcbc <wcrtomb@plt+0x1b09c>
  41fd14:	nop
  41fd18:	stp	x29, x30, [sp, #-48]!
  41fd1c:	adrp	x8, 497000 <argp_program_version_hook@@Base+0x1e0>
  41fd20:	mov	x7, x4
  41fd24:	mov	x29, sp
  41fd28:	ldr	w4, [x8, #688]
  41fd2c:	mov	x6, x3
  41fd30:	mov	x5, #0x3ffffffe            	// #1073741822
  41fd34:	add	x3, sp, #0x10
  41fd38:	stp	x6, x7, [sp, #16]
  41fd3c:	str	x5, [sp, #40]
  41fd40:	bl	442980 <argp_parse@@Base+0x2ba0>
  41fd44:	ldp	x29, x30, [sp], #48
  41fd48:	ret
  41fd4c:	nop
  41fd50:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41fd54:	ldr	x0, [x0, #2704]
  41fd58:	cmp	x0, #0x0
  41fd5c:	sub	w0, w0, #0x1
  41fd60:	csel	w0, w0, wzr, ne  // ne = any
  41fd64:	ret
  41fd68:	stp	x29, x30, [sp, #-80]!
  41fd6c:	mov	x29, sp
  41fd70:	stp	x21, x22, [sp, #32]
  41fd74:	stp	x23, x24, [sp, #48]
  41fd78:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  41fd7c:	add	x22, x23, #0xa70
  41fd80:	stp	x19, x20, [sp, #16]
  41fd84:	mov	x19, x0
  41fd88:	ldp	x3, x2, [x22, #32]
  41fd8c:	cmp	x3, x2
  41fd90:	b.eq	41ff84 <wcrtomb@plt+0x1b364>  // b.none
  41fd94:	ldrb	w0, [x19]
  41fd98:	cbz	w0, 41fe3c <wcrtomb@plt+0x1b21c>
  41fd9c:	cmp	w0, #0x2e
  41fda0:	b.eq	41fdb0 <wcrtomb@plt+0x1b190>  // b.none
  41fda4:	b	41fe34 <wcrtomb@plt+0x1b214>
  41fda8:	cmp	w1, #0x2e
  41fdac:	b.ne	41fe00 <wcrtomb@plt+0x1b1e0>  // b.any
  41fdb0:	ldrb	w0, [x19, #1]
  41fdb4:	cmp	w0, #0x2f
  41fdb8:	b.ne	41fe24 <wcrtomb@plt+0x1b204>  // b.any
  41fdbc:	ldrb	w1, [x19, #2]
  41fdc0:	add	x2, x19, #0x2
  41fdc4:	mov	x19, x2
  41fdc8:	cmp	w1, #0x2f
  41fdcc:	b.ne	41fda8 <wcrtomb@plt+0x1b188>  // b.any
  41fdd0:	ldrb	w1, [x2, #1]
  41fdd4:	add	x19, x2, #0x1
  41fdd8:	cmp	w1, #0x2f
  41fddc:	b.ne	41fda8 <wcrtomb@plt+0x1b188>  // b.any
  41fde0:	mov	x2, x19
  41fde4:	add	x19, x2, #0x1
  41fde8:	ldrb	w1, [x2, #1]
  41fdec:	cmp	w1, #0x2f
  41fdf0:	b.eq	41fde0 <wcrtomb@plt+0x1b1c0>  // b.none
  41fdf4:	cmp	w1, #0x2e
  41fdf8:	b.eq	41fdb0 <wcrtomb@plt+0x1b190>  // b.none
  41fdfc:	nop
  41fe00:	mov	x0, #0x0                   	// #0
  41fe04:	ldrb	w0, [x19, x0]
  41fe08:	cbnz	w0, 41fe30 <wcrtomb@plt+0x1b210>
  41fe0c:	sub	w0, w3, #0x1
  41fe10:	ldp	x19, x20, [sp, #16]
  41fe14:	ldp	x21, x22, [sp, #32]
  41fe18:	ldp	x23, x24, [sp, #48]
  41fe1c:	ldp	x29, x30, [sp], #80
  41fe20:	ret
  41fe24:	mov	x0, #0x1                   	// #1
  41fe28:	ldrb	w0, [x19, x0]
  41fe2c:	cbz	w0, 41fe0c <wcrtomb@plt+0x1b1ec>
  41fe30:	ldrb	w0, [x19]
  41fe34:	cmp	w0, #0x2f
  41fe38:	b.eq	420018 <wcrtomb@plt+0x1b3f8>  // b.none
  41fe3c:	ldr	x0, [x23, #2672]
  41fe40:	add	x2, x3, x3, lsl #1
  41fe44:	lsl	x2, x2, #3
  41fe48:	add	x1, x0, x2
  41fe4c:	ldur	x20, [x1, #-16]
  41fe50:	cbz	x20, 41ff54 <wcrtomb@plt+0x1b334>
  41fe54:	mov	x0, #0x18                  	// #24
  41fe58:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41fe5c:	mov	x21, x0
  41fe60:	mov	x0, x20
  41fe64:	bl	403ff0 <strlen@plt>
  41fe68:	add	x0, x0, #0x2
  41fe6c:	str	x0, [x21, #8]
  41fe70:	bl	4501a0 <argp_parse@@Base+0x103c0>
  41fe74:	str	x0, [x21]
  41fe78:	mov	x1, x20
  41fe7c:	mov	x20, x0
  41fe80:	bl	404220 <stpcpy@plt>
  41fe84:	sub	x1, x0, x20
  41fe88:	add	x2, x20, x1
  41fe8c:	str	x1, [x21, #16]
  41fe90:	ldurb	w2, [x2, #-1]
  41fe94:	cmp	w2, #0x2f
  41fe98:	b.eq	41feac <wcrtomb@plt+0x1b28c>  // b.none
  41fe9c:	add	x1, x1, #0x1
  41fea0:	str	x1, [x21, #16]
  41fea4:	mov	w1, #0x2f                  	// #47
  41fea8:	strb	w1, [x0]
  41feac:	mov	x0, x19
  41feb0:	bl	403ff0 <strlen@plt>
  41feb4:	ldp	x1, x3, [x21, #8]
  41feb8:	mov	x24, x0
  41febc:	add	x0, x3, #0x1
  41fec0:	add	x0, x0, x24
  41fec4:	cmp	x0, x1
  41fec8:	b.cc	41ff04 <wcrtomb@plt+0x1b2e4>  // b.lo, b.ul, b.last
  41fecc:	str	x25, [sp, #64]
  41fed0:	add	x25, x21, #0x8
  41fed4:	nop
  41fed8:	mov	x0, x20
  41fedc:	mov	x1, x25
  41fee0:	bl	450220 <argp_parse@@Base+0x10440>
  41fee4:	mov	x20, x0
  41fee8:	ldp	x0, x3, [x21, #8]
  41feec:	str	x20, [x21]
  41fef0:	add	x2, x3, #0x1
  41fef4:	add	x2, x2, x24
  41fef8:	cmp	x2, x0
  41fefc:	b.cs	41fed8 <wcrtomb@plt+0x1b2b8>  // b.hs, b.nlast
  41ff00:	ldr	x25, [sp, #64]
  41ff04:	mov	x1, x19
  41ff08:	add	x0, x20, x3
  41ff0c:	bl	404910 <strcpy@plt>
  41ff10:	mov	x0, x19
  41ff14:	bl	403ff0 <strlen@plt>
  41ff18:	ldr	x1, [x21, #16]
  41ff1c:	ldr	x20, [x21]
  41ff20:	add	x0, x0, x1
  41ff24:	str	x0, [x21, #16]
  41ff28:	add	x1, x20, x0
  41ff2c:	ldurb	w1, [x1, #-1]
  41ff30:	cmp	w1, #0x2f
  41ff34:	b.ne	41ff3c <wcrtomb@plt+0x1b31c>  // b.any
  41ff38:	strb	wzr, [x20, x0]
  41ff3c:	mov	x0, x21
  41ff40:	bl	4047b0 <free@plt>
  41ff44:	ldr	x3, [x22, #32]
  41ff48:	ldr	x0, [x23, #2672]
  41ff4c:	add	x2, x3, x3, lsl #1
  41ff50:	lsl	x2, x2, #3
  41ff54:	add	x1, x0, x2
  41ff58:	str	x19, [x0, x2]
  41ff5c:	add	x2, x3, #0x1
  41ff60:	mov	w0, w3
  41ff64:	str	x2, [x22, #32]
  41ff68:	str	x20, [x1, #8]
  41ff6c:	str	wzr, [x1, #16]
  41ff70:	ldp	x19, x20, [sp, #16]
  41ff74:	ldp	x21, x22, [sp, #32]
  41ff78:	ldp	x23, x24, [sp, #48]
  41ff7c:	ldp	x29, x30, [sp], #80
  41ff80:	ret
  41ff84:	ldr	x0, [x23, #2672]
  41ff88:	cbz	x2, 420008 <wcrtomb@plt+0x1b3e8>
  41ff8c:	cbz	x0, 420038 <wcrtomb@plt+0x1b418>
  41ff90:	mov	x1, #0xe38d                	// #58253
  41ff94:	movk	x1, #0x8e38, lsl #16
  41ff98:	movk	x1, #0x38e3, lsl #32
  41ff9c:	movk	x1, #0x38e, lsl #48
  41ffa0:	cmp	x2, x1
  41ffa4:	b.hi	420054 <wcrtomb@plt+0x1b434>  // b.pmore
  41ffa8:	add	x1, x2, #0x1
  41ffac:	add	x2, x1, x2, lsr #1
  41ffb0:	add	x1, x2, x2, lsl #1
  41ffb4:	str	x2, [x22, #40]
  41ffb8:	lsl	x1, x1, #3
  41ffbc:	bl	4501d0 <argp_parse@@Base+0x103f0>
  41ffc0:	ldr	x3, [x22, #32]
  41ffc4:	str	x0, [x23, #2672]
  41ffc8:	mov	x20, x0
  41ffcc:	cbnz	x3, 41fd94 <wcrtomb@plt+0x1b174>
  41ffd0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  41ffd4:	add	x0, x0, #0x348
  41ffd8:	str	x0, [x20]
  41ffdc:	bl	450368 <argp_parse@@Base+0x10588>
  41ffe0:	str	x0, [x20, #8]
  41ffe4:	ldr	x1, [x22, #32]
  41ffe8:	mov	w2, #0xffffff9c            	// #-100
  41ffec:	ldr	x0, [x23, #2672]
  41fff0:	add	x3, x1, #0x1
  41fff4:	add	x1, x1, x1, lsl #1
  41fff8:	str	x3, [x22, #32]
  41fffc:	add	x0, x0, x1, lsl #3
  420000:	str	w2, [x0, #16]
  420004:	b	41fd94 <wcrtomb@plt+0x1b174>
  420008:	mov	x2, #0x2                   	// #2
  42000c:	str	x2, [x22, #40]
  420010:	cbnz	x0, 41ffa8 <wcrtomb@plt+0x1b388>
  420014:	b	41ffb0 <wcrtomb@plt+0x1b390>
  420018:	mov	x0, x19
  42001c:	bl	450328 <argp_parse@@Base+0x10548>
  420020:	ldr	x3, [x22, #32]
  420024:	mov	x20, x0
  420028:	ldr	x0, [x23, #2672]
  42002c:	add	x2, x3, x3, lsl #1
  420030:	lsl	x2, x2, #3
  420034:	b	41ff54 <wcrtomb@plt+0x1b334>
  420038:	mov	x1, #0x18                  	// #24
  42003c:	umulh	x3, x2, x1
  420040:	mul	x1, x2, x1
  420044:	cmp	x3, #0x0
  420048:	cset	x3, ne  // ne = any
  42004c:	tbnz	x1, #63, 420054 <wcrtomb@plt+0x1b434>
  420050:	cbz	x3, 41ffb0 <wcrtomb@plt+0x1b390>
  420054:	str	x25, [sp, #64]
  420058:	bl	4104a0 <wcrtomb@plt+0xb880>
  42005c:	nop
  420060:	stp	x29, x30, [sp, #-96]!
  420064:	mov	x29, sp
  420068:	stp	x25, x26, [sp, #64]
  42006c:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  420070:	stp	x19, x20, [sp, #16]
  420074:	mov	w19, w0
  420078:	ldr	w0, [x25, #128]
  42007c:	cmp	w0, w19
  420080:	b.eq	4201c4 <wcrtomb@plt+0x1b5a4>  // b.none
  420084:	stp	x21, x22, [sp, #32]
  420088:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42008c:	mov	w21, #0x18                  	// #24
  420090:	stp	x23, x24, [sp, #48]
  420094:	adrp	x26, 493000 <_obstack_memory_used@@Base+0x41bf0>
  420098:	smull	x21, w19, w21
  42009c:	ldr	x23, [x22, #2672]
  4200a0:	add	x24, x23, x21
  4200a4:	ldr	w20, [x24, #16]
  4200a8:	cbz	w20, 4201d4 <wcrtomb@plt+0x1b5b4>
  4200ac:	cmp	w20, #0x0
  4200b0:	b.le	4201b4 <wcrtomb@plt+0x1b594>
  4200b4:	add	x21, x22, #0xa70
  4200b8:	add	x1, x21, #0x40
  4200bc:	ldr	w0, [x21, #64]
  4200c0:	cmp	w19, w0
  4200c4:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  4200c8:	ldr	w2, [x1, #4]
  4200cc:	str	w0, [x1, #4]
  4200d0:	cmp	w2, w19
  4200d4:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  4200d8:	ldr	w0, [x1, #8]
  4200dc:	str	w2, [x1, #8]
  4200e0:	cmp	w0, w19
  4200e4:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  4200e8:	ldr	w2, [x1, #12]
  4200ec:	str	w0, [x1, #12]
  4200f0:	cmp	w19, w2
  4200f4:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  4200f8:	ldr	w0, [x1, #16]
  4200fc:	str	w2, [x1, #16]
  420100:	cmp	w19, w0
  420104:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  420108:	ldr	w2, [x1, #20]
  42010c:	str	w0, [x1, #20]
  420110:	cmp	w19, w2
  420114:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  420118:	ldr	w0, [x1, #24]
  42011c:	str	w2, [x1, #24]
  420120:	cmp	w19, w0
  420124:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  420128:	ldr	w2, [x1, #28]
  42012c:	str	w0, [x1, #28]
  420130:	cmp	w19, w2
  420134:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  420138:	ldr	w3, [x1, #32]
  42013c:	str	w2, [x1, #32]
  420140:	cmp	w19, w3
  420144:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  420148:	mov	x0, x1
  42014c:	ldr	w1, [x1, #36]
  420150:	cmp	w19, w1
  420154:	str	w3, [x0, #36]
  420158:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  42015c:	ldr	w2, [x0, #40]
  420160:	str	w1, [x0, #40]
  420164:	cmp	w19, w2
  420168:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  42016c:	ldr	w1, [x0, #44]
  420170:	str	w2, [x0, #44]
  420174:	cmp	w19, w1
  420178:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  42017c:	ldr	w2, [x0, #48]
  420180:	str	w1, [x0, #48]
  420184:	cmp	w19, w2
  420188:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  42018c:	ldr	w1, [x0, #52]
  420190:	str	w2, [x0, #52]
  420194:	cmp	w19, w1
  420198:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  42019c:	ldr	w2, [x0, #56]
  4201a0:	str	w1, [x0, #56]
  4201a4:	cmp	w19, w2
  4201a8:	b.eq	4201b0 <wcrtomb@plt+0x1b590>  // b.none
  4201ac:	str	w2, [x0, #60]
  4201b0:	str	w19, [x21, #64]
  4201b4:	ldp	x21, x22, [sp, #32]
  4201b8:	str	w19, [x25, #128]
  4201bc:	ldp	x23, x24, [sp, #48]
  4201c0:	str	w20, [x26, #2200]
  4201c4:	ldp	x19, x20, [sp, #16]
  4201c8:	ldp	x25, x26, [sp, #64]
  4201cc:	ldp	x29, x30, [sp], #96
  4201d0:	ret
  4201d4:	ldr	x1, [x23, x21]
  4201d8:	ldrb	w0, [x1]
  4201dc:	cmp	w0, #0x2f
  4201e0:	b.ne	420234 <wcrtomb@plt+0x1b614>  // b.any
  4201e4:	adrp	x26, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4201e8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4201ec:	ldr	w0, [x26, #2200]
  4201f0:	ldr	w2, [x2, #828]
  4201f4:	and	w2, w2, #0xffff7fff
  4201f8:	bl	4045b0 <__openat_2@plt>
  4201fc:	mov	w20, w0
  420200:	tbnz	w0, #31, 4202ac <wcrtomb@plt+0x1b68c>
  420204:	add	x21, x22, #0xa70
  420208:	str	w20, [x24, #16]
  42020c:	ldr	x0, [x21, #48]
  420210:	cmp	x0, #0xf
  420214:	b.hi	420244 <wcrtomb@plt+0x1b624>  // b.pmore
  420218:	add	x1, x21, #0x40
  42021c:	add	x2, x0, #0x1
  420220:	str	x2, [x21, #48]
  420224:	cmp	w20, #0x0
  420228:	str	w19, [x1, x0, lsl #2]
  42022c:	b.gt	4200b4 <wcrtomb@plt+0x1b494>
  420230:	b	4201b4 <wcrtomb@plt+0x1b594>
  420234:	sub	w0, w19, #0x1
  420238:	bl	420060 <wcrtomb@plt+0x1b440>
  42023c:	ldr	x1, [x23, x21]
  420240:	b	4201e4 <wcrtomb@plt+0x1b5c4>
  420244:	ldr	w23, [x21, #124]
  420248:	mov	w0, #0x18                  	// #24
  42024c:	str	x27, [sp, #80]
  420250:	ldr	x27, [x22, #2672]
  420254:	smull	x23, w23, w0
  420258:	add	x24, x27, x23
  42025c:	ldr	w0, [x24, #16]
  420260:	bl	4045c0 <close@plt>
  420264:	cbnz	w0, 420280 <wcrtomb@plt+0x1b660>
  420268:	ldr	x27, [sp, #80]
  42026c:	str	wzr, [x24, #16]
  420270:	str	w19, [x21, #124]
  420274:	cmp	w20, #0x0
  420278:	b.gt	4200b4 <wcrtomb@plt+0x1b494>
  42027c:	b	4201b4 <wcrtomb@plt+0x1b594>
  420280:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  420284:	ldr	x0, [x27, x23]
  420288:	ldrb	w1, [x1, #1081]
  42028c:	cbz	w1, 4202a4 <wcrtomb@plt+0x1b684>
  420290:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420294:	ldr	w1, [x1, #432]
  420298:	tbz	w1, #23, 420268 <wcrtomb@plt+0x1b648>
  42029c:	bl	433840 <wcrtomb@plt+0x2ec20>
  4202a0:	b	420268 <wcrtomb@plt+0x1b648>
  4202a4:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  4202a8:	b	420268 <wcrtomb@plt+0x1b648>
  4202ac:	ldr	x0, [x23, x21]
  4202b0:	str	x27, [sp, #80]
  4202b4:	bl	433b88 <wcrtomb@plt+0x2ef68>
  4202b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4202bc:	mov	w2, #0x18                  	// #24
  4202c0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4202c4:	ldr	w0, [x0, #128]
  4202c8:	ldr	x1, [x1, #2672]
  4202cc:	smull	x0, w0, w2
  4202d0:	ldr	x0, [x1, x0]
  4202d4:	ret
  4202d8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4202dc:	ldrb	w1, [x1, #1081]
  4202e0:	cbz	w1, 4202f8 <wcrtomb@plt+0x1b6d8>
  4202e4:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4202e8:	ldr	w1, [x1, #432]
  4202ec:	tbnz	w1, #23, 4202f4 <wcrtomb@plt+0x1b6d4>
  4202f0:	ret
  4202f4:	b	433840 <wcrtomb@plt+0x2ec20>
  4202f8:	b	4337b8 <wcrtomb@plt+0x2eb98>
  4202fc:	nop
  420300:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  420304:	ldrb	w1, [x1, #1081]
  420308:	cbz	w1, 420320 <wcrtomb@plt+0x1b700>
  42030c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420310:	ldr	w1, [x1, #432]
  420314:	tbnz	w1, #23, 42031c <wcrtomb@plt+0x1b6fc>
  420318:	ret
  42031c:	b	433ba0 <wcrtomb@plt+0x2ef80>
  420320:	b	433b00 <wcrtomb@plt+0x2eee0>
  420324:	nop
  420328:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42032c:	ldrb	w3, [x3, #1081]
  420330:	cbz	w3, 420348 <wcrtomb@plt+0x1b728>
  420334:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420338:	ldr	w3, [x3, #432]
  42033c:	tbnz	w3, #23, 420344 <wcrtomb@plt+0x1b724>
  420340:	ret
  420344:	b	433d50 <wcrtomb@plt+0x2f130>
  420348:	b	433ca0 <wcrtomb@plt+0x2f080>
  42034c:	nop
  420350:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  420354:	ldrb	w1, [x1, #1081]
  420358:	cbz	w1, 420370 <wcrtomb@plt+0x1b750>
  42035c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420360:	ldr	w1, [x1, #432]
  420364:	tbnz	w1, #23, 42036c <wcrtomb@plt+0x1b74c>
  420368:	ret
  42036c:	b	433f30 <wcrtomb@plt+0x2f310>
  420370:	b	433ea8 <wcrtomb@plt+0x2f288>
  420374:	nop
  420378:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42037c:	ldrb	w1, [x1, #1081]
  420380:	cbz	w1, 420398 <wcrtomb@plt+0x1b778>
  420384:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420388:	ldr	w1, [x1, #432]
  42038c:	tbnz	w1, #23, 420394 <wcrtomb@plt+0x1b774>
  420390:	ret
  420394:	b	4340b8 <wcrtomb@plt+0x2f498>
  420398:	b	434030 <wcrtomb@plt+0x2f410>
  42039c:	nop
  4203a0:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4203a4:	ldrb	w2, [x2, #1081]
  4203a8:	cbz	w2, 4203c0 <wcrtomb@plt+0x1b7a0>
  4203ac:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4203b0:	ldr	w2, [x2, #432]
  4203b4:	tbnz	w2, #23, 4203bc <wcrtomb@plt+0x1b79c>
  4203b8:	ret
  4203bc:	b	4342c8 <wcrtomb@plt+0x2f6a8>
  4203c0:	b	4341b8 <wcrtomb@plt+0x2f598>
  4203c4:	nop
  4203c8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4203cc:	ldrb	w1, [x1, #1081]
  4203d0:	cbz	w1, 4203e8 <wcrtomb@plt+0x1b7c8>
  4203d4:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4203d8:	ldr	w1, [x1, #432]
  4203dc:	tbnz	w1, #23, 4203e4 <wcrtomb@plt+0x1b7c4>
  4203e0:	ret
  4203e4:	b	434488 <wcrtomb@plt+0x2f868>
  4203e8:	b	434400 <wcrtomb@plt+0x2f7e0>
  4203ec:	nop
  4203f0:	stp	x29, x30, [sp, #-32]!
  4203f4:	tst	w1, #0xff
  4203f8:	mov	x29, sp
  4203fc:	stp	x19, x20, [sp, #16]
  420400:	mov	x19, x0
  420404:	mov	x20, x2
  420408:	b.ne	42041c <wcrtomb@plt+0x1b7fc>  // b.any
  42040c:	bl	404ad0 <__errno_location@plt>
  420410:	ldr	w0, [x0]
  420414:	cmp	w0, #0x2
  420418:	b.eq	420430 <wcrtomb@plt+0x1b810>  // b.none
  42041c:	mov	x0, x19
  420420:	mov	x16, x20
  420424:	ldp	x19, x20, [sp, #16]
  420428:	ldp	x29, x30, [sp], #32
  42042c:	br	x16
  420430:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420434:	ldr	w0, [x0, #432]
  420438:	tbz	w0, #6, 420480 <wcrtomb@plt+0x1b860>
  42043c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  420440:	ldr	x0, [x0, #1136]
  420444:	cbz	x0, 42044c <wcrtomb@plt+0x1b82c>
  420448:	blr	x0
  42044c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420450:	add	x1, x1, #0x60
  420454:	mov	w2, #0x5                   	// #5
  420458:	mov	x0, #0x0                   	// #0
  42045c:	bl	4049c0 <dcgettext@plt>
  420460:	mov	x20, x0
  420464:	mov	x0, x19
  420468:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42046c:	mov	x2, x20
  420470:	mov	x3, x0
  420474:	mov	w1, #0x0                   	// #0
  420478:	mov	w0, #0x0                   	// #0
  42047c:	bl	404050 <error@plt>
  420480:	ldp	x19, x20, [sp, #16]
  420484:	mov	w0, #0x1                   	// #1
  420488:	ldp	x29, x30, [sp], #32
  42048c:	b	42f548 <wcrtomb@plt+0x2a928>
  420490:	stp	x29, x30, [sp, #-16]!
  420494:	mov	x29, sp
  420498:	bl	4041c0 <fork@plt>
  42049c:	cmn	w0, #0x1
  4204a0:	b.eq	4204ac <wcrtomb@plt+0x1b88c>  // b.none
  4204a4:	ldp	x29, x30, [sp], #16
  4204a8:	ret
  4204ac:	mov	w2, #0x5                   	// #5
  4204b0:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4204b4:	mov	x0, #0x0                   	// #0
  4204b8:	add	x1, x1, #0x88
  4204bc:	bl	4049c0 <dcgettext@plt>
  4204c0:	mov	x1, x0
  4204c4:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4204c8:	add	x0, x0, #0x98
  4204cc:	bl	4335a0 <wcrtomb@plt+0x2e980>
  4204d0:	stp	x29, x30, [sp, #-16]!
  4204d4:	mov	x29, sp
  4204d8:	bl	404130 <pipe@plt>
  4204dc:	tbnz	w0, #31, 4204e8 <wcrtomb@plt+0x1b8c8>
  4204e0:	ldp	x29, x30, [sp], #16
  4204e4:	ret
  4204e8:	mov	w2, #0x5                   	// #5
  4204ec:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4204f0:	mov	x0, #0x0                   	// #0
  4204f4:	add	x1, x1, #0xa0
  4204f8:	bl	4049c0 <dcgettext@plt>
  4204fc:	mov	x1, x0
  420500:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420504:	add	x0, x0, #0xb8
  420508:	bl	4335a0 <wcrtomb@plt+0x2e980>
  42050c:	nop
  420510:	stp	x29, x30, [sp, #-48]!
  420514:	mov	x29, sp
  420518:	stp	x19, x20, [sp, #16]
  42051c:	mov	x20, x1
  420520:	str	x21, [sp, #32]
  420524:	mov	x21, x0
  420528:	bl	404560 <getpagesize@plt>
  42052c:	sxtw	x19, w0
  420530:	adds	x0, x19, x20
  420534:	b.cs	420564 <wcrtomb@plt+0x1b944>  // b.hs, b.nlast
  420538:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42053c:	str	x0, [x21]
  420540:	sub	x1, x19, #0x1
  420544:	add	x1, x0, x1
  420548:	ldr	x21, [sp, #32]
  42054c:	udiv	x0, x1, x19
  420550:	msub	x0, x0, x19, x1
  420554:	ldp	x19, x20, [sp, #16]
  420558:	sub	x0, x1, x0
  42055c:	ldp	x29, x30, [sp], #48
  420560:	ret
  420564:	bl	4104a0 <wcrtomb@plt+0xb880>
  420568:	stp	x29, x30, [sp, #-48]!
  42056c:	mov	x29, sp
  420570:	stp	x19, x20, [sp, #16]
  420574:	str	x21, [sp, #32]
  420578:	mov	x21, x0
  42057c:	mov	x0, #0x18                  	// #24
  420580:	bl	4501a0 <argp_parse@@Base+0x103c0>
  420584:	mov	x20, x0
  420588:	mov	x0, x21
  42058c:	bl	403ff0 <strlen@plt>
  420590:	add	x0, x0, #0x2
  420594:	str	x0, [x20, #8]
  420598:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42059c:	str	x0, [x20]
  4205a0:	mov	x19, x0
  4205a4:	mov	x1, x21
  4205a8:	bl	404220 <stpcpy@plt>
  4205ac:	sub	x1, x0, x19
  4205b0:	add	x19, x19, x1
  4205b4:	str	x1, [x20, #16]
  4205b8:	ldurb	w2, [x19, #-1]
  4205bc:	cmp	w2, #0x2f
  4205c0:	b.eq	4205d4 <wcrtomb@plt+0x1b9b4>  // b.none
  4205c4:	add	x1, x1, #0x1
  4205c8:	str	x1, [x20, #16]
  4205cc:	mov	w1, #0x2f                  	// #47
  4205d0:	strb	w1, [x0]
  4205d4:	mov	x0, x20
  4205d8:	ldp	x19, x20, [sp, #16]
  4205dc:	ldr	x21, [sp, #32]
  4205e0:	ldp	x29, x30, [sp], #48
  4205e4:	ret
  4205e8:	stp	x29, x30, [sp, #-32]!
  4205ec:	mov	x29, sp
  4205f0:	str	x19, [sp, #16]
  4205f4:	mov	x19, x0
  4205f8:	ldr	x0, [x0]
  4205fc:	bl	4047b0 <free@plt>
  420600:	mov	x0, x19
  420604:	ldr	x19, [sp, #16]
  420608:	ldp	x29, x30, [sp], #32
  42060c:	b	4047b0 <free@plt>
  420610:	stp	x29, x30, [sp, #-48]!
  420614:	mov	x29, sp
  420618:	stp	x19, x20, [sp, #16]
  42061c:	mov	x19, x0
  420620:	mov	x0, x1
  420624:	stp	x21, x22, [sp, #32]
  420628:	mov	x22, x1
  42062c:	bl	403ff0 <strlen@plt>
  420630:	ldp	x1, x3, [x19, #8]
  420634:	mov	x20, x0
  420638:	add	x0, x3, #0x1
  42063c:	add	x0, x0, x20
  420640:	cmp	x1, x0
  420644:	ldr	x0, [x19]
  420648:	b.hi	420670 <wcrtomb@plt+0x1ba50>  // b.pmore
  42064c:	add	x21, x19, #0x8
  420650:	mov	x1, x21
  420654:	bl	450220 <argp_parse@@Base+0x10440>
  420658:	ldp	x4, x3, [x19, #8]
  42065c:	str	x0, [x19]
  420660:	add	x2, x3, #0x1
  420664:	add	x2, x2, x20
  420668:	cmp	x2, x4
  42066c:	b.cs	420650 <wcrtomb@plt+0x1ba30>  // b.hs, b.nlast
  420670:	mov	x1, x22
  420674:	add	x0, x0, x3
  420678:	bl	404910 <strcpy@plt>
  42067c:	ldr	x0, [x19]
  420680:	ldp	x19, x20, [sp, #16]
  420684:	ldp	x21, x22, [sp, #32]
  420688:	ldp	x29, x30, [sp], #48
  42068c:	ret
  420690:	stp	x29, x30, [sp, #-48]!
  420694:	adrp	x3, 493000 <_obstack_memory_used@@Base+0x41bf0>
  420698:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42069c:	mov	x29, sp
  4206a0:	stp	x19, x20, [sp, #16]
  4206a4:	mov	x19, x0
  4206a8:	ldr	w0, [x3, #2200]
  4206ac:	ldr	w2, [x2, #836]
  4206b0:	str	x21, [sp, #32]
  4206b4:	mov	w21, w1
  4206b8:	orr	w2, w2, #0x4000
  4206bc:	mov	x1, x19
  4206c0:	bl	4045b0 <__openat_2@plt>
  4206c4:	tbz	w0, #31, 4206fc <wcrtomb@plt+0x1badc>
  4206c8:	cbnz	w21, 4206dc <wcrtomb@plt+0x1babc>
  4206cc:	bl	404ad0 <__errno_location@plt>
  4206d0:	ldr	w0, [x0]
  4206d4:	cmp	w0, #0x2
  4206d8:	b.eq	420770 <wcrtomb@plt+0x1bb50>  // b.none
  4206dc:	mov	x0, x19
  4206e0:	mov	x21, #0x0                   	// #0
  4206e4:	bl	433b00 <wcrtomb@plt+0x2eee0>
  4206e8:	mov	x0, x21
  4206ec:	ldp	x19, x20, [sp, #16]
  4206f0:	ldr	x21, [sp, #32]
  4206f4:	ldp	x29, x30, [sp], #48
  4206f8:	ret
  4206fc:	mov	w20, w0
  420700:	bl	404610 <fdopendir@plt>
  420704:	mov	x21, x0
  420708:	cbz	x0, 420754 <wcrtomb@plt+0x1bb34>
  42070c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  420710:	ldr	w1, [x1, #648]
  420714:	bl	44f3f8 <argp_parse@@Base+0xf618>
  420718:	mov	x20, x0
  42071c:	cbz	x0, 420778 <wcrtomb@plt+0x1bb58>
  420720:	mov	x0, x21
  420724:	bl	404590 <closedir@plt>
  420728:	cmp	w0, #0x0
  42072c:	mov	x21, x20
  420730:	cset	w0, ne  // ne = any
  420734:	cbz	w0, 4206e8 <wcrtomb@plt+0x1bac8>
  420738:	mov	x0, x19
  42073c:	bl	434030 <wcrtomb@plt+0x2f410>
  420740:	mov	x0, x21
  420744:	ldp	x19, x20, [sp, #16]
  420748:	ldr	x21, [sp, #32]
  42074c:	ldp	x29, x30, [sp], #48
  420750:	ret
  420754:	mov	x0, x19
  420758:	bl	434030 <wcrtomb@plt+0x2f410>
  42075c:	mov	w0, w20
  420760:	bl	4045c0 <close@plt>
  420764:	cmp	w0, #0x0
  420768:	cset	w0, ne  // ne = any
  42076c:	b	420734 <wcrtomb@plt+0x1bb14>
  420770:	mov	x21, #0x0                   	// #0
  420774:	b	4206e8 <wcrtomb@plt+0x1bac8>
  420778:	mov	x0, x19
  42077c:	bl	434030 <wcrtomb@plt+0x2f410>
  420780:	b	420720 <wcrtomb@plt+0x1bb00>
  420784:	nop
  420788:	stp	x29, x30, [sp, #-80]!
  42078c:	mov	w2, #0x0                   	// #0
  420790:	mov	x29, sp
  420794:	stp	x21, x22, [sp, #32]
  420798:	adrp	x22, 493000 <_obstack_memory_used@@Base+0x41bf0>
  42079c:	stp	x19, x20, [sp, #16]
  4207a0:	mov	x19, x0
  4207a4:	ldr	w0, [x22, #2200]
  4207a8:	mov	w20, w1
  4207ac:	mov	x1, x19
  4207b0:	bl	404160 <unlinkat@plt>
  4207b4:	cbz	w0, 42082c <wcrtomb@plt+0x1bc0c>
  4207b8:	bl	404ad0 <__errno_location@plt>
  4207bc:	mov	x21, x0
  4207c0:	ldr	w0, [x0]
  4207c4:	cmp	w0, #0x1
  4207c8:	ccmp	w0, #0x15, #0x4, ne  // ne = any
  4207cc:	b.eq	4207e8 <wcrtomb@plt+0x1bbc8>  // b.none
  4207d0:	mov	w20, #0x0                   	// #0
  4207d4:	mov	w0, w20
  4207d8:	ldp	x19, x20, [sp, #16]
  4207dc:	ldp	x21, x22, [sp, #32]
  4207e0:	ldp	x29, x30, [sp], #80
  4207e4:	ret
  4207e8:	mov	x0, x19
  4207ec:	bl	41f7b8 <wcrtomb@plt+0x1ab98>
  4207f0:	tst	w0, #0xff
  4207f4:	b.ne	42095c <wcrtomb@plt+0x1bd3c>  // b.any
  4207f8:	ldr	w0, [x22, #2200]
  4207fc:	mov	x1, x19
  420800:	mov	w2, #0x200                 	// #512
  420804:	bl	404160 <unlinkat@plt>
  420808:	cbnz	w0, 420844 <wcrtomb@plt+0x1bc24>
  42080c:	mov	x0, x19
  420810:	mov	w20, #0x1                   	// #1
  420814:	bl	413190 <wcrtomb@plt+0xe570>
  420818:	mov	w0, w20
  42081c:	ldp	x19, x20, [sp, #16]
  420820:	ldp	x21, x22, [sp, #32]
  420824:	ldp	x29, x30, [sp], #80
  420828:	ret
  42082c:	mov	w20, #0x1                   	// #1
  420830:	mov	w0, w20
  420834:	ldp	x19, x20, [sp, #16]
  420838:	ldp	x21, x22, [sp, #32]
  42083c:	ldp	x29, x30, [sp], #80
  420840:	ret
  420844:	ldr	w0, [x21]
  420848:	cmp	w0, #0x14
  42084c:	b.eq	4207d0 <wcrtomb@plt+0x1bbb0>  // b.none
  420850:	b.gt	420878 <wcrtomb@plt+0x1bc58>
  420854:	cbz	w0, 420860 <wcrtomb@plt+0x1bc40>
  420858:	cmp	w0, #0x11
  42085c:	b.ne	4207d0 <wcrtomb@plt+0x1bbb0>  // b.any
  420860:	cmp	w20, #0x1
  420864:	b.eq	420884 <wcrtomb@plt+0x1bc64>  // b.none
  420868:	cmp	w20, #0x2
  42086c:	mov	w20, #0xffffffff            	// #-1
  420870:	b.eq	4207d4 <wcrtomb@plt+0x1bbb4>  // b.none
  420874:	b	4207d0 <wcrtomb@plt+0x1bbb0>
  420878:	cmp	w0, #0x27
  42087c:	b.ne	4207d0 <wcrtomb@plt+0x1bbb0>  // b.any
  420880:	b	420860 <wcrtomb@plt+0x1bc40>
  420884:	mov	x0, x19
  420888:	mov	w1, #0x0                   	// #0
  42088c:	stp	x25, x26, [sp, #64]
  420890:	bl	420690 <wcrtomb@plt+0x1ba70>
  420894:	mov	x25, x0
  420898:	cbz	x0, 420964 <wcrtomb@plt+0x1bd44>
  42089c:	stp	x23, x24, [sp, #48]
  4208a0:	mov	x24, x0
  4208a4:	mov	x0, x24
  4208a8:	bl	403ff0 <strlen@plt>
  4208ac:	mov	x23, x0
  4208b0:	mov	x1, x24
  4208b4:	mov	x0, x19
  4208b8:	cbz	x23, 420900 <wcrtomb@plt+0x1bce0>
  4208bc:	bl	427450 <wcrtomb@plt+0x22830>
  4208c0:	mov	x26, x0
  4208c4:	mov	w1, #0x1                   	// #1
  4208c8:	bl	420788 <wcrtomb@plt+0x1bb68>
  4208cc:	add	x23, x23, #0x1
  4208d0:	mov	w20, w0
  4208d4:	mov	x0, x26
  4208d8:	ldr	w26, [x21]
  4208dc:	bl	4047b0 <free@plt>
  4208e0:	cbz	w20, 420944 <wcrtomb@plt+0x1bd24>
  4208e4:	add	x24, x24, x23
  4208e8:	mov	x0, x24
  4208ec:	bl	403ff0 <strlen@plt>
  4208f0:	mov	x1, x24
  4208f4:	mov	x23, x0
  4208f8:	mov	x0, x19
  4208fc:	cbnz	x23, 4208bc <wcrtomb@plt+0x1bc9c>
  420900:	mov	x0, x25
  420904:	bl	4047b0 <free@plt>
  420908:	mov	x0, x19
  42090c:	bl	41f7b8 <wcrtomb@plt+0x1ab98>
  420910:	tst	w0, #0xff
  420914:	b.ne	42097c <wcrtomb@plt+0x1bd5c>  // b.any
  420918:	ldr	w0, [x22, #2200]
  42091c:	mov	x1, x19
  420920:	mov	w2, #0x200                 	// #512
  420924:	bl	404160 <unlinkat@plt>
  420928:	cbnz	w0, 42096c <wcrtomb@plt+0x1bd4c>
  42092c:	mov	x0, x19
  420930:	mov	w20, #0x1                   	// #1
  420934:	bl	413190 <wcrtomb@plt+0xe570>
  420938:	ldp	x23, x24, [sp, #48]
  42093c:	ldp	x25, x26, [sp, #64]
  420940:	b	4207d4 <wcrtomb@plt+0x1bbb4>
  420944:	mov	x0, x25
  420948:	bl	4047b0 <free@plt>
  42094c:	ldp	x23, x24, [sp, #48]
  420950:	str	w26, [x21]
  420954:	ldp	x25, x26, [sp, #64]
  420958:	b	4207d4 <wcrtomb@plt+0x1bbb4>
  42095c:	str	wzr, [x21]
  420960:	b	420860 <wcrtomb@plt+0x1bc40>
  420964:	ldp	x25, x26, [sp, #64]
  420968:	b	4207d0 <wcrtomb@plt+0x1bbb0>
  42096c:	mov	w20, #0x0                   	// #0
  420970:	ldp	x23, x24, [sp, #48]
  420974:	ldp	x25, x26, [sp, #64]
  420978:	b	4207d4 <wcrtomb@plt+0x1bbb4>
  42097c:	mov	w20, #0x0                   	// #0
  420980:	ldp	x23, x24, [sp, #48]
  420984:	ldp	x25, x26, [sp, #64]
  420988:	str	wzr, [x21]
  42098c:	b	4207d4 <wcrtomb@plt+0x1bbb4>
  420990:	stp	x29, x30, [sp, #-80]!
  420994:	cmp	w1, #0x1
  420998:	mov	x29, sp
  42099c:	stp	x19, x20, [sp, #16]
  4209a0:	mov	x20, x0
  4209a4:	b.eq	420ab0 <wcrtomb@plt+0x1be90>  // b.none
  4209a8:	stp	x21, x22, [sp, #32]
  4209ac:	cmp	w1, #0x2
  4209b0:	mov	x22, x2
  4209b4:	str	x23, [sp, #48]
  4209b8:	ldr	x23, [x0]
  4209bc:	b.eq	420a98 <wcrtomb@plt+0x1be78>  // b.none
  4209c0:	add	w0, w1, #0x1
  4209c4:	add	w1, w1, w1, lsr #31
  4209c8:	mov	x2, x20
  4209cc:	add	w0, w0, w0, lsr #31
  4209d0:	asr	w19, w1, #1
  4209d4:	asr	w1, w0, #1
  4209d8:	subs	w0, w1, #0x1
  4209dc:	b.ne	420a84 <wcrtomb@plt+0x1be64>  // b.any
  4209e0:	str	xzr, [x2]
  4209e4:	mov	x0, x20
  4209e8:	mov	x2, x22
  4209ec:	bl	420990 <wcrtomb@plt+0x1bd70>
  4209f0:	mov	x21, x0
  4209f4:	mov	w1, w19
  4209f8:	mov	x0, x23
  4209fc:	mov	x2, x22
  420a00:	bl	420990 <wcrtomb@plt+0x1bd70>
  420a04:	cmp	x21, #0x0
  420a08:	mov	x20, x0
  420a0c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  420a10:	b.eq	420ae0 <wcrtomb@plt+0x1bec0>  // b.none
  420a14:	add	x19, sp, #0x48
  420a18:	mov	x1, x20
  420a1c:	mov	x0, x21
  420a20:	blr	x22
  420a24:	tbnz	w0, #31, 420a50 <wcrtomb@plt+0x1be30>
  420a28:	ldr	x0, [x20]
  420a2c:	str	x20, [x19]
  420a30:	mov	x3, x20
  420a34:	mov	x20, x0
  420a38:	cbz	x0, 420a68 <wcrtomb@plt+0x1be48>
  420a3c:	mov	x19, x3
  420a40:	mov	x1, x20
  420a44:	mov	x0, x21
  420a48:	blr	x22
  420a4c:	tbz	w0, #31, 420a28 <wcrtomb@plt+0x1be08>
  420a50:	ldr	x0, [x21]
  420a54:	str	x21, [x19]
  420a58:	mov	x3, x21
  420a5c:	mov	x21, x0
  420a60:	cbnz	x0, 420a3c <wcrtomb@plt+0x1be1c>
  420a64:	mov	x21, x20
  420a68:	ldr	x23, [sp, #48]
  420a6c:	str	x21, [x3]
  420a70:	ldp	x19, x20, [sp, #16]
  420a74:	ldp	x21, x22, [sp, #32]
  420a78:	ldr	x0, [sp, #72]
  420a7c:	ldp	x29, x30, [sp], #80
  420a80:	ret
  420a84:	mov	x2, x23
  420a88:	subs	w0, w0, #0x1
  420a8c:	ldr	x23, [x23]
  420a90:	b.eq	4209e0 <wcrtomb@plt+0x1bdc0>  // b.none
  420a94:	b	420a84 <wcrtomb@plt+0x1be64>
  420a98:	mov	x1, x23
  420a9c:	blr	x2
  420aa0:	cmp	w0, #0x0
  420aa4:	b.gt	420ac0 <wcrtomb@plt+0x1bea0>
  420aa8:	ldp	x21, x22, [sp, #32]
  420aac:	ldr	x23, [sp, #48]
  420ab0:	mov	x0, x20
  420ab4:	ldp	x19, x20, [sp, #16]
  420ab8:	ldp	x29, x30, [sp], #80
  420abc:	ret
  420ac0:	ldr	x0, [x20]
  420ac4:	ldp	x21, x22, [sp, #32]
  420ac8:	ldr	x23, [sp, #48]
  420acc:	str	x20, [x0]
  420ad0:	str	xzr, [x20]
  420ad4:	ldp	x19, x20, [sp, #16]
  420ad8:	ldp	x29, x30, [sp], #80
  420adc:	ret
  420ae0:	add	x3, sp, #0x48
  420ae4:	cbnz	x21, 420a68 <wcrtomb@plt+0x1be48>
  420ae8:	mov	x21, x20
  420aec:	b	420a68 <wcrtomb@plt+0x1be48>
  420af0:	stp	x29, x30, [sp, #-16]!
  420af4:	mov	x29, sp
  420af8:	ldr	x0, [x0, #88]
  420afc:	ldr	x1, [x1, #88]
  420b00:	bl	404710 <strcmp@plt>
  420b04:	cmp	w0, #0x0
  420b08:	cset	w0, eq  // eq = none
  420b0c:	ldp	x29, x30, [sp], #16
  420b10:	ret
  420b14:	nop
  420b18:	ldr	x0, [x0, #16]
  420b1c:	ldr	x1, [x1, #16]
  420b20:	b	404710 <strcmp@plt>
  420b24:	nop
  420b28:	stp	x29, x30, [sp, #-32]!
  420b2c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420b30:	mov	x29, sp
  420b34:	stp	x19, x20, [sp, #16]
  420b38:	ldr	x20, [x1, #2800]
  420b3c:	ldr	x0, [x20]
  420b40:	str	x0, [x1, #2800]
  420b44:	cbz	x0, 420b4c <wcrtomb@plt+0x1bf2c>
  420b48:	str	xzr, [x0, #8]
  420b4c:	ldr	w0, [x20, #16]
  420b50:	cmp	w0, #0x4
  420b54:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  420b58:	b.ne	420b94 <wcrtomb@plt+0x1bf74>  // b.any
  420b5c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  420b60:	ldr	w0, [x0, #988]
  420b64:	cmp	w0, #0x3
  420b68:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  420b6c:	b.ne	420b88 <wcrtomb@plt+0x1bf68>  // b.any
  420b70:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  420b74:	ldr	x0, [x19, #152]
  420b78:	stp	xzr, x0, [x20]
  420b7c:	cbz	x0, 420b84 <wcrtomb@plt+0x1bf64>
  420b80:	str	x20, [x0]
  420b84:	str	x20, [x19, #152]
  420b88:	ldp	x19, x20, [sp, #16]
  420b8c:	ldp	x29, x30, [sp], #32
  420b90:	ret
  420b94:	cmp	w0, #0x3
  420b98:	b.eq	420bc4 <wcrtomb@plt+0x1bfa4>  // b.none
  420b9c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  420ba0:	ldr	x0, [x19, #152]
  420ba4:	cbz	x0, 420bc4 <wcrtomb@plt+0x1bfa4>
  420ba8:	add	x19, x19, #0x98
  420bac:	nop
  420bb0:	ldr	x1, [x0, #8]
  420bb4:	str	x1, [x19]
  420bb8:	bl	4047b0 <free@plt>
  420bbc:	ldr	x0, [x19]
  420bc0:	cbnz	x0, 420bb0 <wcrtomb@plt+0x1bf90>
  420bc4:	mov	x0, x20
  420bc8:	ldp	x19, x20, [sp, #16]
  420bcc:	ldp	x29, x30, [sp], #32
  420bd0:	b	4047b0 <free@plt>
  420bd4:	nop
  420bd8:	stp	x29, x30, [sp, #-80]!
  420bdc:	mov	x29, sp
  420be0:	stp	x23, x24, [sp, #48]
  420be4:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  420be8:	ldr	x0, [x23, #152]
  420bec:	cbz	x0, 420d38 <wcrtomb@plt+0x1c118>
  420bf0:	stp	x19, x20, [sp, #16]
  420bf4:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  420bf8:	ldr	x0, [x20, #1136]
  420bfc:	stp	x21, x22, [sp, #32]
  420c00:	stp	x25, x26, [sp, #64]
  420c04:	cbz	x0, 420c0c <wcrtomb@plt+0x1bfec>
  420c08:	blr	x0
  420c0c:	mov	w2, #0x5                   	// #5
  420c10:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420c14:	mov	x0, #0x0                   	// #0
  420c18:	add	x1, x1, #0xc0
  420c1c:	bl	4049c0 <dcgettext@plt>
  420c20:	mov	x2, x0
  420c24:	mov	w1, #0x0                   	// #0
  420c28:	mov	w0, #0x0                   	// #0
  420c2c:	bl	404050 <error@plt>
  420c30:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420c34:	ldr	x0, [x23, #152]
  420c38:	mov	w1, #0x2                   	// #2
  420c3c:	str	w1, [x21, #3568]
  420c40:	mov	x25, x0
  420c44:	ldr	x0, [x0, #8]
  420c48:	cbnz	x0, 420c40 <wcrtomb@plt+0x1c020>
  420c4c:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420c50:	adrp	x24, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420c54:	add	x22, x22, #0x190
  420c58:	add	x24, x24, #0x1c0
  420c5c:	nop
  420c60:	ldr	w0, [x25, #16]
  420c64:	cmp	w0, #0x1
  420c68:	b.eq	420d44 <wcrtomb@plt+0x1c124>  // b.none
  420c6c:	cmp	w0, #0x4
  420c70:	b.ne	420d00 <wcrtomb@plt+0x1c0e0>  // b.any
  420c74:	ldr	x1, [x25, #32]
  420c78:	ldr	x0, [x20, #1136]
  420c7c:	cbz	x1, 420d8c <wcrtomb@plt+0x1c16c>
  420c80:	cbz	x0, 420c88 <wcrtomb@plt+0x1c068>
  420c84:	blr	x0
  420c88:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420c8c:	mov	w2, #0x5                   	// #5
  420c90:	add	x1, x1, #0x1a8
  420c94:	mov	x0, #0x0                   	// #0
  420c98:	bl	4049c0 <dcgettext@plt>
  420c9c:	mov	x26, x0
  420ca0:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  420ca4:	ldr	w3, [x25, #24]
  420ca8:	add	x1, x1, #0x8a0
  420cac:	b	420cbc <wcrtomb@plt+0x1c09c>
  420cb0:	add	x1, x1, #0x30
  420cb4:	cmp	w3, w4
  420cb8:	b.eq	420cd8 <wcrtomb@plt+0x1c0b8>  // b.none
  420cbc:	ldr	x19, [x1]
  420cc0:	ldr	w4, [x1, #8]
  420cc4:	cbnz	x19, 420cb0 <wcrtomb@plt+0x1c090>
  420cc8:	cbnz	w4, 420cb0 <wcrtomb@plt+0x1c090>
  420ccc:	ldr	x5, [x1, #32]
  420cd0:	cbnz	x5, 420cb0 <wcrtomb@plt+0x1c090>
  420cd4:	nop
  420cd8:	ldr	x0, [x25, #32]
  420cdc:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  420ce0:	mov	x4, x0
  420ce4:	mov	x3, x19
  420ce8:	mov	w0, #0x0                   	// #0
  420cec:	mov	x2, x26
  420cf0:	mov	w1, #0x0                   	// #0
  420cf4:	bl	404050 <error@plt>
  420cf8:	mov	w0, #0x2                   	// #2
  420cfc:	str	w0, [x21, #3568]
  420d00:	ldr	x25, [x25]
  420d04:	cbnz	x25, 420c60 <wcrtomb@plt+0x1c040>
  420d08:	ldr	x0, [x23, #152]
  420d0c:	cbz	x0, 420d2c <wcrtomb@plt+0x1c10c>
  420d10:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  420d14:	add	x19, x19, #0x98
  420d18:	ldr	x1, [x0, #8]
  420d1c:	str	x1, [x19]
  420d20:	bl	4047b0 <free@plt>
  420d24:	ldr	x0, [x19]
  420d28:	cbnz	x0, 420d18 <wcrtomb@plt+0x1c0f8>
  420d2c:	ldp	x19, x20, [sp, #16]
  420d30:	ldp	x21, x22, [sp, #32]
  420d34:	ldp	x25, x26, [sp, #64]
  420d38:	ldp	x23, x24, [sp, #48]
  420d3c:	ldp	x29, x30, [sp], #80
  420d40:	ret
  420d44:	ldr	x0, [x20, #1136]
  420d48:	cbz	x0, 420d50 <wcrtomb@plt+0x1c130>
  420d4c:	blr	x0
  420d50:	mov	w2, #0x5                   	// #5
  420d54:	mov	x1, x22
  420d58:	mov	x0, #0x0                   	// #0
  420d5c:	bl	4049c0 <dcgettext@plt>
  420d60:	mov	x19, x0
  420d64:	ldr	x0, [x25, #24]
  420d68:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  420d6c:	mov	x3, x0
  420d70:	mov	x2, x19
  420d74:	mov	w0, #0x0                   	// #0
  420d78:	mov	w1, #0x0                   	// #0
  420d7c:	bl	404050 <error@plt>
  420d80:	mov	w0, #0x2                   	// #2
  420d84:	str	w0, [x21, #3568]
  420d88:	b	420d00 <wcrtomb@plt+0x1c0e0>
  420d8c:	cbz	x0, 420d94 <wcrtomb@plt+0x1c174>
  420d90:	blr	x0
  420d94:	mov	x1, x24
  420d98:	mov	w2, #0x5                   	// #5
  420d9c:	mov	x0, #0x0                   	// #0
  420da0:	bl	4049c0 <dcgettext@plt>
  420da4:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  420da8:	ldr	w5, [x25, #24]
  420dac:	mov	x2, x0
  420db0:	add	x1, x1, #0x8a0
  420db4:	b	420dc4 <wcrtomb@plt+0x1c1a4>
  420db8:	add	x1, x1, #0x30
  420dbc:	cmp	w5, w4
  420dc0:	b.eq	420d74 <wcrtomb@plt+0x1c154>  // b.none
  420dc4:	ldr	x3, [x1]
  420dc8:	ldr	w4, [x1, #8]
  420dcc:	cbnz	x3, 420db8 <wcrtomb@plt+0x1c198>
  420dd0:	cbnz	w4, 420db8 <wcrtomb@plt+0x1c198>
  420dd4:	ldr	x6, [x1, #32]
  420dd8:	cbnz	x6, 420db8 <wcrtomb@plt+0x1c198>
  420ddc:	b	420d74 <wcrtomb@plt+0x1c154>
  420de0:	stp	x29, x30, [sp, #-32]!
  420de4:	mov	x29, sp
  420de8:	stp	x19, x20, [sp, #16]
  420dec:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420df0:	add	x19, x19, #0xaf0
  420df4:	ldr	w1, [x19, #8]
  420df8:	cbnz	w1, 420e74 <wcrtomb@plt+0x1c254>
  420dfc:	bl	4419b8 <argp_parse@@Base+0x1bd8>
  420e00:	tst	w0, #0xff
  420e04:	b.eq	420e74 <wcrtomb@plt+0x1c254>  // b.none
  420e08:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  420e0c:	mov	w0, #0x1                   	// #1
  420e10:	str	w0, [x19, #12]
  420e14:	ldr	x0, [x20, #1136]
  420e18:	cbz	x0, 420e20 <wcrtomb@plt+0x1c200>
  420e1c:	blr	x0
  420e20:	mov	w2, #0x5                   	// #5
  420e24:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420e28:	mov	x0, #0x0                   	// #0
  420e2c:	add	x1, x1, #0x1d8
  420e30:	bl	4049c0 <dcgettext@plt>
  420e34:	mov	x2, x0
  420e38:	mov	w1, #0x0                   	// #0
  420e3c:	mov	w0, #0x0                   	// #0
  420e40:	bl	404050 <error@plt>
  420e44:	ldr	x0, [x20, #1136]
  420e48:	cbz	x0, 420e50 <wcrtomb@plt+0x1c230>
  420e4c:	blr	x0
  420e50:	mov	w2, #0x5                   	// #5
  420e54:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  420e58:	mov	x0, #0x0                   	// #0
  420e5c:	add	x1, x1, #0x208
  420e60:	bl	4049c0 <dcgettext@plt>
  420e64:	mov	x2, x0
  420e68:	mov	w1, #0x0                   	// #0
  420e6c:	mov	w0, #0x0                   	// #0
  420e70:	bl	404050 <error@plt>
  420e74:	ldr	w0, [x19, #12]
  420e78:	ldp	x19, x20, [sp, #16]
  420e7c:	ldp	x29, x30, [sp], #32
  420e80:	ret
  420e84:	nop
  420e88:	ldr	x0, [x0, #88]
  420e8c:	b	444be0 <argp_parse@@Base+0x4e00>
  420e90:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  420e94:	mov	x3, x0
  420e98:	ldr	x0, [x2, #888]
  420e9c:	ldr	x4, [x3, #48]
  420ea0:	ldr	x2, [x1, #48]
  420ea4:	cbnz	x0, 420ecc <wcrtomb@plt+0x1c2ac>
  420ea8:	cmp	x2, #0x0
  420eac:	cset	w2, ne  // ne = any
  420eb0:	cmp	x4, #0x0
  420eb4:	cset	w0, ne  // ne = any
  420eb8:	subs	w0, w2, w0
  420ebc:	b.ne	420ee4 <wcrtomb@plt+0x1c2c4>  // b.any
  420ec0:	ldr	x1, [x1, #16]
  420ec4:	ldr	x0, [x3, #16]
  420ec8:	b	404710 <strcmp@plt>
  420ecc:	cmp	x0, x2
  420ed0:	cset	w2, ls  // ls = plast
  420ed4:	cmp	x0, x4
  420ed8:	cset	w0, ls  // ls = plast
  420edc:	subs	w0, w2, w0
  420ee0:	b.eq	420ec0 <wcrtomb@plt+0x1c2a0>  // b.none
  420ee4:	ret
  420ee8:	stp	x29, x30, [sp, #-320]!
  420eec:	mov	x29, sp
  420ef0:	stp	x19, x20, [sp, #16]
  420ef4:	ldrb	w19, [x0]
  420ef8:	cbz	w19, 420fe0 <wcrtomb@plt+0x1c3c0>
  420efc:	mov	x20, x0
  420f00:	stp	x21, x22, [sp, #32]
  420f04:	mov	x22, x1
  420f08:	mov	x21, x2
  420f0c:	bl	404740 <__ctype_b_loc@plt>
  420f10:	ldr	x3, [x0]
  420f14:	b	420f20 <wcrtomb@plt+0x1c300>
  420f18:	ldrb	w19, [x20, #1]!
  420f1c:	cbz	w19, 420fc8 <wcrtomb@plt+0x1c3a8>
  420f20:	ubfiz	x0, x19, #1, #8
  420f24:	ldrh	w0, [x3, x0]
  420f28:	tbnz	w0, #13, 420f18 <wcrtomb@plt+0x1c2f8>
  420f2c:	cmp	w19, #0x2d
  420f30:	b.ne	420fc8 <wcrtomb@plt+0x1c3a8>  // b.any
  420f34:	mov	x3, #0x1                   	// #1
  420f38:	mov	w2, #0xe46                 	// #3654
  420f3c:	add	x1, sp, #0x58
  420f40:	mov	x0, x20
  420f44:	movk	w2, #0x200, lsl #16
  420f48:	str	x3, [sp, #104]
  420f4c:	bl	438ea0 <wcrtomb@plt+0x34280>
  420f50:	mov	w19, w0
  420f54:	cbnz	w0, 420fe8 <wcrtomb@plt+0x1c3c8>
  420f58:	ldp	x2, x1, [sp, #88]
  420f5c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  420f60:	ldr	x3, [x21]
  420f64:	mov	w5, #0x2                   	// #2
  420f68:	ldr	x0, [x0, #3664]
  420f6c:	str	x0, [x1]
  420f70:	ldr	x0, [sp, #104]
  420f74:	str	w5, [sp, #56]
  420f78:	ldr	x4, [x22]
  420f7c:	add	w0, w2, w0
  420f80:	add	x2, sp, #0x38
  420f84:	stp	x4, x3, [sp, #64]
  420f88:	bl	42e228 <wcrtomb@plt+0x29608>
  420f8c:	ldr	x0, [sp, #88]
  420f90:	ldr	x2, [sp, #104]
  420f94:	adds	x2, x2, x0
  420f98:	b.eq	420fac <wcrtomb@plt+0x1c38c>  // b.none
  420f9c:	ldr	x0, [sp, #96]
  420fa0:	lsl	x2, x2, #3
  420fa4:	mov	w1, #0x0                   	// #0
  420fa8:	bl	404410 <memset@plt>
  420fac:	add	x0, sp, #0x58
  420fb0:	bl	436e10 <wcrtomb@plt+0x321f0>
  420fb4:	mov	w0, w19
  420fb8:	ldp	x19, x20, [sp, #16]
  420fbc:	ldp	x21, x22, [sp, #32]
  420fc0:	ldp	x29, x30, [sp], #320
  420fc4:	ret
  420fc8:	ldp	x21, x22, [sp, #32]
  420fcc:	mov	w19, #0x1                   	// #1
  420fd0:	mov	w0, w19
  420fd4:	ldp	x19, x20, [sp, #16]
  420fd8:	ldp	x29, x30, [sp], #320
  420fdc:	ret
  420fe0:	mov	w19, #0x1                   	// #1
  420fe4:	b	420fd0 <wcrtomb@plt+0x1c3b0>
  420fe8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  420fec:	ldr	x0, [x0, #1136]
  420ff0:	cbz	x0, 420ff8 <wcrtomb@plt+0x1c3d8>
  420ff4:	blr	x0
  420ff8:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  420ffc:	add	x1, x1, #0x2c8
  421000:	mov	w2, #0x5                   	// #5
  421004:	mov	x0, #0x0                   	// #0
  421008:	bl	4049c0 <dcgettext@plt>
  42100c:	mov	x19, x0
  421010:	add	x0, sp, #0x58
  421014:	bl	43a9b0 <wcrtomb@plt+0x35d90>
  421018:	mov	x3, x20
  42101c:	mov	x4, x0
  421020:	mov	x2, x19
  421024:	mov	w1, #0x0                   	// #0
  421028:	mov	w0, #0x0                   	// #0
  42102c:	bl	404050 <error@plt>
  421030:	bl	410460 <wcrtomb@plt+0xb840>
  421034:	nop
  421038:	stp	x29, x30, [sp, #-80]!
  42103c:	mov	x29, sp
  421040:	stp	x19, x20, [sp, #16]
  421044:	mov	x19, x0
  421048:	ldr	x0, [x0, #64]
  42104c:	stp	x23, x24, [sp, #48]
  421050:	mov	x24, x2
  421054:	stp	x21, x22, [sp, #32]
  421058:	mov	x22, x1
  42105c:	ldr	x23, [x0, #24]
  421060:	str	x25, [sp, #64]
  421064:	sub	x25, x2, x23
  421068:	ldr	x20, [x19, #24]
  42106c:	add	x20, x25, x20
  421070:	add	x0, x20, #0x1
  421074:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421078:	mov	x1, x22
  42107c:	mov	x21, x0
  421080:	bl	404220 <stpcpy@plt>
  421084:	ldr	x1, [x19, #16]
  421088:	add	x1, x1, x23
  42108c:	bl	404910 <strcpy@plt>
  421090:	ldr	x0, [x19, #16]
  421094:	bl	4047b0 <free@plt>
  421098:	stp	x21, x20, [x19, #16]
  42109c:	mov	x4, x24
  4210a0:	ldp	x0, x1, [x19, #56]
  4210a4:	mov	x3, x22
  4210a8:	mov	x2, x23
  4210ac:	ldr	x1, [x1, #16]
  4210b0:	bl	419598 <wcrtomb@plt+0x14978>
  4210b4:	ldr	x19, [x19, #80]
  4210b8:	cbnz	x19, 421068 <wcrtomb@plt+0x1c448>
  4210bc:	ldp	x19, x20, [sp, #16]
  4210c0:	ldp	x21, x22, [sp, #32]
  4210c4:	ldp	x23, x24, [sp, #48]
  4210c8:	ldr	x25, [sp, #64]
  4210cc:	ldp	x29, x30, [sp], #80
  4210d0:	ret
  4210d4:	nop
  4210d8:	stp	x29, x30, [sp, #-224]!
  4210dc:	mov	x29, sp
  4210e0:	stp	x25, x26, [sp, #64]
  4210e4:	ldr	x26, [x0, #48]
  4210e8:	stp	x19, x20, [sp, #16]
  4210ec:	stp	x21, x22, [sp, #32]
  4210f0:	mov	x22, x0
  4210f4:	stp	x23, x24, [sp, #48]
  4210f8:	str	x27, [sp, #80]
  4210fc:	cbz	x26, 421308 <wcrtomb@plt+0x1c6e8>
  421100:	ldr	w23, [x0, #40]
  421104:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421108:	add	x27, x24, #0xaf0
  42110c:	ldp	x1, x3, [x26, #8]
  421110:	add	x25, x27, #0x28
  421114:	ldr	x0, [x22, #32]
  421118:	add	x0, x0, #0x1
  42111c:	str	x0, [x22, #32]
  421120:	cmp	x1, x3
  421124:	b.cs	4213b4 <wcrtomb@plt+0x1c794>  // b.hs, b.nlast
  421128:	add	x2, x1, #0x1
  42112c:	str	x2, [x26, #8]
  421130:	ldrb	w20, [x1]
  421134:	cmp	w20, w23
  421138:	b.eq	4213ac <wcrtomb@plt+0x1c78c>  // b.none
  42113c:	mov	x21, #0x0                   	// #0
  421140:	b	421170 <wcrtomb@plt+0x1c550>
  421144:	strb	w20, [x19, x21]
  421148:	add	x21, x21, #0x1
  42114c:	cbz	w20, 42119c <wcrtomb@plt+0x1c57c>
  421150:	ldp	x0, x1, [x26, #8]
  421154:	cmp	x0, x1
  421158:	b.cs	421234 <wcrtomb@plt+0x1c614>  // b.hs, b.nlast
  42115c:	add	x1, x0, #0x1
  421160:	str	x1, [x26, #8]
  421164:	ldrb	w20, [x0]
  421168:	cmp	w20, w23
  42116c:	b.eq	4212f4 <wcrtomb@plt+0x1c6d4>  // b.none
  421170:	ldp	x19, x0, [x27, #32]
  421174:	cmp	x0, x21
  421178:	b.ne	421144 <wcrtomb@plt+0x1c524>  // b.any
  42117c:	mov	x0, x19
  421180:	mov	x1, x25
  421184:	bl	450220 <argp_parse@@Base+0x10440>
  421188:	mov	x19, x0
  42118c:	str	x0, [x27, #32]
  421190:	strb	w20, [x19, x21]
  421194:	add	x21, x21, #0x1
  421198:	cbnz	w20, 421150 <wcrtomb@plt+0x1c530>
  42119c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4211a0:	ldr	w0, [x0, #432]
  4211a4:	tbz	w0, #9, 4211dc <wcrtomb@plt+0x1c5bc>
  4211a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4211ac:	ldr	x0, [x0, #1136]
  4211b0:	cbz	x0, 4211b8 <wcrtomb@plt+0x1c598>
  4211b4:	blr	x0
  4211b8:	ldr	x0, [x22, #24]
  4211bc:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4211c0:	mov	x3, x0
  4211c4:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4211c8:	mov	w1, #0x0                   	// #0
  4211cc:	add	x2, x2, #0x2b0
  4211d0:	mov	w0, #0x0                   	// #0
  4211d4:	bl	404050 <error@plt>
  4211d8:	ldr	x19, [x27, #32]
  4211dc:	str	wzr, [x22, #40]
  4211e0:	ldrb	w0, [x22, #44]
  4211e4:	cbnz	w0, 42120c <wcrtomb@plt+0x1c5ec>
  4211e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4211ec:	ldrb	w0, [x0, #884]
  4211f0:	cbnz	w0, 421548 <wcrtomb@plt+0x1c928>
  4211f4:	mov	x0, x19
  4211f8:	add	x2, x22, #0x20
  4211fc:	add	x1, x22, #0x18
  421200:	bl	420ee8 <wcrtomb@plt+0x1c2c8>
  421204:	cbz	w0, 42151c <wcrtomb@plt+0x1c8fc>
  421208:	ldr	x19, [x27, #32]
  42120c:	mov	w0, #0x0                   	// #0
  421210:	str	wzr, [x27, #64]
  421214:	str	x19, [x27, #72]
  421218:	ldp	x19, x20, [sp, #16]
  42121c:	ldp	x21, x22, [sp, #32]
  421220:	ldp	x23, x24, [sp, #48]
  421224:	ldp	x25, x26, [sp, #64]
  421228:	ldr	x27, [sp, #80]
  42122c:	ldp	x29, x30, [sp], #224
  421230:	ret
  421234:	mov	x0, x26
  421238:	bl	404b90 <__uflow@plt>
  42123c:	cmn	w0, #0x1
  421240:	mov	w20, w0
  421244:	cset	w0, ne  // ne = any
  421248:	cmp	w0, #0x0
  42124c:	ccmp	w20, w23, #0x4, ne  // ne = any
  421250:	b.ne	421170 <wcrtomb@plt+0x1c550>  // b.any
  421254:	cmp	x21, #0x0
  421258:	csel	w0, w0, wzr, eq  // eq = none
  42125c:	cset	w23, eq  // eq = none
  421260:	cbnz	w0, 421558 <wcrtomb@plt+0x1c938>
  421264:	ldp	x19, x0, [x27, #32]
  421268:	cmp	x21, x0
  42126c:	b.eq	4213e0 <wcrtomb@plt+0x1c7c0>  // b.none
  421270:	strb	wzr, [x19, x21]
  421274:	mov	x0, x19
  421278:	bl	403ff0 <strlen@plt>
  42127c:	sub	x0, x0, #0x1
  421280:	add	x0, x19, x0
  421284:	cmp	x0, x19
  421288:	b.hi	42129c <wcrtomb@plt+0x1c67c>  // b.pmore
  42128c:	b	4212a8 <wcrtomb@plt+0x1c688>
  421290:	strb	wzr, [x0], #-1
  421294:	cmp	x0, x19
  421298:	b.eq	4212a8 <wcrtomb@plt+0x1c688>  // b.none
  42129c:	ldrb	w1, [x0]
  4212a0:	cmp	w1, #0x2f
  4212a4:	b.eq	421290 <wcrtomb@plt+0x1c670>  // b.none
  4212a8:	cmp	w23, #0x0
  4212ac:	ccmn	w20, #0x1, #0x0, ne  // ne = any
  4212b0:	b.ne	4211e0 <wcrtomb@plt+0x1c5c0>  // b.any
  4212b4:	ldr	x0, [x22, #24]
  4212b8:	ldrb	w1, [x0]
  4212bc:	cmp	w1, #0x2d
  4212c0:	b.ne	421360 <wcrtomb@plt+0x1c740>  // b.any
  4212c4:	ldrb	w0, [x0, #1]
  4212c8:	cbnz	w0, 421360 <wcrtomb@plt+0x1c740>
  4212cc:	str	xzr, [x22, #48]
  4212d0:	bl	420b28 <wcrtomb@plt+0x1bf08>
  4212d4:	mov	w0, #0x1                   	// #1
  4212d8:	ldp	x19, x20, [sp, #16]
  4212dc:	ldp	x21, x22, [sp, #32]
  4212e0:	ldp	x23, x24, [sp, #48]
  4212e4:	ldp	x25, x26, [sp, #64]
  4212e8:	ldr	x27, [sp, #80]
  4212ec:	ldp	x29, x30, [sp], #224
  4212f0:	ret
  4212f4:	cmp	x21, #0x0
  4212f8:	mov	w0, #0x1                   	// #1
  4212fc:	cset	w23, eq  // eq = none
  421300:	csel	w0, w0, wzr, eq  // eq = none
  421304:	b	421260 <wcrtomb@plt+0x1c640>
  421308:	ldr	x20, [x0, #24]
  42130c:	ldrb	w0, [x20]
  421310:	cmp	w0, #0x2d
  421314:	b.eq	42136c <wcrtomb@plt+0x1c74c>  // b.none
  421318:	add	x2, sp, #0x60
  42131c:	mov	x1, x20
  421320:	mov	w0, #0x0                   	// #0
  421324:	bl	404b10 <__xstat@plt>
  421328:	cbnz	w0, 42156c <wcrtomb@plt+0x1c94c>
  42132c:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421330:	ldr	x0, [x24, #2800]
  421334:	cbnz	x0, 421344 <wcrtomb@plt+0x1c724>
  421338:	b	4213f8 <wcrtomb@plt+0x1c7d8>
  42133c:	ldr	x0, [x0]
  421340:	cbz	x0, 4213f8 <wcrtomb@plt+0x1c7d8>
  421344:	ldr	w1, [x0, #16]
  421348:	cmp	w1, #0x2
  42134c:	b.ne	42133c <wcrtomb@plt+0x1c71c>  // b.any
  421350:	ldr	x1, [x0, #48]
  421354:	cbz	x1, 42133c <wcrtomb@plt+0x1c71c>
  421358:	ldr	x21, [x0, #24]
  42135c:	b	421410 <wcrtomb@plt+0x1c7f0>
  421360:	ldr	x0, [x22, #48]
  421364:	bl	4042a0 <fclose@plt>
  421368:	b	4212cc <wcrtomb@plt+0x1c6ac>
  42136c:	ldrb	w0, [x20, #1]
  421370:	cbnz	w0, 421318 <wcrtomb@plt+0x1c6f8>
  421374:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421378:	add	x0, x0, #0x260
  42137c:	bl	42c448 <wcrtomb@plt+0x27828>
  421380:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421384:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421388:	add	x27, x24, #0xaf0
  42138c:	ldr	x26, [x0, #1192]
  421390:	str	x26, [x22, #48]
  421394:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  421398:	ldrb	w1, [x27, #24]
  42139c:	strb	w1, [x22, #44]
  4213a0:	ldrb	w23, [x0, #3888]
  4213a4:	str	w23, [x22, #40]
  4213a8:	b	42110c <wcrtomb@plt+0x1c4ec>
  4213ac:	mov	x1, x2
  4213b0:	b	421118 <wcrtomb@plt+0x1c4f8>
  4213b4:	mov	x0, x26
  4213b8:	bl	404b90 <__uflow@plt>
  4213bc:	cmn	w0, #0x1
  4213c0:	mov	w20, w0
  4213c4:	cset	w0, ne  // ne = any
  4213c8:	cmp	w0, #0x0
  4213cc:	ccmp	w20, w23, #0x4, ne  // ne = any
  4213d0:	b.ne	42113c <wcrtomb@plt+0x1c51c>  // b.any
  4213d4:	mov	w23, #0x1                   	// #1
  4213d8:	mov	x21, #0x0                   	// #0
  4213dc:	b	421260 <wcrtomb@plt+0x1c640>
  4213e0:	mov	x0, x19
  4213e4:	add	x1, x27, #0x28
  4213e8:	bl	450220 <argp_parse@@Base+0x10440>
  4213ec:	mov	x19, x0
  4213f0:	str	x0, [x27, #32]
  4213f4:	b	421270 <wcrtomb@plt+0x1c650>
  4213f8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4213fc:	mov	w2, #0x5                   	// #5
  421400:	add	x1, x1, #0x268
  421404:	mov	x0, #0x0                   	// #0
  421408:	bl	4049c0 <dcgettext@plt>
  42140c:	mov	x21, x0
  421410:	add	x27, x24, #0xaf0
  421414:	ldr	x19, [x27, #16]
  421418:	cbz	x19, 4214d0 <wcrtomb@plt+0x1c8b0>
  42141c:	ldp	x3, x2, [sp, #96]
  421420:	b	42142c <wcrtomb@plt+0x1c80c>
  421424:	ldr	x19, [x19]
  421428:	cbz	x19, 4214d0 <wcrtomb@plt+0x1c8b0>
  42142c:	ldr	x1, [x19, #8]
  421430:	cmp	x1, x2
  421434:	b.ne	421424 <wcrtomb@plt+0x1c804>  // b.any
  421438:	ldr	x1, [x19, #16]
  42143c:	cmp	x1, x3
  421440:	b.ne	421424 <wcrtomb@plt+0x1c804>  // b.any
  421444:	mov	w1, #0x3a                  	// #58
  421448:	mov	w2, #0x1                   	// #1
  42144c:	mov	x0, #0x0                   	// #0
  421450:	bl	44d230 <argp_parse@@Base+0xd450>
  421454:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  421458:	mov	w23, w0
  42145c:	ldr	x0, [x1, #1136]
  421460:	cbz	x0, 421468 <wcrtomb@plt+0x1c848>
  421464:	blr	x0
  421468:	mov	w2, #0x5                   	// #5
  42146c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421470:	mov	x0, #0x0                   	// #0
  421474:	add	x1, x1, #0x278
  421478:	bl	4049c0 <dcgettext@plt>
  42147c:	mov	x22, x0
  421480:	mov	x1, x20
  421484:	mov	w0, #0x0                   	// #0
  421488:	bl	44d5d0 <argp_parse@@Base+0xd7f0>
  42148c:	mov	x3, x0
  421490:	ldr	x5, [x19, #24]
  421494:	mov	x2, x22
  421498:	mov	x4, x21
  42149c:	mov	w1, #0x0                   	// #0
  4214a0:	mov	w0, #0x0                   	// #0
  4214a4:	bl	404050 <error@plt>
  4214a8:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4214ac:	mov	w4, #0x2                   	// #2
  4214b0:	mov	w2, w23
  4214b4:	mov	w1, #0x3a                  	// #58
  4214b8:	str	w4, [x3, #3568]
  4214bc:	mov	x0, #0x0                   	// #0
  4214c0:	bl	44d230 <argp_parse@@Base+0xd450>
  4214c4:	bl	420b28 <wcrtomb@plt+0x1bf08>
  4214c8:	mov	w0, #0x1                   	// #1
  4214cc:	b	421218 <wcrtomb@plt+0x1c5f8>
  4214d0:	mov	x0, #0x20                  	// #32
  4214d4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4214d8:	ldr	q0, [sp, #96]
  4214dc:	mov	x2, x0
  4214e0:	ldr	x3, [x27, #16]
  4214e4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4214e8:	ext	v0.16b, v0.16b, v0.16b, #8
  4214ec:	str	x3, [x2]
  4214f0:	ldr	x0, [x22, #24]
  4214f4:	str	x21, [x2, #24]
  4214f8:	add	x1, x1, #0xc28
  4214fc:	str	x2, [x27, #16]
  421500:	stur	q0, [x2, #8]
  421504:	bl	4042e0 <fopen@plt>
  421508:	str	x0, [x22, #48]
  42150c:	mov	x26, x0
  421510:	cbnz	x0, 421394 <wcrtomb@plt+0x1c774>
  421514:	ldr	x0, [x22, #24]
  421518:	bl	433b88 <wcrtomb@plt+0x2ef68>
  42151c:	ldr	x1, [x24, #2800]
  421520:	mov	w0, #0x1                   	// #1
  421524:	cbz	x1, 421218 <wcrtomb@plt+0x1c5f8>
  421528:	ldr	x1, [x1, #8]
  42152c:	cbz	x1, 421218 <wcrtomb@plt+0x1c5f8>
  421530:	mov	x0, x1
  421534:	ldr	x1, [x1, #8]
  421538:	cbnz	x1, 421530 <wcrtomb@plt+0x1c910>
  42153c:	str	x0, [x24, #2800]
  421540:	mov	w0, #0x1                   	// #1
  421544:	b	421218 <wcrtomb@plt+0x1c5f8>
  421548:	mov	x0, x19
  42154c:	bl	41e978 <wcrtomb@plt+0x19d58>
  421550:	ldr	x19, [x27, #32]
  421554:	b	4211f4 <wcrtomb@plt+0x1c5d4>
  421558:	ldr	x26, [x22, #48]
  42155c:	ldr	w23, [x22, #40]
  421560:	ldr	x0, [x22, #32]
  421564:	ldp	x1, x3, [x26, #8]
  421568:	b	421118 <wcrtomb@plt+0x1c4f8>
  42156c:	mov	x0, x20
  421570:	bl	4343e8 <wcrtomb@plt+0x2f7c8>
  421574:	nop
  421578:	stp	x29, x30, [sp, #-80]!
  42157c:	cmp	w1, #0x1
  421580:	mov	x29, sp
  421584:	stp	x19, x20, [sp, #16]
  421588:	mov	x20, x0
  42158c:	stp	x21, x22, [sp, #32]
  421590:	b.eq	421684 <wcrtomb@plt+0x1ca64>  // b.none
  421594:	cmp	w1, #0x2
  421598:	ldr	x22, [x0]
  42159c:	b.eq	421670 <wcrtomb@plt+0x1ca50>  // b.none
  4215a0:	add	w0, w1, #0x1
  4215a4:	add	w1, w1, w1, lsr #31
  4215a8:	mov	x2, x20
  4215ac:	add	w0, w0, w0, lsr #31
  4215b0:	asr	w19, w1, #1
  4215b4:	asr	w1, w0, #1
  4215b8:	subs	w0, w1, #0x1
  4215bc:	b.ne	42165c <wcrtomb@plt+0x1ca3c>  // b.any
  4215c0:	str	xzr, [x2]
  4215c4:	mov	x0, x20
  4215c8:	bl	421578 <wcrtomb@plt+0x1c958>
  4215cc:	mov	x21, x0
  4215d0:	mov	w1, w19
  4215d4:	mov	x0, x22
  4215d8:	bl	421578 <wcrtomb@plt+0x1c958>
  4215dc:	mov	x20, x0
  4215e0:	cmp	x21, #0x0
  4215e4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4215e8:	b.eq	4216dc <wcrtomb@plt+0x1cabc>  // b.none
  4215ec:	ldr	x22, [x0, #16]
  4215f0:	str	x23, [sp, #48]
  4215f4:	ldr	x23, [x21, #16]
  4215f8:	add	x19, sp, #0x48
  4215fc:	mov	x1, x22
  421600:	mov	x0, x23
  421604:	bl	404710 <strcmp@plt>
  421608:	tbnz	w0, #31, 42163c <wcrtomb@plt+0x1ca1c>
  42160c:	nop
  421610:	ldr	x0, [x20]
  421614:	str	x20, [x19]
  421618:	mov	x2, x20
  42161c:	mov	x20, x0
  421620:	cbz	x0, 42169c <wcrtomb@plt+0x1ca7c>
  421624:	ldr	x22, [x0, #16]
  421628:	mov	x19, x2
  42162c:	mov	x1, x22
  421630:	mov	x0, x23
  421634:	bl	404710 <strcmp@plt>
  421638:	tbz	w0, #31, 421610 <wcrtomb@plt+0x1c9f0>
  42163c:	ldr	x0, [x21]
  421640:	str	x21, [x19]
  421644:	mov	x2, x21
  421648:	mov	x21, x0
  42164c:	cbz	x0, 4216e8 <wcrtomb@plt+0x1cac8>
  421650:	mov	x19, x2
  421654:	ldr	x23, [x0, #16]
  421658:	b	42162c <wcrtomb@plt+0x1ca0c>
  42165c:	mov	x2, x22
  421660:	subs	w0, w0, #0x1
  421664:	ldr	x22, [x22]
  421668:	b.eq	4215c0 <wcrtomb@plt+0x1c9a0>  // b.none
  42166c:	b	42165c <wcrtomb@plt+0x1ca3c>
  421670:	ldr	x0, [x0, #16]
  421674:	ldr	x1, [x22, #16]
  421678:	bl	404710 <strcmp@plt>
  42167c:	cmp	w0, #0x0
  421680:	b.gt	4216c0 <wcrtomb@plt+0x1caa0>
  421684:	mov	x22, x20
  421688:	mov	x0, x22
  42168c:	ldp	x19, x20, [sp, #16]
  421690:	ldp	x21, x22, [sp, #32]
  421694:	ldp	x29, x30, [sp], #80
  421698:	ret
  42169c:	ldr	x23, [sp, #48]
  4216a0:	mov	x20, x21
  4216a4:	str	x20, [x2]
  4216a8:	ldp	x19, x20, [sp, #16]
  4216ac:	ldr	x22, [sp, #72]
  4216b0:	mov	x0, x22
  4216b4:	ldp	x21, x22, [sp, #32]
  4216b8:	ldp	x29, x30, [sp], #80
  4216bc:	ret
  4216c0:	str	x20, [x22]
  4216c4:	mov	x0, x22
  4216c8:	str	xzr, [x20]
  4216cc:	ldp	x19, x20, [sp, #16]
  4216d0:	ldp	x21, x22, [sp, #32]
  4216d4:	ldp	x29, x30, [sp], #80
  4216d8:	ret
  4216dc:	add	x2, sp, #0x48
  4216e0:	cbnz	x21, 4216a0 <wcrtomb@plt+0x1ca80>
  4216e4:	b	4216a4 <wcrtomb@plt+0x1ca84>
  4216e8:	ldr	x23, [sp, #48]
  4216ec:	b	4216a4 <wcrtomb@plt+0x1ca84>
  4216f0:	stp	x29, x30, [sp, #-48]!
  4216f4:	mov	x29, sp
  4216f8:	stp	x19, x20, [sp, #16]
  4216fc:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421700:	add	x20, x20, #0xaf0
  421704:	str	x21, [sp, #32]
  421708:	mov	x21, x0
  42170c:	bl	403ff0 <strlen@plt>
  421710:	ldr	x1, [x20, #40]
  421714:	cmp	x0, x1
  421718:	b.ls	421794 <wcrtomb@plt+0x1cb74>  // b.plast
  42171c:	nop
  421720:	lsl	x1, x1, #1
  421724:	cbz	x1, 42179c <wcrtomb@plt+0x1cb7c>
  421728:	cmp	x0, x1
  42172c:	b.hi	421720 <wcrtomb@plt+0x1cb00>  // b.pmore
  421730:	ldr	x0, [x20, #32]
  421734:	str	x1, [x20, #40]
  421738:	bl	4047b0 <free@plt>
  42173c:	ldr	x0, [x20, #40]
  421740:	add	x0, x0, #0x2
  421744:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421748:	mov	x19, x0
  42174c:	str	x0, [x20, #32]
  421750:	mov	x1, x21
  421754:	mov	x0, x19
  421758:	bl	404220 <stpcpy@plt>
  42175c:	sub	x1, x0, #0x1
  421760:	cmp	x1, x19
  421764:	b.hi	421778 <wcrtomb@plt+0x1cb58>  // b.pmore
  421768:	b	421784 <wcrtomb@plt+0x1cb64>
  42176c:	strb	wzr, [x1], #-1
  421770:	cmp	x1, x19
  421774:	b.eq	421784 <wcrtomb@plt+0x1cb64>  // b.none
  421778:	ldrb	w2, [x1]
  42177c:	cmp	w2, #0x2f
  421780:	b.eq	42176c <wcrtomb@plt+0x1cb4c>  // b.none
  421784:	ldp	x19, x20, [sp, #16]
  421788:	ldr	x21, [sp, #32]
  42178c:	ldp	x29, x30, [sp], #48
  421790:	ret
  421794:	ldr	x19, [x20, #32]
  421798:	b	421750 <wcrtomb@plt+0x1cb30>
  42179c:	str	xzr, [x20, #40]
  4217a0:	bl	4104a0 <wcrtomb@plt+0xb880>
  4217a4:	nop
  4217a8:	stp	x29, x30, [sp, #-48]!
  4217ac:	mov	x29, sp
  4217b0:	stp	x19, x20, [sp, #16]
  4217b4:	mov	x20, x1
  4217b8:	sub	w1, w0, #0x58
  4217bc:	cmp	w1, #0xc4
  4217c0:	b.ls	4217f8 <wcrtomb@plt+0x1cbd8>  // b.plast
  4217c4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4217c8:	ldr	x1, [x1, #1136]
  4217cc:	cbz	x1, 4217dc <wcrtomb@plt+0x1cbbc>
  4217d0:	str	w0, [sp, #44]
  4217d4:	blr	x1
  4217d8:	ldr	w0, [sp, #44]
  4217dc:	mov	w3, w0
  4217e0:	adrp	x2, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4217e4:	add	x2, x2, #0x2f0
  4217e8:	mov	w1, #0x0                   	// #0
  4217ec:	mov	w0, #0x0                   	// #0
  4217f0:	bl	404050 <error@plt>
  4217f4:	bl	410460 <wcrtomb@plt+0xb840>
  4217f8:	adrp	x3, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4217fc:	add	x3, x3, #0xdb0
  421800:	ldrh	w1, [x3, w1, uxtw #1]
  421804:	adr	x2, 421810 <wcrtomb@plt+0x1cbf0>
  421808:	add	x1, x2, w1, sxth #2
  42180c:	br	x1
  421810:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421814:	mov	w1, #0x2                   	// #2
  421818:	str	w1, [x0, #2808]
  42181c:	ldp	x19, x20, [sp, #16]
  421820:	ldp	x29, x30, [sp], #48
  421824:	ret
  421828:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42182c:	add	x0, x0, #0xaf0
  421830:	ldr	w1, [x0, #104]
  421834:	and	w1, w1, #0xfffffffe
  421838:	str	w1, [x0, #104]
  42183c:	b	42181c <wcrtomb@plt+0x1cbfc>
  421840:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421844:	mov	w1, #0x1                   	// #1
  421848:	strb	w1, [x0, #2824]
  42184c:	b	42181c <wcrtomb@plt+0x1cbfc>
  421850:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  421854:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421858:	mov	w2, #0xa                   	// #10
  42185c:	strb	wzr, [x1, #2824]
  421860:	strb	w2, [x0, #3888]
  421864:	b	42181c <wcrtomb@plt+0x1cbfc>
  421868:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  42186c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421870:	mov	w2, #0x1                   	// #1
  421874:	strb	wzr, [x1, #3888]
  421878:	strb	w2, [x0, #2824]
  42187c:	b	42181c <wcrtomb@plt+0x1cbfc>
  421880:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421884:	mov	w1, #0x1                   	// #1
  421888:	str	w1, [x0, #2808]
  42188c:	b	42181c <wcrtomb@plt+0x1cbfc>
  421890:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421894:	add	x0, x0, #0xaf0
  421898:	ldr	w1, [x0, #104]
  42189c:	orr	w1, w1, #0x1
  4218a0:	str	w1, [x0, #104]
  4218a4:	b	42181c <wcrtomb@plt+0x1cbfc>
  4218a8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4218ac:	strb	wzr, [x0, #2824]
  4218b0:	b	42181c <wcrtomb@plt+0x1cbfc>
  4218b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4218b8:	strb	wzr, [x0, #884]
  4218bc:	b	42181c <wcrtomb@plt+0x1cbfc>
  4218c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4218c4:	mov	w1, #0x1                   	// #1
  4218c8:	strb	w1, [x0, #884]
  4218cc:	b	42181c <wcrtomb@plt+0x1cbfc>
  4218d0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4218d4:	str	wzr, [x0, #804]
  4218d8:	b	42181c <wcrtomb@plt+0x1cbfc>
  4218dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4218e0:	mov	w1, #0x8                   	// #8
  4218e4:	str	w1, [x0, #804]
  4218e8:	b	42181c <wcrtomb@plt+0x1cbfc>
  4218ec:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4218f0:	add	x0, x0, #0xaf0
  4218f4:	adrp	x2, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4218f8:	ldr	w1, [x0, #104]
  4218fc:	str	wzr, [x2, #3892]
  421900:	and	w1, w1, #0xbfffffff
  421904:	str	w1, [x0, #104]
  421908:	b	42181c <wcrtomb@plt+0x1cbfc>
  42190c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421910:	add	x0, x0, #0xaf0
  421914:	ldr	w1, [x0, #104]
  421918:	orr	w1, w1, #0x40000000
  42191c:	str	w1, [x0, #104]
  421920:	b	42181c <wcrtomb@plt+0x1cbfc>
  421924:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421928:	add	x0, x0, #0xaf0
  42192c:	ldr	w1, [x0, #104]
  421930:	and	w1, w1, #0xffffffef
  421934:	str	w1, [x0, #104]
  421938:	b	42181c <wcrtomb@plt+0x1cbfc>
  42193c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421940:	add	x0, x0, #0xaf0
  421944:	ldr	w1, [x0, #104]
  421948:	orr	w1, w1, #0x10
  42194c:	str	w1, [x0, #104]
  421950:	b	42181c <wcrtomb@plt+0x1cbfc>
  421954:	ldp	x19, x20, [sp, #16]
  421958:	ldp	x29, x30, [sp], #48
  42195c:	b	410cc0 <wcrtomb@plt+0xc0a0>
  421960:	mov	x0, x20
  421964:	mov	x2, #0x0                   	// #0
  421968:	ldp	x19, x20, [sp, #16]
  42196c:	mov	w1, #0x3                   	// #3
  421970:	ldp	x29, x30, [sp], #48
  421974:	b	40c048 <wcrtomb@plt+0x7428>
  421978:	mov	x0, x20
  42197c:	mov	x2, #0x0                   	// #0
  421980:	ldp	x19, x20, [sp, #16]
  421984:	mov	w1, #0x2                   	// #2
  421988:	ldp	x29, x30, [sp], #48
  42198c:	b	40c048 <wcrtomb@plt+0x7428>
  421990:	mov	x0, x20
  421994:	mov	x2, #0x0                   	// #0
  421998:	ldp	x19, x20, [sp, #16]
  42199c:	mov	w1, #0x1                   	// #1
  4219a0:	ldp	x29, x30, [sp], #48
  4219a4:	b	40c048 <wcrtomb@plt+0x7428>
  4219a8:	mov	x0, x20
  4219ac:	mov	w1, #0x1                   	// #1
  4219b0:	ldp	x19, x20, [sp, #16]
  4219b4:	ldp	x29, x30, [sp], #48
  4219b8:	b	4108b0 <wcrtomb@plt+0xbc90>
  4219bc:	mov	x0, x20
  4219c0:	mov	w1, #0x2                   	// #2
  4219c4:	ldp	x19, x20, [sp, #16]
  4219c8:	ldp	x29, x30, [sp], #48
  4219cc:	b	4108b0 <wcrtomb@plt+0xbc90>
  4219d0:	adrp	x5, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4219d4:	add	x5, x5, #0xaf0
  4219d8:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4219dc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4219e0:	mov	x1, x20
  4219e4:	ldr	w2, [x5, #8]
  4219e8:	ldr	w4, [x3, #804]
  4219ec:	cmp	w2, #0x1
  4219f0:	ldr	w2, [x5, #104]
  4219f4:	ldr	x0, [x0, #192]
  4219f8:	cset	w3, ne  // ne = any
  4219fc:	ldp	x19, x20, [sp, #16]
  421a00:	orr	w2, w2, w4
  421a04:	ldp	x29, x30, [sp], #48
  421a08:	orr	w2, w2, w3, lsl #28
  421a0c:	b	442230 <argp_parse@@Base+0x2450>
  421a10:	adrp	x2, 40c000 <wcrtomb@plt+0x73e0>
  421a14:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421a18:	add	x2, x2, #0x160
  421a1c:	add	x0, x0, #0x870
  421a20:	b	421968 <wcrtomb@plt+0x1cd48>
  421a24:	adrp	x2, 40c000 <wcrtomb@plt+0x73e0>
  421a28:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421a2c:	add	x2, x2, #0x160
  421a30:	add	x0, x0, #0x870
  421a34:	b	421980 <wcrtomb@plt+0x1cd60>
  421a38:	adrp	x2, 40c000 <wcrtomb@plt+0x73e0>
  421a3c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421a40:	add	x2, x2, #0x160
  421a44:	add	x0, x0, #0x870
  421a48:	b	421998 <wcrtomb@plt+0x1cd78>
  421a4c:	adrp	x5, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421a50:	add	x5, x5, #0xaf0
  421a54:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  421a58:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  421a5c:	adrp	x0, 442000 <argp_parse@@Base+0x2220>
  421a60:	mov	x2, x20
  421a64:	ldr	w6, [x5, #8]
  421a68:	add	x0, x0, #0x230
  421a6c:	ldr	w7, [x3, #804]
  421a70:	mov	w4, #0xa                   	// #10
  421a74:	cmp	w6, #0x1
  421a78:	ldr	w3, [x5, #104]
  421a7c:	ldr	x1, [x1, #192]
  421a80:	cset	w6, ne  // ne = any
  421a84:	orr	w3, w3, w7
  421a88:	orr	w3, w3, w6, lsl #28
  421a8c:	bl	442750 <argp_parse@@Base+0x2970>
  421a90:	cbz	w0, 42181c <wcrtomb@plt+0x1cbfc>
  421a94:	bl	404ad0 <__errno_location@plt>
  421a98:	ldr	w19, [x0]
  421a9c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  421aa0:	ldr	x1, [x1, #1136]
  421aa4:	cbz	x1, 421aac <wcrtomb@plt+0x1ce8c>
  421aa8:	blr	x1
  421aac:	mov	x0, x20
  421ab0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  421ab4:	mov	w1, w19
  421ab8:	mov	x3, x0
  421abc:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  421ac0:	add	x2, x2, #0x828
  421ac4:	mov	w0, #0x0                   	// #0
  421ac8:	bl	404050 <error@plt>
  421acc:	bl	410460 <wcrtomb@plt+0xb840>
  421ad0:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421ad4:	add	x20, x20, #0xf40
  421ad8:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421adc:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  421ae0:	add	x20, x20, #0x20
  421ae4:	add	x1, x1, #0x2e8
  421ae8:	add	x19, x19, #0xc0
  421aec:	nop
  421af0:	ldr	x0, [x19]
  421af4:	mov	w2, #0x0                   	// #0
  421af8:	bl	442230 <argp_parse@@Base+0x2450>
  421afc:	ldr	x1, [x20, #8]!
  421b00:	cbnz	x1, 421af0 <wcrtomb@plt+0x1ced0>
  421b04:	b	42181c <wcrtomb@plt+0x1cbfc>
  421b08:	adrp	x20, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421b0c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  421b10:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  421b14:	add	x20, x20, #0xf40
  421b18:	add	x1, x1, #0x2e0
  421b1c:	add	x19, x19, #0xc0
  421b20:	ldr	x0, [x19]
  421b24:	mov	w2, #0x10000000            	// #268435456
  421b28:	bl	442230 <argp_parse@@Base+0x2450>
  421b2c:	ldr	x1, [x20, #8]!
  421b30:	cbnz	x1, 421b20 <wcrtomb@plt+0x1cf00>
  421b34:	b	42181c <wcrtomb@plt+0x1cbfc>
  421b38:	stp	x29, x30, [sp, #-48]!
  421b3c:	mov	x29, sp
  421b40:	stp	x19, x20, [sp, #16]
  421b44:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421b48:	add	x20, x20, #0xaf0
  421b4c:	str	x21, [sp, #32]
  421b50:	mov	w21, w0
  421b54:	ldr	x19, [x20]
  421b58:	cbz	x19, 421b90 <wcrtomb@plt+0x1cf70>
  421b5c:	ldr	w1, [x19, #16]
  421b60:	cmp	w1, #0x2
  421b64:	b.eq	421c00 <wcrtomb@plt+0x1cfe0>  // b.none
  421b68:	b.hi	421b98 <wcrtomb@plt+0x1cf78>  // b.pmore
  421b6c:	cbz	w1, 421bbc <wcrtomb@plt+0x1cf9c>
  421b70:	ldr	x0, [x19, #24]
  421b74:	cbz	w21, 421bc0 <wcrtomb@plt+0x1cfa0>
  421b78:	bl	450328 <argp_parse@@Base+0x10548>
  421b7c:	bl	41fd68 <wcrtomb@plt+0x1b148>
  421b80:	bl	420060 <wcrtomb@plt+0x1b440>
  421b84:	bl	420b28 <wcrtomb@plt+0x1bf08>
  421b88:	ldr	x19, [x20]
  421b8c:	cbnz	x19, 421b5c <wcrtomb@plt+0x1cf3c>
  421b90:	bl	420bd8 <wcrtomb@plt+0x1bfb8>
  421b94:	b	421bec <wcrtomb@plt+0x1cfcc>
  421b98:	cmp	w1, #0x3
  421b9c:	b.eq	421bb4 <wcrtomb@plt+0x1cf94>  // b.none
  421ba0:	cmp	w1, #0x4
  421ba4:	b.ne	421b60 <wcrtomb@plt+0x1cf40>  // b.any
  421ba8:	ldr	w0, [x19, #24]
  421bac:	ldr	x1, [x19, #32]
  421bb0:	bl	4217a8 <wcrtomb@plt+0x1cb88>
  421bb4:	bl	420b28 <wcrtomb@plt+0x1bf08>
  421bb8:	b	421b54 <wcrtomb@plt+0x1cf34>
  421bbc:	ldr	x0, [x19, #24]
  421bc0:	bl	4216f0 <wcrtomb@plt+0x1cad0>
  421bc4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  421bc8:	ldrb	w0, [x0, #884]
  421bcc:	cbnz	w0, 421c24 <wcrtomb@plt+0x1d004>
  421bd0:	ldr	w2, [x19, #16]
  421bd4:	add	x0, x20, #0x30
  421bd8:	ldr	x1, [x20, #32]
  421bdc:	mov	x19, x0
  421be0:	str	w2, [x20, #64]
  421be4:	str	x1, [x20, #72]
  421be8:	bl	420b28 <wcrtomb@plt+0x1bf08>
  421bec:	mov	x0, x19
  421bf0:	ldp	x19, x20, [sp, #16]
  421bf4:	ldr	x21, [sp, #32]
  421bf8:	ldp	x29, x30, [sp], #48
  421bfc:	ret
  421c00:	mov	x0, x19
  421c04:	bl	4210d8 <wcrtomb@plt+0x1c4b8>
  421c08:	cbnz	w0, 421b54 <wcrtomb@plt+0x1cf34>
  421c0c:	add	x19, x20, #0x30
  421c10:	mov	x0, x19
  421c14:	ldp	x19, x20, [sp, #16]
  421c18:	ldr	x21, [sp, #32]
  421c1c:	ldp	x29, x30, [sp], #48
  421c20:	ret
  421c24:	ldr	x0, [x20, #32]
  421c28:	bl	41e978 <wcrtomb@plt+0x19d58>
  421c2c:	b	421bd0 <wcrtomb@plt+0x1cfb0>
  421c30:	stp	x29, x30, [sp, #-32]!
  421c34:	mov	x29, sp
  421c38:	stp	x19, x20, [sp, #16]
  421c3c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421c40:	add	x20, x20, #0xaf0
  421c44:	ldr	x19, [x20]
  421c48:	cbz	x19, 421cec <wcrtomb@plt+0x1d0cc>
  421c4c:	ldr	w0, [x19, #16]
  421c50:	cmp	w0, #0x2
  421c54:	b.eq	421cc0 <wcrtomb@plt+0x1d0a0>  // b.none
  421c58:	b.hi	421c9c <wcrtomb@plt+0x1d07c>  // b.pmore
  421c5c:	ldr	x0, [x19, #24]
  421c60:	bl	4216f0 <wcrtomb@plt+0x1cad0>
  421c64:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  421c68:	ldrb	w0, [x0, #884]
  421c6c:	cbnz	w0, 421ce0 <wcrtomb@plt+0x1d0c0>
  421c70:	ldr	w2, [x19, #16]
  421c74:	add	x0, x20, #0x30
  421c78:	ldr	x1, [x20, #32]
  421c7c:	mov	x19, x0
  421c80:	str	w2, [x20, #64]
  421c84:	str	x1, [x20, #72]
  421c88:	bl	420b28 <wcrtomb@plt+0x1bf08>
  421c8c:	mov	x0, x19
  421c90:	ldp	x19, x20, [sp, #16]
  421c94:	ldp	x29, x30, [sp], #32
  421c98:	ret
  421c9c:	cmp	w0, #0x3
  421ca0:	b.eq	421cb8 <wcrtomb@plt+0x1d098>  // b.none
  421ca4:	cmp	w0, #0x4
  421ca8:	b.ne	421c50 <wcrtomb@plt+0x1d030>  // b.any
  421cac:	ldr	w0, [x19, #24]
  421cb0:	ldr	x1, [x19, #32]
  421cb4:	bl	4217a8 <wcrtomb@plt+0x1cb88>
  421cb8:	bl	420b28 <wcrtomb@plt+0x1bf08>
  421cbc:	b	421c44 <wcrtomb@plt+0x1d024>
  421cc0:	mov	x0, x19
  421cc4:	bl	4210d8 <wcrtomb@plt+0x1c4b8>
  421cc8:	cbnz	w0, 421c44 <wcrtomb@plt+0x1d024>
  421ccc:	add	x19, x20, #0x30
  421cd0:	mov	x0, x19
  421cd4:	ldp	x19, x20, [sp, #16]
  421cd8:	ldp	x29, x30, [sp], #32
  421cdc:	ret
  421ce0:	ldr	x0, [x20, #32]
  421ce4:	bl	41e978 <wcrtomb@plt+0x19d58>
  421ce8:	b	421c70 <wcrtomb@plt+0x1d050>
  421cec:	bl	420bd8 <wcrtomb@plt+0x1bfb8>
  421cf0:	b	421c8c <wcrtomb@plt+0x1d06c>
  421cf4:	nop
  421cf8:	stp	x29, x30, [sp, #-48]!
  421cfc:	cmp	w0, #0x54
  421d00:	mov	x29, sp
  421d04:	stp	x19, x20, [sp, #16]
  421d08:	mov	x20, x1
  421d0c:	b.eq	421dfc <wcrtomb@plt+0x1d1dc>  // b.none
  421d10:	cmp	w0, #0x100
  421d14:	b.eq	421da4 <wcrtomb@plt+0x1d184>  // b.none
  421d18:	adrp	x2, 493000 <_obstack_memory_used@@Base+0x41bf0>
  421d1c:	cmp	w0, #0x43
  421d20:	add	x2, x2, #0x8a0
  421d24:	b.ne	421d38 <wcrtomb@plt+0x1d118>  // b.any
  421d28:	b	421d58 <wcrtomb@plt+0x1d138>
  421d2c:	add	x2, x2, #0x30
  421d30:	cmp	w0, w19
  421d34:	b.eq	421e5c <wcrtomb@plt+0x1d23c>  // b.none
  421d38:	ldr	x3, [x2]
  421d3c:	ldr	w19, [x2, #8]
  421d40:	cbnz	x3, 421d2c <wcrtomb@plt+0x1d10c>
  421d44:	cbnz	w19, 421d2c <wcrtomb@plt+0x1d10c>
  421d48:	ldr	x1, [x2, #32]
  421d4c:	cbnz	x1, 421d2c <wcrtomb@plt+0x1d10c>
  421d50:	mov	w0, #0x7                   	// #7
  421d54:	b	421d98 <wcrtomb@plt+0x1d178>
  421d58:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421d5c:	mov	x0, #0x38                  	// #56
  421d60:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421d64:	mov	x1, x0
  421d68:	ldr	x2, [x19, #2800]
  421d6c:	cbz	x2, 421ed8 <wcrtomb@plt+0x1d2b8>
  421d70:	ldr	x0, [x2, #8]
  421d74:	str	x0, [x1, #8]
  421d78:	cbz	x0, 421d80 <wcrtomb@plt+0x1d160>
  421d7c:	str	x1, [x0]
  421d80:	str	x2, [x1]
  421d84:	mov	w3, #0x1                   	// #1
  421d88:	str	x1, [x2, #8]
  421d8c:	mov	w0, #0x0                   	// #0
  421d90:	str	w3, [x1, #16]
  421d94:	str	x20, [x1, #24]
  421d98:	ldp	x19, x20, [sp, #16]
  421d9c:	ldp	x29, x30, [sp], #48
  421da0:	ret
  421da4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421da8:	mov	x0, #0x38                  	// #56
  421dac:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421db0:	mov	x1, x0
  421db4:	ldr	x2, [x19, #2800]
  421db8:	cbz	x2, 421efc <wcrtomb@plt+0x1d2dc>
  421dbc:	ldr	x0, [x2, #8]
  421dc0:	str	x0, [x1, #8]
  421dc4:	cbz	x0, 421dcc <wcrtomb@plt+0x1d1ac>
  421dc8:	str	x1, [x0]
  421dcc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  421dd0:	str	x2, [x1]
  421dd4:	str	x1, [x2, #8]
  421dd8:	mov	w0, #0x0                   	// #0
  421ddc:	ldr	x2, [x3, #136]
  421de0:	str	wzr, [x1, #16]
  421de4:	str	x20, [x1, #24]
  421de8:	add	x1, x2, #0x1
  421dec:	str	x1, [x3, #136]
  421df0:	ldp	x19, x20, [sp, #16]
  421df4:	ldp	x29, x30, [sp], #48
  421df8:	ret
  421dfc:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421e00:	mov	x0, #0x38                  	// #56
  421e04:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421e08:	mov	x1, x0
  421e0c:	ldr	x2, [x19, #2800]
  421e10:	cbz	x2, 421f20 <wcrtomb@plt+0x1d300>
  421e14:	ldr	x0, [x2, #8]
  421e18:	str	x0, [x1, #8]
  421e1c:	cbz	x0, 421e24 <wcrtomb@plt+0x1d204>
  421e20:	str	x1, [x0]
  421e24:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  421e28:	str	x2, [x1]
  421e2c:	str	x1, [x2, #8]
  421e30:	mov	w4, #0x2                   	// #2
  421e34:	ldr	x2, [x3, #136]
  421e38:	str	w4, [x1, #16]
  421e3c:	stp	x20, xzr, [x1, #24]
  421e40:	mov	w0, #0x0                   	// #0
  421e44:	add	x2, x2, #0x1
  421e48:	str	xzr, [x1, #48]
  421e4c:	str	x2, [x3, #136]
  421e50:	ldp	x19, x20, [sp, #16]
  421e54:	ldp	x29, x30, [sp], #48
  421e58:	ret
  421e5c:	str	x21, [sp, #32]
  421e60:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421e64:	mov	x0, #0x38                  	// #56
  421e68:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421e6c:	ldr	x2, [x21, #2800]
  421e70:	mov	x1, x0
  421e74:	cbz	x2, 421eb4 <wcrtomb@plt+0x1d294>
  421e78:	ldr	x0, [x2, #8]
  421e7c:	str	x0, [x1, #8]
  421e80:	cbz	x0, 421e88 <wcrtomb@plt+0x1d268>
  421e84:	str	x1, [x0]
  421e88:	ldr	x21, [sp, #32]
  421e8c:	str	x2, [x1]
  421e90:	str	x1, [x2, #8]
  421e94:	mov	w3, #0x4                   	// #4
  421e98:	str	w3, [x1, #16]
  421e9c:	mov	w0, #0x0                   	// #0
  421ea0:	str	w19, [x1, #24]
  421ea4:	str	x20, [x1, #32]
  421ea8:	ldp	x19, x20, [sp, #16]
  421eac:	ldp	x29, x30, [sp], #48
  421eb0:	ret
  421eb4:	mov	w0, #0x3                   	// #3
  421eb8:	stp	xzr, xzr, [x1]
  421ebc:	str	w0, [x1, #16]
  421ec0:	mov	x0, #0x38                  	// #56
  421ec4:	str	x1, [x21, #2800]
  421ec8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421ecc:	mov	x1, x0
  421ed0:	ldr	x2, [x21, #2800]
  421ed4:	b	421e78 <wcrtomb@plt+0x1d258>
  421ed8:	stp	xzr, xzr, [x0]
  421edc:	mov	w0, #0x3                   	// #3
  421ee0:	str	w0, [x1, #16]
  421ee4:	mov	x0, #0x38                  	// #56
  421ee8:	str	x1, [x19, #2800]
  421eec:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421ef0:	mov	x1, x0
  421ef4:	ldr	x2, [x19, #2800]
  421ef8:	b	421d70 <wcrtomb@plt+0x1d150>
  421efc:	stp	xzr, xzr, [x0]
  421f00:	mov	w0, #0x3                   	// #3
  421f04:	str	w0, [x1, #16]
  421f08:	mov	x0, #0x38                  	// #56
  421f0c:	str	x1, [x19, #2800]
  421f10:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421f14:	mov	x1, x0
  421f18:	ldr	x2, [x19, #2800]
  421f1c:	b	421dbc <wcrtomb@plt+0x1d19c>
  421f20:	stp	xzr, xzr, [x0]
  421f24:	mov	w0, #0x3                   	// #3
  421f28:	str	w0, [x1, #16]
  421f2c:	mov	x0, #0x38                  	// #56
  421f30:	str	x1, [x19, #2800]
  421f34:	bl	4501a0 <argp_parse@@Base+0x103c0>
  421f38:	mov	x1, x0
  421f3c:	ldr	x2, [x19, #2800]
  421f40:	b	421e14 <wcrtomb@plt+0x1d1f4>
  421f44:	nop
  421f48:	stp	x29, x30, [sp, #-48]!
  421f4c:	mov	x29, sp
  421f50:	stp	x19, x20, [sp, #16]
  421f54:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  421f58:	mov	w20, w0
  421f5c:	str	x21, [sp, #32]
  421f60:	add	x19, x19, #0xaf0
  421f64:	mov	x21, x1
  421f68:	cbz	w0, 421f78 <wcrtomb@plt+0x1d358>
  421f6c:	ldr	w0, [x19, #108]
  421f70:	cmp	w0, w20
  421f74:	b.eq	421fc4 <wcrtomb@plt+0x1d3a4>  // b.none
  421f78:	ldr	x0, [x19, #112]
  421f7c:	cbz	x0, 421f8c <wcrtomb@plt+0x1d36c>
  421f80:	ldr	w1, [x19, #120]
  421f84:	cmp	w1, w20
  421f88:	b.eq	421fac <wcrtomb@plt+0x1d38c>  // b.none
  421f8c:	mov	w0, w20
  421f90:	bl	404720 <getpwuid@plt>
  421f94:	cbz	x0, 421fd8 <wcrtomb@plt+0x1d3b8>
  421f98:	ldr	x1, [x0]
  421f9c:	add	x0, x19, #0x70
  421fa0:	str	w20, [x19, #120]
  421fa4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  421fa8:	ldr	x0, [x19, #112]
  421fac:	bl	450328 <argp_parse@@Base+0x10548>
  421fb0:	str	x0, [x21]
  421fb4:	ldp	x19, x20, [sp, #16]
  421fb8:	ldr	x21, [sp, #32]
  421fbc:	ldp	x29, x30, [sp], #48
  421fc0:	ret
  421fc4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  421fc8:	add	x0, x0, #0x7e8
  421fcc:	bl	450328 <argp_parse@@Base+0x10548>
  421fd0:	str	x0, [x21]
  421fd4:	b	421fb4 <wcrtomb@plt+0x1d394>
  421fd8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  421fdc:	add	x0, x0, #0x7e8
  421fe0:	str	w20, [x19, #108]
  421fe4:	bl	450328 <argp_parse@@Base+0x10548>
  421fe8:	str	x0, [x21]
  421fec:	ldp	x19, x20, [sp, #16]
  421ff0:	ldr	x21, [sp, #32]
  421ff4:	ldp	x29, x30, [sp], #48
  421ff8:	ret
  421ffc:	nop
  422000:	stp	x29, x30, [sp, #-48]!
  422004:	mov	x29, sp
  422008:	stp	x19, x20, [sp, #16]
  42200c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422010:	mov	w20, w0
  422014:	str	x21, [sp, #32]
  422018:	add	x19, x19, #0xaf0
  42201c:	mov	x21, x1
  422020:	cbz	w0, 422030 <wcrtomb@plt+0x1d410>
  422024:	ldr	w0, [x19, #124]
  422028:	cmp	w0, w20
  42202c:	b.eq	42207c <wcrtomb@plt+0x1d45c>  // b.none
  422030:	ldr	x0, [x19, #128]
  422034:	cbz	x0, 422044 <wcrtomb@plt+0x1d424>
  422038:	ldr	w1, [x19, #136]
  42203c:	cmp	w1, w20
  422040:	b.eq	422064 <wcrtomb@plt+0x1d444>  // b.none
  422044:	mov	w0, w20
  422048:	bl	404b20 <getgrgid@plt>
  42204c:	cbz	x0, 422090 <wcrtomb@plt+0x1d470>
  422050:	ldr	x1, [x0]
  422054:	add	x0, x19, #0x80
  422058:	str	w20, [x19, #136]
  42205c:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  422060:	ldr	x0, [x19, #128]
  422064:	bl	450328 <argp_parse@@Base+0x10548>
  422068:	str	x0, [x21]
  42206c:	ldp	x19, x20, [sp, #16]
  422070:	ldr	x21, [sp, #32]
  422074:	ldp	x29, x30, [sp], #48
  422078:	ret
  42207c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  422080:	add	x0, x0, #0x7e8
  422084:	bl	450328 <argp_parse@@Base+0x10548>
  422088:	str	x0, [x21]
  42208c:	b	42206c <wcrtomb@plt+0x1d44c>
  422090:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  422094:	add	x0, x0, #0x7e8
  422098:	str	w20, [x19, #124]
  42209c:	bl	450328 <argp_parse@@Base+0x10548>
  4220a0:	str	x0, [x21]
  4220a4:	ldp	x19, x20, [sp, #16]
  4220a8:	ldr	x21, [sp, #32]
  4220ac:	ldp	x29, x30, [sp], #48
  4220b0:	ret
  4220b4:	nop
  4220b8:	stp	x29, x30, [sp, #-48]!
  4220bc:	mov	x29, sp
  4220c0:	stp	x19, x20, [sp, #16]
  4220c4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4220c8:	add	x19, x19, #0xaf0
  4220cc:	str	x21, [sp, #32]
  4220d0:	mov	x21, x1
  4220d4:	mov	x20, x0
  4220d8:	ldr	x1, [x19, #144]
  4220dc:	cbz	x1, 4220e8 <wcrtomb@plt+0x1d4c8>
  4220e0:	bl	404710 <strcmp@plt>
  4220e4:	cbz	w0, 422130 <wcrtomb@plt+0x1d510>
  4220e8:	ldr	x1, [x19, #112]
  4220ec:	cbz	x1, 422100 <wcrtomb@plt+0x1d4e0>
  4220f0:	ldrb	w2, [x20]
  4220f4:	ldrb	w0, [x1]
  4220f8:	cmp	w2, w0
  4220fc:	b.eq	422140 <wcrtomb@plt+0x1d520>  // b.none
  422100:	mov	x0, x20
  422104:	bl	404440 <getpwnam@plt>
  422108:	mov	x2, x0
  42210c:	cbz	x0, 42215c <wcrtomb@plt+0x1d53c>
  422110:	ldr	x1, [x2]
  422114:	add	x0, x19, #0x70
  422118:	ldr	w2, [x2, #16]
  42211c:	str	w2, [x19, #120]
  422120:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  422124:	ldr	w1, [x19, #120]
  422128:	mov	w0, #0x1                   	// #1
  42212c:	str	w1, [x21]
  422130:	ldp	x19, x20, [sp, #16]
  422134:	ldr	x21, [sp, #32]
  422138:	ldp	x29, x30, [sp], #48
  42213c:	ret
  422140:	mov	x0, x20
  422144:	bl	404710 <strcmp@plt>
  422148:	cbz	w0, 422124 <wcrtomb@plt+0x1d504>
  42214c:	mov	x0, x20
  422150:	bl	404440 <getpwnam@plt>
  422154:	mov	x2, x0
  422158:	cbnz	x0, 422110 <wcrtomb@plt+0x1d4f0>
  42215c:	mov	x1, x20
  422160:	add	x0, x19, #0x90
  422164:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  422168:	mov	w0, #0x0                   	// #0
  42216c:	ldp	x19, x20, [sp, #16]
  422170:	ldr	x21, [sp, #32]
  422174:	ldp	x29, x30, [sp], #48
  422178:	ret
  42217c:	nop
  422180:	stp	x29, x30, [sp, #-48]!
  422184:	mov	x29, sp
  422188:	stp	x19, x20, [sp, #16]
  42218c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422190:	add	x19, x19, #0xaf0
  422194:	str	x21, [sp, #32]
  422198:	mov	x21, x1
  42219c:	mov	x20, x0
  4221a0:	ldr	x1, [x19, #152]
  4221a4:	cbz	x1, 4221b0 <wcrtomb@plt+0x1d590>
  4221a8:	bl	404710 <strcmp@plt>
  4221ac:	cbz	w0, 4221f4 <wcrtomb@plt+0x1d5d4>
  4221b0:	ldr	x1, [x19, #128]
  4221b4:	cbz	x1, 4221c8 <wcrtomb@plt+0x1d5a8>
  4221b8:	ldrb	w2, [x20]
  4221bc:	ldrb	w0, [x1]
  4221c0:	cmp	w2, w0
  4221c4:	b.eq	422204 <wcrtomb@plt+0x1d5e4>  // b.none
  4221c8:	mov	x0, x20
  4221cc:	bl	404110 <getgrnam@plt>
  4221d0:	cbz	x0, 42221c <wcrtomb@plt+0x1d5fc>
  4221d4:	ldr	w2, [x0, #16]
  4221d8:	mov	x1, x20
  4221dc:	add	x0, x19, #0x80
  4221e0:	str	w2, [x19, #136]
  4221e4:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  4221e8:	ldr	w1, [x19, #136]
  4221ec:	mov	w0, #0x1                   	// #1
  4221f0:	str	w1, [x21]
  4221f4:	ldp	x19, x20, [sp, #16]
  4221f8:	ldr	x21, [sp, #32]
  4221fc:	ldp	x29, x30, [sp], #48
  422200:	ret
  422204:	mov	x0, x20
  422208:	bl	404710 <strcmp@plt>
  42220c:	cbz	w0, 4221e8 <wcrtomb@plt+0x1d5c8>
  422210:	mov	x0, x20
  422214:	bl	404110 <getgrnam@plt>
  422218:	cbnz	x0, 4221d4 <wcrtomb@plt+0x1d5b4>
  42221c:	mov	x1, x20
  422220:	add	x0, x19, #0x98
  422224:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  422228:	mov	w0, #0x0                   	// #0
  42222c:	ldp	x19, x20, [sp, #16]
  422230:	ldr	x21, [sp, #32]
  422234:	ldp	x29, x30, [sp], #48
  422238:	ret
  42223c:	nop
  422240:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422244:	ldr	x0, [x0, #136]
  422248:	cmp	x0, #0x0
  42224c:	cset	w0, ne  // ne = any
  422250:	ret
  422254:	nop
  422258:	stp	x29, x30, [sp, #-32]!
  42225c:	mov	x29, sp
  422260:	stp	x19, x20, [sp, #16]
  422264:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422268:	mov	x19, x0
  42226c:	mov	x0, #0x38                  	// #56
  422270:	bl	4501a0 <argp_parse@@Base+0x103c0>
  422274:	ldr	x2, [x20, #2800]
  422278:	mov	x1, x0
  42227c:	cbz	x2, 4222bc <wcrtomb@plt+0x1d69c>
  422280:	ldr	x0, [x2, #8]
  422284:	str	x0, [x1, #8]
  422288:	cbz	x0, 422290 <wcrtomb@plt+0x1d670>
  42228c:	str	x1, [x0]
  422290:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  422294:	str	x2, [x1]
  422298:	str	x1, [x2, #8]
  42229c:	ldr	x2, [x3, #136]
  4222a0:	str	wzr, [x1, #16]
  4222a4:	str	x19, [x1, #24]
  4222a8:	add	x0, x2, #0x1
  4222ac:	str	x0, [x3, #136]
  4222b0:	ldp	x19, x20, [sp, #16]
  4222b4:	ldp	x29, x30, [sp], #32
  4222b8:	ret
  4222bc:	stp	xzr, xzr, [x0]
  4222c0:	mov	w0, #0x3                   	// #3
  4222c4:	str	w0, [x1, #16]
  4222c8:	mov	x0, #0x38                  	// #56
  4222cc:	str	x1, [x20, #2800]
  4222d0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4222d4:	mov	x1, x0
  4222d8:	ldr	x2, [x20, #2800]
  4222dc:	b	422280 <wcrtomb@plt+0x1d660>
  4222e0:	stp	x29, x30, [sp, #-16]!
  4222e4:	mov	x0, #0x66                  	// #102
  4222e8:	mov	x29, sp
  4222ec:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4222f0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4222f4:	add	x2, x1, #0xaf0
  4222f8:	mov	x4, #0x64                  	// #100
  4222fc:	ldr	x3, [x1, #2800]
  422300:	stp	x0, x4, [x2, #32]
  422304:	cbz	x3, 422320 <wcrtomb@plt+0x1d700>
  422308:	ldr	x0, [x3, #8]
  42230c:	cbz	x0, 422320 <wcrtomb@plt+0x1d700>
  422310:	mov	x2, x0
  422314:	ldr	x0, [x0, #8]
  422318:	cbnz	x0, 422310 <wcrtomb@plt+0x1d6f0>
  42231c:	str	x2, [x1, #2800]
  422320:	ldp	x29, x30, [sp], #16
  422324:	ret
  422328:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42232c:	ldr	x0, [x0, #2832]
  422330:	b	4047b0 <free@plt>
  422334:	nop
  422338:	stp	x29, x30, [sp, #-16]!
  42233c:	mov	x29, sp
  422340:	bl	421b38 <wcrtomb@plt+0x1cf18>
  422344:	cbz	x0, 42234c <wcrtomb@plt+0x1d72c>
  422348:	ldr	x0, [x0, #24]
  42234c:	ldp	x29, x30, [sp], #16
  422350:	ret
  422354:	nop
  422358:	stp	x29, x30, [sp, #-64]!
  42235c:	mov	x29, sp
  422360:	stp	x19, x20, [sp, #16]
  422364:	mov	x20, x0
  422368:	mov	x0, #0x60                  	// #96
  42236c:	stp	x21, x22, [sp, #32]
  422370:	mov	w22, w1
  422374:	mov	x21, x3
  422378:	str	x23, [sp, #48]
  42237c:	and	w23, w2, #0xff
  422380:	bl	450278 <argp_parse@@Base+0x10498>
  422384:	mov	x19, x0
  422388:	cmp	x20, #0x0
  42238c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  422390:	add	x0, x0, #0x7e8
  422394:	csel	x0, x0, x20, eq  // eq = none
  422398:	bl	450328 <argp_parse@@Base+0x10548>
  42239c:	str	x0, [x19, #16]
  4223a0:	bl	403ff0 <strlen@plt>
  4223a4:	str	x0, [x19, #24]
  4223a8:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4223ac:	add	x4, x4, #0xaf0
  4223b0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4223b4:	adrp	x3, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4223b8:	str	xzr, [x19]
  4223bc:	ldr	w6, [x1, #804]
  4223c0:	ldr	w1, [x4, #8]
  4223c4:	ldr	w5, [x3, #3892]
  4223c8:	cmp	w1, #0x2
  4223cc:	ldr	w2, [x4, #104]
  4223d0:	cset	w1, eq  // eq = none
  4223d4:	strb	w23, [x19, #36]
  4223d8:	ldr	x0, [x4, #160]
  4223dc:	orr	w1, w6, w1, lsl #28
  4223e0:	orr	w5, w5, w2
  4223e4:	str	x0, [x19, #8]
  4223e8:	orr	w5, w5, w1
  4223ec:	str	w5, [x19, #32]
  4223f0:	str	w22, [x19, #40]
  4223f4:	stp	xzr, xzr, [x19, #48]
  4223f8:	str	x21, [x19, #64]
  4223fc:	cbz	x0, 422420 <wcrtomb@plt+0x1d800>
  422400:	str	x19, [x0]
  422404:	mov	x0, x19
  422408:	ldp	x21, x22, [sp, #32]
  42240c:	ldr	x23, [sp, #48]
  422410:	str	x19, [x4, #160]
  422414:	ldp	x19, x20, [sp, #16]
  422418:	ldp	x29, x30, [sp], #64
  42241c:	ret
  422420:	str	x19, [x4, #168]
  422424:	mov	x0, x19
  422428:	ldp	x21, x22, [sp, #32]
  42242c:	ldr	x23, [sp, #48]
  422430:	str	x19, [x4, #160]
  422434:	ldp	x19, x20, [sp, #16]
  422438:	ldp	x29, x30, [sp], #64
  42243c:	ret
  422440:	stp	x29, x30, [sp, #-48]!
  422444:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422448:	mov	x29, sp
  42244c:	ldrb	w0, [x0, #768]
  422450:	stp	x19, x20, [sp, #16]
  422454:	cbz	w0, 4224a8 <wcrtomb@plt+0x1d888>
  422458:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42245c:	add	x20, x20, #0xaf0
  422460:	str	x21, [sp, #32]
  422464:	b	422484 <wcrtomb@plt+0x1d864>
  422468:	ldr	w0, [x0, #16]
  42246c:	cmp	w0, #0x1
  422470:	b.ne	422590 <wcrtomb@plt+0x1d970>  // b.any
  422474:	ldr	x0, [x19, #24]
  422478:	bl	450328 <argp_parse@@Base+0x10548>
  42247c:	bl	41fd68 <wcrtomb@plt+0x1b148>
  422480:	str	w0, [x20, #176]
  422484:	bl	421c30 <wcrtomb@plt+0x1d010>
  422488:	mov	x19, x0
  42248c:	cbnz	x0, 422468 <wcrtomb@plt+0x1d848>
  422490:	ldr	w21, [x20, #176]
  422494:	cbnz	w21, 42264c <wcrtomb@plt+0x1da2c>
  422498:	ldr	x21, [sp, #32]
  42249c:	ldp	x19, x20, [sp, #16]
  4224a0:	ldp	x29, x30, [sp], #48
  4224a4:	ret
  4224a8:	mov	w20, #0x0                   	// #0
  4224ac:	nop
  4224b0:	mov	w19, w20
  4224b4:	b	4224d4 <wcrtomb@plt+0x1d8b4>
  4224b8:	ldr	w1, [x0, #16]
  4224bc:	ldr	x0, [x0, #24]
  4224c0:	cmp	w1, #0x1
  4224c4:	b.ne	422578 <wcrtomb@plt+0x1d958>  // b.any
  4224c8:	bl	450328 <argp_parse@@Base+0x10548>
  4224cc:	bl	41fd68 <wcrtomb@plt+0x1b148>
  4224d0:	mov	w19, w0
  4224d4:	bl	421c30 <wcrtomb@plt+0x1d010>
  4224d8:	cbnz	x0, 4224b8 <wcrtomb@plt+0x1d898>
  4224dc:	cmp	w20, w19
  4224e0:	b.eq	42249c <wcrtomb@plt+0x1d87c>  // b.none
  4224e4:	mov	x0, #0x60                  	// #96
  4224e8:	str	x21, [sp, #32]
  4224ec:	bl	450278 <argp_parse@@Base+0x10498>
  4224f0:	mov	x21, x0
  4224f4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4224f8:	add	x0, x1, #0x7e8
  4224fc:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422500:	add	x20, x20, #0xaf0
  422504:	bl	450328 <argp_parse@@Base+0x10548>
  422508:	str	x0, [x21, #16]
  42250c:	bl	403ff0 <strlen@plt>
  422510:	str	x0, [x21, #24]
  422514:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  422518:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  42251c:	ldr	w4, [x20, #104]
  422520:	ldr	w3, [x2, #804]
  422524:	ldr	w2, [x20, #8]
  422528:	ldr	w1, [x1, #3892]
  42252c:	cmp	w2, #0x2
  422530:	strb	wzr, [x21, #36]
  422534:	cset	w2, eq  // eq = none
  422538:	orr	w0, w1, w4
  42253c:	str	w19, [x21, #40]
  422540:	orr	w2, w3, w2, lsl #28
  422544:	str	xzr, [x21, #48]
  422548:	ldr	x3, [x20, #160]
  42254c:	orr	w0, w0, w2
  422550:	stp	xzr, x3, [x21]
  422554:	str	w0, [x21, #32]
  422558:	stp	xzr, xzr, [x21, #56]
  42255c:	cbz	x3, 422644 <wcrtomb@plt+0x1da24>
  422560:	str	x21, [x3]
  422564:	str	x21, [x20, #160]
  422568:	ldp	x19, x20, [sp, #16]
  42256c:	ldr	x21, [sp, #32]
  422570:	ldp	x29, x30, [sp], #48
  422574:	ret
  422578:	mov	w1, w19
  42257c:	mov	w20, w19
  422580:	mov	x3, #0x0                   	// #0
  422584:	mov	w2, #0x1                   	// #1
  422588:	bl	422358 <wcrtomb@plt+0x1d738>
  42258c:	b	4224b0 <wcrtomb@plt+0x1d890>
  422590:	ldr	x21, [x20, #184]
  422594:	cbz	x21, 4225b0 <wcrtomb@plt+0x1d990>
  422598:	ldr	x0, [x21, #16]
  42259c:	bl	4047b0 <free@plt>
  4225a0:	ldr	x0, [x21, #88]
  4225a4:	bl	4047b0 <free@plt>
  4225a8:	mov	x0, x21
  4225ac:	bl	4047b0 <free@plt>
  4225b0:	ldr	x21, [x19, #24]
  4225b4:	mov	x0, #0x60                  	// #96
  4225b8:	bl	450278 <argp_parse@@Base+0x10498>
  4225bc:	mov	x19, x0
  4225c0:	cmp	x21, #0x0
  4225c4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4225c8:	add	x0, x0, #0x7e8
  4225cc:	csel	x0, x0, x21, eq  // eq = none
  4225d0:	bl	450328 <argp_parse@@Base+0x10548>
  4225d4:	str	x0, [x19, #16]
  4225d8:	bl	403ff0 <strlen@plt>
  4225dc:	stp	xzr, xzr, [x19, #56]
  4225e0:	ldr	w2, [x20, #8]
  4225e4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4225e8:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4225ec:	cmp	w2, #0x2
  4225f0:	ldr	w6, [x20, #104]
  4225f4:	ldr	w5, [x3, #804]
  4225f8:	cset	w2, eq  // eq = none
  4225fc:	ldr	w1, [x1, #3892]
  422600:	mov	w4, #0x1                   	// #1
  422604:	ldr	w3, [x20, #176]
  422608:	orr	w1, w1, w6
  42260c:	orr	w2, w5, w2, lsl #28
  422610:	orr	w1, w1, w2
  422614:	strb	w4, [x19, #36]
  422618:	ldr	x21, [sp, #32]
  42261c:	str	xzr, [x19]
  422620:	str	x0, [x19, #24]
  422624:	str	w1, [x19, #32]
  422628:	str	w3, [x19, #40]
  42262c:	str	xzr, [x19, #48]
  422630:	stp	x19, x19, [x20, #160]
  422634:	str	x19, [x20, #184]
  422638:	ldp	x19, x20, [sp, #16]
  42263c:	ldp	x29, x30, [sp], #48
  422640:	ret
  422644:	str	x21, [x20, #168]
  422648:	b	422564 <wcrtomb@plt+0x1d944>
  42264c:	mov	x0, #0x60                  	// #96
  422650:	bl	450278 <argp_parse@@Base+0x10498>
  422654:	mov	x19, x0
  422658:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  42265c:	add	x0, x1, #0x7e8
  422660:	bl	450328 <argp_parse@@Base+0x10548>
  422664:	str	x0, [x19, #16]
  422668:	bl	403ff0 <strlen@plt>
  42266c:	str	x0, [x19, #24]
  422670:	ldr	w3, [x20, #8]
  422674:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  422678:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  42267c:	ldr	w4, [x20, #104]
  422680:	ldr	w2, [x2, #804]
  422684:	cmp	w3, #0x2
  422688:	cset	w3, eq  // eq = none
  42268c:	ldr	w1, [x1, #3892]
  422690:	strb	wzr, [x19, #36]
  422694:	orr	w3, w2, w3, lsl #28
  422698:	orr	w1, w1, w4
  42269c:	ldr	x2, [x20, #160]
  4226a0:	orr	w1, w1, w3
  4226a4:	stp	xzr, x2, [x19]
  4226a8:	str	w1, [x19, #32]
  4226ac:	str	w21, [x19, #40]
  4226b0:	str	xzr, [x19, #48]
  4226b4:	stp	xzr, xzr, [x19, #56]
  4226b8:	cbz	x2, 4226cc <wcrtomb@plt+0x1daac>
  4226bc:	str	x19, [x2]
  4226c0:	ldr	x21, [sp, #32]
  4226c4:	str	x19, [x20, #160]
  4226c8:	b	42249c <wcrtomb@plt+0x1d87c>
  4226cc:	str	x19, [x20, #168]
  4226d0:	b	4226c0 <wcrtomb@plt+0x1daa0>
  4226d4:	nop
  4226d8:	sub	sp, sp, #0x230
  4226dc:	stp	x29, x30, [sp]
  4226e0:	mov	x29, sp
  4226e4:	stp	x23, x24, [sp, #48]
  4226e8:	mov	x23, x1
  4226ec:	stp	x25, x26, [sp, #64]
  4226f0:	mov	x25, x0
  4226f4:	bl	4196e0 <wcrtomb@plt+0x14ac0>
  4226f8:	str	x0, [x23, #56]
  4226fc:	bl	419d28 <wcrtomb@plt+0x15108>
  422700:	cbz	x0, 42284c <wcrtomb@plt+0x1dc2c>
  422704:	ldr	x24, [x23, #24]
  422708:	stp	x19, x20, [sp, #16]
  42270c:	mov	x20, x0
  422710:	stp	x21, x22, [sp, #32]
  422714:	cmp	x24, #0x63
  422718:	stp	x27, x28, [sp, #80]
  42271c:	b.hi	422884 <wcrtomb@plt+0x1dc64>  // b.pmore
  422720:	mov	x0, #0x65                  	// #101
  422724:	mov	x28, #0x64                  	// #100
  422728:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42272c:	mov	x21, x0
  422730:	ldr	w1, [x23, #40]
  422734:	str	w1, [sp, #108]
  422738:	ldr	x1, [x23, #16]
  42273c:	bl	404910 <strcpy@plt>
  422740:	add	x0, x21, x24
  422744:	ldurb	w0, [x0, #-1]
  422748:	cmp	w0, #0x2f
  42274c:	b.eq	422764 <wcrtomb@plt+0x1db44>  // b.none
  422750:	add	x0, x24, #0x1
  422754:	mov	w1, #0x2f                  	// #47
  422758:	strb	w1, [x21, x24]
  42275c:	mov	x24, x0
  422760:	strb	wzr, [x21, x0]
  422764:	ldrb	w22, [x20]
  422768:	cbz	w22, 422900 <wcrtomb@plt+0x1dce0>
  42276c:	add	x1, sp, #0xe0
  422770:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422774:	mov	x27, #0x0                   	// #0
  422778:	add	x0, x0, #0x344
  42277c:	str	xzr, [sp, #96]
  422780:	stp	x0, x1, [sp, #112]
  422784:	b	422798 <wcrtomb@plt+0x1db78>
  422788:	add	x19, x19, #0x1
  42278c:	add	x20, x20, x19
  422790:	ldrb	w22, [x20]
  422794:	cbz	w22, 422830 <wcrtomb@plt+0x1dc10>
  422798:	mov	x0, x20
  42279c:	bl	403ff0 <strlen@plt>
  4227a0:	cmp	w22, #0x44
  4227a4:	mov	x19, x0
  4227a8:	b.ne	422788 <wcrtomb@plt+0x1db68>  // b.any
  4227ac:	add	x0, x24, x0
  4227b0:	cmp	x0, x28
  4227b4:	b.cs	422860 <wcrtomb@plt+0x1dc40>  // b.hs, b.nlast
  4227b8:	add	x26, x20, #0x1
  4227bc:	add	x0, x21, x24
  4227c0:	mov	x1, x26
  4227c4:	bl	404910 <strcpy@plt>
  4227c8:	ldr	w1, [sp, #108]
  4227cc:	mov	x3, x23
  4227d0:	mov	x0, x21
  4227d4:	mov	w2, #0x0                   	// #0
  4227d8:	bl	422358 <wcrtomb@plt+0x1d738>
  4227dc:	mov	x22, x0
  4227e0:	ldr	x0, [sp, #96]
  4227e4:	cbz	x0, 4228d0 <wcrtomb@plt+0x1dcb0>
  4227e8:	str	x22, [x27, #80]
  4227ec:	add	x0, sp, #0x88
  4227f0:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  4227f4:	ldr	w27, [x25, #408]
  4227f8:	str	x25, [sp, #528]
  4227fc:	tbz	w27, #31, 422890 <wcrtomb@plt+0x1dc70>
  422800:	neg	w27, w27
  422804:	bl	404ad0 <__errno_location@plt>
  422808:	str	w27, [x0]
  42280c:	mov	x0, x21
  422810:	bl	420300 <wcrtomb@plt+0x1b6e0>
  422814:	add	x19, x19, #0x1
  422818:	mov	x27, x22
  42281c:	add	x20, x20, x19
  422820:	add	x0, sp, #0x88
  422824:	bl	42f438 <wcrtomb@plt+0x2a818>
  422828:	ldrb	w22, [x20]
  42282c:	cbnz	w22, 422798 <wcrtomb@plt+0x1db78>
  422830:	mov	x0, x21
  422834:	bl	4047b0 <free@plt>
  422838:	ldr	x0, [sp, #96]
  42283c:	ldp	x19, x20, [sp, #16]
  422840:	ldp	x21, x22, [sp, #32]
  422844:	ldp	x27, x28, [sp, #80]
  422848:	str	x0, [x23, #72]
  42284c:	ldp	x29, x30, [sp]
  422850:	ldp	x23, x24, [sp, #48]
  422854:	ldp	x25, x26, [sp, #64]
  422858:	add	sp, sp, #0x230
  42285c:	ret
  422860:	lsl	x28, x28, #1
  422864:	cbz	x28, 422908 <wcrtomb@plt+0x1dce8>
  422868:	cmp	x0, x28
  42286c:	b.cs	422860 <wcrtomb@plt+0x1dc40>  // b.hs, b.nlast
  422870:	mov	x0, x21
  422874:	add	x1, x28, #0x1
  422878:	bl	4501d0 <argp_parse@@Base+0x103f0>
  42287c:	mov	x21, x0
  422880:	b	4227b8 <wcrtomb@plt+0x1db98>
  422884:	add	x28, x24, #0x64
  422888:	add	x0, x24, #0x65
  42288c:	b	422728 <wcrtomb@plt+0x1db08>
  422890:	ldr	x0, [sp, #112]
  422894:	mov	x1, x26
  422898:	ldr	w2, [x0]
  42289c:	mov	x0, x25
  4228a0:	orr	w2, w2, #0x4000
  4228a4:	bl	40dde8 <wcrtomb@plt+0x91c8>
  4228a8:	mov	w1, w0
  4228ac:	tbnz	w0, #31, 42280c <wcrtomb@plt+0x1dbec>
  4228b0:	ldr	x2, [sp, #120]
  4228b4:	mov	w0, #0x0                   	// #0
  4228b8:	str	w1, [sp, #544]
  4228bc:	bl	4049a0 <__fxstat@plt>
  4228c0:	cbz	w0, 4228d8 <wcrtomb@plt+0x1dcb8>
  4228c4:	mov	x0, x21
  4228c8:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  4228cc:	b	422814 <wcrtomb@plt+0x1dbf4>
  4228d0:	str	x22, [sp, #96]
  4228d4:	b	4227ec <wcrtomb@plt+0x1dbcc>
  4228d8:	mov	x0, x21
  4228dc:	bl	450328 <argp_parse@@Base+0x10548>
  4228e0:	mov	x2, x0
  4228e4:	mov	x1, x22
  4228e8:	add	x0, sp, #0x88
  4228ec:	str	x2, [sp, #136]
  4228f0:	bl	4226d8 <wcrtomb@plt+0x1dab8>
  4228f4:	add	x0, sp, #0x88
  4228f8:	bl	40dfb0 <wcrtomb@plt+0x9390>
  4228fc:	b	422814 <wcrtomb@plt+0x1dbf4>
  422900:	str	xzr, [sp, #96]
  422904:	b	422830 <wcrtomb@plt+0x1dc10>
  422908:	bl	4104a0 <wcrtomb@plt+0xb880>
  42290c:	nop
  422910:	stp	x29, x30, [sp, #-64]!
  422914:	mov	x29, sp
  422918:	stp	x19, x20, [sp, #16]
  42291c:	mov	x20, x0
  422920:	mov	x0, #0x60                  	// #96
  422924:	stp	x21, x22, [sp, #32]
  422928:	str	x23, [sp, #48]
  42292c:	bl	450278 <argp_parse@@Base+0x10498>
  422930:	cmp	x20, #0x0
  422934:	mov	x19, x0
  422938:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  42293c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  422940:	add	x0, x0, #0x7e8
  422944:	csel	x0, x0, x20, eq  // eq = none
  422948:	bl	450328 <argp_parse@@Base+0x10548>
  42294c:	str	x0, [x19, #16]
  422950:	bl	403ff0 <strlen@plt>
  422954:	ldrb	w1, [x23, #808]
  422958:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42295c:	str	x0, [x19, #24]
  422960:	add	x20, x20, #0xaf0
  422964:	cbnz	w1, 4229d8 <wcrtomb@plt+0x1ddb8>
  422968:	ldr	x21, [x20, #160]
  42296c:	ldr	x0, [x20, #168]
  422970:	stp	x0, xzr, [x19]
  422974:	str	x19, [x20, #168]
  422978:	cbz	x21, 422a20 <wcrtomb@plt+0x1de00>
  42297c:	ldr	w1, [x20, #8]
  422980:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422984:	adrp	x2, 493000 <_obstack_memory_used@@Base+0x41bf0>
  422988:	ldr	w4, [x20, #104]
  42298c:	ldr	w3, [x0, #804]
  422990:	cmp	w1, #0x2
  422994:	ldr	w0, [x2, #3892]
  422998:	cset	w1, eq  // eq = none
  42299c:	mov	w2, #0x1                   	// #1
  4229a0:	strb	w2, [x23, #808]
  4229a4:	orr	w0, w0, w4
  4229a8:	orr	w1, w3, w1, lsl #28
  4229ac:	orr	w0, w0, w1
  4229b0:	str	w0, [x19, #32]
  4229b4:	strb	w2, [x19, #36]
  4229b8:	str	wzr, [x19, #40]
  4229bc:	str	xzr, [x19, #48]
  4229c0:	stp	xzr, xzr, [x19, #56]
  4229c4:	ldp	x19, x20, [sp, #16]
  4229c8:	ldp	x21, x22, [sp, #32]
  4229cc:	ldr	x23, [sp, #48]
  4229d0:	ldp	x29, x30, [sp], #64
  4229d4:	ret
  4229d8:	ldr	x22, [x20, #168]
  4229dc:	ldp	x0, x21, [x22]
  4229e0:	cbz	x21, 422a28 <wcrtomb@plt+0x1de08>
  4229e4:	str	x0, [x21]
  4229e8:	ldr	x0, [x22]
  4229ec:	cbz	x0, 422a30 <wcrtomb@plt+0x1de10>
  4229f0:	str	x21, [x0, #8]
  4229f4:	ldr	x21, [x20, #160]
  4229f8:	ldr	x0, [x22, #16]
  4229fc:	bl	4047b0 <free@plt>
  422a00:	ldr	x0, [x22, #88]
  422a04:	bl	4047b0 <free@plt>
  422a08:	mov	x0, x22
  422a0c:	bl	4047b0 <free@plt>
  422a10:	ldr	x0, [x20, #168]
  422a14:	stp	x0, xzr, [x19]
  422a18:	str	x19, [x20, #168]
  422a1c:	cbnz	x21, 42297c <wcrtomb@plt+0x1dd5c>
  422a20:	str	x19, [x20, #160]
  422a24:	b	42297c <wcrtomb@plt+0x1dd5c>
  422a28:	str	x0, [x20, #168]
  422a2c:	cbnz	x0, 4229f0 <wcrtomb@plt+0x1ddd0>
  422a30:	str	x21, [x20, #160]
  422a34:	b	4229f8 <wcrtomb@plt+0x1ddd8>
  422a38:	ldp	x1, x2, [x0]
  422a3c:	cbz	x2, 422a54 <wcrtomb@plt+0x1de34>
  422a40:	str	x1, [x2]
  422a44:	ldr	x1, [x0]
  422a48:	cbz	x1, 422a60 <wcrtomb@plt+0x1de40>
  422a4c:	str	x2, [x1, #8]
  422a50:	ret
  422a54:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422a58:	str	x1, [x0, #2968]
  422a5c:	cbnz	x1, 422a4c <wcrtomb@plt+0x1de2c>
  422a60:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422a64:	str	x2, [x0, #2960]
  422a68:	ret
  422a6c:	nop
  422a70:	stp	x29, x30, [sp, #-64]!
  422a74:	mov	x29, sp
  422a78:	stp	x19, x20, [sp, #16]
  422a7c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422a80:	add	x20, x20, #0xaf0
  422a84:	stp	x21, x22, [sp, #32]
  422a88:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  422a8c:	mov	x22, x0
  422a90:	ldr	x19, [x20, #168]
  422a94:	add	x21, x21, #0x328
  422a98:	str	x23, [sp, #48]
  422a9c:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  422aa0:	add	x23, x23, #0x300
  422aa4:	nop
  422aa8:	cbz	x19, 422b98 <wcrtomb@plt+0x1df78>
  422aac:	ldr	x0, [x19, #16]
  422ab0:	ldrb	w1, [x0]
  422ab4:	cbz	w1, 422bb0 <wcrtomb@plt+0x1df90>
  422ab8:	ldr	w2, [x19, #32]
  422abc:	mov	x1, x22
  422ac0:	bl	441ef0 <argp_parse@@Base+0x2110>
  422ac4:	tst	w0, #0xff
  422ac8:	b.ne	422b3c <wcrtomb@plt+0x1df1c>  // b.any
  422acc:	ldr	x19, [x19]
  422ad0:	cbz	x19, 422ae8 <wcrtomb@plt+0x1dec8>
  422ad4:	ldr	x0, [x19, #16]
  422ad8:	ldrb	w1, [x0]
  422adc:	cbnz	w1, 422ab8 <wcrtomb@plt+0x1de98>
  422ae0:	ldr	x19, [x19]
  422ae4:	cbnz	x19, 422ad4 <wcrtomb@plt+0x1deb4>
  422ae8:	ldrb	w0, [x21]
  422aec:	cbnz	w0, 422b2c <wcrtomb@plt+0x1df0c>
  422af0:	ldrb	w1, [x23]
  422af4:	cbz	w1, 422b14 <wcrtomb@plt+0x1def4>
  422af8:	ldr	x0, [x20, #168]
  422afc:	ldr	x1, [x0, #48]
  422b00:	cbz	x1, 422b14 <wcrtomb@plt+0x1def4>
  422b04:	bl	422440 <wcrtomb@plt+0x1d820>
  422b08:	ldr	x19, [x20, #168]
  422b0c:	ldr	x0, [x19, #48]
  422b10:	cbz	x0, 422aa8 <wcrtomb@plt+0x1de88>
  422b14:	mov	w0, #0x0                   	// #0
  422b18:	ldp	x19, x20, [sp, #16]
  422b1c:	ldp	x21, x22, [sp, #32]
  422b20:	ldr	x23, [sp, #48]
  422b24:	ldp	x29, x30, [sp], #64
  422b28:	ret
  422b2c:	ldr	x0, [x20, #168]
  422b30:	cbnz	x0, 422af0 <wcrtomb@plt+0x1ded0>
  422b34:	strb	wzr, [x21]
  422b38:	b	422af0 <wcrtomb@plt+0x1ded0>
  422b3c:	ldrb	w0, [x21]
  422b40:	cbz	w0, 422b58 <wcrtomb@plt+0x1df38>
  422b44:	ldr	x0, [x20, #168]
  422b48:	cmp	x0, x19
  422b4c:	b.ne	422af0 <wcrtomb@plt+0x1ded0>  // b.any
  422b50:	strb	wzr, [x21]
  422b54:	nop
  422b58:	ldr	x1, [x19, #24]
  422b5c:	ldr	x0, [x19, #48]
  422b60:	ldrb	w1, [x22, x1]
  422b64:	cmp	w1, #0x2f
  422b68:	b.eq	422be4 <wcrtomb@plt+0x1dfc4>  // b.none
  422b6c:	add	x0, x0, #0x1
  422b70:	str	x0, [x19, #48]
  422b74:	ldr	w0, [x19, #40]
  422b78:	bl	420060 <wcrtomb@plt+0x1b440>
  422b7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422b80:	ldr	x0, [x0, #888]
  422b84:	cbnz	x0, 422bd4 <wcrtomb@plt+0x1dfb4>
  422b88:	ldr	x0, [x19, #48]
  422b8c:	cmp	x0, #0x0
  422b90:	cset	w0, ne  // ne = any
  422b94:	b	422b18 <wcrtomb@plt+0x1def8>
  422b98:	mov	w0, #0x1                   	// #1
  422b9c:	ldp	x19, x20, [sp, #16]
  422ba0:	ldp	x21, x22, [sp, #32]
  422ba4:	ldr	x23, [sp, #48]
  422ba8:	ldp	x29, x30, [sp], #64
  422bac:	ret
  422bb0:	ldr	w0, [x19, #40]
  422bb4:	bl	420060 <wcrtomb@plt+0x1b440>
  422bb8:	stp	xzr, xzr, [x20, #160]
  422bbc:	mov	w0, #0x1                   	// #1
  422bc0:	ldp	x19, x20, [sp, #16]
  422bc4:	ldp	x21, x22, [sp, #32]
  422bc8:	ldr	x23, [sp, #48]
  422bcc:	ldp	x29, x30, [sp], #64
  422bd0:	ret
  422bd4:	ldr	x1, [x19, #48]
  422bd8:	cmp	x1, x0
  422bdc:	cset	w0, eq  // eq = none
  422be0:	b	422b18 <wcrtomb@plt+0x1def8>
  422be4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  422be8:	ldr	w1, [x1, #804]
  422bec:	cbz	w1, 422b6c <wcrtomb@plt+0x1df4c>
  422bf0:	cbnz	x0, 422b74 <wcrtomb@plt+0x1df54>
  422bf4:	b	422b6c <wcrtomb@plt+0x1df4c>
  422bf8:	stp	x29, x30, [sp, #-48]!
  422bfc:	mov	x29, sp
  422c00:	stp	x19, x20, [sp, #16]
  422c04:	ldr	x19, [x0, #8]
  422c08:	str	x21, [sp, #32]
  422c0c:	cbz	x19, 422c90 <wcrtomb@plt+0x1e070>
  422c10:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  422c14:	mov	w21, #0x0                   	// #0
  422c18:	ldr	x20, [x1, #888]
  422c1c:	cbz	x20, 422c7c <wcrtomb@plt+0x1e05c>
  422c20:	ldrb	w21, [x0, #16]
  422c24:	cbnz	w21, 422c90 <wcrtomb@plt+0x1e070>
  422c28:	mov	x0, x19
  422c2c:	bl	403ff0 <strlen@plt>
  422c30:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422c34:	ldr	x1, [x1, #2968]
  422c38:	cbz	x1, 422c78 <wcrtomb@plt+0x1e058>
  422c3c:	nop
  422c40:	ldr	x2, [x1, #16]
  422c44:	ldrb	w2, [x2]
  422c48:	cbz	w2, 422c58 <wcrtomb@plt+0x1e038>
  422c4c:	ldr	x2, [x1, #48]
  422c50:	cmp	x20, x2
  422c54:	b.hi	422c7c <wcrtomb@plt+0x1e05c>  // b.pmore
  422c58:	ldr	x2, [x1, #24]
  422c5c:	cmp	x2, x0
  422c60:	b.hi	422c70 <wcrtomb@plt+0x1e050>  // b.pmore
  422c64:	ldrb	w2, [x19, x2]
  422c68:	cmp	w2, #0x2f
  422c6c:	b.eq	422c7c <wcrtomb@plt+0x1e05c>  // b.none
  422c70:	ldr	x1, [x1]
  422c74:	cbnz	x1, 422c40 <wcrtomb@plt+0x1e020>
  422c78:	mov	w21, #0x1                   	// #1
  422c7c:	mov	w0, w21
  422c80:	ldp	x19, x20, [sp, #16]
  422c84:	ldr	x21, [sp, #32]
  422c88:	ldp	x29, x30, [sp], #48
  422c8c:	ret
  422c90:	mov	w21, #0x0                   	// #0
  422c94:	mov	w0, w21
  422c98:	ldp	x19, x20, [sp, #16]
  422c9c:	ldr	x21, [sp, #32]
  422ca0:	ldp	x29, x30, [sp], #48
  422ca4:	ret
  422ca8:	stp	x29, x30, [sp, #-80]!
  422cac:	mov	x29, sp
  422cb0:	stp	x21, x22, [sp, #32]
  422cb4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422cb8:	add	x21, x21, #0xaf0
  422cbc:	stp	x19, x20, [sp, #16]
  422cc0:	ldr	x19, [x21, #168]
  422cc4:	cbz	x19, 422d24 <wcrtomb@plt+0x1e104>
  422cc8:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  422ccc:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422cd0:	add	x20, x20, #0x378
  422cd4:	add	x22, x22, #0xdf0
  422cd8:	stp	x23, x24, [sp, #48]
  422cdc:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  422ce0:	add	x23, x23, #0x330
  422ce4:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  422ce8:	str	x25, [sp, #64]
  422cec:	nop
  422cf0:	ldr	x0, [x20]
  422cf4:	ldr	x1, [x19, #48]
  422cf8:	cbnz	x0, 422dc0 <wcrtomb@plt+0x1e1a0>
  422cfc:	cmp	x1, #0x0
  422d00:	cset	w0, eq  // eq = none
  422d04:	cbz	w0, 422d14 <wcrtomb@plt+0x1e0f4>
  422d08:	ldr	x0, [x19, #16]
  422d0c:	ldrb	w1, [x0]
  422d10:	cbnz	w1, 422dcc <wcrtomb@plt+0x1e1ac>
  422d14:	ldr	x19, [x19]
  422d18:	cbnz	x19, 422cf0 <wcrtomb@plt+0x1e0d0>
  422d1c:	ldp	x23, x24, [sp, #48]
  422d20:	ldr	x25, [sp, #64]
  422d24:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422d28:	stp	xzr, xzr, [x21, #160]
  422d2c:	ldrb	w0, [x0, #768]
  422d30:	cbz	w0, 422db0 <wcrtomb@plt+0x1e190>
  422d34:	adrp	x21, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  422d38:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422d3c:	add	x21, x21, #0x310
  422d40:	add	x20, x20, #0xdf0
  422d44:	b	422da4 <wcrtomb@plt+0x1e184>
  422d48:	ldr	x19, [x0, #24]
  422d4c:	mov	x0, x19
  422d50:	cbz	x19, 422db0 <wcrtomb@plt+0x1e190>
  422d54:	bl	420de0 <wcrtomb@plt+0x1c1c0>
  422d58:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422d5c:	ldr	x0, [x0, #1136]
  422d60:	cbz	x0, 422d68 <wcrtomb@plt+0x1e148>
  422d64:	blr	x0
  422d68:	mov	w2, #0x5                   	// #5
  422d6c:	mov	x1, x21
  422d70:	mov	x0, #0x0                   	// #0
  422d74:	bl	4049c0 <dcgettext@plt>
  422d78:	mov	x2, x0
  422d7c:	mov	x0, x19
  422d80:	mov	x19, x2
  422d84:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  422d88:	mov	x3, x0
  422d8c:	mov	x2, x19
  422d90:	mov	w0, #0x0                   	// #0
  422d94:	mov	w1, #0x0                   	// #0
  422d98:	bl	404050 <error@plt>
  422d9c:	mov	w0, #0x2                   	// #2
  422da0:	str	w0, [x20]
  422da4:	mov	w0, #0x1                   	// #1
  422da8:	bl	421b38 <wcrtomb@plt+0x1cf18>
  422dac:	cbnz	x0, 422d48 <wcrtomb@plt+0x1e128>
  422db0:	ldp	x19, x20, [sp, #16]
  422db4:	ldp	x21, x22, [sp, #32]
  422db8:	ldp	x29, x30, [sp], #80
  422dbc:	ret
  422dc0:	cmp	x0, x1
  422dc4:	cset	w0, hi  // hi = pmore
  422dc8:	b	422d04 <wcrtomb@plt+0x1e0e4>
  422dcc:	bl	420de0 <wcrtomb@plt+0x1c1c0>
  422dd0:	ldr	x0, [x24, #1136]
  422dd4:	cbz	x0, 422ddc <wcrtomb@plt+0x1e1bc>
  422dd8:	blr	x0
  422ddc:	ldr	x0, [x19, #48]
  422de0:	cbnz	x0, 422e20 <wcrtomb@plt+0x1e200>
  422de4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  422de8:	mov	w2, #0x5                   	// #5
  422dec:	add	x1, x1, #0x310
  422df0:	bl	4049c0 <dcgettext@plt>
  422df4:	mov	x25, x0
  422df8:	ldr	x0, [x19, #16]
  422dfc:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  422e00:	mov	x3, x0
  422e04:	mov	x2, x25
  422e08:	mov	w0, #0x0                   	// #0
  422e0c:	mov	w1, #0x0                   	// #0
  422e10:	bl	404050 <error@plt>
  422e14:	mov	w0, #0x2                   	// #2
  422e18:	str	w0, [x22]
  422e1c:	b	422d14 <wcrtomb@plt+0x1e0f4>
  422e20:	mov	x1, x23
  422e24:	mov	w2, #0x5                   	// #5
  422e28:	mov	x0, #0x0                   	// #0
  422e2c:	bl	4049c0 <dcgettext@plt>
  422e30:	mov	x25, x0
  422e34:	b	422df8 <wcrtomb@plt+0x1e1d8>
  422e38:	stp	x29, x30, [sp, #-64]!
  422e3c:	mov	x29, sp
  422e40:	stp	x19, x20, [sp, #16]
  422e44:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422e48:	add	x19, x19, #0xaf0
  422e4c:	ldr	x0, [x19, #168]
  422e50:	cbz	x0, 422f70 <wcrtomb@plt+0x1e350>
  422e54:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  422e58:	ldr	x2, [x1, #888]
  422e5c:	cbz	x2, 422f7c <wcrtomb@plt+0x1e35c>
  422e60:	ldr	x1, [x0, #48]
  422e64:	cmp	x2, x1
  422e68:	b.ls	422f70 <wcrtomb@plt+0x1e350>  // b.plast
  422e6c:	ldr	x0, [x0]
  422e70:	cbnz	x0, 422e60 <wcrtomb@plt+0x1e240>
  422e74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422e78:	ldr	w0, [x0, #772]
  422e7c:	cbnz	w0, 422f98 <wcrtomb@plt+0x1e378>
  422e80:	mov	w0, #0x1                   	// #1
  422e84:	bl	42f548 <wcrtomb@plt+0x2a928>
  422e88:	ldr	x20, [x19, #168]
  422e8c:	cbz	x20, 422f44 <wcrtomb@plt+0x1e324>
  422e90:	stp	x21, x22, [sp, #32]
  422e94:	adrp	x22, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  422e98:	add	x22, x22, #0x208
  422e9c:	stp	x23, x24, [sp, #48]
  422ea0:	adrp	x23, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  422ea4:	mov	w24, #0x1                   	// #1
  422ea8:	add	x23, x23, #0x1d8
  422eac:	b	422eb8 <wcrtomb@plt+0x1e298>
  422eb0:	ldr	x20, [x20]
  422eb4:	cbz	x20, 422f3c <wcrtomb@plt+0x1e31c>
  422eb8:	ldr	w0, [x19, #8]
  422ebc:	mov	w1, #0x0                   	// #0
  422ec0:	cbnz	w0, 422f34 <wcrtomb@plt+0x1e314>
  422ec4:	ldr	x0, [x20, #16]
  422ec8:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  422ecc:	bl	4419b8 <argp_parse@@Base+0x1bd8>
  422ed0:	tst	w0, #0xff
  422ed4:	b.eq	422f34 <wcrtomb@plt+0x1e314>  // b.none
  422ed8:	ldr	x0, [x21, #1136]
  422edc:	str	w24, [x19, #12]
  422ee0:	cbz	x0, 422ee8 <wcrtomb@plt+0x1e2c8>
  422ee4:	blr	x0
  422ee8:	mov	x1, x23
  422eec:	mov	w2, #0x5                   	// #5
  422ef0:	mov	x0, #0x0                   	// #0
  422ef4:	bl	4049c0 <dcgettext@plt>
  422ef8:	mov	w1, #0x0                   	// #0
  422efc:	mov	x2, x0
  422f00:	mov	w0, #0x0                   	// #0
  422f04:	bl	404050 <error@plt>
  422f08:	ldr	x0, [x21, #1136]
  422f0c:	cbz	x0, 422f14 <wcrtomb@plt+0x1e2f4>
  422f10:	blr	x0
  422f14:	mov	x1, x22
  422f18:	mov	w2, #0x5                   	// #5
  422f1c:	mov	x0, #0x0                   	// #0
  422f20:	bl	4049c0 <dcgettext@plt>
  422f24:	mov	w1, #0x0                   	// #0
  422f28:	mov	x2, x0
  422f2c:	mov	w0, #0x0                   	// #0
  422f30:	bl	404050 <error@plt>
  422f34:	ldr	w0, [x19, #12]
  422f38:	cbz	w0, 422eb0 <wcrtomb@plt+0x1e290>
  422f3c:	ldp	x21, x22, [sp, #32]
  422f40:	ldp	x23, x24, [sp, #48]
  422f44:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422f48:	stp	xzr, xzr, [x19, #160]
  422f4c:	ldrb	w0, [x0, #768]
  422f50:	cbz	w0, 422f70 <wcrtomb@plt+0x1e350>
  422f54:	mov	w0, #0x1                   	// #1
  422f58:	bl	421b38 <wcrtomb@plt+0x1cf18>
  422f5c:	cbz	x0, 422f70 <wcrtomb@plt+0x1e350>
  422f60:	ldr	x0, [x0, #24]
  422f64:	cbz	x0, 422f70 <wcrtomb@plt+0x1e350>
  422f68:	bl	420de0 <wcrtomb@plt+0x1c1c0>
  422f6c:	cbz	w0, 422f54 <wcrtomb@plt+0x1e334>
  422f70:	ldp	x19, x20, [sp, #16]
  422f74:	ldp	x29, x30, [sp], #64
  422f78:	ret
  422f7c:	ldr	x1, [x0, #48]
  422f80:	cbnz	x1, 422f70 <wcrtomb@plt+0x1e350>
  422f84:	ldr	x0, [x0]
  422f88:	cbnz	x0, 422f7c <wcrtomb@plt+0x1e35c>
  422f8c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422f90:	ldr	w0, [x0, #772]
  422f94:	cbz	w0, 422e80 <wcrtomb@plt+0x1e260>
  422f98:	mov	w2, #0x5                   	// #5
  422f9c:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  422fa0:	mov	x0, #0x0                   	// #0
  422fa4:	add	x1, x1, #0x360
  422fa8:	bl	4049c0 <dcgettext@plt>
  422fac:	mov	x2, x0
  422fb0:	mov	w1, #0x0                   	// #0
  422fb4:	mov	w0, #0x0                   	// #0
  422fb8:	bl	404050 <error@plt>
  422fbc:	b	422e80 <wcrtomb@plt+0x1e260>
  422fc0:	sub	sp, sp, #0x270
  422fc4:	stp	x29, x30, [sp]
  422fc8:	mov	x29, sp
  422fcc:	stp	x19, x20, [sp, #16]
  422fd0:	stp	x21, x22, [sp, #32]
  422fd4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  422fd8:	stp	x23, x24, [sp, #48]
  422fdc:	stp	x25, x26, [sp, #64]
  422fe0:	bl	422440 <wcrtomb@plt+0x1d820>
  422fe4:	add	x0, x21, #0xaf0
  422fe8:	str	x0, [sp, #104]
  422fec:	ldr	x19, [x0, #168]
  422ff0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  422ff4:	cbz	x19, 423b34 <wcrtomb@plt+0x1ef14>
  422ff8:	str	x0, [sp, #112]
  422ffc:	ldr	x0, [x0, #960]
  423000:	cbz	x0, 423034 <wcrtomb@plt+0x1e414>
  423004:	bl	41fd50 <wcrtomb@plt+0x1b130>
  423008:	cbz	w0, 423024 <wcrtomb@plt+0x1e404>
  42300c:	cmp	w0, #0x1
  423010:	b.ne	427190 <wcrtomb@plt+0x22570>  // b.any
  423014:	ldr	x0, [sp, #104]
  423018:	ldr	x0, [x0, #168]
  42301c:	ldr	w0, [x0, #40]
  423020:	cbz	w0, 427150 <wcrtomb@plt+0x22530>
  423024:	bl	41a150 <wcrtomb@plt+0x15530>
  423028:	ldr	x0, [sp, #104]
  42302c:	ldr	x19, [x0, #168]
  423030:	cbz	x19, 423678 <wcrtomb@plt+0x1ea58>
  423034:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  423038:	add	x24, sp, #0x120
  42303c:	add	x22, x22, #0x344
  423040:	mov	w20, #0x0                   	// #0
  423044:	adrp	x25, 493000 <_obstack_memory_used@@Base+0x41bf0>
  423048:	b	423058 <wcrtomb@plt+0x1e438>
  42304c:	ldr	x19, [x19]
  423050:	add	w20, w20, #0x1
  423054:	cbz	x19, 4230c0 <wcrtomb@plt+0x1e4a0>
  423058:	ldr	x0, [x19, #48]
  42305c:	cbnz	x0, 42304c <wcrtomb@plt+0x1e42c>
  423060:	ldr	x0, [x19, #56]
  423064:	cbnz	x0, 42304c <wcrtomb@plt+0x1e42c>
  423068:	ldr	w0, [x19, #32]
  42306c:	tbnz	w0, #28, 42304c <wcrtomb@plt+0x1e42c>
  423070:	ldr	w0, [x19, #40]
  423074:	bl	420060 <wcrtomb@plt+0x1b440>
  423078:	ldr	x0, [x19, #16]
  42307c:	ldrb	w0, [x0]
  423080:	cbz	w0, 42304c <wcrtomb@plt+0x1e42c>
  423084:	add	x0, sp, #0xc8
  423088:	bl	42f3b0 <wcrtomb@plt+0x2a790>
  42308c:	ldr	x0, [x19, #16]
  423090:	mov	x1, x24
  423094:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  423098:	cbnz	w0, 423d40 <wcrtomb@plt+0x1f120>
  42309c:	ldr	w0, [sp, #304]
  4230a0:	and	w0, w0, #0xf000
  4230a4:	cmp	w0, #0x4, lsl #12
  4230a8:	b.eq	423628 <wcrtomb@plt+0x1ea08>  // b.none
  4230ac:	add	x0, sp, #0xc8
  4230b0:	bl	42f438 <wcrtomb@plt+0x2a818>
  4230b4:	ldr	x19, [x19]
  4230b8:	add	w20, w20, #0x1
  4230bc:	cbnz	x19, 423058 <wcrtomb@plt+0x1e438>
  4230c0:	ldr	x0, [sp, #104]
  4230c4:	ldr	x19, [x0, #168]
  4230c8:	mov	w1, w20
  4230cc:	mov	x0, x19
  4230d0:	bl	421578 <wcrtomb@plt+0x1c958>
  4230d4:	mov	x2, #0x0                   	// #0
  4230d8:	mov	x5, x0
  4230dc:	mov	x1, x0
  4230e0:	cbz	x0, 4230f8 <wcrtomb@plt+0x1e4d8>
  4230e4:	nop
  4230e8:	str	x2, [x1, #8]
  4230ec:	mov	x2, x1
  4230f0:	ldr	x1, [x1]
  4230f4:	cbnz	x1, 4230e8 <wcrtomb@plt+0x1e4c8>
  4230f8:	ldr	x19, [sp, #104]
  4230fc:	adrp	x3, 420000 <wcrtomb@plt+0x1b3e0>
  423100:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  423104:	add	x3, x3, #0xaf0
  423108:	add	x2, x2, #0xe88
  42310c:	mov	x4, #0x0                   	// #0
  423110:	mov	x1, #0x0                   	// #0
  423114:	mov	x0, #0x0                   	// #0
  423118:	str	x5, [x19, #168]
  42311c:	bl	444c38 <argp_parse@@Base+0x4e58>
  423120:	ldr	x24, [x19, #168]
  423124:	mov	x25, x0
  423128:	mov	x26, #0x0                   	// #0
  42312c:	mov	w19, #0x0                   	// #0
  423130:	cbz	x24, 4249c4 <wcrtomb@plt+0x1fda4>
  423134:	nop
  423138:	ldr	w0, [x24, #40]
  42313c:	mov	x20, x24
  423140:	ldr	x1, [x24, #16]
  423144:	ldr	x24, [x24]
  423148:	bl	41edd0 <wcrtomb@plt+0x1a1b0>
  42314c:	str	x0, [x20, #88]
  423150:	cbz	x26, 4233c8 <wcrtomb@plt+0x1e7a8>
  423154:	mov	x1, x20
  423158:	mov	x0, x25
  42315c:	bl	444958 <argp_parse@@Base+0x4b78>
  423160:	mov	x22, x0
  423164:	cbz	x0, 4233c8 <wcrtomb@plt+0x1e7a8>
  423168:	ldr	x0, [x20, #64]
  42316c:	cbz	x0, 423378 <wcrtomb@plt+0x1e758>
  423170:	ldr	x0, [x20, #72]
  423174:	cbz	x0, 423180 <wcrtomb@plt+0x1e560>
  423178:	ldp	x1, x2, [x22, #16]
  42317c:	bl	421038 <wcrtomb@plt+0x1c418>
  423180:	ldp	x0, x1, [x20]
  423184:	cbz	x1, 4233f8 <wcrtomb@plt+0x1e7d8>
  423188:	str	x0, [x1]
  42318c:	ldr	x0, [x20]
  423190:	cbz	x0, 4233ec <wcrtomb@plt+0x1e7cc>
  423194:	str	x1, [x0, #8]
  423198:	ldr	x0, [x20, #16]
  42319c:	bl	4047b0 <free@plt>
  4231a0:	ldr	x0, [x20, #88]
  4231a4:	bl	4047b0 <free@plt>
  4231a8:	mov	x0, x20
  4231ac:	bl	4047b0 <free@plt>
  4231b0:	cbnz	x24, 423138 <wcrtomb@plt+0x1e518>
  4231b4:	ldr	x20, [sp, #104]
  4231b8:	mov	x0, x25
  4231bc:	str	x26, [x20, #160]
  4231c0:	bl	444f30 <argp_parse@@Base+0x5150>
  4231c4:	cmp	w19, #0x1
  4231c8:	ldr	x21, [x20, #168]
  4231cc:	b.eq	423428 <wcrtomb@plt+0x1e808>  // b.none
  4231d0:	cmp	w19, #0x2
  4231d4:	ldr	x20, [x21]
  4231d8:	b.eq	4234a0 <wcrtomb@plt+0x1e880>  // b.none
  4231dc:	add	w26, w19, #0x1
  4231e0:	asr	w0, w19, #1
  4231e4:	str	w0, [sp, #120]
  4231e8:	asr	w22, w26, #1
  4231ec:	subs	w0, w22, #0x1
  4231f0:	b.ne	423dc0 <wcrtomb@plt+0x1f1a0>  // b.any
  4231f4:	mov	x23, x20
  4231f8:	add	x20, sp, #0xc8
  4231fc:	str	xzr, [x21]
  423200:	ldr	w0, [sp, #120]
  423204:	cmp	w0, #0x1
  423208:	b.eq	423540 <wcrtomb@plt+0x1e920>  // b.none
  42320c:	cmp	w0, #0x2
  423210:	ldr	x26, [x23]
  423214:	b.eq	4234f4 <wcrtomb@plt+0x1e8d4>  // b.none
  423218:	ldr	w0, [sp, #120]
  42321c:	stp	x27, x28, [sp, #80]
  423220:	add	w24, w0, #0x1
  423224:	asr	w0, w19, #2
  423228:	str	w0, [sp, #120]
  42322c:	asr	w22, w24, #1
  423230:	subs	w0, w22, #0x1
  423234:	b.ne	423684 <wcrtomb@plt+0x1ea64>  // b.any
  423238:	mov	x28, x26
  42323c:	str	xzr, [x23]
  423240:	ldr	w0, [sp, #120]
  423244:	cmp	w0, #0x1
  423248:	b.eq	423a90 <wcrtomb@plt+0x1ee70>  // b.none
  42324c:	cmp	w0, #0x2
  423250:	ldr	x24, [x28]
  423254:	b.eq	423a44 <wcrtomb@plt+0x1ee24>  // b.none
  423258:	ldr	w0, [sp, #120]
  42325c:	asr	w22, w19, #3
  423260:	add	w25, w0, #0x1
  423264:	asr	w0, w25, #1
  423268:	subs	w1, w0, #0x1
  42326c:	b.ne	423918 <wcrtomb@plt+0x1ecf8>  // b.any
  423270:	mov	x26, x24
  423274:	str	xzr, [x28]
  423278:	cmp	w22, #0x1
  42327c:	b.eq	423bbc <wcrtomb@plt+0x1ef9c>  // b.none
  423280:	cmp	w22, #0x2
  423284:	ldr	x27, [x26]
  423288:	b.eq	423b70 <wcrtomb@plt+0x1ef50>  // b.none
  42328c:	add	w22, w22, #0x1
  423290:	asr	w25, w19, #4
  423294:	asr	w0, w22, #1
  423298:	subs	w1, w0, #0x1
  42329c:	b.ne	424b58 <wcrtomb@plt+0x1ff38>  // b.any
  4232a0:	mov	x24, x27
  4232a4:	str	xzr, [x26]
  4232a8:	cmp	w25, #0x1
  4232ac:	b.eq	42597c <wcrtomb@plt+0x20d5c>  // b.none
  4232b0:	cmp	w25, #0x2
  4232b4:	ldr	x22, [x24]
  4232b8:	b.eq	425930 <wcrtomb@plt+0x20d10>  // b.none
  4232bc:	add	w1, w25, #0x1
  4232c0:	asr	w19, w19, #5
  4232c4:	mov	x0, x24
  4232c8:	asr	w1, w1, #1
  4232cc:	subs	w2, w1, #0x1
  4232d0:	b.ne	4252f8 <wcrtomb@plt+0x206d8>  // b.any
  4232d4:	str	xzr, [x0]
  4232d8:	adrp	x25, 420000 <wcrtomb@plt+0x1b3e0>
  4232dc:	add	x25, x25, #0xe90
  4232e0:	mov	x0, x24
  4232e4:	mov	x2, x25
  4232e8:	bl	420990 <wcrtomb@plt+0x1bd70>
  4232ec:	mov	x2, x25
  4232f0:	mov	x24, x0
  4232f4:	mov	w1, w19
  4232f8:	mov	x0, x22
  4232fc:	bl	420990 <wcrtomb@plt+0x1bd70>
  423300:	cmp	x0, #0x0
  423304:	mov	x22, x0
  423308:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  42330c:	b.eq	427124 <wcrtomb@plt+0x22504>  // b.none
  423310:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423314:	ldr	x25, [x0, #888]
  423318:	cbz	x25, 426b50 <wcrtomb@plt+0x21f30>
  42331c:	ldr	x27, [x22, #48]
  423320:	mov	x19, x20
  423324:	ldr	x2, [x24, #48]
  423328:	cmp	x25, x27
  42332c:	cset	w0, ls  // ls = plast
  423330:	cmp	x25, x2
  423334:	cset	w1, ls  // ls = plast
  423338:	subs	w0, w0, w1
  42333c:	b.ne	423354 <wcrtomb@plt+0x1e734>  // b.any
  423340:	ldr	x1, [x22, #16]
  423344:	str	x2, [sp, #120]
  423348:	ldr	x0, [x24, #16]
  42334c:	bl	404710 <strcmp@plt>
  423350:	ldr	x2, [sp, #120]
  423354:	tbnz	w0, #31, 425b10 <wcrtomb@plt+0x20ef0>
  423358:	ldr	x1, [x22]
  42335c:	str	x22, [x19]
  423360:	mov	x0, x22
  423364:	cbz	x1, 425d3c <wcrtomb@plt+0x2111c>
  423368:	mov	x22, x1
  42336c:	mov	x19, x0
  423370:	ldr	x27, [x1, #48]
  423374:	b	423328 <wcrtomb@plt+0x1e708>
  423378:	ldr	x0, [x22, #72]
  42337c:	cbz	x0, 423388 <wcrtomb@plt+0x1e768>
  423380:	ldp	x1, x2, [x20, #16]
  423384:	bl	421038 <wcrtomb@plt+0x1c418>
  423388:	mov	x1, x20
  42338c:	mov	x0, x25
  423390:	bl	445628 <argp_parse@@Base+0x5848>
  423394:	ldp	x1, x0, [x22]
  423398:	cbz	x0, 423410 <wcrtomb@plt+0x1e7f0>
  42339c:	str	x1, [x0]
  4233a0:	ldr	x1, [x22]
  4233a4:	cbz	x1, 423404 <wcrtomb@plt+0x1e7e4>
  4233a8:	str	x0, [x1, #8]
  4233ac:	ldr	x0, [x22, #16]
  4233b0:	sub	w19, w19, #0x1
  4233b4:	bl	4047b0 <free@plt>
  4233b8:	ldr	x0, [x22, #88]
  4233bc:	bl	4047b0 <free@plt>
  4233c0:	mov	x0, x22
  4233c4:	bl	4047b0 <free@plt>
  4233c8:	str	xzr, [x20, #48]
  4233cc:	mov	x1, x20
  4233d0:	mov	x0, x25
  4233d4:	bl	445410 <argp_parse@@Base+0x5630>
  4233d8:	cbz	x0, 427130 <wcrtomb@plt+0x22510>
  4233dc:	add	w19, w19, #0x1
  4233e0:	mov	x26, x20
  4233e4:	cbnz	x24, 423138 <wcrtomb@plt+0x1e518>
  4233e8:	b	4231b4 <wcrtomb@plt+0x1e594>
  4233ec:	ldr	x0, [sp, #104]
  4233f0:	str	x1, [x0, #160]
  4233f4:	b	423198 <wcrtomb@plt+0x1e578>
  4233f8:	ldr	x2, [sp, #104]
  4233fc:	str	x0, [x2, #168]
  423400:	b	423190 <wcrtomb@plt+0x1e570>
  423404:	ldr	x1, [sp, #104]
  423408:	str	x0, [x1, #160]
  42340c:	b	4233ac <wcrtomb@plt+0x1e78c>
  423410:	ldr	x2, [sp, #104]
  423414:	str	x1, [x2, #168]
  423418:	b	4233a4 <wcrtomb@plt+0x1e784>
  42341c:	cbz	x21, 423b60 <wcrtomb@plt+0x1ef40>
  423420:	str	x21, [x20]
  423424:	ldr	x21, [sp, #200]
  423428:	cbz	x21, 4246d8 <wcrtomb@plt+0x1fab8>
  42342c:	ldr	x20, [x21]
  423430:	str	xzr, [x21, #8]
  423434:	cbz	x20, 423454 <wcrtomb@plt+0x1e834>
  423438:	mov	x1, x21
  42343c:	nop
  423440:	mov	x0, x20
  423444:	ldr	x20, [x20]
  423448:	str	x1, [x0, #8]
  42344c:	mov	x1, x0
  423450:	cbnz	x20, 423440 <wcrtomb@plt+0x1e820>
  423454:	ldp	x1, x0, [sp, #104]
  423458:	str	x21, [x1, #168]
  42345c:	ldr	x0, [x0, #960]
  423460:	cbnz	x0, 423470 <wcrtomb@plt+0x1e850>
  423464:	b	423484 <wcrtomb@plt+0x1e864>
  423468:	ldr	x21, [x21]
  42346c:	cbz	x21, 423484 <wcrtomb@plt+0x1e864>
  423470:	ldr	x0, [x21, #16]
  423474:	ldrb	w0, [x0]
  423478:	cbz	w0, 423468 <wcrtomb@plt+0x1e848>
  42347c:	ldr	x0, [x21, #56]
  423480:	bl	419d78 <wcrtomb@plt+0x15158>
  423484:	ldp	x29, x30, [sp]
  423488:	ldp	x19, x20, [sp, #16]
  42348c:	ldp	x21, x22, [sp, #32]
  423490:	ldp	x23, x24, [sp, #48]
  423494:	ldp	x25, x26, [sp, #64]
  423498:	add	sp, sp, #0x270
  42349c:	ret
  4234a0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4234a4:	ldr	x0, [x20, #48]
  4234a8:	ldr	x1, [x1, #888]
  4234ac:	ldr	x2, [x21, #48]
  4234b0:	cbz	x1, 423664 <wcrtomb@plt+0x1ea44>
  4234b4:	cmp	x1, x0
  4234b8:	cset	w0, ls  // ls = plast
  4234bc:	cmp	x1, x2
  4234c0:	cset	w1, ls  // ls = plast
  4234c4:	subs	w0, w0, w1
  4234c8:	b.ne	4234d8 <wcrtomb@plt+0x1e8b8>  // b.any
  4234cc:	ldr	x1, [x20, #16]
  4234d0:	ldr	x0, [x21, #16]
  4234d4:	bl	404710 <strcmp@plt>
  4234d8:	cmp	w0, #0x0
  4234dc:	b.le	423430 <wcrtomb@plt+0x1e810>
  4234e0:	str	x21, [x20]
  4234e4:	str	xzr, [x21]
  4234e8:	mov	x21, x20
  4234ec:	ldr	x20, [x20]
  4234f0:	b	423430 <wcrtomb@plt+0x1e810>
  4234f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4234f8:	ldr	x2, [x23, #48]
  4234fc:	ldr	x1, [x0, #888]
  423500:	ldr	x5, [x26, #48]
  423504:	cbnz	x1, 4247c8 <wcrtomb@plt+0x1fba8>
  423508:	cmp	x5, #0x0
  42350c:	cset	w0, ne  // ne = any
  423510:	cmp	x2, #0x0
  423514:	cset	w1, ne  // ne = any
  423518:	subs	w0, w0, w1
  42351c:	b.ne	42352c <wcrtomb@plt+0x1e90c>  // b.any
  423520:	ldr	x0, [x23, #16]
  423524:	ldr	x1, [x26, #16]
  423528:	bl	404710 <strcmp@plt>
  42352c:	cmp	w0, #0x0
  423530:	b.le	423540 <wcrtomb@plt+0x1e920>
  423534:	str	x23, [x26]
  423538:	str	xzr, [x23]
  42353c:	mov	x23, x26
  423540:	cmp	x21, #0x0
  423544:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  423548:	b.eq	42341c <wcrtomb@plt+0x1e7fc>  // b.none
  42354c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423550:	ldr	x19, [x0, #888]
  423554:	cbz	x19, 4235c0 <wcrtomb@plt+0x1e9a0>
  423558:	ldr	x24, [x21, #48]
  42355c:	ldr	x22, [x23, #48]
  423560:	cmp	x19, x22
  423564:	cset	w0, ls  // ls = plast
  423568:	cmp	x19, x24
  42356c:	cset	w1, ls  // ls = plast
  423570:	subs	w0, w0, w1
  423574:	b.ne	423584 <wcrtomb@plt+0x1e964>  // b.any
  423578:	ldr	x0, [x21, #16]
  42357c:	ldr	x1, [x23, #16]
  423580:	bl	404710 <strcmp@plt>
  423584:	tbnz	w0, #31, 4235a4 <wcrtomb@plt+0x1e984>
  423588:	ldr	x0, [x23]
  42358c:	str	x23, [x20]
  423590:	mov	x20, x23
  423594:	cbz	x0, 423420 <wcrtomb@plt+0x1e800>
  423598:	mov	x23, x0
  42359c:	ldr	x22, [x0, #48]
  4235a0:	b	423560 <wcrtomb@plt+0x1e940>
  4235a4:	ldr	x0, [x21]
  4235a8:	str	x21, [x20]
  4235ac:	mov	x20, x21
  4235b0:	cbz	x0, 423b60 <wcrtomb@plt+0x1ef40>
  4235b4:	mov	x21, x0
  4235b8:	ldr	x24, [x0, #48]
  4235bc:	b	423560 <wcrtomb@plt+0x1e940>
  4235c0:	ldr	x22, [x21, #48]
  4235c4:	ldr	x19, [x23, #48]
  4235c8:	cmp	x19, #0x0
  4235cc:	cset	w0, ne  // ne = any
  4235d0:	cmp	x22, #0x0
  4235d4:	cset	w1, ne  // ne = any
  4235d8:	subs	w0, w0, w1
  4235dc:	b.ne	4235ec <wcrtomb@plt+0x1e9cc>  // b.any
  4235e0:	ldr	x0, [x21, #16]
  4235e4:	ldr	x1, [x23, #16]
  4235e8:	bl	404710 <strcmp@plt>
  4235ec:	tbnz	w0, #31, 42360c <wcrtomb@plt+0x1e9ec>
  4235f0:	ldr	x0, [x23]
  4235f4:	str	x23, [x20]
  4235f8:	mov	x20, x23
  4235fc:	cbz	x0, 423420 <wcrtomb@plt+0x1e800>
  423600:	mov	x23, x0
  423604:	ldr	x19, [x0, #48]
  423608:	b	4235c8 <wcrtomb@plt+0x1e9a8>
  42360c:	ldr	x0, [x21]
  423610:	str	x21, [x20]
  423614:	mov	x20, x21
  423618:	cbz	x0, 423b60 <wcrtomb@plt+0x1ef40>
  42361c:	mov	x21, x0
  423620:	ldr	x22, [x0, #48]
  423624:	b	4235c8 <wcrtomb@plt+0x1e9a8>
  423628:	ldr	w0, [x25, #2200]
  42362c:	ldr	x1, [x19, #16]
  423630:	ldr	w2, [x22]
  423634:	orr	w2, w2, #0x4000
  423638:	bl	4045b0 <__openat_2@plt>
  42363c:	mov	w1, w0
  423640:	tbnz	w0, #31, 4247bc <wcrtomb@plt+0x1fb9c>
  423644:	mov	x2, x24
  423648:	mov	w0, #0x0                   	// #0
  42364c:	str	w1, [sp, #608]
  423650:	bl	4049a0 <__fxstat@plt>
  423654:	cbz	w0, 4249f0 <wcrtomb@plt+0x1fdd0>
  423658:	ldr	x0, [x19, #16]
  42365c:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  423660:	b	4230ac <wcrtomb@plt+0x1e48c>
  423664:	cmp	x0, #0x0
  423668:	cset	w0, ne  // ne = any
  42366c:	cmp	x2, #0x0
  423670:	cset	w1, ne  // ne = any
  423674:	b	4234c4 <wcrtomb@plt+0x1e8a4>
  423678:	mov	w20, #0x0                   	// #0
  42367c:	b	4230c8 <wcrtomb@plt+0x1e4a8>
  423680:	mov	x26, x28
  423684:	subs	w0, w0, #0x1
  423688:	ldr	x28, [x26]
  42368c:	b.ne	423680 <wcrtomb@plt+0x1ea60>  // b.any
  423690:	str	xzr, [x26]
  423694:	cmp	w22, #0x1
  423698:	b.eq	423240 <wcrtomb@plt+0x1e620>  // b.none
  42369c:	cmp	w22, #0x2
  4236a0:	ldr	x27, [x23]
  4236a4:	b.eq	424704 <wcrtomb@plt+0x1fae4>  // b.none
  4236a8:	add	w22, w22, #0x1
  4236ac:	asr	w0, w24, #2
  4236b0:	str	w0, [sp, #128]
  4236b4:	asr	w0, w22, #1
  4236b8:	subs	w1, w0, #0x1
  4236bc:	b.ne	4237e8 <wcrtomb@plt+0x1ebc8>  // b.any
  4236c0:	mov	x25, x27
  4236c4:	str	xzr, [x23]
  4236c8:	ldr	w0, [sp, #128]
  4236cc:	cmp	w0, #0x1
  4236d0:	b.eq	423ca4 <wcrtomb@plt+0x1f084>  // b.none
  4236d4:	cmp	w0, #0x2
  4236d8:	ldr	x22, [x25]
  4236dc:	b.eq	423c58 <wcrtomb@plt+0x1f038>  // b.none
  4236e0:	ldr	w0, [sp, #128]
  4236e4:	add	w26, w0, #0x1
  4236e8:	asr	w0, w24, #3
  4236ec:	str	w0, [sp, #128]
  4236f0:	asr	w0, w26, #1
  4236f4:	subs	w1, w0, #0x1
  4236f8:	b.ne	424a6c <wcrtomb@plt+0x1fe4c>  // b.any
  4236fc:	mov	x27, x22
  423700:	str	xzr, [x25]
  423704:	ldr	w0, [sp, #128]
  423708:	cmp	w0, #0x1
  42370c:	b.eq	425a6c <wcrtomb@plt+0x20e4c>  // b.none
  423710:	cmp	w0, #0x2
  423714:	ldr	x6, [x27]
  423718:	b.eq	425a18 <wcrtomb@plt+0x20df8>  // b.none
  42371c:	ldr	w0, [sp, #128]
  423720:	asr	w24, w24, #4
  423724:	add	w1, w0, #0x1
  423728:	mov	x0, x27
  42372c:	asr	w1, w1, #1
  423730:	subs	w2, w1, #0x1
  423734:	b.ne	425258 <wcrtomb@plt+0x20638>  // b.any
  423738:	str	xzr, [x0]
  42373c:	adrp	x22, 420000 <wcrtomb@plt+0x1b3e0>
  423740:	add	x22, x22, #0xe90
  423744:	mov	x0, x27
  423748:	mov	x2, x22
  42374c:	str	x6, [sp, #128]
  423750:	bl	420990 <wcrtomb@plt+0x1bd70>
  423754:	mov	x26, x0
  423758:	ldr	x6, [sp, #128]
  42375c:	mov	w1, w24
  423760:	mov	x2, x22
  423764:	mov	x0, x6
  423768:	bl	420990 <wcrtomb@plt+0x1bd70>
  42376c:	mov	x24, x0
  423770:	cmp	x26, #0x0
  423774:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  423778:	b.eq	427100 <wcrtomb@plt+0x224e0>  // b.none
  42377c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423780:	ldr	x27, [x0, #888]
  423784:	cbz	x27, 4267d4 <wcrtomb@plt+0x21bb4>
  423788:	ldr	x2, [x24, #48]
  42378c:	mov	x22, x20
  423790:	ldr	x6, [x26, #48]
  423794:	cmp	x27, x2
  423798:	cset	w0, ls  // ls = plast
  42379c:	cmp	x27, x6
  4237a0:	cset	w1, ls  // ls = plast
  4237a4:	subs	w0, w0, w1
  4237a8:	b.ne	4237c0 <wcrtomb@plt+0x1eba0>  // b.any
  4237ac:	ldr	x1, [x24, #16]
  4237b0:	stp	x2, x6, [sp, #128]
  4237b4:	ldr	x0, [x26, #16]
  4237b8:	bl	404710 <strcmp@plt>
  4237bc:	ldp	x2, x6, [sp, #128]
  4237c0:	tbnz	w0, #31, 425bd0 <wcrtomb@plt+0x20fb0>
  4237c4:	ldr	x1, [x24]
  4237c8:	str	x24, [x22]
  4237cc:	mov	x0, x24
  4237d0:	cbz	x1, 425eac <wcrtomb@plt+0x2128c>
  4237d4:	mov	x24, x1
  4237d8:	mov	x22, x0
  4237dc:	ldr	x2, [x1, #48]
  4237e0:	b	423794 <wcrtomb@plt+0x1eb74>
  4237e4:	mov	x27, x25
  4237e8:	subs	w1, w1, #0x1
  4237ec:	ldr	x25, [x27]
  4237f0:	b.ne	4237e4 <wcrtomb@plt+0x1ebc4>  // b.any
  4237f4:	str	xzr, [x27]
  4237f8:	cmp	w0, #0x1
  4237fc:	b.eq	4236c8 <wcrtomb@plt+0x1eaa8>  // b.none
  423800:	cmp	w0, #0x2
  423804:	ldr	x27, [x23]
  423808:	b.eq	425df8 <wcrtomb@plt+0x211d8>  // b.none
  42380c:	add	w0, w0, #0x1
  423810:	asr	w1, w22, #2
  423814:	str	w1, [sp, #136]
  423818:	asr	w1, w0, #1
  42381c:	subs	w7, w1, #0x1
  423820:	b.ne	424c4c <wcrtomb@plt+0x2002c>  // b.any
  423824:	mov	x26, x27
  423828:	str	xzr, [x23]
  42382c:	ldr	w0, [sp, #136]
  423830:	cmp	w0, #0x1
  423834:	b.eq	42588c <wcrtomb@plt+0x20c6c>  // b.none
  423838:	cmp	w0, #0x2
  42383c:	ldr	x7, [x26]
  423840:	b.eq	425838 <wcrtomb@plt+0x20c18>  // b.none
  423844:	ldr	w0, [sp, #136]
  423848:	asr	w22, w22, #3
  42384c:	add	w1, w0, #0x1
  423850:	mov	x0, x26
  423854:	asr	w1, w1, #1
  423858:	subs	w2, w1, #0x1
  42385c:	b.ne	42530c <wcrtomb@plt+0x206ec>  // b.any
  423860:	str	xzr, [x0]
  423864:	adrp	x27, 420000 <wcrtomb@plt+0x1b3e0>
  423868:	add	x27, x27, #0xe90
  42386c:	mov	x0, x26
  423870:	mov	x2, x27
  423874:	str	x7, [sp, #136]
  423878:	bl	420990 <wcrtomb@plt+0x1bd70>
  42387c:	mov	x26, x0
  423880:	ldr	x7, [sp, #136]
  423884:	mov	x2, x27
  423888:	mov	w1, w22
  42388c:	mov	x0, x7
  423890:	bl	420990 <wcrtomb@plt+0x1bd70>
  423894:	cmp	x0, #0x0
  423898:	mov	x27, x0
  42389c:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  4238a0:	b.eq	4270d0 <wcrtomb@plt+0x224b0>  // b.none
  4238a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4238a8:	ldr	x2, [x0, #888]
  4238ac:	cbz	x2, 426ad4 <wcrtomb@plt+0x21eb4>
  4238b0:	ldr	x8, [x26, #48]
  4238b4:	mov	x22, x20
  4238b8:	ldr	x7, [x27, #48]
  4238bc:	cmp	x2, x7
  4238c0:	cset	w0, ls  // ls = plast
  4238c4:	cmp	x2, x8
  4238c8:	cset	w1, ls  // ls = plast
  4238cc:	subs	w0, w0, w1
  4238d0:	b.ne	4238f0 <wcrtomb@plt+0x1ecd0>  // b.any
  4238d4:	ldr	x0, [x26, #16]
  4238d8:	stp	x2, x7, [sp, #136]
  4238dc:	ldr	x1, [x27, #16]
  4238e0:	str	x8, [sp, #152]
  4238e4:	bl	404710 <strcmp@plt>
  4238e8:	ldp	x2, x7, [sp, #136]
  4238ec:	ldr	x8, [sp, #152]
  4238f0:	tbnz	w0, #31, 425cf0 <wcrtomb@plt+0x210d0>
  4238f4:	ldr	x1, [x27]
  4238f8:	str	x27, [x22]
  4238fc:	mov	x0, x27
  423900:	cbz	x1, 425d5c <wcrtomb@plt+0x2113c>
  423904:	mov	x27, x1
  423908:	mov	x22, x0
  42390c:	ldr	x7, [x1, #48]
  423910:	b	4238bc <wcrtomb@plt+0x1ec9c>
  423914:	mov	x24, x26
  423918:	subs	w1, w1, #0x1
  42391c:	ldr	x26, [x24]
  423920:	b.ne	423914 <wcrtomb@plt+0x1ecf4>  // b.any
  423924:	str	xzr, [x24]
  423928:	cmp	w0, #0x1
  42392c:	b.eq	423278 <wcrtomb@plt+0x1e658>  // b.none
  423930:	cmp	w0, #0x2
  423934:	ldr	x24, [x28]
  423938:	b.eq	425d88 <wcrtomb@plt+0x21168>  // b.none
  42393c:	add	w0, w0, #0x1
  423940:	asr	w1, w25, #2
  423944:	str	w1, [sp, #120]
  423948:	asr	w1, w0, #1
  42394c:	subs	w5, w1, #0x1
  423950:	b.ne	424d40 <wcrtomb@plt+0x20120>  // b.any
  423954:	mov	x27, x24
  423958:	str	xzr, [x28]
  42395c:	ldr	w0, [sp, #120]
  423960:	cmp	w0, #0x1
  423964:	b.eq	425794 <wcrtomb@plt+0x20b74>  // b.none
  423968:	cmp	w0, #0x2
  42396c:	ldr	x5, [x27]
  423970:	b.eq	425740 <wcrtomb@plt+0x20b20>  // b.none
  423974:	ldr	w0, [sp, #120]
  423978:	asr	w25, w25, #3
  42397c:	add	w1, w0, #0x1
  423980:	mov	x0, x27
  423984:	asr	w1, w1, #1
  423988:	subs	w2, w1, #0x1
  42398c:	b.ne	425320 <wcrtomb@plt+0x20700>  // b.any
  423990:	str	xzr, [x0]
  423994:	adrp	x24, 420000 <wcrtomb@plt+0x1b3e0>
  423998:	add	x24, x24, #0xe90
  42399c:	mov	x0, x27
  4239a0:	mov	x2, x24
  4239a4:	str	x5, [sp, #120]
  4239a8:	bl	420990 <wcrtomb@plt+0x1bd70>
  4239ac:	mov	x27, x0
  4239b0:	ldr	x5, [sp, #120]
  4239b4:	mov	w1, w25
  4239b8:	mov	x2, x24
  4239bc:	mov	x0, x5
  4239c0:	bl	420990 <wcrtomb@plt+0x1bd70>
  4239c4:	cmp	x0, #0x0
  4239c8:	mov	x25, x0
  4239cc:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  4239d0:	b.eq	4270dc <wcrtomb@plt+0x224bc>  // b.none
  4239d4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4239d8:	ldr	x2, [x0, #888]
  4239dc:	cbz	x2, 4266dc <wcrtomb@plt+0x21abc>
  4239e0:	ldr	x5, [x25, #48]
  4239e4:	mov	x24, x20
  4239e8:	ldr	x6, [x27, #48]
  4239ec:	cmp	x2, x5
  4239f0:	cset	w0, ls  // ls = plast
  4239f4:	cmp	x2, x6
  4239f8:	cset	w1, ls  // ls = plast
  4239fc:	subs	w0, w0, w1
  423a00:	b.ne	423a20 <wcrtomb@plt+0x1ee00>  // b.any
  423a04:	ldr	x1, [x25, #16]
  423a08:	stp	x2, x5, [sp, #120]
  423a0c:	ldr	x0, [x27, #16]
  423a10:	str	x6, [sp, #136]
  423a14:	bl	404710 <strcmp@plt>
  423a18:	ldp	x2, x5, [sp, #120]
  423a1c:	ldr	x6, [sp, #136]
  423a20:	tbnz	w0, #31, 425b30 <wcrtomb@plt+0x20f10>
  423a24:	ldr	x1, [x25]
  423a28:	str	x25, [x24]
  423a2c:	mov	x0, x25
  423a30:	cbz	x1, 425d4c <wcrtomb@plt+0x2112c>
  423a34:	mov	x25, x1
  423a38:	mov	x24, x0
  423a3c:	ldr	x5, [x1, #48]
  423a40:	b	4239ec <wcrtomb@plt+0x1edcc>
  423a44:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  423a48:	ldr	x0, [x24, #48]
  423a4c:	ldr	x1, [x1, #888]
  423a50:	ldr	x2, [x28, #48]
  423a54:	cbz	x1, 424a54 <wcrtomb@plt+0x1fe34>
  423a58:	cmp	x0, x1
  423a5c:	cset	w0, cs  // cs = hs, nlast
  423a60:	cmp	x1, x2
  423a64:	cset	w1, ls  // ls = plast
  423a68:	subs	w0, w0, w1
  423a6c:	b.ne	423a7c <wcrtomb@plt+0x1ee5c>  // b.any
  423a70:	ldr	x1, [x24, #16]
  423a74:	ldr	x0, [x28, #16]
  423a78:	bl	404710 <strcmp@plt>
  423a7c:	cmp	w0, #0x0
  423a80:	b.le	423a90 <wcrtomb@plt+0x1ee70>
  423a84:	str	x28, [x24]
  423a88:	str	xzr, [x28]
  423a8c:	mov	x28, x24
  423a90:	cmp	x23, #0x0
  423a94:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  423a98:	b.eq	425d10 <wcrtomb@plt+0x210f0>  // b.none
  423a9c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423aa0:	ldr	x22, [x0, #888]
  423aa4:	cbz	x22, 423d4c <wcrtomb@plt+0x1f12c>
  423aa8:	ldr	x25, [x23, #48]
  423aac:	mov	x19, x20
  423ab0:	ldr	x24, [x28, #48]
  423ab4:	nop
  423ab8:	cmp	x22, x24
  423abc:	cset	w0, ls  // ls = plast
  423ac0:	cmp	x22, x25
  423ac4:	cset	w1, ls  // ls = plast
  423ac8:	subs	w0, w0, w1
  423acc:	b.ne	423adc <wcrtomb@plt+0x1eebc>  // b.any
  423ad0:	ldr	x0, [x23, #16]
  423ad4:	ldr	x1, [x28, #16]
  423ad8:	bl	404710 <strcmp@plt>
  423adc:	tbnz	w0, #31, 423b00 <wcrtomb@plt+0x1eee0>
  423ae0:	ldr	x1, [x28]
  423ae4:	str	x28, [x19]
  423ae8:	mov	x0, x28
  423aec:	cbz	x1, 423b24 <wcrtomb@plt+0x1ef04>
  423af0:	mov	x28, x1
  423af4:	mov	x19, x0
  423af8:	ldr	x24, [x1, #48]
  423afc:	b	423ab8 <wcrtomb@plt+0x1ee98>
  423b00:	ldr	x1, [x23]
  423b04:	str	x23, [x19]
  423b08:	mov	x0, x23
  423b0c:	cbz	x1, 423b20 <wcrtomb@plt+0x1ef00>
  423b10:	mov	x23, x1
  423b14:	mov	x19, x0
  423b18:	ldr	x25, [x1, #48]
  423b1c:	b	423ab8 <wcrtomb@plt+0x1ee98>
  423b20:	mov	x23, x28
  423b24:	ldp	x27, x28, [sp, #80]
  423b28:	str	x23, [x0]
  423b2c:	ldr	x23, [sp, #200]
  423b30:	b	423540 <wcrtomb@plt+0x1e920>
  423b34:	mov	x19, x0
  423b38:	mov	x3, #0x0                   	// #0
  423b3c:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  423b40:	mov	w2, #0x0                   	// #0
  423b44:	add	x0, x0, #0x348
  423b48:	mov	w1, #0x0                   	// #0
  423b4c:	str	x19, [sp, #112]
  423b50:	bl	422358 <wcrtomb@plt+0x1d738>
  423b54:	ldr	x0, [x19, #960]
  423b58:	cbnz	x0, 423004 <wcrtomb@plt+0x1e3e4>
  423b5c:	b	423028 <wcrtomb@plt+0x1e408>
  423b60:	mov	x21, x23
  423b64:	str	x21, [x20]
  423b68:	ldr	x21, [sp, #200]
  423b6c:	b	423428 <wcrtomb@plt+0x1e808>
  423b70:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  423b74:	ldr	x2, [x26, #48]
  423b78:	ldr	x1, [x1, #888]
  423b7c:	ldr	x0, [x27, #48]
  423b80:	cbnz	x1, 426670 <wcrtomb@plt+0x21a50>
  423b84:	cmp	x0, #0x0
  423b88:	cset	w0, ne  // ne = any
  423b8c:	cmp	x2, #0x0
  423b90:	cset	w1, ne  // ne = any
  423b94:	subs	w0, w0, w1
  423b98:	b.ne	423ba8 <wcrtomb@plt+0x1ef88>  // b.any
  423b9c:	ldr	x0, [x26, #16]
  423ba0:	ldr	x1, [x27, #16]
  423ba4:	bl	404710 <strcmp@plt>
  423ba8:	cmp	w0, #0x0
  423bac:	b.le	423bbc <wcrtomb@plt+0x1ef9c>
  423bb0:	str	x26, [x27]
  423bb4:	str	xzr, [x26]
  423bb8:	mov	x26, x27
  423bbc:	cmp	x28, #0x0
  423bc0:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  423bc4:	b.eq	426378 <wcrtomb@plt+0x21758>  // b.none
  423bc8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423bcc:	ldr	x22, [x0, #888]
  423bd0:	cbz	x22, 4247dc <wcrtomb@plt+0x1fbbc>
  423bd4:	ldr	x24, [x26, #48]
  423bd8:	mov	x19, x20
  423bdc:	ldr	x25, [x28, #48]
  423be0:	cmp	x22, x24
  423be4:	cset	w0, ls  // ls = plast
  423be8:	cmp	x22, x25
  423bec:	cset	w1, ls  // ls = plast
  423bf0:	subs	w0, w0, w1
  423bf4:	b.ne	423c04 <wcrtomb@plt+0x1efe4>  // b.any
  423bf8:	ldr	x1, [x26, #16]
  423bfc:	ldr	x0, [x28, #16]
  423c00:	bl	404710 <strcmp@plt>
  423c04:	tbnz	w0, #31, 423c28 <wcrtomb@plt+0x1f008>
  423c08:	ldr	x1, [x26]
  423c0c:	str	x26, [x19]
  423c10:	mov	x0, x26
  423c14:	cbz	x1, 423c4c <wcrtomb@plt+0x1f02c>
  423c18:	mov	x26, x1
  423c1c:	mov	x19, x0
  423c20:	ldr	x24, [x1, #48]
  423c24:	b	423be0 <wcrtomb@plt+0x1efc0>
  423c28:	ldr	x1, [x28]
  423c2c:	str	x28, [x19]
  423c30:	mov	x0, x28
  423c34:	cbz	x1, 423c48 <wcrtomb@plt+0x1f028>
  423c38:	mov	x28, x1
  423c3c:	mov	x19, x0
  423c40:	ldr	x25, [x1, #48]
  423c44:	b	423be0 <wcrtomb@plt+0x1efc0>
  423c48:	mov	x28, x26
  423c4c:	str	x28, [x0]
  423c50:	ldr	x28, [sp, #200]
  423c54:	b	423a90 <wcrtomb@plt+0x1ee70>
  423c58:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  423c5c:	ldr	x0, [x22, #48]
  423c60:	ldr	x1, [x1, #888]
  423c64:	ldr	x6, [x25, #48]
  423c68:	cbnz	x1, 426634 <wcrtomb@plt+0x21a14>
  423c6c:	cmp	x0, #0x0
  423c70:	cset	w0, ne  // ne = any
  423c74:	cmp	x6, #0x0
  423c78:	cset	w1, ne  // ne = any
  423c7c:	subs	w0, w0, w1
  423c80:	b.ne	423c90 <wcrtomb@plt+0x1f070>  // b.any
  423c84:	ldr	x1, [x22, #16]
  423c88:	ldr	x0, [x25, #16]
  423c8c:	bl	404710 <strcmp@plt>
  423c90:	cmp	w0, #0x0
  423c94:	b.le	423ca4 <wcrtomb@plt+0x1f084>
  423c98:	str	x25, [x22]
  423c9c:	str	xzr, [x25]
  423ca0:	mov	x25, x22
  423ca4:	cmp	x25, #0x0
  423ca8:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  423cac:	b.eq	42636c <wcrtomb@plt+0x2174c>  // b.none
  423cb0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423cb4:	ldr	x24, [x0, #888]
  423cb8:	cbz	x24, 424850 <wcrtomb@plt+0x1fc30>
  423cbc:	ldr	x27, [x23, #48]
  423cc0:	mov	x22, x20
  423cc4:	ldr	x26, [x25, #48]
  423cc8:	cmp	x24, x26
  423ccc:	cset	w0, ls  // ls = plast
  423cd0:	cmp	x24, x27
  423cd4:	cset	w1, ls  // ls = plast
  423cd8:	subs	w0, w0, w1
  423cdc:	b.ne	423cec <wcrtomb@plt+0x1f0cc>  // b.any
  423ce0:	ldr	x0, [x23, #16]
  423ce4:	ldr	x1, [x25, #16]
  423ce8:	bl	404710 <strcmp@plt>
  423cec:	tbnz	w0, #31, 423d10 <wcrtomb@plt+0x1f0f0>
  423cf0:	ldr	x1, [x25]
  423cf4:	str	x25, [x22]
  423cf8:	mov	x0, x25
  423cfc:	cbz	x1, 423d34 <wcrtomb@plt+0x1f114>
  423d00:	mov	x25, x1
  423d04:	mov	x22, x0
  423d08:	ldr	x26, [x1, #48]
  423d0c:	b	423cc8 <wcrtomb@plt+0x1f0a8>
  423d10:	ldr	x1, [x23]
  423d14:	str	x23, [x22]
  423d18:	mov	x0, x23
  423d1c:	cbz	x1, 423d30 <wcrtomb@plt+0x1f110>
  423d20:	mov	x23, x1
  423d24:	mov	x22, x0
  423d28:	ldr	x27, [x1, #48]
  423d2c:	b	423cc8 <wcrtomb@plt+0x1f0a8>
  423d30:	mov	x23, x25
  423d34:	str	x23, [x0]
  423d38:	ldr	x23, [sp, #200]
  423d3c:	b	423240 <wcrtomb@plt+0x1e620>
  423d40:	ldr	x0, [x19, #16]
  423d44:	bl	4203c8 <wcrtomb@plt+0x1b7a8>
  423d48:	b	42304c <wcrtomb@plt+0x1e42c>
  423d4c:	ldr	x24, [x23, #48]
  423d50:	mov	x19, x20
  423d54:	ldr	x22, [x28, #48]
  423d58:	cmp	x22, #0x0
  423d5c:	cset	w0, ne  // ne = any
  423d60:	cmp	x24, #0x0
  423d64:	cset	w1, ne  // ne = any
  423d68:	subs	w0, w0, w1
  423d6c:	b.ne	423d7c <wcrtomb@plt+0x1f15c>  // b.any
  423d70:	ldr	x0, [x23, #16]
  423d74:	ldr	x1, [x28, #16]
  423d78:	bl	404710 <strcmp@plt>
  423d7c:	tbnz	w0, #31, 423da0 <wcrtomb@plt+0x1f180>
  423d80:	ldr	x1, [x28]
  423d84:	str	x28, [x19]
  423d88:	mov	x0, x28
  423d8c:	cbz	x1, 423b24 <wcrtomb@plt+0x1ef04>
  423d90:	mov	x28, x1
  423d94:	mov	x19, x0
  423d98:	ldr	x22, [x1, #48]
  423d9c:	b	423d58 <wcrtomb@plt+0x1f138>
  423da0:	ldr	x1, [x23]
  423da4:	str	x23, [x19]
  423da8:	mov	x0, x23
  423dac:	cbz	x1, 423b20 <wcrtomb@plt+0x1ef00>
  423db0:	mov	x23, x1
  423db4:	mov	x19, x0
  423db8:	ldr	x24, [x1, #48]
  423dbc:	b	423d58 <wcrtomb@plt+0x1f138>
  423dc0:	stp	x27, x28, [sp, #80]
  423dc4:	subs	w0, w0, #0x1
  423dc8:	ldr	x23, [x20]
  423dcc:	b.ne	4246fc <wcrtomb@plt+0x1fadc>  // b.any
  423dd0:	str	xzr, [x20]
  423dd4:	cmp	w22, #0x1
  423dd8:	b.eq	4249b8 <wcrtomb@plt+0x1fd98>  // b.none
  423ddc:	cmp	w22, #0x2
  423de0:	ldr	x28, [x21]
  423de4:	b.eq	424608 <wcrtomb@plt+0x1f9e8>  // b.none
  423de8:	add	w22, w22, #0x1
  423dec:	asr	w0, w26, #2
  423df0:	str	w0, [sp, #128]
  423df4:	asr	w25, w22, #1
  423df8:	subs	w0, w25, #0x1
  423dfc:	b.ne	423f60 <wcrtomb@plt+0x1f340>  // b.any
  423e00:	mov	x24, x28
  423e04:	add	x20, sp, #0xc8
  423e08:	str	xzr, [x21]
  423e0c:	ldr	w0, [sp, #128]
  423e10:	cmp	w0, #0x1
  423e14:	b.eq	424388 <wcrtomb@plt+0x1f768>  // b.none
  423e18:	cmp	w0, #0x2
  423e1c:	ldr	x25, [x24]
  423e20:	b.eq	424338 <wcrtomb@plt+0x1f718>  // b.none
  423e24:	ldr	w0, [sp, #128]
  423e28:	add	w27, w0, #0x1
  423e2c:	asr	w0, w26, #3
  423e30:	str	w0, [sp, #128]
  423e34:	asr	w0, w27, #1
  423e38:	subs	w1, w0, #0x1
  423e3c:	b.ne	42420c <wcrtomb@plt+0x1f5ec>  // b.any
  423e40:	mov	x28, x25
  423e44:	str	xzr, [x24]
  423e48:	ldr	w0, [sp, #128]
  423e4c:	cmp	w0, #0x1
  423e50:	b.eq	424478 <wcrtomb@plt+0x1f858>  // b.none
  423e54:	cmp	w0, #0x2
  423e58:	ldr	x25, [x28]
  423e5c:	b.eq	42442c <wcrtomb@plt+0x1f80c>  // b.none
  423e60:	ldr	w0, [sp, #128]
  423e64:	add	w22, w0, #0x1
  423e68:	asr	w0, w26, #4
  423e6c:	str	w0, [sp, #128]
  423e70:	asr	w0, w22, #1
  423e74:	subs	w1, w0, #0x1
  423e78:	b.ne	424e3c <wcrtomb@plt+0x2021c>  // b.any
  423e7c:	mov	x27, x25
  423e80:	str	xzr, [x28]
  423e84:	ldr	w0, [sp, #128]
  423e88:	cmp	w0, #0x1
  423e8c:	b.eq	4253a8 <wcrtomb@plt+0x20788>  // b.none
  423e90:	cmp	w0, #0x2
  423e94:	ldr	x22, [x27]
  423e98:	b.eq	42535c <wcrtomb@plt+0x2073c>  // b.none
  423e9c:	ldr	w0, [sp, #128]
  423ea0:	asr	w26, w26, #5
  423ea4:	add	w1, w0, #0x1
  423ea8:	mov	x0, x27
  423eac:	asr	w1, w1, #1
  423eb0:	subs	w2, w1, #0x1
  423eb4:	b.ne	425348 <wcrtomb@plt+0x20728>  // b.any
  423eb8:	str	xzr, [x0]
  423ebc:	adrp	x25, 420000 <wcrtomb@plt+0x1b3e0>
  423ec0:	add	x25, x25, #0xe90
  423ec4:	mov	x0, x27
  423ec8:	mov	x2, x25
  423ecc:	bl	420990 <wcrtomb@plt+0x1bd70>
  423ed0:	mov	x2, x25
  423ed4:	mov	x27, x0
  423ed8:	mov	w1, w26
  423edc:	mov	x0, x22
  423ee0:	bl	420990 <wcrtomb@plt+0x1bd70>
  423ee4:	mov	x25, x0
  423ee8:	cmp	x27, #0x0
  423eec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  423ef0:	b.eq	4270c4 <wcrtomb@plt+0x224a4>  // b.none
  423ef4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  423ef8:	ldr	x26, [x0, #888]
  423efc:	cbz	x26, 4268cc <wcrtomb@plt+0x21cac>
  423f00:	ldr	x2, [x25, #48]
  423f04:	mov	x22, x20
  423f08:	ldr	x6, [x27, #48]
  423f0c:	cmp	x2, x26
  423f10:	cset	w0, cs  // cs = hs, nlast
  423f14:	cmp	x6, x26
  423f18:	cset	w1, cs  // cs = hs, nlast
  423f1c:	subs	w0, w0, w1
  423f20:	b.ne	423f38 <wcrtomb@plt+0x1f318>  // b.any
  423f24:	ldr	x1, [x25, #16]
  423f28:	stp	x2, x6, [sp, #128]
  423f2c:	ldr	x0, [x27, #16]
  423f30:	bl	404710 <strcmp@plt>
  423f34:	ldp	x2, x6, [sp, #128]
  423f38:	tbnz	w0, #31, 425c70 <wcrtomb@plt+0x21050>
  423f3c:	ldr	x1, [x25]
  423f40:	str	x25, [x22]
  423f44:	mov	x0, x25
  423f48:	cbz	x1, 425f58 <wcrtomb@plt+0x21338>
  423f4c:	mov	x25, x1
  423f50:	mov	x22, x0
  423f54:	ldr	x2, [x1, #48]
  423f58:	b	423f0c <wcrtomb@plt+0x1f2ec>
  423f5c:	mov	x28, x24
  423f60:	subs	w0, w0, #0x1
  423f64:	ldr	x24, [x28]
  423f68:	b.ne	423f5c <wcrtomb@plt+0x1f33c>  // b.any
  423f6c:	str	xzr, [x28]
  423f70:	cmp	w25, #0x1
  423f74:	b.eq	426358 <wcrtomb@plt+0x21738>  // b.none
  423f78:	cmp	w25, #0x2
  423f7c:	ldr	x28, [x21]
  423f80:	b.eq	424754 <wcrtomb@plt+0x1fb34>  // b.none
  423f84:	add	w25, w25, #0x1
  423f88:	asr	w0, w22, #2
  423f8c:	str	w0, [sp, #136]
  423f90:	asr	w0, w25, #1
  423f94:	subs	w1, w0, #0x1
  423f98:	b.ne	4240d0 <wcrtomb@plt+0x1f4b0>  // b.any
  423f9c:	mov	x27, x28
  423fa0:	add	x20, sp, #0xc8
  423fa4:	str	xzr, [x21]
  423fa8:	ldr	w0, [sp, #136]
  423fac:	cmp	w0, #0x1
  423fb0:	b.eq	424564 <wcrtomb@plt+0x1f944>  // b.none
  423fb4:	cmp	w0, #0x2
  423fb8:	ldr	x25, [x27]
  423fbc:	b.eq	424518 <wcrtomb@plt+0x1f8f8>  // b.none
  423fc0:	ldr	w0, [sp, #136]
  423fc4:	add	w1, w0, #0x1
  423fc8:	asr	w0, w22, #3
  423fcc:	str	w0, [sp, #136]
  423fd0:	asr	w0, w1, #1
  423fd4:	subs	w7, w0, #0x1
  423fd8:	b.ne	425038 <wcrtomb@plt+0x20418>  // b.any
  423fdc:	mov	x28, x25
  423fe0:	str	xzr, [x27]
  423fe4:	ldr	w0, [sp, #136]
  423fe8:	cmp	w0, #0x1
  423fec:	b.eq	4254a4 <wcrtomb@plt+0x20884>  // b.none
  423ff0:	cmp	w0, #0x2
  423ff4:	ldr	x7, [x28]
  423ff8:	b.eq	425450 <wcrtomb@plt+0x20830>  // b.none
  423ffc:	ldr	w0, [sp, #136]
  424000:	asr	w22, w22, #4
  424004:	add	w1, w0, #0x1
  424008:	mov	x0, x28
  42400c:	asr	w1, w1, #1
  424010:	subs	w2, w1, #0x1
  424014:	b.ne	425334 <wcrtomb@plt+0x20714>  // b.any
  424018:	str	xzr, [x0]
  42401c:	adrp	x25, 420000 <wcrtomb@plt+0x1b3e0>
  424020:	add	x25, x25, #0xe90
  424024:	mov	x0, x28
  424028:	mov	x2, x25
  42402c:	str	x7, [sp, #136]
  424030:	bl	420990 <wcrtomb@plt+0x1bd70>
  424034:	mov	x28, x0
  424038:	ldr	x7, [sp, #136]
  42403c:	mov	x2, x25
  424040:	mov	w1, w22
  424044:	mov	x0, x7
  424048:	bl	420990 <wcrtomb@plt+0x1bd70>
  42404c:	mov	x25, x0
  424050:	cmp	x28, #0x0
  424054:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  424058:	b.eq	4270b8 <wcrtomb@plt+0x22498>  // b.none
  42405c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424060:	ldr	x2, [x0, #888]
  424064:	cbz	x2, 426850 <wcrtomb@plt+0x21c30>
  424068:	ldr	x7, [x25, #48]
  42406c:	mov	x22, x20
  424070:	ldr	x8, [x28, #48]
  424074:	cmp	x2, x7
  424078:	cset	w0, ls  // ls = plast
  42407c:	cmp	x2, x8
  424080:	cset	w1, ls  // ls = plast
  424084:	subs	w0, w0, w1
  424088:	b.ne	4240a8 <wcrtomb@plt+0x1f488>  // b.any
  42408c:	ldr	x1, [x25, #16]
  424090:	stp	x2, x7, [sp, #136]
  424094:	ldr	x0, [x28, #16]
  424098:	str	x8, [sp, #152]
  42409c:	bl	404710 <strcmp@plt>
  4240a0:	ldp	x2, x7, [sp, #136]
  4240a4:	ldr	x8, [sp, #152]
  4240a8:	tbnz	w0, #31, 425cb0 <wcrtomb@plt+0x21090>
  4240ac:	ldr	x1, [x25]
  4240b0:	str	x25, [x22]
  4240b4:	mov	x0, x25
  4240b8:	cbz	x1, 425ddc <wcrtomb@plt+0x211bc>
  4240bc:	mov	x25, x1
  4240c0:	mov	x22, x0
  4240c4:	ldr	x7, [x1, #48]
  4240c8:	b	424074 <wcrtomb@plt+0x1f454>
  4240cc:	mov	x28, x27
  4240d0:	subs	w1, w1, #0x1
  4240d4:	ldr	x27, [x28]
  4240d8:	b.ne	4240cc <wcrtomb@plt+0x1f4ac>  // b.any
  4240dc:	str	xzr, [x28]
  4240e0:	cmp	w0, #0x1
  4240e4:	b.eq	4266d4 <wcrtomb@plt+0x21ab4>  // b.none
  4240e8:	cmp	w0, #0x2
  4240ec:	ldr	x2, [x21]
  4240f0:	b.eq	425ed8 <wcrtomb@plt+0x212b8>  // b.none
  4240f4:	add	w0, w0, #0x1
  4240f8:	asr	w1, w25, #2
  4240fc:	str	w1, [sp, #144]
  424100:	asr	w1, w0, #1
  424104:	subs	w8, w1, #0x1
  424108:	b.ne	424f30 <wcrtomb@plt+0x20310>  // b.any
  42410c:	mov	x28, x2
  424110:	add	x20, sp, #0xc8
  424114:	str	xzr, [x21]
  424118:	ldr	w0, [sp, #144]
  42411c:	cmp	w0, #0x1
  424120:	b.eq	42559c <wcrtomb@plt+0x2097c>  // b.none
  424124:	cmp	w0, #0x2
  424128:	ldr	x8, [x28]
  42412c:	b.eq	425548 <wcrtomb@plt+0x20928>  // b.none
  424130:	ldr	w0, [sp, #144]
  424134:	asr	w9, w25, #3
  424138:	add	w1, w0, #0x1
  42413c:	mov	x0, x28
  424140:	asr	w1, w1, #1
  424144:	subs	w2, w1, #0x1
  424148:	b.ne	4252e4 <wcrtomb@plt+0x206c4>  // b.any
  42414c:	str	xzr, [x0]
  424150:	adrp	x0, 420000 <wcrtomb@plt+0x1b3e0>
  424154:	add	x25, x0, #0xe90
  424158:	mov	x0, x28
  42415c:	mov	x2, x25
  424160:	str	w9, [sp, #144]
  424164:	str	x8, [sp, #152]
  424168:	bl	420990 <wcrtomb@plt+0x1bd70>
  42416c:	ldr	w9, [sp, #144]
  424170:	mov	x2, x25
  424174:	ldr	x8, [sp, #152]
  424178:	mov	x28, x0
  42417c:	mov	w1, w9
  424180:	mov	x0, x8
  424184:	bl	420990 <wcrtomb@plt+0x1bd70>
  424188:	cmp	x0, #0x0
  42418c:	mov	x2, x0
  424190:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  424194:	b.eq	427118 <wcrtomb@plt+0x224f8>  // b.none
  424198:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42419c:	ldr	x8, [x0, #888]
  4241a0:	cbz	x8, 426a50 <wcrtomb@plt+0x21e30>
  4241a4:	ldr	x9, [x2, #48]
  4241a8:	mov	x25, x20
  4241ac:	ldr	x10, [x28, #48]
  4241b0:	cmp	x8, x9
  4241b4:	cset	w0, ls  // ls = plast
  4241b8:	cmp	x10, x8
  4241bc:	cset	w1, cs  // cs = hs, nlast
  4241c0:	subs	w0, w0, w1
  4241c4:	b.ne	4241e4 <wcrtomb@plt+0x1f5c4>  // b.any
  4241c8:	ldr	x1, [x2, #16]
  4241cc:	stp	x2, x8, [sp, #144]
  4241d0:	ldr	x0, [x28, #16]
  4241d4:	stp	x10, x9, [sp, #160]
  4241d8:	bl	404710 <strcmp@plt>
  4241dc:	ldp	x2, x8, [sp, #144]
  4241e0:	ldp	x10, x9, [sp, #160]
  4241e4:	tbnz	w0, #31, 425c30 <wcrtomb@plt+0x21010>
  4241e8:	ldr	x1, [x2]
  4241ec:	str	x2, [x25]
  4241f0:	mov	x0, x2
  4241f4:	cbz	x1, 425f48 <wcrtomb@plt+0x21328>
  4241f8:	mov	x2, x1
  4241fc:	mov	x25, x0
  424200:	ldr	x9, [x1, #48]
  424204:	b	4241b0 <wcrtomb@plt+0x1f590>
  424208:	mov	x25, x28
  42420c:	subs	w1, w1, #0x1
  424210:	ldr	x28, [x25]
  424214:	b.ne	424208 <wcrtomb@plt+0x1f5e8>  // b.any
  424218:	str	xzr, [x25]
  42421c:	cmp	w0, #0x1
  424220:	b.eq	423e48 <wcrtomb@plt+0x1f228>  // b.none
  424224:	cmp	w0, #0x2
  424228:	ldr	x25, [x24]
  42422c:	b.eq	425e48 <wcrtomb@plt+0x21228>  // b.none
  424230:	add	w0, w0, #0x1
  424234:	asr	w1, w27, #2
  424238:	str	w1, [sp, #136]
  42423c:	asr	w1, w0, #1
  424240:	subs	w7, w1, #0x1
  424244:	b.ne	42512c <wcrtomb@plt+0x2050c>  // b.any
  424248:	mov	x22, x25
  42424c:	str	xzr, [x24]
  424250:	ldr	w0, [sp, #136]
  424254:	cmp	w0, #0x1
  424258:	b.eq	42569c <wcrtomb@plt+0x20a7c>  // b.none
  42425c:	cmp	w0, #0x2
  424260:	ldr	x7, [x22]
  424264:	b.eq	425648 <wcrtomb@plt+0x20a28>  // b.none
  424268:	ldr	w0, [sp, #136]
  42426c:	asr	w27, w27, #3
  424270:	add	w1, w0, #0x1
  424274:	mov	x0, x22
  424278:	asr	w1, w1, #1
  42427c:	subs	w2, w1, #0x1
  424280:	b.ne	42521c <wcrtomb@plt+0x205fc>  // b.any
  424284:	str	xzr, [x0]
  424288:	adrp	x25, 420000 <wcrtomb@plt+0x1b3e0>
  42428c:	add	x25, x25, #0xe90
  424290:	mov	x0, x22
  424294:	mov	x2, x25
  424298:	str	x7, [sp, #136]
  42429c:	bl	420990 <wcrtomb@plt+0x1bd70>
  4242a0:	mov	x22, x0
  4242a4:	ldr	x7, [sp, #136]
  4242a8:	mov	w1, w27
  4242ac:	mov	x2, x25
  4242b0:	mov	x0, x7
  4242b4:	bl	420990 <wcrtomb@plt+0x1bd70>
  4242b8:	mov	x27, x0
  4242bc:	cmp	x22, #0x0
  4242c0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4242c4:	b.eq	42710c <wcrtomb@plt+0x224ec>  // b.none
  4242c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4242cc:	ldr	x2, [x0, #888]
  4242d0:	cbz	x2, 426758 <wcrtomb@plt+0x21b38>
  4242d4:	ldr	x8, [x22, #48]
  4242d8:	mov	x25, x20
  4242dc:	ldr	x7, [x27, #48]
  4242e0:	cmp	x7, x2
  4242e4:	cset	w0, cs  // cs = hs, nlast
  4242e8:	cmp	x8, x2
  4242ec:	cset	w1, cs  // cs = hs, nlast
  4242f0:	subs	w0, w0, w1
  4242f4:	b.ne	424314 <wcrtomb@plt+0x1f6f4>  // b.any
  4242f8:	ldr	x0, [x22, #16]
  4242fc:	stp	x2, x7, [sp, #136]
  424300:	ldr	x1, [x27, #16]
  424304:	str	x8, [sp, #152]
  424308:	bl	404710 <strcmp@plt>
  42430c:	ldp	x2, x7, [sp, #136]
  424310:	ldr	x8, [sp, #152]
  424314:	tbnz	w0, #31, 425bb0 <wcrtomb@plt+0x20f90>
  424318:	ldr	x1, [x27]
  42431c:	str	x27, [x25]
  424320:	mov	x0, x27
  424324:	cbz	x1, 425ebc <wcrtomb@plt+0x2129c>
  424328:	mov	x27, x1
  42432c:	mov	x25, x0
  424330:	ldr	x7, [x1, #48]
  424334:	b	4242e0 <wcrtomb@plt+0x1f6c0>
  424338:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42433c:	ldr	x2, [x24, #48]
  424340:	ldr	x1, [x1, #888]
  424344:	ldr	x0, [x25, #48]
  424348:	cbz	x1, 424a18 <wcrtomb@plt+0x1fdf8>
  42434c:	cmp	x1, x0
  424350:	cset	w0, ls  // ls = plast
  424354:	cmp	x1, x2
  424358:	cset	w1, ls  // ls = plast
  42435c:	subs	w0, w0, w1
  424360:	b.ne	424370 <wcrtomb@plt+0x1f750>  // b.any
  424364:	ldr	x0, [x24, #16]
  424368:	ldr	x1, [x25, #16]
  42436c:	bl	404710 <strcmp@plt>
  424370:	cmp	w0, #0x0
  424374:	b.le	424388 <wcrtomb@plt+0x1f768>
  424378:	str	x24, [x25]
  42437c:	str	xzr, [x24]
  424380:	mov	x24, x25
  424384:	nop
  424388:	cmp	x21, #0x0
  42438c:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  424390:	b.eq	425d1c <wcrtomb@plt+0x210fc>  // b.none
  424394:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424398:	ldr	x25, [x0, #888]
  42439c:	cbz	x25, 424660 <wcrtomb@plt+0x1fa40>
  4243a0:	ldr	x27, [x21, #48]
  4243a4:	mov	x22, x20
  4243a8:	ldr	x26, [x24, #48]
  4243ac:	nop
  4243b0:	cmp	x25, x26
  4243b4:	cset	w0, ls  // ls = plast
  4243b8:	cmp	x25, x27
  4243bc:	cset	w1, ls  // ls = plast
  4243c0:	subs	w0, w0, w1
  4243c4:	b.ne	4243d4 <wcrtomb@plt+0x1f7b4>  // b.any
  4243c8:	ldr	x0, [x21, #16]
  4243cc:	ldr	x1, [x24, #16]
  4243d0:	bl	404710 <strcmp@plt>
  4243d4:	tbnz	w0, #31, 4243f8 <wcrtomb@plt+0x1f7d8>
  4243d8:	ldr	x1, [x24]
  4243dc:	str	x24, [x22]
  4243e0:	mov	x0, x24
  4243e4:	cbz	x1, 42441c <wcrtomb@plt+0x1f7fc>
  4243e8:	mov	x24, x1
  4243ec:	mov	x22, x0
  4243f0:	ldr	x26, [x1, #48]
  4243f4:	b	4243b0 <wcrtomb@plt+0x1f790>
  4243f8:	ldr	x1, [x21]
  4243fc:	str	x21, [x22]
  424400:	mov	x0, x21
  424404:	cbz	x1, 424418 <wcrtomb@plt+0x1f7f8>
  424408:	mov	x21, x1
  42440c:	mov	x22, x0
  424410:	ldr	x27, [x1, #48]
  424414:	b	4243b0 <wcrtomb@plt+0x1f790>
  424418:	mov	x21, x24
  42441c:	ldp	x27, x28, [sp, #80]
  424420:	str	x21, [x0]
  424424:	ldr	x21, [sp, #200]
  424428:	b	423200 <wcrtomb@plt+0x1e5e0>
  42442c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  424430:	ldr	x0, [x25, #48]
  424434:	ldr	x1, [x1, #888]
  424438:	ldr	x6, [x28, #48]
  42443c:	cbnz	x1, 426684 <wcrtomb@plt+0x21a64>
  424440:	cmp	x0, #0x0
  424444:	cset	w0, ne  // ne = any
  424448:	cmp	x6, #0x0
  42444c:	cset	w1, ne  // ne = any
  424450:	subs	w0, w0, w1
  424454:	b.ne	424464 <wcrtomb@plt+0x1f844>  // b.any
  424458:	ldr	x1, [x25, #16]
  42445c:	ldr	x0, [x28, #16]
  424460:	bl	404710 <strcmp@plt>
  424464:	cmp	w0, #0x0
  424468:	b.le	424478 <wcrtomb@plt+0x1f858>
  42446c:	str	x28, [x25]
  424470:	str	xzr, [x28]
  424474:	mov	x28, x25
  424478:	cmp	x28, #0x0
  42447c:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  424480:	b.eq	426384 <wcrtomb@plt+0x21764>  // b.none
  424484:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424488:	ldr	x25, [x0, #888]
  42448c:	cbz	x25, 424940 <wcrtomb@plt+0x1fd20>
  424490:	ldr	x27, [x24, #48]
  424494:	mov	x22, x20
  424498:	ldr	x26, [x28, #48]
  42449c:	nop
  4244a0:	cmp	x25, x26
  4244a4:	cset	w0, ls  // ls = plast
  4244a8:	cmp	x25, x27
  4244ac:	cset	w1, ls  // ls = plast
  4244b0:	subs	w0, w0, w1
  4244b4:	b.ne	4244c4 <wcrtomb@plt+0x1f8a4>  // b.any
  4244b8:	ldr	x0, [x24, #16]
  4244bc:	ldr	x1, [x28, #16]
  4244c0:	bl	404710 <strcmp@plt>
  4244c4:	tbnz	w0, #31, 4244e8 <wcrtomb@plt+0x1f8c8>
  4244c8:	ldr	x1, [x28]
  4244cc:	str	x28, [x22]
  4244d0:	mov	x0, x28
  4244d4:	cbz	x1, 42450c <wcrtomb@plt+0x1f8ec>
  4244d8:	mov	x28, x1
  4244dc:	mov	x22, x0
  4244e0:	ldr	x26, [x1, #48]
  4244e4:	b	4244a0 <wcrtomb@plt+0x1f880>
  4244e8:	ldr	x1, [x24]
  4244ec:	str	x24, [x22]
  4244f0:	mov	x0, x24
  4244f4:	cbz	x1, 424508 <wcrtomb@plt+0x1f8e8>
  4244f8:	mov	x24, x1
  4244fc:	mov	x22, x0
  424500:	ldr	x27, [x1, #48]
  424504:	b	4244a0 <wcrtomb@plt+0x1f880>
  424508:	mov	x24, x28
  42450c:	str	x24, [x0]
  424510:	ldr	x24, [sp, #200]
  424514:	b	424388 <wcrtomb@plt+0x1f768>
  424518:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42451c:	ldr	x0, [x25, #48]
  424520:	ldr	x1, [x1, #888]
  424524:	ldr	x7, [x27, #48]
  424528:	cbnz	x1, 426698 <wcrtomb@plt+0x21a78>
  42452c:	cmp	x0, #0x0
  424530:	cset	w0, ne  // ne = any
  424534:	cmp	x7, #0x0
  424538:	cset	w1, ne  // ne = any
  42453c:	subs	w0, w0, w1
  424540:	b.ne	424550 <wcrtomb@plt+0x1f930>  // b.any
  424544:	ldr	x1, [x25, #16]
  424548:	ldr	x0, [x27, #16]
  42454c:	bl	404710 <strcmp@plt>
  424550:	cmp	w0, #0x0
  424554:	b.le	424564 <wcrtomb@plt+0x1f944>
  424558:	str	x27, [x25]
  42455c:	str	xzr, [x27]
  424560:	mov	x27, x25
  424564:	cmp	x21, #0x0
  424568:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  42456c:	b.eq	426360 <wcrtomb@plt+0x21740>  // b.none
  424570:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424574:	ldr	x25, [x0, #888]
  424578:	cbz	x25, 4248c8 <wcrtomb@plt+0x1fca8>
  42457c:	ldr	x2, [x21, #48]
  424580:	mov	x22, x20
  424584:	ldr	x28, [x27, #48]
  424588:	cmp	x28, x25
  42458c:	cset	w0, cs  // cs = hs, nlast
  424590:	cmp	x2, x25
  424594:	cset	w1, cs  // cs = hs, nlast
  424598:	subs	w0, w0, w1
  42459c:	b.ne	4245b4 <wcrtomb@plt+0x1f994>  // b.any
  4245a0:	ldr	x0, [x21, #16]
  4245a4:	str	x2, [sp, #136]
  4245a8:	ldr	x1, [x27, #16]
  4245ac:	bl	404710 <strcmp@plt>
  4245b0:	ldr	x2, [sp, #136]
  4245b4:	tbnz	w0, #31, 4245d8 <wcrtomb@plt+0x1f9b8>
  4245b8:	ldr	x1, [x27]
  4245bc:	str	x27, [x22]
  4245c0:	mov	x0, x27
  4245c4:	cbz	x1, 4245fc <wcrtomb@plt+0x1f9dc>
  4245c8:	mov	x27, x1
  4245cc:	mov	x22, x0
  4245d0:	ldr	x28, [x1, #48]
  4245d4:	b	424588 <wcrtomb@plt+0x1f968>
  4245d8:	ldr	x1, [x21]
  4245dc:	str	x21, [x22]
  4245e0:	mov	x0, x21
  4245e4:	cbz	x1, 4245f8 <wcrtomb@plt+0x1f9d8>
  4245e8:	mov	x21, x1
  4245ec:	mov	x22, x0
  4245f0:	ldr	x2, [x1, #48]
  4245f4:	b	424588 <wcrtomb@plt+0x1f968>
  4245f8:	mov	x21, x27
  4245fc:	str	x21, [x0]
  424600:	ldr	x21, [sp, #200]
  424604:	b	423e0c <wcrtomb@plt+0x1f1ec>
  424608:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42460c:	ldr	x2, [x21, #48]
  424610:	ldr	x1, [x0, #888]
  424614:	ldr	x5, [x28, #48]
  424618:	cbnz	x1, 4247a8 <wcrtomb@plt+0x1fb88>
  42461c:	cmp	x5, #0x0
  424620:	cset	w0, ne  // ne = any
  424624:	cmp	x2, #0x0
  424628:	cset	w1, ne  // ne = any
  42462c:	subs	w0, w0, w1
  424630:	b.ne	424640 <wcrtomb@plt+0x1fa20>  // b.any
  424634:	ldr	x0, [x21, #16]
  424638:	ldr	x1, [x28, #16]
  42463c:	bl	404710 <strcmp@plt>
  424640:	cmp	w0, #0x0
  424644:	b.le	4249b8 <wcrtomb@plt+0x1fd98>
  424648:	str	x21, [x28]
  42464c:	add	x20, sp, #0xc8
  424650:	str	xzr, [x21]
  424654:	mov	x21, x28
  424658:	ldp	x27, x28, [sp, #80]
  42465c:	b	423200 <wcrtomb@plt+0x1e5e0>
  424660:	ldr	x26, [x21, #48]
  424664:	mov	x22, x20
  424668:	ldr	x25, [x24, #48]
  42466c:	nop
  424670:	cmp	x25, #0x0
  424674:	cset	w0, ne  // ne = any
  424678:	cmp	x26, #0x0
  42467c:	cset	w1, ne  // ne = any
  424680:	subs	w0, w0, w1
  424684:	b.ne	424694 <wcrtomb@plt+0x1fa74>  // b.any
  424688:	ldr	x0, [x21, #16]
  42468c:	ldr	x1, [x24, #16]
  424690:	bl	404710 <strcmp@plt>
  424694:	tbnz	w0, #31, 4246b8 <wcrtomb@plt+0x1fa98>
  424698:	ldr	x1, [x24]
  42469c:	str	x24, [x22]
  4246a0:	mov	x0, x24
  4246a4:	cbz	x1, 42441c <wcrtomb@plt+0x1f7fc>
  4246a8:	mov	x24, x1
  4246ac:	mov	x22, x0
  4246b0:	ldr	x25, [x1, #48]
  4246b4:	b	424670 <wcrtomb@plt+0x1fa50>
  4246b8:	ldr	x1, [x21]
  4246bc:	str	x21, [x22]
  4246c0:	mov	x0, x21
  4246c4:	cbz	x1, 424418 <wcrtomb@plt+0x1f7f8>
  4246c8:	mov	x21, x1
  4246cc:	mov	x22, x0
  4246d0:	ldr	x26, [x1, #48]
  4246d4:	b	424670 <wcrtomb@plt+0x1fa50>
  4246d8:	ldr	x0, [sp, #104]
  4246dc:	ldp	x29, x30, [sp]
  4246e0:	str	xzr, [x0, #168]
  4246e4:	ldp	x19, x20, [sp, #16]
  4246e8:	ldp	x21, x22, [sp, #32]
  4246ec:	ldp	x23, x24, [sp, #48]
  4246f0:	ldp	x25, x26, [sp, #64]
  4246f4:	add	sp, sp, #0x270
  4246f8:	ret
  4246fc:	mov	x20, x23
  424700:	b	423dc4 <wcrtomb@plt+0x1f1a4>
  424704:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  424708:	ldr	x2, [x23, #48]
  42470c:	ldr	x1, [x1, #888]
  424710:	ldr	x0, [x27, #48]
  424714:	cbz	x1, 424a40 <wcrtomb@plt+0x1fe20>
  424718:	cmp	x1, x0
  42471c:	cset	w0, ls  // ls = plast
  424720:	cmp	x2, x1
  424724:	cset	w1, cs  // cs = hs, nlast
  424728:	subs	w0, w0, w1
  42472c:	b.ne	42473c <wcrtomb@plt+0x1fb1c>  // b.any
  424730:	ldr	x0, [x23, #16]
  424734:	ldr	x1, [x27, #16]
  424738:	bl	404710 <strcmp@plt>
  42473c:	cmp	w0, #0x0
  424740:	b.le	423240 <wcrtomb@plt+0x1e620>
  424744:	str	x23, [x27]
  424748:	str	xzr, [x23]
  42474c:	mov	x23, x27
  424750:	b	423240 <wcrtomb@plt+0x1e620>
  424754:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  424758:	ldr	x6, [x21, #48]
  42475c:	ldr	x1, [x1, #888]
  424760:	ldr	x0, [x28, #48]
  424764:	cbz	x1, 424a2c <wcrtomb@plt+0x1fe0c>
  424768:	cmp	x1, x0
  42476c:	cset	w0, ls  // ls = plast
  424770:	cmp	x1, x6
  424774:	cset	w1, ls  // ls = plast
  424778:	subs	w0, w0, w1
  42477c:	b.ne	42478c <wcrtomb@plt+0x1fb6c>  // b.any
  424780:	ldr	x0, [x21, #16]
  424784:	ldr	x1, [x28, #16]
  424788:	bl	404710 <strcmp@plt>
  42478c:	cmp	w0, #0x0
  424790:	b.le	426358 <wcrtomb@plt+0x21738>
  424794:	str	x21, [x28]
  424798:	add	x20, sp, #0xc8
  42479c:	str	xzr, [x21]
  4247a0:	mov	x21, x28
  4247a4:	b	423e0c <wcrtomb@plt+0x1f1ec>
  4247a8:	cmp	x1, x5
  4247ac:	cset	w0, ls  // ls = plast
  4247b0:	cmp	x1, x2
  4247b4:	cset	w1, ls  // ls = plast
  4247b8:	b	42462c <wcrtomb@plt+0x1fa0c>
  4247bc:	ldr	x0, [x19, #16]
  4247c0:	bl	420300 <wcrtomb@plt+0x1b6e0>
  4247c4:	b	4230ac <wcrtomb@plt+0x1e48c>
  4247c8:	cmp	x1, x5
  4247cc:	cset	w0, ls  // ls = plast
  4247d0:	cmp	x2, x1
  4247d4:	cset	w1, cs  // cs = hs, nlast
  4247d8:	b	423518 <wcrtomb@plt+0x1e8f8>
  4247dc:	ldr	x22, [x26, #48]
  4247e0:	mov	x19, x20
  4247e4:	ldr	x24, [x28, #48]
  4247e8:	cmp	x22, #0x0
  4247ec:	cset	w0, ne  // ne = any
  4247f0:	cmp	x24, #0x0
  4247f4:	cset	w1, ne  // ne = any
  4247f8:	subs	w0, w0, w1
  4247fc:	b.ne	42480c <wcrtomb@plt+0x1fbec>  // b.any
  424800:	ldr	x1, [x26, #16]
  424804:	ldr	x0, [x28, #16]
  424808:	bl	404710 <strcmp@plt>
  42480c:	tbnz	w0, #31, 424830 <wcrtomb@plt+0x1fc10>
  424810:	ldr	x1, [x26]
  424814:	str	x26, [x19]
  424818:	mov	x0, x26
  42481c:	cbz	x1, 423c4c <wcrtomb@plt+0x1f02c>
  424820:	mov	x26, x1
  424824:	mov	x19, x0
  424828:	ldr	x22, [x1, #48]
  42482c:	b	4247e8 <wcrtomb@plt+0x1fbc8>
  424830:	ldr	x1, [x28]
  424834:	str	x28, [x19]
  424838:	mov	x0, x28
  42483c:	cbz	x1, 423c48 <wcrtomb@plt+0x1f028>
  424840:	mov	x28, x1
  424844:	mov	x19, x0
  424848:	ldr	x24, [x1, #48]
  42484c:	b	4247e8 <wcrtomb@plt+0x1fbc8>
  424850:	ldr	x26, [x23, #48]
  424854:	mov	x22, x20
  424858:	ldr	x24, [x25, #48]
  42485c:	nop
  424860:	cmp	x24, #0x0
  424864:	cset	w0, ne  // ne = any
  424868:	cmp	x26, #0x0
  42486c:	cset	w1, ne  // ne = any
  424870:	subs	w0, w0, w1
  424874:	b.ne	424884 <wcrtomb@plt+0x1fc64>  // b.any
  424878:	ldr	x0, [x23, #16]
  42487c:	ldr	x1, [x25, #16]
  424880:	bl	404710 <strcmp@plt>
  424884:	tbnz	w0, #31, 4248a8 <wcrtomb@plt+0x1fc88>
  424888:	ldr	x1, [x25]
  42488c:	str	x25, [x22]
  424890:	mov	x0, x25
  424894:	cbz	x1, 423d34 <wcrtomb@plt+0x1f114>
  424898:	mov	x25, x1
  42489c:	mov	x22, x0
  4248a0:	ldr	x24, [x1, #48]
  4248a4:	b	424860 <wcrtomb@plt+0x1fc40>
  4248a8:	ldr	x1, [x23]
  4248ac:	str	x23, [x22]
  4248b0:	mov	x0, x23
  4248b4:	cbz	x1, 423d30 <wcrtomb@plt+0x1f110>
  4248b8:	mov	x23, x1
  4248bc:	mov	x22, x0
  4248c0:	ldr	x26, [x1, #48]
  4248c4:	b	424860 <wcrtomb@plt+0x1fc40>
  4248c8:	ldr	x28, [x21, #48]
  4248cc:	mov	x22, x20
  4248d0:	ldr	x25, [x27, #48]
  4248d4:	nop
  4248d8:	cmp	x25, #0x0
  4248dc:	cset	w0, ne  // ne = any
  4248e0:	cmp	x28, #0x0
  4248e4:	cset	w1, ne  // ne = any
  4248e8:	subs	w0, w0, w1
  4248ec:	b.ne	4248fc <wcrtomb@plt+0x1fcdc>  // b.any
  4248f0:	ldr	x0, [x21, #16]
  4248f4:	ldr	x1, [x27, #16]
  4248f8:	bl	404710 <strcmp@plt>
  4248fc:	tbnz	w0, #31, 424920 <wcrtomb@plt+0x1fd00>
  424900:	ldr	x1, [x27]
  424904:	str	x27, [x22]
  424908:	mov	x0, x27
  42490c:	cbz	x1, 4245fc <wcrtomb@plt+0x1f9dc>
  424910:	mov	x27, x1
  424914:	mov	x22, x0
  424918:	ldr	x25, [x1, #48]
  42491c:	b	4248d8 <wcrtomb@plt+0x1fcb8>
  424920:	ldr	x1, [x21]
  424924:	str	x21, [x22]
  424928:	mov	x0, x21
  42492c:	cbz	x1, 4245f8 <wcrtomb@plt+0x1f9d8>
  424930:	mov	x21, x1
  424934:	mov	x22, x0
  424938:	ldr	x28, [x1, #48]
  42493c:	b	4248d8 <wcrtomb@plt+0x1fcb8>
  424940:	ldr	x26, [x24, #48]
  424944:	mov	x22, x20
  424948:	ldr	x25, [x28, #48]
  42494c:	nop
  424950:	cmp	x25, #0x0
  424954:	cset	w0, ne  // ne = any
  424958:	cmp	x26, #0x0
  42495c:	cset	w1, ne  // ne = any
  424960:	subs	w0, w0, w1
  424964:	b.ne	424974 <wcrtomb@plt+0x1fd54>  // b.any
  424968:	ldr	x0, [x24, #16]
  42496c:	ldr	x1, [x28, #16]
  424970:	bl	404710 <strcmp@plt>
  424974:	tbnz	w0, #31, 424998 <wcrtomb@plt+0x1fd78>
  424978:	ldr	x1, [x28]
  42497c:	str	x28, [x22]
  424980:	mov	x0, x28
  424984:	cbz	x1, 42450c <wcrtomb@plt+0x1f8ec>
  424988:	mov	x28, x1
  42498c:	mov	x22, x0
  424990:	ldr	x25, [x1, #48]
  424994:	b	424950 <wcrtomb@plt+0x1fd30>
  424998:	ldr	x1, [x24]
  42499c:	str	x24, [x22]
  4249a0:	mov	x0, x24
  4249a4:	cbz	x1, 424508 <wcrtomb@plt+0x1f8e8>
  4249a8:	mov	x24, x1
  4249ac:	mov	x22, x0
  4249b0:	ldr	x26, [x1, #48]
  4249b4:	b	424950 <wcrtomb@plt+0x1fd30>
  4249b8:	add	x20, sp, #0xc8
  4249bc:	ldp	x27, x28, [sp, #80]
  4249c0:	b	423200 <wcrtomb@plt+0x1e5e0>
  4249c4:	ldr	x20, [sp, #104]
  4249c8:	stp	x27, x28, [sp, #80]
  4249cc:	mov	w22, #0x0                   	// #0
  4249d0:	mov	w26, #0x1                   	// #1
  4249d4:	str	xzr, [x20, #160]
  4249d8:	bl	444f30 <argp_parse@@Base+0x5150>
  4249dc:	ldr	x21, [x20, #168]
  4249e0:	mov	w0, #0xffffffff            	// #-1
  4249e4:	str	wzr, [sp, #120]
  4249e8:	ldr	x20, [x21]
  4249ec:	b	423dc4 <wcrtomb@plt+0x1f1a4>
  4249f0:	ldr	x0, [x19, #16]
  4249f4:	bl	450328 <argp_parse@@Base+0x10548>
  4249f8:	ldr	x2, [x19, #48]
  4249fc:	str	x0, [sp, #200]
  424a00:	mov	x1, x19
  424a04:	add	x0, sp, #0xc8
  424a08:	add	x2, x2, #0x1
  424a0c:	str	x2, [x19, #48]
  424a10:	bl	4226d8 <wcrtomb@plt+0x1dab8>
  424a14:	b	4230ac <wcrtomb@plt+0x1e48c>
  424a18:	cmp	x0, #0x0
  424a1c:	cset	w0, ne  // ne = any
  424a20:	cmp	x2, #0x0
  424a24:	cset	w1, ne  // ne = any
  424a28:	b	42435c <wcrtomb@plt+0x1f73c>
  424a2c:	cmp	x0, #0x0
  424a30:	cset	w0, ne  // ne = any
  424a34:	cmp	x6, #0x0
  424a38:	cset	w1, ne  // ne = any
  424a3c:	b	424778 <wcrtomb@plt+0x1fb58>
  424a40:	cmp	x0, #0x0
  424a44:	cset	w0, ne  // ne = any
  424a48:	cmp	x2, #0x0
  424a4c:	cset	w1, ne  // ne = any
  424a50:	b	424728 <wcrtomb@plt+0x1fb08>
  424a54:	cmp	x0, #0x0
  424a58:	cset	w0, ne  // ne = any
  424a5c:	cmp	x2, #0x0
  424a60:	cset	w1, ne  // ne = any
  424a64:	b	423a68 <wcrtomb@plt+0x1ee48>
  424a68:	mov	x22, x27
  424a6c:	subs	w1, w1, #0x1
  424a70:	ldr	x27, [x22]
  424a74:	b.ne	424a68 <wcrtomb@plt+0x1fe48>  // b.any
  424a78:	str	xzr, [x22]
  424a7c:	cmp	w0, #0x1
  424a80:	b.eq	423704 <wcrtomb@plt+0x1eae4>  // b.none
  424a84:	cmp	w0, #0x2
  424a88:	ldr	x22, [x25]
  424a8c:	b.eq	426444 <wcrtomb@plt+0x21824>  // b.none
  424a90:	add	w0, w0, #0x1
  424a94:	asr	w26, w26, #2
  424a98:	mov	x2, x25
  424a9c:	asr	w1, w0, #1
  424aa0:	subs	w0, w1, #0x1
  424aa4:	b.ne	425244 <wcrtomb@plt+0x20624>  // b.any
  424aa8:	str	xzr, [x2]
  424aac:	mov	x0, x25
  424ab0:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  424ab4:	add	x2, x2, #0xe90
  424ab8:	bl	420990 <wcrtomb@plt+0x1bd70>
  424abc:	mov	x25, x0
  424ac0:	adrp	x1, 420000 <wcrtomb@plt+0x1b3e0>
  424ac4:	mov	x0, x22
  424ac8:	add	x2, x1, #0xe90
  424acc:	mov	w1, w26
  424ad0:	bl	420990 <wcrtomb@plt+0x1bd70>
  424ad4:	cmp	x0, #0x0
  424ad8:	mov	x22, x0
  424adc:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  424ae0:	b.eq	4270f4 <wcrtomb@plt+0x224d4>  // b.none
  424ae4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424ae8:	ldr	x6, [x0, #888]
  424aec:	cbz	x6, 426cc4 <wcrtomb@plt+0x220a4>
  424af0:	ldr	x7, [x22, #48]
  424af4:	mov	x26, x20
  424af8:	ldr	x8, [x25, #48]
  424afc:	cmp	x6, x7
  424b00:	cset	w0, ls  // ls = plast
  424b04:	cmp	x6, x8
  424b08:	cset	w1, ls  // ls = plast
  424b0c:	subs	w0, w0, w1
  424b10:	b.ne	424b30 <wcrtomb@plt+0x1ff10>  // b.any
  424b14:	ldr	x1, [x22, #16]
  424b18:	stp	x6, x7, [sp, #136]
  424b1c:	ldr	x0, [x25, #16]
  424b20:	str	x8, [sp, #152]
  424b24:	bl	404710 <strcmp@plt>
  424b28:	ldp	x6, x7, [sp, #136]
  424b2c:	ldr	x8, [sp, #152]
  424b30:	tbnz	w0, #31, 425c90 <wcrtomb@plt+0x21070>
  424b34:	ldr	x1, [x22]
  424b38:	str	x22, [x26]
  424b3c:	mov	x0, x22
  424b40:	cbz	x1, 425d6c <wcrtomb@plt+0x2114c>
  424b44:	mov	x22, x1
  424b48:	mov	x26, x0
  424b4c:	ldr	x7, [x1, #48]
  424b50:	b	424afc <wcrtomb@plt+0x1fedc>
  424b54:	mov	x27, x24
  424b58:	subs	w1, w1, #0x1
  424b5c:	ldr	x24, [x27]
  424b60:	b.ne	424b54 <wcrtomb@plt+0x1ff34>  // b.any
  424b64:	str	xzr, [x27]
  424b68:	cmp	w0, #0x1
  424b6c:	b.eq	4232a8 <wcrtomb@plt+0x1e688>  // b.none
  424b70:	cmp	w0, #0x2
  424b74:	ldr	x5, [x26]
  424b78:	b.eq	42653c <wcrtomb@plt+0x2191c>  // b.none
  424b7c:	add	w0, w0, #0x1
  424b80:	asr	w22, w22, #2
  424b84:	mov	x2, x26
  424b88:	asr	w1, w0, #1
  424b8c:	subs	w0, w1, #0x1
  424b90:	b.ne	4252bc <wcrtomb@plt+0x2069c>  // b.any
  424b94:	str	xzr, [x2]
  424b98:	adrp	x27, 420000 <wcrtomb@plt+0x1b3e0>
  424b9c:	add	x27, x27, #0xe90
  424ba0:	mov	x0, x26
  424ba4:	mov	x2, x27
  424ba8:	str	x5, [sp, #120]
  424bac:	bl	420990 <wcrtomb@plt+0x1bd70>
  424bb0:	ldr	x5, [sp, #120]
  424bb4:	mov	x2, x27
  424bb8:	mov	w1, w22
  424bbc:	mov	x27, x0
  424bc0:	mov	x0, x5
  424bc4:	bl	420990 <wcrtomb@plt+0x1bd70>
  424bc8:	cmp	x0, #0x0
  424bcc:	mov	x26, x0
  424bd0:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  424bd4:	b.eq	427064 <wcrtomb@plt+0x22444>  // b.none
  424bd8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424bdc:	ldr	x2, [x0, #888]
  424be0:	cbz	x2, 426dc4 <wcrtomb@plt+0x221a4>
  424be4:	ldr	x5, [x26, #48]
  424be8:	mov	x22, x20
  424bec:	ldr	x6, [x27, #48]
  424bf0:	cmp	x2, x5
  424bf4:	cset	w0, ls  // ls = plast
  424bf8:	cmp	x2, x6
  424bfc:	cset	w1, ls  // ls = plast
  424c00:	subs	w0, w0, w1
  424c04:	b.ne	424c24 <wcrtomb@plt+0x20004>  // b.any
  424c08:	ldr	x1, [x26, #16]
  424c0c:	stp	x2, x5, [sp, #120]
  424c10:	ldr	x0, [x27, #16]
  424c14:	str	x6, [sp, #136]
  424c18:	bl	404710 <strcmp@plt>
  424c1c:	ldp	x2, x5, [sp, #120]
  424c20:	ldr	x6, [sp, #136]
  424c24:	tbnz	w0, #31, 425cd0 <wcrtomb@plt+0x210b0>
  424c28:	ldr	x1, [x26]
  424c2c:	str	x26, [x22]
  424c30:	mov	x0, x26
  424c34:	cbz	x1, 425dec <wcrtomb@plt+0x211cc>
  424c38:	mov	x26, x1
  424c3c:	mov	x22, x0
  424c40:	ldr	x5, [x1, #48]
  424c44:	b	424bf0 <wcrtomb@plt+0x1ffd0>
  424c48:	mov	x27, x26
  424c4c:	subs	w7, w7, #0x1
  424c50:	ldr	x26, [x27]
  424c54:	b.ne	424c48 <wcrtomb@plt+0x20028>  // b.any
  424c58:	str	xzr, [x27]
  424c5c:	cmp	w1, #0x1
  424c60:	b.eq	42382c <wcrtomb@plt+0x1ec0c>  // b.none
  424c64:	cmp	w1, #0x2
  424c68:	ldr	x27, [x23]
  424c6c:	b.eq	426494 <wcrtomb@plt+0x21874>  // b.none
  424c70:	add	w1, w1, #0x1
  424c74:	asr	w8, w0, #2
  424c78:	mov	x0, x23
  424c7c:	asr	w1, w1, #1
  424c80:	subs	w2, w1, #0x1
  424c84:	b.ne	4252a8 <wcrtomb@plt+0x20688>  // b.any
  424c88:	str	xzr, [x0]
  424c8c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  424c90:	mov	x0, x23
  424c94:	add	x2, x2, #0xe90
  424c98:	str	w8, [sp, #144]
  424c9c:	bl	420990 <wcrtomb@plt+0x1bd70>
  424ca0:	ldr	w8, [sp, #144]
  424ca4:	adrp	x1, 420000 <wcrtomb@plt+0x1b3e0>
  424ca8:	mov	x23, x0
  424cac:	add	x2, x1, #0xe90
  424cb0:	mov	x0, x27
  424cb4:	mov	w1, w8
  424cb8:	bl	420990 <wcrtomb@plt+0x1bd70>
  424cbc:	mov	x27, x0
  424cc0:	cmp	x23, #0x0
  424cc4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  424cc8:	b.eq	4270ac <wcrtomb@plt+0x2248c>  // b.none
  424ccc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424cd0:	ldr	x8, [x0, #888]
  424cd4:	cbz	x8, 426e40 <wcrtomb@plt+0x22220>
  424cd8:	ldr	x10, [x23, #48]
  424cdc:	mov	x2, x20
  424ce0:	ldr	x9, [x27, #48]
  424ce4:	cmp	x8, x9
  424ce8:	cset	w0, ls  // ls = plast
  424cec:	cmp	x8, x10
  424cf0:	cset	w1, ls  // ls = plast
  424cf4:	subs	w0, w0, w1
  424cf8:	b.ne	424d18 <wcrtomb@plt+0x200f8>  // b.any
  424cfc:	ldr	x0, [x23, #16]
  424d00:	stp	x8, x2, [sp, #144]
  424d04:	ldr	x1, [x27, #16]
  424d08:	stp	x9, x10, [sp, #160]
  424d0c:	bl	404710 <strcmp@plt>
  424d10:	ldp	x8, x2, [sp, #144]
  424d14:	ldp	x9, x10, [sp, #160]
  424d18:	tbnz	w0, #31, 425c50 <wcrtomb@plt+0x21030>
  424d1c:	ldr	x1, [x27]
  424d20:	str	x27, [x2]
  424d24:	mov	x0, x27
  424d28:	cbz	x1, 425d7c <wcrtomb@plt+0x2115c>
  424d2c:	mov	x27, x1
  424d30:	mov	x2, x0
  424d34:	ldr	x9, [x1, #48]
  424d38:	b	424ce4 <wcrtomb@plt+0x200c4>
  424d3c:	mov	x24, x27
  424d40:	subs	w5, w5, #0x1
  424d44:	ldr	x27, [x24]
  424d48:	b.ne	424d3c <wcrtomb@plt+0x2011c>  // b.any
  424d4c:	str	xzr, [x24]
  424d50:	cmp	w1, #0x1
  424d54:	b.eq	42395c <wcrtomb@plt+0x1ed3c>  // b.none
  424d58:	cmp	w1, #0x2
  424d5c:	ldr	x7, [x28]
  424d60:	b.eq	4264e4 <wcrtomb@plt+0x218c4>  // b.none
  424d64:	add	w1, w1, #0x1
  424d68:	asr	w5, w0, #2
  424d6c:	mov	x0, x28
  424d70:	asr	w1, w1, #1
  424d74:	subs	w2, w1, #0x1
  424d78:	b.ne	425294 <wcrtomb@plt+0x20674>  // b.any
  424d7c:	str	xzr, [x0]
  424d80:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  424d84:	add	x24, x2, #0xe90
  424d88:	mov	x0, x28
  424d8c:	mov	x2, x24
  424d90:	str	x7, [sp, #128]
  424d94:	str	w5, [sp, #136]
  424d98:	bl	420990 <wcrtomb@plt+0x1bd70>
  424d9c:	ldr	w5, [sp, #136]
  424da0:	mov	x2, x24
  424da4:	ldr	x7, [sp, #128]
  424da8:	mov	x24, x0
  424dac:	mov	w1, w5
  424db0:	mov	x0, x7
  424db4:	bl	420990 <wcrtomb@plt+0x1bd70>
  424db8:	mov	x2, x0
  424dbc:	cmp	x24, #0x0
  424dc0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  424dc4:	b.eq	4270a0 <wcrtomb@plt+0x22480>  // b.none
  424dc8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424dcc:	ldr	x5, [x0, #888]
  424dd0:	cbz	x5, 426d40 <wcrtomb@plt+0x22120>
  424dd4:	ldr	x7, [x2, #48]
  424dd8:	mov	x28, x20
  424ddc:	ldr	x8, [x24, #48]
  424de0:	cmp	x5, x7
  424de4:	cset	w0, ls  // ls = plast
  424de8:	cmp	x5, x8
  424dec:	cset	w1, ls  // ls = plast
  424df0:	subs	w0, w0, w1
  424df4:	b.ne	424e14 <wcrtomb@plt+0x201f4>  // b.any
  424df8:	ldr	x1, [x2, #16]
  424dfc:	stp	x2, x5, [sp, #128]
  424e00:	ldr	x0, [x24, #16]
  424e04:	stp	x7, x8, [sp, #144]
  424e08:	bl	404710 <strcmp@plt>
  424e0c:	ldp	x2, x5, [sp, #128]
  424e10:	ldp	x7, x8, [sp, #144]
  424e14:	tbnz	w0, #31, 425b90 <wcrtomb@plt+0x20f70>
  424e18:	ldr	x1, [x2]
  424e1c:	str	x2, [x28]
  424e20:	mov	x0, x2
  424e24:	cbz	x1, 425f38 <wcrtomb@plt+0x21318>
  424e28:	mov	x2, x1
  424e2c:	mov	x28, x0
  424e30:	ldr	x7, [x1, #48]
  424e34:	b	424de0 <wcrtomb@plt+0x201c0>
  424e38:	mov	x25, x27
  424e3c:	subs	w1, w1, #0x1
  424e40:	ldr	x27, [x25]
  424e44:	b.ne	424e38 <wcrtomb@plt+0x20218>  // b.any
  424e48:	str	xzr, [x25]
  424e4c:	cmp	w0, #0x1
  424e50:	b.eq	423e84 <wcrtomb@plt+0x1f264>  // b.none
  424e54:	cmp	w0, #0x2
  424e58:	ldr	x7, [x28]
  424e5c:	b.eq	4263ec <wcrtomb@plt+0x217cc>  // b.none
  424e60:	add	w0, w0, #0x1
  424e64:	asr	w22, w22, #2
  424e68:	mov	x2, x28
  424e6c:	asr	w1, w0, #1
  424e70:	subs	w0, w1, #0x1
  424e74:	b.ne	425280 <wcrtomb@plt+0x20660>  // b.any
  424e78:	str	xzr, [x2]
  424e7c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  424e80:	add	x25, x2, #0xe90
  424e84:	mov	x0, x28
  424e88:	mov	x2, x25
  424e8c:	str	x7, [sp, #136]
  424e90:	bl	420990 <wcrtomb@plt+0x1bd70>
  424e94:	ldr	x7, [sp, #136]
  424e98:	mov	x2, x25
  424e9c:	mov	w1, w22
  424ea0:	mov	x25, x0
  424ea4:	mov	x0, x7
  424ea8:	bl	420990 <wcrtomb@plt+0x1bd70>
  424eac:	mov	x28, x0
  424eb0:	cmp	x25, #0x0
  424eb4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  424eb8:	b.eq	427070 <wcrtomb@plt+0x22450>  // b.none
  424ebc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424ec0:	ldr	x2, [x0, #888]
  424ec4:	cbz	x2, 426c48 <wcrtomb@plt+0x22028>
  424ec8:	ldr	x8, [x25, #48]
  424ecc:	mov	x22, x20
  424ed0:	ldr	x7, [x28, #48]
  424ed4:	cmp	x7, x2
  424ed8:	cset	w0, cs  // cs = hs, nlast
  424edc:	cmp	x8, x2
  424ee0:	cset	w1, cs  // cs = hs, nlast
  424ee4:	subs	w0, w0, w1
  424ee8:	b.ne	424f08 <wcrtomb@plt+0x202e8>  // b.any
  424eec:	ldr	x0, [x25, #16]
  424ef0:	stp	x2, x7, [sp, #136]
  424ef4:	ldr	x1, [x28, #16]
  424ef8:	str	x8, [sp, #152]
  424efc:	bl	404710 <strcmp@plt>
  424f00:	ldp	x2, x7, [sp, #136]
  424f04:	ldr	x8, [sp, #152]
  424f08:	tbnz	w0, #31, 425c10 <wcrtomb@plt+0x20ff0>
  424f0c:	ldr	x1, [x28]
  424f10:	str	x28, [x22]
  424f14:	mov	x0, x28
  424f18:	cbz	x1, 425ecc <wcrtomb@plt+0x212ac>
  424f1c:	mov	x28, x1
  424f20:	mov	x22, x0
  424f24:	ldr	x7, [x1, #48]
  424f28:	b	424ed4 <wcrtomb@plt+0x202b4>
  424f2c:	mov	x2, x28
  424f30:	subs	w8, w8, #0x1
  424f34:	ldr	x28, [x2]
  424f38:	b.ne	424f2c <wcrtomb@plt+0x2030c>  // b.any
  424f3c:	str	xzr, [x2]
  424f40:	cmp	w1, #0x1
  424f44:	b.eq	42707c <wcrtomb@plt+0x2245c>  // b.none
  424f48:	cmp	w1, #0x2
  424f4c:	ldr	x9, [x21]
  424f50:	b.eq	426390 <wcrtomb@plt+0x21770>  // b.none
  424f54:	add	w1, w1, #0x1
  424f58:	asr	w20, w0, #2
  424f5c:	mov	x0, x21
  424f60:	asr	w1, w1, #1
  424f64:	subs	w2, w1, #0x1
  424f68:	b.ne	42526c <wcrtomb@plt+0x2064c>  // b.any
  424f6c:	str	xzr, [x0]
  424f70:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  424f74:	mov	x0, x21
  424f78:	add	x2, x2, #0xe90
  424f7c:	str	x9, [sp, #160]
  424f80:	bl	420990 <wcrtomb@plt+0x1bd70>
  424f84:	ldr	x9, [sp, #160]
  424f88:	mov	x8, x0
  424f8c:	adrp	x1, 420000 <wcrtomb@plt+0x1b3e0>
  424f90:	add	x2, x1, #0xe90
  424f94:	mov	x0, x9
  424f98:	mov	w1, w20
  424f9c:	str	x8, [sp, #152]
  424fa0:	bl	420990 <wcrtomb@plt+0x1bd70>
  424fa4:	ldr	x8, [sp, #152]
  424fa8:	cmp	x0, #0x0
  424fac:	mov	x3, x0
  424fb0:	ccmp	x8, #0x0, #0x4, ne  // ne = any
  424fb4:	b.eq	427090 <wcrtomb@plt+0x22470>  // b.none
  424fb8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  424fbc:	add	x20, sp, #0xc8
  424fc0:	ldr	x9, [x0, #888]
  424fc4:	cbz	x9, 426bc4 <wcrtomb@plt+0x21fa4>
  424fc8:	ldr	x10, [x3, #48]
  424fcc:	mov	x2, x20
  424fd0:	ldr	x21, [x8, #48]
  424fd4:	cmp	x9, x10
  424fd8:	cset	w0, ls  // ls = plast
  424fdc:	cmp	x9, x21
  424fe0:	cset	w1, ls  // ls = plast
  424fe4:	subs	w0, w0, w1
  424fe8:	b.ne	425010 <wcrtomb@plt+0x203f0>  // b.any
  424fec:	ldr	x1, [x3, #16]
  424ff0:	stp	x8, x3, [sp, #152]
  424ff4:	ldr	x0, [x8, #16]
  424ff8:	stp	x9, x2, [sp, #168]
  424ffc:	str	x10, [sp, #184]
  425000:	bl	404710 <strcmp@plt>
  425004:	ldp	x8, x3, [sp, #152]
  425008:	ldp	x9, x2, [sp, #168]
  42500c:	ldr	x10, [sp, #184]
  425010:	tbnz	w0, #31, 425b70 <wcrtomb@plt+0x20f50>
  425014:	ldr	x1, [x3]
  425018:	str	x3, [x2]
  42501c:	mov	x0, x3
  425020:	cbz	x1, 425d2c <wcrtomb@plt+0x2110c>
  425024:	mov	x3, x1
  425028:	mov	x2, x0
  42502c:	ldr	x10, [x1, #48]
  425030:	b	424fd4 <wcrtomb@plt+0x203b4>
  425034:	mov	x25, x28
  425038:	subs	w7, w7, #0x1
  42503c:	ldr	x28, [x25]
  425040:	b.ne	425034 <wcrtomb@plt+0x20414>  // b.any
  425044:	str	xzr, [x25]
  425048:	cmp	w0, #0x1
  42504c:	b.eq	423fe4 <wcrtomb@plt+0x1f3c4>  // b.none
  425050:	cmp	w0, #0x2
  425054:	ldr	x25, [x27]
  425058:	b.eq	4265e4 <wcrtomb@plt+0x219c4>  // b.none
  42505c:	add	w0, w0, #0x1
  425060:	asr	w8, w1, #2
  425064:	mov	x2, x27
  425068:	asr	w1, w0, #1
  42506c:	subs	w0, w1, #0x1
  425070:	b.ne	4252d0 <wcrtomb@plt+0x206b0>  // b.any
  425074:	str	xzr, [x2]
  425078:	mov	x0, x27
  42507c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  425080:	add	x2, x2, #0xe90
  425084:	str	w8, [sp, #144]
  425088:	bl	420990 <wcrtomb@plt+0x1bd70>
  42508c:	ldr	w8, [sp, #144]
  425090:	adrp	x1, 420000 <wcrtomb@plt+0x1b3e0>
  425094:	mov	x27, x0
  425098:	add	x2, x1, #0xe90
  42509c:	mov	x0, x25
  4250a0:	mov	w1, w8
  4250a4:	bl	420990 <wcrtomb@plt+0x1bd70>
  4250a8:	mov	x25, x0
  4250ac:	cmp	x27, #0x0
  4250b0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4250b4:	b.eq	4270e8 <wcrtomb@plt+0x224c8>  // b.none
  4250b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4250bc:	ldr	x8, [x0, #888]
  4250c0:	cbz	x8, 426948 <wcrtomb@plt+0x21d28>
  4250c4:	ldr	x9, [x25, #48]
  4250c8:	mov	x2, x20
  4250cc:	ldr	x10, [x27, #48]
  4250d0:	cmp	x8, x9
  4250d4:	cset	w0, ls  // ls = plast
  4250d8:	cmp	x8, x10
  4250dc:	cset	w1, ls  // ls = plast
  4250e0:	subs	w0, w0, w1
  4250e4:	b.ne	425104 <wcrtomb@plt+0x204e4>  // b.any
  4250e8:	ldr	x1, [x25, #16]
  4250ec:	stp	x8, x2, [sp, #144]
  4250f0:	ldr	x0, [x27, #16]
  4250f4:	stp	x10, x9, [sp, #160]
  4250f8:	bl	404710 <strcmp@plt>
  4250fc:	ldp	x8, x2, [sp, #144]
  425100:	ldp	x10, x9, [sp, #160]
  425104:	tbnz	w0, #31, 425bf0 <wcrtomb@plt+0x20fd0>
  425108:	ldr	x1, [x25]
  42510c:	str	x25, [x2]
  425110:	mov	x0, x25
  425114:	cbz	x1, 425f68 <wcrtomb@plt+0x21348>
  425118:	mov	x25, x1
  42511c:	mov	x2, x0
  425120:	ldr	x9, [x1, #48]
  425124:	b	4250d0 <wcrtomb@plt+0x204b0>
  425128:	mov	x25, x22
  42512c:	subs	w7, w7, #0x1
  425130:	ldr	x22, [x25]
  425134:	b.ne	425128 <wcrtomb@plt+0x20508>  // b.any
  425138:	str	xzr, [x25]
  42513c:	cmp	w1, #0x1
  425140:	b.eq	424250 <wcrtomb@plt+0x1f630>  // b.none
  425144:	cmp	w1, #0x2
  425148:	ldr	x25, [x24]
  42514c:	b.eq	426594 <wcrtomb@plt+0x21974>  // b.none
  425150:	add	w1, w1, #0x1
  425154:	asr	w8, w0, #2
  425158:	mov	x0, x24
  42515c:	asr	w1, w1, #1
  425160:	subs	w2, w1, #0x1
  425164:	b.ne	425230 <wcrtomb@plt+0x20610>  // b.any
  425168:	str	xzr, [x0]
  42516c:	adrp	x2, 420000 <wcrtomb@plt+0x1b3e0>
  425170:	mov	x0, x24
  425174:	add	x2, x2, #0xe90
  425178:	str	w8, [sp, #144]
  42517c:	bl	420990 <wcrtomb@plt+0x1bd70>
  425180:	ldr	w8, [sp, #144]
  425184:	adrp	x1, 420000 <wcrtomb@plt+0x1b3e0>
  425188:	mov	x24, x0
  42518c:	add	x2, x1, #0xe90
  425190:	mov	x0, x25
  425194:	mov	w1, w8
  425198:	bl	420990 <wcrtomb@plt+0x1bd70>
  42519c:	mov	x25, x0
  4251a0:	cmp	x24, #0x0
  4251a4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4251a8:	b.eq	427084 <wcrtomb@plt+0x22464>  // b.none
  4251ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4251b0:	ldr	x8, [x0, #888]
  4251b4:	cbz	x8, 4269cc <wcrtomb@plt+0x21dac>
  4251b8:	ldr	x10, [x24, #48]
  4251bc:	mov	x2, x20
  4251c0:	ldr	x9, [x25, #48]
  4251c4:	cmp	x9, x8
  4251c8:	cset	w0, cs  // cs = hs, nlast
  4251cc:	cmp	x10, x8
  4251d0:	cset	w1, cs  // cs = hs, nlast
  4251d4:	subs	w0, w0, w1
  4251d8:	b.ne	4251f8 <wcrtomb@plt+0x205d8>  // b.any
  4251dc:	ldr	x0, [x24, #16]
  4251e0:	stp	x2, x8, [sp, #144]
  4251e4:	ldr	x1, [x25, #16]
  4251e8:	stp	x9, x10, [sp, #160]
  4251ec:	bl	404710 <strcmp@plt>
  4251f0:	ldp	x2, x8, [sp, #144]
  4251f4:	ldp	x9, x10, [sp, #160]
  4251f8:	tbnz	w0, #31, 425b50 <wcrtomb@plt+0x20f30>
  4251fc:	ldr	x1, [x25]
  425200:	str	x25, [x2]
  425204:	mov	x0, x25
  425208:	cbz	x1, 425e9c <wcrtomb@plt+0x2127c>
  42520c:	mov	x25, x1
  425210:	mov	x2, x0
  425214:	ldr	x9, [x1, #48]
  425218:	b	4251c4 <wcrtomb@plt+0x205a4>
  42521c:	mov	x0, x7
  425220:	subs	w2, w2, #0x1
  425224:	ldr	x7, [x7]
  425228:	b.eq	424284 <wcrtomb@plt+0x1f664>  // b.none
  42522c:	b	42521c <wcrtomb@plt+0x205fc>
  425230:	mov	x0, x25
  425234:	subs	w2, w2, #0x1
  425238:	ldr	x25, [x25]
  42523c:	b.eq	425168 <wcrtomb@plt+0x20548>  // b.none
  425240:	b	425230 <wcrtomb@plt+0x20610>
  425244:	mov	x2, x22
  425248:	subs	w0, w0, #0x1
  42524c:	ldr	x22, [x22]
  425250:	b.eq	424aa8 <wcrtomb@plt+0x1fe88>  // b.none
  425254:	b	425244 <wcrtomb@plt+0x20624>
  425258:	mov	x0, x6
  42525c:	subs	w2, w2, #0x1
  425260:	ldr	x6, [x6]
  425264:	b.eq	423738 <wcrtomb@plt+0x1eb18>  // b.none
  425268:	b	425258 <wcrtomb@plt+0x20638>
  42526c:	mov	x0, x9
  425270:	subs	w2, w2, #0x1
  425274:	ldr	x9, [x9]
  425278:	b.eq	424f6c <wcrtomb@plt+0x2034c>  // b.none
  42527c:	b	42526c <wcrtomb@plt+0x2064c>
  425280:	mov	x2, x7
  425284:	subs	w0, w0, #0x1
  425288:	ldr	x7, [x7]
  42528c:	b.eq	424e78 <wcrtomb@plt+0x20258>  // b.none
  425290:	b	425280 <wcrtomb@plt+0x20660>
  425294:	mov	x0, x7
  425298:	subs	w2, w2, #0x1
  42529c:	ldr	x7, [x7]
  4252a0:	b.eq	424d7c <wcrtomb@plt+0x2015c>  // b.none
  4252a4:	b	425294 <wcrtomb@plt+0x20674>
  4252a8:	mov	x0, x27
  4252ac:	subs	w2, w2, #0x1
  4252b0:	ldr	x27, [x27]
  4252b4:	b.eq	424c88 <wcrtomb@plt+0x20068>  // b.none
  4252b8:	b	4252a8 <wcrtomb@plt+0x20688>
  4252bc:	mov	x2, x5
  4252c0:	subs	w0, w0, #0x1
  4252c4:	ldr	x5, [x5]
  4252c8:	b.eq	424b94 <wcrtomb@plt+0x1ff74>  // b.none
  4252cc:	b	4252bc <wcrtomb@plt+0x2069c>
  4252d0:	mov	x2, x25
  4252d4:	subs	w0, w0, #0x1
  4252d8:	ldr	x25, [x25]
  4252dc:	b.eq	425074 <wcrtomb@plt+0x20454>  // b.none
  4252e0:	b	4252d0 <wcrtomb@plt+0x206b0>
  4252e4:	mov	x0, x8
  4252e8:	subs	w2, w2, #0x1
  4252ec:	ldr	x8, [x8]
  4252f0:	b.eq	42414c <wcrtomb@plt+0x1f52c>  // b.none
  4252f4:	b	4252e4 <wcrtomb@plt+0x206c4>
  4252f8:	mov	x0, x22
  4252fc:	subs	w2, w2, #0x1
  425300:	ldr	x22, [x22]
  425304:	b.eq	4232d4 <wcrtomb@plt+0x1e6b4>  // b.none
  425308:	b	4252f8 <wcrtomb@plt+0x206d8>
  42530c:	mov	x0, x7
  425310:	subs	w2, w2, #0x1
  425314:	ldr	x7, [x7]
  425318:	b.eq	423860 <wcrtomb@plt+0x1ec40>  // b.none
  42531c:	b	42530c <wcrtomb@plt+0x206ec>
  425320:	mov	x0, x5
  425324:	subs	w2, w2, #0x1
  425328:	ldr	x5, [x5]
  42532c:	b.eq	423990 <wcrtomb@plt+0x1ed70>  // b.none
  425330:	b	425320 <wcrtomb@plt+0x20700>
  425334:	mov	x0, x7
  425338:	subs	w2, w2, #0x1
  42533c:	ldr	x7, [x7]
  425340:	b.eq	424018 <wcrtomb@plt+0x1f3f8>  // b.none
  425344:	b	425334 <wcrtomb@plt+0x20714>
  425348:	mov	x0, x22
  42534c:	subs	w2, w2, #0x1
  425350:	ldr	x22, [x22]
  425354:	b.eq	423eb8 <wcrtomb@plt+0x1f298>  // b.none
  425358:	b	425348 <wcrtomb@plt+0x20728>
  42535c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425360:	ldr	x0, [x22, #48]
  425364:	ldr	x1, [x1, #888]
  425368:	ldr	x2, [x27, #48]
  42536c:	cbnz	x1, 426f88 <wcrtomb@plt+0x22368>
  425370:	cmp	x0, #0x0
  425374:	cset	w0, ne  // ne = any
  425378:	cmp	x2, #0x0
  42537c:	cset	w1, ne  // ne = any
  425380:	subs	w0, w0, w1
  425384:	b.ne	425394 <wcrtomb@plt+0x20774>  // b.any
  425388:	ldr	x1, [x22, #16]
  42538c:	ldr	x0, [x27, #16]
  425390:	bl	404710 <strcmp@plt>
  425394:	cmp	w0, #0x0
  425398:	b.le	4253a8 <wcrtomb@plt+0x20788>
  42539c:	str	x27, [x22]
  4253a0:	str	xzr, [x27]
  4253a4:	mov	x27, x22
  4253a8:	cmp	x28, #0x0
  4253ac:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  4253b0:	b.eq	426f0c <wcrtomb@plt+0x222ec>  // b.none
  4253b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4253b8:	ldr	x25, [x0, #888]
  4253bc:	cbz	x25, 4261e8 <wcrtomb@plt+0x215c8>
  4253c0:	ldr	x26, [x27, #48]
  4253c4:	mov	x22, x20
  4253c8:	ldr	x2, [x28, #48]
  4253cc:	nop
  4253d0:	cmp	x25, x26
  4253d4:	cset	w0, ls  // ls = plast
  4253d8:	cmp	x2, x25
  4253dc:	cset	w1, cs  // cs = hs, nlast
  4253e0:	subs	w0, w0, w1
  4253e4:	b.ne	4253fc <wcrtomb@plt+0x207dc>  // b.any
  4253e8:	ldr	x1, [x27, #16]
  4253ec:	str	x2, [sp, #128]
  4253f0:	ldr	x0, [x28, #16]
  4253f4:	bl	404710 <strcmp@plt>
  4253f8:	ldr	x2, [sp, #128]
  4253fc:	tbnz	w0, #31, 425420 <wcrtomb@plt+0x20800>
  425400:	ldr	x1, [x27]
  425404:	str	x27, [x22]
  425408:	mov	x0, x27
  42540c:	cbz	x1, 425444 <wcrtomb@plt+0x20824>
  425410:	mov	x27, x1
  425414:	mov	x22, x0
  425418:	ldr	x26, [x1, #48]
  42541c:	b	4253d0 <wcrtomb@plt+0x207b0>
  425420:	ldr	x1, [x28]
  425424:	str	x28, [x22]
  425428:	mov	x0, x28
  42542c:	cbz	x1, 425440 <wcrtomb@plt+0x20820>
  425430:	mov	x28, x1
  425434:	mov	x22, x0
  425438:	ldr	x2, [x1, #48]
  42543c:	b	4253d0 <wcrtomb@plt+0x207b0>
  425440:	mov	x28, x27
  425444:	str	x28, [x0]
  425448:	ldr	x28, [sp, #200]
  42544c:	b	424478 <wcrtomb@plt+0x1f858>
  425450:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425454:	ldr	x0, [x7, #48]
  425458:	ldr	x1, [x1, #888]
  42545c:	ldr	x2, [x28, #48]
  425460:	cbnz	x1, 42703c <wcrtomb@plt+0x2241c>
  425464:	cmp	x0, #0x0
  425468:	cset	w0, ne  // ne = any
  42546c:	cmp	x2, #0x0
  425470:	cset	w1, ne  // ne = any
  425474:	subs	w0, w0, w1
  425478:	b.ne	425490 <wcrtomb@plt+0x20870>  // b.any
  42547c:	ldr	x1, [x7, #16]
  425480:	str	x7, [sp, #136]
  425484:	ldr	x0, [x28, #16]
  425488:	bl	404710 <strcmp@plt>
  42548c:	ldr	x7, [sp, #136]
  425490:	cmp	w0, #0x0
  425494:	b.le	4254a4 <wcrtomb@plt+0x20884>
  425498:	str	x28, [x7]
  42549c:	str	xzr, [x28]
  4254a0:	mov	x28, x7
  4254a4:	cmp	x27, #0x0
  4254a8:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  4254ac:	b.eq	426f18 <wcrtomb@plt+0x222f8>  // b.none
  4254b0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4254b4:	ldr	x25, [x0, #888]
  4254b8:	cbz	x25, 426168 <wcrtomb@plt+0x21548>
  4254bc:	ldr	x7, [x27, #48]
  4254c0:	mov	x22, x20
  4254c4:	ldr	x2, [x28, #48]
  4254c8:	cmp	x2, x25
  4254cc:	cset	w0, cs  // cs = hs, nlast
  4254d0:	cmp	x7, x25
  4254d4:	cset	w1, cs  // cs = hs, nlast
  4254d8:	subs	w0, w0, w1
  4254dc:	b.ne	4254f4 <wcrtomb@plt+0x208d4>  // b.any
  4254e0:	ldr	x0, [x27, #16]
  4254e4:	stp	x2, x7, [sp, #136]
  4254e8:	ldr	x1, [x28, #16]
  4254ec:	bl	404710 <strcmp@plt>
  4254f0:	ldp	x2, x7, [sp, #136]
  4254f4:	tbnz	w0, #31, 425518 <wcrtomb@plt+0x208f8>
  4254f8:	ldr	x1, [x28]
  4254fc:	str	x28, [x22]
  425500:	mov	x0, x28
  425504:	cbz	x1, 42553c <wcrtomb@plt+0x2091c>
  425508:	mov	x28, x1
  42550c:	mov	x22, x0
  425510:	ldr	x2, [x1, #48]
  425514:	b	4254c8 <wcrtomb@plt+0x208a8>
  425518:	ldr	x1, [x27]
  42551c:	str	x27, [x22]
  425520:	mov	x0, x27
  425524:	cbz	x1, 425538 <wcrtomb@plt+0x20918>
  425528:	mov	x27, x1
  42552c:	mov	x22, x0
  425530:	ldr	x7, [x1, #48]
  425534:	b	4254c8 <wcrtomb@plt+0x208a8>
  425538:	mov	x27, x28
  42553c:	str	x27, [x0]
  425540:	ldr	x27, [sp, #200]
  425544:	b	424564 <wcrtomb@plt+0x1f944>
  425548:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42554c:	ldr	x0, [x8, #48]
  425550:	ldr	x1, [x1, #888]
  425554:	ldr	x2, [x28, #48]
  425558:	cbnz	x1, 426f60 <wcrtomb@plt+0x22340>
  42555c:	cmp	x0, #0x0
  425560:	cset	w0, ne  // ne = any
  425564:	cmp	x2, #0x0
  425568:	cset	w1, ne  // ne = any
  42556c:	subs	w0, w0, w1
  425570:	b.ne	425588 <wcrtomb@plt+0x20968>  // b.any
  425574:	ldr	x1, [x8, #16]
  425578:	str	x8, [sp, #144]
  42557c:	ldr	x0, [x28, #16]
  425580:	bl	404710 <strcmp@plt>
  425584:	ldr	x8, [sp, #144]
  425588:	cmp	w0, #0x0
  42558c:	b.le	42559c <wcrtomb@plt+0x2097c>
  425590:	str	x28, [x8]
  425594:	str	xzr, [x28]
  425598:	mov	x28, x8
  42559c:	cmp	x28, #0x0
  4255a0:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  4255a4:	b.eq	426ef4 <wcrtomb@plt+0x222d4>  // b.none
  4255a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4255ac:	ldr	x2, [x0, #888]
  4255b0:	cbz	x2, 425f74 <wcrtomb@plt+0x21354>
  4255b4:	ldr	x9, [x21, #48]
  4255b8:	mov	x25, x20
  4255bc:	ldr	x8, [x28, #48]
  4255c0:	cmp	x2, x8
  4255c4:	cset	w0, ls  // ls = plast
  4255c8:	cmp	x2, x9
  4255cc:	cset	w1, ls  // ls = plast
  4255d0:	subs	w0, w0, w1
  4255d4:	b.ne	4255f4 <wcrtomb@plt+0x209d4>  // b.any
  4255d8:	ldr	x0, [x21, #16]
  4255dc:	stp	x2, x9, [sp, #144]
  4255e0:	ldr	x1, [x28, #16]
  4255e4:	str	x8, [sp, #160]
  4255e8:	bl	404710 <strcmp@plt>
  4255ec:	ldp	x2, x9, [sp, #144]
  4255f0:	ldr	x8, [sp, #160]
  4255f4:	tbnz	w0, #31, 425618 <wcrtomb@plt+0x209f8>
  4255f8:	ldr	x1, [x28]
  4255fc:	str	x28, [x25]
  425600:	mov	x0, x28
  425604:	cbz	x1, 42563c <wcrtomb@plt+0x20a1c>
  425608:	mov	x28, x1
  42560c:	mov	x25, x0
  425610:	ldr	x8, [x1, #48]
  425614:	b	4255c0 <wcrtomb@plt+0x209a0>
  425618:	ldr	x1, [x21]
  42561c:	str	x21, [x25]
  425620:	mov	x0, x21
  425624:	cbz	x1, 425638 <wcrtomb@plt+0x20a18>
  425628:	mov	x21, x1
  42562c:	mov	x25, x0
  425630:	ldr	x9, [x1, #48]
  425634:	b	4255c0 <wcrtomb@plt+0x209a0>
  425638:	mov	x21, x28
  42563c:	str	x21, [x0]
  425640:	ldr	x21, [sp, #200]
  425644:	b	423fa8 <wcrtomb@plt+0x1f388>
  425648:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42564c:	ldr	x0, [x7, #48]
  425650:	ldr	x1, [x1, #888]
  425654:	ldr	x2, [x22, #48]
  425658:	cbnz	x1, 426f24 <wcrtomb@plt+0x22304>
  42565c:	cmp	x0, #0x0
  425660:	cset	w0, ne  // ne = any
  425664:	cmp	x2, #0x0
  425668:	cset	w1, ne  // ne = any
  42566c:	subs	w0, w0, w1
  425670:	b.ne	425688 <wcrtomb@plt+0x20a68>  // b.any
  425674:	ldr	x1, [x7, #16]
  425678:	str	x7, [sp, #136]
  42567c:	ldr	x0, [x22, #16]
  425680:	bl	404710 <strcmp@plt>
  425684:	ldr	x7, [sp, #136]
  425688:	cmp	w0, #0x0
  42568c:	b.le	42569c <wcrtomb@plt+0x20a7c>
  425690:	str	x22, [x7]
  425694:	str	xzr, [x22]
  425698:	mov	x22, x7
  42569c:	cmp	x24, #0x0
  4256a0:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  4256a4:	b.eq	426ee8 <wcrtomb@plt+0x222c8>  // b.none
  4256a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4256ac:	ldr	x27, [x0, #888]
  4256b0:	cbz	x27, 4260e8 <wcrtomb@plt+0x214c8>
  4256b4:	ldr	x2, [x22, #48]
  4256b8:	mov	x25, x20
  4256bc:	ldr	x7, [x24, #48]
  4256c0:	cmp	x2, x27
  4256c4:	cset	w0, cs  // cs = hs, nlast
  4256c8:	cmp	x7, x27
  4256cc:	cset	w1, cs  // cs = hs, nlast
  4256d0:	subs	w0, w0, w1
  4256d4:	b.ne	4256ec <wcrtomb@plt+0x20acc>  // b.any
  4256d8:	ldr	x1, [x22, #16]
  4256dc:	stp	x7, x2, [sp, #136]
  4256e0:	ldr	x0, [x24, #16]
  4256e4:	bl	404710 <strcmp@plt>
  4256e8:	ldp	x7, x2, [sp, #136]
  4256ec:	tbnz	w0, #31, 425710 <wcrtomb@plt+0x20af0>
  4256f0:	ldr	x1, [x22]
  4256f4:	str	x22, [x25]
  4256f8:	mov	x0, x22
  4256fc:	cbz	x1, 425734 <wcrtomb@plt+0x20b14>
  425700:	mov	x22, x1
  425704:	mov	x25, x0
  425708:	ldr	x2, [x1, #48]
  42570c:	b	4256c0 <wcrtomb@plt+0x20aa0>
  425710:	ldr	x1, [x24]
  425714:	str	x24, [x25]
  425718:	mov	x0, x24
  42571c:	cbz	x1, 425730 <wcrtomb@plt+0x20b10>
  425720:	mov	x24, x1
  425724:	mov	x25, x0
  425728:	ldr	x7, [x1, #48]
  42572c:	b	4256c0 <wcrtomb@plt+0x20aa0>
  425730:	mov	x24, x22
  425734:	str	x24, [x0]
  425738:	ldr	x24, [sp, #200]
  42573c:	b	423e48 <wcrtomb@plt+0x1f228>
  425740:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425744:	ldr	x0, [x5, #48]
  425748:	ldr	x1, [x1, #888]
  42574c:	ldr	x2, [x27, #48]
  425750:	cbnz	x1, 426f74 <wcrtomb@plt+0x22354>
  425754:	cmp	x0, #0x0
  425758:	cset	w0, ne  // ne = any
  42575c:	cmp	x2, #0x0
  425760:	cset	w1, ne  // ne = any
  425764:	subs	w0, w0, w1
  425768:	b.ne	425780 <wcrtomb@plt+0x20b60>  // b.any
  42576c:	ldr	x1, [x5, #16]
  425770:	str	x5, [sp, #120]
  425774:	ldr	x0, [x27, #16]
  425778:	bl	404710 <strcmp@plt>
  42577c:	ldr	x5, [sp, #120]
  425780:	cmp	w0, #0x0
  425784:	b.le	425794 <wcrtomb@plt+0x20b74>
  425788:	str	x27, [x5]
  42578c:	str	xzr, [x27]
  425790:	mov	x27, x5
  425794:	cmp	x27, #0x0
  425798:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  42579c:	b.eq	426f00 <wcrtomb@plt+0x222e0>  // b.none
  4257a0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4257a4:	ldr	x25, [x0, #888]
  4257a8:	cbz	x25, 4262d8 <wcrtomb@plt+0x216b8>
  4257ac:	ldr	x2, [x27, #48]
  4257b0:	mov	x24, x20
  4257b4:	ldr	x5, [x28, #48]
  4257b8:	cmp	x25, x2
  4257bc:	cset	w0, ls  // ls = plast
  4257c0:	cmp	x25, x5
  4257c4:	cset	w1, ls  // ls = plast
  4257c8:	subs	w0, w0, w1
  4257cc:	b.ne	4257e4 <wcrtomb@plt+0x20bc4>  // b.any
  4257d0:	ldr	x1, [x27, #16]
  4257d4:	stp	x2, x5, [sp, #120]
  4257d8:	ldr	x0, [x28, #16]
  4257dc:	bl	404710 <strcmp@plt>
  4257e0:	ldp	x2, x5, [sp, #120]
  4257e4:	tbnz	w0, #31, 425808 <wcrtomb@plt+0x20be8>
  4257e8:	ldr	x1, [x27]
  4257ec:	str	x27, [x24]
  4257f0:	mov	x0, x27
  4257f4:	cbz	x1, 42582c <wcrtomb@plt+0x20c0c>
  4257f8:	mov	x27, x1
  4257fc:	mov	x24, x0
  425800:	ldr	x2, [x1, #48]
  425804:	b	4257b8 <wcrtomb@plt+0x20b98>
  425808:	ldr	x1, [x28]
  42580c:	str	x28, [x24]
  425810:	mov	x0, x28
  425814:	cbz	x1, 425828 <wcrtomb@plt+0x20c08>
  425818:	mov	x28, x1
  42581c:	mov	x24, x0
  425820:	ldr	x5, [x1, #48]
  425824:	b	4257b8 <wcrtomb@plt+0x20b98>
  425828:	mov	x28, x27
  42582c:	str	x28, [x0]
  425830:	ldr	x28, [sp, #200]
  425834:	b	423278 <wcrtomb@plt+0x1e658>
  425838:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42583c:	ldr	x0, [x7, #48]
  425840:	ldr	x1, [x1, #888]
  425844:	ldr	x2, [x26, #48]
  425848:	cbnz	x1, 427050 <wcrtomb@plt+0x22430>
  42584c:	cmp	x0, #0x0
  425850:	cset	w0, ne  // ne = any
  425854:	cmp	x2, #0x0
  425858:	cset	w1, ne  // ne = any
  42585c:	subs	w0, w0, w1
  425860:	b.ne	425878 <wcrtomb@plt+0x20c58>  // b.any
  425864:	ldr	x1, [x7, #16]
  425868:	str	x7, [sp, #136]
  42586c:	ldr	x0, [x26, #16]
  425870:	bl	404710 <strcmp@plt>
  425874:	ldr	x7, [sp, #136]
  425878:	cmp	w0, #0x0
  42587c:	b.le	42588c <wcrtomb@plt+0x20c6c>
  425880:	str	x26, [x7]
  425884:	str	xzr, [x26]
  425888:	mov	x26, x7
  42588c:	cmp	x23, #0x0
  425890:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  425894:	b.eq	426ed0 <wcrtomb@plt+0x222b0>  // b.none
  425898:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42589c:	ldr	x27, [x0, #888]
  4258a0:	cbz	x27, 426068 <wcrtomb@plt+0x21448>
  4258a4:	ldr	x7, [x23, #48]
  4258a8:	mov	x22, x20
  4258ac:	ldr	x2, [x26, #48]
  4258b0:	cmp	x27, x2
  4258b4:	cset	w0, ls  // ls = plast
  4258b8:	cmp	x27, x7
  4258bc:	cset	w1, ls  // ls = plast
  4258c0:	subs	w0, w0, w1
  4258c4:	b.ne	4258dc <wcrtomb@plt+0x20cbc>  // b.any
  4258c8:	ldr	x0, [x23, #16]
  4258cc:	stp	x2, x7, [sp, #136]
  4258d0:	ldr	x1, [x26, #16]
  4258d4:	bl	404710 <strcmp@plt>
  4258d8:	ldp	x2, x7, [sp, #136]
  4258dc:	tbnz	w0, #31, 425900 <wcrtomb@plt+0x20ce0>
  4258e0:	ldr	x1, [x26]
  4258e4:	str	x26, [x22]
  4258e8:	mov	x0, x26
  4258ec:	cbz	x1, 425924 <wcrtomb@plt+0x20d04>
  4258f0:	mov	x26, x1
  4258f4:	mov	x22, x0
  4258f8:	ldr	x2, [x1, #48]
  4258fc:	b	4258b0 <wcrtomb@plt+0x20c90>
  425900:	ldr	x1, [x23]
  425904:	str	x23, [x22]
  425908:	mov	x0, x23
  42590c:	cbz	x1, 425920 <wcrtomb@plt+0x20d00>
  425910:	mov	x23, x1
  425914:	mov	x22, x0
  425918:	ldr	x7, [x1, #48]
  42591c:	b	4258b0 <wcrtomb@plt+0x20c90>
  425920:	mov	x23, x26
  425924:	str	x23, [x0]
  425928:	ldr	x23, [sp, #200]
  42592c:	b	4236c8 <wcrtomb@plt+0x1eaa8>
  425930:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425934:	ldr	x0, [x22, #48]
  425938:	ldr	x1, [x1, #888]
  42593c:	ldr	x2, [x24, #48]
  425940:	cbnz	x1, 427028 <wcrtomb@plt+0x22408>
  425944:	cmp	x0, #0x0
  425948:	cset	w0, ne  // ne = any
  42594c:	cmp	x2, #0x0
  425950:	cset	w1, ne  // ne = any
  425954:	subs	w0, w0, w1
  425958:	b.ne	425968 <wcrtomb@plt+0x20d48>  // b.any
  42595c:	ldr	x1, [x22, #16]
  425960:	ldr	x0, [x24, #16]
  425964:	bl	404710 <strcmp@plt>
  425968:	cmp	w0, #0x0
  42596c:	b.le	42597c <wcrtomb@plt+0x20d5c>
  425970:	str	x24, [x22]
  425974:	str	xzr, [x24]
  425978:	mov	x24, x22
  42597c:	cmp	x26, #0x0
  425980:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  425984:	b.eq	426ec4 <wcrtomb@plt+0x222a4>  // b.none
  425988:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42598c:	ldr	x22, [x0, #888]
  425990:	cbz	x22, 426260 <wcrtomb@plt+0x21640>
  425994:	ldr	x25, [x24, #48]
  425998:	mov	x19, x20
  42599c:	ldr	x27, [x26, #48]
  4259a0:	cmp	x22, x25
  4259a4:	cset	w0, ls  // ls = plast
  4259a8:	cmp	x22, x27
  4259ac:	cset	w1, ls  // ls = plast
  4259b0:	subs	w0, w0, w1
  4259b4:	b.ne	4259c4 <wcrtomb@plt+0x20da4>  // b.any
  4259b8:	ldr	x1, [x24, #16]
  4259bc:	ldr	x0, [x26, #16]
  4259c0:	bl	404710 <strcmp@plt>
  4259c4:	tbnz	w0, #31, 4259e8 <wcrtomb@plt+0x20dc8>
  4259c8:	ldr	x1, [x24]
  4259cc:	str	x24, [x19]
  4259d0:	mov	x0, x24
  4259d4:	cbz	x1, 425a0c <wcrtomb@plt+0x20dec>
  4259d8:	mov	x24, x1
  4259dc:	mov	x19, x0
  4259e0:	ldr	x25, [x1, #48]
  4259e4:	b	4259a0 <wcrtomb@plt+0x20d80>
  4259e8:	ldr	x1, [x26]
  4259ec:	str	x26, [x19]
  4259f0:	mov	x0, x26
  4259f4:	cbz	x1, 425a08 <wcrtomb@plt+0x20de8>
  4259f8:	mov	x26, x1
  4259fc:	mov	x19, x0
  425a00:	ldr	x27, [x1, #48]
  425a04:	b	4259a0 <wcrtomb@plt+0x20d80>
  425a08:	mov	x26, x24
  425a0c:	str	x26, [x0]
  425a10:	ldr	x26, [sp, #200]
  425a14:	b	423bbc <wcrtomb@plt+0x1ef9c>
  425a18:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425a1c:	ldr	x0, [x6, #48]
  425a20:	ldr	x1, [x1, #888]
  425a24:	ldr	x2, [x27, #48]
  425a28:	cbnz	x1, 426fc4 <wcrtomb@plt+0x223a4>
  425a2c:	cmp	x0, #0x0
  425a30:	cset	w0, ne  // ne = any
  425a34:	cmp	x2, #0x0
  425a38:	cset	w1, ne  // ne = any
  425a3c:	subs	w0, w0, w1
  425a40:	b.ne	425a58 <wcrtomb@plt+0x20e38>  // b.any
  425a44:	ldr	x1, [x6, #16]
  425a48:	str	x6, [sp, #128]
  425a4c:	ldr	x0, [x27, #16]
  425a50:	bl	404710 <strcmp@plt>
  425a54:	ldr	x6, [sp, #128]
  425a58:	cmp	w0, #0x0
  425a5c:	b.le	425a6c <wcrtomb@plt+0x20e4c>
  425a60:	str	x27, [x6]
  425a64:	str	xzr, [x27]
  425a68:	mov	x27, x6
  425a6c:	cmp	x25, #0x0
  425a70:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  425a74:	b.eq	426edc <wcrtomb@plt+0x222bc>  // b.none
  425a78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  425a7c:	ldr	x24, [x0, #888]
  425a80:	cbz	x24, 425ff0 <wcrtomb@plt+0x213d0>
  425a84:	ldr	x2, [x25, #48]
  425a88:	mov	x22, x20
  425a8c:	ldr	x26, [x27, #48]
  425a90:	cmp	x24, x26
  425a94:	cset	w0, ls  // ls = plast
  425a98:	cmp	x24, x2
  425a9c:	cset	w1, ls  // ls = plast
  425aa0:	subs	w0, w0, w1
  425aa4:	b.ne	425abc <wcrtomb@plt+0x20e9c>  // b.any
  425aa8:	ldr	x0, [x25, #16]
  425aac:	str	x2, [sp, #128]
  425ab0:	ldr	x1, [x27, #16]
  425ab4:	bl	404710 <strcmp@plt>
  425ab8:	ldr	x2, [sp, #128]
  425abc:	tbnz	w0, #31, 425ae0 <wcrtomb@plt+0x20ec0>
  425ac0:	ldr	x1, [x27]
  425ac4:	str	x27, [x22]
  425ac8:	mov	x0, x27
  425acc:	cbz	x1, 425b04 <wcrtomb@plt+0x20ee4>
  425ad0:	mov	x27, x1
  425ad4:	mov	x22, x0
  425ad8:	ldr	x26, [x1, #48]
  425adc:	b	425a90 <wcrtomb@plt+0x20e70>
  425ae0:	ldr	x1, [x25]
  425ae4:	str	x25, [x22]
  425ae8:	mov	x0, x25
  425aec:	cbz	x1, 425b00 <wcrtomb@plt+0x20ee0>
  425af0:	mov	x25, x1
  425af4:	mov	x22, x0
  425af8:	ldr	x2, [x1, #48]
  425afc:	b	425a90 <wcrtomb@plt+0x20e70>
  425b00:	mov	x25, x27
  425b04:	str	x25, [x0]
  425b08:	ldr	x25, [sp, #200]
  425b0c:	b	423ca4 <wcrtomb@plt+0x1f084>
  425b10:	ldr	x1, [x24]
  425b14:	str	x24, [x19]
  425b18:	mov	x0, x24
  425b1c:	cbz	x1, 425d38 <wcrtomb@plt+0x21118>
  425b20:	mov	x24, x1
  425b24:	mov	x19, x0
  425b28:	ldr	x2, [x1, #48]
  425b2c:	b	423328 <wcrtomb@plt+0x1e708>
  425b30:	ldr	x1, [x27]
  425b34:	str	x27, [x24]
  425b38:	mov	x0, x27
  425b3c:	cbz	x1, 425d48 <wcrtomb@plt+0x21128>
  425b40:	mov	x27, x1
  425b44:	mov	x24, x0
  425b48:	ldr	x6, [x1, #48]
  425b4c:	b	4239ec <wcrtomb@plt+0x1edcc>
  425b50:	ldr	x1, [x24]
  425b54:	str	x24, [x2]
  425b58:	mov	x0, x24
  425b5c:	cbz	x1, 425e98 <wcrtomb@plt+0x21278>
  425b60:	mov	x24, x1
  425b64:	mov	x2, x0
  425b68:	ldr	x10, [x1, #48]
  425b6c:	b	4251c4 <wcrtomb@plt+0x205a4>
  425b70:	ldr	x1, [x8]
  425b74:	str	x8, [x2]
  425b78:	mov	x0, x8
  425b7c:	cbz	x1, 425d28 <wcrtomb@plt+0x21108>
  425b80:	mov	x8, x1
  425b84:	mov	x2, x0
  425b88:	ldr	x21, [x1, #48]
  425b8c:	b	424fd4 <wcrtomb@plt+0x203b4>
  425b90:	ldr	x1, [x24]
  425b94:	str	x24, [x28]
  425b98:	mov	x0, x24
  425b9c:	cbz	x1, 425f34 <wcrtomb@plt+0x21314>
  425ba0:	mov	x24, x1
  425ba4:	mov	x28, x0
  425ba8:	ldr	x8, [x1, #48]
  425bac:	b	424de0 <wcrtomb@plt+0x201c0>
  425bb0:	ldr	x1, [x22]
  425bb4:	str	x22, [x25]
  425bb8:	mov	x0, x22
  425bbc:	cbz	x1, 425eb8 <wcrtomb@plt+0x21298>
  425bc0:	mov	x22, x1
  425bc4:	mov	x25, x0
  425bc8:	ldr	x8, [x1, #48]
  425bcc:	b	4242e0 <wcrtomb@plt+0x1f6c0>
  425bd0:	ldr	x1, [x26]
  425bd4:	str	x26, [x22]
  425bd8:	mov	x0, x26
  425bdc:	cbz	x1, 425ea8 <wcrtomb@plt+0x21288>
  425be0:	mov	x26, x1
  425be4:	mov	x22, x0
  425be8:	ldr	x6, [x1, #48]
  425bec:	b	423794 <wcrtomb@plt+0x1eb74>
  425bf0:	ldr	x1, [x27]
  425bf4:	str	x27, [x2]
  425bf8:	mov	x0, x27
  425bfc:	cbz	x1, 425f64 <wcrtomb@plt+0x21344>
  425c00:	mov	x27, x1
  425c04:	mov	x2, x0
  425c08:	ldr	x10, [x1, #48]
  425c0c:	b	4250d0 <wcrtomb@plt+0x204b0>
  425c10:	ldr	x1, [x25]
  425c14:	str	x25, [x22]
  425c18:	mov	x0, x25
  425c1c:	cbz	x1, 425ec8 <wcrtomb@plt+0x212a8>
  425c20:	mov	x25, x1
  425c24:	mov	x22, x0
  425c28:	ldr	x8, [x1, #48]
  425c2c:	b	424ed4 <wcrtomb@plt+0x202b4>
  425c30:	ldr	x1, [x28]
  425c34:	str	x28, [x25]
  425c38:	mov	x0, x28
  425c3c:	cbz	x1, 425f44 <wcrtomb@plt+0x21324>
  425c40:	mov	x28, x1
  425c44:	mov	x25, x0
  425c48:	ldr	x10, [x1, #48]
  425c4c:	b	4241b0 <wcrtomb@plt+0x1f590>
  425c50:	ldr	x1, [x23]
  425c54:	str	x23, [x2]
  425c58:	mov	x0, x23
  425c5c:	cbz	x1, 425d78 <wcrtomb@plt+0x21158>
  425c60:	mov	x23, x1
  425c64:	mov	x2, x0
  425c68:	ldr	x10, [x1, #48]
  425c6c:	b	424ce4 <wcrtomb@plt+0x200c4>
  425c70:	ldr	x1, [x27]
  425c74:	str	x27, [x22]
  425c78:	mov	x0, x27
  425c7c:	cbz	x1, 425f54 <wcrtomb@plt+0x21334>
  425c80:	mov	x27, x1
  425c84:	mov	x22, x0
  425c88:	ldr	x6, [x1, #48]
  425c8c:	b	423f0c <wcrtomb@plt+0x1f2ec>
  425c90:	ldr	x1, [x25]
  425c94:	str	x25, [x26]
  425c98:	mov	x0, x25
  425c9c:	cbz	x1, 425d68 <wcrtomb@plt+0x21148>
  425ca0:	mov	x25, x1
  425ca4:	mov	x26, x0
  425ca8:	ldr	x8, [x1, #48]
  425cac:	b	424afc <wcrtomb@plt+0x1fedc>
  425cb0:	ldr	x1, [x28]
  425cb4:	str	x28, [x22]
  425cb8:	mov	x0, x28
  425cbc:	cbz	x1, 425dd8 <wcrtomb@plt+0x211b8>
  425cc0:	mov	x28, x1
  425cc4:	mov	x22, x0
  425cc8:	ldr	x8, [x1, #48]
  425ccc:	b	424074 <wcrtomb@plt+0x1f454>
  425cd0:	ldr	x1, [x27]
  425cd4:	str	x27, [x22]
  425cd8:	mov	x0, x27
  425cdc:	cbz	x1, 425de8 <wcrtomb@plt+0x211c8>
  425ce0:	mov	x27, x1
  425ce4:	mov	x22, x0
  425ce8:	ldr	x6, [x1, #48]
  425cec:	b	424bf0 <wcrtomb@plt+0x1ffd0>
  425cf0:	ldr	x1, [x26]
  425cf4:	str	x26, [x22]
  425cf8:	mov	x0, x26
  425cfc:	cbz	x1, 425d58 <wcrtomb@plt+0x21138>
  425d00:	mov	x26, x1
  425d04:	mov	x22, x0
  425d08:	ldr	x8, [x1, #48]
  425d0c:	b	4238bc <wcrtomb@plt+0x1ec9c>
  425d10:	cbz	x23, 42722c <wcrtomb@plt+0x2260c>
  425d14:	mov	x0, x20
  425d18:	b	423b24 <wcrtomb@plt+0x1ef04>
  425d1c:	cbz	x21, 4272e0 <wcrtomb@plt+0x226c0>
  425d20:	mov	x0, x20
  425d24:	b	42441c <wcrtomb@plt+0x1f7fc>
  425d28:	mov	x8, x3
  425d2c:	str	x8, [x0]
  425d30:	ldr	x21, [sp, #200]
  425d34:	b	424118 <wcrtomb@plt+0x1f4f8>
  425d38:	mov	x24, x22
  425d3c:	str	x24, [x0]
  425d40:	ldr	x24, [sp, #200]
  425d44:	b	42597c <wcrtomb@plt+0x20d5c>
  425d48:	mov	x27, x25
  425d4c:	str	x27, [x0]
  425d50:	ldr	x27, [sp, #200]
  425d54:	b	425794 <wcrtomb@plt+0x20b74>
  425d58:	mov	x26, x27
  425d5c:	str	x26, [x0]
  425d60:	ldr	x26, [sp, #200]
  425d64:	b	42588c <wcrtomb@plt+0x20c6c>
  425d68:	mov	x25, x22
  425d6c:	str	x25, [x0]
  425d70:	ldr	x25, [sp, #200]
  425d74:	b	423704 <wcrtomb@plt+0x1eae4>
  425d78:	mov	x23, x27
  425d7c:	str	x23, [x0]
  425d80:	ldr	x23, [sp, #200]
  425d84:	b	42382c <wcrtomb@plt+0x1ec0c>
  425d88:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425d8c:	ldr	x0, [x24, #48]
  425d90:	ldr	x1, [x1, #888]
  425d94:	ldr	x5, [x28, #48]
  425d98:	cbnz	x1, 42665c <wcrtomb@plt+0x21a3c>
  425d9c:	cmp	x0, #0x0
  425da0:	cset	w0, ne  // ne = any
  425da4:	cmp	x5, #0x0
  425da8:	cset	w1, ne  // ne = any
  425dac:	subs	w0, w0, w1
  425db0:	b.ne	425dc0 <wcrtomb@plt+0x211a0>  // b.any
  425db4:	ldr	x1, [x24, #16]
  425db8:	ldr	x0, [x28, #16]
  425dbc:	bl	404710 <strcmp@plt>
  425dc0:	cmp	w0, #0x0
  425dc4:	b.le	423278 <wcrtomb@plt+0x1e658>
  425dc8:	str	x28, [x24]
  425dcc:	str	xzr, [x28]
  425dd0:	mov	x28, x24
  425dd4:	b	423278 <wcrtomb@plt+0x1e658>
  425dd8:	mov	x28, x25
  425ddc:	str	x28, [x0]
  425de0:	ldr	x28, [sp, #200]
  425de4:	b	4254a4 <wcrtomb@plt+0x20884>
  425de8:	mov	x27, x26
  425dec:	str	x27, [x0]
  425df0:	ldr	x26, [sp, #200]
  425df4:	b	4232a8 <wcrtomb@plt+0x1e688>
  425df8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425dfc:	ldr	x6, [x23, #48]
  425e00:	ldr	x1, [x1, #888]
  425e04:	ldr	x0, [x27, #48]
  425e08:	cbnz	x1, 426648 <wcrtomb@plt+0x21a28>
  425e0c:	cmp	x0, #0x0
  425e10:	cset	w0, ne  // ne = any
  425e14:	cmp	x6, #0x0
  425e18:	cset	w1, ne  // ne = any
  425e1c:	subs	w0, w0, w1
  425e20:	b.ne	425e30 <wcrtomb@plt+0x21210>  // b.any
  425e24:	ldr	x0, [x23, #16]
  425e28:	ldr	x1, [x27, #16]
  425e2c:	bl	404710 <strcmp@plt>
  425e30:	cmp	w0, #0x0
  425e34:	b.le	4236c8 <wcrtomb@plt+0x1eaa8>
  425e38:	str	x23, [x27]
  425e3c:	str	xzr, [x23]
  425e40:	mov	x23, x27
  425e44:	b	4236c8 <wcrtomb@plt+0x1eaa8>
  425e48:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425e4c:	ldr	x6, [x24, #48]
  425e50:	ldr	x1, [x1, #888]
  425e54:	ldr	x0, [x25, #48]
  425e58:	cbnz	x1, 4266c0 <wcrtomb@plt+0x21aa0>
  425e5c:	cmp	x0, #0x0
  425e60:	cset	w0, ne  // ne = any
  425e64:	cmp	x6, #0x0
  425e68:	cset	w1, ne  // ne = any
  425e6c:	subs	w0, w0, w1
  425e70:	b.ne	425e80 <wcrtomb@plt+0x21260>  // b.any
  425e74:	ldr	x0, [x24, #16]
  425e78:	ldr	x1, [x25, #16]
  425e7c:	bl	404710 <strcmp@plt>
  425e80:	cmp	w0, #0x0
  425e84:	b.le	423e48 <wcrtomb@plt+0x1f228>
  425e88:	str	x24, [x25]
  425e8c:	str	xzr, [x24]
  425e90:	mov	x24, x25
  425e94:	b	423e48 <wcrtomb@plt+0x1f228>
  425e98:	mov	x24, x25
  425e9c:	str	x24, [x0]
  425ea0:	ldr	x24, [sp, #200]
  425ea4:	b	424250 <wcrtomb@plt+0x1f630>
  425ea8:	mov	x26, x24
  425eac:	str	x26, [x0]
  425eb0:	ldr	x27, [sp, #200]
  425eb4:	b	425a6c <wcrtomb@plt+0x20e4c>
  425eb8:	mov	x22, x27
  425ebc:	str	x22, [x0]
  425ec0:	ldr	x22, [sp, #200]
  425ec4:	b	42569c <wcrtomb@plt+0x20a7c>
  425ec8:	mov	x25, x28
  425ecc:	str	x25, [x0]
  425ed0:	ldr	x28, [sp, #200]
  425ed4:	b	423e84 <wcrtomb@plt+0x1f264>
  425ed8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  425edc:	ldr	x0, [x2, #48]
  425ee0:	ldr	x1, [x1, #888]
  425ee4:	ldr	x7, [x21, #48]
  425ee8:	cbnz	x1, 4266ac <wcrtomb@plt+0x21a8c>
  425eec:	cmp	x0, #0x0
  425ef0:	cset	w0, ne  // ne = any
  425ef4:	cmp	x7, #0x0
  425ef8:	cset	w1, ne  // ne = any
  425efc:	subs	w0, w0, w1
  425f00:	b.ne	425f18 <wcrtomb@plt+0x212f8>  // b.any
  425f04:	ldr	x1, [x2, #16]
  425f08:	str	x2, [sp, #144]
  425f0c:	ldr	x0, [x21, #16]
  425f10:	bl	404710 <strcmp@plt>
  425f14:	ldr	x2, [sp, #144]
  425f18:	cmp	w0, #0x0
  425f1c:	b.le	4266d4 <wcrtomb@plt+0x21ab4>
  425f20:	str	x21, [x2]
  425f24:	add	x20, sp, #0xc8
  425f28:	str	xzr, [x21]
  425f2c:	mov	x21, x2
  425f30:	b	423fa8 <wcrtomb@plt+0x1f388>
  425f34:	mov	x24, x2
  425f38:	str	x24, [x0]
  425f3c:	ldr	x28, [sp, #200]
  425f40:	b	42395c <wcrtomb@plt+0x1ed3c>
  425f44:	mov	x28, x2
  425f48:	str	x28, [x0]
  425f4c:	ldr	x28, [sp, #200]
  425f50:	b	42559c <wcrtomb@plt+0x2097c>
  425f54:	mov	x27, x25
  425f58:	str	x27, [x0]
  425f5c:	ldr	x27, [sp, #200]
  425f60:	b	4253a8 <wcrtomb@plt+0x20788>
  425f64:	mov	x27, x25
  425f68:	str	x27, [x0]
  425f6c:	ldr	x27, [sp, #200]
  425f70:	b	423fe4 <wcrtomb@plt+0x1f3c4>
  425f74:	ldr	x8, [x21, #48]
  425f78:	mov	x25, x20
  425f7c:	ldr	x2, [x28, #48]
  425f80:	cmp	x2, #0x0
  425f84:	cset	w0, ne  // ne = any
  425f88:	cmp	x8, #0x0
  425f8c:	cset	w1, ne  // ne = any
  425f90:	subs	w0, w0, w1
  425f94:	b.ne	425fac <wcrtomb@plt+0x2138c>  // b.any
  425f98:	ldr	x0, [x21, #16]
  425f9c:	stp	x8, x2, [sp, #144]
  425fa0:	ldr	x1, [x28, #16]
  425fa4:	bl	404710 <strcmp@plt>
  425fa8:	ldp	x8, x2, [sp, #144]
  425fac:	tbnz	w0, #31, 425fd0 <wcrtomb@plt+0x213b0>
  425fb0:	ldr	x1, [x28]
  425fb4:	str	x28, [x25]
  425fb8:	mov	x0, x28
  425fbc:	cbz	x1, 42563c <wcrtomb@plt+0x20a1c>
  425fc0:	mov	x28, x1
  425fc4:	mov	x25, x0
  425fc8:	ldr	x2, [x1, #48]
  425fcc:	b	425f80 <wcrtomb@plt+0x21360>
  425fd0:	ldr	x1, [x21]
  425fd4:	str	x21, [x25]
  425fd8:	mov	x0, x21
  425fdc:	cbz	x1, 425638 <wcrtomb@plt+0x20a18>
  425fe0:	mov	x21, x1
  425fe4:	mov	x25, x0
  425fe8:	ldr	x8, [x1, #48]
  425fec:	b	425f80 <wcrtomb@plt+0x21360>
  425ff0:	ldr	x26, [x25, #48]
  425ff4:	mov	x22, x20
  425ff8:	ldr	x24, [x27, #48]
  425ffc:	nop
  426000:	cmp	x24, #0x0
  426004:	cset	w0, ne  // ne = any
  426008:	cmp	x26, #0x0
  42600c:	cset	w1, ne  // ne = any
  426010:	subs	w0, w0, w1
  426014:	b.ne	426024 <wcrtomb@plt+0x21404>  // b.any
  426018:	ldr	x0, [x25, #16]
  42601c:	ldr	x1, [x27, #16]
  426020:	bl	404710 <strcmp@plt>
  426024:	tbnz	w0, #31, 426048 <wcrtomb@plt+0x21428>
  426028:	ldr	x1, [x27]
  42602c:	str	x27, [x22]
  426030:	mov	x0, x27
  426034:	cbz	x1, 425b04 <wcrtomb@plt+0x20ee4>
  426038:	mov	x27, x1
  42603c:	mov	x22, x0
  426040:	ldr	x24, [x1, #48]
  426044:	b	426000 <wcrtomb@plt+0x213e0>
  426048:	ldr	x1, [x25]
  42604c:	str	x25, [x22]
  426050:	mov	x0, x25
  426054:	cbz	x1, 425b00 <wcrtomb@plt+0x20ee0>
  426058:	mov	x25, x1
  42605c:	mov	x22, x0
  426060:	ldr	x26, [x1, #48]
  426064:	b	426000 <wcrtomb@plt+0x213e0>
  426068:	ldr	x2, [x23, #48]
  42606c:	mov	x22, x20
  426070:	ldr	x27, [x26, #48]
  426074:	nop
  426078:	cmp	x27, #0x0
  42607c:	cset	w0, ne  // ne = any
  426080:	cmp	x2, #0x0
  426084:	cset	w1, ne  // ne = any
  426088:	subs	w0, w0, w1
  42608c:	b.ne	4260a4 <wcrtomb@plt+0x21484>  // b.any
  426090:	ldr	x0, [x23, #16]
  426094:	str	x2, [sp, #136]
  426098:	ldr	x1, [x26, #16]
  42609c:	bl	404710 <strcmp@plt>
  4260a0:	ldr	x2, [sp, #136]
  4260a4:	tbnz	w0, #31, 4260c8 <wcrtomb@plt+0x214a8>
  4260a8:	ldr	x1, [x26]
  4260ac:	str	x26, [x22]
  4260b0:	mov	x0, x26
  4260b4:	cbz	x1, 425924 <wcrtomb@plt+0x20d04>
  4260b8:	mov	x26, x1
  4260bc:	mov	x22, x0
  4260c0:	ldr	x27, [x1, #48]
  4260c4:	b	426078 <wcrtomb@plt+0x21458>
  4260c8:	ldr	x1, [x23]
  4260cc:	str	x23, [x22]
  4260d0:	mov	x0, x23
  4260d4:	cbz	x1, 425920 <wcrtomb@plt+0x20d00>
  4260d8:	mov	x23, x1
  4260dc:	mov	x22, x0
  4260e0:	ldr	x2, [x1, #48]
  4260e4:	b	426078 <wcrtomb@plt+0x21458>
  4260e8:	ldr	x27, [x22, #48]
  4260ec:	mov	x25, x20
  4260f0:	ldr	x2, [x24, #48]
  4260f4:	nop
  4260f8:	cmp	x27, #0x0
  4260fc:	cset	w0, ne  // ne = any
  426100:	cmp	x2, #0x0
  426104:	cset	w1, ne  // ne = any
  426108:	subs	w0, w0, w1
  42610c:	b.ne	426124 <wcrtomb@plt+0x21504>  // b.any
  426110:	ldr	x1, [x22, #16]
  426114:	str	x2, [sp, #136]
  426118:	ldr	x0, [x24, #16]
  42611c:	bl	404710 <strcmp@plt>
  426120:	ldr	x2, [sp, #136]
  426124:	tbnz	w0, #31, 426148 <wcrtomb@plt+0x21528>
  426128:	ldr	x1, [x22]
  42612c:	str	x22, [x25]
  426130:	mov	x0, x22
  426134:	cbz	x1, 425734 <wcrtomb@plt+0x20b14>
  426138:	mov	x22, x1
  42613c:	mov	x25, x0
  426140:	ldr	x27, [x1, #48]
  426144:	b	4260f8 <wcrtomb@plt+0x214d8>
  426148:	ldr	x1, [x24]
  42614c:	str	x24, [x25]
  426150:	mov	x0, x24
  426154:	cbz	x1, 425730 <wcrtomb@plt+0x20b10>
  426158:	mov	x24, x1
  42615c:	mov	x25, x0
  426160:	ldr	x2, [x1, #48]
  426164:	b	4260f8 <wcrtomb@plt+0x214d8>
  426168:	ldr	x2, [x27, #48]
  42616c:	mov	x22, x20
  426170:	ldr	x25, [x28, #48]
  426174:	nop
  426178:	cmp	x25, #0x0
  42617c:	cset	w0, ne  // ne = any
  426180:	cmp	x2, #0x0
  426184:	cset	w1, ne  // ne = any
  426188:	subs	w0, w0, w1
  42618c:	b.ne	4261a4 <wcrtomb@plt+0x21584>  // b.any
  426190:	ldr	x0, [x27, #16]
  426194:	str	x2, [sp, #136]
  426198:	ldr	x1, [x28, #16]
  42619c:	bl	404710 <strcmp@plt>
  4261a0:	ldr	x2, [sp, #136]
  4261a4:	tbnz	w0, #31, 4261c8 <wcrtomb@plt+0x215a8>
  4261a8:	ldr	x1, [x28]
  4261ac:	str	x28, [x22]
  4261b0:	mov	x0, x28
  4261b4:	cbz	x1, 42553c <wcrtomb@plt+0x2091c>
  4261b8:	mov	x28, x1
  4261bc:	mov	x22, x0
  4261c0:	ldr	x25, [x1, #48]
  4261c4:	b	426178 <wcrtomb@plt+0x21558>
  4261c8:	ldr	x1, [x27]
  4261cc:	str	x27, [x22]
  4261d0:	mov	x0, x27
  4261d4:	cbz	x1, 425538 <wcrtomb@plt+0x20918>
  4261d8:	mov	x27, x1
  4261dc:	mov	x22, x0
  4261e0:	ldr	x2, [x1, #48]
  4261e4:	b	426178 <wcrtomb@plt+0x21558>
  4261e8:	ldr	x25, [x27, #48]
  4261ec:	mov	x22, x20
  4261f0:	ldr	x26, [x28, #48]
  4261f4:	nop
  4261f8:	cmp	x25, #0x0
  4261fc:	cset	w0, ne  // ne = any
  426200:	cmp	x26, #0x0
  426204:	cset	w1, ne  // ne = any
  426208:	subs	w0, w0, w1
  42620c:	b.ne	42621c <wcrtomb@plt+0x215fc>  // b.any
  426210:	ldr	x1, [x27, #16]
  426214:	ldr	x0, [x28, #16]
  426218:	bl	404710 <strcmp@plt>
  42621c:	tbnz	w0, #31, 426240 <wcrtomb@plt+0x21620>
  426220:	ldr	x1, [x27]
  426224:	str	x27, [x22]
  426228:	mov	x0, x27
  42622c:	cbz	x1, 425444 <wcrtomb@plt+0x20824>
  426230:	mov	x27, x1
  426234:	mov	x22, x0
  426238:	ldr	x25, [x1, #48]
  42623c:	b	4261f8 <wcrtomb@plt+0x215d8>
  426240:	ldr	x1, [x28]
  426244:	str	x28, [x22]
  426248:	mov	x0, x28
  42624c:	cbz	x1, 425440 <wcrtomb@plt+0x20820>
  426250:	mov	x28, x1
  426254:	mov	x22, x0
  426258:	ldr	x26, [x1, #48]
  42625c:	b	4261f8 <wcrtomb@plt+0x215d8>
  426260:	ldr	x22, [x24, #48]
  426264:	mov	x19, x20
  426268:	ldr	x25, [x26, #48]
  42626c:	nop
  426270:	cmp	x22, #0x0
  426274:	cset	w0, ne  // ne = any
  426278:	cmp	x25, #0x0
  42627c:	cset	w1, ne  // ne = any
  426280:	subs	w0, w0, w1
  426284:	b.ne	426294 <wcrtomb@plt+0x21674>  // b.any
  426288:	ldr	x1, [x24, #16]
  42628c:	ldr	x0, [x26, #16]
  426290:	bl	404710 <strcmp@plt>
  426294:	tbnz	w0, #31, 4262b8 <wcrtomb@plt+0x21698>
  426298:	ldr	x1, [x24]
  42629c:	str	x24, [x19]
  4262a0:	mov	x0, x24
  4262a4:	cbz	x1, 425a0c <wcrtomb@plt+0x20dec>
  4262a8:	mov	x24, x1
  4262ac:	mov	x19, x0
  4262b0:	ldr	x22, [x1, #48]
  4262b4:	b	426270 <wcrtomb@plt+0x21650>
  4262b8:	ldr	x1, [x26]
  4262bc:	str	x26, [x19]
  4262c0:	mov	x0, x26
  4262c4:	cbz	x1, 425a08 <wcrtomb@plt+0x20de8>
  4262c8:	mov	x26, x1
  4262cc:	mov	x19, x0
  4262d0:	ldr	x25, [x1, #48]
  4262d4:	b	426270 <wcrtomb@plt+0x21650>
  4262d8:	ldr	x25, [x27, #48]
  4262dc:	mov	x24, x20
  4262e0:	ldr	x2, [x28, #48]
  4262e4:	nop
  4262e8:	cmp	x25, #0x0
  4262ec:	cset	w0, ne  // ne = any
  4262f0:	cmp	x2, #0x0
  4262f4:	cset	w1, ne  // ne = any
  4262f8:	subs	w0, w0, w1
  4262fc:	b.ne	426314 <wcrtomb@plt+0x216f4>  // b.any
  426300:	ldr	x1, [x27, #16]
  426304:	str	x2, [sp, #120]
  426308:	ldr	x0, [x28, #16]
  42630c:	bl	404710 <strcmp@plt>
  426310:	ldr	x2, [sp, #120]
  426314:	tbnz	w0, #31, 426338 <wcrtomb@plt+0x21718>
  426318:	ldr	x1, [x27]
  42631c:	str	x27, [x24]
  426320:	mov	x0, x27
  426324:	cbz	x1, 42582c <wcrtomb@plt+0x20c0c>
  426328:	mov	x27, x1
  42632c:	mov	x24, x0
  426330:	ldr	x25, [x1, #48]
  426334:	b	4262e8 <wcrtomb@plt+0x216c8>
  426338:	ldr	x1, [x28]
  42633c:	str	x28, [x24]
  426340:	mov	x0, x28
  426344:	cbz	x1, 425828 <wcrtomb@plt+0x20c08>
  426348:	mov	x28, x1
  42634c:	mov	x24, x0
  426350:	ldr	x2, [x1, #48]
  426354:	b	4262e8 <wcrtomb@plt+0x216c8>
  426358:	add	x20, sp, #0xc8
  42635c:	b	423e0c <wcrtomb@plt+0x1f1ec>
  426360:	cbz	x21, 4272f8 <wcrtomb@plt+0x226d8>
  426364:	mov	x0, x20
  426368:	b	4245fc <wcrtomb@plt+0x1f9dc>
  42636c:	cbz	x23, 4272ec <wcrtomb@plt+0x226cc>
  426370:	mov	x0, x20
  426374:	b	423d34 <wcrtomb@plt+0x1f114>
  426378:	cbz	x28, 4272d4 <wcrtomb@plt+0x226b4>
  42637c:	mov	x0, x20
  426380:	b	423c4c <wcrtomb@plt+0x1f02c>
  426384:	cbz	x24, 4272c8 <wcrtomb@plt+0x226a8>
  426388:	mov	x0, x20
  42638c:	b	42450c <wcrtomb@plt+0x1f8ec>
  426390:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  426394:	ldr	x0, [x9, #48]
  426398:	ldr	x1, [x1, #888]
  42639c:	ldr	x2, [x21, #48]
  4263a0:	cbnz	x1, 426f9c <wcrtomb@plt+0x2237c>
  4263a4:	cmp	x0, #0x0
  4263a8:	cset	w0, ne  // ne = any
  4263ac:	cmp	x2, #0x0
  4263b0:	cset	w1, ne  // ne = any
  4263b4:	subs	w0, w0, w1
  4263b8:	b.ne	4263d0 <wcrtomb@plt+0x217b0>  // b.any
  4263bc:	ldr	x1, [x9, #16]
  4263c0:	str	x9, [sp, #152]
  4263c4:	ldr	x0, [x21, #16]
  4263c8:	bl	404710 <strcmp@plt>
  4263cc:	ldr	x9, [sp, #152]
  4263d0:	cmp	w0, #0x0
  4263d4:	b.le	42707c <wcrtomb@plt+0x2245c>
  4263d8:	str	x21, [x9]
  4263dc:	add	x20, sp, #0xc8
  4263e0:	str	xzr, [x21]
  4263e4:	mov	x21, x9
  4263e8:	b	424118 <wcrtomb@plt+0x1f4f8>
  4263ec:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4263f0:	ldr	x0, [x7, #48]
  4263f4:	ldr	x1, [x1, #888]
  4263f8:	ldr	x2, [x28, #48]
  4263fc:	cbnz	x1, 426fec <wcrtomb@plt+0x223cc>
  426400:	cmp	x0, #0x0
  426404:	cset	w0, ne  // ne = any
  426408:	cmp	x2, #0x0
  42640c:	cset	w1, ne  // ne = any
  426410:	subs	w0, w0, w1
  426414:	b.ne	42642c <wcrtomb@plt+0x2180c>  // b.any
  426418:	ldr	x1, [x7, #16]
  42641c:	str	x7, [sp, #136]
  426420:	ldr	x0, [x28, #16]
  426424:	bl	404710 <strcmp@plt>
  426428:	ldr	x7, [sp, #136]
  42642c:	cmp	w0, #0x0
  426430:	b.le	423e84 <wcrtomb@plt+0x1f264>
  426434:	str	x28, [x7]
  426438:	str	xzr, [x28]
  42643c:	mov	x28, x7
  426440:	b	423e84 <wcrtomb@plt+0x1f264>
  426444:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  426448:	ldr	x0, [x22, #48]
  42644c:	ldr	x1, [x1, #888]
  426450:	ldr	x2, [x25, #48]
  426454:	cbnz	x1, 426fd8 <wcrtomb@plt+0x223b8>
  426458:	cmp	x0, #0x0
  42645c:	cset	w0, ne  // ne = any
  426460:	cmp	x2, #0x0
  426464:	cset	w1, ne  // ne = any
  426468:	subs	w0, w0, w1
  42646c:	b.ne	42647c <wcrtomb@plt+0x2185c>  // b.any
  426470:	ldr	x1, [x22, #16]
  426474:	ldr	x0, [x25, #16]
  426478:	bl	404710 <strcmp@plt>
  42647c:	cmp	w0, #0x0
  426480:	b.le	423704 <wcrtomb@plt+0x1eae4>
  426484:	str	x25, [x22]
  426488:	str	xzr, [x25]
  42648c:	mov	x25, x22
  426490:	b	423704 <wcrtomb@plt+0x1eae4>
  426494:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  426498:	ldr	x2, [x23, #48]
  42649c:	ldr	x1, [x1, #888]
  4264a0:	ldr	x0, [x27, #48]
  4264a4:	cbnz	x1, 426fb0 <wcrtomb@plt+0x22390>
  4264a8:	cmp	x0, #0x0
  4264ac:	cset	w0, ne  // ne = any
  4264b0:	cmp	x2, #0x0
  4264b4:	cset	w1, ne  // ne = any
  4264b8:	subs	w0, w0, w1
  4264bc:	b.ne	4264cc <wcrtomb@plt+0x218ac>  // b.any
  4264c0:	ldr	x0, [x23, #16]
  4264c4:	ldr	x1, [x27, #16]
  4264c8:	bl	404710 <strcmp@plt>
  4264cc:	cmp	w0, #0x0
  4264d0:	b.le	42382c <wcrtomb@plt+0x1ec0c>
  4264d4:	str	x23, [x27]
  4264d8:	str	xzr, [x23]
  4264dc:	mov	x23, x27
  4264e0:	b	42382c <wcrtomb@plt+0x1ec0c>
  4264e4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4264e8:	ldr	x0, [x7, #48]
  4264ec:	ldr	x1, [x1, #888]
  4264f0:	ldr	x2, [x28, #48]
  4264f4:	cbnz	x1, 427000 <wcrtomb@plt+0x223e0>
  4264f8:	cmp	x0, #0x0
  4264fc:	cset	w0, ne  // ne = any
  426500:	cmp	x2, #0x0
  426504:	cset	w1, ne  // ne = any
  426508:	subs	w0, w0, w1
  42650c:	b.ne	426524 <wcrtomb@plt+0x21904>  // b.any
  426510:	ldr	x1, [x7, #16]
  426514:	str	x7, [sp, #128]
  426518:	ldr	x0, [x28, #16]
  42651c:	bl	404710 <strcmp@plt>
  426520:	ldr	x7, [sp, #128]
  426524:	cmp	w0, #0x0
  426528:	b.le	42395c <wcrtomb@plt+0x1ed3c>
  42652c:	str	x28, [x7]
  426530:	str	xzr, [x28]
  426534:	mov	x28, x7
  426538:	b	42395c <wcrtomb@plt+0x1ed3c>
  42653c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  426540:	ldr	x0, [x5, #48]
  426544:	ldr	x1, [x1, #888]
  426548:	ldr	x2, [x26, #48]
  42654c:	cbnz	x1, 426f4c <wcrtomb@plt+0x2232c>
  426550:	cmp	x0, #0x0
  426554:	cset	w0, ne  // ne = any
  426558:	cmp	x2, #0x0
  42655c:	cset	w1, ne  // ne = any
  426560:	subs	w0, w0, w1
  426564:	b.ne	42657c <wcrtomb@plt+0x2195c>  // b.any
  426568:	ldr	x1, [x5, #16]
  42656c:	str	x5, [sp, #120]
  426570:	ldr	x0, [x26, #16]
  426574:	bl	404710 <strcmp@plt>
  426578:	ldr	x5, [sp, #120]
  42657c:	cmp	w0, #0x0
  426580:	b.le	4232a8 <wcrtomb@plt+0x1e688>
  426584:	str	x26, [x5]
  426588:	str	xzr, [x26]
  42658c:	mov	x26, x5
  426590:	b	4232a8 <wcrtomb@plt+0x1e688>
  426594:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  426598:	ldr	x2, [x24, #48]
  42659c:	ldr	x1, [x1, #888]
  4265a0:	ldr	x0, [x25, #48]
  4265a4:	cbnz	x1, 426f38 <wcrtomb@plt+0x22318>
  4265a8:	cmp	x0, #0x0
  4265ac:	cset	w0, ne  // ne = any
  4265b0:	cmp	x2, #0x0
  4265b4:	cset	w1, ne  // ne = any
  4265b8:	subs	w0, w0, w1
  4265bc:	b.ne	4265cc <wcrtomb@plt+0x219ac>  // b.any
  4265c0:	ldr	x0, [x24, #16]
  4265c4:	ldr	x1, [x25, #16]
  4265c8:	bl	404710 <strcmp@plt>
  4265cc:	cmp	w0, #0x0
  4265d0:	b.le	424250 <wcrtomb@plt+0x1f630>
  4265d4:	str	x24, [x25]
  4265d8:	str	xzr, [x24]
  4265dc:	mov	x24, x25
  4265e0:	b	424250 <wcrtomb@plt+0x1f630>
  4265e4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4265e8:	ldr	x0, [x25, #48]
  4265ec:	ldr	x1, [x1, #888]
  4265f0:	ldr	x2, [x27, #48]
  4265f4:	cbnz	x1, 427014 <wcrtomb@plt+0x223f4>
  4265f8:	cmp	x0, #0x0
  4265fc:	cset	w0, ne  // ne = any
  426600:	cmp	x2, #0x0
  426604:	cset	w1, ne  // ne = any
  426608:	subs	w0, w0, w1
  42660c:	b.ne	42661c <wcrtomb@plt+0x219fc>  // b.any
  426610:	ldr	x1, [x25, #16]
  426614:	ldr	x0, [x27, #16]
  426618:	bl	404710 <strcmp@plt>
  42661c:	cmp	w0, #0x0
  426620:	b.le	423fe4 <wcrtomb@plt+0x1f3c4>
  426624:	str	x27, [x25]
  426628:	str	xzr, [x27]
  42662c:	mov	x27, x25
  426630:	b	423fe4 <wcrtomb@plt+0x1f3c4>
  426634:	cmp	x1, x0
  426638:	cset	w0, ls  // ls = plast
  42663c:	cmp	x6, x1
  426640:	cset	w1, cs  // cs = hs, nlast
  426644:	b	423c7c <wcrtomb@plt+0x1f05c>
  426648:	cmp	x1, x0
  42664c:	cset	w0, ls  // ls = plast
  426650:	cmp	x1, x6
  426654:	cset	w1, ls  // ls = plast
  426658:	b	425e1c <wcrtomb@plt+0x211fc>
  42665c:	cmp	x1, x0
  426660:	cset	w0, ls  // ls = plast
  426664:	cmp	x5, x1
  426668:	cset	w1, cs  // cs = hs, nlast
  42666c:	b	425dac <wcrtomb@plt+0x2118c>
  426670:	cmp	x0, x1
  426674:	cset	w0, cs  // cs = hs, nlast
  426678:	cmp	x2, x1
  42667c:	cset	w1, cs  // cs = hs, nlast
  426680:	b	423b94 <wcrtomb@plt+0x1ef74>
  426684:	cmp	x1, x0
  426688:	cset	w0, ls  // ls = plast
  42668c:	cmp	x1, x6
  426690:	cset	w1, ls  // ls = plast
  426694:	b	424450 <wcrtomb@plt+0x1f830>
  426698:	cmp	x1, x0
  42669c:	cset	w0, ls  // ls = plast
  4266a0:	cmp	x1, x7
  4266a4:	cset	w1, ls  // ls = plast
  4266a8:	b	42453c <wcrtomb@plt+0x1f91c>
  4266ac:	cmp	x1, x0
  4266b0:	cset	w0, ls  // ls = plast
  4266b4:	cmp	x1, x7
  4266b8:	cset	w1, ls  // ls = plast
  4266bc:	b	425efc <wcrtomb@plt+0x212dc>
  4266c0:	cmp	x1, x0
  4266c4:	cset	w0, ls  // ls = plast
  4266c8:	cmp	x1, x6
  4266cc:	cset	w1, ls  // ls = plast
  4266d0:	b	425e6c <wcrtomb@plt+0x2124c>
  4266d4:	add	x20, sp, #0xc8
  4266d8:	b	423fa8 <wcrtomb@plt+0x1f388>
  4266dc:	ldr	x2, [x25, #48]
  4266e0:	mov	x24, x20
  4266e4:	ldr	x5, [x27, #48]
  4266e8:	cmp	x2, #0x0
  4266ec:	cset	w0, ne  // ne = any
  4266f0:	cmp	x5, #0x0
  4266f4:	cset	w1, ne  // ne = any
  4266f8:	subs	w0, w0, w1
  4266fc:	b.ne	426714 <wcrtomb@plt+0x21af4>  // b.any
  426700:	ldr	x1, [x25, #16]
  426704:	stp	x2, x5, [sp, #120]
  426708:	ldr	x0, [x27, #16]
  42670c:	bl	404710 <strcmp@plt>
  426710:	ldp	x2, x5, [sp, #120]
  426714:	tbnz	w0, #31, 426738 <wcrtomb@plt+0x21b18>
  426718:	ldr	x1, [x25]
  42671c:	str	x25, [x24]
  426720:	mov	x0, x25
  426724:	cbz	x1, 425d4c <wcrtomb@plt+0x2112c>
  426728:	mov	x25, x1
  42672c:	mov	x24, x0
  426730:	ldr	x2, [x1, #48]
  426734:	b	4266e8 <wcrtomb@plt+0x21ac8>
  426738:	ldr	x1, [x27]
  42673c:	str	x27, [x24]
  426740:	mov	x0, x27
  426744:	cbz	x1, 425d48 <wcrtomb@plt+0x21128>
  426748:	mov	x27, x1
  42674c:	mov	x24, x0
  426750:	ldr	x5, [x1, #48]
  426754:	b	4266e8 <wcrtomb@plt+0x21ac8>
  426758:	ldr	x7, [x22, #48]
  42675c:	mov	x25, x20
  426760:	ldr	x2, [x27, #48]
  426764:	cmp	x2, #0x0
  426768:	cset	w0, ne  // ne = any
  42676c:	cmp	x7, #0x0
  426770:	cset	w1, ne  // ne = any
  426774:	subs	w0, w0, w1
  426778:	b.ne	426790 <wcrtomb@plt+0x21b70>  // b.any
  42677c:	ldr	x0, [x22, #16]
  426780:	stp	x2, x7, [sp, #136]
  426784:	ldr	x1, [x27, #16]
  426788:	bl	404710 <strcmp@plt>
  42678c:	ldp	x2, x7, [sp, #136]
  426790:	tbnz	w0, #31, 4267b4 <wcrtomb@plt+0x21b94>
  426794:	ldr	x1, [x27]
  426798:	str	x27, [x25]
  42679c:	mov	x0, x27
  4267a0:	cbz	x1, 425ebc <wcrtomb@plt+0x2129c>
  4267a4:	mov	x27, x1
  4267a8:	mov	x25, x0
  4267ac:	ldr	x2, [x1, #48]
  4267b0:	b	426764 <wcrtomb@plt+0x21b44>
  4267b4:	ldr	x1, [x22]
  4267b8:	str	x22, [x25]
  4267bc:	mov	x0, x22
  4267c0:	cbz	x1, 425eb8 <wcrtomb@plt+0x21298>
  4267c4:	mov	x22, x1
  4267c8:	mov	x25, x0
  4267cc:	ldr	x7, [x1, #48]
  4267d0:	b	426764 <wcrtomb@plt+0x21b44>
  4267d4:	ldr	x27, [x24, #48]
  4267d8:	mov	x22, x20
  4267dc:	ldr	x2, [x26, #48]
  4267e0:	cmp	x27, #0x0
  4267e4:	cset	w0, ne  // ne = any
  4267e8:	cmp	x2, #0x0
  4267ec:	cset	w1, ne  // ne = any
  4267f0:	subs	w0, w0, w1
  4267f4:	b.ne	42680c <wcrtomb@plt+0x21bec>  // b.any
  4267f8:	ldr	x1, [x24, #16]
  4267fc:	str	x2, [sp, #128]
  426800:	ldr	x0, [x26, #16]
  426804:	bl	404710 <strcmp@plt>
  426808:	ldr	x2, [sp, #128]
  42680c:	tbnz	w0, #31, 426830 <wcrtomb@plt+0x21c10>
  426810:	ldr	x1, [x24]
  426814:	str	x24, [x22]
  426818:	mov	x0, x24
  42681c:	cbz	x1, 425eac <wcrtomb@plt+0x2128c>
  426820:	mov	x24, x1
  426824:	mov	x22, x0
  426828:	ldr	x27, [x1, #48]
  42682c:	b	4267e0 <wcrtomb@plt+0x21bc0>
  426830:	ldr	x1, [x26]
  426834:	str	x26, [x22]
  426838:	mov	x0, x26
  42683c:	cbz	x1, 425ea8 <wcrtomb@plt+0x21288>
  426840:	mov	x26, x1
  426844:	mov	x22, x0
  426848:	ldr	x2, [x1, #48]
  42684c:	b	4267e0 <wcrtomb@plt+0x21bc0>
  426850:	ldr	x2, [x25, #48]
  426854:	mov	x22, x20
  426858:	ldr	x7, [x28, #48]
  42685c:	cmp	x2, #0x0
  426860:	cset	w0, ne  // ne = any
  426864:	cmp	x7, #0x0
  426868:	cset	w1, ne  // ne = any
  42686c:	subs	w0, w0, w1
  426870:	b.ne	426888 <wcrtomb@plt+0x21c68>  // b.any
  426874:	ldr	x1, [x25, #16]
  426878:	stp	x2, x7, [sp, #136]
  42687c:	ldr	x0, [x28, #16]
  426880:	bl	404710 <strcmp@plt>
  426884:	ldp	x2, x7, [sp, #136]
  426888:	tbnz	w0, #31, 4268ac <wcrtomb@plt+0x21c8c>
  42688c:	ldr	x1, [x25]
  426890:	str	x25, [x22]
  426894:	mov	x0, x25
  426898:	cbz	x1, 425ddc <wcrtomb@plt+0x211bc>
  42689c:	mov	x25, x1
  4268a0:	mov	x22, x0
  4268a4:	ldr	x2, [x1, #48]
  4268a8:	b	42685c <wcrtomb@plt+0x21c3c>
  4268ac:	ldr	x1, [x28]
  4268b0:	str	x28, [x22]
  4268b4:	mov	x0, x28
  4268b8:	cbz	x1, 425dd8 <wcrtomb@plt+0x211b8>
  4268bc:	mov	x28, x1
  4268c0:	mov	x22, x0
  4268c4:	ldr	x7, [x1, #48]
  4268c8:	b	42685c <wcrtomb@plt+0x21c3c>
  4268cc:	ldr	x26, [x25, #48]
  4268d0:	mov	x22, x20
  4268d4:	ldr	x2, [x27, #48]
  4268d8:	cmp	x26, #0x0
  4268dc:	cset	w0, ne  // ne = any
  4268e0:	cmp	x2, #0x0
  4268e4:	cset	w1, ne  // ne = any
  4268e8:	subs	w0, w0, w1
  4268ec:	b.ne	426904 <wcrtomb@plt+0x21ce4>  // b.any
  4268f0:	ldr	x1, [x25, #16]
  4268f4:	str	x2, [sp, #128]
  4268f8:	ldr	x0, [x27, #16]
  4268fc:	bl	404710 <strcmp@plt>
  426900:	ldr	x2, [sp, #128]
  426904:	tbnz	w0, #31, 426928 <wcrtomb@plt+0x21d08>
  426908:	ldr	x1, [x25]
  42690c:	str	x25, [x22]
  426910:	mov	x0, x25
  426914:	cbz	x1, 425f58 <wcrtomb@plt+0x21338>
  426918:	mov	x25, x1
  42691c:	mov	x22, x0
  426920:	ldr	x26, [x1, #48]
  426924:	b	4268d8 <wcrtomb@plt+0x21cb8>
  426928:	ldr	x1, [x27]
  42692c:	str	x27, [x22]
  426930:	mov	x0, x27
  426934:	cbz	x1, 425f54 <wcrtomb@plt+0x21334>
  426938:	mov	x27, x1
  42693c:	mov	x22, x0
  426940:	ldr	x2, [x1, #48]
  426944:	b	4268d8 <wcrtomb@plt+0x21cb8>
  426948:	ldr	x8, [x25, #48]
  42694c:	mov	x2, x20
  426950:	ldr	x9, [x27, #48]
  426954:	cmp	x8, #0x0
  426958:	cset	w0, ne  // ne = any
  42695c:	cmp	x9, #0x0
  426960:	cset	w1, ne  // ne = any
  426964:	subs	w0, w0, w1
  426968:	b.ne	426988 <wcrtomb@plt+0x21d68>  // b.any
  42696c:	ldr	x1, [x25, #16]
  426970:	stp	x2, x9, [sp, #144]
  426974:	ldr	x0, [x27, #16]
  426978:	str	x8, [sp, #160]
  42697c:	bl	404710 <strcmp@plt>
  426980:	ldp	x2, x9, [sp, #144]
  426984:	ldr	x8, [sp, #160]
  426988:	tbnz	w0, #31, 4269ac <wcrtomb@plt+0x21d8c>
  42698c:	ldr	x1, [x25]
  426990:	str	x25, [x2]
  426994:	mov	x0, x25
  426998:	cbz	x1, 425f68 <wcrtomb@plt+0x21348>
  42699c:	mov	x25, x1
  4269a0:	mov	x2, x0
  4269a4:	ldr	x8, [x1, #48]
  4269a8:	b	426954 <wcrtomb@plt+0x21d34>
  4269ac:	ldr	x1, [x27]
  4269b0:	str	x27, [x2]
  4269b4:	mov	x0, x27
  4269b8:	cbz	x1, 425f64 <wcrtomb@plt+0x21344>
  4269bc:	mov	x27, x1
  4269c0:	mov	x2, x0
  4269c4:	ldr	x9, [x1, #48]
  4269c8:	b	426954 <wcrtomb@plt+0x21d34>
  4269cc:	ldr	x9, [x24, #48]
  4269d0:	mov	x2, x20
  4269d4:	ldr	x8, [x25, #48]
  4269d8:	cmp	x8, #0x0
  4269dc:	cset	w0, ne  // ne = any
  4269e0:	cmp	x9, #0x0
  4269e4:	cset	w1, ne  // ne = any
  4269e8:	subs	w0, w0, w1
  4269ec:	b.ne	426a0c <wcrtomb@plt+0x21dec>  // b.any
  4269f0:	ldr	x0, [x24, #16]
  4269f4:	stp	x2, x8, [sp, #144]
  4269f8:	ldr	x1, [x25, #16]
  4269fc:	str	x9, [sp, #160]
  426a00:	bl	404710 <strcmp@plt>
  426a04:	ldp	x2, x8, [sp, #144]
  426a08:	ldr	x9, [sp, #160]
  426a0c:	tbnz	w0, #31, 426a30 <wcrtomb@plt+0x21e10>
  426a10:	ldr	x1, [x25]
  426a14:	str	x25, [x2]
  426a18:	mov	x0, x25
  426a1c:	cbz	x1, 425e9c <wcrtomb@plt+0x2127c>
  426a20:	mov	x25, x1
  426a24:	mov	x2, x0
  426a28:	ldr	x8, [x1, #48]
  426a2c:	b	4269d8 <wcrtomb@plt+0x21db8>
  426a30:	ldr	x1, [x24]
  426a34:	str	x24, [x2]
  426a38:	mov	x0, x24
  426a3c:	cbz	x1, 425e98 <wcrtomb@plt+0x21278>
  426a40:	mov	x24, x1
  426a44:	mov	x2, x0
  426a48:	ldr	x9, [x1, #48]
  426a4c:	b	4269d8 <wcrtomb@plt+0x21db8>
  426a50:	ldr	x8, [x2, #48]
  426a54:	mov	x25, x20
  426a58:	ldr	x9, [x28, #48]
  426a5c:	cmp	x8, #0x0
  426a60:	cset	w0, ne  // ne = any
  426a64:	cmp	x9, #0x0
  426a68:	cset	w1, ne  // ne = any
  426a6c:	subs	w0, w0, w1
  426a70:	b.ne	426a90 <wcrtomb@plt+0x21e70>  // b.any
  426a74:	ldr	x1, [x2, #16]
  426a78:	stp	x2, x9, [sp, #144]
  426a7c:	ldr	x0, [x28, #16]
  426a80:	str	x8, [sp, #160]
  426a84:	bl	404710 <strcmp@plt>
  426a88:	ldp	x2, x9, [sp, #144]
  426a8c:	ldr	x8, [sp, #160]
  426a90:	tbnz	w0, #31, 426ab4 <wcrtomb@plt+0x21e94>
  426a94:	ldr	x1, [x2]
  426a98:	str	x2, [x25]
  426a9c:	mov	x0, x2
  426aa0:	cbz	x1, 425f48 <wcrtomb@plt+0x21328>
  426aa4:	mov	x2, x1
  426aa8:	mov	x25, x0
  426aac:	ldr	x8, [x1, #48]
  426ab0:	b	426a5c <wcrtomb@plt+0x21e3c>
  426ab4:	ldr	x1, [x28]
  426ab8:	str	x28, [x25]
  426abc:	mov	x0, x28
  426ac0:	cbz	x1, 425f44 <wcrtomb@plt+0x21324>
  426ac4:	mov	x28, x1
  426ac8:	mov	x25, x0
  426acc:	ldr	x9, [x1, #48]
  426ad0:	b	426a5c <wcrtomb@plt+0x21e3c>
  426ad4:	ldr	x7, [x26, #48]
  426ad8:	mov	x22, x20
  426adc:	ldr	x2, [x27, #48]
  426ae0:	cmp	x2, #0x0
  426ae4:	cset	w0, ne  // ne = any
  426ae8:	cmp	x7, #0x0
  426aec:	cset	w1, ne  // ne = any
  426af0:	subs	w0, w0, w1
  426af4:	b.ne	426b0c <wcrtomb@plt+0x21eec>  // b.any
  426af8:	ldr	x0, [x26, #16]
  426afc:	stp	x2, x7, [sp, #136]
  426b00:	ldr	x1, [x27, #16]
  426b04:	bl	404710 <strcmp@plt>
  426b08:	ldp	x2, x7, [sp, #136]
  426b0c:	tbnz	w0, #31, 426b30 <wcrtomb@plt+0x21f10>
  426b10:	ldr	x1, [x27]
  426b14:	str	x27, [x22]
  426b18:	mov	x0, x27
  426b1c:	cbz	x1, 425d5c <wcrtomb@plt+0x2113c>
  426b20:	mov	x27, x1
  426b24:	mov	x22, x0
  426b28:	ldr	x2, [x1, #48]
  426b2c:	b	426ae0 <wcrtomb@plt+0x21ec0>
  426b30:	ldr	x1, [x26]
  426b34:	str	x26, [x22]
  426b38:	mov	x0, x26
  426b3c:	cbz	x1, 425d58 <wcrtomb@plt+0x21138>
  426b40:	mov	x26, x1
  426b44:	mov	x22, x0
  426b48:	ldr	x7, [x1, #48]
  426b4c:	b	426ae0 <wcrtomb@plt+0x21ec0>
  426b50:	ldr	x25, [x22, #48]
  426b54:	mov	x19, x20
  426b58:	ldr	x27, [x24, #48]
  426b5c:	cmp	x25, #0x0
  426b60:	cset	w0, ne  // ne = any
  426b64:	cmp	x27, #0x0
  426b68:	cset	w1, ne  // ne = any
  426b6c:	subs	w0, w0, w1
  426b70:	b.ne	426b80 <wcrtomb@plt+0x21f60>  // b.any
  426b74:	ldr	x1, [x22, #16]
  426b78:	ldr	x0, [x24, #16]
  426b7c:	bl	404710 <strcmp@plt>
  426b80:	tbnz	w0, #31, 426ba4 <wcrtomb@plt+0x21f84>
  426b84:	ldr	x1, [x22]
  426b88:	str	x22, [x19]
  426b8c:	mov	x0, x22
  426b90:	cbz	x1, 425d3c <wcrtomb@plt+0x2111c>
  426b94:	mov	x22, x1
  426b98:	mov	x19, x0
  426b9c:	ldr	x25, [x1, #48]
  426ba0:	b	426b5c <wcrtomb@plt+0x21f3c>
  426ba4:	ldr	x1, [x24]
  426ba8:	str	x24, [x19]
  426bac:	mov	x0, x24
  426bb0:	cbz	x1, 425d38 <wcrtomb@plt+0x21118>
  426bb4:	mov	x24, x1
  426bb8:	mov	x19, x0
  426bbc:	ldr	x27, [x1, #48]
  426bc0:	b	426b5c <wcrtomb@plt+0x21f3c>
  426bc4:	ldr	x9, [x3, #48]
  426bc8:	mov	x2, x20
  426bcc:	ldr	x21, [x8, #48]
  426bd0:	cmp	x9, #0x0
  426bd4:	cset	w0, ne  // ne = any
  426bd8:	cmp	x21, #0x0
  426bdc:	cset	w1, ne  // ne = any
  426be0:	subs	w0, w0, w1
  426be4:	b.ne	426c04 <wcrtomb@plt+0x21fe4>  // b.any
  426be8:	ldr	x1, [x3, #16]
  426bec:	stp	x8, x3, [sp, #152]
  426bf0:	ldr	x0, [x8, #16]
  426bf4:	stp	x2, x9, [sp, #168]
  426bf8:	bl	404710 <strcmp@plt>
  426bfc:	ldp	x8, x3, [sp, #152]
  426c00:	ldp	x2, x9, [sp, #168]
  426c04:	tbnz	w0, #31, 426c28 <wcrtomb@plt+0x22008>
  426c08:	ldr	x1, [x3]
  426c0c:	str	x3, [x2]
  426c10:	mov	x0, x3
  426c14:	cbz	x1, 425d2c <wcrtomb@plt+0x2110c>
  426c18:	mov	x3, x1
  426c1c:	mov	x2, x0
  426c20:	ldr	x9, [x1, #48]
  426c24:	b	426bd0 <wcrtomb@plt+0x21fb0>
  426c28:	ldr	x1, [x8]
  426c2c:	str	x8, [x2]
  426c30:	mov	x0, x8
  426c34:	cbz	x1, 425d28 <wcrtomb@plt+0x21108>
  426c38:	mov	x8, x1
  426c3c:	mov	x2, x0
  426c40:	ldr	x21, [x1, #48]
  426c44:	b	426bd0 <wcrtomb@plt+0x21fb0>
  426c48:	ldr	x7, [x25, #48]
  426c4c:	mov	x22, x20
  426c50:	ldr	x2, [x28, #48]
  426c54:	cmp	x2, #0x0
  426c58:	cset	w0, ne  // ne = any
  426c5c:	cmp	x7, #0x0
  426c60:	cset	w1, ne  // ne = any
  426c64:	subs	w0, w0, w1
  426c68:	b.ne	426c80 <wcrtomb@plt+0x22060>  // b.any
  426c6c:	ldr	x0, [x25, #16]
  426c70:	stp	x2, x7, [sp, #136]
  426c74:	ldr	x1, [x28, #16]
  426c78:	bl	404710 <strcmp@plt>
  426c7c:	ldp	x2, x7, [sp, #136]
  426c80:	tbnz	w0, #31, 426ca4 <wcrtomb@plt+0x22084>
  426c84:	ldr	x1, [x28]
  426c88:	str	x28, [x22]
  426c8c:	mov	x0, x28
  426c90:	cbz	x1, 425ecc <wcrtomb@plt+0x212ac>
  426c94:	mov	x28, x1
  426c98:	mov	x22, x0
  426c9c:	ldr	x2, [x1, #48]
  426ca0:	b	426c54 <wcrtomb@plt+0x22034>
  426ca4:	ldr	x1, [x25]
  426ca8:	str	x25, [x22]
  426cac:	mov	x0, x25
  426cb0:	cbz	x1, 425ec8 <wcrtomb@plt+0x212a8>
  426cb4:	mov	x25, x1
  426cb8:	mov	x22, x0
  426cbc:	ldr	x7, [x1, #48]
  426cc0:	b	426c54 <wcrtomb@plt+0x22034>
  426cc4:	ldr	x6, [x22, #48]
  426cc8:	mov	x26, x20
  426ccc:	ldr	x7, [x25, #48]
  426cd0:	cmp	x6, #0x0
  426cd4:	cset	w0, ne  // ne = any
  426cd8:	cmp	x7, #0x0
  426cdc:	cset	w1, ne  // ne = any
  426ce0:	subs	w0, w0, w1
  426ce4:	b.ne	426cfc <wcrtomb@plt+0x220dc>  // b.any
  426ce8:	ldr	x1, [x22, #16]
  426cec:	stp	x6, x7, [sp, #136]
  426cf0:	ldr	x0, [x25, #16]
  426cf4:	bl	404710 <strcmp@plt>
  426cf8:	ldp	x6, x7, [sp, #136]
  426cfc:	tbnz	w0, #31, 426d20 <wcrtomb@plt+0x22100>
  426d00:	ldr	x1, [x22]
  426d04:	str	x22, [x26]
  426d08:	mov	x0, x22
  426d0c:	cbz	x1, 425d6c <wcrtomb@plt+0x2114c>
  426d10:	mov	x22, x1
  426d14:	mov	x26, x0
  426d18:	ldr	x6, [x1, #48]
  426d1c:	b	426cd0 <wcrtomb@plt+0x220b0>
  426d20:	ldr	x1, [x25]
  426d24:	str	x25, [x26]
  426d28:	mov	x0, x25
  426d2c:	cbz	x1, 425d68 <wcrtomb@plt+0x21148>
  426d30:	mov	x25, x1
  426d34:	mov	x26, x0
  426d38:	ldr	x7, [x1, #48]
  426d3c:	b	426cd0 <wcrtomb@plt+0x220b0>
  426d40:	ldr	x5, [x2, #48]
  426d44:	mov	x28, x20
  426d48:	ldr	x7, [x24, #48]
  426d4c:	cmp	x5, #0x0
  426d50:	cset	w0, ne  // ne = any
  426d54:	cmp	x7, #0x0
  426d58:	cset	w1, ne  // ne = any
  426d5c:	subs	w0, w0, w1
  426d60:	b.ne	426d80 <wcrtomb@plt+0x22160>  // b.any
  426d64:	ldr	x1, [x2, #16]
  426d68:	stp	x2, x5, [sp, #128]
  426d6c:	ldr	x0, [x24, #16]
  426d70:	str	x7, [sp, #144]
  426d74:	bl	404710 <strcmp@plt>
  426d78:	ldp	x2, x5, [sp, #128]
  426d7c:	ldr	x7, [sp, #144]
  426d80:	tbnz	w0, #31, 426da4 <wcrtomb@plt+0x22184>
  426d84:	ldr	x1, [x2]
  426d88:	str	x2, [x28]
  426d8c:	mov	x0, x2
  426d90:	cbz	x1, 425f38 <wcrtomb@plt+0x21318>
  426d94:	mov	x2, x1
  426d98:	mov	x28, x0
  426d9c:	ldr	x5, [x1, #48]
  426da0:	b	426d4c <wcrtomb@plt+0x2212c>
  426da4:	ldr	x1, [x24]
  426da8:	str	x24, [x28]
  426dac:	mov	x0, x24
  426db0:	cbz	x1, 425f34 <wcrtomb@plt+0x21314>
  426db4:	mov	x24, x1
  426db8:	mov	x28, x0
  426dbc:	ldr	x7, [x1, #48]
  426dc0:	b	426d4c <wcrtomb@plt+0x2212c>
  426dc4:	ldr	x2, [x26, #48]
  426dc8:	mov	x22, x20
  426dcc:	ldr	x5, [x27, #48]
  426dd0:	cmp	x2, #0x0
  426dd4:	cset	w0, ne  // ne = any
  426dd8:	cmp	x5, #0x0
  426ddc:	cset	w1, ne  // ne = any
  426de0:	subs	w0, w0, w1
  426de4:	b.ne	426dfc <wcrtomb@plt+0x221dc>  // b.any
  426de8:	ldr	x1, [x26, #16]
  426dec:	stp	x2, x5, [sp, #120]
  426df0:	ldr	x0, [x27, #16]
  426df4:	bl	404710 <strcmp@plt>
  426df8:	ldp	x2, x5, [sp, #120]
  426dfc:	tbnz	w0, #31, 426e20 <wcrtomb@plt+0x22200>
  426e00:	ldr	x1, [x26]
  426e04:	str	x26, [x22]
  426e08:	mov	x0, x26
  426e0c:	cbz	x1, 425dec <wcrtomb@plt+0x211cc>
  426e10:	mov	x26, x1
  426e14:	mov	x22, x0
  426e18:	ldr	x2, [x1, #48]
  426e1c:	b	426dd0 <wcrtomb@plt+0x221b0>
  426e20:	ldr	x1, [x27]
  426e24:	str	x27, [x22]
  426e28:	mov	x0, x27
  426e2c:	cbz	x1, 425de8 <wcrtomb@plt+0x211c8>
  426e30:	mov	x27, x1
  426e34:	mov	x22, x0
  426e38:	ldr	x5, [x1, #48]
  426e3c:	b	426dd0 <wcrtomb@plt+0x221b0>
  426e40:	ldr	x9, [x23, #48]
  426e44:	mov	x2, x20
  426e48:	ldr	x8, [x27, #48]
  426e4c:	cmp	x8, #0x0
  426e50:	cset	w0, ne  // ne = any
  426e54:	cmp	x9, #0x0
  426e58:	cset	w1, ne  // ne = any
  426e5c:	subs	w0, w0, w1
  426e60:	b.ne	426e80 <wcrtomb@plt+0x22260>  // b.any
  426e64:	ldr	x0, [x23, #16]
  426e68:	stp	x2, x8, [sp, #144]
  426e6c:	ldr	x1, [x27, #16]
  426e70:	str	x9, [sp, #160]
  426e74:	bl	404710 <strcmp@plt>
  426e78:	ldp	x2, x8, [sp, #144]
  426e7c:	ldr	x9, [sp, #160]
  426e80:	tbnz	w0, #31, 426ea4 <wcrtomb@plt+0x22284>
  426e84:	ldr	x1, [x27]
  426e88:	str	x27, [x2]
  426e8c:	mov	x0, x27
  426e90:	cbz	x1, 425d7c <wcrtomb@plt+0x2115c>
  426e94:	mov	x27, x1
  426e98:	mov	x2, x0
  426e9c:	ldr	x8, [x1, #48]
  426ea0:	b	426e4c <wcrtomb@plt+0x2222c>
  426ea4:	ldr	x1, [x23]
  426ea8:	str	x23, [x2]
  426eac:	mov	x0, x23
  426eb0:	cbz	x1, 425d78 <wcrtomb@plt+0x21158>
  426eb4:	mov	x23, x1
  426eb8:	mov	x2, x0
  426ebc:	ldr	x9, [x1, #48]
  426ec0:	b	426e4c <wcrtomb@plt+0x2222c>
  426ec4:	cbz	x26, 427208 <wcrtomb@plt+0x225e8>
  426ec8:	mov	x0, x20
  426ecc:	b	425a0c <wcrtomb@plt+0x20dec>
  426ed0:	cbz	x23, 4272bc <wcrtomb@plt+0x2269c>
  426ed4:	mov	x0, x20
  426ed8:	b	425924 <wcrtomb@plt+0x20d04>
  426edc:	cbz	x25, 42728c <wcrtomb@plt+0x2266c>
  426ee0:	mov	x0, x20
  426ee4:	b	425b04 <wcrtomb@plt+0x20ee4>
  426ee8:	cbz	x24, 4271cc <wcrtomb@plt+0x225ac>
  426eec:	mov	x0, x20
  426ef0:	b	425734 <wcrtomb@plt+0x20b14>
  426ef4:	cbz	x21, 4271d8 <wcrtomb@plt+0x225b8>
  426ef8:	mov	x0, x20
  426efc:	b	42563c <wcrtomb@plt+0x20a1c>
  426f00:	cbz	x28, 4272a4 <wcrtomb@plt+0x22684>
  426f04:	mov	x0, x20
  426f08:	b	42582c <wcrtomb@plt+0x20c0c>
  426f0c:	cbz	x28, 4272b0 <wcrtomb@plt+0x22690>
  426f10:	mov	x0, x20
  426f14:	b	425444 <wcrtomb@plt+0x20824>
  426f18:	cbz	x27, 427238 <wcrtomb@plt+0x22618>
  426f1c:	mov	x0, x20
  426f20:	b	42553c <wcrtomb@plt+0x2091c>
  426f24:	cmp	x0, x1
  426f28:	cset	w0, cs  // cs = hs, nlast
  426f2c:	cmp	x1, x2
  426f30:	cset	w1, ls  // ls = plast
  426f34:	b	42566c <wcrtomb@plt+0x20a4c>
  426f38:	cmp	x1, x0
  426f3c:	cset	w0, ls  // ls = plast
  426f40:	cmp	x1, x2
  426f44:	cset	w1, ls  // ls = plast
  426f48:	b	4265b8 <wcrtomb@plt+0x21998>
  426f4c:	cmp	x1, x0
  426f50:	cset	w0, ls  // ls = plast
  426f54:	cmp	x2, x1
  426f58:	cset	w1, cs  // cs = hs, nlast
  426f5c:	b	426560 <wcrtomb@plt+0x21940>
  426f60:	cmp	x0, x1
  426f64:	cset	w0, cs  // cs = hs, nlast
  426f68:	cmp	x2, x1
  426f6c:	cset	w1, cs  // cs = hs, nlast
  426f70:	b	42556c <wcrtomb@plt+0x2094c>
  426f74:	cmp	x0, x1
  426f78:	cset	w0, cs  // cs = hs, nlast
  426f7c:	cmp	x1, x2
  426f80:	cset	w1, ls  // ls = plast
  426f84:	b	425764 <wcrtomb@plt+0x20b44>
  426f88:	cmp	x1, x0
  426f8c:	cset	w0, ls  // ls = plast
  426f90:	cmp	x1, x2
  426f94:	cset	w1, ls  // ls = plast
  426f98:	b	425380 <wcrtomb@plt+0x20760>
  426f9c:	cmp	x0, x1
  426fa0:	cset	w0, cs  // cs = hs, nlast
  426fa4:	cmp	x2, x1
  426fa8:	cset	w1, cs  // cs = hs, nlast
  426fac:	b	4263b4 <wcrtomb@plt+0x21794>
  426fb0:	cmp	x1, x0
  426fb4:	cset	w0, ls  // ls = plast
  426fb8:	cmp	x1, x2
  426fbc:	cset	w1, ls  // ls = plast
  426fc0:	b	4264b8 <wcrtomb@plt+0x21898>
  426fc4:	cmp	x1, x0
  426fc8:	cset	w0, ls  // ls = plast
  426fcc:	cmp	x2, x1
  426fd0:	cset	w1, cs  // cs = hs, nlast
  426fd4:	b	425a3c <wcrtomb@plt+0x20e1c>
  426fd8:	cmp	x1, x0
  426fdc:	cset	w0, ls  // ls = plast
  426fe0:	cmp	x2, x1
  426fe4:	cset	w1, cs  // cs = hs, nlast
  426fe8:	b	426468 <wcrtomb@plt+0x21848>
  426fec:	cmp	x0, x1
  426ff0:	cset	w0, cs  // cs = hs, nlast
  426ff4:	cmp	x1, x2
  426ff8:	cset	w1, ls  // ls = plast
  426ffc:	b	426410 <wcrtomb@plt+0x217f0>
  427000:	cmp	x1, x0
  427004:	cset	w0, ls  // ls = plast
  427008:	cmp	x1, x2
  42700c:	cset	w1, ls  // ls = plast
  427010:	b	426508 <wcrtomb@plt+0x218e8>
  427014:	cmp	x1, x0
  427018:	cset	w0, ls  // ls = plast
  42701c:	cmp	x2, x1
  427020:	cset	w1, cs  // cs = hs, nlast
  427024:	b	426608 <wcrtomb@plt+0x219e8>
  427028:	cmp	x0, x1
  42702c:	cset	w0, cs  // cs = hs, nlast
  427030:	cmp	x2, x1
  427034:	cset	w1, cs  // cs = hs, nlast
  427038:	b	425954 <wcrtomb@plt+0x20d34>
  42703c:	cmp	x1, x0
  427040:	cset	w0, ls  // ls = plast
  427044:	cmp	x1, x2
  427048:	cset	w1, ls  // ls = plast
  42704c:	b	425474 <wcrtomb@plt+0x20854>
  427050:	cmp	x1, x0
  427054:	cset	w0, ls  // ls = plast
  427058:	cmp	x1, x2
  42705c:	cset	w1, ls  // ls = plast
  427060:	b	42585c <wcrtomb@plt+0x20c3c>
  427064:	cbz	x27, 427298 <wcrtomb@plt+0x22678>
  427068:	mov	x0, x20
  42706c:	b	425dec <wcrtomb@plt+0x211cc>
  427070:	cbz	x25, 427280 <wcrtomb@plt+0x22660>
  427074:	mov	x0, x20
  427078:	b	425ecc <wcrtomb@plt+0x212ac>
  42707c:	add	x20, sp, #0xc8
  427080:	b	424118 <wcrtomb@plt+0x1f4f8>
  427084:	cbz	x24, 427274 <wcrtomb@plt+0x22654>
  427088:	mov	x0, x20
  42708c:	b	425e9c <wcrtomb@plt+0x2127c>
  427090:	add	x20, sp, #0xc8
  427094:	cbz	x8, 427268 <wcrtomb@plt+0x22648>
  427098:	mov	x0, x20
  42709c:	b	425d2c <wcrtomb@plt+0x2110c>
  4270a0:	cbz	x24, 42725c <wcrtomb@plt+0x2263c>
  4270a4:	mov	x0, x20
  4270a8:	b	425f38 <wcrtomb@plt+0x21318>
  4270ac:	cbz	x23, 427250 <wcrtomb@plt+0x22630>
  4270b0:	mov	x0, x20
  4270b4:	b	425d7c <wcrtomb@plt+0x2115c>
  4270b8:	cbz	x28, 427244 <wcrtomb@plt+0x22624>
  4270bc:	mov	x0, x20
  4270c0:	b	425ddc <wcrtomb@plt+0x211bc>
  4270c4:	cbz	x27, 4271c0 <wcrtomb@plt+0x225a0>
  4270c8:	mov	x0, x20
  4270cc:	b	425f58 <wcrtomb@plt+0x21338>
  4270d0:	cbz	x26, 4271b4 <wcrtomb@plt+0x22594>
  4270d4:	mov	x0, x20
  4270d8:	b	425d5c <wcrtomb@plt+0x2113c>
  4270dc:	cbz	x27, 427144 <wcrtomb@plt+0x22524>
  4270e0:	mov	x0, x20
  4270e4:	b	425d4c <wcrtomb@plt+0x2112c>
  4270e8:	cbz	x27, 427220 <wcrtomb@plt+0x22600>
  4270ec:	mov	x0, x20
  4270f0:	b	425f68 <wcrtomb@plt+0x21348>
  4270f4:	cbz	x25, 427214 <wcrtomb@plt+0x225f4>
  4270f8:	mov	x0, x20
  4270fc:	b	425d6c <wcrtomb@plt+0x2114c>
  427100:	cbz	x26, 4271fc <wcrtomb@plt+0x225dc>
  427104:	mov	x0, x20
  427108:	b	425eac <wcrtomb@plt+0x2128c>
  42710c:	cbz	x22, 4271f0 <wcrtomb@plt+0x225d0>
  427110:	mov	x0, x20
  427114:	b	425ebc <wcrtomb@plt+0x2129c>
  427118:	cbz	x28, 4271e4 <wcrtomb@plt+0x225c4>
  42711c:	mov	x0, x20
  427120:	b	425f48 <wcrtomb@plt+0x21328>
  427124:	cbz	x24, 427138 <wcrtomb@plt+0x22518>
  427128:	mov	x0, x20
  42712c:	b	425d3c <wcrtomb@plt+0x2111c>
  427130:	stp	x27, x28, [sp, #80]
  427134:	bl	4104a0 <wcrtomb@plt+0xb880>
  427138:	mov	x24, x0
  42713c:	mov	x0, x20
  427140:	b	425d3c <wcrtomb@plt+0x2111c>
  427144:	mov	x27, x0
  427148:	mov	x0, x20
  42714c:	b	425d4c <wcrtomb@plt+0x2112c>
  427150:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  427154:	stp	x27, x28, [sp, #80]
  427158:	ldr	x0, [x0, #1136]
  42715c:	cbz	x0, 427164 <wcrtomb@plt+0x22544>
  427160:	blr	x0
  427164:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  427168:	add	x1, x1, #0x378
  42716c:	mov	w2, #0x5                   	// #5
  427170:	mov	x0, #0x0                   	// #0
  427174:	bl	4049c0 <dcgettext@plt>
  427178:	mov	x2, x0
  42717c:	mov	w1, #0x0                   	// #0
  427180:	mov	w0, #0x0                   	// #0
  427184:	bl	404050 <error@plt>
  427188:	mov	w0, #0x2                   	// #2
  42718c:	bl	42c3b0 <wcrtomb@plt+0x27790>
  427190:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  427194:	stp	x27, x28, [sp, #80]
  427198:	ldr	x0, [x0, #1136]
  42719c:	cbz	x0, 4271a4 <wcrtomb@plt+0x22584>
  4271a0:	blr	x0
  4271a4:	adrp	x1, 46a000 <_obstack_memory_used@@Base+0x18bf0>
  4271a8:	mov	w2, #0x5                   	// #5
  4271ac:	add	x1, x1, #0x3c8
  4271b0:	b	427170 <wcrtomb@plt+0x22550>
  4271b4:	mov	x26, x0
  4271b8:	mov	x0, x20
  4271bc:	b	425d5c <wcrtomb@plt+0x2113c>
  4271c0:	mov	x27, x0
  4271c4:	mov	x0, x20
  4271c8:	b	425f58 <wcrtomb@plt+0x21338>
  4271cc:	mov	x24, x22
  4271d0:	mov	x0, x20
  4271d4:	b	425734 <wcrtomb@plt+0x20b14>
  4271d8:	mov	x21, x28
  4271dc:	mov	x0, x20
  4271e0:	b	42563c <wcrtomb@plt+0x20a1c>
  4271e4:	mov	x28, x0
  4271e8:	mov	x0, x20
  4271ec:	b	425f48 <wcrtomb@plt+0x21328>
  4271f0:	mov	x22, x0
  4271f4:	mov	x0, x20
  4271f8:	b	425ebc <wcrtomb@plt+0x2129c>
  4271fc:	mov	x26, x0
  427200:	mov	x0, x20
  427204:	b	425eac <wcrtomb@plt+0x2128c>
  427208:	mov	x26, x24
  42720c:	mov	x0, x20
  427210:	b	425a0c <wcrtomb@plt+0x20dec>
  427214:	mov	x25, x0
  427218:	mov	x0, x20
  42721c:	b	425d6c <wcrtomb@plt+0x2114c>
  427220:	mov	x27, x0
  427224:	mov	x0, x20
  427228:	b	425f68 <wcrtomb@plt+0x21348>
  42722c:	mov	x23, x28
  427230:	mov	x0, x20
  427234:	b	423b24 <wcrtomb@plt+0x1ef04>
  427238:	mov	x27, x28
  42723c:	mov	x0, x20
  427240:	b	42553c <wcrtomb@plt+0x2091c>
  427244:	mov	x28, x0
  427248:	mov	x0, x20
  42724c:	b	425ddc <wcrtomb@plt+0x211bc>
  427250:	mov	x23, x0
  427254:	mov	x0, x20
  427258:	b	425d7c <wcrtomb@plt+0x2115c>
  42725c:	mov	x24, x0
  427260:	mov	x0, x20
  427264:	b	425f38 <wcrtomb@plt+0x21318>
  427268:	mov	x8, x0
  42726c:	mov	x0, x20
  427270:	b	425d2c <wcrtomb@plt+0x2110c>
  427274:	mov	x24, x0
  427278:	mov	x0, x20
  42727c:	b	425e9c <wcrtomb@plt+0x2127c>
  427280:	mov	x25, x0
  427284:	mov	x0, x20
  427288:	b	425ecc <wcrtomb@plt+0x212ac>
  42728c:	mov	x25, x27
  427290:	mov	x0, x20
  427294:	b	425b04 <wcrtomb@plt+0x20ee4>
  427298:	mov	x27, x0
  42729c:	mov	x0, x20
  4272a0:	b	425dec <wcrtomb@plt+0x211cc>
  4272a4:	mov	x28, x27
  4272a8:	mov	x0, x20
  4272ac:	b	42582c <wcrtomb@plt+0x20c0c>
  4272b0:	mov	x28, x27
  4272b4:	mov	x0, x20
  4272b8:	b	425444 <wcrtomb@plt+0x20824>
  4272bc:	mov	x23, x26
  4272c0:	mov	x0, x20
  4272c4:	b	425924 <wcrtomb@plt+0x20d04>
  4272c8:	mov	x24, x28
  4272cc:	mov	x0, x20
  4272d0:	b	42450c <wcrtomb@plt+0x1f8ec>
  4272d4:	mov	x28, x26
  4272d8:	mov	x0, x20
  4272dc:	b	423c4c <wcrtomb@plt+0x1f02c>
  4272e0:	mov	x21, x24
  4272e4:	mov	x0, x20
  4272e8:	b	42441c <wcrtomb@plt+0x1f7fc>
  4272ec:	mov	x23, x25
  4272f0:	mov	x0, x20
  4272f4:	b	423d34 <wcrtomb@plt+0x1f114>
  4272f8:	mov	x21, x27
  4272fc:	mov	x0, x20
  427300:	b	4245fc <wcrtomb@plt+0x1f9dc>
  427304:	nop
  427308:	stp	x29, x30, [sp, #-48]!
  42730c:	mov	x29, sp
  427310:	stp	x19, x20, [sp, #16]
  427314:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  427318:	add	x20, x20, #0xaf0
  42731c:	stp	x21, x22, [sp, #32]
  427320:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  427324:	mov	x21, x0
  427328:	ldr	x19, [x20, #168]
  42732c:	add	x22, x22, #0x300
  427330:	cbnz	x19, 427340 <wcrtomb@plt+0x22720>
  427334:	b	427360 <wcrtomb@plt+0x22740>
  427338:	ldr	x19, [x19]
  42733c:	cbz	x19, 427374 <wcrtomb@plt+0x22754>
  427340:	ldr	x0, [x19, #16]
  427344:	ldrb	w1, [x0]
  427348:	cbz	w1, 427338 <wcrtomb@plt+0x22718>
  42734c:	ldr	w2, [x19, #32]
  427350:	mov	x1, x21
  427354:	bl	441ef0 <argp_parse@@Base+0x2110>
  427358:	tst	w0, #0xff
  42735c:	b.eq	427338 <wcrtomb@plt+0x22718>  // b.none
  427360:	mov	x0, x19
  427364:	ldp	x19, x20, [sp, #16]
  427368:	ldp	x21, x22, [sp, #32]
  42736c:	ldp	x29, x30, [sp], #48
  427370:	ret
  427374:	ldrb	w0, [x22]
  427378:	cbz	w0, 427360 <wcrtomb@plt+0x22740>
  42737c:	ldr	x1, [x20, #168]
  427380:	cbz	x1, 427360 <wcrtomb@plt+0x22740>
  427384:	ldr	x1, [x1, #48]
  427388:	cbz	x1, 427360 <wcrtomb@plt+0x22740>
  42738c:	bl	422440 <wcrtomb@plt+0x1d820>
  427390:	ldr	x1, [x20, #168]
  427394:	ldr	x0, [x1, #48]
  427398:	cbnz	x0, 427360 <wcrtomb@plt+0x22740>
  42739c:	mov	x19, x1
  4273a0:	b	427330 <wcrtomb@plt+0x22710>
  4273a4:	nop
  4273a8:	stp	x29, x30, [sp, #-32]!
  4273ac:	mov	x29, sp
  4273b0:	str	x19, [sp, #16]
  4273b4:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  4273b8:	ldr	x1, [x19, #144]
  4273bc:	cbz	x1, 427410 <wcrtomb@plt+0x227f0>
  4273c0:	ldr	x0, [x1, #48]
  4273c4:	cbnz	x0, 4273d4 <wcrtomb@plt+0x227b4>
  4273c8:	ldr	x0, [x1, #16]
  4273cc:	ldrb	w0, [x0]
  4273d0:	cbnz	w0, 4273f0 <wcrtomb@plt+0x227d0>
  4273d4:	ldr	x1, [x1]
  4273d8:	str	x1, [x19, #144]
  4273dc:	cbnz	x1, 4273c0 <wcrtomb@plt+0x227a0>
  4273e0:	mov	x0, #0x0                   	// #0
  4273e4:	ldr	x19, [sp, #16]
  4273e8:	ldp	x29, x30, [sp], #32
  4273ec:	ret
  4273f0:	ldr	w0, [x1, #40]
  4273f4:	mov	x2, #0x1                   	// #1
  4273f8:	str	x2, [x1, #48]
  4273fc:	bl	420060 <wcrtomb@plt+0x1b440>
  427400:	ldr	x0, [x19, #144]
  427404:	ldr	x19, [sp, #16]
  427408:	ldp	x29, x30, [sp], #32
  42740c:	ret
  427410:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  427414:	ldr	x1, [x0, #2968]
  427418:	str	x1, [x19, #144]
  42741c:	cbnz	x1, 4273c0 <wcrtomb@plt+0x227a0>
  427420:	b	4273e0 <wcrtomb@plt+0x227c0>
  427424:	nop
  427428:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42742c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  427430:	ldr	x0, [x0, #2968]
  427434:	str	xzr, [x1, #144]
  427438:	cbz	x0, 42744c <wcrtomb@plt+0x2282c>
  42743c:	nop
  427440:	str	xzr, [x0, #48]
  427444:	ldr	x0, [x0]
  427448:	cbnz	x0, 427440 <wcrtomb@plt+0x22820>
  42744c:	ret
  427450:	stp	x29, x30, [sp, #-64]!
  427454:	mov	x29, sp
  427458:	stp	x19, x20, [sp, #16]
  42745c:	mov	x20, x0
  427460:	stp	x21, x22, [sp, #32]
  427464:	mov	x21, x1
  427468:	str	x23, [sp, #48]
  42746c:	bl	403ff0 <strlen@plt>
  427470:	mov	x23, #0x0                   	// #0
  427474:	mov	x19, x0
  427478:	mov	x0, x21
  42747c:	bl	403ff0 <strlen@plt>
  427480:	add	x22, x0, #0x1
  427484:	cbz	x19, 427498 <wcrtomb@plt+0x22878>
  427488:	add	x0, x20, x19
  42748c:	ldurb	w0, [x0, #-1]
  427490:	cmp	w0, #0x2f
  427494:	cinc	x23, x19, ne  // ne = any
  427498:	add	x0, x22, x23
  42749c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4274a0:	mov	x1, x20
  4274a4:	mov	x20, x0
  4274a8:	mov	x2, x19
  4274ac:	bl	403f70 <memcpy@plt>
  4274b0:	mov	w3, #0x2f                  	// #47
  4274b4:	add	x0, x20, x23
  4274b8:	strb	w3, [x20, x19]
  4274bc:	mov	x2, x22
  4274c0:	mov	x1, x21
  4274c4:	bl	403f70 <memcpy@plt>
  4274c8:	mov	x0, x20
  4274cc:	ldp	x19, x20, [sp, #16]
  4274d0:	ldp	x21, x22, [sp, #32]
  4274d4:	ldr	x23, [sp, #48]
  4274d8:	ldp	x29, x30, [sp], #64
  4274dc:	ret
  4274e0:	ldrb	w2, [x0]
  4274e4:	cmp	w2, #0x2f
  4274e8:	mov	x2, x0
  4274ec:	b.ne	427514 <wcrtomb@plt+0x228f4>  // b.any
  4274f0:	ldrb	w3, [x2, #1]!
  4274f4:	cmp	w3, #0x2f
  4274f8:	b.eq	4274f0 <wcrtomb@plt+0x228d0>  // b.none
  4274fc:	ldrb	w3, [x2]
  427500:	cbz	w3, 42751c <wcrtomb@plt+0x228fc>
  427504:	nop
  427508:	add	x2, x2, #0x1
  42750c:	cmp	w3, #0x2f
  427510:	b.eq	427524 <wcrtomb@plt+0x22904>  // b.none
  427514:	ldrb	w3, [x2]
  427518:	cbnz	w3, 427508 <wcrtomb@plt+0x228e8>
  42751c:	mov	x0, #0xffffffffffffffff    	// #-1
  427520:	ret
  427524:	subs	x1, x1, #0x1
  427528:	b.eq	427548 <wcrtomb@plt+0x22928>  // b.none
  42752c:	ldrb	w3, [x2]
  427530:	cmp	w3, #0x2f
  427534:	b.ne	427514 <wcrtomb@plt+0x228f4>  // b.any
  427538:	ldrb	w3, [x2, #1]!
  42753c:	cmp	w3, #0x2f
  427540:	b.eq	427538 <wcrtomb@plt+0x22918>  // b.none
  427544:	b	427514 <wcrtomb@plt+0x228f4>
  427548:	sub	x0, x2, x0
  42754c:	ret
  427550:	mov	x2, x0
  427554:	ldrb	w0, [x2]
  427558:	cmp	w0, #0x2e
  42755c:	b.eq	427578 <wcrtomb@plt+0x22958>  // b.none
  427560:	ldrb	w1, [x2], #1
  427564:	cmp	w1, #0x2f
  427568:	b.eq	427554 <wcrtomb@plt+0x22934>  // b.none
  42756c:	cbnz	w1, 427560 <wcrtomb@plt+0x22940>
  427570:	mov	w0, #0x0                   	// #0
  427574:	ret
  427578:	ldrb	w0, [x2, #1]
  42757c:	cmp	w0, #0x2e
  427580:	b.ne	427560 <wcrtomb@plt+0x22940>  // b.any
  427584:	ldrb	w1, [x2, #2]
  427588:	cmp	w1, #0x2f
  42758c:	cset	w0, eq  // eq = none
  427590:	cmp	w1, #0x0
  427594:	csinc	w0, w0, wzr, ne  // ne = any
  427598:	cbz	w0, 427560 <wcrtomb@plt+0x22940>
  42759c:	ret
  4275a0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4275a4:	ldr	x0, [x0, #104]
  4275a8:	ldrb	w0, [x0, #156]
  4275ac:	cmp	w0, #0x53
  4275b0:	cset	w0, eq  // eq = none
  4275b4:	ret
  4275b8:	ldr	x0, [x0, #24]
  4275bc:	ldr	x1, [x0, #288]
  4275c0:	cbnz	x1, 4275d4 <wcrtomb@plt+0x229b4>
  4275c4:	ldr	w0, [x0, #276]
  4275c8:	cmp	w0, #0x0
  4275cc:	cset	w0, ne  // ne = any
  4275d0:	ret
  4275d4:	mov	w0, #0x1                   	// #1
  4275d8:	ret
  4275dc:	nop
  4275e0:	stp	x29, x30, [sp, #-32]!
  4275e4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4275e8:	mov	x1, #0xc                   	// #12
  4275ec:	mov	x29, sp
  4275f0:	str	x19, [sp, #16]
  4275f4:	mov	x19, x0
  4275f8:	ldr	x0, [x2, #104]
  4275fc:	add	x0, x0, #0x1c4
  427600:	bl	41cd38 <wcrtomb@plt+0x18118>
  427604:	ldr	x2, [x19, #24]
  427608:	cmp	x0, #0x0
  42760c:	csel	x1, x0, xzr, ge  // ge = tcont
  427610:	mvn	x4, x0
  427614:	ldr	x19, [sp, #16]
  427618:	lsr	x0, x4, #63
  42761c:	ldr	x3, [x2, #136]
  427620:	str	x1, [x2, #136]
  427624:	str	x3, [x2, #264]
  427628:	ldp	x29, x30, [sp], #32
  42762c:	ret
  427630:	stp	x29, x30, [sp, #-32]!
  427634:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  427638:	mov	x1, #0xc                   	// #12
  42763c:	mov	x29, sp
  427640:	str	x19, [sp, #16]
  427644:	mov	x19, x0
  427648:	ldr	x0, [x2, #104]
  42764c:	add	x0, x0, #0x1e3
  427650:	bl	41cd38 <wcrtomb@plt+0x18118>
  427654:	ldr	x2, [x19, #24]
  427658:	cmp	x0, #0x0
  42765c:	csel	x1, x0, xzr, ge  // ge = tcont
  427660:	mvn	x4, x0
  427664:	ldr	x19, [sp, #16]
  427668:	lsr	x0, x4, #63
  42766c:	ldr	x3, [x2, #136]
  427670:	str	x1, [x2, #136]
  427674:	str	x3, [x2, #264]
  427678:	ldp	x29, x30, [sp], #32
  42767c:	ret
  427680:	stp	x29, x30, [sp, #-48]!
  427684:	mov	x29, sp
  427688:	stp	x21, x22, [sp, #32]
  42768c:	ldrb	w21, [x0, #4]
  427690:	stp	x19, x20, [sp, #16]
  427694:	mov	x19, x0
  427698:	mov	x20, x1
  42769c:	cbz	w21, 4276c4 <wcrtomb@plt+0x22aa4>
  4276a0:	ldr	w0, [x0]
  4276a4:	mov	w2, #0x0                   	// #0
  4276a8:	bl	4041d0 <lseek@plt>
  4276ac:	tbnz	x0, #63, 427728 <wcrtomb@plt+0x22b08>
  4276b0:	mov	w0, w21
  4276b4:	ldp	x19, x20, [sp, #16]
  4276b8:	ldp	x21, x22, [sp, #32]
  4276bc:	ldp	x29, x30, [sp], #48
  4276c0:	ret
  4276c4:	ldr	x2, [x0, #8]
  4276c8:	cmp	x1, x2
  4276cc:	b.lt	42771c <wcrtomb@plt+0x22afc>  // b.tstop
  4276d0:	adrp	x21, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4276d4:	mov	x22, #0x200                 	// #512
  4276d8:	add	x21, x21, #0xd0
  4276dc:	b.gt	4276f8 <wcrtomb@plt+0x22ad8>
  4276e0:	b	427750 <wcrtomb@plt+0x22b30>
  4276e4:	ldr	x2, [x19, #8]
  4276e8:	add	x2, x0, x2
  4276ec:	str	x2, [x19, #8]
  4276f0:	cmp	x20, x2
  4276f4:	b.le	427750 <wcrtomb@plt+0x22b30>
  4276f8:	sub	x2, x20, x2
  4276fc:	ldr	w0, [x19]
  427700:	cmp	x2, #0x200
  427704:	mov	x1, x21
  427708:	csel	x2, x2, x22, le
  42770c:	bl	404620 <write@plt>
  427710:	cmp	x0, #0x0
  427714:	b.gt	4276e4 <wcrtomb@plt+0x22ac4>
  427718:	b.ne	427728 <wcrtomb@plt+0x22b08>  // b.any
  42771c:	bl	404ad0 <__errno_location@plt>
  427720:	mov	w1, #0x16                  	// #22
  427724:	str	w1, [x0]
  427728:	ldr	x0, [x19, #24]
  42772c:	mov	x1, x20
  427730:	mov	w21, #0x0                   	// #0
  427734:	ldr	x0, [x0]
  427738:	bl	4203a0 <wcrtomb@plt+0x1b780>
  42773c:	mov	w0, w21
  427740:	ldp	x19, x20, [sp, #16]
  427744:	ldp	x21, x22, [sp, #32]
  427748:	ldp	x29, x30, [sp], #48
  42774c:	ret
  427750:	mov	w21, #0x1                   	// #1
  427754:	mov	w0, w21
  427758:	ldp	x19, x20, [sp, #16]
  42775c:	ldp	x21, x22, [sp, #32]
  427760:	ldp	x29, x30, [sp], #48
  427764:	ret
  427768:	stp	x29, x30, [sp, #-64]!
  42776c:	mov	x29, sp
  427770:	stp	x19, x20, [sp, #16]
  427774:	lsl	x20, x1, #4
  427778:	mov	x19, x0
  42777c:	ldr	x1, [x0, #24]
  427780:	stp	x23, x24, [sp, #48]
  427784:	ldr	x1, [x1, #304]
  427788:	ldr	x1, [x1, x20]
  42778c:	bl	427680 <wcrtomb@plt+0x22a60>
  427790:	ands	w23, w0, #0xff
  427794:	b.eq	4277c0 <wcrtomb@plt+0x22ba0>  // b.none
  427798:	ldr	x0, [x19, #24]
  42779c:	stp	x21, x22, [sp, #32]
  4277a0:	mov	x24, #0x200                 	// #512
  4277a4:	ldr	x1, [x0, #304]
  4277a8:	add	x20, x1, x20
  4277ac:	ldr	x21, [x20, #8]
  4277b0:	cbnz	x21, 427834 <wcrtomb@plt+0x22c14>
  4277b4:	ldrb	w20, [x19, #4]
  4277b8:	cbnz	w20, 427840 <wcrtomb@plt+0x22c20>
  4277bc:	ldp	x21, x22, [sp, #32]
  4277c0:	mov	w0, w23
  4277c4:	ldp	x19, x20, [sp, #16]
  4277c8:	ldp	x23, x24, [sp, #48]
  4277cc:	ldp	x29, x30, [sp], #64
  4277d0:	ret
  4277d4:	cmp	x21, #0x200
  4277d8:	csel	x22, x21, x24, le
  4277dc:	bl	406550 <wcrtomb@plt+0x1930>
  4277e0:	mov	x20, x0
  4277e4:	cbz	x0, 427864 <wcrtomb@plt+0x22c44>
  4277e8:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4277ec:	ldr	x3, [x19, #16]
  4277f0:	mov	x1, x20
  4277f4:	ldr	w0, [x19]
  4277f8:	mov	x2, x22
  4277fc:	add	x3, x3, #0x200
  427800:	str	x3, [x19, #16]
  427804:	bl	41fc80 <wcrtomb@plt+0x1b060>
  427808:	mov	x20, x0
  42780c:	sub	x21, x21, x0
  427810:	ldp	x0, x1, [x19, #16]
  427814:	ldr	x1, [x1, #264]
  427818:	sub	x0, x1, x0
  42781c:	bl	405720 <wcrtomb@plt+0xb00>
  427820:	ldr	x1, [x19, #8]
  427824:	cmp	x22, x20
  427828:	add	x1, x1, x20
  42782c:	str	x1, [x19, #8]
  427830:	b.ne	4278c0 <wcrtomb@plt+0x22ca0>  // b.any
  427834:	cmp	x21, #0x0
  427838:	b.gt	4277d4 <wcrtomb@plt+0x22bb4>
  42783c:	b	4277bc <wcrtomb@plt+0x22b9c>
  427840:	ldr	w0, [x19]
  427844:	bl	42a840 <wcrtomb@plt+0x25c20>
  427848:	cbz	w0, 4277bc <wcrtomb@plt+0x22b9c>
  42784c:	ldr	x0, [x19, #24]
  427850:	mov	w23, w20
  427854:	ldr	x0, [x0]
  427858:	bl	434588 <wcrtomb@plt+0x2f968>
  42785c:	ldp	x21, x22, [sp, #32]
  427860:	b	4277c0 <wcrtomb@plt+0x22ba0>
  427864:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  427868:	ldr	x0, [x0, #1136]
  42786c:	cbz	x0, 427874 <wcrtomb@plt+0x22c54>
  427870:	blr	x0
  427874:	mov	w2, #0x5                   	// #5
  427878:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42787c:	mov	x0, #0x0                   	// #0
  427880:	add	x1, x1, #0x378
  427884:	bl	4049c0 <dcgettext@plt>
  427888:	mov	x2, x0
  42788c:	mov	w1, #0x0                   	// #0
  427890:	mov	w0, #0x0                   	// #0
  427894:	bl	404050 <error@plt>
  427898:	mov	w23, #0x0                   	// #0
  42789c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4278a0:	mov	w1, #0x2                   	// #2
  4278a4:	ldp	x19, x20, [sp, #16]
  4278a8:	str	w1, [x0, #3568]
  4278ac:	mov	w0, w23
  4278b0:	ldp	x21, x22, [sp, #32]
  4278b4:	ldp	x23, x24, [sp, #48]
  4278b8:	ldp	x29, x30, [sp], #64
  4278bc:	ret
  4278c0:	ldr	x0, [x19, #24]
  4278c4:	mov	x2, x22
  4278c8:	mov	x1, x20
  4278cc:	mov	w23, #0x0                   	// #0
  4278d0:	ldr	x0, [x0]
  4278d4:	bl	434820 <wcrtomb@plt+0x2fc00>
  4278d8:	mov	w0, w23
  4278dc:	ldp	x19, x20, [sp, #16]
  4278e0:	ldp	x21, x22, [sp, #32]
  4278e4:	ldp	x23, x24, [sp, #48]
  4278e8:	ldp	x29, x30, [sp], #64
  4278ec:	ret
  4278f0:	stp	x29, x30, [sp, #-240]!
  4278f4:	mov	x29, sp
  4278f8:	stp	x23, x24, [sp, #48]
  4278fc:	lsl	x24, x1, #4
  427900:	ldr	x1, [x0, #24]
  427904:	stp	x21, x22, [sp, #32]
  427908:	mov	x22, x0
  42790c:	stp	x25, x26, [sp, #64]
  427910:	ldr	x1, [x1, #304]
  427914:	add	x2, x1, x24
  427918:	ldr	x1, [x1, x24]
  42791c:	ldr	x21, [x2, #8]
  427920:	bl	427680 <wcrtomb@plt+0x22a60>
  427924:	ands	w25, w0, #0xff
  427928:	b.eq	4279d0 <wcrtomb@plt+0x22db0>  // b.none
  42792c:	cmp	x21, #0x0
  427930:	mov	x23, #0x200                 	// #512
  427934:	b.le	4279d0 <wcrtomb@plt+0x22db0>
  427938:	stp	x19, x20, [sp, #16]
  42793c:	b	427968 <wcrtomb@plt+0x22d48>
  427940:	cbz	x19, 4279e8 <wcrtomb@plt+0x22dc8>
  427944:	bl	404410 <memset@plt>
  427948:	sub	x21, x21, x19
  42794c:	ldr	x1, [x22, #16]
  427950:	mov	x0, x20
  427954:	add	x19, x1, x19
  427958:	str	x19, [x22, #16]
  42795c:	bl	4060e0 <wcrtomb@plt+0x14c0>
  427960:	cmp	x21, #0x0
  427964:	b.le	427ac0 <wcrtomb@plt+0x22ea0>
  427968:	cmp	x21, #0x200
  42796c:	csel	x26, x21, x23, le
  427970:	bl	406550 <wcrtomb@plt+0x1930>
  427974:	mov	x1, x0
  427978:	mov	x20, x0
  42797c:	ldr	w0, [x22]
  427980:	mov	x2, x26
  427984:	bl	44f230 <argp_parse@@Base+0xf450>
  427988:	mov	x19, x0
  42798c:	sub	x2, x23, x0
  427990:	cmn	x19, #0x1
  427994:	add	x0, x20, x0
  427998:	mov	w1, #0x0                   	// #0
  42799c:	b.ne	427940 <wcrtomb@plt+0x22d20>  // b.any
  4279a0:	ldr	x0, [x22, #24]
  4279a4:	mov	x2, x26
  4279a8:	mov	w25, #0x0                   	// #0
  4279ac:	ldr	x1, [x0, #304]
  4279b0:	ldr	x0, [x0]
  4279b4:	add	x3, x1, x24
  4279b8:	ldr	x1, [x1, x24]
  4279bc:	ldr	x3, [x3, #8]
  4279c0:	add	x1, x1, x3
  4279c4:	sub	x1, x1, x21
  4279c8:	bl	420328 <wcrtomb@plt+0x1b708>
  4279cc:	ldp	x19, x20, [sp, #16]
  4279d0:	mov	w0, w25
  4279d4:	ldp	x21, x22, [sp, #32]
  4279d8:	ldp	x23, x24, [sp, #48]
  4279dc:	ldp	x25, x26, [sp, #64]
  4279e0:	ldp	x29, x30, [sp], #240
  4279e4:	ret
  4279e8:	ldr	w1, [x22]
  4279ec:	add	x2, sp, #0x70
  4279f0:	mov	w0, #0x0                   	// #0
  4279f4:	bl	4049a0 <__fxstat@plt>
  4279f8:	ldr	x1, [x22, #24]
  4279fc:	cbz	w0, 427adc <wcrtomb@plt+0x22ebc>
  427a00:	ldr	x0, [x1, #304]
  427a04:	ldr	x19, [x1, #136]
  427a08:	add	x1, x0, x24
  427a0c:	ldr	x0, [x0, x24]
  427a10:	ldr	x1, [x1, #8]
  427a14:	add	x0, x0, x1
  427a18:	sub	x21, x0, x21
  427a1c:	sub	x19, x19, x21
  427a20:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  427a24:	ldr	w0, [x0, #432]
  427a28:	tbz	w0, #7, 427a94 <wcrtomb@plt+0x22e74>
  427a2c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  427a30:	ldr	x0, [x0, #1136]
  427a34:	cbz	x0, 427a3c <wcrtomb@plt+0x22e1c>
  427a38:	blr	x0
  427a3c:	mov	x3, x19
  427a40:	mov	w4, #0x5                   	// #5
  427a44:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427a48:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427a4c:	add	x2, x2, #0x888
  427a50:	add	x1, x1, #0x8b8
  427a54:	mov	x0, #0x0                   	// #0
  427a58:	bl	4048f0 <dcngettext@plt>
  427a5c:	ldr	x1, [x22, #24]
  427a60:	mov	x20, x0
  427a64:	ldr	x0, [x1]
  427a68:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  427a6c:	mov	x21, x0
  427a70:	add	x1, sp, #0x58
  427a74:	mov	x0, x19
  427a78:	bl	446868 <argp_parse@@Base+0x6a88>
  427a7c:	mov	x4, x0
  427a80:	mov	x3, x21
  427a84:	mov	x2, x20
  427a88:	mov	w1, #0x0                   	// #0
  427a8c:	mov	w0, #0x0                   	// #0
  427a90:	bl	404050 <error@plt>
  427a94:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  427a98:	ldrb	w0, [x0, #1081]
  427a9c:	cbz	w0, 427aec <wcrtomb@plt+0x22ecc>
  427aa0:	mov	w25, #0x0                   	// #0
  427aa4:	mov	w0, w25
  427aa8:	ldp	x19, x20, [sp, #16]
  427aac:	ldp	x21, x22, [sp, #32]
  427ab0:	ldp	x23, x24, [sp, #48]
  427ab4:	ldp	x25, x26, [sp, #64]
  427ab8:	ldp	x29, x30, [sp], #240
  427abc:	ret
  427ac0:	mov	w0, w25
  427ac4:	ldp	x19, x20, [sp, #16]
  427ac8:	ldp	x21, x22, [sp, #32]
  427acc:	ldp	x23, x24, [sp, #48]
  427ad0:	ldp	x25, x26, [sp, #64]
  427ad4:	ldp	x29, x30, [sp], #240
  427ad8:	ret
  427adc:	ldr	x19, [x1, #136]
  427ae0:	ldr	x0, [sp, #160]
  427ae4:	sub	x19, x19, x0
  427ae8:	b	427a20 <wcrtomb@plt+0x22e00>
  427aec:	mov	w0, #0x1                   	// #1
  427af0:	bl	42f548 <wcrtomb@plt+0x2a928>
  427af4:	b	427aa0 <wcrtomb@plt+0x22e80>
  427af8:	sub	sp, sp, #0x260
  427afc:	stp	x29, x30, [sp]
  427b00:	mov	x29, sp
  427b04:	stp	x19, x20, [sp, #16]
  427b08:	mov	x20, x2
  427b0c:	stp	x21, x22, [sp, #32]
  427b10:	mov	x21, x0
  427b14:	stp	x23, x24, [sp, #48]
  427b18:	mov	x24, x1
  427b1c:	bl	427680 <wcrtomb@plt+0x22a60>
  427b20:	ands	w23, w0, #0xff
  427b24:	b.eq	427b8c <wcrtomb@plt+0x22f6c>  // b.none
  427b28:	cmp	x24, x20
  427b2c:	mov	x22, #0x200                 	// #512
  427b30:	b.ge	427b8c <wcrtomb@plt+0x22f6c>  // b.tcont
  427b34:	nop
  427b38:	sub	x19, x20, x24
  427b3c:	ldr	w0, [x21]
  427b40:	cmp	x19, #0x200
  427b44:	add	x1, sp, #0x60
  427b48:	csel	x19, x19, x22, le
  427b4c:	mov	x2, x19
  427b50:	bl	44f230 <argp_parse@@Base+0xf450>
  427b54:	mov	x6, x0
  427b58:	cmn	x0, #0x1
  427b5c:	b.eq	427ba8 <wcrtomb@plt+0x22f88>  // b.none
  427b60:	cbz	x0, 427bdc <wcrtomb@plt+0x22fbc>
  427b64:	add	x0, sp, #0x60
  427b68:	add	x5, x0, x6
  427b6c:	mov	x3, x0
  427b70:	ldrb	w4, [x3], #1
  427b74:	cmp	x5, x3
  427b78:	cbnz	w4, 427c04 <wcrtomb@plt+0x22fe4>
  427b7c:	b.ne	427b70 <wcrtomb@plt+0x22f50>  // b.any
  427b80:	add	x24, x24, x6
  427b84:	cmp	x20, x24
  427b88:	b.gt	427b38 <wcrtomb@plt+0x22f18>
  427b8c:	mov	w0, w23
  427b90:	ldp	x29, x30, [sp]
  427b94:	ldp	x19, x20, [sp, #16]
  427b98:	ldp	x21, x22, [sp, #32]
  427b9c:	ldp	x23, x24, [sp, #48]
  427ba0:	add	sp, sp, #0x260
  427ba4:	ret
  427ba8:	ldr	x0, [x21, #24]
  427bac:	mov	w23, #0x0                   	// #0
  427bb0:	mov	x2, x19
  427bb4:	mov	x1, x24
  427bb8:	ldr	x0, [x0]
  427bbc:	bl	420328 <wcrtomb@plt+0x1b708>
  427bc0:	mov	w0, w23
  427bc4:	ldp	x29, x30, [sp]
  427bc8:	ldp	x19, x20, [sp, #16]
  427bcc:	ldp	x21, x22, [sp, #32]
  427bd0:	ldp	x23, x24, [sp, #48]
  427bd4:	add	sp, sp, #0x260
  427bd8:	ret
  427bdc:	ldr	x19, [x21, #24]
  427be0:	mov	w2, #0x5                   	// #5
  427be4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427be8:	add	x1, x1, #0x4a0
  427bec:	bl	4049c0 <dcgettext@plt>
  427bf0:	mov	w23, #0x0                   	// #0
  427bf4:	mov	x1, x0
  427bf8:	mov	x0, x19
  427bfc:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  427c00:	b	427bc0 <wcrtomb@plt+0x22fa0>
  427c04:	mov	w2, #0x5                   	// #5
  427c08:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  427c0c:	ldr	x20, [x21, #24]
  427c10:	add	x1, x1, #0x10
  427c14:	mov	x0, #0x0                   	// #0
  427c18:	bl	4049c0 <dcgettext@plt>
  427c1c:	add	x1, sp, #0x48
  427c20:	mov	x19, x0
  427c24:	mov	x0, x24
  427c28:	bl	4467e8 <argp_parse@@Base+0x6a08>
  427c2c:	mov	x1, x19
  427c30:	mov	x2, x0
  427c34:	mov	w23, #0x0                   	// #0
  427c38:	mov	x0, x20
  427c3c:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  427c40:	b	427bc0 <wcrtomb@plt+0x22fa0>
  427c44:	nop
  427c48:	sub	sp, sp, #0x250
  427c4c:	stp	x29, x30, [sp]
  427c50:	mov	x29, sp
  427c54:	str	x25, [sp, #64]
  427c58:	lsl	x25, x1, #4
  427c5c:	ldr	x1, [x0, #24]
  427c60:	stp	x19, x20, [sp, #16]
  427c64:	mov	x19, x0
  427c68:	stp	x23, x24, [sp, #48]
  427c6c:	ldr	x1, [x1, #304]
  427c70:	ldr	x1, [x1, x25]
  427c74:	bl	427680 <wcrtomb@plt+0x22a60>
  427c78:	ands	w23, w0, #0xff
  427c7c:	b.ne	427c9c <wcrtomb@plt+0x2307c>  // b.any
  427c80:	mov	w0, w23
  427c84:	ldp	x29, x30, [sp]
  427c88:	ldp	x19, x20, [sp, #16]
  427c8c:	ldp	x23, x24, [sp, #48]
  427c90:	ldr	x25, [sp, #64]
  427c94:	add	sp, sp, #0x250
  427c98:	ret
  427c9c:	ldp	x0, x2, [x19, #16]
  427ca0:	mov	x24, #0x200                 	// #512
  427ca4:	ldr	x1, [x2, #304]
  427ca8:	ldr	x2, [x2, #264]
  427cac:	add	x1, x1, x25
  427cb0:	sub	x0, x2, x0
  427cb4:	ldr	x20, [x1, #8]
  427cb8:	bl	405720 <wcrtomb@plt+0xb00>
  427cbc:	cmp	x20, #0x0
  427cc0:	b.le	427c80 <wcrtomb@plt+0x23060>
  427cc4:	stp	x21, x22, [sp, #32]
  427cc8:	b	427d28 <wcrtomb@plt+0x23108>
  427ccc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  427cd0:	ldr	x3, [x19, #16]
  427cd4:	mov	x2, x22
  427cd8:	ldr	w0, [x19]
  427cdc:	add	x1, sp, #0x50
  427ce0:	add	x3, x3, #0x200
  427ce4:	str	x3, [x19, #16]
  427ce8:	bl	44f230 <argp_parse@@Base+0xf450>
  427cec:	cmn	x0, #0x1
  427cf0:	b.eq	427da0 <wcrtomb@plt+0x23180>  // b.none
  427cf4:	cbz	x0, 427dd0 <wcrtomb@plt+0x231b0>
  427cf8:	sub	x20, x20, x0
  427cfc:	ldp	x0, x1, [x19, #16]
  427d00:	ldr	x1, [x1, #264]
  427d04:	sub	x0, x1, x0
  427d08:	bl	405720 <wcrtomb@plt+0xb00>
  427d0c:	mov	x2, x22
  427d10:	add	x1, sp, #0x50
  427d14:	mov	x0, x21
  427d18:	bl	4046d0 <memcmp@plt>
  427d1c:	cbnz	w0, 427df8 <wcrtomb@plt+0x231d8>
  427d20:	cmp	x20, #0x0
  427d24:	b.le	427d80 <wcrtomb@plt+0x23160>
  427d28:	cmp	x20, #0x200
  427d2c:	csel	x22, x20, x24, le
  427d30:	bl	406550 <wcrtomb@plt+0x1930>
  427d34:	mov	x21, x0
  427d38:	cbnz	x0, 427ccc <wcrtomb@plt+0x230ac>
  427d3c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  427d40:	ldr	x0, [x0, #1136]
  427d44:	cbz	x0, 427d4c <wcrtomb@plt+0x2312c>
  427d48:	blr	x0
  427d4c:	mov	w2, #0x5                   	// #5
  427d50:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427d54:	mov	x0, #0x0                   	// #0
  427d58:	add	x1, x1, #0x378
  427d5c:	bl	4049c0 <dcgettext@plt>
  427d60:	mov	x2, x0
  427d64:	mov	w1, #0x0                   	// #0
  427d68:	mov	w0, #0x0                   	// #0
  427d6c:	bl	404050 <error@plt>
  427d70:	mov	w23, #0x0                   	// #0
  427d74:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  427d78:	mov	w1, #0x2                   	// #2
  427d7c:	str	w1, [x0, #3568]
  427d80:	mov	w0, w23
  427d84:	ldp	x29, x30, [sp]
  427d88:	ldp	x19, x20, [sp, #16]
  427d8c:	ldp	x21, x22, [sp, #32]
  427d90:	ldp	x23, x24, [sp, #48]
  427d94:	ldr	x25, [sp, #64]
  427d98:	add	sp, sp, #0x250
  427d9c:	ret
  427da0:	ldr	x0, [x19, #24]
  427da4:	mov	x2, x22
  427da8:	mov	w23, #0x0                   	// #0
  427dac:	ldr	x1, [x0, #304]
  427db0:	ldr	x0, [x0]
  427db4:	add	x3, x1, x25
  427db8:	ldr	x1, [x1, x25]
  427dbc:	ldr	x3, [x3, #8]
  427dc0:	add	x1, x1, x3
  427dc4:	sub	x1, x1, x20
  427dc8:	bl	420328 <wcrtomb@plt+0x1b708>
  427dcc:	b	427d80 <wcrtomb@plt+0x23160>
  427dd0:	mov	w2, #0x5                   	// #5
  427dd4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427dd8:	add	x1, x1, #0x4a0
  427ddc:	bl	4049c0 <dcgettext@plt>
  427de0:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  427de4:	mov	x1, x0
  427de8:	mov	w23, #0x0                   	// #0
  427dec:	add	x0, x2, #0xe0
  427df0:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  427df4:	b	427d80 <wcrtomb@plt+0x23160>
  427df8:	ldr	x19, [x19, #24]
  427dfc:	mov	w2, #0x5                   	// #5
  427e00:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427e04:	mov	x0, #0x0                   	// #0
  427e08:	add	x1, x1, #0x3e0
  427e0c:	bl	4049c0 <dcgettext@plt>
  427e10:	mov	w23, #0x0                   	// #0
  427e14:	mov	x1, x0
  427e18:	mov	x0, x19
  427e1c:	bl	40a6a8 <wcrtomb@plt+0x5a88>
  427e20:	b	427d80 <wcrtomb@plt+0x23160>
  427e24:	nop
  427e28:	stp	x29, x30, [sp, #-128]!
  427e2c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  427e30:	mov	x29, sp
  427e34:	stp	x21, x22, [sp, #32]
  427e38:	mov	x21, x0
  427e3c:	ldr	w0, [x1, #736]
  427e40:	stp	x19, x20, [sp, #16]
  427e44:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  427e48:	ldr	x1, [x21, #24]
  427e4c:	stp	x23, x24, [sp, #48]
  427e50:	ldr	w2, [x19, #216]
  427e54:	str	w0, [x1, #276]
  427e58:	str	w2, [x1, #280]
  427e5c:	cbnz	w0, 427f50 <wcrtomb@plt+0x23330>
  427e60:	bl	406070 <wcrtomb@plt+0x1450>
  427e64:	mov	x22, x0
  427e68:	ldr	x1, [x21, #24]
  427e6c:	mov	x2, #0x0                   	// #0
  427e70:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  427e74:	add	x0, x0, #0x1a8
  427e78:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x17bf0>
  427e7c:	add	x20, x20, #0x1d0
  427e80:	ldr	x23, [x1, #304]
  427e84:	bl	417440 <wcrtomb@plt+0x12820>
  427e88:	ldr	x1, [x21, #24]
  427e8c:	mov	x2, #0x0                   	// #0
  427e90:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  427e94:	add	x0, x0, #0x190
  427e98:	bl	417440 <wcrtomb@plt+0x12820>
  427e9c:	mov	x0, x20
  427ea0:	bl	415fd0 <wcrtomb@plt+0x113b0>
  427ea4:	tst	w0, #0xff
  427ea8:	b.eq	428348 <wcrtomb@plt+0x23728>  // b.none
  427eac:	ldr	x19, [x21, #24]
  427eb0:	str	xzr, [sp, #96]
  427eb4:	ldr	x0, [x19, #288]
  427eb8:	cbz	x0, 427f0c <wcrtomb@plt+0x232ec>
  427ebc:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x16bf0>
  427ec0:	adrp	x20, 469000 <_obstack_memory_used@@Base+0x17bf0>
  427ec4:	add	x23, x23, #0xe60
  427ec8:	add	x20, x20, #0x1b8
  427ecc:	nop
  427ed0:	mov	x1, x19
  427ed4:	add	x2, sp, #0x60
  427ed8:	mov	x0, x23
  427edc:	bl	417440 <wcrtomb@plt+0x12820>
  427ee0:	ldr	x1, [x21, #24]
  427ee4:	mov	x0, x20
  427ee8:	add	x2, sp, #0x60
  427eec:	bl	417440 <wcrtomb@plt+0x12820>
  427ef0:	ldr	x19, [x21, #24]
  427ef4:	ldr	x1, [sp, #96]
  427ef8:	ldr	x0, [x19, #288]
  427efc:	add	x1, x1, #0x1
  427f00:	str	x1, [sp, #96]
  427f04:	cmp	x1, x0
  427f08:	b.cc	427ed0 <wcrtomb@plt+0x232b0>  // b.lo, b.ul, b.last
  427f0c:	ldr	x1, [x19, #264]
  427f10:	mov	x0, x19
  427f14:	ldr	x23, [x19, #136]
  427f18:	str	x1, [x19, #136]
  427f1c:	mov	w20, #0x1                   	// #1
  427f20:	bl	40ca58 <wcrtomb@plt+0x7e38>
  427f24:	mov	x1, x0
  427f28:	ldr	x0, [x21, #24]
  427f2c:	str	x23, [x19, #136]
  427f30:	mov	x2, x22
  427f34:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  427f38:	mov	w0, w20
  427f3c:	ldp	x19, x20, [sp, #16]
  427f40:	ldp	x21, x22, [sp, #32]
  427f44:	ldp	x23, x24, [sp, #48]
  427f48:	ldp	x29, x30, [sp], #128
  427f4c:	ret
  427f50:	stp	x25, x26, [sp, #64]
  427f54:	add	x25, sp, #0x68
  427f58:	str	x27, [sp, #80]
  427f5c:	bl	406070 <wcrtomb@plt+0x1450>
  427f60:	ldr	x2, [x21, #24]
  427f64:	mov	x22, x0
  427f68:	mov	x1, x25
  427f6c:	ldr	x0, [x2, #288]
  427f70:	ldr	x24, [x2, #8]
  427f74:	ldr	x23, [x2, #304]
  427f78:	bl	446868 <argp_parse@@Base+0x6a88>
  427f7c:	bl	403ff0 <strlen@plt>
  427f80:	add	x19, x0, #0x1
  427f84:	ldr	x1, [x21, #24]
  427f88:	ldr	x0, [x1, #288]
  427f8c:	cbz	x0, 427fe0 <wcrtomb@plt+0x233c0>
  427f90:	mov	x26, x23
  427f94:	mov	x27, #0x0                   	// #0
  427f98:	ldr	x0, [x26]
  427f9c:	mov	x1, x25
  427fa0:	add	x27, x27, #0x1
  427fa4:	add	x19, x19, #0x2
  427fa8:	add	x26, x26, #0x10
  427fac:	bl	446868 <argp_parse@@Base+0x6a88>
  427fb0:	bl	403ff0 <strlen@plt>
  427fb4:	mov	x20, x0
  427fb8:	ldur	x0, [x26, #-8]
  427fbc:	mov	x1, x25
  427fc0:	bl	446868 <argp_parse@@Base+0x6a88>
  427fc4:	bl	403ff0 <strlen@plt>
  427fc8:	add	x20, x20, x0
  427fcc:	ldr	x1, [x21, #24]
  427fd0:	add	x19, x19, x20
  427fd4:	ldr	x0, [x1, #288]
  427fd8:	cmp	x27, x0
  427fdc:	b.cc	427f98 <wcrtomb@plt+0x23378>  // b.lo, b.ul, b.last
  427fe0:	add	x0, x19, #0x3fe
  427fe4:	adds	x19, x19, #0x1ff
  427fe8:	ldr	x2, [x1, #264]
  427fec:	csel	x19, x0, x19, mi  // mi = first
  427ff0:	and	x19, x19, #0xfffffffffffffe00
  427ff4:	add	x0, x2, x19
  427ff8:	str	x0, [x1, #264]
  427ffc:	mov	x2, #0x0                   	// #0
  428000:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  428004:	ldr	x3, [x21, #16]
  428008:	add	x0, x0, #0x148
  42800c:	add	x19, x3, x19
  428010:	str	x19, [x21, #16]
  428014:	bl	417440 <wcrtomb@plt+0x12820>
  428018:	ldr	x1, [x21, #24]
  42801c:	mov	x2, #0x0                   	// #0
  428020:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  428024:	add	x0, x0, #0x160
  428028:	bl	417440 <wcrtomb@plt+0x12820>
  42802c:	ldr	x1, [x21, #24]
  428030:	mov	x2, #0x0                   	// #0
  428034:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  428038:	add	x0, x0, #0x138
  42803c:	bl	417440 <wcrtomb@plt+0x12820>
  428040:	ldr	x1, [x21, #24]
  428044:	mov	x2, #0x0                   	// #0
  428048:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42804c:	add	x0, x0, #0x178
  428050:	bl	417440 <wcrtomb@plt+0x12820>
  428054:	ldr	x19, [x21, #24]
  428058:	mov	x2, #0x0                   	// #0
  42805c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  428060:	add	x1, x1, #0x38
  428064:	mov	x0, x19
  428068:	bl	416468 <wcrtomb@plt+0x11848>
  42806c:	str	x0, [x19, #8]
  428070:	ldr	x19, [x21, #24]
  428074:	ldr	x20, [x19, #8]
  428078:	mov	x0, x20
  42807c:	bl	403ff0 <strlen@plt>
  428080:	cmp	x0, #0x64
  428084:	b.ls	428090 <wcrtomb@plt+0x23470>  // b.plast
  428088:	strb	wzr, [x20, #100]
  42808c:	ldr	x19, [x21, #24]
  428090:	mov	x0, x19
  428094:	ldr	x1, [x19, #264]
  428098:	ldr	x20, [x19, #136]
  42809c:	str	x1, [x19, #136]
  4280a0:	bl	40ca58 <wcrtomb@plt+0x7e38>
  4280a4:	mov	x1, x0
  4280a8:	ldr	x0, [x21, #24]
  4280ac:	str	x20, [x19, #136]
  4280b0:	mov	x2, x22
  4280b4:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  4280b8:	ldr	x0, [x21, #24]
  4280bc:	ldr	x0, [x0, #8]
  4280c0:	bl	4047b0 <free@plt>
  4280c4:	ldr	x0, [x21, #24]
  4280c8:	str	x24, [x0, #8]
  4280cc:	bl	406550 <wcrtomb@plt+0x1930>
  4280d0:	mov	x19, x0
  4280d4:	ldr	x2, [x21, #24]
  4280d8:	mov	x26, x0
  4280dc:	add	x22, x0, #0x200
  4280e0:	mov	x1, x25
  4280e4:	ldr	x0, [x2, #288]
  4280e8:	bl	446868 <argp_parse@@Base+0x6a88>
  4280ec:	mov	x24, x0
  4280f0:	ldrb	w0, [x0]
  4280f4:	cbz	w0, 428454 <wcrtomb@plt+0x23834>
  4280f8:	mov	x20, x26
  4280fc:	cmp	x22, x26
  428100:	b.eq	428124 <wcrtomb@plt+0x23504>  // b.none
  428104:	nop
  428108:	strb	w0, [x20], #1
  42810c:	ldrb	w0, [x24, #1]!
  428110:	cbz	w0, 428150 <wcrtomb@plt+0x23530>
  428114:	mov	x26, x20
  428118:	mov	x20, x26
  42811c:	cmp	x22, x26
  428120:	b.ne	428108 <wcrtomb@plt+0x234e8>  // b.any
  428124:	mov	x0, x19
  428128:	bl	4060e0 <wcrtomb@plt+0x14c0>
  42812c:	bl	406550 <wcrtomb@plt+0x1930>
  428130:	mov	x19, x0
  428134:	mov	x20, x19
  428138:	ldrb	w0, [x24]
  42813c:	add	x22, x19, #0x200
  428140:	strb	w0, [x20], #1
  428144:	ldrb	w0, [x24, #1]!
  428148:	cbnz	w0, 428114 <wcrtomb@plt+0x234f4>
  42814c:	nop
  428150:	cmp	x22, x20
  428154:	b.eq	4282d8 <wcrtomb@plt+0x236b8>  // b.none
  428158:	mov	w26, #0xa                   	// #10
  42815c:	strb	w26, [x20], #1
  428160:	ldr	x0, [x21, #24]
  428164:	ldr	x0, [x0, #288]
  428168:	cbz	x0, 428298 <wcrtomb@plt+0x23678>
  42816c:	mov	x24, #0x0                   	// #0
  428170:	ldr	x0, [x23]
  428174:	mov	x1, x25
  428178:	bl	446868 <argp_parse@@Base+0x6a88>
  42817c:	mov	x27, x0
  428180:	ldrb	w0, [x0]
  428184:	cbz	w0, 428340 <wcrtomb@plt+0x23720>
  428188:	mov	x1, x20
  42818c:	cmp	x20, x22
  428190:	b.eq	4281b4 <wcrtomb@plt+0x23594>  // b.none
  428194:	nop
  428198:	strb	w0, [x1], #1
  42819c:	ldrb	w0, [x27, #1]!
  4281a0:	cbz	w0, 4281e0 <wcrtomb@plt+0x235c0>
  4281a4:	mov	x20, x1
  4281a8:	mov	x1, x20
  4281ac:	cmp	x20, x22
  4281b0:	b.ne	428198 <wcrtomb@plt+0x23578>  // b.any
  4281b4:	mov	x0, x19
  4281b8:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4281bc:	bl	406550 <wcrtomb@plt+0x1930>
  4281c0:	mov	x19, x0
  4281c4:	mov	x1, x19
  4281c8:	ldrb	w0, [x27]
  4281cc:	add	x22, x19, #0x200
  4281d0:	strb	w0, [x1], #1
  4281d4:	ldrb	w0, [x27, #1]!
  4281d8:	cbnz	w0, 4281a4 <wcrtomb@plt+0x23584>
  4281dc:	nop
  4281e0:	cmp	x22, x1
  4281e4:	b.ne	428200 <wcrtomb@plt+0x235e0>  // b.any
  4281e8:	mov	x0, x19
  4281ec:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4281f0:	bl	406550 <wcrtomb@plt+0x1930>
  4281f4:	mov	x19, x0
  4281f8:	mov	x1, x0
  4281fc:	add	x22, x0, #0x200
  428200:	mov	x20, x1
  428204:	mov	x1, x25
  428208:	strb	w26, [x20], #1
  42820c:	ldr	x0, [x23, #8]
  428210:	bl	446868 <argp_parse@@Base+0x6a88>
  428214:	ldrb	w1, [x0]
  428218:	mov	x27, x0
  42821c:	cbz	w1, 428274 <wcrtomb@plt+0x23654>
  428220:	mov	x0, x20
  428224:	cmp	x20, x22
  428228:	b.eq	42824c <wcrtomb@plt+0x2362c>  // b.none
  42822c:	nop
  428230:	strb	w1, [x0], #1
  428234:	ldrb	w1, [x27, #1]!
  428238:	cbz	w1, 428270 <wcrtomb@plt+0x23650>
  42823c:	mov	x20, x0
  428240:	mov	x0, x20
  428244:	cmp	x20, x22
  428248:	b.ne	428230 <wcrtomb@plt+0x23610>  // b.any
  42824c:	mov	x0, x19
  428250:	bl	4060e0 <wcrtomb@plt+0x14c0>
  428254:	bl	406550 <wcrtomb@plt+0x1930>
  428258:	mov	x19, x0
  42825c:	ldrb	w1, [x27]
  428260:	add	x22, x0, #0x200
  428264:	strb	w1, [x0], #1
  428268:	ldrb	w1, [x27, #1]!
  42826c:	cbnz	w1, 42823c <wcrtomb@plt+0x2361c>
  428270:	mov	x20, x0
  428274:	cmp	x22, x20
  428278:	b.eq	4282f4 <wcrtomb@plt+0x236d4>  // b.none
  42827c:	strb	w26, [x20], #1
  428280:	add	x24, x24, #0x1
  428284:	add	x23, x23, #0x10
  428288:	ldr	x0, [x21, #24]
  42828c:	ldr	x0, [x0, #288]
  428290:	cmp	x24, x0
  428294:	b.cc	428170 <wcrtomb@plt+0x23550>  // b.lo, b.ul, b.last
  428298:	sub	x2, x19, x20
  42829c:	mov	w1, #0x0                   	// #0
  4282a0:	add	x2, x2, #0x200
  4282a4:	mov	x0, x20
  4282a8:	bl	404410 <memset@plt>
  4282ac:	mov	w20, #0x1                   	// #1
  4282b0:	mov	x0, x19
  4282b4:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4282b8:	ldp	x25, x26, [sp, #64]
  4282bc:	ldr	x27, [sp, #80]
  4282c0:	mov	w0, w20
  4282c4:	ldp	x19, x20, [sp, #16]
  4282c8:	ldp	x21, x22, [sp, #32]
  4282cc:	ldp	x23, x24, [sp, #48]
  4282d0:	ldp	x29, x30, [sp], #128
  4282d4:	ret
  4282d8:	mov	x0, x19
  4282dc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4282e0:	bl	406550 <wcrtomb@plt+0x1930>
  4282e4:	mov	x19, x0
  4282e8:	mov	x20, x0
  4282ec:	add	x22, x0, #0x200
  4282f0:	b	428158 <wcrtomb@plt+0x23538>
  4282f4:	mov	x0, x19
  4282f8:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4282fc:	add	x24, x24, #0x1
  428300:	add	x23, x23, #0x10
  428304:	bl	406550 <wcrtomb@plt+0x1930>
  428308:	mov	x20, x0
  42830c:	mov	x19, x0
  428310:	add	x22, x0, #0x200
  428314:	strb	w26, [x20], #1
  428318:	ldr	x0, [x21, #24]
  42831c:	ldr	x0, [x0, #288]
  428320:	cmp	x0, x24
  428324:	b.ls	428298 <wcrtomb@plt+0x23678>  // b.plast
  428328:	ldr	x0, [x23]
  42832c:	mov	x1, x25
  428330:	bl	446868 <argp_parse@@Base+0x6a88>
  428334:	mov	x27, x0
  428338:	ldrb	w0, [x0]
  42833c:	cbnz	w0, 428188 <wcrtomb@plt+0x23568>
  428340:	mov	x1, x20
  428344:	b	4281e0 <wcrtomb@plt+0x235c0>
  428348:	ldr	w0, [x19, #216]
  42834c:	ldr	x19, [x21, #24]
  428350:	cbz	w0, 427eb0 <wcrtomb@plt+0x23290>
  428354:	mov	x1, x19
  428358:	mov	x2, #0x0                   	// #0
  42835c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  428360:	add	x0, x0, #0x138
  428364:	bl	417440 <wcrtomb@plt+0x12820>
  428368:	ldr	x19, [x21, #24]
  42836c:	mov	x2, #0x0                   	// #0
  428370:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  428374:	add	x1, x1, #0x38
  428378:	mov	x0, x19
  42837c:	ldr	x24, [x19, #8]
  428380:	bl	416468 <wcrtomb@plt+0x11848>
  428384:	str	x0, [x19, #8]
  428388:	ldr	x0, [x21, #24]
  42838c:	add	x0, x0, #0x158
  428390:	bl	4178c0 <wcrtomb@plt+0x12ca0>
  428394:	ldr	x0, [x21, #24]
  428398:	str	xzr, [sp, #96]
  42839c:	ldr	x1, [x0, #288]
  4283a0:	cbz	x1, 428460 <wcrtomb@plt+0x23840>
  4283a4:	adrp	x19, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4283a8:	add	x19, x19, #0x2c0
  4283ac:	stp	x25, x26, [sp, #64]
  4283b0:	add	x26, x0, #0x158
  4283b4:	add	x25, sp, #0x68
  4283b8:	mov	x2, #0x0                   	// #0
  4283bc:	nop
  4283c0:	lsl	x2, x2, #4
  4283c4:	mov	x1, x25
  4283c8:	ldr	x0, [x23, x2]
  4283cc:	bl	446868 <argp_parse@@Base+0x6a88>
  4283d0:	mov	x1, x0
  4283d4:	mov	x0, x26
  4283d8:	bl	4178c8 <wcrtomb@plt+0x12ca8>
  4283dc:	ldr	x0, [x21, #24]
  4283e0:	mov	x1, x19
  4283e4:	add	x0, x0, #0x158
  4283e8:	bl	4178c8 <wcrtomb@plt+0x12ca8>
  4283ec:	ldr	x0, [sp, #96]
  4283f0:	mov	x1, x25
  4283f4:	ldr	x26, [x21, #24]
  4283f8:	add	x0, x23, x0, lsl #4
  4283fc:	add	x26, x26, #0x158
  428400:	ldr	x0, [x0, #8]
  428404:	bl	446868 <argp_parse@@Base+0x6a88>
  428408:	mov	x1, x0
  42840c:	mov	x0, x26
  428410:	bl	4178c8 <wcrtomb@plt+0x12ca8>
  428414:	ldr	x0, [x21, #24]
  428418:	ldr	x2, [sp, #96]
  42841c:	add	x26, x0, #0x158
  428420:	ldr	x1, [x0, #288]
  428424:	add	x2, x2, #0x1
  428428:	str	x2, [sp, #96]
  42842c:	cmp	x2, x1
  428430:	b.cs	42845c <wcrtomb@plt+0x2383c>  // b.hs, b.nlast
  428434:	cbz	x2, 4283c0 <wcrtomb@plt+0x237a0>
  428438:	mov	x0, x26
  42843c:	mov	x1, x19
  428440:	bl	4178c8 <wcrtomb@plt+0x12ca8>
  428444:	ldr	x26, [x21, #24]
  428448:	ldr	x2, [sp, #96]
  42844c:	add	x26, x26, #0x158
  428450:	b	4283c0 <wcrtomb@plt+0x237a0>
  428454:	mov	x20, x19
  428458:	b	428150 <wcrtomb@plt+0x23530>
  42845c:	ldp	x25, x26, [sp, #64]
  428460:	mov	x1, x20
  428464:	add	x0, x0, #0x158
  428468:	bl	4179a8 <wcrtomb@plt+0x12d88>
  42846c:	ands	w20, w0, #0xff
  428470:	b.eq	4284a4 <wcrtomb@plt+0x23884>  // b.none
  428474:	ldr	x19, [x21, #24]
  428478:	mov	x0, x19
  42847c:	ldr	x1, [x19, #264]
  428480:	ldr	x23, [x19, #136]
  428484:	str	x1, [x19, #136]
  428488:	bl	40ca58 <wcrtomb@plt+0x7e38>
  42848c:	mov	x1, x0
  428490:	ldr	x0, [x21, #24]
  428494:	str	x23, [x19, #136]
  428498:	mov	x2, x22
  42849c:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  4284a0:	cbz	x24, 4282c0 <wcrtomb@plt+0x236a0>
  4284a4:	ldr	x0, [x21, #24]
  4284a8:	ldr	x0, [x0, #8]
  4284ac:	bl	4047b0 <free@plt>
  4284b0:	ldr	x0, [x21, #24]
  4284b4:	ldp	x21, x22, [sp, #32]
  4284b8:	str	x24, [x0, #8]
  4284bc:	mov	w0, w20
  4284c0:	ldp	x19, x20, [sp, #16]
  4284c4:	ldp	x23, x24, [sp, #48]
  4284c8:	ldp	x29, x30, [sp], #128
  4284cc:	ret
  4284d0:	stp	x29, x30, [sp, #-80]!
  4284d4:	mov	x29, sp
  4284d8:	stp	x19, x20, [sp, #16]
  4284dc:	mov	x20, x0
  4284e0:	stp	x21, x22, [sp, #32]
  4284e4:	stp	x23, x24, [sp, #48]
  4284e8:	bl	406070 <wcrtomb@plt+0x1450>
  4284ec:	mov	x24, x0
  4284f0:	ldr	x0, [x20, #24]
  4284f4:	bl	40ca58 <wcrtomb@plt+0x7e38>
  4284f8:	mov	x23, x0
  4284fc:	ldr	x1, [x20, #24]
  428500:	mov	w2, #0x53                  	// #83
  428504:	ldr	x0, [x1, #288]
  428508:	strb	w2, [x23, #156]
  42850c:	cmp	x0, #0x4
  428510:	b.ls	42851c <wcrtomb@plt+0x238fc>  // b.plast
  428514:	mov	w0, #0x1                   	// #1
  428518:	strb	w0, [x23, #482]
  42851c:	ldr	x0, [x1, #136]
  428520:	mov	x2, #0xc                   	// #12
  428524:	add	x1, x23, #0x1e3
  428528:	add	x21, x23, #0x182
  42852c:	bl	40c1b0 <wcrtomb@plt+0x7590>
  428530:	ldr	x0, [x20, #24]
  428534:	add	x1, x23, #0x7c
  428538:	mov	x2, #0xc                   	// #12
  42853c:	ldr	x0, [x0, #264]
  428540:	bl	40c1b0 <wcrtomb@plt+0x7590>
  428544:	ldr	x0, [x20, #24]
  428548:	ldr	x19, [x0, #288]
  42854c:	cbz	x19, 4286b0 <wcrtomb@plt+0x23a90>
  428550:	mov	x19, #0x0                   	// #0
  428554:	nop
  428558:	ldr	x0, [x0, #304]
  42855c:	lsl	x22, x19, #4
  428560:	mov	x1, x21
  428564:	mov	x2, #0xc                   	// #12
  428568:	add	x19, x19, #0x1
  42856c:	ldr	x0, [x0, x22]
  428570:	bl	40c1b0 <wcrtomb@plt+0x7590>
  428574:	ldr	x0, [x20, #24]
  428578:	mov	x2, #0xc                   	// #12
  42857c:	add	x1, x21, x2
  428580:	add	x21, x21, #0x18
  428584:	ldr	x3, [x0, #304]
  428588:	add	x3, x3, x22
  42858c:	ldr	x0, [x3, #8]
  428590:	bl	40c1b0 <wcrtomb@plt+0x7590>
  428594:	ldr	x0, [x20, #24]
  428598:	ldr	x1, [x0, #288]
  42859c:	cmp	x19, x1
  4285a0:	cset	w1, cc  // cc = lo, ul, last
  4285a4:	cmp	w1, #0x0
  4285a8:	ccmp	x19, #0x4, #0x4, ne  // ne = any
  4285ac:	b.ne	428558 <wcrtomb@plt+0x23938>  // b.any
  4285b0:	strb	w1, [x23, #482]
  4285b4:	mov	x2, x24
  4285b8:	mov	x1, x23
  4285bc:	mov	w24, #0x1                   	// #1
  4285c0:	bl	40c7c8 <wcrtomb@plt+0x7ba8>
  4285c4:	ldr	x0, [x20, #24]
  4285c8:	ldr	x0, [x0, #288]
  4285cc:	cmp	x0, x19
  4285d0:	b.ls	428678 <wcrtomb@plt+0x23a58>  // b.plast
  4285d4:	str	x25, [sp, #64]
  4285d8:	bl	406550 <wcrtomb@plt+0x1930>
  4285dc:	mov	x22, x0
  4285e0:	mov	w1, #0x0                   	// #0
  4285e4:	mov	x2, #0x200                 	// #512
  4285e8:	bl	404410 <memset@plt>
  4285ec:	mov	x21, x22
  4285f0:	ldr	x0, [x20, #24]
  4285f4:	ldr	x1, [x0, #288]
  4285f8:	cmp	x1, x19
  4285fc:	b.ls	42865c <wcrtomb@plt+0x23a3c>  // b.plast
  428600:	add	x25, x22, #0x1f8
  428604:	b	428610 <wcrtomb@plt+0x239f0>
  428608:	cmp	x21, x25
  42860c:	b.eq	428690 <wcrtomb@plt+0x23a70>  // b.none
  428610:	ldr	x0, [x0, #304]
  428614:	lsl	x23, x19, #4
  428618:	mov	x1, x21
  42861c:	mov	x2, #0xc                   	// #12
  428620:	add	x19, x19, #0x1
  428624:	ldr	x0, [x0, x23]
  428628:	bl	40c1b0 <wcrtomb@plt+0x7590>
  42862c:	ldr	x0, [x20, #24]
  428630:	mov	x2, #0xc                   	// #12
  428634:	add	x1, x21, x2
  428638:	add	x21, x21, #0x18
  42863c:	ldr	x0, [x0, #304]
  428640:	add	x0, x0, x23
  428644:	ldr	x0, [x0, #8]
  428648:	bl	40c1b0 <wcrtomb@plt+0x7590>
  42864c:	ldr	x0, [x20, #24]
  428650:	ldr	x1, [x0, #288]
  428654:	cmp	x19, x1
  428658:	b.cc	428608 <wcrtomb@plt+0x239e8>  // b.lo, b.ul, b.last
  42865c:	mov	x0, x22
  428660:	bl	4060e0 <wcrtomb@plt+0x14c0>
  428664:	ldr	x0, [x20, #24]
  428668:	ldr	x0, [x0, #288]
  42866c:	cmp	x0, x19
  428670:	b.hi	4285d8 <wcrtomb@plt+0x239b8>  // b.pmore
  428674:	ldr	x25, [sp, #64]
  428678:	mov	w0, #0x1                   	// #1
  42867c:	ldp	x19, x20, [sp, #16]
  428680:	ldp	x21, x22, [sp, #32]
  428684:	ldp	x23, x24, [sp, #48]
  428688:	ldp	x29, x30, [sp], #80
  42868c:	ret
  428690:	strb	w24, [x22, #504]
  428694:	mov	x0, x22
  428698:	bl	4060e0 <wcrtomb@plt+0x14c0>
  42869c:	ldr	x0, [x20, #24]
  4286a0:	ldr	x0, [x0, #288]
  4286a4:	cmp	x0, x19
  4286a8:	b.hi	4285d8 <wcrtomb@plt+0x239b8>  // b.pmore
  4286ac:	b	428674 <wcrtomb@plt+0x23a54>
  4286b0:	mov	w1, #0x0                   	// #0
  4286b4:	b	4285b0 <wcrtomb@plt+0x23990>
  4286b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4286bc:	ldr	x0, [x0, #104]
  4286c0:	ldrb	w0, [x0, #156]
  4286c4:	cmp	w0, #0x53
  4286c8:	cset	w0, eq  // eq = none
  4286cc:	ret
  4286d0:	stp	x29, x30, [sp, #-96]!
  4286d4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4286d8:	mov	x29, sp
  4286dc:	stp	x19, x20, [sp, #16]
  4286e0:	ldr	x19, [x1, #104]
  4286e4:	stp	x25, x26, [sp, #64]
  4286e8:	mov	x25, x0
  4286ec:	ldr	x1, [x0, #24]
  4286f0:	stp	x21, x22, [sp, #32]
  4286f4:	ldrb	w0, [x19, #345]
  4286f8:	stp	x23, x24, [sp, #48]
  4286fc:	str	xzr, [x1, #288]
  428700:	cbnz	w0, 42870c <wcrtomb@plt+0x23aec>
  428704:	ldrb	w0, [x19, #366]
  428708:	cbnz	w0, 428948 <wcrtomb@plt+0x23d28>
  42870c:	stp	x27, x28, [sp, #80]
  428710:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  428714:	bl	406550 <wcrtomb@plt+0x1930>
  428718:	movk	x26, #0x555, lsl #48
  42871c:	mov	x24, x0
  428720:	cbz	x0, 428898 <wcrtomb@plt+0x23c78>
  428724:	nop
  428728:	add	x19, x0, #0xc
  42872c:	add	x23, x0, #0x204
  428730:	bl	4060e0 <wcrtomb@plt+0x14c0>
  428734:	b	4287b8 <wcrtomb@plt+0x23b98>
  428738:	mov	x1, #0xc                   	// #12
  42873c:	sub	x0, x19, #0xc
  428740:	bl	41cd38 <wcrtomb@plt+0x18118>
  428744:	mov	x21, x0
  428748:	mov	x1, #0xc                   	// #12
  42874c:	mov	x0, x19
  428750:	bl	41cd38 <wcrtomb@plt+0x18118>
  428754:	mov	x20, x0
  428758:	cmp	x21, #0x0
  42875c:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  428760:	b.lt	4287f8 <wcrtomb@plt+0x23bd8>  // b.tstop
  428764:	adds	x0, x21, x0
  428768:	b.vs	4287f8 <wcrtomb@plt+0x23bd8>
  42876c:	ldr	x22, [x25, #24]
  428770:	ldr	x1, [x22, #136]
  428774:	cmp	x1, x0
  428778:	b.lt	4287f8 <wcrtomb@plt+0x23bd8>  // b.tstop
  42877c:	ldr	x0, [x22, #264]
  428780:	tbnz	x0, #63, 4287f8 <wcrtomb@plt+0x23bd8>
  428784:	ldp	x1, x2, [x22, #288]
  428788:	ldr	x0, [x22, #304]
  42878c:	add	x28, x1, #0x1
  428790:	lsl	x27, x1, #4
  428794:	cmp	x1, x2
  428798:	b.eq	4288f8 <wcrtomb@plt+0x23cd8>  // b.none
  42879c:	add	x1, x0, x27
  4287a0:	str	x21, [x0, x27]
  4287a4:	add	x19, x19, #0x18
  4287a8:	cmp	x23, x19
  4287ac:	str	x20, [x1, #8]
  4287b0:	str	x28, [x22, #288]
  4287b4:	b.eq	428878 <wcrtomb@plt+0x23c58>  // b.none
  4287b8:	ldrb	w0, [x19]
  4287bc:	cbnz	w0, 428738 <wcrtomb@plt+0x23b18>
  4287c0:	ldr	x1, [x25, #16]
  4287c4:	mov	w0, #0x1                   	// #1
  4287c8:	cmp	w0, #0x2
  4287cc:	add	x0, x1, #0x200
  4287d0:	str	x0, [x25, #16]
  4287d4:	b.eq	428810 <wcrtomb@plt+0x23bf0>  // b.none
  4287d8:	ldp	x27, x28, [sp, #80]
  4287dc:	mov	w0, #0x1                   	// #1
  4287e0:	ldp	x19, x20, [sp, #16]
  4287e4:	ldp	x21, x22, [sp, #32]
  4287e8:	ldp	x23, x24, [sp, #48]
  4287ec:	ldp	x25, x26, [sp, #64]
  4287f0:	ldp	x29, x30, [sp], #96
  4287f4:	ret
  4287f8:	ldr	x1, [x25, #16]
  4287fc:	mov	w0, #0x2                   	// #2
  428800:	cmp	w0, #0x2
  428804:	add	x0, x1, #0x200
  428808:	str	x0, [x25, #16]
  42880c:	b.ne	4287d8 <wcrtomb@plt+0x23bb8>  // b.any
  428810:	ldp	x27, x28, [sp, #80]
  428814:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  428818:	ldr	x0, [x0, #1136]
  42881c:	cbz	x0, 428824 <wcrtomb@plt+0x23c04>
  428820:	blr	x0
  428824:	mov	w2, #0x5                   	// #5
  428828:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42882c:	mov	x0, #0x0                   	// #0
  428830:	add	x1, x1, #0x50
  428834:	bl	4049c0 <dcgettext@plt>
  428838:	mov	x2, x0
  42883c:	ldr	x3, [x25, #24]
  428840:	mov	w1, #0x0                   	// #0
  428844:	mov	w0, #0x0                   	// #0
  428848:	ldr	x3, [x3]
  42884c:	bl	404050 <error@plt>
  428850:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  428854:	mov	w2, #0x2                   	// #2
  428858:	mov	w0, #0x0                   	// #0
  42885c:	str	w2, [x1, #3568]
  428860:	ldp	x19, x20, [sp, #16]
  428864:	ldp	x21, x22, [sp, #32]
  428868:	ldp	x23, x24, [sp, #48]
  42886c:	ldp	x25, x26, [sp, #64]
  428870:	ldp	x29, x30, [sp], #96
  428874:	ret
  428878:	ldr	x0, [x25, #16]
  42887c:	ldrb	w1, [x24, #504]
  428880:	add	x0, x0, #0x200
  428884:	str	x0, [x25, #16]
  428888:	cbz	w1, 4287d8 <wcrtomb@plt+0x23bb8>
  42888c:	bl	406550 <wcrtomb@plt+0x1930>
  428890:	mov	x24, x0
  428894:	cbnz	x0, 428728 <wcrtomb@plt+0x23b08>
  428898:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42889c:	ldr	x0, [x0, #1136]
  4288a0:	cbz	x0, 4288a8 <wcrtomb@plt+0x23c88>
  4288a4:	blr	x0
  4288a8:	mov	w2, #0x5                   	// #5
  4288ac:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4288b0:	mov	x0, #0x0                   	// #0
  4288b4:	add	x1, x1, #0x378
  4288b8:	bl	4049c0 <dcgettext@plt>
  4288bc:	mov	x2, x0
  4288c0:	mov	w1, #0x0                   	// #0
  4288c4:	mov	w0, #0x0                   	// #0
  4288c8:	bl	404050 <error@plt>
  4288cc:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4288d0:	mov	w2, #0x2                   	// #2
  4288d4:	mov	w0, #0x0                   	// #0
  4288d8:	str	w2, [x1, #3568]
  4288dc:	ldp	x19, x20, [sp, #16]
  4288e0:	ldp	x21, x22, [sp, #32]
  4288e4:	ldp	x23, x24, [sp, #48]
  4288e8:	ldp	x25, x26, [sp, #64]
  4288ec:	ldp	x27, x28, [sp, #80]
  4288f0:	ldp	x29, x30, [sp], #96
  4288f4:	ret
  4288f8:	cbz	x0, 42891c <wcrtomb@plt+0x23cfc>
  4288fc:	cmp	x2, x26
  428900:	b.cs	428930 <wcrtomb@plt+0x23d10>  // b.hs, b.nlast
  428904:	add	x2, x28, x2, lsr #1
  428908:	lsl	x1, x2, #4
  42890c:	str	x2, [x22, #296]
  428910:	bl	4501d0 <argp_parse@@Base+0x103f0>
  428914:	str	x0, [x22, #304]
  428918:	b	42879c <wcrtomb@plt+0x23b7c>
  42891c:	cbz	x1, 428934 <wcrtomb@plt+0x23d14>
  428920:	cmp	xzr, x1, lsr #60
  428924:	cset	x3, ne  // ne = any
  428928:	tbnz	x27, #63, 428930 <wcrtomb@plt+0x23d10>
  42892c:	cbz	x3, 428908 <wcrtomb@plt+0x23ce8>
  428930:	bl	4104a0 <wcrtomb@plt+0xb880>
  428934:	mov	x1, #0x80                  	// #128
  428938:	mov	x2, #0x8                   	// #8
  42893c:	mov	x27, #0x0                   	// #0
  428940:	mov	x28, #0x1                   	// #1
  428944:	b	42890c <wcrtomb@plt+0x23cec>
  428948:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  42894c:	add	x20, x19, #0x170
  428950:	add	x23, x19, #0x1d0
  428954:	movk	x24, #0x555, lsl #48
  428958:	ldrb	w0, [x20]
  42895c:	cbz	w0, 4287dc <wcrtomb@plt+0x23bbc>
  428960:	mov	x1, #0xc                   	// #12
  428964:	sub	x0, x20, #0xc
  428968:	bl	41cd38 <wcrtomb@plt+0x18118>
  42896c:	mov	x21, x0
  428970:	mov	x1, #0xc                   	// #12
  428974:	mov	x0, x20
  428978:	bl	41cd38 <wcrtomb@plt+0x18118>
  42897c:	mov	x22, x0
  428980:	tbnz	x21, #63, 428814 <wcrtomb@plt+0x23bf4>
  428984:	tbnz	x0, #63, 428814 <wcrtomb@plt+0x23bf4>
  428988:	adds	x0, x21, x0
  42898c:	b.vs	428814 <wcrtomb@plt+0x23bf4>
  428990:	ldr	x26, [x25, #24]
  428994:	ldr	x1, [x26, #136]
  428998:	cmp	x1, x0
  42899c:	b.lt	428814 <wcrtomb@plt+0x23bf4>  // b.tstop
  4289a0:	ldr	x0, [x26, #264]
  4289a4:	tbnz	x0, #63, 428814 <wcrtomb@plt+0x23bf4>
  4289a8:	ldp	x1, x2, [x26, #288]
  4289ac:	stp	x27, x28, [sp, #80]
  4289b0:	ldr	x0, [x26, #304]
  4289b4:	add	x28, x1, #0x1
  4289b8:	lsl	x27, x1, #4
  4289bc:	cmp	x1, x2
  4289c0:	b.eq	4289f8 <wcrtomb@plt+0x23dd8>  // b.none
  4289c4:	add	x1, x0, x27
  4289c8:	str	x21, [x0, x27]
  4289cc:	add	x20, x20, #0x18
  4289d0:	cmp	x23, x20
  4289d4:	str	x22, [x1, #8]
  4289d8:	str	x28, [x26, #288]
  4289dc:	b.ne	4289f0 <wcrtomb@plt+0x23dd0>  // b.any
  4289e0:	ldrb	w0, [x19, #355]
  4289e4:	cbnz	w0, 428710 <wcrtomb@plt+0x23af0>
  4289e8:	ldp	x27, x28, [sp, #80]
  4289ec:	b	4287dc <wcrtomb@plt+0x23bbc>
  4289f0:	ldp	x27, x28, [sp, #80]
  4289f4:	b	428958 <wcrtomb@plt+0x23d38>
  4289f8:	cbz	x0, 428a1c <wcrtomb@plt+0x23dfc>
  4289fc:	cmp	x2, x24
  428a00:	b.cs	428930 <wcrtomb@plt+0x23d10>  // b.hs, b.nlast
  428a04:	add	x2, x28, x2, lsr #1
  428a08:	lsl	x1, x2, #4
  428a0c:	str	x2, [x26, #296]
  428a10:	bl	4501d0 <argp_parse@@Base+0x103f0>
  428a14:	str	x0, [x26, #304]
  428a18:	b	4289c4 <wcrtomb@plt+0x23da4>
  428a1c:	cbz	x1, 428a34 <wcrtomb@plt+0x23e14>
  428a20:	cmp	xzr, x1, lsr #60
  428a24:	cset	x3, ne  // ne = any
  428a28:	tbnz	x27, #63, 428930 <wcrtomb@plt+0x23d10>
  428a2c:	cbz	x3, 428a08 <wcrtomb@plt+0x23de8>
  428a30:	bl	4104a0 <wcrtomb@plt+0xb880>
  428a34:	mov	x1, #0x80                  	// #128
  428a38:	mov	x2, #0x8                   	// #8
  428a3c:	mov	x27, #0x0                   	// #0
  428a40:	mov	x28, #0x1                   	// #1
  428a44:	b	428a0c <wcrtomb@plt+0x23dec>
  428a48:	sub	sp, sp, #0x260
  428a4c:	stp	x29, x30, [sp]
  428a50:	mov	x29, sp
  428a54:	stp	x21, x22, [sp, #32]
  428a58:	mov	x22, x0
  428a5c:	ldp	x21, x1, [x0, #24]
  428a60:	stp	x23, x24, [sp, #48]
  428a64:	ldr	w24, [x0]
  428a68:	ldr	x3, [x1, #48]
  428a6c:	str	xzr, [x21, #264]
  428a70:	cbz	x3, 428a88 <wcrtomb@plt+0x23e68>
  428a74:	mov	x2, #0x0                   	// #0
  428a78:	mov	w1, #0x0                   	// #0
  428a7c:	blr	x3
  428a80:	tst	w0, #0xff
  428a84:	b.eq	428c28 <wcrtomb@plt+0x24008>  // b.none
  428a88:	stp	x25, x26, [sp, #64]
  428a8c:	mov	x25, #0x5555555555555555    	// #6148914691236517205
  428a90:	add	x1, sp, #0x60
  428a94:	mov	w0, w24
  428a98:	mov	x2, #0x200                 	// #512
  428a9c:	mov	x23, #0x0                   	// #0
  428aa0:	movk	x25, #0x555, lsl #48
  428aa4:	stp	x19, x20, [sp, #16]
  428aa8:	mov	x20, #0x0                   	// #0
  428aac:	mov	x19, #0x0                   	// #0
  428ab0:	stp	x27, x28, [sp, #80]
  428ab4:	bl	41fbe8 <wcrtomb@plt+0x1afc8>
  428ab8:	mov	x26, x0
  428abc:	cbz	x0, 428b08 <wcrtomb@plt+0x23ee8>
  428ac0:	cmn	x0, #0x1
  428ac4:	b.eq	428b08 <wcrtomb@plt+0x23ee8>  // b.none
  428ac8:	add	x0, sp, #0x60
  428acc:	add	x3, x0, x26
  428ad0:	mov	x1, x0
  428ad4:	nop
  428ad8:	ldrb	w2, [x1], #1
  428adc:	cbnz	w2, 428be0 <wcrtomb@plt+0x23fc0>
  428ae0:	cmp	x1, x3
  428ae4:	b.ne	428ad8 <wcrtomb@plt+0x23eb8>  // b.any
  428ae8:	cbnz	x20, 428b88 <wcrtomb@plt+0x23f68>
  428aec:	add	x19, x19, x26
  428af0:	add	x1, sp, #0x60
  428af4:	mov	w0, w24
  428af8:	mov	x2, #0x200                 	// #512
  428afc:	bl	41fbe8 <wcrtomb@plt+0x1afc8>
  428b00:	mov	x26, x0
  428b04:	cbnz	x0, 428ac0 <wcrtomb@plt+0x23ea0>
  428b08:	ldp	x0, x2, [x21, #288]
  428b0c:	cmp	x20, #0x0
  428b10:	csel	x19, x19, x23, eq  // eq = none
  428b14:	add	x24, x0, #0x1
  428b18:	lsl	x23, x0, #4
  428b1c:	cmp	x0, x2
  428b20:	ldr	x0, [x21, #304]
  428b24:	b.eq	428c84 <wcrtomb@plt+0x24064>  // b.none
  428b28:	ldr	x3, [x22, #32]
  428b2c:	add	x2, x0, x23
  428b30:	ldr	x1, [x21, #264]
  428b34:	str	x19, [x0, x23]
  428b38:	ldr	x3, [x3, #48]
  428b3c:	str	x20, [x2, #8]
  428b40:	add	x1, x1, x26
  428b44:	str	x1, [x21, #264]
  428b48:	str	x24, [x21, #288]
  428b4c:	mov	w0, #0x1                   	// #1
  428b50:	cbz	x3, 428c40 <wcrtomb@plt+0x24020>
  428b54:	mov	x0, x22
  428b58:	mov	x2, #0x0                   	// #0
  428b5c:	mov	w1, #0x2                   	// #2
  428b60:	blr	x3
  428b64:	and	w0, w0, #0xff
  428b68:	ldp	x29, x30, [sp]
  428b6c:	ldp	x19, x20, [sp, #16]
  428b70:	ldp	x21, x22, [sp, #32]
  428b74:	ldp	x23, x24, [sp, #48]
  428b78:	ldp	x25, x26, [sp, #64]
  428b7c:	ldp	x27, x28, [sp, #80]
  428b80:	add	sp, sp, #0x260
  428b84:	ret
  428b88:	ldp	x0, x2, [x21, #288]
  428b8c:	add	x28, x0, #0x1
  428b90:	lsl	x27, x0, #4
  428b94:	cmp	x0, x2
  428b98:	ldr	x0, [x21, #304]
  428b9c:	b.eq	428c60 <wcrtomb@plt+0x24040>  // b.none
  428ba0:	ldr	x2, [x22, #32]
  428ba4:	add	x1, x0, x27
  428ba8:	str	x23, [x0, x27]
  428bac:	ldr	x3, [x2, #48]
  428bb0:	str	x20, [x1, #8]
  428bb4:	str	x28, [x21, #288]
  428bb8:	cbz	x3, 428bd4 <wcrtomb@plt+0x23fb4>
  428bbc:	mov	x0, x22
  428bc0:	mov	x2, #0x0                   	// #0
  428bc4:	mov	w1, #0x1                   	// #1
  428bc8:	blr	x3
  428bcc:	tst	w0, #0xff
  428bd0:	b.eq	428c1c <wcrtomb@plt+0x23ffc>  // b.none
  428bd4:	add	x19, x19, x26
  428bd8:	mov	x20, #0x0                   	// #0
  428bdc:	b	428af0 <wcrtomb@plt+0x23ed0>
  428be0:	ldr	x1, [x22, #32]
  428be4:	cmp	x20, #0x0
  428be8:	ldr	x0, [x21, #264]
  428bec:	csel	x23, x23, x19, ne  // ne = any
  428bf0:	ldr	x3, [x1, #48]
  428bf4:	add	x0, x0, x26
  428bf8:	str	x0, [x21, #264]
  428bfc:	add	x20, x20, x26
  428c00:	cbz	x3, 428aec <wcrtomb@plt+0x23ecc>
  428c04:	add	x2, sp, #0x60
  428c08:	mov	x0, x22
  428c0c:	mov	w1, #0x1                   	// #1
  428c10:	blr	x3
  428c14:	tst	w0, #0xff
  428c18:	b.ne	428aec <wcrtomb@plt+0x23ecc>  // b.any
  428c1c:	ldp	x19, x20, [sp, #16]
  428c20:	ldp	x25, x26, [sp, #64]
  428c24:	ldp	x27, x28, [sp, #80]
  428c28:	mov	w0, #0x0                   	// #0
  428c2c:	ldp	x29, x30, [sp]
  428c30:	ldp	x21, x22, [sp, #32]
  428c34:	ldp	x23, x24, [sp, #48]
  428c38:	add	sp, sp, #0x260
  428c3c:	ret
  428c40:	ldp	x29, x30, [sp]
  428c44:	ldp	x19, x20, [sp, #16]
  428c48:	ldp	x21, x22, [sp, #32]
  428c4c:	ldp	x23, x24, [sp, #48]
  428c50:	ldp	x25, x26, [sp, #64]
  428c54:	ldp	x27, x28, [sp, #80]
  428c58:	add	sp, sp, #0x260
  428c5c:	ret
  428c60:	cbz	x0, 428cb0 <wcrtomb@plt+0x24090>
  428c64:	cmp	x2, x25
  428c68:	b.cs	428d10 <wcrtomb@plt+0x240f0>  // b.hs, b.nlast
  428c6c:	add	x2, x28, x2, lsr #1
  428c70:	lsl	x1, x2, #4
  428c74:	str	x2, [x21, #296]
  428c78:	bl	4501d0 <argp_parse@@Base+0x103f0>
  428c7c:	str	x0, [x21, #304]
  428c80:	b	428ba0 <wcrtomb@plt+0x23f80>
  428c84:	cbz	x0, 428ce0 <wcrtomb@plt+0x240c0>
  428c88:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  428c8c:	movk	x1, #0x555, lsl #48
  428c90:	cmp	x2, x1
  428c94:	b.cs	428d10 <wcrtomb@plt+0x240f0>  // b.hs, b.nlast
  428c98:	add	x2, x24, x2, lsr #1
  428c9c:	lsl	x1, x2, #4
  428ca0:	str	x2, [x21, #296]
  428ca4:	bl	4501d0 <argp_parse@@Base+0x103f0>
  428ca8:	str	x0, [x21, #304]
  428cac:	b	428b28 <wcrtomb@plt+0x23f08>
  428cb0:	cbz	x2, 428ccc <wcrtomb@plt+0x240ac>
  428cb4:	cmp	xzr, x2, lsr #60
  428cb8:	cset	x1, ne  // ne = any
  428cbc:	tbnz	x27, #63, 428d10 <wcrtomb@plt+0x240f0>
  428cc0:	cbnz	x1, 428d10 <wcrtomb@plt+0x240f0>
  428cc4:	mov	x1, x27
  428cc8:	b	428c74 <wcrtomb@plt+0x24054>
  428ccc:	mov	x1, #0x80                  	// #128
  428cd0:	mov	x2, #0x8                   	// #8
  428cd4:	mov	x27, #0x0                   	// #0
  428cd8:	mov	x28, #0x1                   	// #1
  428cdc:	b	428c74 <wcrtomb@plt+0x24054>
  428ce0:	cbz	x2, 428cfc <wcrtomb@plt+0x240dc>
  428ce4:	cmp	xzr, x2, lsr #60
  428ce8:	cset	x1, ne  // ne = any
  428cec:	tbnz	x23, #63, 428d10 <wcrtomb@plt+0x240f0>
  428cf0:	cbnz	x1, 428d10 <wcrtomb@plt+0x240f0>
  428cf4:	mov	x1, x23
  428cf8:	b	428ca0 <wcrtomb@plt+0x24080>
  428cfc:	mov	x1, #0x80                  	// #128
  428d00:	mov	x2, #0x8                   	// #8
  428d04:	mov	x23, #0x0                   	// #0
  428d08:	mov	x24, #0x1                   	// #1
  428d0c:	b	428ca0 <wcrtomb@plt+0x24080>
  428d10:	bl	4104a0 <wcrtomb@plt+0xb880>
  428d14:	nop
  428d18:	stp	x29, x30, [sp, #-96]!
  428d1c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  428d20:	mov	x29, sp
  428d24:	stp	x21, x22, [sp, #32]
  428d28:	ldr	x22, [x1, #104]
  428d2c:	stp	x25, x26, [sp, #64]
  428d30:	mov	x25, x0
  428d34:	ldr	x0, [x0, #24]
  428d38:	add	x26, x22, #0x1ee
  428d3c:	stp	x19, x20, [sp, #16]
  428d40:	add	x19, x22, #0x18e
  428d44:	stp	x23, x24, [sp, #48]
  428d48:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  428d4c:	movk	x24, #0x555, lsl #48
  428d50:	str	xzr, [x0, #288]
  428d54:	ldrb	w0, [x19]
  428d58:	cbnz	w0, 428d78 <wcrtomb@plt+0x24158>
  428d5c:	mov	w0, #0x1                   	// #1
  428d60:	ldp	x19, x20, [sp, #16]
  428d64:	ldp	x21, x22, [sp, #32]
  428d68:	ldp	x23, x24, [sp, #48]
  428d6c:	ldp	x25, x26, [sp, #64]
  428d70:	ldp	x29, x30, [sp], #96
  428d74:	ret
  428d78:	mov	x1, #0xc                   	// #12
  428d7c:	sub	x0, x19, #0xc
  428d80:	bl	41cd38 <wcrtomb@plt+0x18118>
  428d84:	mov	x20, x0
  428d88:	mov	x1, #0xc                   	// #12
  428d8c:	mov	x0, x19
  428d90:	bl	41cd38 <wcrtomb@plt+0x18118>
  428d94:	mov	x21, x0
  428d98:	tbnz	x20, #63, 428ebc <wcrtomb@plt+0x2429c>
  428d9c:	tbnz	x0, #63, 428ebc <wcrtomb@plt+0x2429c>
  428da0:	adds	x0, x20, x0
  428da4:	b.vs	428ebc <wcrtomb@plt+0x2429c>
  428da8:	ldr	x23, [x25, #24]
  428dac:	ldr	x1, [x23, #136]
  428db0:	cmp	x1, x0
  428db4:	b.lt	428ebc <wcrtomb@plt+0x2429c>  // b.tstop
  428db8:	ldr	x0, [x23, #264]
  428dbc:	tbnz	x0, #63, 428ebc <wcrtomb@plt+0x2429c>
  428dc0:	ldp	x1, x2, [x23, #288]
  428dc4:	stp	x27, x28, [sp, #80]
  428dc8:	ldr	x0, [x23, #304]
  428dcc:	add	x28, x1, #0x1
  428dd0:	lsl	x27, x1, #4
  428dd4:	cmp	x1, x2
  428dd8:	b.eq	428fec <wcrtomb@plt+0x243cc>  // b.none
  428ddc:	add	x1, x0, x27
  428de0:	str	x20, [x0, x27]
  428de4:	add	x19, x19, #0x18
  428de8:	cmp	x19, x26
  428dec:	str	x21, [x1, #8]
  428df0:	str	x28, [x23, #288]
  428df4:	b.ne	428fe4 <wcrtomb@plt+0x243c4>  // b.any
  428df8:	ldrb	w0, [x22, #482]
  428dfc:	cbz	w0, 428eb0 <wcrtomb@plt+0x24290>
  428e00:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  428e04:	bl	406550 <wcrtomb@plt+0x1930>
  428e08:	movk	x26, #0x555, lsl #48
  428e0c:	mov	x24, x0
  428e10:	cbz	x0, 428f34 <wcrtomb@plt+0x24314>
  428e14:	nop
  428e18:	add	x19, x0, #0xc
  428e1c:	add	x23, x0, #0x204
  428e20:	bl	4060e0 <wcrtomb@plt+0x14c0>
  428e24:	b	428ea8 <wcrtomb@plt+0x24288>
  428e28:	mov	x1, #0xc                   	// #12
  428e2c:	sub	x0, x19, #0xc
  428e30:	bl	41cd38 <wcrtomb@plt+0x18118>
  428e34:	mov	x21, x0
  428e38:	mov	x1, #0xc                   	// #12
  428e3c:	mov	x0, x19
  428e40:	bl	41cd38 <wcrtomb@plt+0x18118>
  428e44:	mov	x20, x0
  428e48:	cmp	x21, #0x0
  428e4c:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  428e50:	b.lt	428eb8 <wcrtomb@plt+0x24298>  // b.tstop
  428e54:	adds	x0, x21, x0
  428e58:	b.vs	428eb8 <wcrtomb@plt+0x24298>
  428e5c:	ldr	x22, [x25, #24]
  428e60:	ldr	x1, [x22, #136]
  428e64:	cmp	x1, x0
  428e68:	b.lt	428eb8 <wcrtomb@plt+0x24298>  // b.tstop
  428e6c:	ldr	x0, [x22, #264]
  428e70:	tbnz	x0, #63, 428eb8 <wcrtomb@plt+0x24298>
  428e74:	ldp	x1, x2, [x22, #288]
  428e78:	ldr	x0, [x22, #304]
  428e7c:	add	x28, x1, #0x1
  428e80:	lsl	x27, x1, #4
  428e84:	cmp	x1, x2
  428e88:	b.eq	428f94 <wcrtomb@plt+0x24374>  // b.none
  428e8c:	add	x1, x0, x27
  428e90:	str	x21, [x0, x27]
  428e94:	add	x19, x19, #0x18
  428e98:	cmp	x23, x19
  428e9c:	str	x20, [x1, #8]
  428ea0:	str	x28, [x22, #288]
  428ea4:	b.eq	428f20 <wcrtomb@plt+0x24300>  // b.none
  428ea8:	ldrb	w0, [x19]
  428eac:	cbnz	w0, 428e28 <wcrtomb@plt+0x24208>
  428eb0:	ldp	x27, x28, [sp, #80]
  428eb4:	b	428d5c <wcrtomb@plt+0x2413c>
  428eb8:	ldp	x27, x28, [sp, #80]
  428ebc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  428ec0:	ldr	x0, [x0, #1136]
  428ec4:	cbz	x0, 428ecc <wcrtomb@plt+0x242ac>
  428ec8:	blr	x0
  428ecc:	mov	w2, #0x5                   	// #5
  428ed0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  428ed4:	mov	x0, #0x0                   	// #0
  428ed8:	add	x1, x1, #0x50
  428edc:	bl	4049c0 <dcgettext@plt>
  428ee0:	mov	x2, x0
  428ee4:	ldr	x3, [x25, #24]
  428ee8:	mov	w1, #0x0                   	// #0
  428eec:	mov	w0, #0x0                   	// #0
  428ef0:	ldr	x3, [x3]
  428ef4:	bl	404050 <error@plt>
  428ef8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  428efc:	mov	w2, #0x2                   	// #2
  428f00:	mov	w0, #0x0                   	// #0
  428f04:	str	w2, [x1, #3568]
  428f08:	ldp	x19, x20, [sp, #16]
  428f0c:	ldp	x21, x22, [sp, #32]
  428f10:	ldp	x23, x24, [sp, #48]
  428f14:	ldp	x25, x26, [sp, #64]
  428f18:	ldp	x29, x30, [sp], #96
  428f1c:	ret
  428f20:	ldrb	w0, [x24, #504]
  428f24:	cbz	w0, 428eb0 <wcrtomb@plt+0x24290>
  428f28:	bl	406550 <wcrtomb@plt+0x1930>
  428f2c:	mov	x24, x0
  428f30:	cbnz	x0, 428e18 <wcrtomb@plt+0x241f8>
  428f34:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  428f38:	ldr	x0, [x0, #1136]
  428f3c:	cbz	x0, 428f44 <wcrtomb@plt+0x24324>
  428f40:	blr	x0
  428f44:	mov	w2, #0x5                   	// #5
  428f48:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  428f4c:	mov	x0, #0x0                   	// #0
  428f50:	add	x1, x1, #0x378
  428f54:	bl	4049c0 <dcgettext@plt>
  428f58:	mov	x2, x0
  428f5c:	mov	w1, #0x0                   	// #0
  428f60:	mov	w0, #0x0                   	// #0
  428f64:	bl	404050 <error@plt>
  428f68:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  428f6c:	mov	w2, #0x2                   	// #2
  428f70:	mov	w0, #0x0                   	// #0
  428f74:	str	w2, [x1, #3568]
  428f78:	ldp	x19, x20, [sp, #16]
  428f7c:	ldp	x21, x22, [sp, #32]
  428f80:	ldp	x23, x24, [sp, #48]
  428f84:	ldp	x25, x26, [sp, #64]
  428f88:	ldp	x27, x28, [sp, #80]
  428f8c:	ldp	x29, x30, [sp], #96
  428f90:	ret
  428f94:	cbz	x0, 428fb8 <wcrtomb@plt+0x24398>
  428f98:	cmp	x2, x26
  428f9c:	b.cs	428fcc <wcrtomb@plt+0x243ac>  // b.hs, b.nlast
  428fa0:	add	x2, x28, x2, lsr #1
  428fa4:	lsl	x1, x2, #4
  428fa8:	str	x2, [x22, #296]
  428fac:	bl	4501d0 <argp_parse@@Base+0x103f0>
  428fb0:	str	x0, [x22, #304]
  428fb4:	b	428e8c <wcrtomb@plt+0x2426c>
  428fb8:	cbz	x1, 428fd0 <wcrtomb@plt+0x243b0>
  428fbc:	cmp	xzr, x1, lsr #60
  428fc0:	cset	x3, ne  // ne = any
  428fc4:	tbnz	x27, #63, 428fcc <wcrtomb@plt+0x243ac>
  428fc8:	cbz	x3, 428fa4 <wcrtomb@plt+0x24384>
  428fcc:	bl	4104a0 <wcrtomb@plt+0xb880>
  428fd0:	mov	x1, #0x80                  	// #128
  428fd4:	mov	x2, #0x8                   	// #8
  428fd8:	mov	x27, #0x0                   	// #0
  428fdc:	mov	x28, #0x1                   	// #1
  428fe0:	b	428fa8 <wcrtomb@plt+0x24388>
  428fe4:	ldp	x27, x28, [sp, #80]
  428fe8:	b	428d54 <wcrtomb@plt+0x24134>
  428fec:	cbz	x0, 429010 <wcrtomb@plt+0x243f0>
  428ff0:	cmp	x2, x24
  428ff4:	b.cs	428fcc <wcrtomb@plt+0x243ac>  // b.hs, b.nlast
  428ff8:	add	x2, x28, x2, lsr #1
  428ffc:	lsl	x1, x2, #4
  429000:	str	x2, [x23, #296]
  429004:	bl	4501d0 <argp_parse@@Base+0x103f0>
  429008:	str	x0, [x23, #304]
  42900c:	b	428ddc <wcrtomb@plt+0x241bc>
  429010:	cbz	x1, 429028 <wcrtomb@plt+0x24408>
  429014:	cmp	xzr, x1, lsr #60
  429018:	cset	x3, ne  // ne = any
  42901c:	tbnz	x27, #63, 428fcc <wcrtomb@plt+0x243ac>
  429020:	cbz	x3, 428ffc <wcrtomb@plt+0x243dc>
  429024:	bl	4104a0 <wcrtomb@plt+0xb880>
  429028:	mov	x1, #0x80                  	// #128
  42902c:	mov	x2, #0x8                   	// #8
  429030:	mov	x27, #0x0                   	// #0
  429034:	mov	x28, #0x1                   	// #1
  429038:	b	429000 <wcrtomb@plt+0x243e0>
  42903c:	nop
  429040:	ldr	x1, [x0, #24]
  429044:	ldr	w1, [x1, #276]
  429048:	cbnz	w1, 429054 <wcrtomb@plt+0x24434>
  42904c:	mov	w0, #0x1                   	// #1
  429050:	ret
  429054:	stp	x29, x30, [sp, #-176]!
  429058:	mov	x29, sp
  42905c:	stp	x19, x20, [sp, #16]
  429060:	stp	x21, x22, [sp, #32]
  429064:	stp	x23, x24, [sp, #48]
  429068:	mov	x23, x0
  42906c:	stp	x25, x26, [sp, #64]
  429070:	stp	x27, x28, [sp, #80]
  429074:	bl	406070 <wcrtomb@plt+0x1450>
  429078:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42907c:	mov	x24, x0
  429080:	ldr	x0, [x1, #104]
  429084:	bl	4060e0 <wcrtomb@plt+0x14c0>
  429088:	bl	406550 <wcrtomb@plt+0x1930>
  42908c:	mov	x25, x0
  429090:	cbz	x0, 429490 <wcrtomb@plt+0x24870>
  429094:	add	x20, sp, #0x98
  429098:	mov	x19, x0
  42909c:	add	x22, x20, #0x14
  4290a0:	add	x27, x0, #0x200
  4290a4:	b	4290c0 <wcrtomb@plt+0x244a0>
  4290a8:	ldrb	w21, [x19], #1
  4290ac:	strb	w21, [x20], #1
  4290b0:	cmp	w21, #0xa
  4290b4:	b.eq	4290f8 <wcrtomb@plt+0x244d8>  // b.none
  4290b8:	cmp	x20, x22
  4290bc:	b.eq	4291c0 <wcrtomb@plt+0x245a0>  // b.none
  4290c0:	cmp	x19, x27
  4290c4:	b.ne	4290a8 <wcrtomb@plt+0x24488>  // b.any
  4290c8:	mov	x0, x25
  4290cc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4290d0:	bl	406550 <wcrtomb@plt+0x1930>
  4290d4:	mov	x25, x0
  4290d8:	cbz	x0, 429380 <wcrtomb@plt+0x24760>
  4290dc:	mov	x19, x0
  4290e0:	add	x27, x0, #0x200
  4290e4:	ldrb	w21, [x19], #1
  4290e8:	strb	w21, [x20], #1
  4290ec:	cmp	w21, #0xa
  4290f0:	b.ne	4290b8 <wcrtomb@plt+0x24498>  // b.any
  4290f4:	nop
  4290f8:	sturb	wzr, [x20, #-1]
  4290fc:	ldrb	w0, [sp, #152]
  429100:	sub	w0, w0, #0x30
  429104:	cmp	w0, #0x9
  429108:	b.hi	429228 <wcrtomb@plt+0x24608>  // b.pmore
  42910c:	bl	404ad0 <__errno_location@plt>
  429110:	mov	x22, x0
  429114:	add	x1, sp, #0x90
  429118:	mov	w2, w21
  42911c:	add	x0, sp, #0x98
  429120:	mov	w3, #0x0                   	// #0
  429124:	str	wzr, [x22]
  429128:	bl	4044b0 <__strtoul_internal@plt>
  42912c:	ldr	w1, [x22]
  429130:	cmp	w1, #0x22
  429134:	b.eq	429228 <wcrtomb@plt+0x24608>  // b.none
  429138:	ldr	x1, [sp, #144]
  42913c:	ldrb	w1, [x1]
  429140:	cbnz	w1, 429228 <wcrtomb@plt+0x24608>
  429144:	ldr	x20, [x23, #24]
  429148:	mov	x1, #0x10                  	// #16
  42914c:	mov	x21, #0x0                   	// #0
  429150:	str	x0, [x20, #296]
  429154:	bl	4502b0 <argp_parse@@Base+0x104d0>
  429158:	ldr	x1, [x23, #24]
  42915c:	str	x0, [x20, #304]
  429160:	ldr	x0, [x1, #296]
  429164:	str	xzr, [x1, #288]
  429168:	cbz	x0, 42935c <wcrtomb@plt+0x2473c>
  42916c:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  429170:	add	x28, sp, #0xac
  429174:	movk	x26, #0x555, lsl #48
  429178:	add	x20, sp, #0x98
  42917c:	b	429198 <wcrtomb@plt+0x24578>
  429180:	ldrb	w2, [x19], #1
  429184:	strb	w2, [x20], #1
  429188:	cmp	w2, #0xa
  42918c:	b.eq	429248 <wcrtomb@plt+0x24628>  // b.none
  429190:	cmp	x20, x28
  429194:	b.eq	4291c0 <wcrtomb@plt+0x245a0>  // b.none
  429198:	cmp	x19, x27
  42919c:	b.ne	429180 <wcrtomb@plt+0x24560>  // b.any
  4291a0:	mov	x0, x25
  4291a4:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4291a8:	bl	406550 <wcrtomb@plt+0x1930>
  4291ac:	mov	x25, x0
  4291b0:	cbz	x0, 4293fc <wcrtomb@plt+0x247dc>
  4291b4:	mov	x19, x0
  4291b8:	add	x27, x0, #0x200
  4291bc:	b	429180 <wcrtomb@plt+0x24560>
  4291c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4291c4:	ldr	x0, [x0, #1136]
  4291c8:	cbz	x0, 4291d0 <wcrtomb@plt+0x245b0>
  4291cc:	blr	x0
  4291d0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4291d4:	add	x1, x1, #0x78
  4291d8:	mov	w2, #0x5                   	// #5
  4291dc:	mov	x0, #0x0                   	// #0
  4291e0:	bl	4049c0 <dcgettext@plt>
  4291e4:	ldr	x3, [x23, #24]
  4291e8:	mov	x2, x0
  4291ec:	mov	w1, #0x0                   	// #0
  4291f0:	mov	w0, #0x0                   	// #0
  4291f4:	ldr	x3, [x3]
  4291f8:	bl	404050 <error@plt>
  4291fc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  429200:	mov	w1, #0x2                   	// #2
  429204:	str	w1, [x0, #3568]
  429208:	mov	w0, #0x0                   	// #0
  42920c:	ldp	x19, x20, [sp, #16]
  429210:	ldp	x21, x22, [sp, #32]
  429214:	ldp	x23, x24, [sp, #48]
  429218:	ldp	x25, x26, [sp, #64]
  42921c:	ldp	x27, x28, [sp, #80]
  429220:	ldp	x29, x30, [sp], #176
  429224:	ret
  429228:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42922c:	ldr	x0, [x0, #1136]
  429230:	cbz	x0, 429238 <wcrtomb@plt+0x24618>
  429234:	blr	x0
  429238:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42923c:	mov	w2, #0x5                   	// #5
  429240:	add	x1, x1, #0xa8
  429244:	b	4291dc <wcrtomb@plt+0x245bc>
  429248:	sturb	wzr, [x20, #-1]
  42924c:	ldrb	w0, [sp, #152]
  429250:	sub	w0, w0, #0x30
  429254:	cmp	w0, #0x9
  429258:	b.hi	429228 <wcrtomb@plt+0x24608>  // b.pmore
  42925c:	str	wzr, [x22]
  429260:	add	x1, sp, #0x90
  429264:	add	x0, sp, #0x98
  429268:	mov	w3, #0x0                   	// #0
  42926c:	bl	4044b0 <__strtoul_internal@plt>
  429270:	str	x0, [sp, #104]
  429274:	tbnz	x0, #63, 429228 <wcrtomb@plt+0x24608>
  429278:	ldr	w0, [x22]
  42927c:	cmp	w0, #0x22
  429280:	b.eq	429228 <wcrtomb@plt+0x24608>  // b.none
  429284:	ldr	x0, [sp, #144]
  429288:	ldrb	w0, [x0]
  42928c:	cbnz	w0, 429228 <wcrtomb@plt+0x24608>
  429290:	add	x20, sp, #0x98
  429294:	b	4292b0 <wcrtomb@plt+0x24690>
  429298:	ldrb	w2, [x19], #1
  42929c:	strb	w2, [x20], #1
  4292a0:	cmp	w2, #0xa
  4292a4:	b.eq	4292d8 <wcrtomb@plt+0x246b8>  // b.none
  4292a8:	cmp	x20, x28
  4292ac:	b.eq	4291c0 <wcrtomb@plt+0x245a0>  // b.none
  4292b0:	cmp	x19, x27
  4292b4:	b.ne	429298 <wcrtomb@plt+0x24678>  // b.any
  4292b8:	mov	x0, x25
  4292bc:	bl	4060e0 <wcrtomb@plt+0x14c0>
  4292c0:	bl	406550 <wcrtomb@plt+0x1930>
  4292c4:	mov	x25, x0
  4292c8:	cbz	x0, 429458 <wcrtomb@plt+0x24838>
  4292cc:	mov	x19, x0
  4292d0:	add	x27, x0, #0x200
  4292d4:	b	429298 <wcrtomb@plt+0x24678>
  4292d8:	sturb	wzr, [x20, #-1]
  4292dc:	ldrb	w0, [sp, #152]
  4292e0:	sub	w0, w0, #0x30
  4292e4:	cmp	w0, #0x9
  4292e8:	b.hi	429228 <wcrtomb@plt+0x24608>  // b.pmore
  4292ec:	str	wzr, [x22]
  4292f0:	add	x1, sp, #0x90
  4292f4:	add	x0, sp, #0x98
  4292f8:	mov	w3, #0x0                   	// #0
  4292fc:	bl	4044b0 <__strtoul_internal@plt>
  429300:	mov	x6, x0
  429304:	tbnz	x0, #63, 429228 <wcrtomb@plt+0x24608>
  429308:	ldr	w0, [x22]
  42930c:	cmp	w0, #0x22
  429310:	b.eq	429228 <wcrtomb@plt+0x24608>  // b.none
  429314:	ldr	x0, [sp, #144]
  429318:	ldrb	w0, [x0]
  42931c:	cbnz	w0, 429228 <wcrtomb@plt+0x24608>
  429320:	ldr	x3, [x23, #24]
  429324:	ldp	x2, x1, [x3, #288]
  429328:	ldr	x0, [x3, #304]
  42932c:	cmp	x2, x1
  429330:	b.eq	4293b8 <wcrtomb@plt+0x24798>  // b.none
  429334:	lsl	x5, x2, #4
  429338:	add	x4, x2, #0x1
  42933c:	add	x2, x0, x5
  429340:	add	x21, x21, #0x1
  429344:	ldr	x7, [sp, #104]
  429348:	str	x7, [x0, x5]
  42934c:	str	x6, [x2, #8]
  429350:	cmp	x21, x1
  429354:	str	x4, [x3, #288]
  429358:	b.cc	429178 <wcrtomb@plt+0x24558>  // b.lo, b.ul, b.last
  42935c:	mov	x0, x25
  429360:	bl	4060e0 <wcrtomb@plt+0x14c0>
  429364:	bl	406070 <wcrtomb@plt+0x1450>
  429368:	sub	x1, x0, x24
  42936c:	ldr	x2, [x23, #16]
  429370:	mov	w0, #0x1                   	// #1
  429374:	add	x1, x2, x1, lsl #9
  429378:	str	x1, [x23, #16]
  42937c:	b	42920c <wcrtomb@plt+0x245ec>
  429380:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  429384:	ldr	x0, [x0, #1136]
  429388:	cbz	x0, 429390 <wcrtomb@plt+0x24770>
  42938c:	blr	x0
  429390:	mov	w2, #0x5                   	// #5
  429394:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  429398:	mov	x0, #0x0                   	// #0
  42939c:	add	x1, x1, #0x378
  4293a0:	bl	4049c0 <dcgettext@plt>
  4293a4:	mov	x2, x0
  4293a8:	mov	w1, #0x0                   	// #0
  4293ac:	mov	w0, #0x0                   	// #0
  4293b0:	bl	404050 <error@plt>
  4293b4:	bl	410460 <wcrtomb@plt+0xb840>
  4293b8:	cbz	x0, 429438 <wcrtomb@plt+0x24818>
  4293bc:	cmp	x1, x26
  4293c0:	b.cs	429434 <wcrtomb@plt+0x24814>  // b.hs, b.nlast
  4293c4:	add	x4, x1, #0x1
  4293c8:	lsl	x5, x2, #4
  4293cc:	add	x1, x4, x1, lsr #1
  4293d0:	str	x1, [x3, #296]
  4293d4:	lsl	x1, x1, #4
  4293d8:	stp	x3, x6, [sp, #112]
  4293dc:	stp	x4, x5, [sp, #128]
  4293e0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  4293e4:	ldr	x1, [x23, #24]
  4293e8:	ldp	x3, x6, [sp, #112]
  4293ec:	ldp	x4, x5, [sp, #128]
  4293f0:	ldr	x1, [x1, #296]
  4293f4:	str	x0, [x3, #304]
  4293f8:	b	42933c <wcrtomb@plt+0x2471c>
  4293fc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  429400:	ldr	x0, [x0, #1136]
  429404:	cbz	x0, 42940c <wcrtomb@plt+0x247ec>
  429408:	blr	x0
  42940c:	mov	w2, #0x5                   	// #5
  429410:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  429414:	mov	x0, #0x0                   	// #0
  429418:	add	x1, x1, #0x378
  42941c:	bl	4049c0 <dcgettext@plt>
  429420:	mov	x2, x0
  429424:	mov	w1, #0x0                   	// #0
  429428:	mov	w0, #0x0                   	// #0
  42942c:	bl	404050 <error@plt>
  429430:	bl	410460 <wcrtomb@plt+0xb840>
  429434:	bl	4104a0 <wcrtomb@plt+0xb880>
  429438:	cbz	x2, 4294c8 <wcrtomb@plt+0x248a8>
  42943c:	cmp	xzr, x2, lsr #60
  429440:	lsl	x5, x2, #4
  429444:	cset	x4, ne  // ne = any
  429448:	tbnz	x2, #59, 429434 <wcrtomb@plt+0x24814>
  42944c:	cbnz	x4, 429434 <wcrtomb@plt+0x24814>
  429450:	add	x4, x2, #0x1
  429454:	b	4293d0 <wcrtomb@plt+0x247b0>
  429458:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42945c:	ldr	x0, [x0, #1136]
  429460:	cbz	x0, 429468 <wcrtomb@plt+0x24848>
  429464:	blr	x0
  429468:	mov	w2, #0x5                   	// #5
  42946c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  429470:	mov	x0, #0x0                   	// #0
  429474:	add	x1, x1, #0x378
  429478:	bl	4049c0 <dcgettext@plt>
  42947c:	mov	x2, x0
  429480:	mov	w1, #0x0                   	// #0
  429484:	mov	w0, #0x0                   	// #0
  429488:	bl	404050 <error@plt>
  42948c:	bl	410460 <wcrtomb@plt+0xb840>
  429490:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  429494:	ldr	x0, [x0, #1136]
  429498:	cbz	x0, 4294a0 <wcrtomb@plt+0x24880>
  42949c:	blr	x0
  4294a0:	mov	w2, #0x5                   	// #5
  4294a4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4294a8:	mov	x0, #0x0                   	// #0
  4294ac:	add	x1, x1, #0x378
  4294b0:	bl	4049c0 <dcgettext@plt>
  4294b4:	mov	x2, x0
  4294b8:	mov	w1, #0x0                   	// #0
  4294bc:	mov	w0, #0x0                   	// #0
  4294c0:	bl	404050 <error@plt>
  4294c4:	bl	410460 <wcrtomb@plt+0xb840>
  4294c8:	mov	x1, #0x8                   	// #8
  4294cc:	mov	x5, #0x0                   	// #0
  4294d0:	mov	x4, #0x1                   	// #1
  4294d4:	b	4293d0 <wcrtomb@plt+0x247b0>
  4294d8:	stp	x29, x30, [sp, #-128]!
  4294dc:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  4294e0:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4294e4:	mov	x29, sp
  4294e8:	ldr	w2, [x2, #80]
  4294ec:	ldr	w3, [x3, #944]
  4294f0:	cmp	w2, #0x0
  4294f4:	stp	x19, x20, [sp, #16]
  4294f8:	csel	w2, w3, w2, eq  // eq = none
  4294fc:	stp	x21, x22, [sp, #32]
  429500:	mov	x19, x1
  429504:	mov	w22, w0
  429508:	stp	xzr, xzr, [sp, #80]
  42950c:	cmp	w2, #0x5
  429510:	stp	xzr, xzr, [sp, #96]
  429514:	stp	xzr, xzr, [sp, #112]
  429518:	b.eq	4296bc <wcrtomb@plt+0x24a9c>  // b.none
  42951c:	b.hi	4295b8 <wcrtomb@plt+0x24998>  // b.pmore
  429520:	cmp	w2, #0x2
  429524:	b.eq	4295c0 <wcrtomb@plt+0x249a0>  // b.none
  429528:	cmp	w2, #0x4
  42952c:	b.ne	429678 <wcrtomb@plt+0x24a58>  // b.any
  429530:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429534:	add	x0, x0, #0xd0
  429538:	add	x0, x0, #0x248
  42953c:	str	x0, [sp, #112]
  429540:	ldr	x0, [x19, #152]
  429544:	mov	w1, #0x1                   	// #1
  429548:	str	w22, [sp, #80]
  42954c:	strb	w1, [sp, #84]
  429550:	str	x19, [sp, #104]
  429554:	cbz	x0, 4295e8 <wcrtomb@plt+0x249c8>
  429558:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42955c:	ldr	w0, [x0, #1044]
  429560:	cmp	w0, #0x1
  429564:	b.eq	4296a4 <wcrtomb@plt+0x24a84>  // b.none
  429568:	tst	w0, #0xfffffffd
  42956c:	b.eq	4296d0 <wcrtomb@plt+0x24ab0>  // b.none
  429570:	mov	x0, #0x0                   	// #0
  429574:	ldr	x1, [x19, #264]
  429578:	mov	w19, #0x0                   	// #0
  42957c:	sub	x0, x1, x0
  429580:	bl	40dc10 <wcrtomb@plt+0x8ff0>
  429584:	ldr	x0, [sp, #112]
  429588:	ldr	x1, [x0, #8]
  42958c:	mov	w0, #0x1                   	// #1
  429590:	cbz	x1, 42967c <wcrtomb@plt+0x24a5c>
  429594:	add	x0, sp, #0x50
  429598:	blr	x1
  42959c:	tst	w0, #0xff
  4295a0:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  4295a4:	cset	w0, eq  // eq = none
  4295a8:	ldp	x19, x20, [sp, #16]
  4295ac:	ldp	x21, x22, [sp, #32]
  4295b0:	ldp	x29, x30, [sp], #128
  4295b4:	ret
  4295b8:	cmp	w2, #0x6
  4295bc:	b.ne	429678 <wcrtomb@plt+0x24a58>  // b.any
  4295c0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4295c4:	add	x0, x0, #0xd0
  4295c8:	add	x0, x0, #0x200
  4295cc:	str	x0, [sp, #112]
  4295d0:	ldr	x0, [x19, #152]
  4295d4:	mov	w1, #0x1                   	// #1
  4295d8:	str	w22, [sp, #80]
  4295dc:	strb	w1, [sp, #84]
  4295e0:	str	x19, [sp, #104]
  4295e4:	cbnz	x0, 429558 <wcrtomb@plt+0x24938>
  4295e8:	ldp	x0, x2, [x19, #288]
  4295ec:	stp	x23, x24, [sp, #48]
  4295f0:	str	xzr, [x19, #264]
  4295f4:	ldr	x23, [x19, #136]
  4295f8:	add	x21, x0, #0x1
  4295fc:	lsl	x20, x0, #4
  429600:	cmp	x0, x2
  429604:	ldr	x0, [x19, #304]
  429608:	b.eq	42984c <wcrtomb@plt+0x24c2c>  // b.none
  42960c:	add	x1, x0, x20
  429610:	str	x23, [x0, x20]
  429614:	ldp	x23, x24, [sp, #48]
  429618:	str	xzr, [x1, #8]
  42961c:	str	x21, [x19, #288]
  429620:	ldr	x0, [sp, #112]
  429624:	ldr	x1, [x0, #56]
  429628:	cbz	x1, 429800 <wcrtomb@plt+0x24be0>
  42962c:	ldr	x1, [x0, #24]
  429630:	cbz	x1, 42963c <wcrtomb@plt+0x24a1c>
  429634:	add	x0, sp, #0x50
  429638:	blr	x1
  42963c:	ldp	x0, x1, [sp, #96]
  429640:	ldr	x2, [x1, #264]
  429644:	sub	x2, x2, x0
  429648:	tbz	w22, #31, 42978c <wcrtomb@plt+0x24b6c>
  42964c:	mov	x0, x2
  429650:	bl	40dc10 <wcrtomb@plt+0x8ff0>
  429654:	ldr	x0, [sp, #112]
  429658:	mov	w19, #0x1                   	// #1
  42965c:	ldr	x1, [x0, #8]
  429660:	mov	w0, #0x0                   	// #0
  429664:	cbnz	x1, 429594 <wcrtomb@plt+0x24974>
  429668:	ldp	x19, x20, [sp, #16]
  42966c:	ldp	x21, x22, [sp, #32]
  429670:	ldp	x29, x30, [sp], #128
  429674:	ret
  429678:	mov	w0, #0x3                   	// #3
  42967c:	ldp	x19, x20, [sp, #16]
  429680:	ldp	x21, x22, [sp, #32]
  429684:	ldp	x29, x30, [sp], #128
  429688:	ret
  42968c:	bl	404ad0 <__errno_location@plt>
  429690:	ldr	w0, [x0]
  429694:	cmp	w0, #0x6
  429698:	b.eq	429878 <wcrtomb@plt+0x24c58>  // b.none
  42969c:	ldp	x23, x24, [sp, #48]
  4296a0:	ldp	x25, x26, [sp, #64]
  4296a4:	add	x0, sp, #0x50
  4296a8:	bl	428a48 <wcrtomb@plt+0x23e28>
  4296ac:	tst	w0, #0xff
  4296b0:	b.ne	429620 <wcrtomb@plt+0x24a00>  // b.any
  4296b4:	ldp	x0, x19, [sp, #96]
  4296b8:	b	429574 <wcrtomb@plt+0x24954>
  4296bc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4296c0:	add	x0, x0, #0xd0
  4296c4:	add	x0, x0, #0x290
  4296c8:	str	x0, [sp, #112]
  4296cc:	b	429540 <wcrtomb@plt+0x24920>
  4296d0:	stp	x23, x24, [sp, #48]
  4296d4:	mov	x23, #0x5555555555555555    	// #6148914691236517205
  4296d8:	mov	x21, #0x0                   	// #0
  4296dc:	stp	x25, x26, [sp, #64]
  4296e0:	movk	x23, #0x555, lsl #48
  4296e4:	str	xzr, [x19, #264]
  4296e8:	b	429708 <wcrtomb@plt+0x24ae8>
  4296ec:	add	x1, x0, x24
  4296f0:	str	x20, [x0, x24]
  4296f4:	ldr	x0, [x19, #264]
  4296f8:	str	x25, [x1, #8]
  4296fc:	add	x0, x0, x25
  429700:	str	x0, [x19, #264]
  429704:	str	x26, [x19, #288]
  429708:	mov	x1, x21
  42970c:	mov	w0, w22
  429710:	mov	w2, #0x3                   	// #3
  429714:	bl	4041d0 <lseek@plt>
  429718:	mov	x20, x0
  42971c:	cmn	x0, #0x1
  429720:	b.eq	42968c <wcrtomb@plt+0x24a6c>  // b.none
  429724:	mov	x1, x0
  429728:	mov	w2, #0x4                   	// #4
  42972c:	mov	w0, w22
  429730:	bl	4041d0 <lseek@plt>
  429734:	orr	x1, x21, x20
  429738:	mov	x21, x0
  42973c:	cbnz	x1, 42974c <wcrtomb@plt+0x24b2c>
  429740:	ldr	x0, [x19, #136]
  429744:	cmp	x21, x0
  429748:	b.eq	429810 <wcrtomb@plt+0x24bf0>  // b.none
  42974c:	ldp	x0, x2, [x19, #288]
  429750:	sub	x25, x21, x20
  429754:	add	x26, x0, #0x1
  429758:	lsl	x24, x0, #4
  42975c:	cmp	x0, x2
  429760:	ldr	x0, [x19, #304]
  429764:	b.ne	4296ec <wcrtomb@plt+0x24acc>  // b.any
  429768:	cbz	x0, 4297e4 <wcrtomb@plt+0x24bc4>
  42976c:	cmp	x2, x23
  429770:	b.cs	429920 <wcrtomb@plt+0x24d00>  // b.hs, b.nlast
  429774:	add	x2, x26, x2, lsr #1
  429778:	lsl	x1, x2, #4
  42977c:	str	x2, [x19, #296]
  429780:	bl	4501d0 <argp_parse@@Base+0x103f0>
  429784:	str	x0, [x19, #304]
  429788:	b	4296ec <wcrtomb@plt+0x24acc>
  42978c:	ldr	x0, [x1, #8]
  429790:	mov	x20, #0x0                   	// #0
  429794:	ldr	x1, [x1, #136]
  429798:	bl	405570 <wcrtomb@plt+0x950>
  42979c:	nop
  4297a0:	ldr	x19, [sp, #104]
  4297a4:	ldr	x0, [x19, #288]
  4297a8:	cmp	x0, x20
  4297ac:	b.ls	42983c <wcrtomb@plt+0x24c1c>  // b.plast
  4297b0:	ldr	x0, [sp, #112]
  4297b4:	ldr	x2, [x0, #56]
  4297b8:	cbz	x2, 4297dc <wcrtomb@plt+0x24bbc>
  4297bc:	mov	x1, x20
  4297c0:	add	x0, sp, #0x50
  4297c4:	add	x20, x20, #0x1
  4297c8:	blr	x2
  4297cc:	tst	w0, #0xff
  4297d0:	b.ne	4297a0 <wcrtomb@plt+0x24b80>  // b.any
  4297d4:	ldp	x0, x19, [sp, #96]
  4297d8:	b	429574 <wcrtomb@plt+0x24954>
  4297dc:	ldr	x0, [sp, #96]
  4297e0:	b	429574 <wcrtomb@plt+0x24954>
  4297e4:	cbz	x2, 429828 <wcrtomb@plt+0x24c08>
  4297e8:	cmp	xzr, x2, lsr #60
  4297ec:	cset	x1, ne  // ne = any
  4297f0:	tbnz	x24, #63, 429920 <wcrtomb@plt+0x24d00>
  4297f4:	cbnz	x1, 429920 <wcrtomb@plt+0x24d00>
  4297f8:	mov	x1, x24
  4297fc:	b	42977c <wcrtomb@plt+0x24b5c>
  429800:	ldp	x0, x1, [sp, #96]
  429804:	ldr	x2, [x1, #264]
  429808:	sub	x2, x2, x0
  42980c:	b	42964c <wcrtomb@plt+0x24a2c>
  429810:	mov	w0, w22
  429814:	mov	w2, #0x0                   	// #0
  429818:	bl	4041d0 <lseek@plt>
  42981c:	ldp	x23, x24, [sp, #48]
  429820:	ldp	x25, x26, [sp, #64]
  429824:	b	4296a4 <wcrtomb@plt+0x24a84>
  429828:	mov	x1, #0x80                  	// #128
  42982c:	mov	x2, #0x8                   	// #8
  429830:	mov	x24, #0x0                   	// #0
  429834:	mov	x26, #0x1                   	// #1
  429838:	b	42977c <wcrtomb@plt+0x24b5c>
  42983c:	ldr	x0, [sp, #96]
  429840:	ldr	x2, [x19, #264]
  429844:	sub	x2, x2, x0
  429848:	b	42964c <wcrtomb@plt+0x24a2c>
  42984c:	cbz	x0, 4298b0 <wcrtomb@plt+0x24c90>
  429850:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  429854:	movk	x1, #0x555, lsl #48
  429858:	cmp	x2, x1
  42985c:	b.cs	429934 <wcrtomb@plt+0x24d14>  // b.hs, b.nlast
  429860:	add	x2, x21, x2, lsr #1
  429864:	lsl	x1, x2, #4
  429868:	str	x2, [x19, #296]
  42986c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  429870:	str	x0, [x19, #304]
  429874:	b	42960c <wcrtomb@plt+0x249ec>
  429878:	ldp	x0, x1, [x19, #288]
  42987c:	ldr	x23, [x19, #136]
  429880:	add	x21, x0, #0x1
  429884:	lsl	x20, x0, #4
  429888:	cmp	x0, x1
  42988c:	ldr	x0, [x19, #304]
  429890:	b.eq	4298cc <wcrtomb@plt+0x24cac>  // b.none
  429894:	add	x1, x0, x20
  429898:	str	x23, [x0, x20]
  42989c:	ldp	x23, x24, [sp, #48]
  4298a0:	ldp	x25, x26, [sp, #64]
  4298a4:	str	xzr, [x1, #8]
  4298a8:	str	x21, [x19, #288]
  4298ac:	b	429620 <wcrtomb@plt+0x24a00>
  4298b0:	cbz	x2, 4298f8 <wcrtomb@plt+0x24cd8>
  4298b4:	cmp	xzr, x2, lsr #60
  4298b8:	cset	x1, ne  // ne = any
  4298bc:	tbnz	x20, #63, 429934 <wcrtomb@plt+0x24d14>
  4298c0:	cbnz	x1, 429934 <wcrtomb@plt+0x24d14>
  4298c4:	mov	x1, x20
  4298c8:	b	429868 <wcrtomb@plt+0x24c48>
  4298cc:	cbz	x0, 42990c <wcrtomb@plt+0x24cec>
  4298d0:	mov	x2, #0x5555555555555555    	// #6148914691236517205
  4298d4:	movk	x2, #0x555, lsl #48
  4298d8:	cmp	x1, x2
  4298dc:	b.cs	429920 <wcrtomb@plt+0x24d00>  // b.hs, b.nlast
  4298e0:	add	x1, x21, x1, lsr #1
  4298e4:	str	x1, [x19, #296]
  4298e8:	lsl	x1, x1, #4
  4298ec:	bl	4501d0 <argp_parse@@Base+0x103f0>
  4298f0:	str	x0, [x19, #304]
  4298f4:	b	429894 <wcrtomb@plt+0x24c74>
  4298f8:	mov	x1, #0x80                  	// #128
  4298fc:	mov	x2, #0x8                   	// #8
  429900:	mov	x20, #0x0                   	// #0
  429904:	mov	x21, #0x1                   	// #1
  429908:	b	429868 <wcrtomb@plt+0x24c48>
  42990c:	cbz	x1, 429924 <wcrtomb@plt+0x24d04>
  429910:	cmp	xzr, x1, lsr #60
  429914:	cset	x2, ne  // ne = any
  429918:	tbnz	x20, #63, 429920 <wcrtomb@plt+0x24d00>
  42991c:	cbz	x2, 4298e4 <wcrtomb@plt+0x24cc4>
  429920:	bl	4104a0 <wcrtomb@plt+0xb880>
  429924:	mov	x1, #0x8                   	// #8
  429928:	mov	x20, #0x0                   	// #0
  42992c:	mov	x21, #0x1                   	// #1
  429930:	b	4298e4 <wcrtomb@plt+0x24cc4>
  429934:	stp	x25, x26, [sp, #64]
  429938:	bl	4104a0 <wcrtomb@plt+0xb880>
  42993c:	nop
  429940:	stp	x29, x30, [sp, #-64]!
  429944:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  429948:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42994c:	mov	x29, sp
  429950:	ldr	w1, [x1, #80]
  429954:	ldr	w3, [x2, #944]
  429958:	mov	x2, x0
  42995c:	cmp	w1, #0x0
  429960:	stp	xzr, xzr, [sp, #16]
  429964:	csel	w1, w3, w1, eq  // eq = none
  429968:	stp	xzr, xzr, [sp, #32]
  42996c:	cmp	w1, #0x5
  429970:	stp	xzr, xzr, [sp, #48]
  429974:	b.eq	4299e8 <wcrtomb@plt+0x24dc8>  // b.none
  429978:	b.hi	4299c0 <wcrtomb@plt+0x24da0>  // b.pmore
  42997c:	cmp	w1, #0x2
  429980:	b.eq	4299cc <wcrtomb@plt+0x24dac>  // b.none
  429984:	cmp	w1, #0x4
  429988:	mov	w0, #0x0                   	// #0
  42998c:	b.ne	4299b8 <wcrtomb@plt+0x24d98>  // b.any
  429990:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429994:	adrp	x1, 427000 <wcrtomb@plt+0x223e0>
  429998:	add	x0, x0, #0xd0
  42999c:	add	x1, x1, #0x5b8
  4299a0:	add	x0, x0, #0x248
  4299a4:	str	x0, [sp, #48]
  4299a8:	str	x2, [sp, #40]
  4299ac:	add	x0, sp, #0x10
  4299b0:	blr	x1
  4299b4:	and	w0, w0, #0xff
  4299b8:	ldp	x29, x30, [sp], #64
  4299bc:	ret
  4299c0:	cmp	w1, #0x6
  4299c4:	mov	w0, #0x0                   	// #0
  4299c8:	b.ne	4299b8 <wcrtomb@plt+0x24d98>  // b.any
  4299cc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4299d0:	add	x0, x0, #0xd0
  4299d4:	add	x0, x0, #0x200
  4299d8:	adrp	x1, 427000 <wcrtomb@plt+0x223e0>
  4299dc:	add	x1, x1, #0x5a0
  4299e0:	str	x0, [sp, #48]
  4299e4:	b	4299a8 <wcrtomb@plt+0x24d88>
  4299e8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4299ec:	add	x0, x0, #0xd0
  4299f0:	add	x0, x0, #0x290
  4299f4:	adrp	x1, 428000 <wcrtomb@plt+0x233e0>
  4299f8:	add	x1, x1, #0x6b8
  4299fc:	str	x0, [sp, #48]
  429a00:	b	4299a8 <wcrtomb@plt+0x24d88>
  429a04:	nop
  429a08:	stp	x29, x30, [sp, #-64]!
  429a0c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  429a10:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  429a14:	mov	x29, sp
  429a18:	ldr	w1, [x1, #80]
  429a1c:	ldr	w3, [x2, #944]
  429a20:	mov	x2, x0
  429a24:	cmp	w1, #0x0
  429a28:	stp	xzr, xzr, [sp, #16]
  429a2c:	csel	w1, w3, w1, eq  // eq = none
  429a30:	stp	xzr, xzr, [sp, #32]
  429a34:	cmp	w1, #0x5
  429a38:	stp	xzr, xzr, [sp, #48]
  429a3c:	b.eq	429a98 <wcrtomb@plt+0x24e78>  // b.none
  429a40:	b.hi	429a5c <wcrtomb@plt+0x24e3c>  // b.pmore
  429a44:	cmp	w1, #0x2
  429a48:	b.eq	429a68 <wcrtomb@plt+0x24e48>  // b.none
  429a4c:	cmp	w1, #0x4
  429a50:	cset	w0, eq  // eq = none
  429a54:	ldp	x29, x30, [sp], #64
  429a58:	ret
  429a5c:	cmp	w1, #0x6
  429a60:	mov	w0, #0x0                   	// #0
  429a64:	b.ne	429a54 <wcrtomb@plt+0x24e34>  // b.any
  429a68:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429a6c:	add	x0, x0, #0xd0
  429a70:	add	x0, x0, #0x200
  429a74:	str	x2, [sp, #40]
  429a78:	str	x0, [sp, #48]
  429a7c:	adrp	x1, 427000 <wcrtomb@plt+0x223e0>
  429a80:	add	x0, sp, #0x10
  429a84:	add	x1, x1, #0x630
  429a88:	blr	x1
  429a8c:	and	w0, w0, #0xff
  429a90:	ldp	x29, x30, [sp], #64
  429a94:	ret
  429a98:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429a9c:	add	x0, x0, #0xd0
  429aa0:	add	x0, x0, #0x290
  429aa4:	str	x2, [sp, #40]
  429aa8:	str	x0, [sp, #48]
  429aac:	adrp	x1, 427000 <wcrtomb@plt+0x223e0>
  429ab0:	add	x0, sp, #0x10
  429ab4:	add	x1, x1, #0x5e0
  429ab8:	blr	x1
  429abc:	and	w0, w0, #0xff
  429ac0:	b	429a90 <wcrtomb@plt+0x24e70>
  429ac4:	nop
  429ac8:	stp	x29, x30, [sp, #-80]!
  429acc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  429ad0:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  429ad4:	mov	x29, sp
  429ad8:	ldr	w3, [x3, #80]
  429adc:	mov	x5, x1
  429ae0:	ldr	w4, [x4, #944]
  429ae4:	cmp	w3, #0x0
  429ae8:	stp	x19, x20, [sp, #16]
  429aec:	csel	w3, w4, w3, eq  // eq = none
  429af0:	stp	xzr, xzr, [sp, #32]
  429af4:	mov	w4, w0
  429af8:	mov	x20, x2
  429afc:	stp	xzr, xzr, [sp, #48]
  429b00:	cmp	w3, #0x5
  429b04:	stp	xzr, xzr, [sp, #64]
  429b08:	b.eq	429c68 <wcrtomb@plt+0x25048>  // b.none
  429b0c:	b.hi	429c08 <wcrtomb@plt+0x24fe8>  // b.pmore
  429b10:	cmp	w3, #0x2
  429b14:	b.eq	429c14 <wcrtomb@plt+0x24ff4>  // b.none
  429b18:	cmp	w3, #0x4
  429b1c:	mov	w0, #0x3                   	// #3
  429b20:	b.ne	429bfc <wcrtomb@plt+0x24fdc>  // b.any
  429b24:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429b28:	add	x0, x0, #0xd0
  429b2c:	add	x0, x0, #0x248
  429b30:	str	x0, [sp, #64]
  429b34:	mov	x1, #0x0                   	// #0
  429b38:	mov	w0, w4
  429b3c:	mov	w2, #0x0                   	// #0
  429b40:	str	w4, [sp, #32]
  429b44:	str	x5, [sp, #56]
  429b48:	bl	4041d0 <lseek@plt>
  429b4c:	ldr	x5, [sp, #64]
  429b50:	cmp	x0, #0x0
  429b54:	cset	w0, eq  // eq = none
  429b58:	strb	w0, [sp, #36]
  429b5c:	str	xzr, [sp, #40]
  429b60:	ldr	x1, [x5, #40]
  429b64:	cbz	x1, 429b7c <wcrtomb@plt+0x24f5c>
  429b68:	add	x0, sp, #0x20
  429b6c:	blr	x1
  429b70:	tst	w0, #0xff
  429b74:	b.eq	429c28 <wcrtomb@plt+0x25008>  // b.none
  429b78:	ldr	x5, [sp, #64]
  429b7c:	mov	x19, #0x0                   	// #0
  429b80:	ldr	x4, [sp, #56]
  429b84:	mov	x1, x19
  429b88:	add	x0, sp, #0x20
  429b8c:	ldr	x3, [x4, #288]
  429b90:	cmp	x3, x19
  429b94:	b.ls	429bcc <wcrtomb@plt+0x24fac>  // b.plast
  429b98:	ldr	x3, [x5, #64]
  429b9c:	add	x19, x19, #0x1
  429ba0:	cbz	x3, 429c30 <wcrtomb@plt+0x25010>
  429ba4:	blr	x3
  429ba8:	tst	w0, #0xff
  429bac:	b.eq	429c28 <wcrtomb@plt+0x25008>  // b.none
  429bb0:	ldr	x4, [sp, #56]
  429bb4:	mov	x1, x19
  429bb8:	add	x0, sp, #0x20
  429bbc:	ldr	x5, [sp, #64]
  429bc0:	ldr	x3, [x4, #288]
  429bc4:	cmp	x3, x19
  429bc8:	b.hi	429b98 <wcrtomb@plt+0x24f78>  // b.pmore
  429bcc:	ldr	x2, [sp, #48]
  429bd0:	ldr	x0, [x4, #264]
  429bd4:	ldr	x1, [x5, #8]
  429bd8:	sub	x0, x0, x2
  429bdc:	str	x0, [x20]
  429be0:	cbz	x1, 429c7c <wcrtomb@plt+0x2505c>
  429be4:	add	x0, sp, #0x20
  429be8:	blr	x1
  429bec:	tst	w0, #0xff
  429bf0:	mov	w19, #0x1                   	// #1
  429bf4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  429bf8:	cset	w0, eq  // eq = none
  429bfc:	ldp	x19, x20, [sp, #16]
  429c00:	ldp	x29, x30, [sp], #80
  429c04:	ret
  429c08:	cmp	w3, #0x6
  429c0c:	mov	w0, #0x3                   	// #3
  429c10:	b.ne	429bfc <wcrtomb@plt+0x24fdc>  // b.any
  429c14:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429c18:	add	x0, x0, #0xd0
  429c1c:	add	x0, x0, #0x200
  429c20:	str	x0, [sp, #64]
  429c24:	b	429b34 <wcrtomb@plt+0x24f14>
  429c28:	ldp	x4, x5, [sp, #56]
  429c2c:	nop
  429c30:	mov	w19, #0x0                   	// #0
  429c34:	ldr	x2, [sp, #48]
  429c38:	ldr	x0, [x4, #264]
  429c3c:	ldr	x1, [x5, #8]
  429c40:	sub	x0, x0, x2
  429c44:	str	x0, [x20]
  429c48:	mov	w0, #0x1                   	// #1
  429c4c:	cbz	x1, 429bfc <wcrtomb@plt+0x24fdc>
  429c50:	add	x0, sp, #0x20
  429c54:	blr	x1
  429c58:	tst	w0, #0xff
  429c5c:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  429c60:	cset	w0, eq  // eq = none
  429c64:	b	429bfc <wcrtomb@plt+0x24fdc>
  429c68:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429c6c:	add	x0, x0, #0xd0
  429c70:	add	x0, x0, #0x290
  429c74:	str	x0, [sp, #64]
  429c78:	b	429b34 <wcrtomb@plt+0x24f14>
  429c7c:	mov	w0, #0x0                   	// #0
  429c80:	b	429bfc <wcrtomb@plt+0x24fdc>
  429c84:	nop
  429c88:	stp	x29, x30, [sp, #-80]!
  429c8c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  429c90:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  429c94:	mov	x29, sp
  429c98:	ldr	w1, [x1, #80]
  429c9c:	ldr	w3, [x2, #944]
  429ca0:	mov	x2, x0
  429ca4:	cmp	w1, #0x0
  429ca8:	stp	xzr, xzr, [sp, #32]
  429cac:	csel	w1, w3, w1, eq  // eq = none
  429cb0:	stp	xzr, xzr, [sp, #48]
  429cb4:	cmp	w1, #0x5
  429cb8:	stp	xzr, xzr, [sp, #64]
  429cbc:	b.eq	429d88 <wcrtomb@plt+0x25168>  // b.none
  429cc0:	b.hi	429d4c <wcrtomb@plt+0x2512c>  // b.pmore
  429cc4:	cmp	w1, #0x2
  429cc8:	b.eq	429d58 <wcrtomb@plt+0x25138>  // b.none
  429ccc:	cmp	w1, #0x4
  429cd0:	mov	w0, #0x3                   	// #3
  429cd4:	b.ne	429d44 <wcrtomb@plt+0x25124>  // b.any
  429cd8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429cdc:	adrp	x1, 429000 <wcrtomb@plt+0x243e0>
  429ce0:	add	x0, x0, #0xd0
  429ce4:	add	x1, x1, #0x40
  429ce8:	add	x0, x0, #0x248
  429cec:	str	x19, [sp, #16]
  429cf0:	str	x0, [sp, #64]
  429cf4:	mov	w0, #0xffffffff            	// #-1
  429cf8:	str	w0, [sp, #32]
  429cfc:	str	x2, [sp, #56]
  429d00:	add	x0, sp, #0x20
  429d04:	blr	x1
  429d08:	and	w19, w0, #0xff
  429d0c:	ldp	x0, x1, [sp, #48]
  429d10:	ldr	x1, [x1, #264]
  429d14:	sub	x0, x1, x0
  429d18:	bl	41d860 <wcrtomb@plt+0x18c40>
  429d1c:	ldr	x0, [sp, #64]
  429d20:	ldr	x1, [x0, #8]
  429d24:	cbz	x1, 429d78 <wcrtomb@plt+0x25158>
  429d28:	add	x0, sp, #0x20
  429d2c:	blr	x1
  429d30:	mov	w1, w0
  429d34:	mov	w0, #0x1                   	// #1
  429d38:	tst	w1, #0xff
  429d3c:	b.ne	429d78 <wcrtomb@plt+0x25158>  // b.any
  429d40:	ldr	x19, [sp, #16]
  429d44:	ldp	x29, x30, [sp], #80
  429d48:	ret
  429d4c:	cmp	w1, #0x6
  429d50:	mov	w0, #0x3                   	// #3
  429d54:	b.ne	429d44 <wcrtomb@plt+0x25124>  // b.any
  429d58:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429d5c:	add	x0, x0, #0xd0
  429d60:	add	x0, x0, #0x200
  429d64:	adrp	x1, 428000 <wcrtomb@plt+0x233e0>
  429d68:	add	x1, x1, #0xd18
  429d6c:	str	x19, [sp, #16]
  429d70:	str	x0, [sp, #64]
  429d74:	b	429cf4 <wcrtomb@plt+0x250d4>
  429d78:	eor	w0, w19, #0x1
  429d7c:	ldr	x19, [sp, #16]
  429d80:	ldp	x29, x30, [sp], #80
  429d84:	ret
  429d88:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429d8c:	add	x0, x0, #0xd0
  429d90:	add	x0, x0, #0x290
  429d94:	adrp	x1, 428000 <wcrtomb@plt+0x233e0>
  429d98:	add	x1, x1, #0x6d0
  429d9c:	str	x19, [sp, #16]
  429da0:	str	x0, [sp, #64]
  429da4:	b	429cf4 <wcrtomb@plt+0x250d4>
  429da8:	stp	x29, x30, [sp, #-96]!
  429dac:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  429db0:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  429db4:	mov	x29, sp
  429db8:	ldr	w2, [x2, #80]
  429dbc:	ldr	w3, [x3, #944]
  429dc0:	cmp	w2, #0x0
  429dc4:	stp	x19, x20, [sp, #16]
  429dc8:	csel	w2, w3, w2, eq  // eq = none
  429dcc:	str	x21, [sp, #32]
  429dd0:	mov	x19, x1
  429dd4:	stp	xzr, xzr, [sp, #48]
  429dd8:	cmp	w2, #0x5
  429ddc:	stp	xzr, xzr, [sp, #64]
  429de0:	stp	xzr, xzr, [sp, #80]
  429de4:	b.eq	429f1c <wcrtomb@plt+0x252fc>  // b.none
  429de8:	b.hi	429ef4 <wcrtomb@plt+0x252d4>  // b.pmore
  429dec:	cmp	w2, #0x2
  429df0:	b.eq	429f00 <wcrtomb@plt+0x252e0>  // b.none
  429df4:	cmp	w2, #0x4
  429df8:	mov	w21, #0x1                   	// #1
  429dfc:	b.ne	429ea8 <wcrtomb@plt+0x25288>  // b.any
  429e00:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429e04:	adrp	x1, 429000 <wcrtomb@plt+0x243e0>
  429e08:	add	x2, x2, #0xd0
  429e0c:	add	x1, x1, #0x40
  429e10:	add	x2, x2, #0x248
  429e14:	str	x2, [sp, #80]
  429e18:	mov	w2, #0x1                   	// #1
  429e1c:	str	w0, [sp, #48]
  429e20:	strb	w2, [sp, #52]
  429e24:	add	x0, sp, #0x30
  429e28:	str	x19, [sp, #72]
  429e2c:	blr	x1
  429e30:	and	w21, w0, #0xff
  429e34:	mov	x0, x19
  429e38:	bl	405618 <wcrtomb@plt+0x9f8>
  429e3c:	cbz	w21, 429e78 <wcrtomb@plt+0x25258>
  429e40:	ldr	x2, [sp, #72]
  429e44:	mov	x1, #0x0                   	// #0
  429e48:	mov	x19, #0x0                   	// #0
  429e4c:	nop
  429e50:	ldr	x3, [x2, #288]
  429e54:	lsl	x20, x19, #4
  429e58:	add	x0, sp, #0x30
  429e5c:	cmp	x3, x19
  429e60:	b.ls	429e90 <wcrtomb@plt+0x25270>  // b.plast
  429e64:	ldr	x2, [x2, #304]
  429e68:	ldr	x2, [x2, x20]
  429e6c:	bl	427af8 <wcrtomb@plt+0x22ed8>
  429e70:	tst	w0, #0xff
  429e74:	b.ne	429ebc <wcrtomb@plt+0x2529c>  // b.any
  429e78:	ldr	x3, [sp, #72]
  429e7c:	mov	w21, #0x0                   	// #0
  429e80:	ldr	x1, [x3, #264]
  429e84:	ldr	x0, [sp, #64]
  429e88:	sub	x0, x1, x0
  429e8c:	bl	41d860 <wcrtomb@plt+0x18c40>
  429e90:	bl	4056c0 <wcrtomb@plt+0xaa0>
  429e94:	ldr	x0, [sp, #80]
  429e98:	ldr	x1, [x0, #8]
  429e9c:	cbz	x1, 429ea8 <wcrtomb@plt+0x25288>
  429ea0:	add	x0, sp, #0x30
  429ea4:	blr	x1
  429ea8:	mov	w0, w21
  429eac:	ldp	x19, x20, [sp, #16]
  429eb0:	ldr	x21, [sp, #32]
  429eb4:	ldp	x29, x30, [sp], #96
  429eb8:	ret
  429ebc:	mov	x1, x19
  429ec0:	add	x0, sp, #0x30
  429ec4:	bl	427c48 <wcrtomb@plt+0x23028>
  429ec8:	tst	w0, #0xff
  429ecc:	ldr	x2, [sp, #72]
  429ed0:	add	x19, x19, #0x1
  429ed4:	mov	x3, x2
  429ed8:	ldr	x1, [x2, #304]
  429edc:	add	x0, x1, x20
  429ee0:	ldr	x1, [x1, x20]
  429ee4:	ldr	x0, [x0, #8]
  429ee8:	add	x1, x1, x0
  429eec:	b.ne	429e50 <wcrtomb@plt+0x25230>  // b.any
  429ef0:	b	429e7c <wcrtomb@plt+0x2525c>
  429ef4:	cmp	w2, #0x6
  429ef8:	mov	w21, #0x1                   	// #1
  429efc:	b.ne	429ea8 <wcrtomb@plt+0x25288>  // b.any
  429f00:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429f04:	add	x2, x2, #0xd0
  429f08:	add	x2, x2, #0x200
  429f0c:	adrp	x1, 428000 <wcrtomb@plt+0x233e0>
  429f10:	add	x1, x1, #0xd18
  429f14:	str	x2, [sp, #80]
  429f18:	b	429e18 <wcrtomb@plt+0x251f8>
  429f1c:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  429f20:	add	x2, x2, #0xd0
  429f24:	add	x2, x2, #0x290
  429f28:	adrp	x1, 428000 <wcrtomb@plt+0x233e0>
  429f2c:	add	x1, x1, #0x6d0
  429f30:	str	x2, [sp, #80]
  429f34:	b	429e18 <wcrtomb@plt+0x251f8>
  429f38:	stp	x29, x30, [sp, #-48]!
  429f3c:	mov	x29, sp
  429f40:	stp	x21, x22, [sp, #32]
  429f44:	mov	x21, x1
  429f48:	mov	w1, #0x2e                  	// #46
  429f4c:	bl	4045d0 <strrchr@plt>
  429f50:	cbz	x0, 429fa8 <wcrtomb@plt+0x25388>
  429f54:	stp	x19, x20, [sp, #16]
  429f58:	add	x19, x0, #0x1
  429f5c:	mov	x0, x19
  429f60:	bl	403ff0 <strlen@plt>
  429f64:	mov	x22, x0
  429f68:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  429f6c:	add	x20, x1, #0xfb0
  429f70:	ldr	x0, [x1, #4016]
  429f74:	cbnz	x0, 429f84 <wcrtomb@plt+0x25364>
  429f78:	b	429fc0 <wcrtomb@plt+0x253a0>
  429f7c:	ldr	x0, [x20, #24]!
  429f80:	cbz	x0, 429fc0 <wcrtomb@plt+0x253a0>
  429f84:	ldr	x1, [x20, #8]
  429f88:	cmp	x22, x1
  429f8c:	b.ne	429f7c <wcrtomb@plt+0x2535c>  // b.any
  429f90:	mov	x2, x22
  429f94:	mov	x1, x19
  429f98:	bl	4046d0 <memcmp@plt>
  429f9c:	cbnz	w0, 429f7c <wcrtomb@plt+0x2535c>
  429fa0:	ldr	x21, [x20, #16]
  429fa4:	ldp	x19, x20, [sp, #16]
  429fa8:	cbz	x21, 429fb4 <wcrtomb@plt+0x25394>
  429fac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  429fb0:	str	x21, [x0, #1032]
  429fb4:	ldp	x21, x22, [sp, #32]
  429fb8:	ldp	x29, x30, [sp], #48
  429fbc:	ret
  429fc0:	ldp	x19, x20, [sp, #16]
  429fc4:	b	429fa8 <wcrtomb@plt+0x25388>
  429fc8:	stp	x29, x30, [sp, #-64]!
  429fcc:	mov	w1, #0x2e                  	// #46
  429fd0:	mov	x29, sp
  429fd4:	stp	x19, x20, [sp, #16]
  429fd8:	stp	x21, x22, [sp, #32]
  429fdc:	mov	x22, x0
  429fe0:	bl	4045d0 <strrchr@plt>
  429fe4:	mov	x19, x0
  429fe8:	cbz	x0, 42a09c <wcrtomb@plt+0x2547c>
  429fec:	str	x23, [sp, #48]
  429ff0:	add	x23, x0, #0x1
  429ff4:	mov	x0, x23
  429ff8:	bl	403ff0 <strlen@plt>
  429ffc:	adrp	x1, 493000 <_obstack_memory_used@@Base+0x41bf0>
  42a000:	mov	x20, x0
  42a004:	add	x21, x1, #0xfb0
  42a008:	ldr	x19, [x1, #4016]
  42a00c:	cbnz	x19, 42a01c <wcrtomb@plt+0x253fc>
  42a010:	b	42a0b8 <wcrtomb@plt+0x25498>
  42a014:	ldr	x19, [x21, #24]!
  42a018:	cbz	x19, 42a0b8 <wcrtomb@plt+0x25498>
  42a01c:	ldr	x0, [x21, #8]
  42a020:	cmp	x20, x0
  42a024:	b.ne	42a014 <wcrtomb@plt+0x253f4>  // b.any
  42a028:	mov	x2, x20
  42a02c:	mov	x1, x23
  42a030:	mov	x0, x19
  42a034:	bl	4046d0 <memcmp@plt>
  42a038:	cbnz	w0, 42a014 <wcrtomb@plt+0x253f4>
  42a03c:	mvn	x20, x20
  42a040:	mov	x0, x22
  42a044:	bl	403ff0 <strlen@plt>
  42a048:	add	x20, x20, x0
  42a04c:	cmp	x20, #0x4
  42a050:	b.ls	42a0b0 <wcrtomb@plt+0x25490>  // b.plast
  42a054:	sub	x21, x20, #0x4
  42a058:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a05c:	add	x0, x22, x21
  42a060:	add	x1, x1, #0x3a8
  42a064:	mov	x2, #0x4                   	// #4
  42a068:	bl	4043c0 <strncmp@plt>
  42a06c:	cbnz	w0, 42a07c <wcrtomb@plt+0x2545c>
  42a070:	ldrb	w0, [x19]
  42a074:	cmp	w0, #0x74
  42a078:	csel	x20, x20, x21, eq  // eq = none
  42a07c:	add	x0, x20, #0x1
  42a080:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42a084:	mov	x19, x0
  42a088:	mov	x1, x22
  42a08c:	mov	x2, x20
  42a090:	bl	403f70 <memcpy@plt>
  42a094:	strb	wzr, [x19, x20]
  42a098:	ldr	x23, [sp, #48]
  42a09c:	mov	x0, x19
  42a0a0:	ldp	x19, x20, [sp, #16]
  42a0a4:	ldp	x21, x22, [sp, #32]
  42a0a8:	ldp	x29, x30, [sp], #64
  42a0ac:	ret
  42a0b0:	mov	x19, #0x0                   	// #0
  42a0b4:	cbnz	x20, 42a07c <wcrtomb@plt+0x2545c>
  42a0b8:	mov	x0, x19
  42a0bc:	ldp	x19, x20, [sp, #16]
  42a0c0:	ldp	x21, x22, [sp, #32]
  42a0c4:	ldr	x23, [sp, #48]
  42a0c8:	ldp	x29, x30, [sp], #64
  42a0cc:	ret
  42a0d0:	stp	x29, x30, [sp, #-64]!
  42a0d4:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a0d8:	adrp	x3, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a0dc:	add	x2, x2, #0x430
  42a0e0:	add	x3, x3, #0x438
  42a0e4:	add	x1, sp, #0x20
  42a0e8:	mov	x29, sp
  42a0ec:	str	x19, [sp, #16]
  42a0f0:	mov	x19, x0
  42a0f4:	mov	x0, x2
  42a0f8:	stp	x2, x3, [sp, #32]
  42a0fc:	str	x19, [sp, #48]
  42a100:	str	xzr, [sp, #56]
  42a104:	bl	4044f0 <execv@plt>
  42a108:	mov	x0, x19
  42a10c:	bl	4338b8 <wcrtomb@plt+0x2ec98>
  42a110:	stp	x29, x30, [sp, #-48]!
  42a114:	mov	x29, sp
  42a118:	str	x19, [sp, #16]
  42a11c:	mov	w19, w0
  42a120:	b	42a134 <wcrtomb@plt+0x25514>
  42a124:	bl	404ad0 <__errno_location@plt>
  42a128:	ldr	w1, [x0]
  42a12c:	cmp	w1, #0x4
  42a130:	b.ne	42a17c <wcrtomb@plt+0x2555c>  // b.any
  42a134:	add	x1, sp, #0x2c
  42a138:	mov	w0, w19
  42a13c:	mov	w2, #0x0                   	// #0
  42a140:	bl	404b60 <waitpid@plt>
  42a144:	cmn	w0, #0x1
  42a148:	b.eq	42a124 <wcrtomb@plt+0x25504>  // b.none
  42a14c:	ldr	w1, [sp, #44]
  42a150:	and	w3, w1, #0x7f
  42a154:	add	w2, w3, #0x1
  42a158:	ubfx	x0, x1, #8, #8
  42a15c:	sbfx	x1, x2, #1, #7
  42a160:	cmp	w1, #0x0
  42a164:	b.gt	42a16c <wcrtomb@plt+0x2554c>
  42a168:	bl	404020 <exit@plt>
  42a16c:	mov	w0, w3
  42a170:	bl	404030 <raise@plt>
  42a174:	mov	w0, #0x0                   	// #0
  42a178:	bl	404020 <exit@plt>
  42a17c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a180:	ldr	x0, [x0, #1032]
  42a184:	bl	434710 <wcrtomb@plt+0x2faf0>
  42a188:	b	42a14c <wcrtomb@plt+0x2552c>
  42a18c:	nop
  42a190:	stp	x29, x30, [sp, #-320]!
  42a194:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42a198:	mov	x2, #0x1                   	// #1
  42a19c:	mov	x29, sp
  42a1a0:	ldr	x1, [x1, #1200]
  42a1a4:	add	x0, sp, #0x54
  42a1a8:	stp	x19, x20, [sp, #16]
  42a1ac:	stp	x21, x22, [sp, #32]
  42a1b0:	stp	x23, x24, [sp, #48]
  42a1b4:	str	x25, [sp, #64]
  42a1b8:	str	x2, [sp, #104]
  42a1bc:	str	x1, [sp, #200]
  42a1c0:	bl	405800 <wcrtomb@plt+0xbe0>
  42a1c4:	cbz	x0, 42a320 <wcrtomb@plt+0x25700>
  42a1c8:	mov	w2, #0xe06                 	// #3590
  42a1cc:	mov	w23, #0xe0e                 	// #3598
  42a1d0:	adrp	x22, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a1d4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42a1d8:	mov	x20, x0
  42a1dc:	add	x22, x22, #0x460
  42a1e0:	add	x21, x21, #0x1b0
  42a1e4:	movk	w2, #0x208, lsl #16
  42a1e8:	movk	w23, #0x208, lsl #16
  42a1ec:	b	42a2bc <wcrtomb@plt+0x2569c>
  42a1f0:	ldp	x2, x0, [sp, #88]
  42a1f4:	ldr	x1, [sp, #104]
  42a1f8:	lsl	x2, x2, #3
  42a1fc:	add	x1, x0, x1, lsl #3
  42a200:	bl	403f80 <memmove@plt>
  42a204:	ldp	x0, x1, [sp, #88]
  42a208:	str	x22, [x1, x0, lsl #3]
  42a20c:	ldr	x0, [x1]
  42a210:	bl	4046f0 <execvp@plt>
  42a214:	ldp	x2, x1, [sp, #88]
  42a218:	add	x0, sp, #0x54
  42a21c:	str	xzr, [x1, x2, lsl #3]
  42a220:	bl	405a18 <wcrtomb@plt+0xdf8>
  42a224:	mov	x19, x0
  42a228:	cbz	x0, 42a318 <wcrtomb@plt+0x256f8>
  42a22c:	ldr	w0, [x21]
  42a230:	tbz	w0, #19, 42a2b4 <wcrtomb@plt+0x25694>
  42a234:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a238:	ldr	x0, [x24, #1136]
  42a23c:	cbz	x0, 42a244 <wcrtomb@plt+0x25624>
  42a240:	blr	x0
  42a244:	bl	404ad0 <__errno_location@plt>
  42a248:	mov	x3, x0
  42a24c:	mov	w2, #0x5                   	// #5
  42a250:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a254:	mov	x0, #0x0                   	// #0
  42a258:	add	x1, x1, #0x440
  42a25c:	ldr	w25, [x3]
  42a260:	bl	4049c0 <dcgettext@plt>
  42a264:	mov	x3, x20
  42a268:	mov	x2, x0
  42a26c:	mov	w1, w25
  42a270:	mov	w0, #0x0                   	// #0
  42a274:	bl	404050 <error@plt>
  42a278:	ldr	w0, [x21]
  42a27c:	tbz	w0, #19, 42a2b4 <wcrtomb@plt+0x25694>
  42a280:	ldr	x0, [x24, #1136]
  42a284:	cbz	x0, 42a28c <wcrtomb@plt+0x2566c>
  42a288:	blr	x0
  42a28c:	mov	w2, #0x5                   	// #5
  42a290:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a294:	mov	x0, #0x0                   	// #0
  42a298:	add	x1, x1, #0x450
  42a29c:	bl	4049c0 <dcgettext@plt>
  42a2a0:	mov	x2, x0
  42a2a4:	mov	x3, x19
  42a2a8:	mov	w1, #0x0                   	// #0
  42a2ac:	mov	w0, #0x0                   	// #0
  42a2b0:	bl	404050 <error@plt>
  42a2b4:	mov	x20, x19
  42a2b8:	mov	w2, w23
  42a2bc:	add	x1, sp, #0x58
  42a2c0:	mov	x0, x20
  42a2c4:	bl	438ea0 <wcrtomb@plt+0x34280>
  42a2c8:	cbz	w0, 42a1f0 <wcrtomb@plt+0x255d0>
  42a2cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a2d0:	ldr	x0, [x0, #1136]
  42a2d4:	cbz	x0, 42a2dc <wcrtomb@plt+0x256bc>
  42a2d8:	blr	x0
  42a2dc:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42a2e0:	add	x1, x1, #0x2c8
  42a2e4:	mov	w2, #0x5                   	// #5
  42a2e8:	mov	x0, #0x0                   	// #0
  42a2ec:	bl	4049c0 <dcgettext@plt>
  42a2f0:	mov	x19, x0
  42a2f4:	add	x0, sp, #0x58
  42a2f8:	bl	43a9b0 <wcrtomb@plt+0x35d90>
  42a2fc:	mov	x3, x20
  42a300:	mov	x4, x0
  42a304:	mov	x2, x19
  42a308:	mov	w1, #0x0                   	// #0
  42a30c:	mov	w0, #0x0                   	// #0
  42a310:	bl	404050 <error@plt>
  42a314:	bl	410460 <wcrtomb@plt+0xb840>
  42a318:	mov	x0, x20
  42a31c:	bl	4338b8 <wcrtomb@plt+0x2ec98>
  42a320:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a324:	ldr	x0, [x0, #1136]
  42a328:	cbz	x0, 42a330 <wcrtomb@plt+0x25710>
  42a32c:	blr	x0
  42a330:	mov	w2, #0x5                   	// #5
  42a334:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a338:	mov	x0, #0x0                   	// #0
  42a33c:	add	x1, x1, #0x468
  42a340:	bl	4049c0 <dcgettext@plt>
  42a344:	mov	x2, x0
  42a348:	mov	w1, #0x0                   	// #0
  42a34c:	mov	w0, #0x0                   	// #0
  42a350:	bl	404050 <error@plt>
  42a354:	bl	410460 <wcrtomb@plt+0xb840>
  42a358:	stp	x29, x30, [sp, #-144]!
  42a35c:	mov	x1, x0
  42a360:	mov	w0, #0x0                   	// #0
  42a364:	mov	x29, sp
  42a368:	add	x2, sp, #0x10
  42a36c:	bl	404b10 <__xstat@plt>
  42a370:	cbnz	w0, 42a38c <wcrtomb@plt+0x2576c>
  42a374:	ldr	w0, [sp, #32]
  42a378:	ldp	x29, x30, [sp], #144
  42a37c:	and	w0, w0, #0xf000
  42a380:	cmp	w0, #0x8, lsl #12
  42a384:	cset	w0, eq  // eq = none
  42a388:	ret
  42a38c:	bl	404ad0 <__errno_location@plt>
  42a390:	ldr	w0, [x0]
  42a394:	ldp	x29, x30, [sp], #144
  42a398:	cmp	w0, #0x2
  42a39c:	cset	w0, eq  // eq = none
  42a3a0:	ret
  42a3a4:	nop
  42a3a8:	cmp	w0, w1
  42a3ac:	b.ne	42a3b4 <wcrtomb@plt+0x25794>  // b.any
  42a3b0:	ret
  42a3b4:	stp	x29, x30, [sp, #-48]!
  42a3b8:	mov	x29, sp
  42a3bc:	stp	x19, x20, [sp, #16]
  42a3c0:	mov	w19, w0
  42a3c4:	mov	w20, w1
  42a3c8:	mov	w0, w1
  42a3cc:	bl	4045c0 <close@plt>
  42a3d0:	cbz	w0, 42a3ec <wcrtomb@plt+0x257cc>
  42a3d4:	str	x21, [sp, #32]
  42a3d8:	bl	404ad0 <__errno_location@plt>
  42a3dc:	ldr	w21, [x0]
  42a3e0:	cmp	w21, #0x9
  42a3e4:	b.ne	42a454 <wcrtomb@plt+0x25834>  // b.any
  42a3e8:	ldr	x21, [sp, #32]
  42a3ec:	mov	w0, w19
  42a3f0:	bl	404040 <dup@plt>
  42a3f4:	cmp	w20, w0
  42a3f8:	b.ne	42a40c <wcrtomb@plt+0x257ec>  // b.any
  42a3fc:	mov	w0, w19
  42a400:	ldp	x19, x20, [sp, #16]
  42a404:	ldp	x29, x30, [sp], #48
  42a408:	b	406138 <wcrtomb@plt+0x1518>
  42a40c:	str	x21, [sp, #32]
  42a410:	tbz	w0, #31, 42a48c <wcrtomb@plt+0x2586c>
  42a414:	bl	404ad0 <__errno_location@plt>
  42a418:	ldr	w19, [x0]
  42a41c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a420:	ldr	x1, [x1, #1136]
  42a424:	cbz	x1, 42a42c <wcrtomb@plt+0x2580c>
  42a428:	blr	x1
  42a42c:	mov	w2, #0x5                   	// #5
  42a430:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a434:	mov	x0, #0x0                   	// #0
  42a438:	add	x1, x1, #0x4a0
  42a43c:	bl	4049c0 <dcgettext@plt>
  42a440:	mov	x2, x0
  42a444:	mov	w1, w19
  42a448:	mov	w0, #0x0                   	// #0
  42a44c:	bl	404050 <error@plt>
  42a450:	bl	410460 <wcrtomb@plt+0xb840>
  42a454:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a458:	ldr	x0, [x0, #1136]
  42a45c:	cbz	x0, 42a464 <wcrtomb@plt+0x25844>
  42a460:	blr	x0
  42a464:	mov	w2, #0x5                   	// #5
  42a468:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a46c:	mov	x0, #0x0                   	// #0
  42a470:	add	x1, x1, #0x490
  42a474:	bl	4049c0 <dcgettext@plt>
  42a478:	mov	x2, x0
  42a47c:	mov	w1, w21
  42a480:	mov	w0, #0x0                   	// #0
  42a484:	bl	404050 <error@plt>
  42a488:	bl	410460 <wcrtomb@plt+0xb840>
  42a48c:	bl	404650 <abort@plt>
  42a490:	stp	x29, x30, [sp, #-16]!
  42a494:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a498:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42a49c:	mov	x29, sp
  42a4a0:	ldr	w1, [x1, #1104]
  42a4a4:	add	x2, x2, #0xbb0
  42a4a8:	mov	w0, #0x0                   	// #0
  42a4ac:	bl	4049a0 <__fxstat@plt>
  42a4b0:	cmp	w0, #0x0
  42a4b4:	cset	w0, eq  // eq = none
  42a4b8:	ldp	x29, x30, [sp], #16
  42a4bc:	ret
  42a4c0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a4c4:	mov	w2, #0x0                   	// #0
  42a4c8:	ldr	x1, [x1, #672]
  42a4cc:	cbz	x1, 42a4e0 <wcrtomb@plt+0x258c0>
  42a4d0:	ldr	x3, [x0, #88]
  42a4d4:	mov	w2, #0x0                   	// #0
  42a4d8:	cmp	x1, x3
  42a4dc:	b.eq	42a4e8 <wcrtomb@plt+0x258c8>  // b.none
  42a4e0:	mov	w0, w2
  42a4e4:	ret
  42a4e8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a4ec:	ldr	x1, [x0, #96]
  42a4f0:	ldr	x0, [x2, #1016]
  42a4f4:	cmp	x1, x0
  42a4f8:	cset	w2, eq  // eq = none
  42a4fc:	mov	w0, w2
  42a500:	ret
  42a504:	nop
  42a508:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a50c:	mov	w1, #0x3fffffff            	// #1073741823
  42a510:	mov	x0, #0x0                   	// #0
  42a514:	ldr	w2, [x2, #1104]
  42a518:	cmp	w2, w1
  42a51c:	b.gt	42a538 <wcrtomb@plt+0x25918>
  42a520:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42a524:	add	x2, x3, #0xbb0
  42a528:	ldr	w1, [x2, #16]
  42a52c:	and	w1, w1, #0xf000
  42a530:	cmp	w1, #0x8, lsl #12
  42a534:	b.eq	42a544 <wcrtomb@plt+0x25924>  // b.none
  42a538:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a53c:	str	x0, [x1, #672]
  42a540:	ret
  42a544:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a548:	ldr	x2, [x2, #8]
  42a54c:	str	x2, [x1, #1016]
  42a550:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a554:	ldr	x0, [x3, #2992]
  42a558:	str	x0, [x1, #672]
  42a55c:	ret
  42a560:	stp	x29, x30, [sp, #-176]!
  42a564:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a568:	mov	x29, sp
  42a56c:	ldr	x0, [x0, #816]
  42a570:	stp	x19, x20, [sp, #16]
  42a574:	adrp	x19, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a578:	add	x19, x19, #0x708
  42a57c:	ldr	x0, [x0]
  42a580:	mov	x1, x19
  42a584:	bl	404710 <strcmp@plt>
  42a588:	mov	w1, #0x1                   	// #1
  42a58c:	cbz	w0, 42a5c8 <wcrtomb@plt+0x259a8>
  42a590:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a594:	mov	w0, #0x3fffffff            	// #1073741823
  42a598:	ldr	w1, [x1, #1104]
  42a59c:	cmp	w1, w0
  42a5a0:	b.gt	42a5c4 <wcrtomb@plt+0x259a4>
  42a5a4:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42a5a8:	str	x21, [sp, #32]
  42a5ac:	add	x21, x20, #0xbb0
  42a5b0:	ldr	w0, [x21, #16]
  42a5b4:	and	w0, w0, #0xf000
  42a5b8:	cmp	w0, #0x2, lsl #12
  42a5bc:	b.eq	42a5dc <wcrtomb@plt+0x259bc>  // b.none
  42a5c0:	ldr	x21, [sp, #32]
  42a5c4:	mov	w1, #0x0                   	// #0
  42a5c8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a5cc:	ldp	x19, x20, [sp, #16]
  42a5d0:	strb	w1, [x0, #664]
  42a5d4:	ldp	x29, x30, [sp], #176
  42a5d8:	ret
  42a5dc:	mov	x1, x19
  42a5e0:	add	x2, sp, #0x30
  42a5e4:	mov	w0, #0x0                   	// #0
  42a5e8:	bl	404b10 <__xstat@plt>
  42a5ec:	cbnz	w0, 42a5c0 <wcrtomb@plt+0x259a0>
  42a5f0:	ldr	x1, [x20, #2992]
  42a5f4:	ldr	x0, [sp, #48]
  42a5f8:	cmp	x1, x0
  42a5fc:	b.ne	42a5c0 <wcrtomb@plt+0x259a0>  // b.any
  42a600:	ldr	x1, [x21, #8]
  42a604:	ldr	x0, [sp, #56]
  42a608:	ldr	x21, [sp, #32]
  42a60c:	cmp	x1, x0
  42a610:	cset	w1, eq  // eq = none
  42a614:	b	42a5c8 <wcrtomb@plt+0x259a8>
  42a618:	cbz	w0, 42a6d0 <wcrtomb@plt+0x25ab0>
  42a61c:	stp	x29, x30, [sp, #-48]!
  42a620:	mov	x29, sp
  42a624:	stp	x19, x20, [sp, #16]
  42a628:	and	w20, w1, #0xff
  42a62c:	mov	w19, w0
  42a630:	b	42a644 <wcrtomb@plt+0x25a24>
  42a634:	bl	404ad0 <__errno_location@plt>
  42a638:	ldr	w1, [x0]
  42a63c:	cmp	w1, #0x4
  42a640:	b.ne	42a6d4 <wcrtomb@plt+0x25ab4>  // b.any
  42a644:	add	x1, sp, #0x2c
  42a648:	mov	w0, w19
  42a64c:	mov	w2, #0x0                   	// #0
  42a650:	bl	404b60 <waitpid@plt>
  42a654:	cmn	w0, #0x1
  42a658:	b.eq	42a634 <wcrtomb@plt+0x25a14>  // b.none
  42a65c:	ldr	w1, [sp, #44]
  42a660:	and	w19, w1, #0x7f
  42a664:	add	w0, w19, #0x1
  42a668:	sbfx	x0, x0, #1, #7
  42a66c:	cmp	w0, #0x0
  42a670:	b.le	42a68c <wcrtomb@plt+0x25a6c>
  42a674:	cmp	w20, #0x0
  42a678:	ccmp	w19, #0xd, #0x0, eq  // eq = none
  42a67c:	b.ne	42a6fc <wcrtomb@plt+0x25adc>  // b.any
  42a680:	ldp	x19, x20, [sp, #16]
  42a684:	ldp	x29, x30, [sp], #48
  42a688:	ret
  42a68c:	tst	x1, #0xff00
  42a690:	b.eq	42a680 <wcrtomb@plt+0x25a60>  // b.none
  42a694:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a698:	ldr	x0, [x0, #1136]
  42a69c:	cbz	x0, 42a6a4 <wcrtomb@plt+0x25a84>
  42a6a0:	blr	x0
  42a6a4:	mov	w2, #0x5                   	// #5
  42a6a8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a6ac:	mov	x0, #0x0                   	// #0
  42a6b0:	add	x1, x1, #0x4d0
  42a6b4:	bl	4049c0 <dcgettext@plt>
  42a6b8:	mov	x2, x0
  42a6bc:	ldrb	w3, [sp, #45]
  42a6c0:	mov	w1, #0x0                   	// #0
  42a6c4:	mov	w0, #0x0                   	// #0
  42a6c8:	bl	404050 <error@plt>
  42a6cc:	bl	410460 <wcrtomb@plt+0xb840>
  42a6d0:	ret
  42a6d4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a6d8:	ldr	x0, [x0, #1032]
  42a6dc:	bl	434710 <wcrtomb@plt+0x2faf0>
  42a6e0:	ldr	w1, [sp, #44]
  42a6e4:	and	w19, w1, #0x7f
  42a6e8:	add	w0, w19, #0x1
  42a6ec:	sbfx	x0, x0, #1, #7
  42a6f0:	cmp	w0, #0x0
  42a6f4:	b.gt	42a674 <wcrtomb@plt+0x25a54>
  42a6f8:	b	42a68c <wcrtomb@plt+0x25a6c>
  42a6fc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a700:	ldr	x0, [x0, #1136]
  42a704:	cbz	x0, 42a70c <wcrtomb@plt+0x25aec>
  42a708:	blr	x0
  42a70c:	mov	w2, #0x5                   	// #5
  42a710:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a714:	mov	x0, #0x0                   	// #0
  42a718:	add	x1, x1, #0x4b0
  42a71c:	bl	4049c0 <dcgettext@plt>
  42a720:	mov	x2, x0
  42a724:	mov	w3, w19
  42a728:	mov	w1, #0x0                   	// #0
  42a72c:	mov	w0, #0x0                   	// #0
  42a730:	bl	404050 <error@plt>
  42a734:	bl	410460 <wcrtomb@plt+0xb840>
  42a738:	stp	x29, x30, [sp, #-48]!
  42a73c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a740:	add	x0, x0, #0x4f0
  42a744:	mov	x29, sp
  42a748:	stp	x19, x20, [sp, #16]
  42a74c:	bl	404af0 <getenv@plt>
  42a750:	mov	x20, x0
  42a754:	cmp	x20, #0x0
  42a758:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a75c:	add	x0, x0, #0x430
  42a760:	csel	x20, x0, x20, eq  // eq = none
  42a764:	bl	420490 <wcrtomb@plt+0x1b870>
  42a768:	mov	w19, w0
  42a76c:	cbnz	w0, 42a784 <wcrtomb@plt+0x25b64>
  42a770:	b	42a7bc <wcrtomb@plt+0x25b9c>
  42a774:	bl	404ad0 <__errno_location@plt>
  42a778:	ldr	w1, [x0]
  42a77c:	cmp	w1, #0x4
  42a780:	b.ne	42a7a8 <wcrtomb@plt+0x25b88>  // b.any
  42a784:	add	x1, sp, #0x2c
  42a788:	mov	w0, w19
  42a78c:	mov	w2, #0x0                   	// #0
  42a790:	bl	404b60 <waitpid@plt>
  42a794:	cmn	w0, #0x1
  42a798:	b.eq	42a774 <wcrtomb@plt+0x25b54>  // b.none
  42a79c:	ldp	x19, x20, [sp, #16]
  42a7a0:	ldp	x29, x30, [sp], #48
  42a7a4:	ret
  42a7a8:	mov	x0, x20
  42a7ac:	bl	434710 <wcrtomb@plt+0x2faf0>
  42a7b0:	ldp	x19, x20, [sp, #16]
  42a7b4:	ldp	x29, x30, [sp], #48
  42a7b8:	ret
  42a7bc:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a7c0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a7c4:	add	x2, x2, #0x4f8
  42a7c8:	add	x1, x1, #0x500
  42a7cc:	mov	x3, #0x0                   	// #0
  42a7d0:	mov	x0, x20
  42a7d4:	bl	404ae0 <execlp@plt>
  42a7d8:	mov	x0, x20
  42a7dc:	bl	4338b8 <wcrtomb@plt+0x2ec98>
  42a7e0:	ldr	w2, [x0, #24]
  42a7e4:	ldr	w0, [x1, #24]
  42a7e8:	cmp	w2, w0
  42a7ec:	cset	w0, eq  // eq = none
  42a7f0:	ret
  42a7f4:	nop
  42a7f8:	ldr	w2, [x0, #28]
  42a7fc:	ldr	w0, [x1, #28]
  42a800:	cmp	w2, w0
  42a804:	cset	w0, eq  // eq = none
  42a808:	ret
  42a80c:	nop
  42a810:	ldr	x2, [x0]
  42a814:	ldr	x3, [x1]
  42a818:	cmp	x3, x2
  42a81c:	b.eq	42a828 <wcrtomb@plt+0x25c08>  // b.none
  42a820:	mov	w0, #0x0                   	// #0
  42a824:	ret
  42a828:	ldr	x0, [x0, #8]
  42a82c:	ldr	x1, [x1, #8]
  42a830:	cmp	x1, x0
  42a834:	cset	w0, eq  // eq = none
  42a838:	ret
  42a83c:	nop
  42a840:	stp	x29, x30, [sp, #-32]!
  42a844:	mov	w2, #0x1                   	// #1
  42a848:	mov	x1, #0x0                   	// #0
  42a84c:	mov	x29, sp
  42a850:	str	x19, [sp, #16]
  42a854:	mov	w19, w0
  42a858:	bl	4041d0 <lseek@plt>
  42a85c:	tbnz	x0, #63, 42a874 <wcrtomb@plt+0x25c54>
  42a860:	mov	x1, x0
  42a864:	mov	w0, w19
  42a868:	ldr	x19, [sp, #16]
  42a86c:	ldp	x29, x30, [sp], #32
  42a870:	b	404a10 <ftruncate@plt>
  42a874:	mov	w0, #0xffffffff            	// #-1
  42a878:	ldr	x19, [sp, #16]
  42a87c:	ldp	x29, x30, [sp], #32
  42a880:	ret
  42a884:	nop
  42a888:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a88c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a890:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a894:	mov	w3, #0x3fffffff            	// #1073741823
  42a898:	ldr	w0, [x0, #1104]
  42a89c:	ldr	x1, [x1, #16]
  42a8a0:	cmp	w0, w3
  42a8a4:	ldr	x2, [x2, #1048]
  42a8a8:	b.le	42a8b8 <wcrtomb@plt+0x25c98>
  42a8ac:	mov	w3, #0xc0000000            	// #-1073741824
  42a8b0:	add	w0, w0, w3
  42a8b4:	b	435810 <wcrtomb@plt+0x30bf0>
  42a8b8:	b	4443a8 <argp_parse@@Base+0x45c8>
  42a8bc:	nop
  42a8c0:	stp	x29, x30, [sp, #-128]!
  42a8c4:	mov	x1, #0x1                   	// #1
  42a8c8:	mov	w0, #0xd                   	// #13
  42a8cc:	mov	x29, sp
  42a8d0:	bl	404270 <signal@plt>
  42a8d4:	add	x0, sp, #0x70
  42a8d8:	bl	4204d0 <wcrtomb@plt+0x1b8b0>
  42a8dc:	bl	420490 <wcrtomb@plt+0x1b870>
  42a8e0:	stp	x19, x20, [sp, #16]
  42a8e4:	cmp	w0, #0x0
  42a8e8:	b.gt	42a9d0 <wcrtomb@plt+0x25db0>
  42a8ec:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42a8f0:	add	x1, x1, #0x508
  42a8f4:	mov	w2, #0x5                   	// #5
  42a8f8:	mov	x0, #0x0                   	// #0
  42a8fc:	stp	x21, x22, [sp, #32]
  42a900:	bl	4049c0 <dcgettext@plt>
  42a904:	bl	44bbe8 <argp_parse@@Base+0xbe08>
  42a908:	mov	x1, #0x0                   	// #0
  42a90c:	mov	w0, #0xd                   	// #13
  42a910:	bl	404270 <signal@plt>
  42a914:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a918:	ldr	w0, [sp, #112]
  42a91c:	mov	w1, #0x0                   	// #0
  42a920:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a924:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42a928:	ldr	w0, [sp, #116]
  42a92c:	bl	406138 <wcrtomb@plt+0x1518>
  42a930:	ldrb	w0, [x21, #1144]
  42a934:	cbnz	w0, 42ab2c <wcrtomb@plt+0x25f0c>
  42a938:	ldr	x20, [x19, #816]
  42a93c:	mov	w1, #0x3a                  	// #58
  42a940:	ldr	x0, [x20]
  42a944:	bl	404870 <strchr@plt>
  42a948:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a94c:	str	x0, [x1, #1152]
  42a950:	ldr	x20, [x20]
  42a954:	cbz	x0, 42a960 <wcrtomb@plt+0x25d40>
  42a958:	cmp	x0, x20
  42a95c:	b.hi	42a9f4 <wcrtomb@plt+0x25dd4>  // b.pmore
  42a960:	mov	x0, x20
  42a964:	bl	42a358 <wcrtomb@plt+0x25738>
  42a968:	cbz	w0, 42aa08 <wcrtomb@plt+0x25de8>
  42a96c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a970:	ldr	x0, [x19, #816]
  42a974:	ldrb	w1, [x20, #885]
  42a978:	ldr	x0, [x0]
  42a97c:	cbnz	w1, 42ac04 <wcrtomb@plt+0x25fe4>
  42a980:	ldrb	w1, [x0]
  42a984:	cmp	w1, #0x2d
  42a988:	b.eq	42ab94 <wcrtomb@plt+0x25f74>  // b.none
  42a98c:	mov	w1, #0x1b6                 	// #438
  42a990:	bl	404bb0 <creat@plt>
  42a994:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a998:	str	w0, [x2, #1104]
  42a99c:	tbz	w0, #31, 42abe4 <wcrtomb@plt+0x25fc4>
  42a9a0:	stp	x23, x24, [sp, #48]
  42a9a4:	stp	x25, x26, [sp, #64]
  42a9a8:	stp	x27, x28, [sp, #80]
  42a9ac:	bl	404ad0 <__errno_location@plt>
  42a9b0:	ldrb	w1, [x20, #885]
  42a9b4:	ldr	w21, [x0]
  42a9b8:	mov	x20, x0
  42a9bc:	cbnz	w1, 42ac70 <wcrtomb@plt+0x26050>
  42a9c0:	ldr	x0, [x19, #816]
  42a9c4:	ldr	x0, [x0]
  42a9c8:	str	w21, [x20]
  42a9cc:	bl	433b88 <wcrtomb@plt+0x2ef68>
  42a9d0:	mov	w19, w0
  42a9d4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42a9d8:	ldp	w0, w2, [sp, #112]
  42a9dc:	str	w2, [x1, #1104]
  42a9e0:	bl	406138 <wcrtomb@plt+0x1518>
  42a9e4:	mov	w0, w19
  42a9e8:	ldp	x19, x20, [sp, #16]
  42a9ec:	ldp	x29, x30, [sp], #128
  42a9f0:	ret
  42a9f4:	sub	x2, x0, x20
  42a9f8:	mov	w1, #0x2f                  	// #47
  42a9fc:	mov	x0, x20
  42aa00:	bl	404960 <memchr@plt>
  42aa04:	cbnz	x0, 42a960 <wcrtomb@plt+0x25d40>
  42aa08:	add	x0, sp, #0x78
  42aa0c:	stp	x23, x24, [sp, #48]
  42aa10:	bl	4204d0 <wcrtomb@plt+0x1b8b0>
  42aa14:	bl	420490 <wcrtomb@plt+0x1b870>
  42aa18:	mov	w24, w0
  42aa1c:	cbz	w0, 42ac84 <wcrtomb@plt+0x26064>
  42aa20:	ldr	w0, [sp, #120]
  42aa24:	mov	w1, #0x0                   	// #0
  42aa28:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42aa2c:	ldr	w0, [sp, #124]
  42aa30:	bl	406138 <wcrtomb@plt+0x1518>
  42aa34:	ldr	x22, [x19, #816]
  42aa38:	ldr	x20, [x22]
  42aa3c:	ldrb	w0, [x20]
  42aa40:	cmp	w0, #0x2d
  42aa44:	b.ne	42ab38 <wcrtomb@plt+0x25f18>  // b.any
  42aa48:	ldrb	w0, [x20, #1]
  42aa4c:	cbnz	w0, 42ab38 <wcrtomb@plt+0x25f18>
  42aa50:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42aa54:	mov	x1, x0
  42aa58:	mov	w0, #0x1                   	// #1
  42aa5c:	str	x1, [sp, #104]
  42aa60:	str	w0, [x1, #1104]
  42aa64:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42aa68:	stp	x25, x26, [sp, #64]
  42aa6c:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  42aa70:	ldr	x0, [sp, #104]
  42aa74:	add	x20, x25, #0x10
  42aa78:	ldr	x2, [x19, #1048]
  42aa7c:	add	x22, x0, #0x450
  42aa80:	mov	w21, #0x3fffffff            	// #1073741823
  42aa84:	mov	w23, #0xc0000000            	// #-1073741824
  42aa88:	stp	x27, x28, [sp, #80]
  42aa8c:	nop
  42aa90:	ldr	x28, [x20]
  42aa94:	cbz	x2, 42ab24 <wcrtomb@plt+0x25f04>
  42aa98:	mov	x27, #0x0                   	// #0
  42aa9c:	b	42aab8 <wcrtomb@plt+0x25e98>
  42aaa0:	ldr	x2, [x19, #1048]
  42aaa4:	add	x27, x27, x0
  42aaa8:	add	x28, x28, x0
  42aaac:	add	x26, x19, #0x418
  42aab0:	cmp	x2, x27
  42aab4:	b.ls	42abb4 <wcrtomb@plt+0x25f94>  // b.plast
  42aab8:	sub	x2, x2, x27
  42aabc:	mov	x1, x28
  42aac0:	mov	w0, #0x0                   	// #0
  42aac4:	bl	44f230 <argp_parse@@Base+0xf450>
  42aac8:	cmn	x0, #0x1
  42aacc:	b.eq	42ac78 <wcrtomb@plt+0x26058>  // b.none
  42aad0:	cbnz	x0, 42aaa0 <wcrtomb@plt+0x25e80>
  42aad4:	cbz	x27, 42ab24 <wcrtomb@plt+0x25f04>
  42aad8:	ldr	x2, [x19, #1048]
  42aadc:	mov	w1, #0x0                   	// #0
  42aae0:	ldr	x0, [x25, #16]
  42aae4:	sub	x2, x2, x27
  42aae8:	add	x0, x0, x27
  42aaec:	bl	404410 <memset@plt>
  42aaf0:	ldr	x0, [sp, #104]
  42aaf4:	mov	w1, #0x3fffffff            	// #1073741823
  42aaf8:	ldr	w0, [x0, #1104]
  42aafc:	cmp	w0, w1
  42ab00:	ldr	x1, [x25, #16]
  42ab04:	b.le	42ac64 <wcrtomb@plt+0x26044>
  42ab08:	ldr	x2, [x19, #1048]
  42ab0c:	mov	w3, #0xc0000000            	// #-1073741824
  42ab10:	add	w0, w0, w3
  42ab14:	bl	435810 <wcrtomb@plt+0x30bf0>
  42ab18:	ldr	x1, [x19, #1048]
  42ab1c:	cmp	x1, x0
  42ab20:	b.ne	42abe0 <wcrtomb@plt+0x25fc0>  // b.any
  42ab24:	mov	w0, w24
  42ab28:	bl	42a110 <wcrtomb@plt+0x254f0>
  42ab2c:	ldr	x0, [x19, #816]
  42ab30:	ldr	x20, [x0]
  42ab34:	b	42a960 <wcrtomb@plt+0x25d40>
  42ab38:	ldrb	w0, [x21, #1144]
  42ab3c:	cbnz	w0, 42ac18 <wcrtomb@plt+0x25ff8>
  42ab40:	mov	x0, x20
  42ab44:	mov	w1, #0x3a                  	// #58
  42ab48:	bl	404870 <strchr@plt>
  42ab4c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ab50:	str	x0, [x1, #1152]
  42ab54:	ldr	x20, [x22]
  42ab58:	cbz	x0, 42ac18 <wcrtomb@plt+0x25ff8>
  42ab5c:	cmp	x0, x20
  42ab60:	b.ls	42ac18 <wcrtomb@plt+0x25ff8>  // b.plast
  42ab64:	sub	x2, x0, x20
  42ab68:	mov	w1, #0x2f                  	// #47
  42ab6c:	mov	x0, x20
  42ab70:	bl	404960 <memchr@plt>
  42ab74:	cbnz	x0, 42ac18 <wcrtomb@plt+0x25ff8>
  42ab78:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ab7c:	mov	x0, x20
  42ab80:	mov	w2, #0x40000000            	// #1073741824
  42ab84:	mov	w1, #0x41                  	// #65
  42ab88:	ldr	x3, [x3, #936]
  42ab8c:	bl	434da8 <wcrtomb@plt+0x30188>
  42ab90:	b	42ac24 <wcrtomb@plt+0x26004>
  42ab94:	ldrb	w1, [x0, #1]
  42ab98:	cbz	w1, 42abec <wcrtomb@plt+0x25fcc>
  42ab9c:	mov	w1, #0x1b6                 	// #438
  42aba0:	bl	404bb0 <creat@plt>
  42aba4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42aba8:	str	w0, [x2, #1104]
  42abac:	tbnz	w0, #31, 42a9a0 <wcrtomb@plt+0x25d80>
  42abb0:	b	42abe4 <wcrtomb@plt+0x25fc4>
  42abb4:	ldr	w0, [x22]
  42abb8:	ldr	x1, [x20]
  42abbc:	cmp	w0, w21
  42abc0:	b.le	42ac48 <wcrtomb@plt+0x26028>
  42abc4:	add	w0, w0, w23
  42abc8:	bl	435810 <wcrtomb@plt+0x30bf0>
  42abcc:	ldr	x2, [x26]
  42abd0:	cmp	x0, x2
  42abd4:	b.eq	42aa90 <wcrtomb@plt+0x25e70>  // b.none
  42abd8:	mov	x2, x0
  42abdc:	mov	x0, x2
  42abe0:	bl	406dd0 <wcrtomb@plt+0x21b0>
  42abe4:	mov	w1, #0x1                   	// #1
  42abe8:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42abec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42abf0:	stp	x23, x24, [sp, #48]
  42abf4:	ldr	x0, [x0, #1032]
  42abf8:	stp	x25, x26, [sp, #64]
  42abfc:	stp	x27, x28, [sp, #80]
  42ac00:	bl	42a0d0 <wcrtomb@plt+0x254b0>
  42ac04:	mov	w1, #0x1                   	// #1
  42ac08:	bl	41f848 <wcrtomb@plt+0x1ac28>
  42ac0c:	ldr	x0, [x19, #816]
  42ac10:	ldr	x0, [x0]
  42ac14:	b	42a980 <wcrtomb@plt+0x25d60>
  42ac18:	mov	x0, x20
  42ac1c:	mov	w1, #0x1b6                 	// #438
  42ac20:	bl	404bb0 <creat@plt>
  42ac24:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ac28:	str	x1, [sp, #104]
  42ac2c:	str	w0, [x1, #1104]
  42ac30:	tbz	w0, #31, 42aa64 <wcrtomb@plt+0x25e44>
  42ac34:	ldr	x0, [x19, #816]
  42ac38:	stp	x25, x26, [sp, #64]
  42ac3c:	stp	x27, x28, [sp, #80]
  42ac40:	ldr	x0, [x0]
  42ac44:	bl	433b88 <wcrtomb@plt+0x2ef68>
  42ac48:	bl	4443a8 <argp_parse@@Base+0x45c8>
  42ac4c:	mov	x2, x0
  42ac50:	ldr	x1, [x26]
  42ac54:	cmp	x1, x0
  42ac58:	b.eq	42aa90 <wcrtomb@plt+0x25e70>  // b.none
  42ac5c:	mov	x0, x2
  42ac60:	b	42abe0 <wcrtomb@plt+0x25fc0>
  42ac64:	ldr	x2, [x19, #1048]
  42ac68:	bl	4443a8 <argp_parse@@Base+0x45c8>
  42ac6c:	b	42ab18 <wcrtomb@plt+0x25ef8>
  42ac70:	bl	41fa88 <wcrtomb@plt+0x1ae68>
  42ac74:	b	42a9c0 <wcrtomb@plt+0x25da0>
  42ac78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ac7c:	ldr	x0, [x0, #1032]
  42ac80:	bl	433df8 <wcrtomb@plt+0x2f1d8>
  42ac84:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ac88:	add	x1, x1, #0x518
  42ac8c:	mov	w2, #0x5                   	// #5
  42ac90:	mov	x0, #0x0                   	// #0
  42ac94:	stp	x25, x26, [sp, #64]
  42ac98:	stp	x27, x28, [sp, #80]
  42ac9c:	bl	4049c0 <dcgettext@plt>
  42aca0:	bl	44bbe8 <argp_parse@@Base+0xbe08>
  42aca4:	ldr	w0, [sp, #124]
  42aca8:	mov	w1, #0x1                   	// #1
  42acac:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42acb0:	ldr	w0, [sp, #120]
  42acb4:	bl	406138 <wcrtomb@plt+0x1518>
  42acb8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42acbc:	ldr	x0, [x0, #1032]
  42acc0:	bl	42a0d0 <wcrtomb@plt+0x254b0>
  42acc4:	nop
  42acc8:	stp	x29, x30, [sp, #-128]!
  42accc:	add	x0, sp, #0x70
  42acd0:	mov	x29, sp
  42acd4:	stp	x19, x20, [sp, #16]
  42acd8:	bl	4204d0 <wcrtomb@plt+0x1b8b0>
  42acdc:	bl	420490 <wcrtomb@plt+0x1b870>
  42ace0:	cmp	w0, #0x0
  42ace4:	b.gt	42af50 <wcrtomb@plt+0x26330>
  42ace8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42acec:	add	x1, x1, #0x508
  42acf0:	mov	w2, #0x5                   	// #5
  42acf4:	mov	x0, #0x0                   	// #0
  42acf8:	stp	x21, x22, [sp, #32]
  42acfc:	bl	4049c0 <dcgettext@plt>
  42ad00:	bl	44bbe8 <argp_parse@@Base+0xbe08>
  42ad04:	mov	x1, #0x0                   	// #0
  42ad08:	mov	w0, #0xd                   	// #13
  42ad0c:	bl	404270 <signal@plt>
  42ad10:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ad14:	ldr	w0, [sp, #116]
  42ad18:	mov	w1, #0x1                   	// #1
  42ad1c:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42ad20:	ldr	w0, [sp, #112]
  42ad24:	bl	406138 <wcrtomb@plt+0x1518>
  42ad28:	ldr	x21, [x20, #816]
  42ad2c:	ldr	x19, [x21]
  42ad30:	ldrb	w0, [x19]
  42ad34:	cmp	w0, #0x2d
  42ad38:	b.eq	42aecc <wcrtomb@plt+0x262ac>  // b.none
  42ad3c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ad40:	ldrb	w0, [x0, #1144]
  42ad44:	cbnz	w0, 42ad80 <wcrtomb@plt+0x26160>
  42ad48:	mov	x0, x19
  42ad4c:	mov	w1, #0x3a                  	// #58
  42ad50:	bl	404870 <strchr@plt>
  42ad54:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ad58:	str	x0, [x1, #1152]
  42ad5c:	ldr	x19, [x21]
  42ad60:	cbz	x0, 42ad80 <wcrtomb@plt+0x26160>
  42ad64:	cmp	x0, x19
  42ad68:	b.ls	42ad80 <wcrtomb@plt+0x26160>  // b.plast
  42ad6c:	sub	x2, x0, x19
  42ad70:	mov	w1, #0x2f                  	// #47
  42ad74:	mov	x0, x19
  42ad78:	bl	404960 <memchr@plt>
  42ad7c:	cbz	x0, 42ad8c <wcrtomb@plt+0x2616c>
  42ad80:	mov	x0, x19
  42ad84:	bl	42a358 <wcrtomb@plt+0x25738>
  42ad88:	cbnz	w0, 42af84 <wcrtomb@plt+0x26364>
  42ad8c:	add	x0, sp, #0x78
  42ad90:	bl	4204d0 <wcrtomb@plt+0x1b8b0>
  42ad94:	bl	420490 <wcrtomb@plt+0x1b870>
  42ad98:	str	w0, [sp, #108]
  42ad9c:	cbz	w0, 42afd8 <wcrtomb@plt+0x263b8>
  42ada0:	ldr	w0, [sp, #124]
  42ada4:	mov	w1, #0x1                   	// #1
  42ada8:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42adac:	ldr	w0, [sp, #120]
  42adb0:	bl	406138 <wcrtomb@plt+0x1518>
  42adb4:	ldr	x21, [x20, #816]
  42adb8:	ldr	x19, [x21]
  42adbc:	ldrb	w0, [x19]
  42adc0:	cmp	w0, #0x2d
  42adc4:	b.ne	42aed8 <wcrtomb@plt+0x262b8>  // b.any
  42adc8:	ldrb	w0, [x19, #1]
  42adcc:	cbnz	w0, 42aed8 <wcrtomb@plt+0x262b8>
  42add0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42add4:	str	wzr, [x1, #1104]
  42add8:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42addc:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ade0:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ade4:	add	x22, x22, #0x450
  42ade8:	add	x20, x20, #0x10
  42adec:	add	x21, x21, #0x418
  42adf0:	stp	x23, x24, [sp, #48]
  42adf4:	mov	w23, #0x3fffffff            	// #1073741823
  42adf8:	mov	w24, #0xc0000000            	// #-1073741824
  42adfc:	stp	x25, x26, [sp, #64]
  42ae00:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ae04:	stp	x27, x28, [sp, #80]
  42ae08:	bl	405738 <wcrtomb@plt+0xb18>
  42ae0c:	ldr	w0, [x22]
  42ae10:	ldr	x1, [x20]
  42ae14:	cmp	w0, w23
  42ae18:	ldr	x2, [x21]
  42ae1c:	b.le	42ae4c <wcrtomb@plt+0x2622c>
  42ae20:	add	w0, w0, w24
  42ae24:	bl	435660 <wcrtomb@plt+0x30a40>
  42ae28:	mov	x19, x0
  42ae2c:	cmn	x0, #0x1
  42ae30:	b.ne	42ae5c <wcrtomb@plt+0x2623c>  // b.any
  42ae34:	bl	406170 <wcrtomb@plt+0x1550>
  42ae38:	ldr	w0, [x22]
  42ae3c:	ldr	x1, [x20]
  42ae40:	cmp	w0, w23
  42ae44:	ldr	x2, [x21]
  42ae48:	b.gt	42ae20 <wcrtomb@plt+0x26200>
  42ae4c:	bl	44f230 <argp_parse@@Base+0xf450>
  42ae50:	mov	x19, x0
  42ae54:	cmn	x0, #0x1
  42ae58:	b.eq	42ae34 <wcrtomb@plt+0x26214>  // b.none
  42ae5c:	cbz	x19, 42af74 <wcrtomb@plt+0x26354>
  42ae60:	ldr	x26, [x20]
  42ae64:	mov	x27, #0x200                 	// #512
  42ae68:	cmp	x19, #0x200
  42ae6c:	mov	x1, x26
  42ae70:	csel	x28, x19, x27, ls  // ls = plast
  42ae74:	mov	w0, #0x1                   	// #1
  42ae78:	mov	x2, x28
  42ae7c:	bl	4443a8 <argp_parse@@Base+0x45c8>
  42ae80:	cmp	x0, x28
  42ae84:	b.eq	42aebc <wcrtomb@plt+0x2629c>  // b.none
  42ae88:	ldr	x0, [x25, #1032]
  42ae8c:	add	x26, x26, x28
  42ae90:	bl	434798 <wcrtomb@plt+0x2fb78>
  42ae94:	subs	x19, x19, x28
  42ae98:	b.eq	42ae08 <wcrtomb@plt+0x261e8>  // b.none
  42ae9c:	cmp	x19, #0x200
  42aea0:	mov	x1, x26
  42aea4:	csel	x28, x19, x27, ls  // ls = plast
  42aea8:	mov	w0, #0x1                   	// #1
  42aeac:	mov	x2, x28
  42aeb0:	bl	4443a8 <argp_parse@@Base+0x45c8>
  42aeb4:	cmp	x0, x28
  42aeb8:	b.ne	42ae88 <wcrtomb@plt+0x26268>  // b.any
  42aebc:	add	x26, x26, x0
  42aec0:	subs	x19, x19, x0
  42aec4:	b.ne	42ae68 <wcrtomb@plt+0x26248>  // b.any
  42aec8:	b	42ae08 <wcrtomb@plt+0x261e8>
  42aecc:	ldrb	w0, [x19, #1]
  42aed0:	cbz	w0, 42ad8c <wcrtomb@plt+0x2616c>
  42aed4:	b	42ad3c <wcrtomb@plt+0x2611c>
  42aed8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42aedc:	ldrb	w0, [x0, #1144]
  42aee0:	cbnz	w0, 42af1c <wcrtomb@plt+0x262fc>
  42aee4:	mov	x0, x19
  42aee8:	mov	w1, #0x3a                  	// #58
  42aeec:	bl	404870 <strchr@plt>
  42aef0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42aef4:	str	x0, [x1, #1152]
  42aef8:	ldr	x19, [x21]
  42aefc:	cbz	x0, 42af1c <wcrtomb@plt+0x262fc>
  42af00:	cmp	x0, x19
  42af04:	b.ls	42af1c <wcrtomb@plt+0x262fc>  // b.plast
  42af08:	sub	x2, x0, x19
  42af0c:	mov	w1, #0x2f                  	// #47
  42af10:	mov	x0, x19
  42af14:	bl	404960 <memchr@plt>
  42af18:	cbz	x0, 42afbc <wcrtomb@plt+0x2639c>
  42af1c:	mov	x0, x19
  42af20:	mov	w2, #0x1b6                 	// #438
  42af24:	mov	w1, #0x0                   	// #0
  42af28:	bl	404340 <open@plt>
  42af2c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42af30:	str	w0, [x1, #1104]
  42af34:	tbz	w0, #31, 42add8 <wcrtomb@plt+0x261b8>
  42af38:	stp	x23, x24, [sp, #48]
  42af3c:	stp	x25, x26, [sp, #64]
  42af40:	stp	x27, x28, [sp, #80]
  42af44:	ldr	x0, [x20, #816]
  42af48:	ldr	x0, [x0]
  42af4c:	bl	433b88 <wcrtomb@plt+0x2ef68>
  42af50:	mov	w19, w0
  42af54:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42af58:	ldp	w2, w0, [sp, #112]
  42af5c:	str	w2, [x1, #1104]
  42af60:	bl	406138 <wcrtomb@plt+0x1518>
  42af64:	mov	w0, w19
  42af68:	ldp	x19, x20, [sp, #16]
  42af6c:	ldp	x29, x30, [sp], #128
  42af70:	ret
  42af74:	mov	w0, #0x1                   	// #1
  42af78:	bl	406138 <wcrtomb@plt+0x1518>
  42af7c:	ldr	w0, [sp, #108]
  42af80:	bl	42a110 <wcrtomb@plt+0x254f0>
  42af84:	ldr	x0, [x20, #816]
  42af88:	mov	w2, #0x1b6                 	// #438
  42af8c:	mov	w1, #0x0                   	// #0
  42af90:	ldr	x0, [x0]
  42af94:	bl	404340 <open@plt>
  42af98:	stp	x23, x24, [sp, #48]
  42af9c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42afa0:	stp	x25, x26, [sp, #64]
  42afa4:	str	w0, [x2, #1104]
  42afa8:	stp	x27, x28, [sp, #80]
  42afac:	tbnz	w0, #31, 42af44 <wcrtomb@plt+0x26324>
  42afb0:	mov	w1, #0x0                   	// #0
  42afb4:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42afb8:	bl	42a190 <wcrtomb@plt+0x25570>
  42afbc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42afc0:	mov	x0, x19
  42afc4:	mov	w2, #0x40000000            	// #1073741824
  42afc8:	mov	w1, #0x0                   	// #0
  42afcc:	ldr	x3, [x3, #936]
  42afd0:	bl	434da8 <wcrtomb@plt+0x30188>
  42afd4:	b	42af2c <wcrtomb@plt+0x2630c>
  42afd8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42afdc:	add	x1, x1, #0x518
  42afe0:	mov	w2, #0x5                   	// #5
  42afe4:	mov	x0, #0x0                   	// #0
  42afe8:	stp	x23, x24, [sp, #48]
  42afec:	stp	x25, x26, [sp, #64]
  42aff0:	stp	x27, x28, [sp, #80]
  42aff4:	bl	4049c0 <dcgettext@plt>
  42aff8:	bl	44bbe8 <argp_parse@@Base+0xbe08>
  42affc:	ldr	w0, [sp, #120]
  42b000:	mov	w1, #0x0                   	// #0
  42b004:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42b008:	ldr	w0, [sp, #124]
  42b00c:	bl	406138 <wcrtomb@plt+0x1518>
  42b010:	bl	42a190 <wcrtomb@plt+0x25570>
  42b014:	nop
  42b018:	stp	x29, x30, [sp, #-352]!
  42b01c:	mov	x29, sp
  42b020:	stp	x19, x20, [sp, #16]
  42b024:	mov	w20, w1
  42b028:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42b02c:	add	x19, x19, #0xbb0
  42b030:	stp	x21, x22, [sp, #32]
  42b034:	mov	x22, x2
  42b038:	mov	x21, x0
  42b03c:	add	x0, sp, #0x38
  42b040:	bl	4204d0 <wcrtomb@plt+0x1b8b0>
  42b044:	mov	x1, #0x1                   	// #1
  42b048:	mov	w0, #0xd                   	// #13
  42b04c:	bl	404270 <signal@plt>
  42b050:	str	x0, [x19, #128]
  42b054:	bl	420490 <wcrtomb@plt+0x1b870>
  42b058:	str	w0, [x19, #136]
  42b05c:	cbz	w0, 42b07c <wcrtomb@plt+0x2645c>
  42b060:	ldr	w0, [sp, #56]
  42b064:	bl	406138 <wcrtomb@plt+0x1518>
  42b068:	ldr	w0, [sp, #60]
  42b06c:	ldp	x19, x20, [sp, #16]
  42b070:	ldp	x21, x22, [sp, #32]
  42b074:	ldp	x29, x30, [sp], #352
  42b078:	ret
  42b07c:	ldr	w0, [sp, #56]
  42b080:	mov	w1, #0x0                   	// #0
  42b084:	and	w20, w20, #0xff
  42b088:	bl	42a3a8 <wcrtomb@plt+0x25788>
  42b08c:	ldr	w0, [sp, #60]
  42b090:	bl	406138 <wcrtomb@plt+0x1518>
  42b094:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42b098:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b09c:	add	x1, x1, #0x928
  42b0a0:	add	x0, x0, #0x530
  42b0a4:	mov	w2, #0x1                   	// #1
  42b0a8:	bl	404100 <setenv@plt>
  42b0ac:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b0b0:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b0b4:	ldr	x0, [x19, #864]
  42b0b8:	ldr	x1, [x0]
  42b0bc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b0c0:	cbz	x1, 42b438 <wcrtomb@plt+0x26818>
  42b0c4:	add	x0, x0, #0x540
  42b0c8:	mov	w2, #0x1                   	// #1
  42b0cc:	bl	404100 <setenv@plt>
  42b0d0:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b0d4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b0d8:	add	x1, sp, #0x58
  42b0dc:	ldr	x0, [x19, #864]
  42b0e0:	ldr	x2, [x2, #816]
  42b0e4:	sub	x0, x0, x2
  42b0e8:	asr	x0, x0, #3
  42b0ec:	add	x0, x0, #0x1
  42b0f0:	bl	446868 <argp_parse@@Base+0x6a88>
  42b0f4:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b0f8:	mov	x1, x0
  42b0fc:	add	x0, x2, #0x550
  42b100:	mov	w2, #0x1                   	// #1
  42b104:	bl	404100 <setenv@plt>
  42b108:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b10c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b110:	add	x1, sp, #0x40
  42b114:	ldrsw	x0, [x0, #876]
  42b118:	bl	446868 <argp_parse@@Base+0x6a88>
  42b11c:	mov	x1, x0
  42b120:	mov	w2, #0x1                   	// #1
  42b124:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b128:	add	x0, x0, #0x560
  42b12c:	bl	404100 <setenv@plt>
  42b130:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b134:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b138:	ldr	w0, [x0, #80]
  42b13c:	cbnz	w0, 42b148 <wcrtomb@plt+0x26528>
  42b140:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b144:	ldr	w0, [x0, #944]
  42b148:	bl	42c208 <wcrtomb@plt+0x275e8>
  42b14c:	mov	x1, x0
  42b150:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b154:	cbz	x1, 42b42c <wcrtomb@plt+0x2680c>
  42b158:	add	x0, x0, #0x578
  42b15c:	mov	w2, #0x1                   	// #1
  42b160:	bl	404100 <setenv@plt>
  42b164:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b168:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b16c:	add	x1, sp, #0x30
  42b170:	add	x0, x0, #0x588
  42b174:	mov	w2, #0x1                   	// #1
  42b178:	strb	w20, [sp, #48]
  42b17c:	strb	wzr, [sp, #49]
  42b180:	bl	404100 <setenv@plt>
  42b184:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b188:	ldr	w5, [x22, #104]
  42b18c:	adrp	x4, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b190:	add	x4, x4, #0x598
  42b194:	mov	x3, #0x18                  	// #24
  42b198:	mov	w2, #0x1                   	// #1
  42b19c:	mov	x1, x3
  42b1a0:	add	x0, sp, #0xe8
  42b1a4:	bl	404290 <__snprintf_chk@plt>
  42b1a8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b1ac:	add	x1, sp, #0xe8
  42b1b0:	add	x0, x0, #0x5a0
  42b1b4:	mov	w2, #0x1                   	// #1
  42b1b8:	bl	404100 <setenv@plt>
  42b1bc:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b1c0:	cbz	x21, 42b41c <wcrtomb@plt+0x267fc>
  42b1c4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b1c8:	mov	x1, x21
  42b1cc:	add	x0, x0, #0x5b0
  42b1d0:	mov	w2, #0x1                   	// #1
  42b1d4:	bl	404100 <setenv@plt>
  42b1d8:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b1dc:	ldr	x1, [x22, #8]
  42b1e0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b1e4:	cbz	x1, 42b410 <wcrtomb@plt+0x267f0>
  42b1e8:	add	x0, x0, #0x5c0
  42b1ec:	mov	w2, #0x1                   	// #1
  42b1f0:	bl	404100 <setenv@plt>
  42b1f4:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b1f8:	ldr	x1, [x22, #32]
  42b1fc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b200:	cbz	x1, 42b404 <wcrtomb@plt+0x267e4>
  42b204:	add	x0, x0, #0x5d0
  42b208:	mov	w2, #0x1                   	// #1
  42b20c:	bl	404100 <setenv@plt>
  42b210:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b214:	ldr	x1, [x22, #40]
  42b218:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b21c:	cbz	x1, 42b3f8 <wcrtomb@plt+0x267d8>
  42b220:	add	x0, x0, #0x5e0
  42b224:	mov	w2, #0x1                   	// #1
  42b228:	bl	404100 <setenv@plt>
  42b22c:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b230:	ldp	x0, x1, [x22, #216]
  42b234:	add	x2, sp, #0x140
  42b238:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  42b23c:	mov	x1, x0
  42b240:	mov	w2, #0x1                   	// #1
  42b244:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b248:	add	x0, x0, #0x5f0
  42b24c:	bl	404100 <setenv@plt>
  42b250:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b254:	ldp	x0, x1, [x22, #232]
  42b258:	add	x2, sp, #0x120
  42b25c:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  42b260:	mov	x1, x0
  42b264:	mov	w2, #0x1                   	// #1
  42b268:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b26c:	add	x0, x0, #0x600
  42b270:	bl	404100 <setenv@plt>
  42b274:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b278:	ldp	x0, x1, [x22, #248]
  42b27c:	add	x2, sp, #0x100
  42b280:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  42b284:	mov	x1, x0
  42b288:	mov	w2, #0x1                   	// #1
  42b28c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b290:	add	x0, x0, #0x610
  42b294:	bl	404100 <setenv@plt>
  42b298:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b29c:	ldr	x0, [x22, #136]
  42b2a0:	add	x1, sp, #0xa0
  42b2a4:	bl	446868 <argp_parse@@Base+0x6a88>
  42b2a8:	mov	x1, x0
  42b2ac:	mov	w2, #0x1                   	// #1
  42b2b0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b2b4:	add	x0, x0, #0x620
  42b2b8:	bl	404100 <setenv@plt>
  42b2bc:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b2c0:	ldr	w0, [x22, #112]
  42b2c4:	add	x1, sp, #0x88
  42b2c8:	bl	446868 <argp_parse@@Base+0x6a88>
  42b2cc:	mov	x1, x0
  42b2d0:	mov	w2, #0x1                   	// #1
  42b2d4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b2d8:	add	x0, x0, #0x630
  42b2dc:	bl	404100 <setenv@plt>
  42b2e0:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b2e4:	ldr	w0, [x22, #116]
  42b2e8:	add	x1, sp, #0x70
  42b2ec:	bl	446868 <argp_parse@@Base+0x6a88>
  42b2f0:	mov	x1, x0
  42b2f4:	mov	w2, #0x1                   	// #1
  42b2f8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b2fc:	add	x0, x0, #0x638
  42b300:	bl	404100 <setenv@plt>
  42b304:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b308:	cmp	w20, #0x68
  42b30c:	b.eq	42b3c0 <wcrtomb@plt+0x267a0>  // b.none
  42b310:	b.hi	42b39c <wcrtomb@plt+0x2677c>  // b.pmore
  42b314:	sub	w20, w20, #0x62
  42b318:	and	w0, w20, #0xff
  42b31c:	cmp	w0, #0x1
  42b320:	b.hi	42b3a4 <wcrtomb@plt+0x26784>  // b.pmore
  42b324:	ldr	x2, [x22, #120]
  42b328:	add	x1, sp, #0xd0
  42b32c:	lsr	x0, x2, #12
  42b330:	bfxil	x0, x2, #0, #8
  42b334:	bl	446868 <argp_parse@@Base+0x6a88>
  42b338:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b33c:	mov	x1, x0
  42b340:	add	x0, x2, #0x640
  42b344:	mov	w2, #0x1                   	// #1
  42b348:	bl	404100 <setenv@plt>
  42b34c:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b350:	ldr	x0, [x22, #120]
  42b354:	add	x1, sp, #0xb8
  42b358:	lsr	x2, x0, #32
  42b35c:	ubfx	w0, w0, #8, #12
  42b360:	and	w2, w2, #0xfffff000
  42b364:	orr	w0, w2, w0
  42b368:	bl	446868 <argp_parse@@Base+0x6a88>
  42b36c:	mov	x1, x0
  42b370:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b374:	add	x0, x2, #0x650
  42b378:	mov	w2, #0x1                   	// #1
  42b37c:	bl	404100 <setenv@plt>
  42b380:	cbnz	w0, 42b3f4 <wcrtomb@plt+0x267d4>
  42b384:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b388:	add	x0, x0, #0x660
  42b38c:	bl	404930 <unsetenv@plt>
  42b390:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b394:	ldr	x0, [x0, #744]
  42b398:	bl	42a0d0 <wcrtomb@plt+0x254b0>
  42b39c:	cmp	w20, #0x6c
  42b3a0:	b.eq	42b3c0 <wcrtomb@plt+0x267a0>  // b.none
  42b3a4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b3a8:	add	x0, x0, #0x640
  42b3ac:	bl	404930 <unsetenv@plt>
  42b3b0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b3b4:	add	x0, x0, #0x650
  42b3b8:	bl	404930 <unsetenv@plt>
  42b3bc:	b	42b384 <wcrtomb@plt+0x26764>
  42b3c0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b3c4:	add	x0, x0, #0x640
  42b3c8:	bl	404930 <unsetenv@plt>
  42b3cc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b3d0:	add	x0, x0, #0x650
  42b3d4:	bl	404930 <unsetenv@plt>
  42b3d8:	ldr	x1, [x22, #24]
  42b3dc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b3e0:	cbz	x1, 42b388 <wcrtomb@plt+0x26768>
  42b3e4:	add	x0, x0, #0x660
  42b3e8:	mov	w2, #0x1                   	// #1
  42b3ec:	bl	404100 <setenv@plt>
  42b3f0:	cbz	w0, 42b390 <wcrtomb@plt+0x26770>
  42b3f4:	bl	4104a0 <wcrtomb@plt+0xb880>
  42b3f8:	add	x0, x0, #0x5e0
  42b3fc:	bl	404930 <unsetenv@plt>
  42b400:	b	42b230 <wcrtomb@plt+0x26610>
  42b404:	add	x0, x0, #0x5d0
  42b408:	bl	404930 <unsetenv@plt>
  42b40c:	b	42b214 <wcrtomb@plt+0x265f4>
  42b410:	add	x0, x0, #0x5c0
  42b414:	bl	404930 <unsetenv@plt>
  42b418:	b	42b1f8 <wcrtomb@plt+0x265d8>
  42b41c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b420:	add	x0, x0, #0x5b0
  42b424:	bl	404930 <unsetenv@plt>
  42b428:	b	42b1dc <wcrtomb@plt+0x265bc>
  42b42c:	add	x0, x0, #0x578
  42b430:	bl	404930 <unsetenv@plt>
  42b434:	b	42b168 <wcrtomb@plt+0x26548>
  42b438:	add	x0, x0, #0x540
  42b43c:	bl	404930 <unsetenv@plt>
  42b440:	b	42b0d4 <wcrtomb@plt+0x264b4>
  42b444:	nop
  42b448:	stp	x29, x30, [sp, #-48]!
  42b44c:	mov	x29, sp
  42b450:	stp	x19, x20, [sp, #16]
  42b454:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42b458:	add	x20, x20, #0xbb0
  42b45c:	ldr	w19, [x20, #136]
  42b460:	tbnz	w19, #31, 42b508 <wcrtomb@plt+0x268e8>
  42b464:	ldr	x1, [x20, #128]
  42b468:	mov	w0, #0xd                   	// #13
  42b46c:	bl	404270 <signal@plt>
  42b470:	b	42b488 <wcrtomb@plt+0x26868>
  42b474:	bl	404ad0 <__errno_location@plt>
  42b478:	ldr	w0, [x0]
  42b47c:	cmp	w0, #0x4
  42b480:	b.ne	42b514 <wcrtomb@plt+0x268f4>  // b.any
  42b484:	ldr	w19, [x20, #136]
  42b488:	mov	w0, w19
  42b48c:	add	x1, sp, #0x2c
  42b490:	mov	w2, #0x0                   	// #0
  42b494:	bl	404b60 <waitpid@plt>
  42b498:	mov	w19, w0
  42b49c:	cmn	w0, #0x1
  42b4a0:	b.eq	42b474 <wcrtomb@plt+0x26854>  // b.none
  42b4a4:	ldr	w1, [sp, #44]
  42b4a8:	ands	w0, w1, #0x7f
  42b4ac:	b.eq	42b530 <wcrtomb@plt+0x26910>  // b.none
  42b4b0:	add	w0, w0, #0x1
  42b4b4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b4b8:	sbfx	x0, x0, #1, #7
  42b4bc:	cmp	w0, #0x0
  42b4c0:	ldr	x0, [x1, #1136]
  42b4c4:	b.le	42b590 <wcrtomb@plt+0x26970>
  42b4c8:	cbz	x0, 42b4d0 <wcrtomb@plt+0x268b0>
  42b4cc:	blr	x0
  42b4d0:	mov	w2, #0x5                   	// #5
  42b4d4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b4d8:	mov	x0, #0x0                   	// #0
  42b4dc:	add	x1, x1, #0x690
  42b4e0:	bl	4049c0 <dcgettext@plt>
  42b4e4:	mov	x2, x0
  42b4e8:	ldrsw	x3, [x20, #136]
  42b4ec:	mov	w1, #0x0                   	// #0
  42b4f0:	ldr	w4, [sp, #44]
  42b4f4:	mov	w0, #0x0                   	// #0
  42b4f8:	and	w4, w4, #0x7f
  42b4fc:	bl	404050 <error@plt>
  42b500:	mov	w0, #0xffffffff            	// #-1
  42b504:	str	w0, [x20, #136]
  42b508:	ldp	x19, x20, [sp, #16]
  42b50c:	ldp	x29, x30, [sp], #48
  42b510:	ret
  42b514:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b518:	str	w19, [x20, #136]
  42b51c:	ldr	x0, [x0, #744]
  42b520:	bl	434710 <wcrtomb@plt+0x2faf0>
  42b524:	ldp	x19, x20, [sp, #16]
  42b528:	ldp	x29, x30, [sp], #48
  42b52c:	ret
  42b530:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b534:	ldrb	w0, [x0, #705]
  42b538:	cbnz	w0, 42b500 <wcrtomb@plt+0x268e0>
  42b53c:	tst	x1, #0xff00
  42b540:	b.eq	42b500 <wcrtomb@plt+0x268e0>  // b.none
  42b544:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b548:	ldr	x0, [x0, #1136]
  42b54c:	cbz	x0, 42b554 <wcrtomb@plt+0x26934>
  42b550:	blr	x0
  42b554:	mov	w2, #0x5                   	// #5
  42b558:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b55c:	mov	x0, #0x0                   	// #0
  42b560:	add	x1, x1, #0x670
  42b564:	bl	4049c0 <dcgettext@plt>
  42b568:	mov	x2, x0
  42b56c:	ldrb	w4, [sp, #45]
  42b570:	mov	w1, #0x0                   	// #0
  42b574:	ldrsw	x3, [x20, #136]
  42b578:	mov	w0, #0x0                   	// #0
  42b57c:	bl	404050 <error@plt>
  42b580:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42b584:	mov	w1, #0x2                   	// #2
  42b588:	str	w1, [x0, #3568]
  42b58c:	b	42b500 <wcrtomb@plt+0x268e0>
  42b590:	cbz	x0, 42b598 <wcrtomb@plt+0x26978>
  42b594:	blr	x0
  42b598:	mov	w2, #0x5                   	// #5
  42b59c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b5a0:	mov	x0, #0x0                   	// #0
  42b5a4:	add	x1, x1, #0x6b8
  42b5a8:	bl	4049c0 <dcgettext@plt>
  42b5ac:	mov	x2, x0
  42b5b0:	ldrsw	x3, [x20, #136]
  42b5b4:	mov	w1, #0x0                   	// #0
  42b5b8:	mov	w0, #0x0                   	// #0
  42b5bc:	bl	404050 <error@plt>
  42b5c0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42b5c4:	mov	w1, #0x2                   	// #2
  42b5c8:	str	w1, [x0, #3568]
  42b5cc:	b	42b500 <wcrtomb@plt+0x268e0>
  42b5d0:	stp	x29, x30, [sp, #-112]!
  42b5d4:	mov	x29, sp
  42b5d8:	stp	x19, x20, [sp, #16]
  42b5dc:	mov	w19, w1
  42b5e0:	stp	x21, x22, [sp, #32]
  42b5e4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42b5e8:	add	x21, x21, #0xbb0
  42b5ec:	str	x23, [sp, #48]
  42b5f0:	mov	x23, x0
  42b5f4:	add	x0, sp, #0x48
  42b5f8:	bl	4204d0 <wcrtomb@plt+0x1b8b0>
  42b5fc:	mov	x1, #0x1                   	// #1
  42b600:	mov	w0, #0xd                   	// #13
  42b604:	bl	404270 <signal@plt>
  42b608:	str	x0, [x21, #144]
  42b60c:	bl	420490 <wcrtomb@plt+0x1b870>
  42b610:	cbz	w0, 42b770 <wcrtomb@plt+0x26b50>
  42b614:	mov	w20, w0
  42b618:	ldr	w0, [sp, #76]
  42b61c:	stp	xzr, xzr, [sp, #80]
  42b620:	bl	406138 <wcrtomb@plt+0x1518>
  42b624:	ldr	w0, [sp, #72]
  42b628:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b62c:	add	x1, x1, #0xc28
  42b630:	bl	404420 <fdopen@plt>
  42b634:	mov	x3, x0
  42b638:	add	x1, sp, #0x58
  42b63c:	mov	w2, #0xa                   	// #10
  42b640:	mov	x22, x0
  42b644:	add	x0, sp, #0x50
  42b648:	bl	404b40 <__getdelim@plt>
  42b64c:	mov	x19, x0
  42b650:	mov	x0, x22
  42b654:	bl	4042a0 <fclose@plt>
  42b658:	cmp	w19, #0x0
  42b65c:	mov	w22, w19
  42b660:	b.le	42b6b0 <wcrtomb@plt+0x26a90>
  42b664:	ldr	x0, [sp, #80]
  42b668:	add	x1, x0, w19, sxtw
  42b66c:	ldurb	w1, [x1, #-1]
  42b670:	cmp	w1, #0xa
  42b674:	b.ne	42b6b0 <wcrtomb@plt+0x26a90>  // b.any
  42b678:	sub	w22, w19, #0x1
  42b67c:	add	x1, sp, #0x44
  42b680:	mov	w2, #0x0                   	// #0
  42b684:	strb	wzr, [x0, w22, sxtw]
  42b688:	mov	w0, w20
  42b68c:	bl	404b60 <waitpid@plt>
  42b690:	mov	w19, w0
  42b694:	cmn	w0, #0x1
  42b698:	b.ne	42b6cc <wcrtomb@plt+0x26aac>  // b.any
  42b69c:	nop
  42b6a0:	bl	404ad0 <__errno_location@plt>
  42b6a4:	ldr	w1, [x0]
  42b6a8:	cmp	w1, #0x4
  42b6ac:	b.ne	42b730 <wcrtomb@plt+0x26b10>  // b.any
  42b6b0:	add	x1, sp, #0x44
  42b6b4:	mov	w0, w20
  42b6b8:	mov	w2, #0x0                   	// #0
  42b6bc:	bl	404b60 <waitpid@plt>
  42b6c0:	mov	w19, w0
  42b6c4:	cmn	w0, #0x1
  42b6c8:	b.eq	42b6a0 <wcrtomb@plt+0x26a80>  // b.none
  42b6cc:	ldr	x1, [x21, #144]
  42b6d0:	mov	w0, #0xd                   	// #13
  42b6d4:	bl	404270 <signal@plt>
  42b6d8:	ldr	w0, [sp, #68]
  42b6dc:	ands	w19, w0, #0x7f
  42b6e0:	b.ne	42b760 <wcrtomb@plt+0x26b40>  // b.any
  42b6e4:	tst	x0, #0xff00
  42b6e8:	ccmp	w22, #0x0, #0x4, eq  // eq = none
  42b6ec:	ldr	x0, [sp, #80]
  42b6f0:	b.gt	42b714 <wcrtomb@plt+0x26af4>
  42b6f4:	bl	4047b0 <free@plt>
  42b6f8:	ldrb	w19, [sp, #69]
  42b6fc:	mov	w0, w19
  42b700:	ldp	x19, x20, [sp, #16]
  42b704:	ldp	x21, x22, [sp, #32]
  42b708:	ldr	x23, [sp, #48]
  42b70c:	ldp	x29, x30, [sp], #112
  42b710:	ret
  42b714:	str	x0, [x23]
  42b718:	mov	w0, w19
  42b71c:	ldp	x19, x20, [sp, #16]
  42b720:	ldp	x21, x22, [sp, #32]
  42b724:	ldr	x23, [sp, #48]
  42b728:	ldp	x29, x30, [sp], #112
  42b72c:	ret
  42b730:	ldr	x1, [x21, #144]
  42b734:	mov	w0, #0xd                   	// #13
  42b738:	bl	404270 <signal@plt>
  42b73c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b740:	ldr	x0, [x0, #896]
  42b744:	bl	434710 <wcrtomb@plt+0x2faf0>
  42b748:	mov	w0, w19
  42b74c:	ldp	x19, x20, [sp, #16]
  42b750:	ldp	x21, x22, [sp, #32]
  42b754:	ldr	x23, [sp, #48]
  42b758:	ldp	x29, x30, [sp], #112
  42b75c:	ret
  42b760:	ldr	x0, [sp, #80]
  42b764:	mov	w19, #0xffffffff            	// #-1
  42b768:	bl	4047b0 <free@plt>
  42b76c:	b	42b6fc <wcrtomb@plt+0x26adc>
  42b770:	mov	w2, #0x1                   	// #1
  42b774:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42b778:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b77c:	add	x1, x1, #0x928
  42b780:	add	x0, x0, #0x530
  42b784:	bl	404100 <setenv@plt>
  42b788:	ldr	x1, [x23]
  42b78c:	mov	w2, #0x1                   	// #1
  42b790:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b794:	add	x0, x0, #0x540
  42b798:	bl	404100 <setenv@plt>
  42b79c:	add	x1, sp, #0x58
  42b7a0:	sxtw	x0, w19
  42b7a4:	bl	446868 <argp_parse@@Base+0x6a88>
  42b7a8:	mov	x1, x0
  42b7ac:	mov	w2, #0x1                   	// #1
  42b7b0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b7b4:	add	x0, x0, #0x550
  42b7b8:	bl	404100 <setenv@plt>
  42b7bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b7c0:	add	x1, sp, #0x58
  42b7c4:	ldrsw	x0, [x0, #876]
  42b7c8:	bl	446868 <argp_parse@@Base+0x6a88>
  42b7cc:	mov	x1, x0
  42b7d0:	mov	w2, #0x1                   	// #1
  42b7d4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b7d8:	add	x0, x0, #0x560
  42b7dc:	bl	404100 <setenv@plt>
  42b7e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b7e4:	ldr	w0, [x0, #988]
  42b7e8:	bl	42c248 <wcrtomb@plt+0x27628>
  42b7ec:	mov	x1, x0
  42b7f0:	mov	w2, #0x1                   	// #1
  42b7f4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b7f8:	add	x0, x0, #0x6e0
  42b7fc:	bl	404100 <setenv@plt>
  42b800:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b804:	ldr	w0, [x0, #80]
  42b808:	cbnz	w0, 42b814 <wcrtomb@plt+0x26bf4>
  42b80c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b810:	ldr	w0, [x0, #944]
  42b814:	bl	42c208 <wcrtomb@plt+0x275e8>
  42b818:	mov	x1, x0
  42b81c:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b820:	add	x0, x2, #0x578
  42b824:	mov	w2, #0x1                   	// #1
  42b828:	bl	404100 <setenv@plt>
  42b82c:	ldrsw	x0, [sp, #76]
  42b830:	add	x1, sp, #0x58
  42b834:	bl	446868 <argp_parse@@Base+0x6a88>
  42b838:	mov	x1, x0
  42b83c:	mov	w2, #0x1                   	// #1
  42b840:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b844:	add	x0, x0, #0x6f0
  42b848:	bl	404100 <setenv@plt>
  42b84c:	ldr	w0, [sp, #72]
  42b850:	bl	406138 <wcrtomb@plt+0x1518>
  42b854:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b858:	ldr	x0, [x0, #896]
  42b85c:	bl	42a0d0 <wcrtomb@plt+0x254b0>
  42b860:	stp	x29, x30, [sp, #-80]!
  42b864:	mov	x29, sp
  42b868:	stp	x19, x20, [sp, #16]
  42b86c:	mov	w20, w2
  42b870:	stp	x21, x22, [sp, #32]
  42b874:	mov	x22, x0
  42b878:	mov	x21, x1
  42b87c:	bl	420490 <wcrtomb@plt+0x1b870>
  42b880:	cbz	w0, 42b8dc <wcrtomb@plt+0x26cbc>
  42b884:	mov	w19, w0
  42b888:	b	42b89c <wcrtomb@plt+0x26c7c>
  42b88c:	bl	404ad0 <__errno_location@plt>
  42b890:	ldr	w1, [x0]
  42b894:	cmp	w1, #0x4
  42b898:	b.ne	42b8c4 <wcrtomb@plt+0x26ca4>  // b.any
  42b89c:	add	x1, sp, #0x38
  42b8a0:	mov	w0, w19
  42b8a4:	mov	w2, #0x0                   	// #0
  42b8a8:	bl	404b60 <waitpid@plt>
  42b8ac:	cmn	w0, #0x1
  42b8b0:	b.eq	42b88c <wcrtomb@plt+0x26c6c>  // b.none
  42b8b4:	ldp	x19, x20, [sp, #16]
  42b8b8:	ldp	x21, x22, [sp, #32]
  42b8bc:	ldp	x29, x30, [sp], #80
  42b8c0:	ret
  42b8c4:	mov	x0, x22
  42b8c8:	bl	434710 <wcrtomb@plt+0x2faf0>
  42b8cc:	ldp	x19, x20, [sp, #16]
  42b8d0:	ldp	x21, x22, [sp, #32]
  42b8d4:	ldp	x29, x30, [sp], #80
  42b8d8:	ret
  42b8dc:	mov	w2, #0x1                   	// #1
  42b8e0:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42b8e4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b8e8:	add	x1, x1, #0x928
  42b8ec:	add	x0, x0, #0x530
  42b8f0:	bl	404100 <setenv@plt>
  42b8f4:	mov	w2, #0x1                   	// #1
  42b8f8:	mov	x1, x21
  42b8fc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b900:	add	x0, x0, #0x540
  42b904:	bl	404100 <setenv@plt>
  42b908:	add	x1, sp, #0x38
  42b90c:	sxtw	x0, w20
  42b910:	bl	446868 <argp_parse@@Base+0x6a88>
  42b914:	mov	x1, x0
  42b918:	mov	w2, #0x1                   	// #1
  42b91c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b920:	add	x0, x0, #0x6f8
  42b924:	bl	404100 <setenv@plt>
  42b928:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b92c:	add	x1, sp, #0x38
  42b930:	ldrsw	x0, [x0, #876]
  42b934:	bl	446868 <argp_parse@@Base+0x6a88>
  42b938:	mov	x1, x0
  42b93c:	mov	w2, #0x1                   	// #1
  42b940:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b944:	add	x0, x0, #0x560
  42b948:	bl	404100 <setenv@plt>
  42b94c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b950:	ldr	w0, [x0, #988]
  42b954:	bl	42c248 <wcrtomb@plt+0x27628>
  42b958:	mov	x1, x0
  42b95c:	mov	w2, #0x1                   	// #1
  42b960:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b964:	add	x0, x0, #0x6e0
  42b968:	bl	404100 <setenv@plt>
  42b96c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b970:	ldr	w0, [x0, #80]
  42b974:	cbnz	w0, 42b980 <wcrtomb@plt+0x26d60>
  42b978:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42b97c:	ldr	w0, [x0, #944]
  42b980:	bl	42c208 <wcrtomb@plt+0x275e8>
  42b984:	mov	x1, x0
  42b988:	mov	w2, #0x1                   	// #1
  42b98c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42b990:	add	x0, x0, #0x578
  42b994:	bl	404100 <setenv@plt>
  42b998:	mov	x0, x22
  42b99c:	bl	42a0d0 <wcrtomb@plt+0x254b0>
  42b9a0:	stp	x29, x30, [sp, #-32]!
  42b9a4:	mov	x29, sp
  42b9a8:	str	x19, [sp, #16]
  42b9ac:	mov	w19, w0
  42b9b0:	bl	405790 <wcrtomb@plt+0xb70>
  42b9b4:	bl	405e78 <wcrtomb@plt+0x1258>
  42b9b8:	mov	w0, w19
  42b9bc:	adrp	x1, 42b000 <wcrtomb@plt+0x263e0>
  42b9c0:	ldr	x19, [sp, #16]
  42b9c4:	add	x1, x1, #0x9a0
  42b9c8:	ldp	x29, x30, [sp], #32
  42b9cc:	b	404270 <signal@plt>
  42b9d0:	stp	x29, x30, [sp, #-80]!
  42b9d4:	mov	x29, sp
  42b9d8:	stp	x19, x20, [sp, #16]
  42b9dc:	mov	x20, x0
  42b9e0:	stp	x21, x22, [sp, #32]
  42b9e4:	mov	x22, x1
  42b9e8:	mov	x21, #0xffffffffffffffff    	// #-1
  42b9ec:	mov	w1, #0x3a                  	// #58
  42b9f0:	str	x21, [sp, #56]
  42b9f4:	bl	404870 <strchr@plt>
  42b9f8:	cbz	x0, 42baa8 <wcrtomb@plt+0x26e88>
  42b9fc:	mov	x19, x0
  42ba00:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  42ba04:	add	x3, sp, #0x38
  42ba08:	add	x4, x4, #0x7e8
  42ba0c:	add	x1, sp, #0x40
  42ba10:	mov	w2, #0xa                   	// #10
  42ba14:	strb	wzr, [x19], #1
  42ba18:	ldrb	w5, [x20]
  42ba1c:	mov	x0, x19
  42ba20:	cmp	w5, #0x0
  42ba24:	csel	x20, x20, xzr, ne  // ne = any
  42ba28:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42ba2c:	cbz	w0, 42ba80 <wcrtomb@plt+0x26e60>
  42ba30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ba34:	ldr	x0, [x0, #1136]
  42ba38:	cbz	x0, 42ba40 <wcrtomb@plt+0x26e20>
  42ba3c:	blr	x0
  42ba40:	mov	x0, x19
  42ba44:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42ba48:	mov	w2, #0x5                   	// #5
  42ba4c:	mov	x19, x0
  42ba50:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ba54:	mov	x0, #0x0                   	// #0
  42ba58:	add	x1, x1, #0x718
  42ba5c:	bl	4049c0 <dcgettext@plt>
  42ba60:	mov	x3, x19
  42ba64:	mov	x4, x0
  42ba68:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42ba6c:	add	x2, x2, #0x618
  42ba70:	mov	w1, #0x0                   	// #0
  42ba74:	mov	w0, #0x0                   	// #0
  42ba78:	bl	404050 <error@plt>
  42ba7c:	bl	410460 <wcrtomb@plt+0xb840>
  42ba80:	ldr	x0, [sp, #56]
  42ba84:	mov	x1, #0xffffffff            	// #4294967295
  42ba88:	cmp	x0, x1
  42ba8c:	b.hi	42ba30 <wcrtomb@plt+0x26e10>  // b.pmore
  42ba90:	cbz	x20, 42ba98 <wcrtomb@plt+0x26e78>
  42ba94:	str	x20, [x22]
  42ba98:	ldp	x19, x20, [sp, #16]
  42ba9c:	ldp	x21, x22, [sp, #32]
  42baa0:	ldp	x29, x30, [sp], #80
  42baa4:	ret
  42baa8:	ldrb	w1, [x20]
  42baac:	mov	x0, x21
  42bab0:	sub	w1, w1, #0x30
  42bab4:	and	w1, w1, #0xff
  42bab8:	cmp	w1, #0x9
  42babc:	b.hi	42ba94 <wcrtomb@plt+0x26e74>  // b.pmore
  42bac0:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  42bac4:	add	x3, sp, #0x48
  42bac8:	add	x4, x4, #0x7e8
  42bacc:	add	x1, sp, #0x40
  42bad0:	mov	x0, x20
  42bad4:	mov	w2, #0xa                   	// #10
  42bad8:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42badc:	cbz	w0, 42baf0 <wcrtomb@plt+0x26ed0>
  42bae0:	cmp	w0, #0x1
  42bae4:	b.eq	42bb00 <wcrtomb@plt+0x26ee0>  // b.none
  42bae8:	ldr	x0, [sp, #56]
  42baec:	b	42ba94 <wcrtomb@plt+0x26e74>
  42baf0:	ldr	x0, [sp, #72]
  42baf4:	mov	x1, #0xffffffff            	// #4294967295
  42baf8:	cmp	x0, x1
  42bafc:	b.ls	42ba98 <wcrtomb@plt+0x26e78>  // b.plast
  42bb00:	mov	x19, x20
  42bb04:	b	42ba30 <wcrtomb@plt+0x26e10>
  42bb08:	stp	x29, x30, [sp, #-176]!
  42bb0c:	cmp	w0, #0x114
  42bb10:	mov	x29, sp
  42bb14:	stp	x19, x20, [sp, #16]
  42bb18:	b.eq	42bf68 <wcrtomb@plt+0x27348>  // b.none
  42bb1c:	b.le	42bc8c <wcrtomb@plt+0x2706c>
  42bb20:	cmp	w0, #0x14f
  42bb24:	b.eq	42bf00 <wcrtomb@plt+0x272e0>  // b.none
  42bb28:	b.le	42bd18 <wcrtomb@plt+0x270f8>
  42bb2c:	mov	w2, #0x4                   	// #4
  42bb30:	movk	w2, #0x200, lsl #16
  42bb34:	cmp	w0, w2
  42bb38:	b.ne	42bd5c <wcrtomb@plt+0x2713c>  // b.any
  42bb3c:	mov	x2, #0x0                   	// #0
  42bb40:	mov	x1, #0x0                   	// #0
  42bb44:	add	x0, sp, #0x58
  42bb48:	adrp	x4, 404000 <fputs@plt>
  42bb4c:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  42bb50:	add	x4, x4, #0x7b0
  42bb54:	add	x3, x3, #0x1a0
  42bb58:	stp	x21, x22, [sp, #32]
  42bb5c:	str	x25, [sp, #64]
  42bb60:	bl	451000 <_obstack_begin@@Base>
  42bb64:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bb68:	add	x1, x1, #0x768
  42bb6c:	mov	w2, #0x5                   	// #5
  42bb70:	mov	x0, #0x0                   	// #0
  42bb74:	bl	4049c0 <dcgettext@plt>
  42bb78:	mov	x20, x0
  42bb7c:	bl	403ff0 <strlen@plt>
  42bb80:	mov	x19, x0
  42bb84:	ldp	x0, x1, [sp, #112]
  42bb88:	sub	x1, x1, x0
  42bb8c:	cmp	x19, x1
  42bb90:	b.hi	42bff8 <wcrtomb@plt+0x273d8>  // b.pmore
  42bb94:	mov	x2, x19
  42bb98:	mov	x1, x20
  42bb9c:	bl	403f70 <memcpy@plt>
  42bba0:	ldp	x2, x0, [sp, #112]
  42bba4:	add	x19, x2, x19
  42bba8:	str	x19, [sp, #112]
  42bbac:	sub	x0, x0, x19
  42bbb0:	cmp	x0, #0x1
  42bbb4:	b.ls	42c050 <wcrtomb@plt+0x27430>  // b.plast
  42bbb8:	mov	w0, #0xa0a                 	// #2570
  42bbbc:	strh	w0, [x19]
  42bbc0:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  42bbc4:	add	x25, x0, #0xb00
  42bbc8:	ldr	x1, [sp, #112]
  42bbcc:	ldr	x21, [x0, #2816]
  42bbd0:	add	x1, x1, #0x2
  42bbd4:	str	x1, [sp, #112]
  42bbd8:	cbz	x21, 42bd9c <wcrtomb@plt+0x2717c>
  42bbdc:	ldr	x0, [sp, #120]
  42bbe0:	stp	x23, x24, [sp, #48]
  42bbe4:	mov	x22, x25
  42bbe8:	sub	x0, x0, x1
  42bbec:	mov	w24, #0x2020                	// #8224
  42bbf0:	cmp	x0, #0x1
  42bbf4:	mov	w23, #0xa                   	// #10
  42bbf8:	b.ls	42bc78 <wcrtomb@plt+0x27058>  // b.plast
  42bbfc:	nop
  42bc00:	strh	w24, [x1]
  42bc04:	mov	x0, x21
  42bc08:	ldr	x20, [sp, #112]
  42bc0c:	add	x20, x20, #0x2
  42bc10:	str	x20, [sp, #112]
  42bc14:	bl	403ff0 <strlen@plt>
  42bc18:	mov	x19, x0
  42bc1c:	ldr	x1, [sp, #120]
  42bc20:	sub	x1, x1, x20
  42bc24:	cmp	x0, x1
  42bc28:	b.hi	42beec <wcrtomb@plt+0x272cc>  // b.pmore
  42bc2c:	mov	x1, x21
  42bc30:	mov	x2, x19
  42bc34:	mov	x0, x20
  42bc38:	bl	403f70 <memcpy@plt>
  42bc3c:	ldp	x1, x2, [sp, #112]
  42bc40:	add	x0, x1, x19
  42bc44:	str	x0, [sp, #112]
  42bc48:	add	x3, x0, #0x1
  42bc4c:	cmp	x0, x2
  42bc50:	b.eq	42bd70 <wcrtomb@plt+0x27150>  // b.none
  42bc54:	str	x3, [sp, #112]
  42bc58:	strb	w23, [x1, x19]
  42bc5c:	ldr	x21, [x22, #8]!
  42bc60:	cbz	x21, 42bd98 <wcrtomb@plt+0x27178>
  42bc64:	ldr	x1, [sp, #112]
  42bc68:	ldr	x0, [sp, #120]
  42bc6c:	sub	x0, x0, x1
  42bc70:	cmp	x0, #0x1
  42bc74:	b.hi	42bc00 <wcrtomb@plt+0x26fe0>  // b.pmore
  42bc78:	mov	x1, #0x2                   	// #2
  42bc7c:	add	x0, sp, #0x58
  42bc80:	bl	4511d8 <_obstack_newchunk@@Base>
  42bc84:	ldr	x1, [sp, #112]
  42bc88:	b	42bc00 <wcrtomb@plt+0x26fe0>
  42bc8c:	cmp	w0, #0x6a
  42bc90:	b.eq	42bf9c <wcrtomb@plt+0x2737c>  // b.none
  42bc94:	b.le	42bcd4 <wcrtomb@plt+0x270b4>
  42bc98:	cmp	w0, #0x7a
  42bc9c:	b.ne	42bd5c <wcrtomb@plt+0x2713c>  // b.any
  42bca0:	mov	w2, #0x5                   	// #5
  42bca4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bca8:	mov	x0, #0x0                   	// #0
  42bcac:	add	x1, x1, #0x748
  42bcb0:	bl	4049c0 <dcgettext@plt>
  42bcb4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bcb8:	add	x1, x1, #0xa0
  42bcbc:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bcc0:	mov	x19, x0
  42bcc4:	mov	x0, x19
  42bcc8:	ldp	x19, x20, [sp, #16]
  42bccc:	ldp	x29, x30, [sp], #176
  42bcd0:	ret
  42bcd4:	cmp	w0, #0x4a
  42bcd8:	b.eq	42bfd0 <wcrtomb@plt+0x273b0>  // b.none
  42bcdc:	cmp	w0, #0x5a
  42bce0:	b.ne	42bd5c <wcrtomb@plt+0x2713c>  // b.any
  42bce4:	mov	w2, #0x5                   	// #5
  42bce8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bcec:	mov	x0, #0x0                   	// #0
  42bcf0:	add	x1, x1, #0x748
  42bcf4:	bl	4049c0 <dcgettext@plt>
  42bcf8:	adrp	x1, 46d000 <_obstack_memory_used@@Base+0x1bbf0>
  42bcfc:	add	x1, x1, #0xc08
  42bd00:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bd04:	mov	x19, x0
  42bd08:	mov	x0, x19
  42bd0c:	ldp	x19, x20, [sp, #16]
  42bd10:	ldp	x29, x30, [sp], #176
  42bd14:	ret
  42bd18:	cmp	w0, #0x115
  42bd1c:	b.eq	42bf34 <wcrtomb@plt+0x27314>  // b.none
  42bd20:	cmp	w0, #0x116
  42bd24:	b.ne	42bd5c <wcrtomb@plt+0x2713c>  // b.any
  42bd28:	mov	w2, #0x5                   	// #5
  42bd2c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bd30:	mov	x0, #0x0                   	// #0
  42bd34:	add	x1, x1, #0x748
  42bd38:	bl	4049c0 <dcgettext@plt>
  42bd3c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bd40:	add	x1, x1, #0xf8
  42bd44:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bd48:	mov	x19, x0
  42bd4c:	mov	x0, x19
  42bd50:	ldp	x19, x20, [sp, #16]
  42bd54:	ldp	x29, x30, [sp], #176
  42bd58:	ret
  42bd5c:	mov	x19, x1
  42bd60:	mov	x0, x19
  42bd64:	ldp	x19, x20, [sp, #16]
  42bd68:	ldp	x29, x30, [sp], #176
  42bd6c:	ret
  42bd70:	add	x0, sp, #0x58
  42bd74:	mov	x1, #0x1                   	// #1
  42bd78:	bl	4511d8 <_obstack_newchunk@@Base>
  42bd7c:	ldr	x0, [sp, #112]
  42bd80:	add	x1, x0, #0x1
  42bd84:	str	x1, [sp, #112]
  42bd88:	strb	w23, [x0]
  42bd8c:	ldr	x21, [x22, #8]!
  42bd90:	cbnz	x21, 42bc64 <wcrtomb@plt+0x27044>
  42bd94:	nop
  42bd98:	ldp	x23, x24, [sp, #48]
  42bd9c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bda0:	add	x1, x1, #0x7a0
  42bda4:	mov	w2, #0x5                   	// #5
  42bda8:	mov	x0, #0x0                   	// #0
  42bdac:	bl	4049c0 <dcgettext@plt>
  42bdb0:	mov	x20, x0
  42bdb4:	bl	403ff0 <strlen@plt>
  42bdb8:	mov	x19, x0
  42bdbc:	ldp	x0, x1, [sp, #112]
  42bdc0:	sub	x1, x1, x0
  42bdc4:	cmp	x19, x1
  42bdc8:	b.hi	42c02c <wcrtomb@plt+0x2740c>  // b.pmore
  42bdcc:	mov	x1, x20
  42bdd0:	mov	x2, x19
  42bdd4:	bl	403f70 <memcpy@plt>
  42bdd8:	ldr	x0, [sp, #112]
  42bddc:	adrp	x3, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42bde0:	add	x3, x3, #0x960
  42bde4:	add	x0, x0, x19
  42bde8:	str	x0, [sp, #112]
  42bdec:	nop
  42bdf0:	ldr	x1, [x3, #16]!
  42bdf4:	cbz	x1, 42c00c <wcrtomb@plt+0x273ec>
  42bdf8:	ldr	w0, [x3, #8]
  42bdfc:	cmp	w0, #0x6
  42be00:	b.ne	42bdf0 <wcrtomb@plt+0x271d0>  // b.any
  42be04:	ldr	x4, [x25, #56]
  42be08:	adrp	x5, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42be0c:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42be10:	add	x5, x5, #0x7c0
  42be14:	add	x2, x2, #0x7d8
  42be18:	mov	w3, #0x14                  	// #20
  42be1c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42be20:	add	x0, x0, #0x7e0
  42be24:	bl	450888 <argp_parse@@Base+0x10aa8>
  42be28:	mov	x20, x0
  42be2c:	bl	403ff0 <strlen@plt>
  42be30:	mov	x19, x0
  42be34:	ldp	x0, x1, [sp, #112]
  42be38:	sub	x1, x1, x0
  42be3c:	cmp	x19, x1
  42be40:	b.hi	42c018 <wcrtomb@plt+0x273f8>  // b.pmore
  42be44:	mov	x1, x20
  42be48:	mov	x2, x19
  42be4c:	bl	403f70 <memcpy@plt>
  42be50:	ldp	x1, x0, [sp, #112]
  42be54:	add	x2, x1, x19
  42be58:	str	x2, [sp, #112]
  42be5c:	cmp	x2, x0
  42be60:	b.eq	42c078 <wcrtomb@plt+0x27458>  // b.none
  42be64:	add	x0, x2, #0x1
  42be68:	str	x0, [sp, #112]
  42be6c:	mov	w0, #0xa                   	// #10
  42be70:	strb	w0, [x2]
  42be74:	ldp	x0, x1, [sp, #112]
  42be78:	cmp	x1, x0
  42be7c:	b.eq	42c064 <wcrtomb@plt+0x27444>  // b.none
  42be80:	add	x1, x0, #0x1
  42be84:	str	x1, [sp, #112]
  42be88:	strb	wzr, [x0]
  42be8c:	ldp	x0, x3, [sp, #104]
  42be90:	cmp	x3, x0
  42be94:	b.eq	42c040 <wcrtomb@plt+0x27420>  // b.none
  42be98:	ldr	x1, [sp, #136]
  42be9c:	ldr	x2, [sp, #96]
  42bea0:	add	x3, x3, x1
  42bea4:	ldr	x4, [sp, #120]
  42bea8:	bic	x1, x3, x1
  42beac:	str	x1, [sp, #112]
  42beb0:	sub	x3, x1, x2
  42beb4:	sub	x2, x4, x2
  42beb8:	cmp	x3, x2
  42bebc:	b.ls	42bec8 <wcrtomb@plt+0x272a8>  // b.plast
  42bec0:	mov	x1, x4
  42bec4:	str	x4, [sp, #112]
  42bec8:	str	x1, [sp, #104]
  42becc:	bl	450328 <argp_parse@@Base+0x10548>
  42bed0:	mov	x1, #0x0                   	// #0
  42bed4:	mov	x19, x0
  42bed8:	add	x0, sp, #0x58
  42bedc:	bl	451360 <_obstack_free@@Base>
  42bee0:	ldp	x21, x22, [sp, #32]
  42bee4:	ldr	x25, [sp, #64]
  42bee8:	b	42bcc4 <wcrtomb@plt+0x270a4>
  42beec:	mov	x1, x0
  42bef0:	add	x0, sp, #0x58
  42bef4:	bl	4511d8 <_obstack_newchunk@@Base>
  42bef8:	ldr	x20, [sp, #112]
  42befc:	b	42bc2c <wcrtomb@plt+0x2700c>
  42bf00:	mov	w2, #0x5                   	// #5
  42bf04:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bf08:	mov	x0, #0x0                   	// #0
  42bf0c:	add	x1, x1, #0x748
  42bf10:	bl	4049c0 <dcgettext@plt>
  42bf14:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bf18:	add	x1, x1, #0x108
  42bf1c:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bf20:	mov	x19, x0
  42bf24:	mov	x0, x19
  42bf28:	ldp	x19, x20, [sp, #16]
  42bf2c:	ldp	x29, x30, [sp], #176
  42bf30:	ret
  42bf34:	mov	w2, #0x5                   	// #5
  42bf38:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bf3c:	mov	x0, #0x0                   	// #0
  42bf40:	add	x1, x1, #0x748
  42bf44:	bl	4049c0 <dcgettext@plt>
  42bf48:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bf4c:	add	x1, x1, #0xd8
  42bf50:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bf54:	mov	x19, x0
  42bf58:	mov	x0, x19
  42bf5c:	ldp	x19, x20, [sp, #16]
  42bf60:	ldp	x29, x30, [sp], #176
  42bf64:	ret
  42bf68:	mov	w2, #0x5                   	// #5
  42bf6c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bf70:	mov	x0, #0x0                   	// #0
  42bf74:	add	x1, x1, #0x748
  42bf78:	bl	4049c0 <dcgettext@plt>
  42bf7c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bf80:	add	x1, x1, #0xc8
  42bf84:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bf88:	mov	x19, x0
  42bf8c:	mov	x0, x19
  42bf90:	ldp	x19, x20, [sp, #16]
  42bf94:	ldp	x29, x30, [sp], #176
  42bf98:	ret
  42bf9c:	mov	w2, #0x5                   	// #5
  42bfa0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bfa4:	mov	x0, #0x0                   	// #0
  42bfa8:	add	x1, x1, #0x748
  42bfac:	bl	4049c0 <dcgettext@plt>
  42bfb0:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bfb4:	add	x1, x1, #0xb0
  42bfb8:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bfbc:	mov	x19, x0
  42bfc0:	mov	x0, x19
  42bfc4:	ldp	x19, x20, [sp, #16]
  42bfc8:	ldp	x29, x30, [sp], #176
  42bfcc:	ret
  42bfd0:	mov	w2, #0x5                   	// #5
  42bfd4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42bfd8:	mov	x0, #0x0                   	// #0
  42bfdc:	add	x1, x1, #0x748
  42bfe0:	bl	4049c0 <dcgettext@plt>
  42bfe4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42bfe8:	add	x1, x1, #0xe8
  42bfec:	bl	450888 <argp_parse@@Base+0x10aa8>
  42bff0:	mov	x19, x0
  42bff4:	b	42bcc4 <wcrtomb@plt+0x270a4>
  42bff8:	add	x0, sp, #0x58
  42bffc:	mov	x1, x19
  42c000:	bl	4511d8 <_obstack_newchunk@@Base>
  42c004:	ldr	x0, [sp, #112]
  42c008:	b	42bb94 <wcrtomb@plt+0x26f74>
  42c00c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c010:	add	x1, x1, #0x738
  42c014:	b	42be04 <wcrtomb@plt+0x271e4>
  42c018:	add	x0, sp, #0x58
  42c01c:	mov	x1, x19
  42c020:	bl	4511d8 <_obstack_newchunk@@Base>
  42c024:	ldr	x0, [sp, #112]
  42c028:	b	42be44 <wcrtomb@plt+0x27224>
  42c02c:	add	x0, sp, #0x58
  42c030:	mov	x1, x19
  42c034:	bl	4511d8 <_obstack_newchunk@@Base>
  42c038:	ldr	x0, [sp, #112]
  42c03c:	b	42bdcc <wcrtomb@plt+0x271ac>
  42c040:	ldrb	w1, [sp, #168]
  42c044:	orr	w1, w1, #0x2
  42c048:	strb	w1, [sp, #168]
  42c04c:	b	42be98 <wcrtomb@plt+0x27278>
  42c050:	add	x0, sp, #0x58
  42c054:	mov	x1, #0x2                   	// #2
  42c058:	bl	4511d8 <_obstack_newchunk@@Base>
  42c05c:	ldr	x19, [sp, #112]
  42c060:	b	42bbb8 <wcrtomb@plt+0x26f98>
  42c064:	add	x0, sp, #0x58
  42c068:	mov	x1, #0x1                   	// #1
  42c06c:	bl	4511d8 <_obstack_newchunk@@Base>
  42c070:	ldr	x0, [sp, #112]
  42c074:	b	42be80 <wcrtomb@plt+0x27260>
  42c078:	add	x0, sp, #0x58
  42c07c:	mov	x1, #0x1                   	// #1
  42c080:	bl	4511d8 <_obstack_newchunk@@Base>
  42c084:	ldr	x2, [sp, #112]
  42c088:	b	42be64 <wcrtomb@plt+0x27244>
  42c08c:	nop
  42c090:	stp	x29, x30, [sp, #-80]!
  42c094:	mov	x29, sp
  42c098:	stp	x21, x22, [sp, #32]
  42c09c:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c0a0:	stp	x19, x20, [sp, #16]
  42c0a4:	mov	x19, x0
  42c0a8:	mov	x20, x1
  42c0ac:	ldr	x0, [x22, #3152]
  42c0b0:	str	x23, [sp, #48]
  42c0b4:	add	x23, x22, #0xc50
  42c0b8:	cbz	x0, 42c13c <wcrtomb@plt+0x2751c>
  42c0bc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c0c0:	mov	x0, x20
  42c0c4:	ldr	x20, [x21, #4056]
  42c0c8:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  42c0cc:	mov	x3, x19
  42c0d0:	mov	x4, x0
  42c0d4:	mov	w1, #0x1                   	// #1
  42c0d8:	mov	x0, x20
  42c0dc:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c0e0:	add	x2, x2, #0x828
  42c0e4:	bl	404700 <__fprintf_chk@plt>
  42c0e8:	ldr	x0, [x21, #4056]
  42c0ec:	bl	4048d0 <fflush_unlocked@plt>
  42c0f0:	ldr	w19, [x23, #16]
  42c0f4:	cbz	w19, 42c178 <wcrtomb@plt+0x27558>
  42c0f8:	mov	w19, #0x0                   	// #0
  42c0fc:	ldr	x0, [x21, #4056]
  42c100:	ldp	x1, x2, [x0, #40]
  42c104:	cmp	x1, x2
  42c108:	b.cs	42c1fc <wcrtomb@plt+0x275dc>  // b.hs, b.nlast
  42c10c:	add	x2, x1, #0x1
  42c110:	str	x2, [x0, #40]
  42c114:	mov	w0, #0xa                   	// #10
  42c118:	strb	w0, [x1]
  42c11c:	ldr	x0, [x21, #4056]
  42c120:	bl	4048d0 <fflush_unlocked@plt>
  42c124:	mov	w0, w19
  42c128:	ldp	x19, x20, [sp, #16]
  42c12c:	ldp	x21, x22, [sp, #32]
  42c130:	ldr	x23, [sp, #48]
  42c134:	ldp	x29, x30, [sp], #80
  42c138:	ret
  42c13c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c140:	ldr	w0, [x0, #1104]
  42c144:	cbz	w0, 42c150 <wcrtomb@plt+0x27530>
  42c148:	ldr	x0, [x23, #8]
  42c14c:	cbz	x0, 42c1e0 <wcrtomb@plt+0x275c0>
  42c150:	adrp	x21, 467000 <_obstack_memory_used@@Base+0x15bf0>
  42c154:	add	x21, x21, #0xd88
  42c158:	mov	x0, x21
  42c15c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c160:	add	x1, x1, #0xc28
  42c164:	bl	4042e0 <fopen@plt>
  42c168:	str	x0, [x22, #3152]
  42c16c:	cbnz	x0, 42c0bc <wcrtomb@plt+0x2749c>
  42c170:	mov	x0, x21
  42c174:	bl	433b88 <wcrtomb@plt+0x2ef68>
  42c178:	ldr	x3, [x22, #3152]
  42c17c:	add	x1, sp, #0x48
  42c180:	add	x0, sp, #0x40
  42c184:	mov	w2, #0xa                   	// #10
  42c188:	stp	xzr, xzr, [sp, #64]
  42c18c:	bl	404b40 <__getdelim@plt>
  42c190:	tbz	x0, #63, 42c1a8 <wcrtomb@plt+0x27588>
  42c194:	ldr	x0, [sp, #64]
  42c198:	mov	w1, #0x1                   	// #1
  42c19c:	str	w1, [x23, #16]
  42c1a0:	bl	4047b0 <free@plt>
  42c1a4:	b	42c0fc <wcrtomb@plt+0x274dc>
  42c1a8:	ldr	x0, [sp, #64]
  42c1ac:	bl	404070 <rpmatch@plt>
  42c1b0:	ldr	w20, [x23, #16]
  42c1b4:	cmp	w0, #0x0
  42c1b8:	ldr	x0, [sp, #64]
  42c1bc:	cset	w19, gt
  42c1c0:	bl	4047b0 <free@plt>
  42c1c4:	cbnz	w20, 42c0fc <wcrtomb@plt+0x274dc>
  42c1c8:	mov	w0, w19
  42c1cc:	ldp	x19, x20, [sp, #16]
  42c1d0:	ldp	x21, x22, [sp, #32]
  42c1d4:	ldr	x23, [sp, #48]
  42c1d8:	ldp	x29, x30, [sp], #80
  42c1dc:	ret
  42c1e0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c1e4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c1e8:	add	x0, x0, #0x820
  42c1ec:	str	x0, [x23, #8]
  42c1f0:	ldr	x0, [x1, #1192]
  42c1f4:	str	x0, [x22, #3152]
  42c1f8:	b	42c0bc <wcrtomb@plt+0x2749c>
  42c1fc:	mov	w1, #0xa                   	// #10
  42c200:	bl	404680 <__overflow@plt>
  42c204:	b	42c11c <wcrtomb@plt+0x274fc>
  42c208:	mov	w3, w0
  42c20c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c210:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c214:	add	x1, x1, #0x960
  42c218:	add	x0, x2, #0x830
  42c21c:	b	42c228 <wcrtomb@plt+0x27608>
  42c220:	ldr	x0, [x1, #16]!
  42c224:	cbz	x0, 42c238 <wcrtomb@plt+0x27618>
  42c228:	ldr	w2, [x1, #8]
  42c22c:	cmp	w2, w3
  42c230:	b.ne	42c220 <wcrtomb@plt+0x27600>  // b.any
  42c234:	ret
  42c238:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c23c:	add	x0, x0, #0x738
  42c240:	ret
  42c244:	nop
  42c248:	cmp	w0, #0x9
  42c24c:	b.hi	42c264 <wcrtomb@plt+0x27644>  // b.pmore
  42c250:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c254:	add	x1, x1, #0x960
  42c258:	add	x1, x1, #0x70
  42c25c:	ldr	x0, [x1, w0, uxtw #3]
  42c260:	ret
  42c264:	stp	x29, x30, [sp, #-16]!
  42c268:	mov	x29, sp
  42c26c:	bl	404650 <abort@plt>
  42c270:	stp	x29, x30, [sp, #-32]!
  42c274:	mov	x29, sp
  42c278:	stp	x19, x20, [sp, #16]
  42c27c:	mov	x19, x0
  42c280:	ldrb	w0, [x0]
  42c284:	cmp	w0, #0x53
  42c288:	b.ne	42c298 <wcrtomb@plt+0x27678>  // b.any
  42c28c:	ldrb	w0, [x19, #1]
  42c290:	cmp	w0, #0x49
  42c294:	b.eq	42c33c <wcrtomb@plt+0x2771c>  // b.none
  42c298:	mov	x20, x19
  42c29c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c2a0:	mov	x1, x20
  42c2a4:	add	x0, x0, #0x838
  42c2a8:	bl	404710 <strcmp@plt>
  42c2ac:	cbz	w0, 42c350 <wcrtomb@plt+0x27730>
  42c2b0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c2b4:	mov	x1, x20
  42c2b8:	add	x0, x0, #0x840
  42c2bc:	bl	404710 <strcmp@plt>
  42c2c0:	cbz	w0, 42c36c <wcrtomb@plt+0x2774c>
  42c2c4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c2c8:	mov	x1, x20
  42c2cc:	add	x0, x0, #0x848
  42c2d0:	bl	404710 <strcmp@plt>
  42c2d4:	cbz	w0, 42c37c <wcrtomb@plt+0x2775c>
  42c2d8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c2dc:	mov	x1, x20
  42c2e0:	add	x0, x0, #0x850
  42c2e4:	bl	404710 <strcmp@plt>
  42c2e8:	cbz	w0, 42c38c <wcrtomb@plt+0x2776c>
  42c2ec:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c2f0:	mov	x1, x20
  42c2f4:	add	x0, x0, #0x858
  42c2f8:	bl	404710 <strcmp@plt>
  42c2fc:	cbz	w0, 42c39c <wcrtomb@plt+0x2777c>
  42c300:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c304:	ldr	x0, [x0, #1136]
  42c308:	cbz	x0, 42c310 <wcrtomb@plt+0x276f0>
  42c30c:	blr	x0
  42c310:	mov	w2, #0x5                   	// #5
  42c314:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c318:	mov	x0, #0x0                   	// #0
  42c31c:	add	x1, x1, #0x860
  42c320:	bl	4049c0 <dcgettext@plt>
  42c324:	mov	x2, x0
  42c328:	mov	x3, x19
  42c32c:	mov	w1, #0x0                   	// #0
  42c330:	mov	w0, #0x0                   	// #0
  42c334:	bl	404050 <error@plt>
  42c338:	bl	410460 <wcrtomb@plt+0xb840>
  42c33c:	ldrb	w0, [x19, #2]
  42c340:	cmp	w0, #0x47
  42c344:	b.ne	42c298 <wcrtomb@plt+0x27678>  // b.any
  42c348:	add	x20, x19, #0x3
  42c34c:	b	42c29c <wcrtomb@plt+0x2767c>
  42c350:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c354:	add	x0, x0, #0x960
  42c358:	add	x0, x0, #0xc0
  42c35c:	ldr	w0, [x0, #8]
  42c360:	ldp	x19, x20, [sp, #16]
  42c364:	ldp	x29, x30, [sp], #32
  42c368:	ret
  42c36c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c370:	add	x0, x0, #0x960
  42c374:	add	x0, x0, #0xd0
  42c378:	b	42c35c <wcrtomb@plt+0x2773c>
  42c37c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c380:	add	x0, x0, #0x960
  42c384:	add	x0, x0, #0xe0
  42c388:	b	42c35c <wcrtomb@plt+0x2773c>
  42c38c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c390:	add	x0, x0, #0x960
  42c394:	add	x0, x0, #0xf0
  42c398:	b	42c35c <wcrtomb@plt+0x2773c>
  42c39c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c3a0:	add	x0, x0, #0x960
  42c3a4:	add	x0, x0, #0x100
  42c3a8:	b	42c35c <wcrtomb@plt+0x2773c>
  42c3ac:	nop
  42c3b0:	stp	x29, x30, [sp, #-32]!
  42c3b4:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c3b8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c3bc:	mov	x29, sp
  42c3c0:	ldr	x3, [x2, #3664]
  42c3c4:	str	x19, [sp, #16]
  42c3c8:	ldr	x1, [x1, #1176]
  42c3cc:	mov	w19, w0
  42c3d0:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x42bf0>
  42c3d4:	add	x0, x0, #0x180
  42c3d8:	mov	w2, #0x4                   	// #4
  42c3dc:	bl	43f628 <argp_help@@Base>
  42c3e0:	bl	4412e8 <argp_parse@@Base+0x1508>
  42c3e4:	mov	w0, w19
  42c3e8:	bl	404020 <exit@plt>
  42c3ec:	nop
  42c3f0:	stp	x29, x30, [sp, #-32]!
  42c3f4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c3f8:	mov	x29, sp
  42c3fc:	str	x19, [sp, #16]
  42c400:	mov	x19, x0
  42c404:	ldr	x0, [x1, #1136]
  42c408:	cbz	x0, 42c410 <wcrtomb@plt+0x277f0>
  42c40c:	blr	x0
  42c410:	mov	w2, #0x5                   	// #5
  42c414:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c418:	mov	x0, #0x0                   	// #0
  42c41c:	add	x1, x1, #0x878
  42c420:	bl	4049c0 <dcgettext@plt>
  42c424:	mov	x2, x0
  42c428:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c42c:	mov	x4, x19
  42c430:	mov	w1, #0x0                   	// #0
  42c434:	mov	w0, #0x0                   	// #0
  42c438:	ldr	x3, [x3, #3160]
  42c43c:	bl	404050 <error@plt>
  42c440:	mov	w0, #0x2                   	// #2
  42c444:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42c448:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c44c:	add	x1, x1, #0xc50
  42c450:	ldr	x3, [x1, #8]
  42c454:	cbnz	x3, 42c460 <wcrtomb@plt+0x27840>
  42c458:	str	x0, [x1, #8]
  42c45c:	ret
  42c460:	stp	x29, x30, [sp, #-16]!
  42c464:	mov	x29, sp
  42c468:	bl	42c3f0 <wcrtomb@plt+0x277d0>
  42c46c:	nop
  42c470:	stp	x29, x30, [sp, #-176]!
  42c474:	mov	x29, sp
  42c478:	stp	x19, x20, [sp, #16]
  42c47c:	mov	x19, x2
  42c480:	mov	x20, x3
  42c484:	ldrb	w4, [x2]
  42c488:	sub	w4, w4, #0x2e
  42c48c:	and	w4, w4, #0xff
  42c490:	cmp	w4, #0x1
  42c494:	b.ls	42c578 <wcrtomb@plt+0x27958>  // b.plast
  42c498:	mov	x2, #0x0                   	// #0
  42c49c:	stp	x21, x22, [sp, #32]
  42c4a0:	mov	x21, x0
  42c4a4:	mov	x22, x1
  42c4a8:	mov	x0, x3
  42c4ac:	mov	x1, x19
  42c4b0:	bl	44bb50 <argp_parse@@Base+0xbd70>
  42c4b4:	tst	w0, #0xff
  42c4b8:	b.ne	42c52c <wcrtomb@plt+0x2790c>  // b.any
  42c4bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c4c0:	ldr	x0, [x0, #1136]
  42c4c4:	cbz	x0, 42c4cc <wcrtomb@plt+0x278ac>
  42c4c8:	blr	x0
  42c4cc:	mov	w2, #0x5                   	// #5
  42c4d0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c4d4:	mov	x0, #0x0                   	// #0
  42c4d8:	add	x1, x1, #0x8c8
  42c4dc:	bl	4049c0 <dcgettext@plt>
  42c4e0:	mov	x21, x0
  42c4e4:	ldp	x0, x1, [x20]
  42c4e8:	mov	w2, #0x0                   	// #0
  42c4ec:	bl	41cd78 <wcrtomb@plt+0x18158>
  42c4f0:	mov	x22, x0
  42c4f4:	mov	x0, x19
  42c4f8:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  42c4fc:	mov	x3, x22
  42c500:	mov	x4, x0
  42c504:	mov	x2, x21
  42c508:	mov	w1, #0x0                   	// #0
  42c50c:	mov	w0, #0x0                   	// #0
  42c510:	bl	404050 <error@plt>
  42c514:	ldp	x21, x22, [sp, #32]
  42c518:	str	xzr, [x20, #8]
  42c51c:	mov	w0, #0x1                   	// #1
  42c520:	ldp	x19, x20, [sp, #16]
  42c524:	ldp	x29, x30, [sp], #176
  42c528:	ret
  42c52c:	mov	x0, #0x28                  	// #40
  42c530:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42c534:	mov	x2, x0
  42c538:	mov	x0, x19
  42c53c:	mov	x19, x2
  42c540:	ldp	x2, x3, [x20]
  42c544:	stp	x2, x3, [x19, #8]
  42c548:	str	x22, [x19, #24]
  42c54c:	bl	450328 <argp_parse@@Base+0x10548>
  42c550:	mov	x1, x0
  42c554:	ldr	x2, [x21]
  42c558:	str	x2, [x19]
  42c55c:	str	x19, [x21]
  42c560:	mov	w0, #0x0                   	// #0
  42c564:	str	x1, [x19, #32]
  42c568:	ldp	x19, x20, [sp, #16]
  42c56c:	ldp	x21, x22, [sp, #32]
  42c570:	ldp	x29, x30, [sp], #176
  42c574:	ret
  42c578:	add	x2, sp, #0x30
  42c57c:	mov	x1, x19
  42c580:	mov	w0, #0x0                   	// #0
  42c584:	bl	404b10 <__xstat@plt>
  42c588:	cbnz	w0, 42c5a0 <wcrtomb@plt+0x27980>
  42c58c:	ldur	q0, [sp, #136]
  42c590:	str	q0, [x20]
  42c594:	ldp	x19, x20, [sp, #16]
  42c598:	ldp	x29, x30, [sp], #176
  42c59c:	ret
  42c5a0:	mov	x0, x19
  42c5a4:	stp	x21, x22, [sp, #32]
  42c5a8:	bl	434400 <wcrtomb@plt+0x2f7e0>
  42c5ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c5b0:	ldr	x0, [x0, #1136]
  42c5b4:	cbz	x0, 42c5bc <wcrtomb@plt+0x2799c>
  42c5b8:	blr	x0
  42c5bc:	mov	w2, #0x5                   	// #5
  42c5c0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c5c4:	mov	x0, #0x0                   	// #0
  42c5c8:	add	x1, x1, #0x8a8
  42c5cc:	bl	4049c0 <dcgettext@plt>
  42c5d0:	mov	x2, x0
  42c5d4:	mov	w1, #0x0                   	// #0
  42c5d8:	mov	w0, #0x0                   	// #0
  42c5dc:	bl	404050 <error@plt>
  42c5e0:	mov	w0, #0x2                   	// #2
  42c5e4:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42c5e8:	stp	x29, x30, [sp, #-16]!
  42c5ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c5f0:	mov	x29, sp
  42c5f4:	ldr	x0, [x0, #1136]
  42c5f8:	cbz	x0, 42c600 <wcrtomb@plt+0x279e0>
  42c5fc:	blr	x0
  42c600:	mov	w2, #0x5                   	// #5
  42c604:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c608:	mov	x0, #0x0                   	// #0
  42c60c:	add	x1, x1, #0x8f8
  42c610:	bl	4049c0 <dcgettext@plt>
  42c614:	mov	x2, x0
  42c618:	mov	w1, #0x0                   	// #0
  42c61c:	mov	w0, #0x0                   	// #0
  42c620:	bl	404050 <error@plt>
  42c624:	mov	w0, #0x2                   	// #2
  42c628:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42c62c:	nop
  42c630:	stp	x29, x30, [sp, #-32]!
  42c634:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c638:	mov	x29, sp
  42c63c:	stp	x19, x20, [sp, #16]
  42c640:	mov	x19, x0
  42c644:	mov	x20, x1
  42c648:	ldr	x0, [x2, #1136]
  42c64c:	cbz	x0, 42c654 <wcrtomb@plt+0x27a34>
  42c650:	blr	x0
  42c654:	mov	w2, #0x5                   	// #5
  42c658:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c65c:	mov	x0, #0x0                   	// #0
  42c660:	add	x1, x1, #0x950
  42c664:	bl	4049c0 <dcgettext@plt>
  42c668:	mov	x2, x0
  42c66c:	mov	x4, x20
  42c670:	mov	x3, x19
  42c674:	mov	w1, #0x0                   	// #0
  42c678:	mov	w0, #0x0                   	// #0
  42c67c:	bl	404050 <error@plt>
  42c680:	mov	w0, #0x2                   	// #2
  42c684:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42c688:	stp	x29, x30, [sp, #-48]!
  42c68c:	mov	x29, sp
  42c690:	stp	x19, x20, [sp, #16]
  42c694:	mov	x20, x1
  42c698:	ldr	x1, [x1, #8]
  42c69c:	stp	x21, x22, [sp, #32]
  42c6a0:	mov	w21, w0
  42c6a4:	mov	x0, #0x20                  	// #32
  42c6a8:	cbz	x1, 42c6b8 <wcrtomb@plt+0x27a98>
  42c6ac:	mov	x0, x1
  42c6b0:	bl	403ff0 <strlen@plt>
  42c6b4:	add	x0, x0, #0x21
  42c6b8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42c6bc:	mov	x19, x0
  42c6c0:	ldr	x22, [x20, #8]
  42c6c4:	cbz	x22, 42c764 <wcrtomb@plt+0x27b44>
  42c6c8:	add	x2, x0, #0x20
  42c6cc:	mov	x1, x22
  42c6d0:	mov	x0, x2
  42c6d4:	bl	404910 <strcpy@plt>
  42c6d8:	str	x0, [x19, #8]
  42c6dc:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c6e0:	add	x2, x2, #0xc50
  42c6e4:	ldr	w1, [x20]
  42c6e8:	ldr	x3, [x20, #16]
  42c6ec:	str	w1, [x19]
  42c6f0:	ldr	x0, [x2, #104]
  42c6f4:	stp	x3, x0, [x19, #16]
  42c6f8:	str	x19, [x2, #104]
  42c6fc:	cbz	x0, 42c70c <wcrtomb@plt+0x27aec>
  42c700:	ldr	w2, [x0]
  42c704:	cmp	w2, w1
  42c708:	b.eq	42c724 <wcrtomb@plt+0x27b04>  // b.none
  42c70c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c710:	str	w21, [x0, #880]
  42c714:	ldp	x19, x20, [sp, #16]
  42c718:	ldp	x21, x22, [sp, #32]
  42c71c:	ldp	x29, x30, [sp], #48
  42c720:	ret
  42c724:	cmp	w2, #0x1
  42c728:	b.eq	42c73c <wcrtomb@plt+0x27b1c>  // b.none
  42c72c:	ldr	x1, [x0, #8]
  42c730:	mov	x0, x22
  42c734:	bl	404710 <strcmp@plt>
  42c738:	cbnz	w0, 42c70c <wcrtomb@plt+0x27aec>
  42c73c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c740:	ldr	w1, [x0, #880]
  42c744:	cmp	w1, w21
  42c748:	b.eq	42c710 <wcrtomb@plt+0x27af0>  // b.none
  42c74c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c750:	add	x0, x0, #0x960
  42c754:	add	x0, x0, #0x110
  42c758:	ldr	x1, [x0, w1, uxtw #3]
  42c75c:	ldr	x0, [x0, w21, sxtw #3]
  42c760:	bl	42c630 <wcrtomb@plt+0x27a10>
  42c764:	str	xzr, [x0, #8]
  42c768:	b	42c6dc <wcrtomb@plt+0x27abc>
  42c76c:	nop
  42c770:	stp	x29, x30, [sp, #-48]!
  42c774:	mov	x29, sp
  42c778:	stp	x19, x20, [sp, #16]
  42c77c:	mov	x20, x1
  42c780:	ldr	x1, [x1, #8]
  42c784:	stp	x21, x22, [sp, #32]
  42c788:	mov	x21, x0
  42c78c:	mov	x0, #0x20                  	// #32
  42c790:	cbz	x1, 42c7a0 <wcrtomb@plt+0x27b80>
  42c794:	mov	x0, x1
  42c798:	bl	403ff0 <strlen@plt>
  42c79c:	add	x0, x0, #0x21
  42c7a0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42c7a4:	mov	x19, x0
  42c7a8:	ldr	x1, [x20, #8]
  42c7ac:	cbz	x1, 42c818 <wcrtomb@plt+0x27bf8>
  42c7b0:	add	x2, x0, #0x20
  42c7b4:	mov	x0, x2
  42c7b8:	bl	404910 <strcpy@plt>
  42c7bc:	str	x0, [x19, #8]
  42c7c0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42c7c4:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c7c8:	add	x1, x1, #0xc50
  42c7cc:	ldr	w2, [x20]
  42c7d0:	ldr	x0, [x22, #1032]
  42c7d4:	str	w2, [x19]
  42c7d8:	ldr	x2, [x20, #16]
  42c7dc:	ldr	x20, [x1, #32]
  42c7e0:	stp	x2, x20, [x19, #16]
  42c7e4:	str	x19, [x1, #32]
  42c7e8:	cbz	x0, 42c804 <wcrtomb@plt+0x27be4>
  42c7ec:	mov	x1, x21
  42c7f0:	bl	404710 <strcmp@plt>
  42c7f4:	cbz	w0, 42c804 <wcrtomb@plt+0x27be4>
  42c7f8:	ldr	w0, [x20]
  42c7fc:	cmp	w0, #0x1
  42c800:	b.eq	42c820 <wcrtomb@plt+0x27c00>  // b.none
  42c804:	str	x21, [x22, #1032]
  42c808:	ldp	x19, x20, [sp, #16]
  42c80c:	ldp	x21, x22, [sp, #32]
  42c810:	ldp	x29, x30, [sp], #48
  42c814:	ret
  42c818:	str	xzr, [x0, #8]
  42c81c:	b	42c7c0 <wcrtomb@plt+0x27ba0>
  42c820:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c824:	ldr	x0, [x0, #1136]
  42c828:	cbz	x0, 42c830 <wcrtomb@plt+0x27c10>
  42c82c:	blr	x0
  42c830:	mov	w2, #0x5                   	// #5
  42c834:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c838:	mov	x0, #0x0                   	// #0
  42c83c:	add	x1, x1, #0x970
  42c840:	bl	4049c0 <dcgettext@plt>
  42c844:	mov	x2, x0
  42c848:	mov	w1, #0x0                   	// #0
  42c84c:	mov	w0, #0x0                   	// #0
  42c850:	bl	404050 <error@plt>
  42c854:	mov	w0, #0x2                   	// #2
  42c858:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42c85c:	nop
  42c860:	stp	x29, x30, [sp, #-32]!
  42c864:	mov	x29, sp
  42c868:	stp	x19, x20, [sp, #16]
  42c86c:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c870:	mov	x20, x0
  42c874:	add	x19, x19, #0x960
  42c878:	b	42c884 <wcrtomb@plt+0x27c64>
  42c87c:	ldr	x1, [x19, #16]!
  42c880:	cbz	x1, 42c8ac <wcrtomb@plt+0x27c8c>
  42c884:	ldr	x0, [x19]
  42c888:	mov	x1, x20
  42c88c:	bl	404710 <strcmp@plt>
  42c890:	cbnz	w0, 42c87c <wcrtomb@plt+0x27c5c>
  42c894:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c898:	ldr	w1, [x19, #8]
  42c89c:	ldp	x19, x20, [sp, #16]
  42c8a0:	str	w1, [x0, #944]
  42c8a4:	ldp	x29, x30, [sp], #32
  42c8a8:	ret
  42c8ac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42c8b0:	ldr	x0, [x0, #1136]
  42c8b4:	cbz	x0, 42c8bc <wcrtomb@plt+0x27c9c>
  42c8b8:	blr	x0
  42c8bc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c8c0:	add	x1, x1, #0x990
  42c8c4:	mov	w2, #0x5                   	// #5
  42c8c8:	mov	x0, #0x0                   	// #0
  42c8cc:	bl	4049c0 <dcgettext@plt>
  42c8d0:	mov	x19, x0
  42c8d4:	mov	x0, x20
  42c8d8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42c8dc:	mov	x2, x19
  42c8e0:	mov	x3, x0
  42c8e4:	mov	w1, #0x0                   	// #0
  42c8e8:	mov	w0, #0x0                   	// #0
  42c8ec:	bl	404050 <error@plt>
  42c8f0:	mov	w0, #0x2                   	// #2
  42c8f4:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42c8f8:	stp	x29, x30, [sp, #-240]!
  42c8fc:	cmp	w0, #0x14f
  42c900:	mov	x29, sp
  42c904:	stp	x19, x20, [sp, #16]
  42c908:	mov	w19, w0
  42c90c:	stp	x21, x22, [sp, #32]
  42c910:	stp	x23, x24, [sp, #48]
  42c914:	stp	x25, x26, [sp, #64]
  42c918:	ldr	x25, [x2, #40]
  42c91c:	str	x27, [sp, #80]
  42c920:	str	d8, [sp, #88]
  42c924:	b.gt	42c9d8 <wcrtomb@plt+0x27db8>
  42c928:	tbnz	w0, #31, 42dda0 <wcrtomb@plt+0x29180>
  42c92c:	cmp	w0, #0x14f
  42c930:	b.hi	42c9b0 <wcrtomb@plt+0x27d90>  // b.pmore
  42c934:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c938:	mov	x20, x1
  42c93c:	add	x0, x0, #0x6c0
  42c940:	ldrh	w0, [x0, w19, uxtw #1]
  42c944:	adr	x1, 42c950 <wcrtomb@plt+0x27d30>
  42c948:	add	x0, x1, w0, sxth #2
  42c94c:	br	x0
  42c950:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42c954:	add	x0, x0, #0x960
  42c958:	ldr	x1, [x0, #16]!
  42c95c:	cbz	x1, 42dc74 <wcrtomb@plt+0x29054>
  42c960:	ldr	w2, [x0, #8]
  42c964:	cmp	w2, #0x6
  42c968:	b.ne	42c958 <wcrtomb@plt+0x27d38>  // b.any
  42c96c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  42c970:	adrp	x5, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c974:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c978:	add	x5, x5, #0x7c0
  42c97c:	ldr	x4, [x0, #2872]
  42c980:	add	x2, x2, #0x7d8
  42c984:	mov	w3, #0x14                  	// #20
  42c988:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42c98c:	add	x0, x0, #0x7e0
  42c990:	bl	450888 <argp_parse@@Base+0x10aa8>
  42c994:	mov	x19, x0
  42c998:	bl	4046b0 <puts@plt>
  42c99c:	bl	4412e8 <argp_parse@@Base+0x1508>
  42c9a0:	mov	x0, x19
  42c9a4:	bl	4047b0 <free@plt>
  42c9a8:	mov	w0, #0x0                   	// #0
  42c9ac:	bl	404020 <exit@plt>
  42c9b0:	mov	w19, #0x7                   	// #7
  42c9b4:	mov	w0, w19
  42c9b8:	ldr	d8, [sp, #88]
  42c9bc:	ldp	x19, x20, [sp, #16]
  42c9c0:	ldp	x21, x22, [sp, #32]
  42c9c4:	ldp	x23, x24, [sp, #48]
  42c9c8:	ldp	x25, x26, [sp, #64]
  42c9cc:	ldr	x27, [sp, #80]
  42c9d0:	ldp	x29, x30, [sp], #240
  42c9d4:	ret
  42c9d8:	mov	w0, #0x5                   	// #5
  42c9dc:	movk	w0, #0x100, lsl #16
  42c9e0:	cmp	w19, w0
  42c9e4:	b.eq	42dfb0 <wcrtomb@plt+0x29390>  // b.none
  42c9e8:	mov	w19, #0x7                   	// #7
  42c9ec:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42c9f0:	ldr	x21, [x25]
  42c9f4:	mov	x0, #0x20                  	// #32
  42c9f8:	ldr	x1, [x21, #8]
  42c9fc:	cbz	x1, 42ca0c <wcrtomb@plt+0x27dec>
  42ca00:	mov	x0, x1
  42ca04:	bl	403ff0 <strlen@plt>
  42ca08:	add	x0, x0, #0x21
  42ca0c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ca10:	mov	x19, x0
  42ca14:	ldr	x1, [x21, #8]
  42ca18:	cbz	x1, 42de78 <wcrtomb@plt+0x29258>
  42ca1c:	add	x2, x0, #0x20
  42ca20:	mov	x0, x2
  42ca24:	bl	404910 <strcpy@plt>
  42ca28:	str	x0, [x19, #8]
  42ca2c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42ca30:	add	x0, x0, #0xc50
  42ca34:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ca38:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ca3c:	ldr	w3, [x21]
  42ca40:	mov	w5, #0x1                   	// #1
  42ca44:	str	x20, [x1, #960]
  42ca48:	ldr	x2, [x21, #16]
  42ca4c:	str	w5, [x4, #1100]
  42ca50:	ldr	x1, [x0, #48]
  42ca54:	str	w3, [x19]
  42ca58:	stp	x2, x1, [x19, #16]
  42ca5c:	str	x19, [x0, #48]
  42ca60:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ca64:	mov	w1, #0x1                   	// #1
  42ca68:	mov	w19, #0x0                   	// #0
  42ca6c:	strb	w1, [x0, #161]
  42ca70:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ca74:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ca78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ca7c:	mov	w1, #0x1                   	// #1
  42ca80:	mov	w19, #0x0                   	// #0
  42ca84:	str	x20, [x2, #896]
  42ca88:	strb	w1, [x0, #204]
  42ca8c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ca90:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ca94:	mov	w1, #0x1                   	// #1
  42ca98:	mov	w19, #0x0                   	// #0
  42ca9c:	strb	w1, [x0, #969]
  42caa0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42caa4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42caa8:	ldr	w1, [x0, #988]
  42caac:	tst	w1, #0xfffffffd
  42cab0:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42cab4:	mov	w1, #0x2                   	// #2
  42cab8:	mov	w19, #0x0                   	// #0
  42cabc:	str	w1, [x0, #988]
  42cac0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cac4:	mov	x0, x20
  42cac8:	bl	422258 <wcrtomb@plt+0x1d638>
  42cacc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cad0:	ldr	x1, [x25]
  42cad4:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42cad8:	mov	w19, #0x0                   	// #0
  42cadc:	add	x0, x0, #0x108
  42cae0:	bl	42c770 <wcrtomb@plt+0x27b50>
  42cae4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cae8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42caec:	add	x0, x0, #0xb60
  42caf0:	bl	42c860 <wcrtomb@plt+0x27c40>
  42caf4:	cmp	w19, #0x14e
  42caf8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cafc:	mov	w3, #0x1                   	// #1
  42cb00:	mov	x0, x20
  42cb04:	cset	w1, eq  // eq = none
  42cb08:	mov	w19, #0x0                   	// #0
  42cb0c:	str	w3, [x2, #784]
  42cb10:	bl	432938 <wcrtomb@plt+0x2dd18>
  42cb14:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb18:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42cb1c:	add	x0, x0, #0xb60
  42cb20:	bl	42c860 <wcrtomb@plt+0x27c40>
  42cb24:	mov	w19, #0x0                   	// #0
  42cb28:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cb2c:	mov	w1, #0x1                   	// #1
  42cb30:	str	w1, [x0, #784]
  42cb34:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb38:	mov	x0, x20
  42cb3c:	mov	w19, #0x0                   	// #0
  42cb40:	bl	431570 <wcrtomb@plt+0x2c950>
  42cb44:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb48:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cb4c:	mov	w19, #0x0                   	// #0
  42cb50:	str	x20, [x0, #792]
  42cb54:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb58:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cb5c:	mov	w1, #0x1                   	// #1
  42cb60:	mov	w19, #0x0                   	// #0
  42cb64:	strb	w1, [x0, #681]
  42cb68:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb6c:	mov	x0, x20
  42cb70:	mov	w19, #0x0                   	// #0
  42cb74:	bl	4304b0 <wcrtomb@plt+0x2b890>
  42cb78:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cb80:	ldr	x1, [x0, #744]
  42cb84:	cbnz	x1, 42e1e4 <wcrtomb@plt+0x295c4>
  42cb88:	str	x20, [x0, #744]
  42cb8c:	mov	w19, #0x0                   	// #0
  42cb90:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cb94:	cbz	x20, 42de4c <wcrtomb@plt+0x2922c>
  42cb98:	mov	x0, x20
  42cb9c:	bl	42c270 <wcrtomb@plt+0x27650>
  42cba0:	mov	w19, #0x0                   	// #0
  42cba4:	adrp	x1, 42b000 <wcrtomb@plt+0x263e0>
  42cba8:	add	x1, x1, #0x9a0
  42cbac:	bl	404270 <signal@plt>
  42cbb0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cbb4:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cbb8:	mov	w3, #0x1                   	// #1
  42cbbc:	add	x1, sp, #0x98
  42cbc0:	mov	x0, x20
  42cbc4:	strb	w3, [x2, #1040]
  42cbc8:	mov	w2, #0xa                   	// #10
  42cbcc:	bl	403fe0 <strtoul@plt>
  42cbd0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cbd4:	ldr	x2, [sp, #152]
  42cbd8:	str	w0, [x1, #736]
  42cbdc:	ldrb	w0, [x2]
  42cbe0:	cbz	w0, 42cc10 <wcrtomb@plt+0x27ff0>
  42cbe4:	cmp	w0, #0x2e
  42cbe8:	b.ne	42e0e8 <wcrtomb@plt+0x294c8>  // b.any
  42cbec:	add	x1, sp, #0x98
  42cbf0:	add	x0, x2, #0x1
  42cbf4:	mov	w2, #0xa                   	// #10
  42cbf8:	bl	403fe0 <strtoul@plt>
  42cbfc:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cc00:	ldr	x1, [sp, #152]
  42cc04:	str	w0, [x2, #216]
  42cc08:	ldrb	w0, [x1]
  42cc0c:	cbnz	w0, 42e0e8 <wcrtomb@plt+0x294c8>
  42cc10:	mov	w19, #0x0                   	// #0
  42cc14:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cc18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cc1c:	mov	w1, #0x1                   	// #1
  42cc20:	mov	w19, #0x0                   	// #0
  42cc24:	str	x20, [x25, #24]
  42cc28:	strb	w1, [x0, #885]
  42cc2c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cc30:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  42cc34:	add	x3, sp, #0x98
  42cc38:	add	x4, x4, #0x7e8
  42cc3c:	mov	x0, x20
  42cc40:	mov	w2, #0xa                   	// #10
  42cc44:	mov	x1, #0x0                   	// #0
  42cc48:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42cc4c:	cbnz	w0, 42e098 <wcrtomb@plt+0x29478>
  42cc50:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cc54:	mov	w19, #0x0                   	// #0
  42cc58:	ldr	x1, [sp, #152]
  42cc5c:	str	x1, [x0, #1008]
  42cc60:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cc64:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cc68:	mov	w1, #0x1                   	// #1
  42cc6c:	mov	w19, #0x0                   	// #0
  42cc70:	strb	w1, [x0, #968]
  42cc74:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cc78:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cc7c:	ldr	w1, [x0, #988]
  42cc80:	cmp	w1, #0x0
  42cc84:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  42cc88:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42cc8c:	mov	w1, #0x9                   	// #9
  42cc90:	mov	w19, #0x0                   	// #0
  42cc94:	str	w1, [x0, #988]
  42cc98:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cc9c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42cca0:	adrp	x21, 494000 <_obstack_memory_used@@Base+0x42bf0>
  42cca4:	add	x21, x21, #0x180
  42cca8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42ccac:	ldr	x5, [x0, #992]
  42ccb0:	add	x21, x21, #0x38
  42ccb4:	add	x2, x2, #0x960
  42ccb8:	mov	x1, x20
  42ccbc:	mov	x3, x21
  42ccc0:	add	x2, x2, #0x190
  42ccc4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ccc8:	mov	x4, #0x4                   	// #4
  42cccc:	add	x0, x0, #0xbc8
  42ccd0:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  42ccd4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ccd8:	ldr	w0, [x21, x0, lsl #2]
  42ccdc:	mov	w19, #0x0                   	// #0
  42cce0:	str	w0, [x1, #648]
  42cce4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cce8:	ldr	x1, [x25]
  42ccec:	mov	w0, #0x5                   	// #5
  42ccf0:	mov	w19, #0x0                   	// #0
  42ccf4:	bl	42c688 <wcrtomb@plt+0x27a68>
  42ccf8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ccfc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42cd00:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42cd04:	add	x19, x19, #0x960
  42cd08:	mov	x1, x20
  42cd0c:	ldr	x5, [x0, #992]
  42cd10:	add	x3, x19, #0x148
  42cd14:	add	x2, x19, #0x150
  42cd18:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42cd1c:	mov	x4, #0x4                   	// #4
  42cd20:	add	x0, x0, #0xa58
  42cd24:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  42cd28:	add	x0, x19, x0, lsl #2
  42cd2c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cd30:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cd34:	mov	w3, #0x1                   	// #1
  42cd38:	mov	w19, #0x0                   	// #0
  42cd3c:	ldr	w0, [x0, #328]
  42cd40:	strb	w3, [x2, #1040]
  42cd44:	str	w0, [x1, #1044]
  42cd48:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cd4c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cd50:	mov	w1, #0x1                   	// #1
  42cd54:	mov	w19, #0x0                   	// #0
  42cd58:	strb	w1, [x0, #826]
  42cd5c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cd60:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42cd64:	add	x0, x0, #0xb60
  42cd68:	bl	42c860 <wcrtomb@plt+0x27c40>
  42cd6c:	mov	w19, #0x0                   	// #0
  42cd70:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cd74:	mov	w1, #0x1                   	// #1
  42cd78:	str	w1, [x0, #1112]
  42cd7c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cd80:	bl	41a090 <wcrtomb@plt+0x15470>
  42cd84:	bl	4412e8 <argp_parse@@Base+0x1508>
  42cd88:	mov	w0, #0x0                   	// #0
  42cd8c:	bl	404020 <exit@plt>
  42cd90:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cd94:	mov	w1, #0x1                   	// #1
  42cd98:	mov	w19, #0x0                   	// #0
  42cd9c:	str	w1, [x0, #1108]
  42cda0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cda4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cda8:	mov	w19, #0x0                   	// #0
  42cdac:	str	x20, [x0, #936]
  42cdb0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cdb4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42cdb8:	mov	w19, #0x0                   	// #0
  42cdbc:	str	x20, [x0, #640]
  42cdc0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cdc4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cdc8:	mov	w1, #0x1                   	// #1
  42cdcc:	mov	w19, #0x0                   	// #0
  42cdd0:	strb	w1, [x0, #904]
  42cdd4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cdd8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cddc:	mov	w1, #0x1                   	// #1
  42cde0:	mov	w19, #0x0                   	// #0
  42cde4:	strb	w1, [x0, #872]
  42cde8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cdec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cdf0:	mov	w1, #0x1                   	// #1
  42cdf4:	mov	w19, #0x0                   	// #0
  42cdf8:	strb	w1, [x0, #162]
  42cdfc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ce00:	adrp	x4, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ce04:	add	x3, sp, #0x98
  42ce08:	add	x4, x4, #0x9e8
  42ce0c:	mov	x0, x20
  42ce10:	mov	w2, #0xa                   	// #10
  42ce14:	mov	x1, #0x0                   	// #0
  42ce18:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42ce1c:	cbnz	w0, 42e14c <wcrtomb@plt+0x2952c>
  42ce20:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ce24:	ldr	x0, [sp, #152]
  42ce28:	str	x0, [x1, #1048]
  42ce2c:	tst	x0, #0x1ff
  42ce30:	b.ne	42e10c <wcrtomb@plt+0x294ec>  // b.any
  42ce34:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ce38:	lsr	x0, x0, #9
  42ce3c:	mov	w19, #0x0                   	// #0
  42ce40:	str	w0, [x1, #876]
  42ce44:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ce48:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  42ce4c:	mov	x21, #0x0                   	// #0
  42ce50:	add	x22, x0, #0xb00
  42ce54:	ldr	x1, [x0, #2816]
  42ce58:	cbnz	x1, 42ce6c <wcrtomb@plt+0x2824c>
  42ce5c:	b	42e054 <wcrtomb@plt+0x29434>
  42ce60:	add	x21, x21, #0x1
  42ce64:	ldr	x1, [x22, x21, lsl #3]
  42ce68:	cbz	x1, 42e054 <wcrtomb@plt+0x29434>
  42ce6c:	mov	x0, x20
  42ce70:	bl	404710 <strcmp@plt>
  42ce74:	mov	w19, w0
  42ce78:	cbnz	w0, 42ce60 <wcrtomb@plt+0x28240>
  42ce7c:	mov	w1, w21
  42ce80:	mov	x0, #0x0                   	// #0
  42ce84:	bl	44d210 <argp_parse@@Base+0xd430>
  42ce88:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ce8c:	ldrb	w1, [x20]
  42ce90:	cbz	w1, 42ceac <wcrtomb@plt+0x2828c>
  42ce94:	nop
  42ce98:	mov	w2, #0x1                   	// #1
  42ce9c:	mov	x0, #0x0                   	// #0
  42cea0:	bl	44d230 <argp_parse@@Base+0xd450>
  42cea4:	ldrb	w1, [x20, #1]!
  42cea8:	cbnz	w1, 42ce98 <wcrtomb@plt+0x28278>
  42ceac:	mov	w19, #0x0                   	// #0
  42ceb0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ceb4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ceb8:	mov	w19, #0x0                   	// #0
  42cebc:	add	x0, x0, #0xb60
  42cec0:	bl	42c860 <wcrtomb@plt+0x27c40>
  42cec4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cec8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cecc:	mov	w1, #0x1                   	// #1
  42ced0:	mov	w19, #0x0                   	// #0
  42ced4:	strb	w1, [x0, #213]
  42ced8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cedc:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42cee0:	mov	w19, #0x0                   	// #0
  42cee4:	add	x0, x0, #0x830
  42cee8:	bl	42c860 <wcrtomb@plt+0x27c40>
  42ceec:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cef0:	ldr	x21, [x25]
  42cef4:	mov	x0, #0x20                  	// #32
  42cef8:	ldr	x1, [x21, #8]
  42cefc:	cbz	x1, 42cf0c <wcrtomb@plt+0x282ec>
  42cf00:	mov	x0, x1
  42cf04:	bl	403ff0 <strlen@plt>
  42cf08:	add	x0, x0, #0x21
  42cf0c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42cf10:	mov	x19, x0
  42cf14:	ldr	x1, [x21, #8]
  42cf18:	cbz	x1, 42de44 <wcrtomb@plt+0x29224>
  42cf1c:	add	x2, x0, #0x20
  42cf20:	mov	x0, x2
  42cf24:	bl	404910 <strcpy@plt>
  42cf28:	str	x0, [x19, #8]
  42cf2c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42cf30:	add	x0, x0, #0xc50
  42cf34:	ldr	w1, [x21]
  42cf38:	ldr	x2, [x21, #16]
  42cf3c:	str	w1, [x19]
  42cf40:	ldr	x1, [x0, #40]
  42cf44:	str	x2, [x19, #16]
  42cf48:	str	x1, [x19, #24]
  42cf4c:	str	x19, [x0, #40]
  42cf50:	cbz	x20, 42de30 <wcrtomb@plt+0x29210>
  42cf54:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  42cf58:	add	x3, sp, #0x98
  42cf5c:	add	x4, x4, #0x7e8
  42cf60:	mov	x0, x20
  42cf64:	mov	w2, #0xa                   	// #10
  42cf68:	mov	x1, #0x0                   	// #0
  42cf6c:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42cf70:	cbnz	w0, 42e194 <wcrtomb@plt+0x29574>
  42cf74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cf78:	mov	w19, #0x0                   	// #0
  42cf7c:	ldr	x1, [sp, #152]
  42cf80:	str	x1, [x0, #888]
  42cf84:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cf88:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cf8c:	mov	w1, #0x1                   	// #1
  42cf90:	mov	w19, #0x0                   	// #0
  42cf94:	strb	w1, [x0, #800]
  42cf98:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cf9c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cfa0:	mov	w1, #0xffffffff            	// #-1
  42cfa4:	mov	w19, #0x0                   	// #0
  42cfa8:	str	w1, [x0, #784]
  42cfac:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cfb0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cfb4:	mov	w1, #0xffffffff            	// #-1
  42cfb8:	mov	w19, #0x0                   	// #0
  42cfbc:	str	w1, [x0, #1112]
  42cfc0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cfc4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cfc8:	mov	w19, #0x0                   	// #0
  42cfcc:	str	wzr, [x0, #200]
  42cfd0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cfd4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cfd8:	mov	w1, #0xffffffff            	// #-1
  42cfdc:	mov	w19, #0x0                   	// #0
  42cfe0:	str	w1, [x0, #740]
  42cfe4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cfe8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42cfec:	mov	w1, #0xffffffff            	// #-1
  42cff0:	mov	w19, #0x0                   	// #0
  42cff4:	str	w1, [x0, #1108]
  42cff8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42cffc:	ldrb	w1, [x20]
  42d000:	cbz	w1, 42ceac <wcrtomb@plt+0x2828c>
  42d004:	nop
  42d008:	mov	w2, #0x0                   	// #0
  42d00c:	mov	x0, #0x0                   	// #0
  42d010:	bl	44d230 <argp_parse@@Base+0xd450>
  42d014:	ldrb	w1, [x20, #1]!
  42d018:	cbnz	w1, 42d008 <wcrtomb@plt+0x283e8>
  42d01c:	mov	w19, #0x0                   	// #0
  42d020:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d024:	ldr	x1, [x25]
  42d028:	mov	w0, #0x1                   	// #1
  42d02c:	mov	w19, #0x0                   	// #0
  42d030:	bl	42c688 <wcrtomb@plt+0x27a68>
  42d034:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d038:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d03c:	mov	w19, #0x0                   	// #0
  42d040:	strb	wzr, [x0, #705]
  42d044:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d048:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d04c:	mov	w19, #0x0                   	// #0
  42d050:	strb	wzr, [x0, #1096]
  42d054:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d058:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d05c:	mov	w19, #0x0                   	// #0
  42d060:	strb	wzr, [x0, #160]
  42d064:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d068:	mov	w19, #0x0                   	// #0
  42d06c:	str	wzr, [x25, #40]
  42d070:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d074:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d078:	mov	w1, #0xffffffff            	// #-1
  42d07c:	mov	w19, #0x0                   	// #0
  42d080:	str	w1, [x0, #1024]
  42d084:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d088:	mov	x0, x20
  42d08c:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d090:	add	x1, x19, #0x2c8
  42d094:	bl	42b9d0 <wcrtomb@plt+0x26db0>
  42d098:	cmn	x0, #0x1
  42d09c:	b.eq	42deac <wcrtomb@plt+0x2928c>  // b.none
  42d0a0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d0a4:	mov	w19, #0x0                   	// #0
  42d0a8:	str	w0, [x1, #912]
  42d0ac:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d0b0:	ldr	x1, [x25]
  42d0b4:	mov	w0, #0x2                   	// #2
  42d0b8:	mov	w19, #0x0                   	// #0
  42d0bc:	bl	42c688 <wcrtomb@plt+0x27a68>
  42d0c0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d0c4:	adrp	x23, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42d0c8:	adrp	x24, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d0cc:	add	x23, x23, #0x2c0
  42d0d0:	add	x24, x24, #0xb50
  42d0d4:	add	x0, sp, #0x98
  42d0d8:	adrp	x4, 404000 <fputs@plt>
  42d0dc:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  42d0e0:	add	x4, x4, #0x7b0
  42d0e4:	add	x3, x3, #0x1a0
  42d0e8:	mov	x2, #0x0                   	// #0
  42d0ec:	mov	x1, #0x0                   	// #0
  42d0f0:	bl	451000 <_obstack_begin@@Base>
  42d0f4:	ldrb	w0, [x20]
  42d0f8:	ldp	x19, x22, [sp, #176]
  42d0fc:	cbz	w0, 42d160 <wcrtomb@plt+0x28540>
  42d100:	mov	x1, x23
  42d104:	mov	x0, x20
  42d108:	bl	404a90 <strcspn@plt>
  42d10c:	sub	x22, x22, x19
  42d110:	mov	x2, x0
  42d114:	mov	x27, x0
  42d118:	mov	w1, #0x3d                  	// #61
  42d11c:	mov	x0, x20
  42d120:	bl	404960 <memchr@plt>
  42d124:	mov	x21, x0
  42d128:	cbnz	x0, 42dc94 <wcrtomb@plt+0x29074>
  42d12c:	cmp	x27, x22
  42d130:	b.hi	42dd3c <wcrtomb@plt+0x2911c>  // b.pmore
  42d134:	mov	x0, x19
  42d138:	mov	x2, x27
  42d13c:	mov	x1, x20
  42d140:	bl	403f70 <memcpy@plt>
  42d144:	ldr	x19, [sp, #176]
  42d148:	add	x19, x19, x27
  42d14c:	str	x19, [sp, #176]
  42d150:	ldrb	w0, [x20, x27]
  42d154:	add	x20, x20, x27
  42d158:	cbnz	w0, 42dd78 <wcrtomb@plt+0x29158>
  42d15c:	ldr	x22, [sp, #184]
  42d160:	cmp	x22, x19
  42d164:	b.eq	42df70 <wcrtomb@plt+0x29350>  // b.none
  42d168:	add	x0, x19, #0x1
  42d16c:	str	x0, [sp, #176]
  42d170:	strb	wzr, [x19]
  42d174:	ldp	x0, x3, [sp, #168]
  42d178:	cmp	x0, x3
  42d17c:	b.eq	42dee4 <wcrtomb@plt+0x292c4>  // b.none
  42d180:	ldr	x1, [sp, #200]
  42d184:	ldr	x2, [sp, #160]
  42d188:	add	x3, x3, x1
  42d18c:	ldr	x4, [sp, #184]
  42d190:	bic	x1, x3, x1
  42d194:	str	x1, [sp, #176]
  42d198:	sub	x3, x1, x2
  42d19c:	sub	x2, x4, x2
  42d1a0:	cmp	x3, x2
  42d1a4:	b.ls	42d1b0 <wcrtomb@plt+0x28590>  // b.plast
  42d1a8:	mov	x1, x4
  42d1ac:	str	x4, [sp, #176]
  42d1b0:	str	x1, [sp, #168]
  42d1b4:	bl	450328 <argp_parse@@Base+0x10548>
  42d1b8:	mov	x1, #0x0                   	// #0
  42d1bc:	mov	x20, x0
  42d1c0:	add	x0, sp, #0x98
  42d1c4:	bl	451360 <_obstack_free@@Base>
  42d1c8:	mov	w0, #0x1                   	// #1
  42d1cc:	strb	w0, [x25, #17]
  42d1d0:	mov	x0, x20
  42d1d4:	mov	w19, #0x0                   	// #0
  42d1d8:	bl	416030 <wcrtomb@plt+0x11410>
  42d1dc:	mov	x0, x20
  42d1e0:	bl	4047b0 <free@plt>
  42d1e4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d1e8:	ldr	x1, [x25]
  42d1ec:	mov	w0, #0x0                   	// #0
  42d1f0:	mov	w19, #0x0                   	// #0
  42d1f4:	bl	42c688 <wcrtomb@plt+0x27a68>
  42d1f8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d1fc:	ldr	x19, [x25]
  42d200:	mov	x0, #0x20                  	// #32
  42d204:	ldr	x1, [x19, #8]
  42d208:	cbz	x1, 42d218 <wcrtomb@plt+0x285f8>
  42d20c:	mov	x0, x1
  42d210:	bl	403ff0 <strlen@plt>
  42d214:	add	x0, x0, #0x21
  42d218:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42d21c:	mov	x21, x0
  42d220:	ldr	x1, [x19, #8]
  42d224:	cbz	x1, 42de60 <wcrtomb@plt+0x29240>
  42d228:	add	x2, x0, #0x20
  42d22c:	mov	x0, x2
  42d230:	bl	404910 <strcpy@plt>
  42d234:	str	x0, [x21, #8]
  42d238:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d23c:	add	x0, x0, #0xc50
  42d240:	adrp	x5, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d244:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d248:	ldr	w3, [x19]
  42d24c:	mov	w6, #0x1                   	// #1
  42d250:	ldr	x2, [x19, #16]
  42d254:	strb	w6, [x5, #971]
  42d258:	ldr	x1, [x0, #88]
  42d25c:	str	x20, [x4, #696]
  42d260:	mov	w19, #0x0                   	// #0
  42d264:	str	w3, [x21]
  42d268:	stp	x2, x1, [x21, #16]
  42d26c:	str	x21, [x0, #88]
  42d270:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d274:	mov	x0, x20
  42d278:	mov	w19, #0x0                   	// #0
  42d27c:	bl	41e708 <wcrtomb@plt+0x19ae8>
  42d280:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d284:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d288:	add	x3, x3, #0xa8
  42d28c:	ldr	x0, [x3, #8]
  42d290:	tbz	x0, #63, 42e174 <wcrtomb@plt+0x29554>
  42d294:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d298:	add	x1, x1, #0x9c0
  42d29c:	mov	x2, x20
  42d2a0:	add	x0, x25, #0x8
  42d2a4:	bl	42c470 <wcrtomb@plt+0x27850>
  42d2a8:	ldr	x19, [x25]
  42d2ac:	mov	x0, #0x20                  	// #32
  42d2b0:	ldr	x1, [x19, #8]
  42d2b4:	cbz	x1, 42d2c4 <wcrtomb@plt+0x286a4>
  42d2b8:	mov	x0, x1
  42d2bc:	bl	403ff0 <strlen@plt>
  42d2c0:	add	x0, x0, #0x21
  42d2c4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42d2c8:	mov	x20, x0
  42d2cc:	ldr	x1, [x19, #8]
  42d2d0:	cbz	x1, 42dd98 <wcrtomb@plt+0x29178>
  42d2d4:	add	x2, x0, #0x20
  42d2d8:	mov	x0, x2
  42d2dc:	bl	404910 <strcpy@plt>
  42d2e0:	str	x0, [x20, #8]
  42d2e4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d2e8:	add	x0, x0, #0xc50
  42d2ec:	ldr	w3, [x19]
  42d2f0:	ldr	x2, [x19, #16]
  42d2f4:	mov	w19, #0x0                   	// #0
  42d2f8:	ldr	x1, [x0, #56]
  42d2fc:	str	w3, [x20]
  42d300:	stp	x2, x1, [x20, #16]
  42d304:	str	x20, [x0, #56]
  42d308:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d30c:	mov	x2, x20
  42d310:	add	x0, x25, #0x8
  42d314:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d318:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d31c:	add	x3, x3, #0x398
  42d320:	add	x1, x1, #0xa30
  42d324:	bl	42c470 <wcrtomb@plt+0x27850>
  42d328:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d32c:	ldr	w1, [x0, #184]
  42d330:	cbnz	w1, 42ceac <wcrtomb@plt+0x2828c>
  42d334:	mov	w1, #0x1                   	// #1
  42d338:	mov	w19, #0x0                   	// #0
  42d33c:	str	w1, [x0, #184]
  42d340:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d344:	mov	x0, x20
  42d348:	bl	446fb0 <argp_parse@@Base+0x71d0>
  42d34c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d350:	str	x0, [x1, #728]
  42d354:	cbz	x0, 42e204 <wcrtomb@plt+0x295e4>
  42d358:	mov	w0, #0x0                   	// #0
  42d35c:	bl	404a80 <umask@plt>
  42d360:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d364:	mov	w19, #0x0                   	// #0
  42d368:	str	w0, [x1, #208]
  42d36c:	bl	404a80 <umask@plt>
  42d370:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d374:	ldr	x1, [x25]
  42d378:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42d37c:	mov	w19, #0x0                   	// #0
  42d380:	add	x0, x0, #0xf8
  42d384:	bl	42c770 <wcrtomb@plt+0x27b50>
  42d388:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d38c:	ldr	x1, [x25]
  42d390:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42d394:	mov	w19, #0x0                   	// #0
  42d398:	add	x0, x0, #0xd8
  42d39c:	bl	42c770 <wcrtomb@plt+0x27b50>
  42d3a0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d3a4:	ldr	x1, [x25]
  42d3a8:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42d3ac:	mov	w19, #0x0                   	// #0
  42d3b0:	add	x0, x0, #0xc8
  42d3b4:	bl	42c770 <wcrtomb@plt+0x27b50>
  42d3b8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d3bc:	add	x1, sp, #0x98
  42d3c0:	mov	w2, #0xa                   	// #10
  42d3c4:	mov	x0, x20
  42d3c8:	bl	403fe0 <strtoul@plt>
  42d3cc:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d3d0:	mov	w19, #0x0                   	// #0
  42d3d4:	ldr	x1, [sp, #152]
  42d3d8:	str	w0, [x2, #908]
  42d3dc:	ldrb	w0, [x1]
  42d3e0:	cbz	w0, 42c9b4 <wcrtomb@plt+0x27d94>
  42d3e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d3e8:	ldr	x0, [x0, #1136]
  42d3ec:	cbz	x0, 42d3f4 <wcrtomb@plt+0x287d4>
  42d3f0:	blr	x0
  42d3f4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d3f8:	add	x1, x1, #0xa10
  42d3fc:	mov	w2, #0x5                   	// #5
  42d400:	mov	x0, #0x0                   	// #0
  42d404:	bl	4049c0 <dcgettext@plt>
  42d408:	mov	x2, x0
  42d40c:	mov	w1, #0x0                   	// #0
  42d410:	mov	w0, #0x0                   	// #0
  42d414:	bl	404050 <error@plt>
  42d418:	mov	w0, #0x2                   	// #2
  42d41c:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42d420:	ldr	x1, [x25]
  42d424:	mov	w0, #0x6                   	// #6
  42d428:	mov	w19, #0x0                   	// #0
  42d42c:	bl	42c688 <wcrtomb@plt+0x27a68>
  42d430:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d434:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d438:	mov	w1, #0x1                   	// #1
  42d43c:	mov	w19, #0x0                   	// #0
  42d440:	strb	w1, [x0, #752]
  42d444:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d448:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d44c:	mov	w19, #0x0                   	// #0
  42d450:	str	x20, [x0, #1088]
  42d454:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d458:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d45c:	mov	w1, #0x1                   	// #1
  42d460:	mov	w19, #0x0                   	// #0
  42d464:	strb	w1, [x0, #1081]
  42d468:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d46c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d470:	mov	w1, #0x1                   	// #1
  42d474:	mov	w19, #0x0                   	// #0
  42d478:	strb	w1, [x0, #705]
  42d47c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d480:	mov	x0, x20
  42d484:	mov	w19, #0x0                   	// #0
  42d488:	bl	41e7c0 <wcrtomb@plt+0x19ba0>
  42d48c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d490:	mov	x0, x20
  42d494:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d498:	add	x1, x19, #0x290
  42d49c:	bl	42b9d0 <wcrtomb@plt+0x26db0>
  42d4a0:	cmn	x0, #0x1
  42d4a4:	b.eq	42de88 <wcrtomb@plt+0x29268>  // b.none
  42d4a8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d4ac:	mov	w19, #0x0                   	// #0
  42d4b0:	str	w0, [x1, #832]
  42d4b4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d4b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d4bc:	mov	w1, #0x1                   	// #1
  42d4c0:	mov	w19, #0x0                   	// #0
  42d4c4:	strb	w1, [x0, #824]
  42d4c8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d4cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d4d0:	mov	w1, #0x1                   	// #1
  42d4d4:	mov	w19, #0x0                   	// #0
  42d4d8:	strb	w1, [x0, #1144]
  42d4dc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d4e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d4e4:	ldr	w1, [x0, #988]
  42d4e8:	tst	w1, #0xfffffffb
  42d4ec:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42d4f0:	mov	w1, #0x4                   	// #4
  42d4f4:	mov	w19, #0x0                   	// #0
  42d4f8:	str	w1, [x0, #988]
  42d4fc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d500:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d504:	mov	w1, #0x1                   	// #1
  42d508:	mov	w19, #0x0                   	// #0
  42d50c:	strb	w1, [x0, #212]
  42d510:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d514:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d518:	mov	w1, #0x1                   	// #1
  42d51c:	mov	w19, #0x0                   	// #0
  42d520:	strb	w1, [x0, #1096]
  42d524:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d528:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d52c:	mov	w1, #0x2                   	// #2
  42d530:	mov	w19, #0x0                   	// #0
  42d534:	str	w1, [x0, #184]
  42d538:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d53c:	mov	x0, x20
  42d540:	mov	w19, #0x0                   	// #0
  42d544:	bl	409d38 <wcrtomb@plt+0x5118>
  42d548:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d54c:	cbz	x20, 42ded0 <wcrtomb@plt+0x292b0>
  42d550:	ldrb	w0, [x20]
  42d554:	cmp	w0, #0x2e
  42d558:	b.eq	42df9c <wcrtomb@plt+0x2937c>  // b.none
  42d55c:	add	x1, sp, #0x98
  42d560:	mov	w2, #0x0                   	// #0
  42d564:	mov	x0, x20
  42d568:	bl	403fe0 <strtoul@plt>
  42d56c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d570:	mov	w19, #0x0                   	// #0
  42d574:	ldr	x1, [sp, #152]
  42d578:	str	w0, [x2, #984]
  42d57c:	ldrb	w0, [x1]
  42d580:	cbz	w0, 42c9b4 <wcrtomb@plt+0x27d94>
  42d584:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d588:	ldr	x0, [x0, #1136]
  42d58c:	cbz	x0, 42d594 <wcrtomb@plt+0x28974>
  42d590:	blr	x0
  42d594:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d598:	add	x1, x1, #0xaa8
  42d59c:	mov	w2, #0x5                   	// #5
  42d5a0:	mov	x0, #0x0                   	// #0
  42d5a4:	bl	4049c0 <dcgettext@plt>
  42d5a8:	mov	x2, x0
  42d5ac:	mov	w1, #0x0                   	// #0
  42d5b0:	mov	w0, #0x0                   	// #0
  42d5b4:	bl	404050 <error@plt>
  42d5b8:	bl	410460 <wcrtomb@plt+0xb840>
  42d5bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d5c0:	mov	w1, #0x1                   	// #1
  42d5c4:	mov	w19, #0x0                   	// #0
  42d5c8:	strb	w1, [x0, #160]
  42d5cc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d5d0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d5d4:	mov	w1, #0x1                   	// #1
  42d5d8:	strb	w1, [x0, #885]
  42d5dc:	cbz	x20, 42ceac <wcrtomb@plt+0x2828c>
  42d5e0:	mov	w19, #0x0                   	// #0
  42d5e4:	str	x20, [x25, #32]
  42d5e8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d5ec:	mov	w0, #0x1                   	// #1
  42d5f0:	cbz	x20, 42d628 <wcrtomb@plt+0x28a08>
  42d5f4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d5f8:	adrp	x19, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42d5fc:	add	x19, x19, #0x960
  42d600:	mov	x1, x20
  42d604:	ldr	x5, [x0, #992]
  42d608:	add	x3, x19, #0x168
  42d60c:	add	x2, x19, #0x170
  42d610:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d614:	mov	x4, #0x4                   	// #4
  42d618:	add	x0, x0, #0xa90
  42d61c:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  42d620:	add	x19, x19, x0, lsl #2
  42d624:	ldr	w0, [x19, #360]
  42d628:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d62c:	mov	w19, #0x0                   	// #0
  42d630:	str	w0, [x1, #684]
  42d634:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d638:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d63c:	add	x0, x0, #0xb60
  42d640:	bl	42c860 <wcrtomb@plt+0x27c40>
  42d644:	mov	w19, #0x0                   	// #0
  42d648:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d64c:	mov	w1, #0x1                   	// #1
  42d650:	str	w1, [x0, #1024]
  42d654:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d658:	ldr	x1, [x25]
  42d65c:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42d660:	mov	w19, #0x0                   	// #0
  42d664:	add	x0, x0, #0xa0
  42d668:	bl	42c770 <wcrtomb@plt+0x27b50>
  42d66c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d670:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d674:	ldr	w1, [x0, #988]
  42d678:	cmp	w1, #0x0
  42d67c:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  42d680:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42d684:	mov	w1, #0x6                   	// #6
  42d688:	mov	w19, #0x0                   	// #0
  42d68c:	str	w1, [x0, #988]
  42d690:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d694:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d698:	mov	w1, #0x1                   	// #1
  42d69c:	mov	w19, #0x0                   	// #0
  42d6a0:	strb	w1, [x0, #720]
  42d6a4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d6a8:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d6ac:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d6b0:	mov	w4, #0x3000                	// #12288
  42d6b4:	mov	w19, #0x0                   	// #0
  42d6b8:	ldr	w1, [x3, #772]
  42d6bc:	movk	w4, #0x58, lsl #16
  42d6c0:	ldr	w0, [x2, #432]
  42d6c4:	add	w1, w1, #0x1
  42d6c8:	str	w1, [x3, #772]
  42d6cc:	orr	w0, w0, w4
  42d6d0:	str	w0, [x2, #432]
  42d6d4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d6d8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d6dc:	ldr	w1, [x0, #988]
  42d6e0:	tst	w1, #0xfffffff7
  42d6e4:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42d6e8:	mov	w1, #0x8                   	// #8
  42d6ec:	mov	w19, #0x0                   	// #0
  42d6f0:	str	w1, [x0, #988]
  42d6f4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d6f8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d6fc:	ldr	w1, [x0, #988]
  42d700:	cmp	w1, #0x0
  42d704:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  42d708:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42d70c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d710:	mov	w2, #0x7                   	// #7
  42d714:	str	w2, [x0, #988]
  42d718:	mov	w19, #0x0                   	// #0
  42d71c:	ldr	w0, [x1, #772]
  42d720:	add	w0, w0, #0x1
  42d724:	str	w0, [x1, #772]
  42d728:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d72c:	ldr	x19, [x25]
  42d730:	mov	x0, #0x20                  	// #32
  42d734:	ldr	x1, [x19, #8]
  42d738:	cbz	x1, 42d748 <wcrtomb@plt+0x28b28>
  42d73c:	mov	x0, x1
  42d740:	bl	403ff0 <strlen@plt>
  42d744:	add	x0, x0, #0x21
  42d748:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42d74c:	mov	x20, x0
  42d750:	ldr	x1, [x19, #8]
  42d754:	cbz	x1, 42de70 <wcrtomb@plt+0x29250>
  42d758:	add	x2, x0, #0x20
  42d75c:	mov	x0, x2
  42d760:	bl	404910 <strcpy@plt>
  42d764:	str	x0, [x20, #8]
  42d768:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d76c:	add	x0, x0, #0xc50
  42d770:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d774:	ldr	w3, [x19]
  42d778:	mov	w4, #0x1                   	// #1
  42d77c:	strb	w4, [x1, #768]
  42d780:	ldr	x2, [x19, #16]
  42d784:	mov	w19, #0x0                   	// #0
  42d788:	ldr	x1, [x0, #80]
  42d78c:	str	w3, [x20]
  42d790:	stp	x2, x1, [x20, #16]
  42d794:	str	x20, [x0, #80]
  42d798:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d79c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d7a0:	ldr	w1, [x0, #988]
  42d7a4:	cmp	w1, #0x1
  42d7a8:	b.hi	42e108 <wcrtomb@plt+0x294e8>  // b.pmore
  42d7ac:	mov	w1, #0x1                   	// #1
  42d7b0:	mov	w19, #0x0                   	// #0
  42d7b4:	str	w1, [x0, #988]
  42d7b8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d7bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d7c0:	mov	w1, #0x1                   	// #1
  42d7c4:	mov	w19, #0x0                   	// #0
  42d7c8:	str	w1, [x0, #740]
  42d7cc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d7d0:	mov	w0, #0x1                   	// #1
  42d7d4:	mov	w19, #0x0                   	// #0
  42d7d8:	strb	w0, [x25, #16]
  42d7dc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d7e0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d7e4:	mov	w1, #0x1                   	// #1
  42d7e8:	mov	w19, #0x0                   	// #0
  42d7ec:	str	w1, [x0, #200]
  42d7f0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d7f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d7f8:	mov	w1, #0x1                   	// #1
  42d7fc:	mov	w19, #0x0                   	// #0
  42d800:	strb	w1, [x0, #680]
  42d804:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d808:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d80c:	mov	w1, #0x1                   	// #1
  42d810:	mov	w19, #0x0                   	// #0
  42d814:	str	w1, [x0, #3272]
  42d818:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d81c:	ldr	x1, [x25]
  42d820:	mov	w0, #0x4                   	// #4
  42d824:	mov	w19, #0x0                   	// #0
  42d828:	bl	42c688 <wcrtomb@plt+0x27a68>
  42d82c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d830:	ldr	x1, [x25]
  42d834:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42d838:	mov	w19, #0x0                   	// #0
  42d83c:	add	x0, x0, #0xb0
  42d840:	bl	42c770 <wcrtomb@plt+0x27b50>
  42d844:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d848:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d84c:	mov	w1, #0x1                   	// #1
  42d850:	mov	w19, #0x0                   	// #0
  42d854:	strb	w1, [x0, #205]
  42d858:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d85c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d860:	mov	w1, #0x1                   	// #1
  42d864:	mov	w19, #0x0                   	// #0
  42d868:	strb	w1, [x0, #704]
  42d86c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d870:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42d874:	add	x2, x2, #0xc50
  42d878:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d87c:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d880:	ldr	x1, [x19, #976]
  42d884:	ldr	x3, [x2, #112]
  42d888:	ldr	x0, [x21, #816]
  42d88c:	cmp	x1, x3
  42d890:	b.eq	42def4 <wcrtomb@plt+0x292d4>  // b.none
  42d894:	add	x2, x1, #0x1
  42d898:	str	x2, [x19, #976]
  42d89c:	mov	w19, #0x0                   	// #0
  42d8a0:	str	x20, [x0, x1, lsl #3]
  42d8a4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d8a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d8ac:	ldr	w1, [x0, #988]
  42d8b0:	cmp	w1, #0x0
  42d8b4:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  42d8b8:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42d8bc:	mov	w1, #0x3                   	// #3
  42d8c0:	mov	w19, #0x0                   	// #0
  42d8c4:	str	w1, [x0, #988]
  42d8c8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d8cc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d8d0:	ldr	w1, [x0, #988]
  42d8d4:	cmp	w1, #0x0
  42d8d8:	ccmp	w1, #0x5, #0x4, ne  // ne = any
  42d8dc:	b.ne	42e108 <wcrtomb@plt+0x294e8>  // b.any
  42d8e0:	mov	w1, #0x5                   	// #5
  42d8e4:	mov	w19, #0x0                   	// #0
  42d8e8:	str	w1, [x0, #988]
  42d8ec:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d8f0:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  42d8f4:	add	x3, sp, #0x98
  42d8f8:	add	x4, x4, #0x7e8
  42d8fc:	mov	x0, x20
  42d900:	mov	w2, #0xa                   	// #10
  42d904:	mov	x1, #0x0                   	// #0
  42d908:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42d90c:	cbnz	w0, 42d944 <wcrtomb@plt+0x28d24>
  42d910:	ldr	x0, [sp, #152]
  42d914:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d918:	str	w0, [x1, #876]
  42d91c:	cmp	w0, #0x0
  42d920:	sxtw	x1, w0
  42d924:	ccmp	x1, x0, #0x0, gt
  42d928:	b.ne	42d944 <wcrtomb@plt+0x28d24>  // b.any
  42d92c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d930:	lsl	x1, x0, #9
  42d934:	mov	w19, #0x0                   	// #0
  42d938:	str	x1, [x2, #1048]
  42d93c:	cmp	x0, x1, lsr #9
  42d940:	b.eq	42c9b4 <wcrtomb@plt+0x27d94>  // b.none
  42d944:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42d948:	ldr	x0, [x0, #1136]
  42d94c:	cbz	x0, 42d954 <wcrtomb@plt+0x28d34>
  42d950:	blr	x0
  42d954:	mov	x0, x20
  42d958:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42d95c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42d960:	mov	x19, x0
  42d964:	add	x1, x1, #0x9d0
  42d968:	mov	w2, #0x5                   	// #5
  42d96c:	mov	x0, #0x0                   	// #0
  42d970:	bl	4049c0 <dcgettext@plt>
  42d974:	mov	x4, x0
  42d978:	mov	x3, x19
  42d97c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42d980:	add	x2, x2, #0x618
  42d984:	mov	w1, #0x0                   	// #0
  42d988:	mov	w0, #0x0                   	// #0
  42d98c:	bl	404050 <error@plt>
  42d990:	mov	w0, #0x2                   	// #2
  42d994:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42d998:	mov	w0, #0x1                   	// #1
  42d99c:	mov	w19, #0x0                   	// #0
  42d9a0:	str	w0, [x25, #40]
  42d9a4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d9a8:	ldr	x1, [x25]
  42d9ac:	adrp	x0, 46d000 <_obstack_memory_used@@Base+0x1bbf0>
  42d9b0:	mov	w19, #0x0                   	// #0
  42d9b4:	add	x0, x0, #0xc08
  42d9b8:	bl	42c770 <wcrtomb@plt+0x27b50>
  42d9bc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42d9c0:	ldr	x19, [x25]
  42d9c4:	mov	x0, #0x20                  	// #32
  42d9c8:	ldr	x1, [x19, #8]
  42d9cc:	cbz	x1, 42d9dc <wcrtomb@plt+0x28dbc>
  42d9d0:	mov	x0, x1
  42d9d4:	bl	403ff0 <strlen@plt>
  42d9d8:	add	x0, x0, #0x21
  42d9dc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42d9e0:	mov	x20, x0
  42d9e4:	ldr	x1, [x19, #8]
  42d9e8:	cbz	x1, 42de80 <wcrtomb@plt+0x29260>
  42d9ec:	add	x2, x0, #0x20
  42d9f0:	mov	x0, x2
  42d9f4:	bl	404910 <strcpy@plt>
  42d9f8:	str	x0, [x20, #8]
  42d9fc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42da00:	add	x0, x0, #0xc50
  42da04:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42da08:	ldr	w3, [x19]
  42da0c:	mov	w4, #0x1                   	// #1
  42da10:	strb	w4, [x1, #970]
  42da14:	ldr	x2, [x19, #16]
  42da18:	mov	w19, #0x0                   	// #0
  42da1c:	ldr	x1, [x0, #64]
  42da20:	str	w3, [x20]
  42da24:	stp	x2, x1, [x20, #16]
  42da28:	str	x20, [x0, #64]
  42da2c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42da30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42da34:	mov	w19, #0x0                   	// #0
  42da38:	str	x20, [x0, #776]
  42da3c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42da40:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42da44:	mov	w1, #0x1                   	// #1
  42da48:	mov	w19, #0x0                   	// #0
  42da4c:	strb	w1, [x0, #753]
  42da50:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42da54:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42da58:	add	x3, x3, #0xa8
  42da5c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42da60:	mov	w2, #0x1                   	// #1
  42da64:	ldr	x0, [x3, #8]
  42da68:	str	w2, [x1, #1100]
  42da6c:	tbz	x0, #63, 42e174 <wcrtomb@plt+0x29554>
  42da70:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42da74:	add	x1, x1, #0x9b0
  42da78:	b	42d29c <wcrtomb@plt+0x2867c>
  42da7c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42da80:	mov	w1, #0x1                   	// #1
  42da84:	mov	w19, #0x0                   	// #0
  42da88:	strb	w1, [x0, #204]
  42da8c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42da90:	adrp	x19, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42da94:	add	x19, x19, #0x9e8
  42da98:	mov	x4, x19
  42da9c:	add	x3, sp, #0x78
  42daa0:	add	x1, sp, #0x98
  42daa4:	mov	x0, x20
  42daa8:	mov	w2, #0xa                   	// #10
  42daac:	bl	4503d0 <argp_parse@@Base+0x105f0>
  42dab0:	cbnz	w0, 42e0c0 <wcrtomb@plt+0x294a0>
  42dab4:	ldr	x0, [sp, #152]
  42dab8:	ldr	d8, [sp, #120]
  42dabc:	cmp	x0, x20
  42dac0:	b.ls	42dad4 <wcrtomb@plt+0x28eb4>  // b.plast
  42dac4:	ldurb	w1, [x0, #-1]
  42dac8:	mov	x0, x19
  42dacc:	bl	404870 <strchr@plt>
  42dad0:	cbz	x0, 42dc80 <wcrtomb@plt+0x29060>
  42dad4:	ucvtf	d0, d8
  42dad8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42dadc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42dae0:	mov	w1, #0x1                   	// #1
  42dae4:	mov	w19, #0x0                   	// #0
  42dae8:	strb	w1, [x0, #204]
  42daec:	str	d0, [x2, #760]
  42daf0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42daf4:	ldr	x19, [x25]
  42daf8:	mov	x0, #0x20                  	// #32
  42dafc:	ldr	x1, [x19, #8]
  42db00:	cbz	x1, 42db10 <wcrtomb@plt+0x28ef0>
  42db04:	mov	x0, x1
  42db08:	bl	403ff0 <strlen@plt>
  42db0c:	add	x0, x0, #0x21
  42db10:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42db14:	mov	x21, x0
  42db18:	ldr	x1, [x19, #8]
  42db1c:	cbz	x1, 42de28 <wcrtomb@plt+0x29208>
  42db20:	add	x2, x0, #0x20
  42db24:	mov	x0, x2
  42db28:	bl	404910 <strcpy@plt>
  42db2c:	str	x0, [x21, #8]
  42db30:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42db34:	add	x1, x1, #0xc50
  42db38:	ldr	w4, [x19]
  42db3c:	mov	x0, x20
  42db40:	ldr	x3, [x19, #16]
  42db44:	str	w4, [x21]
  42db48:	ldr	x2, [x1, #72]
  42db4c:	stp	x3, x2, [x21, #16]
  42db50:	mov	w19, #0x0                   	// #0
  42db54:	str	x21, [x1, #72]
  42db58:	bl	422910 <wcrtomb@plt+0x1dcf0>
  42db5c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42db60:	ldr	x1, [x25]
  42db64:	mov	x0, x20
  42db68:	mov	w19, #0x0                   	// #0
  42db6c:	bl	42c770 <wcrtomb@plt+0x27b50>
  42db70:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42db74:	mov	x0, x20
  42db78:	mov	w19, #0x0                   	// #0
  42db7c:	bl	42c860 <wcrtomb@plt+0x27c40>
  42db80:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42db84:	ldr	x1, [x25]
  42db88:	adrp	x0, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42db8c:	mov	w19, #0x0                   	// #0
  42db90:	add	x0, x0, #0xe8
  42db94:	bl	42c770 <wcrtomb@plt+0x27b50>
  42db98:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42db9c:	ldr	x1, [x25]
  42dba0:	mov	w0, #0x3                   	// #3
  42dba4:	mov	w19, #0x0                   	// #0
  42dba8:	bl	42c688 <wcrtomb@plt+0x27a68>
  42dbac:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42dbb0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42dbb4:	mov	w1, #0x1                   	// #1
  42dbb8:	mov	w19, #0x0                   	// #0
  42dbbc:	strb	w1, [x0, #1040]
  42dbc0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42dbc4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42dbc8:	mov	w1, #0x1                   	// #1
  42dbcc:	mov	w19, #0x0                   	// #0
  42dbd0:	strb	w1, [x0, #801]
  42dbd4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42dbd8:	ldr	x19, [x25]
  42dbdc:	mov	x0, #0x20                  	// #32
  42dbe0:	ldr	x1, [x19, #8]
  42dbe4:	cbz	x1, 42dbf4 <wcrtomb@plt+0x28fd4>
  42dbe8:	mov	x0, x1
  42dbec:	bl	403ff0 <strlen@plt>
  42dbf0:	add	x0, x0, #0x21
  42dbf4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42dbf8:	mov	x20, x0
  42dbfc:	ldr	x1, [x19, #8]
  42dc00:	cbz	x1, 42de68 <wcrtomb@plt+0x29248>
  42dc04:	add	x2, x0, #0x20
  42dc08:	mov	x0, x2
  42dc0c:	bl	404910 <strcpy@plt>
  42dc10:	str	x0, [x20, #8]
  42dc14:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42dc18:	add	x0, x0, #0xc50
  42dc1c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42dc20:	ldr	w3, [x19]
  42dc24:	mov	w4, #0x1                   	// #1
  42dc28:	strb	w4, [x1, #1080]
  42dc2c:	ldr	x2, [x19, #16]
  42dc30:	mov	w19, #0x0                   	// #0
  42dc34:	ldr	x1, [x0, #96]
  42dc38:	str	w3, [x20]
  42dc3c:	stp	x2, x1, [x20, #16]
  42dc40:	str	x20, [x0, #96]
  42dc44:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42dc48:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42dc4c:	add	x1, x1, #0xbf8
  42dc50:	mov	x21, x2
  42dc54:	mov	x0, #0x0                   	// #0
  42dc58:	mov	w2, #0x5                   	// #5
  42dc5c:	bl	4049c0 <dcgettext@plt>
  42dc60:	mov	x1, x0
  42dc64:	mov	x0, x21
  42dc68:	bl	43f6e0 <argp_error@@Base>
  42dc6c:	mov	w0, #0x40                  	// #64
  42dc70:	bl	404020 <exit@plt>
  42dc74:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42dc78:	add	x1, x1, #0x738
  42dc7c:	b	42c96c <wcrtomb@plt+0x27d4c>
  42dc80:	ucvtf	d0, d8
  42dc84:	mov	x0, #0x4090000000000000    	// #4652218415073722368
  42dc88:	fmov	d1, x0
  42dc8c:	fmul	d0, d0, d1
  42dc90:	b	42dad8 <wcrtomb@plt+0x28eb8>
  42dc94:	sub	x26, x0, x20
  42dc98:	add	x26, x26, #0x1
  42dc9c:	cmp	x26, x22
  42dca0:	b.hi	42dd50 <wcrtomb@plt+0x29130>  // b.pmore
  42dca4:	mov	x2, x26
  42dca8:	mov	x0, x19
  42dcac:	mov	x1, x20
  42dcb0:	bl	403f70 <memcpy@plt>
  42dcb4:	ldr	x2, [sp, #176]
  42dcb8:	sub	x19, x27, x26
  42dcbc:	ldrb	w22, [x21, #1]
  42dcc0:	add	x21, x21, #0x1
  42dcc4:	add	x26, x2, x26
  42dcc8:	str	x26, [sp, #176]
  42dccc:	cbz	w22, 42dd0c <wcrtomb@plt+0x290ec>
  42dcd0:	bl	404740 <__ctype_b_loc@plt>
  42dcd4:	ldr	x2, [x0]
  42dcd8:	b	42dce8 <wcrtomb@plt+0x290c8>
  42dcdc:	ldrb	w22, [x21, #1]!
  42dce0:	sub	x19, x19, #0x1
  42dce4:	cbz	w22, 42dd0c <wcrtomb@plt+0x290ec>
  42dce8:	ubfiz	x1, x22, #1, #8
  42dcec:	ldrh	w1, [x2, x1]
  42dcf0:	tbnz	w1, #13, 42dcdc <wcrtomb@plt+0x290bc>
  42dcf4:	cmp	w22, #0x7b
  42dcf8:	b.ne	42dd0c <wcrtomb@plt+0x290ec>  // b.any
  42dcfc:	add	x0, x21, x19
  42dd00:	ldurb	w0, [x0, #-1]
  42dd04:	cmp	w0, #0x7d
  42dd08:	b.eq	42dda8 <wcrtomb@plt+0x29188>  // b.none
  42dd0c:	ldr	x0, [sp, #184]
  42dd10:	sub	x0, x0, x26
  42dd14:	cmp	x0, x19
  42dd18:	b.cc	42dd64 <wcrtomb@plt+0x29144>  // b.lo, b.ul, b.last
  42dd1c:	mov	x2, x19
  42dd20:	mov	x1, x21
  42dd24:	mov	x0, x26
  42dd28:	bl	403f70 <memcpy@plt>
  42dd2c:	ldr	x0, [sp, #176]
  42dd30:	add	x19, x0, x19
  42dd34:	str	x19, [sp, #176]
  42dd38:	b	42d150 <wcrtomb@plt+0x28530>
  42dd3c:	mov	x1, x27
  42dd40:	add	x0, sp, #0x98
  42dd44:	bl	4511d8 <_obstack_newchunk@@Base>
  42dd48:	ldr	x19, [sp, #176]
  42dd4c:	b	42d134 <wcrtomb@plt+0x28514>
  42dd50:	mov	x1, x26
  42dd54:	add	x0, sp, #0x98
  42dd58:	bl	4511d8 <_obstack_newchunk@@Base>
  42dd5c:	ldr	x19, [sp, #176]
  42dd60:	b	42dca4 <wcrtomb@plt+0x29084>
  42dd64:	mov	x1, x19
  42dd68:	add	x0, sp, #0x98
  42dd6c:	bl	4511d8 <_obstack_newchunk@@Base>
  42dd70:	ldr	x26, [sp, #176]
  42dd74:	b	42dd1c <wcrtomb@plt+0x290fc>
  42dd78:	ldr	x1, [sp, #184]
  42dd7c:	cmp	x1, x19
  42dd80:	b.eq	42df84 <wcrtomb@plt+0x29364>  // b.none
  42dd84:	add	x1, x19, #0x1
  42dd88:	str	x1, [sp, #176]
  42dd8c:	add	x20, x20, #0x1
  42dd90:	strb	w0, [x19]
  42dd94:	b	42d0f4 <wcrtomb@plt+0x284d4>
  42dd98:	str	xzr, [x0, #8]
  42dd9c:	b	42d2e4 <wcrtomb@plt+0x286c4>
  42dda0:	mov	w19, #0x7                   	// #7
  42dda4:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42dda8:	sub	x26, x19, #0x2
  42ddac:	mov	x0, x19
  42ddb0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ddb4:	mov	x22, x0
  42ddb8:	mov	x2, x26
  42ddbc:	add	x1, x21, #0x1
  42ddc0:	bl	403f70 <memcpy@plt>
  42ddc4:	strb	wzr, [x22, x26]
  42ddc8:	mov	x2, x22
  42ddcc:	add	x3, sp, #0x68
  42ddd0:	mov	x1, x24
  42ddd4:	add	x0, x25, #0x8
  42ddd8:	bl	42c470 <wcrtomb@plt+0x27850>
  42dddc:	cbz	w0, 42df28 <wcrtomb@plt+0x29308>
  42dde0:	ldp	x0, x1, [sp, #176]
  42dde4:	sub	x1, x1, x0
  42dde8:	cmp	x1, x19
  42ddec:	b.cc	42de14 <wcrtomb@plt+0x291f4>  // b.lo, b.ul, b.last
  42ddf0:	mov	x1, x21
  42ddf4:	mov	x2, x19
  42ddf8:	bl	403f70 <memcpy@plt>
  42ddfc:	ldr	x0, [sp, #176]
  42de00:	add	x19, x0, x19
  42de04:	mov	x0, x22
  42de08:	str	x19, [sp, #176]
  42de0c:	bl	4047b0 <free@plt>
  42de10:	b	42d150 <wcrtomb@plt+0x28530>
  42de14:	add	x0, sp, #0x98
  42de18:	mov	x1, x19
  42de1c:	bl	4511d8 <_obstack_newchunk@@Base>
  42de20:	ldr	x0, [sp, #176]
  42de24:	b	42ddf0 <wcrtomb@plt+0x291d0>
  42de28:	str	xzr, [x0, #8]
  42de2c:	b	42db30 <wcrtomb@plt+0x28f10>
  42de30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42de34:	mov	x1, #0x1                   	// #1
  42de38:	mov	w19, #0x0                   	// #0
  42de3c:	str	x1, [x0, #888]
  42de40:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42de44:	str	xzr, [x0, #8]
  42de48:	b	42cf2c <wcrtomb@plt+0x2830c>
  42de4c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42de50:	mov	w1, #0x1                   	// #1
  42de54:	mov	w19, #0x0                   	// #0
  42de58:	strb	w1, [x0, #825]
  42de5c:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42de60:	str	xzr, [x0, #8]
  42de64:	b	42d238 <wcrtomb@plt+0x28618>
  42de68:	str	xzr, [x0, #8]
  42de6c:	b	42dc14 <wcrtomb@plt+0x28ff4>
  42de70:	str	xzr, [x0, #8]
  42de74:	b	42d768 <wcrtomb@plt+0x28b48>
  42de78:	str	xzr, [x0, #8]
  42de7c:	b	42ca2c <wcrtomb@plt+0x27e0c>
  42de80:	str	xzr, [x0, #8]
  42de84:	b	42d9fc <wcrtomb@plt+0x28ddc>
  42de88:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42de8c:	add	x1, x2, #0x340
  42de90:	ldr	x3, [x19, #656]
  42de94:	str	w0, [x2, #832]
  42de98:	cbz	x3, 42ceac <wcrtomb@plt+0x2828c>
  42de9c:	mov	x0, x3
  42dea0:	mov	w19, #0x0                   	// #0
  42dea4:	bl	422180 <wcrtomb@plt+0x1d560>
  42dea8:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42deac:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42deb0:	add	x1, x2, #0x390
  42deb4:	ldr	x3, [x19, #712]
  42deb8:	str	w0, [x2, #912]
  42debc:	cbz	x3, 42ceac <wcrtomb@plt+0x2828c>
  42dec0:	mov	x0, x3
  42dec4:	mov	w19, #0x0                   	// #0
  42dec8:	bl	4220b8 <wcrtomb@plt+0x1d498>
  42decc:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42ded0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ded4:	mov	w1, #0xa                   	// #10
  42ded8:	mov	w19, #0x0                   	// #0
  42dedc:	str	w1, [x0, #984]
  42dee0:	b	42c9b4 <wcrtomb@plt+0x27d94>
  42dee4:	ldrb	w1, [sp, #232]
  42dee8:	orr	w1, w1, #0x2
  42deec:	strb	w1, [sp, #232]
  42def0:	b	42d180 <wcrtomb@plt+0x28560>
  42def4:	cbz	x0, 42dfcc <wcrtomb@plt+0x293ac>
  42def8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42defc:	movk	x1, #0xaaa, lsl #48
  42df00:	cmp	x3, x1
  42df04:	b.cs	42dfe4 <wcrtomb@plt+0x293c4>  // b.hs, b.nlast
  42df08:	add	x1, x3, #0x1
  42df0c:	add	x3, x1, x3, lsr #1
  42df10:	lsl	x1, x3, #3
  42df14:	str	x3, [x2, #112]
  42df18:	bl	4501d0 <argp_parse@@Base+0x103f0>
  42df1c:	ldr	x1, [x19, #976]
  42df20:	str	x0, [x21, #816]
  42df24:	b	42d894 <wcrtomb@plt+0x28c74>
  42df28:	ldp	x0, x1, [sp, #104]
  42df2c:	add	x2, sp, #0x78
  42df30:	bl	41f2b0 <wcrtomb@plt+0x1a690>
  42df34:	mov	x26, x0
  42df38:	bl	403ff0 <strlen@plt>
  42df3c:	mov	x19, x0
  42df40:	ldp	x0, x1, [sp, #176]
  42df44:	sub	x1, x1, x0
  42df48:	cmp	x19, x1
  42df4c:	b.hi	42df58 <wcrtomb@plt+0x29338>  // b.pmore
  42df50:	mov	x1, x26
  42df54:	b	42ddf4 <wcrtomb@plt+0x291d4>
  42df58:	mov	x1, x19
  42df5c:	add	x0, sp, #0x98
  42df60:	bl	4511d8 <_obstack_newchunk@@Base>
  42df64:	mov	x1, x26
  42df68:	ldr	x0, [sp, #176]
  42df6c:	b	42ddf4 <wcrtomb@plt+0x291d4>
  42df70:	add	x0, sp, #0x98
  42df74:	mov	x1, #0x1                   	// #1
  42df78:	bl	4511d8 <_obstack_newchunk@@Base>
  42df7c:	ldr	x19, [sp, #176]
  42df80:	b	42d168 <wcrtomb@plt+0x28548>
  42df84:	add	x0, sp, #0x98
  42df88:	mov	x1, #0x1                   	// #1
  42df8c:	bl	4511d8 <_obstack_newchunk@@Base>
  42df90:	ldrb	w0, [x20]
  42df94:	ldr	x19, [sp, #176]
  42df98:	b	42dd84 <wcrtomb@plt+0x29164>
  42df9c:	add	x20, x20, #0x1
  42dfa0:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42dfa4:	add	x0, x0, #0x348
  42dfa8:	bl	409d38 <wcrtomb@plt+0x5118>
  42dfac:	b	42d55c <wcrtomb@plt+0x2893c>
  42dfb0:	ldr	x0, [x25]
  42dfb4:	ldr	w0, [x0]
  42dfb8:	cmp	w0, #0x2
  42dfbc:	b.eq	42e024 <wcrtomb@plt+0x29404>  // b.none
  42dfc0:	cbz	w0, 42dff4 <wcrtomb@plt+0x293d4>
  42dfc4:	mov	w0, #0x40                  	// #64
  42dfc8:	bl	404020 <exit@plt>
  42dfcc:	cbz	x3, 42dfe8 <wcrtomb@plt+0x293c8>
  42dfd0:	cmp	xzr, x3, lsr #61
  42dfd4:	lsl	x1, x3, #3
  42dfd8:	cset	x4, ne  // ne = any
  42dfdc:	tbnz	x3, #60, 42dfe4 <wcrtomb@plt+0x293c4>
  42dfe0:	cbz	x4, 42df14 <wcrtomb@plt+0x292f4>
  42dfe4:	bl	4104a0 <wcrtomb@plt+0xb880>
  42dfe8:	mov	x3, #0x10                  	// #16
  42dfec:	mov	x1, #0x80                  	// #128
  42dff0:	b	42df14 <wcrtomb@plt+0x292f4>
  42dff4:	mov	w2, #0x5                   	// #5
  42dff8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42dffc:	mov	x0, #0x0                   	// #0
  42e000:	add	x1, x1, #0xc50
  42e004:	bl	4049c0 <dcgettext@plt>
  42e008:	mov	x2, x0
  42e00c:	ldr	x3, [x25]
  42e010:	mov	w1, #0x0                   	// #0
  42e014:	mov	w0, #0x0                   	// #0
  42e018:	ldr	x3, [x3, #8]
  42e01c:	bl	404050 <error@plt>
  42e020:	b	42dfc4 <wcrtomb@plt+0x293a4>
  42e024:	mov	w2, #0x5                   	// #5
  42e028:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e02c:	mov	x0, #0x0                   	// #0
  42e030:	add	x1, x1, #0xc30
  42e034:	bl	4049c0 <dcgettext@plt>
  42e038:	mov	x2, x0
  42e03c:	ldr	x4, [x25]
  42e040:	mov	w1, #0x0                   	// #0
  42e044:	mov	w0, #0x0                   	// #0
  42e048:	ldp	x3, x4, [x4, #8]
  42e04c:	bl	404050 <error@plt>
  42e050:	b	42dfc4 <wcrtomb@plt+0x293a4>
  42e054:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e058:	ldr	x0, [x0, #1136]
  42e05c:	cbz	x0, 42e064 <wcrtomb@plt+0x29444>
  42e060:	blr	x0
  42e064:	mov	w2, #0x5                   	// #5
  42e068:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e06c:	mov	x0, #0x0                   	// #0
  42e070:	add	x1, x1, #0xb00
  42e074:	bl	4049c0 <dcgettext@plt>
  42e078:	mov	x2, x0
  42e07c:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42e080:	mov	x3, x20
  42e084:	mov	w1, #0x0                   	// #0
  42e088:	mov	w0, #0x0                   	// #0
  42e08c:	ldr	x4, [x4, #3664]
  42e090:	bl	404050 <error@plt>
  42e094:	bl	410460 <wcrtomb@plt+0xb840>
  42e098:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e09c:	ldr	x0, [x0, #1136]
  42e0a0:	cbz	x0, 42e0a8 <wcrtomb@plt+0x29488>
  42e0a4:	blr	x0
  42e0a8:	mov	x0, x20
  42e0ac:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42e0b0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e0b4:	mov	x19, x0
  42e0b8:	add	x1, x1, #0xba8
  42e0bc:	b	42d968 <wcrtomb@plt+0x28d48>
  42e0c0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e0c4:	ldr	x0, [x0, #1136]
  42e0c8:	cbz	x0, 42e0d0 <wcrtomb@plt+0x294b0>
  42e0cc:	blr	x0
  42e0d0:	mov	x0, x20
  42e0d4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42e0d8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e0dc:	mov	x19, x0
  42e0e0:	add	x1, x1, #0x9f8
  42e0e4:	b	42d968 <wcrtomb@plt+0x28d48>
  42e0e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e0ec:	ldr	x0, [x0, #1136]
  42e0f0:	cbz	x0, 42e0f8 <wcrtomb@plt+0x294d8>
  42e0f4:	blr	x0
  42e0f8:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e0fc:	mov	w2, #0x5                   	// #5
  42e100:	add	x1, x1, #0xa70
  42e104:	b	42d400 <wcrtomb@plt+0x287e0>
  42e108:	bl	42c5e8 <wcrtomb@plt+0x279c8>
  42e10c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e110:	ldr	x0, [x0, #1136]
  42e114:	cbz	x0, 42e11c <wcrtomb@plt+0x294fc>
  42e118:	blr	x0
  42e11c:	mov	w2, #0x5                   	// #5
  42e120:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e124:	mov	x0, #0x0                   	// #0
  42e128:	add	x1, x1, #0xb80
  42e12c:	bl	4049c0 <dcgettext@plt>
  42e130:	mov	x2, x0
  42e134:	mov	w3, #0x200                 	// #512
  42e138:	mov	w1, #0x0                   	// #0
  42e13c:	mov	w0, #0x0                   	// #0
  42e140:	bl	404050 <error@plt>
  42e144:	mov	w0, #0x2                   	// #2
  42e148:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42e14c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e150:	ldr	x0, [x0, #1136]
  42e154:	cbz	x0, 42e15c <wcrtomb@plt+0x2953c>
  42e158:	blr	x0
  42e15c:	mov	x0, x20
  42e160:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42e164:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e168:	mov	x19, x0
  42e16c:	add	x1, x1, #0xb68
  42e170:	b	42d968 <wcrtomb@plt+0x28d48>
  42e174:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e178:	ldr	x0, [x0, #1136]
  42e17c:	cbz	x0, 42e184 <wcrtomb@plt+0x29564>
  42e180:	blr	x0
  42e184:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e188:	mov	w2, #0x5                   	// #5
  42e18c:	add	x1, x1, #0xa38
  42e190:	b	42d400 <wcrtomb@plt+0x287e0>
  42e194:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e198:	ldr	x0, [x0, #1136]
  42e19c:	cbz	x0, 42e1a4 <wcrtomb@plt+0x29584>
  42e1a0:	blr	x0
  42e1a4:	mov	x0, x20
  42e1a8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42e1ac:	mov	w2, #0x5                   	// #5
  42e1b0:	mov	x19, x0
  42e1b4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e1b8:	mov	x0, #0x0                   	// #0
  42e1bc:	add	x1, x1, #0xaf0
  42e1c0:	bl	4049c0 <dcgettext@plt>
  42e1c4:	mov	x3, x19
  42e1c8:	mov	x4, x0
  42e1cc:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42e1d0:	add	x2, x2, #0x618
  42e1d4:	mov	w1, #0x0                   	// #0
  42e1d8:	mov	w0, #0x0                   	// #0
  42e1dc:	bl	404050 <error@plt>
  42e1e0:	bl	410460 <wcrtomb@plt+0xb840>
  42e1e4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e1e8:	ldr	x0, [x0, #1136]
  42e1ec:	cbz	x0, 42e1f4 <wcrtomb@plt+0x295d4>
  42e1f0:	blr	x0
  42e1f4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e1f8:	mov	w2, #0x5                   	// #5
  42e1fc:	add	x1, x1, #0xbd0
  42e200:	b	42d400 <wcrtomb@plt+0x287e0>
  42e204:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e208:	ldr	x0, [x0, #1136]
  42e20c:	cbz	x0, 42e214 <wcrtomb@plt+0x295f4>
  42e210:	blr	x0
  42e214:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e218:	mov	w2, #0x5                   	// #5
  42e21c:	add	x1, x1, #0xad0
  42e220:	b	42d5a0 <wcrtomb@plt+0x28980>
  42e224:	nop
  42e228:	stp	x29, x30, [sp, #-48]!
  42e22c:	adrp	x6, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42e230:	add	x6, x6, #0xc50
  42e234:	mov	x29, sp
  42e238:	str	x19, [sp, #16]
  42e23c:	add	x5, x6, #0x80
  42e240:	mov	x19, x2
  42e244:	add	x4, sp, #0x2c
  42e248:	mov	x2, x1
  42e24c:	mov	w3, #0x28                  	// #40
  42e250:	mov	w1, w0
  42e254:	adrp	x0, 494000 <_obstack_memory_used@@Base+0x42bf0>
  42e258:	add	x0, x0, #0x180
  42e25c:	str	x19, [x6, #128]
  42e260:	bl	43fde0 <argp_parse@@Base>
  42e264:	cbnz	w0, 42e2c8 <wcrtomb@plt+0x296a8>
  42e268:	ldr	w0, [x19]
  42e26c:	cbz	w0, 42e27c <wcrtomb@plt+0x2965c>
  42e270:	ldr	x19, [sp, #16]
  42e274:	ldp	x29, x30, [sp], #48
  42e278:	ret
  42e27c:	bl	422240 <wcrtomb@plt+0x1d620>
  42e280:	tst	w0, #0xff
  42e284:	b.eq	42e270 <wcrtomb@plt+0x29650>  // b.none
  42e288:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e28c:	ldr	x0, [x0, #1136]
  42e290:	cbz	x0, 42e298 <wcrtomb@plt+0x29678>
  42e294:	blr	x0
  42e298:	mov	w2, #0x5                   	// #5
  42e29c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e2a0:	mov	x0, #0x0                   	// #0
  42e2a4:	add	x1, x1, #0xc68
  42e2a8:	bl	4049c0 <dcgettext@plt>
  42e2ac:	mov	x2, x0
  42e2b0:	ldr	x3, [x19, #8]
  42e2b4:	mov	w1, #0x0                   	// #0
  42e2b8:	mov	w0, #0x0                   	// #0
  42e2bc:	bl	404050 <error@plt>
  42e2c0:	mov	w0, #0x2                   	// #2
  42e2c4:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42e2c8:	bl	404650 <abort@plt>
  42e2cc:	nop
  42e2d0:	stp	x29, x30, [sp, #-432]!
  42e2d4:	mov	x29, sp
  42e2d8:	stp	x21, x22, [sp, #32]
  42e2dc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42e2e0:	add	x21, x21, #0xc50
  42e2e4:	stp	x23, x24, [sp, #48]
  42e2e8:	adrp	x23, 494000 <_obstack_memory_used@@Base+0x42bf0>
  42e2ec:	add	x23, x23, #0x180
  42e2f0:	mov	x22, x1
  42e2f4:	add	x1, x23, #0x50
  42e2f8:	mov	w24, #0x1                   	// #1
  42e2fc:	stp	x19, x20, [sp, #16]
  42e300:	mov	w20, w0
  42e304:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e308:	add	x0, x0, #0x3b0
  42e30c:	stp	x25, x26, [sp, #64]
  42e310:	adrp	x25, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e314:	stp	x27, x28, [sp, #80]
  42e318:	adrp	x27, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e31c:	adrp	x28, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e320:	str	w24, [sp, #136]
  42e324:	stp	xzr, xzr, [sp, #144]
  42e328:	str	xzr, [sp, #160]
  42e32c:	bl	440b10 <argp_parse@@Base+0xd30>
  42e330:	strh	wzr, [x21, #144]
  42e334:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e338:	add	x0, x0, #0xc88
  42e33c:	str	xzr, [x21, #136]
  42e340:	bl	404af0 <getenv@plt>
  42e344:	str	wzr, [x25, #988]
  42e348:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e34c:	mov	w3, #0x14                  	// #20
  42e350:	mov	x1, #0x2800                	// #10240
  42e354:	str	wzr, [x27, #944]
  42e358:	str	w3, [x2, #876]
  42e35c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e360:	stp	x0, xzr, [x21, #152]
  42e364:	str	x1, [x2, #1048]
  42e368:	str	wzr, [x21, #168]
  42e36c:	bl	441e08 <argp_parse@@Base+0x2028>
  42e370:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e374:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  42e378:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e37c:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e380:	ldr	q0, [x1, #2944]
  42e384:	strb	w24, [x3, #884]
  42e388:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e38c:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e390:	add	x12, x4, #0x398
  42e394:	add	x11, x28, #0xa8
  42e398:	adrp	x9, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e39c:	str	x0, [x2, #192]
  42e3a0:	adrp	x10, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3a4:	mov	w0, #0xffffffff            	// #-1
  42e3a8:	adrp	x8, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3ac:	adrp	x7, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3b0:	adrp	x6, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3b4:	adrp	x5, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3b8:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3bc:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3c0:	str	w24, [x1, #736]
  42e3c4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3c8:	str	w0, [x3, #200]
  42e3cc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e3d0:	strb	w24, [x9, #160]
  42e3d4:	mov	w9, #0x8                   	// #8
  42e3d8:	str	wzr, [x10, #1044]
  42e3dc:	cmp	w20, w24
  42e3e0:	str	w9, [x8, #804]
  42e3e4:	str	wzr, [x7, #216]
  42e3e8:	str	wzr, [x6, #648]
  42e3ec:	str	w0, [x5, #912]
  42e3f0:	str	w0, [x4, #832]
  42e3f4:	str	w0, [x3, #908]
  42e3f8:	str	xzr, [x2, #712]
  42e3fc:	str	xzr, [x1, #656]
  42e400:	stp	x11, x12, [sp, #96]
  42e404:	str	q0, [x11]
  42e408:	str	q0, [x12]
  42e40c:	b.le	42e420 <wcrtomb@plt+0x29800>
  42e410:	ldr	x0, [x22, #8]
  42e414:	ldrb	w1, [x0]
  42e418:	cmp	w1, #0x2d
  42e41c:	b.ne	42e9dc <wcrtomb@plt+0x29dbc>  // b.any
  42e420:	add	x24, sp, #0xc8
  42e424:	adrp	x19, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42e428:	add	x19, x19, #0xcc8
  42e42c:	mov	x0, x19
  42e430:	bl	404af0 <getenv@plt>
  42e434:	str	wzr, [sp, #168]
  42e438:	stp	x19, xzr, [sp, #176]
  42e43c:	str	xzr, [sp, #192]
  42e440:	cbz	x0, 42e470 <wcrtomb@plt+0x29850>
  42e444:	mov	x3, #0x1                   	// #1
  42e448:	mov	w2, #0xe46                 	// #3654
  42e44c:	mov	x1, x24
  42e450:	movk	w2, #0x200, lsl #16
  42e454:	str	x3, [sp, #216]
  42e458:	bl	438ea0 <wcrtomb@plt+0x34280>
  42e45c:	cbnz	w0, 42f1f8 <wcrtomb@plt+0x2a5d8>
  42e460:	ldr	x0, [sp, #200]
  42e464:	cbnz	x0, 42eb6c <wcrtomb@plt+0x29f4c>
  42e468:	mov	x0, x24
  42e46c:	bl	436e10 <wcrtomb@plt+0x321f0>
  42e470:	add	x6, sp, #0x88
  42e474:	add	x26, x21, #0x80
  42e478:	mov	x4, x24
  42e47c:	mov	x0, x23
  42e480:	mov	x5, x26
  42e484:	mov	x2, x22
  42e488:	mov	w1, w20
  42e48c:	mov	w3, #0x8                   	// #8
  42e490:	str	x6, [x21, #128]
  42e494:	bl	43fde0 <argp_parse@@Base>
  42e498:	mov	w19, w0
  42e49c:	cbnz	w0, 42f240 <wcrtomb@plt+0x2a620>
  42e4a0:	ldrb	w0, [x26, #16]
  42e4a4:	cbz	w0, 42e4c0 <wcrtomb@plt+0x298a0>
  42e4a8:	ldr	w0, [x25, #988]
  42e4ac:	cmp	w0, #0x3
  42e4b0:	b.eq	42eff4 <wcrtomb@plt+0x2a3d4>  // b.none
  42e4b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e4b8:	mov	w1, #0xffffffff            	// #-1
  42e4bc:	str	w1, [x0, #1108]
  42e4c0:	ldr	w0, [sp, #200]
  42e4c4:	cmp	w20, w0
  42e4c8:	b.le	42e4ec <wcrtomb@plt+0x298cc>
  42e4cc:	nop
  42e4d0:	ldr	x0, [x22, w0, sxtw #3]
  42e4d4:	bl	422258 <wcrtomb@plt+0x1d638>
  42e4d8:	ldr	w0, [sp, #200]
  42e4dc:	add	w0, w0, #0x1
  42e4e0:	str	w0, [sp, #200]
  42e4e4:	cmp	w0, w20
  42e4e8:	b.lt	42e4d0 <wcrtomb@plt+0x298b0>  // b.tstop
  42e4ec:	ldr	w0, [x27, #944]
  42e4f0:	cbnz	w0, 42e504 <wcrtomb@plt+0x298e4>
  42e4f4:	ldrb	w0, [x21, #145]
  42e4f8:	cbz	w0, 42eec8 <wcrtomb@plt+0x2a2a8>
  42e4fc:	mov	w0, #0x4                   	// #4
  42e500:	str	w0, [x27, #944]
  42e504:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e508:	ldr	x1, [x22, #776]
  42e50c:	cbz	x1, 42e51c <wcrtomb@plt+0x298fc>
  42e510:	ldr	w1, [x25, #988]
  42e514:	cmp	w1, #0x3
  42e518:	b.eq	42e528 <wcrtomb@plt+0x29908>  // b.none
  42e51c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e520:	ldrb	w1, [x1, #161]
  42e524:	cbz	w1, 42e9c0 <wcrtomb@plt+0x29da0>
  42e528:	mov	w1, #0x1                   	// #1
  42e52c:	mov	w2, #0x54                  	// #84
  42e530:	lsl	w0, w1, w0
  42e534:	tst	w0, w2
  42e538:	b.eq	42f248 <wcrtomb@plt+0x2a628>  // b.none
  42e53c:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e540:	ldr	x0, [x20, #888]
  42e544:	cbnz	x0, 42ee1c <wcrtomb@plt+0x2a1fc>
  42e548:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e54c:	ldr	x0, [x20, #976]
  42e550:	cbz	x0, 42ede8 <wcrtomb@plt+0x2a1c8>
  42e554:	cmp	x0, #0x1
  42e558:	b.ls	42e568 <wcrtomb@plt+0x29948>  // b.plast
  42e55c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e560:	ldrb	w0, [x0, #204]
  42e564:	cbz	w0, 42f34c <wcrtomb@plt+0x2a72c>
  42e568:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e56c:	ldr	x0, [x24, #960]
  42e570:	cbz	x0, 42ed44 <wcrtomb@plt+0x2a124>
  42e574:	ldr	x0, [sp, #96]
  42e578:	ldr	x0, [x0, #8]
  42e57c:	tbnz	x0, #63, 42e5b8 <wcrtomb@plt+0x29998>
  42e580:	ldp	x2, x1, [x21, #48]
  42e584:	ldr	w3, [x1]
  42e588:	ldr	w0, [x2]
  42e58c:	cmp	w0, w3
  42e590:	b.ne	42ed38 <wcrtomb@plt+0x2a118>  // b.any
  42e594:	cmp	w0, #0x1
  42e598:	b.eq	42f018 <wcrtomb@plt+0x2a3f8>  // b.none
  42e59c:	ldr	x1, [x1, #8]
  42e5a0:	ldr	x0, [x2, #8]
  42e5a4:	bl	404710 <strcmp@plt>
  42e5a8:	cbz	w0, 42f018 <wcrtomb@plt+0x2a3f8>
  42e5ac:	ldr	x0, [sp, #96]
  42e5b0:	stp	xzr, xzr, [x0]
  42e5b4:	nop
  42e5b8:	ldr	x0, [x22, #776]
  42e5bc:	cbz	x0, 42e5f4 <wcrtomb@plt+0x299d4>
  42e5c0:	ldr	w1, [x27, #944]
  42e5c4:	and	w1, w1, #0xfffffffb
  42e5c8:	cmp	w1, #0x2
  42e5cc:	b.ne	42e5f4 <wcrtomb@plt+0x299d4>  // b.any
  42e5d0:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e5d4:	mov	x1, #0x63                  	// #99
  42e5d8:	mov	x23, #0x51                  	// #81
  42e5dc:	ldrb	w2, [x2, #204]
  42e5e0:	cmp	w2, #0x0
  42e5e4:	csel	x23, x23, x1, ne  // ne = any
  42e5e8:	bl	403ff0 <strlen@plt>
  42e5ec:	cmp	x0, x23
  42e5f0:	b.hi	42f2b0 <wcrtomb@plt+0x2a690>  // b.pmore
  42e5f4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e5f8:	ldrb	w0, [x1, #970]
  42e5fc:	cbnz	w0, 42e970 <wcrtomb@plt+0x29d50>
  42e600:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e604:	ldr	x0, [x26, #1032]
  42e608:	cbz	x0, 42e638 <wcrtomb@plt+0x29a18>
  42e60c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e610:	ldrb	w0, [x0, #204]
  42e614:	cbnz	w0, 42f32c <wcrtomb@plt+0x2a70c>
  42e618:	ldr	w1, [x25, #988]
  42e61c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42e620:	add	x0, x0, #0x960
  42e624:	add	x0, x0, #0x1b0
  42e628:	ldr	w0, [x0, w1, uxtw #2]
  42e62c:	tbnz	w0, #2, 42f38c <wcrtomb@plt+0x2a76c>
  42e630:	cmp	w1, #0x2
  42e634:	b.eq	42f36c <wcrtomb@plt+0x2a74c>  // b.none
  42e638:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e63c:	ldr	w0, [x0, #184]
  42e640:	cmp	w0, #0x2
  42e644:	b.eq	42ee60 <wcrtomb@plt+0x2a240>  // b.none
  42e648:	ldrb	w0, [x21, #145]
  42e64c:	cbz	w0, 42e8f4 <wcrtomb@plt+0x29cd4>
  42e650:	ldr	w0, [x27, #944]
  42e654:	cmp	w0, #0x4
  42e658:	b.eq	42e8f4 <wcrtomb@plt+0x29cd4>  // b.none
  42e65c:	ldr	w2, [x25, #988]
  42e660:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42e664:	add	x0, x0, #0x960
  42e668:	add	x1, x0, #0x1b0
  42e66c:	ldr	w1, [x1, x2, lsl #2]
  42e670:	tbz	w1, #0, 42f164 <wcrtomb@plt+0x2a544>
  42e674:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e678:	ldr	w1, [x1, #1024]
  42e67c:	cmp	w1, #0x0
  42e680:	b.le	42eb90 <wcrtomb@plt+0x29f70>
  42e684:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e688:	ldr	w0, [x0, #1112]
  42e68c:	cmp	w0, #0x0
  42e690:	b.le	42eba0 <wcrtomb@plt+0x29f80>
  42e694:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e698:	ldrb	w0, [x0, #808]
  42e69c:	cbnz	w0, 42e6e0 <wcrtomb@plt+0x29ac0>
  42e6a0:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e6a4:	ldrb	w0, [x22, #768]
  42e6a8:	cbz	w0, 42e6e0 <wcrtomb@plt+0x29ac0>
  42e6ac:	ldr	w3, [x25, #988]
  42e6b0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42e6b4:	add	x0, x0, #0x960
  42e6b8:	add	x1, x0, #0x1b0
  42e6bc:	mov	w2, w3
  42e6c0:	ldr	w1, [x1, x2, lsl #2]
  42e6c4:	tbnz	w1, #0, 42e6e0 <wcrtomb@plt+0x29ac0>
  42e6c8:	ldr	x1, [x21, #80]
  42e6cc:	cbz	x1, 42e6dc <wcrtomb@plt+0x29abc>
  42e6d0:	ldr	w1, [x1]
  42e6d4:	cmp	w1, #0x1
  42e6d8:	b.eq	42f1c0 <wcrtomb@plt+0x2a5a0>  // b.none
  42e6dc:	strb	wzr, [x22, #768]
  42e6e0:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e6e4:	ldrb	w0, [x22, #971]
  42e6e8:	cbz	w0, 42e724 <wcrtomb@plt+0x29b04>
  42e6ec:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e6f0:	ldrb	w1, [x0, #1080]
  42e6f4:	cbz	w1, 42e718 <wcrtomb@plt+0x29af8>
  42e6f8:	ldp	x2, x3, [x21, #88]
  42e6fc:	ldr	w1, [x2]
  42e700:	ldr	w4, [x3]
  42e704:	cmp	w1, w4
  42e708:	b.eq	42ef30 <wcrtomb@plt+0x2a310>  // b.none
  42e70c:	cmp	w1, #0x1
  42e710:	b.ne	42ef48 <wcrtomb@plt+0x2a328>  // b.any
  42e714:	strb	wzr, [x0, #1080]
  42e718:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e71c:	ldr	x0, [x22, #696]
  42e720:	cbz	x0, 42f02c <wcrtomb@plt+0x2a40c>
  42e724:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e728:	ldrb	w0, [x0, #162]
  42e72c:	cbz	w0, 42e73c <wcrtomb@plt+0x29b1c>
  42e730:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e734:	mov	w1, #0x3                   	// #3
  42e738:	str	w1, [x0, #880]
  42e73c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e740:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e744:	ldrb	w1, [x1, #704]
  42e748:	ldr	w0, [x0, #684]
  42e74c:	cbz	w1, 42ed8c <wcrtomb@plt+0x2a16c>
  42e750:	cmp	w0, #0x2
  42e754:	b.eq	42efa8 <wcrtomb@plt+0x2a388>  // b.none
  42e758:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e75c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e760:	mov	w3, #0x900                 	// #2304
  42e764:	mov	w1, #0x4900                	// #18688
  42e768:	movk	w3, #0x8, lsl #16
  42e76c:	movk	w1, #0x8, lsl #16
  42e770:	str	w3, [x2, #836]
  42e774:	str	w1, [x0, #828]
  42e778:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e77c:	ldr	w0, [x25, #988]
  42e780:	str	w19, [x1, #688]
  42e784:	cmp	w0, #0x9
  42e788:	b.eq	42ef88 <wcrtomb@plt+0x2a368>  // b.none
  42e78c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e790:	ldrb	w0, [x0, #681]
  42e794:	cbz	w0, 42e7a4 <wcrtomb@plt+0x29b84>
  42e798:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e79c:	mov	w0, #0x2                   	// #2
  42e7a0:	str	w0, [x23, #772]
  42e7a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e7a8:	ldr	d0, [x0, #760]
  42e7ac:	fcmp	d0, #0.0
  42e7b0:	b.eq	42e7c8 <wcrtomb@plt+0x29ba8>  // b.none
  42e7b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e7b8:	ldr	d1, [x0, #1048]
  42e7bc:	ucvtf	d1, d1
  42e7c0:	fcmpe	d0, d1
  42e7c4:	b.mi	42f184 <wcrtomb@plt+0x2a564>  // b.first
  42e7c8:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e7cc:	ldrb	w0, [x22, #768]
  42e7d0:	cbz	w0, 42e800 <wcrtomb@plt+0x29be0>
  42e7d4:	ldr	x0, [x24, #960]
  42e7d8:	cbz	x0, 42e800 <wcrtomb@plt+0x29be0>
  42e7dc:	ldr	x1, [x21, #48]
  42e7e0:	ldr	x2, [x21, #80]
  42e7e4:	ldr	w3, [x1]
  42e7e8:	ldr	w0, [x2]
  42e7ec:	cmp	w0, w3
  42e7f0:	b.eq	42ef10 <wcrtomb@plt+0x2a2f0>  // b.none
  42e7f4:	cmp	w0, #0x1
  42e7f8:	b.ne	42ef28 <wcrtomb@plt+0x2a308>  // b.any
  42e7fc:	str	xzr, [x24, #960]
  42e800:	ldr	w0, [x25, #988]
  42e804:	cmp	w0, #0x7
  42e808:	b.hi	42ecc4 <wcrtomb@plt+0x2a0a4>  // b.pmore
  42e80c:	cmp	w0, #0x4
  42e810:	b.hi	42ecd4 <wcrtomb@plt+0x2a0b4>  // b.pmore
  42e814:	cmp	w0, #0x2
  42e818:	b.ls	42ec70 <wcrtomb@plt+0x2a050>  // b.plast
  42e81c:	cmp	w0, #0x3
  42e820:	b.ne	42e838 <wcrtomb@plt+0x29c18>  // b.any
  42e824:	bl	422240 <wcrtomb@plt+0x1d620>
  42e828:	tst	w0, #0xff
  42e82c:	b.eq	42f144 <wcrtomb@plt+0x2a524>  // b.none
  42e830:	ldr	w0, [x21, #168]
  42e834:	cbnz	w0, 42ef50 <wcrtomb@plt+0x2a330>
  42e838:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e83c:	ldr	x0, [x19, #1088]
  42e840:	cbz	x0, 42edbc <wcrtomb@plt+0x2a19c>
  42e844:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  42e848:	add	x1, x1, #0xba8
  42e84c:	bl	4042e0 <fopen@plt>
  42e850:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42e854:	str	x0, [x1, #4056]
  42e858:	cbz	x0, 42f288 <wcrtomb@plt+0x2a668>
  42e85c:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e860:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e864:	ldr	x0, [x21, #152]
  42e868:	ldr	x2, [x2, #816]
  42e86c:	str	x2, [x1, #864]
  42e870:	cbz	x0, 42e880 <wcrtomb@plt+0x29c60>
  42e874:	bl	450328 <argp_parse@@Base+0x10548>
  42e878:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42e87c:	str	x0, [x1, #3640]
  42e880:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e884:	ldrb	w0, [x19, #885]
  42e888:	cbnz	w0, 42ee8c <wcrtomb@plt+0x2a26c>
  42e88c:	bl	40a108 <wcrtomb@plt+0x54e8>
  42e890:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e894:	ldr	x19, [x21, #136]
  42e898:	adrp	x25, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42e89c:	add	x23, x23, #0x304
  42e8a0:	add	x25, x25, #0x188
  42e8a4:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e8a8:	cbz	x19, 42e8d8 <wcrtomb@plt+0x29cb8>
  42e8ac:	nop
  42e8b0:	ldr	w0, [x23]
  42e8b4:	mov	x20, x19
  42e8b8:	ldr	x19, [x19]
  42e8bc:	cbnz	w0, 42ec14 <wcrtomb@plt+0x29ff4>
  42e8c0:	ldr	x21, [x20, #32]
  42e8c4:	mov	x0, x21
  42e8c8:	bl	4047b0 <free@plt>
  42e8cc:	mov	x0, x20
  42e8d0:	bl	4047b0 <free@plt>
  42e8d4:	cbnz	x19, 42e8b0 <wcrtomb@plt+0x29c90>
  42e8d8:	ldp	x19, x20, [sp, #16]
  42e8dc:	ldp	x21, x22, [sp, #32]
  42e8e0:	ldp	x23, x24, [sp, #48]
  42e8e4:	ldp	x25, x26, [sp, #64]
  42e8e8:	ldp	x27, x28, [sp, #80]
  42e8ec:	ldp	x29, x30, [sp], #432
  42e8f0:	ret
  42e8f4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e8f8:	ldr	w0, [x0, #1024]
  42e8fc:	cmp	w0, #0x0
  42e900:	b.le	42eb18 <wcrtomb@plt+0x29ef8>
  42e904:	ldr	w0, [x27, #944]
  42e908:	cmp	w0, #0x4
  42e90c:	b.ne	42eed8 <wcrtomb@plt+0x2a2b8>  // b.any
  42e910:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e914:	ldr	w0, [x0, #1112]
  42e918:	cmp	w0, #0x0
  42e91c:	b.le	42eba0 <wcrtomb@plt+0x29f80>
  42e920:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e924:	ldrb	w0, [x1, #808]
  42e928:	cbz	w0, 42e6a0 <wcrtomb@plt+0x29a80>
  42e92c:	ldr	w3, [x25, #988]
  42e930:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42e934:	add	x0, x0, #0x960
  42e938:	add	x4, x0, #0x1b0
  42e93c:	mov	w2, w3
  42e940:	ldr	w4, [x4, x2, lsl #2]
  42e944:	tbnz	w4, #0, 42e6e0 <wcrtomb@plt+0x29ac0>
  42e948:	ldr	x4, [x21, #72]
  42e94c:	cbz	x4, 42e95c <wcrtomb@plt+0x29d3c>
  42e950:	ldr	w4, [x4]
  42e954:	cmp	w4, #0x1
  42e958:	b.eq	42f1dc <wcrtomb@plt+0x2a5bc>  // b.none
  42e95c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e960:	strb	wzr, [x1, #808]
  42e964:	ldrb	w1, [x22, #768]
  42e968:	cbnz	w1, 42e6c8 <wcrtomb@plt+0x29aa8>
  42e96c:	b	42e6e0 <wcrtomb@plt+0x29ac0>
  42e970:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e974:	ldrb	w0, [x0, #204]
  42e978:	cbnz	w0, 42f290 <wcrtomb@plt+0x2a670>
  42e97c:	adrp	x26, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e980:	ldr	x0, [x26, #1032]
  42e984:	cbnz	x0, 42f30c <wcrtomb@plt+0x2a6ec>
  42e988:	ldr	w3, [x25, #988]
  42e98c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42e990:	add	x0, x0, #0x960
  42e994:	add	x4, x0, #0x1b0
  42e998:	mov	w2, w3
  42e99c:	ldr	w4, [x4, x2, lsl #2]
  42e9a0:	tbnz	w4, #1, 42e638 <wcrtomb@plt+0x29a18>
  42e9a4:	ldr	x4, [x21, #64]
  42e9a8:	cbz	x4, 42e9b8 <wcrtomb@plt+0x29d98>
  42e9ac:	ldr	w4, [x4]
  42e9b0:	cmp	w4, #0x1
  42e9b4:	b.eq	42f1a4 <wcrtomb@plt+0x2a584>  // b.none
  42e9b8:	strb	wzr, [x1, #970]
  42e9bc:	b	42e638 <wcrtomb@plt+0x29a18>
  42e9c0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e9c4:	ldrb	w1, [x1, #204]
  42e9c8:	cbnz	w1, 42e528 <wcrtomb@plt+0x29908>
  42e9cc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42e9d0:	ldrb	w1, [x1, #1040]
  42e9d4:	cbz	w1, 42e53c <wcrtomb@plt+0x2991c>
  42e9d8:	b	42e528 <wcrtomb@plt+0x29908>
  42e9dc:	mov	w1, #0x2d                  	// #45
  42e9e0:	strb	w1, [sp, #200]
  42e9e4:	strb	wzr, [sp, #202]
  42e9e8:	mov	x19, x22
  42e9ec:	bl	403ff0 <strlen@plt>
  42e9f0:	add	w0, w20, w0
  42e9f4:	sub	w1, w0, #0x1
  42e9f8:	str	w1, [sp, #116]
  42e9fc:	sbfiz	x0, x0, #3, #32
  42ea00:	add	x26, x22, w20, sxtw #3
  42ea04:	add	x24, sp, #0xc8
  42ea08:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ea0c:	mov	x28, x0
  42ea10:	ldr	x20, [x22, #8]
  42ea14:	str	x0, [sp, #120]
  42ea18:	ldr	x0, [x19], #16
  42ea1c:	str	x0, [x28], #8
  42ea20:	ldrb	w1, [x20]
  42ea24:	cbz	w1, 42eae0 <wcrtomb@plt+0x29ec0>
  42ea28:	mov	x22, x28
  42ea2c:	mov	x0, x24
  42ea30:	strb	w1, [sp, #201]
  42ea34:	bl	450328 <argp_parse@@Base+0x10548>
  42ea38:	str	x0, [x22], #8
  42ea3c:	ldr	x0, [x23]
  42ea40:	ldrb	w2, [x20]
  42ea44:	b	42ea54 <wcrtomb@plt+0x29e34>
  42ea48:	cmp	w2, w1
  42ea4c:	b.eq	42ebf4 <wcrtomb@plt+0x29fd4>  // b.none
  42ea50:	add	x0, x0, #0x30
  42ea54:	ldr	x3, [x0]
  42ea58:	ldr	w1, [x0, #8]
  42ea5c:	cbnz	x3, 42ea48 <wcrtomb@plt+0x29e28>
  42ea60:	cbnz	w1, 42ea48 <wcrtomb@plt+0x29e28>
  42ea64:	ldr	x3, [x0, #16]
  42ea68:	cbnz	x3, 42ea48 <wcrtomb@plt+0x29e28>
  42ea6c:	ldr	w3, [x0, #24]
  42ea70:	cbnz	w3, 42ea48 <wcrtomb@plt+0x29e28>
  42ea74:	ldr	x3, [x0, #32]
  42ea78:	cbnz	x3, 42ea48 <wcrtomb@plt+0x29e28>
  42ea7c:	ldr	x3, [x23, #32]
  42ea80:	cbz	x3, 42ead4 <wcrtomb@plt+0x29eb4>
  42ea84:	ldr	x0, [x3]
  42ea88:	cbz	x0, 42ead4 <wcrtomb@plt+0x29eb4>
  42ea8c:	nop
  42ea90:	ldr	x0, [x0]
  42ea94:	b	42eaa4 <wcrtomb@plt+0x29e84>
  42ea98:	cmp	w2, w1
  42ea9c:	b.eq	42ebf4 <wcrtomb@plt+0x29fd4>  // b.none
  42eaa0:	add	x0, x0, #0x30
  42eaa4:	ldr	x6, [x0]
  42eaa8:	ldr	w1, [x0, #8]
  42eaac:	cbnz	x6, 42ea98 <wcrtomb@plt+0x29e78>
  42eab0:	cbnz	w1, 42ea98 <wcrtomb@plt+0x29e78>
  42eab4:	ldr	x6, [x0, #16]
  42eab8:	cbnz	x6, 42ea98 <wcrtomb@plt+0x29e78>
  42eabc:	ldr	w6, [x0, #24]
  42eac0:	cbnz	w6, 42ea98 <wcrtomb@plt+0x29e78>
  42eac4:	ldr	x6, [x0, #32]
  42eac8:	cbnz	x6, 42ea98 <wcrtomb@plt+0x29e78>
  42eacc:	ldr	x0, [x3, #32]!
  42ead0:	cbnz	x0, 42ea90 <wcrtomb@plt+0x29e70>
  42ead4:	mov	x28, x22
  42ead8:	ldrb	w1, [x20, #1]!
  42eadc:	cbnz	w1, 42ea28 <wcrtomb@plt+0x29e08>
  42eae0:	cmp	x19, x26
  42eae4:	b.cs	42eb08 <wcrtomb@plt+0x29ee8>  // b.hs, b.nlast
  42eae8:	sub	x2, x26, #0x1
  42eaec:	mov	x0, x28
  42eaf0:	sub	x2, x2, x19
  42eaf4:	mov	x1, x19
  42eaf8:	and	x2, x2, #0xfffffffffffffff8
  42eafc:	add	x2, x2, #0x8
  42eb00:	add	x28, x28, x2
  42eb04:	bl	403f70 <memcpy@plt>
  42eb08:	ldr	w20, [sp, #116]
  42eb0c:	str	xzr, [x28]
  42eb10:	ldr	x22, [sp, #120]
  42eb14:	b	42e424 <wcrtomb@plt+0x29804>
  42eb18:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eb1c:	ldr	w0, [x0, #1112]
  42eb20:	cmp	w0, #0x0
  42eb24:	b.le	42eba0 <wcrtomb@plt+0x29f80>
  42eb28:	ldr	w0, [x27, #944]
  42eb2c:	cmp	w0, #0x4
  42eb30:	b.eq	42e920 <wcrtomb@plt+0x29d00>  // b.none
  42eb34:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42eb38:	add	x0, x0, #0x960
  42eb3c:	ldr	w1, [x25, #988]
  42eb40:	add	x0, x0, #0x1b0
  42eb44:	ldr	w0, [x0, x1, lsl #2]
  42eb48:	tbnz	w0, #0, 42e694 <wcrtomb@plt+0x29a74>
  42eb4c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eb50:	ldr	x0, [x0, #1136]
  42eb54:	cbz	x0, 42eb5c <wcrtomb@plt+0x29f3c>
  42eb58:	blr	x0
  42eb5c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42eb60:	mov	w2, #0x5                   	// #5
  42eb64:	add	x1, x1, #0xfc0
  42eb68:	b	42f074 <wcrtomb@plt+0x2a454>
  42eb6c:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42eb70:	ldp	x1, x2, [sp, #208]
  42eb74:	ldr	x3, [x3, #3664]
  42eb78:	str	x3, [x1]
  42eb7c:	add	w0, w2, w0
  42eb80:	add	x2, sp, #0xa8
  42eb84:	bl	42e228 <wcrtomb@plt+0x29608>
  42eb88:	str	xzr, [sp, #200]
  42eb8c:	b	42e468 <wcrtomb@plt+0x29848>
  42eb90:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eb94:	ldr	w1, [x1, #1112]
  42eb98:	cmp	w1, #0x0
  42eb9c:	b.gt	42eb3c <wcrtomb@plt+0x29f1c>
  42eba0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eba4:	ldr	w0, [x0, #784]
  42eba8:	cmp	w0, #0x0
  42ebac:	b.le	42e920 <wcrtomb@plt+0x29d00>
  42ebb0:	ldr	w0, [x27, #944]
  42ebb4:	cmp	w0, #0x4
  42ebb8:	b.eq	42e920 <wcrtomb@plt+0x29d00>  // b.none
  42ebbc:	ldr	w1, [x25, #988]
  42ebc0:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42ebc4:	add	x0, x0, #0x960
  42ebc8:	add	x0, x0, #0x1b0
  42ebcc:	ldr	w0, [x0, x1, lsl #2]
  42ebd0:	tbnz	w0, #0, 42e694 <wcrtomb@plt+0x29a74>
  42ebd4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ebd8:	ldr	x0, [x0, #1136]
  42ebdc:	cbz	x0, 42ebe4 <wcrtomb@plt+0x29fc4>
  42ebe0:	blr	x0
  42ebe4:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ebe8:	mov	w2, #0x5                   	// #5
  42ebec:	add	x1, x1, #0xff0
  42ebf0:	b	42f074 <wcrtomb@plt+0x2a454>
  42ebf4:	ldr	x0, [x0, #16]
  42ebf8:	cbz	x0, 42ead4 <wcrtomb@plt+0x29eb4>
  42ebfc:	cmp	x19, x26
  42ec00:	b.cs	42f0e8 <wcrtomb@plt+0x2a4c8>  // b.hs, b.nlast
  42ec04:	ldr	x0, [x19], #8
  42ec08:	add	x28, x28, #0x10
  42ec0c:	stur	x0, [x28, #-8]
  42ec10:	b	42ead8 <wcrtomb@plt+0x29eb8>
  42ec14:	ldp	x0, x1, [x20, #8]
  42ec18:	mov	w2, #0x1                   	// #1
  42ec1c:	bl	41cd78 <wcrtomb@plt+0x18158>
  42ec20:	mov	x22, x0
  42ec24:	ldr	x21, [x20, #32]
  42ec28:	mov	x1, x0
  42ec2c:	mov	x0, x21
  42ec30:	bl	404710 <strcmp@plt>
  42ec34:	cbz	w0, 42e8c4 <wcrtomb@plt+0x29ca4>
  42ec38:	ldr	x0, [x24, #1136]
  42ec3c:	cbz	x0, 42ec44 <wcrtomb@plt+0x2a024>
  42ec40:	blr	x0
  42ec44:	mov	x1, x25
  42ec48:	mov	w2, #0x5                   	// #5
  42ec4c:	mov	x0, #0x0                   	// #0
  42ec50:	bl	4049c0 <dcgettext@plt>
  42ec54:	ldp	x3, x4, [x20, #24]
  42ec58:	mov	x2, x0
  42ec5c:	mov	x5, x22
  42ec60:	mov	w1, #0x0                   	// #0
  42ec64:	mov	w0, #0x0                   	// #0
  42ec68:	bl	404050 <error@plt>
  42ec6c:	b	42e8c0 <wcrtomb@plt+0x29ca0>
  42ec70:	cbz	w0, 42e838 <wcrtomb@plt+0x29c18>
  42ec74:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ec78:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ec7c:	ldr	x4, [x20, #976]
  42ec80:	ldr	x0, [x0, #816]
  42ec84:	str	x0, [x2, #864]
  42ec88:	add	x4, x0, x4, lsl #3
  42ec8c:	cmp	x0, x4
  42ec90:	b.cs	42e838 <wcrtomb@plt+0x29c18>  // b.hs, b.nlast
  42ec94:	nop
  42ec98:	ldr	x1, [x0]
  42ec9c:	ldrb	w3, [x1]
  42eca0:	cmp	w3, #0x2d
  42eca4:	b.ne	42ecb0 <wcrtomb@plt+0x2a090>  // b.any
  42eca8:	ldrb	w1, [x1, #1]
  42ecac:	cbz	w1, 42f0bc <wcrtomb@plt+0x2a49c>
  42ecb0:	add	x0, x0, #0x8
  42ecb4:	str	x0, [x2, #864]
  42ecb8:	cmp	x0, x4
  42ecbc:	b.cc	42ec98 <wcrtomb@plt+0x2a078>  // b.lo, b.ul, b.last
  42ecc0:	b	42e838 <wcrtomb@plt+0x29c18>
  42ecc4:	cmp	w0, #0x8
  42ecc8:	b.eq	42ec74 <wcrtomb@plt+0x2a054>  // b.none
  42eccc:	cmp	w0, #0x9
  42ecd0:	b.ne	42e838 <wcrtomb@plt+0x29c18>  // b.any
  42ecd4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ecd8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ecdc:	ldr	x4, [x20, #976]
  42ece0:	ldr	x0, [x0, #816]
  42ece4:	str	x0, [x2, #864]
  42ece8:	add	x4, x0, x4, lsl #3
  42ecec:	cmp	x0, x4
  42ecf0:	b.cs	42e838 <wcrtomb@plt+0x29c18>  // b.hs, b.nlast
  42ecf4:	adrp	x5, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42ecf8:	add	x5, x5, #0x140
  42ecfc:	nop
  42ed00:	ldr	x1, [x0]
  42ed04:	ldrb	w3, [x1]
  42ed08:	cmp	w3, #0x2d
  42ed0c:	b.ne	42ed24 <wcrtomb@plt+0x2a104>  // b.any
  42ed10:	ldrb	w1, [x1, #1]
  42ed14:	cbnz	w1, 42ed24 <wcrtomb@plt+0x2a104>
  42ed18:	ldr	x1, [x21, #8]
  42ed1c:	cbnz	x1, 42f0dc <wcrtomb@plt+0x2a4bc>
  42ed20:	str	x5, [x21, #8]
  42ed24:	add	x0, x0, #0x8
  42ed28:	str	x0, [x2, #864]
  42ed2c:	cmp	x0, x4
  42ed30:	b.cc	42ed00 <wcrtomb@plt+0x2a0e0>  // b.lo, b.ul, b.last
  42ed34:	b	42e838 <wcrtomb@plt+0x29c18>
  42ed38:	cmp	w0, #0x1
  42ed3c:	b.ne	42e5ac <wcrtomb@plt+0x2998c>  // b.any
  42ed40:	str	xzr, [x24, #960]
  42ed44:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ed48:	ldr	w0, [x0, #908]
  42ed4c:	cmn	w0, #0x1
  42ed50:	b.eq	42e5b8 <wcrtomb@plt+0x29998>  // b.none
  42ed54:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ed58:	ldr	x0, [x0, #1136]
  42ed5c:	cbz	x0, 42ed64 <wcrtomb@plt+0x2a144>
  42ed60:	blr	x0
  42ed64:	mov	w2, #0x5                   	// #5
  42ed68:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ed6c:	mov	x0, #0x0                   	// #0
  42ed70:	add	x1, x1, #0xdc8
  42ed74:	bl	4049c0 <dcgettext@plt>
  42ed78:	mov	x2, x0
  42ed7c:	mov	w1, #0x0                   	// #0
  42ed80:	mov	w0, #0x0                   	// #0
  42ed84:	bl	404050 <error@plt>
  42ed88:	b	42e5b8 <wcrtomb@plt+0x29998>
  42ed8c:	cmp	w0, #0x2
  42ed90:	b.eq	42efcc <wcrtomb@plt+0x2a3ac>  // b.none
  42ed94:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ed98:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ed9c:	mov	w3, #0x8900                	// #35072
  42eda0:	mov	w1, #0xc900                	// #51456
  42eda4:	movk	w3, #0x8, lsl #16
  42eda8:	movk	w1, #0x8, lsl #16
  42edac:	str	w3, [x2, #836]
  42edb0:	mov	w19, #0x100                 	// #256
  42edb4:	str	w1, [x0, #828]
  42edb8:	b	42e778 <wcrtomb@plt+0x29b58>
  42edbc:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  42edc0:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42edc4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42edc8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42edcc:	ldrb	w3, [x3, #753]
  42edd0:	ldr	x2, [x2, #1184]
  42edd4:	cmp	w3, #0x0
  42edd8:	ldr	x0, [x0, #1176]
  42eddc:	csel	x0, x0, x2, ne  // ne = any
  42ede0:	str	x0, [x1, #4056]
  42ede4:	b	42e85c <wcrtomb@plt+0x29c3c>
  42ede8:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  42edec:	mov	x1, #0x1                   	// #1
  42edf0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42edf4:	str	x1, [x20, #976]
  42edf8:	ldr	x24, [x23, #816]
  42edfc:	add	x0, x0, #0xd70
  42ee00:	bl	404af0 <getenv@plt>
  42ee04:	ldr	x1, [x23, #816]
  42ee08:	str	x0, [x24]
  42ee0c:	ldr	x0, [x1]
  42ee10:	cbz	x0, 42f004 <wcrtomb@plt+0x2a3e4>
  42ee14:	ldr	x0, [x20, #976]
  42ee18:	b	42e554 <wcrtomb@plt+0x29934>
  42ee1c:	bl	422240 <wcrtomb@plt+0x1d620>
  42ee20:	tst	w0, #0xff
  42ee24:	b.eq	42f268 <wcrtomb@plt+0x2a648>  // b.none
  42ee28:	ldr	w2, [x25, #988]
  42ee2c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42ee30:	add	x0, x0, #0x960
  42ee34:	add	x3, x0, #0x1b0
  42ee38:	mov	w1, w2
  42ee3c:	ldr	w3, [x3, x1, lsl #2]
  42ee40:	tbnz	w3, #4, 42e548 <wcrtomb@plt+0x29928>
  42ee44:	ldr	x3, [x21, #40]
  42ee48:	cbz	x3, 42ee58 <wcrtomb@plt+0x2a238>
  42ee4c:	ldr	w3, [x3]
  42ee50:	cmp	w3, #0x1
  42ee54:	b.eq	42f128 <wcrtomb@plt+0x2a508>  // b.none
  42ee58:	str	xzr, [x20, #888]
  42ee5c:	b	42e548 <wcrtomb@plt+0x29928>
  42ee60:	ldr	x0, [sp, #104]
  42ee64:	ldr	x0, [x0, #8]
  42ee68:	tbz	x0, #63, 42e648 <wcrtomb@plt+0x29a28>
  42ee6c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ee70:	ldr	x0, [x0, #1136]
  42ee74:	cbz	x0, 42ee7c <wcrtomb@plt+0x2a25c>
  42ee78:	blr	x0
  42ee7c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ee80:	mov	w2, #0x5                   	// #5
  42ee84:	add	x1, x1, #0xf28
  42ee88:	b	42f074 <wcrtomb@plt+0x2a454>
  42ee8c:	ldr	x1, [x21, #160]
  42ee90:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42ee94:	add	x0, x0, #0x178
  42ee98:	bl	441210 <argp_parse@@Base+0x1430>
  42ee9c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eea0:	str	w0, [x1, #856]
  42eea4:	cbz	w0, 42eec0 <wcrtomb@plt+0x2a2a0>
  42eea8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eeac:	ldrb	w0, [x0, #753]
  42eeb0:	cbnz	w0, 42eec0 <wcrtomb@plt+0x2a2a0>
  42eeb4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eeb8:	ldr	x0, [x0, #744]
  42eebc:	cbz	x0, 42e88c <wcrtomb@plt+0x29c6c>
  42eec0:	strb	wzr, [x19, #885]
  42eec4:	b	42e88c <wcrtomb@plt+0x29c6c>
  42eec8:	mov	w1, #0x6                   	// #6
  42eecc:	mov	w0, w1
  42eed0:	str	w1, [x27, #944]
  42eed4:	b	42e504 <wcrtomb@plt+0x298e4>
  42eed8:	ldr	w1, [x25, #988]
  42eedc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42eee0:	add	x0, x0, #0x960
  42eee4:	add	x0, x0, #0x1b0
  42eee8:	ldr	w0, [x0, x1, lsl #2]
  42eeec:	tbnz	w0, #0, 42e684 <wcrtomb@plt+0x29a64>
  42eef0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42eef4:	ldr	x0, [x0, #1136]
  42eef8:	cbz	x0, 42ef00 <wcrtomb@plt+0x2a2e0>
  42eefc:	blr	x0
  42ef00:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ef04:	mov	w2, #0x5                   	// #5
  42ef08:	add	x1, x1, #0xf90
  42ef0c:	b	42f074 <wcrtomb@plt+0x2a454>
  42ef10:	cmp	w0, #0x1
  42ef14:	b.eq	42f094 <wcrtomb@plt+0x2a474>  // b.none
  42ef18:	ldr	x1, [x1, #8]
  42ef1c:	ldr	x0, [x2, #8]
  42ef20:	bl	404710 <strcmp@plt>
  42ef24:	cbz	w0, 42f094 <wcrtomb@plt+0x2a474>
  42ef28:	strb	wzr, [x22, #768]
  42ef2c:	b	42e800 <wcrtomb@plt+0x29be0>
  42ef30:	cmp	w1, #0x1
  42ef34:	b.eq	42f0a8 <wcrtomb@plt+0x2a488>  // b.none
  42ef38:	ldr	x0, [x2, #8]
  42ef3c:	ldr	x1, [x3, #8]
  42ef40:	bl	404710 <strcmp@plt>
  42ef44:	cbz	w0, 42f0a8 <wcrtomb@plt+0x2a488>
  42ef48:	strb	wzr, [x22, #971]
  42ef4c:	b	42e724 <wcrtomb@plt+0x29b04>
  42ef50:	ldr	x0, [x20, #976]
  42ef54:	cbz	x0, 42e838 <wcrtomb@plt+0x29c18>
  42ef58:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ef5c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42ef60:	add	x1, x1, #0x7d8
  42ef64:	ldr	x0, [x0, #816]
  42ef68:	ldr	x19, [x0]
  42ef6c:	mov	x0, x19
  42ef70:	bl	404710 <strcmp@plt>
  42ef74:	cbz	w0, 42e838 <wcrtomb@plt+0x29c18>
  42ef78:	ldr	x1, [x26, #1032]
  42ef7c:	mov	x0, x19
  42ef80:	bl	429f38 <wcrtomb@plt+0x25318>
  42ef84:	b	42e838 <wcrtomb@plt+0x29c18>
  42ef88:	bl	422240 <wcrtomb@plt+0x1d620>
  42ef8c:	tst	w0, #0xff
  42ef90:	b.ne	42e7a4 <wcrtomb@plt+0x29b84>  // b.any
  42ef94:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  42ef98:	ldr	w0, [x23, #772]
  42ef9c:	add	w0, w0, #0x1
  42efa0:	str	w0, [x23, #772]
  42efa4:	b	42e7a4 <wcrtomb@plt+0x29b84>
  42efa8:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42efac:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42efb0:	mov	w3, #0x900                 	// #2304
  42efb4:	mov	w1, #0x4900                	// #18688
  42efb8:	movk	w3, #0xc, lsl #16
  42efbc:	movk	w1, #0xc, lsl #16
  42efc0:	str	w3, [x2, #836]
  42efc4:	str	w1, [x0, #828]
  42efc8:	b	42e778 <wcrtomb@plt+0x29b58>
  42efcc:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  42efd0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42efd4:	mov	w3, #0x8900                	// #35072
  42efd8:	mov	w1, #0xc900                	// #51456
  42efdc:	movk	w3, #0xc, lsl #16
  42efe0:	movk	w1, #0xc, lsl #16
  42efe4:	str	w3, [x2, #836]
  42efe8:	mov	w19, #0x100                 	// #256
  42efec:	str	w1, [x0, #828]
  42eff0:	b	42e778 <wcrtomb@plt+0x29b58>
  42eff4:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42eff8:	add	x0, x0, #0x830
  42effc:	bl	42c860 <wcrtomb@plt+0x27c40>
  42f000:	b	42e4c0 <wcrtomb@plt+0x298a0>
  42f004:	ldr	x0, [x20, #976]
  42f008:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f00c:	add	x2, x2, #0x7d8
  42f010:	str	x2, [x1]
  42f014:	b	42e554 <wcrtomb@plt+0x29934>
  42f018:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f01c:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f020:	add	x1, x1, #0xda8
  42f024:	add	x0, x0, #0xdb0
  42f028:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f02c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f030:	ldr	x0, [x0, #816]
  42f034:	ldr	x0, [x0]
  42f038:	bl	4413e8 <argp_parse@@Base+0x1608>
  42f03c:	mov	x27, x0
  42f040:	bl	429fc8 <wcrtomb@plt+0x253a8>
  42f044:	mov	x23, x0
  42f048:	mov	x0, x27
  42f04c:	str	x23, [x22, #696]
  42f050:	bl	4047b0 <free@plt>
  42f054:	cbnz	x23, 42e724 <wcrtomb@plt+0x29b04>
  42f058:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f05c:	ldr	x0, [x0, #1136]
  42f060:	cbz	x0, 42f068 <wcrtomb@plt+0x2a448>
  42f064:	blr	x0
  42f068:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f06c:	add	x1, x1, #0x68
  42f070:	mov	w2, #0x5                   	// #5
  42f074:	mov	x0, #0x0                   	// #0
  42f078:	bl	4049c0 <dcgettext@plt>
  42f07c:	mov	x2, x0
  42f080:	mov	w1, #0x0                   	// #0
  42f084:	mov	w0, #0x0                   	// #0
  42f088:	bl	404050 <error@plt>
  42f08c:	mov	w0, #0x2                   	// #2
  42f090:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42f094:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f098:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f09c:	add	x1, x1, #0xdb0
  42f0a0:	add	x0, x0, #0xf8
  42f0a4:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f0a8:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f0ac:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f0b0:	add	x1, x1, #0x40
  42f0b4:	add	x0, x0, #0x58
  42f0b8:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f0bc:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f0c0:	ldr	x0, [x0, #1136]
  42f0c4:	cbz	x0, 42f0cc <wcrtomb@plt+0x2a4ac>
  42f0c8:	blr	x0
  42f0cc:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f0d0:	mov	w2, #0x5                   	// #5
  42f0d4:	add	x1, x1, #0x148
  42f0d8:	b	42f074 <wcrtomb@plt+0x2a454>
  42f0dc:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f0e0:	add	x0, x0, #0x140
  42f0e4:	bl	42c3f0 <wcrtomb@plt+0x277d0>
  42f0e8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f0ec:	ldr	x0, [x0, #1136]
  42f0f0:	cbz	x0, 42f0f8 <wcrtomb@plt+0x2a4d8>
  42f0f4:	blr	x0
  42f0f8:	mov	w2, #0x5                   	// #5
  42f0fc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f100:	mov	x0, #0x0                   	// #0
  42f104:	add	x1, x1, #0xca0
  42f108:	bl	4049c0 <dcgettext@plt>
  42f10c:	mov	x2, x0
  42f110:	ldrb	w3, [x20]
  42f114:	mov	w1, #0x0                   	// #0
  42f118:	mov	w0, #0x0                   	// #0
  42f11c:	bl	404050 <error@plt>
  42f120:	mov	w0, #0x2                   	// #2
  42f124:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42f128:	cmp	w2, #0x9
  42f12c:	b.hi	42f3ac <wcrtomb@plt+0x2a78c>  // b.pmore
  42f130:	add	x2, x0, #0x70
  42f134:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f138:	add	x0, x0, #0xd60
  42f13c:	ldr	x1, [x2, x1, lsl #3]
  42f140:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f144:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f148:	ldr	x0, [x0, #1136]
  42f14c:	cbz	x0, 42f154 <wcrtomb@plt+0x2a534>
  42f150:	blr	x0
  42f154:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f158:	mov	w2, #0x5                   	// #5
  42f15c:	add	x1, x1, #0x110
  42f160:	b	42f074 <wcrtomb@plt+0x2a454>
  42f164:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f168:	ldr	x0, [x0, #1136]
  42f16c:	cbz	x0, 42f174 <wcrtomb@plt+0x2a554>
  42f170:	blr	x0
  42f174:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f178:	mov	w2, #0x5                   	// #5
  42f17c:	add	x1, x1, #0xf60
  42f180:	b	42f074 <wcrtomb@plt+0x2a454>
  42f184:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f188:	ldr	x0, [x0, #1136]
  42f18c:	cbz	x0, 42f194 <wcrtomb@plt+0x2a574>
  42f190:	blr	x0
  42f194:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f198:	mov	w2, #0x5                   	// #5
  42f19c:	add	x1, x1, #0xc8
  42f1a0:	b	42f074 <wcrtomb@plt+0x2a454>
  42f1a4:	cmp	w3, #0x9
  42f1a8:	b.hi	42f3ac <wcrtomb@plt+0x2a78c>  // b.pmore
  42f1ac:	add	x1, x0, #0x70
  42f1b0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f1b4:	add	x0, x0, #0xec0
  42f1b8:	ldr	x1, [x1, x2, lsl #3]
  42f1bc:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f1c0:	cmp	w3, #0x9
  42f1c4:	b.hi	42f3ac <wcrtomb@plt+0x2a78c>  // b.pmore
  42f1c8:	add	x1, x0, #0x70
  42f1cc:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f1d0:	add	x0, x0, #0x30
  42f1d4:	ldr	x1, [x1, x2, lsl #3]
  42f1d8:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f1dc:	cmp	w3, #0x9
  42f1e0:	b.hi	42f3ac <wcrtomb@plt+0x2a78c>  // b.pmore
  42f1e4:	add	x1, x0, #0x70
  42f1e8:	adrp	x0, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  42f1ec:	add	x0, x0, #0x20
  42f1f0:	ldr	x1, [x1, x2, lsl #3]
  42f1f4:	bl	42c630 <wcrtomb@plt+0x27a10>
  42f1f8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f1fc:	ldr	x0, [x0, #1136]
  42f200:	cbz	x0, 42f208 <wcrtomb@plt+0x2a5e8>
  42f204:	blr	x0
  42f208:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f20c:	add	x1, x1, #0xcd8
  42f210:	mov	w2, #0x5                   	// #5
  42f214:	mov	x0, #0x0                   	// #0
  42f218:	bl	4049c0 <dcgettext@plt>
  42f21c:	mov	x19, x0
  42f220:	mov	x0, x24
  42f224:	bl	43a9b0 <wcrtomb@plt+0x35d90>
  42f228:	mov	x2, x19
  42f22c:	mov	x3, x0
  42f230:	mov	w1, #0x0                   	// #0
  42f234:	mov	w0, #0x0                   	// #0
  42f238:	bl	404050 <error@plt>
  42f23c:	bl	410460 <wcrtomb@plt+0xb840>
  42f240:	mov	w0, #0x2                   	// #2
  42f244:	bl	404020 <exit@plt>
  42f248:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f24c:	ldr	x0, [x0, #1136]
  42f250:	cbz	x0, 42f258 <wcrtomb@plt+0x2a638>
  42f254:	blr	x0
  42f258:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f25c:	mov	w2, #0x5                   	// #5
  42f260:	add	x1, x1, #0xcf8
  42f264:	b	42f074 <wcrtomb@plt+0x2a454>
  42f268:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f26c:	ldr	x0, [x0, #1136]
  42f270:	cbz	x0, 42f278 <wcrtomb@plt+0x2a658>
  42f274:	blr	x0
  42f278:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f27c:	mov	w2, #0x5                   	// #5
  42f280:	add	x1, x1, #0xd30
  42f284:	b	42f074 <wcrtomb@plt+0x2a454>
  42f288:	ldr	x0, [x19, #1088]
  42f28c:	bl	433b88 <wcrtomb@plt+0x2ef68>
  42f290:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f294:	ldr	x0, [x0, #1136]
  42f298:	cbz	x0, 42f2a0 <wcrtomb@plt+0x2a680>
  42f29c:	blr	x0
  42f2a0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f2a4:	mov	w2, #0x5                   	// #5
  42f2a8:	add	x1, x1, #0xe70
  42f2ac:	b	42f074 <wcrtomb@plt+0x2a454>
  42f2b0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f2b4:	ldr	x0, [x0, #1136]
  42f2b8:	cbz	x0, 42f2c0 <wcrtomb@plt+0x2a6a0>
  42f2bc:	blr	x0
  42f2c0:	mov	x3, x23
  42f2c4:	mov	w4, #0x5                   	// #5
  42f2c8:	adrp	x2, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f2cc:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f2d0:	add	x2, x2, #0xe00
  42f2d4:	add	x1, x1, #0xe38
  42f2d8:	mov	x0, #0x0                   	// #0
  42f2dc:	bl	4048f0 <dcngettext@plt>
  42f2e0:	mov	x19, x0
  42f2e4:	ldr	x0, [x22, #776]
  42f2e8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  42f2ec:	mov	x3, x0
  42f2f0:	mov	x4, x23
  42f2f4:	mov	x2, x19
  42f2f8:	mov	w1, #0x0                   	// #0
  42f2fc:	mov	w0, #0x0                   	// #0
  42f300:	bl	404050 <error@plt>
  42f304:	mov	w0, #0x2                   	// #2
  42f308:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42f30c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f310:	ldr	x0, [x0, #1136]
  42f314:	cbz	x0, 42f31c <wcrtomb@plt+0x2a6fc>
  42f318:	blr	x0
  42f31c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f320:	mov	w2, #0x5                   	// #5
  42f324:	add	x1, x1, #0xe98
  42f328:	b	42f074 <wcrtomb@plt+0x2a454>
  42f32c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f330:	ldr	x0, [x0, #1136]
  42f334:	cbz	x0, 42f33c <wcrtomb@plt+0x2a71c>
  42f338:	blr	x0
  42f33c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f340:	mov	w2, #0x5                   	// #5
  42f344:	add	x1, x1, #0xed0
  42f348:	b	42f074 <wcrtomb@plt+0x2a454>
  42f34c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f350:	ldr	x0, [x0, #1136]
  42f354:	cbz	x0, 42f35c <wcrtomb@plt+0x2a73c>
  42f358:	blr	x0
  42f35c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f360:	mov	w2, #0x5                   	// #5
  42f364:	add	x1, x1, #0xd78
  42f368:	b	42f074 <wcrtomb@plt+0x2a454>
  42f36c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f370:	ldr	x0, [x0, #1136]
  42f374:	cbz	x0, 42f37c <wcrtomb@plt+0x2a75c>
  42f378:	blr	x0
  42f37c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  42f380:	mov	w2, #0x5                   	// #5
  42f384:	add	x1, x1, #0xf00
  42f388:	b	42f074 <wcrtomb@plt+0x2a454>
  42f38c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f390:	ldr	x0, [x0, #1136]
  42f394:	cbz	x0, 42f39c <wcrtomb@plt+0x2a77c>
  42f398:	blr	x0
  42f39c:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  42f3a0:	mov	w2, #0x5                   	// #5
  42f3a4:	add	x1, x1, #0x70
  42f3a8:	b	42f074 <wcrtomb@plt+0x2a454>
  42f3ac:	bl	404650 <abort@plt>
  42f3b0:	mov	x2, #0x1a8                 	// #424
  42f3b4:	mov	w1, #0x0                   	// #0
  42f3b8:	b	404410 <memset@plt>
  42f3bc:	nop
  42f3c0:	stp	x29, x30, [sp, #-32]!
  42f3c4:	mov	x29, sp
  42f3c8:	str	x19, [sp, #16]
  42f3cc:	mov	x19, x0
  42f3d0:	ldr	x0, [x0, #400]
  42f3d4:	cbz	x0, 42f408 <wcrtomb@plt+0x2a7e8>
  42f3d8:	bl	404590 <closedir@plt>
  42f3dc:	mov	w1, w0
  42f3e0:	str	xzr, [x19, #400]
  42f3e4:	mov	w0, #0x1                   	// #1
  42f3e8:	str	wzr, [x19, #408]
  42f3ec:	cbz	w1, 42f3fc <wcrtomb@plt+0x2a7dc>
  42f3f0:	ldr	x0, [x19]
  42f3f4:	bl	4202d8 <wcrtomb@plt+0x1b6b8>
  42f3f8:	mov	w0, #0x0                   	// #0
  42f3fc:	ldr	x19, [sp, #16]
  42f400:	ldp	x29, x30, [sp], #32
  42f404:	ret
  42f408:	ldr	w0, [x19, #408]
  42f40c:	cmp	w0, #0x0
  42f410:	b.gt	42f428 <wcrtomb@plt+0x2a808>
  42f414:	str	wzr, [x19, #408]
  42f418:	mov	w0, #0x1                   	// #1
  42f41c:	ldr	x19, [sp, #16]
  42f420:	ldp	x29, x30, [sp], #32
  42f424:	ret
  42f428:	bl	4045c0 <close@plt>
  42f42c:	mov	w1, w0
  42f430:	b	42f3e0 <wcrtomb@plt+0x2a7c0>
  42f434:	nop
  42f438:	stp	x29, x30, [sp, #-32]!
  42f43c:	mov	x29, sp
  42f440:	str	x19, [sp, #16]
  42f444:	mov	x19, x0
  42f448:	ldr	x0, [x0, #400]
  42f44c:	cbz	x0, 42f4e8 <wcrtomb@plt+0x2a8c8>
  42f450:	bl	404590 <closedir@plt>
  42f454:	str	xzr, [x19, #400]
  42f458:	str	wzr, [x19, #408]
  42f45c:	cbz	w0, 42f468 <wcrtomb@plt+0x2a848>
  42f460:	ldr	x0, [x19]
  42f464:	bl	4202d8 <wcrtomb@plt+0x1b6b8>
  42f468:	ldp	x1, x0, [x19, #328]
  42f46c:	bl	416a90 <wcrtomb@plt+0x11e70>
  42f470:	ldr	x0, [x19]
  42f474:	bl	4047b0 <free@plt>
  42f478:	ldr	x0, [x19, #8]
  42f47c:	bl	4047b0 <free@plt>
  42f480:	ldr	x0, [x19, #24]
  42f484:	bl	4047b0 <free@plt>
  42f488:	ldr	x0, [x19, #32]
  42f48c:	bl	4047b0 <free@plt>
  42f490:	ldr	x0, [x19, #40]
  42f494:	bl	4047b0 <free@plt>
  42f498:	ldr	x0, [x19, #48]
  42f49c:	bl	4047b0 <free@plt>
  42f4a0:	ldr	x0, [x19, #56]
  42f4a4:	bl	4047b0 <free@plt>
  42f4a8:	ldr	x0, [x19, #72]
  42f4ac:	bl	4047b0 <free@plt>
  42f4b0:	ldr	x0, [x19, #304]
  42f4b4:	bl	4047b0 <free@plt>
  42f4b8:	ldr	x0, [x19, #384]
  42f4bc:	bl	4047b0 <free@plt>
  42f4c0:	add	x0, x19, #0x158
  42f4c4:	bl	417868 <wcrtomb@plt+0x12c48>
  42f4c8:	mov	x0, x19
  42f4cc:	bl	410b38 <wcrtomb@plt+0xbf18>
  42f4d0:	mov	x0, x19
  42f4d4:	mov	x2, #0x1a8                 	// #424
  42f4d8:	ldr	x19, [sp, #16]
  42f4dc:	mov	w1, #0x0                   	// #0
  42f4e0:	ldp	x29, x30, [sp], #32
  42f4e4:	b	404410 <memset@plt>
  42f4e8:	ldr	w0, [x19, #408]
  42f4ec:	cmp	w0, #0x0
  42f4f0:	b.gt	42f4fc <wcrtomb@plt+0x2a8dc>
  42f4f4:	str	wzr, [x19, #408]
  42f4f8:	b	42f468 <wcrtomb@plt+0x2a848>
  42f4fc:	bl	4045c0 <close@plt>
  42f500:	b	42f454 <wcrtomb@plt+0x2a834>
  42f504:	nop
  42f508:	adrp	x5, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f50c:	mov	w4, #0x10                  	// #16
  42f510:	ldr	w5, [x5, #80]
  42f514:	asr	w4, w4, w5
  42f518:	ands	w4, w4, #0x1
  42f51c:	csel	x3, x3, xzr, ne  // ne = any
  42f520:	cmp	w4, #0x0
  42f524:	csel	x1, x1, xzr, ne  // ne = any
  42f528:	cmp	x0, x2
  42f52c:	b.lt	42f53c <wcrtomb@plt+0x2a91c>  // b.tstop
  42f530:	sub	w1, w1, w3
  42f534:	csinc	w0, w1, wzr, le
  42f538:	ret
  42f53c:	mov	w0, #0xffffffff            	// #-1
  42f540:	ret
  42f544:	nop
  42f548:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42f54c:	ldr	w2, [x1, #3568]
  42f550:	cmp	w2, w0
  42f554:	b.ge	42f55c <wcrtomb@plt+0x2a93c>  // b.tcont
  42f558:	str	w0, [x1, #3568]
  42f55c:	ret
  42f560:	stp	x29, x30, [sp, #-64]!
  42f564:	mov	x29, sp
  42f568:	str	x23, [sp, #48]
  42f56c:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42f570:	add	x3, x23, #0xd00
  42f574:	stp	x19, x20, [sp, #16]
  42f578:	mov	x19, x2
  42f57c:	stp	x21, x22, [sp, #32]
  42f580:	mov	w20, w0
  42f584:	mov	x22, x1
  42f588:	ldr	x2, [x3, #8]
  42f58c:	ldr	x21, [x23, #3328]
  42f590:	cmp	x2, x19
  42f594:	b.cc	42f640 <wcrtomb@plt+0x2aa20>  // b.lo, b.ul, b.last
  42f598:	mov	x1, x22
  42f59c:	mov	x2, x19
  42f5a0:	mov	x0, x21
  42f5a4:	bl	403f70 <memcpy@plt>
  42f5a8:	cmp	w20, #0x3
  42f5ac:	b.eq	42f670 <wcrtomb@plt+0x2aa50>  // b.none
  42f5b0:	b.hi	42f5f0 <wcrtomb@plt+0x2a9d0>  // b.pmore
  42f5b4:	cmp	w20, #0x1
  42f5b8:	b.eq	42f6b8 <wcrtomb@plt+0x2aa98>  // b.none
  42f5bc:	cmp	w20, #0x2
  42f5c0:	b.ne	42f5d8 <wcrtomb@plt+0x2a9b8>  // b.any
  42f5c4:	bl	4041f0 <__ctype_tolower_loc@plt>
  42f5c8:	ldrb	w1, [x21]
  42f5cc:	ldr	x0, [x0]
  42f5d0:	ldr	w0, [x0, x1, lsl #2]
  42f5d4:	strb	w0, [x21]
  42f5d8:	mov	x0, x21
  42f5dc:	ldp	x19, x20, [sp, #16]
  42f5e0:	ldp	x21, x22, [sp, #32]
  42f5e4:	ldr	x23, [sp, #48]
  42f5e8:	ldp	x29, x30, [sp], #64
  42f5ec:	ret
  42f5f0:	cmp	w20, #0x4
  42f5f4:	b.ne	42f5d8 <wcrtomb@plt+0x2a9b8>  // b.any
  42f5f8:	add	x19, x21, x19
  42f5fc:	cmp	x19, x21
  42f600:	b.ls	42f5d8 <wcrtomb@plt+0x2a9b8>  // b.plast
  42f604:	bl	4041f0 <__ctype_tolower_loc@plt>
  42f608:	mov	x1, x21
  42f60c:	nop
  42f610:	ldrb	w3, [x1]
  42f614:	ldr	x2, [x0]
  42f618:	ldr	w2, [x2, x3, lsl #2]
  42f61c:	strb	w2, [x1], #1
  42f620:	cmp	x1, x19
  42f624:	b.ne	42f610 <wcrtomb@plt+0x2a9f0>  // b.any
  42f628:	mov	x0, x21
  42f62c:	ldp	x19, x20, [sp, #16]
  42f630:	ldp	x21, x22, [sp, #32]
  42f634:	ldr	x23, [sp, #48]
  42f638:	ldp	x29, x30, [sp], #64
  42f63c:	ret
  42f640:	mov	x0, x21
  42f644:	mov	x1, x19
  42f648:	str	x19, [x3, #8]
  42f64c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  42f650:	mov	x21, x0
  42f654:	str	x0, [x23, #3328]
  42f658:	mov	x1, x22
  42f65c:	mov	x2, x19
  42f660:	mov	x0, x21
  42f664:	bl	403f70 <memcpy@plt>
  42f668:	cmp	w20, #0x3
  42f66c:	b.ne	42f5b0 <wcrtomb@plt+0x2a990>  // b.any
  42f670:	add	x19, x21, x19
  42f674:	cmp	x19, x21
  42f678:	b.ls	42f5d8 <wcrtomb@plt+0x2a9b8>  // b.plast
  42f67c:	bl	404540 <__ctype_toupper_loc@plt>
  42f680:	mov	x1, x21
  42f684:	nop
  42f688:	ldrb	w3, [x1]
  42f68c:	ldr	x2, [x0]
  42f690:	ldr	w2, [x2, x3, lsl #2]
  42f694:	strb	w2, [x1], #1
  42f698:	cmp	x1, x19
  42f69c:	b.ne	42f688 <wcrtomb@plt+0x2aa68>  // b.any
  42f6a0:	mov	x0, x21
  42f6a4:	ldp	x19, x20, [sp, #16]
  42f6a8:	ldp	x21, x22, [sp, #32]
  42f6ac:	ldr	x23, [sp, #48]
  42f6b0:	ldp	x29, x30, [sp], #64
  42f6b4:	ret
  42f6b8:	bl	404540 <__ctype_toupper_loc@plt>
  42f6bc:	ldrb	w1, [x21]
  42f6c0:	ldr	x0, [x0]
  42f6c4:	ldr	w0, [x0, x1, lsl #2]
  42f6c8:	strb	w0, [x21]
  42f6cc:	mov	x0, x21
  42f6d0:	ldp	x19, x20, [sp, #16]
  42f6d4:	ldp	x21, x22, [sp, #32]
  42f6d8:	ldr	x23, [sp, #48]
  42f6dc:	ldp	x29, x30, [sp], #64
  42f6e0:	ret
  42f6e4:	nop
  42f6e8:	sub	sp, sp, #0x280
  42f6ec:	stp	x29, x30, [sp]
  42f6f0:	mov	x29, sp
  42f6f4:	stp	x19, x20, [sp, #16]
  42f6f8:	mov	x19, x0
  42f6fc:	mov	x0, #0x70                  	// #112
  42f700:	bl	450278 <argp_parse@@Base+0x10498>
  42f704:	mov	x20, x0
  42f708:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42f70c:	add	x1, x1, #0xd00
  42f710:	ldr	x0, [x1, #16]
  42f714:	cbz	x0, 42fa20 <wcrtomb@plt+0x2ae00>
  42f718:	str	x20, [x0]
  42f71c:	ldrb	w0, [x19]
  42f720:	str	x20, [x1, #16]
  42f724:	cmp	w0, #0x73
  42f728:	b.eq	42f880 <wcrtomb@plt+0x2ac60>  // b.none
  42f72c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42f730:	mov	x0, x19
  42f734:	add	x1, x1, #0xe00
  42f738:	mov	x2, #0x6                   	// #6
  42f73c:	bl	4043c0 <strncmp@plt>
  42f740:	cbnz	w0, 43048c <wcrtomb@plt+0x2b86c>
  42f744:	ldrb	w1, [x19, #6]
  42f748:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42f74c:	add	x19, x19, #0x6
  42f750:	str	wzr, [x0, #408]
  42f754:	cbz	w1, 42f7e0 <wcrtomb@plt+0x2abc0>
  42f758:	add	x0, x0, #0x198
  42f75c:	stp	x21, x22, [sp, #32]
  42f760:	stp	x23, x24, [sp, #48]
  42f764:	stp	x25, x26, [sp, #64]
  42f768:	stp	x27, x28, [sp, #80]
  42f76c:	b	42f794 <wcrtomb@plt+0x2ab74>
  42f770:	cmp	w1, #0x52
  42f774:	b.eq	42f81c <wcrtomb@plt+0x2abfc>  // b.none
  42f778:	cmp	w1, #0x53
  42f77c:	b.ne	42f7f4 <wcrtomb@plt+0x2abd4>  // b.any
  42f780:	ldr	w1, [x0]
  42f784:	and	w1, w1, #0xfffffffb
  42f788:	str	w1, [x0]
  42f78c:	ldrb	w1, [x19, #1]!
  42f790:	cbz	w1, 42f7d0 <wcrtomb@plt+0x2abb0>
  42f794:	cmp	w1, #0x3b
  42f798:	b.eq	42f9f8 <wcrtomb@plt+0x2add8>  // b.none
  42f79c:	cmp	w1, #0x68
  42f7a0:	b.eq	42f80c <wcrtomb@plt+0x2abec>  // b.none
  42f7a4:	b.ls	42f770 <wcrtomb@plt+0x2ab50>  // b.plast
  42f7a8:	cmp	w1, #0x72
  42f7ac:	b.eq	42f870 <wcrtomb@plt+0x2ac50>  // b.none
  42f7b0:	cmp	w1, #0x73
  42f7b4:	b.ne	42f82c <wcrtomb@plt+0x2ac0c>  // b.any
  42f7b8:	ldr	w1, [x0]
  42f7bc:	orr	w1, w1, #0x4
  42f7c0:	str	w1, [x0]
  42f7c4:	ldrb	w1, [x19, #1]!
  42f7c8:	cbnz	w1, 42f794 <wcrtomb@plt+0x2ab74>
  42f7cc:	nop
  42f7d0:	ldp	x21, x22, [sp, #32]
  42f7d4:	ldp	x23, x24, [sp, #48]
  42f7d8:	ldp	x25, x26, [sp, #64]
  42f7dc:	ldp	x27, x28, [sp, #80]
  42f7e0:	mov	x0, x19
  42f7e4:	ldp	x29, x30, [sp]
  42f7e8:	ldp	x19, x20, [sp, #16]
  42f7ec:	add	sp, sp, #0x280
  42f7f0:	ret
  42f7f4:	cmp	w1, #0x48
  42f7f8:	b.ne	42f82c <wcrtomb@plt+0x2ac0c>  // b.any
  42f7fc:	ldr	w1, [x0]
  42f800:	and	w1, w1, #0xfffffffd
  42f804:	str	w1, [x0]
  42f808:	b	42f78c <wcrtomb@plt+0x2ab6c>
  42f80c:	ldr	w1, [x0]
  42f810:	orr	w1, w1, #0x2
  42f814:	str	w1, [x0]
  42f818:	b	42f78c <wcrtomb@plt+0x2ab6c>
  42f81c:	ldr	w1, [x0]
  42f820:	and	w1, w1, #0xfffffffe
  42f824:	str	w1, [x0]
  42f828:	b	42f78c <wcrtomb@plt+0x2ab6c>
  42f82c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f830:	ldr	x0, [x0, #1136]
  42f834:	cbz	x0, 42f840 <wcrtomb@plt+0x2ac20>
  42f838:	blr	x0
  42f83c:	nop
  42f840:	mov	w2, #0x5                   	// #5
  42f844:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42f848:	mov	x0, #0x0                   	// #0
  42f84c:	add	x1, x1, #0xe08
  42f850:	bl	4049c0 <dcgettext@plt>
  42f854:	mov	x2, x0
  42f858:	ldrb	w3, [x19]
  42f85c:	mov	w1, #0x0                   	// #0
  42f860:	mov	w0, #0x0                   	// #0
  42f864:	bl	404050 <error@plt>
  42f868:	mov	w0, #0x2                   	// #2
  42f86c:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42f870:	ldr	w1, [x0]
  42f874:	orr	w1, w1, #0x1
  42f878:	str	w1, [x0]
  42f87c:	b	42f78c <wcrtomb@plt+0x2ab6c>
  42f880:	stp	x21, x22, [sp, #32]
  42f884:	add	x1, x19, #0x2
  42f888:	stp	x23, x24, [sp, #48]
  42f88c:	stp	x25, x26, [sp, #64]
  42f890:	mov	w26, #0x2                   	// #2
  42f894:	stp	x27, x28, [sp, #80]
  42f898:	mov	x28, #0x2                   	// #2
  42f89c:	ldrb	w0, [x19, #2]
  42f8a0:	str	x1, [sp, #96]
  42f8a4:	ldrb	w21, [x19, #1]
  42f8a8:	cbnz	w0, 42f8c0 <wcrtomb@plt+0x2aca0>
  42f8ac:	b	42f8f4 <wcrtomb@plt+0x2acd4>
  42f8b0:	mov	w26, w27
  42f8b4:	sxtw	x28, w26
  42f8b8:	ldrb	w0, [x19, w26, sxtw]
  42f8bc:	cbz	w0, 42f8f4 <wcrtomb@plt+0x2acd4>
  42f8c0:	cmp	w21, w0
  42f8c4:	add	w27, w26, #0x1
  42f8c8:	b.eq	430088 <wcrtomb@plt+0x2b468>  // b.none
  42f8cc:	cmp	w0, #0x5c
  42f8d0:	b.ne	42f8b0 <wcrtomb@plt+0x2ac90>  // b.any
  42f8d4:	add	x28, x19, x28
  42f8d8:	add	w26, w26, #0x2
  42f8dc:	ldrb	w0, [x28, #1]
  42f8e0:	cmp	w0, #0x0
  42f8e4:	csel	w26, w26, w27, ne  // ne = any
  42f8e8:	sxtw	x28, w26
  42f8ec:	ldrb	w0, [x19, w26, sxtw]
  42f8f0:	cbnz	w0, 42f8c0 <wcrtomb@plt+0x2aca0>
  42f8f4:	cbnz	w21, 430098 <wcrtomb@plt+0x2b478>
  42f8f8:	add	w27, w26, #0x1
  42f8fc:	mov	w23, w27
  42f900:	sxtw	x1, w27
  42f904:	ldrb	w0, [x19, w27, sxtw]
  42f908:	add	x25, x19, x1
  42f90c:	cbz	w0, 42f960 <wcrtomb@plt+0x2ad40>
  42f910:	mov	w23, w27
  42f914:	b	42f928 <wcrtomb@plt+0x2ad08>
  42f918:	mov	w23, w0
  42f91c:	sxtw	x1, w23
  42f920:	ldrb	w0, [x19, w23, sxtw]
  42f924:	cbz	w0, 42f95c <wcrtomb@plt+0x2ad3c>
  42f928:	cmp	w21, w0
  42f92c:	b.eq	42f960 <wcrtomb@plt+0x2ad40>  // b.none
  42f930:	cmp	w0, #0x5c
  42f934:	add	w0, w23, #0x1
  42f938:	b.ne	42f918 <wcrtomb@plt+0x2acf8>  // b.any
  42f93c:	add	x1, x19, x1
  42f940:	add	w23, w23, #0x2
  42f944:	ldrb	w1, [x1, #1]
  42f948:	cmp	w1, #0x0
  42f94c:	csel	w23, w23, w0, ne  // ne = any
  42f950:	sxtw	x1, w23
  42f954:	ldrb	w0, [x19, w23, sxtw]
  42f958:	cbnz	w0, 42f928 <wcrtomb@plt+0x2ad08>
  42f95c:	cbnz	w21, 430098 <wcrtomb@plt+0x2b478>
  42f960:	add	x1, x1, #0x1
  42f964:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  42f968:	add	x0, x19, x1
  42f96c:	str	x0, [sp, #120]
  42f970:	ldr	w2, [x2, #408]
  42f974:	ldrb	w1, [x19, x1]
  42f978:	stp	wzr, w2, [x20, #8]
  42f97c:	cmp	w1, #0x3b
  42f980:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  42f984:	b.eq	430404 <wcrtomb@plt+0x2b7e4>  // b.none
  42f988:	mov	x2, x0
  42f98c:	cmp	w1, #0x69
  42f990:	mov	w24, #0x0                   	// #0
  42f994:	mov	w19, #0x1                   	// #1
  42f998:	b.eq	42fa58 <wcrtomb@plt+0x2ae38>  // b.none
  42f99c:	nop
  42f9a0:	b.hi	42fc70 <wcrtomb@plt+0x2b050>  // b.pmore
  42f9a4:	cmp	w1, #0x39
  42f9a8:	b.hi	42fa28 <wcrtomb@plt+0x2ae08>  // b.pmore
  42f9ac:	cmp	w1, #0x2f
  42f9b0:	b.hi	42fc84 <wcrtomb@plt+0x2b064>  // b.pmore
  42f9b4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  42f9b8:	ldr	x0, [x0, #1136]
  42f9bc:	cbz	x0, 42f9c4 <wcrtomb@plt+0x2ada4>
  42f9c0:	blr	x0
  42f9c4:	mov	w2, #0x5                   	// #5
  42f9c8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  42f9cc:	mov	x0, #0x0                   	// #0
  42f9d0:	add	x1, x1, #0xe48
  42f9d4:	bl	4049c0 <dcgettext@plt>
  42f9d8:	mov	x2, x0
  42f9dc:	ldr	x3, [sp, #120]
  42f9e0:	mov	w1, #0x0                   	// #0
  42f9e4:	mov	w0, #0x0                   	// #0
  42f9e8:	ldrb	w3, [x3]
  42f9ec:	bl	404050 <error@plt>
  42f9f0:	mov	w0, #0x2                   	// #2
  42f9f4:	bl	42c3b0 <wcrtomb@plt+0x27790>
  42f9f8:	add	x19, x19, #0x1
  42f9fc:	mov	x0, x19
  42fa00:	ldp	x29, x30, [sp]
  42fa04:	ldp	x19, x20, [sp, #16]
  42fa08:	ldp	x21, x22, [sp, #32]
  42fa0c:	ldp	x23, x24, [sp, #48]
  42fa10:	ldp	x25, x26, [sp, #64]
  42fa14:	ldp	x27, x28, [sp, #80]
  42fa18:	add	sp, sp, #0x280
  42fa1c:	ret
  42fa20:	str	x20, [x1, #24]
  42fa24:	b	42f71c <wcrtomb@plt+0x2aafc>
  42fa28:	cmp	w1, #0x67
  42fa2c:	b.ne	42fff0 <wcrtomb@plt+0x2b3d0>  // b.any
  42fa30:	add	x0, x0, #0x1
  42fa34:	str	w19, [x20, #8]
  42fa38:	str	x0, [sp, #120]
  42fa3c:	ldrb	w1, [x2, #1]
  42fa40:	cmp	w1, #0x3b
  42fa44:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  42fa48:	b.eq	42fa78 <wcrtomb@plt+0x2ae58>  // b.none
  42fa4c:	mov	x2, x0
  42fa50:	cmp	w1, #0x69
  42fa54:	b.ne	42f9a0 <wcrtomb@plt+0x2ad80>  // b.any
  42fa58:	add	x0, x0, #0x1
  42fa5c:	str	x0, [sp, #120]
  42fa60:	orr	w24, w24, #0x2
  42fa64:	ldrb	w1, [x2, #1]
  42fa68:	cmp	w1, #0x3b
  42fa6c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  42fa70:	b.ne	42fa4c <wcrtomb@plt+0x2ae2c>  // b.any
  42fa74:	nop
  42fa78:	cmp	w1, #0x3b
  42fa7c:	b.ne	42fa88 <wcrtomb@plt+0x2ae68>  // b.any
  42fa80:	add	x1, x0, #0x1
  42fa84:	str	x1, [sp, #120]
  42fa88:	sub	w0, w26, #0x1
  42fa8c:	add	x19, x20, #0x18
  42fa90:	sxtw	x0, w0
  42fa94:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fa98:	ldr	x1, [sp, #96]
  42fa9c:	add	x28, x0, x28
  42faa0:	sub	w2, w26, #0x2
  42faa4:	mov	x22, x0
  42faa8:	sxtw	x2, w2
  42faac:	bl	403f70 <memcpy@plt>
  42fab0:	sturb	wzr, [x28, #-2]
  42fab4:	mov	w2, w24
  42fab8:	mov	x1, x22
  42fabc:	mov	x0, x19
  42fac0:	bl	460cc0 <_obstack_memory_used@@Base+0xf8b0>
  42fac4:	cbnz	w0, 43043c <wcrtomb@plt+0x2b81c>
  42fac8:	ldrb	w0, [x22]
  42facc:	cmp	w0, #0x5e
  42fad0:	b.eq	4300d4 <wcrtomb@plt+0x2b4b4>  // b.none
  42fad4:	cmp	w26, #0x2
  42fad8:	b.eq	42fae8 <wcrtomb@plt+0x2aec8>  // b.none
  42fadc:	ldurb	w0, [x28, #-3]
  42fae0:	cmp	w0, #0x24
  42fae4:	b.eq	4300d4 <wcrtomb@plt+0x2b4b4>  // b.none
  42fae8:	sub	w19, w23, w27
  42faec:	mov	x0, x22
  42faf0:	bl	4047b0 <free@plt>
  42faf4:	add	w0, w19, #0x1
  42faf8:	sxtw	x0, w0
  42fafc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fb00:	mov	x23, x0
  42fb04:	sxtw	x2, w19
  42fb08:	mov	x1, x25
  42fb0c:	bl	403f70 <memcpy@plt>
  42fb10:	str	x23, [sp, #128]
  42fb14:	mov	x27, x23
  42fb18:	strb	wzr, [x23, w19, sxtw]
  42fb1c:	mov	x3, x23
  42fb20:	ldrb	w2, [x23]
  42fb24:	cbz	w2, 42fc50 <wcrtomb@plt+0x2b030>
  42fb28:	mov	w24, #0x1                   	// #1
  42fb2c:	mov	x26, #0x2                   	// #2
  42fb30:	mov	w25, #0x8                   	// #8
  42fb34:	b	42fb50 <wcrtomb@plt+0x2af30>
  42fb38:	cmp	w2, #0x26
  42fb3c:	b.eq	42fee4 <wcrtomb@plt+0x2b2c4>  // b.none
  42fb40:	add	x3, x3, #0x1
  42fb44:	str	x3, [sp, #128]
  42fb48:	ldrb	w2, [x3]
  42fb4c:	cbz	w2, 42fbf8 <wcrtomb@plt+0x2afd8>
  42fb50:	cmp	w2, #0x5c
  42fb54:	b.ne	42fb38 <wcrtomb@plt+0x2af18>  // b.any
  42fb58:	subs	x28, x3, x27
  42fb5c:	b.ne	42ff2c <wcrtomb@plt+0x2b30c>  // b.any
  42fb60:	add	x0, x3, #0x1
  42fb64:	str	x0, [sp, #128]
  42fb68:	ldrb	w1, [x3, #1]
  42fb6c:	cmp	w1, #0x62
  42fb70:	b.eq	4302e8 <wcrtomb@plt+0x2b6c8>  // b.none
  42fb74:	b.hi	42fd6c <wcrtomb@plt+0x2b14c>  // b.pmore
  42fb78:	cmp	w1, #0x4c
  42fb7c:	b.eq	430204 <wcrtomb@plt+0x2b5e4>  // b.none
  42fb80:	b.ls	42fd18 <wcrtomb@plt+0x2b0f8>  // b.plast
  42fb84:	cmp	w1, #0x5c
  42fb88:	b.eq	4302ac <wcrtomb@plt+0x2b68c>  // b.none
  42fb8c:	cmp	w1, #0x61
  42fb90:	b.ne	42fcc8 <wcrtomb@plt+0x2b0a8>  // b.any
  42fb94:	mov	x0, #0x20                  	// #32
  42fb98:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fb9c:	mov	x19, x0
  42fba0:	ldr	x0, [x20, #96]
  42fba4:	str	xzr, [x19]
  42fba8:	cbz	x0, 4303bc <wcrtomb@plt+0x2b79c>
  42fbac:	str	x19, [x0]
  42fbb0:	ldr	x1, [x20, #104]
  42fbb4:	str	wzr, [x19, #8]
  42fbb8:	mov	x0, #0x2                   	// #2
  42fbbc:	add	x1, x1, #0x1
  42fbc0:	stp	x19, x1, [x20, #96]
  42fbc4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fbc8:	mov	w2, #0x7                   	// #7
  42fbcc:	nop
  42fbd0:	ldr	x27, [sp, #128]
  42fbd4:	str	x0, [x19, #16]
  42fbd8:	mov	x1, #0x1                   	// #1
  42fbdc:	strh	w2, [x0]
  42fbe0:	add	x27, x27, x1
  42fbe4:	str	x27, [sp, #128]
  42fbe8:	mov	x3, x27
  42fbec:	str	x1, [x19, #24]
  42fbf0:	ldrb	w2, [x3]
  42fbf4:	cbnz	w2, 42fb50 <wcrtomb@plt+0x2af30>
  42fbf8:	subs	x19, x3, x27
  42fbfc:	b.eq	42fc50 <wcrtomb@plt+0x2b030>  // b.none
  42fc00:	mov	x0, #0x20                  	// #32
  42fc04:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fc08:	mov	x21, x0
  42fc0c:	ldr	x0, [x20, #96]
  42fc10:	str	xzr, [x21]
  42fc14:	cbz	x0, 430384 <wcrtomb@plt+0x2b764>
  42fc18:	str	x21, [x0]
  42fc1c:	ldr	x1, [x20, #104]
  42fc20:	str	wzr, [x21, #8]
  42fc24:	add	x0, x19, #0x1
  42fc28:	add	x1, x1, #0x1
  42fc2c:	stp	x21, x1, [x20, #96]
  42fc30:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fc34:	mov	x20, x0
  42fc38:	str	x0, [x21, #16]
  42fc3c:	mov	x1, x27
  42fc40:	mov	x2, x19
  42fc44:	bl	403f70 <memcpy@plt>
  42fc48:	strb	wzr, [x20, x19]
  42fc4c:	str	x19, [x21, #24]
  42fc50:	mov	x0, x23
  42fc54:	bl	4047b0 <free@plt>
  42fc58:	ldp	x21, x22, [sp, #32]
  42fc5c:	ldp	x23, x24, [sp, #48]
  42fc60:	ldp	x25, x26, [sp, #64]
  42fc64:	ldp	x27, x28, [sp, #80]
  42fc68:	ldr	x19, [sp, #120]
  42fc6c:	b	42f7e0 <wcrtomb@plt+0x2abc0>
  42fc70:	cmp	w1, #0x78
  42fc74:	b.ne	42fca0 <wcrtomb@plt+0x2b080>  // b.any
  42fc78:	orr	w24, w24, #0x1
  42fc7c:	add	x0, x0, #0x1
  42fc80:	b	42fa38 <wcrtomb@plt+0x2ae18>
  42fc84:	mov	w2, #0x0                   	// #0
  42fc88:	add	x1, sp, #0x78
  42fc8c:	bl	403fe0 <strtoul@plt>
  42fc90:	str	w0, [x20, #16]
  42fc94:	ldr	x0, [sp, #120]
  42fc98:	sub	x2, x0, #0x1
  42fc9c:	b	42fa38 <wcrtomb@plt+0x2ae18>
  42fca0:	cmp	w1, #0x72
  42fca4:	b.eq	430070 <wcrtomb@plt+0x2b450>  // b.none
  42fca8:	cmp	w1, #0x73
  42fcac:	b.ne	42f9b4 <wcrtomb@plt+0x2ad94>  // b.any
  42fcb0:	ldr	x2, [sp, #120]
  42fcb4:	ldr	w1, [x20, #12]
  42fcb8:	add	x0, x2, #0x1
  42fcbc:	orr	w1, w1, #0x4
  42fcc0:	str	w1, [x20, #12]
  42fcc4:	b	42fa38 <wcrtomb@plt+0x2ae18>
  42fcc8:	cmp	w1, #0x55
  42fccc:	b.ne	430234 <wcrtomb@plt+0x2b614>  // b.any
  42fcd0:	mov	x0, #0x20                  	// #32
  42fcd4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fcd8:	ldr	x1, [x20, #96]
  42fcdc:	str	xzr, [x0]
  42fce0:	cbz	x1, 4303b4 <wcrtomb@plt+0x2b794>
  42fce4:	str	x0, [x1]
  42fce8:	ldr	x27, [sp, #128]
  42fcec:	mov	w3, #0x2                   	// #2
  42fcf0:	ldr	x1, [x20, #104]
  42fcf4:	add	x27, x27, #0x1
  42fcf8:	mov	w2, #0x3                   	// #3
  42fcfc:	str	x27, [sp, #128]
  42fd00:	add	x1, x1, #0x1
  42fd04:	str	w3, [x0, #8]
  42fd08:	mov	x3, x27
  42fd0c:	str	w2, [x0, #16]
  42fd10:	stp	x0, x1, [x20, #96]
  42fd14:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  42fd18:	cmp	w1, #0x39
  42fd1c:	b.hi	42fdc4 <wcrtomb@plt+0x2b1a4>  // b.pmore
  42fd20:	cmp	w1, #0x2f
  42fd24:	b.hi	43016c <wcrtomb@plt+0x2b54c>  // b.pmore
  42fd28:	cmp	w1, #0x26
  42fd2c:	b.ne	430234 <wcrtomb@plt+0x2b614>  // b.any
  42fd30:	mov	x0, #0x20                  	// #32
  42fd34:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fd38:	mov	x19, x0
  42fd3c:	ldr	x0, [x20, #96]
  42fd40:	str	xzr, [x19]
  42fd44:	cbz	x0, 4303ec <wcrtomb@plt+0x2b7cc>
  42fd48:	str	x19, [x0]
  42fd4c:	ldr	x1, [x20, #104]
  42fd50:	str	wzr, [x19, #8]
  42fd54:	mov	x0, #0x2                   	// #2
  42fd58:	add	x1, x1, #0x1
  42fd5c:	stp	x19, x1, [x20, #96]
  42fd60:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fd64:	mov	w2, #0x26                  	// #38
  42fd68:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  42fd6c:	cmp	w1, #0x72
  42fd70:	b.eq	430130 <wcrtomb@plt+0x2b510>  // b.none
  42fd74:	b.ls	42fe54 <wcrtomb@plt+0x2b234>  // b.plast
  42fd78:	cmp	w1, #0x75
  42fd7c:	b.eq	4301c0 <wcrtomb@plt+0x2b5a0>  // b.none
  42fd80:	cmp	w1, #0x76
  42fd84:	b.ne	42fe10 <wcrtomb@plt+0x2b1f0>  // b.any
  42fd88:	mov	x0, #0x20                  	// #32
  42fd8c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fd90:	mov	x19, x0
  42fd94:	ldr	x0, [x20, #96]
  42fd98:	str	xzr, [x19]
  42fd9c:	cbz	x0, 4303e4 <wcrtomb@plt+0x2b7c4>
  42fda0:	str	x19, [x0]
  42fda4:	ldr	x1, [x20, #104]
  42fda8:	str	wzr, [x19, #8]
  42fdac:	mov	x0, #0x2                   	// #2
  42fdb0:	add	x1, x1, #0x1
  42fdb4:	stp	x19, x1, [x20, #96]
  42fdb8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fdbc:	mov	w2, #0xb                   	// #11
  42fdc0:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  42fdc4:	cmp	w1, #0x45
  42fdc8:	b.ne	430234 <wcrtomb@plt+0x2b614>  // b.any
  42fdcc:	mov	x0, #0x20                  	// #32
  42fdd0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fdd4:	ldr	x1, [x20, #96]
  42fdd8:	str	xzr, [x0]
  42fddc:	cbz	x1, 4303dc <wcrtomb@plt+0x2b7bc>
  42fde0:	str	x0, [x1]
  42fde4:	ldr	x27, [sp, #128]
  42fde8:	mov	w2, #0x2                   	// #2
  42fdec:	ldr	x1, [x20, #104]
  42fdf0:	add	x27, x27, #0x1
  42fdf4:	mov	x3, x27
  42fdf8:	str	w2, [x0, #8]
  42fdfc:	add	x1, x1, #0x1
  42fe00:	str	wzr, [x0, #16]
  42fe04:	stp	x0, x1, [x20, #96]
  42fe08:	str	x27, [sp, #128]
  42fe0c:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  42fe10:	cmp	w1, #0x74
  42fe14:	b.ne	430234 <wcrtomb@plt+0x2b614>  // b.any
  42fe18:	mov	x0, #0x20                  	// #32
  42fe1c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fe20:	mov	x19, x0
  42fe24:	ldr	x0, [x20, #96]
  42fe28:	str	xzr, [x19]
  42fe2c:	cbz	x0, 4303d4 <wcrtomb@plt+0x2b7b4>
  42fe30:	str	x19, [x0]
  42fe34:	ldr	x1, [x20, #104]
  42fe38:	str	wzr, [x19, #8]
  42fe3c:	mov	x0, #0x2                   	// #2
  42fe40:	add	x1, x1, #0x1
  42fe44:	stp	x19, x1, [x20, #96]
  42fe48:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fe4c:	mov	w2, #0x9                   	// #9
  42fe50:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  42fe54:	cmp	w1, #0x6c
  42fe58:	b.eq	4300ec <wcrtomb@plt+0x2b4cc>  // b.none
  42fe5c:	cmp	w1, #0x6e
  42fe60:	b.ne	42fea0 <wcrtomb@plt+0x2b280>  // b.any
  42fe64:	mov	x0, #0x20                  	// #32
  42fe68:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fe6c:	mov	x19, x0
  42fe70:	ldr	x0, [x20, #96]
  42fe74:	str	xzr, [x19]
  42fe78:	cbz	x0, 4303fc <wcrtomb@plt+0x2b7dc>
  42fe7c:	str	x19, [x0]
  42fe80:	ldr	x1, [x20, #104]
  42fe84:	str	wzr, [x19, #8]
  42fe88:	mov	x0, #0x2                   	// #2
  42fe8c:	add	x1, x1, #0x1
  42fe90:	stp	x19, x1, [x20, #96]
  42fe94:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fe98:	mov	w2, #0xa                   	// #10
  42fe9c:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  42fea0:	cmp	w1, #0x66
  42fea4:	b.ne	430234 <wcrtomb@plt+0x2b614>  // b.any
  42fea8:	mov	x0, #0x20                  	// #32
  42feac:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42feb0:	mov	x19, x0
  42feb4:	ldr	x0, [x20, #96]
  42feb8:	str	xzr, [x19]
  42febc:	cbz	x0, 4303f4 <wcrtomb@plt+0x2b7d4>
  42fec0:	str	x19, [x0]
  42fec4:	ldr	x1, [x20, #104]
  42fec8:	str	wzr, [x19, #8]
  42fecc:	mov	x0, #0x2                   	// #2
  42fed0:	add	x1, x1, #0x1
  42fed4:	stp	x19, x1, [x20, #96]
  42fed8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fedc:	mov	w2, #0xc                   	// #12
  42fee0:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  42fee4:	subs	x19, x3, x27
  42fee8:	b.ne	42ff84 <wcrtomb@plt+0x2b364>  // b.any
  42feec:	mov	x0, #0x20                  	// #32
  42fef0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42fef4:	ldr	x1, [x20, #96]
  42fef8:	str	xzr, [x0]
  42fefc:	cbz	x1, 42ffe8 <wcrtomb@plt+0x2b3c8>
  42ff00:	str	x0, [x1]
  42ff04:	ldr	x27, [sp, #128]
  42ff08:	str	w24, [x0, #8]
  42ff0c:	ldr	x1, [x20, #104]
  42ff10:	add	x27, x27, #0x1
  42ff14:	mov	x3, x27
  42ff18:	str	xzr, [x0, #16]
  42ff1c:	add	x1, x1, #0x1
  42ff20:	stp	x0, x1, [x20, #96]
  42ff24:	str	x27, [sp, #128]
  42ff28:	b	42fb48 <wcrtomb@plt+0x2af28>
  42ff2c:	mov	x0, #0x20                  	// #32
  42ff30:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ff34:	mov	x19, x0
  42ff38:	ldr	x0, [x20, #96]
  42ff3c:	str	xzr, [x19]
  42ff40:	cbz	x0, 4300dc <wcrtomb@plt+0x2b4bc>
  42ff44:	str	x19, [x0]
  42ff48:	ldr	x1, [x20, #104]
  42ff4c:	str	wzr, [x19, #8]
  42ff50:	add	x0, x28, #0x1
  42ff54:	add	x1, x1, #0x1
  42ff58:	stp	x19, x1, [x20, #96]
  42ff5c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ff60:	str	x0, [x19, #16]
  42ff64:	mov	x1, x27
  42ff68:	mov	x27, x0
  42ff6c:	mov	x2, x28
  42ff70:	bl	403f70 <memcpy@plt>
  42ff74:	str	x28, [x19, #24]
  42ff78:	strb	wzr, [x27, x28]
  42ff7c:	ldr	x3, [sp, #128]
  42ff80:	b	42fb60 <wcrtomb@plt+0x2af40>
  42ff84:	mov	x0, #0x20                  	// #32
  42ff88:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ff8c:	mov	x28, x0
  42ff90:	ldr	x0, [x20, #96]
  42ff94:	str	xzr, [x28]
  42ff98:	cbz	x0, 4300e4 <wcrtomb@plt+0x2b4c4>
  42ff9c:	str	x28, [x0]
  42ffa0:	ldr	x1, [x20, #104]
  42ffa4:	str	wzr, [x28, #8]
  42ffa8:	add	x0, x19, #0x1
  42ffac:	add	x1, x1, #0x1
  42ffb0:	stp	x28, x1, [x20, #96]
  42ffb4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ffb8:	str	x0, [x28, #16]
  42ffbc:	mov	x1, x27
  42ffc0:	mov	x27, x0
  42ffc4:	mov	x2, x19
  42ffc8:	bl	403f70 <memcpy@plt>
  42ffcc:	str	x19, [x28, #24]
  42ffd0:	mov	x0, #0x20                  	// #32
  42ffd4:	strb	wzr, [x27, x19]
  42ffd8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  42ffdc:	str	xzr, [x0]
  42ffe0:	ldr	x1, [x20, #96]
  42ffe4:	cbnz	x1, 42ff00 <wcrtomb@plt+0x2b2e0>
  42ffe8:	str	x0, [x20, #88]
  42ffec:	b	42ff04 <wcrtomb@plt+0x2b2e4>
  42fff0:	cmp	w1, #0x68
  42fff4:	b.ne	430010 <wcrtomb@plt+0x2b3f0>  // b.any
  42fff8:	ldr	x2, [sp, #120]
  42fffc:	ldr	w1, [x20, #12]
  430000:	add	x0, x2, #0x1
  430004:	orr	w1, w1, #0x2
  430008:	str	w1, [x20, #12]
  43000c:	b	42fa38 <wcrtomb@plt+0x2ae18>
  430010:	cmp	w1, #0x52
  430014:	b.eq	430058 <wcrtomb@plt+0x2b438>  // b.none
  430018:	cmp	w1, #0x53
  43001c:	b.ne	430038 <wcrtomb@plt+0x2b418>  // b.any
  430020:	ldr	x2, [sp, #120]
  430024:	ldr	w1, [x20, #12]
  430028:	add	x0, x2, #0x1
  43002c:	and	w1, w1, #0xfffffffb
  430030:	str	w1, [x20, #12]
  430034:	b	42fa38 <wcrtomb@plt+0x2ae18>
  430038:	cmp	w1, #0x48
  43003c:	b.ne	42f9b4 <wcrtomb@plt+0x2ad94>  // b.any
  430040:	ldr	x2, [sp, #120]
  430044:	ldr	w1, [x20, #12]
  430048:	add	x0, x2, #0x1
  43004c:	and	w1, w1, #0xfffffffd
  430050:	str	w1, [x20, #12]
  430054:	b	42fa38 <wcrtomb@plt+0x2ae18>
  430058:	ldr	x2, [sp, #120]
  43005c:	ldr	w1, [x20, #12]
  430060:	add	x0, x2, #0x1
  430064:	and	w1, w1, #0xfffffffe
  430068:	str	w1, [x20, #12]
  43006c:	b	42fa38 <wcrtomb@plt+0x2ae18>
  430070:	ldr	x2, [sp, #120]
  430074:	ldr	w1, [x20, #12]
  430078:	add	x0, x2, #0x1
  43007c:	orr	w1, w1, #0x1
  430080:	str	w1, [x20, #12]
  430084:	b	42fa38 <wcrtomb@plt+0x2ae18>
  430088:	ldrb	w0, [x19, w27, sxtw]
  43008c:	sxtw	x1, w27
  430090:	add	x25, x19, x1
  430094:	cbnz	w0, 42f910 <wcrtomb@plt+0x2acf0>
  430098:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  43009c:	ldr	x0, [x0, #1136]
  4300a0:	cbz	x0, 4300a8 <wcrtomb@plt+0x2b488>
  4300a4:	blr	x0
  4300a8:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  4300ac:	add	x1, x1, #0xe28
  4300b0:	mov	w2, #0x5                   	// #5
  4300b4:	mov	x0, #0x0                   	// #0
  4300b8:	bl	4049c0 <dcgettext@plt>
  4300bc:	mov	x2, x0
  4300c0:	mov	w1, #0x0                   	// #0
  4300c4:	mov	w0, #0x0                   	// #0
  4300c8:	bl	404050 <error@plt>
  4300cc:	mov	w0, #0x2                   	// #2
  4300d0:	bl	42c3b0 <wcrtomb@plt+0x27790>
  4300d4:	str	wzr, [x20, #8]
  4300d8:	b	42fae8 <wcrtomb@plt+0x2aec8>
  4300dc:	str	x19, [x20, #88]
  4300e0:	b	42ff48 <wcrtomb@plt+0x2b328>
  4300e4:	str	x28, [x20, #88]
  4300e8:	b	42ffa0 <wcrtomb@plt+0x2b380>
  4300ec:	mov	x0, #0x20                  	// #32
  4300f0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4300f4:	ldr	x1, [x20, #96]
  4300f8:	str	xzr, [x0]
  4300fc:	cbz	x1, 43038c <wcrtomb@plt+0x2b76c>
  430100:	str	x0, [x1]
  430104:	ldr	x27, [sp, #128]
  430108:	mov	w2, #0x2                   	// #2
  43010c:	ldr	x1, [x20, #104]
  430110:	add	x27, x27, #0x1
  430114:	str	x27, [sp, #128]
  430118:	mov	x3, x27
  43011c:	str	w2, [x0, #16]
  430120:	add	x1, x1, #0x1
  430124:	str	w2, [x0, #8]
  430128:	stp	x0, x1, [x20, #96]
  43012c:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  430130:	mov	x0, #0x20                  	// #32
  430134:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430138:	mov	x19, x0
  43013c:	ldr	x0, [x20, #96]
  430140:	str	xzr, [x19]
  430144:	cbz	x0, 4303ac <wcrtomb@plt+0x2b78c>
  430148:	str	x19, [x0]
  43014c:	ldr	x1, [x20, #104]
  430150:	str	wzr, [x19, #8]
  430154:	mov	x0, #0x2                   	// #2
  430158:	add	x1, x1, #0x1
  43015c:	stp	x19, x1, [x20, #96]
  430160:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430164:	mov	w2, #0xd                   	// #13
  430168:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  43016c:	add	x1, sp, #0x80
  430170:	mov	w2, #0xa                   	// #10
  430174:	bl	403fe0 <strtoul@plt>
  430178:	mov	x19, x0
  43017c:	ldr	x1, [x20, #72]
  430180:	cmp	x1, x0
  430184:	b.cc	43041c <wcrtomb@plt+0x2b7fc>  // b.lo, b.ul, b.last
  430188:	mov	x0, #0x20                  	// #32
  43018c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430190:	ldr	x1, [x20, #96]
  430194:	str	xzr, [x0]
  430198:	cbz	x1, 4303a4 <wcrtomb@plt+0x2b784>
  43019c:	str	x0, [x1]
  4301a0:	ldr	x1, [x20, #104]
  4301a4:	str	w24, [x0, #8]
  4301a8:	ldr	x27, [sp, #128]
  4301ac:	add	x1, x1, #0x1
  4301b0:	str	x19, [x0, #16]
  4301b4:	mov	x3, x27
  4301b8:	stp	x0, x1, [x20, #96]
  4301bc:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  4301c0:	mov	x0, #0x20                  	// #32
  4301c4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4301c8:	ldr	x1, [x20, #96]
  4301cc:	str	xzr, [x0]
  4301d0:	cbz	x1, 43039c <wcrtomb@plt+0x2b77c>
  4301d4:	str	x0, [x1]
  4301d8:	ldr	x27, [sp, #128]
  4301dc:	mov	w2, #0x2                   	// #2
  4301e0:	ldr	x1, [x20, #104]
  4301e4:	add	x27, x27, #0x1
  4301e8:	mov	x3, x27
  4301ec:	str	w2, [x0, #8]
  4301f0:	add	x1, x1, #0x1
  4301f4:	str	w24, [x0, #16]
  4301f8:	stp	x0, x1, [x20, #96]
  4301fc:	str	x27, [sp, #128]
  430200:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  430204:	mov	x0, #0x20                  	// #32
  430208:	bl	4501a0 <argp_parse@@Base+0x103c0>
  43020c:	ldr	x1, [x20, #96]
  430210:	str	xzr, [x0]
  430214:	cbz	x1, 430394 <wcrtomb@plt+0x2b774>
  430218:	str	x0, [x1]
  43021c:	ldr	x27, [sp, #128]
  430220:	mov	w3, #0x2                   	// #2
  430224:	mov	w2, #0x4                   	// #4
  430228:	add	x27, x27, #0x1
  43022c:	ldr	x1, [x20, #104]
  430230:	b	42fcfc <wcrtomb@plt+0x2b0dc>
  430234:	cmp	w21, w1
  430238:	b.eq	43033c <wcrtomb@plt+0x2b71c>  // b.none
  43023c:	ldr	w3, [sp, #108]
  430240:	mov	w2, #0x5c                  	// #92
  430244:	mov	x0, #0x20                  	// #32
  430248:	bfxil	w3, w2, #0, #8
  43024c:	mov	w2, w3
  430250:	bfi	w2, w1, #8, #8
  430254:	str	w2, [sp, #108]
  430258:	bl	4501a0 <argp_parse@@Base+0x103c0>
  43025c:	mov	x19, x0
  430260:	ldr	x0, [x20, #96]
  430264:	str	xzr, [x19]
  430268:	cbz	x0, 430414 <wcrtomb@plt+0x2b7f4>
  43026c:	str	x19, [x0]
  430270:	ldr	x1, [x20, #104]
  430274:	str	wzr, [x19, #8]
  430278:	mov	x0, #0x3                   	// #3
  43027c:	add	x1, x1, #0x1
  430280:	stp	x19, x1, [x20, #96]
  430284:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430288:	strb	wzr, [x0, #2]
  43028c:	ldrh	w1, [sp, #108]
  430290:	strh	w1, [x0]
  430294:	stp	x0, x26, [x19, #16]
  430298:	ldr	x27, [sp, #128]
  43029c:	add	x27, x27, #0x1
  4302a0:	str	x27, [sp, #128]
  4302a4:	mov	x3, x27
  4302a8:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  4302ac:	mov	x0, #0x20                  	// #32
  4302b0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4302b4:	mov	x19, x0
  4302b8:	ldr	x0, [x20, #96]
  4302bc:	str	xzr, [x19]
  4302c0:	cbz	x0, 4303cc <wcrtomb@plt+0x2b7ac>
  4302c4:	str	x19, [x0]
  4302c8:	ldr	x1, [x20, #104]
  4302cc:	str	wzr, [x19, #8]
  4302d0:	mov	x0, #0x2                   	// #2
  4302d4:	add	x1, x1, #0x1
  4302d8:	stp	x19, x1, [x20, #96]
  4302dc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4302e0:	mov	w2, #0x5c                  	// #92
  4302e4:	b	42fbd0 <wcrtomb@plt+0x2afb0>
  4302e8:	mov	x0, #0x20                  	// #32
  4302ec:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4302f0:	mov	x19, x0
  4302f4:	ldr	x0, [x20, #96]
  4302f8:	str	xzr, [x19]
  4302fc:	cbz	x0, 4303c4 <wcrtomb@plt+0x2b7a4>
  430300:	str	x19, [x0]
  430304:	ldr	x1, [x20, #104]
  430308:	str	wzr, [x19, #8]
  43030c:	mov	x0, #0x2                   	// #2
  430310:	add	x1, x1, #0x1
  430314:	stp	x19, x1, [x20, #96]
  430318:	bl	4501a0 <argp_parse@@Base+0x103c0>
  43031c:	strh	w25, [x0]
  430320:	ldr	x27, [sp, #128]
  430324:	mov	x1, #0x1                   	// #1
  430328:	stp	x0, x1, [x19, #16]
  43032c:	add	x27, x27, x1
  430330:	mov	x3, x27
  430334:	str	x27, [sp, #128]
  430338:	b	42fbf0 <wcrtomb@plt+0x2afd0>
  43033c:	mov	x0, #0x20                  	// #32
  430340:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430344:	mov	x19, x0
  430348:	ldr	x0, [x20, #96]
  43034c:	str	xzr, [x19]
  430350:	cbz	x0, 43040c <wcrtomb@plt+0x2b7ec>
  430354:	str	x19, [x0]
  430358:	ldr	x1, [x20, #104]
  43035c:	str	wzr, [x19, #8]
  430360:	mov	x0, #0x2                   	// #2
  430364:	add	x1, x1, #0x1
  430368:	stp	x19, x1, [x20, #96]
  43036c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430370:	strb	w21, [x0]
  430374:	mov	x1, #0x1                   	// #1
  430378:	strb	wzr, [x0, #1]
  43037c:	stp	x0, x1, [x19, #16]
  430380:	b	430298 <wcrtomb@plt+0x2b678>
  430384:	str	x21, [x20, #88]
  430388:	b	42fc1c <wcrtomb@plt+0x2affc>
  43038c:	str	x0, [x20, #88]
  430390:	b	430104 <wcrtomb@plt+0x2b4e4>
  430394:	str	x0, [x20, #88]
  430398:	b	43021c <wcrtomb@plt+0x2b5fc>
  43039c:	str	x0, [x20, #88]
  4303a0:	b	4301d8 <wcrtomb@plt+0x2b5b8>
  4303a4:	str	x0, [x20, #88]
  4303a8:	b	4301a0 <wcrtomb@plt+0x2b580>
  4303ac:	str	x19, [x20, #88]
  4303b0:	b	43014c <wcrtomb@plt+0x2b52c>
  4303b4:	str	x0, [x20, #88]
  4303b8:	b	42fce8 <wcrtomb@plt+0x2b0c8>
  4303bc:	str	x19, [x20, #88]
  4303c0:	b	42fbb0 <wcrtomb@plt+0x2af90>
  4303c4:	str	x19, [x20, #88]
  4303c8:	b	430304 <wcrtomb@plt+0x2b6e4>
  4303cc:	str	x19, [x20, #88]
  4303d0:	b	4302c8 <wcrtomb@plt+0x2b6a8>
  4303d4:	str	x19, [x20, #88]
  4303d8:	b	42fe34 <wcrtomb@plt+0x2b214>
  4303dc:	str	x0, [x20, #88]
  4303e0:	b	42fde4 <wcrtomb@plt+0x2b1c4>
  4303e4:	str	x19, [x20, #88]
  4303e8:	b	42fda4 <wcrtomb@plt+0x2b184>
  4303ec:	str	x19, [x20, #88]
  4303f0:	b	42fd4c <wcrtomb@plt+0x2b12c>
  4303f4:	str	x19, [x20, #88]
  4303f8:	b	42fec4 <wcrtomb@plt+0x2b2a4>
  4303fc:	str	x19, [x20, #88]
  430400:	b	42fe80 <wcrtomb@plt+0x2b260>
  430404:	mov	w24, #0x0                   	// #0
  430408:	b	42fa78 <wcrtomb@plt+0x2ae58>
  43040c:	str	x19, [x20, #88]
  430410:	b	430358 <wcrtomb@plt+0x2b738>
  430414:	str	x19, [x20, #88]
  430418:	b	430270 <wcrtomb@plt+0x2b650>
  43041c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  430420:	ldr	x0, [x0, #1136]
  430424:	cbz	x0, 43042c <wcrtomb@plt+0x2b80c>
  430428:	blr	x0
  43042c:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  430430:	mov	w2, #0x5                   	// #5
  430434:	add	x1, x1, #0xea0
  430438:	b	4300b4 <wcrtomb@plt+0x2b494>
  43043c:	mov	x1, x19
  430440:	add	x2, sp, #0x80
  430444:	mov	x3, #0x200                 	// #512
  430448:	bl	460dd8 <_obstack_memory_used@@Base+0xf9c8>
  43044c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  430450:	ldr	x0, [x0, #1136]
  430454:	cbz	x0, 43045c <wcrtomb@plt+0x2b83c>
  430458:	blr	x0
  43045c:	mov	w2, #0x5                   	// #5
  430460:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  430464:	mov	x0, #0x0                   	// #0
  430468:	add	x1, x1, #0xe78
  43046c:	bl	4049c0 <dcgettext@plt>
  430470:	mov	x2, x0
  430474:	add	x3, sp, #0x80
  430478:	mov	w1, #0x0                   	// #0
  43047c:	mov	w0, #0x0                   	// #0
  430480:	bl	404050 <error@plt>
  430484:	mov	w0, #0x2                   	// #2
  430488:	bl	42c3b0 <wcrtomb@plt+0x27790>
  43048c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  430490:	stp	x21, x22, [sp, #32]
  430494:	ldr	x0, [x0, #1136]
  430498:	stp	x23, x24, [sp, #48]
  43049c:	stp	x25, x26, [sp, #64]
  4304a0:	stp	x27, x28, [sp, #80]
  4304a4:	cbz	x0, 4300a8 <wcrtomb@plt+0x2b488>
  4304a8:	blr	x0
  4304ac:	b	4300a8 <wcrtomb@plt+0x2b488>
  4304b0:	ldrb	w1, [x0]
  4304b4:	cbz	w1, 4304d4 <wcrtomb@plt+0x2b8b4>
  4304b8:	stp	x29, x30, [sp, #-16]!
  4304bc:	mov	x29, sp
  4304c0:	bl	42f6e8 <wcrtomb@plt+0x2aac8>
  4304c4:	ldrb	w1, [x0]
  4304c8:	cbnz	w1, 4304c0 <wcrtomb@plt+0x2b8a0>
  4304cc:	ldp	x29, x30, [sp], #16
  4304d0:	ret
  4304d4:	ret
  4304d8:	stp	x29, x30, [sp, #-160]!
  4304dc:	mov	x29, sp
  4304e0:	stp	x25, x26, [sp, #64]
  4304e4:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4304e8:	add	x25, x25, #0xd00
  4304ec:	stp	x19, x20, [sp, #16]
  4304f0:	stp	x2, x0, [sp, #136]
  4304f4:	ldr	x19, [x0]
  4304f8:	stp	x21, x22, [sp, #32]
  4304fc:	ldrb	w0, [x25, #32]
  430500:	str	w1, [sp, #124]
  430504:	str	x3, [sp, #152]
  430508:	cbz	w0, 4309c8 <wcrtomb@plt+0x2bda8>
  43050c:	ldr	x22, [x25, #24]
  430510:	cbz	x22, 430968 <wcrtomb@plt+0x2bd48>
  430514:	mov	w20, #0x0                   	// #0
  430518:	stp	x23, x24, [sp, #48]
  43051c:	stp	x27, x28, [sp, #80]
  430520:	add	x28, x25, #0x30
  430524:	b	430530 <wcrtomb@plt+0x2b910>
  430528:	ldr	x22, [x22]
  43052c:	cbz	x22, 4306f4 <wcrtomb@plt+0x2bad4>
  430530:	ldr	w0, [x22, #12]
  430534:	ldr	w1, [sp, #124]
  430538:	tst	w1, w0
  43053c:	b.eq	430528 <wcrtomb@plt+0x2b908>  // b.none
  430540:	ldr	x0, [x22, #72]
  430544:	add	x0, x0, #0x1
  430548:	lsl	x0, x0, #4
  43054c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430550:	ldrb	w1, [x19]
  430554:	mov	x23, x0
  430558:	cbz	w1, 430774 <wcrtomb@plt+0x2bb54>
  43055c:	add	x0, x22, #0x18
  430560:	mov	w24, #0x0                   	// #0
  430564:	mov	w20, #0x0                   	// #0
  430568:	stp	xzr, x0, [sp, #104]
  43056c:	b	4305f0 <wcrtomb@plt+0x2b9d0>
  430570:	ldp	x26, x21, [x23]
  430574:	cbz	x26, 4305a0 <wcrtomb@plt+0x2b980>
  430578:	ldp	x0, x1, [x28, #24]
  43057c:	sub	x1, x1, x0
  430580:	cmp	x26, x1
  430584:	b.hi	4307c8 <wcrtomb@plt+0x2bba8>  // b.pmore
  430588:	mov	x2, x26
  43058c:	mov	x1, x19
  430590:	bl	403f70 <memcpy@plt>
  430594:	ldr	x0, [x28, #24]
  430598:	add	x2, x0, x26
  43059c:	str	x2, [x28, #24]
  4305a0:	ldr	x1, [sp, #104]
  4305a4:	ldr	w0, [x22, #16]
  4305a8:	add	x1, x1, #0x1
  4305ac:	str	x1, [sp, #104]
  4305b0:	cbz	w0, 4307f0 <wcrtomb@plt+0x2bbd0>
  4305b4:	cmp	x1, w0, uxtw
  4305b8:	b.cs	4307f0 <wcrtomb@plt+0x2bbd0>  // b.hs, b.nlast
  4305bc:	ldp	x0, x1, [x28, #24]
  4305c0:	sub	x1, x1, x0
  4305c4:	cmp	x21, x1
  4305c8:	b.hi	4307dc <wcrtomb@plt+0x2bbbc>  // b.pmore
  4305cc:	mov	x2, x21
  4305d0:	mov	x1, x19
  4305d4:	bl	403f70 <memcpy@plt>
  4305d8:	add	x19, x19, x21
  4305dc:	ldr	x0, [x28, #24]
  4305e0:	add	x21, x0, x21
  4305e4:	str	x21, [x28, #24]
  4305e8:	ldrb	w0, [x19]
  4305ec:	cbz	w0, 430774 <wcrtomb@plt+0x2bb54>
  4305f0:	ldr	x0, [sp, #112]
  4305f4:	mov	x3, x23
  4305f8:	ldr	x2, [x22, #72]
  4305fc:	mov	x1, x19
  430600:	mov	w4, #0x0                   	// #0
  430604:	add	x2, x2, #0x1
  430608:	bl	460eb8 <_obstack_memory_used@@Base+0xfaa8>
  43060c:	cbz	w0, 430570 <wcrtomb@plt+0x2b950>
  430610:	mov	x0, x19
  430614:	bl	403ff0 <strlen@plt>
  430618:	mov	x21, x0
  43061c:	ldp	x1, x0, [x28, #24]
  430620:	sub	x0, x0, x1
  430624:	cmp	x21, x0
  430628:	b.hi	430760 <wcrtomb@plt+0x2bb40>  // b.pmore
  43062c:	mov	x0, x1
  430630:	mov	x2, x21
  430634:	mov	x1, x19
  430638:	bl	403f70 <memcpy@plt>
  43063c:	ldr	x0, [x28, #24]
  430640:	add	x0, x0, x21
  430644:	str	x0, [x28, #24]
  430648:	ldr	w0, [x22, #8]
  43064c:	add	x19, x19, x21
  430650:	cbnz	w0, 4305e8 <wcrtomb@plt+0x2b9c8>
  430654:	mov	x0, x19
  430658:	bl	403ff0 <strlen@plt>
  43065c:	mov	x20, x0
  430660:	ldp	x0, x1, [x28, #24]
  430664:	sub	x1, x1, x0
  430668:	cmp	x20, x1
  43066c:	b.hi	4309b4 <wcrtomb@plt+0x2bd94>  // b.pmore
  430670:	mov	x1, x19
  430674:	mov	x2, x20
  430678:	bl	403f70 <memcpy@plt>
  43067c:	ldr	x1, [x28, #24]
  430680:	ldr	x0, [x28, #32]
  430684:	add	x2, x1, x20
  430688:	str	x2, [x28, #24]
  43068c:	cmp	x0, x2
  430690:	b.eq	430784 <wcrtomb@plt+0x2bb64>  // b.none
  430694:	add	x0, x2, #0x1
  430698:	str	x0, [x28, #24]
  43069c:	strb	wzr, [x2]
  4306a0:	mov	x0, x23
  4306a4:	bl	4047b0 <free@plt>
  4306a8:	ldp	x19, x2, [x28, #16]
  4306ac:	cmp	x19, x2
  4306b0:	b.eq	4307b8 <wcrtomb@plt+0x2bb98>  // b.none
  4306b4:	ldr	x0, [x28, #48]
  4306b8:	ldr	x1, [x28, #8]
  4306bc:	add	x2, x2, x0
  4306c0:	ldr	x3, [x28, #32]
  4306c4:	bic	x0, x2, x0
  4306c8:	str	x0, [x28, #24]
  4306cc:	sub	x2, x0, x1
  4306d0:	sub	x1, x3, x1
  4306d4:	cmp	x2, x1
  4306d8:	b.ls	4306e4 <wcrtomb@plt+0x2bac4>  // b.plast
  4306dc:	mov	x0, x3
  4306e0:	str	x3, [x28, #24]
  4306e4:	ldr	x22, [x22]
  4306e8:	str	x0, [x28, #16]
  4306ec:	mov	w20, #0x1                   	// #1
  4306f0:	cbnz	x22, 430530 <wcrtomb@plt+0x2b910>
  4306f4:	cbz	w20, 430960 <wcrtomb@plt+0x2bd40>
  4306f8:	ldr	x2, [sp, #136]
  4306fc:	mov	x1, x19
  430700:	cbz	x2, 430714 <wcrtomb@plt+0x2baf4>
  430704:	ldr	x1, [sp, #152]
  430708:	mov	x0, x19
  43070c:	blr	x2
  430710:	mov	x1, x0
  430714:	ldr	x0, [sp, #144]
  430718:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  43071c:	ldr	x1, [x25, #56]
  430720:	cmp	x1, x19
  430724:	b.cs	430734 <wcrtomb@plt+0x2bb14>  // b.hs, b.nlast
  430728:	ldr	x1, [x25, #80]
  43072c:	cmp	x1, x19
  430730:	b.hi	4309f4 <wcrtomb@plt+0x2bdd4>  // b.pmore
  430734:	mov	x1, x19
  430738:	add	x0, x25, #0x30
  43073c:	bl	451360 <_obstack_free@@Base>
  430740:	ldp	x23, x24, [sp, #48]
  430744:	ldp	x27, x28, [sp, #80]
  430748:	mov	w0, w20
  43074c:	ldp	x19, x20, [sp, #16]
  430750:	ldp	x21, x22, [sp, #32]
  430754:	ldp	x25, x26, [sp, #64]
  430758:	ldp	x29, x30, [sp], #160
  43075c:	ret
  430760:	mov	x1, x21
  430764:	mov	x0, x28
  430768:	bl	4511d8 <_obstack_newchunk@@Base>
  43076c:	ldr	x1, [x28, #24]
  430770:	b	43062c <wcrtomb@plt+0x2ba0c>
  430774:	ldr	x2, [x28, #24]
  430778:	ldr	x0, [x28, #32]
  43077c:	cmp	x0, x2
  430780:	b.ne	430694 <wcrtomb@plt+0x2ba74>  // b.any
  430784:	mov	x0, x28
  430788:	mov	x1, #0x1                   	// #1
  43078c:	bl	4511d8 <_obstack_newchunk@@Base>
  430790:	ldr	x2, [x28, #24]
  430794:	add	x0, x2, #0x1
  430798:	str	x0, [x28, #24]
  43079c:	strb	wzr, [x2]
  4307a0:	mov	x0, x23
  4307a4:	bl	4047b0 <free@plt>
  4307a8:	ldp	x19, x2, [x28, #16]
  4307ac:	cmp	x19, x2
  4307b0:	b.ne	4306b4 <wcrtomb@plt+0x2ba94>  // b.any
  4307b4:	nop
  4307b8:	ldrb	w0, [x28, #80]
  4307bc:	orr	w0, w0, #0x2
  4307c0:	strb	w0, [x28, #80]
  4307c4:	b	4306b4 <wcrtomb@plt+0x2ba94>
  4307c8:	mov	x0, x28
  4307cc:	mov	x1, x26
  4307d0:	bl	4511d8 <_obstack_newchunk@@Base>
  4307d4:	ldr	x0, [x28, #24]
  4307d8:	b	430588 <wcrtomb@plt+0x2b968>
  4307dc:	mov	x0, x28
  4307e0:	mov	x1, x21
  4307e4:	bl	4511d8 <_obstack_newchunk@@Base>
  4307e8:	ldr	x0, [x28, #24]
  4307ec:	b	4305cc <wcrtomb@plt+0x2b9ac>
  4307f0:	ldr	x26, [x22, #88]
  4307f4:	cbnz	x26, 430808 <wcrtomb@plt+0x2bbe8>
  4307f8:	b	430648 <wcrtomb@plt+0x2ba28>
  4307fc:	cbz	w0, 430890 <wcrtomb@plt+0x2bc70>
  430800:	ldr	x26, [x26]
  430804:	cbz	x26, 430648 <wcrtomb@plt+0x2ba28>
  430808:	ldr	w0, [x26, #8]
  43080c:	cmp	w0, #0x1
  430810:	b.eq	430834 <wcrtomb@plt+0x2bc14>  // b.none
  430814:	cmp	w0, #0x2
  430818:	b.ne	4307fc <wcrtomb@plt+0x2bbdc>  // b.any
  43081c:	ldr	w0, [x26, #16]
  430820:	cmp	w0, #0x2
  430824:	b.hi	430934 <wcrtomb@plt+0x2bd14>  // b.pmore
  430828:	cbnz	w0, 43091c <wcrtomb@plt+0x2bcfc>
  43082c:	mov	w20, #0x0                   	// #0
  430830:	b	430800 <wcrtomb@plt+0x2bbe0>
  430834:	ldr	x0, [x26, #16]
  430838:	lsl	x0, x0, #4
  43083c:	add	x1, x23, x0
  430840:	ldr	x4, [x23, x0]
  430844:	cmn	x4, #0x1
  430848:	b.eq	430800 <wcrtomb@plt+0x2bbe0>  // b.none
  43084c:	ldr	x2, [x1, #8]
  430850:	cmn	x2, #0x1
  430854:	b.eq	430800 <wcrtomb@plt+0x2bbe0>  // b.none
  430858:	sub	x27, x2, x4
  43085c:	add	x4, x19, x4
  430860:	cbnz	w20, 4308c8 <wcrtomb@plt+0x2bca8>
  430864:	ldp	x0, x1, [x28, #24]
  430868:	sub	x1, x1, x0
  43086c:	cmp	x27, x1
  430870:	b.hi	4308ac <wcrtomb@plt+0x2bc8c>  // b.pmore
  430874:	mov	x2, x27
  430878:	mov	x1, x4
  43087c:	bl	403f70 <memcpy@plt>
  430880:	ldr	x0, [x28, #24]
  430884:	add	x2, x0, x27
  430888:	str	x2, [x28, #24]
  43088c:	b	430800 <wcrtomb@plt+0x2bbe0>
  430890:	ldr	x27, [x26, #24]
  430894:	cbnz	w20, 4308f4 <wcrtomb@plt+0x2bcd4>
  430898:	ldr	x4, [x26, #16]
  43089c:	ldp	x0, x1, [x28, #24]
  4308a0:	sub	x1, x1, x0
  4308a4:	cmp	x1, x27
  4308a8:	b.cs	430874 <wcrtomb@plt+0x2bc54>  // b.hs, b.nlast
  4308ac:	mov	x0, x28
  4308b0:	mov	x1, x27
  4308b4:	str	x4, [sp, #128]
  4308b8:	bl	4511d8 <_obstack_newchunk@@Base>
  4308bc:	ldr	x0, [x28, #24]
  4308c0:	ldr	x4, [sp, #128]
  4308c4:	b	430874 <wcrtomb@plt+0x2bc54>
  4308c8:	mov	x1, x4
  4308cc:	mov	x2, x27
  4308d0:	mov	w0, w20
  4308d4:	bl	42f560 <wcrtomb@plt+0x2a940>
  4308d8:	sub	w1, w20, #0x1
  4308dc:	mov	x4, x0
  4308e0:	cmp	w1, #0x1
  4308e4:	b.hi	430864 <wcrtomb@plt+0x2bc44>  // b.pmore
  4308e8:	mov	w20, w24
  4308ec:	mov	w24, #0x0                   	// #0
  4308f0:	b	430864 <wcrtomb@plt+0x2bc44>
  4308f4:	ldr	x1, [x26, #16]
  4308f8:	mov	x2, x27
  4308fc:	mov	w0, w20
  430900:	bl	42f560 <wcrtomb@plt+0x2a940>
  430904:	mov	x4, x0
  430908:	sub	w1, w20, #0x1
  43090c:	cmp	w1, #0x1
  430910:	b.ls	430944 <wcrtomb@plt+0x2bd24>  // b.plast
  430914:	ldr	x27, [x26, #24]
  430918:	b	43089c <wcrtomb@plt+0x2bc7c>
  43091c:	cbz	w24, 430954 <wcrtomb@plt+0x2bd34>
  430920:	sub	w1, w24, #0x3
  430924:	cmp	w1, #0x1
  430928:	b.ls	430954 <wcrtomb@plt+0x2bd34>  // b.plast
  43092c:	mov	w20, w0
  430930:	b	430800 <wcrtomb@plt+0x2bbe0>
  430934:	sub	w1, w0, #0x3
  430938:	cmp	w1, #0x1
  43093c:	csel	w20, w20, w0, hi  // hi = pmore
  430940:	b	430800 <wcrtomb@plt+0x2bbe0>
  430944:	mov	w20, w24
  430948:	mov	w24, #0x0                   	// #0
  43094c:	ldr	x27, [x26, #24]
  430950:	b	43089c <wcrtomb@plt+0x2bc7c>
  430954:	mov	w24, w20
  430958:	mov	w20, w0
  43095c:	b	430800 <wcrtomb@plt+0x2bbe0>
  430960:	ldp	x23, x24, [sp, #48]
  430964:	ldp	x27, x28, [sp, #80]
  430968:	mov	w20, #0x0                   	// #0
  43096c:	ldr	x2, [sp, #136]
  430970:	cbz	x2, 430748 <wcrtomb@plt+0x2bb28>
  430974:	ldp	x21, x1, [sp, #144]
  430978:	str	xzr, [x21]
  43097c:	mov	x0, x19
  430980:	mov	w20, #0x1                   	// #1
  430984:	blr	x2
  430988:	mov	x1, x0
  43098c:	mov	x0, x21
  430990:	bl	41e8d0 <wcrtomb@plt+0x19cb0>
  430994:	mov	x0, x19
  430998:	bl	4047b0 <free@plt>
  43099c:	mov	w0, w20
  4309a0:	ldp	x19, x20, [sp, #16]
  4309a4:	ldp	x21, x22, [sp, #32]
  4309a8:	ldp	x25, x26, [sp, #64]
  4309ac:	ldp	x29, x30, [sp], #160
  4309b0:	ret
  4309b4:	mov	x0, x28
  4309b8:	mov	x1, x20
  4309bc:	bl	4511d8 <_obstack_newchunk@@Base>
  4309c0:	ldr	x0, [x28, #24]
  4309c4:	b	430670 <wcrtomb@plt+0x2ba50>
  4309c8:	add	x0, x25, #0x30
  4309cc:	adrp	x4, 404000 <fputs@plt>
  4309d0:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  4309d4:	add	x4, x4, #0x7b0
  4309d8:	add	x3, x3, #0x1a0
  4309dc:	mov	x2, #0x0                   	// #0
  4309e0:	mov	x1, #0x0                   	// #0
  4309e4:	bl	451000 <_obstack_begin@@Base>
  4309e8:	mov	w0, #0x1                   	// #1
  4309ec:	strb	w0, [x25, #32]
  4309f0:	b	43050c <wcrtomb@plt+0x2b8ec>
  4309f4:	dup	v0.2d, x19
  4309f8:	mov	w0, w20
  4309fc:	ldp	x19, x20, [sp, #16]
  430a00:	ldp	x21, x22, [sp, #32]
  430a04:	str	q0, [x25, #64]
  430a08:	ldp	x23, x24, [sp, #48]
  430a0c:	ldp	x25, x26, [sp, #64]
  430a10:	ldp	x27, x28, [sp, #80]
  430a14:	ldp	x29, x30, [sp], #160
  430a18:	ret
  430a1c:	nop
  430a20:	mov	x3, #0x0                   	// #0
  430a24:	mov	x2, #0x0                   	// #0
  430a28:	b	4304d8 <wcrtomb@plt+0x2b8b8>
  430a2c:	nop
  430a30:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430a34:	ldr	x0, [x0, #3352]
  430a38:	cmp	x0, #0x0
  430a3c:	cset	w0, ne  // ne = any
  430a40:	ret
  430a44:	nop
  430a48:	stp	x29, x30, [sp, #-96]!
  430a4c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  430a50:	mov	x29, sp
  430a54:	stp	x27, x28, [sp, #80]
  430a58:	adrp	x27, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430a5c:	stp	x19, x20, [sp, #16]
  430a60:	ldr	x20, [x27, #3464]
  430a64:	stp	x25, x26, [sp, #64]
  430a68:	ldr	w26, [x1, #128]
  430a6c:	cbz	x20, 430cb0 <wcrtomb@plt+0x2c090>
  430a70:	stp	x21, x22, [sp, #32]
  430a74:	add	x21, x27, #0xd88
  430a78:	mov	x22, #0x0                   	// #0
  430a7c:	stp	x23, x24, [sp, #48]
  430a80:	adrp	x24, 493000 <_obstack_memory_used@@Base+0x41bf0>
  430a84:	and	w23, w0, #0xff
  430a88:	add	x24, x24, #0x898
  430a8c:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430a90:	mov	x19, x20
  430a94:	ldr	x20, [x20]
  430a98:	cbnz	w23, 430aac <wcrtomb@plt+0x2be8c>
  430a9c:	ldr	x0, [x25, #4080]
  430aa0:	ldr	x1, [x19, #32]
  430aa4:	cmp	x1, x0
  430aa8:	b.cs	430ae0 <wcrtomb@plt+0x2bec0>  // b.hs, b.nlast
  430aac:	ldr	w0, [x19, #8]
  430ab0:	bl	420060 <wcrtomb@plt+0x1b440>
  430ab4:	ldrb	w0, [x19, #24]
  430ab8:	cbz	w0, 430c28 <wcrtomb@plt+0x2c008>
  430abc:	ldr	w0, [x19, #8]
  430ac0:	ldr	x28, [x19, #16]
  430ac4:	cbz	w0, 430bc4 <wcrtomb@plt+0x2bfa4>
  430ac8:	ldrb	w0, [x28]
  430acc:	cbz	w0, 430ae0 <wcrtomb@plt+0x2bec0>
  430ad0:	cmp	w0, #0x2e
  430ad4:	b.ne	430bc4 <wcrtomb@plt+0x2bfa4>  // b.any
  430ad8:	ldrb	w0, [x28, #1]
  430adc:	cbnz	w0, 430bc4 <wcrtomb@plt+0x2bfa4>
  430ae0:	mov	x22, x19
  430ae4:	cbnz	x20, 430a90 <wcrtomb@plt+0x2be70>
  430ae8:	ldr	x20, [x27, #3464]
  430aec:	cbz	x20, 430ca8 <wcrtomb@plt+0x2c088>
  430af0:	cbz	w23, 430c80 <wcrtomb@plt+0x2c060>
  430af4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430af8:	adrp	x23, 493000 <_obstack_memory_used@@Base+0x41bf0>
  430afc:	add	x21, x21, #0xd88
  430b00:	add	x23, x23, #0x898
  430b04:	nop
  430b08:	ldr	w0, [x20, #8]
  430b0c:	mov	x19, x20
  430b10:	ldr	x20, [x20]
  430b14:	bl	420060 <wcrtomb@plt+0x1b440>
  430b18:	ldr	w0, [x19, #8]
  430b1c:	cbz	w0, 430ca0 <wcrtomb@plt+0x2c080>
  430b20:	ldrb	w0, [x19, #24]
  430b24:	ldr	x22, [x19, #16]
  430b28:	cbz	w0, 430b58 <wcrtomb@plt+0x2bf38>
  430b2c:	ldrb	w0, [x22]
  430b30:	cbz	w0, 430b44 <wcrtomb@plt+0x2bf24>
  430b34:	cmp	w0, #0x2e
  430b38:	b.ne	430b58 <wcrtomb@plt+0x2bf38>  // b.any
  430b3c:	ldrb	w0, [x22, #1]
  430b40:	cbnz	w0, 430b58 <wcrtomb@plt+0x2bf38>
  430b44:	bl	4202b8 <wcrtomb@plt+0x1b698>
  430b48:	mov	x22, x0
  430b4c:	ldr	w1, [x19, #8]
  430b50:	sub	w0, w1, #0x1
  430b54:	bl	420060 <wcrtomb@plt+0x1b440>
  430b58:	ldr	w0, [x23]
  430b5c:	mov	x1, x22
  430b60:	mov	w2, #0x200                 	// #512
  430b64:	bl	404160 <unlinkat@plt>
  430b68:	cbz	w0, 430b84 <wcrtomb@plt+0x2bf64>
  430b6c:	bl	404ad0 <__errno_location@plt>
  430b70:	ldr	w0, [x0]
  430b74:	cmp	w0, #0x2
  430b78:	b.eq	430b84 <wcrtomb@plt+0x2bf64>  // b.none
  430b7c:	mov	x0, x22
  430b80:	bl	433fa8 <wcrtomb@plt+0x2f388>
  430b84:	ldr	x0, [x19, #16]
  430b88:	bl	4047b0 <free@plt>
  430b8c:	ldp	x1, x0, [x21, #16]
  430b90:	str	x1, [x19]
  430b94:	sub	x0, x0, #0x1
  430b98:	stp	x19, x0, [x21, #16]
  430b9c:	cbnz	x20, 430b08 <wcrtomb@plt+0x2bee8>
  430ba0:	mov	w0, w26
  430ba4:	stp	xzr, xzr, [x21]
  430ba8:	ldp	x19, x20, [sp, #16]
  430bac:	ldp	x21, x22, [sp, #32]
  430bb0:	ldp	x23, x24, [sp, #48]
  430bb4:	ldp	x25, x26, [sp, #64]
  430bb8:	ldp	x27, x28, [sp, #80]
  430bbc:	ldp	x29, x30, [sp], #96
  430bc0:	b	420060 <wcrtomb@plt+0x1b440>
  430bc4:	ldr	w0, [x24]
  430bc8:	mov	x1, x28
  430bcc:	mov	w2, #0x200                 	// #512
  430bd0:	bl	404160 <unlinkat@plt>
  430bd4:	cbz	w0, 430c58 <wcrtomb@plt+0x2c038>
  430bd8:	bl	404ad0 <__errno_location@plt>
  430bdc:	ldr	w0, [x0]
  430be0:	cmp	w0, #0x11
  430be4:	b.eq	430ae0 <wcrtomb@plt+0x2bec0>  // b.none
  430be8:	cmp	w0, #0x27
  430bec:	b.eq	430ae0 <wcrtomb@plt+0x2bec0>  // b.none
  430bf0:	cmp	w0, #0x2
  430bf4:	b.eq	430c58 <wcrtomb@plt+0x2c038>  // b.none
  430bf8:	mov	x0, x28
  430bfc:	bl	433fa8 <wcrtomb@plt+0x2f388>
  430c00:	ldr	x0, [x19, #16]
  430c04:	bl	4047b0 <free@plt>
  430c08:	ldp	x1, x0, [x21, #16]
  430c0c:	str	x1, [x19]
  430c10:	sub	x0, x0, #0x1
  430c14:	stp	x19, x0, [x21, #16]
  430c18:	cbz	x22, 430c74 <wcrtomb@plt+0x2c054>
  430c1c:	str	x20, [x22]
  430c20:	cbnz	x20, 430a90 <wcrtomb@plt+0x2be70>
  430c24:	b	430ae8 <wcrtomb@plt+0x2bec8>
  430c28:	ldr	w0, [x24]
  430c2c:	mov	w2, #0x0                   	// #0
  430c30:	ldr	x1, [x19, #16]
  430c34:	bl	404160 <unlinkat@plt>
  430c38:	cbz	w0, 430c58 <wcrtomb@plt+0x2c038>
  430c3c:	bl	404ad0 <__errno_location@plt>
  430c40:	ldr	w1, [x0]
  430c44:	ldr	x0, [x19, #16]
  430c48:	cmp	w1, #0x2
  430c4c:	b.eq	430c04 <wcrtomb@plt+0x2bfe4>  // b.none
  430c50:	bl	434600 <wcrtomb@plt+0x2f9e0>
  430c54:	nop
  430c58:	ldr	x0, [x19, #16]
  430c5c:	bl	4047b0 <free@plt>
  430c60:	ldp	x1, x0, [x21, #16]
  430c64:	str	x1, [x19]
  430c68:	sub	x0, x0, #0x1
  430c6c:	stp	x19, x0, [x21, #16]
  430c70:	cbnz	x22, 430c1c <wcrtomb@plt+0x2bffc>
  430c74:	str	x20, [x21]
  430c78:	cbnz	x20, 430a90 <wcrtomb@plt+0x2be70>
  430c7c:	b	430ae8 <wcrtomb@plt+0x2bec8>
  430c80:	mov	w0, w26
  430c84:	ldp	x19, x20, [sp, #16]
  430c88:	ldp	x21, x22, [sp, #32]
  430c8c:	ldp	x23, x24, [sp, #48]
  430c90:	ldp	x25, x26, [sp, #64]
  430c94:	ldp	x27, x28, [sp, #80]
  430c98:	ldp	x29, x30, [sp], #96
  430c9c:	b	420060 <wcrtomb@plt+0x1b440>
  430ca0:	ldr	x22, [x19, #16]
  430ca4:	b	430b58 <wcrtomb@plt+0x2bf38>
  430ca8:	ldp	x21, x22, [sp, #32]
  430cac:	ldp	x23, x24, [sp, #48]
  430cb0:	add	x27, x27, #0xd88
  430cb4:	mov	w0, w26
  430cb8:	ldp	x19, x20, [sp, #16]
  430cbc:	str	xzr, [x27, #8]
  430cc0:	ldp	x25, x26, [sp, #64]
  430cc4:	ldp	x27, x28, [sp, #80]
  430cc8:	ldp	x29, x30, [sp], #96
  430ccc:	b	420060 <wcrtomb@plt+0x1b440>
  430cd0:	stp	x29, x30, [sp, #-32]!
  430cd4:	mov	w0, #0x1                   	// #1
  430cd8:	mov	x29, sp
  430cdc:	stp	x19, x20, [sp, #16]
  430ce0:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430ce4:	add	x20, x20, #0xd88
  430ce8:	bl	430a48 <wcrtomb@plt+0x2be28>
  430cec:	ldr	x19, [x20, #16]
  430cf0:	cbz	x19, 430d0c <wcrtomb@plt+0x2c0ec>
  430cf4:	nop
  430cf8:	mov	x0, x19
  430cfc:	ldr	x19, [x19]
  430d00:	bl	4047b0 <free@plt>
  430d04:	str	x19, [x20, #16]
  430d08:	cbnz	x19, 430cf8 <wcrtomb@plt+0x2c0d8>
  430d0c:	ldp	x19, x20, [sp, #16]
  430d10:	ldp	x29, x30, [sp], #32
  430d14:	ret
  430d18:	stp	x29, x30, [sp, #-64]!
  430d1c:	mov	x29, sp
  430d20:	stp	x21, x22, [sp, #32]
  430d24:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430d28:	mov	x21, x0
  430d2c:	ldr	x0, [x22, #3464]
  430d30:	stp	x19, x20, [sp, #16]
  430d34:	stp	x23, x24, [sp, #48]
  430d38:	and	w23, w1, #0xff
  430d3c:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430d40:	cbz	x0, 430d54 <wcrtomb@plt+0x2c134>
  430d44:	ldr	x1, [x24, #4080]
  430d48:	ldr	x0, [x0, #32]
  430d4c:	cmp	x0, x1
  430d50:	b.cc	430e84 <wcrtomb@plt+0x2c264>  // b.lo, b.ul, b.last
  430d54:	add	x20, x22, #0xd88
  430d58:	ldr	x19, [x20, #16]
  430d5c:	cbz	x19, 430e98 <wcrtomb@plt+0x2c278>
  430d60:	ldr	x0, [x19]
  430d64:	str	xzr, [x19]
  430d68:	str	x0, [x20, #16]
  430d6c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  430d70:	mov	x0, x21
  430d74:	ldr	w1, [x1, #128]
  430d78:	str	xzr, [x19]
  430d7c:	str	w1, [x19, #8]
  430d80:	bl	450328 <argp_parse@@Base+0x10548>
  430d84:	str	x0, [x19, #16]
  430d88:	bl	41ec68 <wcrtomb@plt+0x1a048>
  430d8c:	strb	w23, [x19, #24]
  430d90:	ldr	x0, [x24, #4080]
  430d94:	str	x0, [x19, #32]
  430d98:	cbz	w23, 430e48 <wcrtomb@plt+0x2c228>
  430d9c:	ldr	x1, [x19, #16]
  430da0:	ldrb	w0, [x1]
  430da4:	cbnz	w0, 430e3c <wcrtomb@plt+0x2c21c>
  430da8:	ldr	x4, [x22, #3464]
  430dac:	cbz	x4, 430dfc <wcrtomb@plt+0x2c1dc>
  430db0:	mov	x1, x4
  430db4:	mov	x2, #0x0                   	// #0
  430db8:	ldrb	w0, [x1, #24]
  430dbc:	cbz	w0, 430dec <wcrtomb@plt+0x2c1cc>
  430dc0:	ldr	x3, [x1, #16]
  430dc4:	ldrb	w0, [x3]
  430dc8:	cmp	w0, #0x2e
  430dcc:	cbz	w0, 430ddc <wcrtomb@plt+0x2c1bc>
  430dd0:	b.ne	430dec <wcrtomb@plt+0x2c1cc>  // b.any
  430dd4:	ldrb	w0, [x3, #1]
  430dd8:	cbnz	w0, 430dec <wcrtomb@plt+0x2c1cc>
  430ddc:	ldr	w3, [x1, #8]
  430de0:	ldr	w0, [x19, #8]
  430de4:	cmp	w3, w0
  430de8:	b.lt	430ea8 <wcrtomb@plt+0x2c288>  // b.tstop
  430dec:	ldr	x0, [x1]
  430df0:	mov	x2, x1
  430df4:	mov	x1, x0
  430df8:	cbnz	x0, 430db8 <wcrtomb@plt+0x2c198>
  430dfc:	ldr	x0, [x20, #8]
  430e00:	cbz	x0, 430f08 <wcrtomb@plt+0x2c2e8>
  430e04:	ldr	x1, [x0]
  430e08:	str	x1, [x19]
  430e0c:	str	x19, [x0]
  430e10:	ldr	x4, [x19]
  430e14:	cbnz	x4, 430e64 <wcrtomb@plt+0x2c244>
  430e18:	ldr	x0, [x20, #24]
  430e1c:	str	x19, [x20, #8]
  430e20:	ldp	x21, x22, [sp, #32]
  430e24:	add	x0, x0, #0x1
  430e28:	str	x0, [x20, #24]
  430e2c:	ldp	x19, x20, [sp, #16]
  430e30:	ldp	x23, x24, [sp, #48]
  430e34:	ldp	x29, x30, [sp], #64
  430e38:	ret
  430e3c:	cmp	w0, #0x2e
  430e40:	b.eq	430ef0 <wcrtomb@plt+0x2c2d0>  // b.none
  430e44:	nop
  430e48:	ldr	x0, [x20, #8]
  430e4c:	cbz	x0, 430ee0 <wcrtomb@plt+0x2c2c0>
  430e50:	ldr	x1, [x0]
  430e54:	str	x1, [x19]
  430e58:	str	x19, [x0]
  430e5c:	ldr	x0, [x19]
  430e60:	cbz	x0, 430e18 <wcrtomb@plt+0x2c1f8>
  430e64:	ldr	x0, [x20, #24]
  430e68:	ldp	x21, x22, [sp, #32]
  430e6c:	add	x0, x0, #0x1
  430e70:	str	x0, [x20, #24]
  430e74:	ldp	x19, x20, [sp, #16]
  430e78:	ldp	x23, x24, [sp, #48]
  430e7c:	ldp	x29, x30, [sp], #64
  430e80:	ret
  430e84:	add	x20, x22, #0xd88
  430e88:	mov	w0, #0x0                   	// #0
  430e8c:	bl	430a48 <wcrtomb@plt+0x2be28>
  430e90:	ldr	x19, [x20, #16]
  430e94:	cbnz	x19, 430d60 <wcrtomb@plt+0x2c140>
  430e98:	mov	x0, #0x28                  	// #40
  430e9c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  430ea0:	mov	x19, x0
  430ea4:	b	430d6c <wcrtomb@plt+0x2c14c>
  430ea8:	cbz	x2, 430efc <wcrtomb@plt+0x2c2dc>
  430eac:	ldr	x0, [x2]
  430eb0:	str	x0, [x19]
  430eb4:	str	x19, [x2]
  430eb8:	ldr	x0, [x19]
  430ebc:	cbz	x0, 430e18 <wcrtomb@plt+0x2c1f8>
  430ec0:	ldr	x0, [x20, #24]
  430ec4:	ldp	x21, x22, [sp, #32]
  430ec8:	add	x0, x0, #0x1
  430ecc:	str	x0, [x20, #24]
  430ed0:	ldp	x19, x20, [sp, #16]
  430ed4:	ldp	x23, x24, [sp, #48]
  430ed8:	ldp	x29, x30, [sp], #64
  430edc:	ret
  430ee0:	ldr	x0, [x22, #3464]
  430ee4:	str	x19, [x22, #3464]
  430ee8:	str	x0, [x19]
  430eec:	b	430e60 <wcrtomb@plt+0x2c240>
  430ef0:	ldrb	w0, [x1, #1]
  430ef4:	cbz	w0, 430da8 <wcrtomb@plt+0x2c188>
  430ef8:	b	430e48 <wcrtomb@plt+0x2c228>
  430efc:	str	x19, [x22, #3464]
  430f00:	str	x4, [x19]
  430f04:	b	430e64 <wcrtomb@plt+0x2c244>
  430f08:	str	x19, [x22, #3464]
  430f0c:	str	x4, [x19]
  430f10:	cbnz	x4, 430e64 <wcrtomb@plt+0x2c244>
  430f14:	b	430e18 <wcrtomb@plt+0x2c1f8>
  430f18:	stp	x29, x30, [sp, #-256]!
  430f1c:	mov	x29, sp
  430f20:	stp	x19, x20, [sp, #16]
  430f24:	adrp	x20, 497000 <argp_program_version_hook@@Base+0x1e0>
  430f28:	add	x20, x20, #0xe0
  430f2c:	stp	x21, x22, [sp, #32]
  430f30:	adrp	x21, 497000 <argp_program_version_hook@@Base+0x1e0>
  430f34:	add	x21, x21, #0x68
  430f38:	stp	x23, x24, [sp, #48]
  430f3c:	mov	w22, #0x0                   	// #0
  430f40:	adrp	x24, 468000 <_obstack_memory_used@@Base+0x16bf0>
  430f44:	stp	x25, x26, [sp, #64]
  430f48:	bl	422440 <wcrtomb@plt+0x1d820>
  430f4c:	mov	w0, #0x2                   	// #2
  430f50:	bl	408d78 <wcrtomb@plt+0x4158>
  430f54:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  430f58:	bl	416a20 <wcrtomb@plt+0x11e00>
  430f5c:	add	x24, x24, #0xa30
  430f60:	mov	x1, x20
  430f64:	mov	x0, x21
  430f68:	mov	w2, #0x0                   	// #0
  430f6c:	add	x23, x23, #0xdf0
  430f70:	bl	41c318 <wcrtomb@plt+0x176f8>
  430f74:	mov	w19, w0
  430f78:	cmp	w0, #0x4
  430f7c:	b.eq	431004 <wcrtomb@plt+0x2c3e4>  // b.none
  430f80:	b.hi	431028 <wcrtomb@plt+0x2c408>  // b.pmore
  430f84:	cmp	w0, #0x3
  430f88:	b.eq	4310e8 <wcrtomb@plt+0x2c4c8>  // b.none
  430f8c:	cmp	w0, #0x1
  430f90:	b.ne	431014 <wcrtomb@plt+0x2c3f4>  // b.any
  430f94:	ldr	x0, [x21]
  430f98:	mov	x1, x20
  430f9c:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  430fa0:	mov	w3, #0x0                   	// #0
  430fa4:	add	x2, x22, #0x50
  430fa8:	bl	41c8b0 <wcrtomb@plt+0x17c90>
  430fac:	ldr	x0, [x21]
  430fb0:	mov	x1, x20
  430fb4:	ldrb	w0, [x0, #156]
  430fb8:	bl	41c060 <wcrtomb@plt+0x17440>
  430fbc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  430fc0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  430fc4:	ldr	w2, [x22, #80]
  430fc8:	ldr	w0, [x0, #988]
  430fcc:	str	w2, [x1, #944]
  430fd0:	cmp	w0, #0x8
  430fd4:	b.eq	4312b8 <wcrtomb@plt+0x2c698>  // b.none
  430fd8:	mov	w22, w19
  430fdc:	bl	41e038 <wcrtomb@plt+0x19418>
  430fe0:	mov	x0, x20
  430fe4:	bl	42f438 <wcrtomb@plt+0x2a818>
  430fe8:	mov	x1, x20
  430fec:	mov	x0, x21
  430ff0:	mov	w2, #0x0                   	// #0
  430ff4:	bl	41c318 <wcrtomb@plt+0x176f8>
  430ff8:	mov	w19, w0
  430ffc:	cmp	w0, #0x4
  431000:	b.ne	430f80 <wcrtomb@plt+0x2c360>  // b.any
  431004:	mov	x0, x20
  431008:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  43100c:	bl	42f438 <wcrtomb@plt+0x2a818>
  431010:	b	4310fc <wcrtomb@plt+0x2c4dc>
  431014:	tbz	w19, #0, 4310e0 <wcrtomb@plt+0x2c4c0>
  431018:	mov	x0, x20
  43101c:	mov	w22, w19
  431020:	bl	42f438 <wcrtomb@plt+0x2a818>
  431024:	b	430fe8 <wcrtomb@plt+0x2c3c8>
  431028:	cmp	w0, #0x5
  43102c:	b.ne	431018 <wcrtomb@plt+0x2c3f8>  // b.any
  431030:	ldr	x0, [x21]
  431034:	bl	4060e0 <wcrtomb@plt+0x14c0>
  431038:	cmp	w22, #0x1
  43103c:	b.eq	4310c8 <wcrtomb@plt+0x2c4a8>  // b.none
  431040:	b.hi	4310c0 <wcrtomb@plt+0x2c4a0>  // b.pmore
  431044:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  431048:	add	x22, x0, #0x470
  43104c:	ldr	x0, [x0, #1136]
  431050:	cbz	x0, 431058 <wcrtomb@plt+0x2c438>
  431054:	blr	x0
  431058:	mov	w2, #0x5                   	// #5
  43105c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x15bf0>
  431060:	mov	x0, #0x0                   	// #0
  431064:	add	x1, x1, #0x970
  431068:	bl	4049c0 <dcgettext@plt>
  43106c:	mov	x2, x0
  431070:	mov	w1, #0x0                   	// #0
  431074:	mov	w0, #0x0                   	// #0
  431078:	bl	404050 <error@plt>
  43107c:	ldr	x0, [x22]
  431080:	cbz	x0, 431088 <wcrtomb@plt+0x2c468>
  431084:	blr	x0
  431088:	mov	x1, x24
  43108c:	mov	w2, #0x5                   	// #5
  431090:	mov	x0, #0x0                   	// #0
  431094:	bl	4049c0 <dcgettext@plt>
  431098:	mov	w1, #0x0                   	// #0
  43109c:	mov	x2, x0
  4310a0:	mov	w0, #0x0                   	// #0
  4310a4:	bl	404050 <error@plt>
  4310a8:	mov	w1, #0x2                   	// #2
  4310ac:	mov	x0, x20
  4310b0:	mov	w22, w19
  4310b4:	str	w1, [x23]
  4310b8:	bl	42f438 <wcrtomb@plt+0x2a818>
  4310bc:	b	430fe8 <wcrtomb@plt+0x2c3c8>
  4310c0:	cmp	w22, #0x3
  4310c4:	b.ne	4310d4 <wcrtomb@plt+0x2c4b4>  // b.any
  4310c8:	adrp	x22, 497000 <argp_program_version_hook@@Base+0x1e0>
  4310cc:	add	x22, x22, #0x470
  4310d0:	b	43107c <wcrtomb@plt+0x2c45c>
  4310d4:	sub	w22, w22, #0x2
  4310d8:	tst	w22, #0xfffffffd
  4310dc:	b.ne	431018 <wcrtomb@plt+0x2c3f8>  // b.any
  4310e0:	str	x27, [sp, #80]
  4310e4:	bl	404650 <abort@plt>
  4310e8:	ldr	x1, [x21]
  4310ec:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  4310f0:	mov	x0, x20
  4310f4:	str	x1, [x19, #40]
  4310f8:	bl	42f438 <wcrtomb@plt+0x2a818>
  4310fc:	bl	406098 <wcrtomb@plt+0x1478>
  431100:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  431104:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  431108:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  43110c:	ldr	x3, [x19, #40]
  431110:	adrp	x25, 468000 <_obstack_memory_used@@Base+0x16bf0>
  431114:	add	x24, x24, #0x2d0
  431118:	add	x25, x25, #0x900
  43111c:	mov	w1, #0x1                   	// #1
  431120:	str	x3, [x2, #1128]
  431124:	strb	w1, [x0, #1120]
  431128:	bl	4273a8 <wcrtomb@plt+0x22788>
  43112c:	cbz	x0, 431178 <wcrtomb@plt+0x2c558>
  431130:	ldr	x22, [x0, #16]
  431134:	mov	x1, #0x0                   	// #0
  431138:	mov	x0, x22
  43113c:	bl	410b88 <wcrtomb@plt+0xbf68>
  431140:	tst	w0, #0xff
  431144:	b.ne	431128 <wcrtomb@plt+0x2c508>  // b.any
  431148:	ldrb	w0, [x24]
  43114c:	cbnz	w0, 4311a0 <wcrtomb@plt+0x2c580>
  431150:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  431154:	ldr	w0, [x0, #988]
  431158:	cmp	w0, #0x2
  43115c:	b.eq	4311c0 <wcrtomb@plt+0x2c5a0>  // b.none
  431160:	mov	x2, x22
  431164:	mov	x1, x22
  431168:	mov	x0, #0x0                   	// #0
  43116c:	bl	40e0d0 <wcrtomb@plt+0x94b0>
  431170:	bl	4273a8 <wcrtomb@plt+0x22788>
  431174:	cbnz	x0, 431130 <wcrtomb@plt+0x2c510>
  431178:	bl	40c550 <wcrtomb@plt+0x7930>
  43117c:	bl	406be8 <wcrtomb@plt+0x1fc8>
  431180:	bl	430cd0 <wcrtomb@plt+0x2c0b0>
  431184:	bl	422ca8 <wcrtomb@plt+0x1e088>
  431188:	ldp	x19, x20, [sp, #16]
  43118c:	ldp	x21, x22, [sp, #32]
  431190:	ldp	x23, x24, [sp, #48]
  431194:	ldp	x25, x26, [sp, #64]
  431198:	ldp	x29, x30, [sp], #256
  43119c:	ret
  4311a0:	mov	x1, x22
  4311a4:	mov	x0, x25
  4311a8:	bl	42c090 <wcrtomb@plt+0x27470>
  4311ac:	cbz	w0, 431128 <wcrtomb@plt+0x2c508>
  4311b0:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4311b4:	ldr	w0, [x0, #988]
  4311b8:	cmp	w0, #0x2
  4311bc:	b.ne	431160 <wcrtomb@plt+0x2c540>  // b.any
  4311c0:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4311c4:	mov	x1, x22
  4311c8:	mov	w2, #0x0                   	// #0
  4311cc:	ldr	w0, [x0, #2200]
  4311d0:	bl	404ab0 <openat@plt>
  4311d4:	mov	w23, w0
  4311d8:	tbnz	w0, #31, 431294 <wcrtomb@plt+0x2c674>
  4311dc:	mov	w1, w0
  4311e0:	add	x2, sp, #0x80
  4311e4:	mov	w0, #0x0                   	// #0
  4311e8:	bl	4049a0 <__fxstat@plt>
  4311ec:	cbnz	w0, 4312a0 <wcrtomb@plt+0x2c680>
  4311f0:	ldr	x19, [sp, #176]
  4311f4:	mov	x26, #0x200                 	// #512
  4311f8:	cmp	x19, #0x0
  4311fc:	b.le	43127c <wcrtomb@plt+0x2c65c>
  431200:	str	x27, [sp, #80]
  431204:	b	431240 <wcrtomb@plt+0x2c620>
  431208:	mov	x2, x20
  43120c:	mov	x1, x21
  431210:	mov	w0, w23
  431214:	bl	44f230 <argp_parse@@Base+0xf450>
  431218:	cmn	x0, #0x1
  43121c:	b.eq	4313fc <wcrtomb@plt+0x2c7dc>  // b.none
  431220:	cbz	x0, 431394 <wcrtomb@plt+0x2c774>
  431224:	sub	x1, x0, #0x1
  431228:	sub	x19, x19, x0
  43122c:	and	x0, x1, #0xfffffffffffffe00
  431230:	add	x0, x21, x0
  431234:	bl	4060e0 <wcrtomb@plt+0x14c0>
  431238:	cmp	x19, #0x0
  43123c:	b.le	431278 <wcrtomb@plt+0x2c658>
  431240:	bl	406550 <wcrtomb@plt+0x1930>
  431244:	mov	x21, x0
  431248:	bl	406128 <wcrtomb@plt+0x1508>
  43124c:	mov	x20, x0
  431250:	cmp	x0, x19
  431254:	b.ls	431208 <wcrtomb@plt+0x2c5e8>  // b.plast
  431258:	mov	x20, x19
  43125c:	ands	x2, x19, #0x1ff
  431260:	b.eq	431208 <wcrtomb@plt+0x2c5e8>  // b.none
  431264:	sub	x2, x26, x2
  431268:	add	x0, x21, x19
  43126c:	mov	w1, #0x0                   	// #0
  431270:	bl	404410 <memset@plt>
  431274:	b	431208 <wcrtomb@plt+0x2c5e8>
  431278:	ldr	x27, [sp, #80]
  43127c:	mov	w0, w23
  431280:	bl	4045c0 <close@plt>
  431284:	cbz	w0, 431128 <wcrtomb@plt+0x2c508>
  431288:	mov	x0, x22
  43128c:	bl	4337b8 <wcrtomb@plt+0x2eb98>
  431290:	b	431128 <wcrtomb@plt+0x2c508>
  431294:	mov	x0, x22
  431298:	bl	433b00 <wcrtomb@plt+0x2eee0>
  43129c:	b	431128 <wcrtomb@plt+0x2c508>
  4312a0:	mov	x0, x22
  4312a4:	bl	434400 <wcrtomb@plt+0x2f7e0>
  4312a8:	mov	w0, w23
  4312ac:	bl	4045c0 <close@plt>
  4312b0:	cbz	w0, 431128 <wcrtomb@plt+0x2c508>
  4312b4:	b	431288 <wcrtomb@plt+0x2c668>
  4312b8:	ldr	x0, [x20, #8]
  4312bc:	bl	427308 <wcrtomb@plt+0x226e8>
  4312c0:	mov	x22, x0
  4312c4:	cbz	x0, 430fd8 <wcrtomb@plt+0x2c3b8>
  4312c8:	ldr	w0, [x0, #40]
  4312cc:	bl	420060 <wcrtomb@plt+0x1b440>
  4312d0:	ldr	x0, [x20, #8]
  4312d4:	add	x1, sp, #0x80
  4312d8:	bl	41fbc8 <wcrtomb@plt+0x1afa8>
  4312dc:	cbnz	w0, 430fd8 <wcrtomb@plt+0x2c3b8>
  4312e0:	ldr	w0, [sp, #144]
  4312e4:	and	w0, w0, #0xf000
  4312e8:	cmp	w0, #0x4, lsl #12
  4312ec:	b.eq	431310 <wcrtomb@plt+0x2c6f0>  // b.none
  4312f0:	ldp	x0, x1, [sp, #216]
  4312f4:	ldp	x2, x3, [x20, #232]
  4312f8:	bl	42f508 <wcrtomb@plt+0x2a8e8>
  4312fc:	cmp	w0, #0x0
  431300:	b.gt	430fd8 <wcrtomb@plt+0x2c3b8>
  431304:	mov	x0, x22
  431308:	bl	422a38 <wcrtomb@plt+0x1de18>
  43130c:	b	430fd8 <wcrtomb@plt+0x2c3b8>
  431310:	ldr	x0, [x22, #16]
  431314:	mov	w1, w19
  431318:	bl	420690 <wcrtomb@plt+0x1ba70>
  43131c:	mov	x26, x0
  431320:	cbz	x0, 430fd8 <wcrtomb@plt+0x2c3b8>
  431324:	mov	x25, x0
  431328:	ldr	x0, [x22, #16]
  43132c:	str	x27, [sp, #80]
  431330:	bl	420568 <wcrtomb@plt+0x1b948>
  431334:	mov	x27, x0
  431338:	ldrb	w1, [x26]
  43133c:	cbz	w1, 431374 <wcrtomb@plt+0x2c754>
  431340:	mov	x1, x25
  431344:	mov	x0, x27
  431348:	bl	420610 <wcrtomb@plt+0x1b9f0>
  43134c:	ldr	w1, [x22, #40]
  431350:	mov	x3, #0x0                   	// #0
  431354:	mov	w2, #0x0                   	// #0
  431358:	bl	422358 <wcrtomb@plt+0x1d738>
  43135c:	mov	x0, x25
  431360:	bl	403ff0 <strlen@plt>
  431364:	add	x0, x0, #0x1
  431368:	add	x25, x25, x0
  43136c:	ldrb	w0, [x25]
  431370:	cbnz	w0, 431340 <wcrtomb@plt+0x2c720>
  431374:	mov	x0, x27
  431378:	bl	4205e8 <wcrtomb@plt+0x1b9c8>
  43137c:	mov	x0, x26
  431380:	bl	4047b0 <free@plt>
  431384:	mov	x0, x22
  431388:	bl	422a38 <wcrtomb@plt+0x1de18>
  43138c:	ldr	x27, [sp, #80]
  431390:	b	430fd8 <wcrtomb@plt+0x2c3b8>
  431394:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  431398:	ldr	x0, [x0, #1136]
  43139c:	cbz	x0, 4313a4 <wcrtomb@plt+0x2c784>
  4313a0:	blr	x0
  4313a4:	mov	x3, x19
  4313a8:	adrp	x2, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  4313ac:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  4313b0:	add	x2, x2, #0xee0
  4313b4:	add	x1, x1, #0xf00
  4313b8:	mov	w4, #0x5                   	// #5
  4313bc:	mov	x0, #0x0                   	// #0
  4313c0:	bl	4048f0 <dcngettext@plt>
  4313c4:	mov	x20, x0
  4313c8:	mov	x0, x22
  4313cc:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4313d0:	mov	x21, x0
  4313d4:	add	x1, sp, #0x68
  4313d8:	mov	x0, x19
  4313dc:	bl	446868 <argp_parse@@Base+0x6a88>
  4313e0:	mov	x4, x0
  4313e4:	mov	x3, x21
  4313e8:	mov	x2, x20
  4313ec:	mov	w1, #0x0                   	// #0
  4313f0:	mov	w0, #0x0                   	// #0
  4313f4:	bl	404050 <error@plt>
  4313f8:	bl	410460 <wcrtomb@plt+0xb840>
  4313fc:	ldr	x1, [sp, #176]
  431400:	mov	x2, x20
  431404:	mov	x0, x22
  431408:	sub	x1, x1, x19
  43140c:	bl	433e10 <wcrtomb@plt+0x2f1f0>
  431410:	stp	x29, x30, [sp, #-96]!
  431414:	mov	x29, sp
  431418:	stp	x21, x22, [sp, #32]
  43141c:	mov	x21, x2
  431420:	stp	x23, x24, [sp, #48]
  431424:	and	x23, x0, #0xff
  431428:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43142c:	add	x22, x24, #0x1a0
  431430:	stp	x19, x20, [sp, #16]
  431434:	mov	x19, x1
  431438:	ldr	x20, [x22, x23, lsl #3]
  43143c:	cmn	x20, #0x1
  431440:	b.eq	4314b0 <wcrtomb@plt+0x2c890>  // b.none
  431444:	cbz	x20, 431530 <wcrtomb@plt+0x2c910>
  431448:	mov	x0, x19
  43144c:	bl	403ff0 <strlen@plt>
  431450:	add	x0, x0, #0x1
  431454:	str	x0, [sp, #80]
  431458:	lsl	x0, x0, #4
  43145c:	add	x0, x0, #0x1
  431460:	str	x0, [sp, #88]
  431464:	bl	4501a0 <argp_parse@@Base+0x103c0>
  431468:	mov	x22, x0
  43146c:	add	x4, sp, #0x58
  431470:	mov	x0, x20
  431474:	add	x3, sp, #0x48
  431478:	add	x2, sp, #0x50
  43147c:	add	x1, sp, #0x40
  431480:	stp	x19, x22, [sp, #64]
  431484:	bl	404730 <iconv@plt>
  431488:	cbnz	x0, 431510 <wcrtomb@plt+0x2c8f0>
  43148c:	ldr	x1, [sp, #72]
  431490:	mov	w0, #0x1                   	// #1
  431494:	strb	wzr, [x1]
  431498:	str	x22, [x21]
  43149c:	ldp	x19, x20, [sp, #16]
  4314a0:	ldp	x21, x22, [sp, #32]
  4314a4:	ldp	x23, x24, [sp, #48]
  4314a8:	ldp	x29, x30, [sp], #96
  4314ac:	ret
  4314b0:	and	w0, w0, #0xff
  4314b4:	cbnz	w0, 4314f4 <wcrtomb@plt+0x2c8d4>
  4314b8:	bl	4468a8 <argp_parse@@Base+0x6ac8>
  4314bc:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  4314c0:	add	x1, x1, #0xf20
  4314c4:	bl	404940 <iconv_open@plt>
  4314c8:	str	x0, [x24, #416]
  4314cc:	ldr	x20, [x22, x23, lsl #3]
  4314d0:	cbz	x20, 431530 <wcrtomb@plt+0x2c910>
  4314d4:	cmn	x20, #0x1
  4314d8:	mov	w0, #0x0                   	// #0
  4314dc:	b.ne	431448 <wcrtomb@plt+0x2c828>  // b.any
  4314e0:	ldp	x19, x20, [sp, #16]
  4314e4:	ldp	x21, x22, [sp, #32]
  4314e8:	ldp	x23, x24, [sp, #48]
  4314ec:	ldp	x29, x30, [sp], #96
  4314f0:	ret
  4314f4:	bl	4468a8 <argp_parse@@Base+0x6ac8>
  4314f8:	mov	x1, x0
  4314fc:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  431500:	add	x0, x0, #0xf20
  431504:	bl	404940 <iconv_open@plt>
  431508:	str	x0, [x22, #8]
  43150c:	b	4314cc <wcrtomb@plt+0x2c8ac>
  431510:	mov	x0, x22
  431514:	bl	4047b0 <free@plt>
  431518:	mov	w0, #0x0                   	// #0
  43151c:	ldp	x19, x20, [sp, #16]
  431520:	ldp	x21, x22, [sp, #32]
  431524:	ldp	x23, x24, [sp, #48]
  431528:	ldp	x29, x30, [sp], #96
  43152c:	ret
  431530:	mov	x0, x19
  431534:	bl	450328 <argp_parse@@Base+0x10548>
  431538:	mov	x1, x0
  43153c:	mov	w0, #0x1                   	// #1
  431540:	str	x1, [x21]
  431544:	b	43149c <wcrtomb@plt+0x2c87c>
  431548:	ldrb	w1, [x0]
  43154c:	cbz	w1, 43155c <wcrtomb@plt+0x2c93c>
  431550:	tbnz	w1, #7, 431564 <wcrtomb@plt+0x2c944>
  431554:	ldrb	w1, [x0, #1]!
  431558:	cbnz	w1, 431550 <wcrtomb@plt+0x2c930>
  43155c:	mov	w0, #0x1                   	// #1
  431560:	ret
  431564:	mov	w0, #0x0                   	// #0
  431568:	ret
  43156c:	nop
  431570:	stp	x29, x30, [sp, #-48]!
  431574:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  431578:	add	x1, x1, #0x360
  43157c:	mov	x29, sp
  431580:	stp	x19, x20, [sp, #16]
  431584:	mov	x19, x0
  431588:	bl	404710 <strcmp@plt>
  43158c:	cbz	w0, 431658 <wcrtomb@plt+0x2ca38>
  431590:	mov	x0, x19
  431594:	str	x21, [sp, #32]
  431598:	bl	403ff0 <strlen@plt>
  43159c:	cmp	x0, #0x2
  4315a0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4315a4:	ldr	x5, [x1, #992]
  4315a8:	b.hi	4315f8 <wcrtomb@plt+0x2c9d8>  // b.pmore
  4315ac:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4315b0:	add	x20, x21, #0x1b0
  4315b4:	add	x20, x20, #0x10
  4315b8:	mov	x1, x19
  4315bc:	mov	x3, x20
  4315c0:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4315c4:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  4315c8:	add	x2, x2, #0xd0
  4315cc:	add	x0, x0, #0xf30
  4315d0:	mov	x4, #0x4                   	// #4
  4315d4:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  4315d8:	ldr	w0, [x20, x0, lsl #2]
  4315dc:	ldr	w1, [x21, #432]
  4315e0:	orr	w1, w1, w0
  4315e4:	str	w1, [x21, #432]
  4315e8:	ldr	x21, [sp, #32]
  4315ec:	ldp	x19, x20, [sp, #16]
  4315f0:	ldp	x29, x30, [sp], #48
  4315f4:	ret
  4315f8:	ldrh	w1, [x19]
  4315fc:	mov	w0, #0x6f6e                	// #28526
  431600:	cmp	w1, w0
  431604:	b.ne	4315ac <wcrtomb@plt+0x2c98c>  // b.any
  431608:	ldrb	w0, [x19, #2]
  43160c:	cmp	w0, #0x2d
  431610:	b.ne	4315ac <wcrtomb@plt+0x2c98c>  // b.any
  431614:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  431618:	add	x20, x21, #0x1b0
  43161c:	add	x20, x20, #0x10
  431620:	add	x1, x19, #0x3
  431624:	mov	x3, x20
  431628:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43162c:	adrp	x0, 46e000 <_obstack_memory_used@@Base+0x1cbf0>
  431630:	add	x2, x2, #0xd0
  431634:	add	x0, x0, #0xf30
  431638:	mov	x4, #0x4                   	// #4
  43163c:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  431640:	ldr	w0, [x20, x0, lsl #2]
  431644:	ldr	w1, [x21, #432]
  431648:	bic	w0, w1, w0
  43164c:	str	w0, [x21, #432]
  431650:	ldr	x21, [sp, #32]
  431654:	b	4315ec <wcrtomb@plt+0x2c9cc>
  431658:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43165c:	ldp	x19, x20, [sp, #16]
  431660:	str	wzr, [x0, #432]
  431664:	ldp	x29, x30, [sp], #48
  431668:	ret
  43166c:	nop
  431670:	mov	x12, #0x1010                	// #4112
  431674:	sub	sp, sp, x12
  431678:	cmn	w0, #0x64
  43167c:	stp	x29, x30, [sp]
  431680:	mov	x29, sp
  431684:	stp	x19, x20, [sp, #16]
  431688:	mov	x20, x1
  43168c:	stp	x21, x22, [sp, #32]
  431690:	mov	x22, x2
  431694:	b.eq	4317a0 <wcrtomb@plt+0x2cb80>  // b.none
  431698:	mov	w19, w0
  43169c:	ldrb	w0, [x1]
  4316a0:	cmp	w0, #0x2f
  4316a4:	b.eq	4317a0 <wcrtomb@plt+0x2cb80>  // b.none
  4316a8:	stp	x23, x24, [sp, #48]
  4316ac:	add	x24, sp, #0x50
  4316b0:	mov	x2, x1
  4316b4:	mov	x0, x24
  4316b8:	mov	w1, w19
  4316bc:	bl	451438 <_obstack_memory_used@@Base+0x28>
  4316c0:	mov	x23, x0
  4316c4:	cbz	x0, 43172c <wcrtomb@plt+0x2cb0c>
  4316c8:	mov	x1, x22
  4316cc:	stp	x25, x26, [sp, #64]
  4316d0:	bl	442a30 <argp_parse@@Base+0x2c50>
  4316d4:	mov	w21, w0
  4316d8:	bl	404ad0 <__errno_location@plt>
  4316dc:	ldr	w26, [x0]
  4316e0:	mov	x25, x0
  4316e4:	cmp	x23, x24
  4316e8:	b.eq	4316f4 <wcrtomb@plt+0x2cad4>  // b.none
  4316ec:	mov	x0, x23
  4316f0:	bl	4047b0 <free@plt>
  4316f4:	cmn	w21, #0x1
  4316f8:	b.ne	4317cc <wcrtomb@plt+0x2cbac>  // b.any
  4316fc:	cmp	w26, #0x14
  431700:	b.eq	431728 <wcrtomb@plt+0x2cb08>  // b.none
  431704:	sub	w0, w26, #0x1
  431708:	cmp	w0, #0x1
  43170c:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  431710:	b.eq	431728 <wcrtomb@plt+0x2cb08>  // b.none
  431714:	cmp	w26, #0x26
  431718:	mov	w0, #0x5f                  	// #95
  43171c:	ccmp	w26, w0, #0x4, ne  // ne = any
  431720:	b.ne	431874 <wcrtomb@plt+0x2cc54>  // b.any
  431724:	nop
  431728:	ldp	x25, x26, [sp, #64]
  43172c:	mov	x0, x24
  431730:	bl	44f320 <argp_parse@@Base+0xf540>
  431734:	cbnz	w0, 4318bc <wcrtomb@plt+0x2cc9c>
  431738:	tbnz	w19, #31, 431748 <wcrtomb@plt+0x2cb28>
  43173c:	ldr	w0, [sp, #80]
  431740:	cmp	w0, w19
  431744:	b.eq	431884 <wcrtomb@plt+0x2cc64>  // b.none
  431748:	mov	w0, w19
  43174c:	bl	404060 <fchdir@plt>
  431750:	cbnz	w0, 431838 <wcrtomb@plt+0x2cc18>
  431754:	mov	x1, x22
  431758:	mov	x0, x20
  43175c:	bl	442a30 <argp_parse@@Base+0x2c50>
  431760:	mov	w21, w0
  431764:	cmn	w0, #0x1
  431768:	b.eq	4317f0 <wcrtomb@plt+0x2cbd0>  // b.none
  43176c:	mov	x0, x24
  431770:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431774:	cbnz	w0, 4318ac <wcrtomb@plt+0x2cc8c>
  431778:	mov	x0, x24
  43177c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431780:	mov	w0, w21
  431784:	mov	x12, #0x1010                	// #4112
  431788:	ldp	x29, x30, [sp]
  43178c:	ldp	x19, x20, [sp, #16]
  431790:	ldp	x21, x22, [sp, #32]
  431794:	ldp	x23, x24, [sp, #48]
  431798:	add	sp, sp, x12
  43179c:	ret
  4317a0:	mov	x1, x22
  4317a4:	mov	x0, x20
  4317a8:	bl	442a30 <argp_parse@@Base+0x2c50>
  4317ac:	mov	w21, w0
  4317b0:	mov	w0, w21
  4317b4:	mov	x12, #0x1010                	// #4112
  4317b8:	ldp	x29, x30, [sp]
  4317bc:	ldp	x19, x20, [sp, #16]
  4317c0:	ldp	x21, x22, [sp, #32]
  4317c4:	add	sp, sp, x12
  4317c8:	ret
  4317cc:	mov	w0, w21
  4317d0:	mov	x12, #0x1010                	// #4112
  4317d4:	ldp	x29, x30, [sp]
  4317d8:	ldp	x19, x20, [sp, #16]
  4317dc:	ldp	x21, x22, [sp, #32]
  4317e0:	ldp	x23, x24, [sp, #48]
  4317e4:	ldp	x25, x26, [sp, #64]
  4317e8:	add	sp, sp, x12
  4317ec:	ret
  4317f0:	bl	404ad0 <__errno_location@plt>
  4317f4:	mov	x19, x0
  4317f8:	mov	x0, x24
  4317fc:	ldr	w20, [x19]
  431800:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431804:	cbnz	w0, 4318ac <wcrtomb@plt+0x2cc8c>
  431808:	mov	x0, x24
  43180c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431810:	cbz	w20, 4318a4 <wcrtomb@plt+0x2cc84>
  431814:	ldp	x23, x24, [sp, #48]
  431818:	str	w20, [x19]
  43181c:	mov	w0, w21
  431820:	mov	x12, #0x1010                	// #4112
  431824:	ldp	x29, x30, [sp]
  431828:	ldp	x19, x20, [sp, #16]
  43182c:	ldp	x21, x22, [sp, #32]
  431830:	add	sp, sp, x12
  431834:	ret
  431838:	bl	404ad0 <__errno_location@plt>
  43183c:	mov	x19, x0
  431840:	mov	x0, x24
  431844:	mov	w21, #0xffffffff            	// #-1
  431848:	ldr	w20, [x19]
  43184c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431850:	ldp	x23, x24, [sp, #48]
  431854:	str	w20, [x19]
  431858:	mov	w0, w21
  43185c:	mov	x12, #0x1010                	// #4112
  431860:	ldp	x29, x30, [sp]
  431864:	ldp	x19, x20, [sp, #16]
  431868:	ldp	x21, x22, [sp, #32]
  43186c:	add	sp, sp, x12
  431870:	ret
  431874:	ldp	x23, x24, [sp, #48]
  431878:	str	w26, [x25]
  43187c:	ldp	x25, x26, [sp, #64]
  431880:	b	4317b0 <wcrtomb@plt+0x2cb90>
  431884:	mov	x0, x24
  431888:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43188c:	mov	w21, #0xffffffff            	// #-1
  431890:	bl	404ad0 <__errno_location@plt>
  431894:	mov	w1, #0x9                   	// #9
  431898:	ldp	x23, x24, [sp, #48]
  43189c:	str	w1, [x0]
  4318a0:	b	4317b0 <wcrtomb@plt+0x2cb90>
  4318a4:	ldp	x23, x24, [sp, #48]
  4318a8:	b	4317b0 <wcrtomb@plt+0x2cb90>
  4318ac:	stp	x25, x26, [sp, #64]
  4318b0:	bl	404ad0 <__errno_location@plt>
  4318b4:	ldr	w0, [x0]
  4318b8:	bl	447548 <argp_parse@@Base+0x7768>
  4318bc:	stp	x25, x26, [sp, #64]
  4318c0:	bl	404ad0 <__errno_location@plt>
  4318c4:	ldr	w0, [x0]
  4318c8:	bl	447508 <argp_parse@@Base+0x7728>
  4318cc:	nop
  4318d0:	mov	x12, #0x1010                	// #4112
  4318d4:	sub	sp, sp, x12
  4318d8:	cmn	w0, #0x64
  4318dc:	stp	x29, x30, [sp]
  4318e0:	mov	x29, sp
  4318e4:	stp	x19, x20, [sp, #16]
  4318e8:	mov	x20, x1
  4318ec:	stp	x21, x22, [sp, #32]
  4318f0:	b.eq	4319f4 <wcrtomb@plt+0x2cdd4>  // b.none
  4318f4:	mov	w19, w0
  4318f8:	ldrb	w0, [x1]
  4318fc:	cmp	w0, #0x2f
  431900:	b.eq	4319f4 <wcrtomb@plt+0x2cdd4>  // b.none
  431904:	stp	x23, x24, [sp, #48]
  431908:	add	x23, sp, #0x50
  43190c:	mov	x2, x1
  431910:	mov	x0, x23
  431914:	mov	w1, w19
  431918:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43191c:	mov	x22, x0
  431920:	cbz	x0, 431984 <wcrtomb@plt+0x2cd64>
  431924:	str	x25, [sp, #64]
  431928:	bl	404280 <acl_delete_def_file@plt>
  43192c:	mov	w21, w0
  431930:	bl	404ad0 <__errno_location@plt>
  431934:	cmp	x22, x23
  431938:	ldr	w25, [x0]
  43193c:	mov	x24, x0
  431940:	b.eq	43194c <wcrtomb@plt+0x2cd2c>  // b.none
  431944:	mov	x0, x22
  431948:	bl	4047b0 <free@plt>
  43194c:	cmn	w21, #0x1
  431950:	b.ne	431a1c <wcrtomb@plt+0x2cdfc>  // b.any
  431954:	cmp	w25, #0x14
  431958:	b.eq	431980 <wcrtomb@plt+0x2cd60>  // b.none
  43195c:	sub	w0, w25, #0x1
  431960:	cmp	w0, #0x1
  431964:	ccmp	w25, #0xd, #0x4, hi  // hi = pmore
  431968:	b.eq	431980 <wcrtomb@plt+0x2cd60>  // b.none
  43196c:	cmp	w25, #0x26
  431970:	mov	w0, #0x5f                  	// #95
  431974:	ccmp	w25, w0, #0x4, ne  // ne = any
  431978:	b.ne	431ac4 <wcrtomb@plt+0x2cea4>  // b.any
  43197c:	nop
  431980:	ldr	x25, [sp, #64]
  431984:	mov	x0, x23
  431988:	bl	44f320 <argp_parse@@Base+0xf540>
  43198c:	cbnz	w0, 431b0c <wcrtomb@plt+0x2ceec>
  431990:	tbnz	w19, #31, 4319a0 <wcrtomb@plt+0x2cd80>
  431994:	ldr	w0, [sp, #80]
  431998:	cmp	w0, w19
  43199c:	b.eq	431ad4 <wcrtomb@plt+0x2ceb4>  // b.none
  4319a0:	mov	w0, w19
  4319a4:	bl	404060 <fchdir@plt>
  4319a8:	cbnz	w0, 431a88 <wcrtomb@plt+0x2ce68>
  4319ac:	mov	x0, x20
  4319b0:	bl	404280 <acl_delete_def_file@plt>
  4319b4:	mov	w21, w0
  4319b8:	cmn	w0, #0x1
  4319bc:	b.eq	431a40 <wcrtomb@plt+0x2ce20>  // b.none
  4319c0:	mov	x0, x23
  4319c4:	bl	44f380 <argp_parse@@Base+0xf5a0>
  4319c8:	cbnz	w0, 431afc <wcrtomb@plt+0x2cedc>
  4319cc:	mov	x0, x23
  4319d0:	bl	44f398 <argp_parse@@Base+0xf5b8>
  4319d4:	mov	w0, w21
  4319d8:	mov	x12, #0x1010                	// #4112
  4319dc:	ldp	x29, x30, [sp]
  4319e0:	ldp	x19, x20, [sp, #16]
  4319e4:	ldp	x21, x22, [sp, #32]
  4319e8:	ldp	x23, x24, [sp, #48]
  4319ec:	add	sp, sp, x12
  4319f0:	ret
  4319f4:	mov	x0, x20
  4319f8:	bl	404280 <acl_delete_def_file@plt>
  4319fc:	mov	w21, w0
  431a00:	mov	w0, w21
  431a04:	mov	x12, #0x1010                	// #4112
  431a08:	ldp	x29, x30, [sp]
  431a0c:	ldp	x19, x20, [sp, #16]
  431a10:	ldp	x21, x22, [sp, #32]
  431a14:	add	sp, sp, x12
  431a18:	ret
  431a1c:	mov	w0, w21
  431a20:	mov	x12, #0x1010                	// #4112
  431a24:	ldp	x29, x30, [sp]
  431a28:	ldp	x19, x20, [sp, #16]
  431a2c:	ldp	x21, x22, [sp, #32]
  431a30:	ldp	x23, x24, [sp, #48]
  431a34:	ldr	x25, [sp, #64]
  431a38:	add	sp, sp, x12
  431a3c:	ret
  431a40:	bl	404ad0 <__errno_location@plt>
  431a44:	mov	x19, x0
  431a48:	mov	x0, x23
  431a4c:	ldr	w20, [x19]
  431a50:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431a54:	cbnz	w0, 431afc <wcrtomb@plt+0x2cedc>
  431a58:	mov	x0, x23
  431a5c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431a60:	cbz	w20, 431af4 <wcrtomb@plt+0x2ced4>
  431a64:	ldp	x23, x24, [sp, #48]
  431a68:	str	w20, [x19]
  431a6c:	mov	w0, w21
  431a70:	mov	x12, #0x1010                	// #4112
  431a74:	ldp	x29, x30, [sp]
  431a78:	ldp	x19, x20, [sp, #16]
  431a7c:	ldp	x21, x22, [sp, #32]
  431a80:	add	sp, sp, x12
  431a84:	ret
  431a88:	bl	404ad0 <__errno_location@plt>
  431a8c:	mov	x19, x0
  431a90:	mov	x0, x23
  431a94:	mov	w21, #0xffffffff            	// #-1
  431a98:	ldr	w20, [x19]
  431a9c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431aa0:	ldp	x23, x24, [sp, #48]
  431aa4:	str	w20, [x19]
  431aa8:	mov	w0, w21
  431aac:	mov	x12, #0x1010                	// #4112
  431ab0:	ldp	x29, x30, [sp]
  431ab4:	ldp	x19, x20, [sp, #16]
  431ab8:	ldp	x21, x22, [sp, #32]
  431abc:	add	sp, sp, x12
  431ac0:	ret
  431ac4:	str	w25, [x24]
  431ac8:	ldp	x23, x24, [sp, #48]
  431acc:	ldr	x25, [sp, #64]
  431ad0:	b	431a00 <wcrtomb@plt+0x2cde0>
  431ad4:	mov	x0, x23
  431ad8:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431adc:	mov	w21, #0xffffffff            	// #-1
  431ae0:	bl	404ad0 <__errno_location@plt>
  431ae4:	mov	w1, #0x9                   	// #9
  431ae8:	ldp	x23, x24, [sp, #48]
  431aec:	str	w1, [x0]
  431af0:	b	431a00 <wcrtomb@plt+0x2cde0>
  431af4:	ldp	x23, x24, [sp, #48]
  431af8:	b	431a00 <wcrtomb@plt+0x2cde0>
  431afc:	str	x25, [sp, #64]
  431b00:	bl	404ad0 <__errno_location@plt>
  431b04:	ldr	w0, [x0]
  431b08:	bl	447548 <argp_parse@@Base+0x7768>
  431b0c:	str	x25, [sp, #64]
  431b10:	bl	404ad0 <__errno_location@plt>
  431b14:	ldr	w0, [x0]
  431b18:	bl	447508 <argp_parse@@Base+0x7728>
  431b1c:	nop
  431b20:	mov	x12, #0x1020                	// #4128
  431b24:	sub	sp, sp, x12
  431b28:	cmn	w0, #0x64
  431b2c:	stp	x29, x30, [sp]
  431b30:	mov	x29, sp
  431b34:	stp	x19, x20, [sp, #16]
  431b38:	mov	x20, x1
  431b3c:	stp	x21, x22, [sp, #32]
  431b40:	mov	w22, w2
  431b44:	stp	x23, x24, [sp, #48]
  431b48:	mov	x23, x3
  431b4c:	b.eq	431c60 <wcrtomb@plt+0x2d040>  // b.none
  431b50:	mov	w19, w0
  431b54:	ldrb	w0, [x1]
  431b58:	cmp	w0, #0x2f
  431b5c:	b.eq	431c60 <wcrtomb@plt+0x2d040>  // b.none
  431b60:	stp	x25, x26, [sp, #64]
  431b64:	add	x25, sp, #0x60
  431b68:	mov	x2, x1
  431b6c:	mov	x0, x25
  431b70:	mov	w1, w19
  431b74:	bl	451438 <_obstack_memory_used@@Base+0x28>
  431b78:	mov	x24, x0
  431b7c:	cbz	x0, 431be4 <wcrtomb@plt+0x2cfc4>
  431b80:	mov	x2, x23
  431b84:	mov	w1, w22
  431b88:	str	x27, [sp, #80]
  431b8c:	bl	404550 <acl_set_file@plt>
  431b90:	mov	w21, w0
  431b94:	bl	404ad0 <__errno_location@plt>
  431b98:	ldr	w27, [x0]
  431b9c:	mov	x26, x0
  431ba0:	cmp	x24, x25
  431ba4:	b.eq	431bb0 <wcrtomb@plt+0x2cf90>  // b.none
  431ba8:	mov	x0, x24
  431bac:	bl	4047b0 <free@plt>
  431bb0:	cmn	w21, #0x1
  431bb4:	b.ne	431c94 <wcrtomb@plt+0x2d074>  // b.any
  431bb8:	cmp	w27, #0x14
  431bbc:	b.eq	431be0 <wcrtomb@plt+0x2cfc0>  // b.none
  431bc0:	sub	w0, w27, #0x1
  431bc4:	cmp	w0, #0x1
  431bc8:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  431bcc:	b.eq	431be0 <wcrtomb@plt+0x2cfc0>  // b.none
  431bd0:	cmp	w27, #0x26
  431bd4:	mov	w0, #0x5f                  	// #95
  431bd8:	ccmp	w27, w0, #0x4, ne  // ne = any
  431bdc:	b.ne	431d48 <wcrtomb@plt+0x2d128>  // b.any
  431be0:	ldr	x27, [sp, #80]
  431be4:	mov	x0, x25
  431be8:	bl	44f320 <argp_parse@@Base+0xf540>
  431bec:	cbnz	w0, 431d90 <wcrtomb@plt+0x2d170>
  431bf0:	tbnz	w19, #31, 431c00 <wcrtomb@plt+0x2cfe0>
  431bf4:	ldr	w0, [sp, #96]
  431bf8:	cmp	w0, w19
  431bfc:	b.eq	431d58 <wcrtomb@plt+0x2d138>  // b.none
  431c00:	mov	w0, w19
  431c04:	bl	404060 <fchdir@plt>
  431c08:	cbnz	w0, 431d08 <wcrtomb@plt+0x2d0e8>
  431c0c:	mov	x2, x23
  431c10:	mov	w1, w22
  431c14:	mov	x0, x20
  431c18:	bl	404550 <acl_set_file@plt>
  431c1c:	mov	w21, w0
  431c20:	cmn	w0, #0x1
  431c24:	b.eq	431cbc <wcrtomb@plt+0x2d09c>  // b.none
  431c28:	mov	x0, x25
  431c2c:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431c30:	cbnz	w0, 431d80 <wcrtomb@plt+0x2d160>
  431c34:	mov	x0, x25
  431c38:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431c3c:	mov	w0, w21
  431c40:	mov	x12, #0x1020                	// #4128
  431c44:	ldp	x29, x30, [sp]
  431c48:	ldp	x19, x20, [sp, #16]
  431c4c:	ldp	x21, x22, [sp, #32]
  431c50:	ldp	x23, x24, [sp, #48]
  431c54:	ldp	x25, x26, [sp, #64]
  431c58:	add	sp, sp, x12
  431c5c:	ret
  431c60:	mov	x2, x23
  431c64:	mov	w1, w22
  431c68:	mov	x0, x20
  431c6c:	bl	404550 <acl_set_file@plt>
  431c70:	mov	w21, w0
  431c74:	mov	w0, w21
  431c78:	mov	x12, #0x1020                	// #4128
  431c7c:	ldp	x29, x30, [sp]
  431c80:	ldp	x19, x20, [sp, #16]
  431c84:	ldp	x21, x22, [sp, #32]
  431c88:	ldp	x23, x24, [sp, #48]
  431c8c:	add	sp, sp, x12
  431c90:	ret
  431c94:	mov	w0, w21
  431c98:	mov	x12, #0x1020                	// #4128
  431c9c:	ldp	x29, x30, [sp]
  431ca0:	ldp	x19, x20, [sp, #16]
  431ca4:	ldp	x21, x22, [sp, #32]
  431ca8:	ldp	x23, x24, [sp, #48]
  431cac:	ldp	x25, x26, [sp, #64]
  431cb0:	ldr	x27, [sp, #80]
  431cb4:	add	sp, sp, x12
  431cb8:	ret
  431cbc:	bl	404ad0 <__errno_location@plt>
  431cc0:	mov	x19, x0
  431cc4:	mov	x0, x25
  431cc8:	ldr	w20, [x19]
  431ccc:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431cd0:	cbnz	w0, 431d80 <wcrtomb@plt+0x2d160>
  431cd4:	mov	x0, x25
  431cd8:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431cdc:	cbz	w20, 431d78 <wcrtomb@plt+0x2d158>
  431ce0:	ldp	x25, x26, [sp, #64]
  431ce4:	str	w20, [x19]
  431ce8:	mov	w0, w21
  431cec:	mov	x12, #0x1020                	// #4128
  431cf0:	ldp	x29, x30, [sp]
  431cf4:	ldp	x19, x20, [sp, #16]
  431cf8:	ldp	x21, x22, [sp, #32]
  431cfc:	ldp	x23, x24, [sp, #48]
  431d00:	add	sp, sp, x12
  431d04:	ret
  431d08:	bl	404ad0 <__errno_location@plt>
  431d0c:	mov	x19, x0
  431d10:	mov	x0, x25
  431d14:	mov	w21, #0xffffffff            	// #-1
  431d18:	ldr	w20, [x19]
  431d1c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431d20:	ldp	x25, x26, [sp, #64]
  431d24:	str	w20, [x19]
  431d28:	mov	w0, w21
  431d2c:	mov	x12, #0x1020                	// #4128
  431d30:	ldp	x29, x30, [sp]
  431d34:	ldp	x19, x20, [sp, #16]
  431d38:	ldp	x21, x22, [sp, #32]
  431d3c:	ldp	x23, x24, [sp, #48]
  431d40:	add	sp, sp, x12
  431d44:	ret
  431d48:	str	w27, [x26]
  431d4c:	ldp	x25, x26, [sp, #64]
  431d50:	ldr	x27, [sp, #80]
  431d54:	b	431c74 <wcrtomb@plt+0x2d054>
  431d58:	mov	x0, x25
  431d5c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431d60:	mov	w21, #0xffffffff            	// #-1
  431d64:	bl	404ad0 <__errno_location@plt>
  431d68:	mov	w1, #0x9                   	// #9
  431d6c:	ldp	x25, x26, [sp, #64]
  431d70:	str	w1, [x0]
  431d74:	b	431c74 <wcrtomb@plt+0x2d054>
  431d78:	ldp	x25, x26, [sp, #64]
  431d7c:	b	431c74 <wcrtomb@plt+0x2d054>
  431d80:	str	x27, [sp, #80]
  431d84:	bl	404ad0 <__errno_location@plt>
  431d88:	ldr	w0, [x0]
  431d8c:	bl	447548 <argp_parse@@Base+0x7768>
  431d90:	str	x27, [sp, #80]
  431d94:	bl	404ad0 <__errno_location@plt>
  431d98:	ldr	w0, [x0]
  431d9c:	bl	447508 <argp_parse@@Base+0x7728>
  431da0:	mov	x12, #0x1010                	// #4112
  431da4:	sub	sp, sp, x12
  431da8:	stp	x29, x30, [sp]
  431dac:	mov	x29, sp
  431db0:	stp	x23, x24, [sp, #48]
  431db4:	add	x23, sp, #0x50
  431db8:	mov	w24, w2
  431dbc:	mov	x2, x1
  431dc0:	stp	x19, x20, [sp, #16]
  431dc4:	mov	w19, w0
  431dc8:	stp	x21, x22, [sp, #32]
  431dcc:	mov	x22, x1
  431dd0:	mov	w1, w0
  431dd4:	mov	x0, x23
  431dd8:	bl	451438 <_obstack_memory_used@@Base+0x28>
  431ddc:	cbz	x0, 431e64 <wcrtomb@plt+0x2d244>
  431de0:	mov	w1, w24
  431de4:	mov	x21, x0
  431de8:	stp	x25, x26, [sp, #64]
  431dec:	bl	404760 <acl_get_file@plt>
  431df0:	mov	x20, x0
  431df4:	bl	404ad0 <__errno_location@plt>
  431df8:	ldr	w26, [x0]
  431dfc:	mov	x25, x0
  431e00:	cmp	x21, x23
  431e04:	b.eq	431e10 <wcrtomb@plt+0x2d1f0>  // b.none
  431e08:	mov	x0, x21
  431e0c:	bl	4047b0 <free@plt>
  431e10:	cbz	x20, 431e38 <wcrtomb@plt+0x2d218>
  431e14:	ldp	x25, x26, [sp, #64]
  431e18:	mov	x0, x20
  431e1c:	mov	x12, #0x1010                	// #4112
  431e20:	ldp	x29, x30, [sp]
  431e24:	ldp	x19, x20, [sp, #16]
  431e28:	ldp	x21, x22, [sp, #32]
  431e2c:	ldp	x23, x24, [sp, #48]
  431e30:	add	sp, sp, x12
  431e34:	ret
  431e38:	cmp	w26, #0x14
  431e3c:	b.eq	431e60 <wcrtomb@plt+0x2d240>  // b.none
  431e40:	sub	w0, w26, #0x1
  431e44:	cmp	w0, #0x1
  431e48:	ccmp	w26, #0xd, #0x4, hi  // hi = pmore
  431e4c:	b.eq	431e60 <wcrtomb@plt+0x2d240>  // b.none
  431e50:	cmp	w26, #0x26
  431e54:	mov	w0, #0x5f                  	// #95
  431e58:	ccmp	w26, w0, #0x4, ne  // ne = any
  431e5c:	b.ne	431f74 <wcrtomb@plt+0x2d354>  // b.any
  431e60:	ldp	x25, x26, [sp, #64]
  431e64:	mov	x0, x23
  431e68:	bl	44f320 <argp_parse@@Base+0xf540>
  431e6c:	cbnz	w0, 431f80 <wcrtomb@plt+0x2d360>
  431e70:	tbnz	w19, #31, 431e80 <wcrtomb@plt+0x2d260>
  431e74:	ldr	w0, [sp, #80]
  431e78:	cmp	w19, w0
  431e7c:	b.eq	431f10 <wcrtomb@plt+0x2d2f0>  // b.none
  431e80:	mov	w0, w19
  431e84:	bl	404060 <fchdir@plt>
  431e88:	cbnz	w0, 431ed4 <wcrtomb@plt+0x2d2b4>
  431e8c:	mov	w1, w24
  431e90:	mov	x0, x22
  431e94:	bl	404760 <acl_get_file@plt>
  431e98:	mov	x20, x0
  431e9c:	cbz	x0, 431f2c <wcrtomb@plt+0x2d30c>
  431ea0:	mov	x0, x23
  431ea4:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431ea8:	cbnz	w0, 431f90 <wcrtomb@plt+0x2d370>
  431eac:	mov	x0, x23
  431eb0:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431eb4:	mov	x0, x20
  431eb8:	mov	x12, #0x1010                	// #4112
  431ebc:	ldp	x29, x30, [sp]
  431ec0:	ldp	x19, x20, [sp, #16]
  431ec4:	ldp	x21, x22, [sp, #32]
  431ec8:	ldp	x23, x24, [sp, #48]
  431ecc:	add	sp, sp, x12
  431ed0:	ret
  431ed4:	bl	404ad0 <__errno_location@plt>
  431ed8:	mov	x19, x0
  431edc:	mov	x0, x23
  431ee0:	mov	x20, #0x0                   	// #0
  431ee4:	ldr	w21, [x19]
  431ee8:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431eec:	str	w21, [x19]
  431ef0:	mov	x0, x20
  431ef4:	mov	x12, #0x1010                	// #4112
  431ef8:	ldp	x29, x30, [sp]
  431efc:	ldp	x19, x20, [sp, #16]
  431f00:	ldp	x21, x22, [sp, #32]
  431f04:	ldp	x23, x24, [sp, #48]
  431f08:	add	sp, sp, x12
  431f0c:	ret
  431f10:	mov	x0, x23
  431f14:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431f18:	mov	x20, #0x0                   	// #0
  431f1c:	bl	404ad0 <__errno_location@plt>
  431f20:	mov	w1, #0x9                   	// #9
  431f24:	str	w1, [x0]
  431f28:	b	431e18 <wcrtomb@plt+0x2d1f8>
  431f2c:	bl	404ad0 <__errno_location@plt>
  431f30:	mov	x19, x0
  431f34:	mov	x0, x23
  431f38:	ldr	w21, [x19]
  431f3c:	bl	44f380 <argp_parse@@Base+0xf5a0>
  431f40:	cbnz	w0, 431f90 <wcrtomb@plt+0x2d370>
  431f44:	mov	x0, x23
  431f48:	bl	44f398 <argp_parse@@Base+0xf5b8>
  431f4c:	cbz	w21, 431e18 <wcrtomb@plt+0x2d1f8>
  431f50:	str	w21, [x19]
  431f54:	mov	x0, x20
  431f58:	mov	x12, #0x1010                	// #4112
  431f5c:	ldp	x29, x30, [sp]
  431f60:	ldp	x19, x20, [sp, #16]
  431f64:	ldp	x21, x22, [sp, #32]
  431f68:	ldp	x23, x24, [sp, #48]
  431f6c:	add	sp, sp, x12
  431f70:	ret
  431f74:	str	w26, [x25]
  431f78:	ldp	x25, x26, [sp, #64]
  431f7c:	b	431e18 <wcrtomb@plt+0x2d1f8>
  431f80:	stp	x25, x26, [sp, #64]
  431f84:	bl	404ad0 <__errno_location@plt>
  431f88:	ldr	w0, [x0]
  431f8c:	bl	447508 <argp_parse@@Base+0x7728>
  431f90:	stp	x25, x26, [sp, #64]
  431f94:	bl	404ad0 <__errno_location@plt>
  431f98:	ldr	w0, [x0]
  431f9c:	bl	447548 <argp_parse@@Base+0x7768>
  431fa0:	stp	x29, x30, [sp, #-128]!
  431fa4:	mov	x29, sp
  431fa8:	stp	x19, x20, [sp, #16]
  431fac:	stp	x23, x24, [sp, #48]
  431fb0:	mov	x24, x1
  431fb4:	stp	x25, x26, [sp, #64]
  431fb8:	mov	w25, w2
  431fbc:	cbz	x3, 432178 <wcrtomb@plt+0x2d558>
  431fc0:	mov	x20, x3
  431fc4:	stp	x21, x22, [sp, #32]
  431fc8:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  431fcc:	str	x27, [sp, #80]
  431fd0:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  431fd4:	mov	x22, x3
  431fd8:	add	x23, x23, #0x1a0
  431fdc:	ldrb	w0, [x20]
  431fe0:	add	x26, x26, #0x1a8
  431fe4:	mov	x21, x3
  431fe8:	cbz	w0, 432094 <wcrtomb@plt+0x2d474>
  431fec:	nop
  431ff0:	mov	x1, x23
  431ff4:	mov	x0, x20
  431ff8:	bl	404a90 <strcspn@plt>
  431ffc:	add	x19, x20, x0
  432000:	ldrb	w0, [x20, x0]
  432004:	cmp	w0, #0x3a
  432008:	b.ne	4320f4 <wcrtomb@plt+0x2d4d4>  // b.any
  43200c:	add	x27, x19, #0x1
  432010:	mov	x1, x23
  432014:	mov	x0, x27
  432018:	bl	404a90 <strcspn@plt>
  43201c:	add	x19, x27, x0
  432020:	ldrb	w0, [x27, x0]
  432024:	cmp	w0, #0x3a
  432028:	b.ne	4320f4 <wcrtomb@plt+0x2d4d4>  // b.any
  43202c:	add	x19, x19, #0x1
  432030:	mov	x1, x23
  432034:	mov	x0, x19
  432038:	bl	404a90 <strcspn@plt>
  43203c:	add	x19, x19, x0
  432040:	cmp	x20, x21
  432044:	sub	x2, x19, x20
  432048:	add	x27, x21, x2
  43204c:	b.eq	43205c <wcrtomb@plt+0x2d43c>  // b.none
  432050:	mov	x1, x20
  432054:	mov	x0, x21
  432058:	bl	403f80 <memmove@plt>
  43205c:	ldrb	w0, [x19]
  432060:	cmp	w0, #0x3a
  432064:	b.ne	43207c <wcrtomb@plt+0x2d45c>  // b.any
  432068:	mov	x0, x19
  43206c:	mov	x1, x26
  432070:	bl	404a90 <strcspn@plt>
  432074:	add	x19, x19, x0
  432078:	ldrb	w0, [x19]
  43207c:	cmp	w0, #0x2c
  432080:	mov	x21, x27
  432084:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  432088:	b.eq	432114 <wcrtomb@plt+0x2d4f4>  // b.none
  43208c:	mov	x20, x19
  432090:	cbnz	w0, 431ff0 <wcrtomb@plt+0x2d3d0>
  432094:	cmp	x20, x21
  432098:	b.eq	4320a0 <wcrtomb@plt+0x2d480>  // b.none
  43209c:	strb	wzr, [x21]
  4320a0:	mov	x0, x22
  4320a4:	bl	4049f0 <acl_from_text@plt>
  4320a8:	mov	x19, x0
  4320ac:	ldp	x21, x22, [sp, #32]
  4320b0:	ldr	x27, [sp, #80]
  4320b4:	cbz	x19, 432218 <wcrtomb@plt+0x2d5f8>
  4320b8:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  4320bc:	mov	w2, w25
  4320c0:	mov	x3, x19
  4320c4:	mov	x1, x24
  4320c8:	ldr	w0, [x0, #2200]
  4320cc:	bl	431b20 <wcrtomb@plt+0x2cf00>
  4320d0:	cmn	w0, #0x1
  4320d4:	b.eq	432124 <wcrtomb@plt+0x2d504>  // b.none
  4320d8:	mov	x0, x19
  4320dc:	bl	404bf0 <acl_free@plt>
  4320e0:	ldp	x19, x20, [sp, #16]
  4320e4:	ldp	x23, x24, [sp, #48]
  4320e8:	ldp	x25, x26, [sp, #64]
  4320ec:	ldp	x29, x30, [sp], #128
  4320f0:	ret
  4320f4:	sub	x2, x19, x20
  4320f8:	cmp	x20, x21
  4320fc:	add	x27, x21, x2
  432100:	b.ne	432050 <wcrtomb@plt+0x2d430>  // b.any
  432104:	cmp	w0, #0x2c
  432108:	mov	x21, x27
  43210c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  432110:	b.ne	43208c <wcrtomb@plt+0x2d46c>  // b.any
  432114:	add	x20, x19, #0x1
  432118:	strb	w0, [x21], #1
  43211c:	ldrb	w0, [x20]
  432120:	b	431fe8 <wcrtomb@plt+0x2d3c8>
  432124:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432128:	ldr	w0, [x0, #432]
  43212c:	tbz	w0, #21, 4320d8 <wcrtomb@plt+0x2d4b8>
  432130:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  432134:	ldr	x0, [x0, #1136]
  432138:	cbz	x0, 432140 <wcrtomb@plt+0x2d520>
  43213c:	blr	x0
  432140:	bl	404ad0 <__errno_location@plt>
  432144:	mov	x3, x0
  432148:	mov	w2, #0x5                   	// #5
  43214c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432150:	mov	x0, #0x0                   	// #0
  432154:	add	x1, x1, #0x208
  432158:	ldr	w20, [x3]
  43215c:	bl	4049c0 <dcgettext@plt>
  432160:	mov	x3, x24
  432164:	mov	x2, x0
  432168:	mov	w1, w20
  43216c:	mov	w0, #0x0                   	// #0
  432170:	bl	404050 <error@plt>
  432174:	b	4320d8 <wcrtomb@plt+0x2d4b8>
  432178:	and	w4, w4, #0xff
  43217c:	cbnz	w4, 43223c <wcrtomb@plt+0x2d61c>
  432180:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432184:	add	x1, x1, #0x240
  432188:	ldr	w0, [x0]
  43218c:	ldp	x2, x3, [x1]
  432190:	stp	x2, x3, [sp, #96]
  432194:	ldp	x2, x3, [x1, #16]
  432198:	stp	x2, x3, [sp, #112]
  43219c:	tbz	w0, #8, 4321a8 <wcrtomb@plt+0x2d588>
  4321a0:	mov	w1, #0x72                  	// #114
  4321a4:	strb	w1, [sp, #102]
  4321a8:	tbz	w0, #7, 4321b4 <wcrtomb@plt+0x2d594>
  4321ac:	mov	w1, #0x77                  	// #119
  4321b0:	strb	w1, [sp, #103]
  4321b4:	tbz	w0, #6, 4321c0 <wcrtomb@plt+0x2d5a0>
  4321b8:	mov	w1, #0x78                  	// #120
  4321bc:	strb	w1, [sp, #104]
  4321c0:	tbz	w0, #5, 4321cc <wcrtomb@plt+0x2d5ac>
  4321c4:	mov	w1, #0x72                  	// #114
  4321c8:	strb	w1, [sp, #113]
  4321cc:	tbz	w0, #4, 4321d8 <wcrtomb@plt+0x2d5b8>
  4321d0:	mov	w1, #0x77                  	// #119
  4321d4:	strb	w1, [sp, #114]
  4321d8:	tbz	w0, #3, 4321e4 <wcrtomb@plt+0x2d5c4>
  4321dc:	mov	w1, #0x78                  	// #120
  4321e0:	strb	w1, [sp, #115]
  4321e4:	tbz	w0, #2, 4321f0 <wcrtomb@plt+0x2d5d0>
  4321e8:	mov	w1, #0x72                  	// #114
  4321ec:	strb	w1, [sp, #124]
  4321f0:	tbz	w0, #1, 4321fc <wcrtomb@plt+0x2d5dc>
  4321f4:	mov	w1, #0x77                  	// #119
  4321f8:	strb	w1, [sp, #125]
  4321fc:	tbz	w0, #0, 432208 <wcrtomb@plt+0x2d5e8>
  432200:	mov	w0, #0x78                  	// #120
  432204:	strb	w0, [sp, #126]
  432208:	add	x0, sp, #0x60
  43220c:	bl	4049f0 <acl_from_text@plt>
  432210:	mov	x19, x0
  432214:	cbnz	x19, 4320b8 <wcrtomb@plt+0x2d498>
  432218:	mov	x1, x24
  43221c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432220:	add	x0, x0, #0x1f8
  432224:	bl	433610 <wcrtomb@plt+0x2e9f0>
  432228:	ldp	x19, x20, [sp, #16]
  43222c:	ldp	x23, x24, [sp, #48]
  432230:	ldp	x25, x26, [sp, #64]
  432234:	ldp	x29, x30, [sp], #128
  432238:	ret
  43223c:	adrp	x0, 493000 <_obstack_memory_used@@Base+0x41bf0>
  432240:	ldr	w0, [x0, #2200]
  432244:	bl	4318d0 <wcrtomb@plt+0x2ccb0>
  432248:	cbz	w0, 4320e0 <wcrtomb@plt+0x2d4c0>
  43224c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432250:	ldr	w0, [x0, #432]
  432254:	tbz	w0, #21, 4320e0 <wcrtomb@plt+0x2d4c0>
  432258:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  43225c:	ldr	x0, [x0, #1136]
  432260:	cbz	x0, 432268 <wcrtomb@plt+0x2d648>
  432264:	blr	x0
  432268:	bl	404ad0 <__errno_location@plt>
  43226c:	mov	x3, x0
  432270:	mov	w2, #0x5                   	// #5
  432274:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432278:	mov	x0, #0x0                   	// #0
  43227c:	add	x1, x1, #0x1b0
  432280:	ldr	w19, [x3]
  432284:	bl	4049c0 <dcgettext@plt>
  432288:	mov	x3, x24
  43228c:	mov	x2, x0
  432290:	mov	w1, w19
  432294:	mov	w0, #0x0                   	// #0
  432298:	bl	404050 <error@plt>
  43229c:	b	4320e0 <wcrtomb@plt+0x2d4c0>
  4322a0:	stp	x29, x30, [sp, #-48]!
  4322a4:	mov	x29, sp
  4322a8:	stp	x19, x20, [sp, #16]
  4322ac:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4322b0:	add	x19, x19, #0xda8
  4322b4:	mov	x20, x0
  4322b8:	ldr	x1, [x19, #8]
  4322bc:	cbnz	x1, 43233c <wcrtomb@plt+0x2d71c>
  4322c0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4322c4:	mov	x2, #0x5                   	// #5
  4322c8:	add	x1, x1, #0x260
  4322cc:	bl	4043c0 <strncmp@plt>
  4322d0:	cbnz	w0, 43232c <wcrtomb@plt+0x2d70c>
  4322d4:	ldr	x0, [x19, #32]
  4322d8:	cbnz	x0, 4322ec <wcrtomb@plt+0x2d6cc>
  4322dc:	mov	w0, #0x0                   	// #0
  4322e0:	ldp	x19, x20, [sp, #16]
  4322e4:	ldp	x29, x30, [sp], #48
  4322e8:	ret
  4322ec:	ldr	x0, [x19, #40]
  4322f0:	cbz	x0, 4322dc <wcrtomb@plt+0x2d6bc>
  4322f4:	str	x21, [sp, #32]
  4322f8:	mov	x21, #0x0                   	// #0
  4322fc:	b	43230c <wcrtomb@plt+0x2d6ec>
  432300:	ldr	x0, [x19, #40]
  432304:	cmp	x0, x21
  432308:	b.ls	432380 <wcrtomb@plt+0x2d760>  // b.plast
  43230c:	ldr	x0, [x19, #24]
  432310:	mov	x1, x20
  432314:	mov	w2, #0x0                   	// #0
  432318:	ldr	x0, [x0, x21, lsl #3]
  43231c:	add	x21, x21, #0x1
  432320:	bl	4048c0 <fnmatch@plt>
  432324:	cbnz	w0, 432300 <wcrtomb@plt+0x2d6e0>
  432328:	ldr	x21, [sp, #32]
  43232c:	mov	w0, #0x1                   	// #1
  432330:	ldp	x19, x20, [sp, #16]
  432334:	ldp	x29, x30, [sp], #48
  432338:	ret
  43233c:	ldr	x0, [x19, #16]
  432340:	cbz	x0, 43232c <wcrtomb@plt+0x2d70c>
  432344:	str	x21, [sp, #32]
  432348:	mov	x21, #0x0                   	// #0
  43234c:	b	43235c <wcrtomb@plt+0x2d73c>
  432350:	ldr	x0, [x19, #16]
  432354:	cmp	x0, x21
  432358:	b.ls	432328 <wcrtomb@plt+0x2d708>  // b.plast
  43235c:	ldr	x0, [x19]
  432360:	mov	x1, x20
  432364:	mov	w2, #0x0                   	// #0
  432368:	ldr	x0, [x0, x21, lsl #3]
  43236c:	add	x21, x21, #0x1
  432370:	bl	4048c0 <fnmatch@plt>
  432374:	cbnz	w0, 432350 <wcrtomb@plt+0x2d730>
  432378:	ldr	x21, [sp, #32]
  43237c:	b	4322d4 <wcrtomb@plt+0x2d6b4>
  432380:	mov	w0, #0x0                   	// #0
  432384:	ldr	x21, [sp, #32]
  432388:	b	4322e0 <wcrtomb@plt+0x2d6c0>
  43238c:	nop
  432390:	cmp	x1, #0x0
  432394:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  432398:	b.ne	4323a0 <wcrtomb@plt+0x2d780>  // b.any
  43239c:	ret
  4323a0:	stp	x29, x30, [sp, #-192]!
  4323a4:	mov	x29, sp
  4323a8:	stp	x19, x20, [sp, #16]
  4323ac:	stp	x21, x22, [sp, #32]
  4323b0:	mov	w22, #0x0                   	// #0
  4323b4:	stp	x23, x24, [sp, #48]
  4323b8:	mov	x23, x1
  4323bc:	mov	x24, x2
  4323c0:	stp	x25, x26, [sp, #64]
  4323c4:	mov	x25, x0
  4323c8:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4323cc:	stp	x27, x28, [sp, #80]
  4323d0:	bl	403ff0 <strlen@plt>
  4323d4:	mov	x21, x0
  4323d8:	adrp	x4, 404000 <fputs@plt>
  4323dc:	add	x0, sp, #0x68
  4323e0:	add	x4, x4, #0x7b0
  4323e4:	adrp	x3, 450000 <argp_parse@@Base+0x10220>
  4323e8:	mov	x2, #0x0                   	// #0
  4323ec:	add	x3, x3, #0x1a0
  4323f0:	mov	x1, #0x0                   	// #0
  4323f4:	sxtw	x21, w21
  4323f8:	bl	451000 <_obstack_begin@@Base>
  4323fc:	mov	x20, x23
  432400:	add	x26, x26, #0x268
  432404:	ldr	x19, [sp, #128]
  432408:	b	432464 <wcrtomb@plt+0x2d844>
  43240c:	mov	x2, x21
  432410:	mov	x1, x25
  432414:	mov	x0, x19
  432418:	bl	403f70 <memcpy@plt>
  43241c:	ldp	x0, x4, [sp, #128]
  432420:	mov	x1, x20
  432424:	mov	x2, x27
  432428:	add	x0, x0, x21
  43242c:	str	x0, [sp, #128]
  432430:	sub	x4, x4, x0
  432434:	cmp	x4, w28, sxtw
  432438:	b.cc	4324c4 <wcrtomb@plt+0x2d8a4>  // b.lo, b.ul, b.last
  43243c:	bl	403f70 <memcpy@plt>
  432440:	add	w28, w28, #0x1
  432444:	ldr	x19, [sp, #128]
  432448:	add	w22, w22, w28
  43244c:	add	x0, x27, #0x1
  432450:	add	x19, x19, x27
  432454:	str	x19, [sp, #128]
  432458:	cmp	x24, w22, sxtw
  43245c:	add	x20, x20, x0
  432460:	b.cc	4324f4 <wcrtomb@plt+0x2d8d4>  // b.lo, b.ul, b.last
  432464:	mov	x1, x26
  432468:	mov	x0, x20
  43246c:	bl	404a90 <strcspn@plt>
  432470:	mov	x28, x0
  432474:	cmp	x23, x20
  432478:	ldr	x0, [sp, #136]
  43247c:	cbz	w28, 4324f8 <wcrtomb@plt+0x2d8d8>
  432480:	b.eq	4324a0 <wcrtomb@plt+0x2d880>  // b.none
  432484:	cmp	x19, x0
  432488:	b.eq	4324e0 <wcrtomb@plt+0x2d8c0>  // b.none
  43248c:	add	x0, x19, #0x1
  432490:	str	x0, [sp, #128]
  432494:	mov	w0, #0x2c                  	// #44
  432498:	strb	w0, [x19]
  43249c:	ldp	x19, x0, [sp, #128]
  4324a0:	sub	x0, x0, x19
  4324a4:	sxtw	x27, w28
  4324a8:	cmp	x21, x0
  4324ac:	b.ls	43240c <wcrtomb@plt+0x2d7ec>  // b.plast
  4324b0:	mov	x1, x21
  4324b4:	add	x0, sp, #0x68
  4324b8:	bl	4511d8 <_obstack_newchunk@@Base>
  4324bc:	ldr	x19, [sp, #128]
  4324c0:	b	43240c <wcrtomb@plt+0x2d7ec>
  4324c4:	mov	x1, x27
  4324c8:	add	x0, sp, #0x68
  4324cc:	bl	4511d8 <_obstack_newchunk@@Base>
  4324d0:	mov	x2, x27
  4324d4:	mov	x1, x20
  4324d8:	ldr	x0, [sp, #128]
  4324dc:	b	43243c <wcrtomb@plt+0x2d81c>
  4324e0:	add	x0, sp, #0x68
  4324e4:	mov	x1, #0x1                   	// #1
  4324e8:	bl	4511d8 <_obstack_newchunk@@Base>
  4324ec:	ldr	x19, [sp, #128]
  4324f0:	b	43248c <wcrtomb@plt+0x2d86c>
  4324f4:	ldr	x0, [sp, #136]
  4324f8:	cmp	x19, x0
  4324fc:	b.eq	432590 <wcrtomb@plt+0x2d970>  // b.none
  432500:	add	x0, x19, #0x1
  432504:	str	x0, [sp, #128]
  432508:	strb	wzr, [x19]
  43250c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432510:	ldp	x0, x4, [sp, #120]
  432514:	ldr	x1, [x1, #4056]
  432518:	cmp	x0, x4
  43251c:	b.eq	432580 <wcrtomb@plt+0x2d960>  // b.none
  432520:	ldr	x2, [sp, #152]
  432524:	ldr	x3, [sp, #112]
  432528:	add	x4, x4, x2
  43252c:	ldr	x5, [sp, #136]
  432530:	bic	x2, x4, x2
  432534:	str	x2, [sp, #128]
  432538:	sub	x4, x2, x3
  43253c:	sub	x3, x5, x3
  432540:	cmp	x4, x3
  432544:	b.ls	432550 <wcrtomb@plt+0x2d930>  // b.plast
  432548:	mov	x2, x5
  43254c:	str	x5, [sp, #128]
  432550:	str	x2, [sp, #120]
  432554:	bl	404000 <fputs@plt>
  432558:	add	x0, sp, #0x68
  43255c:	mov	x1, #0x0                   	// #0
  432560:	bl	451360 <_obstack_free@@Base>
  432564:	ldp	x19, x20, [sp, #16]
  432568:	ldp	x21, x22, [sp, #32]
  43256c:	ldp	x23, x24, [sp, #48]
  432570:	ldp	x25, x26, [sp, #64]
  432574:	ldp	x27, x28, [sp, #80]
  432578:	ldp	x29, x30, [sp], #192
  43257c:	ret
  432580:	ldrb	w2, [sp, #184]
  432584:	orr	w2, w2, #0x2
  432588:	strb	w2, [sp, #184]
  43258c:	b	432520 <wcrtomb@plt+0x2d900>
  432590:	add	x0, sp, #0x68
  432594:	mov	x1, #0x1                   	// #1
  432598:	bl	4511d8 <_obstack_newchunk@@Base>
  43259c:	ldr	x19, [sp, #128]
  4325a0:	b	432500 <wcrtomb@plt+0x2d8e0>
  4325a4:	nop
  4325a8:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4325ac:	ldr	w3, [x3, #1024]
  4325b0:	cmp	w3, #0x0
  4325b4:	b.gt	4325bc <wcrtomb@plt+0x2d99c>
  4325b8:	ret
  4325bc:	stp	x29, x30, [sp, #-64]!
  4325c0:	mov	x29, sp
  4325c4:	stp	x19, x20, [sp, #16]
  4325c8:	mov	x19, x2
  4325cc:	mov	x20, x1
  4325d0:	add	x2, x2, #0x58
  4325d4:	stp	x21, x22, [sp, #32]
  4325d8:	mov	w21, w4
  4325dc:	mov	w22, w0
  4325e0:	bl	431670 <wcrtomb@plt+0x2ca50>
  4325e4:	cbz	w0, 4326b8 <wcrtomb@plt+0x2da98>
  4325e8:	cmn	w0, #0x1
  4325ec:	b.eq	4327d0 <wcrtomb@plt+0x2dbb0>  // b.none
  4325f0:	stp	x23, x24, [sp, #48]
  4325f4:	cmn	w22, #0x64
  4325f8:	b.eq	4326c8 <wcrtomb@plt+0x2daa8>  // b.none
  4325fc:	ldrb	w0, [x20]
  432600:	cmp	w0, #0x2f
  432604:	b.eq	4326c8 <wcrtomb@plt+0x2daa8>  // b.none
  432608:	mov	x1, x20
  43260c:	mov	w0, w22
  432610:	mov	w2, #0x8000                	// #32768
  432614:	bl	431da0 <wcrtomb@plt+0x2d180>
  432618:	mov	x23, x0
  43261c:	cbz	x23, 4327a8 <wcrtomb@plt+0x2db88>
  432620:	mov	x1, #0x0                   	// #0
  432624:	mov	x0, x23
  432628:	bl	4045e0 <acl_to_text@plt>
  43262c:	mov	x24, x0
  432630:	mov	x0, x23
  432634:	bl	404bf0 <acl_free@plt>
  432638:	cbz	x24, 432848 <wcrtomb@plt+0x2dc28>
  43263c:	mov	x0, x24
  432640:	bl	450328 <argp_parse@@Base+0x10548>
  432644:	mov	x23, x0
  432648:	str	x0, [x19, #56]
  43264c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432650:	add	x1, x1, #0x2a0
  432654:	bl	404a90 <strcspn@plt>
  432658:	add	x6, x23, x0
  43265c:	ldrb	w5, [x23, x0]
  432660:	mov	x2, x6
  432664:	cbnz	w5, 432684 <wcrtomb@plt+0x2da64>
  432668:	b	43269c <wcrtomb@plt+0x2da7c>
  43266c:	cmp	w5, #0x23
  432670:	b.eq	432780 <wcrtomb@plt+0x2db60>  // b.none
  432674:	strb	w5, [x2], #1
  432678:	mov	x6, x3
  43267c:	ldrb	w5, [x3]
  432680:	cbz	w5, 43269c <wcrtomb@plt+0x2da7c>
  432684:	cmp	w5, #0x9
  432688:	add	x3, x6, #0x1
  43268c:	b.ne	43266c <wcrtomb@plt+0x2da4c>  // b.any
  432690:	ldrb	w5, [x3]
  432694:	mov	x6, x3
  432698:	cbnz	w5, 432684 <wcrtomb@plt+0x2da64>
  43269c:	sub	x23, x2, x23
  4326a0:	strb	wzr, [x2]
  4326a4:	str	x23, [x19, #64]
  4326a8:	mov	x0, x24
  4326ac:	bl	404bf0 <acl_free@plt>
  4326b0:	cbz	w21, 4326dc <wcrtomb@plt+0x2dabc>
  4326b4:	ldp	x23, x24, [sp, #48]
  4326b8:	ldp	x19, x20, [sp, #16]
  4326bc:	ldp	x21, x22, [sp, #32]
  4326c0:	ldp	x29, x30, [sp], #64
  4326c4:	ret
  4326c8:	mov	x0, x20
  4326cc:	mov	w1, #0x8000                	// #32768
  4326d0:	bl	404760 <acl_get_file@plt>
  4326d4:	mov	x23, x0
  4326d8:	b	43261c <wcrtomb@plt+0x2d9fc>
  4326dc:	cmn	w22, #0x64
  4326e0:	b.eq	4327ec <wcrtomb@plt+0x2dbcc>  // b.none
  4326e4:	ldrb	w0, [x20]
  4326e8:	cmp	w0, #0x2f
  4326ec:	b.eq	4327ec <wcrtomb@plt+0x2dbcc>  // b.none
  4326f0:	mov	w0, w22
  4326f4:	mov	x1, x20
  4326f8:	mov	w2, #0x4000                	// #16384
  4326fc:	bl	431da0 <wcrtomb@plt+0x2d180>
  432700:	mov	x21, x0
  432704:	cbz	x21, 432860 <wcrtomb@plt+0x2dc40>
  432708:	mov	x1, #0x0                   	// #0
  43270c:	mov	x0, x21
  432710:	bl	4045e0 <acl_to_text@plt>
  432714:	mov	x22, x0
  432718:	mov	x0, x21
  43271c:	bl	404bf0 <acl_free@plt>
  432720:	cbz	x22, 432890 <wcrtomb@plt+0x2dc70>
  432724:	mov	x0, x22
  432728:	bl	450328 <argp_parse@@Base+0x10548>
  43272c:	mov	x20, x0
  432730:	str	x0, [x19, #72]
  432734:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432738:	add	x1, x1, #0x2a0
  43273c:	bl	404a90 <strcspn@plt>
  432740:	add	x4, x20, x0
  432744:	ldrb	w2, [x20, x0]
  432748:	mov	x3, x4
  43274c:	cbnz	w2, 43276c <wcrtomb@plt+0x2db4c>
  432750:	b	432800 <wcrtomb@plt+0x2dbe0>
  432754:	cmp	w2, #0x23
  432758:	b.eq	432824 <wcrtomb@plt+0x2dc04>  // b.none
  43275c:	mov	x4, x1
  432760:	strb	w2, [x3], #1
  432764:	ldrb	w2, [x1]
  432768:	cbz	w2, 432800 <wcrtomb@plt+0x2dbe0>
  43276c:	cmp	w2, #0x9
  432770:	add	x1, x4, #0x1
  432774:	b.ne	432754 <wcrtomb@plt+0x2db34>  // b.any
  432778:	mov	x4, x1
  43277c:	b	432764 <wcrtomb@plt+0x2db44>
  432780:	ldrb	w0, [x6]
  432784:	cmp	w0, #0xa
  432788:	b.eq	4327a0 <wcrtomb@plt+0x2db80>  // b.none
  43278c:	nop
  432790:	ldrb	w1, [x3]
  432794:	add	x3, x3, #0x1
  432798:	cmp	w1, #0xa
  43279c:	b.ne	432790 <wcrtomb@plt+0x2db70>  // b.any
  4327a0:	mov	w5, #0xa                   	// #10
  4327a4:	b	432674 <wcrtomb@plt+0x2da54>
  4327a8:	bl	404ad0 <__errno_location@plt>
  4327ac:	ldr	w0, [x0]
  4327b0:	cmp	w0, #0x5f
  4327b4:	b.eq	4326b0 <wcrtomb@plt+0x2da90>  // b.none
  4327b8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4327bc:	mov	x1, x20
  4327c0:	add	x0, x0, #0x280
  4327c4:	bl	433610 <wcrtomb@plt+0x2e9f0>
  4327c8:	cbnz	w21, 4326b4 <wcrtomb@plt+0x2da94>
  4327cc:	b	4326dc <wcrtomb@plt+0x2dabc>
  4327d0:	mov	x1, x20
  4327d4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4327d8:	ldp	x19, x20, [sp, #16]
  4327dc:	add	x0, x0, #0x270
  4327e0:	ldp	x21, x22, [sp, #32]
  4327e4:	ldp	x29, x30, [sp], #64
  4327e8:	b	433610 <wcrtomb@plt+0x2e9f0>
  4327ec:	mov	x0, x20
  4327f0:	mov	w1, #0x4000                	// #16384
  4327f4:	bl	404760 <acl_get_file@plt>
  4327f8:	mov	x21, x0
  4327fc:	b	432704 <wcrtomb@plt+0x2dae4>
  432800:	strb	wzr, [x3]
  432804:	sub	x20, x3, x20
  432808:	mov	x0, x22
  43280c:	ldp	x21, x22, [sp, #32]
  432810:	ldp	x23, x24, [sp, #48]
  432814:	str	x20, [x19, #80]
  432818:	ldp	x19, x20, [sp, #16]
  43281c:	ldp	x29, x30, [sp], #64
  432820:	b	404bf0 <acl_free@plt>
  432824:	ldrb	w0, [x4]
  432828:	cmp	w0, #0xa
  43282c:	b.eq	432840 <wcrtomb@plt+0x2dc20>  // b.none
  432830:	ldrb	w2, [x1]
  432834:	add	x1, x1, #0x1
  432838:	cmp	w2, #0xa
  43283c:	b.ne	432830 <wcrtomb@plt+0x2dc10>  // b.any
  432840:	mov	w2, #0xa                   	// #10
  432844:	b	43275c <wcrtomb@plt+0x2db3c>
  432848:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43284c:	mov	x1, x20
  432850:	add	x0, x0, #0x290
  432854:	bl	433610 <wcrtomb@plt+0x2e9f0>
  432858:	cbnz	w21, 4326b4 <wcrtomb@plt+0x2da94>
  43285c:	b	4326dc <wcrtomb@plt+0x2dabc>
  432860:	bl	404ad0 <__errno_location@plt>
  432864:	ldr	w0, [x0]
  432868:	cmp	w0, #0x5f
  43286c:	b.eq	4326b4 <wcrtomb@plt+0x2da94>  // b.none
  432870:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432874:	mov	x1, x20
  432878:	add	x0, x0, #0x280
  43287c:	ldp	x19, x20, [sp, #16]
  432880:	ldp	x21, x22, [sp, #32]
  432884:	ldp	x23, x24, [sp, #48]
  432888:	ldp	x29, x30, [sp], #64
  43288c:	b	433610 <wcrtomb@plt+0x2e9f0>
  432890:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432894:	mov	x1, x20
  432898:	add	x0, x0, #0x290
  43289c:	b	43287c <wcrtomb@plt+0x2dc5c>
  4328a0:	stp	x29, x30, [sp, #-48]!
  4328a4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4328a8:	mov	x29, sp
  4328ac:	stp	x21, x22, [sp, #32]
  4328b0:	and	w21, w2, #0xff
  4328b4:	ldr	w2, [x3, #1024]
  4328b8:	cmp	w21, #0x32
  4328bc:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  4328c0:	b.gt	4328d0 <wcrtomb@plt+0x2dcb0>
  4328c4:	ldp	x21, x22, [sp, #32]
  4328c8:	ldp	x29, x30, [sp], #48
  4328cc:	ret
  4328d0:	stp	x19, x20, [sp, #16]
  4328d4:	mov	x19, x0
  4328d8:	add	x22, x0, #0x68
  4328dc:	mov	x0, x22
  4328e0:	mov	x20, x1
  4328e4:	ldr	x3, [x19, #56]
  4328e8:	mov	w4, #0x0                   	// #0
  4328ec:	mov	w2, #0x8000                	// #32768
  4328f0:	bl	431fa0 <wcrtomb@plt+0x2d380>
  4328f4:	cmp	w21, #0x35
  4328f8:	mov	w0, #0x44                  	// #68
  4328fc:	ccmp	w21, w0, #0x4, ne  // ne = any
  432900:	b.eq	432914 <wcrtomb@plt+0x2dcf4>  // b.none
  432904:	ldp	x19, x20, [sp, #16]
  432908:	ldp	x21, x22, [sp, #32]
  43290c:	ldp	x29, x30, [sp], #48
  432910:	ret
  432914:	mov	x1, x20
  432918:	mov	x0, x22
  43291c:	ldp	x21, x22, [sp, #32]
  432920:	mov	w4, #0x1                   	// #1
  432924:	ldr	x3, [x19, #72]
  432928:	mov	w2, #0x4000                	// #16384
  43292c:	ldp	x19, x20, [sp, #16]
  432930:	ldp	x29, x30, [sp], #48
  432934:	b	431fa0 <wcrtomb@plt+0x2d380>
  432938:	stp	x29, x30, [sp, #-32]!
  43293c:	tst	w1, #0xff
  432940:	mov	x29, sp
  432944:	stp	x19, x20, [sp, #16]
  432948:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43294c:	add	x19, x19, #0xda8
  432950:	add	x1, x19, #0x18
  432954:	mov	x20, x0
  432958:	csel	x19, x19, x1, ne  // ne = any
  43295c:	ldp	x0, x2, [x19]
  432960:	ldr	x1, [x19, #16]
  432964:	cmp	x1, x2
  432968:	b.eq	432984 <wcrtomb@plt+0x2dd64>  // b.none
  43296c:	add	x2, x1, #0x1
  432970:	str	x2, [x19, #16]
  432974:	str	x20, [x0, x1, lsl #3]
  432978:	ldp	x19, x20, [sp, #16]
  43297c:	ldp	x29, x30, [sp], #32
  432980:	ret
  432984:	cbz	x2, 4329d0 <wcrtomb@plt+0x2ddb0>
  432988:	cbz	x0, 4329e4 <wcrtomb@plt+0x2ddc4>
  43298c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  432990:	movk	x1, #0xaaa, lsl #48
  432994:	cmp	x2, x1
  432998:	b.cs	4329f8 <wcrtomb@plt+0x2ddd8>  // b.hs, b.nlast
  43299c:	add	x1, x2, #0x1
  4329a0:	add	x2, x1, x2, lsr #1
  4329a4:	lsl	x1, x2, #3
  4329a8:	str	x2, [x19, #8]
  4329ac:	bl	4501d0 <argp_parse@@Base+0x103f0>
  4329b0:	str	x0, [x19]
  4329b4:	ldr	x1, [x19, #16]
  4329b8:	add	x2, x1, #0x1
  4329bc:	str	x2, [x19, #16]
  4329c0:	str	x20, [x0, x1, lsl #3]
  4329c4:	ldp	x19, x20, [sp, #16]
  4329c8:	ldp	x29, x30, [sp], #32
  4329cc:	ret
  4329d0:	mov	x2, #0x4                   	// #4
  4329d4:	str	x2, [x19, #8]
  4329d8:	mov	x1, #0x20                  	// #32
  4329dc:	cbnz	x0, 43299c <wcrtomb@plt+0x2dd7c>
  4329e0:	b	4329a8 <wcrtomb@plt+0x2dd88>
  4329e4:	cmp	xzr, x2, lsr #61
  4329e8:	lsl	x1, x2, #3
  4329ec:	cset	x3, ne  // ne = any
  4329f0:	tbnz	x2, #60, 4329f8 <wcrtomb@plt+0x2ddd8>
  4329f4:	cbz	x3, 4329a8 <wcrtomb@plt+0x2dd88>
  4329f8:	bl	4104a0 <wcrtomb@plt+0xb880>
  4329fc:	nop
  432a00:	stp	x29, x30, [sp, #-32]!
  432a04:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432a08:	mov	x29, sp
  432a0c:	str	x19, [sp, #16]
  432a10:	add	x19, x0, #0xda8
  432a14:	ldr	x1, [x19, #8]
  432a18:	cbnz	x1, 432a30 <wcrtomb@plt+0x2de10>
  432a1c:	ldr	x0, [x19, #32]
  432a20:	cbnz	x0, 432a40 <wcrtomb@plt+0x2de20>
  432a24:	ldr	x19, [sp, #16]
  432a28:	ldp	x29, x30, [sp], #32
  432a2c:	ret
  432a30:	ldr	x0, [x0, #3496]
  432a34:	bl	4047b0 <free@plt>
  432a38:	ldr	x0, [x19, #32]
  432a3c:	cbz	x0, 432a24 <wcrtomb@plt+0x2de04>
  432a40:	ldr	x0, [x19, #24]
  432a44:	ldr	x19, [sp, #16]
  432a48:	ldp	x29, x30, [sp], #32
  432a4c:	b	4047b0 <free@plt>
  432a50:	stp	x29, x30, [sp, #-128]!
  432a54:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  432a58:	mov	x29, sp
  432a5c:	ldr	w4, [x4, #784]
  432a60:	str	x2, [sp, #112]
  432a64:	cmp	w4, #0x0
  432a68:	b.le	432c74 <wcrtomb@plt+0x2e054>
  432a6c:	stp	x19, x20, [sp, #16]
  432a70:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432a74:	add	x20, x20, #0xda8
  432a78:	stp	x23, x24, [sp, #48]
  432a7c:	mov	x24, x1
  432a80:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432a84:	ldr	x1, [x20, #48]
  432a88:	stp	x21, x22, [sp, #32]
  432a8c:	mov	w23, w3
  432a90:	stp	x25, x26, [sp, #64]
  432a94:	mov	w25, w0
  432a98:	ldr	x2, [x19, #552]
  432a9c:	cbz	x1, 432de8 <wcrtomb@plt+0x2e1c8>
  432aa0:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  432aa4:	movk	x21, #0x5553
  432aa8:	cbz	w23, 432c10 <wcrtomb@plt+0x2dff0>
  432aac:	mov	w0, w23
  432ab0:	bl	404980 <flistxattr@plt>
  432ab4:	mov	x22, x0
  432ab8:	cmn	x0, #0x1
  432abc:	b.eq	432bbc <wcrtomb@plt+0x2df9c>  // b.none
  432ac0:	ldp	x21, x2, [x20, #48]
  432ac4:	cbz	x2, 432e68 <wcrtomb@plt+0x2e248>
  432ac8:	cmp	x22, #0x0
  432acc:	b.le	432ea4 <wcrtomb@plt+0x2e284>
  432ad0:	cmp	w23, #0x0
  432ad4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432ad8:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432adc:	add	x0, x0, #0x2d8
  432ae0:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  432ae4:	add	x19, x19, #0x228
  432ae8:	stp	x27, x28, [sp, #80]
  432aec:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432af0:	add	x28, x28, #0x2c8
  432af4:	csel	x0, x28, x0, eq  // eq = none
  432af8:	movk	x26, #0x5553
  432afc:	str	x0, [sp, #120]
  432b00:	mov	x0, x21
  432b04:	str	x2, [sp, #104]
  432b08:	bl	403ff0 <strlen@plt>
  432b0c:	str	x0, [sp, #96]
  432b10:	ldr	x2, [sp, #104]
  432b14:	cbz	w23, 432cac <wcrtomb@plt+0x2e08c>
  432b18:	b	432b3c <wcrtomb@plt+0x2df1c>
  432b1c:	cmp	x1, x26
  432b20:	b.hi	432b80 <wcrtomb@plt+0x2df60>  // b.pmore
  432b24:	add	x2, x1, #0x1
  432b28:	add	x1, x2, x1, lsr #1
  432b2c:	str	x1, [x19, #8]
  432b30:	bl	4501d0 <argp_parse@@Base+0x103f0>
  432b34:	mov	x2, x0
  432b38:	str	x0, [x20, #56]
  432b3c:	ldr	x3, [x19, #8]
  432b40:	mov	x1, x21
  432b44:	mov	w0, w23
  432b48:	bl	404820 <fgetxattr@plt>
  432b4c:	mov	x27, x0
  432b50:	cmn	x0, #0x1
  432b54:	b.ne	432d44 <wcrtomb@plt+0x2e124>  // b.any
  432b58:	bl	404ad0 <__errno_location@plt>
  432b5c:	ldr	w0, [x0]
  432b60:	cmp	w0, #0x22
  432b64:	b.ne	432d0c <wcrtomb@plt+0x2e0ec>  // b.any
  432b68:	ldr	x0, [x20, #56]
  432b6c:	ldr	x1, [x19, #8]
  432b70:	cbnz	x0, 432b1c <wcrtomb@plt+0x2defc>
  432b74:	cmp	x1, #0x0
  432b78:	cbz	x1, 432d04 <wcrtomb@plt+0x2e0e4>
  432b7c:	b.ge	432b2c <wcrtomb@plt+0x2df0c>  // b.tcont
  432b80:	bl	4104a0 <wcrtomb@plt+0xb880>
  432b84:	cmp	x1, x21
  432b88:	b.hi	432be4 <wcrtomb@plt+0x2dfc4>  // b.pmore
  432b8c:	add	x2, x1, #0x1
  432b90:	add	x1, x2, x1, lsr #1
  432b94:	str	x1, [x19, #552]
  432b98:	bl	4501d0 <argp_parse@@Base+0x103f0>
  432b9c:	ldr	x2, [x19, #552]
  432ba0:	mov	x1, x0
  432ba4:	str	x0, [x20, #48]
  432ba8:	mov	w0, w23
  432bac:	bl	404980 <flistxattr@plt>
  432bb0:	mov	x22, x0
  432bb4:	cmn	x0, #0x1
  432bb8:	b.ne	432ac0 <wcrtomb@plt+0x2dea0>  // b.any
  432bbc:	bl	404ad0 <__errno_location@plt>
  432bc0:	ldr	w0, [x0]
  432bc4:	cmp	w0, #0x22
  432bc8:	b.ne	432e44 <wcrtomb@plt+0x2e224>  // b.any
  432bcc:	ldr	x0, [x20, #48]
  432bd0:	ldr	x1, [x19, #552]
  432bd4:	cbnz	x0, 432b84 <wcrtomb@plt+0x2df64>
  432bd8:	cmp	x1, #0x0
  432bdc:	cbz	x1, 432c84 <wcrtomb@plt+0x2e064>
  432be0:	b.ge	432b94 <wcrtomb@plt+0x2df74>  // b.tcont
  432be4:	stp	x27, x28, [sp, #80]
  432be8:	bl	4104a0 <wcrtomb@plt+0xb880>
  432bec:	cmp	x1, x21
  432bf0:	b.hi	432be4 <wcrtomb@plt+0x2dfc4>  // b.pmore
  432bf4:	add	x2, x1, #0x1
  432bf8:	add	x1, x2, x1, lsr #1
  432bfc:	str	x1, [x19, #552]
  432c00:	bl	4501d0 <argp_parse@@Base+0x103f0>
  432c04:	ldr	x2, [x19, #552]
  432c08:	mov	x1, x0
  432c0c:	str	x0, [x20, #48]
  432c10:	mov	x3, x2
  432c14:	mov	w0, w25
  432c18:	mov	x2, x1
  432c1c:	mov	x1, x24
  432c20:	bl	43b698 <wcrtomb@plt+0x36a78>
  432c24:	mov	x22, x0
  432c28:	cmn	x0, #0x1
  432c2c:	b.ne	432ac0 <wcrtomb@plt+0x2dea0>  // b.any
  432c30:	bl	404ad0 <__errno_location@plt>
  432c34:	ldr	w0, [x0]
  432c38:	cmp	w0, #0x22
  432c3c:	b.ne	432e20 <wcrtomb@plt+0x2e200>  // b.any
  432c40:	ldr	x0, [x20, #48]
  432c44:	ldr	x1, [x19, #552]
  432c48:	cbnz	x0, 432bec <wcrtomb@plt+0x2dfcc>
  432c4c:	cmp	x1, #0x0
  432c50:	cbz	x1, 432c7c <wcrtomb@plt+0x2e05c>
  432c54:	b.ge	432bfc <wcrtomb@plt+0x2dfdc>  // b.tcont
  432c58:	stp	x27, x28, [sp, #80]
  432c5c:	b	432be8 <wcrtomb@plt+0x2dfc8>
  432c60:	ldp	x19, x20, [sp, #16]
  432c64:	ldp	x21, x22, [sp, #32]
  432c68:	ldp	x23, x24, [sp, #48]
  432c6c:	ldp	x25, x26, [sp, #64]
  432c70:	ldp	x27, x28, [sp, #80]
  432c74:	ldp	x29, x30, [sp], #128
  432c78:	ret
  432c7c:	mov	x1, #0x80                  	// #128
  432c80:	b	432bfc <wcrtomb@plt+0x2dfdc>
  432c84:	mov	x1, #0x80                  	// #128
  432c88:	b	432b94 <wcrtomb@plt+0x2df74>
  432c8c:	cmp	x1, x26
  432c90:	b.hi	432b80 <wcrtomb@plt+0x2df60>  // b.pmore
  432c94:	add	x2, x1, #0x1
  432c98:	add	x1, x2, x1, lsr #1
  432c9c:	str	x1, [x19, #8]
  432ca0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  432ca4:	mov	x2, x0
  432ca8:	str	x0, [x20, #56]
  432cac:	ldr	x4, [x19, #8]
  432cb0:	mov	x3, x2
  432cb4:	mov	x1, x24
  432cb8:	mov	x2, x21
  432cbc:	mov	w0, w25
  432cc0:	bl	43b188 <wcrtomb@plt+0x36568>
  432cc4:	mov	x27, x0
  432cc8:	cmn	x0, #0x1
  432ccc:	b.ne	432d44 <wcrtomb@plt+0x2e124>  // b.any
  432cd0:	bl	404ad0 <__errno_location@plt>
  432cd4:	ldr	w0, [x0]
  432cd8:	cmp	w0, #0x22
  432cdc:	b.ne	432d0c <wcrtomb@plt+0x2e0ec>  // b.any
  432ce0:	ldr	x0, [x20, #56]
  432ce4:	ldr	x1, [x19, #8]
  432ce8:	cbnz	x0, 432c8c <wcrtomb@plt+0x2e06c>
  432cec:	cmp	x1, #0x0
  432cf0:	cbz	x1, 432cfc <wcrtomb@plt+0x2e0dc>
  432cf4:	b.ge	432c9c <wcrtomb@plt+0x2e07c>  // b.tcont
  432cf8:	bl	4104a0 <wcrtomb@plt+0xb880>
  432cfc:	mov	x1, #0x80                  	// #128
  432d00:	b	432c9c <wcrtomb@plt+0x2e07c>
  432d04:	mov	x1, #0x80                  	// #128
  432d08:	b	432b2c <wcrtomb@plt+0x2df0c>
  432d0c:	cmp	w0, #0x3d
  432d10:	b.eq	432d20 <wcrtomb@plt+0x2e100>  // b.none
  432d14:	ldr	x0, [sp, #120]
  432d18:	mov	x1, x24
  432d1c:	bl	433610 <wcrtomb@plt+0x2e9f0>
  432d20:	ldr	x0, [sp, #96]
  432d24:	sub	x22, x22, x0
  432d28:	add	x27, x0, #0x1
  432d2c:	sub	x22, x22, #0x1
  432d30:	add	x21, x21, x27
  432d34:	cmp	x22, #0x0
  432d38:	b.le	432c60 <wcrtomb@plt+0x2e040>
  432d3c:	ldr	x2, [x20, #56]
  432d40:	b	432b00 <wcrtomb@plt+0x2dee0>
  432d44:	ldr	x0, [x20, #8]
  432d48:	cbnz	x0, 432d6c <wcrtomb@plt+0x2e14c>
  432d4c:	ldr	x0, [x20, #32]
  432d50:	cbnz	x0, 432dac <wcrtomb@plt+0x2e18c>
  432d54:	ldr	x2, [x20, #56]
  432d58:	mov	x3, x27
  432d5c:	ldr	x0, [sp, #112]
  432d60:	mov	x1, x21
  432d64:	bl	416ae8 <wcrtomb@plt+0x11ec8>
  432d68:	b	432d20 <wcrtomb@plt+0x2e100>
  432d6c:	ldr	x0, [x20, #16]
  432d70:	mov	x28, #0x0                   	// #0
  432d74:	cbnz	x0, 432d8c <wcrtomb@plt+0x2e16c>
  432d78:	b	432d20 <wcrtomb@plt+0x2e100>
  432d7c:	ldr	x0, [x20, #16]
  432d80:	add	x28, x28, #0x1
  432d84:	cmp	x28, x0
  432d88:	b.cs	432d20 <wcrtomb@plt+0x2e100>  // b.hs, b.nlast
  432d8c:	ldr	x0, [x20]
  432d90:	mov	x1, x21
  432d94:	mov	w2, #0x0                   	// #0
  432d98:	ldr	x0, [x0, x28, lsl #3]
  432d9c:	bl	4048c0 <fnmatch@plt>
  432da0:	cbnz	w0, 432d7c <wcrtomb@plt+0x2e15c>
  432da4:	ldr	x0, [x20, #32]
  432da8:	cbz	x0, 432d54 <wcrtomb@plt+0x2e134>
  432dac:	ldr	x0, [x20, #40]
  432db0:	cbz	x0, 432d54 <wcrtomb@plt+0x2e134>
  432db4:	mov	x28, #0x0                   	// #0
  432db8:	b	432dcc <wcrtomb@plt+0x2e1ac>
  432dbc:	ldr	x0, [x20, #40]
  432dc0:	add	x28, x28, #0x1
  432dc4:	cmp	x28, x0
  432dc8:	b.cs	432d54 <wcrtomb@plt+0x2e134>  // b.hs, b.nlast
  432dcc:	ldr	x0, [x20, #24]
  432dd0:	mov	x1, x21
  432dd4:	mov	w2, #0x0                   	// #0
  432dd8:	ldr	x0, [x0, x28, lsl #3]
  432ddc:	bl	4048c0 <fnmatch@plt>
  432de0:	cbnz	w0, 432dbc <wcrtomb@plt+0x2e19c>
  432de4:	b	432d20 <wcrtomb@plt+0x2e100>
  432de8:	cmp	x2, #0x0
  432dec:	cbz	x2, 432e94 <wcrtomb@plt+0x2e274>
  432df0:	b.lt	432be4 <wcrtomb@plt+0x2dfc4>  // b.tstop
  432df4:	mov	x1, x2
  432df8:	str	x2, [x19, #552]
  432dfc:	mov	x0, #0x0                   	// #0
  432e00:	bl	4501d0 <argp_parse@@Base+0x103f0>
  432e04:	str	x0, [x20, #48]
  432e08:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  432e0c:	ldr	x2, [x19, #552]
  432e10:	mov	x1, x0
  432e14:	movk	x21, #0x5553
  432e18:	cbz	w23, 432c10 <wcrtomb@plt+0x2dff0>
  432e1c:	b	432aac <wcrtomb@plt+0x2de8c>
  432e20:	mov	x1, x24
  432e24:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432e28:	ldp	x19, x20, [sp, #16]
  432e2c:	add	x0, x0, #0x2b8
  432e30:	ldp	x21, x22, [sp, #32]
  432e34:	ldp	x23, x24, [sp, #48]
  432e38:	ldp	x25, x26, [sp, #64]
  432e3c:	ldp	x29, x30, [sp], #128
  432e40:	b	433610 <wcrtomb@plt+0x2e9f0>
  432e44:	mov	x1, x24
  432e48:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432e4c:	ldp	x19, x20, [sp, #16]
  432e50:	add	x0, x0, #0x2a8
  432e54:	ldp	x21, x22, [sp, #32]
  432e58:	ldp	x23, x24, [sp, #48]
  432e5c:	ldp	x25, x26, [sp, #64]
  432e60:	ldp	x29, x30, [sp], #128
  432e64:	b	433610 <wcrtomb@plt+0x2e9f0>
  432e68:	add	x19, x19, #0x228
  432e6c:	ldr	x1, [x19, #8]
  432e70:	cmp	x1, #0x0
  432e74:	cbz	x1, 432e9c <wcrtomb@plt+0x2e27c>
  432e78:	b.lt	432be4 <wcrtomb@plt+0x2dfc4>  // b.tstop
  432e7c:	mov	x0, #0x0                   	// #0
  432e80:	str	x1, [x19, #8]
  432e84:	bl	4501d0 <argp_parse@@Base+0x103f0>
  432e88:	mov	x2, x0
  432e8c:	str	x0, [x20, #56]
  432e90:	b	432ac8 <wcrtomb@plt+0x2dea8>
  432e94:	mov	x2, #0x80                  	// #128
  432e98:	b	432df4 <wcrtomb@plt+0x2e1d4>
  432e9c:	mov	x1, #0x80                  	// #128
  432ea0:	b	432e7c <wcrtomb@plt+0x2e25c>
  432ea4:	ldp	x19, x20, [sp, #16]
  432ea8:	ldp	x21, x22, [sp, #32]
  432eac:	ldp	x23, x24, [sp, #48]
  432eb0:	ldp	x25, x26, [sp, #64]
  432eb4:	b	432c74 <wcrtomb@plt+0x2e054>
  432eb8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  432ebc:	ldr	w0, [x0, #1112]
  432ec0:	cmp	w0, #0x0
  432ec4:	b.le	432f2c <wcrtomb@plt+0x2e30c>
  432ec8:	stp	x29, x30, [sp, #-32]!
  432ecc:	mov	x29, sp
  432ed0:	str	x19, [sp, #16]
  432ed4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432ed8:	add	x19, x19, #0xda8
  432edc:	ldr	w0, [x19, #64]
  432ee0:	cbnz	w0, 432f18 <wcrtomb@plt+0x2e2f8>
  432ee4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  432ee8:	ldr	x0, [x0, #1136]
  432eec:	cbz	x0, 432ef4 <wcrtomb@plt+0x2e2d4>
  432ef0:	blr	x0
  432ef4:	mov	w2, #0x5                   	// #5
  432ef8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432efc:	mov	x0, #0x0                   	// #0
  432f00:	add	x1, x1, #0x2e8
  432f04:	bl	4049c0 <dcgettext@plt>
  432f08:	mov	x2, x0
  432f0c:	mov	w1, #0x0                   	// #0
  432f10:	mov	w0, #0x0                   	// #0
  432f14:	bl	404050 <error@plt>
  432f18:	mov	w0, #0x1                   	// #1
  432f1c:	str	w0, [x19, #64]
  432f20:	ldr	x19, [sp, #16]
  432f24:	ldp	x29, x30, [sp], #32
  432f28:	ret
  432f2c:	ret
  432f30:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  432f34:	ldr	w0, [x0, #1112]
  432f38:	cmp	w0, #0x0
  432f3c:	b.le	432fa4 <wcrtomb@plt+0x2e384>
  432f40:	stp	x29, x30, [sp, #-32]!
  432f44:	mov	x29, sp
  432f48:	str	x19, [sp, #16]
  432f4c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432f50:	add	x19, x19, #0xda8
  432f54:	ldr	w0, [x19, #68]
  432f58:	cbnz	w0, 432f90 <wcrtomb@plt+0x2e370>
  432f5c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  432f60:	ldr	x0, [x0, #1136]
  432f64:	cbz	x0, 432f6c <wcrtomb@plt+0x2e34c>
  432f68:	blr	x0
  432f6c:	mov	w2, #0x5                   	// #5
  432f70:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  432f74:	mov	x0, #0x0                   	// #0
  432f78:	add	x1, x1, #0x2e8
  432f7c:	bl	4049c0 <dcgettext@plt>
  432f80:	mov	x2, x0
  432f84:	mov	w1, #0x0                   	// #0
  432f88:	mov	w0, #0x0                   	// #0
  432f8c:	bl	404050 <error@plt>
  432f90:	mov	w0, #0x1                   	// #1
  432f94:	str	w0, [x19, #68]
  432f98:	ldr	x19, [sp, #16]
  432f9c:	ldp	x29, x30, [sp], #32
  432fa0:	ret
  432fa4:	ret
  432fa8:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  432fac:	ldr	w4, [x4, #784]
  432fb0:	cmp	w4, #0x0
  432fb4:	b.le	43311c <wcrtomb@plt+0x2e4fc>
  432fb8:	stp	x29, x30, [sp, #-112]!
  432fbc:	mov	x29, sp
  432fc0:	stp	x21, x22, [sp, #32]
  432fc4:	ldr	x22, [x0, #328]
  432fc8:	stp	x27, x28, [sp, #80]
  432fcc:	mov	x28, x0
  432fd0:	cbz	x22, 4330ac <wcrtomb@plt+0x2e48c>
  432fd4:	adrp	x27, 496000 <_obstack_memory_used@@Base+0x44bf0>
  432fd8:	add	x27, x27, #0x1b0
  432fdc:	stp	x23, x24, [sp, #48]
  432fe0:	mov	w24, w3
  432fe4:	and	w23, w2, #0xff
  432fe8:	stp	x25, x26, [sp, #64]
  432fec:	adrp	x26, 493000 <_obstack_memory_used@@Base+0x41bf0>
  432ff0:	mov	x25, x1
  432ff4:	add	x26, x26, #0x898
  432ff8:	mov	x21, #0x0                   	// #0
  432ffc:	stp	x19, x20, [sp, #16]
  433000:	mov	x20, #0x0                   	// #0
  433004:	nop
  433008:	cmp	w23, #0x30
  43300c:	ldr	x0, [x28, #336]
  433010:	ldr	x19, [x0, x20]
  433014:	add	x19, x19, #0xd
  433018:	b.ne	43303c <wcrtomb@plt+0x2e41c>  // b.any
  43301c:	mov	x0, x19
  433020:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433024:	add	x1, x1, #0x330
  433028:	bl	404710 <strcmp@plt>
  43302c:	cmp	w0, #0x0
  433030:	cset	w0, ne  // ne = any
  433034:	cmp	w0, w24
  433038:	b.eq	433090 <wcrtomb@plt+0x2e470>  // b.none
  43303c:	mov	x0, x19
  433040:	bl	4322a0 <wcrtomb@plt+0x2d680>
  433044:	tst	w0, #0xff
  433048:	b.ne	43308c <wcrtomb@plt+0x2e46c>  // b.any
  43304c:	ldr	x1, [x28, #336]
  433050:	add	x1, x1, x20
  433054:	ldr	x3, [x1, #8]
  433058:	cbz	x3, 43308c <wcrtomb@plt+0x2e46c>
  43305c:	ldr	w0, [x26]
  433060:	mov	x2, x19
  433064:	cmp	w23, #0x32
  433068:	mov	w5, #0x0                   	// #0
  43306c:	ldr	x4, [x1, #16]
  433070:	mov	x1, x25
  433074:	b.eq	433120 <wcrtomb@plt+0x2e500>  // b.none
  433078:	bl	43aab8 <wcrtomb@plt+0x35e98>
  43307c:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433080:	add	x22, x3, #0x310
  433084:	cmn	w0, #0x1
  433088:	b.eq	4330bc <wcrtomb@plt+0x2e49c>  // b.none
  43308c:	ldr	x22, [x28, #328]
  433090:	add	x21, x21, #0x1
  433094:	cmp	x21, x22
  433098:	add	x20, x20, #0x18
  43309c:	b.cc	433008 <wcrtomb@plt+0x2e3e8>  // b.lo, b.ul, b.last
  4330a0:	ldp	x19, x20, [sp, #16]
  4330a4:	ldp	x23, x24, [sp, #48]
  4330a8:	ldp	x25, x26, [sp, #64]
  4330ac:	ldp	x21, x22, [sp, #32]
  4330b0:	ldp	x27, x28, [sp, #80]
  4330b4:	ldp	x29, x30, [sp], #112
  4330b8:	ret
  4330bc:	ldr	w0, [x27]
  4330c0:	tbz	w0, #21, 43308c <wcrtomb@plt+0x2e46c>
  4330c4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4330c8:	ldr	x0, [x0, #1136]
  4330cc:	cbz	x0, 4330d4 <wcrtomb@plt+0x2e4b4>
  4330d0:	blr	x0
  4330d4:	bl	404ad0 <__errno_location@plt>
  4330d8:	mov	x3, x0
  4330dc:	mov	w2, #0x5                   	// #5
  4330e0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4330e4:	mov	x0, #0x0                   	// #0
  4330e8:	add	x1, x1, #0x348
  4330ec:	ldr	w7, [x3]
  4330f0:	str	w7, [sp, #108]
  4330f4:	bl	4049c0 <dcgettext@plt>
  4330f8:	mov	x2, x0
  4330fc:	ldr	w7, [sp, #108]
  433100:	mov	x5, x25
  433104:	mov	x4, x19
  433108:	mov	x3, x22
  43310c:	mov	w1, w7
  433110:	mov	w0, #0x0                   	// #0
  433114:	bl	404050 <error@plt>
  433118:	b	43308c <wcrtomb@plt+0x2e46c>
  43311c:	ret
  433120:	bl	43acd8 <wcrtomb@plt+0x360b8>
  433124:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433128:	add	x22, x3, #0x320
  43312c:	b	433084 <wcrtomb@plt+0x2e464>
  433130:	stp	x29, x30, [sp, #-64]!
  433134:	adrp	x2, 497000 <argp_program_version_hook@@Base+0x1e0>
  433138:	mov	x29, sp
  43313c:	stp	x19, x20, [sp, #16]
  433140:	mov	x19, x0
  433144:	ldr	w0, [x2, #772]
  433148:	stp	x21, x22, [sp, #32]
  43314c:	mov	x22, x1
  433150:	cmp	w0, #0x1
  433154:	b.le	433274 <wcrtomb@plt+0x2e654>
  433158:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  43315c:	stp	x23, x24, [sp, #48]
  433160:	adrp	x23, 497000 <argp_program_version_hook@@Base+0x1e0>
  433164:	ldr	w1, [x0, #784]
  433168:	adrp	x24, 497000 <argp_program_version_hook@@Base+0x1e0>
  43316c:	cmp	w1, #0x0
  433170:	b.le	43323c <wcrtomb@plt+0x2e61c>
  433174:	mov	w1, #0x20                  	// #32
  433178:	strh	w1, [x22]
  43317c:	ldr	w0, [x0, #784]
  433180:	cmp	w0, #0x0
  433184:	b.le	433220 <wcrtomb@plt+0x2e600>
  433188:	ldr	x0, [x19, #328]
  43318c:	cbz	x0, 433220 <wcrtomb@plt+0x2e600>
  433190:	mov	x20, #0x0                   	// #0
  433194:	mov	x21, #0x0                   	// #0
  433198:	b	4331a8 <wcrtomb@plt+0x2e588>
  43319c:	ldr	x0, [x19, #328]
  4331a0:	cmp	x0, x21
  4331a4:	b.ls	433220 <wcrtomb@plt+0x2e600>  // b.plast
  4331a8:	ldr	x0, [x19, #336]
  4331ac:	add	x21, x21, #0x1
  4331b0:	ldr	x0, [x0, x20]
  4331b4:	add	x20, x20, #0x18
  4331b8:	add	x0, x0, #0xd
  4331bc:	bl	4322a0 <wcrtomb@plt+0x2d680>
  4331c0:	tst	w0, #0xff
  4331c4:	b.ne	43319c <wcrtomb@plt+0x2e57c>  // b.any
  4331c8:	mov	w0, #0x2a                  	// #42
  4331cc:	strb	w0, [x22]
  4331d0:	ldr	w0, [x23, #1112]
  4331d4:	cmp	w0, #0x0
  4331d8:	b.le	4331f0 <wcrtomb@plt+0x2e5d0>
  4331dc:	nop
  4331e0:	ldr	x0, [x19, #48]
  4331e4:	cbz	x0, 4331f0 <wcrtomb@plt+0x2e5d0>
  4331e8:	mov	w0, #0x2e                  	// #46
  4331ec:	strb	w0, [x22]
  4331f0:	ldr	w0, [x24, #1024]
  4331f4:	cmp	w0, #0x0
  4331f8:	b.le	43320c <wcrtomb@plt+0x2e5ec>
  4331fc:	ldr	x0, [x19, #64]
  433200:	cbnz	x0, 433258 <wcrtomb@plt+0x2e638>
  433204:	ldr	x0, [x19, #80]
  433208:	cbnz	x0, 433258 <wcrtomb@plt+0x2e638>
  43320c:	ldp	x19, x20, [sp, #16]
  433210:	ldp	x21, x22, [sp, #32]
  433214:	ldp	x23, x24, [sp, #48]
  433218:	ldp	x29, x30, [sp], #64
  43321c:	ret
  433220:	ldr	w0, [x23, #1112]
  433224:	cmp	w0, #0x0
  433228:	b.gt	4331e0 <wcrtomb@plt+0x2e5c0>
  43322c:	ldr	w0, [x24, #1024]
  433230:	cmp	w0, #0x0
  433234:	b.gt	4331fc <wcrtomb@plt+0x2e5dc>
  433238:	b	43320c <wcrtomb@plt+0x2e5ec>
  43323c:	ldr	w1, [x23, #1112]
  433240:	cmp	w1, #0x0
  433244:	b.gt	433174 <wcrtomb@plt+0x2e554>
  433248:	ldr	w1, [x24, #1024]
  43324c:	cmp	w1, #0x0
  433250:	b.gt	433174 <wcrtomb@plt+0x2e554>
  433254:	b	4331f0 <wcrtomb@plt+0x2e5d0>
  433258:	mov	w0, #0x2b                  	// #43
  43325c:	strb	w0, [x22]
  433260:	ldp	x19, x20, [sp, #16]
  433264:	ldp	x21, x22, [sp, #32]
  433268:	ldp	x23, x24, [sp, #48]
  43326c:	ldp	x29, x30, [sp], #64
  433270:	ret
  433274:	strb	wzr, [x1]
  433278:	ldp	x19, x20, [sp, #16]
  43327c:	ldp	x21, x22, [sp, #32]
  433280:	ldp	x29, x30, [sp], #64
  433284:	ret
  433288:	stp	x29, x30, [sp, #-64]!
  43328c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433290:	mov	x29, sp
  433294:	stp	x19, x20, [sp, #16]
  433298:	mov	x19, x0
  43329c:	ldr	w0, [x1, #772]
  4332a0:	cmp	w0, #0x2
  4332a4:	b.le	4333c0 <wcrtomb@plt+0x2e7a0>
  4332a8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4332ac:	ldr	w0, [x0, #1112]
  4332b0:	cmp	w0, #0x0
  4332b4:	b.le	4332d8 <wcrtomb@plt+0x2e6b8>
  4332b8:	ldr	x3, [x19, #48]
  4332bc:	cbz	x3, 4332d8 <wcrtomb@plt+0x2e6b8>
  4332c0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4332c4:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4332c8:	mov	w1, #0x1                   	// #1
  4332cc:	add	x2, x2, #0x380
  4332d0:	ldr	x0, [x0, #4056]
  4332d4:	bl	404700 <__fprintf_chk@plt>
  4332d8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4332dc:	ldr	w0, [x0, #1024]
  4332e0:	cmp	w0, #0x0
  4332e4:	b.le	433350 <wcrtomb@plt+0x2e730>
  4332e8:	ldr	x0, [x19, #64]
  4332ec:	cbnz	x0, 4332f8 <wcrtomb@plt+0x2e6d8>
  4332f0:	ldr	x0, [x19, #80]
  4332f4:	cbz	x0, 433350 <wcrtomb@plt+0x2e730>
  4332f8:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4332fc:	mov	x2, #0x5                   	// #5
  433300:	mov	x1, #0x1                   	// #1
  433304:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433308:	ldr	x3, [x20, #4056]
  43330c:	add	x0, x0, #0x390
  433310:	bl	4048b0 <fwrite@plt>
  433314:	ldp	x1, x2, [x19, #56]
  433318:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  43331c:	add	x0, x0, #0x7e8
  433320:	bl	432390 <wcrtomb@plt+0x2d770>
  433324:	ldr	x0, [x19, #64]
  433328:	ldr	x2, [x19, #80]
  43332c:	cbz	x0, 433334 <wcrtomb@plt+0x2e714>
  433330:	cbnz	x2, 433404 <wcrtomb@plt+0x2e7e4>
  433334:	ldr	x1, [x19, #72]
  433338:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43333c:	add	x0, x0, #0x398
  433340:	bl	432390 <wcrtomb@plt+0x2d770>
  433344:	ldr	x1, [x20, #4056]
  433348:	mov	w0, #0xa                   	// #10
  43334c:	bl	404170 <fputc@plt>
  433350:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  433354:	ldr	w0, [x0, #784]
  433358:	cmp	w0, #0x0
  43335c:	b.le	4333c0 <wcrtomb@plt+0x2e7a0>
  433360:	ldr	x0, [x19, #328]
  433364:	cbz	x0, 4333c0 <wcrtomb@plt+0x2e7a0>
  433368:	stp	x23, x24, [sp, #48]
  43336c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433370:	add	x23, x23, #0x3a8
  433374:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433378:	stp	x21, x22, [sp, #32]
  43337c:	mov	x21, #0x0                   	// #0
  433380:	mov	x22, #0x0                   	// #0
  433384:	nop
  433388:	ldr	x0, [x19, #336]
  43338c:	ldr	x20, [x0, x21]
  433390:	add	x20, x20, #0xd
  433394:	mov	x0, x20
  433398:	bl	4322a0 <wcrtomb@plt+0x2d680>
  43339c:	tst	w0, #0xff
  4333a0:	b.eq	4333cc <wcrtomb@plt+0x2e7ac>  // b.none
  4333a4:	ldr	x0, [x19, #328]
  4333a8:	add	x22, x22, #0x1
  4333ac:	add	x21, x21, #0x18
  4333b0:	cmp	x0, x22
  4333b4:	b.hi	433388 <wcrtomb@plt+0x2e768>  // b.pmore
  4333b8:	ldp	x21, x22, [sp, #32]
  4333bc:	ldp	x23, x24, [sp, #48]
  4333c0:	ldp	x19, x20, [sp, #16]
  4333c4:	ldp	x29, x30, [sp], #64
  4333c8:	ret
  4333cc:	ldr	x3, [x19, #336]
  4333d0:	mov	x4, x20
  4333d4:	ldr	x0, [x24, #4056]
  4333d8:	add	x3, x3, x21
  4333dc:	mov	x2, x23
  4333e0:	mov	w1, #0x1                   	// #1
  4333e4:	add	x22, x22, #0x1
  4333e8:	add	x21, x21, #0x18
  4333ec:	ldr	x3, [x3, #16]
  4333f0:	bl	404700 <__fprintf_chk@plt>
  4333f4:	ldr	x0, [x19, #328]
  4333f8:	cmp	x22, x0
  4333fc:	b.cc	433388 <wcrtomb@plt+0x2e768>  // b.lo, b.ul, b.last
  433400:	b	4333b8 <wcrtomb@plt+0x2e798>
  433404:	ldr	x1, [x20, #4056]
  433408:	mov	w0, #0x2c                  	// #44
  43340c:	bl	404170 <fputc@plt>
  433410:	ldr	x2, [x19, #80]
  433414:	b	433334 <wcrtomb@plt+0x2e714>
  433418:	tst	x0, #0x100
  43341c:	mov	w4, #0x2d                  	// #45
  433420:	mov	w3, #0x72                  	// #114
  433424:	csel	w3, w3, w4, ne  // ne = any
  433428:	tst	x0, #0x80
  43342c:	mov	w2, #0x77                  	// #119
  433430:	csel	w2, w2, w4, ne  // ne = any
  433434:	strb	w3, [x1]
  433438:	strb	w2, [x1, #1]
  43343c:	and	w2, w0, #0x40
  433440:	tbz	w0, #11, 4334e0 <wcrtomb@plt+0x2e8c0>
  433444:	cmp	w2, #0x0
  433448:	mov	w5, #0x73                  	// #115
  43344c:	mov	w2, #0x53                  	// #83
  433450:	csel	w5, w5, w2, ne  // ne = any
  433454:	tst	x0, #0x20
  433458:	mov	w6, #0x2d                  	// #45
  43345c:	mov	w3, #0x72                  	// #114
  433460:	csel	w3, w3, w6, ne  // ne = any
  433464:	tst	x0, #0x10
  433468:	mov	w2, #0x77                  	// #119
  43346c:	csel	w2, w2, w6, ne  // ne = any
  433470:	strb	w5, [x1, #2]
  433474:	strb	w3, [x1, #3]
  433478:	and	w3, w0, #0x8
  43347c:	strb	w2, [x1, #4]
  433480:	tbz	w0, #10, 433508 <wcrtomb@plt+0x2e8e8>
  433484:	cmp	w3, #0x0
  433488:	mov	w4, #0x73                  	// #115
  43348c:	mov	w2, #0x53                  	// #83
  433490:	csel	w4, w4, w2, ne  // ne = any
  433494:	tst	x0, #0x4
  433498:	mov	w5, #0x2d                  	// #45
  43349c:	mov	w3, #0x72                  	// #114
  4334a0:	csel	w3, w3, w5, ne  // ne = any
  4334a4:	tst	x0, #0x2
  4334a8:	mov	w2, #0x77                  	// #119
  4334ac:	csel	w2, w2, w5, ne  // ne = any
  4334b0:	strb	w4, [x1, #5]
  4334b4:	strb	w3, [x1, #6]
  4334b8:	and	w3, w0, #0x1
  4334bc:	strb	w2, [x1, #7]
  4334c0:	tbz	w0, #9, 4334f0 <wcrtomb@plt+0x2e8d0>
  4334c4:	cmp	w3, #0x0
  4334c8:	mov	w2, #0x54                  	// #84
  4334cc:	mov	w0, #0x74                  	// #116
  4334d0:	csel	w0, w0, w2, ne  // ne = any
  4334d4:	strb	w0, [x1, #8]
  4334d8:	strb	wzr, [x1, #9]
  4334dc:	ret
  4334e0:	cmp	w2, #0x0
  4334e4:	mov	w5, #0x78                  	// #120
  4334e8:	csel	w5, w5, w4, ne  // ne = any
  4334ec:	b	433454 <wcrtomb@plt+0x2e834>
  4334f0:	cmp	w3, #0x0
  4334f4:	mov	w0, #0x78                  	// #120
  4334f8:	csel	w0, w0, w5, ne  // ne = any
  4334fc:	strb	w0, [x1, #8]
  433500:	strb	wzr, [x1, #9]
  433504:	ret
  433508:	cmp	w3, #0x0
  43350c:	mov	w4, #0x78                  	// #120
  433510:	csel	w4, w4, w6, ne  // ne = any
  433514:	b	433494 <wcrtomb@plt+0x2e874>
  433518:	stp	x29, x30, [sp, #-48]!
  43351c:	mov	x29, sp
  433520:	stp	x19, x20, [sp, #16]
  433524:	mov	x20, x0
  433528:	stp	x21, x22, [sp, #32]
  43352c:	mov	x21, x1
  433530:	bl	404ad0 <__errno_location@plt>
  433534:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433538:	ldr	w22, [x0]
  43353c:	ldr	x1, [x1, #1136]
  433540:	cbz	x1, 433548 <wcrtomb@plt+0x2e928>
  433544:	blr	x1
  433548:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43354c:	add	x1, x1, #0x3b8
  433550:	mov	w2, #0x5                   	// #5
  433554:	mov	x0, #0x0                   	// #0
  433558:	bl	4049c0 <dcgettext@plt>
  43355c:	mov	x19, x0
  433560:	mov	x0, x21
  433564:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433568:	mov	x4, x20
  43356c:	mov	x3, x0
  433570:	mov	x2, x19
  433574:	mov	w1, w22
  433578:	mov	w0, #0x0                   	// #0
  43357c:	bl	404050 <error@plt>
  433580:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433584:	mov	w1, #0x2                   	// #2
  433588:	ldp	x19, x20, [sp, #16]
  43358c:	str	w1, [x0, #3568]
  433590:	ldp	x21, x22, [sp, #32]
  433594:	ldp	x29, x30, [sp], #48
  433598:	ret
  43359c:	nop
  4335a0:	stp	x29, x30, [sp, #-48]!
  4335a4:	mov	x29, sp
  4335a8:	stp	x19, x20, [sp, #16]
  4335ac:	mov	x20, x0
  4335b0:	stp	x21, x22, [sp, #32]
  4335b4:	mov	x21, x1
  4335b8:	bl	404ad0 <__errno_location@plt>
  4335bc:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4335c0:	ldr	w22, [x0]
  4335c4:	ldr	x1, [x1, #1136]
  4335c8:	cbz	x1, 4335d0 <wcrtomb@plt+0x2e9b0>
  4335cc:	blr	x1
  4335d0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4335d4:	add	x1, x1, #0x3b8
  4335d8:	mov	w2, #0x5                   	// #5
  4335dc:	mov	x0, #0x0                   	// #0
  4335e0:	bl	4049c0 <dcgettext@plt>
  4335e4:	mov	x19, x0
  4335e8:	mov	x0, x21
  4335ec:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4335f0:	mov	x4, x20
  4335f4:	mov	x3, x0
  4335f8:	mov	x2, x19
  4335fc:	mov	w1, w22
  433600:	mov	w0, #0x0                   	// #0
  433604:	bl	404050 <error@plt>
  433608:	bl	410460 <wcrtomb@plt+0xb840>
  43360c:	nop
  433610:	stp	x29, x30, [sp, #-48]!
  433614:	mov	x29, sp
  433618:	stp	x19, x20, [sp, #16]
  43361c:	mov	x20, x0
  433620:	stp	x21, x22, [sp, #32]
  433624:	mov	x21, x1
  433628:	bl	404ad0 <__errno_location@plt>
  43362c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433630:	ldr	w22, [x0]
  433634:	ldr	x1, [x1, #1136]
  433638:	cbz	x1, 433640 <wcrtomb@plt+0x2ea20>
  43363c:	blr	x1
  433640:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433644:	add	x1, x1, #0x3c8
  433648:	mov	w2, #0x5                   	// #5
  43364c:	mov	x0, #0x0                   	// #0
  433650:	bl	4049c0 <dcgettext@plt>
  433654:	mov	x19, x0
  433658:	mov	x0, x21
  43365c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433660:	mov	x4, x20
  433664:	mov	x2, x19
  433668:	mov	w1, w22
  43366c:	mov	x3, x0
  433670:	ldp	x19, x20, [sp, #16]
  433674:	mov	w0, #0x0                   	// #0
  433678:	ldp	x21, x22, [sp, #32]
  43367c:	ldp	x29, x30, [sp], #48
  433680:	b	404050 <error@plt>
  433684:	nop
  433688:	stp	x29, x30, [sp, #-64]!
  43368c:	mov	x29, sp
  433690:	stp	x19, x20, [sp, #16]
  433694:	mov	w19, w1
  433698:	mov	x20, x0
  43369c:	str	x21, [sp, #32]
  4336a0:	bl	404ad0 <__errno_location@plt>
  4336a4:	mov	x2, x0
  4336a8:	add	x1, sp, #0x30
  4336ac:	mov	w0, w19
  4336b0:	ldr	w21, [x2]
  4336b4:	bl	433418 <wcrtomb@plt+0x2e7f8>
  4336b8:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  4336bc:	ldr	x0, [x0, #1136]
  4336c0:	cbz	x0, 4336c8 <wcrtomb@plt+0x2eaa8>
  4336c4:	blr	x0
  4336c8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4336cc:	add	x1, x1, #0x3e0
  4336d0:	mov	w2, #0x5                   	// #5
  4336d4:	mov	x0, #0x0                   	// #0
  4336d8:	bl	4049c0 <dcgettext@plt>
  4336dc:	mov	x19, x0
  4336e0:	mov	x0, x20
  4336e4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4336e8:	add	x4, sp, #0x30
  4336ec:	mov	x3, x0
  4336f0:	mov	x2, x19
  4336f4:	mov	w1, w21
  4336f8:	mov	w0, #0x0                   	// #0
  4336fc:	bl	404050 <error@plt>
  433700:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433704:	mov	w1, #0x2                   	// #2
  433708:	ldp	x19, x20, [sp, #16]
  43370c:	str	w1, [x0, #3568]
  433710:	ldr	x21, [sp, #32]
  433714:	ldp	x29, x30, [sp], #64
  433718:	ret
  43371c:	nop
  433720:	stp	x29, x30, [sp, #-64]!
  433724:	mov	x29, sp
  433728:	stp	x19, x20, [sp, #16]
  43372c:	mov	w19, w1
  433730:	mov	w20, w2
  433734:	stp	x21, x22, [sp, #32]
  433738:	mov	x22, x0
  43373c:	str	x23, [sp, #48]
  433740:	bl	404ad0 <__errno_location@plt>
  433744:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433748:	ldr	w23, [x0]
  43374c:	ldr	x1, [x1, #1136]
  433750:	cbz	x1, 433758 <wcrtomb@plt+0x2eb38>
  433754:	blr	x1
  433758:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43375c:	add	x1, x1, #0x400
  433760:	mov	w2, #0x5                   	// #5
  433764:	mov	x0, #0x0                   	// #0
  433768:	bl	4049c0 <dcgettext@plt>
  43376c:	mov	x21, x0
  433770:	mov	x0, x22
  433774:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433778:	mov	x2, x21
  43377c:	mov	x3, x0
  433780:	mov	w5, w20
  433784:	mov	w4, w19
  433788:	mov	w1, w23
  43378c:	mov	w0, #0x0                   	// #0
  433790:	bl	404050 <error@plt>
  433794:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433798:	mov	w1, #0x2                   	// #2
  43379c:	ldp	x19, x20, [sp, #16]
  4337a0:	str	w1, [x0, #3568]
  4337a4:	ldp	x21, x22, [sp, #32]
  4337a8:	ldr	x23, [sp, #48]
  4337ac:	ldp	x29, x30, [sp], #64
  4337b0:	ret
  4337b4:	nop
  4337b8:	stp	x29, x30, [sp, #-48]!
  4337bc:	mov	x29, sp
  4337c0:	stp	x19, x20, [sp, #16]
  4337c4:	mov	x20, x0
  4337c8:	str	x21, [sp, #32]
  4337cc:	bl	404ad0 <__errno_location@plt>
  4337d0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4337d4:	ldr	w21, [x0]
  4337d8:	ldr	x1, [x1, #1136]
  4337dc:	cbz	x1, 4337e4 <wcrtomb@plt+0x2ebc4>
  4337e0:	blr	x1
  4337e4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4337e8:	add	x1, x1, #0x3b8
  4337ec:	mov	w2, #0x5                   	// #5
  4337f0:	mov	x0, #0x0                   	// #0
  4337f4:	bl	4049c0 <dcgettext@plt>
  4337f8:	mov	x19, x0
  4337fc:	mov	x0, x20
  433800:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433804:	mov	x2, x19
  433808:	mov	x3, x0
  43380c:	mov	w1, w21
  433810:	mov	w0, #0x0                   	// #0
  433814:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433818:	add	x4, x4, #0x430
  43381c:	bl	404050 <error@plt>
  433820:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433824:	mov	w1, #0x2                   	// #2
  433828:	ldp	x19, x20, [sp, #16]
  43382c:	str	w1, [x0, #3568]
  433830:	ldr	x21, [sp, #32]
  433834:	ldp	x29, x30, [sp], #48
  433838:	ret
  43383c:	nop
  433840:	stp	x29, x30, [sp, #-48]!
  433844:	mov	x29, sp
  433848:	stp	x19, x20, [sp, #16]
  43384c:	mov	x20, x0
  433850:	str	x21, [sp, #32]
  433854:	bl	404ad0 <__errno_location@plt>
  433858:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43385c:	ldr	w21, [x0]
  433860:	ldr	x1, [x1, #1136]
  433864:	cbz	x1, 43386c <wcrtomb@plt+0x2ec4c>
  433868:	blr	x1
  43386c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433870:	add	x1, x1, #0x3c8
  433874:	mov	w2, #0x5                   	// #5
  433878:	mov	x0, #0x0                   	// #0
  43387c:	bl	4049c0 <dcgettext@plt>
  433880:	mov	x19, x0
  433884:	mov	x0, x20
  433888:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43388c:	mov	x2, x19
  433890:	mov	w1, w21
  433894:	ldp	x19, x20, [sp, #16]
  433898:	mov	x3, x0
  43389c:	ldr	x21, [sp, #32]
  4338a0:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4338a4:	ldp	x29, x30, [sp], #48
  4338a8:	add	x4, x4, #0x430
  4338ac:	mov	w0, #0x0                   	// #0
  4338b0:	b	404050 <error@plt>
  4338b4:	nop
  4338b8:	stp	x29, x30, [sp, #-16]!
  4338bc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4338c0:	mov	x1, x0
  4338c4:	mov	x29, sp
  4338c8:	add	x0, x2, #0x438
  4338cc:	bl	4335a0 <wcrtomb@plt+0x2e980>
  4338d0:	stp	x29, x30, [sp, #-48]!
  4338d4:	mov	x29, sp
  4338d8:	stp	x19, x20, [sp, #16]
  4338dc:	mov	x20, x1
  4338e0:	stp	x21, x22, [sp, #32]
  4338e4:	mov	x21, x0
  4338e8:	bl	404ad0 <__errno_location@plt>
  4338ec:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4338f0:	ldr	w22, [x0]
  4338f4:	ldr	x1, [x1, #1136]
  4338f8:	cbz	x1, 433900 <wcrtomb@plt+0x2ece0>
  4338fc:	blr	x1
  433900:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433904:	add	x1, x1, #0x440
  433908:	mov	w2, #0x5                   	// #5
  43390c:	mov	x0, #0x0                   	// #0
  433910:	bl	4049c0 <dcgettext@plt>
  433914:	mov	x19, x0
  433918:	mov	x0, x20
  43391c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433920:	mov	x1, x21
  433924:	mov	x20, x0
  433928:	mov	w0, #0x1                   	// #1
  43392c:	bl	44ed50 <argp_parse@@Base+0xef70>
  433930:	mov	x3, x20
  433934:	mov	x4, x0
  433938:	mov	x2, x19
  43393c:	mov	w1, w22
  433940:	mov	w0, #0x0                   	// #0
  433944:	bl	404050 <error@plt>
  433948:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43394c:	mov	w1, #0x2                   	// #2
  433950:	ldp	x19, x20, [sp, #16]
  433954:	str	w1, [x0, #3568]
  433958:	ldp	x21, x22, [sp, #32]
  43395c:	ldp	x29, x30, [sp], #48
  433960:	ret
  433964:	nop
  433968:	stp	x29, x30, [sp, #-48]!
  43396c:	mov	x29, sp
  433970:	stp	x19, x20, [sp, #16]
  433974:	mov	x20, x0
  433978:	str	x21, [sp, #32]
  43397c:	bl	404ad0 <__errno_location@plt>
  433980:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433984:	ldr	w21, [x0]
  433988:	ldr	x1, [x1, #1136]
  43398c:	cbz	x1, 433994 <wcrtomb@plt+0x2ed74>
  433990:	blr	x1
  433994:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433998:	add	x1, x1, #0x3b8
  43399c:	mov	w2, #0x5                   	// #5
  4339a0:	mov	x0, #0x0                   	// #0
  4339a4:	bl	4049c0 <dcgettext@plt>
  4339a8:	mov	x19, x0
  4339ac:	mov	x0, x20
  4339b0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4339b4:	mov	x2, x19
  4339b8:	mov	x3, x0
  4339bc:	mov	w1, w21
  4339c0:	mov	w0, #0x0                   	// #0
  4339c4:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4339c8:	add	x4, x4, #0x460
  4339cc:	bl	404050 <error@plt>
  4339d0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4339d4:	mov	w1, #0x2                   	// #2
  4339d8:	ldp	x19, x20, [sp, #16]
  4339dc:	str	w1, [x0, #3568]
  4339e0:	ldr	x21, [sp, #32]
  4339e4:	ldp	x29, x30, [sp], #48
  4339e8:	ret
  4339ec:	nop
  4339f0:	stp	x29, x30, [sp, #-48]!
  4339f4:	mov	x29, sp
  4339f8:	stp	x19, x20, [sp, #16]
  4339fc:	mov	x20, x0
  433a00:	str	x21, [sp, #32]
  433a04:	bl	404ad0 <__errno_location@plt>
  433a08:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433a0c:	ldr	w21, [x0]
  433a10:	ldr	x1, [x1, #1136]
  433a14:	cbz	x1, 433a1c <wcrtomb@plt+0x2edfc>
  433a18:	blr	x1
  433a1c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433a20:	add	x1, x1, #0x3b8
  433a24:	mov	w2, #0x5                   	// #5
  433a28:	mov	x0, #0x0                   	// #0
  433a2c:	bl	4049c0 <dcgettext@plt>
  433a30:	mov	x19, x0
  433a34:	mov	x0, x20
  433a38:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433a3c:	mov	x2, x19
  433a40:	mov	x3, x0
  433a44:	mov	w1, w21
  433a48:	mov	w0, #0x0                   	// #0
  433a4c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433a50:	add	x4, x4, #0x468
  433a54:	bl	404050 <error@plt>
  433a58:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433a5c:	mov	w1, #0x2                   	// #2
  433a60:	ldp	x19, x20, [sp, #16]
  433a64:	str	w1, [x0, #3568]
  433a68:	ldr	x21, [sp, #32]
  433a6c:	ldp	x29, x30, [sp], #48
  433a70:	ret
  433a74:	nop
  433a78:	stp	x29, x30, [sp, #-48]!
  433a7c:	mov	x29, sp
  433a80:	stp	x19, x20, [sp, #16]
  433a84:	mov	x20, x0
  433a88:	str	x21, [sp, #32]
  433a8c:	bl	404ad0 <__errno_location@plt>
  433a90:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433a94:	ldr	w21, [x0]
  433a98:	ldr	x1, [x1, #1136]
  433a9c:	cbz	x1, 433aa4 <wcrtomb@plt+0x2ee84>
  433aa0:	blr	x1
  433aa4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433aa8:	add	x1, x1, #0x3b8
  433aac:	mov	w2, #0x5                   	// #5
  433ab0:	mov	x0, #0x0                   	// #0
  433ab4:	bl	4049c0 <dcgettext@plt>
  433ab8:	mov	x19, x0
  433abc:	mov	x0, x20
  433ac0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433ac4:	mov	x2, x19
  433ac8:	mov	x3, x0
  433acc:	mov	w1, w21
  433ad0:	mov	w0, #0x0                   	// #0
  433ad4:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433ad8:	add	x4, x4, #0x470
  433adc:	bl	404050 <error@plt>
  433ae0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433ae4:	mov	w1, #0x2                   	// #2
  433ae8:	ldp	x19, x20, [sp, #16]
  433aec:	str	w1, [x0, #3568]
  433af0:	ldr	x21, [sp, #32]
  433af4:	ldp	x29, x30, [sp], #48
  433af8:	ret
  433afc:	nop
  433b00:	stp	x29, x30, [sp, #-48]!
  433b04:	mov	x29, sp
  433b08:	stp	x19, x20, [sp, #16]
  433b0c:	mov	x20, x0
  433b10:	str	x21, [sp, #32]
  433b14:	bl	404ad0 <__errno_location@plt>
  433b18:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433b1c:	ldr	w21, [x0]
  433b20:	ldr	x1, [x1, #1136]
  433b24:	cbz	x1, 433b2c <wcrtomb@plt+0x2ef0c>
  433b28:	blr	x1
  433b2c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433b30:	add	x1, x1, #0x3b8
  433b34:	mov	w2, #0x5                   	// #5
  433b38:	mov	x0, #0x0                   	// #0
  433b3c:	bl	4049c0 <dcgettext@plt>
  433b40:	mov	x19, x0
  433b44:	mov	x0, x20
  433b48:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433b4c:	mov	x2, x19
  433b50:	mov	x3, x0
  433b54:	mov	w1, w21
  433b58:	mov	w0, #0x0                   	// #0
  433b5c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433b60:	add	x4, x4, #0x478
  433b64:	bl	404050 <error@plt>
  433b68:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433b6c:	mov	w1, #0x2                   	// #2
  433b70:	ldp	x19, x20, [sp, #16]
  433b74:	str	w1, [x0, #3568]
  433b78:	ldr	x21, [sp, #32]
  433b7c:	ldp	x29, x30, [sp], #48
  433b80:	ret
  433b84:	nop
  433b88:	stp	x29, x30, [sp, #-16]!
  433b8c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433b90:	mov	x1, x0
  433b94:	mov	x29, sp
  433b98:	add	x0, x2, #0x478
  433b9c:	bl	4335a0 <wcrtomb@plt+0x2e980>
  433ba0:	stp	x29, x30, [sp, #-48]!
  433ba4:	mov	x29, sp
  433ba8:	stp	x19, x20, [sp, #16]
  433bac:	mov	x20, x0
  433bb0:	str	x21, [sp, #32]
  433bb4:	bl	404ad0 <__errno_location@plt>
  433bb8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433bbc:	ldr	w21, [x0]
  433bc0:	ldr	x1, [x1, #1136]
  433bc4:	cbz	x1, 433bcc <wcrtomb@plt+0x2efac>
  433bc8:	blr	x1
  433bcc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433bd0:	add	x1, x1, #0x3c8
  433bd4:	mov	w2, #0x5                   	// #5
  433bd8:	mov	x0, #0x0                   	// #0
  433bdc:	bl	4049c0 <dcgettext@plt>
  433be0:	mov	x19, x0
  433be4:	mov	x0, x20
  433be8:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433bec:	mov	x2, x19
  433bf0:	mov	w1, w21
  433bf4:	ldp	x19, x20, [sp, #16]
  433bf8:	mov	x3, x0
  433bfc:	ldr	x21, [sp, #32]
  433c00:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433c04:	ldp	x29, x30, [sp], #48
  433c08:	add	x4, x4, #0x478
  433c0c:	mov	w0, #0x0                   	// #0
  433c10:	b	404050 <error@plt>
  433c14:	nop
  433c18:	stp	x29, x30, [sp, #-48]!
  433c1c:	mov	x29, sp
  433c20:	stp	x19, x20, [sp, #16]
  433c24:	mov	x20, x0
  433c28:	str	x21, [sp, #32]
  433c2c:	bl	404ad0 <__errno_location@plt>
  433c30:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433c34:	ldr	w21, [x0]
  433c38:	ldr	x1, [x1, #1136]
  433c3c:	cbz	x1, 433c44 <wcrtomb@plt+0x2f024>
  433c40:	blr	x1
  433c44:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433c48:	add	x1, x1, #0x3b8
  433c4c:	mov	w2, #0x5                   	// #5
  433c50:	mov	x0, #0x0                   	// #0
  433c54:	bl	4049c0 <dcgettext@plt>
  433c58:	mov	x19, x0
  433c5c:	mov	x0, x20
  433c60:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433c64:	mov	x2, x19
  433c68:	mov	x3, x0
  433c6c:	mov	w1, w21
  433c70:	mov	w0, #0x0                   	// #0
  433c74:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x16bf0>
  433c78:	add	x4, x4, #0x250
  433c7c:	bl	404050 <error@plt>
  433c80:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433c84:	mov	w1, #0x2                   	// #2
  433c88:	ldp	x19, x20, [sp, #16]
  433c8c:	str	w1, [x0, #3568]
  433c90:	ldr	x21, [sp, #32]
  433c94:	ldp	x29, x30, [sp], #48
  433c98:	ret
  433c9c:	nop
  433ca0:	stp	x29, x30, [sp, #-96]!
  433ca4:	mov	x29, sp
  433ca8:	stp	x19, x20, [sp, #16]
  433cac:	mov	x19, x2
  433cb0:	stp	x21, x22, [sp, #32]
  433cb4:	mov	x22, x1
  433cb8:	mov	x21, x0
  433cbc:	str	x23, [sp, #48]
  433cc0:	bl	404ad0 <__errno_location@plt>
  433cc4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433cc8:	ldr	w23, [x0]
  433ccc:	ldr	x1, [x1, #1136]
  433cd0:	cbz	x1, 433cd8 <wcrtomb@plt+0x2f0b8>
  433cd4:	blr	x1
  433cd8:	mov	x3, x19
  433cdc:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433ce0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433ce4:	add	x2, x2, #0x480
  433ce8:	add	x1, x1, #0x4b8
  433cec:	mov	w4, #0x5                   	// #5
  433cf0:	mov	x0, #0x0                   	// #0
  433cf4:	bl	4048f0 <dcngettext@plt>
  433cf8:	mov	x20, x0
  433cfc:	mov	x0, x21
  433d00:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433d04:	mov	x21, x0
  433d08:	add	x1, sp, #0x48
  433d0c:	mov	x0, x22
  433d10:	bl	446868 <argp_parse@@Base+0x6a88>
  433d14:	mov	x4, x0
  433d18:	mov	x5, x19
  433d1c:	mov	x3, x21
  433d20:	mov	x2, x20
  433d24:	mov	w1, w23
  433d28:	mov	w0, #0x0                   	// #0
  433d2c:	bl	404050 <error@plt>
  433d30:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433d34:	mov	w1, #0x2                   	// #2
  433d38:	ldp	x19, x20, [sp, #16]
  433d3c:	str	w1, [x0, #3568]
  433d40:	ldp	x21, x22, [sp, #32]
  433d44:	ldr	x23, [sp, #48]
  433d48:	ldp	x29, x30, [sp], #96
  433d4c:	ret
  433d50:	stp	x29, x30, [sp, #-96]!
  433d54:	mov	x29, sp
  433d58:	stp	x19, x20, [sp, #16]
  433d5c:	mov	x19, x2
  433d60:	stp	x21, x22, [sp, #32]
  433d64:	mov	x22, x1
  433d68:	mov	x21, x0
  433d6c:	str	x23, [sp, #48]
  433d70:	bl	404ad0 <__errno_location@plt>
  433d74:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433d78:	ldr	w23, [x0]
  433d7c:	ldr	x1, [x1, #1136]
  433d80:	cbz	x1, 433d88 <wcrtomb@plt+0x2f168>
  433d84:	blr	x1
  433d88:	mov	x3, x19
  433d8c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433d90:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433d94:	add	x2, x2, #0x4f0
  433d98:	add	x1, x1, #0x530
  433d9c:	mov	w4, #0x5                   	// #5
  433da0:	mov	x0, #0x0                   	// #0
  433da4:	bl	4048f0 <dcngettext@plt>
  433da8:	mov	x20, x0
  433dac:	mov	x0, x21
  433db0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433db4:	mov	x21, x0
  433db8:	add	x1, sp, #0x48
  433dbc:	mov	x0, x22
  433dc0:	bl	446868 <argp_parse@@Base+0x6a88>
  433dc4:	mov	x4, x0
  433dc8:	mov	x5, x19
  433dcc:	mov	x3, x21
  433dd0:	mov	x2, x20
  433dd4:	mov	w1, w23
  433dd8:	mov	w0, #0x0                   	// #0
  433ddc:	bl	404050 <error@plt>
  433de0:	ldp	x19, x20, [sp, #16]
  433de4:	ldp	x21, x22, [sp, #32]
  433de8:	ldr	x23, [sp, #48]
  433dec:	ldp	x29, x30, [sp], #96
  433df0:	ret
  433df4:	nop
  433df8:	stp	x29, x30, [sp, #-16]!
  433dfc:	adrp	x2, 468000 <_obstack_memory_used@@Base+0x16bf0>
  433e00:	mov	x1, x0
  433e04:	mov	x29, sp
  433e08:	add	x0, x2, #0x250
  433e0c:	bl	4335a0 <wcrtomb@plt+0x2e980>
  433e10:	stp	x29, x30, [sp, #-96]!
  433e14:	mov	x29, sp
  433e18:	stp	x19, x20, [sp, #16]
  433e1c:	mov	x19, x2
  433e20:	stp	x21, x22, [sp, #32]
  433e24:	mov	x22, x1
  433e28:	mov	x21, x0
  433e2c:	str	x23, [sp, #48]
  433e30:	bl	404ad0 <__errno_location@plt>
  433e34:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433e38:	ldr	w23, [x0]
  433e3c:	ldr	x1, [x1, #1136]
  433e40:	cbz	x1, 433e48 <wcrtomb@plt+0x2f228>
  433e44:	blr	x1
  433e48:	mov	x3, x19
  433e4c:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433e50:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433e54:	add	x2, x2, #0x480
  433e58:	add	x1, x1, #0x4b8
  433e5c:	mov	w4, #0x5                   	// #5
  433e60:	mov	x0, #0x0                   	// #0
  433e64:	bl	4048f0 <dcngettext@plt>
  433e68:	mov	x20, x0
  433e6c:	mov	x0, x21
  433e70:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433e74:	mov	x21, x0
  433e78:	add	x1, sp, #0x48
  433e7c:	mov	x0, x22
  433e80:	bl	446868 <argp_parse@@Base+0x6a88>
  433e84:	mov	x4, x0
  433e88:	mov	x5, x19
  433e8c:	mov	x3, x21
  433e90:	mov	x2, x20
  433e94:	mov	w1, w23
  433e98:	mov	w0, #0x0                   	// #0
  433e9c:	bl	404050 <error@plt>
  433ea0:	bl	410460 <wcrtomb@plt+0xb840>
  433ea4:	nop
  433ea8:	stp	x29, x30, [sp, #-48]!
  433eac:	mov	x29, sp
  433eb0:	stp	x19, x20, [sp, #16]
  433eb4:	mov	x20, x0
  433eb8:	str	x21, [sp, #32]
  433ebc:	bl	404ad0 <__errno_location@plt>
  433ec0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433ec4:	ldr	w21, [x0]
  433ec8:	ldr	x1, [x1, #1136]
  433ecc:	cbz	x1, 433ed4 <wcrtomb@plt+0x2f2b4>
  433ed0:	blr	x1
  433ed4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433ed8:	add	x1, x1, #0x3b8
  433edc:	mov	w2, #0x5                   	// #5
  433ee0:	mov	x0, #0x0                   	// #0
  433ee4:	bl	4049c0 <dcgettext@plt>
  433ee8:	mov	x19, x0
  433eec:	mov	x0, x20
  433ef0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433ef4:	mov	x2, x19
  433ef8:	mov	x3, x0
  433efc:	mov	w1, w21
  433f00:	mov	w0, #0x0                   	// #0
  433f04:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433f08:	add	x4, x4, #0x570
  433f0c:	bl	404050 <error@plt>
  433f10:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  433f14:	mov	w1, #0x2                   	// #2
  433f18:	ldp	x19, x20, [sp, #16]
  433f1c:	str	w1, [x0, #3568]
  433f20:	ldr	x21, [sp, #32]
  433f24:	ldp	x29, x30, [sp], #48
  433f28:	ret
  433f2c:	nop
  433f30:	stp	x29, x30, [sp, #-48]!
  433f34:	mov	x29, sp
  433f38:	stp	x19, x20, [sp, #16]
  433f3c:	mov	x20, x0
  433f40:	str	x21, [sp, #32]
  433f44:	bl	404ad0 <__errno_location@plt>
  433f48:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433f4c:	ldr	w21, [x0]
  433f50:	ldr	x1, [x1, #1136]
  433f54:	cbz	x1, 433f5c <wcrtomb@plt+0x2f33c>
  433f58:	blr	x1
  433f5c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433f60:	add	x1, x1, #0x3c8
  433f64:	mov	w2, #0x5                   	// #5
  433f68:	mov	x0, #0x0                   	// #0
  433f6c:	bl	4049c0 <dcgettext@plt>
  433f70:	mov	x19, x0
  433f74:	mov	x0, x20
  433f78:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433f7c:	mov	x2, x19
  433f80:	mov	w1, w21
  433f84:	ldp	x19, x20, [sp, #16]
  433f88:	mov	x3, x0
  433f8c:	ldr	x21, [sp, #32]
  433f90:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433f94:	ldp	x29, x30, [sp], #48
  433f98:	add	x4, x4, #0x570
  433f9c:	mov	w0, #0x0                   	// #0
  433fa0:	b	404050 <error@plt>
  433fa4:	nop
  433fa8:	stp	x29, x30, [sp, #-48]!
  433fac:	mov	x29, sp
  433fb0:	stp	x19, x20, [sp, #16]
  433fb4:	mov	x20, x0
  433fb8:	str	x21, [sp, #32]
  433fbc:	bl	404ad0 <__errno_location@plt>
  433fc0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  433fc4:	ldr	w21, [x0]
  433fc8:	ldr	x1, [x1, #1136]
  433fcc:	cbz	x1, 433fd4 <wcrtomb@plt+0x2f3b4>
  433fd0:	blr	x1
  433fd4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  433fd8:	add	x1, x1, #0x3b8
  433fdc:	mov	w2, #0x5                   	// #5
  433fe0:	mov	x0, #0x0                   	// #0
  433fe4:	bl	4049c0 <dcgettext@plt>
  433fe8:	mov	x19, x0
  433fec:	mov	x0, x20
  433ff0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  433ff4:	mov	x2, x19
  433ff8:	mov	x3, x0
  433ffc:	mov	w1, w21
  434000:	mov	w0, #0x0                   	// #0
  434004:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434008:	add	x4, x4, #0x580
  43400c:	bl	404050 <error@plt>
  434010:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434014:	mov	w1, #0x2                   	// #2
  434018:	ldp	x19, x20, [sp, #16]
  43401c:	str	w1, [x0, #3568]
  434020:	ldr	x21, [sp, #32]
  434024:	ldp	x29, x30, [sp], #48
  434028:	ret
  43402c:	nop
  434030:	stp	x29, x30, [sp, #-48]!
  434034:	mov	x29, sp
  434038:	stp	x19, x20, [sp, #16]
  43403c:	mov	x20, x0
  434040:	str	x21, [sp, #32]
  434044:	bl	404ad0 <__errno_location@plt>
  434048:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43404c:	ldr	w21, [x0]
  434050:	ldr	x1, [x1, #1136]
  434054:	cbz	x1, 43405c <wcrtomb@plt+0x2f43c>
  434058:	blr	x1
  43405c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434060:	add	x1, x1, #0x3b8
  434064:	mov	w2, #0x5                   	// #5
  434068:	mov	x0, #0x0                   	// #0
  43406c:	bl	4049c0 <dcgettext@plt>
  434070:	mov	x19, x0
  434074:	mov	x0, x20
  434078:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43407c:	mov	x2, x19
  434080:	mov	x3, x0
  434084:	mov	w1, w21
  434088:	mov	w0, #0x0                   	// #0
  43408c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434090:	add	x4, x4, #0x588
  434094:	bl	404050 <error@plt>
  434098:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43409c:	mov	w1, #0x2                   	// #2
  4340a0:	ldp	x19, x20, [sp, #16]
  4340a4:	str	w1, [x0, #3568]
  4340a8:	ldr	x21, [sp, #32]
  4340ac:	ldp	x29, x30, [sp], #48
  4340b0:	ret
  4340b4:	nop
  4340b8:	stp	x29, x30, [sp, #-48]!
  4340bc:	mov	x29, sp
  4340c0:	stp	x19, x20, [sp, #16]
  4340c4:	mov	x20, x0
  4340c8:	str	x21, [sp, #32]
  4340cc:	bl	404ad0 <__errno_location@plt>
  4340d0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4340d4:	ldr	w21, [x0]
  4340d8:	ldr	x1, [x1, #1136]
  4340dc:	cbz	x1, 4340e4 <wcrtomb@plt+0x2f4c4>
  4340e0:	blr	x1
  4340e4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4340e8:	add	x1, x1, #0x3c8
  4340ec:	mov	w2, #0x5                   	// #5
  4340f0:	mov	x0, #0x0                   	// #0
  4340f4:	bl	4049c0 <dcgettext@plt>
  4340f8:	mov	x19, x0
  4340fc:	mov	x0, x20
  434100:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  434104:	mov	x2, x19
  434108:	mov	w1, w21
  43410c:	ldp	x19, x20, [sp, #16]
  434110:	mov	x3, x0
  434114:	ldr	x21, [sp, #32]
  434118:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43411c:	ldp	x29, x30, [sp], #48
  434120:	add	x4, x4, #0x588
  434124:	mov	w0, #0x0                   	// #0
  434128:	b	404050 <error@plt>
  43412c:	nop
  434130:	stp	x29, x30, [sp, #-48]!
  434134:	mov	x29, sp
  434138:	stp	x19, x20, [sp, #16]
  43413c:	mov	x20, x0
  434140:	str	x21, [sp, #32]
  434144:	bl	404ad0 <__errno_location@plt>
  434148:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43414c:	ldr	w21, [x0]
  434150:	ldr	x1, [x1, #1136]
  434154:	cbz	x1, 43415c <wcrtomb@plt+0x2f53c>
  434158:	blr	x1
  43415c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434160:	add	x1, x1, #0x3b8
  434164:	mov	w2, #0x5                   	// #5
  434168:	mov	x0, #0x0                   	// #0
  43416c:	bl	4049c0 <dcgettext@plt>
  434170:	mov	x19, x0
  434174:	mov	x0, x20
  434178:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43417c:	mov	x2, x19
  434180:	mov	x3, x0
  434184:	mov	w1, w21
  434188:	mov	w0, #0x0                   	// #0
  43418c:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  434190:	add	x4, x4, #0x358
  434194:	bl	404050 <error@plt>
  434198:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43419c:	mov	w1, #0x2                   	// #2
  4341a0:	ldp	x19, x20, [sp, #16]
  4341a4:	str	w1, [x0, #3568]
  4341a8:	ldr	x21, [sp, #32]
  4341ac:	ldp	x29, x30, [sp], #48
  4341b0:	ret
  4341b4:	nop
  4341b8:	stp	x29, x30, [sp, #-80]!
  4341bc:	mov	x29, sp
  4341c0:	stp	x19, x20, [sp, #16]
  4341c4:	mov	x20, x0
  4341c8:	stp	x21, x22, [sp, #32]
  4341cc:	mov	x21, x1
  4341d0:	bl	404ad0 <__errno_location@plt>
  4341d4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4341d8:	ldr	w22, [x0]
  4341dc:	ldr	x1, [x1, #1136]
  4341e0:	cbz	x1, 4341e8 <wcrtomb@plt+0x2f5c8>
  4341e4:	blr	x1
  4341e8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4341ec:	add	x1, x1, #0x590
  4341f0:	mov	w2, #0x5                   	// #5
  4341f4:	mov	x0, #0x0                   	// #0
  4341f8:	bl	4049c0 <dcgettext@plt>
  4341fc:	mov	x19, x0
  434200:	mov	x0, x20
  434204:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  434208:	add	x1, sp, #0x38
  43420c:	mov	x20, x0
  434210:	mov	x0, x21
  434214:	bl	446868 <argp_parse@@Base+0x6a88>
  434218:	mov	x3, x20
  43421c:	mov	x4, x0
  434220:	mov	x2, x19
  434224:	mov	w1, w22
  434228:	mov	w0, #0x0                   	// #0
  43422c:	bl	404050 <error@plt>
  434230:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434234:	mov	w1, #0x2                   	// #2
  434238:	ldp	x19, x20, [sp, #16]
  43423c:	str	w1, [x0, #3568]
  434240:	ldp	x21, x22, [sp, #32]
  434244:	ldp	x29, x30, [sp], #80
  434248:	ret
  43424c:	nop
  434250:	stp	x29, x30, [sp, #-48]!
  434254:	mov	x29, sp
  434258:	stp	x19, x20, [sp, #16]
  43425c:	mov	x20, x0
  434260:	str	x21, [sp, #32]
  434264:	bl	404ad0 <__errno_location@plt>
  434268:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43426c:	ldr	w21, [x0]
  434270:	ldr	x1, [x1, #1136]
  434274:	cbz	x1, 43427c <wcrtomb@plt+0x2f65c>
  434278:	blr	x1
  43427c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434280:	add	x1, x1, #0x3c8
  434284:	mov	w2, #0x5                   	// #5
  434288:	mov	x0, #0x0                   	// #0
  43428c:	bl	4049c0 <dcgettext@plt>
  434290:	mov	x19, x0
  434294:	mov	x0, x20
  434298:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43429c:	mov	x2, x19
  4342a0:	mov	w1, w21
  4342a4:	ldp	x19, x20, [sp, #16]
  4342a8:	mov	x3, x0
  4342ac:	ldr	x21, [sp, #32]
  4342b0:	adrp	x4, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  4342b4:	ldp	x29, x30, [sp], #48
  4342b8:	add	x4, x4, #0x358
  4342bc:	mov	w0, #0x0                   	// #0
  4342c0:	b	404050 <error@plt>
  4342c4:	nop
  4342c8:	stp	x29, x30, [sp, #-80]!
  4342cc:	mov	x29, sp
  4342d0:	stp	x19, x20, [sp, #16]
  4342d4:	mov	x20, x0
  4342d8:	stp	x21, x22, [sp, #32]
  4342dc:	mov	x21, x1
  4342e0:	bl	404ad0 <__errno_location@plt>
  4342e4:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4342e8:	ldr	w22, [x0]
  4342ec:	ldr	x1, [x1, #1136]
  4342f0:	cbz	x1, 4342f8 <wcrtomb@plt+0x2f6d8>
  4342f4:	blr	x1
  4342f8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4342fc:	add	x1, x1, #0x5a8
  434300:	mov	w2, #0x5                   	// #5
  434304:	mov	x0, #0x0                   	// #0
  434308:	bl	4049c0 <dcgettext@plt>
  43430c:	mov	x19, x0
  434310:	mov	x0, x20
  434314:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  434318:	add	x1, sp, #0x38
  43431c:	mov	x20, x0
  434320:	mov	x0, x21
  434324:	bl	446868 <argp_parse@@Base+0x6a88>
  434328:	mov	x3, x20
  43432c:	mov	x4, x0
  434330:	mov	x2, x19
  434334:	mov	w1, w22
  434338:	mov	w0, #0x0                   	// #0
  43433c:	bl	404050 <error@plt>
  434340:	ldp	x19, x20, [sp, #16]
  434344:	ldp	x21, x22, [sp, #32]
  434348:	ldp	x29, x30, [sp], #80
  43434c:	ret
  434350:	stp	x29, x30, [sp, #-48]!
  434354:	mov	x29, sp
  434358:	stp	x19, x20, [sp, #16]
  43435c:	mov	x20, x1
  434360:	stp	x21, x22, [sp, #32]
  434364:	mov	x21, x0
  434368:	bl	404ad0 <__errno_location@plt>
  43436c:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  434370:	ldr	w22, [x0]
  434374:	ldr	x1, [x1, #1136]
  434378:	cbz	x1, 434380 <wcrtomb@plt+0x2f760>
  43437c:	blr	x1
  434380:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434384:	add	x1, x1, #0x5c8
  434388:	mov	w2, #0x5                   	// #5
  43438c:	mov	x0, #0x0                   	// #0
  434390:	bl	4049c0 <dcgettext@plt>
  434394:	mov	x19, x0
  434398:	mov	x0, x20
  43439c:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4343a0:	mov	x1, x21
  4343a4:	mov	x20, x0
  4343a8:	mov	w0, #0x1                   	// #1
  4343ac:	bl	44ed50 <argp_parse@@Base+0xef70>
  4343b0:	mov	x3, x20
  4343b4:	mov	x4, x0
  4343b8:	mov	x2, x19
  4343bc:	mov	w1, w22
  4343c0:	mov	w0, #0x0                   	// #0
  4343c4:	bl	404050 <error@plt>
  4343c8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4343cc:	mov	w1, #0x2                   	// #2
  4343d0:	ldp	x19, x20, [sp, #16]
  4343d4:	str	w1, [x0, #3568]
  4343d8:	ldp	x21, x22, [sp, #32]
  4343dc:	ldp	x29, x30, [sp], #48
  4343e0:	ret
  4343e4:	nop
  4343e8:	stp	x29, x30, [sp, #-16]!
  4343ec:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4343f0:	mov	x1, x0
  4343f4:	mov	x29, sp
  4343f8:	add	x0, x2, #0x5e8
  4343fc:	bl	4335a0 <wcrtomb@plt+0x2e980>
  434400:	stp	x29, x30, [sp, #-48]!
  434404:	mov	x29, sp
  434408:	stp	x19, x20, [sp, #16]
  43440c:	mov	x20, x0
  434410:	str	x21, [sp, #32]
  434414:	bl	404ad0 <__errno_location@plt>
  434418:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43441c:	ldr	w21, [x0]
  434420:	ldr	x1, [x1, #1136]
  434424:	cbz	x1, 43442c <wcrtomb@plt+0x2f80c>
  434428:	blr	x1
  43442c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434430:	add	x1, x1, #0x3b8
  434434:	mov	w2, #0x5                   	// #5
  434438:	mov	x0, #0x0                   	// #0
  43443c:	bl	4049c0 <dcgettext@plt>
  434440:	mov	x19, x0
  434444:	mov	x0, x20
  434448:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43444c:	mov	x2, x19
  434450:	mov	x3, x0
  434454:	mov	w1, w21
  434458:	mov	w0, #0x0                   	// #0
  43445c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434460:	add	x4, x4, #0x5e8
  434464:	bl	404050 <error@plt>
  434468:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43446c:	mov	w1, #0x2                   	// #2
  434470:	ldp	x19, x20, [sp, #16]
  434474:	str	w1, [x0, #3568]
  434478:	ldr	x21, [sp, #32]
  43447c:	ldp	x29, x30, [sp], #48
  434480:	ret
  434484:	nop
  434488:	stp	x29, x30, [sp, #-48]!
  43448c:	mov	x29, sp
  434490:	stp	x19, x20, [sp, #16]
  434494:	mov	x20, x0
  434498:	str	x21, [sp, #32]
  43449c:	bl	404ad0 <__errno_location@plt>
  4344a0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4344a4:	ldr	w21, [x0]
  4344a8:	ldr	x1, [x1, #1136]
  4344ac:	cbz	x1, 4344b4 <wcrtomb@plt+0x2f894>
  4344b0:	blr	x1
  4344b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4344b8:	add	x1, x1, #0x3c8
  4344bc:	mov	w2, #0x5                   	// #5
  4344c0:	mov	x0, #0x0                   	// #0
  4344c4:	bl	4049c0 <dcgettext@plt>
  4344c8:	mov	x19, x0
  4344cc:	mov	x0, x20
  4344d0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4344d4:	mov	x2, x19
  4344d8:	mov	w1, w21
  4344dc:	ldp	x19, x20, [sp, #16]
  4344e0:	mov	x3, x0
  4344e4:	ldr	x21, [sp, #32]
  4344e8:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4344ec:	ldp	x29, x30, [sp], #48
  4344f0:	add	x4, x4, #0x5e8
  4344f4:	mov	w0, #0x0                   	// #0
  4344f8:	b	404050 <error@plt>
  4344fc:	nop
  434500:	stp	x29, x30, [sp, #-48]!
  434504:	mov	x29, sp
  434508:	stp	x19, x20, [sp, #16]
  43450c:	mov	x20, x0
  434510:	str	x21, [sp, #32]
  434514:	bl	404ad0 <__errno_location@plt>
  434518:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43451c:	ldr	w21, [x0]
  434520:	ldr	x1, [x1, #1136]
  434524:	cbz	x1, 43452c <wcrtomb@plt+0x2f90c>
  434528:	blr	x1
  43452c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434530:	add	x1, x1, #0x3b8
  434534:	mov	w2, #0x5                   	// #5
  434538:	mov	x0, #0x0                   	// #0
  43453c:	bl	4049c0 <dcgettext@plt>
  434540:	mov	x19, x0
  434544:	mov	x0, x20
  434548:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43454c:	mov	x2, x19
  434550:	mov	x3, x0
  434554:	mov	w1, w21
  434558:	mov	w0, #0x0                   	// #0
  43455c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434560:	add	x4, x4, #0x5f0
  434564:	bl	404050 <error@plt>
  434568:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43456c:	mov	w1, #0x2                   	// #2
  434570:	ldp	x19, x20, [sp, #16]
  434574:	str	w1, [x0, #3568]
  434578:	ldr	x21, [sp, #32]
  43457c:	ldp	x29, x30, [sp], #48
  434580:	ret
  434584:	nop
  434588:	stp	x29, x30, [sp, #-48]!
  43458c:	mov	x29, sp
  434590:	stp	x19, x20, [sp, #16]
  434594:	mov	x20, x0
  434598:	str	x21, [sp, #32]
  43459c:	bl	404ad0 <__errno_location@plt>
  4345a0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4345a4:	ldr	w21, [x0]
  4345a8:	ldr	x1, [x1, #1136]
  4345ac:	cbz	x1, 4345b4 <wcrtomb@plt+0x2f994>
  4345b0:	blr	x1
  4345b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4345b8:	add	x1, x1, #0x3c8
  4345bc:	mov	w2, #0x5                   	// #5
  4345c0:	mov	x0, #0x0                   	// #0
  4345c4:	bl	4049c0 <dcgettext@plt>
  4345c8:	mov	x19, x0
  4345cc:	mov	x0, x20
  4345d0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4345d4:	mov	x2, x19
  4345d8:	mov	w1, w21
  4345dc:	ldp	x19, x20, [sp, #16]
  4345e0:	mov	x3, x0
  4345e4:	ldr	x21, [sp, #32]
  4345e8:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4345ec:	ldp	x29, x30, [sp], #48
  4345f0:	add	x4, x4, #0x5f0
  4345f4:	mov	w0, #0x0                   	// #0
  4345f8:	b	404050 <error@plt>
  4345fc:	nop
  434600:	stp	x29, x30, [sp, #-48]!
  434604:	mov	x29, sp
  434608:	stp	x19, x20, [sp, #16]
  43460c:	mov	x20, x0
  434610:	str	x21, [sp, #32]
  434614:	bl	404ad0 <__errno_location@plt>
  434618:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43461c:	ldr	w21, [x0]
  434620:	ldr	x1, [x1, #1136]
  434624:	cbz	x1, 43462c <wcrtomb@plt+0x2fa0c>
  434628:	blr	x1
  43462c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434630:	add	x1, x1, #0x3b8
  434634:	mov	w2, #0x5                   	// #5
  434638:	mov	x0, #0x0                   	// #0
  43463c:	bl	4049c0 <dcgettext@plt>
  434640:	mov	x19, x0
  434644:	mov	x0, x20
  434648:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43464c:	mov	x2, x19
  434650:	mov	x3, x0
  434654:	mov	w1, w21
  434658:	mov	w0, #0x0                   	// #0
  43465c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434660:	add	x4, x4, #0x600
  434664:	bl	404050 <error@plt>
  434668:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43466c:	mov	w1, #0x2                   	// #2
  434670:	ldp	x19, x20, [sp, #16]
  434674:	str	w1, [x0, #3568]
  434678:	ldr	x21, [sp, #32]
  43467c:	ldp	x29, x30, [sp], #48
  434680:	ret
  434684:	nop
  434688:	stp	x29, x30, [sp, #-48]!
  43468c:	mov	x29, sp
  434690:	stp	x19, x20, [sp, #16]
  434694:	mov	x20, x0
  434698:	str	x21, [sp, #32]
  43469c:	bl	404ad0 <__errno_location@plt>
  4346a0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4346a4:	ldr	w21, [x0]
  4346a8:	ldr	x1, [x1, #1136]
  4346ac:	cbz	x1, 4346b4 <wcrtomb@plt+0x2fa94>
  4346b0:	blr	x1
  4346b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4346b8:	add	x1, x1, #0x3b8
  4346bc:	mov	w2, #0x5                   	// #5
  4346c0:	mov	x0, #0x0                   	// #0
  4346c4:	bl	4049c0 <dcgettext@plt>
  4346c8:	mov	x19, x0
  4346cc:	mov	x0, x20
  4346d0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4346d4:	mov	x2, x19
  4346d8:	mov	x3, x0
  4346dc:	mov	w1, w21
  4346e0:	mov	w0, #0x0                   	// #0
  4346e4:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4346e8:	add	x4, x4, #0x608
  4346ec:	bl	404050 <error@plt>
  4346f0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4346f4:	mov	w1, #0x2                   	// #2
  4346f8:	ldp	x19, x20, [sp, #16]
  4346fc:	str	w1, [x0, #3568]
  434700:	ldr	x21, [sp, #32]
  434704:	ldp	x29, x30, [sp], #48
  434708:	ret
  43470c:	nop
  434710:	stp	x29, x30, [sp, #-48]!
  434714:	mov	x29, sp
  434718:	stp	x19, x20, [sp, #16]
  43471c:	mov	x20, x0
  434720:	str	x21, [sp, #32]
  434724:	bl	404ad0 <__errno_location@plt>
  434728:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  43472c:	ldr	w21, [x0]
  434730:	ldr	x1, [x1, #1136]
  434734:	cbz	x1, 43473c <wcrtomb@plt+0x2fb1c>
  434738:	blr	x1
  43473c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434740:	add	x1, x1, #0x3b8
  434744:	mov	w2, #0x5                   	// #5
  434748:	mov	x0, #0x0                   	// #0
  43474c:	bl	4049c0 <dcgettext@plt>
  434750:	mov	x19, x0
  434754:	mov	x0, x20
  434758:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  43475c:	mov	x2, x19
  434760:	mov	x3, x0
  434764:	mov	w1, w21
  434768:	mov	w0, #0x0                   	// #0
  43476c:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434770:	add	x4, x4, #0x610
  434774:	bl	404050 <error@plt>
  434778:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43477c:	mov	w1, #0x2                   	// #2
  434780:	ldp	x19, x20, [sp, #16]
  434784:	str	w1, [x0, #3568]
  434788:	ldr	x21, [sp, #32]
  43478c:	ldp	x29, x30, [sp], #48
  434790:	ret
  434794:	nop
  434798:	stp	x29, x30, [sp, #-48]!
  43479c:	mov	x29, sp
  4347a0:	stp	x19, x20, [sp, #16]
  4347a4:	mov	x20, x0
  4347a8:	str	x21, [sp, #32]
  4347ac:	bl	404ad0 <__errno_location@plt>
  4347b0:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  4347b4:	ldr	w21, [x0]
  4347b8:	ldr	x1, [x1, #1136]
  4347bc:	cbz	x1, 4347c4 <wcrtomb@plt+0x2fba4>
  4347c0:	blr	x1
  4347c4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4347c8:	add	x1, x1, #0x3b8
  4347cc:	mov	w2, #0x5                   	// #5
  4347d0:	mov	x0, #0x0                   	// #0
  4347d4:	bl	4049c0 <dcgettext@plt>
  4347d8:	mov	x19, x0
  4347dc:	mov	x0, x20
  4347e0:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4347e4:	mov	x2, x19
  4347e8:	mov	x3, x0
  4347ec:	mov	w1, w21
  4347f0:	mov	w0, #0x0                   	// #0
  4347f4:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4347f8:	add	x4, x4, #0x248
  4347fc:	bl	404050 <error@plt>
  434800:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434804:	mov	w1, #0x2                   	// #2
  434808:	ldp	x19, x20, [sp, #16]
  43480c:	str	w1, [x0, #3568]
  434810:	ldr	x21, [sp, #32]
  434814:	ldp	x29, x30, [sp], #48
  434818:	ret
  43481c:	nop
  434820:	stp	x29, x30, [sp, #-48]!
  434824:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  434828:	mov	x29, sp
  43482c:	stp	x19, x20, [sp, #16]
  434830:	stp	x21, x22, [sp, #32]
  434834:	mov	x21, x0
  434838:	ldr	x22, [x3, #1136]
  43483c:	cbz	x1, 4348a8 <wcrtomb@plt+0x2fc88>
  434840:	mov	x19, x1
  434844:	mov	x20, x2
  434848:	cbz	x22, 434850 <wcrtomb@plt+0x2fc30>
  43484c:	blr	x22
  434850:	mov	x3, x20
  434854:	mov	w4, #0x5                   	// #5
  434858:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43485c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434860:	add	x2, x2, #0x618
  434864:	add	x1, x1, #0x638
  434868:	mov	x0, #0x0                   	// #0
  43486c:	bl	4048f0 <dcngettext@plt>
  434870:	mov	x5, x20
  434874:	mov	x4, x19
  434878:	mov	x3, x21
  43487c:	mov	x2, x0
  434880:	mov	w1, #0x0                   	// #0
  434884:	mov	w0, #0x0                   	// #0
  434888:	bl	404050 <error@plt>
  43488c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434890:	mov	w1, #0x2                   	// #2
  434894:	ldp	x19, x20, [sp, #16]
  434898:	str	w1, [x0, #3568]
  43489c:	ldp	x21, x22, [sp, #32]
  4348a0:	ldp	x29, x30, [sp], #48
  4348a4:	ret
  4348a8:	bl	404ad0 <__errno_location@plt>
  4348ac:	ldr	w20, [x0]
  4348b0:	cbz	x22, 4348b8 <wcrtomb@plt+0x2fc98>
  4348b4:	blr	x22
  4348b8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4348bc:	add	x1, x1, #0x3b8
  4348c0:	mov	w2, #0x5                   	// #5
  4348c4:	mov	x0, #0x0                   	// #0
  4348c8:	bl	4049c0 <dcgettext@plt>
  4348cc:	mov	x19, x0
  4348d0:	mov	x0, x21
  4348d4:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  4348d8:	mov	x2, x19
  4348dc:	mov	x3, x0
  4348e0:	mov	w1, w20
  4348e4:	mov	w0, #0x0                   	// #0
  4348e8:	adrp	x4, 468000 <_obstack_memory_used@@Base+0x16bf0>
  4348ec:	add	x4, x4, #0x248
  4348f0:	bl	404050 <error@plt>
  4348f4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4348f8:	mov	w1, #0x2                   	// #2
  4348fc:	ldp	x19, x20, [sp, #16]
  434900:	str	w1, [x0, #3568]
  434904:	ldp	x21, x22, [sp, #32]
  434908:	ldp	x29, x30, [sp], #48
  43490c:	ret
  434910:	stp	x29, x30, [sp, #-16]!
  434914:	adrp	x2, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434918:	mov	x1, x0
  43491c:	mov	x29, sp
  434920:	add	x0, x2, #0x658
  434924:	bl	4335a0 <wcrtomb@plt+0x2e980>
  434928:	stp	x29, x30, [sp, #-16]!
  43492c:	mov	x29, sp
  434930:	bl	404710 <strcmp@plt>
  434934:	cmp	w0, #0x0
  434938:	cset	w0, eq  // eq = none
  43493c:	ldp	x29, x30, [sp], #16
  434940:	ret
  434944:	nop
  434948:	b	444be0 <argp_parse@@Base+0x4e00>
  43494c:	nop
  434950:	stp	x29, x30, [sp, #-32]!
  434954:	mov	x29, sp
  434958:	str	x19, [sp, #16]
  43495c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434960:	ldr	x0, [x19, #3584]
  434964:	cbz	x0, 434984 <wcrtomb@plt+0x2fd64>
  434968:	bl	444780 <argp_parse@@Base+0x49a0>
  43496c:	mov	w1, #0x1                   	// #1
  434970:	cbz	x0, 434984 <wcrtomb@plt+0x2fd64>
  434974:	mov	w0, w1
  434978:	ldr	x19, [sp, #16]
  43497c:	ldp	x29, x30, [sp], #32
  434980:	ret
  434984:	add	x19, x19, #0xe00
  434988:	mov	w1, #0x0                   	// #0
  43498c:	ldr	x0, [x19, #8]
  434990:	cbz	x0, 434974 <wcrtomb@plt+0x2fd54>
  434994:	bl	444780 <argp_parse@@Base+0x49a0>
  434998:	cmp	x0, #0x0
  43499c:	cset	w1, ne  // ne = any
  4349a0:	mov	w0, w1
  4349a4:	ldr	x19, [sp, #16]
  4349a8:	ldp	x29, x30, [sp], #32
  4349ac:	ret
  4349b0:	stp	x29, x30, [sp, #-80]!
  4349b4:	tst	w2, #0xff
  4349b8:	mov	x29, sp
  4349bc:	stp	x19, x20, [sp, #16]
  4349c0:	mov	x19, x0
  4349c4:	stp	x21, x22, [sp, #32]
  4349c8:	and	w22, w1, #0xff
  4349cc:	ldrb	w3, [x0]
  4349d0:	b.ne	434a44 <wcrtomb@plt+0x2fe24>  // b.any
  4349d4:	cbz	w3, 434af4 <wcrtomb@plt+0x2fed4>
  4349d8:	mov	x1, x0
  4349dc:	mov	x21, #0x0                   	// #0
  4349e0:	cmp	w3, #0x2e
  4349e4:	b.ne	4349f0 <wcrtomb@plt+0x2fdd0>  // b.any
  4349e8:	b	434a60 <wcrtomb@plt+0x2fe40>
  4349ec:	cbz	w3, 434a08 <wcrtomb@plt+0x2fde8>
  4349f0:	ldrb	w3, [x1], #1
  4349f4:	cmp	w3, #0x2f
  4349f8:	ldrb	w3, [x1]
  4349fc:	b.ne	4349ec <wcrtomb@plt+0x2fdcc>  // b.any
  434a00:	cbnz	w3, 4349e0 <wcrtomb@plt+0x2fdc0>
  434a04:	nop
  434a08:	ldrb	w0, [x19, x21]
  434a0c:	add	x20, x19, x21
  434a10:	cmp	w0, #0x2f
  434a14:	b.eq	434b54 <wcrtomb@plt+0x2ff34>  // b.none
  434a18:	cbnz	x21, 434a88 <wcrtomb@plt+0x2fe68>
  434a1c:	cbnz	w0, 434a4c <wcrtomb@plt+0x2fe2c>
  434a20:	cmp	x19, x20
  434a24:	b.eq	434af4 <wcrtomb@plt+0x2fed4>  // b.none
  434a28:	adrp	x20, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  434a2c:	add	x20, x20, #0x348
  434a30:	mov	x0, x20
  434a34:	ldp	x19, x20, [sp, #16]
  434a38:	ldp	x21, x22, [sp, #32]
  434a3c:	ldp	x29, x30, [sp], #80
  434a40:	ret
  434a44:	cbz	w3, 434af4 <wcrtomb@plt+0x2fed4>
  434a48:	mov	x20, x0
  434a4c:	mov	x0, x20
  434a50:	ldp	x19, x20, [sp, #16]
  434a54:	ldp	x21, x22, [sp, #32]
  434a58:	ldp	x29, x30, [sp], #80
  434a5c:	ret
  434a60:	ldrb	w0, [x1, #1]
  434a64:	cmp	w0, #0x2e
  434a68:	b.ne	4349f0 <wcrtomb@plt+0x2fdd0>  // b.any
  434a6c:	mov	x0, x1
  434a70:	ldrb	w2, [x0, #2]!
  434a74:	cmp	w2, #0x2f
  434a78:	sub	x0, x0, x19
  434a7c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  434a80:	csel	x21, x0, x21, eq  // eq = none
  434a84:	b	4349f0 <wcrtomb@plt+0x2fdd0>
  434a88:	stp	x25, x26, [sp, #64]
  434a8c:	sxtw	x25, w22
  434a90:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434a94:	add	x26, x26, #0xe00
  434a98:	add	x0, x21, #0x1
  434a9c:	stp	x23, x24, [sp, #48]
  434aa0:	ldr	x24, [x26, x25, lsl #3]
  434aa4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  434aa8:	mov	x23, x0
  434aac:	mov	x2, x21
  434ab0:	mov	x1, x19
  434ab4:	bl	403f70 <memcpy@plt>
  434ab8:	strb	wzr, [x23, x21]
  434abc:	cbz	x24, 434bb8 <wcrtomb@plt+0x2ff98>
  434ac0:	mov	x0, x24
  434ac4:	mov	x1, x23
  434ac8:	bl	445410 <argp_parse@@Base+0x5630>
  434acc:	mov	x21, x0
  434ad0:	cbz	x0, 434be4 <wcrtomb@plt+0x2ffc4>
  434ad4:	cmp	x23, x0
  434ad8:	b.eq	434b6c <wcrtomb@plt+0x2ff4c>  // b.none
  434adc:	mov	x0, x23
  434ae0:	bl	4047b0 <free@plt>
  434ae4:	ldrb	w0, [x20]
  434ae8:	ldp	x23, x24, [sp, #48]
  434aec:	ldp	x25, x26, [sp, #64]
  434af0:	b	434a1c <wcrtomb@plt+0x2fdfc>
  434af4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  434af8:	ldr	x0, [x0, #1136]
  434afc:	cbz	x0, 434b04 <wcrtomb@plt+0x2fee4>
  434b00:	blr	x0
  434b04:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434b08:	add	x0, x0, #0x710
  434b0c:	add	x22, x0, w22, sxtw #3
  434b10:	mov	w2, #0x5                   	// #5
  434b14:	mov	x0, #0x0                   	// #0
  434b18:	adrp	x20, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  434b1c:	add	x20, x20, #0x348
  434b20:	ldr	x1, [x22, #16]
  434b24:	bl	4049c0 <dcgettext@plt>
  434b28:	mov	x3, x0
  434b2c:	mov	w1, #0x0                   	// #0
  434b30:	mov	w0, #0x0                   	// #0
  434b34:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  434b38:	add	x2, x2, #0x828
  434b3c:	bl	404050 <error@plt>
  434b40:	mov	x0, x20
  434b44:	ldp	x19, x20, [sp, #16]
  434b48:	ldp	x21, x22, [sp, #32]
  434b4c:	ldp	x29, x30, [sp], #80
  434b50:	ret
  434b54:	ldrb	w0, [x20, #1]!
  434b58:	cmp	w0, #0x2f
  434b5c:	b.eq	434b54 <wcrtomb@plt+0x2ff34>  // b.none
  434b60:	sub	x21, x20, x19
  434b64:	cbz	x21, 434a1c <wcrtomb@plt+0x2fdfc>
  434b68:	b	434a88 <wcrtomb@plt+0x2fe68>
  434b6c:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  434b70:	ldr	x0, [x0, #1136]
  434b74:	cbz	x0, 434b7c <wcrtomb@plt+0x2ff5c>
  434b78:	blr	x0
  434b7c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434b80:	add	x1, x1, #0x710
  434b84:	mov	w2, #0x5                   	// #5
  434b88:	mov	x0, #0x0                   	// #0
  434b8c:	ldr	x1, [x1, x25, lsl #3]
  434b90:	bl	4049c0 <dcgettext@plt>
  434b94:	mov	x2, x0
  434b98:	mov	x3, x21
  434b9c:	mov	w0, #0x0                   	// #0
  434ba0:	mov	w1, #0x0                   	// #0
  434ba4:	bl	404050 <error@plt>
  434ba8:	ldrb	w0, [x20]
  434bac:	ldp	x23, x24, [sp, #48]
  434bb0:	ldp	x25, x26, [sp, #64]
  434bb4:	b	434a1c <wcrtomb@plt+0x2fdfc>
  434bb8:	adrp	x3, 434000 <wcrtomb@plt+0x2f3e0>
  434bbc:	adrp	x2, 434000 <wcrtomb@plt+0x2f3e0>
  434bc0:	add	x3, x3, #0x928
  434bc4:	add	x2, x2, #0x948
  434bc8:	mov	x4, #0x0                   	// #0
  434bcc:	mov	x1, #0x0                   	// #0
  434bd0:	mov	x0, #0x0                   	// #0
  434bd4:	bl	444c38 <argp_parse@@Base+0x4e58>
  434bd8:	str	x0, [x26, x25, lsl #3]
  434bdc:	mov	x24, x0
  434be0:	cbnz	x0, 434ac0 <wcrtomb@plt+0x2fea0>
  434be4:	bl	4104a0 <wcrtomb@plt+0xb880>
  434be8:	stp	x29, x30, [sp, #-96]!
  434bec:	mov	x29, sp
  434bf0:	stp	x19, x20, [sp, #16]
  434bf4:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434bf8:	mov	x19, x1
  434bfc:	add	x20, x20, #0x240
  434c00:	stp	x21, x22, [sp, #32]
  434c04:	sbfiz	x21, x0, #3, #32
  434c08:	stp	x23, x24, [sp, #48]
  434c0c:	mov	x23, x1
  434c10:	sxtw	x24, w0
  434c14:	str	x25, [sp, #64]
  434c18:	add	x25, x1, #0x40
  434c1c:	b	434c38 <wcrtomb@plt+0x30018>
  434c20:	ldrb	w0, [x19]
  434c24:	cmp	w0, #0xa
  434c28:	b.eq	434ca4 <wcrtomb@plt+0x30084>  // b.none
  434c2c:	add	x19, x19, #0x1
  434c30:	cmp	x19, x25
  434c34:	b.eq	434c54 <wcrtomb@plt+0x30034>  // b.none
  434c38:	ldr	w0, [x20, x21]
  434c3c:	mov	x1, x19
  434c40:	mov	x2, #0x1                   	// #1
  434c44:	add	x22, x20, x21
  434c48:	bl	44f230 <argp_parse@@Base+0xf450>
  434c4c:	cmp	x0, #0x1
  434c50:	b.eq	434c20 <wcrtomb@plt+0x30000>  // b.none
  434c54:	ldr	w0, [x22]
  434c58:	add	x20, x20, #0x20
  434c5c:	add	x21, x20, x21
  434c60:	mov	x19, #0x0                   	// #0
  434c64:	bl	4045c0 <close@plt>
  434c68:	ldr	w0, [x21, #4]
  434c6c:	bl	4045c0 <close@plt>
  434c70:	mov	w0, #0xffffffff            	// #-1
  434c74:	str	w0, [x22]
  434c78:	str	w0, [x21, #4]
  434c7c:	bl	404ad0 <__errno_location@plt>
  434c80:	mov	w1, #0x5                   	// #5
  434c84:	str	w1, [x0]
  434c88:	mov	x0, x19
  434c8c:	ldp	x19, x20, [sp, #16]
  434c90:	ldp	x21, x22, [sp, #32]
  434c94:	ldp	x23, x24, [sp, #48]
  434c98:	ldr	x25, [sp, #64]
  434c9c:	ldp	x29, x30, [sp], #96
  434ca0:	ret
  434ca4:	strb	wzr, [x19]
  434ca8:	ldrb	w0, [x23]
  434cac:	cbnz	w0, 434cbc <wcrtomb@plt+0x3009c>
  434cb0:	b	434ce8 <wcrtomb@plt+0x300c8>
  434cb4:	ldrb	w0, [x23, #1]!
  434cb8:	cbz	w0, 434ce8 <wcrtomb@plt+0x300c8>
  434cbc:	cmp	w0, #0x20
  434cc0:	b.eq	434cb4 <wcrtomb@plt+0x30094>  // b.none
  434cc4:	sub	w1, w0, #0x45
  434cc8:	lsl	x19, x24, #3
  434ccc:	and	w1, w1, #0xff
  434cd0:	cmp	w1, #0x1
  434cd4:	b.ls	434d30 <wcrtomb@plt+0x30110>  // b.plast
  434cd8:	add	x19, x23, #0x1
  434cdc:	cmp	w0, #0x41
  434ce0:	b.eq	434c88 <wcrtomb@plt+0x30068>  // b.none
  434ce4:	nop
  434ce8:	lsl	x24, x24, #3
  434cec:	add	x21, x20, #0x20
  434cf0:	add	x21, x21, x24
  434cf4:	mov	x19, #0x0                   	// #0
  434cf8:	ldr	w0, [x20, x24]
  434cfc:	bl	4045c0 <close@plt>
  434d00:	ldr	w0, [x21, #4]
  434d04:	bl	4045c0 <close@plt>
  434d08:	mov	w0, #0xffffffff            	// #-1
  434d0c:	str	w0, [x20, x24]
  434d10:	str	w0, [x21, #4]
  434d14:	bl	404ad0 <__errno_location@plt>
  434d18:	mov	w1, #0x5                   	// #5
  434d1c:	str	w1, [x0]
  434d20:	b	434c88 <wcrtomb@plt+0x30068>
  434d24:	ldrb	w0, [sp, #95]
  434d28:	cmp	w0, #0xa
  434d2c:	b.eq	434d48 <wcrtomb@plt+0x30128>  // b.none
  434d30:	ldr	w0, [x20, x19]
  434d34:	add	x1, sp, #0x5f
  434d38:	mov	x2, #0x1                   	// #1
  434d3c:	bl	44f230 <argp_parse@@Base+0xf450>
  434d40:	cmp	x0, #0x1
  434d44:	b.eq	434d24 <wcrtomb@plt+0x30104>  // b.none
  434d48:	bl	404ad0 <__errno_location@plt>
  434d4c:	mov	x21, x0
  434d50:	mov	w2, #0xa                   	// #10
  434d54:	add	x0, x23, #0x1
  434d58:	mov	x1, #0x0                   	// #0
  434d5c:	bl	404770 <strtol@plt>
  434d60:	str	w0, [x21]
  434d64:	mov	x22, x0
  434d68:	mov	x19, #0x0                   	// #0
  434d6c:	ldrb	w0, [x23]
  434d70:	cmp	w0, #0x46
  434d74:	b.ne	434c88 <wcrtomb@plt+0x30068>  // b.any
  434d78:	lsl	x24, x24, #3
  434d7c:	add	x23, x20, #0x20
  434d80:	add	x23, x23, x24
  434d84:	ldr	w0, [x20, x24]
  434d88:	bl	4045c0 <close@plt>
  434d8c:	ldr	w0, [x23, #4]
  434d90:	bl	4045c0 <close@plt>
  434d94:	mov	w0, #0xffffffff            	// #-1
  434d98:	str	w0, [x20, x24]
  434d9c:	str	w0, [x23, #4]
  434da0:	str	w22, [x21]
  434da4:	b	434c88 <wcrtomb@plt+0x30068>
  434da8:	stp	x29, x30, [sp, #-192]!
  434dac:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  434db0:	mov	x29, sp
  434db4:	stp	x25, x26, [sp, #64]
  434db8:	add	x25, x4, #0x240
  434dbc:	ldr	w6, [x4, #576]
  434dc0:	stp	x19, x20, [sp, #16]
  434dc4:	mov	w20, w1
  434dc8:	ldr	w4, [x25, #36]
  434dcc:	stp	x21, x22, [sp, #32]
  434dd0:	mov	w22, w2
  434dd4:	and	w4, w4, w6
  434dd8:	stp	x27, x28, [sp, #80]
  434ddc:	mov	x21, x3
  434de0:	cmn	w4, #0x1
  434de4:	b.eq	434e8c <wcrtomb@plt+0x3026c>  // b.none
  434de8:	ldr	w1, [x25, #8]
  434dec:	cmn	w1, #0x1
  434df0:	b.eq	434e38 <wcrtomb@plt+0x30218>  // b.none
  434df4:	ldr	w1, [x25, #16]
  434df8:	cmn	w1, #0x1
  434dfc:	b.eq	434e54 <wcrtomb@plt+0x30234>  // b.none
  434e00:	ldr	w1, [x25, #24]
  434e04:	cmn	w1, #0x1
  434e08:	b.eq	434e70 <wcrtomb@plt+0x30250>  // b.none
  434e0c:	bl	404ad0 <__errno_location@plt>
  434e10:	mov	w28, #0xffffffff            	// #-1
  434e14:	mov	w2, #0x18                  	// #24
  434e18:	str	w2, [x0]
  434e1c:	mov	w0, w28
  434e20:	ldp	x19, x20, [sp, #16]
  434e24:	ldp	x21, x22, [sp, #32]
  434e28:	ldp	x25, x26, [sp, #64]
  434e2c:	ldp	x27, x28, [sp, #80]
  434e30:	ldp	x29, x30, [sp], #192
  434e34:	ret
  434e38:	ldr	w1, [x25, #44]
  434e3c:	cmn	w1, #0x1
  434e40:	b.ne	434df4 <wcrtomb@plt+0x301d4>  // b.any
  434e44:	mov	w1, #0x1                   	// #1
  434e48:	stp	x23, x24, [sp, #48]
  434e4c:	str	w1, [sp, #108]
  434e50:	b	434e94 <wcrtomb@plt+0x30274>
  434e54:	ldr	w1, [x25, #52]
  434e58:	cmn	w1, #0x1
  434e5c:	b.ne	434e00 <wcrtomb@plt+0x301e0>  // b.any
  434e60:	mov	w1, #0x2                   	// #2
  434e64:	stp	x23, x24, [sp, #48]
  434e68:	str	w1, [sp, #108]
  434e6c:	b	434e94 <wcrtomb@plt+0x30274>
  434e70:	ldr	w1, [x25, #60]
  434e74:	cmn	w1, #0x1
  434e78:	b.ne	434e0c <wcrtomb@plt+0x301ec>  // b.any
  434e7c:	mov	w1, #0x3                   	// #3
  434e80:	stp	x23, x24, [sp, #48]
  434e84:	str	w1, [sp, #108]
  434e88:	b	434e94 <wcrtomb@plt+0x30274>
  434e8c:	stp	x23, x24, [sp, #48]
  434e90:	str	wzr, [sp, #108]
  434e94:	bl	450328 <argp_parse@@Base+0x10548>
  434e98:	ldrb	w1, [x0]
  434e9c:	mov	x19, x0
  434ea0:	cbz	w1, 4353d4 <wcrtomb@plt+0x307b4>
  434ea4:	add	x0, x19, #0x1
  434ea8:	mov	x24, x19
  434eac:	mov	x27, #0x0                   	// #0
  434eb0:	mov	x23, #0x0                   	// #0
  434eb4:	cmp	w1, #0x3a
  434eb8:	b.eq	435228 <wcrtomb@plt+0x30608>  // b.none
  434ebc:	cmp	w1, #0x40
  434ec0:	b.eq	435214 <wcrtomb@plt+0x305f4>  // b.none
  434ec4:	cmp	w1, #0xa
  434ec8:	b.eq	4351dc <wcrtomb@plt+0x305bc>  // b.none
  434ecc:	ldrb	w1, [x0], #1
  434ed0:	cbnz	w1, 434eb4 <wcrtomb@plt+0x30294>
  434ed4:	mov	x0, x24
  434ed8:	bl	404bc0 <gethostbyname@plt>
  434edc:	cbz	x0, 435400 <wcrtomb@plt+0x307e0>
  434ee0:	cbz	x27, 434ef0 <wcrtomb@plt+0x302d0>
  434ee4:	ldrb	w0, [x27]
  434ee8:	cmp	w0, #0x0
  434eec:	csel	x27, x27, xzr, ne  // ne = any
  434ef0:	cbz	x21, 43550c <wcrtomb@plt+0x308ec>
  434ef4:	mov	x0, x21
  434ef8:	bl	441558 <argp_parse@@Base+0x1778>
  434efc:	ldr	w28, [sp, #108]
  434f00:	add	x1, x25, #0x20
  434f04:	stp	x1, x0, [sp, #112]
  434f08:	sbfiz	x26, x28, #3, #32
  434f0c:	add	x0, x1, x26
  434f10:	bl	404130 <pipe@plt>
  434f14:	sxtw	x1, w28
  434f18:	str	x1, [sp, #96]
  434f1c:	cmn	w0, #0x1
  434f20:	b.eq	4354f8 <wcrtomb@plt+0x308d8>  // b.none
  434f24:	add	x0, x25, x26
  434f28:	bl	404130 <pipe@plt>
  434f2c:	cmn	w0, #0x1
  434f30:	b.eq	4354f8 <wcrtomb@plt+0x308d8>  // b.none
  434f34:	bl	4041c0 <fork@plt>
  434f38:	mov	w28, w0
  434f3c:	cmn	w0, #0x1
  434f40:	b.eq	4351b4 <wcrtomb@plt+0x30594>  // b.none
  434f44:	cbnz	w0, 435050 <wcrtomb@plt+0x30430>
  434f48:	ldr	x0, [sp, #112]
  434f4c:	mov	w1, #0x0                   	// #0
  434f50:	ldr	w0, [x0, x26]
  434f54:	bl	404a30 <dup2@plt>
  434f58:	tbnz	w0, #31, 434fb0 <wcrtomb@plt+0x30390>
  434f5c:	ldr	x0, [sp, #112]
  434f60:	ldr	w0, [x0, x26]
  434f64:	cbnz	w0, 43542c <wcrtomb@plt+0x3080c>
  434f68:	ldr	x0, [sp, #96]
  434f6c:	add	x0, x25, x0, lsl #3
  434f70:	ldr	w0, [x0, #36]
  434f74:	cbnz	w0, 4353f0 <wcrtomb@plt+0x307d0>
  434f78:	ldr	x0, [sp, #96]
  434f7c:	mov	w1, #0x1                   	// #1
  434f80:	lsl	x28, x0, #3
  434f84:	add	x26, x25, x28
  434f88:	ldr	w0, [x26, #4]
  434f8c:	bl	404a30 <dup2@plt>
  434f90:	tbnz	w0, #31, 434fb0 <wcrtomb@plt+0x30390>
  434f94:	ldr	w0, [x25, x28]
  434f98:	bl	4045c0 <close@plt>
  434f9c:	cbnz	w0, 434fb0 <wcrtomb@plt+0x30390>
  434fa0:	ldr	w0, [x26, #4]
  434fa4:	bl	4045c0 <close@plt>
  434fa8:	cbz	w0, 434fe0 <wcrtomb@plt+0x303c0>
  434fac:	nop
  434fb0:	bl	404ad0 <__errno_location@plt>
  434fb4:	mov	x3, x0
  434fb8:	mov	w2, #0x5                   	// #5
  434fbc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  434fc0:	mov	x0, #0x0                   	// #0
  434fc4:	add	x1, x1, #0x758
  434fc8:	ldr	w26, [x3]
  434fcc:	bl	4049c0 <dcgettext@plt>
  434fd0:	mov	x2, x0
  434fd4:	mov	w0, #0x80                  	// #128
  434fd8:	mov	w1, w26
  434fdc:	bl	404050 <error@plt>
  434fe0:	bl	404120 <getuid@plt>
  434fe4:	bl	403fb0 <setuid@plt>
  434fe8:	cbnz	w0, 43552c <wcrtomb@plt+0x3090c>
  434fec:	bl	4047f0 <getgid@plt>
  434ff0:	bl	404660 <setgid@plt>
  434ff4:	cbnz	w0, 43552c <wcrtomb@plt+0x3090c>
  434ff8:	ldr	x5, [x25, #64]
  434ffc:	cbz	x27, 435438 <wcrtomb@plt+0x30818>
  435000:	ldr	x1, [sp, #120]
  435004:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435008:	mov	x4, x27
  43500c:	mov	x2, x24
  435010:	mov	x0, x21
  435014:	add	x3, x3, #0x780
  435018:	mov	x6, #0x0                   	// #0
  43501c:	bl	404080 <execl@plt>
  435020:	bl	404ad0 <__errno_location@plt>
  435024:	mov	x3, x0
  435028:	mov	w2, #0x5                   	// #5
  43502c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435030:	mov	x0, #0x0                   	// #0
  435034:	add	x1, x1, #0x788
  435038:	ldr	w21, [x3]
  43503c:	bl	4049c0 <dcgettext@plt>
  435040:	mov	x2, x0
  435044:	mov	w0, #0x80                  	// #128
  435048:	mov	w1, w21
  43504c:	bl	404050 <error@plt>
  435050:	ldr	x0, [sp, #96]
  435054:	lsl	x21, x0, #3
  435058:	add	x0, x25, x21
  43505c:	ldr	w0, [x0, #4]
  435060:	bl	4045c0 <close@plt>
  435064:	add	x0, x25, #0x20
  435068:	ldr	w0, [x0, x21]
  43506c:	bl	4045c0 <close@plt>
  435070:	mov	x0, x23
  435074:	bl	403ff0 <strlen@plt>
  435078:	mov	x21, x0
  43507c:	add	x0, x0, #0x3e8
  435080:	bl	4501a0 <argp_parse@@Base+0x103c0>
  435084:	add	x21, x21, #0x2
  435088:	mov	x4, x23
  43508c:	mov	x23, x0
  435090:	mov	x2, #0xffffffffffffffff    	// #-1
  435094:	mov	w1, #0x1                   	// #1
  435098:	add	x21, x23, x21
  43509c:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4350a0:	add	x3, x3, #0x7a8
  4350a4:	bl	404010 <__sprintf_chk@plt>
  4350a8:	mov	x0, x21
  4350ac:	mov	w4, w20
  4350b0:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4350b4:	mov	x2, #0xffffffffffffffff    	// #-1
  4350b8:	add	x3, x3, #0x7b0
  4350bc:	mov	w1, #0x1                   	// #1
  4350c0:	bl	404010 <__sprintf_chk@plt>
  4350c4:	and	w0, w20, #0x3
  4350c8:	cmp	w0, #0x1
  4350cc:	b.eq	435370 <wcrtomb@plt+0x30750>  // b.none
  4350d0:	cmp	w0, #0x2
  4350d4:	b.ne	435340 <wcrtomb@plt+0x30720>  // b.any
  4350d8:	mov	x0, x21
  4350dc:	bl	403ff0 <strlen@plt>
  4350e0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4350e4:	add	x1, x1, #0x7c8
  4350e8:	add	x2, x21, x0
  4350ec:	ldr	w3, [x1]
  4350f0:	str	w3, [x21, x0]
  4350f4:	ldur	w0, [x1, #3]
  4350f8:	stur	w0, [x2, #3]
  4350fc:	tbnz	w20, #10, 435290 <wcrtomb@plt+0x30670>
  435100:	tbnz	w20, #6, 435264 <wcrtomb@plt+0x30644>
  435104:	tbnz	w20, #12, 435238 <wcrtomb@plt+0x30618>
  435108:	tbnz	w20, #7, 43531c <wcrtomb@plt+0x306fc>
  43510c:	tbnz	w20, #8, 4352f4 <wcrtomb@plt+0x306d4>
  435110:	tbnz	w20, #11, 4353ac <wcrtomb@plt+0x3078c>
  435114:	and	w0, w20, #0x1ff000
  435118:	and	w0, w0, #0xfff01fff
  43511c:	cbnz	w0, 4352bc <wcrtomb@plt+0x3069c>
  435120:	tbnz	w20, #9, 435384 <wcrtomb@plt+0x30764>
  435124:	mov	x0, x23
  435128:	bl	403ff0 <strlen@plt>
  43512c:	ldr	x4, [sp, #96]
  435130:	mov	x3, x0
  435134:	add	x20, x25, #0x20
  435138:	mov	w2, #0xa                   	// #10
  43513c:	mov	x1, #0x1                   	// #1
  435140:	add	x26, x0, x1
  435144:	lsl	x24, x4, #3
  435148:	strh	w2, [x23, x3]
  43514c:	add	x20, x20, x24
  435150:	mov	w0, #0xd                   	// #13
  435154:	bl	404270 <signal@plt>
  435158:	mov	x21, x0
  43515c:	mov	x2, x26
  435160:	mov	x1, x23
  435164:	ldr	w0, [x20, #4]
  435168:	bl	4443a8 <argp_parse@@Base+0x45c8>
  43516c:	mov	x1, x21
  435170:	mov	x21, x0
  435174:	mov	w0, #0xd                   	// #13
  435178:	bl	404270 <signal@plt>
  43517c:	cmp	x26, x21
  435180:	b.ne	435454 <wcrtomb@plt+0x30834>  // b.any
  435184:	ldr	w0, [sp, #108]
  435188:	add	x1, sp, #0x80
  43518c:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  435190:	cbz	x0, 4354e8 <wcrtomb@plt+0x308c8>
  435194:	mov	w2, #0xa                   	// #10
  435198:	mov	x1, #0x0                   	// #0
  43519c:	bl	404770 <strtol@plt>
  4351a0:	tbnz	x0, #63, 4354d0 <wcrtomb@plt+0x308b0>
  4351a4:	ldr	w1, [sp, #108]
  4351a8:	mov	x0, x23
  4351ac:	add	w28, w1, w22
  4351b0:	bl	4047b0 <free@plt>
  4351b4:	mov	x0, x19
  4351b8:	bl	4047b0 <free@plt>
  4351bc:	mov	w0, w28
  4351c0:	ldp	x19, x20, [sp, #16]
  4351c4:	ldp	x21, x22, [sp, #32]
  4351c8:	ldp	x23, x24, [sp, #48]
  4351cc:	ldp	x25, x26, [sp, #64]
  4351d0:	ldp	x27, x28, [sp, #80]
  4351d4:	ldp	x29, x30, [sp], #192
  4351d8:	ret
  4351dc:	mov	x0, x19
  4351e0:	bl	4047b0 <free@plt>
  4351e4:	mov	w28, #0xffffffff            	// #-1
  4351e8:	bl	404ad0 <__errno_location@plt>
  4351ec:	mov	w2, #0x2                   	// #2
  4351f0:	ldp	x23, x24, [sp, #48]
  4351f4:	str	w2, [x0]
  4351f8:	mov	w0, w28
  4351fc:	ldp	x19, x20, [sp, #16]
  435200:	ldp	x21, x22, [sp, #32]
  435204:	ldp	x25, x26, [sp, #64]
  435208:	ldp	x27, x28, [sp, #80]
  43520c:	ldp	x29, x30, [sp], #192
  435210:	ret
  435214:	cbnz	x27, 434ecc <wcrtomb@plt+0x302ac>
  435218:	mov	x27, x24
  43521c:	mov	x24, x0
  435220:	sturb	wzr, [x0, #-1]
  435224:	b	434ecc <wcrtomb@plt+0x302ac>
  435228:	cbnz	x23, 434ecc <wcrtomb@plt+0x302ac>
  43522c:	mov	x23, x0
  435230:	sturb	wzr, [x0, #-1]
  435234:	b	434ecc <wcrtomb@plt+0x302ac>
  435238:	mov	x0, x21
  43523c:	bl	403ff0 <strlen@plt>
  435240:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435244:	add	x1, x1, #0x800
  435248:	add	x2, x21, x0
  43524c:	ldr	x3, [x1]
  435250:	str	x3, [x21, x0]
  435254:	ldrb	w0, [x1, #8]
  435258:	strb	w0, [x2, #8]
  43525c:	tbz	w20, #7, 43510c <wcrtomb@plt+0x304ec>
  435260:	b	43531c <wcrtomb@plt+0x306fc>
  435264:	mov	x0, x21
  435268:	bl	403ff0 <strlen@plt>
  43526c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435270:	add	x1, x1, #0x7f0
  435274:	add	x2, x21, x0
  435278:	ldr	x3, [x1]
  43527c:	str	x3, [x21, x0]
  435280:	ldrb	w0, [x1, #8]
  435284:	strb	w0, [x2, #8]
  435288:	tbz	w20, #12, 435108 <wcrtomb@plt+0x304e8>
  43528c:	b	435238 <wcrtomb@plt+0x30618>
  435290:	mov	x0, x21
  435294:	bl	403ff0 <strlen@plt>
  435298:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43529c:	add	x1, x1, #0x7e0
  4352a0:	add	x2, x21, x0
  4352a4:	ldr	x3, [x1]
  4352a8:	str	x3, [x21, x0]
  4352ac:	ldrh	w0, [x1, #8]
  4352b0:	strh	w0, [x2, #8]
  4352b4:	tbz	w20, #6, 435104 <wcrtomb@plt+0x304e4>
  4352b8:	b	435264 <wcrtomb@plt+0x30644>
  4352bc:	mov	x0, x21
  4352c0:	bl	403ff0 <strlen@plt>
  4352c4:	mov	x3, #0x4f7c                	// #20348
  4352c8:	add	x1, x0, #0x8
  4352cc:	movk	x3, #0x525f, lsl #16
  4352d0:	mov	x2, #0x4f7c                	// #20348
  4352d4:	movk	x3, #0x5953, lsl #32
  4352d8:	movk	x2, #0x535f, lsl #16
  4352dc:	movk	x3, #0x434e, lsl #48
  4352e0:	movk	x2, #0x4e59, lsl #32
  4352e4:	str	x3, [x21, x0]
  4352e8:	movk	x2, #0x43, lsl #48
  4352ec:	str	x2, [x21, x1]
  4352f0:	b	435120 <wcrtomb@plt+0x30500>
  4352f4:	mov	x0, x21
  4352f8:	bl	403ff0 <strlen@plt>
  4352fc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435300:	add	x1, x1, #0x810
  435304:	add	x2, x21, x0
  435308:	ldr	x3, [x1]
  43530c:	str	x3, [x21, x0]
  435310:	ldrh	w0, [x1, #8]
  435314:	strh	w0, [x2, #8]
  435318:	b	435110 <wcrtomb@plt+0x304f0>
  43531c:	mov	x0, x21
  435320:	bl	403ff0 <strlen@plt>
  435324:	mov	x1, #0x4f7c                	// #20348
  435328:	movk	x1, #0x455f, lsl #16
  43532c:	movk	x1, #0x4358, lsl #32
  435330:	movk	x1, #0x4c, lsl #48
  435334:	str	x1, [x21, x0]
  435338:	tbz	w20, #8, 435110 <wcrtomb@plt+0x304f0>
  43533c:	b	4352f4 <wcrtomb@plt+0x306d4>
  435340:	cbnz	w0, 43552c <wcrtomb@plt+0x3090c>
  435344:	mov	x0, x21
  435348:	bl	403ff0 <strlen@plt>
  43534c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435350:	add	x1, x1, #0x7b8
  435354:	add	x2, x21, x0
  435358:	ldr	x3, [x1]
  43535c:	str	x3, [x21, x0]
  435360:	ldrb	w0, [x1, #8]
  435364:	strb	w0, [x2, #8]
  435368:	tbz	w20, #10, 435100 <wcrtomb@plt+0x304e0>
  43536c:	b	435290 <wcrtomb@plt+0x30670>
  435370:	mov	x0, x21
  435374:	bl	403ff0 <strlen@plt>
  435378:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43537c:	add	x1, x1, #0x7d0
  435380:	b	435354 <wcrtomb@plt+0x30734>
  435384:	mov	x0, x21
  435388:	bl	403ff0 <strlen@plt>
  43538c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435390:	add	x1, x1, #0x830
  435394:	add	x2, x21, x0
  435398:	ldr	x3, [x1]
  43539c:	str	x3, [x21, x0]
  4353a0:	ldrb	w0, [x1, #8]
  4353a4:	strb	w0, [x2, #8]
  4353a8:	b	435124 <wcrtomb@plt+0x30504>
  4353ac:	mov	x0, x21
  4353b0:	bl	403ff0 <strlen@plt>
  4353b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4353b8:	add	x1, x1, #0x820
  4353bc:	add	x2, x21, x0
  4353c0:	ldr	x3, [x1]
  4353c4:	str	x3, [x21, x0]
  4353c8:	ldr	w0, [x1, #8]
  4353cc:	str	w0, [x2, #8]
  4353d0:	b	435114 <wcrtomb@plt+0x304f4>
  4353d4:	bl	404bc0 <gethostbyname@plt>
  4353d8:	mov	x24, x19
  4353dc:	mov	x23, x0
  4353e0:	cbz	x0, 4353fc <wcrtomb@plt+0x307dc>
  4353e4:	mov	x23, #0x0                   	// #0
  4353e8:	mov	x27, #0x0                   	// #0
  4353ec:	b	434ef0 <wcrtomb@plt+0x302d0>
  4353f0:	bl	4045c0 <close@plt>
  4353f4:	cbnz	w0, 434fb0 <wcrtomb@plt+0x30390>
  4353f8:	b	434f78 <wcrtomb@plt+0x30358>
  4353fc:	mov	x27, #0x0                   	// #0
  435400:	mov	w2, #0x5                   	// #5
  435404:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435408:	mov	x0, #0x0                   	// #0
  43540c:	add	x1, x1, #0x730
  435410:	bl	4049c0 <dcgettext@plt>
  435414:	mov	x2, x0
  435418:	mov	x3, x24
  43541c:	mov	w1, #0x0                   	// #0
  435420:	mov	w0, #0x80                  	// #128
  435424:	bl	404050 <error@plt>
  435428:	b	434ee0 <wcrtomb@plt+0x302c0>
  43542c:	bl	4045c0 <close@plt>
  435430:	cbnz	w0, 434fb0 <wcrtomb@plt+0x30390>
  435434:	b	434f68 <wcrtomb@plt+0x30348>
  435438:	ldr	x1, [sp, #120]
  43543c:	mov	x3, x5
  435440:	mov	x2, x24
  435444:	mov	x0, x21
  435448:	mov	x4, #0x0                   	// #0
  43544c:	bl	404080 <execl@plt>
  435450:	b	435020 <wcrtomb@plt+0x30400>
  435454:	ldr	w0, [x25, x24]
  435458:	bl	4045c0 <close@plt>
  43545c:	ldr	w0, [x20, #4]
  435460:	bl	4045c0 <close@plt>
  435464:	mov	w0, #0xffffffff            	// #-1
  435468:	str	w0, [x25, x24]
  43546c:	str	w0, [x20, #4]
  435470:	bl	404ad0 <__errno_location@plt>
  435474:	mov	x20, x0
  435478:	mov	w1, #0x5                   	// #5
  43547c:	mov	w21, w1
  435480:	str	w1, [x0]
  435484:	ldr	x0, [sp, #96]
  435488:	lsl	x27, x0, #3
  43548c:	mov	x0, x23
  435490:	bl	4047b0 <free@plt>
  435494:	mov	x0, x19
  435498:	bl	4047b0 <free@plt>
  43549c:	ldr	w0, [x25, x27]
  4354a0:	add	x19, x25, #0x20
  4354a4:	add	x19, x19, x27
  4354a8:	bl	4045c0 <close@plt>
  4354ac:	ldr	w0, [x19, #4]
  4354b0:	bl	4045c0 <close@plt>
  4354b4:	mov	w0, #0xffffffff            	// #-1
  4354b8:	str	w0, [x25, x27]
  4354bc:	ldp	x23, x24, [sp, #48]
  4354c0:	str	w0, [x19, #4]
  4354c4:	mov	w28, w0
  4354c8:	str	w21, [x20]
  4354cc:	b	434e1c <wcrtomb@plt+0x301fc>
  4354d0:	bl	404ad0 <__errno_location@plt>
  4354d4:	mov	x20, x0
  4354d8:	mov	w0, #0x5                   	// #5
  4354dc:	mov	w21, w0
  4354e0:	str	w0, [x20]
  4354e4:	b	435484 <wcrtomb@plt+0x30864>
  4354e8:	bl	404ad0 <__errno_location@plt>
  4354ec:	ldr	w21, [x0]
  4354f0:	mov	x20, x0
  4354f4:	b	435484 <wcrtomb@plt+0x30864>
  4354f8:	mov	x0, x19
  4354fc:	mov	w28, #0xffffffff            	// #-1
  435500:	bl	4047b0 <free@plt>
  435504:	ldp	x23, x24, [sp, #48]
  435508:	b	434e1c <wcrtomb@plt+0x301fc>
  43550c:	mov	x0, x19
  435510:	bl	4047b0 <free@plt>
  435514:	mov	w28, #0xffffffff            	// #-1
  435518:	bl	404ad0 <__errno_location@plt>
  43551c:	mov	w2, #0x5                   	// #5
  435520:	ldp	x23, x24, [sp, #48]
  435524:	str	w2, [x0]
  435528:	b	434e1c <wcrtomb@plt+0x301fc>
  43552c:	bl	404650 <abort@plt>
  435530:	stp	x29, x30, [sp, #-144]!
  435534:	mov	x1, #0x1                   	// #1
  435538:	mov	x29, sp
  43553c:	stp	x21, x22, [sp, #32]
  435540:	sxtw	x21, w0
  435544:	mov	w0, #0xd                   	// #13
  435548:	stp	x19, x20, [sp, #16]
  43554c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  435550:	add	x19, x19, #0x240
  435554:	stp	x23, x24, [sp, #48]
  435558:	add	x23, x19, #0x20
  43555c:	str	x25, [sp, #64]
  435560:	sbfiz	x25, x21, #3, #32
  435564:	add	x23, x23, x25
  435568:	bl	404270 <signal@plt>
  43556c:	mov	x22, x0
  435570:	mov	x2, #0x2                   	// #2
  435574:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435578:	add	x1, x1, #0x840
  43557c:	ldr	w0, [x23, #4]
  435580:	bl	4443a8 <argp_parse@@Base+0x45c8>
  435584:	mov	x24, x0
  435588:	mov	x1, x22
  43558c:	mov	w0, #0xd                   	// #13
  435590:	bl	404270 <signal@plt>
  435594:	bl	404ad0 <__errno_location@plt>
  435598:	mov	x22, x0
  43559c:	cmp	x24, #0x2
  4355a0:	b.ne	435614 <wcrtomb@plt+0x309f4>  // b.any
  4355a4:	mov	w0, w21
  4355a8:	add	x1, sp, #0x50
  4355ac:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  4355b0:	cbz	x0, 435654 <wcrtomb@plt+0x30a34>
  4355b4:	mov	w2, #0xa                   	// #10
  4355b8:	mov	x1, #0x0                   	// #0
  4355bc:	bl	404770 <strtol@plt>
  4355c0:	tbnz	x0, #63, 435640 <wcrtomb@plt+0x30a20>
  4355c4:	ldr	w24, [x22]
  4355c8:	mov	w20, w0
  4355cc:	lsl	x21, x21, #3
  4355d0:	add	x23, x19, #0x20
  4355d4:	add	x23, x23, x21
  4355d8:	ldr	w0, [x19, x21]
  4355dc:	bl	4045c0 <close@plt>
  4355e0:	ldr	w0, [x23, #4]
  4355e4:	bl	4045c0 <close@plt>
  4355e8:	mov	w0, #0xffffffff            	// #-1
  4355ec:	str	w0, [x19, x21]
  4355f0:	str	w0, [x23, #4]
  4355f4:	str	w24, [x22]
  4355f8:	mov	w0, w20
  4355fc:	ldp	x19, x20, [sp, #16]
  435600:	ldp	x21, x22, [sp, #32]
  435604:	ldp	x23, x24, [sp, #48]
  435608:	ldr	x25, [sp, #64]
  43560c:	ldp	x29, x30, [sp], #144
  435610:	ret
  435614:	ldr	w0, [x19, x25]
  435618:	bl	4045c0 <close@plt>
  43561c:	ldr	w0, [x23, #4]
  435620:	bl	4045c0 <close@plt>
  435624:	mov	w0, #0xffffffff            	// #-1
  435628:	str	w0, [x19, x25]
  43562c:	str	w0, [x23, #4]
  435630:	mov	w20, w0
  435634:	mov	w0, #0x5                   	// #5
  435638:	str	w0, [x22]
  43563c:	b	4355f8 <wcrtomb@plt+0x309d8>
  435640:	mov	w0, #0x5                   	// #5
  435644:	mov	w20, #0xffffffff            	// #-1
  435648:	mov	w24, w0
  43564c:	str	w0, [x22]
  435650:	b	4355cc <wcrtomb@plt+0x309ac>
  435654:	ldr	w24, [x22]
  435658:	mov	w20, #0xffffffff            	// #-1
  43565c:	b	4355cc <wcrtomb@plt+0x309ac>
  435660:	stp	x29, x30, [sp, #-208]!
  435664:	mov	x4, x2
  435668:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43566c:	mov	x29, sp
  435670:	stp	x21, x22, [sp, #32]
  435674:	mov	w22, w0
  435678:	add	x3, x3, #0x848
  43567c:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  435680:	add	x21, x21, #0x240
  435684:	stp	x19, x20, [sp, #16]
  435688:	mov	x20, x1
  43568c:	mov	w1, #0x1                   	// #1
  435690:	stp	x23, x24, [sp, #48]
  435694:	mov	x23, x2
  435698:	mov	x2, #0x40                  	// #64
  43569c:	stp	x25, x26, [sp, #64]
  4356a0:	sbfiz	x25, x22, #3, #32
  4356a4:	add	x26, x21, #0x20
  4356a8:	add	x0, sp, #0x50
  4356ac:	add	x26, x26, x25
  4356b0:	bl	404010 <__sprintf_chk@plt>
  4356b4:	add	x0, sp, #0x50
  4356b8:	bl	403ff0 <strlen@plt>
  4356bc:	mov	x1, #0x1                   	// #1
  4356c0:	mov	x19, x0
  4356c4:	mov	w0, #0xd                   	// #13
  4356c8:	bl	404270 <signal@plt>
  4356cc:	mov	x24, x0
  4356d0:	ldr	w0, [x26, #4]
  4356d4:	mov	x2, x19
  4356d8:	add	x1, sp, #0x50
  4356dc:	bl	4443a8 <argp_parse@@Base+0x45c8>
  4356e0:	mov	x1, x24
  4356e4:	mov	x24, x0
  4356e8:	mov	w0, #0xd                   	// #13
  4356ec:	bl	404270 <signal@plt>
  4356f0:	cmp	x19, x24
  4356f4:	b.ne	4357e0 <wcrtomb@plt+0x30bc0>  // b.any
  4356f8:	mov	w0, w22
  4356fc:	add	x1, sp, #0x90
  435700:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  435704:	cbz	x0, 4357c0 <wcrtomb@plt+0x30ba0>
  435708:	mov	w2, #0xa                   	// #10
  43570c:	mov	x1, #0x0                   	// #0
  435710:	bl	404770 <strtol@plt>
  435714:	mov	x22, x0
  435718:	tbnz	x0, #63, 4357b4 <wcrtomb@plt+0x30b94>
  43571c:	cmp	x23, x0
  435720:	mov	x24, x0
  435724:	b.cc	4357c0 <wcrtomb@plt+0x30ba0>  // b.lo, b.ul, b.last
  435728:	cbz	x0, 435798 <wcrtomb@plt+0x30b78>
  43572c:	mov	x19, #0x0                   	// #0
  435730:	b	435740 <wcrtomb@plt+0x30b20>
  435734:	add	x20, x20, x0
  435738:	cmp	x22, x19
  43573c:	b.ls	435798 <wcrtomb@plt+0x30b78>  // b.plast
  435740:	ldr	w0, [x21, x25]
  435744:	mov	x1, x20
  435748:	sub	x2, x22, x19
  43574c:	add	x23, x21, x25
  435750:	bl	44f230 <argp_parse@@Base+0xf450>
  435754:	sub	x1, x0, #0x1
  435758:	add	x19, x19, x0
  43575c:	cmn	x1, #0x3
  435760:	b.ls	435734 <wcrtomb@plt+0x30b14>  // b.plast
  435764:	ldr	w0, [x23]
  435768:	add	x21, x21, #0x20
  43576c:	add	x21, x21, x25
  435770:	mov	x24, #0xffffffffffffffff    	// #-1
  435774:	bl	4045c0 <close@plt>
  435778:	ldr	w0, [x21, #4]
  43577c:	bl	4045c0 <close@plt>
  435780:	mov	w0, #0xffffffff            	// #-1
  435784:	str	w0, [x23]
  435788:	str	w0, [x21, #4]
  43578c:	bl	404ad0 <__errno_location@plt>
  435790:	mov	w1, #0x5                   	// #5
  435794:	str	w1, [x0]
  435798:	mov	x0, x24
  43579c:	ldp	x19, x20, [sp, #16]
  4357a0:	ldp	x21, x22, [sp, #32]
  4357a4:	ldp	x23, x24, [sp, #48]
  4357a8:	ldp	x25, x26, [sp, #64]
  4357ac:	ldp	x29, x30, [sp], #208
  4357b0:	ret
  4357b4:	bl	404ad0 <__errno_location@plt>
  4357b8:	mov	w1, #0x5                   	// #5
  4357bc:	str	w1, [x0]
  4357c0:	mov	x24, #0xffffffffffffffff    	// #-1
  4357c4:	mov	x0, x24
  4357c8:	ldp	x19, x20, [sp, #16]
  4357cc:	ldp	x21, x22, [sp, #32]
  4357d0:	ldp	x23, x24, [sp, #48]
  4357d4:	ldp	x25, x26, [sp, #64]
  4357d8:	ldp	x29, x30, [sp], #208
  4357dc:	ret
  4357e0:	ldr	w0, [x21, x25]
  4357e4:	mov	x24, #0xffffffffffffffff    	// #-1
  4357e8:	bl	4045c0 <close@plt>
  4357ec:	ldr	w0, [x26, #4]
  4357f0:	bl	4045c0 <close@plt>
  4357f4:	mov	w0, #0xffffffff            	// #-1
  4357f8:	str	w0, [x21, x25]
  4357fc:	str	w0, [x26, #4]
  435800:	bl	404ad0 <__errno_location@plt>
  435804:	mov	w1, #0x5                   	// #5
  435808:	str	w1, [x0]
  43580c:	b	435798 <wcrtomb@plt+0x30b78>
  435810:	stp	x29, x30, [sp, #-224]!
  435814:	mov	x4, x2
  435818:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43581c:	mov	x29, sp
  435820:	stp	x25, x26, [sp, #64]
  435824:	sxtw	x25, w0
  435828:	add	x3, x3, #0x850
  43582c:	stp	x19, x20, [sp, #16]
  435830:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  435834:	add	x20, x20, #0x240
  435838:	mov	x19, x2
  43583c:	mov	x26, x1
  435840:	mov	x2, #0x40                  	// #64
  435844:	mov	w1, #0x1                   	// #1
  435848:	stp	x23, x24, [sp, #48]
  43584c:	add	x23, x20, #0x20
  435850:	add	x0, sp, #0x60
  435854:	str	x27, [sp, #80]
  435858:	sbfiz	x27, x25, #3, #32
  43585c:	add	x23, x23, x27
  435860:	stp	x21, x22, [sp, #32]
  435864:	bl	404010 <__sprintf_chk@plt>
  435868:	add	x0, sp, #0x60
  43586c:	bl	403ff0 <strlen@plt>
  435870:	mov	x1, #0x1                   	// #1
  435874:	mov	x21, x0
  435878:	mov	w0, #0xd                   	// #13
  43587c:	bl	404270 <signal@plt>
  435880:	mov	x24, x0
  435884:	ldr	w0, [x23, #4]
  435888:	mov	x2, x21
  43588c:	add	x1, sp, #0x60
  435890:	bl	4443a8 <argp_parse@@Base+0x45c8>
  435894:	mov	x1, x24
  435898:	mov	x24, x0
  43589c:	mov	w0, #0xd                   	// #13
  4358a0:	bl	404270 <signal@plt>
  4358a4:	cmp	x21, x24
  4358a8:	b.ne	435968 <wcrtomb@plt+0x30d48>  // b.any
  4358ac:	mov	x1, #0x1                   	// #1
  4358b0:	mov	w0, #0xd                   	// #13
  4358b4:	bl	404270 <signal@plt>
  4358b8:	mov	x21, x0
  4358bc:	ldr	w0, [x23, #4]
  4358c0:	mov	x2, x19
  4358c4:	mov	x1, x26
  4358c8:	bl	4443a8 <argp_parse@@Base+0x45c8>
  4358cc:	mov	x1, x21
  4358d0:	mov	x21, x0
  4358d4:	mov	w0, #0xd                   	// #13
  4358d8:	bl	404270 <signal@plt>
  4358dc:	cmp	x19, x21
  4358e0:	b.eq	435938 <wcrtomb@plt+0x30d18>  // b.none
  4358e4:	lsl	x25, x25, #3
  4358e8:	add	x19, x20, #0x20
  4358ec:	add	x19, x19, x25
  4358f0:	ldr	w0, [x20, x25]
  4358f4:	bl	4045c0 <close@plt>
  4358f8:	ldr	w0, [x19, #4]
  4358fc:	bl	4045c0 <close@plt>
  435900:	mov	w0, #0xffffffff            	// #-1
  435904:	str	w0, [x20, x25]
  435908:	str	w0, [x19, #4]
  43590c:	bl	404ad0 <__errno_location@plt>
  435910:	mov	w1, #0x5                   	// #5
  435914:	str	w1, [x0]
  435918:	mov	x0, x21
  43591c:	ldp	x19, x20, [sp, #16]
  435920:	ldp	x21, x22, [sp, #32]
  435924:	ldp	x23, x24, [sp, #48]
  435928:	ldp	x25, x26, [sp, #64]
  43592c:	ldr	x27, [sp, #80]
  435930:	ldp	x29, x30, [sp], #224
  435934:	ret
  435938:	mov	w0, w25
  43593c:	add	x1, sp, #0xa0
  435940:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  435944:	cbz	x0, 4359ac <wcrtomb@plt+0x30d8c>
  435948:	mov	w2, #0xa                   	// #10
  43594c:	mov	x1, #0x0                   	// #0
  435950:	bl	404770 <strtol@plt>
  435954:	tbnz	x0, #63, 435998 <wcrtomb@plt+0x30d78>
  435958:	cmp	x21, x0
  43595c:	b.eq	435918 <wcrtomb@plt+0x30cf8>  // b.none
  435960:	mov	x21, x0
  435964:	b	4358e4 <wcrtomb@plt+0x30cc4>
  435968:	ldr	w0, [x20, x27]
  43596c:	mov	x21, #0x0                   	// #0
  435970:	bl	4045c0 <close@plt>
  435974:	ldr	w0, [x23, #4]
  435978:	bl	4045c0 <close@plt>
  43597c:	mov	w0, #0xffffffff            	// #-1
  435980:	str	w0, [x20, x27]
  435984:	str	w0, [x23, #4]
  435988:	bl	404ad0 <__errno_location@plt>
  43598c:	mov	w1, #0x5                   	// #5
  435990:	str	w1, [x0]
  435994:	b	435918 <wcrtomb@plt+0x30cf8>
  435998:	bl	404ad0 <__errno_location@plt>
  43599c:	mov	x21, #0x0                   	// #0
  4359a0:	mov	w1, #0x5                   	// #5
  4359a4:	str	w1, [x0]
  4359a8:	b	435918 <wcrtomb@plt+0x30cf8>
  4359ac:	mov	x21, #0x0                   	// #0
  4359b0:	b	435918 <wcrtomb@plt+0x30cf8>
  4359b4:	nop
  4359b8:	stp	x29, x30, [sp, #-224]!
  4359bc:	cmp	x1, #0x0
  4359c0:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  4359c4:	mov	x29, sp
  4359c8:	mov	w5, w2
  4359cc:	cneg	x7, x1, lt  // lt = tstop
  4359d0:	add	x4, sp, #0x5c
  4359d4:	stp	x19, x20, [sp, #16]
  4359d8:	mov	w20, w0
  4359dc:	movk	x8, #0xcccd
  4359e0:	stp	x21, x22, [sp, #32]
  4359e4:	stp	x23, x24, [sp, #48]
  4359e8:	strb	wzr, [sp, #92]
  4359ec:	nop
  4359f0:	umulh	x6, x7, x8
  4359f4:	mov	x9, x4
  4359f8:	cmp	x7, #0x9
  4359fc:	lsr	x6, x6, #3
  435a00:	add	x3, x6, x6, lsl #2
  435a04:	sub	x3, x7, x3, lsl #1
  435a08:	mov	x7, x6
  435a0c:	add	w3, w3, #0x30
  435a10:	strb	w3, [x4, #-1]!
  435a14:	b.hi	4359f0 <wcrtomb@plt+0x30dd0>  // b.pmore
  435a18:	tbz	x1, #63, 435a28 <wcrtomb@plt+0x30e08>
  435a1c:	mov	w0, #0x2d                  	// #45
  435a20:	sturb	w0, [x4, #-1]
  435a24:	sub	x4, x9, #0x2
  435a28:	cmp	w5, #0x2
  435a2c:	b.hi	435bb8 <wcrtomb@plt+0x30f98>  // b.pmore
  435a30:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435a34:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  435a38:	add	x3, x3, #0x858
  435a3c:	add	x22, x22, #0x240
  435a40:	mov	x2, #0x40                  	// #64
  435a44:	mov	w1, #0x1                   	// #1
  435a48:	sbfiz	x24, x20, #3, #32
  435a4c:	add	x21, x22, #0x20
  435a50:	add	x0, sp, #0x60
  435a54:	add	x21, x21, x24
  435a58:	bl	404010 <__sprintf_chk@plt>
  435a5c:	add	x0, sp, #0x60
  435a60:	bl	403ff0 <strlen@plt>
  435a64:	mov	x1, #0x1                   	// #1
  435a68:	mov	x19, x0
  435a6c:	mov	w0, #0xd                   	// #13
  435a70:	bl	404270 <signal@plt>
  435a74:	mov	x23, x0
  435a78:	ldr	w0, [x21, #4]
  435a7c:	mov	x2, x19
  435a80:	add	x1, sp, #0x60
  435a84:	bl	4443a8 <argp_parse@@Base+0x45c8>
  435a88:	mov	x1, x23
  435a8c:	mov	x23, x0
  435a90:	mov	w0, #0xd                   	// #13
  435a94:	bl	404270 <signal@plt>
  435a98:	cmp	x19, x23
  435a9c:	b.ne	435b84 <wcrtomb@plt+0x30f64>  // b.any
  435aa0:	mov	w0, w20
  435aa4:	add	x1, sp, #0xa0
  435aa8:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  435aac:	cbz	x0, 435b1c <wcrtomb@plt+0x30efc>
  435ab0:	ldrb	w3, [x0]
  435ab4:	cmp	w3, #0x20
  435ab8:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  435abc:	b.eq	435b60 <wcrtomb@plt+0x30f40>  // b.none
  435ac0:	sub	w1, w3, #0x2b
  435ac4:	mov	w2, #0xfd                  	// #253
  435ac8:	tst	w1, w2
  435acc:	cset	w1, eq  // eq = none
  435ad0:	cinc	x2, x0, eq  // eq = none
  435ad4:	add	x2, x2, #0x1
  435ad8:	ldrb	w1, [x0, w1, uxtw]
  435adc:	mov	x0, #0x0                   	// #0
  435ae0:	sub	w1, w1, #0x30
  435ae4:	cmp	w1, #0x9
  435ae8:	b.hi	435b20 <wcrtomb@plt+0x30f00>  // b.pmore
  435aec:	cmp	w3, #0x2d
  435af0:	b.ne	435b08 <wcrtomb@plt+0x30ee8>  // b.any
  435af4:	b	435b44 <wcrtomb@plt+0x30f24>
  435af8:	ldrb	w1, [x2], #1
  435afc:	sub	w1, w1, #0x30
  435b00:	cmp	w1, #0x9
  435b04:	b.hi	435b20 <wcrtomb@plt+0x30f00>  // b.pmore
  435b08:	add	x0, x0, x0, lsl #2
  435b0c:	lsl	x3, x0, #1
  435b10:	add	x0, x3, w1, sxtw
  435b14:	cmp	x0, x3
  435b18:	b.ge	435af8 <wcrtomb@plt+0x30ed8>  // b.tcont
  435b1c:	mov	x0, #0xffffffffffffffff    	// #-1
  435b20:	ldp	x19, x20, [sp, #16]
  435b24:	ldp	x21, x22, [sp, #32]
  435b28:	ldp	x23, x24, [sp, #48]
  435b2c:	ldp	x29, x30, [sp], #224
  435b30:	ret
  435b34:	ldrb	w1, [x2], #1
  435b38:	sub	w1, w1, #0x30
  435b3c:	cmp	w1, #0x9
  435b40:	b.hi	435b20 <wcrtomb@plt+0x30f00>  // b.pmore
  435b44:	add	x0, x0, x0, lsl #2
  435b48:	lsl	x3, x0, #1
  435b4c:	sub	x0, x3, w1, sxtw
  435b50:	cmp	x3, x0
  435b54:	b.ge	435b34 <wcrtomb@plt+0x30f14>  // b.tcont
  435b58:	mov	x0, #0xffffffffffffffff    	// #-1
  435b5c:	b	435b20 <wcrtomb@plt+0x30f00>
  435b60:	ldrb	w3, [x0, #1]!
  435b64:	cmp	w3, #0x20
  435b68:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  435b6c:	b.ne	435ac0 <wcrtomb@plt+0x30ea0>  // b.any
  435b70:	ldrb	w3, [x0, #1]!
  435b74:	cmp	w3, #0x20
  435b78:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  435b7c:	b.ne	435ac0 <wcrtomb@plt+0x30ea0>  // b.any
  435b80:	b	435b60 <wcrtomb@plt+0x30f40>
  435b84:	ldr	w0, [x22, x24]
  435b88:	bl	4045c0 <close@plt>
  435b8c:	ldr	w0, [x21, #4]
  435b90:	bl	4045c0 <close@plt>
  435b94:	mov	w0, #0xffffffff            	// #-1
  435b98:	str	w0, [x22, x24]
  435b9c:	str	w0, [x21, #4]
  435ba0:	bl	404ad0 <__errno_location@plt>
  435ba4:	mov	x1, x0
  435ba8:	mov	w2, #0x5                   	// #5
  435bac:	mov	x0, #0xffffffffffffffff    	// #-1
  435bb0:	str	w2, [x1]
  435bb4:	b	435b20 <wcrtomb@plt+0x30f00>
  435bb8:	bl	404650 <abort@plt>
  435bbc:	nop
  435bc0:	stp	x29, x30, [sp, #-224]!
  435bc4:	mov	x29, sp
  435bc8:	stp	x19, x20, [sp, #16]
  435bcc:	mov	w20, w0
  435bd0:	mov	w0, #0x6d02                	// #27906
  435bd4:	movk	w0, #0x8030, lsl #16
  435bd8:	mov	x19, x2
  435bdc:	cmp	w1, w0
  435be0:	b.eq	435c14 <wcrtomb@plt+0x30ff4>  // b.none
  435be4:	mov	w0, #0x6d01                	// #27905
  435be8:	movk	w0, #0x4008, lsl #16
  435bec:	cmp	w1, w0
  435bf0:	b.eq	435d1c <wcrtomb@plt+0x310fc>  // b.none
  435bf4:	bl	404ad0 <__errno_location@plt>
  435bf8:	mov	x1, x0
  435bfc:	mov	w2, #0x5f                  	// #95
  435c00:	mov	w0, #0xffffffff            	// #-1
  435c04:	str	w2, [x1]
  435c08:	ldp	x19, x20, [sp, #16]
  435c0c:	ldp	x29, x30, [sp], #224
  435c10:	ret
  435c14:	stp	x21, x22, [sp, #32]
  435c18:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  435c1c:	add	x21, x21, #0x240
  435c20:	sbfiz	x22, x20, #3, #32
  435c24:	stp	x23, x24, [sp, #48]
  435c28:	add	x24, x21, #0x20
  435c2c:	add	x24, x24, x22
  435c30:	mov	x1, #0x1                   	// #1
  435c34:	mov	w0, #0xd                   	// #13
  435c38:	bl	404270 <signal@plt>
  435c3c:	mov	x23, x0
  435c40:	mov	x2, #0x1                   	// #1
  435c44:	ldr	w0, [x24, #4]
  435c48:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  435c4c:	add	x1, x1, #0x7d0
  435c50:	bl	4443a8 <argp_parse@@Base+0x45c8>
  435c54:	mov	x1, x23
  435c58:	mov	x23, x0
  435c5c:	mov	w0, #0xd                   	// #13
  435c60:	bl	404270 <signal@plt>
  435c64:	cmp	x23, #0x1
  435c68:	b.ne	4360c0 <wcrtomb@plt+0x314a0>  // b.any
  435c6c:	mov	w0, w20
  435c70:	add	x1, sp, #0xa0
  435c74:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  435c78:	cbz	x0, 4360fc <wcrtomb@plt+0x314dc>
  435c7c:	mov	w2, #0xa                   	// #10
  435c80:	mov	x1, #0x0                   	// #0
  435c84:	bl	404770 <strtol@plt>
  435c88:	mov	x20, x0
  435c8c:	tbnz	x0, #63, 4360a0 <wcrtomb@plt+0x31480>
  435c90:	cmp	x0, #0x8
  435c94:	b.gt	43610c <wcrtomb@plt+0x314ec>
  435c98:	cbnz	x0, 435cac <wcrtomb@plt+0x3108c>
  435c9c:	b	436060 <wcrtomb@plt+0x31440>
  435ca0:	add	x19, x19, x0
  435ca4:	cmp	x20, #0x0
  435ca8:	b.le	435e2c <wcrtomb@plt+0x3120c>
  435cac:	ldr	w0, [x21, x22]
  435cb0:	mov	x1, x19
  435cb4:	mov	x2, x20
  435cb8:	add	x23, x21, x22
  435cbc:	bl	44f230 <argp_parse@@Base+0xf450>
  435cc0:	sub	x1, x0, #0x1
  435cc4:	sub	x20, x20, x0
  435cc8:	cmn	x1, #0x3
  435ccc:	b.ls	435ca0 <wcrtomb@plt+0x31080>  // b.plast
  435cd0:	ldr	w0, [x23]
  435cd4:	add	x21, x21, #0x20
  435cd8:	add	x21, x21, x22
  435cdc:	mov	w19, #0xffffffff            	// #-1
  435ce0:	bl	4045c0 <close@plt>
  435ce4:	ldr	w0, [x21, #4]
  435ce8:	bl	4045c0 <close@plt>
  435cec:	str	w19, [x23]
  435cf0:	str	w19, [x21, #4]
  435cf4:	bl	404ad0 <__errno_location@plt>
  435cf8:	mov	x1, x0
  435cfc:	mov	w2, #0x5                   	// #5
  435d00:	mov	w0, w19
  435d04:	ldp	x21, x22, [sp, #32]
  435d08:	ldp	x23, x24, [sp, #48]
  435d0c:	str	w2, [x1]
  435d10:	ldp	x19, x20, [sp, #16]
  435d14:	ldp	x29, x30, [sp], #224
  435d18:	ret
  435d1c:	ldr	w6, [x2, #4]
  435d20:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  435d24:	add	x5, sp, #0x5c
  435d28:	movk	x0, #0xcccd
  435d2c:	cmp	w6, #0x0
  435d30:	stp	x21, x22, [sp, #32]
  435d34:	sxtw	x2, w6
  435d38:	cneg	x2, x2, lt  // lt = tstop
  435d3c:	stp	x23, x24, [sp, #48]
  435d40:	strb	wzr, [sp, #92]
  435d44:	nop
  435d48:	umulh	x3, x2, x0
  435d4c:	mov	x4, x5
  435d50:	cmp	x2, #0x9
  435d54:	lsr	x3, x3, #3
  435d58:	add	x1, x3, x3, lsl #2
  435d5c:	sub	x1, x2, x1, lsl #1
  435d60:	mov	x2, x3
  435d64:	add	w1, w1, #0x30
  435d68:	strb	w1, [x5, #-1]!
  435d6c:	b.hi	435d48 <wcrtomb@plt+0x31128>  // b.pmore
  435d70:	tbnz	w6, #31, 435e1c <wcrtomb@plt+0x311fc>
  435d74:	ldrsh	w4, [x19]
  435d78:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  435d7c:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  435d80:	add	x3, x3, #0x860
  435d84:	add	x22, x22, #0x240
  435d88:	mov	x2, #0x40                  	// #64
  435d8c:	mov	w1, #0x1                   	// #1
  435d90:	sbfiz	x24, x20, #3, #32
  435d94:	add	x21, x22, #0x20
  435d98:	add	x0, sp, #0x60
  435d9c:	add	x21, x21, x24
  435da0:	bl	404010 <__sprintf_chk@plt>
  435da4:	add	x0, sp, #0x60
  435da8:	bl	403ff0 <strlen@plt>
  435dac:	mov	x1, #0x1                   	// #1
  435db0:	mov	x19, x0
  435db4:	mov	w0, #0xd                   	// #13
  435db8:	bl	404270 <signal@plt>
  435dbc:	mov	x23, x0
  435dc0:	ldr	w0, [x21, #4]
  435dc4:	mov	x2, x19
  435dc8:	add	x1, sp, #0x60
  435dcc:	bl	4443a8 <argp_parse@@Base+0x45c8>
  435dd0:	mov	x1, x23
  435dd4:	mov	x23, x0
  435dd8:	mov	w0, #0xd                   	// #13
  435ddc:	bl	404270 <signal@plt>
  435de0:	cmp	x19, x23
  435de4:	b.ne	4360e0 <wcrtomb@plt+0x314c0>  // b.any
  435de8:	mov	w0, w20
  435dec:	add	x1, sp, #0xa0
  435df0:	bl	434be8 <wcrtomb@plt+0x2ffc8>
  435df4:	cbz	x0, 4360fc <wcrtomb@plt+0x314dc>
  435df8:	mov	w2, #0xa                   	// #10
  435dfc:	mov	x1, #0x0                   	// #0
  435e00:	bl	404770 <strtol@plt>
  435e04:	tbnz	x0, #63, 4360a0 <wcrtomb@plt+0x31480>
  435e08:	ldp	x19, x20, [sp, #16]
  435e0c:	ldp	x21, x22, [sp, #32]
  435e10:	ldp	x23, x24, [sp, #48]
  435e14:	ldp	x29, x30, [sp], #224
  435e18:	ret
  435e1c:	mov	w0, #0x2d                  	// #45
  435e20:	sturb	w0, [x5, #-1]
  435e24:	sub	x5, x4, #0x2
  435e28:	b	435d74 <wcrtomb@plt+0x31154>
  435e2c:	ldr	x0, [x19]
  435e30:	cmp	x0, #0xff
  435e34:	b.le	436060 <wcrtomb@plt+0x31440>
  435e38:	cbz	x20, 436060 <wcrtomb@plt+0x31440>
  435e3c:	cmn	x20, #0x1
  435e40:	sub	x0, x20, #0x1
  435e44:	b.eq	436078 <wcrtomb@plt+0x31458>  // b.none
  435e48:	lsr	x0, x0, #1
  435e4c:	mov	x1, x19
  435e50:	add	x2, x0, #0x1
  435e54:	mov	x0, #0x0                   	// #0
  435e58:	lsr	x3, x2, #4
  435e5c:	nop
  435e60:	ld2	{v2.16b, v3.16b}, [x1]
  435e64:	add	x0, x0, #0x1
  435e68:	cmp	x3, x0
  435e6c:	mov	v0.16b, v3.16b
  435e70:	mov	v1.16b, v2.16b
  435e74:	st2	{v0.16b, v1.16b}, [x1], #32
  435e78:	b.hi	435e60 <wcrtomb@plt+0x31240>  // b.pmore
  435e7c:	and	x0, x2, #0xfffffffffffffff0
  435e80:	cmp	x2, x0
  435e84:	lsl	x0, x0, #1
  435e88:	b.eq	436060 <wcrtomb@plt+0x31440>  // b.none
  435e8c:	add	x1, x0, #0x1
  435e90:	ldrb	w3, [x19, x0]
  435e94:	add	x2, x0, #0x2
  435e98:	cmp	x20, x2
  435e9c:	ldrb	w4, [x19, x1]
  435ea0:	strb	w4, [x19, x0]
  435ea4:	strb	w3, [x19, x1]
  435ea8:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435eac:	add	x1, x0, #0x3
  435eb0:	ldrb	w4, [x19, x2]
  435eb4:	add	x3, x0, #0x4
  435eb8:	cmp	x20, x3
  435ebc:	ldrb	w5, [x19, x1]
  435ec0:	strb	w5, [x19, x2]
  435ec4:	strb	w4, [x19, x1]
  435ec8:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435ecc:	add	x1, x0, #0x5
  435ed0:	ldrb	w4, [x19, x3]
  435ed4:	add	x2, x0, #0x6
  435ed8:	cmp	x20, x2
  435edc:	ldrb	w5, [x19, x1]
  435ee0:	strb	w5, [x19, x3]
  435ee4:	strb	w4, [x19, x1]
  435ee8:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435eec:	add	x1, x0, #0x7
  435ef0:	ldrb	w4, [x19, x2]
  435ef4:	add	x3, x0, #0x8
  435ef8:	cmp	x20, x3
  435efc:	ldrb	w5, [x19, x1]
  435f00:	strb	w5, [x19, x2]
  435f04:	strb	w4, [x19, x1]
  435f08:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435f0c:	add	x1, x0, #0x9
  435f10:	ldrb	w4, [x19, x3]
  435f14:	add	x2, x0, #0xa
  435f18:	cmp	x20, x2
  435f1c:	ldrb	w5, [x19, x1]
  435f20:	strb	w5, [x19, x3]
  435f24:	strb	w4, [x19, x1]
  435f28:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435f2c:	add	x1, x0, #0xb
  435f30:	ldrb	w4, [x19, x2]
  435f34:	add	x3, x0, #0xc
  435f38:	cmp	x20, x3
  435f3c:	ldrb	w5, [x19, x1]
  435f40:	strb	w5, [x19, x2]
  435f44:	strb	w4, [x19, x1]
  435f48:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435f4c:	add	x1, x0, #0xd
  435f50:	ldrb	w4, [x19, x3]
  435f54:	add	x2, x0, #0xe
  435f58:	cmp	x20, x2
  435f5c:	ldrb	w5, [x19, x1]
  435f60:	strb	w5, [x19, x3]
  435f64:	strb	w4, [x19, x1]
  435f68:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435f6c:	add	x1, x0, #0xf
  435f70:	ldrb	w4, [x19, x2]
  435f74:	add	x3, x0, #0x10
  435f78:	cmp	x20, x3
  435f7c:	ldrb	w5, [x19, x1]
  435f80:	strb	w5, [x19, x2]
  435f84:	strb	w4, [x19, x1]
  435f88:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435f8c:	add	x1, x0, #0x11
  435f90:	ldrb	w4, [x19, x3]
  435f94:	add	x2, x0, #0x12
  435f98:	cmp	x20, x2
  435f9c:	ldrb	w5, [x19, x1]
  435fa0:	strb	w5, [x19, x3]
  435fa4:	strb	w4, [x19, x1]
  435fa8:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435fac:	add	x1, x0, #0x13
  435fb0:	ldrb	w4, [x19, x2]
  435fb4:	add	x3, x0, #0x14
  435fb8:	cmp	x20, x3
  435fbc:	ldrb	w5, [x19, x1]
  435fc0:	strb	w5, [x19, x2]
  435fc4:	strb	w4, [x19, x1]
  435fc8:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435fcc:	add	x1, x0, #0x15
  435fd0:	ldrb	w4, [x19, x3]
  435fd4:	add	x2, x0, #0x16
  435fd8:	cmp	x20, x2
  435fdc:	ldrb	w5, [x19, x1]
  435fe0:	strb	w5, [x19, x3]
  435fe4:	strb	w4, [x19, x1]
  435fe8:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  435fec:	add	x1, x0, #0x17
  435ff0:	ldrb	w4, [x19, x2]
  435ff4:	add	x3, x0, #0x18
  435ff8:	cmp	x20, x3
  435ffc:	ldrb	w5, [x19, x1]
  436000:	strb	w5, [x19, x2]
  436004:	strb	w4, [x19, x1]
  436008:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  43600c:	add	x1, x0, #0x19
  436010:	ldrb	w4, [x19, x3]
  436014:	add	x2, x0, #0x1a
  436018:	cmp	x20, x2
  43601c:	ldrb	w5, [x19, x1]
  436020:	strb	w5, [x19, x3]
  436024:	strb	w4, [x19, x1]
  436028:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  43602c:	add	x1, x0, #0x1b
  436030:	ldrb	w4, [x19, x2]
  436034:	add	x3, x0, #0x1c
  436038:	cmp	x20, x3
  43603c:	ldrb	w5, [x19, x1]
  436040:	strb	w5, [x19, x2]
  436044:	strb	w4, [x19, x1]
  436048:	b.ls	436060 <wcrtomb@plt+0x31440>  // b.plast
  43604c:	add	x0, x0, #0x1d
  436050:	ldrb	w1, [x19, x3]
  436054:	ldrb	w2, [x19, x0]
  436058:	strb	w2, [x19, x3]
  43605c:	strb	w1, [x19, x0]
  436060:	mov	w0, #0x0                   	// #0
  436064:	ldp	x19, x20, [sp, #16]
  436068:	ldp	x21, x22, [sp, #32]
  43606c:	ldp	x23, x24, [sp, #48]
  436070:	ldp	x29, x30, [sp], #224
  436074:	ret
  436078:	add	x1, x19, #0x1
  43607c:	mov	x0, #0x0                   	// #0
  436080:	ldrb	w3, [x1, x0]
  436084:	ldrb	w2, [x19, x0]
  436088:	strb	w3, [x19, x0]
  43608c:	strb	w2, [x1, x0]
  436090:	add	x0, x0, #0x2
  436094:	cmp	x0, x20
  436098:	b.cc	436080 <wcrtomb@plt+0x31460>  // b.lo, b.ul, b.last
  43609c:	b	436060 <wcrtomb@plt+0x31440>
  4360a0:	bl	404ad0 <__errno_location@plt>
  4360a4:	mov	x1, x0
  4360a8:	mov	w2, #0x5                   	// #5
  4360ac:	mov	w0, #0xffffffff            	// #-1
  4360b0:	ldp	x21, x22, [sp, #32]
  4360b4:	ldp	x23, x24, [sp, #48]
  4360b8:	str	w2, [x1]
  4360bc:	b	435c08 <wcrtomb@plt+0x30fe8>
  4360c0:	ldr	w0, [x21, x22]
  4360c4:	mov	w19, #0xffffffff            	// #-1
  4360c8:	bl	4045c0 <close@plt>
  4360cc:	ldr	w0, [x24, #4]
  4360d0:	bl	4045c0 <close@plt>
  4360d4:	str	w19, [x21, x22]
  4360d8:	str	w19, [x24, #4]
  4360dc:	b	435cf4 <wcrtomb@plt+0x310d4>
  4360e0:	ldr	w0, [x22, x24]
  4360e4:	mov	w19, #0xffffffff            	// #-1
  4360e8:	bl	4045c0 <close@plt>
  4360ec:	ldr	w0, [x21, #4]
  4360f0:	bl	4045c0 <close@plt>
  4360f4:	str	w19, [x22, x24]
  4360f8:	b	435cf0 <wcrtomb@plt+0x310d0>
  4360fc:	mov	w0, #0xffffffff            	// #-1
  436100:	ldp	x21, x22, [sp, #32]
  436104:	ldp	x23, x24, [sp, #48]
  436108:	b	435c08 <wcrtomb@plt+0x30fe8>
  43610c:	bl	404ad0 <__errno_location@plt>
  436110:	mov	x1, x0
  436114:	mov	w2, #0x4b                  	// #75
  436118:	mov	w0, #0xffffffff            	// #-1
  43611c:	ldp	x21, x22, [sp, #32]
  436120:	ldp	x23, x24, [sp, #48]
  436124:	str	w2, [x1]
  436128:	b	435c08 <wcrtomb@plt+0x30fe8>
  43612c:	nop
  436130:	stp	x29, x30, [sp, #-64]!
  436134:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  436138:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43613c:	mov	x29, sp
  436140:	stp	x19, x20, [sp, #16]
  436144:	mov	x19, #0x0                   	// #0
  436148:	mov	w20, w19
  43614c:	stp	x21, x22, [sp, #32]
  436150:	add	x22, x0, #0x878
  436154:	mov	w21, #0x1                   	// #1
  436158:	mov	w0, w19
  43615c:	stp	x23, x24, [sp, #48]
  436160:	add	x23, x1, #0x888
  436164:	mov	w1, #0x1                   	// #1
  436168:	bl	450c98 <argp_parse@@Base+0x10eb8>
  43616c:	tbnz	w0, #31, 436190 <wcrtomb@plt+0x31570>
  436170:	cmp	w20, #0x2
  436174:	b.eq	4361ac <wcrtomb@plt+0x3158c>  // b.none
  436178:	add	x19, x19, #0x1
  43617c:	mov	w1, #0x1                   	// #1
  436180:	mov	w0, w19
  436184:	mov	w20, w19
  436188:	bl	450c98 <argp_parse@@Base+0x10eb8>
  43618c:	tbz	w0, #31, 436170 <wcrtomb@plt+0x31550>
  436190:	bl	404ad0 <__errno_location@plt>
  436194:	ldr	w0, [x0]
  436198:	cmp	w0, #0x9
  43619c:	b.eq	4361c4 <wcrtomb@plt+0x315a4>  // b.none
  4361a0:	cmp	w20, #0x2
  4361a4:	mov	w21, #0x0                   	// #0
  4361a8:	b.ne	436178 <wcrtomb@plt+0x31558>  // b.any
  4361ac:	mov	w0, w21
  4361b0:	ldp	x19, x20, [sp, #16]
  4361b4:	ldp	x21, x22, [sp, #32]
  4361b8:	ldp	x23, x24, [sp, #48]
  4361bc:	ldp	x29, x30, [sp], #64
  4361c0:	ret
  4361c4:	ldr	w24, [x23, x19, lsl #2]
  4361c8:	cbz	w24, 4361f4 <wcrtomb@plt+0x315d4>
  4361cc:	mov	w1, w24
  4361d0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4361d4:	add	x0, x0, #0x868
  4361d8:	bl	404ba0 <__open_2@plt>
  4361dc:	cmp	w0, w19
  4361e0:	b.eq	436218 <wcrtomb@plt+0x315f8>  // b.none
  4361e4:	mov	w1, w24
  4361e8:	mov	x0, x22
  4361ec:	bl	404ba0 <__open_2@plt>
  4361f0:	b	436200 <wcrtomb@plt+0x315e0>
  4361f4:	mov	x0, x22
  4361f8:	mov	w1, #0x0                   	// #0
  4361fc:	bl	404340 <open@plt>
  436200:	cmp	w0, w19
  436204:	b.eq	436170 <wcrtomb@plt+0x31550>  // b.none
  436208:	tbnz	w0, #31, 4361a0 <wcrtomb@plt+0x31580>
  43620c:	mov	w21, #0x0                   	// #0
  436210:	bl	4045c0 <close@plt>
  436214:	b	436170 <wcrtomb@plt+0x31550>
  436218:	mov	w0, #0x0                   	// #0
  43621c:	cbnz	w19, 43620c <wcrtomb@plt+0x315ec>
  436220:	b	436178 <wcrtomb@plt+0x31558>
  436224:	nop
  436228:	mov	w2, w0
  43622c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  436230:	tbz	w2, #1, 43629c <wcrtomb@plt+0x3167c>
  436234:	mov	w0, #0x77                  	// #119
  436238:	strb	w0, [x1, #3600]
  43623c:	tst	x2, #0x4
  436240:	mov	w3, #0x2d                  	// #45
  436244:	mov	w7, #0x71                  	// #113
  436248:	csel	w7, w3, w7, eq  // eq = none
  43624c:	tst	x2, #0x8
  436250:	add	x0, x1, #0xe10
  436254:	mov	w6, #0x45                  	// #69
  436258:	csel	w6, w3, w6, eq  // eq = none
  43625c:	tst	x2, #0x10
  436260:	mov	w5, #0x6a                  	// #106
  436264:	csel	w5, w3, w5, eq  // eq = none
  436268:	tst	x2, #0x20
  43626c:	mov	w4, #0x73                  	// #115
  436270:	csel	w4, w3, w4, eq  // eq = none
  436274:	tst	x2, #0x40
  436278:	mov	w1, #0x64                  	// #100
  43627c:	csel	w3, w1, w3, ne  // ne = any
  436280:	strb	w7, [x0, #1]
  436284:	strb	w6, [x0, #2]
  436288:	strb	w5, [x0, #3]
  43628c:	strb	w4, [x0, #4]
  436290:	strb	w3, [x0, #5]
  436294:	strb	wzr, [x0, #6]
  436298:	ret
  43629c:	tbz	w2, #0, 4362ac <wcrtomb@plt+0x3168c>
  4362a0:	mov	w0, #0x6e                  	// #110
  4362a4:	strb	w0, [x1, #3600]
  4362a8:	b	43623c <wcrtomb@plt+0x3161c>
  4362ac:	mov	w0, #0x2d                  	// #45
  4362b0:	strb	w0, [x1, #3600]
  4362b4:	b	43623c <wcrtomb@plt+0x3161c>
  4362b8:	stp	x29, x30, [sp, #-64]!
  4362bc:	mov	x29, sp
  4362c0:	stp	x19, x20, [sp, #16]
  4362c4:	ldr	x19, [x0, #208]
  4362c8:	cbz	x19, 43633c <wcrtomb@plt+0x3171c>
  4362cc:	stp	x21, x22, [sp, #32]
  4362d0:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4362d4:	mov	x21, x0
  4362d8:	add	x22, x22, #0x898
  4362dc:	str	x23, [sp, #48]
  4362e0:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4362e4:	add	x23, x23, #0x8b8
  4362e8:	mov	w20, #0x0                   	// #0
  4362ec:	nop
  4362f0:	ldr	w8, [x19, #16]
  4362f4:	ldr	w10, [x21, #224]
  4362f8:	mov	w0, w8
  4362fc:	ldr	x9, [x21, #104]
  436300:	tbz	w8, #1, 436348 <wcrtomb@plt+0x31728>
  436304:	bl	436228 <wcrtomb@plt+0x31608>
  436308:	mov	x5, x0
  43630c:	ldr	x6, [x19, #24]
  436310:	mov	x3, x19
  436314:	mov	w2, w20
  436318:	mov	w4, w8
  43631c:	mov	w1, w10
  436320:	mov	x0, x22
  436324:	blr	x9
  436328:	add	w20, w20, #0x1
  43632c:	ldr	x19, [x19, #8]
  436330:	cbnz	x19, 4362f0 <wcrtomb@plt+0x316d0>
  436334:	ldp	x21, x22, [sp, #32]
  436338:	ldr	x23, [sp, #48]
  43633c:	ldp	x19, x20, [sp, #16]
  436340:	ldp	x29, x30, [sp], #64
  436344:	ret
  436348:	bl	436228 <wcrtomb@plt+0x31608>
  43634c:	mov	x5, x0
  436350:	ldp	x7, x6, [x19, #24]
  436354:	mov	x3, x19
  436358:	ldr	x0, [x21, #168]
  43635c:	mov	w2, w20
  436360:	mov	w4, w8
  436364:	mov	w1, w10
  436368:	add	w20, w20, #0x1
  43636c:	sub	w6, w6, w7
  436370:	add	x7, x0, x7
  436374:	mov	x0, x23
  436378:	blr	x9
  43637c:	ldr	x19, [x19, #8]
  436380:	cbnz	x19, 4362f0 <wcrtomb@plt+0x316d0>
  436384:	b	436334 <wcrtomb@plt+0x31714>
  436388:	cmp	x1, x2
  43638c:	mov	x6, #0x1                   	// #1
  436390:	b.cs	4363d0 <wcrtomb@plt+0x317b0>  // b.hs, b.nlast
  436394:	ldrb	w5, [x0, x1]
  436398:	cmp	w5, #0x22
  43639c:	b.eq	4363d8 <wcrtomb@plt+0x317b8>  // b.none
  4363a0:	cmp	w5, #0x27
  4363a4:	b.eq	436424 <wcrtomb@plt+0x31804>  // b.none
  4363a8:	ldrb	w7, [x4]
  4363ac:	cmp	w7, w5
  4363b0:	b.eq	43647c <wcrtomb@plt+0x3185c>  // b.none
  4363b4:	ldrb	w7, [x4, #1]
  4363b8:	cmp	w7, w5
  4363bc:	b.eq	436468 <wcrtomb@plt+0x31848>  // b.none
  4363c0:	add	x1, x1, #0x1
  4363c4:	cmp	x2, x1
  4363c8:	b.hi	436394 <wcrtomb@plt+0x31774>  // b.pmore
  4363cc:	nop
  4363d0:	mov	w0, #0x1                   	// #1
  4363d4:	ret
  4363d8:	add	x1, x1, #0x1
  4363dc:	cmp	x2, x1
  4363e0:	b.ls	4363d0 <wcrtomb@plt+0x317b0>  // b.plast
  4363e4:	ldrb	w5, [x0, x1]
  4363e8:	cmp	w5, #0x5c
  4363ec:	b.eq	436410 <wcrtomb@plt+0x317f0>  // b.none
  4363f0:	add	x1, x1, #0x1
  4363f4:	cmp	w5, #0x22
  4363f8:	b.eq	4363c4 <wcrtomb@plt+0x317a4>  // b.none
  4363fc:	cmp	x2, x1
  436400:	b.ls	4363d0 <wcrtomb@plt+0x317b0>  // b.plast
  436404:	ldrb	w5, [x0, x1]
  436408:	cmp	w5, #0x5c
  43640c:	b.ne	4363f0 <wcrtomb@plt+0x317d0>  // b.any
  436410:	add	x1, x1, #0x2
  436414:	cmp	x2, x1
  436418:	b.hi	4363e4 <wcrtomb@plt+0x317c4>  // b.pmore
  43641c:	mov	w0, #0x1                   	// #1
  436420:	b	4363d4 <wcrtomb@plt+0x317b4>
  436424:	add	x1, x1, #0x1
  436428:	cmp	x2, x1
  43642c:	b.ls	4363d0 <wcrtomb@plt+0x317b0>  // b.plast
  436430:	ldrb	w5, [x0, x1]
  436434:	add	x1, x1, #0x1
  436438:	cmp	w5, #0x27
  43643c:	b.eq	436458 <wcrtomb@plt+0x31838>  // b.none
  436440:	cmp	x1, x2
  436444:	b.cs	4363d0 <wcrtomb@plt+0x317b0>  // b.hs, b.nlast
  436448:	ldrb	w5, [x0, x1]
  43644c:	add	x1, x1, #0x1
  436450:	cmp	w5, #0x27
  436454:	b.ne	436440 <wcrtomb@plt+0x31820>  // b.any
  436458:	cmp	x1, x2
  43645c:	b.cc	436394 <wcrtomb@plt+0x31774>  // b.lo, b.ul, b.last
  436460:	mov	w0, #0x1                   	// #1
  436464:	b	4363d4 <wcrtomb@plt+0x317b4>
  436468:	subs	x6, x6, #0x1
  43646c:	b.ne	4363c0 <wcrtomb@plt+0x317a0>  // b.any
  436470:	mov	w0, #0x0                   	// #0
  436474:	str	x1, [x3]
  436478:	ret
  43647c:	add	x1, x1, #0x1
  436480:	add	x6, x6, #0x1
  436484:	cmp	x2, x1
  436488:	b.hi	436394 <wcrtomb@plt+0x31774>  // b.pmore
  43648c:	mov	w0, #0x1                   	// #1
  436490:	b	4363d4 <wcrtomb@plt+0x317b4>
  436494:	nop
  436498:	stp	x29, x30, [sp, #-320]!
  43649c:	mov	w9, #0xffffffc8            	// #-56
  4364a0:	mov	w8, #0xffffff80            	// #-128
  4364a4:	mov	x29, sp
  4364a8:	add	x10, sp, #0x100
  4364ac:	add	x11, sp, #0x140
  4364b0:	stp	x11, x11, [sp, #64]
  4364b4:	mov	x12, x0
  4364b8:	str	x10, [sp, #80]
  4364bc:	stp	w9, w8, [sp, #88]
  4364c0:	str	x19, [sp, #16]
  4364c4:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4364c8:	ldp	x10, x11, [sp, #64]
  4364cc:	stp	x10, x11, [sp, #32]
  4364d0:	ldp	x8, x9, [sp, #80]
  4364d4:	stp	x8, x9, [sp, #48]
  4364d8:	ldr	x0, [x19, #1176]
  4364dc:	stp	x10, x11, [sp, #96]
  4364e0:	stp	x8, x9, [sp, #112]
  4364e4:	str	q0, [sp, #128]
  4364e8:	str	q1, [sp, #144]
  4364ec:	str	q2, [sp, #160]
  4364f0:	str	q3, [sp, #176]
  4364f4:	str	q4, [sp, #192]
  4364f8:	str	q5, [sp, #208]
  4364fc:	str	q6, [sp, #224]
  436500:	str	q7, [sp, #240]
  436504:	stp	x1, x2, [sp, #264]
  436508:	mov	x2, x12
  43650c:	mov	w1, #0x1                   	// #1
  436510:	stp	x3, x4, [sp, #280]
  436514:	add	x3, sp, #0x20
  436518:	stp	x5, x6, [sp, #296]
  43651c:	str	x7, [sp, #312]
  436520:	bl	4044a0 <__vfprintf_chk@plt>
  436524:	ldr	x1, [x19, #1176]
  436528:	mov	w0, #0xa                   	// #10
  43652c:	bl	404170 <fputc@plt>
  436530:	ldr	x19, [sp, #16]
  436534:	ldp	x29, x30, [sp], #320
  436538:	ret
  43653c:	nop
  436540:	stp	x29, x30, [sp, #-32]!
  436544:	mov	x3, x0
  436548:	mov	w2, #0x5                   	// #5
  43654c:	mov	x29, sp
  436550:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  436554:	mov	x0, #0x0                   	// #0
  436558:	add	x1, x1, #0xa98
  43655c:	str	x19, [sp, #16]
  436560:	ldr	x19, [x3, #96]
  436564:	bl	4049c0 <dcgettext@plt>
  436568:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43656c:	mov	x1, x0
  436570:	add	x0, x2, #0x828
  436574:	blr	x19
  436578:	bl	404650 <abort@plt>
  43657c:	nop
  436580:	stp	x29, x30, [sp, #-48]!
  436584:	mov	x29, sp
  436588:	stp	x19, x20, [sp, #16]
  43658c:	ldr	x19, [x0, #208]
  436590:	cbz	x19, 4365f8 <wcrtomb@plt+0x319d8>
  436594:	str	x21, [sp, #32]
  436598:	mov	x21, x0
  43659c:	nop
  4365a0:	ldr	w1, [x19, #16]
  4365a4:	mov	x20, x19
  4365a8:	ldr	x19, [x19, #8]
  4365ac:	tbz	w1, #6, 4365c8 <wcrtomb@plt+0x319a8>
  4365b0:	ldr	x2, [x20]
  4365b4:	cbz	x2, 4365c8 <wcrtomb@plt+0x319a8>
  4365b8:	ldr	w1, [x2, #16]
  4365bc:	and	w1, w1, #0xffffffef
  4365c0:	str	w1, [x2, #16]
  4365c4:	ldr	w1, [x20, #16]
  4365c8:	tbz	w1, #0, 4365f0 <wcrtomb@plt+0x319d0>
  4365cc:	ldr	x2, [x20]
  4365d0:	cbz	x2, 436628 <wcrtomb@plt+0x31a08>
  4365d4:	str	x19, [x2, #8]
  4365d8:	ldr	x3, [x20, #8]
  4365dc:	cbz	x3, 436604 <wcrtomb@plt+0x319e4>
  4365e0:	str	x2, [x3]
  4365e4:	tbnz	w1, #1, 43661c <wcrtomb@plt+0x319fc>
  4365e8:	mov	x0, x20
  4365ec:	bl	4047b0 <free@plt>
  4365f0:	cbnz	x19, 4365a0 <wcrtomb@plt+0x31980>
  4365f4:	ldr	x21, [sp, #32]
  4365f8:	ldp	x19, x20, [sp, #16]
  4365fc:	ldp	x29, x30, [sp], #48
  436600:	ret
  436604:	ldr	w0, [x2, #16]
  436608:	and	w0, w0, #0xffffffef
  43660c:	str	w0, [x2, #16]
  436610:	ldr	w1, [x20, #16]
  436614:	str	x2, [x21, #216]
  436618:	tbz	w1, #1, 4365e8 <wcrtomb@plt+0x319c8>
  43661c:	ldr	x0, [x20, #24]
  436620:	bl	4047b0 <free@plt>
  436624:	b	4365e8 <wcrtomb@plt+0x319c8>
  436628:	str	x19, [x21, #208]
  43662c:	ldr	x3, [x20, #8]
  436630:	cbz	x3, 436614 <wcrtomb@plt+0x319f4>
  436634:	str	x2, [x3]
  436638:	b	4365e4 <wcrtomb@plt+0x319c4>
  43663c:	nop
  436640:	stp	x29, x30, [sp, #-16]!
  436644:	mov	x29, sp
  436648:	ldr	x2, [x0, #208]
  43664c:	cbz	x2, 436704 <wcrtomb@plt+0x31ae4>
  436650:	ldr	w3, [x2, #16]
  436654:	tbnz	w3, #2, 436668 <wcrtomb@plt+0x31a48>
  436658:	b	4366c8 <wcrtomb@plt+0x31aa8>
  43665c:	tbz	w3, #4, 436714 <wcrtomb@plt+0x31af4>
  436660:	ldr	w3, [x1, #16]
  436664:	mov	x2, x1
  436668:	ldr	x1, [x2, #8]
  43666c:	cbnz	x1, 43665c <wcrtomb@plt+0x31a3c>
  436670:	tbnz	w3, #2, 436704 <wcrtomb@plt+0x31ae4>
  436674:	ldp	x8, x5, [x2, #24]
  436678:	b	43669c <wcrtomb@plt+0x31a7c>
  43667c:	ldr	x4, [x0, #168]
  436680:	ldrb	w7, [x4, x6]
  436684:	sub	w4, w7, #0x9
  436688:	cmp	w7, #0x20
  43668c:	and	w4, w4, #0xff
  436690:	ccmp	w4, #0x1, #0x0, ne  // ne = any
  436694:	b.hi	436720 <wcrtomb@plt+0x31b00>  // b.pmore
  436698:	mov	x5, x6
  43669c:	sub	x6, x5, #0x1
  4366a0:	cmp	x8, x5
  4366a4:	b.cc	43667c <wcrtomb@plt+0x31a5c>  // b.lo, b.ul, b.last
  4366a8:	str	x5, [x2, #32]
  4366ac:	b.ne	4366b8 <wcrtomb@plt+0x31a98>  // b.any
  4366b0:	orr	w3, w3, #0x1
  4366b4:	str	w3, [x2, #16]
  4366b8:	cbz	x1, 436704 <wcrtomb@plt+0x31ae4>
  4366bc:	mov	x2, x1
  4366c0:	ldr	w3, [x2, #16]
  4366c4:	tbnz	w3, #2, 436668 <wcrtomb@plt+0x31a48>
  4366c8:	ldp	x1, x6, [x2, #24]
  4366cc:	cmp	x1, x6
  4366d0:	b.cs	43672c <wcrtomb@plt+0x31b0c>  // b.hs, b.nlast
  4366d4:	ldr	x7, [x0, #168]
  4366d8:	ldrb	w5, [x7, x1]
  4366dc:	sub	w4, w5, #0x9
  4366e0:	cmp	w5, #0x20
  4366e4:	and	w4, w4, #0xff
  4366e8:	ccmp	w4, #0x1, #0x0, ne  // ne = any
  4366ec:	b.hi	43672c <wcrtomb@plt+0x31b0c>  // b.pmore
  4366f0:	add	x1, x1, #0x1
  4366f4:	cmp	x1, x6
  4366f8:	b.ne	4366d8 <wcrtomb@plt+0x31ab8>  // b.any
  4366fc:	str	x6, [x2, #24]
  436700:	b	436668 <wcrtomb@plt+0x31a48>
  436704:	bl	436580 <wcrtomb@plt+0x31960>
  436708:	mov	w0, #0x0                   	// #0
  43670c:	ldp	x29, x30, [sp], #16
  436710:	ret
  436714:	tbz	w3, #2, 436674 <wcrtomb@plt+0x31a54>
  436718:	mov	x2, x1
  43671c:	b	4366c0 <wcrtomb@plt+0x31aa0>
  436720:	str	x5, [x2, #32]
  436724:	cbnz	x1, 4366bc <wcrtomb@plt+0x31a9c>
  436728:	b	436704 <wcrtomb@plt+0x31ae4>
  43672c:	mov	x6, x1
  436730:	str	x6, [x2, #24]
  436734:	b	436668 <wcrtomb@plt+0x31a48>
  436738:	stp	x29, x30, [sp, #-48]!
  43673c:	mov	x29, sp
  436740:	stp	x19, x20, [sp, #16]
  436744:	mov	x19, x0
  436748:	str	w3, [x0, #32]
  43674c:	tbnz	w3, #16, 43675c <wcrtomb@plt+0x31b3c>
  436750:	adrp	x0, 436000 <wcrtomb@plt+0x313e0>
  436754:	add	x0, x0, #0x540
  436758:	str	x0, [x19, #88]
  43675c:	and	w4, w3, #0x20000
  436760:	tbnz	w3, #17, 436770 <wcrtomb@plt+0x31b50>
  436764:	adrp	x0, 436000 <wcrtomb@plt+0x313e0>
  436768:	add	x0, x0, #0x498
  43676c:	str	x0, [x19, #96]
  436770:	tbnz	w3, #6, 43677c <wcrtomb@plt+0x31b5c>
  436774:	str	xzr, [x19, #120]
  436778:	stp	xzr, xzr, [x19, #128]
  43677c:	tbnz	w3, #2, 436788 <wcrtomb@plt+0x31b68>
  436780:	ldr	x0, [x19, #160]
  436784:	cbz	x0, 436910 <wcrtomb@plt+0x31cf0>
  436788:	tbz	w3, #21, 4367a8 <wcrtomb@plt+0x31b88>
  43678c:	tbnz	w3, #18, 4367a8 <wcrtomb@plt+0x31b88>
  436790:	cbnz	w4, 4368f0 <wcrtomb@plt+0x31cd0>
  436794:	tbz	w3, #4, 436998 <wcrtomb@plt+0x31d78>
  436798:	adrp	x0, 436000 <wcrtomb@plt+0x313e0>
  43679c:	add	x0, x0, #0x498
  4367a0:	str	x0, [x19, #104]
  4367a4:	nop
  4367a8:	stp	x1, x2, [x19, #168]
  4367ac:	tbnz	w3, #1, 4367b4 <wcrtomb@plt+0x31b94>
  4367b0:	str	xzr, [x19, #16]
  4367b4:	tbnz	w3, #14, 4367c4 <wcrtomb@plt+0x31ba4>
  4367b8:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4367bc:	add	x0, x0, #0x8f0
  4367c0:	str	x0, [x19, #56]
  4367c4:	tbnz	w3, #15, 4367cc <wcrtomb@plt+0x31bac>
  4367c8:	str	xzr, [x19, #64]
  4367cc:	tbz	w3, #26, 436890 <wcrtomb@plt+0x31c70>
  4367d0:	tbnz	w3, #31, 4367d8 <wcrtomb@plt+0x31bb8>
  4367d4:	str	wzr, [x19, #36]
  4367d8:	tbnz	w3, #28, 436898 <wcrtomb@plt+0x31c78>
  4367dc:	ldr	w0, [x19, #36]
  4367e0:	tbz	w3, #25, 4368d0 <wcrtomb@plt+0x31cb0>
  4367e4:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4367e8:	add	x1, x1, #0x290
  4367ec:	add	x1, x1, #0x60
  4367f0:	mov	w2, #0x660                 	// #1632
  4367f4:	orr	w0, w0, w2
  4367f8:	str	w0, [x19, #36]
  4367fc:	stp	x1, x1, [x19, #72]
  436800:	str	xzr, [x19, #48]
  436804:	str	xzr, [x19, #184]
  436808:	tbz	w3, #3, 4368c0 <wcrtomb@plt+0x31ca0>
  43680c:	ldr	x20, [x19, #208]
  436810:	cbz	x20, 4369a4 <wcrtomb@plt+0x31d84>
  436814:	ldr	w1, [x20, #16]
  436818:	mov	x0, x20
  43681c:	str	x21, [sp, #32]
  436820:	ldr	x21, [x20, #8]
  436824:	tbnz	w1, #1, 436844 <wcrtomb@plt+0x31c24>
  436828:	bl	4047b0 <free@plt>
  43682c:	cbz	x21, 436858 <wcrtomb@plt+0x31c38>
  436830:	mov	x20, x21
  436834:	mov	x0, x20
  436838:	ldr	w1, [x20, #16]
  43683c:	ldr	x21, [x20, #8]
  436840:	tbz	w1, #1, 436828 <wcrtomb@plt+0x31c08>
  436844:	ldr	x0, [x20, #24]
  436848:	bl	4047b0 <free@plt>
  43684c:	mov	x0, x20
  436850:	bl	4047b0 <free@plt>
  436854:	cbnz	x21, 436830 <wcrtomb@plt+0x31c10>
  436858:	ldr	w3, [x19, #32]
  43685c:	stp	xzr, xzr, [x19, #208]
  436860:	ldr	x21, [sp, #32]
  436864:	tbz	w3, #3, 4368c4 <wcrtomb@plt+0x31ca4>
  436868:	tbz	w3, #0, 436930 <wcrtomb@plt+0x31d10>
  43686c:	ldr	w0, [x19, #192]
  436870:	cmp	w0, #0x9
  436874:	b.eq	436904 <wcrtomb@plt+0x31ce4>  // b.none
  436878:	str	xzr, [x19, #200]
  43687c:	mov	w0, #0x0                   	// #0
  436880:	str	wzr, [x19, #192]
  436884:	ldp	x19, x20, [sp, #16]
  436888:	ldp	x29, x30, [sp], #48
  43688c:	ret
  436890:	str	xzr, [x19, #152]
  436894:	b	4367d0 <wcrtomb@plt+0x31bb0>
  436898:	ldr	x0, [x19, #72]
  43689c:	cbz	x0, 436988 <wcrtomb@plt+0x31d68>
  4368a0:	ldr	x0, [x19, #80]
  4368a4:	cbnz	x0, 436800 <wcrtomb@plt+0x31be0>
  4368a8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4368ac:	add	x0, x0, #0x7e8
  4368b0:	str	xzr, [x19, #48]
  4368b4:	str	x0, [x19, #80]
  4368b8:	str	xzr, [x19, #184]
  4368bc:	tbnz	w3, #3, 43680c <wcrtomb@plt+0x31bec>
  4368c0:	stp	xzr, xzr, [x19, #208]
  4368c4:	stp	xzr, xzr, [x19]
  4368c8:	str	xzr, [x19, #24]
  4368cc:	b	43687c <wcrtomb@plt+0x31c5c>
  4368d0:	orr	w0, w0, #0x100
  4368d4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4368d8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4368dc:	add	x2, x2, #0x7e8
  4368e0:	add	x1, x1, #0x8f8
  4368e4:	str	w0, [x19, #36]
  4368e8:	stp	x2, x1, [x19, #72]
  4368ec:	b	436800 <wcrtomb@plt+0x31be0>
  4368f0:	ldr	x0, [x19, #96]
  4368f4:	str	x0, [x19, #104]
  4368f8:	stp	x1, x2, [x19, #168]
  4368fc:	tbnz	w3, #1, 4367b4 <wcrtomb@plt+0x31b94>
  436900:	b	4367b0 <wcrtomb@plt+0x31b90>
  436904:	ldr	x0, [x19, #200]
  436908:	bl	4047b0 <free@plt>
  43690c:	b	436878 <wcrtomb@plt+0x31c58>
  436910:	mov	w0, #0x3                   	// #3
  436914:	str	w0, [x19, #192]
  436918:	tbnz	w3, #4, 4369ac <wcrtomb@plt+0x31d8c>
  43691c:	bl	404ad0 <__errno_location@plt>
  436920:	mov	w1, #0x16                  	// #22
  436924:	str	w1, [x0]
  436928:	ldr	w0, [x19, #192]
  43692c:	b	436884 <wcrtomb@plt+0x31c64>
  436930:	ldr	x3, [x19]
  436934:	cbz	x3, 43696c <wcrtomb@plt+0x31d4c>
  436938:	ldp	x2, x1, [x19, #8]
  43693c:	mov	x20, #0x0                   	// #0
  436940:	add	x0, x1, x20
  436944:	ldr	x0, [x2, x0, lsl #3]
  436948:	cbz	x0, 436974 <wcrtomb@plt+0x31d54>
  43694c:	bl	4047b0 <free@plt>
  436950:	ldp	x3, x2, [x19]
  436954:	ldr	x1, [x19, #16]
  436958:	add	x0, x1, x20
  43695c:	add	x20, x20, #0x1
  436960:	cmp	x3, x20
  436964:	str	xzr, [x2, x0, lsl #3]
  436968:	b.hi	436940 <wcrtomb@plt+0x31d20>  // b.pmore
  43696c:	str	xzr, [x19]
  436970:	b	43686c <wcrtomb@plt+0x31c4c>
  436974:	add	x20, x20, #0x1
  436978:	cmp	x3, x20
  43697c:	b.hi	436940 <wcrtomb@plt+0x31d20>  // b.pmore
  436980:	str	xzr, [x19]
  436984:	b	43686c <wcrtomb@plt+0x31c4c>
  436988:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  43698c:	add	x0, x0, #0x7e8
  436990:	str	x0, [x19, #72]
  436994:	b	4368a0 <wcrtomb@plt+0x31c80>
  436998:	and	w3, w3, #0xffdfffff
  43699c:	str	w3, [x19, #32]
  4369a0:	b	4367a8 <wcrtomb@plt+0x31b88>
  4369a4:	stp	xzr, xzr, [x19, #208]
  4369a8:	b	436868 <wcrtomb@plt+0x31c48>
  4369ac:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4369b0:	add	x3, x0, #0x290
  4369b4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4369b8:	add	x1, x1, #0x8e0
  4369bc:	ldr	w0, [x0, #656]
  4369c0:	ldr	x2, [x19, #96]
  4369c4:	cmp	w0, #0x3
  4369c8:	b.gt	4369dc <wcrtomb@plt+0x31dbc>
  4369cc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4369d0:	add	x0, x0, #0x828
  4369d4:	blr	x2
  4369d8:	b	43691c <wcrtomb@plt+0x31cfc>
  4369dc:	ldr	x1, [x3, #40]
  4369e0:	b	4369cc <wcrtomb@plt+0x31dac>
  4369e4:	nop
  4369e8:	stp	x29, x30, [sp, #-96]!
  4369ec:	mov	x29, sp
  4369f0:	str	wzr, [x2]
  4369f4:	stp	x19, x20, [sp, #16]
  4369f8:	stp	x21, x22, [sp, #32]
  4369fc:	ldrb	w19, [x0]
  436a00:	cbz	w19, 436af0 <wcrtomb@plt+0x31ed0>
  436a04:	stp	x25, x26, [sp, #64]
  436a08:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  436a0c:	add	x25, x25, #0x290
  436a10:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  436a14:	mov	x20, x0
  436a18:	mov	w26, w1
  436a1c:	add	x25, x25, #0x60
  436a20:	add	x22, x22, #0x900
  436a24:	mov	x21, #0x0                   	// #0
  436a28:	stp	x23, x24, [sp, #48]
  436a2c:	mov	x23, x2
  436a30:	mov	w24, #0x1                   	// #1
  436a34:	str	x27, [sp, #80]
  436a38:	mov	w27, #0x5c                  	// #92
  436a3c:	b	436a6c <wcrtomb@plt+0x31e4c>
  436a40:	cmp	w19, #0x22
  436a44:	b.eq	436ab8 <wcrtomb@plt+0x31e98>  // b.none
  436a48:	sub	w0, w19, #0x20
  436a4c:	and	w0, w0, #0xff
  436a50:	cmp	w0, #0x5f
  436a54:	ccmp	w19, w27, #0x4, ls  // ls = plast
  436a58:	b.ne	436a8c <wcrtomb@plt+0x31e6c>  // b.any
  436a5c:	cbz	w26, 436ac0 <wcrtomb@plt+0x31ea0>
  436a60:	add	x21, x21, #0x3
  436a64:	ldrb	w19, [x20, #1]!
  436a68:	cbz	w19, 436a98 <wcrtomb@plt+0x31e78>
  436a6c:	mov	w1, w19
  436a70:	mov	x0, x22
  436a74:	bl	404870 <strchr@plt>
  436a78:	cbz	x0, 436a84 <wcrtomb@plt+0x31e64>
  436a7c:	str	w24, [x23]
  436a80:	ldrb	w19, [x20]
  436a84:	cmp	w19, #0x20
  436a88:	b.ne	436a40 <wcrtomb@plt+0x31e20>  // b.any
  436a8c:	ldrb	w19, [x20, #1]!
  436a90:	add	x21, x21, #0x1
  436a94:	cbnz	w19, 436a6c <wcrtomb@plt+0x31e4c>
  436a98:	mov	x0, x21
  436a9c:	ldp	x19, x20, [sp, #16]
  436aa0:	ldp	x21, x22, [sp, #32]
  436aa4:	ldp	x23, x24, [sp, #48]
  436aa8:	ldp	x25, x26, [sp, #64]
  436aac:	ldr	x27, [sp, #80]
  436ab0:	ldp	x29, x30, [sp], #96
  436ab4:	ret
  436ab8:	add	x21, x21, #0x2
  436abc:	b	436a64 <wcrtomb@plt+0x31e44>
  436ac0:	ldrb	w0, [x25]
  436ac4:	mov	x1, x25
  436ac8:	cbnz	w0, 436adc <wcrtomb@plt+0x31ebc>
  436acc:	b	436ae8 <wcrtomb@plt+0x31ec8>
  436ad0:	b.eq	436ab8 <wcrtomb@plt+0x31e98>  // b.none
  436ad4:	ldrb	w0, [x1, #2]!
  436ad8:	cbz	w0, 436ae8 <wcrtomb@plt+0x31ec8>
  436adc:	ldrb	w0, [x1, #1]
  436ae0:	cmp	w19, w0
  436ae4:	cbnz	w0, 436ad0 <wcrtomb@plt+0x31eb0>
  436ae8:	add	x21, x21, #0x4
  436aec:	b	436a64 <wcrtomb@plt+0x31e44>
  436af0:	mov	x21, #0x0                   	// #0
  436af4:	mov	x0, x21
  436af8:	ldp	x19, x20, [sp, #16]
  436afc:	ldp	x21, x22, [sp, #32]
  436b00:	ldp	x29, x30, [sp], #96
  436b04:	ret
  436b08:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  436b0c:	add	x1, x1, #0x290
  436b10:	add	x2, x1, #0x60
  436b14:	ldrb	w1, [x1, #96]
  436b18:	cbnz	w1, 436b2c <wcrtomb@plt+0x31f0c>
  436b1c:	b	436b38 <wcrtomb@plt+0x31f18>
  436b20:	b.eq	436b40 <wcrtomb@plt+0x31f20>  // b.none
  436b24:	ldrb	w1, [x2, #2]!
  436b28:	cbz	w1, 436b38 <wcrtomb@plt+0x31f18>
  436b2c:	ldrb	w3, [x2, #1]
  436b30:	cmp	w0, w1
  436b34:	cbnz	w3, 436b20 <wcrtomb@plt+0x31f00>
  436b38:	mov	w0, #0x0                   	// #0
  436b3c:	ret
  436b40:	mov	w0, w3
  436b44:	ret
  436b48:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  436b4c:	add	x1, x1, #0x290
  436b50:	add	x2, x1, #0x60
  436b54:	ldrb	w3, [x1, #96]
  436b58:	cbnz	w3, 436b6c <wcrtomb@plt+0x31f4c>
  436b5c:	b	436b78 <wcrtomb@plt+0x31f58>
  436b60:	b.eq	436b80 <wcrtomb@plt+0x31f60>  // b.none
  436b64:	ldrb	w3, [x2, #2]!
  436b68:	cbz	w3, 436b78 <wcrtomb@plt+0x31f58>
  436b6c:	ldrb	w1, [x2, #1]
  436b70:	cmp	w0, w1
  436b74:	cbnz	w1, 436b60 <wcrtomb@plt+0x31f40>
  436b78:	mov	w0, #0x0                   	// #0
  436b7c:	ret
  436b80:	mov	w0, w3
  436b84:	ret
  436b88:	ldrb	w5, [x1]
  436b8c:	cbz	w5, 436ce0 <wcrtomb@plt+0x320c0>
  436b90:	stp	x29, x30, [sp, #-80]!
  436b94:	mov	x29, sp
  436b98:	stp	x19, x20, [sp, #16]
  436b9c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  436ba0:	add	x20, x20, #0x290
  436ba4:	mov	x19, x0
  436ba8:	add	x20, x20, #0x60
  436bac:	stp	x21, x22, [sp, #32]
  436bb0:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  436bb4:	mov	w21, w2
  436bb8:	add	x22, x22, #0x908
  436bbc:	stp	x23, x24, [sp, #48]
  436bc0:	mov	x23, x1
  436bc4:	b	436bec <wcrtomb@plt+0x31fcc>
  436bc8:	sub	w0, w5, #0x20
  436bcc:	mov	w2, #0x5c                  	// #92
  436bd0:	and	w0, w0, #0xff
  436bd4:	cmp	w0, #0x5f
  436bd8:	ccmp	w5, w2, #0x4, ls  // ls = plast
  436bdc:	b.eq	436c28 <wcrtomb@plt+0x32008>  // b.none
  436be0:	strb	w5, [x19], #1
  436be4:	ldrb	w5, [x23, #1]!
  436be8:	cbz	w5, 436c14 <wcrtomb@plt+0x31ff4>
  436bec:	cmp	w5, #0x22
  436bf0:	b.ne	436bc8 <wcrtomb@plt+0x31fa8>  // b.any
  436bf4:	mov	x0, x19
  436bf8:	mov	w1, #0x5c                  	// #92
  436bfc:	strb	w1, [x0], #2
  436c00:	ldrb	w1, [x23]
  436c04:	strb	w1, [x19, #1]
  436c08:	mov	x19, x0
  436c0c:	ldrb	w5, [x23, #1]!
  436c10:	cbnz	w5, 436bec <wcrtomb@plt+0x31fcc>
  436c14:	ldp	x19, x20, [sp, #16]
  436c18:	ldp	x21, x22, [sp, #32]
  436c1c:	ldp	x23, x24, [sp, #48]
  436c20:	ldp	x29, x30, [sp], #80
  436c24:	ret
  436c28:	cbz	w21, 436c5c <wcrtomb@plt+0x3203c>
  436c2c:	mov	x3, #0x4                   	// #4
  436c30:	mov	x4, x22
  436c34:	mov	x1, x3
  436c38:	add	x0, sp, #0x48
  436c3c:	mov	w2, #0x1                   	// #1
  436c40:	bl	404290 <__snprintf_chk@plt>
  436c44:	ldrh	w1, [sp, #72]
  436c48:	add	x19, x19, #0x3
  436c4c:	ldrb	w0, [sp, #74]
  436c50:	sturh	w1, [x19, #-3]
  436c54:	sturb	w0, [x19, #-1]
  436c58:	b	436be4 <wcrtomb@plt+0x31fc4>
  436c5c:	ldrb	w0, [x20]
  436c60:	mov	x4, x20
  436c64:	cbnz	w0, 436c78 <wcrtomb@plt+0x32058>
  436c68:	b	436c84 <wcrtomb@plt+0x32064>
  436c6c:	b.eq	436cc8 <wcrtomb@plt+0x320a8>  // b.none
  436c70:	ldrb	w0, [x4, #2]!
  436c74:	cbz	w0, 436c84 <wcrtomb@plt+0x32064>
  436c78:	ldrb	w3, [x4, #1]
  436c7c:	cmp	w3, w5
  436c80:	cbnz	w3, 436c6c <wcrtomb@plt+0x3204c>
  436c84:	mov	x24, x19
  436c88:	mov	w0, #0x5c                  	// #92
  436c8c:	mov	x3, #0x4                   	// #4
  436c90:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  436c94:	mov	x1, x3
  436c98:	add	x4, x4, #0x910
  436c9c:	strb	w0, [x24], #1
  436ca0:	mov	w2, #0x1                   	// #1
  436ca4:	add	x0, sp, #0x48
  436ca8:	add	x19, x19, #0x4
  436cac:	ldrb	w5, [x23]
  436cb0:	bl	404290 <__snprintf_chk@plt>
  436cb4:	ldrh	w0, [sp, #72]
  436cb8:	sturh	w0, [x19, #-3]
  436cbc:	ldrb	w0, [sp, #74]
  436cc0:	strb	w0, [x24, #2]
  436cc4:	b	436be4 <wcrtomb@plt+0x31fc4>
  436cc8:	mov	x1, x19
  436ccc:	mov	w2, #0x5c                  	// #92
  436cd0:	strb	w2, [x1], #2
  436cd4:	strb	w0, [x19, #1]
  436cd8:	mov	x19, x1
  436cdc:	b	436be4 <wcrtomb@plt+0x31fc4>
  436ce0:	ret
  436ce4:	nop
  436ce8:	stp	x29, x30, [sp, #-32]!
  436cec:	mov	x29, sp
  436cf0:	ldr	x3, [x0]
  436cf4:	stp	x19, x20, [sp, #16]
  436cf8:	mov	x20, x0
  436cfc:	cbz	x3, 436d34 <wcrtomb@plt+0x32114>
  436d00:	ldp	x2, x1, [x0, #8]
  436d04:	mov	x19, #0x0                   	// #0
  436d08:	add	x0, x19, x1
  436d0c:	ldr	x0, [x2, x0, lsl #3]
  436d10:	cbz	x0, 436d44 <wcrtomb@plt+0x32124>
  436d14:	bl	4047b0 <free@plt>
  436d18:	ldp	x3, x2, [x20]
  436d1c:	ldr	x1, [x20, #16]
  436d20:	add	x0, x1, x19
  436d24:	add	x19, x19, #0x1
  436d28:	cmp	x19, x3
  436d2c:	str	xzr, [x2, x0, lsl #3]
  436d30:	b.cc	436d08 <wcrtomb@plt+0x320e8>  // b.lo, b.ul, b.last
  436d34:	str	xzr, [x20]
  436d38:	ldp	x19, x20, [sp, #16]
  436d3c:	ldp	x29, x30, [sp], #32
  436d40:	ret
  436d44:	add	x19, x19, #0x1
  436d48:	cmp	x19, x3
  436d4c:	b.cc	436d08 <wcrtomb@plt+0x320e8>  // b.lo, b.ul, b.last
  436d50:	str	xzr, [x20]
  436d54:	ldp	x19, x20, [sp, #16]
  436d58:	ldp	x29, x30, [sp], #32
  436d5c:	ret
  436d60:	stp	x29, x30, [sp, #-32]!
  436d64:	mov	x29, sp
  436d68:	stp	x19, x20, [sp, #16]
  436d6c:	mov	x20, x0
  436d70:	ldr	w0, [x0, #32]
  436d74:	tbnz	w0, #2, 436db4 <wcrtomb@plt+0x32194>
  436d78:	ldr	x1, [x20, #120]
  436d7c:	cbz	x1, 436db4 <wcrtomb@plt+0x32194>
  436d80:	ldr	x0, [x1]
  436d84:	cbz	x0, 436da4 <wcrtomb@plt+0x32184>
  436d88:	mov	x19, #0x8                   	// #8
  436d8c:	nop
  436d90:	bl	4047b0 <free@plt>
  436d94:	ldr	x1, [x20, #120]
  436d98:	ldr	x0, [x1, x19]
  436d9c:	add	x19, x19, #0x8
  436da0:	cbnz	x0, 436d90 <wcrtomb@plt+0x32170>
  436da4:	mov	x0, x1
  436da8:	bl	4047b0 <free@plt>
  436dac:	str	xzr, [x20, #120]
  436db0:	stp	xzr, xzr, [x20, #128]
  436db4:	ldp	x19, x20, [sp, #16]
  436db8:	ldp	x29, x30, [sp], #32
  436dbc:	ret
  436dc0:	stp	x29, x30, [sp, #-32]!
  436dc4:	mov	x29, sp
  436dc8:	str	x19, [sp, #16]
  436dcc:	mov	x19, x0
  436dd0:	ldr	w0, [x0, #192]
  436dd4:	cmp	w0, #0x9
  436dd8:	b.eq	436df0 <wcrtomb@plt+0x321d0>  // b.none
  436ddc:	str	wzr, [x19, #192]
  436de0:	str	xzr, [x19, #200]
  436de4:	ldr	x19, [sp, #16]
  436de8:	ldp	x29, x30, [sp], #32
  436dec:	ret
  436df0:	ldr	x0, [x19, #200]
  436df4:	bl	4047b0 <free@plt>
  436df8:	str	wzr, [x19, #192]
  436dfc:	str	xzr, [x19, #200]
  436e00:	ldr	x19, [sp, #16]
  436e04:	ldp	x29, x30, [sp], #32
  436e08:	ret
  436e0c:	nop
  436e10:	stp	x29, x30, [sp, #-48]!
  436e14:	mov	x29, sp
  436e18:	stp	x19, x20, [sp, #16]
  436e1c:	mov	x20, x0
  436e20:	ldr	x19, [x0, #208]
  436e24:	cbz	x19, 436e74 <wcrtomb@plt+0x32254>
  436e28:	ldr	w1, [x19, #16]
  436e2c:	mov	x0, x19
  436e30:	str	x21, [sp, #32]
  436e34:	ldr	x21, [x19, #8]
  436e38:	tbnz	w1, #1, 436e5c <wcrtomb@plt+0x3223c>
  436e3c:	nop
  436e40:	bl	4047b0 <free@plt>
  436e44:	cbz	x21, 436e70 <wcrtomb@plt+0x32250>
  436e48:	mov	x19, x21
  436e4c:	mov	x0, x19
  436e50:	ldr	w1, [x19, #16]
  436e54:	ldr	x21, [x19, #8]
  436e58:	tbz	w1, #1, 436e40 <wcrtomb@plt+0x32220>
  436e5c:	ldr	x0, [x19, #24]
  436e60:	bl	4047b0 <free@plt>
  436e64:	mov	x0, x19
  436e68:	bl	4047b0 <free@plt>
  436e6c:	cbnz	x21, 436e48 <wcrtomb@plt+0x32228>
  436e70:	ldr	x21, [sp, #32]
  436e74:	stp	xzr, xzr, [x20, #208]
  436e78:	ldp	x3, x1, [x20]
  436e7c:	cbz	x3, 436eb4 <wcrtomb@plt+0x32294>
  436e80:	ldr	x2, [x20, #16]
  436e84:	mov	x19, #0x0                   	// #0
  436e88:	add	x0, x19, x2
  436e8c:	ldr	x0, [x1, x0, lsl #3]
  436e90:	cbz	x0, 436f10 <wcrtomb@plt+0x322f0>
  436e94:	bl	4047b0 <free@plt>
  436e98:	ldp	x3, x1, [x20]
  436e9c:	ldr	x2, [x20, #16]
  436ea0:	add	x0, x2, x19
  436ea4:	add	x19, x19, #0x1
  436ea8:	cmp	x19, x3
  436eac:	str	xzr, [x1, x0, lsl #3]
  436eb0:	b.cc	436e88 <wcrtomb@plt+0x32268>  // b.lo, b.ul, b.last
  436eb4:	str	xzr, [x20]
  436eb8:	mov	x0, x1
  436ebc:	bl	4047b0 <free@plt>
  436ec0:	str	xzr, [x20, #8]
  436ec4:	ldr	w0, [x20, #32]
  436ec8:	tbnz	w0, #2, 436f04 <wcrtomb@plt+0x322e4>
  436ecc:	ldr	x1, [x20, #120]
  436ed0:	cbz	x1, 436f04 <wcrtomb@plt+0x322e4>
  436ed4:	ldr	x0, [x1]
  436ed8:	cbz	x0, 436ef4 <wcrtomb@plt+0x322d4>
  436edc:	mov	x19, #0x8                   	// #8
  436ee0:	bl	4047b0 <free@plt>
  436ee4:	ldr	x1, [x20, #120]
  436ee8:	ldr	x0, [x1, x19]
  436eec:	add	x19, x19, #0x8
  436ef0:	cbnz	x0, 436ee0 <wcrtomb@plt+0x322c0>
  436ef4:	mov	x0, x1
  436ef8:	bl	4047b0 <free@plt>
  436efc:	str	xzr, [x20, #120]
  436f00:	stp	xzr, xzr, [x20, #128]
  436f04:	ldp	x19, x20, [sp, #16]
  436f08:	ldp	x29, x30, [sp], #48
  436f0c:	ret
  436f10:	add	x19, x19, #0x1
  436f14:	cmp	x19, x3
  436f18:	b.cc	436e88 <wcrtomb@plt+0x32268>  // b.lo, b.ul, b.last
  436f1c:	b	436eb4 <wcrtomb@plt+0x32294>
  436f20:	stp	x29, x30, [sp, #-48]!
  436f24:	mov	x29, sp
  436f28:	stp	x19, x20, [sp, #16]
  436f2c:	str	x21, [sp, #32]
  436f30:	mov	x21, x0
  436f34:	bl	404ad0 <__errno_location@plt>
  436f38:	mov	w2, #0xc                   	// #12
  436f3c:	str	w2, [x0]
  436f40:	mov	w1, #0x2                   	// #2
  436f44:	str	w1, [x21, #192]
  436f48:	ldr	w0, [x21, #32]
  436f4c:	tbz	w0, #7, 436fc8 <wcrtomb@plt+0x323a8>
  436f50:	ldr	x1, [x21, #88]
  436f54:	mov	x0, x21
  436f58:	blr	x1
  436f5c:	ldr	w0, [x21, #32]
  436f60:	tbnz	w0, #4, 437018 <wcrtomb@plt+0x323f8>
  436f64:	tbz	w0, #3, 43700c <wcrtomb@plt+0x323ec>
  436f68:	ldr	x19, [x21, #208]
  436f6c:	cbz	x19, 436fb0 <wcrtomb@plt+0x32390>
  436f70:	ldr	w1, [x19, #16]
  436f74:	mov	x0, x19
  436f78:	ldr	x20, [x19, #8]
  436f7c:	tbnz	w1, #1, 436f9c <wcrtomb@plt+0x3237c>
  436f80:	bl	4047b0 <free@plt>
  436f84:	cbz	x20, 436fb0 <wcrtomb@plt+0x32390>
  436f88:	mov	x19, x20
  436f8c:	mov	x0, x19
  436f90:	ldr	w1, [x19, #16]
  436f94:	ldr	x20, [x19, #8]
  436f98:	tbz	w1, #1, 436f80 <wcrtomb@plt+0x32360>
  436f9c:	ldr	x0, [x19, #24]
  436fa0:	bl	4047b0 <free@plt>
  436fa4:	mov	x0, x19
  436fa8:	bl	4047b0 <free@plt>
  436fac:	cbnz	x20, 436f88 <wcrtomb@plt+0x32368>
  436fb0:	stp	xzr, xzr, [x21, #208]
  436fb4:	ldr	w0, [x21, #192]
  436fb8:	ldp	x19, x20, [sp, #16]
  436fbc:	ldr	x21, [sp, #32]
  436fc0:	ldp	x29, x30, [sp], #48
  436fc4:	ret
  436fc8:	tbz	w0, #4, 436f64 <wcrtomb@plt+0x32344>
  436fcc:	ldr	x19, [x21, #96]
  436fd0:	mov	w0, w1
  436fd4:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  436fd8:	add	x3, x2, #0x290
  436fdc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  436fe0:	add	x1, x1, #0x8e0
  436fe4:	ldr	w2, [x2, #656]
  436fe8:	cmp	w0, w2
  436fec:	b.ge	436ff8 <wcrtomb@plt+0x323d8>  // b.tcont
  436ff0:	add	x3, x3, #0x10
  436ff4:	ldr	x1, [x3, w0, sxtw #3]
  436ff8:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  436ffc:	add	x0, x0, #0x828
  437000:	blr	x19
  437004:	ldr	w0, [x21, #32]
  437008:	tbnz	w0, #3, 436f68 <wcrtomb@plt+0x32348>
  43700c:	mov	x0, x21
  437010:	bl	436e10 <wcrtomb@plt+0x321f0>
  437014:	b	436f68 <wcrtomb@plt+0x32348>
  437018:	ldr	w0, [x21, #192]
  43701c:	ldr	x19, [x21, #96]
  437020:	cmp	w0, #0x1
  437024:	b.eq	437038 <wcrtomb@plt+0x32418>  // b.none
  437028:	cmp	w0, #0x9
  43702c:	b.ne	436fd4 <wcrtomb@plt+0x323b4>  // b.any
  437030:	ldr	x1, [x21, #200]
  437034:	b	436ff8 <wcrtomb@plt+0x323d8>
  437038:	mov	w2, #0x5                   	// #5
  43703c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  437040:	mov	x0, #0x0                   	// #0
  437044:	add	x1, x1, #0x918
  437048:	bl	4049c0 <dcgettext@plt>
  43704c:	ldr	x1, [x21, #168]
  437050:	ldr	x2, [x21, #184]
  437054:	ldrb	w1, [x1, x2]
  437058:	blr	x19
  43705c:	ldr	w0, [x21, #32]
  437060:	b	436f64 <wcrtomb@plt+0x32344>
  437064:	nop
  437068:	stp	x29, x30, [sp, #-144]!
  43706c:	mov	x29, sp
  437070:	stp	x23, x24, [sp, #48]
  437074:	ldr	x23, [x0, #208]
  437078:	cbz	x23, 4371dc <wcrtomb@plt+0x325bc>
  43707c:	stp	x19, x20, [sp, #16]
  437080:	stp	x21, x22, [sp, #32]
  437084:	mov	x22, x0
  437088:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x21bf0>
  43708c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  437090:	add	x1, x21, #0x7e8
  437094:	add	x0, x0, #0x940
  437098:	stp	x25, x26, [sp, #64]
  43709c:	stp	x27, x28, [sp, #80]
  4370a0:	str	x1, [sp, #96]
  4370a4:	str	x0, [sp, #112]
  4370a8:	ldr	w19, [x23, #16]
  4370ac:	tbnz	w19, #0, 4372ec <wcrtomb@plt+0x326cc>
  4370b0:	ldr	x27, [x23, #24]
  4370b4:	tbz	w19, #1, 4372f8 <wcrtomb@plt+0x326d8>
  4370b8:	mov	x0, x27
  4370bc:	bl	403ff0 <strlen@plt>
  4370c0:	mov	x28, x0
  4370c4:	ldr	w0, [x22, #32]
  4370c8:	tst	w0, #0x600
  4370cc:	b.eq	4371c4 <wcrtomb@plt+0x325a4>  // b.none
  4370d0:	tbnz	w19, #3, 4371c4 <wcrtomb@plt+0x325a4>
  4370d4:	tbnz	w19, #1, 437108 <wcrtomb@plt+0x324e8>
  4370d8:	add	x0, x28, #0x1
  4370dc:	bl	404310 <malloc@plt>
  4370e0:	mov	x19, x0
  4370e4:	cbz	x0, 437494 <wcrtomb@plt+0x32874>
  4370e8:	mov	x2, x28
  4370ec:	mov	x1, x27
  4370f0:	bl	403f70 <memcpy@plt>
  4370f4:	strb	wzr, [x19, x28]
  4370f8:	str	x19, [x23, #24]
  4370fc:	ldr	w19, [x23, #16]
  437100:	orr	w19, w19, #0x2
  437104:	str	w19, [x23, #16]
  437108:	ubfx	x1, x19, #2, #1
  43710c:	ldr	x19, [x23, #24]
  437110:	cbz	x28, 4371c0 <wcrtomb@plt+0x325a0>
  437114:	sxtw	x24, w1
  437118:	lsl	w1, w1, #2
  43711c:	add	x24, x24, #0x8
  437120:	mov	w7, #0x40                  	// #64
  437124:	mov	w8, #0x20                  	// #32
  437128:	mov	w25, #0x10                  	// #16
  43712c:	lsl	w0, w25, w1
  437130:	add	x24, x22, x24, lsl #3
  437134:	lsl	w26, w7, w1
  437138:	mov	w20, #0x0                   	// #0
  43713c:	lsl	w21, w8, w1
  437140:	mov	x1, #0x0                   	// #0
  437144:	str	w0, [sp, #108]
  437148:	b	43715c <wcrtomb@plt+0x3253c>
  43714c:	mov	w20, w25
  437150:	strb	w3, [x19], #1
  437154:	cmp	x28, x1
  437158:	b.ls	4371c0 <wcrtomb@plt+0x325a0>  // b.plast
  43715c:	ldrb	w3, [x27, x1]
  437160:	add	w25, w20, #0x1
  437164:	cmp	w3, #0x5c
  437168:	sxtw	x1, w25
  43716c:	b.ne	43714c <wcrtomb@plt+0x3252c>  // b.any
  437170:	ldr	w6, [x22, #36]
  437174:	add	x9, x27, x1
  437178:	ldrb	w4, [x27, w25, sxtw]
  43717c:	tst	w6, w26
  437180:	b.eq	4371ec <wcrtomb@plt+0x325cc>  // b.none
  437184:	and	w0, w4, #0xffffffdf
  437188:	cmp	w0, #0x58
  43718c:	b.ne	4371ec <wcrtomb@plt+0x325cc>  // b.any
  437190:	sub	x0, x28, x1
  437194:	cmp	x0, #0x1
  437198:	b.hi	437360 <wcrtomb@plt+0x32740>  // b.pmore
  43719c:	mov	x0, x19
  4371a0:	add	w20, w20, #0x2
  4371a4:	sxtw	x1, w20
  4371a8:	strb	w3, [x0], #2
  4371ac:	cmp	x28, x1
  4371b0:	ldrb	w2, [x9]
  4371b4:	strb	w2, [x19, #1]
  4371b8:	mov	x19, x0
  4371bc:	b.hi	43715c <wcrtomb@plt+0x3253c>  // b.pmore
  4371c0:	strb	wzr, [x19]
  4371c4:	ldr	x23, [x23, #8]
  4371c8:	cbnz	x23, 4370a8 <wcrtomb@plt+0x32488>
  4371cc:	ldp	x19, x20, [sp, #16]
  4371d0:	ldp	x21, x22, [sp, #32]
  4371d4:	ldp	x25, x26, [sp, #64]
  4371d8:	ldp	x27, x28, [sp, #80]
  4371dc:	mov	w0, #0x0                   	// #0
  4371e0:	ldp	x23, x24, [sp, #48]
  4371e4:	ldp	x29, x30, [sp], #144
  4371e8:	ret
  4371ec:	tst	w6, w21
  4371f0:	b.eq	43730c <wcrtomb@plt+0x326ec>  // b.none
  4371f4:	sub	w3, w4, #0x30
  4371f8:	and	w10, w3, #0xff
  4371fc:	cmp	w10, #0x9
  437200:	b.hi	43730c <wcrtomb@plt+0x326ec>  // b.pmore
  437204:	cmp	x28, x1
  437208:	b.eq	4373a0 <wcrtomb@plt+0x32780>  // b.none
  43720c:	cmp	w3, #0x7
  437210:	b.gt	4373a0 <wcrtomb@plt+0x32780>
  437214:	ldrb	w20, [x9, #1]
  437218:	cmp	w20, #0x7f
  43721c:	b.gt	437484 <wcrtomb@plt+0x32864>
  437220:	sub	w0, w20, #0x30
  437224:	cmp	w0, #0x9
  437228:	b.ls	437274 <wcrtomb@plt+0x32654>  // b.plast
  43722c:	ldr	x0, [sp, #112]
  437230:	mov	w1, w20
  437234:	str	w10, [sp, #120]
  437238:	str	x9, [sp, #128]
  43723c:	str	w3, [sp, #136]
  437240:	bl	404870 <strchr@plt>
  437244:	ldr	w10, [sp, #120]
  437248:	mov	w1, #0x1                   	// #1
  43724c:	cbz	x0, 4372dc <wcrtomb@plt+0x326bc>
  437250:	str	w10, [sp, #120]
  437254:	bl	404540 <__ctype_toupper_loc@plt>
  437258:	ldr	x0, [x0]
  43725c:	mov	w1, w20
  437260:	ldr	w10, [sp, #120]
  437264:	ldr	w3, [sp, #136]
  437268:	ldr	w0, [x0, x1, lsl #2]
  43726c:	ldr	x9, [sp, #128]
  437270:	sub	w0, w0, #0x37
  437274:	cmp	w0, #0x7
  437278:	b.gt	437484 <wcrtomb@plt+0x32864>
  43727c:	ldrb	w1, [x9, #2]
  437280:	add	w20, w0, w3, lsl #3
  437284:	cmp	w1, #0x7f
  437288:	b.gt	437478 <wcrtomb@plt+0x32858>
  43728c:	sub	w0, w1, #0x30
  437290:	cmp	w0, #0x9
  437294:	b.ls	4372c8 <wcrtomb@plt+0x326a8>  // b.plast
  437298:	ldr	x0, [sp, #112]
  43729c:	str	w1, [sp, #120]
  4372a0:	bl	404870 <strchr@plt>
  4372a4:	ldr	w1, [sp, #120]
  4372a8:	cbz	x0, 437478 <wcrtomb@plt+0x32858>
  4372ac:	str	w1, [sp, #120]
  4372b0:	bl	404540 <__ctype_toupper_loc@plt>
  4372b4:	ldr	w1, [sp, #120]
  4372b8:	ldr	x0, [x0]
  4372bc:	mov	w1, w1
  4372c0:	ldr	w0, [x0, x1, lsl #2]
  4372c4:	sub	w0, w0, #0x37
  4372c8:	cmp	w0, #0x7
  4372cc:	b.gt	437478 <wcrtomb@plt+0x32858>
  4372d0:	add	w20, w0, w20, lsl #3
  4372d4:	mov	w1, #0x3                   	// #3
  4372d8:	and	w10, w20, #0xff
  4372dc:	add	w20, w25, w1
  4372e0:	strb	w10, [x19], #1
  4372e4:	sxtw	x1, w20
  4372e8:	b	437154 <wcrtomb@plt+0x32534>
  4372ec:	mov	x28, #0x0                   	// #0
  4372f0:	ldr	x27, [sp, #96]
  4372f4:	b	4370c4 <wcrtomb@plt+0x324a4>
  4372f8:	ldr	x28, [x23, #32]
  4372fc:	ldr	x1, [x22, #168]
  437300:	sub	x28, x28, x27
  437304:	add	x27, x1, x27
  437308:	b	4370c4 <wcrtomb@plt+0x324a4>
  43730c:	ldr	x2, [x24, #8]
  437310:	ldrb	w1, [x2]
  437314:	cbnz	w1, 437328 <wcrtomb@plt+0x32708>
  437318:	b	437334 <wcrtomb@plt+0x32714>
  43731c:	b.eq	4373c4 <wcrtomb@plt+0x327a4>  // b.none
  437320:	ldrb	w1, [x2, #2]!
  437324:	cbz	w1, 437334 <wcrtomb@plt+0x32714>
  437328:	ldrb	w0, [x2, #1]
  43732c:	cmp	w4, w1
  437330:	cbnz	w0, 43731c <wcrtomb@plt+0x326fc>
  437334:	ldr	w0, [sp, #108]
  437338:	tst	w6, w0
  43733c:	add	x0, x19, #0x1
  437340:	b.ne	4373d4 <wcrtomb@plt+0x327b4>  // b.any
  437344:	mov	x1, x0
  437348:	mov	x0, x19
  43734c:	mov	x19, x1
  437350:	add	w20, w20, #0x2
  437354:	strb	w4, [x0]
  437358:	sxtw	x1, w20
  43735c:	b	437154 <wcrtomb@plt+0x32534>
  437360:	add	x1, x1, #0x1
  437364:	add	x4, x27, x1
  437368:	ldrb	w1, [x27, x1]
  43736c:	cmp	w1, #0x7f
  437370:	b.gt	4373a0 <wcrtomb@plt+0x32780>
  437374:	sub	w3, w1, #0x30
  437378:	cmp	w3, #0x9
  43737c:	b.ls	437404 <wcrtomb@plt+0x327e4>  // b.plast
  437380:	ldr	x0, [sp, #112]
  437384:	str	x9, [sp, #120]
  437388:	str	w1, [sp, #128]
  43738c:	str	x4, [sp, #136]
  437390:	bl	404870 <strchr@plt>
  437394:	ldr	x9, [sp, #120]
  437398:	cbnz	x0, 4373e4 <wcrtomb@plt+0x327c4>
  43739c:	nop
  4373a0:	mov	x0, x19
  4373a4:	mov	w2, #0x5c                  	// #92
  4373a8:	add	w20, w20, #0x2
  4373ac:	strb	w2, [x0], #2
  4373b0:	sxtw	x1, w20
  4373b4:	ldrb	w2, [x9]
  4373b8:	strb	w2, [x19, #1]
  4373bc:	mov	x19, x0
  4373c0:	b	437154 <wcrtomb@plt+0x32534>
  4373c4:	add	w20, w20, #0x2
  4373c8:	strb	w0, [x19], #1
  4373cc:	sxtw	x1, w20
  4373d0:	b	437154 <wcrtomb@plt+0x32534>
  4373d4:	mov	w1, #0x5c                  	// #92
  4373d8:	strb	w1, [x19], #2
  4373dc:	ldrb	w4, [x9]
  4373e0:	b	437350 <wcrtomb@plt+0x32730>
  4373e4:	bl	404540 <__ctype_toupper_loc@plt>
  4373e8:	ldr	w1, [sp, #128]
  4373ec:	ldr	x0, [x0]
  4373f0:	mov	w1, w1
  4373f4:	ldr	x9, [sp, #120]
  4373f8:	ldr	w3, [x0, x1, lsl #2]
  4373fc:	ldr	x4, [sp, #136]
  437400:	sub	w3, w3, #0x37
  437404:	cmp	w3, #0xf
  437408:	b.gt	4373a0 <wcrtomb@plt+0x32780>
  43740c:	ldrb	w20, [x4, #1]
  437410:	cmp	w20, #0x7f
  437414:	b.gt	43748c <wcrtomb@plt+0x3286c>
  437418:	sub	w0, w20, #0x30
  43741c:	cmp	w0, #0x9
  437420:	b.ls	437458 <wcrtomb@plt+0x32838>  // b.plast
  437424:	ldr	x0, [sp, #112]
  437428:	mov	w1, w20
  43742c:	str	w3, [sp, #120]
  437430:	bl	404870 <strchr@plt>
  437434:	ldr	w3, [sp, #120]
  437438:	mov	w1, #0x2                   	// #2
  43743c:	cbz	x0, 437468 <wcrtomb@plt+0x32848>
  437440:	str	w3, [sp, #120]
  437444:	bl	404540 <__ctype_toupper_loc@plt>
  437448:	ldr	x0, [x0]
  43744c:	ldr	w3, [sp, #120]
  437450:	ldr	w0, [x0, x20, lsl #2]
  437454:	sub	w0, w0, #0x37
  437458:	cmp	w0, #0xf
  43745c:	b.gt	43748c <wcrtomb@plt+0x3286c>
  437460:	add	w3, w0, w3, lsl #4
  437464:	mov	w1, #0x3                   	// #3
  437468:	add	w20, w25, w1
  43746c:	strb	w3, [x19], #1
  437470:	sxtw	x1, w20
  437474:	b	437154 <wcrtomb@plt+0x32534>
  437478:	and	w10, w20, #0xff
  43747c:	mov	w1, #0x2                   	// #2
  437480:	b	4372dc <wcrtomb@plt+0x326bc>
  437484:	mov	w1, #0x1                   	// #1
  437488:	b	4372dc <wcrtomb@plt+0x326bc>
  43748c:	mov	w1, #0x2                   	// #2
  437490:	b	437468 <wcrtomb@plt+0x32848>
  437494:	mov	x0, x22
  437498:	ldp	x19, x20, [sp, #16]
  43749c:	ldp	x21, x22, [sp, #32]
  4374a0:	ldp	x23, x24, [sp, #48]
  4374a4:	ldp	x25, x26, [sp, #64]
  4374a8:	ldp	x27, x28, [sp, #80]
  4374ac:	ldp	x29, x30, [sp], #144
  4374b0:	b	436f20 <wcrtomb@plt+0x32300>
  4374b4:	nop
  4374b8:	stp	x29, x30, [sp, #-112]!
  4374bc:	mov	x29, sp
  4374c0:	stp	x19, x20, [sp, #16]
  4374c4:	ldr	x19, [x0, #208]
  4374c8:	stp	x23, x24, [sp, #48]
  4374cc:	cbz	x19, 43767c <wcrtomb@plt+0x32a5c>
  4374d0:	mov	x23, x0
  4374d4:	mov	x24, #0x0                   	// #0
  4374d8:	stp	x21, x22, [sp, #32]
  4374dc:	stp	x25, x26, [sp, #64]
  4374e0:	mov	w26, #0x5                   	// #5
  4374e4:	stp	x27, x28, [sp, #80]
  4374e8:	str	xzr, [sp, #96]
  4374ec:	b	4374f8 <wcrtomb@plt+0x328d8>
  4374f0:	ldr	x19, [x19, #8]
  4374f4:	cbz	x19, 437608 <wcrtomb@plt+0x329e8>
  4374f8:	ldr	w1, [x19, #16]
  4374fc:	tst	w1, w26
  437500:	b.ne	4374f0 <wcrtomb@plt+0x328d0>  // b.any
  437504:	ldr	x0, [x19, #24]
  437508:	tbz	w1, #1, 437630 <wcrtomb@plt+0x32a10>
  43750c:	ldrb	w1, [x0]
  437510:	mov	x21, x0
  437514:	cmp	w1, #0x7e
  437518:	b.ne	4374f0 <wcrtomb@plt+0x328d0>  // b.any
  43751c:	bl	403ff0 <strlen@plt>
  437520:	mov	x22, x0
  437524:	cmp	x22, #0x1
  437528:	mov	x20, #0x1                   	// #1
  43752c:	b.hi	437540 <wcrtomb@plt+0x32920>  // b.pmore
  437530:	b	437660 <wcrtomb@plt+0x32a40>
  437534:	add	x20, x20, #0x1
  437538:	cmp	x20, x22
  43753c:	b.eq	4374f0 <wcrtomb@plt+0x328d0>  // b.none
  437540:	ldrb	w1, [x21, x20]
  437544:	cmp	w1, #0x2f
  437548:	b.ne	437534 <wcrtomb@plt+0x32914>  // b.any
  43754c:	cmp	x20, #0x1
  437550:	b.eq	437668 <wcrtomb@plt+0x32a48>  // b.none
  437554:	ldr	x0, [sp, #96]
  437558:	cmp	x20, x0
  43755c:	b.ls	437578 <wcrtomb@plt+0x32958>  // b.plast
  437560:	mov	x1, x20
  437564:	mov	x0, x24
  437568:	bl	404530 <realloc@plt>
  43756c:	cbz	x0, 437684 <wcrtomb@plt+0x32a64>
  437570:	mov	x24, x0
  437574:	str	x20, [sp, #96]
  437578:	sub	x27, x20, #0x1
  43757c:	add	x1, x21, #0x1
  437580:	mov	x2, x27
  437584:	mov	x0, x24
  437588:	bl	403f70 <memcpy@plt>
  43758c:	strb	wzr, [x24, x27]
  437590:	mov	x0, x24
  437594:	bl	404440 <getpwnam@plt>
  437598:	cbz	x0, 4374f0 <wcrtomb@plt+0x328d0>
  43759c:	ldr	x1, [x0, #32]
  4375a0:	sub	x22, x22, x27
  4375a4:	str	x1, [sp, #104]
  4375a8:	mov	x0, x1
  4375ac:	bl	403ff0 <strlen@plt>
  4375b0:	add	x28, x22, x0
  4375b4:	mov	x25, x0
  4375b8:	mov	x0, x28
  4375bc:	bl	404310 <malloc@plt>
  4375c0:	mov	x27, x0
  4375c4:	ldr	x1, [sp, #104]
  4375c8:	cbz	x0, 437684 <wcrtomb@plt+0x32a64>
  4375cc:	add	x28, x27, x28
  4375d0:	mov	x2, x25
  4375d4:	bl	403f70 <memcpy@plt>
  4375d8:	sub	x2, x22, #0x1
  4375dc:	add	x1, x21, x20
  4375e0:	add	x0, x27, x25
  4375e4:	bl	403f70 <memcpy@plt>
  4375e8:	sturb	wzr, [x28, #-1]
  4375ec:	ldr	w0, [x19, #16]
  4375f0:	tbnz	w0, #1, 437650 <wcrtomb@plt+0x32a30>
  4375f4:	orr	w0, w0, #0x2
  4375f8:	str	w0, [x19, #16]
  4375fc:	str	x27, [x19, #24]
  437600:	ldr	x19, [x19, #8]
  437604:	cbnz	x19, 4374f8 <wcrtomb@plt+0x328d8>
  437608:	ldp	x21, x22, [sp, #32]
  43760c:	ldp	x25, x26, [sp, #64]
  437610:	ldp	x27, x28, [sp, #80]
  437614:	mov	x0, x24
  437618:	bl	4047b0 <free@plt>
  43761c:	mov	w0, #0x0                   	// #0
  437620:	ldp	x19, x20, [sp, #16]
  437624:	ldp	x23, x24, [sp, #48]
  437628:	ldp	x29, x30, [sp], #112
  43762c:	ret
  437630:	ldr	x1, [x23, #168]
  437634:	add	x21, x1, x0
  437638:	ldrb	w1, [x1, x0]
  43763c:	cmp	w1, #0x7e
  437640:	b.ne	4374f0 <wcrtomb@plt+0x328d0>  // b.any
  437644:	ldr	x22, [x19, #32]
  437648:	sub	x22, x22, x0
  43764c:	b	437524 <wcrtomb@plt+0x32904>
  437650:	ldr	x0, [x19, #24]
  437654:	bl	4047b0 <free@plt>
  437658:	ldr	w0, [x19, #16]
  43765c:	b	4375f4 <wcrtomb@plt+0x329d4>
  437660:	b.eq	4374f0 <wcrtomb@plt+0x328d0>  // b.none
  437664:	nop
  437668:	bl	404120 <getuid@plt>
  43766c:	mov	x20, #0x2                   	// #2
  437670:	mov	x27, #0x1                   	// #1
  437674:	bl	404720 <getpwuid@plt>
  437678:	b	437598 <wcrtomb@plt+0x32978>
  43767c:	mov	x24, #0x0                   	// #0
  437680:	b	437614 <wcrtomb@plt+0x329f4>
  437684:	mov	x0, x24
  437688:	bl	4047b0 <free@plt>
  43768c:	mov	x0, x23
  437690:	ldp	x19, x20, [sp, #16]
  437694:	ldp	x21, x22, [sp, #32]
  437698:	ldp	x23, x24, [sp, #48]
  43769c:	ldp	x25, x26, [sp, #64]
  4376a0:	ldp	x27, x28, [sp, #80]
  4376a4:	ldp	x29, x30, [sp], #112
  4376a8:	b	436f20 <wcrtomb@plt+0x32300>
  4376ac:	nop
  4376b0:	stp	x29, x30, [sp, #-112]!
  4376b4:	mov	x29, sp
  4376b8:	stp	x19, x20, [sp, #16]
  4376bc:	mov	x20, x1
  4376c0:	stp	x21, x22, [sp, #32]
  4376c4:	mov	x21, x1
  4376c8:	stp	x23, x24, [sp, #48]
  4376cc:	mov	x24, x0
  4376d0:	mov	x0, #0x1                   	// #1
  4376d4:	stp	x25, x26, [sp, #64]
  4376d8:	cbz	x1, 437724 <wcrtomb@plt+0x32b04>
  4376dc:	mov	x19, #0x0                   	// #0
  4376e0:	b	4376f4 <wcrtomb@plt+0x32ad4>
  4376e4:	bl	403ff0 <strlen@plt>
  4376e8:	add	x19, x19, x0
  4376ec:	ldr	x20, [x20, #8]
  4376f0:	cbz	x20, 437720 <wcrtomb@plt+0x32b00>
  4376f4:	ldr	w1, [x20, #16]
  4376f8:	and	w0, w1, #0x1
  4376fc:	tbz	w1, #4, 43788c <wcrtomb@plt+0x32c6c>
  437700:	cbnz	w0, 4376ec <wcrtomb@plt+0x32acc>
  437704:	ldr	x0, [x20, #24]
  437708:	tbnz	w1, #1, 4376e4 <wcrtomb@plt+0x32ac4>
  43770c:	ldr	x1, [x20, #32]
  437710:	ldr	x20, [x20, #8]
  437714:	add	x19, x19, x1
  437718:	sub	x19, x19, x0
  43771c:	cbnz	x20, 4376f4 <wcrtomb@plt+0x32ad4>
  437720:	add	x0, x19, #0x1
  437724:	bl	404310 <malloc@plt>
  437728:	str	x0, [sp, #104]
  43772c:	mov	x25, x0
  437730:	cbz	x0, 4378c0 <wcrtomb@plt+0x32ca0>
  437734:	mov	x19, x21
  437738:	stp	x27, x28, [sp, #80]
  43773c:	ldr	w27, [x21, #16]
  437740:	adrp	x26, 473000 <_obstack_memory_used@@Base+0x21bf0>
  437744:	add	x26, x26, #0x7e8
  437748:	mov	w0, w27
  43774c:	ldr	x22, [x19, #8]
  437750:	tbnz	w0, #0, 4377dc <wcrtomb@plt+0x32bbc>
  437754:	nop
  437758:	ldr	x28, [x19, #24]
  43775c:	tbz	w0, #1, 437860 <wcrtomb@plt+0x32c40>
  437760:	mov	x0, x28
  437764:	bl	403ff0 <strlen@plt>
  437768:	mov	x2, x0
  43776c:	add	x23, x25, x0
  437770:	mov	x1, x28
  437774:	mov	x0, x25
  437778:	bl	403f70 <memcpy@plt>
  43777c:	cmp	x21, x19
  437780:	b.eq	4377c8 <wcrtomb@plt+0x32ba8>  // b.none
  437784:	ldp	x0, x1, [x19]
  437788:	ldr	w2, [x19, #16]
  43778c:	and	w2, w2, #0x4
  437790:	orr	w2, w2, w27
  437794:	str	w2, [x21, #16]
  437798:	cbz	x0, 437878 <wcrtomb@plt+0x32c58>
  43779c:	str	x1, [x0, #8]
  4377a0:	ldr	x1, [x19, #8]
  4377a4:	cbz	x1, 4377ec <wcrtomb@plt+0x32bcc>
  4377a8:	str	x0, [x1]
  4377ac:	ldr	w0, [x19, #16]
  4377b0:	tbnz	w0, #1, 437804 <wcrtomb@plt+0x32be4>
  4377b4:	mov	x0, x19
  4377b8:	bl	4047b0 <free@plt>
  4377bc:	cmp	x19, x20
  4377c0:	b.eq	43781c <wcrtomb@plt+0x32bfc>  // b.none
  4377c4:	ldr	w27, [x21, #16]
  4377c8:	ldr	w0, [x22, #16]
  4377cc:	mov	x19, x22
  4377d0:	mov	x25, x23
  4377d4:	ldr	x22, [x19, #8]
  4377d8:	tbz	w0, #0, 437758 <wcrtomb@plt+0x32b38>
  4377dc:	mov	x23, x25
  4377e0:	mov	x28, x26
  4377e4:	mov	x2, #0x0                   	// #0
  4377e8:	b	437770 <wcrtomb@plt+0x32b50>
  4377ec:	ldr	w1, [x0, #16]
  4377f0:	and	w1, w1, #0xffffffef
  4377f4:	str	w1, [x0, #16]
  4377f8:	str	x0, [x24, #216]
  4377fc:	ldr	w0, [x19, #16]
  437800:	tbz	w0, #1, 4377b4 <wcrtomb@plt+0x32b94>
  437804:	ldr	x0, [x19, #24]
  437808:	bl	4047b0 <free@plt>
  43780c:	mov	x0, x19
  437810:	bl	4047b0 <free@plt>
  437814:	cmp	x19, x20
  437818:	b.ne	4377c4 <wcrtomb@plt+0x32ba4>  // b.any
  43781c:	ldr	w1, [x21, #16]
  437820:	strb	wzr, [x23]
  437824:	and	w0, w1, #0xffffffef
  437828:	str	w0, [x21, #16]
  43782c:	tbnz	w1, #1, 4378a4 <wcrtomb@plt+0x32c84>
  437830:	orr	w0, w0, #0x2
  437834:	str	w0, [x21, #16]
  437838:	ldr	x0, [sp, #104]
  43783c:	ldp	x19, x20, [sp, #16]
  437840:	ldp	x23, x24, [sp, #48]
  437844:	ldp	x25, x26, [sp, #64]
  437848:	ldp	x27, x28, [sp, #80]
  43784c:	str	x0, [x21, #24]
  437850:	mov	w0, #0x0                   	// #0
  437854:	ldp	x21, x22, [sp, #32]
  437858:	ldp	x29, x30, [sp], #112
  43785c:	ret
  437860:	ldr	x2, [x19, #32]
  437864:	ldr	x1, [x24, #168]
  437868:	sub	x2, x2, x28
  43786c:	add	x23, x25, x2
  437870:	add	x28, x1, x28
  437874:	b	437770 <wcrtomb@plt+0x32b50>
  437878:	str	x1, [x24, #208]
  43787c:	ldr	x1, [x19, #8]
  437880:	cbnz	x1, 4377a8 <wcrtomb@plt+0x32b88>
  437884:	str	x0, [x24, #216]
  437888:	b	4377fc <wcrtomb@plt+0x32bdc>
  43788c:	cbnz	w0, 437720 <wcrtomb@plt+0x32b00>
  437890:	ldr	x0, [x20, #24]
  437894:	tbz	w1, #1, 4378b0 <wcrtomb@plt+0x32c90>
  437898:	bl	403ff0 <strlen@plt>
  43789c:	add	x19, x19, x0
  4378a0:	b	437720 <wcrtomb@plt+0x32b00>
  4378a4:	ldr	x0, [x21, #24]
  4378a8:	bl	4047b0 <free@plt>
  4378ac:	b	437838 <wcrtomb@plt+0x32c18>
  4378b0:	ldr	x1, [x20, #32]
  4378b4:	add	x19, x19, x1
  4378b8:	sub	x19, x19, x0
  4378bc:	b	437720 <wcrtomb@plt+0x32b00>
  4378c0:	mov	x0, x24
  4378c4:	ldp	x19, x20, [sp, #16]
  4378c8:	ldp	x21, x22, [sp, #32]
  4378cc:	ldp	x23, x24, [sp, #48]
  4378d0:	ldp	x25, x26, [sp, #64]
  4378d4:	ldp	x29, x30, [sp], #112
  4378d8:	b	436f20 <wcrtomb@plt+0x32300>
  4378dc:	nop
  4378e0:	stp	x29, x30, [sp, #-48]!
  4378e4:	mov	x29, sp
  4378e8:	stp	x19, x20, [sp, #16]
  4378ec:	mov	x20, x0
  4378f0:	ldr	w0, [x0, #32]
  4378f4:	stp	x21, x22, [sp, #32]
  4378f8:	sxtw	x21, w1
  4378fc:	add	x19, x21, #0x1
  437900:	ldr	x1, [x20]
  437904:	mov	x22, x2
  437908:	mov	x2, #0x0                   	// #0
  43790c:	add	x19, x19, x1
  437910:	tbz	w0, #1, 437918 <wcrtomb@plt+0x32cf8>
  437914:	ldr	x2, [x20, #16]
  437918:	ldr	x0, [x20, #8]
  43791c:	cbz	x0, 4379b8 <wcrtomb@plt+0x32d98>
  437920:	ldr	x3, [x20, #24]
  437924:	add	x1, x1, x2
  437928:	add	x2, x19, x1
  43792c:	cmp	x3, x2
  437930:	b.cc	437990 <wcrtomb@plt+0x32d70>  // b.lo, b.ul, b.last
  437934:	mov	x19, #0x0                   	// #0
  437938:	cbz	x21, 4379d8 <wcrtomb@plt+0x32db8>
  43793c:	nop
  437940:	ldr	x0, [x22, x19, lsl #3]
  437944:	bl	404580 <strdup@plt>
  437948:	cbz	x0, 4379e4 <wcrtomb@plt+0x32dc4>
  43794c:	ldp	x4, x1, [x20]
  437950:	ldr	x5, [x20, #16]
  437954:	add	x3, x5, x4
  437958:	add	x3, x3, x19
  43795c:	add	x19, x19, #0x1
  437960:	cmp	x21, x19
  437964:	str	x0, [x1, x3, lsl #3]
  437968:	b.ne	437940 <wcrtomb@plt+0x32d20>  // b.any
  43796c:	add	x4, x4, x21
  437970:	add	x5, x5, x4
  437974:	str	x4, [x20]
  437978:	mov	w0, #0x0                   	// #0
  43797c:	str	xzr, [x1, x5, lsl #3]
  437980:	ldp	x19, x20, [sp, #16]
  437984:	ldp	x21, x22, [sp, #32]
  437988:	ldp	x29, x30, [sp], #48
  43798c:	ret
  437990:	cmp	x19, #0x80
  437994:	mov	x2, #0x80                  	// #128
  437998:	csel	x19, x19, x2, cs  // cs = hs, nlast
  43799c:	add	x19, x19, x1
  4379a0:	lsl	x1, x19, #3
  4379a4:	bl	404530 <realloc@plt>
  4379a8:	cbz	x0, 437a38 <wcrtomb@plt+0x32e18>
  4379ac:	str	x0, [x20, #8]
  4379b0:	str	x19, [x20, #24]
  4379b4:	b	437934 <wcrtomb@plt+0x32d14>
  4379b8:	add	x1, x19, x2
  4379bc:	mov	x0, #0x80                  	// #128
  4379c0:	cmp	x1, x0
  4379c4:	mov	x1, #0x8                   	// #8
  4379c8:	csel	x19, x19, x0, hi  // hi = pmore
  4379cc:	mov	x0, x19
  4379d0:	bl	4044c0 <calloc@plt>
  4379d4:	b	4379a8 <wcrtomb@plt+0x32d88>
  4379d8:	ldp	x4, x1, [x20]
  4379dc:	ldr	x5, [x20, #16]
  4379e0:	b	437970 <wcrtomb@plt+0x32d50>
  4379e4:	cbz	x19, 437a24 <wcrtomb@plt+0x32e04>
  4379e8:	ldp	x1, x2, [x20]
  4379ec:	ldr	x0, [x20, #16]
  4379f0:	add	x0, x0, x1
  4379f4:	add	x0, x0, x19
  4379f8:	add	x0, x2, x0, lsl #3
  4379fc:	ldur	x0, [x0, #-8]
  437a00:	bl	4047b0 <free@plt>
  437a04:	ldp	x1, x2, [x20]
  437a08:	ldr	x0, [x20, #16]
  437a0c:	add	x0, x0, x1
  437a10:	add	x1, x0, x19
  437a14:	subs	x19, x19, #0x1
  437a18:	add	x1, x2, x1, lsl #3
  437a1c:	stur	xzr, [x1, #-8]
  437a20:	b.ne	4379f4 <wcrtomb@plt+0x32dd4>  // b.any
  437a24:	mov	x0, x20
  437a28:	ldp	x19, x20, [sp, #16]
  437a2c:	ldp	x21, x22, [sp, #32]
  437a30:	ldp	x29, x30, [sp], #48
  437a34:	b	436f20 <wcrtomb@plt+0x32300>
  437a38:	mov	x0, x20
  437a3c:	bl	436f20 <wcrtomb@plt+0x32300>
  437a40:	cbnz	w0, 437980 <wcrtomb@plt+0x32d60>
  437a44:	b	437934 <wcrtomb@plt+0x32d14>
  437a48:	stp	x29, x30, [sp, #-304]!
  437a4c:	mov	x29, sp
  437a50:	stp	x21, x22, [sp, #32]
  437a54:	ldr	x22, [x0, #208]
  437a58:	str	x27, [sp, #80]
  437a5c:	ldr	w27, [x0, #36]
  437a60:	stp	x19, x20, [sp, #16]
  437a64:	ubfx	x27, x27, #2, #1
  437a68:	cbz	x22, 437aa4 <wcrtomb@plt+0x32e84>
  437a6c:	adrp	x21, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  437a70:	lsl	w27, w27, #7
  437a74:	add	x21, x21, #0x950
  437a78:	stp	x25, x26, [sp, #64]
  437a7c:	mov	x26, x0
  437a80:	stp	x23, x24, [sp, #48]
  437a84:	nop
  437a88:	ldr	w0, [x22, #16]
  437a8c:	mov	x23, x22
  437a90:	ldr	x22, [x22, #8]
  437a94:	tbz	w0, #2, 437ac0 <wcrtomb@plt+0x32ea0>
  437a98:	cbnz	x22, 437a88 <wcrtomb@plt+0x32e68>
  437a9c:	ldp	x23, x24, [sp, #48]
  437aa0:	ldp	x25, x26, [sp, #64]
  437aa4:	mov	w19, #0x0                   	// #0
  437aa8:	mov	w0, w19
  437aac:	ldp	x19, x20, [sp, #16]
  437ab0:	ldp	x21, x22, [sp, #32]
  437ab4:	ldr	x27, [sp, #80]
  437ab8:	ldp	x29, x30, [sp], #304
  437abc:	ret
  437ac0:	tbnz	w0, #0, 437b04 <wcrtomb@plt+0x32ee4>
  437ac4:	ldr	x24, [x23, #24]
  437ac8:	tbz	w0, #1, 437b98 <wcrtomb@plt+0x32f78>
  437acc:	mov	x0, x24
  437ad0:	bl	403ff0 <strlen@plt>
  437ad4:	mov	x25, x0
  437ad8:	mov	w20, w0
  437adc:	add	x20, x24, w20, uxtw
  437ae0:	mov	x19, x24
  437ae4:	b	437af8 <wcrtomb@plt+0x32ed8>
  437ae8:	ldrb	w1, [x19], #1
  437aec:	mov	x0, x21
  437af0:	bl	404870 <strchr@plt>
  437af4:	cbnz	x0, 437b18 <wcrtomb@plt+0x32ef8>
  437af8:	cmp	x19, x20
  437afc:	b.ne	437ae8 <wcrtomb@plt+0x32ec8>  // b.any
  437b00:	b	437a98 <wcrtomb@plt+0x32e78>
  437b04:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x21bf0>
  437b08:	mov	w20, #0x0                   	// #0
  437b0c:	add	x24, x24, #0x7e8
  437b10:	mov	x25, #0x0                   	// #0
  437b14:	b	437adc <wcrtomb@plt+0x32ebc>
  437b18:	add	x0, x25, #0x1
  437b1c:	bl	404310 <malloc@plt>
  437b20:	mov	x19, x0
  437b24:	cbz	x0, 437bc4 <wcrtomb@plt+0x32fa4>
  437b28:	mov	x1, x24
  437b2c:	mov	x2, x25
  437b30:	bl	403f70 <memcpy@plt>
  437b34:	strb	wzr, [x19, x25]
  437b38:	add	x3, sp, #0x68
  437b3c:	mov	w1, w27
  437b40:	mov	x0, x19
  437b44:	mov	x2, #0x0                   	// #0
  437b48:	bl	404a00 <glob@plt>
  437b4c:	cmp	w0, #0x1
  437b50:	b.eq	437bbc <wcrtomb@plt+0x32f9c>  // b.none
  437b54:	cmp	w0, #0x3
  437b58:	b.eq	437c84 <wcrtomb@plt+0x33064>  // b.none
  437b5c:	cbz	w0, 437bf0 <wcrtomb@plt+0x32fd0>
  437b60:	mov	x0, x19
  437b64:	bl	4047b0 <free@plt>
  437b68:	ldr	w0, [x26, #32]
  437b6c:	mov	w19, #0x8                   	// #8
  437b70:	str	w19, [x26, #192]
  437b74:	tbnz	w0, #4, 437d4c <wcrtomb@plt+0x3312c>
  437b78:	ldp	x23, x24, [sp, #48]
  437b7c:	ldp	x25, x26, [sp, #64]
  437b80:	mov	w0, w19
  437b84:	ldp	x19, x20, [sp, #16]
  437b88:	ldp	x21, x22, [sp, #32]
  437b8c:	ldr	x27, [sp, #80]
  437b90:	ldp	x29, x30, [sp], #304
  437b94:	ret
  437b98:	ldr	x25, [x23, #32]
  437b9c:	ldr	x1, [x26, #168]
  437ba0:	sub	x25, x25, x24
  437ba4:	mov	w20, w25
  437ba8:	add	x24, x1, x24
  437bac:	b	437adc <wcrtomb@plt+0x32ebc>
  437bb0:	tbz	w1, #1, 437bbc <wcrtomb@plt+0x32f9c>
  437bb4:	ldr	x0, [x19, #24]
  437bb8:	bl	4047b0 <free@plt>
  437bbc:	mov	x0, x19
  437bc0:	bl	4047b0 <free@plt>
  437bc4:	mov	x0, x26
  437bc8:	bl	436f20 <wcrtomb@plt+0x32300>
  437bcc:	mov	w19, w0
  437bd0:	mov	w0, w19
  437bd4:	ldp	x19, x20, [sp, #16]
  437bd8:	ldp	x21, x22, [sp, #32]
  437bdc:	ldp	x23, x24, [sp, #48]
  437be0:	ldp	x25, x26, [sp, #64]
  437be4:	ldr	x27, [sp, #80]
  437be8:	ldp	x29, x30, [sp], #304
  437bec:	ret
  437bf0:	mov	x0, x19
  437bf4:	bl	4047b0 <free@plt>
  437bf8:	ldr	x0, [sp, #104]
  437bfc:	mov	x24, x23
  437c00:	mov	x20, #0x0                   	// #0
  437c04:	cbz	x0, 437da4 <wcrtomb@plt+0x33184>
  437c08:	mov	x1, #0x28                  	// #40
  437c0c:	mov	x0, #0x1                   	// #1
  437c10:	bl	4044c0 <calloc@plt>
  437c14:	mov	x19, x0
  437c18:	cbz	x0, 437e68 <wcrtomb@plt+0x33248>
  437c1c:	ldr	x0, [sp, #112]
  437c20:	ldr	x0, [x0, x20, lsl #3]
  437c24:	bl	404580 <strdup@plt>
  437c28:	ldr	w1, [x19, #16]
  437c2c:	cbz	x0, 437bb0 <wcrtomb@plt+0x32f90>
  437c30:	ldr	x2, [x26, #208]
  437c34:	orr	w1, w1, #0x6
  437c38:	str	w1, [x19, #16]
  437c3c:	mov	x1, x19
  437c40:	str	x0, [x19, #24]
  437c44:	cbz	x2, 437d88 <wcrtomb@plt+0x33168>
  437c48:	mov	x0, x1
  437c4c:	ldr	x1, [x1, #8]
  437c50:	cbnz	x1, 437c48 <wcrtomb@plt+0x33028>
  437c54:	ldr	x1, [x24, #8]
  437c58:	cbz	x1, 437de0 <wcrtomb@plt+0x331c0>
  437c5c:	str	x0, [x1]
  437c60:	str	x1, [x0, #8]
  437c64:	add	x20, x20, #0x1
  437c68:	str	x24, [x19]
  437c6c:	ldr	x0, [sp, #104]
  437c70:	str	x19, [x24, #8]
  437c74:	cmp	x0, x20
  437c78:	b.ls	437da4 <wcrtomb@plt+0x33184>  // b.plast
  437c7c:	mov	x24, x19
  437c80:	b	437c08 <wcrtomb@plt+0x32fe8>
  437c84:	ldr	w0, [x26, #36]
  437c88:	tbnz	w0, #0, 437d14 <wcrtomb@plt+0x330f4>
  437c8c:	tbz	w0, #1, 437d3c <wcrtomb@plt+0x3311c>
  437c90:	ldr	w0, [x26, #192]
  437c94:	cmp	w0, #0x9
  437c98:	b.eq	437e5c <wcrtomb@plt+0x3323c>  // b.none
  437c9c:	mov	w2, #0x5                   	// #5
  437ca0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  437ca4:	mov	x0, #0x0                   	// #0
  437ca8:	add	x1, x1, #0x958
  437cac:	bl	4049c0 <dcgettext@plt>
  437cb0:	mov	x4, x0
  437cb4:	mov	x3, #0x80                  	// #128
  437cb8:	mov	x5, x19
  437cbc:	mov	x1, x3
  437cc0:	mov	w2, #0x1                   	// #1
  437cc4:	add	x0, sp, #0xb0
  437cc8:	bl	404290 <__snprintf_chk@plt>
  437ccc:	mov	x0, x19
  437cd0:	bl	4047b0 <free@plt>
  437cd4:	add	x0, sp, #0xb0
  437cd8:	bl	404580 <strdup@plt>
  437cdc:	str	x0, [x26, #200]
  437ce0:	cbz	x0, 437bc4 <wcrtomb@plt+0x32fa4>
  437ce4:	ldr	w1, [x26, #32]
  437ce8:	mov	w19, #0x9                   	// #9
  437cec:	str	w19, [x26, #192]
  437cf0:	tbz	w1, #4, 437b78 <wcrtomb@plt+0x32f58>
  437cf4:	ldr	x2, [x26, #96]
  437cf8:	mov	x1, x0
  437cfc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  437d00:	add	x0, x0, #0x828
  437d04:	blr	x2
  437d08:	ldp	x23, x24, [sp, #48]
  437d0c:	ldp	x25, x26, [sp, #64]
  437d10:	b	437b80 <wcrtomb@plt+0x32f60>
  437d14:	ldp	x0, x1, [x23]
  437d18:	cbz	x0, 437e48 <wcrtomb@plt+0x33228>
  437d1c:	str	x1, [x0, #8]
  437d20:	ldr	x1, [x23, #8]
  437d24:	cbz	x1, 437e04 <wcrtomb@plt+0x331e4>
  437d28:	str	x0, [x1]
  437d2c:	ldr	w0, [x23, #16]
  437d30:	tbnz	w0, #1, 437e3c <wcrtomb@plt+0x3321c>
  437d34:	mov	x0, x23
  437d38:	bl	4047b0 <free@plt>
  437d3c:	mov	x0, x19
  437d40:	bl	4047b0 <free@plt>
  437d44:	cbnz	x22, 437a88 <wcrtomb@plt+0x32e68>
  437d48:	b	437a9c <wcrtomb@plt+0x32e7c>
  437d4c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  437d50:	add	x3, x0, #0x290
  437d54:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  437d58:	add	x1, x1, #0x8e0
  437d5c:	ldr	w0, [x0, #656]
  437d60:	ldr	x2, [x26, #96]
  437d64:	cmp	w0, w19
  437d68:	b.gt	437dfc <wcrtomb@plt+0x331dc>
  437d6c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  437d70:	mov	w19, #0x8                   	// #8
  437d74:	add	x0, x0, #0x828
  437d78:	blr	x2
  437d7c:	ldp	x23, x24, [sp, #48]
  437d80:	ldp	x25, x26, [sp, #64]
  437d84:	b	437b80 <wcrtomb@plt+0x32f60>
  437d88:	dup	v0.2d, x19
  437d8c:	stp	xzr, xzr, [x19]
  437d90:	add	x20, x20, #0x1
  437d94:	ldr	x0, [sp, #104]
  437d98:	str	q0, [x26, #208]
  437d9c:	cmp	x0, x20
  437da0:	b.hi	437c7c <wcrtomb@plt+0x3305c>  // b.pmore
  437da4:	add	x0, sp, #0x68
  437da8:	bl	404880 <globfree@plt>
  437dac:	ldr	x0, [x23]
  437db0:	cbz	x0, 437e24 <wcrtomb@plt+0x33204>
  437db4:	ldr	x1, [x23, #8]
  437db8:	str	x1, [x0, #8]
  437dbc:	ldr	x1, [x23, #8]
  437dc0:	cbz	x1, 437de8 <wcrtomb@plt+0x331c8>
  437dc4:	str	x0, [x1]
  437dc8:	ldr	w0, [x23, #16]
  437dcc:	tbnz	w0, #1, 437e18 <wcrtomb@plt+0x331f8>
  437dd0:	mov	x0, x23
  437dd4:	bl	4047b0 <free@plt>
  437dd8:	cbnz	x22, 437a88 <wcrtomb@plt+0x32e68>
  437ddc:	b	437a9c <wcrtomb@plt+0x32e7c>
  437de0:	str	x0, [x26, #216]
  437de4:	b	437c60 <wcrtomb@plt+0x33040>
  437de8:	ldr	w1, [x0, #16]
  437dec:	and	w1, w1, #0xffffffef
  437df0:	str	w1, [x0, #16]
  437df4:	str	x0, [x26, #216]
  437df8:	b	437dc8 <wcrtomb@plt+0x331a8>
  437dfc:	ldr	x1, [x3, #80]
  437e00:	b	437d6c <wcrtomb@plt+0x3314c>
  437e04:	ldr	w1, [x0, #16]
  437e08:	and	w1, w1, #0xffffffef
  437e0c:	str	w1, [x0, #16]
  437e10:	str	x0, [x26, #216]
  437e14:	b	437d2c <wcrtomb@plt+0x3310c>
  437e18:	ldr	x0, [x23, #24]
  437e1c:	bl	4047b0 <free@plt>
  437e20:	b	437dd0 <wcrtomb@plt+0x331b0>
  437e24:	ldr	x1, [x23, #8]
  437e28:	str	x1, [x26, #208]
  437e2c:	ldr	x1, [x23, #8]
  437e30:	cbnz	x1, 437dc4 <wcrtomb@plt+0x331a4>
  437e34:	str	x0, [x26, #216]
  437e38:	b	437dc8 <wcrtomb@plt+0x331a8>
  437e3c:	ldr	x0, [x23, #24]
  437e40:	bl	4047b0 <free@plt>
  437e44:	b	437d34 <wcrtomb@plt+0x33114>
  437e48:	str	x1, [x26, #208]
  437e4c:	ldr	x1, [x23, #8]
  437e50:	cbnz	x1, 437d28 <wcrtomb@plt+0x33108>
  437e54:	str	x0, [x26, #216]
  437e58:	b	437d2c <wcrtomb@plt+0x3310c>
  437e5c:	ldr	x0, [x26, #200]
  437e60:	bl	4047b0 <free@plt>
  437e64:	b	437c9c <wcrtomb@plt+0x3307c>
  437e68:	mov	x0, x26
  437e6c:	bl	436f20 <wcrtomb@plt+0x32300>
  437e70:	cbz	w0, 437c1c <wcrtomb@plt+0x32ffc>
  437e74:	mov	w19, #0x1                   	// #1
  437e78:	ldp	x23, x24, [sp, #48]
  437e7c:	ldp	x25, x26, [sp, #64]
  437e80:	b	437b80 <wcrtomb@plt+0x32f60>
  437e84:	nop
  437e88:	stp	x29, x30, [sp, #-80]!
  437e8c:	mov	x29, sp
  437e90:	stp	x19, x20, [sp, #16]
  437e94:	mov	w20, w5
  437e98:	stp	x21, x22, [sp, #32]
  437e9c:	mov	x22, x1
  437ea0:	mov	x21, x4
  437ea4:	mov	x1, #0x28                  	// #40
  437ea8:	stp	x23, x24, [sp, #48]
  437eac:	mov	x24, x0
  437eb0:	mov	x23, x2
  437eb4:	mov	x0, #0x1                   	// #1
  437eb8:	stp	x25, x26, [sp, #64]
  437ebc:	mov	x25, x3
  437ec0:	bl	4044c0 <calloc@plt>
  437ec4:	mov	x19, x0
  437ec8:	cbz	x0, 437f9c <wcrtomb@plt+0x3337c>
  437ecc:	ldr	x1, [x24, #208]
  437ed0:	mov	x0, x19
  437ed4:	cbz	x1, 437f04 <wcrtomb@plt+0x332e4>
  437ed8:	mov	x1, x0
  437edc:	ldr	x0, [x0, #8]
  437ee0:	cbnz	x0, 437ed8 <wcrtomb@plt+0x332b8>
  437ee4:	ldr	x0, [x22]
  437ee8:	ldr	x2, [x0, #8]
  437eec:	cbz	x2, 437f94 <wcrtomb@plt+0x33374>
  437ef0:	str	x1, [x2]
  437ef4:	str	x2, [x1, #8]
  437ef8:	str	x0, [x19]
  437efc:	str	x19, [x0, #8]
  437f00:	b	437f10 <wcrtomb@plt+0x332f0>
  437f04:	dup	v0.2d, x19
  437f08:	stp	xzr, xzr, [x19]
  437f0c:	str	q0, [x24, #208]
  437f10:	ldr	w0, [x23, #16]
  437f14:	tbz	w0, #1, 437f70 <wcrtomb@plt+0x33350>
  437f18:	tbnz	w0, #0, 437f88 <wcrtomb@plt+0x33368>
  437f1c:	ldr	x26, [x23, #24]
  437f20:	add	x0, x21, #0x1
  437f24:	bl	404310 <malloc@plt>
  437f28:	mov	x23, x0
  437f2c:	cbz	x0, 437fb0 <wcrtomb@plt+0x33390>
  437f30:	add	x1, x26, x25
  437f34:	mov	x2, x21
  437f38:	bl	403f70 <memcpy@plt>
  437f3c:	strb	wzr, [x23, x21]
  437f40:	mov	w5, #0x2                   	// #2
  437f44:	str	x23, [x19, #24]
  437f48:	orr	w5, w20, w5
  437f4c:	mov	w0, #0x0                   	// #0
  437f50:	str	x19, [x22]
  437f54:	str	w5, [x19, #16]
  437f58:	ldp	x19, x20, [sp, #16]
  437f5c:	ldp	x21, x22, [sp, #32]
  437f60:	ldp	x23, x24, [sp, #48]
  437f64:	ldp	x25, x26, [sp, #64]
  437f68:	ldp	x29, x30, [sp], #80
  437f6c:	ret
  437f70:	ldr	x4, [x23, #24]
  437f74:	ldr	w5, [x19, #16]
  437f78:	add	x3, x25, x4
  437f7c:	add	x4, x21, x3
  437f80:	stp	x3, x4, [x19, #24]
  437f84:	b	437f48 <wcrtomb@plt+0x33328>
  437f88:	adrp	x26, 473000 <_obstack_memory_used@@Base+0x21bf0>
  437f8c:	add	x26, x26, #0x7e8
  437f90:	b	437f20 <wcrtomb@plt+0x33300>
  437f94:	str	x1, [x24, #216]
  437f98:	b	437ef4 <wcrtomb@plt+0x332d4>
  437f9c:	mov	x0, x24
  437fa0:	bl	436f20 <wcrtomb@plt+0x32300>
  437fa4:	cbz	w0, 437ecc <wcrtomb@plt+0x332ac>
  437fa8:	mov	w0, #0x1                   	// #1
  437fac:	b	437f58 <wcrtomb@plt+0x33338>
  437fb0:	mov	x0, x24
  437fb4:	ldp	x19, x20, [sp, #16]
  437fb8:	ldp	x21, x22, [sp, #32]
  437fbc:	ldp	x23, x24, [sp, #48]
  437fc0:	ldp	x25, x26, [sp, #64]
  437fc4:	ldp	x29, x30, [sp], #80
  437fc8:	b	436f20 <wcrtomb@plt+0x32300>
  437fcc:	nop
  437fd0:	stp	x29, x30, [sp, #-144]!
  437fd4:	mov	x29, sp
  437fd8:	stp	x21, x22, [sp, #32]
  437fdc:	mov	x21, x0
  437fe0:	stp	x27, x28, [sp, #80]
  437fe4:	ldp	x22, x28, [x0, #168]
  437fe8:	stp	x23, x24, [sp, #48]
  437fec:	stp	x25, x26, [sp, #64]
  437ff0:	str	x1, [sp, #136]
  437ff4:	cmp	x28, x1
  437ff8:	ldr	x25, [x0, #64]
  437ffc:	ldr	x23, [x0, #216]
  438000:	b.ls	438204 <wcrtomb@plt+0x335e4>  // b.plast
  438004:	ldr	w27, [x0, #32]
  438008:	mov	w24, w2
  43800c:	stp	x19, x20, [sp, #16]
  438010:	mov	x19, x1
  438014:	tbz	w27, #13, 438024 <wcrtomb@plt+0x33404>
  438018:	ldrb	w0, [x22, x1]
  43801c:	cmp	w0, #0x73
  438020:	b.eq	438344 <wcrtomb@plt+0x33724>  // b.none
  438024:	cbz	w24, 438164 <wcrtomb@plt+0x33544>
  438028:	mov	x20, x19
  43802c:	mov	w26, #0x0                   	// #0
  438030:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438034:	add	x27, x27, #0x9a0
  438038:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43803c:	add	x0, x0, #0x9a8
  438040:	str	x0, [sp, #104]
  438044:	nop
  438048:	cbz	x25, 43805c <wcrtomb@plt+0x3343c>
  43804c:	ldrb	w1, [x22, x19]
  438050:	mov	x0, x25
  438054:	bl	404870 <strchr@plt>
  438058:	cbnz	x0, 438578 <wcrtomb@plt+0x33958>
  43805c:	ldr	w0, [x21, #32]
  438060:	tst	w0, #0x600
  438064:	b.eq	438094 <wcrtomb@plt+0x33474>  // b.none
  438068:	ldrb	w1, [x22, x19]
  43806c:	cmp	w1, #0x5c
  438070:	b.eq	4381ec <wcrtomb@plt+0x335cc>  // b.none
  438074:	cmp	w1, #0x27
  438078:	and	w3, w0, #0x200
  43807c:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  438080:	b.ne	438224 <wcrtomb@plt+0x33604>  // b.any
  438084:	and	w0, w0, #0x400
  438088:	cmp	w1, #0x22
  43808c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  438090:	b.ne	438224 <wcrtomb@plt+0x33604>  // b.any
  438094:	ldrb	w0, [x22, x19]
  438098:	cmp	w0, #0x24
  43809c:	b.eq	43819c <wcrtomb@plt+0x3357c>  // b.none
  4380a0:	cbnz	w24, 4380b4 <wcrtomb@plt+0x33494>
  4380a4:	ldrb	w1, [x22, x19]
  4380a8:	ldr	x0, [x21, #56]
  4380ac:	bl	404870 <strchr@plt>
  4380b0:	cbnz	x0, 4380c4 <wcrtomb@plt+0x334a4>
  4380b4:	add	x19, x19, #0x1
  4380b8:	str	x19, [sp, #136]
  4380bc:	cmp	x28, x19
  4380c0:	b.hi	438048 <wcrtomb@plt+0x33428>  // b.pmore
  4380c4:	mov	x28, x19
  4380c8:	cbz	w26, 4380d4 <wcrtomb@plt+0x334b4>
  4380cc:	cmp	x20, x28
  4380d0:	b.cc	438328 <wcrtomb@plt+0x33708>  // b.lo, b.ul, b.last
  4380d4:	mov	w22, #0x0                   	// #0
  4380d8:	cmp	x28, x20
  4380dc:	b.eq	438114 <wcrtomb@plt+0x334f4>  // b.none
  4380e0:	mov	x1, #0x28                  	// #40
  4380e4:	mov	x0, #0x1                   	// #1
  4380e8:	bl	4044c0 <calloc@plt>
  4380ec:	mov	x19, x0
  4380f0:	cbz	x0, 438608 <wcrtomb@plt+0x339e8>
  4380f4:	ldr	x0, [x21, #216]
  4380f8:	stp	x0, xzr, [x19]
  4380fc:	str	w22, [x19, #16]
  438100:	stp	x20, x28, [x19, #24]
  438104:	cbz	x0, 438484 <wcrtomb@plt+0x33864>
  438108:	str	x19, [x0, #8]
  43810c:	ldr	x28, [sp, #136]
  438110:	str	x19, [x21, #216]
  438114:	ldr	w1, [x21, #32]
  438118:	mov	w0, #0x0                   	// #0
  43811c:	str	x28, [x21, #184]
  438120:	tbnz	w1, #29, 438434 <wcrtomb@plt+0x33814>
  438124:	cbz	w24, 438144 <wcrtomb@plt+0x33524>
  438128:	cbz	x23, 43856c <wcrtomb@plt+0x3394c>
  43812c:	nop
  438130:	ldr	w0, [x23, #16]
  438134:	orr	w0, w0, #0x4
  438138:	str	w0, [x23, #16]
  43813c:	ldr	x23, [x23, #8]
  438140:	cbnz	x23, 438130 <wcrtomb@plt+0x33510>
  438144:	mov	w0, #0x1                   	// #1
  438148:	ldp	x19, x20, [sp, #16]
  43814c:	ldp	x21, x22, [sp, #32]
  438150:	ldp	x23, x24, [sp, #48]
  438154:	ldp	x25, x26, [sp, #64]
  438158:	ldp	x27, x28, [sp, #80]
  43815c:	ldp	x29, x30, [sp], #144
  438160:	ret
  438164:	ldrb	w1, [x22, x19]
  438168:	mov	x20, x19
  43816c:	ldr	x0, [x21, #56]
  438170:	mov	w26, #0x0                   	// #0
  438174:	bl	404870 <strchr@plt>
  438178:	cbz	x0, 438030 <wcrtomb@plt+0x33410>
  43817c:	ldr	x0, [x21, #32]
  438180:	and	x0, x0, #0xfffffff000
  438184:	and	x0, x0, #0xffffff8000001fff
  438188:	cbnz	x0, 4383e8 <wcrtomb@plt+0x337c8>
  43818c:	and	w22, w27, #0x800
  438190:	tbnz	w27, #11, 438428 <wcrtomb@plt+0x33808>
  438194:	mov	x28, x19
  438198:	b	4380e0 <wcrtomb@plt+0x334c0>
  43819c:	ldr	w0, [x21, #32]
  4381a0:	tbnz	w0, #6, 4381b4 <wcrtomb@plt+0x33594>
  4381a4:	add	x1, x22, x19
  4381a8:	ldrb	w1, [x1, #1]
  4381ac:	cmp	w1, #0x7b
  4381b0:	b.eq	4383f8 <wcrtomb@plt+0x337d8>  // b.none
  4381b4:	tbnz	w0, #2, 4380a0 <wcrtomb@plt+0x33480>
  4381b8:	add	x0, x22, x19
  4381bc:	ldrb	w0, [x0, #1]
  4381c0:	cmp	w0, #0x28
  4381c4:	b.ne	4380a0 <wcrtomb@plt+0x33480>  // b.any
  4381c8:	ldr	x4, [sp, #104]
  4381cc:	add	x1, x19, #0x2
  4381d0:	add	x3, sp, #0x88
  4381d4:	mov	x2, x28
  4381d8:	mov	x0, x22
  4381dc:	bl	436388 <wcrtomb@plt+0x31768>
  4381e0:	ldr	x19, [sp, #136]
  4381e4:	cbnz	w0, 4380a0 <wcrtomb@plt+0x33480>
  4381e8:	b	4380bc <wcrtomb@plt+0x3349c>
  4381ec:	add	x0, x19, #0x1
  4381f0:	cmp	x0, x28
  4381f4:	b.eq	438320 <wcrtomb@plt+0x33700>  // b.none
  4381f8:	add	x19, x19, #0x2
  4381fc:	str	x19, [sp, #136]
  438200:	b	4380bc <wcrtomb@plt+0x3349c>
  438204:	mov	w0, #0x0                   	// #0
  438208:	str	wzr, [x21, #192]
  43820c:	ldp	x21, x22, [sp, #32]
  438210:	ldp	x23, x24, [sp, #48]
  438214:	ldp	x25, x26, [sp, #64]
  438218:	ldp	x27, x28, [sp, #80]
  43821c:	ldp	x29, x30, [sp], #144
  438220:	ret
  438224:	cbz	w26, 43823c <wcrtomb@plt+0x3361c>
  438228:	ldr	x0, [x21, #216]
  43822c:	cbz	x0, 43823c <wcrtomb@plt+0x3361c>
  438230:	ldr	w1, [x0, #16]
  438234:	orr	w1, w1, #0x10
  438238:	str	w1, [x0, #16]
  43823c:	cmp	x20, x19
  438240:	b.ne	4382e4 <wcrtomb@plt+0x336c4>  // b.any
  438244:	ldp	x5, x6, [x21, #168]
  438248:	add	x20, x19, #0x1
  43824c:	ldrb	w1, [x5, x19]
  438250:	cmp	x6, x20
  438254:	b.ls	438450 <wcrtomb@plt+0x33830>  // b.plast
  438258:	mov	x3, x20
  43825c:	mov	w7, #0x22                  	// #34
  438260:	b	438278 <wcrtomb@plt+0x33658>
  438264:	cmp	w0, #0x5c
  438268:	ccmp	w1, w7, #0x0, eq  // eq = none
  43826c:	csinc	x3, x4, x3, eq  // eq = none
  438270:	cmp	x6, x3
  438274:	b.ls	438450 <wcrtomb@plt+0x33830>  // b.plast
  438278:	ldrb	w0, [x5, x3]
  43827c:	add	x4, x3, #0x2
  438280:	cmp	w1, w0
  438284:	b.ne	438264 <wcrtomb@plt+0x33644>  // b.any
  438288:	cmp	w1, #0x27
  43828c:	mov	w0, #0x4                   	// #4
  438290:	mov	x1, #0x28                  	// #40
  438294:	mov	w19, #0xc                   	// #12
  438298:	csel	w19, w19, w0, eq  // eq = none
  43829c:	mov	x0, #0x1                   	// #1
  4382a0:	str	x3, [sp, #112]
  4382a4:	bl	4044c0 <calloc@plt>
  4382a8:	mov	x1, x0
  4382ac:	ldr	x3, [sp, #112]
  4382b0:	cbz	x0, 438618 <wcrtomb@plt+0x339f8>
  4382b4:	ldr	x0, [x21, #216]
  4382b8:	stp	x0, xzr, [x1]
  4382bc:	str	w19, [x1, #16]
  4382c0:	stp	x20, x3, [x1, #24]
  4382c4:	cbz	x0, 43848c <wcrtomb@plt+0x3386c>
  4382c8:	str	x1, [x0, #8]
  4382cc:	add	x20, x3, #0x1
  4382d0:	mov	x19, x3
  4382d4:	mov	w26, #0x1                   	// #1
  4382d8:	str	x3, [sp, #136]
  4382dc:	str	x1, [x21, #216]
  4382e0:	b	438094 <wcrtomb@plt+0x33474>
  4382e4:	mov	x1, #0x28                  	// #40
  4382e8:	mov	x0, #0x1                   	// #1
  4382ec:	bl	4044c0 <calloc@plt>
  4382f0:	mov	x26, x0
  4382f4:	cbz	x0, 438640 <wcrtomb@plt+0x33a20>
  4382f8:	ldr	x0, [x21, #216]
  4382fc:	mov	w1, #0x10                  	// #16
  438300:	stp	x0, xzr, [x26]
  438304:	str	w1, [x26, #16]
  438308:	stp	x20, x19, [x26, #24]
  43830c:	cbz	x0, 438420 <wcrtomb@plt+0x33800>
  438310:	str	x26, [x0, #8]
  438314:	str	x26, [x21, #216]
  438318:	ldr	x19, [sp, #136]
  43831c:	b	438244 <wcrtomb@plt+0x33624>
  438320:	str	x28, [sp, #136]
  438324:	b	4380c8 <wcrtomb@plt+0x334a8>
  438328:	ldr	x0, [x21, #216]
  43832c:	cbz	x0, 43833c <wcrtomb@plt+0x3371c>
  438330:	ldr	w1, [x0, #16]
  438334:	orr	w1, w1, #0x10
  438338:	str	w1, [x0, #16]
  43833c:	mov	w22, #0x0                   	// #0
  438340:	b	4380e0 <wcrtomb@plt+0x334c0>
  438344:	add	x0, x1, #0x3
  438348:	cmp	x0, x28
  43834c:	b.cs	438024 <wcrtomb@plt+0x33404>  // b.hs, b.nlast
  438350:	add	x1, x22, x1
  438354:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438358:	add	x26, x26, #0x978
  43835c:	mov	x20, x19
  438360:	mov	x0, x26
  438364:	ldrb	w1, [x1, #1]
  438368:	bl	404870 <strchr@plt>
  43836c:	cbz	x0, 438024 <wcrtomb@plt+0x33404>
  438370:	sub	x27, x22, #0x1
  438374:	nop
  438378:	add	x0, x20, #0x3
  43837c:	cmp	x28, x0
  438380:	b.ls	4383d4 <wcrtomb@plt+0x337b4>  // b.plast
  438384:	add	x1, x22, x20
  438388:	mov	x0, x26
  43838c:	ldrb	w25, [x1, #1]
  438390:	mov	w1, w25
  438394:	bl	404870 <strchr@plt>
  438398:	cbz	x0, 4383d4 <wcrtomb@plt+0x337b4>
  43839c:	add	x20, x20, #0x2
  4383a0:	cmp	x28, x20
  4383a4:	b.ls	4383d4 <wcrtomb@plt+0x337b4>  // b.plast
  4383a8:	mov	w1, #0x1                   	// #1
  4383ac:	nop
  4383b0:	ldrb	w0, [x22, x20]
  4383b4:	add	x3, x20, #0x1
  4383b8:	cmp	w0, #0x5c
  4383bc:	b.eq	438494 <wcrtomb@plt+0x33874>  // b.none
  4383c0:	cmp	w25, w0
  4383c4:	b.eq	43849c <wcrtomb@plt+0x3387c>  // b.none
  4383c8:	mov	x20, x3
  4383cc:	cmp	x28, x20
  4383d0:	b.hi	4383b0 <wcrtomb@plt+0x33790>  // b.pmore
  4383d4:	sxtw	x28, w20
  4383d8:	mov	w22, #0x20                  	// #32
  4383dc:	mov	x20, x19
  4383e0:	str	x28, [sp, #136]
  4383e4:	b	4380d8 <wcrtomb@plt+0x334b8>
  4383e8:	add	x28, x19, #0x1
  4383ec:	mov	w22, #0x40                  	// #64
  4383f0:	str	x28, [sp, #136]
  4383f4:	b	4380d8 <wcrtomb@plt+0x334b8>
  4383f8:	add	x1, x19, #0x2
  4383fc:	mov	x4, x27
  438400:	add	x3, sp, #0x88
  438404:	mov	x2, x28
  438408:	mov	x0, x22
  43840c:	bl	436388 <wcrtomb@plt+0x31768>
  438410:	ldr	x19, [sp, #136]
  438414:	cbz	w0, 4380bc <wcrtomb@plt+0x3349c>
  438418:	ldr	w0, [x21, #32]
  43841c:	b	4381b4 <wcrtomb@plt+0x33594>
  438420:	str	x26, [x21, #208]
  438424:	b	438314 <wcrtomb@plt+0x336f4>
  438428:	str	x19, [x21, #184]
  43842c:	mov	w0, #0x0                   	// #0
  438430:	tbz	w27, #29, 438144 <wcrtomb@plt+0x33524>
  438434:	ldp	x19, x20, [sp, #16]
  438438:	ldp	x21, x22, [sp, #32]
  43843c:	ldp	x23, x24, [sp, #48]
  438440:	ldp	x25, x26, [sp, #64]
  438444:	ldp	x27, x28, [sp, #80]
  438448:	ldp	x29, x30, [sp], #144
  43844c:	ret
  438450:	ldr	w0, [x21, #32]
  438454:	mov	w1, #0x1                   	// #1
  438458:	str	x19, [x21, #184]
  43845c:	str	w1, [x21, #192]
  438460:	tbnz	w0, #4, 438540 <wcrtomb@plt+0x33920>
  438464:	mov	w0, #0x2                   	// #2
  438468:	ldp	x19, x20, [sp, #16]
  43846c:	ldp	x21, x22, [sp, #32]
  438470:	ldp	x23, x24, [sp, #48]
  438474:	ldp	x25, x26, [sp, #64]
  438478:	ldp	x27, x28, [sp, #80]
  43847c:	ldp	x29, x30, [sp], #144
  438480:	ret
  438484:	str	x19, [x21, #208]
  438488:	b	43810c <wcrtomb@plt+0x334ec>
  43848c:	str	x1, [x21, #208]
  438490:	b	4382cc <wcrtomb@plt+0x336ac>
  438494:	add	x20, x20, #0x2
  438498:	b	4383cc <wcrtomb@plt+0x337ac>
  43849c:	add	w1, w1, #0x1
  4384a0:	cmp	x28, x3
  4384a4:	b.ls	4385ec <wcrtomb@plt+0x339cc>  // b.plast
  4384a8:	cmp	w1, #0x3
  4384ac:	b.eq	4384b8 <wcrtomb@plt+0x33898>  // b.none
  4384b0:	mov	x20, x3
  4384b4:	b	4383b0 <wcrtomb@plt+0x33790>
  4384b8:	ldrb	w0, [x22, x3]
  4384bc:	cmp	w25, w0
  4384c0:	b.eq	438600 <wcrtomb@plt+0x339e0>  // b.none
  4384c4:	add	x20, x20, #0x2
  4384c8:	b	4384dc <wcrtomb@plt+0x338bc>
  4384cc:	ldrb	w0, [x27, x4]
  4384d0:	cmp	w25, w0
  4384d4:	b.eq	438518 <wcrtomb@plt+0x338f8>  // b.none
  4384d8:	mov	x20, x4
  4384dc:	and	w3, w0, #0xffffffdf
  4384e0:	sub	w0, w0, #0x30
  4384e4:	sub	w3, w3, #0x41
  4384e8:	add	x4, x20, #0x1
  4384ec:	and	w3, w3, #0xff
  4384f0:	and	w0, w0, #0xff
  4384f4:	cmp	w3, #0x19
  4384f8:	sub	x1, x20, #0x1
  4384fc:	b.ls	438508 <wcrtomb@plt+0x338e8>  // b.plast
  438500:	cmp	w0, #0x9
  438504:	b.hi	438514 <wcrtomb@plt+0x338f4>  // b.pmore
  438508:	cmp	x28, x20
  43850c:	b.hi	4384cc <wcrtomb@plt+0x338ac>  // b.pmore
  438510:	b	4383d4 <wcrtomb@plt+0x337b4>
  438514:	mov	x20, x1
  438518:	cmp	x28, x20
  43851c:	b.ls	4383d4 <wcrtomb@plt+0x337b4>  // b.plast
  438520:	ldrb	w0, [x22, x20]
  438524:	cmp	w0, #0x3b
  438528:	b.ne	4383d4 <wcrtomb@plt+0x337b4>  // b.any
  43852c:	add	x20, x20, #0x1
  438530:	ldrb	w0, [x22, x20]
  438534:	cmp	w0, #0x73
  438538:	b.eq	438378 <wcrtomb@plt+0x33758>  // b.none
  43853c:	b	4383d4 <wcrtomb@plt+0x337b4>
  438540:	mov	w2, #0x5                   	// #5
  438544:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438548:	mov	x0, #0x0                   	// #0
  43854c:	add	x1, x1, #0x918
  438550:	ldr	x19, [x21, #96]
  438554:	bl	4049c0 <dcgettext@plt>
  438558:	ldr	x1, [x21, #168]
  43855c:	ldr	x2, [x21, #184]
  438560:	ldrb	w1, [x1, x2]
  438564:	blr	x19
  438568:	b	438464 <wcrtomb@plt+0x33844>
  43856c:	ldr	x23, [x21, #208]
  438570:	cbnz	x23, 438130 <wcrtomb@plt+0x33510>
  438574:	b	438144 <wcrtomb@plt+0x33524>
  438578:	add	x23, x19, #0x1
  43857c:	cmp	x28, x23
  438580:	b.hi	438594 <wcrtomb@plt+0x33974>  // b.pmore
  438584:	b	4385a0 <wcrtomb@plt+0x33980>
  438588:	add	x23, x23, #0x1
  43858c:	cmp	x28, x23
  438590:	b.ls	4385a0 <wcrtomb@plt+0x33980>  // b.plast
  438594:	ldrb	w0, [x22, x23]
  438598:	cmp	w0, #0xa
  43859c:	b.ne	438588 <wcrtomb@plt+0x33968>  // b.any
  4385a0:	cmp	x20, x19
  4385a4:	b.ne	4385b8 <wcrtomb@plt+0x33998>  // b.any
  4385a8:	mov	w0, #0x1                   	// #1
  4385ac:	ldp	x19, x20, [sp, #16]
  4385b0:	str	x23, [x21, #184]
  4385b4:	b	43820c <wcrtomb@plt+0x335ec>
  4385b8:	mov	x1, #0x28                  	// #40
  4385bc:	mov	x0, #0x1                   	// #1
  4385c0:	bl	4044c0 <calloc@plt>
  4385c4:	mov	x22, x0
  4385c8:	cbz	x0, 438630 <wcrtomb@plt+0x33a10>
  4385cc:	ldr	x0, [x21, #216]
  4385d0:	stp	x0, xzr, [x22]
  4385d4:	str	wzr, [x22, #16]
  4385d8:	stp	x20, x19, [x22, #24]
  4385dc:	cbz	x0, 4385f4 <wcrtomb@plt+0x339d4>
  4385e0:	str	x22, [x0, #8]
  4385e4:	str	x22, [x21, #216]
  4385e8:	b	4385a8 <wcrtomb@plt+0x33988>
  4385ec:	mov	x20, x3
  4385f0:	b	4383d4 <wcrtomb@plt+0x337b4>
  4385f4:	str	x22, [x21, #208]
  4385f8:	str	x22, [x21, #216]
  4385fc:	b	4385a8 <wcrtomb@plt+0x33988>
  438600:	mov	x20, x3
  438604:	b	438524 <wcrtomb@plt+0x33904>
  438608:	mov	x0, x21
  43860c:	bl	436f20 <wcrtomb@plt+0x32300>
  438610:	cbz	w0, 4380f4 <wcrtomb@plt+0x334d4>
  438614:	b	438464 <wcrtomb@plt+0x33844>
  438618:	mov	x0, x21
  43861c:	stp	x3, x1, [sp, #112]
  438620:	bl	436f20 <wcrtomb@plt+0x32300>
  438624:	ldp	x3, x1, [sp, #112]
  438628:	cbz	w0, 4382b4 <wcrtomb@plt+0x33694>
  43862c:	b	438464 <wcrtomb@plt+0x33844>
  438630:	mov	x0, x21
  438634:	bl	436f20 <wcrtomb@plt+0x32300>
  438638:	cbnz	w0, 438464 <wcrtomb@plt+0x33844>
  43863c:	b	4385cc <wcrtomb@plt+0x339ac>
  438640:	mov	x0, x21
  438644:	bl	436f20 <wcrtomb@plt+0x32300>
  438648:	cbz	w0, 4382f8 <wcrtomb@plt+0x336d8>
  43864c:	b	438464 <wcrtomb@plt+0x33844>
  438650:	stp	x29, x30, [sp, #-64]!
  438654:	mov	x29, sp
  438658:	stp	x19, x20, [sp, #16]
  43865c:	mov	x20, x0
  438660:	ldr	w0, [x0, #32]
  438664:	stp	x21, x22, [sp, #32]
  438668:	mov	x19, x1
  43866c:	tbnz	w0, #21, 438878 <wcrtomb@plt+0x33c58>
  438670:	tbnz	w0, #22, 43881c <wcrtomb@plt+0x33bfc>
  438674:	ldr	w0, [x20, #36]
  438678:	tbnz	w0, #7, 43880c <wcrtomb@plt+0x33bec>
  43867c:	mov	x21, #0x1000                	// #4096
  438680:	movk	x21, #0x80, lsl #32
  438684:	b	438698 <wcrtomb@plt+0x33a78>
  438688:	ldr	x0, [x20, #32]
  43868c:	ldr	x19, [x20, #184]
  438690:	tst	x0, x21
  438694:	cinc	x19, x19, eq  // eq = none
  438698:	mov	x1, x19
  43869c:	mov	x0, x20
  4386a0:	mov	w2, #0x0                   	// #0
  4386a4:	bl	437fd0 <wcrtomb@plt+0x333b0>
  4386a8:	cmp	w0, #0x1
  4386ac:	b.eq	438688 <wcrtomb@plt+0x33a68>  // b.none
  4386b0:	ldr	x1, [x20, #216]
  4386b4:	cbz	x1, 4386c4 <wcrtomb@plt+0x33aa4>
  4386b8:	ldr	w2, [x1, #16]
  4386bc:	and	w2, w2, #0xffffffef
  4386c0:	str	w2, [x1, #16]
  4386c4:	cmp	w0, #0x2
  4386c8:	b.eq	438754 <wcrtomb@plt+0x33b34>  // b.none
  4386cc:	ldr	w0, [x20, #32]
  4386d0:	tbnz	w0, #21, 43883c <wcrtomb@plt+0x33c1c>
  4386d4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4386d8:	add	x0, x0, #0x290
  4386dc:	add	x21, x0, #0x78
  4386e0:	ldr	x0, [x0, #120]
  4386e4:	cbz	x0, 438754 <wcrtomb@plt+0x33b34>
  4386e8:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4386ec:	add	x22, x22, #0x9d8
  4386f0:	stp	x23, x24, [sp, #48]
  4386f4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4386f8:	add	x23, x23, #0x9e8
  4386fc:	nop
  438700:	ldp	w2, w1, [x21, #8]
  438704:	ldr	w3, [x20, #32]
  438708:	and	w0, w2, w3
  43870c:	tbz	w1, #1, 438718 <wcrtomb@plt+0x33af8>
  438710:	cmp	w2, w0
  438714:	cset	w0, eq  // eq = none
  438718:	tbz	w1, #0, 438724 <wcrtomb@plt+0x33b04>
  43871c:	cmp	w0, #0x0
  438720:	cset	w0, eq  // eq = none
  438724:	cbz	w0, 438748 <wcrtomb@plt+0x33b28>
  438728:	tbnz	w1, #2, 438768 <wcrtomb@plt+0x33b48>
  43872c:	ldr	x1, [x21, #16]
  438730:	cbz	x1, 438748 <wcrtomb@plt+0x33b28>
  438734:	mov	x0, x20
  438738:	blr	x1
  43873c:	cbnz	w0, 438750 <wcrtomb@plt+0x33b30>
  438740:	ldr	w0, [x20, #32]
  438744:	tbnz	w0, #21, 4387d8 <wcrtomb@plt+0x33bb8>
  438748:	ldr	x0, [x21, #24]!
  43874c:	cbnz	x0, 438700 <wcrtomb@plt+0x33ae0>
  438750:	ldp	x23, x24, [sp, #48]
  438754:	ldr	w0, [x20, #192]
  438758:	ldp	x19, x20, [sp, #16]
  43875c:	ldp	x21, x22, [sp, #32]
  438760:	ldp	x29, x30, [sp], #64
  438764:	ret
  438768:	ldr	x19, [x20, #208]
  43876c:	cbnz	x19, 43877c <wcrtomb@plt+0x33b5c>
  438770:	b	4387a0 <wcrtomb@plt+0x33b80>
  438774:	ldr	x19, [x19, #8]
  438778:	cbz	x19, 43879c <wcrtomb@plt+0x33b7c>
  43877c:	ldr	w0, [x19, #16]
  438780:	tbz	w0, #4, 438774 <wcrtomb@plt+0x33b54>
  438784:	mov	x1, x19
  438788:	mov	x0, x20
  43878c:	bl	4376b0 <wcrtomb@plt+0x32a90>
  438790:	cbnz	w0, 438750 <wcrtomb@plt+0x33b30>
  438794:	ldr	x19, [x19, #8]
  438798:	cbnz	x19, 43877c <wcrtomb@plt+0x33b5c>
  43879c:	ldr	w3, [x20, #32]
  4387a0:	tbz	w3, #21, 43872c <wcrtomb@plt+0x33b0c>
  4387a4:	ldr	w24, [x20, #224]
  4387a8:	mov	x1, x23
  4387ac:	ldr	x19, [x20, #104]
  4387b0:	mov	w2, #0x5                   	// #5
  4387b4:	mov	x0, #0x0                   	// #0
  4387b8:	bl	4049c0 <dcgettext@plt>
  4387bc:	mov	w1, w24
  4387c0:	mov	x2, x0
  4387c4:	mov	x0, x22
  4387c8:	blr	x19
  4387cc:	mov	x0, x20
  4387d0:	bl	4362b8 <wcrtomb@plt+0x31698>
  4387d4:	b	43872c <wcrtomb@plt+0x33b0c>
  4387d8:	ldr	x1, [x21]
  4387dc:	mov	w2, #0x5                   	// #5
  4387e0:	ldr	w24, [x20, #224]
  4387e4:	mov	x0, #0x0                   	// #0
  4387e8:	ldr	x19, [x20, #104]
  4387ec:	bl	4049c0 <dcgettext@plt>
  4387f0:	mov	w1, w24
  4387f4:	mov	x2, x0
  4387f8:	mov	x0, x22
  4387fc:	blr	x19
  438800:	mov	x0, x20
  438804:	bl	4362b8 <wcrtomb@plt+0x31698>
  438808:	b	438748 <wcrtomb@plt+0x33b28>
  43880c:	ldp	x1, x0, [x20, #40]
  438810:	add	x0, x0, #0x1
  438814:	cmp	x0, x1
  438818:	b.ne	43867c <wcrtomb@plt+0x33a5c>  // b.any
  43881c:	mov	x1, x19
  438820:	mov	x0, x20
  438824:	mov	w2, #0x1                   	// #1
  438828:	bl	437fd0 <wcrtomb@plt+0x333b0>
  43882c:	cmp	w0, #0x2
  438830:	b.eq	438754 <wcrtomb@plt+0x33b34>  // b.none
  438834:	ldr	w0, [x20, #32]
  438838:	tbz	w0, #21, 4386d4 <wcrtomb@plt+0x33ab4>
  43883c:	ldr	w21, [x20, #224]
  438840:	mov	w2, #0x5                   	// #5
  438844:	ldr	x19, [x20, #104]
  438848:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43884c:	mov	x0, #0x0                   	// #0
  438850:	add	x1, x1, #0x9c8
  438854:	bl	4049c0 <dcgettext@plt>
  438858:	mov	x2, x0
  43885c:	mov	w1, w21
  438860:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438864:	add	x0, x0, #0x9d8
  438868:	blr	x19
  43886c:	mov	x0, x20
  438870:	bl	4362b8 <wcrtomb@plt+0x31698>
  438874:	b	4386d4 <wcrtomb@plt+0x33ab4>
  438878:	mov	w2, #0x5                   	// #5
  43887c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438880:	mov	x0, #0x0                   	// #0
  438884:	add	x1, x1, #0x9b0
  438888:	ldr	x21, [x20, #104]
  43888c:	bl	4049c0 <dcgettext@plt>
  438890:	ldr	w2, [x20, #176]
  438894:	ldr	w1, [x20, #224]
  438898:	ldr	x3, [x20, #168]
  43889c:	blr	x21
  4388a0:	ldr	w0, [x20, #32]
  4388a4:	b	438670 <wcrtomb@plt+0x33a50>
  4388a8:	stp	x29, x30, [sp, #-96]!
  4388ac:	mov	x29, sp
  4388b0:	stp	x21, x22, [sp, #32]
  4388b4:	mov	x21, #0x1000                	// #4096
  4388b8:	movk	x21, #0x80, lsl #32
  4388bc:	stp	x19, x20, [sp, #16]
  4388c0:	mov	x20, x0
  4388c4:	b	438934 <wcrtomb@plt+0x33d14>
  4388c8:	ldr	w0, [x20, #32]
  4388cc:	tbz	w0, #12, 4389a0 <wcrtomb@plt+0x33d80>
  4388d0:	tbz	w0, #11, 4389e8 <wcrtomb@plt+0x33dc8>
  4388d4:	tbnz	w3, #0, 4389f0 <wcrtomb@plt+0x33dd0>
  4388d8:	ldr	x5, [x1, #24]
  4388dc:	tbz	w3, #1, 438a04 <wcrtomb@plt+0x33de4>
  4388e0:	mov	x3, x5
  4388e4:	ldrb	w3, [x3]
  4388e8:	cbz	w4, 4389f8 <wcrtomb@plt+0x33dd8>
  4388ec:	cmp	w4, w3
  4388f0:	b.eq	438a9c <wcrtomb@plt+0x33e7c>  // b.none
  4388f4:	add	x3, x19, #0x1
  4388f8:	mov	w4, #0x0                   	// #0
  4388fc:	nop
  438900:	add	x19, x3, #0x1
  438904:	tbz	w0, #29, 438990 <wcrtomb@plt+0x33d70>
  438908:	cbnz	x19, 438adc <wcrtomb@plt+0x33ebc>
  43890c:	ldp	x2, x1, [x20, #176]
  438910:	cmp	x1, x2
  438914:	b.cs	438bd4 <wcrtomb@plt+0x33fb4>  // b.hs, b.nlast
  438918:	tbnz	w0, #21, 438a78 <wcrtomb@plt+0x33e58>
  43891c:	ldr	x2, [x20, #32]
  438920:	mov	x0, x20
  438924:	tst	x2, x21
  438928:	cinc	x1, x1, eq  // eq = none
  43892c:	bl	438650 <wcrtomb@plt+0x33a30>
  438930:	cbnz	w0, 438acc <wcrtomb@plt+0x33eac>
  438934:	ldr	x2, [x20, #208]
  438938:	cbz	x2, 438c94 <wcrtomb@plt+0x34074>
  43893c:	mov	w4, #0x0                   	// #0
  438940:	mov	x19, #0x0                   	// #0
  438944:	nop
  438948:	ldr	w3, [x2, #16]
  43894c:	mov	x1, x2
  438950:	ldr	x2, [x2, #8]
  438954:	tbnz	w3, #6, 4388c8 <wcrtomb@plt+0x33ca8>
  438958:	ldr	w0, [x20, #36]
  43895c:	cmp	w4, #0x0
  438960:	cinc	x19, x19, ne  // ne = any
  438964:	tbz	w0, #7, 43897c <wcrtomb@plt+0x33d5c>
  438968:	ldp	x4, x0, [x20, #40]
  43896c:	add	x0, x0, #0x1
  438970:	add	x0, x0, x19
  438974:	cmp	x0, x4
  438978:	b.eq	438a10 <wcrtomb@plt+0x33df0>  // b.none
  43897c:	ldr	w0, [x20, #32]
  438980:	mov	x3, x19
  438984:	add	x19, x3, #0x1
  438988:	mov	w4, #0x0                   	// #0
  43898c:	tbnz	w0, #29, 438908 <wcrtomb@plt+0x33ce8>
  438990:	cbnz	x2, 438948 <wcrtomb@plt+0x33d28>
  438994:	cbz	x19, 438c98 <wcrtomb@plt+0x34078>
  438998:	add	x19, x19, #0x1
  43899c:	b	438ae0 <wcrtomb@plt+0x33ec0>
  4389a0:	ldr	w5, [x20, #36]
  4389a4:	mov	x3, x19
  4389a8:	tbz	w5, #7, 438900 <wcrtomb@plt+0x33ce0>
  4389ac:	ldr	x3, [x1]
  4389b0:	cbz	x3, 438a64 <wcrtomb@plt+0x33e44>
  4389b4:	str	x2, [x3, #8]
  4389b8:	ldr	x5, [x1, #8]
  4389bc:	cbz	x5, 4389d0 <wcrtomb@plt+0x33db0>
  4389c0:	str	x3, [x5]
  4389c4:	stp	xzr, xzr, [x1]
  4389c8:	cbnz	x2, 438948 <wcrtomb@plt+0x33d28>
  4389cc:	b	438994 <wcrtomb@plt+0x33d74>
  4389d0:	ldr	w5, [x3, #16]
  4389d4:	and	w5, w5, #0xffffffef
  4389d8:	str	w5, [x3, #16]
  4389dc:	str	x3, [x20, #216]
  4389e0:	stp	xzr, xzr, [x1]
  4389e4:	b	4389c8 <wcrtomb@plt+0x33da8>
  4389e8:	mov	x3, x19
  4389ec:	b	438900 <wcrtomb@plt+0x33ce0>
  4389f0:	mov	w3, #0x0                   	// #0
  4389f4:	cbnz	w4, 4388f4 <wcrtomb@plt+0x33cd4>
  4389f8:	mov	w4, w3
  4389fc:	cbnz	x2, 438948 <wcrtomb@plt+0x33d28>
  438a00:	b	438994 <wcrtomb@plt+0x33d74>
  438a04:	ldr	x3, [x20, #168]
  438a08:	add	x3, x3, x5
  438a0c:	b	4388e4 <wcrtomb@plt+0x33cc4>
  438a10:	cbz	x2, 438a58 <wcrtomb@plt+0x33e38>
  438a14:	ldr	x4, [x2, #8]
  438a18:	orr	w3, w3, #0x10
  438a1c:	str	w3, [x1, #16]
  438a20:	cbz	x4, 438a44 <wcrtomb@plt+0x33e24>
  438a24:	nop
  438a28:	ldr	w0, [x2, #16]
  438a2c:	ldr	x3, [x4, #8]
  438a30:	orr	w0, w0, #0x10
  438a34:	str	w0, [x2, #16]
  438a38:	mov	x2, x4
  438a3c:	mov	x4, x3
  438a40:	cbnz	x3, 438a28 <wcrtomb@plt+0x33e08>
  438a44:	ldr	w0, [x1, #16]
  438a48:	tbz	w0, #4, 438a58 <wcrtomb@plt+0x33e38>
  438a4c:	mov	x0, x20
  438a50:	bl	4376b0 <wcrtomb@plt+0x32a90>
  438a54:	cbnz	w0, 438ac8 <wcrtomb@plt+0x33ea8>
  438a58:	ldr	w0, [x20, #32]
  438a5c:	add	x19, x19, #0x1
  438a60:	b	438994 <wcrtomb@plt+0x33d74>
  438a64:	str	x2, [x20, #208]
  438a68:	ldr	x5, [x1, #8]
  438a6c:	cbz	x5, 4389dc <wcrtomb@plt+0x33dbc>
  438a70:	str	x3, [x5]
  438a74:	b	4389c4 <wcrtomb@plt+0x33da4>
  438a78:	ldr	x19, [x20, #104]
  438a7c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438a80:	add	x1, x1, #0x9f8
  438a84:	mov	w2, #0x5                   	// #5
  438a88:	mov	x0, #0x0                   	// #0
  438a8c:	bl	4049c0 <dcgettext@plt>
  438a90:	blr	x19
  438a94:	ldr	x1, [x20, #184]
  438a98:	b	43891c <wcrtomb@plt+0x33cfc>
  438a9c:	ldr	x3, [x1]
  438aa0:	cbz	x3, 438a64 <wcrtomb@plt+0x33e44>
  438aa4:	str	x2, [x3, #8]
  438aa8:	cbnz	x2, 438a68 <wcrtomb@plt+0x33e48>
  438aac:	ldr	w5, [x3, #16]
  438ab0:	and	w5, w5, #0xffffffef
  438ab4:	str	w5, [x3, #16]
  438ab8:	b	438a68 <wcrtomb@plt+0x33e48>
  438abc:	mov	x0, x20
  438ac0:	bl	436f20 <wcrtomb@plt+0x32300>
  438ac4:	cbz	w0, 438b0c <wcrtomb@plt+0x33eec>
  438ac8:	ldr	w0, [x20, #192]
  438acc:	ldp	x19, x20, [sp, #16]
  438ad0:	ldp	x21, x22, [sp, #32]
  438ad4:	ldp	x29, x30, [sp], #96
  438ad8:	ret
  438adc:	add	x19, x3, #0x2
  438ae0:	mov	x1, #0x0                   	// #0
  438ae4:	tbz	w0, #1, 438aec <wcrtomb@plt+0x33ecc>
  438ae8:	ldr	x1, [x20, #16]
  438aec:	ldr	x0, [x20, #8]
  438af0:	cbz	x0, 438ca4 <wcrtomb@plt+0x34084>
  438af4:	ldr	x2, [x20]
  438af8:	ldr	x3, [x20, #24]
  438afc:	add	x1, x1, x2
  438b00:	add	x2, x1, x19
  438b04:	cmp	x3, x2
  438b08:	b.cc	438c00 <wcrtomb@plt+0x33fe0>  // b.lo, b.ul, b.last
  438b0c:	stp	x23, x24, [sp, #48]
  438b10:	stp	x25, x26, [sp, #64]
  438b14:	str	x27, [sp, #80]
  438b18:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x21bf0>
  438b1c:	add	x24, x24, #0x7e8
  438b20:	ldr	x19, [x20, #208]
  438b24:	cbz	x19, 438c70 <wcrtomb@plt+0x34050>
  438b28:	ldr	w0, [x19, #16]
  438b2c:	tbnz	w0, #0, 438c34 <wcrtomb@plt+0x34014>
  438b30:	ldr	x25, [x19, #24]
  438b34:	tbz	w0, #1, 438c44 <wcrtomb@plt+0x34024>
  438b38:	mov	x0, x25
  438b3c:	bl	403ff0 <strlen@plt>
  438b40:	mov	x23, x0
  438b44:	add	x0, x0, #0x1
  438b48:	bl	404310 <malloc@plt>
  438b4c:	mov	x21, x0
  438b50:	ldp	x22, x26, [x20]
  438b54:	ldr	x27, [x20, #16]
  438b58:	add	x1, x27, x22
  438b5c:	str	x0, [x26, x1, lsl #3]
  438b60:	cbz	x0, 438cc4 <wcrtomb@plt+0x340a4>
  438b64:	mov	x1, x25
  438b68:	mov	x2, x23
  438b6c:	bl	403f70 <memcpy@plt>
  438b70:	strb	wzr, [x21, x23]
  438b74:	ldp	x0, x1, [x19]
  438b78:	cbz	x0, 438c5c <wcrtomb@plt+0x3403c>
  438b7c:	str	x1, [x0, #8]
  438b80:	ldr	x1, [x19, #8]
  438b84:	cbz	x1, 438bec <wcrtomb@plt+0x33fcc>
  438b88:	str	x0, [x1]
  438b8c:	ldr	x0, [x20, #48]
  438b90:	add	x22, x22, #0x1
  438b94:	ldr	w1, [x20, #32]
  438b98:	stp	xzr, xzr, [x19]
  438b9c:	add	x0, x0, #0x1
  438ba0:	str	x22, [x20]
  438ba4:	str	x0, [x20, #48]
  438ba8:	tbz	w1, #29, 438b20 <wcrtomb@plt+0x33f00>
  438bac:	add	x22, x22, x27
  438bb0:	mov	w0, #0x0                   	// #0
  438bb4:	ldp	x23, x24, [sp, #48]
  438bb8:	str	xzr, [x26, x22, lsl #3]
  438bbc:	ldp	x25, x26, [sp, #64]
  438bc0:	ldr	x27, [sp, #80]
  438bc4:	ldp	x19, x20, [sp, #16]
  438bc8:	ldp	x21, x22, [sp, #32]
  438bcc:	ldp	x29, x30, [sp], #96
  438bd0:	ret
  438bd4:	str	xzr, [x20, #96]
  438bd8:	mov	w0, #0x0                   	// #0
  438bdc:	ldp	x19, x20, [sp, #16]
  438be0:	ldp	x21, x22, [sp, #32]
  438be4:	ldp	x29, x30, [sp], #96
  438be8:	ret
  438bec:	ldr	w1, [x0, #16]
  438bf0:	and	w1, w1, #0xffffffef
  438bf4:	str	w1, [x0, #16]
  438bf8:	str	x0, [x20, #216]
  438bfc:	b	438b8c <wcrtomb@plt+0x33f6c>
  438c00:	cmp	x19, #0x80
  438c04:	mov	x2, #0x80                  	// #128
  438c08:	csel	x19, x19, x2, cs  // cs = hs, nlast
  438c0c:	add	x19, x19, x1
  438c10:	lsl	x1, x19, #3
  438c14:	bl	404530 <realloc@plt>
  438c18:	cbz	x0, 438abc <wcrtomb@plt+0x33e9c>
  438c1c:	stp	x23, x24, [sp, #48]
  438c20:	stp	x25, x26, [sp, #64]
  438c24:	str	x27, [sp, #80]
  438c28:	str	x0, [x20, #8]
  438c2c:	str	x19, [x20, #24]
  438c30:	b	438b18 <wcrtomb@plt+0x33ef8>
  438c34:	mov	x25, x24
  438c38:	mov	x0, #0x1                   	// #1
  438c3c:	mov	x23, #0x0                   	// #0
  438c40:	b	438b48 <wcrtomb@plt+0x33f28>
  438c44:	ldr	x23, [x19, #32]
  438c48:	ldr	x1, [x20, #168]
  438c4c:	sub	x23, x23, x25
  438c50:	add	x0, x23, #0x1
  438c54:	add	x25, x1, x25
  438c58:	b	438b48 <wcrtomb@plt+0x33f28>
  438c5c:	str	x1, [x20, #208]
  438c60:	ldr	x1, [x19, #8]
  438c64:	cbnz	x1, 438b88 <wcrtomb@plt+0x33f68>
  438c68:	str	x0, [x20, #216]
  438c6c:	b	438b8c <wcrtomb@plt+0x33f6c>
  438c70:	ldp	x22, x26, [x20]
  438c74:	mov	w0, #0x0                   	// #0
  438c78:	ldr	x27, [x20, #16]
  438c7c:	ldp	x23, x24, [sp, #48]
  438c80:	add	x22, x22, x27
  438c84:	ldr	x27, [sp, #80]
  438c88:	str	xzr, [x26, x22, lsl #3]
  438c8c:	ldp	x25, x26, [sp, #64]
  438c90:	b	438bc4 <wcrtomb@plt+0x33fa4>
  438c94:	ldr	w0, [x20, #32]
  438c98:	tbnz	w0, #29, 43890c <wcrtomb@plt+0x33cec>
  438c9c:	mov	x19, #0x1                   	// #1
  438ca0:	b	438ae0 <wcrtomb@plt+0x33ec0>
  438ca4:	add	x1, x1, x19
  438ca8:	mov	x0, #0x80                  	// #128
  438cac:	cmp	x1, x0
  438cb0:	mov	x1, #0x8                   	// #8
  438cb4:	csel	x19, x19, x0, hi  // hi = pmore
  438cb8:	mov	x0, x19
  438cbc:	bl	4044c0 <calloc@plt>
  438cc0:	b	438c18 <wcrtomb@plt+0x33ff8>
  438cc4:	mov	x0, x20
  438cc8:	ldp	x19, x20, [sp, #16]
  438ccc:	ldp	x21, x22, [sp, #32]
  438cd0:	ldp	x23, x24, [sp, #48]
  438cd4:	ldp	x25, x26, [sp, #64]
  438cd8:	ldr	x27, [sp, #80]
  438cdc:	ldp	x29, x30, [sp], #96
  438ce0:	b	436f20 <wcrtomb@plt+0x32300>
  438ce4:	nop
  438ce8:	stp	x29, x30, [sp, #-48]!
  438cec:	mov	x29, sp
  438cf0:	stp	x19, x20, [sp, #16]
  438cf4:	mov	x20, x0
  438cf8:	mov	x19, x1
  438cfc:	stp	x21, x22, [sp, #32]
  438d00:	mov	w22, w5
  438d04:	ldr	x0, [x0, #56]
  438d08:	str	x0, [x1, #56]
  438d0c:	ldr	x0, [x20, #104]
  438d10:	str	x0, [x1, #104]
  438d14:	mov	x1, x2
  438d18:	ldur	q0, [x20, #88]
  438d1c:	stur	q0, [x19, #88]
  438d20:	ldr	w0, [x20, #32]
  438d24:	tbnz	w4, #6, 438d44 <wcrtomb@plt+0x34124>
  438d28:	mov	w2, #0x8180000             	// #135790592
  438d2c:	and	w2, w0, w2
  438d30:	orr	w4, w4, w2
  438d34:	ldr	x2, [x20, #112]
  438d38:	str	x2, [x19, #112]
  438d3c:	ldr	x2, [x20, #144]
  438d40:	str	x2, [x19, #144]
  438d44:	tbnz	w4, #2, 438d50 <wcrtomb@plt+0x34130>
  438d48:	ldr	x2, [x20, #160]
  438d4c:	str	x2, [x19, #160]
  438d50:	mov	w2, #0x44                  	// #68
  438d54:	and	w2, w4, w2
  438d58:	cmp	w2, #0x44
  438d5c:	b.eq	438d70 <wcrtomb@plt+0x34150>  // b.none
  438d60:	and	w2, w0, #0x4000000
  438d64:	orr	w4, w4, w2
  438d68:	ldr	x2, [x20, #152]
  438d6c:	str	x2, [x19, #152]
  438d70:	mov	w5, #0x10                  	// #16
  438d74:	ldr	w2, [x20, #36]
  438d78:	movk	w5, #0x8020, lsl #16
  438d7c:	and	w0, w0, w5
  438d80:	orr	w4, w0, w4
  438d84:	str	w2, [x19, #36]
  438d88:	sxtw	x2, w3
  438d8c:	mov	w3, #0x4000                	// #16384
  438d90:	mov	x0, x19
  438d94:	movk	w3, #0x7, lsl #16
  438d98:	orr	w3, w4, w3
  438d9c:	bl	436738 <wcrtomb@plt+0x31b18>
  438da0:	mov	w21, w0
  438da4:	cbz	w0, 438dbc <wcrtomb@plt+0x3419c>
  438da8:	mov	w0, w21
  438dac:	ldp	x19, x20, [sp, #16]
  438db0:	ldp	x21, x22, [sp, #32]
  438db4:	ldp	x29, x30, [sp], #48
  438db8:	ret
  438dbc:	ldr	w2, [x20, #224]
  438dc0:	mov	x0, x19
  438dc4:	mov	x1, #0x0                   	// #0
  438dc8:	add	w2, w2, #0x1
  438dcc:	str	w2, [x19, #224]
  438dd0:	bl	438650 <wcrtomb@plt+0x33a30>
  438dd4:	mov	w21, w0
  438dd8:	cbnz	w0, 438e50 <wcrtomb@plt+0x34230>
  438ddc:	cbz	w22, 438da8 <wcrtomb@plt+0x34188>
  438de0:	mov	x0, x19
  438de4:	bl	4388a8 <wcrtomb@plt+0x33c88>
  438de8:	ldr	x20, [x19, #208]
  438dec:	mov	w21, w0
  438df0:	cbz	x20, 438e38 <wcrtomb@plt+0x34218>
  438df4:	ldr	w1, [x20, #16]
  438df8:	mov	x0, x20
  438dfc:	ldr	x22, [x20, #8]
  438e00:	tbnz	w1, #1, 438e24 <wcrtomb@plt+0x34204>
  438e04:	nop
  438e08:	bl	4047b0 <free@plt>
  438e0c:	cbz	x22, 438e38 <wcrtomb@plt+0x34218>
  438e10:	mov	x20, x22
  438e14:	mov	x0, x20
  438e18:	ldr	w1, [x20, #16]
  438e1c:	ldr	x22, [x20, #8]
  438e20:	tbz	w1, #1, 438e08 <wcrtomb@plt+0x341e8>
  438e24:	ldr	x0, [x20, #24]
  438e28:	bl	4047b0 <free@plt>
  438e2c:	mov	x0, x20
  438e30:	bl	4047b0 <free@plt>
  438e34:	cbnz	x22, 438e10 <wcrtomb@plt+0x341f0>
  438e38:	stp	xzr, xzr, [x19, #208]
  438e3c:	mov	w0, w21
  438e40:	ldp	x19, x20, [sp, #16]
  438e44:	ldp	x21, x22, [sp, #32]
  438e48:	ldp	x29, x30, [sp], #48
  438e4c:	ret
  438e50:	ldr	x20, [x19, #208]
  438e54:	cbz	x20, 438e38 <wcrtomb@plt+0x34218>
  438e58:	ldr	w1, [x20, #16]
  438e5c:	mov	x0, x20
  438e60:	ldr	x22, [x20, #8]
  438e64:	tbnz	w1, #1, 438e84 <wcrtomb@plt+0x34264>
  438e68:	bl	4047b0 <free@plt>
  438e6c:	cbz	x22, 438e38 <wcrtomb@plt+0x34218>
  438e70:	mov	x20, x22
  438e74:	ldr	w1, [x20, #16]
  438e78:	mov	x0, x20
  438e7c:	ldr	x22, [x20, #8]
  438e80:	tbz	w1, #1, 438e68 <wcrtomb@plt+0x34248>
  438e84:	ldr	x0, [x20, #24]
  438e88:	bl	4047b0 <free@plt>
  438e8c:	mov	x0, x20
  438e90:	bl	4047b0 <free@plt>
  438e94:	cbz	x22, 438e38 <wcrtomb@plt+0x34218>
  438e98:	mov	x20, x22
  438e9c:	b	438e74 <wcrtomb@plt+0x34254>
  438ea0:	stp	x29, x30, [sp, #-48]!
  438ea4:	mov	x29, sp
  438ea8:	stp	x19, x20, [sp, #16]
  438eac:	mov	x19, x1
  438eb0:	str	x21, [sp, #32]
  438eb4:	mov	w21, w2
  438eb8:	cbz	x0, 438f58 <wcrtomb@plt+0x34338>
  438ebc:	mov	x20, x0
  438ec0:	bl	403ff0 <strlen@plt>
  438ec4:	mov	w3, w21
  438ec8:	mov	x2, x0
  438ecc:	mov	x1, x20
  438ed0:	mov	x0, x19
  438ed4:	bl	436738 <wcrtomb@plt+0x31b18>
  438ed8:	cbnz	w0, 438f48 <wcrtomb@plt+0x34328>
  438edc:	mov	x21, #0x0                   	// #0
  438ee0:	str	wzr, [x19, #224]
  438ee4:	mov	x1, x21
  438ee8:	mov	x0, x19
  438eec:	bl	438650 <wcrtomb@plt+0x33a30>
  438ef0:	cbnz	w0, 438f48 <wcrtomb@plt+0x34328>
  438ef4:	mov	x0, x19
  438ef8:	ldp	x19, x20, [sp, #16]
  438efc:	ldr	x21, [sp, #32]
  438f00:	ldp	x29, x30, [sp], #48
  438f04:	b	4388a8 <wcrtomb@plt+0x33c88>
  438f08:	ldr	w1, [x19, #32]
  438f0c:	mov	w0, #0x3                   	// #3
  438f10:	str	w0, [x19, #192]
  438f14:	tbz	w1, #4, 438f48 <wcrtomb@plt+0x34328>
  438f18:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  438f1c:	add	x3, x0, #0x290
  438f20:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438f24:	add	x1, x1, #0x8e0
  438f28:	ldr	w0, [x0, #656]
  438f2c:	ldr	x2, [x19, #96]
  438f30:	cmp	w0, #0x3
  438f34:	b.gt	439044 <wcrtomb@plt+0x34424>
  438f38:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  438f3c:	add	x0, x0, #0x828
  438f40:	blr	x2
  438f44:	mov	w0, #0x3                   	// #3
  438f48:	ldp	x19, x20, [sp, #16]
  438f4c:	ldr	x21, [sp, #32]
  438f50:	ldp	x29, x30, [sp], #48
  438f54:	ret
  438f58:	tbz	w21, #29, 438f08 <wcrtomb@plt+0x342e8>
  438f5c:	ldr	x0, [x19, #208]
  438f60:	cbnz	x0, 438ef4 <wcrtomb@plt+0x342d4>
  438f64:	ldp	x2, x0, [x19, #176]
  438f68:	ldr	w1, [x19, #32]
  438f6c:	tst	x1, #0x1000
  438f70:	cinc	x21, x0, eq  // eq = none
  438f74:	cmp	x0, x2
  438f78:	b.eq	438fa0 <wcrtomb@plt+0x34380>  // b.none
  438f7c:	orr	w0, w1, #0x8
  438f80:	str	w0, [x19, #32]
  438f84:	tbz	w1, #0, 438fe0 <wcrtomb@plt+0x343c0>
  438f88:	ldr	w0, [x19, #192]
  438f8c:	cmp	w0, #0x9
  438f90:	b.eq	439038 <wcrtomb@plt+0x34418>  // b.none
  438f94:	str	wzr, [x19, #192]
  438f98:	str	xzr, [x19, #200]
  438f9c:	b	438ee4 <wcrtomb@plt+0x342c4>
  438fa0:	mov	w0, #0x6                   	// #6
  438fa4:	str	w0, [x19, #192]
  438fa8:	tbz	w1, #4, 438f48 <wcrtomb@plt+0x34328>
  438fac:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  438fb0:	add	x3, x0, #0x290
  438fb4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  438fb8:	add	x1, x1, #0x8e0
  438fbc:	ldr	w0, [x0, #656]
  438fc0:	ldr	x2, [x19, #96]
  438fc4:	cmp	w0, #0x6
  438fc8:	b.gt	43904c <wcrtomb@plt+0x3442c>
  438fcc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  438fd0:	add	x0, x0, #0x828
  438fd4:	blr	x2
  438fd8:	mov	w0, #0x6                   	// #6
  438fdc:	b	438f48 <wcrtomb@plt+0x34328>
  438fe0:	ldr	x3, [x19]
  438fe4:	cbz	x3, 43901c <wcrtomb@plt+0x343fc>
  438fe8:	ldp	x2, x1, [x19, #8]
  438fec:	mov	x20, #0x0                   	// #0
  438ff0:	add	x0, x1, x20
  438ff4:	ldr	x0, [x2, x0, lsl #3]
  438ff8:	cbz	x0, 439024 <wcrtomb@plt+0x34404>
  438ffc:	bl	4047b0 <free@plt>
  439000:	ldp	x3, x2, [x19]
  439004:	ldr	x1, [x19, #16]
  439008:	add	x0, x20, x1
  43900c:	add	x20, x20, #0x1
  439010:	cmp	x20, x3
  439014:	str	xzr, [x2, x0, lsl #3]
  439018:	b.cc	438ff0 <wcrtomb@plt+0x343d0>  // b.lo, b.ul, b.last
  43901c:	str	xzr, [x19]
  439020:	b	438f88 <wcrtomb@plt+0x34368>
  439024:	add	x20, x20, #0x1
  439028:	cmp	x20, x3
  43902c:	b.cc	438ff0 <wcrtomb@plt+0x343d0>  // b.lo, b.ul, b.last
  439030:	str	xzr, [x19]
  439034:	b	438f88 <wcrtomb@plt+0x34368>
  439038:	ldr	x0, [x19, #200]
  43903c:	bl	4047b0 <free@plt>
  439040:	b	438f94 <wcrtomb@plt+0x34374>
  439044:	ldr	x1, [x3, #40]
  439048:	b	438f38 <wcrtomb@plt+0x34318>
  43904c:	ldr	x1, [x3, #64]
  439050:	b	438fcc <wcrtomb@plt+0x343ac>
  439054:	nop
  439058:	stp	x29, x30, [sp, #-48]!
  43905c:	mov	x29, sp
  439060:	stp	x19, x20, [sp, #16]
  439064:	mov	x19, x2
  439068:	str	x21, [sp, #32]
  43906c:	cbz	x0, 439100 <wcrtomb@plt+0x344e0>
  439070:	mov	x2, x1
  439074:	mov	x1, x0
  439078:	mov	x0, x19
  43907c:	bl	436738 <wcrtomb@plt+0x31b18>
  439080:	cbnz	w0, 4390f0 <wcrtomb@plt+0x344d0>
  439084:	mov	x21, #0x0                   	// #0
  439088:	str	wzr, [x19, #224]
  43908c:	mov	x1, x21
  439090:	mov	x0, x19
  439094:	bl	438650 <wcrtomb@plt+0x33a30>
  439098:	cbnz	w0, 4390f0 <wcrtomb@plt+0x344d0>
  43909c:	mov	x0, x19
  4390a0:	ldp	x19, x20, [sp, #16]
  4390a4:	ldr	x21, [sp, #32]
  4390a8:	ldp	x29, x30, [sp], #48
  4390ac:	b	4388a8 <wcrtomb@plt+0x33c88>
  4390b0:	ldr	w1, [x19, #32]
  4390b4:	mov	w0, #0x3                   	// #3
  4390b8:	str	w0, [x19, #192]
  4390bc:	tbz	w1, #4, 4390f0 <wcrtomb@plt+0x344d0>
  4390c0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4390c4:	add	x3, x0, #0x290
  4390c8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4390cc:	add	x1, x1, #0x8e0
  4390d0:	ldr	w0, [x0, #656]
  4390d4:	ldr	x2, [x19, #96]
  4390d8:	cmp	w0, #0x3
  4390dc:	b.gt	4391f4 <wcrtomb@plt+0x345d4>
  4390e0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4390e4:	add	x0, x0, #0x828
  4390e8:	blr	x2
  4390ec:	mov	w0, #0x3                   	// #3
  4390f0:	ldp	x19, x20, [sp, #16]
  4390f4:	ldr	x21, [sp, #32]
  4390f8:	ldp	x29, x30, [sp], #48
  4390fc:	ret
  439100:	mov	w2, w3
  439104:	tbz	w2, #29, 4390b0 <wcrtomb@plt+0x34490>
  439108:	ldr	x0, [x19, #208]
  43910c:	cbnz	x0, 43909c <wcrtomb@plt+0x3447c>
  439110:	ldp	x2, x0, [x19, #176]
  439114:	ldr	w1, [x19, #32]
  439118:	tst	x1, #0x1000
  43911c:	cinc	x21, x0, eq  // eq = none
  439120:	cmp	x0, x2
  439124:	b.eq	43914c <wcrtomb@plt+0x3452c>  // b.none
  439128:	orr	w0, w1, #0x8
  43912c:	str	w0, [x19, #32]
  439130:	tbz	w1, #0, 43918c <wcrtomb@plt+0x3456c>
  439134:	ldr	w0, [x19, #192]
  439138:	cmp	w0, #0x9
  43913c:	b.eq	4391e8 <wcrtomb@plt+0x345c8>  // b.none
  439140:	str	wzr, [x19, #192]
  439144:	str	xzr, [x19, #200]
  439148:	b	43908c <wcrtomb@plt+0x3446c>
  43914c:	mov	w0, #0x6                   	// #6
  439150:	str	w0, [x19, #192]
  439154:	tbz	w1, #4, 4390f0 <wcrtomb@plt+0x344d0>
  439158:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43915c:	add	x3, x0, #0x290
  439160:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439164:	add	x1, x1, #0x8e0
  439168:	ldr	w0, [x0, #656]
  43916c:	ldr	x2, [x19, #96]
  439170:	cmp	w0, #0x6
  439174:	b.gt	4391fc <wcrtomb@plt+0x345dc>
  439178:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43917c:	add	x0, x0, #0x828
  439180:	blr	x2
  439184:	mov	w0, #0x6                   	// #6
  439188:	b	4390f0 <wcrtomb@plt+0x344d0>
  43918c:	ldr	x3, [x19]
  439190:	cbz	x3, 4391cc <wcrtomb@plt+0x345ac>
  439194:	ldp	x2, x1, [x19, #8]
  439198:	mov	x20, #0x0                   	// #0
  43919c:	nop
  4391a0:	add	x0, x1, x20
  4391a4:	ldr	x0, [x2, x0, lsl #3]
  4391a8:	cbz	x0, 4391d4 <wcrtomb@plt+0x345b4>
  4391ac:	bl	4047b0 <free@plt>
  4391b0:	ldp	x3, x2, [x19]
  4391b4:	ldr	x1, [x19, #16]
  4391b8:	add	x0, x1, x20
  4391bc:	add	x20, x20, #0x1
  4391c0:	cmp	x3, x20
  4391c4:	str	xzr, [x2, x0, lsl #3]
  4391c8:	b.hi	4391a0 <wcrtomb@plt+0x34580>  // b.pmore
  4391cc:	str	xzr, [x19]
  4391d0:	b	439134 <wcrtomb@plt+0x34514>
  4391d4:	add	x20, x20, #0x1
  4391d8:	cmp	x3, x20
  4391dc:	b.hi	4391a0 <wcrtomb@plt+0x34580>  // b.pmore
  4391e0:	str	xzr, [x19]
  4391e4:	b	439134 <wcrtomb@plt+0x34514>
  4391e8:	ldr	x0, [x19, #200]
  4391ec:	bl	4047b0 <free@plt>
  4391f0:	b	439140 <wcrtomb@plt+0x34520>
  4391f4:	ldr	x1, [x3, #40]
  4391f8:	b	4390e0 <wcrtomb@plt+0x344c0>
  4391fc:	ldr	x1, [x3, #64]
  439200:	b	439178 <wcrtomb@plt+0x34558>
  439204:	nop
  439208:	sub	sp, sp, #0x270
  43920c:	stp	x29, x30, [sp]
  439210:	mov	x29, sp
  439214:	stp	x19, x20, [sp, #16]
  439218:	mov	x20, x0
  43921c:	stp	x21, x22, [sp, #32]
  439220:	mov	x21, x4
  439224:	stp	x23, x24, [sp, #48]
  439228:	mov	x24, x1
  43922c:	stp	x25, x26, [sp, #64]
  439230:	ldrb	w1, [x1]
  439234:	str	w5, [sp, #104]
  439238:	and	w0, w1, #0xffffffdf
  43923c:	str	x3, [sp, #112]
  439240:	sub	w0, w0, #0x41
  439244:	cmp	w1, #0x5f
  439248:	and	w0, w0, #0xff
  43924c:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  439250:	b.hi	4394f0 <wcrtomb@plt+0x348d0>  // b.pmore
  439254:	cmp	x2, #0x1
  439258:	b.ls	439b9c <wcrtomb@plt+0x34f7c>  // b.plast
  43925c:	mov	x19, #0x1                   	// #1
  439260:	ldrb	w3, [x24, x19]
  439264:	add	x1, x24, x19
  439268:	and	w6, w3, #0xffffffdf
  43926c:	sub	w0, w3, #0x30
  439270:	sub	w6, w6, #0x41
  439274:	and	w0, w0, #0xff
  439278:	and	w6, w6, #0xff
  43927c:	cmp	w6, #0x19
  439280:	b.ls	439290 <wcrtomb@plt+0x34670>  // b.plast
  439284:	cmp	w3, #0x5f
  439288:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  43928c:	b.hi	439750 <wcrtomb@plt+0x34b30>  // b.pmore
  439290:	add	x19, x19, #0x1
  439294:	cmp	x2, x19
  439298:	b.ne	439260 <wcrtomb@plt+0x34640>  // b.any
  43929c:	mov	x23, x24
  4392a0:	mov	x25, #0x0                   	// #0
  4392a4:	str	x1, [x21]
  4392a8:	ldr	w26, [x20, #32]
  4392ac:	tbz	w26, #19, 439408 <wcrtomb@plt+0x347e8>
  4392b0:	ldr	x0, [x20, #112]
  4392b4:	str	x0, [sp, #120]
  4392b8:	tbz	w26, #27, 4393b4 <wcrtomb@plt+0x34794>
  4392bc:	stp	x27, x28, [sp, #80]
  4392c0:	ldr	x27, [x0]
  4392c4:	cbz	x27, 439404 <wcrtomb@plt+0x347e4>
  4392c8:	add	x22, x0, #0x8
  4392cc:	mov	x28, #0x0                   	// #0
  4392d0:	b	4392ec <wcrtomb@plt+0x346cc>
  4392d4:	ldr	x0, [x22]
  4392d8:	add	x28, x28, #0x2
  4392dc:	add	x22, x22, #0x10
  4392e0:	cbz	x0, 439404 <wcrtomb@plt+0x347e4>
  4392e4:	ldur	x27, [x22, #-8]
  4392e8:	cbz	x27, 439404 <wcrtomb@plt+0x347e4>
  4392ec:	mov	x0, x27
  4392f0:	bl	403ff0 <strlen@plt>
  4392f4:	cmp	x19, x0
  4392f8:	b.ne	4392d4 <wcrtomb@plt+0x346b4>  // b.any
  4392fc:	mov	x0, x27
  439300:	mov	x2, x19
  439304:	mov	x1, x23
  439308:	bl	4046d0 <memcmp@plt>
  43930c:	cbnz	w0, 4392d4 <wcrtomb@plt+0x346b4>
  439310:	ldr	x0, [sp, #120]
  439314:	add	x28, x28, #0x1
  439318:	ldr	x0, [x0, x28, lsl #3]
  43931c:	cbnz	x0, 4396f0 <wcrtomb@plt+0x34ad0>
  439320:	ldp	x27, x28, [sp, #80]
  439324:	cbz	x25, 4395a4 <wcrtomb@plt+0x34984>
  439328:	ldrb	w0, [x25]
  43932c:	and	w1, w0, #0xffffffef
  439330:	cmp	w1, #0x2d
  439334:	b.eq	43982c <wcrtomb@plt+0x34c0c>  // b.none
  439338:	cmp	w0, #0x3f
  43933c:	b.eq	439940 <wcrtomb@plt+0x34d20>  // b.none
  439340:	ldr	w0, [x20, #32]
  439344:	str	xzr, [sp, #152]
  439348:	and	w0, w0, #0x800000
  43934c:	cbnz	w0, 4395b8 <wcrtomb@plt+0x34998>
  439350:	mov	x1, #0x28                  	// #40
  439354:	mov	x0, #0x1                   	// #1
  439358:	bl	4044c0 <calloc@plt>
  43935c:	mov	x19, x0
  439360:	cbz	x0, 439fb0 <wcrtomb@plt+0x35390>
  439364:	ldr	x1, [x20, #208]
  439368:	mov	x0, x19
  43936c:	cbz	x1, 439ae0 <wcrtomb@plt+0x34ec0>
  439370:	mov	x1, x0
  439374:	ldr	x0, [x0, #8]
  439378:	cbnz	x0, 439370 <wcrtomb@plt+0x34750>
  43937c:	ldr	x0, [sp, #112]
  439380:	ldr	x0, [x0]
  439384:	ldr	x2, [x0, #8]
  439388:	cbz	x2, 439eec <wcrtomb@plt+0x352cc>
  43938c:	str	x1, [x2]
  439390:	str	x2, [x1, #8]
  439394:	str	x0, [x19]
  439398:	str	x19, [x0, #8]
  43939c:	ldr	x1, [sp, #112]
  4393a0:	mov	w0, #0x1                   	// #1
  4393a4:	mov	w26, #0x0                   	// #0
  4393a8:	str	x19, [x1]
  4393ac:	str	w0, [x19, #16]
  4393b0:	b	4394d0 <wcrtomb@plt+0x348b0>
  4393b4:	cbz	x0, 439408 <wcrtomb@plt+0x347e8>
  4393b8:	ldr	x4, [x0]
  4393bc:	cbz	x4, 439408 <wcrtomb@plt+0x347e8>
  4393c0:	stp	x27, x28, [sp, #80]
  4393c4:	add	x27, x0, #0x8
  4393c8:	mov	x2, #0x0                   	// #0
  4393cc:	b	4393d4 <wcrtomb@plt+0x347b4>
  4393d0:	mov	x2, x0
  4393d4:	ldrb	w3, [x23, x2]
  4393d8:	add	x0, x2, #0x1
  4393dc:	ldrb	w1, [x4, x2]
  4393e0:	cmp	w3, w1
  4393e4:	b.ne	4393fc <wcrtomb@plt+0x347dc>  // b.any
  4393e8:	cmp	x19, x0
  4393ec:	b.ne	4393d0 <wcrtomb@plt+0x347b0>  // b.any
  4393f0:	ldrb	w0, [x4, x19]
  4393f4:	cmp	w0, #0x3d
  4393f8:	b.eq	4396e8 <wcrtomb@plt+0x34ac8>  // b.none
  4393fc:	ldr	x4, [x27], #8
  439400:	cbnz	x4, 4393c8 <wcrtomb@plt+0x347a8>
  439404:	ldp	x27, x28, [sp, #80]
  439408:	tbz	w26, #20, 439324 <wcrtomb@plt+0x34704>
  43940c:	ldp	x4, x3, [x20, #144]
  439410:	mov	x2, x19
  439414:	mov	x1, x23
  439418:	add	x0, sp, #0x98
  43941c:	blr	x4
  439420:	mov	w26, w0
  439424:	cbnz	w0, 439894 <wcrtomb@plt+0x34c74>
  439428:	ldr	x26, [sp, #152]
  43942c:	cbnz	x26, 439704 <wcrtomb@plt+0x34ae4>
  439430:	cbz	x25, 439fd8 <wcrtomb@plt+0x353b8>
  439434:	ldurb	w0, [x25, #-1]
  439438:	cmp	w0, #0x3a
  43943c:	b.eq	439c28 <wcrtomb@plt+0x35008>  // b.none
  439440:	ldrb	w0, [x25]
  439444:	cmp	w0, #0x2b
  439448:	b.eq	439a54 <wcrtomb@plt+0x34e34>  // b.none
  43944c:	cbz	x26, 439fd8 <wcrtomb@plt+0x353b8>
  439450:	ldr	x0, [sp, #104]
  439454:	tbnz	w0, #2, 4397b8 <wcrtomb@plt+0x34b98>
  439458:	ldrb	w0, [x26]
  43945c:	cbz	w0, 439718 <wcrtomb@plt+0x34af8>
  439460:	mov	x0, x26
  439464:	bl	403ff0 <strlen@plt>
  439468:	ldr	x1, [x20, #32]
  43946c:	mov	w3, w0
  439470:	mov	w6, #0x1644                	// #5700
  439474:	mov	x2, x26
  439478:	and	x0, x1, #0xfffffff000
  43947c:	mov	w4, #0x644                 	// #1604
  439480:	ands	x0, x0, #0xffffff8000001fff
  439484:	add	x1, sp, #0xa0
  439488:	csel	w4, w6, w4, ne  // ne = any
  43948c:	mov	x0, x20
  439490:	mov	w5, #0x0                   	// #0
  439494:	bl	438ce8 <wcrtomb@plt+0x340c8>
  439498:	mov	w26, w0
  43949c:	ldr	x0, [sp, #152]
  4394a0:	bl	4047b0 <free@plt>
  4394a4:	cbz	w26, 43991c <wcrtomb@plt+0x34cfc>
  4394a8:	ldr	w0, [x20, #192]
  4394ac:	cmp	w0, #0x9
  4394b0:	b.eq	439a48 <wcrtomb@plt+0x34e28>  // b.none
  4394b4:	ldr	w0, [sp, #352]
  4394b8:	str	w0, [x20, #192]
  4394bc:	cmp	w0, #0x9
  4394c0:	b.eq	439a34 <wcrtomb@plt+0x34e14>  // b.none
  4394c4:	add	x0, sp, #0xa0
  4394c8:	mov	w26, #0x1                   	// #1
  4394cc:	bl	436e10 <wcrtomb@plt+0x321f0>
  4394d0:	mov	w0, w26
  4394d4:	ldp	x29, x30, [sp]
  4394d8:	ldp	x19, x20, [sp, #16]
  4394dc:	ldp	x21, x22, [sp, #32]
  4394e0:	ldp	x23, x24, [sp, #48]
  4394e4:	ldp	x25, x26, [sp, #64]
  4394e8:	add	sp, sp, #0x270
  4394ec:	ret
  4394f0:	cmp	w1, #0x7b
  4394f4:	b.ne	439658 <wcrtomb@plt+0x34a38>  // b.any
  4394f8:	sub	x26, x2, #0x1
  4394fc:	add	x23, x24, #0x1
  439500:	cmp	x26, #0x1
  439504:	b.ls	439d4c <wcrtomb@plt+0x3512c>  // b.plast
  439508:	mov	x19, #0x1                   	// #1
  43950c:	stp	x27, x28, [sp, #80]
  439510:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439514:	add	x28, x24, #0x2
  439518:	add	x27, x27, #0xa08
  43951c:	b	43953c <wcrtomb@plt+0x3491c>
  439520:	cmp	w1, #0x7d
  439524:	b.eq	439b00 <wcrtomb@plt+0x34ee0>  // b.none
  439528:	bl	404870 <strchr@plt>
  43952c:	cbnz	x0, 439b58 <wcrtomb@plt+0x34f38>
  439530:	add	x19, x19, #0x1
  439534:	cmp	x26, x19
  439538:	b.eq	439b94 <wcrtomb@plt+0x34f74>  // b.none
  43953c:	ldrb	w1, [x28]
  439540:	mov	x25, x28
  439544:	mov	x0, x27
  439548:	add	x28, x28, #0x1
  43954c:	cmp	w1, #0x3a
  439550:	b.ne	439520 <wcrtomb@plt+0x34900>  // b.any
  439554:	add	x1, x19, #0x1
  439558:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43955c:	add	x25, x23, x1
  439560:	add	x4, x4, #0x9a0
  439564:	add	x3, sp, #0x188
  439568:	mov	x2, x26
  43956c:	mov	x0, x23
  439570:	bl	436388 <wcrtomb@plt+0x31768>
  439574:	cbnz	w0, 439b78 <wcrtomb@plt+0x34f58>
  439578:	ldr	x0, [sp, #392]
  43957c:	cmp	x26, x19
  439580:	add	x0, x23, x0
  439584:	str	x0, [x21]
  439588:	b.eq	439b94 <wcrtomb@plt+0x34f74>  // b.none
  43958c:	ldrb	w1, [x25]
  439590:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439594:	add	x0, x0, #0xa08
  439598:	bl	404870 <strchr@plt>
  43959c:	ldp	x27, x28, [sp, #80]
  4395a0:	cbnz	x0, 4392a8 <wcrtomb@plt+0x34688>
  4395a4:	ldr	w0, [x20, #32]
  4395a8:	tbnz	w0, #5, 439ba8 <wcrtomb@plt+0x34f88>
  4395ac:	tbnz	w0, #24, 439a04 <wcrtomb@plt+0x34de4>
  4395b0:	tbz	w0, #23, 43975c <wcrtomb@plt+0x34b3c>
  4395b4:	str	xzr, [sp, #152]
  4395b8:	mov	x1, #0x28                  	// #40
  4395bc:	mov	x0, #0x1                   	// #1
  4395c0:	ldr	x21, [x21]
  4395c4:	bl	4044c0 <calloc@plt>
  4395c8:	mov	x19, x0
  4395cc:	cbz	x0, 439f94 <wcrtomb@plt+0x35374>
  4395d0:	ldr	x1, [x20, #208]
  4395d4:	mov	x0, x19
  4395d8:	cbz	x1, 439af0 <wcrtomb@plt+0x34ed0>
  4395dc:	mov	x1, x0
  4395e0:	ldr	x0, [x0, #8]
  4395e4:	cbnz	x0, 4395dc <wcrtomb@plt+0x349bc>
  4395e8:	ldr	x0, [sp, #112]
  4395ec:	ldr	x0, [x0]
  4395f0:	ldr	x2, [x0, #8]
  4395f4:	cbz	x2, 439fa8 <wcrtomb@plt+0x35388>
  4395f8:	str	x1, [x2]
  4395fc:	str	x2, [x1, #8]
  439600:	str	x0, [x19]
  439604:	str	x19, [x0, #8]
  439608:	ldr	w1, [sp, #104]
  43960c:	mov	w0, #0xa                   	// #10
  439610:	sub	x24, x24, #0x1
  439614:	orr	w22, w1, w0
  439618:	str	w22, [x19, #16]
  43961c:	ldr	x0, [sp, #112]
  439620:	sub	x21, x21, x24
  439624:	str	x19, [x0]
  439628:	add	x0, x21, #0x2
  43962c:	bl	404310 <malloc@plt>
  439630:	str	x0, [x19, #24]
  439634:	mov	x22, x0
  439638:	cbz	x0, 439774 <wcrtomb@plt+0x34b54>
  43963c:	add	x21, x21, #0x1
  439640:	mov	x1, x24
  439644:	mov	x2, x21
  439648:	mov	w26, #0x0                   	// #0
  43964c:	bl	403f70 <memcpy@plt>
  439650:	strb	wzr, [x22, x21]
  439654:	b	4394d0 <wcrtomb@plt+0x348b0>
  439658:	mov	x1, #0x28                  	// #40
  43965c:	mov	x0, #0x1                   	// #1
  439660:	bl	4044c0 <calloc@plt>
  439664:	mov	x19, x0
  439668:	cbz	x0, 439fc4 <wcrtomb@plt+0x353a4>
  43966c:	ldr	x1, [x20, #208]
  439670:	mov	x0, x19
  439674:	cbz	x1, 439dc8 <wcrtomb@plt+0x351a8>
  439678:	mov	x1, x0
  43967c:	ldr	x0, [x0, #8]
  439680:	cbnz	x0, 439678 <wcrtomb@plt+0x34a58>
  439684:	ldr	x0, [sp, #112]
  439688:	ldr	x0, [x0]
  43968c:	ldr	x2, [x0, #8]
  439690:	cbz	x2, 439ee4 <wcrtomb@plt+0x352c4>
  439694:	str	x1, [x2]
  439698:	str	x2, [x1, #8]
  43969c:	str	x0, [x19]
  4396a0:	str	x19, [x0, #8]
  4396a4:	ldr	w0, [sp, #104]
  4396a8:	orr	w22, w0, #0x2
  4396ac:	str	w22, [x19, #16]
  4396b0:	ldr	x0, [sp, #112]
  4396b4:	str	x19, [x0]
  4396b8:	mov	x0, #0x3                   	// #3
  4396bc:	bl	404310 <malloc@plt>
  4396c0:	str	x0, [x19, #24]
  4396c4:	cbz	x0, 439774 <wcrtomb@plt+0x34b54>
  4396c8:	ldrb	w1, [x24]
  4396cc:	mov	w2, #0x24                  	// #36
  4396d0:	mov	w26, #0x0                   	// #0
  4396d4:	strb	w2, [x0]
  4396d8:	str	x24, [x21]
  4396dc:	strb	w1, [x0, #1]
  4396e0:	strb	wzr, [x0, #2]
  4396e4:	b	4394d0 <wcrtomb@plt+0x348b0>
  4396e8:	add	x2, x2, #0x2
  4396ec:	add	x0, x4, x2
  4396f0:	bl	404580 <strdup@plt>
  4396f4:	str	x0, [sp, #152]
  4396f8:	mov	x26, x0
  4396fc:	ldp	x27, x28, [sp, #80]
  439700:	cbz	x0, 439774 <wcrtomb@plt+0x34b54>
  439704:	ldrb	w0, [x26]
  439708:	cbnz	w0, 4397a0 <wcrtomb@plt+0x34b80>
  43970c:	cbnz	x25, 439434 <wcrtomb@plt+0x34814>
  439710:	ldr	x0, [sp, #104]
  439714:	tbnz	w0, #2, 4397b8 <wcrtomb@plt+0x34b98>
  439718:	mov	x0, x26
  43971c:	bl	4047b0 <free@plt>
  439720:	mov	x1, #0x28                  	// #40
  439724:	mov	x0, #0x1                   	// #1
  439728:	bl	4044c0 <calloc@plt>
  43972c:	mov	x19, x0
  439730:	cbz	x0, 439f18 <wcrtomb@plt+0x352f8>
  439734:	ldr	x1, [x20, #208]
  439738:	mov	x0, x19
  43973c:	cbz	x1, 439ae0 <wcrtomb@plt+0x34ec0>
  439740:	mov	x1, x0
  439744:	ldr	x0, [x0, #8]
  439748:	cbnz	x0, 439740 <wcrtomb@plt+0x34b20>
  43974c:	b	43937c <wcrtomb@plt+0x3475c>
  439750:	sub	x1, x19, #0x1
  439754:	add	x1, x24, x1
  439758:	b	43929c <wcrtomb@plt+0x3467c>
  43975c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  439760:	add	x0, x0, #0x7e8
  439764:	bl	404580 <strdup@plt>
  439768:	str	x0, [sp, #152]
  43976c:	mov	x26, x0
  439770:	cbnz	x0, 439450 <wcrtomb@plt+0x34830>
  439774:	mov	x0, x20
  439778:	bl	436f20 <wcrtomb@plt+0x32300>
  43977c:	mov	w26, w0
  439780:	mov	w0, w26
  439784:	ldp	x29, x30, [sp]
  439788:	ldp	x19, x20, [sp, #16]
  43978c:	ldp	x21, x22, [sp, #32]
  439790:	ldp	x23, x24, [sp, #48]
  439794:	ldp	x25, x26, [sp, #64]
  439798:	add	sp, sp, #0x270
  43979c:	ret
  4397a0:	cbz	x25, 439450 <wcrtomb@plt+0x34830>
  4397a4:	ldrb	w0, [x25]
  4397a8:	cmp	w0, #0x2b
  4397ac:	b.eq	439a54 <wcrtomb@plt+0x34e34>  // b.none
  4397b0:	ldr	x0, [sp, #104]
  4397b4:	tbz	w0, #2, 439460 <wcrtomb@plt+0x34840>
  4397b8:	mov	x1, #0x28                  	// #40
  4397bc:	mov	x0, #0x1                   	// #1
  4397c0:	bl	4044c0 <calloc@plt>
  4397c4:	mov	x19, x0
  4397c8:	cbz	x0, 439f2c <wcrtomb@plt+0x3530c>
  4397cc:	ldr	x1, [x20, #208]
  4397d0:	mov	x0, x19
  4397d4:	cbz	x1, 439dfc <wcrtomb@plt+0x351dc>
  4397d8:	mov	x1, x0
  4397dc:	ldr	x0, [x0, #8]
  4397e0:	cbnz	x0, 4397d8 <wcrtomb@plt+0x34bb8>
  4397e4:	ldr	x0, [sp, #112]
  4397e8:	ldr	x0, [x0]
  4397ec:	ldr	x2, [x0, #8]
  4397f0:	cbz	x2, 439ef4 <wcrtomb@plt+0x352d4>
  4397f4:	str	x1, [x2]
  4397f8:	str	x2, [x1, #8]
  4397fc:	str	x0, [x19]
  439800:	str	x19, [x0, #8]
  439804:	ldr	w2, [sp, #104]
  439808:	mov	w0, #0xa                   	// #10
  43980c:	ldr	x1, [sp, #152]
  439810:	orr	w22, w2, w0
  439814:	ldr	x0, [sp, #112]
  439818:	mov	w26, #0x0                   	// #0
  43981c:	str	w22, [x19, #16]
  439820:	str	x1, [x19, #24]
  439824:	str	x19, [x0]
  439828:	b	4394d0 <wcrtomb@plt+0x348b0>
  43982c:	ldr	w0, [x20, #32]
  439830:	add	x2, x25, #0x1
  439834:	ldr	x3, [x21]
  439838:	mov	w1, #0x44                  	// #68
  43983c:	mov	w4, #0x700                 	// #1792
  439840:	and	w0, w0, w1
  439844:	sub	w3, w3, w2
  439848:	add	x1, sp, #0x188
  43984c:	movk	w4, #0x40, lsl #16
  439850:	mov	w5, #0x1                   	// #1
  439854:	orr	w4, w0, w4
  439858:	mov	x0, x20
  43985c:	bl	438ce8 <wcrtomb@plt+0x340c8>
  439860:	mov	w26, w0
  439864:	cbnz	w0, 4394d0 <wcrtomb@plt+0x348b0>
  439868:	ldr	x1, [sp, #400]
  43986c:	add	x0, sp, #0x188
  439870:	ldr	x2, [x1]
  439874:	str	x2, [sp, #152]
  439878:	str	xzr, [x1]
  43987c:	bl	436e10 <wcrtomb@plt+0x321f0>
  439880:	ldrb	w0, [x25]
  439884:	cmp	w0, #0x3d
  439888:	b.eq	439c58 <wcrtomb@plt+0x35038>  // b.none
  43988c:	ldr	x26, [sp, #152]
  439890:	b	43944c <wcrtomb@plt+0x3482c>
  439894:	cmp	w0, #0x5
  439898:	b.eq	439324 <wcrtomb@plt+0x34704>  // b.none
  43989c:	cmp	w0, #0x9
  4398a0:	b.eq	4398dc <wcrtomb@plt+0x34cbc>  // b.none
  4398a4:	cmp	w0, #0x2
  4398a8:	b.eq	439774 <wcrtomb@plt+0x34b54>  // b.none
  4398ac:	ldr	w0, [x20, #32]
  4398b0:	str	w26, [x20, #192]
  4398b4:	tbnz	w0, #4, 4399b0 <wcrtomb@plt+0x34d90>
  4398b8:	mov	w26, #0x1                   	// #1
  4398bc:	mov	w0, w26
  4398c0:	ldp	x29, x30, [sp]
  4398c4:	ldp	x19, x20, [sp, #16]
  4398c8:	ldp	x21, x22, [sp, #32]
  4398cc:	ldp	x23, x24, [sp, #48]
  4398d0:	ldp	x25, x26, [sp, #64]
  4398d4:	add	sp, sp, #0x270
  4398d8:	ret
  4398dc:	ldr	w0, [x20, #192]
  4398e0:	cmp	w0, #0x9
  4398e4:	b.eq	439be8 <wcrtomb@plt+0x34fc8>  // b.none
  4398e8:	ldr	w1, [x20, #32]
  4398ec:	mov	w2, #0x9                   	// #9
  4398f0:	ldr	x0, [sp, #152]
  4398f4:	str	w2, [x20, #192]
  4398f8:	str	x0, [x20, #200]
  4398fc:	tbz	w1, #4, 4398b8 <wcrtomb@plt+0x34c98>
  439900:	ldr	x19, [x20, #96]
  439904:	mov	x1, x0
  439908:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43990c:	mov	w26, #0x1                   	// #1
  439910:	add	x0, x0, #0x828
  439914:	blr	x19
  439918:	b	4394d0 <wcrtomb@plt+0x348b0>
  43991c:	ldr	x2, [x20, #208]
  439920:	ldr	x0, [sp, #368]
  439924:	mov	x1, x0
  439928:	cbz	x2, 439ab8 <wcrtomb@plt+0x34e98>
  43992c:	cbz	x1, 439dd8 <wcrtomb@plt+0x351b8>
  439930:	ldr	x2, [x1, #8]
  439934:	cbz	x2, 439dd8 <wcrtomb@plt+0x351b8>
  439938:	mov	x1, x2
  43993c:	b	43992c <wcrtomb@plt+0x34d0c>
  439940:	ldr	x0, [x21]
  439944:	add	x25, x25, #0x1
  439948:	subs	x26, x0, x25
  43994c:	b.eq	4399dc <wcrtomb@plt+0x34dbc>  // b.none
  439950:	ldr	w0, [x20, #32]
  439954:	mov	w1, #0x44                  	// #68
  439958:	mov	w4, #0x700                 	// #1792
  43995c:	mov	w3, w26
  439960:	and	w0, w0, w1
  439964:	movk	w4, #0x40, lsl #16
  439968:	mov	x2, x25
  43996c:	orr	w4, w0, w4
  439970:	add	x1, sp, #0x188
  439974:	mov	x0, x20
  439978:	mov	w5, #0x1                   	// #1
  43997c:	bl	438ce8 <wcrtomb@plt+0x340c8>
  439980:	cbnz	w0, 439c34 <wcrtomb@plt+0x35014>
  439984:	ldr	x0, [sp, #400]
  439988:	mov	x2, x23
  43998c:	ldr	x4, [x20, #96]
  439990:	mov	w1, w19
  439994:	ldr	x3, [x0]
  439998:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43999c:	add	x0, x0, #0xa30
  4399a0:	blr	x4
  4399a4:	add	x0, sp, #0x188
  4399a8:	bl	436e10 <wcrtomb@plt+0x321f0>
  4399ac:	b	439340 <wcrtomb@plt+0x34720>
  4399b0:	cmp	w26, #0x1
  4399b4:	ldr	x19, [x20, #96]
  4399b8:	b.eq	439c00 <wcrtomb@plt+0x34fe0>  // b.none
  4399bc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4399c0:	add	x1, x0, #0x290
  4399c4:	ldr	w0, [x0, #656]
  4399c8:	cmp	w26, w0
  4399cc:	b.lt	439bf4 <wcrtomb@plt+0x34fd4>  // b.tstop
  4399d0:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4399d4:	add	x1, x0, #0x8e0
  4399d8:	b	439908 <wcrtomb@plt+0x34ce8>
  4399dc:	ldr	x25, [x20, #96]
  4399e0:	mov	w2, #0x5                   	// #5
  4399e4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4399e8:	mov	x0, #0x0                   	// #0
  4399ec:	add	x1, x1, #0xa10
  4399f0:	bl	4049c0 <dcgettext@plt>
  4399f4:	mov	x2, x23
  4399f8:	mov	w1, w19
  4399fc:	blr	x25
  439a00:	b	439340 <wcrtomb@plt+0x34720>
  439a04:	ldr	x25, [x20, #96]
  439a08:	mov	w2, #0x5                   	// #5
  439a0c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439a10:	mov	x0, #0x0                   	// #0
  439a14:	add	x1, x1, #0xa50
  439a18:	bl	4049c0 <dcgettext@plt>
  439a1c:	mov	x2, x23
  439a20:	mov	w1, w19
  439a24:	blr	x25
  439a28:	ldr	w0, [x20, #32]
  439a2c:	tbnz	w0, #23, 4395b4 <wcrtomb@plt+0x34994>
  439a30:	b	43975c <wcrtomb@plt+0x34b3c>
  439a34:	ldr	x0, [sp, #360]
  439a38:	str	x0, [x20, #200]
  439a3c:	str	wzr, [sp, #352]
  439a40:	str	xzr, [sp, #360]
  439a44:	b	4394c4 <wcrtomb@plt+0x348a4>
  439a48:	ldr	x0, [x20, #200]
  439a4c:	bl	4047b0 <free@plt>
  439a50:	b	4394b4 <wcrtomb@plt+0x34894>
  439a54:	ldr	w0, [x20, #32]
  439a58:	add	x2, x25, #0x1
  439a5c:	ldr	x3, [x21]
  439a60:	mov	w1, #0x44                  	// #68
  439a64:	mov	w4, #0x700                 	// #1792
  439a68:	and	w0, w0, w1
  439a6c:	sub	w3, w3, w2
  439a70:	add	x1, sp, #0x188
  439a74:	movk	w4, #0x40, lsl #16
  439a78:	mov	w5, #0x1                   	// #1
  439a7c:	orr	w4, w0, w4
  439a80:	mov	x0, x20
  439a84:	bl	438ce8 <wcrtomb@plt+0x340c8>
  439a88:	mov	w26, w0
  439a8c:	cbnz	w0, 4394d0 <wcrtomb@plt+0x348b0>
  439a90:	ldr	x0, [sp, #152]
  439a94:	bl	4047b0 <free@plt>
  439a98:	ldr	x1, [sp, #400]
  439a9c:	add	x0, sp, #0x188
  439aa0:	ldr	x2, [x1]
  439aa4:	str	x2, [sp, #152]
  439aa8:	str	xzr, [x1]
  439aac:	bl	436e10 <wcrtomb@plt+0x321f0>
  439ab0:	ldr	x26, [sp, #152]
  439ab4:	b	43944c <wcrtomb@plt+0x3482c>
  439ab8:	dup	v0.2d, x0
  439abc:	stp	xzr, xzr, [x0]
  439ac0:	str	q0, [x20, #208]
  439ac4:	ldr	x1, [sp, #112]
  439ac8:	ldr	x0, [sp, #376]
  439acc:	stp	xzr, xzr, [sp, #368]
  439ad0:	str	x0, [x1]
  439ad4:	add	x0, sp, #0xa0
  439ad8:	bl	436e10 <wcrtomb@plt+0x321f0>
  439adc:	b	4394d0 <wcrtomb@plt+0x348b0>
  439ae0:	dup	v0.2d, x19
  439ae4:	stp	xzr, xzr, [x19]
  439ae8:	str	q0, [x20, #208]
  439aec:	b	43939c <wcrtomb@plt+0x3477c>
  439af0:	dup	v0.2d, x19
  439af4:	stp	xzr, xzr, [x19]
  439af8:	str	q0, [x20, #208]
  439afc:	b	439608 <wcrtomb@plt+0x349e8>
  439b00:	ldp	x27, x28, [sp, #80]
  439b04:	str	x25, [x21]
  439b08:	cmp	x26, x19
  439b0c:	mov	x25, #0x0                   	// #0
  439b10:	b.ne	4392a8 <wcrtomb@plt+0x34688>  // b.any
  439b14:	ldr	w0, [x20, #32]
  439b18:	mov	w26, #0x4                   	// #4
  439b1c:	str	w26, [x20, #192]
  439b20:	tbz	w0, #4, 4394d0 <wcrtomb@plt+0x348b0>
  439b24:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  439b28:	add	x3, x0, #0x290
  439b2c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439b30:	add	x1, x1, #0x8e0
  439b34:	ldr	w0, [x0, #656]
  439b38:	ldr	x2, [x20, #96]
  439b3c:	cmp	w0, #0x4
  439b40:	b.gt	439ed4 <wcrtomb@plt+0x352b4>
  439b44:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  439b48:	mov	w26, #0x4                   	// #4
  439b4c:	add	x0, x0, #0x828
  439b50:	blr	x2
  439b54:	b	4394d0 <wcrtomb@plt+0x348b0>
  439b58:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439b5c:	add	x3, sp, #0x188
  439b60:	add	x4, x4, #0x9a0
  439b64:	mov	x2, x26
  439b68:	mov	x1, x19
  439b6c:	mov	x0, x23
  439b70:	bl	436388 <wcrtomb@plt+0x31768>
  439b74:	cbz	w0, 439578 <wcrtomb@plt+0x34958>
  439b78:	ldr	w0, [x20, #32]
  439b7c:	mov	w1, #0x4                   	// #4
  439b80:	str	w1, [x20, #192]
  439b84:	tbnz	w0, #4, 439d1c <wcrtomb@plt+0x350fc>
  439b88:	mov	w26, #0x4                   	// #4
  439b8c:	ldp	x27, x28, [sp, #80]
  439b90:	b	4394d0 <wcrtomb@plt+0x348b0>
  439b94:	ldp	x27, x28, [sp, #80]
  439b98:	b	439b14 <wcrtomb@plt+0x34ef4>
  439b9c:	mov	x1, x24
  439ba0:	mov	x19, #0x1                   	// #1
  439ba4:	b	43929c <wcrtomb@plt+0x3467c>
  439ba8:	mov	w1, #0x5                   	// #5
  439bac:	str	w1, [x20, #192]
  439bb0:	tbz	w0, #4, 4398b8 <wcrtomb@plt+0x34c98>
  439bb4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  439bb8:	add	x3, x0, #0x290
  439bbc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439bc0:	add	x1, x1, #0x8e0
  439bc4:	ldr	w0, [x0, #656]
  439bc8:	ldr	x2, [x20, #96]
  439bcc:	cmp	w0, #0x5
  439bd0:	b.gt	439e98 <wcrtomb@plt+0x35278>
  439bd4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  439bd8:	mov	w26, #0x1                   	// #1
  439bdc:	add	x0, x0, #0x828
  439be0:	blr	x2
  439be4:	b	4394d0 <wcrtomb@plt+0x348b0>
  439be8:	ldr	x0, [x20, #200]
  439bec:	bl	4047b0 <free@plt>
  439bf0:	b	4398e8 <wcrtomb@plt+0x34cc8>
  439bf4:	add	x1, x1, #0x10
  439bf8:	ldr	x1, [x1, w26, sxtw #3]
  439bfc:	b	439908 <wcrtomb@plt+0x34ce8>
  439c00:	mov	w2, #0x5                   	// #5
  439c04:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439c08:	mov	x0, #0x0                   	// #0
  439c0c:	add	x1, x1, #0x918
  439c10:	bl	4049c0 <dcgettext@plt>
  439c14:	ldr	x1, [x20, #168]
  439c18:	ldr	x2, [x20, #184]
  439c1c:	ldrb	w1, [x1, x2]
  439c20:	blr	x19
  439c24:	b	4394d0 <wcrtomb@plt+0x348b0>
  439c28:	mov	x0, x26
  439c2c:	bl	4047b0 <free@plt>
  439c30:	b	439328 <wcrtomb@plt+0x34708>
  439c34:	ldr	x5, [x20, #96]
  439c38:	mov	x4, x25
  439c3c:	mov	w3, w26
  439c40:	mov	x2, x23
  439c44:	mov	w1, w19
  439c48:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439c4c:	add	x0, x0, #0xa40
  439c50:	blr	x5
  439c54:	b	4399a4 <wcrtomb@plt+0x34d84>
  439c58:	stp	x27, x28, [sp, #80]
  439c5c:	ldr	w28, [x20, #32]
  439c60:	ldr	x0, [sp, #152]
  439c64:	str	x0, [sp, #120]
  439c68:	and	w22, w28, #0x8000000
  439c6c:	ldr	x0, [x20, #128]
  439c70:	ldr	x1, [x20, #136]
  439c74:	tbz	w28, #27, 439d5c <wcrtomb@plt+0x3513c>
  439c78:	add	x0, x0, #0x2
  439c7c:	cmp	x1, x0
  439c80:	b.hi	439cbc <wcrtomb@plt+0x3509c>  // b.pmore
  439c84:	mov	x25, #0x3                   	// #3
  439c88:	mov	x2, #0x2                   	// #2
  439c8c:	ldr	x0, [x20, #120]
  439c90:	cbz	x0, 439e0c <wcrtomb@plt+0x351ec>
  439c94:	lsl	x2, x1, #1
  439c98:	str	x2, [x20, #136]
  439c9c:	lsl	x1, x1, #4
  439ca0:	bl	404530 <realloc@plt>
  439ca4:	cbz	x0, 439f04 <wcrtomb@plt+0x352e4>
  439ca8:	ldr	w26, [x20, #32]
  439cac:	dup	v0.2d, x0
  439cb0:	and	w22, w26, #0x8000000
  439cb4:	str	q0, [x20, #112]
  439cb8:	cbz	w22, 439d74 <wcrtomb@plt+0x35154>
  439cbc:	add	x0, x19, #0x1
  439cc0:	bl	404310 <malloc@plt>
  439cc4:	mov	x25, x0
  439cc8:	cbz	x0, 439f04 <wcrtomb@plt+0x352e4>
  439ccc:	mov	x1, x23
  439cd0:	mov	x2, x19
  439cd4:	bl	403f70 <memcpy@plt>
  439cd8:	strb	wzr, [x25, x19]
  439cdc:	ldr	x0, [sp, #120]
  439ce0:	bl	404580 <strdup@plt>
  439ce4:	mov	x1, x0
  439ce8:	cbz	x0, 439efc <wcrtomb@plt+0x352dc>
  439cec:	ldr	x0, [x20, #112]
  439cf0:	ldr	x3, [x20, #128]
  439cf4:	add	x2, x3, #0x2
  439cf8:	add	x4, x0, x3, lsl #3
  439cfc:	str	x25, [x0, x3, lsl #3]
  439d00:	str	x1, [x4, #8]
  439d04:	add	x1, x2, #0x1
  439d08:	ldp	x27, x28, [sp, #80]
  439d0c:	str	x1, [x20, #128]
  439d10:	str	xzr, [x0, x2, lsl #3]
  439d14:	ldr	x26, [sp, #152]
  439d18:	b	43944c <wcrtomb@plt+0x3482c>
  439d1c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  439d20:	add	x3, x0, #0x290
  439d24:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439d28:	add	x1, x1, #0x8e0
  439d2c:	ldr	w0, [x0, #656]
  439d30:	ldr	x2, [x20, #96]
  439d34:	cmp	w0, #0x4
  439d38:	b.gt	439ecc <wcrtomb@plt+0x352ac>
  439d3c:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  439d40:	add	x0, x0, #0x828
  439d44:	blr	x2
  439d48:	b	439b88 <wcrtomb@plt+0x34f68>
  439d4c:	b.eq	439b14 <wcrtomb@plt+0x34ef4>  // b.none
  439d50:	mov	x25, #0x0                   	// #0
  439d54:	mov	x19, #0x1                   	// #1
  439d58:	b	4392a8 <wcrtomb@plt+0x34688>
  439d5c:	add	x0, x0, #0x1
  439d60:	cmp	x1, x0
  439d64:	b.hi	439d74 <wcrtomb@plt+0x35154>  // b.pmore
  439d68:	mov	x25, #0x2                   	// #2
  439d6c:	mov	x2, #0x1                   	// #1
  439d70:	b	439c8c <wcrtomb@plt+0x3506c>
  439d74:	ldr	x0, [sp, #120]
  439d78:	bl	403ff0 <strlen@plt>
  439d7c:	add	x1, x19, #0x2
  439d80:	add	x0, x1, x0
  439d84:	bl	404310 <malloc@plt>
  439d88:	mov	x25, x0
  439d8c:	cbz	x0, 439f04 <wcrtomb@plt+0x352e4>
  439d90:	mov	x2, x19
  439d94:	mov	x1, x23
  439d98:	bl	403f70 <memcpy@plt>
  439d9c:	ldr	x1, [sp, #120]
  439da0:	mov	w2, #0x3d                  	// #61
  439da4:	strb	w2, [x25, x19]
  439da8:	add	x0, x19, #0x1
  439dac:	add	x0, x25, x0
  439db0:	bl	404910 <strcpy@plt>
  439db4:	ldr	x0, [x20, #112]
  439db8:	ldr	x1, [x20, #128]
  439dbc:	add	x2, x1, #0x1
  439dc0:	str	x25, [x0, x1, lsl #3]
  439dc4:	b	439d04 <wcrtomb@plt+0x350e4>
  439dc8:	dup	v0.2d, x19
  439dcc:	stp	xzr, xzr, [x19]
  439dd0:	str	q0, [x20, #208]
  439dd4:	b	4396a4 <wcrtomb@plt+0x34a84>
  439dd8:	ldr	x2, [sp, #112]
  439ddc:	ldr	x2, [x2]
  439de0:	ldr	x3, [x2, #8]
  439de4:	cbz	x3, 439edc <wcrtomb@plt+0x352bc>
  439de8:	str	x1, [x3]
  439dec:	str	x3, [x1, #8]
  439df0:	str	x2, [x0]
  439df4:	str	x0, [x2, #8]
  439df8:	b	439ac4 <wcrtomb@plt+0x34ea4>
  439dfc:	dup	v0.2d, x19
  439e00:	stp	xzr, xzr, [x19]
  439e04:	str	q0, [x20, #208]
  439e08:	b	439804 <wcrtomb@plt+0x34be4>
  439e0c:	tbz	w28, #19, 439ea0 <wcrtomb@plt+0x35280>
  439e10:	ldr	x5, [x20, #112]
  439e14:	cbz	x5, 439f48 <wcrtomb@plt+0x35328>
  439e18:	ldr	x0, [x5]
  439e1c:	cbz	x0, 439f48 <wcrtomb@plt+0x35328>
  439e20:	mov	x26, #0x0                   	// #0
  439e24:	str	x26, [sp, #128]
  439e28:	add	x26, x26, #0x1
  439e2c:	ldr	x0, [x5, x26, lsl #3]
  439e30:	cbnz	x0, 439e24 <wcrtomb@plt+0x35204>
  439e34:	ldr	x0, [sp, #128]
  439e38:	add	x2, x2, #0x2
  439e3c:	mov	x1, #0x8                   	// #8
  439e40:	str	x5, [sp, #136]
  439e44:	add	x25, x2, x0
  439e48:	mov	x27, #0x0                   	// #0
  439e4c:	mov	x0, x25
  439e50:	bl	4044c0 <calloc@plt>
  439e54:	mov	x28, x0
  439e58:	ldr	x5, [sp, #136]
  439e5c:	cbz	x0, 439f04 <wcrtomb@plt+0x352e4>
  439e60:	ldr	x0, [x5, x27, lsl #3]
  439e64:	str	x5, [sp, #136]
  439e68:	bl	404580 <strdup@plt>
  439e6c:	str	x0, [x28, x27, lsl #3]
  439e70:	ldp	x1, x5, [sp, #128]
  439e74:	add	x4, x27, #0x1
  439e78:	cmp	x27, x1
  439e7c:	cbz	x0, 439f68 <wcrtomb@plt+0x35348>
  439e80:	mov	x27, x4
  439e84:	b.ne	439e60 <wcrtomb@plt+0x35240>  // b.any
  439e88:	str	xzr, [x28, x4, lsl #3]
  439e8c:	stp	x28, x28, [x20, #112]
  439e90:	stp	x26, x25, [x20, #128]
  439e94:	b	439cb8 <wcrtomb@plt+0x35098>
  439e98:	ldr	x1, [x3, #56]
  439e9c:	b	439bd4 <wcrtomb@plt+0x34fb4>
  439ea0:	mov	x1, #0x8                   	// #8
  439ea4:	mov	x0, #0x10                  	// #16
  439ea8:	bl	4044c0 <calloc@plt>
  439eac:	cbz	x0, 439f04 <wcrtomb@plt+0x352e4>
  439eb0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  439eb4:	dup	v0.2d, x0
  439eb8:	orr	w28, w28, #0x80000
  439ebc:	str	w28, [x20, #32]
  439ec0:	ldr	q1, [x1, #2976]
  439ec4:	stp	q0, q1, [x20, #112]
  439ec8:	b	439cb8 <wcrtomb@plt+0x35098>
  439ecc:	ldr	x1, [x3, #48]
  439ed0:	b	439d3c <wcrtomb@plt+0x3511c>
  439ed4:	ldr	x1, [x3, #48]
  439ed8:	b	439b44 <wcrtomb@plt+0x34f24>
  439edc:	str	x1, [x20, #216]
  439ee0:	b	439dec <wcrtomb@plt+0x351cc>
  439ee4:	str	x1, [x20, #216]
  439ee8:	b	439698 <wcrtomb@plt+0x34a78>
  439eec:	str	x1, [x20, #216]
  439ef0:	b	439390 <wcrtomb@plt+0x34770>
  439ef4:	str	x1, [x20, #216]
  439ef8:	b	4397f8 <wcrtomb@plt+0x34bd8>
  439efc:	mov	x0, x25
  439f00:	bl	4047b0 <free@plt>
  439f04:	mov	x0, x20
  439f08:	bl	436f20 <wcrtomb@plt+0x32300>
  439f0c:	ldp	x27, x28, [sp, #80]
  439f10:	ldr	x26, [sp, #152]
  439f14:	b	43944c <wcrtomb@plt+0x3482c>
  439f18:	mov	x0, x20
  439f1c:	bl	436f20 <wcrtomb@plt+0x32300>
  439f20:	cbz	w0, 439734 <wcrtomb@plt+0x34b14>
  439f24:	mov	w26, #0x1                   	// #1
  439f28:	b	4398bc <wcrtomb@plt+0x34c9c>
  439f2c:	mov	x0, x20
  439f30:	bl	436f20 <wcrtomb@plt+0x32300>
  439f34:	cbz	w0, 4397cc <wcrtomb@plt+0x34bac>
  439f38:	ldr	x0, [sp, #152]
  439f3c:	mov	w26, #0x1                   	// #1
  439f40:	bl	4047b0 <free@plt>
  439f44:	b	4394d0 <wcrtomb@plt+0x348b0>
  439f48:	mov	x0, x25
  439f4c:	mov	x1, #0x8                   	// #8
  439f50:	bl	4044c0 <calloc@plt>
  439f54:	mov	x28, x0
  439f58:	cbz	x0, 439f04 <wcrtomb@plt+0x352e4>
  439f5c:	mov	x26, #0x0                   	// #0
  439f60:	mov	x4, #0x0                   	// #0
  439f64:	b	439e88 <wcrtomb@plt+0x35268>
  439f68:	sub	x19, x28, #0x8
  439f6c:	b	439f74 <wcrtomb@plt+0x35354>
  439f70:	bl	4047b0 <free@plt>
  439f74:	cmp	x27, #0x1
  439f78:	ldr	x0, [x19, x27, lsl #3]
  439f7c:	sub	x27, x27, #0x1
  439f80:	b.hi	439f70 <wcrtomb@plt+0x35350>  // b.pmore
  439f84:	bl	4047b0 <free@plt>
  439f88:	mov	x0, x28
  439f8c:	bl	4047b0 <free@plt>
  439f90:	b	439f04 <wcrtomb@plt+0x352e4>
  439f94:	mov	x0, x20
  439f98:	bl	436f20 <wcrtomb@plt+0x32300>
  439f9c:	cbz	w0, 4395d0 <wcrtomb@plt+0x349b0>
  439fa0:	mov	w26, #0x1                   	// #1
  439fa4:	b	4398bc <wcrtomb@plt+0x34c9c>
  439fa8:	str	x1, [x20, #216]
  439fac:	b	4395fc <wcrtomb@plt+0x349dc>
  439fb0:	mov	x0, x20
  439fb4:	bl	436f20 <wcrtomb@plt+0x32300>
  439fb8:	cbz	w0, 439364 <wcrtomb@plt+0x34744>
  439fbc:	mov	w26, #0x1                   	// #1
  439fc0:	b	4398bc <wcrtomb@plt+0x34c9c>
  439fc4:	mov	x0, x20
  439fc8:	bl	436f20 <wcrtomb@plt+0x32300>
  439fcc:	cbz	w0, 43966c <wcrtomb@plt+0x34a4c>
  439fd0:	mov	w26, #0x1                   	// #1
  439fd4:	b	4398bc <wcrtomb@plt+0x34c9c>
  439fd8:	ldr	w0, [x20, #32]
  439fdc:	and	w0, w0, #0x800000
  439fe0:	b	43934c <wcrtomb@plt+0x3472c>
  439fe4:	nop
  439fe8:	stp	x29, x30, [sp, #-112]!
  439fec:	mov	x29, sp
  439ff0:	stp	x27, x28, [sp, #80]
  439ff4:	ldr	x27, [x0, #208]
  439ff8:	stp	x21, x22, [sp, #32]
  439ffc:	mov	x22, x0
  43a000:	cbz	x27, 43a040 <wcrtomb@plt+0x35420>
  43a004:	stp	x19, x20, [sp, #16]
  43a008:	stp	x23, x24, [sp, #48]
  43a00c:	mov	w23, #0x14                  	// #20
  43a010:	stp	x25, x26, [sp, #64]
  43a014:	nop
  43a018:	ldr	w0, [x27, #16]
  43a01c:	mov	x20, x27
  43a020:	mov	w1, #0x48                  	// #72
  43a024:	tst	w0, w1
  43a028:	ldr	x27, [x27, #8]
  43a02c:	b.eq	43a05c <wcrtomb@plt+0x3543c>  // b.none
  43a030:	cbnz	x27, 43a018 <wcrtomb@plt+0x353f8>
  43a034:	ldp	x19, x20, [sp, #16]
  43a038:	ldp	x23, x24, [sp, #48]
  43a03c:	ldp	x25, x26, [sp, #64]
  43a040:	mov	x0, x22
  43a044:	bl	436580 <wcrtomb@plt+0x31960>
  43a048:	mov	w0, #0x0                   	// #0
  43a04c:	ldp	x21, x22, [sp, #32]
  43a050:	ldp	x27, x28, [sp, #80]
  43a054:	ldp	x29, x30, [sp], #112
  43a058:	ret
  43a05c:	tbnz	w0, #0, 43a030 <wcrtomb@plt+0x35410>
  43a060:	ldr	x19, [x20, #24]
  43a064:	tbz	w0, #1, 43a1e0 <wcrtomb@plt+0x355c0>
  43a068:	mov	x0, x19
  43a06c:	bl	403ff0 <strlen@plt>
  43a070:	mov	x24, x0
  43a074:	stp	x19, x20, [sp, #96]
  43a078:	add	x25, x19, x24
  43a07c:	cmp	x25, x19
  43a080:	b.ls	43a030 <wcrtomb@plt+0x35410>  // b.plast
  43a084:	mov	x2, x20
  43a088:	mov	x26, x19
  43a08c:	mov	x21, #0x0                   	// #0
  43a090:	ldrb	w0, [x19]
  43a094:	cmp	w0, #0x5c
  43a098:	b.eq	43a1d8 <wcrtomb@plt+0x355b8>  // b.none
  43a09c:	cmp	w0, #0x24
  43a0a0:	b.eq	43a134 <wcrtomb@plt+0x35514>  // b.none
  43a0a4:	add	x19, x19, #0x1
  43a0a8:	str	x19, [sp, #96]
  43a0ac:	cmp	x25, x19
  43a0b0:	b.hi	43a090 <wcrtomb@plt+0x35470>  // b.pmore
  43a0b4:	cmp	x26, x19
  43a0b8:	b.cs	43a0fc <wcrtomb@plt+0x354dc>  // b.hs, b.nlast
  43a0bc:	sub	x4, x19, x26
  43a0c0:	cmp	x20, x2
  43a0c4:	b.eq	43a214 <wcrtomb@plt+0x355f4>  // b.none
  43a0c8:	ldr	w0, [x2, #16]
  43a0cc:	orr	w0, w0, #0x10
  43a0d0:	str	w0, [x2, #16]
  43a0d4:	cbz	x4, 43a104 <wcrtomb@plt+0x354e4>
  43a0d8:	ldr	w5, [x20, #16]
  43a0dc:	mov	x3, x21
  43a0e0:	mov	x2, x20
  43a0e4:	add	x1, sp, #0x68
  43a0e8:	mov	x0, x22
  43a0ec:	and	w5, w5, w23
  43a0f0:	bl	437e88 <wcrtomb@plt+0x33268>
  43a0f4:	cbnz	w0, 43a234 <wcrtomb@plt+0x35614>
  43a0f8:	ldr	x2, [sp, #104]
  43a0fc:	cmp	x2, x20
  43a100:	b.eq	43a030 <wcrtomb@plt+0x35410>  // b.none
  43a104:	ldp	x0, x1, [x20]
  43a108:	cbz	x0, 43a200 <wcrtomb@plt+0x355e0>
  43a10c:	str	x1, [x0, #8]
  43a110:	ldr	x1, [x20, #8]
  43a114:	cbz	x1, 43a220 <wcrtomb@plt+0x35600>
  43a118:	str	x0, [x1]
  43a11c:	ldr	w0, [x20, #16]
  43a120:	tbnz	w0, #1, 43a1f4 <wcrtomb@plt+0x355d4>
  43a124:	mov	x0, x20
  43a128:	bl	4047b0 <free@plt>
  43a12c:	cbnz	x27, 43a018 <wcrtomb@plt+0x353f8>
  43a130:	b	43a034 <wcrtomb@plt+0x35414>
  43a134:	ldrb	w1, [x19, #1]
  43a138:	sub	w0, w1, #0x61
  43a13c:	cmp	w1, #0x5f
  43a140:	and	w0, w0, #0xff
  43a144:	sub	w1, w1, #0x41
  43a148:	ccmp	w0, #0x1a, #0x0, ne  // ne = any
  43a14c:	ccmp	w1, #0x19, #0x0, hi  // hi = pmore
  43a150:	b.hi	43a0a4 <wcrtomb@plt+0x35484>  // b.pmore
  43a154:	cmp	x2, x20
  43a158:	sub	x28, x19, x26
  43a15c:	b.eq	43a16c <wcrtomb@plt+0x3554c>  // b.none
  43a160:	ldr	w0, [x2, #16]
  43a164:	orr	w0, w0, #0x10
  43a168:	str	w0, [x2, #16]
  43a16c:	cbz	x28, 43a194 <wcrtomb@plt+0x35574>
  43a170:	mov	x4, x28
  43a174:	mov	x3, x21
  43a178:	mov	x2, x20
  43a17c:	add	x1, sp, #0x68
  43a180:	mov	x0, x22
  43a184:	mov	w5, #0x10                  	// #16
  43a188:	bl	437e88 <wcrtomb@plt+0x33268>
  43a18c:	cbnz	w0, 43a234 <wcrtomb@plt+0x35614>
  43a190:	ldr	x19, [sp, #96]
  43a194:	add	x1, x19, #0x1
  43a198:	ldr	w5, [x20, #16]
  43a19c:	sub	x2, x24, x28
  43a1a0:	add	x4, sp, #0x60
  43a1a4:	add	x3, sp, #0x68
  43a1a8:	mov	x0, x22
  43a1ac:	and	w5, w5, w23
  43a1b0:	str	x1, [sp, #96]
  43a1b4:	bl	439208 <wcrtomb@plt+0x345e8>
  43a1b8:	cbnz	w0, 43a234 <wcrtomb@plt+0x35614>
  43a1bc:	ldp	x0, x2, [sp, #96]
  43a1c0:	add	x21, x21, #0x1
  43a1c4:	sub	x1, x0, x26
  43a1c8:	add	x26, x0, #0x1
  43a1cc:	add	x21, x1, x21
  43a1d0:	mov	x19, x26
  43a1d4:	b	43a0a8 <wcrtomb@plt+0x35488>
  43a1d8:	add	x19, x19, #0x2
  43a1dc:	b	43a0a8 <wcrtomb@plt+0x35488>
  43a1e0:	ldr	x24, [x20, #32]
  43a1e4:	ldr	x1, [x22, #168]
  43a1e8:	sub	x24, x24, x19
  43a1ec:	add	x19, x1, x19
  43a1f0:	b	43a074 <wcrtomb@plt+0x35454>
  43a1f4:	ldr	x0, [x20, #24]
  43a1f8:	bl	4047b0 <free@plt>
  43a1fc:	b	43a124 <wcrtomb@plt+0x35504>
  43a200:	str	x1, [x22, #208]
  43a204:	ldr	x1, [x20, #8]
  43a208:	cbnz	x1, 43a118 <wcrtomb@plt+0x354f8>
  43a20c:	str	x0, [x22, #216]
  43a210:	b	43a11c <wcrtomb@plt+0x354fc>
  43a214:	cbnz	x4, 43a0d8 <wcrtomb@plt+0x354b8>
  43a218:	cbnz	x27, 43a018 <wcrtomb@plt+0x353f8>
  43a21c:	b	43a034 <wcrtomb@plt+0x35414>
  43a220:	ldr	w1, [x0, #16]
  43a224:	and	w1, w1, #0xffffffef
  43a228:	str	w1, [x0, #16]
  43a22c:	str	x0, [x22, #216]
  43a230:	b	43a11c <wcrtomb@plt+0x354fc>
  43a234:	mov	w0, #0x1                   	// #1
  43a238:	ldp	x19, x20, [sp, #16]
  43a23c:	ldp	x21, x22, [sp, #32]
  43a240:	ldp	x23, x24, [sp, #48]
  43a244:	ldp	x25, x26, [sp, #64]
  43a248:	ldp	x27, x28, [sp, #80]
  43a24c:	ldp	x29, x30, [sp], #112
  43a250:	ret
  43a254:	nop
  43a258:	stp	x29, x30, [sp, #-320]!
  43a25c:	mov	x8, x4
  43a260:	sub	x2, x2, #0x1
  43a264:	mov	x29, sp
  43a268:	stp	x19, x20, [sp, #16]
  43a26c:	add	x20, x1, #0x1
  43a270:	mov	x19, x0
  43a274:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43a278:	mov	x0, x20
  43a27c:	add	x4, x4, #0x9a8
  43a280:	mov	x1, #0x0                   	// #0
  43a284:	stp	x21, x22, [sp, #32]
  43a288:	mov	x22, x3
  43a28c:	mov	w21, w5
  43a290:	add	x3, sp, #0x40
  43a294:	bl	436388 <wcrtomb@plt+0x31768>
  43a298:	cbnz	w0, 43a3b0 <wcrtomb@plt+0x35790>
  43a29c:	ldr	x2, [sp, #64]
  43a2a0:	ldr	w0, [x19, #36]
  43a2a4:	add	x1, x20, x2
  43a2a8:	str	x1, [x8]
  43a2ac:	tbnz	w0, #3, 43a35c <wcrtomb@plt+0x3573c>
  43a2b0:	ldp	x4, x5, [x19, #152]
  43a2b4:	mov	x1, x20
  43a2b8:	add	x0, sp, #0x48
  43a2bc:	mov	x3, #0x0                   	// #0
  43a2c0:	blr	x5
  43a2c4:	mov	w20, w0
  43a2c8:	cmp	w20, #0x2
  43a2cc:	b.eq	43a508 <wcrtomb@plt+0x358e8>  // b.none
  43a2d0:	cbnz	w20, 43a4b8 <wcrtomb@plt+0x35898>
  43a2d4:	stp	x23, x24, [sp, #48]
  43a2d8:	ldr	x23, [sp, #72]
  43a2dc:	cbz	x23, 43a598 <wcrtomb@plt+0x35978>
  43a2e0:	tbnz	w21, #2, 43a41c <wcrtomb@plt+0x357fc>
  43a2e4:	ldrb	w0, [x23]
  43a2e8:	cbz	w0, 43a518 <wcrtomb@plt+0x358f8>
  43a2ec:	mov	x0, x23
  43a2f0:	bl	403ff0 <strlen@plt>
  43a2f4:	ldr	x1, [x19, #32]
  43a2f8:	mov	w3, w0
  43a2fc:	mov	w6, #0x1744                	// #5956
  43a300:	add	x24, sp, #0x50
  43a304:	and	x0, x1, #0xfffffff000
  43a308:	mov	x2, x23
  43a30c:	ands	x0, x0, #0xffffff8000001fff
  43a310:	mov	x1, x24
  43a314:	mov	x0, x19
  43a318:	mov	w4, #0x744                 	// #1860
  43a31c:	mov	w5, #0x0                   	// #0
  43a320:	csel	w4, w6, w4, ne  // ne = any
  43a324:	bl	438ce8 <wcrtomb@plt+0x340c8>
  43a328:	mov	w20, w0
  43a32c:	ldr	x0, [sp, #72]
  43a330:	bl	4047b0 <free@plt>
  43a334:	cbnz	w20, 43a468 <wcrtomb@plt+0x35848>
  43a338:	ldr	x2, [x19, #208]
  43a33c:	ldr	x1, [sp, #288]
  43a340:	mov	x0, x1
  43a344:	cbz	x2, 43a5d4 <wcrtomb@plt+0x359b4>
  43a348:	cbz	x0, 43a68c <wcrtomb@plt+0x35a6c>
  43a34c:	ldr	x2, [x0, #8]
  43a350:	cbz	x2, 43a68c <wcrtomb@plt+0x35a6c>
  43a354:	mov	x0, x2
  43a358:	b	43a348 <wcrtomb@plt+0x35728>
  43a35c:	stp	x23, x24, [sp, #48]
  43a360:	add	x24, sp, #0x50
  43a364:	mov	w3, w2
  43a368:	mov	x1, x24
  43a36c:	mov	x2, x20
  43a370:	mov	x0, x19
  43a374:	mov	w5, #0x1                   	// #1
  43a378:	mov	w4, #0x700                 	// #1792
  43a37c:	bl	438ce8 <wcrtomb@plt+0x340c8>
  43a380:	cbnz	w0, 43a468 <wcrtomb@plt+0x35848>
  43a384:	ldp	x4, x5, [x19, #152]
  43a388:	mov	x1, x20
  43a38c:	ldr	x2, [sp, #64]
  43a390:	add	x0, sp, #0x48
  43a394:	ldr	x3, [sp, #88]
  43a398:	blr	x5
  43a39c:	mov	w20, w0
  43a3a0:	mov	x0, x24
  43a3a4:	bl	436e10 <wcrtomb@plt+0x321f0>
  43a3a8:	ldp	x23, x24, [sp, #48]
  43a3ac:	b	43a2c8 <wcrtomb@plt+0x356a8>
  43a3b0:	ldr	w0, [x19, #32]
  43a3b4:	mov	w1, #0x7                   	// #7
  43a3b8:	str	w1, [x19, #192]
  43a3bc:	tbnz	w0, #4, 43a3d8 <wcrtomb@plt+0x357b8>
  43a3c0:	mov	w20, #0x1                   	// #1
  43a3c4:	mov	w0, w20
  43a3c8:	ldp	x19, x20, [sp, #16]
  43a3cc:	ldp	x21, x22, [sp, #32]
  43a3d0:	ldp	x29, x30, [sp], #320
  43a3d4:	ret
  43a3d8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43a3dc:	add	x3, x0, #0x290
  43a3e0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43a3e4:	add	x1, x1, #0x8e0
  43a3e8:	ldr	w0, [x0, #656]
  43a3ec:	ldr	x2, [x19, #96]
  43a3f0:	cmp	w0, #0x7
  43a3f4:	b.gt	43a650 <wcrtomb@plt+0x35a30>
  43a3f8:	mov	w20, #0x1                   	// #1
  43a3fc:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43a400:	add	x0, x0, #0x828
  43a404:	blr	x2
  43a408:	mov	w0, w20
  43a40c:	ldp	x19, x20, [sp, #16]
  43a410:	ldp	x21, x22, [sp, #32]
  43a414:	ldp	x29, x30, [sp], #320
  43a418:	ret
  43a41c:	mov	x1, #0x28                  	// #40
  43a420:	mov	x0, #0x1                   	// #1
  43a424:	bl	4044c0 <calloc@plt>
  43a428:	mov	x24, x0
  43a42c:	cbz	x0, 43a6ec <wcrtomb@plt+0x35acc>
  43a430:	ldr	x1, [x19, #208]
  43a434:	mov	x0, x24
  43a438:	cbz	x1, 43a5fc <wcrtomb@plt+0x359dc>
  43a43c:	mov	x1, x0
  43a440:	ldr	x0, [x0, #8]
  43a444:	cbnz	x0, 43a43c <wcrtomb@plt+0x3581c>
  43a448:	ldr	x0, [x22]
  43a44c:	ldr	x2, [x0, #8]
  43a450:	cbz	x2, 43a6bc <wcrtomb@plt+0x35a9c>
  43a454:	str	x1, [x2]
  43a458:	str	x2, [x1, #8]
  43a45c:	str	x0, [x24]
  43a460:	str	x24, [x0, #8]
  43a464:	b	43a608 <wcrtomb@plt+0x359e8>
  43a468:	ldr	w0, [x19, #192]
  43a46c:	cmp	w0, #0x9
  43a470:	b.eq	43a644 <wcrtomb@plt+0x35a24>  // b.none
  43a474:	ldr	w0, [sp, #272]
  43a478:	str	w0, [x19, #192]
  43a47c:	cmp	w0, #0x9
  43a480:	b.ne	43a494 <wcrtomb@plt+0x35874>  // b.any
  43a484:	str	wzr, [sp, #272]
  43a488:	ldr	x0, [sp, #280]
  43a48c:	str	xzr, [sp, #280]
  43a490:	str	x0, [x19, #200]
  43a494:	mov	x0, x24
  43a498:	mov	w20, #0x1                   	// #1
  43a49c:	bl	436e10 <wcrtomb@plt+0x321f0>
  43a4a0:	mov	w0, w20
  43a4a4:	ldp	x19, x20, [sp, #16]
  43a4a8:	ldp	x21, x22, [sp, #32]
  43a4ac:	ldp	x23, x24, [sp, #48]
  43a4b0:	ldp	x29, x30, [sp], #320
  43a4b4:	ret
  43a4b8:	cmp	w20, #0x9
  43a4bc:	b.eq	43a56c <wcrtomb@plt+0x3594c>  // b.none
  43a4c0:	ldr	w0, [x19, #32]
  43a4c4:	str	w20, [x19, #192]
  43a4c8:	tbz	w0, #4, 43a3c0 <wcrtomb@plt+0x357a0>
  43a4cc:	cmp	w20, #0x1
  43a4d0:	ldr	x21, [x19, #96]
  43a4d4:	b.eq	43a664 <wcrtomb@plt+0x35a44>  // b.none
  43a4d8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43a4dc:	add	x1, x0, #0x290
  43a4e0:	ldr	w0, [x0, #656]
  43a4e4:	cmp	w20, w0
  43a4e8:	b.lt	43a658 <wcrtomb@plt+0x35a38>  // b.tstop
  43a4ec:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43a4f0:	add	x1, x1, #0x8e0
  43a4f4:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43a4f8:	mov	w20, #0x1                   	// #1
  43a4fc:	add	x0, x0, #0x828
  43a500:	blr	x21
  43a504:	b	43a3c4 <wcrtomb@plt+0x357a4>
  43a508:	mov	x0, x19
  43a50c:	bl	436f20 <wcrtomb@plt+0x32300>
  43a510:	mov	w20, w0
  43a514:	b	43a3c4 <wcrtomb@plt+0x357a4>
  43a518:	mov	x0, x23
  43a51c:	bl	4047b0 <free@plt>
  43a520:	mov	x1, #0x28                  	// #40
  43a524:	mov	x0, #0x1                   	// #1
  43a528:	bl	4044c0 <calloc@plt>
  43a52c:	mov	x24, x0
  43a530:	cbz	x0, 43a6d8 <wcrtomb@plt+0x35ab8>
  43a534:	ldr	x1, [x19, #208]
  43a538:	mov	x0, x24
  43a53c:	cbz	x1, 43a624 <wcrtomb@plt+0x35a04>
  43a540:	mov	x1, x0
  43a544:	ldr	x0, [x0, #8]
  43a548:	cbnz	x0, 43a540 <wcrtomb@plt+0x35920>
  43a54c:	ldr	x0, [x22]
  43a550:	ldr	x2, [x0, #8]
  43a554:	cbz	x2, 43a6ac <wcrtomb@plt+0x35a8c>
  43a558:	str	x1, [x2]
  43a55c:	str	x2, [x1, #8]
  43a560:	str	x0, [x24]
  43a564:	str	x24, [x0, #8]
  43a568:	b	43a630 <wcrtomb@plt+0x35a10>
  43a56c:	ldr	w0, [x19, #192]
  43a570:	cmp	w0, #0x9
  43a574:	b.eq	43a5c8 <wcrtomb@plt+0x359a8>  // b.none
  43a578:	ldr	w0, [x19, #32]
  43a57c:	mov	w2, #0x9                   	// #9
  43a580:	ldr	x1, [sp, #72]
  43a584:	str	w2, [x19, #192]
  43a588:	str	x1, [x19, #200]
  43a58c:	tbz	w0, #4, 43a3c0 <wcrtomb@plt+0x357a0>
  43a590:	ldr	x21, [x19, #96]
  43a594:	b	43a4f4 <wcrtomb@plt+0x358d4>
  43a598:	mov	x1, #0x28                  	// #40
  43a59c:	mov	x0, #0x1                   	// #1
  43a5a0:	bl	4044c0 <calloc@plt>
  43a5a4:	mov	x24, x0
  43a5a8:	cbz	x0, 43a6c4 <wcrtomb@plt+0x35aa4>
  43a5ac:	ldr	x1, [x19, #208]
  43a5b0:	mov	x0, x24
  43a5b4:	cbz	x1, 43a624 <wcrtomb@plt+0x35a04>
  43a5b8:	mov	x1, x0
  43a5bc:	ldr	x0, [x0, #8]
  43a5c0:	cbnz	x0, 43a5b8 <wcrtomb@plt+0x35998>
  43a5c4:	b	43a54c <wcrtomb@plt+0x3592c>
  43a5c8:	ldr	x0, [x19, #200]
  43a5cc:	bl	4047b0 <free@plt>
  43a5d0:	b	43a578 <wcrtomb@plt+0x35958>
  43a5d4:	dup	v0.2d, x1
  43a5d8:	stp	xzr, xzr, [x1]
  43a5dc:	str	q0, [x19, #208]
  43a5e0:	ldr	x0, [sp, #296]
  43a5e4:	str	x0, [x22]
  43a5e8:	mov	x0, x24
  43a5ec:	stp	xzr, xzr, [sp, #288]
  43a5f0:	bl	436e10 <wcrtomb@plt+0x321f0>
  43a5f4:	ldp	x23, x24, [sp, #48]
  43a5f8:	b	43a3c4 <wcrtomb@plt+0x357a4>
  43a5fc:	dup	v0.2d, x24
  43a600:	stp	xzr, xzr, [x24]
  43a604:	str	q0, [x19, #208]
  43a608:	mov	w5, #0xa                   	// #10
  43a60c:	orr	w5, w21, w5
  43a610:	str	x24, [x22]
  43a614:	str	w5, [x24, #16]
  43a618:	str	x23, [x24, #24]
  43a61c:	ldp	x23, x24, [sp, #48]
  43a620:	b	43a3c4 <wcrtomb@plt+0x357a4>
  43a624:	dup	v0.2d, x24
  43a628:	stp	xzr, xzr, [x24]
  43a62c:	str	q0, [x19, #208]
  43a630:	mov	w0, #0x1                   	// #1
  43a634:	str	x24, [x22]
  43a638:	str	w0, [x24, #16]
  43a63c:	ldp	x23, x24, [sp, #48]
  43a640:	b	43a3c4 <wcrtomb@plt+0x357a4>
  43a644:	ldr	x0, [x19, #200]
  43a648:	bl	4047b0 <free@plt>
  43a64c:	b	43a474 <wcrtomb@plt+0x35854>
  43a650:	ldr	x1, [x3, #72]
  43a654:	b	43a3f8 <wcrtomb@plt+0x357d8>
  43a658:	add	x1, x1, #0x10
  43a65c:	ldr	x1, [x1, w20, sxtw #3]
  43a660:	b	43a4f4 <wcrtomb@plt+0x358d4>
  43a664:	mov	w2, #0x5                   	// #5
  43a668:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43a66c:	mov	x0, #0x0                   	// #0
  43a670:	add	x1, x1, #0x918
  43a674:	bl	4049c0 <dcgettext@plt>
  43a678:	ldr	x1, [x19, #168]
  43a67c:	ldr	x2, [x19, #184]
  43a680:	ldrb	w1, [x1, x2]
  43a684:	blr	x21
  43a688:	b	43a3c4 <wcrtomb@plt+0x357a4>
  43a68c:	ldr	x2, [x22]
  43a690:	ldr	x3, [x2, #8]
  43a694:	cbz	x3, 43a6b4 <wcrtomb@plt+0x35a94>
  43a698:	str	x0, [x3]
  43a69c:	str	x3, [x0, #8]
  43a6a0:	str	x2, [x1]
  43a6a4:	str	x1, [x2, #8]
  43a6a8:	b	43a5e0 <wcrtomb@plt+0x359c0>
  43a6ac:	str	x1, [x19, #216]
  43a6b0:	b	43a55c <wcrtomb@plt+0x3593c>
  43a6b4:	str	x0, [x19, #216]
  43a6b8:	b	43a69c <wcrtomb@plt+0x35a7c>
  43a6bc:	str	x1, [x19, #216]
  43a6c0:	b	43a458 <wcrtomb@plt+0x35838>
  43a6c4:	mov	x0, x19
  43a6c8:	bl	436f20 <wcrtomb@plt+0x32300>
  43a6cc:	cbz	w0, 43a5ac <wcrtomb@plt+0x3598c>
  43a6d0:	ldp	x23, x24, [sp, #48]
  43a6d4:	b	43a3c0 <wcrtomb@plt+0x357a0>
  43a6d8:	mov	x0, x19
  43a6dc:	bl	436f20 <wcrtomb@plt+0x32300>
  43a6e0:	cbz	w0, 43a534 <wcrtomb@plt+0x35914>
  43a6e4:	ldp	x23, x24, [sp, #48]
  43a6e8:	b	43a3c0 <wcrtomb@plt+0x357a0>
  43a6ec:	mov	x0, x19
  43a6f0:	bl	436f20 <wcrtomb@plt+0x32300>
  43a6f4:	cbnz	w0, 43a6d0 <wcrtomb@plt+0x35ab0>
  43a6f8:	ldr	x23, [sp, #72]
  43a6fc:	b	43a430 <wcrtomb@plt+0x35810>
  43a700:	stp	x29, x30, [sp, #-112]!
  43a704:	mov	x29, sp
  43a708:	stp	x21, x22, [sp, #32]
  43a70c:	ldr	x22, [x0, #208]
  43a710:	stp	x23, x24, [sp, #48]
  43a714:	mov	x23, x0
  43a718:	cbz	x22, 43a750 <wcrtomb@plt+0x35b30>
  43a71c:	mov	w24, #0x14                  	// #20
  43a720:	stp	x19, x20, [sp, #16]
  43a724:	stp	x25, x26, [sp, #64]
  43a728:	stp	x27, x28, [sp, #80]
  43a72c:	nop
  43a730:	ldr	w0, [x22, #16]
  43a734:	mov	x20, x22
  43a738:	ldr	x22, [x22, #8]
  43a73c:	tbz	w0, #3, 43a76c <wcrtomb@plt+0x35b4c>
  43a740:	cbnz	x22, 43a730 <wcrtomb@plt+0x35b10>
  43a744:	ldp	x19, x20, [sp, #16]
  43a748:	ldp	x25, x26, [sp, #64]
  43a74c:	ldp	x27, x28, [sp, #80]
  43a750:	mov	x0, x23
  43a754:	bl	436580 <wcrtomb@plt+0x31960>
  43a758:	mov	w0, #0x0                   	// #0
  43a75c:	ldp	x21, x22, [sp, #32]
  43a760:	ldp	x23, x24, [sp, #48]
  43a764:	ldp	x29, x30, [sp], #112
  43a768:	ret
  43a76c:	tbnz	w0, #0, 43a740 <wcrtomb@plt+0x35b20>
  43a770:	ldr	x19, [x20, #24]
  43a774:	tbz	w0, #1, 43a8dc <wcrtomb@plt+0x35cbc>
  43a778:	mov	x0, x19
  43a77c:	bl	403ff0 <strlen@plt>
  43a780:	mov	x25, x0
  43a784:	stp	x19, x20, [sp, #96]
  43a788:	add	x26, x19, x25
  43a78c:	cmp	x26, x19
  43a790:	b.ls	43a740 <wcrtomb@plt+0x35b20>  // b.plast
  43a794:	mov	x1, x20
  43a798:	mov	x28, x19
  43a79c:	mov	x21, #0x0                   	// #0
  43a7a0:	ldrb	w0, [x19]
  43a7a4:	cmp	w0, #0x5c
  43a7a8:	b.eq	43a8d4 <wcrtomb@plt+0x35cb4>  // b.none
  43a7ac:	cmp	w0, #0x24
  43a7b0:	b.eq	43a844 <wcrtomb@plt+0x35c24>  // b.none
  43a7b4:	add	x19, x19, #0x1
  43a7b8:	str	x19, [sp, #96]
  43a7bc:	cmp	x26, x19
  43a7c0:	b.hi	43a7a0 <wcrtomb@plt+0x35b80>  // b.pmore
  43a7c4:	cmp	x28, x19
  43a7c8:	b.cs	43a80c <wcrtomb@plt+0x35bec>  // b.hs, b.nlast
  43a7cc:	sub	x4, x19, x28
  43a7d0:	cmp	x20, x1
  43a7d4:	b.eq	43a910 <wcrtomb@plt+0x35cf0>  // b.none
  43a7d8:	ldr	w0, [x1, #16]
  43a7dc:	orr	w0, w0, #0x10
  43a7e0:	str	w0, [x1, #16]
  43a7e4:	cbz	x4, 43a814 <wcrtomb@plt+0x35bf4>
  43a7e8:	ldr	w5, [x20, #16]
  43a7ec:	mov	x3, x21
  43a7f0:	mov	x2, x20
  43a7f4:	add	x1, sp, #0x68
  43a7f8:	mov	x0, x23
  43a7fc:	and	w5, w5, w24
  43a800:	bl	437e88 <wcrtomb@plt+0x33268>
  43a804:	cbnz	w0, 43a930 <wcrtomb@plt+0x35d10>
  43a808:	ldr	x1, [sp, #104]
  43a80c:	cmp	x1, x20
  43a810:	b.eq	43a740 <wcrtomb@plt+0x35b20>  // b.none
  43a814:	ldp	x0, x1, [x20]
  43a818:	cbz	x0, 43a8fc <wcrtomb@plt+0x35cdc>
  43a81c:	str	x1, [x0, #8]
  43a820:	ldr	x1, [x20, #8]
  43a824:	cbz	x1, 43a91c <wcrtomb@plt+0x35cfc>
  43a828:	str	x0, [x1]
  43a82c:	ldr	w0, [x20, #16]
  43a830:	tbnz	w0, #1, 43a8f0 <wcrtomb@plt+0x35cd0>
  43a834:	mov	x0, x20
  43a838:	bl	4047b0 <free@plt>
  43a83c:	cbnz	x22, 43a730 <wcrtomb@plt+0x35b10>
  43a840:	b	43a744 <wcrtomb@plt+0x35b24>
  43a844:	ldrb	w0, [x19, #1]
  43a848:	cmp	w0, #0x28
  43a84c:	b.ne	43a7b4 <wcrtomb@plt+0x35b94>  // b.any
  43a850:	cmp	x20, x1
  43a854:	sub	x27, x19, x28
  43a858:	b.eq	43a868 <wcrtomb@plt+0x35c48>  // b.none
  43a85c:	ldr	w0, [x1, #16]
  43a860:	orr	w0, w0, #0x10
  43a864:	str	w0, [x1, #16]
  43a868:	cbz	x27, 43a890 <wcrtomb@plt+0x35c70>
  43a86c:	mov	x4, x27
  43a870:	mov	x3, x21
  43a874:	mov	x2, x20
  43a878:	add	x1, sp, #0x68
  43a87c:	mov	x0, x23
  43a880:	mov	w5, #0x10                  	// #16
  43a884:	bl	437e88 <wcrtomb@plt+0x33268>
  43a888:	cbnz	w0, 43a930 <wcrtomb@plt+0x35d10>
  43a88c:	ldr	x19, [sp, #96]
  43a890:	add	x1, x19, #0x1
  43a894:	ldr	w5, [x20, #16]
  43a898:	sub	x2, x25, x27
  43a89c:	add	x4, sp, #0x60
  43a8a0:	add	x3, sp, #0x68
  43a8a4:	mov	x0, x23
  43a8a8:	and	w5, w5, w24
  43a8ac:	str	x1, [sp, #96]
  43a8b0:	bl	43a258 <wcrtomb@plt+0x35638>
  43a8b4:	cbnz	w0, 43a930 <wcrtomb@plt+0x35d10>
  43a8b8:	ldp	x0, x1, [sp, #96]
  43a8bc:	add	x21, x21, #0x1
  43a8c0:	sub	x2, x0, x28
  43a8c4:	add	x28, x0, #0x1
  43a8c8:	add	x21, x2, x21
  43a8cc:	mov	x19, x28
  43a8d0:	b	43a7b8 <wcrtomb@plt+0x35b98>
  43a8d4:	add	x19, x19, #0x2
  43a8d8:	b	43a7b8 <wcrtomb@plt+0x35b98>
  43a8dc:	ldr	x25, [x20, #32]
  43a8e0:	ldr	x1, [x23, #168]
  43a8e4:	sub	x25, x25, x19
  43a8e8:	add	x19, x1, x19
  43a8ec:	b	43a784 <wcrtomb@plt+0x35b64>
  43a8f0:	ldr	x0, [x20, #24]
  43a8f4:	bl	4047b0 <free@plt>
  43a8f8:	b	43a834 <wcrtomb@plt+0x35c14>
  43a8fc:	str	x1, [x23, #208]
  43a900:	ldr	x1, [x20, #8]
  43a904:	cbnz	x1, 43a828 <wcrtomb@plt+0x35c08>
  43a908:	str	x0, [x23, #216]
  43a90c:	b	43a82c <wcrtomb@plt+0x35c0c>
  43a910:	cbnz	x4, 43a7e8 <wcrtomb@plt+0x35bc8>
  43a914:	cbnz	x22, 43a730 <wcrtomb@plt+0x35b10>
  43a918:	b	43a744 <wcrtomb@plt+0x35b24>
  43a91c:	ldr	w1, [x0, #16]
  43a920:	and	w1, w1, #0xffffffef
  43a924:	str	w1, [x0, #16]
  43a928:	str	x0, [x23, #216]
  43a92c:	b	43a82c <wcrtomb@plt+0x35c0c>
  43a930:	mov	w0, #0x1                   	// #1
  43a934:	ldp	x19, x20, [sp, #16]
  43a938:	ldp	x21, x22, [sp, #32]
  43a93c:	ldp	x23, x24, [sp, #48]
  43a940:	ldp	x25, x26, [sp, #64]
  43a944:	ldp	x27, x28, [sp, #80]
  43a948:	ldp	x29, x30, [sp], #112
  43a94c:	ret
  43a950:	stp	x29, x30, [sp, #-48]!
  43a954:	mov	x29, sp
  43a958:	stp	x19, x20, [sp, #16]
  43a95c:	mov	x19, x0
  43a960:	mov	x20, x1
  43a964:	ldp	x3, x0, [x0]
  43a968:	str	x21, [sp, #32]
  43a96c:	mov	x21, x2
  43a970:	add	x3, x3, #0x1
  43a974:	lsl	x1, x3, #3
  43a978:	bl	404530 <realloc@plt>
  43a97c:	cbz	x0, 43a9a8 <wcrtomb@plt+0x35d88>
  43a980:	ldr	x1, [x19]
  43a984:	str	x0, [x21]
  43a988:	str	x1, [x20]
  43a98c:	mov	w0, #0x0                   	// #0
  43a990:	stp	xzr, xzr, [x19]
  43a994:	str	xzr, [x19, #24]
  43a998:	ldp	x19, x20, [sp, #16]
  43a99c:	ldr	x21, [sp, #32]
  43a9a0:	ldp	x29, x30, [sp], #48
  43a9a4:	ret
  43a9a8:	mov	w0, #0xffffffff            	// #-1
  43a9ac:	b	43a998 <wcrtomb@plt+0x35d78>
  43a9b0:	ldr	w1, [x0, #192]
  43a9b4:	cmp	w1, #0x9
  43a9b8:	b.eq	43a9e8 <wcrtomb@plt+0x35dc8>  // b.none
  43a9bc:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43a9c0:	add	x3, x2, #0x290
  43a9c4:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43a9c8:	add	x0, x0, #0x8e0
  43a9cc:	ldr	w2, [x2, #656]
  43a9d0:	cmp	w1, w2
  43a9d4:	b.lt	43a9dc <wcrtomb@plt+0x35dbc>  // b.tstop
  43a9d8:	ret
  43a9dc:	add	x3, x3, #0x10
  43a9e0:	ldr	x0, [x3, w1, sxtw #3]
  43a9e4:	ret
  43a9e8:	ldr	x0, [x0, #200]
  43a9ec:	ret
  43a9f0:	stp	x29, x30, [sp, #-32]!
  43a9f4:	mov	x29, sp
  43a9f8:	stp	x19, x20, [sp, #16]
  43a9fc:	mov	x19, x0
  43aa00:	ldr	w0, [x0, #192]
  43aa04:	cmp	w0, #0x1
  43aa08:	ldr	x20, [x19, #96]
  43aa0c:	b.eq	43aa6c <wcrtomb@plt+0x35e4c>  // b.none
  43aa10:	cmp	w0, #0x9
  43aa14:	b.eq	43aa9c <wcrtomb@plt+0x35e7c>  // b.none
  43aa18:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43aa1c:	add	x3, x2, #0x290
  43aa20:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43aa24:	add	x1, x1, #0x8e0
  43aa28:	ldr	w2, [x2, #656]
  43aa2c:	cmp	w0, w2
  43aa30:	b.lt	43aa4c <wcrtomb@plt+0x35e2c>  // b.tstop
  43aa34:	mov	x16, x20
  43aa38:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43aa3c:	ldp	x19, x20, [sp, #16]
  43aa40:	add	x0, x0, #0x828
  43aa44:	ldp	x29, x30, [sp], #32
  43aa48:	br	x16
  43aa4c:	add	x3, x3, #0x10
  43aa50:	mov	x16, x20
  43aa54:	ldp	x19, x20, [sp, #16]
  43aa58:	ldp	x29, x30, [sp], #32
  43aa5c:	ldr	x1, [x3, w0, sxtw #3]
  43aa60:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43aa64:	add	x0, x0, #0x828
  43aa68:	br	x16
  43aa6c:	mov	w2, #0x5                   	// #5
  43aa70:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43aa74:	mov	x0, #0x0                   	// #0
  43aa78:	add	x1, x1, #0x918
  43aa7c:	bl	4049c0 <dcgettext@plt>
  43aa80:	ldr	x1, [x19, #168]
  43aa84:	mov	x16, x20
  43aa88:	ldr	x2, [x19, #184]
  43aa8c:	ldp	x19, x20, [sp, #16]
  43aa90:	ldp	x29, x30, [sp], #32
  43aa94:	ldrb	w1, [x1, x2]
  43aa98:	br	x16
  43aa9c:	mov	x16, x20
  43aaa0:	adrp	x0, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43aaa4:	ldr	x1, [x19, #200]
  43aaa8:	add	x0, x0, #0x828
  43aaac:	ldp	x19, x20, [sp, #16]
  43aab0:	ldp	x29, x30, [sp], #32
  43aab4:	br	x16
  43aab8:	mov	x12, #0x1030                	// #4144
  43aabc:	sub	sp, sp, x12
  43aac0:	cmn	w0, #0x64
  43aac4:	stp	x29, x30, [sp]
  43aac8:	mov	x29, sp
  43aacc:	stp	x19, x20, [sp, #16]
  43aad0:	mov	x20, x1
  43aad4:	stp	x21, x22, [sp, #32]
  43aad8:	mov	x22, x2
  43aadc:	stp	x23, x24, [sp, #48]
  43aae0:	mov	x23, x3
  43aae4:	mov	x24, x4
  43aae8:	stp	x25, x26, [sp, #64]
  43aaec:	mov	w25, w5
  43aaf0:	b.eq	43abd8 <wcrtomb@plt+0x35fb8>  // b.none
  43aaf4:	mov	w19, w0
  43aaf8:	ldrb	w0, [x1]
  43aafc:	cmp	w0, #0x2f
  43ab00:	b.eq	43abd8 <wcrtomb@plt+0x35fb8>  // b.none
  43ab04:	add	x26, sp, #0x70
  43ab08:	mov	x2, x1
  43ab0c:	mov	x0, x26
  43ab10:	mov	w1, w19
  43ab14:	stp	x27, x28, [sp, #80]
  43ab18:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43ab1c:	mov	x27, x0
  43ab20:	cbz	x0, 43ab70 <wcrtomb@plt+0x35f50>
  43ab24:	mov	x1, x22
  43ab28:	mov	w4, w25
  43ab2c:	mov	x3, x24
  43ab30:	mov	x2, x23
  43ab34:	bl	4043f0 <setxattr@plt>
  43ab38:	mov	w21, w0
  43ab3c:	bl	404ad0 <__errno_location@plt>
  43ab40:	ldr	w1, [x0]
  43ab44:	mov	x28, x0
  43ab48:	cmp	x27, x26
  43ab4c:	b.eq	43ab60 <wcrtomb@plt+0x35f40>  // b.none
  43ab50:	mov	x0, x27
  43ab54:	str	w1, [sp, #108]
  43ab58:	bl	4047b0 <free@plt>
  43ab5c:	ldr	w1, [sp, #108]
  43ab60:	cmn	w21, #0x1
  43ab64:	b.ne	43ac18 <wcrtomb@plt+0x35ff8>  // b.any
  43ab68:	cmp	w1, #0x14
  43ab6c:	b.ne	43ac20 <wcrtomb@plt+0x36000>  // b.any
  43ab70:	mov	x0, x26
  43ab74:	bl	44f320 <argp_parse@@Base+0xf540>
  43ab78:	cbnz	w0, 43accc <wcrtomb@plt+0x360ac>
  43ab7c:	tbnz	w19, #31, 43ab8c <wcrtomb@plt+0x35f6c>
  43ab80:	ldr	w0, [sp, #112]
  43ab84:	cmp	w0, w19
  43ab88:	b.eq	43aca0 <wcrtomb@plt+0x36080>  // b.none
  43ab8c:	mov	w0, w19
  43ab90:	bl	404060 <fchdir@plt>
  43ab94:	cbnz	w0, 43ac7c <wcrtomb@plt+0x3605c>
  43ab98:	mov	w4, w25
  43ab9c:	mov	x3, x24
  43aba0:	mov	x2, x23
  43aba4:	mov	x1, x22
  43aba8:	mov	x0, x20
  43abac:	bl	4043f0 <setxattr@plt>
  43abb0:	mov	w21, w0
  43abb4:	cmn	w0, #0x1
  43abb8:	b.eq	43ac4c <wcrtomb@plt+0x3602c>  // b.none
  43abbc:	mov	x0, x26
  43abc0:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43abc4:	cbnz	w0, 43acc0 <wcrtomb@plt+0x360a0>
  43abc8:	mov	x0, x26
  43abcc:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43abd0:	ldp	x27, x28, [sp, #80]
  43abd4:	b	43abf4 <wcrtomb@plt+0x35fd4>
  43abd8:	mov	w4, w25
  43abdc:	mov	x3, x24
  43abe0:	mov	x2, x23
  43abe4:	mov	x1, x22
  43abe8:	mov	x0, x20
  43abec:	bl	4043f0 <setxattr@plt>
  43abf0:	mov	w21, w0
  43abf4:	mov	w0, w21
  43abf8:	mov	x12, #0x1030                	// #4144
  43abfc:	ldp	x29, x30, [sp]
  43ac00:	ldp	x19, x20, [sp, #16]
  43ac04:	ldp	x21, x22, [sp, #32]
  43ac08:	ldp	x23, x24, [sp, #48]
  43ac0c:	ldp	x25, x26, [sp, #64]
  43ac10:	add	sp, sp, x12
  43ac14:	ret
  43ac18:	ldp	x27, x28, [sp, #80]
  43ac1c:	b	43abf4 <wcrtomb@plt+0x35fd4>
  43ac20:	sub	w0, w1, #0x1
  43ac24:	cmp	w0, #0x1
  43ac28:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
  43ac2c:	b.eq	43ab70 <wcrtomb@plt+0x35f50>  // b.none
  43ac30:	cmp	w1, #0x26
  43ac34:	mov	w0, #0x5f                  	// #95
  43ac38:	ccmp	w1, w0, #0x4, ne  // ne = any
  43ac3c:	b.eq	43ab70 <wcrtomb@plt+0x35f50>  // b.none
  43ac40:	str	w1, [x28]
  43ac44:	ldp	x27, x28, [sp, #80]
  43ac48:	b	43abf4 <wcrtomb@plt+0x35fd4>
  43ac4c:	bl	404ad0 <__errno_location@plt>
  43ac50:	mov	x19, x0
  43ac54:	mov	x0, x26
  43ac58:	ldr	w20, [x19]
  43ac5c:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43ac60:	cbnz	w0, 43acc0 <wcrtomb@plt+0x360a0>
  43ac64:	mov	x0, x26
  43ac68:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43ac6c:	cbz	w20, 43ac18 <wcrtomb@plt+0x35ff8>
  43ac70:	ldp	x27, x28, [sp, #80]
  43ac74:	str	w20, [x19]
  43ac78:	b	43abf4 <wcrtomb@plt+0x35fd4>
  43ac7c:	bl	404ad0 <__errno_location@plt>
  43ac80:	mov	x19, x0
  43ac84:	mov	w21, #0xffffffff            	// #-1
  43ac88:	mov	x0, x26
  43ac8c:	ldr	w20, [x19]
  43ac90:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43ac94:	ldp	x27, x28, [sp, #80]
  43ac98:	str	w20, [x19]
  43ac9c:	b	43abf4 <wcrtomb@plt+0x35fd4>
  43aca0:	mov	x0, x26
  43aca4:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43aca8:	mov	w21, #0xffffffff            	// #-1
  43acac:	bl	404ad0 <__errno_location@plt>
  43acb0:	mov	w1, #0x9                   	// #9
  43acb4:	ldp	x27, x28, [sp, #80]
  43acb8:	str	w1, [x0]
  43acbc:	b	43abf4 <wcrtomb@plt+0x35fd4>
  43acc0:	bl	404ad0 <__errno_location@plt>
  43acc4:	ldr	w0, [x0]
  43acc8:	bl	447548 <argp_parse@@Base+0x7768>
  43accc:	bl	404ad0 <__errno_location@plt>
  43acd0:	ldr	w0, [x0]
  43acd4:	bl	447508 <argp_parse@@Base+0x7728>
  43acd8:	mov	x12, #0x1030                	// #4144
  43acdc:	sub	sp, sp, x12
  43ace0:	cmn	w0, #0x64
  43ace4:	stp	x29, x30, [sp]
  43ace8:	mov	x29, sp
  43acec:	stp	x19, x20, [sp, #16]
  43acf0:	mov	x20, x1
  43acf4:	stp	x21, x22, [sp, #32]
  43acf8:	mov	x22, x2
  43acfc:	stp	x23, x24, [sp, #48]
  43ad00:	mov	x23, x3
  43ad04:	mov	x24, x4
  43ad08:	stp	x25, x26, [sp, #64]
  43ad0c:	mov	w25, w5
  43ad10:	b.eq	43adf8 <wcrtomb@plt+0x361d8>  // b.none
  43ad14:	mov	w19, w0
  43ad18:	ldrb	w0, [x1]
  43ad1c:	cmp	w0, #0x2f
  43ad20:	b.eq	43adf8 <wcrtomb@plt+0x361d8>  // b.none
  43ad24:	add	x26, sp, #0x70
  43ad28:	mov	x2, x1
  43ad2c:	mov	x0, x26
  43ad30:	mov	w1, w19
  43ad34:	stp	x27, x28, [sp, #80]
  43ad38:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43ad3c:	mov	x27, x0
  43ad40:	cbz	x0, 43ad90 <wcrtomb@plt+0x36170>
  43ad44:	mov	x1, x22
  43ad48:	mov	w4, w25
  43ad4c:	mov	x3, x24
  43ad50:	mov	x2, x23
  43ad54:	bl	4044d0 <lsetxattr@plt>
  43ad58:	mov	w21, w0
  43ad5c:	bl	404ad0 <__errno_location@plt>
  43ad60:	ldr	w1, [x0]
  43ad64:	mov	x28, x0
  43ad68:	cmp	x27, x26
  43ad6c:	b.eq	43ad80 <wcrtomb@plt+0x36160>  // b.none
  43ad70:	mov	x0, x27
  43ad74:	str	w1, [sp, #108]
  43ad78:	bl	4047b0 <free@plt>
  43ad7c:	ldr	w1, [sp, #108]
  43ad80:	cmn	w21, #0x1
  43ad84:	b.ne	43ae38 <wcrtomb@plt+0x36218>  // b.any
  43ad88:	cmp	w1, #0x14
  43ad8c:	b.ne	43ae40 <wcrtomb@plt+0x36220>  // b.any
  43ad90:	mov	x0, x26
  43ad94:	bl	44f320 <argp_parse@@Base+0xf540>
  43ad98:	cbnz	w0, 43aeec <wcrtomb@plt+0x362cc>
  43ad9c:	tbnz	w19, #31, 43adac <wcrtomb@plt+0x3618c>
  43ada0:	ldr	w0, [sp, #112]
  43ada4:	cmp	w0, w19
  43ada8:	b.eq	43aec0 <wcrtomb@plt+0x362a0>  // b.none
  43adac:	mov	w0, w19
  43adb0:	bl	404060 <fchdir@plt>
  43adb4:	cbnz	w0, 43ae9c <wcrtomb@plt+0x3627c>
  43adb8:	mov	w4, w25
  43adbc:	mov	x3, x24
  43adc0:	mov	x2, x23
  43adc4:	mov	x1, x22
  43adc8:	mov	x0, x20
  43adcc:	bl	4044d0 <lsetxattr@plt>
  43add0:	mov	w21, w0
  43add4:	cmn	w0, #0x1
  43add8:	b.eq	43ae6c <wcrtomb@plt+0x3624c>  // b.none
  43addc:	mov	x0, x26
  43ade0:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43ade4:	cbnz	w0, 43aee0 <wcrtomb@plt+0x362c0>
  43ade8:	mov	x0, x26
  43adec:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43adf0:	ldp	x27, x28, [sp, #80]
  43adf4:	b	43ae14 <wcrtomb@plt+0x361f4>
  43adf8:	mov	w4, w25
  43adfc:	mov	x3, x24
  43ae00:	mov	x2, x23
  43ae04:	mov	x1, x22
  43ae08:	mov	x0, x20
  43ae0c:	bl	4044d0 <lsetxattr@plt>
  43ae10:	mov	w21, w0
  43ae14:	mov	w0, w21
  43ae18:	mov	x12, #0x1030                	// #4144
  43ae1c:	ldp	x29, x30, [sp]
  43ae20:	ldp	x19, x20, [sp, #16]
  43ae24:	ldp	x21, x22, [sp, #32]
  43ae28:	ldp	x23, x24, [sp, #48]
  43ae2c:	ldp	x25, x26, [sp, #64]
  43ae30:	add	sp, sp, x12
  43ae34:	ret
  43ae38:	ldp	x27, x28, [sp, #80]
  43ae3c:	b	43ae14 <wcrtomb@plt+0x361f4>
  43ae40:	sub	w0, w1, #0x1
  43ae44:	cmp	w0, #0x1
  43ae48:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
  43ae4c:	b.eq	43ad90 <wcrtomb@plt+0x36170>  // b.none
  43ae50:	cmp	w1, #0x26
  43ae54:	mov	w0, #0x5f                  	// #95
  43ae58:	ccmp	w1, w0, #0x4, ne  // ne = any
  43ae5c:	b.eq	43ad90 <wcrtomb@plt+0x36170>  // b.none
  43ae60:	str	w1, [x28]
  43ae64:	ldp	x27, x28, [sp, #80]
  43ae68:	b	43ae14 <wcrtomb@plt+0x361f4>
  43ae6c:	bl	404ad0 <__errno_location@plt>
  43ae70:	mov	x19, x0
  43ae74:	mov	x0, x26
  43ae78:	ldr	w20, [x19]
  43ae7c:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43ae80:	cbnz	w0, 43aee0 <wcrtomb@plt+0x362c0>
  43ae84:	mov	x0, x26
  43ae88:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43ae8c:	cbz	w20, 43ae38 <wcrtomb@plt+0x36218>
  43ae90:	ldp	x27, x28, [sp, #80]
  43ae94:	str	w20, [x19]
  43ae98:	b	43ae14 <wcrtomb@plt+0x361f4>
  43ae9c:	bl	404ad0 <__errno_location@plt>
  43aea0:	mov	x19, x0
  43aea4:	mov	w21, #0xffffffff            	// #-1
  43aea8:	mov	x0, x26
  43aeac:	ldr	w20, [x19]
  43aeb0:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43aeb4:	ldp	x27, x28, [sp, #80]
  43aeb8:	str	w20, [x19]
  43aebc:	b	43ae14 <wcrtomb@plt+0x361f4>
  43aec0:	mov	x0, x26
  43aec4:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43aec8:	mov	w21, #0xffffffff            	// #-1
  43aecc:	bl	404ad0 <__errno_location@plt>
  43aed0:	mov	w1, #0x9                   	// #9
  43aed4:	ldp	x27, x28, [sp, #80]
  43aed8:	str	w1, [x0]
  43aedc:	b	43ae14 <wcrtomb@plt+0x361f4>
  43aee0:	bl	404ad0 <__errno_location@plt>
  43aee4:	ldr	w0, [x0]
  43aee8:	bl	447548 <argp_parse@@Base+0x7768>
  43aeec:	bl	404ad0 <__errno_location@plt>
  43aef0:	ldr	w0, [x0]
  43aef4:	bl	447508 <argp_parse@@Base+0x7728>
  43aef8:	mov	x12, #0x1020                	// #4128
  43aefc:	sub	sp, sp, x12
  43af00:	cmn	w0, #0x64
  43af04:	stp	x29, x30, [sp]
  43af08:	mov	x29, sp
  43af0c:	stp	x19, x20, [sp, #16]
  43af10:	mov	x20, x1
  43af14:	stp	x21, x22, [sp, #32]
  43af18:	mov	x22, x2
  43af1c:	stp	x23, x24, [sp, #48]
  43af20:	mov	x23, x3
  43af24:	mov	x24, x4
  43af28:	b.eq	43b044 <wcrtomb@plt+0x36424>  // b.none
  43af2c:	mov	w19, w0
  43af30:	ldrb	w0, [x1]
  43af34:	cmp	w0, #0x2f
  43af38:	b.eq	43b044 <wcrtomb@plt+0x36424>  // b.none
  43af3c:	stp	x25, x26, [sp, #64]
  43af40:	add	x26, sp, #0x60
  43af44:	mov	x2, x1
  43af48:	mov	x0, x26
  43af4c:	mov	w1, w19
  43af50:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43af54:	mov	x25, x0
  43af58:	cbz	x0, 43afc4 <wcrtomb@plt+0x363a4>
  43af5c:	mov	x3, x24
  43af60:	mov	x2, x23
  43af64:	mov	x1, x22
  43af68:	stp	x27, x28, [sp, #80]
  43af6c:	bl	4046c0 <getxattr@plt>
  43af70:	mov	x21, x0
  43af74:	bl	404ad0 <__errno_location@plt>
  43af78:	ldr	w28, [x0]
  43af7c:	mov	x27, x0
  43af80:	cmp	x25, x26
  43af84:	b.eq	43af90 <wcrtomb@plt+0x36370>  // b.none
  43af88:	mov	x0, x25
  43af8c:	bl	4047b0 <free@plt>
  43af90:	cmn	x21, #0x1
  43af94:	b.ne	43b07c <wcrtomb@plt+0x3645c>  // b.any
  43af98:	cmp	w28, #0x14
  43af9c:	b.eq	43afc0 <wcrtomb@plt+0x363a0>  // b.none
  43afa0:	sub	w0, w28, #0x1
  43afa4:	cmp	w0, #0x1
  43afa8:	ccmp	w28, #0xd, #0x4, hi  // hi = pmore
  43afac:	b.eq	43afc0 <wcrtomb@plt+0x363a0>  // b.none
  43afb0:	cmp	w28, #0x26
  43afb4:	mov	w0, #0x5f                  	// #95
  43afb8:	ccmp	w28, w0, #0x4, ne  // ne = any
  43afbc:	b.ne	43b130 <wcrtomb@plt+0x36510>  // b.any
  43afc0:	ldp	x27, x28, [sp, #80]
  43afc4:	mov	x0, x26
  43afc8:	bl	44f320 <argp_parse@@Base+0xf540>
  43afcc:	cbnz	w0, 43b178 <wcrtomb@plt+0x36558>
  43afd0:	tbnz	w19, #31, 43afe0 <wcrtomb@plt+0x363c0>
  43afd4:	ldr	w0, [sp, #96]
  43afd8:	cmp	w0, w19
  43afdc:	b.eq	43b140 <wcrtomb@plt+0x36520>  // b.none
  43afe0:	mov	w0, w19
  43afe4:	bl	404060 <fchdir@plt>
  43afe8:	cbnz	w0, 43b0f0 <wcrtomb@plt+0x364d0>
  43afec:	mov	x3, x24
  43aff0:	mov	x2, x23
  43aff4:	mov	x1, x22
  43aff8:	mov	x0, x20
  43affc:	bl	4046c0 <getxattr@plt>
  43b000:	mov	x21, x0
  43b004:	cmn	x0, #0x1
  43b008:	b.eq	43b0a4 <wcrtomb@plt+0x36484>  // b.none
  43b00c:	mov	x0, x26
  43b010:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b014:	cbnz	w0, 43b168 <wcrtomb@plt+0x36548>
  43b018:	mov	x0, x26
  43b01c:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b020:	mov	x0, x21
  43b024:	mov	x12, #0x1020                	// #4128
  43b028:	ldp	x29, x30, [sp]
  43b02c:	ldp	x19, x20, [sp, #16]
  43b030:	ldp	x21, x22, [sp, #32]
  43b034:	ldp	x23, x24, [sp, #48]
  43b038:	ldp	x25, x26, [sp, #64]
  43b03c:	add	sp, sp, x12
  43b040:	ret
  43b044:	mov	x3, x24
  43b048:	mov	x2, x23
  43b04c:	mov	x1, x22
  43b050:	mov	x0, x20
  43b054:	bl	4046c0 <getxattr@plt>
  43b058:	mov	x21, x0
  43b05c:	mov	x0, x21
  43b060:	mov	x12, #0x1020                	// #4128
  43b064:	ldp	x29, x30, [sp]
  43b068:	ldp	x19, x20, [sp, #16]
  43b06c:	ldp	x21, x22, [sp, #32]
  43b070:	ldp	x23, x24, [sp, #48]
  43b074:	add	sp, sp, x12
  43b078:	ret
  43b07c:	mov	x0, x21
  43b080:	mov	x12, #0x1020                	// #4128
  43b084:	ldp	x29, x30, [sp]
  43b088:	ldp	x19, x20, [sp, #16]
  43b08c:	ldp	x21, x22, [sp, #32]
  43b090:	ldp	x23, x24, [sp, #48]
  43b094:	ldp	x25, x26, [sp, #64]
  43b098:	ldp	x27, x28, [sp, #80]
  43b09c:	add	sp, sp, x12
  43b0a0:	ret
  43b0a4:	bl	404ad0 <__errno_location@plt>
  43b0a8:	mov	x19, x0
  43b0ac:	mov	x0, x26
  43b0b0:	ldr	w20, [x19]
  43b0b4:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b0b8:	cbnz	w0, 43b168 <wcrtomb@plt+0x36548>
  43b0bc:	mov	x0, x26
  43b0c0:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b0c4:	cbz	w20, 43b160 <wcrtomb@plt+0x36540>
  43b0c8:	ldp	x25, x26, [sp, #64]
  43b0cc:	str	w20, [x19]
  43b0d0:	mov	x0, x21
  43b0d4:	mov	x12, #0x1020                	// #4128
  43b0d8:	ldp	x29, x30, [sp]
  43b0dc:	ldp	x19, x20, [sp, #16]
  43b0e0:	ldp	x21, x22, [sp, #32]
  43b0e4:	ldp	x23, x24, [sp, #48]
  43b0e8:	add	sp, sp, x12
  43b0ec:	ret
  43b0f0:	bl	404ad0 <__errno_location@plt>
  43b0f4:	mov	x19, x0
  43b0f8:	mov	x0, x26
  43b0fc:	mov	x21, #0xffffffffffffffff    	// #-1
  43b100:	ldr	w20, [x19]
  43b104:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b108:	ldp	x25, x26, [sp, #64]
  43b10c:	str	w20, [x19]
  43b110:	mov	x0, x21
  43b114:	mov	x12, #0x1020                	// #4128
  43b118:	ldp	x29, x30, [sp]
  43b11c:	ldp	x19, x20, [sp, #16]
  43b120:	ldp	x21, x22, [sp, #32]
  43b124:	ldp	x23, x24, [sp, #48]
  43b128:	add	sp, sp, x12
  43b12c:	ret
  43b130:	ldp	x25, x26, [sp, #64]
  43b134:	str	w28, [x27]
  43b138:	ldp	x27, x28, [sp, #80]
  43b13c:	b	43b05c <wcrtomb@plt+0x3643c>
  43b140:	mov	x0, x26
  43b144:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b148:	mov	x21, #0xffffffffffffffff    	// #-1
  43b14c:	bl	404ad0 <__errno_location@plt>
  43b150:	mov	w1, #0x9                   	// #9
  43b154:	ldp	x25, x26, [sp, #64]
  43b158:	str	w1, [x0]
  43b15c:	b	43b05c <wcrtomb@plt+0x3643c>
  43b160:	ldp	x25, x26, [sp, #64]
  43b164:	b	43b05c <wcrtomb@plt+0x3643c>
  43b168:	stp	x27, x28, [sp, #80]
  43b16c:	bl	404ad0 <__errno_location@plt>
  43b170:	ldr	w0, [x0]
  43b174:	bl	447548 <argp_parse@@Base+0x7768>
  43b178:	stp	x27, x28, [sp, #80]
  43b17c:	bl	404ad0 <__errno_location@plt>
  43b180:	ldr	w0, [x0]
  43b184:	bl	447508 <argp_parse@@Base+0x7728>
  43b188:	mov	x12, #0x1020                	// #4128
  43b18c:	sub	sp, sp, x12
  43b190:	cmn	w0, #0x64
  43b194:	stp	x29, x30, [sp]
  43b198:	mov	x29, sp
  43b19c:	stp	x19, x20, [sp, #16]
  43b1a0:	mov	x20, x1
  43b1a4:	stp	x21, x22, [sp, #32]
  43b1a8:	mov	x22, x2
  43b1ac:	stp	x23, x24, [sp, #48]
  43b1b0:	mov	x23, x3
  43b1b4:	mov	x24, x4
  43b1b8:	b.eq	43b2d4 <wcrtomb@plt+0x366b4>  // b.none
  43b1bc:	mov	w19, w0
  43b1c0:	ldrb	w0, [x1]
  43b1c4:	cmp	w0, #0x2f
  43b1c8:	b.eq	43b2d4 <wcrtomb@plt+0x366b4>  // b.none
  43b1cc:	stp	x25, x26, [sp, #64]
  43b1d0:	add	x26, sp, #0x60
  43b1d4:	mov	x2, x1
  43b1d8:	mov	x0, x26
  43b1dc:	mov	w1, w19
  43b1e0:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43b1e4:	mov	x25, x0
  43b1e8:	cbz	x0, 43b254 <wcrtomb@plt+0x36634>
  43b1ec:	mov	x3, x24
  43b1f0:	mov	x2, x23
  43b1f4:	mov	x1, x22
  43b1f8:	stp	x27, x28, [sp, #80]
  43b1fc:	bl	404570 <lgetxattr@plt>
  43b200:	mov	x21, x0
  43b204:	bl	404ad0 <__errno_location@plt>
  43b208:	ldr	w28, [x0]
  43b20c:	mov	x27, x0
  43b210:	cmp	x25, x26
  43b214:	b.eq	43b220 <wcrtomb@plt+0x36600>  // b.none
  43b218:	mov	x0, x25
  43b21c:	bl	4047b0 <free@plt>
  43b220:	cmn	x21, #0x1
  43b224:	b.ne	43b30c <wcrtomb@plt+0x366ec>  // b.any
  43b228:	cmp	w28, #0x14
  43b22c:	b.eq	43b250 <wcrtomb@plt+0x36630>  // b.none
  43b230:	sub	w0, w28, #0x1
  43b234:	cmp	w0, #0x1
  43b238:	ccmp	w28, #0xd, #0x4, hi  // hi = pmore
  43b23c:	b.eq	43b250 <wcrtomb@plt+0x36630>  // b.none
  43b240:	cmp	w28, #0x26
  43b244:	mov	w0, #0x5f                  	// #95
  43b248:	ccmp	w28, w0, #0x4, ne  // ne = any
  43b24c:	b.ne	43b3c0 <wcrtomb@plt+0x367a0>  // b.any
  43b250:	ldp	x27, x28, [sp, #80]
  43b254:	mov	x0, x26
  43b258:	bl	44f320 <argp_parse@@Base+0xf540>
  43b25c:	cbnz	w0, 43b408 <wcrtomb@plt+0x367e8>
  43b260:	tbnz	w19, #31, 43b270 <wcrtomb@plt+0x36650>
  43b264:	ldr	w0, [sp, #96]
  43b268:	cmp	w0, w19
  43b26c:	b.eq	43b3d0 <wcrtomb@plt+0x367b0>  // b.none
  43b270:	mov	w0, w19
  43b274:	bl	404060 <fchdir@plt>
  43b278:	cbnz	w0, 43b380 <wcrtomb@plt+0x36760>
  43b27c:	mov	x3, x24
  43b280:	mov	x2, x23
  43b284:	mov	x1, x22
  43b288:	mov	x0, x20
  43b28c:	bl	404570 <lgetxattr@plt>
  43b290:	mov	x21, x0
  43b294:	cmn	x0, #0x1
  43b298:	b.eq	43b334 <wcrtomb@plt+0x36714>  // b.none
  43b29c:	mov	x0, x26
  43b2a0:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b2a4:	cbnz	w0, 43b3f8 <wcrtomb@plt+0x367d8>
  43b2a8:	mov	x0, x26
  43b2ac:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b2b0:	mov	x0, x21
  43b2b4:	mov	x12, #0x1020                	// #4128
  43b2b8:	ldp	x29, x30, [sp]
  43b2bc:	ldp	x19, x20, [sp, #16]
  43b2c0:	ldp	x21, x22, [sp, #32]
  43b2c4:	ldp	x23, x24, [sp, #48]
  43b2c8:	ldp	x25, x26, [sp, #64]
  43b2cc:	add	sp, sp, x12
  43b2d0:	ret
  43b2d4:	mov	x3, x24
  43b2d8:	mov	x2, x23
  43b2dc:	mov	x1, x22
  43b2e0:	mov	x0, x20
  43b2e4:	bl	404570 <lgetxattr@plt>
  43b2e8:	mov	x21, x0
  43b2ec:	mov	x0, x21
  43b2f0:	mov	x12, #0x1020                	// #4128
  43b2f4:	ldp	x29, x30, [sp]
  43b2f8:	ldp	x19, x20, [sp, #16]
  43b2fc:	ldp	x21, x22, [sp, #32]
  43b300:	ldp	x23, x24, [sp, #48]
  43b304:	add	sp, sp, x12
  43b308:	ret
  43b30c:	mov	x0, x21
  43b310:	mov	x12, #0x1020                	// #4128
  43b314:	ldp	x29, x30, [sp]
  43b318:	ldp	x19, x20, [sp, #16]
  43b31c:	ldp	x21, x22, [sp, #32]
  43b320:	ldp	x23, x24, [sp, #48]
  43b324:	ldp	x25, x26, [sp, #64]
  43b328:	ldp	x27, x28, [sp, #80]
  43b32c:	add	sp, sp, x12
  43b330:	ret
  43b334:	bl	404ad0 <__errno_location@plt>
  43b338:	mov	x19, x0
  43b33c:	mov	x0, x26
  43b340:	ldr	w20, [x19]
  43b344:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b348:	cbnz	w0, 43b3f8 <wcrtomb@plt+0x367d8>
  43b34c:	mov	x0, x26
  43b350:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b354:	cbz	w20, 43b3f0 <wcrtomb@plt+0x367d0>
  43b358:	ldp	x25, x26, [sp, #64]
  43b35c:	str	w20, [x19]
  43b360:	mov	x0, x21
  43b364:	mov	x12, #0x1020                	// #4128
  43b368:	ldp	x29, x30, [sp]
  43b36c:	ldp	x19, x20, [sp, #16]
  43b370:	ldp	x21, x22, [sp, #32]
  43b374:	ldp	x23, x24, [sp, #48]
  43b378:	add	sp, sp, x12
  43b37c:	ret
  43b380:	bl	404ad0 <__errno_location@plt>
  43b384:	mov	x19, x0
  43b388:	mov	x0, x26
  43b38c:	mov	x21, #0xffffffffffffffff    	// #-1
  43b390:	ldr	w20, [x19]
  43b394:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b398:	ldp	x25, x26, [sp, #64]
  43b39c:	str	w20, [x19]
  43b3a0:	mov	x0, x21
  43b3a4:	mov	x12, #0x1020                	// #4128
  43b3a8:	ldp	x29, x30, [sp]
  43b3ac:	ldp	x19, x20, [sp, #16]
  43b3b0:	ldp	x21, x22, [sp, #32]
  43b3b4:	ldp	x23, x24, [sp, #48]
  43b3b8:	add	sp, sp, x12
  43b3bc:	ret
  43b3c0:	ldp	x25, x26, [sp, #64]
  43b3c4:	str	w28, [x27]
  43b3c8:	ldp	x27, x28, [sp, #80]
  43b3cc:	b	43b2ec <wcrtomb@plt+0x366cc>
  43b3d0:	mov	x0, x26
  43b3d4:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b3d8:	mov	x21, #0xffffffffffffffff    	// #-1
  43b3dc:	bl	404ad0 <__errno_location@plt>
  43b3e0:	mov	w1, #0x9                   	// #9
  43b3e4:	ldp	x25, x26, [sp, #64]
  43b3e8:	str	w1, [x0]
  43b3ec:	b	43b2ec <wcrtomb@plt+0x366cc>
  43b3f0:	ldp	x25, x26, [sp, #64]
  43b3f4:	b	43b2ec <wcrtomb@plt+0x366cc>
  43b3f8:	stp	x27, x28, [sp, #80]
  43b3fc:	bl	404ad0 <__errno_location@plt>
  43b400:	ldr	w0, [x0]
  43b404:	bl	447548 <argp_parse@@Base+0x7768>
  43b408:	stp	x27, x28, [sp, #80]
  43b40c:	bl	404ad0 <__errno_location@plt>
  43b410:	ldr	w0, [x0]
  43b414:	bl	447508 <argp_parse@@Base+0x7728>
  43b418:	mov	x12, #0x1020                	// #4128
  43b41c:	sub	sp, sp, x12
  43b420:	cmn	w0, #0x64
  43b424:	stp	x29, x30, [sp]
  43b428:	mov	x29, sp
  43b42c:	stp	x19, x20, [sp, #16]
  43b430:	mov	x20, x1
  43b434:	stp	x21, x22, [sp, #32]
  43b438:	mov	x22, x2
  43b43c:	stp	x23, x24, [sp, #48]
  43b440:	mov	x23, x3
  43b444:	b.eq	43b558 <wcrtomb@plt+0x36938>  // b.none
  43b448:	mov	w19, w0
  43b44c:	ldrb	w0, [x1]
  43b450:	cmp	w0, #0x2f
  43b454:	b.eq	43b558 <wcrtomb@plt+0x36938>  // b.none
  43b458:	stp	x25, x26, [sp, #64]
  43b45c:	add	x25, sp, #0x60
  43b460:	mov	x2, x1
  43b464:	mov	x0, x25
  43b468:	mov	w1, w19
  43b46c:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43b470:	mov	x24, x0
  43b474:	cbz	x0, 43b4dc <wcrtomb@plt+0x368bc>
  43b478:	mov	x2, x23
  43b47c:	mov	x1, x22
  43b480:	str	x27, [sp, #80]
  43b484:	bl	4044e0 <listxattr@plt>
  43b488:	mov	x21, x0
  43b48c:	bl	404ad0 <__errno_location@plt>
  43b490:	ldr	w27, [x0]
  43b494:	mov	x26, x0
  43b498:	cmp	x24, x25
  43b49c:	b.eq	43b4a8 <wcrtomb@plt+0x36888>  // b.none
  43b4a0:	mov	x0, x24
  43b4a4:	bl	4047b0 <free@plt>
  43b4a8:	cmn	x21, #0x1
  43b4ac:	b.ne	43b58c <wcrtomb@plt+0x3696c>  // b.any
  43b4b0:	cmp	w27, #0x14
  43b4b4:	b.eq	43b4d8 <wcrtomb@plt+0x368b8>  // b.none
  43b4b8:	sub	w0, w27, #0x1
  43b4bc:	cmp	w0, #0x1
  43b4c0:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  43b4c4:	b.eq	43b4d8 <wcrtomb@plt+0x368b8>  // b.none
  43b4c8:	cmp	w27, #0x26
  43b4cc:	mov	w0, #0x5f                  	// #95
  43b4d0:	ccmp	w27, w0, #0x4, ne  // ne = any
  43b4d4:	b.ne	43b640 <wcrtomb@plt+0x36a20>  // b.any
  43b4d8:	ldr	x27, [sp, #80]
  43b4dc:	mov	x0, x25
  43b4e0:	bl	44f320 <argp_parse@@Base+0xf540>
  43b4e4:	cbnz	w0, 43b688 <wcrtomb@plt+0x36a68>
  43b4e8:	tbnz	w19, #31, 43b4f8 <wcrtomb@plt+0x368d8>
  43b4ec:	ldr	w0, [sp, #96]
  43b4f0:	cmp	w0, w19
  43b4f4:	b.eq	43b650 <wcrtomb@plt+0x36a30>  // b.none
  43b4f8:	mov	w0, w19
  43b4fc:	bl	404060 <fchdir@plt>
  43b500:	cbnz	w0, 43b600 <wcrtomb@plt+0x369e0>
  43b504:	mov	x2, x23
  43b508:	mov	x1, x22
  43b50c:	mov	x0, x20
  43b510:	bl	4044e0 <listxattr@plt>
  43b514:	mov	x21, x0
  43b518:	cmn	x0, #0x1
  43b51c:	b.eq	43b5b4 <wcrtomb@plt+0x36994>  // b.none
  43b520:	mov	x0, x25
  43b524:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b528:	cbnz	w0, 43b678 <wcrtomb@plt+0x36a58>
  43b52c:	mov	x0, x25
  43b530:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b534:	mov	x0, x21
  43b538:	mov	x12, #0x1020                	// #4128
  43b53c:	ldp	x29, x30, [sp]
  43b540:	ldp	x19, x20, [sp, #16]
  43b544:	ldp	x21, x22, [sp, #32]
  43b548:	ldp	x23, x24, [sp, #48]
  43b54c:	ldp	x25, x26, [sp, #64]
  43b550:	add	sp, sp, x12
  43b554:	ret
  43b558:	mov	x2, x23
  43b55c:	mov	x1, x22
  43b560:	mov	x0, x20
  43b564:	bl	4044e0 <listxattr@plt>
  43b568:	mov	x21, x0
  43b56c:	mov	x0, x21
  43b570:	mov	x12, #0x1020                	// #4128
  43b574:	ldp	x29, x30, [sp]
  43b578:	ldp	x19, x20, [sp, #16]
  43b57c:	ldp	x21, x22, [sp, #32]
  43b580:	ldp	x23, x24, [sp, #48]
  43b584:	add	sp, sp, x12
  43b588:	ret
  43b58c:	mov	x0, x21
  43b590:	mov	x12, #0x1020                	// #4128
  43b594:	ldp	x29, x30, [sp]
  43b598:	ldp	x19, x20, [sp, #16]
  43b59c:	ldp	x21, x22, [sp, #32]
  43b5a0:	ldp	x23, x24, [sp, #48]
  43b5a4:	ldp	x25, x26, [sp, #64]
  43b5a8:	ldr	x27, [sp, #80]
  43b5ac:	add	sp, sp, x12
  43b5b0:	ret
  43b5b4:	bl	404ad0 <__errno_location@plt>
  43b5b8:	mov	x19, x0
  43b5bc:	mov	x0, x25
  43b5c0:	ldr	w20, [x19]
  43b5c4:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b5c8:	cbnz	w0, 43b678 <wcrtomb@plt+0x36a58>
  43b5cc:	mov	x0, x25
  43b5d0:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b5d4:	cbz	w20, 43b670 <wcrtomb@plt+0x36a50>
  43b5d8:	ldp	x25, x26, [sp, #64]
  43b5dc:	str	w20, [x19]
  43b5e0:	mov	x0, x21
  43b5e4:	mov	x12, #0x1020                	// #4128
  43b5e8:	ldp	x29, x30, [sp]
  43b5ec:	ldp	x19, x20, [sp, #16]
  43b5f0:	ldp	x21, x22, [sp, #32]
  43b5f4:	ldp	x23, x24, [sp, #48]
  43b5f8:	add	sp, sp, x12
  43b5fc:	ret
  43b600:	bl	404ad0 <__errno_location@plt>
  43b604:	mov	x19, x0
  43b608:	mov	x0, x25
  43b60c:	mov	x21, #0xffffffffffffffff    	// #-1
  43b610:	ldr	w20, [x19]
  43b614:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b618:	ldp	x25, x26, [sp, #64]
  43b61c:	str	w20, [x19]
  43b620:	mov	x0, x21
  43b624:	mov	x12, #0x1020                	// #4128
  43b628:	ldp	x29, x30, [sp]
  43b62c:	ldp	x19, x20, [sp, #16]
  43b630:	ldp	x21, x22, [sp, #32]
  43b634:	ldp	x23, x24, [sp, #48]
  43b638:	add	sp, sp, x12
  43b63c:	ret
  43b640:	str	w27, [x26]
  43b644:	ldp	x25, x26, [sp, #64]
  43b648:	ldr	x27, [sp, #80]
  43b64c:	b	43b56c <wcrtomb@plt+0x3694c>
  43b650:	mov	x0, x25
  43b654:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b658:	mov	x21, #0xffffffffffffffff    	// #-1
  43b65c:	bl	404ad0 <__errno_location@plt>
  43b660:	mov	w1, #0x9                   	// #9
  43b664:	ldp	x25, x26, [sp, #64]
  43b668:	str	w1, [x0]
  43b66c:	b	43b56c <wcrtomb@plt+0x3694c>
  43b670:	ldp	x25, x26, [sp, #64]
  43b674:	b	43b56c <wcrtomb@plt+0x3694c>
  43b678:	str	x27, [sp, #80]
  43b67c:	bl	404ad0 <__errno_location@plt>
  43b680:	ldr	w0, [x0]
  43b684:	bl	447548 <argp_parse@@Base+0x7768>
  43b688:	str	x27, [sp, #80]
  43b68c:	bl	404ad0 <__errno_location@plt>
  43b690:	ldr	w0, [x0]
  43b694:	bl	447508 <argp_parse@@Base+0x7728>
  43b698:	mov	x12, #0x1020                	// #4128
  43b69c:	sub	sp, sp, x12
  43b6a0:	cmn	w0, #0x64
  43b6a4:	stp	x29, x30, [sp]
  43b6a8:	mov	x29, sp
  43b6ac:	stp	x19, x20, [sp, #16]
  43b6b0:	mov	x20, x1
  43b6b4:	stp	x21, x22, [sp, #32]
  43b6b8:	mov	x22, x2
  43b6bc:	stp	x23, x24, [sp, #48]
  43b6c0:	mov	x23, x3
  43b6c4:	b.eq	43b7d8 <wcrtomb@plt+0x36bb8>  // b.none
  43b6c8:	mov	w19, w0
  43b6cc:	ldrb	w0, [x1]
  43b6d0:	cmp	w0, #0x2f
  43b6d4:	b.eq	43b7d8 <wcrtomb@plt+0x36bb8>  // b.none
  43b6d8:	stp	x25, x26, [sp, #64]
  43b6dc:	add	x25, sp, #0x60
  43b6e0:	mov	x2, x1
  43b6e4:	mov	x0, x25
  43b6e8:	mov	w1, w19
  43b6ec:	bl	451438 <_obstack_memory_used@@Base+0x28>
  43b6f0:	mov	x24, x0
  43b6f4:	cbz	x0, 43b75c <wcrtomb@plt+0x36b3c>
  43b6f8:	mov	x2, x23
  43b6fc:	mov	x1, x22
  43b700:	str	x27, [sp, #80]
  43b704:	bl	404a20 <llistxattr@plt>
  43b708:	mov	x21, x0
  43b70c:	bl	404ad0 <__errno_location@plt>
  43b710:	ldr	w27, [x0]
  43b714:	mov	x26, x0
  43b718:	cmp	x24, x25
  43b71c:	b.eq	43b728 <wcrtomb@plt+0x36b08>  // b.none
  43b720:	mov	x0, x24
  43b724:	bl	4047b0 <free@plt>
  43b728:	cmn	x21, #0x1
  43b72c:	b.ne	43b80c <wcrtomb@plt+0x36bec>  // b.any
  43b730:	cmp	w27, #0x14
  43b734:	b.eq	43b758 <wcrtomb@plt+0x36b38>  // b.none
  43b738:	sub	w0, w27, #0x1
  43b73c:	cmp	w0, #0x1
  43b740:	ccmp	w27, #0xd, #0x4, hi  // hi = pmore
  43b744:	b.eq	43b758 <wcrtomb@plt+0x36b38>  // b.none
  43b748:	cmp	w27, #0x26
  43b74c:	mov	w0, #0x5f                  	// #95
  43b750:	ccmp	w27, w0, #0x4, ne  // ne = any
  43b754:	b.ne	43b8c0 <wcrtomb@plt+0x36ca0>  // b.any
  43b758:	ldr	x27, [sp, #80]
  43b75c:	mov	x0, x25
  43b760:	bl	44f320 <argp_parse@@Base+0xf540>
  43b764:	cbnz	w0, 43b908 <wcrtomb@plt+0x36ce8>
  43b768:	tbnz	w19, #31, 43b778 <wcrtomb@plt+0x36b58>
  43b76c:	ldr	w0, [sp, #96]
  43b770:	cmp	w0, w19
  43b774:	b.eq	43b8d0 <wcrtomb@plt+0x36cb0>  // b.none
  43b778:	mov	w0, w19
  43b77c:	bl	404060 <fchdir@plt>
  43b780:	cbnz	w0, 43b880 <wcrtomb@plt+0x36c60>
  43b784:	mov	x2, x23
  43b788:	mov	x1, x22
  43b78c:	mov	x0, x20
  43b790:	bl	404a20 <llistxattr@plt>
  43b794:	mov	x21, x0
  43b798:	cmn	x0, #0x1
  43b79c:	b.eq	43b834 <wcrtomb@plt+0x36c14>  // b.none
  43b7a0:	mov	x0, x25
  43b7a4:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b7a8:	cbnz	w0, 43b8f8 <wcrtomb@plt+0x36cd8>
  43b7ac:	mov	x0, x25
  43b7b0:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b7b4:	mov	x0, x21
  43b7b8:	mov	x12, #0x1020                	// #4128
  43b7bc:	ldp	x29, x30, [sp]
  43b7c0:	ldp	x19, x20, [sp, #16]
  43b7c4:	ldp	x21, x22, [sp, #32]
  43b7c8:	ldp	x23, x24, [sp, #48]
  43b7cc:	ldp	x25, x26, [sp, #64]
  43b7d0:	add	sp, sp, x12
  43b7d4:	ret
  43b7d8:	mov	x2, x23
  43b7dc:	mov	x1, x22
  43b7e0:	mov	x0, x20
  43b7e4:	bl	404a20 <llistxattr@plt>
  43b7e8:	mov	x21, x0
  43b7ec:	mov	x0, x21
  43b7f0:	mov	x12, #0x1020                	// #4128
  43b7f4:	ldp	x29, x30, [sp]
  43b7f8:	ldp	x19, x20, [sp, #16]
  43b7fc:	ldp	x21, x22, [sp, #32]
  43b800:	ldp	x23, x24, [sp, #48]
  43b804:	add	sp, sp, x12
  43b808:	ret
  43b80c:	mov	x0, x21
  43b810:	mov	x12, #0x1020                	// #4128
  43b814:	ldp	x29, x30, [sp]
  43b818:	ldp	x19, x20, [sp, #16]
  43b81c:	ldp	x21, x22, [sp, #32]
  43b820:	ldp	x23, x24, [sp, #48]
  43b824:	ldp	x25, x26, [sp, #64]
  43b828:	ldr	x27, [sp, #80]
  43b82c:	add	sp, sp, x12
  43b830:	ret
  43b834:	bl	404ad0 <__errno_location@plt>
  43b838:	mov	x19, x0
  43b83c:	mov	x0, x25
  43b840:	ldr	w20, [x19]
  43b844:	bl	44f380 <argp_parse@@Base+0xf5a0>
  43b848:	cbnz	w0, 43b8f8 <wcrtomb@plt+0x36cd8>
  43b84c:	mov	x0, x25
  43b850:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b854:	cbz	w20, 43b8f0 <wcrtomb@plt+0x36cd0>
  43b858:	ldp	x25, x26, [sp, #64]
  43b85c:	str	w20, [x19]
  43b860:	mov	x0, x21
  43b864:	mov	x12, #0x1020                	// #4128
  43b868:	ldp	x29, x30, [sp]
  43b86c:	ldp	x19, x20, [sp, #16]
  43b870:	ldp	x21, x22, [sp, #32]
  43b874:	ldp	x23, x24, [sp, #48]
  43b878:	add	sp, sp, x12
  43b87c:	ret
  43b880:	bl	404ad0 <__errno_location@plt>
  43b884:	mov	x19, x0
  43b888:	mov	x0, x25
  43b88c:	mov	x21, #0xffffffffffffffff    	// #-1
  43b890:	ldr	w20, [x19]
  43b894:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b898:	ldp	x25, x26, [sp, #64]
  43b89c:	str	w20, [x19]
  43b8a0:	mov	x0, x21
  43b8a4:	mov	x12, #0x1020                	// #4128
  43b8a8:	ldp	x29, x30, [sp]
  43b8ac:	ldp	x19, x20, [sp, #16]
  43b8b0:	ldp	x21, x22, [sp, #32]
  43b8b4:	ldp	x23, x24, [sp, #48]
  43b8b8:	add	sp, sp, x12
  43b8bc:	ret
  43b8c0:	str	w27, [x26]
  43b8c4:	ldp	x25, x26, [sp, #64]
  43b8c8:	ldr	x27, [sp, #80]
  43b8cc:	b	43b7ec <wcrtomb@plt+0x36bcc>
  43b8d0:	mov	x0, x25
  43b8d4:	bl	44f398 <argp_parse@@Base+0xf5b8>
  43b8d8:	mov	x21, #0xffffffffffffffff    	// #-1
  43b8dc:	bl	404ad0 <__errno_location@plt>
  43b8e0:	mov	w1, #0x9                   	// #9
  43b8e4:	ldp	x25, x26, [sp, #64]
  43b8e8:	str	w1, [x0]
  43b8ec:	b	43b7ec <wcrtomb@plt+0x36bcc>
  43b8f0:	ldp	x25, x26, [sp, #64]
  43b8f4:	b	43b7ec <wcrtomb@plt+0x36bcc>
  43b8f8:	str	x27, [sp, #80]
  43b8fc:	bl	404ad0 <__errno_location@plt>
  43b900:	ldr	w0, [x0]
  43b904:	bl	447548 <argp_parse@@Base+0x7768>
  43b908:	str	x27, [sp, #80]
  43b90c:	bl	404ad0 <__errno_location@plt>
  43b910:	ldr	w0, [x0]
  43b914:	bl	447508 <argp_parse@@Base+0x7728>
  43b918:	stp	x29, x30, [sp, #-80]!
  43b91c:	cmp	x2, #0x401
  43b920:	mov	x29, sp
  43b924:	stp	x19, x20, [sp, #16]
  43b928:	mov	x19, #0x401                 	// #1025
  43b92c:	csinc	x19, x19, x2, cs  // cs = hs, nlast
  43b930:	stp	x21, x22, [sp, #32]
  43b934:	mov	x22, x1
  43b938:	stp	x23, x24, [sp, #48]
  43b93c:	mov	w23, w0
  43b940:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
  43b944:	str	x25, [sp, #64]
  43b948:	mov	x25, #0x7ffffffffffffffe    	// #9223372036854775806
  43b94c:	nop
  43b950:	mov	x0, x19
  43b954:	bl	404310 <malloc@plt>
  43b958:	mov	x3, x19
  43b95c:	mov	x20, x0
  43b960:	mov	x1, x22
  43b964:	mov	w0, w23
  43b968:	cbz	x20, 43b9b4 <wcrtomb@plt+0x36d94>
  43b96c:	mov	x2, x20
  43b970:	bl	404c10 <readlinkat@plt>
  43b974:	mov	x21, x0
  43b978:	tbnz	x0, #63, 43ba08 <wcrtomb@plt+0x36de8>
  43b97c:	mov	x0, x20
  43b980:	cmp	x19, x21
  43b984:	b.hi	43ba40 <wcrtomb@plt+0x36e20>  // b.pmore
  43b988:	bl	4047b0 <free@plt>
  43b98c:	cmp	x19, x24
  43b990:	b.hi	43b9d0 <wcrtomb@plt+0x36db0>  // b.pmore
  43b994:	lsl	x19, x19, #1
  43b998:	mov	x0, x19
  43b99c:	bl	404310 <malloc@plt>
  43b9a0:	mov	x3, x19
  43b9a4:	mov	x20, x0
  43b9a8:	mov	x1, x22
  43b9ac:	mov	w0, w23
  43b9b0:	cbnz	x20, 43b96c <wcrtomb@plt+0x36d4c>
  43b9b4:	mov	x0, x20
  43b9b8:	ldp	x19, x20, [sp, #16]
  43b9bc:	ldp	x21, x22, [sp, #32]
  43b9c0:	ldp	x23, x24, [sp, #48]
  43b9c4:	ldr	x25, [sp, #64]
  43b9c8:	ldp	x29, x30, [sp], #80
  43b9cc:	ret
  43b9d0:	cmp	x19, x25
  43b9d4:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  43b9d8:	b.ls	43b950 <wcrtomb@plt+0x36d30>  // b.plast
  43b9dc:	bl	404ad0 <__errno_location@plt>
  43b9e0:	mov	x20, #0x0                   	// #0
  43b9e4:	mov	w1, #0xc                   	// #12
  43b9e8:	str	w1, [x0]
  43b9ec:	mov	x0, x20
  43b9f0:	ldp	x19, x20, [sp, #16]
  43b9f4:	ldp	x21, x22, [sp, #32]
  43b9f8:	ldp	x23, x24, [sp, #48]
  43b9fc:	ldr	x25, [sp, #64]
  43ba00:	ldp	x29, x30, [sp], #80
  43ba04:	ret
  43ba08:	bl	404ad0 <__errno_location@plt>
  43ba0c:	ldr	w0, [x0]
  43ba10:	cmp	w0, #0x22
  43ba14:	b.eq	43b97c <wcrtomb@plt+0x36d5c>  // b.none
  43ba18:	mov	x0, x20
  43ba1c:	mov	x20, #0x0                   	// #0
  43ba20:	bl	4047b0 <free@plt>
  43ba24:	mov	x0, x20
  43ba28:	ldp	x19, x20, [sp, #16]
  43ba2c:	ldp	x21, x22, [sp, #32]
  43ba30:	ldp	x23, x24, [sp, #48]
  43ba34:	ldr	x25, [sp, #64]
  43ba38:	ldp	x29, x30, [sp], #80
  43ba3c:	ret
  43ba40:	strb	wzr, [x20, x21]
  43ba44:	mov	x0, x20
  43ba48:	ldp	x19, x20, [sp, #16]
  43ba4c:	ldp	x21, x22, [sp, #32]
  43ba50:	ldp	x23, x24, [sp, #48]
  43ba54:	ldr	x25, [sp, #64]
  43ba58:	ldp	x29, x30, [sp], #80
  43ba5c:	ret
  43ba60:	stp	x29, x30, [sp, #-16]!
  43ba64:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43ba68:	mov	x29, sp
  43ba6c:	ldr	w0, [x0, #1040]
  43ba70:	bl	404020 <exit@plt>
  43ba74:	nop
  43ba78:	stp	x29, x30, [sp, #-96]!
  43ba7c:	mov	x29, sp
  43ba80:	stp	x23, x24, [sp, #48]
  43ba84:	mov	x23, x1
  43ba88:	stp	x21, x22, [sp, #32]
  43ba8c:	mov	x22, x3
  43ba90:	stp	x25, x26, [sp, #64]
  43ba94:	mov	x26, x2
  43ba98:	mov	x25, x0
  43ba9c:	stp	x27, x28, [sp, #80]
  43baa0:	bl	403ff0 <strlen@plt>
  43baa4:	ldr	x28, [x23]
  43baa8:	cbz	x28, 43bbe8 <wcrtomb@plt+0x36fc8>
  43baac:	stp	x19, x20, [sp, #16]
  43bab0:	mov	x21, x0
  43bab4:	cbz	x26, 43bb90 <wcrtomb@plt+0x36f70>
  43bab8:	mov	x20, x26
  43babc:	mov	w27, #0x0                   	// #0
  43bac0:	mov	x24, #0xffffffffffffffff    	// #-1
  43bac4:	mov	x19, #0x0                   	// #0
  43bac8:	b	43bae8 <wcrtomb@plt+0x36ec8>
  43bacc:	bl	4046d0 <memcmp@plt>
  43bad0:	cmp	w0, #0x0
  43bad4:	csinc	w27, w27, wzr, eq  // eq = none
  43bad8:	add	x19, x19, #0x1
  43badc:	add	x20, x20, x22
  43bae0:	ldr	x28, [x23, x19, lsl #3]
  43bae4:	cbz	x28, 43bb40 <wcrtomb@plt+0x36f20>
  43bae8:	mov	x1, x25
  43baec:	mov	x2, x21
  43baf0:	mov	x0, x28
  43baf4:	bl	4043c0 <strncmp@plt>
  43baf8:	mov	w1, w0
  43bafc:	mov	x0, x28
  43bb00:	cbnz	w1, 43bad8 <wcrtomb@plt+0x36eb8>
  43bb04:	bl	403ff0 <strlen@plt>
  43bb08:	mov	x3, x0
  43bb0c:	mov	x2, x22
  43bb10:	madd	x0, x24, x22, x26
  43bb14:	mov	x1, x20
  43bb18:	cmp	x21, x3
  43bb1c:	b.eq	43bb6c <wcrtomb@plt+0x36f4c>  // b.none
  43bb20:	cmn	x24, #0x1
  43bb24:	b.ne	43bacc <wcrtomb@plt+0x36eac>  // b.any
  43bb28:	mov	x24, x19
  43bb2c:	add	x19, x19, #0x1
  43bb30:	add	x20, x20, x22
  43bb34:	ldr	x28, [x23, x19, lsl #3]
  43bb38:	cbnz	x28, 43bae8 <wcrtomb@plt+0x36ec8>
  43bb3c:	nop
  43bb40:	ldp	x19, x20, [sp, #16]
  43bb44:	cmp	w27, #0x0
  43bb48:	mov	x0, #0xfffffffffffffffe    	// #-2
  43bb4c:	csel	x24, x24, x0, eq  // eq = none
  43bb50:	mov	x0, x24
  43bb54:	ldp	x21, x22, [sp, #32]
  43bb58:	ldp	x23, x24, [sp, #48]
  43bb5c:	ldp	x25, x26, [sp, #64]
  43bb60:	ldp	x27, x28, [sp, #80]
  43bb64:	ldp	x29, x30, [sp], #96
  43bb68:	ret
  43bb6c:	mov	x24, x19
  43bb70:	mov	x0, x24
  43bb74:	ldp	x19, x20, [sp, #16]
  43bb78:	ldp	x21, x22, [sp, #32]
  43bb7c:	ldp	x23, x24, [sp, #48]
  43bb80:	ldp	x25, x26, [sp, #64]
  43bb84:	ldp	x27, x28, [sp, #80]
  43bb88:	ldp	x29, x30, [sp], #96
  43bb8c:	ret
  43bb90:	mov	w27, #0x0                   	// #0
  43bb94:	mov	x24, #0xffffffffffffffff    	// #-1
  43bb98:	mov	x19, #0x0                   	// #0
  43bb9c:	b	43bbb0 <wcrtomb@plt+0x36f90>
  43bba0:	mov	w27, #0x1                   	// #1
  43bba4:	add	x19, x19, #0x1
  43bba8:	ldr	x28, [x23, x19, lsl #3]
  43bbac:	cbz	x28, 43bb40 <wcrtomb@plt+0x36f20>
  43bbb0:	mov	x1, x25
  43bbb4:	mov	x2, x21
  43bbb8:	mov	x0, x28
  43bbbc:	bl	4043c0 <strncmp@plt>
  43bbc0:	mov	w1, w0
  43bbc4:	mov	x0, x28
  43bbc8:	cbnz	w1, 43bba4 <wcrtomb@plt+0x36f84>
  43bbcc:	bl	403ff0 <strlen@plt>
  43bbd0:	cmp	x0, x21
  43bbd4:	b.eq	43bb6c <wcrtomb@plt+0x36f4c>  // b.none
  43bbd8:	cmn	x24, #0x1
  43bbdc:	b.ne	43bba0 <wcrtomb@plt+0x36f80>  // b.any
  43bbe0:	mov	x24, x19
  43bbe4:	b	43bba4 <wcrtomb@plt+0x36f84>
  43bbe8:	mov	x24, #0xffffffffffffffff    	// #-1
  43bbec:	b	43bb50 <wcrtomb@plt+0x36f30>
  43bbf0:	stp	x29, x30, [sp, #-48]!
  43bbf4:	cmn	x2, #0x1
  43bbf8:	mov	x29, sp
  43bbfc:	stp	x19, x20, [sp, #16]
  43bc00:	mov	x20, x0
  43bc04:	str	x21, [sp, #32]
  43bc08:	mov	x21, x1
  43bc0c:	b.eq	43bc6c <wcrtomb@plt+0x3704c>  // b.none
  43bc10:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43bc14:	mov	w2, #0x5                   	// #5
  43bc18:	add	x1, x1, #0xbd0
  43bc1c:	mov	x0, #0x0                   	// #0
  43bc20:	bl	4049c0 <dcgettext@plt>
  43bc24:	mov	x19, x0
  43bc28:	mov	x2, x21
  43bc2c:	mov	w1, #0x8                   	// #8
  43bc30:	mov	w0, #0x0                   	// #0
  43bc34:	bl	44dba8 <argp_parse@@Base+0xddc8>
  43bc38:	mov	x1, x20
  43bc3c:	mov	x20, x0
  43bc40:	mov	w0, #0x1                   	// #1
  43bc44:	bl	44ed50 <argp_parse@@Base+0xef70>
  43bc48:	mov	x3, x20
  43bc4c:	mov	x2, x19
  43bc50:	ldp	x19, x20, [sp, #16]
  43bc54:	mov	x4, x0
  43bc58:	ldr	x21, [sp, #32]
  43bc5c:	mov	w1, #0x0                   	// #0
  43bc60:	ldp	x29, x30, [sp], #48
  43bc64:	mov	w0, #0x0                   	// #0
  43bc68:	b	404050 <error@plt>
  43bc6c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43bc70:	mov	w2, #0x5                   	// #5
  43bc74:	add	x1, x1, #0xbb0
  43bc78:	mov	x0, #0x0                   	// #0
  43bc7c:	bl	4049c0 <dcgettext@plt>
  43bc80:	mov	x19, x0
  43bc84:	b	43bc28 <wcrtomb@plt+0x37008>
  43bc88:	stp	x29, x30, [sp, #-112]!
  43bc8c:	mov	x29, sp
  43bc90:	stp	x27, x28, [sp, #80]
  43bc94:	adrp	x28, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43bc98:	stp	x19, x20, [sp, #16]
  43bc9c:	mov	x20, x1
  43bca0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43bca4:	add	x1, x1, #0xbf0
  43bca8:	stp	x21, x22, [sp, #32]
  43bcac:	mov	x22, x2
  43bcb0:	mov	w2, #0x5                   	// #5
  43bcb4:	stp	x23, x24, [sp, #48]
  43bcb8:	mov	x24, x0
  43bcbc:	mov	x0, #0x0                   	// #0
  43bcc0:	bl	4049c0 <dcgettext@plt>
  43bcc4:	ldr	x1, [x28, #1176]
  43bcc8:	bl	4049e0 <fputs_unlocked@plt>
  43bccc:	ldr	x21, [x24]
  43bcd0:	cbz	x21, 43bd48 <wcrtomb@plt+0x37128>
  43bcd4:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43bcd8:	add	x27, x27, #0xc10
  43bcdc:	stp	x25, x26, [sp, #64]
  43bce0:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43bce4:	add	x25, x28, #0x498
  43bce8:	add	x26, x26, #0xc08
  43bcec:	mov	x23, #0x0                   	// #0
  43bcf0:	mov	x19, #0x0                   	// #0
  43bcf4:	nop
  43bcf8:	cbz	x19, 43bd10 <wcrtomb@plt+0x370f0>
  43bcfc:	mov	x2, x22
  43bd00:	mov	x1, x20
  43bd04:	mov	x0, x23
  43bd08:	bl	4046d0 <memcmp@plt>
  43bd0c:	cbz	w0, 43bd80 <wcrtomb@plt+0x37160>
  43bd10:	ldr	x23, [x25]
  43bd14:	mov	x0, x21
  43bd18:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  43bd1c:	mov	x3, x0
  43bd20:	mov	x2, x26
  43bd24:	mov	x0, x23
  43bd28:	mov	w1, #0x1                   	// #1
  43bd2c:	mov	x23, x20
  43bd30:	bl	404700 <__fprintf_chk@plt>
  43bd34:	add	x19, x19, #0x1
  43bd38:	add	x20, x20, x22
  43bd3c:	ldr	x21, [x24, x19, lsl #3]
  43bd40:	cbnz	x21, 43bcf8 <wcrtomb@plt+0x370d8>
  43bd44:	ldp	x25, x26, [sp, #64]
  43bd48:	ldr	x0, [x28, #1176]
  43bd4c:	ldp	x1, x2, [x0, #40]
  43bd50:	cmp	x1, x2
  43bd54:	b.cs	43bdac <wcrtomb@plt+0x3718c>  // b.hs, b.nlast
  43bd58:	add	x2, x1, #0x1
  43bd5c:	str	x2, [x0, #40]
  43bd60:	mov	w0, #0xa                   	// #10
  43bd64:	strb	w0, [x1]
  43bd68:	ldp	x19, x20, [sp, #16]
  43bd6c:	ldp	x21, x22, [sp, #32]
  43bd70:	ldp	x23, x24, [sp, #48]
  43bd74:	ldp	x27, x28, [sp, #80]
  43bd78:	ldp	x29, x30, [sp], #112
  43bd7c:	ret
  43bd80:	ldr	x1, [x25]
  43bd84:	mov	x0, x21
  43bd88:	str	x1, [sp, #104]
  43bd8c:	bl	44eed0 <argp_parse@@Base+0xf0f0>
  43bd90:	mov	x3, x0
  43bd94:	ldr	x1, [sp, #104]
  43bd98:	mov	x2, x27
  43bd9c:	mov	x0, x1
  43bda0:	mov	w1, #0x1                   	// #1
  43bda4:	bl	404700 <__fprintf_chk@plt>
  43bda8:	b	43bd34 <wcrtomb@plt+0x37114>
  43bdac:	ldp	x19, x20, [sp, #16]
  43bdb0:	mov	w1, #0xa                   	// #10
  43bdb4:	ldp	x21, x22, [sp, #32]
  43bdb8:	ldp	x23, x24, [sp, #48]
  43bdbc:	ldp	x27, x28, [sp, #80]
  43bdc0:	ldp	x29, x30, [sp], #112
  43bdc4:	b	404680 <__overflow@plt>
  43bdc8:	stp	x29, x30, [sp, #-80]!
  43bdcc:	mov	x29, sp
  43bdd0:	stp	x19, x20, [sp, #16]
  43bdd4:	mov	x19, x2
  43bdd8:	mov	x20, x3
  43bddc:	stp	x21, x22, [sp, #32]
  43bde0:	mov	x22, x1
  43bde4:	mov	x21, x4
  43bde8:	mov	x3, x4
  43bdec:	mov	x2, x20
  43bdf0:	mov	x1, x19
  43bdf4:	stp	x23, x24, [sp, #48]
  43bdf8:	mov	x24, x0
  43bdfc:	mov	x23, x5
  43be00:	mov	x0, x22
  43be04:	bl	43ba78 <wcrtomb@plt+0x36e58>
  43be08:	tbnz	x0, #63, 43be20 <wcrtomb@plt+0x37200>
  43be0c:	ldp	x19, x20, [sp, #16]
  43be10:	ldp	x21, x22, [sp, #32]
  43be14:	ldp	x23, x24, [sp, #48]
  43be18:	ldp	x29, x30, [sp], #80
  43be1c:	ret
  43be20:	str	x25, [sp, #64]
  43be24:	cmn	x0, #0x1
  43be28:	b.eq	43be9c <wcrtomb@plt+0x3727c>  // b.none
  43be2c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43be30:	mov	w2, #0x5                   	// #5
  43be34:	add	x1, x1, #0xbd0
  43be38:	mov	x0, #0x0                   	// #0
  43be3c:	bl	4049c0 <dcgettext@plt>
  43be40:	mov	x25, x0
  43be44:	mov	x2, x22
  43be48:	mov	w1, #0x8                   	// #8
  43be4c:	mov	w0, #0x0                   	// #0
  43be50:	bl	44dba8 <argp_parse@@Base+0xddc8>
  43be54:	mov	x1, x24
  43be58:	mov	x22, x0
  43be5c:	mov	w0, #0x1                   	// #1
  43be60:	bl	44ed50 <argp_parse@@Base+0xef70>
  43be64:	mov	x3, x22
  43be68:	mov	x4, x0
  43be6c:	mov	x2, x25
  43be70:	mov	w1, #0x0                   	// #0
  43be74:	mov	w0, #0x0                   	// #0
  43be78:	bl	404050 <error@plt>
  43be7c:	mov	x0, x19
  43be80:	mov	x2, x21
  43be84:	mov	x1, x20
  43be88:	bl	43bc88 <wcrtomb@plt+0x37068>
  43be8c:	blr	x23
  43be90:	mov	x0, #0xffffffffffffffff    	// #-1
  43be94:	ldr	x25, [sp, #64]
  43be98:	b	43be0c <wcrtomb@plt+0x371ec>
  43be9c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43bea0:	mov	w2, #0x5                   	// #5
  43bea4:	add	x1, x1, #0xbb0
  43bea8:	mov	x0, #0x0                   	// #0
  43beac:	bl	4049c0 <dcgettext@plt>
  43beb0:	mov	x25, x0
  43beb4:	b	43be44 <wcrtomb@plt+0x37224>
  43beb8:	stp	x29, x30, [sp, #-64]!
  43bebc:	mov	x29, sp
  43bec0:	stp	x21, x22, [sp, #32]
  43bec4:	ldr	x22, [x1]
  43bec8:	cbz	x22, 43bf10 <wcrtomb@plt+0x372f0>
  43becc:	mov	x21, x3
  43bed0:	stp	x19, x20, [sp, #16]
  43bed4:	mov	x19, x2
  43bed8:	add	x20, x1, #0x8
  43bedc:	str	x23, [sp, #48]
  43bee0:	mov	x23, x0
  43bee4:	b	43bef4 <wcrtomb@plt+0x372d4>
  43bee8:	ldr	x22, [x20], #8
  43beec:	add	x19, x19, x21
  43bef0:	cbz	x22, 43bf08 <wcrtomb@plt+0x372e8>
  43bef4:	mov	x2, x21
  43bef8:	mov	x1, x19
  43befc:	mov	x0, x23
  43bf00:	bl	4046d0 <memcmp@plt>
  43bf04:	cbnz	w0, 43bee8 <wcrtomb@plt+0x372c8>
  43bf08:	ldp	x19, x20, [sp, #16]
  43bf0c:	ldr	x23, [sp, #48]
  43bf10:	mov	x0, x22
  43bf14:	ldp	x21, x22, [sp, #32]
  43bf18:	ldp	x29, x30, [sp], #64
  43bf1c:	ret
  43bf20:	stp	x29, x30, [sp, #-32]!
  43bf24:	mov	x29, sp
  43bf28:	stp	x19, x20, [sp, #16]
  43bf2c:	mov	x19, x1
  43bf30:	mov	x20, #0x0                   	// #0
  43bf34:	cbz	x0, 43bf48 <wcrtomb@plt+0x37328>
  43bf38:	mov	w1, #0xa                   	// #10
  43bf3c:	bl	404870 <strchr@plt>
  43bf40:	cmp	x0, #0x0
  43bf44:	cset	x20, ne  // ne = any
  43bf48:	cbz	x19, 43bf6c <wcrtomb@plt+0x3734c>
  43bf4c:	ldr	x2, [x19]
  43bf50:	cbz	x2, 43bf6c <wcrtomb@plt+0x3734c>
  43bf54:	ldr	x0, [x2, #16]
  43bf58:	ldr	x1, [x2, #32]
  43bf5c:	bl	43bf20 <wcrtomb@plt+0x37300>
  43bf60:	add	x20, x20, x0
  43bf64:	ldr	x2, [x19, #32]!
  43bf68:	cbnz	x2, 43bf54 <wcrtomb@plt+0x37334>
  43bf6c:	mov	x0, x20
  43bf70:	ldp	x19, x20, [sp, #16]
  43bf74:	ldp	x29, x30, [sp], #32
  43bf78:	ret
  43bf7c:	nop
  43bf80:	stp	x29, x30, [sp, #-160]!
  43bf84:	mov	x29, sp
  43bf88:	stp	x21, x22, [sp, #32]
  43bf8c:	mov	x22, x0
  43bf90:	mov	x21, x1
  43bf94:	mov	x0, #0x20                  	// #32
  43bf98:	stp	x19, x20, [sp, #16]
  43bf9c:	stp	x23, x24, [sp, #48]
  43bfa0:	stp	x25, x26, [sp, #64]
  43bfa4:	stp	x27, x28, [sp, #80]
  43bfa8:	ldr	x23, [x22]
  43bfac:	ldr	x20, [x22, #32]
  43bfb0:	bl	404310 <malloc@plt>
  43bfb4:	cbz	x0, 43c538 <wcrtomb@plt+0x37918>
  43bfb8:	str	wzr, [x0, #8]
  43bfbc:	mov	x19, x0
  43bfc0:	str	xzr, [x0, #24]
  43bfc4:	cbz	x23, 43c1b0 <wcrtomb@plt+0x37590>
  43bfc8:	ldr	w0, [x23, #24]
  43bfcc:	tbnz	w0, #2, 43c518 <wcrtomb@plt+0x378f8>
  43bfd0:	mov	x24, x23
  43bfd4:	mov	w25, #0x0                   	// #0
  43bfd8:	mov	w27, #0x0                   	// #0
  43bfdc:	nop
  43bfe0:	ldr	w0, [x24, #8]
  43bfe4:	cbnz	w0, 43bff0 <wcrtomb@plt+0x373d0>
  43bfe8:	ldr	x0, [x24]
  43bfec:	cbz	x0, 43c034 <wcrtomb@plt+0x37414>
  43bff0:	ldr	w0, [x24, #24]
  43bff4:	tbnz	w0, #2, 43c000 <wcrtomb@plt+0x373e0>
  43bff8:	add	w25, w25, #0x1
  43bffc:	str	w25, [x19, #8]
  43c000:	ldr	w0, [x24, #24]
  43c004:	tbnz	w0, #3, 43c02c <wcrtomb@plt+0x3740c>
  43c008:	ldr	w26, [x24, #8]
  43c00c:	sub	w0, w26, #0x1
  43c010:	cmp	w0, #0xfe
  43c014:	b.hi	43c02c <wcrtomb@plt+0x3740c>  // b.pmore
  43c018:	bl	404740 <__ctype_b_loc@plt>
  43c01c:	ldr	x0, [x0]
  43c020:	ldrh	w0, [x0, w26, sxtw #1]
  43c024:	ubfx	x0, x0, #14, #1
  43c028:	add	w27, w27, w0
  43c02c:	add	x24, x24, #0x30
  43c030:	b	43bfe0 <wcrtomb@plt+0x373c0>
  43c034:	ldr	x0, [x24, #32]
  43c038:	cbnz	x0, 43bff0 <wcrtomb@plt+0x373d0>
  43c03c:	ldr	w28, [x24, #40]
  43c040:	cbnz	w28, 43bff0 <wcrtomb@plt+0x373d0>
  43c044:	mov	w0, #0x38                  	// #56
  43c048:	umull	x0, w25, w0
  43c04c:	bl	404310 <malloc@plt>
  43c050:	mov	x24, x0
  43c054:	str	x24, [x19]
  43c058:	add	w0, w27, #0x1
  43c05c:	bl	404310 <malloc@plt>
  43c060:	str	x0, [x19, #16]
  43c064:	cmp	x24, #0x0
  43c068:	mov	x3, x0
  43c06c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  43c070:	b.eq	43c4f8 <wcrtomb@plt+0x378d8>  // b.none
  43c074:	ldr	w2, [x23, #8]
  43c078:	mov	x25, x0
  43c07c:	ldr	w1, [x23, #40]
  43c080:	cbnz	w2, 43c150 <wcrtomb@plt+0x37530>
  43c084:	nop
  43c088:	ldr	x0, [x23]
  43c08c:	cbz	x0, 43c180 <wcrtomb@plt+0x37560>
  43c090:	str	x23, [x24]
  43c094:	str	wzr, [x24, #8]
  43c098:	str	x25, [x24, #16]
  43c09c:	cbnz	w1, 43c160 <wcrtomb@plt+0x37540>
  43c0a0:	ldr	x0, [x23]
  43c0a4:	cmp	x0, #0x0
  43c0a8:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  43c0ac:	b.eq	43c198 <wcrtomb@plt+0x37578>  // b.none
  43c0b0:	mov	w27, #0x1                   	// #1
  43c0b4:	str	w28, [x24, #24]
  43c0b8:	stp	x21, x22, [x24, #32]
  43c0bc:	nop
  43c0c0:	str	w27, [x24, #8]
  43c0c4:	ldr	w0, [x23, #24]
  43c0c8:	tbnz	w0, #3, 43c120 <wcrtomb@plt+0x37500>
  43c0cc:	ldr	w26, [x23, #8]
  43c0d0:	sub	w0, w26, #0x1
  43c0d4:	cmp	w0, #0xfe
  43c0d8:	b.hi	43c120 <wcrtomb@plt+0x37500>  // b.pmore
  43c0dc:	str	x3, [sp, #104]
  43c0e0:	bl	404740 <__ctype_b_loc@plt>
  43c0e4:	ldr	x0, [x0]
  43c0e8:	ldr	x3, [sp, #104]
  43c0ec:	ldrh	w0, [x0, w26, sxtw #1]
  43c0f0:	tbz	w0, #14, 43c120 <wcrtomb@plt+0x37500>
  43c0f4:	and	w26, w26, #0xff
  43c0f8:	cmp	x3, x25
  43c0fc:	b.cs	43c1a0 <wcrtomb@plt+0x37580>  // b.hs, b.nlast
  43c100:	mov	x1, x3
  43c104:	b	43c114 <wcrtomb@plt+0x374f4>
  43c108:	add	x1, x1, #0x1
  43c10c:	cmp	x1, x25
  43c110:	b.eq	43c1a0 <wcrtomb@plt+0x37580>  // b.none
  43c114:	ldrb	w0, [x1]
  43c118:	cmp	w0, w26
  43c11c:	b.ne	43c108 <wcrtomb@plt+0x374e8>  // b.any
  43c120:	ldr	w0, [x23, #56]
  43c124:	add	x23, x23, #0x30
  43c128:	cbnz	w0, 43c134 <wcrtomb@plt+0x37514>
  43c12c:	ldr	x1, [x23]
  43c130:	cbz	x1, 43c168 <wcrtomb@plt+0x37548>
  43c134:	ldr	w1, [x23, #24]
  43c138:	add	w27, w27, #0x1
  43c13c:	tbnz	w1, #2, 43c0c0 <wcrtomb@plt+0x374a0>
  43c140:	mov	w2, w0
  43c144:	add	x24, x24, #0x38
  43c148:	ldr	w1, [x23, #40]
  43c14c:	cbz	w2, 43c088 <wcrtomb@plt+0x37468>
  43c150:	str	x23, [x24]
  43c154:	str	wzr, [x24, #8]
  43c158:	str	x25, [x24, #16]
  43c15c:	cbz	w1, 43c0b0 <wcrtomb@plt+0x37490>
  43c160:	mov	w28, w1
  43c164:	b	43c0b0 <wcrtomb@plt+0x37490>
  43c168:	ldr	x1, [x23, #32]
  43c16c:	cbnz	x1, 43c134 <wcrtomb@plt+0x37514>
  43c170:	ldr	w2, [x23, #40]
  43c174:	cbnz	w2, 43c134 <wcrtomb@plt+0x37514>
  43c178:	add	x24, x24, #0x38
  43c17c:	b	43c148 <wcrtomb@plt+0x37528>
  43c180:	ldr	x0, [x23, #32]
  43c184:	cbz	x0, 43c1a8 <wcrtomb@plt+0x37588>
  43c188:	str	x23, [x24]
  43c18c:	str	wzr, [x24, #8]
  43c190:	str	x25, [x24, #16]
  43c194:	cbnz	w1, 43c160 <wcrtomb@plt+0x37540>
  43c198:	add	w28, w28, #0x1
  43c19c:	b	43c0b0 <wcrtomb@plt+0x37490>
  43c1a0:	strb	w26, [x25], #1
  43c1a4:	b	43c120 <wcrtomb@plt+0x37500>
  43c1a8:	cbnz	w1, 43c2a8 <wcrtomb@plt+0x37688>
  43c1ac:	strb	wzr, [x25]
  43c1b0:	cbz	x20, 43c288 <wcrtomb@plt+0x37668>
  43c1b4:	ldr	x24, [x20]
  43c1b8:	cbz	x24, 43c288 <wcrtomb@plt+0x37668>
  43c1bc:	add	x0, x19, #0x18
  43c1c0:	str	x0, [sp, #152]
  43c1c4:	ldr	w25, [x20, #24]
  43c1c8:	ldr	x26, [x20, #16]
  43c1cc:	cbnz	w25, 43c1d8 <wcrtomb@plt+0x375b8>
  43c1d0:	mov	x1, x21
  43c1d4:	cbz	x26, 43c220 <wcrtomb@plt+0x37600>
  43c1d8:	ldr	x23, [x22, #32]
  43c1dc:	mov	x0, #0x30                  	// #48
  43c1e0:	bl	404310 <malloc@plt>
  43c1e4:	mov	x1, x0
  43c1e8:	sub	x23, x20, x23
  43c1ec:	asr	x23, x23, #5
  43c1f0:	cbz	x0, 43c220 <wcrtomb@plt+0x37600>
  43c1f4:	str	x26, [x1]
  43c1f8:	mov	w0, #0x0                   	// #0
  43c1fc:	stp	w23, w25, [x1, #8]
  43c200:	stp	x21, x22, [x1, #16]
  43c204:	cbz	x21, 43c210 <wcrtomb@plt+0x375f0>
  43c208:	ldr	w0, [x21, #32]
  43c20c:	add	w0, w0, #0x1
  43c210:	ldr	x2, [x19, #24]
  43c214:	str	x1, [x19, #24]
  43c218:	str	w0, [x1, #32]
  43c21c:	str	x2, [x1, #40]
  43c220:	mov	x0, x24
  43c224:	bl	43bf80 <wcrtomb@plt+0x37360>
  43c228:	ldr	x1, [x19, #24]
  43c22c:	mov	x26, x0
  43c230:	cbz	x1, 43c4f0 <wcrtomb@plt+0x378d0>
  43c234:	nop
  43c238:	mov	x0, x1
  43c23c:	ldr	x1, [x1, #40]
  43c240:	cbnz	x1, 43c238 <wcrtomb@plt+0x37618>
  43c244:	add	x0, x0, #0x28
  43c248:	ldr	w27, [x26, #8]
  43c24c:	ldr	x1, [x26, #24]
  43c250:	str	x1, [x0]
  43c254:	str	xzr, [x26, #24]
  43c258:	cbz	w27, 43c278 <wcrtomb@plt+0x37658>
  43c25c:	ldr	w28, [x19, #8]
  43c260:	cbnz	w28, 43c2b8 <wcrtomb@plt+0x37698>
  43c264:	ldr	x0, [x26]
  43c268:	str	x0, [x19]
  43c26c:	ldr	x0, [x26, #16]
  43c270:	str	w27, [x19, #8]
  43c274:	str	x0, [x19, #16]
  43c278:	mov	x0, x26
  43c27c:	bl	4047b0 <free@plt>
  43c280:	ldr	x24, [x20, #32]!
  43c284:	cbnz	x24, 43c1c4 <wcrtomb@plt+0x375a4>
  43c288:	mov	x0, x19
  43c28c:	ldp	x19, x20, [sp, #16]
  43c290:	ldp	x21, x22, [sp, #32]
  43c294:	ldp	x23, x24, [sp, #48]
  43c298:	ldp	x25, x26, [sp, #64]
  43c29c:	ldp	x27, x28, [sp, #80]
  43c2a0:	ldp	x29, x30, [sp], #160
  43c2a4:	ret
  43c2a8:	mov	w28, w1
  43c2ac:	str	x23, [x24]
  43c2b0:	str	x25, [x24, #16]
  43c2b4:	b	43c0b0 <wcrtomb@plt+0x37490>
  43c2b8:	add	w0, w27, w28
  43c2bc:	mov	w1, #0x38                  	// #56
  43c2c0:	str	w0, [sp, #140]
  43c2c4:	umull	x0, w0, w1
  43c2c8:	bl	404310 <malloc@plt>
  43c2cc:	str	x0, [sp, #120]
  43c2d0:	ldr	x24, [x19, #16]
  43c2d4:	mov	x0, x24
  43c2d8:	bl	403ff0 <strlen@plt>
  43c2dc:	ldr	x25, [x26, #16]
  43c2e0:	mov	w23, w0
  43c2e4:	str	x23, [sp, #104]
  43c2e8:	mov	x0, x25
  43c2ec:	bl	403ff0 <strlen@plt>
  43c2f0:	add	x0, x0, #0x1
  43c2f4:	add	x0, x0, x23
  43c2f8:	bl	404310 <malloc@plt>
  43c2fc:	ldr	x1, [sp, #120]
  43c300:	mov	x23, x0
  43c304:	cmp	x1, #0x0
  43c308:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  43c30c:	b.eq	43c558 <wcrtomb@plt+0x37938>  // b.none
  43c310:	mov	w0, #0x38                  	// #56
  43c314:	ldr	x3, [x19]
  43c318:	umull	x2, w28, w0
  43c31c:	ldr	x0, [sp, #120]
  43c320:	mov	x1, x3
  43c324:	str	x3, [sp, #144]
  43c328:	bl	404810 <mempcpy@plt>
  43c32c:	mov	w2, #0x38                  	// #56
  43c330:	ldr	x1, [x26]
  43c334:	umull	x2, w27, w2
  43c338:	bl	403f70 <memcpy@plt>
  43c33c:	ldr	x2, [sp, #104]
  43c340:	mov	x1, x24
  43c344:	mov	x0, x23
  43c348:	bl	403f70 <memcpy@plt>
  43c34c:	sub	w4, w28, #0x1
  43c350:	add	x4, x4, #0x1
  43c354:	ldr	x1, [sp, #120]
  43c358:	lsl	x0, x4, #3
  43c35c:	sub	x4, x0, x4
  43c360:	mov	x2, x1
  43c364:	add	x28, x1, x4, lsl #3
  43c368:	ldr	x1, [x2, #16]
  43c36c:	add	x2, x2, #0x38
  43c370:	sub	x1, x1, x24
  43c374:	add	x1, x23, x1
  43c378:	stur	x1, [x2, #-40]
  43c37c:	cmp	x2, x28
  43c380:	b.ne	43c368 <wcrtomb@plt+0x37748>  // b.any
  43c384:	sub	w27, w27, #0x1
  43c388:	ldr	x0, [sp, #104]
  43c38c:	add	x27, x27, #0x1
  43c390:	add	x24, x23, x0
  43c394:	lsl	x0, x27, #3
  43c398:	sub	x27, x0, x27
  43c39c:	str	x24, [sp, #112]
  43c3a0:	add	x0, x28, x27, lsl #3
  43c3a4:	str	x0, [sp, #128]
  43c3a8:	ldr	w1, [x28, #8]
  43c3ac:	str	x24, [x28, #16]
  43c3b0:	ldr	x5, [x28]
  43c3b4:	cbz	w1, 43c418 <wcrtomb@plt+0x377f8>
  43c3b8:	sub	w1, w1, #0x1
  43c3bc:	add	x1, x1, #0x1
  43c3c0:	add	x1, x1, x1, lsl #1
  43c3c4:	add	x27, x5, x1, lsl #4
  43c3c8:	ldr	w0, [x5, #24]
  43c3cc:	tbnz	w0, #3, 43c40c <wcrtomb@plt+0x377ec>
  43c3d0:	ldr	w2, [x5, #8]
  43c3d4:	str	w2, [sp, #136]
  43c3d8:	sub	w0, w2, #0x1
  43c3dc:	cmp	w0, #0xfe
  43c3e0:	b.hi	43c40c <wcrtomb@plt+0x377ec>  // b.pmore
  43c3e4:	str	x5, [sp, #104]
  43c3e8:	bl	404740 <__ctype_b_loc@plt>
  43c3ec:	ldr	w2, [sp, #136]
  43c3f0:	ldr	x0, [x0]
  43c3f4:	ldrb	w6, [x25]
  43c3f8:	ldr	x5, [sp, #104]
  43c3fc:	ldrh	w0, [x0, w2, sxtw #1]
  43c400:	tst	x0, #0x4000
  43c404:	ccmp	w6, w2, #0x0, ne  // ne = any
  43c408:	b.eq	43c4b0 <wcrtomb@plt+0x37890>  // b.none
  43c40c:	add	x5, x5, #0x30
  43c410:	cmp	x5, x27
  43c414:	b.ne	43c3c8 <wcrtomb@plt+0x377a8>  // b.any
  43c418:	ldr	x0, [sp, #128]
  43c41c:	add	x28, x28, #0x38
  43c420:	cmp	x28, x0
  43c424:	b.ne	43c3a8 <wcrtomb@plt+0x37788>  // b.any
  43c428:	ldr	x0, [sp, #144]
  43c42c:	strb	wzr, [x24]
  43c430:	bl	4047b0 <free@plt>
  43c434:	ldr	x0, [x19, #16]
  43c438:	bl	4047b0 <free@plt>
  43c43c:	ldr	x24, [x26, #24]
  43c440:	str	x23, [x19, #16]
  43c444:	ldr	x0, [sp, #120]
  43c448:	str	x0, [x19]
  43c44c:	ldr	w0, [sp, #140]
  43c450:	str	w0, [x19, #8]
  43c454:	cbz	x24, 43c468 <wcrtomb@plt+0x37848>
  43c458:	mov	x0, x24
  43c45c:	ldr	x24, [x24, #40]
  43c460:	bl	4047b0 <free@plt>
  43c464:	cbnz	x24, 43c458 <wcrtomb@plt+0x37838>
  43c468:	ldr	w0, [x26, #8]
  43c46c:	cbz	w0, 43c278 <wcrtomb@plt+0x37658>
  43c470:	ldr	x0, [x26]
  43c474:	bl	4047b0 <free@plt>
  43c478:	ldr	x0, [x26, #16]
  43c47c:	bl	4047b0 <free@plt>
  43c480:	mov	x0, x26
  43c484:	bl	4047b0 <free@plt>
  43c488:	ldr	x24, [x20, #32]!
  43c48c:	cbnz	x24, 43c1c4 <wcrtomb@plt+0x375a4>
  43c490:	mov	x0, x19
  43c494:	ldp	x19, x20, [sp, #16]
  43c498:	ldp	x21, x22, [sp, #32]
  43c49c:	ldp	x23, x24, [sp, #48]
  43c4a0:	ldp	x25, x26, [sp, #64]
  43c4a4:	ldp	x27, x28, [sp, #80]
  43c4a8:	ldp	x29, x30, [sp], #160
  43c4ac:	ret
  43c4b0:	ldr	x0, [sp, #112]
  43c4b4:	cmp	x23, x0
  43c4b8:	b.cs	43c4dc <wcrtomb@plt+0x378bc>  // b.hs, b.nlast
  43c4bc:	mov	x2, x23
  43c4c0:	ldrb	w0, [x2]
  43c4c4:	cmp	w0, w6
  43c4c8:	b.eq	43c4e8 <wcrtomb@plt+0x378c8>  // b.none
  43c4cc:	ldr	x0, [sp, #112]
  43c4d0:	add	x2, x2, #0x1
  43c4d4:	cmp	x0, x2
  43c4d8:	b.ne	43c4c0 <wcrtomb@plt+0x378a0>  // b.any
  43c4dc:	mov	x7, x24
  43c4e0:	strb	w6, [x7], #1
  43c4e4:	mov	x24, x7
  43c4e8:	add	x25, x25, #0x1
  43c4ec:	b	43c40c <wcrtomb@plt+0x377ec>
  43c4f0:	ldr	x0, [sp, #152]
  43c4f4:	b	43c248 <wcrtomb@plt+0x37628>
  43c4f8:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c4fc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c500:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c504:	add	x3, x3, #0xee0
  43c508:	add	x1, x1, #0xc18
  43c50c:	add	x0, x0, #0xc40
  43c510:	mov	w2, #0x1d1                 	// #465
  43c514:	bl	404ac0 <__assert_fail@plt>
  43c518:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c51c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c520:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c524:	add	x3, x3, #0xee0
  43c528:	add	x1, x1, #0xc18
  43c52c:	add	x0, x0, #0xc30
  43c530:	mov	w2, #0x1c3                 	// #451
  43c534:	bl	404ac0 <__assert_fail@plt>
  43c538:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c53c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c540:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c544:	add	x3, x3, #0xee0
  43c548:	add	x1, x1, #0xc18
  43c54c:	add	x0, x0, #0xc28
  43c550:	mov	w2, #0x1b9                 	// #441
  43c554:	bl	404ac0 <__assert_fail@plt>
  43c558:	adrp	x3, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c55c:	add	x3, x3, #0xee0
  43c560:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c564:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43c568:	add	x3, x3, #0x10
  43c56c:	add	x1, x1, #0xc18
  43c570:	add	x0, x0, #0xc68
  43c574:	mov	w2, #0x366                 	// #870
  43c578:	bl	404ac0 <__assert_fail@plt>
  43c57c:	nop
  43c580:	stp	x29, x30, [sp, #-128]!
  43c584:	mov	x29, sp
  43c588:	ldr	x3, [x1, #32]
  43c58c:	stp	x19, x20, [sp, #16]
  43c590:	ldr	w4, [x0, #24]
  43c594:	ldr	x2, [x0, #32]
  43c598:	mov	x20, x1
  43c59c:	ldr	w1, [x1, #24]
  43c5a0:	cmp	x2, x3
  43c5a4:	b.eq	43c69c <wcrtomb@plt+0x37a7c>  // b.none
  43c5a8:	cbz	x2, 43c63c <wcrtomb@plt+0x37a1c>
  43c5ac:	cbz	x3, 43c65c <wcrtomb@plt+0x37a3c>
  43c5b0:	ldr	w0, [x2, #32]
  43c5b4:	ldr	w1, [x3, #32]
  43c5b8:	cmp	w0, w1
  43c5bc:	b.le	43c5e0 <wcrtomb@plt+0x379c0>
  43c5c0:	ldr	x2, [x2, #16]
  43c5c4:	ldr	w0, [x2, #32]
  43c5c8:	cmp	w0, w1
  43c5cc:	b.gt	43c5c0 <wcrtomb@plt+0x379a0>
  43c5d0:	cmp	w1, w0
  43c5d4:	b.le	43c5e8 <wcrtomb@plt+0x379c8>
  43c5d8:	ldr	x3, [x3, #16]
  43c5dc:	ldr	w1, [x3, #32]
  43c5e0:	cmp	w1, w0
  43c5e4:	b.gt	43c5d8 <wcrtomb@plt+0x379b8>
  43c5e8:	mov	x0, x2
  43c5ec:	mov	x4, x3
  43c5f0:	ldr	x2, [x2, #16]
  43c5f4:	ldr	x3, [x3, #16]
  43c5f8:	cmp	x2, x3
  43c5fc:	b.ne	43c5e8 <wcrtomb@plt+0x379c8>  // b.any
  43c600:	ldp	w3, w1, [x4, #8]
  43c604:	ldr	w2, [x0, #12]
  43c608:	ldr	w0, [x0, #8]
  43c60c:	cmp	w2, w1
  43c610:	sub	w0, w3, w0
  43c614:	b.eq	43c630 <wcrtomb@plt+0x37a10>  // b.none
  43c618:	mvn	w3, w1
  43c61c:	sub	w4, w2, w1
  43c620:	sub	w0, w1, w2
  43c624:	lsr	w1, w3, #31
  43c628:	cmp	w1, w2, lsr #31
  43c62c:	csel	w0, w0, w4, eq  // eq = none
  43c630:	ldp	x19, x20, [sp, #16]
  43c634:	ldp	x29, x30, [sp], #128
  43c638:	ret
  43c63c:	mov	x0, x3
  43c640:	ldr	x3, [x3, #16]
  43c644:	cbnz	x3, 43c63c <wcrtomb@plt+0x37a1c>
  43c648:	ldr	w1, [x0, #12]
  43c64c:	mov	w0, #0xffffffff            	// #-1
  43c650:	cmp	w4, w1
  43c654:	b.ne	43c6a4 <wcrtomb@plt+0x37a84>  // b.any
  43c658:	b	43c630 <wcrtomb@plt+0x37a10>
  43c65c:	mov	x0, x2
  43c660:	ldr	x2, [x2, #16]
  43c664:	cbnz	x2, 43c65c <wcrtomb@plt+0x37a3c>
  43c668:	ldr	w2, [x0, #12]
  43c66c:	mov	w0, #0x1                   	// #1
  43c670:	cmp	w1, w2
  43c674:	b.eq	43c630 <wcrtomb@plt+0x37a10>  // b.none
  43c678:	mvn	w3, w1
  43c67c:	sub	w0, w2, w1
  43c680:	sub	w1, w1, w2
  43c684:	lsr	w3, w3, #31
  43c688:	cmp	w3, w2, lsr #31
  43c68c:	csel	w0, w1, w0, eq  // eq = none
  43c690:	ldp	x19, x20, [sp, #16]
  43c694:	ldp	x29, x30, [sp], #128
  43c698:	ret
  43c69c:	cmp	w4, w1
  43c6a0:	b.eq	43c6c8 <wcrtomb@plt+0x37aa8>  // b.none
  43c6a4:	mvn	w2, w1
  43c6a8:	sub	w0, w4, w1
  43c6ac:	sub	w1, w1, w4
  43c6b0:	lsr	w2, w2, #31
  43c6b4:	cmp	w2, w4, lsr #31
  43c6b8:	csel	w0, w1, w0, eq  // eq = none
  43c6bc:	ldp	x19, x20, [sp, #16]
  43c6c0:	ldp	x29, x30, [sp], #128
  43c6c4:	ret
  43c6c8:	stp	x21, x22, [sp, #32]
  43c6cc:	ldr	w22, [x0, #8]
  43c6d0:	stp	x23, x24, [sp, #48]
  43c6d4:	stp	x25, x26, [sp, #64]
  43c6d8:	stp	x27, x28, [sp, #80]
  43c6dc:	ldr	x28, [x0]
  43c6e0:	ldr	x27, [x0, #16]
  43c6e4:	cbz	w22, 43ca40 <wcrtomb@plt+0x37e20>
  43c6e8:	mov	w23, w22
  43c6ec:	mov	x19, x28
  43c6f0:	b	43c748 <wcrtomb@plt+0x37b28>
  43c6f4:	ldr	w26, [x19, #8]
  43c6f8:	sub	w0, w26, #0x1
  43c6fc:	cmp	w0, #0xfe
  43c700:	b.hi	43c738 <wcrtomb@plt+0x37b18>  // b.pmore
  43c704:	bl	404740 <__ctype_b_loc@plt>
  43c708:	ldr	x0, [x0]
  43c70c:	ldrh	w0, [x0, w26, sxtw #1]
  43c710:	tbz	w0, #14, 43c738 <wcrtomb@plt+0x37b18>
  43c714:	ldrb	w0, [x27]
  43c718:	cmp	w26, w0
  43c71c:	b.ne	43c738 <wcrtomb@plt+0x37b18>  // b.any
  43c720:	ands	w21, w21, #0x2
  43c724:	add	x27, x27, #0x1
  43c728:	csel	w24, wzr, w24, eq  // eq = none
  43c72c:	cmp	w21, #0x0
  43c730:	csel	w25, w26, wzr, eq  // eq = none
  43c734:	nop
  43c738:	subs	w23, w23, #0x1
  43c73c:	add	x19, x19, #0x30
  43c740:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  43c744:	b.eq	43c760 <wcrtomb@plt+0x37b40>  // b.none
  43c748:	ldr	w21, [x19, #24]
  43c74c:	mov	w24, #0x1                   	// #1
  43c750:	and	w25, w21, #0x8
  43c754:	tbz	w21, #3, 43c6f4 <wcrtomb@plt+0x37ad4>
  43c758:	mov	w25, #0x0                   	// #0
  43c75c:	b	43c738 <wcrtomb@plt+0x37b18>
  43c760:	ldr	x24, [x20]
  43c764:	and	w0, w25, #0xff
  43c768:	str	w0, [sp, #120]
  43c76c:	mov	w27, #0x0                   	// #0
  43c770:	ldr	w0, [x28, #24]
  43c774:	mov	w23, #0x0                   	// #0
  43c778:	ldr	w1, [x24, #24]
  43c77c:	ldr	w19, [x20, #8]
  43c780:	and	w0, w0, #0x8
  43c784:	str	w0, [sp, #116]
  43c788:	and	w0, w1, #0x8
  43c78c:	str	w0, [sp, #112]
  43c790:	ldr	x6, [x20, #16]
  43c794:	cbz	w19, 43c82c <wcrtomb@plt+0x37c0c>
  43c798:	mov	w23, w19
  43c79c:	mov	x20, x24
  43c7a0:	b	43c808 <wcrtomb@plt+0x37be8>
  43c7a4:	ldr	w5, [x20, #8]
  43c7a8:	str	w5, [sp, #100]
  43c7ac:	sub	w0, w5, #0x1
  43c7b0:	cmp	w0, #0xfe
  43c7b4:	b.hi	43c7f8 <wcrtomb@plt+0x37bd8>  // b.pmore
  43c7b8:	str	x6, [sp, #104]
  43c7bc:	bl	404740 <__ctype_b_loc@plt>
  43c7c0:	ldr	w5, [sp, #100]
  43c7c4:	ldr	x0, [x0]
  43c7c8:	ldr	x6, [sp, #104]
  43c7cc:	ldrh	w0, [x0, w5, sxtw #1]
  43c7d0:	tbz	w0, #14, 43c7f8 <wcrtomb@plt+0x37bd8>
  43c7d4:	ldrb	w0, [x6]
  43c7d8:	cmp	w5, w0
  43c7dc:	b.ne	43c7f8 <wcrtomb@plt+0x37bd8>  // b.any
  43c7e0:	ands	w21, w21, #0x2
  43c7e4:	add	x6, x6, #0x1
  43c7e8:	csel	w26, wzr, w26, eq  // eq = none
  43c7ec:	cmp	w21, #0x0
  43c7f0:	csel	w27, w5, wzr, eq  // eq = none
  43c7f4:	nop
  43c7f8:	subs	w23, w23, #0x1
  43c7fc:	add	x20, x20, #0x30
  43c800:	ccmp	w26, #0x0, #0x4, ne  // ne = any
  43c804:	b.eq	43c820 <wcrtomb@plt+0x37c00>  // b.none
  43c808:	ldr	w21, [x20, #24]
  43c80c:	mov	w26, #0x1                   	// #1
  43c810:	and	w27, w21, #0x8
  43c814:	tbz	w21, #3, 43c7a4 <wcrtomb@plt+0x37b84>
  43c818:	mov	w27, #0x0                   	// #0
  43c81c:	b	43c7f8 <wcrtomb@plt+0x37bd8>
  43c820:	and	w23, w27, #0xff
  43c824:	mov	x21, #0x0                   	// #0
  43c828:	cbz	w22, 43c864 <wcrtomb@plt+0x37c44>
  43c82c:	sub	w0, w22, #0x1
  43c830:	add	x0, x0, #0x1
  43c834:	add	x0, x0, x0, lsl #1
  43c838:	add	x0, x28, x0, lsl #4
  43c83c:	nop
  43c840:	ldr	x21, [x28]
  43c844:	cbz	x21, 43c850 <wcrtomb@plt+0x37c30>
  43c848:	ldr	w5, [x28, #24]
  43c84c:	tbz	w5, #1, 43c860 <wcrtomb@plt+0x37c40>
  43c850:	add	x28, x28, #0x30
  43c854:	cmp	x28, x0
  43c858:	b.ne	43c840 <wcrtomb@plt+0x37c20>  // b.any
  43c85c:	mov	x21, #0x0                   	// #0
  43c860:	cbz	w19, 43c894 <wcrtomb@plt+0x37c74>
  43c864:	sub	w0, w19, #0x1
  43c868:	add	x0, x0, #0x1
  43c86c:	add	x0, x0, x0, lsl #1
  43c870:	add	x0, x24, x0, lsl #4
  43c874:	nop
  43c878:	ldr	x20, [x24]
  43c87c:	cbz	x20, 43c888 <wcrtomb@plt+0x37c68>
  43c880:	ldr	w2, [x24, #24]
  43c884:	tbz	w2, #1, 43c898 <wcrtomb@plt+0x37c78>
  43c888:	add	x24, x24, #0x30
  43c88c:	cmp	x24, x0
  43c890:	b.ne	43c878 <wcrtomb@plt+0x37c58>  // b.any
  43c894:	mov	x20, #0x0                   	// #0
  43c898:	ldr	w0, [sp, #116]
  43c89c:	cbnz	w0, 43c8e0 <wcrtomb@plt+0x37cc0>
  43c8a0:	ldr	w0, [sp, #112]
  43c8a4:	cbnz	w0, 43c944 <wcrtomb@plt+0x37d24>
  43c8a8:	orr	w0, w27, w25
  43c8ac:	cmp	w0, #0x0
  43c8b0:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  43c8b4:	b.eq	43ca28 <wcrtomb@plt+0x37e08>  // b.none
  43c8b8:	cbz	x20, 43ca30 <wcrtomb@plt+0x37e10>
  43c8bc:	mov	x1, x20
  43c8c0:	mov	x0, x21
  43c8c4:	ldp	x19, x20, [sp, #16]
  43c8c8:	ldp	x21, x22, [sp, #32]
  43c8cc:	ldp	x23, x24, [sp, #48]
  43c8d0:	ldp	x25, x26, [sp, #64]
  43c8d4:	ldp	x27, x28, [sp, #80]
  43c8d8:	ldp	x29, x30, [sp], #128
  43c8dc:	b	404500 <strcasecmp@plt>
  43c8e0:	cbz	x21, 43c9c8 <wcrtomb@plt+0x37da8>
  43c8e4:	bl	404740 <__ctype_b_loc@plt>
  43c8e8:	ldrb	w1, [x21]
  43c8ec:	ldr	x2, [x0]
  43c8f0:	ubfiz	x0, x1, #1, #8
  43c8f4:	ldrh	w0, [x2, x0]
  43c8f8:	tbz	w0, #13, 43c910 <wcrtomb@plt+0x37cf0>
  43c8fc:	nop
  43c900:	ldrb	w1, [x21, #1]!
  43c904:	ubfiz	x0, x1, #1, #8
  43c908:	ldrh	w0, [x2, x0]
  43c90c:	tbnz	w0, #13, 43c900 <wcrtomb@plt+0x37ce0>
  43c910:	cbz	w1, 43c930 <wcrtomb@plt+0x37d10>
  43c914:	nop
  43c918:	tbnz	w0, #3, 43c930 <wcrtomb@plt+0x37d10>
  43c91c:	ldrb	w0, [x21, #1]!
  43c920:	ubfiz	x5, x0, #1, #8
  43c924:	cbz	w0, 43c930 <wcrtomb@plt+0x37d10>
  43c928:	ldrh	w0, [x2, x5]
  43c92c:	b	43c918 <wcrtomb@plt+0x37cf8>
  43c930:	cmp	w1, #0x2d
  43c934:	cset	w0, ne  // ne = any
  43c938:	str	w0, [sp, #116]
  43c93c:	ldr	w0, [sp, #112]
  43c940:	cbz	w0, 43c9a4 <wcrtomb@plt+0x37d84>
  43c944:	str	wzr, [sp, #112]
  43c948:	cbz	x20, 43c9a4 <wcrtomb@plt+0x37d84>
  43c94c:	bl	404740 <__ctype_b_loc@plt>
  43c950:	ldrb	w1, [x20]
  43c954:	ldr	x2, [x0]
  43c958:	ubfiz	x0, x1, #1, #8
  43c95c:	ldrh	w0, [x2, x0]
  43c960:	tbz	w0, #13, 43c978 <wcrtomb@plt+0x37d58>
  43c964:	nop
  43c968:	ldrb	w1, [x20, #1]!
  43c96c:	ubfiz	x0, x1, #1, #8
  43c970:	ldrh	w0, [x2, x0]
  43c974:	tbnz	w0, #13, 43c968 <wcrtomb@plt+0x37d48>
  43c978:	cbz	w1, 43c998 <wcrtomb@plt+0x37d78>
  43c97c:	nop
  43c980:	tbnz	w0, #3, 43c998 <wcrtomb@plt+0x37d78>
  43c984:	ldrb	w0, [x20, #1]!
  43c988:	ubfiz	x5, x0, #1, #8
  43c98c:	cbz	w0, 43c998 <wcrtomb@plt+0x37d78>
  43c990:	ldrh	w0, [x2, x5]
  43c994:	b	43c980 <wcrtomb@plt+0x37d60>
  43c998:	cmp	w1, #0x2d
  43c99c:	cset	w0, ne  // ne = any
  43c9a0:	str	w0, [sp, #112]
  43c9a4:	ldp	w0, w1, [sp, #112]
  43c9a8:	cmp	w0, w1
  43c9ac:	b.eq	43c8a8 <wcrtomb@plt+0x37c88>  // b.none
  43c9b0:	sub	w0, w1, w0
  43c9b4:	ldp	x21, x22, [sp, #32]
  43c9b8:	ldp	x23, x24, [sp, #48]
  43c9bc:	ldp	x25, x26, [sp, #64]
  43c9c0:	ldp	x27, x28, [sp, #80]
  43c9c4:	b	43c630 <wcrtomb@plt+0x37a10>
  43c9c8:	ldr	w0, [sp, #112]
  43c9cc:	cbz	w0, 43c9d8 <wcrtomb@plt+0x37db8>
  43c9d0:	str	wzr, [sp, #116]
  43c9d4:	b	43c944 <wcrtomb@plt+0x37d24>
  43c9d8:	cbz	w25, 43ca90 <wcrtomb@plt+0x37e70>
  43c9dc:	ldr	x0, [sp, #120]
  43c9e0:	ubfiz	x21, x0, #2, #8
  43c9e4:	cbnz	w27, 43c9f0 <wcrtomb@plt+0x37dd0>
  43c9e8:	cbz	x20, 43ca84 <wcrtomb@plt+0x37e64>
  43c9ec:	ldrb	w23, [x20]
  43c9f0:	ubfiz	x19, x23, #2, #8
  43c9f4:	bl	4041f0 <__ctype_tolower_loc@plt>
  43c9f8:	ldr	w1, [sp, #120]
  43c9fc:	ldp	x25, x26, [sp, #64]
  43ca00:	sub	w23, w23, w1
  43ca04:	ldr	x1, [x0]
  43ca08:	ldp	x27, x28, [sp, #80]
  43ca0c:	ldr	w0, [x1, x21]
  43ca10:	ldr	w1, [x1, x19]
  43ca14:	ldp	x21, x22, [sp, #32]
  43ca18:	subs	w0, w0, w1
  43ca1c:	csel	w0, w23, w0, eq  // eq = none
  43ca20:	ldp	x23, x24, [sp, #48]
  43ca24:	b	43c630 <wcrtomb@plt+0x37a10>
  43ca28:	cbnz	w25, 43c9dc <wcrtomb@plt+0x37dbc>
  43ca2c:	cbz	x21, 43ca90 <wcrtomb@plt+0x37e70>
  43ca30:	ldrb	w0, [x21]
  43ca34:	str	w0, [sp, #120]
  43ca38:	ubfiz	x21, x0, #2, #8
  43ca3c:	b	43c9e4 <wcrtomb@plt+0x37dc4>
  43ca40:	ldr	x24, [x20]
  43ca44:	mov	w25, #0x0                   	// #0
  43ca48:	ldr	w0, [x28, #24]
  43ca4c:	ldr	w19, [x20, #8]
  43ca50:	ldr	w1, [x24, #24]
  43ca54:	and	w0, w0, #0x8
  43ca58:	stp	w0, wzr, [sp, #116]
  43ca5c:	and	w0, w1, #0x8
  43ca60:	str	w0, [sp, #112]
  43ca64:	ldr	x6, [x20, #16]
  43ca68:	cbnz	w19, 43c798 <wcrtomb@plt+0x37b78>
  43ca6c:	mov	w27, #0x0                   	// #0
  43ca70:	mov	w23, #0x0                   	// #0
  43ca74:	mov	x20, #0x0                   	// #0
  43ca78:	mov	x21, #0x0                   	// #0
  43ca7c:	str	wzr, [sp, #116]
  43ca80:	b	43c93c <wcrtomb@plt+0x37d1c>
  43ca84:	mov	x19, #0x0                   	// #0
  43ca88:	mov	w23, #0x0                   	// #0
  43ca8c:	b	43c9f4 <wcrtomb@plt+0x37dd4>
  43ca90:	mov	x21, #0x0                   	// #0
  43ca94:	str	wzr, [sp, #120]
  43ca98:	b	43c9e4 <wcrtomb@plt+0x37dc4>
  43ca9c:	nop
  43caa0:	stp	x29, x30, [sp, #-112]!
  43caa4:	mov	x29, sp
  43caa8:	stp	x23, x24, [sp, #48]
  43caac:	mov	x23, x2
  43cab0:	mov	x24, x1
  43cab4:	stp	x19, x20, [sp, #16]
  43cab8:	mov	x19, x0
  43cabc:	mov	w20, w3
  43cac0:	ldr	x3, [x23]
  43cac4:	mov	w2, #0x5                   	// #5
  43cac8:	ldr	x1, [x0, #16]
  43cacc:	stp	x21, x22, [sp, #32]
  43cad0:	ldr	x0, [x0, #48]
  43cad4:	stp	x25, x26, [sp, #64]
  43cad8:	mov	x26, x4
  43cadc:	str	x3, [sp, #96]
  43cae0:	ldr	x22, [x19, #32]
  43cae4:	bl	4049c0 <dcgettext@plt>
  43cae8:	ldr	x1, [x19, #40]
  43caec:	str	x0, [sp, #104]
  43caf0:	mov	x25, x0
  43caf4:	cbz	x1, 43cb20 <wcrtomb@plt+0x37f00>
  43caf8:	mov	x1, x24
  43cafc:	mov	x0, x19
  43cb00:	bl	440aa8 <argp_parse@@Base+0xcc8>
  43cb04:	mov	x2, x0
  43cb08:	ldr	x3, [x19, #40]
  43cb0c:	mov	w0, #0x6                   	// #6
  43cb10:	mov	x1, x25
  43cb14:	movk	w0, #0x200, lsl #16
  43cb18:	blr	x3
  43cb1c:	mov	x25, x0
  43cb20:	cbz	x25, 43cd40 <wcrtomb@plt+0x38120>
  43cb24:	mov	x0, x25
  43cb28:	mov	w1, #0xa                   	// #10
  43cb2c:	stp	x27, x28, [sp, #80]
  43cb30:	bl	4049b0 <strchrnul@plt>
  43cb34:	mov	x19, x0
  43cb38:	ldrb	w0, [x0]
  43cb3c:	cbnz	w0, 43cc60 <wcrtomb@plt+0x38040>
  43cb40:	ldp	x2, x1, [x26, #48]
  43cb44:	add	x0, x19, #0x1
  43cb48:	ldr	x5, [x26, #32]
  43cb4c:	mov	x27, x25
  43cb50:	sub	x28, x0, x27
  43cb54:	mov	w21, #0x0                   	// #0
  43cb58:	sub	x0, x1, x2
  43cb5c:	cmp	x0, x5
  43cb60:	b.hi	43ccbc <wcrtomb@plt+0x3809c>  // b.pmore
  43cb64:	ldr	x0, [x26, #40]
  43cb68:	ldr	x2, [x26, #16]
  43cb6c:	cmp	x0, #0x0
  43cb70:	csel	x0, x0, xzr, ge  // ge = tcont
  43cb74:	add	x0, x0, x28
  43cb78:	cmp	x0, x2
  43cb7c:	ldr	x0, [x26, #64]
  43cb80:	b.cc	43cce8 <wcrtomb@plt+0x380c8>  // b.lo, b.ul, b.last
  43cb84:	cmp	x1, x0
  43cb88:	b.cs	43cda4 <wcrtomb@plt+0x38184>  // b.hs, b.nlast
  43cb8c:	add	x0, x1, #0x1
  43cb90:	str	x0, [x26, #56]
  43cb94:	mov	w0, #0xa                   	// #10
  43cb98:	strb	w0, [x1]
  43cb9c:	ldp	x0, x2, [x26, #56]
  43cba0:	sub	x28, x19, x27
  43cba4:	add	x1, x0, x28
  43cba8:	cmp	x2, x1
  43cbac:	b.cs	43cbc4 <wcrtomb@plt+0x37fa4>  // b.hs, b.nlast
  43cbb0:	mov	x1, x28
  43cbb4:	mov	x0, x26
  43cbb8:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43cbbc:	cbz	w0, 43cbdc <wcrtomb@plt+0x37fbc>
  43cbc0:	ldr	x0, [x26, #56]
  43cbc4:	mov	x2, x28
  43cbc8:	mov	x1, x27
  43cbcc:	bl	403f70 <memcpy@plt>
  43cbd0:	ldr	x2, [x26, #56]
  43cbd4:	add	x2, x2, x28
  43cbd8:	str	x2, [x26, #56]
  43cbdc:	ldr	x0, [sp, #104]
  43cbe0:	cmp	x0, x25
  43cbe4:	b.ne	43cd04 <wcrtomb@plt+0x380e4>  // b.any
  43cbe8:	cbz	x22, 43cd10 <wcrtomb@plt+0x380f0>
  43cbec:	ldr	x0, [x22]
  43cbf0:	ldp	x27, x28, [sp, #80]
  43cbf4:	cbz	x0, 43cc20 <wcrtomb@plt+0x38000>
  43cbf8:	mov	w3, w20
  43cbfc:	mov	x1, x24
  43cc00:	mov	x4, x26
  43cc04:	mov	x2, x23
  43cc08:	bl	43caa0 <wcrtomb@plt+0x37e80>
  43cc0c:	mov	w1, w0
  43cc10:	ldr	x0, [x22, #32]!
  43cc14:	cmp	w1, #0x0
  43cc18:	cset	w20, eq  // eq = none
  43cc1c:	cbnz	x0, 43cbf8 <wcrtomb@plt+0x37fd8>
  43cc20:	cmp	w20, #0x0
  43cc24:	ccmp	w21, #0x0, #0x4, ne  // ne = any
  43cc28:	b.eq	43cd20 <wcrtomb@plt+0x38100>  // b.none
  43cc2c:	ldrb	w0, [x19]
  43cc30:	ldr	x2, [sp, #96]
  43cc34:	ldrb	w1, [x2]
  43cc38:	cbz	w0, 43cd58 <wcrtomb@plt+0x38138>
  43cc3c:	add	w1, w1, #0x1
  43cc40:	mov	w0, #0x1                   	// #1
  43cc44:	strb	w1, [x2]
  43cc48:	ldp	x19, x20, [sp, #16]
  43cc4c:	ldp	x21, x22, [sp, #32]
  43cc50:	ldp	x23, x24, [sp, #48]
  43cc54:	ldp	x25, x26, [sp, #64]
  43cc58:	ldp	x29, x30, [sp], #112
  43cc5c:	ret
  43cc60:	ldr	x0, [sp, #96]
  43cc64:	ldrb	w28, [x0]
  43cc68:	cbz	w28, 43cdbc <wcrtomb@plt+0x3819c>
  43cc6c:	mov	w21, #0x0                   	// #0
  43cc70:	add	x27, x19, #0x1
  43cc74:	add	w21, w21, #0x1
  43cc78:	mov	x0, x27
  43cc7c:	mov	w1, #0xa                   	// #10
  43cc80:	bl	4049b0 <strchrnul@plt>
  43cc84:	mov	x19, x0
  43cc88:	cmp	w21, w28
  43cc8c:	b.ne	43cc70 <wcrtomb@plt+0x38050>  // b.any
  43cc90:	ldr	x0, [x23]
  43cc94:	mov	w21, #0x1                   	// #1
  43cc98:	ldr	x5, [x26, #32]
  43cc9c:	add	x0, x0, #0x1
  43cca0:	str	x0, [x23]
  43cca4:	add	x0, x19, #0x1
  43cca8:	sub	x28, x0, x27
  43ccac:	ldp	x2, x1, [x26, #48]
  43ccb0:	sub	x0, x1, x2
  43ccb4:	cmp	x0, x5
  43ccb8:	b.ls	43cb64 <wcrtomb@plt+0x37f44>  // b.plast
  43ccbc:	mov	x0, x26
  43ccc0:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43ccc4:	ldr	x0, [x26, #40]
  43ccc8:	ldr	x2, [x26, #16]
  43cccc:	cmp	x0, #0x0
  43ccd0:	csel	x0, x0, xzr, ge  // ge = tcont
  43ccd4:	add	x0, x0, x28
  43ccd8:	cmp	x0, x2
  43ccdc:	ldr	x1, [x26, #56]
  43cce0:	ldr	x0, [x26, #64]
  43cce4:	b.cs	43cb84 <wcrtomb@plt+0x37f64>  // b.hs, b.nlast
  43cce8:	cmp	x1, x0
  43ccec:	b.cs	43cd7c <wcrtomb@plt+0x3815c>  // b.hs, b.nlast
  43ccf0:	add	x0, x1, #0x1
  43ccf4:	str	x0, [x26, #56]
  43ccf8:	mov	w0, #0x20                  	// #32
  43ccfc:	strb	w0, [x1]
  43cd00:	b	43cb9c <wcrtomb@plt+0x37f7c>
  43cd04:	mov	x0, x25
  43cd08:	bl	4047b0 <free@plt>
  43cd0c:	cbnz	x22, 43cbec <wcrtomb@plt+0x37fcc>
  43cd10:	cmp	w20, #0x0
  43cd14:	ccmp	w21, #0x0, #0x4, ne  // ne = any
  43cd18:	ldp	x27, x28, [sp, #80]
  43cd1c:	b.ne	43cc2c <wcrtomb@plt+0x3800c>  // b.any
  43cd20:	cmp	w20, #0x0
  43cd24:	cset	w0, eq  // eq = none
  43cd28:	ldp	x19, x20, [sp, #16]
  43cd2c:	ldp	x21, x22, [sp, #32]
  43cd30:	ldp	x23, x24, [sp, #48]
  43cd34:	ldp	x25, x26, [sp, #64]
  43cd38:	ldp	x29, x30, [sp], #112
  43cd3c:	ret
  43cd40:	cbz	x22, 43cd20 <wcrtomb@plt+0x38100>
  43cd44:	ldr	x0, [x22]
  43cd48:	mov	x19, #0x0                   	// #0
  43cd4c:	mov	w21, #0x0                   	// #0
  43cd50:	cbnz	x0, 43cbf8 <wcrtomb@plt+0x37fd8>
  43cd54:	b	43cd20 <wcrtomb@plt+0x38100>
  43cd58:	mov	w0, #0x0                   	// #0
  43cd5c:	cbz	w1, 43cc48 <wcrtomb@plt+0x38028>
  43cd60:	strb	wzr, [x2]
  43cd64:	ldp	x19, x20, [sp, #16]
  43cd68:	ldp	x21, x22, [sp, #32]
  43cd6c:	ldp	x23, x24, [sp, #48]
  43cd70:	ldp	x25, x26, [sp, #64]
  43cd74:	ldp	x29, x30, [sp], #112
  43cd78:	ret
  43cd7c:	mov	x0, x26
  43cd80:	mov	x1, #0x1                   	// #1
  43cd84:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43cd88:	cbz	w0, 43cb9c <wcrtomb@plt+0x37f7c>
  43cd8c:	ldr	x1, [x26, #56]
  43cd90:	add	x0, x1, #0x1
  43cd94:	str	x0, [x26, #56]
  43cd98:	mov	w0, #0x20                  	// #32
  43cd9c:	strb	w0, [x1]
  43cda0:	b	43cb9c <wcrtomb@plt+0x37f7c>
  43cda4:	mov	x0, x26
  43cda8:	mov	x1, #0x1                   	// #1
  43cdac:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43cdb0:	cbz	w0, 43cb9c <wcrtomb@plt+0x37f7c>
  43cdb4:	ldr	x1, [x26, #56]
  43cdb8:	b	43cb8c <wcrtomb@plt+0x37f6c>
  43cdbc:	mov	x27, x25
  43cdc0:	b	43cc90 <wcrtomb@plt+0x38070>
  43cdc4:	nop
  43cdc8:	stp	x29, x30, [sp, #-96]!
  43cdcc:	mov	x29, sp
  43cdd0:	stp	x19, x20, [sp, #16]
  43cdd4:	mov	x19, x1
  43cdd8:	mov	x1, x0
  43cddc:	stp	x21, x22, [sp, #32]
  43cde0:	mov	x22, x2
  43cde4:	mov	w2, #0x5                   	// #5
  43cde8:	ldr	x0, [x19, #48]
  43cdec:	stp	x23, x24, [sp, #48]
  43cdf0:	bl	4049c0 <dcgettext@plt>
  43cdf4:	mov	x24, x0
  43cdf8:	ldr	x1, [x19, #40]
  43cdfc:	mov	x21, x0
  43ce00:	cbz	x1, 43ce2c <wcrtomb@plt+0x3820c>
  43ce04:	ldr	x1, [x22, #32]
  43ce08:	mov	x0, x19
  43ce0c:	bl	440aa8 <argp_parse@@Base+0xcc8>
  43ce10:	mov	x2, x0
  43ce14:	ldr	x3, [x19, #40]
  43ce18:	mov	w0, #0x3                   	// #3
  43ce1c:	mov	x1, x24
  43ce20:	movk	w0, #0x200, lsl #16
  43ce24:	blr	x3
  43ce28:	mov	x21, x0
  43ce2c:	cbz	x21, 43ce44 <wcrtomb@plt+0x38224>
  43ce30:	ldrb	w1, [x21]
  43ce34:	ldr	x0, [x22, #16]
  43ce38:	cbnz	w1, 43ce64 <wcrtomb@plt+0x38244>
  43ce3c:	mov	w1, #0x1                   	// #1
  43ce40:	str	w1, [x0, #8]
  43ce44:	cmp	x24, x21
  43ce48:	b.eq	43cfb8 <wcrtomb@plt+0x38398>  // b.none
  43ce4c:	mov	x0, x21
  43ce50:	ldp	x19, x20, [sp, #16]
  43ce54:	ldp	x21, x22, [sp, #32]
  43ce58:	ldp	x23, x24, [sp, #48]
  43ce5c:	ldp	x29, x30, [sp], #96
  43ce60:	b	4047b0 <free@plt>
  43ce64:	ldr	x0, [x0]
  43ce68:	stp	x25, x26, [sp, #64]
  43ce6c:	ldr	x19, [x22, #8]
  43ce70:	stp	x27, x28, [sp, #80]
  43ce74:	ldr	x20, [x19, #56]
  43ce78:	cbz	x0, 43ceb4 <wcrtomb@plt+0x38294>
  43ce7c:	ldr	x0, [x19, #64]
  43ce80:	cmp	x0, x20
  43ce84:	b.hi	43ce9c <wcrtomb@plt+0x3827c>  // b.pmore
  43ce88:	mov	x0, x19
  43ce8c:	mov	x1, #0x1                   	// #1
  43ce90:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43ce94:	cbz	w0, 43ceac <wcrtomb@plt+0x3828c>
  43ce98:	ldr	x20, [x19, #56]
  43ce9c:	add	x0, x20, #0x1
  43cea0:	str	x0, [x19, #56]
  43cea4:	mov	w0, #0xa                   	// #10
  43cea8:	strb	w0, [x20]
  43ceac:	ldr	x19, [x22, #8]
  43ceb0:	ldr	x20, [x19, #56]
  43ceb4:	adrp	x25, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43ceb8:	ldr	x0, [x19, #48]
  43cebc:	add	x25, x25, #0x3e8
  43cec0:	ldr	x1, [x19, #32]
  43cec4:	sub	x0, x20, x0
  43cec8:	ldr	w26, [x25, #24]
  43cecc:	cmp	x0, x1
  43ced0:	b.hi	43cff8 <wcrtomb@plt+0x383d8>  // b.pmore
  43ced4:	ldr	x23, [x19, #40]
  43ced8:	cmp	x23, #0x0
  43cedc:	csel	x23, x23, xzr, ge  // ge = tcont
  43cee0:	sub	w23, w26, w23
  43cee4:	cmp	w23, #0x0
  43cee8:	sub	w23, w23, #0x1
  43ceec:	b.le	43d0b0 <wcrtomb@plt+0x38490>
  43cef0:	mov	w26, #0x20                  	// #32
  43cef4:	b	43cefc <wcrtomb@plt+0x382dc>
  43cef8:	ldr	x20, [x19, #56]
  43cefc:	mov	x0, x19
  43cf00:	ldr	x2, [x19, #64]
  43cf04:	mov	x1, #0x1                   	// #1
  43cf08:	cmp	x2, x20
  43cf0c:	b.hi	43cf1c <wcrtomb@plt+0x382fc>  // b.pmore
  43cf10:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43cf14:	cbz	w0, 43cf28 <wcrtomb@plt+0x38308>
  43cf18:	ldr	x20, [x19, #56]
  43cf1c:	add	x0, x20, #0x1
  43cf20:	str	x0, [x19, #56]
  43cf24:	strb	w26, [x20]
  43cf28:	cmp	w23, #0x0
  43cf2c:	sub	w23, w23, #0x1
  43cf30:	b.gt	43cef8 <wcrtomb@plt+0x382d8>
  43cf34:	ldr	x19, [x22, #8]
  43cf38:	ldrsw	x27, [x25, #24]
  43cf3c:	mov	x23, x19
  43cf40:	ldp	x0, x20, [x19, #48]
  43cf44:	ldr	x1, [x19, #32]
  43cf48:	sub	x0, x20, x0
  43cf4c:	cmp	x0, x1
  43cf50:	b.hi	43d070 <wcrtomb@plt+0x38450>  // b.pmore
  43cf54:	mov	x28, x19
  43cf58:	str	x27, [x19, #8]
  43cf5c:	str	x27, [x28, #24]
  43cf60:	mov	x0, x21
  43cf64:	bl	403ff0 <strlen@plt>
  43cf68:	mov	x19, x0
  43cf6c:	cbnz	x0, 43d024 <wcrtomb@plt+0x38404>
  43cf70:	ldr	x0, [x23, #48]
  43cf74:	mov	x19, x23
  43cf78:	ldr	x1, [x23, #32]
  43cf7c:	sub	x0, x20, x0
  43cf80:	cmp	x0, x1
  43cf84:	b.hi	43cfe4 <wcrtomb@plt+0x383c4>  // b.pmore
  43cf88:	ldr	x0, [x19, #64]
  43cf8c:	str	xzr, [x23, #8]
  43cf90:	cmp	x0, x20
  43cf94:	b.ls	43cfcc <wcrtomb@plt+0x383ac>  // b.plast
  43cf98:	add	x0, x20, #0x1
  43cf9c:	str	x0, [x19, #56]
  43cfa0:	mov	w0, #0xa                   	// #10
  43cfa4:	strb	w0, [x20]
  43cfa8:	ldr	x0, [x22, #16]
  43cfac:	ldp	x25, x26, [sp, #64]
  43cfb0:	ldp	x27, x28, [sp, #80]
  43cfb4:	b	43ce3c <wcrtomb@plt+0x3821c>
  43cfb8:	ldp	x19, x20, [sp, #16]
  43cfbc:	ldp	x21, x22, [sp, #32]
  43cfc0:	ldp	x23, x24, [sp, #48]
  43cfc4:	ldp	x29, x30, [sp], #96
  43cfc8:	ret
  43cfcc:	mov	x0, x19
  43cfd0:	mov	x1, #0x1                   	// #1
  43cfd4:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43cfd8:	cbz	w0, 43cfa8 <wcrtomb@plt+0x38388>
  43cfdc:	ldr	x20, [x19, #56]
  43cfe0:	b	43cf98 <wcrtomb@plt+0x38378>
  43cfe4:	mov	x0, x23
  43cfe8:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43cfec:	ldr	x19, [x22, #8]
  43cff0:	ldr	x20, [x19, #56]
  43cff4:	b	43cf88 <wcrtomb@plt+0x38368>
  43cff8:	mov	x0, x19
  43cffc:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43d000:	ldr	x23, [x19, #40]
  43d004:	cmp	x23, #0x0
  43d008:	csel	x23, x23, xzr, ge  // ge = tcont
  43d00c:	sub	w23, w26, w23
  43d010:	cmp	w23, #0x0
  43d014:	sub	w23, w23, #0x1
  43d018:	b.le	43cf34 <wcrtomb@plt+0x38314>
  43d01c:	ldr	x20, [x19, #56]
  43d020:	b	43cef0 <wcrtomb@plt+0x382d0>
  43d024:	ldr	x1, [x23, #64]
  43d028:	add	x0, x20, x0
  43d02c:	cmp	x1, x0
  43d030:	b.cs	43d048 <wcrtomb@plt+0x38428>  // b.hs, b.nlast
  43d034:	mov	x1, x19
  43d038:	mov	x0, x23
  43d03c:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d040:	cbz	w0, 43d064 <wcrtomb@plt+0x38444>
  43d044:	ldr	x20, [x23, #56]
  43d048:	mov	x0, x20
  43d04c:	mov	x2, x19
  43d050:	mov	x1, x21
  43d054:	bl	403f70 <memcpy@plt>
  43d058:	ldr	x0, [x23, #56]
  43d05c:	add	x0, x0, x19
  43d060:	str	x0, [x23, #56]
  43d064:	ldr	x23, [x22, #8]
  43d068:	ldr	x20, [x23, #56]
  43d06c:	b	43cf70 <wcrtomb@plt+0x38350>
  43d070:	mov	x0, x19
  43d074:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43d078:	ldr	x28, [x22, #8]
  43d07c:	ldr	w26, [x25, #24]
  43d080:	ldp	x0, x20, [x28, #48]
  43d084:	ldr	x1, [x28, #32]
  43d088:	str	x27, [x19, #8]
  43d08c:	sub	x0, x20, x0
  43d090:	cmp	x0, x1
  43d094:	b.ls	43d0bc <wcrtomb@plt+0x3849c>  // b.plast
  43d098:	mov	x0, x28
  43d09c:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43d0a0:	ldr	x23, [x22, #8]
  43d0a4:	sxtw	x27, w26
  43d0a8:	ldr	x20, [x23, #56]
  43d0ac:	b	43cf5c <wcrtomb@plt+0x3833c>
  43d0b0:	sxtw	x27, w26
  43d0b4:	mov	x23, x19
  43d0b8:	b	43cf54 <wcrtomb@plt+0x38334>
  43d0bc:	sxtw	x27, w26
  43d0c0:	mov	x23, x28
  43d0c4:	b	43cf5c <wcrtomb@plt+0x3833c>
  43d0c8:	stp	x29, x30, [sp, #-64]!
  43d0cc:	mov	x29, sp
  43d0d0:	stp	x19, x20, [sp, #16]
  43d0d4:	mov	w20, w0
  43d0d8:	ldr	w0, [x1, #24]
  43d0dc:	stp	x21, x22, [sp, #32]
  43d0e0:	mov	x21, x1
  43d0e4:	ldr	x19, [x1, #8]
  43d0e8:	cbz	w0, 43d1f4 <wcrtomb@plt+0x385d4>
  43d0ec:	ldr	x1, [x1]
  43d0f0:	ldr	x0, [x21, #16]
  43d0f4:	ldr	x22, [x1, #32]
  43d0f8:	str	x23, [sp, #48]
  43d0fc:	ldr	x23, [x0]
  43d100:	ldr	w0, [x0, #8]
  43d104:	cmp	w0, #0x0
  43d108:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  43d10c:	b.ne	43d1a8 <wcrtomb@plt+0x38588>  // b.any
  43d110:	cbz	x22, 43d124 <wcrtomb@plt+0x38504>
  43d114:	ldr	x0, [x22]
  43d118:	cbz	x0, 43d124 <wcrtomb@plt+0x38504>
  43d11c:	ldrb	w1, [x0]
  43d120:	cbnz	w1, 43d254 <wcrtomb@plt+0x38634>
  43d124:	ldp	x2, x0, [x19, #48]
  43d128:	ldr	x1, [x19, #32]
  43d12c:	sub	x0, x0, x2
  43d130:	ldr	x23, [sp, #48]
  43d134:	str	wzr, [x21, #24]
  43d138:	cmp	x0, x1
  43d13c:	b.hi	43d248 <wcrtomb@plt+0x38628>  // b.pmore
  43d140:	ldr	x0, [x19, #40]
  43d144:	mov	w21, #0x20                  	// #32
  43d148:	cmp	x0, #0x0
  43d14c:	csel	x0, x0, xzr, ge  // ge = tcont
  43d150:	sub	w20, w20, w0
  43d154:	cmp	w20, #0x0
  43d158:	sub	w20, w20, #0x1
  43d15c:	b.le	43d198 <wcrtomb@plt+0x38578>
  43d160:	ldp	x2, x3, [x19, #56]
  43d164:	sub	w20, w20, #0x1
  43d168:	mov	x0, x19
  43d16c:	mov	x1, #0x1                   	// #1
  43d170:	cmp	x2, x3
  43d174:	b.cc	43d184 <wcrtomb@plt+0x38564>  // b.lo, b.ul, b.last
  43d178:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d17c:	cbz	w0, 43d190 <wcrtomb@plt+0x38570>
  43d180:	ldr	x2, [x19, #56]
  43d184:	add	x0, x2, #0x1
  43d188:	str	x0, [x19, #56]
  43d18c:	strb	w21, [x2]
  43d190:	cmn	w20, #0x1
  43d194:	b.ne	43d160 <wcrtomb@plt+0x38540>  // b.any
  43d198:	ldp	x19, x20, [sp, #16]
  43d19c:	ldp	x21, x22, [sp, #32]
  43d1a0:	ldp	x29, x30, [sp], #64
  43d1a4:	ret
  43d1a8:	ldr	w1, [x1, #24]
  43d1ac:	ldr	w0, [x23, #24]
  43d1b0:	cmp	w1, w0
  43d1b4:	b.eq	43d110 <wcrtomb@plt+0x384f0>  // b.none
  43d1b8:	ldp	x0, x1, [x19, #56]
  43d1bc:	cmp	x0, x1
  43d1c0:	b.cc	43d1d8 <wcrtomb@plt+0x385b8>  // b.lo, b.ul, b.last
  43d1c4:	mov	x0, x19
  43d1c8:	mov	x1, #0x1                   	// #1
  43d1cc:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d1d0:	cbz	w0, 43d1e8 <wcrtomb@plt+0x385c8>
  43d1d4:	ldr	x0, [x19, #56]
  43d1d8:	add	x1, x0, #0x1
  43d1dc:	str	x1, [x19, #56]
  43d1e0:	mov	w1, #0xa                   	// #10
  43d1e4:	strb	w1, [x0]
  43d1e8:	ldr	x19, [x21, #8]
  43d1ec:	cbnz	x22, 43d114 <wcrtomb@plt+0x384f4>
  43d1f0:	b	43d124 <wcrtomb@plt+0x38504>
  43d1f4:	ldp	x0, x2, [x19, #56]
  43d1f8:	add	x1, x0, #0x2
  43d1fc:	cmp	x2, x1
  43d200:	b.cs	43d218 <wcrtomb@plt+0x385f8>  // b.hs, b.nlast
  43d204:	mov	x0, x19
  43d208:	mov	x1, #0x2                   	// #2
  43d20c:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d210:	cbz	w0, 43d22c <wcrtomb@plt+0x3860c>
  43d214:	ldr	x0, [x19, #56]
  43d218:	mov	w1, #0x202c                	// #8236
  43d21c:	strh	w1, [x0]
  43d220:	ldr	x0, [x19, #56]
  43d224:	add	x0, x0, #0x2
  43d228:	str	x0, [x19, #56]
  43d22c:	ldr	x19, [x21, #8]
  43d230:	ldp	x2, x0, [x19, #48]
  43d234:	ldr	x1, [x19, #32]
  43d238:	sub	x0, x0, x2
  43d23c:	cmp	x0, x1
  43d240:	b.ls	43d140 <wcrtomb@plt+0x38520>  // b.plast
  43d244:	nop
  43d248:	mov	x0, x19
  43d24c:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43d250:	b	43d140 <wcrtomb@plt+0x38520>
  43d254:	cbz	x23, 43d280 <wcrtomb@plt+0x38660>
  43d258:	ldr	x1, [x23, #32]
  43d25c:	cmp	x1, x22
  43d260:	b.eq	43d124 <wcrtomb@plt+0x38504>  // b.none
  43d264:	cbz	x1, 43d280 <wcrtomb@plt+0x38660>
  43d268:	ldr	x1, [x1, #16]
  43d26c:	cmp	x1, #0x0
  43d270:	ccmp	x22, x1, #0x4, ne  // ne = any
  43d274:	b.ne	43d268 <wcrtomb@plt+0x38648>  // b.any
  43d278:	cmp	x22, x1
  43d27c:	b.eq	43d124 <wcrtomb@plt+0x38504>  // b.none
  43d280:	ldr	x1, [x22, #24]
  43d284:	mov	x2, x21
  43d288:	ldr	x23, [x19, #24]
  43d28c:	bl	43cdc8 <wcrtomb@plt+0x381a8>
  43d290:	ldr	x22, [x21, #8]
  43d294:	mov	x19, x22
  43d298:	ldp	x2, x0, [x22, #48]
  43d29c:	ldr	x1, [x22, #32]
  43d2a0:	sub	x0, x0, x2
  43d2a4:	cmp	x0, x1
  43d2a8:	b.hi	43d2b8 <wcrtomb@plt+0x38698>  // b.pmore
  43d2ac:	sxtw	x23, w23
  43d2b0:	str	x23, [x22, #24]
  43d2b4:	b	43d130 <wcrtomb@plt+0x38510>
  43d2b8:	mov	x0, x22
  43d2bc:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43d2c0:	ldr	x19, [x21, #8]
  43d2c4:	ldp	x2, x0, [x19, #48]
  43d2c8:	ldr	x1, [x19, #32]
  43d2cc:	sub	x0, x0, x2
  43d2d0:	b	43d2ac <wcrtomb@plt+0x3868c>
  43d2d4:	nop
  43d2d8:	stp	x29, x30, [sp, #-128]!
  43d2dc:	mov	x29, sp
  43d2e0:	stp	x21, x22, [sp, #32]
  43d2e4:	ldr	w21, [x0, #8]
  43d2e8:	stp	x19, x20, [sp, #16]
  43d2ec:	stp	x23, x24, [sp, #48]
  43d2f0:	stp	x25, x26, [sp, #64]
  43d2f4:	stp	x27, x28, [sp, #80]
  43d2f8:	str	x0, [x29, #120]
  43d2fc:	cbz	w21, 43d550 <wcrtomb@plt+0x38930>
  43d300:	mov	x19, x0
  43d304:	mov	x22, x1
  43d308:	ldr	x0, [x0, #16]
  43d30c:	sub	w1, w21, #0x1
  43d310:	mov	w20, w1
  43d314:	str	w1, [x29, #96]
  43d318:	bl	403ff0 <strlen@plt>
  43d31c:	add	x0, x0, #0x10
  43d320:	mov	w1, w20
  43d324:	and	x0, x0, #0xfffffffffffffff0
  43d328:	add	x1, x1, #0x1
  43d32c:	sub	sp, sp, x0
  43d330:	ldr	x26, [x19]
  43d334:	lsl	x23, x1, #3
  43d338:	sub	x23, x23, x1
  43d33c:	mov	x0, sp
  43d340:	mov	x21, x26
  43d344:	stp	x0, x0, [x29, #104]
  43d348:	add	x23, x26, x23, lsl #3
  43d34c:	nop
  43d350:	ldr	w0, [x21, #8]
  43d354:	ldr	x24, [x21]
  43d358:	ldr	x25, [x21, #16]
  43d35c:	cbz	w0, 43d3bc <wcrtomb@plt+0x3879c>
  43d360:	sub	w0, w0, #0x1
  43d364:	mov	x19, x24
  43d368:	add	x20, x0, #0x1
  43d36c:	add	x20, x20, x20, lsl #1
  43d370:	add	x20, x24, x20, lsl #4
  43d374:	nop
  43d378:	ldr	w27, [x19, #24]
  43d37c:	tbnz	w27, #3, 43d3b0 <wcrtomb@plt+0x38790>
  43d380:	ldr	w28, [x19, #8]
  43d384:	sub	w0, w28, #0x1
  43d388:	cmp	w0, #0xfe
  43d38c:	b.hi	43d3b0 <wcrtomb@plt+0x38790>  // b.pmore
  43d390:	bl	404740 <__ctype_b_loc@plt>
  43d394:	ldr	x0, [x0]
  43d398:	ldrh	w0, [x0, w28, sxtw #1]
  43d39c:	tbz	w0, #14, 43d3b0 <wcrtomb@plt+0x38790>
  43d3a0:	ldrb	w0, [x25]
  43d3a4:	cmp	w28, w0
  43d3a8:	b.eq	43d570 <wcrtomb@plt+0x38950>  // b.none
  43d3ac:	nop
  43d3b0:	add	x19, x19, #0x30
  43d3b4:	cmp	x19, x20
  43d3b8:	b.ne	43d378 <wcrtomb@plt+0x38758>  // b.any
  43d3bc:	add	x21, x21, #0x38
  43d3c0:	cmp	x21, x23
  43d3c4:	b.ne	43d350 <wcrtomb@plt+0x38730>  // b.any
  43d3c8:	ldp	x0, x1, [x29, #104]
  43d3cc:	cmp	x0, x1
  43d3d0:	b.cc	43d6a8 <wcrtomb@plt+0x38a88>  // b.lo, b.ul, b.last
  43d3d4:	ldr	w0, [x29, #96]
  43d3d8:	adrp	x27, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43d3dc:	add	x1, x27, #0xca0
  43d3e0:	str	x1, [x29, #112]
  43d3e4:	add	x0, x0, #0x1
  43d3e8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43d3ec:	add	x1, x1, #0xc90
  43d3f0:	str	x1, [x29, #104]
  43d3f4:	lsl	x23, x0, #3
  43d3f8:	sub	x0, x23, x0
  43d3fc:	add	x23, x26, x0, lsl #3
  43d400:	ldr	w0, [x26, #8]
  43d404:	ldr	x1, [x26, #40]
  43d408:	ldr	x27, [x26]
  43d40c:	ldr	x21, [x26, #16]
  43d410:	ldr	x25, [x1, #48]
  43d414:	cbz	w0, 43d474 <wcrtomb@plt+0x38854>
  43d418:	sub	w0, w0, #0x1
  43d41c:	mov	x19, x27
  43d420:	add	x28, x0, #0x1
  43d424:	add	x28, x28, x28, lsl #1
  43d428:	add	x28, x27, x28, lsl #4
  43d42c:	nop
  43d430:	ldr	w20, [x19, #24]
  43d434:	tbnz	w20, #3, 43d468 <wcrtomb@plt+0x38848>
  43d438:	ldr	w24, [x19, #8]
  43d43c:	sub	w0, w24, #0x1
  43d440:	cmp	w0, #0xfe
  43d444:	b.hi	43d468 <wcrtomb@plt+0x38848>  // b.pmore
  43d448:	bl	404740 <__ctype_b_loc@plt>
  43d44c:	ldr	x0, [x0]
  43d450:	ldrh	w0, [x0, w24, sxtw #1]
  43d454:	tbz	w0, #14, 43d468 <wcrtomb@plt+0x38848>
  43d458:	ldrb	w0, [x21]
  43d45c:	cmp	w24, w0
  43d460:	b.eq	43d5d4 <wcrtomb@plt+0x389b4>  // b.none
  43d464:	nop
  43d468:	add	x19, x19, #0x30
  43d46c:	cmp	x19, x28
  43d470:	b.ne	43d430 <wcrtomb@plt+0x38810>  // b.any
  43d474:	add	x26, x26, #0x38
  43d478:	cmp	x26, x23
  43d47c:	b.ne	43d400 <wcrtomb@plt+0x387e0>  // b.any
  43d480:	ldr	x1, [x29, #120]
  43d484:	ldr	w0, [x1, #8]
  43d488:	ldr	x28, [x1]
  43d48c:	cbz	w0, 43d550 <wcrtomb@plt+0x38930>
  43d490:	sub	w0, w0, #0x1
  43d494:	adrp	x26, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43d498:	add	x0, x0, #0x1
  43d49c:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43d4a0:	add	x26, x26, #0xcc0
  43d4a4:	add	x25, x25, #0xcb0
  43d4a8:	lsl	x24, x0, #3
  43d4ac:	sub	x0, x24, x0
  43d4b0:	add	x24, x28, x0, lsl #3
  43d4b4:	nop
  43d4b8:	ldr	w0, [x28, #8]
  43d4bc:	ldr	x1, [x28, #40]
  43d4c0:	ldr	x27, [x28]
  43d4c4:	ldr	x23, [x1, #48]
  43d4c8:	cbz	w0, 43d544 <wcrtomb@plt+0x38924>
  43d4cc:	sub	w0, w0, #0x1
  43d4d0:	mov	x19, x27
  43d4d4:	add	x21, x0, #0x1
  43d4d8:	add	x21, x21, x21, lsl #1
  43d4dc:	add	x21, x27, x21, lsl #4
  43d4e0:	ldr	x2, [x19]
  43d4e4:	cbz	x2, 43d538 <wcrtomb@plt+0x38918>
  43d4e8:	ldr	w0, [x19, #24]
  43d4ec:	tst	x0, #0x4
  43d4f0:	csel	x27, x27, x19, ne  // ne = any
  43d4f4:	tbnz	w0, #1, 43d538 <wcrtomb@plt+0x38918>
  43d4f8:	ldr	x1, [x19, #16]
  43d4fc:	ldr	w20, [x27, #24]
  43d500:	orr	w20, w0, w20
  43d504:	and	w0, w20, #0x10
  43d508:	cbz	x1, 43d5b4 <wcrtomb@plt+0x38994>
  43d50c:	cbnz	w0, 43d538 <wcrtomb@plt+0x38918>
  43d510:	mov	w2, #0x5                   	// #5
  43d514:	mov	x0, x23
  43d518:	bl	4049c0 <dcgettext@plt>
  43d51c:	mov	x3, x0
  43d520:	ldr	x2, [x19]
  43d524:	tbz	w20, #0, 43d688 <wcrtomb@plt+0x38a68>
  43d528:	mov	x1, x25
  43d52c:	mov	x0, x22
  43d530:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43d534:	nop
  43d538:	add	x19, x19, #0x30
  43d53c:	cmp	x19, x21
  43d540:	b.ne	43d4e0 <wcrtomb@plt+0x388c0>  // b.any
  43d544:	add	x28, x28, #0x38
  43d548:	cmp	x28, x24
  43d54c:	b.ne	43d4b8 <wcrtomb@plt+0x38898>  // b.any
  43d550:	mov	sp, x29
  43d554:	ldp	x19, x20, [sp, #16]
  43d558:	ldp	x21, x22, [sp, #32]
  43d55c:	ldp	x23, x24, [sp, #48]
  43d560:	ldp	x25, x26, [sp, #64]
  43d564:	ldp	x27, x28, [sp, #80]
  43d568:	ldp	x29, x30, [sp], #128
  43d56c:	ret
  43d570:	tst	x27, #0x4
  43d574:	csel	x24, x24, x19, ne  // ne = any
  43d578:	tbnz	w27, #1, 43d584 <wcrtomb@plt+0x38964>
  43d57c:	ldr	x0, [x19, #16]
  43d580:	cbz	x0, 43d58c <wcrtomb@plt+0x3896c>
  43d584:	add	x25, x25, #0x1
  43d588:	b	43d3b0 <wcrtomb@plt+0x38790>
  43d58c:	ldr	x0, [x24, #16]
  43d590:	cbnz	x0, 43d584 <wcrtomb@plt+0x38964>
  43d594:	ldr	w0, [x24, #24]
  43d598:	orr	w27, w27, w0
  43d59c:	tbnz	w27, #4, 43d584 <wcrtomb@plt+0x38964>
  43d5a0:	ldr	x0, [x29, #112]
  43d5a4:	add	x25, x25, #0x1
  43d5a8:	strb	w28, [x0], #1
  43d5ac:	str	x0, [x29, #112]
  43d5b0:	b	43d3b0 <wcrtomb@plt+0x38790>
  43d5b4:	cbnz	w0, 43d538 <wcrtomb@plt+0x38918>
  43d5b8:	ldr	x1, [x27, #16]
  43d5bc:	cbnz	x1, 43d510 <wcrtomb@plt+0x388f0>
  43d5c0:	mov	x0, x22
  43d5c4:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43d5c8:	add	x1, x1, #0xcd0
  43d5cc:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43d5d0:	b	43d538 <wcrtomb@plt+0x38918>
  43d5d4:	tst	x20, #0x4
  43d5d8:	csel	x27, x27, x19, ne  // ne = any
  43d5dc:	tbnz	w20, #1, 43d5f4 <wcrtomb@plt+0x389d4>
  43d5e0:	ldr	x1, [x19, #16]
  43d5e4:	cbz	x1, 43d698 <wcrtomb@plt+0x38a78>
  43d5e8:	ldr	w0, [x27, #24]
  43d5ec:	orr	w20, w20, w0
  43d5f0:	tbz	w20, #4, 43d5fc <wcrtomb@plt+0x389dc>
  43d5f4:	add	x21, x21, #0x1
  43d5f8:	b	43d468 <wcrtomb@plt+0x38848>
  43d5fc:	mov	x0, x25
  43d600:	mov	w2, #0x5                   	// #5
  43d604:	bl	4049c0 <dcgettext@plt>
  43d608:	mov	x3, x0
  43d60c:	tbnz	w20, #0, 43d6dc <wcrtomb@plt+0x38abc>
  43d610:	str	x0, [x29, #96]
  43d614:	bl	403ff0 <strlen@plt>
  43d618:	ldp	x1, x2, [x22, #48]
  43d61c:	mov	x20, x0
  43d620:	ldr	x0, [x22, #32]
  43d624:	ldr	x3, [x29, #96]
  43d628:	sub	x1, x2, x1
  43d62c:	cmp	x1, x0
  43d630:	b.hi	43d710 <wcrtomb@plt+0x38af0>  // b.pmore
  43d634:	ldr	x1, [x22, #40]
  43d638:	ldr	x0, [x22, #16]
  43d63c:	cmp	x1, #0x0
  43d640:	csel	x1, x1, xzr, ge  // ge = tcont
  43d644:	add	x1, x1, #0x6
  43d648:	add	x1, x1, x20
  43d64c:	cmp	x1, x0
  43d650:	ldr	x0, [x22, #64]
  43d654:	b.cc	43d6f4 <wcrtomb@plt+0x38ad4>  // b.lo, b.ul, b.last
  43d658:	cmp	x2, x0
  43d65c:	b.cs	43d744 <wcrtomb@plt+0x38b24>  // b.hs, b.nlast
  43d660:	add	x0, x2, #0x1
  43d664:	str	x0, [x22, #56]
  43d668:	mov	w0, #0xa                   	// #10
  43d66c:	strb	w0, [x2]
  43d670:	ldr	w2, [x19, #8]
  43d674:	mov	x0, x22
  43d678:	ldr	x1, [x29, #112]
  43d67c:	add	x21, x21, #0x1
  43d680:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43d684:	b	43d468 <wcrtomb@plt+0x38848>
  43d688:	mov	x1, x26
  43d68c:	mov	x0, x22
  43d690:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43d694:	b	43d538 <wcrtomb@plt+0x38918>
  43d698:	ldr	x1, [x27, #16]
  43d69c:	cbnz	x1, 43d5e8 <wcrtomb@plt+0x389c8>
  43d6a0:	add	x21, x21, #0x1
  43d6a4:	b	43d468 <wcrtomb@plt+0x38848>
  43d6a8:	strb	wzr, [x1]
  43d6ac:	mov	x2, x0
  43d6b0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43d6b4:	mov	x0, x22
  43d6b8:	add	x1, x1, #0xc88
  43d6bc:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43d6c0:	ldr	x0, [x29, #120]
  43d6c4:	ldr	w21, [x0, #8]
  43d6c8:	cbz	w21, 43d550 <wcrtomb@plt+0x38930>
  43d6cc:	ldr	x26, [x0]
  43d6d0:	sub	w0, w21, #0x1
  43d6d4:	str	w0, [x29, #96]
  43d6d8:	b	43d3d4 <wcrtomb@plt+0x387b4>
  43d6dc:	ldr	w2, [x19, #8]
  43d6e0:	mov	x0, x22
  43d6e4:	ldr	x1, [x29, #104]
  43d6e8:	add	x21, x21, #0x1
  43d6ec:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43d6f0:	b	43d468 <wcrtomb@plt+0x38848>
  43d6f4:	cmp	x2, x0
  43d6f8:	b.cs	43d724 <wcrtomb@plt+0x38b04>  // b.hs, b.nlast
  43d6fc:	add	x0, x2, #0x1
  43d700:	str	x0, [x22, #56]
  43d704:	mov	w0, #0x20                  	// #32
  43d708:	strb	w0, [x2]
  43d70c:	b	43d670 <wcrtomb@plt+0x38a50>
  43d710:	mov	x0, x22
  43d714:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43d718:	ldr	x2, [x22, #56]
  43d71c:	ldr	x3, [x29, #96]
  43d720:	b	43d634 <wcrtomb@plt+0x38a14>
  43d724:	mov	x0, x22
  43d728:	mov	x1, #0x1                   	// #1
  43d72c:	str	x3, [x29, #96]
  43d730:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d734:	ldr	x3, [x29, #96]
  43d738:	cbz	w0, 43d670 <wcrtomb@plt+0x38a50>
  43d73c:	ldr	x2, [x22, #56]
  43d740:	b	43d6fc <wcrtomb@plt+0x38adc>
  43d744:	mov	x0, x22
  43d748:	mov	x1, #0x1                   	// #1
  43d74c:	str	x3, [x29, #96]
  43d750:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d754:	ldr	x3, [x29, #96]
  43d758:	cbz	w0, 43d670 <wcrtomb@plt+0x38a50>
  43d75c:	ldr	x2, [x22, #56]
  43d760:	b	43d660 <wcrtomb@plt+0x38a40>
  43d764:	nop
  43d768:	stp	x29, x30, [sp, #-128]!
  43d76c:	mov	x29, sp
  43d770:	stp	x19, x20, [sp, #16]
  43d774:	mov	x20, x0
  43d778:	mov	x19, x5
  43d77c:	stp	x25, x26, [sp, #64]
  43d780:	mov	x26, x1
  43d784:	mov	w25, w3
  43d788:	ldr	x1, [x0, #24]
  43d78c:	stp	x21, x22, [sp, #32]
  43d790:	ldr	x0, [x0, #48]
  43d794:	stp	x23, x24, [sp, #48]
  43d798:	mov	w23, w2
  43d79c:	mov	w2, #0x5                   	// #5
  43d7a0:	stp	x27, x28, [sp, #80]
  43d7a4:	mov	w27, w4
  43d7a8:	bl	4049c0 <dcgettext@plt>
  43d7ac:	mov	x21, x0
  43d7b0:	ldr	x22, [x20, #32]
  43d7b4:	cbz	x0, 43db38 <wcrtomb@plt+0x38f18>
  43d7b8:	mov	w1, #0xb                   	// #11
  43d7bc:	bl	404870 <strchr@plt>
  43d7c0:	ldr	x3, [x20, #40]
  43d7c4:	cbnz	w23, 43d9dc <wcrtomb@plt+0x38dbc>
  43d7c8:	cbz	x0, 43d9e4 <wcrtomb@plt+0x38dc4>
  43d7cc:	subs	x6, x0, x21
  43d7d0:	cset	w5, ne  // ne = any
  43d7d4:	cbz	x3, 43dc3c <wcrtomb@plt+0x3901c>
  43d7d8:	cbz	x6, 43d7fc <wcrtomb@plt+0x38bdc>
  43d7dc:	mov	x0, x21
  43d7e0:	mov	x1, x6
  43d7e4:	str	x6, [sp, #104]
  43d7e8:	str	w5, [sp, #112]
  43d7ec:	bl	404850 <strndup@plt>
  43d7f0:	ldr	w5, [sp, #112]
  43d7f4:	mov	x21, x0
  43d7f8:	ldr	x6, [sp, #104]
  43d7fc:	mov	x1, x26
  43d800:	mov	x0, x20
  43d804:	str	w5, [sp, #104]
  43d808:	str	x6, [sp, #120]
  43d80c:	bl	440aa8 <argp_parse@@Base+0xcc8>
  43d810:	ldr	w5, [sp, #104]
  43d814:	cmp	x21, #0x0
  43d818:	ldr	x3, [x20, #40]
  43d81c:	csel	w1, w5, wzr, ne  // ne = any
  43d820:	mov	x24, x0
  43d824:	mov	w0, #0x1                   	// #1
  43d828:	mov	x2, x24
  43d82c:	movk	w0, #0x200, lsl #16
  43d830:	str	w1, [sp, #104]
  43d834:	mov	x1, x21
  43d838:	str	w5, [sp, #112]
  43d83c:	blr	x3
  43d840:	ldr	w5, [sp, #112]
  43d844:	mov	x28, x0
  43d848:	ldr	x6, [sp, #120]
  43d84c:	cbz	x0, 43dc4c <wcrtomb@plt+0x3902c>
  43d850:	cmp	x21, x28
  43d854:	csel	w5, w5, wzr, eq  // eq = none
  43d858:	ldr	x3, [x19, #56]
  43d85c:	cbnz	w25, 43da34 <wcrtomb@plt+0x38e14>
  43d860:	cbz	w5, 43da58 <wcrtomb@plt+0x38e38>
  43d864:	ldr	x1, [x19, #64]
  43d868:	add	x0, x3, x6
  43d86c:	cmp	x1, x0
  43d870:	b.cs	43dac0 <wcrtomb@plt+0x38ea0>  // b.hs, b.nlast
  43d874:	mov	x1, x6
  43d878:	mov	x0, x19
  43d87c:	str	x6, [sp, #112]
  43d880:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43d884:	ldr	x3, [x19, #56]
  43d888:	ldr	x6, [sp, #112]
  43d88c:	cbnz	w0, 43dac0 <wcrtomb@plt+0x38ea0>
  43d890:	ldr	x1, [x19, #48]
  43d894:	ldr	x0, [x19, #32]
  43d898:	sub	x3, x3, x1
  43d89c:	cmp	x3, x0
  43d8a0:	b.hi	43daf8 <wcrtomb@plt+0x38ed8>  // b.pmore
  43d8a4:	ldr	x0, [x19, #40]
  43d8a8:	ldr	x1, [x19, #8]
  43d8ac:	cmp	x0, #0x0
  43d8b0:	csel	x0, x0, xzr, ge  // ge = tcont
  43d8b4:	cmp	x1, x0
  43d8b8:	b.cc	43db18 <wcrtomb@plt+0x38ef8>  // b.lo, b.ul, b.last
  43d8bc:	cmp	x21, x28
  43d8c0:	b.eq	43d8cc <wcrtomb@plt+0x38cac>  // b.none
  43d8c4:	mov	x0, x28
  43d8c8:	bl	4047b0 <free@plt>
  43d8cc:	ldr	w0, [sp, #104]
  43d8d0:	mov	w28, #0x1                   	// #1
  43d8d4:	cbz	w0, 43d8e8 <wcrtomb@plt+0x38cc8>
  43d8d8:	ldr	x0, [x20, #40]
  43d8dc:	cbz	x0, 43d960 <wcrtomb@plt+0x38d40>
  43d8e0:	mov	x0, x21
  43d8e4:	bl	4047b0 <free@plt>
  43d8e8:	cbz	w23, 43d960 <wcrtomb@plt+0x38d40>
  43d8ec:	ldr	x3, [x20, #40]
  43d8f0:	cbz	x3, 43d960 <wcrtomb@plt+0x38d40>
  43d8f4:	mov	w0, #0x4                   	// #4
  43d8f8:	mov	x2, x24
  43d8fc:	movk	w0, #0x200, lsl #16
  43d900:	mov	x1, #0x0                   	// #0
  43d904:	blr	x3
  43d908:	mov	x20, x0
  43d90c:	cbz	x0, 43d960 <wcrtomb@plt+0x38d40>
  43d910:	orr	w6, w25, w28
  43d914:	cbnz	w6, 43dbdc <wcrtomb@plt+0x38fbc>
  43d918:	mov	x0, x20
  43d91c:	bl	403ff0 <strlen@plt>
  43d920:	mov	x21, x0
  43d924:	cbnz	x0, 43dbfc <wcrtomb@plt+0x38fdc>
  43d928:	mov	x0, x20
  43d92c:	bl	4047b0 <free@plt>
  43d930:	ldp	x2, x0, [x19, #48]
  43d934:	ldr	x1, [x19, #32]
  43d938:	sub	x0, x0, x2
  43d93c:	cmp	x0, x1
  43d940:	b.hi	43dbd0 <wcrtomb@plt+0x38fb0>  // b.pmore
  43d944:	ldr	x0, [x19, #40]
  43d948:	ldr	x1, [x19, #8]
  43d94c:	cmp	x0, #0x0
  43d950:	csel	x0, x0, xzr, ge  // ge = tcont
  43d954:	cmp	x1, x0
  43d958:	b.cc	43dbac <wcrtomb@plt+0x38f8c>  // b.lo, b.ul, b.last
  43d95c:	mov	w28, #0x1                   	// #1
  43d960:	cbz	x22, 43d9bc <wcrtomb@plt+0x38d9c>
  43d964:	ldr	x0, [x22]
  43d968:	cbz	x0, 43d9bc <wcrtomb@plt+0x38d9c>
  43d96c:	eor	w2, w27, #0x1
  43d970:	eor	w1, w28, #0x1
  43d974:	and	w20, w2, #0x1
  43d978:	orr	w1, w1, w2
  43d97c:	tbz	w1, #0, 43dc74 <wcrtomb@plt+0x39054>
  43d980:	orr	w1, w25, w28
  43d984:	mov	x5, x19
  43d988:	cmp	w1, #0x0
  43d98c:	mov	w4, w27
  43d990:	cset	w3, ne  // ne = any
  43d994:	mov	x1, x26
  43d998:	mov	w2, w23
  43d99c:	bl	43d768 <wcrtomb@plt+0x38b48>
  43d9a0:	mov	w1, w0
  43d9a4:	ldr	x0, [x22, #32]!
  43d9a8:	orr	w28, w28, w1
  43d9ac:	cmp	w28, #0x0
  43d9b0:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  43d9b4:	cbz	x0, 43d9bc <wcrtomb@plt+0x38d9c>
  43d9b8:	b.ne	43d980 <wcrtomb@plt+0x38d60>  // b.any
  43d9bc:	mov	w0, w28
  43d9c0:	ldp	x19, x20, [sp, #16]
  43d9c4:	ldp	x21, x22, [sp, #32]
  43d9c8:	ldp	x23, x24, [sp, #48]
  43d9cc:	ldp	x25, x26, [sp, #64]
  43d9d0:	ldp	x27, x28, [sp, #80]
  43d9d4:	ldp	x29, x30, [sp], #128
  43d9d8:	ret
  43d9dc:	add	x21, x0, #0x1
  43d9e0:	cbz	x0, 43dc64 <wcrtomb@plt+0x39044>
  43d9e4:	mov	w5, #0x0                   	// #0
  43d9e8:	mov	x6, #0x0                   	// #0
  43d9ec:	cbz	x3, 43dc3c <wcrtomb@plt+0x3901c>
  43d9f0:	mov	x1, x26
  43d9f4:	mov	x0, x20
  43d9f8:	bl	440aa8 <argp_parse@@Base+0xcc8>
  43d9fc:	mov	x2, x0
  43da00:	ldr	x3, [x20, #40]
  43da04:	mov	x24, x0
  43da08:	mov	w0, #0x1                   	// #1
  43da0c:	mov	x1, x21
  43da10:	movk	w0, #0x200, lsl #16
  43da14:	add	w0, w23, w0
  43da18:	blr	x3
  43da1c:	mov	x28, x0
  43da20:	cbz	x0, 43dc5c <wcrtomb@plt+0x3903c>
  43da24:	mov	x6, #0x0                   	// #0
  43da28:	mov	w5, #0x0                   	// #0
  43da2c:	str	wzr, [sp, #104]
  43da30:	b	43d850 <wcrtomb@plt+0x38c30>
  43da34:	ldr	x0, [x19, #64]
  43da38:	cmp	x0, x3
  43da3c:	b.ls	43db70 <wcrtomb@plt+0x38f50>  // b.plast
  43da40:	add	x0, x3, #0x1
  43da44:	str	x0, [x19, #56]
  43da48:	mov	w0, #0xa                   	// #10
  43da4c:	strb	w0, [x3]
  43da50:	ldr	x3, [x19, #56]
  43da54:	cbnz	w5, 43d864 <wcrtomb@plt+0x38c44>
  43da58:	mov	x0, x28
  43da5c:	str	x3, [sp, #112]
  43da60:	bl	403ff0 <strlen@plt>
  43da64:	mov	x2, x0
  43da68:	ldr	x3, [sp, #112]
  43da6c:	cbz	x0, 43d890 <wcrtomb@plt+0x38c70>
  43da70:	ldr	x1, [x19, #64]
  43da74:	add	x0, x3, x0
  43da78:	cmp	x1, x0
  43da7c:	b.cs	43da9c <wcrtomb@plt+0x38e7c>  // b.hs, b.nlast
  43da80:	mov	x1, x2
  43da84:	mov	x0, x19
  43da88:	str	x2, [sp, #112]
  43da8c:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43da90:	ldr	x3, [x19, #56]
  43da94:	ldr	x2, [sp, #112]
  43da98:	cbz	w0, 43d890 <wcrtomb@plt+0x38c70>
  43da9c:	mov	x0, x3
  43daa0:	mov	x1, x28
  43daa4:	str	x2, [sp, #112]
  43daa8:	bl	403f70 <memcpy@plt>
  43daac:	ldr	x3, [x19, #56]
  43dab0:	ldr	x2, [sp, #112]
  43dab4:	add	x3, x3, x2
  43dab8:	str	x3, [x19, #56]
  43dabc:	b	43d890 <wcrtomb@plt+0x38c70>
  43dac0:	mov	x0, x3
  43dac4:	mov	x2, x6
  43dac8:	mov	x1, x21
  43dacc:	str	x6, [sp, #112]
  43dad0:	bl	403f70 <memcpy@plt>
  43dad4:	ldr	x3, [x19, #56]
  43dad8:	ldr	x6, [sp, #112]
  43dadc:	ldr	x1, [x19, #48]
  43dae0:	add	x3, x3, x6
  43dae4:	ldr	x0, [x19, #32]
  43dae8:	str	x3, [x19, #56]
  43daec:	sub	x3, x3, x1
  43daf0:	cmp	x3, x0
  43daf4:	b.ls	43d8a4 <wcrtomb@plt+0x38c84>  // b.plast
  43daf8:	mov	x0, x19
  43dafc:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43db00:	ldr	x0, [x19, #40]
  43db04:	ldr	x1, [x19, #8]
  43db08:	cmp	x0, #0x0
  43db0c:	csel	x0, x0, xzr, ge  // ge = tcont
  43db10:	cmp	x1, x0
  43db14:	b.cs	43d8bc <wcrtomb@plt+0x38c9c>  // b.hs, b.nlast
  43db18:	ldp	x0, x1, [x19, #56]
  43db1c:	cmp	x0, x1
  43db20:	b.cs	43db48 <wcrtomb@plt+0x38f28>  // b.hs, b.nlast
  43db24:	add	x1, x0, #0x1
  43db28:	str	x1, [x19, #56]
  43db2c:	mov	w1, #0xa                   	// #10
  43db30:	strb	w1, [x0]
  43db34:	b	43d8bc <wcrtomb@plt+0x38c9c>
  43db38:	ldr	x0, [x20, #40]
  43db3c:	cbnz	x0, 43d9f0 <wcrtomb@plt+0x38dd0>
  43db40:	mov	w28, #0x0                   	// #0
  43db44:	b	43d960 <wcrtomb@plt+0x38d40>
  43db48:	mov	x0, x19
  43db4c:	mov	x1, #0x1                   	// #1
  43db50:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43db54:	cbz	w0, 43d8bc <wcrtomb@plt+0x38c9c>
  43db58:	ldr	x0, [x19, #56]
  43db5c:	add	x1, x0, #0x1
  43db60:	str	x1, [x19, #56]
  43db64:	mov	w1, #0xa                   	// #10
  43db68:	strb	w1, [x0]
  43db6c:	b	43d8bc <wcrtomb@plt+0x38c9c>
  43db70:	mov	x0, x19
  43db74:	mov	x1, #0x1                   	// #1
  43db78:	str	x6, [sp, #112]
  43db7c:	str	w5, [sp, #120]
  43db80:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43db84:	ldr	w5, [sp, #120]
  43db88:	ldr	x3, [x19, #56]
  43db8c:	ldr	x6, [sp, #112]
  43db90:	cbz	w0, 43d860 <wcrtomb@plt+0x38c40>
  43db94:	add	x0, x3, #0x1
  43db98:	str	x0, [x19, #56]
  43db9c:	mov	w0, #0xa                   	// #10
  43dba0:	strb	w0, [x3]
  43dba4:	ldr	x3, [x19, #56]
  43dba8:	b	43da54 <wcrtomb@plt+0x38e34>
  43dbac:	ldp	x0, x1, [x19, #56]
  43dbb0:	cmp	x0, x1
  43dbb4:	b.cs	43dc94 <wcrtomb@plt+0x39074>  // b.hs, b.nlast
  43dbb8:	add	x1, x0, #0x1
  43dbbc:	str	x1, [x19, #56]
  43dbc0:	mov	w28, #0x1                   	// #1
  43dbc4:	mov	w1, #0xa                   	// #10
  43dbc8:	strb	w1, [x0]
  43dbcc:	b	43d960 <wcrtomb@plt+0x38d40>
  43dbd0:	mov	x0, x19
  43dbd4:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43dbd8:	b	43d944 <wcrtomb@plt+0x38d24>
  43dbdc:	ldp	x0, x1, [x19, #56]
  43dbe0:	cmp	x0, x1
  43dbe4:	b.cs	43dc7c <wcrtomb@plt+0x3905c>  // b.hs, b.nlast
  43dbe8:	add	x1, x0, #0x1
  43dbec:	str	x1, [x19, #56]
  43dbf0:	mov	w1, #0xa                   	// #10
  43dbf4:	strb	w1, [x0]
  43dbf8:	b	43d918 <wcrtomb@plt+0x38cf8>
  43dbfc:	ldp	x0, x2, [x19, #56]
  43dc00:	add	x1, x0, x21
  43dc04:	cmp	x2, x1
  43dc08:	b.cs	43dc20 <wcrtomb@plt+0x39000>  // b.hs, b.nlast
  43dc0c:	mov	x1, x21
  43dc10:	mov	x0, x19
  43dc14:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43dc18:	cbz	w0, 43d928 <wcrtomb@plt+0x38d08>
  43dc1c:	ldr	x0, [x19, #56]
  43dc20:	mov	x2, x21
  43dc24:	mov	x1, x20
  43dc28:	bl	403f70 <memcpy@plt>
  43dc2c:	ldr	x0, [x19, #56]
  43dc30:	add	x0, x0, x21
  43dc34:	str	x0, [x19, #56]
  43dc38:	b	43d928 <wcrtomb@plt+0x38d08>
  43dc3c:	mov	x28, x21
  43dc40:	mov	x24, #0x0                   	// #0
  43dc44:	str	w5, [sp, #104]
  43dc48:	b	43d858 <wcrtomb@plt+0x38c38>
  43dc4c:	ldr	w0, [sp, #104]
  43dc50:	mov	w28, #0x0                   	// #0
  43dc54:	cbnz	w0, 43d8d8 <wcrtomb@plt+0x38cb8>
  43dc58:	b	43d960 <wcrtomb@plt+0x38d40>
  43dc5c:	mov	w28, #0x0                   	// #0
  43dc60:	b	43d8e8 <wcrtomb@plt+0x38cc8>
  43dc64:	mov	x21, #0x0                   	// #0
  43dc68:	cbnz	x3, 43d9f0 <wcrtomb@plt+0x38dd0>
  43dc6c:	mov	w28, #0x0                   	// #0
  43dc70:	b	43d960 <wcrtomb@plt+0x38d40>
  43dc74:	mov	w28, #0x1                   	// #1
  43dc78:	b	43d9bc <wcrtomb@plt+0x38d9c>
  43dc7c:	mov	x0, x19
  43dc80:	mov	x1, #0x1                   	// #1
  43dc84:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43dc88:	cbz	w0, 43d918 <wcrtomb@plt+0x38cf8>
  43dc8c:	ldr	x0, [x19, #56]
  43dc90:	b	43dbe8 <wcrtomb@plt+0x38fc8>
  43dc94:	mov	x0, x19
  43dc98:	mov	x1, #0x1                   	// #1
  43dc9c:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43dca0:	cbz	w0, 43d95c <wcrtomb@plt+0x38d3c>
  43dca4:	ldr	x0, [x19, #56]
  43dca8:	b	43dbb8 <wcrtomb@plt+0x38f98>
  43dcac:	nop

000000000043dcb0 <argp_failure@@Base>:
  43dcb0:	stp	x29, x30, [sp, #-496]!
  43dcb4:	mov	x29, sp
  43dcb8:	stp	x19, x20, [sp, #16]
  43dcbc:	mov	x20, x0
  43dcc0:	stp	x21, x22, [sp, #32]
  43dcc4:	mov	w22, w2
  43dcc8:	mov	x21, x3
  43dccc:	str	x23, [sp, #48]
  43dcd0:	mov	w23, w1
  43dcd4:	str	q0, [sp, #336]
  43dcd8:	str	q1, [sp, #352]
  43dcdc:	str	q2, [sp, #368]
  43dce0:	str	q3, [sp, #384]
  43dce4:	str	q4, [sp, #400]
  43dce8:	str	q5, [sp, #416]
  43dcec:	str	q6, [sp, #432]
  43dcf0:	str	q7, [sp, #448]
  43dcf4:	stp	x4, x5, [sp, #464]
  43dcf8:	stp	x6, x7, [sp, #480]
  43dcfc:	cbz	x0, 43de48 <argp_failure@@Base+0x198>
  43dd00:	ldr	w0, [x0, #28]
  43dd04:	tbnz	w0, #1, 43de34 <argp_failure@@Base+0x184>
  43dd08:	ldr	x19, [x20, #72]
  43dd0c:	cbz	x19, 43de34 <argp_failure@@Base+0x184>
  43dd10:	mov	x0, x19
  43dd14:	bl	404090 <flockfile@plt>
  43dd18:	ldr	x0, [x20, #64]
  43dd1c:	mov	x1, x19
  43dd20:	bl	4049e0 <fputs_unlocked@plt>
  43dd24:	cbz	x21, 43dda8 <argp_failure@@Base+0xf8>
  43dd28:	ldp	x0, x4, [x19, #40]
  43dd2c:	add	x3, sp, #0x1d0
  43dd30:	add	x5, sp, #0x1f0
  43dd34:	mov	w2, #0xffffffe0            	// #-32
  43dd38:	mov	w1, #0xffffff80            	// #-128
  43dd3c:	stp	x5, x5, [sp, #104]
  43dd40:	str	x3, [sp, #120]
  43dd44:	stp	w2, w1, [sp, #128]
  43dd48:	cmp	x0, x4
  43dd4c:	b.cs	43deb8 <argp_failure@@Base+0x208>  // b.hs, b.nlast
  43dd50:	add	x1, x0, #0x1
  43dd54:	str	x1, [x19, #40]
  43dd58:	mov	w1, #0x3a                  	// #58
  43dd5c:	strb	w1, [x0]
  43dd60:	ldp	x0, x1, [x19, #40]
  43dd64:	cmp	x0, x1
  43dd68:	b.cs	43dea8 <argp_failure@@Base+0x1f8>  // b.hs, b.nlast
  43dd6c:	add	x1, x0, #0x1
  43dd70:	str	x1, [x19, #40]
  43dd74:	mov	w1, #0x20                  	// #32
  43dd78:	strb	w1, [x0]
  43dd7c:	ldp	x6, x7, [sp, #104]
  43dd80:	mov	x2, x21
  43dd84:	ldp	x4, x5, [sp, #120]
  43dd88:	add	x3, sp, #0x40
  43dd8c:	mov	x0, x19
  43dd90:	mov	w1, #0x1                   	// #1
  43dd94:	stp	x6, x7, [sp, #64]
  43dd98:	stp	x4, x5, [sp, #80]
  43dd9c:	stp	x6, x7, [sp, #136]
  43dda0:	stp	x4, x5, [sp, #152]
  43dda4:	bl	4044a0 <__vfprintf_chk@plt>
  43dda8:	ldp	x0, x1, [x19, #40]
  43ddac:	cbz	w22, 43de04 <argp_failure@@Base+0x154>
  43ddb0:	cmp	x0, x1
  43ddb4:	b.cs	43ded8 <argp_failure@@Base+0x228>  // b.hs, b.nlast
  43ddb8:	add	x1, x0, #0x1
  43ddbc:	str	x1, [x19, #40]
  43ddc0:	mov	w1, #0x3a                  	// #58
  43ddc4:	strb	w1, [x0]
  43ddc8:	ldp	x0, x1, [x19, #40]
  43ddcc:	cmp	x0, x1
  43ddd0:	b.cs	43dec8 <argp_failure@@Base+0x218>  // b.hs, b.nlast
  43ddd4:	add	x1, x0, #0x1
  43ddd8:	str	x1, [x19, #40]
  43dddc:	mov	w1, #0x20                  	// #32
  43dde0:	strb	w1, [x0]
  43dde4:	add	x1, sp, #0x88
  43dde8:	mov	w0, w22
  43ddec:	mov	x2, #0xc8                  	// #200
  43ddf0:	bl	404490 <strerror_r@plt>
  43ddf4:	cbz	x0, 43de80 <argp_failure@@Base+0x1d0>
  43ddf8:	mov	x1, x19
  43ddfc:	bl	4049e0 <fputs_unlocked@plt>
  43de00:	ldp	x0, x1, [x19, #40]
  43de04:	cmp	x1, x0
  43de08:	b.ls	43de70 <argp_failure@@Base+0x1c0>  // b.plast
  43de0c:	add	x1, x0, #0x1
  43de10:	str	x1, [x19, #40]
  43de14:	mov	w1, #0xa                   	// #10
  43de18:	strb	w1, [x0]
  43de1c:	mov	x0, x19
  43de20:	bl	404330 <funlockfile@plt>
  43de24:	cbz	w23, 43de34 <argp_failure@@Base+0x184>
  43de28:	cbz	x20, 43de68 <argp_failure@@Base+0x1b8>
  43de2c:	ldr	w0, [x20, #28]
  43de30:	tbz	w0, #5, 43de68 <argp_failure@@Base+0x1b8>
  43de34:	ldp	x19, x20, [sp, #16]
  43de38:	ldp	x21, x22, [sp, #32]
  43de3c:	ldr	x23, [sp, #48]
  43de40:	ldp	x29, x30, [sp], #496
  43de44:	ret
  43de48:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43de4c:	ldr	x19, [x0, #1176]
  43de50:	cbz	x19, 43de34 <argp_failure@@Base+0x184>
  43de54:	mov	x0, x19
  43de58:	bl	404090 <flockfile@plt>
  43de5c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43de60:	ldr	x0, [x0, #1208]
  43de64:	b	43dd1c <argp_failure@@Base+0x6c>
  43de68:	mov	w0, w23
  43de6c:	bl	404020 <exit@plt>
  43de70:	mov	x0, x19
  43de74:	mov	w1, #0xa                   	// #10
  43de78:	bl	404680 <__overflow@plt>
  43de7c:	b	43de1c <argp_failure@@Base+0x16c>
  43de80:	mov	w0, w22
  43de84:	bl	4045a0 <strerror@plt>
  43de88:	cbnz	x0, 43ddf8 <argp_failure@@Base+0x148>
  43de8c:	ldr	x0, [x20]
  43de90:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43de94:	mov	w2, #0x5                   	// #5
  43de98:	add	x1, x1, #0xcd8
  43de9c:	ldr	x0, [x0, #48]
  43dea0:	bl	4049c0 <dcgettext@plt>
  43dea4:	b	43ddf8 <argp_failure@@Base+0x148>
  43dea8:	mov	x0, x19
  43deac:	mov	w1, #0x20                  	// #32
  43deb0:	bl	404680 <__overflow@plt>
  43deb4:	b	43dd7c <argp_failure@@Base+0xcc>
  43deb8:	mov	x0, x19
  43debc:	mov	w1, #0x3a                  	// #58
  43dec0:	bl	404680 <__overflow@plt>
  43dec4:	b	43dd60 <argp_failure@@Base+0xb0>
  43dec8:	mov	x0, x19
  43decc:	mov	w1, #0x20                  	// #32
  43ded0:	bl	404680 <__overflow@plt>
  43ded4:	b	43dde4 <argp_failure@@Base+0x134>
  43ded8:	mov	x0, x19
  43dedc:	mov	w1, #0x3a                  	// #58
  43dee0:	bl	404680 <__overflow@plt>
  43dee4:	b	43ddc8 <argp_failure@@Base+0x118>
  43dee8:	stp	x29, x30, [sp, #-240]!
  43deec:	mov	x29, sp
  43def0:	stp	x19, x20, [sp, #16]
  43def4:	stp	x21, x22, [sp, #32]
  43def8:	stp	x23, x24, [sp, #48]
  43defc:	stp	x25, x26, [sp, #64]
  43df00:	stp	x27, x28, [sp, #80]
  43df04:	str	x2, [x29, #120]
  43df08:	cbz	x2, 43e370 <argp_failure@@Base+0x6c0>
  43df0c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43df10:	add	x19, x19, #0x3e8
  43df14:	mov	x22, x0
  43df18:	mov	x20, x1
  43df1c:	mov	x0, x2
  43df20:	mov	w21, w3
  43df24:	mov	x28, x4
  43df28:	bl	404090 <flockfile@plt>
  43df2c:	ldr	w0, [x19, #36]
  43df30:	cbz	w0, 43e390 <argp_failure@@Base+0x6e0>
  43df34:	ldrsw	x2, [x19, #32]
  43df38:	mov	x3, #0x0                   	// #0
  43df3c:	ldr	x0, [x29, #120]
  43df40:	mov	x1, #0x0                   	// #0
  43df44:	bl	4620e8 <_obstack_memory_used@@Base+0x10cd8>
  43df48:	mov	x27, x0
  43df4c:	cbz	x0, 43f360 <argp_failure@@Base+0x16b0>
  43df50:	mov	w0, #0xb                   	// #11
  43df54:	mov	x26, #0x0                   	// #0
  43df58:	tst	w21, w0
  43df5c:	b.ne	43e6a8 <argp_failure@@Base+0x9f8>  // b.any
  43df60:	tst	x21, #0x3
  43df64:	mov	w23, #0x0                   	// #0
  43df68:	b.ne	43e51c <argp_failure@@Base+0x86c>  // b.any
  43df6c:	tbnz	w21, #4, 43e4f0 <argp_failure@@Base+0x840>
  43df70:	and	w24, w21, #0x8
  43df74:	tbnz	w21, #2, 43e480 <argp_failure@@Base+0x7d0>
  43df78:	cbz	w24, 43e2f4 <argp_failure@@Base+0x644>
  43df7c:	ldr	w0, [x26, #8]
  43df80:	cbz	w0, 43e2f4 <argp_failure@@Base+0x644>
  43df84:	cbnz	w23, 43e4b8 <argp_failure@@Base+0x808>
  43df88:	ldr	x25, [x26]
  43df8c:	str	xzr, [x29, #184]
  43df90:	str	xzr, [x29, #192]
  43df94:	sub	w0, w0, #0x1
  43df98:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43df9c:	add	x0, x0, #0x1
  43dfa0:	add	x1, x1, #0xab8
  43dfa4:	str	x1, [x29, #96]
  43dfa8:	lsl	x2, x0, #3
  43dfac:	sub	x0, x2, x0
  43dfb0:	ldr	x1, [x27, #32]
  43dfb4:	add	x0, x25, x0, lsl #3
  43dfb8:	str	x0, [x29, #112]
  43dfbc:	ldr	x2, [x27, #48]
  43dfc0:	ldr	x0, [x27, #56]
  43dfc4:	nop
  43dfc8:	sub	x0, x0, x2
  43dfcc:	cmp	x0, x1
  43dfd0:	mov	x2, x1
  43dfd4:	ldr	x1, [x25, #16]
  43dfd8:	str	x1, [x29, #168]
  43dfdc:	ldr	x24, [x25]
  43dfe0:	b.hi	43eb48 <argp_failure@@Base+0xe98>  // b.pmore
  43dfe4:	ldr	w1, [x24, #24]
  43dfe8:	mov	w3, #0x1                   	// #1
  43dfec:	ldr	x4, [x27, #8]
  43dff0:	str	x4, [x29, #144]
  43dff4:	ldr	x4, [x27, #24]
  43dff8:	str	xzr, [x27, #8]
  43dffc:	str	x4, [x29, #136]
  43e000:	and	w4, w1, #0x8
  43e004:	str	w4, [x29, #128]
  43e008:	add	x4, x29, #0xb8
  43e00c:	stp	x25, x27, [x29, #200]
  43e010:	str	x4, [x29, #216]
  43e014:	str	w3, [x29, #224]
  43e018:	str	x20, [x29, #232]
  43e01c:	tbnz	w1, #3, 43ec20 <argp_failure@@Base+0xf70>
  43e020:	ldr	w1, [x25, #8]
  43e024:	cbz	w1, 43e05c <argp_failure@@Base+0x3ac>
  43e028:	sub	w3, w1, #0x1
  43e02c:	mov	x1, x24
  43e030:	add	x3, x3, #0x1
  43e034:	add	x3, x3, x3, lsl #1
  43e038:	add	x3, x24, x3, lsl #4
  43e03c:	nop
  43e040:	ldr	x4, [x1]
  43e044:	cbz	x4, 43e050 <argp_failure@@Base+0x3a0>
  43e048:	ldr	w4, [x1, #24]
  43e04c:	tbz	w4, #1, 43ee1c <argp_failure@@Base+0x116c>
  43e050:	add	x1, x1, #0x30
  43e054:	cmp	x1, x3
  43e058:	b.ne	43e040 <argp_failure@@Base+0x390>  // b.any
  43e05c:	ldr	w28, [x19, #8]
  43e060:	cmp	x0, x2
  43e064:	b.hi	43ec30 <argp_failure@@Base+0xf80>  // b.pmore
  43e068:	ldr	w23, [x25, #8]
  43e06c:	sxtw	x1, w28
  43e070:	str	x1, [x27, #24]
  43e074:	cbz	w23, 43e0f0 <argp_failure@@Base+0x440>
  43e078:	sub	w23, w23, #0x1
  43e07c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e080:	add	x23, x23, #0x1
  43e084:	add	x0, x0, #0xe28
  43e088:	mov	x28, x24
  43e08c:	str	x0, [x29, #104]
  43e090:	add	x23, x23, x23, lsl #1
  43e094:	add	x0, x24, x23, lsl #4
  43e098:	str	x0, [x29, #152]
  43e09c:	nop
  43e0a0:	ldr	w23, [x28, #24]
  43e0a4:	tbnz	w23, #3, 43e0e0 <argp_failure@@Base+0x430>
  43e0a8:	ldr	w1, [x28, #8]
  43e0ac:	str	w1, [x29, #160]
  43e0b0:	sub	w0, w1, #0x1
  43e0b4:	cmp	w0, #0xfe
  43e0b8:	b.hi	43e0e0 <argp_failure@@Base+0x430>  // b.pmore
  43e0bc:	bl	404740 <__ctype_b_loc@plt>
  43e0c0:	ldr	w1, [x29, #160]
  43e0c4:	ldr	x0, [x0]
  43e0c8:	ldrh	w0, [x0, w1, sxtw #1]
  43e0cc:	tbz	w0, #14, 43e0e0 <argp_failure@@Base+0x430>
  43e0d0:	ldr	x0, [x29, #168]
  43e0d4:	ldrb	w0, [x0]
  43e0d8:	cmp	w1, w0
  43e0dc:	b.eq	43e8fc <argp_failure@@Base+0xc4c>  // b.none
  43e0e0:	ldr	x0, [x29, #152]
  43e0e4:	add	x28, x28, #0x30
  43e0e8:	cmp	x28, x0
  43e0ec:	b.ne	43e0a0 <argp_failure@@Base+0x3f0>  // b.any
  43e0f0:	ldp	x3, x0, [x27, #48]
  43e0f4:	ldr	w2, [x24, #24]
  43e0f8:	ldr	x1, [x27, #32]
  43e0fc:	sub	x0, x0, x3
  43e100:	tbz	w2, #3, 43eb60 <argp_failure@@Base+0xeb0>
  43e104:	ldr	w23, [x19, #16]
  43e108:	cmp	x0, x1
  43e10c:	b.hi	43eed0 <argp_failure@@Base+0x1220>  // b.pmore
  43e110:	ldr	w0, [x25, #8]
  43e114:	sxtw	x23, w23
  43e118:	str	x23, [x27, #24]
  43e11c:	cbz	w0, 43e1e0 <argp_failure@@Base+0x530>
  43e120:	cbz	x20, 43eef0 <argp_failure@@Base+0x1240>
  43e124:	sub	w23, w0, #0x1
  43e128:	mov	x28, x24
  43e12c:	add	x23, x23, #0x1
  43e130:	add	x23, x23, x23, lsl #1
  43e134:	add	x23, x24, x23, lsl #4
  43e138:	b	43e148 <argp_failure@@Base+0x498>
  43e13c:	add	x28, x28, #0x30
  43e140:	cmp	x28, x23
  43e144:	b.eq	43e1e0 <argp_failure@@Base+0x530>  // b.none
  43e148:	ldr	x0, [x28]
  43e14c:	cbz	x0, 43e13c <argp_failure@@Base+0x48c>
  43e150:	ldr	w0, [x28, #24]
  43e154:	tbnz	w0, #1, 43e13c <argp_failure@@Base+0x48c>
  43e158:	ldr	w0, [x19, #16]
  43e15c:	add	x1, x29, #0xc8
  43e160:	bl	43d0c8 <wcrtomb@plt+0x384a8>
  43e164:	ldr	x0, [x20]
  43e168:	mov	w2, #0x5                   	// #5
  43e16c:	ldr	x1, [x28]
  43e170:	ldr	x0, [x0, #48]
  43e174:	bl	4049c0 <dcgettext@plt>
  43e178:	str	x0, [x29, #168]
  43e17c:	bl	403ff0 <strlen@plt>
  43e180:	mov	x2, x0
  43e184:	cbz	x0, 43e13c <argp_failure@@Base+0x48c>
  43e188:	ldp	x4, x7, [x27, #56]
  43e18c:	mov	x1, x0
  43e190:	mov	x0, x27
  43e194:	add	x6, x4, x2
  43e198:	cmp	x7, x6
  43e19c:	b.cs	43e1b4 <argp_failure@@Base+0x504>  // b.hs, b.nlast
  43e1a0:	str	x2, [x29, #160]
  43e1a4:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43e1a8:	cbz	w0, 43e13c <argp_failure@@Base+0x48c>
  43e1ac:	ldr	x4, [x27, #56]
  43e1b0:	ldr	x2, [x29, #160]
  43e1b4:	mov	x0, x4
  43e1b8:	ldr	x1, [x29, #168]
  43e1bc:	str	x2, [x29, #168]
  43e1c0:	add	x28, x28, #0x30
  43e1c4:	bl	403f70 <memcpy@plt>
  43e1c8:	ldr	x0, [x27, #56]
  43e1cc:	cmp	x28, x23
  43e1d0:	ldr	x2, [x29, #168]
  43e1d4:	add	x2, x0, x2
  43e1d8:	str	x2, [x27, #56]
  43e1dc:	b.ne	43e148 <argp_failure@@Base+0x498>  // b.any
  43e1e0:	ldp	x2, x0, [x27, #48]
  43e1e4:	ldr	x1, [x27, #32]
  43e1e8:	sub	x0, x0, x2
  43e1ec:	cmp	x0, x1
  43e1f0:	b.hi	43ed58 <argp_failure@@Base+0x10a8>  // b.pmore
  43e1f4:	ldr	w0, [x29, #224]
  43e1f8:	str	xzr, [x27, #8]
  43e1fc:	cbz	w0, 43e910 <argp_failure@@Base+0xc60>
  43e200:	ldr	w0, [x24, #24]
  43e204:	tbnz	w0, #3, 43e228 <argp_failure@@Base+0x578>
  43e208:	ldr	w23, [x24, #8]
  43e20c:	sub	w0, w23, #0x1
  43e210:	cmp	w0, #0xfe
  43e214:	b.hi	43e228 <argp_failure@@Base+0x578>  // b.pmore
  43e218:	bl	404740 <__ctype_b_loc@plt>
  43e21c:	ldr	x0, [x0]
  43e220:	ldrh	w0, [x0, w23, sxtw #1]
  43e224:	tbnz	w0, #14, 43e230 <argp_failure@@Base+0x580>
  43e228:	ldr	x0, [x24]
  43e22c:	cbz	x0, 43f0b4 <argp_failure@@Base+0x1404>
  43e230:	ldp	x2, x0, [x27, #48]
  43e234:	ldr	x1, [x27, #32]
  43e238:	ldrsw	x23, [x29, #144]
  43e23c:	sub	x3, x0, x2
  43e240:	cmp	x3, x1
  43e244:	b.hi	43eae4 <argp_failure@@Base+0xe34>  // b.pmore
  43e248:	str	x23, [x27, #8]
  43e24c:	ldrsw	x3, [x29, #136]
  43e250:	add	x25, x25, #0x38
  43e254:	str	x3, [x27, #24]
  43e258:	ldr	x3, [x29, #112]
  43e25c:	cmp	x25, x3
  43e260:	b.ne	43dfc8 <argp_failure@@Base+0x318>  // b.any
  43e264:	ldr	w0, [x29, #196]
  43e268:	cbz	w0, 43e2f0 <argp_failure@@Base+0x640>
  43e26c:	ldr	w0, [x19, #4]
  43e270:	cbz	w0, 43e2f0 <argp_failure@@Base+0x640>
  43e274:	cbz	x20, 43f48c <argp_failure@@Base+0x17dc>
  43e278:	ldr	x0, [x20]
  43e27c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e280:	mov	w2, #0x5                   	// #5
  43e284:	add	x1, x1, #0xe50
  43e288:	ldr	x0, [x0, #48]
  43e28c:	bl	4049c0 <dcgettext@plt>
  43e290:	mov	x24, x0
  43e294:	ldr	x23, [x20]
  43e298:	cbz	x23, 43f5c4 <argp_failure@@Base+0x1914>
  43e29c:	mov	x19, x0
  43e2a0:	ldr	x0, [x23, #40]
  43e2a4:	cbz	x0, 43e2d0 <argp_failure@@Base+0x620>
  43e2a8:	mov	x1, x20
  43e2ac:	mov	x0, x23
  43e2b0:	bl	440aa8 <argp_parse@@Base+0xcc8>
  43e2b4:	mov	x2, x0
  43e2b8:	ldr	x3, [x23, #40]
  43e2bc:	mov	w0, #0x5                   	// #5
  43e2c0:	mov	x1, x24
  43e2c4:	movk	w0, #0x200, lsl #16
  43e2c8:	blr	x3
  43e2cc:	mov	x19, x0
  43e2d0:	cbz	x19, 43e2f0 <argp_failure@@Base+0x640>
  43e2d4:	ldrb	w1, [x19]
  43e2d8:	cbnz	w1, 43f4ac <argp_failure@@Base+0x17fc>
  43e2dc:	cmp	x19, x24
  43e2e0:	b.eq	43e2f0 <argp_failure@@Base+0x640>  // b.none
  43e2e4:	mov	x0, x19
  43e2e8:	bl	4047b0 <free@plt>
  43e2ec:	nop
  43e2f0:	mov	w23, #0x1                   	// #1
  43e2f4:	tbnz	w21, #5, 43e7d8 <argp_failure@@Base+0xb28>
  43e2f8:	tbz	w21, #6, 43e330 <argp_failure@@Base+0x680>
  43e2fc:	adrp	x19, 497000 <argp_program_version_hook@@Base+0x1e0>
  43e300:	ldr	x0, [x19, #1176]
  43e304:	cbz	x0, 43e330 <argp_failure@@Base+0x680>
  43e308:	cbnz	w23, 43e8dc <argp_failure@@Base+0xc2c>
  43e30c:	ldr	x0, [x22, #48]
  43e310:	mov	w2, #0x5                   	// #5
  43e314:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e318:	add	x1, x1, #0xec8
  43e31c:	bl	4049c0 <dcgettext@plt>
  43e320:	mov	x1, x0
  43e324:	ldr	x2, [x19, #1176]
  43e328:	mov	x0, x27
  43e32c:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43e330:	ldr	x0, [x29, #120]
  43e334:	bl	404330 <funlockfile@plt>
  43e338:	cbz	x26, 43e368 <argp_failure@@Base+0x6b8>
  43e33c:	ldr	x19, [x26, #24]
  43e340:	cbz	x19, 43e358 <argp_failure@@Base+0x6a8>
  43e344:	nop
  43e348:	mov	x0, x19
  43e34c:	ldr	x19, [x19, #40]
  43e350:	bl	4047b0 <free@plt>
  43e354:	cbnz	x19, 43e348 <argp_failure@@Base+0x698>
  43e358:	ldr	w0, [x26, #8]
  43e35c:	cbnz	w0, 43f1e8 <argp_failure@@Base+0x1538>
  43e360:	mov	x0, x26
  43e364:	bl	4047b0 <free@plt>
  43e368:	mov	x0, x27
  43e36c:	bl	4626c8 <_obstack_memory_used@@Base+0x112b8>
  43e370:	mov	sp, x29
  43e374:	ldp	x19, x20, [sp, #16]
  43e378:	ldp	x21, x22, [sp, #32]
  43e37c:	ldp	x23, x24, [sp, #48]
  43e380:	ldp	x25, x26, [sp, #64]
  43e384:	ldp	x27, x28, [sp, #80]
  43e388:	ldp	x29, x30, [sp], #240
  43e38c:	ret
  43e390:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e394:	add	x0, x0, #0xcf0
  43e398:	bl	404af0 <getenv@plt>
  43e39c:	mov	x27, x0
  43e3a0:	ldp	x0, x1, [x19, #16]
  43e3a4:	stp	x0, x1, [x29, #216]
  43e3a8:	ldp	x2, x3, [x19]
  43e3ac:	stp	x2, x3, [x29, #200]
  43e3b0:	ldr	x0, [x19, #32]
  43e3b4:	str	x0, [x29, #232]
  43e3b8:	cbz	x27, 43df34 <argp_failure@@Base+0x284>
  43e3bc:	ldrb	w25, [x27]
  43e3c0:	cbz	w25, 43e410 <argp_failure@@Base+0x760>
  43e3c4:	bl	404740 <__ctype_b_loc@plt>
  43e3c8:	adrp	x24, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e3cc:	add	x1, x24, #0xee0
  43e3d0:	mov	x23, x0
  43e3d4:	mov	x0, x1
  43e3d8:	str	x1, [x29, #168]
  43e3dc:	add	x0, x0, #0x40
  43e3e0:	add	x1, x1, #0x20
  43e3e4:	stp	x0, x1, [x29, #136]
  43e3e8:	ubfiz	x0, x25, #1, #8
  43e3ec:	ldr	x3, [x23]
  43e3f0:	ldrh	w1, [x3, x0]
  43e3f4:	tbz	w1, #13, 43e408 <argp_failure@@Base+0x758>
  43e3f8:	ldrb	w25, [x27, #1]!
  43e3fc:	ubfiz	x0, x25, #1, #8
  43e400:	ldrh	w1, [x3, x0]
  43e404:	tbnz	w1, #13, 43e3f8 <argp_failure@@Base+0x748>
  43e408:	tbnz	w1, #10, 43ec3c <argp_failure@@Base+0xf8c>
  43e40c:	cbnz	w25, 43f36c <argp_failure@@Base+0x16bc>
  43e410:	ldr	w1, [x29, #208]
  43e414:	ldr	w0, [x29, #232]
  43e418:	cmp	w0, w1
  43e41c:	b.le	43f520 <argp_failure@@Base+0x1870>
  43e420:	ldr	w1, [x29, #212]
  43e424:	cmp	w0, w1
  43e428:	b.le	43f56c <argp_failure@@Base+0x18bc>
  43e42c:	ldr	w1, [x29, #216]
  43e430:	cmp	w0, w1
  43e434:	b.le	43f57c <argp_failure@@Base+0x18cc>
  43e438:	ldr	w1, [x29, #220]
  43e43c:	cmp	w0, w1
  43e440:	b.le	43f58c <argp_failure@@Base+0x18dc>
  43e444:	ldr	w1, [x29, #224]
  43e448:	cmp	w0, w1
  43e44c:	b.le	43f5a4 <argp_failure@@Base+0x18f4>
  43e450:	ldr	w1, [x29, #228]
  43e454:	cmp	w0, w1
  43e458:	b.le	43f5b4 <argp_failure@@Base+0x1904>
  43e45c:	ldr	x0, [x29, #232]
  43e460:	str	x0, [x19, #32]
  43e464:	ldp	x4, x5, [x29, #200]
  43e468:	mov	w0, #0x1                   	// #1
  43e46c:	ldp	x2, x3, [x29, #216]
  43e470:	stp	x4, x5, [x19]
  43e474:	stp	x2, x3, [x19, #16]
  43e478:	str	w0, [x19, #36]
  43e47c:	b	43df34 <argp_failure@@Base+0x284>
  43e480:	ldr	x0, [x22, #48]
  43e484:	mov	w2, #0x5                   	// #5
  43e488:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e48c:	add	x1, x1, #0xdf0
  43e490:	mov	w23, #0x1                   	// #1
  43e494:	bl	4049c0 <dcgettext@plt>
  43e498:	mov	x1, x0
  43e49c:	mov	x3, x28
  43e4a0:	mov	x2, x28
  43e4a4:	mov	x0, x27
  43e4a8:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43e4ac:	cbz	w24, 43e2f4 <argp_failure@@Base+0x644>
  43e4b0:	ldr	w0, [x26, #8]
  43e4b4:	cbz	w0, 43e2f4 <argp_failure@@Base+0x644>
  43e4b8:	ldp	x0, x1, [x27, #56]
  43e4bc:	cmp	x0, x1
  43e4c0:	b.cs	43f400 <argp_failure@@Base+0x1750>  // b.hs, b.nlast
  43e4c4:	add	x1, x0, #0x1
  43e4c8:	str	x1, [x27, #56]
  43e4cc:	mov	w1, #0xa                   	// #10
  43e4d0:	strb	w1, [x0]
  43e4d4:	ldr	w0, [x26, #8]
  43e4d8:	ldr	x25, [x26]
  43e4dc:	str	xzr, [x29, #184]
  43e4e0:	str	xzr, [x29, #192]
  43e4e4:	cbnz	w0, 43df94 <argp_failure@@Base+0x2e4>
  43e4e8:	mov	w23, #0x1                   	// #1
  43e4ec:	b	43e2f4 <argp_failure@@Base+0x644>
  43e4f0:	mov	x5, x27
  43e4f4:	mov	x1, x20
  43e4f8:	mov	x0, x22
  43e4fc:	mov	w4, #0x1                   	// #1
  43e500:	mov	w3, #0x0                   	// #0
  43e504:	mov	w2, #0x0                   	// #0
  43e508:	and	w24, w21, #0x8
  43e50c:	bl	43d768 <wcrtomb@plt+0x38b48>
  43e510:	orr	w23, w23, w0
  43e514:	tbz	w21, #2, 43df78 <argp_failure@@Base+0x2c8>
  43e518:	b	43e480 <argp_failure@@Base+0x7d0>
  43e51c:	ldr	x0, [x22, #16]
  43e520:	mov	x23, #0x0                   	// #0
  43e524:	ldr	x24, [x22, #32]
  43e528:	cbz	x0, 43e53c <argp_failure@@Base+0x88c>
  43e52c:	mov	w1, #0xa                   	// #10
  43e530:	bl	404870 <strchr@plt>
  43e534:	cmp	x0, #0x0
  43e538:	cset	x23, ne  // ne = any
  43e53c:	cbz	x24, 43e560 <argp_failure@@Base+0x8b0>
  43e540:	ldr	x1, [x24]
  43e544:	cbz	x1, 43e560 <argp_failure@@Base+0x8b0>
  43e548:	ldr	x0, [x1, #16]
  43e54c:	ldr	x1, [x1, #32]
  43e550:	bl	43bf20 <wcrtomb@plt+0x37300>
  43e554:	add	x23, x23, x0
  43e558:	ldr	x1, [x24, #32]!
  43e55c:	cbnz	x1, 43e548 <argp_failure@@Base+0x898>
  43e560:	add	x0, x23, #0xf
  43e564:	mov	w1, #0x0                   	// #0
  43e568:	and	x0, x0, #0xfffffffffffffff0
  43e56c:	mov	x2, x23
  43e570:	sub	sp, sp, x0
  43e574:	mov	w24, #0x1                   	// #1
  43e578:	mov	x0, sp
  43e57c:	str	x0, [x29, #168]
  43e580:	bl	404410 <memset@plt>
  43e584:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e588:	add	x0, x0, #0xdd8
  43e58c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e590:	add	x1, x1, #0xdd0
  43e594:	stp	x0, x1, [x29, #152]
  43e598:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e59c:	add	x0, x0, #0xdc8
  43e5a0:	str	x0, [x29, #144]
  43e5a4:	b	43e668 <argp_failure@@Base+0x9b8>
  43e5a8:	ldr	x1, [x29, #144]
  43e5ac:	bl	4049c0 <dcgettext@plt>
  43e5b0:	ldr	x1, [x29, #160]
  43e5b4:	mov	x2, x0
  43e5b8:	mov	x3, x28
  43e5bc:	mov	x0, x27
  43e5c0:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43e5c4:	ldrsw	x25, [x19, #28]
  43e5c8:	ldp	x2, x0, [x27, #48]
  43e5cc:	ldr	x1, [x27, #32]
  43e5d0:	sub	x0, x0, x2
  43e5d4:	cmp	x0, x1
  43e5d8:	b.hi	43e854 <argp_failure@@Base+0xba4>  // b.pmore
  43e5dc:	ldr	x24, [x27, #8]
  43e5e0:	str	x25, [x27, #8]
  43e5e4:	tbz	w21, #1, 43e840 <argp_failure@@Base+0xb90>
  43e5e8:	ldr	w0, [x26, #8]
  43e5ec:	cbnz	w0, 43e860 <argp_failure@@Base+0xbb0>
  43e5f0:	add	x2, x29, #0xc8
  43e5f4:	mov	x1, x20
  43e5f8:	mov	x4, x27
  43e5fc:	mov	x0, x22
  43e600:	mov	w3, #0x1                   	// #1
  43e604:	bl	43caa0 <wcrtomb@plt+0x37e80>
  43e608:	mov	w25, w0
  43e60c:	ldp	x1, x0, [x27, #48]
  43e610:	ldr	x2, [x27, #32]
  43e614:	sub	x1, x0, x1
  43e618:	cmp	x1, x2
  43e61c:	b.hi	43e808 <argp_failure@@Base+0xb58>  // b.pmore
  43e620:	sxtw	x24, w24
  43e624:	sxtw	x23, w23
  43e628:	str	x23, [x27, #24]
  43e62c:	ldr	x1, [x27, #64]
  43e630:	str	x24, [x27, #8]
  43e634:	cmp	x1, x0
  43e638:	b.hi	43e650 <argp_failure@@Base+0x9a0>  // b.pmore
  43e63c:	mov	x0, x27
  43e640:	mov	x1, #0x1                   	// #1
  43e644:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43e648:	cbz	w0, 43e660 <argp_failure@@Base+0x9b0>
  43e64c:	ldr	x0, [x27, #56]
  43e650:	add	x1, x0, #0x1
  43e654:	str	x1, [x27, #56]
  43e658:	mov	w1, #0xa                   	// #10
  43e65c:	strb	w1, [x0]
  43e660:	mov	w24, #0x0                   	// #0
  43e664:	cbz	w25, 43e8d0 <argp_failure@@Base+0xc20>
  43e668:	ldp	x2, x0, [x27, #48]
  43e66c:	ldr	x1, [x27, #32]
  43e670:	ldr	w23, [x19, #28]
  43e674:	sub	x0, x0, x2
  43e678:	cmp	x0, x1
  43e67c:	b.hi	43e7fc <argp_failure@@Base+0xb4c>  // b.pmore
  43e680:	sxtw	x0, w23
  43e684:	mov	w2, #0x5                   	// #5
  43e688:	ldr	x23, [x27, #24]
  43e68c:	str	x0, [x27, #24]
  43e690:	ldr	x0, [x29, #168]
  43e694:	str	x0, [x29, #200]
  43e698:	ldr	x0, [x22, #48]
  43e69c:	cbnz	w24, 43e5a8 <argp_failure@@Base+0x8f8>
  43e6a0:	ldr	x1, [x29, #152]
  43e6a4:	b	43e5ac <argp_failure@@Base+0x8fc>
  43e6a8:	mov	x1, #0x0                   	// #0
  43e6ac:	mov	x0, x22
  43e6b0:	bl	43bf80 <wcrtomb@plt+0x37360>
  43e6b4:	mov	x26, x0
  43e6b8:	ldr	w1, [x0, #8]
  43e6bc:	str	w1, [x29, #136]
  43e6c0:	ldr	x2, [x26]
  43e6c4:	str	x2, [x29, #152]
  43e6c8:	sub	w0, w1, #0x1
  43e6cc:	cbz	w1, 43df60 <argp_failure@@Base+0x2b0>
  43e6d0:	add	x1, x0, #0x1
  43e6d4:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e6d8:	str	x0, [x29, #144]
  43e6dc:	add	x0, x25, #0xdb8
  43e6e0:	str	x0, [x29, #168]
  43e6e4:	lsl	x0, x1, #3
  43e6e8:	sub	x0, x0, x1
  43e6ec:	mov	x24, x2
  43e6f0:	add	x0, x2, x0, lsl #3
  43e6f4:	str	x0, [x29, #160]
  43e6f8:	ldr	w0, [x24, #8]
  43e6fc:	ldr	x25, [x24]
  43e700:	sub	w23, w0, #0x1
  43e704:	cbz	w0, 43e740 <argp_failure@@Base+0xa90>
  43e708:	add	x23, x23, #0x1
  43e70c:	add	x23, x23, x23, lsl #1
  43e710:	add	x23, x25, x23, lsl #4
  43e714:	nop
  43e718:	ldr	x0, [x25]
  43e71c:	cbz	x0, 43e734 <argp_failure@@Base+0xa84>
  43e720:	ldr	w3, [x25, #24]
  43e724:	ldr	x1, [x29, #168]
  43e728:	tbnz	w3, #1, 43e734 <argp_failure@@Base+0xa84>
  43e72c:	bl	404710 <strcmp@plt>
  43e730:	cbz	w0, 43f094 <argp_failure@@Base+0x13e4>
  43e734:	add	x25, x25, #0x30
  43e738:	cmp	x25, x23
  43e73c:	b.ne	43e718 <argp_failure@@Base+0xa68>  // b.any
  43e740:	ldr	x0, [x29, #160]
  43e744:	add	x24, x24, #0x38
  43e748:	cmp	x24, x0
  43e74c:	b.ne	43e6f8 <argp_failure@@Base+0xa48>  // b.any
  43e750:	ldp	x0, x2, [x29, #144]
  43e754:	adrp	x25, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e758:	add	x1, x0, #0x1
  43e75c:	add	x0, x25, #0xdc0
  43e760:	str	x0, [x29, #168]
  43e764:	mov	x24, x2
  43e768:	lsl	x0, x1, #3
  43e76c:	sub	x0, x0, x1
  43e770:	add	x0, x2, x0, lsl #3
  43e774:	str	x0, [x29, #160]
  43e778:	ldr	w0, [x24, #8]
  43e77c:	ldr	x25, [x24]
  43e780:	sub	w23, w0, #0x1
  43e784:	cbz	w0, 43e7c0 <argp_failure@@Base+0xb10>
  43e788:	add	x23, x23, #0x1
  43e78c:	add	x23, x23, x23, lsl #1
  43e790:	add	x23, x25, x23, lsl #4
  43e794:	nop
  43e798:	ldr	x0, [x25]
  43e79c:	cbz	x0, 43e7b4 <argp_failure@@Base+0xb04>
  43e7a0:	ldr	w3, [x25, #24]
  43e7a4:	ldr	x1, [x29, #168]
  43e7a8:	tbnz	w3, #1, 43e7b4 <argp_failure@@Base+0xb04>
  43e7ac:	bl	404710 <strcmp@plt>
  43e7b0:	cbz	w0, 43f03c <argp_failure@@Base+0x138c>
  43e7b4:	add	x25, x25, #0x30
  43e7b8:	cmp	x25, x23
  43e7bc:	b.ne	43e798 <argp_failure@@Base+0xae8>  // b.any
  43e7c0:	ldr	x0, [x29, #160]
  43e7c4:	add	x24, x24, #0x38
  43e7c8:	cmp	x24, x0
  43e7cc:	b.ne	43e778 <argp_failure@@Base+0xac8>  // b.any
  43e7d0:	ldr	w1, [x29, #136]
  43e7d4:	b	43f04c <argp_failure@@Base+0x139c>
  43e7d8:	mov	w3, w23
  43e7dc:	mov	x1, x20
  43e7e0:	mov	x5, x27
  43e7e4:	mov	x0, x22
  43e7e8:	mov	w4, #0x0                   	// #0
  43e7ec:	mov	w2, #0x1                   	// #1
  43e7f0:	bl	43d768 <wcrtomb@plt+0x38b48>
  43e7f4:	orr	w23, w23, w0
  43e7f8:	b	43e2f8 <argp_failure@@Base+0x648>
  43e7fc:	mov	x0, x27
  43e800:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43e804:	b	43e680 <argp_failure@@Base+0x9d0>
  43e808:	mov	x0, x27
  43e80c:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43e810:	ldp	x1, x0, [x27, #48]
  43e814:	sxtw	x23, w23
  43e818:	ldr	x2, [x27, #32]
  43e81c:	str	x23, [x27, #24]
  43e820:	sxtw	x24, w24
  43e824:	sub	x1, x0, x1
  43e828:	cmp	x1, x2
  43e82c:	b.ls	43e62c <argp_failure@@Base+0x97c>  // b.plast
  43e830:	mov	x0, x27
  43e834:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43e838:	ldr	x0, [x27, #56]
  43e83c:	b	43e62c <argp_failure@@Base+0x97c>
  43e840:	orr	w21, w21, #0x2
  43e844:	mov	x1, x27
  43e848:	mov	x0, x26
  43e84c:	bl	43d2d8 <wcrtomb@plt+0x386b8>
  43e850:	b	43e5f0 <argp_failure@@Base+0x940>
  43e854:	mov	x0, x27
  43e858:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43e85c:	b	43e5dc <argp_failure@@Base+0x92c>
  43e860:	ldr	x0, [x22, #48]
  43e864:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e868:	add	x1, x1, #0xde0
  43e86c:	mov	w2, #0x5                   	// #5
  43e870:	bl	4049c0 <dcgettext@plt>
  43e874:	mov	x25, x0
  43e878:	bl	403ff0 <strlen@plt>
  43e87c:	mov	x2, x0
  43e880:	cbz	x0, 43e5f0 <argp_failure@@Base+0x940>
  43e884:	ldp	x0, x3, [x27, #56]
  43e888:	add	x1, x0, x2
  43e88c:	cmp	x3, x1
  43e890:	b.cs	43e8b0 <argp_failure@@Base+0xc00>  // b.hs, b.nlast
  43e894:	mov	x1, x2
  43e898:	mov	x0, x27
  43e89c:	str	x2, [x29, #136]
  43e8a0:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43e8a4:	cbz	w0, 43e5f0 <argp_failure@@Base+0x940>
  43e8a8:	ldr	x0, [x27, #56]
  43e8ac:	ldr	x2, [x29, #136]
  43e8b0:	mov	x1, x25
  43e8b4:	str	x2, [x29, #136]
  43e8b8:	bl	403f70 <memcpy@plt>
  43e8bc:	ldr	x0, [x27, #56]
  43e8c0:	ldr	x2, [x29, #136]
  43e8c4:	add	x2, x0, x2
  43e8c8:	str	x2, [x27, #56]
  43e8cc:	b	43e5f0 <argp_failure@@Base+0x940>
  43e8d0:	mov	w23, #0x1                   	// #1
  43e8d4:	tbz	w21, #4, 43df70 <argp_failure@@Base+0x2c0>
  43e8d8:	b	43e4f0 <argp_failure@@Base+0x840>
  43e8dc:	ldp	x0, x1, [x27, #56]
  43e8e0:	cmp	x0, x1
  43e8e4:	b.cs	43f3c0 <argp_failure@@Base+0x1710>  // b.hs, b.nlast
  43e8e8:	add	x1, x0, #0x1
  43e8ec:	str	x1, [x27, #56]
  43e8f0:	mov	w1, #0xa                   	// #10
  43e8f4:	strb	w1, [x0]
  43e8f8:	b	43e30c <argp_failure@@Base+0x65c>
  43e8fc:	tbz	w23, #1, 43ed80 <argp_failure@@Base+0x10d0>
  43e900:	ldr	x0, [x29, #168]
  43e904:	add	x0, x0, #0x1
  43e908:	str	x0, [x29, #168]
  43e90c:	b	43e0e0 <argp_failure@@Base+0x430>
  43e910:	ldr	x28, [x24, #32]
  43e914:	cbz	x28, 43eedc <argp_failure@@Base+0x122c>
  43e918:	mov	x0, #0x0                   	// #0
  43e91c:	cbz	x20, 43e928 <argp_failure@@Base+0xc78>
  43e920:	ldr	x0, [x20]
  43e924:	ldr	x0, [x0, #48]
  43e928:	mov	x1, x28
  43e92c:	mov	w2, #0x5                   	// #5
  43e930:	bl	4049c0 <dcgettext@plt>
  43e934:	ldr	x3, [x25, #40]
  43e938:	mov	x23, x0
  43e93c:	cbz	x3, 43f1fc <argp_failure@@Base+0x154c>
  43e940:	mov	x28, x0
  43e944:	ldr	x0, [x3, #40]
  43e948:	cbz	x0, 43e97c <argp_failure@@Base+0xccc>
  43e94c:	ldr	w23, [x24, #8]
  43e950:	mov	x1, x20
  43e954:	mov	x0, x3
  43e958:	str	x3, [x29, #168]
  43e95c:	bl	440aa8 <argp_parse@@Base+0xcc8>
  43e960:	mov	x2, x0
  43e964:	ldr	x3, [x29, #168]
  43e968:	mov	w0, w23
  43e96c:	mov	x1, x28
  43e970:	ldr	x3, [x3, #40]
  43e974:	blr	x3
  43e978:	mov	x23, x0
  43e97c:	cbz	x23, 43ea80 <argp_failure@@Base+0xdd0>
  43e980:	ldrb	w0, [x23]
  43e984:	cbz	w0, 43ea70 <argp_failure@@Base+0xdc0>
  43e988:	ldp	x1, x0, [x27, #48]
  43e98c:	ldr	x2, [x27, #32]
  43e990:	sub	x1, x0, x1
  43e994:	cmp	x1, x2
  43e998:	b.hi	43f2ec <argp_failure@@Base+0x163c>  // b.pmore
  43e99c:	ldr	x24, [x27, #40]
  43e9a0:	ldr	w1, [x19, #20]
  43e9a4:	cmp	x24, #0x0
  43e9a8:	csel	x24, x24, xzr, ge  // ge = tcont
  43e9ac:	sxtw	x2, w1
  43e9b0:	str	x2, [x27, #8]
  43e9b4:	mov	w2, w1
  43e9b8:	sxtw	x2, w2
  43e9bc:	str	x2, [x27, #24]
  43e9c0:	add	w2, w1, #0x3
  43e9c4:	cmp	w2, w24
  43e9c8:	b.cc	43f2cc <argp_failure@@Base+0x161c>  // b.lo, b.ul, b.last
  43e9cc:	cmp	w1, w24
  43e9d0:	b.hi	43f254 <argp_failure@@Base+0x15a4>  // b.pmore
  43e9d4:	ldr	x2, [x27, #64]
  43e9d8:	add	x1, x0, #0x3
  43e9dc:	cmp	x2, x1
  43e9e0:	b.cs	43e9f8 <argp_failure@@Base+0xd48>  // b.hs, b.nlast
  43e9e4:	mov	x0, x27
  43e9e8:	mov	x1, #0x3                   	// #3
  43e9ec:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43e9f0:	cbz	w0, 43ea20 <argp_failure@@Base+0xd70>
  43e9f4:	ldr	x0, [x27, #56]
  43e9f8:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43e9fc:	add	x1, x1, #0xe48
  43ea00:	ldrh	w2, [x1]
  43ea04:	ldrb	w1, [x1, #2]
  43ea08:	strh	w2, [x0]
  43ea0c:	strb	w1, [x0, #2]
  43ea10:	ldr	x0, [x27, #56]
  43ea14:	add	x0, x0, #0x3
  43ea18:	str	x0, [x27, #56]
  43ea1c:	nop
  43ea20:	mov	x0, x23
  43ea24:	bl	403ff0 <strlen@plt>
  43ea28:	mov	x24, x0
  43ea2c:	cbz	x0, 43ea70 <argp_failure@@Base+0xdc0>
  43ea30:	ldp	x0, x2, [x27, #56]
  43ea34:	add	x1, x0, x24
  43ea38:	cmp	x2, x1
  43ea3c:	b.cs	43ea54 <argp_failure@@Base+0xda4>  // b.hs, b.nlast
  43ea40:	mov	x1, x24
  43ea44:	mov	x0, x27
  43ea48:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43ea4c:	cbz	w0, 43ea70 <argp_failure@@Base+0xdc0>
  43ea50:	ldr	x0, [x27, #56]
  43ea54:	mov	x2, x24
  43ea58:	mov	x1, x23
  43ea5c:	bl	403f70 <memcpy@plt>
  43ea60:	ldr	x0, [x27, #56]
  43ea64:	add	x0, x0, x24
  43ea68:	str	x0, [x27, #56]
  43ea6c:	nop
  43ea70:	cmp	x23, x28
  43ea74:	b.eq	43ea80 <argp_failure@@Base+0xdd0>  // b.none
  43ea78:	mov	x0, x23
  43ea7c:	bl	4047b0 <free@plt>
  43ea80:	ldp	x1, x0, [x27, #48]
  43ea84:	ldr	x2, [x27, #32]
  43ea88:	sub	x1, x0, x1
  43ea8c:	cmp	x1, x2
  43ea90:	b.hi	43eec0 <argp_failure@@Base+0x1210>  // b.pmore
  43ea94:	ldr	x1, [x27, #64]
  43ea98:	str	xzr, [x27, #8]
  43ea9c:	cmp	x1, x0
  43eaa0:	b.hi	43eab8 <argp_failure@@Base+0xe08>  // b.pmore
  43eaa4:	mov	x0, x27
  43eaa8:	mov	x1, #0x1                   	// #1
  43eaac:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43eab0:	cbz	w0, 43eac8 <argp_failure@@Base+0xe18>
  43eab4:	ldr	x0, [x27, #56]
  43eab8:	add	x1, x0, #0x1
  43eabc:	str	x1, [x27, #56]
  43eac0:	mov	w1, #0xa                   	// #10
  43eac4:	strb	w1, [x0]
  43eac8:	str	x25, [x29, #184]
  43eacc:	ldp	x2, x0, [x27, #48]
  43ead0:	ldr	x1, [x27, #32]
  43ead4:	ldrsw	x23, [x29, #144]
  43ead8:	sub	x3, x0, x2
  43eadc:	cmp	x3, x1
  43eae0:	b.ls	43e248 <argp_failure@@Base+0x598>  // b.plast
  43eae4:	mov	x0, x27
  43eae8:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43eaec:	ldp	x2, x0, [x27, #48]
  43eaf0:	str	x23, [x27, #8]
  43eaf4:	ldr	x1, [x27, #32]
  43eaf8:	sub	x3, x0, x2
  43eafc:	cmp	x3, x1
  43eb00:	b.ls	43e24c <argp_failure@@Base+0x59c>  // b.plast
  43eb04:	mov	x0, x27
  43eb08:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43eb0c:	ldrsw	x0, [x29, #136]
  43eb10:	add	x25, x25, #0x38
  43eb14:	str	x0, [x27, #24]
  43eb18:	ldr	x0, [x29, #112]
  43eb1c:	cmp	x25, x0
  43eb20:	b.eq	43e264 <argp_failure@@Base+0x5b4>  // b.none
  43eb24:	ldp	x2, x0, [x27, #48]
  43eb28:	ldr	x1, [x27, #32]
  43eb2c:	ldr	x24, [x25]
  43eb30:	sub	x0, x0, x2
  43eb34:	mov	x2, x1
  43eb38:	cmp	x0, x1
  43eb3c:	ldr	x1, [x25, #16]
  43eb40:	str	x1, [x29, #168]
  43eb44:	b.ls	43dfe4 <argp_failure@@Base+0x334>  // b.plast
  43eb48:	mov	x0, x27
  43eb4c:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43eb50:	ldp	x1, x0, [x27, #48]
  43eb54:	ldr	x2, [x27, #32]
  43eb58:	sub	x0, x0, x1
  43eb5c:	b	43dfe4 <argp_failure@@Base+0x334>
  43eb60:	ldr	w23, [x19, #12]
  43eb64:	cmp	x0, x1
  43eb68:	b.hi	43eeb4 <argp_failure@@Base+0x1204>  // b.pmore
  43eb6c:	ldr	w0, [x25, #8]
  43eb70:	sxtw	x23, w23
  43eb74:	str	x23, [x27, #24]
  43eb78:	cbz	w0, 43e1e0 <argp_failure@@Base+0x530>
  43eb7c:	cbz	x20, 43efa0 <argp_failure@@Base+0x12f0>
  43eb80:	sub	w23, w0, #0x1
  43eb84:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43eb88:	add	x23, x23, #0x1
  43eb8c:	add	x0, x28, #0xe30
  43eb90:	mov	x28, x24
  43eb94:	str	x0, [x29, #168]
  43eb98:	add	x23, x23, x23, lsl #1
  43eb9c:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43eba0:	add	x0, x0, #0xe38
  43eba4:	str	x0, [x29, #160]
  43eba8:	add	x23, x24, x23, lsl #4
  43ebac:	b	43ebbc <argp_failure@@Base+0xf0c>
  43ebb0:	add	x28, x28, #0x30
  43ebb4:	cmp	x28, x23
  43ebb8:	b.eq	43e1e0 <argp_failure@@Base+0x530>  // b.none
  43ebbc:	ldr	x0, [x28]
  43ebc0:	cbz	x0, 43ebb0 <argp_failure@@Base+0xf00>
  43ebc4:	ldr	w0, [x28, #24]
  43ebc8:	tbnz	w0, #1, 43ebb0 <argp_failure@@Base+0xf00>
  43ebcc:	ldr	w0, [x19, #12]
  43ebd0:	add	x1, x29, #0xc8
  43ebd4:	bl	43d0c8 <wcrtomb@plt+0x384a8>
  43ebd8:	ldr	x2, [x28]
  43ebdc:	mov	x0, x27
  43ebe0:	ldr	x1, [x29, #168]
  43ebe4:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43ebe8:	ldr	x0, [x20]
  43ebec:	ldr	x1, [x24, #16]
  43ebf0:	ldr	x0, [x0, #48]
  43ebf4:	cbz	x1, 43ebb0 <argp_failure@@Base+0xf00>
  43ebf8:	ldr	w4, [x24, #24]
  43ebfc:	mov	w2, #0x5                   	// #5
  43ec00:	tbz	w4, #0, 43ed64 <argp_failure@@Base+0x10b4>
  43ec04:	bl	4049c0 <dcgettext@plt>
  43ec08:	mov	x2, x0
  43ec0c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43ec10:	mov	x0, x27
  43ec14:	add	x1, x1, #0xe40
  43ec18:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43ec1c:	b	43ebb0 <argp_failure@@Base+0xf00>
  43ec20:	str	wzr, [x29, #128]
  43ec24:	cmp	x0, x2
  43ec28:	ldr	w28, [x19, #8]
  43ec2c:	b.ls	43e068 <argp_failure@@Base+0x3b8>  // b.plast
  43ec30:	mov	x0, x27
  43ec34:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43ec38:	b	43e068 <argp_failure@@Base+0x3b8>
  43ec3c:	cmp	w25, #0x2d
  43ec40:	and	w0, w1, #0x8
  43ec44:	mov	w2, #0x5f                  	// #95
  43ec48:	ccmp	w25, w2, #0x4, ne  // ne = any
  43ec4c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  43ec50:	b.eq	43f47c <argp_failure@@Base+0x17cc>  // b.none
  43ec54:	mov	x26, x27
  43ec58:	mov	w4, #0x2d                  	// #45
  43ec5c:	nop
  43ec60:	ldrb	w2, [x26, #1]!
  43ec64:	cmp	w2, #0x5f
  43ec68:	ubfiz	x0, x2, #1, #8
  43ec6c:	ccmp	w2, w4, #0x4, ne  // ne = any
  43ec70:	ldrh	w1, [x3, x0]
  43ec74:	and	w0, w1, #0x8
  43ec78:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  43ec7c:	b.ne	43ec60 <argp_failure@@Base+0xfb0>  // b.any
  43ec80:	sub	x24, x26, x27
  43ec84:	tbz	w1, #13, 43ec98 <argp_failure@@Base+0xfe8>
  43ec88:	ldrb	w2, [x26, #1]!
  43ec8c:	ubfiz	x0, x2, #1, #8
  43ec90:	ldrh	w1, [x3, x0]
  43ec94:	tbnz	w1, #13, 43ec88 <argp_failure@@Base+0xfd8>
  43ec98:	cmp	w2, #0x2c
  43ec9c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  43eca0:	b.eq	43ee28 <argp_failure@@Base+0x1178>  // b.none
  43eca4:	cmp	w2, #0x3d
  43eca8:	b.eq	43f3d8 <argp_failure@@Base+0x1728>  // b.none
  43ecac:	tbnz	w1, #11, 43f42c <argp_failure@@Base+0x177c>
  43ecb0:	mov	x25, x27
  43ecb4:	mov	x27, x26
  43ecb8:	str	wzr, [x29, #152]
  43ecbc:	str	wzr, [x29, #160]
  43ecc0:	cmp	x24, #0x8
  43ecc4:	b.eq	43ee4c <argp_failure@@Base+0x119c>  // b.none
  43ecc8:	cmp	x24, #0xd
  43eccc:	b.ne	43f0e0 <argp_failure@@Base+0x1430>  // b.any
  43ecd0:	ldr	x0, [x29, #168]
  43ecd4:	mov	x2, x24
  43ecd8:	add	x1, x0, #0x30
  43ecdc:	mov	x0, x25
  43ece0:	str	x1, [x29, #128]
  43ece4:	bl	4043c0 <strncmp@plt>
  43ece8:	ldr	x1, [x29, #128]
  43ecec:	cbz	w0, 43f128 <argp_failure@@Base+0x1478>
  43ecf0:	ldr	x1, [x29, #136]
  43ecf4:	mov	x2, x24
  43ecf8:	mov	x0, x25
  43ecfc:	bl	4043c0 <strncmp@plt>
  43ed00:	cbz	w0, 43f59c <argp_failure@@Base+0x18ec>
  43ed04:	nop
  43ed08:	mov	x0, #0x0                   	// #0
  43ed0c:	cbz	x20, 43ed18 <argp_failure@@Base+0x1068>
  43ed10:	ldr	x0, [x20]
  43ed14:	ldr	x0, [x0, #48]
  43ed18:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43ed1c:	add	x1, x1, #0xd30
  43ed20:	mov	w2, #0x5                   	// #5
  43ed24:	bl	4049c0 <dcgettext@plt>
  43ed28:	mov	x3, x0
  43ed2c:	mov	x5, x25
  43ed30:	mov	w4, w24
  43ed34:	mov	x0, x20
  43ed38:	mov	w2, #0x0                   	// #0
  43ed3c:	mov	w1, #0x0                   	// #0
  43ed40:	bl	43dcb0 <argp_failure@@Base>
  43ed44:	ldrb	w25, [x26]
  43ed48:	cmp	w25, #0x2c
  43ed4c:	b.eq	43f0cc <argp_failure@@Base+0x141c>  // b.none
  43ed50:	cbnz	w25, 43e3e8 <argp_failure@@Base+0x738>
  43ed54:	b	43e410 <argp_failure@@Base+0x760>
  43ed58:	mov	x0, x27
  43ed5c:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43ed60:	b	43e1f4 <argp_failure@@Base+0x544>
  43ed64:	mov	w2, #0x5                   	// #5
  43ed68:	bl	4049c0 <dcgettext@plt>
  43ed6c:	ldr	x1, [x29, #160]
  43ed70:	mov	x2, x0
  43ed74:	mov	x0, x27
  43ed78:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43ed7c:	b	43ebb0 <argp_failure@@Base+0xf00>
  43ed80:	ldr	w0, [x19, #8]
  43ed84:	add	x1, x29, #0xc8
  43ed88:	bl	43d0c8 <wcrtomb@plt+0x384a8>
  43ed8c:	ldp	x0, x1, [x27, #56]
  43ed90:	cmp	x0, x1
  43ed94:	b.cc	43edac <argp_failure@@Base+0x10fc>  // b.lo, b.ul, b.last
  43ed98:	mov	x0, x27
  43ed9c:	mov	x1, #0x1                   	// #1
  43eda0:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43eda4:	cbz	w0, 43edbc <argp_failure@@Base+0x110c>
  43eda8:	ldr	x0, [x27, #56]
  43edac:	add	x1, x0, #0x1
  43edb0:	str	x1, [x27, #56]
  43edb4:	mov	w1, #0x2d                  	// #45
  43edb8:	strb	w1, [x0]
  43edbc:	ldp	x0, x1, [x27, #56]
  43edc0:	ldr	x2, [x29, #168]
  43edc4:	cmp	x0, x1
  43edc8:	ldrb	w2, [x2]
  43edcc:	b.cc	43edec <argp_failure@@Base+0x113c>  // b.lo, b.ul, b.last
  43edd0:	mov	x0, x27
  43edd4:	mov	x1, #0x1                   	// #1
  43edd8:	str	w2, [x29, #160]
  43eddc:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43ede0:	cbz	w0, 43edf8 <argp_failure@@Base+0x1148>
  43ede4:	ldr	w2, [x29, #160]
  43ede8:	ldr	x0, [x27, #56]
  43edec:	add	x1, x0, #0x1
  43edf0:	str	x1, [x27, #56]
  43edf4:	strb	w2, [x0]
  43edf8:	ldr	w0, [x29, #128]
  43edfc:	ldr	x1, [x24, #16]
  43ee00:	cbz	w0, 43ee7c <argp_failure@@Base+0x11cc>
  43ee04:	ldr	w0, [x19]
  43ee08:	cbnz	w0, 43ee7c <argp_failure@@Base+0x11cc>
  43ee0c:	cbz	x1, 43e900 <argp_failure@@Base+0xc50>
  43ee10:	mov	w0, #0x1                   	// #1
  43ee14:	str	w0, [x29, #196]
  43ee18:	b	43e900 <argp_failure@@Base+0xc50>
  43ee1c:	mov	w1, #0x1                   	// #1
  43ee20:	str	w1, [x29, #128]
  43ee24:	b	43e05c <argp_failure@@Base+0x3ac>
  43ee28:	cmp	w25, #0x6e
  43ee2c:	b.eq	43f220 <argp_failure@@Base+0x1570>  // b.none
  43ee30:	mov	w0, #0x1                   	// #1
  43ee34:	str	w0, [x29, #152]
  43ee38:	str	w0, [x29, #160]
  43ee3c:	mov	x25, x27
  43ee40:	cmp	x24, #0x8
  43ee44:	mov	x27, x26
  43ee48:	b.ne	43ecc8 <argp_failure@@Base+0x1018>  // b.any
  43ee4c:	ldr	x1, [x29, #144]
  43ee50:	mov	x2, x24
  43ee54:	mov	x0, x25
  43ee58:	bl	4043c0 <strncmp@plt>
  43ee5c:	cbnz	w0, 43ed08 <argp_failure@@Base+0x1058>
  43ee60:	ldr	x1, [x29, #144]
  43ee64:	nop
  43ee68:	ldrb	w0, [x1, #15]
  43ee6c:	add	x1, x29, #0xc8
  43ee70:	ldr	w2, [x29, #152]
  43ee74:	str	w2, [x1, x0]
  43ee78:	b	43ed44 <argp_failure@@Base+0x1094>
  43ee7c:	mov	x0, #0x0                   	// #0
  43ee80:	cbz	x20, 43ee8c <argp_failure@@Base+0x11dc>
  43ee84:	ldr	x0, [x20]
  43ee88:	ldr	x0, [x0, #48]
  43ee8c:	cbz	x1, 43e900 <argp_failure@@Base+0xc50>
  43ee90:	ldr	w2, [x24, #24]
  43ee94:	tbz	w2, #0, 43f204 <argp_failure@@Base+0x1554>
  43ee98:	mov	w2, #0x5                   	// #5
  43ee9c:	bl	4049c0 <dcgettext@plt>
  43eea0:	ldr	x1, [x29, #104]
  43eea4:	mov	x2, x0
  43eea8:	mov	x0, x27
  43eeac:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43eeb0:	b	43e900 <argp_failure@@Base+0xc50>
  43eeb4:	mov	x0, x27
  43eeb8:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43eebc:	b	43eb6c <argp_failure@@Base+0xebc>
  43eec0:	mov	x0, x27
  43eec4:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43eec8:	ldr	x0, [x27, #56]
  43eecc:	b	43ea94 <argp_failure@@Base+0xde4>
  43eed0:	mov	x0, x27
  43eed4:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43eed8:	b	43e110 <argp_failure@@Base+0x460>
  43eedc:	ldr	x3, [x25, #40]
  43eee0:	cbz	x3, 43ea80 <argp_failure@@Base+0xdd0>
  43eee4:	ldr	x0, [x3, #40]
  43eee8:	cbnz	x0, 43e94c <argp_failure@@Base+0xc9c>
  43eeec:	b	43ea80 <argp_failure@@Base+0xdd0>
  43eef0:	sub	w0, w0, #0x1
  43eef4:	mov	x28, x24
  43eef8:	add	x3, x0, #0x1
  43eefc:	add	x3, x3, x3, lsl #1
  43ef00:	add	x23, x24, x3, lsl #4
  43ef04:	b	43ef14 <argp_failure@@Base+0x1264>
  43ef08:	add	x28, x28, #0x30
  43ef0c:	cmp	x23, x28
  43ef10:	b.eq	43e1e0 <argp_failure@@Base+0x530>  // b.none
  43ef14:	ldr	x0, [x28]
  43ef18:	cbz	x0, 43ef08 <argp_failure@@Base+0x1258>
  43ef1c:	ldr	w0, [x28, #24]
  43ef20:	tbnz	w0, #1, 43ef08 <argp_failure@@Base+0x1258>
  43ef24:	ldr	w0, [x19, #16]
  43ef28:	add	x1, x29, #0xc8
  43ef2c:	bl	43d0c8 <wcrtomb@plt+0x384a8>
  43ef30:	ldr	x1, [x28]
  43ef34:	mov	w2, #0x5                   	// #5
  43ef38:	mov	x0, #0x0                   	// #0
  43ef3c:	bl	4049c0 <dcgettext@plt>
  43ef40:	str	x0, [x29, #168]
  43ef44:	bl	403ff0 <strlen@plt>
  43ef48:	mov	x2, x0
  43ef4c:	cbz	x0, 43ef08 <argp_failure@@Base+0x1258>
  43ef50:	ldp	x4, x7, [x27, #56]
  43ef54:	mov	x1, x0
  43ef58:	mov	x0, x27
  43ef5c:	add	x6, x4, x2
  43ef60:	cmp	x7, x6
  43ef64:	b.cs	43ef7c <argp_failure@@Base+0x12cc>  // b.hs, b.nlast
  43ef68:	str	x2, [x29, #160]
  43ef6c:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43ef70:	cbz	w0, 43ef08 <argp_failure@@Base+0x1258>
  43ef74:	ldr	x4, [x27, #56]
  43ef78:	ldr	x2, [x29, #160]
  43ef7c:	mov	x0, x4
  43ef80:	ldr	x1, [x29, #168]
  43ef84:	str	x2, [x29, #168]
  43ef88:	bl	403f70 <memcpy@plt>
  43ef8c:	ldr	x0, [x27, #56]
  43ef90:	ldr	x2, [x29, #168]
  43ef94:	add	x2, x0, x2
  43ef98:	str	x2, [x27, #56]
  43ef9c:	b	43ef08 <argp_failure@@Base+0x1258>
  43efa0:	sub	w0, w0, #0x1
  43efa4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43efa8:	add	x4, x0, #0x1
  43efac:	adrp	x28, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43efb0:	add	x0, x23, #0xe30
  43efb4:	mov	x23, x24
  43efb8:	add	x4, x4, x4, lsl #1
  43efbc:	str	x0, [x29, #168]
  43efc0:	add	x0, x28, #0xe40
  43efc4:	str	x0, [x29, #160]
  43efc8:	add	x28, x24, x4, lsl #4
  43efcc:	b	43efdc <argp_failure@@Base+0x132c>
  43efd0:	add	x23, x23, #0x30
  43efd4:	cmp	x28, x23
  43efd8:	b.eq	43e1e0 <argp_failure@@Base+0x530>  // b.none
  43efdc:	ldr	x0, [x23]
  43efe0:	cbz	x0, 43efd0 <argp_failure@@Base+0x1320>
  43efe4:	ldr	w0, [x23, #24]
  43efe8:	tbnz	w0, #1, 43efd0 <argp_failure@@Base+0x1320>
  43efec:	ldr	w0, [x19, #12]
  43eff0:	add	x1, x29, #0xc8
  43eff4:	bl	43d0c8 <wcrtomb@plt+0x384a8>
  43eff8:	ldr	x2, [x23]
  43effc:	mov	x0, x27
  43f000:	ldr	x1, [x29, #168]
  43f004:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43f008:	ldr	x1, [x24, #16]
  43f00c:	cbz	x1, 43efd0 <argp_failure@@Base+0x1320>
  43f010:	ldr	w6, [x24, #24]
  43f014:	mov	w2, #0x5                   	// #5
  43f018:	mov	x0, #0x0                   	// #0
  43f01c:	tbnz	w6, #0, 43f1c8 <argp_failure@@Base+0x1518>
  43f020:	bl	4049c0 <dcgettext@plt>
  43f024:	mov	x2, x0
  43f028:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f02c:	mov	x0, x27
  43f030:	add	x1, x1, #0xe38
  43f034:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43f038:	b	43efd0 <argp_failure@@Base+0x1320>
  43f03c:	mov	w0, #0xffffffff            	// #-1
  43f040:	str	w0, [x24, #24]
  43f044:	ldr	w1, [x26, #8]
  43f048:	cbz	w1, 43df60 <argp_failure@@Base+0x2b0>
  43f04c:	ldr	x2, [x29, #152]
  43f050:	mov	w0, #0x0                   	// #0
  43f054:	nop
  43f058:	str	w0, [x2, #48]
  43f05c:	add	w0, w0, #0x1
  43f060:	cmp	w0, w1
  43f064:	add	x2, x2, #0x38
  43f068:	b.cc	43f058 <argp_failure@@Base+0x13a8>  // b.lo, b.ul, b.last
  43f06c:	ldr	x0, [x29, #152]
  43f070:	mov	w1, w1
  43f074:	adrp	x3, 43c000 <wcrtomb@plt+0x373e0>
  43f078:	mov	x2, #0x38                  	// #56
  43f07c:	add	x3, x3, #0x580
  43f080:	mov	w23, #0x0                   	// #0
  43f084:	bl	4041a0 <qsort@plt>
  43f088:	tst	x21, #0x3
  43f08c:	b.eq	43df6c <argp_failure@@Base+0x2bc>  // b.none
  43f090:	b	43e51c <argp_failure@@Base+0x86c>
  43f094:	mov	w0, #0xffffffff            	// #-1
  43f098:	str	w0, [x24, #24]
  43f09c:	ldr	w0, [x26, #8]
  43f0a0:	str	w0, [x29, #136]
  43f0a4:	sub	w1, w0, #0x1
  43f0a8:	str	x1, [x29, #144]
  43f0ac:	cbnz	w0, 43e750 <argp_failure@@Base+0xaa0>
  43f0b0:	b	43df60 <argp_failure@@Base+0x2b0>
  43f0b4:	ldr	x0, [x24, #32]
  43f0b8:	add	x2, x29, #0xc8
  43f0bc:	ldr	x1, [x25, #40]
  43f0c0:	bl	43cdc8 <wcrtomb@plt+0x381a8>
  43f0c4:	str	x25, [x29, #184]
  43f0c8:	b	43eacc <argp_failure@@Base+0xe1c>
  43f0cc:	ldrb	w25, [x26, #1]
  43f0d0:	add	x7, x26, #0x1
  43f0d4:	cbz	w25, 43e410 <argp_failure@@Base+0x760>
  43f0d8:	mov	x27, x7
  43f0dc:	b	43e3e8 <argp_failure@@Base+0x738>
  43f0e0:	cmp	x24, #0xc
  43f0e4:	b.ne	43f158 <argp_failure@@Base+0x14a8>  // b.any
  43f0e8:	ldr	x0, [x29, #168]
  43f0ec:	mov	x2, x24
  43f0f0:	add	x1, x0, #0x50
  43f0f4:	mov	x0, x25
  43f0f8:	str	x1, [x29, #128]
  43f0fc:	bl	4043c0 <strncmp@plt>
  43f100:	ldr	x1, [x29, #128]
  43f104:	cbz	w0, 43f128 <argp_failure@@Base+0x1478>
  43f108:	ldr	x0, [x29, #168]
  43f10c:	mov	x2, #0xc                   	// #12
  43f110:	add	x1, x0, #0x90
  43f114:	mov	x0, x25
  43f118:	str	x1, [x29, #128]
  43f11c:	bl	4043c0 <strncmp@plt>
  43f120:	ldr	x1, [x29, #128]
  43f124:	cbnz	w0, 43ed08 <argp_failure@@Base+0x1058>
  43f128:	ldr	w0, [x29, #160]
  43f12c:	cbz	w0, 43ee68 <argp_failure@@Base+0x11b8>
  43f130:	ldrb	w0, [x1, #14]
  43f134:	cbnz	w0, 43ee68 <argp_failure@@Base+0x11b8>
  43f138:	mov	x0, #0x0                   	// #0
  43f13c:	cbz	x20, 43f148 <argp_failure@@Base+0x1498>
  43f140:	ldr	x0, [x20]
  43f144:	ldr	x0, [x0, #48]
  43f148:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f14c:	mov	w2, #0x5                   	// #5
  43f150:	add	x1, x1, #0xd00
  43f154:	b	43ed24 <argp_failure@@Base+0x1074>
  43f158:	cmp	x24, #0xb
  43f15c:	b.ne	43f190 <argp_failure@@Base+0x14e0>  // b.any
  43f160:	ldr	x0, [x29, #168]
  43f164:	mov	x2, x24
  43f168:	add	x1, x0, #0x60
  43f16c:	mov	x0, x25
  43f170:	str	x1, [x29, #128]
  43f174:	bl	4043c0 <strncmp@plt>
  43f178:	ldr	x1, [x29, #128]
  43f17c:	cbz	w0, 43f128 <argp_failure@@Base+0x1478>
  43f180:	ldr	x0, [x29, #168]
  43f184:	mov	x2, x24
  43f188:	add	x1, x0, #0x70
  43f18c:	b	43f114 <argp_failure@@Base+0x1464>
  43f190:	cmp	x24, #0xa
  43f194:	b.ne	43f1a8 <argp_failure@@Base+0x14f8>  // b.any
  43f198:	ldr	x0, [x29, #168]
  43f19c:	mov	x2, x24
  43f1a0:	add	x1, x0, #0x80
  43f1a4:	b	43f114 <argp_failure@@Base+0x1464>
  43f1a8:	cmp	x24, #0xc
  43f1ac:	b.eq	43f108 <argp_failure@@Base+0x1458>  // b.none
  43f1b0:	cmp	x24, #0x7
  43f1b4:	b.ne	43ed08 <argp_failure@@Base+0x1058>  // b.any
  43f1b8:	ldr	x0, [x29, #168]
  43f1bc:	mov	x2, x24
  43f1c0:	add	x1, x0, #0xa0
  43f1c4:	b	43f114 <argp_failure@@Base+0x1464>
  43f1c8:	mov	w2, #0x5                   	// #5
  43f1cc:	mov	x0, #0x0                   	// #0
  43f1d0:	bl	4049c0 <dcgettext@plt>
  43f1d4:	mov	x2, x0
  43f1d8:	ldr	x1, [x29, #160]
  43f1dc:	mov	x0, x27
  43f1e0:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43f1e4:	b	43efd0 <argp_failure@@Base+0x1320>
  43f1e8:	ldr	x0, [x26]
  43f1ec:	bl	4047b0 <free@plt>
  43f1f0:	ldr	x0, [x26, #16]
  43f1f4:	bl	4047b0 <free@plt>
  43f1f8:	b	43e360 <argp_failure@@Base+0x6b0>
  43f1fc:	mov	x28, x0
  43f200:	b	43e97c <argp_failure@@Base+0xccc>
  43f204:	mov	w2, #0x5                   	// #5
  43f208:	bl	4049c0 <dcgettext@plt>
  43f20c:	ldr	x1, [x29, #96]
  43f210:	mov	x2, x0
  43f214:	mov	x0, x27
  43f218:	bl	462800 <_obstack_memory_used@@Base+0x113f0>
  43f21c:	b	43e900 <argp_failure@@Base+0xc50>
  43f220:	ldrb	w0, [x27, #1]
  43f224:	cmp	w0, #0x6f
  43f228:	b.ne	43ee30 <argp_failure@@Base+0x1180>  // b.any
  43f22c:	ldrb	w0, [x27, #2]
  43f230:	cmp	w0, #0x2d
  43f234:	b.ne	43ee30 <argp_failure@@Base+0x1180>  // b.any
  43f238:	add	x25, x27, #0x3
  43f23c:	mov	w0, #0x1                   	// #1
  43f240:	sub	x24, x24, #0x3
  43f244:	mov	x27, x26
  43f248:	str	wzr, [x29, #152]
  43f24c:	str	w0, [x29, #160]
  43f250:	b	43ecc0 <argp_failure@@Base+0x1010>
  43f254:	ldr	x2, [x27, #48]
  43f258:	ldr	x3, [x27, #32]
  43f25c:	sub	x0, x0, x2
  43f260:	cmp	x0, x3
  43f264:	b.hi	43f418 <argp_failure@@Base+0x1768>  // b.pmore
  43f268:	ldr	x0, [x27, #40]
  43f26c:	cmp	x0, #0x0
  43f270:	csel	x24, x0, xzr, ge  // ge = tcont
  43f274:	sub	w24, w1, w24
  43f278:	cmp	w24, #0x0
  43f27c:	sub	w24, w24, #0x1
  43f280:	b.le	43ea20 <argp_failure@@Base+0xd70>
  43f284:	mov	w4, #0x20                  	// #32
  43f288:	ldp	x2, x3, [x27, #56]
  43f28c:	sub	w24, w24, #0x1
  43f290:	mov	x0, x27
  43f294:	mov	x1, #0x1                   	// #1
  43f298:	cmp	x2, x3
  43f29c:	b.cc	43f2b4 <argp_failure@@Base+0x1604>  // b.lo, b.ul, b.last
  43f2a0:	str	w4, [x29, #168]
  43f2a4:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f2a8:	ldr	w4, [x29, #168]
  43f2ac:	cbz	w0, 43f2c0 <argp_failure@@Base+0x1610>
  43f2b0:	ldr	x2, [x27, #56]
  43f2b4:	add	x0, x2, #0x1
  43f2b8:	str	x0, [x27, #56]
  43f2bc:	strb	w4, [x2]
  43f2c0:	cmn	w24, #0x1
  43f2c4:	b.ne	43f288 <argp_failure@@Base+0x15d8>  // b.any
  43f2c8:	b	43ea20 <argp_failure@@Base+0xd70>
  43f2cc:	ldr	x1, [x27, #64]
  43f2d0:	cmp	x1, x0
  43f2d4:	b.ls	43f3a8 <argp_failure@@Base+0x16f8>  // b.plast
  43f2d8:	add	x1, x0, #0x1
  43f2dc:	str	x1, [x27, #56]
  43f2e0:	mov	w1, #0xa                   	// #10
  43f2e4:	strb	w1, [x0]
  43f2e8:	b	43ea20 <argp_failure@@Base+0xd70>
  43f2ec:	mov	x0, x27
  43f2f0:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43f2f4:	ldp	x3, x24, [x27, #32]
  43f2f8:	ldp	x2, x0, [x27, #48]
  43f2fc:	ldr	w1, [x19, #20]
  43f300:	cmp	x24, #0x0
  43f304:	csel	x24, x24, xzr, ge  // ge = tcont
  43f308:	sub	x2, x0, x2
  43f30c:	cmp	x2, x3
  43f310:	sxtw	x2, w1
  43f314:	b.ls	43e9b0 <argp_failure@@Base+0xd00>  // b.plast
  43f318:	mov	x0, x27
  43f31c:	str	x2, [x29, #168]
  43f320:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43f324:	ldp	x1, x0, [x27, #48]
  43f328:	ldr	x3, [x27, #32]
  43f32c:	ldr	x2, [x29, #168]
  43f330:	str	x2, [x27, #8]
  43f334:	sub	x1, x0, x1
  43f338:	ldr	w2, [x19, #20]
  43f33c:	cmp	x1, x3
  43f340:	b.ls	43f620 <argp_failure@@Base+0x1970>  // b.plast
  43f344:	mov	x0, x27
  43f348:	str	w2, [x29, #168]
  43f34c:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43f350:	ldr	w1, [x19, #20]
  43f354:	ldr	w2, [x29, #168]
  43f358:	ldr	x0, [x27, #56]
  43f35c:	b	43e9b8 <argp_failure@@Base+0xd08>
  43f360:	ldr	x0, [x29, #120]
  43f364:	bl	404330 <funlockfile@plt>
  43f368:	b	43e370 <argp_failure@@Base+0x6c0>
  43f36c:	mov	x0, #0x0                   	// #0
  43f370:	cbz	x20, 43f37c <argp_failure@@Base+0x16cc>
  43f374:	ldr	x0, [x20]
  43f378:	ldr	x0, [x0, #48]
  43f37c:	mov	w2, #0x5                   	// #5
  43f380:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f384:	add	x1, x1, #0xd58
  43f388:	bl	4049c0 <dcgettext@plt>
  43f38c:	mov	x3, x0
  43f390:	mov	x4, x27
  43f394:	mov	x0, x20
  43f398:	mov	w2, #0x0                   	// #0
  43f39c:	mov	w1, #0x0                   	// #0
  43f3a0:	bl	43dcb0 <argp_failure@@Base>
  43f3a4:	b	43e410 <argp_failure@@Base+0x760>
  43f3a8:	mov	x0, x27
  43f3ac:	mov	x1, #0x1                   	// #1
  43f3b0:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f3b4:	cbz	w0, 43ea20 <argp_failure@@Base+0xd70>
  43f3b8:	ldr	x0, [x27, #56]
  43f3bc:	b	43f2d8 <argp_failure@@Base+0x1628>
  43f3c0:	mov	x0, x27
  43f3c4:	mov	x1, #0x1                   	// #1
  43f3c8:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f3cc:	cbz	w0, 43e30c <argp_failure@@Base+0x65c>
  43f3d0:	ldr	x0, [x27, #56]
  43f3d4:	b	43e8e8 <argp_failure@@Base+0xc38>
  43f3d8:	ldrb	w0, [x26, #1]
  43f3dc:	add	x6, x26, #0x1
  43f3e0:	mov	x26, x6
  43f3e4:	ldrh	w1, [x3, x0, lsl #1]
  43f3e8:	tbz	w1, #13, 43ecac <argp_failure@@Base+0xffc>
  43f3ec:	nop
  43f3f0:	ldrb	w0, [x26, #1]!
  43f3f4:	ldrh	w1, [x3, x0, lsl #1]
  43f3f8:	tbnz	w1, #13, 43f3f0 <argp_failure@@Base+0x1740>
  43f3fc:	b	43ecac <argp_failure@@Base+0xffc>
  43f400:	mov	x0, x27
  43f404:	mov	x1, #0x1                   	// #1
  43f408:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f40c:	cbz	w0, 43e4d4 <argp_failure@@Base+0x824>
  43f410:	ldr	x0, [x27, #56]
  43f414:	b	43e4c4 <argp_failure@@Base+0x814>
  43f418:	mov	x0, x27
  43f41c:	str	w1, [x29, #168]
  43f420:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  43f424:	ldr	w1, [x29, #168]
  43f428:	b	43f268 <argp_failure@@Base+0x15b8>
  43f42c:	mov	w2, #0xa                   	// #10
  43f430:	mov	x1, #0x0                   	// #0
  43f434:	mov	x0, x26
  43f438:	bl	404770 <strtol@plt>
  43f43c:	ldrb	w2, [x26]
  43f440:	ldr	x1, [x23]
  43f444:	str	w0, [x29, #152]
  43f448:	ldrh	w0, [x1, x2, lsl #1]
  43f44c:	tbz	w0, #11, 43f45c <argp_failure@@Base+0x17ac>
  43f450:	ldrb	w0, [x26, #1]!
  43f454:	ldrh	w0, [x1, x0, lsl #1]
  43f458:	tbnz	w0, #11, 43f450 <argp_failure@@Base+0x17a0>
  43f45c:	tbz	w0, #13, 43f5cc <argp_failure@@Base+0x191c>
  43f460:	ldrb	w0, [x26, #1]!
  43f464:	ldrh	w0, [x1, x0, lsl #1]
  43f468:	tbnz	w0, #13, 43f460 <argp_failure@@Base+0x17b0>
  43f46c:	mov	x25, x27
  43f470:	mov	x27, x26
  43f474:	str	wzr, [x29, #160]
  43f478:	b	43ecc0 <argp_failure@@Base+0x1010>
  43f47c:	mov	w2, w25
  43f480:	mov	x26, x27
  43f484:	mov	x24, #0x0                   	// #0
  43f488:	b	43ec98 <argp_failure@@Base+0xfe8>
  43f48c:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f490:	mov	w2, #0x5                   	// #5
  43f494:	add	x1, x1, #0xe50
  43f498:	mov	x0, #0x0                   	// #0
  43f49c:	bl	4049c0 <dcgettext@plt>
  43f4a0:	mov	x19, x0
  43f4a4:	mov	x24, x0
  43f4a8:	b	43e2d0 <argp_failure@@Base+0x620>
  43f4ac:	ldp	x0, x1, [x27, #56]
  43f4b0:	cmp	x0, x1
  43f4b4:	b.cc	43f4cc <argp_failure@@Base+0x181c>  // b.lo, b.ul, b.last
  43f4b8:	mov	x0, x27
  43f4bc:	mov	x1, #0x1                   	// #1
  43f4c0:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f4c4:	cbz	w0, 43f4dc <argp_failure@@Base+0x182c>
  43f4c8:	ldr	x0, [x27, #56]
  43f4cc:	add	x1, x0, #0x1
  43f4d0:	str	x1, [x27, #56]
  43f4d4:	mov	w1, #0xa                   	// #10
  43f4d8:	strb	w1, [x0]
  43f4dc:	mov	x0, x19
  43f4e0:	bl	403ff0 <strlen@plt>
  43f4e4:	mov	x23, x0
  43f4e8:	ldp	x0, x1, [x27, #56]
  43f4ec:	cbnz	x23, 43f5dc <argp_failure@@Base+0x192c>
  43f4f0:	cmp	x0, x1
  43f4f4:	b.cc	43f50c <argp_failure@@Base+0x185c>  // b.lo, b.ul, b.last
  43f4f8:	mov	x0, x27
  43f4fc:	mov	x1, #0x1                   	// #1
  43f500:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f504:	cbz	w0, 43e2dc <argp_failure@@Base+0x62c>
  43f508:	ldr	x0, [x27, #56]
  43f50c:	add	x1, x0, #0x1
  43f510:	str	x1, [x27, #56]
  43f514:	mov	w1, #0xa                   	// #10
  43f518:	strb	w1, [x0]
  43f51c:	b	43e2dc <argp_failure@@Base+0x62c>
  43f520:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f524:	add	x23, x23, #0xee0
  43f528:	add	x23, x23, #0x40
  43f52c:	nop
  43f530:	ldr	x0, [x20]
  43f534:	mov	w2, #0x5                   	// #5
  43f538:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f53c:	add	x1, x1, #0xd78
  43f540:	ldr	x0, [x0, #48]
  43f544:	bl	4049c0 <dcgettext@plt>
  43f548:	mov	x3, x0
  43f54c:	mov	x5, x23
  43f550:	mov	x0, x20
  43f554:	adrp	x4, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f558:	mov	w2, #0x0                   	// #0
  43f55c:	add	x4, x4, #0xdb0
  43f560:	mov	w1, #0x0                   	// #0
  43f564:	bl	43dcb0 <argp_failure@@Base>
  43f568:	b	43df34 <argp_failure@@Base+0x284>
  43f56c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f570:	add	x23, x23, #0xee0
  43f574:	add	x23, x23, #0x50
  43f578:	b	43f530 <argp_failure@@Base+0x1880>
  43f57c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f580:	add	x23, x23, #0xee0
  43f584:	add	x23, x23, #0x60
  43f588:	b	43f530 <argp_failure@@Base+0x1880>
  43f58c:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f590:	add	x23, x23, #0xee0
  43f594:	add	x23, x23, #0x70
  43f598:	b	43f530 <argp_failure@@Base+0x1880>
  43f59c:	ldr	x1, [x29, #136]
  43f5a0:	b	43f128 <argp_failure@@Base+0x1478>
  43f5a4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f5a8:	add	x23, x23, #0xee0
  43f5ac:	add	x23, x23, #0x80
  43f5b0:	b	43f530 <argp_failure@@Base+0x1880>
  43f5b4:	adrp	x23, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f5b8:	add	x23, x23, #0xee0
  43f5bc:	add	x23, x23, #0x90
  43f5c0:	b	43f530 <argp_failure@@Base+0x1880>
  43f5c4:	mov	x19, x0
  43f5c8:	b	43e2d0 <argp_failure@@Base+0x620>
  43f5cc:	mov	x25, x27
  43f5d0:	mov	x27, x26
  43f5d4:	str	wzr, [x29, #160]
  43f5d8:	b	43ecc0 <argp_failure@@Base+0x1010>
  43f5dc:	add	x2, x0, x23
  43f5e0:	cmp	x1, x2
  43f5e4:	b.cs	43f604 <argp_failure@@Base+0x1954>  // b.hs, b.nlast
  43f5e8:	mov	x1, x23
  43f5ec:	mov	x0, x27
  43f5f0:	bl	462710 <_obstack_memory_used@@Base+0x11300>
  43f5f4:	cbnz	w0, 43f600 <argp_failure@@Base+0x1950>
  43f5f8:	ldp	x0, x1, [x27, #56]
  43f5fc:	b	43f4f0 <argp_failure@@Base+0x1840>
  43f600:	ldr	x0, [x27, #56]
  43f604:	mov	x1, x19
  43f608:	mov	x2, x23
  43f60c:	bl	403f70 <memcpy@plt>
  43f610:	ldp	x0, x1, [x27, #56]
  43f614:	add	x0, x0, x23
  43f618:	str	x0, [x27, #56]
  43f61c:	b	43f4f0 <argp_failure@@Base+0x1840>
  43f620:	mov	w1, w2
  43f624:	b	43e9b8 <argp_failure@@Base+0xd08>

000000000043f628 <argp_help@@Base>:
  43f628:	mov	w5, w2
  43f62c:	mov	x4, x3
  43f630:	mov	x2, x1
  43f634:	mov	w3, w5
  43f638:	mov	x1, #0x0                   	// #0
  43f63c:	b	43dee8 <argp_failure@@Base+0x238>

000000000043f640 <argp_state_help@@Base>:
  43f640:	stp	x29, x30, [sp, #-32]!
  43f644:	mov	x29, sp
  43f648:	stp	x19, x20, [sp, #16]
  43f64c:	mov	w20, w2
  43f650:	cbz	x0, 43f6b0 <argp_state_help@@Base+0x70>
  43f654:	ldr	w2, [x0, #28]
  43f658:	mov	x19, x0
  43f65c:	tst	x2, #0x2
  43f660:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  43f664:	b.ne	43f674 <argp_state_help@@Base+0x34>  // b.any
  43f668:	ldp	x19, x20, [sp, #16]
  43f66c:	ldp	x29, x30, [sp], #32
  43f670:	ret
  43f674:	tst	x2, #0x40
  43f678:	orr	w2, w20, #0x80
  43f67c:	csel	w20, w2, w20, ne  // ne = any
  43f680:	mov	x2, x1
  43f684:	mov	x1, x0
  43f688:	mov	w3, w20
  43f68c:	ldr	x0, [x0]
  43f690:	ldr	x4, [x19, #64]
  43f694:	bl	43dee8 <argp_failure@@Base+0x238>
  43f698:	ldr	w0, [x19, #28]
  43f69c:	tbnz	w0, #5, 43f668 <argp_state_help@@Base+0x28>
  43f6a0:	tbnz	w20, #8, 43f6d0 <argp_state_help@@Base+0x90>
  43f6a4:	tbz	w20, #9, 43f668 <argp_state_help@@Base+0x28>
  43f6a8:	mov	w0, #0x0                   	// #0
  43f6ac:	bl	404020 <exit@plt>
  43f6b0:	cbz	x1, 43f668 <argp_state_help@@Base+0x28>
  43f6b4:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43f6b8:	mov	x2, x1
  43f6bc:	mov	w3, w20
  43f6c0:	mov	x1, #0x0                   	// #0
  43f6c4:	ldr	x4, [x4, #1208]
  43f6c8:	bl	43dee8 <argp_failure@@Base+0x238>
  43f6cc:	b	43f6a0 <argp_state_help@@Base+0x60>
  43f6d0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43f6d4:	ldr	w0, [x0, #1144]
  43f6d8:	bl	404020 <exit@plt>
  43f6dc:	nop

000000000043f6e0 <argp_error@@Base>:
  43f6e0:	stp	x29, x30, [sp, #-320]!
  43f6e4:	mov	x29, sp
  43f6e8:	stp	x19, x20, [sp, #16]
  43f6ec:	mov	x20, x0
  43f6f0:	str	x21, [sp, #32]
  43f6f4:	mov	x21, x1
  43f6f8:	str	q0, [sp, #144]
  43f6fc:	str	q1, [sp, #160]
  43f700:	str	q2, [sp, #176]
  43f704:	str	q3, [sp, #192]
  43f708:	str	q4, [sp, #208]
  43f70c:	str	q5, [sp, #224]
  43f710:	str	q6, [sp, #240]
  43f714:	str	q7, [sp, #256]
  43f718:	stp	x2, x3, [sp, #272]
  43f71c:	stp	x4, x5, [sp, #288]
  43f720:	stp	x6, x7, [sp, #304]
  43f724:	cbz	x0, 43f810 <argp_error@@Base+0x130>
  43f728:	ldr	w0, [x0, #28]
  43f72c:	tbnz	w0, #1, 43f800 <argp_error@@Base+0x120>
  43f730:	ldr	x19, [x20, #72]
  43f734:	cbz	x19, 43f800 <argp_error@@Base+0x120>
  43f738:	mov	x0, x19
  43f73c:	bl	404090 <flockfile@plt>
  43f740:	mov	w0, #0xffffff80            	// #-128
  43f744:	mov	w1, #0xffffffd0            	// #-48
  43f748:	stp	w1, w0, [sp, #104]
  43f74c:	add	x2, sp, #0x110
  43f750:	ldr	x0, [x20, #64]
  43f754:	add	x3, sp, #0x140
  43f758:	stp	x3, x3, [sp, #80]
  43f75c:	str	x2, [sp, #96]
  43f760:	mov	x1, x19
  43f764:	bl	4049e0 <fputs_unlocked@plt>
  43f768:	ldp	x0, x1, [x19, #40]
  43f76c:	cmp	x0, x1
  43f770:	b.cs	43f85c <argp_error@@Base+0x17c>  // b.hs, b.nlast
  43f774:	add	x1, x0, #0x1
  43f778:	str	x1, [x19, #40]
  43f77c:	mov	w1, #0x3a                  	// #58
  43f780:	strb	w1, [x0]
  43f784:	ldp	x0, x1, [x19, #40]
  43f788:	cmp	x0, x1
  43f78c:	b.cs	43f86c <argp_error@@Base+0x18c>  // b.hs, b.nlast
  43f790:	add	x1, x0, #0x1
  43f794:	str	x1, [x19, #40]
  43f798:	mov	w1, #0x20                  	// #32
  43f79c:	strb	w1, [x0]
  43f7a0:	ldp	x6, x7, [sp, #80]
  43f7a4:	mov	w1, #0x1                   	// #1
  43f7a8:	ldp	x4, x5, [sp, #96]
  43f7ac:	mov	x2, x21
  43f7b0:	add	x3, sp, #0x30
  43f7b4:	mov	x0, x19
  43f7b8:	stp	x6, x7, [sp, #48]
  43f7bc:	stp	x4, x5, [sp, #64]
  43f7c0:	stp	x6, x7, [sp, #112]
  43f7c4:	stp	x4, x5, [sp, #128]
  43f7c8:	bl	4044a0 <__vfprintf_chk@plt>
  43f7cc:	ldp	x0, x1, [x19, #40]
  43f7d0:	cmp	x0, x1
  43f7d4:	b.cs	43f84c <argp_error@@Base+0x16c>  // b.hs, b.nlast
  43f7d8:	add	x1, x0, #0x1
  43f7dc:	str	x1, [x19, #40]
  43f7e0:	mov	w1, #0xa                   	// #10
  43f7e4:	strb	w1, [x0]
  43f7e8:	mov	x1, x19
  43f7ec:	mov	w2, #0x104                 	// #260
  43f7f0:	mov	x0, x20
  43f7f4:	bl	43f640 <argp_state_help@@Base>
  43f7f8:	mov	x0, x19
  43f7fc:	bl	404330 <funlockfile@plt>
  43f800:	ldp	x19, x20, [sp, #16]
  43f804:	ldr	x21, [sp, #32]
  43f808:	ldp	x29, x30, [sp], #320
  43f80c:	ret
  43f810:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43f814:	ldr	x19, [x0, #1176]
  43f818:	cbz	x19, 43f800 <argp_error@@Base+0x120>
  43f81c:	mov	x0, x19
  43f820:	bl	404090 <flockfile@plt>
  43f824:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43f828:	add	x3, sp, #0x110
  43f82c:	add	x4, sp, #0x140
  43f830:	mov	w2, #0xffffffd0            	// #-48
  43f834:	mov	w1, #0xffffff80            	// #-128
  43f838:	stp	x4, x4, [sp, #80]
  43f83c:	ldr	x0, [x0, #1208]
  43f840:	str	x3, [sp, #96]
  43f844:	stp	w2, w1, [sp, #104]
  43f848:	b	43f760 <argp_error@@Base+0x80>
  43f84c:	mov	x0, x19
  43f850:	mov	w1, #0xa                   	// #10
  43f854:	bl	404680 <__overflow@plt>
  43f858:	b	43f7e8 <argp_error@@Base+0x108>
  43f85c:	mov	x0, x19
  43f860:	mov	w1, #0x3a                  	// #58
  43f864:	bl	404680 <__overflow@plt>
  43f868:	b	43f784 <argp_error@@Base+0xa4>
  43f86c:	mov	x0, x19
  43f870:	mov	w1, #0x20                  	// #32
  43f874:	bl	404680 <__overflow@plt>
  43f878:	b	43f7a0 <argp_error@@Base+0xc0>
  43f87c:	nop
  43f880:	stp	x29, x30, [sp, #-32]!
  43f884:	mov	x29, sp
  43f888:	ldr	x2, [x0]
  43f88c:	stp	x19, x20, [sp, #16]
  43f890:	mov	x19, x1
  43f894:	ldr	x20, [x0, #32]
  43f898:	cbz	x2, 43f934 <argp_error@@Base+0x254>
  43f89c:	ldr	x1, [x1, #16]
  43f8a0:	mov	w0, #0x0                   	// #0
  43f8a4:	add	x1, x1, #0x1
  43f8a8:	str	x1, [x19, #16]
  43f8ac:	nop
  43f8b0:	ldr	w3, [x2, #8]
  43f8b4:	add	x2, x2, #0x30
  43f8b8:	cbnz	w3, 43f8c4 <argp_error@@Base+0x1e4>
  43f8bc:	ldur	x3, [x2, #-48]
  43f8c0:	cbz	x3, 43f8cc <argp_error@@Base+0x1ec>
  43f8c4:	add	w0, w0, #0x1
  43f8c8:	b	43f8b0 <argp_error@@Base+0x1d0>
  43f8cc:	ldur	x1, [x2, #-16]
  43f8d0:	cbnz	x1, 43f8c4 <argp_error@@Base+0x1e4>
  43f8d4:	ldur	w1, [x2, #-8]
  43f8d8:	cbnz	w1, 43f8c4 <argp_error@@Base+0x1e4>
  43f8dc:	add	w2, w0, w0, lsl #1
  43f8e0:	sxtw	x0, w0
  43f8e4:	ldr	q1, [x19]
  43f8e8:	sxtw	x2, w2
  43f8ec:	fmov	d0, x2
  43f8f0:	mov	v0.d[1], x3
  43f8f4:	mov	v0.d[1], x0
  43f8f8:	add	v0.2d, v0.2d, v1.2d
  43f8fc:	str	q0, [x19]
  43f900:	cbz	x20, 43f928 <argp_error@@Base+0x248>
  43f904:	ldr	x0, [x20]
  43f908:	cbz	x0, 43f928 <argp_error@@Base+0x248>
  43f90c:	mov	x1, x19
  43f910:	bl	43f880 <argp_error@@Base+0x1a0>
  43f914:	ldr	x1, [x19, #24]
  43f918:	ldr	x0, [x20, #32]!
  43f91c:	add	x1, x1, #0x1
  43f920:	str	x1, [x19, #24]
  43f924:	cbnz	x0, 43f90c <argp_error@@Base+0x22c>
  43f928:	ldp	x19, x20, [sp, #16]
  43f92c:	ldp	x29, x30, [sp], #32
  43f930:	ret
  43f934:	ldr	x0, [x0, #8]
  43f938:	cbz	x0, 43f900 <argp_error@@Base+0x220>
  43f93c:	ldr	x0, [x1, #16]
  43f940:	add	x0, x0, #0x1
  43f944:	str	x0, [x1, #16]
  43f948:	b	43f900 <argp_error@@Base+0x220>
  43f94c:	nop
  43f950:	cmp	w0, #0x56
  43f954:	b.eq	43f960 <argp_error@@Base+0x280>  // b.none
  43f958:	mov	w0, #0x7                   	// #7
  43f95c:	ret
  43f960:	stp	x29, x30, [sp, #-32]!
  43f964:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43f968:	mov	x29, sp
  43f96c:	str	x19, [sp, #16]
  43f970:	mov	x19, x2
  43f974:	ldr	x2, [x0, #3616]
  43f978:	cbz	x2, 43f9a4 <argp_error@@Base+0x2c4>
  43f97c:	ldr	x0, [x19, #80]
  43f980:	mov	x1, x19
  43f984:	blr	x2
  43f988:	ldr	w1, [x19, #28]
  43f98c:	mov	w0, #0x0                   	// #0
  43f990:	tbz	w1, #5, 43f9a0 <argp_error@@Base+0x2c0>
  43f994:	ldr	x19, [sp, #16]
  43f998:	ldp	x29, x30, [sp], #32
  43f99c:	ret
  43f9a0:	bl	404020 <exit@plt>
  43f9a4:	adrp	x0, 497000 <argp_program_version_hook@@Base+0x1e0>
  43f9a8:	ldr	x3, [x0, #1160]
  43f9ac:	cbz	x3, 43f9c8 <argp_error@@Base+0x2e8>
  43f9b0:	ldr	x0, [x19, #80]
  43f9b4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  43f9b8:	mov	w1, #0x1                   	// #1
  43f9bc:	add	x2, x2, #0xb80
  43f9c0:	bl	404700 <__fprintf_chk@plt>
  43f9c4:	b	43f988 <argp_error@@Base+0x2a8>
  43f9c8:	ldr	x0, [x19]
  43f9cc:	mov	w2, #0x5                   	// #5
  43f9d0:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43f9d4:	add	x1, x1, #0xf90
  43f9d8:	ldr	x0, [x0, #48]
  43f9dc:	bl	4049c0 <dcgettext@plt>
  43f9e0:	mov	x2, x0
  43f9e4:	adrp	x1, 469000 <_obstack_memory_used@@Base+0x17bf0>
  43f9e8:	mov	x0, x19
  43f9ec:	add	x1, x1, #0x828
  43f9f0:	bl	43f6e0 <argp_error@@Base>
  43f9f4:	b	43f988 <argp_error@@Base+0x2a8>
  43f9f8:	stp	x29, x30, [sp, #-32]!
  43f9fc:	cmn	w0, #0x2
  43fa00:	mov	x29, sp
  43fa04:	stp	x19, x20, [sp, #16]
  43fa08:	mov	x20, x1
  43fa0c:	mov	x19, x2
  43fa10:	b.eq	43fa78 <argp_error@@Base+0x398>  // b.none
  43fa14:	cmn	w0, #0x1
  43fa18:	b.ge	43fa4c <argp_error@@Base+0x36c>  // b.tcont
  43fa1c:	cmn	w0, #0x4
  43fa20:	b.eq	43fab4 <argp_error@@Base+0x3d4>  // b.none
  43fa24:	cmn	w0, #0x3
  43fa28:	b.ne	43fb24 <argp_error@@Base+0x444>  // b.any
  43fa2c:	ldr	x1, [x19, #80]
  43fa30:	mov	x0, x2
  43fa34:	mov	w2, #0x201                 	// #513
  43fa38:	bl	43f640 <argp_state_help@@Base>
  43fa3c:	mov	w0, #0x0                   	// #0
  43fa40:	ldp	x19, x20, [sp, #16]
  43fa44:	ldp	x29, x30, [sp], #32
  43fa48:	ret
  43fa4c:	cmp	w0, #0x3f
  43fa50:	mov	w0, #0x7                   	// #7
  43fa54:	b.ne	43fa40 <argp_error@@Base+0x360>  // b.any
  43fa58:	ldr	x1, [x19, #80]
  43fa5c:	mov	x0, x2
  43fa60:	mov	w2, #0x27a                 	// #634
  43fa64:	bl	43f640 <argp_state_help@@Base>
  43fa68:	mov	w0, #0x0                   	// #0
  43fa6c:	ldp	x19, x20, [sp, #16]
  43fa70:	ldp	x29, x30, [sp], #32
  43fa74:	ret
  43fa78:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43fa7c:	mov	x0, x20
  43fa80:	str	x20, [x1, #1168]
  43fa84:	bl	441558 <argp_parse@@Base+0x1778>
  43fa88:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43fa8c:	ldr	w1, [x19, #28]
  43fa90:	str	x0, [x19, #64]
  43fa94:	str	x0, [x2, #1208]
  43fa98:	and	w1, w1, #0x3
  43fa9c:	cmp	w1, #0x1
  43faa0:	b.eq	43fb14 <argp_error@@Base+0x434>  // b.none
  43faa4:	mov	w0, #0x0                   	// #0
  43faa8:	ldp	x19, x20, [sp, #16]
  43faac:	ldp	x29, x30, [sp], #32
  43fab0:	ret
  43fab4:	cmp	x1, #0x0
  43fab8:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43fabc:	adrp	x0, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  43fac0:	add	x0, x0, #0xfb8
  43fac4:	csel	x0, x0, x1, eq  // eq = none
  43fac8:	mov	w2, #0xa                   	// #10
  43facc:	mov	x1, #0x0                   	// #0
  43fad0:	bl	404770 <strtol@plt>
  43fad4:	str	w0, [x19, #3608]
  43fad8:	ldr	w0, [x19, #3608]
  43fadc:	sub	w1, w0, #0x1
  43fae0:	str	w1, [x19, #3608]
  43fae4:	cmp	w0, #0x0
  43fae8:	b.le	43faa4 <argp_error@@Base+0x3c4>
  43faec:	add	x19, x19, #0xe18
  43faf0:	mov	w0, #0x1                   	// #1
  43faf4:	bl	404460 <sleep@plt>
  43faf8:	ldr	w0, [x19]
  43fafc:	sub	w1, w0, #0x1
  43fb00:	str	w1, [x19]
  43fb04:	cmp	w0, #0x0
  43fb08:	b.gt	43faf0 <argp_error@@Base+0x410>
  43fb0c:	mov	w0, #0x0                   	// #0
  43fb10:	b	43faa8 <argp_error@@Base+0x3c8>
  43fb14:	ldr	x1, [x19, #16]
  43fb18:	mov	w0, #0x0                   	// #0
  43fb1c:	str	x20, [x1]
  43fb20:	b	43fa40 <argp_error@@Base+0x360>
  43fb24:	mov	w0, #0x7                   	// #7
  43fb28:	b	43fa40 <argp_error@@Base+0x360>
  43fb2c:	nop
  43fb30:	stp	x29, x30, [sp, #-128]!
  43fb34:	mov	x29, sp
  43fb38:	stp	x19, x20, [sp, #16]
  43fb3c:	mov	x19, x4
  43fb40:	ldr	x20, [x0]
  43fb44:	stp	x0, x1, [sp, #104]
  43fb48:	ldr	x0, [x0, #32]
  43fb4c:	stp	x23, x24, [sp, #48]
  43fb50:	mov	x24, x3
  43fb54:	str	x0, [sp, #96]
  43fb58:	str	w2, [sp, #124]
  43fb5c:	cbz	x20, 43fdb8 <argp_error@@Base+0x6d8>
  43fb60:	ldr	x23, [x4, #8]
  43fb64:	stp	x27, x28, [sp, #80]
  43fb68:	mov	x28, x20
  43fb6c:	stp	x21, x22, [sp, #32]
  43fb70:	stp	x25, x26, [sp, #64]
  43fb74:	nop
  43fb78:	ldr	w22, [x28, #8]
  43fb7c:	cbnz	w22, 43fb88 <argp_error@@Base+0x4a8>
  43fb80:	ldr	x0, [x28]
  43fb84:	cbz	x0, 43fcd0 <argp_error@@Base+0x5f0>
  43fb88:	ldr	w1, [x28, #24]
  43fb8c:	tbz	w1, #2, 43fcb0 <argp_error@@Base+0x5d0>
  43fb90:	ldr	w0, [x20, #24]
  43fb94:	and	w21, w0, #0x8
  43fb98:	tbnz	w0, #3, 43fca8 <argp_error@@Base+0x5c8>
  43fb9c:	tbnz	w1, #3, 43fc0c <argp_error@@Base+0x52c>
  43fba0:	sub	w0, w22, #0x1
  43fba4:	cmp	w0, #0xfe
  43fba8:	b.hi	43fc0c <argp_error@@Base+0x52c>  // b.pmore
  43fbac:	bl	404740 <__ctype_b_loc@plt>
  43fbb0:	ldr	x0, [x0]
  43fbb4:	ldrh	w0, [x0, w22, sxtw #1]
  43fbb8:	tbz	w0, #14, 43fc0c <argp_error@@Base+0x52c>
  43fbbc:	add	x0, x23, #0x1
  43fbc0:	str	x0, [x19, #8]
  43fbc4:	strb	w22, [x23]
  43fbc8:	ldr	x0, [x20, #16]
  43fbcc:	cbz	x0, 43fc00 <argp_error@@Base+0x520>
  43fbd0:	ldr	x0, [x19, #8]
  43fbd4:	add	x1, x0, #0x1
  43fbd8:	str	x1, [x19, #8]
  43fbdc:	mov	w1, #0x3a                  	// #58
  43fbe0:	strb	w1, [x0]
  43fbe4:	ldr	w0, [x20, #24]
  43fbe8:	tbz	w0, #0, 43fc00 <argp_error@@Base+0x520>
  43fbec:	ldr	x0, [x19, #8]
  43fbf0:	add	x1, x0, #0x1
  43fbf4:	str	x1, [x19, #8]
  43fbf8:	mov	w1, #0x3a                  	// #58
  43fbfc:	strb	w1, [x0]
  43fc00:	ldr	x0, [x19, #8]
  43fc04:	strb	wzr, [x0]
  43fc08:	ldr	x23, [x19, #8]
  43fc0c:	ldr	x27, [x28]
  43fc10:	cbz	x27, 43fca8 <argp_error@@Base+0x5c8>
  43fc14:	ldr	x25, [x19]
  43fc18:	ldr	x22, [x25, #16]
  43fc1c:	ldr	x0, [x22]
  43fc20:	cbz	x0, 43fc3c <argp_error@@Base+0x55c>
  43fc24:	mov	x26, x22
  43fc28:	mov	x1, x27
  43fc2c:	bl	404710 <strcmp@plt>
  43fc30:	cbz	w0, 43fcbc <argp_error@@Base+0x5dc>
  43fc34:	ldr	x0, [x26, #32]!
  43fc38:	cbnz	x0, 43fc28 <argp_error@@Base+0x548>
  43fc3c:	ldr	x3, [x19, #16]
  43fc40:	ldr	x0, [x20, #16]
  43fc44:	str	x27, [x3]
  43fc48:	cbz	x0, 43fc58 <argp_error@@Base+0x578>
  43fc4c:	ldr	w21, [x20, #24]
  43fc50:	and	w21, w21, #0x1
  43fc54:	add	w21, w21, #0x1
  43fc58:	str	w21, [x3, #8]
  43fc5c:	str	xzr, [x3, #16]
  43fc60:	ldr	w0, [x28, #8]
  43fc64:	cbnz	w0, 43fc6c <argp_error@@Base+0x58c>
  43fc68:	ldr	w0, [x20, #8]
  43fc6c:	and	w1, w0, #0xffffff
  43fc70:	mov	x2, #0x8e39                	// #36409
  43fc74:	ldr	x0, [x25, #80]
  43fc78:	movk	x2, #0x38e3, lsl #16
  43fc7c:	movk	x2, #0xe38e, lsl #32
  43fc80:	add	x4, x3, #0x20
  43fc84:	sub	x0, x24, x0
  43fc88:	movk	x2, #0x8e38, lsl #48
  43fc8c:	asr	x0, x0, #3
  43fc90:	mul	x0, x0, x2
  43fc94:	add	w0, w0, #0x1
  43fc98:	add	w0, w1, w0, lsl #24
  43fc9c:	str	w0, [x3, #24]
  43fca0:	str	x4, [x19, #16]
  43fca4:	str	xzr, [x3, #32]
  43fca8:	add	x28, x28, #0x30
  43fcac:	b	43fb78 <argp_error@@Base+0x498>
  43fcb0:	mov	w0, w1
  43fcb4:	mov	x20, x28
  43fcb8:	b	43fb94 <argp_error@@Base+0x4b4>
  43fcbc:	sub	x22, x26, x22
  43fcc0:	asr	x22, x22, #5
  43fcc4:	tbnz	w22, #31, 43fc3c <argp_error@@Base+0x55c>
  43fcc8:	add	x28, x28, #0x30
  43fccc:	b	43fb78 <argp_error@@Base+0x498>
  43fcd0:	ldr	x0, [x28, #32]
  43fcd4:	cbnz	x0, 43fb88 <argp_error@@Base+0x4a8>
  43fcd8:	ldr	w0, [x28, #40]
  43fcdc:	cbnz	w0, 43fb88 <argp_error@@Base+0x4a8>
  43fce0:	ldr	x0, [sp, #104]
  43fce4:	ldp	x21, x22, [sp, #32]
  43fce8:	ldp	x25, x26, [sp, #64]
  43fcec:	ldp	x27, x28, [sp, #80]
  43fcf0:	ldr	x0, [x0, #8]
  43fcf4:	str	x0, [x24]
  43fcf8:	ldr	x0, [sp, #104]
  43fcfc:	str	x0, [x24, #8]
  43fd00:	ldr	x0, [sp, #112]
  43fd04:	str	x0, [x24, #32]
  43fd08:	ldr	w0, [sp, #124]
  43fd0c:	str	w0, [x24, #40]
  43fd10:	ldr	x0, [sp, #96]
  43fd14:	str	x23, [x24, #16]
  43fd18:	str	wzr, [x24, #24]
  43fd1c:	stp	xzr, xzr, [x24, #48]
  43fd20:	str	xzr, [x24, #64]
  43fd24:	cbz	x0, 43fd64 <argp_error@@Base+0x684>
  43fd28:	ldr	x0, [x0]
  43fd2c:	cbz	x0, 43fdd4 <argp_error@@Base+0x6f4>
  43fd30:	mov	w0, #0x0                   	// #0
  43fd34:	nop
  43fd38:	add	w2, w0, #0x1
  43fd3c:	ldr	x3, [sp, #96]
  43fd40:	ubfiz	x1, x2, #5, #32
  43fd44:	mov	x0, x2
  43fd48:	ldr	x1, [x3, x1]
  43fd4c:	cbnz	x1, 43fd38 <argp_error@@Base+0x658>
  43fd50:	lsl	x2, x2, #3
  43fd54:	ldr	x0, [x19, #24]
  43fd58:	str	x0, [x24, #56]
  43fd5c:	add	x2, x0, x2
  43fd60:	str	x2, [x19, #24]
  43fd64:	add	x3, x24, #0x48
  43fd68:	ldr	x0, [sp, #96]
  43fd6c:	cbz	x0, 43fda4 <argp_error@@Base+0x6c4>
  43fd70:	ldr	x0, [x0]
  43fd74:	cbz	x0, 43fda4 <argp_error@@Base+0x6c4>
  43fd78:	mov	w20, #0x0                   	// #0
  43fd7c:	mov	w2, w20
  43fd80:	mov	x1, x24
  43fd84:	mov	x4, x19
  43fd88:	bl	43fb30 <argp_error@@Base+0x450>
  43fd8c:	ldr	x1, [sp, #96]
  43fd90:	mov	x3, x0
  43fd94:	add	w20, w20, #0x1
  43fd98:	ldr	x0, [x1, #32]!
  43fd9c:	str	x1, [sp, #96]
  43fda0:	cbnz	x0, 43fd7c <argp_error@@Base+0x69c>
  43fda4:	mov	x0, x3
  43fda8:	ldp	x19, x20, [sp, #16]
  43fdac:	ldp	x23, x24, [sp, #48]
  43fdb0:	ldp	x29, x30, [sp], #128
  43fdb4:	ret
  43fdb8:	ldr	x0, [sp, #104]
  43fdbc:	ldr	x0, [x0, #8]
  43fdc0:	cbz	x0, 43fdcc <argp_error@@Base+0x6ec>
  43fdc4:	ldr	x23, [x4, #8]
  43fdc8:	b	43fcf4 <argp_error@@Base+0x614>
  43fdcc:	mov	x24, #0x0                   	// #0
  43fdd0:	b	43fd68 <argp_error@@Base+0x688>
  43fdd4:	mov	x2, #0x0                   	// #0
  43fdd8:	b	43fd54 <argp_error@@Base+0x674>
  43fddc:	nop

000000000043fde0 <argp_parse@@Base>:
  43fde0:	stp	x29, x30, [sp, #-464]!
  43fde4:	mov	x29, sp
  43fde8:	stp	x19, x20, [sp, #16]
  43fdec:	mov	w20, w1
  43fdf0:	stp	x21, x22, [sp, #32]
  43fdf4:	mov	x22, x2
  43fdf8:	stp	x23, x24, [sp, #48]
  43fdfc:	mov	w24, w3
  43fe00:	stp	x25, x26, [sp, #64]
  43fe04:	mov	x26, x5
  43fe08:	stp	x27, x28, [sp, #80]
  43fe0c:	mov	x28, x0
  43fe10:	str	x4, [x29, #104]
  43fe14:	tbnz	w24, #0, 43fe30 <argp_parse@@Base+0x50>
  43fe18:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43fe1c:	ldr	x1, [x0, #1168]
  43fe20:	cbz	x1, 4406e8 <argp_parse@@Base+0x908>
  43fe24:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  43fe28:	ldr	x0, [x19, #1208]
  43fe2c:	cbz	x0, 4406fc <argp_parse@@Base+0x91c>
  43fe30:	ands	w0, w24, #0x4
  43fe34:	str	w0, [x29, #100]
  43fe38:	cset	x0, eq  // eq = none
  43fe3c:	tbz	w24, #4, 43fe70 <argp_parse@@Base+0x90>
  43fe40:	stp	x0, xzr, [x29, #120]
  43fe44:	stp	xzr, xzr, [x29, #136]
  43fe48:	stp	xzr, xzr, [x29, #184]
  43fe4c:	stp	xzr, xzr, [x29, #200]
  43fe50:	stp	xzr, xzr, [x29, #216]
  43fe54:	str	xzr, [x29, #232]
  43fe58:	cbnz	x28, 43ff08 <argp_parse@@Base+0x128>
  43fe5c:	mov	x25, #0x48                  	// #72
  43fe60:	mov	x19, #0x68                  	// #104
  43fe64:	mov	x21, x25
  43fe68:	mov	x23, #0x0                   	// #0
  43fe6c:	b	43ff38 <argp_parse@@Base+0x158>
  43fe70:	sub	sp, sp, #0x80
  43fe74:	mov	x1, sp
  43fe78:	sub	sp, sp, #0x40
  43fe7c:	mov	x2, sp
  43fe80:	mov	x3, x1
  43fe84:	stp	xzr, xzr, [x1]
  43fe88:	stp	xzr, xzr, [x2, #32]
  43fe8c:	stp	xzr, xzr, [x2]
  43fe90:	stp	xzr, xzr, [x1, #16]
  43fe94:	stp	xzr, xzr, [x2, #16]
  43fe98:	stp	xzr, xzr, [x1, #32]
  43fe9c:	str	x1, [x2, #32]
  43fea0:	stp	xzr, xzr, [x1, #48]
  43fea4:	str	xzr, [x2, #48]
  43fea8:	stp	xzr, xzr, [x1, #64]
  43feac:	stp	xzr, xzr, [x1, #80]
  43feb0:	stp	xzr, xzr, [x1, #96]
  43feb4:	stp	xzr, xzr, [x1, #112]
  43feb8:	cbz	x28, 43fec4 <argp_parse@@Base+0xe4>
  43febc:	add	x3, x1, #0x20
  43fec0:	str	x28, [x1]
  43fec4:	adrp	x4, 497000 <argp_program_version_hook@@Base+0x1e0>
  43fec8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  43fecc:	add	x1, x1, #0xc0
  43fed0:	str	x1, [x3]
  43fed4:	ldr	x4, [x4, #1160]
  43fed8:	cbz	x4, 44095c <argp_parse@@Base+0xb7c>
  43fedc:	add	x4, x3, #0x40
  43fee0:	add	x1, x1, #0x38
  43fee4:	str	x1, [x3, #32]
  43fee8:	mov	x28, x2
  43feec:	str	xzr, [x4]
  43fef0:	stp	x0, xzr, [x29, #120]
  43fef4:	stp	xzr, xzr, [x29, #136]
  43fef8:	stp	xzr, xzr, [x29, #184]
  43fefc:	stp	xzr, xzr, [x29, #200]
  43ff00:	stp	xzr, xzr, [x29, #216]
  43ff04:	str	xzr, [x29, #232]
  43ff08:	mov	x0, x28
  43ff0c:	add	x1, x29, #0x78
  43ff10:	bl	43f880 <argp_error@@Base+0x1a0>
  43ff14:	ldp	x3, x2, [x29, #136]
  43ff18:	ldp	x0, x19, [x29, #120]
  43ff1c:	add	x3, x3, #0x1
  43ff20:	lsl	x23, x2, #3
  43ff24:	add	x3, x3, x3, lsl #3
  43ff28:	add	x19, x19, #0x1
  43ff2c:	lsl	x21, x3, #3
  43ff30:	add	x25, x21, x23
  43ff34:	add	x19, x25, x19, lsl #5
  43ff38:	add	x0, x0, x19
  43ff3c:	add	x0, x0, #0x1
  43ff40:	bl	404310 <malloc@plt>
  43ff44:	str	x0, [x29, #448]
  43ff48:	mov	x27, x0
  43ff4c:	cbz	x0, 440a74 <argp_parse@@Base+0xc94>
  43ff50:	movi	v0.2s, #0x1
  43ff54:	add	x1, x29, #0x200
  43ff58:	ldp	x6, x7, [x29, #200]
  43ff5c:	add	x3, x0, x21
  43ff60:	ldp	x4, x5, [x29, #216]
  43ff64:	str	d0, [x29, #184]
  43ff68:	ldp	x8, x9, [x29, #184]
  43ff6c:	stp	x8, x9, [x1, #-248]
  43ff70:	add	x25, x0, x25
  43ff74:	ldr	x12, [x29, #232]
  43ff78:	add	x8, x29, #0x210
  43ff7c:	mov	x2, x23
  43ff80:	mov	x0, x3
  43ff84:	add	x23, x27, x19
  43ff88:	add	x21, x29, #0xf0
  43ff8c:	mov	w1, #0x0                   	// #0
  43ff90:	stp	x6, x7, [x8, #-248]
  43ff94:	stp	x4, x5, [x8, #-232]
  43ff98:	stp	x23, x25, [x29, #248]
  43ff9c:	stp	x12, x27, [x29, #312]
  43ffa0:	str	x3, [x29, #336]
  43ffa4:	bl	404410 <memset@plt>
  43ffa8:	stp	x21, x23, [x29, #152]
  43ffac:	stp	x25, x0, [x29, #168]
  43ffb0:	tbnz	w24, #3, 4400e8 <argp_parse@@Base+0x308>
  43ffb4:	mov	x0, x23
  43ffb8:	ands	w1, w24, #0x4
  43ffbc:	cbz	w1, 43ffd0 <argp_parse@@Base+0x1f0>
  43ffc0:	add	x0, x23, #0x1
  43ffc4:	mov	w1, #0x2b                  	// #43
  43ffc8:	strb	w1, [x23]
  43ffcc:	str	x0, [x29, #160]
  43ffd0:	ldr	x1, [x29, #168]
  43ffd4:	strb	wzr, [x0]
  43ffd8:	str	xzr, [x1]
  43ffdc:	str	x28, [x29, #240]
  43ffe0:	cbz	x28, 44010c <argp_parse@@Base+0x32c>
  43ffe4:	ldr	x3, [x29, #320]
  43ffe8:	add	x4, x29, #0x98
  43ffec:	mov	w2, #0x0                   	// #0
  43fff0:	mov	x1, #0x0                   	// #0
  43fff4:	mov	x0, x28
  43fff8:	bl	43fb30 <argp_error@@Base+0x450>
  43fffc:	str	x21, [x29, #440]
  440000:	add	x4, x29, #0x210
  440004:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440008:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44000c:	str	x0, [x29, #328]
  440010:	ldr	x5, [x29, #240]
  440014:	stp	xzr, xzr, [x4, #-168]
  440018:	mov	x1, x22
  44001c:	ldr	x4, [x2, #1176]
  440020:	mov	w2, #0x1                   	// #1
  440024:	ldr	x3, [x3, #1184]
  440028:	stp	xzr, xzr, [x21, #136]
  44002c:	str	w2, [x29, #344]
  440030:	stp	x4, x3, [x29, #424]
  440034:	ldr	x2, [x29, #320]
  440038:	stp	xzr, xzr, [x21, #152]
  44003c:	stp	xzr, xzr, [x21, #168]
  440040:	cmp	x0, x2
  440044:	str	x5, [x29, #352]
  440048:	str	w20, [x29, #360]
  44004c:	str	x22, [x29, #368]
  440050:	str	w24, [x29, #380]
  440054:	b.ls	44015c <argp_parse@@Base+0x37c>  // b.plast
  440058:	mov	w23, #0x3                   	// #3
  44005c:	add	x20, x2, #0x48
  440060:	add	x24, x21, #0x70
  440064:	movk	w23, #0x100, lsl #16
  440068:	str	x26, [x2, #48]
  44006c:	nop
  440070:	ldur	x3, [x20, #-40]
  440074:	mov	x2, x24
  440078:	mov	w0, w23
  44007c:	mov	x1, #0x0                   	// #0
  440080:	cbz	x3, 440094 <argp_parse@@Base+0x2b4>
  440084:	ldur	w4, [x20, #-32]
  440088:	ldr	x3, [x3, #56]
  44008c:	ldr	x3, [x3, x4, lsl #3]
  440090:	stur	x3, [x20, #-24]
  440094:	ldur	x3, [x20, #-72]
  440098:	cbz	x3, 44031c <argp_parse@@Base+0x53c>
  44009c:	ldur	x4, [x20, #-8]
  4400a0:	str	x4, [x29, #408]
  4400a4:	ldur	w4, [x20, #-48]
  4400a8:	ldur	q0, [x20, #-24]
  4400ac:	str	w4, [x29, #384]
  4400b0:	add	x4, x29, #0x210
  4400b4:	stur	q0, [x4, #-136]
  4400b8:	blr	x3
  4400bc:	mov	w19, w0
  4400c0:	ldr	x1, [x29, #408]
  4400c4:	stur	x1, [x20, #-8]
  4400c8:	ldr	x3, [x29, #328]
  4400cc:	cmp	x3, x20
  4400d0:	b.ls	440574 <argp_parse@@Base+0x794>  // b.plast
  4400d4:	cmp	w0, #0x0
  4400d8:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  4400dc:	b.ne	4402f8 <argp_parse@@Base+0x518>  // b.any
  4400e0:	add	x20, x20, #0x48
  4400e4:	b	440070 <argp_parse@@Base+0x290>
  4400e8:	mov	w1, #0x2d                  	// #45
  4400ec:	add	x0, x23, #0x1
  4400f0:	strb	w1, [x27, x19]
  4400f4:	ldr	x1, [x29, #168]
  4400f8:	str	x0, [x29, #160]
  4400fc:	strb	wzr, [x0]
  440100:	str	xzr, [x1]
  440104:	str	x28, [x29, #240]
  440108:	cbnz	x28, 43ffe4 <argp_parse@@Base+0x204>
  44010c:	add	x3, x29, #0x210
  440110:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440114:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440118:	mov	w4, #0x1                   	// #1
  44011c:	str	w4, [x29, #344]
  440120:	stp	xzr, xzr, [x3, #-168]
  440124:	ldr	x2, [x2, #1184]
  440128:	stp	xzr, xzr, [x21, #136]
  44012c:	ldr	x3, [x1, #1176]
  440130:	mov	x1, x22
  440134:	stp	x3, x2, [x29, #424]
  440138:	str	x21, [x29, #440]
  44013c:	ldr	x4, [x29, #320]
  440140:	stp	xzr, xzr, [x21, #152]
  440144:	stp	xzr, xzr, [x21, #168]
  440148:	str	x4, [x29, #328]
  44014c:	str	xzr, [x29, #352]
  440150:	str	w20, [x29, #360]
  440154:	str	x22, [x29, #368]
  440158:	str	w24, [x29, #380]
  44015c:	tbz	w24, #1, 44035c <argp_parse@@Base+0x57c>
  440160:	str	wzr, [x29, #268]
  440164:	ldr	w19, [x29, #360]
  440168:	tbnz	w24, #0, 4406d4 <argp_parse@@Base+0x8f4>
  44016c:	cmp	x22, x1
  440170:	b.eq	440370 <argp_parse@@Base+0x590>  // b.none
  440174:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440178:	ldr	x0, [x0, #1208]
  44017c:	str	x0, [x29, #416]
  440180:	ldr	w2, [x29, #344]
  440184:	mov	w24, #0x6                   	// #6
  440188:	ldr	w28, [x29, #376]
  44018c:	mov	w0, w19
  440190:	add	x22, x21, #0x70
  440194:	mov	w26, #0xffffffff            	// #-1
  440198:	movk	w24, #0x100, lsl #16
  44019c:	ldr	w1, [x29, #388]
  4401a0:	cbz	w1, 4401b0 <argp_parse@@Base+0x3d0>
  4401a4:	cmp	w1, w28
  4401a8:	b.le	4401b4 <argp_parse@@Base+0x3d4>
  4401ac:	str	wzr, [x29, #388]
  4401b0:	cbnz	w2, 4404a4 <argp_parse@@Base+0x6c4>
  4401b4:	cmp	w28, w0
  4401b8:	b.ge	440408 <argp_parse@@Base+0x628>  // b.tcont
  4401bc:	ldr	w0, [x29, #380]
  4401c0:	tbnz	w0, #2, 440594 <argp_parse@@Base+0x7b4>
  4401c4:	ldr	x0, [x29, #368]
  4401c8:	ldr	x23, [x0, w28, sxtw #3]
  4401cc:	str	x23, [x29, #280]
  4401d0:	ldp	x27, x3, [x29, #320]
  4401d4:	str	w28, [x29, #376]
  4401d8:	cmp	x27, x3
  4401dc:	b.cs	4403fc <argp_parse@@Base+0x61c>  // b.hs, b.nlast
  4401e0:	mov	w5, w28
  4401e4:	nop
  4401e8:	mov	x20, x27
  4401ec:	ldr	x4, [x20]
  4401f0:	add	w6, w5, #0x1
  4401f4:	str	w6, [x29, #376]
  4401f8:	mov	x2, x22
  4401fc:	mov	x1, x23
  440200:	mov	w0, #0x0                   	// #0
  440204:	cbz	x4, 4403ec <argp_parse@@Base+0x60c>
  440208:	ldr	x3, [x20, #64]
  44020c:	str	x3, [x29, #408]
  440210:	ldr	w3, [x20, #24]
  440214:	ldr	q0, [x20, #48]
  440218:	str	w3, [x29, #384]
  44021c:	add	x3, x29, #0x210
  440220:	stur	q0, [x3, #-136]
  440224:	blr	x4
  440228:	mov	w19, w0
  44022c:	ldr	x1, [x29, #408]
  440230:	str	x1, [x20, #64]
  440234:	cmp	w0, #0x7
  440238:	b.eq	440384 <argp_parse@@Base+0x5a4>  // b.none
  44023c:	add	x27, x20, #0x48
  440240:	cbnz	w0, 44070c <argp_parse@@Base+0x92c>
  440244:	ldr	w0, [x29, #360]
  440248:	ldr	w1, [x29, #376]
  44024c:	cmp	w28, w1
  440250:	b.ge	4404f8 <argp_parse@@Base+0x718>  // b.tcont
  440254:	ldur	w3, [x27, #-48]
  440258:	sub	w4, w1, w28
  44025c:	ldr	w2, [x29, #344]
  440260:	mov	w28, w1
  440264:	add	w1, w3, w4
  440268:	stur	w1, [x27, #-48]
  44026c:	b	44019c <argp_parse@@Base+0x3bc>
  440270:	cmp	w0, #0x7
  440274:	b.eq	440630 <argp_parse@@Base+0x850>  // b.none
  440278:	ldr	x3, [x29, #328]
  44027c:	sub	x20, x3, #0x48
  440280:	cmp	x20, x4
  440284:	b.cc	4402e4 <argp_parse@@Base+0x504>  // b.lo, b.ul, b.last
  440288:	mov	w22, #0x7                   	// #7
  44028c:	add	x21, x21, #0x70
  440290:	movk	w22, #0x100, lsl #16
  440294:	nop
  440298:	ldr	x3, [x20]
  44029c:	mov	x2, x21
  4402a0:	mov	w0, w22
  4402a4:	mov	x1, #0x0                   	// #0
  4402a8:	cbz	x3, 440834 <argp_parse@@Base+0xa54>
  4402ac:	ldr	x4, [x20, #64]
  4402b0:	str	x4, [x29, #408]
  4402b4:	ldr	w4, [x20, #24]
  4402b8:	sub	x20, x20, #0x48
  4402bc:	ldur	q0, [x20, #120]
  4402c0:	str	w4, [x29, #384]
  4402c4:	add	x4, x29, #0x210
  4402c8:	stur	q0, [x4, #-136]
  4402cc:	blr	x3
  4402d0:	ldr	x0, [x29, #408]
  4402d4:	str	x0, [x20, #136]
  4402d8:	ldr	x4, [x29, #320]
  4402dc:	cmp	x20, x4
  4402e0:	b.cs	440298 <argp_parse@@Base+0x4b8>  // b.hs, b.nlast
  4402e4:	cmp	w19, #0x7
  4402e8:	mov	w0, #0x16                  	// #22
  4402ec:	csel	w19, w19, w0, ne  // ne = any
  4402f0:	ldr	x0, [x29, #448]
  4402f4:	bl	4047b0 <free@plt>
  4402f8:	mov	sp, x29
  4402fc:	mov	w0, w19
  440300:	ldp	x19, x20, [sp, #16]
  440304:	ldp	x21, x22, [sp, #32]
  440308:	ldp	x23, x24, [sp, #48]
  44030c:	ldp	x25, x26, [sp, #64]
  440310:	ldp	x27, x28, [sp, #80]
  440314:	ldp	x29, x30, [sp], #464
  440318:	ret
  44031c:	ldur	x3, [x20, #-64]
  440320:	ldr	x3, [x3, #32]
  440324:	cbz	x3, 440340 <argp_parse@@Base+0x560>
  440328:	ldr	x3, [x3]
  44032c:	cbz	x3, 440340 <argp_parse@@Base+0x560>
  440330:	ldp	x4, x3, [x20, #-24]
  440334:	str	x4, [x3]
  440338:	ldur	x3, [x20, #-72]
  44033c:	cbnz	x3, 44009c <argp_parse@@Base+0x2bc>
  440340:	ldr	x3, [x29, #328]
  440344:	cmp	x20, x3
  440348:	b.cc	4400e0 <argp_parse@@Base+0x300>  // b.lo, b.ul, b.last
  44034c:	ldr	w24, [x29, #380]
  440350:	ldr	x1, [x29, #368]
  440354:	nop
  440358:	tbnz	w24, #1, 440160 <argp_parse@@Base+0x380>
  44035c:	mov	w0, #0x1                   	// #1
  440360:	str	w0, [x29, #268]
  440364:	ldr	w19, [x29, #360]
  440368:	cmp	x22, x1
  44036c:	b.ne	440174 <argp_parse@@Base+0x394>  // b.any
  440370:	ldr	x0, [x22]
  440374:	cbz	x0, 440174 <argp_parse@@Base+0x394>
  440378:	bl	441558 <argp_parse@@Base+0x1778>
  44037c:	str	x0, [x29, #416]
  440380:	b	440180 <argp_parse@@Base+0x3a0>
  440384:	mov	x27, x20
  440388:	ldr	w5, [x29, #376]
  44038c:	sub	w5, w5, #0x1
  440390:	ldr	x3, [x27], #72
  440394:	str	w5, [x29, #376]
  440398:	cbz	x3, 440a7c <argp_parse@@Base+0xc9c>
  44039c:	ldr	x0, [x20, #64]
  4403a0:	str	x0, [x29, #408]
  4403a4:	add	x4, x29, #0x210
  4403a8:	ldr	w0, [x20, #24]
  4403ac:	ldr	q0, [x20, #48]
  4403b0:	str	w0, [x29, #384]
  4403b4:	mov	x2, x22
  4403b8:	mov	w0, w24
  4403bc:	mov	x1, #0x0                   	// #0
  4403c0:	stur	q0, [x4, #-136]
  4403c4:	blr	x3
  4403c8:	mov	w19, w0
  4403cc:	ldr	x3, [x29, #328]
  4403d0:	ldr	x0, [x29, #408]
  4403d4:	str	x0, [x20, #64]
  4403d8:	cmp	x3, x27
  4403dc:	ccmp	w19, #0x7, #0x0, hi  // hi = pmore
  4403e0:	b.ne	440a88 <argp_parse@@Base+0xca8>  // b.any
  4403e4:	ldr	w5, [x29, #376]
  4403e8:	b	4401e8 <argp_parse@@Base+0x408>
  4403ec:	add	x20, x20, #0x48
  4403f0:	str	w5, [x29, #376]
  4403f4:	cmp	x3, x20
  4403f8:	b.hi	4401ec <argp_parse@@Base+0x40c>  // b.pmore
  4403fc:	ldr	w0, [x29, #360]
  440400:	ldr	w28, [x29, #376]
  440404:	nop
  440408:	cmp	w28, w0
  44040c:	b.ne	440594 <argp_parse@@Base+0x7b4>  // b.any
  440410:	ldp	x20, x3, [x29, #320]
  440414:	mov	x4, x20
  440418:	cmp	x3, x20
  44041c:	b.ls	440a44 <argp_parse@@Base+0xc64>  // b.plast
  440420:	mov	w22, #0x2                   	// #2
  440424:	add	x23, x21, #0x70
  440428:	mov	w19, #0x0                   	// #0
  44042c:	movk	w22, #0x100, lsl #16
  440430:	b	440474 <argp_parse@@Base+0x694>
  440434:	ldur	x3, [x20, #-8]
  440438:	str	x3, [x29, #408]
  44043c:	add	x3, x29, #0x210
  440440:	ldur	q0, [x20, #-24]
  440444:	str	wzr, [x29, #384]
  440448:	stur	q0, [x3, #-136]
  44044c:	blr	x4
  440450:	mov	w19, w0
  440454:	ldr	x1, [x29, #408]
  440458:	stur	x1, [x20, #-8]
  44045c:	ldr	x3, [x29, #328]
  440460:	cmp	x3, x20
  440464:	b.ls	440970 <argp_parse@@Base+0xb90>  // b.plast
  440468:	cmp	w19, #0x0
  44046c:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  440470:	b.ne	4409f0 <argp_parse@@Base+0xc10>  // b.any
  440474:	ldr	w4, [x20, #24]
  440478:	mov	x2, x23
  44047c:	mov	w0, w22
  440480:	add	x20, x20, #0x48
  440484:	mov	x1, #0x0                   	// #0
  440488:	cbnz	w4, 440460 <argp_parse@@Base+0x680>
  44048c:	ldur	x4, [x20, #-72]
  440490:	cbnz	x4, 440434 <argp_parse@@Base+0x654>
  440494:	cmp	x3, x20
  440498:	b.ls	440a60 <argp_parse@@Base+0xc80>  // b.plast
  44049c:	mov	w19, #0x7                   	// #7
  4404a0:	b	440474 <argp_parse@@Base+0x694>
  4404a4:	ldr	w4, [x29, #380]
  4404a8:	str	w28, [x29, #264]
  4404ac:	str	w26, [x29, #272]
  4404b0:	ldp	x2, x3, [x29, #248]
  4404b4:	ldr	x1, [x29, #368]
  4404b8:	tbz	w4, #6, 44050c <argp_parse@@Base+0x72c>
  4404bc:	add	x5, x21, #0x18
  4404c0:	mov	x4, #0x0                   	// #0
  4404c4:	bl	450f20 <argp_parse@@Base+0x11140>
  4404c8:	ldr	w28, [x29, #264]
  4404cc:	str	w28, [x29, #376]
  4404d0:	mov	w20, w0
  4404d4:	cmn	w20, #0x1
  4404d8:	b.eq	44052c <argp_parse@@Base+0x74c>  // b.none
  4404dc:	cmp	w20, #0x3f
  4404e0:	b.eq	440648 <argp_parse@@Base+0x868>  // b.none
  4404e4:	cmp	w20, #0x1
  4404e8:	b.ne	440858 <argp_parse@@Base+0xa78>  // b.any
  4404ec:	sub	w28, w28, #0x1
  4404f0:	ldr	x23, [x29, #280]
  4404f4:	b	4401d0 <argp_parse@@Base+0x3f0>
  4404f8:	mov	w28, w1
  4404fc:	mov	w1, #0x1                   	// #1
  440500:	mov	w2, w1
  440504:	str	w1, [x29, #344]
  440508:	b	44019c <argp_parse@@Base+0x3bc>
  44050c:	add	x5, x21, #0x18
  440510:	mov	x4, #0x0                   	// #0
  440514:	bl	450f00 <argp_parse@@Base+0x11120>
  440518:	ldr	w28, [x29, #264]
  44051c:	str	w28, [x29, #376]
  440520:	mov	w20, w0
  440524:	cmn	w20, #0x1
  440528:	b.ne	4404dc <argp_parse@@Base+0x6fc>  // b.any
  44052c:	str	wzr, [x29, #344]
  440530:	cmp	w28, #0x1
  440534:	b.le	44058c <argp_parse@@Base+0x7ac>
  440538:	mov	x0, #0xfffffffffffffff8    	// #-8
  44053c:	ldr	x1, [x29, #368]
  440540:	add	x0, x0, w28, sxtw #3
  440544:	ldr	x0, [x1, x0]
  440548:	ldrb	w1, [x0]
  44054c:	cmp	w1, #0x2d
  440550:	b.ne	44058c <argp_parse@@Base+0x7ac>  // b.any
  440554:	ldrb	w1, [x0, #1]
  440558:	cmp	w1, #0x2d
  44055c:	b.ne	44058c <argp_parse@@Base+0x7ac>  // b.any
  440560:	ldrb	w0, [x0, #2]
  440564:	cbnz	w0, 44058c <argp_parse@@Base+0x7ac>
  440568:	ldr	w0, [x29, #360]
  44056c:	str	w28, [x29, #388]
  440570:	b	4401b4 <argp_parse@@Base+0x3d4>
  440574:	cmp	w0, #0x0
  440578:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  44057c:	b.ne	4402f8 <argp_parse@@Base+0x518>  // b.any
  440580:	ldr	w24, [x29, #380]
  440584:	ldr	x1, [x29, #368]
  440588:	b	440358 <argp_parse@@Base+0x578>
  44058c:	ldr	w0, [x29, #360]
  440590:	b	4401b4 <argp_parse@@Base+0x3d4>
  440594:	ldr	x0, [x29, #104]
  440598:	cbz	x0, 4407a4 <argp_parse@@Base+0x9c4>
  44059c:	ldp	x4, x3, [x29, #320]
  4405a0:	str	w28, [x0]
  4405a4:	sub	x20, x3, #0x48
  4405a8:	cmp	x20, x4
  4405ac:	b.cc	440a58 <argp_parse@@Base+0xc78>  // b.lo, b.ul, b.last
  4405b0:	mov	w22, #0x4                   	// #4
  4405b4:	add	x23, x21, #0x70
  4405b8:	movk	w22, #0x100, lsl #16
  4405bc:	ldr	x3, [x20], #-72
  4405c0:	mov	x2, x23
  4405c4:	mov	w0, w22
  4405c8:	mov	x1, #0x0                   	// #0
  4405cc:	cbz	x3, 440628 <argp_parse@@Base+0x848>
  4405d0:	ldr	x4, [x20, #136]
  4405d4:	str	x4, [x29, #408]
  4405d8:	ldr	w4, [x20, #96]
  4405dc:	ldur	q0, [x20, #120]
  4405e0:	str	w4, [x29, #384]
  4405e4:	add	x4, x29, #0x210
  4405e8:	stur	q0, [x4, #-136]
  4405ec:	blr	x3
  4405f0:	mov	w19, w0
  4405f4:	ldr	x1, [x29, #408]
  4405f8:	str	x1, [x20, #136]
  4405fc:	ldr	x4, [x29, #320]
  440600:	cmp	x4, x20
  440604:	b.hi	440270 <argp_parse@@Base+0x490>  // b.pmore
  440608:	cmp	w0, #0x0
  44060c:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  440610:	b.ne	440278 <argp_parse@@Base+0x498>  // b.any
  440614:	ldr	x3, [x20], #-72
  440618:	mov	x2, x23
  44061c:	mov	w0, w22
  440620:	mov	x1, #0x0                   	// #0
  440624:	cbnz	x3, 4405d0 <argp_parse@@Base+0x7f0>
  440628:	cmp	x4, x20
  44062c:	b.ls	4405bc <argp_parse@@Base+0x7dc>  // b.plast
  440630:	ldr	x20, [x29, #328]
  440634:	mov	w19, #0x0                   	// #0
  440638:	sub	x20, x20, #0x48
  44063c:	cmp	x20, x4
  440640:	b.cs	440288 <argp_parse@@Base+0x4a8>  // b.hs, b.nlast
  440644:	b	4402f0 <argp_parse@@Base+0x510>
  440648:	ldr	w0, [x29, #272]
  44064c:	cmn	w0, #0x1
  440650:	b.ne	440718 <argp_parse@@Base+0x938>  // b.any
  440654:	ldr	x0, [x29, #248]
  440658:	mov	w1, w20
  44065c:	bl	404870 <strchr@plt>
  440660:	cbz	x0, 4407f0 <argp_parse@@Base+0xa10>
  440664:	ldp	x23, x2, [x29, #320]
  440668:	cmp	x23, x2
  44066c:	b.cc	440680 <argp_parse@@Base+0x8a0>  // b.lo, b.ul, b.last
  440670:	b	4407f0 <argp_parse@@Base+0xa10>
  440674:	add	x23, x23, #0x48
  440678:	cmp	x23, x2
  44067c:	b.cs	4407f0 <argp_parse@@Base+0xa10>  // b.hs, b.nlast
  440680:	ldr	x1, [x23, #16]
  440684:	cmp	x0, x1
  440688:	b.cs	440674 <argp_parse@@Base+0x894>  // b.hs, b.nlast
  44068c:	ldr	x3, [x23]
  440690:	cbz	x3, 4407f0 <argp_parse@@Base+0xa10>
  440694:	ldr	x0, [x23, #64]
  440698:	mov	x2, x22
  44069c:	ldr	w4, [x23, #24]
  4406a0:	mov	w27, #0x0                   	// #0
  4406a4:	str	x0, [x29, #408]
  4406a8:	mov	w0, w20
  4406ac:	ldr	x1, [x29, #280]
  4406b0:	ldr	q0, [x23, #48]
  4406b4:	str	w4, [x29, #384]
  4406b8:	add	x4, x29, #0x210
  4406bc:	stur	q0, [x4, #-136]
  4406c0:	blr	x3
  4406c4:	mov	w19, w0
  4406c8:	ldr	x1, [x29, #408]
  4406cc:	str	x1, [x23, #64]
  4406d0:	b	4408c8 <argp_parse@@Base+0xae8>
  4406d4:	sub	x1, x1, #0x8
  4406d8:	add	w19, w19, #0x1
  4406dc:	str	w19, [x29, #360]
  4406e0:	str	x1, [x29, #368]
  4406e4:	b	44016c <argp_parse@@Base+0x38c>
  4406e8:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4406ec:	ldr	x1, [x2]
  4406f0:	str	x1, [x0, #1168]
  4406f4:	ldr	x0, [x19, #1208]
  4406f8:	cbnz	x0, 43fe30 <argp_parse@@Base+0x50>
  4406fc:	ldr	x0, [x22]
  440700:	bl	441558 <argp_parse@@Base+0x1778>
  440704:	str	x0, [x19, #1208]
  440708:	b	43fe30 <argp_parse@@Base+0x50>
  44070c:	cmp	w19, #0x7
  440710:	b.ne	440730 <argp_parse@@Base+0x950>  // b.any
  440714:	nop
  440718:	ldr	x19, [x29, #424]
  44071c:	mov	x1, x19
  440720:	mov	w19, #0x7                   	// #7
  440724:	add	x0, x21, #0x70
  440728:	mov	w2, #0x104                 	// #260
  44072c:	bl	43f640 <argp_state_help@@Base>
  440730:	ldr	x3, [x29, #328]
  440734:	ldr	x20, [x29, #320]
  440738:	cmp	x20, x3
  44073c:	mov	x4, x20
  440740:	b.cs	44027c <argp_parse@@Base+0x49c>  // b.hs, b.nlast
  440744:	mov	w22, #0x5                   	// #5
  440748:	add	x23, x21, #0x70
  44074c:	movk	w22, #0x100, lsl #16
  440750:	ldr	x4, [x20]
  440754:	mov	x2, x23
  440758:	mov	w0, w22
  44075c:	mov	x1, #0x0                   	// #0
  440760:	cbz	x4, 440844 <argp_parse@@Base+0xa64>
  440764:	ldr	x3, [x20, #64]
  440768:	str	x3, [x29, #408]
  44076c:	ldr	w3, [x20, #24]
  440770:	add	x20, x20, #0x48
  440774:	ldur	q0, [x20, #-24]
  440778:	str	w3, [x29, #384]
  44077c:	add	x3, x29, #0x210
  440780:	stur	q0, [x3, #-136]
  440784:	blr	x4
  440788:	ldr	x0, [x29, #408]
  44078c:	stur	x0, [x20, #-8]
  440790:	ldr	x3, [x29, #328]
  440794:	cmp	x20, x3
  440798:	b.cc	440750 <argp_parse@@Base+0x970>  // b.lo, b.ul, b.last
  44079c:	ldr	x4, [x29, #320]
  4407a0:	b	44027c <argp_parse@@Base+0x49c>
  4407a4:	ldr	w0, [x29, #380]
  4407a8:	ldr	x19, [x29, #424]
  4407ac:	tbnz	w0, #1, 44071c <argp_parse@@Base+0x93c>
  4407b0:	cbz	x19, 44071c <argp_parse@@Base+0x93c>
  4407b4:	ldr	x0, [x29, #240]
  4407b8:	mov	w2, #0x5                   	// #5
  4407bc:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  4407c0:	add	x1, x1, #0xfe0
  4407c4:	ldr	x0, [x0, #48]
  4407c8:	bl	4049c0 <dcgettext@plt>
  4407cc:	mov	x2, x0
  4407d0:	ldr	x3, [x29, #416]
  4407d4:	mov	x0, x19
  4407d8:	mov	w1, #0x1                   	// #1
  4407dc:	bl	404700 <__fprintf_chk@plt>
  4407e0:	ldr	x19, [x29, #424]
  4407e4:	b	44071c <argp_parse@@Base+0x93c>
  4407e8:	cbnz	w27, 4408e4 <argp_parse@@Base+0xb04>
  4407ec:	nop
  4407f0:	ldr	x0, [x29, #240]
  4407f4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4407f8:	add	x1, x1, #0xc0
  4407fc:	mov	w2, #0x5                   	// #5
  440800:	add	x1, x1, #0x70
  440804:	ldr	x0, [x0, #48]
  440808:	bl	4049c0 <dcgettext@plt>
  44080c:	mov	x3, x0
  440810:	mov	w2, w20
  440814:	add	x0, x21, #0x70
  440818:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  44081c:	add	x1, x1, #0xfc8
  440820:	bl	43f6e0 <argp_error@@Base>
  440824:	add	w0, w20, #0x1
  440828:	and	w0, w0, #0xfffffffd
  44082c:	cbnz	w0, 440718 <argp_parse@@Base+0x938>
  440830:	b	4403fc <argp_parse@@Base+0x61c>
  440834:	sub	x20, x20, #0x48
  440838:	cmp	x20, x4
  44083c:	b.cs	440298 <argp_parse@@Base+0x4b8>  // b.hs, b.nlast
  440840:	b	4402e4 <argp_parse@@Base+0x504>
  440844:	add	x20, x20, #0x48
  440848:	cmp	x20, x3
  44084c:	b.cc	440750 <argp_parse@@Base+0x970>  // b.lo, b.ul, b.last
  440850:	ldr	x4, [x29, #320]
  440854:	b	44027c <argp_parse@@Base+0x49c>
  440858:	cmp	wzr, w20, asr #24
  44085c:	asr	w27, w20, #24
  440860:	b.eq	440654 <argp_parse@@Base+0x874>  // b.none
  440864:	mov	x0, #0xffffffffffffffb8    	// #-72
  440868:	mov	w1, #0x48                  	// #72
  44086c:	ldr	x3, [x29, #320]
  440870:	smaddl	x1, w27, w1, x0
  440874:	ands	w2, w20, #0x800000
  440878:	and	w0, w20, #0xffffff
  44087c:	add	x23, x3, x1
  440880:	mov	w4, #0xff000000            	// #-16777216
  440884:	csel	w2, w2, w4, eq  // eq = none
  440888:	ldr	x3, [x3, x1]
  44088c:	orr	w0, w0, w2
  440890:	cbz	x3, 4408e4 <argp_parse@@Base+0xb04>
  440894:	ldr	x1, [x23, #64]
  440898:	mov	x2, x22
  44089c:	ldr	w4, [x23, #24]
  4408a0:	str	x1, [x29, #408]
  4408a4:	ldr	x1, [x29, #280]
  4408a8:	ldr	q0, [x23, #48]
  4408ac:	str	w4, [x29, #384]
  4408b0:	add	x4, x29, #0x210
  4408b4:	stur	q0, [x4, #-136]
  4408b8:	blr	x3
  4408bc:	mov	w19, w0
  4408c0:	ldr	x0, [x29, #408]
  4408c4:	str	x0, [x23, #64]
  4408c8:	cmp	w19, #0x7
  4408cc:	b.eq	4407e8 <argp_parse@@Base+0xa08>  // b.none
  4408d0:	cbnz	w19, 44070c <argp_parse@@Base+0x92c>
  4408d4:	ldr	w2, [x29, #344]
  4408d8:	ldr	w0, [x29, #360]
  4408dc:	ldr	w28, [x29, #376]
  4408e0:	b	44019c <argp_parse@@Base+0x3bc>
  4408e4:	ldr	x0, [x29, #256]
  4408e8:	ldr	w1, [x0, #24]
  4408ec:	cmp	w1, w20
  4408f0:	b.ne	440904 <argp_parse@@Base+0xb24>  // b.any
  4408f4:	b	440a0c <argp_parse@@Base+0xc2c>
  4408f8:	ldr	w1, [x0, #24]
  4408fc:	cmp	w20, w1
  440900:	b.eq	440a0c <argp_parse@@Base+0xc2c>  // b.none
  440904:	ldr	x1, [x0]
  440908:	add	x0, x0, #0x20
  44090c:	cbnz	x1, 4408f8 <argp_parse@@Base+0xb18>
  440910:	adrp	x19, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  440914:	add	x19, x19, #0xfc0
  440918:	ldr	x0, [x29, #240]
  44091c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  440920:	add	x1, x1, #0xc0
  440924:	mov	w2, #0x5                   	// #5
  440928:	add	x1, x1, #0x70
  44092c:	ldr	x0, [x0, #48]
  440930:	bl	4049c0 <dcgettext@plt>
  440934:	mov	x3, x0
  440938:	mov	x2, x19
  44093c:	add	x0, x21, #0x70
  440940:	adrp	x1, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  440944:	add	x1, x1, #0xfd0
  440948:	bl	43f6e0 <argp_error@@Base>
  44094c:	add	w0, w20, #0x1
  440950:	and	w0, w0, #0xfffffffd
  440954:	cbnz	w0, 440718 <argp_parse@@Base+0x938>
  440958:	b	4403fc <argp_parse@@Base+0x61c>
  44095c:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440960:	ldr	x4, [x4, #3616]
  440964:	cbnz	x4, 43fedc <argp_parse@@Base+0xfc>
  440968:	add	x4, x3, #0x20
  44096c:	b	43fee8 <argp_parse@@Base+0x108>
  440970:	ldr	x4, [x29, #320]
  440974:	sub	x20, x3, #0x48
  440978:	cmp	x4, x20
  44097c:	b.hi	440a38 <argp_parse@@Base+0xc58>  // b.pmore
  440980:	cmp	w19, #0x0
  440984:	ccmp	w19, #0x7, #0x4, ne  // ne = any
  440988:	b.ne	4409f0 <argp_parse@@Base+0xc10>  // b.any
  44098c:	mov	w22, #0x1                   	// #1
  440990:	add	x23, x21, #0x70
  440994:	movk	w22, #0x100, lsl #16
  440998:	ldr	x3, [x20], #-72
  44099c:	mov	x2, x23
  4409a0:	mov	w0, w22
  4409a4:	mov	x1, #0x0                   	// #0
  4409a8:	cbz	x3, 440a18 <argp_parse@@Base+0xc38>
  4409ac:	ldr	x4, [x20, #136]
  4409b0:	str	x4, [x29, #408]
  4409b4:	ldr	w4, [x20, #96]
  4409b8:	ldur	q0, [x20, #120]
  4409bc:	str	w4, [x29, #384]
  4409c0:	add	x4, x29, #0x210
  4409c4:	stur	q0, [x4, #-136]
  4409c8:	blr	x3
  4409cc:	mov	w19, w0
  4409d0:	ldr	x1, [x29, #408]
  4409d4:	str	x1, [x20, #136]
  4409d8:	ldr	x4, [x29, #320]
  4409dc:	cmp	x4, x20
  4409e0:	b.hi	440a38 <argp_parse@@Base+0xc58>  // b.pmore
  4409e4:	cmp	w0, #0x0
  4409e8:	ccmp	w0, #0x7, #0x4, ne  // ne = any
  4409ec:	b.eq	440998 <argp_parse@@Base+0xbb8>  // b.none
  4409f0:	ldr	x1, [x29, #104]
  4409f4:	cbz	x1, 440a00 <argp_parse@@Base+0xc20>
  4409f8:	ldr	w0, [x29, #376]
  4409fc:	str	w0, [x1]
  440a00:	cbnz	w19, 44070c <argp_parse@@Base+0x92c>
  440a04:	ldp	x4, x3, [x29, #320]
  440a08:	b	4405a4 <argp_parse@@Base+0x7c4>
  440a0c:	ldr	x19, [x0]
  440a10:	cbnz	x19, 440918 <argp_parse@@Base+0xb38>
  440a14:	b	440910 <argp_parse@@Base+0xb30>
  440a18:	cmp	x4, x20
  440a1c:	b.ls	440998 <argp_parse@@Base+0xbb8>  // b.plast
  440a20:	ldr	x3, [x29, #328]
  440a24:	ldr	x1, [x29, #104]
  440a28:	cbz	x1, 4405a4 <argp_parse@@Base+0x7c4>
  440a2c:	ldr	w0, [x29, #376]
  440a30:	str	w0, [x1]
  440a34:	b	4405a4 <argp_parse@@Base+0x7c4>
  440a38:	cmp	w19, #0x7
  440a3c:	b.eq	440a20 <argp_parse@@Base+0xc40>  // b.none
  440a40:	b	4409f0 <argp_parse@@Base+0xc10>
  440a44:	sub	x20, x3, #0x48
  440a48:	cmp	x4, x20
  440a4c:	b.ls	44098c <argp_parse@@Base+0xbac>  // b.plast
  440a50:	ldr	x1, [x29, #104]
  440a54:	cbnz	x1, 440a2c <argp_parse@@Base+0xc4c>
  440a58:	mov	w19, #0x0                   	// #0
  440a5c:	b	4402f0 <argp_parse@@Base+0x510>
  440a60:	ldr	x4, [x29, #320]
  440a64:	sub	x20, x3, #0x48
  440a68:	cmp	x4, x20
  440a6c:	b.ls	44098c <argp_parse@@Base+0xbac>  // b.plast
  440a70:	b	440a24 <argp_parse@@Base+0xc44>
  440a74:	mov	w19, #0xc                   	// #12
  440a78:	b	4402f8 <argp_parse@@Base+0x518>
  440a7c:	mov	x20, x27
  440a80:	ldr	x3, [x29, #328]
  440a84:	b	4403f4 <argp_parse@@Base+0x614>
  440a88:	cbnz	w19, 440a9c <argp_parse@@Base+0xcbc>
  440a8c:	ldr	w1, [x29, #360]
  440a90:	str	w1, [x29, #376]
  440a94:	mov	w0, w1
  440a98:	b	44024c <argp_parse@@Base+0x46c>
  440a9c:	cmp	w19, #0x7
  440aa0:	b.eq	4403fc <argp_parse@@Base+0x61c>  // b.none
  440aa4:	b	440734 <argp_parse@@Base+0x954>
  440aa8:	cbz	x1, 440ae0 <argp_parse@@Base+0xd00>
  440aac:	ldr	x2, [x1, #88]
  440ab0:	ldp	x1, x3, [x2, #80]
  440ab4:	cmp	x1, x3
  440ab8:	b.cc	440acc <argp_parse@@Base+0xcec>  // b.lo, b.ul, b.last
  440abc:	b	440ae0 <argp_parse@@Base+0xd00>
  440ac0:	add	x1, x1, #0x48
  440ac4:	cmp	x1, x3
  440ac8:	b.cs	440ae0 <argp_parse@@Base+0xd00>  // b.hs, b.nlast
  440acc:	ldr	x2, [x1, #8]
  440ad0:	cmp	x2, x0
  440ad4:	b.ne	440ac0 <argp_parse@@Base+0xce0>  // b.any
  440ad8:	ldr	x0, [x1, #48]
  440adc:	ret
  440ae0:	mov	x0, #0x0                   	// #0
  440ae4:	ret
  440ae8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440aec:	add	x5, x1, #0xe28
  440af0:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x17bf0>
  440af4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  440af8:	ldr	x4, [x1, #3624]
  440afc:	add	x3, x3, #0x928
  440b00:	ldr	x1, [x5, #8]
  440b04:	add	x2, x2, #0x7e0
  440b08:	b	44fb18 <argp_parse@@Base+0xfd38>
  440b0c:	nop
  440b10:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440b14:	add	x4, x3, #0xe28
  440b18:	adrp	x5, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440b1c:	adrp	x2, 440000 <argp_parse@@Base+0x220>
  440b20:	str	x1, [x3, #3624]
  440b24:	add	x2, x2, #0xae8
  440b28:	str	x2, [x5, #3616]
  440b2c:	str	x0, [x4, #8]
  440b30:	ret
  440b34:	nop
  440b38:	stp	x29, x30, [sp, #-32]!
  440b3c:	mov	x29, sp
  440b40:	str	x19, [sp, #16]
  440b44:	mov	x19, x0
  440b48:	cbz	x0, 440b94 <argp_parse@@Base+0xdb4>
  440b4c:	ldrb	w0, [x19]
  440b50:	cbnz	w0, 440b70 <argp_parse@@Base+0xd90>
  440b54:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440b58:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  440b5c:	add	x19, x19, #0x2b8
  440b60:	str	x19, [x0, #3640]
  440b64:	ldr	x19, [sp, #16]
  440b68:	ldp	x29, x30, [sp], #32
  440b6c:	ret
  440b70:	mov	x0, x19
  440b74:	bl	441558 <argp_parse@@Base+0x1778>
  440b78:	cmp	x19, x0
  440b7c:	b.ne	440b54 <argp_parse@@Base+0xd74>  // b.any
  440b80:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440b84:	str	x19, [x0, #3640]
  440b88:	ldr	x19, [sp, #16]
  440b8c:	ldp	x29, x30, [sp], #32
  440b90:	ret
  440b94:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  440b98:	add	x0, x0, #0xc88
  440b9c:	bl	404af0 <getenv@plt>
  440ba0:	mov	x19, x0
  440ba4:	cbz	x0, 440b54 <argp_parse@@Base+0xd74>
  440ba8:	b	440b4c <argp_parse@@Base+0xd6c>
  440bac:	nop
  440bb0:	stp	x29, x30, [sp, #-208]!
  440bb4:	mov	x29, sp
  440bb8:	stp	x23, x24, [sp, #48]
  440bbc:	mov	x23, x1
  440bc0:	str	w0, [sp, #188]
  440bc4:	and	w0, w3, #0xff
  440bc8:	stp	x19, x20, [sp, #16]
  440bcc:	stp	x21, x22, [sp, #32]
  440bd0:	stp	x25, x26, [sp, #64]
  440bd4:	mov	w25, w2
  440bd8:	str	w0, [sp, #184]
  440bdc:	mov	x0, x1
  440be0:	bl	441558 <argp_parse@@Base+0x1778>
  440be4:	sub	x21, x0, x23
  440be8:	bl	403ff0 <strlen@plt>
  440bec:	add	x24, x21, x0
  440bf0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440bf4:	ldr	x1, [x1, #3640]
  440bf8:	cbz	x1, 4410f8 <argp_parse@@Base+0x1318>
  440bfc:	mov	x0, x1
  440c00:	bl	403ff0 <strlen@plt>
  440c04:	add	x0, x0, #0x1
  440c08:	mov	x1, #0x9                   	// #9
  440c0c:	cmp	x0, x1
  440c10:	add	x2, x24, #0x1
  440c14:	csel	x1, x0, x1, cs  // cs = hs, nlast
  440c18:	str	x2, [sp, #120]
  440c1c:	str	x0, [sp, #176]
  440c20:	add	x0, x1, x2
  440c24:	str	x0, [sp, #152]
  440c28:	bl	404310 <malloc@plt>
  440c2c:	mov	x19, x0
  440c30:	cbz	x0, 440edc <argp_parse@@Base+0x10fc>
  440c34:	add	x0, x24, #0x4
  440c38:	mov	x22, #0x0                   	// #0
  440c3c:	stp	x27, x28, [sp, #80]
  440c40:	str	xzr, [sp, #144]
  440c44:	str	x0, [sp, #160]
  440c48:	mov	w0, #0xffffffff            	// #-1
  440c4c:	str	w0, [sp, #204]
  440c50:	ldr	x2, [sp, #120]
  440c54:	mov	x1, x23
  440c58:	mov	x0, x19
  440c5c:	bl	403f70 <memcpy@plt>
  440c60:	cmp	w25, #0x1
  440c64:	b.eq	440ef8 <argp_parse@@Base+0x1118>  // b.none
  440c68:	add	x27, x19, x21
  440c6c:	mov	x0, x27
  440c70:	bl	4415b0 <argp_parse@@Base+0x17d0>
  440c74:	mov	x20, x0
  440c78:	cbz	x22, 440fc8 <argp_parse@@Base+0x11e8>
  440c7c:	mov	x0, x22
  440c80:	bl	404750 <rewinddir@plt>
  440c84:	ldr	x0, [sp, #152]
  440c88:	str	x0, [sp, #104]
  440c8c:	add	x0, x20, #0x4
  440c90:	add	x20, x20, #0x2
  440c94:	mov	x27, #0x1                   	// #1
  440c98:	mov	w26, #0x2                   	// #2
  440c9c:	str	x0, [sp, #112]
  440ca0:	mov	x0, x22
  440ca4:	bl	404520 <readdir@plt>
  440ca8:	cbz	x0, 440e58 <argp_parse@@Base+0x1078>
  440cac:	add	x28, x0, #0x13
  440cb0:	mov	x0, x28
  440cb4:	bl	403ff0 <strlen@plt>
  440cb8:	ldr	x1, [sp, #112]
  440cbc:	cmp	x0, x1
  440cc0:	b.cc	440ca0 <argp_parse@@Base+0xec0>  // b.lo, b.ul, b.last
  440cc4:	mov	x2, x20
  440cc8:	mov	x1, x28
  440ccc:	add	x0, x19, x21
  440cd0:	bl	4046d0 <memcmp@plt>
  440cd4:	cbnz	w0, 440ca0 <argp_parse@@Base+0xec0>
  440cd8:	ldrb	w2, [x28, x20]
  440cdc:	add	x3, x28, x20
  440ce0:	sub	w0, w2, #0x31
  440ce4:	and	w0, w0, #0xff
  440ce8:	cmp	w0, #0x8
  440cec:	b.hi	440ca0 <argp_parse@@Base+0xec0>  // b.pmore
  440cf0:	ldrb	w0, [x3, #1]
  440cf4:	cmp	w2, #0x39
  440cf8:	cset	w5, eq  // eq = none
  440cfc:	mov	x4, #0x1                   	// #1
  440d00:	sub	w1, w0, #0x30
  440d04:	cmp	w1, #0x9
  440d08:	b.hi	440d2c <argp_parse@@Base+0xf4c>  // b.pmore
  440d0c:	nop
  440d10:	add	x4, x4, #0x1
  440d14:	cmp	w0, #0x39
  440d18:	csel	w5, w5, wzr, eq  // eq = none
  440d1c:	ldrb	w0, [x3, x4]
  440d20:	sub	w1, w0, #0x30
  440d24:	cmp	w1, #0x9
  440d28:	b.ls	440d10 <argp_parse@@Base+0xf30>  // b.plast
  440d2c:	cmp	w0, #0x7e
  440d30:	b.ne	440ca0 <argp_parse@@Base+0xec0>  // b.any
  440d34:	add	x0, x3, x4
  440d38:	ldrb	w0, [x0, #1]
  440d3c:	cbnz	w0, 440ca0 <argp_parse@@Base+0xec0>
  440d40:	cmp	x27, x4
  440d44:	b.cc	440d80 <argp_parse@@Base+0xfa0>  // b.lo, b.ul, b.last
  440d48:	str	x4, [sp, #128]
  440d4c:	str	w5, [sp, #136]
  440d50:	b.ne	440ca0 <argp_parse@@Base+0xec0>  // b.any
  440d54:	add	x0, x24, #0x2
  440d58:	mov	x1, x3
  440d5c:	mov	x2, x27
  440d60:	add	x0, x19, x0
  440d64:	str	x3, [sp, #168]
  440d68:	bl	4046d0 <memcmp@plt>
  440d6c:	ldr	w5, [sp, #136]
  440d70:	cmp	w0, #0x0
  440d74:	ldr	x4, [sp, #128]
  440d78:	ldr	x3, [sp, #168]
  440d7c:	b.gt	440ca0 <argp_parse@@Base+0xec0>
  440d80:	ldr	x0, [sp, #160]
  440d84:	and	x6, x5, #0xff
  440d88:	ldr	x1, [sp, #104]
  440d8c:	add	x27, x6, x4
  440d90:	add	x0, x0, x27
  440d94:	mov	w26, w5
  440d98:	cmp	x0, x1
  440d9c:	b.ls	44109c <argp_parse@@Base+0x12bc>  // b.plast
  440da0:	cmp	x0, #0x0
  440da4:	lsl	x2, x0, #1
  440da8:	cset	x1, lt  // lt = tstop
  440dac:	tbnz	x0, #62, 441090 <argp_parse@@Base+0x12b0>
  440db0:	cbnz	x1, 441090 <argp_parse@@Base+0x12b0>
  440db4:	mov	x1, x2
  440db8:	str	x2, [sp, #104]
  440dbc:	mov	x0, x19
  440dc0:	stp	x4, x3, [sp, #128]
  440dc4:	str	x6, [sp, #168]
  440dc8:	bl	404530 <realloc@plt>
  440dcc:	mov	x5, x0
  440dd0:	ldp	x4, x3, [sp, #128]
  440dd4:	ldr	x6, [sp, #168]
  440dd8:	cbz	x0, 441058 <argp_parse@@Base+0x1278>
  440ddc:	add	x0, x5, x24
  440de0:	mov	w1, #0x7e2e                	// #32302
  440de4:	add	x2, x0, #0x2
  440de8:	strh	w1, [x5, x24]
  440dec:	add	x6, x2, x6
  440df0:	mov	x1, x3
  440df4:	mov	w3, #0x30                  	// #48
  440df8:	strb	w3, [x0, #2]
  440dfc:	add	x2, x4, #0x2
  440e00:	mov	x0, x6
  440e04:	stp	x4, x5, [sp, #128]
  440e08:	bl	403f70 <memcpy@plt>
  440e0c:	ldp	x4, x5, [sp, #128]
  440e10:	add	x4, x0, x4
  440e14:	sub	x2, x4, #0x1
  440e18:	ldurb	w1, [x4, #-1]
  440e1c:	cmp	w1, #0x39
  440e20:	b.ne	440e3c <argp_parse@@Base+0x105c>  // b.any
  440e24:	nop
  440e28:	mov	w0, #0x30                  	// #48
  440e2c:	strb	w0, [x2]
  440e30:	ldrb	w1, [x2, #-1]!
  440e34:	cmp	w1, #0x39
  440e38:	b.eq	440e28 <argp_parse@@Base+0x1048>  // b.none
  440e3c:	add	w1, w1, #0x1
  440e40:	strb	w1, [x2]
  440e44:	mov	x19, x5
  440e48:	mov	x0, x22
  440e4c:	bl	404520 <readdir@plt>
  440e50:	cbnz	x0, 440cac <argp_parse@@Base+0xecc>
  440e54:	nop
  440e58:	cmp	w26, #0x2
  440e5c:	b.eq	440f10 <argp_parse@@Base+0x1130>  // b.none
  440e60:	cmp	w26, #0x1
  440e64:	b.eq	440f30 <argp_parse@@Base+0x1150>  // b.none
  440e68:	ldr	w0, [sp, #184]
  440e6c:	cbz	w0, 4410cc <argp_parse@@Base+0x12ec>
  440e70:	ldr	w2, [sp, #204]
  440e74:	add	x3, x19, x21
  440e78:	tbz	w2, #31, 440e90 <argp_parse@@Base+0x10b0>
  440e7c:	mov	w0, #0xffffff9c            	// #-100
  440e80:	mov	x3, x19
  440e84:	mov	w2, w0
  440e88:	mov	x21, #0x0                   	// #0
  440e8c:	str	w0, [sp, #204]
  440e90:	cmp	w25, #0x1
  440e94:	mov	x1, x23
  440e98:	cset	w4, ne  // ne = any
  440e9c:	mov	w0, #0xffffff9c            	// #-100
  440ea0:	bl	44f028 <argp_parse@@Base+0xf248>
  440ea4:	cbz	w0, 4410cc <argp_parse@@Base+0x12ec>
  440ea8:	bl	404ad0 <__errno_location@plt>
  440eac:	ldr	w26, [x0]
  440eb0:	mov	x20, x0
  440eb4:	cmp	w26, #0x11
  440eb8:	b.eq	440c50 <argp_parse@@Base+0xe70>  // b.none
  440ebc:	cbz	x22, 440ec8 <argp_parse@@Base+0x10e8>
  440ec0:	mov	x0, x22
  440ec4:	bl	404590 <closedir@plt>
  440ec8:	mov	x0, x19
  440ecc:	mov	x19, #0x0                   	// #0
  440ed0:	bl	4047b0 <free@plt>
  440ed4:	ldp	x27, x28, [sp, #80]
  440ed8:	str	w26, [x20]
  440edc:	mov	x0, x19
  440ee0:	ldp	x19, x20, [sp, #16]
  440ee4:	ldp	x21, x22, [sp, #32]
  440ee8:	ldp	x23, x24, [sp, #48]
  440eec:	ldp	x25, x26, [sp, #64]
  440ef0:	ldp	x29, x30, [sp], #208
  440ef4:	ret
  440ef8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440efc:	ldr	x2, [sp, #176]
  440f00:	ldr	x1, [x0, #3640]
  440f04:	add	x0, x19, x24
  440f08:	bl	403f70 <memcpy@plt>
  440f0c:	b	440e68 <argp_parse@@Base+0x1088>
  440f10:	cmp	w25, #0x2
  440f14:	b.ne	440f30 <argp_parse@@Base+0x1150>  // b.any
  440f18:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  440f1c:	mov	w25, #0x1                   	// #1
  440f20:	ldr	x2, [sp, #176]
  440f24:	ldr	x1, [x0, #3640]
  440f28:	add	x0, x19, x24
  440f2c:	bl	403f70 <memcpy@plt>
  440f30:	mov	x0, x19
  440f34:	bl	441558 <argp_parse@@Base+0x1778>
  440f38:	mov	x20, x0
  440f3c:	bl	4415b0 <argp_parse@@Base+0x17d0>
  440f40:	mov	x26, x0
  440f44:	cmp	x0, #0xe
  440f48:	b.ls	440e68 <argp_parse@@Base+0x1088>  // b.plast
  440f4c:	ldr	x0, [sp, #144]
  440f50:	cbnz	x0, 440f94 <argp_parse@@Base+0x11b4>
  440f54:	ldr	w1, [sp, #204]
  440f58:	str	w1, [sp, #104]
  440f5c:	bl	404ad0 <__errno_location@plt>
  440f60:	mov	x27, x0
  440f64:	ldr	w1, [sp, #104]
  440f68:	tbnz	w1, #31, 441138 <argp_parse@@Base+0x1358>
  440f6c:	str	wzr, [x27]
  440f70:	mov	w0, w1
  440f74:	mov	w1, #0x3                   	// #3
  440f78:	bl	4046a0 <fpathconf@plt>
  440f7c:	ldr	w1, [x27]
  440f80:	cmp	w1, #0x0
  440f84:	cset	x1, eq  // eq = none
  440f88:	sub	x0, x0, x1
  440f8c:	str	x0, [sp, #144]
  440f90:	tbnz	x0, #63, 4410b4 <argp_parse@@Base+0x12d4>
  440f94:	ldr	x0, [sp, #144]
  440f98:	cmp	x26, x0
  440f9c:	b.ls	440e68 <argp_parse@@Base+0x1088>  // b.plast
  440fa0:	ldr	x2, [sp, #144]
  440fa4:	add	x0, x19, x24
  440fa8:	sub	x1, x0, x20
  440fac:	cmp	x1, x2
  440fb0:	b.cs	4410a4 <argp_parse@@Base+0x12c4>  // b.hs, b.nlast
  440fb4:	add	x1, x1, #0x1
  440fb8:	mov	w2, #0x7e                  	// #126
  440fbc:	strb	w2, [x0]
  440fc0:	strb	wzr, [x20, x1]
  440fc4:	b	440e68 <argp_parse@@Base+0x1088>
  440fc8:	mov	w0, #0x2e                  	// #46
  440fcc:	ldrh	w26, [x19, x21]
  440fd0:	strh	w0, [x19, x21]
  440fd4:	mov	x1, x19
  440fd8:	ldr	w0, [sp, #188]
  440fdc:	add	x3, sp, #0xcc
  440fe0:	mov	w2, #0x0                   	// #0
  440fe4:	bl	447588 <argp_parse@@Base+0x77a8>
  440fe8:	mov	x22, x0
  440fec:	add	x1, x27, x20
  440ff0:	cbz	x0, 441014 <argp_parse@@Base+0x1234>
  440ff4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  440ff8:	add	x0, x0, #0x2c0
  440ffc:	strh	w26, [x27]
  441000:	ldr	w2, [x0]
  441004:	ldrb	w0, [x0, #4]
  441008:	str	w2, [x27, x20]
  44100c:	strb	w0, [x1, #4]
  441010:	b	440c84 <argp_parse@@Base+0xea4>
  441014:	str	x1, [sp, #104]
  441018:	bl	404ad0 <__errno_location@plt>
  44101c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441020:	add	x2, x2, #0x2c0
  441024:	ldr	x1, [sp, #104]
  441028:	strh	w26, [x27]
  44102c:	ldr	w0, [x0]
  441030:	ldr	w3, [x2]
  441034:	ldrb	w2, [x2, #4]
  441038:	cmp	w0, #0xc
  44103c:	str	w3, [x27, x20]
  441040:	cset	w0, eq  // eq = none
  441044:	strb	w2, [x1, #4]
  441048:	add	w26, w0, #0x2
  44104c:	cbz	w0, 440f10 <argp_parse@@Base+0x1130>
  441050:	cmp	w26, #0x3
  441054:	b.ne	440e60 <argp_parse@@Base+0x1080>  // b.any
  441058:	mov	x0, x19
  44105c:	bl	4047b0 <free@plt>
  441060:	mov	x19, #0x0                   	// #0
  441064:	bl	404ad0 <__errno_location@plt>
  441068:	mov	w1, #0xc                   	// #12
  44106c:	ldp	x27, x28, [sp, #80]
  441070:	str	w1, [x0]
  441074:	mov	x0, x19
  441078:	ldp	x19, x20, [sp, #16]
  44107c:	ldp	x21, x22, [sp, #32]
  441080:	ldp	x23, x24, [sp, #48]
  441084:	ldp	x25, x26, [sp, #64]
  441088:	ldp	x29, x30, [sp], #208
  44108c:	ret
  441090:	mov	x1, x0
  441094:	str	x0, [sp, #104]
  441098:	b	440dbc <argp_parse@@Base+0xfdc>
  44109c:	mov	x5, x19
  4410a0:	b	440ddc <argp_parse@@Base+0xffc>
  4410a4:	sub	x0, x2, #0x1
  4410a8:	mov	x1, x2
  4410ac:	add	x0, x20, x0
  4410b0:	b	440fb8 <argp_parse@@Base+0x11d8>
  4410b4:	mov	x1, #0xe                   	// #14
  4410b8:	str	x1, [sp, #144]
  4410bc:	cmn	x0, #0x1
  4410c0:	b.ne	440fa0 <argp_parse@@Base+0x11c0>  // b.any
  4410c4:	str	x0, [sp, #144]
  4410c8:	b	440e68 <argp_parse@@Base+0x1088>
  4410cc:	cbz	x22, 441180 <argp_parse@@Base+0x13a0>
  4410d0:	mov	x0, x22
  4410d4:	bl	404590 <closedir@plt>
  4410d8:	mov	x0, x19
  4410dc:	ldp	x19, x20, [sp, #16]
  4410e0:	ldp	x21, x22, [sp, #32]
  4410e4:	ldp	x23, x24, [sp, #48]
  4410e8:	ldp	x25, x26, [sp, #64]
  4410ec:	ldp	x27, x28, [sp, #80]
  4410f0:	ldp	x29, x30, [sp], #208
  4410f4:	ret
  4410f8:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4410fc:	add	x0, x0, #0xc88
  441100:	bl	404af0 <getenv@plt>
  441104:	mov	x19, x0
  441108:	cbz	x0, 441174 <argp_parse@@Base+0x1394>
  44110c:	ldrb	w1, [x0]
  441110:	cbz	w1, 441174 <argp_parse@@Base+0x1394>
  441114:	bl	441558 <argp_parse@@Base+0x1778>
  441118:	mov	x1, x0
  44111c:	cmp	x19, x1
  441120:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441124:	add	x0, x0, #0x2b8
  441128:	csel	x1, x0, x1, ne  // ne = any
  44112c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  441130:	str	x1, [x0, #3640]
  441134:	b	440bfc <argp_parse@@Base+0xe1c>
  441138:	ldrh	w2, [x20]
  44113c:	mov	w0, #0x2e                  	// #46
  441140:	strh	w0, [x20]
  441144:	mov	w1, #0x3                   	// #3
  441148:	str	wzr, [x27]
  44114c:	mov	x0, x19
  441150:	str	w2, [sp, #104]
  441154:	bl	4041b0 <pathconf@plt>
  441158:	ldr	w1, [x27]
  44115c:	ldr	w2, [sp, #104]
  441160:	cmp	w1, #0x0
  441164:	strh	w2, [x20]
  441168:	cset	x1, eq  // eq = none
  44116c:	sub	x0, x0, x1
  441170:	b	440f8c <argp_parse@@Base+0x11ac>
  441174:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441178:	add	x1, x1, #0x2b8
  44117c:	b	44112c <argp_parse@@Base+0x134c>
  441180:	ldp	x27, x28, [sp, #80]
  441184:	b	440edc <argp_parse@@Base+0x10fc>
  441188:	stp	x29, x30, [sp, #-16]!
  44118c:	mov	w3, #0x0                   	// #0
  441190:	mov	x29, sp
  441194:	bl	440bb0 <argp_parse@@Base+0xdd0>
  441198:	cbz	x0, 4411a4 <argp_parse@@Base+0x13c4>
  44119c:	ldp	x29, x30, [sp], #16
  4411a0:	ret
  4411a4:	bl	4104a0 <wcrtomb@plt+0xb880>
  4411a8:	cbz	x1, 441200 <argp_parse@@Base+0x1420>
  4411ac:	ldrb	w3, [x1]
  4411b0:	mov	w2, #0x2                   	// #2
  4411b4:	cbnz	w3, 4411c0 <argp_parse@@Base+0x13e0>
  4411b8:	mov	w0, w2
  4411bc:	ret
  4411c0:	stp	x29, x30, [sp, #-32]!
  4411c4:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4411c8:	mov	x4, #0x4                   	// #4
  4411cc:	mov	x29, sp
  4411d0:	ldr	x5, [x2, #992]
  4411d4:	str	x19, [sp, #16]
  4411d8:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4411dc:	add	x19, x19, #0x330
  4411e0:	add	x2, x19, #0x20
  4411e4:	mov	x3, x19
  4411e8:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  4411ec:	ldr	w2, [x19, x0, lsl #2]
  4411f0:	ldr	x19, [sp, #16]
  4411f4:	mov	w0, w2
  4411f8:	ldp	x29, x30, [sp], #32
  4411fc:	ret
  441200:	mov	w2, #0x2                   	// #2
  441204:	mov	w0, w2
  441208:	ret
  44120c:	nop
  441210:	stp	x29, x30, [sp, #-32]!
  441214:	mov	x29, sp
  441218:	cbz	x1, 441224 <argp_parse@@Base+0x1444>
  44121c:	ldrb	w2, [x1]
  441220:	cbnz	w2, 441288 <argp_parse@@Base+0x14a8>
  441224:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441228:	add	x0, x0, #0x2c8
  44122c:	bl	404af0 <getenv@plt>
  441230:	mov	x1, x0
  441234:	cbz	x0, 4412bc <argp_parse@@Base+0x14dc>
  441238:	ldrb	w2, [x0]
  44123c:	mov	w0, #0x2                   	// #2
  441240:	cbnz	w2, 44124c <argp_parse@@Base+0x146c>
  441244:	ldp	x29, x30, [sp], #32
  441248:	ret
  44124c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  441250:	str	x19, [sp, #16]
  441254:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441258:	add	x19, x19, #0x330
  44125c:	ldr	x5, [x0, #992]
  441260:	mov	x3, x19
  441264:	add	x2, x19, #0x20
  441268:	mov	x4, #0x4                   	// #4
  44126c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441270:	add	x0, x0, #0x2d8
  441274:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  441278:	ldr	w0, [x19, x0, lsl #2]
  44127c:	ldr	x19, [sp, #16]
  441280:	ldp	x29, x30, [sp], #32
  441284:	ret
  441288:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44128c:	str	x19, [sp, #16]
  441290:	adrp	x19, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441294:	add	x19, x19, #0x330
  441298:	ldr	x5, [x2, #992]
  44129c:	mov	x3, x19
  4412a0:	add	x2, x19, #0x20
  4412a4:	mov	x4, #0x4                   	// #4
  4412a8:	bl	43bdc8 <wcrtomb@plt+0x371a8>
  4412ac:	ldr	w0, [x19, x0, lsl #2]
  4412b0:	ldr	x19, [sp, #16]
  4412b4:	ldp	x29, x30, [sp], #32
  4412b8:	ret
  4412bc:	mov	w0, #0x2                   	// #2
  4412c0:	b	441244 <argp_parse@@Base+0x1464>
  4412c4:	nop
  4412c8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4412cc:	str	x0, [x1, #3648]
  4412d0:	ret
  4412d4:	nop
  4412d8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4412dc:	strb	w0, [x1, #3656]
  4412e0:	ret
  4412e4:	nop
  4412e8:	stp	x29, x30, [sp, #-48]!
  4412ec:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4412f0:	mov	x29, sp
  4412f4:	ldr	x0, [x0, #1184]
  4412f8:	bl	4629c0 <_obstack_memory_used@@Base+0x115b0>
  4412fc:	cbz	w0, 441334 <argp_parse@@Base+0x1554>
  441300:	stp	x19, x20, [sp, #16]
  441304:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  441308:	add	x0, x20, #0xe40
  44130c:	str	x21, [sp, #32]
  441310:	ldrb	w21, [x0, #8]
  441314:	bl	404ad0 <__errno_location@plt>
  441318:	mov	x19, x0
  44131c:	cbz	w21, 44134c <argp_parse@@Base+0x156c>
  441320:	ldr	w0, [x0]
  441324:	cmp	w0, #0x20
  441328:	b.ne	44134c <argp_parse@@Base+0x156c>  // b.any
  44132c:	ldp	x19, x20, [sp, #16]
  441330:	ldr	x21, [sp, #32]
  441334:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  441338:	ldr	x0, [x0, #1176]
  44133c:	bl	4629c0 <_obstack_memory_used@@Base+0x115b0>
  441340:	cbnz	w0, 4413a0 <argp_parse@@Base+0x15c0>
  441344:	ldp	x29, x30, [sp], #48
  441348:	ret
  44134c:	mov	w2, #0x5                   	// #5
  441350:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441354:	mov	x0, #0x0                   	// #0
  441358:	add	x1, x1, #0x398
  44135c:	bl	4049c0 <dcgettext@plt>
  441360:	ldr	x2, [x20, #3648]
  441364:	mov	x20, x0
  441368:	cbz	x2, 4413ac <argp_parse@@Base+0x15cc>
  44136c:	ldr	w19, [x19]
  441370:	mov	x0, x2
  441374:	bl	44e2a8 <argp_parse@@Base+0xe4c8>
  441378:	mov	x3, x0
  44137c:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  441380:	mov	w1, w19
  441384:	mov	x4, x20
  441388:	add	x2, x2, #0x618
  44138c:	mov	w0, #0x0                   	// #0
  441390:	bl	404050 <error@plt>
  441394:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  441398:	ldr	w0, [x0, #1040]
  44139c:	bl	403f90 <_exit@plt>
  4413a0:	stp	x19, x20, [sp, #16]
  4413a4:	str	x21, [sp, #32]
  4413a8:	b	441394 <argp_parse@@Base+0x15b4>
  4413ac:	ldr	w1, [x19]
  4413b0:	mov	x3, x0
  4413b4:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  4413b8:	mov	w0, #0x0                   	// #0
  4413bc:	add	x2, x2, #0x828
  4413c0:	bl	404050 <error@plt>
  4413c4:	b	441394 <argp_parse@@Base+0x15b4>
  4413c8:	stp	x29, x30, [sp, #-16]!
  4413cc:	mov	x29, sp
  4413d0:	bl	441498 <argp_parse@@Base+0x16b8>
  4413d4:	cbz	x0, 4413e0 <argp_parse@@Base+0x1600>
  4413d8:	ldp	x29, x30, [sp], #16
  4413dc:	ret
  4413e0:	bl	4104a0 <wcrtomb@plt+0xb880>
  4413e4:	nop
  4413e8:	stp	x29, x30, [sp, #-32]!
  4413ec:	mov	x29, sp
  4413f0:	stp	x19, x20, [sp, #16]
  4413f4:	mov	x20, x0
  4413f8:	bl	441558 <argp_parse@@Base+0x1778>
  4413fc:	ldrb	w1, [x0]
  441400:	cbz	w1, 44142c <argp_parse@@Base+0x164c>
  441404:	mov	x19, x0
  441408:	bl	4415b0 <argp_parse@@Base+0x17d0>
  44140c:	mov	x1, x0
  441410:	mov	x0, x19
  441414:	ldrb	w2, [x19, x1]
  441418:	ldp	x19, x20, [sp, #16]
  44141c:	cmp	w2, #0x2f
  441420:	ldp	x29, x30, [sp], #32
  441424:	cinc	x1, x1, eq  // eq = none
  441428:	b	4503b0 <argp_parse@@Base+0x105d0>
  44142c:	mov	x0, x20
  441430:	bl	4415b0 <argp_parse@@Base+0x17d0>
  441434:	mov	x1, x0
  441438:	mov	x0, x20
  44143c:	ldp	x19, x20, [sp, #16]
  441440:	ldp	x29, x30, [sp], #32
  441444:	b	4503b0 <argp_parse@@Base+0x105d0>
  441448:	stp	x29, x30, [sp, #-32]!
  44144c:	mov	x29, sp
  441450:	stp	x19, x20, [sp, #16]
  441454:	mov	x19, x0
  441458:	ldrb	w1, [x0]
  44145c:	cmp	w1, #0x2f
  441460:	cset	x20, eq  // eq = none
  441464:	bl	441558 <argp_parse@@Base+0x1778>
  441468:	sub	x0, x0, x19
  44146c:	b	441480 <argp_parse@@Base+0x16a0>
  441470:	ldrb	w2, [x19, x1]
  441474:	cmp	w2, #0x2f
  441478:	b.ne	44148c <argp_parse@@Base+0x16ac>  // b.any
  44147c:	mov	x0, x1
  441480:	sub	x1, x0, #0x1
  441484:	cmp	x0, x20
  441488:	b.hi	441470 <argp_parse@@Base+0x1690>  // b.pmore
  44148c:	ldp	x19, x20, [sp, #16]
  441490:	ldp	x29, x30, [sp], #32
  441494:	ret
  441498:	stp	x29, x30, [sp, #-48]!
  44149c:	mov	x29, sp
  4414a0:	stp	x19, x20, [sp, #16]
  4414a4:	mov	x20, x0
  4414a8:	stp	x21, x22, [sp, #32]
  4414ac:	ldrb	w1, [x0]
  4414b0:	cmp	w1, #0x2f
  4414b4:	cset	x21, eq  // eq = none
  4414b8:	bl	441558 <argp_parse@@Base+0x1778>
  4414bc:	sub	x19, x0, x20
  4414c0:	b	4414d4 <argp_parse@@Base+0x16f4>
  4414c4:	ldrb	w1, [x20, x0]
  4414c8:	cmp	w1, #0x2f
  4414cc:	b.ne	441530 <argp_parse@@Base+0x1750>  // b.any
  4414d0:	mov	x19, x0
  4414d4:	sub	x0, x19, #0x1
  4414d8:	cmp	x21, x19
  4414dc:	b.cc	4414c4 <argp_parse@@Base+0x16e4>  // b.lo, b.ul, b.last
  4414e0:	eor	x1, x19, #0x1
  4414e4:	add	x0, x19, #0x1
  4414e8:	and	w22, w1, #0x1
  4414ec:	add	x0, x0, x1
  4414f0:	bl	404310 <malloc@plt>
  4414f4:	mov	x21, x0
  4414f8:	cbz	x0, 441550 <argp_parse@@Base+0x1770>
  4414fc:	mov	x1, x20
  441500:	mov	x2, x19
  441504:	bl	403f70 <memcpy@plt>
  441508:	cbz	w22, 441518 <argp_parse@@Base+0x1738>
  44150c:	mov	w0, #0x2e                  	// #46
  441510:	mov	x19, #0x1                   	// #1
  441514:	strb	w0, [x21]
  441518:	strb	wzr, [x21, x19]
  44151c:	mov	x0, x21
  441520:	ldp	x19, x20, [sp, #16]
  441524:	ldp	x21, x22, [sp, #32]
  441528:	ldp	x29, x30, [sp], #48
  44152c:	ret
  441530:	add	x0, x19, #0x1
  441534:	bl	404310 <malloc@plt>
  441538:	mov	x21, x0
  44153c:	cbz	x0, 441550 <argp_parse@@Base+0x1770>
  441540:	mov	x1, x20
  441544:	mov	x2, x19
  441548:	bl	403f70 <memcpy@plt>
  44154c:	b	441518 <argp_parse@@Base+0x1738>
  441550:	mov	x21, #0x0                   	// #0
  441554:	b	44151c <argp_parse@@Base+0x173c>
  441558:	ldrb	w1, [x0]
  44155c:	cmp	w1, #0x2f
  441560:	b.ne	441574 <argp_parse@@Base+0x1794>  // b.any
  441564:	nop
  441568:	ldrb	w1, [x0, #1]!
  44156c:	cmp	w1, #0x2f
  441570:	b.eq	441568 <argp_parse@@Base+0x1788>  // b.none
  441574:	cbz	w1, 4415ac <argp_parse@@Base+0x17cc>
  441578:	mov	x2, x0
  44157c:	mov	w3, #0x0                   	// #0
  441580:	b	441598 <argp_parse@@Base+0x17b8>
  441584:	cbz	w3, 441590 <argp_parse@@Base+0x17b0>
  441588:	mov	x0, x2
  44158c:	mov	w3, #0x0                   	// #0
  441590:	ldrb	w1, [x2, #1]!
  441594:	cbz	w1, 4415ac <argp_parse@@Base+0x17cc>
  441598:	cmp	w1, #0x2f
  44159c:	b.ne	441584 <argp_parse@@Base+0x17a4>  // b.any
  4415a0:	ldrb	w1, [x2, #1]!
  4415a4:	mov	w3, #0x1                   	// #1
  4415a8:	cbnz	w1, 441598 <argp_parse@@Base+0x17b8>
  4415ac:	ret
  4415b0:	stp	x29, x30, [sp, #-32]!
  4415b4:	mov	x29, sp
  4415b8:	str	x19, [sp, #16]
  4415bc:	mov	x19, x0
  4415c0:	bl	403ff0 <strlen@plt>
  4415c4:	subs	x1, x0, #0x1
  4415c8:	b.ls	4415d8 <argp_parse@@Base+0x17f8>  // b.plast
  4415cc:	ldrb	w2, [x19, x1]
  4415d0:	cmp	w2, #0x2f
  4415d4:	b.eq	4415e4 <argp_parse@@Base+0x1804>  // b.none
  4415d8:	ldr	x19, [sp, #16]
  4415dc:	ldp	x29, x30, [sp], #32
  4415e0:	ret
  4415e4:	mov	x0, x1
  4415e8:	b	4415c4 <argp_parse@@Base+0x17e4>
  4415ec:	nop
  4415f0:	stp	x29, x30, [sp, #-32]!
  4415f4:	mov	x29, sp
  4415f8:	str	x19, [sp, #16]
  4415fc:	mov	x19, x0
  441600:	bl	441558 <argp_parse@@Base+0x1778>
  441604:	ldrb	w1, [x0]
  441608:	cmp	w1, #0x0
  44160c:	csel	x19, x19, x0, eq  // eq = none
  441610:	mov	x0, x19
  441614:	bl	4415b0 <argp_parse@@Base+0x17d0>
  441618:	ldrb	w1, [x19, x0]
  44161c:	strb	wzr, [x19, x0]
  441620:	cmp	w1, #0x0
  441624:	cset	w0, ne  // ne = any
  441628:	ldr	x19, [sp, #16]
  44162c:	ldp	x29, x30, [sp], #32
  441630:	ret
  441634:	nop
  441638:	b	4047b0 <free@plt>
  44163c:	nop
  441640:	stp	x29, x30, [sp, #-16]!
  441644:	mov	x29, sp
  441648:	bl	4469d0 <argp_parse@@Base+0x6bf0>
  44164c:	cmp	w0, #0x0
  441650:	cset	w0, eq  // eq = none
  441654:	ldp	x29, x30, [sp], #16
  441658:	ret
  44165c:	nop
  441660:	stp	x29, x30, [sp, #-16]!
  441664:	mov	x29, sp
  441668:	bl	404710 <strcmp@plt>
  44166c:	cmp	w0, #0x0
  441670:	cset	w0, eq  // eq = none
  441674:	ldp	x29, x30, [sp], #16
  441678:	ret
  44167c:	nop
  441680:	b	444be0 <argp_parse@@Base+0x4e00>
  441684:	nop
  441688:	and	w3, w2, #0x10
  44168c:	tbz	w2, #3, 441764 <argp_parse@@Base+0x1984>
  441690:	stp	x29, x30, [sp, #-64]!
  441694:	mov	x29, sp
  441698:	stp	x19, x20, [sp, #16]
  44169c:	mov	x19, x1
  4416a0:	stp	x21, x22, [sp, #32]
  4416a4:	mov	x21, x0
  4416a8:	cbnz	w3, 4416ec <argp_parse@@Base+0x190c>
  4416ac:	bl	403ff0 <strlen@plt>
  4416b0:	mov	x22, x0
  4416b4:	mov	x2, x22
  4416b8:	mov	x0, x21
  4416bc:	mov	x1, x19
  4416c0:	bl	4043c0 <strncmp@plt>
  4416c4:	mov	w20, w0
  4416c8:	cbnz	w0, 4416d8 <argp_parse@@Base+0x18f8>
  4416cc:	ldrb	w20, [x19, x22]
  4416d0:	cmp	w20, #0x2f
  4416d4:	csel	w20, wzr, w20, eq  // eq = none
  4416d8:	mov	w0, w20
  4416dc:	ldp	x19, x20, [sp, #16]
  4416e0:	ldp	x21, x22, [sp, #32]
  4416e4:	ldp	x29, x30, [sp], #64
  4416e8:	ret
  4416ec:	mov	x0, x1
  4416f0:	str	x23, [sp, #48]
  4416f4:	bl	450328 <argp_parse@@Base+0x10548>
  4416f8:	mov	w23, #0x2f                  	// #47
  4416fc:	mov	x22, x0
  441700:	mov	x19, x0
  441704:	b	441720 <argp_parse@@Base+0x1940>
  441708:	strb	wzr, [x19]
  44170c:	bl	4469d0 <argp_parse@@Base+0x6bf0>
  441710:	mov	w20, w0
  441714:	cmp	w0, #0x0
  441718:	b.le	441744 <argp_parse@@Base+0x1964>
  44171c:	strb	w23, [x19], #1
  441720:	mov	x0, x19
  441724:	mov	w1, #0x2f                  	// #47
  441728:	bl	404870 <strchr@plt>
  44172c:	mov	x19, x0
  441730:	mov	x1, x22
  441734:	mov	x0, x21
  441738:	cbnz	x19, 441708 <argp_parse@@Base+0x1928>
  44173c:	bl	4469d0 <argp_parse@@Base+0x6bf0>
  441740:	mov	w20, w0
  441744:	mov	x0, x22
  441748:	bl	4047b0 <free@plt>
  44174c:	mov	w0, w20
  441750:	ldp	x19, x20, [sp, #16]
  441754:	ldp	x21, x22, [sp, #32]
  441758:	ldr	x23, [sp, #48]
  44175c:	ldp	x29, x30, [sp], #64
  441760:	ret
  441764:	cbz	w3, 44176c <argp_parse@@Base+0x198c>
  441768:	b	4469d0 <argp_parse@@Base+0x6bf0>
  44176c:	b	404710 <strcmp@plt>
  441770:	stp	x29, x30, [sp, #-144]!
  441774:	mov	x29, sp
  441778:	strb	wzr, [sp, #80]
  44177c:	stp	x19, x20, [sp, #16]
  441780:	mov	x19, x0
  441784:	mov	x20, #0x0                   	// #0
  441788:	str	x0, [sp, #96]
  44178c:	ldrb	w0, [sp, #80]
  441790:	stp	x21, x22, [sp, #32]
  441794:	mov	x21, x1
  441798:	mov	w22, #0x1                   	// #1
  44179c:	stp	x23, x24, [sp, #48]
  4417a0:	adrp	x23, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4417a4:	add	x24, sp, #0x54
  4417a8:	str	x25, [sp, #64]
  4417ac:	add	x23, x23, #0x700
  4417b0:	stur	xzr, [sp, #84]
  4417b4:	strb	wzr, [sp, #92]
  4417b8:	cbnz	w0, 441830 <argp_parse@@Base+0x1a50>
  4417bc:	nop
  4417c0:	ldrb	w1, [x19]
  4417c4:	ubfx	x0, x1, #5, #3
  4417c8:	ldr	w0, [x23, x0, lsl #2]
  4417cc:	lsr	w0, w0, w1
  4417d0:	tbz	w0, #0, 4418cc <argp_parse@@Base+0x1aec>
  4417d4:	mov	x0, #0x1                   	// #1
  4417d8:	str	x0, [sp, #104]
  4417dc:	ldrb	w25, [x19]
  4417e0:	strb	w0, [sp, #92]
  4417e4:	strb	w0, [sp, #112]
  4417e8:	str	w25, [sp, #116]
  4417ec:	cbz	w25, 4418a8 <argp_parse@@Base+0x1ac8>
  4417f0:	ldrb	w0, [sp, #112]
  4417f4:	ldr	x19, [sp, #96]
  4417f8:	cbz	w0, 4418c4 <argp_parse@@Base+0x1ae4>
  4417fc:	mov	w0, w25
  441800:	bl	404b80 <towlower@plt>
  441804:	lsl	x2, x20, #5
  441808:	strb	wzr, [sp, #92]
  44180c:	sub	x2, x2, x20
  441810:	add	x2, x2, w0, uxtw
  441814:	ldr	x0, [sp, #104]
  441818:	udiv	x20, x2, x21
  44181c:	add	x19, x19, x0
  441820:	ldrb	w0, [sp, #80]
  441824:	str	x19, [sp, #96]
  441828:	msub	x20, x20, x21, x2
  44182c:	cbz	w0, 4417c0 <argp_parse@@Base+0x19e0>
  441830:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  441834:	mov	x1, x0
  441838:	mov	x0, x19
  44183c:	bl	44f780 <argp_parse@@Base+0xf9a0>
  441840:	mov	x2, x0
  441844:	add	x0, sp, #0x50
  441848:	mov	x1, x19
  44184c:	add	x3, sp, #0x54
  441850:	add	x0, x0, #0x24
  441854:	bl	450f30 <argp_parse@@Base+0x11150>
  441858:	str	x0, [sp, #104]
  44185c:	cmn	x0, #0x1
  441860:	b.eq	4418e0 <argp_parse@@Base+0x1b00>  // b.none
  441864:	cmn	x0, #0x2
  441868:	b.eq	4418f8 <argp_parse@@Base+0x1b18>  // b.none
  44186c:	cbnz	x0, 441914 <argp_parse@@Base+0x1b34>
  441870:	ldr	x0, [sp, #96]
  441874:	mov	x1, #0x1                   	// #1
  441878:	str	x1, [sp, #104]
  44187c:	ldrb	w0, [x0]
  441880:	cbnz	w0, 44195c <argp_parse@@Base+0x1b7c>
  441884:	ldr	w25, [sp, #116]
  441888:	cbnz	w25, 44193c <argp_parse@@Base+0x1b5c>
  44188c:	add	x0, sp, #0x54
  441890:	strb	w22, [sp, #112]
  441894:	bl	404670 <mbsinit@plt>
  441898:	cbz	w0, 4418a0 <argp_parse@@Base+0x1ac0>
  44189c:	strb	wzr, [sp, #80]
  4418a0:	strb	w22, [sp, #92]
  4418a4:	cbnz	w25, 4417f0 <argp_parse@@Base+0x1a10>
  4418a8:	mov	x0, x20
  4418ac:	ldp	x19, x20, [sp, #16]
  4418b0:	ldp	x21, x22, [sp, #32]
  4418b4:	ldp	x23, x24, [sp, #48]
  4418b8:	ldr	x25, [sp, #64]
  4418bc:	ldp	x29, x30, [sp], #144
  4418c0:	ret
  4418c4:	ldrb	w0, [x19]
  4418c8:	b	441804 <argp_parse@@Base+0x1a24>
  4418cc:	mov	x0, x24
  4418d0:	bl	404670 <mbsinit@plt>
  4418d4:	cbz	w0, 44191c <argp_parse@@Base+0x1b3c>
  4418d8:	strb	w22, [sp, #80]
  4418dc:	b	441830 <argp_parse@@Base+0x1a50>
  4418e0:	mov	x0, #0x1                   	// #1
  4418e4:	ldr	w25, [sp, #116]
  4418e8:	strb	w0, [sp, #92]
  4418ec:	str	x0, [sp, #104]
  4418f0:	strb	wzr, [sp, #112]
  4418f4:	b	4417f0 <argp_parse@@Base+0x1a10>
  4418f8:	ldr	x0, [sp, #96]
  4418fc:	bl	403ff0 <strlen@plt>
  441900:	ldr	w25, [sp, #116]
  441904:	strb	w22, [sp, #92]
  441908:	str	x0, [sp, #104]
  44190c:	strb	wzr, [sp, #112]
  441910:	b	4417f0 <argp_parse@@Base+0x1a10>
  441914:	ldr	w25, [sp, #116]
  441918:	b	44188c <argp_parse@@Base+0x1aac>
  44191c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441920:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441924:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441928:	add	x3, x3, #0x408
  44192c:	add	x1, x1, #0x3a8
  441930:	add	x0, x0, #0x3b8
  441934:	mov	w2, #0x96                  	// #150
  441938:	bl	404ac0 <__assert_fail@plt>
  44193c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441940:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441944:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441948:	add	x3, x3, #0x408
  44194c:	add	x1, x1, #0x3a8
  441950:	add	x0, x0, #0x3e8
  441954:	mov	w2, #0xb3                  	// #179
  441958:	bl	404ac0 <__assert_fail@plt>
  44195c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441960:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441964:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  441968:	add	x3, x3, #0x408
  44196c:	add	x1, x1, #0x3a8
  441970:	add	x0, x0, #0x3d0
  441974:	mov	w2, #0xb2                  	// #178
  441978:	bl	404ac0 <__assert_fail@plt>
  44197c:	nop
  441980:	stp	x29, x30, [sp, #-32]!
  441984:	mov	x29, sp
  441988:	stp	x19, x20, [sp, #16]
  44198c:	mov	x19, x0
  441990:	mov	x20, x1
  441994:	mov	x0, #0x10                  	// #16
  441998:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44199c:	ldr	x1, [x19, #8]
  4419a0:	stp	x1, x20, [x0]
  4419a4:	str	x0, [x19, #8]
  4419a8:	ldp	x19, x20, [sp, #16]
  4419ac:	ldp	x29, x30, [sp], #32
  4419b0:	ret
  4419b4:	nop
  4419b8:	ldrb	w2, [x0]
  4419bc:	and	w3, w1, #0x8000000
  4419c0:	and	w4, w1, #0x2
  4419c4:	tbz	w1, #5, 441a08 <argp_parse@@Base+0x1c28>
  4419c8:	cbz	w4, 441a6c <argp_parse@@Base+0x1c8c>
  4419cc:	cbnz	w3, 441d6c <argp_parse@@Base+0x1f8c>
  4419d0:	mov	x4, #0x401                 	// #1025
  4419d4:	mov	x1, #0x200                 	// #512
  4419d8:	mov	x5, #0x1                   	// #1
  4419dc:	movk	x4, #0x8000, lsl #16
  4419e0:	mov	x3, #0x2180                	// #8576
  4419e4:	movk	x1, #0x4000, lsl #16
  4419e8:	add	x0, x0, #0x1
  4419ec:	cmp	w2, #0x40
  4419f0:	b.hi	441ad0 <argp_parse@@Base+0x1cf0>  // b.pmore
  4419f4:	cmp	w2, #0x20
  4419f8:	b.hi	441b0c <argp_parse@@Base+0x1d2c>  // b.pmore
  4419fc:	cbnz	w2, 441adc <argp_parse@@Base+0x1cfc>
  441a00:	mov	w0, #0x0                   	// #0
  441a04:	ret
  441a08:	cbnz	w3, 441c8c <argp_parse@@Base+0x1eac>
  441a0c:	mov	x5, #0x1                   	// #1
  441a10:	cbz	w4, 441b44 <argp_parse@@Base+0x1d64>
  441a14:	mov	x3, #0x401                 	// #1025
  441a18:	mov	x1, #0x200                 	// #512
  441a1c:	add	x0, x0, #0x1
  441a20:	cmp	w2, #0x40
  441a24:	mov	x4, #0x2180                	// #8576
  441a28:	movk	x3, #0x8000, lsl #16
  441a2c:	movk	x1, #0x4000, lsl #16
  441a30:	b.hi	441a50 <argp_parse@@Base+0x1c70>  // b.pmore
  441a34:	cmp	w2, #0x20
  441a38:	b.hi	441ae4 <argp_parse@@Base+0x1d04>  // b.pmore
  441a3c:	cbz	w2, 441a00 <argp_parse@@Base+0x1c20>
  441a40:	ldrb	w2, [x0]
  441a44:	add	x0, x0, #0x1
  441a48:	cmp	w2, #0x40
  441a4c:	b.ls	441a34 <argp_parse@@Base+0x1c54>  // b.plast
  441a50:	cmp	w2, #0x5c
  441a54:	b.eq	441a40 <argp_parse@@Base+0x1c60>  // b.none
  441a58:	b.hi	441a40 <argp_parse@@Base+0x1c60>  // b.pmore
  441a5c:	cmp	w2, #0x5b
  441a60:	b.ne	441a40 <argp_parse@@Base+0x1c60>  // b.any
  441a64:	mov	w0, #0x1                   	// #1
  441a68:	ret
  441a6c:	cbnz	w3, 441bc8 <argp_parse@@Base+0x1de8>
  441a70:	mov	x3, #0x401                 	// #1025
  441a74:	mov	x1, #0x200                 	// #512
  441a78:	mov	x5, #0x1                   	// #1
  441a7c:	mov	x4, #0x2180                	// #8576
  441a80:	movk	x3, #0x8000, lsl #16
  441a84:	movk	x1, #0x4000, lsl #16
  441a88:	cmp	w2, #0x40
  441a8c:	add	x7, x0, #0x1
  441a90:	b.hi	441ab4 <argp_parse@@Base+0x1cd4>  // b.pmore
  441a94:	cmp	w2, #0x20
  441a98:	b.hi	441bfc <argp_parse@@Base+0x1e1c>  // b.pmore
  441a9c:	cbz	w2, 441a00 <argp_parse@@Base+0x1c20>
  441aa0:	ldrb	w2, [x0, #1]
  441aa4:	mov	x0, x7
  441aa8:	cmp	w2, #0x40
  441aac:	add	x7, x0, #0x1
  441ab0:	b.ls	441a94 <argp_parse@@Base+0x1cb4>  // b.plast
  441ab4:	cmp	w2, #0x5c
  441ab8:	b.eq	441d40 <argp_parse@@Base+0x1f60>  // b.none
  441abc:	b.hi	441aa0 <argp_parse@@Base+0x1cc0>  // b.pmore
  441ac0:	cmp	w2, #0x5b
  441ac4:	b.ne	441aa0 <argp_parse@@Base+0x1cc0>  // b.any
  441ac8:	mov	w0, #0x1                   	// #1
  441acc:	b	441a68 <argp_parse@@Base+0x1c88>
  441ad0:	cmp	w2, #0x5c
  441ad4:	b.eq	441adc <argp_parse@@Base+0x1cfc>  // b.none
  441ad8:	b.ls	441b34 <argp_parse@@Base+0x1d54>  // b.plast
  441adc:	ldrb	w2, [x0]
  441ae0:	b	4419e8 <argp_parse@@Base+0x1c08>
  441ae4:	sub	w2, w2, #0x21
  441ae8:	lsl	x2, x5, x2
  441aec:	tst	x2, x4
  441af0:	b.ne	441a40 <argp_parse@@Base+0x1c60>  // b.any
  441af4:	tst	x2, x3
  441af8:	b.ne	441a40 <argp_parse@@Base+0x1c60>  // b.any
  441afc:	tst	x2, x1
  441b00:	b.ne	441a64 <argp_parse@@Base+0x1c84>  // b.any
  441b04:	ldrb	w2, [x0]
  441b08:	b	441a44 <argp_parse@@Base+0x1c64>
  441b0c:	sub	w2, w2, #0x21
  441b10:	lsl	x2, x5, x2
  441b14:	tst	x2, x4
  441b18:	b.ne	441c78 <argp_parse@@Base+0x1e98>  // b.any
  441b1c:	tst	x2, x3
  441b20:	b.ne	441adc <argp_parse@@Base+0x1cfc>  // b.any
  441b24:	tst	x2, x1
  441b28:	b.ne	441a64 <argp_parse@@Base+0x1c84>  // b.any
  441b2c:	ldrb	w2, [x0]
  441b30:	b	4419e8 <argp_parse@@Base+0x1c08>
  441b34:	cmp	w2, #0x5b
  441b38:	b.ne	441adc <argp_parse@@Base+0x1cfc>  // b.any
  441b3c:	mov	w0, #0x1                   	// #1
  441b40:	b	441a68 <argp_parse@@Base+0x1c88>
  441b44:	mov	x4, #0x401                 	// #1025
  441b48:	mov	x1, #0x200                 	// #512
  441b4c:	movk	x4, #0x8000, lsl #16
  441b50:	mov	x3, #0x2180                	// #8576
  441b54:	movk	x1, #0x4000, lsl #16
  441b58:	cmp	w2, #0x40
  441b5c:	add	x7, x0, #0x1
  441b60:	b.hi	441b84 <argp_parse@@Base+0x1da4>  // b.pmore
  441b64:	cmp	w2, #0x20
  441b68:	b.hi	441ba0 <argp_parse@@Base+0x1dc0>  // b.pmore
  441b6c:	cbz	w2, 441a00 <argp_parse@@Base+0x1c20>
  441b70:	ldrb	w2, [x0, #1]
  441b74:	mov	x0, x7
  441b78:	add	x7, x0, #0x1
  441b7c:	cmp	w2, #0x40
  441b80:	b.ls	441b64 <argp_parse@@Base+0x1d84>  // b.plast
  441b84:	cmp	w2, #0x5c
  441b88:	b.eq	441d28 <argp_parse@@Base+0x1f48>  // b.none
  441b8c:	b.hi	441b70 <argp_parse@@Base+0x1d90>  // b.pmore
  441b90:	cmp	w2, #0x5b
  441b94:	b.ne	441b70 <argp_parse@@Base+0x1d90>  // b.any
  441b98:	mov	w0, #0x1                   	// #1
  441b9c:	b	441a68 <argp_parse@@Base+0x1c88>
  441ba0:	sub	w2, w2, #0x21
  441ba4:	lsl	x2, x5, x2
  441ba8:	tst	x2, x4
  441bac:	b.ne	441b70 <argp_parse@@Base+0x1d90>  // b.any
  441bb0:	tst	x2, x3
  441bb4:	b.ne	441b70 <argp_parse@@Base+0x1d90>  // b.any
  441bb8:	tst	x2, x1
  441bbc:	b.eq	441b70 <argp_parse@@Base+0x1d90>  // b.none
  441bc0:	mov	w0, #0x1                   	// #1
  441bc4:	b	441a68 <argp_parse@@Base+0x1c88>
  441bc8:	mov	x3, #0x401                 	// #1025
  441bcc:	mov	x1, #0x2380                	// #9088
  441bd0:	mov	x4, #0x1                   	// #1
  441bd4:	movk	x3, #0x8000, lsl #16
  441bd8:	movk	x1, #0x4000, lsl #16
  441bdc:	add	x0, x0, #0x1
  441be0:	cmp	w2, #0x40
  441be4:	b.hi	441c44 <argp_parse@@Base+0x1e64>  // b.pmore
  441be8:	cmp	w2, #0x20
  441bec:	b.hi	441c24 <argp_parse@@Base+0x1e44>  // b.pmore
  441bf0:	cbz	w2, 441a00 <argp_parse@@Base+0x1c20>
  441bf4:	ldrb	w2, [x0]
  441bf8:	b	441bdc <argp_parse@@Base+0x1dfc>
  441bfc:	sub	w2, w2, #0x21
  441c00:	lsl	x2, x5, x2
  441c04:	tst	x2, x4
  441c08:	b.ne	441aa0 <argp_parse@@Base+0x1cc0>  // b.any
  441c0c:	tst	x2, x3
  441c10:	b.ne	441ce0 <argp_parse@@Base+0x1f00>  // b.any
  441c14:	tst	x2, x1
  441c18:	b.ne	441a64 <argp_parse@@Base+0x1c84>  // b.any
  441c1c:	ldrb	w2, [x0, #1]
  441c20:	b	441aa4 <argp_parse@@Base+0x1cc4>
  441c24:	sub	w2, w2, #0x21
  441c28:	lsl	x2, x4, x2
  441c2c:	tst	x2, x3
  441c30:	b.ne	441d58 <argp_parse@@Base+0x1f78>  // b.any
  441c34:	tst	x2, x1
  441c38:	b.ne	441a64 <argp_parse@@Base+0x1c84>  // b.any
  441c3c:	ldrb	w2, [x0]
  441c40:	b	441bdc <argp_parse@@Base+0x1dfc>
  441c44:	cmp	w2, #0x5c
  441c48:	b.eq	441bf4 <argp_parse@@Base+0x1e14>  // b.none
  441c4c:	b.ls	441c68 <argp_parse@@Base+0x1e88>  // b.plast
  441c50:	sub	w2, w2, #0x7b
  441c54:	mov	w5, #0xfd                  	// #253
  441c58:	tst	w2, w5
  441c5c:	b.eq	441a64 <argp_parse@@Base+0x1c84>  // b.none
  441c60:	ldrb	w2, [x0]
  441c64:	b	441bdc <argp_parse@@Base+0x1dfc>
  441c68:	cmp	w2, #0x5b
  441c6c:	b.ne	441bf4 <argp_parse@@Base+0x1e14>  // b.any
  441c70:	mov	w0, #0x1                   	// #1
  441c74:	b	441a68 <argp_parse@@Base+0x1c88>
  441c78:	ldrb	w2, [x0]
  441c7c:	cmp	w2, #0x28
  441c80:	b.ne	4419e8 <argp_parse@@Base+0x1c08>  // b.any
  441c84:	mov	w0, #0x1                   	// #1
  441c88:	b	441a68 <argp_parse@@Base+0x1c88>
  441c8c:	mov	x3, #0x401                 	// #1025
  441c90:	mov	x1, #0x2380                	// #9088
  441c94:	mov	x4, #0x1                   	// #1
  441c98:	movk	x3, #0x8000, lsl #16
  441c9c:	movk	x1, #0x4000, lsl #16
  441ca0:	add	x0, x0, #0x1
  441ca4:	cmp	w2, #0x40
  441ca8:	b.hi	441cf4 <argp_parse@@Base+0x1f14>  // b.pmore
  441cac:	cmp	w2, #0x20
  441cb0:	b.hi	441cc0 <argp_parse@@Base+0x1ee0>  // b.pmore
  441cb4:	cbz	w2, 441a00 <argp_parse@@Base+0x1c20>
  441cb8:	ldrb	w2, [x0]
  441cbc:	b	441ca0 <argp_parse@@Base+0x1ec0>
  441cc0:	sub	w2, w2, #0x21
  441cc4:	lsl	x2, x4, x2
  441cc8:	tst	x2, x3
  441ccc:	b.ne	441cb8 <argp_parse@@Base+0x1ed8>  // b.any
  441cd0:	tst	x2, x1
  441cd4:	b.ne	441a64 <argp_parse@@Base+0x1c84>  // b.any
  441cd8:	ldrb	w2, [x0]
  441cdc:	b	441ca0 <argp_parse@@Base+0x1ec0>
  441ce0:	ldrb	w2, [x0, #1]
  441ce4:	cmp	w2, #0x28
  441ce8:	b.eq	441a64 <argp_parse@@Base+0x1c84>  // b.none
  441cec:	mov	x0, x7
  441cf0:	b	441aa8 <argp_parse@@Base+0x1cc8>
  441cf4:	cmp	w2, #0x5c
  441cf8:	b.eq	441cb8 <argp_parse@@Base+0x1ed8>  // b.none
  441cfc:	b.ls	441d18 <argp_parse@@Base+0x1f38>  // b.plast
  441d00:	sub	w2, w2, #0x7b
  441d04:	mov	w5, #0xfd                  	// #253
  441d08:	tst	w2, w5
  441d0c:	b.eq	441a64 <argp_parse@@Base+0x1c84>  // b.none
  441d10:	ldrb	w2, [x0]
  441d14:	b	441ca0 <argp_parse@@Base+0x1ec0>
  441d18:	cmp	w2, #0x5b
  441d1c:	b.ne	441cb8 <argp_parse@@Base+0x1ed8>  // b.any
  441d20:	mov	w0, #0x1                   	// #1
  441d24:	b	441a68 <argp_parse@@Base+0x1c88>
  441d28:	ldrb	w2, [x0, #1]
  441d2c:	add	x0, x0, #0x2
  441d30:	cmp	w2, #0x0
  441d34:	csel	x0, x0, x7, ne  // ne = any
  441d38:	ldrb	w2, [x0]
  441d3c:	b	441b58 <argp_parse@@Base+0x1d78>
  441d40:	ldrb	w2, [x0, #1]
  441d44:	add	x0, x0, #0x2
  441d48:	cmp	w2, #0x0
  441d4c:	csel	x0, x0, x7, ne  // ne = any
  441d50:	ldrb	w2, [x0]
  441d54:	b	441a88 <argp_parse@@Base+0x1ca8>
  441d58:	ldrb	w2, [x0]
  441d5c:	cmp	w2, #0x28
  441d60:	b.ne	441bdc <argp_parse@@Base+0x1dfc>  // b.any
  441d64:	mov	w0, #0x1                   	// #1
  441d68:	b	441a68 <argp_parse@@Base+0x1c88>
  441d6c:	mov	x3, #0x401                 	// #1025
  441d70:	mov	x1, #0x2380                	// #9088
  441d74:	mov	x4, #0x1                   	// #1
  441d78:	movk	x3, #0x8000, lsl #16
  441d7c:	movk	x1, #0x4000, lsl #16
  441d80:	add	x0, x0, #0x1
  441d84:	cmp	w2, #0x40
  441d88:	b.hi	441dc0 <argp_parse@@Base+0x1fe0>  // b.pmore
  441d8c:	cmp	w2, #0x20
  441d90:	b.hi	441da0 <argp_parse@@Base+0x1fc0>  // b.pmore
  441d94:	cbz	w2, 441a00 <argp_parse@@Base+0x1c20>
  441d98:	ldrb	w2, [x0]
  441d9c:	b	441d80 <argp_parse@@Base+0x1fa0>
  441da0:	sub	w2, w2, #0x21
  441da4:	lsl	x2, x4, x2
  441da8:	tst	x2, x3
  441dac:	b.ne	441df4 <argp_parse@@Base+0x2014>  // b.any
  441db0:	tst	x2, x1
  441db4:	b.ne	441a64 <argp_parse@@Base+0x1c84>  // b.any
  441db8:	ldrb	w2, [x0]
  441dbc:	b	441d80 <argp_parse@@Base+0x1fa0>
  441dc0:	cmp	w2, #0x5c
  441dc4:	b.eq	441d98 <argp_parse@@Base+0x1fb8>  // b.none
  441dc8:	b.ls	441de4 <argp_parse@@Base+0x2004>  // b.plast
  441dcc:	sub	w2, w2, #0x7b
  441dd0:	mov	w5, #0xfd                  	// #253
  441dd4:	tst	w2, w5
  441dd8:	b.eq	441a64 <argp_parse@@Base+0x1c84>  // b.none
  441ddc:	ldrb	w2, [x0]
  441de0:	b	441d80 <argp_parse@@Base+0x1fa0>
  441de4:	cmp	w2, #0x5b
  441de8:	b.ne	441d98 <argp_parse@@Base+0x1fb8>  // b.any
  441dec:	mov	w0, #0x1                   	// #1
  441df0:	b	441a68 <argp_parse@@Base+0x1c88>
  441df4:	ldrb	w2, [x0]
  441df8:	cmp	w2, #0x28
  441dfc:	b.ne	441d80 <argp_parse@@Base+0x1fa0>  // b.any
  441e00:	mov	w0, #0x1                   	// #1
  441e04:	b	441a68 <argp_parse@@Base+0x1c88>
  441e08:	mov	x0, #0x10                  	// #16
  441e0c:	b	450278 <argp_parse@@Base+0x10498>
  441e10:	stp	x29, x30, [sp, #-48]!
  441e14:	mov	x29, sp
  441e18:	stp	x21, x22, [sp, #32]
  441e1c:	mov	x22, x0
  441e20:	ldr	x21, [x0]
  441e24:	stp	x19, x20, [sp, #16]
  441e28:	cbz	x21, 441e88 <argp_parse@@Base+0x20a8>
  441e2c:	nop
  441e30:	ldr	w0, [x21, #8]
  441e34:	mov	x20, x21
  441e38:	ldr	x21, [x21]
  441e3c:	cbz	w0, 441ee0 <argp_parse@@Base+0x2100>
  441e40:	cmp	w0, #0x1
  441e44:	b.ne	441e7c <argp_parse@@Base+0x209c>  // b.any
  441e48:	ldr	x2, [x20, #32]
  441e4c:	ldr	x0, [x20, #16]
  441e50:	cbz	x2, 441e78 <argp_parse@@Base+0x2098>
  441e54:	mov	x19, #0x0                   	// #0
  441e58:	add	x1, x19, x19, lsl #3
  441e5c:	lsl	x1, x1, #3
  441e60:	add	x3, x0, x1
  441e64:	ldr	w1, [x0, x1]
  441e68:	tbnz	w1, #27, 441ec0 <argp_parse@@Base+0x20e0>
  441e6c:	add	x19, x19, #0x1
  441e70:	cmp	x19, x2
  441e74:	b.cc	441e58 <argp_parse@@Base+0x2078>  // b.lo, b.ul, b.last
  441e78:	bl	4047b0 <free@plt>
  441e7c:	mov	x0, x20
  441e80:	bl	4047b0 <free@plt>
  441e84:	cbnz	x21, 441e30 <argp_parse@@Base+0x2050>
  441e88:	ldr	x19, [x22, #8]
  441e8c:	cbz	x19, 441eac <argp_parse@@Base+0x20cc>
  441e90:	mov	x20, x19
  441e94:	ldr	x19, [x19]
  441e98:	ldr	x0, [x20, #8]
  441e9c:	bl	4047b0 <free@plt>
  441ea0:	mov	x0, x20
  441ea4:	bl	4047b0 <free@plt>
  441ea8:	cbnz	x19, 441e90 <argp_parse@@Base+0x20b0>
  441eac:	mov	x0, x22
  441eb0:	ldp	x19, x20, [sp, #16]
  441eb4:	ldp	x21, x22, [sp, #32]
  441eb8:	ldp	x29, x30, [sp], #48
  441ebc:	b	4047b0 <free@plt>
  441ec0:	add	x0, x3, #0x8
  441ec4:	bl	460e70 <_obstack_memory_used@@Base+0xfa60>
  441ec8:	ldr	x2, [x20, #32]
  441ecc:	add	x19, x19, #0x1
  441ed0:	ldr	x0, [x20, #16]
  441ed4:	cmp	x2, x19
  441ed8:	b.hi	441e58 <argp_parse@@Base+0x2078>  // b.pmore
  441edc:	b	441e78 <argp_parse@@Base+0x2098>
  441ee0:	ldr	x0, [x20, #16]
  441ee4:	bl	444f30 <argp_parse@@Base+0x5150>
  441ee8:	b	441e7c <argp_parse@@Base+0x209c>
  441eec:	nop
  441ef0:	stp	x29, x30, [sp, #-64]!
  441ef4:	mov	x29, sp
  441ef8:	stp	x21, x22, [sp, #32]
  441efc:	mov	w21, w2
  441f00:	tst	x21, #0x10000000
  441f04:	stp	x19, x20, [sp, #16]
  441f08:	adrp	x20, 441000 <argp_parse@@Base+0x1220>
  441f0c:	add	x3, x20, #0x688
  441f10:	str	x23, [sp, #48]
  441f14:	adrp	x20, 404000 <fputs@plt>
  441f18:	add	x20, x20, #0x8c0
  441f1c:	csel	x20, x20, x3, ne  // ne = any
  441f20:	mov	x19, x1
  441f24:	mov	x23, x0
  441f28:	blr	x20
  441f2c:	cmp	w0, #0x0
  441f30:	mov	w1, w0
  441f34:	cset	w0, eq  // eq = none
  441f38:	tbnz	w21, #30, 441f60 <argp_parse@@Base+0x2180>
  441f3c:	ldrb	w3, [x19]
  441f40:	cbz	w3, 441f60 <argp_parse@@Base+0x2180>
  441f44:	cbz	w1, 441fa4 <argp_parse@@Base+0x21c4>
  441f48:	mov	x22, x19
  441f4c:	cmp	w3, #0x2f
  441f50:	ldrb	w3, [x19, #1]!
  441f54:	b.eq	441f80 <argp_parse@@Base+0x21a0>  // b.none
  441f58:	cbnz	w3, 441f48 <argp_parse@@Base+0x2168>
  441f5c:	mov	w0, #0x0                   	// #0
  441f60:	ldp	x19, x20, [sp, #16]
  441f64:	ldp	x21, x22, [sp, #32]
  441f68:	ldr	x23, [sp, #48]
  441f6c:	ldp	x29, x30, [sp], #64
  441f70:	ret
  441f74:	ldrb	w3, [x19, #1]
  441f78:	mov	x22, x19
  441f7c:	add	x19, x19, #0x1
  441f80:	cmp	w3, #0x2f
  441f84:	b.eq	441f74 <argp_parse@@Base+0x2194>  // b.none
  441f88:	mov	w2, w21
  441f8c:	mov	x1, x19
  441f90:	mov	x0, x23
  441f94:	blr	x20
  441f98:	ldrb	w3, [x22, #1]
  441f9c:	cbz	w3, 441fbc <argp_parse@@Base+0x21dc>
  441fa0:	cbnz	w0, 441f48 <argp_parse@@Base+0x2168>
  441fa4:	mov	w0, #0x1                   	// #1
  441fa8:	ldp	x19, x20, [sp, #16]
  441fac:	ldp	x21, x22, [sp, #32]
  441fb0:	ldr	x23, [sp, #48]
  441fb4:	ldp	x29, x30, [sp], #64
  441fb8:	ret
  441fbc:	cmp	w0, #0x0
  441fc0:	cset	w0, eq  // eq = none
  441fc4:	b	441f60 <argp_parse@@Base+0x2180>
  441fc8:	stp	x29, x30, [sp, #-128]!
  441fcc:	mov	x29, sp
  441fd0:	stp	x21, x22, [sp, #32]
  441fd4:	ldr	x21, [x0]
  441fd8:	cbz	x21, 442220 <argp_parse@@Base+0x2440>
  441fdc:	mov	x22, x1
  441fe0:	stp	x25, x26, [sp, #64]
  441fe4:	adrp	x25, 441000 <argp_parse@@Base+0x1220>
  441fe8:	add	x0, x25, #0x688
  441fec:	stp	x19, x20, [sp, #16]
  441ff0:	mov	x20, #0x0                   	// #0
  441ff4:	stp	x23, x24, [sp, #48]
  441ff8:	adrp	x24, 404000 <fputs@plt>
  441ffc:	stp	x27, x28, [sp, #80]
  442000:	str	x0, [sp, #112]
  442004:	add	x0, x24, #0x8c0
  442008:	str	x0, [sp, #120]
  44200c:	nop
  442010:	ldr	w0, [x21, #8]
  442014:	cbnz	w0, 4420ec <argp_parse@@Base+0x230c>
  442018:	cbz	x20, 4421f4 <argp_parse@@Base+0x2414>
  44201c:	ldr	w23, [x21, #12]
  442020:	mov	x19, x22
  442024:	ldr	x26, [x21, #16]
  442028:	and	w27, w23, #0x8
  44202c:	and	w23, w23, #0x40000000
  442030:	mov	x1, x19
  442034:	mov	x0, x20
  442038:	bl	404910 <strcpy@plt>
  44203c:	cbz	w27, 4420bc <argp_parse@@Base+0x22dc>
  442040:	mov	x1, x20
  442044:	mov	x0, x26
  442048:	bl	444958 <argp_parse@@Base+0x4b78>
  44204c:	mov	x2, x0
  442050:	mov	w1, #0x2f                  	// #47
  442054:	mov	x0, x20
  442058:	cbnz	x2, 442084 <argp_parse@@Base+0x22a4>
  44205c:	bl	4045d0 <strrchr@plt>
  442060:	cbz	x0, 4420d0 <argp_parse@@Base+0x22f0>
  442064:	strb	wzr, [x0]
  442068:	mov	x1, x20
  44206c:	mov	x0, x26
  442070:	bl	444958 <argp_parse@@Base+0x4b78>
  442074:	mov	x2, x0
  442078:	mov	w1, #0x2f                  	// #47
  44207c:	mov	x0, x20
  442080:	cbz	x2, 44205c <argp_parse@@Base+0x227c>
  442084:	mov	w19, #0x0                   	// #0
  442088:	mov	x0, x20
  44208c:	bl	4047b0 <free@plt>
  442090:	ldr	w0, [x21, #12]
  442094:	ldp	x21, x22, [sp, #32]
  442098:	eor	x0, x0, #0x20000000
  44209c:	ldp	x23, x24, [sp, #48]
  4420a0:	ubfx	x0, x0, #29, #1
  4420a4:	eor	w0, w19, w0
  4420a8:	ldp	x19, x20, [sp, #16]
  4420ac:	ldp	x25, x26, [sp, #64]
  4420b0:	ldp	x27, x28, [sp, #80]
  4420b4:	ldp	x29, x30, [sp], #128
  4420b8:	ret
  4420bc:	mov	x1, x20
  4420c0:	mov	x0, x26
  4420c4:	bl	444958 <argp_parse@@Base+0x4b78>
  4420c8:	cbnz	x0, 442084 <argp_parse@@Base+0x22a4>
  4420cc:	nop
  4420d0:	cbnz	w23, 442140 <argp_parse@@Base+0x2360>
  4420d4:	mov	x0, x19
  4420d8:	mov	w1, #0x2f                  	// #47
  4420dc:	bl	404870 <strchr@plt>
  4420e0:	cbz	x0, 442140 <argp_parse@@Base+0x2360>
  4420e4:	add	x19, x0, #0x1
  4420e8:	b	442030 <argp_parse@@Base+0x2250>
  4420ec:	ldr	x26, [x21, #32]
  4420f0:	ldr	x27, [x21, #16]
  4420f4:	cbz	x26, 442140 <argp_parse@@Base+0x2360>
  4420f8:	add	x27, x27, #0x8
  4420fc:	mov	x24, #0x0                   	// #0
  442100:	ldur	w28, [x27, #-8]
  442104:	tbz	w28, #27, 442150 <argp_parse@@Base+0x2370>
  442108:	mov	x1, x22
  44210c:	mov	x0, x27
  442110:	mov	w4, #0x0                   	// #0
  442114:	mov	x3, #0x0                   	// #0
  442118:	mov	x2, #0x0                   	// #0
  44211c:	bl	460eb8 <_obstack_memory_used@@Base+0xfaa8>
  442120:	cmp	w0, #0x0
  442124:	cset	w1, eq  // eq = none
  442128:	cbnz	w1, 442084 <argp_parse@@Base+0x22a4>
  44212c:	add	x24, x24, #0x1
  442130:	add	x27, x27, #0x48
  442134:	cmp	x26, x24
  442138:	b.ne	442100 <argp_parse@@Base+0x2320>  // b.any
  44213c:	nop
  442140:	ldr	x0, [x21]
  442144:	cbz	x0, 442218 <argp_parse@@Base+0x2438>
  442148:	mov	x21, x0
  44214c:	b	442010 <argp_parse@@Base+0x2230>
  442150:	ldp	x1, x0, [sp, #112]
  442154:	tst	x28, #0x10000000
  442158:	ldr	x25, [x27]
  44215c:	mov	w2, w28
  442160:	csel	x23, x0, x1, ne  // ne = any
  442164:	mov	x1, x22
  442168:	mov	x0, x25
  44216c:	blr	x23
  442170:	cmp	w0, #0x0
  442174:	cset	w1, eq  // eq = none
  442178:	tbnz	w28, #30, 442128 <argp_parse@@Base+0x2348>
  44217c:	ldrb	w3, [x22]
  442180:	cbz	w3, 442128 <argp_parse@@Base+0x2348>
  442184:	cbz	w0, 442084 <argp_parse@@Base+0x22a4>
  442188:	mov	x19, x22
  44218c:	mov	x4, x19
  442190:	cmp	w3, #0x2f
  442194:	add	x19, x19, #0x1
  442198:	ldrb	w3, [x19]
  44219c:	b.eq	4421b8 <argp_parse@@Base+0x23d8>  // b.none
  4421a0:	cbz	w3, 44212c <argp_parse@@Base+0x234c>
  4421a4:	mov	x4, x19
  4421a8:	cmp	w3, #0x2f
  4421ac:	add	x19, x19, #0x1
  4421b0:	ldrb	w3, [x19]
  4421b4:	b.ne	4421a0 <argp_parse@@Base+0x23c0>  // b.any
  4421b8:	str	x4, [sp, #104]
  4421bc:	cmp	w3, #0x2f
  4421c0:	b.eq	4421e8 <argp_parse@@Base+0x2408>  // b.none
  4421c4:	mov	w2, w28
  4421c8:	mov	x1, x19
  4421cc:	mov	x0, x25
  4421d0:	blr	x23
  4421d4:	ldr	x4, [sp, #104]
  4421d8:	ldrb	w3, [x4, #1]
  4421dc:	cbz	w3, 44220c <argp_parse@@Base+0x242c>
  4421e0:	cbnz	w0, 44218c <argp_parse@@Base+0x23ac>
  4421e4:	b	442084 <argp_parse@@Base+0x22a4>
  4421e8:	mov	x4, x19
  4421ec:	ldrb	w3, [x19, #1]!
  4421f0:	b	4421b8 <argp_parse@@Base+0x23d8>
  4421f4:	mov	x0, x22
  4421f8:	bl	403ff0 <strlen@plt>
  4421fc:	add	x0, x0, #0x1
  442200:	bl	4501a0 <argp_parse@@Base+0x103c0>
  442204:	mov	x20, x0
  442208:	b	44201c <argp_parse@@Base+0x223c>
  44220c:	cmp	w0, #0x0
  442210:	cset	w1, eq  // eq = none
  442214:	b	442128 <argp_parse@@Base+0x2348>
  442218:	mov	w19, #0x1                   	// #1
  44221c:	b	442088 <argp_parse@@Base+0x22a8>
  442220:	mov	w0, #0x0                   	// #0
  442224:	ldp	x21, x22, [sp, #32]
  442228:	ldp	x29, x30, [sp], #128
  44222c:	ret
  442230:	stp	x29, x30, [sp, #-64]!
  442234:	tst	w2, #0x18000000
  442238:	mov	x29, sp
  44223c:	stp	x19, x20, [sp, #16]
  442240:	mov	x20, x0
  442244:	mov	w19, w2
  442248:	stp	x21, x22, [sp, #32]
  44224c:	mov	x22, x1
  442250:	ldr	x21, [x0]
  442254:	b.eq	44230c <argp_parse@@Base+0x252c>  // b.none
  442258:	mov	w1, w2
  44225c:	mov	x0, x22
  442260:	bl	4419b8 <argp_parse@@Base+0x1bd8>
  442264:	tst	w0, #0xff
  442268:	b.eq	44230c <argp_parse@@Base+0x252c>  // b.none
  44226c:	stp	x23, x24, [sp, #48]
  442270:	cbz	x21, 442280 <argp_parse@@Base+0x24a0>
  442274:	ldr	w0, [x21, #8]
  442278:	cmp	w0, #0x1
  44227c:	b.eq	442454 <argp_parse@@Base+0x2674>  // b.none
  442280:	mov	x0, #0x28                  	// #40
  442284:	bl	450278 <argp_parse@@Base+0x10498>
  442288:	mov	x21, x0
  44228c:	mov	w1, #0x1                   	// #1
  442290:	ldr	x0, [x20]
  442294:	str	x21, [x20]
  442298:	str	x0, [x21]
  44229c:	stp	w1, w19, [x21, #8]
  4422a0:	add	x24, x21, #0x10
  4422a4:	ldr	x0, [x21, #16]
  4422a8:	ldp	x1, x23, [x24, #8]
  4422ac:	cmp	x23, x1
  4422b0:	b.eq	442464 <argp_parse@@Base+0x2684>  // b.none
  4422b4:	add	x1, x23, x23, lsl #3
  4422b8:	add	x2, x23, #0x1
  4422bc:	str	x2, [x24, #16]
  4422c0:	lsl	x1, x1, #3
  4422c4:	add	x21, x0, x1
  4422c8:	str	w19, [x0, x1]
  4422cc:	tbz	w19, #27, 4423e4 <argp_parse@@Base+0x2604>
  4422d0:	asr	w0, w19, #3
  4422d4:	mov	w20, #0x9                   	// #9
  4422d8:	and	w0, w0, #0x2
  4422dc:	orr	w20, w0, w20
  4422e0:	tbz	w19, #3, 4424e0 <argp_parse@@Base+0x2700>
  4422e4:	mov	x0, x22
  4422e8:	bl	403ff0 <strlen@plt>
  4422ec:	mov	x19, x0
  4422f0:	cbz	x19, 4424ac <argp_parse@@Base+0x26cc>
  4422f4:	sub	x2, x19, #0x1
  4422f8:	ldrb	w0, [x22, x2]
  4422fc:	cmp	w0, #0x2f
  442300:	b.ne	442524 <argp_parse@@Base+0x2744>  // b.any
  442304:	mov	x19, x2
  442308:	b	4422f0 <argp_parse@@Base+0x2510>
  44230c:	cbz	x21, 442318 <argp_parse@@Base+0x2538>
  442310:	ldr	w0, [x21, #8]
  442314:	cbz	w0, 4423a8 <argp_parse@@Base+0x25c8>
  442318:	mov	x0, #0x28                  	// #40
  44231c:	bl	450278 <argp_parse@@Base+0x10498>
  442320:	stp	wzr, w19, [x0, #8]
  442324:	mov	x21, x0
  442328:	tbnz	w19, #4, 4423d0 <argp_parse@@Base+0x25f0>
  44232c:	adrp	x2, 441000 <argp_parse@@Base+0x1220>
  442330:	adrp	x3, 441000 <argp_parse@@Base+0x1220>
  442334:	add	x2, x2, #0x680
  442338:	add	x3, x3, #0x660
  44233c:	mov	x1, #0x0                   	// #0
  442340:	adrp	x4, 441000 <argp_parse@@Base+0x1220>
  442344:	mov	x0, #0x0                   	// #0
  442348:	add	x4, x4, #0x638
  44234c:	bl	444c38 <argp_parse@@Base+0x4e58>
  442350:	str	x0, [x21, #16]
  442354:	ldr	x1, [x20]
  442358:	str	x1, [x21]
  44235c:	str	x21, [x20]
  442360:	and	w19, w19, #0x1ffffffe
  442364:	mov	x0, x22
  442368:	and	w19, w19, #0xf0000003
  44236c:	bl	450328 <argp_parse@@Base+0x10548>
  442370:	mov	x20, x0
  442374:	mov	w0, #0x10000000            	// #268435456
  442378:	cmp	w19, w0
  44237c:	b.eq	442400 <argp_parse@@Base+0x2620>  // b.none
  442380:	ldr	x0, [x21, #16]
  442384:	mov	x1, x20
  442388:	bl	445410 <argp_parse@@Base+0x5630>
  44238c:	cmp	x20, x0
  442390:	b.eq	4423f0 <argp_parse@@Base+0x2610>  // b.none
  442394:	mov	x0, x20
  442398:	ldp	x19, x20, [sp, #16]
  44239c:	ldp	x21, x22, [sp, #32]
  4423a0:	ldp	x29, x30, [sp], #64
  4423a4:	b	4047b0 <free@plt>
  4423a8:	ldr	w2, [x21, #12]
  4423ac:	eor	w2, w19, w2
  4423b0:	and	w2, w2, #0x7ffffff8
  4423b4:	and	w2, w2, #0xe000001f
  4423b8:	cbz	w2, 442360 <argp_parse@@Base+0x2580>
  4423bc:	mov	x0, #0x28                  	// #40
  4423c0:	bl	450278 <argp_parse@@Base+0x10498>
  4423c4:	stp	wzr, w19, [x0, #8]
  4423c8:	mov	x21, x0
  4423cc:	tbz	w19, #4, 44232c <argp_parse@@Base+0x254c>
  4423d0:	adrp	x2, 441000 <argp_parse@@Base+0x1220>
  4423d4:	adrp	x3, 441000 <argp_parse@@Base+0x1220>
  4423d8:	add	x2, x2, #0x770
  4423dc:	add	x3, x3, #0x640
  4423e0:	b	44233c <argp_parse@@Base+0x255c>
  4423e4:	tbnz	w19, #26, 442500 <argp_parse@@Base+0x2720>
  4423e8:	ldp	x23, x24, [sp, #48]
  4423ec:	str	x22, [x21, #8]
  4423f0:	ldp	x19, x20, [sp, #16]
  4423f4:	ldp	x21, x22, [sp, #32]
  4423f8:	ldp	x29, x30, [sp], #64
  4423fc:	ret
  442400:	mov	x4, x20
  442404:	mov	x5, x20
  442408:	mov	x2, x4
  44240c:	ldrb	w3, [x2], #1
  442410:	cmp	w3, #0x5c
  442414:	b.eq	442434 <argp_parse@@Base+0x2654>  // b.none
  442418:	strb	w3, [x5], #1
  44241c:	cbz	w3, 442380 <argp_parse@@Base+0x25a0>
  442420:	mov	x4, x2
  442424:	mov	x2, x4
  442428:	ldrb	w3, [x2], #1
  44242c:	cmp	w3, #0x5c
  442430:	b.ne	442418 <argp_parse@@Base+0x2638>  // b.any
  442434:	ldrb	w0, [x4, #1]
  442438:	cbz	w0, 442448 <argp_parse@@Base+0x2668>
  44243c:	mov	w3, w0
  442440:	add	x2, x4, #0x2
  442444:	b	442418 <argp_parse@@Base+0x2638>
  442448:	mov	x4, x2
  44244c:	strb	w3, [x5], #1
  442450:	b	442424 <argp_parse@@Base+0x2644>
  442454:	ldr	w0, [x21, #12]
  442458:	eor	w0, w19, w0
  44245c:	tbz	w0, #29, 4422a0 <argp_parse@@Base+0x24c0>
  442460:	b	442280 <argp_parse@@Base+0x24a0>
  442464:	cbz	x0, 4424b8 <argp_parse@@Base+0x26d8>
  442468:	mov	x1, #0xf683                	// #63107
  44246c:	movk	x1, #0xda12, lsl #16
  442470:	movk	x1, #0x684b, lsl #32
  442474:	movk	x1, #0x12f, lsl #48
  442478:	cmp	x23, x1
  44247c:	b.hi	4424dc <argp_parse@@Base+0x26fc>  // b.pmore
  442480:	add	x1, x23, #0x1
  442484:	add	x23, x1, x23, lsr #1
  442488:	add	x1, x23, x23, lsl #3
  44248c:	str	x23, [x21, #24]
  442490:	lsl	x1, x1, #3
  442494:	bl	4501d0 <argp_parse@@Base+0x103f0>
  442498:	ldr	x23, [x24, #16]
  44249c:	str	x0, [x21, #16]
  4424a0:	b	4422b4 <argp_parse@@Base+0x24d4>
  4424a4:	ldr	x23, [x24, #16]
  4424a8:	sub	x23, x23, #0x1
  4424ac:	str	x23, [x24, #16]
  4424b0:	ldp	x23, x24, [sp, #48]
  4424b4:	b	4423f0 <argp_parse@@Base+0x2610>
  4424b8:	cmp	x23, #0x0
  4424bc:	mov	x1, #0x48                  	// #72
  4424c0:	csinc	x23, x23, xzr, ne  // ne = any
  4424c4:	umulh	x2, x23, x1
  4424c8:	mul	x1, x23, x1
  4424cc:	cmp	x2, #0x0
  4424d0:	cset	x2, ne  // ne = any
  4424d4:	tbnz	x1, #63, 4424dc <argp_parse@@Base+0x26fc>
  4424d8:	cbz	x2, 442488 <argp_parse@@Base+0x26a8>
  4424dc:	bl	4104a0 <wcrtomb@plt+0xb880>
  4424e0:	mov	w2, w20
  4424e4:	mov	x1, x22
  4424e8:	add	x0, x21, #0x8
  4424ec:	bl	460cc0 <_obstack_memory_used@@Base+0xf8b0>
  4424f0:	mov	w19, w0
  4424f4:	cbnz	w19, 4424a4 <argp_parse@@Base+0x26c4>
  4424f8:	ldp	x23, x24, [sp, #48]
  4424fc:	b	4423f0 <argp_parse@@Base+0x2610>
  442500:	mov	x0, x22
  442504:	bl	450328 <argp_parse@@Base+0x10548>
  442508:	mov	x22, x0
  44250c:	mov	x0, #0x10                  	// #16
  442510:	bl	4501a0 <argp_parse@@Base+0x103c0>
  442514:	ldr	x1, [x20, #8]
  442518:	stp	x1, x22, [x0]
  44251c:	str	x0, [x20, #8]
  442520:	b	4423e8 <argp_parse@@Base+0x2608>
  442524:	add	x0, x19, #0x7
  442528:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44252c:	mov	x1, x22
  442530:	mov	x2, x19
  442534:	mov	x22, x0
  442538:	bl	403f70 <memcpy@plt>
  44253c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  442540:	add	x3, x3, #0x400
  442544:	add	x4, x22, x19
  442548:	mov	w2, w20
  44254c:	mov	x1, x22
  442550:	add	x0, x21, #0x8
  442554:	ldr	w5, [x3]
  442558:	ldur	w3, [x3, #3]
  44255c:	str	w5, [x22, x19]
  442560:	stur	w3, [x4, #3]
  442564:	bl	460cc0 <_obstack_memory_used@@Base+0xf8b0>
  442568:	mov	w19, w0
  44256c:	mov	x0, x22
  442570:	bl	4047b0 <free@plt>
  442574:	b	4424f4 <argp_parse@@Base+0x2714>
  442578:	stp	x29, x30, [sp, #-144]!
  44257c:	mov	x29, sp
  442580:	stp	x19, x20, [sp, #16]
  442584:	and	w20, w4, #0xff
  442588:	mov	x19, #0x0                   	// #0
  44258c:	stp	x21, x22, [sp, #32]
  442590:	mov	x21, x1
  442594:	mov	x22, x2
  442598:	stp	x23, x24, [sp, #48]
  44259c:	mov	w24, w3
  4425a0:	stp	x25, x26, [sp, #64]
  4425a4:	mov	x25, x5
  4425a8:	stp	x27, x28, [sp, #80]
  4425ac:	mov	x27, #0x0                   	// #0
  4425b0:	str	x0, [sp, #104]
  4425b4:	str	xzr, [sp, #136]
  4425b8:	b	4425c4 <argp_parse@@Base+0x27e4>
  4425bc:	strb	w26, [x27, x19]
  4425c0:	add	x19, x19, #0x1
  4425c4:	ldp	x1, x2, [x22, #8]
  4425c8:	add	x3, x1, #0x1
  4425cc:	cmp	x1, x2
  4425d0:	b.cs	4425fc <argp_parse@@Base+0x281c>  // b.hs, b.nlast
  4425d4:	str	x3, [x22, #8]
  4425d8:	ldrb	w26, [x1]
  4425dc:	ldr	x0, [sp, #136]
  4425e0:	cmp	x0, x19
  4425e4:	b.ne	4425bc <argp_parse@@Base+0x27dc>  // b.any
  4425e8:	mov	x0, x27
  4425ec:	add	x1, sp, #0x88
  4425f0:	bl	450220 <argp_parse@@Base+0x10440>
  4425f4:	mov	x27, x0
  4425f8:	b	4425bc <argp_parse@@Base+0x27dc>
  4425fc:	mov	x0, x22
  442600:	bl	404b90 <__uflow@plt>
  442604:	cmn	w0, #0x1
  442608:	b.ne	442748 <argp_parse@@Base+0x2968>  // b.any
  44260c:	ldr	w22, [x22]
  442610:	str	wzr, [sp, #116]
  442614:	bl	404ad0 <__errno_location@plt>
  442618:	str	x0, [sp, #120]
  44261c:	and	w22, w22, #0x20
  442620:	cbz	w22, 442634 <argp_parse@@Base+0x2854>
  442624:	ldr	w22, [x0]
  442628:	cmp	w22, #0x0
  44262c:	csetm	w0, ne  // ne = any
  442630:	str	w0, [sp, #116]
  442634:	mov	x0, x27
  442638:	add	x1, x19, #0x1
  44263c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  442640:	strb	w20, [x0, x19]
  442644:	mov	x26, x0
  442648:	cbz	x19, 442730 <argp_parse@@Base+0x2950>
  44264c:	add	x1, x0, x19
  442650:	mov	x0, #0x10                  	// #16
  442654:	ldurb	w1, [x1, #-1]
  442658:	cmp	w1, w20
  44265c:	cinc	x19, x19, ne  // ne = any
  442660:	add	x19, x26, x19
  442664:	bl	4501a0 <argp_parse@@Base+0x103c0>
  442668:	ldr	x1, [x21, #8]
  44266c:	stp	x1, x26, [x0]
  442670:	cmp	x26, x19
  442674:	str	x0, [x21, #8]
  442678:	b.cs	4426dc <argp_parse@@Base+0x28fc>  // b.hs, b.nlast
  44267c:	ubfiz	x27, x20, #1, #8
  442680:	mov	x28, x26
  442684:	b	442690 <argp_parse@@Base+0x28b0>
  442688:	cmp	x19, x26
  44268c:	b.eq	4426dc <argp_parse@@Base+0x28fc>  // b.none
  442690:	ldrb	w0, [x26]
  442694:	mov	x23, x26
  442698:	add	x26, x26, #0x1
  44269c:	cmp	w0, w20
  4426a0:	b.ne	442688 <argp_parse@@Base+0x28a8>  // b.any
  4426a4:	bl	404740 <__ctype_b_loc@plt>
  4426a8:	ldr	x3, [x0]
  4426ac:	ldrh	w0, [x3, x27]
  4426b0:	tbnz	w0, #13, 442704 <argp_parse@@Base+0x2924>
  4426b4:	ldr	x4, [sp, #104]
  4426b8:	strb	wzr, [x23]
  4426bc:	mov	x1, x28
  4426c0:	mov	x3, x25
  4426c4:	mov	w2, w24
  4426c8:	mov	x0, x21
  4426cc:	blr	x4
  4426d0:	mov	x28, x26
  4426d4:	cmp	x19, x26
  4426d8:	b.ne	442690 <argp_parse@@Base+0x28b0>  // b.any
  4426dc:	ldr	x0, [sp, #120]
  4426e0:	ldp	x19, x20, [sp, #16]
  4426e4:	ldp	x23, x24, [sp, #48]
  4426e8:	ldp	x25, x26, [sp, #64]
  4426ec:	ldp	x27, x28, [sp, #80]
  4426f0:	str	w22, [x0]
  4426f4:	ldr	w0, [sp, #116]
  4426f8:	ldp	x21, x22, [sp, #32]
  4426fc:	ldp	x29, x30, [sp], #144
  442700:	ret
  442704:	sub	x0, x26, #0x1
  442708:	cmp	x28, x0
  44270c:	b.eq	4426d0 <argp_parse@@Base+0x28f0>  // b.none
  442710:	ldurb	w0, [x23, #-1]
  442714:	ldrh	w0, [x3, x0, lsl #1]
  442718:	tbz	w0, #13, 4426b4 <argp_parse@@Base+0x28d4>
  44271c:	sub	x23, x23, #0x1
  442720:	cmp	x23, x28
  442724:	b.ne	442710 <argp_parse@@Base+0x2930>  // b.any
  442728:	mov	x28, x26
  44272c:	b	4426d4 <argp_parse@@Base+0x28f4>
  442730:	mov	x0, #0x10                  	// #16
  442734:	bl	4501a0 <argp_parse@@Base+0x103c0>
  442738:	ldr	x1, [x21, #8]
  44273c:	stp	x1, x26, [x0]
  442740:	str	x0, [x21, #8]
  442744:	b	4426dc <argp_parse@@Base+0x28fc>
  442748:	and	w26, w0, #0xff
  44274c:	b	4425dc <argp_parse@@Base+0x27fc>
  442750:	stp	x29, x30, [sp, #-144]!
  442754:	mov	x29, sp
  442758:	stp	x19, x20, [sp, #16]
  44275c:	stp	x21, x22, [sp, #32]
  442760:	mov	x21, x1
  442764:	stp	x23, x24, [sp, #48]
  442768:	and	w23, w4, #0xff
  44276c:	stp	x25, x26, [sp, #64]
  442770:	mov	x25, x0
  442774:	mov	w26, w3
  442778:	stp	x27, x28, [sp, #80]
  44277c:	ldrb	w0, [x2]
  442780:	cmp	w0, #0x2d
  442784:	b.eq	442948 <argp_parse@@Base+0x2b68>  // b.none
  442788:	mov	x0, x2
  44278c:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  442790:	add	x1, x1, #0xc28
  442794:	bl	4042e0 <fopen@plt>
  442798:	mov	x20, x0
  44279c:	cbz	x0, 442970 <argp_parse@@Base+0x2b90>
  4427a0:	str	wzr, [sp, #116]
  4427a4:	mov	x19, #0x0                   	// #0
  4427a8:	mov	x28, #0x0                   	// #0
  4427ac:	str	xzr, [sp, #136]
  4427b0:	b	4427bc <argp_parse@@Base+0x29dc>
  4427b4:	strb	w22, [x28, x19]
  4427b8:	add	x19, x19, #0x1
  4427bc:	ldp	x0, x3, [x20, #8]
  4427c0:	add	x2, x0, #0x1
  4427c4:	cmp	x0, x3
  4427c8:	b.cs	4427f4 <argp_parse@@Base+0x2a14>  // b.hs, b.nlast
  4427cc:	str	x2, [x20, #8]
  4427d0:	ldrb	w22, [x0]
  4427d4:	ldr	x0, [sp, #136]
  4427d8:	cmp	x0, x19
  4427dc:	b.ne	4427b4 <argp_parse@@Base+0x29d4>  // b.any
  4427e0:	mov	x0, x28
  4427e4:	add	x1, sp, #0x88
  4427e8:	bl	450220 <argp_parse@@Base+0x10440>
  4427ec:	mov	x28, x0
  4427f0:	b	4427b4 <argp_parse@@Base+0x29d4>
  4427f4:	mov	x0, x20
  4427f8:	bl	404b90 <__uflow@plt>
  4427fc:	cmn	w0, #0x1
  442800:	b.ne	442978 <argp_parse@@Base+0x2b98>  // b.any
  442804:	bl	404ad0 <__errno_location@plt>
  442808:	ldr	w22, [x20]
  44280c:	mov	x24, x0
  442810:	mov	w27, #0x0                   	// #0
  442814:	and	w22, w22, #0x20
  442818:	cbz	w22, 442828 <argp_parse@@Base+0x2a48>
  44281c:	ldr	w22, [x0]
  442820:	cmp	w22, #0x0
  442824:	csetm	w27, ne  // ne = any
  442828:	mov	x0, x28
  44282c:	add	x1, x19, #0x1
  442830:	bl	4501d0 <argp_parse@@Base+0x103f0>
  442834:	strb	w23, [x0, x19]
  442838:	mov	x28, x0
  44283c:	cbnz	x19, 442884 <argp_parse@@Base+0x2aa4>
  442840:	mov	x0, #0x10                  	// #16
  442844:	bl	4501a0 <argp_parse@@Base+0x103c0>
  442848:	ldr	x1, [x21, #8]
  44284c:	stp	x1, x28, [x0]
  442850:	str	x0, [x21, #8]
  442854:	nop
  442858:	ldr	w0, [sp, #116]
  44285c:	str	w22, [x24]
  442860:	cbz	w0, 442964 <argp_parse@@Base+0x2b84>
  442864:	mov	w0, w27
  442868:	ldp	x19, x20, [sp, #16]
  44286c:	ldp	x21, x22, [sp, #32]
  442870:	ldp	x23, x24, [sp, #48]
  442874:	ldp	x25, x26, [sp, #64]
  442878:	ldp	x27, x28, [sp, #80]
  44287c:	ldp	x29, x30, [sp], #144
  442880:	ret
  442884:	add	x1, x0, x19
  442888:	mov	x0, #0x10                  	// #16
  44288c:	ldurb	w1, [x1, #-1]
  442890:	cmp	w1, w23
  442894:	cinc	x19, x19, ne  // ne = any
  442898:	add	x19, x28, x19
  44289c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4428a0:	ldr	x1, [x21, #8]
  4428a4:	stp	x1, x28, [x0]
  4428a8:	cmp	x28, x19
  4428ac:	str	x0, [x21, #8]
  4428b0:	b.cs	442858 <argp_parse@@Base+0x2a78>  // b.hs, b.nlast
  4428b4:	ubfiz	x0, x23, #1, #8
  4428b8:	mov	x1, x28
  4428bc:	str	x0, [sp, #120]
  4428c0:	b	4428cc <argp_parse@@Base+0x2aec>
  4428c4:	cmp	x19, x28
  4428c8:	b.eq	442858 <argp_parse@@Base+0x2a78>  // b.none
  4428cc:	ldrb	w0, [x28]
  4428d0:	mov	x2, x28
  4428d4:	add	x28, x28, #0x1
  4428d8:	cmp	w23, w0
  4428dc:	b.ne	4428c4 <argp_parse@@Base+0x2ae4>  // b.any
  4428e0:	stp	x2, x1, [sp, #96]
  4428e4:	bl	404740 <__ctype_b_loc@plt>
  4428e8:	ldr	x0, [x0]
  4428ec:	ldr	x1, [sp, #120]
  4428f0:	ldr	x2, [sp, #96]
  4428f4:	ldrh	w4, [x0, x1]
  4428f8:	ldr	x1, [sp, #104]
  4428fc:	tbnz	w4, #13, 442918 <argp_parse@@Base+0x2b38>
  442900:	strb	wzr, [x2]
  442904:	mov	x0, x21
  442908:	mov	w2, w26
  44290c:	blr	x25
  442910:	mov	x1, x28
  442914:	b	4428c4 <argp_parse@@Base+0x2ae4>
  442918:	sub	x4, x28, #0x1
  44291c:	cmp	x1, x4
  442920:	b.eq	442910 <argp_parse@@Base+0x2b30>  // b.none
  442924:	nop
  442928:	ldurb	w4, [x2, #-1]
  44292c:	ldrh	w4, [x0, x4, lsl #1]
  442930:	tbz	w4, #13, 442900 <argp_parse@@Base+0x2b20>
  442934:	sub	x2, x2, #0x1
  442938:	cmp	x2, x1
  44293c:	b.ne	442928 <argp_parse@@Base+0x2b48>  // b.any
  442940:	mov	x1, x28
  442944:	b	4428c4 <argp_parse@@Base+0x2ae4>
  442948:	ldrb	w0, [x2, #1]
  44294c:	cbnz	w0, 442788 <argp_parse@@Base+0x29a8>
  442950:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  442954:	mov	w1, #0x1                   	// #1
  442958:	str	w1, [sp, #116]
  44295c:	ldr	x20, [x0, #1192]
  442960:	b	4427a4 <argp_parse@@Base+0x29c4>
  442964:	mov	x0, x20
  442968:	bl	4042a0 <fclose@plt>
  44296c:	cbz	w0, 442864 <argp_parse@@Base+0x2a84>
  442970:	mov	w27, #0xffffffff            	// #-1
  442974:	b	442864 <argp_parse@@Base+0x2a84>
  442978:	and	w22, w0, #0xff
  44297c:	b	4427d4 <argp_parse@@Base+0x29f4>
  442980:	stp	x29, x30, [sp, #-48]!
  442984:	mov	x29, sp
  442988:	stp	x19, x20, [sp, #16]
  44298c:	mov	x19, x2
  442990:	mov	x20, x3
  442994:	stp	x21, x22, [sp, #32]
  442998:	mov	w21, w1
  44299c:	mov	w22, w4
  4429a0:	tbz	w0, #31, 4429d4 <argp_parse@@Base+0x2bf4>
  4429a4:	cbz	x2, 442a0c <argp_parse@@Base+0x2c2c>
  4429a8:	mov	w3, w22
  4429ac:	mov	x2, x20
  4429b0:	mov	x1, x19
  4429b4:	mov	w0, w21
  4429b8:	bl	4048a0 <utimensat@plt>
  4429bc:	cmp	w0, #0x1
  4429c0:	b.eq	442a0c <argp_parse@@Base+0x2c2c>  // b.none
  4429c4:	ldp	x19, x20, [sp, #16]
  4429c8:	ldp	x21, x22, [sp, #32]
  4429cc:	ldp	x29, x30, [sp], #48
  4429d0:	ret
  4429d4:	mov	x1, x3
  4429d8:	bl	4043b0 <futimens@plt>
  4429dc:	cmp	x19, #0x0
  4429e0:	ccmn	w0, #0x1, #0x0, ne  // ne = any
  4429e4:	b.ne	4429bc <argp_parse@@Base+0x2bdc>  // b.any
  4429e8:	bl	404ad0 <__errno_location@plt>
  4429ec:	ldr	w0, [x0]
  4429f0:	cmp	w0, #0x26
  4429f4:	b.eq	4429a8 <argp_parse@@Base+0x2bc8>  // b.none
  4429f8:	mov	w0, #0xffffffff            	// #-1
  4429fc:	ldp	x19, x20, [sp, #16]
  442a00:	ldp	x21, x22, [sp, #32]
  442a04:	ldp	x29, x30, [sp], #48
  442a08:	ret
  442a0c:	bl	404ad0 <__errno_location@plt>
  442a10:	mov	x1, x0
  442a14:	mov	w2, #0x9                   	// #9
  442a18:	mov	w0, #0xffffffff            	// #-1
  442a1c:	ldp	x19, x20, [sp, #16]
  442a20:	str	w2, [x1]
  442a24:	ldp	x21, x22, [sp, #32]
  442a28:	ldp	x29, x30, [sp], #48
  442a2c:	ret
  442a30:	stp	x29, x30, [sp, #-32]!
  442a34:	mov	x29, sp
  442a38:	stp	x19, x20, [sp, #16]
  442a3c:	mov	x19, x1
  442a40:	ldr	w1, [x1, #16]
  442a44:	and	w1, w1, #0xf000
  442a48:	cmp	w1, #0xa, lsl #12
  442a4c:	b.ne	442a60 <argp_parse@@Base+0x2c80>  // b.any
  442a50:	mov	w0, #0x0                   	// #0
  442a54:	ldp	x19, x20, [sp, #16]
  442a58:	ldp	x29, x30, [sp], #32
  442a5c:	ret
  442a60:	mov	x20, x0
  442a64:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  442a68:	mov	x3, #0x0                   	// #0
  442a6c:	add	x1, x1, #0x420
  442a70:	mov	x2, #0x0                   	// #0
  442a74:	bl	4046c0 <getxattr@plt>
  442a78:	cmp	x0, #0x0
  442a7c:	b.lt	442a94 <argp_parse@@Base+0x2cb4>  // b.tstop
  442a80:	b.eq	442abc <argp_parse@@Base+0x2cdc>  // b.none
  442a84:	mov	w0, #0x1                   	// #1
  442a88:	ldp	x19, x20, [sp, #16]
  442a8c:	ldp	x29, x30, [sp], #32
  442a90:	ret
  442a94:	bl	404ad0 <__errno_location@plt>
  442a98:	ldr	w0, [x0]
  442a9c:	cmp	w0, #0x3d
  442aa0:	b.eq	442abc <argp_parse@@Base+0x2cdc>  // b.none
  442aa4:	bl	4620a8 <_obstack_memory_used@@Base+0x10c98>
  442aa8:	and	w0, w0, #0xff
  442aac:	neg	w0, w0
  442ab0:	ldp	x19, x20, [sp, #16]
  442ab4:	ldp	x29, x30, [sp], #32
  442ab8:	ret
  442abc:	ldr	w0, [x19, #16]
  442ac0:	and	w0, w0, #0xf000
  442ac4:	cmp	w0, #0x4, lsl #12
  442ac8:	b.ne	442a50 <argp_parse@@Base+0x2c70>  // b.any
  442acc:	mov	x0, x20
  442ad0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  442ad4:	mov	x3, #0x0                   	// #0
  442ad8:	add	x1, x1, #0x438
  442adc:	mov	x2, #0x0                   	// #0
  442ae0:	bl	4046c0 <getxattr@plt>
  442ae4:	cmp	x0, #0x0
  442ae8:	b.lt	442af8 <argp_parse@@Base+0x2d18>  // b.tstop
  442aec:	b.eq	442a50 <argp_parse@@Base+0x2c70>  // b.none
  442af0:	mov	w0, #0x1                   	// #1
  442af4:	b	442a88 <argp_parse@@Base+0x2ca8>
  442af8:	bl	404ad0 <__errno_location@plt>
  442afc:	ldr	w0, [x0]
  442b00:	cmp	w0, #0x3d
  442b04:	b.ne	442aa4 <argp_parse@@Base+0x2cc4>  // b.any
  442b08:	b	442a50 <argp_parse@@Base+0x2c70>
  442b0c:	nop
  442b10:	sub	sp, sp, #0x4f0
  442b14:	stp	x29, x30, [sp]
  442b18:	mov	x29, sp
  442b1c:	stp	x19, x20, [sp, #16]
  442b20:	mov	x19, x2
  442b24:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x21bf0>
  442b28:	stp	x21, x22, [sp, #32]
  442b2c:	add	x2, x2, #0x7e8
  442b30:	ldr	w20, [x19, #8]
  442b34:	ldr	x21, [x19, #48]
  442b38:	stp	x23, x24, [sp, #48]
  442b3c:	mov	x23, x0
  442b40:	and	w0, w3, #0xff
  442b44:	str	x5, [sp, #104]
  442b48:	stp	w0, w6, [sp, #112]
  442b4c:	cmp	x21, #0x0
  442b50:	str	x4, [sp, #120]
  442b54:	csel	x21, x2, x21, eq  // eq = none
  442b58:	mov	x22, x1
  442b5c:	cmp	w20, #0xc
  442b60:	b.le	442bf0 <argp_parse@@Base+0x2e10>
  442b64:	sub	w20, w20, #0xc
  442b68:	ldrb	w0, [x22]
  442b6c:	cbz	w0, 443ccc <argp_parse@@Base+0x3eec>
  442b70:	stp	x25, x26, [sp, #64]
  442b74:	mov	w25, #0xcccd                	// #52429
  442b78:	add	x1, sp, #0xda
  442b7c:	mov	x24, #0x0                   	// #0
  442b80:	movk	w25, #0xcccc, lsl #16
  442b84:	stp	x27, x28, [sp, #80]
  442b88:	str	x1, [sp, #96]
  442b8c:	cmp	w0, #0x25
  442b90:	b.eq	442c00 <argp_parse@@Base+0x2e20>  // b.none
  442b94:	cmn	x24, #0x3
  442b98:	b.hi	442bc8 <argp_parse@@Base+0x2de8>  // b.pmore
  442b9c:	cbz	x23, 442ba8 <argp_parse@@Base+0x2dc8>
  442ba0:	mov	x1, x23
  442ba4:	bl	404170 <fputc@plt>
  442ba8:	add	x24, x24, #0x1
  442bac:	mov	x27, x22
  442bb0:	ldrb	w0, [x27, #1]
  442bb4:	add	x22, x27, #0x1
  442bb8:	cbnz	w0, 442b8c <argp_parse@@Base+0x2dac>
  442bbc:	ldp	x25, x26, [sp, #64]
  442bc0:	ldp	x27, x28, [sp, #80]
  442bc4:	b	442bd4 <argp_parse@@Base+0x2df4>
  442bc8:	ldp	x25, x26, [sp, #64]
  442bcc:	mov	x24, #0x0                   	// #0
  442bd0:	ldp	x27, x28, [sp, #80]
  442bd4:	mov	x0, x24
  442bd8:	ldp	x29, x30, [sp]
  442bdc:	ldp	x19, x20, [sp, #16]
  442be0:	ldp	x21, x22, [sp, #32]
  442be4:	ldp	x23, x24, [sp, #48]
  442be8:	add	sp, sp, #0x4f0
  442bec:	ret
  442bf0:	cmp	w20, #0x0
  442bf4:	mov	w0, #0xc                   	// #12
  442bf8:	csel	w20, w20, w0, ne  // ne = any
  442bfc:	b	442b68 <argp_parse@@Base+0x2d88>
  442c00:	ldr	w26, [sp, #112]
  442c04:	mov	w27, #0x0                   	// #0
  442c08:	mov	w11, #0x0                   	// #0
  442c0c:	nop
  442c10:	ldrb	w2, [x22, #1]!
  442c14:	cmp	w2, #0x30
  442c18:	mov	w0, w2
  442c1c:	b.eq	442c40 <argp_parse@@Base+0x2e60>  // b.none
  442c20:	b.hi	442d38 <argp_parse@@Base+0x2f58>  // b.pmore
  442c24:	cmp	w2, #0x23
  442c28:	b.ne	442c48 <argp_parse@@Base+0x2e68>  // b.any
  442c2c:	ldrb	w2, [x22, #1]!
  442c30:	mov	w27, #0x1                   	// #1
  442c34:	cmp	w2, #0x30
  442c38:	mov	w0, w2
  442c3c:	b.ne	442c20 <argp_parse@@Base+0x2e40>  // b.any
  442c40:	mov	w11, w2
  442c44:	b	442c10 <argp_parse@@Base+0x2e30>
  442c48:	cmp	w2, #0x2d
  442c4c:	b.eq	442c40 <argp_parse@@Base+0x2e60>  // b.none
  442c50:	mov	w10, #0xffffffff            	// #-1
  442c54:	cmp	w2, #0x4f
  442c58:	mov	w6, #0x0                   	// #0
  442c5c:	b.eq	442dec <argp_parse@@Base+0x300c>  // b.none
  442c60:	cmp	w2, #0x7a
  442c64:	b.ls	442db4 <argp_parse@@Base+0x2fd4>  // b.plast
  442c68:	sub	x0, x22, #0x1
  442c6c:	add	w3, w22, #0x1
  442c70:	mov	x28, x0
  442c74:	sub	w2, w3, w0
  442c78:	ldrb	w1, [x0], #-1
  442c7c:	cmp	w1, #0x25
  442c80:	b.ne	442c70 <argp_parse@@Base+0x2e90>  // b.any
  442c84:	cmp	w10, #0x0
  442c88:	sxtw	x0, w2
  442c8c:	csel	w1, w10, wzr, ge  // ge = tcont
  442c90:	mov	x27, x22
  442c94:	mvn	x2, x24
  442c98:	str	x0, [sp, #144]
  442c9c:	sxtw	x1, w1
  442ca0:	cmp	x0, x1
  442ca4:	csel	x0, x0, x1, cs  // cs = hs, nlast
  442ca8:	str	x0, [sp, #136]
  442cac:	cmp	x2, x0
  442cb0:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  442cb4:	cbz	x23, 442d2c <argp_parse@@Base+0x2f4c>
  442cb8:	ldr	x0, [sp, #144]
  442cbc:	cmp	x0, x1
  442cc0:	b.cs	442cfc <argp_parse@@Base+0x2f1c>  // b.hs, b.nlast
  442cc4:	sxtw	x10, w10
  442cc8:	cmp	w11, #0x30
  442ccc:	sub	x0, x10, x0
  442cd0:	str	x0, [sp, #128]
  442cd4:	b.eq	443f2c <argp_parse@@Base+0x414c>  // b.none
  442cd8:	mov	x22, #0x0                   	// #0
  442cdc:	cbz	x0, 442cfc <argp_parse@@Base+0x2f1c>
  442ce0:	mov	x1, x23
  442ce4:	mov	w0, #0x20                  	// #32
  442ce8:	bl	404170 <fputc@plt>
  442cec:	add	x22, x22, #0x1
  442cf0:	ldr	x0, [sp, #128]
  442cf4:	cmp	x0, x22
  442cf8:	b.ne	442ce0 <argp_parse@@Base+0x2f00>  // b.any
  442cfc:	cbz	w26, 443cd4 <argp_parse@@Base+0x3ef4>
  442d00:	bl	404540 <__ctype_toupper_loc@plt>
  442d04:	mov	x22, x0
  442d08:	ldr	x1, [sp, #144]
  442d0c:	add	x26, x28, x1
  442d10:	ldrb	w3, [x28], #1
  442d14:	mov	x1, x23
  442d18:	ldr	x2, [x22]
  442d1c:	ldr	w0, [x2, x3, lsl #2]
  442d20:	bl	404170 <fputc@plt>
  442d24:	cmp	x28, x26
  442d28:	b.ne	442d10 <argp_parse@@Base+0x2f30>  // b.any
  442d2c:	ldr	x0, [sp, #136]
  442d30:	add	x24, x24, x0
  442d34:	b	442bb0 <argp_parse@@Base+0x2dd0>
  442d38:	cmp	w2, #0x5e
  442d3c:	b.ne	442d48 <argp_parse@@Base+0x2f68>  // b.any
  442d40:	mov	w26, #0x1                   	// #1
  442d44:	b	442c10 <argp_parse@@Base+0x2e30>
  442d48:	cmp	w2, #0x5f
  442d4c:	b.eq	442c40 <argp_parse@@Base+0x2e60>  // b.none
  442d50:	sub	w1, w2, #0x30
  442d54:	cmp	w1, #0x9
  442d58:	b.hi	444368 <argp_parse@@Base+0x4588>  // b.pmore
  442d5c:	mov	w6, #0xcccc                	// #52428
  442d60:	mov	w10, #0x0                   	// #0
  442d64:	movk	w6, #0xccc, lsl #16
  442d68:	mov	x0, x22
  442d6c:	cmp	w10, w6
  442d70:	ldrb	w3, [x0, #1]!
  442d74:	sub	w1, w3, #0x30
  442d78:	b.gt	442dd4 <argp_parse@@Base+0x2ff4>
  442d7c:	b.eq	442dcc <argp_parse@@Base+0x2fec>  // b.none
  442d80:	add	w10, w10, w10, lsl #2
  442d84:	sub	w5, w2, #0x30
  442d88:	mov	x22, x0
  442d8c:	mov	w2, w3
  442d90:	add	w10, w5, w10, lsl #1
  442d94:	cmp	w1, #0x9
  442d98:	b.ls	442d68 <argp_parse@@Base+0x2f88>  // b.plast
  442d9c:	mov	w0, w2
  442da0:	mov	w3, w2
  442da4:	cmp	w3, #0x45
  442da8:	b.eq	442dec <argp_parse@@Base+0x300c>  // b.none
  442dac:	mov	w2, w3
  442db0:	b	442c54 <argp_parse@@Base+0x2e74>
  442db4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  442db8:	add	x1, x1, #0x48c
  442dbc:	ldrh	w1, [x1, w2, uxtw #1]
  442dc0:	adr	x3, 442dcc <argp_parse@@Base+0x2fec>
  442dc4:	add	x1, x3, w1, sxth #2
  442dc8:	br	x1
  442dcc:	cmp	w2, #0x37
  442dd0:	b.ls	442d80 <argp_parse@@Base+0x2fa0>  // b.plast
  442dd4:	cmp	w1, #0x9
  442dd8:	b.hi	443bdc <argp_parse@@Base+0x3dfc>  // b.pmore
  442ddc:	ldrb	w2, [x22, #2]!
  442de0:	mov	w10, #0x7fffffff            	// #2147483647
  442de4:	sub	w1, w2, #0x30
  442de8:	b	442d94 <argp_parse@@Base+0x2fb4>
  442dec:	ldrb	w2, [x22, #1]
  442df0:	mov	w6, w0
  442df4:	add	x22, x22, #0x1
  442df8:	mov	w0, w2
  442dfc:	b	442c60 <argp_parse@@Base+0x2e80>
  442e00:	cmp	w6, #0x4f
  442e04:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  442e08:	str	wzr, [sp, #144]
  442e0c:	mov	w0, #0x2520                	// #9504
  442e10:	strh	w0, [sp, #216]
  442e14:	cbnz	w6, 444374 <argp_parse@@Base+0x4594>
  442e18:	ldr	x1, [sp, #96]
  442e1c:	mov	x27, x22
  442e20:	strb	w2, [x1]
  442e24:	mov	x3, x19
  442e28:	strb	wzr, [x1, #1]
  442e2c:	add	x0, sp, #0xf0
  442e30:	add	x2, sp, #0xd8
  442e34:	mov	x1, #0x400                 	// #1024
  442e38:	str	w10, [sp, #128]
  442e3c:	str	w11, [sp, #136]
  442e40:	str	w6, [sp, #152]
  442e44:	bl	404150 <strftime@plt>
  442e48:	mov	x28, x0
  442e4c:	cbz	x0, 442bb0 <argp_parse@@Base+0x2dd0>
  442e50:	ldr	w10, [sp, #128]
  442e54:	sub	x22, x0, #0x1
  442e58:	mvn	x1, x24
  442e5c:	cmp	w10, #0x0
  442e60:	csel	w0, w10, wzr, ge  // ge = tcont
  442e64:	sxtw	x0, w0
  442e68:	cmp	x22, x0
  442e6c:	csel	x2, x22, x0, cs  // cs = hs, nlast
  442e70:	str	x2, [sp, #160]
  442e74:	cmp	x1, x2
  442e78:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  442e7c:	cbz	x23, 442f14 <argp_parse@@Base+0x3134>
  442e80:	ldr	w6, [sp, #152]
  442e84:	ldr	w11, [sp, #136]
  442e88:	cmp	w6, #0x0
  442e8c:	ccmp	x22, x0, #0x2, eq  // eq = none
  442e90:	b.cs	442ed4 <argp_parse@@Base+0x30f4>  // b.hs, b.nlast
  442e94:	sxtw	x10, w10
  442e98:	cmp	w11, #0x30
  442e9c:	sub	x0, x10, x22
  442ea0:	str	x0, [sp, #136]
  442ea4:	b.eq	443d40 <argp_parse@@Base+0x3f60>  // b.none
  442ea8:	mov	x2, #0x0                   	// #0
  442eac:	cbz	x0, 442ed4 <argp_parse@@Base+0x30f4>
  442eb0:	add	x2, x2, #0x1
  442eb4:	mov	x1, x23
  442eb8:	mov	w0, #0x20                  	// #32
  442ebc:	str	x2, [sp, #128]
  442ec0:	str	x2, [sp, #152]
  442ec4:	bl	404170 <fputc@plt>
  442ec8:	ldp	x2, x0, [sp, #128]
  442ecc:	cmp	x0, x2
  442ed0:	b.ne	442eb0 <argp_parse@@Base+0x30d0>  // b.any
  442ed4:	ldr	w0, [sp, #144]
  442ed8:	cbnz	w0, 443d04 <argp_parse@@Base+0x3f24>
  442edc:	cbz	w26, 443cec <argp_parse@@Base+0x3f0c>
  442ee0:	cbz	x22, 442f14 <argp_parse@@Base+0x3134>
  442ee4:	bl	404540 <__ctype_toupper_loc@plt>
  442ee8:	mov	x22, x0
  442eec:	add	x1, sp, #0xf0
  442ef0:	add	x28, x1, x28
  442ef4:	add	x26, x1, #0x1
  442ef8:	ldrb	w3, [x26], #1
  442efc:	mov	x1, x23
  442f00:	ldr	x2, [x22]
  442f04:	ldr	w0, [x2, x3, lsl #2]
  442f08:	bl	404170 <fputc@plt>
  442f0c:	cmp	x26, x28
  442f10:	b.ne	442ef8 <argp_parse@@Base+0x3118>  // b.any
  442f14:	ldr	x0, [sp, #160]
  442f18:	add	x24, x24, x0
  442f1c:	b	442bb0 <argp_parse@@Base+0x2dd0>
  442f20:	cmp	w6, #0x45
  442f24:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  442f28:	ldp	w4, w1, [x19, #20]
  442f2c:	mov	w0, #0x2493                	// #9363
  442f30:	ldr	w5, [x19, #28]
  442f34:	movk	w0, #0x9249, lsl #16
  442f38:	cmp	w4, #0x0
  442f3c:	mov	w13, #0xffffff9c            	// #-100
  442f40:	sub	w12, w5, w1
  442f44:	mov	w3, #0x12c                 	// #300
  442f48:	add	w12, w12, #0x17e
  442f4c:	csel	w3, w3, w13, lt  // lt = tstop
  442f50:	add	w3, w4, w3
  442f54:	smull	x0, w12, w0
  442f58:	lsr	x0, x0, #32
  442f5c:	add	w0, w12, w0
  442f60:	asr	w0, w0, #2
  442f64:	sub	w0, w0, w12, asr #31
  442f68:	lsl	w13, w0, #3
  442f6c:	sub	w0, w13, w0
  442f70:	sub	w0, w12, w0
  442f74:	sub	w0, w5, w0
  442f78:	adds	w0, w0, #0x3
  442f7c:	b.mi	443ff0 <argp_parse@@Base+0x4210>  // b.first
  442f80:	tst	x3, #0x3
  442f84:	mov	w12, #0x16d                 	// #365
  442f88:	b.ne	442fd0 <argp_parse@@Base+0x31f0>  // b.any
  442f8c:	mov	w14, #0x5c29                	// #23593
  442f90:	mov	w12, #0xb850                	// #47184
  442f94:	movk	w14, #0xc28f, lsl #16
  442f98:	movk	w12, #0x51e, lsl #16
  442f9c:	mov	w13, #0x5c28                	// #23592
  442fa0:	madd	w3, w3, w14, w12
  442fa4:	movk	w13, #0x28f, lsl #16
  442fa8:	mov	w12, #0x16e                 	// #366
  442fac:	ror	w14, w3, #2
  442fb0:	cmp	w14, w13
  442fb4:	b.hi	442fd0 <argp_parse@@Base+0x31f0>  // b.pmore
  442fb8:	mov	w12, #0xd70a                	// #55050
  442fbc:	ror	w3, w3, #4
  442fc0:	movk	w12, #0xa3, lsl #16
  442fc4:	cmp	w3, w12
  442fc8:	cset	w12, ls  // ls = plast
  442fcc:	add	w12, w12, #0x16d
  442fd0:	sub	w5, w5, w12
  442fd4:	mov	w3, #0x2493                	// #9363
  442fd8:	sub	w1, w5, w1
  442fdc:	movk	w3, #0x9249, lsl #16
  442fe0:	add	w1, w1, #0x17e
  442fe4:	smull	x3, w1, w3
  442fe8:	lsr	x3, x3, #32
  442fec:	add	w3, w1, w3
  442ff0:	asr	w3, w3, #2
  442ff4:	sub	w3, w3, w1, asr #31
  442ff8:	lsl	w12, w3, #3
  442ffc:	sub	w3, w12, w3
  443000:	sub	w1, w1, w3
  443004:	sub	w1, w5, w1
  443008:	adds	w1, w1, #0x3
  44300c:	b.mi	4441c0 <argp_parse@@Base+0x43e0>  // b.first
  443010:	mov	w13, #0x1                   	// #1
  443014:	mov	w3, w13
  443018:	mov	w0, w1
  44301c:	mov	w1, #0xfffff893            	// #-1901
  443020:	cmp	w2, #0x47
  443024:	b.eq	444108 <argp_parse@@Base+0x4328>  // b.none
  443028:	cmp	w2, #0x67
  44302c:	b.ne	4440e0 <argp_parse@@Base+0x4300>  // b.any
  443030:	mov	w5, #0x851f                	// #34079
  443034:	mov	w14, #0x64                  	// #100
  443038:	movk	w5, #0x51eb, lsl #16
  44303c:	mov	w13, #0x2                   	// #2
  443040:	smull	x0, w4, w5
  443044:	asr	x0, x0, #37
  443048:	sub	w0, w0, w4, asr #31
  44304c:	msub	w0, w0, w14, w4
  443050:	add	w0, w0, w3
  443054:	smull	x12, w0, w5
  443058:	asr	x12, x12, #37
  44305c:	sub	w12, w12, w0, asr #31
  443060:	msub	w12, w12, w14, w0
  443064:	tbz	w12, #31, 443078 <argp_parse@@Base+0x3298>
  443068:	neg	w0, w12
  44306c:	cmp	w4, w1
  443070:	add	w12, w12, w14
  443074:	csel	w12, w12, w0, ge  // ge = tcont
  443078:	mov	w3, w12
  44307c:	lsr	w12, w12, #31
  443080:	mvn	w0, w3
  443084:	mov	w5, #0x0                   	// #0
  443088:	mov	w14, #0x0                   	// #0
  44308c:	lsr	w0, w0, #31
  443090:	cmp	w6, #0x4f
  443094:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  443098:	b.eq	443538 <argp_parse@@Base+0x3758>  // b.none
  44309c:	mov	w0, #0x2520                	// #9504
  4430a0:	str	wzr, [sp, #144]
  4430a4:	strh	w0, [sp, #216]
  4430a8:	mov	x27, x22
  4430ac:	add	x1, sp, #0xdb
  4430b0:	strb	w6, [sp, #218]
  4430b4:	mov	w6, w13
  4430b8:	b	442e20 <argp_parse@@Base+0x3040>
  4430bc:	cbnz	w6, 442c68 <argp_parse@@Base+0x2e88>
  4430c0:	cmp	w27, #0x0
  4430c4:	mov	w0, #0x2520                	// #9504
  4430c8:	csel	w26, w26, w27, eq  // eq = none
  4430cc:	mov	w6, #0x0                   	// #0
  4430d0:	mov	x27, x22
  4430d4:	str	wzr, [sp, #144]
  4430d8:	strh	w0, [sp, #216]
  4430dc:	ldr	x1, [sp, #96]
  4430e0:	b	442e20 <argp_parse@@Base+0x3040>
  4430e4:	cmp	w27, #0x0
  4430e8:	csel	w26, w26, w27, eq  // eq = none
  4430ec:	cmp	w6, #0x45
  4430f0:	b.ne	442e08 <argp_parse@@Base+0x3028>  // b.any
  4430f4:	b	442c68 <argp_parse@@Base+0x2e88>
  4430f8:	cmp	w10, #0x0
  4430fc:	ldurb	w0, [x22, #-1]
  443100:	csel	w1, w10, wzr, ge  // ge = tcont
  443104:	sub	x27, x22, #0x1
  443108:	cmp	w0, #0x25
  44310c:	mvn	x2, x24
  443110:	sxtw	x1, w1
  443114:	b.ne	4440d8 <argp_parse@@Base+0x42f8>  // b.any
  443118:	cmp	x1, #0x0
  44311c:	mov	x0, #0x1                   	// #1
  443120:	csel	x3, x1, x0, ne  // ne = any
  443124:	mov	x28, x27
  443128:	stp	x3, x0, [sp, #136]
  44312c:	mov	x0, x3
  443130:	b	442cac <argp_parse@@Base+0x2ecc>
  443134:	cmp	w10, #0x0
  443138:	mov	x3, #0x1                   	// #1
  44313c:	csel	w1, w10, wzr, ge  // ge = tcont
  443140:	mvn	x2, x24
  443144:	sxtw	x1, w1
  443148:	cmp	x1, #0x0
  44314c:	csel	x4, x1, x3, ne  // ne = any
  443150:	str	x4, [sp, #136]
  443154:	cbnz	w6, 444238 <argp_parse@@Base+0x4458>
  443158:	cmp	x2, x4
  44315c:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443160:	cbz	x23, 44328c <argp_parse@@Base+0x34ac>
  443164:	cmp	w10, #0x1
  443168:	b.le	44319c <argp_parse@@Base+0x33bc>
  44316c:	sxtw	x10, w10
  443170:	cmp	w11, #0x30
  443174:	sub	x26, x10, #0x1
  443178:	mov	x28, #0x0                   	// #0
  44317c:	b.eq	4431a8 <argp_parse@@Base+0x33c8>  // b.none
  443180:	add	x28, x28, #0x1
  443184:	mov	x1, x23
  443188:	mov	w0, #0x20                  	// #32
  44318c:	bl	404170 <fputc@plt>
  443190:	cmp	x26, x28
  443194:	b.ne	443180 <argp_parse@@Base+0x33a0>  // b.any
  443198:	ldrb	w0, [x22]
  44319c:	mov	x1, x23
  4431a0:	bl	404170 <fputc@plt>
  4431a4:	b	44328c <argp_parse@@Base+0x34ac>
  4431a8:	add	x28, x28, #0x1
  4431ac:	mov	x1, x23
  4431b0:	mov	w0, #0x30                  	// #48
  4431b4:	bl	404170 <fputc@plt>
  4431b8:	cmp	x26, x28
  4431bc:	b.ne	4431a8 <argp_parse@@Base+0x33c8>  // b.any
  4431c0:	b	443198 <argp_parse@@Base+0x33b8>
  4431c4:	cbnz	w6, 442c68 <argp_parse@@Base+0x2e88>
  4431c8:	adrp	x28, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4431cc:	add	x28, x28, #0x480
  4431d0:	ldr	w6, [sp, #116]
  4431d4:	mov	w3, w26
  4431d8:	ldr	x5, [sp, #104]
  4431dc:	mov	x2, x19
  4431e0:	ldr	x4, [sp, #120]
  4431e4:	mov	x1, x28
  4431e8:	mov	x0, #0x0                   	// #0
  4431ec:	str	w10, [sp, #128]
  4431f0:	str	w11, [sp, #144]
  4431f4:	bl	442b10 <argp_parse@@Base+0x2d30>
  4431f8:	ldr	w10, [sp, #128]
  4431fc:	mvn	x2, x24
  443200:	cmp	w10, #0x0
  443204:	csel	w1, w10, wzr, ge  // ge = tcont
  443208:	sxtw	x1, w1
  44320c:	cmp	x0, x1
  443210:	csel	x3, x0, x1, cs  // cs = hs, nlast
  443214:	str	x3, [sp, #136]
  443218:	cmp	x2, x3
  44321c:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443220:	cbz	x23, 44328c <argp_parse@@Base+0x34ac>
  443224:	ldr	w11, [sp, #144]
  443228:	cmp	x0, x1
  44322c:	b.cs	44326c <argp_parse@@Base+0x348c>  // b.hs, b.nlast
  443230:	sxtw	x10, w10
  443234:	cmp	w11, #0x30
  443238:	sub	x0, x10, x0
  44323c:	str	x0, [sp, #128]
  443240:	b.eq	443fbc <argp_parse@@Base+0x41dc>  // b.none
  443244:	mov	x27, #0x0                   	// #0
  443248:	cbz	x0, 44326c <argp_parse@@Base+0x348c>
  44324c:	nop
  443250:	mov	x1, x23
  443254:	mov	w0, #0x20                  	// #32
  443258:	bl	404170 <fputc@plt>
  44325c:	add	x27, x27, #0x1
  443260:	ldr	x0, [sp, #128]
  443264:	cmp	x0, x27
  443268:	b.ne	443250 <argp_parse@@Base+0x3470>  // b.any
  44326c:	ldr	w6, [sp, #116]
  443270:	mov	w3, w26
  443274:	ldr	x5, [sp, #104]
  443278:	mov	x1, x28
  44327c:	ldr	x4, [sp, #120]
  443280:	mov	x2, x19
  443284:	mov	x0, x23
  443288:	bl	442b10 <argp_parse@@Base+0x2d30>
  44328c:	ldr	x0, [sp, #136]
  443290:	mov	x27, x22
  443294:	add	x24, x24, x0
  443298:	b	442bb0 <argp_parse@@Base+0x2dd0>
  44329c:	cmp	w6, #0x45
  4432a0:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  4432a4:	mov	w12, w20
  4432a8:	mov	w13, #0x2                   	// #2
  4432ac:	b	443078 <argp_parse@@Base+0x3298>
  4432b0:	cmp	w6, #0x45
  4432b4:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  4432b8:	ldr	w12, [x19, #8]
  4432bc:	mov	w13, #0x2                   	// #2
  4432c0:	b	443078 <argp_parse@@Base+0x3298>
  4432c4:	cbnz	w6, 442c68 <argp_parse@@Base+0x2e88>
  4432c8:	adrp	x28, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4432cc:	add	x28, x28, #0x468
  4432d0:	b	4431d0 <argp_parse@@Base+0x33f0>
  4432d4:	cmp	w6, #0x45
  4432d8:	b.eq	443f24 <argp_parse@@Base+0x4144>  // b.none
  4432dc:	ldr	w4, [x19, #20]
  4432e0:	mov	w1, #0x851f                	// #34079
  4432e4:	movk	w1, #0x51eb, lsl #16
  4432e8:	mov	w3, #0x64                  	// #100
  4432ec:	mov	w5, #0x0                   	// #0
  4432f0:	mov	w14, #0x0                   	// #0
  4432f4:	mov	w13, #0x2                   	// #2
  4432f8:	smull	x1, w4, w1
  4432fc:	asr	x1, x1, #37
  443300:	sub	w1, w1, w4, asr #31
  443304:	add	w0, w1, #0x13
  443308:	msub	w1, w1, w3, w4
  44330c:	cmp	w1, #0x0
  443310:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  443314:	cset	w3, gt
  443318:	cmn	w4, #0x76c
  44331c:	sub	w3, w0, w3
  443320:	cset	w12, lt  // lt = tstop
  443324:	cset	w0, ge  // ge = tcont
  443328:	b	443090 <argp_parse@@Base+0x32b0>
  44332c:	cmp	w6, #0x45
  443330:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443334:	cmp	w27, #0x0
  443338:	str	wzr, [sp, #144]
  44333c:	csel	w26, w26, w27, eq  // eq = none
  443340:	b	442e0c <argp_parse@@Base+0x302c>
  443344:	cmp	w6, #0x45
  443348:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  44334c:	ldr	w12, [x19, #12]
  443350:	cmp	w11, #0x30
  443354:	mov	w0, #0x2d                  	// #45
  443358:	ccmp	w11, w0, #0x4, ne  // ne = any
  44335c:	mov	w13, #0x2                   	// #2
  443360:	mov	w0, #0x5f                  	// #95
  443364:	csel	w11, w11, w0, eq  // eq = none
  443368:	b	443078 <argp_parse@@Base+0x3298>
  44336c:	cmp	w6, #0x45
  443370:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443374:	ldr	w12, [x19, #12]
  443378:	mov	w13, #0x2                   	// #2
  44337c:	b	443078 <argp_parse@@Base+0x3298>
  443380:	cmp	w6, #0x45
  443384:	b.eq	443f24 <argp_parse@@Base+0x4144>  // b.none
  443388:	ldr	w0, [x19, #20]
  44338c:	mov	w12, #0x851f                	// #34079
  443390:	movk	w12, #0x51eb, lsl #16
  443394:	mov	w1, #0x64                  	// #100
  443398:	mov	w13, #0x2                   	// #2
  44339c:	smull	x12, w0, w12
  4433a0:	asr	x12, x12, #37
  4433a4:	sub	w12, w12, w0, asr #31
  4433a8:	msub	w12, w12, w1, w0
  4433ac:	tbz	w12, #31, 443078 <argp_parse@@Base+0x3298>
  4433b0:	neg	w1, w12
  4433b4:	cmn	w0, #0x76d
  4433b8:	add	w12, w12, #0x64
  4433bc:	csel	w12, w12, w1, gt
  4433c0:	b	443078 <argp_parse@@Base+0x3298>
  4433c4:	cmp	w27, #0x0
  4433c8:	mov	x0, x21
  4433cc:	csel	w26, w26, wzr, eq  // eq = none
  4433d0:	str	w10, [sp, #128]
  4433d4:	str	w11, [sp, #136]
  4433d8:	bl	403ff0 <strlen@plt>
  4433dc:	mov	x28, x0
  4433e0:	ldr	w10, [sp, #128]
  4433e4:	mvn	x1, x24
  4433e8:	cmp	w10, #0x0
  4433ec:	csel	w0, w10, wzr, ge  // ge = tcont
  4433f0:	sxtw	x0, w0
  4433f4:	cmp	x28, x0
  4433f8:	csel	x2, x28, x0, cs  // cs = hs, nlast
  4433fc:	str	x2, [sp, #144]
  443400:	cmp	x1, x2
  443404:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443408:	cbz	x23, 443490 <argp_parse@@Base+0x36b0>
  44340c:	ldr	w11, [sp, #136]
  443410:	cmp	x28, x0
  443414:	b.cs	443458 <argp_parse@@Base+0x3678>  // b.hs, b.nlast
  443418:	sxtw	x10, w10
  44341c:	cmp	w11, #0x30
  443420:	sub	x0, x10, x28
  443424:	str	x0, [sp, #136]
  443428:	b.eq	444294 <argp_parse@@Base+0x44b4>  // b.none
  44342c:	mov	x2, #0x0                   	// #0
  443430:	cbz	x0, 443458 <argp_parse@@Base+0x3678>
  443434:	add	x2, x2, #0x1
  443438:	mov	x1, x23
  44343c:	mov	w0, #0x20                  	// #32
  443440:	str	x2, [sp, #128]
  443444:	str	x2, [sp, #152]
  443448:	bl	404170 <fputc@plt>
  44344c:	ldp	x2, x0, [sp, #128]
  443450:	cmp	x0, x2
  443454:	b.ne	443434 <argp_parse@@Base+0x3654>  // b.any
  443458:	cbnz	w27, 4441e8 <argp_parse@@Base+0x4408>
  44345c:	cbz	w26, 4441d0 <argp_parse@@Base+0x43f0>
  443460:	cbz	x28, 443490 <argp_parse@@Base+0x36b0>
  443464:	add	x27, x21, x28
  443468:	bl	404540 <__ctype_toupper_loc@plt>
  44346c:	mov	x26, x21
  443470:	mov	x28, x0
  443474:	ldrb	w2, [x26], #1
  443478:	mov	x1, x23
  44347c:	ldr	x0, [x28]
  443480:	ldr	w0, [x0, x2, lsl #2]
  443484:	bl	404170 <fputc@plt>
  443488:	cmp	x26, x27
  44348c:	b.ne	443474 <argp_parse@@Base+0x3694>  // b.any
  443490:	ldr	x0, [sp, #144]
  443494:	mov	x27, x22
  443498:	add	x24, x24, x0
  44349c:	b	442bb0 <argp_parse@@Base+0x2dd0>
  4434a0:	cmp	w6, #0x45
  4434a4:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  4434a8:	ldp	w3, w12, [x19, #24]
  4434ac:	mov	w0, #0x2493                	// #9363
  4434b0:	movk	w0, #0x9249, lsl #16
  4434b4:	mov	w13, #0x2                   	// #2
  4434b8:	add	w3, w3, #0x6
  4434bc:	smull	x1, w3, w0
  4434c0:	lsr	x1, x1, #32
  4434c4:	add	w1, w3, w1
  4434c8:	asr	w1, w1, #2
  4434cc:	sub	w1, w1, w3, asr #31
  4434d0:	lsl	w4, w1, #3
  4434d4:	sub	w1, w4, w1
  4434d8:	sub	w3, w3, w1
  4434dc:	sub	w3, w12, w3
  4434e0:	add	w12, w3, #0x7
  4434e4:	smull	x0, w12, w0
  4434e8:	lsr	x0, x0, #32
  4434ec:	add	w0, w12, w0
  4434f0:	asr	w0, w0, #2
  4434f4:	sub	w12, w0, w12, asr #31
  4434f8:	b	443078 <argp_parse@@Base+0x3298>
  4434fc:	cmp	w6, #0x45
  443500:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443504:	ldr	w12, [x19]
  443508:	mov	w13, #0x2                   	// #2
  44350c:	b	443078 <argp_parse@@Base+0x3298>
  443510:	cmp	w6, #0x45
  443514:	b.eq	443f24 <argp_parse@@Base+0x4144>  // b.none
  443518:	cmp	w6, #0x4f
  44351c:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443520:	ldr	w0, [x19, #20]
  443524:	mov	w5, #0x0                   	// #0
  443528:	mov	w14, #0x0                   	// #0
  44352c:	mov	w13, #0x4                   	// #4
  443530:	adds	w3, w0, #0x76c
  443534:	cset	w12, lt  // lt = tstop
  443538:	cmp	w12, #0x0
  44353c:	cneg	w3, w3, ne  // ne = any
  443540:	add	x4, sp, #0xef
  443544:	mov	w6, #0x3a                  	// #58
  443548:	b	443584 <argp_parse@@Base+0x37a4>
  44354c:	umull	x1, w3, w25
  443550:	asr	w5, w5, #1
  443554:	sturb	w6, [x4, #-1]
  443558:	cmp	w5, #0x0
  44355c:	ccmp	w3, #0x9, #0x2, eq  // eq = none
  443560:	sub	x28, x4, #0x2
  443564:	lsr	x1, x1, #35
  443568:	add	w0, w1, w1, lsl #2
  44356c:	sub	w0, w3, w0, lsl #1
  443570:	add	w0, w0, #0x30
  443574:	sturb	w0, [x4, #-2]
  443578:	b.ls	4435b8 <argp_parse@@Base+0x37d8>  // b.plast
  44357c:	mov	x4, x28
  443580:	mov	w3, w1
  443584:	sub	x28, x4, #0x1
  443588:	tbnz	w5, #0, 44354c <argp_parse@@Base+0x376c>
  44358c:	umull	x0, w3, w25
  443590:	asr	w5, w5, #1
  443594:	cmp	w5, #0x0
  443598:	ccmp	w3, #0x9, #0x2, eq  // eq = none
  44359c:	lsr	x0, x0, #35
  4435a0:	mov	w1, w0
  4435a4:	add	w0, w0, w0, lsl #2
  4435a8:	sub	w0, w3, w0, lsl #1
  4435ac:	add	w0, w0, #0x30
  4435b0:	sturb	w0, [x4, #-1]
  4435b4:	b.hi	44357c <argp_parse@@Base+0x379c>  // b.pmore
  4435b8:	cmp	w13, w10
  4435bc:	csel	w0, w13, w10, ge  // ge = tcont
  4435c0:	str	w0, [sp, #128]
  4435c4:	cbnz	w12, 443c30 <argp_parse@@Base+0x3e50>
  4435c8:	cbz	w14, 443860 <argp_parse@@Base+0x3a80>
  4435cc:	cmp	w11, #0x2d
  4435d0:	b.eq	443f58 <argp_parse@@Base+0x4178>  // b.none
  4435d4:	mov	w0, #0x2b                  	// #43
  4435d8:	mov	w5, w0
  4435dc:	str	w0, [sp, #176]
  4435e0:	ldr	w1, [sp, #128]
  4435e4:	add	x0, sp, #0xef
  4435e8:	sub	w3, w1, #0x1
  4435ec:	sub	x1, x0, x28
  4435f0:	str	x1, [sp, #136]
  4435f4:	sub	w27, w3, w1
  4435f8:	mvn	x0, x24
  4435fc:	cmp	w27, #0x0
  443600:	b.le	443d70 <argp_parse@@Base+0x3f90>
  443604:	cmp	w11, #0x5f
  443608:	b.eq	443e28 <argp_parse@@Base+0x4048>  // b.none
  44360c:	ldr	w2, [sp, #128]
  443610:	cmp	x0, w2, sxtw
  443614:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443618:	cbz	w5, 4436b4 <argp_parse@@Base+0x38d4>
  44361c:	cmp	w10, #0x0
  443620:	csel	w1, w10, wzr, ge  // ge = tcont
  443624:	sxtw	x1, w1
  443628:	cmp	x1, #0x0
  44362c:	csinc	x3, x1, xzr, ne  // ne = any
  443630:	str	x3, [sp, #184]
  443634:	cmp	x3, x0
  443638:	b.cs	442bc8 <argp_parse@@Base+0x2de8>  // b.hs, b.nlast
  44363c:	cbz	x23, 4436ac <argp_parse@@Base+0x38cc>
  443640:	cmp	w2, #0x0
  443644:	ccmp	x1, #0x1, #0x0, eq  // eq = none
  443648:	b.ls	443698 <argp_parse@@Base+0x38b8>  // b.plast
  44364c:	sxtw	x10, w10
  443650:	cmp	w11, #0x30
  443654:	sub	x0, x10, #0x1
  443658:	str	x0, [sp, #160]
  44365c:	b.eq	4442c8 <argp_parse@@Base+0x44e8>  // b.none
  443660:	mov	x4, #0x0                   	// #0
  443664:	cbz	x0, 443698 <argp_parse@@Base+0x38b8>
  443668:	add	x4, x4, #0x1
  44366c:	mov	x1, x23
  443670:	mov	w0, #0x20                  	// #32
  443674:	str	x4, [sp, #144]
  443678:	str	w11, [sp, #152]
  44367c:	str	x4, [sp, #168]
  443680:	bl	404170 <fputc@plt>
  443684:	ldr	x4, [sp, #144]
  443688:	ldr	x0, [sp, #160]
  44368c:	ldr	w11, [sp, #152]
  443690:	cmp	x0, x4
  443694:	b.ne	443668 <argp_parse@@Base+0x3888>  // b.any
  443698:	ldr	w0, [sp, #176]
  44369c:	mov	x1, x23
  4436a0:	str	w11, [sp, #144]
  4436a4:	bl	404170 <fputc@plt>
  4436a8:	ldr	w11, [sp, #144]
  4436ac:	ldr	x0, [sp, #184]
  4436b0:	add	x24, x24, x0
  4436b4:	sxtw	x0, w27
  4436b8:	str	x0, [sp, #152]
  4436bc:	cbnz	x23, 443eb4 <argp_parse@@Base+0x40d4>
  4436c0:	ldr	x0, [sp, #152]
  4436c4:	mov	x27, x22
  4436c8:	mov	x3, #0x0                   	// #0
  4436cc:	mov	w10, #0x0                   	// #0
  4436d0:	add	x24, x24, x0
  4436d4:	mvn	x0, x24
  4436d8:	b	44389c <argp_parse@@Base+0x3abc>
  4436dc:	ldr	w0, [x19, #16]
  4436e0:	cmp	w6, #0x4f
  4436e4:	mov	w13, #0x1                   	// #1
  4436e8:	b.eq	44309c <argp_parse@@Base+0x32bc>  // b.none
  4436ec:	mov	w1, #0xb                   	// #11
  4436f0:	mov	w14, #0x0                   	// #0
  4436f4:	mov	w12, #0x0                   	// #0
  4436f8:	mov	w5, #0x0                   	// #0
  4436fc:	mul	w0, w0, w1
  443700:	asr	w0, w0, #5
  443704:	add	w3, w0, w13
  443708:	b	443540 <argp_parse@@Base+0x3760>
  44370c:	cmp	w6, #0x45
  443710:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443714:	ldr	w12, [x19, #24]
  443718:	mov	w13, #0x1                   	// #1
  44371c:	b	443078 <argp_parse@@Base+0x3298>
  443720:	ldr	w1, [x19, #24]
  443724:	mov	w0, #0x2493                	// #9363
  443728:	movk	w0, #0x9249, lsl #16
  44372c:	mov	w13, #0x1                   	// #1
  443730:	add	w1, w1, #0x6
  443734:	smull	x0, w1, w0
  443738:	lsr	x0, x0, #32
  44373c:	add	w0, w1, w0
  443740:	asr	w0, w0, #2
  443744:	sub	w0, w0, w1, asr #31
  443748:	lsl	w12, w0, #3
  44374c:	sub	w12, w12, w0
  443750:	sub	w12, w1, w12
  443754:	add	w12, w12, w13
  443758:	b	443078 <argp_parse@@Base+0x3298>
  44375c:	cmp	w10, #0x0
  443760:	mvn	x0, x24
  443764:	csel	w26, w10, wzr, ge  // ge = tcont
  443768:	sxtw	x26, w26
  44376c:	cmp	x26, #0x0
  443770:	csinc	x26, x26, xzr, ne  // ne = any
  443774:	cmp	x0, x26
  443778:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  44377c:	cbz	x23, 443a50 <argp_parse@@Base+0x3c70>
  443780:	cmp	w10, #0x1
  443784:	b.le	4437b4 <argp_parse@@Base+0x39d4>
  443788:	sxtw	x10, w10
  44378c:	cmp	w11, #0x30
  443790:	sub	x28, x10, #0x1
  443794:	mov	x27, #0x0                   	// #0
  443798:	b.eq	4437c4 <argp_parse@@Base+0x39e4>  // b.none
  44379c:	add	x27, x27, #0x1
  4437a0:	mov	x1, x23
  4437a4:	mov	w0, #0x20                  	// #32
  4437a8:	bl	404170 <fputc@plt>
  4437ac:	cmp	x28, x27
  4437b0:	b.ne	44379c <argp_parse@@Base+0x39bc>  // b.any
  4437b4:	mov	x1, x23
  4437b8:	mov	w0, #0x9                   	// #9
  4437bc:	bl	404170 <fputc@plt>
  4437c0:	b	443a50 <argp_parse@@Base+0x3c70>
  4437c4:	add	x27, x27, #0x1
  4437c8:	mov	x1, x23
  4437cc:	mov	w0, #0x30                  	// #48
  4437d0:	bl	404170 <fputc@plt>
  4437d4:	cmp	x28, x27
  4437d8:	b.ne	4437c4 <argp_parse@@Base+0x39e4>  // b.any
  4437dc:	b	4437b4 <argp_parse@@Base+0x39d4>
  4437e0:	ldp	x4, x5, [x19]
  4437e4:	stp	x4, x5, [sp, #240]
  4437e8:	add	x1, sp, #0xf0
  4437ec:	ldp	x4, x5, [x19, #16]
  4437f0:	stp	x4, x5, [sp, #256]
  4437f4:	add	x28, sp, #0xef
  4437f8:	ldp	x4, x5, [x19, #32]
  4437fc:	str	w11, [sp, #128]
  443800:	ldr	x2, [x19, #48]
  443804:	str	w10, [sp, #136]
  443808:	ldr	x0, [sp, #104]
  44380c:	stp	x4, x5, [sp, #272]
  443810:	str	x2, [sp, #288]
  443814:	bl	461f20 <_obstack_memory_used@@Base+0x10b10>
  443818:	mov	x1, x0
  44381c:	ldr	w11, [sp, #128]
  443820:	ldr	w10, [sp, #136]
  443824:	tbnz	x0, #63, 443bec <argp_parse@@Base+0x3e0c>
  443828:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  44382c:	movk	x4, #0xcccd
  443830:	umulh	x3, x1, x4
  443834:	lsr	x0, x3, #3
  443838:	cmp	xzr, x3, lsr #3
  44383c:	add	x0, x0, x0, lsl #2
  443840:	sub	x0, x1, x0, lsl #1
  443844:	lsr	x1, x3, #3
  443848:	add	w0, w0, #0x30
  44384c:	strb	w0, [x28, #-1]!
  443850:	b.ne	443830 <argp_parse@@Base+0x3a50>  // b.any
  443854:	cmp	w10, #0x0
  443858:	csinc	w0, w10, wzr, gt
  44385c:	str	w0, [sp, #128]
  443860:	add	x0, sp, #0xef
  443864:	cmp	w11, #0x2d
  443868:	sub	x0, x0, x28
  44386c:	str	x0, [sp, #136]
  443870:	mvn	x0, x24
  443874:	b.eq	44388c <argp_parse@@Base+0x3aac>  // b.none
  443878:	ldr	w1, [sp, #128]
  44387c:	ldr	w2, [sp, #136]
  443880:	sub	w27, w1, w2
  443884:	cmp	w27, #0x0
  443888:	b.gt	4441b4 <argp_parse@@Base+0x43d4>
  44388c:	cmp	w10, #0x0
  443890:	mov	x27, x22
  443894:	csel	w3, w10, wzr, ge  // ge = tcont
  443898:	sxtw	x3, w3
  44389c:	ldr	x1, [sp, #136]
  4438a0:	cmp	x1, x3
  4438a4:	csel	x2, x1, x3, cs  // cs = hs, nlast
  4438a8:	str	x2, [sp, #144]
  4438ac:	cmp	x2, x0
  4438b0:	b.cs	442bc8 <argp_parse@@Base+0x2de8>  // b.hs, b.nlast
  4438b4:	cbz	x23, 44393c <argp_parse@@Base+0x3b5c>
  4438b8:	ldr	w0, [sp, #128]
  4438bc:	cmp	w0, #0x0
  4438c0:	ccmp	x1, x3, #0x2, eq  // eq = none
  4438c4:	b.cs	443904 <argp_parse@@Base+0x3b24>  // b.hs, b.nlast
  4438c8:	sxtw	x10, w10
  4438cc:	cmp	w11, #0x30
  4438d0:	sub	x0, x10, x1
  4438d4:	str	x0, [sp, #128]
  4438d8:	b.eq	443ee0 <argp_parse@@Base+0x4100>  // b.none
  4438dc:	mov	x22, #0x0                   	// #0
  4438e0:	cbz	x0, 443904 <argp_parse@@Base+0x3b24>
  4438e4:	nop
  4438e8:	mov	x1, x23
  4438ec:	mov	w0, #0x20                  	// #32
  4438f0:	bl	404170 <fputc@plt>
  4438f4:	add	x22, x22, #0x1
  4438f8:	ldr	x0, [sp, #128]
  4438fc:	cmp	x0, x22
  443900:	b.ne	4438e8 <argp_parse@@Base+0x3b08>  // b.any
  443904:	cbz	w26, 443cb4 <argp_parse@@Base+0x3ed4>
  443908:	ldr	x22, [sp, #136]
  44390c:	cbz	x22, 44393c <argp_parse@@Base+0x3b5c>
  443910:	add	x26, x28, x22
  443914:	bl	404540 <__ctype_toupper_loc@plt>
  443918:	mov	x22, x0
  44391c:	nop
  443920:	ldrb	w5, [x28], #1
  443924:	mov	x1, x23
  443928:	ldr	x3, [x22]
  44392c:	ldr	w0, [x3, x5, lsl #2]
  443930:	bl	404170 <fputc@plt>
  443934:	cmp	x28, x26
  443938:	b.ne	443920 <argp_parse@@Base+0x3b40>  // b.any
  44393c:	ldr	x0, [sp, #144]
  443940:	add	x24, x24, x0
  443944:	b	442bb0 <argp_parse@@Base+0x2dd0>
  443948:	cmp	w6, #0x45
  44394c:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443950:	cmn	w10, #0x1
  443954:	b.ne	44409c <argp_parse@@Base+0x42bc>  // b.any
  443958:	mov	w10, #0x9                   	// #9
  44395c:	ldr	w12, [sp, #116]
  443960:	mov	w13, w10
  443964:	b	443078 <argp_parse@@Base+0x3298>
  443968:	cmp	w6, #0x45
  44396c:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443970:	ldr	w12, [x19, #4]
  443974:	mov	w13, #0x2                   	// #2
  443978:	b	443078 <argp_parse@@Base+0x3298>
  44397c:	cmp	w6, #0x45
  443980:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443984:	ldr	w0, [x19, #16]
  443988:	mov	w5, #0x0                   	// #0
  44398c:	mov	w14, #0x0                   	// #0
  443990:	mov	w13, #0x2                   	// #2
  443994:	adds	w3, w0, #0x1
  443998:	cset	w12, lt  // lt = tstop
  44399c:	cset	w0, ge  // ge = tcont
  4439a0:	b	443090 <argp_parse@@Base+0x32b0>
  4439a4:	cmp	w6, #0x45
  4439a8:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  4439ac:	mov	w12, w20
  4439b0:	b	443350 <argp_parse@@Base+0x3570>
  4439b4:	cmp	w6, #0x45
  4439b8:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  4439bc:	ldr	w12, [x19, #8]
  4439c0:	b	443350 <argp_parse@@Base+0x3570>
  4439c4:	cmp	w6, #0x45
  4439c8:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  4439cc:	ldr	w0, [x19, #28]
  4439d0:	mov	w5, #0x0                   	// #0
  4439d4:	mov	w14, #0x0                   	// #0
  4439d8:	mov	w13, #0x3                   	// #3
  4439dc:	adds	w3, w0, #0x1
  4439e0:	cset	w12, lt  // lt = tstop
  4439e4:	cset	w0, ge  // ge = tcont
  4439e8:	b	443090 <argp_parse@@Base+0x32b0>
  4439ec:	cmp	w10, #0x0
  4439f0:	mvn	x0, x24
  4439f4:	csel	w26, w10, wzr, ge  // ge = tcont
  4439f8:	sxtw	x26, w26
  4439fc:	cmp	x26, #0x0
  443a00:	csinc	x26, x26, xzr, ne  // ne = any
  443a04:	cmp	x0, x26
  443a08:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443a0c:	cbz	x23, 443a50 <argp_parse@@Base+0x3c70>
  443a10:	cmp	w10, #0x1
  443a14:	b.le	443a44 <argp_parse@@Base+0x3c64>
  443a18:	sxtw	x10, w10
  443a1c:	cmp	w11, #0x30
  443a20:	sub	x28, x10, #0x1
  443a24:	mov	x27, #0x0                   	// #0
  443a28:	b.eq	443a5c <argp_parse@@Base+0x3c7c>  // b.none
  443a2c:	add	x27, x27, #0x1
  443a30:	mov	x1, x23
  443a34:	mov	w0, #0x20                  	// #32
  443a38:	bl	404170 <fputc@plt>
  443a3c:	cmp	x28, x27
  443a40:	b.ne	443a2c <argp_parse@@Base+0x3c4c>  // b.any
  443a44:	mov	x1, x23
  443a48:	mov	w0, #0xa                   	// #10
  443a4c:	bl	404170 <fputc@plt>
  443a50:	add	x24, x24, x26
  443a54:	mov	x27, x22
  443a58:	b	442bb0 <argp_parse@@Base+0x2dd0>
  443a5c:	add	x27, x27, #0x1
  443a60:	mov	x1, x23
  443a64:	mov	w0, #0x30                  	// #48
  443a68:	bl	404170 <fputc@plt>
  443a6c:	cmp	x28, x27
  443a70:	b.ne	443a5c <argp_parse@@Base+0x3c7c>  // b.any
  443a74:	b	443a44 <argp_parse@@Base+0x3c64>
  443a78:	cmp	w6, #0x45
  443a7c:	b.eq	442c68 <argp_parse@@Base+0x2e88>  // b.none
  443a80:	ldp	w1, w12, [x19, #24]
  443a84:	mov	w0, #0x2493                	// #9363
  443a88:	movk	w0, #0x9249, lsl #16
  443a8c:	mov	w13, #0x2                   	// #2
  443a90:	sub	w12, w12, w1
  443a94:	add	w12, w12, #0x7
  443a98:	b	4434e4 <argp_parse@@Base+0x3704>
  443a9c:	ldrb	w0, [x22, #1]
  443aa0:	add	x27, x22, #0x1
  443aa4:	mov	x13, #0x1                   	// #1
  443aa8:	cmp	w0, #0x3a
  443aac:	b.eq	443bc4 <argp_parse@@Base+0x3de4>  // b.none
  443ab0:	cmp	w0, #0x7a
  443ab4:	b.ne	442c68 <argp_parse@@Base+0x2e88>  // b.any
  443ab8:	ldr	w0, [x19, #32]
  443abc:	tbnz	w0, #31, 442bb0 <argp_parse@@Base+0x2dd0>
  443ac0:	ldr	x7, [x19, #40]
  443ac4:	cmp	w7, #0x0
  443ac8:	b.lt	444090 <argp_parse@@Base+0x42b0>  // b.tstop
  443acc:	b.ne	44412c <argp_parse@@Base+0x434c>  // b.any
  443ad0:	ldrb	w1, [x21]
  443ad4:	cmp	w1, #0x2d
  443ad8:	cset	w0, ne  // ne = any
  443adc:	cset	w12, eq  // eq = none
  443ae0:	mov	w5, #0x8889                	// #34953
  443ae4:	mov	w1, #0xb3c5                	// #46021
  443ae8:	movk	w5, #0x8888, lsl #16
  443aec:	movk	w1, #0x91a2, lsl #16
  443af0:	asr	w14, w7, #31
  443af4:	cmp	x13, #0x2
  443af8:	smull	x3, w7, w1
  443afc:	smull	x1, w7, w5
  443b00:	lsr	x3, x3, #32
  443b04:	lsr	x1, x1, #32
  443b08:	add	w3, w3, w7
  443b0c:	add	w1, w1, w7
  443b10:	asr	w3, w3, #11
  443b14:	asr	w1, w1, #5
  443b18:	sub	w3, w3, w14
  443b1c:	sub	w1, w1, w14
  443b20:	lsl	w15, w1, #4
  443b24:	smull	x5, w1, w5
  443b28:	sub	w15, w15, w1
  443b2c:	sub	w15, w7, w15, lsl #2
  443b30:	lsr	x5, x5, #32
  443b34:	add	w5, w1, w5
  443b38:	asr	w5, w5, #5
  443b3c:	sub	w5, w5, w1, asr #31
  443b40:	lsl	w7, w5, #4
  443b44:	sub	w5, w7, w5
  443b48:	sub	w5, w1, w5, lsl #2
  443b4c:	b.eq	44418c <argp_parse@@Base+0x43ac>  // b.none
  443b50:	b.hi	443f08 <argp_parse@@Base+0x4128>  // b.pmore
  443b54:	cbz	x13, 44421c <argp_parse@@Base+0x443c>
  443b58:	mov	w1, #0x64                  	// #100
  443b5c:	mov	x22, x27
  443b60:	mov	w14, #0x1                   	// #1
  443b64:	mov	w13, #0x6                   	// #6
  443b68:	madd	w3, w3, w1, w5
  443b6c:	mov	w5, #0x4                   	// #4
  443b70:	b	443090 <argp_parse@@Base+0x32b0>
  443b74:	str	wzr, [sp, #144]
  443b78:	ldr	w0, [sp, #144]
  443b7c:	cmp	w27, #0x0
  443b80:	csel	w26, w26, wzr, eq  // eq = none
  443b84:	mov	w2, #0x70                  	// #112
  443b88:	csel	w0, w0, w27, eq  // eq = none
  443b8c:	str	w0, [sp, #144]
  443b90:	b	442e0c <argp_parse@@Base+0x302c>
  443b94:	mov	x27, x22
  443b98:	mov	x13, #0x0                   	// #0
  443b9c:	b	443ab8 <argp_parse@@Base+0x3cd8>
  443ba0:	adrp	x28, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  443ba4:	add	x28, x28, #0x478
  443ba8:	b	4431d0 <argp_parse@@Base+0x33f0>
  443bac:	mov	w0, #0x1                   	// #1
  443bb0:	str	w0, [sp, #144]
  443bb4:	b	443b78 <argp_parse@@Base+0x3d98>
  443bb8:	adrp	x28, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  443bbc:	add	x28, x28, #0x458
  443bc0:	b	4431d0 <argp_parse@@Base+0x33f0>
  443bc4:	add	x13, x13, #0x1
  443bc8:	add	x27, x22, x13
  443bcc:	ldrb	w0, [x22, x13]
  443bd0:	cmp	w0, #0x3a
  443bd4:	b.ne	443ab0 <argp_parse@@Base+0x3cd0>  // b.any
  443bd8:	b	443bc4 <argp_parse@@Base+0x3de4>
  443bdc:	mov	x22, x0
  443be0:	mov	w10, #0x7fffffff            	// #2147483647
  443be4:	mov	w0, w3
  443be8:	b	442da4 <argp_parse@@Base+0x2fc4>
  443bec:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  443bf0:	mov	w5, #0x30                  	// #48
  443bf4:	movk	x6, #0x6667
  443bf8:	smulh	x3, x1, x6
  443bfc:	asr	x4, x1, #63
  443c00:	asr	x3, x3, #2
  443c04:	sub	x0, x3, x4
  443c08:	add	x0, x0, x0, lsl #2
  443c0c:	sub	x0, x1, x0, lsl #1
  443c10:	subs	x1, x3, x4
  443c14:	sub	w0, w5, w0
  443c18:	strb	w0, [x28, #-1]!
  443c1c:	b.ne	443bf8 <argp_parse@@Base+0x3e18>  // b.any
  443c20:	cmp	w10, #0x0
  443c24:	csinc	w0, w10, wzr, gt
  443c28:	str	w0, [sp, #128]
  443c2c:	nop
  443c30:	mov	w0, #0x2d                  	// #45
  443c34:	str	w0, [sp, #176]
  443c38:	cmp	w11, #0x2d
  443c3c:	mov	w5, w0
  443c40:	b.ne	4435e0 <argp_parse@@Base+0x3800>  // b.any
  443c44:	cmp	w10, #0x0
  443c48:	mvn	x0, x24
  443c4c:	csel	w3, w10, wzr, ge  // ge = tcont
  443c50:	sxtw	x3, w3
  443c54:	cmp	x3, #0x0
  443c58:	csinc	x27, x3, xzr, ne  // ne = any
  443c5c:	cmp	x0, x27
  443c60:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443c64:	cbz	x23, 443c94 <argp_parse@@Base+0x3eb4>
  443c68:	ldr	w0, [sp, #128]
  443c6c:	cmp	w0, #0x0
  443c70:	ccmp	x3, #0x1, #0x0, eq  // eq = none
  443c74:	b.hi	444138 <argp_parse@@Base+0x4358>  // b.pmore
  443c78:	mov	w0, w11
  443c7c:	mov	x1, x23
  443c80:	str	w10, [sp, #136]
  443c84:	str	x3, [sp, #144]
  443c88:	bl	404170 <fputc@plt>
  443c8c:	ldr	w10, [sp, #136]
  443c90:	ldr	x3, [sp, #144]
  443c94:	add	x24, x24, x27
  443c98:	add	x1, sp, #0xef
  443c9c:	mov	x27, x22
  443ca0:	sub	x1, x1, x28
  443ca4:	mvn	x0, x24
  443ca8:	mov	w11, #0x2d                  	// #45
  443cac:	str	x1, [sp, #136]
  443cb0:	b	44389c <argp_parse@@Base+0x3abc>
  443cb4:	ldr	x1, [sp, #136]
  443cb8:	mov	x0, x28
  443cbc:	mov	x3, x23
  443cc0:	mov	x2, #0x1                   	// #1
  443cc4:	bl	4048b0 <fwrite@plt>
  443cc8:	b	44393c <argp_parse@@Base+0x3b5c>
  443ccc:	mov	x24, #0x0                   	// #0
  443cd0:	b	442bd4 <argp_parse@@Base+0x2df4>
  443cd4:	ldr	x1, [sp, #144]
  443cd8:	mov	x0, x28
  443cdc:	mov	x3, x23
  443ce0:	mov	x2, #0x1                   	// #1
  443ce4:	bl	4048b0 <fwrite@plt>
  443ce8:	b	442d2c <argp_parse@@Base+0x2f4c>
  443cec:	mov	x1, x22
  443cf0:	add	x0, sp, #0xf1
  443cf4:	mov	x3, x23
  443cf8:	mov	x2, #0x1                   	// #1
  443cfc:	bl	4048b0 <fwrite@plt>
  443d00:	b	442f14 <argp_parse@@Base+0x3134>
  443d04:	cbz	x22, 442f14 <argp_parse@@Base+0x3134>
  443d08:	bl	4041f0 <__ctype_tolower_loc@plt>
  443d0c:	mov	x22, x0
  443d10:	add	x1, sp, #0xf0
  443d14:	add	x28, x1, x28
  443d18:	add	x26, x1, #0x1
  443d1c:	nop
  443d20:	ldrb	w3, [x26], #1
  443d24:	mov	x1, x23
  443d28:	ldr	x2, [x22]
  443d2c:	ldr	w0, [x2, x3, lsl #2]
  443d30:	bl	404170 <fputc@plt>
  443d34:	cmp	x26, x28
  443d38:	b.ne	443d20 <argp_parse@@Base+0x3f40>  // b.any
  443d3c:	b	442f14 <argp_parse@@Base+0x3134>
  443d40:	cbz	x0, 442ed4 <argp_parse@@Base+0x30f4>
  443d44:	mov	x2, #0x0                   	// #0
  443d48:	add	x2, x2, #0x1
  443d4c:	mov	x1, x23
  443d50:	mov	w0, #0x30                  	// #48
  443d54:	str	x2, [sp, #128]
  443d58:	str	x2, [sp, #152]
  443d5c:	bl	404170 <fputc@plt>
  443d60:	ldp	x2, x0, [sp, #128]
  443d64:	cmp	x0, x2
  443d68:	b.ne	443d48 <argp_parse@@Base+0x3f68>  // b.any
  443d6c:	b	442ed4 <argp_parse@@Base+0x30f4>
  443d70:	cmp	w10, #0x0
  443d74:	csel	w3, w10, wzr, ge  // ge = tcont
  443d78:	sxtw	x3, w3
  443d7c:	cmp	x3, #0x0
  443d80:	csinc	x1, x3, xzr, ne  // ne = any
  443d84:	str	x1, [sp, #184]
  443d88:	cmp	x1, x0
  443d8c:	b.cs	442bc8 <argp_parse@@Base+0x2de8>  // b.hs, b.nlast
  443d90:	cbz	x23, 443e14 <argp_parse@@Base+0x4034>
  443d94:	ldr	w0, [sp, #128]
  443d98:	cmp	w0, #0x0
  443d9c:	ccmp	x3, #0x1, #0x0, eq  // eq = none
  443da0:	b.ls	443df0 <argp_parse@@Base+0x4010>  // b.plast
  443da4:	sxtw	x0, w10
  443da8:	cmp	w11, #0x30
  443dac:	sub	x0, x0, #0x1
  443db0:	str	x0, [sp, #168]
  443db4:	b.eq	44424c <argp_parse@@Base+0x446c>  // b.none
  443db8:	mov	x27, #0x0                   	// #0
  443dbc:	cbz	x0, 443df0 <argp_parse@@Base+0x4010>
  443dc0:	mov	x1, x23
  443dc4:	mov	w0, #0x20                  	// #32
  443dc8:	str	w11, [sp, #144]
  443dcc:	add	x27, x27, #0x1
  443dd0:	str	w10, [sp, #152]
  443dd4:	str	x3, [sp, #160]
  443dd8:	bl	404170 <fputc@plt>
  443ddc:	ldp	x3, x0, [sp, #160]
  443de0:	ldr	w11, [sp, #144]
  443de4:	ldr	w10, [sp, #152]
  443de8:	cmp	x0, x27
  443dec:	b.ne	443dc0 <argp_parse@@Base+0x3fe0>  // b.any
  443df0:	ldr	w0, [sp, #176]
  443df4:	mov	x1, x23
  443df8:	str	w11, [sp, #144]
  443dfc:	str	w10, [sp, #152]
  443e00:	str	x3, [sp, #160]
  443e04:	bl	404170 <fputc@plt>
  443e08:	ldr	w11, [sp, #144]
  443e0c:	ldr	w10, [sp, #152]
  443e10:	ldr	x3, [sp, #160]
  443e14:	mov	x27, x22
  443e18:	ldr	x0, [sp, #184]
  443e1c:	add	x24, x24, x0
  443e20:	mvn	x0, x24
  443e24:	b	44389c <argp_parse@@Base+0x3abc>
  443e28:	cmp	x0, w27, sxtw
  443e2c:	sxtw	x0, w27
  443e30:	str	x0, [sp, #184]
  443e34:	b.ls	442bc8 <argp_parse@@Base+0x2de8>  // b.plast
  443e38:	cbnz	x23, 443f74 <argp_parse@@Base+0x4194>
  443e3c:	ldr	x0, [sp, #184]
  443e40:	cmp	w10, w27
  443e44:	add	x24, x24, x0
  443e48:	b.gt	443f68 <argp_parse@@Base+0x4188>
  443e4c:	mov	x3, #0x0                   	// #0
  443e50:	mov	w10, #0x0                   	// #0
  443e54:	mvn	x0, x24
  443e58:	cbz	w5, 443f60 <argp_parse@@Base+0x4180>
  443e5c:	cmp	x3, #0x0
  443e60:	csinc	x27, x3, xzr, ne  // ne = any
  443e64:	cmp	x27, x0
  443e68:	b.cs	442bc8 <argp_parse@@Base+0x2de8>  // b.hs, b.nlast
  443e6c:	cbz	x23, 443ea4 <argp_parse@@Base+0x40c4>
  443e70:	ldr	w0, [sp, #128]
  443e74:	cmp	w0, #0x0
  443e78:	ccmp	x3, #0x1, #0x0, eq  // eq = none
  443e7c:	b.hi	444304 <argp_parse@@Base+0x4524>  // b.pmore
  443e80:	ldr	w0, [sp, #176]
  443e84:	mov	x1, x23
  443e88:	str	w11, [sp, #144]
  443e8c:	str	w10, [sp, #152]
  443e90:	str	x3, [sp, #160]
  443e94:	bl	404170 <fputc@plt>
  443e98:	ldr	w11, [sp, #144]
  443e9c:	ldr	w10, [sp, #152]
  443ea0:	ldr	x3, [sp, #160]
  443ea4:	add	x24, x24, x27
  443ea8:	mvn	x0, x24
  443eac:	mov	x27, x22
  443eb0:	b	44389c <argp_parse@@Base+0x3abc>
  443eb4:	mov	x27, #0x0                   	// #0
  443eb8:	mov	x1, x23
  443ebc:	mov	w0, #0x30                  	// #48
  443ec0:	str	w11, [sp, #144]
  443ec4:	bl	404170 <fputc@plt>
  443ec8:	ldr	x0, [sp, #152]
  443ecc:	add	x27, x27, #0x1
  443ed0:	ldr	w11, [sp, #144]
  443ed4:	cmp	x27, x0
  443ed8:	b.cc	443eb8 <argp_parse@@Base+0x40d8>  // b.lo, b.ul, b.last
  443edc:	b	4436c0 <argp_parse@@Base+0x38e0>
  443ee0:	cbz	x0, 443904 <argp_parse@@Base+0x3b24>
  443ee4:	mov	x22, #0x0                   	// #0
  443ee8:	mov	x1, x23
  443eec:	mov	w0, #0x30                  	// #48
  443ef0:	bl	404170 <fputc@plt>
  443ef4:	add	x22, x22, #0x1
  443ef8:	ldr	x0, [sp, #128]
  443efc:	cmp	x0, x22
  443f00:	b.ne	443ee8 <argp_parse@@Base+0x4108>  // b.any
  443f04:	b	443904 <argp_parse@@Base+0x3b24>
  443f08:	cmp	x13, #0x3
  443f0c:	b.ne	4440d8 <argp_parse@@Base+0x42f8>  // b.any
  443f10:	cbnz	w15, 44418c <argp_parse@@Base+0x43ac>
  443f14:	cbnz	w5, 443b58 <argp_parse@@Base+0x3d78>
  443f18:	mov	x22, x27
  443f1c:	mov	w14, #0x1                   	// #1
  443f20:	b	443090 <argp_parse@@Base+0x32b0>
  443f24:	mov	w13, #0x0                   	// #0
  443f28:	b	44309c <argp_parse@@Base+0x32bc>
  443f2c:	cbz	x0, 442cfc <argp_parse@@Base+0x2f1c>
  443f30:	mov	x22, #0x0                   	// #0
  443f34:	nop
  443f38:	mov	x1, x23
  443f3c:	mov	w0, #0x30                  	// #48
  443f40:	bl	404170 <fputc@plt>
  443f44:	add	x22, x22, #0x1
  443f48:	ldr	x0, [sp, #128]
  443f4c:	cmp	x0, x22
  443f50:	b.ne	443f38 <argp_parse@@Base+0x4158>  // b.any
  443f54:	b	442cfc <argp_parse@@Base+0x2f1c>
  443f58:	mov	w11, #0x2b                  	// #43
  443f5c:	b	443c44 <argp_parse@@Base+0x3e64>
  443f60:	mov	x27, x22
  443f64:	b	44389c <argp_parse@@Base+0x3abc>
  443f68:	sub	w10, w10, w27
  443f6c:	sxtw	x3, w10
  443f70:	b	443e54 <argp_parse@@Base+0x4074>
  443f74:	mov	x4, #0x0                   	// #0
  443f78:	add	x4, x4, #0x1
  443f7c:	mov	x1, x23
  443f80:	mov	w0, #0x20                  	// #32
  443f84:	str	x4, [sp, #144]
  443f88:	str	w11, [sp, #152]
  443f8c:	str	w10, [sp, #160]
  443f90:	str	w5, [sp, #168]
  443f94:	str	x4, [sp, #192]
  443f98:	bl	404170 <fputc@plt>
  443f9c:	ldr	x4, [sp, #144]
  443fa0:	ldr	x0, [sp, #184]
  443fa4:	ldr	w11, [sp, #152]
  443fa8:	ldr	w10, [sp, #160]
  443fac:	cmp	x0, x4
  443fb0:	ldr	w5, [sp, #168]
  443fb4:	b.hi	443f78 <argp_parse@@Base+0x4198>  // b.pmore
  443fb8:	b	443e3c <argp_parse@@Base+0x405c>
  443fbc:	cbz	x0, 44326c <argp_parse@@Base+0x348c>
  443fc0:	mov	x2, #0x0                   	// #0
  443fc4:	nop
  443fc8:	add	x2, x2, #0x1
  443fcc:	mov	x1, x23
  443fd0:	mov	w0, #0x30                  	// #48
  443fd4:	stp	x2, x2, [sp, #144]
  443fd8:	bl	404170 <fputc@plt>
  443fdc:	ldr	x0, [sp, #128]
  443fe0:	ldr	x2, [sp, #144]
  443fe4:	cmp	x0, x2
  443fe8:	b.ne	443fc8 <argp_parse@@Base+0x41e8>  // b.any
  443fec:	b	44326c <argp_parse@@Base+0x348c>
  443ff0:	sub	w3, w3, #0x1
  443ff4:	mov	w0, #0x16d                 	// #365
  443ff8:	tst	x3, #0x3
  443ffc:	b.ne	444044 <argp_parse@@Base+0x4264>  // b.any
  444000:	mov	w12, #0x5c29                	// #23593
  444004:	mov	w0, #0xb850                	// #47184
  444008:	movk	w0, #0x51e, lsl #16
  44400c:	movk	w12, #0xc28f, lsl #16
  444010:	mov	w13, #0x5c28                	// #23592
  444014:	madd	w12, w3, w12, w0
  444018:	movk	w13, #0x28f, lsl #16
  44401c:	mov	w0, #0x16e                 	// #366
  444020:	ror	w12, w12, #2
  444024:	cmp	w12, w13
  444028:	b.hi	444044 <argp_parse@@Base+0x4264>  // b.pmore
  44402c:	mov	w12, #0x190                 	// #400
  444030:	sdiv	w0, w3, w12
  444034:	msub	w3, w0, w12, w3
  444038:	cmp	w3, #0x0
  44403c:	cset	w0, eq  // eq = none
  444040:	add	w0, w0, #0x16d
  444044:	add	w5, w5, w0
  444048:	mov	w0, #0x2493                	// #9363
  44404c:	sub	w1, w5, w1
  444050:	movk	w0, #0x9249, lsl #16
  444054:	add	w12, w1, #0x17e
  444058:	mov	w13, #0xffffffff            	// #-1
  44405c:	mov	w1, #0xfffff895            	// #-1899
  444060:	mov	w3, w13
  444064:	smull	x0, w12, w0
  444068:	lsr	x0, x0, #32
  44406c:	add	w0, w12, w0
  444070:	asr	w0, w0, #2
  444074:	sub	w0, w0, w12, asr #31
  444078:	lsl	w14, w0, #3
  44407c:	sub	w0, w14, w0
  444080:	sub	w12, w12, w0
  444084:	sub	w0, w5, w12
  444088:	add	w0, w0, #0x3
  44408c:	b	443020 <argp_parse@@Base+0x3240>
  444090:	mov	w0, #0x0                   	// #0
  444094:	mov	w12, #0x1                   	// #1
  444098:	b	443ae0 <argp_parse@@Base+0x3d00>
  44409c:	cmp	w10, #0x8
  4440a0:	b.gt	44435c <argp_parse@@Base+0x457c>
  4440a4:	ldr	w12, [sp, #116]
  4440a8:	mov	w3, #0x6667                	// #26215
  4440ac:	mov	w1, w10
  4440b0:	movk	w3, #0x6666, lsl #16
  4440b4:	nop
  4440b8:	smull	x0, w12, w3
  4440bc:	add	w1, w1, #0x1
  4440c0:	cmp	w1, #0x9
  4440c4:	asr	x0, x0, #34
  4440c8:	sub	w12, w0, w12, asr #31
  4440cc:	b.ne	4440b8 <argp_parse@@Base+0x42d8>  // b.any
  4440d0:	mov	w13, w10
  4440d4:	b	443078 <argp_parse@@Base+0x3298>
  4440d8:	mov	x22, x27
  4440dc:	b	442c68 <argp_parse@@Base+0x2e88>
  4440e0:	mov	w12, #0x2493                	// #9363
  4440e4:	mov	w13, #0x2                   	// #2
  4440e8:	movk	w12, #0x9249, lsl #16
  4440ec:	smull	x12, w0, w12
  4440f0:	lsr	x12, x12, #32
  4440f4:	add	w12, w0, w12
  4440f8:	asr	w12, w12, #2
  4440fc:	sub	w0, w12, w0, asr #31
  444100:	add	w12, w0, #0x1
  444104:	b	443078 <argp_parse@@Base+0x3298>
  444108:	cmp	w4, w1
  44410c:	add	w0, w4, #0x76c
  444110:	add	w3, w0, w13
  444114:	cset	w12, lt  // lt = tstop
  444118:	cset	w0, ge  // ge = tcont
  44411c:	mov	w5, #0x0                   	// #0
  444120:	mov	w14, #0x0                   	// #0
  444124:	mov	w13, #0x4                   	// #4
  444128:	b	443090 <argp_parse@@Base+0x32b0>
  44412c:	mov	w0, #0x1                   	// #1
  444130:	mov	w12, #0x0                   	// #0
  444134:	b	443ae0 <argp_parse@@Base+0x3d00>
  444138:	sxtw	x0, w10
  44413c:	subs	x0, x0, #0x1
  444140:	str	x0, [sp, #168]
  444144:	b.eq	443c78 <argp_parse@@Base+0x3e98>  // b.none
  444148:	mov	x4, #0x0                   	// #0
  44414c:	add	x4, x4, #0x1
  444150:	mov	x1, x23
  444154:	mov	w0, #0x20                  	// #32
  444158:	str	x4, [sp, #136]
  44415c:	str	w11, [sp, #144]
  444160:	str	w10, [sp, #152]
  444164:	str	x3, [sp, #160]
  444168:	str	x4, [sp, #176]
  44416c:	bl	404170 <fputc@plt>
  444170:	ldp	x3, x0, [sp, #160]
  444174:	ldr	x4, [sp, #136]
  444178:	ldr	w11, [sp, #144]
  44417c:	ldr	w10, [sp, #152]
  444180:	cmp	x0, x4
  444184:	b.ne	44414c <argp_parse@@Base+0x436c>  // b.any
  444188:	b	443c78 <argp_parse@@Base+0x3e98>
  44418c:	mov	w13, #0x64                  	// #100
  444190:	mov	w1, #0x2710                	// #10000
  444194:	mov	x22, x27
  444198:	mov	w14, #0x1                   	// #1
  44419c:	mul	w5, w5, w13
  4441a0:	mov	w13, #0x9                   	// #9
  4441a4:	madd	w3, w3, w1, w5
  4441a8:	mov	w5, #0x14                  	// #20
  4441ac:	add	w3, w3, w15
  4441b0:	b	443090 <argp_parse@@Base+0x32b0>
  4441b4:	mov	w5, #0x0                   	// #0
  4441b8:	str	wzr, [sp, #176]
  4441bc:	b	443604 <argp_parse@@Base+0x3824>
  4441c0:	mov	w13, #0x0                   	// #0
  4441c4:	mov	w1, #0xfffff894            	// #-1900
  4441c8:	mov	w3, #0x0                   	// #0
  4441cc:	b	443020 <argp_parse@@Base+0x3240>
  4441d0:	mov	x1, x28
  4441d4:	mov	x3, x23
  4441d8:	mov	x0, x21
  4441dc:	mov	x2, #0x1                   	// #1
  4441e0:	bl	4048b0 <fwrite@plt>
  4441e4:	b	443490 <argp_parse@@Base+0x36b0>
  4441e8:	cbz	x28, 443490 <argp_parse@@Base+0x36b0>
  4441ec:	add	x27, x21, x28
  4441f0:	bl	4041f0 <__ctype_tolower_loc@plt>
  4441f4:	mov	x26, x21
  4441f8:	mov	x28, x0
  4441fc:	ldrb	w2, [x26], #1
  444200:	mov	x1, x23
  444204:	ldr	x0, [x28]
  444208:	ldr	w0, [x0, x2, lsl #2]
  44420c:	bl	404170 <fputc@plt>
  444210:	cmp	x26, x27
  444214:	b.ne	4441fc <argp_parse@@Base+0x441c>  // b.any
  444218:	b	443490 <argp_parse@@Base+0x36b0>
  44421c:	mov	w1, #0x64                  	// #100
  444220:	mov	x22, x27
  444224:	mov	w14, #0x1                   	// #1
  444228:	mov	w13, #0x5                   	// #5
  44422c:	madd	w3, w3, w1, w5
  444230:	mov	w5, #0x0                   	// #0
  444234:	b	443090 <argp_parse@@Base+0x32b0>
  444238:	mov	x27, x22
  44423c:	mov	x28, x22
  444240:	mov	x0, x4
  444244:	str	x3, [sp, #144]
  444248:	b	442cac <argp_parse@@Base+0x2ecc>
  44424c:	cbz	x0, 443df0 <argp_parse@@Base+0x4010>
  444250:	mov	x4, #0x0                   	// #0
  444254:	add	x4, x4, #0x1
  444258:	mov	x1, x23
  44425c:	mov	w0, #0x30                  	// #48
  444260:	str	x4, [sp, #144]
  444264:	str	w11, [sp, #152]
  444268:	str	w10, [sp, #160]
  44426c:	stp	x3, x4, [sp, #192]
  444270:	bl	404170 <fputc@plt>
  444274:	ldr	w11, [sp, #152]
  444278:	ldr	x4, [sp, #144]
  44427c:	ldr	x0, [sp, #168]
  444280:	ldr	w10, [sp, #160]
  444284:	cmp	x0, x4
  444288:	ldr	x3, [sp, #192]
  44428c:	b.ne	444254 <argp_parse@@Base+0x4474>  // b.any
  444290:	b	443df0 <argp_parse@@Base+0x4010>
  444294:	ldr	x0, [sp, #136]
  444298:	cbz	x0, 443458 <argp_parse@@Base+0x3678>
  44429c:	mov	x2, #0x0                   	// #0
  4442a0:	add	x2, x2, #0x1
  4442a4:	mov	x1, x23
  4442a8:	mov	w0, #0x30                  	// #48
  4442ac:	str	x2, [sp, #128]
  4442b0:	str	x2, [sp, #152]
  4442b4:	bl	404170 <fputc@plt>
  4442b8:	ldp	x2, x0, [sp, #128]
  4442bc:	cmp	x0, x2
  4442c0:	b.ne	4442a0 <argp_parse@@Base+0x44c0>  // b.any
  4442c4:	b	443458 <argp_parse@@Base+0x3678>
  4442c8:	cbz	x0, 443698 <argp_parse@@Base+0x38b8>
  4442cc:	mov	x4, #0x0                   	// #0
  4442d0:	add	x4, x4, #0x1
  4442d4:	mov	x1, x23
  4442d8:	mov	w0, #0x30                  	// #48
  4442dc:	str	x4, [sp, #144]
  4442e0:	str	w11, [sp, #152]
  4442e4:	str	x4, [sp, #168]
  4442e8:	bl	404170 <fputc@plt>
  4442ec:	ldr	x4, [sp, #144]
  4442f0:	ldr	x0, [sp, #160]
  4442f4:	ldr	w11, [sp, #152]
  4442f8:	cmp	x0, x4
  4442fc:	b.ne	4442d0 <argp_parse@@Base+0x44f0>  // b.any
  444300:	b	443698 <argp_parse@@Base+0x38b8>
  444304:	sxtw	x0, w10
  444308:	subs	x0, x0, #0x1
  44430c:	str	x0, [sp, #184]
  444310:	b.eq	443e80 <argp_parse@@Base+0x40a0>  // b.none
  444314:	mov	x4, #0x0                   	// #0
  444318:	add	x4, x4, #0x1
  44431c:	mov	x1, x23
  444320:	mov	w0, #0x20                  	// #32
  444324:	str	x4, [sp, #144]
  444328:	str	w11, [sp, #152]
  44432c:	str	w10, [sp, #160]
  444330:	str	x3, [sp, #168]
  444334:	str	x4, [sp, #192]
  444338:	bl	404170 <fputc@plt>
  44433c:	ldr	x4, [sp, #144]
  444340:	ldr	x0, [sp, #184]
  444344:	ldr	w11, [sp, #152]
  444348:	ldr	w10, [sp, #160]
  44434c:	cmp	x0, x4
  444350:	ldr	x3, [sp, #168]
  444354:	b.ne	444318 <argp_parse@@Base+0x4538>  // b.any
  444358:	b	443e80 <argp_parse@@Base+0x40a0>
  44435c:	ldr	w12, [sp, #116]
  444360:	mov	w13, w10
  444364:	b	443078 <argp_parse@@Base+0x3298>
  444368:	mov	w3, w2
  44436c:	mov	w10, #0xffffffff            	// #-1
  444370:	b	442da4 <argp_parse@@Base+0x2fc4>
  444374:	mov	w13, #0x0                   	// #0
  444378:	b	4430a8 <argp_parse@@Base+0x32c8>
  44437c:	nop
  444380:	stp	x29, x30, [sp, #-32]!
  444384:	mov	x5, x3
  444388:	mov	w6, w4
  44438c:	mov	x29, sp
  444390:	add	x4, sp, #0x1f
  444394:	mov	w3, #0x0                   	// #0
  444398:	strb	wzr, [sp, #31]
  44439c:	bl	442b10 <argp_parse@@Base+0x2d30>
  4443a0:	ldp	x29, x30, [sp], #32
  4443a4:	ret
  4443a8:	stp	x29, x30, [sp, #-48]!
  4443ac:	mov	x29, sp
  4443b0:	stp	x21, x22, [sp, #32]
  4443b4:	cbz	x2, 444430 <argp_parse@@Base+0x4650>
  4443b8:	mov	w22, w0
  4443bc:	mov	x21, #0x0                   	// #0
  4443c0:	stp	x19, x20, [sp, #16]
  4443c4:	mov	x20, x1
  4443c8:	mov	x19, x2
  4443cc:	b	4443e4 <argp_parse@@Base+0x4604>
  4443d0:	cbz	x0, 444410 <argp_parse@@Base+0x4630>
  4443d4:	add	x21, x21, x0
  4443d8:	add	x20, x20, x0
  4443dc:	subs	x19, x19, x0
  4443e0:	b.eq	4443fc <argp_parse@@Base+0x461c>  // b.none
  4443e4:	mov	x2, x19
  4443e8:	mov	x1, x20
  4443ec:	mov	w0, w22
  4443f0:	bl	44f2a8 <argp_parse@@Base+0xf4c8>
  4443f4:	cmn	x0, #0x1
  4443f8:	b.ne	4443d0 <argp_parse@@Base+0x45f0>  // b.any
  4443fc:	ldp	x19, x20, [sp, #16]
  444400:	mov	x0, x21
  444404:	ldp	x21, x22, [sp, #32]
  444408:	ldp	x29, x30, [sp], #48
  44440c:	ret
  444410:	bl	404ad0 <__errno_location@plt>
  444414:	mov	w1, #0x1c                  	// #28
  444418:	ldp	x19, x20, [sp, #16]
  44441c:	str	w1, [x0]
  444420:	mov	x0, x21
  444424:	ldp	x21, x22, [sp, #32]
  444428:	ldp	x29, x30, [sp], #48
  44442c:	ret
  444430:	mov	x21, #0x0                   	// #0
  444434:	b	444400 <argp_parse@@Base+0x4620>
  444438:	mov	x1, x0
  44443c:	mov	w0, #0x0                   	// #0
  444440:	b	404190 <clock_gettime@plt>
  444444:	nop
  444448:	stp	x29, x30, [sp, #-32]!
  44444c:	mov	w0, #0x0                   	// #0
  444450:	mov	x29, sp
  444454:	add	x1, sp, #0x10
  444458:	bl	404190 <clock_gettime@plt>
  44445c:	ldp	x0, x1, [sp, #16]
  444460:	ldp	x29, x30, [sp], #32
  444464:	ret
  444468:	ror	x2, x0, #3
  44446c:	udiv	x0, x2, x1
  444470:	msub	x0, x0, x1, x2
  444474:	ret
  444478:	cmp	x1, x0
  44447c:	cset	w0, eq  // eq = none
  444480:	ret
  444484:	nop
  444488:	stp	x29, x30, [sp, #-80]!
  44448c:	mov	x29, sp
  444490:	stp	x21, x22, [sp, #32]
  444494:	mov	x21, x0
  444498:	mov	x0, x1
  44449c:	stp	x19, x20, [sp, #16]
  4444a0:	mov	x20, x1
  4444a4:	stp	x23, x24, [sp, #48]
  4444a8:	mov	x24, x2
  4444ac:	and	w23, w3, #0xff
  4444b0:	ldr	x1, [x21, #16]
  4444b4:	ldr	x2, [x21, #48]
  4444b8:	str	x25, [sp, #64]
  4444bc:	blr	x2
  4444c0:	ldr	x1, [x21, #16]
  4444c4:	cmp	x0, x1
  4444c8:	b.cs	4445d4 <argp_parse@@Base+0x47f4>  // b.hs, b.nlast
  4444cc:	ldr	x25, [x21]
  4444d0:	lsl	x22, x0, #4
  4444d4:	add	x19, x25, x22
  4444d8:	str	x19, [x24]
  4444dc:	ldr	x1, [x25, x22]
  4444e0:	cbz	x1, 44456c <argp_parse@@Base+0x478c>
  4444e4:	cmp	x1, x20
  4444e8:	b.eq	4445cc <argp_parse@@Base+0x47ec>  // b.none
  4444ec:	ldr	x2, [x21, #56]
  4444f0:	mov	x0, x20
  4444f4:	blr	x2
  4444f8:	tst	w0, #0xff
  4444fc:	b.eq	444564 <argp_parse@@Base+0x4784>  // b.none
  444500:	ldr	x0, [x25, x22]
  444504:	cbz	w23, 444570 <argp_parse@@Base+0x4790>
  444508:	ldr	x1, [x19, #8]
  44450c:	cbz	x1, 4445c4 <argp_parse@@Base+0x47e4>
  444510:	ldp	x2, x3, [x1]
  444514:	stp	x2, x3, [x19]
  444518:	str	xzr, [x1]
  44451c:	ldp	x19, x20, [sp, #16]
  444520:	ldr	x2, [x21, #72]
  444524:	str	x2, [x1, #8]
  444528:	str	x1, [x21, #72]
  44452c:	ldp	x21, x22, [sp, #32]
  444530:	ldp	x23, x24, [sp, #48]
  444534:	ldr	x25, [sp, #64]
  444538:	ldp	x29, x30, [sp], #80
  44453c:	ret
  444540:	ldr	x1, [x2]
  444544:	cmp	x1, x20
  444548:	b.eq	44458c <argp_parse@@Base+0x47ac>  // b.none
  44454c:	ldr	x2, [x21, #56]
  444550:	mov	x0, x20
  444554:	blr	x2
  444558:	tst	w0, #0xff
  44455c:	b.ne	444588 <argp_parse@@Base+0x47a8>  // b.any
  444560:	ldr	x19, [x19, #8]
  444564:	ldr	x2, [x19, #8]
  444568:	cbnz	x2, 444540 <argp_parse@@Base+0x4760>
  44456c:	mov	x0, #0x0                   	// #0
  444570:	ldp	x19, x20, [sp, #16]
  444574:	ldp	x21, x22, [sp, #32]
  444578:	ldp	x23, x24, [sp, #48]
  44457c:	ldr	x25, [sp, #64]
  444580:	ldp	x29, x30, [sp], #80
  444584:	ret
  444588:	ldr	x2, [x19, #8]
  44458c:	ldr	x0, [x2]
  444590:	cbz	w23, 444570 <argp_parse@@Base+0x4790>
  444594:	ldr	x1, [x2, #8]
  444598:	str	x1, [x19, #8]
  44459c:	str	xzr, [x2]
  4445a0:	ldp	x19, x20, [sp, #16]
  4445a4:	ldr	x1, [x21, #72]
  4445a8:	str	x1, [x2, #8]
  4445ac:	str	x2, [x21, #72]
  4445b0:	ldp	x21, x22, [sp, #32]
  4445b4:	ldp	x23, x24, [sp, #48]
  4445b8:	ldr	x25, [sp, #64]
  4445bc:	ldp	x29, x30, [sp], #80
  4445c0:	ret
  4445c4:	str	xzr, [x25, x22]
  4445c8:	b	444570 <argp_parse@@Base+0x4790>
  4445cc:	mov	x0, x1
  4445d0:	b	444504 <argp_parse@@Base+0x4724>
  4445d4:	bl	404650 <abort@plt>
  4445d8:	stp	x29, x30, [sp, #-64]!
  4445dc:	mov	x29, sp
  4445e0:	stp	x19, x20, [sp, #16]
  4445e4:	mov	x20, x0
  4445e8:	stp	x21, x22, [sp, #32]
  4445ec:	mov	x22, x1
  4445f0:	ldp	x21, x0, [x1]
  4445f4:	stp	x23, x24, [sp, #48]
  4445f8:	and	w23, w2, #0xff
  4445fc:	cmp	x21, x0
  444600:	b.cc	444614 <argp_parse@@Base+0x4834>  // b.lo, b.ul, b.last
  444604:	b	4446b4 <argp_parse@@Base+0x48d4>
  444608:	add	x21, x21, #0x10
  44460c:	cmp	x21, x0
  444610:	b.cs	4446b4 <argp_parse@@Base+0x48d4>  // b.hs, b.nlast
  444614:	ldr	x24, [x21]
  444618:	cbz	x24, 444608 <argp_parse@@Base+0x4828>
  44461c:	ldr	x19, [x21, #8]
  444620:	cbz	x19, 44469c <argp_parse@@Base+0x48bc>
  444624:	ldr	x1, [x20, #16]
  444628:	ldr	x2, [x20, #48]
  44462c:	ldr	x24, [x19]
  444630:	mov	x0, x24
  444634:	blr	x2
  444638:	ldr	x1, [x20, #16]
  44463c:	cmp	x0, x1
  444640:	b.cs	44476c <argp_parse@@Base+0x498c>  // b.hs, b.nlast
  444644:	ldr	x2, [x20]
  444648:	lsl	x0, x0, #4
  44464c:	ldr	x3, [x19, #8]
  444650:	add	x4, x2, x0
  444654:	ldr	x5, [x2, x0]
  444658:	cbz	x5, 444674 <argp_parse@@Base+0x4894>
  44465c:	ldr	x0, [x4, #8]
  444660:	str	x0, [x19, #8]
  444664:	str	x19, [x4, #8]
  444668:	cbz	x3, 444698 <argp_parse@@Base+0x48b8>
  44466c:	mov	x19, x3
  444670:	b	444628 <argp_parse@@Base+0x4848>
  444674:	ldr	x4, [x20, #24]
  444678:	str	x24, [x2, x0]
  44467c:	add	x0, x4, #0x1
  444680:	str	x0, [x20, #24]
  444684:	str	xzr, [x19]
  444688:	ldr	x0, [x20, #72]
  44468c:	str	x0, [x19, #8]
  444690:	str	x19, [x20, #72]
  444694:	cbnz	x3, 44466c <argp_parse@@Base+0x488c>
  444698:	ldr	x24, [x21]
  44469c:	str	xzr, [x21, #8]
  4446a0:	cbz	w23, 4446d0 <argp_parse@@Base+0x48f0>
  4446a4:	ldr	x0, [x22, #8]
  4446a8:	add	x21, x21, #0x10
  4446ac:	cmp	x21, x0
  4446b0:	b.cc	444614 <argp_parse@@Base+0x4834>  // b.lo, b.ul, b.last
  4446b4:	mov	w23, #0x1                   	// #1
  4446b8:	mov	w0, w23
  4446bc:	ldp	x19, x20, [sp, #16]
  4446c0:	ldp	x21, x22, [sp, #32]
  4446c4:	ldp	x23, x24, [sp, #48]
  4446c8:	ldp	x29, x30, [sp], #64
  4446cc:	ret
  4446d0:	ldr	x1, [x20, #16]
  4446d4:	mov	x0, x24
  4446d8:	ldr	x2, [x20, #48]
  4446dc:	blr	x2
  4446e0:	ldr	x1, [x20, #16]
  4446e4:	cmp	x0, x1
  4446e8:	b.cs	44476c <argp_parse@@Base+0x498c>  // b.hs, b.nlast
  4446ec:	ldr	x1, [x20]
  4446f0:	lsl	x0, x0, #4
  4446f4:	add	x19, x1, x0
  4446f8:	ldr	x2, [x1, x0]
  4446fc:	cbz	x2, 444734 <argp_parse@@Base+0x4954>
  444700:	ldr	x0, [x20, #72]
  444704:	cbz	x0, 444748 <argp_parse@@Base+0x4968>
  444708:	ldr	x1, [x0, #8]
  44470c:	str	x1, [x20, #72]
  444710:	ldr	x1, [x19, #8]
  444714:	stp	x24, x1, [x0]
  444718:	str	x0, [x19, #8]
  44471c:	ldr	x1, [x22, #24]
  444720:	str	xzr, [x21]
  444724:	sub	x1, x1, #0x1
  444728:	str	x1, [x22, #24]
  44472c:	ldr	x0, [x22, #8]
  444730:	b	444608 <argp_parse@@Base+0x4828>
  444734:	ldr	x2, [x20, #24]
  444738:	str	x24, [x1, x0]
  44473c:	add	x0, x2, #0x1
  444740:	str	x0, [x20, #24]
  444744:	b	44471c <argp_parse@@Base+0x493c>
  444748:	mov	x0, #0x10                  	// #16
  44474c:	bl	404310 <malloc@plt>
  444750:	cbnz	x0, 444710 <argp_parse@@Base+0x4930>
  444754:	mov	w0, w23
  444758:	ldp	x19, x20, [sp, #16]
  44475c:	ldp	x21, x22, [sp, #32]
  444760:	ldp	x23, x24, [sp, #48]
  444764:	ldp	x29, x30, [sp], #64
  444768:	ret
  44476c:	bl	404650 <abort@plt>
  444770:	ldr	x0, [x0, #16]
  444774:	ret
  444778:	ldr	x0, [x0, #24]
  44477c:	ret
  444780:	ldr	x0, [x0, #32]
  444784:	ret
  444788:	ldp	x3, x4, [x0]
  44478c:	mov	x0, #0x0                   	// #0
  444790:	cmp	x3, x4
  444794:	b.cc	4447a8 <argp_parse@@Base+0x49c8>  // b.lo, b.ul, b.last
  444798:	b	4447e0 <argp_parse@@Base+0x4a00>
  44479c:	add	x3, x3, #0x10
  4447a0:	cmp	x3, x4
  4447a4:	b.cs	4447e0 <argp_parse@@Base+0x4a00>  // b.hs, b.nlast
  4447a8:	ldr	x1, [x3]
  4447ac:	cbz	x1, 44479c <argp_parse@@Base+0x49bc>
  4447b0:	ldr	x1, [x3, #8]
  4447b4:	mov	x2, #0x1                   	// #1
  4447b8:	cbz	x1, 4447cc <argp_parse@@Base+0x49ec>
  4447bc:	nop
  4447c0:	ldr	x1, [x1, #8]
  4447c4:	add	x2, x2, #0x1
  4447c8:	cbnz	x1, 4447c0 <argp_parse@@Base+0x49e0>
  4447cc:	cmp	x0, x2
  4447d0:	add	x3, x3, #0x10
  4447d4:	csel	x0, x0, x2, cs  // cs = hs, nlast
  4447d8:	cmp	x3, x4
  4447dc:	b.cc	4447a8 <argp_parse@@Base+0x49c8>  // b.lo, b.ul, b.last
  4447e0:	ret
  4447e4:	nop
  4447e8:	ldp	x3, x4, [x0]
  4447ec:	mov	x6, x0
  4447f0:	mov	x2, #0x0                   	// #0
  4447f4:	mov	x5, #0x0                   	// #0
  4447f8:	cmp	x3, x4
  4447fc:	b.cc	444810 <argp_parse@@Base+0x4a30>  // b.lo, b.ul, b.last
  444800:	b	444840 <argp_parse@@Base+0x4a60>
  444804:	add	x3, x3, #0x10
  444808:	cmp	x3, x4
  44480c:	b.cs	444840 <argp_parse@@Base+0x4a60>  // b.hs, b.nlast
  444810:	ldr	x1, [x3]
  444814:	cbz	x1, 444804 <argp_parse@@Base+0x4a24>
  444818:	ldr	x1, [x3, #8]
  44481c:	add	x5, x5, #0x1
  444820:	add	x2, x2, #0x1
  444824:	cbz	x1, 444804 <argp_parse@@Base+0x4a24>
  444828:	ldr	x1, [x1, #8]
  44482c:	add	x2, x2, #0x1
  444830:	cbnz	x1, 444828 <argp_parse@@Base+0x4a48>
  444834:	add	x3, x3, #0x10
  444838:	cmp	x3, x4
  44483c:	b.cc	444810 <argp_parse@@Base+0x4a30>  // b.lo, b.ul, b.last
  444840:	ldr	x1, [x6, #24]
  444844:	mov	w0, #0x0                   	// #0
  444848:	cmp	x1, x5
  44484c:	b.eq	444854 <argp_parse@@Base+0x4a74>  // b.none
  444850:	ret
  444854:	ldr	x0, [x6, #32]
  444858:	cmp	x0, x2
  44485c:	cset	w0, eq  // eq = none
  444860:	ret
  444864:	nop
  444868:	stp	x29, x30, [sp, #-48]!
  44486c:	mov	x29, sp
  444870:	ldp	x4, x5, [x0]
  444874:	stp	x19, x20, [sp, #16]
  444878:	mov	x20, x1
  44487c:	stp	x21, x22, [sp, #32]
  444880:	mov	x19, #0x0                   	// #0
  444884:	ldp	x21, x22, [x0, #16]
  444888:	cmp	x4, x5
  44488c:	ldr	x3, [x0, #32]
  444890:	b.cc	4448a4 <argp_parse@@Base+0x4ac4>  // b.lo, b.ul, b.last
  444894:	b	4448d8 <argp_parse@@Base+0x4af8>
  444898:	add	x4, x4, #0x10
  44489c:	cmp	x4, x5
  4448a0:	b.cs	4448d8 <argp_parse@@Base+0x4af8>  // b.hs, b.nlast
  4448a4:	ldr	x0, [x4]
  4448a8:	cbz	x0, 444898 <argp_parse@@Base+0x4ab8>
  4448ac:	ldr	x0, [x4, #8]
  4448b0:	mov	x2, #0x1                   	// #1
  4448b4:	cbz	x0, 4448c4 <argp_parse@@Base+0x4ae4>
  4448b8:	ldr	x0, [x0, #8]
  4448bc:	add	x2, x2, #0x1
  4448c0:	cbnz	x0, 4448b8 <argp_parse@@Base+0x4ad8>
  4448c4:	cmp	x19, x2
  4448c8:	add	x4, x4, #0x10
  4448cc:	csel	x19, x19, x2, cs  // cs = hs, nlast
  4448d0:	cmp	x4, x5
  4448d4:	b.cc	4448a4 <argp_parse@@Base+0x4ac4>  // b.lo, b.ul, b.last
  4448d8:	mov	x0, x20
  4448dc:	mov	w1, #0x1                   	// #1
  4448e0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4448e4:	add	x2, x2, #0x588
  4448e8:	bl	404700 <__fprintf_chk@plt>
  4448ec:	mov	x3, x21
  4448f0:	mov	x0, x20
  4448f4:	mov	w1, #0x1                   	// #1
  4448f8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4448fc:	add	x2, x2, #0x5a0
  444900:	bl	404700 <__fprintf_chk@plt>
  444904:	ucvtf	d1, x22
  444908:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  44490c:	fmov	d2, x0
  444910:	ucvtf	d0, x21
  444914:	mov	x3, x22
  444918:	mov	x0, x20
  44491c:	mov	w1, #0x1                   	// #1
  444920:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  444924:	fmul	d1, d1, d2
  444928:	add	x2, x2, #0x5b8
  44492c:	fdiv	d0, d1, d0
  444930:	bl	404700 <__fprintf_chk@plt>
  444934:	mov	x3, x19
  444938:	mov	x0, x20
  44493c:	ldp	x19, x20, [sp, #16]
  444940:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  444944:	ldp	x21, x22, [sp, #32]
  444948:	add	x2, x2, #0x5e0
  44494c:	ldp	x29, x30, [sp], #48
  444950:	mov	w1, #0x1                   	// #1
  444954:	b	404700 <__fprintf_chk@plt>
  444958:	stp	x29, x30, [sp, #-48]!
  44495c:	mov	x29, sp
  444960:	str	x21, [sp, #32]
  444964:	mov	x21, x0
  444968:	mov	x0, x1
  44496c:	stp	x19, x20, [sp, #16]
  444970:	mov	x20, x1
  444974:	ldr	x1, [x21, #16]
  444978:	ldr	x2, [x21, #48]
  44497c:	blr	x2
  444980:	ldr	x1, [x21, #16]
  444984:	cmp	x0, x1
  444988:	b.cs	4449f8 <argp_parse@@Base+0x4c18>  // b.hs, b.nlast
  44498c:	ldr	x1, [x21]
  444990:	lsl	x0, x0, #4
  444994:	add	x19, x1, x0
  444998:	ldr	x1, [x1, x0]
  44499c:	cbnz	x1, 4449a8 <argp_parse@@Base+0x4bc8>
  4449a0:	b	4449cc <argp_parse@@Base+0x4bec>
  4449a4:	ldr	x1, [x19]
  4449a8:	cmp	x1, x20
  4449ac:	b.eq	4449e4 <argp_parse@@Base+0x4c04>  // b.none
  4449b0:	ldr	x2, [x21, #56]
  4449b4:	mov	x0, x20
  4449b8:	blr	x2
  4449bc:	tst	w0, #0xff
  4449c0:	b.ne	4449e0 <argp_parse@@Base+0x4c00>  // b.any
  4449c4:	ldr	x19, [x19, #8]
  4449c8:	cbnz	x19, 4449a4 <argp_parse@@Base+0x4bc4>
  4449cc:	mov	x0, #0x0                   	// #0
  4449d0:	ldp	x19, x20, [sp, #16]
  4449d4:	ldr	x21, [sp, #32]
  4449d8:	ldp	x29, x30, [sp], #48
  4449dc:	ret
  4449e0:	ldr	x20, [x19]
  4449e4:	mov	x0, x20
  4449e8:	ldp	x19, x20, [sp, #16]
  4449ec:	ldr	x21, [sp, #32]
  4449f0:	ldp	x29, x30, [sp], #48
  4449f4:	ret
  4449f8:	bl	404650 <abort@plt>
  4449fc:	nop
  444a00:	ldr	x1, [x0, #32]
  444a04:	cbz	x1, 444a30 <argp_parse@@Base+0x4c50>
  444a08:	ldp	x1, x2, [x0]
  444a0c:	cmp	x1, x2
  444a10:	b.cc	444a24 <argp_parse@@Base+0x4c44>  // b.lo, b.ul, b.last
  444a14:	b	444a38 <argp_parse@@Base+0x4c58>
  444a18:	add	x1, x1, #0x10
  444a1c:	cmp	x1, x2
  444a20:	b.cs	444a38 <argp_parse@@Base+0x4c58>  // b.hs, b.nlast
  444a24:	ldr	x0, [x1]
  444a28:	cbz	x0, 444a18 <argp_parse@@Base+0x4c38>
  444a2c:	ret
  444a30:	mov	x0, #0x0                   	// #0
  444a34:	ret
  444a38:	stp	x29, x30, [sp, #-16]!
  444a3c:	mov	x29, sp
  444a40:	bl	404650 <abort@plt>
  444a44:	nop
  444a48:	stp	x29, x30, [sp, #-32]!
  444a4c:	mov	x29, sp
  444a50:	stp	x19, x20, [sp, #16]
  444a54:	mov	x20, x0
  444a58:	mov	x19, x1
  444a5c:	mov	x0, x1
  444a60:	ldr	x1, [x20, #16]
  444a64:	ldr	x2, [x20, #48]
  444a68:	blr	x2
  444a6c:	ldr	x1, [x20, #16]
  444a70:	cmp	x0, x1
  444a74:	b.cs	444ad8 <argp_parse@@Base+0x4cf8>  // b.hs, b.nlast
  444a78:	ldr	x3, [x20]
  444a7c:	add	x3, x3, x0, lsl #4
  444a80:	mov	x2, x3
  444a84:	b	444a8c <argp_parse@@Base+0x4cac>
  444a88:	cbz	x2, 444a9c <argp_parse@@Base+0x4cbc>
  444a8c:	ldp	x4, x2, [x2]
  444a90:	cmp	x4, x19
  444a94:	b.ne	444a88 <argp_parse@@Base+0x4ca8>  // b.any
  444a98:	cbnz	x2, 444ac8 <argp_parse@@Base+0x4ce8>
  444a9c:	ldr	x1, [x20, #8]
  444aa0:	b	444aac <argp_parse@@Base+0x4ccc>
  444aa4:	ldr	x0, [x3]
  444aa8:	cbnz	x0, 444abc <argp_parse@@Base+0x4cdc>
  444aac:	add	x3, x3, #0x10
  444ab0:	cmp	x1, x3
  444ab4:	b.hi	444aa4 <argp_parse@@Base+0x4cc4>  // b.pmore
  444ab8:	mov	x0, #0x0                   	// #0
  444abc:	ldp	x19, x20, [sp, #16]
  444ac0:	ldp	x29, x30, [sp], #32
  444ac4:	ret
  444ac8:	ldr	x0, [x2]
  444acc:	ldp	x19, x20, [sp, #16]
  444ad0:	ldp	x29, x30, [sp], #32
  444ad4:	ret
  444ad8:	bl	404650 <abort@plt>
  444adc:	nop
  444ae0:	ldp	x5, x3, [x0]
  444ae4:	mov	x6, x0
  444ae8:	cmp	x3, x5
  444aec:	b.ls	444b3c <argp_parse@@Base+0x4d5c>  // b.plast
  444af0:	sub	x4, x1, #0x8
  444af4:	mov	x0, #0x0                   	// #0
  444af8:	ldr	x1, [x5]
  444afc:	cbnz	x1, 444b10 <argp_parse@@Base+0x4d30>
  444b00:	add	x5, x5, #0x10
  444b04:	cmp	x5, x3
  444b08:	b.cc	444af8 <argp_parse@@Base+0x4d18>  // b.lo, b.ul, b.last
  444b0c:	ret
  444b10:	mov	x1, x5
  444b14:	nop
  444b18:	cmp	x2, x0
  444b1c:	b.ls	444b0c <argp_parse@@Base+0x4d2c>  // b.plast
  444b20:	add	x0, x0, #0x1
  444b24:	ldr	x3, [x1]
  444b28:	str	x3, [x4, x0, lsl #3]
  444b2c:	ldr	x1, [x1, #8]
  444b30:	cbnz	x1, 444b18 <argp_parse@@Base+0x4d38>
  444b34:	ldr	x3, [x6, #8]
  444b38:	b	444b00 <argp_parse@@Base+0x4d20>
  444b3c:	mov	x0, #0x0                   	// #0
  444b40:	ret
  444b44:	nop
  444b48:	stp	x29, x30, [sp, #-64]!
  444b4c:	mov	x29, sp
  444b50:	stp	x21, x22, [sp, #32]
  444b54:	mov	x21, x1
  444b58:	stp	x23, x24, [sp, #48]
  444b5c:	ldp	x23, x1, [x0]
  444b60:	stp	x19, x20, [sp, #16]
  444b64:	cmp	x1, x23
  444b68:	b.ls	444bd4 <argp_parse@@Base+0x4df4>  // b.plast
  444b6c:	mov	x24, x0
  444b70:	mov	x22, x2
  444b74:	mov	x20, #0x0                   	// #0
  444b78:	ldr	x0, [x23]
  444b7c:	cbnz	x0, 444ba4 <argp_parse@@Base+0x4dc4>
  444b80:	add	x23, x23, #0x10
  444b84:	cmp	x23, x1
  444b88:	b.cc	444b78 <argp_parse@@Base+0x4d98>  // b.lo, b.ul, b.last
  444b8c:	mov	x0, x20
  444b90:	ldp	x19, x20, [sp, #16]
  444b94:	ldp	x21, x22, [sp, #32]
  444b98:	ldp	x23, x24, [sp, #48]
  444b9c:	ldp	x29, x30, [sp], #64
  444ba0:	ret
  444ba4:	mov	x19, x23
  444ba8:	b	444bb0 <argp_parse@@Base+0x4dd0>
  444bac:	ldr	x0, [x19]
  444bb0:	mov	x1, x22
  444bb4:	blr	x21
  444bb8:	tst	w0, #0xff
  444bbc:	b.eq	444b8c <argp_parse@@Base+0x4dac>  // b.none
  444bc0:	ldr	x19, [x19, #8]
  444bc4:	add	x20, x20, #0x1
  444bc8:	cbnz	x19, 444bac <argp_parse@@Base+0x4dcc>
  444bcc:	ldr	x1, [x24, #8]
  444bd0:	b	444b80 <argp_parse@@Base+0x4da0>
  444bd4:	mov	x20, #0x0                   	// #0
  444bd8:	b	444b8c <argp_parse@@Base+0x4dac>
  444bdc:	nop
  444be0:	ldrb	w4, [x0]
  444be4:	mov	x2, #0x0                   	// #0
  444be8:	cbz	w4, 444c0c <argp_parse@@Base+0x4e2c>
  444bec:	nop
  444bf0:	lsl	x3, x2, #5
  444bf4:	sub	x2, x3, x2
  444bf8:	add	x2, x2, w4, uxtb
  444bfc:	ldrb	w4, [x0, #1]!
  444c00:	udiv	x3, x2, x1
  444c04:	msub	x2, x3, x1, x2
  444c08:	cbnz	w4, 444bf0 <argp_parse@@Base+0x4e10>
  444c0c:	mov	x0, x2
  444c10:	ret
  444c14:	nop
  444c18:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  444c1c:	add	x1, x1, #0x610
  444c20:	ldp	x2, x3, [x1]
  444c24:	stp	x2, x3, [x0]
  444c28:	ldr	w1, [x1, #16]
  444c2c:	str	w1, [x0, #16]
  444c30:	ret
  444c34:	nop
  444c38:	stp	x29, x30, [sp, #-64]!
  444c3c:	cmp	x2, #0x0
  444c40:	mov	x29, sp
  444c44:	stp	x23, x24, [sp, #48]
  444c48:	mov	x23, x2
  444c4c:	adrp	x2, 444000 <argp_parse@@Base+0x4220>
  444c50:	add	x2, x2, #0x468
  444c54:	stp	x19, x20, [sp, #16]
  444c58:	csel	x23, x2, x23, eq  // eq = none
  444c5c:	cmp	x3, #0x0
  444c60:	adrp	x2, 444000 <argp_parse@@Base+0x4220>
  444c64:	add	x2, x2, #0x478
  444c68:	mov	x19, x0
  444c6c:	mov	x20, x4
  444c70:	csel	x24, x2, x3, eq  // eq = none
  444c74:	mov	x0, #0x50                  	// #80
  444c78:	stp	x21, x22, [sp, #32]
  444c7c:	mov	x22, x1
  444c80:	bl	404310 <malloc@plt>
  444c84:	mov	x21, x0
  444c88:	cbz	x0, 444d44 <argp_parse@@Base+0x4f64>
  444c8c:	cbz	x22, 444d5c <argp_parse@@Base+0x4f7c>
  444c90:	str	x22, [x21, #40]
  444c94:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  444c98:	add	x0, x0, #0x610
  444c9c:	cmp	x22, x0
  444ca0:	b.eq	444d68 <argp_parse@@Base+0x4f88>  // b.none
  444ca4:	mov	w0, #0xcccd                	// #52429
  444ca8:	ldr	s2, [x22, #8]
  444cac:	movk	w0, #0x3dcc, lsl #16
  444cb0:	fmov	s1, w0
  444cb4:	fcmpe	s2, s1
  444cb8:	b.le	444d38 <argp_parse@@Base+0x4f58>
  444cbc:	mov	w0, #0x6666                	// #26214
  444cc0:	movk	w0, #0x3f66, lsl #16
  444cc4:	fmov	s0, w0
  444cc8:	fcmpe	s2, s0
  444ccc:	b.pl	444d38 <argp_parse@@Base+0x4f58>  // b.nfrst
  444cd0:	mov	w0, #0xcccd                	// #52429
  444cd4:	ldr	s3, [x22, #12]
  444cd8:	movk	w0, #0x3f8c, lsl #16
  444cdc:	fmov	s0, w0
  444ce0:	fcmpe	s3, s0
  444ce4:	b.le	444d38 <argp_parse@@Base+0x4f58>
  444ce8:	ldr	s0, [x22]
  444cec:	fcmpe	s0, #0.0
  444cf0:	b.lt	444d38 <argp_parse@@Base+0x4f58>  // b.tstop
  444cf4:	fadd	s1, s0, s1
  444cf8:	ldr	s0, [x22, #4]
  444cfc:	fcmpe	s1, s0
  444d00:	b.pl	444d38 <argp_parse@@Base+0x4f58>  // b.nfrst
  444d04:	fmov	s3, #1.000000000000000000e+00
  444d08:	fcmpe	s0, s3
  444d0c:	b.hi	444d38 <argp_parse@@Base+0x4f58>  // b.pmore
  444d10:	fcmpe	s2, s1
  444d14:	b.le	444d38 <argp_parse@@Base+0x4f58>
  444d18:	ldrb	w0, [x22, #16]
  444d1c:	cbnz	w0, 444d90 <argp_parse@@Base+0x4fb0>
  444d20:	ucvtf	s0, x19
  444d24:	mov	w0, #0x5f800000            	// #1602224128
  444d28:	fmov	s1, w0
  444d2c:	fdiv	s0, s0, s2
  444d30:	fcmpe	s0, s1
  444d34:	b.lt	444d8c <argp_parse@@Base+0x4fac>  // b.tstop
  444d38:	mov	x0, x21
  444d3c:	mov	x21, #0x0                   	// #0
  444d40:	bl	4047b0 <free@plt>
  444d44:	mov	x0, x21
  444d48:	ldp	x19, x20, [sp, #16]
  444d4c:	ldp	x21, x22, [sp, #32]
  444d50:	ldp	x23, x24, [sp, #48]
  444d54:	ldp	x29, x30, [sp], #64
  444d58:	ret
  444d5c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  444d60:	add	x0, x0, #0x610
  444d64:	str	x0, [x21, #40]
  444d68:	ucvtf	s0, x19
  444d6c:	mov	w0, #0xcccd                	// #52429
  444d70:	movk	w0, #0x3f4c, lsl #16
  444d74:	fmov	s2, w0
  444d78:	mov	w0, #0x5f800000            	// #1602224128
  444d7c:	fmov	s1, w0
  444d80:	fdiv	s0, s0, s2
  444d84:	fcmpe	s0, s1
  444d88:	b.ge	444d38 <argp_parse@@Base+0x4f58>  // b.tcont
  444d8c:	fcvtzu	x19, s0
  444d90:	cmp	x19, #0xa
  444d94:	mov	x0, #0xa                   	// #10
  444d98:	csel	x19, x19, x0, cs  // cs = hs, nlast
  444d9c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  444da0:	orr	x19, x19, #0x1
  444da4:	movk	x4, #0xaaab
  444da8:	cmn	x19, #0x1
  444dac:	b.eq	444d38 <argp_parse@@Base+0x4f58>  // b.none
  444db0:	umulh	x1, x19, x4
  444db4:	cmp	x19, #0x9
  444db8:	and	x0, x1, #0xfffffffffffffffe
  444dbc:	add	x1, x0, x1, lsr #1
  444dc0:	sub	x1, x19, x1
  444dc4:	b.ls	444dfc <argp_parse@@Base+0x501c>  // b.plast
  444dc8:	cbz	x1, 444e00 <argp_parse@@Base+0x5020>
  444dcc:	mov	x3, #0x10                  	// #16
  444dd0:	mov	x2, #0x9                   	// #9
  444dd4:	mov	x0, #0x3                   	// #3
  444dd8:	b	444de0 <argp_parse@@Base+0x5000>
  444ddc:	cbz	x1, 444e00 <argp_parse@@Base+0x5020>
  444de0:	add	x0, x0, #0x2
  444de4:	add	x2, x2, x3
  444de8:	cmp	x2, x19
  444dec:	add	x3, x3, #0x8
  444df0:	udiv	x1, x19, x0
  444df4:	msub	x1, x1, x0, x19
  444df8:	b.cc	444ddc <argp_parse@@Base+0x4ffc>  // b.lo, b.ul, b.last
  444dfc:	cbnz	x1, 444e10 <argp_parse@@Base+0x5030>
  444e00:	add	x19, x19, #0x2
  444e04:	cmn	x19, #0x1
  444e08:	b.ne	444db0 <argp_parse@@Base+0x4fd0>  // b.any
  444e0c:	b	444d38 <argp_parse@@Base+0x4f58>
  444e10:	cmp	xzr, x19, lsr #61
  444e14:	cset	x0, ne  // ne = any
  444e18:	tbnz	x19, #60, 444d38 <argp_parse@@Base+0x4f58>
  444e1c:	cbnz	x0, 444d38 <argp_parse@@Base+0x4f58>
  444e20:	str	x19, [x21, #16]
  444e24:	mov	x0, x19
  444e28:	mov	x1, #0x10                  	// #16
  444e2c:	bl	4044c0 <calloc@plt>
  444e30:	str	x0, [x21]
  444e34:	cbz	x0, 444d38 <argp_parse@@Base+0x4f58>
  444e38:	add	x19, x0, x19, lsl #4
  444e3c:	str	x19, [x21, #8]
  444e40:	stp	xzr, xzr, [x21, #24]
  444e44:	mov	x0, x21
  444e48:	stp	x23, x24, [x21, #48]
  444e4c:	stp	x20, xzr, [x21, #64]
  444e50:	ldp	x19, x20, [sp, #16]
  444e54:	ldp	x21, x22, [sp, #32]
  444e58:	ldp	x23, x24, [sp, #48]
  444e5c:	ldp	x29, x30, [sp], #64
  444e60:	ret
  444e64:	nop
  444e68:	stp	x29, x30, [sp, #-48]!
  444e6c:	mov	x29, sp
  444e70:	ldr	x1, [x0, #8]
  444e74:	str	x21, [sp, #32]
  444e78:	ldr	x21, [x0]
  444e7c:	stp	x19, x20, [sp, #16]
  444e80:	mov	x20, x0
  444e84:	cmp	x21, x1
  444e88:	b.cc	444e9c <argp_parse@@Base+0x50bc>  // b.lo, b.ul, b.last
  444e8c:	b	444ef4 <argp_parse@@Base+0x5114>
  444e90:	add	x21, x21, #0x10
  444e94:	cmp	x1, x21
  444e98:	b.ls	444ef4 <argp_parse@@Base+0x5114>  // b.plast
  444e9c:	ldr	x0, [x21]
  444ea0:	cbz	x0, 444e90 <argp_parse@@Base+0x50b0>
  444ea4:	ldr	x19, [x21, #8]
  444ea8:	ldr	x1, [x20, #64]
  444eac:	cbz	x19, 444ed4 <argp_parse@@Base+0x50f4>
  444eb0:	cbz	x1, 444f08 <argp_parse@@Base+0x5128>
  444eb4:	ldr	x0, [x19]
  444eb8:	blr	x1
  444ebc:	ldr	x2, [x19, #8]
  444ec0:	ldp	x1, x0, [x20, #64]
  444ec4:	stp	xzr, x0, [x19]
  444ec8:	str	x19, [x20, #72]
  444ecc:	mov	x19, x2
  444ed0:	cbnz	x2, 444eb0 <argp_parse@@Base+0x50d0>
  444ed4:	cbz	x1, 444ee0 <argp_parse@@Base+0x5100>
  444ed8:	ldr	x0, [x21]
  444edc:	blr	x1
  444ee0:	stp	xzr, xzr, [x21]
  444ee4:	add	x21, x21, #0x10
  444ee8:	ldr	x1, [x20, #8]
  444eec:	cmp	x1, x21
  444ef0:	b.hi	444e9c <argp_parse@@Base+0x50bc>  // b.pmore
  444ef4:	stp	xzr, xzr, [x20, #24]
  444ef8:	ldp	x19, x20, [sp, #16]
  444efc:	ldr	x21, [sp, #32]
  444f00:	ldp	x29, x30, [sp], #48
  444f04:	ret
  444f08:	ldr	x0, [x20, #72]
  444f0c:	mov	x1, x19
  444f10:	str	xzr, [x19]
  444f14:	ldr	x19, [x19, #8]
  444f18:	str	x0, [x1, #8]
  444f1c:	str	x1, [x20, #72]
  444f20:	mov	x0, x1
  444f24:	cbnz	x19, 444f0c <argp_parse@@Base+0x512c>
  444f28:	b	444ee0 <argp_parse@@Base+0x5100>
  444f2c:	nop
  444f30:	stp	x29, x30, [sp, #-48]!
  444f34:	mov	x29, sp
  444f38:	str	x21, [sp, #32]
  444f3c:	mov	x21, x0
  444f40:	ldr	x0, [x0, #64]
  444f44:	stp	x19, x20, [sp, #16]
  444f48:	ldp	x20, x1, [x21]
  444f4c:	cbz	x0, 444fa8 <argp_parse@@Base+0x51c8>
  444f50:	ldr	x0, [x21, #32]
  444f54:	cbz	x0, 444fa8 <argp_parse@@Base+0x51c8>
  444f58:	cmp	x20, x1
  444f5c:	b.cc	444f70 <argp_parse@@Base+0x5190>  // b.lo, b.ul, b.last
  444f60:	b	444fd8 <argp_parse@@Base+0x51f8>
  444f64:	add	x20, x20, #0x10
  444f68:	cmp	x20, x1
  444f6c:	b.cs	444fa4 <argp_parse@@Base+0x51c4>  // b.hs, b.nlast
  444f70:	ldr	x0, [x20]
  444f74:	cbz	x0, 444f64 <argp_parse@@Base+0x5184>
  444f78:	mov	x19, x20
  444f7c:	b	444f84 <argp_parse@@Base+0x51a4>
  444f80:	ldr	x0, [x19]
  444f84:	ldr	x1, [x21, #64]
  444f88:	blr	x1
  444f8c:	ldr	x19, [x19, #8]
  444f90:	cbnz	x19, 444f80 <argp_parse@@Base+0x51a0>
  444f94:	ldr	x1, [x21, #8]
  444f98:	add	x20, x20, #0x10
  444f9c:	cmp	x20, x1
  444fa0:	b.cc	444f70 <argp_parse@@Base+0x5190>  // b.lo, b.ul, b.last
  444fa4:	ldr	x20, [x21]
  444fa8:	cmp	x1, x20
  444fac:	b.ls	444fd8 <argp_parse@@Base+0x51f8>  // b.plast
  444fb0:	ldr	x19, [x20, #8]
  444fb4:	cbz	x19, 444fcc <argp_parse@@Base+0x51ec>
  444fb8:	mov	x0, x19
  444fbc:	ldr	x19, [x19, #8]
  444fc0:	bl	4047b0 <free@plt>
  444fc4:	cbnz	x19, 444fb8 <argp_parse@@Base+0x51d8>
  444fc8:	ldr	x1, [x21, #8]
  444fcc:	add	x20, x20, #0x10
  444fd0:	cmp	x20, x1
  444fd4:	b.cc	444fb0 <argp_parse@@Base+0x51d0>  // b.lo, b.ul, b.last
  444fd8:	ldr	x19, [x21, #72]
  444fdc:	cbz	x19, 444ff0 <argp_parse@@Base+0x5210>
  444fe0:	mov	x0, x19
  444fe4:	ldr	x19, [x19, #8]
  444fe8:	bl	4047b0 <free@plt>
  444fec:	cbnz	x19, 444fe0 <argp_parse@@Base+0x5200>
  444ff0:	ldr	x0, [x21]
  444ff4:	bl	4047b0 <free@plt>
  444ff8:	mov	x0, x21
  444ffc:	ldp	x19, x20, [sp, #16]
  445000:	ldr	x21, [sp, #32]
  445004:	ldp	x29, x30, [sp], #48
  445008:	b	4047b0 <free@plt>
  44500c:	nop
  445010:	stp	x29, x30, [sp, #-128]!
  445014:	mov	x29, sp
  445018:	str	x21, [sp, #32]
  44501c:	ldr	x21, [x0, #40]
  445020:	stp	x19, x20, [sp, #16]
  445024:	mov	x20, x0
  445028:	ldrb	w0, [x21, #16]
  44502c:	cbnz	w0, 445050 <argp_parse@@Base+0x5270>
  445030:	ucvtf	s0, x1
  445034:	ldr	s2, [x21, #8]
  445038:	mov	w0, #0x5f800000            	// #1602224128
  44503c:	fmov	s1, w0
  445040:	fdiv	s0, s0, s2
  445044:	fcmpe	s0, s1
  445048:	fcvtzu	x1, s0
  44504c:	b.ge	4450cc <argp_parse@@Base+0x52ec>  // b.tcont
  445050:	cmp	x1, #0xa
  445054:	mov	x19, #0xa                   	// #10
  445058:	csel	x1, x1, x19, cs  // cs = hs, nlast
  44505c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  445060:	orr	x19, x1, #0x1
  445064:	movk	x4, #0xaaab
  445068:	cmn	x19, #0x1
  44506c:	b.eq	4450cc <argp_parse@@Base+0x52ec>  // b.none
  445070:	umulh	x1, x19, x4
  445074:	cmp	x19, #0x9
  445078:	and	x0, x1, #0xfffffffffffffffe
  44507c:	add	x1, x0, x1, lsr #1
  445080:	sub	x1, x19, x1
  445084:	b.ls	4450bc <argp_parse@@Base+0x52dc>  // b.plast
  445088:	cbz	x1, 4450c0 <argp_parse@@Base+0x52e0>
  44508c:	mov	x3, #0x10                  	// #16
  445090:	mov	x2, #0x9                   	// #9
  445094:	mov	x0, #0x3                   	// #3
  445098:	b	4450a4 <argp_parse@@Base+0x52c4>
  44509c:	add	x3, x3, #0x8
  4450a0:	cbz	x1, 4450c0 <argp_parse@@Base+0x52e0>
  4450a4:	add	x0, x0, #0x2
  4450a8:	add	x2, x2, x3
  4450ac:	cmp	x2, x19
  4450b0:	udiv	x1, x19, x0
  4450b4:	msub	x1, x1, x0, x19
  4450b8:	b.cc	44509c <argp_parse@@Base+0x52bc>  // b.lo, b.ul, b.last
  4450bc:	cbnz	x1, 4450e4 <argp_parse@@Base+0x5304>
  4450c0:	add	x19, x19, #0x2
  4450c4:	cmn	x19, #0x1
  4450c8:	b.ne	445070 <argp_parse@@Base+0x5290>  // b.any
  4450cc:	mov	w19, #0x0                   	// #0
  4450d0:	mov	w0, w19
  4450d4:	ldp	x19, x20, [sp, #16]
  4450d8:	ldr	x21, [sp, #32]
  4450dc:	ldp	x29, x30, [sp], #128
  4450e0:	ret
  4450e4:	cmp	xzr, x19, lsr #61
  4450e8:	cset	x0, ne  // ne = any
  4450ec:	tbnz	x19, #60, 4450cc <argp_parse@@Base+0x52ec>
  4450f0:	cbnz	x0, 4450cc <argp_parse@@Base+0x52ec>
  4450f4:	ldr	x0, [x20, #16]
  4450f8:	cmp	x0, x19
  4450fc:	b.eq	4451a0 <argp_parse@@Base+0x53c0>  // b.none
  445100:	mov	x0, x19
  445104:	mov	x1, #0x10                  	// #16
  445108:	bl	4044c0 <calloc@plt>
  44510c:	str	x0, [sp, #48]
  445110:	cbz	x0, 4450cc <argp_parse@@Base+0x52ec>
  445114:	ldp	x5, x4, [x20, #64]
  445118:	add	x3, x0, x19, lsl #4
  44511c:	ldr	q0, [x20, #48]
  445120:	add	x0, sp, #0x30
  445124:	mov	x1, x20
  445128:	mov	w2, #0x0                   	// #0
  44512c:	stp	x3, x19, [sp, #56]
  445130:	stp	xzr, xzr, [sp, #72]
  445134:	str	x21, [sp, #88]
  445138:	str	q0, [sp, #96]
  44513c:	stp	x5, x4, [sp, #112]
  445140:	bl	4445d8 <argp_parse@@Base+0x47f8>
  445144:	ands	w19, w0, #0xff
  445148:	b.ne	4451b8 <argp_parse@@Base+0x53d8>  // b.any
  44514c:	ldr	x0, [sp, #120]
  445150:	str	x0, [x20, #72]
  445154:	add	x1, sp, #0x30
  445158:	mov	x0, x20
  44515c:	mov	w2, #0x1                   	// #1
  445160:	bl	4445d8 <argp_parse@@Base+0x47f8>
  445164:	tst	w0, #0xff
  445168:	b.eq	4451e4 <argp_parse@@Base+0x5404>  // b.none
  44516c:	add	x1, sp, #0x30
  445170:	mov	x0, x20
  445174:	mov	w2, #0x0                   	// #0
  445178:	bl	4445d8 <argp_parse@@Base+0x47f8>
  44517c:	tst	w0, #0xff
  445180:	b.eq	4451e4 <argp_parse@@Base+0x5404>  // b.none
  445184:	ldr	x0, [sp, #48]
  445188:	bl	4047b0 <free@plt>
  44518c:	mov	w0, w19
  445190:	ldp	x19, x20, [sp, #16]
  445194:	ldr	x21, [sp, #32]
  445198:	ldp	x29, x30, [sp], #128
  44519c:	ret
  4451a0:	mov	w19, #0x1                   	// #1
  4451a4:	mov	w0, w19
  4451a8:	ldp	x19, x20, [sp, #16]
  4451ac:	ldr	x21, [sp, #32]
  4451b0:	ldp	x29, x30, [sp], #128
  4451b4:	ret
  4451b8:	ldr	x0, [x20]
  4451bc:	bl	4047b0 <free@plt>
  4451c0:	ldp	q1, q0, [sp, #48]
  4451c4:	ldr	x0, [sp, #120]
  4451c8:	str	x0, [x20, #72]
  4451cc:	stp	q1, q0, [x20]
  4451d0:	mov	w0, w19
  4451d4:	ldp	x19, x20, [sp, #16]
  4451d8:	ldr	x21, [sp, #32]
  4451dc:	ldp	x29, x30, [sp], #128
  4451e0:	ret
  4451e4:	bl	404650 <abort@plt>
  4451e8:	stp	x29, x30, [sp, #-64]!
  4451ec:	mov	x29, sp
  4451f0:	stp	x19, x20, [sp, #16]
  4451f4:	str	x21, [sp, #32]
  4451f8:	cbz	x1, 445368 <argp_parse@@Base+0x5588>
  4451fc:	mov	w3, #0x0                   	// #0
  445200:	mov	x21, x2
  445204:	mov	x19, x0
  445208:	mov	x20, x1
  44520c:	add	x2, sp, #0x38
  445210:	bl	444488 <argp_parse@@Base+0x46a8>
  445214:	mov	x3, x0
  445218:	cbz	x0, 445238 <argp_parse@@Base+0x5458>
  44521c:	mov	w0, #0x0                   	// #0
  445220:	cbz	x21, 445228 <argp_parse@@Base+0x5448>
  445224:	str	x3, [x21]
  445228:	ldp	x19, x20, [sp, #16]
  44522c:	ldr	x21, [sp, #32]
  445230:	ldp	x29, x30, [sp], #64
  445234:	ret
  445238:	ldr	x0, [x19, #16]
  44523c:	ldr	x1, [x19, #40]
  445240:	ucvtf	s0, x0
  445244:	ldr	x0, [x19, #24]
  445248:	ldr	s2, [x1, #8]
  44524c:	ucvtf	s1, x0
  445250:	fmul	s3, s2, s0
  445254:	fcmpe	s1, s3
  445258:	b.gt	4452a4 <argp_parse@@Base+0x54c4>
  44525c:	ldr	x21, [sp, #56]
  445260:	ldr	x0, [x21]
  445264:	cbz	x0, 4453a0 <argp_parse@@Base+0x55c0>
  445268:	ldr	x0, [x19, #72]
  44526c:	cbz	x0, 4453cc <argp_parse@@Base+0x55ec>
  445270:	ldr	x1, [x0, #8]
  445274:	str	x1, [x19, #72]
  445278:	ldr	x2, [x21, #8]
  44527c:	ldr	x1, [x19, #32]
  445280:	stp	x20, x2, [x0]
  445284:	str	x0, [x21, #8]
  445288:	add	x1, x1, #0x1
  44528c:	str	x1, [x19, #32]
  445290:	mov	w0, #0x1                   	// #1
  445294:	ldp	x19, x20, [sp, #16]
  445298:	ldr	x21, [sp, #32]
  44529c:	ldp	x29, x30, [sp], #64
  4452a0:	ret
  4452a4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4452a8:	add	x2, x2, #0x610
  4452ac:	cmp	x1, x2
  4452b0:	b.eq	4453ec <argp_parse@@Base+0x560c>  // b.none
  4452b4:	mov	w0, #0xcccd                	// #52429
  4452b8:	movk	w0, #0x3dcc, lsl #16
  4452bc:	fmov	s3, w0
  4452c0:	fcmpe	s2, s3
  4452c4:	b.le	44536c <argp_parse@@Base+0x558c>
  4452c8:	mov	w0, #0x6666                	// #26214
  4452cc:	movk	w0, #0x3f66, lsl #16
  4452d0:	fmov	s4, w0
  4452d4:	fcmpe	s2, s4
  4452d8:	b.pl	44536c <argp_parse@@Base+0x558c>  // b.nfrst
  4452dc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4452e0:	ldr	s5, [x1, #12]
  4452e4:	ldr	s4, [x0, #1528]
  4452e8:	fcmpe	s5, s4
  4452ec:	b.le	44536c <argp_parse@@Base+0x558c>
  4452f0:	ldr	s4, [x1]
  4452f4:	fcmpe	s4, #0.0
  4452f8:	b.lt	44536c <argp_parse@@Base+0x558c>  // b.tstop
  4452fc:	fadd	s3, s4, s3
  445300:	ldr	s4, [x1, #4]
  445304:	fcmpe	s3, s4
  445308:	b.pl	44536c <argp_parse@@Base+0x558c>  // b.nfrst
  44530c:	fmov	s6, #1.000000000000000000e+00
  445310:	fcmpe	s4, s6
  445314:	b.hi	44536c <argp_parse@@Base+0x558c>  // b.pmore
  445318:	fcmpe	s2, s3
  44531c:	b.le	44536c <argp_parse@@Base+0x558c>
  445320:	ldrb	w0, [x1, #16]
  445324:	fmul	s0, s0, s5
  445328:	cbz	w0, 445398 <argp_parse@@Base+0x55b8>
  44532c:	mov	w0, #0x5f800000            	// #1602224128
  445330:	fmov	s1, w0
  445334:	fcmpe	s0, s1
  445338:	b.ge	4453d8 <argp_parse@@Base+0x55f8>  // b.tcont
  44533c:	fcvtzu	x1, s0
  445340:	mov	x0, x19
  445344:	bl	445010 <argp_parse@@Base+0x5230>
  445348:	tst	w0, #0xff
  44534c:	b.eq	4453d8 <argp_parse@@Base+0x55f8>  // b.none
  445350:	add	x2, sp, #0x38
  445354:	mov	x1, x20
  445358:	mov	x0, x19
  44535c:	mov	w3, #0x0                   	// #0
  445360:	bl	444488 <argp_parse@@Base+0x46a8>
  445364:	cbz	x0, 44525c <argp_parse@@Base+0x547c>
  445368:	bl	404650 <abort@plt>
  44536c:	mov	w0, #0xcccd                	// #52429
  445370:	str	x2, [x19, #40]
  445374:	movk	w0, #0x3f4c, lsl #16
  445378:	fmov	s2, w0
  44537c:	fmul	s3, s0, s2
  445380:	fcmpe	s1, s3
  445384:	b.le	44525c <argp_parse@@Base+0x547c>
  445388:	mov	w0, #0xfdf4                	// #65012
  44538c:	movk	w0, #0x3fb4, lsl #16
  445390:	fmov	s1, w0
  445394:	fmul	s0, s0, s1
  445398:	fmul	s0, s0, s2
  44539c:	b	44532c <argp_parse@@Base+0x554c>
  4453a0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4453a4:	ldur	q0, [x19, #24]
  4453a8:	str	x20, [x21]
  4453ac:	ldr	q1, [x0, #1536]
  4453b0:	mov	w0, #0x1                   	// #1
  4453b4:	ldr	x21, [sp, #32]
  4453b8:	add	v0.2d, v0.2d, v1.2d
  4453bc:	stur	q0, [x19, #24]
  4453c0:	ldp	x19, x20, [sp, #16]
  4453c4:	ldp	x29, x30, [sp], #64
  4453c8:	ret
  4453cc:	mov	x0, #0x10                  	// #16
  4453d0:	bl	404310 <malloc@plt>
  4453d4:	cbnz	x0, 445278 <argp_parse@@Base+0x5498>
  4453d8:	mov	w0, #0xffffffff            	// #-1
  4453dc:	ldp	x19, x20, [sp, #16]
  4453e0:	ldr	x21, [sp, #32]
  4453e4:	ldp	x29, x30, [sp], #64
  4453e8:	ret
  4453ec:	mov	w0, #0xfdf4                	// #65012
  4453f0:	movk	w0, #0x3fb4, lsl #16
  4453f4:	fmov	s1, w0
  4453f8:	mov	w0, #0xcccd                	// #52429
  4453fc:	fmul	s0, s0, s1
  445400:	movk	w0, #0x3f4c, lsl #16
  445404:	fmov	s2, w0
  445408:	fmul	s0, s0, s2
  44540c:	b	44532c <argp_parse@@Base+0x554c>
  445410:	stp	x29, x30, [sp, #-64]!
  445414:	mov	x29, sp
  445418:	stp	x19, x20, [sp, #16]
  44541c:	stp	x21, x22, [sp, #32]
  445420:	cbz	x1, 44558c <argp_parse@@Base+0x57ac>
  445424:	mov	x19, x0
  445428:	mov	x21, x1
  44542c:	add	x2, sp, #0x38
  445430:	mov	w3, #0x0                   	// #0
  445434:	bl	444488 <argp_parse@@Base+0x46a8>
  445438:	mov	x20, x0
  44543c:	cbz	x0, 445454 <argp_parse@@Base+0x5674>
  445440:	mov	x0, x20
  445444:	ldp	x19, x20, [sp, #16]
  445448:	ldp	x21, x22, [sp, #32]
  44544c:	ldp	x29, x30, [sp], #64
  445450:	ret
  445454:	ldr	x0, [x19, #16]
  445458:	ldr	x1, [x19, #40]
  44545c:	ucvtf	s0, x0
  445460:	ldr	x0, [x19, #24]
  445464:	ldr	s2, [x1, #8]
  445468:	ucvtf	s1, x0
  44546c:	fmul	s3, s2, s0
  445470:	fcmpe	s1, s3
  445474:	b.gt	4454c4 <argp_parse@@Base+0x56e4>
  445478:	ldr	x22, [sp, #56]
  44547c:	ldr	x0, [x22]
  445480:	cbz	x0, 4455c4 <argp_parse@@Base+0x57e4>
  445484:	ldr	x0, [x19, #72]
  445488:	cbz	x0, 4455f4 <argp_parse@@Base+0x5814>
  44548c:	ldr	x1, [x0, #8]
  445490:	str	x1, [x19, #72]
  445494:	ldr	x2, [x22, #8]
  445498:	mov	x20, x21
  44549c:	ldr	x1, [x19, #32]
  4454a0:	stp	x21, x2, [x0]
  4454a4:	str	x0, [x22, #8]
  4454a8:	add	x0, x1, #0x1
  4454ac:	str	x0, [x19, #32]
  4454b0:	mov	x0, x20
  4454b4:	ldp	x19, x20, [sp, #16]
  4454b8:	ldp	x21, x22, [sp, #32]
  4454bc:	ldp	x29, x30, [sp], #64
  4454c0:	ret
  4454c4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4454c8:	add	x2, x2, #0x610
  4454cc:	cmp	x1, x2
  4454d0:	b.eq	445604 <argp_parse@@Base+0x5824>  // b.none
  4454d4:	mov	w0, #0xcccd                	// #52429
  4454d8:	movk	w0, #0x3dcc, lsl #16
  4454dc:	fmov	s3, w0
  4454e0:	fcmpe	s2, s3
  4454e4:	b.le	445590 <argp_parse@@Base+0x57b0>
  4454e8:	mov	w0, #0x6666                	// #26214
  4454ec:	movk	w0, #0x3f66, lsl #16
  4454f0:	fmov	s4, w0
  4454f4:	fcmpe	s2, s4
  4454f8:	b.pl	445590 <argp_parse@@Base+0x57b0>  // b.nfrst
  4454fc:	mov	w0, #0xcccd                	// #52429
  445500:	ldr	s5, [x1, #12]
  445504:	movk	w0, #0x3f8c, lsl #16
  445508:	fmov	s4, w0
  44550c:	fcmpe	s5, s4
  445510:	b.le	445590 <argp_parse@@Base+0x57b0>
  445514:	ldr	s4, [x1]
  445518:	fcmpe	s4, #0.0
  44551c:	b.lt	445590 <argp_parse@@Base+0x57b0>  // b.tstop
  445520:	fadd	s3, s4, s3
  445524:	ldr	s4, [x1, #4]
  445528:	fcmpe	s3, s4
  44552c:	b.pl	445590 <argp_parse@@Base+0x57b0>  // b.nfrst
  445530:	fmov	s6, #1.000000000000000000e+00
  445534:	fcmpe	s4, s6
  445538:	b.hi	445590 <argp_parse@@Base+0x57b0>  // b.pmore
  44553c:	fcmpe	s2, s3
  445540:	b.le	445590 <argp_parse@@Base+0x57b0>
  445544:	ldrb	w0, [x1, #16]
  445548:	fmul	s0, s0, s5
  44554c:	cbz	w0, 4455bc <argp_parse@@Base+0x57dc>
  445550:	mov	w0, #0x5f800000            	// #1602224128
  445554:	fmov	s1, w0
  445558:	fcmpe	s0, s1
  44555c:	b.ge	445440 <argp_parse@@Base+0x5660>  // b.tcont
  445560:	fcvtzu	x1, s0
  445564:	mov	x0, x19
  445568:	bl	445010 <argp_parse@@Base+0x5230>
  44556c:	tst	w0, #0xff
  445570:	b.eq	445440 <argp_parse@@Base+0x5660>  // b.none
  445574:	add	x2, sp, #0x38
  445578:	mov	x1, x21
  44557c:	mov	x0, x19
  445580:	mov	w3, #0x0                   	// #0
  445584:	bl	444488 <argp_parse@@Base+0x46a8>
  445588:	cbz	x0, 445478 <argp_parse@@Base+0x5698>
  44558c:	bl	404650 <abort@plt>
  445590:	mov	w0, #0xcccd                	// #52429
  445594:	str	x2, [x19, #40]
  445598:	movk	w0, #0x3f4c, lsl #16
  44559c:	fmov	s2, w0
  4455a0:	fmul	s3, s0, s2
  4455a4:	fcmpe	s1, s3
  4455a8:	b.le	445478 <argp_parse@@Base+0x5698>
  4455ac:	mov	w0, #0xfdf4                	// #65012
  4455b0:	movk	w0, #0x3fb4, lsl #16
  4455b4:	fmov	s1, w0
  4455b8:	fmul	s0, s0, s1
  4455bc:	fmul	s0, s0, s2
  4455c0:	b	445550 <argp_parse@@Base+0x5770>
  4455c4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4455c8:	mov	x20, x21
  4455cc:	ldur	q0, [x19, #24]
  4455d0:	str	x21, [x22]
  4455d4:	ldr	q1, [x0, #1536]
  4455d8:	mov	x0, x20
  4455dc:	ldp	x21, x22, [sp, #32]
  4455e0:	add	v0.2d, v0.2d, v1.2d
  4455e4:	stur	q0, [x19, #24]
  4455e8:	ldp	x19, x20, [sp, #16]
  4455ec:	ldp	x29, x30, [sp], #64
  4455f0:	ret
  4455f4:	mov	x0, #0x10                  	// #16
  4455f8:	bl	404310 <malloc@plt>
  4455fc:	cbz	x0, 445440 <argp_parse@@Base+0x5660>
  445600:	b	445494 <argp_parse@@Base+0x56b4>
  445604:	mov	w0, #0xfdf4                	// #65012
  445608:	movk	w0, #0x3fb4, lsl #16
  44560c:	fmov	s1, w0
  445610:	mov	w0, #0xcccd                	// #52429
  445614:	fmul	s0, s0, s1
  445618:	movk	w0, #0x3f4c, lsl #16
  44561c:	fmov	s2, w0
  445620:	fmul	s0, s0, s2
  445624:	b	445550 <argp_parse@@Base+0x5770>
  445628:	stp	x29, x30, [sp, #-64]!
  44562c:	mov	w3, #0x1                   	// #1
  445630:	mov	x29, sp
  445634:	add	x2, sp, #0x38
  445638:	stp	x19, x20, [sp, #16]
  44563c:	mov	x19, x0
  445640:	bl	444488 <argp_parse@@Base+0x46a8>
  445644:	mov	x20, x0
  445648:	cbz	x0, 445664 <argp_parse@@Base+0x5884>
  44564c:	ldr	x1, [sp, #56]
  445650:	ldr	x0, [x19, #32]
  445654:	ldr	x1, [x1]
  445658:	sub	x0, x0, #0x1
  44565c:	str	x0, [x19, #32]
  445660:	cbz	x1, 445674 <argp_parse@@Base+0x5894>
  445664:	mov	x0, x20
  445668:	ldp	x19, x20, [sp, #16]
  44566c:	ldp	x29, x30, [sp], #64
  445670:	ret
  445674:	ldr	x0, [x19, #16]
  445678:	ldr	x1, [x19, #40]
  44567c:	ucvtf	s1, x0
  445680:	ldr	x0, [x19, #24]
  445684:	ldr	s2, [x1]
  445688:	sub	x0, x0, #0x1
  44568c:	str	x0, [x19, #24]
  445690:	fmul	s3, s2, s1
  445694:	ucvtf	s0, x0
  445698:	fcmpe	s0, s3
  44569c:	b.pl	445664 <argp_parse@@Base+0x5884>  // b.nfrst
  4456a0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4456a4:	add	x0, x0, #0x610
  4456a8:	cmp	x1, x0
  4456ac:	b.eq	445788 <argp_parse@@Base+0x59a8>  // b.none
  4456b0:	mov	w2, #0xcccd                	// #52429
  4456b4:	ldr	s3, [x1, #8]
  4456b8:	movk	w2, #0x3dcc, lsl #16
  4456bc:	fmov	s4, w2
  4456c0:	fcmpe	s3, s4
  4456c4:	b.le	445774 <argp_parse@@Base+0x5994>
  4456c8:	mov	w2, #0x6666                	// #26214
  4456cc:	movk	w2, #0x3f66, lsl #16
  4456d0:	fmov	s5, w2
  4456d4:	fcmpe	s3, s5
  4456d8:	b.pl	445774 <argp_parse@@Base+0x5994>  // b.nfrst
  4456dc:	mov	w2, #0xcccd                	// #52429
  4456e0:	ldr	s6, [x1, #12]
  4456e4:	movk	w2, #0x3f8c, lsl #16
  4456e8:	fmov	s5, w2
  4456ec:	fcmpe	s6, s5
  4456f0:	b.le	445774 <argp_parse@@Base+0x5994>
  4456f4:	fcmpe	s2, #0.0
  4456f8:	b.lt	445774 <argp_parse@@Base+0x5994>  // b.tstop
  4456fc:	fadd	s2, s2, s4
  445700:	ldr	s4, [x1, #4]
  445704:	fcmpe	s2, s4
  445708:	b.pl	445774 <argp_parse@@Base+0x5994>  // b.nfrst
  44570c:	fmov	s5, #1.000000000000000000e+00
  445710:	fcmpe	s4, s5
  445714:	b.hi	445774 <argp_parse@@Base+0x5994>  // b.pmore
  445718:	fcmpe	s3, s2
  44571c:	b.le	445774 <argp_parse@@Base+0x5994>
  445720:	ldrb	w0, [x1, #16]
  445724:	fmul	s1, s1, s4
  445728:	cbnz	w0, 445734 <argp_parse@@Base+0x5954>
  44572c:	nop
  445730:	fmul	s1, s1, s3
  445734:	fcvtzu	x1, s1
  445738:	mov	x0, x19
  44573c:	bl	445010 <argp_parse@@Base+0x5230>
  445740:	tst	w0, #0xff
  445744:	b.ne	445664 <argp_parse@@Base+0x5884>  // b.any
  445748:	str	x21, [sp, #32]
  44574c:	ldr	x21, [x19, #72]
  445750:	cbz	x21, 445768 <argp_parse@@Base+0x5988>
  445754:	nop
  445758:	mov	x0, x21
  44575c:	ldr	x21, [x21, #8]
  445760:	bl	4047b0 <free@plt>
  445764:	cbnz	x21, 445758 <argp_parse@@Base+0x5978>
  445768:	ldr	x21, [sp, #32]
  44576c:	str	xzr, [x19, #72]
  445770:	b	445664 <argp_parse@@Base+0x5884>
  445774:	movi	v2.2s, #0x0
  445778:	str	x0, [x19, #40]
  44577c:	fmul	s2, s1, s2
  445780:	fcmpe	s0, s2
  445784:	b.pl	445664 <argp_parse@@Base+0x5884>  // b.nfrst
  445788:	mov	w0, #0xcccd                	// #52429
  44578c:	movk	w0, #0x3f4c, lsl #16
  445790:	fmov	s3, w0
  445794:	b	445730 <argp_parse@@Base+0x5950>
  445798:	stp	x29, x30, [sp, #-240]!
  44579c:	mov	x29, sp
  4457a0:	stp	x23, x24, [sp, #48]
  4457a4:	mov	x23, x0
  4457a8:	and	w0, w2, #0x3
  4457ac:	stp	x19, x20, [sp, #16]
  4457b0:	mov	w19, w2
  4457b4:	mov	x20, x4
  4457b8:	stp	x21, x22, [sp, #32]
  4457bc:	mov	x21, x1
  4457c0:	stp	x25, x26, [sp, #64]
  4457c4:	mov	x26, x3
  4457c8:	stp	x27, x28, [sp, #80]
  4457cc:	str	w0, [sp, #96]
  4457d0:	and	w0, w2, #0x20
  4457d4:	str	w0, [sp, #156]
  4457d8:	tbnz	w19, #5, 445ea0 <argp_parse@@Base+0x60c0>
  4457dc:	mov	x0, #0x3e8                 	// #1000
  4457e0:	mov	w25, w0
  4457e4:	str	x0, [sp, #144]
  4457e8:	bl	404210 <localeconv@plt>
  4457ec:	mov	x24, x0
  4457f0:	ldr	x27, [x0]
  4457f4:	mov	x0, x27
  4457f8:	bl	403ff0 <strlen@plt>
  4457fc:	mov	x28, x0
  445800:	sub	x0, x0, #0x1
  445804:	cmp	x0, #0xf
  445808:	b.ls	445818 <argp_parse@@Base+0x5a38>  // b.plast
  44580c:	adrp	x27, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  445810:	add	x27, x27, #0x348
  445814:	mov	x28, #0x1                   	// #1
  445818:	ldp	x22, x24, [x24, #8]
  44581c:	add	x0, x21, #0x287
  445820:	str	x0, [sp, #120]
  445824:	mov	x0, x22
  445828:	bl	403ff0 <strlen@plt>
  44582c:	cmp	x0, #0x10
  445830:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  445834:	add	x0, x0, #0x7e8
  445838:	csel	x22, x0, x22, hi  // hi = pmore
  44583c:	cmp	x20, x26
  445840:	b.hi	445bf0 <argp_parse@@Base+0x5e10>  // b.pmore
  445844:	udiv	x0, x26, x20
  445848:	msub	x1, x0, x20, x26
  44584c:	cbnz	x1, 445860 <argp_parse@@Base+0x5a80>
  445850:	mul	x4, x23, x0
  445854:	udiv	x0, x4, x0
  445858:	cmp	x0, x23
  44585c:	b.eq	446028 <argp_parse@@Base+0x6248>  // b.none
  445860:	mov	x0, x26
  445864:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445868:	mov	x0, x20
  44586c:	str	q0, [sp, #96]
  445870:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445874:	mov	v1.16b, v0.16b
  445878:	ldr	q2, [sp, #96]
  44587c:	mov	v0.16b, v2.16b
  445880:	bl	466120 <_obstack_memory_used@@Base+0x14d10>
  445884:	mov	x0, x23
  445888:	str	q0, [sp, #96]
  44588c:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445890:	mov	v1.16b, v0.16b
  445894:	ldr	q2, [sp, #96]
  445898:	mov	v0.16b, v2.16b
  44589c:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  4458a0:	str	q0, [sp, #96]
  4458a4:	tbz	w19, #4, 445eb0 <argp_parse@@Base+0x60d0>
  4458a8:	mov	w0, w25
  4458ac:	bl	4675c8 <_obstack_memory_used@@Base+0x161b8>
  4458b0:	mov	v1.16b, v0.16b
  4458b4:	str	q0, [sp, #128]
  4458b8:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  4458bc:	mov	v4.16b, v0.16b
  4458c0:	ldr	q0, [sp, #96]
  4458c4:	mov	v1.16b, v4.16b
  4458c8:	str	q4, [sp, #160]
  4458cc:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  4458d0:	ldr	q2, [sp, #128]
  4458d4:	tbnz	w0, #31, 446314 <argp_parse@@Base+0x6534>
  4458d8:	ldr	q4, [sp, #160]
  4458dc:	mov	v0.16b, v2.16b
  4458e0:	str	q2, [sp, #176]
  4458e4:	mov	v1.16b, v4.16b
  4458e8:	str	q4, [sp, #128]
  4458ec:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  4458f0:	mov	v6.16b, v0.16b
  4458f4:	ldr	q0, [sp, #96]
  4458f8:	mov	v1.16b, v6.16b
  4458fc:	str	q6, [sp, #160]
  445900:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  445904:	ldr	q4, [sp, #128]
  445908:	tbnz	w0, #31, 446320 <argp_parse@@Base+0x6540>
  44590c:	ldr	q6, [sp, #160]
  445910:	ldr	q2, [sp, #176]
  445914:	mov	v1.16b, v6.16b
  445918:	str	q6, [sp, #128]
  44591c:	mov	v0.16b, v2.16b
  445920:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  445924:	mov	v4.16b, v0.16b
  445928:	ldr	q0, [sp, #96]
  44592c:	mov	v1.16b, v4.16b
  445930:	str	q4, [sp, #160]
  445934:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  445938:	ldr	q6, [sp, #128]
  44593c:	tbnz	w0, #31, 446330 <argp_parse@@Base+0x6550>
  445940:	ldr	q4, [sp, #160]
  445944:	ldr	q2, [sp, #176]
  445948:	mov	v1.16b, v4.16b
  44594c:	str	q4, [sp, #128]
  445950:	mov	v0.16b, v2.16b
  445954:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  445958:	mov	v6.16b, v0.16b
  44595c:	ldr	q0, [sp, #96]
  445960:	mov	v1.16b, v6.16b
  445964:	str	q6, [sp, #160]
  445968:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  44596c:	ldr	q4, [sp, #128]
  445970:	tbnz	w0, #31, 446354 <argp_parse@@Base+0x6574>
  445974:	ldr	q6, [sp, #160]
  445978:	ldr	q2, [sp, #176]
  44597c:	mov	v1.16b, v6.16b
  445980:	str	q6, [sp, #128]
  445984:	mov	v0.16b, v2.16b
  445988:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  44598c:	mov	v4.16b, v0.16b
  445990:	ldr	q0, [sp, #96]
  445994:	mov	v1.16b, v4.16b
  445998:	str	q4, [sp, #160]
  44599c:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  4459a0:	ldr	q6, [sp, #128]
  4459a4:	tbnz	w0, #31, 446364 <argp_parse@@Base+0x6584>
  4459a8:	ldr	q4, [sp, #160]
  4459ac:	ldr	q2, [sp, #176]
  4459b0:	mov	v1.16b, v4.16b
  4459b4:	str	q4, [sp, #128]
  4459b8:	mov	v0.16b, v2.16b
  4459bc:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  4459c0:	mov	v6.16b, v0.16b
  4459c4:	ldr	q0, [sp, #96]
  4459c8:	mov	v1.16b, v6.16b
  4459cc:	str	q6, [sp, #160]
  4459d0:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  4459d4:	ldr	q4, [sp, #128]
  4459d8:	tbnz	w0, #31, 446374 <argp_parse@@Base+0x6594>
  4459dc:	ldr	q6, [sp, #160]
  4459e0:	ldr	q2, [sp, #176]
  4459e4:	mov	v1.16b, v6.16b
  4459e8:	str	q6, [sp, #176]
  4459ec:	mov	v0.16b, v2.16b
  4459f0:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  4459f4:	mov	v2.16b, v0.16b
  4459f8:	ldr	q0, [sp, #96]
  4459fc:	mov	w0, #0x8                   	// #8
  445a00:	mov	v1.16b, v2.16b
  445a04:	str	w0, [sp, #128]
  445a08:	str	q2, [sp, #160]
  445a0c:	bl	466b58 <_obstack_memory_used@@Base+0x15748>
  445a10:	ldr	q2, [sp, #160]
  445a14:	ldr	q6, [sp, #176]
  445a18:	tbnz	w0, #31, 446384 <argp_parse@@Base+0x65a4>
  445a1c:	ldr	q0, [sp, #96]
  445a20:	mov	v1.16b, v2.16b
  445a24:	add	x28, x28, #0x1
  445a28:	and	w25, w19, #0x3
  445a2c:	bl	466120 <_obstack_memory_used@@Base+0x14d10>
  445a30:	str	q0, [sp, #96]
  445a34:	ands	w0, w19, #0x20
  445a38:	cset	x27, eq  // eq = none
  445a3c:	cmp	w25, #0x1
  445a40:	add	x27, x27, #0x1
  445a44:	add	x27, x27, x28
  445a48:	b.eq	44615c <argp_parse@@Base+0x637c>  // b.none
  445a4c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445a50:	add	x0, x0, #0x6a0
  445a54:	ldr	q1, [x0]
  445a58:	bl	466ca0 <_obstack_memory_used@@Base+0x15890>
  445a5c:	ldr	q2, [sp, #96]
  445a60:	tbz	w0, #31, 445aa0 <argp_parse@@Base+0x5cc0>
  445a64:	ldr	q0, [sp, #96]
  445a68:	bl	467630 <_obstack_memory_used@@Base+0x16220>
  445a6c:	mov	x23, x0
  445a70:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445a74:	mov	v2.16b, v0.16b
  445a78:	cbnz	w25, 445aa0 <argp_parse@@Base+0x5cc0>
  445a7c:	mov	v1.16b, v0.16b
  445a80:	str	q0, [sp, #160]
  445a84:	ldr	q0, [sp, #96]
  445a88:	bl	466a50 <_obstack_memory_used@@Base+0x15640>
  445a8c:	ldr	q2, [sp, #160]
  445a90:	cbz	w0, 445aa0 <argp_parse@@Base+0x5cc0>
  445a94:	add	x0, x23, #0x1
  445a98:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445a9c:	mov	v2.16b, v0.16b
  445aa0:	mov	v0.16b, v2.16b
  445aa4:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445aa8:	add	x3, x3, #0x630
  445aac:	mov	x2, #0xffffffffffffffff    	// #-1
  445ab0:	mov	w1, #0x1                   	// #1
  445ab4:	mov	x0, x21
  445ab8:	bl	404010 <__sprintf_chk@plt>
  445abc:	mov	x0, x21
  445ac0:	bl	403ff0 <strlen@plt>
  445ac4:	mov	x2, x0
  445ac8:	cmp	x0, x27
  445acc:	b.ls	44600c <argp_parse@@Base+0x622c>  // b.plast
  445ad0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445ad4:	add	x0, x0, #0x6b0
  445ad8:	ldr	q0, [sp, #96]
  445adc:	ldr	q1, [x0]
  445ae0:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  445ae4:	mov	v2.16b, v0.16b
  445ae8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445aec:	add	x0, x0, #0x6a0
  445af0:	mov	v0.16b, v2.16b
  445af4:	str	q2, [sp, #96]
  445af8:	ldr	q1, [x0]
  445afc:	bl	466ca0 <_obstack_memory_used@@Base+0x15890>
  445b00:	ldr	q2, [sp, #96]
  445b04:	tbz	w0, #31, 445b50 <argp_parse@@Base+0x5d70>
  445b08:	mov	v0.16b, v2.16b
  445b0c:	bl	467630 <_obstack_memory_used@@Base+0x16220>
  445b10:	mov	x23, x0
  445b14:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445b18:	mov	v4.16b, v0.16b
  445b1c:	and	w0, w19, #0x3
  445b20:	cbnz	w0, 445b4c <argp_parse@@Base+0x5d6c>
  445b24:	ldr	q2, [sp, #96]
  445b28:	mov	v1.16b, v4.16b
  445b2c:	str	q4, [sp, #96]
  445b30:	mov	v0.16b, v2.16b
  445b34:	bl	466a50 <_obstack_memory_used@@Base+0x15640>
  445b38:	ldr	q4, [sp, #96]
  445b3c:	cbz	w0, 445b4c <argp_parse@@Base+0x5d6c>
  445b40:	add	x0, x23, #0x1
  445b44:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445b48:	mov	v4.16b, v0.16b
  445b4c:	mov	v2.16b, v4.16b
  445b50:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445b54:	add	x0, x0, #0x6b0
  445b58:	mov	v0.16b, v2.16b
  445b5c:	ldr	q1, [x0]
  445b60:	bl	466120 <_obstack_memory_used@@Base+0x14d10>
  445b64:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445b68:	add	x3, x3, #0x628
  445b6c:	mov	x2, #0xffffffffffffffff    	// #-1
  445b70:	mov	w1, #0x1                   	// #1
  445b74:	mov	x0, x21
  445b78:	bl	404010 <__sprintf_chk@plt>
  445b7c:	mov	x0, x21
  445b80:	bl	403ff0 <strlen@plt>
  445b84:	mov	x2, x0
  445b88:	mov	x23, x0
  445b8c:	add	x0, x21, #0x287
  445b90:	mov	x1, x21
  445b94:	sub	x28, x0, x2
  445b98:	add	x23, x28, x23
  445b9c:	mov	x0, x28
  445ba0:	bl	403f80 <memmove@plt>
  445ba4:	tbnz	w19, #2, 445f60 <argp_parse@@Base+0x6180>
  445ba8:	tbz	w19, #7, 445bc8 <argp_parse@@Base+0x5de8>
  445bac:	ldr	w0, [sp, #128]
  445bb0:	cmn	w0, #0x1
  445bb4:	b.eq	4460b4 <argp_parse@@Base+0x62d4>  // b.none
  445bb8:	ldr	w1, [sp, #128]
  445bbc:	and	w0, w19, #0x100
  445bc0:	orr	w1, w0, w1
  445bc4:	cbnz	w1, 4461a4 <argp_parse@@Base+0x63c4>
  445bc8:	ldr	x0, [sp, #120]
  445bcc:	strb	wzr, [x0]
  445bd0:	mov	x0, x28
  445bd4:	ldp	x19, x20, [sp, #16]
  445bd8:	ldp	x21, x22, [sp, #32]
  445bdc:	ldp	x23, x24, [sp, #48]
  445be0:	ldp	x25, x26, [sp, #64]
  445be4:	ldp	x27, x28, [sp, #80]
  445be8:	ldp	x29, x30, [sp], #240
  445bec:	ret
  445bf0:	cbz	x26, 445860 <argp_parse@@Base+0x5a80>
  445bf4:	udiv	x5, x20, x26
  445bf8:	msub	x0, x5, x26, x20
  445bfc:	cbnz	x0, 445860 <argp_parse@@Base+0x5a80>
  445c00:	udiv	x4, x23, x5
  445c04:	msub	x23, x4, x5, x23
  445c08:	add	x23, x23, x23, lsl #2
  445c0c:	lsl	x1, x23, #1
  445c10:	udiv	x2, x1, x5
  445c14:	msub	x1, x2, x5, x1
  445c18:	lsl	x1, x1, #1
  445c1c:	cmp	x5, x1
  445c20:	b.ls	446210 <argp_parse@@Base+0x6430>  // b.plast
  445c24:	cmp	x1, #0x0
  445c28:	cset	w0, ne  // ne = any
  445c2c:	and	w5, w19, #0x10
  445c30:	tbz	w19, #4, 446038 <argp_parse@@Base+0x6258>
  445c34:	ldr	x3, [sp, #144]
  445c38:	cmp	x4, x3
  445c3c:	b.cc	44621c <argp_parse@@Base+0x643c>  // b.lo, b.ul, b.last
  445c40:	udiv	x1, x4, x3
  445c44:	asr	w7, w0, #1
  445c48:	msub	x3, x1, x3, x4
  445c4c:	mov	x4, x1
  445c50:	add	w3, w3, w3, lsl #2
  445c54:	add	w2, w2, w3, lsl #1
  445c58:	udiv	w6, w2, w25
  445c5c:	msub	w3, w6, w25, w2
  445c60:	mov	w2, w6
  445c64:	add	w3, w7, w3, lsl #1
  445c68:	add	w0, w0, w3
  445c6c:	cmp	w25, w3
  445c70:	b.hi	446254 <argp_parse@@Base+0x6474>  // b.pmore
  445c74:	cmp	w25, w0
  445c78:	mov	w3, #0x3                   	// #3
  445c7c:	mov	w0, #0x2                   	// #2
  445c80:	csel	w0, w3, w0, cc  // cc = lo, ul, last
  445c84:	mov	w7, #0x1                   	// #1
  445c88:	ldr	x3, [sp, #144]
  445c8c:	cmp	x3, x1
  445c90:	b.hi	44647c <argp_parse@@Base+0x669c>  // b.pmore
  445c94:	mov	x2, x3
  445c98:	asr	w7, w0, #1
  445c9c:	udiv	x3, x1, x3
  445ca0:	msub	x1, x3, x2, x1
  445ca4:	mov	x4, x3
  445ca8:	add	w1, w1, w1, lsl #2
  445cac:	add	w1, w6, w1, lsl #1
  445cb0:	udiv	w8, w1, w25
  445cb4:	msub	w1, w8, w25, w1
  445cb8:	mov	w2, w8
  445cbc:	add	w1, w7, w1, lsl #1
  445cc0:	add	w0, w0, w1
  445cc4:	cmp	w25, w1
  445cc8:	b.hi	4462c4 <argp_parse@@Base+0x64e4>  // b.pmore
  445ccc:	cmp	w25, w0
  445cd0:	mov	w1, #0x3                   	// #3
  445cd4:	mov	w0, #0x2                   	// #2
  445cd8:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  445cdc:	mov	w7, #0x1                   	// #1
  445ce0:	ldr	x1, [sp, #144]
  445ce4:	cmp	x3, x1
  445ce8:	b.cc	446488 <argp_parse@@Base+0x66a8>  // b.lo, b.ul, b.last
  445cec:	udiv	x6, x3, x1
  445cf0:	asr	w7, w0, #1
  445cf4:	msub	x3, x6, x1, x3
  445cf8:	mov	x4, x6
  445cfc:	add	w3, w3, w3, lsl #2
  445d00:	add	w1, w8, w3, lsl #1
  445d04:	udiv	w8, w1, w25
  445d08:	msub	w1, w8, w25, w1
  445d0c:	mov	w2, w8
  445d10:	add	w1, w7, w1, lsl #1
  445d14:	add	w0, w0, w1
  445d18:	cmp	w25, w1
  445d1c:	b.hi	4462d4 <argp_parse@@Base+0x64f4>  // b.pmore
  445d20:	cmp	w0, w25
  445d24:	mov	w1, #0x3                   	// #3
  445d28:	mov	w0, #0x2                   	// #2
  445d2c:	csel	w0, w1, w0, hi  // hi = pmore
  445d30:	mov	w7, #0x1                   	// #1
  445d34:	ldr	x1, [sp, #144]
  445d38:	cmp	x6, x1
  445d3c:	b.cc	446494 <argp_parse@@Base+0x66b4>  // b.lo, b.ul, b.last
  445d40:	udiv	x3, x6, x1
  445d44:	asr	w7, w0, #1
  445d48:	msub	x6, x3, x1, x6
  445d4c:	mov	x4, x3
  445d50:	add	w6, w6, w6, lsl #2
  445d54:	add	w1, w8, w6, lsl #1
  445d58:	udiv	w8, w1, w25
  445d5c:	msub	w1, w8, w25, w1
  445d60:	mov	w2, w8
  445d64:	add	w1, w7, w1, lsl #1
  445d68:	add	w0, w0, w1
  445d6c:	cmp	w25, w1
  445d70:	b.hi	4462e4 <argp_parse@@Base+0x6504>  // b.pmore
  445d74:	cmp	w25, w0
  445d78:	mov	w1, #0x3                   	// #3
  445d7c:	mov	w0, #0x2                   	// #2
  445d80:	csel	w0, w1, w0, cc  // cc = lo, ul, last
  445d84:	mov	w7, #0x1                   	// #1
  445d88:	ldr	x1, [sp, #144]
  445d8c:	cmp	x3, x1
  445d90:	b.cc	4464ac <argp_parse@@Base+0x66cc>  // b.lo, b.ul, b.last
  445d94:	udiv	x6, x3, x1
  445d98:	asr	w7, w0, #1
  445d9c:	msub	x3, x6, x1, x3
  445da0:	mov	x4, x6
  445da4:	add	w3, w3, w3, lsl #2
  445da8:	add	w1, w8, w3, lsl #1
  445dac:	udiv	w3, w1, w25
  445db0:	msub	w1, w3, w25, w1
  445db4:	mov	w2, w3
  445db8:	add	w1, w7, w1, lsl #1
  445dbc:	add	w0, w0, w1
  445dc0:	cmp	w25, w1
  445dc4:	b.hi	4462f4 <argp_parse@@Base+0x6514>  // b.pmore
  445dc8:	cmp	w0, w25
  445dcc:	mov	w1, #0x3                   	// #3
  445dd0:	mov	w0, #0x2                   	// #2
  445dd4:	csel	w0, w1, w0, hi  // hi = pmore
  445dd8:	mov	w7, #0x1                   	// #1
  445ddc:	ldr	x1, [sp, #144]
  445de0:	cmp	x6, x1
  445de4:	b.cc	4464c4 <argp_parse@@Base+0x66e4>  // b.lo, b.ul, b.last
  445de8:	udiv	x4, x6, x1
  445dec:	asr	w7, w0, #1
  445df0:	msub	x6, x4, x1, x6
  445df4:	add	w6, w6, w6, lsl #2
  445df8:	add	w1, w3, w6, lsl #1
  445dfc:	udiv	w2, w1, w25
  445e00:	msub	w1, w2, w25, w1
  445e04:	add	w1, w7, w1, lsl #1
  445e08:	add	w0, w0, w1
  445e0c:	cmp	w25, w1
  445e10:	b.hi	446304 <argp_parse@@Base+0x6524>  // b.pmore
  445e14:	cmp	w25, w0
  445e18:	mov	w1, #0x2                   	// #2
  445e1c:	mov	w0, #0x3                   	// #3
  445e20:	csel	w0, w1, w0, cs  // cs = hs, nlast
  445e24:	mov	w7, #0x1                   	// #1
  445e28:	mov	w1, #0x6                   	// #6
  445e2c:	str	w1, [sp, #128]
  445e30:	cmp	x4, #0x9
  445e34:	b.hi	446040 <argp_parse@@Base+0x6260>  // b.pmore
  445e38:	ands	w1, w19, #0x3
  445e3c:	csel	w7, w7, wzr, eq  // eq = none
  445e40:	cmp	w1, #0x1
  445e44:	b.eq	4462b0 <argp_parse@@Base+0x64d0>  // b.none
  445e48:	cbnz	w7, 446340 <argp_parse@@Base+0x6560>
  445e4c:	cbnz	w2, 44650c <argp_parse@@Base+0x672c>
  445e50:	add	x23, x21, #0x287
  445e54:	tbnz	w19, #3, 445e8c <argp_parse@@Base+0x60ac>
  445e58:	mov	w0, #0x30                  	// #48
  445e5c:	add	x23, x21, #0x286
  445e60:	strb	w0, [x21, #646]
  445e64:	sub	x23, x23, x28
  445e68:	mov	x2, x28
  445e6c:	mov	x0, x23
  445e70:	mov	x1, x27
  445e74:	str	w5, [sp, #96]
  445e78:	str	x4, [sp, #160]
  445e7c:	bl	403f70 <memcpy@plt>
  445e80:	ldr	w5, [sp, #96]
  445e84:	mov	w0, #0x0                   	// #0
  445e88:	ldr	x4, [sp, #160]
  445e8c:	and	w1, w19, #0x3
  445e90:	cmp	w1, #0x1
  445e94:	b.eq	446078 <argp_parse@@Base+0x6298>  // b.none
  445e98:	mov	w2, #0x0                   	// #0
  445e9c:	b	446050 <argp_parse@@Base+0x6270>
  445ea0:	mov	x0, #0x400                 	// #1024
  445ea4:	mov	w25, w0
  445ea8:	str	x0, [sp, #144]
  445eac:	b	4457e8 <argp_parse@@Base+0x5a08>
  445eb0:	and	w25, w19, #0x3
  445eb4:	cmp	w25, #0x1
  445eb8:	b.eq	445f10 <argp_parse@@Base+0x6130>  // b.none
  445ebc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445ec0:	add	x0, x0, #0x6a0
  445ec4:	ldr	q1, [x0]
  445ec8:	bl	466ca0 <_obstack_memory_used@@Base+0x15890>
  445ecc:	tbz	w0, #31, 445f10 <argp_parse@@Base+0x6130>
  445ed0:	ldr	q0, [sp, #96]
  445ed4:	bl	467630 <_obstack_memory_used@@Base+0x16220>
  445ed8:	mov	x23, x0
  445edc:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445ee0:	mov	v2.16b, v0.16b
  445ee4:	cbnz	w25, 445f0c <argp_parse@@Base+0x612c>
  445ee8:	ldr	q0, [sp, #96]
  445eec:	mov	v1.16b, v2.16b
  445ef0:	str	q2, [sp, #96]
  445ef4:	bl	466a50 <_obstack_memory_used@@Base+0x15640>
  445ef8:	ldr	q2, [sp, #96]
  445efc:	cbz	w0, 445f0c <argp_parse@@Base+0x612c>
  445f00:	add	x0, x23, #0x1
  445f04:	bl	467750 <_obstack_memory_used@@Base+0x16340>
  445f08:	mov	v2.16b, v0.16b
  445f0c:	str	q2, [sp, #96]
  445f10:	ldr	q0, [sp, #96]
  445f14:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  445f18:	add	x3, x3, #0x628
  445f1c:	mov	x2, #0xffffffffffffffff    	// #-1
  445f20:	mov	w1, #0x1                   	// #1
  445f24:	mov	x0, x21
  445f28:	bl	404010 <__sprintf_chk@plt>
  445f2c:	mov	x0, x21
  445f30:	bl	403ff0 <strlen@plt>
  445f34:	mov	x2, x0
  445f38:	mov	w0, #0xffffffff            	// #-1
  445f3c:	mov	x23, x2
  445f40:	str	w0, [sp, #128]
  445f44:	add	x0, x21, #0x287
  445f48:	mov	x1, x21
  445f4c:	sub	x28, x0, x2
  445f50:	add	x23, x28, x23
  445f54:	mov	x0, x28
  445f58:	bl	403f80 <memmove@plt>
  445f5c:	tbz	w19, #2, 445ba8 <argp_parse@@Base+0x5dc8>
  445f60:	mov	x0, x22
  445f64:	sub	x26, x23, x28
  445f68:	bl	403ff0 <strlen@plt>
  445f6c:	mov	x25, #0xffffffffffffffff    	// #-1
  445f70:	mov	x27, x0
  445f74:	mov	x1, x28
  445f78:	mov	x2, x26
  445f7c:	add	x0, sp, #0xc0
  445f80:	mov	x3, #0x29                  	// #41
  445f84:	bl	404250 <__memcpy_chk@plt>
  445f88:	b	445fc0 <argp_parse@@Base+0x61e0>
  445f8c:	sub	x26, x26, x25
  445f90:	add	x0, sp, #0xc0
  445f94:	add	x1, x0, x26
  445f98:	sub	x28, x23, x25
  445f9c:	mov	x2, x25
  445fa0:	sub	x23, x28, x27
  445fa4:	mov	x0, x28
  445fa8:	bl	403f70 <memcpy@plt>
  445fac:	cbz	x26, 445ba8 <argp_parse@@Base+0x5dc8>
  445fb0:	mov	x2, x27
  445fb4:	mov	x1, x22
  445fb8:	mov	x0, x23
  445fbc:	bl	403f70 <memcpy@plt>
  445fc0:	ldrb	w0, [x24]
  445fc4:	cmp	x25, x26
  445fc8:	csel	x25, x25, x26, ls  // ls = plast
  445fcc:	cbz	w0, 445f8c <argp_parse@@Base+0x61ac>
  445fd0:	and	x4, x0, #0xff
  445fd4:	cmp	w0, #0xff
  445fd8:	b.eq	445ff8 <argp_parse@@Base+0x6218>  // b.none
  445fdc:	cmp	x26, w0, uxtb
  445fe0:	add	x0, sp, #0xc0
  445fe4:	csel	x25, x4, x26, cs  // cs = hs, nlast
  445fe8:	add	x24, x24, #0x1
  445fec:	sub	x26, x26, x25
  445ff0:	add	x1, x0, x26
  445ff4:	b	445f98 <argp_parse@@Base+0x61b8>
  445ff8:	mov	x25, x26
  445ffc:	add	x1, sp, #0xc0
  446000:	add	x24, x24, #0x1
  446004:	mov	x26, #0x0                   	// #0
  446008:	b	445f98 <argp_parse@@Base+0x61b8>
  44600c:	tbz	w19, #3, 446020 <argp_parse@@Base+0x6240>
  446010:	add	x0, x21, x2
  446014:	ldurb	w0, [x0, #-1]
  446018:	cmp	w0, #0x30
  44601c:	b.eq	446264 <argp_parse@@Base+0x6484>  // b.none
  446020:	sub	x23, x2, x28
  446024:	b	445f44 <argp_parse@@Base+0x6164>
  446028:	and	w5, w19, #0x10
  44602c:	mov	w0, #0x0                   	// #0
  446030:	mov	w2, #0x0                   	// #0
  446034:	tbnz	w19, #4, 445c34 <argp_parse@@Base+0x5e54>
  446038:	mov	w1, #0xffffffff            	// #-1
  44603c:	str	w1, [sp, #128]
  446040:	and	w1, w19, #0x3
  446044:	add	x23, x21, #0x287
  446048:	cmp	w1, #0x1
  44604c:	b.eq	4461f4 <argp_parse@@Base+0x6414>  // b.none
  446050:	and	w1, w19, #0x3
  446054:	cbnz	w1, 446078 <argp_parse@@Base+0x6298>
  446058:	add	w0, w0, w2
  44605c:	cmp	w0, #0x0
  446060:	b.le	446078 <argp_parse@@Base+0x6298>
  446064:	add	x4, x4, #0x1
  446068:	cbz	w5, 446078 <argp_parse@@Base+0x6298>
  44606c:	ldr	x0, [sp, #144]
  446070:	cmp	x4, x0
  446074:	b.eq	44628c <argp_parse@@Base+0x64ac>  // b.none
  446078:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  44607c:	mov	x28, x23
  446080:	movk	x2, #0xcccd
  446084:	nop
  446088:	umulh	x1, x4, x2
  44608c:	cmp	x4, #0x9
  446090:	lsr	x1, x1, #3
  446094:	add	x0, x1, x1, lsl #2
  446098:	sub	x0, x4, x0, lsl #1
  44609c:	mov	x4, x1
  4460a0:	add	w0, w0, #0x30
  4460a4:	strb	w0, [x28, #-1]!
  4460a8:	b.hi	446088 <argp_parse@@Base+0x62a8>  // b.pmore
  4460ac:	tbz	w19, #2, 445ba8 <argp_parse@@Base+0x5dc8>
  4460b0:	b	445f60 <argp_parse@@Base+0x6180>
  4460b4:	cmp	x20, #0x1
  4460b8:	b.ls	446394 <argp_parse@@Base+0x65b4>  // b.plast
  4460bc:	ldr	x1, [sp, #144]
  4460c0:	cmp	x20, x1
  4460c4:	b.ls	446524 <argp_parse@@Base+0x6744>  // b.plast
  4460c8:	mul	x0, x1, x1
  4460cc:	cmp	x20, x0
  4460d0:	b.ls	44639c <argp_parse@@Base+0x65bc>  // b.plast
  4460d4:	mul	x0, x1, x0
  4460d8:	cmp	x20, x0
  4460dc:	b.ls	4463c0 <argp_parse@@Base+0x65e0>  // b.plast
  4460e0:	mul	x0, x1, x0
  4460e4:	cmp	x20, x0
  4460e8:	b.ls	4464d0 <argp_parse@@Base+0x66f0>  // b.plast
  4460ec:	mul	x0, x1, x0
  4460f0:	cmp	x20, x0
  4460f4:	b.ls	4463e4 <argp_parse@@Base+0x6604>  // b.plast
  4460f8:	mul	x0, x1, x0
  4460fc:	cmp	x20, x0
  446100:	b.ls	446408 <argp_parse@@Base+0x6628>  // b.plast
  446104:	mul	x0, x1, x0
  446108:	cmp	x20, x0
  44610c:	and	w0, w19, #0x100
  446110:	b.ls	446548 <argp_parse@@Base+0x6768>  // b.plast
  446114:	tbnz	w19, #6, 446238 <argp_parse@@Base+0x6458>
  446118:	mov	w1, #0x8                   	// #8
  44611c:	str	w1, [sp, #128]
  446120:	ldr	w1, [sp, #156]
  446124:	cmp	w1, #0x0
  446128:	cset	w4, ne  // ne = any
  44612c:	ldr	w3, [sp, #128]
  446130:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446134:	add	x2, x2, #0x6c0
  446138:	ldr	x1, [sp, #120]
  44613c:	ldrb	w2, [x2, w3, sxtw]
  446140:	strb	w2, [x1], #1
  446144:	cbz	w0, 4461ec <argp_parse@@Base+0x640c>
  446148:	cbnz	w4, 446224 <argp_parse@@Base+0x6444>
  44614c:	mov	w0, #0x42                  	// #66
  446150:	strb	w0, [x1], #1
  446154:	str	x1, [sp, #120]
  446158:	b	445bc8 <argp_parse@@Base+0x5de8>
  44615c:	and	w1, w19, #0x3
  446160:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446164:	add	x3, x3, #0x630
  446168:	mov	x2, #0xffffffffffffffff    	// #-1
  44616c:	mov	x0, x21
  446170:	bl	404010 <__sprintf_chk@plt>
  446174:	mov	x0, x21
  446178:	bl	403ff0 <strlen@plt>
  44617c:	mov	x2, x0
  446180:	cmp	x0, x27
  446184:	b.ls	44600c <argp_parse@@Base+0x622c>  // b.plast
  446188:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44618c:	add	x0, x0, #0x6b0
  446190:	ldr	q0, [sp, #96]
  446194:	ldr	q1, [x0]
  446198:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  44619c:	mov	v2.16b, v0.16b
  4461a0:	b	445b50 <argp_parse@@Base+0x5d70>
  4461a4:	tbz	w19, #6, 4461b8 <argp_parse@@Base+0x63d8>
  4461a8:	add	x1, x21, #0x288
  4461ac:	str	x1, [sp, #120]
  4461b0:	mov	w1, #0x20                  	// #32
  4461b4:	strb	w1, [x21, #647]
  4461b8:	ldr	w1, [sp, #128]
  4461bc:	cbz	w1, 446518 <argp_parse@@Base+0x6738>
  4461c0:	ldr	w1, [sp, #156]
  4461c4:	cmp	w1, #0x0
  4461c8:	ldr	w1, [sp, #128]
  4461cc:	cset	w4, ne  // ne = any
  4461d0:	cmp	w4, #0x0
  4461d4:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  4461d8:	b.ne	44612c <argp_parse@@Base+0x634c>  // b.any
  4461dc:	ldr	x1, [sp, #120]
  4461e0:	mov	w2, #0x6b                  	// #107
  4461e4:	strb	w2, [x1], #1
  4461e8:	cbnz	w0, 44614c <argp_parse@@Base+0x636c>
  4461ec:	str	x1, [sp, #120]
  4461f0:	b	445bc8 <argp_parse@@Base+0x5de8>
  4461f4:	and	x1, x4, #0x1
  4461f8:	add	x0, x1, w0, sxtw
  4461fc:	cmp	x0, #0x0
  446200:	cinc	w2, w2, ne  // ne = any
  446204:	cmp	w2, #0x5
  446208:	b.gt	446064 <argp_parse@@Base+0x6284>
  44620c:	b	446078 <argp_parse@@Base+0x6298>
  446210:	cset	w0, cc  // cc = lo, ul, last
  446214:	add	w0, w0, #0x2
  446218:	b	445c2c <argp_parse@@Base+0x5e4c>
  44621c:	str	wzr, [sp, #128]
  446220:	b	446040 <argp_parse@@Base+0x6260>
  446224:	ldr	x2, [sp, #120]
  446228:	mov	w0, #0x69                  	// #105
  44622c:	add	x1, x2, #0x2
  446230:	strb	w0, [x2, #1]
  446234:	b	44614c <argp_parse@@Base+0x636c>
  446238:	add	x2, x21, #0x288
  44623c:	mov	w1, #0x20                  	// #32
  446240:	str	x2, [sp, #120]
  446244:	mov	w2, #0x8                   	// #8
  446248:	str	w2, [sp, #128]
  44624c:	strb	w1, [x21, #647]
  446250:	b	446120 <argp_parse@@Base+0x6340>
  446254:	cmp	w0, #0x0
  446258:	cset	w0, ne  // ne = any
  44625c:	mov	w7, w0
  446260:	b	445c88 <argp_parse@@Base+0x5ea8>
  446264:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446268:	add	x0, x0, #0x6b0
  44626c:	ldr	q0, [sp, #96]
  446270:	ldr	q1, [x0]
  446274:	bl	466de0 <_obstack_memory_used@@Base+0x159d0>
  446278:	mov	v2.16b, v0.16b
  44627c:	and	w0, w19, #0x3
  446280:	cmp	w0, #0x1
  446284:	b.ne	445ae8 <argp_parse@@Base+0x5d08>  // b.any
  446288:	b	445b50 <argp_parse@@Base+0x5d70>
  44628c:	ldr	w0, [sp, #128]
  446290:	add	w0, w0, #0x1
  446294:	str	w0, [sp, #128]
  446298:	tbz	w19, #3, 446440 <argp_parse@@Base+0x6660>
  44629c:	mov	w0, #0x31                  	// #49
  4462a0:	sturb	w0, [x23, #-1]
  4462a4:	sub	x28, x23, #0x1
  4462a8:	tbz	w19, #2, 445ba8 <argp_parse@@Base+0x5dc8>
  4462ac:	b	445f60 <argp_parse@@Base+0x6180>
  4462b0:	and	w1, w2, #0x1
  4462b4:	add	w1, w1, w0
  4462b8:	cmp	w1, #0x2
  4462bc:	cset	w7, gt
  4462c0:	b	445e48 <argp_parse@@Base+0x6068>
  4462c4:	cmp	w0, #0x0
  4462c8:	cset	w7, ne  // ne = any
  4462cc:	mov	w0, w7
  4462d0:	b	445ce0 <argp_parse@@Base+0x5f00>
  4462d4:	cmp	w0, #0x0
  4462d8:	cset	w7, ne  // ne = any
  4462dc:	mov	w0, w7
  4462e0:	b	445d34 <argp_parse@@Base+0x5f54>
  4462e4:	cmp	w0, #0x0
  4462e8:	cset	w7, ne  // ne = any
  4462ec:	mov	w0, w7
  4462f0:	b	445d88 <argp_parse@@Base+0x5fa8>
  4462f4:	cmp	w0, #0x0
  4462f8:	cset	w7, ne  // ne = any
  4462fc:	mov	w0, w7
  446300:	b	445ddc <argp_parse@@Base+0x5ffc>
  446304:	cmp	w0, #0x0
  446308:	cset	w7, ne  // ne = any
  44630c:	mov	w0, w7
  446310:	b	445e28 <argp_parse@@Base+0x6048>
  446314:	mov	w0, #0x1                   	// #1
  446318:	str	w0, [sp, #128]
  44631c:	b	445a1c <argp_parse@@Base+0x5c3c>
  446320:	mov	w0, #0x2                   	// #2
  446324:	mov	v2.16b, v4.16b
  446328:	str	w0, [sp, #128]
  44632c:	b	445a1c <argp_parse@@Base+0x5c3c>
  446330:	mov	w0, #0x3                   	// #3
  446334:	mov	v2.16b, v6.16b
  446338:	str	w0, [sp, #128]
  44633c:	b	445a1c <argp_parse@@Base+0x5c3c>
  446340:	cmp	w2, #0x9
  446344:	b.eq	44642c <argp_parse@@Base+0x664c>  // b.none
  446348:	add	w0, w2, #0x31
  44634c:	and	w0, w0, #0xff
  446350:	b	445e5c <argp_parse@@Base+0x607c>
  446354:	mov	w0, #0x4                   	// #4
  446358:	mov	v2.16b, v4.16b
  44635c:	str	w0, [sp, #128]
  446360:	b	445a1c <argp_parse@@Base+0x5c3c>
  446364:	mov	w0, #0x5                   	// #5
  446368:	mov	v2.16b, v6.16b
  44636c:	str	w0, [sp, #128]
  446370:	b	445a1c <argp_parse@@Base+0x5c3c>
  446374:	mov	w0, #0x6                   	// #6
  446378:	mov	v2.16b, v4.16b
  44637c:	str	w0, [sp, #128]
  446380:	b	445a1c <argp_parse@@Base+0x5c3c>
  446384:	mov	w0, #0x7                   	// #7
  446388:	mov	v2.16b, v6.16b
  44638c:	str	w0, [sp, #128]
  446390:	b	445a1c <argp_parse@@Base+0x5c3c>
  446394:	str	wzr, [sp, #128]
  446398:	b	445bb8 <argp_parse@@Base+0x5dd8>
  44639c:	and	w0, w19, #0x100
  4463a0:	tbz	w19, #6, 446464 <argp_parse@@Base+0x6684>
  4463a4:	add	x2, x21, #0x288
  4463a8:	mov	w1, #0x20                  	// #32
  4463ac:	str	x2, [sp, #120]
  4463b0:	mov	w2, #0x2                   	// #2
  4463b4:	str	w2, [sp, #128]
  4463b8:	strb	w1, [x21, #647]
  4463bc:	b	446120 <argp_parse@@Base+0x6340>
  4463c0:	and	w0, w19, #0x100
  4463c4:	tbz	w19, #6, 446470 <argp_parse@@Base+0x6690>
  4463c8:	add	x2, x21, #0x288
  4463cc:	mov	w1, #0x20                  	// #32
  4463d0:	str	x2, [sp, #120]
  4463d4:	mov	w2, #0x3                   	// #3
  4463d8:	str	w2, [sp, #128]
  4463dc:	strb	w1, [x21, #647]
  4463e0:	b	446120 <argp_parse@@Base+0x6340>
  4463e4:	and	w0, w19, #0x100
  4463e8:	tbz	w19, #6, 4464a0 <argp_parse@@Base+0x66c0>
  4463ec:	add	x2, x21, #0x288
  4463f0:	mov	w1, #0x20                  	// #32
  4463f4:	str	x2, [sp, #120]
  4463f8:	mov	w2, #0x5                   	// #5
  4463fc:	str	w2, [sp, #128]
  446400:	strb	w1, [x21, #647]
  446404:	b	446120 <argp_parse@@Base+0x6340>
  446408:	and	w0, w19, #0x100
  44640c:	tbz	w19, #6, 4464b8 <argp_parse@@Base+0x66d8>
  446410:	add	x2, x21, #0x288
  446414:	mov	w1, #0x20                  	// #32
  446418:	str	x2, [sp, #120]
  44641c:	mov	w2, #0x6                   	// #6
  446420:	str	w2, [sp, #128]
  446424:	strb	w1, [x21, #647]
  446428:	b	446120 <argp_parse@@Base+0x6340>
  44642c:	add	x4, x4, #0x1
  446430:	cmp	x4, #0xa
  446434:	b.eq	4464f4 <argp_parse@@Base+0x6714>  // b.none
  446438:	mov	w0, #0x0                   	// #0
  44643c:	b	445e50 <argp_parse@@Base+0x6070>
  446440:	mvn	x0, x28
  446444:	mov	w1, #0x30                  	// #48
  446448:	sturb	w1, [x23, #-1]
  44644c:	add	x23, x23, x0
  446450:	mov	x1, x27
  446454:	mov	x2, x28
  446458:	mov	x0, x23
  44645c:	bl	403f70 <memcpy@plt>
  446460:	b	44629c <argp_parse@@Base+0x64bc>
  446464:	mov	w1, #0x2                   	// #2
  446468:	str	w1, [sp, #128]
  44646c:	b	446120 <argp_parse@@Base+0x6340>
  446470:	mov	w1, #0x3                   	// #3
  446474:	str	w1, [sp, #128]
  446478:	b	446120 <argp_parse@@Base+0x6340>
  44647c:	mov	w1, #0x1                   	// #1
  446480:	str	w1, [sp, #128]
  446484:	b	445e30 <argp_parse@@Base+0x6050>
  446488:	mov	w1, #0x2                   	// #2
  44648c:	str	w1, [sp, #128]
  446490:	b	445e30 <argp_parse@@Base+0x6050>
  446494:	mov	w1, #0x3                   	// #3
  446498:	str	w1, [sp, #128]
  44649c:	b	445e30 <argp_parse@@Base+0x6050>
  4464a0:	mov	w1, #0x5                   	// #5
  4464a4:	str	w1, [sp, #128]
  4464a8:	b	446120 <argp_parse@@Base+0x6340>
  4464ac:	mov	w1, #0x4                   	// #4
  4464b0:	str	w1, [sp, #128]
  4464b4:	b	445e30 <argp_parse@@Base+0x6050>
  4464b8:	mov	w1, #0x6                   	// #6
  4464bc:	str	w1, [sp, #128]
  4464c0:	b	446120 <argp_parse@@Base+0x6340>
  4464c4:	mov	w1, #0x5                   	// #5
  4464c8:	str	w1, [sp, #128]
  4464cc:	b	445e30 <argp_parse@@Base+0x6050>
  4464d0:	and	w0, w19, #0x100
  4464d4:	tbz	w19, #6, 446500 <argp_parse@@Base+0x6720>
  4464d8:	add	x2, x21, #0x288
  4464dc:	mov	w1, #0x20                  	// #32
  4464e0:	str	x2, [sp, #120]
  4464e4:	mov	w2, #0x4                   	// #4
  4464e8:	str	w2, [sp, #128]
  4464ec:	strb	w1, [x21, #647]
  4464f0:	b	446120 <argp_parse@@Base+0x6340>
  4464f4:	add	x23, x21, #0x287
  4464f8:	mov	w0, #0x0                   	// #0
  4464fc:	b	445e8c <argp_parse@@Base+0x60ac>
  446500:	mov	w1, #0x4                   	// #4
  446504:	str	w1, [sp, #128]
  446508:	b	446120 <argp_parse@@Base+0x6340>
  44650c:	add	w0, w2, #0x30
  446510:	and	w0, w0, #0xff
  446514:	b	445e5c <argp_parse@@Base+0x607c>
  446518:	ldr	x1, [sp, #120]
  44651c:	cbnz	w0, 44614c <argp_parse@@Base+0x636c>
  446520:	b	445bc8 <argp_parse@@Base+0x5de8>
  446524:	and	w0, w19, #0x100
  446528:	tbz	w19, #6, 446568 <argp_parse@@Base+0x6788>
  44652c:	add	x2, x21, #0x288
  446530:	mov	w1, #0x20                  	// #32
  446534:	str	x2, [sp, #120]
  446538:	mov	w2, #0x1                   	// #1
  44653c:	str	w2, [sp, #128]
  446540:	strb	w1, [x21, #647]
  446544:	b	4461c0 <argp_parse@@Base+0x63e0>
  446548:	tbz	w19, #6, 446574 <argp_parse@@Base+0x6794>
  44654c:	add	x2, x21, #0x288
  446550:	mov	w1, #0x20                  	// #32
  446554:	str	x2, [sp, #120]
  446558:	mov	w2, #0x7                   	// #7
  44655c:	str	w2, [sp, #128]
  446560:	strb	w1, [x21, #647]
  446564:	b	446120 <argp_parse@@Base+0x6340>
  446568:	mov	w1, #0x1                   	// #1
  44656c:	str	w1, [sp, #128]
  446570:	b	4461c0 <argp_parse@@Base+0x63e0>
  446574:	mov	w1, #0x7                   	// #7
  446578:	str	w1, [sp, #128]
  44657c:	b	446120 <argp_parse@@Base+0x6340>
  446580:	stp	x29, x30, [sp, #-80]!
  446584:	mov	x29, sp
  446588:	stp	x19, x20, [sp, #16]
  44658c:	mov	x19, x0
  446590:	mov	x20, x2
  446594:	stp	x21, x22, [sp, #32]
  446598:	mov	x21, x1
  44659c:	cbz	x0, 4466e0 <argp_parse@@Base+0x6900>
  4465a0:	stp	x23, x24, [sp, #48]
  4465a4:	mov	w22, #0x0                   	// #0
  4465a8:	mov	w23, #0xa0                  	// #160
  4465ac:	ldrb	w0, [x19]
  4465b0:	cmp	w0, #0x27
  4465b4:	b.ne	4465c4 <argp_parse@@Base+0x67e4>  // b.any
  4465b8:	add	x19, x19, #0x1
  4465bc:	mov	w23, #0xa4                  	// #164
  4465c0:	mov	w22, #0x4                   	// #4
  4465c4:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4465c8:	add	x24, x3, #0x6c0
  4465cc:	add	x2, x24, #0x10
  4465d0:	add	x1, x24, #0x20
  4465d4:	mov	x0, x19
  4465d8:	mov	x3, #0x4                   	// #4
  4465dc:	bl	43ba78 <wcrtomb@plt+0x36e58>
  4465e0:	tbnz	w0, #31, 446614 <argp_parse@@Base+0x6834>
  4465e4:	add	x3, x24, w0, sxtw #2
  4465e8:	mov	x0, #0x1                   	// #1
  4465ec:	ldp	x23, x24, [sp, #48]
  4465f0:	str	x0, [x20]
  4465f4:	ldr	w1, [x3, #16]
  4465f8:	mov	w0, #0x0                   	// #0
  4465fc:	orr	w22, w22, w1
  446600:	str	w22, [x21]
  446604:	ldp	x19, x20, [sp, #16]
  446608:	ldp	x21, x22, [sp, #32]
  44660c:	ldp	x29, x30, [sp], #80
  446610:	ret
  446614:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446618:	mov	x3, x20
  44661c:	add	x4, x4, #0x668
  446620:	add	x1, sp, #0x48
  446624:	mov	x0, x19
  446628:	mov	w2, #0x0                   	// #0
  44662c:	bl	4503d0 <argp_parse@@Base+0x105f0>
  446630:	cbnz	w0, 44669c <argp_parse@@Base+0x68bc>
  446634:	ldrb	w1, [x19]
  446638:	sub	w1, w1, #0x30
  44663c:	and	w1, w1, #0xff
  446640:	cmp	w1, #0x9
  446644:	b.ls	44667c <argp_parse@@Base+0x689c>  // b.plast
  446648:	ldr	x1, [sp, #72]
  44664c:	b	446664 <argp_parse@@Base+0x6884>
  446650:	ldrb	w3, [x19, #1]!
  446654:	sub	w3, w3, #0x30
  446658:	and	w3, w3, #0xff
  44665c:	cmp	w3, #0x9
  446660:	b.ls	44667c <argp_parse@@Base+0x689c>  // b.plast
  446664:	cmp	x1, x19
  446668:	b.ne	446650 <argp_parse@@Base+0x6870>  // b.any
  44666c:	ldurb	w2, [x1, #-1]
  446670:	cmp	w2, #0x42
  446674:	b.eq	44672c <argp_parse@@Base+0x694c>  // b.none
  446678:	mov	w22, w23
  44667c:	ldr	x1, [x20]
  446680:	str	w22, [x21]
  446684:	cbz	x1, 4466a8 <argp_parse@@Base+0x68c8>
  446688:	ldp	x19, x20, [sp, #16]
  44668c:	ldp	x21, x22, [sp, #32]
  446690:	ldp	x23, x24, [sp, #48]
  446694:	ldp	x29, x30, [sp], #80
  446698:	ret
  44669c:	ldr	x1, [x20]
  4466a0:	str	wzr, [x21]
  4466a4:	cbnz	x1, 446688 <argp_parse@@Base+0x68a8>
  4466a8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4466ac:	add	x0, x0, #0x658
  4466b0:	bl	404af0 <getenv@plt>
  4466b4:	cmp	x0, #0x0
  4466b8:	mov	x2, #0x400                 	// #1024
  4466bc:	mov	x1, #0x200                 	// #512
  4466c0:	csel	x1, x1, x2, ne  // ne = any
  4466c4:	mov	w0, #0x4                   	// #4
  4466c8:	ldp	x23, x24, [sp, #48]
  4466cc:	str	x1, [x20]
  4466d0:	ldp	x19, x20, [sp, #16]
  4466d4:	ldp	x21, x22, [sp, #32]
  4466d8:	ldp	x29, x30, [sp], #80
  4466dc:	ret
  4466e0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4466e4:	add	x0, x0, #0x638
  4466e8:	bl	404af0 <getenv@plt>
  4466ec:	mov	x19, x0
  4466f0:	cbnz	x0, 4465a0 <argp_parse@@Base+0x67c0>
  4466f4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4466f8:	add	x0, x0, #0x648
  4466fc:	bl	404af0 <getenv@plt>
  446700:	mov	x19, x0
  446704:	cbnz	x0, 4465a0 <argp_parse@@Base+0x67c0>
  446708:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44670c:	add	x0, x0, #0x658
  446710:	bl	404af0 <getenv@plt>
  446714:	cbz	x0, 446750 <argp_parse@@Base+0x6970>
  446718:	mov	x0, #0x200                 	// #512
  44671c:	str	x0, [x20]
  446720:	mov	w0, #0x0                   	// #0
  446724:	str	wzr, [x21]
  446728:	b	446604 <argp_parse@@Base+0x6824>
  44672c:	ldurb	w1, [x1, #-2]
  446730:	orr	w2, w22, #0x180
  446734:	cmp	w1, #0x69
  446738:	b.eq	446744 <argp_parse@@Base+0x6964>  // b.none
  44673c:	mov	w22, w2
  446740:	b	44667c <argp_parse@@Base+0x689c>
  446744:	mov	w23, #0x1a0                 	// #416
  446748:	orr	w23, w22, w23
  44674c:	b	446678 <argp_parse@@Base+0x6898>
  446750:	mov	x0, #0x400                 	// #1024
  446754:	str	x0, [x20]
  446758:	mov	w0, #0x0                   	// #0
  44675c:	str	wzr, [x21]
  446760:	b	446604 <argp_parse@@Base+0x6824>
  446764:	nop
  446768:	strb	wzr, [x1, #20]
  44676c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  446770:	mov	x2, x0
  446774:	movk	x4, #0xcccd
  446778:	add	x0, x1, #0x14
  44677c:	tbnz	x2, #63, 4467a4 <argp_parse@@Base+0x69c4>
  446780:	umulh	x3, x2, x4
  446784:	lsr	x3, x3, #3
  446788:	add	x1, x3, x3, lsl #2
  44678c:	sub	x1, x2, x1, lsl #1
  446790:	mov	x2, x3
  446794:	add	w1, w1, #0x30
  446798:	strb	w1, [x0, #-1]!
  44679c:	cbnz	x3, 446780 <argp_parse@@Base+0x69a0>
  4467a0:	ret
  4467a4:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  4467a8:	mov	w5, #0x30                  	// #48
  4467ac:	movk	x6, #0x6667
  4467b0:	smulh	x1, x2, x6
  4467b4:	mov	x4, x0
  4467b8:	asr	x1, x1, #2
  4467bc:	sub	x1, x1, x2, asr #63
  4467c0:	add	x3, x1, x1, lsl #2
  4467c4:	sub	x3, x2, x3, lsl #1
  4467c8:	mov	x2, x1
  4467cc:	sub	w1, w5, w3
  4467d0:	strb	w1, [x0, #-1]!
  4467d4:	cbnz	x2, 4467b0 <argp_parse@@Base+0x69d0>
  4467d8:	mov	w1, #0x2d                  	// #45
  4467dc:	sturb	w1, [x0, #-1]
  4467e0:	sub	x0, x4, #0x2
  4467e4:	ret
  4467e8:	strb	wzr, [x1, #20]
  4467ec:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  4467f0:	mov	x2, x0
  4467f4:	movk	x4, #0xcccd
  4467f8:	add	x0, x1, #0x14
  4467fc:	tbnz	x2, #63, 446824 <argp_parse@@Base+0x6a44>
  446800:	umulh	x3, x2, x4
  446804:	lsr	x3, x3, #3
  446808:	add	x1, x3, x3, lsl #2
  44680c:	sub	x1, x2, x1, lsl #1
  446810:	mov	x2, x3
  446814:	add	w1, w1, #0x30
  446818:	strb	w1, [x0, #-1]!
  44681c:	cbnz	x3, 446800 <argp_parse@@Base+0x6a20>
  446820:	ret
  446824:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  446828:	mov	w5, #0x30                  	// #48
  44682c:	movk	x6, #0x6667
  446830:	smulh	x1, x2, x6
  446834:	mov	x4, x0
  446838:	asr	x1, x1, #2
  44683c:	sub	x1, x1, x2, asr #63
  446840:	add	x3, x1, x1, lsl #2
  446844:	sub	x3, x2, x3, lsl #1
  446848:	mov	x2, x1
  44684c:	sub	w1, w5, w3
  446850:	strb	w1, [x0, #-1]!
  446854:	cbnz	x2, 446830 <argp_parse@@Base+0x6a50>
  446858:	mov	w1, #0x2d                  	// #45
  44685c:	sturb	w1, [x0, #-1]
  446860:	sub	x0, x4, #0x2
  446864:	ret
  446868:	mov	x3, x0
  44686c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  446870:	add	x0, x1, #0x14
  446874:	movk	x4, #0xcccd
  446878:	strb	wzr, [x1, #20]
  44687c:	nop
  446880:	umulh	x2, x3, x4
  446884:	cmp	x3, #0x9
  446888:	lsr	x2, x2, #3
  44688c:	add	x1, x2, x2, lsl #2
  446890:	sub	x1, x3, x1, lsl #1
  446894:	mov	x3, x2
  446898:	add	w1, w1, #0x30
  44689c:	strb	w1, [x0, #-1]!
  4468a0:	b.hi	446880 <argp_parse@@Base+0x6aa0>  // b.pmore
  4468a4:	ret
  4468a8:	stp	x29, x30, [sp, #-16]!
  4468ac:	mov	w0, #0xe                   	// #14
  4468b0:	mov	x29, sp
  4468b4:	bl	4042d0 <nl_langinfo@plt>
  4468b8:	cbz	x0, 4468d8 <argp_parse@@Base+0x6af8>
  4468bc:	ldrb	w2, [x0]
  4468c0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4468c4:	add	x1, x1, #0x6f8
  4468c8:	cmp	w2, #0x0
  4468cc:	csel	x0, x1, x0, eq  // eq = none
  4468d0:	ldp	x29, x30, [sp], #16
  4468d4:	ret
  4468d8:	ldp	x29, x30, [sp], #16
  4468dc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4468e0:	add	x0, x0, #0x6f8
  4468e4:	ret
  4468e8:	stp	x29, x30, [sp, #-32]!
  4468ec:	mov	x29, sp
  4468f0:	str	x19, [sp, #16]
  4468f4:	mov	w19, w0
  4468f8:	bl	404320 <wcwidth@plt>
  4468fc:	tbz	w0, #31, 446910 <argp_parse@@Base+0x6b30>
  446900:	mov	w0, w19
  446904:	bl	404180 <iswcntrl@plt>
  446908:	cmp	w0, #0x0
  44690c:	cset	w0, eq  // eq = none
  446910:	ldr	x19, [sp, #16]
  446914:	ldp	x29, x30, [sp], #32
  446918:	ret
  44691c:	nop
  446920:	stp	x29, x30, [sp, #-32]!
  446924:	mov	x29, sp
  446928:	stp	x19, x20, [sp, #16]
  44692c:	mov	x20, x0
  446930:	mov	x0, x1
  446934:	mov	x19, x1
  446938:	ldr	x2, [x1, #8]
  44693c:	ldr	x1, [x0], #24
  446940:	cmp	x1, x0
  446944:	b.eq	446970 <argp_parse@@Base+0x6b90>  // b.none
  446948:	str	x1, [x20]
  44694c:	ldrb	w0, [x19, #16]
  446950:	str	x2, [x20, #8]
  446954:	strb	w0, [x20, #16]
  446958:	cbz	w0, 446964 <argp_parse@@Base+0x6b84>
  44695c:	ldr	w0, [x19, #20]
  446960:	str	w0, [x20, #20]
  446964:	ldp	x19, x20, [sp, #16]
  446968:	ldp	x29, x30, [sp], #32
  44696c:	ret
  446970:	add	x3, x20, #0x18
  446974:	mov	x0, x3
  446978:	bl	403f70 <memcpy@plt>
  44697c:	ldr	x2, [x19, #8]
  446980:	str	x0, [x20]
  446984:	b	44694c <argp_parse@@Base+0x6b6c>
  446988:	ubfx	x2, x0, #5, #3
  44698c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446990:	add	x1, x1, #0x700
  446994:	ldr	w1, [x1, x2, lsl #2]
  446998:	lsr	w0, w1, w0
  44699c:	and	w0, w0, #0x1
  4469a0:	ret
  4469a4:	nop
  4469a8:	stp	x29, x30, [sp, #-16]!
  4469ac:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4469b0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4469b4:	mov	x29, sp
  4469b8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4469bc:	add	x3, x3, #0x720
  4469c0:	add	x1, x1, #0x3a8
  4469c4:	add	x0, x0, #0x3e8
  4469c8:	mov	w2, #0xb3                  	// #179
  4469cc:	bl	404ac0 <__assert_fail@plt>
  4469d0:	cmp	x0, x1
  4469d4:	b.eq	446d3c <argp_parse@@Base+0x6f5c>  // b.none
  4469d8:	stp	x29, x30, [sp, #-192]!
  4469dc:	mov	x29, sp
  4469e0:	stp	x19, x20, [sp, #16]
  4469e4:	mov	x20, x0
  4469e8:	stp	x21, x22, [sp, #32]
  4469ec:	stp	x23, x24, [sp, #48]
  4469f0:	mov	x24, x1
  4469f4:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  4469f8:	cmp	x0, #0x1
  4469fc:	b.ls	446b74 <argp_parse@@Base+0x6d94>  // b.plast
  446a00:	strb	wzr, [sp, #64]
  446a04:	add	x22, sp, #0x44
  446a08:	stur	xzr, [sp, #68]
  446a0c:	add	x23, sp, #0x84
  446a10:	ldrb	w0, [sp, #64]
  446a14:	mov	w21, #0x1                   	// #1
  446a18:	strb	wzr, [sp, #76]
  446a1c:	str	x20, [sp, #80]
  446a20:	strb	wzr, [sp, #128]
  446a24:	stur	xzr, [sp, #132]
  446a28:	strb	wzr, [sp, #140]
  446a2c:	str	x24, [sp, #144]
  446a30:	cbnz	w0, 446b14 <argp_parse@@Base+0x6d34>
  446a34:	nop
  446a38:	ldrb	w2, [x20]
  446a3c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446a40:	add	x1, x1, #0x700
  446a44:	ubfx	x0, x2, #5, #3
  446a48:	ldr	w0, [x1, x0, lsl #2]
  446a4c:	lsr	w0, w0, w2
  446a50:	tbz	w0, #0, 446c88 <argp_parse@@Base+0x6ea8>
  446a54:	mov	x0, #0x1                   	// #1
  446a58:	str	x0, [sp, #88]
  446a5c:	ldrb	w1, [x20]
  446a60:	strb	w0, [sp, #76]
  446a64:	mov	w19, w1
  446a68:	strb	w0, [sp, #96]
  446a6c:	str	w1, [sp, #100]
  446a70:	cbz	w19, 446d98 <argp_parse@@Base+0x6fb8>
  446a74:	ldrb	w0, [sp, #140]
  446a78:	cbnz	w0, 446c60 <argp_parse@@Base+0x6e80>
  446a7c:	ldrb	w0, [sp, #128]
  446a80:	ldr	x19, [sp, #144]
  446a84:	cbnz	w0, 446c00 <argp_parse@@Base+0x6e20>
  446a88:	ldrb	w2, [x19]
  446a8c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446a90:	add	x1, x1, #0x700
  446a94:	ubfx	x0, x2, #5, #3
  446a98:	ldr	w0, [x1, x0, lsl #2]
  446a9c:	lsr	w0, w0, w2
  446aa0:	tbz	w0, #0, 446bf0 <argp_parse@@Base+0x6e10>
  446aa4:	mov	x0, #0x1                   	// #1
  446aa8:	str	x0, [sp, #152]
  446aac:	ldrb	w1, [x19]
  446ab0:	strb	w0, [sp, #140]
  446ab4:	mov	w20, w1
  446ab8:	strb	w0, [sp, #160]
  446abc:	str	w1, [sp, #164]
  446ac0:	cbz	w20, 446d78 <argp_parse@@Base+0x6f98>
  446ac4:	ldrb	w0, [sp, #96]
  446ac8:	cbz	w0, 446d58 <argp_parse@@Base+0x6f78>
  446acc:	ldr	w0, [sp, #100]
  446ad0:	bl	404b80 <towlower@plt>
  446ad4:	mov	w19, w0
  446ad8:	mov	w0, w20
  446adc:	bl	404b80 <towlower@plt>
  446ae0:	sub	w0, w19, w0
  446ae4:	cbnz	w0, 446bdc <argp_parse@@Base+0x6dfc>
  446ae8:	ldp	x20, x1, [sp, #80]
  446aec:	strb	wzr, [sp, #76]
  446af0:	ldr	x0, [sp, #144]
  446af4:	strb	wzr, [sp, #140]
  446af8:	add	x20, x20, x1
  446afc:	str	x20, [sp, #80]
  446b00:	ldr	x1, [sp, #152]
  446b04:	add	x0, x0, x1
  446b08:	str	x0, [sp, #144]
  446b0c:	ldrb	w0, [sp, #64]
  446b10:	cbz	w0, 446a38 <argp_parse@@Base+0x6c58>
  446b14:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  446b18:	mov	x1, x0
  446b1c:	mov	x0, x20
  446b20:	bl	44f780 <argp_parse@@Base+0xf9a0>
  446b24:	mov	x2, x0
  446b28:	add	x0, sp, #0x40
  446b2c:	mov	x1, x20
  446b30:	add	x3, sp, #0x44
  446b34:	add	x0, x0, #0x24
  446b38:	bl	450f30 <argp_parse@@Base+0x11150>
  446b3c:	str	x0, [sp, #88]
  446b40:	cmn	x0, #0x1
  446b44:	b.eq	446c9c <argp_parse@@Base+0x6ebc>  // b.none
  446b48:	cmn	x0, #0x2
  446b4c:	b.eq	446cc4 <argp_parse@@Base+0x6ee4>  // b.none
  446b50:	cbz	x0, 446cf4 <argp_parse@@Base+0x6f14>
  446b54:	ldr	w19, [sp, #100]
  446b58:	add	x0, sp, #0x44
  446b5c:	strb	w21, [sp, #96]
  446b60:	bl	404670 <mbsinit@plt>
  446b64:	cbz	w0, 446b6c <argp_parse@@Base+0x6d8c>
  446b68:	strb	wzr, [sp, #64]
  446b6c:	strb	w21, [sp, #76]
  446b70:	b	446a70 <argp_parse@@Base+0x6c90>
  446b74:	bl	404740 <__ctype_b_loc@plt>
  446b78:	mov	x21, #0x0                   	// #0
  446b7c:	ldr	x22, [x0]
  446b80:	ldrb	w23, [x20, x21]
  446b84:	mov	x19, x23
  446b88:	ubfiz	x0, x23, #1, #8
  446b8c:	ldrh	w0, [x22, x0]
  446b90:	tbz	w0, #8, 446ba4 <argp_parse@@Base+0x6dc4>
  446b94:	bl	4041f0 <__ctype_tolower_loc@plt>
  446b98:	ldr	x0, [x0]
  446b9c:	ldr	w19, [x0, x23, lsl #2]
  446ba0:	and	w19, w19, #0xff
  446ba4:	ldrb	w23, [x24, x21]
  446ba8:	mov	x0, x23
  446bac:	ubfiz	x1, x23, #1, #8
  446bb0:	ldrh	w1, [x22, x1]
  446bb4:	tbz	w1, #8, 446bc8 <argp_parse@@Base+0x6de8>
  446bb8:	bl	4041f0 <__ctype_tolower_loc@plt>
  446bbc:	ldr	x0, [x0]
  446bc0:	ldr	w0, [x0, x23, lsl #2]
  446bc4:	and	w0, w0, #0xff
  446bc8:	cbz	w19, 446d70 <argp_parse@@Base+0x6f90>
  446bcc:	add	x21, x21, #0x1
  446bd0:	cmp	w19, w0
  446bd4:	b.eq	446b80 <argp_parse@@Base+0x6da0>  // b.none
  446bd8:	sub	w0, w19, w0
  446bdc:	ldp	x19, x20, [sp, #16]
  446be0:	ldp	x21, x22, [sp, #32]
  446be4:	ldp	x23, x24, [sp, #48]
  446be8:	ldp	x29, x30, [sp], #192
  446bec:	ret
  446bf0:	mov	x0, x23
  446bf4:	bl	404670 <mbsinit@plt>
  446bf8:	cbz	w0, 446f6c <argp_parse@@Base+0x718c>
  446bfc:	strb	w21, [sp, #128]
  446c00:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  446c04:	mov	x1, x0
  446c08:	mov	x0, x19
  446c0c:	bl	44f780 <argp_parse@@Base+0xf9a0>
  446c10:	mov	x2, x0
  446c14:	add	x0, sp, #0x80
  446c18:	mov	x1, x19
  446c1c:	add	x3, sp, #0x84
  446c20:	add	x0, x0, #0x24
  446c24:	bl	450f30 <argp_parse@@Base+0x11150>
  446c28:	str	x0, [sp, #152]
  446c2c:	cmn	x0, #0x1
  446c30:	b.eq	446cb0 <argp_parse@@Base+0x6ed0>  // b.none
  446c34:	cmn	x0, #0x2
  446c38:	b.eq	446cdc <argp_parse@@Base+0x6efc>  // b.none
  446c3c:	cbz	x0, 446d14 <argp_parse@@Base+0x6f34>
  446c40:	ldr	w20, [sp, #164]
  446c44:	add	x0, sp, #0x84
  446c48:	strb	w21, [sp, #160]
  446c4c:	bl	404670 <mbsinit@plt>
  446c50:	cbz	w0, 446c58 <argp_parse@@Base+0x6e78>
  446c54:	strb	wzr, [sp, #128]
  446c58:	strb	w21, [sp, #140]
  446c5c:	b	446ac0 <argp_parse@@Base+0x6ce0>
  446c60:	ldrb	w0, [sp, #160]
  446c64:	cbnz	w0, 446d34 <argp_parse@@Base+0x6f54>
  446c68:	ldrb	w0, [sp, #96]
  446c6c:	cbnz	w0, 446ddc <argp_parse@@Base+0x6ffc>
  446c70:	ldp	x0, x2, [sp, #80]
  446c74:	ldp	x1, x3, [sp, #144]
  446c78:	cmp	x2, x3
  446c7c:	b.ne	446d44 <argp_parse@@Base+0x6f64>  // b.any
  446c80:	bl	4046d0 <memcmp@plt>
  446c84:	b	446ae4 <argp_parse@@Base+0x6d04>
  446c88:	mov	x0, x22
  446c8c:	bl	404670 <mbsinit@plt>
  446c90:	cbz	w0, 446f6c <argp_parse@@Base+0x718c>
  446c94:	strb	w21, [sp, #64]
  446c98:	b	446b14 <argp_parse@@Base+0x6d34>
  446c9c:	mov	x0, #0x1                   	// #1
  446ca0:	strb	w0, [sp, #76]
  446ca4:	str	x0, [sp, #88]
  446ca8:	strb	wzr, [sp, #96]
  446cac:	b	446a74 <argp_parse@@Base+0x6c94>
  446cb0:	mov	x0, #0x1                   	// #1
  446cb4:	strb	w0, [sp, #140]
  446cb8:	str	x0, [sp, #152]
  446cbc:	strb	wzr, [sp, #160]
  446cc0:	b	446c68 <argp_parse@@Base+0x6e88>
  446cc4:	ldr	x0, [sp, #80]
  446cc8:	bl	403ff0 <strlen@plt>
  446ccc:	strb	w21, [sp, #76]
  446cd0:	str	x0, [sp, #88]
  446cd4:	strb	wzr, [sp, #96]
  446cd8:	b	446a74 <argp_parse@@Base+0x6c94>
  446cdc:	ldr	x0, [sp, #144]
  446ce0:	bl	403ff0 <strlen@plt>
  446ce4:	strb	w21, [sp, #140]
  446ce8:	str	x0, [sp, #152]
  446cec:	strb	wzr, [sp, #160]
  446cf0:	b	446c68 <argp_parse@@Base+0x6e88>
  446cf4:	ldr	x0, [sp, #80]
  446cf8:	mov	x1, #0x1                   	// #1
  446cfc:	str	x1, [sp, #88]
  446d00:	ldrb	w0, [x0]
  446d04:	cbnz	w0, 446f8c <argp_parse@@Base+0x71ac>
  446d08:	ldr	w19, [sp, #100]
  446d0c:	cbz	w19, 446b58 <argp_parse@@Base+0x6d78>
  446d10:	bl	4469a8 <argp_parse@@Base+0x6bc8>
  446d14:	ldr	x0, [sp, #144]
  446d18:	mov	x1, #0x1                   	// #1
  446d1c:	str	x1, [sp, #152]
  446d20:	ldrb	w0, [x0]
  446d24:	cbnz	w0, 446f8c <argp_parse@@Base+0x71ac>
  446d28:	ldr	w20, [sp, #164]
  446d2c:	cbz	w20, 446c44 <argp_parse@@Base+0x6e64>
  446d30:	bl	4469a8 <argp_parse@@Base+0x6bc8>
  446d34:	ldr	w20, [sp, #164]
  446d38:	b	446ac0 <argp_parse@@Base+0x6ce0>
  446d3c:	mov	w0, #0x0                   	// #0
  446d40:	ret
  446d44:	b.cs	446eb8 <argp_parse@@Base+0x70d8>  // b.hs, b.nlast
  446d48:	bl	4046d0 <memcmp@plt>
  446d4c:	cmp	w0, #0x0
  446d50:	b.le	446ddc <argp_parse@@Base+0x6ffc>
  446d54:	nop
  446d58:	mov	w0, #0x1                   	// #1
  446d5c:	ldp	x19, x20, [sp, #16]
  446d60:	ldp	x21, x22, [sp, #32]
  446d64:	ldp	x23, x24, [sp, #48]
  446d68:	ldp	x29, x30, [sp], #192
  446d6c:	ret
  446d70:	mov	w19, #0x0                   	// #0
  446d74:	b	446bd8 <argp_parse@@Base+0x6df8>
  446d78:	ldrb	w0, [sp, #76]
  446d7c:	cbz	w0, 446df4 <argp_parse@@Base+0x7014>
  446d80:	ldrb	w0, [sp, #96]
  446d84:	cbz	w0, 446d58 <argp_parse@@Base+0x6f78>
  446d88:	ldr	w19, [sp, #100]
  446d8c:	nop
  446d90:	cbnz	w19, 446d58 <argp_parse@@Base+0x6f78>
  446d94:	nop
  446d98:	ldrb	w0, [sp, #140]
  446d9c:	cbnz	w0, 446f38 <argp_parse@@Base+0x7158>
  446da0:	ldrb	w0, [sp, #128]
  446da4:	add	x20, sp, #0x80
  446da8:	ldr	x19, [sp, #144]
  446dac:	cbnz	w0, 446ee4 <argp_parse@@Base+0x7104>
  446db0:	ldrb	w1, [x19]
  446db4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446db8:	add	x0, x0, #0x700
  446dbc:	ubfx	x2, x1, #5, #3
  446dc0:	ldr	w0, [x0, x2, lsl #2]
  446dc4:	lsr	w0, w0, w1
  446dc8:	tbz	w0, #0, 446ecc <argp_parse@@Base+0x70ec>
  446dcc:	mov	x0, #0x1                   	// #1
  446dd0:	str	x0, [sp, #152]
  446dd4:	ldrb	w20, [x19]
  446dd8:	cbz	w20, 446f30 <argp_parse@@Base+0x7150>
  446ddc:	mov	w0, #0xffffffff            	// #-1
  446de0:	ldp	x19, x20, [sp, #16]
  446de4:	ldp	x21, x22, [sp, #32]
  446de8:	ldp	x23, x24, [sp, #48]
  446dec:	ldp	x29, x30, [sp], #192
  446df0:	ret
  446df4:	ldrb	w0, [sp, #64]
  446df8:	add	x20, sp, #0x40
  446dfc:	ldr	x19, [sp, #80]
  446e00:	cbnz	w0, 446e38 <argp_parse@@Base+0x7058>
  446e04:	ldrb	w1, [x19]
  446e08:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446e0c:	add	x0, x0, #0x700
  446e10:	ubfx	x2, x1, #5, #3
  446e14:	ldr	w0, [x0, x2, lsl #2]
  446e18:	lsr	w0, w0, w1
  446e1c:	tbnz	w0, #0, 446e98 <argp_parse@@Base+0x70b8>
  446e20:	add	x20, sp, #0x40
  446e24:	add	x0, x20, #0x4
  446e28:	bl	404670 <mbsinit@plt>
  446e2c:	cbz	w0, 446f6c <argp_parse@@Base+0x718c>
  446e30:	mov	w0, #0x1                   	// #1
  446e34:	strb	w0, [sp, #64]
  446e38:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  446e3c:	mov	x1, x0
  446e40:	mov	x0, x19
  446e44:	bl	44f780 <argp_parse@@Base+0xf9a0>
  446e48:	mov	x1, x19
  446e4c:	mov	x2, x0
  446e50:	add	x3, x20, #0x4
  446e54:	add	x0, x20, #0x24
  446e58:	bl	450f30 <argp_parse@@Base+0x11150>
  446e5c:	str	x0, [sp, #88]
  446e60:	cmn	x0, #0x1
  446e64:	b.eq	446d58 <argp_parse@@Base+0x6f78>  // b.none
  446e68:	cmn	x0, #0x2
  446e6c:	b.eq	446d58 <argp_parse@@Base+0x6f78>  // b.none
  446e70:	cbz	x0, 446f4c <argp_parse@@Base+0x716c>
  446e74:	ldr	w19, [sp, #100]
  446e78:	add	x0, x20, #0x4
  446e7c:	mov	w20, #0x1                   	// #1
  446e80:	strb	w20, [sp, #96]
  446e84:	bl	404670 <mbsinit@plt>
  446e88:	cbz	w0, 446e90 <argp_parse@@Base+0x70b0>
  446e8c:	strb	wzr, [sp, #64]
  446e90:	strb	w20, [sp, #76]
  446e94:	b	446d90 <argp_parse@@Base+0x6fb0>
  446e98:	mov	x0, #0x1                   	// #1
  446e9c:	str	x0, [sp, #88]
  446ea0:	ldrb	w1, [x19]
  446ea4:	strb	w0, [sp, #76]
  446ea8:	mov	w19, w1
  446eac:	strb	w0, [sp, #96]
  446eb0:	str	w1, [sp, #100]
  446eb4:	b	446d90 <argp_parse@@Base+0x6fb0>
  446eb8:	mov	x2, x3
  446ebc:	bl	4046d0 <memcmp@plt>
  446ec0:	tbnz	w0, #31, 446ddc <argp_parse@@Base+0x6ffc>
  446ec4:	mov	w0, #0x1                   	// #1
  446ec8:	b	446d5c <argp_parse@@Base+0x6f7c>
  446ecc:	add	x20, sp, #0x80
  446ed0:	add	x0, sp, #0x84
  446ed4:	bl	404670 <mbsinit@plt>
  446ed8:	cbz	w0, 446f6c <argp_parse@@Base+0x718c>
  446edc:	mov	w0, #0x1                   	// #1
  446ee0:	strb	w0, [sp, #128]
  446ee4:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  446ee8:	mov	x1, x0
  446eec:	mov	x0, x19
  446ef0:	bl	44f780 <argp_parse@@Base+0xf9a0>
  446ef4:	mov	x1, x19
  446ef8:	mov	x2, x0
  446efc:	add	x3, x20, #0x4
  446f00:	add	x0, x20, #0x24
  446f04:	bl	450f30 <argp_parse@@Base+0x11150>
  446f08:	cmn	x0, #0x3
  446f0c:	b.hi	446ddc <argp_parse@@Base+0x6ffc>  // b.pmore
  446f10:	cbnz	x0, 446f40 <argp_parse@@Base+0x7160>
  446f14:	ldr	x0, [sp, #144]
  446f18:	mov	x1, #0x1                   	// #1
  446f1c:	str	x1, [sp, #152]
  446f20:	ldrb	w0, [x0]
  446f24:	cbnz	w0, 446f8c <argp_parse@@Base+0x71ac>
  446f28:	ldr	w20, [sp, #164]
  446f2c:	cbnz	w20, 446d10 <argp_parse@@Base+0x6f30>
  446f30:	mov	w0, #0x0                   	// #0
  446f34:	b	446bdc <argp_parse@@Base+0x6dfc>
  446f38:	ldrb	w0, [sp, #160]
  446f3c:	cbz	w0, 446ddc <argp_parse@@Base+0x6ffc>
  446f40:	ldr	w20, [sp, #164]
  446f44:	cbnz	w20, 446ddc <argp_parse@@Base+0x6ffc>
  446f48:	b	446f30 <argp_parse@@Base+0x7150>
  446f4c:	ldr	x0, [sp, #80]
  446f50:	mov	x1, #0x1                   	// #1
  446f54:	str	x1, [sp, #88]
  446f58:	ldrb	w0, [x0]
  446f5c:	cbnz	w0, 446f8c <argp_parse@@Base+0x71ac>
  446f60:	ldr	w19, [sp, #100]
  446f64:	cbz	w19, 446e78 <argp_parse@@Base+0x7098>
  446f68:	bl	4469a8 <argp_parse@@Base+0x6bc8>
  446f6c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446f70:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446f74:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446f78:	add	x3, x3, #0x720
  446f7c:	add	x1, x1, #0x3a8
  446f80:	add	x0, x0, #0x3b8
  446f84:	mov	w2, #0x96                  	// #150
  446f88:	bl	404ac0 <__assert_fail@plt>
  446f8c:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446f90:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446f94:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  446f98:	add	x3, x3, #0x720
  446f9c:	add	x1, x1, #0x3a8
  446fa0:	add	x0, x0, #0x3d0
  446fa4:	mov	w2, #0xb2                  	// #178
  446fa8:	bl	404ac0 <__assert_fail@plt>
  446fac:	nop
  446fb0:	stp	x29, x30, [sp, #-48]!
  446fb4:	mov	x29, sp
  446fb8:	stp	x19, x20, [sp, #16]
  446fbc:	mov	x20, x0
  446fc0:	ldrb	w0, [x0]
  446fc4:	sub	w1, w0, #0x30
  446fc8:	and	w1, w1, #0xff
  446fcc:	cmp	w1, #0x7
  446fd0:	b.ls	447070 <argp_parse@@Base+0x7290>  // b.plast
  446fd4:	mov	x2, x20
  446fd8:	mov	x1, #0x1                   	// #1
  446fdc:	mov	w4, #0x2b                  	// #43
  446fe0:	cbz	w0, 447320 <argp_parse@@Base+0x7540>
  446fe4:	nop
  446fe8:	and	w3, w0, #0xffffffef
  446fec:	cmp	w3, #0x2d
  446ff0:	ccmp	w0, w4, #0x4, ne  // ne = any
  446ff4:	ldrb	w0, [x2, #1]!
  446ff8:	cinc	x1, x1, eq  // eq = none
  446ffc:	cbnz	w0, 446fe8 <argp_parse@@Base+0x7208>
  447000:	cmp	xzr, x1, lsr #60
  447004:	lsl	x0, x1, #4
  447008:	cset	x2, ne  // ne = any
  44700c:	tbnz	x1, #59, 44734c <argp_parse@@Base+0x756c>
  447010:	cbnz	x2, 44734c <argp_parse@@Base+0x756c>
  447014:	bl	4501a0 <argp_parse@@Base+0x103c0>
  447018:	mov	x5, #0x0                   	// #0
  44701c:	mov	w17, #0x438                 	// #1080
  447020:	mov	w16, #0x207                 	// #519
  447024:	mov	w15, #0x9c0                 	// #2496
  447028:	mov	w11, #0x3                   	// #3
  44702c:	mov	w14, #0x92                  	// #146
  447030:	mov	w13, #0x49                  	// #73
  447034:	mov	w12, #0x124                 	// #292
  447038:	mov	w10, #0x1                   	// #1
  44703c:	ldrb	w3, [x20]
  447040:	mov	w7, #0x0                   	// #0
  447044:	cmp	w3, #0x67
  447048:	b.eq	44721c <argp_parse@@Base+0x743c>  // b.none
  44704c:	b.hi	4471f8 <argp_parse@@Base+0x7418>  // b.pmore
  447050:	cmp	w3, #0x61
  447054:	b.eq	4472a0 <argp_parse@@Base+0x74c0>  // b.none
  447058:	b.ls	4470b8 <argp_parse@@Base+0x72d8>  // b.plast
  44705c:	bl	4047b0 <free@plt>
  447060:	mov	x0, #0x0                   	// #0
  447064:	ldp	x19, x20, [sp, #16]
  447068:	ldp	x29, x30, [sp], #48
  44706c:	ret
  447070:	mov	x1, x20
  447074:	mov	w19, #0x0                   	// #0
  447078:	b	447090 <argp_parse@@Base+0x72b0>
  44707c:	ldrb	w2, [x1]
  447080:	sub	w0, w2, #0x30
  447084:	and	w0, w0, #0xff
  447088:	cmp	w0, #0x7
  44708c:	b.hi	4472d0 <argp_parse@@Base+0x74f0>  // b.pmore
  447090:	ldrb	w0, [x1], #1
  447094:	lsl	w19, w19, #3
  447098:	sub	w19, w19, #0x30
  44709c:	add	w19, w0, w19
  4470a0:	cmp	w19, #0xfff
  4470a4:	b.ls	44707c <argp_parse@@Base+0x729c>  // b.plast
  4470a8:	mov	x0, #0x0                   	// #0
  4470ac:	ldp	x19, x20, [sp, #16]
  4470b0:	ldp	x29, x30, [sp], #48
  4470b4:	ret
  4470b8:	and	w1, w3, #0xffffffef
  4470bc:	cmp	w1, #0x2d
  4470c0:	b.eq	4470cc <argp_parse@@Base+0x72ec>  // b.none
  4470c4:	cmp	w3, #0x2b
  4470c8:	b.ne	44705c <argp_parse@@Base+0x727c>  // b.any
  4470cc:	ldrb	w1, [x20, #1]
  4470d0:	add	x8, x5, #0x1
  4470d4:	add	x2, x20, #0x1
  4470d8:	add	x5, x0, x5, lsl #4
  4470dc:	cmp	w1, #0x6f
  4470e0:	mov	w18, #0xfff                 	// #4095
  4470e4:	mov	w9, #0x2b                  	// #43
  4470e8:	b.eq	4471d8 <argp_parse@@Base+0x73f8>  // b.none
  4470ec:	nop
  4470f0:	b.hi	4471e4 <argp_parse@@Base+0x7404>  // b.pmore
  4470f4:	cmp	w1, #0x37
  4470f8:	b.hi	447174 <argp_parse@@Base+0x7394>  // b.pmore
  4470fc:	cmp	w1, #0x2f
  447100:	b.hi	447228 <argp_parse@@Base+0x7448>  // b.pmore
  447104:	cmp	w1, #0x74
  447108:	mov	w6, #0x1                   	// #1
  44710c:	mov	w4, #0x0                   	// #0
  447110:	b.eq	447138 <argp_parse@@Base+0x7358>  // b.none
  447114:	b.hi	447158 <argp_parse@@Base+0x7378>  // b.pmore
  447118:	cmp	w1, #0x72
  44711c:	b.eq	4472b8 <argp_parse@@Base+0x74d8>  // b.none
  447120:	cmp	w1, #0x73
  447124:	b.ne	447144 <argp_parse@@Base+0x7364>  // b.any
  447128:	ldrb	w1, [x2, #1]!
  44712c:	orr	w4, w4, #0xc00
  447130:	cmp	w1, #0x74
  447134:	b.ne	447114 <argp_parse@@Base+0x7334>  // b.any
  447138:	ldrb	w1, [x2, #1]!
  44713c:	orr	w4, w4, #0x200
  447140:	b	447130 <argp_parse@@Base+0x7350>
  447144:	cmp	w1, #0x58
  447148:	b.ne	447288 <argp_parse@@Base+0x74a8>  // b.any
  44714c:	ldrb	w1, [x2, #1]!
  447150:	mov	w6, #0x2                   	// #2
  447154:	b	447130 <argp_parse@@Base+0x7350>
  447158:	cmp	w1, #0x77
  44715c:	b.eq	4472ac <argp_parse@@Base+0x74cc>  // b.none
  447160:	cmp	w1, #0x78
  447164:	b.ne	447288 <argp_parse@@Base+0x74a8>  // b.any
  447168:	ldrb	w1, [x2, #1]!
  44716c:	orr	w4, w4, w13
  447170:	b	447130 <argp_parse@@Base+0x7350>
  447174:	cmp	w1, #0x67
  447178:	add	x6, x20, #0x2
  44717c:	mov	w4, #0x38                  	// #56
  447180:	b.ne	447104 <argp_parse@@Base+0x7324>  // b.any
  447184:	strb	w3, [x5]
  447188:	ldrb	w3, [x20, #2]
  44718c:	mov	x20, x6
  447190:	strb	w11, [x5, #1]
  447194:	stp	w7, w4, [x5, #4]
  447198:	cmp	w7, #0x0
  44719c:	and	w1, w4, w7
  4471a0:	csel	w4, w1, w4, ne  // ne = any
  4471a4:	and	w1, w3, #0xffffffef
  4471a8:	str	w4, [x5, #12]
  4471ac:	and	w1, w1, #0xff
  4471b0:	add	x5, x5, #0x10
  4471b4:	cmp	w1, #0x2d
  4471b8:	add	x1, x8, #0x1
  4471bc:	ccmp	w3, w9, #0x4, ne  // ne = any
  4471c0:	b.ne	447328 <argp_parse@@Base+0x7548>  // b.any
  4471c4:	mov	x8, x1
  4471c8:	ldrb	w1, [x20, #1]
  4471cc:	add	x2, x20, #0x1
  4471d0:	cmp	w1, #0x6f
  4471d4:	b.ne	4470f0 <argp_parse@@Base+0x7310>  // b.any
  4471d8:	add	x6, x20, #0x2
  4471dc:	mov	w4, #0x7                   	// #7
  4471e0:	b	447184 <argp_parse@@Base+0x73a4>
  4471e4:	cmp	w1, #0x75
  4471e8:	add	x6, x20, #0x2
  4471ec:	mov	w4, #0x1c0                 	// #448
  4471f0:	b.eq	447184 <argp_parse@@Base+0x73a4>  // b.none
  4471f4:	b	447104 <argp_parse@@Base+0x7324>
  4471f8:	cmp	w3, #0x6f
  4471fc:	b.eq	4472c4 <argp_parse@@Base+0x74e4>  // b.none
  447200:	cmp	w3, #0x75
  447204:	b.ne	44705c <argp_parse@@Base+0x727c>  // b.any
  447208:	orr	w7, w7, w15
  44720c:	add	x20, x20, #0x1
  447210:	ldrb	w3, [x20]
  447214:	cmp	w3, #0x67
  447218:	b.ne	44704c <argp_parse@@Base+0x726c>  // b.any
  44721c:	orr	w7, w7, w17
  447220:	add	x20, x20, #0x1
  447224:	b	447210 <argp_parse@@Base+0x7430>
  447228:	mov	w1, #0x0                   	// #0
  44722c:	ldrb	w4, [x2], #1
  447230:	lsl	w1, w1, #3
  447234:	sub	w1, w1, #0x30
  447238:	add	w1, w4, w1
  44723c:	cmp	w1, #0xfff
  447240:	b.hi	44705c <argp_parse@@Base+0x727c>  // b.pmore
  447244:	ldrb	w6, [x2]
  447248:	sub	w4, w6, #0x30
  44724c:	and	w4, w4, #0xff
  447250:	cmp	w4, #0x7
  447254:	b.ls	44722c <argp_parse@@Base+0x744c>  // b.plast
  447258:	cbnz	w7, 44705c <argp_parse@@Base+0x727c>
  44725c:	cmp	w6, #0x2c
  447260:	ccmp	w6, #0x0, #0x4, ne  // ne = any
  447264:	b.ne	44705c <argp_parse@@Base+0x727c>  // b.any
  447268:	mov	w7, #0xfff                 	// #4095
  44726c:	mov	x20, x2
  447270:	mov	w4, w7
  447274:	strb	w3, [x5]
  447278:	mov	w3, w6
  44727c:	strb	w10, [x5, #1]
  447280:	stp	w18, w1, [x5, #4]
  447284:	b	4471a4 <argp_parse@@Base+0x73c4>
  447288:	mov	x20, x2
  44728c:	strb	w3, [x5]
  447290:	mov	w3, w1
  447294:	strb	w6, [x5, #1]
  447298:	stp	w7, w4, [x5, #4]
  44729c:	b	447198 <argp_parse@@Base+0x73b8>
  4472a0:	add	x20, x20, #0x1
  4472a4:	mov	w7, #0xfff                 	// #4095
  4472a8:	b	447210 <argp_parse@@Base+0x7430>
  4472ac:	ldrb	w1, [x2, #1]!
  4472b0:	orr	w4, w4, w14
  4472b4:	b	447130 <argp_parse@@Base+0x7350>
  4472b8:	ldrb	w1, [x2, #1]!
  4472bc:	orr	w4, w4, w12
  4472c0:	b	447130 <argp_parse@@Base+0x7350>
  4472c4:	orr	w7, w7, w16
  4472c8:	add	x20, x20, #0x1
  4472cc:	b	447210 <argp_parse@@Base+0x7430>
  4472d0:	mov	x0, #0x0                   	// #0
  4472d4:	cbnz	w2, 447064 <argp_parse@@Base+0x7284>
  4472d8:	sub	x20, x1, x20
  4472dc:	and	w0, w19, #0xc00
  4472e0:	cmp	x20, #0x5
  4472e4:	orr	w20, w0, #0x3ff
  4472e8:	mov	x0, #0x20                  	// #32
  4472ec:	str	x21, [sp, #32]
  4472f0:	mov	w21, #0xfff                 	// #4095
  4472f4:	csel	w20, w20, w21, lt  // lt = tstop
  4472f8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  4472fc:	stp	w21, w19, [x0, #4]
  447300:	mov	w1, #0x13d                 	// #317
  447304:	strh	w1, [x0]
  447308:	str	w20, [x0, #12]
  44730c:	strb	wzr, [x0, #17]
  447310:	ldp	x19, x20, [sp, #16]
  447314:	ldr	x21, [sp, #32]
  447318:	ldp	x29, x30, [sp], #48
  44731c:	ret
  447320:	mov	x0, #0x10                  	// #16
  447324:	b	447014 <argp_parse@@Base+0x7234>
  447328:	cmp	w3, #0x2c
  44732c:	b.ne	44733c <argp_parse@@Base+0x755c>  // b.any
  447330:	add	x20, x20, #0x1
  447334:	mov	x5, x8
  447338:	b	44703c <argp_parse@@Base+0x725c>
  44733c:	cbnz	w3, 44705c <argp_parse@@Base+0x727c>
  447340:	add	x8, x0, x8, lsl #4
  447344:	strb	wzr, [x8, #1]
  447348:	b	447064 <argp_parse@@Base+0x7284>
  44734c:	str	x21, [sp, #32]
  447350:	bl	4104a0 <wcrtomb@plt+0xb880>
  447354:	nop
  447358:	stp	x29, x30, [sp, #-160]!
  44735c:	mov	x1, x0
  447360:	mov	w0, #0x0                   	// #0
  447364:	mov	x29, sp
  447368:	add	x2, sp, #0x20
  44736c:	bl	404b10 <__xstat@plt>
  447370:	cbnz	w0, 4473a8 <argp_parse@@Base+0x75c8>
  447374:	mov	x0, #0x20                  	// #32
  447378:	str	x19, [sp, #16]
  44737c:	ldr	w19, [sp, #48]
  447380:	bl	4501a0 <argp_parse@@Base+0x103c0>
  447384:	mov	w1, #0xfff                 	// #4095
  447388:	mov	w2, #0x13d                 	// #317
  44738c:	strh	w2, [x0]
  447390:	stp	w1, w19, [x0, #4]
  447394:	str	w1, [x0, #12]
  447398:	strb	wzr, [x0, #17]
  44739c:	ldr	x19, [sp, #16]
  4473a0:	ldp	x29, x30, [sp], #160
  4473a4:	ret
  4473a8:	mov	x0, #0x0                   	// #0
  4473ac:	ldp	x29, x30, [sp], #160
  4473b0:	ret
  4473b4:	nop
  4473b8:	ldrb	w6, [x3, #1]
  4473bc:	and	w0, w0, #0xfff
  4473c0:	and	w1, w1, #0xff
  4473c4:	cbz	w6, 4474fc <argp_parse@@Base+0x771c>
  4473c8:	mvn	w12, w2
  4473cc:	mov	w9, #0x0                   	// #0
  4473d0:	mov	w10, #0x49                  	// #73
  4473d4:	mov	w11, #0x124                 	// #292
  4473d8:	mov	w15, #0x1b6                 	// #438
  4473dc:	mov	w13, #0x92                  	// #146
  4473e0:	b	44745c <argp_parse@@Base+0x767c>
  4473e4:	cmp	w6, #0x2
  4473e8:	mov	w5, #0xffffffff            	// #-1
  4473ec:	b.eq	4474e8 <argp_parse@@Base+0x7708>  // b.none
  4473f0:	mov	w7, #0x0                   	// #0
  4473f4:	cmp	w6, #0x3
  4473f8:	b.ne	447428 <argp_parse@@Base+0x7648>  // b.any
  4473fc:	and	w2, w0, w2
  447400:	ands	w14, w2, w11
  447404:	csel	w6, w15, w13, ne  // ne = any
  447408:	cmp	w14, #0x0
  44740c:	csel	w14, w11, wzr, ne  // ne = any
  447410:	tst	w2, w13
  447414:	csel	w6, w6, w14, ne  // ne = any
  447418:	tst	w2, w10
  44741c:	orr	w14, w6, w10
  447420:	csel	w6, w14, w6, ne  // ne = any
  447424:	orr	w2, w6, w2
  447428:	ldrb	w6, [x3]
  44742c:	and	w2, w2, w5
  447430:	cmp	w6, #0x2d
  447434:	cbnz	w8, 447490 <argp_parse@@Base+0x76b0>
  447438:	and	w2, w12, w2
  44743c:	b.eq	4474d0 <argp_parse@@Base+0x76f0>  // b.none
  447440:	cmp	w6, #0x3d
  447444:	b.eq	4474a8 <argp_parse@@Base+0x76c8>  // b.none
  447448:	cmp	w6, #0x2b
  44744c:	b.eq	4474dc <argp_parse@@Base+0x76fc>  // b.none
  447450:	ldrb	w6, [x3, #17]
  447454:	add	x3, x3, #0x10
  447458:	cbz	w6, 4474c4 <argp_parse@@Base+0x76e4>
  44745c:	ldp	w8, w2, [x3, #4]
  447460:	cbz	w1, 4473e4 <argp_parse@@Base+0x7604>
  447464:	ldr	w5, [x3, #12]
  447468:	cmp	w6, #0x2
  44746c:	mvn	w7, w5
  447470:	orr	w5, w5, #0xfffff3ff
  447474:	and	w7, w7, #0xc00
  447478:	b.ne	4473f4 <argp_parse@@Base+0x7614>  // b.any
  44747c:	orr	w2, w2, w10
  447480:	ldrb	w6, [x3]
  447484:	and	w2, w2, w5
  447488:	cmp	w6, #0x2d
  44748c:	cbz	w8, 447438 <argp_parse@@Base+0x7658>
  447490:	and	w2, w2, w8
  447494:	b.eq	4474d0 <argp_parse@@Base+0x76f0>  // b.none
  447498:	cmp	w6, #0x3d
  44749c:	b.ne	447448 <argp_parse@@Base+0x7668>  // b.any
  4474a0:	orn	w7, w7, w8
  4474a4:	mvn	w5, w7
  4474a8:	ldrb	w6, [x3, #17]
  4474ac:	and	w5, w5, #0xfff
  4474b0:	and	w7, w0, w7
  4474b4:	add	x3, x3, #0x10
  4474b8:	orr	w9, w9, w5
  4474bc:	orr	w0, w7, w2
  4474c0:	cbnz	w6, 44745c <argp_parse@@Base+0x767c>
  4474c4:	cbz	x4, 4474cc <argp_parse@@Base+0x76ec>
  4474c8:	str	w9, [x4]
  4474cc:	ret
  4474d0:	orr	w9, w9, w2
  4474d4:	bic	w0, w0, w2
  4474d8:	b	447450 <argp_parse@@Base+0x7670>
  4474dc:	orr	w9, w9, w2
  4474e0:	orr	w0, w0, w2
  4474e4:	b	447450 <argp_parse@@Base+0x7670>
  4474e8:	ands	w7, w0, w10
  4474ec:	b.eq	447428 <argp_parse@@Base+0x7648>  // b.none
  4474f0:	orr	w2, w2, w10
  4474f4:	mov	w7, #0x0                   	// #0
  4474f8:	b	447480 <argp_parse@@Base+0x76a0>
  4474fc:	mov	w9, #0x0                   	// #0
  447500:	b	4474c4 <argp_parse@@Base+0x76e4>
  447504:	nop
  447508:	stp	x29, x30, [sp, #-32]!
  44750c:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  447510:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447514:	mov	x29, sp
  447518:	stp	x19, x20, [sp, #16]
  44751c:	add	x1, x1, #0x738
  447520:	ldr	w20, [x2, #1040]
  447524:	mov	w19, w0
  447528:	mov	w2, #0x5                   	// #5
  44752c:	mov	x0, #0x0                   	// #0
  447530:	bl	4049c0 <dcgettext@plt>
  447534:	mov	w1, w19
  447538:	mov	x2, x0
  44753c:	mov	w0, w20
  447540:	bl	404050 <error@plt>
  447544:	bl	404650 <abort@plt>
  447548:	stp	x29, x30, [sp, #-32]!
  44754c:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  447550:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447554:	mov	x29, sp
  447558:	stp	x19, x20, [sp, #16]
  44755c:	add	x1, x1, #0x768
  447560:	ldr	w20, [x2, #1040]
  447564:	mov	w19, w0
  447568:	mov	w2, #0x5                   	// #5
  44756c:	mov	x0, #0x0                   	// #0
  447570:	bl	4049c0 <dcgettext@plt>
  447574:	mov	w1, w19
  447578:	mov	x2, x0
  44757c:	mov	w0, w20
  447580:	bl	404050 <error@plt>
  447584:	bl	404650 <abort@plt>
  447588:	stp	x29, x30, [sp, #-48]!
  44758c:	mov	x29, sp
  447590:	str	x21, [sp, #32]
  447594:	mov	x21, x3
  447598:	mov	w3, #0x4900                	// #18688
  44759c:	stp	x19, x20, [sp, #16]
  4475a0:	movk	w3, #0x8, lsl #16
  4475a4:	mov	x20, #0x0                   	// #0
  4475a8:	orr	w2, w2, w3
  4475ac:	bl	464398 <_obstack_memory_used@@Base+0x12f88>
  4475b0:	tbnz	w0, #31, 4475c8 <argp_parse@@Base+0x77e8>
  4475b4:	mov	w19, w0
  4475b8:	bl	404610 <fdopendir@plt>
  4475bc:	mov	x20, x0
  4475c0:	cbz	x0, 4475dc <argp_parse@@Base+0x77fc>
  4475c4:	str	w19, [x21]
  4475c8:	mov	x0, x20
  4475cc:	ldp	x19, x20, [sp, #16]
  4475d0:	ldr	x21, [sp, #32]
  4475d4:	ldp	x29, x30, [sp], #48
  4475d8:	ret
  4475dc:	bl	404ad0 <__errno_location@plt>
  4475e0:	mov	x21, x0
  4475e4:	mov	w0, w19
  4475e8:	ldr	w19, [x21]
  4475ec:	bl	4045c0 <close@plt>
  4475f0:	b	4475c4 <argp_parse@@Base+0x77e4>
  4475f4:	nop
  4475f8:	ldr	x6, [x0, #168]
  4475fc:	ldp	x3, x4, [x1, #8]
  447600:	cbz	x6, 44763c <argp_parse@@Base+0x785c>
  447604:	ldr	x2, [x0, #48]
  447608:	cbnz	x2, 44763c <argp_parse@@Base+0x785c>
  44760c:	ldrb	w5, [x0, #161]
  447610:	cbnz	w5, 44763c <argp_parse@@Base+0x785c>
  447614:	ldr	x5, [x0, #200]
  447618:	cmp	x5, #0x0
  44761c:	ccmp	x4, #0x2, #0x0, eq  // eq = none
  447620:	b.le	447728 <argp_parse@@Base+0x7948>
  447624:	ldp	x2, x3, [x1]
  447628:	mov	w1, #0x1                   	// #1
  44762c:	stp	x2, x3, [x0, #32]
  447630:	str	x4, [x0, #48]
  447634:	strb	w1, [x0, #216]
  447638:	ret
  44763c:	cmp	x4, #0x4
  447640:	b.le	4476cc <argp_parse@@Base+0x78ec>
  447644:	mov	x2, #0xd70b                	// #55051
  447648:	mov	x5, #0x594b                	// #22859
  44764c:	movk	x2, #0x70a3, lsl #16
  447650:	movk	x5, #0x3886, lsl #16
  447654:	movk	x2, #0xa3d, lsl #32
  447658:	movk	x5, #0xc5d6, lsl #32
  44765c:	movk	x2, #0xa3d7, lsl #48
  447660:	movk	x5, #0x346d, lsl #48
  447664:	asr	x7, x3, #63
  447668:	sub	x4, x4, #0x4
  44766c:	smulh	x1, x3, x2
  447670:	str	x4, [x0, #48]
  447674:	smulh	x5, x3, x5
  447678:	add	x6, x6, #0x1
  44767c:	add	x1, x1, x3
  447680:	str	x6, [x0, #168]
  447684:	asr	x1, x1, #6
  447688:	asr	x4, x5, #11
  44768c:	sub	x1, x1, x7
  447690:	sub	x4, x4, x7
  447694:	str	x4, [x0, #40]
  447698:	add	x4, x1, x1, lsl #1
  44769c:	smulh	x2, x1, x2
  4476a0:	add	x4, x1, x4, lsl #3
  4476a4:	add	x2, x2, x1
  4476a8:	sub	x3, x3, x4, lsl #2
  4476ac:	str	x3, [x0, #64]
  4476b0:	asr	x2, x2, #6
  4476b4:	sub	x2, x2, x1, asr #63
  4476b8:	add	x3, x2, x2, lsl #1
  4476bc:	add	x2, x2, x3, lsl #3
  4476c0:	sub	x1, x1, x2, lsl #2
  4476c4:	str	x1, [x0, #56]
  4476c8:	ret
  4476cc:	ldr	x1, [x0, #200]
  4476d0:	cmp	x4, #0x2
  4476d4:	mov	x2, #0x0                   	// #0
  4476d8:	add	x1, x1, #0x1
  4476dc:	str	x1, [x0, #200]
  4476e0:	b.le	447714 <argp_parse@@Base+0x7934>
  4476e4:	mov	x1, #0xd70b                	// #55051
  4476e8:	movk	x1, #0x70a3, lsl #16
  4476ec:	movk	x1, #0xa3d, lsl #32
  4476f0:	movk	x1, #0xa3d7, lsl #48
  4476f4:	smulh	x1, x3, x1
  4476f8:	add	x1, x1, x3
  4476fc:	asr	x1, x1, #6
  447700:	sub	x1, x1, x3, asr #63
  447704:	add	x2, x1, x1, lsl #1
  447708:	add	x2, x1, x2, lsl #3
  44770c:	sub	x2, x3, x2, lsl #2
  447710:	mov	x3, x1
  447714:	mov	w1, #0x2                   	// #2
  447718:	str	w1, [x0, #28]
  44771c:	stp	x3, x2, [x0, #72]
  447720:	stp	xzr, xzr, [x0, #88]
  447724:	ret
  447728:	mov	x1, #0x1                   	// #1
  44772c:	str	x1, [x0, #200]
  447730:	b	447714 <argp_parse@@Base+0x7934>
  447734:	nop
  447738:	stp	x29, x30, [sp, #-48]!
  44773c:	mov	w5, #0xb3c5                	// #46021
  447740:	movk	w5, #0x91a2, lsl #16
  447744:	mov	x29, sp
  447748:	stp	x19, x20, [sp, #16]
  44774c:	mov	w20, w0
  447750:	cmp	w0, #0x0
  447754:	mov	w4, #0x2d                  	// #45
  447758:	mov	w0, #0x2b                  	// #43
  44775c:	smull	x5, w20, w5
  447760:	csel	w4, w4, w0, lt  // lt = tstop
  447764:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447768:	mov	x0, x1
  44776c:	add	x3, x3, #0x798
  447770:	mov	x2, #0xffffffffffffffff    	// #-1
  447774:	lsr	x5, x5, #32
  447778:	str	x21, [sp, #32]
  44777c:	add	w5, w20, w5
  447780:	mov	x21, x1
  447784:	mov	w1, #0x1                   	// #1
  447788:	asr	w5, w5, #11
  44778c:	subs	w19, w5, w20, asr #31
  447790:	cneg	w5, w19, mi  // mi = first
  447794:	bl	404010 <__sprintf_chk@plt>
  447798:	mov	w1, #0xe10                 	// #3600
  44779c:	msub	w19, w19, w1, w20
  4477a0:	cbz	w19, 447808 <argp_parse@@Base+0x7a28>
  4477a4:	cmp	w19, #0x0
  4477a8:	mov	w1, #0x8889                	// #34953
  4477ac:	cneg	w19, w19, lt  // lt = tstop
  4477b0:	movk	w1, #0x8888, lsl #16
  4477b4:	add	x3, x21, w0, sxtw
  4477b8:	mov	w5, #0x3a                  	// #58
  4477bc:	strb	w5, [x21, w0, sxtw]
  4477c0:	mov	w2, #0xcccd                	// #52429
  4477c4:	umull	x0, w19, w1
  4477c8:	movk	w2, #0xcccc, lsl #16
  4477cc:	lsr	x1, x0, #37
  4477d0:	lsl	w4, w1, #4
  4477d4:	umull	x0, w1, w2
  4477d8:	sub	w4, w4, w1
  4477dc:	subs	w19, w19, w4, lsl #2
  4477e0:	lsr	x0, x0, #35
  4477e4:	add	w4, w0, #0x30
  4477e8:	strb	w4, [x3, #1]
  4477ec:	add	w0, w0, w0, lsl #2
  4477f0:	sub	w0, w1, w0, lsl #1
  4477f4:	add	w0, w0, #0x30
  4477f8:	strb	w0, [x3, #2]
  4477fc:	add	x0, x3, #0x3
  447800:	b.ne	44781c <argp_parse@@Base+0x7a3c>  // b.any
  447804:	strb	wzr, [x0]
  447808:	mov	x0, x21
  44780c:	ldp	x19, x20, [sp, #16]
  447810:	ldr	x21, [sp, #32]
  447814:	ldp	x29, x30, [sp], #48
  447818:	ret
  44781c:	umull	x2, w19, w2
  447820:	add	x0, x3, #0x6
  447824:	strb	w5, [x3, #3]
  447828:	lsr	x2, x2, #35
  44782c:	add	w1, w2, #0x30
  447830:	strb	w1, [x3, #4]
  447834:	add	w2, w2, w2, lsl #2
  447838:	sub	w19, w19, w2, lsl #1
  44783c:	add	w19, w19, #0x30
  447840:	strb	w19, [x3, #5]
  447844:	b	447804 <argp_parse@@Base+0x7a24>
  447848:	mov	w4, #0x851f                	// #34079
  44784c:	mov	w5, #0x64                  	// #100
  447850:	movk	w4, #0x51eb, lsl #16
  447854:	stp	x29, x30, [sp, #-32]!
  447858:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44785c:	smull	x4, w0, w4
  447860:	mov	x29, sp
  447864:	add	x3, x3, #0x7a0
  447868:	mov	x2, #0xffffffffffffffff    	// #-1
  44786c:	str	x19, [sp, #16]
  447870:	asr	x4, x4, #37
  447874:	mov	x19, x1
  447878:	sub	w4, w4, w0, asr #31
  44787c:	msub	w5, w4, w5, w0
  447880:	cmp	w5, #0x0
  447884:	cneg	w5, w5, lt  // lt = tstop
  447888:	adds	w4, w4, #0x13
  44788c:	cneg	w4, w4, mi  // mi = first
  447890:	cmn	w0, #0x76c
  447894:	cinc	x3, x3, ge  // ge = tcont
  447898:	mov	x0, x1
  44789c:	mov	w1, #0x1                   	// #1
  4478a0:	bl	404010 <__sprintf_chk@plt>
  4478a4:	mov	x0, x19
  4478a8:	ldr	x19, [sp, #16]
  4478ac:	ldp	x29, x30, [sp], #32
  4478b0:	ret
  4478b4:	nop
  4478b8:	stp	x29, x30, [sp, #-320]!
  4478bc:	adrp	x8, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4478c0:	mov	x29, sp
  4478c4:	stp	x19, x20, [sp, #16]
  4478c8:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4478cc:	mov	x19, x0
  4478d0:	stp	x3, x4, [sp, #280]
  4478d4:	add	x0, x8, #0x7b0
  4478d8:	ldr	x3, [x20, #1176]
  4478dc:	str	q0, [sp, #128]
  4478e0:	str	q1, [sp, #144]
  4478e4:	str	q2, [sp, #160]
  4478e8:	str	q3, [sp, #176]
  4478ec:	str	q4, [sp, #192]
  4478f0:	str	q5, [sp, #208]
  4478f4:	str	q6, [sp, #224]
  4478f8:	str	q7, [sp, #240]
  4478fc:	stp	x1, x2, [sp, #264]
  447900:	mov	x1, #0x1                   	// #1
  447904:	mov	x2, #0x6                   	// #6
  447908:	stp	x5, x6, [sp, #296]
  44790c:	str	x7, [sp, #312]
  447910:	bl	4048b0 <fwrite@plt>
  447914:	add	x1, sp, #0x100
  447918:	add	x2, sp, #0x140
  44791c:	add	x3, sp, #0x140
  447920:	mov	w5, #0xffffffc8            	// #-56
  447924:	mov	w4, #0xffffff80            	// #-128
  447928:	stp	x2, x3, [sp, #64]
  44792c:	mov	x2, x19
  447930:	str	x1, [sp, #80]
  447934:	add	x3, sp, #0x20
  447938:	stp	w5, w4, [sp, #88]
  44793c:	mov	w1, #0x1                   	// #1
  447940:	ldp	x6, x7, [sp, #64]
  447944:	stp	x6, x7, [sp, #32]
  447948:	ldp	x4, x5, [sp, #80]
  44794c:	stp	x4, x5, [sp, #48]
  447950:	ldr	x0, [x20, #1176]
  447954:	stp	x6, x7, [sp, #96]
  447958:	stp	x4, x5, [sp, #112]
  44795c:	bl	4044a0 <__vfprintf_chk@plt>
  447960:	ldp	x19, x20, [sp, #16]
  447964:	ldp	x29, x30, [sp], #320
  447968:	ret
  44796c:	nop
  447970:	stp	x29, x30, [sp, #-80]!
  447974:	mov	x3, x0
  447978:	mov	w5, #0x0                   	// #0
  44797c:	mov	x29, sp
  447980:	mov	x0, x2
  447984:	mov	x4, #0x0                   	// #0
  447988:	stp	x19, x20, [sp, #16]
  44798c:	mov	x20, x1
  447990:	mov	x19, x2
  447994:	mov	x1, #0x64                  	// #100
  447998:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44799c:	add	x2, x2, #0x7b8
  4479a0:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  4479a4:	cmp	w0, #0x63
  4479a8:	ccmp	x20, #0x0, #0x4, le
  4479ac:	b.eq	4479c4 <argp_parse@@Base+0x7be4>  // b.none
  4479b0:	str	x21, [sp, #32]
  4479b4:	mov	x21, x0
  4479b8:	ldr	x0, [x20, #208]
  4479bc:	cbnz	x0, 4479d4 <argp_parse@@Base+0x7bf4>
  4479c0:	ldr	x21, [sp, #32]
  4479c4:	mov	x0, x19
  4479c8:	ldp	x19, x20, [sp, #16]
  4479cc:	ldp	x29, x30, [sp], #80
  4479d0:	ret
  4479d4:	ldr	w0, [x20, #24]
  4479d8:	add	x1, sp, #0x30
  4479dc:	add	x20, x19, w21, sxtw
  4479e0:	bl	447738 <argp_parse@@Base+0x7958>
  4479e4:	mov	x5, x0
  4479e8:	mov	w1, #0x64                  	// #100
  4479ec:	sub	w1, w1, w21
  4479f0:	mov	x0, x20
  4479f4:	mov	x3, #0xffffffffffffffff    	// #-1
  4479f8:	sxtw	x1, w1
  4479fc:	mov	w2, #0x1                   	// #1
  447a00:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447a04:	add	x4, x4, #0x7d8
  447a08:	bl	404290 <__snprintf_chk@plt>
  447a0c:	mov	x0, x19
  447a10:	ldp	x19, x20, [sp, #16]
  447a14:	ldr	x21, [sp, #32]
  447a18:	ldp	x29, x30, [sp], #80
  447a1c:	ret
  447a20:	stp	x29, x30, [sp, #-48]!
  447a24:	mov	x29, sp
  447a28:	stp	x19, x20, [sp, #16]
  447a2c:	mov	x19, x0
  447a30:	ldrb	w0, [x0, #224]
  447a34:	mov	x20, x1
  447a38:	cbz	w0, 447aa0 <argp_parse@@Base+0x7cc0>
  447a3c:	ldr	x5, [x19, #8]
  447a40:	add	x0, x5, #0x1
  447a44:	cmp	x0, #0xd
  447a48:	b.hi	447afc <argp_parse@@Base+0x7d1c>  // b.pmore
  447a4c:	add	x3, x0, x0, lsl #1
  447a50:	str	x21, [sp, #32]
  447a54:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  447a58:	add	x21, x21, #0x950
  447a5c:	add	x3, x21, x3, lsl #2
  447a60:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  447a64:	sub	x3, x3, x0
  447a68:	add	x2, x2, #0x828
  447a6c:	mov	x0, x20
  447a70:	mov	x1, #0x64                  	// #100
  447a74:	bl	404200 <snprintf@plt>
  447a78:	ldr	w2, [x19, #16]
  447a7c:	cmp	w2, #0x6
  447a80:	b.hi	447a8c <argp_parse@@Base+0x7cac>  // b.pmore
  447a84:	cmp	w0, #0x63
  447a88:	b.ls	447b30 <argp_parse@@Base+0x7d50>  // b.plast
  447a8c:	ldr	x21, [sp, #32]
  447a90:	mov	x0, x20
  447a94:	ldp	x19, x20, [sp, #16]
  447a98:	ldp	x29, x30, [sp], #48
  447a9c:	ret
  447aa0:	strb	wzr, [x1]
  447aa4:	ldr	w2, [x19, #16]
  447aa8:	cmp	w2, #0x6
  447aac:	b.hi	447a90 <argp_parse@@Base+0x7cb0>  // b.pmore
  447ab0:	str	x21, [sp, #32]
  447ab4:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  447ab8:	add	x21, x21, #0x950
  447abc:	mov	x0, x1
  447ac0:	mov	x4, #0x1                   	// #1
  447ac4:	mov	x1, #0x64                  	// #100
  447ac8:	add	x5, x21, #0xa0
  447acc:	adrp	x3, 469000 <_obstack_memory_used@@Base+0x17bf0>
  447ad0:	add	x3, x3, #0xab8
  447ad4:	add	x5, x5, w2, sxtw #2
  447ad8:	add	x4, x3, x4
  447adc:	mov	w2, #0x1                   	// #1
  447ae0:	mov	x3, #0xffffffffffffffff    	// #-1
  447ae4:	bl	404290 <__snprintf_chk@plt>
  447ae8:	mov	x0, x20
  447aec:	ldp	x19, x20, [sp, #16]
  447af0:	ldr	x21, [sp, #32]
  447af4:	ldp	x29, x30, [sp], #48
  447af8:	ret
  447afc:	mov	w2, #0x1                   	// #1
  447b00:	mov	x0, x20
  447b04:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447b08:	mov	x3, #0xffffffffffffffff    	// #-1
  447b0c:	add	x4, x4, #0x7e0
  447b10:	mov	x1, #0x64                  	// #100
  447b14:	bl	404290 <__snprintf_chk@plt>
  447b18:	ldr	w2, [x19, #16]
  447b1c:	cmp	w2, #0x6
  447b20:	b.hi	447a90 <argp_parse@@Base+0x7cb0>  // b.pmore
  447b24:	str	x21, [sp, #32]
  447b28:	adrp	x21, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  447b2c:	add	x21, x21, #0x950
  447b30:	mov	w1, #0x64                  	// #100
  447b34:	sub	w1, w1, w0
  447b38:	cmp	w0, #0x0
  447b3c:	add	x0, x20, w0, sxtw
  447b40:	sxtw	x1, w1
  447b44:	cset	x4, eq  // eq = none
  447b48:	b	447ac8 <argp_parse@@Base+0x7ce8>
  447b4c:	nop
  447b50:	stp	x29, x30, [sp, #-160]!
  447b54:	mov	w2, #0x5                   	// #5
  447b58:	mov	x29, sp
  447b5c:	stp	x19, x20, [sp, #16]
  447b60:	mov	x19, x1
  447b64:	mov	x20, x0
  447b68:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447b6c:	mov	x0, #0x0                   	// #0
  447b70:	add	x1, x1, #0x7f8
  447b74:	stp	x21, x22, [sp, #32]
  447b78:	bl	4049c0 <dcgettext@plt>
  447b7c:	mov	x1, x20
  447b80:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  447b84:	ldr	x0, [x19, #168]
  447b88:	cbnz	x0, 447d44 <argp_parse@@Base+0x7f64>
  447b8c:	ldrb	w1, [x19, #216]
  447b90:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  447b94:	ldrb	w0, [x19, #223]
  447b98:	ldr	x20, [x22, #1176]
  447b9c:	cmp	w1, w0
  447ba0:	b.eq	447d64 <argp_parse@@Base+0x7f84>  // b.none
  447ba4:	mov	w2, #0x5                   	// #5
  447ba8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447bac:	mov	x0, #0x0                   	// #0
  447bb0:	add	x1, x1, #0x830
  447bb4:	bl	4049c0 <dcgettext@plt>
  447bb8:	mov	x2, x0
  447bbc:	ldr	x3, [x19, #40]
  447bc0:	mov	x0, x20
  447bc4:	mov	w1, #0x1                   	// #1
  447bc8:	bl	404700 <__fprintf_chk@plt>
  447bcc:	ldr	x20, [x22, #1176]
  447bd0:	mov	x2, #0x0                   	// #0
  447bd4:	ldrb	w1, [x19, #216]
  447bd8:	mov	w0, #0x1                   	// #1
  447bdc:	strb	w1, [x19, #223]
  447be0:	ldr	x1, [x19, #200]
  447be4:	cbz	x1, 447bf0 <argp_parse@@Base+0x7e10>
  447be8:	ldrb	w1, [x19, #221]
  447bec:	cbz	w1, 447db8 <argp_parse@@Base+0x7fd8>
  447bf0:	ldr	x1, [x19, #176]
  447bf4:	cbz	x1, 447c58 <argp_parse@@Base+0x7e78>
  447bf8:	ldrb	w1, [x19, #219]
  447bfc:	cbnz	w1, 447c58 <argp_parse@@Base+0x7e78>
  447c00:	cbnz	w0, 447e0c <argp_parse@@Base+0x802c>
  447c04:	mov	w2, #0x5                   	// #5
  447c08:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447c0c:	mov	x0, #0x0                   	// #0
  447c10:	add	x1, x1, #0x868
  447c14:	bl	4049c0 <dcgettext@plt>
  447c18:	mov	x21, x0
  447c1c:	add	x1, sp, #0x38
  447c20:	mov	x0, x19
  447c24:	bl	447a20 <argp_parse@@Base+0x7c40>
  447c28:	mov	x3, x0
  447c2c:	ldr	w5, [x19, #16]
  447c30:	mov	x2, x21
  447c34:	ldr	x4, [x19, #8]
  447c38:	mov	x0, x20
  447c3c:	mov	w1, #0x1                   	// #1
  447c40:	bl	404700 <__fprintf_chk@plt>
  447c44:	ldr	x20, [x22, #1176]
  447c48:	mov	w1, #0x1                   	// #1
  447c4c:	mov	x2, #0x0                   	// #0
  447c50:	mov	w0, #0x1                   	// #1
  447c54:	strb	w1, [x19, #219]
  447c58:	ldr	x1, [x19, #184]
  447c5c:	cbz	x1, 447cdc <argp_parse@@Base+0x7efc>
  447c60:	ldrb	w1, [x19, #220]
  447c64:	cbnz	w1, 447cdc <argp_parse@@Base+0x7efc>
  447c68:	ldr	x0, [x19, #192]
  447c6c:	adrp	x5, 473000 <_obstack_memory_used@@Base+0x21bf0>
  447c70:	ldr	w3, [x19, #20]
  447c74:	add	x5, x5, #0x7e8
  447c78:	cmp	x0, #0x0
  447c7c:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447c80:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447c84:	add	x4, x4, #0x7e8
  447c88:	add	x1, x1, #0x888
  447c8c:	mov	x0, x20
  447c90:	add	x2, x1, x2
  447c94:	csel	x4, x4, x5, ne  // ne = any
  447c98:	mov	w1, #0x1                   	// #1
  447c9c:	bl	404700 <__fprintf_chk@plt>
  447ca0:	ldr	x0, [x19, #208]
  447ca4:	mov	w1, #0x1                   	// #1
  447ca8:	strb	w1, [x19, #220]
  447cac:	cbz	x0, 447e20 <argp_parse@@Base+0x8040>
  447cb0:	ldrb	w0, [x19, #222]
  447cb4:	ldr	x20, [x22, #1176]
  447cb8:	cbz	w0, 447ea8 <argp_parse@@Base+0x80c8>
  447cbc:	ldrb	w0, [x19, #160]
  447cc0:	cbz	w0, 447d28 <argp_parse@@Base+0x7f48>
  447cc4:	ldr	x19, [x19, #88]
  447cc8:	mov	x1, x20
  447ccc:	mov	w0, #0x20                  	// #32
  447cd0:	bl	404170 <fputc@plt>
  447cd4:	ldr	x20, [x22, #1176]
  447cd8:	b	447cfc <argp_parse@@Base+0x7f1c>
  447cdc:	ldr	x1, [x19, #208]
  447ce0:	cbz	x1, 447cec <argp_parse@@Base+0x7f0c>
  447ce4:	ldrb	w1, [x19, #222]
  447ce8:	cbz	w1, 447e30 <argp_parse@@Base+0x8050>
  447cec:	ldrb	w1, [x19, #160]
  447cf0:	cbz	w1, 447d28 <argp_parse@@Base+0x7f48>
  447cf4:	ldr	x19, [x19, #88]
  447cf8:	cbnz	w0, 447cc8 <argp_parse@@Base+0x7ee8>
  447cfc:	mov	w2, #0x5                   	// #5
  447d00:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447d04:	mov	x0, #0x0                   	// #0
  447d08:	add	x1, x1, #0x898
  447d0c:	bl	4049c0 <dcgettext@plt>
  447d10:	mov	x2, x0
  447d14:	mov	x3, x19
  447d18:	mov	x0, x20
  447d1c:	mov	w1, #0x1                   	// #1
  447d20:	bl	404700 <__fprintf_chk@plt>
  447d24:	ldr	x20, [x22, #1176]
  447d28:	mov	x1, x20
  447d2c:	mov	w0, #0xa                   	// #10
  447d30:	bl	404170 <fputc@plt>
  447d34:	ldp	x19, x20, [sp, #16]
  447d38:	ldp	x21, x22, [sp, #32]
  447d3c:	ldp	x29, x30, [sp], #160
  447d40:	ret
  447d44:	ldrb	w0, [x19, #218]
  447d48:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  447d4c:	ldr	x20, [x22, #1176]
  447d50:	cbz	w0, 447d70 <argp_parse@@Base+0x7f90>
  447d54:	ldrb	w1, [x19, #216]
  447d58:	ldrb	w0, [x19, #223]
  447d5c:	cmp	w1, w0
  447d60:	b.ne	447ba4 <argp_parse@@Base+0x7dc4>  // b.any
  447d64:	mov	x2, #0x1                   	// #1
  447d68:	mov	w0, #0x0                   	// #0
  447d6c:	b	447be0 <argp_parse@@Base+0x7e00>
  447d70:	ldp	x4, x5, [x19, #56]
  447d74:	mov	w1, #0x1                   	// #1
  447d78:	ldr	x3, [x19, #40]
  447d7c:	mov	x0, x20
  447d80:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447d84:	add	x2, x2, #0x810
  447d88:	bl	404700 <__fprintf_chk@plt>
  447d8c:	ldrb	w1, [x19, #216]
  447d90:	mov	w2, #0x1                   	// #1
  447d94:	ldrb	w0, [x19, #223]
  447d98:	strb	w2, [x19, #218]
  447d9c:	cmp	w1, w0
  447da0:	b.eq	447e80 <argp_parse@@Base+0x80a0>  // b.none
  447da4:	ldr	x1, [x22, #1176]
  447da8:	mov	w0, #0x20                  	// #32
  447dac:	bl	404170 <fputc@plt>
  447db0:	ldr	x20, [x22, #1176]
  447db4:	b	447ba4 <argp_parse@@Base+0x7dc4>
  447db8:	ldp	x3, x4, [x19, #72]
  447dbc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447dc0:	ldr	x5, [x19, #88]
  447dc4:	add	x1, x1, #0x840
  447dc8:	add	x2, x1, x2
  447dcc:	mov	x0, x20
  447dd0:	mov	w1, #0x1                   	// #1
  447dd4:	bl	404700 <__fprintf_chk@plt>
  447dd8:	ldr	x3, [x19, #96]
  447ddc:	cbnz	x3, 447e90 <argp_parse@@Base+0x80b0>
  447de0:	ldr	w0, [x19, #28]
  447de4:	ldr	x20, [x22, #1176]
  447de8:	cmp	w0, #0x1
  447dec:	b.eq	447eb4 <argp_parse@@Base+0x80d4>  // b.none
  447df0:	ldr	x0, [x19, #176]
  447df4:	mov	w1, #0x1                   	// #1
  447df8:	strb	w1, [x19, #221]
  447dfc:	cbz	x0, 447e74 <argp_parse@@Base+0x8094>
  447e00:	ldrb	w0, [x19, #219]
  447e04:	mov	x2, #0x0                   	// #0
  447e08:	cbnz	w0, 447c58 <argp_parse@@Base+0x7e78>
  447e0c:	mov	x1, x20
  447e10:	mov	w0, #0x20                  	// #32
  447e14:	bl	404170 <fputc@plt>
  447e18:	ldr	x20, [x22, #1176]
  447e1c:	b	447c04 <argp_parse@@Base+0x7e24>
  447e20:	ldrb	w0, [x19, #160]
  447e24:	ldr	x20, [x22, #1176]
  447e28:	cbz	w0, 447d28 <argp_parse@@Base+0x7f48>
  447e2c:	b	447cc4 <argp_parse@@Base+0x7ee4>
  447e30:	adrp	x21, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447e34:	add	x21, x21, #0x7f0
  447e38:	add	x21, x2, x21
  447e3c:	ldr	w0, [x19, #24]
  447e40:	add	x1, sp, #0x38
  447e44:	bl	447738 <argp_parse@@Base+0x7958>
  447e48:	mov	x3, x0
  447e4c:	mov	w1, #0x1                   	// #1
  447e50:	mov	x0, x20
  447e54:	mov	x2, x21
  447e58:	bl	404700 <__fprintf_chk@plt>
  447e5c:	ldrb	w0, [x19, #160]
  447e60:	mov	w1, #0x1                   	// #1
  447e64:	strb	w1, [x19, #222]
  447e68:	ldr	x20, [x22, #1176]
  447e6c:	cbnz	w0, 447cc4 <argp_parse@@Base+0x7ee4>
  447e70:	b	447d28 <argp_parse@@Base+0x7f48>
  447e74:	mov	x2, #0x0                   	// #0
  447e78:	mov	w0, #0x1                   	// #1
  447e7c:	b	447c58 <argp_parse@@Base+0x7e78>
  447e80:	ldr	x20, [x22, #1176]
  447e84:	mov	x2, #0x0                   	// #0
  447e88:	mov	w0, #0x1                   	// #1
  447e8c:	b	447be0 <argp_parse@@Base+0x7e00>
  447e90:	ldr	x0, [x22, #1176]
  447e94:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447e98:	mov	w1, #0x1                   	// #1
  447e9c:	add	x2, x2, #0x858
  447ea0:	bl	404700 <__fprintf_chk@plt>
  447ea4:	b	447de0 <argp_parse@@Base+0x8000>
  447ea8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447eac:	add	x21, x2, #0x7f0
  447eb0:	b	447e3c <argp_parse@@Base+0x805c>
  447eb4:	mov	x3, x20
  447eb8:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447ebc:	mov	x2, #0x2                   	// #2
  447ec0:	add	x0, x0, #0x860
  447ec4:	mov	x1, #0x1                   	// #1
  447ec8:	bl	4048b0 <fwrite@plt>
  447ecc:	ldr	x20, [x22, #1176]
  447ed0:	b	447df0 <argp_parse@@Base+0x8010>
  447ed4:	nop
  447ed8:	stp	x29, x30, [sp, #-32]!
  447edc:	mov	w2, #0x5                   	// #5
  447ee0:	mov	x29, sp
  447ee4:	stp	x19, x20, [sp, #16]
  447ee8:	mov	x19, x1
  447eec:	mov	x20, x0
  447ef0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447ef4:	mov	x0, #0x0                   	// #0
  447ef8:	add	x1, x1, #0x7f8
  447efc:	bl	4049c0 <dcgettext@plt>
  447f00:	mov	x1, x20
  447f04:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  447f08:	ldr	x3, [x19, #104]
  447f0c:	cbnz	x3, 44807c <argp_parse@@Base+0x829c>
  447f10:	ldr	x3, [x19, #112]
  447f14:	cbz	x3, 44802c <argp_parse@@Base+0x824c>
  447f18:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447f1c:	add	x2, x2, #0x8b1
  447f20:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  447f24:	ldr	x0, [x20, #1176]
  447f28:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447f2c:	mov	w1, #0x1                   	// #1
  447f30:	add	x4, x4, #0x8d8
  447f34:	bl	404700 <__fprintf_chk@plt>
  447f38:	ldr	x3, [x19, #120]
  447f3c:	ldr	x0, [x20, #1176]
  447f40:	cbz	x3, 4480b0 <argp_parse@@Base+0x82d0>
  447f44:	mov	x2, #0x0                   	// #0
  447f48:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447f4c:	add	x1, x1, #0x8b0
  447f50:	add	x2, x1, x2
  447f54:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447f58:	mov	w1, #0x1                   	// #1
  447f5c:	add	x4, x4, #0x8e8
  447f60:	bl	404700 <__fprintf_chk@plt>
  447f64:	ldr	x0, [x20, #1176]
  447f68:	mov	x1, #0x0                   	// #0
  447f6c:	ldr	x3, [x19, #128]
  447f70:	cbz	x3, 447f98 <argp_parse@@Base+0x81b8>
  447f74:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447f78:	add	x2, x2, #0x8b0
  447f7c:	add	x2, x2, x1
  447f80:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447f84:	mov	w1, #0x1                   	// #1
  447f88:	add	x4, x4, #0x8f0
  447f8c:	bl	404700 <__fprintf_chk@plt>
  447f90:	ldr	x0, [x20, #1176]
  447f94:	mov	x1, #0x0                   	// #0
  447f98:	ldr	x3, [x19, #136]
  447f9c:	cbz	x3, 447fc4 <argp_parse@@Base+0x81e4>
  447fa0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447fa4:	add	x2, x2, #0x8b0
  447fa8:	add	x2, x2, x1
  447fac:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447fb0:	mov	w1, #0x1                   	// #1
  447fb4:	add	x4, x4, #0x8f8
  447fb8:	bl	404700 <__fprintf_chk@plt>
  447fbc:	ldr	x0, [x20, #1176]
  447fc0:	mov	x1, #0x0                   	// #0
  447fc4:	ldr	x3, [x19, #144]
  447fc8:	cbz	x3, 447ff0 <argp_parse@@Base+0x8210>
  447fcc:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447fd0:	add	x2, x2, #0x8b0
  447fd4:	add	x2, x2, x1
  447fd8:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447fdc:	mov	w1, #0x1                   	// #1
  447fe0:	add	x4, x4, #0x900
  447fe4:	bl	404700 <__fprintf_chk@plt>
  447fe8:	ldr	x0, [x20, #1176]
  447fec:	mov	x1, #0x0                   	// #0
  447ff0:	ldrsw	x3, [x19, #152]
  447ff4:	cbz	x3, 448018 <argp_parse@@Base+0x8238>
  447ff8:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  447ffc:	add	x2, x2, #0x8b0
  448000:	add	x2, x2, x1
  448004:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448008:	mov	w1, #0x1                   	// #1
  44800c:	add	x4, x4, #0x908
  448010:	bl	404700 <__fprintf_chk@plt>
  448014:	ldr	x0, [x20, #1176]
  448018:	mov	x1, x0
  44801c:	ldp	x19, x20, [sp, #16]
  448020:	mov	w0, #0xa                   	// #10
  448024:	ldp	x29, x30, [sp], #32
  448028:	b	404170 <fputc@plt>
  44802c:	ldr	x3, [x19, #120]
  448030:	cbnz	x3, 4480bc <argp_parse@@Base+0x82dc>
  448034:	ldr	x3, [x19, #128]
  448038:	cbnz	x3, 4480cc <argp_parse@@Base+0x82ec>
  44803c:	ldr	x0, [x19, #136]
  448040:	cbnz	x0, 4480cc <argp_parse@@Base+0x82ec>
  448044:	ldr	x0, [x19, #144]
  448048:	cbnz	x0, 4480cc <argp_parse@@Base+0x82ec>
  44804c:	ldr	w0, [x19, #152]
  448050:	cbnz	w0, 4480cc <argp_parse@@Base+0x82ec>
  448054:	mov	w2, #0x5                   	// #5
  448058:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44805c:	mov	x0, #0x0                   	// #0
  448060:	add	x1, x1, #0x8c0
  448064:	bl	4049c0 <dcgettext@plt>
  448068:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44806c:	ldp	x19, x20, [sp, #16]
  448070:	ldp	x29, x30, [sp], #32
  448074:	ldr	x1, [x1, #1176]
  448078:	b	404000 <fputs@plt>
  44807c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  448080:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448084:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448088:	add	x4, x4, #0x8d0
  44808c:	ldr	x0, [x20, #1176]
  448090:	add	x2, x2, #0x8b1
  448094:	mov	w1, #0x1                   	// #1
  448098:	bl	404700 <__fprintf_chk@plt>
  44809c:	ldr	x3, [x19, #112]
  4480a0:	cbz	x3, 447f38 <argp_parse@@Base+0x8158>
  4480a4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4480a8:	add	x2, x2, #0x8b0
  4480ac:	b	447f24 <argp_parse@@Base+0x8144>
  4480b0:	mov	x1, #0x0                   	// #0
  4480b4:	ldr	x3, [x19, #128]
  4480b8:	b	447f70 <argp_parse@@Base+0x8190>
  4480bc:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4480c0:	mov	x2, #0x1                   	// #1
  4480c4:	ldr	x0, [x20, #1176]
  4480c8:	b	447f48 <argp_parse@@Base+0x8168>
  4480cc:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4480d0:	mov	x1, #0x1                   	// #1
  4480d4:	ldr	x0, [x20, #1176]
  4480d8:	b	447f70 <argp_parse@@Base+0x8190>
  4480dc:	nop
  4480e0:	sub	sp, sp, #0x5f0
  4480e4:	adrp	x3, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  4480e8:	stp	x29, x30, [sp]
  4480ec:	mov	x29, sp
  4480f0:	stp	x19, x20, [sp, #16]
  4480f4:	add	x20, sp, #0x190
  4480f8:	stp	x21, x22, [sp, #32]
  4480fc:	add	x21, sp, #0xf8
  448100:	mov	x19, x21
  448104:	stp	x23, x24, [sp, #48]
  448108:	add	x22, x3, #0x950
  44810c:	mov	w23, #0xfffffffe            	// #-2
  448110:	stp	x25, x26, [sp, #64]
  448114:	mov	x25, x0
  448118:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44811c:	add	x0, x0, #0x8a0
  448120:	stp	x27, x28, [sp, #80]
  448124:	mov	w26, #0x0                   	// #0
  448128:	str	wzr, [sp, #108]
  44812c:	mov	w27, #0x26                  	// #38
  448130:	str	x0, [sp, #112]
  448134:	cmn	w27, #0x5d
  448138:	strh	wzr, [sp, #248]
  44813c:	mov	w24, w27
  448140:	mov	w28, #0x0                   	// #0
  448144:	b.eq	448268 <argp_parse@@Base+0x8488>  // b.none
  448148:	cmn	w23, #0x2
  44814c:	b.eq	448510 <argp_parse@@Base+0x8730>  // b.none
  448150:	cmp	w23, #0x0
  448154:	b.le	448484 <argp_parse@@Base+0x86a4>
  448158:	cmp	w23, #0x115
  44815c:	b.le	448540 <argp_parse@@Base+0x8760>
  448160:	add	w24, w27, #0x2
  448164:	mov	w0, #0x2                   	// #2
  448168:	cmp	w24, #0x70
  44816c:	b.hi	448268 <argp_parse@@Base+0x8488>  // b.pmore
  448170:	add	x1, x22, #0xb20
  448174:	ldrsb	w1, [x1, w24, sxtw]
  448178:	cmp	w1, w0
  44817c:	b.ne	448268 <argp_parse@@Base+0x8488>  // b.any
  448180:	add	x0, x22, #0xba0
  448184:	ldrb	w28, [x0, w24, sxtw]
  448188:	cbnz	w28, 4484a4 <argp_parse@@Base+0x86c4>
  44818c:	add	x2, sp, #0x200
  448190:	mov	x4, x19
  448194:	ldp	x0, x1, [x20, #56]
  448198:	add	x27, sp, #0x158
  44819c:	stp	x0, x1, [x2, #-168]
  4481a0:	mov	x3, x20
  4481a4:	add	x0, sp, #0x260
  4481a8:	ldp	x6, x7, [x20, #88]
  4481ac:	mov	w10, #0xffffffe4            	// #-28
  4481b0:	stp	x6, x7, [x0, #-232]
  4481b4:	ldrsb	w2, [x22, #3396]
  4481b8:	ldp	x6, x12, [x20, #64]
  4481bc:	ldp	x8, x9, [x20, #72]
  4481c0:	stp	x8, x9, [x0, #-248]
  4481c4:	ldr	w9, [x20, #104]
  4481c8:	ldp	x11, x28, [x20, #80]
  4481cc:	ldp	x24, x5, [x20, #96]
  4481d0:	str	x5, [sp, #392]
  4481d4:	ldr	x5, [x20, #56]
  4481d8:	stp	x5, x6, [sp, #344]
  4481dc:	add	x20, x3, #0x38
  4481e0:	stp	x12, x11, [sp, #360]
  4481e4:	add	w2, w26, w2
  4481e8:	cmp	w2, #0x70
  4481ec:	stp	x28, x24, [sp, #376]
  4481f0:	str	w9, [sp, #392]
  4481f4:	ldp	x0, x1, [x27]
  4481f8:	stp	x0, x1, [x3, #56]
  4481fc:	ldp	x0, x1, [x27, #16]
  448200:	stp	x0, x1, [x20, #16]
  448204:	ldp	x0, x1, [x27, #32]
  448208:	stp	x0, x1, [x20, #32]
  44820c:	ldr	x0, [x27, #48]
  448210:	str	x0, [x20, #48]
  448214:	b.hi	448228 <argp_parse@@Base+0x8448>  // b.pmore
  448218:	add	x0, x22, #0xb20
  44821c:	ldrsb	w0, [x0, w2, sxtw]
  448220:	cmp	w0, w26
  448224:	b.eq	448504 <argp_parse@@Base+0x8724>  // b.none
  448228:	add	x0, x22, #0xd80
  44822c:	ldrsb	w28, [x0, w10, sxtw]
  448230:	sxth	w26, w28
  448234:	strh	w26, [x4, #2]
  448238:	add	x19, x4, #0x2
  44823c:	add	x0, x21, #0x26
  448240:	cmp	x19, x0
  448244:	b.cs	449bf8 <argp_parse@@Base+0x9e18>  // b.hs, b.nlast
  448248:	cmp	w28, #0xc
  44824c:	b.eq	449c00 <argp_parse@@Base+0x9e20>  // b.none
  448250:	add	x0, x22, #0x980
  448254:	ldrsb	w27, [x0, w28, sxtw]
  448258:	cmn	w27, #0x5d
  44825c:	mov	w24, w27
  448260:	b.ne	448148 <argp_parse@@Base+0x8368>  // b.any
  448264:	nop
  448268:	add	x0, x22, #0xc20
  44826c:	ldrb	w1, [x0, w28, sxtw]
  448270:	cbnz	w1, 448320 <argp_parse@@Base+0x8540>
  448274:	ldr	w0, [sp, #108]
  448278:	cmp	w0, #0x3
  44827c:	b.ne	44828c <argp_parse@@Base+0x84ac>  // b.any
  448280:	cmp	w23, #0x0
  448284:	b.gt	4484fc <argp_parse@@Base+0x871c>
  448288:	b.eq	448460 <argp_parse@@Base+0x8680>  // b.none
  44828c:	add	x2, x22, #0xb20
  448290:	add	x3, x22, #0xba0
  448294:	add	x1, x22, #0x980
  448298:	b	4482b0 <argp_parse@@Base+0x84d0>
  44829c:	cmp	x19, x21
  4482a0:	b.eq	448460 <argp_parse@@Base+0x8680>  // b.none
  4482a4:	ldrsh	w0, [x19, #-2]!
  4482a8:	sub	x20, x20, #0x38
  4482ac:	ldrsb	w27, [x1, w0, sxtw]
  4482b0:	cmn	w27, #0x5d
  4482b4:	b.eq	44829c <argp_parse@@Base+0x84bc>  // b.none
  4482b8:	add	w27, w27, #0x1
  4482bc:	cmp	w27, #0x70
  4482c0:	b.hi	44829c <argp_parse@@Base+0x84bc>  // b.pmore
  4482c4:	ldrsb	w0, [x2, w27, sxtw]
  4482c8:	cmp	w0, #0x1
  4482cc:	b.ne	44829c <argp_parse@@Base+0x84bc>  // b.any
  4482d0:	ldrb	w28, [x3, w27, sxtw]
  4482d4:	cbz	w28, 44829c <argp_parse@@Base+0x84bc>
  4482d8:	ldr	x0, [sp, #120]
  4482dc:	str	x0, [sp, #296]
  4482e0:	ldr	x0, [sp, #128]
  4482e4:	str	x0, [sp, #304]
  4482e8:	ldp	x0, x1, [sp, #288]
  4482ec:	add	x5, x20, #0x38
  4482f0:	ldp	x2, x3, [sp, #304]
  4482f4:	stp	x0, x1, [x20, #56]
  4482f8:	mov	w0, #0x3                   	// #3
  4482fc:	stp	x2, x3, [x5, #16]
  448300:	mov	x4, x19
  448304:	mov	x20, x5
  448308:	str	w0, [sp, #108]
  44830c:	ldp	x0, x1, [sp, #320]
  448310:	stp	x0, x1, [x5, #32]
  448314:	ldr	x2, [sp, #336]
  448318:	str	x2, [x5, #48]
  44831c:	b	448230 <argp_parse@@Base+0x8450>
  448320:	add	x2, x22, #0xca0
  448324:	mov	w0, #0x1                   	// #1
  448328:	mov	w4, #0x38                  	// #56
  44832c:	sub	w3, w1, #0x4
  448330:	sxtw	x10, w1
  448334:	cmp	w3, #0x57
  448338:	ldrb	w13, [x2, w1, sxtw]
  44833c:	add	x27, sp, #0x158
  448340:	sub	w0, w0, w13
  448344:	smull	x0, w0, w4
  448348:	add	x4, sp, #0x200
  44834c:	add	x2, x20, x0
  448350:	ldr	x5, [x20, x0]
  448354:	ldp	x0, x1, [x2]
  448358:	stp	x0, x1, [x4, #-168]
  44835c:	add	x4, sp, #0x260
  448360:	ldp	x0, x1, [x2, #16]
  448364:	stp	x0, x1, [x4, #-248]
  448368:	ldr	w9, [x2, #48]
  44836c:	ldp	x0, x1, [x2, #32]
  448370:	stp	x0, x1, [x4, #-232]
  448374:	ldp	x24, x0, [x2, #40]
  448378:	str	x0, [sp, #392]
  44837c:	ldp	x6, x12, [x2, #8]
  448380:	ldp	x11, x28, [x2, #24]
  448384:	b.ls	448490 <argp_parse@@Base+0x86b0>  // b.plast
  448388:	add	x1, x22, #0xd00
  44838c:	sub	x4, x19, w13, uxtb #1
  448390:	add	x0, x22, #0xd60
  448394:	mov	w3, #0x38                  	// #56
  448398:	ldrb	w10, [x1, x10]
  44839c:	umsubl	x3, w13, w3, x20
  4483a0:	ldrsh	w26, [x4]
  4483a4:	sub	w10, w10, #0x1c
  4483a8:	ldrsb	w2, [x0, w10, sxtw]
  4483ac:	b	4481d8 <argp_parse@@Base+0x83f8>
  4483b0:	ldp	x4, x1, [x20, #32]
  4483b4:	stp	x5, x6, [sp, #136]
  4483b8:	ldr	w3, [x25, #152]
  4483bc:	ldp	x10, x0, [x25, #136]
  4483c0:	stp	x11, x12, [sp, #152]
  4483c4:	ldr	w2, [x20, #48]
  4483c8:	str	w9, [sp, #168]
  4483cc:	adds	w2, w3, w2
  4483d0:	str	w2, [x25, #152]
  4483d4:	cset	w3, vs
  4483d8:	adds	x0, x0, x1
  4483dc:	str	x0, [x25, #144]
  4483e0:	cset	x0, vs
  4483e4:	adds	x10, x10, x4
  4483e8:	orr	w3, w3, w0
  4483ec:	cset	x14, vs
  4483f0:	ldr	x1, [x20, #24]
  4483f4:	str	x10, [x25, #136]
  4483f8:	ldr	x0, [x25, #128]
  4483fc:	ldr	x4, [x20, #16]
  448400:	adds	x1, x0, x1
  448404:	ldr	x0, [x25, #120]
  448408:	cset	x13, vs
  44840c:	ldr	x2, [x20]
  448410:	adds	x0, x0, x4
  448414:	stp	x0, x1, [x25, #120]
  448418:	cset	x0, vs
  44841c:	orr	x13, x14, x13
  448420:	ldr	x4, [x20, #8]
  448424:	ldr	x1, [x25, #112]
  448428:	adds	x1, x1, x4
  44842c:	str	x1, [x25, #112]
  448430:	ldr	x1, [x25, #104]
  448434:	cset	x4, vs
  448438:	orr	x0, x0, x4
  44843c:	ldur	x4, [x20, #-56]
  448440:	adds	x1, x1, x2
  448444:	orr	w0, w0, w13
  448448:	str	w4, [x25, #24]
  44844c:	str	x1, [x25, #104]
  448450:	orr	w0, w0, w3
  448454:	csinc	w0, w0, wzr, vc
  448458:	cbz	w0, 449344 <argp_parse@@Base+0x9564>
  44845c:	nop
  448460:	mov	w0, #0x1                   	// #1
  448464:	ldp	x29, x30, [sp]
  448468:	ldp	x19, x20, [sp, #16]
  44846c:	ldp	x21, x22, [sp, #32]
  448470:	ldp	x23, x24, [sp, #48]
  448474:	ldp	x25, x26, [sp, #64]
  448478:	ldp	x27, x28, [sp, #80]
  44847c:	add	sp, sp, #0x5f0
  448480:	ret
  448484:	mov	w0, #0x0                   	// #0
  448488:	mov	w23, #0x0                   	// #0
  44848c:	b	448168 <argp_parse@@Base+0x8388>
  448490:	ldr	x0, [sp, #112]
  448494:	ldrh	w0, [x0, w3, uxtw #1]
  448498:	adr	x1, 4484a4 <argp_parse@@Base+0x86c4>
  44849c:	add	x0, x1, w0, sxth #2
  4484a0:	br	x0
  4484a4:	ldr	x0, [sp, #120]
  4484a8:	str	x0, [sp, #296]
  4484ac:	ldr	w7, [sp, #108]
  4484b0:	add	x5, x20, #0x38
  4484b4:	ldr	x0, [sp, #128]
  4484b8:	str	x0, [sp, #304]
  4484bc:	ldp	x0, x1, [sp, #288]
  4484c0:	cmp	w7, #0x0
  4484c4:	cset	w6, ne  // ne = any
  4484c8:	stp	x0, x1, [x20, #56]
  4484cc:	sub	w0, w7, w6
  4484d0:	str	w0, [sp, #108]
  4484d4:	mov	x4, x19
  4484d8:	ldp	x2, x3, [sp, #304]
  4484dc:	mov	x20, x5
  4484e0:	ldp	x0, x1, [sp, #320]
  4484e4:	mov	w23, #0xfffffffe            	// #-2
  4484e8:	ldr	x6, [sp, #336]
  4484ec:	stp	x2, x3, [x5, #16]
  4484f0:	stp	x0, x1, [x5, #32]
  4484f4:	str	x6, [x5, #48]
  4484f8:	b	448230 <argp_parse@@Base+0x8450>
  4484fc:	mov	w23, #0xfffffffe            	// #-2
  448500:	b	44828c <argp_parse@@Base+0x84ac>
  448504:	add	x0, x22, #0xba0
  448508:	ldrb	w28, [x0, w2, sxtw]
  44850c:	b	448230 <argp_parse@@Base+0x8450>
  448510:	ldr	x1, [x25]
  448514:	mov	w6, #0xffffffff            	// #-1
  448518:	ldrb	w0, [x1]
  44851c:	cmp	w0, #0xd
  448520:	b.hi	448550 <argp_parse@@Base+0x8770>  // b.pmore
  448524:	cmp	w0, #0x8
  448528:	b.hi	448634 <argp_parse@@Base+0x8854>  // b.pmore
  44852c:	add	x0, x1, #0x1
  448530:	str	x0, [x25]
  448534:	mov	w0, #0x0                   	// #0
  448538:	ldrb	w23, [x1]
  44853c:	cbz	w23, 448168 <argp_parse@@Base+0x8388>
  448540:	add	x0, x22, #0xa00
  448544:	ldrb	w0, [x0, w23, sxtw]
  448548:	add	w24, w27, w0
  44854c:	b	448168 <argp_parse@@Base+0x8388>
  448550:	cmp	w0, #0x20
  448554:	b.eq	448634 <argp_parse@@Base+0x8854>  // b.none
  448558:	sub	w2, w0, #0x2b
  44855c:	cmp	w0, #0x2d
  448560:	sub	w3, w0, #0x30
  448564:	and	w2, w2, #0xfffffffd
  448568:	cset	w4, eq  // eq = none
  44856c:	and	w2, w2, #0xff
  448570:	cmp	w3, #0x9
  448574:	b.hi	448644 <argp_parse@@Base+0x8864>  // b.pmore
  448578:	cbnz	w2, 449c88 <argp_parse@@Base+0x9ea8>
  44857c:	cmp	w4, #0x0
  448580:	cneg	w5, w6, eq  // eq = none
  448584:	add	x1, x1, #0x1
  448588:	str	x1, [x25]
  44858c:	ldrb	w0, [x1]
  448590:	cmp	w0, #0xd
  448594:	b.hi	4485b4 <argp_parse@@Base+0x87d4>  // b.pmore
  448598:	cmp	w0, #0x8
  44859c:	b.ls	44851c <argp_parse@@Base+0x873c>  // b.plast
  4485a0:	add	x1, x1, #0x1
  4485a4:	str	x1, [x25]
  4485a8:	ldrb	w0, [x1]
  4485ac:	cmp	w0, #0xd
  4485b0:	b.ls	448598 <argp_parse@@Base+0x87b8>  // b.plast
  4485b4:	cmp	w0, #0x20
  4485b8:	b.eq	448584 <argp_parse@@Base+0x87a4>  // b.none
  4485bc:	sub	w3, w0, #0x30
  4485c0:	cmp	w3, #0x9
  4485c4:	b.hi	44851c <argp_parse@@Base+0x873c>  // b.pmore
  4485c8:	mov	x8, x1
  4485cc:	cmn	w5, #0x1
  4485d0:	b.eq	4486a4 <argp_parse@@Base+0x88c4>  // b.none
  4485d4:	sxtw	x2, w3
  4485d8:	mov	x0, #0x0                   	// #0
  4485dc:	adds	x6, x0, x2
  4485e0:	mov	x7, #0xa                   	// #10
  4485e4:	mov	x4, x6
  4485e8:	b.vs	448624 <argp_parse@@Base+0x8844>
  4485ec:	ldrb	w0, [x1, #1]
  4485f0:	add	x2, x1, #0x1
  4485f4:	sub	w3, w0, #0x30
  4485f8:	cmp	w3, #0x9
  4485fc:	b.hi	4487a8 <argp_parse@@Base+0x89c8>  // b.pmore
  448600:	mul	x0, x6, x7
  448604:	smulh	x6, x6, x7
  448608:	cmp	x6, x0, asr #63
  44860c:	b.ne	448624 <argp_parse@@Base+0x8844>  // b.any
  448610:	mov	x1, x2
  448614:	sxtw	x2, w3
  448618:	adds	x6, x0, x2
  44861c:	mov	x4, x6
  448620:	b.vc	4485ec <argp_parse@@Base+0x880c>
  448624:	mov	w0, #0x2                   	// #2
  448628:	mov	w23, #0x3f                  	// #63
  44862c:	add	w24, w27, w0
  448630:	b	448168 <argp_parse@@Base+0x8388>
  448634:	add	x1, x1, #0x1
  448638:	str	x1, [x25]
  44863c:	ldrb	w0, [x1]
  448640:	b	44851c <argp_parse@@Base+0x873c>
  448644:	cbz	w2, 44857c <argp_parse@@Base+0x879c>
  448648:	cmp	w0, #0x5a
  44864c:	b.ls	44894c <argp_parse@@Base+0x8b6c>  // b.plast
  448650:	sub	w2, w0, #0x61
  448654:	and	w2, w2, #0xff
  448658:	cmp	w2, #0x19
  44865c:	b.hi	44852c <argp_parse@@Base+0x874c>  // b.pmore
  448660:	add	x2, sp, #0xe0
  448664:	add	x1, x1, #0x1
  448668:	add	x5, x2, #0x13
  44866c:	nop
  448670:	cmp	x2, x5
  448674:	b.cs	44867c <argp_parse@@Base+0x889c>  // b.hs, b.nlast
  448678:	strb	w0, [x2], #1
  44867c:	str	x1, [x25]
  448680:	ldrb	w0, [x1]
  448684:	cmp	w0, #0x5a
  448688:	b.hi	448724 <argp_parse@@Base+0x8944>  // b.pmore
  44868c:	cmp	w0, #0x40
  448690:	b.hi	44869c <argp_parse@@Base+0x88bc>  // b.pmore
  448694:	cmp	w0, #0x2e
  448698:	b.ne	448734 <argp_parse@@Base+0x8954>  // b.any
  44869c:	add	x1, x1, #0x1
  4486a0:	b	448670 <argp_parse@@Base+0x8890>
  4486a4:	mov	x7, x1
  4486a8:	mov	x3, #0x0                   	// #0
  4486ac:	mov	w9, #0x30                  	// #48
  4486b0:	mov	x8, #0xa                   	// #10
  4486b4:	sub	w0, w9, w0
  4486b8:	sxtw	x0, w0
  4486bc:	adds	x6, x3, x0
  4486c0:	mov	x4, x6
  4486c4:	b.vs	448624 <argp_parse@@Base+0x8844>
  4486c8:	ldrb	w0, [x7, #1]
  4486cc:	add	x2, x7, #0x1
  4486d0:	sub	w3, w0, #0x30
  4486d4:	cmp	w3, #0x9
  4486d8:	b.ls	4489a0 <argp_parse@@Base+0x8bc0>  // b.plast
  4486dc:	and	w0, w0, #0xfffffffd
  4486e0:	cmp	w0, #0x2c
  4486e4:	b.ne	448700 <argp_parse@@Base+0x8920>  // b.any
  4486e8:	ldrb	w0, [x2, #1]
  4486ec:	sub	w0, w0, #0x30
  4486f0:	cmp	w0, #0x9
  4486f4:	b.hi	448700 <argp_parse@@Base+0x8920>  // b.pmore
  4486f8:	mov	x1, x7
  4486fc:	b	4487c8 <argp_parse@@Base+0x89e8>
  448700:	sub	x0, x2, x1
  448704:	mov	w23, #0x112                 	// #274
  448708:	mov	w1, #0x1                   	// #1
  44870c:	str	x2, [x25]
  448710:	stp	x6, x0, [sp, #120]
  448714:	mov	w0, #0x13                  	// #19
  448718:	add	w24, w27, w0
  44871c:	strb	w1, [sp, #288]
  448720:	b	448168 <argp_parse@@Base+0x8388>
  448724:	sub	w3, w0, #0x61
  448728:	and	w3, w3, #0xff
  44872c:	cmp	w3, #0x19
  448730:	b.ls	44869c <argp_parse@@Base+0x88bc>  // b.plast
  448734:	strb	wzr, [x2]
  448738:	add	x1, sp, #0xe0
  44873c:	ldrb	w0, [sp, #224]
  448740:	cbz	w0, 448764 <argp_parse@@Base+0x8984>
  448744:	nop
  448748:	sub	w2, w0, #0x61
  44874c:	cmp	w2, #0x19
  448750:	b.hi	448798 <argp_parse@@Base+0x89b8>  // b.pmore
  448754:	sub	w0, w0, #0x20
  448758:	strb	w0, [x1]
  44875c:	ldrb	w0, [x1, #1]!
  448760:	cbnz	w0, 448748 <argp_parse@@Base+0x8968>
  448764:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448768:	add	x23, x22, #0xc0
  44876c:	add	x1, x1, #0x918
  448770:	b	44877c <argp_parse@@Base+0x899c>
  448774:	ldr	x1, [x23, #16]!
  448778:	cbz	x1, 449bb4 <argp_parse@@Base+0x9dd4>
  44877c:	add	x0, sp, #0xe0
  448780:	bl	404710 <strcmp@plt>
  448784:	cbnz	w0, 448774 <argp_parse@@Base+0x8994>
  448788:	ldrsw	x0, [x23, #12]
  44878c:	ldr	w23, [x23, #8]
  448790:	str	x0, [sp, #288]
  448794:	b	448150 <argp_parse@@Base+0x8370>
  448798:	strb	w0, [x1]
  44879c:	ldrb	w0, [x1, #1]!
  4487a0:	cbnz	w0, 448748 <argp_parse@@Base+0x8968>
  4487a4:	b	448764 <argp_parse@@Base+0x8984>
  4487a8:	and	w0, w0, #0xfffffffd
  4487ac:	and	w0, w0, #0xff
  4487b0:	cmp	w0, #0x2c
  4487b4:	b.ne	448914 <argp_parse@@Base+0x8b34>  // b.any
  4487b8:	ldrb	w0, [x2, #1]
  4487bc:	sub	w0, w0, #0x30
  4487c0:	cmp	w0, #0x9
  4487c4:	b.hi	448914 <argp_parse@@Base+0x8b34>  // b.pmore
  4487c8:	ldrb	w3, [x2, #2]
  4487cc:	add	w0, w0, w0, lsl #2
  4487d0:	sub	w3, w3, #0x30
  4487d4:	lsl	w0, w0, #1
  4487d8:	cmp	w3, #0x9
  4487dc:	b.hi	4489b8 <argp_parse@@Base+0x8bd8>  // b.pmore
  4487e0:	ldrb	w1, [x1, #4]
  4487e4:	add	w0, w0, w3
  4487e8:	add	x6, x2, #0x3
  4487ec:	sub	w3, w1, #0x30
  4487f0:	cmp	w3, #0x9
  4487f4:	b.hi	4489bc <argp_parse@@Base+0x8bdc>  // b.pmore
  4487f8:	add	w0, w0, w0, lsl #2
  4487fc:	ldrb	w1, [x2, #4]
  448800:	add	w0, w3, w0, lsl #1
  448804:	sub	w3, w1, #0x30
  448808:	cmp	w3, #0x9
  44880c:	add	w0, w0, w0, lsl #2
  448810:	lsl	w0, w0, #1
  448814:	b.hi	44a070 <argp_parse@@Base+0xa290>  // b.pmore
  448818:	add	w0, w3, w0
  44881c:	ldrb	w3, [x2, #5]
  448820:	add	w0, w0, w0, lsl #2
  448824:	sub	w3, w3, #0x30
  448828:	cmp	w3, #0x9
  44882c:	lsl	w0, w0, #1
  448830:	b.hi	44a144 <argp_parse@@Base+0xa364>  // b.pmore
  448834:	add	w0, w3, w0
  448838:	ldrb	w3, [x2, #6]
  44883c:	add	w0, w0, w0, lsl #2
  448840:	sub	w3, w3, #0x30
  448844:	cmp	w3, #0x9
  448848:	lsl	w0, w0, #1
  44884c:	b.hi	44a13c <argp_parse@@Base+0xa35c>  // b.pmore
  448850:	add	w0, w3, w0
  448854:	ldrb	w3, [x2, #7]
  448858:	add	w0, w0, w0, lsl #2
  44885c:	sub	w3, w3, #0x30
  448860:	cmp	w3, #0x9
  448864:	lsl	w0, w0, #1
  448868:	b.hi	44a134 <argp_parse@@Base+0xa354>  // b.pmore
  44886c:	add	w0, w3, w0
  448870:	ldrb	w3, [x2, #8]
  448874:	add	w0, w0, w0, lsl #2
  448878:	sub	w3, w3, #0x30
  44887c:	cmp	w3, #0x9
  448880:	lsl	w0, w0, #1
  448884:	b.hi	44a12c <argp_parse@@Base+0xa34c>  // b.pmore
  448888:	add	w0, w3, w0
  44888c:	ldrb	w3, [x2, #9]
  448890:	add	w0, w0, w0, lsl #2
  448894:	sub	w3, w3, #0x30
  448898:	cmp	w3, #0x9
  44889c:	lsl	w1, w0, #1
  4488a0:	b.hi	44a0fc <argp_parse@@Base+0xa31c>  // b.pmore
  4488a4:	ldrb	w0, [x2, #10]
  4488a8:	add	w1, w1, w3
  4488ac:	cmn	w5, #0x1
  4488b0:	add	x6, x2, #0xa
  4488b4:	sub	w3, w0, #0x30
  4488b8:	b.eq	449c64 <argp_parse@@Base+0x9e84>  // b.none
  4488bc:	cmp	w3, #0x9
  4488c0:	b.hi	4488d4 <argp_parse@@Base+0x8af4>  // b.pmore
  4488c4:	ldrb	w0, [x6, #1]!
  4488c8:	sub	w0, w0, #0x30
  4488cc:	cmp	w0, #0x9
  4488d0:	b.ls	4488c4 <argp_parse@@Base+0x8ae4>  // b.plast
  4488d4:	cmp	w5, #0x0
  4488d8:	ccmp	w1, #0x0, #0x4, lt  // lt = tstop
  4488dc:	b.ne	448a00 <argp_parse@@Base+0x8c20>  // b.any
  4488e0:	cmp	w5, #0x0
  4488e4:	sxtw	x1, w1
  4488e8:	mov	w2, #0x16                  	// #22
  4488ec:	mov	w0, #0x15                  	// #21
  4488f0:	csel	w0, w2, w0, eq  // eq = none
  4488f4:	mov	w23, #0x115                 	// #277
  4488f8:	add	w24, w27, w0
  4488fc:	str	x6, [x25]
  448900:	str	x1, [sp, #120]
  448904:	mov	w1, #0x114                 	// #276
  448908:	csel	w23, w23, w1, eq  // eq = none
  44890c:	str	x4, [sp, #288]
  448910:	b	448168 <argp_parse@@Base+0x8388>
  448914:	cmp	w5, #0x0
  448918:	mov	w1, #0x13                  	// #19
  44891c:	mov	w0, #0x14                  	// #20
  448920:	csel	w0, w1, w0, ne  // ne = any
  448924:	sub	x1, x2, x8
  448928:	lsr	w5, w5, #31
  44892c:	mov	w23, #0x112                 	// #274
  448930:	add	w24, w27, w0
  448934:	str	x2, [x25]
  448938:	stp	x6, x1, [sp, #120]
  44893c:	mov	w1, #0x113                 	// #275
  448940:	csel	w23, w23, w1, ne  // ne = any
  448944:	strb	w5, [sp, #288]
  448948:	b	448168 <argp_parse@@Base+0x8388>
  44894c:	cmp	w0, #0x40
  448950:	b.hi	448660 <argp_parse@@Base+0x8880>  // b.pmore
  448954:	cmp	w0, #0x28
  448958:	b.ne	44852c <argp_parse@@Base+0x874c>  // b.any
  44895c:	mov	x2, #0x0                   	// #0
  448960:	mov	x3, x1
  448964:	add	x1, x1, #0x1
  448968:	str	x1, [x25]
  44896c:	ldurb	w0, [x1, #-1]
  448970:	cbz	w0, 448484 <argp_parse@@Base+0x86a4>
  448974:	cmp	w0, #0x28
  448978:	b.eq	448994 <argp_parse@@Base+0x8bb4>  // b.none
  44897c:	cmp	w0, #0x29
  448980:	cset	x0, eq  // eq = none
  448984:	sub	x2, x2, x0
  448988:	cbnz	x2, 448960 <argp_parse@@Base+0x8b80>
  44898c:	ldrb	w0, [x3, #1]
  448990:	b	44851c <argp_parse@@Base+0x873c>
  448994:	add	x2, x2, #0x1
  448998:	cbnz	x2, 448960 <argp_parse@@Base+0x8b80>
  44899c:	b	44898c <argp_parse@@Base+0x8bac>
  4489a0:	mul	x3, x6, x8
  4489a4:	smulh	x6, x6, x8
  4489a8:	cmp	x6, x3, asr #63
  4489ac:	b.ne	448624 <argp_parse@@Base+0x8844>  // b.any
  4489b0:	mov	x7, x2
  4489b4:	b	4486b4 <argp_parse@@Base+0x88d4>
  4489b8:	add	x6, x2, #0x2
  4489bc:	mov	w1, #0x64                  	// #100
  4489c0:	mul	w0, w0, w1
  4489c4:	add	w0, w0, w0, lsl #2
  4489c8:	lsl	w0, w0, #1
  4489cc:	add	w0, w0, w0, lsl #2
  4489d0:	lsl	w0, w0, #1
  4489d4:	add	w0, w0, w0, lsl #2
  4489d8:	lsl	w0, w0, #1
  4489dc:	add	w0, w0, w0, lsl #2
  4489e0:	lsl	w0, w0, #1
  4489e4:	add	w0, w0, w0, lsl #2
  4489e8:	cmn	w5, #0x1
  4489ec:	lsl	w1, w0, #1
  4489f0:	b.ne	4488bc <argp_parse@@Base+0x8adc>  // b.any
  4489f4:	cmp	w1, #0x0
  4489f8:	ccmp	w5, #0x0, #0x0, ne  // ne = any
  4489fc:	b.ge	44a10c <argp_parse@@Base+0xa32c>  // b.tcont
  448a00:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  448a04:	cmp	x4, x0
  448a08:	b.eq	448624 <argp_parse@@Base+0x8844>  // b.none
  448a0c:	mov	w0, #0xca00                	// #51712
  448a10:	sub	x4, x4, #0x1
  448a14:	movk	w0, #0x3b9a, lsl #16
  448a18:	sub	w1, w0, w1
  448a1c:	mov	w23, #0x114                 	// #276
  448a20:	mov	w0, #0x15                  	// #21
  448a24:	sxtw	x1, w1
  448a28:	add	w24, w27, w0
  448a2c:	str	x6, [x25]
  448a30:	str	x1, [sp, #120]
  448a34:	str	x4, [sp, #288]
  448a38:	b	448168 <argp_parse@@Base+0x8388>
  448a3c:	ldursh	w26, [x19, #-4]
  448a40:	sub	x3, x20, #0x70
  448a44:	ldur	w9, [x20, #-48]
  448a48:	sub	x4, x19, #0x4
  448a4c:	mov	w2, #0xffffffa3            	// #-93
  448a50:	mov	w10, #0x11                  	// #17
  448a54:	mov	x28, #0x0                   	// #0
  448a58:	mov	x11, #0x0                   	// #0
  448a5c:	mov	x12, #0x0                   	// #0
  448a60:	mov	x6, #0x0                   	// #0
  448a64:	mov	x5, #0x0                   	// #0
  448a68:	ldur	x24, [x20, #-56]
  448a6c:	b	4481d8 <argp_parse@@Base+0x83f8>
  448a70:	ldr	x0, [x25, #200]
  448a74:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  448a78:	add	x1, x1, #0xf18
  448a7c:	mov	w2, #0x5                   	// #5
  448a80:	add	x0, x0, #0x1
  448a84:	stp	x5, x6, [sp, #144]
  448a88:	stp	x11, x12, [sp, #160]
  448a8c:	str	w9, [sp, #176]
  448a90:	str	x0, [x25, #200]
  448a94:	sub	x3, x20, #0x38
  448a98:	mov	x0, #0x0                   	// #0
  448a9c:	str	x3, [sp, #136]
  448aa0:	bl	4049c0 <dcgettext@plt>
  448aa4:	ldursh	w26, [x19, #-2]
  448aa8:	ldrb	w1, [x25, #217]
  448aac:	sub	x4, x19, #0x2
  448ab0:	ldr	w9, [sp, #176]
  448ab4:	ldp	x3, x5, [sp, #136]
  448ab8:	ldp	x6, x11, [sp, #152]
  448abc:	ldr	x12, [sp, #168]
  448ac0:	cbz	w1, 449ba8 <argp_parse@@Base+0x9dc8>
  448ac4:	stp	x5, x6, [sp, #136]
  448ac8:	stp	x11, x12, [sp, #152]
  448acc:	str	w9, [sp, #168]
  448ad0:	stp	x4, x3, [sp, #176]
  448ad4:	mov	x1, x25
  448ad8:	bl	447b50 <argp_parse@@Base+0x7d70>
  448adc:	mov	w2, #0xffffffa3            	// #-93
  448ae0:	mov	w10, #0x4                   	// #4
  448ae4:	ldr	w9, [sp, #168]
  448ae8:	ldp	x5, x6, [sp, #136]
  448aec:	ldp	x11, x12, [sp, #152]
  448af0:	ldp	x4, x3, [sp, #176]
  448af4:	b	4481d8 <argp_parse@@Base+0x83f8>
  448af8:	ldr	x2, [x25, #168]
  448afc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448b00:	ldr	x0, [x25, #200]
  448b04:	add	x2, x2, #0x1
  448b08:	add	x1, x1, #0x990
  448b0c:	stp	x5, x6, [sp, #136]
  448b10:	add	x0, x0, #0x1
  448b14:	stp	x11, x12, [sp, #152]
  448b18:	str	x2, [x25, #168]
  448b1c:	mov	w2, #0x5                   	// #5
  448b20:	str	w9, [sp, #168]
  448b24:	str	x0, [x25, #200]
  448b28:	mov	x0, #0x0                   	// #0
  448b2c:	bl	4049c0 <dcgettext@plt>
  448b30:	ldrb	w1, [x25, #217]
  448b34:	sub	x3, x20, #0x38
  448b38:	ldursh	w26, [x19, #-2]
  448b3c:	sub	x4, x19, #0x2
  448b40:	ldr	w9, [sp, #168]
  448b44:	ldp	x5, x6, [sp, #136]
  448b48:	ldp	x11, x12, [sp, #152]
  448b4c:	cbz	w1, 449ba8 <argp_parse@@Base+0x9dc8>
  448b50:	str	w9, [sp, #168]
  448b54:	stp	x4, x3, [sp, #176]
  448b58:	b	448ad4 <argp_parse@@Base+0x8cf4>
  448b5c:	mov	x3, x20
  448b60:	ldursh	w26, [x19, #-4]
  448b64:	ldur	x0, [x20, #-48]
  448b68:	sub	x4, x19, #0x4
  448b6c:	ldr	x1, [x3], #-112
  448b70:	mov	w2, #0xffffffa3            	// #-93
  448b74:	mov	w10, #0x7                   	// #7
  448b78:	str	w1, [x25, #28]
  448b7c:	stp	x0, xzr, [x25, #72]
  448b80:	stp	xzr, xzr, [x25, #88]
  448b84:	b	4481d8 <argp_parse@@Base+0x83f8>
  448b88:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448b8c:	add	x1, x1, #0x9d0
  448b90:	mov	w2, #0x5                   	// #5
  448b94:	stp	x5, x6, [sp, #136]
  448b98:	stp	x11, x12, [sp, #152]
  448b9c:	str	w9, [sp, #168]
  448ba0:	mov	x0, #0x0                   	// #0
  448ba4:	bl	4049c0 <dcgettext@plt>
  448ba8:	ldrb	w1, [x25, #217]
  448bac:	sub	x3, x20, #0x38
  448bb0:	ldursh	w26, [x19, #-2]
  448bb4:	sub	x4, x19, #0x2
  448bb8:	ldr	w9, [sp, #168]
  448bbc:	ldp	x5, x6, [sp, #136]
  448bc0:	ldp	x11, x12, [sp, #152]
  448bc4:	cbz	w1, 449ba8 <argp_parse@@Base+0x9dc8>
  448bc8:	mov	x1, x25
  448bcc:	str	w9, [sp, #168]
  448bd0:	stp	x4, x3, [sp, #176]
  448bd4:	bl	447ed8 <argp_parse@@Base+0x80f8>
  448bd8:	b	448adc <argp_parse@@Base+0x8cfc>
  448bdc:	ldursh	w26, [x19, #-4]
  448be0:	sub	x3, x20, #0x70
  448be4:	sub	x4, x19, #0x4
  448be8:	mov	w2, #0x2b                  	// #43
  448bec:	mov	w10, #0x19                  	// #25
  448bf0:	ldr	x5, [x20, #8]
  448bf4:	b	4481d8 <argp_parse@@Base+0x83f8>
  448bf8:	mov	x3, x20
  448bfc:	mov	w0, #0x1                   	// #1
  448c00:	strb	w0, [x25, #160]
  448c04:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448c08:	mov	w2, #0x5                   	// #5
  448c0c:	add	x1, x1, #0x978
  448c10:	ldp	x14, x15, [x3], #-112
  448c14:	stp	x14, x15, [x25, #88]
  448c18:	mov	x0, #0x0                   	// #0
  448c1c:	stp	x3, x5, [sp, #136]
  448c20:	stp	x6, x11, [sp, #152]
  448c24:	str	x12, [sp, #168]
  448c28:	str	w9, [sp, #176]
  448c2c:	str	x3, [sp, #184]
  448c30:	bl	4049c0 <dcgettext@plt>
  448c34:	ldrb	w1, [x25, #217]
  448c38:	sub	x4, x19, #0x4
  448c3c:	ldursh	w26, [x19, #-4]
  448c40:	ldr	w9, [sp, #176]
  448c44:	ldp	x3, x5, [sp, #136]
  448c48:	ldp	x6, x11, [sp, #152]
  448c4c:	ldr	x12, [sp, #168]
  448c50:	cbz	w1, 449ce8 <argp_parse@@Base+0x9f08>
  448c54:	mov	x1, x25
  448c58:	stp	x5, x6, [sp, #136]
  448c5c:	stp	x11, x12, [sp, #152]
  448c60:	str	w9, [sp, #168]
  448c64:	stp	x4, x3, [sp, #176]
  448c68:	bl	447b50 <argp_parse@@Base+0x7d70>
  448c6c:	mov	w2, #0xffffffa3            	// #-93
  448c70:	mov	w10, #0x2                   	// #2
  448c74:	b	448ae4 <argp_parse@@Base+0x8d04>
  448c78:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  448c7c:	mov	w2, #0x5                   	// #5
  448c80:	add	x1, x1, #0xaf8
  448c84:	stp	x5, x6, [sp, #136]
  448c88:	stp	x11, x12, [sp, #152]
  448c8c:	str	w9, [sp, #168]
  448c90:	b	448b28 <argp_parse@@Base+0x8d48>
  448c94:	ldr	x0, [x25, #176]
  448c98:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448c9c:	mov	w2, #0x5                   	// #5
  448ca0:	add	x1, x1, #0x9b8
  448ca4:	add	x0, x0, #0x1
  448ca8:	stp	x5, x6, [sp, #144]
  448cac:	stp	x11, x12, [sp, #160]
  448cb0:	str	x0, [x25, #176]
  448cb4:	str	w9, [sp, #176]
  448cb8:	b	448a94 <argp_parse@@Base+0x8cb4>
  448cbc:	ldr	x0, [x25, #168]
  448cc0:	adrp	x1, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  448cc4:	mov	w2, #0x5                   	// #5
  448cc8:	add	x1, x1, #0xa50
  448ccc:	add	x0, x0, #0x1
  448cd0:	stp	x5, x6, [sp, #144]
  448cd4:	stp	x11, x12, [sp, #160]
  448cd8:	str	x0, [x25, #168]
  448cdc:	str	w9, [sp, #176]
  448ce0:	b	448a94 <argp_parse@@Base+0x8cb4>
  448ce4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448ce8:	mov	w2, #0x5                   	// #5
  448cec:	add	x1, x1, #0x9c0
  448cf0:	stp	x5, x6, [sp, #136]
  448cf4:	stp	x11, x12, [sp, #152]
  448cf8:	str	w9, [sp, #168]
  448cfc:	b	448ba0 <argp_parse@@Base+0x8dc0>
  448d00:	ldur	x2, [x20, #-56]
  448d04:	mov	x3, x20
  448d08:	mov	w0, #0x1                   	// #1
  448d0c:	ldr	x1, [x3], #-112
  448d10:	sub	x4, x19, #0x4
  448d14:	ldursh	w26, [x19, #-4]
  448d18:	mov	w10, #0xd                   	// #13
  448d1c:	str	x2, [x25, #8]
  448d20:	mov	w2, #0xffffffa3            	// #-93
  448d24:	str	w1, [x25, #16]
  448d28:	strb	w0, [x25, #224]
  448d2c:	b	4481d8 <argp_parse@@Base+0x83f8>
  448d30:	ldur	x0, [x20, #-56]
  448d34:	sub	x3, x20, #0x70
  448d38:	ldursh	w26, [x19, #-4]
  448d3c:	sub	x4, x19, #0x4
  448d40:	mov	w2, #0xffffffa3            	// #-93
  448d44:	mov	w10, #0xd                   	// #13
  448d48:	str	xzr, [x25, #8]
  448d4c:	str	w0, [x25, #16]
  448d50:	b	4481d8 <argp_parse@@Base+0x83f8>
  448d54:	ldr	x0, [x20, #8]
  448d58:	ldur	x1, [x20, #-104]
  448d5c:	negs	x0, x0
  448d60:	str	x0, [x25, #40]
  448d64:	ldur	x0, [x20, #-56]
  448d68:	str	x0, [x25, #56]
  448d6c:	str	x1, [x25, #64]
  448d70:	b.vs	448460 <argp_parse@@Base+0x8680>
  448d74:	ldr	x0, [x20, #16]
  448d78:	sub	x3, x20, #0xa8
  448d7c:	ldursh	w26, [x19, #-6]
  448d80:	sub	x4, x19, #0x6
  448d84:	mov	w2, #0xffffffa3            	// #-93
  448d88:	mov	w10, #0xe                   	// #14
  448d8c:	str	x0, [x25, #48]
  448d90:	b	4481d8 <argp_parse@@Base+0x83f8>
  448d94:	ldur	x3, [x20, #-208]
  448d98:	sub	x26, x20, #0xe0
  448d9c:	ldrb	w0, [x25, #217]
  448da0:	cmp	x3, #0x3
  448da4:	b.le	449d7c <argp_parse@@Base+0x9f9c>
  448da8:	cbnz	w0, 449f0c <argp_parse@@Base+0xa12c>
  448dac:	ldp	x0, x1, [x26]
  448db0:	stp	x0, x1, [x25, #32]
  448db4:	sub	x3, x20, #0x118
  448db8:	ldur	x0, [x20, #-104]
  448dbc:	sub	x4, x19, #0xa
  448dc0:	ldr	x1, [x26, #16]
  448dc4:	stp	x1, x0, [x25, #48]
  448dc8:	ldursh	w26, [x19, #-10]
  448dcc:	ldr	x0, [x20, #8]
  448dd0:	mov	w2, #0xffffffa3            	// #-93
  448dd4:	mov	w10, #0xe                   	// #14
  448dd8:	str	x0, [x25, #64]
  448ddc:	b	4481d8 <argp_parse@@Base+0x83f8>
  448de0:	ldur	x1, [x20, #-104]
  448de4:	sub	x3, x20, #0xa8
  448de8:	ldr	x0, [x20, #8]
  448dec:	sub	x4, x19, #0x6
  448df0:	ldursh	w26, [x19, #-6]
  448df4:	mov	w2, #0xffffffa3            	// #-93
  448df8:	mov	w10, #0xe                   	// #14
  448dfc:	stp	x1, x0, [x25, #56]
  448e00:	b	4481d8 <argp_parse@@Base+0x83f8>
  448e04:	mov	x3, x20
  448e08:	mov	w0, #0x1                   	// #1
  448e0c:	ldur	x2, [x20, #-48]
  448e10:	b	448d0c <argp_parse@@Base+0x8f2c>
  448e14:	ldr	x0, [x25, #208]
  448e18:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448e1c:	mov	w2, #0x5                   	// #5
  448e20:	add	x1, x1, #0x9b0
  448e24:	add	x0, x0, #0x1
  448e28:	stp	x5, x6, [sp, #144]
  448e2c:	stp	x11, x12, [sp, #160]
  448e30:	str	w9, [sp, #176]
  448e34:	str	x0, [x25, #208]
  448e38:	b	448a94 <argp_parse@@Base+0x8cb4>
  448e3c:	ldr	x0, [x25, #184]
  448e40:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  448e44:	mov	w2, #0x5                   	// #5
  448e48:	add	x1, x1, #0x9a0
  448e4c:	add	x0, x0, #0x1
  448e50:	stp	x5, x6, [sp, #144]
  448e54:	stp	x11, x12, [sp, #160]
  448e58:	str	w9, [sp, #176]
  448e5c:	str	x0, [x25, #184]
  448e60:	b	448a94 <argp_parse@@Base+0x8cb4>
  448e64:	ldursh	w26, [x19, #-4]
  448e68:	sub	x3, x20, #0x70
  448e6c:	sub	x4, x19, #0x4
  448e70:	mov	w2, #0x3c                  	// #60
  448e74:	mov	w10, #0x12                  	// #18
  448e78:	mov	w9, #0x0                   	// #0
  448e7c:	mov	x24, #0x0                   	// #0
  448e80:	mov	x28, #0x0                   	// #0
  448e84:	mov	x11, #0x0                   	// #0
  448e88:	mov	x12, #0x0                   	// #0
  448e8c:	mov	x6, #0x0                   	// #0
  448e90:	ldur	x5, [x20, #-48]
  448e94:	b	4481d8 <argp_parse@@Base+0x83f8>
  448e98:	ldursh	w26, [x19, #-2]
  448e9c:	sub	x3, x20, #0x38
  448ea0:	sub	x4, x19, #0x2
  448ea4:	mov	w2, #0xffffffa3            	// #-93
  448ea8:	mov	w10, #0x11                  	// #17
  448eac:	mov	w9, #0x0                   	// #0
  448eb0:	mov	x24, #0x1                   	// #1
  448eb4:	mov	x28, #0x0                   	// #0
  448eb8:	mov	x11, #0x0                   	// #0
  448ebc:	mov	x12, #0x0                   	// #0
  448ec0:	mov	x6, #0x0                   	// #0
  448ec4:	mov	x5, #0x0                   	// #0
  448ec8:	b	4481d8 <argp_parse@@Base+0x83f8>
  448ecc:	ldursh	w26, [x19, #-4]
  448ed0:	sub	x3, x20, #0x70
  448ed4:	sub	x4, x19, #0x4
  448ed8:	mov	w2, #0x3c                  	// #60
  448edc:	mov	w10, #0x12                  	// #18
  448ee0:	mov	w9, #0x0                   	// #0
  448ee4:	mov	x24, #0x0                   	// #0
  448ee8:	mov	x11, #0x0                   	// #0
  448eec:	mov	x12, #0x0                   	// #0
  448ef0:	mov	x6, #0x0                   	// #0
  448ef4:	mov	x5, #0x0                   	// #0
  448ef8:	ldur	x28, [x20, #-48]
  448efc:	b	4481d8 <argp_parse@@Base+0x83f8>
  448f00:	ldursh	w26, [x19, #-4]
  448f04:	sub	x3, x20, #0x70
  448f08:	sub	x4, x19, #0x4
  448f0c:	mov	w2, #0x3c                  	// #60
  448f10:	mov	w10, #0x12                  	// #18
  448f14:	mov	w9, #0x0                   	// #0
  448f18:	mov	x24, #0x0                   	// #0
  448f1c:	mov	x28, #0x0                   	// #0
  448f20:	mov	x12, #0x0                   	// #0
  448f24:	mov	x6, #0x0                   	// #0
  448f28:	mov	x5, #0x0                   	// #0
  448f2c:	ldur	x11, [x20, #-48]
  448f30:	b	4481d8 <argp_parse@@Base+0x83f8>
  448f34:	ldur	x0, [x20, #-48]
  448f38:	ldr	x2, [x20]
  448f3c:	mul	x1, x0, x2
  448f40:	smulh	x0, x0, x2
  448f44:	mov	x12, x1
  448f48:	cmp	x0, x1, asr #63
  448f4c:	cset	x5, ne  // ne = any
  448f50:	b.ne	448460 <argp_parse@@Base+0x8680>  // b.any
  448f54:	ldursh	w26, [x19, #-4]
  448f58:	sub	x3, x20, #0x70
  448f5c:	sub	x4, x19, #0x4
  448f60:	mov	x24, #0x0                   	// #0
  448f64:	mov	x28, #0x0                   	// #0
  448f68:	mov	x11, #0x0                   	// #0
  448f6c:	mov	x6, #0x0                   	// #0
  448f70:	mov	w2, #0x3c                  	// #60
  448f74:	mov	w10, #0x12                  	// #18
  448f78:	mov	w9, #0x0                   	// #0
  448f7c:	b	4481d8 <argp_parse@@Base+0x83f8>
  448f80:	ldursh	w26, [x19, #-4]
  448f84:	sub	x3, x20, #0x70
  448f88:	sub	x4, x19, #0x4
  448f8c:	mov	w2, #0x3c                  	// #60
  448f90:	mov	w10, #0x12                  	// #18
  448f94:	mov	w9, #0x0                   	// #0
  448f98:	mov	x24, #0x0                   	// #0
  448f9c:	mov	x28, #0x0                   	// #0
  448fa0:	mov	x11, #0x0                   	// #0
  448fa4:	mov	x12, #0x0                   	// #0
  448fa8:	mov	x5, #0x0                   	// #0
  448fac:	ldur	x6, [x20, #-48]
  448fb0:	b	4481d8 <argp_parse@@Base+0x83f8>
  448fb4:	ldp	x0, x1, [x20, #-56]
  448fb8:	stp	x0, x1, [sp, #192]
  448fbc:	ldur	x2, [x20, #-40]
  448fc0:	add	x1, sp, #0xc0
  448fc4:	mov	x0, x25
  448fc8:	stp	x5, x6, [sp, #136]
  448fcc:	stp	x11, x12, [sp, #152]
  448fd0:	str	w9, [sp, #168]
  448fd4:	str	x2, [sp, #208]
  448fd8:	bl	4475f8 <argp_parse@@Base+0x7818>
  448fdc:	ldp	x4, x1, [x20, #32]
  448fe0:	ldp	x10, x0, [x25, #136]
  448fe4:	ldr	w3, [x25, #152]
  448fe8:	ldr	w2, [x20, #48]
  448fec:	adds	w2, w3, w2
  448ff0:	str	w2, [x25, #152]
  448ff4:	cset	w3, vs
  448ff8:	adds	x0, x0, x1
  448ffc:	str	x0, [x25, #144]
  449000:	cset	x0, vs
  449004:	orr	w3, w3, w0
  449008:	adds	x10, x10, x4
  44900c:	ldr	x1, [x20, #24]
  449010:	cset	x14, vs
  449014:	ldr	x0, [x25, #128]
  449018:	str	x10, [x25, #136]
  44901c:	ldr	x4, [x20, #16]
  449020:	adds	x1, x0, x1
  449024:	ldr	x0, [x25, #120]
  449028:	cset	x13, vs
  44902c:	ldr	x2, [x20]
  449030:	adds	x0, x0, x4
  449034:	stp	x0, x1, [x25, #120]
  449038:	cset	x0, vs
  44903c:	orr	x13, x14, x13
  449040:	ldr	x4, [x20, #8]
  449044:	ldr	x1, [x25, #112]
  449048:	adds	x1, x1, x4
  44904c:	str	x1, [x25, #112]
  449050:	ldr	x1, [x25, #104]
  449054:	cset	x4, vs
  449058:	orr	x0, x0, x4
  44905c:	adds	x1, x1, x2
  449060:	orr	w0, w0, w13
  449064:	str	x1, [x25, #104]
  449068:	orr	w0, w0, w3
  44906c:	csinc	w0, w0, wzr, vc
  449070:	cbnz	w0, 448460 <argp_parse@@Base+0x8680>
  449074:	mov	w0, #0x1                   	// #1
  449078:	ldursh	w26, [x19, #-4]
  44907c:	ldr	w9, [sp, #168]
  449080:	sub	x3, x20, #0x70
  449084:	sub	x4, x19, #0x4
  449088:	mov	w2, #0xffffffa3            	// #-93
  44908c:	mov	w10, #0x18                  	// #24
  449090:	strb	w0, [x25, #161]
  449094:	ldp	x5, x6, [sp, #136]
  449098:	ldp	x11, x12, [sp, #152]
  44909c:	b	4481d8 <argp_parse@@Base+0x83f8>
  4490a0:	ldp	x0, x1, [x20]
  4490a4:	stp	x0, x1, [sp, #192]
  4490a8:	sub	x3, x20, #0x38
  4490ac:	ldr	x2, [x20, #16]
  4490b0:	sub	x4, x19, #0x2
  4490b4:	add	x1, sp, #0xc0
  4490b8:	mov	x0, x25
  4490bc:	stp	x4, x3, [sp, #136]
  4490c0:	stp	x5, x6, [sp, #152]
  4490c4:	stp	x11, x12, [sp, #168]
  4490c8:	str	w9, [sp, #184]
  4490cc:	str	x2, [sp, #208]
  4490d0:	bl	4475f8 <argp_parse@@Base+0x7818>
  4490d4:	ldr	w9, [sp, #184]
  4490d8:	mov	w2, #0xffffffa3            	// #-93
  4490dc:	ldursh	w26, [x19, #-2]
  4490e0:	mov	w10, #0x17                  	// #23
  4490e4:	ldp	x4, x3, [sp, #136]
  4490e8:	ldp	x5, x6, [sp, #152]
  4490ec:	ldp	x11, x12, [sp, #168]
  4490f0:	b	4481d8 <argp_parse@@Base+0x83f8>
  4490f4:	ldursh	w26, [x19, #-2]
  4490f8:	sub	x3, x20, #0x38
  4490fc:	sub	x4, x19, #0x2
  449100:	mov	w2, #0xffffffa4            	// #-92
  449104:	mov	w10, #0x16                  	// #22
  449108:	mov	x6, #0x0                   	// #0
  44910c:	ldr	x5, [x20, #8]
  449110:	b	4481d8 <argp_parse@@Base+0x83f8>
  449114:	ldursh	w26, [x19, #-2]
  449118:	sub	x3, x20, #0x38
  44911c:	sub	x4, x19, #0x2
  449120:	mov	w2, #0xffffffa3            	// #-93
  449124:	mov	w10, #0x15                  	// #21
  449128:	mov	x6, #0x0                   	// #0
  44912c:	ldr	x5, [x20, #8]
  449130:	b	4481d8 <argp_parse@@Base+0x83f8>
  449134:	ldursh	w26, [x19, #-2]
  449138:	mov	x3, x20
  44913c:	sub	x4, x19, #0x2
  449140:	mov	w2, #0xffffffa3            	// #-93
  449144:	mov	w10, #0x13                  	// #19
  449148:	mov	w9, #0x0                   	// #0
  44914c:	mov	x24, #0x0                   	// #0
  449150:	mov	x28, #0x0                   	// #0
  449154:	mov	x11, #0x0                   	// #0
  449158:	mov	x6, #0x0                   	// #0
  44915c:	mov	x5, #0x0                   	// #0
  449160:	ldr	x12, [x3], #-56
  449164:	b	4481d8 <argp_parse@@Base+0x83f8>
  449168:	ldursh	w26, [x19, #-4]
  44916c:	sub	x3, x20, #0x70
  449170:	sub	x4, x19, #0x4
  449174:	mov	w2, #0x3c                  	// #60
  449178:	mov	w10, #0x12                  	// #18
  44917c:	mov	w9, #0x0                   	// #0
  449180:	mov	x28, #0x0                   	// #0
  449184:	mov	x11, #0x0                   	// #0
  449188:	mov	x12, #0x0                   	// #0
  44918c:	mov	x6, #0x0                   	// #0
  449190:	mov	x5, #0x0                   	// #0
  449194:	ldur	x24, [x20, #-48]
  449198:	b	4481d8 <argp_parse@@Base+0x83f8>
  44919c:	mov	x3, x20
  4491a0:	ldursh	w26, [x19, #-2]
  4491a4:	sub	x4, x19, #0x2
  4491a8:	mov	w2, #0xffffffa3            	// #-93
  4491ac:	mov	w10, #0xd                   	// #13
  4491b0:	str	xzr, [x25, #8]
  4491b4:	ldr	x0, [x3], #-56
  4491b8:	str	w0, [x25, #16]
  4491bc:	b	4481d8 <argp_parse@@Base+0x83f8>
  4491c0:	ldur	x0, [x20, #-56]
  4491c4:	sub	x3, x20, #0x70
  4491c8:	ldursh	w26, [x19, #-4]
  4491cc:	sub	x4, x19, #0x4
  4491d0:	add	w0, w0, #0xe10
  4491d4:	mov	w2, #0xffffffa3            	// #-93
  4491d8:	mov	w10, #0xc                   	// #12
  4491dc:	str	w0, [x25, #24]
  4491e0:	b	4481d8 <argp_parse@@Base+0x83f8>
  4491e4:	mov	x3, x20
  4491e8:	ldursh	w26, [x19, #-2]
  4491ec:	sub	x4, x19, #0x2
  4491f0:	mov	w2, #0xffffffa3            	// #-93
  4491f4:	mov	w10, #0xc                   	// #12
  4491f8:	ldr	x0, [x3], #-56
  4491fc:	add	w0, w0, #0xe10
  449200:	str	w0, [x25, #24]
  449204:	b	4481d8 <argp_parse@@Base+0x83f8>
  449208:	ldp	x1, x0, [x20, #-48]
  44920c:	ldr	x2, [x20]
  449210:	cmp	x0, #0x2
  449214:	b.gt	449cf4 <argp_parse@@Base+0x9f14>
  449218:	tbnz	x2, #63, 449eac <argp_parse@@Base+0xa0cc>
  44921c:	mov	x3, #0x3c                  	// #60
  449220:	ldurb	w4, [x20, #-56]
  449224:	mul	x0, x1, x3
  449228:	smulh	x1, x1, x3
  44922c:	cmp	x1, x0, asr #63
  449230:	cset	w1, ne  // ne = any
  449234:	cbz	w4, 449e94 <argp_parse@@Base+0xa0b4>
  449238:	subs	x0, x0, x2
  44923c:	cset	w2, vs
  449240:	orr	w1, w1, w2
  449244:	cbnz	w1, 448460 <argp_parse@@Base+0x8680>
  449248:	add	x1, x0, #0x5a0
  44924c:	cmp	x1, #0xb40
  449250:	b.hi	448460 <argp_parse@@Base+0x8680>  // b.pmore
  449254:	lsl	w1, w0, #4
  449258:	sub	w0, w1, w0
  44925c:	ldur	x1, [x20, #-112]
  449260:	lsl	w0, w0, #2
  449264:	sxtw	x0, w0
  449268:	adds	x0, x0, x1
  44926c:	str	w0, [x25, #24]
  449270:	cset	w1, vs
  449274:	cmp	x0, w0, sxtw
  449278:	csinc	w1, w1, wzr, eq  // eq = none
  44927c:	cbnz	w1, 448460 <argp_parse@@Base+0x8680>
  449280:	ldursh	w26, [x19, #-6]
  449284:	sub	x3, x20, #0xa8
  449288:	sub	x4, x19, #0x6
  44928c:	mov	w2, #0xffffffa3            	// #-93
  449290:	mov	w10, #0xc                   	// #12
  449294:	b	4481d8 <argp_parse@@Base+0x83f8>
  449298:	ldp	x4, x1, [x20, #32]
  44929c:	mov	w3, #0x6270                	// #25200
  4492a0:	ldp	x10, x0, [x25, #136]
  4492a4:	str	w3, [x25, #24]
  4492a8:	ldr	w2, [x20, #48]
  4492ac:	ldr	w3, [x25, #152]
  4492b0:	stp	x5, x6, [sp, #136]
  4492b4:	adds	w2, w3, w2
  4492b8:	cset	w3, vs
  4492bc:	adds	x0, x0, x1
  4492c0:	str	x0, [x25, #144]
  4492c4:	cset	x0, vs
  4492c8:	orr	w3, w3, w0
  4492cc:	adds	x10, x10, x4
  4492d0:	ldr	x1, [x20, #24]
  4492d4:	cset	x14, vs
  4492d8:	ldr	x0, [x25, #128]
  4492dc:	str	w2, [x25, #152]
  4492e0:	ldr	x4, [x20, #16]
  4492e4:	adds	x1, x0, x1
  4492e8:	ldr	x0, [x25, #120]
  4492ec:	cset	x13, vs
  4492f0:	ldr	x2, [x20]
  4492f4:	adds	x0, x0, x4
  4492f8:	stp	x0, x1, [x25, #120]
  4492fc:	cset	x0, vs
  449300:	orr	x13, x14, x13
  449304:	ldr	x4, [x20, #8]
  449308:	str	x10, [x25, #136]
  44930c:	ldr	x1, [x25, #112]
  449310:	stp	x11, x12, [sp, #152]
  449314:	adds	x1, x1, x4
  449318:	str	x1, [x25, #112]
  44931c:	ldr	x1, [x25, #104]
  449320:	cset	x4, vs
  449324:	orr	x0, x0, x4
  449328:	str	w9, [sp, #168]
  44932c:	adds	x1, x1, x2
  449330:	orr	w0, w0, w13
  449334:	str	x1, [x25, #104]
  449338:	orr	w0, w0, w3
  44933c:	csinc	w0, w0, wzr, vc
  449340:	cbnz	w0, 448460 <argp_parse@@Base+0x8680>
  449344:	mov	w0, #0x1                   	// #1
  449348:	strb	w0, [x25, #161]
  44934c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449350:	mov	w2, #0x5                   	// #5
  449354:	add	x1, x1, #0x9c0
  449358:	mov	x0, #0x0                   	// #0
  44935c:	bl	4049c0 <dcgettext@plt>
  449360:	ldursh	w26, [x19, #-4]
  449364:	ldrb	w1, [x25, #217]
  449368:	sub	x3, x20, #0x70
  44936c:	ldr	w9, [sp, #168]
  449370:	sub	x4, x19, #0x4
  449374:	ldp	x5, x6, [sp, #136]
  449378:	ldp	x11, x12, [sp, #152]
  44937c:	cbz	w1, 449cdc <argp_parse@@Base+0x9efc>
  449380:	mov	x1, x25
  449384:	str	w9, [sp, #168]
  449388:	stp	x4, x3, [sp, #176]
  44938c:	bl	447ed8 <argp_parse@@Base+0x80f8>
  449390:	mov	w2, #0xffffffa3            	// #-93
  449394:	mov	w10, #0xc                   	// #12
  449398:	b	448ae4 <argp_parse@@Base+0x8d04>
  44939c:	mov	w0, #0x6270                	// #25200
  4493a0:	ldursh	w26, [x19, #-2]
  4493a4:	sub	x3, x20, #0x38
  4493a8:	sub	x4, x19, #0x2
  4493ac:	mov	w2, #0xffffffa3            	// #-93
  4493b0:	mov	w10, #0xc                   	// #12
  4493b4:	str	w0, [x25, #24]
  4493b8:	b	4481d8 <argp_parse@@Base+0x83f8>
  4493bc:	mov	x3, x20
  4493c0:	ldursh	w26, [x19, #-2]
  4493c4:	sub	x4, x19, #0x2
  4493c8:	mov	w2, #0xffffffa3            	// #-93
  4493cc:	mov	w10, #0xc                   	// #12
  4493d0:	ldr	x0, [x3], #-56
  4493d4:	str	w0, [x25, #24]
  4493d8:	b	4481d8 <argp_parse@@Base+0x83f8>
  4493dc:	ldr	x0, [x25, #192]
  4493e0:	mov	w1, #0x1                   	// #1
  4493e4:	ldursh	w26, [x19, #-4]
  4493e8:	sub	x3, x20, #0x70
  4493ec:	add	x0, x0, #0x1
  4493f0:	sub	x4, x19, #0x4
  4493f4:	mov	w2, #0xffffffa3            	// #-93
  4493f8:	mov	w10, #0xb                   	// #11
  4493fc:	str	w1, [x25, #20]
  449400:	str	x0, [x25, #192]
  449404:	b	4481d8 <argp_parse@@Base+0x83f8>
  449408:	mov	x3, x20
  44940c:	ldursh	w26, [x19, #-2]
  449410:	sub	x4, x19, #0x2
  449414:	mov	w2, #0xffffffa3            	// #-93
  449418:	mov	w10, #0xb                   	// #11
  44941c:	ldr	x0, [x3], #-56
  449420:	str	w0, [x25, #20]
  449424:	b	4481d8 <argp_parse@@Base+0x83f8>
  449428:	ldr	x0, [x25, #208]
  44942c:	ldur	x1, [x20, #-40]
  449430:	add	x0, x0, #0x1
  449434:	str	x0, [x25, #208]
  449438:	cmp	x1, #0x2
  44943c:	ldur	x1, [x20, #-48]
  449440:	ldr	x2, [x20]
  449444:	b.gt	449d38 <argp_parse@@Base+0x9f58>
  449448:	tbnz	x2, #63, 449eb4 <argp_parse@@Base+0xa0d4>
  44944c:	mov	x3, #0x3c                  	// #60
  449450:	ldurb	w4, [x20, #-56]
  449454:	mul	x0, x1, x3
  449458:	smulh	x1, x1, x3
  44945c:	cmp	x1, x0, asr #63
  449460:	cset	w1, ne  // ne = any
  449464:	cbz	w4, 449ea0 <argp_parse@@Base+0xa0c0>
  449468:	subs	x0, x0, x2
  44946c:	cset	w2, vs
  449470:	orr	w1, w1, w2
  449474:	cbnz	w1, 448460 <argp_parse@@Base+0x8680>
  449478:	add	x1, x0, #0x5a0
  44947c:	cmp	x1, #0xb40
  449480:	b.hi	448460 <argp_parse@@Base+0x8680>  // b.pmore
  449484:	lsl	w1, w0, #4
  449488:	ldursh	w26, [x19, #-4]
  44948c:	sub	w0, w1, w0
  449490:	sub	x3, x20, #0x70
  449494:	sub	x4, x19, #0x4
  449498:	mov	w2, #0xffffffe5            	// #-27
  44949c:	lsl	w0, w0, #2
  4494a0:	mov	w10, #0xa                   	// #10
  4494a4:	str	w0, [x25, #24]
  4494a8:	b	4481d8 <argp_parse@@Base+0x83f8>
  4494ac:	sub	x2, x20, #0x118
  4494b0:	ldursw	x0, [x20, #-48]
  4494b4:	ldur	x1, [x20, #-160]
  4494b8:	sub	x3, x20, #0x150
  4494bc:	ldr	x2, [x2, #8]
  4494c0:	stp	x2, x1, [x25, #72]
  4494c4:	mov	w2, #0x2                   	// #2
  4494c8:	ldur	x1, [x20, #-56]
  4494cc:	sub	x4, x19, #0xc
  4494d0:	ldursh	w26, [x19, #-12]
  4494d4:	mov	w10, #0x8                   	// #8
  4494d8:	str	w2, [x25, #28]
  4494dc:	mov	w2, #0x14                  	// #20
  4494e0:	str	x1, [x25, #88]
  4494e4:	str	x0, [x25, #96]
  4494e8:	b	4481d8 <argp_parse@@Base+0x83f8>
  4494ec:	mov	w2, #0x2                   	// #2
  4494f0:	ldursh	w26, [x19, #-8]
  4494f4:	ldur	x1, [x20, #-160]
  4494f8:	sub	x3, x20, #0xe0
  4494fc:	ldur	x0, [x20, #-48]
  449500:	sub	x4, x19, #0x8
  449504:	mov	w10, #0x8                   	// #8
  449508:	str	w2, [x25, #28]
  44950c:	mov	w2, #0x14                  	// #20
  449510:	stp	x1, x0, [x25, #72]
  449514:	stp	xzr, xzr, [x25, #88]
  449518:	b	4481d8 <argp_parse@@Base+0x83f8>
  44951c:	ldur	x0, [x20, #-48]
  449520:	mov	w1, #0x2                   	// #2
  449524:	ldursh	w26, [x19, #-4]
  449528:	sub	x3, x20, #0x70
  44952c:	sub	x4, x19, #0x4
  449530:	mov	w2, #0x14                  	// #20
  449534:	mov	w10, #0x8                   	// #8
  449538:	str	w1, [x25, #28]
  44953c:	stp	x0, xzr, [x25, #72]
  449540:	stp	xzr, xzr, [x25, #88]
  449544:	b	4481d8 <argp_parse@@Base+0x83f8>
  449548:	sub	x1, x20, #0x118
  44954c:	ldursw	x0, [x20, #-48]
  449550:	ldur	x2, [x20, #-160]
  449554:	sub	x3, x20, #0x150
  449558:	ldr	x1, [x1, #8]
  44955c:	stp	x1, x2, [x25, #72]
  449560:	ldursh	w26, [x19, #-12]
  449564:	ldur	x2, [x20, #-56]
  449568:	str	x2, [x25, #88]
  44956c:	ldr	x2, [x20]
  449570:	sub	x4, x19, #0xc
  449574:	mov	w10, #0x7                   	// #7
  449578:	str	w2, [x25, #28]
  44957c:	mov	w2, #0xffffffa3            	// #-93
  449580:	str	x0, [x25, #96]
  449584:	b	4481d8 <argp_parse@@Base+0x83f8>
  449588:	mov	x3, x20
  44958c:	ldursh	w26, [x19, #-8]
  449590:	ldur	x0, [x20, #-160]
  449594:	str	x0, [x25, #72]
  449598:	ldr	x0, [x3], #-224
  44959c:	str	w0, [x25, #28]
  4495a0:	ldur	x0, [x20, #-48]
  4495a4:	sub	x4, x19, #0x8
  4495a8:	mov	w2, #0xffffffa3            	// #-93
  4495ac:	mov	w10, #0x7                   	// #7
  4495b0:	str	x0, [x25, #80]
  4495b4:	stp	xzr, xzr, [x25, #88]
  4495b8:	b	4481d8 <argp_parse@@Base+0x83f8>
  4495bc:	ldursh	w26, [x19, #-4]
  4495c0:	sub	x3, x20, #0x70
  4495c4:	sub	x4, x19, #0x4
  4495c8:	mov	w2, #0xffffffa3            	// #-93
  4495cc:	mov	w10, #0x11                  	// #17
  4495d0:	b	44917c <argp_parse@@Base+0x939c>
  4495d4:	ldursh	w26, [x19, #-4]
  4495d8:	sub	x3, x20, #0x70
  4495dc:	sub	x4, x19, #0x4
  4495e0:	mov	w2, #0xffffffa3            	// #-93
  4495e4:	mov	w10, #0x11                  	// #17
  4495e8:	mov	w9, #0x0                   	// #0
  4495ec:	mov	x28, #0x0                   	// #0
  4495f0:	mov	x11, #0x0                   	// #0
  4495f4:	mov	x12, #0x0                   	// #0
  4495f8:	mov	x6, #0x0                   	// #0
  4495fc:	mov	x5, #0x0                   	// #0
  449600:	ldur	x24, [x20, #-56]
  449604:	b	4481d8 <argp_parse@@Base+0x83f8>
  449608:	ldursh	w26, [x19, #-2]
  44960c:	sub	x3, x20, #0x38
  449610:	sub	x4, x19, #0x2
  449614:	mov	w2, #0xffffffa3            	// #-93
  449618:	mov	w10, #0x11                  	// #17
  44961c:	mov	w9, #0x0                   	// #0
  449620:	mov	x24, #0x0                   	// #0
  449624:	mov	x28, #0x1                   	// #1
  449628:	mov	x11, #0x0                   	// #0
  44962c:	mov	x12, #0x0                   	// #0
  449630:	mov	x6, #0x0                   	// #0
  449634:	mov	x5, #0x0                   	// #0
  449638:	b	4481d8 <argp_parse@@Base+0x83f8>
  44963c:	ldursh	w26, [x19, #-4]
  449640:	sub	x3, x20, #0x70
  449644:	sub	x4, x19, #0x4
  449648:	mov	w2, #0xffffffa3            	// #-93
  44964c:	mov	w10, #0x11                  	// #17
  449650:	b	448ee0 <argp_parse@@Base+0x9100>
  449654:	ldursh	w26, [x19, #-4]
  449658:	sub	x3, x20, #0x70
  44965c:	sub	x4, x19, #0x4
  449660:	mov	w2, #0xffffffa3            	// #-93
  449664:	mov	w10, #0x11                  	// #17
  449668:	mov	w9, #0x0                   	// #0
  44966c:	mov	x24, #0x0                   	// #0
  449670:	mov	x11, #0x0                   	// #0
  449674:	mov	x12, #0x0                   	// #0
  449678:	mov	x6, #0x0                   	// #0
  44967c:	mov	x5, #0x0                   	// #0
  449680:	ldur	x28, [x20, #-56]
  449684:	b	4481d8 <argp_parse@@Base+0x83f8>
  449688:	ldursh	w26, [x19, #-2]
  44968c:	sub	x3, x20, #0x38
  449690:	sub	x4, x19, #0x2
  449694:	mov	w2, #0xffffffa3            	// #-93
  449698:	mov	w10, #0x11                  	// #17
  44969c:	mov	w9, #0x0                   	// #0
  4496a0:	mov	x24, #0x0                   	// #0
  4496a4:	mov	x28, #0x0                   	// #0
  4496a8:	mov	x11, #0x1                   	// #1
  4496ac:	mov	x12, #0x0                   	// #0
  4496b0:	mov	x6, #0x0                   	// #0
  4496b4:	mov	x5, #0x0                   	// #0
  4496b8:	b	4481d8 <argp_parse@@Base+0x83f8>
  4496bc:	ldursh	w26, [x19, #-4]
  4496c0:	sub	x3, x20, #0x70
  4496c4:	sub	x4, x19, #0x4
  4496c8:	mov	w2, #0xffffffa3            	// #-93
  4496cc:	mov	w10, #0x11                  	// #17
  4496d0:	b	448f14 <argp_parse@@Base+0x9134>
  4496d4:	ldursh	w26, [x19, #-4]
  4496d8:	sub	x3, x20, #0x70
  4496dc:	sub	x4, x19, #0x4
  4496e0:	mov	w2, #0xffffffa3            	// #-93
  4496e4:	mov	w10, #0x11                  	// #17
  4496e8:	mov	w9, #0x0                   	// #0
  4496ec:	mov	x24, #0x0                   	// #0
  4496f0:	mov	x28, #0x0                   	// #0
  4496f4:	mov	x12, #0x0                   	// #0
  4496f8:	mov	x6, #0x0                   	// #0
  4496fc:	mov	x5, #0x0                   	// #0
  449700:	ldur	x11, [x20, #-56]
  449704:	b	4481d8 <argp_parse@@Base+0x83f8>
  449708:	ldursh	w26, [x19, #-2]
  44970c:	mov	x3, x20
  449710:	sub	x4, x19, #0x2
  449714:	mov	w2, #0xffffffa3            	// #-93
  449718:	mov	w10, #0x11                  	// #17
  44971c:	b	449148 <argp_parse@@Base+0x9368>
  449720:	ldur	x0, [x20, #-48]
  449724:	ldr	x2, [x20]
  449728:	mul	x1, x0, x2
  44972c:	smulh	x0, x0, x2
  449730:	mov	x12, x1
  449734:	cmp	x0, x1, asr #63
  449738:	cset	x5, ne  // ne = any
  44973c:	b.ne	448460 <argp_parse@@Base+0x8680>  // b.any
  449740:	ldursh	w26, [x19, #-4]
  449744:	sub	x3, x20, #0x70
  449748:	sub	x4, x19, #0x4
  44974c:	mov	x24, #0x0                   	// #0
  449750:	mov	x28, #0x0                   	// #0
  449754:	mov	x11, #0x0                   	// #0
  449758:	mov	x6, #0x0                   	// #0
  44975c:	mov	w2, #0xffffffa3            	// #-93
  449760:	mov	w10, #0x11                  	// #17
  449764:	mov	w9, #0x0                   	// #0
  449768:	b	4481d8 <argp_parse@@Base+0x83f8>
  44976c:	ldur	x0, [x20, #-56]
  449770:	b	449724 <argp_parse@@Base+0x9944>
  449774:	ldursh	w26, [x19, #-2]
  449778:	sub	x3, x20, #0x38
  44977c:	sub	x4, x19, #0x2
  449780:	mov	w2, #0xffffffa3            	// #-93
  449784:	mov	w10, #0x11                  	// #17
  449788:	mov	w9, #0x0                   	// #0
  44978c:	mov	x24, #0x0                   	// #0
  449790:	mov	x28, #0x0                   	// #0
  449794:	mov	x11, #0x0                   	// #0
  449798:	mov	x12, #0x0                   	// #0
  44979c:	mov	x6, #0x1                   	// #1
  4497a0:	mov	x5, #0x0                   	// #0
  4497a4:	b	4481d8 <argp_parse@@Base+0x83f8>
  4497a8:	ldursh	w26, [x19, #-4]
  4497ac:	sub	x3, x20, #0x70
  4497b0:	sub	x4, x19, #0x4
  4497b4:	mov	w2, #0xffffffa3            	// #-93
  4497b8:	mov	w10, #0x11                  	// #17
  4497bc:	b	448f94 <argp_parse@@Base+0x91b4>
  4497c0:	ldursh	w26, [x19, #-4]
  4497c4:	sub	x3, x20, #0x70
  4497c8:	sub	x4, x19, #0x4
  4497cc:	mov	w2, #0xffffffa3            	// #-93
  4497d0:	mov	w10, #0x11                  	// #17
  4497d4:	mov	w9, #0x0                   	// #0
  4497d8:	mov	x24, #0x0                   	// #0
  4497dc:	mov	x28, #0x0                   	// #0
  4497e0:	mov	x11, #0x0                   	// #0
  4497e4:	mov	x12, #0x0                   	// #0
  4497e8:	mov	x5, #0x0                   	// #0
  4497ec:	ldur	x6, [x20, #-56]
  4497f0:	b	4481d8 <argp_parse@@Base+0x83f8>
  4497f4:	sub	x4, x19, w13, uxtb #1
  4497f8:	mov	w3, #0x38                  	// #56
  4497fc:	mov	w2, #0xffffffa3            	// #-93
  449800:	mov	w10, #0x11                  	// #17
  449804:	umsubl	x3, w13, w3, x20
  449808:	mov	w9, #0x0                   	// #0
  44980c:	ldrsh	w26, [x4]
  449810:	mov	x24, #0x0                   	// #0
  449814:	mov	x28, #0x0                   	// #0
  449818:	mov	x11, #0x0                   	// #0
  44981c:	mov	x12, #0x0                   	// #0
  449820:	mov	x6, #0x0                   	// #0
  449824:	mov	x5, #0x1                   	// #1
  449828:	b	4481d8 <argp_parse@@Base+0x83f8>
  44982c:	ldursh	w26, [x19, #-4]
  449830:	sub	x3, x20, #0x70
  449834:	sub	x4, x19, #0x4
  449838:	mov	w2, #0xffffffa3            	// #-93
  44983c:	mov	w10, #0x11                  	// #17
  449840:	b	448e78 <argp_parse@@Base+0x9098>
  449844:	ldursh	w26, [x19, #-4]
  449848:	sub	x3, x20, #0x70
  44984c:	sub	x4, x19, #0x4
  449850:	mov	w2, #0xffffffa3            	// #-93
  449854:	mov	w10, #0x11                  	// #17
  449858:	mov	w9, #0x0                   	// #0
  44985c:	mov	x24, #0x0                   	// #0
  449860:	mov	x28, #0x0                   	// #0
  449864:	mov	x11, #0x0                   	// #0
  449868:	mov	x12, #0x0                   	// #0
  44986c:	mov	x6, #0x0                   	// #0
  449870:	ldur	x5, [x20, #-56]
  449874:	b	4481d8 <argp_parse@@Base+0x83f8>
  449878:	ldp	x4, x1, [x20, #32]
  44987c:	ldp	x10, x0, [x25, #136]
  449880:	ldr	w3, [x25, #152]
  449884:	ldr	w2, [x20, #48]
  449888:	adds	w2, w3, w2
  44988c:	str	w2, [x25, #152]
  449890:	cset	w3, vs
  449894:	adds	x0, x0, x1
  449898:	str	x0, [x25, #144]
  44989c:	cset	x0, vs
  4498a0:	orr	w3, w3, w0
  4498a4:	adds	x10, x10, x4
  4498a8:	ldr	x1, [x20, #24]
  4498ac:	cset	x14, vs
  4498b0:	ldr	x0, [x25, #128]
  4498b4:	str	x10, [x25, #136]
  4498b8:	ldr	x4, [x20, #16]
  4498bc:	adds	x1, x0, x1
  4498c0:	ldr	x0, [x25, #120]
  4498c4:	cset	x13, vs
  4498c8:	ldr	x2, [x20]
  4498cc:	adds	x0, x0, x4
  4498d0:	stp	x0, x1, [x25, #120]
  4498d4:	cset	x0, vs
  4498d8:	orr	x13, x14, x13
  4498dc:	ldr	x4, [x20, #8]
  4498e0:	ldr	x1, [x25, #112]
  4498e4:	adds	x1, x1, x4
  4498e8:	str	x1, [x25, #112]
  4498ec:	ldr	x1, [x25, #104]
  4498f0:	cset	x4, vs
  4498f4:	orr	x0, x0, x4
  4498f8:	adds	x1, x1, x2
  4498fc:	orr	w0, w0, w13
  449900:	str	x1, [x25, #104]
  449904:	orr	w0, w0, w3
  449908:	csinc	w0, w0, wzr, vc
  44990c:	cbnz	w0, 448460 <argp_parse@@Base+0x8680>
  449910:	mov	w0, #0x1                   	// #1
  449914:	ldursh	w26, [x19, #-2]
  449918:	sub	x3, x20, #0x38
  44991c:	sub	x4, x19, #0x2
  449920:	mov	w2, #0xffffffa3            	// #-93
  449924:	mov	w10, #0x10                  	// #16
  449928:	strb	w0, [x25, #161]
  44992c:	b	4481d8 <argp_parse@@Base+0x83f8>
  449930:	ldp	x1, x2, [x20, #32]
  449934:	ldp	x10, x0, [x25, #136]
  449938:	ldr	w4, [x25, #152]
  44993c:	ldr	w3, [x20, #48]
  449940:	adds	w3, w4, w3
  449944:	str	w3, [x25, #152]
  449948:	cset	w4, vs
  44994c:	adds	x0, x0, x2
  449950:	str	x0, [x25, #144]
  449954:	cset	x0, vs
  449958:	adds	x13, x10, x1
  44995c:	orr	w4, w4, w0
  449960:	ldr	x2, [x20, #24]
  449964:	cset	x14, vs
  449968:	ldr	x1, [x25, #128]
  44996c:	str	x13, [x25, #136]
  449970:	ldr	x10, [x20, #16]
  449974:	adds	x2, x1, x2
  449978:	ldr	x1, [x25, #120]
  44997c:	cset	x0, vs
  449980:	orr	x0, x14, x0
  449984:	adds	x1, x1, x10
  449988:	stp	x1, x2, [x25, #120]
  44998c:	cset	x10, vs
  449990:	ldr	x2, [x20, #8]
  449994:	ldr	x1, [x25, #112]
  449998:	adds	x1, x1, x2
  44999c:	str	x1, [x25, #112]
  4499a0:	ldr	x2, [x20]
  4499a4:	cset	x3, vs
  4499a8:	ldr	x1, [x25, #104]
  4499ac:	orr	x3, x10, x3
  4499b0:	orr	w0, w0, w3
  4499b4:	adds	x1, x1, x2
  4499b8:	str	x1, [x25, #104]
  4499bc:	orr	w0, w0, w4
  4499c0:	csinc	w0, w0, wzr, vc
  4499c4:	cbz	w0, 449910 <argp_parse@@Base+0x9b30>
  4499c8:	b	448460 <argp_parse@@Base+0x8680>
  4499cc:	ldr	x30, [x20]
  4499d0:	ldur	w7, [x20, #-8]
  4499d4:	ldr	w16, [x25, #152]
  4499d8:	ldp	x14, x3, [x20, #-56]
  4499dc:	ldp	x2, x4, [x20, #-40]
  4499e0:	ldp	x0, x1, [x20, #-24]
  4499e4:	ldp	x13, x15, [x25, #104]
  4499e8:	ldp	x18, x26, [x25, #120]
  4499ec:	ldp	x10, x17, [x25, #136]
  4499f0:	tbnz	w30, #31, 449dc0 <argp_parse@@Base+0x9fe0>
  4499f4:	adds	w16, w16, w7
  4499f8:	str	w16, [x25, #152]
  4499fc:	cset	w16, vs
  449a00:	adds	x1, x17, x1
  449a04:	cset	x17, vs
  449a08:	adds	x10, x10, x0
  449a0c:	cset	x0, vs
  449a10:	adds	x4, x26, x4
  449a14:	cset	x26, vs
  449a18:	adds	x2, x18, x2
  449a1c:	cset	x18, vs
  449a20:	adds	x3, x15, x3
  449a24:	cset	x15, vs
  449a28:	orr	x0, x0, x26
  449a2c:	orr	x15, x18, x15
  449a30:	orr	w16, w16, w17
  449a34:	orr	w0, w0, w15
  449a38:	adds	x13, x13, x14
  449a3c:	stp	x13, x3, [x25, #104]
  449a40:	orr	w0, w0, w16
  449a44:	csinc	w0, w0, wzr, vc
  449a48:	stp	x2, x4, [x25, #120]
  449a4c:	stp	x10, x1, [x25, #136]
  449a50:	cbnz	w0, 448460 <argp_parse@@Base+0x8680>
  449a54:	mov	w0, #0x1                   	// #1
  449a58:	ldursh	w26, [x19, #-4]
  449a5c:	sub	x3, x20, #0x70
  449a60:	sub	x4, x19, #0x4
  449a64:	mov	w2, #0xffffffa3            	// #-93
  449a68:	mov	w10, #0x10                  	// #16
  449a6c:	strb	w0, [x25, #161]
  449a70:	b	4481d8 <argp_parse@@Base+0x83f8>
  449a74:	ldp	x0, x1, [x20, #-112]
  449a78:	stp	x0, x1, [x25, #32]
  449a7c:	ldur	x2, [x20, #-48]
  449a80:	ldur	x0, [x20, #-96]
  449a84:	negs	x2, x2
  449a88:	stp	x0, x2, [x25, #48]
  449a8c:	b.vs	448460 <argp_parse@@Base+0x8680>
  449a90:	ldr	x0, [x20, #8]
  449a94:	negs	x0, x0
  449a98:	str	x0, [x25, #64]
  449a9c:	b.vs	448460 <argp_parse@@Base+0x8680>
  449aa0:	ldursh	w26, [x19, #-6]
  449aa4:	sub	x3, x20, #0xa8
  449aa8:	sub	x4, x19, #0x6
  449aac:	mov	w2, #0xffffffa3            	// #-93
  449ab0:	mov	w10, #0xf                   	// #15
  449ab4:	b	4481d8 <argp_parse@@Base+0x83f8>
  449ab8:	ldur	x10, [x20, #-104]
  449abc:	sub	x3, x20, #0xa8
  449ac0:	ldur	x0, [x20, #-56]
  449ac4:	stp	x0, x10, [x25, #56]
  449ac8:	ldursh	w26, [x19, #-6]
  449acc:	ldp	x0, x1, [x20]
  449ad0:	stp	x0, x1, [x25, #32]
  449ad4:	sub	x4, x19, #0x6
  449ad8:	ldr	x0, [x20, #16]
  449adc:	mov	w2, #0xffffffa3            	// #-93
  449ae0:	mov	w10, #0xe                   	// #14
  449ae4:	str	x0, [x25, #48]
  449ae8:	b	4481d8 <argp_parse@@Base+0x83f8>
  449aec:	mov	x3, x20
  449af0:	ldursh	w26, [x19, #-4]
  449af4:	ldur	x0, [x20, #-48]
  449af8:	sub	x4, x19, #0x4
  449afc:	ldr	x1, [x3], #-112
  449b00:	mov	w2, #0xffffffa3            	// #-93
  449b04:	mov	w10, #0xe                   	// #14
  449b08:	stp	x1, x0, [x25, #56]
  449b0c:	b	4481d8 <argp_parse@@Base+0x83f8>
  449b10:	ldur	x0, [x20, #-168]
  449b14:	sub	x3, x20, #0xe0
  449b18:	ldur	x10, [x20, #-104]
  449b1c:	stp	x0, x10, [x25, #56]
  449b20:	ldursh	w26, [x19, #-8]
  449b24:	ldp	x0, x1, [x20]
  449b28:	stp	x0, x1, [x25, #32]
  449b2c:	sub	x4, x19, #0x8
  449b30:	ldr	x0, [x20, #16]
  449b34:	mov	w2, #0xffffffa3            	// #-93
  449b38:	mov	w10, #0xe                   	// #14
  449b3c:	str	x0, [x25, #48]
  449b40:	b	4481d8 <argp_parse@@Base+0x83f8>
  449b44:	ldur	x1, [x20, #-56]
  449b48:	sub	x3, x20, #0x70
  449b4c:	ldr	x0, [x20, #8]
  449b50:	sub	x4, x19, #0x4
  449b54:	ldursh	w26, [x19, #-4]
  449b58:	mov	w2, #0xffffffa3            	// #-93
  449b5c:	mov	w10, #0xe                   	// #14
  449b60:	stp	x1, x0, [x25, #56]
  449b64:	b	4481d8 <argp_parse@@Base+0x83f8>
  449b68:	ldur	x0, [x20, #-48]
  449b6c:	ldur	x1, [x20, #-112]
  449b70:	negs	x0, x0
  449b74:	stp	x1, x0, [x25, #56]
  449b78:	b.vs	448460 <argp_parse@@Base+0x8680>
  449b7c:	ldr	x0, [x20, #8]
  449b80:	negs	x0, x0
  449b84:	str	x0, [x25, #40]
  449b88:	b.vc	448d74 <argp_parse@@Base+0x8f94>
  449b8c:	b	448460 <argp_parse@@Base+0x8680>
  449b90:	mov	x4, x19
  449b94:	mov	x3, x20
  449b98:	mov	w2, #0x2b                  	// #43
  449b9c:	mov	w10, #0x19                  	// #25
  449ba0:	mov	x5, #0xffffffffffffffff    	// #-1
  449ba4:	b	4481d8 <argp_parse@@Base+0x83f8>
  449ba8:	mov	w2, #0xffffffa3            	// #-93
  449bac:	mov	w10, #0x4                   	// #4
  449bb0:	b	4481d8 <argp_parse@@Base+0x83f8>
  449bb4:	add	x0, sp, #0xe0
  449bb8:	bl	403ff0 <strlen@plt>
  449bbc:	str	x0, [sp, #136]
  449bc0:	cmp	x0, #0x3
  449bc4:	b.eq	449c38 <argp_parse@@Base+0x9e58>  // b.none
  449bc8:	cmp	x0, #0x4
  449bcc:	b.eq	449cc0 <argp_parse@@Base+0x9ee0>  // b.none
  449bd0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449bd4:	add	x23, x22, #0x110
  449bd8:	add	x1, x1, #0x920
  449bdc:	b	449be8 <argp_parse@@Base+0x9e08>
  449be0:	ldr	x1, [x23, #16]!
  449be4:	cbz	x1, 449c08 <argp_parse@@Base+0x9e28>
  449be8:	add	x0, sp, #0xe0
  449bec:	bl	404710 <strcmp@plt>
  449bf0:	cbnz	w0, 449be0 <argp_parse@@Base+0x9e00>
  449bf4:	b	448788 <argp_parse@@Base+0x89a8>
  449bf8:	mov	w0, #0x2                   	// #2
  449bfc:	b	448464 <argp_parse@@Base+0x8684>
  449c00:	mov	w0, #0x0                   	// #0
  449c04:	b	448464 <argp_parse@@Base+0x8684>
  449c08:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449c0c:	add	x0, x0, #0x928
  449c10:	mov	x1, x0
  449c14:	add	x23, x22, #0x2a0
  449c18:	str	x0, [sp, #152]
  449c1c:	b	449c28 <argp_parse@@Base+0x9e48>
  449c20:	ldr	x1, [x23, #16]!
  449c24:	cbz	x1, 449c94 <argp_parse@@Base+0x9eb4>
  449c28:	add	x0, sp, #0xe0
  449c2c:	bl	404710 <strcmp@plt>
  449c30:	cbnz	w0, 449c20 <argp_parse@@Base+0x9e40>
  449c34:	b	448788 <argp_parse@@Base+0x89a8>
  449c38:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449c3c:	add	x23, x22, #0x110
  449c40:	add	x1, x1, #0x920
  449c44:	b	449c50 <argp_parse@@Base+0x9e70>
  449c48:	ldr	x1, [x23, #16]!
  449c4c:	cbz	x1, 449c08 <argp_parse@@Base+0x9e28>
  449c50:	add	x0, sp, #0xe0
  449c54:	mov	x2, #0x3                   	// #3
  449c58:	bl	4043c0 <strncmp@plt>
  449c5c:	cbnz	w0, 449c48 <argp_parse@@Base+0x9e68>
  449c60:	b	448788 <argp_parse@@Base+0x89a8>
  449c64:	cmp	w3, #0x9
  449c68:	b.hi	4489f4 <argp_parse@@Base+0x8c14>  // b.pmore
  449c6c:	cmp	w0, #0x30
  449c70:	b.ne	449f88 <argp_parse@@Base+0xa1a8>  // b.any
  449c74:	ldrb	w0, [x6, #1]!
  449c78:	sub	w2, w0, #0x30
  449c7c:	cmp	w2, #0x9
  449c80:	b.hi	4489f4 <argp_parse@@Base+0x8c14>  // b.pmore
  449c84:	b	449c6c <argp_parse@@Base+0x9e8c>
  449c88:	mov	x8, x1
  449c8c:	mov	w5, #0x0                   	// #0
  449c90:	b	4485d4 <argp_parse@@Base+0x87f4>
  449c94:	ldr	x1, [x25, #232]
  449c98:	add	x23, x25, #0xe8
  449c9c:	stp	x23, x1, [sp, #160]
  449ca0:	cbnz	x1, 449cb0 <argp_parse@@Base+0x9ed0>
  449ca4:	b	449e0c <argp_parse@@Base+0xa02c>
  449ca8:	ldr	x1, [x23, #16]!
  449cac:	cbz	x1, 449e0c <argp_parse@@Base+0xa02c>
  449cb0:	add	x0, sp, #0xe0
  449cb4:	bl	404710 <strcmp@plt>
  449cb8:	cbnz	w0, 449ca8 <argp_parse@@Base+0x9ec8>
  449cbc:	b	448788 <argp_parse@@Base+0x89a8>
  449cc0:	ldrb	w0, [sp, #227]
  449cc4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449cc8:	add	x23, x22, #0x110
  449ccc:	add	x1, x1, #0x920
  449cd0:	cmp	w0, #0x2e
  449cd4:	b.ne	449be8 <argp_parse@@Base+0x9e08>  // b.any
  449cd8:	b	449c50 <argp_parse@@Base+0x9e70>
  449cdc:	mov	w2, #0xffffffa3            	// #-93
  449ce0:	mov	w10, #0xc                   	// #12
  449ce4:	b	4481d8 <argp_parse@@Base+0x83f8>
  449ce8:	mov	w2, #0xffffffa3            	// #-93
  449cec:	mov	w10, #0x2                   	// #2
  449cf0:	b	4481d8 <argp_parse@@Base+0x83f8>
  449cf4:	tbz	x2, #63, 44921c <argp_parse@@Base+0x943c>
  449cf8:	mov	x0, #0xd70b                	// #55051
  449cfc:	movk	x0, #0x70a3, lsl #16
  449d00:	movk	x0, #0xa3d, lsl #32
  449d04:	movk	x0, #0xa3d7, lsl #48
  449d08:	smulh	x0, x1, x0
  449d0c:	add	x0, x0, x1
  449d10:	asr	x0, x0, #6
  449d14:	sub	x0, x0, x1, asr #63
  449d18:	add	x2, x0, x0, lsl #1
  449d1c:	add	x2, x0, x2, lsl #3
  449d20:	sub	x2, x1, x2, lsl #2
  449d24:	mov	x1, x0
  449d28:	lsl	x0, x1, #4
  449d2c:	sub	x0, x0, x1
  449d30:	add	x0, x2, x0, lsl #2
  449d34:	b	449248 <argp_parse@@Base+0x9468>
  449d38:	tbz	x2, #63, 44944c <argp_parse@@Base+0x966c>
  449d3c:	mov	x0, #0xd70b                	// #55051
  449d40:	movk	x0, #0x70a3, lsl #16
  449d44:	movk	x0, #0xa3d, lsl #32
  449d48:	movk	x0, #0xa3d7, lsl #48
  449d4c:	smulh	x0, x1, x0
  449d50:	add	x0, x0, x1
  449d54:	asr	x0, x0, #6
  449d58:	sub	x0, x0, x1, asr #63
  449d5c:	add	x2, x0, x0, lsl #1
  449d60:	add	x2, x0, x2, lsl #3
  449d64:	sub	x2, x1, x2, lsl #2
  449d68:	mov	x1, x0
  449d6c:	lsl	x0, x1, #4
  449d70:	sub	x0, x0, x1
  449d74:	add	x0, x2, x0, lsl #2
  449d78:	b	449478 <argp_parse@@Base+0x9698>
  449d7c:	ldur	x1, [x20, #-216]
  449d80:	str	x1, [sp, #136]
  449d84:	cbnz	w0, 449f50 <argp_parse@@Base+0xa170>
  449d88:	ldr	x0, [x20, #16]
  449d8c:	str	x0, [x25, #48]
  449d90:	ldp	x0, x1, [x20]
  449d94:	stp	x0, x1, [x25, #32]
  449d98:	ldursh	w26, [x19, #-10]
  449d9c:	ldur	x13, [x20, #-104]
  449da0:	sub	x3, x20, #0x118
  449da4:	ldr	x0, [sp, #136]
  449da8:	sub	x4, x19, #0xa
  449dac:	mov	w2, #0xffffffa3            	// #-93
  449db0:	mov	w10, #0xe                   	// #14
  449db4:	str	x0, [x25, #56]
  449db8:	str	x13, [x25, #64]
  449dbc:	b	4481d8 <argp_parse@@Base+0x83f8>
  449dc0:	subs	w16, w16, w7
  449dc4:	str	w16, [x25, #152]
  449dc8:	cset	w16, vs
  449dcc:	subs	x1, x17, x1
  449dd0:	cset	x17, vs
  449dd4:	subs	x10, x10, x0
  449dd8:	cset	x0, vs
  449ddc:	subs	x4, x26, x4
  449de0:	cset	x26, vs
  449de4:	subs	x2, x18, x2
  449de8:	cset	x18, vs
  449dec:	subs	x3, x15, x3
  449df0:	cset	x15, vs
  449df4:	orr	x0, x0, x26
  449df8:	orr	x15, x18, x15
  449dfc:	orr	w16, w16, w17
  449e00:	orr	w0, w0, w15
  449e04:	subs	x13, x13, x14
  449e08:	b	449a3c <argp_parse@@Base+0x9c5c>
  449e0c:	add	x2, x22, #0x2e0
  449e10:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449e14:	add	x0, x0, #0x930
  449e18:	mov	x23, x2
  449e1c:	mov	x1, x0
  449e20:	str	x0, [sp, #144]
  449e24:	b	449e30 <argp_parse@@Base+0xa050>
  449e28:	ldr	x1, [x23, #16]!
  449e2c:	cbz	x1, 449e4c <argp_parse@@Base+0xa06c>
  449e30:	add	x0, sp, #0xe0
  449e34:	bl	404710 <strcmp@plt>
  449e38:	cbnz	w0, 449e28 <argp_parse@@Base+0xa048>
  449e3c:	ldrsw	x0, [x23, #12]
  449e40:	ldr	w23, [x23, #8]
  449e44:	str	x0, [sp, #288]
  449e48:	b	448150 <argp_parse@@Base+0x8370>
  449e4c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449e50:	add	x0, sp, #0xe0
  449e54:	add	x1, x1, #0xa58
  449e58:	bl	404710 <strcmp@plt>
  449e5c:	cbz	w0, 449f00 <argp_parse@@Base+0xa120>
  449e60:	add	x2, x22, #0x5e0
  449e64:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449e68:	add	x0, x0, #0x938
  449e6c:	mov	x23, x2
  449e70:	mov	x1, x0
  449e74:	str	x0, [sp, #176]
  449e78:	b	449e84 <argp_parse@@Base+0xa0a4>
  449e7c:	ldr	x1, [x23, #16]!
  449e80:	cbz	x1, 449ebc <argp_parse@@Base+0xa0dc>
  449e84:	add	x0, sp, #0xe0
  449e88:	bl	404710 <strcmp@plt>
  449e8c:	cbnz	w0, 449e7c <argp_parse@@Base+0xa09c>
  449e90:	b	449e3c <argp_parse@@Base+0xa05c>
  449e94:	adds	x0, x0, x2
  449e98:	cset	w2, vs
  449e9c:	b	449240 <argp_parse@@Base+0x9460>
  449ea0:	adds	x0, x0, x2
  449ea4:	cset	w2, vs
  449ea8:	b	449470 <argp_parse@@Base+0x9690>
  449eac:	mov	x2, #0x0                   	// #0
  449eb0:	b	449d28 <argp_parse@@Base+0x9f48>
  449eb4:	mov	x2, #0x0                   	// #0
  449eb8:	b	449d6c <argp_parse@@Base+0x9f8c>
  449ebc:	ldr	x0, [sp, #136]
  449ec0:	sub	x3, x0, #0x1
  449ec4:	add	x0, sp, #0xe0
  449ec8:	ldrb	w0, [x0, x3]
  449ecc:	cmp	w0, #0x53
  449ed0:	b.eq	44a038 <argp_parse@@Base+0xa258>  // b.none
  449ed4:	add	x2, x22, #0x690
  449ed8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449edc:	mov	x23, x2
  449ee0:	add	x1, x1, #0x940
  449ee4:	b	449ef0 <argp_parse@@Base+0xa110>
  449ee8:	ldr	x1, [x23, #16]!
  449eec:	cbz	x1, 449f98 <argp_parse@@Base+0xa1b8>
  449ef0:	add	x0, sp, #0xe0
  449ef4:	bl	404710 <strcmp@plt>
  449ef8:	cbnz	w0, 449ee8 <argp_parse@@Base+0xa108>
  449efc:	b	449e3c <argp_parse@@Base+0xa05c>
  449f00:	mov	w23, #0x103                 	// #259
  449f04:	str	xzr, [sp, #288]
  449f08:	b	448540 <argp_parse@@Base+0x8760>
  449f0c:	mov	w2, #0x5                   	// #5
  449f10:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449f14:	mov	x0, #0x0                   	// #0
  449f18:	add	x1, x1, #0x9d8
  449f1c:	stp	x5, x6, [sp, #136]
  449f20:	stp	x11, x12, [sp, #152]
  449f24:	str	w9, [sp, #168]
  449f28:	str	x3, [sp, #176]
  449f2c:	bl	4049c0 <dcgettext@plt>
  449f30:	ldr	x1, [x26, #8]
  449f34:	ldr	x3, [sp, #176]
  449f38:	mov	x2, x3
  449f3c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  449f40:	ldr	w9, [sp, #168]
  449f44:	ldp	x5, x6, [sp, #136]
  449f48:	ldp	x11, x12, [sp, #152]
  449f4c:	b	448dac <argp_parse@@Base+0x8fcc>
  449f50:	mov	w2, #0x5                   	// #5
  449f54:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  449f58:	mov	x0, #0x0                   	// #0
  449f5c:	add	x1, x1, #0xa10
  449f60:	stp	x5, x6, [sp, #144]
  449f64:	stp	x11, x12, [sp, #160]
  449f68:	str	w9, [sp, #176]
  449f6c:	bl	4049c0 <dcgettext@plt>
  449f70:	ldr	x1, [sp, #136]
  449f74:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  449f78:	ldr	w9, [sp, #176]
  449f7c:	ldp	x5, x6, [sp, #144]
  449f80:	ldp	x11, x12, [sp, #160]
  449f84:	b	449d88 <argp_parse@@Base+0x9fa8>
  449f88:	ldrb	w0, [x6]
  449f8c:	add	w1, w1, #0x1
  449f90:	sub	w3, w0, #0x30
  449f94:	b	4488bc <argp_parse@@Base+0x8adc>
  449f98:	ldr	x0, [sp, #136]
  449f9c:	cmp	x0, #0x1
  449fa0:	ldrb	w0, [sp, #224]
  449fa4:	b.eq	44a088 <argp_parse@@Base+0xa2a8>  // b.none
  449fa8:	add	x3, sp, #0xe0
  449fac:	mov	w2, #0x0                   	// #0
  449fb0:	mov	x1, x3
  449fb4:	cbnz	w0, 449fcc <argp_parse@@Base+0xa1ec>
  449fb8:	b	44a004 <argp_parse@@Base+0xa224>
  449fbc:	add	x1, x1, #0x1
  449fc0:	ldrb	w0, [x3, #1]!
  449fc4:	strb	w0, [x1]
  449fc8:	cbz	w0, 449fdc <argp_parse@@Base+0xa1fc>
  449fcc:	cmp	w0, #0x2e
  449fd0:	b.ne	449fbc <argp_parse@@Base+0xa1dc>  // b.any
  449fd4:	mov	w2, #0x1                   	// #1
  449fd8:	b	449fc0 <argp_parse@@Base+0xa1e0>
  449fdc:	cbz	w2, 44a004 <argp_parse@@Base+0xa224>
  449fe0:	add	x23, x22, #0x2a0
  449fe4:	ldr	x1, [sp, #152]
  449fe8:	b	449ff4 <argp_parse@@Base+0xa214>
  449fec:	ldr	x1, [x23, #16]!
  449ff0:	cbz	x1, 44a0bc <argp_parse@@Base+0xa2dc>
  449ff4:	add	x0, sp, #0xe0
  449ff8:	bl	404710 <strcmp@plt>
  449ffc:	cbnz	w0, 449fec <argp_parse@@Base+0xa20c>
  44a000:	cbnz	x23, 448788 <argp_parse@@Base+0x89a8>
  44a004:	ldrb	w0, [x25, #217]
  44a008:	cbz	w0, 448624 <argp_parse@@Base+0x8844>
  44a00c:	mov	w2, #0x5                   	// #5
  44a010:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a014:	mov	x0, #0x0                   	// #0
  44a018:	add	x1, x1, #0x958
  44a01c:	bl	4049c0 <dcgettext@plt>
  44a020:	mov	w23, #0x3f                  	// #63
  44a024:	add	x1, sp, #0xe0
  44a028:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44a02c:	mov	w0, #0x2                   	// #2
  44a030:	add	w24, w27, w0
  44a034:	b	448168 <argp_parse@@Base+0x8388>
  44a038:	add	x0, sp, #0xe0
  44a03c:	add	x2, x22, #0x5e0
  44a040:	mov	x23, x2
  44a044:	ldr	x1, [sp, #176]
  44a048:	strb	wzr, [x0, x3]
  44a04c:	b	44a058 <argp_parse@@Base+0xa278>
  44a050:	ldr	x1, [x23, #16]!
  44a054:	cbz	x1, 44a078 <argp_parse@@Base+0xa298>
  44a058:	add	x0, sp, #0xe0
  44a05c:	str	x3, [sp, #176]
  44a060:	bl	404710 <strcmp@plt>
  44a064:	ldr	x3, [sp, #176]
  44a068:	cbnz	w0, 44a050 <argp_parse@@Base+0xa270>
  44a06c:	b	449e3c <argp_parse@@Base+0xa05c>
  44a070:	add	x6, x2, #0x4
  44a074:	b	4489c4 <argp_parse@@Base+0x8be4>
  44a078:	add	x1, sp, #0xe0
  44a07c:	mov	w0, #0x53                  	// #83
  44a080:	strb	w0, [x1, x3]
  44a084:	b	449ed4 <argp_parse@@Base+0xa0f4>
  44a088:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a08c:	add	x2, x22, #0x7e0
  44a090:	add	x1, x1, #0x950
  44a094:	b	44a0a0 <argp_parse@@Base+0xa2c0>
  44a098:	ldr	x1, [x2, #16]!
  44a09c:	cbz	x1, 44a0e8 <argp_parse@@Base+0xa308>
  44a0a0:	ldrb	w1, [x1]
  44a0a4:	cmp	w1, w0
  44a0a8:	b.ne	44a098 <argp_parse@@Base+0xa2b8>  // b.any
  44a0ac:	ldrsw	x0, [x2, #12]
  44a0b0:	ldr	w23, [x2, #8]
  44a0b4:	str	x0, [sp, #288]
  44a0b8:	b	448150 <argp_parse@@Base+0x8370>
  44a0bc:	ldr	x1, [sp, #168]
  44a0c0:	cbz	x1, 44a14c <argp_parse@@Base+0xa36c>
  44a0c4:	ldr	x23, [sp, #160]
  44a0c8:	b	44a0d4 <argp_parse@@Base+0xa2f4>
  44a0cc:	ldr	x1, [x23, #16]!
  44a0d0:	cbz	x1, 44a14c <argp_parse@@Base+0xa36c>
  44a0d4:	add	x0, sp, #0xe0
  44a0d8:	bl	404710 <strcmp@plt>
  44a0dc:	cbnz	w0, 44a0cc <argp_parse@@Base+0xa2ec>
  44a0e0:	cbz	x23, 44a004 <argp_parse@@Base+0xa224>
  44a0e4:	b	448788 <argp_parse@@Base+0x89a8>
  44a0e8:	cbz	w0, 44a004 <argp_parse@@Base+0xa224>
  44a0ec:	add	x3, sp, #0xe0
  44a0f0:	mov	w2, #0x0                   	// #0
  44a0f4:	mov	x1, x3
  44a0f8:	b	449fcc <argp_parse@@Base+0xa1ec>
  44a0fc:	add	x6, x2, #0x9
  44a100:	cmn	w5, #0x1
  44a104:	b.ne	4488d4 <argp_parse@@Base+0x8af4>  // b.any
  44a108:	b	4489f4 <argp_parse@@Base+0x8c14>
  44a10c:	sxtw	x0, w1
  44a110:	mov	w23, #0x114                 	// #276
  44a114:	str	x6, [x25]
  44a118:	str	x0, [sp, #120]
  44a11c:	mov	w0, #0x15                  	// #21
  44a120:	add	w24, w27, w0
  44a124:	str	x4, [sp, #288]
  44a128:	b	448168 <argp_parse@@Base+0x8388>
  44a12c:	add	x6, x2, #0x8
  44a130:	b	4489e4 <argp_parse@@Base+0x8c04>
  44a134:	add	x6, x2, #0x7
  44a138:	b	4489dc <argp_parse@@Base+0x8bfc>
  44a13c:	add	x6, x2, #0x6
  44a140:	b	4489d4 <argp_parse@@Base+0x8bf4>
  44a144:	add	x6, x2, #0x5
  44a148:	b	4489cc <argp_parse@@Base+0x8bec>
  44a14c:	add	x23, x22, #0x2e0
  44a150:	ldr	x1, [sp, #144]
  44a154:	b	44a160 <argp_parse@@Base+0xa380>
  44a158:	ldr	x1, [x23, #16]!
  44a15c:	cbz	x1, 44a004 <argp_parse@@Base+0xa224>
  44a160:	add	x0, sp, #0xe0
  44a164:	bl	404710 <strcmp@plt>
  44a168:	cbnz	w0, 44a158 <argp_parse@@Base+0xa378>
  44a16c:	cbz	x23, 44a004 <argp_parse@@Base+0xa224>
  44a170:	b	448788 <argp_parse@@Base+0x89a8>
  44a174:	nop
  44a178:	sub	sp, sp, #0x430
  44a17c:	stp	x29, x30, [sp, #32]
  44a180:	add	x29, sp, #0x20
  44a184:	stp	x19, x20, [sp, #48]
  44a188:	mov	x19, x4
  44a18c:	stp	x21, x22, [sp, #64]
  44a190:	stp	x23, x24, [sp, #80]
  44a194:	mov	x24, x1
  44a198:	mov	x23, x2
  44a19c:	stp	x25, x26, [sp, #96]
  44a1a0:	mov	x26, x0
  44a1a4:	mov	x25, x5
  44a1a8:	mov	x0, x1
  44a1ac:	stp	x27, x28, [sp, #112]
  44a1b0:	str	w3, [sp, #136]
  44a1b4:	bl	403ff0 <strlen@plt>
  44a1b8:	str	x0, [sp, #144]
  44a1bc:	cbz	x23, 44aacc <argp_parse@@Base+0xacec>
  44a1c0:	ldp	x22, x28, [x23]
  44a1c4:	mov	x27, x24
  44a1c8:	ldrb	w0, [x27]
  44a1cc:	cmp	w0, #0xd
  44a1d0:	b.hi	44a92c <argp_parse@@Base+0xab4c>  // b.pmore
  44a1d4:	cmp	w0, #0x8
  44a1d8:	b.hi	44a934 <argp_parse@@Base+0xab54>  // b.pmore
  44a1dc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a1e0:	mov	x0, x27
  44a1e4:	add	x1, x1, #0xa70
  44a1e8:	mov	x2, #0x4                   	// #4
  44a1ec:	bl	4043c0 <strncmp@plt>
  44a1f0:	cbnz	w0, 44a250 <argp_parse@@Base+0xa470>
  44a1f4:	ldrb	w20, [x27, #4]
  44a1f8:	add	x2, x27, #0x4
  44a1fc:	cbz	w20, 44a250 <argp_parse@@Base+0xa470>
  44a200:	mov	x4, x2
  44a204:	mov	w1, w20
  44a208:	mov	x0, #0x1                   	// #1
  44a20c:	mov	w7, #0x22                  	// #34
  44a210:	b	44a22c <argp_parse@@Base+0xa44c>
  44a214:	cmp	w1, #0x22
  44a218:	b.eq	44a97c <argp_parse@@Base+0xab9c>  // b.none
  44a21c:	ldrb	w1, [x3, #1]
  44a220:	add	x0, x0, #0x1
  44a224:	add	x4, x3, #0x1
  44a228:	cbz	w1, 44a250 <argp_parse@@Base+0xa470>
  44a22c:	mov	x3, x4
  44a230:	cmp	w1, #0x5c
  44a234:	b.ne	44a214 <argp_parse@@Base+0xa434>  // b.any
  44a238:	ldrb	w1, [x4, #1]
  44a23c:	add	x3, x4, #0x1
  44a240:	cmp	w1, #0x5c
  44a244:	ccmp	w1, w7, #0x4, ne  // ne = any
  44a248:	b.eq	44a21c <argp_parse@@Base+0xa43c>  // b.none
  44a24c:	nop
  44a250:	mov	x1, x23
  44a254:	add	x2, sp, #0x168
  44a258:	mov	x0, x19
  44a25c:	bl	461e08 <_obstack_memory_used@@Base+0x109f8>
  44a260:	cbz	x0, 44aab0 <argp_parse@@Base+0xacd0>
  44a264:	mov	x20, x19
  44a268:	mov	x21, #0x0                   	// #0
  44a26c:	ldrsw	x1, [sp, #380]
  44a270:	add	x13, sp, #0x338
  44a274:	ldrb	w3, [x27]
  44a278:	add	x12, sp, #0x170
  44a27c:	movi	v0.4s, #0x0
  44a280:	ldr	w0, [sp, #376]
  44a284:	add	x1, x1, #0x76c
  44a288:	add	x14, sp, #0x358
  44a28c:	add	x15, sp, #0x378
  44a290:	stp	x1, xzr, [x13]
  44a294:	add	x1, sp, #0x440
  44a298:	cmp	w3, #0x0
  44a29c:	add	w0, w0, #0x1
  44a2a0:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a2a4:	add	x2, x2, #0x3f8
  44a2a8:	ldpsw	x7, x8, [x12, #-8]
  44a2ac:	csel	x27, x2, x27, eq  // eq = none
  44a2b0:	ldpsw	x9, x10, [x12]
  44a2b4:	sxtw	x6, w28
  44a2b8:	ldr	w2, [sp, #392]
  44a2bc:	sxtw	x0, w0
  44a2c0:	ldr	w3, [sp, #136]
  44a2c4:	mov	w11, #0x2                   	// #2
  44a2c8:	stur	q0, [x1, #-136]
  44a2cc:	mov	w28, #0x9c00                	// #39936
  44a2d0:	and	w3, w3, #0x1
  44a2d4:	stur	q0, [x1, #-120]
  44a2d8:	movk	w28, #0x1da, lsl #16
  44a2dc:	stur	q0, [x1, #-104]
  44a2e0:	stp	x9, x8, [x14]
  44a2e4:	stp	xzr, xzr, [x15]
  44a2e8:	stp	x0, x10, [x13, #16]
  44a2ec:	mov	w0, #0x10d                 	// #269
  44a2f0:	stp	x7, x6, [x14, #16]
  44a2f4:	stp	xzr, xzr, [x15, #16]
  44a2f8:	str	w2, [sp, #272]
  44a2fc:	str	x27, [sp, #784]
  44a300:	mov	w27, #0xa700                	// #42752
  44a304:	str	w11, [sp, #812]
  44a308:	movk	w27, #0x76, lsl #16
  44a30c:	str	xzr, [sp, #920]
  44a310:	mov	w23, w27
  44a314:	str	xzr, [sp, #928]
  44a318:	str	wzr, [sp, #936]
  44a31c:	strh	wzr, [sp, #944]
  44a320:	strb	wzr, [sp, #1000]
  44a324:	strb	w3, [sp, #1001]
  44a328:	ldr	x1, [sp, #408]
  44a32c:	strh	wzr, [sp, #1002]
  44a330:	str	wzr, [sp, #1004]
  44a334:	strb	wzr, [sp, #1008]
  44a338:	str	x1, [sp, #1016]
  44a33c:	str	w0, [sp, #1024]
  44a340:	str	w2, [sp, #1028]
  44a344:	str	xzr, [sp, #1032]
  44a348:	sxtw	x0, w27
  44a34c:	add	w27, w27, w23
  44a350:	adds	x3, x22, x0
  44a354:	b.vs	44a390 <argp_parse@@Base+0xa5b0>
  44a358:	add	x2, sp, #0x2a8
  44a35c:	add	x1, sp, #0x1d8
  44a360:	mov	x0, x20
  44a364:	str	x3, [sp, #472]
  44a368:	bl	461e08 <_obstack_memory_used@@Base+0x109f8>
  44a36c:	cbz	x0, 44a388 <argp_parse@@Base+0xa5a8>
  44a370:	ldr	x0, [sp, #728]
  44a374:	cbz	x0, 44a388 <argp_parse@@Base+0xa5a8>
  44a378:	ldr	w1, [sp, #712]
  44a37c:	ldr	w2, [sp, #1028]
  44a380:	cmp	w1, w2
  44a384:	b.ne	44ad6c <argp_parse@@Base+0xaf8c>  // b.any
  44a388:	cmp	w27, w28
  44a38c:	b.ne	44a348 <argp_parse@@Base+0xa568>  // b.any
  44a390:	ldr	x0, [sp, #1016]
  44a394:	cbz	x0, 44a3a8 <argp_parse@@Base+0xa5c8>
  44a398:	ldr	x1, [sp, #1032]
  44a39c:	cbz	x1, 44a3a8 <argp_parse@@Base+0xa5c8>
  44a3a0:	bl	404710 <strcmp@plt>
  44a3a4:	cbz	w0, 44aa10 <argp_parse@@Base+0xac30>
  44a3a8:	add	x0, sp, #0x310
  44a3ac:	bl	4480e0 <argp_parse@@Base+0x8300>
  44a3b0:	cbnz	w0, 44a93c <argp_parse@@Base+0xab5c>
  44a3b4:	ldrb	w0, [sp, #1001]
  44a3b8:	cbnz	w0, 44aa30 <argp_parse@@Base+0xac50>
  44a3bc:	ldrb	w22, [sp, #944]
  44a3c0:	cbnz	w22, 44aa20 <argp_parse@@Base+0xac40>
  44a3c4:	add	x4, sp, #0x3b8
  44a3c8:	ldp	x2, x3, [x4]
  44a3cc:	ldp	x0, x1, [x4, #24]
  44a3d0:	orr	x0, x0, x3
  44a3d4:	orr	x2, x2, x1
  44a3d8:	ldr	x3, [sp, #968]
  44a3dc:	orr	x0, x0, x2
  44a3e0:	ldr	x1, [sp, #992]
  44a3e4:	add	x1, x1, x3
  44a3e8:	orr	x0, x0, x1
  44a3ec:	cmp	x0, #0x1
  44a3f0:	b.gt	44aa08 <argp_parse@@Base+0xac28>
  44a3f4:	ldr	x24, [sp, #824]
  44a3f8:	tbnz	x24, #63, 44ad40 <argp_parse@@Base+0xaf60>
  44a3fc:	ldr	x0, [sp, #832]
  44a400:	cmp	x0, #0x2
  44a404:	b.eq	44acd8 <argp_parse@@Base+0xaef8>  // b.none
  44a408:	cmp	x24, #0x76c
  44a40c:	sub	x0, x24, #0x76c
  44a410:	mov	w23, #0x0                   	// #0
  44a414:	b.cs	44aca8 <argp_parse@@Base+0xaec8>  // b.hs, b.nlast
  44a418:	tbz	x0, #63, 44acac <argp_parse@@Base+0xaecc>
  44a41c:	cmp	x0, w0, sxtw
  44a420:	str	w0, [sp, #260]
  44a424:	csinc	w23, w23, wzr, eq  // eq = none
  44a428:	and	w23, w23, #0x1
  44a42c:	cbnz	w23, 44acf8 <argp_parse@@Base+0xaf18>
  44a430:	ldr	x0, [sp, #840]
  44a434:	ldrb	w2, [sp, #1001]
  44a438:	subs	x0, x0, #0x1
  44a43c:	str	w0, [sp, #256]
  44a440:	cset	w1, vs
  44a444:	mov	w4, w0
  44a448:	cmp	x0, w0, sxtw
  44a44c:	csinc	w1, w1, wzr, eq  // eq = none
  44a450:	cbnz	w1, 44ad1c <argp_parse@@Base+0xaf3c>
  44a454:	ldr	x0, [sp, #848]
  44a458:	str	w0, [sp, #252]
  44a45c:	fmov	s2, w0
  44a460:	cmp	x0, w0, sxtw
  44a464:	cset	w22, ne  // ne = any
  44a468:	b.ne	44ad1c <argp_parse@@Base+0xaf3c>  // b.any
  44a46c:	ldr	x1, [sp, #984]
  44a470:	cbnz	x1, 44ada8 <argp_parse@@Base+0xafc8>
  44a474:	ldrb	w0, [sp, #945]
  44a478:	cbz	w0, 44b228 <argp_parse@@Base+0xb448>
  44a47c:	ldr	x0, [sp, #952]
  44a480:	cbnz	x0, 44b228 <argp_parse@@Base+0xb448>
  44a484:	ldr	x0, [sp, #960]
  44a488:	cbz	x0, 44ada8 <argp_parse@@Base+0xafc8>
  44a48c:	str	xzr, [sp, #240]
  44a490:	str	wzr, [sp, #248]
  44a494:	str	xzr, [sp, #880]
  44a498:	cbnz	w2, 44b540 <argp_parse@@Base+0xb760>
  44a49c:	mov	w3, #0x0                   	// #0
  44a4a0:	fmov	s1, wzr
  44a4a4:	fmov	s0, wzr
  44a4a8:	mov	w0, #0xffffffff            	// #-1
  44a4ac:	str	w0, [sp, #272]
  44a4b0:	ldr	x0, [sp, #968]
  44a4b4:	cbnz	x0, 44b0e8 <argp_parse@@Base+0xb308>
  44a4b8:	ldr	w2, [sp, #272]
  44a4bc:	mov	v0.s[1], v1.s[0]
  44a4c0:	ldr	w5, [sp, #260]
  44a4c4:	mov	w6, #0xffffffff            	// #-1
  44a4c8:	add	x1, sp, #0xf0
  44a4cc:	mov	x0, x20
  44a4d0:	str	w6, [sp, #264]
  44a4d4:	str	w4, [sp, #320]
  44a4d8:	mov	v0.s[2], w3
  44a4dc:	str	w5, [sp, #324]
  44a4e0:	str	w2, [sp, #336]
  44a4e4:	mov	v0.s[3], v2.s[0]
  44a4e8:	str	q0, [sp, #304]
  44a4ec:	bl	461f20 <_obstack_memory_used@@Base+0x10b10>
  44a4f0:	ldr	w1, [sp, #264]
  44a4f4:	mov	x24, x0
  44a4f8:	tbnz	w1, #31, 44ae80 <argp_parse@@Base+0xb0a0>
  44a4fc:	ldp	w3, w6, [sp, #240]
  44a500:	ldr	w2, [sp, #304]
  44a504:	ldp	w5, w1, [sp, #248]
  44a508:	eor	w2, w2, w3
  44a50c:	ldr	w0, [sp, #312]
  44a510:	ldr	w3, [sp, #316]
  44a514:	ldr	w4, [sp, #308]
  44a518:	eor	w0, w0, w5
  44a51c:	eor	w3, w3, w1
  44a520:	ldr	w5, [sp, #260]
  44a524:	eor	w4, w4, w6
  44a528:	orr	w0, w0, w3
  44a52c:	ldr	w6, [sp, #256]
  44a530:	orr	w2, w2, w4
  44a534:	ldr	w1, [sp, #320]
  44a538:	orr	w0, w0, w2
  44a53c:	ldr	w3, [sp, #324]
  44a540:	eor	w1, w1, w6
  44a544:	eor	w2, w3, w5
  44a548:	orr	w1, w1, w2
  44a54c:	orr	w0, w0, w1
  44a550:	cbnz	w0, 44ae80 <argp_parse@@Base+0xb0a0>
  44a554:	ldr	x0, [sp, #960]
  44a558:	cbz	x0, 44b13c <argp_parse@@Base+0xb35c>
  44a55c:	ldr	x0, [sp, #952]
  44a560:	cbnz	x0, 44b454 <argp_parse@@Base+0xb674>
  44a564:	ldr	x0, [sp, #792]
  44a568:	cmp	x0, #0x0
  44a56c:	b.le	44a584 <argp_parse@@Base+0xa7a4>
  44a570:	ldr	w1, [sp, #800]
  44a574:	ldr	w2, [sp, #264]
  44a578:	cmp	w2, w1
  44a57c:	cset	x1, ne  // ne = any
  44a580:	sub	x0, x0, x1
  44a584:	asr	x1, x0, #63
  44a588:	lsl	x2, x0, #3
  44a58c:	subs	x2, x2, x0
  44a590:	extr	x0, x1, x0, #61
  44a594:	sbc	x0, x0, x1
  44a598:	cmp	x0, x2, asr #63
  44a59c:	b.ne	44b4b0 <argp_parse@@Base+0xb6d0>  // b.any
  44a5a0:	ldr	w3, [sp, #264]
  44a5a4:	mov	w1, #0x2493                	// #9363
  44a5a8:	ldr	w0, [sp, #800]
  44a5ac:	movk	w1, #0x9249, lsl #16
  44a5b0:	sub	w0, w0, w3
  44a5b4:	add	w0, w0, #0x7
  44a5b8:	smull	x1, w0, w1
  44a5bc:	lsr	x1, x1, #32
  44a5c0:	add	w1, w0, w1
  44a5c4:	asr	w1, w1, #2
  44a5c8:	sub	w1, w1, w0, asr #31
  44a5cc:	lsl	w3, w1, #3
  44a5d0:	sub	w1, w3, w1
  44a5d4:	sub	w0, w0, w1
  44a5d8:	sxtw	x0, w0
  44a5dc:	adds	x0, x0, x2
  44a5e0:	b.vs	44b4b0 <argp_parse@@Base+0xb6d0>
  44a5e4:	ldrsw	x1, [sp, #252]
  44a5e8:	adds	x0, x0, x1
  44a5ec:	str	w0, [sp, #252]
  44a5f0:	cset	w1, vs
  44a5f4:	cmp	x0, w0, sxtw
  44a5f8:	csinc	w1, w1, wzr, eq  // eq = none
  44a5fc:	cbnz	w1, 44b4b0 <argp_parse@@Base+0xb6d0>
  44a600:	mov	w2, #0xffffffff            	// #-1
  44a604:	add	x1, sp, #0xf0
  44a608:	mov	x0, x20
  44a60c:	str	w2, [sp, #272]
  44a610:	bl	461f20 <_obstack_memory_used@@Base+0x10b10>
  44a614:	mov	x24, x0
  44a618:	cmn	x0, #0x1
  44a61c:	b.eq	44b4b0 <argp_parse@@Base+0xb6d0>  // b.none
  44a620:	ldrb	w1, [sp, #1001]
  44a624:	cbnz	w1, 44b0f4 <argp_parse@@Base+0xb314>
  44a628:	ldr	x0, [sp, #888]
  44a62c:	ldr	x28, [sp, #896]
  44a630:	ldr	x3, [sp, #904]
  44a634:	orr	x2, x28, x0
  44a638:	orr	x2, x2, x3
  44a63c:	cbz	x2, 44b398 <argp_parse@@Base+0xb5b8>
  44a640:	ldrsw	x27, [sp, #260]
  44a644:	adds	x27, x27, x0
  44a648:	cset	w0, vs
  44a64c:	cmp	x27, w27, sxtw
  44a650:	b.ne	44aa08 <argp_parse@@Base+0xac28>  // b.any
  44a654:	cbnz	w0, 44aa08 <argp_parse@@Base+0xac28>
  44a658:	ldrsw	x0, [sp, #256]
  44a65c:	adds	x28, x0, x28
  44a660:	cset	w0, vs
  44a664:	cmp	x28, w28, sxtw
  44a668:	b.ne	44b40c <argp_parse@@Base+0xb62c>  // b.any
  44a66c:	cbnz	w0, 44b40c <argp_parse@@Base+0xb62c>
  44a670:	ldr	x0, [sp, #904]
  44a674:	ldrsw	x22, [sp, #252]
  44a678:	adds	x22, x22, x0
  44a67c:	cset	w0, vs
  44a680:	cmp	x22, w22, sxtw
  44a684:	b.ne	44b40c <argp_parse@@Base+0xb62c>  // b.any
  44a688:	cbnz	w0, 44b40c <argp_parse@@Base+0xb62c>
  44a68c:	ldr	w3, [sp, #312]
  44a690:	add	x1, sp, #0xf0
  44a694:	ldr	w2, [sp, #336]
  44a698:	mov	x0, x20
  44a69c:	ldr	d0, [sp, #304]
  44a6a0:	stp	w3, w22, [sp, #248]
  44a6a4:	str	w28, [sp, #256]
  44a6a8:	str	d0, [sp, #240]
  44a6ac:	str	w27, [sp, #260]
  44a6b0:	str	w2, [sp, #272]
  44a6b4:	bl	461f20 <_obstack_memory_used@@Base+0x10b10>
  44a6b8:	mov	x24, x0
  44a6bc:	cmn	x0, #0x1
  44a6c0:	b.eq	44b924 <argp_parse@@Base+0xbb44>  // b.none
  44a6c4:	ldrb	w1, [sp, #1001]
  44a6c8:	mov	w2, w1
  44a6cc:	cbnz	w1, 44b248 <argp_parse@@Base+0xb468>
  44a6d0:	ldr	x0, [sp, #992]
  44a6d4:	cbz	x0, 44a6f8 <argp_parse@@Base+0xa918>
  44a6d8:	ldr	x3, [sp, #280]
  44a6dc:	ldrsw	x0, [sp, #808]
  44a6e0:	subs	x0, x0, x3
  44a6e4:	cset	x3, vs
  44a6e8:	subs	x24, x24, x0
  44a6ec:	csinc	x0, x3, xzr, vc
  44a6f0:	cbnz	x0, 44aa08 <argp_parse@@Base+0xac28>
  44a6f4:	cbnz	w2, 44b648 <argp_parse@@Base+0xb868>
  44a6f8:	ldr	x4, [sp, #912]
  44a6fc:	mov	x0, #0xe10                 	// #3600
  44a700:	mul	x2, x4, x0
  44a704:	smulh	x0, x4, x0
  44a708:	cmp	x0, x2, asr #63
  44a70c:	b.ne	44aa08 <argp_parse@@Base+0xac28>  // b.any
  44a710:	ldr	x0, [sp, #880]
  44a714:	mov	x5, #0x94b3                	// #38067
  44a718:	ldrsw	x6, [sp, #936]
  44a71c:	movk	x5, #0x26d6, lsl #16
  44a720:	movk	x5, #0xbe8, lsl #32
  44a724:	adds	x2, x24, x2
  44a728:	add	x0, x6, x0
  44a72c:	movk	x5, #0x112e, lsl #48
  44a730:	mov	x3, x2
  44a734:	mov	x7, #0xca00                	// #51712
  44a738:	movk	x7, #0x3b9a, lsl #16
  44a73c:	mov	x8, #0x5a53                	// #23123
  44a740:	smulh	x2, x0, x5
  44a744:	movk	x8, #0xa09b, lsl #16
  44a748:	orr	x6, x6, x4
  44a74c:	movk	x8, #0xb82f, lsl #32
  44a750:	movk	x8, #0x44, lsl #48
  44a754:	asr	x2, x2, #26
  44a758:	sub	x2, x2, x0, asr #63
  44a75c:	msub	x2, x2, x7, x0
  44a760:	add	x2, x2, x7
  44a764:	lsr	x4, x2, #9
  44a768:	umulh	x4, x4, x8
  44a76c:	lsr	x4, x4, #11
  44a770:	msub	x4, x4, x7, x2
  44a774:	sub	x0, x0, x4
  44a778:	smulh	x2, x0, x5
  44a77c:	asr	x2, x2, #26
  44a780:	sub	x0, x2, x0, asr #63
  44a784:	b.vs	44aa08 <argp_parse@@Base+0xac28>
  44a788:	ldr	x5, [sp, #920]
  44a78c:	mov	x7, #0x3c                  	// #60
  44a790:	mul	x2, x5, x7
  44a794:	smulh	x7, x5, x7
  44a798:	cmp	x7, x2, asr #63
  44a79c:	b.ne	44aa08 <argp_parse@@Base+0xac28>  // b.any
  44a7a0:	adds	x2, x3, x2
  44a7a4:	b.vs	44b554 <argp_parse@@Base+0xb774>
  44a7a8:	ldr	x3, [sp, #928]
  44a7ac:	orr	x5, x3, x5
  44a7b0:	adds	x2, x2, x3
  44a7b4:	b.vs	44b554 <argp_parse@@Base+0xb774>
  44a7b8:	sxtw	x0, w0
  44a7bc:	adds	x22, x2, x0
  44a7c0:	b.vs	44b554 <argp_parse@@Base+0xb774>
  44a7c4:	stp	x22, x4, [x26]
  44a7c8:	cbz	w23, 44a7d4 <argp_parse@@Base+0xa9f4>
  44a7cc:	orr	x0, x5, x6
  44a7d0:	cbnz	x0, 44ba24 <argp_parse@@Base+0xbc44>
  44a7d4:	mov	w22, w1
  44a7d8:	cbz	w22, 44ada0 <argp_parse@@Base+0xafc0>
  44a7dc:	cbz	x25, 44ad84 <argp_parse@@Base+0xafa4>
  44a7e0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a7e4:	mov	x0, x25
  44a7e8:	add	x1, x1, #0xb20
  44a7ec:	bl	404710 <strcmp@plt>
  44a7f0:	cbnz	w0, 44ac3c <argp_parse@@Base+0xae5c>
  44a7f4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44a7f8:	add	x1, x1, #0x400
  44a7fc:	mov	w2, #0x5                   	// #5
  44a800:	mov	x0, #0x0                   	// #0
  44a804:	bl	4049c0 <dcgettext@plt>
  44a808:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44a80c:	ldp	x23, x24, [x26]
  44a810:	mov	w2, #0x5                   	// #5
  44a814:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44a818:	mov	x0, #0x0                   	// #0
  44a81c:	add	x1, x1, #0x448
  44a820:	bl	4049c0 <dcgettext@plt>
  44a824:	mov	w2, w24
  44a828:	mov	x1, x23
  44a82c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44a830:	add	x1, sp, #0x1a0
  44a834:	mov	x0, x26
  44a838:	bl	404450 <gmtime_r@plt>
  44a83c:	cbz	x0, 44a884 <argp_parse@@Base+0xaaa4>
  44a840:	mov	w2, #0x5                   	// #5
  44a844:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44a848:	mov	x0, #0x0                   	// #0
  44a84c:	add	x1, x1, #0x470
  44a850:	bl	4049c0 <dcgettext@plt>
  44a854:	mov	x23, x0
  44a858:	add	x3, sp, #0x1a0
  44a85c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a860:	add	x2, x2, #0x7b8
  44a864:	mov	w5, #0x0                   	// #0
  44a868:	mov	x4, #0x0                   	// #0
  44a86c:	mov	x1, #0x64                  	// #100
  44a870:	add	x0, sp, #0x1d8
  44a874:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44a878:	add	x1, sp, #0x1d8
  44a87c:	mov	x0, x23
  44a880:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44a884:	mov	x1, x26
  44a888:	add	x2, sp, #0x2a8
  44a88c:	mov	x0, x20
  44a890:	bl	461e08 <_obstack_memory_used@@Base+0x109f8>
  44a894:	cbz	x0, 44a8f0 <argp_parse@@Base+0xab10>
  44a898:	mov	w2, #0x5                   	// #5
  44a89c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44a8a0:	mov	x0, #0x0                   	// #0
  44a8a4:	add	x1, x1, #0x488
  44a8a8:	ldr	x24, [sp, #720]
  44a8ac:	bl	4049c0 <dcgettext@plt>
  44a8b0:	add	x3, sp, #0x2a8
  44a8b4:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a8b8:	add	x2, x2, #0x7b8
  44a8bc:	mov	w5, #0x0                   	// #0
  44a8c0:	mov	x4, #0x0                   	// #0
  44a8c4:	mov	x23, x0
  44a8c8:	mov	x1, #0x64                  	// #100
  44a8cc:	add	x0, sp, #0x1d8
  44a8d0:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44a8d4:	add	x1, sp, #0xd0
  44a8d8:	mov	w0, w24
  44a8dc:	bl	447738 <argp_parse@@Base+0x7958>
  44a8e0:	mov	x2, x0
  44a8e4:	add	x1, sp, #0x1d8
  44a8e8:	mov	x0, x23
  44a8ec:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44a8f0:	cmp	x20, x19
  44a8f4:	b.eq	44a900 <argp_parse@@Base+0xab20>  // b.none
  44a8f8:	mov	x0, x20
  44a8fc:	bl	461dc8 <_obstack_memory_used@@Base+0x109b8>
  44a900:	mov	x0, x21
  44a904:	bl	4047b0 <free@plt>
  44a908:	mov	w0, w22
  44a90c:	ldp	x29, x30, [sp, #32]
  44a910:	ldp	x19, x20, [sp, #48]
  44a914:	ldp	x21, x22, [sp, #64]
  44a918:	ldp	x23, x24, [sp, #80]
  44a91c:	ldp	x25, x26, [sp, #96]
  44a920:	ldp	x27, x28, [sp, #112]
  44a924:	add	sp, sp, #0x430
  44a928:	ret
  44a92c:	cmp	w0, #0x20
  44a930:	b.ne	44a1dc <argp_parse@@Base+0xa3fc>  // b.any
  44a934:	add	x27, x27, #0x1
  44a938:	b	44a1c8 <argp_parse@@Base+0xa3e8>
  44a93c:	ldrb	w22, [sp, #1001]
  44a940:	cbz	w22, 44a8f0 <argp_parse@@Base+0xab10>
  44a944:	ldr	x1, [sp, #144]
  44a948:	ldr	x0, [sp, #784]
  44a94c:	add	x24, x24, x1
  44a950:	cmp	x0, x24
  44a954:	b.cc	44aadc <argp_parse@@Base+0xacfc>  // b.lo, b.ul, b.last
  44a958:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44a95c:	mov	w2, #0x5                   	// #5
  44a960:	add	x1, x1, #0xa78
  44a964:	mov	x0, #0x0                   	// #0
  44a968:	bl	4049c0 <dcgettext@plt>
  44a96c:	ldr	x1, [sp, #784]
  44a970:	mov	w22, #0x0                   	// #0
  44a974:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44a978:	b	44a8f0 <argp_parse@@Base+0xab10>
  44a97c:	add	x25, sp, #0x240
  44a980:	cmp	x0, #0x64
  44a984:	mov	x21, #0x0                   	// #0
  44a988:	b.gt	44aa98 <argp_parse@@Base+0xacb8>
  44a98c:	mov	x1, x25
  44a990:	cmp	w20, #0x22
  44a994:	b.eq	44a9bc <argp_parse@@Base+0xabdc>  // b.none
  44a998:	cmp	w20, #0x5c
  44a99c:	cset	w3, eq  // eq = none
  44a9a0:	cinc	x0, x2, eq  // eq = none
  44a9a4:	ldrb	w3, [x2, w3, uxtw]
  44a9a8:	add	x2, x0, #0x1
  44a9ac:	ldrb	w20, [x0, #1]
  44a9b0:	strb	w3, [x1], #1
  44a9b4:	cmp	w20, #0x22
  44a9b8:	b.ne	44a998 <argp_parse@@Base+0xabb8>  // b.any
  44a9bc:	strb	wzr, [x1]
  44a9c0:	mov	x0, x25
  44a9c4:	str	x2, [sp, #152]
  44a9c8:	bl	461d28 <_obstack_memory_used@@Base+0x10918>
  44a9cc:	mov	x20, x0
  44a9d0:	cbz	x0, 44ac5c <argp_parse@@Base+0xae7c>
  44a9d4:	ldr	x2, [sp, #152]
  44a9d8:	add	x27, x2, #0x1
  44a9dc:	ldrb	w0, [x27]
  44a9e0:	cmp	w0, #0xd
  44a9e4:	b.hi	44aabc <argp_parse@@Base+0xacdc>  // b.pmore
  44a9e8:	cmp	w0, #0x8
  44a9ec:	b.hi	44aac4 <argp_parse@@Base+0xace4>  // b.pmore
  44a9f0:	mov	x1, x23
  44a9f4:	add	x2, sp, #0x168
  44a9f8:	mov	x0, x20
  44a9fc:	bl	461e08 <_obstack_memory_used@@Base+0x109f8>
  44aa00:	cbnz	x0, 44a26c <argp_parse@@Base+0xa48c>
  44aa04:	nop
  44aa08:	mov	w22, #0x0                   	// #0
  44aa0c:	b	44a8f0 <argp_parse@@Base+0xab10>
  44aa10:	mov	w0, #0xffffffff            	// #-1
  44aa14:	str	w0, [sp, #1028]
  44aa18:	str	xzr, [sp, #1032]
  44aa1c:	b	44a3a8 <argp_parse@@Base+0xa5c8>
  44aa20:	add	x0, sp, #0x440
  44aa24:	ldp	x0, x1, [x0, #-216]
  44aa28:	stp	x0, x1, [x26]
  44aa2c:	b	44a8f0 <argp_parse@@Base+0xab10>
  44aa30:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44aa34:	add	x1, x1, #0xab8
  44aa38:	mov	w2, #0x5                   	// #5
  44aa3c:	mov	x0, #0x0                   	// #0
  44aa40:	bl	4049c0 <dcgettext@plt>
  44aa44:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44aa48:	ldrb	w0, [sp, #944]
  44aa4c:	cbnz	w0, 44aaf4 <argp_parse@@Base+0xad14>
  44aa50:	ldr	x0, [sp, #992]
  44aa54:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44aa58:	ldr	x23, [x22, #1176]
  44aa5c:	cbnz	x0, 44ad5c <argp_parse@@Base+0xaf7c>
  44aa60:	cbz	x25, 44ae70 <argp_parse@@Base+0xb090>
  44aa64:	cmp	x19, x20
  44aa68:	b.eq	44acb4 <argp_parse@@Base+0xaed4>  // b.none
  44aa6c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44aa70:	add	x1, x1, #0xb08
  44aa74:	mov	w2, #0x5                   	// #5
  44aa78:	mov	x0, #0x0                   	// #0
  44aa7c:	bl	4049c0 <dcgettext@plt>
  44aa80:	mov	x3, x25
  44aa84:	mov	x2, x0
  44aa88:	mov	w1, #0x1                   	// #1
  44aa8c:	mov	x0, x23
  44aa90:	bl	404700 <__fprintf_chk@plt>
  44aa94:	b	44ab20 <argp_parse@@Base+0xad40>
  44aa98:	str	x2, [sp, #152]
  44aa9c:	bl	404310 <malloc@plt>
  44aaa0:	mov	x25, x0
  44aaa4:	mov	x21, x0
  44aaa8:	ldr	x2, [sp, #152]
  44aaac:	cbnz	x0, 44a98c <argp_parse@@Base+0xabac>
  44aab0:	mov	x21, #0x0                   	// #0
  44aab4:	mov	w22, #0x0                   	// #0
  44aab8:	b	44a900 <argp_parse@@Base+0xab20>
  44aabc:	cmp	w0, #0x20
  44aac0:	b.ne	44a9f0 <argp_parse@@Base+0xac10>  // b.any
  44aac4:	add	x27, x27, #0x1
  44aac8:	b	44a9dc <argp_parse@@Base+0xabfc>
  44aacc:	add	x23, sp, #0xc0
  44aad0:	mov	x0, x23
  44aad4:	bl	444438 <argp_parse@@Base+0x4658>
  44aad8:	b	44a1c0 <argp_parse@@Base+0xa3e0>
  44aadc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44aae0:	mov	w2, #0x5                   	// #5
  44aae4:	add	x1, x1, #0xa90
  44aae8:	mov	x0, #0x0                   	// #0
  44aaec:	bl	4049c0 <dcgettext@plt>
  44aaf0:	b	44a96c <argp_parse@@Base+0xab8c>
  44aaf4:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44aaf8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44aafc:	add	x1, x1, #0xad0
  44ab00:	mov	w2, #0x5                   	// #5
  44ab04:	ldr	x23, [x22, #1176]
  44ab08:	mov	x0, #0x0                   	// #0
  44ab0c:	bl	4049c0 <dcgettext@plt>
  44ab10:	mov	x2, x0
  44ab14:	mov	w1, #0x1                   	// #1
  44ab18:	mov	x0, x23
  44ab1c:	bl	404700 <__fprintf_chk@plt>
  44ab20:	ldr	x1, [sp, #968]
  44ab24:	ldr	x23, [x22, #1176]
  44ab28:	ldr	x0, [sp, #992]
  44ab2c:	cbz	x1, 44abb0 <argp_parse@@Base+0xadd0>
  44ab30:	cbz	x0, 44ab84 <argp_parse@@Base+0xada4>
  44ab34:	ldr	w0, [sp, #808]
  44ab38:	add	x1, sp, #0xd0
  44ab3c:	bl	447738 <argp_parse@@Base+0x7958>
  44ab40:	mov	x3, x0
  44ab44:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ab48:	mov	x0, x23
  44ab4c:	add	x2, x2, #0xb88
  44ab50:	mov	w1, #0x1                   	// #1
  44ab54:	bl	404700 <__fprintf_chk@plt>
  44ab58:	ldr	x23, [x22, #1176]
  44ab5c:	mov	x1, x23
  44ab60:	mov	w0, #0xa                   	// #10
  44ab64:	bl	404170 <fputc@plt>
  44ab68:	ldrb	w0, [sp, #944]
  44ab6c:	ldrb	w22, [sp, #1001]
  44ab70:	cbz	w0, 44abb8 <argp_parse@@Base+0xadd8>
  44ab74:	add	x0, sp, #0x440
  44ab78:	ldp	x0, x1, [x0, #-216]
  44ab7c:	stp	x0, x1, [x26]
  44ab80:	b	44a7d8 <argp_parse@@Base+0xa9f8>
  44ab84:	ldr	w0, [sp, #804]
  44ab88:	cmp	w0, #0x0
  44ab8c:	b.le	44ab5c <argp_parse@@Base+0xad7c>
  44ab90:	mov	x3, x23
  44ab94:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ab98:	mov	x2, #0x5                   	// #5
  44ab9c:	add	x0, x0, #0xb80
  44aba0:	mov	x1, #0x1                   	// #1
  44aba4:	bl	4048b0 <fwrite@plt>
  44aba8:	ldr	x23, [x22, #1176]
  44abac:	ldr	x0, [sp, #992]
  44abb0:	cbz	x0, 44ab5c <argp_parse@@Base+0xad7c>
  44abb4:	b	44ab34 <argp_parse@@Base+0xad54>
  44abb8:	add	x6, sp, #0x3b8
  44abbc:	ldr	x4, [sp, #992]
  44abc0:	ldp	x2, x0, [x6]
  44abc4:	ldp	x1, x3, [x6, #24]
  44abc8:	orr	x0, x0, x1
  44abcc:	orr	x5, x3, x2
  44abd0:	ldr	x1, [sp, #968]
  44abd4:	orr	x0, x0, x5
  44abd8:	add	x1, x1, x4
  44abdc:	orr	x0, x0, x1
  44abe0:	cmp	x0, #0x1
  44abe4:	b.le	44a3f4 <argp_parse@@Base+0xa614>
  44abe8:	cbz	w22, 44aa08 <argp_parse@@Base+0xac28>
  44abec:	cmp	x3, #0x1
  44abf0:	b.gt	44ac94 <argp_parse@@Base+0xaeb4>
  44abf4:	cmp	x2, #0x1
  44abf8:	b.gt	44ac84 <argp_parse@@Base+0xaea4>
  44abfc:	ldr	x0, [sp, #960]
  44ac00:	cmp	x0, #0x1
  44ac04:	b.gt	44ac74 <argp_parse@@Base+0xae94>
  44ac08:	ldr	x0, [sp, #976]
  44ac0c:	cmp	x0, #0x1
  44ac10:	b.gt	44ac64 <argp_parse@@Base+0xae84>
  44ac14:	ldr	x0, [sp, #968]
  44ac18:	ldr	x1, [sp, #992]
  44ac1c:	add	x0, x0, x1
  44ac20:	cmp	x0, #0x1
  44ac24:	b.le	44aa08 <argp_parse@@Base+0xac28>
  44ac28:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ac2c:	mov	w22, #0x0                   	// #0
  44ac30:	add	x0, x0, #0xc38
  44ac34:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ac38:	b	44a8f0 <argp_parse@@Base+0xab10>
  44ac3c:	mov	w2, #0x5                   	// #5
  44ac40:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44ac44:	mov	x0, #0x0                   	// #0
  44ac48:	add	x1, x1, #0x420
  44ac4c:	bl	4049c0 <dcgettext@plt>
  44ac50:	mov	x1, x25
  44ac54:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ac58:	b	44a80c <argp_parse@@Base+0xaa2c>
  44ac5c:	mov	w22, #0x0                   	// #0
  44ac60:	b	44a900 <argp_parse@@Base+0xab20>
  44ac64:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ac68:	add	x0, x0, #0xc08
  44ac6c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ac70:	b	44ac14 <argp_parse@@Base+0xae34>
  44ac74:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ac78:	add	x0, x0, #0xbe0
  44ac7c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ac80:	b	44ac08 <argp_parse@@Base+0xae28>
  44ac84:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ac88:	add	x0, x0, #0xbb8
  44ac8c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ac90:	b	44abfc <argp_parse@@Base+0xae1c>
  44ac94:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ac98:	add	x0, x0, #0xb90
  44ac9c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44aca0:	ldr	x2, [sp, #952]
  44aca4:	b	44abf4 <argp_parse@@Base+0xae14>
  44aca8:	tbz	x0, #63, 44a41c <argp_parse@@Base+0xa63c>
  44acac:	mov	w23, #0x1                   	// #1
  44acb0:	b	44a41c <argp_parse@@Base+0xa63c>
  44acb4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44acb8:	mov	x0, x25
  44acbc:	add	x1, x1, #0xb20
  44acc0:	bl	404710 <strcmp@plt>
  44acc4:	cbnz	w0, 44ae60 <argp_parse@@Base+0xb080>
  44acc8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44accc:	mov	w2, #0x5                   	// #5
  44acd0:	add	x1, x1, #0xb28
  44acd4:	b	44ab08 <argp_parse@@Base+0xad28>
  44acd8:	cmp	x24, #0x45
  44acdc:	mov	x23, #0x7d0                 	// #2000
  44ace0:	mov	x0, #0x76c                 	// #1900
  44ace4:	csel	x23, x23, x0, lt  // lt = tstop
  44ace8:	add	x23, x24, x23
  44acec:	cbnz	w22, 44b3e4 <argp_parse@@Base+0xb604>
  44acf0:	mov	x24, x23
  44acf4:	b	44a408 <argp_parse@@Base+0xa628>
  44acf8:	cbz	w22, 44ad18 <argp_parse@@Base+0xaf38>
  44acfc:	mov	w2, #0x5                   	// #5
  44ad00:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ad04:	mov	x0, #0x0                   	// #0
  44ad08:	add	x1, x1, #0xc90
  44ad0c:	bl	4049c0 <dcgettext@plt>
  44ad10:	mov	x1, x24
  44ad14:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ad18:	ldrb	w2, [sp, #1001]
  44ad1c:	cbz	w2, 44aa08 <argp_parse@@Base+0xac28>
  44ad20:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ad24:	add	x1, x1, #0xcb0
  44ad28:	mov	w2, #0x5                   	// #5
  44ad2c:	mov	x0, #0x0                   	// #0
  44ad30:	mov	w22, #0x0                   	// #0
  44ad34:	bl	4049c0 <dcgettext@plt>
  44ad38:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ad3c:	b	44a8f0 <argp_parse@@Base+0xab10>
  44ad40:	mov	x0, #0xfffffffffffff894    	// #-1900
  44ad44:	subs	x0, x0, x24
  44ad48:	cset	w23, vs
  44ad4c:	str	w0, [sp, #260]
  44ad50:	cmp	x0, w0, sxtw
  44ad54:	csinc	w23, w23, wzr, eq  // eq = none
  44ad58:	b	44a42c <argp_parse@@Base+0xa64c>
  44ad5c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ad60:	mov	w2, #0x5                   	// #5
  44ad64:	add	x1, x1, #0xaf0
  44ad68:	b	44ab08 <argp_parse@@Base+0xad28>
  44ad6c:	mov	w2, #0x10d                 	// #269
  44ad70:	str	x0, [sp, #1032]
  44ad74:	str	w2, [sp, #1040]
  44ad78:	str	w1, [sp, #1044]
  44ad7c:	str	xzr, [sp, #1048]
  44ad80:	b	44a390 <argp_parse@@Base+0xa5b0>
  44ad84:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44ad88:	add	x1, x1, #0x3e0
  44ad8c:	mov	w2, #0x5                   	// #5
  44ad90:	mov	x0, #0x0                   	// #0
  44ad94:	bl	4049c0 <dcgettext@plt>
  44ad98:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ad9c:	b	44a80c <argp_parse@@Base+0xaa2c>
  44ada0:	mov	w22, #0x1                   	// #1
  44ada4:	b	44a8f0 <argp_parse@@Base+0xab10>
  44ada8:	ldr	w3, [sp, #812]
  44adac:	ldr	x0, [sp, #856]
  44adb0:	cbz	w3, 44b494 <argp_parse@@Base+0xb6b4>
  44adb4:	cmp	w3, #0x1
  44adb8:	b.eq	44b440 <argp_parse@@Base+0xb660>  // b.none
  44adbc:	cmp	x0, #0x17
  44adc0:	b.hi	44b870 <argp_parse@@Base+0xba90>  // b.pmore
  44adc4:	mov	w3, w0
  44adc8:	str	w3, [sp, #248]
  44adcc:	ldr	x5, [sp, #864]
  44add0:	fmov	s1, w5
  44add4:	ldr	x0, [sp, #872]
  44add8:	stp	w0, w5, [sp, #240]
  44addc:	fmov	s0, w0
  44ade0:	cbz	w2, 44ae48 <argp_parse@@Base+0xb068>
  44ade4:	cbz	x1, 44b770 <argp_parse@@Base+0xb990>
  44ade8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44adec:	mov	w2, #0x5                   	// #5
  44adf0:	add	x1, x1, #0xcf8
  44adf4:	mov	x0, #0x0                   	// #0
  44adf8:	bl	4049c0 <dcgettext@plt>
  44adfc:	mov	x24, x0
  44ae00:	ldp	w7, w6, [sp, #240]
  44ae04:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ae08:	ldr	w5, [sp, #248]
  44ae0c:	add	x4, x4, #0xd58
  44ae10:	add	x27, sp, #0x1d8
  44ae14:	mov	x3, #0x64                  	// #100
  44ae18:	mov	w2, #0x1                   	// #1
  44ae1c:	mov	x1, x3
  44ae20:	mov	x0, x27
  44ae24:	bl	404290 <__snprintf_chk@plt>
  44ae28:	mov	x1, x27
  44ae2c:	mov	x0, x24
  44ae30:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ae34:	ldp	s0, s1, [sp, #240]
  44ae38:	ldr	w3, [sp, #248]
  44ae3c:	ldr	w4, [sp, #256]
  44ae40:	ldr	x1, [sp, #984]
  44ae44:	ldr	s2, [sp, #252]
  44ae48:	ldr	x0, [sp, #952]
  44ae4c:	ldr	x2, [sp, #960]
  44ae50:	orr	x0, x0, x2
  44ae54:	orr	x0, x0, x1
  44ae58:	cbz	x0, 44a4b0 <argp_parse@@Base+0xa6d0>
  44ae5c:	b	44a4a8 <argp_parse@@Base+0xa6c8>
  44ae60:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ae64:	mov	w2, #0x5                   	// #5
  44ae68:	add	x1, x1, #0xb50
  44ae6c:	b	44aa78 <argp_parse@@Base+0xac98>
  44ae70:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ae74:	mov	w2, #0x5                   	// #5
  44ae78:	add	x1, x1, #0xb70
  44ae7c:	b	44ab08 <argp_parse@@Base+0xad28>
  44ae80:	ldr	x0, [sp, #992]
  44ae84:	str	x0, [sp, #136]
  44ae88:	cbnz	x0, 44b578 <argp_parse@@Base+0xb798>
  44ae8c:	add	x5, sp, #0x138
  44ae90:	ldp	w0, w2, [sp, #240]
  44ae94:	str	w0, [sp, #152]
  44ae98:	ldp	w1, w3, [x5, #-8]
  44ae9c:	str	w1, [sp, #144]
  44aea0:	stp	w3, w2, [sp, #160]
  44aea4:	cmp	w1, w0
  44aea8:	ldr	w0, [sp, #248]
  44aeac:	ccmp	w3, w2, #0x0, eq  // eq = none
  44aeb0:	ldr	w1, [sp, #260]
  44aeb4:	ldr	w2, [sp, #312]
  44aeb8:	ldr	w3, [sp, #324]
  44aebc:	stp	w2, w0, [sp, #168]
  44aec0:	stp	w3, w1, [sp, #176]
  44aec4:	ldp	w26, w24, [sp, #252]
  44aec8:	ldp	w27, w25, [x5, #4]
  44aecc:	b.ne	44aee8 <argp_parse@@Base+0xb108>  // b.any
  44aed0:	cmp	w27, w26
  44aed4:	ccmp	w2, w0, #0x4, eq  // eq = none
  44aed8:	b.eq	44aee8 <argp_parse@@Base+0xb108>  // b.none
  44aedc:	cmp	w25, w24
  44aee0:	ccmp	w3, w1, #0x0, eq  // eq = none
  44aee4:	cset	w22, eq  // eq = none
  44aee8:	ldrb	w0, [sp, #1001]
  44aeec:	cbz	w0, 44aa08 <argp_parse@@Base+0xac28>
  44aef0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44aef4:	add	x1, x1, #0xdc0
  44aef8:	mov	w2, #0x5                   	// #5
  44aefc:	mov	x0, #0x0                   	// #0
  44af00:	bl	4049c0 <dcgettext@plt>
  44af04:	adrp	x23, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44af08:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44af0c:	add	x23, x23, #0x7b8
  44af10:	mov	w2, #0x5                   	// #5
  44af14:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44af18:	mov	x0, #0x0                   	// #0
  44af1c:	add	x1, x1, #0xde8
  44af20:	bl	4049c0 <dcgettext@plt>
  44af24:	mov	x28, x0
  44af28:	mov	x2, x23
  44af2c:	add	x0, sp, #0x2a8
  44af30:	add	x3, sp, #0x130
  44af34:	mov	w5, #0x0                   	// #0
  44af38:	mov	x4, #0x0                   	// #0
  44af3c:	mov	x1, #0x64                  	// #100
  44af40:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44af44:	mov	x2, x0
  44af48:	cmp	w0, #0x63
  44af4c:	b.gt	44af58 <argp_parse@@Base+0xb178>
  44af50:	ldr	x0, [sp, #992]
  44af54:	cbnz	x0, 44babc <argp_parse@@Base+0xbcdc>
  44af58:	mov	x0, x28
  44af5c:	add	x1, sp, #0x2a8
  44af60:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44af64:	mov	w2, #0x5                   	// #5
  44af68:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44af6c:	mov	x0, #0x0                   	// #0
  44af70:	add	x1, x1, #0xe08
  44af74:	bl	4049c0 <dcgettext@plt>
  44af78:	mov	x28, x0
  44af7c:	mov	x2, x23
  44af80:	add	x3, sp, #0xf0
  44af84:	add	x0, sp, #0x2a8
  44af88:	mov	w5, #0x0                   	// #0
  44af8c:	mov	x4, #0x0                   	// #0
  44af90:	mov	x1, #0x64                  	// #100
  44af94:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44af98:	mov	x23, x0
  44af9c:	cmp	w0, #0x63
  44afa0:	b.gt	44afac <argp_parse@@Base+0xb1cc>
  44afa4:	ldr	x0, [sp, #992]
  44afa8:	cbnz	x0, 44bb14 <argp_parse@@Base+0xbd34>
  44afac:	mov	x0, x28
  44afb0:	add	x1, sp, #0x2a8
  44afb4:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44afb8:	ldp	w3, w0, [sp, #172]
  44afbc:	adrp	x5, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44afc0:	ldr	w1, [sp, #180]
  44afc4:	add	x5, x5, #0xa60
  44afc8:	ldp	w4, w2, [sp, #164]
  44afcc:	cmp	w0, w1
  44afd0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  44afd4:	add	x0, x0, #0x7e8
  44afd8:	csel	x5, x0, x5, eq  // eq = none
  44afdc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44afe0:	cmp	w25, w24
  44afe4:	add	x1, x1, #0xa68
  44afe8:	csel	x6, x0, x1, eq  // eq = none
  44afec:	cmp	w27, w26
  44aff0:	csel	x7, x0, x1, eq  // eq = none
  44aff4:	cmp	w2, w3
  44aff8:	ldr	w2, [sp, #160]
  44affc:	csel	x3, x0, x1, eq  // eq = none
  44b000:	ldr	w8, [sp, #152]
  44b004:	cmp	w2, w4
  44b008:	ldr	w4, [sp, #144]
  44b00c:	csel	x2, x0, x1, eq  // eq = none
  44b010:	stp	x3, x2, [sp]
  44b014:	cmp	w4, w8
  44b018:	csel	x0, x0, x1, eq  // eq = none
  44b01c:	str	x0, [sp, #16]
  44b020:	mov	x3, #0x64                  	// #100
  44b024:	add	x0, sp, #0x2a8
  44b028:	mov	x1, x3
  44b02c:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b030:	mov	w2, #0x1                   	// #1
  44b034:	add	x4, x4, #0xe28
  44b038:	bl	404290 <__snprintf_chk@plt>
  44b03c:	mov	x0, #0x34                  	// #52
  44b040:	b	44b058 <argp_parse@@Base+0xb278>
  44b044:	sub	x0, x0, #0x1
  44b048:	add	x1, sp, #0x2a8
  44b04c:	ldrb	w1, [x1, x0]
  44b050:	cmp	w1, #0x20
  44b054:	b.ne	44b060 <argp_parse@@Base+0xb280>  // b.any
  44b058:	mov	w2, w0
  44b05c:	cbnz	w0, 44b044 <argp_parse@@Base+0xb264>
  44b060:	add	x1, sp, #0x2a8
  44b064:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44b068:	add	x0, x0, #0xb80
  44b06c:	strb	wzr, [x1, w2, sxtw]
  44b070:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b074:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b078:	add	x1, x1, #0xe68
  44b07c:	mov	w2, #0x5                   	// #5
  44b080:	mov	x0, #0x0                   	// #0
  44b084:	bl	4049c0 <dcgettext@plt>
  44b088:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b08c:	cbnz	w22, 44b9d0 <argp_parse@@Base+0xbbf0>
  44b090:	cmp	w27, w26
  44b094:	ccmp	w25, w24, #0x4, ne  // ne = any
  44b098:	b.ne	44b9b4 <argp_parse@@Base+0xbbd4>  // b.any
  44b09c:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b0a0:	add	x1, x1, #0xee0
  44b0a4:	mov	w2, #0x5                   	// #5
  44b0a8:	mov	x0, #0x0                   	// #0
  44b0ac:	bl	4049c0 <dcgettext@plt>
  44b0b0:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b0b4:	ldr	x0, [sp, #136]
  44b0b8:	cbz	x0, 44b908 <argp_parse@@Base+0xbb28>
  44b0bc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b0c0:	add	x1, x1, #0xf08
  44b0c4:	mov	w2, #0x5                   	// #5
  44b0c8:	mov	x0, #0x0                   	// #0
  44b0cc:	bl	4049c0 <dcgettext@plt>
  44b0d0:	mov	x1, x0
  44b0d4:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b0d8:	mov	w22, #0x0                   	// #0
  44b0dc:	add	x0, x0, #0xf38
  44b0e0:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b0e4:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b0e8:	ldr	w2, [sp, #804]
  44b0ec:	str	w2, [sp, #272]
  44b0f0:	b	44a4bc <argp_parse@@Base+0xa6dc>
  44b0f4:	mov	w2, #0x5                   	// #5
  44b0f8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b0fc:	mov	x0, #0x0                   	// #0
  44b100:	add	x1, x1, #0xf98
  44b104:	bl	4049c0 <dcgettext@plt>
  44b108:	mov	x22, x0
  44b10c:	add	x1, sp, #0x2a8
  44b110:	add	x0, sp, #0x310
  44b114:	bl	447a20 <argp_parse@@Base+0x7c40>
  44b118:	mov	x27, x0
  44b11c:	add	x2, sp, #0x1d8
  44b120:	add	x1, sp, #0x310
  44b124:	add	x0, sp, #0xf0
  44b128:	bl	447970 <argp_parse@@Base+0x7b90>
  44b12c:	mov	x1, x27
  44b130:	mov	x2, x0
  44b134:	mov	x0, x22
  44b138:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b13c:	ldrb	w1, [sp, #1001]
  44b140:	cbz	w1, 44a628 <argp_parse@@Base+0xa848>
  44b144:	ldr	x1, [sp, #952]
  44b148:	ldr	x0, [sp, #960]
  44b14c:	cbnz	x1, 44b63c <argp_parse@@Base+0xb85c>
  44b150:	add	x27, sp, #0x1d8
  44b154:	cbz	x0, 44b7c4 <argp_parse@@Base+0xb9e4>
  44b158:	mov	w2, #0x5                   	// #5
  44b15c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b160:	mov	x0, #0x0                   	// #0
  44b164:	add	x1, x1, #0x40
  44b168:	bl	4049c0 <dcgettext@plt>
  44b16c:	mov	x28, x0
  44b170:	add	x3, sp, #0xf0
  44b174:	mov	x0, x27
  44b178:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b17c:	mov	w5, #0x0                   	// #0
  44b180:	add	x2, x2, #0x7b8
  44b184:	mov	x4, #0x0                   	// #0
  44b188:	mov	x1, #0x64                  	// #100
  44b18c:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44b190:	mov	x22, x0
  44b194:	cmp	w0, #0x63
  44b198:	b.gt	44b1a4 <argp_parse@@Base+0xb3c4>
  44b19c:	ldr	x0, [sp, #992]
  44b1a0:	cbnz	x0, 44b78c <argp_parse@@Base+0xb9ac>
  44b1a4:	mov	x0, x28
  44b1a8:	mov	x1, x27
  44b1ac:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b1b0:	ldr	x0, [sp, #888]
  44b1b4:	ldr	x28, [sp, #896]
  44b1b8:	ldr	x3, [sp, #904]
  44b1bc:	orr	x4, x0, x28
  44b1c0:	ldrb	w1, [sp, #1001]
  44b1c4:	orr	x5, x4, x3
  44b1c8:	mov	w2, w1
  44b1cc:	cbz	x5, 44b398 <argp_parse@@Base+0xb5b8>
  44b1d0:	cbz	w1, 44a640 <argp_parse@@Base+0xa860>
  44b1d4:	cbz	x4, 44b8ac <argp_parse@@Base+0xbacc>
  44b1d8:	ldr	w0, [sp, #252]
  44b1dc:	cmp	w0, #0xf
  44b1e0:	b.eq	44b200 <argp_parse@@Base+0xb420>  // b.none
  44b1e4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b1e8:	add	x1, x1, #0x60
  44b1ec:	mov	w2, #0x5                   	// #5
  44b1f0:	mov	x0, #0x0                   	// #0
  44b1f4:	bl	4049c0 <dcgettext@plt>
  44b1f8:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b1fc:	ldr	x3, [sp, #904]
  44b200:	cbnz	x3, 44b8ac <argp_parse@@Base+0xbacc>
  44b204:	ldr	x0, [sp, #888]
  44b208:	ldrsw	x27, [sp, #260]
  44b20c:	adds	x27, x27, x0
  44b210:	cset	w0, vs
  44b214:	cmp	x27, w27, sxtw
  44b218:	b.ne	44b40c <argp_parse@@Base+0xb62c>  // b.any
  44b21c:	cbnz	w0, 44b40c <argp_parse@@Base+0xb62c>
  44b220:	ldr	x28, [sp, #896]
  44b224:	b	44a658 <argp_parse@@Base+0xa878>
  44b228:	str	xzr, [sp, #240]
  44b22c:	str	wzr, [sp, #248]
  44b230:	str	xzr, [sp, #880]
  44b234:	cbnz	w2, 44b540 <argp_parse@@Base+0xb760>
  44b238:	mov	w3, #0x0                   	// #0
  44b23c:	fmov	s1, wzr
  44b240:	fmov	s0, wzr
  44b244:	b	44ae48 <argp_parse@@Base+0xb068>
  44b248:	mov	w2, #0x5                   	// #5
  44b24c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b250:	mov	x0, #0x0                   	// #0
  44b254:	add	x1, x1, #0x178
  44b258:	bl	4049c0 <dcgettext@plt>
  44b25c:	ldr	x1, [sp, #888]
  44b260:	ldr	x2, [sp, #896]
  44b264:	ldr	x3, [sp, #904]
  44b268:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b26c:	mov	w2, #0x5                   	// #5
  44b270:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b274:	mov	x0, #0x0                   	// #0
  44b278:	add	x1, x1, #0x1b8
  44b27c:	bl	4049c0 <dcgettext@plt>
  44b280:	mov	x3, x0
  44b284:	add	x2, sp, #0x1d8
  44b288:	add	x1, sp, #0x310
  44b28c:	add	x0, sp, #0xf0
  44b290:	str	x3, [sp, #136]
  44b294:	bl	447970 <argp_parse@@Base+0x7b90>
  44b298:	mov	x1, x0
  44b29c:	ldr	x3, [sp, #136]
  44b2a0:	mov	x0, x3
  44b2a4:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b2a8:	ldr	w0, [sp, #336]
  44b2ac:	cmn	w0, #0x1
  44b2b0:	b.eq	44b2d8 <argp_parse@@Base+0xb4f8>  // b.none
  44b2b4:	ldr	w1, [sp, #272]
  44b2b8:	cmp	w0, w1
  44b2bc:	b.eq	44b2d8 <argp_parse@@Base+0xb4f8>  // b.none
  44b2c0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b2c4:	add	x1, x1, #0x1d8
  44b2c8:	mov	w2, #0x5                   	// #5
  44b2cc:	mov	x0, #0x0                   	// #0
  44b2d0:	bl	4049c0 <dcgettext@plt>
  44b2d4:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b2d8:	ldr	x0, [sp, #904]
  44b2dc:	cbnz	x0, 44b390 <argp_parse@@Base+0xb5b0>
  44b2e0:	ldr	w0, [sp, #252]
  44b2e4:	cmp	w22, w0
  44b2e8:	b.ne	44b300 <argp_parse@@Base+0xb520>  // b.any
  44b2ec:	ldr	x0, [sp, #896]
  44b2f0:	cbnz	x0, 44b390 <argp_parse@@Base+0xb5b0>
  44b2f4:	ldr	w0, [sp, #256]
  44b2f8:	cmp	w28, w0
  44b2fc:	b.eq	44b390 <argp_parse@@Base+0xb5b0>  // b.none
  44b300:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b304:	add	x1, x1, #0x218
  44b308:	mov	w2, #0x5                   	// #5
  44b30c:	mov	x0, #0x0                   	// #0
  44b310:	bl	4049c0 <dcgettext@plt>
  44b314:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b318:	mov	w2, #0x5                   	// #5
  44b31c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b320:	mov	x0, #0x0                   	// #0
  44b324:	add	x1, x1, #0x258
  44b328:	bl	4049c0 <dcgettext@plt>
  44b32c:	mov	x2, x0
  44b330:	add	x1, sp, #0x1a0
  44b334:	mov	w0, w27
  44b338:	str	x2, [sp, #136]
  44b33c:	bl	447848 <argp_parse@@Base+0x7a68>
  44b340:	mov	x1, x0
  44b344:	ldr	x2, [sp, #136]
  44b348:	mov	w3, w22
  44b34c:	mov	x0, x2
  44b350:	add	w2, w28, #0x1
  44b354:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b358:	mov	w2, #0x5                   	// #5
  44b35c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b360:	mov	x0, #0x0                   	// #0
  44b364:	add	x1, x1, #0x280
  44b368:	bl	4049c0 <dcgettext@plt>
  44b36c:	mov	x22, x0
  44b370:	ldr	w0, [sp, #260]
  44b374:	add	x1, sp, #0x1a0
  44b378:	bl	447848 <argp_parse@@Base+0x7a68>
  44b37c:	mov	x1, x0
  44b380:	ldp	w3, w2, [sp, #252]
  44b384:	mov	x0, x22
  44b388:	add	w2, w2, #0x1
  44b38c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b390:	ldrb	w1, [sp, #1001]
  44b394:	mov	w2, w1
  44b398:	ldr	x0, [sp, #992]
  44b39c:	cbz	x0, 44a6f4 <argp_parse@@Base+0xa914>
  44b3a0:	ldr	x3, [sp, #280]
  44b3a4:	ldrsw	x0, [sp, #808]
  44b3a8:	subs	x0, x0, x3
  44b3ac:	cset	x3, vs
  44b3b0:	subs	x24, x24, x0
  44b3b4:	csinc	x0, x3, xzr, vc
  44b3b8:	cbz	x0, 44a6f4 <argp_parse@@Base+0xa914>
  44b3bc:	cbz	w2, 44aa08 <argp_parse@@Base+0xac28>
  44b3c0:	mov	w2, #0x5                   	// #5
  44b3c4:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b3c8:	mov	x0, #0x0                   	// #0
  44b3cc:	add	x1, x1, #0x2a8
  44b3d0:	bl	4049c0 <dcgettext@plt>
  44b3d4:	mov	w22, #0x0                   	// #0
  44b3d8:	ldr	w1, [sp, #808]
  44b3dc:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b3e0:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b3e4:	mov	w2, #0x5                   	// #5
  44b3e8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b3ec:	mov	x0, #0x0                   	// #0
  44b3f0:	add	x1, x1, #0xc60
  44b3f4:	bl	4049c0 <dcgettext@plt>
  44b3f8:	mov	x1, x24
  44b3fc:	mov	x2, x23
  44b400:	mov	x24, x23
  44b404:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b408:	b	44a408 <argp_parse@@Base+0xa628>
  44b40c:	ldrb	w0, [sp, #1001]
  44b410:	cbz	w0, 44aa08 <argp_parse@@Base+0xac28>
  44b414:	mov	w2, #0x5                   	// #5
  44b418:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b41c:	mov	x0, #0x0                   	// #0
  44b420:	add	x1, x1, #0x110
  44b424:	bl	4049c0 <dcgettext@plt>
  44b428:	mov	w22, #0x0                   	// #0
  44b42c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b430:	mov	w2, #0x877                 	// #2167
  44b434:	add	x1, x1, #0x120
  44b438:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b43c:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b440:	sub	x3, x0, #0x1
  44b444:	cmp	x3, #0xa
  44b448:	b.hi	44b75c <argp_parse@@Base+0xb97c>  // b.pmore
  44b44c:	add	w3, w0, #0xc
  44b450:	b	44adc8 <argp_parse@@Base+0xafe8>
  44b454:	ldrb	w1, [sp, #1001]
  44b458:	cbz	w1, 44a628 <argp_parse@@Base+0xa848>
  44b45c:	add	x27, sp, #0x1d8
  44b460:	mov	w2, #0x5                   	// #5
  44b464:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b468:	mov	x0, #0x0                   	// #0
  44b46c:	add	x1, x1, #0x0
  44b470:	bl	4049c0 <dcgettext@plt>
  44b474:	mov	x22, x0
  44b478:	add	x1, sp, #0x2a8
  44b47c:	add	x0, sp, #0x310
  44b480:	bl	447a20 <argp_parse@@Base+0x7c40>
  44b484:	mov	x1, x0
  44b488:	mov	x0, x22
  44b48c:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b490:	b	44b158 <argp_parse@@Base+0xb378>
  44b494:	sub	x5, x0, #0x1
  44b498:	cmp	x5, #0xa
  44b49c:	b.ls	44adc4 <argp_parse@@Base+0xafe4>  // b.plast
  44b4a0:	cmp	x0, #0xc
  44b4a4:	b.ne	44bb00 <argp_parse@@Base+0xbd20>  // b.any
  44b4a8:	str	wzr, [sp, #248]
  44b4ac:	b	44adcc <argp_parse@@Base+0xafec>
  44b4b0:	ldrb	w0, [sp, #1001]
  44b4b4:	cbz	w0, 44aa08 <argp_parse@@Base+0xac28>
  44b4b8:	mov	w2, #0x5                   	// #5
  44b4bc:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b4c0:	mov	x0, #0x0                   	// #0
  44b4c4:	add	x1, x1, #0xf48
  44b4c8:	bl	4049c0 <dcgettext@plt>
  44b4cc:	add	x27, sp, #0x1d8
  44b4d0:	add	x1, sp, #0x2a8
  44b4d4:	mov	x23, x0
  44b4d8:	add	x0, sp, #0x310
  44b4dc:	bl	447a20 <argp_parse@@Base+0x7c40>
  44b4e0:	add	x3, sp, #0xf0
  44b4e4:	ldr	w26, [sp, #800]
  44b4e8:	mov	x24, x0
  44b4ec:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b4f0:	mov	x0, x27
  44b4f4:	add	x2, x2, #0x7b8
  44b4f8:	mov	w5, #0x0                   	// #0
  44b4fc:	mov	x4, #0x0                   	// #0
  44b500:	mov	x1, #0x64                  	// #100
  44b504:	ldr	x25, [sp, #792]
  44b508:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44b50c:	mov	x22, x0
  44b510:	cmp	w0, #0x63
  44b514:	b.gt	44b520 <argp_parse@@Base+0xb740>
  44b518:	ldr	x0, [sp, #992]
  44b51c:	cbnz	x0, 44b9ec <argp_parse@@Base+0xbc0c>
  44b520:	mov	x4, x27
  44b524:	mov	w3, w26
  44b528:	mov	x2, x25
  44b52c:	mov	x1, x24
  44b530:	mov	x0, x23
  44b534:	mov	w22, #0x0                   	// #0
  44b538:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b53c:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b540:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b544:	add	x0, x0, #0xd68
  44b548:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b54c:	b	44ae34 <argp_parse@@Base+0xb054>
  44b550:	ldrb	w23, [sp, #1001]
  44b554:	cbz	w23, 44aa08 <argp_parse@@Base+0xac28>
  44b558:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b55c:	add	x1, x1, #0x2f8
  44b560:	mov	w2, #0x5                   	// #5
  44b564:	mov	x0, #0x0                   	// #0
  44b568:	mov	w22, #0x0                   	// #0
  44b56c:	bl	4049c0 <dcgettext@plt>
  44b570:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b574:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b578:	ldr	w0, [sp, #808]
  44b57c:	mov	w3, #0x5858                	// #22616
  44b580:	mov	w2, #0x58                  	// #88
  44b584:	add	x1, sp, #0x2ab
  44b588:	strh	w3, [sp, #680]
  44b58c:	strb	w2, [sp, #682]
  44b590:	bl	447738 <argp_parse@@Base+0x7958>
  44b594:	add	x0, sp, #0x2a8
  44b598:	bl	461d28 <_obstack_memory_used@@Base+0x10918>
  44b59c:	mov	x27, x0
  44b5a0:	cbz	x0, 44b8e0 <argp_parse@@Base+0xbb00>
  44b5a4:	ldr	w2, [sp, #336]
  44b5a8:	mov	w3, #0xffffffff            	// #-1
  44b5ac:	ldr	q0, [sp, #304]
  44b5b0:	add	x1, sp, #0xf0
  44b5b4:	ldr	x4, [sp, #320]
  44b5b8:	str	x4, [sp, #256]
  44b5bc:	str	q0, [sp, #240]
  44b5c0:	str	w3, [sp, #264]
  44b5c4:	str	w2, [sp, #272]
  44b5c8:	bl	461f20 <_obstack_memory_used@@Base+0x10b10>
  44b5cc:	ldr	w1, [sp, #264]
  44b5d0:	mov	x24, x0
  44b5d4:	tbnz	w1, #31, 44b8d4 <argp_parse@@Base+0xbaf4>
  44b5d8:	ldp	w3, w6, [sp, #240]
  44b5dc:	mov	x0, x27
  44b5e0:	ldr	w2, [sp, #304]
  44b5e4:	ldp	w5, w1, [sp, #248]
  44b5e8:	eor	w2, w2, w3
  44b5ec:	ldr	w27, [sp, #312]
  44b5f0:	ldr	w3, [sp, #316]
  44b5f4:	ldr	w4, [sp, #308]
  44b5f8:	eor	w27, w27, w5
  44b5fc:	eor	w3, w3, w1
  44b600:	ldr	w5, [sp, #260]
  44b604:	eor	w4, w4, w6
  44b608:	orr	w27, w27, w3
  44b60c:	ldr	w6, [sp, #256]
  44b610:	orr	w2, w2, w4
  44b614:	ldr	w1, [sp, #320]
  44b618:	orr	w27, w27, w2
  44b61c:	ldr	w3, [sp, #324]
  44b620:	eor	w1, w1, w6
  44b624:	eor	w2, w3, w5
  44b628:	orr	w1, w1, w2
  44b62c:	orr	w27, w27, w1
  44b630:	bl	461dc8 <_obstack_memory_used@@Base+0x109b8>
  44b634:	cbz	w27, 44a554 <argp_parse@@Base+0xa774>
  44b638:	b	44ae8c <argp_parse@@Base+0xb0ac>
  44b63c:	cbnz	x0, 44b45c <argp_parse@@Base+0xb67c>
  44b640:	add	x27, sp, #0x1d8
  44b644:	b	44b158 <argp_parse@@Base+0xb378>
  44b648:	mov	w2, #0x5                   	// #5
  44b64c:	add	x27, sp, #0x1d8
  44b650:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b654:	mov	x0, #0x0                   	// #0
  44b658:	add	x1, x1, #0x2d8
  44b65c:	bl	4049c0 <dcgettext@plt>
  44b660:	add	x3, sp, #0xf0
  44b664:	mov	x23, x0
  44b668:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b66c:	mov	x0, x27
  44b670:	add	x2, x2, #0x7b8
  44b674:	mov	w5, #0x0                   	// #0
  44b678:	mov	x4, #0x0                   	// #0
  44b67c:	mov	x1, #0x64                  	// #100
  44b680:	bl	464370 <_obstack_memory_used@@Base+0x12f60>
  44b684:	mov	x22, x0
  44b688:	cmp	w0, #0x63
  44b68c:	b.gt	44b698 <argp_parse@@Base+0xb8b8>
  44b690:	ldr	x0, [sp, #992]
  44b694:	cbnz	x0, 44b968 <argp_parse@@Base+0xbb88>
  44b698:	mov	x0, x23
  44b69c:	mov	x2, x24
  44b6a0:	mov	x1, x27
  44b6a4:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b6a8:	ldr	x4, [sp, #912]
  44b6ac:	mov	x0, #0xe10                 	// #3600
  44b6b0:	mul	x2, x4, x0
  44b6b4:	smulh	x0, x4, x0
  44b6b8:	cmp	x0, x2, asr #63
  44b6bc:	b.ne	44b550 <argp_parse@@Base+0xb770>  // b.any
  44b6c0:	ldr	x0, [sp, #880]
  44b6c4:	mov	x5, #0x94b3                	// #38067
  44b6c8:	ldrsw	x6, [sp, #936]
  44b6cc:	movk	x5, #0x26d6, lsl #16
  44b6d0:	movk	x5, #0xbe8, lsl #32
  44b6d4:	adds	x2, x24, x2
  44b6d8:	add	x0, x6, x0
  44b6dc:	movk	x5, #0x112e, lsl #48
  44b6e0:	mov	x3, x2
  44b6e4:	mov	x7, #0xca00                	// #51712
  44b6e8:	movk	x7, #0x3b9a, lsl #16
  44b6ec:	mov	x8, #0x5a53                	// #23123
  44b6f0:	smulh	x2, x0, x5
  44b6f4:	movk	x8, #0xa09b, lsl #16
  44b6f8:	orr	x6, x6, x4
  44b6fc:	movk	x8, #0xb82f, lsl #32
  44b700:	movk	x8, #0x44, lsl #48
  44b704:	ldrb	w1, [sp, #1001]
  44b708:	asr	x2, x2, #26
  44b70c:	sub	x2, x2, x0, asr #63
  44b710:	mov	w23, w1
  44b714:	msub	x2, x2, x7, x0
  44b718:	add	x2, x2, x7
  44b71c:	lsr	x4, x2, #9
  44b720:	umulh	x4, x4, x8
  44b724:	lsr	x4, x4, #11
  44b728:	msub	x4, x4, x7, x2
  44b72c:	sub	x0, x0, x4
  44b730:	smulh	x2, x0, x5
  44b734:	asr	x2, x2, #26
  44b738:	sub	x0, x2, x0, asr #63
  44b73c:	b.vs	44b554 <argp_parse@@Base+0xb774>
  44b740:	ldr	x5, [sp, #920]
  44b744:	mov	x7, #0x3c                  	// #60
  44b748:	mul	x2, x5, x7
  44b74c:	smulh	x7, x5, x7
  44b750:	cmp	x7, x2, asr #63
  44b754:	b.eq	44a7a0 <argp_parse@@Base+0xa9c0>  // b.none
  44b758:	b	44b554 <argp_parse@@Base+0xb774>
  44b75c:	cmp	x0, #0xc
  44b760:	b.ne	44b9a0 <argp_parse@@Base+0xbbc0>  // b.any
  44b764:	mov	w3, w0
  44b768:	str	w0, [sp, #248]
  44b76c:	b	44adcc <argp_parse@@Base+0xafec>
  44b770:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b774:	mov	w2, #0x5                   	// #5
  44b778:	add	x1, x1, #0xd28
  44b77c:	mov	x0, #0x0                   	// #0
  44b780:	bl	4049c0 <dcgettext@plt>
  44b784:	mov	x24, x0
  44b788:	b	44ae00 <argp_parse@@Base+0xb020>
  44b78c:	ldr	w0, [sp, #808]
  44b790:	add	x1, sp, #0x1a0
  44b794:	bl	447738 <argp_parse@@Base+0x7958>
  44b798:	mov	x5, x0
  44b79c:	mov	w1, #0x64                  	// #100
  44b7a0:	sub	w1, w1, w22
  44b7a4:	add	x0, x27, w22, sxtw
  44b7a8:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b7ac:	sxtw	x1, w1
  44b7b0:	add	x4, x4, #0x7d8
  44b7b4:	mov	x3, #0xffffffffffffffff    	// #-1
  44b7b8:	mov	w2, #0x1                   	// #1
  44b7bc:	bl	404290 <__snprintf_chk@plt>
  44b7c0:	b	44b1a4 <argp_parse@@Base+0xb3c4>
  44b7c4:	mov	w2, #0x5                   	// #5
  44b7c8:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b7cc:	add	x1, x1, #0xfb8
  44b7d0:	bl	4049c0 <dcgettext@plt>
  44b7d4:	ldr	w6, [sp, #260]
  44b7d8:	mov	w4, #0x851f                	// #34079
  44b7dc:	movk	w4, #0x51eb, lsl #16
  44b7e0:	mov	w5, #0x64                  	// #100
  44b7e4:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b7e8:	add	x3, x3, #0x7a0
  44b7ec:	mov	x22, x0
  44b7f0:	mov	x2, #0xd                   	// #13
  44b7f4:	smull	x4, w6, w4
  44b7f8:	mov	w1, #0x1                   	// #1
  44b7fc:	add	x0, sp, #0x1a0
  44b800:	asr	x4, x4, #37
  44b804:	sub	w4, w4, w6, asr #31
  44b808:	msub	w5, w4, w5, w6
  44b80c:	cmp	w5, #0x0
  44b810:	cneg	w5, w5, lt  // lt = tstop
  44b814:	adds	w4, w4, #0x13
  44b818:	cneg	w4, w4, mi  // mi = first
  44b81c:	cmn	w6, #0x76c
  44b820:	cinc	x3, x3, ge  // ge = tcont
  44b824:	bl	404010 <__sprintf_chk@plt>
  44b828:	ldp	w7, w6, [sp, #252]
  44b82c:	add	x5, sp, #0x1a0
  44b830:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b834:	add	x4, x4, #0xfe8
  44b838:	add	w6, w6, #0x1
  44b83c:	mov	x3, #0x64                  	// #100
  44b840:	mov	w2, #0x1                   	// #1
  44b844:	mov	x1, x3
  44b848:	mov	x0, x27
  44b84c:	bl	404290 <__snprintf_chk@plt>
  44b850:	mov	x0, x22
  44b854:	mov	x1, x27
  44b858:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b85c:	ldr	x0, [sp, #960]
  44b860:	cbz	x0, 44b158 <argp_parse@@Base+0xb378>
  44b864:	ldr	x0, [sp, #952]
  44b868:	cbnz	x0, 44b460 <argp_parse@@Base+0xb680>
  44b86c:	b	44b158 <argp_parse@@Base+0xb378>
  44b870:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x21bf0>
  44b874:	add	x22, x22, #0x7e8
  44b878:	mov	w0, #0xffffffff            	// #-1
  44b87c:	str	w0, [sp, #248]
  44b880:	cbz	w2, 44aa08 <argp_parse@@Base+0xac28>
  44b884:	mov	w2, #0x5                   	// #5
  44b888:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b88c:	mov	x0, #0x0                   	// #0
  44b890:	add	x1, x1, #0xcd8
  44b894:	bl	4049c0 <dcgettext@plt>
  44b898:	ldr	x1, [sp, #856]
  44b89c:	mov	x2, x22
  44b8a0:	mov	w22, #0x0                   	// #0
  44b8a4:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b8a8:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b8ac:	ldr	w0, [sp, #248]
  44b8b0:	cmp	w0, #0xc
  44b8b4:	b.eq	44b204 <argp_parse@@Base+0xb424>  // b.none
  44b8b8:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b8bc:	add	x1, x1, #0xc8
  44b8c0:	mov	w2, #0x5                   	// #5
  44b8c4:	mov	x0, #0x0                   	// #0
  44b8c8:	bl	4049c0 <dcgettext@plt>
  44b8cc:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b8d0:	b	44b204 <argp_parse@@Base+0xb424>
  44b8d4:	mov	x0, x27
  44b8d8:	bl	461dc8 <_obstack_memory_used@@Base+0x109b8>
  44b8dc:	b	44ae8c <argp_parse@@Base+0xb0ac>
  44b8e0:	ldrb	w1, [sp, #1001]
  44b8e4:	cbz	w1, 44aa08 <argp_parse@@Base+0xac28>
  44b8e8:	mov	w2, #0x5                   	// #5
  44b8ec:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b8f0:	add	x1, x1, #0xda0
  44b8f4:	bl	4049c0 <dcgettext@plt>
  44b8f8:	add	x1, sp, #0x2a8
  44b8fc:	mov	w22, #0x0                   	// #0
  44b900:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b904:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b908:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b90c:	add	x1, x1, #0xf20
  44b910:	mov	w2, #0x5                   	// #5
  44b914:	mov	x0, #0x0                   	// #0
  44b918:	bl	4049c0 <dcgettext@plt>
  44b91c:	mov	x1, x0
  44b920:	b	44b0d4 <argp_parse@@Base+0xb2f4>
  44b924:	ldrb	w0, [sp, #1001]
  44b928:	cbz	w0, 44aa08 <argp_parse@@Base+0xac28>
  44b92c:	mov	w2, #0x5                   	// #5
  44b930:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44b934:	mov	x0, #0x0                   	// #0
  44b938:	add	x1, x1, #0x138
  44b93c:	bl	4049c0 <dcgettext@plt>
  44b940:	mov	x22, x0
  44b944:	add	x2, sp, #0x1d8
  44b948:	add	x1, sp, #0x310
  44b94c:	add	x0, sp, #0xf0
  44b950:	bl	447970 <argp_parse@@Base+0x7b90>
  44b954:	mov	x1, x0
  44b958:	mov	x0, x22
  44b95c:	mov	w22, #0x0                   	// #0
  44b960:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b964:	b	44a8f0 <argp_parse@@Base+0xab10>
  44b968:	ldr	w0, [sp, #808]
  44b96c:	add	x1, sp, #0x1a0
  44b970:	bl	447738 <argp_parse@@Base+0x7958>
  44b974:	mov	x5, x0
  44b978:	mov	w1, #0x64                  	// #100
  44b97c:	sub	w1, w1, w22
  44b980:	add	x0, x27, w22, sxtw
  44b984:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b988:	sxtw	x1, w1
  44b98c:	add	x4, x4, #0x7d8
  44b990:	mov	x3, #0xffffffffffffffff    	// #-1
  44b994:	mov	w2, #0x1                   	// #1
  44b998:	bl	404290 <__snprintf_chk@plt>
  44b99c:	b	44b698 <argp_parse@@Base+0xb8b8>
  44b9a0:	mov	w0, #0xffffffff            	// #-1
  44b9a4:	adrp	x22, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b9a8:	add	x22, x22, #0x860
  44b9ac:	str	w0, [sp, #248]
  44b9b0:	b	44b880 <argp_parse@@Base+0xbaa0>
  44b9b4:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b9b8:	add	x1, x1, #0xeb8
  44b9bc:	mov	w2, #0x5                   	// #5
  44b9c0:	mov	x0, #0x0                   	// #0
  44b9c4:	bl	4049c0 <dcgettext@plt>
  44b9c8:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b9cc:	b	44b09c <argp_parse@@Base+0xb2bc>
  44b9d0:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44b9d4:	add	x1, x1, #0xe80
  44b9d8:	mov	w2, #0x5                   	// #5
  44b9dc:	mov	x0, #0x0                   	// #0
  44b9e0:	bl	4049c0 <dcgettext@plt>
  44b9e4:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44b9e8:	b	44b090 <argp_parse@@Base+0xb2b0>
  44b9ec:	ldr	w0, [sp, #808]
  44b9f0:	add	x1, sp, #0x1a0
  44b9f4:	bl	447738 <argp_parse@@Base+0x7958>
  44b9f8:	mov	x5, x0
  44b9fc:	mov	w1, #0x64                  	// #100
  44ba00:	sub	w1, w1, w22
  44ba04:	add	x0, x27, w22, sxtw
  44ba08:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44ba0c:	sxtw	x1, w1
  44ba10:	add	x4, x4, #0x7d8
  44ba14:	mov	x3, #0xffffffffffffffff    	// #-1
  44ba18:	mov	w2, #0x1                   	// #1
  44ba1c:	bl	404290 <__snprintf_chk@plt>
  44ba20:	b	44b520 <argp_parse@@Base+0xb740>
  44ba24:	mov	w2, #0x5                   	// #5
  44ba28:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44ba2c:	mov	x0, #0x0                   	// #0
  44ba30:	add	x1, x1, #0x328
  44ba34:	bl	4049c0 <dcgettext@plt>
  44ba38:	ldr	w4, [sp, #936]
  44ba3c:	ldr	x1, [sp, #912]
  44ba40:	ldr	x2, [sp, #920]
  44ba44:	ldr	x3, [sp, #928]
  44ba48:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ba4c:	mov	w2, #0x5                   	// #5
  44ba50:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44ba54:	mov	x0, #0x0                   	// #0
  44ba58:	add	x1, x1, #0x378
  44ba5c:	bl	4049c0 <dcgettext@plt>
  44ba60:	mov	x1, x22
  44ba64:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44ba68:	ldr	w0, [sp, #272]
  44ba6c:	cmn	w0, #0x1
  44ba70:	b.eq	44bab0 <argp_parse@@Base+0xbcd0>  // b.none
  44ba74:	add	x2, sp, #0x1a0
  44ba78:	mov	x1, x26
  44ba7c:	mov	x0, x20
  44ba80:	bl	461e08 <_obstack_memory_used@@Base+0x109f8>
  44ba84:	cbz	x0, 44bab0 <argp_parse@@Base+0xbcd0>
  44ba88:	ldr	w1, [sp, #272]
  44ba8c:	ldr	w0, [sp, #448]
  44ba90:	cmp	w1, w0
  44ba94:	b.eq	44bab0 <argp_parse@@Base+0xbcd0>  // b.none
  44ba98:	adrp	x1, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44ba9c:	add	x1, x1, #0x3a0
  44baa0:	mov	w2, #0x5                   	// #5
  44baa4:	mov	x0, #0x0                   	// #0
  44baa8:	bl	4049c0 <dcgettext@plt>
  44baac:	bl	4478b8 <argp_parse@@Base+0x7ad8>
  44bab0:	ldrb	w1, [sp, #1001]
  44bab4:	mov	w22, w1
  44bab8:	b	44a7d8 <argp_parse@@Base+0xa9f8>
  44babc:	ldr	w0, [sp, #808]
  44bac0:	add	x1, sp, #0x1a0
  44bac4:	str	x2, [sp, #184]
  44bac8:	bl	447738 <argp_parse@@Base+0x7958>
  44bacc:	mov	x5, x0
  44bad0:	ldr	x2, [sp, #184]
  44bad4:	mov	w1, #0x64                  	// #100
  44bad8:	add	x0, sp, #0x2a8
  44badc:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44bae0:	sub	w1, w1, w2
  44bae4:	add	x4, x4, #0x7d8
  44bae8:	add	x0, x0, w2, sxtw
  44baec:	mov	x3, #0xffffffffffffffff    	// #-1
  44baf0:	sxtw	x1, w1
  44baf4:	mov	w2, #0x1                   	// #1
  44baf8:	bl	404290 <__snprintf_chk@plt>
  44bafc:	b	44af58 <argp_parse@@Base+0xb178>
  44bb00:	mov	w0, #0xffffffff            	// #-1
  44bb04:	adrp	x22, 46f000 <_obstack_memory_used@@Base+0x1dbf0>
  44bb08:	add	x22, x22, #0x98
  44bb0c:	str	w0, [sp, #248]
  44bb10:	b	44b880 <argp_parse@@Base+0xbaa0>
  44bb14:	ldr	w0, [sp, #808]
  44bb18:	add	x1, sp, #0x1a0
  44bb1c:	bl	447738 <argp_parse@@Base+0x7958>
  44bb20:	mov	x5, x0
  44bb24:	mov	w1, #0x64                  	// #100
  44bb28:	sub	w1, w1, w23
  44bb2c:	add	x0, sp, #0x2a8
  44bb30:	adrp	x4, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  44bb34:	add	x0, x0, w23, sxtw
  44bb38:	sxtw	x1, w1
  44bb3c:	add	x4, x4, #0x7d8
  44bb40:	mov	x3, #0xffffffffffffffff    	// #-1
  44bb44:	mov	w2, #0x1                   	// #1
  44bb48:	bl	404290 <__snprintf_chk@plt>
  44bb4c:	b	44afac <argp_parse@@Base+0xb1cc>
  44bb50:	stp	x29, x30, [sp, #-64]!
  44bb54:	mov	x29, sp
  44bb58:	stp	x19, x20, [sp, #16]
  44bb5c:	mov	x20, x0
  44bb60:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  44bb64:	add	x0, x0, #0x4a0
  44bb68:	stp	x21, x22, [sp, #32]
  44bb6c:	mov	x21, x1
  44bb70:	mov	x22, x2
  44bb74:	str	x23, [sp, #48]
  44bb78:	bl	404af0 <getenv@plt>
  44bb7c:	mov	x23, x0
  44bb80:	bl	461d28 <_obstack_memory_used@@Base+0x10918>
  44bb84:	cbz	x0, 44bbcc <argp_parse@@Base+0xbdec>
  44bb88:	mov	x5, x23
  44bb8c:	mov	x2, x22
  44bb90:	mov	x1, x21
  44bb94:	mov	x4, x0
  44bb98:	mov	w3, #0x0                   	// #0
  44bb9c:	mov	x19, x0
  44bba0:	mov	x0, x20
  44bba4:	bl	44a178 <argp_parse@@Base+0xa398>
  44bba8:	and	w20, w0, #0xff
  44bbac:	mov	x0, x19
  44bbb0:	bl	461dc8 <_obstack_memory_used@@Base+0x109b8>
  44bbb4:	mov	w0, w20
  44bbb8:	ldp	x19, x20, [sp, #16]
  44bbbc:	ldp	x21, x22, [sp, #32]
  44bbc0:	ldr	x23, [sp, #48]
  44bbc4:	ldp	x29, x30, [sp], #64
  44bbc8:	ret
  44bbcc:	mov	w20, #0x0                   	// #0
  44bbd0:	mov	w0, w20
  44bbd4:	ldp	x19, x20, [sp, #16]
  44bbd8:	ldp	x21, x22, [sp, #32]
  44bbdc:	ldr	x23, [sp, #48]
  44bbe0:	ldp	x29, x30, [sp], #64
  44bbe4:	ret
  44bbe8:	stp	x29, x30, [sp, #-48]!
  44bbec:	mov	x29, sp
  44bbf0:	stp	x19, x20, [sp, #16]
  44bbf4:	cbz	x0, 44bccc <argp_parse@@Base+0xbeec>
  44bbf8:	mov	x19, x0
  44bbfc:	mov	w1, #0x2f                  	// #47
  44bc00:	bl	4045d0 <strrchr@plt>
  44bc04:	mov	x20, x0
  44bc08:	cbz	x0, 44bc6c <argp_parse@@Base+0xbe8c>
  44bc0c:	str	x21, [sp, #32]
  44bc10:	add	x21, x0, #0x1
  44bc14:	sub	x0, x21, x19
  44bc18:	cmp	x0, #0x6
  44bc1c:	b.le	44bc88 <argp_parse@@Base+0xbea8>
  44bc20:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44bc24:	sub	x0, x20, #0x6
  44bc28:	add	x1, x1, #0x728
  44bc2c:	mov	x2, #0x7                   	// #7
  44bc30:	bl	4043c0 <strncmp@plt>
  44bc34:	cbnz	w0, 44bc88 <argp_parse@@Base+0xbea8>
  44bc38:	ldrb	w0, [x20, #1]
  44bc3c:	cmp	w0, #0x6c
  44bc40:	b.ne	44bca8 <argp_parse@@Base+0xbec8>  // b.any
  44bc44:	ldrb	w0, [x21, #1]
  44bc48:	cmp	w0, #0x74
  44bc4c:	b.ne	44bca8 <argp_parse@@Base+0xbec8>  // b.any
  44bc50:	ldrb	w0, [x21, #2]
  44bc54:	cmp	w0, #0x2d
  44bc58:	b.ne	44bca8 <argp_parse@@Base+0xbec8>  // b.any
  44bc5c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bc60:	add	x19, x20, #0x4
  44bc64:	ldr	x21, [sp, #32]
  44bc68:	str	x19, [x0, #1208]
  44bc6c:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bc70:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bc74:	str	x19, [x1, #3664]
  44bc78:	str	x19, [x0, #1168]
  44bc7c:	ldp	x19, x20, [sp, #16]
  44bc80:	ldp	x29, x30, [sp], #48
  44bc84:	ret
  44bc88:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bc8c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bc90:	ldr	x21, [sp, #32]
  44bc94:	str	x19, [x1, #3664]
  44bc98:	str	x19, [x0, #1168]
  44bc9c:	ldp	x19, x20, [sp, #16]
  44bca0:	ldp	x29, x30, [sp], #48
  44bca4:	ret
  44bca8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bcac:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bcb0:	mov	x19, x21
  44bcb4:	str	x19, [x1, #3664]
  44bcb8:	str	x19, [x0, #1168]
  44bcbc:	ldp	x19, x20, [sp, #16]
  44bcc0:	ldr	x21, [sp, #32]
  44bcc4:	ldp	x29, x30, [sp], #48
  44bcc8:	ret
  44bccc:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44bcd0:	mov	x2, #0x37                  	// #55
  44bcd4:	mov	x1, #0x1                   	// #1
  44bcd8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44bcdc:	ldr	x3, [x3, #1176]
  44bce0:	add	x0, x0, #0x6f0
  44bce4:	str	x21, [sp, #32]
  44bce8:	bl	4048b0 <fwrite@plt>
  44bcec:	bl	404650 <abort@plt>
  44bcf0:	stp	x29, x30, [sp, #-48]!
  44bcf4:	mov	w2, #0x5                   	// #5
  44bcf8:	mov	x29, sp
  44bcfc:	stp	x19, x20, [sp, #16]
  44bd00:	mov	x20, x0
  44bd04:	str	x21, [sp, #32]
  44bd08:	mov	w21, w1
  44bd0c:	mov	x1, x0
  44bd10:	mov	x0, #0x0                   	// #0
  44bd14:	bl	4049c0 <dcgettext@plt>
  44bd18:	mov	x19, x0
  44bd1c:	cmp	x20, x0
  44bd20:	b.eq	44bd38 <argp_parse@@Base+0xbf58>  // b.none
  44bd24:	mov	x0, x19
  44bd28:	ldp	x19, x20, [sp, #16]
  44bd2c:	ldr	x21, [sp, #32]
  44bd30:	ldp	x29, x30, [sp], #48
  44bd34:	ret
  44bd38:	bl	4468a8 <argp_parse@@Base+0x6ac8>
  44bd3c:	ldrb	w1, [x0]
  44bd40:	and	w1, w1, #0xffffffdf
  44bd44:	cmp	w1, #0x55
  44bd48:	b.ne	44bdac <argp_parse@@Base+0xbfcc>  // b.any
  44bd4c:	ldrb	w1, [x0, #1]
  44bd50:	and	w1, w1, #0xffffffdf
  44bd54:	cmp	w1, #0x54
  44bd58:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bd5c:	ldrb	w1, [x0, #2]
  44bd60:	and	w1, w1, #0xffffffdf
  44bd64:	cmp	w1, #0x46
  44bd68:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bd6c:	ldrb	w1, [x0, #3]
  44bd70:	cmp	w1, #0x2d
  44bd74:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bd78:	ldrb	w1, [x0, #4]
  44bd7c:	cmp	w1, #0x38
  44bd80:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bd84:	ldrb	w0, [x0, #5]
  44bd88:	cbnz	w0, 44be28 <argp_parse@@Base+0xc048>
  44bd8c:	ldrb	w1, [x19]
  44bd90:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44bd94:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44bd98:	add	x0, x0, #0x738
  44bd9c:	cmp	w1, #0x60
  44bda0:	add	x19, x19, #0x750
  44bda4:	csel	x19, x19, x0, eq  // eq = none
  44bda8:	b	44bd24 <argp_parse@@Base+0xbf44>
  44bdac:	cmp	w1, #0x47
  44bdb0:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bdb4:	ldrb	w1, [x0, #1]
  44bdb8:	and	w1, w1, #0xffffffdf
  44bdbc:	cmp	w1, #0x42
  44bdc0:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bdc4:	ldrb	w1, [x0, #2]
  44bdc8:	cmp	w1, #0x31
  44bdcc:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bdd0:	ldrb	w1, [x0, #3]
  44bdd4:	cmp	w1, #0x38
  44bdd8:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bddc:	ldrb	w1, [x0, #4]
  44bde0:	cmp	w1, #0x30
  44bde4:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bde8:	ldrb	w1, [x0, #5]
  44bdec:	cmp	w1, #0x33
  44bdf0:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44bdf4:	ldrb	w1, [x0, #6]
  44bdf8:	cmp	w1, #0x30
  44bdfc:	b.ne	44be28 <argp_parse@@Base+0xc048>  // b.any
  44be00:	ldrb	w0, [x0, #7]
  44be04:	cbnz	w0, 44be28 <argp_parse@@Base+0xc048>
  44be08:	ldrb	w1, [x19]
  44be0c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44be10:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44be14:	add	x0, x0, #0x740
  44be18:	cmp	w1, #0x60
  44be1c:	add	x19, x19, #0x748
  44be20:	csel	x19, x19, x0, eq  // eq = none
  44be24:	b	44bd24 <argp_parse@@Base+0xbf44>
  44be28:	cmp	w21, #0x9
  44be2c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44be30:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44be34:	add	x0, x0, #0x758
  44be38:	add	x19, x19, #0x730
  44be3c:	csel	x19, x19, x0, eq  // eq = none
  44be40:	mov	x0, x19
  44be44:	ldp	x19, x20, [sp, #16]
  44be48:	ldr	x21, [sp, #32]
  44be4c:	ldp	x29, x30, [sp], #48
  44be50:	ret
  44be54:	nop
  44be58:	sub	sp, sp, #0x100
  44be5c:	stp	x29, x30, [sp, #16]
  44be60:	add	x29, sp, #0x10
  44be64:	stp	x19, x20, [sp, #32]
  44be68:	mov	w19, w5
  44be6c:	and	w20, w5, #0x2
  44be70:	stp	x21, x22, [sp, #48]
  44be74:	mov	w21, w4
  44be78:	stp	x23, x24, [sp, #64]
  44be7c:	mov	x23, x1
  44be80:	mov	x24, x3
  44be84:	stp	x25, x26, [sp, #80]
  44be88:	mov	x26, x6
  44be8c:	stp	x27, x28, [sp, #96]
  44be90:	mov	x28, x0
  44be94:	mov	x27, x2
  44be98:	str	w4, [sp, #116]
  44be9c:	str	w5, [sp, #184]
  44bea0:	str	x7, [sp, #200]
  44bea4:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  44bea8:	mov	x1, x19
  44beac:	str	x0, [sp, #176]
  44beb0:	cmp	w21, #0x4
  44beb4:	ubfx	x10, x1, #1, #1
  44beb8:	b.eq	44cb48 <argp_parse@@Base+0xcd68>  // b.none
  44bebc:	ldr	w0, [sp, #116]
  44bec0:	b.ls	44c250 <argp_parse@@Base+0xc470>  // b.plast
  44bec4:	cmp	w0, #0x7
  44bec8:	b.eq	44cbb4 <argp_parse@@Base+0xcdd4>  // b.none
  44becc:	b.ls	44c85c <argp_parse@@Base+0xca7c>  // b.plast
  44bed0:	ldr	w0, [sp, #116]
  44bed4:	sub	w0, w0, #0x8
  44bed8:	cmp	w0, #0x2
  44bedc:	b.hi	44cff4 <argp_parse@@Base+0xd214>  // b.pmore
  44bee0:	ldr	w19, [sp, #116]
  44bee4:	cmp	w19, #0xa
  44bee8:	b.ne	44ca40 <argp_parse@@Base+0xcc60>  // b.any
  44beec:	mov	x19, #0x0                   	// #0
  44bef0:	cbz	w20, 44ce34 <argp_parse@@Base+0xd054>
  44bef4:	ldr	x0, [sp, #256]
  44bef8:	str	w10, [sp, #124]
  44befc:	mov	w25, #0x0                   	// #0
  44bf00:	bl	403ff0 <strlen@plt>
  44bf04:	cmp	x0, #0x0
  44bf08:	ldr	w10, [sp, #124]
  44bf0c:	mov	x12, x0
  44bf10:	mov	w11, #0x1                   	// #1
  44bf14:	mov	w5, w11
  44bf18:	csel	w0, w10, wzr, ne  // ne = any
  44bf1c:	str	w0, [sp, #208]
  44bf20:	ldr	w0, [sp, #184]
  44bf24:	mov	w7, #0x0                   	// #0
  44bf28:	stp	w11, wzr, [sp, #120]
  44bf2c:	and	w1, w0, w11
  44bf30:	and	w0, w0, #0x4
  44bf34:	stp	w1, w0, [sp, #212]
  44bf38:	ldr	x0, [sp, #256]
  44bf3c:	str	wzr, [sp, #144]
  44bf40:	str	x0, [sp, #168]
  44bf44:	str	wzr, [sp, #188]
  44bf48:	str	xzr, [sp, #192]
  44bf4c:	nop
  44bf50:	mov	x4, x26
  44bf54:	mov	w26, w5
  44bf58:	mov	x20, #0x0                   	// #0
  44bf5c:	nop
  44bf60:	cmp	x24, x20
  44bf64:	cset	w21, ne  // ne = any
  44bf68:	cmn	x24, #0x1
  44bf6c:	b.eq	44c2c0 <argp_parse@@Base+0xc4e0>  // b.none
  44bf70:	cbz	w21, 44c2d0 <argp_parse@@Base+0xc4f0>
  44bf74:	add	x3, x27, x20
  44bf78:	cbz	w11, 44c584 <argp_parse@@Base+0xc7a4>
  44bf7c:	cbz	x12, 44c730 <argp_parse@@Base+0xc950>
  44bf80:	cmp	x12, #0x1
  44bf84:	add	x22, x20, x12
  44bf88:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  44bf8c:	b.ne	44bfbc <argp_parse@@Base+0xc1dc>  // b.any
  44bf90:	mov	x0, x27
  44bf94:	stp	x3, x12, [sp, #128]
  44bf98:	stp	w10, w7, [sp, #148]
  44bf9c:	str	w11, [sp, #156]
  44bfa0:	str	x4, [sp, #160]
  44bfa4:	bl	403ff0 <strlen@plt>
  44bfa8:	ldp	x3, x12, [sp, #128]
  44bfac:	mov	x24, x0
  44bfb0:	ldp	w10, w7, [sp, #148]
  44bfb4:	ldr	w11, [sp, #156]
  44bfb8:	ldr	x4, [sp, #160]
  44bfbc:	cmp	x22, x24
  44bfc0:	b.hi	44c730 <argp_parse@@Base+0xc950>  // b.pmore
  44bfc4:	ldr	x1, [sp, #168]
  44bfc8:	mov	x2, x12
  44bfcc:	mov	x0, x3
  44bfd0:	stp	x3, x12, [sp, #128]
  44bfd4:	stp	w10, w7, [sp, #148]
  44bfd8:	str	w11, [sp, #156]
  44bfdc:	str	x4, [sp, #160]
  44bfe0:	bl	4046d0 <memcmp@plt>
  44bfe4:	ldp	w10, w7, [sp, #148]
  44bfe8:	ldr	w11, [sp, #156]
  44bfec:	ldp	x3, x12, [sp, #128]
  44bff0:	ldr	x4, [sp, #160]
  44bff4:	cbnz	w0, 44c730 <argp_parse@@Base+0xc950>
  44bff8:	cbnz	w10, 44c514 <argp_parse@@Base+0xc734>
  44bffc:	ldrb	w22, [x3]
  44c000:	cmp	w22, #0x7e
  44c004:	b.ls	44c36c <argp_parse@@Base+0xc58c>  // b.plast
  44c008:	ldr	x0, [sp, #176]
  44c00c:	mov	w5, w11
  44c010:	cmp	x0, #0x1
  44c014:	b.eq	44c5a0 <argp_parse@@Base+0xc7c0>  // b.none
  44c018:	str	xzr, [sp, #248]
  44c01c:	cmn	x24, #0x1
  44c020:	b.ne	44c058 <argp_parse@@Base+0xc278>  // b.any
  44c024:	mov	x0, x27
  44c028:	str	w5, [sp, #128]
  44c02c:	str	x12, [sp, #136]
  44c030:	stp	w10, w7, [sp, #148]
  44c034:	str	w11, [sp, #156]
  44c038:	str	x4, [sp, #160]
  44c03c:	bl	403ff0 <strlen@plt>
  44c040:	ldr	w5, [sp, #128]
  44c044:	mov	x24, x0
  44c048:	ldp	w10, w7, [sp, #148]
  44c04c:	ldr	w11, [sp, #156]
  44c050:	ldr	x12, [sp, #136]
  44c054:	ldr	x4, [sp, #160]
  44c058:	str	w22, [sp, #220]
  44c05c:	ldr	w22, [sp, #144]
  44c060:	mov	x8, #0x0                   	// #0
  44c064:	stp	x19, x4, [sp, #224]
  44c068:	mov	w19, w21
  44c06c:	mov	x21, x8
  44c070:	str	x12, [sp, #128]
  44c074:	str	w10, [sp, #136]
  44c078:	stp	w25, w5, [sp, #148]
  44c07c:	stp	w7, w11, [sp, #156]
  44c080:	add	x25, x20, x21
  44c084:	add	x3, sp, #0xf8
  44c088:	sub	x2, x24, x25
  44c08c:	add	x1, x27, x25
  44c090:	add	x0, sp, #0xf4
  44c094:	bl	450f30 <argp_parse@@Base+0x11150>
  44c098:	mov	x13, #0x2b                  	// #43
  44c09c:	mov	x3, x0
  44c0a0:	movk	x13, #0x2, lsl #32
  44c0a4:	cbz	x0, 44c0e0 <argp_parse@@Base+0xc300>
  44c0a8:	cmn	x0, #0x1
  44c0ac:	b.eq	44ce78 <argp_parse@@Base+0xd098>  // b.none
  44c0b0:	cmn	x0, #0x2
  44c0b4:	mov	x6, #0x1                   	// #1
  44c0b8:	b.eq	44ceb0 <argp_parse@@Base+0xd0d0>  // b.none
  44c0bc:	cbnz	w22, 44c9ac <argp_parse@@Base+0xcbcc>
  44c0c0:	ldr	w0, [sp, #244]
  44c0c4:	add	x21, x21, x3
  44c0c8:	bl	404a70 <iswprint@plt>
  44c0cc:	cmp	w0, #0x0
  44c0d0:	csel	w19, w19, wzr, ne  // ne = any
  44c0d4:	add	x0, sp, #0xf8
  44c0d8:	bl	404670 <mbsinit@plt>
  44c0dc:	cbz	w0, 44c080 <argp_parse@@Base+0xc2a0>
  44c0e0:	eor	w1, w19, #0x1
  44c0e4:	ldr	w0, [sp, #120]
  44c0e8:	mov	x8, x21
  44c0ec:	mov	w21, w19
  44c0f0:	ldp	x19, x4, [sp, #224]
  44c0f4:	and	w1, w0, w1
  44c0f8:	ldr	w10, [sp, #136]
  44c0fc:	and	w1, w1, #0xff
  44c100:	ldp	w25, w5, [sp, #148]
  44c104:	ldp	w7, w11, [sp, #156]
  44c108:	ldr	w22, [sp, #220]
  44c10c:	ldr	x12, [sp, #128]
  44c110:	cmp	x8, #0x1
  44c114:	b.hi	44c128 <argp_parse@@Base+0xc348>  // b.pmore
  44c118:	cbz	w1, 44c614 <argp_parse@@Base+0xc834>
  44c11c:	nop
  44c120:	ldr	w1, [sp, #120]
  44c124:	mov	w21, #0x0                   	// #0
  44c128:	add	x8, x8, x20
  44c12c:	mov	w9, #0x0                   	// #0
  44c130:	mov	w2, #0x27                  	// #39
  44c134:	mov	w3, #0x5c                  	// #92
  44c138:	mov	w6, #0x24                  	// #36
  44c13c:	cbz	w1, 44c1f4 <argp_parse@@Base+0xc414>
  44c140:	cbnz	w10, 44ca2c <argp_parse@@Base+0xcc4c>
  44c144:	eor	w0, w25, #0x1
  44c148:	ands	w0, w7, w0
  44c14c:	b.eq	44c184 <argp_parse@@Base+0xc3a4>  // b.none
  44c150:	cmp	x23, x19
  44c154:	b.ls	44c15c <argp_parse@@Base+0xc37c>  // b.plast
  44c158:	strb	w2, [x28, x19]
  44c15c:	add	x9, x19, #0x1
  44c160:	cmp	x23, x9
  44c164:	b.ls	44c16c <argp_parse@@Base+0xc38c>  // b.plast
  44c168:	strb	w6, [x28, x9]
  44c16c:	add	x9, x19, #0x2
  44c170:	cmp	x23, x9
  44c174:	b.ls	44c17c <argp_parse@@Base+0xc39c>  // b.plast
  44c178:	strb	w2, [x28, x9]
  44c17c:	add	x19, x19, #0x3
  44c180:	mov	w25, w0
  44c184:	cmp	x23, x19
  44c188:	b.ls	44c190 <argp_parse@@Base+0xc3b0>  // b.plast
  44c18c:	strb	w3, [x28, x19]
  44c190:	add	x0, x19, #0x1
  44c194:	cmp	x23, x0
  44c198:	b.ls	44c1a8 <argp_parse@@Base+0xc3c8>  // b.plast
  44c19c:	lsr	w9, w22, #6
  44c1a0:	add	w9, w9, #0x30
  44c1a4:	strb	w9, [x28, x0]
  44c1a8:	add	x0, x19, #0x2
  44c1ac:	cmp	x23, x0
  44c1b0:	b.ls	44c1c0 <argp_parse@@Base+0xc3e0>  // b.plast
  44c1b4:	ubfx	x9, x22, #3, #3
  44c1b8:	add	w9, w9, #0x30
  44c1bc:	strb	w9, [x28, x0]
  44c1c0:	and	w22, w22, #0x7
  44c1c4:	add	x20, x20, #0x1
  44c1c8:	add	w22, w22, #0x30
  44c1cc:	cmp	x8, x20
  44c1d0:	add	x19, x19, #0x3
  44c1d4:	b.ls	44c414 <argp_parse@@Base+0xc634>  // b.plast
  44c1d8:	mov	w9, w1
  44c1dc:	cmp	x23, x19
  44c1e0:	b.ls	44c1e8 <argp_parse@@Base+0xc408>  // b.plast
  44c1e4:	strb	w22, [x28, x19]
  44c1e8:	ldrb	w22, [x27, x20]
  44c1ec:	add	x19, x19, #0x1
  44c1f0:	cbnz	w1, 44c140 <argp_parse@@Base+0xc360>
  44c1f4:	eor	w0, w9, #0x1
  44c1f8:	and	w0, w25, w0
  44c1fc:	and	w0, w0, #0xff
  44c200:	cbz	w5, 44c214 <argp_parse@@Base+0xc434>
  44c204:	cmp	x23, x19
  44c208:	b.ls	44c210 <argp_parse@@Base+0xc430>  // b.plast
  44c20c:	strb	w3, [x28, x19]
  44c210:	add	x19, x19, #0x1
  44c214:	add	x20, x20, #0x1
  44c218:	cmp	x20, x8
  44c21c:	b.cs	44c4b0 <argp_parse@@Base+0xc6d0>  // b.hs, b.nlast
  44c220:	cbz	w0, 44cbfc <argp_parse@@Base+0xce1c>
  44c224:	cmp	x23, x19
  44c228:	b.ls	44c230 <argp_parse@@Base+0xc450>  // b.plast
  44c22c:	strb	w2, [x28, x19]
  44c230:	add	x0, x19, #0x1
  44c234:	cmp	x23, x0
  44c238:	b.ls	44c240 <argp_parse@@Base+0xc460>  // b.plast
  44c23c:	strb	w2, [x28, x0]
  44c240:	add	x19, x19, #0x2
  44c244:	mov	w5, #0x0                   	// #0
  44c248:	mov	w25, #0x0                   	// #0
  44c24c:	b	44c1dc <argp_parse@@Base+0xc3fc>
  44c250:	cmp	w21, #0x1
  44c254:	b.eq	44cc50 <argp_parse@@Base+0xce70>  // b.none
  44c258:	b.ls	44c810 <argp_parse@@Base+0xca30>  // b.plast
  44c25c:	cmp	w0, #0x2
  44c260:	b.eq	44ccc8 <argp_parse@@Base+0xcee8>  // b.none
  44c264:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c268:	add	x0, x0, #0x758
  44c26c:	str	x0, [sp, #168]
  44c270:	mov	w1, #0x1                   	// #1
  44c274:	ldr	w0, [sp, #184]
  44c278:	mov	w7, w1
  44c27c:	mov	w5, w1
  44c280:	mov	w10, w1
  44c284:	stp	w1, w1, [sp, #120]
  44c288:	mov	w11, #0x0                   	// #0
  44c28c:	str	w1, [sp, #144]
  44c290:	mov	w25, #0x0                   	// #0
  44c294:	str	w1, [sp, #208]
  44c298:	and	w1, w0, w1
  44c29c:	and	w0, w0, #0x4
  44c2a0:	mov	x12, #0x1                   	// #1
  44c2a4:	mov	x19, #0x0                   	// #0
  44c2a8:	str	wzr, [sp, #188]
  44c2ac:	str	xzr, [sp, #192]
  44c2b0:	stp	w1, w0, [sp, #212]
  44c2b4:	mov	w0, #0x2                   	// #2
  44c2b8:	str	w0, [sp, #116]
  44c2bc:	b	44bf50 <argp_parse@@Base+0xc170>
  44c2c0:	ldrb	w0, [x27, x20]
  44c2c4:	cmp	w0, #0x0
  44c2c8:	cset	w21, ne  // ne = any
  44c2cc:	cbnz	w21, 44bf74 <argp_parse@@Base+0xc194>
  44c2d0:	ldr	w0, [sp, #144]
  44c2d4:	cmp	x19, #0x0
  44c2d8:	mov	w5, w26
  44c2dc:	mov	x26, x4
  44c2e0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  44c2e4:	b.ne	44c644 <argp_parse@@Base+0xc864>  // b.any
  44c2e8:	eor	w10, w10, #0x1
  44c2ec:	ands	w7, w10, w7
  44c2f0:	b.eq	44cf00 <argp_parse@@Base+0xd120>  // b.none
  44c2f4:	ldr	w0, [sp, #188]
  44c2f8:	cbz	w0, 44cf04 <argp_parse@@Base+0xd124>
  44c2fc:	cbnz	w5, 44cf60 <argp_parse@@Base+0xd180>
  44c300:	ldr	x2, [sp, #192]
  44c304:	cmp	x23, #0x0
  44c308:	cset	w0, eq  // eq = none
  44c30c:	cmp	x2, #0x0
  44c310:	mov	x1, x2
  44c314:	csel	w0, w0, wzr, ne  // ne = any
  44c318:	cbz	w0, 44cf58 <argp_parse@@Base+0xd178>
  44c31c:	str	w0, [sp, #188]
  44c320:	mov	w0, #0x27                  	// #39
  44c324:	ldr	x23, [sp, #192]
  44c328:	str	x1, [sp, #192]
  44c32c:	mov	w1, #0x1                   	// #1
  44c330:	mov	x12, #0x1                   	// #1
  44c334:	mov	w7, w1
  44c338:	mov	x19, x12
  44c33c:	mov	w11, #0x0                   	// #0
  44c340:	mov	w10, #0x0                   	// #0
  44c344:	strb	w0, [x28]
  44c348:	mov	w0, #0x2                   	// #2
  44c34c:	str	w0, [sp, #116]
  44c350:	str	w1, [sp, #124]
  44c354:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c358:	add	x1, x1, #0x758
  44c35c:	str	wzr, [sp, #144]
  44c360:	str	x1, [sp, #168]
  44c364:	str	wzr, [sp, #208]
  44c368:	b	44bf50 <argp_parse@@Base+0xc170>
  44c36c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c370:	add	x0, x0, #0x7d0
  44c374:	ldrh	w0, [x0, w22, uxtw #1]
  44c378:	adr	x1, 44c384 <argp_parse@@Base+0xc5a4>
  44c37c:	add	x0, x1, w0, sxth #2
  44c380:	br	x0
  44c384:	ldr	w0, [sp, #124]
  44c388:	cbnz	w0, 44cea0 <argp_parse@@Base+0xd0c0>
  44c38c:	mov	w0, w25
  44c390:	mov	w21, w11
  44c394:	mov	w5, w11
  44c398:	cbz	x4, 44c4a8 <argp_parse@@Base+0xc6c8>
  44c39c:	ubfx	x1, x22, #5, #8
  44c3a0:	ldr	w1, [x4, x1, lsl #2]
  44c3a4:	lsr	w1, w1, w22
  44c3a8:	tbz	w1, #0, 44c4a8 <argp_parse@@Base+0xc6c8>
  44c3ac:	cbnz	w10, 44c4f4 <argp_parse@@Base+0xc714>
  44c3b0:	eor	w1, w25, #0x1
  44c3b4:	ands	w1, w7, w1
  44c3b8:	b.eq	44c3fc <argp_parse@@Base+0xc61c>  // b.none
  44c3bc:	cmp	x23, x19
  44c3c0:	b.ls	44c3cc <argp_parse@@Base+0xc5ec>  // b.plast
  44c3c4:	mov	w0, #0x27                  	// #39
  44c3c8:	strb	w0, [x28, x19]
  44c3cc:	add	x0, x19, #0x1
  44c3d0:	cmp	x23, x0
  44c3d4:	b.ls	44c3e0 <argp_parse@@Base+0xc600>  // b.plast
  44c3d8:	mov	w2, #0x24                  	// #36
  44c3dc:	strb	w2, [x28, x0]
  44c3e0:	add	x0, x19, #0x2
  44c3e4:	cmp	x23, x0
  44c3e8:	b.ls	44c3f4 <argp_parse@@Base+0xc614>  // b.plast
  44c3ec:	mov	w2, #0x27                  	// #39
  44c3f0:	strb	w2, [x28, x0]
  44c3f4:	add	x19, x19, #0x3
  44c3f8:	mov	w25, w1
  44c3fc:	cmp	x23, x19
  44c400:	b.ls	44c40c <argp_parse@@Base+0xc62c>  // b.plast
  44c404:	mov	w0, #0x5c                  	// #92
  44c408:	strb	w0, [x28, x19]
  44c40c:	add	x19, x19, #0x1
  44c410:	add	x20, x20, #0x1
  44c414:	cmp	x19, x23
  44c418:	b.cs	44c420 <argp_parse@@Base+0xc640>  // b.hs, b.nlast
  44c41c:	strb	w22, [x28, x19]
  44c420:	cmp	w21, #0x0
  44c424:	add	x19, x19, #0x1
  44c428:	csel	w26, w26, wzr, ne  // ne = any
  44c42c:	b	44bf60 <argp_parse@@Base+0xc180>
  44c430:	cbnz	w10, 44c64c <argp_parse@@Base+0xc86c>
  44c434:	mov	w5, #0x0                   	// #0
  44c438:	ldr	x1, [sp, #192]
  44c43c:	cmp	x23, #0x0
  44c440:	mov	x0, #0x0                   	// #0
  44c444:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  44c448:	b.eq	44c48c <argp_parse@@Base+0xc6ac>  // b.none
  44c44c:	cmp	x23, x19
  44c450:	b.ls	44c45c <argp_parse@@Base+0xc67c>  // b.plast
  44c454:	mov	w0, #0x27                  	// #39
  44c458:	strb	w0, [x28, x19]
  44c45c:	add	x0, x19, #0x1
  44c460:	cmp	x23, x0
  44c464:	b.ls	44c470 <argp_parse@@Base+0xc690>  // b.plast
  44c468:	mov	w1, #0x5c                  	// #92
  44c46c:	strb	w1, [x28, x0]
  44c470:	add	x1, x19, #0x2
  44c474:	mov	x0, x23
  44c478:	cmp	x23, x1
  44c47c:	b.ls	44cf90 <argp_parse@@Base+0xd1b0>  // b.plast
  44c480:	ldr	x23, [sp, #192]
  44c484:	mov	w2, #0x27                  	// #39
  44c488:	strb	w2, [x28, x1]
  44c48c:	add	x19, x19, #0x3
  44c490:	mov	w22, #0x27                  	// #39
  44c494:	mov	w25, #0x0                   	// #0
  44c498:	str	w21, [sp, #188]
  44c49c:	str	x23, [sp, #192]
  44c4a0:	mov	x23, x0
  44c4a4:	mov	w0, #0x0                   	// #0
  44c4a8:	cbnz	w5, 44c3ac <argp_parse@@Base+0xc5cc>
  44c4ac:	add	x20, x20, #0x1
  44c4b0:	cbz	w0, 44c414 <argp_parse@@Base+0xc634>
  44c4b4:	cmp	x23, x19
  44c4b8:	b.ls	44c4c4 <argp_parse@@Base+0xc6e4>  // b.plast
  44c4bc:	mov	w0, #0x27                  	// #39
  44c4c0:	strb	w0, [x28, x19]
  44c4c4:	add	x0, x19, #0x1
  44c4c8:	cmp	x23, x0
  44c4cc:	b.ls	44c4d8 <argp_parse@@Base+0xc6f8>  // b.plast
  44c4d0:	mov	w1, #0x27                  	// #39
  44c4d4:	strb	w1, [x28, x0]
  44c4d8:	add	x19, x19, #0x2
  44c4dc:	mov	w25, #0x0                   	// #0
  44c4e0:	b	44c414 <argp_parse@@Base+0xc634>
  44c4e4:	mov	w22, #0x66                  	// #102
  44c4e8:	mov	w21, #0x0                   	// #0
  44c4ec:	nop
  44c4f0:	cbz	w10, 44c3b0 <argp_parse@@Base+0xc5d0>
  44c4f4:	ldr	w0, [sp, #120]
  44c4f8:	and	w0, w0, w7
  44c4fc:	str	w0, [sp, #120]
  44c500:	ldp	w1, w0, [sp, #116]
  44c504:	cmp	w0, #0x0
  44c508:	mov	w0, #0x4                   	// #4
  44c50c:	csel	w0, w1, w0, eq  // eq = none
  44c510:	str	w0, [sp, #116]
  44c514:	ldr	w4, [sp, #116]
  44c518:	mov	x3, x24
  44c51c:	ldr	x7, [sp, #200]
  44c520:	mov	x2, x27
  44c524:	ldr	x0, [sp, #256]
  44c528:	str	x0, [sp]
  44c52c:	ldr	w0, [sp, #184]
  44c530:	mov	x1, x23
  44c534:	mov	x6, #0x0                   	// #0
  44c538:	and	w5, w0, #0xfffffffd
  44c53c:	mov	x0, x28
  44c540:	bl	44be58 <argp_parse@@Base+0xc078>
  44c544:	mov	x19, x0
  44c548:	mov	x0, x19
  44c54c:	ldp	x29, x30, [sp, #16]
  44c550:	ldp	x19, x20, [sp, #32]
  44c554:	ldp	x21, x22, [sp, #48]
  44c558:	ldp	x23, x24, [sp, #64]
  44c55c:	ldp	x25, x26, [sp, #80]
  44c560:	ldp	x27, x28, [sp, #96]
  44c564:	add	sp, sp, #0x100
  44c568:	ret
  44c56c:	mov	w22, #0x62                  	// #98
  44c570:	mov	w21, #0x0                   	// #0
  44c574:	b	44c4f0 <argp_parse@@Base+0xc710>
  44c578:	mov	w22, #0x61                  	// #97
  44c57c:	mov	w21, #0x0                   	// #0
  44c580:	b	44c4f0 <argp_parse@@Base+0xc710>
  44c584:	ldrb	w22, [x27, x20]
  44c588:	cmp	w22, #0x7e
  44c58c:	b.ls	44c5f4 <argp_parse@@Base+0xc814>  // b.plast
  44c590:	ldr	x0, [sp, #176]
  44c594:	mov	w5, #0x0                   	// #0
  44c598:	cmp	x0, #0x1
  44c59c:	b.ne	44c018 <argp_parse@@Base+0xc238>  // b.any
  44c5a0:	str	w5, [sp, #128]
  44c5a4:	str	x12, [sp, #136]
  44c5a8:	stp	w10, w7, [sp, #148]
  44c5ac:	str	w11, [sp, #156]
  44c5b0:	str	x4, [sp, #160]
  44c5b4:	bl	404740 <__ctype_b_loc@plt>
  44c5b8:	ldr	x0, [x0]
  44c5bc:	ldr	w5, [sp, #128]
  44c5c0:	ldp	w10, w7, [sp, #148]
  44c5c4:	ldrh	w21, [x0, w22, uxtw #1]
  44c5c8:	ldr	w11, [sp, #156]
  44c5cc:	ands	w0, w21, #0x4000
  44c5d0:	ldr	w0, [sp, #120]
  44c5d4:	cset	w1, eq  // eq = none
  44c5d8:	ubfx	x21, x21, #14, #1
  44c5dc:	and	w1, w0, w1
  44c5e0:	ldr	x12, [sp, #136]
  44c5e4:	ldr	x4, [sp, #160]
  44c5e8:	ldr	x8, [sp, #176]
  44c5ec:	cbz	w1, 44c614 <argp_parse@@Base+0xc834>
  44c5f0:	b	44c120 <argp_parse@@Base+0xc340>
  44c5f4:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c5f8:	add	x0, x0, #0x8d0
  44c5fc:	ldrh	w0, [x0, w22, uxtw #1]
  44c600:	adr	x1, 44c60c <argp_parse@@Base+0xc82c>
  44c604:	add	x0, x1, w0, sxth #2
  44c608:	br	x0
  44c60c:	mov	w21, w11
  44c610:	mov	w5, #0x0                   	// #0
  44c614:	ldr	w1, [sp, #124]
  44c618:	mov	w0, w25
  44c61c:	cbz	w1, 44c398 <argp_parse@@Base+0xc5b8>
  44c620:	mov	w0, w25
  44c624:	cbnz	w10, 44c398 <argp_parse@@Base+0xc5b8>
  44c628:	mov	w0, w25
  44c62c:	cbnz	w5, 44c3ac <argp_parse@@Base+0xc5cc>
  44c630:	b	44c4ac <argp_parse@@Base+0xc6cc>
  44c634:	mov	w5, #0x0                   	// #0
  44c638:	mov	w21, #0x0                   	// #0
  44c63c:	ldr	w0, [sp, #144]
  44c640:	cbz	w0, 44c614 <argp_parse@@Base+0xc834>
  44c644:	mov	w0, #0x2                   	// #2
  44c648:	str	w0, [sp, #116]
  44c64c:	ldp	w1, w0, [sp, #116]
  44c650:	cmp	w0, #0x0
  44c654:	mov	w0, #0x4                   	// #4
  44c658:	csel	w0, w1, w0, eq  // eq = none
  44c65c:	str	w0, [sp, #116]
  44c660:	b	44c514 <argp_parse@@Base+0xc734>
  44c664:	ldr	w0, [sp, #116]
  44c668:	cmp	w0, #0x2
  44c66c:	b.eq	44c990 <argp_parse@@Base+0xcbb0>  // b.none
  44c670:	mov	w5, #0x0                   	// #0
  44c674:	ldr	w0, [sp, #116]
  44c678:	cmp	w0, #0x5
  44c67c:	b.ne	44c6a0 <argp_parse@@Base+0xc8c0>  // b.any
  44c680:	ldr	w0, [sp, #216]
  44c684:	cbz	w0, 44c6a0 <argp_parse@@Base+0xc8c0>
  44c688:	add	x6, x20, #0x2
  44c68c:	cmp	x6, x24
  44c690:	b.cs	44c6a0 <argp_parse@@Base+0xc8c0>  // b.hs, b.nlast
  44c694:	ldrb	w22, [x3, #1]
  44c698:	cmp	w22, #0x3f
  44c69c:	b.eq	44cce4 <argp_parse@@Base+0xcf04>  // b.none
  44c6a0:	mov	w21, #0x0                   	// #0
  44c6a4:	mov	w22, #0x3f                  	// #63
  44c6a8:	b	44c614 <argp_parse@@Base+0xc834>
  44c6ac:	ldr	w0, [sp, #116]
  44c6b0:	cmp	w0, #0x2
  44c6b4:	b.eq	44c430 <argp_parse@@Base+0xc650>  // b.none
  44c6b8:	mov	w5, #0x0                   	// #0
  44c6bc:	mov	w22, #0x27                  	// #39
  44c6c0:	str	w21, [sp, #188]
  44c6c4:	b	44c614 <argp_parse@@Base+0xc834>
  44c6c8:	mov	w5, #0x0                   	// #0
  44c6cc:	mov	w0, #0x74                  	// #116
  44c6d0:	ldr	w1, [sp, #144]
  44c6d4:	cbnz	w1, 44c644 <argp_parse@@Base+0xc864>
  44c6d8:	ldr	w1, [sp, #120]
  44c6dc:	cbnz	w1, 44c6f0 <argp_parse@@Base+0xc910>
  44c6e0:	mov	w0, w25
  44c6e4:	mov	w21, #0x0                   	// #0
  44c6e8:	cbnz	w10, 44c398 <argp_parse@@Base+0xc5b8>
  44c6ec:	b	44c628 <argp_parse@@Base+0xc848>
  44c6f0:	mov	w22, w0
  44c6f4:	mov	w21, #0x0                   	// #0
  44c6f8:	b	44c4f0 <argp_parse@@Base+0xc710>
  44c6fc:	mov	w5, #0x0                   	// #0
  44c700:	mov	w0, #0x66                  	// #102
  44c704:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44c708:	mov	w5, #0x0                   	// #0
  44c70c:	mov	w0, #0x62                  	// #98
  44c710:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44c714:	ldr	w0, [sp, #120]
  44c718:	cbnz	w0, 44c760 <argp_parse@@Base+0xc980>
  44c71c:	ldr	w0, [sp, #212]
  44c720:	mov	w5, #0x0                   	// #0
  44c724:	cbz	w0, 44c6e0 <argp_parse@@Base+0xc900>
  44c728:	add	x20, x20, #0x1
  44c72c:	b	44bf60 <argp_parse@@Base+0xc180>
  44c730:	ldrb	w22, [x3]
  44c734:	cmp	w22, #0x7e
  44c738:	b.hi	44c590 <argp_parse@@Base+0xc7b0>  // b.pmore
  44c73c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c740:	add	x0, x0, #0x9d0
  44c744:	ldrh	w0, [x0, w22, uxtw #1]
  44c748:	adr	x1, 44c754 <argp_parse@@Base+0xc974>
  44c74c:	add	x0, x1, w0, sxth #2
  44c750:	br	x0
  44c754:	mov	w5, #0x0                   	// #0
  44c758:	mov	w21, #0x0                   	// #0
  44c75c:	b	44c614 <argp_parse@@Base+0xc834>
  44c760:	cbnz	w10, 44ca2c <argp_parse@@Base+0xcc4c>
  44c764:	mov	w5, #0x0                   	// #0
  44c768:	eor	w0, w25, #0x1
  44c76c:	ands	w0, w7, w0
  44c770:	b.eq	44c92c <argp_parse@@Base+0xcb4c>  // b.none
  44c774:	cmp	x23, x19
  44c778:	b.ls	44c784 <argp_parse@@Base+0xc9a4>  // b.plast
  44c77c:	mov	w1, #0x27                  	// #39
  44c780:	strb	w1, [x28, x19]
  44c784:	add	x1, x19, #0x1
  44c788:	cmp	x23, x1
  44c78c:	b.ls	44c798 <argp_parse@@Base+0xc9b8>  // b.plast
  44c790:	mov	w2, #0x24                  	// #36
  44c794:	strb	w2, [x28, x1]
  44c798:	add	x1, x19, #0x2
  44c79c:	cmp	x23, x1
  44c7a0:	b.ls	44c7ac <argp_parse@@Base+0xc9cc>  // b.plast
  44c7a4:	mov	w2, #0x27                  	// #39
  44c7a8:	strb	w2, [x28, x1]
  44c7ac:	add	x1, x19, #0x3
  44c7b0:	cmp	x23, x1
  44c7b4:	b.ls	44c9f8 <argp_parse@@Base+0xcc18>  // b.plast
  44c7b8:	mov	w25, w0
  44c7bc:	mov	w0, #0x5c                  	// #92
  44c7c0:	strb	w0, [x28, x1]
  44c7c4:	ldr	w0, [sp, #116]
  44c7c8:	add	x19, x1, #0x1
  44c7cc:	cmp	w0, #0x2
  44c7d0:	b.eq	44ca00 <argp_parse@@Base+0xcc20>  // b.none
  44c7d4:	add	x0, x20, #0x1
  44c7d8:	cmp	x0, x24
  44c7dc:	b.cs	44ca14 <argp_parse@@Base+0xcc34>  // b.hs, b.nlast
  44c7e0:	ldrb	w2, [x27, x0]
  44c7e4:	mov	w22, #0x30                  	// #48
  44c7e8:	mov	w0, #0x0                   	// #0
  44c7ec:	sub	w2, w2, #0x30
  44c7f0:	and	w2, w2, #0xff
  44c7f4:	cmp	w2, #0x9
  44c7f8:	b.ls	44ca74 <argp_parse@@Base+0xcc94>  // b.plast
  44c7fc:	ldr	w1, [sp, #124]
  44c800:	mov	w21, #0x0                   	// #0
  44c804:	cbz	w1, 44c398 <argp_parse@@Base+0xc5b8>
  44c808:	cbnz	w5, 44c3ac <argp_parse@@Base+0xc5cc>
  44c80c:	b	44c4ac <argp_parse@@Base+0xc6cc>
  44c810:	cbnz	w0, 44cff4 <argp_parse@@Base+0xd214>
  44c814:	ldr	w0, [sp, #184]
  44c818:	mov	w5, #0x1                   	// #1
  44c81c:	mov	w7, #0x0                   	// #0
  44c820:	mov	w11, #0x0                   	// #0
  44c824:	and	w1, w0, w5
  44c828:	mov	w25, #0x0                   	// #0
  44c82c:	and	w0, w0, #0x4
  44c830:	mov	w10, #0x0                   	// #0
  44c834:	mov	x12, #0x0                   	// #0
  44c838:	mov	x19, #0x0                   	// #0
  44c83c:	stp	wzr, w5, [sp, #120]
  44c840:	str	wzr, [sp, #144]
  44c844:	str	xzr, [sp, #168]
  44c848:	str	wzr, [sp, #188]
  44c84c:	str	xzr, [sp, #192]
  44c850:	stp	wzr, w1, [sp, #208]
  44c854:	str	w0, [sp, #216]
  44c858:	b	44bf50 <argp_parse@@Base+0xc170>
  44c85c:	cmp	w0, #0x5
  44c860:	b.ne	44c8c4 <argp_parse@@Base+0xcae4>  // b.any
  44c864:	ldr	w0, [sp, #184]
  44c868:	and	w1, w0, #0x1
  44c86c:	and	w0, w0, #0x4
  44c870:	stp	w1, w0, [sp, #212]
  44c874:	cbnz	w20, 44cd6c <argp_parse@@Base+0xcf8c>
  44c878:	cbz	x23, 44cc88 <argp_parse@@Base+0xcea8>
  44c87c:	mov	w11, #0x1                   	// #1
  44c880:	mov	w0, #0x22                  	// #34
  44c884:	mov	x12, #0x1                   	// #1
  44c888:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c88c:	mov	w5, w11
  44c890:	add	x1, x1, #0x730
  44c894:	mov	x19, x12
  44c898:	mov	w7, #0x0                   	// #0
  44c89c:	mov	w25, #0x0                   	// #0
  44c8a0:	mov	w10, #0x0                   	// #0
  44c8a4:	strb	w0, [x28]
  44c8a8:	stp	w11, wzr, [sp, #120]
  44c8ac:	str	wzr, [sp, #144]
  44c8b0:	str	x1, [sp, #168]
  44c8b4:	str	wzr, [sp, #188]
  44c8b8:	str	xzr, [sp, #192]
  44c8bc:	str	wzr, [sp, #208]
  44c8c0:	b	44bf50 <argp_parse@@Base+0xc170>
  44c8c4:	cmp	w0, #0x6
  44c8c8:	b.ne	44cff4 <argp_parse@@Base+0xd214>  // b.any
  44c8cc:	mov	w0, #0x1                   	// #1
  44c8d0:	mov	w1, w0
  44c8d4:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44c8d8:	add	x0, x0, #0x730
  44c8dc:	str	x0, [sp, #168]
  44c8e0:	mov	w11, w1
  44c8e4:	ldr	w0, [sp, #184]
  44c8e8:	mov	w5, w1
  44c8ec:	mov	w10, w1
  44c8f0:	stp	w1, wzr, [sp, #120]
  44c8f4:	str	w1, [sp, #208]
  44c8f8:	and	w1, w0, w1
  44c8fc:	and	w0, w0, #0x4
  44c900:	mov	w7, #0x0                   	// #0
  44c904:	mov	w25, #0x0                   	// #0
  44c908:	mov	x12, #0x1                   	// #1
  44c90c:	mov	x19, #0x0                   	// #0
  44c910:	str	wzr, [sp, #144]
  44c914:	str	wzr, [sp, #188]
  44c918:	str	xzr, [sp, #192]
  44c91c:	stp	w1, w0, [sp, #212]
  44c920:	mov	w0, #0x5                   	// #5
  44c924:	str	w0, [sp, #116]
  44c928:	b	44bf50 <argp_parse@@Base+0xc170>
  44c92c:	mov	x1, x19
  44c930:	cmp	x23, x19
  44c934:	b.ls	44c7c4 <argp_parse@@Base+0xc9e4>  // b.plast
  44c938:	mov	w0, w25
  44c93c:	mov	w25, w0
  44c940:	mov	w0, #0x5c                  	// #92
  44c944:	strb	w0, [x28, x1]
  44c948:	b	44c7c4 <argp_parse@@Base+0xc9e4>
  44c94c:	mov	w5, #0x0                   	// #0
  44c950:	cmp	x24, #0x1
  44c954:	cset	w0, ne  // ne = any
  44c958:	cmn	x24, #0x1
  44c95c:	b.eq	44c970 <argp_parse@@Base+0xcb90>  // b.none
  44c960:	cbnz	w0, 44c758 <argp_parse@@Base+0xc978>
  44c964:	cbz	x20, 44c63c <argp_parse@@Base+0xc85c>
  44c968:	mov	w21, #0x0                   	// #0
  44c96c:	b	44c614 <argp_parse@@Base+0xc834>
  44c970:	ldrb	w0, [x27, #1]
  44c974:	cmp	w0, #0x0
  44c978:	cset	w0, ne  // ne = any
  44c97c:	cbnz	w0, 44c758 <argp_parse@@Base+0xc978>
  44c980:	b	44c964 <argp_parse@@Base+0xcb84>
  44c984:	mov	w5, #0x0                   	// #0
  44c988:	cbnz	x20, 44c968 <argp_parse@@Base+0xcb88>
  44c98c:	b	44c63c <argp_parse@@Base+0xc85c>
  44c990:	cbnz	w10, 44c64c <argp_parse@@Base+0xc86c>
  44c994:	mov	w5, #0x0                   	// #0
  44c998:	mov	w0, w25
  44c99c:	mov	w21, #0x0                   	// #0
  44c9a0:	mov	w22, #0x3f                  	// #63
  44c9a4:	cbnz	w5, 44c3ac <argp_parse@@Base+0xc5cc>
  44c9a8:	b	44c4ac <argp_parse@@Base+0xc6cc>
  44c9ac:	cmp	x0, #0x1
  44c9b0:	b.eq	44c0c0 <argp_parse@@Base+0xc2e0>  // b.none
  44c9b4:	add	x2, x25, #0x1
  44c9b8:	add	x0, x27, x0
  44c9bc:	add	x2, x27, x2
  44c9c0:	add	x9, x0, x25
  44c9c4:	b	44c9d4 <argp_parse@@Base+0xcbf4>
  44c9c8:	add	x2, x2, #0x1
  44c9cc:	cmp	x9, x2
  44c9d0:	b.eq	44c0c0 <argp_parse@@Base+0xc2e0>  // b.none
  44c9d4:	ldrb	w0, [x2]
  44c9d8:	sub	w0, w0, #0x5b
  44c9dc:	and	w0, w0, #0xff
  44c9e0:	cmp	w0, #0x21
  44c9e4:	b.hi	44c9c8 <argp_parse@@Base+0xcbe8>  // b.pmore
  44c9e8:	lsl	x0, x6, x0
  44c9ec:	tst	x0, x13
  44c9f0:	b.eq	44c9c8 <argp_parse@@Base+0xcbe8>  // b.none
  44c9f4:	b	44c644 <argp_parse@@Base+0xc864>
  44c9f8:	add	x19, x19, #0x4
  44c9fc:	mov	w25, w0
  44ca00:	mov	w0, #0x0                   	// #0
  44ca04:	mov	w21, #0x0                   	// #0
  44ca08:	mov	w22, #0x30                  	// #48
  44ca0c:	cbnz	w5, 44c3ac <argp_parse@@Base+0xc5cc>
  44ca10:	b	44c4ac <argp_parse@@Base+0xc6cc>
  44ca14:	ldr	w1, [sp, #124]
  44ca18:	mov	w0, #0x0                   	// #0
  44ca1c:	mov	w22, #0x30                  	// #48
  44ca20:	mov	w21, #0x0                   	// #0
  44ca24:	cbz	w1, 44c398 <argp_parse@@Base+0xc5b8>
  44ca28:	b	44c808 <argp_parse@@Base+0xca28>
  44ca2c:	str	w7, [sp, #120]
  44ca30:	b	44c64c <argp_parse@@Base+0xc86c>
  44ca34:	mov	w5, w11
  44ca38:	mov	w21, #0x0                   	// #0
  44ca3c:	b	44c614 <argp_parse@@Base+0xc834>
  44ca40:	mov	w1, w19
  44ca44:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ca48:	add	x0, x0, #0x760
  44ca4c:	str	w10, [sp, #120]
  44ca50:	bl	44bcf0 <argp_parse@@Base+0xbf10>
  44ca54:	str	x0, [sp, #200]
  44ca58:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ca5c:	add	x0, x1, #0x758
  44ca60:	mov	w1, w19
  44ca64:	bl	44bcf0 <argp_parse@@Base+0xbf10>
  44ca68:	ldr	w10, [sp, #120]
  44ca6c:	str	x0, [sp, #256]
  44ca70:	b	44beec <argp_parse@@Base+0xc10c>
  44ca74:	cmp	x23, x19
  44ca78:	b.ls	44ca80 <argp_parse@@Base+0xcca0>  // b.plast
  44ca7c:	strb	w22, [x28, x19]
  44ca80:	add	x0, x1, #0x2
  44ca84:	cmp	x23, x0
  44ca88:	b.ls	44ca94 <argp_parse@@Base+0xccb4>  // b.plast
  44ca8c:	mov	w2, #0x30                  	// #48
  44ca90:	strb	w2, [x28, x0]
  44ca94:	add	x19, x1, #0x3
  44ca98:	mov	w0, #0x0                   	// #0
  44ca9c:	mov	w22, #0x30                  	// #48
  44caa0:	b	44c7fc <argp_parse@@Base+0xca1c>
  44caa4:	mov	w5, #0x0                   	// #0
  44caa8:	ldr	w0, [sp, #116]
  44caac:	cmp	w0, #0x2
  44cab0:	b.eq	44cb30 <argp_parse@@Base+0xcd50>  // b.none
  44cab4:	ldr	w1, [sp, #208]
  44cab8:	mov	w22, #0x5c                  	// #92
  44cabc:	mov	w0, w22
  44cac0:	cbz	w1, 44c6d8 <argp_parse@@Base+0xc8f8>
  44cac4:	add	x20, x20, #0x1
  44cac8:	mov	w0, w25
  44cacc:	mov	w21, #0x0                   	// #0
  44cad0:	b	44c4b0 <argp_parse@@Base+0xc6d0>
  44cad4:	mov	w5, #0x0                   	// #0
  44cad8:	mov	w0, #0x76                  	// #118
  44cadc:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44cae0:	mov	w21, w11
  44cae4:	mov	w5, #0x0                   	// #0
  44cae8:	b	44c63c <argp_parse@@Base+0xc85c>
  44caec:	mov	w5, #0x0                   	// #0
  44caf0:	mov	w0, #0x72                  	// #114
  44caf4:	b	44c6d0 <argp_parse@@Base+0xc8f0>
  44caf8:	mov	w5, #0x0                   	// #0
  44cafc:	mov	w0, #0x6e                  	// #110
  44cb00:	b	44c6d0 <argp_parse@@Base+0xc8f0>
  44cb04:	mov	w5, #0x0                   	// #0
  44cb08:	mov	w0, #0x61                  	// #97
  44cb0c:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44cb10:	mov	w5, #0x0                   	// #0
  44cb14:	mov	w22, #0xa                   	// #10
  44cb18:	mov	w0, #0x6e                  	// #110
  44cb1c:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44cb20:	mov	w5, #0x0                   	// #0
  44cb24:	mov	w22, #0xd                   	// #13
  44cb28:	mov	w0, #0x72                  	// #114
  44cb2c:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44cb30:	cbnz	w10, 44c64c <argp_parse@@Base+0xc86c>
  44cb34:	add	x20, x20, #0x1
  44cb38:	mov	w0, w25
  44cb3c:	mov	w21, #0x0                   	// #0
  44cb40:	mov	w22, #0x5c                  	// #92
  44cb44:	b	44c4b0 <argp_parse@@Base+0xc6d0>
  44cb48:	ldr	w0, [sp, #184]
  44cb4c:	and	w1, w0, #0x1
  44cb50:	and	w0, w0, #0x4
  44cb54:	stp	w1, w0, [sp, #212]
  44cb58:	cbnz	w20, 44cc04 <argp_parse@@Base+0xce24>
  44cb5c:	mov	w0, #0x1                   	// #1
  44cb60:	str	w0, [sp, #120]
  44cb64:	cbnz	x23, 44cfdc <argp_parse@@Base+0xd1fc>
  44cb68:	mov	w0, #0x1                   	// #1
  44cb6c:	mov	w5, w0
  44cb70:	mov	w7, w0
  44cb74:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44cb78:	add	x0, x0, #0x758
  44cb7c:	mov	x12, #0x1                   	// #1
  44cb80:	mov	w11, #0x0                   	// #0
  44cb84:	mov	x19, x12
  44cb88:	mov	w25, #0x0                   	// #0
  44cb8c:	mov	w10, #0x0                   	// #0
  44cb90:	str	w5, [sp, #124]
  44cb94:	str	wzr, [sp, #144]
  44cb98:	str	x0, [sp, #168]
  44cb9c:	mov	w0, #0x2                   	// #2
  44cba0:	str	w0, [sp, #116]
  44cba4:	str	wzr, [sp, #188]
  44cba8:	str	xzr, [sp, #192]
  44cbac:	str	wzr, [sp, #208]
  44cbb0:	b	44bf50 <argp_parse@@Base+0xc170>
  44cbb4:	ldr	w0, [sp, #184]
  44cbb8:	mov	w11, #0x1                   	// #1
  44cbbc:	mov	w7, #0x0                   	// #0
  44cbc0:	mov	w5, w11
  44cbc4:	and	w1, w0, w11
  44cbc8:	mov	w25, #0x0                   	// #0
  44cbcc:	and	w0, w0, #0x4
  44cbd0:	mov	w10, #0x0                   	// #0
  44cbd4:	mov	x12, #0x0                   	// #0
  44cbd8:	mov	x19, #0x0                   	// #0
  44cbdc:	stp	w11, wzr, [sp, #120]
  44cbe0:	str	wzr, [sp, #144]
  44cbe4:	str	xzr, [sp, #168]
  44cbe8:	str	wzr, [sp, #188]
  44cbec:	str	xzr, [sp, #192]
  44cbf0:	stp	wzr, w1, [sp, #208]
  44cbf4:	str	w0, [sp, #216]
  44cbf8:	b	44bf50 <argp_parse@@Base+0xc170>
  44cbfc:	mov	w5, #0x0                   	// #0
  44cc00:	b	44c1dc <argp_parse@@Base+0xc3fc>
  44cc04:	mov	w1, #0x1                   	// #1
  44cc08:	mov	w10, w1
  44cc0c:	mov	w7, w1
  44cc10:	mov	w5, w1
  44cc14:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44cc18:	add	x0, x0, #0x758
  44cc1c:	str	w1, [sp, #124]
  44cc20:	str	w1, [sp, #144]
  44cc24:	str	x0, [sp, #168]
  44cc28:	mov	w0, #0x2                   	// #2
  44cc2c:	mov	w11, #0x0                   	// #0
  44cc30:	mov	w25, #0x0                   	// #0
  44cc34:	mov	x12, #0x1                   	// #1
  44cc38:	mov	x19, #0x0                   	// #0
  44cc3c:	stp	w0, wzr, [sp, #116]
  44cc40:	str	wzr, [sp, #188]
  44cc44:	str	xzr, [sp, #192]
  44cc48:	str	wzr, [sp, #208]
  44cc4c:	b	44bf50 <argp_parse@@Base+0xc170>
  44cc50:	ldr	w1, [sp, #184]
  44cc54:	mov	w10, w0
  44cc58:	mov	w7, w0
  44cc5c:	mov	w5, w0
  44cc60:	str	w0, [sp, #124]
  44cc64:	and	w2, w1, #0x1
  44cc68:	str	w0, [sp, #144]
  44cc6c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44cc70:	add	x0, x0, #0x758
  44cc74:	str	x0, [sp, #168]
  44cc78:	and	w0, w1, #0x4
  44cc7c:	str	w2, [sp, #212]
  44cc80:	str	w0, [sp, #216]
  44cc84:	b	44cc28 <argp_parse@@Base+0xce48>
  44cc88:	mov	w11, #0x1                   	// #1
  44cc8c:	mov	x12, #0x1                   	// #1
  44cc90:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44cc94:	mov	w5, w11
  44cc98:	add	x0, x0, #0x730
  44cc9c:	mov	x19, x12
  44cca0:	mov	w7, #0x0                   	// #0
  44cca4:	mov	w25, #0x0                   	// #0
  44cca8:	mov	w10, #0x0                   	// #0
  44ccac:	stp	w11, wzr, [sp, #120]
  44ccb0:	str	wzr, [sp, #144]
  44ccb4:	str	x0, [sp, #168]
  44ccb8:	str	wzr, [sp, #188]
  44ccbc:	str	xzr, [sp, #192]
  44ccc0:	str	wzr, [sp, #208]
  44ccc4:	b	44bf50 <argp_parse@@Base+0xc170>
  44ccc8:	ldr	w0, [sp, #184]
  44cccc:	and	w1, w0, #0x1
  44ccd0:	and	w0, w0, #0x4
  44ccd4:	stp	w1, w0, [sp, #212]
  44ccd8:	cbnz	w20, 44cf98 <argp_parse@@Base+0xd1b8>
  44ccdc:	str	wzr, [sp, #120]
  44cce0:	b	44cb64 <argp_parse@@Base+0xcd84>
  44cce4:	ldrb	w2, [x27, x6]
  44cce8:	cmp	w2, #0x3e
  44ccec:	b.hi	44c758 <argp_parse@@Base+0xc978>  // b.pmore
  44ccf0:	mov	x1, #0x1                   	// #1
  44ccf4:	mov	x0, #0xa38200000000        	// #179778741075968
  44ccf8:	movk	x0, #0x7000, lsl #48
  44ccfc:	lsl	x1, x1, x2
  44cd00:	mov	w21, #0x0                   	// #0
  44cd04:	tst	x1, x0
  44cd08:	b.eq	44c614 <argp_parse@@Base+0xc834>  // b.none
  44cd0c:	cbnz	w10, 44c514 <argp_parse@@Base+0xc734>
  44cd10:	cmp	x23, x19
  44cd14:	b.ls	44cd1c <argp_parse@@Base+0xcf3c>  // b.plast
  44cd18:	strb	w22, [x28, x19]
  44cd1c:	add	x0, x19, #0x1
  44cd20:	cmp	x23, x0
  44cd24:	b.ls	44cd30 <argp_parse@@Base+0xcf50>  // b.plast
  44cd28:	mov	w1, #0x22                  	// #34
  44cd2c:	strb	w1, [x28, x0]
  44cd30:	add	x0, x19, #0x2
  44cd34:	cmp	x23, x0
  44cd38:	b.ls	44cd44 <argp_parse@@Base+0xcf64>  // b.plast
  44cd3c:	mov	w1, #0x22                  	// #34
  44cd40:	strb	w1, [x28, x0]
  44cd44:	add	x0, x19, #0x3
  44cd48:	cmp	x23, x0
  44cd4c:	b.ls	44cd58 <argp_parse@@Base+0xcf78>  // b.plast
  44cd50:	mov	w1, #0x3f                  	// #63
  44cd54:	strb	w1, [x28, x0]
  44cd58:	add	x19, x19, #0x4
  44cd5c:	mov	w22, w2
  44cd60:	mov	x20, x6
  44cd64:	mov	w0, w25
  44cd68:	b	44c7fc <argp_parse@@Base+0xca1c>
  44cd6c:	mov	w0, #0x1                   	// #1
  44cd70:	mov	w1, w0
  44cd74:	mov	w11, w1
  44cd78:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44cd7c:	mov	w5, w1
  44cd80:	add	x0, x0, #0x730
  44cd84:	mov	w10, w1
  44cd88:	mov	w7, #0x0                   	// #0
  44cd8c:	mov	w25, #0x0                   	// #0
  44cd90:	mov	x12, #0x1                   	// #1
  44cd94:	mov	x19, #0x0                   	// #0
  44cd98:	stp	w1, wzr, [sp, #120]
  44cd9c:	str	wzr, [sp, #144]
  44cda0:	str	x0, [sp, #168]
  44cda4:	str	wzr, [sp, #188]
  44cda8:	str	xzr, [sp, #192]
  44cdac:	str	w1, [sp, #208]
  44cdb0:	b	44bf50 <argp_parse@@Base+0xc170>
  44cdb4:	mov	w5, w11
  44cdb8:	cbnz	x20, 44c968 <argp_parse@@Base+0xcb88>
  44cdbc:	b	44c63c <argp_parse@@Base+0xc85c>
  44cdc0:	mov	w5, w11
  44cdc4:	b	44c950 <argp_parse@@Base+0xcb70>
  44cdc8:	mov	w5, w11
  44cdcc:	b	44cb24 <argp_parse@@Base+0xcd44>
  44cdd0:	mov	w5, w11
  44cdd4:	mov	w0, #0x76                  	// #118
  44cdd8:	b	44c6d8 <argp_parse@@Base+0xc8f8>
  44cddc:	mov	w5, w11
  44cde0:	b	44caa8 <argp_parse@@Base+0xccc8>
  44cde4:	ldr	w0, [sp, #116]
  44cde8:	mov	w5, w11
  44cdec:	cmp	w0, #0x2
  44cdf0:	b.ne	44c674 <argp_parse@@Base+0xc894>  // b.any
  44cdf4:	b	44c998 <argp_parse@@Base+0xcbb8>
  44cdf8:	mov	w5, w11
  44cdfc:	mov	w21, w11
  44ce00:	b	44c63c <argp_parse@@Base+0xc85c>
  44ce04:	mov	w5, w11
  44ce08:	b	44cb14 <argp_parse@@Base+0xcd34>
  44ce0c:	mov	w5, w11
  44ce10:	mov	w0, #0x74                  	// #116
  44ce14:	b	44c6d0 <argp_parse@@Base+0xc8f0>
  44ce18:	mov	w5, w11
  44ce1c:	b	44c768 <argp_parse@@Base+0xc988>
  44ce20:	ldr	w0, [sp, #116]
  44ce24:	mov	w5, w11
  44ce28:	cmp	w0, #0x2
  44ce2c:	b.ne	44c6bc <argp_parse@@Base+0xc8dc>  // b.any
  44ce30:	b	44c438 <argp_parse@@Base+0xc658>
  44ce34:	ldr	x0, [sp, #200]
  44ce38:	ldrb	w0, [x0]
  44ce3c:	cbz	w0, 44bef4 <argp_parse@@Base+0xc114>
  44ce40:	cmp	x23, x19
  44ce44:	b.ls	44ce64 <argp_parse@@Base+0xd084>  // b.plast
  44ce48:	strb	w0, [x28, x19]
  44ce4c:	add	x19, x19, #0x1
  44ce50:	ldr	x0, [sp, #200]
  44ce54:	ldrb	w0, [x0, x19]
  44ce58:	cbz	w0, 44bef4 <argp_parse@@Base+0xc114>
  44ce5c:	cmp	x23, x19
  44ce60:	b.hi	44ce48 <argp_parse@@Base+0xd068>  // b.pmore
  44ce64:	ldr	x0, [sp, #200]
  44ce68:	add	x19, x19, #0x1
  44ce6c:	ldrb	w0, [x0, x19]
  44ce70:	cbnz	w0, 44ce40 <argp_parse@@Base+0xd060>
  44ce74:	b	44bef4 <argp_parse@@Base+0xc114>
  44ce78:	mov	x8, x21
  44ce7c:	ldr	w1, [sp, #120]
  44ce80:	ldr	w10, [sp, #136]
  44ce84:	mov	w21, #0x0                   	// #0
  44ce88:	ldp	w25, w5, [sp, #148]
  44ce8c:	ldp	w7, w11, [sp, #156]
  44ce90:	ldr	w22, [sp, #220]
  44ce94:	ldr	x12, [sp, #128]
  44ce98:	ldp	x19, x4, [sp, #224]
  44ce9c:	b	44c110 <argp_parse@@Base+0xc330>
  44cea0:	ldr	w5, [sp, #124]
  44cea4:	mov	w0, w25
  44cea8:	mov	w21, w5
  44ceac:	b	44c62c <argp_parse@@Base+0xc84c>
  44ceb0:	mov	x9, x25
  44ceb4:	cmp	x25, x24
  44ceb8:	ldr	w10, [sp, #136]
  44cebc:	mov	x8, x21
  44cec0:	ldp	w25, w5, [sp, #148]
  44cec4:	ldp	w7, w11, [sp, #156]
  44cec8:	ldr	w22, [sp, #220]
  44cecc:	ldr	x12, [sp, #128]
  44ced0:	ldp	x19, x4, [sp, #224]
  44ced4:	b.cc	44ceec <argp_parse@@Base+0xd10c>  // b.lo, b.ul, b.last
  44ced8:	b	44cef4 <argp_parse@@Base+0xd114>
  44cedc:	add	x8, x8, #0x1
  44cee0:	add	x9, x20, x8
  44cee4:	cmp	x24, x9
  44cee8:	b.ls	44cef4 <argp_parse@@Base+0xd114>  // b.plast
  44ceec:	ldrb	w0, [x27, x9]
  44cef0:	cbnz	w0, 44cedc <argp_parse@@Base+0xd0fc>
  44cef4:	ldr	w1, [sp, #120]
  44cef8:	mov	w21, #0x0                   	// #0
  44cefc:	b	44c110 <argp_parse@@Base+0xc330>
  44cf00:	mov	w7, w10
  44cf04:	ldr	x0, [sp, #168]
  44cf08:	cmp	x0, #0x0
  44cf0c:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  44cf10:	b.eq	44cf38 <argp_parse@@Base+0xd158>  // b.none
  44cf14:	ldrb	w1, [x0]
  44cf18:	cbz	w1, 44cf38 <argp_parse@@Base+0xd158>
  44cf1c:	sub	x0, x0, x19
  44cf20:	cmp	x23, x19
  44cf24:	b.ls	44cf48 <argp_parse@@Base+0xd168>  // b.plast
  44cf28:	strb	w1, [x28, x19]
  44cf2c:	add	x19, x19, #0x1
  44cf30:	ldrb	w1, [x0, x19]
  44cf34:	cbnz	w1, 44cf20 <argp_parse@@Base+0xd140>
  44cf38:	cmp	x23, x19
  44cf3c:	b.ls	44c548 <argp_parse@@Base+0xc768>  // b.plast
  44cf40:	strb	wzr, [x28, x19]
  44cf44:	b	44c548 <argp_parse@@Base+0xc768>
  44cf48:	add	x19, x19, #0x1
  44cf4c:	ldrb	w1, [x0, x19]
  44cf50:	cbnz	w1, 44cf20 <argp_parse@@Base+0xd140>
  44cf54:	b	44cf38 <argp_parse@@Base+0xd158>
  44cf58:	ldr	w7, [sp, #188]
  44cf5c:	b	44cf04 <argp_parse@@Base+0xd124>
  44cf60:	ldp	x1, x7, [sp, #192]
  44cf64:	mov	x6, x4
  44cf68:	ldr	w5, [sp, #184]
  44cf6c:	mov	x3, x24
  44cf70:	ldr	x0, [sp, #256]
  44cf74:	str	x0, [sp]
  44cf78:	mov	x2, x27
  44cf7c:	mov	x0, x28
  44cf80:	mov	w4, #0x5                   	// #5
  44cf84:	bl	44be58 <argp_parse@@Base+0xc078>
  44cf88:	mov	x19, x0
  44cf8c:	b	44c548 <argp_parse@@Base+0xc768>
  44cf90:	ldr	x23, [sp, #192]
  44cf94:	b	44c48c <argp_parse@@Base+0xc6ac>
  44cf98:	mov	w1, #0x1                   	// #1
  44cf9c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44cfa0:	mov	w10, w1
  44cfa4:	add	x0, x0, #0x758
  44cfa8:	mov	w7, w1
  44cfac:	mov	w5, w1
  44cfb0:	mov	w11, #0x0                   	// #0
  44cfb4:	mov	w25, #0x0                   	// #0
  44cfb8:	mov	x12, #0x1                   	// #1
  44cfbc:	mov	x19, #0x0                   	// #0
  44cfc0:	stp	wzr, w1, [sp, #120]
  44cfc4:	str	w1, [sp, #144]
  44cfc8:	str	x0, [sp, #168]
  44cfcc:	str	wzr, [sp, #188]
  44cfd0:	str	xzr, [sp, #192]
  44cfd4:	str	wzr, [sp, #208]
  44cfd8:	b	44bf50 <argp_parse@@Base+0xc170>
  44cfdc:	mov	w25, #0x0                   	// #0
  44cfe0:	mov	w0, #0x0                   	// #0
  44cfe4:	mov	w5, #0x1                   	// #1
  44cfe8:	mov	x1, #0x0                   	// #0
  44cfec:	str	x23, [sp, #192]
  44cff0:	b	44c31c <argp_parse@@Base+0xc53c>
  44cff4:	bl	404650 <abort@plt>
  44cff8:	sub	sp, sp, #0x80
  44cffc:	stp	x29, x30, [sp, #16]
  44d000:	add	x29, sp, #0x10
  44d004:	stp	x19, x20, [sp, #32]
  44d008:	mov	w19, w0
  44d00c:	mov	x20, x3
  44d010:	stp	x21, x22, [sp, #48]
  44d014:	stp	x23, x24, [sp, #64]
  44d018:	mov	x23, x1
  44d01c:	mov	x24, x2
  44d020:	stp	x25, x26, [sp, #80]
  44d024:	stp	x27, x28, [sp, #96]
  44d028:	bl	404ad0 <__errno_location@plt>
  44d02c:	mov	x22, x0
  44d030:	ldr	w0, [x0]
  44d034:	adrp	x27, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d038:	str	w0, [sp, #116]
  44d03c:	ldr	x21, [x27, #1048]
  44d040:	tbnz	w19, #31, 44d198 <argp_parse@@Base+0xd3b8>
  44d044:	add	x26, x27, #0x418
  44d048:	ldr	w0, [x26, #8]
  44d04c:	cmp	w0, w19
  44d050:	b.gt	44d0a0 <argp_parse@@Base+0xd2c0>
  44d054:	mov	w0, #0x7fffffff            	// #2147483647
  44d058:	cmp	w19, w0
  44d05c:	b.eq	44d194 <argp_parse@@Base+0xd3b4>  // b.none
  44d060:	add	w28, w19, #0x1
  44d064:	add	x0, x26, #0x10
  44d068:	cmp	x21, x0
  44d06c:	sbfiz	x1, x28, #4, #32
  44d070:	b.eq	44d178 <argp_parse@@Base+0xd398>  // b.none
  44d074:	mov	x0, x21
  44d078:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d07c:	mov	x21, x0
  44d080:	str	x0, [x27, #1048]
  44d084:	ldr	w0, [x26, #8]
  44d088:	mov	w1, #0x0                   	// #0
  44d08c:	sub	w2, w28, w0
  44d090:	add	x0, x21, w0, sxtw #4
  44d094:	sbfiz	x2, x2, #4, #32
  44d098:	bl	404410 <memset@plt>
  44d09c:	str	w28, [x26, #8]
  44d0a0:	sbfiz	x19, x19, #4, #32
  44d0a4:	add	x26, x20, #0x8
  44d0a8:	add	x0, x21, x19
  44d0ac:	str	x0, [sp, #120]
  44d0b0:	ldp	w4, w5, [x20]
  44d0b4:	mov	x6, x26
  44d0b8:	ldr	x7, [x20, #40]
  44d0bc:	orr	w25, w5, #0x1
  44d0c0:	ldr	x27, [x21, x19]
  44d0c4:	mov	x3, x24
  44d0c8:	ldr	x28, [x0, #8]
  44d0cc:	mov	x1, x27
  44d0d0:	ldr	x0, [x20, #48]
  44d0d4:	str	x0, [sp]
  44d0d8:	mov	x2, x23
  44d0dc:	mov	w5, w25
  44d0e0:	mov	x0, x28
  44d0e4:	bl	44be58 <argp_parse@@Base+0xc078>
  44d0e8:	cmp	x27, x0
  44d0ec:	b.hi	44d14c <argp_parse@@Base+0xd36c>  // b.pmore
  44d0f0:	add	x27, x0, #0x1
  44d0f4:	str	x27, [x21, x19]
  44d0f8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d0fc:	add	x0, x0, #0xe60
  44d100:	cmp	x28, x0
  44d104:	b.eq	44d110 <argp_parse@@Base+0xd330>  // b.none
  44d108:	mov	x0, x28
  44d10c:	bl	4047b0 <free@plt>
  44d110:	mov	x0, x27
  44d114:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44d118:	ldr	x1, [sp, #120]
  44d11c:	mov	x28, x0
  44d120:	ldr	w4, [x20]
  44d124:	mov	x6, x26
  44d128:	ldr	x7, [x20, #40]
  44d12c:	str	x0, [x1, #8]
  44d130:	ldr	x1, [x20, #48]
  44d134:	str	x1, [sp]
  44d138:	mov	w5, w25
  44d13c:	mov	x3, x24
  44d140:	mov	x2, x23
  44d144:	mov	x1, x27
  44d148:	bl	44be58 <argp_parse@@Base+0xc078>
  44d14c:	ldr	w0, [sp, #116]
  44d150:	ldp	x29, x30, [sp, #16]
  44d154:	ldp	x19, x20, [sp, #32]
  44d158:	ldp	x23, x24, [sp, #64]
  44d15c:	ldp	x25, x26, [sp, #80]
  44d160:	str	w0, [x22]
  44d164:	mov	x0, x28
  44d168:	ldp	x21, x22, [sp, #48]
  44d16c:	ldp	x27, x28, [sp, #96]
  44d170:	add	sp, sp, #0x80
  44d174:	ret
  44d178:	mov	x0, #0x0                   	// #0
  44d17c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d180:	mov	x21, x0
  44d184:	str	x0, [x27, #1048]
  44d188:	ldp	x0, x1, [x26, #16]
  44d18c:	stp	x0, x1, [x21]
  44d190:	b	44d084 <argp_parse@@Base+0xd2a4>
  44d194:	bl	4104a0 <wcrtomb@plt+0xb880>
  44d198:	bl	404650 <abort@plt>
  44d19c:	nop
  44d1a0:	stp	x29, x30, [sp, #-48]!
  44d1a4:	mov	x29, sp
  44d1a8:	stp	x19, x20, [sp, #16]
  44d1ac:	mov	x20, x0
  44d1b0:	str	x21, [sp, #32]
  44d1b4:	bl	404ad0 <__errno_location@plt>
  44d1b8:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d1bc:	mov	x19, x0
  44d1c0:	add	x2, x2, #0xe60
  44d1c4:	cmp	x20, #0x0
  44d1c8:	add	x2, x2, #0x100
  44d1cc:	mov	x1, #0x38                  	// #56
  44d1d0:	ldr	w21, [x19]
  44d1d4:	csel	x0, x2, x20, eq  // eq = none
  44d1d8:	bl	4502e8 <argp_parse@@Base+0x10508>
  44d1dc:	str	w21, [x19]
  44d1e0:	ldp	x19, x20, [sp, #16]
  44d1e4:	ldr	x21, [sp, #32]
  44d1e8:	ldp	x29, x30, [sp], #48
  44d1ec:	ret
  44d1f0:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d1f4:	add	x1, x1, #0xe60
  44d1f8:	cmp	x0, #0x0
  44d1fc:	add	x1, x1, #0x100
  44d200:	csel	x0, x1, x0, eq  // eq = none
  44d204:	ldr	w0, [x0]
  44d208:	ret
  44d20c:	nop
  44d210:	adrp	x2, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d214:	add	x2, x2, #0xe60
  44d218:	cmp	x0, #0x0
  44d21c:	add	x2, x2, #0x100
  44d220:	csel	x0, x2, x0, eq  // eq = none
  44d224:	str	w1, [x0]
  44d228:	ret
  44d22c:	nop
  44d230:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d234:	add	x3, x3, #0xe60
  44d238:	cmp	x0, #0x0
  44d23c:	add	x3, x3, #0x100
  44d240:	csel	x0, x3, x0, eq  // eq = none
  44d244:	ubfx	x4, x1, #5, #3
  44d248:	add	x3, x0, #0x8
  44d24c:	and	w1, w1, #0x1f
  44d250:	ldr	w5, [x3, x4, lsl #2]
  44d254:	lsr	w0, w5, w1
  44d258:	eor	w2, w0, w2
  44d25c:	and	w2, w2, #0x1
  44d260:	and	w0, w0, #0x1
  44d264:	lsl	w2, w2, w1
  44d268:	eor	w2, w2, w5
  44d26c:	str	w2, [x3, x4, lsl #2]
  44d270:	ret
  44d274:	nop
  44d278:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d27c:	add	x3, x3, #0xe60
  44d280:	cmp	x0, #0x0
  44d284:	add	x3, x3, #0x100
  44d288:	csel	x2, x3, x0, eq  // eq = none
  44d28c:	ldr	w0, [x2, #4]
  44d290:	str	w1, [x2, #4]
  44d294:	ret
  44d298:	adrp	x3, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d29c:	add	x3, x3, #0xe60
  44d2a0:	cmp	x0, #0x0
  44d2a4:	add	x3, x3, #0x100
  44d2a8:	csel	x0, x3, x0, eq  // eq = none
  44d2ac:	mov	w3, #0xa                   	// #10
  44d2b0:	cmp	x1, #0x0
  44d2b4:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  44d2b8:	str	w3, [x0]
  44d2bc:	b.eq	44d2c8 <argp_parse@@Base+0xd4e8>  // b.none
  44d2c0:	stp	x1, x2, [x0, #40]
  44d2c4:	ret
  44d2c8:	stp	x29, x30, [sp, #-16]!
  44d2cc:	mov	x29, sp
  44d2d0:	bl	404650 <abort@plt>
  44d2d4:	nop
  44d2d8:	sub	sp, sp, #0x50
  44d2dc:	adrp	x5, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d2e0:	stp	x29, x30, [sp, #16]
  44d2e4:	add	x29, sp, #0x10
  44d2e8:	stp	x19, x20, [sp, #32]
  44d2ec:	mov	x19, x4
  44d2f0:	add	x4, x5, #0xe60
  44d2f4:	cmp	x19, #0x0
  44d2f8:	add	x4, x4, #0x100
  44d2fc:	csel	x19, x4, x19, eq  // eq = none
  44d300:	mov	x20, x3
  44d304:	stp	x21, x22, [sp, #48]
  44d308:	mov	x21, x0
  44d30c:	mov	x22, x1
  44d310:	str	x23, [sp, #64]
  44d314:	mov	x23, x2
  44d318:	bl	404ad0 <__errno_location@plt>
  44d31c:	ldp	x7, x8, [x19, #40]
  44d320:	mov	x3, x20
  44d324:	mov	x20, x0
  44d328:	mov	x0, x21
  44d32c:	ldp	w4, w5, [x19]
  44d330:	mov	x2, x23
  44d334:	ldr	w21, [x20]
  44d338:	mov	x1, x22
  44d33c:	str	x8, [sp]
  44d340:	add	x6, x19, #0x8
  44d344:	bl	44be58 <argp_parse@@Base+0xc078>
  44d348:	ldp	x29, x30, [sp, #16]
  44d34c:	ldr	x23, [sp, #64]
  44d350:	str	w21, [x20]
  44d354:	ldp	x19, x20, [sp, #32]
  44d358:	ldp	x21, x22, [sp, #48]
  44d35c:	add	sp, sp, #0x50
  44d360:	ret
  44d364:	nop
  44d368:	sub	sp, sp, #0x60
  44d36c:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d370:	add	x4, x4, #0xe60
  44d374:	cmp	x2, #0x0
  44d378:	add	x4, x4, #0x100
  44d37c:	stp	x29, x30, [sp, #16]
  44d380:	add	x29, sp, #0x10
  44d384:	stp	x19, x20, [sp, #32]
  44d388:	csel	x19, x4, x2, eq  // eq = none
  44d38c:	stp	x21, x22, [sp, #48]
  44d390:	mov	x22, x0
  44d394:	stp	x23, x24, [sp, #64]
  44d398:	mov	x23, x1
  44d39c:	stp	x25, x26, [sp, #80]
  44d3a0:	bl	404ad0 <__errno_location@plt>
  44d3a4:	ldr	w26, [x0]
  44d3a8:	ldp	w4, w24, [x19]
  44d3ac:	mov	x20, x0
  44d3b0:	ldp	x7, x0, [x19, #40]
  44d3b4:	add	x25, x19, #0x8
  44d3b8:	orr	w24, w24, #0x1
  44d3bc:	mov	x6, x25
  44d3c0:	mov	x3, x23
  44d3c4:	mov	x2, x22
  44d3c8:	mov	w5, w24
  44d3cc:	str	x0, [sp]
  44d3d0:	mov	x1, #0x0                   	// #0
  44d3d4:	mov	x0, #0x0                   	// #0
  44d3d8:	bl	44be58 <argp_parse@@Base+0xc078>
  44d3dc:	add	x21, x0, #0x1
  44d3e0:	mov	x0, x21
  44d3e4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44d3e8:	ldp	x7, x1, [x19, #40]
  44d3ec:	mov	w5, w24
  44d3f0:	ldr	w4, [x19]
  44d3f4:	mov	x6, x25
  44d3f8:	str	x1, [sp]
  44d3fc:	mov	x3, x23
  44d400:	mov	x2, x22
  44d404:	mov	x19, x0
  44d408:	mov	x1, x21
  44d40c:	bl	44be58 <argp_parse@@Base+0xc078>
  44d410:	mov	x0, x19
  44d414:	ldp	x29, x30, [sp, #16]
  44d418:	ldp	x21, x22, [sp, #48]
  44d41c:	ldp	x23, x24, [sp, #64]
  44d420:	str	w26, [x20]
  44d424:	ldp	x19, x20, [sp, #32]
  44d428:	ldp	x25, x26, [sp, #80]
  44d42c:	add	sp, sp, #0x60
  44d430:	ret
  44d434:	nop
  44d438:	sub	sp, sp, #0x70
  44d43c:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d440:	add	x4, x4, #0xe60
  44d444:	cmp	x3, #0x0
  44d448:	add	x4, x4, #0x100
  44d44c:	stp	x29, x30, [sp, #16]
  44d450:	add	x29, sp, #0x10
  44d454:	stp	x19, x20, [sp, #32]
  44d458:	csel	x19, x4, x3, eq  // eq = none
  44d45c:	mov	x20, x2
  44d460:	stp	x21, x22, [sp, #48]
  44d464:	mov	x22, x0
  44d468:	stp	x23, x24, [sp, #64]
  44d46c:	mov	x23, x1
  44d470:	stp	x25, x26, [sp, #80]
  44d474:	stp	x27, x28, [sp, #96]
  44d478:	bl	404ad0 <__errno_location@plt>
  44d47c:	ldr	w28, [x0]
  44d480:	ldp	w4, w5, [x19]
  44d484:	mov	x21, x0
  44d488:	ldp	x7, x0, [x19, #40]
  44d48c:	cmp	x20, #0x0
  44d490:	cset	w24, eq  // eq = none
  44d494:	add	x27, x19, #0x8
  44d498:	orr	w24, w24, w5
  44d49c:	mov	x6, x27
  44d4a0:	mov	x3, x23
  44d4a4:	mov	x2, x22
  44d4a8:	mov	w5, w24
  44d4ac:	str	x0, [sp]
  44d4b0:	mov	x1, #0x0                   	// #0
  44d4b4:	mov	x0, #0x0                   	// #0
  44d4b8:	bl	44be58 <argp_parse@@Base+0xc078>
  44d4bc:	add	x26, x0, #0x1
  44d4c0:	mov	x25, x0
  44d4c4:	mov	x0, x26
  44d4c8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44d4cc:	ldp	x7, x1, [x19, #40]
  44d4d0:	mov	w5, w24
  44d4d4:	ldr	w4, [x19]
  44d4d8:	mov	x6, x27
  44d4dc:	str	x1, [sp]
  44d4e0:	mov	x3, x23
  44d4e4:	mov	x2, x22
  44d4e8:	mov	x19, x0
  44d4ec:	mov	x1, x26
  44d4f0:	bl	44be58 <argp_parse@@Base+0xc078>
  44d4f4:	str	w28, [x21]
  44d4f8:	cbz	x20, 44d500 <argp_parse@@Base+0xd720>
  44d4fc:	str	x25, [x20]
  44d500:	mov	x0, x19
  44d504:	ldp	x29, x30, [sp, #16]
  44d508:	ldp	x19, x20, [sp, #32]
  44d50c:	ldp	x21, x22, [sp, #48]
  44d510:	ldp	x23, x24, [sp, #64]
  44d514:	ldp	x25, x26, [sp, #80]
  44d518:	ldp	x27, x28, [sp, #96]
  44d51c:	add	sp, sp, #0x70
  44d520:	ret
  44d524:	nop
  44d528:	stp	x29, x30, [sp, #-64]!
  44d52c:	mov	x29, sp
  44d530:	stp	x21, x22, [sp, #32]
  44d534:	str	x23, [sp, #48]
  44d538:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d53c:	add	x22, x23, #0x418
  44d540:	stp	x19, x20, [sp, #16]
  44d544:	ldr	x21, [x23, #1048]
  44d548:	ldr	w20, [x22, #8]
  44d54c:	cmp	w20, #0x1
  44d550:	b.le	44d578 <argp_parse@@Base+0xd798>
  44d554:	sub	w0, w20, #0x2
  44d558:	add	x20, x21, #0x28
  44d55c:	add	x19, x21, #0x18
  44d560:	add	x20, x20, w0, uxtw #4
  44d564:	nop
  44d568:	ldr	x0, [x19], #16
  44d56c:	bl	4047b0 <free@plt>
  44d570:	cmp	x19, x20
  44d574:	b.ne	44d568 <argp_parse@@Base+0xd788>  // b.any
  44d578:	ldr	x0, [x21, #8]
  44d57c:	adrp	x19, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d580:	add	x19, x19, #0xe60
  44d584:	cmp	x0, x19
  44d588:	b.eq	44d598 <argp_parse@@Base+0xd7b8>  // b.none
  44d58c:	bl	4047b0 <free@plt>
  44d590:	mov	x0, #0x100                 	// #256
  44d594:	stp	x0, x19, [x22, #16]
  44d598:	add	x19, x22, #0x10
  44d59c:	cmp	x21, x19
  44d5a0:	b.eq	44d5b0 <argp_parse@@Base+0xd7d0>  // b.none
  44d5a4:	mov	x0, x21
  44d5a8:	bl	4047b0 <free@plt>
  44d5ac:	str	x19, [x23, #1048]
  44d5b0:	mov	w0, #0x1                   	// #1
  44d5b4:	str	w0, [x22, #8]
  44d5b8:	ldp	x19, x20, [sp, #16]
  44d5bc:	ldp	x21, x22, [sp, #32]
  44d5c0:	ldr	x23, [sp, #48]
  44d5c4:	ldp	x29, x30, [sp], #64
  44d5c8:	ret
  44d5cc:	nop
  44d5d0:	sub	sp, sp, #0x70
  44d5d4:	stp	x29, x30, [sp, #16]
  44d5d8:	add	x29, sp, #0x10
  44d5dc:	stp	x21, x22, [sp, #48]
  44d5e0:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d5e4:	stp	x19, x20, [sp, #32]
  44d5e8:	mov	w19, w0
  44d5ec:	stp	x23, x24, [sp, #64]
  44d5f0:	mov	x24, x1
  44d5f4:	stp	x25, x26, [sp, #80]
  44d5f8:	stp	x27, x28, [sp, #96]
  44d5fc:	bl	404ad0 <__errno_location@plt>
  44d600:	ldr	w25, [x0]
  44d604:	ldr	x20, [x22, #1048]
  44d608:	tbnz	w19, #31, 44d750 <argp_parse@@Base+0xd970>
  44d60c:	add	x21, x22, #0x418
  44d610:	mov	x23, x0
  44d614:	ldr	w0, [x21, #8]
  44d618:	cmp	w19, w0
  44d61c:	b.lt	44d66c <argp_parse@@Base+0xd88c>  // b.tstop
  44d620:	mov	w0, #0x7fffffff            	// #2147483647
  44d624:	cmp	w19, w0
  44d628:	b.eq	44d74c <argp_parse@@Base+0xd96c>  // b.none
  44d62c:	add	w26, w19, #0x1
  44d630:	add	x0, x21, #0x10
  44d634:	cmp	x20, x0
  44d638:	sbfiz	x1, x26, #4, #32
  44d63c:	b.eq	44d730 <argp_parse@@Base+0xd950>  // b.none
  44d640:	mov	x0, x20
  44d644:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d648:	mov	x20, x0
  44d64c:	str	x0, [x22, #1048]
  44d650:	ldr	w0, [x21, #8]
  44d654:	mov	w1, #0x0                   	// #0
  44d658:	sub	w2, w26, w0
  44d65c:	add	x0, x20, w0, sxtw #4
  44d660:	sbfiz	x2, x2, #4, #32
  44d664:	bl	404410 <memset@plt>
  44d668:	str	w26, [x21, #8]
  44d66c:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d670:	add	x21, x21, #0xe60
  44d674:	sbfiz	x19, x19, #4, #32
  44d678:	add	x6, x21, #0x108
  44d67c:	add	x26, x20, x19
  44d680:	mov	x2, x24
  44d684:	ldp	x7, x0, [x21, #296]
  44d688:	mov	x3, #0xffffffffffffffff    	// #-1
  44d68c:	ldr	w4, [x21, #256]
  44d690:	ldr	w28, [x21, #260]
  44d694:	ldr	x22, [x20, x19]
  44d698:	orr	w28, w28, #0x1
  44d69c:	ldr	x27, [x26, #8]
  44d6a0:	str	x0, [sp]
  44d6a4:	mov	x1, x22
  44d6a8:	mov	w5, w28
  44d6ac:	mov	x0, x27
  44d6b0:	bl	44be58 <argp_parse@@Base+0xc078>
  44d6b4:	cmp	x22, x0
  44d6b8:	b.hi	44d708 <argp_parse@@Base+0xd928>  // b.pmore
  44d6bc:	add	x22, x0, #0x1
  44d6c0:	str	x22, [x20, x19]
  44d6c4:	cmp	x27, x21
  44d6c8:	b.eq	44d6d4 <argp_parse@@Base+0xd8f4>  // b.none
  44d6cc:	mov	x0, x27
  44d6d0:	bl	4047b0 <free@plt>
  44d6d4:	mov	x0, x22
  44d6d8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44d6dc:	ldp	x7, x1, [x21, #296]
  44d6e0:	str	x0, [x26, #8]
  44d6e4:	ldr	w4, [x21, #256]
  44d6e8:	mov	x27, x0
  44d6ec:	str	x1, [sp]
  44d6f0:	mov	w5, w28
  44d6f4:	mov	x2, x24
  44d6f8:	add	x6, x21, #0x108
  44d6fc:	mov	x1, x22
  44d700:	mov	x3, #0xffffffffffffffff    	// #-1
  44d704:	bl	44be58 <argp_parse@@Base+0xc078>
  44d708:	mov	x0, x27
  44d70c:	ldp	x29, x30, [sp, #16]
  44d710:	ldp	x19, x20, [sp, #32]
  44d714:	ldp	x21, x22, [sp, #48]
  44d718:	ldp	x27, x28, [sp, #96]
  44d71c:	str	w25, [x23]
  44d720:	ldp	x23, x24, [sp, #64]
  44d724:	ldp	x25, x26, [sp, #80]
  44d728:	add	sp, sp, #0x70
  44d72c:	ret
  44d730:	mov	x0, #0x0                   	// #0
  44d734:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d738:	mov	x20, x0
  44d73c:	str	x0, [x22, #1048]
  44d740:	ldp	x0, x1, [x21, #16]
  44d744:	stp	x0, x1, [x20]
  44d748:	b	44d650 <argp_parse@@Base+0xd870>
  44d74c:	bl	4104a0 <wcrtomb@plt+0xb880>
  44d750:	bl	404650 <abort@plt>
  44d754:	nop
  44d758:	sub	sp, sp, #0x80
  44d75c:	stp	x29, x30, [sp, #16]
  44d760:	add	x29, sp, #0x10
  44d764:	stp	x19, x20, [sp, #32]
  44d768:	mov	w19, w0
  44d76c:	stp	x21, x22, [sp, #48]
  44d770:	stp	x23, x24, [sp, #64]
  44d774:	mov	x23, x1
  44d778:	mov	x24, x2
  44d77c:	stp	x25, x26, [sp, #80]
  44d780:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d784:	stp	x27, x28, [sp, #96]
  44d788:	bl	404ad0 <__errno_location@plt>
  44d78c:	mov	x22, x0
  44d790:	ldr	w0, [x0]
  44d794:	str	w0, [sp, #124]
  44d798:	ldr	x20, [x26, #1048]
  44d79c:	tbnz	w19, #31, 44d8e4 <argp_parse@@Base+0xdb04>
  44d7a0:	add	x21, x26, #0x418
  44d7a4:	ldr	w0, [x21, #8]
  44d7a8:	cmp	w19, w0
  44d7ac:	b.lt	44d7fc <argp_parse@@Base+0xda1c>  // b.tstop
  44d7b0:	mov	w0, #0x7fffffff            	// #2147483647
  44d7b4:	cmp	w19, w0
  44d7b8:	b.eq	44d8e0 <argp_parse@@Base+0xdb00>  // b.none
  44d7bc:	add	w27, w19, #0x1
  44d7c0:	add	x0, x21, #0x10
  44d7c4:	cmp	x20, x0
  44d7c8:	sbfiz	x1, x27, #4, #32
  44d7cc:	b.eq	44d8c4 <argp_parse@@Base+0xdae4>  // b.none
  44d7d0:	mov	x0, x20
  44d7d4:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d7d8:	mov	x20, x0
  44d7dc:	str	x0, [x26, #1048]
  44d7e0:	ldr	w0, [x21, #8]
  44d7e4:	mov	w1, #0x0                   	// #0
  44d7e8:	sub	w2, w27, w0
  44d7ec:	add	x0, x20, w0, sxtw #4
  44d7f0:	sbfiz	x2, x2, #4, #32
  44d7f4:	bl	404410 <memset@plt>
  44d7f8:	str	w27, [x21, #8]
  44d7fc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d800:	add	x21, x21, #0xe60
  44d804:	sbfiz	x19, x19, #4, #32
  44d808:	add	x6, x21, #0x108
  44d80c:	add	x26, x20, x19
  44d810:	mov	x3, x24
  44d814:	ldp	x7, x0, [x21, #296]
  44d818:	mov	x2, x23
  44d81c:	ldr	w4, [x21, #256]
  44d820:	ldr	w5, [x21, #260]
  44d824:	ldr	x27, [x20, x19]
  44d828:	orr	w25, w5, #0x1
  44d82c:	ldr	x28, [x26, #8]
  44d830:	str	x0, [sp]
  44d834:	mov	x1, x27
  44d838:	mov	w5, w25
  44d83c:	mov	x0, x28
  44d840:	bl	44be58 <argp_parse@@Base+0xc078>
  44d844:	cmp	x27, x0
  44d848:	b.hi	44d898 <argp_parse@@Base+0xdab8>  // b.pmore
  44d84c:	add	x27, x0, #0x1
  44d850:	str	x27, [x20, x19]
  44d854:	cmp	x28, x21
  44d858:	b.eq	44d864 <argp_parse@@Base+0xda84>  // b.none
  44d85c:	mov	x0, x28
  44d860:	bl	4047b0 <free@plt>
  44d864:	mov	x0, x27
  44d868:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44d86c:	ldp	x7, x1, [x21, #296]
  44d870:	str	x0, [x26, #8]
  44d874:	ldr	w4, [x21, #256]
  44d878:	mov	x28, x0
  44d87c:	str	x1, [sp]
  44d880:	mov	w5, w25
  44d884:	mov	x3, x24
  44d888:	mov	x2, x23
  44d88c:	add	x6, x21, #0x108
  44d890:	mov	x1, x27
  44d894:	bl	44be58 <argp_parse@@Base+0xc078>
  44d898:	ldr	w0, [sp, #124]
  44d89c:	ldp	x29, x30, [sp, #16]
  44d8a0:	ldp	x19, x20, [sp, #32]
  44d8a4:	ldp	x23, x24, [sp, #64]
  44d8a8:	ldp	x25, x26, [sp, #80]
  44d8ac:	str	w0, [x22]
  44d8b0:	mov	x0, x28
  44d8b4:	ldp	x21, x22, [sp, #48]
  44d8b8:	ldp	x27, x28, [sp, #96]
  44d8bc:	add	sp, sp, #0x80
  44d8c0:	ret
  44d8c4:	mov	x0, #0x0                   	// #0
  44d8c8:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d8cc:	mov	x20, x0
  44d8d0:	str	x0, [x26, #1048]
  44d8d4:	ldp	x0, x1, [x21, #16]
  44d8d8:	stp	x0, x1, [x20]
  44d8dc:	b	44d7e0 <argp_parse@@Base+0xda00>
  44d8e0:	bl	4104a0 <wcrtomb@plt+0xb880>
  44d8e4:	bl	404650 <abort@plt>
  44d8e8:	sub	sp, sp, #0x60
  44d8ec:	stp	x29, x30, [sp, #16]
  44d8f0:	add	x29, sp, #0x10
  44d8f4:	stp	x19, x20, [sp, #32]
  44d8f8:	stp	x21, x22, [sp, #48]
  44d8fc:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d900:	add	x20, x21, #0x418
  44d904:	stp	x23, x24, [sp, #64]
  44d908:	mov	x24, x0
  44d90c:	stp	x25, x26, [sp, #80]
  44d910:	bl	404ad0 <__errno_location@plt>
  44d914:	mov	x23, x0
  44d918:	ldr	w0, [x20, #8]
  44d91c:	ldr	x19, [x21, #1048]
  44d920:	cmp	w0, #0x0
  44d924:	ldr	w25, [x23]
  44d928:	b.gt	44d96c <argp_parse@@Base+0xdb8c>
  44d92c:	add	x0, x20, #0x10
  44d930:	cmp	x19, x0
  44d934:	b.eq	44da20 <argp_parse@@Base+0xdc40>  // b.none
  44d938:	mov	x0, x19
  44d93c:	mov	x1, #0x10                  	// #16
  44d940:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44d944:	mov	x19, x0
  44d948:	str	x0, [x21, #1048]
  44d94c:	ldr	w0, [x20, #8]
  44d950:	mov	w21, #0x1                   	// #1
  44d954:	mov	w1, #0x0                   	// #0
  44d958:	sub	w2, w21, w0
  44d95c:	add	x0, x19, w0, sxtw #4
  44d960:	sbfiz	x2, x2, #4, #32
  44d964:	bl	404410 <memset@plt>
  44d968:	str	w21, [x20, #8]
  44d96c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44d970:	add	x20, x20, #0xe60
  44d974:	ldp	x21, x22, [x19]
  44d978:	add	x6, x20, #0x108
  44d97c:	ldp	x7, x0, [x20, #296]
  44d980:	mov	x2, x24
  44d984:	ldr	w4, [x20, #256]
  44d988:	mov	x3, #0xffffffffffffffff    	// #-1
  44d98c:	ldr	w26, [x20, #260]
  44d990:	str	x0, [sp]
  44d994:	mov	x1, x21
  44d998:	orr	w26, w26, #0x1
  44d99c:	mov	x0, x22
  44d9a0:	mov	w5, w26
  44d9a4:	bl	44be58 <argp_parse@@Base+0xc078>
  44d9a8:	cmp	x21, x0
  44d9ac:	b.hi	44d9fc <argp_parse@@Base+0xdc1c>  // b.pmore
  44d9b0:	add	x21, x0, #0x1
  44d9b4:	str	x21, [x19]
  44d9b8:	cmp	x22, x20
  44d9bc:	b.eq	44d9c8 <argp_parse@@Base+0xdbe8>  // b.none
  44d9c0:	mov	x0, x22
  44d9c4:	bl	4047b0 <free@plt>
  44d9c8:	mov	x0, x21
  44d9cc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44d9d0:	ldp	x7, x1, [x20, #296]
  44d9d4:	str	x0, [x19, #8]
  44d9d8:	ldr	w4, [x20, #256]
  44d9dc:	mov	x22, x0
  44d9e0:	str	x1, [sp]
  44d9e4:	mov	w5, w26
  44d9e8:	mov	x2, x24
  44d9ec:	add	x6, x20, #0x108
  44d9f0:	mov	x1, x21
  44d9f4:	mov	x3, #0xffffffffffffffff    	// #-1
  44d9f8:	bl	44be58 <argp_parse@@Base+0xc078>
  44d9fc:	mov	x0, x22
  44da00:	ldp	x29, x30, [sp, #16]
  44da04:	ldp	x19, x20, [sp, #32]
  44da08:	ldp	x21, x22, [sp, #48]
  44da0c:	str	w25, [x23]
  44da10:	ldp	x23, x24, [sp, #64]
  44da14:	ldp	x25, x26, [sp, #80]
  44da18:	add	sp, sp, #0x60
  44da1c:	ret
  44da20:	mov	x1, #0x10                  	// #16
  44da24:	mov	x0, #0x0                   	// #0
  44da28:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44da2c:	mov	x19, x0
  44da30:	str	x0, [x21, #1048]
  44da34:	ldp	x0, x1, [x20, #16]
  44da38:	stp	x0, x1, [x19]
  44da3c:	b	44d94c <argp_parse@@Base+0xdb6c>
  44da40:	sub	sp, sp, #0x70
  44da44:	stp	x29, x30, [sp, #16]
  44da48:	add	x29, sp, #0x10
  44da4c:	stp	x19, x20, [sp, #32]
  44da50:	stp	x21, x22, [sp, #48]
  44da54:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44da58:	add	x20, x21, #0x418
  44da5c:	stp	x23, x24, [sp, #64]
  44da60:	mov	x23, x0
  44da64:	mov	x24, x1
  44da68:	stp	x25, x26, [sp, #80]
  44da6c:	str	x27, [sp, #96]
  44da70:	bl	404ad0 <__errno_location@plt>
  44da74:	mov	x22, x0
  44da78:	ldr	w0, [x20, #8]
  44da7c:	ldr	x19, [x21, #1048]
  44da80:	cmp	w0, #0x0
  44da84:	ldr	w25, [x22]
  44da88:	b.gt	44dacc <argp_parse@@Base+0xdcec>
  44da8c:	add	x0, x20, #0x10
  44da90:	cmp	x19, x0
  44da94:	b.eq	44db84 <argp_parse@@Base+0xdda4>  // b.none
  44da98:	mov	x0, x19
  44da9c:	mov	x1, #0x10                  	// #16
  44daa0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44daa4:	mov	x19, x0
  44daa8:	str	x0, [x21, #1048]
  44daac:	ldr	w0, [x20, #8]
  44dab0:	mov	w21, #0x1                   	// #1
  44dab4:	mov	w1, #0x0                   	// #0
  44dab8:	sub	w2, w21, w0
  44dabc:	add	x0, x19, w0, sxtw #4
  44dac0:	sbfiz	x2, x2, #4, #32
  44dac4:	bl	404410 <memset@plt>
  44dac8:	str	w21, [x20, #8]
  44dacc:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44dad0:	add	x20, x20, #0xe60
  44dad4:	ldp	x21, x26, [x19]
  44dad8:	add	x6, x20, #0x108
  44dadc:	ldp	x7, x0, [x20, #296]
  44dae0:	mov	x3, x24
  44dae4:	ldr	w4, [x20, #256]
  44dae8:	mov	x2, x23
  44daec:	ldr	w27, [x20, #260]
  44daf0:	str	x0, [sp]
  44daf4:	mov	x1, x21
  44daf8:	orr	w27, w27, #0x1
  44dafc:	mov	x0, x26
  44db00:	mov	w5, w27
  44db04:	bl	44be58 <argp_parse@@Base+0xc078>
  44db08:	cmp	x21, x0
  44db0c:	b.hi	44db5c <argp_parse@@Base+0xdd7c>  // b.pmore
  44db10:	add	x21, x0, #0x1
  44db14:	str	x21, [x19]
  44db18:	cmp	x26, x20
  44db1c:	b.eq	44db28 <argp_parse@@Base+0xdd48>  // b.none
  44db20:	mov	x0, x26
  44db24:	bl	4047b0 <free@plt>
  44db28:	mov	x0, x21
  44db2c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44db30:	ldp	x7, x1, [x20, #296]
  44db34:	str	x0, [x19, #8]
  44db38:	ldr	w4, [x20, #256]
  44db3c:	mov	x26, x0
  44db40:	str	x1, [sp]
  44db44:	mov	w5, w27
  44db48:	mov	x3, x24
  44db4c:	mov	x2, x23
  44db50:	add	x6, x20, #0x108
  44db54:	mov	x1, x21
  44db58:	bl	44be58 <argp_parse@@Base+0xc078>
  44db5c:	mov	x0, x26
  44db60:	ldp	x29, x30, [sp, #16]
  44db64:	ldp	x19, x20, [sp, #32]
  44db68:	ldp	x23, x24, [sp, #64]
  44db6c:	ldr	x27, [sp, #96]
  44db70:	str	w25, [x22]
  44db74:	ldp	x21, x22, [sp, #48]
  44db78:	ldp	x25, x26, [sp, #80]
  44db7c:	add	sp, sp, #0x70
  44db80:	ret
  44db84:	mov	x1, #0x10                  	// #16
  44db88:	mov	x0, #0x0                   	// #0
  44db8c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44db90:	mov	x19, x0
  44db94:	str	x0, [x21, #1048]
  44db98:	ldp	x0, x1, [x20, #16]
  44db9c:	stp	x0, x1, [x19]
  44dba0:	b	44daac <argp_parse@@Base+0xdccc>
  44dba4:	nop
  44dba8:	stp	x29, x30, [sp, #-128]!
  44dbac:	cmp	w1, #0xa
  44dbb0:	mov	x29, sp
  44dbb4:	stp	xzr, xzr, [sp, #72]
  44dbb8:	b.eq	44dbf0 <argp_parse@@Base+0xde10>  // b.none
  44dbbc:	mov	w3, w1
  44dbc0:	str	w3, [sp, #72]
  44dbc4:	mov	x1, x2
  44dbc8:	add	x3, sp, #0x10
  44dbcc:	ldp	x4, x5, [sp, #72]
  44dbd0:	mov	x2, #0xffffffffffffffff    	// #-1
  44dbd4:	stp	x4, x5, [sp, #16]
  44dbd8:	stp	xzr, xzr, [sp, #32]
  44dbdc:	stp	xzr, xzr, [sp, #48]
  44dbe0:	str	xzr, [sp, #64]
  44dbe4:	bl	44cff8 <argp_parse@@Base+0xd218>
  44dbe8:	ldp	x29, x30, [sp], #128
  44dbec:	ret
  44dbf0:	bl	404650 <abort@plt>
  44dbf4:	nop
  44dbf8:	stp	x29, x30, [sp, #-128]!
  44dbfc:	cmp	w1, #0xa
  44dc00:	mov	x29, sp
  44dc04:	stp	xzr, xzr, [sp, #72]
  44dc08:	b.eq	44dc40 <argp_parse@@Base+0xde60>  // b.none
  44dc0c:	mov	w4, w1
  44dc10:	str	w4, [sp, #72]
  44dc14:	mov	x1, x2
  44dc18:	mov	x2, x3
  44dc1c:	ldp	x4, x5, [sp, #72]
  44dc20:	add	x3, sp, #0x10
  44dc24:	stp	x4, x5, [sp, #16]
  44dc28:	stp	xzr, xzr, [sp, #32]
  44dc2c:	stp	xzr, xzr, [sp, #48]
  44dc30:	str	xzr, [sp, #64]
  44dc34:	bl	44cff8 <argp_parse@@Base+0xd218>
  44dc38:	ldp	x29, x30, [sp], #128
  44dc3c:	ret
  44dc40:	bl	404650 <abort@plt>
  44dc44:	nop
  44dc48:	sub	sp, sp, #0xd0
  44dc4c:	cmp	w0, #0xa
  44dc50:	stp	x29, x30, [sp, #16]
  44dc54:	add	x29, sp, #0x10
  44dc58:	stp	x19, x20, [sp, #32]
  44dc5c:	stp	x21, x22, [sp, #48]
  44dc60:	stp	x23, x24, [sp, #64]
  44dc64:	str	x25, [sp, #80]
  44dc68:	stp	xzr, xzr, [sp, #152]
  44dc6c:	stp	xzr, xzr, [sp, #168]
  44dc70:	stp	xzr, xzr, [sp, #184]
  44dc74:	str	xzr, [sp, #200]
  44dc78:	b.eq	44ddcc <argp_parse@@Base+0xdfec>  // b.none
  44dc7c:	str	w0, [sp, #152]
  44dc80:	mov	x23, x1
  44dc84:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44dc88:	add	x20, x21, #0x418
  44dc8c:	ldp	x0, x1, [sp, #152]
  44dc90:	stp	x0, x1, [sp, #96]
  44dc94:	stp	xzr, xzr, [sp, #112]
  44dc98:	stp	xzr, xzr, [sp, #128]
  44dc9c:	str	xzr, [sp, #144]
  44dca0:	bl	404ad0 <__errno_location@plt>
  44dca4:	ldr	w1, [x20, #8]
  44dca8:	mov	x22, x0
  44dcac:	ldr	x19, [x21, #1048]
  44dcb0:	cmp	w1, #0x0
  44dcb4:	ldr	w25, [x0]
  44dcb8:	b.gt	44dcfc <argp_parse@@Base+0xdf1c>
  44dcbc:	add	x0, x20, #0x10
  44dcc0:	cmp	x19, x0
  44dcc4:	b.eq	44ddac <argp_parse@@Base+0xdfcc>  // b.none
  44dcc8:	mov	x0, x19
  44dccc:	mov	x1, #0x10                  	// #16
  44dcd0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44dcd4:	mov	x19, x0
  44dcd8:	str	x0, [x21, #1048]
  44dcdc:	ldr	w0, [x20, #8]
  44dce0:	mov	w21, #0x1                   	// #1
  44dce4:	mov	w1, #0x0                   	// #0
  44dce8:	sub	w2, w21, w0
  44dcec:	add	x0, x19, w0, sxtw #4
  44dcf0:	sbfiz	x2, x2, #4, #32
  44dcf4:	bl	404410 <memset@plt>
  44dcf8:	str	w21, [x20, #8]
  44dcfc:	ldp	x20, x21, [x19]
  44dd00:	add	x6, sp, #0x68
  44dd04:	ldp	x7, x0, [sp, #136]
  44dd08:	str	x0, [sp]
  44dd0c:	ldp	w4, w24, [sp, #96]
  44dd10:	mov	x2, x23
  44dd14:	mov	x1, x20
  44dd18:	mov	x0, x21
  44dd1c:	orr	w24, w24, #0x1
  44dd20:	mov	x3, #0xffffffffffffffff    	// #-1
  44dd24:	mov	w5, w24
  44dd28:	bl	44be58 <argp_parse@@Base+0xc078>
  44dd2c:	cmp	x20, x0
  44dd30:	b.hi	44dd88 <argp_parse@@Base+0xdfa8>  // b.pmore
  44dd34:	add	x20, x0, #0x1
  44dd38:	str	x20, [x19]
  44dd3c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44dd40:	add	x0, x0, #0xe60
  44dd44:	cmp	x21, x0
  44dd48:	b.eq	44dd54 <argp_parse@@Base+0xdf74>  // b.none
  44dd4c:	mov	x0, x21
  44dd50:	bl	4047b0 <free@plt>
  44dd54:	mov	x0, x20
  44dd58:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44dd5c:	ldp	x7, x1, [sp, #136]
  44dd60:	str	x0, [x19, #8]
  44dd64:	ldr	w4, [sp, #96]
  44dd68:	mov	x21, x0
  44dd6c:	str	x1, [sp]
  44dd70:	add	x6, sp, #0x68
  44dd74:	mov	w5, w24
  44dd78:	mov	x2, x23
  44dd7c:	mov	x1, x20
  44dd80:	mov	x3, #0xffffffffffffffff    	// #-1
  44dd84:	bl	44be58 <argp_parse@@Base+0xc078>
  44dd88:	ldp	x29, x30, [sp, #16]
  44dd8c:	mov	x0, x21
  44dd90:	ldp	x19, x20, [sp, #32]
  44dd94:	ldp	x23, x24, [sp, #64]
  44dd98:	str	w25, [x22]
  44dd9c:	ldp	x21, x22, [sp, #48]
  44dda0:	ldr	x25, [sp, #80]
  44dda4:	add	sp, sp, #0xd0
  44dda8:	ret
  44ddac:	mov	x1, #0x10                  	// #16
  44ddb0:	mov	x0, #0x0                   	// #0
  44ddb4:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44ddb8:	mov	x19, x0
  44ddbc:	str	x0, [x21, #1048]
  44ddc0:	ldp	x0, x1, [x20, #16]
  44ddc4:	stp	x0, x1, [x19]
  44ddc8:	b	44dcdc <argp_parse@@Base+0xdefc>
  44ddcc:	bl	404650 <abort@plt>
  44ddd0:	sub	sp, sp, #0xd0
  44ddd4:	cmp	w0, #0xa
  44ddd8:	stp	x29, x30, [sp, #16]
  44dddc:	add	x29, sp, #0x10
  44dde0:	stp	x19, x20, [sp, #32]
  44dde4:	stp	x21, x22, [sp, #48]
  44dde8:	stp	x23, x24, [sp, #64]
  44ddec:	stp	x25, x26, [sp, #80]
  44ddf0:	stp	xzr, xzr, [sp, #152]
  44ddf4:	stp	xzr, xzr, [sp, #168]
  44ddf8:	stp	xzr, xzr, [sp, #184]
  44ddfc:	str	xzr, [sp, #200]
  44de00:	b.eq	44df58 <argp_parse@@Base+0xe178>  // b.none
  44de04:	str	w0, [sp, #152]
  44de08:	mov	x23, x1
  44de0c:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44de10:	add	x20, x21, #0x418
  44de14:	ldp	x0, x1, [sp, #152]
  44de18:	mov	x24, x2
  44de1c:	stp	x0, x1, [sp, #96]
  44de20:	stp	xzr, xzr, [sp, #112]
  44de24:	stp	xzr, xzr, [sp, #128]
  44de28:	str	xzr, [sp, #144]
  44de2c:	bl	404ad0 <__errno_location@plt>
  44de30:	ldr	w1, [x20, #8]
  44de34:	mov	x22, x0
  44de38:	ldr	x19, [x21, #1048]
  44de3c:	cmp	w1, #0x0
  44de40:	ldr	w25, [x0]
  44de44:	b.gt	44de88 <argp_parse@@Base+0xe0a8>
  44de48:	add	x0, x20, #0x10
  44de4c:	cmp	x19, x0
  44de50:	b.eq	44df38 <argp_parse@@Base+0xe158>  // b.none
  44de54:	mov	x0, x19
  44de58:	mov	x1, #0x10                  	// #16
  44de5c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44de60:	mov	x19, x0
  44de64:	str	x0, [x21, #1048]
  44de68:	ldr	w0, [x20, #8]
  44de6c:	mov	w21, #0x1                   	// #1
  44de70:	mov	w1, #0x0                   	// #0
  44de74:	sub	w2, w21, w0
  44de78:	add	x0, x19, w0, sxtw #4
  44de7c:	sbfiz	x2, x2, #4, #32
  44de80:	bl	404410 <memset@plt>
  44de84:	str	w21, [x20, #8]
  44de88:	ldp	x20, x21, [x19]
  44de8c:	add	x6, sp, #0x68
  44de90:	ldp	x7, x0, [sp, #136]
  44de94:	str	x0, [sp]
  44de98:	ldp	w4, w26, [sp, #96]
  44de9c:	mov	x3, x24
  44dea0:	mov	x2, x23
  44dea4:	mov	x1, x20
  44dea8:	orr	w26, w26, #0x1
  44deac:	mov	x0, x21
  44deb0:	mov	w5, w26
  44deb4:	bl	44be58 <argp_parse@@Base+0xc078>
  44deb8:	cmp	x20, x0
  44debc:	b.hi	44df14 <argp_parse@@Base+0xe134>  // b.pmore
  44dec0:	add	x20, x0, #0x1
  44dec4:	str	x20, [x19]
  44dec8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44decc:	add	x0, x0, #0xe60
  44ded0:	cmp	x21, x0
  44ded4:	b.eq	44dee0 <argp_parse@@Base+0xe100>  // b.none
  44ded8:	mov	x0, x21
  44dedc:	bl	4047b0 <free@plt>
  44dee0:	mov	x0, x20
  44dee4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44dee8:	ldp	x7, x1, [sp, #136]
  44deec:	str	x0, [x19, #8]
  44def0:	ldr	w4, [sp, #96]
  44def4:	mov	x21, x0
  44def8:	str	x1, [sp]
  44defc:	add	x6, sp, #0x68
  44df00:	mov	w5, w26
  44df04:	mov	x3, x24
  44df08:	mov	x2, x23
  44df0c:	mov	x1, x20
  44df10:	bl	44be58 <argp_parse@@Base+0xc078>
  44df14:	ldp	x29, x30, [sp, #16]
  44df18:	mov	x0, x21
  44df1c:	ldp	x19, x20, [sp, #32]
  44df20:	ldp	x23, x24, [sp, #64]
  44df24:	str	w25, [x22]
  44df28:	ldp	x21, x22, [sp, #48]
  44df2c:	ldp	x25, x26, [sp, #80]
  44df30:	add	sp, sp, #0xd0
  44df34:	ret
  44df38:	mov	x1, #0x10                  	// #16
  44df3c:	mov	x0, #0x0                   	// #0
  44df40:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44df44:	mov	x19, x0
  44df48:	str	x0, [x21, #1048]
  44df4c:	ldp	x0, x1, [x20, #16]
  44df50:	stp	x0, x1, [x19]
  44df54:	b	44de68 <argp_parse@@Base+0xe088>
  44df58:	bl	404650 <abort@plt>
  44df5c:	nop
  44df60:	sub	sp, sp, #0xb0
  44df64:	ubfx	x6, x2, #5, #3
  44df68:	add	x5, sp, #0x80
  44df6c:	and	w2, w2, #0x1f
  44df70:	stp	x29, x30, [sp, #16]
  44df74:	add	x29, sp, #0x10
  44df78:	stp	x19, x20, [sp, #32]
  44df7c:	adrp	x20, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44df80:	add	x20, x20, #0xe60
  44df84:	stp	x21, x22, [sp, #48]
  44df88:	mov	x22, x1
  44df8c:	mov	x21, x0
  44df90:	ldp	x8, x9, [x20, #256]
  44df94:	stp	x8, x9, [sp, #120]
  44df98:	ldp	x8, x9, [x20, #272]
  44df9c:	stp	x8, x9, [sp, #136]
  44dfa0:	ldp	x8, x9, [x20, #288]
  44dfa4:	stp	x8, x9, [sp, #152]
  44dfa8:	ldr	x3, [x20, #304]
  44dfac:	str	x3, [sp, #168]
  44dfb0:	stp	x23, x24, [sp, #64]
  44dfb4:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44dfb8:	ldr	w4, [x5, x6, lsl #2]
  44dfbc:	stp	x25, x26, [sp, #80]
  44dfc0:	add	x23, x24, #0x418
  44dfc4:	lsr	w3, w4, w2
  44dfc8:	mvn	w3, w3
  44dfcc:	and	w3, w3, #0x1
  44dfd0:	str	x27, [sp, #96]
  44dfd4:	lsl	w3, w3, w2
  44dfd8:	eor	w3, w3, w4
  44dfdc:	str	w3, [x5, x6, lsl #2]
  44dfe0:	bl	404ad0 <__errno_location@plt>
  44dfe4:	ldr	w26, [x0]
  44dfe8:	ldr	w1, [x23, #8]
  44dfec:	mov	x25, x0
  44dff0:	ldr	x19, [x24, #1048]
  44dff4:	cmp	w1, #0x0
  44dff8:	b.gt	44e03c <argp_parse@@Base+0xe25c>
  44dffc:	add	x0, x23, #0x10
  44e000:	cmp	x19, x0
  44e004:	b.eq	44e0e8 <argp_parse@@Base+0xe308>  // b.none
  44e008:	mov	x0, x19
  44e00c:	mov	x1, #0x10                  	// #16
  44e010:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e014:	mov	x19, x0
  44e018:	str	x0, [x24, #1048]
  44e01c:	ldr	w0, [x23, #8]
  44e020:	mov	w24, #0x1                   	// #1
  44e024:	mov	w1, #0x0                   	// #0
  44e028:	sub	w2, w24, w0
  44e02c:	add	x0, x19, w0, sxtw #4
  44e030:	sbfiz	x2, x2, #4, #32
  44e034:	bl	404410 <memset@plt>
  44e038:	str	w24, [x23, #8]
  44e03c:	ldp	x23, x24, [x19]
  44e040:	add	x6, sp, #0x80
  44e044:	ldp	x7, x0, [sp, #160]
  44e048:	str	x0, [sp]
  44e04c:	ldp	w4, w27, [sp, #120]
  44e050:	mov	x3, x22
  44e054:	mov	x2, x21
  44e058:	mov	x1, x23
  44e05c:	orr	w27, w27, #0x1
  44e060:	mov	x0, x24
  44e064:	mov	w5, w27
  44e068:	bl	44be58 <argp_parse@@Base+0xc078>
  44e06c:	cmp	x23, x0
  44e070:	b.hi	44e0c0 <argp_parse@@Base+0xe2e0>  // b.pmore
  44e074:	add	x23, x0, #0x1
  44e078:	str	x23, [x19]
  44e07c:	cmp	x24, x20
  44e080:	b.eq	44e08c <argp_parse@@Base+0xe2ac>  // b.none
  44e084:	mov	x0, x24
  44e088:	bl	4047b0 <free@plt>
  44e08c:	mov	x0, x23
  44e090:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44e094:	ldp	x7, x1, [sp, #160]
  44e098:	str	x0, [x19, #8]
  44e09c:	ldr	w4, [sp, #120]
  44e0a0:	mov	x24, x0
  44e0a4:	str	x1, [sp]
  44e0a8:	add	x6, sp, #0x80
  44e0ac:	mov	w5, w27
  44e0b0:	mov	x3, x22
  44e0b4:	mov	x2, x21
  44e0b8:	mov	x1, x23
  44e0bc:	bl	44be58 <argp_parse@@Base+0xc078>
  44e0c0:	mov	x0, x24
  44e0c4:	ldp	x29, x30, [sp, #16]
  44e0c8:	ldp	x19, x20, [sp, #32]
  44e0cc:	ldp	x21, x22, [sp, #48]
  44e0d0:	ldp	x23, x24, [sp, #64]
  44e0d4:	ldr	x27, [sp, #96]
  44e0d8:	str	w26, [x25]
  44e0dc:	ldp	x25, x26, [sp, #80]
  44e0e0:	add	sp, sp, #0xb0
  44e0e4:	ret
  44e0e8:	mov	x1, #0x10                  	// #16
  44e0ec:	mov	x0, #0x0                   	// #0
  44e0f0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e0f4:	mov	x19, x0
  44e0f8:	str	x0, [x24, #1048]
  44e0fc:	ldp	x0, x1, [x23, #16]
  44e100:	stp	x0, x1, [x19]
  44e104:	b	44e01c <argp_parse@@Base+0xe23c>
  44e108:	sub	sp, sp, #0xa0
  44e10c:	ubfx	x5, x1, #5, #3
  44e110:	add	x4, sp, #0x70
  44e114:	and	w1, w1, #0x1f
  44e118:	stp	x29, x30, [sp, #16]
  44e11c:	add	x29, sp, #0x10
  44e120:	stp	x21, x22, [sp, #48]
  44e124:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e128:	add	x21, x21, #0xe60
  44e12c:	mov	x22, x0
  44e130:	stp	x19, x20, [sp, #32]
  44e134:	ldp	x6, x7, [x21, #256]
  44e138:	stp	x6, x7, [sp, #104]
  44e13c:	ldp	x6, x7, [x21, #272]
  44e140:	stp	x6, x7, [sp, #120]
  44e144:	ldp	x6, x7, [x21, #288]
  44e148:	stp	x6, x7, [sp, #136]
  44e14c:	ldr	x2, [x21, #304]
  44e150:	str	x2, [sp, #152]
  44e154:	stp	x23, x24, [sp, #64]
  44e158:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e15c:	ldr	w0, [x4, x5, lsl #2]
  44e160:	stp	x25, x26, [sp, #80]
  44e164:	add	x20, x23, #0x418
  44e168:	lsr	w2, w0, w1
  44e16c:	mvn	w2, w2
  44e170:	and	w2, w2, #0x1
  44e174:	lsl	w2, w2, w1
  44e178:	eor	w2, w2, w0
  44e17c:	str	w2, [x4, x5, lsl #2]
  44e180:	bl	404ad0 <__errno_location@plt>
  44e184:	ldr	w25, [x0]
  44e188:	ldr	w1, [x20, #8]
  44e18c:	mov	x24, x0
  44e190:	ldr	x19, [x23, #1048]
  44e194:	cmp	w1, #0x0
  44e198:	b.gt	44e1dc <argp_parse@@Base+0xe3fc>
  44e19c:	add	x0, x20, #0x10
  44e1a0:	cmp	x19, x0
  44e1a4:	b.eq	44e284 <argp_parse@@Base+0xe4a4>  // b.none
  44e1a8:	mov	x0, x19
  44e1ac:	mov	x1, #0x10                  	// #16
  44e1b0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e1b4:	mov	x19, x0
  44e1b8:	str	x0, [x23, #1048]
  44e1bc:	ldr	w0, [x20, #8]
  44e1c0:	mov	w23, #0x1                   	// #1
  44e1c4:	mov	w1, #0x0                   	// #0
  44e1c8:	sub	w2, w23, w0
  44e1cc:	add	x0, x19, w0, sxtw #4
  44e1d0:	sbfiz	x2, x2, #4, #32
  44e1d4:	bl	404410 <memset@plt>
  44e1d8:	str	w23, [x20, #8]
  44e1dc:	ldp	x20, x23, [x19]
  44e1e0:	add	x6, sp, #0x70
  44e1e4:	ldp	x7, x0, [sp, #144]
  44e1e8:	str	x0, [sp]
  44e1ec:	ldp	w4, w26, [sp, #104]
  44e1f0:	mov	x2, x22
  44e1f4:	mov	x1, x20
  44e1f8:	mov	x0, x23
  44e1fc:	orr	w26, w26, #0x1
  44e200:	mov	x3, #0xffffffffffffffff    	// #-1
  44e204:	mov	w5, w26
  44e208:	bl	44be58 <argp_parse@@Base+0xc078>
  44e20c:	cmp	x20, x0
  44e210:	b.hi	44e260 <argp_parse@@Base+0xe480>  // b.pmore
  44e214:	add	x20, x0, #0x1
  44e218:	str	x20, [x19]
  44e21c:	cmp	x23, x21
  44e220:	b.eq	44e22c <argp_parse@@Base+0xe44c>  // b.none
  44e224:	mov	x0, x23
  44e228:	bl	4047b0 <free@plt>
  44e22c:	mov	x0, x20
  44e230:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44e234:	ldp	x7, x1, [sp, #144]
  44e238:	str	x0, [x19, #8]
  44e23c:	ldr	w4, [sp, #104]
  44e240:	mov	x23, x0
  44e244:	str	x1, [sp]
  44e248:	add	x6, sp, #0x70
  44e24c:	mov	w5, w26
  44e250:	mov	x2, x22
  44e254:	mov	x1, x20
  44e258:	mov	x3, #0xffffffffffffffff    	// #-1
  44e25c:	bl	44be58 <argp_parse@@Base+0xc078>
  44e260:	ldp	x29, x30, [sp, #16]
  44e264:	mov	x0, x23
  44e268:	ldp	x19, x20, [sp, #32]
  44e26c:	ldp	x21, x22, [sp, #48]
  44e270:	str	w25, [x24]
  44e274:	ldp	x23, x24, [sp, #64]
  44e278:	ldp	x25, x26, [sp, #80]
  44e27c:	add	sp, sp, #0xa0
  44e280:	ret
  44e284:	mov	x1, #0x10                  	// #16
  44e288:	mov	x0, #0x0                   	// #0
  44e28c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e290:	mov	x19, x0
  44e294:	str	x0, [x23, #1048]
  44e298:	ldp	x0, x1, [x20, #16]
  44e29c:	stp	x0, x1, [x19]
  44e2a0:	b	44e1bc <argp_parse@@Base+0xe3dc>
  44e2a4:	nop
  44e2a8:	sub	sp, sp, #0xa0
  44e2ac:	stp	x29, x30, [sp, #16]
  44e2b0:	add	x29, sp, #0x10
  44e2b4:	stp	x23, x24, [sp, #64]
  44e2b8:	adrp	x23, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e2bc:	add	x23, x23, #0xe60
  44e2c0:	stp	x21, x22, [sp, #48]
  44e2c4:	mov	x22, x0
  44e2c8:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e2cc:	ldp	x4, x5, [x23, #256]
  44e2d0:	stp	x4, x5, [sp, #104]
  44e2d4:	ldr	w0, [sp, #116]
  44e2d8:	ldp	x4, x5, [x23, #272]
  44e2dc:	stp	x4, x5, [sp, #120]
  44e2e0:	mvn	w1, w0, lsr #26
  44e2e4:	ldp	x4, x5, [x23, #288]
  44e2e8:	ubfiz	w1, w1, #26, #1
  44e2ec:	ldr	x2, [x23, #304]
  44e2f0:	eor	w1, w1, w0
  44e2f4:	stp	x19, x20, [sp, #32]
  44e2f8:	add	x20, x21, #0x418
  44e2fc:	stp	x25, x26, [sp, #80]
  44e300:	str	w1, [sp, #116]
  44e304:	stp	x4, x5, [sp, #136]
  44e308:	str	x2, [sp, #152]
  44e30c:	bl	404ad0 <__errno_location@plt>
  44e310:	ldr	w1, [x20, #8]
  44e314:	mov	x24, x0
  44e318:	ldr	x19, [x21, #1048]
  44e31c:	cmp	w1, #0x0
  44e320:	ldr	w25, [x0]
  44e324:	b.gt	44e368 <argp_parse@@Base+0xe588>
  44e328:	add	x0, x20, #0x10
  44e32c:	cmp	x19, x0
  44e330:	b.eq	44e410 <argp_parse@@Base+0xe630>  // b.none
  44e334:	mov	x0, x19
  44e338:	mov	x1, #0x10                  	// #16
  44e33c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e340:	mov	x19, x0
  44e344:	str	x0, [x21, #1048]
  44e348:	ldr	w0, [x20, #8]
  44e34c:	mov	w21, #0x1                   	// #1
  44e350:	mov	w1, #0x0                   	// #0
  44e354:	sub	w2, w21, w0
  44e358:	add	x0, x19, w0, sxtw #4
  44e35c:	sbfiz	x2, x2, #4, #32
  44e360:	bl	404410 <memset@plt>
  44e364:	str	w21, [x20, #8]
  44e368:	ldp	x20, x21, [x19]
  44e36c:	add	x6, sp, #0x70
  44e370:	ldp	x7, x0, [sp, #144]
  44e374:	str	x0, [sp]
  44e378:	ldp	w4, w26, [sp, #104]
  44e37c:	mov	x2, x22
  44e380:	mov	x1, x20
  44e384:	mov	x0, x21
  44e388:	orr	w26, w26, #0x1
  44e38c:	mov	x3, #0xffffffffffffffff    	// #-1
  44e390:	mov	w5, w26
  44e394:	bl	44be58 <argp_parse@@Base+0xc078>
  44e398:	cmp	x20, x0
  44e39c:	b.hi	44e3ec <argp_parse@@Base+0xe60c>  // b.pmore
  44e3a0:	add	x20, x0, #0x1
  44e3a4:	str	x20, [x19]
  44e3a8:	cmp	x21, x23
  44e3ac:	b.eq	44e3b8 <argp_parse@@Base+0xe5d8>  // b.none
  44e3b0:	mov	x0, x21
  44e3b4:	bl	4047b0 <free@plt>
  44e3b8:	mov	x0, x20
  44e3bc:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44e3c0:	ldp	x7, x1, [sp, #144]
  44e3c4:	str	x0, [x19, #8]
  44e3c8:	ldr	w4, [sp, #104]
  44e3cc:	mov	x21, x0
  44e3d0:	str	x1, [sp]
  44e3d4:	add	x6, sp, #0x70
  44e3d8:	mov	w5, w26
  44e3dc:	mov	x2, x22
  44e3e0:	mov	x1, x20
  44e3e4:	mov	x3, #0xffffffffffffffff    	// #-1
  44e3e8:	bl	44be58 <argp_parse@@Base+0xc078>
  44e3ec:	mov	x0, x21
  44e3f0:	ldp	x29, x30, [sp, #16]
  44e3f4:	ldp	x19, x20, [sp, #32]
  44e3f8:	ldp	x21, x22, [sp, #48]
  44e3fc:	str	w25, [x24]
  44e400:	ldp	x23, x24, [sp, #64]
  44e404:	ldp	x25, x26, [sp, #80]
  44e408:	add	sp, sp, #0xa0
  44e40c:	ret
  44e410:	mov	x1, #0x10                  	// #16
  44e414:	mov	x0, #0x0                   	// #0
  44e418:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e41c:	mov	x19, x0
  44e420:	str	x0, [x21, #1048]
  44e424:	ldp	x0, x1, [x20, #16]
  44e428:	stp	x0, x1, [x19]
  44e42c:	b	44e348 <argp_parse@@Base+0xe568>
  44e430:	sub	sp, sp, #0xb0
  44e434:	stp	x29, x30, [sp, #16]
  44e438:	add	x29, sp, #0x10
  44e43c:	stp	x21, x22, [sp, #48]
  44e440:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e444:	add	x21, x21, #0xe60
  44e448:	mov	x22, x0
  44e44c:	stp	x19, x20, [sp, #32]
  44e450:	ldp	x4, x5, [x21, #256]
  44e454:	stp	x4, x5, [sp, #120]
  44e458:	ldr	w4, [sp, #132]
  44e45c:	ldp	x6, x7, [x21, #272]
  44e460:	stp	x6, x7, [sp, #136]
  44e464:	mvn	w2, w4, lsr #26
  44e468:	ldp	x6, x7, [x21, #288]
  44e46c:	ubfiz	w2, w2, #26, #1
  44e470:	ldr	x0, [x21, #304]
  44e474:	eor	w2, w2, w4
  44e478:	stp	x23, x24, [sp, #64]
  44e47c:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e480:	add	x20, x24, #0x418
  44e484:	mov	x23, x1
  44e488:	stp	x25, x26, [sp, #80]
  44e48c:	str	x27, [sp, #96]
  44e490:	str	w2, [sp, #132]
  44e494:	stp	x6, x7, [sp, #152]
  44e498:	str	x0, [sp, #168]
  44e49c:	bl	404ad0 <__errno_location@plt>
  44e4a0:	ldr	w1, [x20, #8]
  44e4a4:	mov	x25, x0
  44e4a8:	ldr	x19, [x24, #1048]
  44e4ac:	cmp	w1, #0x0
  44e4b0:	ldr	w26, [x0]
  44e4b4:	b.gt	44e4f8 <argp_parse@@Base+0xe718>
  44e4b8:	add	x0, x20, #0x10
  44e4bc:	cmp	x19, x0
  44e4c0:	b.eq	44e5a4 <argp_parse@@Base+0xe7c4>  // b.none
  44e4c4:	mov	x0, x19
  44e4c8:	mov	x1, #0x10                  	// #16
  44e4cc:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e4d0:	mov	x19, x0
  44e4d4:	str	x0, [x24, #1048]
  44e4d8:	ldr	w0, [x20, #8]
  44e4dc:	mov	w24, #0x1                   	// #1
  44e4e0:	mov	w1, #0x0                   	// #0
  44e4e4:	sub	w2, w24, w0
  44e4e8:	add	x0, x19, w0, sxtw #4
  44e4ec:	sbfiz	x2, x2, #4, #32
  44e4f0:	bl	404410 <memset@plt>
  44e4f4:	str	w24, [x20, #8]
  44e4f8:	ldp	x20, x24, [x19]
  44e4fc:	add	x6, sp, #0x80
  44e500:	ldp	x7, x0, [sp, #160]
  44e504:	str	x0, [sp]
  44e508:	ldp	w4, w27, [sp, #120]
  44e50c:	mov	x3, x23
  44e510:	mov	x2, x22
  44e514:	mov	x1, x20
  44e518:	orr	w27, w27, #0x1
  44e51c:	mov	x0, x24
  44e520:	mov	w5, w27
  44e524:	bl	44be58 <argp_parse@@Base+0xc078>
  44e528:	cmp	x20, x0
  44e52c:	b.hi	44e57c <argp_parse@@Base+0xe79c>  // b.pmore
  44e530:	add	x20, x0, #0x1
  44e534:	str	x20, [x19]
  44e538:	cmp	x24, x21
  44e53c:	b.eq	44e548 <argp_parse@@Base+0xe768>  // b.none
  44e540:	mov	x0, x24
  44e544:	bl	4047b0 <free@plt>
  44e548:	mov	x0, x20
  44e54c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44e550:	ldp	x7, x1, [sp, #160]
  44e554:	str	x0, [x19, #8]
  44e558:	ldr	w4, [sp, #120]
  44e55c:	mov	x24, x0
  44e560:	str	x1, [sp]
  44e564:	add	x6, sp, #0x80
  44e568:	mov	w5, w27
  44e56c:	mov	x3, x23
  44e570:	mov	x2, x22
  44e574:	mov	x1, x20
  44e578:	bl	44be58 <argp_parse@@Base+0xc078>
  44e57c:	mov	x0, x24
  44e580:	ldp	x29, x30, [sp, #16]
  44e584:	ldp	x19, x20, [sp, #32]
  44e588:	ldp	x21, x22, [sp, #48]
  44e58c:	ldp	x23, x24, [sp, #64]
  44e590:	ldr	x27, [sp, #96]
  44e594:	str	w26, [x25]
  44e598:	ldp	x25, x26, [sp, #80]
  44e59c:	add	sp, sp, #0xb0
  44e5a0:	ret
  44e5a4:	mov	x1, #0x10                  	// #16
  44e5a8:	mov	x0, #0x0                   	// #0
  44e5ac:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e5b0:	mov	x19, x0
  44e5b4:	str	x0, [x24, #1048]
  44e5b8:	ldp	x0, x1, [x20, #16]
  44e5bc:	stp	x0, x1, [x19]
  44e5c0:	b	44e4d8 <argp_parse@@Base+0xe6f8>
  44e5c4:	nop
  44e5c8:	stp	x29, x30, [sp, #-128]!
  44e5cc:	cmp	w1, #0xa
  44e5d0:	mov	x29, sp
  44e5d4:	stp	xzr, xzr, [sp, #16]
  44e5d8:	stp	xzr, xzr, [sp, #32]
  44e5dc:	stp	xzr, xzr, [sp, #48]
  44e5e0:	str	xzr, [sp, #64]
  44e5e4:	b.eq	44e610 <argp_parse@@Base+0xe830>  // b.none
  44e5e8:	mov	w4, w1
  44e5ec:	mov	w5, #0x4000000             	// #67108864
  44e5f0:	mov	x1, x2
  44e5f4:	add	x3, sp, #0x10
  44e5f8:	mov	x2, #0xffffffffffffffff    	// #-1
  44e5fc:	str	w4, [sp, #16]
  44e600:	str	w5, [sp, #28]
  44e604:	bl	44cff8 <argp_parse@@Base+0xd218>
  44e608:	ldp	x29, x30, [sp], #128
  44e60c:	ret
  44e610:	bl	404650 <abort@plt>
  44e614:	nop
  44e618:	adrp	x4, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e61c:	add	x4, x4, #0xe60
  44e620:	stp	x29, x30, [sp, #-80]!
  44e624:	mov	x5, x1
  44e628:	mov	w1, #0xa                   	// #10
  44e62c:	mov	x29, sp
  44e630:	ldp	x8, x9, [x4, #256]
  44e634:	stp	x8, x9, [sp, #24]
  44e638:	cmp	x5, #0x0
  44e63c:	str	w1, [sp, #24]
  44e640:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  44e644:	ldp	x10, x11, [x4, #272]
  44e648:	stp	x10, x11, [sp, #40]
  44e64c:	ldp	x8, x9, [x4, #288]
  44e650:	stp	x8, x9, [sp, #56]
  44e654:	ldr	x1, [x4, #304]
  44e658:	str	x1, [sp, #72]
  44e65c:	b.eq	44e680 <argp_parse@@Base+0xe8a0>  // b.none
  44e660:	mov	x4, x2
  44e664:	mov	x1, x3
  44e668:	mov	x2, #0xffffffffffffffff    	// #-1
  44e66c:	add	x3, sp, #0x18
  44e670:	stp	x5, x4, [sp, #64]
  44e674:	bl	44cff8 <argp_parse@@Base+0xd218>
  44e678:	ldp	x29, x30, [sp], #80
  44e67c:	ret
  44e680:	bl	404650 <abort@plt>
  44e684:	nop
  44e688:	adrp	x5, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e68c:	add	x5, x5, #0xe60
  44e690:	stp	x29, x30, [sp, #-80]!
  44e694:	mov	x6, x1
  44e698:	mov	w1, #0xa                   	// #10
  44e69c:	mov	x29, sp
  44e6a0:	ldp	x8, x9, [x5, #256]
  44e6a4:	stp	x8, x9, [sp, #24]
  44e6a8:	cmp	x6, #0x0
  44e6ac:	str	w1, [sp, #24]
  44e6b0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  44e6b4:	ldp	x10, x11, [x5, #272]
  44e6b8:	stp	x10, x11, [sp, #40]
  44e6bc:	ldp	x8, x9, [x5, #288]
  44e6c0:	stp	x8, x9, [sp, #56]
  44e6c4:	ldr	x1, [x5, #304]
  44e6c8:	str	x1, [sp, #72]
  44e6cc:	b.eq	44e6f0 <argp_parse@@Base+0xe910>  // b.none
  44e6d0:	mov	x5, x2
  44e6d4:	mov	x1, x3
  44e6d8:	mov	x2, x4
  44e6dc:	add	x3, sp, #0x18
  44e6e0:	stp	x6, x5, [sp, #64]
  44e6e4:	bl	44cff8 <argp_parse@@Base+0xd218>
  44e6e8:	ldp	x29, x30, [sp], #80
  44e6ec:	ret
  44e6f0:	bl	404650 <abort@plt>
  44e6f4:	nop
  44e6f8:	sub	sp, sp, #0xb0
  44e6fc:	cmp	x0, #0x0
  44e700:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  44e704:	stp	x29, x30, [sp, #16]
  44e708:	add	x29, sp, #0x10
  44e70c:	stp	x21, x22, [sp, #48]
  44e710:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e714:	add	x22, x22, #0xe60
  44e718:	mov	x21, x0
  44e71c:	stp	x19, x20, [sp, #32]
  44e720:	mov	w19, #0xa                   	// #10
  44e724:	ldp	x4, x5, [x22, #256]
  44e728:	stp	x4, x5, [sp, #120]
  44e72c:	ldp	x4, x5, [x22, #272]
  44e730:	stp	x23, x24, [sp, #64]
  44e734:	ldp	x6, x7, [x22, #288]
  44e738:	stp	x25, x26, [sp, #80]
  44e73c:	ldr	x0, [x22, #304]
  44e740:	str	x27, [sp, #96]
  44e744:	str	w19, [sp, #120]
  44e748:	stp	x4, x5, [sp, #136]
  44e74c:	stp	x6, x7, [sp, #152]
  44e750:	str	x0, [sp, #168]
  44e754:	b.eq	44e8a4 <argp_parse@@Base+0xeac4>  // b.none
  44e758:	adrp	x27, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e75c:	add	x26, x27, #0x418
  44e760:	mov	x20, x1
  44e764:	mov	x24, x2
  44e768:	stp	x21, x1, [sp, #160]
  44e76c:	bl	404ad0 <__errno_location@plt>
  44e770:	ldr	w1, [x26, #8]
  44e774:	mov	w4, w19
  44e778:	ldr	w25, [x0]
  44e77c:	ldr	x19, [x27, #1048]
  44e780:	mov	x23, x0
  44e784:	cmp	w1, #0x0
  44e788:	b.gt	44e7d8 <argp_parse@@Base+0xe9f8>
  44e78c:	add	x0, x26, #0x10
  44e790:	cmp	x19, x0
  44e794:	b.eq	44e884 <argp_parse@@Base+0xeaa4>  // b.none
  44e798:	mov	x0, x19
  44e79c:	mov	x1, #0x10                  	// #16
  44e7a0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e7a4:	mov	x19, x0
  44e7a8:	str	x0, [x27, #1048]
  44e7ac:	ldr	w0, [x26, #8]
  44e7b0:	mov	w20, #0x1                   	// #1
  44e7b4:	mov	w1, #0x0                   	// #0
  44e7b8:	sub	w2, w20, w0
  44e7bc:	add	x0, x19, w0, sxtw #4
  44e7c0:	sbfiz	x2, x2, #4, #32
  44e7c4:	bl	404410 <memset@plt>
  44e7c8:	ldr	w4, [sp, #120]
  44e7cc:	str	w20, [x26, #8]
  44e7d0:	ldr	x21, [sp, #160]
  44e7d4:	ldr	x20, [sp, #168]
  44e7d8:	mov	x7, x21
  44e7dc:	ldp	x27, x21, [x19]
  44e7e0:	str	x20, [sp]
  44e7e4:	ldr	w26, [sp, #124]
  44e7e8:	add	x6, sp, #0x80
  44e7ec:	mov	x2, x24
  44e7f0:	mov	x3, #0xffffffffffffffff    	// #-1
  44e7f4:	orr	w26, w26, #0x1
  44e7f8:	mov	w5, w26
  44e7fc:	mov	x1, x27
  44e800:	mov	x0, x21
  44e804:	bl	44be58 <argp_parse@@Base+0xc078>
  44e808:	cmp	x27, x0
  44e80c:	b.hi	44e85c <argp_parse@@Base+0xea7c>  // b.pmore
  44e810:	add	x20, x0, #0x1
  44e814:	str	x20, [x19]
  44e818:	cmp	x21, x22
  44e81c:	b.eq	44e828 <argp_parse@@Base+0xea48>  // b.none
  44e820:	mov	x0, x21
  44e824:	bl	4047b0 <free@plt>
  44e828:	mov	x0, x20
  44e82c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44e830:	ldp	x7, x1, [sp, #160]
  44e834:	str	x0, [x19, #8]
  44e838:	ldr	w4, [sp, #120]
  44e83c:	mov	x21, x0
  44e840:	str	x1, [sp]
  44e844:	add	x6, sp, #0x80
  44e848:	mov	w5, w26
  44e84c:	mov	x2, x24
  44e850:	mov	x1, x20
  44e854:	mov	x3, #0xffffffffffffffff    	// #-1
  44e858:	bl	44be58 <argp_parse@@Base+0xc078>
  44e85c:	mov	x0, x21
  44e860:	ldp	x29, x30, [sp, #16]
  44e864:	ldp	x19, x20, [sp, #32]
  44e868:	ldp	x21, x22, [sp, #48]
  44e86c:	ldr	x27, [sp, #96]
  44e870:	str	w25, [x23]
  44e874:	ldp	x23, x24, [sp, #64]
  44e878:	ldp	x25, x26, [sp, #80]
  44e87c:	add	sp, sp, #0xb0
  44e880:	ret
  44e884:	mov	x1, #0x10                  	// #16
  44e888:	mov	x0, #0x0                   	// #0
  44e88c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e890:	mov	x19, x0
  44e894:	str	x0, [x27, #1048]
  44e898:	ldp	x0, x1, [x26, #16]
  44e89c:	stp	x0, x1, [x19]
  44e8a0:	b	44e7ac <argp_parse@@Base+0xe9cc>
  44e8a4:	bl	404650 <abort@plt>
  44e8a8:	sub	sp, sp, #0xb0
  44e8ac:	cmp	x0, #0x0
  44e8b0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  44e8b4:	stp	x29, x30, [sp, #16]
  44e8b8:	add	x29, sp, #0x10
  44e8bc:	stp	x21, x22, [sp, #48]
  44e8c0:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e8c4:	add	x22, x22, #0xe60
  44e8c8:	mov	x21, x0
  44e8cc:	stp	x19, x20, [sp, #32]
  44e8d0:	mov	w19, #0xa                   	// #10
  44e8d4:	ldp	x6, x7, [x22, #256]
  44e8d8:	stp	x6, x7, [sp, #120]
  44e8dc:	add	x4, x22, #0x100
  44e8e0:	ldp	x6, x7, [x4, #16]
  44e8e4:	stp	x23, x24, [sp, #64]
  44e8e8:	ldp	x8, x9, [x4, #32]
  44e8ec:	stp	x25, x26, [sp, #80]
  44e8f0:	ldr	x0, [x4, #48]
  44e8f4:	stp	x27, x28, [sp, #96]
  44e8f8:	str	w19, [sp, #120]
  44e8fc:	stp	x6, x7, [sp, #136]
  44e900:	stp	x8, x9, [sp, #152]
  44e904:	str	x0, [sp, #168]
  44e908:	b.eq	44ea5c <argp_parse@@Base+0xec7c>  // b.none
  44e90c:	adrp	x28, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44e910:	add	x27, x28, #0x418
  44e914:	mov	x20, x1
  44e918:	mov	x24, x2
  44e91c:	mov	x25, x3
  44e920:	stp	x21, x1, [sp, #160]
  44e924:	bl	404ad0 <__errno_location@plt>
  44e928:	ldr	w1, [x27, #8]
  44e92c:	mov	w4, w19
  44e930:	ldr	w26, [x0]
  44e934:	mov	x23, x0
  44e938:	ldr	x19, [x28, #1048]
  44e93c:	cmp	w1, #0x0
  44e940:	b.gt	44e990 <argp_parse@@Base+0xebb0>
  44e944:	add	x0, x27, #0x10
  44e948:	cmp	x19, x0
  44e94c:	b.eq	44ea3c <argp_parse@@Base+0xec5c>  // b.none
  44e950:	mov	x0, x19
  44e954:	mov	x1, #0x10                  	// #16
  44e958:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44e95c:	mov	x19, x0
  44e960:	str	x0, [x28, #1048]
  44e964:	ldr	w0, [x27, #8]
  44e968:	mov	w20, #0x1                   	// #1
  44e96c:	mov	w1, #0x0                   	// #0
  44e970:	sub	w2, w20, w0
  44e974:	add	x0, x19, w0, sxtw #4
  44e978:	sbfiz	x2, x2, #4, #32
  44e97c:	bl	404410 <memset@plt>
  44e980:	ldr	w4, [sp, #120]
  44e984:	str	w20, [x27, #8]
  44e988:	ldr	x21, [sp, #160]
  44e98c:	ldr	x20, [sp, #168]
  44e990:	mov	x7, x21
  44e994:	ldp	x28, x21, [x19]
  44e998:	str	x20, [sp]
  44e99c:	ldr	w27, [sp, #124]
  44e9a0:	add	x6, sp, #0x80
  44e9a4:	mov	x3, x25
  44e9a8:	mov	x2, x24
  44e9ac:	orr	w27, w27, #0x1
  44e9b0:	mov	w5, w27
  44e9b4:	mov	x1, x28
  44e9b8:	mov	x0, x21
  44e9bc:	bl	44be58 <argp_parse@@Base+0xc078>
  44e9c0:	cmp	x28, x0
  44e9c4:	b.hi	44ea14 <argp_parse@@Base+0xec34>  // b.pmore
  44e9c8:	add	x20, x0, #0x1
  44e9cc:	str	x20, [x19]
  44e9d0:	cmp	x21, x22
  44e9d4:	b.eq	44e9e0 <argp_parse@@Base+0xec00>  // b.none
  44e9d8:	mov	x0, x21
  44e9dc:	bl	4047b0 <free@plt>
  44e9e0:	mov	x0, x20
  44e9e4:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44e9e8:	ldp	x7, x1, [sp, #160]
  44e9ec:	str	x0, [x19, #8]
  44e9f0:	ldr	w4, [sp, #120]
  44e9f4:	mov	x21, x0
  44e9f8:	str	x1, [sp]
  44e9fc:	add	x6, sp, #0x80
  44ea00:	mov	w5, w27
  44ea04:	mov	x3, x25
  44ea08:	mov	x2, x24
  44ea0c:	mov	x1, x20
  44ea10:	bl	44be58 <argp_parse@@Base+0xc078>
  44ea14:	mov	x0, x21
  44ea18:	ldp	x29, x30, [sp, #16]
  44ea1c:	ldp	x19, x20, [sp, #32]
  44ea20:	ldp	x21, x22, [sp, #48]
  44ea24:	ldp	x27, x28, [sp, #96]
  44ea28:	str	w26, [x23]
  44ea2c:	ldp	x23, x24, [sp, #64]
  44ea30:	ldp	x25, x26, [sp, #80]
  44ea34:	add	sp, sp, #0xb0
  44ea38:	ret
  44ea3c:	mov	x1, #0x10                  	// #16
  44ea40:	mov	x0, #0x0                   	// #0
  44ea44:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44ea48:	mov	x19, x0
  44ea4c:	str	x0, [x28, #1048]
  44ea50:	ldp	x0, x1, [x27, #16]
  44ea54:	stp	x0, x1, [x19]
  44ea58:	b	44e964 <argp_parse@@Base+0xeb84>
  44ea5c:	bl	404650 <abort@plt>
  44ea60:	sub	sp, sp, #0x80
  44ea64:	stp	x29, x30, [sp, #16]
  44ea68:	add	x29, sp, #0x10
  44ea6c:	stp	x19, x20, [sp, #32]
  44ea70:	mov	w19, w0
  44ea74:	stp	x21, x22, [sp, #48]
  44ea78:	stp	x23, x24, [sp, #64]
  44ea7c:	mov	x23, x1
  44ea80:	mov	x24, x2
  44ea84:	stp	x25, x26, [sp, #80]
  44ea88:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44ea8c:	stp	x27, x28, [sp, #96]
  44ea90:	bl	404ad0 <__errno_location@plt>
  44ea94:	mov	x22, x0
  44ea98:	ldr	w0, [x0]
  44ea9c:	str	w0, [sp, #124]
  44eaa0:	ldr	x21, [x26, #1048]
  44eaa4:	tbnz	w19, #31, 44ebe8 <argp_parse@@Base+0xee08>
  44eaa8:	add	x20, x26, #0x418
  44eaac:	ldr	w0, [x20, #8]
  44eab0:	cmp	w19, w0
  44eab4:	b.lt	44eb04 <argp_parse@@Base+0xed24>  // b.tstop
  44eab8:	mov	w0, #0x7fffffff            	// #2147483647
  44eabc:	cmp	w19, w0
  44eac0:	b.eq	44ebe4 <argp_parse@@Base+0xee04>  // b.none
  44eac4:	add	w27, w19, #0x1
  44eac8:	add	x0, x20, #0x10
  44eacc:	cmp	x21, x0
  44ead0:	sbfiz	x1, x27, #4, #32
  44ead4:	b.eq	44ebc8 <argp_parse@@Base+0xede8>  // b.none
  44ead8:	mov	x0, x21
  44eadc:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44eae0:	mov	x21, x0
  44eae4:	str	x0, [x26, #1048]
  44eae8:	ldr	w0, [x20, #8]
  44eaec:	mov	w1, #0x0                   	// #0
  44eaf0:	sub	w2, w27, w0
  44eaf4:	add	x0, x21, w0, sxtw #4
  44eaf8:	sbfiz	x2, x2, #4, #32
  44eafc:	bl	404410 <memset@plt>
  44eb00:	str	w27, [x20, #8]
  44eb04:	sbfiz	x19, x19, #4, #32
  44eb08:	add	x6, x20, #0x28
  44eb0c:	add	x26, x21, x19
  44eb10:	mov	x3, x24
  44eb14:	ldp	x7, x0, [x20, #72]
  44eb18:	mov	x2, x23
  44eb1c:	ldp	w4, w5, [x20, #32]
  44eb20:	ldr	x27, [x21, x19]
  44eb24:	orr	w25, w5, #0x1
  44eb28:	ldr	x28, [x26, #8]
  44eb2c:	str	x0, [sp]
  44eb30:	mov	x1, x27
  44eb34:	mov	w5, w25
  44eb38:	mov	x0, x28
  44eb3c:	bl	44be58 <argp_parse@@Base+0xc078>
  44eb40:	cmp	x27, x0
  44eb44:	b.hi	44eb9c <argp_parse@@Base+0xedbc>  // b.pmore
  44eb48:	add	x27, x0, #0x1
  44eb4c:	str	x27, [x21, x19]
  44eb50:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44eb54:	add	x0, x0, #0xe60
  44eb58:	cmp	x28, x0
  44eb5c:	b.eq	44eb68 <argp_parse@@Base+0xed88>  // b.none
  44eb60:	mov	x0, x28
  44eb64:	bl	4047b0 <free@plt>
  44eb68:	mov	x0, x27
  44eb6c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44eb70:	ldp	x7, x1, [x20, #72]
  44eb74:	str	x0, [x26, #8]
  44eb78:	ldr	w4, [x20, #32]
  44eb7c:	mov	x28, x0
  44eb80:	str	x1, [sp]
  44eb84:	mov	w5, w25
  44eb88:	mov	x3, x24
  44eb8c:	mov	x2, x23
  44eb90:	add	x6, x20, #0x28
  44eb94:	mov	x1, x27
  44eb98:	bl	44be58 <argp_parse@@Base+0xc078>
  44eb9c:	ldr	w0, [sp, #124]
  44eba0:	ldp	x29, x30, [sp, #16]
  44eba4:	ldp	x19, x20, [sp, #32]
  44eba8:	ldp	x23, x24, [sp, #64]
  44ebac:	ldp	x25, x26, [sp, #80]
  44ebb0:	str	w0, [x22]
  44ebb4:	mov	x0, x28
  44ebb8:	ldp	x21, x22, [sp, #48]
  44ebbc:	ldp	x27, x28, [sp, #96]
  44ebc0:	add	sp, sp, #0x80
  44ebc4:	ret
  44ebc8:	mov	x0, #0x0                   	// #0
  44ebcc:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44ebd0:	mov	x21, x0
  44ebd4:	str	x0, [x26, #1048]
  44ebd8:	ldp	x0, x1, [x20, #16]
  44ebdc:	stp	x0, x1, [x21]
  44ebe0:	b	44eae8 <argp_parse@@Base+0xed08>
  44ebe4:	bl	4104a0 <wcrtomb@plt+0xb880>
  44ebe8:	bl	404650 <abort@plt>
  44ebec:	nop
  44ebf0:	sub	sp, sp, #0x70
  44ebf4:	stp	x29, x30, [sp, #16]
  44ebf8:	add	x29, sp, #0x10
  44ebfc:	stp	x19, x20, [sp, #32]
  44ec00:	stp	x21, x22, [sp, #48]
  44ec04:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44ec08:	add	x19, x21, #0x418
  44ec0c:	stp	x23, x24, [sp, #64]
  44ec10:	mov	x24, x0
  44ec14:	stp	x25, x26, [sp, #80]
  44ec18:	mov	x25, x1
  44ec1c:	str	x27, [sp, #96]
  44ec20:	bl	404ad0 <__errno_location@plt>
  44ec24:	mov	x23, x0
  44ec28:	ldr	w0, [x19, #8]
  44ec2c:	ldr	x20, [x21, #1048]
  44ec30:	cmp	w0, #0x0
  44ec34:	ldr	w26, [x23]
  44ec38:	b.gt	44ec7c <argp_parse@@Base+0xee9c>
  44ec3c:	add	x0, x19, #0x10
  44ec40:	cmp	x20, x0
  44ec44:	b.eq	44ed30 <argp_parse@@Base+0xef50>  // b.none
  44ec48:	mov	x0, x20
  44ec4c:	mov	x1, #0x10                  	// #16
  44ec50:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44ec54:	mov	x20, x0
  44ec58:	str	x0, [x21, #1048]
  44ec5c:	ldr	w0, [x19, #8]
  44ec60:	mov	w21, #0x1                   	// #1
  44ec64:	mov	w1, #0x0                   	// #0
  44ec68:	sub	w2, w21, w0
  44ec6c:	add	x0, x20, w0, sxtw #4
  44ec70:	sbfiz	x2, x2, #4, #32
  44ec74:	bl	404410 <memset@plt>
  44ec78:	str	w21, [x19, #8]
  44ec7c:	ldp	x21, x22, [x20]
  44ec80:	add	x6, x19, #0x28
  44ec84:	ldp	x7, x0, [x19, #72]
  44ec88:	str	x0, [sp]
  44ec8c:	ldp	w4, w27, [x19, #32]
  44ec90:	mov	x3, x25
  44ec94:	mov	x2, x24
  44ec98:	mov	x1, x21
  44ec9c:	orr	w27, w27, #0x1
  44eca0:	mov	x0, x22
  44eca4:	mov	w5, w27
  44eca8:	bl	44be58 <argp_parse@@Base+0xc078>
  44ecac:	cmp	x21, x0
  44ecb0:	b.hi	44ed08 <argp_parse@@Base+0xef28>  // b.pmore
  44ecb4:	add	x21, x0, #0x1
  44ecb8:	str	x21, [x20]
  44ecbc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44ecc0:	add	x0, x0, #0xe60
  44ecc4:	cmp	x22, x0
  44ecc8:	b.eq	44ecd4 <argp_parse@@Base+0xeef4>  // b.none
  44eccc:	mov	x0, x22
  44ecd0:	bl	4047b0 <free@plt>
  44ecd4:	mov	x0, x21
  44ecd8:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44ecdc:	ldp	x7, x1, [x19, #72]
  44ece0:	str	x0, [x20, #8]
  44ece4:	ldr	w4, [x19, #32]
  44ece8:	mov	x22, x0
  44ecec:	str	x1, [sp]
  44ecf0:	mov	w5, w27
  44ecf4:	mov	x3, x25
  44ecf8:	mov	x2, x24
  44ecfc:	add	x6, x19, #0x28
  44ed00:	mov	x1, x21
  44ed04:	bl	44be58 <argp_parse@@Base+0xc078>
  44ed08:	mov	x0, x22
  44ed0c:	ldp	x29, x30, [sp, #16]
  44ed10:	ldp	x19, x20, [sp, #32]
  44ed14:	ldp	x21, x22, [sp, #48]
  44ed18:	ldr	x27, [sp, #96]
  44ed1c:	str	w26, [x23]
  44ed20:	ldp	x23, x24, [sp, #64]
  44ed24:	ldp	x25, x26, [sp, #80]
  44ed28:	add	sp, sp, #0x70
  44ed2c:	ret
  44ed30:	mov	x1, #0x10                  	// #16
  44ed34:	mov	x0, #0x0                   	// #0
  44ed38:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44ed3c:	mov	x20, x0
  44ed40:	str	x0, [x21, #1048]
  44ed44:	ldp	x0, x1, [x19, #16]
  44ed48:	stp	x0, x1, [x20]
  44ed4c:	b	44ec5c <argp_parse@@Base+0xee7c>
  44ed50:	sub	sp, sp, #0x70
  44ed54:	stp	x29, x30, [sp, #16]
  44ed58:	add	x29, sp, #0x10
  44ed5c:	stp	x21, x22, [sp, #48]
  44ed60:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44ed64:	stp	x19, x20, [sp, #32]
  44ed68:	mov	w19, w0
  44ed6c:	stp	x23, x24, [sp, #64]
  44ed70:	mov	x24, x1
  44ed74:	stp	x25, x26, [sp, #80]
  44ed78:	stp	x27, x28, [sp, #96]
  44ed7c:	bl	404ad0 <__errno_location@plt>
  44ed80:	ldr	w25, [x0]
  44ed84:	ldr	x21, [x22, #1048]
  44ed88:	tbnz	w19, #31, 44eecc <argp_parse@@Base+0xf0ec>
  44ed8c:	add	x20, x22, #0x418
  44ed90:	mov	x23, x0
  44ed94:	ldr	w0, [x20, #8]
  44ed98:	cmp	w19, w0
  44ed9c:	b.lt	44edec <argp_parse@@Base+0xf00c>  // b.tstop
  44eda0:	mov	w0, #0x7fffffff            	// #2147483647
  44eda4:	cmp	w19, w0
  44eda8:	b.eq	44eec8 <argp_parse@@Base+0xf0e8>  // b.none
  44edac:	add	w26, w19, #0x1
  44edb0:	add	x0, x20, #0x10
  44edb4:	cmp	x21, x0
  44edb8:	sbfiz	x1, x26, #4, #32
  44edbc:	b.eq	44eeac <argp_parse@@Base+0xf0cc>  // b.none
  44edc0:	mov	x0, x21
  44edc4:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44edc8:	mov	x21, x0
  44edcc:	str	x0, [x22, #1048]
  44edd0:	ldr	w0, [x20, #8]
  44edd4:	mov	w1, #0x0                   	// #0
  44edd8:	sub	w2, w26, w0
  44eddc:	add	x0, x21, w0, sxtw #4
  44ede0:	sbfiz	x2, x2, #4, #32
  44ede4:	bl	404410 <memset@plt>
  44ede8:	str	w26, [x20, #8]
  44edec:	sbfiz	x19, x19, #4, #32
  44edf0:	add	x6, x20, #0x28
  44edf4:	add	x26, x21, x19
  44edf8:	mov	x2, x24
  44edfc:	ldp	x7, x0, [x20, #72]
  44ee00:	mov	x3, #0xffffffffffffffff    	// #-1
  44ee04:	ldp	w4, w28, [x20, #32]
  44ee08:	ldr	x22, [x21, x19]
  44ee0c:	orr	w28, w28, #0x1
  44ee10:	ldr	x27, [x26, #8]
  44ee14:	str	x0, [sp]
  44ee18:	mov	x1, x22
  44ee1c:	mov	w5, w28
  44ee20:	mov	x0, x27
  44ee24:	bl	44be58 <argp_parse@@Base+0xc078>
  44ee28:	cmp	x22, x0
  44ee2c:	b.hi	44ee84 <argp_parse@@Base+0xf0a4>  // b.pmore
  44ee30:	add	x22, x0, #0x1
  44ee34:	str	x22, [x21, x19]
  44ee38:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44ee3c:	add	x0, x0, #0xe60
  44ee40:	cmp	x27, x0
  44ee44:	b.eq	44ee50 <argp_parse@@Base+0xf070>  // b.none
  44ee48:	mov	x0, x27
  44ee4c:	bl	4047b0 <free@plt>
  44ee50:	mov	x0, x22
  44ee54:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44ee58:	ldp	x7, x1, [x20, #72]
  44ee5c:	str	x0, [x26, #8]
  44ee60:	ldr	w4, [x20, #32]
  44ee64:	mov	x27, x0
  44ee68:	str	x1, [sp]
  44ee6c:	mov	w5, w28
  44ee70:	mov	x2, x24
  44ee74:	add	x6, x20, #0x28
  44ee78:	mov	x1, x22
  44ee7c:	mov	x3, #0xffffffffffffffff    	// #-1
  44ee80:	bl	44be58 <argp_parse@@Base+0xc078>
  44ee84:	mov	x0, x27
  44ee88:	ldp	x29, x30, [sp, #16]
  44ee8c:	ldp	x19, x20, [sp, #32]
  44ee90:	ldp	x21, x22, [sp, #48]
  44ee94:	ldp	x27, x28, [sp, #96]
  44ee98:	str	w25, [x23]
  44ee9c:	ldp	x23, x24, [sp, #64]
  44eea0:	ldp	x25, x26, [sp, #80]
  44eea4:	add	sp, sp, #0x70
  44eea8:	ret
  44eeac:	mov	x0, #0x0                   	// #0
  44eeb0:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44eeb4:	mov	x21, x0
  44eeb8:	str	x0, [x22, #1048]
  44eebc:	ldp	x0, x1, [x20, #16]
  44eec0:	stp	x0, x1, [x21]
  44eec4:	b	44edd0 <argp_parse@@Base+0xeff0>
  44eec8:	bl	4104a0 <wcrtomb@plt+0xb880>
  44eecc:	bl	404650 <abort@plt>
  44eed0:	sub	sp, sp, #0x60
  44eed4:	stp	x29, x30, [sp, #16]
  44eed8:	add	x29, sp, #0x10
  44eedc:	stp	x19, x20, [sp, #32]
  44eee0:	stp	x21, x22, [sp, #48]
  44eee4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44eee8:	add	x19, x21, #0x418
  44eeec:	stp	x23, x24, [sp, #64]
  44eef0:	mov	x24, x0
  44eef4:	stp	x25, x26, [sp, #80]
  44eef8:	bl	404ad0 <__errno_location@plt>
  44eefc:	mov	x23, x0
  44ef00:	ldr	w0, [x19, #8]
  44ef04:	ldr	x20, [x21, #1048]
  44ef08:	cmp	w0, #0x0
  44ef0c:	ldr	w25, [x23]
  44ef10:	b.gt	44ef54 <argp_parse@@Base+0xf174>
  44ef14:	add	x0, x19, #0x10
  44ef18:	cmp	x20, x0
  44ef1c:	b.eq	44f004 <argp_parse@@Base+0xf224>  // b.none
  44ef20:	mov	x0, x20
  44ef24:	mov	x1, #0x10                  	// #16
  44ef28:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44ef2c:	mov	x20, x0
  44ef30:	str	x0, [x21, #1048]
  44ef34:	ldr	w0, [x19, #8]
  44ef38:	mov	w21, #0x1                   	// #1
  44ef3c:	mov	w1, #0x0                   	// #0
  44ef40:	sub	w2, w21, w0
  44ef44:	add	x0, x20, w0, sxtw #4
  44ef48:	sbfiz	x2, x2, #4, #32
  44ef4c:	bl	404410 <memset@plt>
  44ef50:	str	w21, [x19, #8]
  44ef54:	ldp	x21, x22, [x20]
  44ef58:	add	x6, x19, #0x28
  44ef5c:	ldp	x7, x0, [x19, #72]
  44ef60:	str	x0, [sp]
  44ef64:	ldp	w4, w26, [x19, #32]
  44ef68:	mov	x2, x24
  44ef6c:	mov	x1, x21
  44ef70:	mov	x0, x22
  44ef74:	orr	w26, w26, #0x1
  44ef78:	mov	x3, #0xffffffffffffffff    	// #-1
  44ef7c:	mov	w5, w26
  44ef80:	bl	44be58 <argp_parse@@Base+0xc078>
  44ef84:	cmp	x21, x0
  44ef88:	b.hi	44efe0 <argp_parse@@Base+0xf200>  // b.pmore
  44ef8c:	add	x21, x0, #0x1
  44ef90:	str	x21, [x20]
  44ef94:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44ef98:	add	x0, x0, #0xe60
  44ef9c:	cmp	x22, x0
  44efa0:	b.eq	44efac <argp_parse@@Base+0xf1cc>  // b.none
  44efa4:	mov	x0, x22
  44efa8:	bl	4047b0 <free@plt>
  44efac:	mov	x0, x21
  44efb0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44efb4:	ldp	x7, x1, [x19, #72]
  44efb8:	str	x0, [x20, #8]
  44efbc:	ldr	w4, [x19, #32]
  44efc0:	mov	x22, x0
  44efc4:	str	x1, [sp]
  44efc8:	mov	w5, w26
  44efcc:	mov	x2, x24
  44efd0:	add	x6, x19, #0x28
  44efd4:	mov	x1, x21
  44efd8:	mov	x3, #0xffffffffffffffff    	// #-1
  44efdc:	bl	44be58 <argp_parse@@Base+0xc078>
  44efe0:	mov	x0, x22
  44efe4:	ldp	x29, x30, [sp, #16]
  44efe8:	ldp	x19, x20, [sp, #32]
  44efec:	ldp	x21, x22, [sp, #48]
  44eff0:	str	w25, [x23]
  44eff4:	ldp	x23, x24, [sp, #64]
  44eff8:	ldp	x25, x26, [sp, #80]
  44effc:	add	sp, sp, #0x60
  44f000:	ret
  44f004:	mov	x1, #0x10                  	// #16
  44f008:	mov	x0, #0x0                   	// #0
  44f00c:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44f010:	mov	x20, x0
  44f014:	str	x0, [x21, #1048]
  44f018:	ldp	x0, x1, [x19, #16]
  44f01c:	stp	x0, x1, [x20]
  44f020:	b	44ef34 <argp_parse@@Base+0xf154>
  44f024:	nop
  44f028:	stp	x29, x30, [sp, #-336]!
  44f02c:	mov	x29, sp
  44f030:	stp	x19, x20, [sp, #16]
  44f034:	mov	x20, x3
  44f038:	stp	x21, x22, [sp, #32]
  44f03c:	mov	x21, x1
  44f040:	stp	x23, x24, [sp, #48]
  44f044:	mov	w24, w2
  44f048:	stp	x25, x26, [sp, #64]
  44f04c:	mov	w25, w0
  44f050:	mov	w26, w4
  44f054:	bl	4047d0 <renameat2@plt>
  44f058:	mov	w19, w0
  44f05c:	tbz	w0, #31, 44f09c <argp_parse@@Base+0xf2bc>
  44f060:	bl	404ad0 <__errno_location@plt>
  44f064:	mov	x22, x0
  44f068:	ldr	w0, [x0]
  44f06c:	sub	w1, w0, #0x16
  44f070:	tst	w1, #0xffffffef
  44f074:	cset	w23, ne  // ne = any
  44f078:	cmp	w0, #0x5f
  44f07c:	csel	w23, w23, wzr, ne  // ne = any
  44f080:	cbnz	w23, 44f09c <argp_parse@@Base+0xf2bc>
  44f084:	cbz	w26, 44f0f0 <argp_parse@@Base+0xf310>
  44f088:	tst	w26, #0xfffffffe
  44f08c:	b.eq	44f0b8 <argp_parse@@Base+0xf2d8>  // b.none
  44f090:	mov	w0, #0x5f                  	// #95
  44f094:	mov	w19, #0xffffffff            	// #-1
  44f098:	str	w0, [x22]
  44f09c:	mov	w0, w19
  44f0a0:	ldp	x19, x20, [sp, #16]
  44f0a4:	ldp	x21, x22, [sp, #32]
  44f0a8:	ldp	x23, x24, [sp, #48]
  44f0ac:	ldp	x25, x26, [sp, #64]
  44f0b0:	ldp	x29, x30, [sp], #336
  44f0b4:	ret
  44f0b8:	add	x3, sp, #0xd0
  44f0bc:	mov	x2, x20
  44f0c0:	mov	w1, w24
  44f0c4:	mov	w4, #0x100                 	// #256
  44f0c8:	mov	w0, #0x0                   	// #0
  44f0cc:	bl	404c00 <__fxstatat@plt>
  44f0d0:	cbz	w0, 44f1e0 <argp_parse@@Base+0xf400>
  44f0d4:	ldr	w0, [x22]
  44f0d8:	cmp	w0, #0x4b
  44f0dc:	b.eq	44f1e0 <argp_parse@@Base+0xf400>  // b.none
  44f0e0:	cmp	w0, #0x2
  44f0e4:	b.ne	44f1d8 <argp_parse@@Base+0xf3f8>  // b.any
  44f0e8:	mov	w23, #0x1                   	// #1
  44f0ec:	nop
  44f0f0:	mov	x0, x21
  44f0f4:	bl	403ff0 <strlen@plt>
  44f0f8:	mov	x19, x0
  44f0fc:	mov	x0, x20
  44f100:	bl	403ff0 <strlen@plt>
  44f104:	cmp	x19, #0x0
  44f108:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44f10c:	b.eq	44f1a4 <argp_parse@@Base+0xf3c4>  // b.none
  44f110:	add	x19, x21, x19
  44f114:	add	x0, x20, x0
  44f118:	mov	w1, #0x2f                  	// #47
  44f11c:	ldurb	w2, [x19, #-1]
  44f120:	ldurb	w0, [x0, #-1]
  44f124:	cmp	w2, w1
  44f128:	ccmp	w0, w1, #0x4, ne  // ne = any
  44f12c:	b.ne	44f1a4 <argp_parse@@Base+0xf3c4>  // b.any
  44f130:	add	x3, sp, #0x50
  44f134:	mov	x2, x21
  44f138:	mov	w1, w25
  44f13c:	mov	w4, #0x100                 	// #256
  44f140:	mov	w0, #0x0                   	// #0
  44f144:	bl	404c00 <__fxstatat@plt>
  44f148:	cbnz	w0, 44f1d8 <argp_parse@@Base+0xf3f8>
  44f14c:	cbz	w23, 44f170 <argp_parse@@Base+0xf390>
  44f150:	ldr	w0, [sp, #96]
  44f154:	and	w0, w0, #0xf000
  44f158:	cmp	w0, #0x4, lsl #12
  44f15c:	b.eq	44f1a4 <argp_parse@@Base+0xf3c4>  // b.none
  44f160:	mov	w0, #0x2                   	// #2
  44f164:	mov	w19, #0xffffffff            	// #-1
  44f168:	str	w0, [x22]
  44f16c:	b	44f09c <argp_parse@@Base+0xf2bc>
  44f170:	add	x3, sp, #0xd0
  44f174:	mov	x2, x20
  44f178:	mov	w1, w24
  44f17c:	mov	w4, #0x100                 	// #256
  44f180:	bl	404c00 <__fxstatat@plt>
  44f184:	cbz	w0, 44f1f0 <argp_parse@@Base+0xf410>
  44f188:	ldr	w0, [x22]
  44f18c:	cmp	w0, #0x2
  44f190:	b.ne	44f1d8 <argp_parse@@Base+0xf3f8>  // b.any
  44f194:	ldr	w0, [sp, #96]
  44f198:	and	w0, w0, #0xf000
  44f19c:	cmp	w0, #0x4, lsl #12
  44f1a0:	b.ne	44f1d8 <argp_parse@@Base+0xf3f8>  // b.any
  44f1a4:	mov	x3, x20
  44f1a8:	mov	w2, w24
  44f1ac:	mov	x1, x21
  44f1b0:	mov	w0, w25
  44f1b4:	bl	404800 <renameat@plt>
  44f1b8:	mov	w19, w0
  44f1bc:	mov	w0, w19
  44f1c0:	ldp	x19, x20, [sp, #16]
  44f1c4:	ldp	x21, x22, [sp, #32]
  44f1c8:	ldp	x23, x24, [sp, #48]
  44f1cc:	ldp	x25, x26, [sp, #64]
  44f1d0:	ldp	x29, x30, [sp], #336
  44f1d4:	ret
  44f1d8:	mov	w19, #0xffffffff            	// #-1
  44f1dc:	b	44f09c <argp_parse@@Base+0xf2bc>
  44f1e0:	mov	w0, #0x11                  	// #17
  44f1e4:	mov	w19, #0xffffffff            	// #-1
  44f1e8:	str	w0, [x22]
  44f1ec:	b	44f09c <argp_parse@@Base+0xf2bc>
  44f1f0:	ldr	w0, [sp, #224]
  44f1f4:	and	w0, w0, #0xf000
  44f1f8:	cmp	w0, #0x4, lsl #12
  44f1fc:	b.eq	44f210 <argp_parse@@Base+0xf430>  // b.none
  44f200:	mov	w0, #0x14                  	// #20
  44f204:	mov	w19, #0xffffffff            	// #-1
  44f208:	str	w0, [x22]
  44f20c:	b	44f09c <argp_parse@@Base+0xf2bc>
  44f210:	ldr	w0, [sp, #96]
  44f214:	and	w0, w0, #0xf000
  44f218:	cmp	w0, #0x4, lsl #12
  44f21c:	b.eq	44f1a4 <argp_parse@@Base+0xf3c4>  // b.none
  44f220:	mov	w0, #0x15                  	// #21
  44f224:	mov	w19, #0xffffffff            	// #-1
  44f228:	str	w0, [x22]
  44f22c:	b	44f09c <argp_parse@@Base+0xf2bc>
  44f230:	stp	x29, x30, [sp, #-64]!
  44f234:	mov	x29, sp
  44f238:	stp	x19, x20, [sp, #16]
  44f23c:	mov	x20, x2
  44f240:	stp	x21, x22, [sp, #32]
  44f244:	mov	w22, w0
  44f248:	mov	x21, x1
  44f24c:	str	x23, [sp, #48]
  44f250:	mov	x23, #0x7ff00000            	// #2146435072
  44f254:	nop
  44f258:	mov	x2, x20
  44f25c:	mov	x1, x21
  44f260:	mov	w0, w22
  44f264:	bl	404950 <read@plt>
  44f268:	mov	x19, x0
  44f26c:	tbz	x0, #63, 44f290 <argp_parse@@Base+0xf4b0>
  44f270:	bl	404ad0 <__errno_location@plt>
  44f274:	ldr	w2, [x0]
  44f278:	cmp	w2, #0x4
  44f27c:	b.eq	44f258 <argp_parse@@Base+0xf478>  // b.none
  44f280:	cmp	x20, x23
  44f284:	mov	x20, #0x7ff00000            	// #2146435072
  44f288:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  44f28c:	b.eq	44f258 <argp_parse@@Base+0xf478>  // b.none
  44f290:	mov	x0, x19
  44f294:	ldp	x19, x20, [sp, #16]
  44f298:	ldp	x21, x22, [sp, #32]
  44f29c:	ldr	x23, [sp, #48]
  44f2a0:	ldp	x29, x30, [sp], #64
  44f2a4:	ret
  44f2a8:	stp	x29, x30, [sp, #-64]!
  44f2ac:	mov	x29, sp
  44f2b0:	stp	x19, x20, [sp, #16]
  44f2b4:	mov	x20, x2
  44f2b8:	stp	x21, x22, [sp, #32]
  44f2bc:	mov	w22, w0
  44f2c0:	mov	x21, x1
  44f2c4:	str	x23, [sp, #48]
  44f2c8:	mov	x23, #0x7ff00000            	// #2146435072
  44f2cc:	nop
  44f2d0:	mov	x2, x20
  44f2d4:	mov	x1, x21
  44f2d8:	mov	w0, w22
  44f2dc:	bl	404620 <write@plt>
  44f2e0:	mov	x19, x0
  44f2e4:	tbz	x0, #63, 44f308 <argp_parse@@Base+0xf528>
  44f2e8:	bl	404ad0 <__errno_location@plt>
  44f2ec:	ldr	w2, [x0]
  44f2f0:	cmp	w2, #0x4
  44f2f4:	b.eq	44f2d0 <argp_parse@@Base+0xf4f0>  // b.none
  44f2f8:	cmp	w2, #0x16
  44f2fc:	ccmp	x20, x23, #0x0, eq  // eq = none
  44f300:	mov	x20, #0x7ff00000            	// #2146435072
  44f304:	b.hi	44f2d0 <argp_parse@@Base+0xf4f0>  // b.pmore
  44f308:	mov	x0, x19
  44f30c:	ldp	x19, x20, [sp, #16]
  44f310:	ldp	x21, x22, [sp, #32]
  44f314:	ldr	x23, [sp, #48]
  44f318:	ldp	x29, x30, [sp], #64
  44f31c:	ret
  44f320:	stp	x29, x30, [sp, #-32]!
  44f324:	adrp	x1, 46c000 <_obstack_memory_used@@Base+0x1abf0>
  44f328:	mov	x29, sp
  44f32c:	str	x19, [sp, #16]
  44f330:	mov	x19, x0
  44f334:	add	x0, x1, #0x348
  44f338:	mov	w1, #0x80000               	// #524288
  44f33c:	str	xzr, [x19, #8]
  44f340:	bl	462ad8 <_obstack_memory_used@@Base+0x116c8>
  44f344:	str	w0, [x19]
  44f348:	tbnz	w0, #31, 44f35c <argp_parse@@Base+0xf57c>
  44f34c:	mov	w0, #0x0                   	// #0
  44f350:	ldr	x19, [sp, #16]
  44f354:	ldp	x29, x30, [sp], #32
  44f358:	ret
  44f35c:	mov	x1, #0x0                   	// #0
  44f360:	mov	x0, #0x0                   	// #0
  44f364:	bl	403fa0 <getcwd@plt>
  44f368:	str	x0, [x19, #8]
  44f36c:	cmp	x0, #0x0
  44f370:	csetm	w0, eq  // eq = none
  44f374:	ldr	x19, [sp, #16]
  44f378:	ldp	x29, x30, [sp], #32
  44f37c:	ret
  44f380:	mov	x1, x0
  44f384:	ldr	w0, [x0]
  44f388:	tbnz	w0, #31, 44f390 <argp_parse@@Base+0xf5b0>
  44f38c:	b	404060 <fchdir@plt>
  44f390:	ldr	x0, [x1, #8]
  44f394:	b	450928 <argp_parse@@Base+0x10b48>
  44f398:	stp	x29, x30, [sp, #-32]!
  44f39c:	mov	x29, sp
  44f3a0:	str	x19, [sp, #16]
  44f3a4:	mov	x19, x0
  44f3a8:	ldr	w0, [x0]
  44f3ac:	tbnz	w0, #31, 44f3b4 <argp_parse@@Base+0xf5d4>
  44f3b0:	bl	4045c0 <close@plt>
  44f3b4:	ldr	x0, [x19, #8]
  44f3b8:	ldr	x19, [sp, #16]
  44f3bc:	ldp	x29, x30, [sp], #32
  44f3c0:	b	4047b0 <free@plt>
  44f3c4:	nop
  44f3c8:	ldr	x2, [x0, #8]
  44f3cc:	mov	w3, #0xffffffff            	// #-1
  44f3d0:	ldr	x1, [x1, #8]
  44f3d4:	cmp	x2, x1
  44f3d8:	cset	w0, hi  // hi = pmore
  44f3dc:	csel	w0, w0, w3, cs  // cs = hs, nlast
  44f3e0:	ret
  44f3e4:	nop
  44f3e8:	ldr	x0, [x0]
  44f3ec:	ldr	x1, [x1]
  44f3f0:	b	404710 <strcmp@plt>
  44f3f4:	nop
  44f3f8:	stp	x29, x30, [sp, #-128]!
  44f3fc:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f400:	add	x2, x2, #0xb60
  44f404:	mov	x29, sp
  44f408:	stp	x23, x24, [sp, #48]
  44f40c:	stp	x25, x26, [sp, #64]
  44f410:	ldr	x26, [x2, w1, uxtw #3]
  44f414:	cbz	x0, 44f690 <argp_parse@@Base+0xf8b0>
  44f418:	stp	x19, x20, [sp, #16]
  44f41c:	mov	x19, x0
  44f420:	mov	x24, #0x0                   	// #0
  44f424:	stp	x21, x22, [sp, #32]
  44f428:	mov	x25, #0x0                   	// #0
  44f42c:	mov	x22, #0x0                   	// #0
  44f430:	stp	x27, x28, [sp, #80]
  44f434:	bl	404ad0 <__errno_location@plt>
  44f438:	mov	x20, x0
  44f43c:	mov	x21, #0x0                   	// #0
  44f440:	mov	x23, #0x0                   	// #0
  44f444:	str	xzr, [sp, #96]
  44f448:	str	wzr, [x20]
  44f44c:	mov	x0, x19
  44f450:	bl	404520 <readdir@plt>
  44f454:	mov	x27, x0
  44f458:	cbz	x0, 44f4d8 <argp_parse@@Base+0xf6f8>
  44f45c:	ldrb	w0, [x0, #19]
  44f460:	add	x28, x27, #0x13
  44f464:	cmp	w0, #0x2e
  44f468:	b.eq	44f500 <argp_parse@@Base+0xf720>  // b.none
  44f46c:	cbz	w0, 44f448 <argp_parse@@Base+0xf668>
  44f470:	mov	x0, x28
  44f474:	bl	403ff0 <strlen@plt>
  44f478:	add	x2, x0, #0x1
  44f47c:	cbz	x26, 44f5a8 <argp_parse@@Base+0xf7c8>
  44f480:	ldr	x0, [sp, #96]
  44f484:	lsl	x5, x22, #4
  44f488:	cmp	x22, x0
  44f48c:	add	x22, x22, #0x1
  44f490:	b.eq	44f618 <argp_parse@@Base+0xf838>  // b.none
  44f494:	add	x1, x25, x5
  44f498:	mov	x0, x28
  44f49c:	stp	x1, x5, [sp, #104]
  44f4a0:	str	x2, [sp, #120]
  44f4a4:	bl	450328 <argp_parse@@Base+0x10548>
  44f4a8:	ldp	x1, x5, [sp, #104]
  44f4ac:	ldr	x2, [sp, #120]
  44f4b0:	add	x24, x24, x2
  44f4b4:	str	x0, [x25, x5]
  44f4b8:	ldr	x0, [x27]
  44f4bc:	str	x0, [x1, #8]
  44f4c0:	str	wzr, [x20]
  44f4c4:	mov	x0, x19
  44f4c8:	bl	404520 <readdir@plt>
  44f4cc:	mov	x27, x0
  44f4d0:	cbnz	x0, 44f45c <argp_parse@@Base+0xf67c>
  44f4d4:	nop
  44f4d8:	ldr	w19, [x20]
  44f4dc:	cbnz	w19, 44f668 <argp_parse@@Base+0xf888>
  44f4e0:	cbz	x26, 44f608 <argp_parse@@Base+0xf828>
  44f4e4:	add	x24, x24, #0x1
  44f4e8:	cbnz	x22, 44f518 <argp_parse@@Base+0xf738>
  44f4ec:	mov	x0, x24
  44f4f0:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44f4f4:	mov	x23, x0
  44f4f8:	mov	x20, x0
  44f4fc:	b	44f57c <argp_parse@@Base+0xf79c>
  44f500:	ldrb	w0, [x27, #20]
  44f504:	cmp	w0, #0x2e
  44f508:	b.ne	44f46c <argp_parse@@Base+0xf68c>  // b.any
  44f50c:	ldrb	w0, [x27, #21]
  44f510:	cbz	w0, 44f448 <argp_parse@@Base+0xf668>
  44f514:	b	44f470 <argp_parse@@Base+0xf690>
  44f518:	mov	x1, x22
  44f51c:	mov	x3, x26
  44f520:	mov	x2, #0x10                  	// #16
  44f524:	mov	x0, x25
  44f528:	bl	4041a0 <qsort@plt>
  44f52c:	add	x22, x25, x22, lsl #4
  44f530:	mov	x0, x24
  44f534:	mov	x19, x25
  44f538:	bl	4501a0 <argp_parse@@Base+0x103c0>
  44f53c:	mov	x23, x0
  44f540:	mov	x20, #0x0                   	// #0
  44f544:	nop
  44f548:	ldr	x1, [x19]
  44f54c:	add	x21, x23, x20
  44f550:	mov	x0, x21
  44f554:	bl	404220 <stpcpy@plt>
  44f558:	mov	x1, x0
  44f55c:	sub	x1, x1, x21
  44f560:	ldr	x0, [x19], #16
  44f564:	add	x1, x1, #0x1
  44f568:	add	x20, x20, x1
  44f56c:	bl	4047b0 <free@plt>
  44f570:	cmp	x19, x22
  44f574:	b.ne	44f548 <argp_parse@@Base+0xf768>  // b.any
  44f578:	add	x20, x23, x20
  44f57c:	mov	x0, x25
  44f580:	bl	4047b0 <free@plt>
  44f584:	strb	wzr, [x20]
  44f588:	ldp	x19, x20, [sp, #16]
  44f58c:	ldp	x21, x22, [sp, #32]
  44f590:	ldp	x27, x28, [sp, #80]
  44f594:	mov	x0, x23
  44f598:	ldp	x23, x24, [sp, #48]
  44f59c:	ldp	x25, x26, [sp, #64]
  44f5a0:	ldp	x29, x30, [sp], #128
  44f5a4:	ret
  44f5a8:	adds	x3, x24, x2
  44f5ac:	sub	x0, x21, x24
  44f5b0:	cset	x1, cs  // cs = hs, nlast
  44f5b4:	cmp	x0, x2
  44f5b8:	b.hi	44f5f4 <argp_parse@@Base+0xf814>  // b.pmore
  44f5bc:	cbnz	x1, 44f6e8 <argp_parse@@Base+0xf908>
  44f5c0:	cbz	x23, 44f698 <argp_parse@@Base+0xf8b8>
  44f5c4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  44f5c8:	movk	x0, #0x5553
  44f5cc:	cmp	x3, x0
  44f5d0:	b.hi	44f6e8 <argp_parse@@Base+0xf908>  // b.pmore
  44f5d4:	add	x21, x3, #0x1
  44f5d8:	add	x21, x21, x3, lsr #1
  44f5dc:	mov	x0, x23
  44f5e0:	mov	x1, x21
  44f5e4:	stp	x2, x3, [sp, #104]
  44f5e8:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44f5ec:	mov	x23, x0
  44f5f0:	ldp	x2, x3, [sp, #104]
  44f5f4:	add	x0, x23, x24
  44f5f8:	mov	x1, x28
  44f5fc:	mov	x24, x3
  44f600:	bl	403f70 <memcpy@plt>
  44f604:	b	44f448 <argp_parse@@Base+0xf668>
  44f608:	cmp	x21, x24
  44f60c:	b.eq	44f650 <argp_parse@@Base+0xf870>  // b.none
  44f610:	add	x20, x23, x24
  44f614:	b	44f584 <argp_parse@@Base+0xf7a4>
  44f618:	cbz	x25, 44f6b4 <argp_parse@@Base+0xf8d4>
  44f61c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  44f620:	movk	x1, #0x555, lsl #48
  44f624:	cmp	x0, x1
  44f628:	b.cs	44f6e8 <argp_parse@@Base+0xf908>  // b.hs, b.nlast
  44f62c:	add	x0, x22, x0, lsr #1
  44f630:	str	x0, [sp, #96]
  44f634:	lsl	x1, x0, #4
  44f638:	mov	x0, x25
  44f63c:	stp	x2, x5, [sp, #104]
  44f640:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44f644:	mov	x25, x0
  44f648:	ldp	x2, x5, [sp, #104]
  44f64c:	b	44f494 <argp_parse@@Base+0xf6b4>
  44f650:	mov	x0, x23
  44f654:	add	x1, x21, #0x1
  44f658:	bl	4501d0 <argp_parse@@Base+0x103f0>
  44f65c:	mov	x23, x0
  44f660:	add	x20, x0, x21
  44f664:	b	44f584 <argp_parse@@Base+0xf7a4>
  44f668:	mov	x0, x25
  44f66c:	bl	4047b0 <free@plt>
  44f670:	mov	x0, x23
  44f674:	mov	x23, #0x0                   	// #0
  44f678:	bl	4047b0 <free@plt>
  44f67c:	ldp	x21, x22, [sp, #32]
  44f680:	ldp	x27, x28, [sp, #80]
  44f684:	str	w19, [x20]
  44f688:	ldp	x19, x20, [sp, #16]
  44f68c:	b	44f594 <argp_parse@@Base+0xf7b4>
  44f690:	mov	x23, #0x0                   	// #0
  44f694:	b	44f594 <argp_parse@@Base+0xf7b4>
  44f698:	cmp	x3, #0x0
  44f69c:	cbz	x3, 44f6ac <argp_parse@@Base+0xf8cc>
  44f6a0:	b.lt	44f6e8 <argp_parse@@Base+0xf908>  // b.tstop
  44f6a4:	mov	x21, x3
  44f6a8:	b	44f5dc <argp_parse@@Base+0xf7fc>
  44f6ac:	mov	x21, #0x80                  	// #128
  44f6b0:	b	44f5dc <argp_parse@@Base+0xf7fc>
  44f6b4:	cbz	x0, 44f6d0 <argp_parse@@Base+0xf8f0>
  44f6b8:	cmp	xzr, x0, lsr #60
  44f6bc:	cset	x0, ne  // ne = any
  44f6c0:	tbnz	x5, #63, 44f6e8 <argp_parse@@Base+0xf908>
  44f6c4:	cbnz	x0, 44f6e8 <argp_parse@@Base+0xf908>
  44f6c8:	mov	x1, x5
  44f6cc:	b	44f638 <argp_parse@@Base+0xf858>
  44f6d0:	mov	x0, #0x8                   	// #8
  44f6d4:	mov	x1, #0x80                  	// #128
  44f6d8:	mov	x5, #0x0                   	// #0
  44f6dc:	mov	x22, #0x1                   	// #1
  44f6e0:	str	x0, [sp, #96]
  44f6e4:	b	44f638 <argp_parse@@Base+0xf858>
  44f6e8:	bl	4104a0 <wcrtomb@plt+0xb880>
  44f6ec:	nop
  44f6f0:	stp	x29, x30, [sp, #-48]!
  44f6f4:	mov	x29, sp
  44f6f8:	stp	x19, x20, [sp, #16]
  44f6fc:	mov	w20, w1
  44f700:	bl	462a30 <_obstack_memory_used@@Base+0x11620>
  44f704:	cbz	x0, 44f738 <argp_parse@@Base+0xf958>
  44f708:	mov	w1, w20
  44f70c:	mov	x19, x0
  44f710:	bl	44f3f8 <argp_parse@@Base+0xf618>
  44f714:	mov	x1, x0
  44f718:	mov	x0, x19
  44f71c:	mov	x19, x1
  44f720:	bl	404590 <closedir@plt>
  44f724:	cbnz	w0, 44f74c <argp_parse@@Base+0xf96c>
  44f728:	mov	x0, x19
  44f72c:	ldp	x19, x20, [sp, #16]
  44f730:	ldp	x29, x30, [sp], #48
  44f734:	ret
  44f738:	mov	x19, #0x0                   	// #0
  44f73c:	mov	x0, x19
  44f740:	ldp	x19, x20, [sp, #16]
  44f744:	ldp	x29, x30, [sp], #48
  44f748:	ret
  44f74c:	str	x21, [sp, #32]
  44f750:	bl	404ad0 <__errno_location@plt>
  44f754:	mov	x20, x0
  44f758:	mov	x0, x19
  44f75c:	mov	x19, #0x0                   	// #0
  44f760:	ldr	w21, [x20]
  44f764:	bl	4047b0 <free@plt>
  44f768:	str	w21, [x20]
  44f76c:	mov	x0, x19
  44f770:	ldp	x19, x20, [sp, #16]
  44f774:	ldr	x21, [sp, #32]
  44f778:	ldp	x29, x30, [sp], #48
  44f77c:	ret
  44f780:	stp	x29, x30, [sp, #-32]!
  44f784:	mov	x2, x1
  44f788:	mov	x29, sp
  44f78c:	stp	x19, x20, [sp, #16]
  44f790:	mov	x19, x0
  44f794:	mov	x20, x1
  44f798:	mov	w1, #0x0                   	// #0
  44f79c:	bl	404960 <memchr@plt>
  44f7a0:	sub	x19, x0, x19
  44f7a4:	cmp	x0, #0x0
  44f7a8:	csinc	x0, x20, x19, eq  // eq = none
  44f7ac:	ldp	x19, x20, [sp, #16]
  44f7b0:	ldp	x29, x30, [sp], #32
  44f7b4:	ret
  44f7b8:	sub	sp, sp, #0x50
  44f7bc:	stp	x29, x30, [sp, #32]
  44f7c0:	add	x29, sp, #0x20
  44f7c4:	stp	x19, x20, [sp, #48]
  44f7c8:	mov	x19, x5
  44f7cc:	mov	x20, x4
  44f7d0:	str	x21, [sp, #64]
  44f7d4:	mov	x5, x3
  44f7d8:	mov	x21, x0
  44f7dc:	cbz	x1, 44f9b8 <argp_parse@@Base+0xfbd8>
  44f7e0:	mov	x4, x2
  44f7e4:	mov	x3, x1
  44f7e8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f7ec:	mov	w1, #0x1                   	// #1
  44f7f0:	add	x2, x2, #0xb78
  44f7f4:	bl	404700 <__fprintf_chk@plt>
  44f7f8:	mov	w2, #0x5                   	// #5
  44f7fc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f800:	mov	x0, #0x0                   	// #0
  44f804:	add	x1, x1, #0xb90
  44f808:	bl	4049c0 <dcgettext@plt>
  44f80c:	mov	x3, x0
  44f810:	mov	w4, #0x7e3                 	// #2019
  44f814:	mov	w1, #0x1                   	// #1
  44f818:	mov	x0, x21
  44f81c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f820:	add	x2, x2, #0xeb0
  44f824:	bl	404700 <__fprintf_chk@plt>
  44f828:	mov	w2, #0x5                   	// #5
  44f82c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f830:	mov	x0, #0x0                   	// #0
  44f834:	add	x1, x1, #0xb98
  44f838:	bl	4049c0 <dcgettext@plt>
  44f83c:	mov	x1, x21
  44f840:	bl	4049e0 <fputs_unlocked@plt>
  44f844:	cmp	x19, #0x5
  44f848:	b.eq	44f9d4 <argp_parse@@Base+0xfbf4>  // b.none
  44f84c:	b.hi	44f8a0 <argp_parse@@Base+0xfac0>  // b.pmore
  44f850:	cmp	x19, #0x2
  44f854:	b.eq	44fa14 <argp_parse@@Base+0xfc34>  // b.none
  44f858:	b.ls	44f914 <argp_parse@@Base+0xfb34>  // b.plast
  44f85c:	cmp	x19, #0x3
  44f860:	b.eq	44fa94 <argp_parse@@Base+0xfcb4>  // b.none
  44f864:	mov	w2, #0x5                   	// #5
  44f868:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f86c:	mov	x0, #0x0                   	// #0
  44f870:	add	x1, x1, #0xcb0
  44f874:	bl	4049c0 <dcgettext@plt>
  44f878:	mov	x2, x0
  44f87c:	ldp	x3, x4, [x20]
  44f880:	mov	x0, x21
  44f884:	ldp	x5, x6, [x20, #16]
  44f888:	mov	w1, #0x1                   	// #1
  44f88c:	ldp	x29, x30, [sp, #32]
  44f890:	ldp	x19, x20, [sp, #48]
  44f894:	ldr	x21, [sp, #64]
  44f898:	add	sp, sp, #0x50
  44f89c:	b	404700 <__fprintf_chk@plt>
  44f8a0:	cmp	x19, #0x8
  44f8a4:	b.eq	44fad0 <argp_parse@@Base+0xfcf0>  // b.none
  44f8a8:	b.ls	44f958 <argp_parse@@Base+0xfb78>  // b.plast
  44f8ac:	cmp	x19, #0x9
  44f8b0:	b.ne	44fa84 <argp_parse@@Base+0xfca4>  // b.any
  44f8b4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f8b8:	add	x1, x1, #0xd80
  44f8bc:	mov	w2, #0x5                   	// #5
  44f8c0:	mov	x0, #0x0                   	// #0
  44f8c4:	bl	4049c0 <dcgettext@plt>
  44f8c8:	ldp	x7, x8, [x20, #32]
  44f8cc:	mov	x2, x0
  44f8d0:	ldp	x3, x4, [x20]
  44f8d4:	mov	x0, x21
  44f8d8:	ldp	x5, x6, [x20, #16]
  44f8dc:	str	x8, [sp]
  44f8e0:	mov	w1, #0x1                   	// #1
  44f8e4:	ldr	x8, [x20, #48]
  44f8e8:	str	x8, [sp, #8]
  44f8ec:	ldr	x8, [x20, #56]
  44f8f0:	str	x8, [sp, #16]
  44f8f4:	ldr	x8, [x20, #64]
  44f8f8:	str	x8, [sp, #24]
  44f8fc:	bl	404700 <__fprintf_chk@plt>
  44f900:	ldp	x29, x30, [sp, #32]
  44f904:	ldp	x19, x20, [sp, #48]
  44f908:	ldr	x21, [sp, #64]
  44f90c:	add	sp, sp, #0x50
  44f910:	ret
  44f914:	cbz	x19, 44f9a4 <argp_parse@@Base+0xfbc4>
  44f918:	cmp	x19, #0x1
  44f91c:	b.ne	44fa84 <argp_parse@@Base+0xfca4>  // b.any
  44f920:	mov	w2, #0x5                   	// #5
  44f924:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f928:	mov	x0, #0x0                   	// #0
  44f92c:	add	x1, x1, #0xc68
  44f930:	bl	4049c0 <dcgettext@plt>
  44f934:	mov	x2, x0
  44f938:	mov	w1, w19
  44f93c:	mov	x0, x21
  44f940:	ldr	x3, [x20]
  44f944:	ldp	x29, x30, [sp, #32]
  44f948:	ldp	x19, x20, [sp, #48]
  44f94c:	ldr	x21, [sp, #64]
  44f950:	add	sp, sp, #0x50
  44f954:	b	404700 <__fprintf_chk@plt>
  44f958:	cmp	x19, #0x6
  44f95c:	b.eq	44fa4c <argp_parse@@Base+0xfc6c>  // b.none
  44f960:	cmp	x19, #0x7
  44f964:	b.ne	44fa84 <argp_parse@@Base+0xfca4>  // b.any
  44f968:	mov	w2, #0x5                   	// #5
  44f96c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f970:	mov	x0, #0x0                   	// #0
  44f974:	add	x1, x1, #0xd20
  44f978:	bl	4049c0 <dcgettext@plt>
  44f97c:	mov	x2, x0
  44f980:	ldp	x7, x8, [x20, #32]
  44f984:	mov	x0, x21
  44f988:	ldp	x3, x4, [x20]
  44f98c:	mov	w1, #0x1                   	// #1
  44f990:	ldp	x5, x6, [x20, #16]
  44f994:	str	x8, [sp]
  44f998:	ldr	x8, [x20, #48]
  44f99c:	str	x8, [sp, #8]
  44f9a0:	bl	404700 <__fprintf_chk@plt>
  44f9a4:	ldp	x29, x30, [sp, #32]
  44f9a8:	ldp	x19, x20, [sp, #48]
  44f9ac:	ldr	x21, [sp, #64]
  44f9b0:	add	sp, sp, #0x50
  44f9b4:	ret
  44f9b8:	mov	x4, x3
  44f9bc:	mov	w1, #0x1                   	// #1
  44f9c0:	mov	x3, x2
  44f9c4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f9c8:	add	x2, x2, #0xb88
  44f9cc:	bl	404700 <__fprintf_chk@plt>
  44f9d0:	b	44f7f8 <argp_parse@@Base+0xfa18>
  44f9d4:	mov	w2, w19
  44f9d8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44f9dc:	mov	x0, #0x0                   	// #0
  44f9e0:	add	x1, x1, #0xcd0
  44f9e4:	bl	4049c0 <dcgettext@plt>
  44f9e8:	mov	x2, x0
  44f9ec:	ldp	x3, x4, [x20]
  44f9f0:	mov	x0, x21
  44f9f4:	ldp	x5, x6, [x20, #16]
  44f9f8:	mov	w1, #0x1                   	// #1
  44f9fc:	ldp	x29, x30, [sp, #32]
  44fa00:	ldr	x7, [x20, #32]
  44fa04:	ldp	x19, x20, [sp, #48]
  44fa08:	ldr	x21, [sp, #64]
  44fa0c:	add	sp, sp, #0x50
  44fa10:	b	404700 <__fprintf_chk@plt>
  44fa14:	mov	w2, #0x5                   	// #5
  44fa18:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44fa1c:	mov	x0, #0x0                   	// #0
  44fa20:	add	x1, x1, #0xc78
  44fa24:	bl	4049c0 <dcgettext@plt>
  44fa28:	mov	x2, x0
  44fa2c:	ldp	x3, x4, [x20]
  44fa30:	mov	x0, x21
  44fa34:	ldp	x29, x30, [sp, #32]
  44fa38:	mov	w1, #0x1                   	// #1
  44fa3c:	ldp	x19, x20, [sp, #48]
  44fa40:	ldr	x21, [sp, #64]
  44fa44:	add	sp, sp, #0x50
  44fa48:	b	404700 <__fprintf_chk@plt>
  44fa4c:	mov	w2, #0x5                   	// #5
  44fa50:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44fa54:	mov	x0, #0x0                   	// #0
  44fa58:	add	x1, x1, #0xcf8
  44fa5c:	bl	4049c0 <dcgettext@plt>
  44fa60:	mov	x2, x0
  44fa64:	ldp	x3, x4, [x20]
  44fa68:	mov	x0, x21
  44fa6c:	ldp	x5, x6, [x20, #16]
  44fa70:	mov	w1, #0x1                   	// #1
  44fa74:	ldp	x7, x8, [x20, #32]
  44fa78:	str	x8, [sp]
  44fa7c:	bl	404700 <__fprintf_chk@plt>
  44fa80:	b	44f9a4 <argp_parse@@Base+0xfbc4>
  44fa84:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44fa88:	mov	w2, #0x5                   	// #5
  44fa8c:	add	x1, x1, #0xdb8
  44fa90:	b	44f8c0 <argp_parse@@Base+0xfae0>
  44fa94:	mov	w2, #0x5                   	// #5
  44fa98:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44fa9c:	mov	x0, #0x0                   	// #0
  44faa0:	add	x1, x1, #0xc90
  44faa4:	bl	4049c0 <dcgettext@plt>
  44faa8:	mov	x2, x0
  44faac:	ldp	x3, x4, [x20]
  44fab0:	mov	x0, x21
  44fab4:	ldr	x5, [x20, #16]
  44fab8:	mov	w1, #0x1                   	// #1
  44fabc:	ldp	x29, x30, [sp, #32]
  44fac0:	ldp	x19, x20, [sp, #48]
  44fac4:	ldr	x21, [sp, #64]
  44fac8:	add	sp, sp, #0x50
  44facc:	b	404700 <__fprintf_chk@plt>
  44fad0:	mov	w2, #0x5                   	// #5
  44fad4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44fad8:	mov	x0, #0x0                   	// #0
  44fadc:	add	x1, x1, #0xd50
  44fae0:	bl	4049c0 <dcgettext@plt>
  44fae4:	mov	x2, x0
  44fae8:	ldp	x7, x8, [x20, #32]
  44faec:	mov	x0, x21
  44faf0:	ldp	x3, x4, [x20]
  44faf4:	mov	w1, #0x1                   	// #1
  44faf8:	ldp	x5, x6, [x20, #16]
  44fafc:	str	x8, [sp]
  44fb00:	ldr	x8, [x20, #48]
  44fb04:	str	x8, [sp, #8]
  44fb08:	ldr	x8, [x20, #56]
  44fb0c:	str	x8, [sp, #16]
  44fb10:	bl	404700 <__fprintf_chk@plt>
  44fb14:	b	44f9a4 <argp_parse@@Base+0xfbc4>
  44fb18:	ldr	x5, [x4]
  44fb1c:	cbz	x5, 44fb38 <argp_parse@@Base+0xfd58>
  44fb20:	mov	x5, #0x0                   	// #0
  44fb24:	nop
  44fb28:	add	x5, x5, #0x1
  44fb2c:	ldr	x6, [x4, x5, lsl #3]
  44fb30:	cbnz	x6, 44fb28 <argp_parse@@Base+0xfd48>
  44fb34:	b	44f7b8 <argp_parse@@Base+0xf9d8>
  44fb38:	mov	x5, #0x0                   	// #0
  44fb3c:	b	44f7b8 <argp_parse@@Base+0xf9d8>
  44fb40:	stp	x29, x30, [sp, #-96]!
  44fb44:	mov	x29, sp
  44fb48:	ldp	x6, x8, [x4]
  44fb4c:	ldr	w7, [x4, #24]
  44fb50:	add	x5, x6, #0xf
  44fb54:	and	x5, x5, #0xfffffffffffffff8
  44fb58:	tbnz	w7, #31, 44fc40 <argp_parse@@Base+0xfe60>
  44fb5c:	ldr	x4, [x6]
  44fb60:	str	x4, [sp, #16]
  44fb64:	cbz	x4, 44fc90 <argp_parse@@Base+0xfeb0>
  44fb68:	add	x4, x5, #0xf
  44fb6c:	ldr	x5, [x5]
  44fb70:	str	x5, [sp, #24]
  44fb74:	and	x4, x4, #0xfffffffffffffff8
  44fb78:	cbz	x5, 44fc7c <argp_parse@@Base+0xfe9c>
  44fb7c:	add	x5, x4, #0xf
  44fb80:	and	x5, x5, #0xfffffffffffffff8
  44fb84:	ldr	x4, [x4]
  44fb88:	str	x4, [sp, #32]
  44fb8c:	cbz	x4, 44fc2c <argp_parse@@Base+0xfe4c>
  44fb90:	add	x6, x5, #0xf
  44fb94:	and	x6, x6, #0xfffffffffffffff8
  44fb98:	ldr	x4, [x5]
  44fb9c:	str	x4, [sp, #40]
  44fba0:	cbz	x4, 44fca4 <argp_parse@@Base+0xfec4>
  44fba4:	ldr	x5, [x6]
  44fba8:	str	x5, [sp, #48]
  44fbac:	add	x4, x6, #0xf
  44fbb0:	and	x4, x4, #0xfffffffffffffff8
  44fbb4:	cbz	x5, 44fcb8 <argp_parse@@Base+0xfed8>
  44fbb8:	add	x6, x4, #0xf
  44fbbc:	and	x6, x6, #0xfffffffffffffff8
  44fbc0:	ldr	x4, [x4]
  44fbc4:	str	x4, [sp, #56]
  44fbc8:	cbz	x4, 44fcc0 <argp_parse@@Base+0xfee0>
  44fbcc:	ldr	x5, [x6]
  44fbd0:	str	x5, [sp, #64]
  44fbd4:	add	x4, x6, #0xf
  44fbd8:	and	x4, x4, #0xfffffffffffffff8
  44fbdc:	cbz	x5, 44fcc8 <argp_parse@@Base+0xfee8>
  44fbe0:	add	x5, x4, #0xf
  44fbe4:	and	x5, x5, #0xfffffffffffffff8
  44fbe8:	ldr	x4, [x4]
  44fbec:	str	x4, [sp, #72]
  44fbf0:	cbz	x4, 44fcd0 <argp_parse@@Base+0xfef0>
  44fbf4:	add	x6, x5, #0xf
  44fbf8:	and	x6, x6, #0xfffffffffffffff8
  44fbfc:	ldr	x4, [x5]
  44fc00:	str	x4, [sp, #80]
  44fc04:	cbz	x4, 44fcd8 <argp_parse@@Base+0xfef8>
  44fc08:	ldr	x4, [x6]
  44fc0c:	str	x4, [sp, #88]
  44fc10:	cmp	x4, #0x0
  44fc14:	cset	x5, ne  // ne = any
  44fc18:	add	x5, x5, #0x9
  44fc1c:	add	x4, sp, #0x10
  44fc20:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44fc24:	ldp	x29, x30, [sp], #96
  44fc28:	ret
  44fc2c:	add	x4, sp, #0x10
  44fc30:	mov	x5, #0x2                   	// #2
  44fc34:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44fc38:	ldp	x29, x30, [sp], #96
  44fc3c:	ret
  44fc40:	add	w4, w7, #0x8
  44fc44:	cmp	w4, #0x0
  44fc48:	b.gt	44fb5c <argp_parse@@Base+0xfd7c>
  44fc4c:	ldr	x9, [x8, w7, sxtw]
  44fc50:	str	x9, [sp, #16]
  44fc54:	cbz	x9, 44fc90 <argp_parse@@Base+0xfeb0>
  44fc58:	cbz	w4, 44fe08 <argp_parse@@Base+0x10028>
  44fc5c:	add	w9, w7, #0x10
  44fc60:	cmp	w9, #0x0
  44fc64:	b.le	44fce0 <argp_parse@@Base+0xff00>
  44fc68:	mov	x4, x5
  44fc6c:	mov	x5, x6
  44fc70:	ldr	x5, [x5]
  44fc74:	str	x5, [sp, #24]
  44fc78:	cbnz	x5, 44fb7c <argp_parse@@Base+0xfd9c>
  44fc7c:	add	x4, sp, #0x10
  44fc80:	mov	x5, #0x1                   	// #1
  44fc84:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44fc88:	ldp	x29, x30, [sp], #96
  44fc8c:	ret
  44fc90:	add	x4, sp, #0x10
  44fc94:	mov	x5, #0x0                   	// #0
  44fc98:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44fc9c:	ldp	x29, x30, [sp], #96
  44fca0:	ret
  44fca4:	add	x4, sp, #0x10
  44fca8:	mov	x5, #0x3                   	// #3
  44fcac:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44fcb0:	ldp	x29, x30, [sp], #96
  44fcb4:	ret
  44fcb8:	mov	x5, #0x4                   	// #4
  44fcbc:	b	44fc1c <argp_parse@@Base+0xfe3c>
  44fcc0:	mov	x5, #0x5                   	// #5
  44fcc4:	b	44fc1c <argp_parse@@Base+0xfe3c>
  44fcc8:	mov	x5, #0x6                   	// #6
  44fccc:	b	44fc1c <argp_parse@@Base+0xfe3c>
  44fcd0:	mov	x5, #0x7                   	// #7
  44fcd4:	b	44fc1c <argp_parse@@Base+0xfe3c>
  44fcd8:	mov	x5, #0x8                   	// #8
  44fcdc:	b	44fc1c <argp_parse@@Base+0xfe3c>
  44fce0:	ldr	x4, [x8, w4, sxtw]
  44fce4:	str	x4, [sp, #24]
  44fce8:	cbz	x4, 44fc7c <argp_parse@@Base+0xfe9c>
  44fcec:	cbz	w9, 44fe30 <argp_parse@@Base+0x10050>
  44fcf0:	add	w10, w7, #0x18
  44fcf4:	mov	x4, x6
  44fcf8:	cmp	w10, #0x0
  44fcfc:	b.gt	44fb84 <argp_parse@@Base+0xfda4>
  44fd00:	ldr	x4, [x8, w9, sxtw]
  44fd04:	str	x4, [sp, #32]
  44fd08:	cbz	x4, 44fc2c <argp_parse@@Base+0xfe4c>
  44fd0c:	cbz	w10, 44fe28 <argp_parse@@Base+0x10048>
  44fd10:	add	w4, w7, #0x20
  44fd14:	cmp	w4, #0x0
  44fd18:	b.le	44fd2c <argp_parse@@Base+0xff4c>
  44fd1c:	add	x4, x6, #0xf
  44fd20:	mov	x5, x6
  44fd24:	and	x6, x4, #0xfffffffffffffff8
  44fd28:	b	44fb98 <argp_parse@@Base+0xfdb8>
  44fd2c:	ldr	x5, [x8, w10, sxtw]
  44fd30:	str	x5, [sp, #40]
  44fd34:	cbz	x5, 44fca4 <argp_parse@@Base+0xfec4>
  44fd38:	cbz	w4, 44fba4 <argp_parse@@Base+0xfdc4>
  44fd3c:	add	w5, w7, #0x28
  44fd40:	cmp	w5, #0x0
  44fd44:	b.gt	44fba4 <argp_parse@@Base+0xfdc4>
  44fd48:	ldr	x4, [x8, w4, sxtw]
  44fd4c:	str	x4, [sp, #48]
  44fd50:	cbz	x4, 44fcb8 <argp_parse@@Base+0xfed8>
  44fd54:	cbz	w5, 44fe20 <argp_parse@@Base+0x10040>
  44fd58:	add	w4, w7, #0x30
  44fd5c:	cmp	w4, #0x0
  44fd60:	b.le	44fd74 <argp_parse@@Base+0xff94>
  44fd64:	add	x5, x6, #0xf
  44fd68:	mov	x4, x6
  44fd6c:	and	x6, x5, #0xfffffffffffffff8
  44fd70:	b	44fbc0 <argp_parse@@Base+0xfde0>
  44fd74:	ldr	x5, [x8, w5, sxtw]
  44fd78:	str	x5, [sp, #56]
  44fd7c:	cbz	x5, 44fcc0 <argp_parse@@Base+0xfee0>
  44fd80:	cbz	w4, 44fbcc <argp_parse@@Base+0xfdec>
  44fd84:	add	w5, w7, #0x38
  44fd88:	cmp	w5, #0x0
  44fd8c:	b.gt	44fbcc <argp_parse@@Base+0xfdec>
  44fd90:	ldr	x4, [x8, w4, sxtw]
  44fd94:	str	x4, [sp, #64]
  44fd98:	cbz	x4, 44fcc8 <argp_parse@@Base+0xfee8>
  44fd9c:	cbz	w5, 44fe18 <argp_parse@@Base+0x10038>
  44fda0:	add	w9, w7, #0x40
  44fda4:	cmp	w9, #0x0
  44fda8:	b.le	44fdbc <argp_parse@@Base+0xffdc>
  44fdac:	add	x5, x6, #0xf
  44fdb0:	mov	x4, x6
  44fdb4:	and	x5, x5, #0xfffffffffffffff8
  44fdb8:	b	44fbe8 <argp_parse@@Base+0xfe08>
  44fdbc:	ldr	x4, [x8, w5, sxtw]
  44fdc0:	str	x4, [sp, #72]
  44fdc4:	cbz	x4, 44fcd0 <argp_parse@@Base+0xfef0>
  44fdc8:	cbz	w9, 44fe10 <argp_parse@@Base+0x10030>
  44fdcc:	add	w4, w7, #0x48
  44fdd0:	cmp	w4, #0x0
  44fdd4:	b.le	44fde8 <argp_parse@@Base+0x10008>
  44fdd8:	add	x4, x6, #0xf
  44fddc:	mov	x5, x6
  44fde0:	and	x6, x4, #0xfffffffffffffff8
  44fde4:	b	44fbfc <argp_parse@@Base+0xfe1c>
  44fde8:	ldr	x5, [x8, w9, sxtw]
  44fdec:	str	x5, [sp, #80]
  44fdf0:	cbz	x5, 44fcd8 <argp_parse@@Base+0xfef8>
  44fdf4:	cbz	w4, 44fc08 <argp_parse@@Base+0xfe28>
  44fdf8:	add	x8, x8, w4, sxtw
  44fdfc:	cmn	w7, #0x4f
  44fe00:	csel	x6, x8, x6, lt  // lt = tstop
  44fe04:	b	44fc08 <argp_parse@@Base+0xfe28>
  44fe08:	mov	x5, x6
  44fe0c:	b	44fb68 <argp_parse@@Base+0xfd88>
  44fe10:	mov	x5, x6
  44fe14:	b	44fbf4 <argp_parse@@Base+0xfe14>
  44fe18:	mov	x4, x6
  44fe1c:	b	44fbe0 <argp_parse@@Base+0xfe00>
  44fe20:	mov	x4, x6
  44fe24:	b	44fbb8 <argp_parse@@Base+0xfdd8>
  44fe28:	mov	x5, x6
  44fe2c:	b	44fb90 <argp_parse@@Base+0xfdb0>
  44fe30:	mov	x4, x6
  44fe34:	b	44fb7c <argp_parse@@Base+0xfd9c>
  44fe38:	stp	x29, x30, [sp, #-288]!
  44fe3c:	mov	w10, #0xffffffe0            	// #-32
  44fe40:	mov	w9, #0xffffff80            	// #-128
  44fe44:	mov	x29, sp
  44fe48:	add	x11, sp, #0x100
  44fe4c:	add	x12, sp, #0x120
  44fe50:	stp	x12, x12, [sp, #16]
  44fe54:	str	x11, [sp, #32]
  44fe58:	stp	w10, w9, [sp, #40]
  44fe5c:	str	x4, [sp, #48]
  44fe60:	str	q0, [sp, #128]
  44fe64:	str	q1, [sp, #144]
  44fe68:	str	q2, [sp, #160]
  44fe6c:	str	q3, [sp, #176]
  44fe70:	str	q4, [sp, #192]
  44fe74:	str	q5, [sp, #208]
  44fe78:	str	q6, [sp, #224]
  44fe7c:	str	q7, [sp, #240]
  44fe80:	stp	x4, x5, [sp, #256]
  44fe84:	stp	x6, x7, [sp, #272]
  44fe88:	cbz	x4, 44ff78 <argp_parse@@Base+0x10198>
  44fe8c:	str	x5, [sp, #56]
  44fe90:	cbz	x5, 44ff70 <argp_parse@@Base+0x10190>
  44fe94:	str	x6, [sp, #64]
  44fe98:	mov	x5, #0x2                   	// #2
  44fe9c:	cbz	x6, 44ff10 <argp_parse@@Base+0x10130>
  44fea0:	str	x7, [sp, #72]
  44fea4:	mov	x5, #0x3                   	// #3
  44fea8:	cbz	x7, 44ff10 <argp_parse@@Base+0x10130>
  44feac:	ldr	x4, [sp, #288]
  44feb0:	str	x4, [sp, #80]
  44feb4:	mov	x5, #0x4                   	// #4
  44feb8:	cbz	x4, 44ff10 <argp_parse@@Base+0x10130>
  44febc:	ldr	x5, [sp, #296]
  44fec0:	str	x5, [sp, #88]
  44fec4:	add	x4, sp, #0x130
  44fec8:	cbz	x5, 44ff20 <argp_parse@@Base+0x10140>
  44fecc:	ldr	x5, [x4]
  44fed0:	str	x5, [sp, #96]
  44fed4:	add	x4, x4, #0x8
  44fed8:	cbz	x5, 44ff34 <argp_parse@@Base+0x10154>
  44fedc:	ldr	x5, [x4]
  44fee0:	str	x5, [sp, #104]
  44fee4:	add	x4, x4, #0x8
  44fee8:	cbz	x5, 44ff48 <argp_parse@@Base+0x10168>
  44feec:	ldr	x5, [x4]
  44fef0:	str	x5, [sp, #112]
  44fef4:	add	x4, x4, #0x8
  44fef8:	cbz	x5, 44ff5c <argp_parse@@Base+0x1017c>
  44fefc:	ldr	x4, [x4]
  44ff00:	str	x4, [sp, #120]
  44ff04:	cmp	x4, #0x0
  44ff08:	cset	x5, ne  // ne = any
  44ff0c:	add	x5, x5, #0x9
  44ff10:	add	x4, sp, #0x30
  44ff14:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44ff18:	ldp	x29, x30, [sp], #288
  44ff1c:	ret
  44ff20:	add	x4, sp, #0x30
  44ff24:	mov	x5, #0x5                   	// #5
  44ff28:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44ff2c:	ldp	x29, x30, [sp], #288
  44ff30:	ret
  44ff34:	add	x4, sp, #0x30
  44ff38:	mov	x5, #0x6                   	// #6
  44ff3c:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44ff40:	ldp	x29, x30, [sp], #288
  44ff44:	ret
  44ff48:	add	x4, sp, #0x30
  44ff4c:	mov	x5, #0x7                   	// #7
  44ff50:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44ff54:	ldp	x29, x30, [sp], #288
  44ff58:	ret
  44ff5c:	add	x4, sp, #0x30
  44ff60:	mov	x5, #0x8                   	// #8
  44ff64:	bl	44f7b8 <argp_parse@@Base+0xf9d8>
  44ff68:	ldp	x29, x30, [sp], #288
  44ff6c:	ret
  44ff70:	mov	x5, #0x1                   	// #1
  44ff74:	b	44ff10 <argp_parse@@Base+0x10130>
  44ff78:	mov	x5, #0x0                   	// #0
  44ff7c:	b	44ff10 <argp_parse@@Base+0x10130>
  44ff80:	stp	x29, x30, [sp, #-16]!
  44ff84:	mov	w2, #0x5                   	// #5
  44ff88:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ff8c:	mov	x29, sp
  44ff90:	add	x1, x1, #0xdf8
  44ff94:	mov	x0, #0x0                   	// #0
  44ff98:	bl	4049c0 <dcgettext@plt>
  44ff9c:	mov	x1, x0
  44ffa0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ffa4:	mov	w0, #0x1                   	// #1
  44ffa8:	add	x2, x2, #0xe10
  44ffac:	bl	404400 <__printf_chk@plt>
  44ffb0:	mov	w2, #0x5                   	// #5
  44ffb4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ffb8:	mov	x0, #0x0                   	// #0
  44ffbc:	add	x1, x1, #0xe20
  44ffc0:	bl	4049c0 <dcgettext@plt>
  44ffc4:	mov	x1, x0
  44ffc8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ffcc:	add	x3, x3, #0xe38
  44ffd0:	adrp	x2, 469000 <_obstack_memory_used@@Base+0x17bf0>
  44ffd4:	mov	w0, #0x1                   	// #1
  44ffd8:	add	x2, x2, #0x7e0
  44ffdc:	bl	404400 <__printf_chk@plt>
  44ffe0:	mov	w2, #0x5                   	// #5
  44ffe4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  44ffe8:	mov	x0, #0x0                   	// #0
  44ffec:	add	x1, x1, #0xe60
  44fff0:	bl	4049c0 <dcgettext@plt>
  44fff4:	ldp	x29, x30, [sp], #16
  44fff8:	adrp	x1, 496000 <_obstack_memory_used@@Base+0x44bf0>
  44fffc:	ldr	x1, [x1, #1184]
  450000:	b	4049e0 <fputs_unlocked@plt>
  450004:	nop
  450008:	stp	x29, x30, [sp, #-32]!
  45000c:	umulh	x2, x0, x1
  450010:	mov	x29, sp
  450014:	str	x19, [sp, #16]
  450018:	mul	x19, x0, x1
  45001c:	cmp	x2, #0x0
  450020:	cset	x0, ne  // ne = any
  450024:	tbnz	x19, #63, 45004c <argp_parse@@Base+0x1026c>
  450028:	cbnz	x0, 45004c <argp_parse@@Base+0x1026c>
  45002c:	mov	x0, x19
  450030:	bl	404310 <malloc@plt>
  450034:	cmp	x0, #0x0
  450038:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45003c:	b.ne	45004c <argp_parse@@Base+0x1026c>  // b.any
  450040:	ldr	x19, [sp, #16]
  450044:	ldp	x29, x30, [sp], #32
  450048:	ret
  45004c:	bl	4104a0 <wcrtomb@plt+0xb880>
  450050:	stp	x29, x30, [sp, #-32]!
  450054:	umulh	x4, x1, x2
  450058:	mov	x29, sp
  45005c:	str	x19, [sp, #16]
  450060:	mul	x19, x1, x2
  450064:	cmp	x4, #0x0
  450068:	cset	x1, ne  // ne = any
  45006c:	tbnz	x19, #63, 4500b4 <argp_parse@@Base+0x102d4>
  450070:	cbnz	x1, 4500b4 <argp_parse@@Base+0x102d4>
  450074:	cmp	x19, #0x0
  450078:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  45007c:	b.ne	4500a0 <argp_parse@@Base+0x102c0>  // b.any
  450080:	mov	x1, x19
  450084:	bl	404530 <realloc@plt>
  450088:	cmp	x0, #0x0
  45008c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  450090:	b.ne	4500b4 <argp_parse@@Base+0x102d4>  // b.any
  450094:	ldr	x19, [sp, #16]
  450098:	ldp	x29, x30, [sp], #32
  45009c:	ret
  4500a0:	bl	4047b0 <free@plt>
  4500a4:	mov	x0, #0x0                   	// #0
  4500a8:	ldr	x19, [sp, #16]
  4500ac:	ldp	x29, x30, [sp], #32
  4500b0:	ret
  4500b4:	bl	4104a0 <wcrtomb@plt+0xb880>
  4500b8:	stp	x29, x30, [sp, #-32]!
  4500bc:	mov	x4, x0
  4500c0:	mov	x29, sp
  4500c4:	ldr	x3, [x1]
  4500c8:	str	x19, [sp, #16]
  4500cc:	cbz	x0, 45011c <argp_parse@@Base+0x1033c>
  4500d0:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  4500d4:	movk	x5, #0x5554
  4500d8:	udiv	x5, x5, x2
  4500dc:	cmp	x5, x3
  4500e0:	b.ls	450168 <argp_parse@@Base+0x10388>  // b.plast
  4500e4:	add	x19, x3, #0x1
  4500e8:	add	x19, x19, x3, lsr #1
  4500ec:	str	x19, [x1]
  4500f0:	mul	x19, x2, x19
  4500f4:	cbz	x19, 450154 <argp_parse@@Base+0x10374>
  4500f8:	mov	x0, x4
  4500fc:	mov	x1, x19
  450100:	bl	404530 <realloc@plt>
  450104:	cmp	x0, #0x0
  450108:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45010c:	b.ne	450168 <argp_parse@@Base+0x10388>  // b.any
  450110:	ldr	x19, [sp, #16]
  450114:	ldp	x29, x30, [sp], #32
  450118:	ret
  45011c:	cbz	x3, 450140 <argp_parse@@Base+0x10360>
  450120:	umulh	x0, x3, x2
  450124:	mul	x19, x3, x2
  450128:	cmp	x0, #0x0
  45012c:	cset	x0, ne  // ne = any
  450130:	tbnz	x19, #63, 450168 <argp_parse@@Base+0x10388>
  450134:	cbnz	x0, 450168 <argp_parse@@Base+0x10388>
  450138:	str	x3, [x1]
  45013c:	b	4500f8 <argp_parse@@Base+0x10318>
  450140:	mov	x3, #0x80                  	// #128
  450144:	cmp	x2, x3
  450148:	udiv	x3, x3, x2
  45014c:	cinc	x3, x3, hi  // hi = pmore
  450150:	b	450120 <argp_parse@@Base+0x10340>
  450154:	bl	4047b0 <free@plt>
  450158:	mov	x0, #0x0                   	// #0
  45015c:	ldr	x19, [sp, #16]
  450160:	ldp	x29, x30, [sp], #32
  450164:	ret
  450168:	bl	4104a0 <wcrtomb@plt+0xb880>
  45016c:	nop
  450170:	stp	x29, x30, [sp, #-32]!
  450174:	mov	x29, sp
  450178:	str	x19, [sp, #16]
  45017c:	mov	x19, x0
  450180:	bl	404310 <malloc@plt>
  450184:	cmp	x0, #0x0
  450188:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45018c:	b.ne	45019c <argp_parse@@Base+0x103bc>  // b.any
  450190:	ldr	x19, [sp, #16]
  450194:	ldp	x29, x30, [sp], #32
  450198:	ret
  45019c:	bl	4104a0 <wcrtomb@plt+0xb880>
  4501a0:	stp	x29, x30, [sp, #-32]!
  4501a4:	mov	x29, sp
  4501a8:	str	x19, [sp, #16]
  4501ac:	mov	x19, x0
  4501b0:	bl	404310 <malloc@plt>
  4501b4:	cmp	x0, #0x0
  4501b8:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4501bc:	b.ne	4501cc <argp_parse@@Base+0x103ec>  // b.any
  4501c0:	ldr	x19, [sp, #16]
  4501c4:	ldp	x29, x30, [sp], #32
  4501c8:	ret
  4501cc:	bl	4104a0 <wcrtomb@plt+0xb880>
  4501d0:	stp	x29, x30, [sp, #-32]!
  4501d4:	cmp	x1, #0x0
  4501d8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  4501dc:	mov	x29, sp
  4501e0:	b.ne	450208 <argp_parse@@Base+0x10428>  // b.any
  4501e4:	str	x19, [sp, #16]
  4501e8:	mov	x19, x1
  4501ec:	bl	404530 <realloc@plt>
  4501f0:	cmp	x0, #0x0
  4501f4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4501f8:	b.ne	450218 <argp_parse@@Base+0x10438>  // b.any
  4501fc:	ldr	x19, [sp, #16]
  450200:	ldp	x29, x30, [sp], #32
  450204:	ret
  450208:	bl	4047b0 <free@plt>
  45020c:	mov	x0, #0x0                   	// #0
  450210:	ldp	x29, x30, [sp], #32
  450214:	ret
  450218:	bl	4104a0 <wcrtomb@plt+0xb880>
  45021c:	nop
  450220:	stp	x29, x30, [sp, #-16]!
  450224:	mov	x2, x1
  450228:	mov	x29, sp
  45022c:	ldr	x1, [x1]
  450230:	cbz	x0, 450260 <argp_parse@@Base+0x10480>
  450234:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  450238:	movk	x3, #0x5553
  45023c:	cmp	x1, x3
  450240:	b.hi	450274 <argp_parse@@Base+0x10494>  // b.pmore
  450244:	add	x3, x1, #0x1
  450248:	add	x1, x3, x1, lsr #1
  45024c:	str	x1, [x2]
  450250:	bl	404530 <realloc@plt>
  450254:	cbz	x0, 450274 <argp_parse@@Base+0x10494>
  450258:	ldp	x29, x30, [sp], #16
  45025c:	ret
  450260:	cmp	x1, #0x0
  450264:	cbnz	x1, 450270 <argp_parse@@Base+0x10490>
  450268:	mov	x1, #0x80                  	// #128
  45026c:	b	45024c <argp_parse@@Base+0x1046c>
  450270:	b.ge	45024c <argp_parse@@Base+0x1046c>  // b.tcont
  450274:	bl	4104a0 <wcrtomb@plt+0xb880>
  450278:	stp	x29, x30, [sp, #-32]!
  45027c:	mov	x1, #0x1                   	// #1
  450280:	mov	x29, sp
  450284:	str	x19, [sp, #16]
  450288:	mov	x19, x0
  45028c:	bl	4044c0 <calloc@plt>
  450290:	cmp	x0, #0x0
  450294:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  450298:	b.ne	4502a8 <argp_parse@@Base+0x104c8>  // b.any
  45029c:	ldr	x19, [sp, #16]
  4502a0:	ldp	x29, x30, [sp], #32
  4502a4:	ret
  4502a8:	bl	4104a0 <wcrtomb@plt+0xb880>
  4502ac:	nop
  4502b0:	umulh	x4, x0, x1
  4502b4:	stp	x29, x30, [sp, #-16]!
  4502b8:	mul	x2, x0, x1
  4502bc:	cmp	x4, #0x0
  4502c0:	mov	x29, sp
  4502c4:	cset	x3, ne  // ne = any
  4502c8:	tbnz	x2, #63, 4502e0 <argp_parse@@Base+0x10500>
  4502cc:	cbnz	x3, 4502e0 <argp_parse@@Base+0x10500>
  4502d0:	bl	4044c0 <calloc@plt>
  4502d4:	cbz	x0, 4502e0 <argp_parse@@Base+0x10500>
  4502d8:	ldp	x29, x30, [sp], #16
  4502dc:	ret
  4502e0:	bl	4104a0 <wcrtomb@plt+0xb880>
  4502e4:	nop
  4502e8:	stp	x29, x30, [sp, #-32]!
  4502ec:	mov	x29, sp
  4502f0:	stp	x19, x20, [sp, #16]
  4502f4:	mov	x19, x1
  4502f8:	mov	x20, x0
  4502fc:	mov	x0, x1
  450300:	bl	404310 <malloc@plt>
  450304:	cmp	x0, #0x0
  450308:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45030c:	b.ne	450324 <argp_parse@@Base+0x10544>  // b.any
  450310:	mov	x2, x19
  450314:	mov	x1, x20
  450318:	ldp	x19, x20, [sp, #16]
  45031c:	ldp	x29, x30, [sp], #32
  450320:	b	403f70 <memcpy@plt>
  450324:	bl	4104a0 <wcrtomb@plt+0xb880>
  450328:	stp	x29, x30, [sp, #-32]!
  45032c:	mov	x29, sp
  450330:	stp	x19, x20, [sp, #16]
  450334:	mov	x20, x0
  450338:	bl	403ff0 <strlen@plt>
  45033c:	add	x19, x0, #0x1
  450340:	mov	x0, x19
  450344:	bl	404310 <malloc@plt>
  450348:	cbz	x0, 450360 <argp_parse@@Base+0x10580>
  45034c:	mov	x2, x19
  450350:	mov	x1, x20
  450354:	ldp	x19, x20, [sp, #16]
  450358:	ldp	x29, x30, [sp], #32
  45035c:	b	403f70 <memcpy@plt>
  450360:	bl	4104a0 <wcrtomb@plt+0xb880>
  450364:	nop
  450368:	stp	x29, x30, [sp, #-32]!
  45036c:	mov	x1, #0x0                   	// #0
  450370:	mov	x0, #0x0                   	// #0
  450374:	mov	x29, sp
  450378:	str	x19, [sp, #16]
  45037c:	bl	403fa0 <getcwd@plt>
  450380:	mov	x19, x0
  450384:	cbz	x0, 450398 <argp_parse@@Base+0x105b8>
  450388:	mov	x0, x19
  45038c:	ldr	x19, [sp, #16]
  450390:	ldp	x29, x30, [sp], #32
  450394:	ret
  450398:	bl	404ad0 <__errno_location@plt>
  45039c:	ldr	w0, [x0]
  4503a0:	cmp	w0, #0xc
  4503a4:	b.ne	450388 <argp_parse@@Base+0x105a8>  // b.any
  4503a8:	bl	4104a0 <wcrtomb@plt+0xb880>
  4503ac:	nop
  4503b0:	stp	x29, x30, [sp, #-16]!
  4503b4:	mov	x29, sp
  4503b8:	bl	404850 <strndup@plt>
  4503bc:	cbz	x0, 4503c8 <argp_parse@@Base+0x105e8>
  4503c0:	ldp	x29, x30, [sp], #16
  4503c4:	ret
  4503c8:	bl	4104a0 <wcrtomb@plt+0xb880>
  4503cc:	nop
  4503d0:	stp	x29, x30, [sp, #-112]!
  4503d4:	cmp	w2, #0x24
  4503d8:	mov	x29, sp
  4503dc:	stp	x19, x20, [sp, #16]
  4503e0:	stp	x21, x22, [sp, #32]
  4503e4:	stp	x23, x24, [sp, #48]
  4503e8:	stp	x25, x26, [sp, #64]
  4503ec:	b.hi	450864 <argp_parse@@Base+0x10a84>  // b.pmore
  4503f0:	cmp	x1, #0x0
  4503f4:	mov	x19, x0
  4503f8:	add	x0, sp, #0x68
  4503fc:	mov	w24, w2
  450400:	mov	x21, x3
  450404:	mov	x20, x4
  450408:	csel	x23, x0, x1, eq  // eq = none
  45040c:	bl	404ad0 <__errno_location@plt>
  450410:	str	wzr, [x0]
  450414:	mov	x22, x0
  450418:	bl	404740 <__ctype_b_loc@plt>
  45041c:	ldrb	w5, [x19]
  450420:	ldr	x6, [x0]
  450424:	ubfiz	x0, x5, #1, #8
  450428:	ldrh	w0, [x6, x0]
  45042c:	tbz	w0, #13, 450448 <argp_parse@@Base+0x10668>
  450430:	mov	x3, x19
  450434:	nop
  450438:	ldrb	w5, [x3, #1]!
  45043c:	ubfiz	x4, x5, #1, #8
  450440:	ldrh	w4, [x6, x4]
  450444:	tbnz	w4, #13, 450438 <argp_parse@@Base+0x10658>
  450448:	cmp	w5, #0x2d
  45044c:	b.eq	4504c8 <argp_parse@@Base+0x106e8>  // b.none
  450450:	mov	w2, w24
  450454:	mov	x1, x23
  450458:	mov	x0, x19
  45045c:	mov	w3, #0x0                   	// #0
  450460:	bl	4044b0 <__strtoul_internal@plt>
  450464:	mov	x24, x0
  450468:	ldr	x25, [x23]
  45046c:	cmp	x25, x19
  450470:	b.eq	4504bc <argp_parse@@Base+0x106dc>  // b.none
  450474:	ldr	w0, [x22]
  450478:	cbz	w0, 4504b4 <argp_parse@@Base+0x106d4>
  45047c:	cmp	w0, #0x22
  450480:	mov	w26, #0x1                   	// #1
  450484:	b.ne	4504c8 <argp_parse@@Base+0x106e8>  // b.any
  450488:	cbz	x20, 450494 <argp_parse@@Base+0x106b4>
  45048c:	ldrb	w22, [x25]
  450490:	cbnz	w22, 45058c <argp_parse@@Base+0x107ac>
  450494:	str	x24, [x21]
  450498:	mov	w0, w26
  45049c:	ldp	x19, x20, [sp, #16]
  4504a0:	ldp	x21, x22, [sp, #32]
  4504a4:	ldp	x23, x24, [sp, #48]
  4504a8:	ldp	x25, x26, [sp, #64]
  4504ac:	ldp	x29, x30, [sp], #112
  4504b0:	ret
  4504b4:	mov	w26, #0x0                   	// #0
  4504b8:	b	450488 <argp_parse@@Base+0x106a8>
  4504bc:	cbz	x20, 4504c8 <argp_parse@@Base+0x106e8>
  4504c0:	ldrb	w22, [x19]
  4504c4:	cbnz	w22, 4504e8 <argp_parse@@Base+0x10708>
  4504c8:	mov	w26, #0x4                   	// #4
  4504cc:	mov	w0, w26
  4504d0:	ldp	x19, x20, [sp, #16]
  4504d4:	ldp	x21, x22, [sp, #32]
  4504d8:	ldp	x23, x24, [sp, #48]
  4504dc:	ldp	x25, x26, [sp, #64]
  4504e0:	ldp	x29, x30, [sp], #112
  4504e4:	ret
  4504e8:	mov	w1, w22
  4504ec:	mov	x0, x20
  4504f0:	mov	w26, #0x0                   	// #0
  4504f4:	mov	x24, #0x1                   	// #1
  4504f8:	bl	404870 <strchr@plt>
  4504fc:	cbz	x0, 4504c8 <argp_parse@@Base+0x106e8>
  450500:	sub	w2, w22, #0x45
  450504:	and	w2, w2, #0xff
  450508:	cmp	w2, #0x2f
  45050c:	b.hi	4505a4 <argp_parse@@Base+0x107c4>  // b.pmore
  450510:	mov	x6, #0x8945                	// #35141
  450514:	mov	x5, #0x1                   	// #1
  450518:	movk	x6, #0x30, lsl #16
  45051c:	lsl	x2, x5, x2
  450520:	movk	x6, #0x8144, lsl #32
  450524:	mov	x19, #0x400                 	// #1024
  450528:	tst	x2, x6
  45052c:	b.ne	4506e8 <argp_parse@@Base+0x10908>  // b.any
  450530:	cmp	w22, #0x5a
  450534:	b.eq	4505ec <argp_parse@@Base+0x1080c>  // b.none
  450538:	b.hi	450608 <argp_parse@@Base+0x10828>  // b.pmore
  45053c:	cmp	w22, #0x4d
  450540:	b.eq	4506c8 <argp_parse@@Base+0x108e8>  // b.none
  450544:	b.hi	4505d0 <argp_parse@@Base+0x107f0>  // b.pmore
  450548:	cmp	w22, #0x45
  45054c:	b.eq	45082c <argp_parse@@Base+0x10a4c>  // b.none
  450550:	b.ls	4505b0 <argp_parse@@Base+0x107d0>  // b.plast
  450554:	cmp	w22, #0x47
  450558:	b.eq	450624 <argp_parse@@Base+0x10844>  // b.none
  45055c:	cmp	w22, #0x4b
  450560:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  450564:	umulh	x0, x24, x19
  450568:	cbnz	x0, 4506dc <argp_parse@@Base+0x108fc>
  45056c:	mul	x24, x24, x19
  450570:	add	x0, x25, x5
  450574:	str	x0, [x23]
  450578:	orr	w0, w26, #0x2
  45057c:	ldrb	w1, [x25, x5]
  450580:	cmp	w1, #0x0
  450584:	csel	w26, w0, w26, ne  // ne = any
  450588:	b	450494 <argp_parse@@Base+0x106b4>
  45058c:	mov	w1, w22
  450590:	mov	x0, x20
  450594:	bl	404870 <strchr@plt>
  450598:	cbnz	x0, 450500 <argp_parse@@Base+0x10720>
  45059c:	orr	w26, w26, #0x2
  4505a0:	b	450494 <argp_parse@@Base+0x106b4>
  4505a4:	mov	x19, #0x400                 	// #1024
  4505a8:	mov	x5, #0x1                   	// #1
  4505ac:	b	450530 <argp_parse@@Base+0x10750>
  4505b0:	cmp	w22, #0x42
  4505b4:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  4505b8:	lsr	x0, x24, #54
  4505bc:	lsl	x24, x24, #10
  4505c0:	cmp	x0, #0x0
  4505c4:	csinc	w26, w26, wzr, eq  // eq = none
  4505c8:	csinv	x24, x24, xzr, eq  // eq = none
  4505cc:	b	450570 <argp_parse@@Base+0x10790>
  4505d0:	cmp	w22, #0x54
  4505d4:	b.eq	4506b0 <argp_parse@@Base+0x108d0>  // b.none
  4505d8:	cmp	w22, #0x59
  4505dc:	b.ne	45069c <argp_parse@@Base+0x108bc>  // b.any
  4505e0:	umulh	x0, x24, x19
  4505e4:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  4505e8:	mul	x24, x19, x24
  4505ec:	umulh	x0, x24, x19
  4505f0:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  4505f4:	mul	x24, x19, x24
  4505f8:	umulh	x0, x24, x19
  4505fc:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  450600:	mul	x24, x19, x24
  450604:	b	4506a4 <argp_parse@@Base+0x108c4>
  450608:	cmp	w22, #0x6b
  45060c:	b.eq	450564 <argp_parse@@Base+0x10784>  // b.none
  450610:	b.hi	450674 <argp_parse@@Base+0x10894>  // b.pmore
  450614:	cmp	w22, #0x63
  450618:	b.eq	450570 <argp_parse@@Base+0x10790>  // b.none
  45061c:	cmp	w22, #0x67
  450620:	b.ne	450654 <argp_parse@@Base+0x10874>  // b.any
  450624:	umulh	x0, x24, x19
  450628:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  45062c:	mul	x24, x24, x19
  450630:	umulh	x0, x24, x19
  450634:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  450638:	mul	x24, x24, x19
  45063c:	umulh	x0, x24, x19
  450640:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  450644:	mov	w0, #0x0                   	// #0
  450648:	mul	x24, x24, x19
  45064c:	orr	w26, w26, w0
  450650:	b	450570 <argp_parse@@Base+0x10790>
  450654:	cmp	w22, #0x62
  450658:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  45065c:	lsr	x0, x24, #55
  450660:	lsl	x24, x24, #9
  450664:	cmp	x0, #0x0
  450668:	csinc	w26, w26, wzr, eq  // eq = none
  45066c:	csinv	x24, x24, xzr, eq  // eq = none
  450670:	b	450570 <argp_parse@@Base+0x10790>
  450674:	cmp	w22, #0x74
  450678:	b.eq	4506b0 <argp_parse@@Base+0x108d0>  // b.none
  45067c:	cmp	w22, #0x77
  450680:	b.ne	4506c0 <argp_parse@@Base+0x108e0>  // b.any
  450684:	lsr	x0, x24, #63
  450688:	lsl	x24, x24, #1
  45068c:	cmp	x0, #0x0
  450690:	csinc	w26, w26, wzr, eq  // eq = none
  450694:	csinv	x24, x24, xzr, eq  // eq = none
  450698:	b	450570 <argp_parse@@Base+0x10790>
  45069c:	cmp	w22, #0x50
  4506a0:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  4506a4:	umulh	x0, x24, x19
  4506a8:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  4506ac:	mul	x24, x24, x19
  4506b0:	umulh	x0, x24, x19
  4506b4:	cbnz	x0, 450834 <argp_parse@@Base+0x10a54>
  4506b8:	mul	x24, x24, x19
  4506bc:	b	450624 <argp_parse@@Base+0x10844>
  4506c0:	cmp	w22, #0x6d
  4506c4:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  4506c8:	umulh	x0, x24, x19
  4506cc:	cbnz	x0, 4506dc <argp_parse@@Base+0x108fc>
  4506d0:	mul	x24, x19, x24
  4506d4:	umulh	x0, x24, x19
  4506d8:	cbz	x0, 45056c <argp_parse@@Base+0x1078c>
  4506dc:	mov	w26, #0x1                   	// #1
  4506e0:	mov	x24, #0xffffffffffffffff    	// #-1
  4506e4:	b	450570 <argp_parse@@Base+0x10790>
  4506e8:	mov	x0, x20
  4506ec:	mov	w1, #0x30                  	// #48
  4506f0:	str	x5, [sp, #88]
  4506f4:	bl	404870 <strchr@plt>
  4506f8:	ldr	x5, [sp, #88]
  4506fc:	cbz	x0, 450530 <argp_parse@@Base+0x10750>
  450700:	ldrb	w0, [x25, #1]
  450704:	cmp	w0, #0x44
  450708:	b.eq	450770 <argp_parse@@Base+0x10990>  // b.none
  45070c:	cmp	w0, #0x69
  450710:	b.eq	45075c <argp_parse@@Base+0x1097c>  // b.none
  450714:	cmp	w0, #0x42
  450718:	b.eq	450770 <argp_parse@@Base+0x10990>  // b.none
  45071c:	cmp	w22, #0x5a
  450720:	b.eq	4505ec <argp_parse@@Base+0x1080c>  // b.none
  450724:	b.hi	4507ac <argp_parse@@Base+0x109cc>  // b.pmore
  450728:	cmp	w22, #0x4d
  45072c:	b.eq	4506c8 <argp_parse@@Base+0x108e8>  // b.none
  450730:	b.hi	450790 <argp_parse@@Base+0x109b0>  // b.pmore
  450734:	cmp	w22, #0x45
  450738:	b.eq	450824 <argp_parse@@Base+0x10a44>  // b.none
  45073c:	b.ls	45077c <argp_parse@@Base+0x1099c>  // b.plast
  450740:	cmp	w22, #0x47
  450744:	b.eq	450844 <argp_parse@@Base+0x10a64>  // b.none
  450748:	cmp	w22, #0x4b
  45074c:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  450750:	mov	x5, #0x1                   	// #1
  450754:	mov	x19, #0x400                 	// #1024
  450758:	b	450564 <argp_parse@@Base+0x10784>
  45075c:	ldrb	w1, [x25, #2]
  450760:	mov	x0, #0x3                   	// #3
  450764:	cmp	w1, #0x42
  450768:	csel	x5, x5, x0, ne  // ne = any
  45076c:	b	450530 <argp_parse@@Base+0x10750>
  450770:	mov	x19, #0x3e8                 	// #1000
  450774:	mov	x5, #0x2                   	// #2
  450778:	b	450530 <argp_parse@@Base+0x10750>
  45077c:	cmp	w22, #0x42
  450780:	mov	x5, #0x1                   	// #1
  450784:	b.eq	4505b8 <argp_parse@@Base+0x107d8>  // b.none
  450788:	orr	w26, w26, #0x2
  45078c:	b	450494 <argp_parse@@Base+0x106b4>
  450790:	cmp	w22, #0x54
  450794:	b.eq	450858 <argp_parse@@Base+0x10a78>  // b.none
  450798:	cmp	w22, #0x59
  45079c:	b.ne	4507d8 <argp_parse@@Base+0x109f8>  // b.any
  4507a0:	mov	x5, #0x1                   	// #1
  4507a4:	mov	x19, #0x400                 	// #1024
  4507a8:	b	4505e0 <argp_parse@@Base+0x10800>
  4507ac:	cmp	w22, #0x67
  4507b0:	b.eq	450624 <argp_parse@@Base+0x10844>  // b.none
  4507b4:	b.ls	450808 <argp_parse@@Base+0x10a28>  // b.plast
  4507b8:	cmp	w22, #0x74
  4507bc:	b.eq	450858 <argp_parse@@Base+0x10a78>  // b.none
  4507c0:	b.ls	4507ec <argp_parse@@Base+0x10a0c>  // b.plast
  4507c4:	cmp	w22, #0x77
  4507c8:	mov	x5, #0x1                   	// #1
  4507cc:	b.eq	450684 <argp_parse@@Base+0x108a4>  // b.none
  4507d0:	orr	w26, w26, #0x2
  4507d4:	b	450494 <argp_parse@@Base+0x106b4>
  4507d8:	cmp	w22, #0x50
  4507dc:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  4507e0:	mov	x5, #0x1                   	// #1
  4507e4:	mov	x19, #0x400                 	// #1024
  4507e8:	b	4506a4 <argp_parse@@Base+0x108c4>
  4507ec:	cmp	w22, #0x6b
  4507f0:	b.eq	450750 <argp_parse@@Base+0x10970>  // b.none
  4507f4:	cmp	w22, #0x6d
  4507f8:	b.ne	45059c <argp_parse@@Base+0x107bc>  // b.any
  4507fc:	mov	x5, #0x1                   	// #1
  450800:	mov	x19, #0x400                 	// #1024
  450804:	b	4506c8 <argp_parse@@Base+0x108e8>
  450808:	cmp	w22, #0x62
  45080c:	b.eq	450850 <argp_parse@@Base+0x10a70>  // b.none
  450810:	cmp	w22, #0x63
  450814:	mov	x5, #0x1                   	// #1
  450818:	b.eq	450570 <argp_parse@@Base+0x10790>  // b.none
  45081c:	orr	w26, w26, #0x2
  450820:	b	450494 <argp_parse@@Base+0x106b4>
  450824:	mov	x5, #0x1                   	// #1
  450828:	mov	x19, #0x400                 	// #1024
  45082c:	umulh	x0, x24, x19
  450830:	cbz	x0, 450600 <argp_parse@@Base+0x10820>
  450834:	mov	w0, #0x1                   	// #1
  450838:	mov	x24, #0xffffffffffffffff    	// #-1
  45083c:	orr	w26, w26, w0
  450840:	b	450570 <argp_parse@@Base+0x10790>
  450844:	mov	x5, #0x1                   	// #1
  450848:	mov	x19, #0x400                 	// #1024
  45084c:	b	450624 <argp_parse@@Base+0x10844>
  450850:	mov	x5, #0x1                   	// #1
  450854:	b	45065c <argp_parse@@Base+0x1087c>
  450858:	mov	x5, #0x1                   	// #1
  45085c:	mov	x19, #0x400                 	// #1024
  450860:	b	4506b0 <argp_parse@@Base+0x108d0>
  450864:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450868:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  45086c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450870:	add	x3, x3, #0xf18
  450874:	add	x1, x1, #0xee0
  450878:	add	x0, x0, #0xef0
  45087c:	mov	w2, #0x54                  	// #84
  450880:	bl	404ac0 <__assert_fail@plt>
  450884:	nop
  450888:	stp	x29, x30, [sp, #-272]!
  45088c:	mov	w9, #0xffffffc8            	// #-56
  450890:	mov	w8, #0xffffff80            	// #-128
  450894:	mov	x29, sp
  450898:	add	x10, sp, #0xd0
  45089c:	add	x11, sp, #0x110
  4508a0:	stp	x11, x11, [sp, #48]
  4508a4:	str	x10, [sp, #64]
  4508a8:	stp	w9, w8, [sp, #72]
  4508ac:	ldp	x10, x11, [sp, #48]
  4508b0:	stp	x10, x11, [sp, #16]
  4508b4:	ldp	x8, x9, [sp, #64]
  4508b8:	stp	x8, x9, [sp, #32]
  4508bc:	str	q0, [sp, #80]
  4508c0:	str	q1, [sp, #96]
  4508c4:	str	q2, [sp, #112]
  4508c8:	str	q3, [sp, #128]
  4508cc:	str	q4, [sp, #144]
  4508d0:	str	q5, [sp, #160]
  4508d4:	str	q6, [sp, #176]
  4508d8:	str	q7, [sp, #192]
  4508dc:	stp	x1, x2, [sp, #216]
  4508e0:	add	x1, sp, #0x10
  4508e4:	stp	x3, x4, [sp, #232]
  4508e8:	stp	x5, x6, [sp, #248]
  4508ec:	str	x7, [sp, #264]
  4508f0:	bl	464610 <_obstack_memory_used@@Base+0x13200>
  4508f4:	ldp	x29, x30, [sp], #272
  4508f8:	ret
  4508fc:	nop
  450900:	stp	x29, x30, [sp, #-16]!
  450904:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450908:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  45090c:	mov	x29, sp
  450910:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450914:	add	x3, x3, #0xf98
  450918:	add	x1, x1, #0xf28
  45091c:	add	x0, x0, #0xf38
  450920:	mov	w2, #0x40                  	// #64
  450924:	bl	404ac0 <__assert_fail@plt>
  450928:	stp	x29, x30, [sp, #-80]!
  45092c:	mov	x29, sp
  450930:	stp	x19, x20, [sp, #16]
  450934:	stp	x23, x24, [sp, #48]
  450938:	mov	x23, x0
  45093c:	bl	4047a0 <chdir@plt>
  450940:	mov	w19, w0
  450944:	cbz	w0, 450a98 <argp_parse@@Base+0x10cb8>
  450948:	stp	x21, x22, [sp, #32]
  45094c:	bl	404ad0 <__errno_location@plt>
  450950:	mov	x22, x0
  450954:	ldr	w0, [x0]
  450958:	cmp	w0, #0x24
  45095c:	b.ne	450aac <argp_parse@@Base+0x10ccc>  // b.any
  450960:	mov	x0, x23
  450964:	stp	x25, x26, [sp, #64]
  450968:	bl	403ff0 <strlen@plt>
  45096c:	mov	x24, x0
  450970:	cbz	x0, 450c04 <argp_parse@@Base+0x10e24>
  450974:	cmp	x0, #0xfff
  450978:	b.ls	450c28 <argp_parse@@Base+0x10e48>  // b.plast
  45097c:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450980:	add	x21, x21, #0xff0
  450984:	mov	x1, x21
  450988:	mov	x0, x23
  45098c:	bl	404860 <strspn@plt>
  450990:	mov	x19, x0
  450994:	cmp	x0, #0x2
  450998:	b.eq	450ae4 <argp_parse@@Base+0x10d04>  // b.none
  45099c:	mov	x20, x23
  4509a0:	mov	w26, #0xffffff9c            	// #-100
  4509a4:	cbnz	x0, 450ac4 <argp_parse@@Base+0x10ce4>
  4509a8:	ldrb	w0, [x20]
  4509ac:	cmp	w0, #0x2f
  4509b0:	b.eq	450c4c <argp_parse@@Base+0x10e6c>  // b.none
  4509b4:	add	x24, x23, x24
  4509b8:	cmp	x20, x24
  4509bc:	b.hi	450c70 <argp_parse@@Base+0x10e90>  // b.pmore
  4509c0:	sub	x0, x24, x20
  4509c4:	mov	w25, #0x2f                  	// #47
  4509c8:	cmp	x0, #0xfff
  4509cc:	b.gt	4509f8 <argp_parse@@Base+0x10c18>
  4509d0:	b	450a4c <argp_parse@@Base+0x10c6c>
  4509d4:	strb	w25, [x19], #1
  4509d8:	mov	x1, x21
  4509dc:	mov	x0, x19
  4509e0:	bl	404860 <strspn@plt>
  4509e4:	add	x20, x19, x0
  4509e8:	sub	x0, x24, x20
  4509ec:	cmp	x0, #0xfff
  4509f0:	b.le	450a50 <argp_parse@@Base+0x10c70>
  4509f4:	mov	w26, w23
  4509f8:	mov	x0, x20
  4509fc:	mov	x2, #0x1000                	// #4096
  450a00:	mov	w1, #0x2f                  	// #47
  450a04:	bl	404890 <memrchr@plt>
  450a08:	mov	x19, x0
  450a0c:	cbz	x0, 450b34 <argp_parse@@Base+0x10d54>
  450a10:	strb	wzr, [x0]
  450a14:	sub	x0, x0, x20
  450a18:	cmp	x0, #0xfff
  450a1c:	b.gt	450be0 <argp_parse@@Base+0x10e00>
  450a20:	mov	x1, x20
  450a24:	mov	w0, w26
  450a28:	mov	w2, #0x4900                	// #18688
  450a2c:	bl	404ab0 <openat@plt>
  450a30:	mov	w23, w0
  450a34:	tbnz	w0, #31, 450ba8 <argp_parse@@Base+0x10dc8>
  450a38:	tbnz	w26, #31, 4509d4 <argp_parse@@Base+0x10bf4>
  450a3c:	mov	w0, w26
  450a40:	bl	4045c0 <close@plt>
  450a44:	cbz	w0, 4509d4 <argp_parse@@Base+0x10bf4>
  450a48:	bl	450900 <argp_parse@@Base+0x10b20>
  450a4c:	mov	w23, w26
  450a50:	cmp	x24, x20
  450a54:	b.ls	450b4c <argp_parse@@Base+0x10d6c>  // b.plast
  450a58:	mov	x1, x20
  450a5c:	mov	w0, w23
  450a60:	mov	w2, #0x4900                	// #18688
  450a64:	bl	404ab0 <openat@plt>
  450a68:	mov	w26, w0
  450a6c:	tbnz	w0, #31, 450b64 <argp_parse@@Base+0x10d84>
  450a70:	tbz	w23, #31, 450bc4 <argp_parse@@Base+0x10de4>
  450a74:	mov	w0, w26
  450a78:	bl	404060 <fchdir@plt>
  450a7c:	cbnz	w0, 450b94 <argp_parse@@Base+0x10db4>
  450a80:	mov	w0, w26
  450a84:	bl	4045c0 <close@plt>
  450a88:	cbnz	w0, 450a48 <argp_parse@@Base+0x10c68>
  450a8c:	ldp	x21, x22, [sp, #32]
  450a90:	mov	w19, #0x0                   	// #0
  450a94:	ldp	x25, x26, [sp, #64]
  450a98:	mov	w0, w19
  450a9c:	ldp	x19, x20, [sp, #16]
  450aa0:	ldp	x23, x24, [sp, #48]
  450aa4:	ldp	x29, x30, [sp], #80
  450aa8:	ret
  450aac:	mov	w0, w19
  450ab0:	ldp	x19, x20, [sp, #16]
  450ab4:	ldp	x21, x22, [sp, #32]
  450ab8:	ldp	x23, x24, [sp, #48]
  450abc:	ldp	x29, x30, [sp], #80
  450ac0:	ret
  450ac4:	mov	w0, w26
  450ac8:	mov	x1, x21
  450acc:	mov	w2, #0x4900                	// #18688
  450ad0:	bl	404ab0 <openat@plt>
  450ad4:	mov	w26, w0
  450ad8:	tbnz	w0, #31, 450bd8 <argp_parse@@Base+0x10df8>
  450adc:	add	x20, x23, x19
  450ae0:	b	4509a8 <argp_parse@@Base+0x10bc8>
  450ae4:	sub	x2, x24, #0x3
  450ae8:	add	x0, x23, #0x3
  450aec:	mov	w1, #0x2f                  	// #47
  450af0:	bl	404960 <memchr@plt>
  450af4:	mov	x19, x0
  450af8:	cbz	x0, 450bb4 <argp_parse@@Base+0x10dd4>
  450afc:	strb	wzr, [x0]
  450b00:	mov	x1, x23
  450b04:	mov	w2, #0x4900                	// #18688
  450b08:	mov	w0, #0xffffff9c            	// #-100
  450b0c:	bl	404ab0 <openat@plt>
  450b10:	mov	w26, w0
  450b14:	mov	w0, #0x2f                  	// #47
  450b18:	tbnz	w26, #31, 450bd4 <argp_parse@@Base+0x10df4>
  450b1c:	strb	w0, [x19], #1
  450b20:	mov	x1, x21
  450b24:	mov	x0, x19
  450b28:	bl	404860 <strspn@plt>
  450b2c:	add	x20, x19, x0
  450b30:	b	4509a8 <argp_parse@@Base+0x10bc8>
  450b34:	mov	w0, #0x24                  	// #36
  450b38:	mov	w19, #0xffffffff            	// #-1
  450b3c:	ldp	x25, x26, [sp, #64]
  450b40:	str	w0, [x22]
  450b44:	ldp	x21, x22, [sp, #32]
  450b48:	b	450a98 <argp_parse@@Base+0x10cb8>
  450b4c:	mov	w0, w23
  450b50:	mov	w26, w23
  450b54:	bl	404060 <fchdir@plt>
  450b58:	cbnz	w0, 450b68 <argp_parse@@Base+0x10d88>
  450b5c:	tbnz	w23, #31, 450a8c <argp_parse@@Base+0x10cac>
  450b60:	b	450a80 <argp_parse@@Base+0x10ca0>
  450b64:	mov	w26, w23
  450b68:	ldr	w20, [x22]
  450b6c:	tbz	w26, #31, 450b98 <argp_parse@@Base+0x10db8>
  450b70:	ldp	x25, x26, [sp, #64]
  450b74:	str	w20, [x22]
  450b78:	mov	w19, #0xffffffff            	// #-1
  450b7c:	mov	w0, w19
  450b80:	ldp	x19, x20, [sp, #16]
  450b84:	ldp	x21, x22, [sp, #32]
  450b88:	ldp	x23, x24, [sp, #48]
  450b8c:	ldp	x29, x30, [sp], #80
  450b90:	ret
  450b94:	ldr	w20, [x22]
  450b98:	mov	w0, w26
  450b9c:	bl	4045c0 <close@plt>
  450ba0:	cbz	w0, 450b70 <argp_parse@@Base+0x10d90>
  450ba4:	bl	450900 <argp_parse@@Base+0x10b20>
  450ba8:	mov	w0, #0x2f                  	// #47
  450bac:	strb	w0, [x19]
  450bb0:	b	450b68 <argp_parse@@Base+0x10d88>
  450bb4:	mov	w19, #0xffffffff            	// #-1
  450bb8:	ldp	x21, x22, [sp, #32]
  450bbc:	ldp	x25, x26, [sp, #64]
  450bc0:	b	450a98 <argp_parse@@Base+0x10cb8>
  450bc4:	mov	w0, w23
  450bc8:	bl	4045c0 <close@plt>
  450bcc:	cbz	w0, 450a74 <argp_parse@@Base+0x10c94>
  450bd0:	bl	450900 <argp_parse@@Base+0x10b20>
  450bd4:	strb	w0, [x19]
  450bd8:	ldr	w20, [x22]
  450bdc:	b	450b70 <argp_parse@@Base+0x10d90>
  450be0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450be4:	add	x3, x3, #0xf98
  450be8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450bec:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450bf0:	add	x3, x3, #0x10
  450bf4:	add	x1, x1, #0xf28
  450bf8:	add	x0, x0, #0xf80
  450bfc:	mov	w2, #0xb3                  	// #179
  450c00:	bl	404ac0 <__assert_fail@plt>
  450c04:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c08:	add	x3, x3, #0xf98
  450c0c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c10:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c14:	add	x3, x3, #0x10
  450c18:	add	x1, x1, #0xf28
  450c1c:	add	x0, x0, #0xf48
  450c20:	mov	w2, #0x7e                  	// #126
  450c24:	bl	404ac0 <__assert_fail@plt>
  450c28:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c2c:	add	x3, x3, #0xf98
  450c30:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c34:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c38:	add	x3, x3, #0x10
  450c3c:	add	x1, x1, #0xf28
  450c40:	add	x0, x0, #0xf50
  450c44:	mov	w2, #0x7f                  	// #127
  450c48:	bl	404ac0 <__assert_fail@plt>
  450c4c:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c50:	add	x3, x3, #0xf98
  450c54:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c58:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c5c:	add	x3, x3, #0x10
  450c60:	add	x1, x1, #0xf28
  450c64:	add	x0, x0, #0xf60
  450c68:	mov	w2, #0xa2                  	// #162
  450c6c:	bl	404ac0 <__assert_fail@plt>
  450c70:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c74:	add	x3, x3, #0xf98
  450c78:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c7c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450c80:	add	x3, x3, #0x10
  450c84:	add	x1, x1, #0xf28
  450c88:	add	x0, x0, #0xf70
  450c8c:	mov	w2, #0xa3                  	// #163
  450c90:	bl	404ac0 <__assert_fail@plt>
  450c94:	nop
  450c98:	stp	x29, x30, [sp, #-112]!
  450c9c:	mov	w6, #0xffffffe0            	// #-32
  450ca0:	mov	x29, sp
  450ca4:	add	x7, sp, #0x50
  450ca8:	stp	x19, x20, [sp, #16]
  450cac:	str	x7, [sp, #64]
  450cb0:	stp	w6, wzr, [sp, #72]
  450cb4:	stp	x2, x3, [sp, #80]
  450cb8:	add	x2, sp, #0x70
  450cbc:	stp	x2, x2, [sp, #48]
  450cc0:	stp	x4, x5, [sp, #96]
  450cc4:	cbz	w1, 450d84 <argp_parse@@Base+0x10fa4>
  450cc8:	mov	w20, w0
  450ccc:	mov	w3, w1
  450cd0:	cmp	w1, #0x406
  450cd4:	b.eq	450da0 <argp_parse@@Base+0x10fc0>  // b.none
  450cd8:	cmp	w1, #0xb
  450cdc:	b.gt	450d28 <argp_parse@@Base+0x10f48>
  450ce0:	cmp	w1, #0x0
  450ce4:	b.le	450d54 <argp_parse@@Base+0x10f74>
  450ce8:	mov	x1, #0x1                   	// #1
  450cec:	mov	x2, #0x514                 	// #1300
  450cf0:	lsl	x1, x1, x3
  450cf4:	tst	x1, x2
  450cf8:	b.ne	450e1c <argp_parse@@Base+0x1103c>  // b.any
  450cfc:	mov	x2, #0xa0a                 	// #2570
  450d00:	tst	x1, x2
  450d04:	b.eq	450d54 <argp_parse@@Base+0x10f74>  // b.none
  450d08:	mov	w1, w3
  450d0c:	mov	w0, w20
  450d10:	bl	4048e0 <fcntl@plt>
  450d14:	mov	w19, w0
  450d18:	mov	w0, w19
  450d1c:	ldp	x19, x20, [sp, #16]
  450d20:	ldp	x29, x30, [sp], #112
  450d24:	ret
  450d28:	sub	w0, w1, #0x400
  450d2c:	cmp	w0, #0xa
  450d30:	b.hi	450d54 <argp_parse@@Base+0x10f74>  // b.pmore
  450d34:	mov	x1, #0x1                   	// #1
  450d38:	mov	x2, #0x2c5                 	// #709
  450d3c:	lsl	x1, x1, x0
  450d40:	tst	x1, x2
  450d44:	b.ne	450e1c <argp_parse@@Base+0x1103c>  // b.any
  450d48:	mov	x2, #0x502                 	// #1282
  450d4c:	tst	x1, x2
  450d50:	b.ne	450d08 <argp_parse@@Base+0x10f28>  // b.any
  450d54:	ldr	w0, [sp, #72]
  450d58:	ldr	x1, [sp, #48]
  450d5c:	tbnz	w0, #31, 450ec8 <argp_parse@@Base+0x110e8>
  450d60:	ldr	x2, [x1]
  450d64:	mov	w0, w20
  450d68:	mov	w1, w3
  450d6c:	bl	4048e0 <fcntl@plt>
  450d70:	mov	w19, w0
  450d74:	mov	w0, w19
  450d78:	ldp	x19, x20, [sp, #16]
  450d7c:	ldp	x29, x30, [sp], #112
  450d80:	ret
  450d84:	ldr	w2, [sp, #80]
  450d88:	bl	4048e0 <fcntl@plt>
  450d8c:	mov	w19, w0
  450d90:	mov	w0, w19
  450d94:	ldp	x19, x20, [sp, #16]
  450d98:	ldp	x29, x30, [sp], #112
  450d9c:	ret
  450da0:	stp	x21, x22, [sp, #32]
  450da4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  450da8:	mov	w2, #0xffffffe8            	// #-24
  450dac:	str	w2, [sp, #72]
  450db0:	ldr	w2, [x21, #3992]
  450db4:	ldr	w22, [sp, #80]
  450db8:	tbnz	w2, #31, 450de8 <argp_parse@@Base+0x11008>
  450dbc:	mov	w2, w22
  450dc0:	bl	4048e0 <fcntl@plt>
  450dc4:	mov	w19, w0
  450dc8:	tbnz	w0, #31, 450e4c <argp_parse@@Base+0x1106c>
  450dcc:	mov	w0, #0x1                   	// #1
  450dd0:	str	w0, [x21, #3992]
  450dd4:	mov	w0, w19
  450dd8:	ldp	x19, x20, [sp, #16]
  450ddc:	ldp	x21, x22, [sp, #32]
  450de0:	ldp	x29, x30, [sp], #112
  450de4:	ret
  450de8:	mov	w2, w22
  450dec:	mov	w1, #0x0                   	// #0
  450df0:	bl	4048e0 <fcntl@plt>
  450df4:	mov	w19, w0
  450df8:	tbnz	w0, #31, 450e08 <argp_parse@@Base+0x11028>
  450dfc:	ldr	w0, [x21, #3992]
  450e00:	cmn	w0, #0x1
  450e04:	b.eq	450e7c <argp_parse@@Base+0x1109c>  // b.none
  450e08:	mov	w0, w19
  450e0c:	ldp	x19, x20, [sp, #16]
  450e10:	ldp	x21, x22, [sp, #32]
  450e14:	ldp	x29, x30, [sp], #112
  450e18:	ret
  450e1c:	ldr	w0, [sp, #72]
  450e20:	ldr	x1, [sp, #48]
  450e24:	tbnz	w0, #31, 450edc <argp_parse@@Base+0x110fc>
  450e28:	ldr	w2, [x1]
  450e2c:	mov	w0, w20
  450e30:	mov	w1, w3
  450e34:	bl	4048e0 <fcntl@plt>
  450e38:	mov	w19, w0
  450e3c:	mov	w0, w19
  450e40:	ldp	x19, x20, [sp, #16]
  450e44:	ldp	x29, x30, [sp], #112
  450e48:	ret
  450e4c:	bl	404ad0 <__errno_location@plt>
  450e50:	ldr	w0, [x0]
  450e54:	cmp	w0, #0x16
  450e58:	b.ne	450dcc <argp_parse@@Base+0x10fec>  // b.any
  450e5c:	mov	w2, w22
  450e60:	mov	w0, w20
  450e64:	mov	w1, #0x0                   	// #0
  450e68:	bl	4048e0 <fcntl@plt>
  450e6c:	mov	w19, w0
  450e70:	tbnz	w0, #31, 450e08 <argp_parse@@Base+0x11028>
  450e74:	mov	w0, #0xffffffff            	// #-1
  450e78:	str	w0, [x21, #3992]
  450e7c:	mov	w0, w19
  450e80:	mov	w1, #0x1                   	// #1
  450e84:	bl	4048e0 <fcntl@plt>
  450e88:	tbnz	w0, #31, 450ea4 <argp_parse@@Base+0x110c4>
  450e8c:	orr	w2, w0, #0x1
  450e90:	mov	w1, #0x2                   	// #2
  450e94:	mov	w0, w19
  450e98:	bl	4048e0 <fcntl@plt>
  450e9c:	cmn	w0, #0x1
  450ea0:	b.ne	450e08 <argp_parse@@Base+0x11028>  // b.any
  450ea4:	bl	404ad0 <__errno_location@plt>
  450ea8:	mov	x20, x0
  450eac:	mov	w0, w19
  450eb0:	mov	w19, #0xffffffff            	// #-1
  450eb4:	ldr	w21, [x20]
  450eb8:	bl	4045c0 <close@plt>
  450ebc:	str	w21, [x20]
  450ec0:	ldp	x21, x22, [sp, #32]
  450ec4:	b	450d18 <argp_parse@@Base+0x10f38>
  450ec8:	cmn	w0, #0x7
  450ecc:	b.ge	450d60 <argp_parse@@Base+0x10f80>  // b.tcont
  450ed0:	ldr	x1, [sp, #56]
  450ed4:	add	x1, x1, w0, sxtw
  450ed8:	b	450d60 <argp_parse@@Base+0x10f80>
  450edc:	cmn	w0, #0x7
  450ee0:	b.ge	450e28 <argp_parse@@Base+0x11048>  // b.tcont
  450ee4:	ldr	x1, [sp, #56]
  450ee8:	add	x1, x1, w0, sxtw
  450eec:	b	450e28 <argp_parse@@Base+0x11048>
  450ef0:	mov	w6, #0x0                   	// #0
  450ef4:	mov	w5, #0x0                   	// #0
  450ef8:	b	465570 <_obstack_memory_used@@Base+0x14160>
  450efc:	nop
  450f00:	mov	x6, x5
  450f04:	mov	w7, #0x0                   	// #0
  450f08:	mov	w5, #0x0                   	// #0
  450f0c:	b	464f28 <_obstack_memory_used@@Base+0x13b18>
  450f10:	mov	w6, #0x0                   	// #0
  450f14:	mov	w5, #0x1                   	// #1
  450f18:	b	465570 <_obstack_memory_used@@Base+0x14160>
  450f1c:	nop
  450f20:	mov	x6, x5
  450f24:	mov	w7, #0x0                   	// #0
  450f28:	mov	w5, #0x1                   	// #1
  450f2c:	b	464f28 <_obstack_memory_used@@Base+0x13b18>
  450f30:	stp	x29, x30, [sp, #-64]!
  450f34:	cmp	x0, #0x0
  450f38:	add	x4, sp, #0x3c
  450f3c:	mov	x29, sp
  450f40:	stp	x19, x20, [sp, #16]
  450f44:	csel	x19, x4, x0, eq  // eq = none
  450f48:	mov	x20, x2
  450f4c:	mov	x0, x19
  450f50:	str	x21, [sp, #32]
  450f54:	mov	x21, x1
  450f58:	bl	403f60 <mbrtowc@plt>
  450f5c:	cmp	x20, #0x0
  450f60:	mov	x20, x0
  450f64:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  450f68:	b.hi	450f80 <argp_parse@@Base+0x111a0>  // b.pmore
  450f6c:	mov	x0, x20
  450f70:	ldp	x19, x20, [sp, #16]
  450f74:	ldr	x21, [sp, #32]
  450f78:	ldp	x29, x30, [sp], #64
  450f7c:	ret
  450f80:	mov	w0, #0x0                   	// #0
  450f84:	bl	462b28 <_obstack_memory_used@@Base+0x11718>
  450f88:	tst	w0, #0xff
  450f8c:	b.ne	450f6c <argp_parse@@Base+0x1118c>  // b.any
  450f90:	ldrb	w0, [x21]
  450f94:	mov	x20, #0x1                   	// #1
  450f98:	str	w0, [x19]
  450f9c:	mov	x0, x20
  450fa0:	ldp	x19, x20, [sp, #16]
  450fa4:	ldr	x21, [sp, #32]
  450fa8:	ldp	x29, x30, [sp], #64
  450fac:	ret
  450fb0:	stp	x29, x30, [sp, #-32]!
  450fb4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  450fb8:	mov	w2, #0x5                   	// #5
  450fbc:	mov	x29, sp
  450fc0:	str	x19, [sp, #16]
  450fc4:	adrp	x1, 468000 <_obstack_memory_used@@Base+0x16bf0>
  450fc8:	ldr	x19, [x0, #1176]
  450fcc:	add	x1, x1, #0xa98
  450fd0:	mov	x0, #0x0                   	// #0
  450fd4:	bl	4049c0 <dcgettext@plt>
  450fd8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x20bf0>
  450fdc:	mov	x3, x0
  450fe0:	add	x2, x2, #0xb80
  450fe4:	mov	x0, x19
  450fe8:	mov	w1, #0x1                   	// #1
  450fec:	bl	404700 <__fprintf_chk@plt>
  450ff0:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  450ff4:	ldr	w0, [x0, #1040]
  450ff8:	bl	404020 <exit@plt>
  450ffc:	nop

0000000000451000 <_obstack_begin@@Base>:
  451000:	stp	x29, x30, [sp, #-48]!
  451004:	mov	x29, sp
  451008:	stp	x19, x20, [sp, #16]
  45100c:	mov	x19, x0
  451010:	ldrb	w0, [x0, #80]
  451014:	str	x21, [sp, #32]
  451018:	and	w0, w0, #0xfffffffe
  45101c:	stp	x3, x4, [x19, #56]
  451020:	strb	w0, [x19, #80]
  451024:	cbz	x2, 4510a8 <_obstack_begin@@Base+0xa8>
  451028:	ldrb	w0, [x19, #80]
  45102c:	cmp	x1, #0x0
  451030:	sub	x21, x2, #0x1
  451034:	mov	x20, x2
  451038:	mov	x2, #0xfe0                 	// #4064
  45103c:	csel	x1, x1, x2, ne  // ne = any
  451040:	str	x1, [x19]
  451044:	str	x21, [x19, #48]
  451048:	tbz	w0, #0, 4510cc <_obstack_begin@@Base+0xcc>
  45104c:	ldr	x0, [x19, #72]
  451050:	blr	x3
  451054:	mov	x1, x0
  451058:	str	x1, [x19, #8]
  45105c:	cbz	x1, 4510dc <_obstack_begin@@Base+0xdc>
  451060:	add	x2, x1, #0x10
  451064:	neg	x20, x20
  451068:	ldr	x0, [x19]
  45106c:	add	x2, x2, x21
  451070:	and	x20, x2, x20
  451074:	ldr	x21, [sp, #32]
  451078:	stp	x20, x20, [x19, #16]
  45107c:	add	x2, x1, x0
  451080:	str	x2, [x1]
  451084:	mov	w0, #0x1                   	// #1
  451088:	str	x2, [x19, #32]
  45108c:	ldrb	w2, [x19, #80]
  451090:	str	xzr, [x1, #8]
  451094:	and	w1, w2, #0xfffffff9
  451098:	strb	w1, [x19, #80]
  45109c:	ldp	x19, x20, [sp, #16]
  4510a0:	ldp	x29, x30, [sp], #48
  4510a4:	ret
  4510a8:	ldrb	w0, [x19, #80]
  4510ac:	cmp	x1, #0x0
  4510b0:	mov	x21, #0xf                   	// #15
  4510b4:	mov	x2, #0xfe0                 	// #4064
  4510b8:	csel	x1, x1, x2, ne  // ne = any
  4510bc:	str	x1, [x19]
  4510c0:	str	x21, [x19, #48]
  4510c4:	mov	x20, #0x10                  	// #16
  4510c8:	tbnz	w0, #0, 45104c <_obstack_begin@@Base+0x4c>
  4510cc:	mov	x0, x1
  4510d0:	blr	x3
  4510d4:	mov	x1, x0
  4510d8:	b	451058 <_obstack_begin@@Base+0x58>
  4510dc:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4510e0:	ldr	x0, [x0, #1136]
  4510e4:	blr	x0

00000000004510e8 <_obstack_begin_1@@Base>:
  4510e8:	stp	x29, x30, [sp, #-48]!
  4510ec:	mov	x29, sp
  4510f0:	stp	x19, x20, [sp, #16]
  4510f4:	mov	x19, x0
  4510f8:	mov	x0, x5
  4510fc:	ldrb	w5, [x19, #80]
  451100:	str	x21, [sp, #32]
  451104:	orr	w5, w5, #0x1
  451108:	stp	x3, x4, [x19, #56]
  45110c:	str	x0, [x19, #72]
  451110:	strb	w5, [x19, #80]
  451114:	cbz	x2, 451194 <_obstack_begin_1@@Base+0xac>
  451118:	sub	x21, x2, #0x1
  45111c:	mov	x20, x2
  451120:	ldrb	w2, [x19, #80]
  451124:	cmp	x1, #0x0
  451128:	mov	x4, #0xfe0                 	// #4064
  45112c:	csel	x1, x1, x4, ne  // ne = any
  451130:	str	x1, [x19]
  451134:	str	x21, [x19, #48]
  451138:	tbz	w2, #0, 4511b8 <_obstack_begin_1@@Base+0xd0>
  45113c:	blr	x3
  451140:	mov	x1, x0
  451144:	str	x1, [x19, #8]
  451148:	cbz	x1, 4511c8 <_obstack_begin_1@@Base+0xe0>
  45114c:	add	x2, x1, #0x10
  451150:	neg	x20, x20
  451154:	ldr	x0, [x19]
  451158:	add	x2, x2, x21
  45115c:	and	x20, x2, x20
  451160:	ldr	x21, [sp, #32]
  451164:	stp	x20, x20, [x19, #16]
  451168:	add	x2, x1, x0
  45116c:	str	x2, [x1]
  451170:	mov	w0, #0x1                   	// #1
  451174:	str	x2, [x19, #32]
  451178:	ldrb	w2, [x19, #80]
  45117c:	str	xzr, [x1, #8]
  451180:	and	w1, w2, #0xfffffff9
  451184:	strb	w1, [x19, #80]
  451188:	ldp	x19, x20, [sp, #16]
  45118c:	ldp	x29, x30, [sp], #48
  451190:	ret
  451194:	ldrb	w2, [x19, #80]
  451198:	cmp	x1, #0x0
  45119c:	mov	x21, #0xf                   	// #15
  4511a0:	mov	x4, #0xfe0                 	// #4064
  4511a4:	csel	x1, x1, x4, ne  // ne = any
  4511a8:	str	x1, [x19]
  4511ac:	str	x21, [x19, #48]
  4511b0:	mov	x20, #0x10                  	// #16
  4511b4:	tbnz	w2, #0, 45113c <_obstack_begin_1@@Base+0x54>
  4511b8:	mov	x0, x1
  4511bc:	blr	x3
  4511c0:	mov	x1, x0
  4511c4:	b	451144 <_obstack_begin_1@@Base+0x5c>
  4511c8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4511cc:	ldr	x0, [x0, #1136]
  4511d0:	blr	x0
  4511d4:	nop

00000000004511d8 <_obstack_newchunk@@Base>:
  4511d8:	stp	x29, x30, [sp, #-64]!
  4511dc:	mov	x29, sp
  4511e0:	stp	x21, x22, [sp, #32]
  4511e4:	ldp	x2, x21, [x0, #16]
  4511e8:	stp	x19, x20, [sp, #16]
  4511ec:	mov	x19, x0
  4511f0:	ldr	x3, [x0, #48]
  4511f4:	ldr	x0, [x0]
  4511f8:	sub	x21, x21, x2
  4511fc:	adds	x1, x21, x1
  451200:	str	x23, [sp, #48]
  451204:	cset	x2, cs  // cs = hs, nlast
  451208:	lsr	x20, x21, #3
  45120c:	adds	x3, x3, x1
  451210:	add	x20, x20, #0x64
  451214:	cset	x1, cs  // cs = hs, nlast
  451218:	cmp	x0, x3
  45121c:	csel	x0, x0, x3, cs  // cs = hs, nlast
  451220:	add	x3, x20, x3
  451224:	cmp	x0, x3
  451228:	csel	x20, x0, x3, cs  // cs = hs, nlast
  45122c:	cmp	x2, #0x0
  451230:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  451234:	ldr	x23, [x19, #8]
  451238:	b.ne	451318 <_obstack_newchunk@@Base+0x140>  // b.any
  45123c:	ldrb	w0, [x19, #80]
  451240:	ldr	x2, [x19, #56]
  451244:	tbz	w0, #0, 4512dc <_obstack_newchunk@@Base+0x104>
  451248:	ldr	x0, [x19, #72]
  45124c:	mov	x1, x20
  451250:	blr	x2
  451254:	mov	x22, x0
  451258:	cbz	x22, 451318 <_obstack_newchunk@@Base+0x140>
  45125c:	mov	x3, x22
  451260:	str	x22, [x19, #8]
  451264:	ldr	x1, [x19, #16]
  451268:	add	x20, x22, x20
  45126c:	ldr	x0, [x19, #48]
  451270:	str	x23, [x22, #8]
  451274:	str	x20, [x19, #32]
  451278:	mov	x2, x21
  45127c:	str	x20, [x3], #16
  451280:	add	x20, x3, x0
  451284:	bic	x20, x20, x0
  451288:	mov	x0, x20
  45128c:	bl	403f70 <memcpy@plt>
  451290:	ldrb	w2, [x19, #80]
  451294:	tbnz	w2, #1, 4512b4 <_obstack_newchunk@@Base+0xdc>
  451298:	ldr	x1, [x19, #48]
  45129c:	add	x0, x23, #0x10
  4512a0:	ldr	x3, [x19, #16]
  4512a4:	add	x0, x0, x1
  4512a8:	bic	x0, x0, x1
  4512ac:	cmp	x3, x0
  4512b0:	b.eq	4512ec <_obstack_newchunk@@Base+0x114>  // b.none
  4512b4:	ldrb	w0, [x19, #80]
  4512b8:	add	x21, x20, x21
  4512bc:	ldr	x23, [sp, #48]
  4512c0:	and	w0, w0, #0xfffffffd
  4512c4:	stp	x20, x21, [x19, #16]
  4512c8:	strb	w0, [x19, #80]
  4512cc:	ldp	x19, x20, [sp, #16]
  4512d0:	ldp	x21, x22, [sp, #32]
  4512d4:	ldp	x29, x30, [sp], #64
  4512d8:	ret
  4512dc:	mov	x0, x20
  4512e0:	blr	x2
  4512e4:	mov	x22, x0
  4512e8:	b	451258 <_obstack_newchunk@@Base+0x80>
  4512ec:	ldr	x0, [x23, #8]
  4512f0:	ldr	x3, [x19, #64]
  4512f4:	str	x0, [x22, #8]
  4512f8:	tbz	w2, #0, 45130c <_obstack_newchunk@@Base+0x134>
  4512fc:	ldr	x0, [x19, #72]
  451300:	mov	x1, x23
  451304:	blr	x3
  451308:	b	4512b4 <_obstack_newchunk@@Base+0xdc>
  45130c:	mov	x0, x23
  451310:	blr	x3
  451314:	b	4512b4 <_obstack_newchunk@@Base+0xdc>
  451318:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  45131c:	ldr	x0, [x0, #1136]
  451320:	blr	x0
  451324:	nop

0000000000451328 <_obstack_allocated_p@@Base>:
  451328:	ldr	x0, [x0, #8]
  45132c:	cbz	x0, 451350 <_obstack_allocated_p@@Base+0x28>
  451330:	cmp	x1, x0
  451334:	b.ls	451344 <_obstack_allocated_p@@Base+0x1c>  // b.plast
  451338:	ldr	x2, [x0]
  45133c:	cmp	x2, x1
  451340:	b.cs	451354 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  451344:	ldr	x0, [x0, #8]
  451348:	cbnz	x0, 451330 <_obstack_allocated_p@@Base+0x8>
  45134c:	mov	w0, #0x0                   	// #0
  451350:	ret
  451354:	mov	w0, #0x1                   	// #1
  451358:	ret
  45135c:	nop

0000000000451360 <_obstack_free@@Base>:
  451360:	stp	x29, x30, [sp, #-48]!
  451364:	mov	x29, sp
  451368:	str	x21, [sp, #32]
  45136c:	mov	x21, x1
  451370:	ldr	x1, [x0, #8]
  451374:	cbz	x1, 4513e0 <_obstack_free@@Base+0x80>
  451378:	stp	x19, x20, [sp, #16]
  45137c:	mov	x19, x0
  451380:	cmp	x1, x21
  451384:	b.cs	451394 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  451388:	ldr	x0, [x1]
  45138c:	cmp	x0, x21
  451390:	b.cs	4513f0 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  451394:	ldrb	w0, [x19, #80]
  451398:	ldr	x20, [x1, #8]
  45139c:	ldr	x2, [x19, #64]
  4513a0:	tbz	w0, #0, 4513c4 <_obstack_free@@Base+0x64>
  4513a4:	ldr	x0, [x19, #72]
  4513a8:	blr	x2
  4513ac:	ldrb	w0, [x19, #80]
  4513b0:	orr	w0, w0, #0x2
  4513b4:	strb	w0, [x19, #80]
  4513b8:	cbz	x20, 4513dc <_obstack_free@@Base+0x7c>
  4513bc:	mov	x1, x20
  4513c0:	b	451380 <_obstack_free@@Base+0x20>
  4513c4:	mov	x0, x1
  4513c8:	blr	x2
  4513cc:	ldrb	w0, [x19, #80]
  4513d0:	orr	w0, w0, #0x2
  4513d4:	strb	w0, [x19, #80]
  4513d8:	cbnz	x20, 4513bc <_obstack_free@@Base+0x5c>
  4513dc:	ldp	x19, x20, [sp, #16]
  4513e0:	cbnz	x21, 451408 <_obstack_free@@Base+0xa8>
  4513e4:	ldr	x21, [sp, #32]
  4513e8:	ldp	x29, x30, [sp], #48
  4513ec:	ret
  4513f0:	stp	x1, x21, [x19, #8]
  4513f4:	stp	x21, x0, [x19, #24]
  4513f8:	ldp	x19, x20, [sp, #16]
  4513fc:	ldr	x21, [sp, #32]
  451400:	ldp	x29, x30, [sp], #48
  451404:	ret
  451408:	stp	x19, x20, [sp, #16]
  45140c:	bl	404650 <abort@plt>

0000000000451410 <_obstack_memory_used@@Base>:
  451410:	ldr	x1, [x0, #8]
  451414:	mov	x0, #0x0                   	// #0
  451418:	cbz	x1, 451434 <_obstack_memory_used@@Base+0x24>
  45141c:	nop
  451420:	ldr	x2, [x1]
  451424:	sub	x2, x2, x1
  451428:	ldr	x1, [x1, #8]
  45142c:	add	x0, x0, x2
  451430:	cbnz	x1, 451420 <_obstack_memory_used@@Base+0x10>
  451434:	ret
  451438:	stp	x29, x30, [sp, #-96]!
  45143c:	mov	x29, sp
  451440:	stp	x19, x20, [sp, #16]
  451444:	mov	x19, x0
  451448:	ldrb	w0, [x2]
  45144c:	cbz	w0, 451510 <_obstack_memory_used@@Base+0x100>
  451450:	stp	x21, x22, [sp, #32]
  451454:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  451458:	mov	x20, x2
  45145c:	ldr	w0, [x22, #3996]
  451460:	mov	w21, w1
  451464:	cbz	w0, 4514d4 <_obstack_memory_used@@Base+0xc4>
  451468:	tbnz	w0, #31, 4514c8 <_obstack_memory_used@@Base+0xb8>
  45146c:	mov	x0, x20
  451470:	bl	403ff0 <strlen@plt>
  451474:	add	x0, x0, #0x1b
  451478:	cmp	x0, #0xfc0
  45147c:	b.hi	4514bc <_obstack_memory_used@@Base+0xac>  // b.pmore
  451480:	mov	w4, w21
  451484:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  451488:	add	x3, x3, #0xfe0
  45148c:	mov	x2, #0xffffffffffffffff    	// #-1
  451490:	mov	w1, #0x1                   	// #1
  451494:	mov	x0, x19
  451498:	bl	404010 <__sprintf_chk@plt>
  45149c:	add	x0, x19, w0, sxtw
  4514a0:	mov	x1, x20
  4514a4:	bl	404910 <strcpy@plt>
  4514a8:	ldp	x21, x22, [sp, #32]
  4514ac:	mov	x0, x19
  4514b0:	ldp	x19, x20, [sp, #16]
  4514b4:	ldp	x29, x30, [sp], #96
  4514b8:	ret
  4514bc:	bl	404310 <malloc@plt>
  4514c0:	mov	x19, x0
  4514c4:	cbnz	x0, 451480 <_obstack_memory_used@@Base+0x70>
  4514c8:	mov	x0, #0x0                   	// #0
  4514cc:	ldp	x21, x22, [sp, #32]
  4514d0:	b	4514b0 <_obstack_memory_used@@Base+0xa0>
  4514d4:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x20bf0>
  4514d8:	mov	w1, #0x4900                	// #18688
  4514dc:	add	x0, x0, #0xfb8
  4514e0:	str	x23, [sp, #48]
  4514e4:	bl	404340 <open@plt>
  4514e8:	mov	w23, w0
  4514ec:	tbz	w0, #31, 451524 <_obstack_memory_used@@Base+0x114>
  4514f0:	mov	w1, #0xffffffff            	// #-1
  4514f4:	str	w1, [x22, #3996]
  4514f8:	mov	x0, #0x0                   	// #0
  4514fc:	ldp	x19, x20, [sp, #16]
  451500:	ldp	x21, x22, [sp, #32]
  451504:	ldr	x23, [sp, #48]
  451508:	ldp	x29, x30, [sp], #96
  45150c:	ret
  451510:	strb	wzr, [x19]
  451514:	mov	x0, x19
  451518:	ldp	x19, x20, [sp, #16]
  45151c:	ldp	x29, x30, [sp], #96
  451520:	ret
  451524:	mov	w4, w0
  451528:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x20bf0>
  45152c:	add	x3, x3, #0xfc8
  451530:	mov	x2, #0x20                  	// #32
  451534:	mov	w1, #0x1                   	// #1
  451538:	add	x0, sp, #0x40
  45153c:	bl	404010 <__sprintf_chk@plt>
  451540:	mov	w1, #0x0                   	// #0
  451544:	add	x0, sp, #0x40
  451548:	bl	404690 <access@plt>
  45154c:	cmp	w0, #0x0
  451550:	mov	w1, #0x1                   	// #1
  451554:	cneg	w1, w1, ne  // ne = any
  451558:	mov	w0, w23
  45155c:	str	w1, [x22, #3996]
  451560:	bl	4045c0 <close@plt>
  451564:	ldr	w0, [x22, #3996]
  451568:	ldr	x23, [sp, #48]
  45156c:	b	451468 <_obstack_memory_used@@Base+0x58>
  451570:	mov	x3, x0
  451574:	ldr	x0, [x1, #72]
  451578:	ldr	x4, [x1, #104]
  45157c:	cmp	x4, x0
  451580:	b.le	451624 <_obstack_memory_used@@Base+0x214>
  451584:	ldr	x5, [x1, #8]
  451588:	ldr	w6, [x1, #144]
  45158c:	ldrb	w4, [x5, x0]
  451590:	cmp	w6, #0x1
  451594:	strb	w4, [x3]
  451598:	b.le	4515b8 <_obstack_memory_used@@Base+0x1a8>
  45159c:	ldr	x6, [x1, #48]
  4515a0:	cmp	x0, x6
  4515a4:	b.eq	4515b8 <_obstack_memory_used@@Base+0x1a8>  // b.none
  4515a8:	ldr	x6, [x1, #16]
  4515ac:	ldr	w6, [x6, x0, lsl #2]
  4515b0:	cmn	w6, #0x1
  4515b4:	b.eq	4515fc <_obstack_memory_used@@Base+0x1ec>  // b.none
  4515b8:	cmp	w4, #0x5c
  4515bc:	b.eq	4515e8 <_obstack_memory_used@@Base+0x1d8>  // b.none
  4515c0:	cmp	w4, #0x5b
  4515c4:	b.eq	451634 <_obstack_memory_used@@Base+0x224>  // b.none
  4515c8:	cmp	w4, #0x5d
  4515cc:	b.eq	451680 <_obstack_memory_used@@Base+0x270>  // b.none
  4515d0:	cmp	w4, #0x5e
  4515d4:	b.ne	45160c <_obstack_memory_used@@Base+0x1fc>  // b.any
  4515d8:	mov	w1, #0x19                  	// #25
  4515dc:	mov	w0, #0x1                   	// #1
  4515e0:	strb	w1, [x3, #8]
  4515e4:	ret
  4515e8:	tbz	w2, #0, 4515fc <_obstack_memory_used@@Base+0x1ec>
  4515ec:	ldr	x4, [x1, #88]
  4515f0:	add	x2, x0, #0x1
  4515f4:	cmp	x2, x4
  4515f8:	b.lt	451690 <_obstack_memory_used@@Base+0x280>  // b.tstop
  4515fc:	mov	w1, #0x1                   	// #1
  451600:	mov	w0, #0x1                   	// #1
  451604:	strb	w1, [x3, #8]
  451608:	ret
  45160c:	cmp	w4, #0x2d
  451610:	b.ne	4515fc <_obstack_memory_used@@Base+0x1ec>  // b.any
  451614:	mov	w1, #0x16                  	// #22
  451618:	mov	w0, #0x1                   	// #1
  45161c:	strb	w1, [x3, #8]
  451620:	ret
  451624:	mov	w1, #0x2                   	// #2
  451628:	mov	w0, #0x0                   	// #0
  45162c:	strb	w1, [x3, #8]
  451630:	ret
  451634:	ldr	x1, [x1, #88]
  451638:	add	x4, x0, #0x1
  45163c:	cmp	x4, x1
  451640:	b.ge	451668 <_obstack_memory_used@@Base+0x258>  // b.tcont
  451644:	add	x0, x5, x0
  451648:	ldrb	w0, [x0, #1]
  45164c:	strb	w0, [x3]
  451650:	cmp	w0, #0x3a
  451654:	b.eq	4516cc <_obstack_memory_used@@Base+0x2bc>  // b.none
  451658:	cmp	w0, #0x3d
  45165c:	b.eq	4516bc <_obstack_memory_used@@Base+0x2ac>  // b.none
  451660:	cmp	w0, #0x2e
  451664:	b.eq	4516ac <_obstack_memory_used@@Base+0x29c>  // b.none
  451668:	mov	w1, #0x1                   	// #1
  45166c:	mov	w2, #0x5b                  	// #91
  451670:	mov	w0, #0x1                   	// #1
  451674:	strb	w2, [x3]
  451678:	strb	w1, [x3, #8]
  45167c:	ret
  451680:	mov	w1, #0x15                  	// #21
  451684:	mov	w0, #0x1                   	// #1
  451688:	strb	w1, [x3, #8]
  45168c:	ret
  451690:	str	x2, [x1, #72]
  451694:	mov	w0, #0x1                   	// #1
  451698:	mov	w1, #0x1                   	// #1
  45169c:	ldrb	w2, [x5, x2]
  4516a0:	strb	w2, [x3]
  4516a4:	strb	w1, [x3, #8]
  4516a8:	ret
  4516ac:	mov	w1, #0x1a                  	// #26
  4516b0:	mov	w0, #0x2                   	// #2
  4516b4:	strb	w1, [x3, #8]
  4516b8:	ret
  4516bc:	mov	w1, #0x1c                  	// #28
  4516c0:	mov	w0, #0x2                   	// #2
  4516c4:	strb	w1, [x3, #8]
  4516c8:	ret
  4516cc:	tbz	w2, #2, 451668 <_obstack_memory_used@@Base+0x258>
  4516d0:	mov	w1, #0x1e                  	// #30
  4516d4:	mov	w0, #0x2                   	// #2
  4516d8:	strb	w1, [x3, #8]
  4516dc:	ret
  4516e0:	stp	x29, x30, [sp, #-144]!
  4516e4:	mov	x13, x0
  4516e8:	add	x8, x3, x3, lsl #1
  4516ec:	mov	x29, sp
  4516f0:	stp	x27, x28, [sp, #80]
  4516f4:	ldr	x27, [x0, #152]
  4516f8:	stp	x23, x24, [sp, #48]
  4516fc:	stp	x25, x26, [sp, #64]
  451700:	mov	w26, w1
  451704:	ldr	x0, [x27, #48]
  451708:	add	x23, x0, x8, lsl #3
  45170c:	ldr	x9, [x23, #8]
  451710:	cmp	x9, #0x0
  451714:	b.le	4518c0 <_obstack_memory_used@@Base+0x4b0>
  451718:	mov	x0, #0x1                   	// #1
  45171c:	stp	x21, x22, [sp, #32]
  451720:	lsl	x0, x0, x2
  451724:	str	x0, [sp, #128]
  451728:	mvn	w0, w0
  45172c:	and	w0, w0, #0xffff
  451730:	add	x22, x4, x4, lsl #2
  451734:	str	w0, [sp, #140]
  451738:	and	w0, w1, #0x2
  45173c:	mov	x14, x3
  451740:	mov	x25, x2
  451744:	mov	x24, x4
  451748:	lsl	x22, x22, #3
  45174c:	stp	x19, x20, [sp, #16]
  451750:	mov	x19, #0x0                   	// #0
  451754:	str	w0, [sp, #108]
  451758:	and	w0, w1, #0x1
  45175c:	str	w0, [sp, #136]
  451760:	b	451778 <_obstack_memory_used@@Base+0x368>
  451764:	cmp	w5, #0x4
  451768:	b.eq	451808 <_obstack_memory_used@@Base+0x3f8>  // b.none
  45176c:	add	x19, x19, #0x1
  451770:	cmp	x19, x9
  451774:	b.ge	4518b8 <_obstack_memory_used@@Base+0x4a8>  // b.tcont
  451778:	ldr	x5, [x23, #16]
  45177c:	ldr	x7, [x27]
  451780:	ldr	x20, [x5, x19, lsl #3]
  451784:	lsl	x6, x20, #4
  451788:	add	x5, x7, x6
  45178c:	ldrb	w5, [x5, #8]
  451790:	cmp	w5, #0x8
  451794:	b.eq	4517d4 <_obstack_memory_used@@Base+0x3c4>  // b.none
  451798:	cmp	w5, #0x9
  45179c:	b.ne	451764 <_obstack_memory_used@@Base+0x354>  // b.any
  4517a0:	ldr	w0, [sp, #108]
  4517a4:	cbz	w0, 45176c <_obstack_memory_used@@Base+0x35c>
  4517a8:	ldr	x0, [x7, x6]
  4517ac:	cmp	x0, x25
  4517b0:	b.ne	45176c <_obstack_memory_used@@Base+0x35c>  // b.any
  4517b4:	mov	w0, #0x0                   	// #0
  4517b8:	ldp	x19, x20, [sp, #16]
  4517bc:	ldp	x21, x22, [sp, #32]
  4517c0:	ldp	x23, x24, [sp, #48]
  4517c4:	ldp	x25, x26, [sp, #64]
  4517c8:	ldp	x27, x28, [sp, #80]
  4517cc:	ldp	x29, x30, [sp], #144
  4517d0:	ret
  4517d4:	ldr	w0, [sp, #136]
  4517d8:	cbz	w0, 45176c <_obstack_memory_used@@Base+0x35c>
  4517dc:	ldr	x0, [x7, x6]
  4517e0:	cmp	x0, x25
  4517e4:	b.ne	45176c <_obstack_memory_used@@Base+0x35c>  // b.any
  4517e8:	mov	w0, #0xffffffff            	// #-1
  4517ec:	ldp	x19, x20, [sp, #16]
  4517f0:	ldp	x21, x22, [sp, #32]
  4517f4:	ldp	x23, x24, [sp, #48]
  4517f8:	ldp	x25, x26, [sp, #64]
  4517fc:	ldp	x27, x28, [sp, #80]
  451800:	ldp	x29, x30, [sp], #144
  451804:	ret
  451808:	cmn	x24, #0x1
  45180c:	b.eq	45176c <_obstack_memory_used@@Base+0x35c>  // b.none
  451810:	ldr	x21, [x13, #216]
  451814:	add	x28, x20, x20, lsl #1
  451818:	ldr	w0, [sp, #108]
  45181c:	cmp	x25, #0x3f
  451820:	lsl	x28, x28, #3
  451824:	add	x21, x21, x22
  451828:	b.gt	4518d8 <_obstack_memory_used@@Base+0x4c8>
  45182c:	cbnz	w0, 451a04 <_obstack_memory_used@@Base+0x5f4>
  451830:	ldr	x0, [x21]
  451834:	cmp	x20, x0
  451838:	b.ne	451898 <_obstack_memory_used@@Base+0x488>  // b.any
  45183c:	ldr	x5, [sp, #128]
  451840:	mov	x4, x24
  451844:	ldrh	w3, [x21, #34]
  451848:	mov	x2, x25
  45184c:	mov	w1, w26
  451850:	mov	x0, x13
  451854:	tst	x3, x5
  451858:	b.eq	451898 <_obstack_memory_used@@Base+0x488>  // b.none
  45185c:	ldr	x3, [x27, #40]
  451860:	stp	x14, x13, [sp, #112]
  451864:	add	x3, x3, x28
  451868:	ldr	x3, [x3, #16]
  45186c:	ldr	x3, [x3]
  451870:	cmp	x14, x3
  451874:	b.eq	451a14 <_obstack_memory_used@@Base+0x604>  // b.none
  451878:	bl	4516e0 <_obstack_memory_used@@Base+0x2d0>
  45187c:	cmn	w0, #0x1
  451880:	b.eq	4517e8 <_obstack_memory_used@@Base+0x3d8>  // b.none
  451884:	ldp	x14, x13, [sp, #112]
  451888:	ldrh	w0, [x21, #34]
  45188c:	ldr	w1, [sp, #140]
  451890:	and	w0, w1, w0
  451894:	strh	w0, [x21, #34]
  451898:	ldrb	w0, [x21, #32]
  45189c:	add	x21, x21, #0x28
  4518a0:	cbnz	w0, 451830 <_obstack_memory_used@@Base+0x420>
  4518a4:	ldr	x9, [x23, #8]
  4518a8:	add	x19, x19, #0x1
  4518ac:	cmp	x19, x9
  4518b0:	b.lt	451778 <_obstack_memory_used@@Base+0x368>  // b.tstop
  4518b4:	nop
  4518b8:	ldp	x19, x20, [sp, #16]
  4518bc:	ldp	x21, x22, [sp, #32]
  4518c0:	asr	w0, w26, #1
  4518c4:	ldp	x23, x24, [sp, #48]
  4518c8:	ldp	x25, x26, [sp, #64]
  4518cc:	ldp	x27, x28, [sp, #80]
  4518d0:	ldp	x29, x30, [sp], #144
  4518d4:	ret
  4518d8:	cbnz	w0, 451974 <_obstack_memory_used@@Base+0x564>
  4518dc:	nop
  4518e0:	ldr	x3, [x21]
  4518e4:	mov	x4, x24
  4518e8:	mov	x2, x25
  4518ec:	mov	w1, w26
  4518f0:	mov	x0, x13
  4518f4:	add	x21, x21, #0x28
  4518f8:	cmp	x20, x3
  4518fc:	b.ne	45192c <_obstack_memory_used@@Base+0x51c>  // b.any
  451900:	ldr	x3, [x27, #40]
  451904:	stp	x14, x13, [sp, #112]
  451908:	add	x3, x3, x28
  45190c:	ldr	x3, [x3, #16]
  451910:	ldr	x3, [x3]
  451914:	cmp	x14, x3
  451918:	b.eq	451a14 <_obstack_memory_used@@Base+0x604>  // b.none
  45191c:	bl	4516e0 <_obstack_memory_used@@Base+0x2d0>
  451920:	cmn	w0, #0x1
  451924:	ldp	x14, x13, [sp, #112]
  451928:	b.eq	4517e8 <_obstack_memory_used@@Base+0x3d8>  // b.none
  45192c:	ldurb	w0, [x21, #-8]
  451930:	cbnz	w0, 4518e0 <_obstack_memory_used@@Base+0x4d0>
  451934:	ldr	x9, [x23, #8]
  451938:	b	4518a8 <_obstack_memory_used@@Base+0x498>
  45193c:	ldr	x3, [x27, #40]
  451940:	stp	x14, x13, [sp, #112]
  451944:	add	x3, x3, x28
  451948:	ldr	x3, [x3, #16]
  45194c:	ldr	x3, [x3]
  451950:	cmp	x14, x3
  451954:	b.eq	451a14 <_obstack_memory_used@@Base+0x604>  // b.none
  451958:	bl	4516e0 <_obstack_memory_used@@Base+0x2d0>
  45195c:	cmn	w0, #0x1
  451960:	b.eq	4517e8 <_obstack_memory_used@@Base+0x3d8>  // b.none
  451964:	ldp	x14, x13, [sp, #112]
  451968:	cbz	w0, 4517b4 <_obstack_memory_used@@Base+0x3a4>
  45196c:	ldurb	w0, [x21, #-8]
  451970:	cbz	w0, 4518a4 <_obstack_memory_used@@Base+0x494>
  451974:	ldr	x3, [x21]
  451978:	mov	x4, x24
  45197c:	mov	x2, x25
  451980:	mov	w1, w26
  451984:	mov	x0, x13
  451988:	add	x21, x21, #0x28
  45198c:	cmp	x20, x3
  451990:	b.eq	45193c <_obstack_memory_used@@Base+0x52c>  // b.none
  451994:	b	45196c <_obstack_memory_used@@Base+0x55c>
  451998:	ldr	x5, [sp, #128]
  45199c:	mov	x4, x24
  4519a0:	ldrh	w3, [x21, #34]
  4519a4:	mov	x2, x25
  4519a8:	mov	w1, w26
  4519ac:	mov	x0, x13
  4519b0:	tst	x3, x5
  4519b4:	b.eq	4519f8 <_obstack_memory_used@@Base+0x5e8>  // b.none
  4519b8:	ldr	x3, [x27, #40]
  4519bc:	add	x3, x3, x28
  4519c0:	ldr	x3, [x3, #16]
  4519c4:	ldr	x3, [x3]
  4519c8:	cmp	x14, x3
  4519cc:	b.eq	451a14 <_obstack_memory_used@@Base+0x604>  // b.none
  4519d0:	stp	x13, x14, [sp, #112]
  4519d4:	bl	4516e0 <_obstack_memory_used@@Base+0x2d0>
  4519d8:	cmn	w0, #0x1
  4519dc:	ldp	x13, x14, [sp, #112]
  4519e0:	b.eq	4517e8 <_obstack_memory_used@@Base+0x3d8>  // b.none
  4519e4:	cbz	w0, 4517b4 <_obstack_memory_used@@Base+0x3a4>
  4519e8:	ldrh	w0, [x21, #34]
  4519ec:	ldr	w1, [sp, #140]
  4519f0:	and	w0, w1, w0
  4519f4:	strh	w0, [x21, #34]
  4519f8:	ldrb	w0, [x21, #32]
  4519fc:	add	x21, x21, #0x28
  451a00:	cbz	w0, 4518a4 <_obstack_memory_used@@Base+0x494>
  451a04:	ldr	x0, [x21]
  451a08:	cmp	x0, x20
  451a0c:	b.eq	451998 <_obstack_memory_used@@Base+0x588>  // b.none
  451a10:	b	4519f8 <_obstack_memory_used@@Base+0x5e8>
  451a14:	ldr	w0, [sp, #136]
  451a18:	ldp	x19, x20, [sp, #16]
  451a1c:	neg	w0, w0
  451a20:	ldp	x21, x22, [sp, #32]
  451a24:	ldp	x23, x24, [sp, #48]
  451a28:	ldp	x25, x26, [sp, #64]
  451a2c:	ldp	x27, x28, [sp, #80]
  451a30:	ldp	x29, x30, [sp], #144
  451a34:	ret
  451a38:	stp	x29, x30, [sp, #-48]!
  451a3c:	mov	x29, sp
  451a40:	stp	x19, x20, [sp, #16]
  451a44:	mov	x19, x0
  451a48:	mov	x20, x1
  451a4c:	ldr	x0, [x0]
  451a50:	cbz	x0, 451a88 <_obstack_memory_used@@Base+0x678>
  451a54:	ldr	x1, [x19, #8]
  451a58:	str	x21, [sp, #32]
  451a5c:	ldr	x21, [x19, #16]
  451a60:	cbnz	x1, 451abc <_obstack_memory_used@@Base+0x6ac>
  451a64:	str	x20, [x21]
  451a68:	ldr	x1, [x19, #8]
  451a6c:	mov	w0, #0x1                   	// #1
  451a70:	ldr	x21, [sp, #32]
  451a74:	add	x1, x1, #0x1
  451a78:	str	x1, [x19, #8]
  451a7c:	ldp	x19, x20, [sp, #16]
  451a80:	ldp	x29, x30, [sp], #48
  451a84:	ret
  451a88:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  451a8c:	ldr	q0, [x0, #1536]
  451a90:	mov	x0, #0x8                   	// #8
  451a94:	str	q0, [x19]
  451a98:	bl	404310 <malloc@plt>
  451a9c:	mov	x1, x0
  451aa0:	str	x0, [x19, #16]
  451aa4:	cbz	x0, 451b24 <_obstack_memory_used@@Base+0x714>
  451aa8:	str	x20, [x1]
  451aac:	mov	w0, #0x1                   	// #1
  451ab0:	ldp	x19, x20, [sp, #16]
  451ab4:	ldp	x29, x30, [sp], #48
  451ab8:	ret
  451abc:	cmp	x0, x1
  451ac0:	b.eq	451b30 <_obstack_memory_used@@Base+0x720>  // b.none
  451ac4:	ldr	x0, [x21]
  451ac8:	lsl	x2, x1, #3
  451acc:	cmp	x0, x20
  451ad0:	b.gt	451b04 <_obstack_memory_used@@Base+0x6f4>
  451ad4:	add	x0, x21, x2
  451ad8:	ldur	x0, [x0, #-8]
  451adc:	cmp	x20, x0
  451ae0:	b.ge	451afc <_obstack_memory_used@@Base+0x6ec>  // b.tcont
  451ae4:	sub	x1, x21, #0x8
  451ae8:	str	x0, [x21, x2]
  451aec:	sub	x2, x2, #0x8
  451af0:	ldr	x0, [x1, x2]
  451af4:	cmp	x0, x20
  451af8:	b.gt	451ae8 <_obstack_memory_used@@Base+0x6d8>
  451afc:	str	x20, [x21, x2]
  451b00:	b	451a68 <_obstack_memory_used@@Base+0x658>
  451b04:	cmp	x1, #0x0
  451b08:	b.le	451afc <_obstack_memory_used@@Base+0x6ec>
  451b0c:	mov	x1, x21
  451b10:	add	x0, x21, #0x8
  451b14:	bl	403f80 <memmove@plt>
  451b18:	mov	x2, #0x0                   	// #0
  451b1c:	str	x20, [x21, x2]
  451b20:	b	451a68 <_obstack_memory_used@@Base+0x658>
  451b24:	mov	w0, #0x0                   	// #0
  451b28:	stp	xzr, xzr, [x19]
  451b2c:	b	451a7c <_obstack_memory_used@@Base+0x66c>
  451b30:	lsl	x0, x1, #1
  451b34:	str	x0, [x19]
  451b38:	lsl	x1, x1, #4
  451b3c:	mov	x0, x21
  451b40:	bl	404530 <realloc@plt>
  451b44:	mov	x21, x0
  451b48:	cbz	x0, 451b58 <_obstack_memory_used@@Base+0x748>
  451b4c:	str	x0, [x19, #16]
  451b50:	ldr	x1, [x19, #8]
  451b54:	b	451ac4 <_obstack_memory_used@@Base+0x6b4>
  451b58:	mov	w0, #0x0                   	// #0
  451b5c:	ldr	x21, [sp, #32]
  451b60:	b	451a7c <_obstack_memory_used@@Base+0x66c>
  451b64:	nop
  451b68:	stp	x29, x30, [sp, #-80]!
  451b6c:	mov	x29, sp
  451b70:	stp	x21, x22, [sp, #32]
  451b74:	add	x22, x1, #0x20
  451b78:	mov	x21, x1
  451b7c:	stp	x23, x24, [sp, #48]
  451b80:	mov	x24, x2
  451b84:	ldr	x23, [x1, #16]
  451b88:	str	x25, [sp, #64]
  451b8c:	str	x2, [x1]
  451b90:	mov	x25, x0
  451b94:	str	x23, [x1, #32]
  451b98:	str	xzr, [x22, #8]
  451b9c:	lsl	x0, x23, #3
  451ba0:	bl	404310 <malloc@plt>
  451ba4:	str	x0, [x22, #16]
  451ba8:	cbz	x0, 451c84 <_obstack_memory_used@@Base+0x874>
  451bac:	stp	x19, x20, [sp, #16]
  451bb0:	cmp	x23, #0x0
  451bb4:	mov	x19, #0x0                   	// #0
  451bb8:	b.gt	451bc8 <_obstack_memory_used@@Base+0x7b8>
  451bbc:	b	451c0c <_obstack_memory_used@@Base+0x7fc>
  451bc0:	cmp	x19, x23
  451bc4:	b.ge	451c0c <_obstack_memory_used@@Base+0x7fc>  // b.tcont
  451bc8:	ldr	x4, [x21, #24]
  451bcc:	ldr	x3, [x25]
  451bd0:	ldr	x20, [x4, x19, lsl #3]
  451bd4:	add	x19, x19, #0x1
  451bd8:	add	x3, x3, x20, lsl #4
  451bdc:	ldrb	w3, [x3, #8]
  451be0:	tbnz	w3, #3, 451bc0 <_obstack_memory_used@@Base+0x7b0>
  451be4:	ldp	x2, x1, [x22]
  451be8:	ldr	x0, [x22, #16]
  451bec:	cmp	x2, x1
  451bf0:	b.eq	451c5c <_obstack_memory_used@@Base+0x84c>  // b.none
  451bf4:	add	x2, x1, #0x1
  451bf8:	str	x2, [x22, #8]
  451bfc:	str	x20, [x0, x1, lsl #3]
  451c00:	ldr	x23, [x21, #16]
  451c04:	cmp	x19, x23
  451c08:	b.lt	451bc8 <_obstack_memory_used@@Base+0x7b8>  // b.tstop
  451c0c:	ldr	x19, [x25, #136]
  451c10:	ldr	x20, [x25, #64]
  451c14:	and	x24, x24, x19
  451c18:	add	x24, x24, x24, lsl #1
  451c1c:	lsl	x24, x24, #3
  451c20:	add	x22, x20, x24
  451c24:	ldr	x2, [x20, x24]
  451c28:	ldp	x0, x3, [x22, #8]
  451c2c:	add	x1, x2, #0x1
  451c30:	cmp	x0, x2
  451c34:	b.le	451c9c <_obstack_memory_used@@Base+0x88c>
  451c38:	str	x1, [x20, x24]
  451c3c:	mov	w0, #0x0                   	// #0
  451c40:	str	x21, [x3, x2, lsl #3]
  451c44:	ldp	x19, x20, [sp, #16]
  451c48:	ldp	x21, x22, [sp, #32]
  451c4c:	ldp	x23, x24, [sp, #48]
  451c50:	ldr	x25, [sp, #64]
  451c54:	ldp	x29, x30, [sp], #80
  451c58:	ret
  451c5c:	add	x1, x1, #0x1
  451c60:	lsl	x2, x1, #1
  451c64:	str	x2, [x22]
  451c68:	lsl	x1, x1, #4
  451c6c:	bl	404530 <realloc@plt>
  451c70:	cbz	x0, 451c80 <_obstack_memory_used@@Base+0x870>
  451c74:	str	x0, [x22, #16]
  451c78:	ldr	x1, [x22, #8]
  451c7c:	b	451bf4 <_obstack_memory_used@@Base+0x7e4>
  451c80:	ldp	x19, x20, [sp, #16]
  451c84:	mov	w0, #0xc                   	// #12
  451c88:	ldp	x21, x22, [sp, #32]
  451c8c:	ldp	x23, x24, [sp, #48]
  451c90:	ldr	x25, [sp, #64]
  451c94:	ldp	x29, x30, [sp], #80
  451c98:	ret
  451c9c:	mov	x0, x3
  451ca0:	lsl	x23, x1, #1
  451ca4:	lsl	x1, x1, #4
  451ca8:	bl	404530 <realloc@plt>
  451cac:	mov	x3, x0
  451cb0:	cbz	x0, 451c80 <_obstack_memory_used@@Base+0x870>
  451cb4:	ldr	x2, [x20, x24]
  451cb8:	stp	x23, x0, [x22, #8]
  451cbc:	add	x1, x2, #0x1
  451cc0:	b	451c38 <_obstack_memory_used@@Base+0x828>
  451cc4:	nop
  451cc8:	stp	x29, x30, [sp, #-144]!
  451ccc:	mov	x29, sp
  451cd0:	stp	x19, x20, [sp, #16]
  451cd4:	mov	x19, x0
  451cd8:	stp	x21, x22, [sp, #32]
  451cdc:	ldr	x21, [x0, #64]
  451ce0:	ldr	x0, [x0, #88]
  451ce4:	ldr	x20, [x19, #48]
  451ce8:	cmp	x21, x0
  451cec:	csel	x21, x21, x0, le
  451cf0:	cmp	x21, x20
  451cf4:	b.le	451d8c <_obstack_memory_used@@Base+0x97c>
  451cf8:	add	x22, x19, #0x20
  451cfc:	str	x23, [sp, #48]
  451d00:	ldr	x4, [x19, #120]
  451d04:	sub	x2, x21, x20
  451d08:	ldr	x23, [x19, #32]
  451d0c:	cbnz	x4, 451e08 <_obstack_memory_used@@Base+0x9f8>
  451d10:	ldr	x0, [x19, #40]
  451d14:	ldr	x1, [x19]
  451d18:	add	x0, x20, x0
  451d1c:	add	x1, x1, x0
  451d20:	mov	x3, x22
  451d24:	add	x0, sp, #0x4c
  451d28:	bl	450f30 <argp_parse@@Base+0x11150>
  451d2c:	sub	x1, x0, #0x1
  451d30:	cmn	x1, #0x3
  451d34:	b.hi	451da4 <_obstack_memory_used@@Base+0x994>  // b.pmore
  451d38:	cmn	x0, #0x2
  451d3c:	b.eq	451e84 <_obstack_memory_used@@Base+0xa74>  // b.none
  451d40:	ldr	x3, [x19, #16]
  451d44:	add	x1, x20, x0
  451d48:	ldr	w4, [sp, #76]
  451d4c:	add	x0, x20, #0x1
  451d50:	lsl	x2, x20, #2
  451d54:	cmp	x0, x1
  451d58:	str	w4, [x3, x20, lsl #2]
  451d5c:	b.ge	451de8 <_obstack_memory_used@@Base+0x9d8>  // b.tcont
  451d60:	mvn	x20, x20
  451d64:	add	x0, x2, #0x4
  451d68:	add	x2, x20, x1
  451d6c:	add	x0, x3, x0
  451d70:	mov	x20, x1
  451d74:	mov	w1, #0xff                  	// #255
  451d78:	lsl	x2, x2, #2
  451d7c:	bl	404410 <memset@plt>
  451d80:	cmp	x21, x20
  451d84:	b.gt	451d00 <_obstack_memory_used@@Base+0x8f0>
  451d88:	ldr	x23, [sp, #48]
  451d8c:	dup	v0.2d, x20
  451d90:	ldp	x21, x22, [sp, #32]
  451d94:	str	q0, [x19, #48]
  451d98:	ldp	x19, x20, [sp, #16]
  451d9c:	ldp	x29, x30, [sp], #144
  451da0:	ret
  451da4:	ldr	x0, [x19]
  451da8:	ldr	x2, [x19, #40]
  451dac:	add	x0, x0, x20
  451db0:	ldr	x1, [x19, #120]
  451db4:	ldrb	w4, [x0, x2]
  451db8:	str	w4, [sp, #76]
  451dbc:	cbnz	x1, 451eb4 <_obstack_memory_used@@Base+0xaa4>
  451dc0:	ldr	x3, [x19, #16]
  451dc4:	str	x23, [x19, #32]
  451dc8:	mov	x0, #0x1                   	// #1
  451dcc:	add	x1, x20, x0
  451dd0:	add	x0, x20, #0x1
  451dd4:	lsl	x2, x20, #2
  451dd8:	str	w4, [x3, x20, lsl #2]
  451ddc:	cmp	x0, x1
  451de0:	b.lt	451d60 <_obstack_memory_used@@Base+0x950>  // b.tstop
  451de4:	nop
  451de8:	mov	x20, x0
  451dec:	cmp	x21, x0
  451df0:	b.le	451d88 <_obstack_memory_used@@Base+0x978>
  451df4:	ldr	x4, [x19, #120]
  451df8:	sub	x2, x21, x20
  451dfc:	ldr	x23, [x19, #32]
  451e00:	cbz	x4, 451d10 <_obstack_memory_used@@Base+0x900>
  451e04:	nop
  451e08:	ldr	w0, [x19, #144]
  451e0c:	cmp	w0, #0x0
  451e10:	b.le	451e7c <_obstack_memory_used@@Base+0xa6c>
  451e14:	cmp	x2, #0x0
  451e18:	b.le	451e7c <_obstack_memory_used@@Base+0xa6c>
  451e1c:	mov	x1, #0x1                   	// #1
  451e20:	b	451e34 <_obstack_memory_used@@Base+0xa24>
  451e24:	cmp	x1, x2
  451e28:	b.eq	451e7c <_obstack_memory_used@@Base+0xa6c>  // b.none
  451e2c:	ldr	x4, [x19, #120]
  451e30:	mov	x1, x7
  451e34:	ldr	x0, [x19]
  451e38:	add	x3, sp, #0x50
  451e3c:	add	x5, x3, x1
  451e40:	add	x7, x1, #0x1
  451e44:	ldr	x3, [x19, #40]
  451e48:	add	x0, x0, x1
  451e4c:	add	x0, x0, x20
  451e50:	add	x0, x0, x3
  451e54:	ldr	x3, [x19, #8]
  451e58:	ldurb	w6, [x0, #-1]
  451e5c:	add	x0, x3, x1
  451e60:	add	x0, x0, x20
  451e64:	ldrb	w3, [x4, x6]
  451e68:	sturb	w3, [x0, #-1]
  451e6c:	sturb	w3, [x5, #-1]
  451e70:	ldr	w0, [x19, #144]
  451e74:	cmp	w0, w1
  451e78:	b.gt	451e24 <_obstack_memory_used@@Base+0xa14>
  451e7c:	add	x1, sp, #0x50
  451e80:	b	451d20 <_obstack_memory_used@@Base+0x910>
  451e84:	ldr	x1, [x19, #64]
  451e88:	ldr	x0, [x19, #88]
  451e8c:	cmp	x1, x0
  451e90:	b.ge	451da4 <_obstack_memory_used@@Base+0x994>  // b.tcont
  451e94:	dup	v0.2d, x20
  451e98:	str	x23, [x19, #32]
  451e9c:	ldp	x21, x22, [sp, #32]
  451ea0:	ldr	x23, [sp, #48]
  451ea4:	str	q0, [x19, #48]
  451ea8:	ldp	x19, x20, [sp, #16]
  451eac:	ldp	x29, x30, [sp], #144
  451eb0:	ret
  451eb4:	and	x4, x4, #0xff
  451eb8:	ldrb	w4, [x1, x4]
  451ebc:	b	451dc0 <_obstack_memory_used@@Base+0x9b0>
  451ec0:	stp	x29, x30, [sp, #-192]!
  451ec4:	mov	x29, sp
  451ec8:	stp	x19, x20, [sp, #16]
  451ecc:	mov	x19, x0
  451ed0:	stp	x21, x22, [sp, #32]
  451ed4:	ldrb	w1, [x0, #138]
  451ed8:	ldr	x21, [x0, #64]
  451edc:	ldr	x0, [x0, #88]
  451ee0:	ldr	x20, [x19, #48]
  451ee4:	cmp	x21, x0
  451ee8:	csel	x21, x21, x0, le
  451eec:	cbnz	w1, 451ef8 <_obstack_memory_used@@Base+0xae8>
  451ef0:	ldr	x0, [x19, #120]
  451ef4:	cbz	x0, 452038 <_obstack_memory_used@@Base+0xc28>
  451ef8:	ldr	x22, [x19, #56]
  451efc:	cmp	x21, x20
  451f00:	b.le	452020 <_obstack_memory_used@@Base+0xc10>
  451f04:	stp	x23, x24, [sp, #48]
  451f08:	add	x24, x19, #0x20
  451f0c:	stp	x25, x26, [sp, #64]
  451f10:	sub	x26, x21, x20
  451f14:	stp	x27, x28, [sp, #80]
  451f18:	add	x27, sp, #0x74
  451f1c:	ldr	x2, [x19, #120]
  451f20:	ldr	x0, [x19, #32]
  451f24:	str	x0, [sp, #120]
  451f28:	cbnz	x2, 4521f8 <_obstack_memory_used@@Base+0xde8>
  451f2c:	ldr	x0, [x19, #40]
  451f30:	ldr	x25, [x19]
  451f34:	add	x0, x22, x0
  451f38:	add	x25, x25, x0
  451f3c:	mov	x2, x26
  451f40:	mov	x3, x24
  451f44:	mov	x0, x27
  451f48:	mov	x1, x25
  451f4c:	bl	450f30 <argp_parse@@Base+0x11150>
  451f50:	sub	x26, x0, #0x1
  451f54:	mov	x23, x0
  451f58:	cmn	x26, #0x4
  451f5c:	b.hi	4522a8 <_obstack_memory_used@@Base+0xe98>  // b.pmore
  451f60:	ldr	w28, [sp, #116]
  451f64:	mov	x24, x20
  451f68:	mov	w0, w28
  451f6c:	bl	404a60 <towupper@plt>
  451f70:	mov	w27, w0
  451f74:	cmp	w28, w0
  451f78:	b.eq	452280 <_obstack_memory_used@@Base+0xe70>  // b.none
  451f7c:	add	x2, sp, #0x78
  451f80:	add	x28, sp, #0x80
  451f84:	mov	x0, x28
  451f88:	mov	w1, w27
  451f8c:	bl	404c20 <wcrtomb@plt>
  451f90:	mov	x2, x0
  451f94:	cmp	x23, x0
  451f98:	b.ne	4523c0 <_obstack_memory_used@@Base+0xfb0>  // b.any
  451f9c:	ldr	x0, [x19, #8]
  451fa0:	mov	x1, x28
  451fa4:	mov	x2, x23
  451fa8:	add	x0, x0, x20
  451fac:	bl	403f70 <memcpy@plt>
  451fb0:	ldrb	w0, [x19, #140]
  451fb4:	cbnz	w0, 45231c <_obstack_memory_used@@Base+0xf0c>
  451fb8:	ldr	x0, [x19, #16]
  451fbc:	add	x20, x20, #0x1
  451fc0:	add	x1, x23, x24
  451fc4:	add	x22, x23, x22
  451fc8:	cmp	x20, x1
  451fcc:	lsl	x3, x24, #2
  451fd0:	str	w27, [x0, x24, lsl #2]
  451fd4:	b.ge	452298 <_obstack_memory_used@@Base+0xe88>  // b.tcont
  451fd8:	mvn	x2, x24
  451fdc:	add	x3, x3, #0x4
  451fe0:	add	x2, x2, x1
  451fe4:	add	x0, x0, x3
  451fe8:	mov	x20, x1
  451fec:	mov	w1, #0xff                  	// #255
  451ff0:	lsl	x2, x2, #2
  451ff4:	bl	404410 <memset@plt>
  451ff8:	ldp	x23, x24, [sp, #48]
  451ffc:	ldp	x25, x26, [sp, #64]
  452000:	ldp	x27, x28, [sp, #80]
  452004:	b	451efc <_obstack_memory_used@@Base+0xaec>
  452008:	ldr	x0, [sp, #120]
  45200c:	ldp	x23, x24, [sp, #48]
  452010:	ldp	x25, x26, [sp, #64]
  452014:	ldp	x27, x28, [sp, #80]
  452018:	str	x0, [x19, #32]
  45201c:	nop
  452020:	mov	w0, #0x0                   	// #0
  452024:	stp	x20, x22, [x19, #48]
  452028:	ldp	x19, x20, [sp, #16]
  45202c:	ldp	x21, x22, [sp, #32]
  452030:	ldp	x29, x30, [sp], #192
  452034:	ret
  452038:	ldrb	w0, [x19, #140]
  45203c:	cbnz	w0, 451ef8 <_obstack_memory_used@@Base+0xae8>
  452040:	cmp	x20, x21
  452044:	b.ge	452270 <_obstack_memory_used@@Base+0xe60>  // b.tcont
  452048:	stp	x23, x24, [sp, #48]
  45204c:	add	x24, x19, #0x20
  452050:	stp	x25, x26, [sp, #64]
  452054:	stp	x27, x28, [sp, #80]
  452058:	b	4520cc <_obstack_memory_used@@Base+0xcbc>
  45205c:	mov	w1, w0
  452060:	add	x2, sp, #0x78
  452064:	add	x0, sp, #0x80
  452068:	bl	404c20 <wcrtomb@plt>
  45206c:	cmp	x22, x0
  452070:	b.ne	45225c <_obstack_memory_used@@Base+0xe4c>  // b.any
  452074:	ldr	x0, [x19, #8]
  452078:	mov	x2, x22
  45207c:	add	x1, sp, #0x80
  452080:	add	x0, x0, x20
  452084:	bl	403f70 <memcpy@plt>
  452088:	ldr	x0, [x19, #16]
  45208c:	add	x20, x20, #0x1
  452090:	add	x22, x22, x23
  452094:	lsl	x1, x23, #2
  452098:	cmp	x20, x22
  45209c:	str	w25, [x0, x23, lsl #2]
  4520a0:	b.ge	4520c4 <_obstack_memory_used@@Base+0xcb4>  // b.tcont
  4520a4:	mvn	x2, x23
  4520a8:	add	x1, x1, #0x4
  4520ac:	add	x2, x2, x22
  4520b0:	add	x0, x0, x1
  4520b4:	mov	x20, x22
  4520b8:	mov	w1, #0xff                  	// #255
  4520bc:	lsl	x2, x2, #2
  4520c0:	bl	404410 <memset@plt>
  4520c4:	cmp	x20, x21
  4520c8:	b.ge	452264 <_obstack_memory_used@@Base+0xe54>  // b.tcont
  4520cc:	ldr	x25, [x19]
  4520d0:	mov	x23, x20
  4520d4:	ldr	x22, [x19, #40]
  4520d8:	add	x0, x25, x22
  4520dc:	ldrb	w26, [x0, x20]
  4520e0:	tbnz	w26, #7, 4520f0 <_obstack_memory_used@@Base+0xce0>
  4520e4:	mov	x0, x24
  4520e8:	bl	404670 <mbsinit@plt>
  4520ec:	cbnz	w0, 452160 <_obstack_memory_used@@Base+0xd50>
  4520f0:	ldr	x4, [x19, #32]
  4520f4:	add	x22, x22, x20
  4520f8:	sub	x26, x21, x20
  4520fc:	add	x1, x25, x22
  452100:	mov	x2, x26
  452104:	mov	x3, x24
  452108:	add	x0, sp, #0x74
  45210c:	str	x4, [sp, #120]
  452110:	bl	450f30 <argp_parse@@Base+0x11150>
  452114:	mov	x22, x0
  452118:	sub	x0, x0, #0x1
  45211c:	add	x27, sp, #0x74
  452120:	cmn	x0, #0x4
  452124:	b.hi	452188 <_obstack_memory_used@@Base+0xd78>  // b.pmore
  452128:	ldr	w28, [sp, #116]
  45212c:	mov	w0, w28
  452130:	bl	404a60 <towupper@plt>
  452134:	mov	w25, w0
  452138:	cmp	w28, w0
  45213c:	b.ne	45205c <_obstack_memory_used@@Base+0xc4c>  // b.any
  452140:	ldp	x3, x0, [x19]
  452144:	mov	x2, x22
  452148:	ldr	x1, [x19, #40]
  45214c:	add	x1, x20, x1
  452150:	add	x1, x3, x1
  452154:	add	x0, x0, x20
  452158:	bl	403f70 <memcpy@plt>
  45215c:	b	452088 <_obstack_memory_used@@Base+0xc78>
  452160:	bl	404540 <__ctype_toupper_loc@plt>
  452164:	ldr	x0, [x0]
  452168:	ldr	x1, [x19, #8]
  45216c:	ldr	w0, [x0, x26, lsl #2]
  452170:	strb	w0, [x1, x20]
  452174:	ldp	x1, x0, [x19, #8]
  452178:	ldrb	w1, [x1, x20]
  45217c:	str	w1, [x0, x20, lsl #2]
  452180:	add	x20, x20, #0x1
  452184:	b	4520c4 <_obstack_memory_used@@Base+0xcb4>
  452188:	cmn	x0, #0x3
  45218c:	b.eq	4521c4 <_obstack_memory_used@@Base+0xdb4>  // b.none
  452190:	ldp	x0, x1, [x19]
  452194:	cmn	x22, #0x1
  452198:	ldr	x2, [x19, #40]
  45219c:	add	x0, x0, x20
  4521a0:	ldrb	w0, [x0, x2]
  4521a4:	strb	w0, [x1, x20]
  4521a8:	add	x20, x20, #0x1
  4521ac:	ldr	x1, [x19, #16]
  4521b0:	str	w0, [x1, x23, lsl #2]
  4521b4:	b.ne	4520c4 <_obstack_memory_used@@Base+0xcb4>  // b.any
  4521b8:	ldr	x0, [sp, #120]
  4521bc:	str	x0, [x19, #32]
  4521c0:	b	4520c4 <_obstack_memory_used@@Base+0xcb4>
  4521c4:	ldr	x1, [x19, #64]
  4521c8:	ldr	x0, [x19, #88]
  4521cc:	cmp	x1, x0
  4521d0:	b.lt	45270c <_obstack_memory_used@@Base+0x12fc>  // b.tstop
  4521d4:	ldp	x0, x1, [x19]
  4521d8:	ldr	x2, [x19, #40]
  4521dc:	add	x0, x0, x20
  4521e0:	ldrb	w0, [x0, x2]
  4521e4:	strb	w0, [x1, x20]
  4521e8:	add	x20, x20, #0x1
  4521ec:	ldr	x1, [x19, #16]
  4521f0:	str	w0, [x1, x23, lsl #2]
  4521f4:	b	4520c4 <_obstack_memory_used@@Base+0xcb4>
  4521f8:	ldr	w6, [x19, #144]
  4521fc:	cmp	w6, #0x0
  452200:	b.le	452724 <_obstack_memory_used@@Base+0x1314>
  452204:	cmp	x26, #0x0
  452208:	b.le	452724 <_obstack_memory_used@@Base+0x1314>
  45220c:	ldr	x1, [x19, #40]
  452210:	add	x28, sp, #0x80
  452214:	ldr	x5, [x19]
  452218:	add	x1, x22, x1
  45221c:	sub	x1, x1, #0x1
  452220:	mov	x0, #0x1                   	// #1
  452224:	add	x5, x5, x1
  452228:	b	452238 <_obstack_memory_used@@Base+0xe28>
  45222c:	cmp	x0, x26
  452230:	mov	x0, x3
  452234:	b.eq	452254 <_obstack_memory_used@@Base+0xe44>  // b.none
  452238:	ldrb	w4, [x5, x0]
  45223c:	add	x1, x28, x0
  452240:	cmp	w6, w0
  452244:	add	x3, x0, #0x1
  452248:	ldrb	w4, [x2, x4]
  45224c:	sturb	w4, [x1, #-1]
  452250:	b.gt	45222c <_obstack_memory_used@@Base+0xe1c>
  452254:	mov	x25, x28
  452258:	b	451f3c <_obstack_memory_used@@Base+0xb2c>
  45225c:	mov	x22, x20
  452260:	b	451f1c <_obstack_memory_used@@Base+0xb0c>
  452264:	ldp	x23, x24, [sp, #48]
  452268:	ldp	x25, x26, [sp, #64]
  45226c:	ldp	x27, x28, [sp, #80]
  452270:	dup	v0.2d, x20
  452274:	mov	w0, #0x0                   	// #0
  452278:	str	q0, [x19, #48]
  45227c:	b	452028 <_obstack_memory_used@@Base+0xc18>
  452280:	ldr	x0, [x19, #8]
  452284:	mov	x1, x25
  452288:	mov	x2, x23
  45228c:	add	x0, x0, x20
  452290:	bl	403f70 <memcpy@plt>
  452294:	b	451fb0 <_obstack_memory_used@@Base+0xba0>
  452298:	ldp	x23, x24, [sp, #48]
  45229c:	ldp	x25, x26, [sp, #64]
  4522a0:	ldp	x27, x28, [sp, #80]
  4522a4:	b	451efc <_obstack_memory_used@@Base+0xaec>
  4522a8:	cmn	x26, #0x3
  4522ac:	b.ne	4522c0 <_obstack_memory_used@@Base+0xeb0>  // b.any
  4522b0:	ldr	x1, [x19, #64]
  4522b4:	ldr	x0, [x19, #88]
  4522b8:	cmp	x1, x0
  4522bc:	b.lt	452008 <_obstack_memory_used@@Base+0xbf8>  // b.tstop
  4522c0:	ldr	x0, [x19]
  4522c4:	ldr	x2, [x19, #40]
  4522c8:	add	x0, x0, x22
  4522cc:	ldr	x1, [x19, #120]
  4522d0:	ldrb	w0, [x0, x2]
  4522d4:	cbnz	x1, 452778 <_obstack_memory_used@@Base+0x1368>
  4522d8:	ldr	x1, [x19, #8]
  4522dc:	mov	x2, x20
  4522e0:	strb	w0, [x1, x20]
  4522e4:	ldrb	w1, [x19, #140]
  4522e8:	cbnz	w1, 45276c <_obstack_memory_used@@Base+0x135c>
  4522ec:	ldr	x1, [x19, #16]
  4522f0:	add	x22, x22, #0x1
  4522f4:	add	x20, x20, #0x1
  4522f8:	cmn	x23, #0x1
  4522fc:	str	w0, [x1, x2, lsl #2]
  452300:	b.ne	452298 <_obstack_memory_used@@Base+0xe88>  // b.any
  452304:	ldr	x0, [sp, #120]
  452308:	ldp	x23, x24, [sp, #48]
  45230c:	ldp	x25, x26, [sp, #64]
  452310:	ldp	x27, x28, [sp, #80]
  452314:	str	x0, [x19, #32]
  452318:	b	451efc <_obstack_memory_used@@Base+0xaec>
  45231c:	cmp	x26, #0x3
  452320:	ldr	x2, [x19, #24]
  452324:	b.ls	45275c <_obstack_memory_used@@Base+0x134c>  // b.plast
  452328:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45232c:	lsr	x1, x23, #1
  452330:	add	x0, x2, x20, lsl #3
  452334:	dup	v3.2d, x22
  452338:	ldr	q1, [x3, #1376]
  45233c:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452340:	add	x1, x0, x1, lsl #4
  452344:	ldr	q2, [x3, #1392]
  452348:	mov	v0.16b, v1.16b
  45234c:	add	v1.2d, v1.2d, v2.2d
  452350:	add	v0.2d, v3.2d, v0.2d
  452354:	str	q0, [x0], #16
  452358:	cmp	x0, x1
  45235c:	b.ne	452348 <_obstack_memory_used@@Base+0xf38>  // b.any
  452360:	and	x0, x23, #0xfffffffffffffffe
  452364:	tbz	w23, #0, 451fb8 <_obstack_memory_used@@Base+0xba8>
  452368:	add	x3, x0, x20
  45236c:	add	x4, x0, x22
  452370:	add	x1, x0, #0x1
  452374:	cmp	x1, x23
  452378:	str	x4, [x2, x3, lsl #3]
  45237c:	b.cs	451fb8 <_obstack_memory_used@@Base+0xba8>  // b.hs, b.nlast
  452380:	add	x4, x1, x20
  452384:	add	x3, x1, x22
  452388:	add	x1, x0, #0x2
  45238c:	cmp	x23, x1
  452390:	str	x3, [x2, x4, lsl #3]
  452394:	b.ls	451fb8 <_obstack_memory_used@@Base+0xba8>  // b.plast
  452398:	add	x3, x20, x1
  45239c:	add	x1, x1, x22
  4523a0:	add	x0, x0, #0x3
  4523a4:	cmp	x0, x23
  4523a8:	str	x1, [x2, x3, lsl #3]
  4523ac:	b.cs	451fb8 <_obstack_memory_used@@Base+0xba8>  // b.hs, b.nlast
  4523b0:	add	x1, x0, x20
  4523b4:	add	x0, x0, x22
  4523b8:	str	x0, [x2, x1, lsl #3]
  4523bc:	b	451fb8 <_obstack_memory_used@@Base+0xba8>
  4523c0:	cmn	x0, #0x1
  4523c4:	b.eq	452280 <_obstack_memory_used@@Base+0xe70>  // b.none
  4523c8:	add	x24, x0, x20
  4523cc:	ldr	x0, [x19, #64]
  4523d0:	cmp	x24, x0
  4523d4:	b.hi	452008 <_obstack_memory_used@@Base+0xbf8>  // b.pmore
  4523d8:	ldr	x1, [x19, #24]
  4523dc:	cbz	x1, 452730 <_obstack_memory_used@@Base+0x1320>
  4523e0:	ldrb	w0, [x19, #140]
  4523e4:	cbnz	w0, 452480 <_obstack_memory_used@@Base+0x1070>
  4523e8:	cbz	x20, 452478 <_obstack_memory_used@@Base+0x1068>
  4523ec:	sub	x0, x20, #0x1
  4523f0:	cmp	x0, #0x4
  4523f4:	ldr	x1, [x19, #24]
  4523f8:	b.ls	452764 <_obstack_memory_used@@Base+0x1354>  // b.plast
  4523fc:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452400:	lsr	x0, x20, #1
  452404:	mov	x3, x1
  452408:	ldr	q0, [x4, #1376]
  45240c:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452410:	add	x0, x1, x0, lsl #4
  452414:	ldr	q1, [x4, #1392]
  452418:	mov	v2.16b, v0.16b
  45241c:	add	v0.2d, v0.2d, v1.2d
  452420:	str	q2, [x3], #16
  452424:	cmp	x3, x0
  452428:	b.ne	452418 <_obstack_memory_used@@Base+0x1008>  // b.any
  45242c:	and	x0, x20, #0xfffffffffffffffe
  452430:	tbz	w20, #0, 452478 <_obstack_memory_used@@Base+0x1068>
  452434:	str	x0, [x1, x0, lsl #3]
  452438:	add	x3, x0, #0x1
  45243c:	cmp	x20, x3
  452440:	b.ls	452478 <_obstack_memory_used@@Base+0x1068>  // b.plast
  452444:	str	x3, [x1, x3, lsl #3]
  452448:	add	x3, x0, #0x2
  45244c:	cmp	x20, x3
  452450:	b.ls	452478 <_obstack_memory_used@@Base+0x1068>  // b.plast
  452454:	str	x3, [x1, x3, lsl #3]
  452458:	add	x3, x0, #0x3
  45245c:	cmp	x20, x3
  452460:	b.ls	452478 <_obstack_memory_used@@Base+0x1068>  // b.plast
  452464:	str	x3, [x1, x3, lsl #3]
  452468:	add	x0, x0, #0x4
  45246c:	cmp	x20, x0
  452470:	b.ls	452478 <_obstack_memory_used@@Base+0x1068>  // b.plast
  452474:	str	x0, [x1, x0, lsl #3]
  452478:	mov	w0, #0x1                   	// #1
  45247c:	strb	w0, [x19, #140]
  452480:	ldr	x0, [x19, #8]
  452484:	mov	x1, x28
  452488:	str	x2, [sp, #104]
  45248c:	add	x0, x0, x20
  452490:	bl	403f70 <memcpy@plt>
  452494:	ldp	x0, x4, [x19, #16]
  452498:	str	w27, [x0, x20, lsl #2]
  45249c:	ldr	x2, [sp, #104]
  4524a0:	lsl	x5, x20, #2
  4524a4:	lsl	x3, x20, #3
  4524a8:	cmp	x2, #0x1
  4524ac:	str	x22, [x4, x20, lsl #3]
  4524b0:	add	x9, x0, x5
  4524b4:	add	x10, x4, x3
  4524b8:	b.ls	4526c4 <_obstack_memory_used@@Base+0x12b4>  // b.plast
  4524bc:	cmp	x23, #0x1
  4524c0:	mov	x1, #0x1                   	// #1
  4524c4:	b.ls	4525d4 <_obstack_memory_used@@Base+0x11c4>  // b.plast
  4524c8:	cmp	x23, x2
  4524cc:	add	x3, x3, #0x8
  4524d0:	csel	x6, x23, x2, ls  // ls = plast
  4524d4:	add	x3, x4, x3
  4524d8:	add	x7, x20, x6
  4524dc:	add	x5, x5, #0x4
  4524e0:	add	x5, x0, x5
  4524e4:	sub	x8, x6, #0x2
  4524e8:	add	x11, x0, x7, lsl #2
  4524ec:	add	x7, x4, x7, lsl #3
  4524f0:	cmp	x11, x3
  4524f4:	ccmp	x7, x5, #0x0, hi  // hi = pmore
  4524f8:	ccmp	x8, #0x7, #0x0, ls  // ls = plast
  4524fc:	b.ls	4527ac <_obstack_memory_used@@Base+0x139c>  // b.plast
  452500:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452504:	sub	x7, x6, #0x1
  452508:	mov	x1, x3
  45250c:	mov	x3, x5
  452510:	ldr	q1, [x8, #1408]
  452514:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452518:	lsr	x5, x7, #2
  45251c:	dup	v3.2d, x22
  452520:	ldr	q7, [x8, #1424]
  452524:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452528:	mvni	v5.4s, #0x0
  45252c:	add	x5, x1, x5, lsl #5
  452530:	ldr	q6, [x8, #1392]
  452534:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x21bf0>
  452538:	ldr	q4, [x8, #1440]
  45253c:	mov	v0.16b, v1.16b
  452540:	add	v1.2d, v1.2d, v7.2d
  452544:	add	v2.2d, v0.2d, v6.2d
  452548:	add	v16.2d, v0.2d, v3.2d
  45254c:	add	v0.2d, v0.2d, v4.2d
  452550:	add	v2.2d, v2.2d, v3.2d
  452554:	stp	q16, q2, [x1]
  452558:	add	x1, x1, #0x20
  45255c:	cmp	x1, x5
  452560:	str	q5, [x3], #16
  452564:	b.ne	45253c <_obstack_memory_used@@Base+0x112c>  // b.any
  452568:	and	x3, x7, #0xfffffffffffffffc
  45256c:	mov	x1, v0.d[1]
  452570:	cmp	x7, x3
  452574:	add	x5, x3, #0x1
  452578:	b.eq	4525cc <_obstack_memory_used@@Base+0x11bc>  // b.none
  45257c:	add	x8, x20, x5
  452580:	add	x5, x22, x5
  452584:	mov	w7, #0xffffffff            	// #-1
  452588:	add	x1, x3, #0x2
  45258c:	cmp	x6, x1
  452590:	str	x5, [x4, x8, lsl #3]
  452594:	str	w7, [x0, x8, lsl #2]
  452598:	b.ls	4525cc <_obstack_memory_used@@Base+0x11bc>  // b.plast
  45259c:	add	x5, x20, x1
  4525a0:	add	x8, x22, x1
  4525a4:	add	x1, x3, #0x3
  4525a8:	cmp	x6, x1
  4525ac:	str	x8, [x4, x5, lsl #3]
  4525b0:	str	w7, [x0, x5, lsl #2]
  4525b4:	b.ls	4525cc <_obstack_memory_used@@Base+0x11bc>  // b.plast
  4525b8:	add	x5, x20, x1
  4525bc:	add	x6, x22, x1
  4525c0:	add	x1, x3, #0x4
  4525c4:	str	x6, [x4, x5, lsl #3]
  4525c8:	str	w7, [x0, x5, lsl #2]
  4525cc:	cmp	x2, x1
  4525d0:	b.ls	4526c4 <_obstack_memory_used@@Base+0x12b4>  // b.plast
  4525d4:	sub	x6, x2, x1
  4525d8:	add	x5, x1, #0x1
  4525dc:	add	x3, x20, x1
  4525e0:	cmp	x2, x5
  4525e4:	lsl	x8, x6, #3
  4525e8:	mov	x11, #0x8                   	// #8
  4525ec:	lsl	x7, x6, #2
  4525f0:	csel	x8, x8, x11, cs  // cs = hs, nlast
  4525f4:	add	x8, x8, x3, lsl #3
  4525f8:	mov	x11, #0x4                   	// #4
  4525fc:	csel	x7, x7, x11, cs  // cs = hs, nlast
  452600:	add	x8, x4, x8
  452604:	add	x7, x7, x3, lsl #2
  452608:	add	x11, x0, x3, lsl #2
  45260c:	add	x7, x0, x7
  452610:	cmp	x11, x8
  452614:	add	x3, x4, x3, lsl #3
  452618:	sub	x8, x2, #0x1
  45261c:	ccmp	x3, x7, #0x2, cc  // cc = lo, ul, last
  452620:	sub	x7, x8, x1
  452624:	cset	w8, cs  // cs = hs, nlast
  452628:	cmp	x7, #0x6
  45262c:	ccmp	x2, x5, #0x0, hi  // hi = pmore
  452630:	cset	w7, cs  // cs = hs, nlast
  452634:	tst	w8, w7
  452638:	b.eq	452784 <_obstack_memory_used@@Base+0x1374>  // b.none
  45263c:	mvni	v2.4s, #0x0
  452640:	cmp	x2, x5
  452644:	add	x5, x26, x22
  452648:	fmov	d0, x5
  45264c:	csinc	x5, x6, xzr, cs  // cs = hs, nlast
  452650:	mov	x6, x11
  452654:	dup	v1.2d, v0.d[0]
  452658:	lsr	x7, x5, #2
  45265c:	add	x7, x3, x7, lsl #5
  452660:	stp	q1, q1, [x3]
  452664:	add	x3, x3, #0x20
  452668:	cmp	x3, x7
  45266c:	str	q2, [x6], #16
  452670:	b.ne	452660 <_obstack_memory_used@@Base+0x1250>  // b.any
  452674:	and	x3, x5, #0xfffffffffffffffc
  452678:	add	x1, x1, x3
  45267c:	cmp	x5, x3
  452680:	b.eq	4526c4 <_obstack_memory_used@@Base+0x12b4>  // b.none
  452684:	add	x5, x1, x20
  452688:	mov	w6, #0xffffffff            	// #-1
  45268c:	add	x3, x1, #0x1
  452690:	cmp	x3, x2
  452694:	str	d0, [x4, x5, lsl #3]
  452698:	str	w6, [x0, x5, lsl #2]
  45269c:	b.cs	4526c4 <_obstack_memory_used@@Base+0x12b4>  // b.hs, b.nlast
  4526a0:	add	x3, x3, x20
  4526a4:	add	x1, x1, #0x2
  4526a8:	cmp	x2, x1
  4526ac:	str	d0, [x4, x3, lsl #3]
  4526b0:	str	w6, [x0, x3, lsl #2]
  4526b4:	b.ls	4526c4 <_obstack_memory_used@@Base+0x12b4>  // b.plast
  4526b8:	add	x20, x20, x1
  4526bc:	str	d0, [x4, x20, lsl #3]
  4526c0:	str	w6, [x0, x20, lsl #2]
  4526c4:	sub	x0, x2, x23
  4526c8:	ldp	x1, x2, [x19, #88]
  4526cc:	add	x1, x0, x1
  4526d0:	str	x1, [x19, #88]
  4526d4:	cmp	x22, x2
  4526d8:	b.ge	4526e8 <_obstack_memory_used@@Base+0x12d8>  // b.tcont
  4526dc:	ldr	x2, [x19, #104]
  4526e0:	add	x0, x2, x0
  4526e4:	str	x0, [x19, #104]
  4526e8:	ldr	x21, [x19, #64]
  4526ec:	mov	x20, x24
  4526f0:	add	x22, x23, x22
  4526f4:	cmp	x21, x1
  4526f8:	csel	x21, x21, x1, le
  4526fc:	ldp	x23, x24, [sp, #48]
  452700:	ldp	x25, x26, [sp, #64]
  452704:	ldp	x27, x28, [sp, #80]
  452708:	b	451efc <_obstack_memory_used@@Base+0xaec>
  45270c:	ldr	x0, [sp, #120]
  452710:	ldp	x23, x24, [sp, #48]
  452714:	ldp	x25, x26, [sp, #64]
  452718:	ldp	x27, x28, [sp, #80]
  45271c:	str	x0, [x19, #32]
  452720:	b	452270 <_obstack_memory_used@@Base+0xe60>
  452724:	add	x28, sp, #0x80
  452728:	mov	x25, x28
  45272c:	b	451f3c <_obstack_memory_used@@Base+0xb2c>
  452730:	lsl	x0, x0, #3
  452734:	str	x2, [sp, #104]
  452738:	bl	404310 <malloc@plt>
  45273c:	str	x0, [x19, #24]
  452740:	ldr	x2, [sp, #104]
  452744:	cbnz	x0, 4523e0 <_obstack_memory_used@@Base+0xfd0>
  452748:	mov	w0, #0xc                   	// #12
  45274c:	ldp	x23, x24, [sp, #48]
  452750:	ldp	x25, x26, [sp, #64]
  452754:	ldp	x27, x28, [sp, #80]
  452758:	b	452028 <_obstack_memory_used@@Base+0xc18>
  45275c:	mov	x0, #0x0                   	// #0
  452760:	b	452368 <_obstack_memory_used@@Base+0xf58>
  452764:	mov	x0, #0x0                   	// #0
  452768:	b	452434 <_obstack_memory_used@@Base+0x1024>
  45276c:	ldr	x1, [x19, #24]
  452770:	str	x22, [x1, x20, lsl #3]
  452774:	b	4522ec <_obstack_memory_used@@Base+0xedc>
  452778:	and	x0, x0, #0xff
  45277c:	ldrb	w0, [x1, x0]
  452780:	b	4522d8 <_obstack_memory_used@@Base+0xec8>
  452784:	add	x0, x26, x22
  452788:	fmov	d0, x0
  45278c:	mov	w0, #0xffffffff            	// #-1
  452790:	str	d0, [x10, x1, lsl #3]
  452794:	cmp	x2, x5
  452798:	str	w0, [x9, x1, lsl #2]
  45279c:	mov	x1, x5
  4527a0:	add	x5, x5, #0x1
  4527a4:	b.hi	452790 <_obstack_memory_used@@Base+0x1380>  // b.pmore
  4527a8:	b	4526c4 <_obstack_memory_used@@Base+0x12b4>
  4527ac:	mov	w3, #0xffffffff            	// #-1
  4527b0:	add	x5, x22, x1
  4527b4:	str	x5, [x10, x1, lsl #3]
  4527b8:	str	w3, [x9, x1, lsl #2]
  4527bc:	add	x1, x1, #0x1
  4527c0:	cmp	x6, x1
  4527c4:	b.hi	4527b0 <_obstack_memory_used@@Base+0x13a0>  // b.pmore
  4527c8:	b	4525cc <_obstack_memory_used@@Base+0x11bc>
  4527cc:	nop
  4527d0:	stp	x29, x30, [sp, #-96]!
  4527d4:	mov	x29, sp
  4527d8:	stp	x21, x22, [sp, #32]
  4527dc:	ldp	x21, x4, [x0, #8]
  4527e0:	stp	x19, x20, [sp, #16]
  4527e4:	mov	x19, x0
  4527e8:	stp	x23, x24, [sp, #48]
  4527ec:	mov	x20, x2
  4527f0:	mov	x24, x1
  4527f4:	stp	x25, x26, [sp, #64]
  4527f8:	and	w25, w2, #0xff
  4527fc:	cmp	x4, x21
  452800:	b.cs	4528ac <_obstack_memory_used@@Base+0x149c>  // b.hs, b.nlast
  452804:	ldr	x22, [x0, #24]
  452808:	ldr	x21, [x0, #40]
  45280c:	lsl	x3, x4, #4
  452810:	ldr	x5, [x19]
  452814:	and	w1, w20, #0xfffc00ff
  452818:	cmp	w25, #0x6
  45281c:	add	x2, x5, x3
  452820:	cset	w0, eq  // eq = none
  452824:	str	x24, [x5, x3]
  452828:	cmp	w25, #0x5
  45282c:	str	x20, [x2, #8]
  452830:	str	w1, [x2, #8]
  452834:	b.ne	452844 <_obstack_memory_used@@Base+0x1434>  // b.any
  452838:	ldr	w0, [x19, #180]
  45283c:	cmp	w0, #0x1
  452840:	cset	w0, gt
  452844:	ldrb	w1, [x2, #10]
  452848:	mov	x3, #0xffffffffffffffff    	// #-1
  45284c:	bfi	w1, w0, #4, #1
  452850:	strb	w1, [x2, #10]
  452854:	str	x3, [x22, x4, lsl #3]
  452858:	ldr	x0, [x19, #16]
  45285c:	add	x0, x0, x0, lsl #1
  452860:	add	x0, x21, x0, lsl #3
  452864:	stp	xzr, xzr, [x0]
  452868:	str	xzr, [x0, #16]
  45286c:	ldr	x0, [x19, #16]
  452870:	ldr	x1, [x19, #48]
  452874:	add	x0, x0, x0, lsl #1
  452878:	add	x0, x1, x0, lsl #3
  45287c:	stp	xzr, xzr, [x0]
  452880:	str	xzr, [x0, #16]
  452884:	ldr	x1, [x19, #16]
  452888:	mov	x0, x1
  45288c:	add	x1, x1, #0x1
  452890:	str	x1, [x19, #16]
  452894:	ldp	x19, x20, [sp, #16]
  452898:	ldp	x21, x22, [sp, #32]
  45289c:	ldp	x23, x24, [sp, #48]
  4528a0:	ldp	x25, x26, [sp, #64]
  4528a4:	ldp	x29, x30, [sp], #96
  4528a8:	ret
  4528ac:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4528b0:	lsl	x23, x21, #1
  4528b4:	movk	x0, #0xaaa, lsl #48
  4528b8:	cmp	x0, x21, lsl #1
  4528bc:	b.cc	452958 <_obstack_memory_used@@Base+0x1548>  // b.lo, b.ul, b.last
  4528c0:	ldr	x0, [x19]
  4528c4:	lsl	x1, x21, #5
  4528c8:	bl	404530 <realloc@plt>
  4528cc:	mov	x1, x0
  4528d0:	cbz	x0, 452958 <_obstack_memory_used@@Base+0x1548>
  4528d4:	ldr	x0, [x19, #24]
  4528d8:	str	x27, [sp, #80]
  4528dc:	str	x1, [x19]
  4528e0:	lsl	x26, x21, #4
  4528e4:	mov	x1, x26
  4528e8:	add	x21, x23, x21
  4528ec:	bl	404530 <realloc@plt>
  4528f0:	mov	x22, x0
  4528f4:	ldr	x0, [x19, #32]
  4528f8:	mov	x1, x26
  4528fc:	lsl	x21, x21, #4
  452900:	bl	404530 <realloc@plt>
  452904:	mov	x26, x0
  452908:	ldr	x0, [x19, #40]
  45290c:	mov	x1, x21
  452910:	bl	404530 <realloc@plt>
  452914:	mov	x1, x21
  452918:	mov	x21, x0
  45291c:	ldr	x0, [x19, #48]
  452920:	bl	404530 <realloc@plt>
  452924:	mov	x27, x0
  452928:	cmp	x22, #0x0
  45292c:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  452930:	b.eq	452960 <_obstack_memory_used@@Base+0x1550>  // b.none
  452934:	cmp	x21, #0x0
  452938:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  45293c:	b.eq	452960 <_obstack_memory_used@@Base+0x1550>  // b.none
  452940:	str	x23, [x19, #8]
  452944:	stp	x22, x26, [x19, #24]
  452948:	stp	x21, x0, [x19, #40]
  45294c:	ldr	x4, [x19, #16]
  452950:	ldr	x27, [sp, #80]
  452954:	b	45280c <_obstack_memory_used@@Base+0x13fc>
  452958:	mov	x0, #0xffffffffffffffff    	// #-1
  45295c:	b	452894 <_obstack_memory_used@@Base+0x1484>
  452960:	mov	x0, x22
  452964:	bl	4047b0 <free@plt>
  452968:	mov	x0, x26
  45296c:	bl	4047b0 <free@plt>
  452970:	mov	x0, x21
  452974:	bl	4047b0 <free@plt>
  452978:	mov	x0, x27
  45297c:	bl	4047b0 <free@plt>
  452980:	mov	x0, #0xffffffffffffffff    	// #-1
  452984:	ldr	x27, [sp, #80]
  452988:	b	452894 <_obstack_memory_used@@Base+0x1484>
  45298c:	nop
  452990:	stp	x29, x30, [sp, #-64]!
  452994:	mov	x29, sp
  452998:	str	x23, [sp, #48]
  45299c:	mov	x23, x0
  4529a0:	ldr	x0, [x0, #232]
  4529a4:	cmp	x0, #0x0
  4529a8:	b.le	452a38 <_obstack_memory_used@@Base+0x1628>
  4529ac:	stp	x19, x20, [sp, #16]
  4529b0:	stp	x21, x22, [sp, #32]
  4529b4:	mov	x22, #0x0                   	// #0
  4529b8:	ldr	x0, [x23, #248]
  4529bc:	ldr	x21, [x0, x22, lsl #3]
  4529c0:	ldr	x0, [x21, #32]
  4529c4:	cmp	x0, #0x0
  4529c8:	b.le	4529f8 <_obstack_memory_used@@Base+0x15e8>
  4529cc:	mov	x19, #0x0                   	// #0
  4529d0:	ldr	x1, [x21, #40]
  4529d4:	ldr	x20, [x1, x19, lsl #3]
  4529d8:	add	x19, x19, #0x1
  4529dc:	ldr	x0, [x20, #32]
  4529e0:	bl	4047b0 <free@plt>
  4529e4:	mov	x0, x20
  4529e8:	bl	4047b0 <free@plt>
  4529ec:	ldr	x1, [x21, #32]
  4529f0:	cmp	x1, x19
  4529f4:	b.gt	4529d0 <_obstack_memory_used@@Base+0x15c0>
  4529f8:	ldr	x0, [x21, #40]
  4529fc:	bl	4047b0 <free@plt>
  452a00:	ldr	x0, [x21, #16]
  452a04:	cbz	x0, 452a4c <_obstack_memory_used@@Base+0x163c>
  452a08:	ldr	x0, [x0, #16]
  452a0c:	add	x22, x22, #0x1
  452a10:	bl	4047b0 <free@plt>
  452a14:	ldr	x0, [x21, #16]
  452a18:	bl	4047b0 <free@plt>
  452a1c:	mov	x0, x21
  452a20:	bl	4047b0 <free@plt>
  452a24:	ldr	x0, [x23, #232]
  452a28:	cmp	x0, x22
  452a2c:	b.gt	4529b8 <_obstack_memory_used@@Base+0x15a8>
  452a30:	ldp	x19, x20, [sp, #16]
  452a34:	ldp	x21, x22, [sp, #32]
  452a38:	str	xzr, [x23, #200]
  452a3c:	str	xzr, [x23, #232]
  452a40:	ldr	x23, [sp, #48]
  452a44:	ldp	x29, x30, [sp], #64
  452a48:	ret
  452a4c:	mov	x0, x21
  452a50:	bl	4047b0 <free@plt>
  452a54:	ldr	x0, [x23, #232]
  452a58:	add	x22, x22, #0x1
  452a5c:	cmp	x0, x22
  452a60:	b.gt	4529b8 <_obstack_memory_used@@Base+0x15a8>
  452a64:	b	452a30 <_obstack_memory_used@@Base+0x1620>
  452a68:	cbz	x1, 452bfc <_obstack_memory_used@@Base+0x17ec>
  452a6c:	stp	x29, x30, [sp, #-48]!
  452a70:	mov	x29, sp
  452a74:	stp	x19, x20, [sp, #16]
  452a78:	ldr	x19, [x1, #8]
  452a7c:	stp	x21, x22, [sp, #32]
  452a80:	mov	x21, x1
  452a84:	cbz	x19, 452b6c <_obstack_memory_used@@Base+0x175c>
  452a88:	ldp	x2, x1, [x0]
  452a8c:	mov	x20, x0
  452a90:	add	x0, x1, x19, lsl #1
  452a94:	cmp	x2, x0
  452a98:	b.lt	452bb4 <_obstack_memory_used@@Base+0x17a4>  // b.tstop
  452a9c:	cbz	x1, 452be0 <_obstack_memory_used@@Base+0x17d0>
  452aa0:	subs	x2, x19, #0x1
  452aa4:	sub	x3, x1, #0x1
  452aa8:	add	x19, x1, x19, lsl #1
  452aac:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
  452ab0:	b.lt	452b00 <_obstack_memory_used@@Base+0x16f0>  // b.tstop
  452ab4:	ldr	x0, [x20, #16]
  452ab8:	ldr	x1, [x21, #16]
  452abc:	b	452adc <_obstack_memory_used@@Base+0x16cc>
  452ac0:	b.ge	452b80 <_obstack_memory_used@@Base+0x1770>  // b.tcont
  452ac4:	sub	x19, x19, #0x1
  452ac8:	sub	x2, x2, #0x1
  452acc:	str	x4, [x0, x19, lsl #3]
  452ad0:	cmp	x2, #0x0
  452ad4:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  452ad8:	b.lt	452b00 <_obstack_memory_used@@Base+0x16f0>  // b.tstop
  452adc:	ldr	x5, [x0, x3, lsl #3]
  452ae0:	ldr	x4, [x1, x2, lsl #3]
  452ae4:	cmp	x5, x4
  452ae8:	b.ne	452ac0 <_obstack_memory_used@@Base+0x16b0>  // b.any
  452aec:	sub	x2, x2, #0x1
  452af0:	sub	x3, x3, #0x1
  452af4:	cmp	x2, #0x0
  452af8:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
  452afc:	b.ge	452adc <_obstack_memory_used@@Base+0x16cc>  // b.tcont
  452b00:	tbnz	x2, #63, 452b20 <_obstack_memory_used@@Base+0x1710>
  452b04:	ldr	x0, [x20, #16]
  452b08:	add	x2, x2, #0x1
  452b0c:	ldr	x1, [x21, #16]
  452b10:	sub	x19, x19, x2
  452b14:	lsl	x2, x2, #3
  452b18:	add	x0, x0, x19, lsl #3
  452b1c:	bl	403f70 <memcpy@plt>
  452b20:	ldr	x3, [x20, #8]
  452b24:	ldr	x2, [x21, #8]
  452b28:	add	x2, x3, x2, lsl #1
  452b2c:	sub	x5, x2, #0x1
  452b30:	subs	x2, x2, x19
  452b34:	b.eq	452b6c <_obstack_memory_used@@Base+0x175c>  // b.none
  452b38:	ldr	x0, [x20, #16]
  452b3c:	sub	x1, x3, #0x1
  452b40:	add	x3, x3, x2
  452b44:	str	x3, [x20, #8]
  452b48:	ldr	x4, [x0, x5, lsl #3]
  452b4c:	add	x6, x1, x2
  452b50:	ldr	x3, [x0, x1, lsl #3]
  452b54:	cmp	x4, x3
  452b58:	b.le	452b88 <_obstack_memory_used@@Base+0x1778>
  452b5c:	str	x4, [x0, x6, lsl #3]
  452b60:	sub	x5, x5, #0x1
  452b64:	subs	x2, x2, #0x1
  452b68:	b.ne	452b48 <_obstack_memory_used@@Base+0x1738>  // b.any
  452b6c:	mov	w0, #0x0                   	// #0
  452b70:	ldp	x19, x20, [sp, #16]
  452b74:	ldp	x21, x22, [sp, #32]
  452b78:	ldp	x29, x30, [sp], #48
  452b7c:	ret
  452b80:	sub	x3, x3, #0x1
  452b84:	b	452ad0 <_obstack_memory_used@@Base+0x16c0>
  452b88:	str	x3, [x0, x6, lsl #3]
  452b8c:	subs	x1, x1, #0x1
  452b90:	b.pl	452b48 <_obstack_memory_used@@Base+0x1738>  // b.nfrst
  452b94:	add	x1, x0, x19, lsl #3
  452b98:	lsl	x2, x2, #3
  452b9c:	bl	403f70 <memcpy@plt>
  452ba0:	mov	w0, #0x0                   	// #0
  452ba4:	ldp	x19, x20, [sp, #16]
  452ba8:	ldp	x21, x22, [sp, #32]
  452bac:	ldp	x29, x30, [sp], #48
  452bb0:	ret
  452bb4:	ldr	x0, [x20, #16]
  452bb8:	add	x19, x19, x2
  452bbc:	lsl	x22, x19, #1
  452bc0:	lsl	x1, x19, #4
  452bc4:	bl	404530 <realloc@plt>
  452bc8:	cbz	x0, 452c04 <_obstack_memory_used@@Base+0x17f4>
  452bcc:	ldr	x1, [x20, #8]
  452bd0:	ldr	x19, [x21, #8]
  452bd4:	str	x22, [x20]
  452bd8:	str	x0, [x20, #16]
  452bdc:	cbnz	x1, 452aa0 <_obstack_memory_used@@Base+0x1690>
  452be0:	ldr	x1, [x21, #16]
  452be4:	str	x19, [x20, #8]
  452be8:	ldr	x0, [x20, #16]
  452bec:	ldr	x2, [x21, #8]
  452bf0:	lsl	x2, x2, #3
  452bf4:	bl	403f70 <memcpy@plt>
  452bf8:	b	452b6c <_obstack_memory_used@@Base+0x175c>
  452bfc:	mov	w0, #0x0                   	// #0
  452c00:	ret
  452c04:	mov	w0, #0xc                   	// #12
  452c08:	b	452b70 <_obstack_memory_used@@Base+0x1760>
  452c0c:	nop
  452c10:	ldr	x4, [x1, #8]
  452c14:	cbz	x4, 452d88 <_obstack_memory_used@@Base+0x1978>
  452c18:	stp	x29, x30, [sp, #-48]!
  452c1c:	mov	x29, sp
  452c20:	ldr	x8, [x2, #8]
  452c24:	stp	x19, x20, [sp, #16]
  452c28:	mov	x19, x0
  452c2c:	stp	x21, x22, [sp, #32]
  452c30:	mov	w0, #0x0                   	// #0
  452c34:	mov	x21, x2
  452c38:	cbz	x8, 452d2c <_obstack_memory_used@@Base+0x191c>
  452c3c:	ldp	x22, x3, [x19]
  452c40:	mov	x20, x1
  452c44:	add	x1, x4, x8
  452c48:	ldr	x0, [x19, #16]
  452c4c:	add	x2, x1, x3
  452c50:	cmp	x2, x22
  452c54:	b.gt	452d90 <_obstack_memory_used@@Base+0x1980>
  452c58:	ldr	x10, [x20, #16]
  452c5c:	sub	x6, x4, #0x1
  452c60:	ldr	x9, [x21, #16]
  452c64:	sub	x7, x8, #0x1
  452c68:	add	x4, x3, x4
  452c6c:	sub	x3, x3, #0x1
  452c70:	add	x8, x4, x8
  452c74:	ldr	x5, [x9, x7, lsl #3]
  452c78:	ldr	x4, [x10, x6, lsl #3]
  452c7c:	nop
  452c80:	cmp	x4, x5
  452c84:	b.eq	452ca0 <_obstack_memory_used@@Base+0x1890>  // b.none
  452c88:	b.ge	452d78 <_obstack_memory_used@@Base+0x1968>  // b.tcont
  452c8c:	subs	x7, x7, #0x1
  452c90:	b.mi	452ce8 <_obstack_memory_used@@Base+0x18d8>  // b.first
  452c94:	ldr	x5, [x9, x7, lsl #3]
  452c98:	cmp	x4, x5
  452c9c:	b.ne	452c88 <_obstack_memory_used@@Base+0x1878>  // b.any
  452ca0:	tbz	x3, #63, 452cb4 <_obstack_memory_used@@Base+0x18a4>
  452ca4:	b	452cc4 <_obstack_memory_used@@Base+0x18b4>
  452ca8:	sub	x3, x3, #0x1
  452cac:	cmn	x3, #0x1
  452cb0:	b.eq	452cc4 <_obstack_memory_used@@Base+0x18b4>  // b.none
  452cb4:	ldr	x5, [x0, x3, lsl #3]
  452cb8:	cmp	x5, x4
  452cbc:	b.gt	452ca8 <_obstack_memory_used@@Base+0x1898>
  452cc0:	b.eq	452ccc <_obstack_memory_used@@Base+0x18bc>  // b.none
  452cc4:	sub	x8, x8, #0x1
  452cc8:	str	x4, [x0, x8, lsl #3]
  452ccc:	subs	x6, x6, #0x1
  452cd0:	b.mi	452ce8 <_obstack_memory_used@@Base+0x18d8>  // b.first
  452cd4:	subs	x7, x7, #0x1
  452cd8:	b.mi	452ce8 <_obstack_memory_used@@Base+0x18d8>  // b.first
  452cdc:	ldr	x4, [x10, x6, lsl #3]
  452ce0:	ldr	x5, [x9, x7, lsl #3]
  452ce4:	b	452c98 <_obstack_memory_used@@Base+0x1888>
  452ce8:	ldr	x1, [x19, #8]
  452cec:	ldr	x4, [x20, #8]
  452cf0:	sub	x2, x1, #0x1
  452cf4:	ldr	x3, [x21, #8]
  452cf8:	add	x4, x1, x4
  452cfc:	add	x4, x4, x3
  452d00:	sub	x3, x4, x8
  452d04:	sub	x4, x4, #0x1
  452d08:	add	x1, x1, x3
  452d0c:	str	x1, [x19, #8]
  452d10:	cmp	x3, #0x0
  452d14:	ccmp	x2, #0x0, #0x1, gt
  452d18:	b.ge	452d4c <_obstack_memory_used@@Base+0x193c>  // b.tcont
  452d1c:	lsl	x2, x3, #3
  452d20:	add	x1, x0, x8, lsl #3
  452d24:	bl	403f70 <memcpy@plt>
  452d28:	mov	w0, #0x0                   	// #0
  452d2c:	ldp	x19, x20, [sp, #16]
  452d30:	ldp	x21, x22, [sp, #32]
  452d34:	ldp	x29, x30, [sp], #48
  452d38:	ret
  452d3c:	str	x1, [x0, x6, lsl #3]
  452d40:	sub	x2, x2, #0x1
  452d44:	cmn	x2, #0x1
  452d48:	b.eq	452d1c <_obstack_memory_used@@Base+0x190c>  // b.none
  452d4c:	ldr	x5, [x0, x4, lsl #3]
  452d50:	add	x6, x2, x3
  452d54:	ldr	x1, [x0, x2, lsl #3]
  452d58:	cmp	x5, x1
  452d5c:	b.le	452d3c <_obstack_memory_used@@Base+0x192c>
  452d60:	str	x5, [x0, x6, lsl #3]
  452d64:	sub	x4, x4, #0x1
  452d68:	subs	x3, x3, #0x1
  452d6c:	b.ne	452d4c <_obstack_memory_used@@Base+0x193c>  // b.any
  452d70:	mov	x2, #0x0                   	// #0
  452d74:	b	452d20 <_obstack_memory_used@@Base+0x1910>
  452d78:	subs	x6, x6, #0x1
  452d7c:	b.mi	452ce8 <_obstack_memory_used@@Base+0x18d8>  // b.first
  452d80:	ldr	x4, [x10, x6, lsl #3]
  452d84:	b	452c80 <_obstack_memory_used@@Base+0x1870>
  452d88:	mov	w0, #0x0                   	// #0
  452d8c:	ret
  452d90:	add	x22, x1, x22
  452d94:	lsl	x1, x22, #3
  452d98:	bl	404530 <realloc@plt>
  452d9c:	cbz	x0, 452db8 <_obstack_memory_used@@Base+0x19a8>
  452da0:	ldr	x4, [x20, #8]
  452da4:	ldr	x8, [x21, #8]
  452da8:	str	x22, [x19]
  452dac:	str	x0, [x19, #16]
  452db0:	ldr	x3, [x19, #8]
  452db4:	b	452c58 <_obstack_memory_used@@Base+0x1848>
  452db8:	mov	w0, #0xc                   	// #12
  452dbc:	b	452d2c <_obstack_memory_used@@Base+0x191c>
  452dc0:	stp	x29, x30, [sp, #-96]!
  452dc4:	mov	x29, sp
  452dc8:	stp	x21, x22, [sp, #32]
  452dcc:	mov	x22, x2
  452dd0:	ldr	x2, [x1]
  452dd4:	ldr	x21, [x0, #152]
  452dd8:	cmp	x2, #0x0
  452ddc:	b.le	452e94 <_obstack_memory_used@@Base+0x1a84>
  452de0:	stp	x19, x20, [sp, #16]
  452de4:	mov	x19, #0x0                   	// #0
  452de8:	stp	x23, x24, [sp, #48]
  452dec:	mov	x24, x0
  452df0:	mov	x23, x3
  452df4:	stp	x25, x26, [sp, #64]
  452df8:	mov	x25, x1
  452dfc:	b	452e08 <_obstack_memory_used@@Base+0x19f8>
  452e00:	cmp	x19, x2
  452e04:	b.ge	452e88 <_obstack_memory_used@@Base+0x1a78>  // b.tcont
  452e08:	ldr	x4, [x22]
  452e0c:	ldr	x5, [x21]
  452e10:	ldr	x20, [x4, x19, lsl #3]
  452e14:	add	x19, x19, #0x1
  452e18:	lsl	x4, x20, #4
  452e1c:	add	x6, x5, x4
  452e20:	ldrb	w6, [x6, #8]
  452e24:	cmp	w6, #0x8
  452e28:	b.ne	452e00 <_obstack_memory_used@@Base+0x19f0>  // b.any
  452e2c:	ldr	x3, [x5, x4]
  452e30:	cmp	x3, #0x3f
  452e34:	b.gt	452e00 <_obstack_memory_used@@Base+0x19f0>
  452e38:	ldr	x4, [x21, #160]
  452e3c:	lsr	x3, x4, x3
  452e40:	tbz	w3, #0, 452e00 <_obstack_memory_used@@Base+0x19f0>
  452e44:	ldp	x26, x0, [x24, #232]
  452e48:	str	x27, [sp, #80]
  452e4c:	ldr	x27, [x24, #248]
  452e50:	cmp	x26, x0
  452e54:	b.eq	452ebc <_obstack_memory_used@@Base+0x1aac>  // b.none
  452e58:	mov	x1, #0x30                  	// #48
  452e5c:	mov	x0, #0x1                   	// #1
  452e60:	bl	4044c0 <calloc@plt>
  452e64:	str	x0, [x27, x26, lsl #3]
  452e68:	add	x1, x26, #0x1
  452e6c:	cbz	x0, 452ea4 <_obstack_memory_used@@Base+0x1a94>
  452e70:	ldr	x27, [sp, #80]
  452e74:	str	x1, [x24, #232]
  452e78:	stp	x23, x20, [x0]
  452e7c:	ldr	x2, [x25]
  452e80:	cmp	x19, x2
  452e84:	b.lt	452e08 <_obstack_memory_used@@Base+0x19f8>  // b.tstop
  452e88:	ldp	x19, x20, [sp, #16]
  452e8c:	ldp	x23, x24, [sp, #48]
  452e90:	ldp	x25, x26, [sp, #64]
  452e94:	mov	w0, #0x0                   	// #0
  452e98:	ldp	x21, x22, [sp, #32]
  452e9c:	ldp	x29, x30, [sp], #96
  452ea0:	ret
  452ea4:	mov	w0, #0xc                   	// #12
  452ea8:	ldp	x19, x20, [sp, #16]
  452eac:	ldp	x23, x24, [sp, #48]
  452eb0:	ldp	x25, x26, [sp, #64]
  452eb4:	ldr	x27, [sp, #80]
  452eb8:	b	452e98 <_obstack_memory_used@@Base+0x1a88>
  452ebc:	mov	x0, x27
  452ec0:	lsl	x1, x26, #4
  452ec4:	bl	404530 <realloc@plt>
  452ec8:	mov	x27, x0
  452ecc:	lsl	x0, x26, #1
  452ed0:	cbz	x27, 452ea4 <_obstack_memory_used@@Base+0x1a94>
  452ed4:	stp	x0, x27, [x24, #240]
  452ed8:	ldr	x26, [x24, #232]
  452edc:	b	452e58 <_obstack_memory_used@@Base+0x1a48>
  452ee0:	stp	x29, x30, [sp, #-32]!
  452ee4:	mov	x29, sp
  452ee8:	stp	x19, x20, [sp, #16]
  452eec:	mov	x20, x0
  452ef0:	tbnz	x1, #63, 452f84 <_obstack_memory_used@@Base+0x1b74>
  452ef4:	ldr	x0, [x0, #88]
  452ef8:	cmp	x0, x1
  452efc:	b.eq	452fb0 <_obstack_memory_used@@Base+0x1ba0>  // b.none
  452f00:	ldr	w0, [x20, #144]
  452f04:	cmp	w0, #0x1
  452f08:	b.le	452f4c <_obstack_memory_used@@Base+0x1b3c>
  452f0c:	ldr	x0, [x20, #16]
  452f10:	b	452f1c <_obstack_memory_used@@Base+0x1b0c>
  452f14:	cmn	x1, #0x1
  452f18:	b.eq	452f84 <_obstack_memory_used@@Base+0x1b74>  // b.none
  452f1c:	ldr	w19, [x0, x1, lsl #2]
  452f20:	sub	x1, x1, #0x1
  452f24:	cmn	w19, #0x1
  452f28:	b.eq	452f14 <_obstack_memory_used@@Base+0x1b04>  // b.none
  452f2c:	ldrb	w0, [x20, #142]
  452f30:	cbnz	w0, 452fc4 <_obstack_memory_used@@Base+0x1bb4>
  452f34:	cmp	w19, #0xa
  452f38:	mov	w0, #0x0                   	// #0
  452f3c:	b.eq	452f94 <_obstack_memory_used@@Base+0x1b84>  // b.none
  452f40:	ldp	x19, x20, [sp, #16]
  452f44:	ldp	x29, x30, [sp], #32
  452f48:	ret
  452f4c:	ldr	x2, [x20, #8]
  452f50:	mov	w0, #0x1                   	// #1
  452f54:	ldr	x3, [x20, #128]
  452f58:	ldrb	w2, [x2, x1]
  452f5c:	ubfx	x1, x2, #6, #2
  452f60:	ldr	x1, [x3, x1, lsl #3]
  452f64:	lsr	x1, x1, x2
  452f68:	tbnz	w1, #0, 452f40 <_obstack_memory_used@@Base+0x1b30>
  452f6c:	cmp	w2, #0xa
  452f70:	b.eq	452f94 <_obstack_memory_used@@Base+0x1b84>  // b.none
  452f74:	mov	w0, #0x0                   	// #0
  452f78:	ldp	x19, x20, [sp, #16]
  452f7c:	ldp	x29, x30, [sp], #32
  452f80:	ret
  452f84:	ldr	w0, [x20, #112]
  452f88:	ldp	x19, x20, [sp, #16]
  452f8c:	ldp	x29, x30, [sp], #32
  452f90:	ret
  452f94:	ldrb	w0, [x20, #141]
  452f98:	ldp	x19, x20, [sp, #16]
  452f9c:	cmp	w0, #0x0
  452fa0:	cset	w0, ne  // ne = any
  452fa4:	ldp	x29, x30, [sp], #32
  452fa8:	lsl	w0, w0, #1
  452fac:	ret
  452fb0:	tst	x2, #0x2
  452fb4:	mov	w0, #0x8                   	// #8
  452fb8:	mov	w1, #0xa                   	// #10
  452fbc:	csel	w0, w0, w1, ne  // ne = any
  452fc0:	b	452f40 <_obstack_memory_used@@Base+0x1b30>
  452fc4:	mov	w0, w19
  452fc8:	bl	404990 <iswalnum@plt>
  452fcc:	cmp	w19, #0x5f
  452fd0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  452fd4:	mov	w0, #0x1                   	// #1
  452fd8:	b.ne	452f40 <_obstack_memory_used@@Base+0x1b30>  // b.any
  452fdc:	b	452f34 <_obstack_memory_used@@Base+0x1b24>
  452fe0:	stp	x29, x30, [sp, #-48]!
  452fe4:	mov	x29, sp
  452fe8:	str	x21, [sp, #32]
  452fec:	mov	x21, x2
  452ff0:	ldr	w2, [x0, #160]
  452ff4:	stp	x19, x20, [sp, #16]
  452ff8:	mov	x19, x1
  452ffc:	mov	x20, x0
  453000:	mov	x1, x3
  453004:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  453008:	cmp	x19, #0x0
  45300c:	b.le	453064 <_obstack_memory_used@@Base+0x1c54>
  453010:	ldr	x1, [x20, #152]
  453014:	and	w5, w0, #0x2
  453018:	and	w2, w0, #0x8
  45301c:	ldr	x3, [x21]
  453020:	ldr	x4, [x1]
  453024:	tbz	w0, #0, 453078 <_obstack_memory_used@@Base+0x1c68>
  453028:	cbz	w5, 45319c <_obstack_memory_used@@Base+0x1d8c>
  45302c:	cbz	w2, 453224 <_obstack_memory_used@@Base+0x1e14>
  453030:	mov	x2, #0x0                   	// #0
  453034:	ldr	x0, [x3, x2, lsl #3]
  453038:	add	x2, x2, #0x1
  45303c:	add	x5, x4, x0, lsl #4
  453040:	ldr	w1, [x5, #8]
  453044:	ldrb	w5, [x5, #8]
  453048:	ubfx	x1, x1, #8, #10
  45304c:	cmp	w5, #0x2
  453050:	b.ne	45305c <_obstack_memory_used@@Base+0x1c4c>  // b.any
  453054:	cbz	w1, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  453058:	tbz	w1, #3, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  45305c:	cmp	x19, x2
  453060:	b.ne	453034 <_obstack_memory_used@@Base+0x1c24>  // b.any
  453064:	mov	x0, #0x0                   	// #0
  453068:	ldp	x19, x20, [sp, #16]
  45306c:	ldr	x21, [sp, #32]
  453070:	ldp	x29, x30, [sp], #48
  453074:	ret
  453078:	mov	x1, #0x0                   	// #0
  45307c:	cbz	w5, 453114 <_obstack_memory_used@@Base+0x1d04>
  453080:	cbz	w2, 4530d0 <_obstack_memory_used@@Base+0x1cc0>
  453084:	nop
  453088:	ldr	x0, [x3, x1, lsl #3]
  45308c:	add	x1, x1, #0x1
  453090:	add	x5, x4, x0, lsl #4
  453094:	ldr	w2, [x5, #8]
  453098:	ldrb	w5, [x5, #8]
  45309c:	ubfx	x2, x2, #8, #10
  4530a0:	cmp	w5, #0x2
  4530a4:	b.ne	4530c0 <_obstack_memory_used@@Base+0x1cb0>  // b.any
  4530a8:	cbz	w2, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  4530ac:	tbnz	w2, #2, 4530c0 <_obstack_memory_used@@Base+0x1cb0>
  4530b0:	ldp	x19, x20, [sp, #16]
  4530b4:	ldr	x21, [sp, #32]
  4530b8:	ldp	x29, x30, [sp], #48
  4530bc:	ret
  4530c0:	cmp	x19, x1
  4530c4:	b.ne	453088 <_obstack_memory_used@@Base+0x1c78>  // b.any
  4530c8:	mov	x0, #0x0                   	// #0
  4530cc:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  4530d0:	mov	w6, #0x84                  	// #132
  4530d4:	nop
  4530d8:	ldr	x0, [x3, x1, lsl #3]
  4530dc:	add	x1, x1, #0x1
  4530e0:	add	x5, x4, x0, lsl #4
  4530e4:	ldr	w2, [x5, #8]
  4530e8:	ldrb	w5, [x5, #8]
  4530ec:	ubfx	x2, x2, #8, #10
  4530f0:	cmp	w5, #0x2
  4530f4:	b.ne	453104 <_obstack_memory_used@@Base+0x1cf4>  // b.any
  4530f8:	cbz	w2, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  4530fc:	tst	w2, w6
  453100:	b.eq	4530b0 <_obstack_memory_used@@Base+0x1ca0>  // b.none
  453104:	cmp	x19, x1
  453108:	b.ne	4530d8 <_obstack_memory_used@@Base+0x1cc8>  // b.any
  45310c:	mov	x0, #0x0                   	// #0
  453110:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  453114:	cbz	w2, 45315c <_obstack_memory_used@@Base+0x1d4c>
  453118:	mov	w6, #0x24                  	// #36
  45311c:	nop
  453120:	ldr	x0, [x3, x1, lsl #3]
  453124:	add	x1, x1, #0x1
  453128:	add	x5, x4, x0, lsl #4
  45312c:	ldr	w2, [x5, #8]
  453130:	ldrb	w5, [x5, #8]
  453134:	ubfx	x2, x2, #8, #10
  453138:	cmp	w5, #0x2
  45313c:	b.ne	45314c <_obstack_memory_used@@Base+0x1d3c>  // b.any
  453140:	cbz	w2, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  453144:	tst	w2, w6
  453148:	b.eq	4530b0 <_obstack_memory_used@@Base+0x1ca0>  // b.none
  45314c:	cmp	x19, x1
  453150:	b.ne	453120 <_obstack_memory_used@@Base+0x1d10>  // b.any
  453154:	mov	x0, #0x0                   	// #0
  453158:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  45315c:	mov	w6, #0xa4                  	// #164
  453160:	ldr	x0, [x3, x1, lsl #3]
  453164:	add	x1, x1, #0x1
  453168:	add	x5, x4, x0, lsl #4
  45316c:	ldr	w2, [x5, #8]
  453170:	ldrb	w5, [x5, #8]
  453174:	ubfx	x2, x2, #8, #10
  453178:	cmp	w5, #0x2
  45317c:	b.ne	45318c <_obstack_memory_used@@Base+0x1d7c>  // b.any
  453180:	cbz	w2, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  453184:	tst	w2, w6
  453188:	b.eq	4530b0 <_obstack_memory_used@@Base+0x1ca0>  // b.none
  45318c:	cmp	x19, x1
  453190:	b.ne	453160 <_obstack_memory_used@@Base+0x1d50>  // b.any
  453194:	mov	x0, #0x0                   	// #0
  453198:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  45319c:	cbz	w2, 4531dc <_obstack_memory_used@@Base+0x1dcc>
  4531a0:	mov	x2, #0x0                   	// #0
  4531a4:	ldr	x0, [x3, x2, lsl #3]
  4531a8:	add	x5, x4, x0, lsl #4
  4531ac:	ldr	w1, [x5, #8]
  4531b0:	ldrb	w5, [x5, #8]
  4531b4:	ubfx	x1, x1, #8, #10
  4531b8:	cmp	w5, #0x2
  4531bc:	b.ne	4531c8 <_obstack_memory_used@@Base+0x1db8>  // b.any
  4531c0:	cbz	w1, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  4531c4:	tbz	w1, #3, 453260 <_obstack_memory_used@@Base+0x1e50>
  4531c8:	add	x2, x2, #0x1
  4531cc:	cmp	x19, x2
  4531d0:	b.ne	4531a4 <_obstack_memory_used@@Base+0x1d94>  // b.any
  4531d4:	mov	x0, #0x0                   	// #0
  4531d8:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  4531dc:	mov	x2, #0x0                   	// #0
  4531e0:	mov	w6, #0xa0                  	// #160
  4531e4:	ldr	x0, [x3, x2, lsl #3]
  4531e8:	add	x5, x4, x0, lsl #4
  4531ec:	ldr	w1, [x5, #8]
  4531f0:	ldrb	w5, [x5, #8]
  4531f4:	ubfx	x1, x1, #8, #10
  4531f8:	cmp	w5, #0x2
  4531fc:	b.ne	453210 <_obstack_memory_used@@Base+0x1e00>  // b.any
  453200:	cbz	w1, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  453204:	tbnz	w1, #3, 453210 <_obstack_memory_used@@Base+0x1e00>
  453208:	tst	w1, w6
  45320c:	b.eq	4530b0 <_obstack_memory_used@@Base+0x1ca0>  // b.none
  453210:	add	x2, x2, #0x1
  453214:	cmp	x19, x2
  453218:	b.ne	4531e4 <_obstack_memory_used@@Base+0x1dd4>  // b.any
  45321c:	mov	x0, #0x0                   	// #0
  453220:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  453224:	mov	x2, #0x0                   	// #0
  453228:	ldr	x0, [x3, x2, lsl #3]
  45322c:	add	x5, x4, x0, lsl #4
  453230:	ldr	w1, [x5, #8]
  453234:	ldrb	w5, [x5, #8]
  453238:	ubfx	x1, x1, #8, #10
  45323c:	cmp	w5, #0x2
  453240:	b.ne	45324c <_obstack_memory_used@@Base+0x1e3c>  // b.any
  453244:	cbz	w1, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  453248:	tbz	w1, #3, 453268 <_obstack_memory_used@@Base+0x1e58>
  45324c:	add	x2, x2, #0x1
  453250:	cmp	x19, x2
  453254:	b.ne	453228 <_obstack_memory_used@@Base+0x1e18>  // b.any
  453258:	mov	x0, #0x0                   	// #0
  45325c:	b	453068 <_obstack_memory_used@@Base+0x1c58>
  453260:	tbz	w1, #5, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  453264:	b	4531c8 <_obstack_memory_used@@Base+0x1db8>
  453268:	tbz	w1, #7, 4530b0 <_obstack_memory_used@@Base+0x1ca0>
  45326c:	b	45324c <_obstack_memory_used@@Base+0x1e3c>
  453270:	stp	x29, x30, [sp, #-128]!
  453274:	mov	x29, sp
  453278:	stp	x19, x20, [sp, #16]
  45327c:	mov	x19, x0
  453280:	ldr	x0, [x0, #40]
  453284:	stp	x21, x22, [sp, #32]
  453288:	mov	x21, x1
  45328c:	stp	x23, x24, [sp, #48]
  453290:	sub	x20, x1, x0
  453294:	mov	w24, w2
  453298:	cmp	x0, x1
  45329c:	b.le	4532f8 <_obstack_memory_used@@Base+0x1ee8>
  4532a0:	ldr	w0, [x19, #144]
  4532a4:	cmp	w0, #0x1
  4532a8:	b.le	4532b0 <_obstack_memory_used@@Base+0x1ea0>
  4532ac:	str	xzr, [x19, #32]
  4532b0:	ldrb	w0, [x19, #139]
  4532b4:	tst	x24, #0x1
  4532b8:	ldr	x3, [x19, #80]
  4532bc:	mov	w1, #0x4                   	// #4
  4532c0:	ldr	x2, [x19, #96]
  4532c4:	mov	w4, #0x6                   	// #6
  4532c8:	csel	w1, w1, w4, ne  // ne = any
  4532cc:	stp	xzr, xzr, [x19, #40]
  4532d0:	str	xzr, [x19, #56]
  4532d4:	str	x3, [x19, #88]
  4532d8:	str	x2, [x19, #104]
  4532dc:	str	w1, [x19, #112]
  4532e0:	strb	wzr, [x19, #140]
  4532e4:	cbnz	w0, 4533ac <_obstack_memory_used@@Base+0x1f9c>
  4532e8:	mov	x20, x21
  4532ec:	mov	x0, #0x0                   	// #0
  4532f0:	ldr	x1, [x19]
  4532f4:	str	x1, [x19, #8]
  4532f8:	cbz	x20, 4533b8 <_obstack_memory_used@@Base+0x1fa8>
  4532fc:	ldp	x23, x22, [x19, #48]
  453300:	ldrb	w1, [x19, #140]
  453304:	cmp	x22, x20
  453308:	b.le	453414 <_obstack_memory_used@@Base+0x2004>
  45330c:	cbnz	w1, 4534f0 <_obstack_memory_used@@Base+0x20e0>
  453310:	mov	w2, w24
  453314:	sub	x1, x20, #0x1
  453318:	mov	x0, x19
  45331c:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  453320:	str	w0, [x19, #112]
  453324:	sub	x2, x23, x20
  453328:	ldr	w0, [x19, #144]
  45332c:	cmp	w0, #0x1
  453330:	b.gt	4533e8 <_obstack_memory_used@@Base+0x1fd8>
  453334:	ldrb	w0, [x19, #139]
  453338:	cbnz	w0, 453534 <_obstack_memory_used@@Base+0x2124>
  45333c:	ldr	x3, [x19, #56]
  453340:	ldr	x1, [x19, #88]
  453344:	sub	x3, x3, x20
  453348:	stp	x2, x3, [x19, #48]
  45334c:	ldr	w3, [x19, #144]
  453350:	ldr	x2, [x19, #104]
  453354:	sub	x1, x1, x20
  453358:	sub	x2, x2, x20
  45335c:	cbnz	w0, 45336c <_obstack_memory_used@@Base+0x1f5c>
  453360:	ldr	x0, [x19, #8]
  453364:	add	x20, x0, x20
  453368:	str	x20, [x19, #8]
  45336c:	str	x21, [x19, #40]
  453370:	cmp	w3, #0x1
  453374:	str	x1, [x19, #88]
  453378:	str	x2, [x19, #104]
  45337c:	b.le	4533d8 <_obstack_memory_used@@Base+0x1fc8>
  453380:	ldrb	w0, [x19, #136]
  453384:	cbnz	w0, 453404 <_obstack_memory_used@@Base+0x1ff4>
  453388:	mov	x0, x19
  45338c:	bl	451cc8 <_obstack_memory_used@@Base+0x8b8>
  453390:	mov	w0, #0x0                   	// #0
  453394:	str	xzr, [x19, #72]
  453398:	ldp	x19, x20, [sp, #16]
  45339c:	ldp	x21, x22, [sp, #32]
  4533a0:	ldp	x23, x24, [sp, #48]
  4533a4:	ldp	x29, x30, [sp], #128
  4533a8:	ret
  4533ac:	mov	x20, x21
  4533b0:	mov	x0, #0x0                   	// #0
  4533b4:	cbnz	x20, 4532fc <_obstack_memory_used@@Base+0x1eec>
  4533b8:	ldr	x1, [x19, #88]
  4533bc:	str	x21, [x19, #40]
  4533c0:	ldr	x2, [x19, #104]
  4533c4:	str	x1, [x19, #88]
  4533c8:	ldr	w3, [x19, #144]
  4533cc:	str	x2, [x19, #104]
  4533d0:	cmp	w3, #0x1
  4533d4:	b.gt	453380 <_obstack_memory_used@@Base+0x1f70>
  4533d8:	ldrb	w0, [x19, #139]
  4533dc:	cbnz	w0, 4536fc <_obstack_memory_used@@Base+0x22ec>
  4533e0:	str	x1, [x19, #48]
  4533e4:	b	453390 <_obstack_memory_used@@Base+0x1f80>
  4533e8:	ldr	x0, [x19, #16]
  4533ec:	lsl	x2, x2, #2
  4533f0:	add	x1, x0, x20, lsl #2
  4533f4:	bl	403f80 <memmove@plt>
  4533f8:	ldr	x2, [x19, #48]
  4533fc:	sub	x2, x2, x20
  453400:	b	453334 <_obstack_memory_used@@Base+0x1f24>
  453404:	mov	x0, x19
  453408:	bl	451ec0 <_obstack_memory_used@@Base+0xab0>
  45340c:	cbz	w0, 453390 <_obstack_memory_used@@Base+0x1f80>
  453410:	b	453398 <_obstack_memory_used@@Base+0x1f88>
  453414:	cbnz	w1, 453964 <_obstack_memory_used@@Base+0x2554>
  453418:	ldr	w3, [x19, #144]
  45341c:	str	xzr, [x19, #48]
  453420:	cmp	w3, #0x1
  453424:	b.le	453780 <_obstack_memory_used@@Base+0x2370>
  453428:	ldrb	w1, [x19, #137]
  45342c:	cbnz	w1, 45364c <_obstack_memory_used@@Base+0x223c>
  453430:	add	x22, x0, x22
  453434:	cmp	x21, x22
  453438:	b.le	453ad0 <_obstack_memory_used@@Base+0x26c0>
  45343c:	stp	x27, x28, [sp, #80]
  453440:	add	x27, x19, #0x20
  453444:	stp	x25, x26, [sp, #64]
  453448:	mov	x3, x27
  45344c:	ldr	x1, [x19]
  453450:	add	x0, sp, #0x78
  453454:	ldr	x25, [x19, #80]
  453458:	add	x1, x1, x22
  45345c:	ldr	x26, [x19, #32]
  453460:	sub	x25, x25, x22
  453464:	mov	x2, x25
  453468:	bl	450f30 <argp_parse@@Base+0x11150>
  45346c:	sub	x1, x0, #0x1
  453470:	cmn	x1, #0x4
  453474:	b.hi	45398c <_obstack_memory_used@@Base+0x257c>  // b.pmore
  453478:	ldr	w28, [sp, #120]
  45347c:	add	x22, x22, x0
  453480:	cmp	x21, x22
  453484:	b.gt	453448 <_obstack_memory_used@@Base+0x2038>
  453488:	sub	x22, x22, x21
  45348c:	str	x22, [x19, #48]
  453490:	cmn	w28, #0x1
  453494:	b.eq	4539b0 <_obstack_memory_used@@Base+0x25a0>  // b.none
  453498:	ldrb	w0, [x19, #142]
  45349c:	cbnz	w0, 453a08 <_obstack_memory_used@@Base+0x25f8>
  4534a0:	cmp	w28, #0xa
  4534a4:	mov	w0, #0x0                   	// #0
  4534a8:	b.ne	4534bc <_obstack_memory_used@@Base+0x20ac>  // b.any
  4534ac:	ldrb	w0, [x19, #141]
  4534b0:	cmp	w0, #0x0
  4534b4:	cset	w0, ne  // ne = any
  4534b8:	lsl	w0, w0, #1
  4534bc:	ldp	x25, x26, [sp, #64]
  4534c0:	ldp	x27, x28, [sp, #80]
  4534c4:	str	w0, [x19, #112]
  4534c8:	cmp	x22, #0x0
  4534cc:	cbnz	x22, 4539d0 <_obstack_memory_used@@Base+0x25c0>
  4534d0:	ldrb	w0, [x19, #139]
  4534d4:	ldr	x1, [x19, #88]
  4534d8:	str	x22, [x19, #56]
  4534dc:	ldr	x2, [x19, #104]
  4534e0:	sub	x1, x1, x20
  4534e4:	ldr	w3, [x19, #144]
  4534e8:	sub	x2, x2, x20
  4534ec:	b	45335c <_obstack_memory_used@@Base+0x1f4c>
  4534f0:	mov	x1, x23
  4534f4:	mov	x2, #0x0                   	// #0
  4534f8:	stp	x25, x26, [sp, #64]
  4534fc:	ldr	x25, [x19, #24]
  453500:	b	453514 <_obstack_memory_used@@Base+0x2104>
  453504:	b.ge	4536f0 <_obstack_memory_used@@Base+0x22e0>  // b.tcont
  453508:	add	x2, x0, #0x1
  45350c:	cmp	x2, x1
  453510:	b.ge	453550 <_obstack_memory_used@@Base+0x2140>  // b.tcont
  453514:	add	x0, x2, x1
  453518:	add	x0, x0, x0, lsr #63
  45351c:	asr	x0, x0, #1
  453520:	ldr	x3, [x25, x0, lsl #3]
  453524:	cmp	x3, x20
  453528:	b.le	453504 <_obstack_memory_used@@Base+0x20f4>
  45352c:	mov	x1, x0
  453530:	b	45350c <_obstack_memory_used@@Base+0x20fc>
  453534:	ldr	x0, [x19, #8]
  453538:	add	x1, x0, x20
  45353c:	bl	403f80 <memmove@plt>
  453540:	ldr	x2, [x19, #48]
  453544:	ldrb	w0, [x19, #139]
  453548:	sub	x2, x2, x20
  45354c:	b	45333c <_obstack_memory_used@@Base+0x1f2c>
  453550:	cmp	x3, x20
  453554:	add	x22, x0, #0x1
  453558:	b.ge	4536f0 <_obstack_memory_used@@Base+0x22e0>  // b.tcont
  45355c:	mov	x1, x0
  453560:	mov	w2, w24
  453564:	mov	x0, x19
  453568:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45356c:	str	w0, [x19, #112]
  453570:	cmp	x20, x22
  453574:	ccmp	x20, x23, #0x0, eq  // eq = none
  453578:	b.lt	453830 <_obstack_memory_used@@Base+0x2420>  // b.tstop
  45357c:	ldr	x1, [x19, #80]
  453580:	strb	wzr, [x19, #140]
  453584:	ldr	x2, [x19, #96]
  453588:	sub	x1, x1, x21
  45358c:	add	x0, x1, x20
  453590:	str	x0, [x19, #88]
  453594:	sub	x2, x2, x21
  453598:	cmp	x22, #0x0
  45359c:	add	x0, x2, x20
  4535a0:	str	x0, [x19, #104]
  4535a4:	sub	x3, x25, #0x8
  4535a8:	b.gt	4535b8 <_obstack_memory_used@@Base+0x21a8>
  4535ac:	b	4535c4 <_obstack_memory_used@@Base+0x21b4>
  4535b0:	subs	x22, x22, #0x1
  4535b4:	b.eq	4535c4 <_obstack_memory_used@@Base+0x21b4>  // b.none
  4535b8:	ldr	x0, [x3, x22, lsl #3]
  4535bc:	cmp	x0, x20
  4535c0:	b.eq	4535b0 <_obstack_memory_used@@Base+0x21a0>  // b.none
  4535c4:	cmp	x22, x23
  4535c8:	b.ge	453804 <_obstack_memory_used@@Base+0x23f4>  // b.tcont
  4535cc:	ldr	x3, [x19, #16]
  4535d0:	b	4535e0 <_obstack_memory_used@@Base+0x21d0>
  4535d4:	add	x22, x22, #0x1
  4535d8:	cmp	x22, x23
  4535dc:	b.eq	453808 <_obstack_memory_used@@Base+0x23f8>  // b.none
  4535e0:	ldr	w0, [x3, x22, lsl #2]
  4535e4:	cmn	w0, #0x1
  4535e8:	b.eq	4535d4 <_obstack_memory_used@@Base+0x21c4>  // b.none
  4535ec:	ldr	x22, [x25, x22, lsl #3]
  4535f0:	sub	x22, x22, x20
  4535f4:	str	x22, [x19, #48]
  4535f8:	cmp	x22, #0x0
  4535fc:	cbz	x22, 453638 <_obstack_memory_used@@Base+0x2228>
  453600:	b.le	453614 <_obstack_memory_used@@Base+0x2204>
  453604:	ldr	x0, [x19, #16]
  453608:	lsl	x2, x22, #2
  45360c:	mov	w1, #0xff                  	// #255
  453610:	bl	404410 <memset@plt>
  453614:	ldr	x0, [x19, #8]
  453618:	mov	x2, x22
  45361c:	mov	w1, #0xff                  	// #255
  453620:	bl	404410 <memset@plt>
  453624:	ldr	x1, [x19, #88]
  453628:	ldr	x2, [x19, #104]
  45362c:	sub	x1, x1, x20
  453630:	ldr	x22, [x19, #48]
  453634:	sub	x2, x2, x20
  453638:	ldrb	w0, [x19, #139]
  45363c:	ldr	w3, [x19, #144]
  453640:	ldp	x25, x26, [sp, #64]
  453644:	str	x22, [x19, #56]
  453648:	b	45335c <_obstack_memory_used@@Base+0x1f4c>
  45364c:	ldr	x2, [x19]
  453650:	sub	x1, x20, w3, sxtw
  453654:	stp	x25, x26, [sp, #64]
  453658:	sub	x25, x20, #0x1
  45365c:	add	x26, x2, x0
  453660:	add	x1, x26, x1
  453664:	add	x25, x26, x25
  453668:	cmp	x2, x1
  45366c:	csel	x2, x2, x1, cs  // cs = hs, nlast
  453670:	cmp	x25, x2
  453674:	b.cs	453688 <_obstack_memory_used@@Base+0x2278>  // b.hs, b.nlast
  453678:	b	4538cc <_obstack_memory_used@@Base+0x24bc>
  45367c:	sub	x25, x25, #0x1
  453680:	cmp	x25, x2
  453684:	b.cc	4538cc <_obstack_memory_used@@Base+0x24bc>  // b.lo, b.ul, b.last
  453688:	ldrb	w1, [x25]
  45368c:	and	w1, w1, #0xc0
  453690:	cmp	w1, #0x80
  453694:	b.eq	45367c <_obstack_memory_used@@Base+0x226c>  // b.none
  453698:	ldr	x2, [x19, #88]
  45369c:	mov	x1, x25
  4536a0:	ldr	x0, [x19, #120]
  4536a4:	add	x2, x26, x2
  4536a8:	sub	x2, x2, x25
  4536ac:	cbnz	x0, 453a2c <_obstack_memory_used@@Base+0x261c>
  4536b0:	add	x22, x26, x20
  4536b4:	add	x3, sp, #0x78
  4536b8:	sub	x22, x22, x25
  4536bc:	add	x0, sp, #0x6c
  4536c0:	str	xzr, [sp, #120]
  4536c4:	bl	450f30 <argp_parse@@Base+0x11150>
  4536c8:	cmp	x0, x22
  4536cc:	b.cc	453adc <_obstack_memory_used@@Base+0x26cc>  // b.lo, b.ul, b.last
  4536d0:	stp	x27, x28, [sp, #80]
  4536d4:	cmn	x0, #0x3
  4536d8:	b.ls	453814 <_obstack_memory_used@@Base+0x2404>  // b.plast
  4536dc:	ldr	x0, [x19, #40]
  4536e0:	ldr	x22, [x19, #56]
  4536e4:	ldp	x25, x26, [sp, #64]
  4536e8:	ldp	x27, x28, [sp, #80]
  4536ec:	b	453430 <_obstack_memory_used@@Base+0x2020>
  4536f0:	mov	x22, x0
  4536f4:	sub	x0, x0, #0x1
  4536f8:	b	45355c <_obstack_memory_used@@Base+0x214c>
  4536fc:	ldrb	w0, [x19, #136]
  453700:	cbnz	w0, 4538d4 <_obstack_memory_used@@Base+0x24c4>
  453704:	ldr	x4, [x19, #120]
  453708:	cbz	x4, 453390 <_obstack_memory_used@@Base+0x1f80>
  45370c:	ldr	x2, [x19, #64]
  453710:	ldr	x3, [x19, #48]
  453714:	cmp	x2, x1
  453718:	csel	x2, x2, x1, le
  45371c:	cmp	x2, x3
  453720:	b.le	453a24 <_obstack_memory_used@@Base+0x2614>
  453724:	ldp	x1, x5, [x19]
  453728:	add	x0, x3, #0x1
  45372c:	cmp	x2, x0
  453730:	add	x1, x1, x3
  453734:	ldrb	w1, [x1, x21]
  453738:	ldrb	w1, [x4, x1]
  45373c:	strb	w1, [x5, x3]
  453740:	b.le	453774 <_obstack_memory_used@@Base+0x2364>
  453744:	nop
  453748:	ldr	x1, [x19]
  45374c:	ldr	x3, [x19, #40]
  453750:	add	x1, x1, x0
  453754:	ldr	x4, [x19, #120]
  453758:	ldrb	w3, [x1, x3]
  45375c:	ldr	x1, [x19, #8]
  453760:	ldrb	w3, [x4, x3]
  453764:	strb	w3, [x1, x0]
  453768:	add	x0, x0, #0x1
  45376c:	cmp	x2, x0
  453770:	b.ne	453748 <_obstack_memory_used@@Base+0x2338>  // b.any
  453774:	dup	v0.2d, x2
  453778:	str	q0, [x19, #48]
  45377c:	b	453390 <_obstack_memory_used@@Base+0x1f80>
  453780:	ldr	x1, [x19]
  453784:	ldr	x2, [x19, #120]
  453788:	add	x0, x1, x0
  45378c:	add	x0, x0, x20
  453790:	ldurb	w0, [x0, #-1]
  453794:	str	xzr, [x19, #56]
  453798:	cbz	x2, 4537a4 <_obstack_memory_used@@Base+0x2394>
  45379c:	and	x0, x0, #0xff
  4537a0:	ldrb	w0, [x2, x0]
  4537a4:	ldr	x4, [x19, #128]
  4537a8:	ubfx	x1, x0, #6, #2
  4537ac:	mov	w2, #0x1                   	// #1
  4537b0:	ldr	x1, [x4, x1, lsl #3]
  4537b4:	lsr	x1, x1, x0
  4537b8:	tbnz	w1, #0, 4537d8 <_obstack_memory_used@@Base+0x23c8>
  4537bc:	cmp	w0, #0xa
  4537c0:	mov	w2, #0x0                   	// #0
  4537c4:	b.ne	4537d8 <_obstack_memory_used@@Base+0x23c8>  // b.any
  4537c8:	ldrb	w0, [x19, #141]
  4537cc:	cmp	w0, #0x0
  4537d0:	cset	w2, ne  // ne = any
  4537d4:	lsl	w2, w2, #1
  4537d8:	ldrb	w0, [x19, #139]
  4537dc:	str	w2, [x19, #112]
  4537e0:	ldr	x1, [x19, #88]
  4537e4:	ldr	x2, [x19, #104]
  4537e8:	sub	x1, x1, x20
  4537ec:	sub	x2, x2, x20
  4537f0:	cbz	w0, 453360 <_obstack_memory_used@@Base+0x1f50>
  4537f4:	str	x21, [x19, #40]
  4537f8:	str	x1, [x19, #88]
  4537fc:	str	x2, [x19, #104]
  453800:	b	4533dc <_obstack_memory_used@@Base+0x1fcc>
  453804:	b.ne	4535ec <_obstack_memory_used@@Base+0x21dc>  // b.any
  453808:	mov	x22, #0x0                   	// #0
  45380c:	str	xzr, [x19, #48]
  453810:	b	453638 <_obstack_memory_used@@Base+0x2228>
  453814:	ldr	w28, [sp, #108]
  453818:	sub	x22, x0, x22
  45381c:	str	xzr, [x19, #32]
  453820:	str	x22, [x19, #48]
  453824:	cmn	w28, #0x1
  453828:	b.ne	453498 <_obstack_memory_used@@Base+0x2088>  // b.any
  45382c:	b	4536dc <_obstack_memory_used@@Base+0x22cc>
  453830:	ldr	x0, [x25, x22, lsl #3]
  453834:	cmp	x0, x20
  453838:	b.ne	45357c <_obstack_memory_used@@Base+0x216c>  // b.any
  45383c:	ldr	x0, [x19, #16]
  453840:	sub	x2, x23, x20
  453844:	lsl	x2, x2, #2
  453848:	add	x1, x0, x20, lsl #2
  45384c:	bl	403f80 <memmove@plt>
  453850:	ldr	x0, [x19, #8]
  453854:	ldr	x2, [x19, #48]
  453858:	add	x1, x0, x20
  45385c:	sub	x2, x2, x20
  453860:	bl	403f80 <memmove@plt>
  453864:	dup	v1.2d, x20
  453868:	ldr	q0, [x19, #48]
  45386c:	ldr	x0, [x19, #48]
  453870:	sub	v0.2d, v0.2d, v1.2d
  453874:	sub	x0, x0, x20
  453878:	cmp	x0, #0x0
  45387c:	str	q0, [x19, #48]
  453880:	b.le	4538ac <_obstack_memory_used@@Base+0x249c>
  453884:	ldr	x2, [x19, #24]
  453888:	mov	x0, #0x0                   	// #0
  45388c:	add	x3, x2, x20, lsl #3
  453890:	ldr	x1, [x3, x0, lsl #3]
  453894:	sub	x1, x1, x20
  453898:	str	x1, [x2, x0, lsl #3]
  45389c:	add	x0, x0, #0x1
  4538a0:	ldr	x1, [x19, #48]
  4538a4:	cmp	x1, x0
  4538a8:	b.gt	453890 <_obstack_memory_used@@Base+0x2480>
  4538ac:	ldr	x1, [x19, #88]
  4538b0:	ldr	x2, [x19, #104]
  4538b4:	sub	x1, x1, x20
  4538b8:	ldrb	w0, [x19, #139]
  4538bc:	ldr	w3, [x19, #144]
  4538c0:	sub	x2, x2, x20
  4538c4:	ldp	x25, x26, [sp, #64]
  4538c8:	b	45335c <_obstack_memory_used@@Base+0x1f4c>
  4538cc:	ldp	x25, x26, [sp, #64]
  4538d0:	b	453430 <_obstack_memory_used@@Base+0x2020>
  4538d4:	ldr	x22, [x19, #64]
  4538d8:	ldr	x20, [x19, #48]
  4538dc:	cmp	x22, x1
  4538e0:	csel	x22, x22, x1, le
  4538e4:	cmp	x22, x20
  4538e8:	b.le	45392c <_obstack_memory_used@@Base+0x251c>
  4538ec:	bl	404540 <__ctype_toupper_loc@plt>
  4538f0:	ldr	x1, [x19]
  4538f4:	ldr	x2, [x19, #120]
  4538f8:	add	x1, x1, x20
  4538fc:	ldrb	w3, [x1, x21]
  453900:	and	x1, x3, #0xff
  453904:	cbnz	x2, 45393c <_obstack_memory_used@@Base+0x252c>
  453908:	ldr	x2, [x0]
  45390c:	ldr	x1, [x19, #8]
  453910:	ldr	w2, [x2, x3, lsl #2]
  453914:	strb	w2, [x1, x20]
  453918:	add	x20, x20, #0x1
  45391c:	cmp	x22, x20
  453920:	b.eq	453930 <_obstack_memory_used@@Base+0x2520>  // b.none
  453924:	ldr	x21, [x19, #40]
  453928:	b	4538f0 <_obstack_memory_used@@Base+0x24e0>
  45392c:	mov	x22, x20
  453930:	dup	v0.2d, x22
  453934:	str	q0, [x19, #48]
  453938:	b	453390 <_obstack_memory_used@@Base+0x1f80>
  45393c:	ldrb	w2, [x2, x1]
  453940:	ldr	x3, [x0]
  453944:	ldr	x1, [x19, #8]
  453948:	ldr	w2, [x3, x2, lsl #2]
  45394c:	strb	w2, [x1, x20]
  453950:	add	x20, x20, #0x1
  453954:	cmp	x20, x22
  453958:	b.eq	453930 <_obstack_memory_used@@Base+0x2520>  // b.none
  45395c:	ldr	x21, [x19, #40]
  453960:	b	4538f0 <_obstack_memory_used@@Base+0x24e0>
  453964:	ldr	x2, [x19, #80]
  453968:	strb	wzr, [x19, #140]
  45396c:	ldr	x1, [x19, #96]
  453970:	sub	x2, x2, x21
  453974:	add	x2, x2, x20
  453978:	str	x2, [x19, #88]
  45397c:	sub	x1, x1, x21
  453980:	add	x1, x1, x20
  453984:	str	x1, [x19, #104]
  453988:	b	453418 <_obstack_memory_used@@Base+0x2008>
  45398c:	cmp	x0, #0x0
  453990:	mov	w28, #0x0                   	// #0
  453994:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  453998:	b.eq	4539a4 <_obstack_memory_used@@Base+0x2594>  // b.none
  45399c:	ldr	x0, [x19]
  4539a0:	ldrb	w28, [x0, x22]
  4539a4:	mov	x0, #0x1                   	// #1
  4539a8:	str	x26, [x19, #32]
  4539ac:	b	45347c <_obstack_memory_used@@Base+0x206c>
  4539b0:	ldp	x25, x26, [sp, #64]
  4539b4:	ldp	x27, x28, [sp, #80]
  4539b8:	mov	w2, w24
  4539bc:	sub	x1, x23, #0x1
  4539c0:	mov	x0, x19
  4539c4:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  4539c8:	str	w0, [x19, #112]
  4539cc:	b	4534c8 <_obstack_memory_used@@Base+0x20b8>
  4539d0:	b.le	4539e4 <_obstack_memory_used@@Base+0x25d4>
  4539d4:	ldr	x0, [x19, #16]
  4539d8:	lsl	x2, x22, #2
  4539dc:	mov	w1, #0xff                  	// #255
  4539e0:	bl	404410 <memset@plt>
  4539e4:	ldrb	w0, [x19, #139]
  4539e8:	cbz	w0, 4534d4 <_obstack_memory_used@@Base+0x20c4>
  4539ec:	ldr	x0, [x19, #8]
  4539f0:	mov	x2, x22
  4539f4:	mov	w1, #0xff                  	// #255
  4539f8:	bl	404410 <memset@plt>
  4539fc:	ldrb	w0, [x19, #139]
  453a00:	ldr	x22, [x19, #48]
  453a04:	b	4534d4 <_obstack_memory_used@@Base+0x20c4>
  453a08:	mov	w0, w28
  453a0c:	bl	404990 <iswalnum@plt>
  453a10:	cmp	w28, #0x5f
  453a14:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  453a18:	mov	w0, #0x1                   	// #1
  453a1c:	b.ne	4534bc <_obstack_memory_used@@Base+0x20ac>  // b.any
  453a20:	b	4534a0 <_obstack_memory_used@@Base+0x2090>
  453a24:	mov	x2, x3
  453a28:	b	453774 <_obstack_memory_used@@Base+0x2364>
  453a2c:	cmp	x2, #0x6
  453a30:	mov	x3, #0x6                   	// #6
  453a34:	csel	x3, x2, x3, le
  453a38:	add	x1, sp, #0x70
  453a3c:	subs	w4, w3, #0x1
  453a40:	b.mi	4536b0 <_obstack_memory_used@@Base+0x22a0>  // b.first
  453a44:	ldrb	w6, [x25, w4, sxtw]
  453a48:	add	x1, sp, #0x70
  453a4c:	cmp	w3, #0x1
  453a50:	sub	w5, w3, #0x2
  453a54:	ldrb	w6, [x0, x6]
  453a58:	strb	w6, [x1, w4, sxtw]
  453a5c:	b.eq	4536b0 <_obstack_memory_used@@Base+0x22a0>  // b.none
  453a60:	ldrb	w6, [x25, w5, sxtw]
  453a64:	cmp	w3, #0x2
  453a68:	sub	w4, w3, #0x3
  453a6c:	ldrb	w6, [x0, x6]
  453a70:	strb	w6, [x1, w5, sxtw]
  453a74:	b.eq	4536b0 <_obstack_memory_used@@Base+0x22a0>  // b.none
  453a78:	ldrb	w6, [x25, w4, sxtw]
  453a7c:	cmp	w3, #0x3
  453a80:	sub	w5, w3, #0x4
  453a84:	ldrb	w6, [x0, x6]
  453a88:	strb	w6, [x1, w4, sxtw]
  453a8c:	b.eq	4536b0 <_obstack_memory_used@@Base+0x22a0>  // b.none
  453a90:	ldrb	w6, [x25, w5, sxtw]
  453a94:	cmp	w3, #0x4
  453a98:	sub	w4, w3, #0x5
  453a9c:	ldrb	w6, [x0, x6]
  453aa0:	strb	w6, [x1, w5, sxtw]
  453aa4:	b.eq	4536b0 <_obstack_memory_used@@Base+0x22a0>  // b.none
  453aa8:	ldrb	w5, [x25, w4, sxtw]
  453aac:	cmp	w3, #0x5
  453ab0:	sub	w3, w3, #0x6
  453ab4:	ldrb	w5, [x0, x5]
  453ab8:	strb	w5, [x1, w4, sxtw]
  453abc:	b.eq	4536b0 <_obstack_memory_used@@Base+0x22a0>  // b.none
  453ac0:	ldrb	w4, [x25, w3, sxtw]
  453ac4:	ldrb	w0, [x0, x4]
  453ac8:	strb	w0, [x1, w3, sxtw]
  453acc:	b	4536b0 <_obstack_memory_used@@Base+0x22a0>
  453ad0:	sub	x22, x22, x21
  453ad4:	str	x22, [x19, #48]
  453ad8:	b	4539b8 <_obstack_memory_used@@Base+0x25a8>
  453adc:	ldr	x0, [x19, #40]
  453ae0:	ldr	x22, [x19, #56]
  453ae4:	ldp	x25, x26, [sp, #64]
  453ae8:	b	453430 <_obstack_memory_used@@Base+0x2020>
  453aec:	nop
  453af0:	stp	x29, x30, [sp, #-16]!
  453af4:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453af8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  453afc:	mov	x29, sp
  453b00:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453b04:	add	x3, x3, #0x2c0
  453b08:	add	x1, x1, #0xff8
  453b0c:	add	x0, x0, #0x8
  453b10:	mov	w2, #0x553                 	// #1363
  453b14:	bl	404ac0 <__assert_fail@plt>
  453b18:	stp	x29, x30, [sp, #-80]!
  453b1c:	mov	x29, sp
  453b20:	stp	x19, x20, [sp, #16]
  453b24:	mov	x20, x0
  453b28:	mov	x19, x1
  453b2c:	stp	x21, x22, [sp, #32]
  453b30:	mov	x22, x3
  453b34:	mov	x21, x5
  453b38:	stp	x23, x24, [sp, #48]
  453b3c:	mov	x24, x4
  453b40:	stp	x25, x26, [sp, #64]
  453b44:	mov	x25, x2
  453b48:	tbz	w6, #22, 453b68 <_obstack_memory_used@@Base+0x2758>
  453b4c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453b50:	mov	x0, x5
  453b54:	add	x1, x1, #0x20
  453b58:	bl	404710 <strcmp@plt>
  453b5c:	cbnz	w0, 453c54 <_obstack_memory_used@@Base+0x2844>
  453b60:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453b64:	add	x21, x21, #0x18
  453b68:	ldr	x23, [x22]
  453b6c:	ldr	x0, [x24]
  453b70:	ldr	x26, [x25]
  453b74:	cmp	x0, x23
  453b78:	b.eq	453c88 <_obstack_memory_used@@Base+0x2878>  // b.none
  453b7c:	add	x0, x23, #0x1
  453b80:	str	x0, [x22]
  453b84:	mov	x0, x21
  453b88:	bl	4040a0 <wctype@plt>
  453b8c:	str	x0, [x26, x23, lsl #3]
  453b90:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453b94:	mov	x0, x21
  453b98:	add	x1, x1, #0x30
  453b9c:	bl	404710 <strcmp@plt>
  453ba0:	cbz	w0, 453c14 <_obstack_memory_used@@Base+0x2804>
  453ba4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453ba8:	mov	x0, x21
  453bac:	add	x1, x1, #0x38
  453bb0:	bl	404710 <strcmp@plt>
  453bb4:	cbnz	w0, 453cb4 <_obstack_memory_used@@Base+0x28a4>
  453bb8:	bl	404740 <__ctype_b_loc@plt>
  453bbc:	mov	x2, #0x0                   	// #0
  453bc0:	mov	x5, #0x1                   	// #1
  453bc4:	ldr	x4, [x0]
  453bc8:	cbnz	x20, 453e40 <_obstack_memory_used@@Base+0x2a30>
  453bcc:	nop
  453bd0:	ldrh	w0, [x4, x2, lsl #1]
  453bd4:	asr	x1, x2, #6
  453bd8:	lsl	x3, x5, x2
  453bdc:	add	x2, x2, #0x1
  453be0:	tbz	w0, #1, 453bf0 <_obstack_memory_used@@Base+0x27e0>
  453be4:	ldr	x0, [x19, x1, lsl #3]
  453be8:	orr	x0, x0, x3
  453bec:	str	x0, [x19, x1, lsl #3]
  453bf0:	cmp	x2, #0x100
  453bf4:	b.ne	453bd0 <_obstack_memory_used@@Base+0x27c0>  // b.any
  453bf8:	mov	w0, #0x0                   	// #0
  453bfc:	ldp	x19, x20, [sp, #16]
  453c00:	ldp	x21, x22, [sp, #32]
  453c04:	ldp	x23, x24, [sp, #48]
  453c08:	ldp	x25, x26, [sp, #64]
  453c0c:	ldp	x29, x30, [sp], #80
  453c10:	ret
  453c14:	bl	404740 <__ctype_b_loc@plt>
  453c18:	mov	x2, #0x0                   	// #0
  453c1c:	mov	x6, #0x1                   	// #1
  453c20:	ldr	x5, [x0]
  453c24:	cbnz	x20, 453e04 <_obstack_memory_used@@Base+0x29f4>
  453c28:	ldrh	w3, [x5, x2, lsl #1]
  453c2c:	asr	x0, x2, #6
  453c30:	lsl	x4, x6, x2
  453c34:	add	x2, x2, #0x1
  453c38:	tbz	w3, #3, 453c48 <_obstack_memory_used@@Base+0x2838>
  453c3c:	ldr	x1, [x19, x0, lsl #3]
  453c40:	orr	x1, x1, x4
  453c44:	str	x1, [x19, x0, lsl #3]
  453c48:	cmp	x2, #0x100
  453c4c:	b.ne	453c28 <_obstack_memory_used@@Base+0x2818>  // b.any
  453c50:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453c54:	mov	x0, x21
  453c58:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453c5c:	add	x1, x1, #0x28
  453c60:	bl	404710 <strcmp@plt>
  453c64:	cmp	w0, #0x0
  453c68:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453c6c:	ldr	x23, [x22]
  453c70:	add	x1, x1, #0x18
  453c74:	ldr	x0, [x24]
  453c78:	csel	x21, x1, x21, eq  // eq = none
  453c7c:	ldr	x26, [x25]
  453c80:	cmp	x0, x23
  453c84:	b.ne	453b7c <_obstack_memory_used@@Base+0x276c>  // b.any
  453c88:	lsl	x23, x23, #1
  453c8c:	mov	x0, x26
  453c90:	add	x23, x23, #0x1
  453c94:	lsl	x1, x23, #3
  453c98:	bl	404530 <realloc@plt>
  453c9c:	mov	x26, x0
  453ca0:	cbz	x0, 453f58 <_obstack_memory_used@@Base+0x2b48>
  453ca4:	str	x0, [x25]
  453ca8:	str	x23, [x24]
  453cac:	ldr	x23, [x22]
  453cb0:	b	453b7c <_obstack_memory_used@@Base+0x276c>
  453cb4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453cb8:	mov	x0, x21
  453cbc:	add	x1, x1, #0x28
  453cc0:	bl	404710 <strcmp@plt>
  453cc4:	cbz	w0, 453d1c <_obstack_memory_used@@Base+0x290c>
  453cc8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453ccc:	mov	x0, x21
  453cd0:	add	x1, x1, #0x40
  453cd4:	bl	404710 <strcmp@plt>
  453cd8:	cbnz	w0, 453d5c <_obstack_memory_used@@Base+0x294c>
  453cdc:	bl	404740 <__ctype_b_loc@plt>
  453ce0:	mov	x1, #0x0                   	// #0
  453ce4:	mov	x5, #0x1                   	// #1
  453ce8:	ldr	x4, [x0]
  453cec:	cbnz	x20, 453fe8 <_obstack_memory_used@@Base+0x2bd8>
  453cf0:	ldrh	w0, [x4, x1, lsl #1]
  453cf4:	asr	x2, x1, #6
  453cf8:	lsl	x3, x5, x1
  453cfc:	add	x1, x1, #0x1
  453d00:	tbz	w0, #13, 453d10 <_obstack_memory_used@@Base+0x2900>
  453d04:	ldr	x0, [x19, x2, lsl #3]
  453d08:	orr	x0, x0, x3
  453d0c:	str	x0, [x19, x2, lsl #3]
  453d10:	cmp	x1, #0x100
  453d14:	b.ne	453cf0 <_obstack_memory_used@@Base+0x28e0>  // b.any
  453d18:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453d1c:	bl	404740 <__ctype_b_loc@plt>
  453d20:	mov	x1, #0x0                   	// #0
  453d24:	mov	x5, #0x1                   	// #1
  453d28:	ldr	x4, [x0]
  453d2c:	cbnz	x20, 453e78 <_obstack_memory_used@@Base+0x2a68>
  453d30:	ldrh	w0, [x4, x1, lsl #1]
  453d34:	asr	x2, x1, #6
  453d38:	lsl	x3, x5, x1
  453d3c:	add	x1, x1, #0x1
  453d40:	tbz	w0, #9, 453d50 <_obstack_memory_used@@Base+0x2940>
  453d44:	ldr	x0, [x19, x2, lsl #3]
  453d48:	orr	x0, x0, x3
  453d4c:	str	x0, [x19, x2, lsl #3]
  453d50:	cmp	x1, #0x100
  453d54:	b.ne	453d30 <_obstack_memory_used@@Base+0x2920>  // b.any
  453d58:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453d5c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453d60:	mov	x0, x21
  453d64:	add	x1, x1, #0x18
  453d68:	bl	404710 <strcmp@plt>
  453d6c:	cbz	w0, 453dc4 <_obstack_memory_used@@Base+0x29b4>
  453d70:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453d74:	mov	x0, x21
  453d78:	add	x1, x1, #0x48
  453d7c:	bl	404710 <strcmp@plt>
  453d80:	cbnz	w0, 453eb0 <_obstack_memory_used@@Base+0x2aa0>
  453d84:	bl	404740 <__ctype_b_loc@plt>
  453d88:	mov	x1, #0x0                   	// #0
  453d8c:	mov	x5, #0x1                   	// #1
  453d90:	ldr	x4, [x0]
  453d94:	cbnz	x20, 454020 <_obstack_memory_used@@Base+0x2c10>
  453d98:	ldrh	w2, [x4, x1, lsl #1]
  453d9c:	asr	x0, x1, #6
  453da0:	lsl	x3, x5, x1
  453da4:	add	x1, x1, #0x1
  453da8:	tbz	w2, #11, 453db8 <_obstack_memory_used@@Base+0x29a8>
  453dac:	ldr	x2, [x19, x0, lsl #3]
  453db0:	orr	x2, x2, x3
  453db4:	str	x2, [x19, x0, lsl #3]
  453db8:	cmp	x1, #0x100
  453dbc:	b.ne	453d98 <_obstack_memory_used@@Base+0x2988>  // b.any
  453dc0:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453dc4:	bl	404740 <__ctype_b_loc@plt>
  453dc8:	mov	x1, #0x0                   	// #0
  453dcc:	mov	x5, #0x1                   	// #1
  453dd0:	ldr	x4, [x0]
  453dd4:	cbnz	x20, 453fb4 <_obstack_memory_used@@Base+0x2ba4>
  453dd8:	ldrh	w0, [x4, x1, lsl #1]
  453ddc:	asr	x2, x1, #6
  453de0:	lsl	x3, x5, x1
  453de4:	add	x1, x1, #0x1
  453de8:	tbz	w0, #10, 453df8 <_obstack_memory_used@@Base+0x29e8>
  453dec:	ldr	x0, [x19, x2, lsl #3]
  453df0:	orr	x0, x0, x3
  453df4:	str	x0, [x19, x2, lsl #3]
  453df8:	cmp	x1, #0x100
  453dfc:	b.ne	453dd8 <_obstack_memory_used@@Base+0x29c8>  // b.any
  453e00:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453e04:	mov	x4, x6
  453e08:	mov	x0, #0x0                   	// #0
  453e0c:	nop
  453e10:	ldrh	w1, [x5, x0, lsl #1]
  453e14:	tbz	w1, #3, 453e30 <_obstack_memory_used@@Base+0x2a20>
  453e18:	ldrb	w1, [x20, x0]
  453e1c:	ubfx	x3, x1, #6, #2
  453e20:	lsl	x1, x4, x1
  453e24:	ldr	x2, [x19, x3, lsl #3]
  453e28:	orr	x1, x2, x1
  453e2c:	str	x1, [x19, x3, lsl #3]
  453e30:	add	x0, x0, #0x1
  453e34:	cmp	x0, #0x100
  453e38:	b.ne	453e10 <_obstack_memory_used@@Base+0x2a00>  // b.any
  453e3c:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453e40:	mov	x0, #0x0                   	// #0
  453e44:	nop
  453e48:	ldrh	w1, [x4, x0, lsl #1]
  453e4c:	tbz	w1, #1, 453e68 <_obstack_memory_used@@Base+0x2a58>
  453e50:	ldrb	w1, [x20, x0]
  453e54:	ubfx	x3, x1, #6, #2
  453e58:	lsl	x1, x5, x1
  453e5c:	ldr	x2, [x19, x3, lsl #3]
  453e60:	orr	x1, x2, x1
  453e64:	str	x1, [x19, x3, lsl #3]
  453e68:	add	x0, x0, #0x1
  453e6c:	cmp	x0, #0x100
  453e70:	b.ne	453e48 <_obstack_memory_used@@Base+0x2a38>  // b.any
  453e74:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453e78:	mov	x0, #0x0                   	// #0
  453e7c:	nop
  453e80:	ldrh	w1, [x4, x0, lsl #1]
  453e84:	tbz	w1, #9, 453ea0 <_obstack_memory_used@@Base+0x2a90>
  453e88:	ldrb	w1, [x20, x0]
  453e8c:	ubfx	x3, x1, #6, #2
  453e90:	lsl	x1, x5, x1
  453e94:	ldr	x2, [x19, x3, lsl #3]
  453e98:	orr	x1, x2, x1
  453e9c:	str	x1, [x19, x3, lsl #3]
  453ea0:	add	x0, x0, #0x1
  453ea4:	cmp	x0, #0x100
  453ea8:	b.ne	453e80 <_obstack_memory_used@@Base+0x2a70>  // b.any
  453eac:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453eb0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453eb4:	mov	x0, x21
  453eb8:	add	x1, x1, #0x50
  453ebc:	bl	404710 <strcmp@plt>
  453ec0:	cbnz	w0, 453f04 <_obstack_memory_used@@Base+0x2af4>
  453ec4:	bl	404740 <__ctype_b_loc@plt>
  453ec8:	mov	x1, #0x0                   	// #0
  453ecc:	mov	x5, #0x1                   	// #1
  453ed0:	ldr	x4, [x0]
  453ed4:	cbnz	x20, 454200 <_obstack_memory_used@@Base+0x2df0>
  453ed8:	ldrh	w0, [x4, x1, lsl #1]
  453edc:	asr	x2, x1, #6
  453ee0:	lsl	x3, x5, x1
  453ee4:	add	x1, x1, #0x1
  453ee8:	tbz	w0, #14, 453ef8 <_obstack_memory_used@@Base+0x2ae8>
  453eec:	ldr	x0, [x19, x2, lsl #3]
  453ef0:	orr	x0, x0, x3
  453ef4:	str	x0, [x19, x2, lsl #3]
  453ef8:	cmp	x1, #0x100
  453efc:	b.ne	453ed8 <_obstack_memory_used@@Base+0x2ac8>  // b.any
  453f00:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453f04:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453f08:	mov	x0, x21
  453f0c:	add	x1, x1, #0x20
  453f10:	bl	404710 <strcmp@plt>
  453f14:	cbnz	w0, 453f60 <_obstack_memory_used@@Base+0x2b50>
  453f18:	bl	404740 <__ctype_b_loc@plt>
  453f1c:	mov	x1, #0x0                   	// #0
  453f20:	mov	x5, #0x1                   	// #1
  453f24:	ldr	x4, [x0]
  453f28:	cbnz	x20, 45426c <_obstack_memory_used@@Base+0x2e5c>
  453f2c:	ldrh	w0, [x4, x1, lsl #1]
  453f30:	asr	x2, x1, #6
  453f34:	lsl	x3, x5, x1
  453f38:	add	x1, x1, #0x1
  453f3c:	tbz	w0, #8, 453f4c <_obstack_memory_used@@Base+0x2b3c>
  453f40:	ldr	x0, [x19, x2, lsl #3]
  453f44:	orr	x0, x0, x3
  453f48:	str	x0, [x19, x2, lsl #3]
  453f4c:	cmp	x1, #0x100
  453f50:	b.ne	453f2c <_obstack_memory_used@@Base+0x2b1c>  // b.any
  453f54:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453f58:	mov	w0, #0xc                   	// #12
  453f5c:	b	453bfc <_obstack_memory_used@@Base+0x27ec>
  453f60:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  453f64:	mov	x0, x21
  453f68:	add	x1, x1, #0x58
  453f6c:	bl	404710 <strcmp@plt>
  453f70:	cbnz	w0, 454054 <_obstack_memory_used@@Base+0x2c44>
  453f74:	bl	404740 <__ctype_b_loc@plt>
  453f78:	mov	x1, #0x0                   	// #0
  453f7c:	mov	x4, #0x1                   	// #1
  453f80:	ldr	x2, [x0]
  453f84:	cbnz	x20, 454234 <_obstack_memory_used@@Base+0x2e24>
  453f88:	ldrh	w0, [x2, x1, lsl #1]
  453f8c:	asr	x3, x1, #6
  453f90:	lsl	x5, x4, x1
  453f94:	add	x1, x1, #0x1
  453f98:	tbz	w0, #0, 453fa8 <_obstack_memory_used@@Base+0x2b98>
  453f9c:	ldr	x0, [x19, x3, lsl #3]
  453fa0:	orr	x0, x0, x5
  453fa4:	str	x0, [x19, x3, lsl #3]
  453fa8:	cmp	x1, #0x100
  453fac:	b.ne	453f88 <_obstack_memory_used@@Base+0x2b78>  // b.any
  453fb0:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453fb4:	mov	x0, #0x0                   	// #0
  453fb8:	ldrh	w1, [x4, x0, lsl #1]
  453fbc:	tbz	w1, #10, 453fd8 <_obstack_memory_used@@Base+0x2bc8>
  453fc0:	ldrb	w1, [x20, x0]
  453fc4:	ubfx	x3, x1, #6, #2
  453fc8:	lsl	x1, x5, x1
  453fcc:	ldr	x2, [x19, x3, lsl #3]
  453fd0:	orr	x1, x2, x1
  453fd4:	str	x1, [x19, x3, lsl #3]
  453fd8:	add	x0, x0, #0x1
  453fdc:	cmp	x0, #0x100
  453fe0:	b.ne	453fb8 <_obstack_memory_used@@Base+0x2ba8>  // b.any
  453fe4:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  453fe8:	mov	x0, #0x0                   	// #0
  453fec:	nop
  453ff0:	ldrh	w1, [x4, x0, lsl #1]
  453ff4:	tbz	w1, #13, 454010 <_obstack_memory_used@@Base+0x2c00>
  453ff8:	ldrb	w1, [x20, x0]
  453ffc:	ubfx	x3, x1, #6, #2
  454000:	lsl	x1, x5, x1
  454004:	ldr	x2, [x19, x3, lsl #3]
  454008:	orr	x1, x2, x1
  45400c:	str	x1, [x19, x3, lsl #3]
  454010:	add	x0, x0, #0x1
  454014:	cmp	x0, #0x100
  454018:	b.ne	453ff0 <_obstack_memory_used@@Base+0x2be0>  // b.any
  45401c:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  454020:	mov	x0, #0x0                   	// #0
  454024:	ldrh	w1, [x4, x0, lsl #1]
  454028:	tbz	w1, #11, 454044 <_obstack_memory_used@@Base+0x2c34>
  45402c:	ldrb	w1, [x20, x0]
  454030:	ubfx	x3, x1, #6, #2
  454034:	lsl	x1, x5, x1
  454038:	ldr	x2, [x19, x3, lsl #3]
  45403c:	orr	x1, x2, x1
  454040:	str	x1, [x19, x3, lsl #3]
  454044:	add	x0, x0, #0x1
  454048:	cmp	x0, #0x100
  45404c:	b.ne	454024 <_obstack_memory_used@@Base+0x2c14>  // b.any
  454050:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  454054:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  454058:	mov	x0, x21
  45405c:	add	x1, x1, #0x60
  454060:	bl	404710 <strcmp@plt>
  454064:	cbnz	w0, 4540e0 <_obstack_memory_used@@Base+0x2cd0>
  454068:	bl	404740 <__ctype_b_loc@plt>
  45406c:	mov	x1, #0x0                   	// #0
  454070:	mov	x4, #0x1                   	// #1
  454074:	ldr	x3, [x0]
  454078:	cbnz	x20, 4540a8 <_obstack_memory_used@@Base+0x2c98>
  45407c:	ldrsh	w0, [x3, x1, lsl #1]
  454080:	asr	x2, x1, #6
  454084:	lsl	x5, x4, x1
  454088:	add	x1, x1, #0x1
  45408c:	tbz	w0, #31, 45409c <_obstack_memory_used@@Base+0x2c8c>
  454090:	ldr	x0, [x19, x2, lsl #3]
  454094:	orr	x0, x0, x5
  454098:	str	x0, [x19, x2, lsl #3]
  45409c:	cmp	x1, #0x100
  4540a0:	b.ne	45407c <_obstack_memory_used@@Base+0x2c6c>  // b.any
  4540a4:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  4540a8:	mov	x5, x4
  4540ac:	mov	x0, #0x0                   	// #0
  4540b0:	ldrsh	w1, [x3, x0, lsl #1]
  4540b4:	tbz	w1, #31, 4540d0 <_obstack_memory_used@@Base+0x2cc0>
  4540b8:	ldrb	w1, [x20, x0]
  4540bc:	ubfx	x4, x1, #6, #2
  4540c0:	lsl	x1, x5, x1
  4540c4:	ldr	x2, [x19, x4, lsl #3]
  4540c8:	orr	x1, x2, x1
  4540cc:	str	x1, [x19, x4, lsl #3]
  4540d0:	add	x0, x0, #0x1
  4540d4:	cmp	x0, #0x100
  4540d8:	b.ne	4540b0 <_obstack_memory_used@@Base+0x2ca0>  // b.any
  4540dc:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  4540e0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4540e4:	mov	x0, x21
  4540e8:	add	x1, x1, #0x68
  4540ec:	bl	404710 <strcmp@plt>
  4540f0:	cbnz	w0, 45416c <_obstack_memory_used@@Base+0x2d5c>
  4540f4:	bl	404740 <__ctype_b_loc@plt>
  4540f8:	mov	x1, #0x0                   	// #0
  4540fc:	mov	x4, #0x1                   	// #1
  454100:	ldr	x3, [x0]
  454104:	cbnz	x20, 454134 <_obstack_memory_used@@Base+0x2d24>
  454108:	ldrh	w0, [x3, x1, lsl #1]
  45410c:	asr	x2, x1, #6
  454110:	lsl	x5, x4, x1
  454114:	add	x1, x1, #0x1
  454118:	tbz	w0, #2, 454128 <_obstack_memory_used@@Base+0x2d18>
  45411c:	ldr	x0, [x19, x2, lsl #3]
  454120:	orr	x0, x0, x5
  454124:	str	x0, [x19, x2, lsl #3]
  454128:	cmp	x1, #0x100
  45412c:	b.ne	454108 <_obstack_memory_used@@Base+0x2cf8>  // b.any
  454130:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  454134:	mov	x5, x4
  454138:	mov	x0, #0x0                   	// #0
  45413c:	ldrh	w1, [x3, x0, lsl #1]
  454140:	tbz	w1, #2, 45415c <_obstack_memory_used@@Base+0x2d4c>
  454144:	ldrb	w1, [x20, x0]
  454148:	ubfx	x4, x1, #6, #2
  45414c:	lsl	x1, x5, x1
  454150:	ldr	x2, [x19, x4, lsl #3]
  454154:	orr	x1, x2, x1
  454158:	str	x1, [x19, x4, lsl #3]
  45415c:	add	x0, x0, #0x1
  454160:	cmp	x0, #0x100
  454164:	b.ne	45413c <_obstack_memory_used@@Base+0x2d2c>  // b.any
  454168:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  45416c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  454170:	mov	x0, x21
  454174:	add	x1, x1, #0x70
  454178:	bl	404710 <strcmp@plt>
  45417c:	cbnz	w0, 4541f8 <_obstack_memory_used@@Base+0x2de8>
  454180:	bl	404740 <__ctype_b_loc@plt>
  454184:	mov	x1, #0x0                   	// #0
  454188:	mov	x4, #0x1                   	// #1
  45418c:	ldr	x3, [x0]
  454190:	cbnz	x20, 4541c0 <_obstack_memory_used@@Base+0x2db0>
  454194:	ldrh	w0, [x3, x1, lsl #1]
  454198:	asr	x2, x1, #6
  45419c:	lsl	x5, x4, x1
  4541a0:	add	x1, x1, #0x1
  4541a4:	tbz	w0, #12, 4541b4 <_obstack_memory_used@@Base+0x2da4>
  4541a8:	ldr	x0, [x19, x2, lsl #3]
  4541ac:	orr	x0, x0, x5
  4541b0:	str	x0, [x19, x2, lsl #3]
  4541b4:	cmp	x1, #0x100
  4541b8:	b.ne	454194 <_obstack_memory_used@@Base+0x2d84>  // b.any
  4541bc:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  4541c0:	mov	x5, x4
  4541c4:	mov	x0, #0x0                   	// #0
  4541c8:	ldrh	w1, [x3, x0, lsl #1]
  4541cc:	tbz	w1, #12, 4541e8 <_obstack_memory_used@@Base+0x2dd8>
  4541d0:	ldrb	w1, [x20, x0]
  4541d4:	ubfx	x4, x1, #6, #2
  4541d8:	lsl	x1, x5, x1
  4541dc:	ldr	x2, [x19, x4, lsl #3]
  4541e0:	orr	x1, x2, x1
  4541e4:	str	x1, [x19, x4, lsl #3]
  4541e8:	add	x0, x0, #0x1
  4541ec:	cmp	x0, #0x100
  4541f0:	b.ne	4541c8 <_obstack_memory_used@@Base+0x2db8>  // b.any
  4541f4:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  4541f8:	mov	w0, #0x4                   	// #4
  4541fc:	b	453bfc <_obstack_memory_used@@Base+0x27ec>
  454200:	mov	x0, #0x0                   	// #0
  454204:	ldrh	w1, [x4, x0, lsl #1]
  454208:	tbz	w1, #14, 454224 <_obstack_memory_used@@Base+0x2e14>
  45420c:	ldrb	w1, [x20, x0]
  454210:	ubfx	x3, x1, #6, #2
  454214:	lsl	x1, x5, x1
  454218:	ldr	x2, [x19, x3, lsl #3]
  45421c:	orr	x1, x2, x1
  454220:	str	x1, [x19, x3, lsl #3]
  454224:	add	x0, x0, #0x1
  454228:	cmp	x0, #0x100
  45422c:	b.ne	454204 <_obstack_memory_used@@Base+0x2df4>  // b.any
  454230:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  454234:	mov	x5, x4
  454238:	mov	x0, #0x0                   	// #0
  45423c:	ldrh	w1, [x2, x0, lsl #1]
  454240:	tbz	w1, #0, 45425c <_obstack_memory_used@@Base+0x2e4c>
  454244:	ldrb	w1, [x20, x0]
  454248:	ubfx	x4, x1, #6, #2
  45424c:	lsl	x1, x5, x1
  454250:	ldr	x3, [x19, x4, lsl #3]
  454254:	orr	x1, x3, x1
  454258:	str	x1, [x19, x4, lsl #3]
  45425c:	add	x0, x0, #0x1
  454260:	cmp	x0, #0x100
  454264:	b.ne	45423c <_obstack_memory_used@@Base+0x2e2c>  // b.any
  454268:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  45426c:	mov	x0, #0x0                   	// #0
  454270:	ldrh	w1, [x4, x0, lsl #1]
  454274:	tbz	w1, #8, 454290 <_obstack_memory_used@@Base+0x2e80>
  454278:	ldrb	w1, [x20, x0]
  45427c:	ubfx	x3, x1, #6, #2
  454280:	lsl	x1, x5, x1
  454284:	ldr	x2, [x19, x3, lsl #3]
  454288:	orr	x1, x2, x1
  45428c:	str	x1, [x19, x3, lsl #3]
  454290:	add	x0, x0, #0x1
  454294:	cmp	x0, #0x100
  454298:	b.ne	454270 <_obstack_memory_used@@Base+0x2e60>  // b.any
  45429c:	b	453bf8 <_obstack_memory_used@@Base+0x27e8>
  4542a0:	stp	x29, x30, [sp, #-432]!
  4542a4:	mov	x29, sp
  4542a8:	stp	x23, x24, [sp, #48]
  4542ac:	ldr	x23, [x0]
  4542b0:	stp	x19, x20, [sp, #16]
  4542b4:	mov	x19, x3
  4542b8:	stp	x21, x22, [sp, #32]
  4542bc:	str	wzr, [sp, #124]
  4542c0:	stp	x0, x2, [sp, #128]
  4542c4:	ldr	w0, [x23, #180]
  4542c8:	str	x1, [sp, #152]
  4542cc:	cmp	w0, #0x1
  4542d0:	b.ne	4542e4 <_obstack_memory_used@@Base+0x2ed4>  // b.any
  4542d4:	ldr	x0, [sp, #128]
  4542d8:	ldr	x0, [x0, #24]
  4542dc:	ubfx	w0, w0, #22, #1
  4542e0:	str	w0, [sp, #124]
  4542e4:	ldr	x0, [sp, #152]
  4542e8:	neg	x21, x19, lsl #2
  4542ec:	mov	x22, #0x0                   	// #0
  4542f0:	ldr	x2, [x0]
  4542f4:	cmp	x2, #0x0
  4542f8:	b.le	4543d4 <_obstack_memory_used@@Base+0x2fc4>
  4542fc:	add	x24, sp, #0xb0
  454300:	stp	x25, x26, [sp, #64]
  454304:	stp	x27, x28, [sp, #80]
  454308:	mov	w28, #0x1                   	// #1
  45430c:	b	454340 <_obstack_memory_used@@Base+0x2f30>
  454310:	cmp	w20, #0x3
  454314:	b.eq	454544 <_obstack_memory_used@@Base+0x3134>  // b.none
  454318:	cmp	w20, #0x6
  45431c:	b.eq	4543e8 <_obstack_memory_used@@Base+0x2fd8>  // b.none
  454320:	and	w0, w20, #0xfffffffd
  454324:	cmp	w0, #0x5
  454328:	b.eq	4546c0 <_obstack_memory_used@@Base+0x32b0>  // b.none
  45432c:	cmp	w20, #0x2
  454330:	b.eq	4546e4 <_obstack_memory_used@@Base+0x32d4>  // b.none
  454334:	add	x22, x22, #0x1
  454338:	cmp	x22, x2
  45433c:	b.ge	4543cc <_obstack_memory_used@@Base+0x2fbc>  // b.tcont
  454340:	ldr	x0, [sp, #136]
  454344:	ldr	x1, [x0]
  454348:	ldr	x0, [x23]
  45434c:	ldr	x26, [x1, x22, lsl #3]
  454350:	lsl	x1, x26, #4
  454354:	str	x1, [sp, #104]
  454358:	add	x1, x0, x1
  45435c:	ldrb	w20, [x1, #8]
  454360:	cmp	w20, #0x1
  454364:	b.ne	454310 <_obstack_memory_used@@Base+0x2f00>  // b.any
  454368:	ldr	x1, [sp, #104]
  45436c:	ldrb	w1, [x0, x1]
  454370:	str	w1, [sp, #112]
  454374:	and	x0, x1, #0xff
  454378:	strb	w20, [x19, x0]
  45437c:	ldr	w0, [sp, #124]
  454380:	cbz	w0, 45439c <_obstack_memory_used@@Base+0x2f8c>
  454384:	bl	4041f0 <__ctype_tolower_loc@plt>
  454388:	ldr	w1, [sp, #112]
  45438c:	ldr	x0, [x0]
  454390:	mov	w1, w1
  454394:	ldrsw	x0, [x0, x1, lsl #2]
  454398:	strb	w20, [x19, x0]
  45439c:	ldr	x0, [sp, #128]
  4543a0:	ldr	x0, [x0, #24]
  4543a4:	tbz	w0, #22, 4543b8 <_obstack_memory_used@@Base+0x2fa8>
  4543a8:	ldr	w0, [x23, #180]
  4543ac:	cmp	w0, #0x1
  4543b0:	b.gt	454604 <_obstack_memory_used@@Base+0x31f4>
  4543b4:	nop
  4543b8:	ldr	x0, [sp, #152]
  4543bc:	add	x22, x22, #0x1
  4543c0:	ldr	x2, [x0]
  4543c4:	cmp	x22, x2
  4543c8:	b.lt	454340 <_obstack_memory_used@@Base+0x2f30>  // b.tstop
  4543cc:	ldp	x25, x26, [sp, #64]
  4543d0:	ldp	x27, x28, [sp, #80]
  4543d4:	ldp	x19, x20, [sp, #16]
  4543d8:	ldp	x21, x22, [sp, #32]
  4543dc:	ldp	x23, x24, [sp, #48]
  4543e0:	ldp	x29, x30, [sp], #432
  4543e4:	ret
  4543e8:	ldr	w0, [x23, #180]
  4543ec:	ldr	x26, [x1]
  4543f0:	cmp	w0, #0x1
  4543f4:	b.le	454410 <_obstack_memory_used@@Base+0x3000>
  4543f8:	ldr	x0, [x26, #72]
  4543fc:	cbnz	x0, 4544d0 <_obstack_memory_used@@Base+0x30c0>
  454400:	ldrb	w0, [x26, #32]
  454404:	tbnz	w0, #0, 4544d0 <_obstack_memory_used@@Base+0x30c0>
  454408:	ldr	x0, [x26, #64]
  45440c:	cbnz	x0, 4544d0 <_obstack_memory_used@@Base+0x30c0>
  454410:	ldr	x0, [x26, #40]
  454414:	mov	x25, #0x0                   	// #0
  454418:	cmp	x0, #0x0
  45441c:	b.gt	454430 <_obstack_memory_used@@Base+0x3020>
  454420:	b	454334 <_obstack_memory_used@@Base+0x2f24>
  454424:	ldr	x0, [x26, #40]
  454428:	cmp	x25, x0
  45442c:	b.ge	4543b8 <_obstack_memory_used@@Base+0x2fa8>  // b.tcont
  454430:	str	xzr, [sp, #168]
  454434:	add	x2, sp, #0xa8
  454438:	mov	x0, x24
  45443c:	lsl	x20, x25, #2
  454440:	ldr	x1, [x26]
  454444:	ldr	w1, [x1, x25, lsl #2]
  454448:	add	x25, x25, #0x1
  45444c:	bl	404c20 <wcrtomb@plt>
  454450:	cmn	x0, #0x1
  454454:	b.eq	454488 <_obstack_memory_used@@Base+0x3078>  // b.none
  454458:	ldrb	w1, [sp, #176]
  45445c:	str	w1, [sp, #104]
  454460:	and	x0, x1, #0xff
  454464:	strb	w28, [x19, x0]
  454468:	ldr	w0, [sp, #124]
  45446c:	cbz	w0, 454488 <_obstack_memory_used@@Base+0x3078>
  454470:	bl	4041f0 <__ctype_tolower_loc@plt>
  454474:	ldr	w1, [sp, #104]
  454478:	ldr	x0, [x0]
  45447c:	mov	w1, w1
  454480:	ldrsw	x0, [x0, x1, lsl #2]
  454484:	strb	w28, [x19, x0]
  454488:	ldr	x0, [sp, #128]
  45448c:	ldr	x0, [x0, #24]
  454490:	tbz	w0, #22, 454424 <_obstack_memory_used@@Base+0x3014>
  454494:	ldr	w0, [x23, #180]
  454498:	cmp	w0, #0x1
  45449c:	b.le	454424 <_obstack_memory_used@@Base+0x3014>
  4544a0:	ldr	x0, [x26]
  4544a4:	ldr	w0, [x0, x20]
  4544a8:	bl	404b80 <towlower@plt>
  4544ac:	mov	w1, w0
  4544b0:	add	x2, sp, #0xa8
  4544b4:	mov	x0, x24
  4544b8:	bl	404c20 <wcrtomb@plt>
  4544bc:	cmn	x0, #0x1
  4544c0:	b.eq	454424 <_obstack_memory_used@@Base+0x3014>  // b.none
  4544c4:	ldrb	w0, [sp, #176]
  4544c8:	strb	w28, [x19, x0]
  4544cc:	b	454424 <_obstack_memory_used@@Base+0x3014>
  4544d0:	strb	wzr, [sp, #168]
  4544d4:	mov	x3, x24
  4544d8:	add	x1, sp, #0xa8
  4544dc:	mov	x2, #0x1                   	// #1
  4544e0:	mov	x0, #0x0                   	// #0
  4544e4:	str	xzr, [x24]
  4544e8:	bl	450f30 <argp_parse@@Base+0x11150>
  4544ec:	cmn	x0, #0x2
  4544f0:	b.eq	454528 <_obstack_memory_used@@Base+0x3118>  // b.none
  4544f4:	ldrb	w0, [sp, #168]
  4544f8:	add	w0, w0, #0x1
  4544fc:	and	w0, w0, #0xff
  454500:	strb	w0, [sp, #168]
  454504:	cbz	w0, 4543b8 <_obstack_memory_used@@Base+0x2fa8>
  454508:	mov	x3, x24
  45450c:	add	x1, sp, #0xa8
  454510:	mov	x2, #0x1                   	// #1
  454514:	mov	x0, #0x0                   	// #0
  454518:	str	xzr, [x24]
  45451c:	bl	450f30 <argp_parse@@Base+0x11150>
  454520:	cmn	x0, #0x2
  454524:	b.ne	4544f4 <_obstack_memory_used@@Base+0x30e4>  // b.any
  454528:	ldrb	w1, [sp, #168]
  45452c:	add	w0, w1, #0x1
  454530:	and	w0, w0, #0xff
  454534:	strb	w0, [sp, #168]
  454538:	strb	w28, [x19, x1]
  45453c:	cbnz	w0, 4544d4 <_obstack_memory_used@@Base+0x30c4>
  454540:	b	4543b8 <_obstack_memory_used@@Base+0x2fa8>
  454544:	str	xzr, [sp, #112]
  454548:	mov	x20, x19
  45454c:	ldr	x0, [x1]
  454550:	str	xzr, [sp, #144]
  454554:	ldr	x1, [sp, #112]
  454558:	ldr	x25, [x0, x1]
  45455c:	ldr	w0, [sp, #124]
  454560:	cbnz	w0, 4545c4 <_obstack_memory_used@@Base+0x31b4>
  454564:	mov	x0, #0x0                   	// #0
  454568:	lsr	x1, x25, x0
  45456c:	tbz	w1, #0, 454574 <_obstack_memory_used@@Base+0x3164>
  454570:	strb	w28, [x20, x0]
  454574:	add	x0, x0, #0x1
  454578:	cmp	x0, #0x40
  45457c:	b.ne	454568 <_obstack_memory_used@@Base+0x3158>  // b.any
  454580:	ldr	x1, [sp, #112]
  454584:	add	x20, x20, #0x40
  454588:	ldr	x0, [sp, #144]
  45458c:	add	x1, x1, #0x8
  454590:	str	x1, [sp, #112]
  454594:	add	x0, x0, #0x40
  454598:	str	x0, [sp, #144]
  45459c:	cmp	x0, #0x100
  4545a0:	b.eq	4543b8 <_obstack_memory_used@@Base+0x2fa8>  // b.none
  4545a4:	ldr	x0, [x23]
  4545a8:	ldr	x1, [sp, #104]
  4545ac:	add	x1, x0, x1
  4545b0:	ldr	x0, [x1]
  4545b4:	ldr	x1, [sp, #112]
  4545b8:	ldr	x25, [x0, x1]
  4545bc:	ldr	w0, [sp, #124]
  4545c0:	cbz	w0, 454564 <_obstack_memory_used@@Base+0x3154>
  4545c4:	mov	x27, x20
  4545c8:	mov	w26, #0x0                   	// #0
  4545cc:	nop
  4545d0:	lsr	x0, x25, x26
  4545d4:	add	w26, w26, #0x1
  4545d8:	tbz	w0, #0, 4545f4 <_obstack_memory_used@@Base+0x31e4>
  4545dc:	strb	w28, [x27]
  4545e0:	bl	4041f0 <__ctype_tolower_loc@plt>
  4545e4:	ldr	x0, [x0]
  4545e8:	add	x0, x0, x27, lsl #2
  4545ec:	ldrsw	x0, [x0, x21]
  4545f0:	strb	w28, [x19, x0]
  4545f4:	add	x27, x27, #0x1
  4545f8:	cmp	w26, #0x40
  4545fc:	b.ne	4545d0 <_obstack_memory_used@@Base+0x31c0>  // b.any
  454600:	b	454580 <_obstack_memory_used@@Base+0x3170>
  454604:	ldr	x2, [x23]
  454608:	add	x0, x26, #0x1
  45460c:	ldr	x1, [sp, #104]
  454610:	add	x5, x24, #0x1
  454614:	ldrb	w1, [x2, x1]
  454618:	strb	w1, [sp, #176]
  45461c:	ldr	x1, [x23, #16]
  454620:	cmp	x0, x1
  454624:	b.cs	454720 <_obstack_memory_used@@Base+0x3310>  // b.hs, b.nlast
  454628:	mov	w7, #0xff                  	// #255
  45462c:	mov	w6, #0x1                   	// #1
  454630:	movk	w7, #0x20, lsl #16
  454634:	movk	w6, #0x20, lsl #16
  454638:	b	454654 <_obstack_memory_used@@Base+0x3244>
  45463c:	ldrb	w1, [x2, x3]
  454640:	strb	w1, [x5], #1
  454644:	ldr	x1, [x23, #16]
  454648:	cmp	x1, x0
  45464c:	b.ls	454670 <_obstack_memory_used@@Base+0x3260>  // b.plast
  454650:	ldr	x2, [x23]
  454654:	lsl	x3, x0, #4
  454658:	add	x1, x2, x3
  45465c:	add	x0, x0, #0x1
  454660:	ldr	w1, [x1, #8]
  454664:	and	w1, w1, w7
  454668:	cmp	w1, w6
  45466c:	b.eq	45463c <_obstack_memory_used@@Base+0x322c>  // b.none
  454670:	sub	x20, x5, x24
  454674:	add	x3, sp, #0xa8
  454678:	mov	x2, x20
  45467c:	mov	x1, x24
  454680:	add	x0, sp, #0xa4
  454684:	str	xzr, [sp, #168]
  454688:	bl	450f30 <argp_parse@@Base+0x11150>
  45468c:	cmp	x0, x20
  454690:	b.ne	4543b8 <_obstack_memory_used@@Base+0x2fa8>  // b.any
  454694:	ldr	w0, [sp, #164]
  454698:	bl	404b80 <towlower@plt>
  45469c:	mov	w1, w0
  4546a0:	add	x2, sp, #0xa8
  4546a4:	mov	x0, x24
  4546a8:	bl	404c20 <wcrtomb@plt>
  4546ac:	cmn	x0, #0x1
  4546b0:	b.eq	4543b8 <_obstack_memory_used@@Base+0x2fa8>  // b.none
  4546b4:	ldrb	w0, [sp, #176]
  4546b8:	strb	w28, [x19, x0]
  4546bc:	b	4543b8 <_obstack_memory_used@@Base+0x2fa8>
  4546c0:	mov	x0, x19
  4546c4:	mov	x2, #0x100                 	// #256
  4546c8:	mov	w1, #0x1                   	// #1
  4546cc:	bl	404410 <memset@plt>
  4546d0:	cmp	w20, #0x2
  4546d4:	b.eq	4546f4 <_obstack_memory_used@@Base+0x32e4>  // b.none
  4546d8:	ldp	x25, x26, [sp, #64]
  4546dc:	ldp	x27, x28, [sp, #80]
  4546e0:	b	4543d4 <_obstack_memory_used@@Base+0x2fc4>
  4546e4:	mov	x0, x19
  4546e8:	mov	x2, #0x100                 	// #256
  4546ec:	mov	w1, #0x1                   	// #1
  4546f0:	bl	404410 <memset@plt>
  4546f4:	ldr	x1, [sp, #128]
  4546f8:	ldp	x25, x26, [sp, #64]
  4546fc:	ldrb	w0, [x1, #56]
  454700:	ldp	x27, x28, [sp, #80]
  454704:	orr	w0, w0, #0x1
  454708:	strb	w0, [x1, #56]
  45470c:	ldp	x19, x20, [sp, #16]
  454710:	ldp	x21, x22, [sp, #32]
  454714:	ldp	x23, x24, [sp, #48]
  454718:	ldp	x29, x30, [sp], #432
  45471c:	ret
  454720:	mov	x20, #0x1                   	// #1
  454724:	b	454674 <_obstack_memory_used@@Base+0x3264>
  454728:	stp	x29, x30, [sp, #-96]!
  45472c:	mov	x29, sp
  454730:	stp	x19, x20, [sp, #16]
  454734:	mov	x19, x1
  454738:	stp	x21, x22, [sp, #32]
  45473c:	ldr	x21, [x1, #72]
  454740:	stp	x23, x24, [sp, #48]
  454744:	mov	x23, x0
  454748:	ldr	x1, [x1, #104]
  45474c:	cmp	x1, x21
  454750:	b.le	454978 <_obstack_memory_used@@Base+0x3568>
  454754:	ldr	x24, [x19, #8]
  454758:	mov	x22, x2
  45475c:	ldrb	w1, [x0, #10]
  454760:	ldr	w0, [x19, #144]
  454764:	ldrb	w20, [x24, x21]
  454768:	and	w1, w1, #0xffffff9f
  45476c:	strb	w20, [x23]
  454770:	cmp	w0, #0x1
  454774:	strb	w1, [x23, #10]
  454778:	b.le	45482c <_obstack_memory_used@@Base+0x341c>
  45477c:	ldr	x1, [x19, #48]
  454780:	cmp	x21, x1
  454784:	b.eq	454798 <_obstack_memory_used@@Base+0x3388>  // b.none
  454788:	ldr	x1, [x19, #16]
  45478c:	ldr	w1, [x1, x21, lsl #2]
  454790:	cmn	w1, #0x1
  454794:	b.eq	454a08 <_obstack_memory_used@@Base+0x35f8>  // b.none
  454798:	cmp	w20, #0x5c
  45479c:	b.eq	454874 <_obstack_memory_used@@Base+0x3464>  // b.none
  4547a0:	ldr	x0, [x19, #16]
  4547a4:	str	x25, [sp, #64]
  4547a8:	mov	w1, #0x1                   	// #1
  4547ac:	strb	w1, [x23, #8]
  4547b0:	ldr	w25, [x0, x21, lsl #2]
  4547b4:	mov	w0, w25
  4547b8:	bl	404990 <iswalnum@plt>
  4547bc:	cmp	w25, #0x5f
  4547c0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4547c4:	ldrb	w0, [x23, #10]
  4547c8:	cset	w1, ne  // ne = any
  4547cc:	bfi	w0, w1, #6, #1
  4547d0:	strb	w0, [x23, #10]
  4547d4:	ldr	x25, [sp, #64]
  4547d8:	cmp	w20, #0x2e
  4547dc:	b.eq	454d50 <_obstack_memory_used@@Base+0x3940>  // b.none
  4547e0:	b.hi	4548a4 <_obstack_memory_used@@Base+0x3494>  // b.pmore
  4547e4:	cmp	w20, #0x29
  4547e8:	b.eq	454d34 <_obstack_memory_used@@Base+0x3924>  // b.none
  4547ec:	b.ls	4548dc <_obstack_memory_used@@Base+0x34cc>  // b.plast
  4547f0:	cmp	w20, #0x2a
  4547f4:	b.eq	454d40 <_obstack_memory_used@@Base+0x3930>  // b.none
  4547f8:	cmp	w20, #0x2b
  4547fc:	b.ne	454d2c <_obstack_memory_used@@Base+0x391c>  // b.any
  454800:	mov	x1, #0x402                 	// #1026
  454804:	mov	w0, #0x1                   	// #1
  454808:	tst	x22, x1
  45480c:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454810:	mov	w1, #0x12                  	// #18
  454814:	strb	w1, [x23, #8]
  454818:	ldp	x19, x20, [sp, #16]
  45481c:	ldp	x21, x22, [sp, #32]
  454820:	ldp	x23, x24, [sp, #48]
  454824:	ldp	x29, x30, [sp], #96
  454828:	ret
  45482c:	cmp	w20, #0x5c
  454830:	b.eq	454874 <_obstack_memory_used@@Base+0x3464>  // b.none
  454834:	bl	404740 <__ctype_b_loc@plt>
  454838:	ldr	x0, [x0]
  45483c:	ubfiz	x2, x20, #1, #8
  454840:	cmp	w20, #0x5f
  454844:	ldr	w1, [x23, #8]
  454848:	ldrh	w0, [x0, x2]
  45484c:	and	w1, w1, #0xffffff00
  454850:	and	w1, w1, #0xffbfffff
  454854:	and	w0, w0, #0x8
  454858:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  45485c:	cset	w0, ne  // ne = any
  454860:	lsl	w0, w0, #22
  454864:	orr	w0, w0, #0x1
  454868:	orr	w0, w0, w1
  45486c:	str	w0, [x23, #8]
  454870:	b	4547d8 <_obstack_memory_used@@Base+0x33c8>
  454874:	ldr	x2, [x19, #88]
  454878:	add	x1, x21, #0x1
  45487c:	cmp	x1, x2
  454880:	b.lt	454998 <_obstack_memory_used@@Base+0x3588>  // b.tstop
  454884:	mov	w1, #0x24                  	// #36
  454888:	strb	w1, [x23, #8]
  45488c:	mov	w0, #0x1                   	// #1
  454890:	ldp	x19, x20, [sp, #16]
  454894:	ldp	x21, x22, [sp, #32]
  454898:	ldp	x23, x24, [sp, #48]
  45489c:	ldp	x29, x30, [sp], #96
  4548a0:	ret
  4548a4:	cmp	w20, #0x7b
  4548a8:	b.eq	454d08 <_obstack_memory_used@@Base+0x38f8>  // b.none
  4548ac:	b.ls	454900 <_obstack_memory_used@@Base+0x34f0>  // b.plast
  4548b0:	cmp	w20, #0x7c
  4548b4:	b.eq	454d1c <_obstack_memory_used@@Base+0x390c>  // b.none
  4548b8:	cmp	w20, #0x7d
  4548bc:	b.ne	454d2c <_obstack_memory_used@@Base+0x391c>  // b.any
  4548c0:	mov	x1, #0x1200                	// #4608
  4548c4:	mov	w0, #0x1                   	// #1
  4548c8:	bics	xzr, x1, x22
  4548cc:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  4548d0:	mov	w1, #0x18                  	// #24
  4548d4:	strb	w1, [x23, #8]
  4548d8:	b	454818 <_obstack_memory_used@@Base+0x3408>
  4548dc:	cmp	w20, #0x24
  4548e0:	b.eq	454ca4 <_obstack_memory_used@@Base+0x3894>  // b.none
  4548e4:	cmp	w20, #0x28
  4548e8:	mov	w0, #0x1                   	// #1
  4548ec:	b.ne	454938 <_obstack_memory_used@@Base+0x3528>  // b.any
  4548f0:	tbz	w22, #13, 454818 <_obstack_memory_used@@Base+0x3408>
  4548f4:	mov	w1, #0x8                   	// #8
  4548f8:	strb	w1, [x23, #8]
  4548fc:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454900:	cmp	w20, #0x5b
  454904:	b.eq	454d60 <_obstack_memory_used@@Base+0x3950>  // b.none
  454908:	cmp	w20, #0x5e
  45490c:	b.ne	454954 <_obstack_memory_used@@Base+0x3544>  // b.any
  454910:	and	x0, x22, #0xfffff8
  454914:	ands	x0, x0, #0xffffffffff80000f
  454918:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  45491c:	b.ne	454ac4 <_obstack_memory_used@@Base+0x36b4>  // b.any
  454920:	mov	w1, #0xc                   	// #12
  454924:	mov	w2, #0x10                  	// #16
  454928:	mov	w0, #0x1                   	// #1
  45492c:	str	w2, [x23]
  454930:	strb	w1, [x23, #8]
  454934:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454938:	cmp	w20, #0xa
  45493c:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454940:	tbz	w22, #11, 454818 <_obstack_memory_used@@Base+0x3408>
  454944:	mov	w1, #0xa                   	// #10
  454948:	mov	w0, #0x1                   	// #1
  45494c:	strb	w1, [x23, #8]
  454950:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454954:	cmp	w20, #0x3f
  454958:	b.ne	454d2c <_obstack_memory_used@@Base+0x391c>  // b.any
  45495c:	mov	x1, #0x402                 	// #1026
  454960:	mov	w0, #0x1                   	// #1
  454964:	tst	x22, x1
  454968:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  45496c:	mov	w1, #0x13                  	// #19
  454970:	strb	w1, [x23, #8]
  454974:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454978:	mov	w1, #0x2                   	// #2
  45497c:	strb	w1, [x23, #8]
  454980:	mov	w0, #0x0                   	// #0
  454984:	ldp	x19, x20, [sp, #16]
  454988:	ldp	x21, x22, [sp, #32]
  45498c:	ldp	x23, x24, [sp, #48]
  454990:	ldp	x29, x30, [sp], #96
  454994:	ret
  454998:	ldrb	w2, [x19, #139]
  45499c:	cbnz	w2, 454a64 <_obstack_memory_used@@Base+0x3654>
  4549a0:	ldrb	w20, [x24, x1]
  4549a4:	mov	w2, #0x1                   	// #1
  4549a8:	strb	w20, [x23]
  4549ac:	strb	w2, [x23, #8]
  4549b0:	cmp	w0, #0x1
  4549b4:	b.le	454a2c <_obstack_memory_used@@Base+0x361c>
  4549b8:	ldr	x2, [x19, #16]
  4549bc:	add	x2, x2, x1, lsl #2
  4549c0:	ldr	w19, [x2]
  4549c4:	mov	w0, w19
  4549c8:	bl	404990 <iswalnum@plt>
  4549cc:	cmp	w19, #0x5f
  4549d0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4549d4:	ldrb	w0, [x23, #10]
  4549d8:	cset	w1, ne  // ne = any
  4549dc:	bfi	w0, w1, #6, #1
  4549e0:	strb	w0, [x23, #10]
  4549e4:	sub	w0, w20, #0x27
  4549e8:	cmp	w0, #0x56
  4549ec:	b.hi	454a5c <_obstack_memory_used@@Base+0x364c>  // b.pmore
  4549f0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4549f4:	add	x1, x1, #0x160
  4549f8:	ldrh	w0, [x1, w0, uxtw #1]
  4549fc:	adr	x1, 454a08 <_obstack_memory_used@@Base+0x35f8>
  454a00:	add	x0, x1, w0, sxth #2
  454a04:	br	x0
  454a08:	ldr	w1, [x23, #8]
  454a0c:	mov	w2, #0x1                   	// #1
  454a10:	movk	w2, #0x20, lsl #16
  454a14:	mov	w0, #0x1                   	// #1
  454a18:	and	w1, w1, #0xffffff00
  454a1c:	and	w1, w1, #0xffdfffff
  454a20:	orr	w1, w1, w2
  454a24:	str	w1, [x23, #8]
  454a28:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454a2c:	bl	404740 <__ctype_b_loc@plt>
  454a30:	ldr	x0, [x0]
  454a34:	ubfiz	x1, x20, #1, #8
  454a38:	cmp	w20, #0x5f
  454a3c:	ldrb	w2, [x23, #10]
  454a40:	ldrh	w0, [x0, x1]
  454a44:	and	w0, w0, #0x8
  454a48:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  454a4c:	cset	w0, ne  // ne = any
  454a50:	bfi	w2, w0, #6, #1
  454a54:	strb	w2, [x23, #10]
  454a58:	b	4549e4 <_obstack_memory_used@@Base+0x35d4>
  454a5c:	mov	w0, #0x2                   	// #2
  454a60:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454a64:	cmp	w0, #0x1
  454a68:	b.le	454a9c <_obstack_memory_used@@Base+0x368c>
  454a6c:	ldr	x2, [x19, #16]
  454a70:	ldr	w3, [x2, x1, lsl #2]
  454a74:	add	x2, x2, x1, lsl #2
  454a78:	cmn	w3, #0x1
  454a7c:	b.eq	454d7c <_obstack_memory_used@@Base+0x396c>  // b.none
  454a80:	ldr	x3, [x19, #48]
  454a84:	add	x21, x21, #0x2
  454a88:	cmp	x3, x21
  454a8c:	b.eq	454a9c <_obstack_memory_used@@Base+0x368c>  // b.none
  454a90:	ldr	w3, [x2, #4]
  454a94:	cmn	w3, #0x1
  454a98:	b.eq	454d7c <_obstack_memory_used@@Base+0x396c>  // b.none
  454a9c:	ldrb	w3, [x19, #140]
  454aa0:	ldr	x2, [x19]
  454aa4:	ldr	x4, [x19, #40]
  454aa8:	cbz	w3, 454d70 <_obstack_memory_used@@Base+0x3960>
  454aac:	ldr	x3, [x19, #24]
  454ab0:	add	x2, x2, x4
  454ab4:	ldr	x3, [x3, x1, lsl #3]
  454ab8:	ldrb	w20, [x2, x3]
  454abc:	tbz	w20, #7, 4549a4 <_obstack_memory_used@@Base+0x3594>
  454ac0:	b	4549a0 <_obstack_memory_used@@Base+0x3590>
  454ac4:	add	x21, x24, x21
  454ac8:	tst	x22, #0x800
  454acc:	mov	w0, #0x1                   	// #1
  454ad0:	ldurb	w1, [x21, #-1]
  454ad4:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  454ad8:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454adc:	b	454920 <_obstack_memory_used@@Base+0x3510>
  454ae0:	mov	w0, #0x2                   	// #2
  454ae4:	tbnz	w22, #14, 454818 <_obstack_memory_used@@Base+0x3408>
  454ae8:	sub	w1, w20, #0x31
  454aec:	mov	w2, #0x4                   	// #4
  454af0:	strb	w2, [x23, #8]
  454af4:	sxtw	x1, w1
  454af8:	str	x1, [x23]
  454afc:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454b00:	mov	x0, #0x402                 	// #1026
  454b04:	and	x0, x22, x0
  454b08:	cmp	x0, #0x2
  454b0c:	mov	w0, #0x2                   	// #2
  454b10:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454b14:	b	454810 <_obstack_memory_used@@Base+0x3400>
  454b18:	mov	w0, #0x2                   	// #2
  454b1c:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454b20:	mov	w1, #0xc                   	// #12
  454b24:	mov	w2, #0x9                   	// #9
  454b28:	str	w2, [x23]
  454b2c:	strb	w1, [x23, #8]
  454b30:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454b34:	mov	w0, #0x2                   	// #2
  454b38:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454b3c:	mov	w1, #0xc                   	// #12
  454b40:	mov	w2, #0x6                   	// #6
  454b44:	str	w2, [x23]
  454b48:	strb	w1, [x23, #8]
  454b4c:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454b50:	mov	w0, #0x2                   	// #2
  454b54:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454b58:	mov	w1, #0x20                  	// #32
  454b5c:	strb	w1, [x23, #8]
  454b60:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454b64:	mov	w0, #0x2                   	// #2
  454b68:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454b6c:	mov	w1, #0x22                  	// #34
  454b70:	strb	w1, [x23, #8]
  454b74:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454b78:	mov	w0, #0x2                   	// #2
  454b7c:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454b80:	mov	w1, #0xc                   	// #12
  454b84:	mov	w2, #0x100                 	// #256
  454b88:	str	w2, [x23]
  454b8c:	strb	w1, [x23, #8]
  454b90:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454b94:	mov	w0, #0x2                   	// #2
  454b98:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454b9c:	mov	w1, #0xc                   	// #12
  454ba0:	mov	w2, #0x40                  	// #64
  454ba4:	str	w2, [x23]
  454ba8:	strb	w1, [x23, #8]
  454bac:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454bb0:	mov	w0, #0x2                   	// #2
  454bb4:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454bb8:	mov	w1, #0x21                  	// #33
  454bbc:	strb	w1, [x23, #8]
  454bc0:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454bc4:	mov	w0, #0x2                   	// #2
  454bc8:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454bcc:	mov	w1, #0x23                  	// #35
  454bd0:	strb	w1, [x23, #8]
  454bd4:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454bd8:	mov	w0, #0x2                   	// #2
  454bdc:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454be0:	mov	w1, #0xc                   	// #12
  454be4:	mov	w2, #0x200                 	// #512
  454be8:	str	w2, [x23]
  454bec:	strb	w1, [x23, #8]
  454bf0:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454bf4:	mov	x0, #0x402                 	// #1026
  454bf8:	and	x0, x22, x0
  454bfc:	cmp	x0, #0x2
  454c00:	mov	w0, #0x2                   	// #2
  454c04:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454c08:	b	45496c <_obstack_memory_used@@Base+0x355c>
  454c0c:	mov	x1, #0x8400                	// #33792
  454c10:	mov	w0, #0x2                   	// #2
  454c14:	tst	x22, x1
  454c18:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454c1c:	mov	w1, #0xa                   	// #10
  454c20:	strb	w1, [x23, #8]
  454c24:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454c28:	mov	x0, #0x1200                	// #4608
  454c2c:	and	x0, x22, x0
  454c30:	cmp	x0, #0x200
  454c34:	mov	w0, #0x2                   	// #2
  454c38:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454c3c:	nop
  454c40:	mov	w1, #0x17                  	// #23
  454c44:	strb	w1, [x23, #8]
  454c48:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454c4c:	mov	x0, #0x1200                	// #4608
  454c50:	and	x0, x22, x0
  454c54:	cmp	x0, #0x200
  454c58:	mov	w0, #0x2                   	// #2
  454c5c:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454c60:	b	4548d0 <_obstack_memory_used@@Base+0x34c0>
  454c64:	mov	w0, #0x2                   	// #2
  454c68:	tbnz	w22, #13, 454818 <_obstack_memory_used@@Base+0x3408>
  454c6c:	nop
  454c70:	mov	w1, #0x9                   	// #9
  454c74:	strb	w1, [x23, #8]
  454c78:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454c7c:	mov	w0, #0x2                   	// #2
  454c80:	tbnz	w22, #13, 454818 <_obstack_memory_used@@Base+0x3408>
  454c84:	b	4548f4 <_obstack_memory_used@@Base+0x34e4>
  454c88:	mov	w0, #0x2                   	// #2
  454c8c:	tbnz	w22, #19, 454818 <_obstack_memory_used@@Base+0x3408>
  454c90:	mov	w1, #0xc                   	// #12
  454c94:	mov	w2, #0x80                  	// #128
  454c98:	str	w2, [x23]
  454c9c:	strb	w1, [x23, #8]
  454ca0:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454ca4:	tbnz	w22, #3, 454cf0 <_obstack_memory_used@@Base+0x38e0>
  454ca8:	ldr	x0, [x19, #88]
  454cac:	add	x21, x21, #0x1
  454cb0:	cmp	x21, x0
  454cb4:	b.eq	454cf0 <_obstack_memory_used@@Base+0x38e0>  // b.none
  454cb8:	str	x21, [x19, #72]
  454cbc:	mov	x2, x22
  454cc0:	mov	x1, x19
  454cc4:	add	x0, sp, #0x50
  454cc8:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  454ccc:	ldr	x2, [x19, #72]
  454cd0:	mov	w0, #0x1                   	// #1
  454cd4:	ldrb	w1, [sp, #88]
  454cd8:	sub	x2, x2, #0x1
  454cdc:	str	x2, [x19, #72]
  454ce0:	sub	w1, w1, #0x9
  454ce4:	and	w1, w1, #0xff
  454ce8:	cmp	w1, w0
  454cec:	b.hi	454818 <_obstack_memory_used@@Base+0x3408>  // b.pmore
  454cf0:	mov	w1, #0xc                   	// #12
  454cf4:	mov	w2, #0x20                  	// #32
  454cf8:	mov	w0, #0x1                   	// #1
  454cfc:	str	w2, [x23]
  454d00:	strb	w1, [x23, #8]
  454d04:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454d08:	mov	x1, #0x1200                	// #4608
  454d0c:	mov	w0, #0x1                   	// #1
  454d10:	bics	xzr, x1, x22
  454d14:	b.ne	454818 <_obstack_memory_used@@Base+0x3408>  // b.any
  454d18:	b	454c40 <_obstack_memory_used@@Base+0x3830>
  454d1c:	mov	x0, #0x8400                	// #33792
  454d20:	and	x0, x22, x0
  454d24:	cmp	x0, #0x8, lsl #12
  454d28:	b.eq	454944 <_obstack_memory_used@@Base+0x3534>  // b.none
  454d2c:	mov	w0, #0x1                   	// #1
  454d30:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454d34:	mov	w0, #0x1                   	// #1
  454d38:	tbz	w22, #13, 454818 <_obstack_memory_used@@Base+0x3408>
  454d3c:	b	454c70 <_obstack_memory_used@@Base+0x3860>
  454d40:	mov	w1, #0xb                   	// #11
  454d44:	mov	w0, #0x1                   	// #1
  454d48:	strb	w1, [x23, #8]
  454d4c:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454d50:	mov	w1, #0x5                   	// #5
  454d54:	mov	w0, #0x1                   	// #1
  454d58:	strb	w1, [x23, #8]
  454d5c:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454d60:	mov	w1, #0x14                  	// #20
  454d64:	mov	w0, #0x1                   	// #1
  454d68:	strb	w1, [x23, #8]
  454d6c:	b	454818 <_obstack_memory_used@@Base+0x3408>
  454d70:	add	x2, x2, x1
  454d74:	ldrb	w20, [x2, x4]
  454d78:	b	4549a4 <_obstack_memory_used@@Base+0x3594>
  454d7c:	ldrb	w20, [x24, x1]
  454d80:	mov	w0, #0x1                   	// #1
  454d84:	strb	w20, [x23]
  454d88:	strb	w0, [x23, #8]
  454d8c:	b	4549c0 <_obstack_memory_used@@Base+0x35b0>
  454d90:	mov	x8, x2
  454d94:	ldr	w2, [x1, #144]
  454d98:	mov	x10, x0
  454d9c:	and	w5, w5, #0xff
  454da0:	cmp	w2, #0x1
  454da4:	ldr	x7, [x1, #72]
  454da8:	b.eq	454de8 <_obstack_memory_used@@Base+0x39d8>  // b.none
  454dac:	ldr	x2, [x1, #48]
  454db0:	add	x6, x7, #0x1
  454db4:	cmp	x6, x2
  454db8:	b.ge	454de8 <_obstack_memory_used@@Base+0x39d8>  // b.tcont
  454dbc:	ldr	x9, [x1, #16]
  454dc0:	b	454dd0 <_obstack_memory_used@@Base+0x39c0>
  454dc4:	add	x6, x6, #0x1
  454dc8:	cmp	x6, x2
  454dcc:	b.eq	454ed4 <_obstack_memory_used@@Base+0x3ac4>  // b.none
  454dd0:	ldr	w0, [x9, x6, lsl #2]
  454dd4:	sub	w11, w6, w7
  454dd8:	cmn	w0, #0x1
  454ddc:	b.eq	454dc4 <_obstack_memory_used@@Base+0x39b4>  // b.none
  454de0:	cmp	w11, #0x1
  454de4:	b.ne	454ed4 <_obstack_memory_used@@Base+0x3ac4>  // b.any
  454de8:	ldrb	w6, [x8, #8]
  454dec:	add	x3, x7, w3, sxtw
  454df0:	str	x3, [x1, #72]
  454df4:	and	w0, w6, #0xfffffffb
  454df8:	cmp	w0, #0x1a
  454dfc:	ccmp	w6, #0x1c, #0x4, ne  // ne = any
  454e00:	b.eq	454e24 <_obstack_memory_used@@Base+0x3a14>  // b.none
  454e04:	cmp	w5, #0x0
  454e08:	ccmp	w6, #0x16, #0x0, eq  // eq = none
  454e0c:	b.eq	454f94 <_obstack_memory_used@@Base+0x3b84>  // b.none
  454e10:	ldrb	w1, [x8]
  454e14:	mov	w0, #0x0                   	// #0
  454e18:	str	wzr, [x10]
  454e1c:	strb	w1, [x10, #8]
  454e20:	ret
  454e24:	ldr	x7, [x1, #104]
  454e28:	cmp	x3, x7
  454e2c:	b.ge	454ecc <_obstack_memory_used@@Base+0x3abc>  // b.tcont
  454e30:	ldrb	w9, [x8]
  454e34:	mov	x2, #0x0                   	// #0
  454e38:	b	454e5c <_obstack_memory_used@@Base+0x3a4c>
  454e3c:	ldr	x0, [x10, #8]
  454e40:	strb	w5, [x0, x2]
  454e44:	add	x2, x2, #0x1
  454e48:	cmp	x2, #0x20
  454e4c:	b.eq	454ecc <_obstack_memory_used@@Base+0x3abc>  // b.none
  454e50:	ldrb	w6, [x8, #8]
  454e54:	ldr	x3, [x1, #72]
  454e58:	ldr	x7, [x1, #104]
  454e5c:	cmp	w6, #0x1e
  454e60:	add	x4, x3, #0x1
  454e64:	mov	w6, w2
  454e68:	b.eq	454ef0 <_obstack_memory_used@@Base+0x3ae0>  // b.none
  454e6c:	ldr	x0, [x1, #8]
  454e70:	str	x4, [x1, #72]
  454e74:	ldrb	w5, [x0, x3]
  454e78:	cmp	x7, x4
  454e7c:	b.le	454ecc <_obstack_memory_used@@Base+0x3abc>
  454e80:	cmp	w9, w5
  454e84:	b.ne	454e3c <_obstack_memory_used@@Base+0x3a2c>  // b.any
  454e88:	ldr	x0, [x1, #8]
  454e8c:	ldrb	w0, [x0, x4]
  454e90:	cmp	w0, #0x5d
  454e94:	b.ne	454e3c <_obstack_memory_used@@Base+0x3a2c>  // b.any
  454e98:	ldr	x0, [x10, #8]
  454e9c:	add	x4, x4, #0x1
  454ea0:	str	x4, [x1, #72]
  454ea4:	strb	wzr, [x0, w6, sxtw]
  454ea8:	ldrb	w0, [x8, #8]
  454eac:	cmp	w0, #0x1c
  454eb0:	b.eq	454fe8 <_obstack_memory_used@@Base+0x3bd8>  // b.none
  454eb4:	cmp	w0, #0x1e
  454eb8:	b.eq	454fd8 <_obstack_memory_used@@Base+0x3bc8>  // b.none
  454ebc:	cmp	w0, #0x1a
  454ec0:	mov	w0, #0x0                   	// #0
  454ec4:	b.eq	454fcc <_obstack_memory_used@@Base+0x3bbc>  // b.none
  454ec8:	ret
  454ecc:	mov	w0, #0x7                   	// #7
  454ed0:	ret
  454ed4:	mov	w0, #0x1                   	// #1
  454ed8:	str	w0, [x10]
  454edc:	mov	w0, #0x0                   	// #0
  454ee0:	ldr	w2, [x9, x7, lsl #2]
  454ee4:	str	w2, [x10, #8]
  454ee8:	str	x6, [x1, #72]
  454eec:	ret
  454ef0:	ldrb	w0, [x1, #139]
  454ef4:	cbz	w0, 454e6c <_obstack_memory_used@@Base+0x3a5c>
  454ef8:	ldrb	w0, [x1, #140]
  454efc:	cbz	w0, 454f7c <_obstack_memory_used@@Base+0x3b6c>
  454f00:	ldr	x11, [x1, #48]
  454f04:	cmp	x3, x11
  454f08:	b.eq	454f1c <_obstack_memory_used@@Base+0x3b0c>  // b.none
  454f0c:	ldr	x0, [x1, #16]
  454f10:	ldr	w0, [x0, x3, lsl #2]
  454f14:	cmn	w0, #0x1
  454f18:	b.eq	454e6c <_obstack_memory_used@@Base+0x3a5c>  // b.none
  454f1c:	ldr	x5, [x1, #24]
  454f20:	ldr	x0, [x1]
  454f24:	ldr	x12, [x5, x3, lsl #3]
  454f28:	ldr	x5, [x1, #40]
  454f2c:	add	x0, x0, x12
  454f30:	ldrb	w5, [x0, x5]
  454f34:	tbnz	w5, #7, 454e6c <_obstack_memory_used@@Base+0x3a5c>
  454f38:	ldr	w0, [x1, #144]
  454f3c:	cmp	w0, #0x1
  454f40:	b.eq	454f74 <_obstack_memory_used@@Base+0x3b64>  // b.none
  454f44:	cmp	x11, x4
  454f48:	b.le	454f74 <_obstack_memory_used@@Base+0x3b64>
  454f4c:	ldr	x12, [x1, #16]
  454f50:	b	454f5c <_obstack_memory_used@@Base+0x3b4c>
  454f54:	cmp	x11, x4
  454f58:	b.eq	454f74 <_obstack_memory_used@@Base+0x3b64>  // b.none
  454f5c:	ldr	w0, [x12, x4, lsl #2]
  454f60:	sub	w13, w4, w3
  454f64:	add	x4, x4, #0x1
  454f68:	cmn	w0, #0x1
  454f6c:	b.eq	454f54 <_obstack_memory_used@@Base+0x3b44>  // b.none
  454f70:	add	x4, x3, w13, sxtw
  454f74:	str	x4, [x1, #72]
  454f78:	b	454e78 <_obstack_memory_used@@Base+0x3a68>
  454f7c:	ldr	x0, [x1]
  454f80:	str	x4, [x1, #72]
  454f84:	ldr	x5, [x1, #40]
  454f88:	add	x3, x0, x3
  454f8c:	ldrb	w5, [x3, x5]
  454f90:	b	454e78 <_obstack_memory_used@@Base+0x3a68>
  454f94:	stp	x29, x30, [sp, #-32]!
  454f98:	mov	x2, x4
  454f9c:	mov	x29, sp
  454fa0:	add	x0, sp, #0x10
  454fa4:	bl	451570 <_obstack_memory_used@@Base+0x160>
  454fa8:	ldrb	w0, [sp, #24]
  454fac:	cmp	w0, #0x15
  454fb0:	b.ne	454ff8 <_obstack_memory_used@@Base+0x3be8>  // b.any
  454fb4:	ldrb	w1, [x8]
  454fb8:	mov	w0, #0x0                   	// #0
  454fbc:	str	wzr, [x10]
  454fc0:	strb	w1, [x10, #8]
  454fc4:	ldp	x29, x30, [sp], #32
  454fc8:	ret
  454fcc:	mov	w1, #0x3                   	// #3
  454fd0:	str	w1, [x10]
  454fd4:	ret
  454fd8:	mov	w1, #0x4                   	// #4
  454fdc:	mov	w0, #0x0                   	// #0
  454fe0:	str	w1, [x10]
  454fe4:	ret
  454fe8:	mov	w1, #0x2                   	// #2
  454fec:	mov	w0, #0x0                   	// #0
  454ff0:	str	w1, [x10]
  454ff4:	ret
  454ff8:	mov	w0, #0xb                   	// #11
  454ffc:	b	454fc4 <_obstack_memory_used@@Base+0x3bb4>
  455000:	stp	x29, x30, [sp, #-96]!
  455004:	mov	x10, x0
  455008:	mov	x18, x4
  45500c:	mov	x29, sp
  455010:	ldr	x13, [x0, #200]
  455014:	mov	x15, x6
  455018:	mov	x11, #0x0                   	// #0
  45501c:	stp	x19, x20, [sp, #16]
  455020:	mov	x9, x13
  455024:	mov	x20, x1
  455028:	mov	x19, x2
  45502c:	stp	x21, x22, [sp, #32]
  455030:	mov	x21, x3
  455034:	mov	x22, x5
  455038:	stp	x23, x24, [sp, #48]
  45503c:	ldr	x23, [x0, #152]
  455040:	b	455064 <_obstack_memory_used@@Base+0x3c54>
  455044:	asr	x7, x7, #1
  455048:	ldr	x0, [x10, #216]
  45504c:	add	x8, x7, x7, lsl #2
  455050:	add	x8, x0, x8, lsl #3
  455054:	ldr	x0, [x8, #8]
  455058:	cmp	x0, x18
  45505c:	b.lt	4551b4 <_obstack_memory_used@@Base+0x3da4>  // b.tstop
  455060:	mov	x9, x7
  455064:	add	x7, x9, x11
  455068:	cmp	x9, x11
  45506c:	b.gt	455044 <_obstack_memory_used@@Base+0x3c34>
  455070:	cmp	x13, x11
  455074:	b.le	45526c <_obstack_memory_used@@Base+0x3e5c>
  455078:	ldr	x1, [x10, #216]
  45507c:	add	x0, x11, x11, lsl #2
  455080:	add	x0, x1, x0, lsl #3
  455084:	ldr	x0, [x0, #8]
  455088:	cmp	x18, x0
  45508c:	csinv	x11, x11, xzr, eq  // eq = none
  455090:	mov	x9, x13
  455094:	mov	x12, #0x0                   	// #0
  455098:	b	4550bc <_obstack_memory_used@@Base+0x3cac>
  45509c:	asr	x7, x7, #1
  4550a0:	ldr	x0, [x10, #216]
  4550a4:	add	x8, x7, x7, lsl #2
  4550a8:	add	x8, x0, x8, lsl #3
  4550ac:	ldr	x0, [x8, #8]
  4550b0:	cmp	x0, x15
  4550b4:	b.lt	4551bc <_obstack_memory_used@@Base+0x3dac>  // b.tstop
  4550b8:	mov	x9, x7
  4550bc:	add	x7, x9, x12
  4550c0:	cmp	x9, x12
  4550c4:	b.gt	45509c <_obstack_memory_used@@Base+0x3c8c>
  4550c8:	cmp	x13, x12
  4550cc:	b.le	455274 <_obstack_memory_used@@Base+0x3e64>
  4550d0:	ldr	x1, [x10, #216]
  4550d4:	add	x0, x12, x12, lsl #2
  4550d8:	add	x0, x1, x0, lsl #3
  4550dc:	ldr	x0, [x0, #8]
  4550e0:	cmp	x15, x0
  4550e4:	csinv	x12, x12, xzr, eq  // eq = none
  4550e8:	ldr	x4, [x20]
  4550ec:	mov	x24, #0x0                   	// #0
  4550f0:	cmp	x4, #0x0
  4550f4:	b.le	4551fc <_obstack_memory_used@@Base+0x3dec>
  4550f8:	stp	x25, x26, [sp, #64]
  4550fc:	str	x27, [sp, #80]
  455100:	ldr	x0, [x19]
  455104:	lsl	x26, x24, #3
  455108:	ldr	x2, [x10, #216]
  45510c:	ldr	x0, [x0, x24, lsl #3]
  455110:	ldr	x5, [x23]
  455114:	add	x0, x0, x0, lsl #2
  455118:	add	x1, x2, x0, lsl #3
  45511c:	ldr	x0, [x2, x0, lsl #3]
  455120:	ldr	x3, [x1, #16]
  455124:	lsl	x0, x0, #4
  455128:	cmp	x18, x3
  45512c:	ldr	x27, [x5, x0]
  455130:	b.lt	455250 <_obstack_memory_used@@Base+0x3e40>  // b.tstop
  455134:	ldr	x4, [x1, #24]
  455138:	cmp	x18, x4
  45513c:	b.gt	455248 <_obstack_memory_used@@Base+0x3e38>
  455140:	cmp	x18, x3
  455144:	cset	w1, eq  // eq = none
  455148:	cmp	x18, x4
  45514c:	b.eq	455204 <_obstack_memory_used@@Base+0x3df4>  // b.none
  455150:	cmp	x18, x3
  455154:	mov	w25, #0x0                   	// #0
  455158:	b.eq	455208 <_obstack_memory_used@@Base+0x3df8>  // b.none
  45515c:	cmp	x15, x3
  455160:	b.lt	455194 <_obstack_memory_used@@Base+0x3d84>  // b.tstop
  455164:	cmp	x15, x4
  455168:	mov	w0, #0x1                   	// #1
  45516c:	b.gt	45518c <_obstack_memory_used@@Base+0x3d7c>
  455170:	cmp	x15, x3
  455174:	cset	w1, eq  // eq = none
  455178:	cmp	x15, x4
  45517c:	b.eq	4551c4 <_obstack_memory_used@@Base+0x3db4>  // b.none
  455180:	cmp	x15, x3
  455184:	mov	w0, #0x0                   	// #0
  455188:	b.eq	4551c8 <_obstack_memory_used@@Base+0x3db8>  // b.none
  45518c:	cmp	w0, w25
  455190:	b.eq	4551e4 <_obstack_memory_used@@Base+0x3dd4>  // b.none
  455194:	ldp	x25, x26, [sp, #64]
  455198:	mov	w0, #0x1                   	// #1
  45519c:	ldr	x27, [sp, #80]
  4551a0:	ldp	x19, x20, [sp, #16]
  4551a4:	ldp	x21, x22, [sp, #32]
  4551a8:	ldp	x23, x24, [sp, #48]
  4551ac:	ldp	x29, x30, [sp], #96
  4551b0:	ret
  4551b4:	add	x11, x7, #0x1
  4551b8:	b	455064 <_obstack_memory_used@@Base+0x3c54>
  4551bc:	add	x12, x7, #0x1
  4551c0:	b	4550bc <_obstack_memory_used@@Base+0x3cac>
  4551c4:	orr	w1, w1, #0x2
  4551c8:	mov	x2, x27
  4551cc:	mov	x4, x12
  4551d0:	mov	x3, x22
  4551d4:	mov	x0, x10
  4551d8:	bl	4516e0 <_obstack_memory_used@@Base+0x2d0>
  4551dc:	cmp	w0, w25
  4551e0:	b.ne	455194 <_obstack_memory_used@@Base+0x3d84>  // b.any
  4551e4:	ldr	x4, [x20]
  4551e8:	add	x24, x24, #0x1
  4551ec:	cmp	x24, x4
  4551f0:	b.lt	455100 <_obstack_memory_used@@Base+0x3cf0>  // b.tstop
  4551f4:	ldp	x25, x26, [sp, #64]
  4551f8:	ldr	x27, [sp, #80]
  4551fc:	mov	w0, #0x0                   	// #0
  455200:	b	4551a0 <_obstack_memory_used@@Base+0x3d90>
  455204:	orr	w1, w1, #0x2
  455208:	mov	x3, x21
  45520c:	mov	x2, x27
  455210:	mov	x4, x11
  455214:	mov	x0, x10
  455218:	bl	4516e0 <_obstack_memory_used@@Base+0x2d0>
  45521c:	mov	w25, w0
  455220:	ldr	x2, [x19]
  455224:	ldr	x1, [x10, #216]
  455228:	ldr	x0, [x2, x26]
  45522c:	add	x0, x0, x0, lsl #2
  455230:	add	x0, x1, x0, lsl #3
  455234:	ldr	x3, [x0, #16]
  455238:	cmp	x15, x3
  45523c:	b.lt	45527c <_obstack_memory_used@@Base+0x3e6c>  // b.tstop
  455240:	ldr	x4, [x0, #24]
  455244:	b	455164 <_obstack_memory_used@@Base+0x3d54>
  455248:	mov	w25, #0x1                   	// #1
  45524c:	b	45515c <_obstack_memory_used@@Base+0x3d4c>
  455250:	cmp	x15, x3
  455254:	b.lt	4551e8 <_obstack_memory_used@@Base+0x3dd8>  // b.tstop
  455258:	ldr	x4, [x1, #24]
  45525c:	cmp	x15, x4
  455260:	b.gt	455194 <_obstack_memory_used@@Base+0x3d84>
  455264:	mov	w25, #0xffffffff            	// #-1
  455268:	b	455170 <_obstack_memory_used@@Base+0x3d60>
  45526c:	mov	x11, #0xffffffffffffffff    	// #-1
  455270:	b	455090 <_obstack_memory_used@@Base+0x3c80>
  455274:	mov	x12, #0xffffffffffffffff    	// #-1
  455278:	b	4550e8 <_obstack_memory_used@@Base+0x3cd8>
  45527c:	mov	w0, #0xffffffff            	// #-1
  455280:	b	45518c <_obstack_memory_used@@Base+0x3d7c>
  455284:	nop
  455288:	lsl	x2, x2, #4
  45528c:	stp	x29, x30, [sp, #-48]!
  455290:	add	x5, x0, x2
  455294:	mov	x29, sp
  455298:	stp	x19, x20, [sp, #16]
  45529c:	ldrb	w6, [x5, #8]
  4552a0:	cmp	w6, #0x7
  4552a4:	b.eq	4553d0 <_obstack_memory_used@@Base+0x3fc0>  // b.none
  4552a8:	ldr	w5, [x3, #144]
  4552ac:	cmp	w5, #0x1
  4552b0:	b.eq	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.none
  4552b4:	ldr	x8, [x3, #48]
  4552b8:	add	x5, x4, #0x1
  4552bc:	cmp	x8, x5
  4552c0:	b.le	455308 <_obstack_memory_used@@Base+0x3ef8>
  4552c4:	mov	w19, #0x1                   	// #1
  4552c8:	stp	x21, x22, [sp, #32]
  4552cc:	ldr	x9, [x3, #16]
  4552d0:	b	4552e0 <_obstack_memory_used@@Base+0x3ed0>
  4552d4:	add	w19, w19, #0x1
  4552d8:	cmp	x5, x8
  4552dc:	b.eq	45531c <_obstack_memory_used@@Base+0x3f0c>  // b.none
  4552e0:	ldr	w7, [x9, x5, lsl #2]
  4552e4:	add	x5, x5, #0x1
  4552e8:	cmn	w7, #0x1
  4552ec:	b.eq	4552d4 <_obstack_memory_used@@Base+0x3ec4>  // b.none
  4552f0:	cmp	w6, #0x5
  4552f4:	b.eq	4553bc <_obstack_memory_used@@Base+0x3fac>  // b.none
  4552f8:	cmp	w6, #0x6
  4552fc:	ccmp	w19, #0x1, #0x4, eq  // eq = none
  455300:	b.ne	455360 <_obstack_memory_used@@Base+0x3f50>  // b.any
  455304:	ldp	x21, x22, [sp, #32]
  455308:	mov	w19, #0x0                   	// #0
  45530c:	mov	w0, w19
  455310:	ldp	x19, x20, [sp, #16]
  455314:	ldp	x29, x30, [sp], #48
  455318:	ret
  45531c:	cmp	w6, #0x5
  455320:	b.ne	4552f8 <_obstack_memory_used@@Base+0x3ee8>  // b.any
  455324:	ldr	x0, [x1]
  455328:	tbnz	w0, #6, 45533c <_obstack_memory_used@@Base+0x3f2c>
  45532c:	ldr	x1, [x3, #8]
  455330:	ldrb	w1, [x1, x4]
  455334:	cmp	w1, #0xa
  455338:	b.eq	455304 <_obstack_memory_used@@Base+0x3ef4>  // b.none
  45533c:	tbz	w0, #7, 45534c <_obstack_memory_used@@Base+0x3f3c>
  455340:	ldr	x0, [x3, #8]
  455344:	ldrb	w0, [x0, x4]
  455348:	cbz	w0, 455304 <_obstack_memory_used@@Base+0x3ef4>
  45534c:	ldp	x21, x22, [sp, #32]
  455350:	mov	w0, w19
  455354:	ldp	x19, x20, [sp, #16]
  455358:	ldp	x29, x30, [sp], #48
  45535c:	ret
  455360:	ldr	x22, [x0, x2]
  455364:	ldr	x5, [x22, #64]
  455368:	ldr	x2, [x22, #40]
  45536c:	cbnz	x5, 45537c <_obstack_memory_used@@Base+0x3f6c>
  455370:	ldr	x0, [x22, #72]
  455374:	orr	x0, x2, x0
  455378:	cbz	x0, 455528 <_obstack_memory_used@@Base+0x4118>
  45537c:	ldr	w20, [x9, x4, lsl #2]
  455380:	cmp	x2, #0x0
  455384:	b.le	4554ac <_obstack_memory_used@@Base+0x409c>
  455388:	mov	x0, #0x0                   	// #0
  45538c:	ldr	x3, [x22]
  455390:	b	45539c <_obstack_memory_used@@Base+0x3f8c>
  455394:	cmp	x0, x2
  455398:	b.eq	4554ac <_obstack_memory_used@@Base+0x409c>  // b.none
  45539c:	ldr	w1, [x3, x0, lsl #2]
  4553a0:	add	x0, x0, #0x1
  4553a4:	cmp	w20, w1
  4553a8:	b.ne	455394 <_obstack_memory_used@@Base+0x3f84>  // b.any
  4553ac:	ldrb	w0, [x22, #32]
  4553b0:	tbnz	w0, #0, 455304 <_obstack_memory_used@@Base+0x3ef4>
  4553b4:	ldp	x21, x22, [sp, #32]
  4553b8:	b	455350 <_obstack_memory_used@@Base+0x3f40>
  4553bc:	cmp	w19, #0x1
  4553c0:	b.eq	455304 <_obstack_memory_used@@Base+0x3ef4>  // b.none
  4553c4:	ldr	x0, [x1]
  4553c8:	tbnz	w0, #6, 45533c <_obstack_memory_used@@Base+0x3f2c>
  4553cc:	b	45532c <_obstack_memory_used@@Base+0x3f1c>
  4553d0:	ldr	x1, [x3, #8]
  4553d4:	ldrb	w0, [x1, x4]
  4553d8:	cmp	w0, #0xc1
  4553dc:	b.ls	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.plast
  4553e0:	ldr	x3, [x3, #88]
  4553e4:	add	x2, x4, #0x1
  4553e8:	cmp	x2, x3
  4553ec:	b.ge	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.tcont
  4553f0:	add	x6, x1, x4
  4553f4:	cmp	w0, #0xdf
  4553f8:	ldrb	w5, [x6, #1]
  4553fc:	b.ls	45555c <_obstack_memory_used@@Base+0x414c>  // b.plast
  455400:	cmp	w0, #0xef
  455404:	b.hi	455538 <_obstack_memory_used@@Base+0x4128>  // b.pmore
  455408:	cmp	w0, #0xe0
  45540c:	mov	w0, #0x9f                  	// #159
  455410:	ccmp	w5, w0, #0x2, eq  // eq = none
  455414:	b.ls	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.plast
  455418:	mov	x0, #0x3                   	// #3
  45541c:	mov	w19, w0
  455420:	add	x4, x4, x0
  455424:	cmp	x3, x4
  455428:	b.lt	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.tstop
  45542c:	ldrb	w1, [x1, x2]
  455430:	sub	w1, w1, #0x80
  455434:	and	w1, w1, #0xff
  455438:	cmp	w1, #0x3f
  45543c:	b.hi	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.pmore
  455440:	ldrb	w1, [x6, #2]
  455444:	sub	w1, w1, #0x80
  455448:	and	w1, w1, #0xff
  45544c:	cmp	w1, #0x3f
  455450:	b.hi	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.pmore
  455454:	cmp	x0, #0x3
  455458:	b.eq	45530c <_obstack_memory_used@@Base+0x3efc>  // b.none
  45545c:	ldrb	w1, [x6, #3]
  455460:	sub	w1, w1, #0x80
  455464:	and	w1, w1, #0xff
  455468:	cmp	w1, #0x3f
  45546c:	b.hi	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.pmore
  455470:	cmp	x0, #0x4
  455474:	b.eq	45530c <_obstack_memory_used@@Base+0x3efc>  // b.none
  455478:	ldrb	w1, [x6, #4]
  45547c:	sub	w1, w1, #0x80
  455480:	and	w1, w1, #0xff
  455484:	cmp	w1, #0x3f
  455488:	b.hi	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.pmore
  45548c:	cmp	x0, #0x6
  455490:	b.ne	45530c <_obstack_memory_used@@Base+0x3efc>  // b.any
  455494:	ldrb	w0, [x6, #5]
  455498:	sub	w0, w0, #0x80
  45549c:	and	w0, w0, #0xff
  4554a0:	cmp	w0, #0x3f
  4554a4:	b.ls	45530c <_obstack_memory_used@@Base+0x3efc>  // b.plast
  4554a8:	b	455308 <_obstack_memory_used@@Base+0x3ef8>
  4554ac:	ldr	x0, [x22, #72]
  4554b0:	cmp	x0, #0x0
  4554b4:	b.le	4554ec <_obstack_memory_used@@Base+0x40dc>
  4554b8:	mov	x21, #0x0                   	// #0
  4554bc:	b	4554cc <_obstack_memory_used@@Base+0x40bc>
  4554c0:	ldr	x0, [x22, #72]
  4554c4:	cmp	x21, x0
  4554c8:	b.ge	4554e8 <_obstack_memory_used@@Base+0x40d8>  // b.tcont
  4554cc:	ldr	x1, [x22, #24]
  4554d0:	mov	w0, w20
  4554d4:	ldr	x1, [x1, x21, lsl #3]
  4554d8:	add	x21, x21, #0x1
  4554dc:	bl	404300 <iswctype@plt>
  4554e0:	cbz	w0, 4554c0 <_obstack_memory_used@@Base+0x40b0>
  4554e4:	b	4553ac <_obstack_memory_used@@Base+0x3f9c>
  4554e8:	ldr	x5, [x22, #64]
  4554ec:	cmp	x5, #0x0
  4554f0:	b.le	455528 <_obstack_memory_used@@Base+0x4118>
  4554f4:	ldr	x2, [x22, #8]
  4554f8:	mov	x0, #0x0                   	// #0
  4554fc:	nop
  455500:	ldr	w1, [x2, x0, lsl #2]
  455504:	cmp	w20, w1
  455508:	b.cc	45551c <_obstack_memory_used@@Base+0x410c>  // b.lo, b.ul, b.last
  45550c:	ldr	x1, [x22, #16]
  455510:	ldr	w1, [x1, x0, lsl #2]
  455514:	cmp	w20, w1
  455518:	b.ls	4553ac <_obstack_memory_used@@Base+0x3f9c>  // b.plast
  45551c:	add	x0, x0, #0x1
  455520:	cmp	x0, x5
  455524:	b.ne	455500 <_obstack_memory_used@@Base+0x40f0>  // b.any
  455528:	ldrb	w0, [x22, #32]
  45552c:	tbz	w0, #0, 455304 <_obstack_memory_used@@Base+0x3ef4>
  455530:	ldp	x21, x22, [sp, #32]
  455534:	b	455350 <_obstack_memory_used@@Base+0x3f40>
  455538:	cmp	w0, #0xf7
  45553c:	b.hi	455574 <_obstack_memory_used@@Base+0x4164>  // b.pmore
  455540:	cmp	w0, #0xf0
  455544:	mov	w0, #0x8f                  	// #143
  455548:	ccmp	w5, w0, #0x2, eq  // eq = none
  45554c:	b.ls	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.plast
  455550:	mov	x0, #0x4                   	// #4
  455554:	mov	w19, w0
  455558:	b	455420 <_obstack_memory_used@@Base+0x4010>
  45555c:	sub	w0, w5, #0x80
  455560:	mov	w19, #0x2                   	// #2
  455564:	and	w0, w0, #0xff
  455568:	cmp	w0, #0x3f
  45556c:	b.ls	45530c <_obstack_memory_used@@Base+0x3efc>  // b.plast
  455570:	b	455308 <_obstack_memory_used@@Base+0x3ef8>
  455574:	cmp	w0, #0xfb
  455578:	b.hi	455598 <_obstack_memory_used@@Base+0x4188>  // b.pmore
  45557c:	cmp	w0, #0xf8
  455580:	mov	w0, #0x87                  	// #135
  455584:	ccmp	w5, w0, #0x2, eq  // eq = none
  455588:	b.ls	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.plast
  45558c:	mov	x0, #0x5                   	// #5
  455590:	mov	w19, w0
  455594:	b	455420 <_obstack_memory_used@@Base+0x4010>
  455598:	cmp	w0, #0xfd
  45559c:	b.hi	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.pmore
  4555a0:	cmp	w0, #0xfc
  4555a4:	mov	w0, #0x83                  	// #131
  4555a8:	ccmp	w5, w0, #0x2, eq  // eq = none
  4555ac:	b.ls	455308 <_obstack_memory_used@@Base+0x3ef8>  // b.plast
  4555b0:	mov	x0, #0x6                   	// #6
  4555b4:	mov	w19, w0
  4555b8:	b	455420 <_obstack_memory_used@@Base+0x4010>
  4555bc:	nop
  4555c0:	stp	x29, x30, [sp, #-48]!
  4555c4:	mov	x29, sp
  4555c8:	str	x21, [sp, #32]
  4555cc:	mov	w21, #0xff                  	// #255
  4555d0:	movk	w21, #0x4, lsl #16
  4555d4:	stp	x19, x20, [sp, #16]
  4555d8:	mov	x19, x0
  4555dc:	ldr	x0, [x0, #8]
  4555e0:	cbnz	x0, 4555d8 <_obstack_memory_used@@Base+0x41c8>
  4555e4:	ldr	x0, [x19, #16]
  4555e8:	cbnz	x0, 4555d8 <_obstack_memory_used@@Base+0x41c8>
  4555ec:	ldr	w0, [x19, #48]
  4555f0:	and	w0, w0, w21
  4555f4:	cmp	w0, #0x6
  4555f8:	b.eq	455634 <_obstack_memory_used@@Base+0x4224>  // b.none
  4555fc:	nop
  455600:	cmp	w0, #0x3
  455604:	b.eq	45567c <_obstack_memory_used@@Base+0x426c>  // b.none
  455608:	ldr	x1, [x19]
  45560c:	cbz	x1, 455668 <_obstack_memory_used@@Base+0x4258>
  455610:	ldr	x0, [x1, #16]
  455614:	cmp	x0, #0x0
  455618:	ccmp	x19, x0, #0x4, ne  // ne = any
  45561c:	mov	x19, x1
  455620:	b.ne	4555d8 <_obstack_memory_used@@Base+0x41c8>  // b.any
  455624:	ldr	w0, [x19, #48]
  455628:	and	w0, w0, w21
  45562c:	cmp	w0, #0x6
  455630:	b.ne	455600 <_obstack_memory_used@@Base+0x41f0>  // b.any
  455634:	ldr	x20, [x19, #40]
  455638:	ldr	x0, [x20]
  45563c:	bl	4047b0 <free@plt>
  455640:	ldr	x0, [x20, #8]
  455644:	bl	4047b0 <free@plt>
  455648:	ldr	x0, [x20, #16]
  45564c:	bl	4047b0 <free@plt>
  455650:	ldr	x0, [x20, #24]
  455654:	bl	4047b0 <free@plt>
  455658:	mov	x0, x20
  45565c:	bl	4047b0 <free@plt>
  455660:	ldr	x1, [x19]
  455664:	cbnz	x1, 455610 <_obstack_memory_used@@Base+0x4200>
  455668:	mov	w0, #0x0                   	// #0
  45566c:	ldp	x19, x20, [sp, #16]
  455670:	ldr	x21, [sp, #32]
  455674:	ldp	x29, x30, [sp], #48
  455678:	ret
  45567c:	ldr	x0, [x19, #40]
  455680:	bl	4047b0 <free@plt>
  455684:	b	455608 <_obstack_memory_used@@Base+0x41f8>
  455688:	stp	x29, x30, [sp, #-32]!
  45568c:	mov	x29, sp
  455690:	ldr	w0, [x1, #48]
  455694:	and	w0, w0, #0x7ffff
  455698:	and	w0, w0, #0xfffc00ff
  45569c:	cmp	w0, #0x6
  4556a0:	b.eq	4556b8 <_obstack_memory_used@@Base+0x42a8>  // b.none
  4556a4:	cmp	w0, #0x3
  4556a8:	b.eq	4556f8 <_obstack_memory_used@@Base+0x42e8>  // b.none
  4556ac:	mov	w0, #0x0                   	// #0
  4556b0:	ldp	x29, x30, [sp], #32
  4556b4:	ret
  4556b8:	str	x19, [sp, #16]
  4556bc:	ldr	x19, [x1, #40]
  4556c0:	ldr	x0, [x19]
  4556c4:	bl	4047b0 <free@plt>
  4556c8:	ldr	x0, [x19, #8]
  4556cc:	bl	4047b0 <free@plt>
  4556d0:	ldr	x0, [x19, #16]
  4556d4:	bl	4047b0 <free@plt>
  4556d8:	ldr	x0, [x19, #24]
  4556dc:	bl	4047b0 <free@plt>
  4556e0:	mov	x0, x19
  4556e4:	bl	4047b0 <free@plt>
  4556e8:	mov	w0, #0x0                   	// #0
  4556ec:	ldr	x19, [sp, #16]
  4556f0:	ldp	x29, x30, [sp], #32
  4556f4:	ret
  4556f8:	ldr	x0, [x1, #40]
  4556fc:	bl	4047b0 <free@plt>
  455700:	mov	w0, #0x0                   	// #0
  455704:	ldp	x29, x30, [sp], #32
  455708:	ret
  45570c:	nop
  455710:	stp	x29, x30, [sp, #-64]!
  455714:	mov	x29, sp
  455718:	ldr	x1, [x0]
  45571c:	stp	x19, x20, [sp, #16]
  455720:	stp	x21, x22, [sp, #32]
  455724:	mov	x22, x0
  455728:	stp	x23, x24, [sp, #48]
  45572c:	cbz	x1, 4557b8 <_obstack_memory_used@@Base+0x43a8>
  455730:	ldr	x4, [x0, #16]
  455734:	cbz	x4, 4557b8 <_obstack_memory_used@@Base+0x43a8>
  455738:	mov	w21, #0xff                  	// #255
  45573c:	mov	x19, #0x0                   	// #0
  455740:	movk	w21, #0x4, lsl #16
  455744:	b	455760 <_obstack_memory_used@@Base+0x4350>
  455748:	cmp	w0, #0x3
  45574c:	b.eq	45595c <_obstack_memory_used@@Base+0x454c>  // b.none
  455750:	add	x19, x19, #0x1
  455754:	cmp	x19, x4
  455758:	b.cs	4557b8 <_obstack_memory_used@@Base+0x43a8>  // b.hs, b.nlast
  45575c:	ldr	x1, [x22]
  455760:	lsl	x2, x19, #4
  455764:	add	x3, x1, x2
  455768:	ldr	w0, [x3, #8]
  45576c:	and	w0, w0, w21
  455770:	cmp	w0, #0x6
  455774:	b.ne	455748 <_obstack_memory_used@@Base+0x4338>  // b.any
  455778:	ldr	x20, [x1, x2]
  45577c:	add	x19, x19, #0x1
  455780:	ldr	x0, [x20]
  455784:	bl	4047b0 <free@plt>
  455788:	ldr	x0, [x20, #8]
  45578c:	bl	4047b0 <free@plt>
  455790:	ldr	x0, [x20, #16]
  455794:	bl	4047b0 <free@plt>
  455798:	ldr	x0, [x20, #24]
  45579c:	bl	4047b0 <free@plt>
  4557a0:	mov	x0, x20
  4557a4:	bl	4047b0 <free@plt>
  4557a8:	ldr	x4, [x22, #16]
  4557ac:	cmp	x19, x4
  4557b0:	b.cc	45575c <_obstack_memory_used@@Base+0x434c>  // b.lo, b.ul, b.last
  4557b4:	nop
  4557b8:	ldr	x0, [x22, #24]
  4557bc:	mov	x19, #0x0                   	// #0
  4557c0:	mov	x20, #0x0                   	// #0
  4557c4:	bl	4047b0 <free@plt>
  4557c8:	ldr	x0, [x22, #16]
  4557cc:	cbz	x0, 455820 <_obstack_memory_used@@Base+0x4410>
  4557d0:	ldr	x0, [x22, #48]
  4557d4:	add	x1, x0, x19
  4557d8:	cbz	x0, 4557e4 <_obstack_memory_used@@Base+0x43d4>
  4557dc:	ldr	x0, [x1, #16]
  4557e0:	bl	4047b0 <free@plt>
  4557e4:	ldr	x0, [x22, #56]
  4557e8:	add	x1, x0, x19
  4557ec:	cbz	x0, 4557f8 <_obstack_memory_used@@Base+0x43e8>
  4557f0:	ldr	x0, [x1, #16]
  4557f4:	bl	4047b0 <free@plt>
  4557f8:	ldr	x0, [x22, #40]
  4557fc:	add	x1, x0, x19
  455800:	cbz	x0, 455900 <_obstack_memory_used@@Base+0x44f0>
  455804:	ldr	x0, [x1, #16]
  455808:	add	x20, x20, #0x1
  45580c:	add	x19, x19, #0x18
  455810:	bl	4047b0 <free@plt>
  455814:	ldr	x0, [x22, #16]
  455818:	cmp	x20, x0
  45581c:	b.cc	4557d0 <_obstack_memory_used@@Base+0x43c0>  // b.lo, b.ul, b.last
  455820:	ldr	x0, [x22, #40]
  455824:	bl	4047b0 <free@plt>
  455828:	ldr	x0, [x22, #48]
  45582c:	mov	x23, #0x0                   	// #0
  455830:	mov	x24, #0x0                   	// #0
  455834:	bl	4047b0 <free@plt>
  455838:	ldr	x0, [x22, #56]
  45583c:	bl	4047b0 <free@plt>
  455840:	ldr	x0, [x22]
  455844:	bl	4047b0 <free@plt>
  455848:	ldr	x0, [x22, #64]
  45584c:	cbz	x0, 45591c <_obstack_memory_used@@Base+0x450c>
  455850:	ldr	x1, [x0, x23]
  455854:	add	x21, x0, x23
  455858:	mov	x20, #0x0                   	// #0
  45585c:	cmp	x1, #0x0
  455860:	b.gt	4558a8 <_obstack_memory_used@@Base+0x4498>
  455864:	b	4558dc <_obstack_memory_used@@Base+0x44cc>
  455868:	ldr	x0, [x1, #16]
  45586c:	add	x20, x20, #0x1
  455870:	bl	4047b0 <free@plt>
  455874:	ldr	x0, [x19, #80]
  455878:	bl	4047b0 <free@plt>
  45587c:	ldr	x0, [x19, #24]
  455880:	bl	4047b0 <free@plt>
  455884:	ldr	x0, [x19, #96]
  455888:	bl	4047b0 <free@plt>
  45588c:	ldr	x0, [x19, #88]
  455890:	bl	4047b0 <free@plt>
  455894:	mov	x0, x19
  455898:	bl	4047b0 <free@plt>
  45589c:	ldr	x0, [x21]
  4558a0:	cmp	x0, x20
  4558a4:	b.le	4558dc <_obstack_memory_used@@Base+0x44cc>
  4558a8:	ldr	x1, [x21, #16]
  4558ac:	ldr	x19, [x1, x20, lsl #3]
  4558b0:	ldr	x0, [x19, #48]
  4558b4:	bl	4047b0 <free@plt>
  4558b8:	ldr	x0, [x19, #72]
  4558bc:	bl	4047b0 <free@plt>
  4558c0:	ldr	x1, [x19, #80]
  4558c4:	add	x2, x19, #0x8
  4558c8:	cmp	x1, x2
  4558cc:	b.ne	455868 <_obstack_memory_used@@Base+0x4458>  // b.any
  4558d0:	add	x20, x20, #0x1
  4558d4:	ldr	x0, [x19, #24]
  4558d8:	b	455880 <_obstack_memory_used@@Base+0x4470>
  4558dc:	ldr	x0, [x21, #16]
  4558e0:	add	x24, x24, #0x1
  4558e4:	add	x23, x23, #0x18
  4558e8:	bl	4047b0 <free@plt>
  4558ec:	ldr	x0, [x22, #136]
  4558f0:	cmp	x0, x24
  4558f4:	b.cc	455918 <_obstack_memory_used@@Base+0x4508>  // b.lo, b.ul, b.last
  4558f8:	ldr	x0, [x22, #64]
  4558fc:	b	455850 <_obstack_memory_used@@Base+0x4440>
  455900:	ldr	x1, [x22, #16]
  455904:	add	x20, x20, #0x1
  455908:	add	x19, x19, #0x18
  45590c:	cmp	x1, x20
  455910:	b.hi	4557d0 <_obstack_memory_used@@Base+0x43c0>  // b.pmore
  455914:	b	455824 <_obstack_memory_used@@Base+0x4414>
  455918:	ldr	x0, [x22, #64]
  45591c:	bl	4047b0 <free@plt>
  455920:	ldr	x0, [x22, #120]
  455924:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  455928:	add	x1, x1, #0x2c0
  45592c:	add	x1, x1, #0x10
  455930:	cmp	x0, x1
  455934:	b.eq	45593c <_obstack_memory_used@@Base+0x452c>  // b.none
  455938:	bl	4047b0 <free@plt>
  45593c:	ldr	x0, [x22, #224]
  455940:	bl	4047b0 <free@plt>
  455944:	mov	x0, x22
  455948:	ldp	x19, x20, [sp, #16]
  45594c:	ldp	x21, x22, [sp, #32]
  455950:	ldp	x23, x24, [sp, #48]
  455954:	ldp	x29, x30, [sp], #64
  455958:	b	4047b0 <free@plt>
  45595c:	ldr	x0, [x3]
  455960:	bl	4047b0 <free@plt>
  455964:	ldr	x4, [x22, #16]
  455968:	b	455750 <_obstack_memory_used@@Base+0x4340>
  45596c:	nop
  455970:	stp	x29, x30, [sp, #-96]!
  455974:	mov	x29, sp
  455978:	stp	x19, x20, [sp, #16]
  45597c:	mov	x20, x0
  455980:	mov	x19, x2
  455984:	stp	x21, x22, [sp, #32]
  455988:	mov	x21, x1
  45598c:	lsl	x22, x1, #4
  455990:	stp	x23, x24, [sp, #48]
  455994:	mov	w24, w4
  455998:	stp	x25, x26, [sp, #64]
  45599c:	mov	x25, x3
  4559a0:	str	x27, [sp, #80]
  4559a4:	ldr	x3, [x20]
  4559a8:	mov	x23, x19
  4559ac:	ldr	x5, [x20, #40]
  4559b0:	add	x2, x3, x22
  4559b4:	ldrb	w0, [x2, #8]
  4559b8:	cmp	w0, #0x4
  4559bc:	b.eq	455be0 <_obstack_memory_used@@Base+0x47d0>  // b.none
  4559c0:	add	x26, x21, x21, lsl #1
  4559c4:	lsl	x26, x26, #3
  4559c8:	add	x1, x5, x26
  4559cc:	ldr	x0, [x1, #8]
  4559d0:	cbz	x0, 455d34 <_obstack_memory_used@@Base+0x4924>
  4559d4:	ldr	x1, [x1, #16]
  4559d8:	add	x23, x19, x19, lsl #1
  4559dc:	cmp	x0, #0x1
  4559e0:	lsl	x23, x23, #3
  4559e4:	add	x0, x5, x23
  4559e8:	ldr	x27, [x1]
  4559ec:	b.eq	455b20 <_obstack_memory_used@@Base+0x4710>  // b.none
  4559f0:	ldr	x4, [x20, #16]
  4559f4:	sub	x1, x4, #0x1
  4559f8:	add	x2, x3, x1, lsl #4
  4559fc:	ldrb	w5, [x2, #10]
  455a00:	str	xzr, [x0, #8]
  455a04:	tst	x5, #0x4
  455a08:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  455a0c:	b.le	455c90 <_obstack_memory_used@@Base+0x4880>
  455a10:	add	x4, x3, x4, lsl #4
  455a14:	sub	x4, x4, x2
  455a18:	sub	x4, x4, #0x20
  455a1c:	ldr	x6, [x20, #32]
  455a20:	b	455a3c <_obstack_memory_used@@Base+0x462c>
  455a24:	add	x2, x2, x4
  455a28:	sub	x1, x1, #0x1
  455a2c:	ldrb	w5, [x2, #10]
  455a30:	tst	x5, #0x4
  455a34:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  455a38:	b.le	455c90 <_obstack_memory_used@@Base+0x4880>
  455a3c:	ldr	x5, [x6, x1, lsl #3]
  455a40:	cmp	x5, x27
  455a44:	b.ne	455a24 <_obstack_memory_used@@Base+0x4614>  // b.any
  455a48:	ldr	w5, [x2, #8]
  455a4c:	ubfx	x5, x5, #8, #10
  455a50:	cmp	w24, w5
  455a54:	b.ne	455a24 <_obstack_memory_used@@Base+0x4614>  // b.any
  455a58:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455a5c:	tst	w0, #0xff
  455a60:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455a64:	ldr	x2, [x20, #40]
  455a68:	mov	x0, x20
  455a6c:	ldr	x1, [x20]
  455a70:	add	x26, x2, x26
  455a74:	ldr	x2, [x26, #16]
  455a78:	ldr	x21, [x2, #8]
  455a7c:	lsl	x22, x21, #4
  455a80:	add	x1, x1, x22
  455a84:	ldp	x2, x3, [x1]
  455a88:	mov	x1, x2
  455a8c:	mov	x2, x3
  455a90:	bl	4527d0 <_obstack_memory_used@@Base+0x13c0>
  455a94:	mov	x19, x0
  455a98:	cmn	x0, #0x1
  455a9c:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455aa0:	ldr	x3, [x20]
  455aa4:	mov	x1, x0
  455aa8:	and	w2, w24, #0x3ff
  455aac:	add	x5, x3, x22
  455ab0:	mov	w4, w2
  455ab4:	add	x3, x3, x0, lsl #4
  455ab8:	ldr	w0, [x3, #8]
  455abc:	bfi	w0, w2, #8, #10
  455ac0:	str	w0, [x3, #8]
  455ac4:	and	w0, w0, #0xfff800ff
  455ac8:	ldr	w2, [x5, #8]
  455acc:	ubfx	x2, x2, #8, #10
  455ad0:	orr	w2, w2, w4
  455ad4:	ldp	x5, x4, [x20, #32]
  455ad8:	lsl	w2, w2, #8
  455adc:	orr	w2, w2, #0x40000
  455ae0:	orr	w2, w2, w0
  455ae4:	str	w2, [x3, #8]
  455ae8:	str	x21, [x5, x19, lsl #3]
  455aec:	add	x0, x4, x23
  455af0:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455af4:	tst	w0, #0xff
  455af8:	b.ne	4559a4 <_obstack_memory_used@@Base+0x4594>  // b.any
  455afc:	nop
  455b00:	mov	w0, #0xc                   	// #12
  455b04:	ldp	x19, x20, [sp, #16]
  455b08:	ldp	x21, x22, [sp, #32]
  455b0c:	ldp	x23, x24, [sp, #48]
  455b10:	ldp	x25, x26, [sp, #64]
  455b14:	ldr	x27, [sp, #80]
  455b18:	ldp	x29, x30, [sp], #96
  455b1c:	ret
  455b20:	str	xzr, [x0, #8]
  455b24:	cmp	x21, x25
  455b28:	ccmp	x21, x19, #0x4, eq  // eq = none
  455b2c:	b.ne	455d44 <_obstack_memory_used@@Base+0x4934>  // b.any
  455b30:	lsl	x22, x27, #4
  455b34:	ldr	w2, [x2, #8]
  455b38:	add	x3, x3, x22
  455b3c:	mov	x0, x20
  455b40:	ubfx	x2, x2, #8, #10
  455b44:	ldp	x4, x5, [x3]
  455b48:	orr	w24, w24, w2
  455b4c:	mov	x1, x4
  455b50:	mov	x2, x5
  455b54:	bl	4527d0 <_obstack_memory_used@@Base+0x13c0>
  455b58:	mov	x19, x0
  455b5c:	cmn	x0, #0x1
  455b60:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455b64:	ldr	x3, [x20]
  455b68:	mov	x1, x0
  455b6c:	and	w2, w24, #0x3ff
  455b70:	add	x5, x3, x22
  455b74:	mov	w4, w2
  455b78:	add	x3, x3, x0, lsl #4
  455b7c:	ldr	w0, [x3, #8]
  455b80:	bfi	w0, w2, #8, #10
  455b84:	str	w0, [x3, #8]
  455b88:	and	w0, w0, #0xfff800ff
  455b8c:	ldr	w2, [x5, #8]
  455b90:	ubfx	x2, x2, #8, #10
  455b94:	orr	w2, w2, w4
  455b98:	ldp	x5, x4, [x20, #32]
  455b9c:	lsl	w2, w2, #8
  455ba0:	orr	w2, w2, #0x40000
  455ba4:	orr	w2, w2, w0
  455ba8:	str	w2, [x3, #8]
  455bac:	str	x27, [x5, x19, lsl #3]
  455bb0:	add	x0, x4, x23
  455bb4:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455bb8:	tst	w0, #0xff
  455bbc:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455bc0:	ldr	x3, [x20]
  455bc4:	mov	x21, x27
  455bc8:	mov	x23, x19
  455bcc:	add	x2, x3, x22
  455bd0:	ldr	x5, [x20, #40]
  455bd4:	ldrb	w0, [x2, #8]
  455bd8:	cmp	w0, #0x4
  455bdc:	b.ne	4559c0 <_obstack_memory_used@@Base+0x45b0>  // b.any
  455be0:	ldr	x1, [x20, #24]
  455be4:	lsl	x27, x21, #3
  455be8:	add	x19, x19, x19, lsl #1
  455bec:	mov	x0, x20
  455bf0:	ldr	x21, [x1, x21, lsl #3]
  455bf4:	lsl	x26, x19, #3
  455bf8:	add	x5, x5, x26
  455bfc:	lsl	x22, x21, #4
  455c00:	add	x3, x3, x22
  455c04:	ldp	x2, x3, [x3]
  455c08:	str	xzr, [x5, #8]
  455c0c:	mov	x1, x2
  455c10:	mov	x2, x3
  455c14:	bl	4527d0 <_obstack_memory_used@@Base+0x13c0>
  455c18:	mov	x19, x0
  455c1c:	cmn	x0, #0x1
  455c20:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455c24:	ldr	x2, [x20]
  455c28:	and	w0, w24, #0x3ff
  455c2c:	mov	w4, w0
  455c30:	mov	x1, x19
  455c34:	add	x5, x2, x22
  455c38:	add	x2, x2, x19, lsl #4
  455c3c:	ldr	w3, [x2, #8]
  455c40:	bfi	w3, w0, #8, #10
  455c44:	str	w3, [x2, #8]
  455c48:	and	w3, w3, #0xfff800ff
  455c4c:	ldr	w0, [x5, #8]
  455c50:	ubfx	x0, x0, #8, #10
  455c54:	orr	w0, w0, w4
  455c58:	ldp	x4, x5, [x20, #24]
  455c5c:	lsl	w0, w0, #8
  455c60:	orr	w0, w0, #0x40000
  455c64:	orr	w0, w0, w3
  455c68:	str	w0, [x2, #8]
  455c6c:	ldr	x0, [x20, #40]
  455c70:	str	x21, [x5, x19, lsl #3]
  455c74:	add	x0, x0, x26
  455c78:	ldr	x2, [x4, x27]
  455c7c:	str	x2, [x4, x23, lsl #3]
  455c80:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455c84:	tst	w0, #0xff
  455c88:	b.ne	4559a4 <_obstack_memory_used@@Base+0x4594>  // b.any
  455c8c:	b	455b00 <_obstack_memory_used@@Base+0x46f0>
  455c90:	lsl	x21, x27, #4
  455c94:	mov	x0, x20
  455c98:	add	x3, x3, x21
  455c9c:	ldp	x2, x3, [x3]
  455ca0:	mov	x1, x2
  455ca4:	mov	x2, x3
  455ca8:	bl	4527d0 <_obstack_memory_used@@Base+0x13c0>
  455cac:	mov	x19, x0
  455cb0:	cmn	x0, #0x1
  455cb4:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455cb8:	ldr	x2, [x20]
  455cbc:	and	w3, w24, #0x3ff
  455cc0:	mov	w4, w3
  455cc4:	mov	x1, x19
  455cc8:	add	x21, x2, x21
  455ccc:	add	x2, x2, x19, lsl #4
  455cd0:	ldr	w0, [x2, #8]
  455cd4:	bfi	w0, w3, #8, #10
  455cd8:	str	w0, [x2, #8]
  455cdc:	and	w0, w0, #0xfff800ff
  455ce0:	ldr	w3, [x21, #8]
  455ce4:	ubfx	x3, x3, #8, #10
  455ce8:	orr	w3, w3, w4
  455cec:	ldp	x5, x4, [x20, #32]
  455cf0:	lsl	w3, w3, #8
  455cf4:	orr	w3, w3, #0x40000
  455cf8:	orr	w3, w3, w0
  455cfc:	str	w3, [x2, #8]
  455d00:	str	x27, [x5, x19, lsl #3]
  455d04:	add	x0, x4, x23
  455d08:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455d0c:	tst	w0, #0xff
  455d10:	b.eq	455b00 <_obstack_memory_used@@Base+0x46f0>  // b.none
  455d14:	mov	x2, x19
  455d18:	mov	x1, x27
  455d1c:	mov	w4, w24
  455d20:	mov	x3, x25
  455d24:	mov	x0, x20
  455d28:	bl	455970 <_obstack_memory_used@@Base+0x4560>
  455d2c:	cbz	w0, 455a64 <_obstack_memory_used@@Base+0x4654>
  455d30:	b	455b04 <_obstack_memory_used@@Base+0x46f4>
  455d34:	ldr	x1, [x20, #24]
  455d38:	ldr	x2, [x1, x21, lsl #3]
  455d3c:	str	x2, [x1, x19, lsl #3]
  455d40:	b	455b04 <_obstack_memory_used@@Base+0x46f4>
  455d44:	mov	x1, x27
  455d48:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455d4c:	tst	w0, #0xff
  455d50:	mov	w0, #0x0                   	// #0
  455d54:	b.ne	455b04 <_obstack_memory_used@@Base+0x46f4>  // b.any
  455d58:	b	455b00 <_obstack_memory_used@@Base+0x46f0>
  455d5c:	nop
  455d60:	stp	x29, x30, [sp, #-144]!
  455d64:	mov	x29, sp
  455d68:	stp	x19, x20, [sp, #16]
  455d6c:	add	x20, x2, x2, lsl #1
  455d70:	mov	x19, x1
  455d74:	stp	x23, x24, [sp, #48]
  455d78:	lsl	x20, x20, #3
  455d7c:	and	w24, w3, #0xff
  455d80:	ldr	x23, [x1, #40]
  455d84:	stp	x21, x22, [sp, #32]
  455d88:	mov	x22, x0
  455d8c:	add	x23, x23, x20
  455d90:	mov	x21, x2
  455d94:	ldr	x0, [x23, #8]
  455d98:	add	x0, x0, #0x1
  455d9c:	stp	x0, xzr, [sp, #96]
  455da0:	lsl	x0, x0, #3
  455da4:	bl	404310 <malloc@plt>
  455da8:	str	x0, [sp, #112]
  455dac:	cbz	x0, 455f9c <_obstack_memory_used@@Base+0x4b8c>
  455db0:	ldr	x2, [x19]
  455db4:	stp	x25, x26, [sp, #64]
  455db8:	lsl	x25, x21, #4
  455dbc:	ldr	x0, [x19, #48]
  455dc0:	add	x1, x2, x25
  455dc4:	mov	x3, #0xffffffffffffffff    	// #-1
  455dc8:	add	x0, x0, x20
  455dcc:	ldr	w4, [x1, #8]
  455dd0:	str	x3, [x0, #8]
  455dd4:	tst	w4, #0x3ff00
  455dd8:	b.ne	455f24 <_obstack_memory_used@@Base+0x4b14>  // b.any
  455ddc:	ldrb	w0, [x1, #8]
  455de0:	tbz	w0, #3, 455f68 <_obstack_memory_used@@Base+0x4b58>
  455de4:	ldr	x1, [x19, #40]
  455de8:	add	x0, x1, x20
  455dec:	ldr	x2, [x0, #8]
  455df0:	cmp	x2, #0x0
  455df4:	b.le	455f68 <_obstack_memory_used@@Base+0x4b58>
  455df8:	mov	w23, #0x0                   	// #0
  455dfc:	mov	x26, #0x0                   	// #0
  455e00:	str	x27, [sp, #80]
  455e04:	nop
  455e08:	ldr	x0, [x0, #16]
  455e0c:	add	x27, sp, #0x78
  455e10:	ldr	x3, [x19, #48]
  455e14:	ldr	x2, [x0, x26, lsl #3]
  455e18:	add	x25, x2, x2, lsl #1
  455e1c:	lsl	x25, x25, #3
  455e20:	add	x3, x3, x25
  455e24:	ldr	x0, [x3, #8]
  455e28:	cmn	x0, #0x1
  455e2c:	b.eq	455f1c <_obstack_memory_used@@Base+0x4b0c>  // b.none
  455e30:	cbz	x0, 455ee8 <_obstack_memory_used@@Base+0x4ad8>
  455e34:	ldp	x0, x1, [x3]
  455e38:	stp	x0, x1, [sp, #120]
  455e3c:	ldr	x0, [x3, #16]
  455e40:	str	x0, [sp, #136]
  455e44:	mov	x1, x27
  455e48:	add	x0, sp, #0x60
  455e4c:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  455e50:	cbnz	w0, 455f00 <_obstack_memory_used@@Base+0x4af0>
  455e54:	ldr	x0, [x19, #48]
  455e58:	add	x25, x0, x25
  455e5c:	ldr	x0, [x25, #8]
  455e60:	cbz	x0, 455ed8 <_obstack_memory_used@@Base+0x4ac8>
  455e64:	ldr	x1, [x19, #40]
  455e68:	add	x0, x1, x20
  455e6c:	add	x26, x26, #0x1
  455e70:	ldr	x2, [x0, #8]
  455e74:	cmp	x2, x26
  455e78:	b.gt	455e08 <_obstack_memory_used@@Base+0x49f8>
  455e7c:	mov	x1, x21
  455e80:	add	x0, sp, #0x60
  455e84:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455e88:	tst	w0, #0xff
  455e8c:	b.eq	455fbc <_obstack_memory_used@@Base+0x4bac>  // b.none
  455e90:	ldr	x0, [x19, #48]
  455e94:	eor	w24, w24, #0x1
  455e98:	tst	w23, w24
  455e9c:	add	x1, x0, x20
  455ea0:	b.eq	455fcc <_obstack_memory_used@@Base+0x4bbc>  // b.none
  455ea4:	ldr	x27, [sp, #80]
  455ea8:	str	xzr, [x1, #8]
  455eac:	ldp	x2, x3, [sp, #96]
  455eb0:	mov	w0, #0x0                   	// #0
  455eb4:	ldr	x1, [sp, #112]
  455eb8:	stp	x2, x3, [x22]
  455ebc:	ldp	x25, x26, [sp, #64]
  455ec0:	str	x1, [x22, #16]
  455ec4:	ldp	x19, x20, [sp, #16]
  455ec8:	ldp	x21, x22, [sp, #32]
  455ecc:	ldp	x23, x24, [sp, #48]
  455ed0:	ldp	x29, x30, [sp], #144
  455ed4:	ret
  455ed8:	ldr	x0, [sp, #136]
  455edc:	mov	w23, #0x1                   	// #1
  455ee0:	bl	4047b0 <free@plt>
  455ee4:	b	455e64 <_obstack_memory_used@@Base+0x4a54>
  455ee8:	add	x27, sp, #0x78
  455eec:	mov	x1, x19
  455ef0:	mov	x0, x27
  455ef4:	mov	w3, #0x0                   	// #0
  455ef8:	bl	455d60 <_obstack_memory_used@@Base+0x4950>
  455efc:	cbz	w0, 455e44 <_obstack_memory_used@@Base+0x4a34>
  455f00:	ldp	x19, x20, [sp, #16]
  455f04:	ldp	x21, x22, [sp, #32]
  455f08:	ldp	x23, x24, [sp, #48]
  455f0c:	ldp	x25, x26, [sp, #64]
  455f10:	ldr	x27, [sp, #80]
  455f14:	ldp	x29, x30, [sp], #144
  455f18:	ret
  455f1c:	mov	w23, #0x1                   	// #1
  455f20:	b	455e68 <_obstack_memory_used@@Base+0x4a58>
  455f24:	ldr	x0, [x23, #8]
  455f28:	cbz	x0, 455f68 <_obstack_memory_used@@Base+0x4b58>
  455f2c:	ldr	x0, [x23, #16]
  455f30:	ldr	x0, [x0]
  455f34:	add	x2, x2, x0, lsl #4
  455f38:	ldrb	w0, [x2, #10]
  455f3c:	tbnz	w0, #2, 455ddc <_obstack_memory_used@@Base+0x49cc>
  455f40:	ubfx	x4, x4, #8, #10
  455f44:	mov	x3, x21
  455f48:	mov	x2, x21
  455f4c:	mov	x1, x21
  455f50:	mov	x0, x19
  455f54:	bl	455970 <_obstack_memory_used@@Base+0x4560>
  455f58:	cbnz	w0, 455fb4 <_obstack_memory_used@@Base+0x4ba4>
  455f5c:	ldr	x1, [x19]
  455f60:	add	x1, x1, x25
  455f64:	b	455ddc <_obstack_memory_used@@Base+0x49cc>
  455f68:	mov	x1, x21
  455f6c:	add	x0, sp, #0x60
  455f70:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  455f74:	tst	w0, #0xff
  455f78:	b.eq	455f98 <_obstack_memory_used@@Base+0x4b88>  // b.none
  455f7c:	ldr	x0, [x19, #48]
  455f80:	add	x20, x0, x20
  455f84:	ldp	x0, x1, [sp, #96]
  455f88:	stp	x0, x1, [x20]
  455f8c:	ldr	x0, [sp, #112]
  455f90:	str	x0, [x20, #16]
  455f94:	b	455eac <_obstack_memory_used@@Base+0x4a9c>
  455f98:	ldp	x25, x26, [sp, #64]
  455f9c:	mov	w0, #0xc                   	// #12
  455fa0:	ldp	x19, x20, [sp, #16]
  455fa4:	ldp	x21, x22, [sp, #32]
  455fa8:	ldp	x23, x24, [sp, #48]
  455fac:	ldp	x29, x30, [sp], #144
  455fb0:	ret
  455fb4:	ldp	x25, x26, [sp, #64]
  455fb8:	b	455ec4 <_obstack_memory_used@@Base+0x4ab4>
  455fbc:	mov	w0, #0xc                   	// #12
  455fc0:	ldp	x25, x26, [sp, #64]
  455fc4:	ldr	x27, [sp, #80]
  455fc8:	b	455fa0 <_obstack_memory_used@@Base+0x4b90>
  455fcc:	ldr	x27, [sp, #80]
  455fd0:	b	455f80 <_obstack_memory_used@@Base+0x4b70>
  455fd4:	nop
  455fd8:	stp	x29, x30, [sp, #-64]!
  455fdc:	mov	x29, sp
  455fe0:	stp	x19, x20, [sp, #16]
  455fe4:	mov	x19, x2
  455fe8:	mov	w20, w4
  455fec:	stp	x21, x22, [sp, #32]
  455ff0:	mov	x22, x1
  455ff4:	mov	x21, x3
  455ff8:	str	x23, [sp, #48]
  455ffc:	mov	x23, x0
  456000:	ldr	x2, [x22, #8]
  456004:	cmp	x2, #0x0
  456008:	b.le	456048 <_obstack_memory_used@@Base+0x4c38>
  45600c:	sub	x2, x2, #0x1
  456010:	mov	x3, #0x0                   	// #0
  456014:	ldr	x0, [x22, #16]
  456018:	b	456030 <_obstack_memory_used@@Base+0x4c20>
  45601c:	lsr	x5, x5, #1
  456020:	ldr	x1, [x0, x5, lsl #3]
  456024:	cmp	x19, x1
  456028:	b.gt	4560dc <_obstack_memory_used@@Base+0x4ccc>
  45602c:	mov	x2, x5
  456030:	add	x5, x2, x3
  456034:	cmp	x2, x3
  456038:	b.hi	45601c <_obstack_memory_used@@Base+0x4c0c>  // b.pmore
  45603c:	ldr	x0, [x0, x3, lsl #3]
  456040:	cmp	x19, x0
  456044:	b.eq	456100 <_obstack_memory_used@@Base+0x4cf0>  // b.none
  456048:	ldr	x1, [x23]
  45604c:	lsl	x0, x19, #4
  456050:	add	x2, x1, x0
  456054:	ldrb	w2, [x2, #8]
  456058:	cmp	w2, w20
  45605c:	b.ne	45606c <_obstack_memory_used@@Base+0x4c5c>  // b.any
  456060:	ldr	x0, [x1, x0]
  456064:	cmp	x0, x21
  456068:	b.eq	4560e4 <_obstack_memory_used@@Base+0x4cd4>  // b.none
  45606c:	mov	x1, x19
  456070:	mov	x0, x22
  456074:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  456078:	tst	w0, #0xff
  45607c:	b.eq	456118 <_obstack_memory_used@@Base+0x4d08>  // b.none
  456080:	add	x19, x19, x19, lsl #1
  456084:	ldr	x2, [x23, #40]
  456088:	lsl	x19, x19, #3
  45608c:	add	x2, x2, x19
  456090:	ldr	x0, [x2, #8]
  456094:	cbz	x0, 456100 <_obstack_memory_used@@Base+0x4cf0>
  456098:	cmp	x0, #0x2
  45609c:	ldr	x0, [x2, #16]
  4560a0:	b.eq	4560ac <_obstack_memory_used@@Base+0x4c9c>  // b.none
  4560a4:	ldr	x19, [x0]
  4560a8:	b	456000 <_obstack_memory_used@@Base+0x4bf0>
  4560ac:	ldr	x2, [x0, #8]
  4560b0:	mov	w4, w20
  4560b4:	mov	x3, x21
  4560b8:	mov	x1, x22
  4560bc:	mov	x0, x23
  4560c0:	bl	455fd8 <_obstack_memory_used@@Base+0x4bc8>
  4560c4:	cbnz	w0, 456104 <_obstack_memory_used@@Base+0x4cf4>
  4560c8:	ldr	x0, [x23, #40]
  4560cc:	add	x19, x0, x19
  4560d0:	ldr	x0, [x19, #16]
  4560d4:	ldr	x19, [x0]
  4560d8:	b	456000 <_obstack_memory_used@@Base+0x4bf0>
  4560dc:	add	x3, x5, #0x1
  4560e0:	b	456030 <_obstack_memory_used@@Base+0x4c20>
  4560e4:	cmp	w20, #0x9
  4560e8:	b.ne	456100 <_obstack_memory_used@@Base+0x4cf0>  // b.any
  4560ec:	mov	x1, x19
  4560f0:	mov	x0, x22
  4560f4:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  4560f8:	tst	w0, #0xff
  4560fc:	b.eq	456118 <_obstack_memory_used@@Base+0x4d08>  // b.none
  456100:	mov	w0, #0x0                   	// #0
  456104:	ldp	x19, x20, [sp, #16]
  456108:	ldp	x21, x22, [sp, #32]
  45610c:	ldr	x23, [sp, #48]
  456110:	ldp	x29, x30, [sp], #64
  456114:	ret
  456118:	mov	w0, #0xc                   	// #12
  45611c:	ldp	x19, x20, [sp, #16]
  456120:	ldp	x21, x22, [sp, #32]
  456124:	ldr	x23, [sp, #48]
  456128:	ldp	x29, x30, [sp], #64
  45612c:	ret
  456130:	stp	x29, x30, [sp, #-96]!
  456134:	mov	x29, sp
  456138:	stp	x21, x22, [sp, #32]
  45613c:	ldr	x21, [x1, #8]
  456140:	stp	x19, x20, [sp, #16]
  456144:	mov	x20, x2
  456148:	mov	w19, w3
  45614c:	stp	x23, x24, [sp, #48]
  456150:	mov	x24, x1
  456154:	mov	x23, x0
  456158:	lsl	x0, x21, #3
  45615c:	stp	x21, xzr, [sp, #72]
  456160:	bl	404310 <malloc@plt>
  456164:	str	x0, [sp, #88]
  456168:	cbz	x0, 456270 <_obstack_memory_used@@Base+0x4e60>
  45616c:	cmp	x21, #0x0
  456170:	b.le	45620c <_obstack_memory_used@@Base+0x4dfc>
  456174:	mov	x22, #0x0                   	// #0
  456178:	ldr	x1, [x24, #16]
  45617c:	ldr	x0, [x23, #48]
  456180:	ldr	x2, [x1, x22, lsl #3]
  456184:	add	x1, x2, x2, lsl #1
  456188:	add	x1, x0, x1, lsl #3
  45618c:	ldr	x10, [x1, #8]
  456190:	cmp	x10, #0x0
  456194:	b.le	456240 <_obstack_memory_used@@Base+0x4e30>
  456198:	mov	x5, #0x0                   	// #0
  45619c:	ldr	x9, [x23]
  4561a0:	ldr	x4, [x1, #16]
  4561a4:	b	4561b0 <_obstack_memory_used@@Base+0x4da0>
  4561a8:	cmp	x10, x5
  4561ac:	b.eq	456240 <_obstack_memory_used@@Base+0x4e30>  // b.none
  4561b0:	ldr	x7, [x4, x5, lsl #3]
  4561b4:	add	x5, x5, #0x1
  4561b8:	lsl	x6, x7, #4
  4561bc:	add	x8, x9, x6
  4561c0:	ldrb	w8, [x8, #8]
  4561c4:	cmp	w19, w8
  4561c8:	b.ne	4561a8 <_obstack_memory_used@@Base+0x4d98>  // b.any
  4561cc:	ldr	x6, [x9, x6]
  4561d0:	cmp	x20, x6
  4561d4:	b.ne	4561a8 <_obstack_memory_used@@Base+0x4d98>  // b.any
  4561d8:	cmn	x7, #0x1
  4561dc:	b.eq	456240 <_obstack_memory_used@@Base+0x4e30>  // b.none
  4561e0:	mov	w4, w19
  4561e4:	mov	x3, x20
  4561e8:	add	x1, sp, #0x48
  4561ec:	mov	x0, x23
  4561f0:	bl	455fd8 <_obstack_memory_used@@Base+0x4bc8>
  4561f4:	mov	w21, w0
  4561f8:	cbnz	w0, 456250 <_obstack_memory_used@@Base+0x4e40>
  4561fc:	ldr	x0, [x24, #8]
  456200:	add	x22, x22, #0x1
  456204:	cmp	x0, x22
  456208:	b.gt	456178 <_obstack_memory_used@@Base+0x4d68>
  45620c:	ldr	x0, [x24, #16]
  456210:	mov	w21, #0x0                   	// #0
  456214:	bl	4047b0 <free@plt>
  456218:	ldp	x0, x1, [sp, #72]
  45621c:	stp	x0, x1, [x24]
  456220:	ldr	x0, [sp, #88]
  456224:	str	x0, [x24, #16]
  456228:	mov	w0, w21
  45622c:	ldp	x19, x20, [sp, #16]
  456230:	ldp	x21, x22, [sp, #32]
  456234:	ldp	x23, x24, [sp, #48]
  456238:	ldp	x29, x30, [sp], #96
  45623c:	ret
  456240:	add	x0, sp, #0x48
  456244:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  456248:	mov	w21, w0
  45624c:	cbz	w0, 4561fc <_obstack_memory_used@@Base+0x4dec>
  456250:	ldr	x0, [sp, #88]
  456254:	bl	4047b0 <free@plt>
  456258:	mov	w0, w21
  45625c:	ldp	x19, x20, [sp, #16]
  456260:	ldp	x21, x22, [sp, #32]
  456264:	ldp	x23, x24, [sp, #48]
  456268:	ldp	x29, x30, [sp], #96
  45626c:	ret
  456270:	mov	w21, #0xc                   	// #12
  456274:	mov	w0, w21
  456278:	ldp	x19, x20, [sp, #16]
  45627c:	ldp	x21, x22, [sp, #32]
  456280:	ldp	x23, x24, [sp, #48]
  456284:	ldp	x29, x30, [sp], #96
  456288:	ret
  45628c:	nop
  456290:	stp	x29, x30, [sp, #-48]!
  456294:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
  456298:	mov	x29, sp
  45629c:	stp	x19, x20, [sp, #16]
  4562a0:	mov	x19, x0
  4562a4:	ldr	x0, [x0, #64]
  4562a8:	cmp	x0, x2
  4562ac:	b.hi	4563f4 <_obstack_memory_used@@Base+0x4fe4>  // b.pmore
  4562b0:	ldr	x2, [x19, #88]
  4562b4:	lsl	x20, x0, #1
  4562b8:	sxtw	x1, w1
  4562bc:	ldr	w0, [x19, #144]
  4562c0:	cmp	x20, x2
  4562c4:	csel	x20, x20, x2, le
  4562c8:	cmp	x20, x1
  4562cc:	csel	x20, x20, x1, ge  // ge = tcont
  4562d0:	cmp	w0, #0x1
  4562d4:	b.le	456314 <_obstack_memory_used@@Base+0x4f04>
  4562d8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4562dc:	cmp	x20, x0
  4562e0:	b.hi	4563f4 <_obstack_memory_used@@Base+0x4fe4>  // b.pmore
  4562e4:	ldr	x0, [x19, #16]
  4562e8:	lsl	x1, x20, #2
  4562ec:	bl	404530 <realloc@plt>
  4562f0:	mov	x1, x0
  4562f4:	cbz	x0, 4563f4 <_obstack_memory_used@@Base+0x4fe4>
  4562f8:	ldr	x0, [x19, #24]
  4562fc:	str	x1, [x19, #16]
  456300:	cbz	x0, 456314 <_obstack_memory_used@@Base+0x4f04>
  456304:	lsl	x1, x20, #3
  456308:	bl	404530 <realloc@plt>
  45630c:	cbz	x0, 4563f4 <_obstack_memory_used@@Base+0x4fe4>
  456310:	str	x0, [x19, #24]
  456314:	ldrb	w0, [x19, #139]
  456318:	cbnz	w0, 456404 <_obstack_memory_used@@Base+0x4ff4>
  45631c:	ldr	x0, [x19, #184]
  456320:	str	x20, [x19, #64]
  456324:	cbz	x0, 45633c <_obstack_memory_used@@Base+0x4f2c>
  456328:	add	x1, x20, #0x1
  45632c:	lsl	x1, x1, #3
  456330:	bl	404530 <realloc@plt>
  456334:	cbz	x0, 4563f4 <_obstack_memory_used@@Base+0x4fe4>
  456338:	str	x0, [x19, #184]
  45633c:	ldrb	w0, [x19, #136]
  456340:	ldr	w1, [x19, #144]
  456344:	cmp	w1, #0x1
  456348:	cbz	w0, 456360 <_obstack_memory_used@@Base+0x4f50>
  45634c:	b.le	456434 <_obstack_memory_used@@Base+0x5024>
  456350:	mov	x0, x19
  456354:	ldp	x19, x20, [sp, #16]
  456358:	ldp	x29, x30, [sp], #48
  45635c:	b	451ec0 <_obstack_memory_used@@Base+0xab0>
  456360:	b.gt	45641c <_obstack_memory_used@@Base+0x500c>
  456364:	ldr	x3, [x19, #120]
  456368:	mov	w0, #0x0                   	// #0
  45636c:	cbz	x3, 4563e8 <_obstack_memory_used@@Base+0x4fd8>
  456370:	ldr	x2, [x19, #64]
  456374:	ldr	x0, [x19, #88]
  456378:	ldr	x1, [x19, #48]
  45637c:	cmp	x2, x0
  456380:	csel	x2, x2, x0, le
  456384:	cmp	x2, x1
  456388:	b.le	4564d0 <_obstack_memory_used@@Base+0x50c0>
  45638c:	ldp	x4, x5, [x19]
  456390:	add	x0, x1, #0x1
  456394:	ldr	x6, [x19, #40]
  456398:	cmp	x2, x0
  45639c:	add	x4, x4, x1
  4563a0:	ldrb	w4, [x4, x6]
  4563a4:	ldrb	w3, [x3, x4]
  4563a8:	strb	w3, [x5, x1]
  4563ac:	b.le	4563dc <_obstack_memory_used@@Base+0x4fcc>
  4563b0:	ldr	x1, [x19]
  4563b4:	ldr	x3, [x19, #40]
  4563b8:	add	x1, x1, x0
  4563bc:	ldr	x4, [x19, #120]
  4563c0:	ldrb	w3, [x1, x3]
  4563c4:	ldr	x1, [x19, #8]
  4563c8:	ldrb	w3, [x4, x3]
  4563cc:	strb	w3, [x1, x0]
  4563d0:	add	x0, x0, #0x1
  4563d4:	cmp	x2, x0
  4563d8:	b.ne	4563b0 <_obstack_memory_used@@Base+0x4fa0>  // b.any
  4563dc:	dup	v0.2d, x2
  4563e0:	mov	w0, #0x0                   	// #0
  4563e4:	str	q0, [x19, #48]
  4563e8:	ldp	x19, x20, [sp, #16]
  4563ec:	ldp	x29, x30, [sp], #48
  4563f0:	ret
  4563f4:	mov	w0, #0xc                   	// #12
  4563f8:	ldp	x19, x20, [sp, #16]
  4563fc:	ldp	x29, x30, [sp], #48
  456400:	ret
  456404:	ldr	x0, [x19, #8]
  456408:	mov	x1, x20
  45640c:	bl	404530 <realloc@plt>
  456410:	cbz	x0, 4563f4 <_obstack_memory_used@@Base+0x4fe4>
  456414:	str	x0, [x19, #8]
  456418:	b	45631c <_obstack_memory_used@@Base+0x4f0c>
  45641c:	mov	x0, x19
  456420:	bl	451cc8 <_obstack_memory_used@@Base+0x8b8>
  456424:	mov	w0, #0x0                   	// #0
  456428:	ldp	x19, x20, [sp, #16]
  45642c:	ldp	x29, x30, [sp], #48
  456430:	ret
  456434:	ldr	x20, [x19, #48]
  456438:	ldr	x0, [x19, #88]
  45643c:	str	x21, [sp, #32]
  456440:	ldr	x21, [x19, #64]
  456444:	cmp	x21, x0
  456448:	csel	x21, x21, x0, le
  45644c:	cmp	x21, x20
  456450:	b.le	4564d8 <_obstack_memory_used@@Base+0x50c8>
  456454:	bl	404540 <__ctype_toupper_loc@plt>
  456458:	b	456478 <_obstack_memory_used@@Base+0x5068>
  45645c:	ldr	x2, [x0]
  456460:	ldr	x1, [x19, #8]
  456464:	ldr	w2, [x2, x3, lsl #2]
  456468:	strb	w2, [x1, x20]
  45646c:	add	x20, x20, #0x1
  456470:	cmp	x21, x20
  456474:	b.eq	4564b4 <_obstack_memory_used@@Base+0x50a4>  // b.none
  456478:	ldr	x1, [x19]
  45647c:	ldr	x3, [x19, #40]
  456480:	add	x1, x1, x20
  456484:	ldr	x2, [x19, #120]
  456488:	ldrb	w3, [x1, x3]
  45648c:	and	x1, x3, #0xff
  456490:	cbz	x2, 45645c <_obstack_memory_used@@Base+0x504c>
  456494:	ldrb	w2, [x2, x1]
  456498:	ldr	x3, [x0]
  45649c:	ldr	x1, [x19, #8]
  4564a0:	ldr	w2, [x3, x2, lsl #2]
  4564a4:	strb	w2, [x1, x20]
  4564a8:	add	x20, x20, #0x1
  4564ac:	cmp	x20, x21
  4564b0:	b.ne	456478 <_obstack_memory_used@@Base+0x5068>  // b.any
  4564b4:	dup	v0.2d, x21
  4564b8:	mov	w0, #0x0                   	// #0
  4564bc:	ldr	x21, [sp, #32]
  4564c0:	str	q0, [x19, #48]
  4564c4:	ldp	x19, x20, [sp, #16]
  4564c8:	ldp	x29, x30, [sp], #48
  4564cc:	ret
  4564d0:	mov	x2, x1
  4564d4:	b	4563dc <_obstack_memory_used@@Base+0x4fcc>
  4564d8:	mov	x21, x20
  4564dc:	b	4564b4 <_obstack_memory_used@@Base+0x50a4>
  4564e0:	stp	x29, x30, [sp, #-144]!
  4564e4:	mov	x29, sp
  4564e8:	stp	x21, x22, [sp, #32]
  4564ec:	ldr	x21, [x2, #8]
  4564f0:	stp	x19, x20, [sp, #16]
  4564f4:	str	x1, [sp, #104]
  4564f8:	str	x0, [sp, #136]
  4564fc:	cbz	x21, 4568dc <_obstack_memory_used@@Base+0x54cc>
  456500:	stp	x23, x24, [sp, #48]
  456504:	mov	x22, x2
  456508:	cmp	x21, #0x0
  45650c:	stp	x27, x28, [sp, #80]
  456510:	add	x23, x21, w3, uxtw
  456514:	mov	w27, w3
  456518:	b.le	45659c <_obstack_memory_used@@Base+0x518c>
  45651c:	sub	x0, x21, #0x1
  456520:	cmp	x0, #0x2
  456524:	ldr	x2, [x2, #16]
  456528:	b.ls	45694c <_obstack_memory_used@@Base+0x553c>  // b.plast
  45652c:	lsr	x1, x21, #1
  456530:	mov	x0, x2
  456534:	movi	v0.4s, #0x0
  456538:	add	x1, x2, x1, lsl #4
  45653c:	nop
  456540:	ldr	q1, [x0], #16
  456544:	add	v0.2d, v0.2d, v1.2d
  456548:	cmp	x1, x0
  45654c:	b.ne	456540 <_obstack_memory_used@@Base+0x5130>  // b.any
  456550:	addp	d0, v0.2d
  456554:	and	x1, x21, #0xfffffffffffffffe
  456558:	mov	x0, v0.d[0]
  45655c:	add	x23, x23, x0
  456560:	tbz	w21, #0, 45659c <_obstack_memory_used@@Base+0x518c>
  456564:	ldr	x0, [x2, x1, lsl #3]
  456568:	add	x3, x1, #0x1
  45656c:	cmp	x21, x3
  456570:	lsl	x3, x1, #3
  456574:	add	x23, x23, x0
  456578:	b.le	45659c <_obstack_memory_used@@Base+0x518c>
  45657c:	add	x2, x2, x3
  456580:	add	x1, x1, #0x2
  456584:	cmp	x21, x1
  456588:	ldr	x0, [x2, #8]
  45658c:	add	x23, x23, x0
  456590:	b.le	45659c <_obstack_memory_used@@Base+0x518c>
  456594:	ldr	x0, [x2, #16]
  456598:	add	x23, x23, x0
  45659c:	ldr	x1, [sp, #104]
  4565a0:	ldr	x0, [x1, #136]
  4565a4:	ldr	x1, [x1, #64]
  4565a8:	and	x0, x23, x0
  4565ac:	add	x0, x0, x0, lsl #1
  4565b0:	lsl	x0, x0, #3
  4565b4:	add	x2, x1, x0
  4565b8:	ldr	x6, [x1, x0]
  4565bc:	cmp	x6, #0x0
  4565c0:	b.le	456620 <_obstack_memory_used@@Base+0x5210>
  4565c4:	mov	x0, #0x0                   	// #0
  4565c8:	ldr	x7, [x2, #16]
  4565cc:	b	4565dc <_obstack_memory_used@@Base+0x51cc>
  4565d0:	add	x0, x0, #0x1
  4565d4:	cmp	x0, x6
  4565d8:	b.eq	456620 <_obstack_memory_used@@Base+0x5210>  // b.none
  4565dc:	ldr	x19, [x7, x0, lsl #3]
  4565e0:	ldr	x1, [x19]
  4565e4:	cmp	x1, x23
  4565e8:	b.ne	4565d0 <_obstack_memory_used@@Base+0x51c0>  // b.any
  4565ec:	ldrb	w1, [x19, #104]
  4565f0:	and	w1, w1, #0xf
  4565f4:	cmp	w1, w27
  4565f8:	b.ne	4565d0 <_obstack_memory_used@@Base+0x51c0>  // b.any
  4565fc:	ldr	x8, [x19, #80]
  456600:	cbz	x8, 4565d0 <_obstack_memory_used@@Base+0x51c0>
  456604:	ldr	x1, [x8, #8]
  456608:	cmp	x21, x1
  45660c:	b.eq	4567b8 <_obstack_memory_used@@Base+0x53a8>  // b.none
  456610:	add	x0, x0, #0x1
  456614:	cmp	x0, x6
  456618:	b.ne	4565dc <_obstack_memory_used@@Base+0x51cc>  // b.any
  45661c:	nop
  456620:	mov	x1, #0x1                   	// #1
  456624:	mov	x0, #0x70                  	// #112
  456628:	bl	4044c0 <calloc@plt>
  45662c:	mov	x19, x0
  456630:	cbz	x0, 4568c0 <_obstack_memory_used@@Base+0x54b0>
  456634:	str	x21, [x0, #16]
  456638:	add	x20, x0, #0x8
  45663c:	cmp	x21, #0x0
  456640:	b.le	456848 <_obstack_memory_used@@Base+0x5438>
  456644:	stp	x25, x26, [sp, #64]
  456648:	lsl	x0, x21, #3
  45664c:	str	x21, [x19, #8]
  456650:	str	x0, [sp, #112]
  456654:	bl	404310 <malloc@plt>
  456658:	str	x0, [x20, #16]
  45665c:	mov	x24, x0
  456660:	cbz	x0, 45693c <_obstack_memory_used@@Base+0x552c>
  456664:	ldr	x2, [sp, #112]
  456668:	and	w1, w27, #0x1
  45666c:	ldr	x22, [x22, #16]
  456670:	str	w1, [sp, #100]
  456674:	and	w1, w27, #0x2
  456678:	add	x25, x0, #0x8
  45667c:	str	w1, [sp, #120]
  456680:	mov	x1, x22
  456684:	bl	403f70 <memcpy@plt>
  456688:	mov	x28, #0x0                   	// #0
  45668c:	ldrb	w0, [x19, #104]
  456690:	and	w1, w27, #0x4
  456694:	mov	x10, #0x0                   	// #0
  456698:	str	x20, [x19, #80]
  45669c:	str	w1, [sp, #124]
  4566a0:	bfxil	w0, w27, #0, #4
  4566a4:	strb	w0, [x19, #104]
  4566a8:	ldr	x0, [sp, #104]
  4566ac:	ldr	x26, [x0]
  4566b0:	ldr	x2, [x22, x28, lsl #3]
  4566b4:	add	x2, x26, x2, lsl #4
  4566b8:	ldr	w27, [x2, #8]
  4566bc:	ldrb	w0, [x2, #8]
  4566c0:	ubfx	x27, x27, #8, #10
  4566c4:	cmp	w27, #0x0
  4566c8:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  4566cc:	b.eq	456760 <_obstack_memory_used@@Base+0x5350>  // b.none
  4566d0:	ldrb	w9, [x2, #10]
  4566d4:	cmp	w0, #0x2
  4566d8:	ldrb	w2, [x19, #104]
  4566dc:	ubfx	x9, x9, #4, #1
  4566e0:	mov	w3, w2
  4566e4:	ubfx	x2, x2, #5, #1
  4566e8:	orr	w2, w2, w9
  4566ec:	bfi	w3, w2, #5, #1
  4566f0:	strb	w3, [x19, #104]
  4566f4:	b.eq	456864 <_obstack_memory_used@@Base+0x5454>  // b.none
  4566f8:	cmp	w0, #0x4
  4566fc:	b.eq	4567c4 <_obstack_memory_used@@Base+0x53b4>  // b.none
  456700:	cbz	w27, 456760 <_obstack_memory_used@@Base+0x5350>
  456704:	ldr	x0, [x19, #80]
  456708:	cmp	x20, x0
  45670c:	b.eq	4567d0 <_obstack_memory_used@@Base+0x53c0>  // b.none
  456710:	tbz	w27, #0, 456820 <_obstack_memory_used@@Base+0x5410>
  456714:	ldr	w0, [sp, #100]
  456718:	cbz	w0, 456720 <_obstack_memory_used@@Base+0x5310>
  45671c:	tbz	w27, #1, 45682c <_obstack_memory_used@@Base+0x541c>
  456720:	subs	x2, x28, x10
  456724:	b.mi	45675c <_obstack_memory_used@@Base+0x534c>  // b.first
  456728:	ldr	x3, [x19, #16]
  45672c:	cmp	x2, x3
  456730:	b.ge	45675c <_obstack_memory_used@@Base+0x534c>  // b.tcont
  456734:	sub	x3, x3, #0x1
  456738:	str	x3, [x19, #16]
  45673c:	cmp	x2, x3
  456740:	b.ge	45675c <_obstack_memory_used@@Base+0x534c>  // b.tcont
  456744:	nop
  456748:	ldr	x0, [x25, x2, lsl #3]
  45674c:	str	x0, [x24, x2, lsl #3]
  456750:	add	x2, x2, #0x1
  456754:	cmp	x2, x3
  456758:	b.lt	456748 <_obstack_memory_used@@Base+0x5338>  // b.tstop
  45675c:	add	x10, x10, #0x1
  456760:	add	x28, x28, #0x1
  456764:	cmp	x21, x28
  456768:	b.gt	4566b0 <_obstack_memory_used@@Base+0x52a0>
  45676c:	ldp	x25, x26, [sp, #64]
  456770:	mov	x2, x23
  456774:	ldr	x0, [sp, #104]
  456778:	mov	x1, x19
  45677c:	bl	451b68 <_obstack_memory_used@@Base+0x758>
  456780:	cbnz	w0, 456870 <_obstack_memory_used@@Base+0x5460>
  456784:	ldp	x23, x24, [sp, #48]
  456788:	ldp	x27, x28, [sp, #80]
  45678c:	mov	x0, x19
  456790:	ldp	x19, x20, [sp, #16]
  456794:	ldp	x21, x22, [sp, #32]
  456798:	ldp	x29, x30, [sp], #144
  45679c:	ret
  4567a0:	ldr	x3, [x8, #16]
  4567a4:	ldr	x2, [x22, #16]
  4567a8:	ldr	x3, [x3, x1, lsl #3]
  4567ac:	ldr	x2, [x2, x1, lsl #3]
  4567b0:	cmp	x3, x2
  4567b4:	b.ne	4565d0 <_obstack_memory_used@@Base+0x51c0>  // b.any
  4567b8:	subs	x1, x1, #0x1
  4567bc:	b.pl	4567a0 <_obstack_memory_used@@Base+0x5390>  // b.nfrst
  4567c0:	b	456784 <_obstack_memory_used@@Base+0x5374>
  4567c4:	orr	w3, w3, #0x40
  4567c8:	strb	w3, [x19, #104]
  4567cc:	b	456700 <_obstack_memory_used@@Base+0x52f0>
  4567d0:	mov	x0, #0x18                  	// #24
  4567d4:	bl	404310 <malloc@plt>
  4567d8:	str	x0, [x19, #80]
  4567dc:	mov	x2, x0
  4567e0:	cbz	x0, 4568f8 <_obstack_memory_used@@Base+0x54e8>
  4567e4:	ldr	x0, [sp, #112]
  4567e8:	stp	x21, x21, [x2]
  4567ec:	str	x2, [sp, #128]
  4567f0:	bl	404310 <malloc@plt>
  4567f4:	ldr	x2, [sp, #128]
  4567f8:	str	x0, [x2, #16]
  4567fc:	cbz	x0, 456954 <_obstack_memory_used@@Base+0x5544>
  456800:	ldr	x2, [sp, #112]
  456804:	mov	x1, x22
  456808:	bl	403f70 <memcpy@plt>
  45680c:	ldrb	w0, [x19, #104]
  456810:	mov	x10, #0x0                   	// #0
  456814:	orr	w0, w0, #0xffffff80
  456818:	strb	w0, [x19, #104]
  45681c:	tbnz	w27, #0, 456714 <_obstack_memory_used@@Base+0x5304>
  456820:	tbz	w27, #1, 45682c <_obstack_memory_used@@Base+0x541c>
  456824:	ldr	w0, [sp, #100]
  456828:	cbnz	w0, 456720 <_obstack_memory_used@@Base+0x5310>
  45682c:	tbz	w27, #4, 456838 <_obstack_memory_used@@Base+0x5428>
  456830:	ldr	w0, [sp, #120]
  456834:	cbz	w0, 456720 <_obstack_memory_used@@Base+0x5310>
  456838:	tbz	w27, #6, 456760 <_obstack_memory_used@@Base+0x5350>
  45683c:	ldr	w0, [sp, #124]
  456840:	cbnz	w0, 456760 <_obstack_memory_used@@Base+0x5350>
  456844:	b	456720 <_obstack_memory_used@@Base+0x5310>
  456848:	stp	xzr, xzr, [x0, #8]
  45684c:	str	xzr, [x20, #16]
  456850:	ldrb	w0, [x0, #104]
  456854:	str	x20, [x19, #80]
  456858:	bfxil	w0, w27, #0, #4
  45685c:	strb	w0, [x19, #104]
  456860:	b	456770 <_obstack_memory_used@@Base+0x5360>
  456864:	orr	w3, w3, #0x10
  456868:	strb	w3, [x19, #104]
  45686c:	b	456700 <_obstack_memory_used@@Base+0x52f0>
  456870:	ldr	x0, [x19, #48]
  456874:	bl	4047b0 <free@plt>
  456878:	ldr	x0, [x19, #72]
  45687c:	bl	4047b0 <free@plt>
  456880:	ldr	x0, [x19, #80]
  456884:	cmp	x20, x0
  456888:	b.eq	45689c <_obstack_memory_used@@Base+0x548c>  // b.none
  45688c:	ldr	x0, [x0, #16]
  456890:	bl	4047b0 <free@plt>
  456894:	ldr	x0, [x19, #80]
  456898:	bl	4047b0 <free@plt>
  45689c:	ldr	x0, [x19, #24]
  4568a0:	bl	4047b0 <free@plt>
  4568a4:	ldr	x0, [x19, #96]
  4568a8:	bl	4047b0 <free@plt>
  4568ac:	ldr	x0, [x19, #88]
  4568b0:	bl	4047b0 <free@plt>
  4568b4:	mov	x0, x19
  4568b8:	bl	4047b0 <free@plt>
  4568bc:	nop
  4568c0:	ldr	x1, [sp, #136]
  4568c4:	mov	w0, #0xc                   	// #12
  4568c8:	mov	x19, #0x0                   	// #0
  4568cc:	ldp	x23, x24, [sp, #48]
  4568d0:	ldp	x27, x28, [sp, #80]
  4568d4:	str	w0, [x1]
  4568d8:	b	45678c <_obstack_memory_used@@Base+0x537c>
  4568dc:	str	wzr, [x0]
  4568e0:	mov	x19, #0x0                   	// #0
  4568e4:	mov	x0, x19
  4568e8:	ldp	x19, x20, [sp, #16]
  4568ec:	ldp	x21, x22, [sp, #32]
  4568f0:	ldp	x29, x30, [sp], #144
  4568f4:	ret
  4568f8:	ldr	x0, [x19, #48]
  4568fc:	bl	4047b0 <free@plt>
  456900:	ldr	x0, [x19, #72]
  456904:	bl	4047b0 <free@plt>
  456908:	ldr	x0, [x19, #80]
  45690c:	cmp	x20, x0
  456910:	b.eq	456924 <_obstack_memory_used@@Base+0x5514>  // b.none
  456914:	ldr	x0, [x0, #16]
  456918:	bl	4047b0 <free@plt>
  45691c:	ldr	x0, [x19, #80]
  456920:	bl	4047b0 <free@plt>
  456924:	ldr	x0, [x19, #24]
  456928:	bl	4047b0 <free@plt>
  45692c:	ldr	x0, [x19, #96]
  456930:	bl	4047b0 <free@plt>
  456934:	ldr	x0, [x19, #88]
  456938:	bl	4047b0 <free@plt>
  45693c:	mov	x0, x19
  456940:	bl	4047b0 <free@plt>
  456944:	ldp	x25, x26, [sp, #64]
  456948:	b	4568c0 <_obstack_memory_used@@Base+0x54b0>
  45694c:	mov	x1, #0x0                   	// #0
  456950:	b	456564 <_obstack_memory_used@@Base+0x5154>
  456954:	stp	xzr, xzr, [x2]
  456958:	ldp	x25, x26, [sp, #64]
  45695c:	b	4568c0 <_obstack_memory_used@@Base+0x54b0>
  456960:	stp	x29, x30, [sp, #-224]!
  456964:	mov	x29, sp
  456968:	stp	x23, x24, [sp, #48]
  45696c:	mov	x23, x0
  456970:	mov	x0, #0x3800                	// #14336
  456974:	str	x1, [sp, #144]
  456978:	bl	404310 <malloc@plt>
  45697c:	str	x0, [sp, #104]
  456980:	cbz	x0, 457238 <_obstack_memory_used@@Base+0x5e28>
  456984:	mov	x1, #0x1800                	// #6144
  456988:	stp	x19, x20, [sp, #16]
  45698c:	add	x20, x0, x1
  456990:	ldr	x1, [sp, #144]
  456994:	stp	x25, x26, [sp, #64]
  456998:	add	x25, x1, #0x8
  45699c:	stp	xzr, xzr, [sp, #192]
  4569a0:	stp	xzr, xzr, [x1, #88]
  4569a4:	ldr	x1, [x25, #8]
  4569a8:	stp	xzr, xzr, [sp, #208]
  4569ac:	cmp	x1, #0x0
  4569b0:	b.le	4572ac <_obstack_memory_used@@Base+0x5e9c>
  4569b4:	mov	x19, #0x0                   	// #0
  4569b8:	mov	x24, #0x0                   	// #0
  4569bc:	stp	x21, x22, [sp, #32]
  4569c0:	stp	x27, x28, [sp, #80]
  4569c4:	lsl	x1, x24, #3
  4569c8:	ldr	x0, [x25, #16]
  4569cc:	str	x1, [sp, #120]
  4569d0:	ldr	x2, [x23]
  4569d4:	ldr	x1, [x0, x24, lsl #3]
  4569d8:	lsl	x1, x1, #4
  4569dc:	add	x21, x2, x1
  4569e0:	ldr	w0, [x21, #8]
  4569e4:	ldrb	w10, [x21, #8]
  4569e8:	ubfx	x0, x0, #8, #10
  4569ec:	cmp	w10, #0x1
  4569f0:	b.eq	456c74 <_obstack_memory_used@@Base+0x5864>  // b.none
  4569f4:	cmp	w10, #0x3
  4569f8:	b.eq	45716c <_obstack_memory_used@@Base+0x5d5c>  // b.none
  4569fc:	cmp	w10, #0x5
  456a00:	b.eq	457038 <_obstack_memory_used@@Base+0x5c28>  // b.none
  456a04:	cmp	w10, #0x7
  456a08:	b.eq	45713c <_obstack_memory_used@@Base+0x5d2c>  // b.none
  456a0c:	ldr	x0, [x25, #8]
  456a10:	add	x24, x24, #0x1
  456a14:	cmp	x24, x0
  456a18:	b.lt	4569c4 <_obstack_memory_used@@Base+0x55b4>  // b.tstop
  456a1c:	cmp	x19, #0x0
  456a20:	b.le	4573c8 <_obstack_memory_used@@Base+0x5fb8>
  456a24:	add	x22, x19, #0x1
  456a28:	stp	x22, xzr, [sp, #168]
  456a2c:	lsl	x27, x19, #1
  456a30:	lsl	x22, x22, #3
  456a34:	mov	x0, x22
  456a38:	bl	404310 <malloc@plt>
  456a3c:	str	x0, [sp, #184]
  456a40:	mov	x25, x0
  456a44:	cbz	x0, 456fb4 <_obstack_memory_used@@Base+0x5ba4>
  456a48:	mov	x0, #0xa855                	// #43093
  456a4c:	str	wzr, [sp, #164]
  456a50:	movk	x0, #0xaaaa, lsl #16
  456a54:	lsl	x27, x19, #1
  456a58:	movk	x0, #0xaaaa, lsl #32
  456a5c:	movk	x0, #0xaaa, lsl #48
  456a60:	cmp	x19, x0
  456a64:	b.gt	456fb4 <_obstack_memory_used@@Base+0x5ba4>
  456a68:	add	x26, x27, x19
  456a6c:	lsl	x21, x26, #3
  456a70:	mov	x0, x21
  456a74:	bl	404310 <malloc@plt>
  456a78:	mov	x24, x0
  456a7c:	cbz	x0, 456fb4 <_obstack_memory_used@@Base+0x5ba4>
  456a80:	ldr	x0, [sp, #104]
  456a84:	sub	x22, x22, #0x8
  456a88:	mov	x25, x20
  456a8c:	str	wzr, [sp, #136]
  456a90:	add	x26, x0, #0x8
  456a94:	add	x0, x24, x22
  456a98:	stp	x20, x0, [sp, #112]
  456a9c:	add	x0, x0, x22
  456aa0:	mov	x22, #0x0                   	// #0
  456aa4:	str	x0, [sp, #128]
  456aa8:	stp	xzr, xzr, [sp, #192]
  456aac:	stp	xzr, xzr, [sp, #208]
  456ab0:	mov	x28, #0x0                   	// #0
  456ab4:	ldr	x5, [x26]
  456ab8:	str	xzr, [sp, #176]
  456abc:	cmp	x5, #0x0
  456ac0:	b.le	456b0c <_obstack_memory_used@@Base+0x56fc>
  456ac4:	nop
  456ac8:	ldr	x3, [x26, #8]
  456acc:	add	x0, sp, #0xa8
  456ad0:	ldr	x1, [x23, #24]
  456ad4:	ldr	x3, [x3, x28, lsl #3]
  456ad8:	add	x28, x28, #0x1
  456adc:	ldr	x3, [x1, x3, lsl #3]
  456ae0:	cmn	x3, #0x1
  456ae4:	b.eq	456b04 <_obstack_memory_used@@Base+0x56f4>  // b.none
  456ae8:	ldr	x1, [x23, #48]
  456aec:	add	x3, x3, x3, lsl #1
  456af0:	add	x1, x1, x3, lsl #3
  456af4:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  456af8:	str	w0, [sp, #164]
  456afc:	cbnz	w0, 456fa8 <_obstack_memory_used@@Base+0x5b98>
  456b00:	ldr	x5, [x26]
  456b04:	cmp	x28, x5
  456b08:	b.lt	456ac8 <_obstack_memory_used@@Base+0x56b8>  // b.tstop
  456b0c:	add	x2, sp, #0xa8
  456b10:	mov	x1, x23
  456b14:	add	x0, sp, #0xa4
  456b18:	mov	w3, #0x0                   	// #0
  456b1c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  456b20:	str	x0, [x24, x22, lsl #3]
  456b24:	cbz	x0, 456fa0 <_obstack_memory_used@@Base+0x5b90>
  456b28:	ldrsb	w1, [x0, #104]
  456b2c:	tbnz	w1, #31, 4571bc <_obstack_memory_used@@Base+0x5dac>
  456b30:	ldr	x1, [sp, #120]
  456b34:	str	x0, [x1, x22, lsl #3]
  456b38:	ldr	x1, [sp, #128]
  456b3c:	str	x0, [x1, x22, lsl #3]
  456b40:	ldp	x2, x5, [x25]
  456b44:	add	x22, x22, #0x1
  456b48:	ldp	x0, x3, [sp, #192]
  456b4c:	cmp	x22, x19
  456b50:	ldr	x1, [sp, #208]
  456b54:	add	x26, x26, #0x18
  456b58:	add	x25, x25, #0x20
  456b5c:	orr	x2, x2, x0
  456b60:	str	x2, [sp, #192]
  456b64:	orr	x3, x3, x5
  456b68:	ldur	x5, [x25, #-16]
  456b6c:	str	x3, [sp, #200]
  456b70:	ldr	x0, [sp, #216]
  456b74:	orr	x1, x1, x5
  456b78:	ldur	x3, [x25, #-8]
  456b7c:	orr	x0, x0, x3
  456b80:	stp	x1, x0, [sp, #208]
  456b84:	b.ne	456ab0 <_obstack_memory_used@@Base+0x56a0>  // b.any
  456b88:	ldr	w0, [sp, #136]
  456b8c:	str	x2, [sp, #152]
  456b90:	cbnz	w0, 457300 <_obstack_memory_used@@Base+0x5ef0>
  456b94:	mov	x1, #0x100                 	// #256
  456b98:	mov	x0, #0x8                   	// #8
  456b9c:	bl	4044c0 <calloc@plt>
  456ba0:	mov	x8, x0
  456ba4:	ldr	x0, [sp, #144]
  456ba8:	str	x8, [x0, #88]
  456bac:	cbz	x8, 456fa8 <_obstack_memory_used@@Base+0x5b98>
  456bb0:	ldr	x2, [sp, #152]
  456bb4:	add	x6, x23, #0xb8
  456bb8:	add	x9, sp, #0xc0
  456bbc:	mov	x7, #0x0                   	// #0
  456bc0:	ldr	x0, [x9]
  456bc4:	add	x4, x8, x7, lsl #9
  456bc8:	mov	x1, #0x1                   	// #1
  456bcc:	cbz	x0, 456be4 <_obstack_memory_used@@Base+0x57d4>
  456bd0:	tbnz	w0, #0, 457254 <_obstack_memory_used@@Base+0x5e44>
  456bd4:	lsl	x1, x1, #1
  456bd8:	lsr	x0, x0, #1
  456bdc:	add	x4, x4, #0x8
  456be0:	cbnz	x0, 456bd0 <_obstack_memory_used@@Base+0x57c0>
  456be4:	ldr	x0, [sp, #112]
  456be8:	add	x7, x7, #0x1
  456bec:	add	x9, x9, #0x8
  456bf0:	cmp	x7, #0x4
  456bf4:	add	x0, x0, #0x8
  456bf8:	str	x0, [sp, #112]
  456bfc:	b.ne	456bc0 <_obstack_memory_used@@Base+0x57b0>  // b.any
  456c00:	tst	w2, #0x400
  456c04:	b.eq	456c28 <_obstack_memory_used@@Base+0x5818>  // b.none
  456c08:	mov	x0, #0x0                   	// #0
  456c0c:	lsl	x1, x0, #5
  456c10:	ldr	x1, [x20, x1]
  456c14:	tst	w1, #0x400
  456c18:	b.ne	4572e4 <_obstack_memory_used@@Base+0x5ed4>  // b.any
  456c1c:	add	x0, x0, #0x1
  456c20:	cmp	x0, x19
  456c24:	b.ne	456c0c <_obstack_memory_used@@Base+0x57fc>  // b.any
  456c28:	mov	x0, x24
  456c2c:	bl	4047b0 <free@plt>
  456c30:	ldr	x0, [sp, #184]
  456c34:	ldr	x19, [sp, #104]
  456c38:	add	x26, x19, x21
  456c3c:	bl	4047b0 <free@plt>
  456c40:	ldr	x0, [x19, #16]
  456c44:	add	x19, x19, #0x18
  456c48:	bl	4047b0 <free@plt>
  456c4c:	cmp	x19, x26
  456c50:	b.ne	456c40 <_obstack_memory_used@@Base+0x5830>  // b.any
  456c54:	ldr	x0, [sp, #104]
  456c58:	bl	4047b0 <free@plt>
  456c5c:	mov	w0, #0x1                   	// #1
  456c60:	ldp	x19, x20, [sp, #16]
  456c64:	ldp	x21, x22, [sp, #32]
  456c68:	ldp	x25, x26, [sp, #64]
  456c6c:	ldp	x27, x28, [sp, #80]
  456c70:	b	457000 <_obstack_memory_used@@Base+0x5bf0>
  456c74:	ldrb	w2, [x2, x1]
  456c78:	add	x3, sp, #0xc0
  456c7c:	mov	x1, #0x1                   	// #1
  456c80:	ubfx	x4, x2, #6, #2
  456c84:	lsl	x2, x1, x2
  456c88:	ldr	x1, [x3, x4, lsl #3]
  456c8c:	orr	x1, x1, x2
  456c90:	str	x1, [x3, x4, lsl #3]
  456c94:	cbz	w0, 456d98 <_obstack_memory_used@@Base+0x5988>
  456c98:	tbnz	w0, #5, 456f68 <_obstack_memory_used@@Base+0x5b58>
  456c9c:	tbnz	w0, #7, 456f88 <_obstack_memory_used@@Base+0x5b78>
  456ca0:	tbz	w0, #2, 456d1c <_obstack_memory_used@@Base+0x590c>
  456ca4:	cmp	w10, #0x1
  456ca8:	b.eq	457114 <_obstack_memory_used@@Base+0x5d04>  // b.none
  456cac:	ldr	w1, [x23, #180]
  456cb0:	ldp	x15, x14, [x23, #184]
  456cb4:	cmp	w1, #0x1
  456cb8:	ldp	x2, x5, [sp, #192]
  456cbc:	ldp	x3, x4, [x23, #200]
  456cc0:	ldp	x13, x9, [sp, #208]
  456cc4:	b.le	4570e8 <_obstack_memory_used@@Base+0x5cd8>
  456cc8:	ldr	x12, [x23, #120]
  456ccc:	ldr	x1, [x12]
  456cd0:	orn	x1, x15, x1
  456cd4:	and	x1, x1, x2
  456cd8:	str	x1, [sp, #192]
  456cdc:	ldr	x2, [x12, #8]
  456ce0:	orn	x2, x14, x2
  456ce4:	and	x2, x2, x5
  456ce8:	str	x2, [sp, #200]
  456cec:	orr	x1, x1, x2
  456cf0:	ldr	x2, [x12, #16]
  456cf4:	orn	x2, x3, x2
  456cf8:	and	x2, x2, x13
  456cfc:	str	x2, [sp, #208]
  456d00:	ldr	x3, [x12, #24]
  456d04:	orn	x3, x4, x3
  456d08:	and	x3, x3, x9
  456d0c:	str	x3, [sp, #216]
  456d10:	orr	x2, x2, x3
  456d14:	orr	x1, x1, x2
  456d18:	cbz	x1, 456a0c <_obstack_memory_used@@Base+0x55fc>
  456d1c:	tbz	w0, #3, 456d98 <_obstack_memory_used@@Base+0x5988>
  456d20:	cmp	w10, #0x1
  456d24:	b.eq	4571b0 <_obstack_memory_used@@Base+0x5da0>  // b.none
  456d28:	ldr	w0, [x23, #180]
  456d2c:	ldp	x4, x12, [sp, #192]
  456d30:	cmp	w0, #0x1
  456d34:	ldp	x0, x2, [x23, #184]
  456d38:	ldp	x1, x3, [x23, #200]
  456d3c:	ldp	x13, x9, [sp, #208]
  456d40:	b.le	4570bc <_obstack_memory_used@@Base+0x5cac>
  456d44:	ldr	x5, [x23, #120]
  456d48:	ldr	x14, [x5]
  456d4c:	and	x0, x0, x14
  456d50:	bic	x0, x4, x0
  456d54:	str	x0, [sp, #192]
  456d58:	ldr	x4, [x5, #8]
  456d5c:	and	x2, x2, x4
  456d60:	bic	x2, x12, x2
  456d64:	str	x2, [sp, #200]
  456d68:	orr	x0, x0, x2
  456d6c:	ldr	x2, [x5, #16]
  456d70:	and	x1, x1, x2
  456d74:	bic	x1, x13, x1
  456d78:	str	x1, [sp, #208]
  456d7c:	ldr	x2, [x5, #24]
  456d80:	and	x3, x3, x2
  456d84:	bic	x3, x9, x3
  456d88:	str	x3, [sp, #216]
  456d8c:	orr	x1, x1, x3
  456d90:	orr	x0, x0, x1
  456d94:	cbz	x0, 456a0c <_obstack_memory_used@@Base+0x55fc>
  456d98:	cmp	x19, #0x0
  456d9c:	mov	x22, x20
  456da0:	mov	x26, #0x0                   	// #0
  456da4:	ldr	x27, [sp, #104]
  456da8:	b.gt	456ddc <_obstack_memory_used@@Base+0x59cc>
  456dac:	b	456f00 <_obstack_memory_used@@Base+0x5af0>
  456db0:	ldrb	w2, [x21]
  456db4:	ubfx	x1, x2, #6, #2
  456db8:	add	x1, x20, x1, lsl #3
  456dbc:	ldr	x0, [x1, x0]
  456dc0:	lsr	x0, x0, x2
  456dc4:	tbnz	w0, #0, 456de8 <_obstack_memory_used@@Base+0x59d8>
  456dc8:	add	x26, x26, #0x1
  456dcc:	add	x22, x22, #0x20
  456dd0:	cmp	x26, x19
  456dd4:	add	x27, x27, #0x18
  456dd8:	b.ge	456f00 <_obstack_memory_used@@Base+0x5af0>  // b.tcont
  456ddc:	cmp	w10, #0x1
  456de0:	lsl	x0, x26, #5
  456de4:	b.eq	456db0 <_obstack_memory_used@@Base+0x59a0>  // b.none
  456de8:	ldp	x28, x0, [x22]
  456dec:	ldp	x5, x4, [x22, #16]
  456df0:	ldp	x1, x14, [sp, #192]
  456df4:	ldp	x13, x12, [sp, #208]
  456df8:	and	x18, x1, x28
  456dfc:	and	x17, x14, x0
  456e00:	orr	x30, x18, x17
  456e04:	and	x16, x13, x5
  456e08:	and	x15, x12, x4
  456e0c:	orr	x2, x16, x15
  456e10:	orr	x2, x2, x30
  456e14:	cbz	x2, 456dc8 <_obstack_memory_used@@Base+0x59b8>
  456e18:	bic	x30, x14, x0
  456e1c:	bic	x2, x28, x1
  456e20:	bic	x0, x0, x14
  456e24:	bic	x28, x1, x28
  456e28:	bic	x14, x13, x5
  456e2c:	bic	x5, x5, x13
  456e30:	bic	x13, x12, x4
  456e34:	bic	x4, x4, x12
  456e38:	stp	x28, x30, [sp, #192]
  456e3c:	orr	x1, x14, x13
  456e40:	orr	x12, x2, x0
  456e44:	stp	x14, x13, [sp, #208]
  456e48:	orr	x28, x28, x30
  456e4c:	orr	x13, x5, x4
  456e50:	orr	x28, x28, x1
  456e54:	orr	x1, x12, x13
  456e58:	cbz	x1, 456ed8 <_obstack_memory_used@@Base+0x5ac8>
  456e5c:	lsl	x1, x19, #5
  456e60:	add	x12, x19, x19, lsl #1
  456e64:	add	x13, x20, x1
  456e68:	ldr	x3, [sp, #104]
  456e6c:	str	x2, [x20, x1]
  456e70:	stp	x0, x5, [x13, #8]
  456e74:	str	x4, [x13, #24]
  456e78:	add	x1, x3, x12, lsl #3
  456e7c:	stp	x18, x17, [x22]
  456e80:	stp	x16, x15, [x22, #16]
  456e84:	ldr	x0, [x27, #8]
  456e88:	str	x0, [x1, #8]
  456e8c:	cmp	x0, #0x0
  456e90:	b.le	456f94 <_obstack_memory_used@@Base+0x5b84>
  456e94:	lsl	x2, x0, #3
  456e98:	str	x0, [x3, x12, lsl #3]
  456e9c:	mov	x0, x2
  456ea0:	str	x2, [sp, #112]
  456ea4:	str	w10, [sp, #128]
  456ea8:	str	x1, [sp, #136]
  456eac:	bl	404310 <malloc@plt>
  456eb0:	ldr	x1, [sp, #136]
  456eb4:	ldr	w10, [sp, #128]
  456eb8:	ldr	x2, [sp, #112]
  456ebc:	str	x0, [x1, #16]
  456ec0:	cbz	x0, 45700c <_obstack_memory_used@@Base+0x5bfc>
  456ec4:	ldr	x1, [x27, #16]
  456ec8:	str	w10, [sp, #112]
  456ecc:	bl	403f70 <memcpy@plt>
  456ed0:	ldr	w10, [sp, #112]
  456ed4:	add	x19, x19, #0x1
  456ed8:	ldr	x1, [x25, #16]
  456edc:	mov	x0, x27
  456ee0:	ldr	x2, [sp, #120]
  456ee4:	str	w10, [sp, #112]
  456ee8:	ldr	x1, [x1, x2]
  456eec:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  456ef0:	tst	w0, #0xff
  456ef4:	b.eq	457010 <_obstack_memory_used@@Base+0x5c00>  // b.none
  456ef8:	ldr	w10, [sp, #112]
  456efc:	cbnz	x28, 456dc8 <_obstack_memory_used@@Base+0x59b8>
  456f00:	cmp	x26, x19
  456f04:	b.ne	456a0c <_obstack_memory_used@@Base+0x55fc>  // b.any
  456f08:	add	x5, x20, x19, lsl #5
  456f0c:	add	x4, x19, x19, lsl #1
  456f10:	ldp	x0, x1, [sp, #192]
  456f14:	lsl	x4, x4, #3
  456f18:	ldr	x9, [x25, #16]
  456f1c:	ldp	x2, x3, [sp, #208]
  456f20:	stp	x0, x1, [x5]
  456f24:	mov	x0, #0x8                   	// #8
  456f28:	ldr	x1, [sp, #120]
  456f2c:	stp	x2, x3, [x5, #16]
  456f30:	ldr	x6, [sp, #104]
  456f34:	ldr	x22, [x9, x1]
  456f38:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  456f3c:	add	x28, x6, x4
  456f40:	ldr	q0, [x1, #1536]
  456f44:	str	q0, [x6, x4]
  456f48:	bl	404310 <malloc@plt>
  456f4c:	str	x0, [x28, #16]
  456f50:	cbz	x0, 457248 <_obstack_memory_used@@Base+0x5e38>
  456f54:	add	x19, x19, #0x1
  456f58:	str	x22, [x0]
  456f5c:	stp	xzr, xzr, [sp, #192]
  456f60:	stp	xzr, xzr, [sp, #208]
  456f64:	b	456a0c <_obstack_memory_used@@Base+0x55fc>
  456f68:	ldr	x1, [sp, #192]
  456f6c:	stp	xzr, xzr, [sp, #192]
  456f70:	stp	xzr, xzr, [sp, #208]
  456f74:	tst	w1, #0x400
  456f78:	b.eq	456a0c <_obstack_memory_used@@Base+0x55fc>  // b.none
  456f7c:	mov	x1, #0x400                 	// #1024
  456f80:	str	x1, [sp, #192]
  456f84:	tbz	w0, #7, 456ca0 <_obstack_memory_used@@Base+0x5890>
  456f88:	stp	xzr, xzr, [sp, #192]
  456f8c:	stp	xzr, xzr, [sp, #208]
  456f90:	b	456a0c <_obstack_memory_used@@Base+0x55fc>
  456f94:	stp	xzr, xzr, [x1]
  456f98:	str	xzr, [x1, #16]
  456f9c:	b	456ed4 <_obstack_memory_used@@Base+0x5ac4>
  456fa0:	ldr	w1, [sp, #164]
  456fa4:	cbz	w1, 456b28 <_obstack_memory_used@@Base+0x5718>
  456fa8:	mov	x0, x24
  456fac:	bl	4047b0 <free@plt>
  456fb0:	ldr	x25, [sp, #184]
  456fb4:	mov	x0, x25
  456fb8:	bl	4047b0 <free@plt>
  456fbc:	add	x19, x27, x19
  456fc0:	ldr	x0, [sp, #104]
  456fc4:	mov	x20, x0
  456fc8:	add	x19, x0, x19, lsl #3
  456fcc:	nop
  456fd0:	ldr	x0, [x20, #16]
  456fd4:	add	x20, x20, #0x18
  456fd8:	bl	4047b0 <free@plt>
  456fdc:	cmp	x19, x20
  456fe0:	b.ne	456fd0 <_obstack_memory_used@@Base+0x5bc0>  // b.any
  456fe4:	ldr	x0, [sp, #104]
  456fe8:	bl	4047b0 <free@plt>
  456fec:	ldp	x19, x20, [sp, #16]
  456ff0:	mov	w0, #0x0                   	// #0
  456ff4:	ldp	x21, x22, [sp, #32]
  456ff8:	ldp	x25, x26, [sp, #64]
  456ffc:	ldp	x27, x28, [sp, #80]
  457000:	ldp	x23, x24, [sp, #48]
  457004:	ldp	x29, x30, [sp], #224
  457008:	ret
  45700c:	stp	xzr, xzr, [x1]
  457010:	mov	x20, #0x0                   	// #0
  457014:	ldr	x0, [sp, #104]
  457018:	add	x22, x0, #0x10
  45701c:	nop
  457020:	ldr	x0, [x22], #24
  457024:	add	x20, x20, #0x1
  457028:	bl	4047b0 <free@plt>
  45702c:	cmp	x20, x19
  457030:	b.lt	457020 <_obstack_memory_used@@Base+0x5c10>  // b.tstop
  457034:	b	456fe4 <_obstack_memory_used@@Base+0x5bd4>
  457038:	ldr	w1, [x23, #180]
  45703c:	cmp	w1, #0x1
  457040:	b.le	4570a4 <_obstack_memory_used@@Base+0x5c94>
  457044:	ldr	x2, [x23, #120]
  457048:	ldp	x1, x5, [sp, #192]
  45704c:	ldr	x3, [x2]
  457050:	ldr	x4, [sp, #208]
  457054:	orr	x1, x1, x3
  457058:	str	x1, [sp, #192]
  45705c:	ldr	x3, [sp, #216]
  457060:	ldr	x9, [x2, #8]
  457064:	orr	x5, x5, x9
  457068:	str	x5, [sp, #200]
  45706c:	ldr	x5, [x2, #16]
  457070:	orr	x4, x4, x5
  457074:	str	x4, [sp, #208]
  457078:	ldr	x2, [x2, #24]
  45707c:	orr	x2, x3, x2
  457080:	str	x2, [sp, #216]
  457084:	ldr	x2, [x23, #216]
  457088:	tbnz	w2, #6, 457094 <_obstack_memory_used@@Base+0x5c84>
  45708c:	and	x1, x1, #0xfffffffffffffbff
  457090:	str	x1, [sp, #192]
  457094:	tbz	w2, #7, 456c94 <_obstack_memory_used@@Base+0x5884>
  457098:	and	x1, x1, #0xfffffffffffffffe
  45709c:	str	x1, [sp, #192]
  4570a0:	b	456c94 <_obstack_memory_used@@Base+0x5884>
  4570a4:	mov	x2, #0xffffffffffffffff    	// #-1
  4570a8:	mov	x3, #0xffffffffffffffff    	// #-1
  4570ac:	mov	x1, #0xffffffffffffffff    	// #-1
  4570b0:	stp	x2, x3, [sp, #192]
  4570b4:	stp	x2, x3, [sp, #208]
  4570b8:	b	457084 <_obstack_memory_used@@Base+0x5c74>
  4570bc:	bic	x4, x4, x0
  4570c0:	bic	x2, x12, x2
  4570c4:	bic	x1, x13, x1
  4570c8:	bic	x3, x9, x3
  4570cc:	stp	x4, x2, [sp, #192]
  4570d0:	orr	x0, x4, x2
  4570d4:	orr	x5, x1, x3
  4570d8:	stp	x1, x3, [sp, #208]
  4570dc:	orr	x0, x0, x5
  4570e0:	cbz	x0, 456a0c <_obstack_memory_used@@Base+0x55fc>
  4570e4:	b	456d98 <_obstack_memory_used@@Base+0x5988>
  4570e8:	and	x13, x13, x3
  4570ec:	and	x2, x2, x15
  4570f0:	and	x5, x5, x14
  4570f4:	and	x3, x9, x4
  4570f8:	stp	x2, x5, [sp, #192]
  4570fc:	orr	x1, x2, x5
  457100:	orr	x4, x13, x3
  457104:	stp	x13, x3, [sp, #208]
  457108:	orr	x1, x1, x4
  45710c:	cbnz	x1, 456d1c <_obstack_memory_used@@Base+0x590c>
  457110:	b	456a0c <_obstack_memory_used@@Base+0x55fc>
  457114:	ldrb	w1, [x21, #10]
  457118:	tbz	w1, #6, 456f88 <_obstack_memory_used@@Base+0x5b78>
  45711c:	ldr	w1, [x23, #180]
  457120:	ldp	x15, x14, [x23, #184]
  457124:	cmp	w1, #0x1
  457128:	ldp	x2, x5, [sp, #192]
  45712c:	ldp	x3, x4, [x23, #200]
  457130:	ldp	x13, x9, [sp, #208]
  457134:	b.gt	456cc8 <_obstack_memory_used@@Base+0x58b8>
  457138:	b	4570e8 <_obstack_memory_used@@Base+0x5cd8>
  45713c:	ldr	x1, [x23, #216]
  457140:	mov	x2, #0xffffffffffffffff    	// #-1
  457144:	mov	x3, #0xffffffffffffffff    	// #-1
  457148:	stp	x2, x3, [sp, #192]
  45714c:	mov	x2, #0xfffffffffffffffe    	// #-2
  457150:	tbnz	w1, #6, 457160 <_obstack_memory_used@@Base+0x5d50>
  457154:	mov	x3, #0xfffffffffffffbff    	// #-1025
  457158:	mov	x2, #0xfffffffffffffbfe    	// #-1026
  45715c:	str	x3, [sp, #192]
  457160:	tbz	w1, #7, 456c94 <_obstack_memory_used@@Base+0x5884>
  457164:	str	x2, [sp, #192]
  457168:	b	456c94 <_obstack_memory_used@@Base+0x5884>
  45716c:	ldr	x1, [x2, x1]
  457170:	ldp	x2, x4, [sp, #192]
  457174:	ldr	x3, [x1]
  457178:	orr	x2, x2, x3
  45717c:	str	x2, [sp, #192]
  457180:	ldr	x3, [sp, #208]
  457184:	ldr	x5, [x1, #8]
  457188:	ldr	x2, [sp, #216]
  45718c:	orr	x4, x4, x5
  457190:	str	x4, [sp, #200]
  457194:	ldr	x4, [x1, #16]
  457198:	orr	x3, x3, x4
  45719c:	str	x3, [sp, #208]
  4571a0:	ldr	x1, [x1, #24]
  4571a4:	orr	x1, x2, x1
  4571a8:	str	x1, [sp, #216]
  4571ac:	b	456c94 <_obstack_memory_used@@Base+0x5884>
  4571b0:	ldrb	w0, [x21, #10]
  4571b4:	tbz	w0, #6, 456d28 <_obstack_memory_used@@Base+0x5918>
  4571b8:	b	456f88 <_obstack_memory_used@@Base+0x5b78>
  4571bc:	mov	x1, x23
  4571c0:	add	x2, sp, #0xa8
  4571c4:	add	x0, sp, #0xa4
  4571c8:	mov	w3, #0x1                   	// #1
  4571cc:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  4571d0:	ldr	x1, [sp, #120]
  4571d4:	str	x0, [x1, x22, lsl #3]
  4571d8:	cbz	x0, 4572d8 <_obstack_memory_used@@Base+0x5ec8>
  4571dc:	ldr	x1, [x24, x22, lsl #3]
  4571e0:	cmp	x0, x1
  4571e4:	b.eq	4571fc <_obstack_memory_used@@Base+0x5dec>  // b.none
  4571e8:	ldr	w0, [x23, #180]
  4571ec:	cmp	w0, #0x2
  4571f0:	ldr	w0, [sp, #136]
  4571f4:	csinc	w0, w0, wzr, lt  // lt = tstop
  4571f8:	str	w0, [sp, #136]
  4571fc:	mov	x1, x23
  457200:	add	x2, sp, #0xa8
  457204:	add	x0, sp, #0xa4
  457208:	mov	w3, #0x2                   	// #2
  45720c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  457210:	ldr	x1, [sp, #128]
  457214:	str	x0, [x1, x22, lsl #3]
  457218:	cbnz	x0, 456b40 <_obstack_memory_used@@Base+0x5730>
  45721c:	ldr	w0, [sp, #164]
  457220:	cbz	w0, 456b40 <_obstack_memory_used@@Base+0x5730>
  457224:	b	456fa8 <_obstack_memory_used@@Base+0x5b98>
  457228:	ldp	x19, x20, [sp, #16]
  45722c:	ldp	x21, x22, [sp, #32]
  457230:	ldp	x25, x26, [sp, #64]
  457234:	ldp	x27, x28, [sp, #80]
  457238:	mov	w0, #0x0                   	// #0
  45723c:	ldp	x23, x24, [sp, #48]
  457240:	ldp	x29, x30, [sp], #224
  457244:	ret
  457248:	stp	xzr, xzr, [x28]
  45724c:	cbz	x19, 456fe4 <_obstack_memory_used@@Base+0x5bd4>
  457250:	b	457010 <_obstack_memory_used@@Base+0x5c00>
  457254:	ldr	x3, [sp, #112]
  457258:	ldr	x3, [x3]
  45725c:	tst	x1, x3
  457260:	mov	x3, #0x0                   	// #0
  457264:	b.ne	457284 <_obstack_memory_used@@Base+0x5e74>  // b.any
  457268:	add	x3, x3, #0x1
  45726c:	ldr	x10, [sp, #112]
  457270:	lsl	x5, x3, #5
  457274:	ldr	x5, [x10, x5]
  457278:	tst	x1, x5
  45727c:	b.eq	457268 <_obstack_memory_used@@Base+0x5e58>  // b.none
  457280:	lsl	x3, x3, #3
  457284:	ldr	x5, [x6, x7, lsl #3]
  457288:	tst	x1, x5
  45728c:	b.eq	4572a0 <_obstack_memory_used@@Base+0x5e90>  // b.none
  457290:	ldr	x5, [sp, #120]
  457294:	ldr	x3, [x5, x3]
  457298:	str	x3, [x4]
  45729c:	b	456bd4 <_obstack_memory_used@@Base+0x57c4>
  4572a0:	ldr	x3, [x24, x3]
  4572a4:	str	x3, [x4]
  4572a8:	b	456bd4 <_obstack_memory_used@@Base+0x57c4>
  4572ac:	bl	4047b0 <free@plt>
  4572b0:	mov	x1, #0x100                 	// #256
  4572b4:	mov	x0, #0x8                   	// #8
  4572b8:	bl	4044c0 <calloc@plt>
  4572bc:	cmp	x0, #0x0
  4572c0:	ldr	x1, [sp, #144]
  4572c4:	ldp	x19, x20, [sp, #16]
  4572c8:	ldp	x25, x26, [sp, #64]
  4572cc:	str	x0, [x1, #88]
  4572d0:	cset	w0, ne  // ne = any
  4572d4:	b	457000 <_obstack_memory_used@@Base+0x5bf0>
  4572d8:	ldr	w1, [sp, #164]
  4572dc:	cbz	w1, 4571dc <_obstack_memory_used@@Base+0x5dcc>
  4572e0:	b	456fa8 <_obstack_memory_used@@Base+0x5b98>
  4572e4:	ldr	x1, [sp, #128]
  4572e8:	ldr	x0, [x1, x0, lsl #3]
  4572ec:	str	x0, [x8, #80]
  4572f0:	ldr	w1, [sp, #136]
  4572f4:	cbz	w1, 456c28 <_obstack_memory_used@@Base+0x5818>
  4572f8:	str	x0, [x8, #2128]
  4572fc:	b	456c28 <_obstack_memory_used@@Base+0x5818>
  457300:	mov	x1, #0x200                 	// #512
  457304:	mov	x0, #0x8                   	// #8
  457308:	bl	4044c0 <calloc@plt>
  45730c:	mov	x8, x0
  457310:	ldr	x0, [sp, #144]
  457314:	str	x8, [x0, #96]
  457318:	cbz	x8, 456fa8 <_obstack_memory_used@@Base+0x5b98>
  45731c:	ldr	x2, [sp, #152]
  457320:	add	x10, sp, #0xc0
  457324:	add	x9, x8, #0x800
  457328:	mov	w7, #0x0                   	// #0
  45732c:	ldr	x0, [x10]
  457330:	mov	x4, x9
  457334:	mov	x3, #0x1                   	// #1
  457338:	cbz	x0, 457350 <_obstack_memory_used@@Base+0x5f40>
  45733c:	tbnz	w0, #0, 457374 <_obstack_memory_used@@Base+0x5f64>
  457340:	lsl	x3, x3, #1
  457344:	lsr	x0, x0, #1
  457348:	add	x4, x4, #0x8
  45734c:	cbnz	x0, 45733c <_obstack_memory_used@@Base+0x5f2c>
  457350:	ldr	x0, [sp, #112]
  457354:	add	w7, w7, #0x40
  457358:	add	x10, x10, #0x8
  45735c:	cmp	w7, #0x100
  457360:	add	x0, x0, #0x8
  457364:	str	x0, [sp, #112]
  457368:	add	x9, x9, #0x200
  45736c:	b.ne	45732c <_obstack_memory_used@@Base+0x5f1c>  // b.any
  457370:	b	456c00 <_obstack_memory_used@@Base+0x57f0>
  457374:	ldr	x1, [sp, #112]
  457378:	ldr	x1, [x1]
  45737c:	tst	x3, x1
  457380:	b.ne	4573c0 <_obstack_memory_used@@Base+0x5fb0>  // b.any
  457384:	mov	x1, #0x0                   	// #0
  457388:	add	x1, x1, #0x1
  45738c:	ldr	x11, [sp, #112]
  457390:	lsl	x5, x1, #5
  457394:	mov	x6, x1
  457398:	ldr	x5, [x11, x5]
  45739c:	tst	x3, x5
  4573a0:	b.eq	457388 <_obstack_memory_used@@Base+0x5f78>  // b.none
  4573a4:	sub	x1, x4, #0x8, lsl #12
  4573a8:	ldr	x5, [x24, x6, lsl #3]
  4573ac:	str	x5, [x1, #30720]
  4573b0:	ldr	x1, [sp, #120]
  4573b4:	ldr	x1, [x1, x6, lsl #3]
  4573b8:	str	x1, [x4]
  4573bc:	b	457340 <_obstack_memory_used@@Base+0x5f30>
  4573c0:	mov	x6, #0x0                   	// #0
  4573c4:	b	4573a4 <_obstack_memory_used@@Base+0x5f94>
  4573c8:	ldr	x0, [sp, #104]
  4573cc:	bl	4047b0 <free@plt>
  4573d0:	cbnz	x19, 457228 <_obstack_memory_used@@Base+0x5e18>
  4573d4:	ldp	x21, x22, [sp, #32]
  4573d8:	ldp	x27, x28, [sp, #80]
  4573dc:	b	4572b0 <_obstack_memory_used@@Base+0x5ea0>
  4573e0:	stp	x29, x30, [sp, #-112]!
  4573e4:	mov	x29, sp
  4573e8:	stp	x21, x22, [sp, #32]
  4573ec:	mov	x22, x0
  4573f0:	add	x21, x1, x1, lsl #1
  4573f4:	ldr	x0, [x0, #56]
  4573f8:	stp	xzr, xzr, [sp, #88]
  4573fc:	str	xzr, [sp, #104]
  457400:	add	x21, x0, x21, lsl #3
  457404:	str	x25, [sp, #64]
  457408:	ldr	x8, [x21, #8]
  45740c:	cmp	x8, #0x0
  457410:	b.le	457720 <_obstack_memory_used@@Base+0x6310>
  457414:	stp	x19, x20, [sp, #16]
  457418:	mov	x20, x2
  45741c:	mov	x19, #0x0                   	// #0
  457420:	stp	x23, x24, [sp, #48]
  457424:	mov	x23, x1
  457428:	mov	x24, x3
  45742c:	nop
  457430:	ldr	x5, [x21, #16]
  457434:	ldr	x4, [x5, x19, lsl #3]
  457438:	cmp	x23, x4
  45743c:	b.eq	457580 <_obstack_memory_used@@Base+0x6170>  // b.none
  457440:	ldr	x0, [x22]
  457444:	add	x0, x0, x4, lsl #4
  457448:	ldrb	w0, [x0, #8]
  45744c:	tbz	w0, #3, 457580 <_obstack_memory_used@@Base+0x6170>
  457450:	add	x4, x4, x4, lsl #1
  457454:	mov	x1, #0xffffffffffffffff    	// #-1
  457458:	ldr	x0, [x22, #40]
  45745c:	lsl	x6, x4, #3
  457460:	add	x0, x0, x6
  457464:	ldp	x2, x4, [x0, #8]
  457468:	cmp	x2, #0x1
  45746c:	b.le	457474 <_obstack_memory_used@@Base+0x6064>
  457470:	ldr	x1, [x4, #8]
  457474:	sub	x2, x8, #0x1
  457478:	mov	x0, x2
  45747c:	mov	x3, #0x0                   	// #0
  457480:	ldr	x9, [x4]
  457484:	b	45749c <_obstack_memory_used@@Base+0x608c>
  457488:	lsr	x4, x4, #1
  45748c:	ldr	x7, [x5, x4, lsl #3]
  457490:	cmp	x9, x7
  457494:	b.gt	45766c <_obstack_memory_used@@Base+0x625c>
  457498:	mov	x0, x4
  45749c:	add	x4, x0, x3
  4574a0:	cmp	x0, x3
  4574a4:	b.hi	457488 <_obstack_memory_used@@Base+0x6078>  // b.pmore
  4574a8:	ldr	x0, [x5, x3, lsl #3]
  4574ac:	cmp	x9, x0
  4574b0:	b.eq	4574fc <_obstack_memory_used@@Base+0x60ec>  // b.none
  4574b4:	ldr	x7, [x20, #8]
  4574b8:	cmp	x7, #0x0
  4574bc:	b.le	4574fc <_obstack_memory_used@@Base+0x60ec>
  4574c0:	sub	x7, x7, #0x1
  4574c4:	mov	x0, #0x0                   	// #0
  4574c8:	ldr	x10, [x20, #16]
  4574cc:	b	4574e4 <_obstack_memory_used@@Base+0x60d4>
  4574d0:	lsr	x4, x4, #1
  4574d4:	ldr	x3, [x10, x4, lsl #3]
  4574d8:	cmp	x9, x3
  4574dc:	b.gt	4576e4 <_obstack_memory_used@@Base+0x62d4>
  4574e0:	mov	x7, x4
  4574e4:	add	x4, x7, x0
  4574e8:	cmp	x7, x0
  4574ec:	b.hi	4574d0 <_obstack_memory_used@@Base+0x60c0>  // b.pmore
  4574f0:	ldr	x0, [x10, x0, lsl #3]
  4574f4:	cmp	x9, x0
  4574f8:	b.eq	4576c0 <_obstack_memory_used@@Base+0x62b0>  // b.none
  4574fc:	cmp	x1, #0x0
  457500:	mov	x0, #0x0                   	// #0
  457504:	b.gt	457520 <_obstack_memory_used@@Base+0x6110>
  457508:	b	457580 <_obstack_memory_used@@Base+0x6170>
  45750c:	lsr	x4, x4, #1
  457510:	ldr	x3, [x5, x4, lsl #3]
  457514:	cmp	x3, x1
  457518:	b.lt	4576ec <_obstack_memory_used@@Base+0x62dc>  // b.tstop
  45751c:	mov	x2, x4
  457520:	add	x4, x2, x0
  457524:	cmp	x2, x0
  457528:	b.hi	45750c <_obstack_memory_used@@Base+0x60fc>  // b.pmore
  45752c:	ldr	x0, [x5, x0, lsl #3]
  457530:	cmp	x0, x1
  457534:	b.eq	457580 <_obstack_memory_used@@Base+0x6170>  // b.none
  457538:	ldr	x2, [x20, #8]
  45753c:	cmp	x2, #0x0
  457540:	b.le	457580 <_obstack_memory_used@@Base+0x6170>
  457544:	sub	x2, x2, #0x1
  457548:	mov	x0, #0x0                   	// #0
  45754c:	ldr	x5, [x20, #16]
  457550:	b	457568 <_obstack_memory_used@@Base+0x6158>
  457554:	lsr	x4, x4, #1
  457558:	ldr	x3, [x5, x4, lsl #3]
  45755c:	cmp	x3, x1
  457560:	b.lt	4576f4 <_obstack_memory_used@@Base+0x62e4>  // b.tstop
  457564:	mov	x2, x4
  457568:	add	x4, x2, x0
  45756c:	cmp	x2, x0
  457570:	b.hi	457554 <_obstack_memory_used@@Base+0x6144>  // b.pmore
  457574:	ldr	x0, [x5, x0, lsl #3]
  457578:	cmp	x0, x1
  45757c:	b.eq	4576c0 <_obstack_memory_used@@Base+0x62b0>  // b.none
  457580:	add	x19, x19, #0x1
  457584:	cmp	x19, x8
  457588:	b.lt	457430 <_obstack_memory_used@@Base+0x6020>  // b.tstop
  45758c:	cmp	x8, #0x0
  457590:	ldr	x0, [sp, #104]
  457594:	b.le	457640 <_obstack_memory_used@@Base+0x6230>
  457598:	ldr	x11, [x21, #16]
  45759c:	mov	x7, #0x0                   	// #0
  4575a0:	ldr	x3, [sp, #96]
  4575a4:	ldr	x4, [x11, x7, lsl #3]
  4575a8:	cmp	x3, #0x0
  4575ac:	b.le	4575e8 <_obstack_memory_used@@Base+0x61d8>
  4575b0:	sub	x3, x3, #0x1
  4575b4:	mov	x2, #0x0                   	// #0
  4575b8:	b	4575d0 <_obstack_memory_used@@Base+0x61c0>
  4575bc:	lsr	x1, x1, #1
  4575c0:	ldr	x5, [x0, x1, lsl #3]
  4575c4:	cmp	x4, x5
  4575c8:	b.gt	457664 <_obstack_memory_used@@Base+0x6254>
  4575cc:	mov	x3, x1
  4575d0:	add	x1, x3, x2
  4575d4:	cmp	x3, x2
  4575d8:	b.hi	4575bc <_obstack_memory_used@@Base+0x61ac>  // b.pmore
  4575dc:	ldr	x1, [x0, x2, lsl #3]
  4575e0:	cmp	x4, x1
  4575e4:	b.eq	457634 <_obstack_memory_used@@Base+0x6224>  // b.none
  4575e8:	ldr	x9, [x20, #8]
  4575ec:	cmp	x9, #0x0
  4575f0:	b.le	457634 <_obstack_memory_used@@Base+0x6224>
  4575f4:	sub	x10, x9, #0x1
  4575f8:	mov	x3, #0x0                   	// #0
  4575fc:	mov	x2, x10
  457600:	ldr	x5, [x20, #16]
  457604:	b	45761c <_obstack_memory_used@@Base+0x620c>
  457608:	lsr	x1, x1, #1
  45760c:	ldr	x6, [x5, x1, lsl #3]
  457610:	cmp	x4, x6
  457614:	b.gt	4576b8 <_obstack_memory_used@@Base+0x62a8>
  457618:	mov	x2, x1
  45761c:	add	x1, x2, x3
  457620:	cmp	x2, x3
  457624:	b.hi	457608 <_obstack_memory_used@@Base+0x61f8>  // b.pmore
  457628:	ldr	x1, [x5, x3, lsl #3]
  45762c:	cmp	x4, x1
  457630:	b.eq	457674 <_obstack_memory_used@@Base+0x6264>  // b.none
  457634:	add	x7, x7, #0x1
  457638:	cmp	x7, x8
  45763c:	b.lt	4575a0 <_obstack_memory_used@@Base+0x6190>  // b.tstop
  457640:	ldp	x19, x20, [sp, #16]
  457644:	ldp	x23, x24, [sp, #48]
  457648:	bl	4047b0 <free@plt>
  45764c:	mov	w25, #0x0                   	// #0
  457650:	mov	w0, w25
  457654:	ldp	x21, x22, [sp, #32]
  457658:	ldr	x25, [sp, #64]
  45765c:	ldp	x29, x30, [sp], #112
  457660:	ret
  457664:	add	x2, x1, #0x1
  457668:	b	4575d0 <_obstack_memory_used@@Base+0x61c0>
  45766c:	add	x3, x4, #0x1
  457670:	b	45749c <_obstack_memory_used@@Base+0x608c>
  457674:	cmp	x3, #0x0
  457678:	mov	x1, x3
  45767c:	ccmp	x3, x9, #0x0, ge  // ge = tcont
  457680:	b.ge	457634 <_obstack_memory_used@@Base+0x6224>  // b.tcont
  457684:	str	x10, [x20, #8]
  457688:	cmp	x3, x10
  45768c:	add	x3, x5, #0x8
  457690:	b.ge	4576b0 <_obstack_memory_used@@Base+0x62a0>  // b.tcont
  457694:	nop
  457698:	ldr	x2, [x3, x1, lsl #3]
  45769c:	str	x2, [x5, x1, lsl #3]
  4576a0:	add	x1, x1, #0x1
  4576a4:	ldr	x2, [x20, #8]
  4576a8:	cmp	x1, x2
  4576ac:	b.lt	457698 <_obstack_memory_used@@Base+0x6288>  // b.tstop
  4576b0:	ldr	x8, [x21, #8]
  4576b4:	b	457634 <_obstack_memory_used@@Base+0x6224>
  4576b8:	add	x3, x1, #0x1
  4576bc:	b	45761c <_obstack_memory_used@@Base+0x620c>
  4576c0:	ldr	x2, [x22, #56]
  4576c4:	mov	x1, x24
  4576c8:	add	x0, sp, #0x58
  4576cc:	add	x2, x2, x6
  4576d0:	bl	452c10 <_obstack_memory_used@@Base+0x1800>
  4576d4:	mov	w25, w0
  4576d8:	cbnz	w0, 4576fc <_obstack_memory_used@@Base+0x62ec>
  4576dc:	ldr	x8, [x21, #8]
  4576e0:	b	457580 <_obstack_memory_used@@Base+0x6170>
  4576e4:	add	x0, x4, #0x1
  4576e8:	b	4574e4 <_obstack_memory_used@@Base+0x60d4>
  4576ec:	add	x0, x4, #0x1
  4576f0:	b	457520 <_obstack_memory_used@@Base+0x6110>
  4576f4:	add	x0, x4, #0x1
  4576f8:	b	457568 <_obstack_memory_used@@Base+0x6158>
  4576fc:	ldr	x0, [sp, #104]
  457700:	bl	4047b0 <free@plt>
  457704:	mov	w0, w25
  457708:	ldp	x19, x20, [sp, #16]
  45770c:	ldp	x21, x22, [sp, #32]
  457710:	ldp	x23, x24, [sp, #48]
  457714:	ldr	x25, [sp, #64]
  457718:	ldp	x29, x30, [sp], #112
  45771c:	ret
  457720:	mov	x0, #0x0                   	// #0
  457724:	b	457648 <_obstack_memory_used@@Base+0x6238>
  457728:	stp	x29, x30, [sp, #-80]!
  45772c:	mov	x29, sp
  457730:	stp	x21, x22, [sp, #32]
  457734:	mov	x21, x0
  457738:	ldr	x22, [x2, #8]
  45773c:	stp	x19, x20, [sp, #16]
  457740:	cbz	x22, 457a20 <_obstack_memory_used@@Base+0x6610>
  457744:	stp	x23, x24, [sp, #48]
  457748:	cmp	x22, #0x0
  45774c:	mov	x24, x2
  457750:	str	x25, [sp, #64]
  457754:	mov	x25, x1
  457758:	b.le	457a3c <_obstack_memory_used@@Base+0x662c>
  45775c:	sub	x0, x22, #0x1
  457760:	cmp	x0, #0x2
  457764:	ldr	x2, [x2, #16]
  457768:	b.ls	457a44 <_obstack_memory_used@@Base+0x6634>  // b.plast
  45776c:	lsr	x1, x22, #1
  457770:	mov	x0, x2
  457774:	movi	v0.4s, #0x0
  457778:	add	x1, x2, x1, lsl #4
  45777c:	nop
  457780:	ldr	q1, [x0], #16
  457784:	add	v0.2d, v0.2d, v1.2d
  457788:	cmp	x1, x0
  45778c:	b.ne	457780 <_obstack_memory_used@@Base+0x6370>  // b.any
  457790:	addp	d0, v0.2d
  457794:	and	x0, x22, #0xfffffffffffffffe
  457798:	mov	x20, v0.d[0]
  45779c:	add	x20, x22, x20
  4577a0:	tbz	w22, #0, 4577dc <_obstack_memory_used@@Base+0x63cc>
  4577a4:	ldr	x1, [x2, x0, lsl #3]
  4577a8:	add	x3, x0, #0x1
  4577ac:	cmp	x22, x3
  4577b0:	lsl	x3, x0, #3
  4577b4:	add	x20, x20, x1
  4577b8:	b.le	4577dc <_obstack_memory_used@@Base+0x63cc>
  4577bc:	add	x2, x2, x3
  4577c0:	add	x0, x0, #0x2
  4577c4:	cmp	x22, x0
  4577c8:	ldr	x0, [x2, #8]
  4577cc:	add	x20, x20, x0
  4577d0:	b.le	4577dc <_obstack_memory_used@@Base+0x63cc>
  4577d4:	ldr	x0, [x2, #16]
  4577d8:	add	x20, x20, x0
  4577dc:	ldr	x0, [x25, #136]
  4577e0:	ldr	x1, [x25, #64]
  4577e4:	and	x0, x20, x0
  4577e8:	add	x0, x0, x0, lsl #1
  4577ec:	lsl	x0, x0, #3
  4577f0:	add	x2, x1, x0
  4577f4:	ldr	x1, [x1, x0]
  4577f8:	cmp	x1, #0x0
  4577fc:	b.le	457844 <_obstack_memory_used@@Base+0x6434>
  457800:	mov	x4, #0x0                   	// #0
  457804:	ldr	x2, [x2, #16]
  457808:	b	457818 <_obstack_memory_used@@Base+0x6408>
  45780c:	add	x4, x4, #0x1
  457810:	cmp	x1, x4
  457814:	b.eq	457844 <_obstack_memory_used@@Base+0x6434>  // b.none
  457818:	ldr	x19, [x2, x4, lsl #3]
  45781c:	ldr	x0, [x19]
  457820:	cmp	x0, x20
  457824:	b.ne	45780c <_obstack_memory_used@@Base+0x63fc>  // b.any
  457828:	ldr	x3, [x19, #16]
  45782c:	add	x7, x19, #0x8
  457830:	cmp	x22, x3
  457834:	b.eq	457954 <_obstack_memory_used@@Base+0x6544>  // b.none
  457838:	add	x4, x4, #0x1
  45783c:	cmp	x1, x4
  457840:	b.ne	457818 <_obstack_memory_used@@Base+0x6408>  // b.any
  457844:	mov	x1, #0x1                   	// #1
  457848:	mov	x0, #0x70                  	// #112
  45784c:	bl	4044c0 <calloc@plt>
  457850:	mov	x19, x0
  457854:	cbz	x0, 4579e4 <_obstack_memory_used@@Base+0x65d4>
  457858:	str	x22, [x0, #16]
  45785c:	add	x23, x0, #0x8
  457860:	cmp	x22, #0x0
  457864:	b.le	457978 <_obstack_memory_used@@Base+0x6568>
  457868:	str	x22, [x0, #8]
  45786c:	lsl	x22, x22, #3
  457870:	mov	x0, x22
  457874:	bl	404310 <malloc@plt>
  457878:	str	x0, [x23, #16]
  45787c:	cbz	x0, 4579dc <_obstack_memory_used@@Base+0x65cc>
  457880:	ldr	x24, [x24, #16]
  457884:	mov	x2, x22
  457888:	mov	x1, x24
  45788c:	bl	403f70 <memcpy@plt>
  457890:	mov	x4, x24
  457894:	add	x2, x24, x22
  457898:	str	x23, [x19, #80]
  45789c:	ldr	x7, [x25]
  4578a0:	b	4578ec <_obstack_memory_used@@Base+0x64dc>
  4578a4:	ldrb	w3, [x19, #104]
  4578a8:	cmp	w5, #0x2
  4578ac:	ldrb	w6, [x0, #10]
  4578b0:	mov	w1, w3
  4578b4:	ubfx	x3, x3, #5, #1
  4578b8:	ubfx	x6, x6, #4, #1
  4578bc:	orr	w3, w3, w6
  4578c0:	bfi	w1, w3, #5, #1
  4578c4:	strb	w1, [x19, #104]
  4578c8:	b.eq	4579fc <_obstack_memory_used@@Base+0x65ec>  // b.none
  4578cc:	cmp	w5, #0x4
  4578d0:	b.ne	457a08 <_obstack_memory_used@@Base+0x65f8>  // b.any
  4578d4:	orr	w1, w1, #0x40
  4578d8:	strb	w1, [x19, #104]
  4578dc:	nop
  4578e0:	add	x4, x4, #0x8
  4578e4:	cmp	x2, x4
  4578e8:	b.eq	457984 <_obstack_memory_used@@Base+0x6574>  // b.none
  4578ec:	ldr	x0, [x4]
  4578f0:	add	x0, x7, x0, lsl #4
  4578f4:	ldrb	w5, [x0, #8]
  4578f8:	cmp	w5, #0x1
  4578fc:	b.ne	4578a4 <_obstack_memory_used@@Base+0x6494>  // b.any
  457900:	ldr	w1, [x0, #8]
  457904:	tst	w1, #0x3ff00
  457908:	b.eq	4578e0 <_obstack_memory_used@@Base+0x64d0>  // b.none
  45790c:	ldrb	w1, [x0, #10]
  457910:	ldrb	w0, [x19, #104]
  457914:	ubfx	x1, x1, #4, #1
  457918:	mov	w3, w0
  45791c:	ubfx	x0, x0, #5, #1
  457920:	orr	w0, w0, w1
  457924:	bfi	w3, w0, #5, #1
  457928:	strb	w3, [x19, #104]
  45792c:	ldrb	w0, [x19, #104]
  457930:	orr	w0, w0, #0xffffff80
  457934:	strb	w0, [x19, #104]
  457938:	b	4578e0 <_obstack_memory_used@@Base+0x64d0>
  45793c:	ldr	x6, [x7, #16]
  457940:	ldr	x5, [x24, #16]
  457944:	ldr	x6, [x6, x3, lsl #3]
  457948:	ldr	x5, [x5, x3, lsl #3]
  45794c:	cmp	x6, x5
  457950:	b.ne	45780c <_obstack_memory_used@@Base+0x63fc>  // b.any
  457954:	subs	x3, x3, #0x1
  457958:	b.pl	45793c <_obstack_memory_used@@Base+0x652c>  // b.nfrst
  45795c:	ldp	x23, x24, [sp, #48]
  457960:	ldr	x25, [sp, #64]
  457964:	mov	x0, x19
  457968:	ldp	x19, x20, [sp, #16]
  45796c:	ldp	x21, x22, [sp, #32]
  457970:	ldp	x29, x30, [sp], #80
  457974:	ret
  457978:	stp	xzr, xzr, [x0, #8]
  45797c:	str	xzr, [x23, #16]
  457980:	str	x23, [x0, #80]
  457984:	mov	x2, x20
  457988:	mov	x0, x25
  45798c:	mov	x1, x19
  457990:	bl	451b68 <_obstack_memory_used@@Base+0x758>
  457994:	cbz	w0, 45795c <_obstack_memory_used@@Base+0x654c>
  457998:	ldr	x0, [x19, #48]
  45799c:	bl	4047b0 <free@plt>
  4579a0:	ldr	x0, [x19, #72]
  4579a4:	bl	4047b0 <free@plt>
  4579a8:	ldr	x0, [x19, #80]
  4579ac:	cmp	x23, x0
  4579b0:	b.eq	4579c4 <_obstack_memory_used@@Base+0x65b4>  // b.none
  4579b4:	ldr	x0, [x0, #16]
  4579b8:	bl	4047b0 <free@plt>
  4579bc:	ldr	x0, [x19, #80]
  4579c0:	bl	4047b0 <free@plt>
  4579c4:	ldr	x0, [x19, #24]
  4579c8:	bl	4047b0 <free@plt>
  4579cc:	ldr	x0, [x19, #96]
  4579d0:	bl	4047b0 <free@plt>
  4579d4:	ldr	x0, [x19, #88]
  4579d8:	bl	4047b0 <free@plt>
  4579dc:	mov	x0, x19
  4579e0:	bl	4047b0 <free@plt>
  4579e4:	mov	w0, #0xc                   	// #12
  4579e8:	mov	x19, #0x0                   	// #0
  4579ec:	ldp	x23, x24, [sp, #48]
  4579f0:	ldr	x25, [sp, #64]
  4579f4:	str	w0, [x21]
  4579f8:	b	457964 <_obstack_memory_used@@Base+0x6554>
  4579fc:	orr	w1, w1, #0x10
  457a00:	strb	w1, [x19, #104]
  457a04:	b	4578e0 <_obstack_memory_used@@Base+0x64d0>
  457a08:	cmp	w5, #0xc
  457a0c:	b.eq	45792c <_obstack_memory_used@@Base+0x651c>  // b.none
  457a10:	ldr	w0, [x0, #8]
  457a14:	tst	w0, #0x3ff00
  457a18:	b.eq	4578e0 <_obstack_memory_used@@Base+0x64d0>  // b.none
  457a1c:	b	45792c <_obstack_memory_used@@Base+0x651c>
  457a20:	str	wzr, [x0]
  457a24:	mov	x19, #0x0                   	// #0
  457a28:	mov	x0, x19
  457a2c:	ldp	x19, x20, [sp, #16]
  457a30:	ldp	x21, x22, [sp, #32]
  457a34:	ldp	x29, x30, [sp], #80
  457a38:	ret
  457a3c:	mov	x20, x22
  457a40:	b	4577dc <_obstack_memory_used@@Base+0x63cc>
  457a44:	mov	x20, x22
  457a48:	mov	x0, #0x0                   	// #0
  457a4c:	b	4577a4 <_obstack_memory_used@@Base+0x6394>
  457a50:	stp	x29, x30, [sp, #-176]!
  457a54:	mov	x29, sp
  457a58:	ldr	x6, [x0, #200]
  457a5c:	stp	x19, x20, [sp, #16]
  457a60:	mov	x19, x1
  457a64:	stp	x21, x22, [sp, #32]
  457a68:	mov	w21, w4
  457a6c:	mov	x22, #0x0                   	// #0
  457a70:	stp	x25, x26, [sp, #64]
  457a74:	mov	x25, x0
  457a78:	mov	x26, x2
  457a7c:	mov	x0, x6
  457a80:	str	x3, [sp, #112]
  457a84:	b	457aa8 <_obstack_memory_used@@Base+0x6698>
  457a88:	asr	x5, x5, #1
  457a8c:	ldr	x2, [x25, #216]
  457a90:	add	x1, x5, x5, lsl #2
  457a94:	add	x1, x2, x1, lsl #3
  457a98:	ldr	x1, [x1, #8]
  457a9c:	cmp	x26, x1
  457aa0:	b.gt	457d98 <_obstack_memory_used@@Base+0x6988>
  457aa4:	mov	x0, x5
  457aa8:	add	x5, x0, x22
  457aac:	cmp	x0, x22
  457ab0:	b.gt	457a88 <_obstack_memory_used@@Base+0x6678>
  457ab4:	cmp	x6, x22
  457ab8:	b.le	457b4c <_obstack_memory_used@@Base+0x673c>
  457abc:	add	x22, x22, x22, lsl #2
  457ac0:	stp	x23, x24, [sp, #48]
  457ac4:	ldr	x23, [x25, #216]
  457ac8:	lsl	x0, x22, #3
  457acc:	str	x0, [sp, #120]
  457ad0:	add	x23, x23, x0
  457ad4:	ldr	x0, [x23, #8]
  457ad8:	cmp	x26, x0
  457adc:	b.ne	457da0 <_obstack_memory_used@@Base+0x6990>  // b.any
  457ae0:	stp	x27, x28, [sp, #80]
  457ae4:	ldr	x27, [x25, #152]
  457ae8:	ldr	x5, [x19, #8]
  457aec:	cmp	x5, #0x0
  457af0:	b.le	457b38 <_obstack_memory_used@@Base+0x6728>
  457af4:	sub	x5, x5, #0x1
  457af8:	mov	x1, #0x0                   	// #0
  457afc:	mov	x0, x5
  457b00:	ldr	x2, [x23]
  457b04:	ldr	x3, [x19, #16]
  457b08:	b	457b20 <_obstack_memory_used@@Base+0x6710>
  457b0c:	lsr	x6, x6, #1
  457b10:	ldr	x4, [x3, x6, lsl #3]
  457b14:	cmp	x2, x4
  457b18:	b.gt	457b64 <_obstack_memory_used@@Base+0x6754>
  457b1c:	mov	x0, x6
  457b20:	add	x6, x0, x1
  457b24:	cmp	x0, x1
  457b28:	b.hi	457b0c <_obstack_memory_used@@Base+0x66fc>  // b.pmore
  457b2c:	ldr	x0, [x3, x1, lsl #3]
  457b30:	cmp	x2, x0
  457b34:	b.eq	457b6c <_obstack_memory_used@@Base+0x675c>  // b.none
  457b38:	ldrb	w0, [x23, #32]
  457b3c:	add	x23, x23, #0x28
  457b40:	cbnz	w0, 457ae8 <_obstack_memory_used@@Base+0x66d8>
  457b44:	ldp	x23, x24, [sp, #48]
  457b48:	ldp	x27, x28, [sp, #80]
  457b4c:	mov	w0, #0x0                   	// #0
  457b50:	ldp	x19, x20, [sp, #16]
  457b54:	ldp	x21, x22, [sp, #32]
  457b58:	ldp	x25, x26, [sp, #64]
  457b5c:	ldp	x29, x30, [sp], #176
  457b60:	ret
  457b64:	add	x1, x6, #0x1
  457b68:	b	457b20 <_obstack_memory_used@@Base+0x6710>
  457b6c:	ldp	x0, x24, [x23, #16]
  457b70:	add	x24, x26, x24
  457b74:	sub	x24, x24, x0
  457b78:	cmp	x26, x24
  457b7c:	b.eq	457c98 <_obstack_memory_used@@Base+0x6888>  // b.none
  457b80:	ldr	x0, [x25, #184]
  457b84:	lsl	x22, x24, #3
  457b88:	ldr	x4, [x27, #24]
  457b8c:	add	x20, x0, x22
  457b90:	ldr	x1, [x0, x24, lsl #3]
  457b94:	ldr	x28, [x4, x2, lsl #3]
  457b98:	cbz	x1, 457d60 <_obstack_memory_used@@Base+0x6950>
  457b9c:	ldr	x2, [x1, #16]
  457ba0:	cmp	x2, #0x0
  457ba4:	b.le	457d88 <_obstack_memory_used@@Base+0x6978>
  457ba8:	sub	x0, x2, #0x1
  457bac:	mov	x3, #0x0                   	// #0
  457bb0:	ldr	x1, [x1, #24]
  457bb4:	b	457bcc <_obstack_memory_used@@Base+0x67bc>
  457bb8:	lsr	x5, x5, #1
  457bbc:	ldr	x4, [x1, x5, lsl #3]
  457bc0:	cmp	x28, x4
  457bc4:	b.gt	457c90 <_obstack_memory_used@@Base+0x6880>
  457bc8:	mov	x0, x5
  457bcc:	add	x5, x0, x3
  457bd0:	cmp	x0, x3
  457bd4:	b.hi	457bb8 <_obstack_memory_used@@Base+0x67a8>  // b.pmore
  457bd8:	ldr	x0, [x1, x3, lsl #3]
  457bdc:	cmp	x28, x0
  457be0:	b.eq	457b38 <_obstack_memory_used@@Base+0x6728>  // b.none
  457be4:	dup	v0.2d, x2
  457be8:	lsl	x2, x2, #3
  457bec:	mov	x0, x2
  457bf0:	stp	x2, x1, [sp, #96]
  457bf4:	str	q0, [sp, #144]
  457bf8:	bl	404310 <malloc@plt>
  457bfc:	str	x0, [sp, #160]
  457c00:	ldp	x2, x1, [sp, #96]
  457c04:	cbz	x0, 457e14 <_obstack_memory_used@@Base+0x6a04>
  457c08:	bl	403f70 <memcpy@plt>
  457c0c:	mov	w2, #0x0                   	// #0
  457c10:	mov	x1, x28
  457c14:	add	x0, sp, #0x90
  457c18:	str	w2, [sp, #140]
  457c1c:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  457c20:	ldr	w1, [sp, #140]
  457c24:	and	w0, w0, #0xff
  457c28:	eor	w0, w0, #0x1
  457c2c:	cmp	w1, #0x0
  457c30:	cset	w1, ne  // ne = any
  457c34:	orr	w0, w1, w0
  457c38:	cbnz	w0, 457da8 <_obstack_memory_used@@Base+0x6998>
  457c3c:	ldr	x3, [x25, #184]
  457c40:	add	x20, x3, x22
  457c44:	add	x2, sp, #0x90
  457c48:	mov	x1, x27
  457c4c:	add	x0, sp, #0x8c
  457c50:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  457c54:	str	x0, [x20]
  457c58:	ldr	x0, [sp, #160]
  457c5c:	bl	4047b0 <free@plt>
  457c60:	ldr	x0, [x25, #184]
  457c64:	ldr	x0, [x0, x24, lsl #3]
  457c68:	cbnz	x0, 457b38 <_obstack_memory_used@@Base+0x6728>
  457c6c:	ldr	w0, [sp, #140]
  457c70:	cbz	w0, 457b38 <_obstack_memory_used@@Base+0x6728>
  457c74:	ldp	x19, x20, [sp, #16]
  457c78:	ldp	x21, x22, [sp, #32]
  457c7c:	ldp	x23, x24, [sp, #48]
  457c80:	ldp	x25, x26, [sp, #64]
  457c84:	ldp	x27, x28, [sp, #80]
  457c88:	ldp	x29, x30, [sp], #176
  457c8c:	ret
  457c90:	add	x3, x5, #0x1
  457c94:	b	457bcc <_obstack_memory_used@@Base+0x67bc>
  457c98:	ldr	x1, [x27, #40]
  457c9c:	add	x2, x2, x2, lsl #1
  457ca0:	mov	x0, #0x0                   	// #0
  457ca4:	add	x2, x1, x2, lsl #3
  457ca8:	ldr	x1, [x2, #16]
  457cac:	ldr	x24, [x1]
  457cb0:	b	457cc8 <_obstack_memory_used@@Base+0x68b8>
  457cb4:	lsr	x1, x1, #1
  457cb8:	ldr	x2, [x3, x1, lsl #3]
  457cbc:	cmp	x24, x2
  457cc0:	b.gt	457d58 <_obstack_memory_used@@Base+0x6948>
  457cc4:	mov	x5, x1
  457cc8:	add	x1, x5, x0
  457ccc:	cmp	x5, x0
  457cd0:	b.hi	457cb4 <_obstack_memory_used@@Base+0x68a4>  // b.pmore
  457cd4:	ldr	x0, [x3, x0, lsl #3]
  457cd8:	cmp	x24, x0
  457cdc:	b.eq	457b38 <_obstack_memory_used@@Base+0x6728>  // b.none
  457ce0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  457ce4:	ldr	q0, [x0, #1536]
  457ce8:	mov	x0, #0x8                   	// #8
  457cec:	str	q0, [sp, #144]
  457cf0:	bl	404310 <malloc@plt>
  457cf4:	mov	w3, w21
  457cf8:	str	x0, [sp, #160]
  457cfc:	mov	x4, x0
  457d00:	ldr	x2, [sp, #112]
  457d04:	cbz	x0, 457df0 <_obstack_memory_used@@Base+0x69e0>
  457d08:	str	x24, [x4]
  457d0c:	add	x1, sp, #0x90
  457d10:	mov	x0, x27
  457d14:	str	wzr, [sp, #140]
  457d18:	bl	456130 <_obstack_memory_used@@Base+0x4d20>
  457d1c:	mov	w23, w0
  457d20:	add	x1, sp, #0x90
  457d24:	mov	x0, x19
  457d28:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  457d2c:	mov	w24, w0
  457d30:	ldr	x0, [sp, #160]
  457d34:	bl	4047b0 <free@plt>
  457d38:	ldr	w0, [sp, #140]
  457d3c:	orr	w1, w23, w24
  457d40:	orr	w1, w1, w0
  457d44:	cbnz	w1, 457dd8 <_obstack_memory_used@@Base+0x69c8>
  457d48:	ldr	x0, [sp, #120]
  457d4c:	ldr	x23, [x25, #216]
  457d50:	add	x23, x23, x0
  457d54:	b	457ae8 <_obstack_memory_used@@Base+0x66d8>
  457d58:	add	x0, x1, #0x1
  457d5c:	b	457cc8 <_obstack_memory_used@@Base+0x68b8>
  457d60:	adrp	x1, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  457d64:	mov	x0, #0x8                   	// #8
  457d68:	ldr	q0, [x1, #1536]
  457d6c:	str	q0, [sp, #144]
  457d70:	bl	404310 <malloc@plt>
  457d74:	str	x0, [sp, #160]
  457d78:	cbz	x0, 457db8 <_obstack_memory_used@@Base+0x69a8>
  457d7c:	str	x28, [x0]
  457d80:	str	wzr, [sp, #140]
  457d84:	b	457c44 <_obstack_memory_used@@Base+0x6834>
  457d88:	mov	w2, #0x0                   	// #0
  457d8c:	stp	xzr, xzr, [sp, #144]
  457d90:	str	xzr, [sp, #160]
  457d94:	b	457c10 <_obstack_memory_used@@Base+0x6800>
  457d98:	add	x22, x5, #0x1
  457d9c:	b	457aa8 <_obstack_memory_used@@Base+0x6698>
  457da0:	ldp	x23, x24, [sp, #48]
  457da4:	b	457b4c <_obstack_memory_used@@Base+0x673c>
  457da8:	ldr	x0, [sp, #160]
  457dac:	bl	4047b0 <free@plt>
  457db0:	ldr	w0, [sp, #140]
  457db4:	cbnz	w0, 457c74 <_obstack_memory_used@@Base+0x6864>
  457db8:	mov	w0, #0xc                   	// #12
  457dbc:	ldp	x19, x20, [sp, #16]
  457dc0:	ldp	x21, x22, [sp, #32]
  457dc4:	ldp	x23, x24, [sp, #48]
  457dc8:	ldp	x25, x26, [sp, #64]
  457dcc:	ldp	x27, x28, [sp, #80]
  457dd0:	ldp	x29, x30, [sp], #176
  457dd4:	ret
  457dd8:	cbnz	w0, 457c74 <_obstack_memory_used@@Base+0x6864>
  457ddc:	cmp	w23, #0x0
  457de0:	csel	w0, w23, w24, ne  // ne = any
  457de4:	ldp	x23, x24, [sp, #48]
  457de8:	ldp	x27, x28, [sp, #80]
  457dec:	b	457b50 <_obstack_memory_used@@Base+0x6740>
  457df0:	mov	w4, #0xc                   	// #12
  457df4:	add	x1, sp, #0x90
  457df8:	mov	x0, x27
  457dfc:	str	w4, [sp, #140]
  457e00:	stp	xzr, xzr, [sp, #144]
  457e04:	bl	456130 <_obstack_memory_used@@Base+0x4d20>
  457e08:	add	x1, sp, #0x90
  457e0c:	mov	w23, w0
  457e10:	b	457d24 <_obstack_memory_used@@Base+0x6914>
  457e14:	mov	w2, #0xc                   	// #12
  457e18:	stp	xzr, xzr, [sp, #144]
  457e1c:	b	457c10 <_obstack_memory_used@@Base+0x6800>
  457e20:	stp	x29, x30, [sp, #-240]!
  457e24:	mov	x7, x1
  457e28:	mov	x29, sp
  457e2c:	stp	x27, x28, [sp, #80]
  457e30:	ldr	x27, [x0, #152]
  457e34:	stp	x19, x20, [sp, #16]
  457e38:	mov	x20, x2
  457e3c:	stp	x21, x22, [sp, #32]
  457e40:	mov	x19, x3
  457e44:	stp	x4, x1, [sp, #144]
  457e48:	ldr	x22, [x1, #8]
  457e4c:	lsl	x1, x2, #4
  457e50:	ldr	x2, [x27]
  457e54:	stp	x25, x26, [sp, #64]
  457e58:	mov	x26, x0
  457e5c:	ldrsw	x0, [x0, #224]
  457e60:	ldr	x1, [x2, x1]
  457e64:	stp	x23, x24, [sp, #48]
  457e68:	add	x0, x0, x5
  457e6c:	str	x5, [sp, #120]
  457e70:	cmp	x0, x22
  457e74:	str	x1, [sp, #128]
  457e78:	str	w6, [sp, #140]
  457e7c:	str	wzr, [sp, #184]
  457e80:	b.ge	4583c0 <_obstack_memory_used@@Base+0x6fb0>  // b.tcont
  457e84:	ldr	x0, [sp, #152]
  457e88:	ldr	w2, [x26, #160]
  457e8c:	ldr	x21, [x0]
  457e90:	ldr	x22, [x0, #16]
  457e94:	ldr	x0, [x26, #72]
  457e98:	str	x0, [sp, #160]
  457e9c:	ldr	x0, [x26, #184]
  457ea0:	str	x0, [sp, #168]
  457ea4:	cbnz	x21, 457f5c <_obstack_memory_used@@Base+0x6b4c>
  457ea8:	str	x19, [x26, #72]
  457eac:	sub	x1, x19, #0x1
  457eb0:	str	x22, [x26, #184]
  457eb4:	mov	x0, x26
  457eb8:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  457ebc:	mov	w23, w0
  457ec0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  457ec4:	ldr	q0, [x0, #1536]
  457ec8:	mov	x0, #0x8                   	// #8
  457ecc:	str	q0, [sp, #192]
  457ed0:	bl	404310 <malloc@plt>
  457ed4:	mov	x4, x0
  457ed8:	str	x0, [sp, #208]
  457edc:	cbz	x0, 458418 <_obstack_memory_used@@Base+0x7008>
  457ee0:	ldr	w3, [sp, #140]
  457ee4:	add	x22, sp, #0xc0
  457ee8:	ldr	x2, [sp, #128]
  457eec:	str	x20, [x4]
  457ef0:	mov	x1, x22
  457ef4:	mov	x0, x27
  457ef8:	str	wzr, [sp, #184]
  457efc:	bl	456130 <_obstack_memory_used@@Base+0x4d20>
  457f00:	str	w0, [sp, #184]
  457f04:	cbnz	w0, 45831c <_obstack_memory_used@@Base+0x6f0c>
  457f08:	ldr	x0, [sp, #200]
  457f0c:	mov	x21, x19
  457f10:	cbz	x0, 457f34 <_obstack_memory_used@@Base+0x6b24>
  457f14:	ldr	w4, [sp, #140]
  457f18:	mov	x2, x21
  457f1c:	ldr	x3, [sp, #128]
  457f20:	mov	x1, x22
  457f24:	mov	x0, x26
  457f28:	bl	457a50 <_obstack_memory_used@@Base+0x6640>
  457f2c:	str	w0, [sp, #184]
  457f30:	cbnz	w0, 45831c <_obstack_memory_used@@Base+0x6f0c>
  457f34:	mov	w3, w23
  457f38:	mov	x2, x22
  457f3c:	mov	x1, x27
  457f40:	add	x0, sp, #0xb8
  457f44:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  457f48:	mov	x19, x0
  457f4c:	cbz	x0, 458420 <_obstack_memory_used@@Base+0x7010>
  457f50:	ldr	x0, [x26, #184]
  457f54:	str	x19, [x0, x21, lsl #3]
  457f58:	b	457f94 <_obstack_memory_used@@Base+0x6b84>
  457f5c:	str	x21, [x26, #72]
  457f60:	sub	x1, x21, #0x1
  457f64:	str	x22, [x26, #184]
  457f68:	mov	x0, x26
  457f6c:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  457f70:	mov	w23, w0
  457f74:	cmp	x21, x19
  457f78:	b.eq	457ec0 <_obstack_memory_used@@Base+0x6ab0>  // b.none
  457f7c:	ldr	x19, [x22, x21, lsl #3]
  457f80:	cbz	x19, 457f8c <_obstack_memory_used@@Base+0x6b7c>
  457f84:	ldrb	w1, [x19, #104]
  457f88:	tbnz	w1, #6, 458344 <_obstack_memory_used@@Base+0x6f34>
  457f8c:	stp	xzr, xzr, [sp, #192]
  457f90:	str	xzr, [sp, #208]
  457f94:	ldr	x0, [sp, #120]
  457f98:	cmp	x21, x0
  457f9c:	b.ge	458174 <_obstack_memory_used@@Base+0x6d64>  // b.tcont
  457fa0:	mov	x22, x21
  457fa4:	str	xzr, [sp, #104]
  457fa8:	ldr	x1, [sp, #104]
  457fac:	mov	x21, x22
  457fb0:	ldrsw	x0, [x26, #224]
  457fb4:	cmp	x1, x0
  457fb8:	b.gt	458174 <_obstack_memory_used@@Base+0x6d64>
  457fbc:	ldr	x0, [x26, #184]
  457fc0:	add	x21, x22, #0x1
  457fc4:	ldr	x1, [x0, x21, lsl #3]
  457fc8:	str	xzr, [sp, #200]
  457fcc:	cbz	x1, 4582e8 <_obstack_memory_used@@Base+0x6ed8>
  457fd0:	add	x1, x1, #0x8
  457fd4:	add	x0, sp, #0xc0
  457fd8:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  457fdc:	str	w0, [sp, #184]
  457fe0:	cbnz	w0, 45831c <_obstack_memory_used@@Base+0x6f0c>
  457fe4:	cbz	x19, 4580e8 <_obstack_memory_used@@Base+0x6cd8>
  457fe8:	ldr	x0, [x19, #40]
  457fec:	str	wzr, [sp, #188]
  457ff0:	stp	xzr, xzr, [sp, #216]
  457ff4:	add	x19, x19, #0x20
  457ff8:	cmp	x0, #0x0
  457ffc:	str	xzr, [sp, #232]
  458000:	ldr	x23, [x26, #152]
  458004:	b.le	458448 <_obstack_memory_used@@Base+0x7038>
  458008:	add	x0, x23, #0xd8
  45800c:	mov	x24, #0x0                   	// #0
  458010:	str	x0, [sp, #112]
  458014:	nop
  458018:	ldr	x1, [x19, #16]
  45801c:	ldr	x0, [x23]
  458020:	ldr	x28, [x1, x24, lsl #3]
  458024:	lsl	x20, x28, #4
  458028:	add	x1, x0, x20
  45802c:	ldrb	w2, [x1, #10]
  458030:	tbnz	w2, #4, 4581f8 <_obstack_memory_used@@Base+0x6de8>
  458034:	ldr	x0, [x26, #8]
  458038:	ldrb	w2, [x1, #8]
  45803c:	ldrb	w0, [x0, x22]
  458040:	cmp	w2, #0x5
  458044:	b.eq	4582ac <_obstack_memory_used@@Base+0x6e9c>  // b.none
  458048:	b.hi	4582a0 <_obstack_memory_used@@Base+0x6e90>  // b.pmore
  45804c:	cmp	w2, #0x1
  458050:	b.eq	4582c8 <_obstack_memory_used@@Base+0x6eb8>  // b.none
  458054:	cmp	w2, #0x3
  458058:	b.ne	4580cc <_obstack_memory_used@@Base+0x6cbc>  // b.any
  45805c:	ldr	x2, [x1]
  458060:	ubfx	x3, x0, #6, #2
  458064:	ldr	x2, [x2, x3, lsl #3]
  458068:	lsr	x0, x2, x0
  45806c:	tbz	w0, #0, 4580cc <_obstack_memory_used@@Base+0x6cbc>
  458070:	ldr	w20, [x1, #8]
  458074:	tst	w20, #0x3ff00
  458078:	b.eq	4580b0 <_obstack_memory_used@@Base+0x6ca0>  // b.none
  45807c:	ldr	w2, [x26, #160]
  458080:	mov	x1, x22
  458084:	mov	x0, x26
  458088:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45808c:	ubfx	x1, x20, #8, #10
  458090:	tbz	w20, #10, 4582f0 <_obstack_memory_used@@Base+0x6ee0>
  458094:	tbz	w0, #0, 4580cc <_obstack_memory_used@@Base+0x6cbc>
  458098:	tbnz	w1, #3, 4580cc <_obstack_memory_used@@Base+0x6cbc>
  45809c:	tbz	w1, #5, 4580a4 <_obstack_memory_used@@Base+0x6c94>
  4580a0:	tbz	w0, #1, 4580cc <_obstack_memory_used@@Base+0x6cbc>
  4580a4:	tbz	w1, #7, 4580b0 <_obstack_memory_used@@Base+0x6ca0>
  4580a8:	tbz	w0, #3, 4580cc <_obstack_memory_used@@Base+0x6cbc>
  4580ac:	nop
  4580b0:	lsl	x25, x28, #3
  4580b4:	ldr	x1, [x23, #24]
  4580b8:	add	x0, sp, #0xc0
  4580bc:	ldr	x1, [x1, x25]
  4580c0:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  4580c4:	tst	w0, #0xff
  4580c8:	b.eq	45830c <_obstack_memory_used@@Base+0x6efc>  // b.none
  4580cc:	ldr	x0, [x19, #8]
  4580d0:	add	x24, x24, #0x1
  4580d4:	cmp	x24, x0
  4580d8:	b.lt	458018 <_obstack_memory_used@@Base+0x6c08>  // b.tstop
  4580dc:	ldr	x0, [sp, #232]
  4580e0:	bl	4047b0 <free@plt>
  4580e4:	str	wzr, [sp, #184]
  4580e8:	ldr	x0, [sp, #200]
  4580ec:	cbz	x0, 45812c <_obstack_memory_used@@Base+0x6d1c>
  4580f0:	ldr	w3, [sp, #140]
  4580f4:	add	x1, sp, #0xc0
  4580f8:	ldr	x2, [sp, #128]
  4580fc:	mov	x0, x27
  458100:	bl	456130 <_obstack_memory_used@@Base+0x4d20>
  458104:	str	w0, [sp, #184]
  458108:	cbnz	w0, 45831c <_obstack_memory_used@@Base+0x6f0c>
  45810c:	ldr	w4, [sp, #140]
  458110:	mov	x2, x21
  458114:	ldr	x3, [sp, #128]
  458118:	add	x1, sp, #0xc0
  45811c:	mov	x0, x26
  458120:	bl	457a50 <_obstack_memory_used@@Base+0x6640>
  458124:	str	w0, [sp, #184]
  458128:	cbnz	w0, 45831c <_obstack_memory_used@@Base+0x6f0c>
  45812c:	ldr	w2, [x26, #160]
  458130:	mov	x1, x22
  458134:	mov	x0, x26
  458138:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45813c:	mov	w3, w0
  458140:	add	x2, sp, #0xc0
  458144:	mov	x1, x27
  458148:	add	x0, sp, #0xb8
  45814c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  458150:	mov	x19, x0
  458154:	cbz	x0, 45838c <_obstack_memory_used@@Base+0x6f7c>
  458158:	ldr	x0, [x26, #184]
  45815c:	str	xzr, [sp, #104]
  458160:	str	x19, [x0, x21, lsl #3]
  458164:	ldr	x0, [sp, #120]
  458168:	mov	x22, x21
  45816c:	cmp	x21, x0
  458170:	b.lt	457fa8 <_obstack_memory_used@@Base+0x6b98>  // b.tstop
  458174:	ldr	x0, [sp, #208]
  458178:	bl	4047b0 <free@plt>
  45817c:	ldr	x1, [sp, #120]
  458180:	ldr	x0, [x26, #184]
  458184:	ldr	x3, [x0, x1, lsl #3]
  458188:	cbz	x3, 45842c <_obstack_memory_used@@Base+0x701c>
  45818c:	ldp	x0, x1, [sp, #152]
  458190:	str	x21, [x0]
  458194:	str	x1, [x26, #72]
  458198:	ldr	x1, [sp, #168]
  45819c:	str	x1, [x26, #184]
  4581a0:	ldr	x1, [x3, #16]
  4581a4:	mov	w0, #0x1                   	// #1
  4581a8:	cmp	x1, #0x0
  4581ac:	b.le	458328 <_obstack_memory_used@@Base+0x6f18>
  4581b0:	sub	x1, x1, #0x1
  4581b4:	mov	x2, #0x0                   	// #0
  4581b8:	ldr	x4, [x3, #24]
  4581bc:	b	4581d8 <_obstack_memory_used@@Base+0x6dc8>
  4581c0:	lsr	x0, x0, #1
  4581c4:	ldr	x5, [sp, #144]
  4581c8:	ldr	x3, [x4, x0, lsl #3]
  4581cc:	cmp	x5, x3
  4581d0:	b.gt	458410 <_obstack_memory_used@@Base+0x7000>
  4581d4:	mov	x1, x0
  4581d8:	add	x0, x1, x2
  4581dc:	cmp	x1, x2
  4581e0:	b.hi	4581c0 <_obstack_memory_used@@Base+0x6db0>  // b.pmore
  4581e4:	ldr	x0, [x4, x2, lsl #3]
  4581e8:	ldr	x1, [sp, #144]
  4581ec:	cmp	x0, x1
  4581f0:	cset	w0, ne  // ne = any
  4581f4:	b	458328 <_obstack_memory_used@@Base+0x6f18>
  4581f8:	ldr	x1, [sp, #112]
  4581fc:	mov	x4, x22
  458200:	mov	x3, x26
  458204:	mov	x2, x28
  458208:	bl	455288 <_obstack_memory_used@@Base+0x3e78>
  45820c:	cmp	w0, #0x1
  458210:	b.le	4582d8 <_obstack_memory_used@@Base+0x6ec8>
  458214:	ldr	x1, [x26, #184]
  458218:	add	x20, x22, w0, sxtw
  45821c:	ldr	x0, [x23, #24]
  458220:	lsl	x25, x28, #3
  458224:	ldr	x1, [x1, x20, lsl #3]
  458228:	ldr	x28, [x0, x28, lsl #3]
  45822c:	str	xzr, [sp, #224]
  458230:	cbz	x1, 458248 <_obstack_memory_used@@Base+0x6e38>
  458234:	add	x1, x1, #0x8
  458238:	add	x0, sp, #0xd8
  45823c:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  458240:	str	w0, [sp, #188]
  458244:	cbnz	w0, 458288 <_obstack_memory_used@@Base+0x6e78>
  458248:	mov	x1, x28
  45824c:	add	x0, sp, #0xd8
  458250:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  458254:	tst	w0, #0xff
  458258:	b.eq	45830c <_obstack_memory_used@@Base+0x6efc>  // b.none
  45825c:	ldr	x28, [x26, #184]
  458260:	mov	x1, x23
  458264:	add	x2, sp, #0xd8
  458268:	add	x0, sp, #0xbc
  45826c:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  458270:	ldr	x1, [x26, #184]
  458274:	str	x0, [x28, x20, lsl #3]
  458278:	ldr	x0, [x1, x20, lsl #3]
  45827c:	cbnz	x0, 4580b4 <_obstack_memory_used@@Base+0x6ca4>
  458280:	ldr	w0, [sp, #188]
  458284:	cbz	w0, 4580b4 <_obstack_memory_used@@Base+0x6ca4>
  458288:	ldr	x0, [sp, #232]
  45828c:	bl	4047b0 <free@plt>
  458290:	ldr	w0, [sp, #188]
  458294:	str	w0, [sp, #184]
  458298:	cbz	w0, 4580e8 <_obstack_memory_used@@Base+0x6cd8>
  45829c:	b	45831c <_obstack_memory_used@@Base+0x6f0c>
  4582a0:	cmp	w2, #0x7
  4582a4:	b.ne	4580cc <_obstack_memory_used@@Base+0x6cbc>  // b.any
  4582a8:	tbnz	w0, #7, 4580cc <_obstack_memory_used@@Base+0x6cbc>
  4582ac:	cmp	w0, #0xa
  4582b0:	b.eq	4582fc <_obstack_memory_used@@Base+0x6eec>  // b.none
  4582b4:	cbnz	w0, 458070 <_obstack_memory_used@@Base+0x6c60>
  4582b8:	ldr	x0, [x26, #152]
  4582bc:	ldr	x0, [x0, #216]
  4582c0:	tbz	w0, #7, 458070 <_obstack_memory_used@@Base+0x6c60>
  4582c4:	b	4580cc <_obstack_memory_used@@Base+0x6cbc>
  4582c8:	ldrb	w2, [x1]
  4582cc:	cmp	w2, w0
  4582d0:	b.eq	458070 <_obstack_memory_used@@Base+0x6c60>  // b.none
  4582d4:	b	4580cc <_obstack_memory_used@@Base+0x6cbc>
  4582d8:	cbnz	w0, 4580b0 <_obstack_memory_used@@Base+0x6ca0>
  4582dc:	ldr	x1, [x23]
  4582e0:	add	x1, x1, x20
  4582e4:	b	458034 <_obstack_memory_used@@Base+0x6c24>
  4582e8:	cbnz	x19, 457fe8 <_obstack_memory_used@@Base+0x6bd8>
  4582ec:	b	45812c <_obstack_memory_used@@Base+0x6d1c>
  4582f0:	tbz	w1, #3, 45809c <_obstack_memory_used@@Base+0x6c8c>
  4582f4:	tbz	w0, #0, 45809c <_obstack_memory_used@@Base+0x6c8c>
  4582f8:	b	4580cc <_obstack_memory_used@@Base+0x6cbc>
  4582fc:	ldr	x0, [x26, #152]
  458300:	ldr	x0, [x0, #216]
  458304:	tbnz	w0, #6, 458070 <_obstack_memory_used@@Base+0x6c60>
  458308:	b	4580cc <_obstack_memory_used@@Base+0x6cbc>
  45830c:	ldr	x0, [sp, #232]
  458310:	bl	4047b0 <free@plt>
  458314:	mov	w0, #0xc                   	// #12
  458318:	str	w0, [sp, #184]
  45831c:	ldr	x0, [sp, #208]
  458320:	bl	4047b0 <free@plt>
  458324:	ldr	w0, [sp, #184]
  458328:	ldp	x19, x20, [sp, #16]
  45832c:	ldp	x21, x22, [sp, #32]
  458330:	ldp	x23, x24, [sp, #48]
  458334:	ldp	x25, x26, [sp, #64]
  458338:	ldp	x27, x28, [sp, #80]
  45833c:	ldp	x29, x30, [sp], #240
  458340:	ret
  458344:	ldr	x0, [x19, #16]
  458348:	str	x0, [sp, #200]
  45834c:	cmp	x0, #0x0
  458350:	b.le	4583ac <_obstack_memory_used@@Base+0x6f9c>
  458354:	lsl	x22, x0, #3
  458358:	str	x0, [sp, #192]
  45835c:	mov	x0, x22
  458360:	bl	404310 <malloc@plt>
  458364:	str	x0, [sp, #208]
  458368:	cbz	x0, 458418 <_obstack_memory_used@@Base+0x7008>
  45836c:	ldr	x1, [x19, #24]
  458370:	mov	x2, x22
  458374:	add	x22, sp, #0xc0
  458378:	bl	403f70 <memcpy@plt>
  45837c:	str	wzr, [sp, #184]
  458380:	ldrb	w0, [x19, #104]
  458384:	tbz	w0, #6, 457f94 <_obstack_memory_used@@Base+0x6b84>
  458388:	b	457f14 <_obstack_memory_used@@Base+0x6b04>
  45838c:	ldr	w0, [sp, #184]
  458390:	cbnz	w0, 45831c <_obstack_memory_used@@Base+0x6f0c>
  458394:	ldr	x0, [x26, #184]
  458398:	ldr	x1, [sp, #104]
  45839c:	str	xzr, [x0, x21, lsl #3]
  4583a0:	add	x1, x1, #0x1
  4583a4:	str	x1, [sp, #104]
  4583a8:	b	458164 <_obstack_memory_used@@Base+0x6d54>
  4583ac:	add	x22, sp, #0xc0
  4583b0:	str	wzr, [sp, #184]
  4583b4:	stp	xzr, xzr, [sp, #192]
  4583b8:	str	xzr, [sp, #208]
  4583bc:	b	457f34 <_obstack_memory_used@@Base+0x6b24>
  4583c0:	add	x21, x0, #0x1
  4583c4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4583c8:	sub	x0, x0, x22
  4583cc:	cmp	x0, x21
  4583d0:	b.lt	458418 <_obstack_memory_used@@Base+0x7008>  // b.tstop
  4583d4:	add	x23, x22, x21
  4583d8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4583dc:	cmp	x23, x0
  4583e0:	b.hi	458418 <_obstack_memory_used@@Base+0x7008>  // b.pmore
  4583e4:	ldr	x0, [x7, #16]
  4583e8:	mov	x24, x7
  4583ec:	lsl	x1, x23, #3
  4583f0:	bl	404530 <realloc@plt>
  4583f4:	cbz	x0, 458418 <_obstack_memory_used@@Base+0x7008>
  4583f8:	stp	x23, x0, [x24, #8]
  4583fc:	lsl	x2, x21, #3
  458400:	add	x0, x0, x22, lsl #3
  458404:	mov	w1, #0x0                   	// #0
  458408:	bl	404410 <memset@plt>
  45840c:	b	457e84 <_obstack_memory_used@@Base+0x6a74>
  458410:	add	x2, x0, #0x1
  458414:	b	4581d8 <_obstack_memory_used@@Base+0x6dc8>
  458418:	mov	w0, #0xc                   	// #12
  45841c:	b	458328 <_obstack_memory_used@@Base+0x6f18>
  458420:	ldr	w0, [sp, #184]
  458424:	cbz	w0, 457f50 <_obstack_memory_used@@Base+0x6b40>
  458428:	b	45831c <_obstack_memory_used@@Base+0x6f0c>
  45842c:	ldp	x0, x1, [sp, #152]
  458430:	str	x21, [x0]
  458434:	str	x1, [x26, #72]
  458438:	ldr	x1, [sp, #168]
  45843c:	mov	w0, #0x1                   	// #1
  458440:	str	x1, [x26, #184]
  458444:	b	458328 <_obstack_memory_used@@Base+0x6f18>
  458448:	mov	x0, #0x0                   	// #0
  45844c:	b	4580e0 <_obstack_memory_used@@Base+0x6cd0>
  458450:	stp	x29, x30, [sp, #-80]!
  458454:	mov	x6, x2
  458458:	mov	x5, x4
  45845c:	mov	x29, sp
  458460:	stp	x19, x20, [sp, #16]
  458464:	mov	x20, x4
  458468:	mov	x4, x3
  45846c:	stp	x21, x22, [sp, #32]
  458470:	mov	x21, x2
  458474:	mov	x22, x1
  458478:	stp	x23, x24, [sp, #48]
  45847c:	mov	x24, x3
  458480:	mov	x19, x0
  458484:	ldr	x3, [x2, #8]
  458488:	ldr	x2, [x6], #16
  45848c:	mov	x1, x6
  458490:	mov	w6, #0x8                   	// #8
  458494:	bl	457e20 <_obstack_memory_used@@Base+0x6a10>
  458498:	mov	w23, w0
  45849c:	cbz	w0, 4584b8 <_obstack_memory_used@@Base+0x70a8>
  4584a0:	mov	w0, w23
  4584a4:	ldp	x19, x20, [sp, #16]
  4584a8:	ldp	x21, x22, [sp, #32]
  4584ac:	ldp	x23, x24, [sp, #48]
  4584b0:	ldp	x29, x30, [sp], #80
  4584b4:	ret
  4584b8:	ldp	x2, x1, [x19, #200]
  4584bc:	stp	x25, x26, [sp, #64]
  4584c0:	ldr	x25, [x21, #8]
  4584c4:	ldr	x26, [x22]
  4584c8:	cmp	x2, x1
  4584cc:	mov	x4, x25
  4584d0:	ldr	x0, [x19, #216]
  4584d4:	b.ge	4585bc <_obstack_memory_used@@Base+0x71ac>  // b.tcont
  4584d8:	add	x1, x2, x2, lsl #2
  4584dc:	cmp	x2, #0x0
  4584e0:	lsl	x1, x1, #3
  4584e4:	b.le	4584fc <_obstack_memory_used@@Base+0x70ec>
  4584e8:	sub	x3, x1, #0x28
  4584ec:	add	x3, x0, x3
  4584f0:	ldr	x5, [x3, #8]
  4584f4:	cmp	x20, x5
  4584f8:	b.eq	4585b0 <_obstack_memory_used@@Base+0x71a0>  // b.none
  4584fc:	add	x6, x0, x1
  458500:	cmp	x26, x25
  458504:	str	x24, [x0, x1]
  458508:	csetm	w1, eq  // eq = none
  45850c:	add	x2, x2, #0x1
  458510:	sub	x0, x25, x26
  458514:	stp	x20, x26, [x6, #8]
  458518:	str	x25, [x6, #24]
  45851c:	strh	w1, [x6, #34]
  458520:	str	x2, [x19, #200]
  458524:	strb	wzr, [x6, #32]
  458528:	ldrsw	x1, [x19, #224]
  45852c:	cmp	x1, x0
  458530:	b.ge	45853c <_obstack_memory_used@@Base+0x712c>  // b.tcont
  458534:	sub	w1, w25, w26
  458538:	str	w1, [x19, #224]
  45853c:	ldr	x5, [x22]
  458540:	add	x4, x20, x4
  458544:	ldr	x0, [x19, #64]
  458548:	sub	x20, x4, x5
  45854c:	ldr	x21, [x19, #192]
  458550:	cmp	x20, x0
  458554:	b.lt	458564 <_obstack_memory_used@@Base+0x7154>  // b.tstop
  458558:	ldr	x1, [x19, #88]
  45855c:	cmp	x0, x1
  458560:	b.lt	45857c <_obstack_memory_used@@Base+0x716c>  // b.tstop
  458564:	ldr	x0, [x19, #48]
  458568:	cmp	x20, x0
  45856c:	b.lt	45858c <_obstack_memory_used@@Base+0x717c>  // b.tstop
  458570:	ldr	x1, [x19, #88]
  458574:	cmp	x0, x1
  458578:	b.ge	45858c <_obstack_memory_used@@Base+0x717c>  // b.tcont
  45857c:	add	w1, w20, #0x1
  458580:	mov	x0, x19
  458584:	bl	456290 <_obstack_memory_used@@Base+0x4e80>
  458588:	cbnz	w0, 458640 <_obstack_memory_used@@Base+0x7230>
  45858c:	cmp	x20, x21
  458590:	b.gt	458604 <_obstack_memory_used@@Base+0x71f4>
  458594:	mov	w0, w23
  458598:	ldp	x19, x20, [sp, #16]
  45859c:	ldp	x21, x22, [sp, #32]
  4585a0:	ldp	x23, x24, [sp, #48]
  4585a4:	ldp	x25, x26, [sp, #64]
  4585a8:	ldp	x29, x30, [sp], #80
  4585ac:	ret
  4585b0:	mov	w5, #0x1                   	// #1
  4585b4:	strb	w5, [x3, #32]
  4585b8:	b	4584fc <_obstack_memory_used@@Base+0x70ec>
  4585bc:	add	x1, x1, x1, lsl #2
  4585c0:	lsl	x1, x1, #4
  4585c4:	bl	404530 <realloc@plt>
  4585c8:	cbz	x0, 45864c <_obstack_memory_used@@Base+0x723c>
  4585cc:	ldp	x3, x2, [x19, #200]
  4585d0:	str	x0, [x19, #216]
  4585d4:	mov	w1, #0x0                   	// #0
  4585d8:	add	x3, x3, x3, lsl #2
  4585dc:	add	x2, x2, x2, lsl #2
  4585e0:	add	x0, x0, x3, lsl #3
  4585e4:	lsl	x2, x2, #3
  4585e8:	bl	404410 <memset@plt>
  4585ec:	ldp	x2, x1, [x19, #200]
  4585f0:	ldr	x4, [x21, #8]
  4585f4:	ldr	x0, [x19, #216]
  4585f8:	lsl	x1, x1, #1
  4585fc:	str	x1, [x19, #208]
  458600:	b	4584d8 <_obstack_memory_used@@Base+0x70c8>
  458604:	ldr	x0, [x19, #184]
  458608:	add	x3, x21, #0x1
  45860c:	sub	x2, x20, x21
  458610:	mov	w1, #0x0                   	// #0
  458614:	lsl	x2, x2, #3
  458618:	add	x0, x0, x3, lsl #3
  45861c:	bl	404410 <memset@plt>
  458620:	ldp	x25, x26, [sp, #64]
  458624:	str	x20, [x19, #192]
  458628:	mov	w0, w23
  45862c:	ldp	x19, x20, [sp, #16]
  458630:	ldp	x21, x22, [sp, #32]
  458634:	ldp	x23, x24, [sp, #48]
  458638:	ldp	x29, x30, [sp], #80
  45863c:	ret
  458640:	mov	w23, w0
  458644:	ldp	x25, x26, [sp, #64]
  458648:	b	4584a0 <_obstack_memory_used@@Base+0x7090>
  45864c:	ldr	x0, [x19, #216]
  458650:	mov	w23, #0xc                   	// #12
  458654:	bl	4047b0 <free@plt>
  458658:	ldp	x25, x26, [sp, #64]
  45865c:	b	4584a0 <_obstack_memory_used@@Base+0x7090>
  458660:	stp	x29, x30, [sp, #-192]!
  458664:	adrp	x5, 473000 <_obstack_memory_used@@Base+0x21bf0>
  458668:	tst	w4, #0xff
  45866c:	mov	x29, sp
  458670:	ldr	q0, [x5, #1456]
  458674:	stp	x19, x20, [sp, #16]
  458678:	mov	x20, x1
  45867c:	ldr	x0, [x0]
  458680:	stp	x21, x22, [sp, #32]
  458684:	mov	x19, x2
  458688:	stp	x23, x24, [sp, #48]
  45868c:	mov	x24, x3
  458690:	stp	x25, x26, [sp, #64]
  458694:	stp	x27, x28, [sp, #80]
  458698:	str	x0, [x29, #136]
  45869c:	str	xzr, [x29, #160]
  4586a0:	str	q0, [x29, #144]
  4586a4:	b.eq	458efc <_obstack_memory_used@@Base+0x7aec>  // b.none
  4586a8:	mov	x0, #0x60                  	// #96
  4586ac:	bl	404310 <malloc@plt>
  4586b0:	str	x0, [x29, #160]
  4586b4:	add	x28, x29, #0x90
  4586b8:	cbz	x0, 458f94 <_obstack_memory_used@@Base+0x7b84>
  4586bc:	ldr	x1, [x29, #136]
  4586c0:	lsl	x0, x19, #4
  4586c4:	str	x0, [x29, #128]
  4586c8:	cmp	x0, #0xfbf
  4586cc:	stp	xzr, xzr, [x29, #168]
  4586d0:	str	xzr, [x29, #184]
  4586d4:	ldr	x21, [x1, #144]
  4586d8:	b.hi	458f20 <_obstack_memory_used@@Base+0x7b10>  // b.pmore
  4586dc:	sub	sp, sp, x0
  4586e0:	str	wzr, [x29, #116]
  4586e4:	mov	x0, sp
  4586e8:	str	x0, [x29, #120]
  4586ec:	ldp	x0, x2, [x29, #120]
  4586f0:	mov	x1, x24
  4586f4:	bl	403f70 <memcpy@plt>
  4586f8:	ldr	x25, [x24]
  4586fc:	nop
  458700:	ldr	x0, [x24, #8]
  458704:	cmp	x0, x25
  458708:	b.lt	4588b8 <_obstack_memory_used@@Base+0x74a8>  // b.tstop
  45870c:	ldr	x1, [x29, #136]
  458710:	lsl	x22, x21, #4
  458714:	mov	x26, x21
  458718:	ldr	x2, [x1]
  45871c:	add	x8, x2, x22
  458720:	ldrb	w1, [x8, #8]
  458724:	cmp	w1, #0x8
  458728:	b.eq	458a74 <_obstack_memory_used@@Base+0x7664>  // b.none
  45872c:	cmp	w1, #0x9
  458730:	b.eq	458b5c <_obstack_memory_used@@Base+0x774c>  // b.none
  458734:	cmp	x0, x25
  458738:	b.ne	458748 <_obstack_memory_used@@Base+0x7338>  // b.any
  45873c:	ldr	x0, [x20, #176]
  458740:	cmp	x0, x21
  458744:	b.eq	458c5c <_obstack_memory_used@@Base+0x784c>  // b.none
  458748:	ldr	x23, [x20, #152]
  45874c:	ldr	x0, [x23]
  458750:	add	x2, x0, x22
  458754:	ldrb	w1, [x2, #8]
  458758:	tbnz	w1, #3, 458aa0 <_obstack_memory_used@@Base+0x7690>
  45875c:	ldrb	w8, [x2, #10]
  458760:	tbnz	w8, #4, 458ba4 <_obstack_memory_used@@Base+0x7794>
  458764:	cmp	w1, #0x4
  458768:	b.eq	458be4 <_obstack_memory_used@@Base+0x77d4>  // b.none
  45876c:	ldr	x0, [x20, #8]
  458770:	cmp	w1, #0x5
  458774:	ldrb	w0, [x0, x25]
  458778:	b.eq	458a4c <_obstack_memory_used@@Base+0x763c>  // b.none
  45877c:	b.hi	458a40 <_obstack_memory_used@@Base+0x7630>  // b.pmore
  458780:	cmp	w1, #0x1
  458784:	b.eq	458c48 <_obstack_memory_used@@Base+0x7838>  // b.none
  458788:	cmp	w1, #0x3
  45878c:	b.ne	458a10 <_obstack_memory_used@@Base+0x7600>  // b.any
  458790:	ldr	x1, [x2]
  458794:	ubfx	x5, x0, #6, #2
  458798:	ldr	x1, [x1, x5, lsl #3]
  45879c:	lsr	x0, x1, x0
  4587a0:	tbz	w0, #0, 458a10 <_obstack_memory_used@@Base+0x7600>
  4587a4:	ldr	w22, [x2, #8]
  4587a8:	tst	w22, #0x3ff00
  4587ac:	b.eq	4587e0 <_obstack_memory_used@@Base+0x73d0>  // b.none
  4587b0:	ldr	w2, [x20, #160]
  4587b4:	mov	x1, x25
  4587b8:	mov	x0, x20
  4587bc:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  4587c0:	ubfx	x1, x22, #8, #10
  4587c4:	tbz	w22, #10, 458d54 <_obstack_memory_used@@Base+0x7944>
  4587c8:	tbz	w0, #0, 458a10 <_obstack_memory_used@@Base+0x7600>
  4587cc:	tbnz	w1, #3, 458a10 <_obstack_memory_used@@Base+0x7600>
  4587d0:	tbz	w1, #5, 4587d8 <_obstack_memory_used@@Base+0x73c8>
  4587d4:	tbz	w0, #1, 458a10 <_obstack_memory_used@@Base+0x7600>
  4587d8:	tbz	w1, #7, 4587e0 <_obstack_memory_used@@Base+0x73d0>
  4587dc:	tbz	w0, #3, 458a10 <_obstack_memory_used@@Base+0x7600>
  4587e0:	ldr	x0, [x23, #24]
  4587e4:	add	x25, x25, #0x1
  4587e8:	ldr	x21, [x0, x26, lsl #3]
  4587ec:	cbz	x28, 458a34 <_obstack_memory_used@@Base+0x7624>
  4587f0:	ldr	x0, [x20, #168]
  4587f4:	cmp	x25, x0
  4587f8:	b.gt	458850 <_obstack_memory_used@@Base+0x7440>
  4587fc:	ldr	x0, [x20, #184]
  458800:	ldr	x0, [x0, x25, lsl #3]
  458804:	cbz	x0, 458850 <_obstack_memory_used@@Base+0x7440>
  458808:	ldr	x2, [x0, #16]
  45880c:	cmp	x2, #0x0
  458810:	b.le	458850 <_obstack_memory_used@@Base+0x7440>
  458814:	sub	x2, x2, #0x1
  458818:	mov	x1, #0x0                   	// #0
  45881c:	ldr	x9, [x0, #24]
  458820:	b	45883c <_obstack_memory_used@@Base+0x742c>
  458824:	add	x0, x2, x1
  458828:	lsr	x0, x0, #1
  45882c:	ldr	x8, [x9, x0, lsl #3]
  458830:	cmp	x21, x8
  458834:	b.gt	458a6c <_obstack_memory_used@@Base+0x765c>
  458838:	mov	x2, x0
  45883c:	cmp	x2, x1
  458840:	b.hi	458824 <_obstack_memory_used@@Base+0x7414>  // b.pmore
  458844:	ldr	x0, [x9, x1, lsl #3]
  458848:	cmp	x21, x0
  45884c:	b.eq	458a34 <_obstack_memory_used@@Base+0x7624>  // b.none
  458850:	ldr	x0, [x28]
  458854:	sub	x0, x0, #0x1
  458858:	str	x0, [x28]
  45885c:	tbnz	x0, #63, 458fb8 <_obstack_memory_used@@Base+0x7ba8>
  458860:	add	x0, x0, x0, lsl #1
  458864:	ldr	x4, [x28, #16]
  458868:	lsl	x1, x0, #4
  45886c:	ldr	x2, [x29, #128]
  458870:	add	x22, x4, x1
  458874:	ldr	x25, [x4, x1]
  458878:	mov	x0, x24
  45887c:	ldr	x1, [x22, #16]
  458880:	bl	403f70 <memcpy@plt>
  458884:	ldr	x0, [x29, #184]
  458888:	bl	4047b0 <free@plt>
  45888c:	ldr	x0, [x22, #16]
  458890:	bl	4047b0 <free@plt>
  458894:	ldp	x0, x1, [x22, #24]
  458898:	stp	x0, x1, [x29, #168]
  45889c:	ldr	x0, [x22, #40]
  4588a0:	str	x0, [x29, #184]
  4588a4:	ldr	x0, [x24, #8]
  4588a8:	ldr	x21, [x22, #8]
  4588ac:	cmp	x0, x25
  4588b0:	b.ge	45870c <_obstack_memory_used@@Base+0x72fc>  // b.tcont
  4588b4:	nop
  4588b8:	ldr	x0, [x29, #184]
  4588bc:	bl	4047b0 <free@plt>
  4588c0:	ldr	w0, [x29, #116]
  4588c4:	cbnz	w0, 458e98 <_obstack_memory_used@@Base+0x7a88>
  4588c8:	cbz	x28, 458eb8 <_obstack_memory_used@@Base+0x7aa8>
  4588cc:	ldr	x20, [x28]
  4588d0:	ldr	x21, [x28, #16]
  4588d4:	cmp	x20, #0x0
  4588d8:	b.le	458904 <_obstack_memory_used@@Base+0x74f4>
  4588dc:	add	x20, x20, x20, lsl #1
  4588e0:	mov	x19, x21
  4588e4:	add	x20, x21, x20, lsl #4
  4588e8:	ldr	x0, [x19, #40]
  4588ec:	add	x19, x19, #0x30
  4588f0:	bl	4047b0 <free@plt>
  4588f4:	ldur	x0, [x19, #-32]
  4588f8:	bl	4047b0 <free@plt>
  4588fc:	cmp	x20, x19
  458900:	b.ne	4588e8 <_obstack_memory_used@@Base+0x74d8>  // b.any
  458904:	mov	x0, x21
  458908:	mov	w19, #0x0                   	// #0
  45890c:	bl	4047b0 <free@plt>
  458910:	mov	sp, x29
  458914:	mov	w0, w19
  458918:	ldp	x19, x20, [sp, #16]
  45891c:	ldp	x21, x22, [sp, #32]
  458920:	ldp	x23, x24, [sp, #48]
  458924:	ldp	x25, x26, [sp, #64]
  458928:	ldp	x27, x28, [sp, #80]
  45892c:	ldp	x29, x30, [sp], #192
  458930:	ret
  458934:	ldr	x22, [x29, #176]
  458938:	cmp	x22, #0x0
  45893c:	b.le	45897c <_obstack_memory_used@@Base+0x756c>
  458940:	sub	x1, x22, #0x1
  458944:	mov	x2, #0x0                   	// #0
  458948:	ldr	x9, [x29, #184]
  45894c:	b	458968 <_obstack_memory_used@@Base+0x7558>
  458950:	add	x0, x1, x2
  458954:	lsr	x0, x0, #1
  458958:	ldr	x8, [x9, x0, lsl #3]
  45895c:	cmp	x8, x21
  458960:	b.lt	458ce0 <_obstack_memory_used@@Base+0x78d0>  // b.tstop
  458964:	mov	x1, x0
  458968:	cmp	x1, x2
  45896c:	b.hi	458950 <_obstack_memory_used@@Base+0x7540>  // b.pmore
  458970:	ldr	x0, [x9, x2, lsl #3]
  458974:	cmp	x0, x21
  458978:	b.eq	458c3c <_obstack_memory_used@@Base+0x782c>  // b.none
  45897c:	cbz	x28, 458a04 <_obstack_memory_used@@Base+0x75f4>
  458980:	ldp	x23, x0, [x28]
  458984:	ldr	x26, [x28, #16]
  458988:	add	x1, x23, #0x1
  45898c:	str	x1, [x28]
  458990:	str	x1, [x29, #104]
  458994:	cmp	x1, x0
  458998:	b.eq	458ed0 <_obstack_memory_used@@Base+0x7ac0>  // b.none
  45899c:	add	x23, x23, x23, lsl #1
  4589a0:	ldr	x0, [x29, #128]
  4589a4:	lsl	x1, x23, #4
  4589a8:	add	x23, x26, x1
  4589ac:	str	x25, [x26, x1]
  4589b0:	str	x27, [x23, #8]
  4589b4:	bl	404310 <malloc@plt>
  4589b8:	str	x0, [x23, #16]
  4589bc:	cbz	x0, 458f74 <_obstack_memory_used@@Base+0x7b64>
  4589c0:	ldr	x2, [x29, #128]
  4589c4:	add	x27, x23, #0x18
  4589c8:	mov	x1, x24
  4589cc:	bl	403f70 <memcpy@plt>
  4589d0:	str	x22, [x27, #8]
  4589d4:	cmp	x22, #0x0
  4589d8:	b.le	458ec0 <_obstack_memory_used@@Base+0x7ab0>
  4589dc:	lsl	x2, x22, #3
  4589e0:	str	x22, [x23, #24]
  4589e4:	mov	x0, x2
  4589e8:	str	x2, [x29, #96]
  4589ec:	bl	404310 <malloc@plt>
  4589f0:	str	x0, [x27, #16]
  4589f4:	ldr	x2, [x29, #96]
  4589f8:	cbz	x0, 458f70 <_obstack_memory_used@@Base+0x7b60>
  4589fc:	ldr	x1, [x29, #184]
  458a00:	bl	403f70 <memcpy@plt>
  458a04:	tbz	x21, #63, 458700 <_obstack_memory_used@@Base+0x72f0>
  458a08:	cmn	x21, #0x2
  458a0c:	b.eq	458df8 <_obstack_memory_used@@Base+0x79e8>  // b.none
  458a10:	cbnz	x28, 458850 <_obstack_memory_used@@Base+0x7440>
  458a14:	ldr	x0, [x29, #184]
  458a18:	mov	w19, #0x1                   	// #1
  458a1c:	bl	4047b0 <free@plt>
  458a20:	ldr	w0, [x29, #116]
  458a24:	cbz	w0, 458910 <_obstack_memory_used@@Base+0x7500>
  458a28:	ldr	x0, [x29, #120]
  458a2c:	bl	4047b0 <free@plt>
  458a30:	b	458910 <_obstack_memory_used@@Base+0x7500>
  458a34:	str	xzr, [x29, #176]
  458a38:	tbz	x21, #63, 458700 <_obstack_memory_used@@Base+0x72f0>
  458a3c:	b	458a08 <_obstack_memory_used@@Base+0x75f8>
  458a40:	cmp	w1, #0x7
  458a44:	b.ne	458a10 <_obstack_memory_used@@Base+0x7600>  // b.any
  458a48:	tbnz	w0, #7, 458a10 <_obstack_memory_used@@Base+0x7600>
  458a4c:	cmp	w0, #0xa
  458a50:	b.eq	458d64 <_obstack_memory_used@@Base+0x7954>  // b.none
  458a54:	cbnz	w0, 4587a4 <_obstack_memory_used@@Base+0x7394>
  458a58:	ldr	x0, [x20, #152]
  458a5c:	ldr	x0, [x0, #216]
  458a60:	tbz	w0, #7, 4587a4 <_obstack_memory_used@@Base+0x7394>
  458a64:	cbnz	x28, 458850 <_obstack_memory_used@@Base+0x7440>
  458a68:	b	458a14 <_obstack_memory_used@@Base+0x7604>
  458a6c:	add	x1, x0, #0x1
  458a70:	b	45883c <_obstack_memory_used@@Base+0x742c>
  458a74:	ldr	x1, [x2, x22]
  458a78:	add	x1, x1, #0x1
  458a7c:	cmp	x19, x1
  458a80:	b.le	458734 <_obstack_memory_used@@Base+0x7324>
  458a84:	lsl	x1, x1, #4
  458a88:	add	x0, x24, x1
  458a8c:	str	x25, [x24, x1]
  458a90:	mov	x1, #0xffffffffffffffff    	// #-1
  458a94:	str	x1, [x0, #8]
  458a98:	ldr	x0, [x24, #8]
  458a9c:	b	458734 <_obstack_memory_used@@Base+0x7324>
  458aa0:	ldr	x0, [x23, #40]
  458aa4:	add	x23, x21, x21, lsl #1
  458aa8:	ldr	x2, [x20, #184]
  458aac:	mov	x1, x21
  458ab0:	add	x23, x0, x23, lsl #3
  458ab4:	add	x0, x29, #0xa8
  458ab8:	ldr	x22, [x2, x25, lsl #3]
  458abc:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  458ac0:	tst	w0, #0xff
  458ac4:	b.eq	458df8 <_obstack_memory_used@@Base+0x79e8>  // b.none
  458ac8:	ldr	x11, [x23, #8]
  458acc:	cmp	x11, #0x0
  458ad0:	b.le	458a10 <_obstack_memory_used@@Base+0x7600>
  458ad4:	ldr	x12, [x22, #16]
  458ad8:	mov	x21, #0xffffffffffffffff    	// #-1
  458adc:	ldr	x14, [x23, #16]
  458ae0:	add	x13, x12, x21
  458ae4:	mov	x1, #0x0                   	// #0
  458ae8:	cmp	x12, #0x0
  458aec:	b.le	458b30 <_obstack_memory_used@@Base+0x7720>
  458af0:	mov	x8, x13
  458af4:	mov	x2, #0x0                   	// #0
  458af8:	ldr	x27, [x14, x1, lsl #3]
  458afc:	ldr	x9, [x22, #24]
  458b00:	b	458b1c <_obstack_memory_used@@Base+0x770c>
  458b04:	add	x0, x8, x2
  458b08:	lsr	x0, x0, #1
  458b0c:	ldr	x10, [x9, x0, lsl #3]
  458b10:	cmp	x27, x10
  458b14:	b.gt	458b54 <_obstack_memory_used@@Base+0x7744>
  458b18:	mov	x8, x0
  458b1c:	cmp	x8, x2
  458b20:	b.hi	458b04 <_obstack_memory_used@@Base+0x76f4>  // b.pmore
  458b24:	ldr	x0, [x9, x2, lsl #3]
  458b28:	cmp	x27, x0
  458b2c:	b.eq	458b44 <_obstack_memory_used@@Base+0x7734>  // b.none
  458b30:	add	x1, x1, #0x1
  458b34:	cmp	x1, x11
  458b38:	b.ne	458ae8 <_obstack_memory_used@@Base+0x76d8>  // b.any
  458b3c:	tbz	x21, #63, 458700 <_obstack_memory_used@@Base+0x72f0>
  458b40:	b	458a08 <_obstack_memory_used@@Base+0x75f8>
  458b44:	cmn	x21, #0x1
  458b48:	b.ne	458934 <_obstack_memory_used@@Base+0x7524>  // b.any
  458b4c:	mov	x21, x27
  458b50:	b	458b30 <_obstack_memory_used@@Base+0x7720>
  458b54:	add	x2, x0, #0x1
  458b58:	b	458b1c <_obstack_memory_used@@Base+0x770c>
  458b5c:	ldr	x1, [x8]
  458b60:	add	x1, x1, #0x1
  458b64:	cmp	x19, x1
  458b68:	b.le	458734 <_obstack_memory_used@@Base+0x7324>
  458b6c:	lsl	x1, x1, #4
  458b70:	add	x2, x24, x1
  458b74:	ldr	x0, [x24, x1]
  458b78:	cmp	x0, x25
  458b7c:	b.lt	458e5c <_obstack_memory_used@@Base+0x7a4c>  // b.tstop
  458b80:	ldrb	w0, [x8, #10]
  458b84:	tbz	w0, #3, 458b98 <_obstack_memory_used@@Base+0x7788>
  458b88:	ldr	x3, [x29, #120]
  458b8c:	ldr	x0, [x3, x1]
  458b90:	cmn	x0, #0x1
  458b94:	b.ne	458e80 <_obstack_memory_used@@Base+0x7a70>  // b.any
  458b98:	str	x25, [x2, #8]
  458b9c:	ldr	x0, [x24, #8]
  458ba0:	b	458734 <_obstack_memory_used@@Base+0x7324>
  458ba4:	mov	x4, x25
  458ba8:	mov	x3, x20
  458bac:	mov	x2, x21
  458bb0:	add	x1, x23, #0xd8
  458bb4:	bl	455288 <_obstack_memory_used@@Base+0x3e78>
  458bb8:	sxtw	x27, w0
  458bbc:	cbnz	w0, 458bd4 <_obstack_memory_used@@Base+0x77c4>
  458bc0:	ldr	x2, [x23]
  458bc4:	add	x2, x2, x22
  458bc8:	ldrb	w1, [x2, #8]
  458bcc:	b	45876c <_obstack_memory_used@@Base+0x735c>
  458bd0:	cbz	x27, 458d78 <_obstack_memory_used@@Base+0x7968>
  458bd4:	ldr	x0, [x23, #24]
  458bd8:	add	x25, x25, x27
  458bdc:	ldr	x21, [x0, x21, lsl #3]
  458be0:	b	4587ec <_obstack_memory_used@@Base+0x73dc>
  458be4:	ldr	x0, [x2]
  458be8:	add	x0, x0, #0x1
  458bec:	lsl	x0, x0, #4
  458bf0:	add	x1, x24, x0
  458bf4:	ldr	x0, [x24, x0]
  458bf8:	ldr	x1, [x1, #8]
  458bfc:	sub	x27, x1, x0
  458c00:	cbz	x28, 458bd0 <_obstack_memory_used@@Base+0x77c0>
  458c04:	cmn	x0, #0x1
  458c08:	ccmn	x1, #0x1, #0x4, ne  // ne = any
  458c0c:	b.eq	458850 <_obstack_memory_used@@Base+0x7440>  // b.none
  458c10:	cbz	x27, 458d78 <_obstack_memory_used@@Base+0x7968>
  458c14:	ldr	x1, [x20, #8]
  458c18:	mov	x2, x27
  458c1c:	add	x0, x1, x0
  458c20:	add	x1, x1, x25
  458c24:	bl	4046d0 <memcmp@plt>
  458c28:	cbnz	w0, 458850 <_obstack_memory_used@@Base+0x7440>
  458c2c:	ldr	x0, [x23, #24]
  458c30:	add	x25, x25, x27
  458c34:	ldr	x21, [x0, x21, lsl #3]
  458c38:	b	4587ec <_obstack_memory_used@@Base+0x73dc>
  458c3c:	mov	x21, x27
  458c40:	tbz	x21, #63, 458700 <_obstack_memory_used@@Base+0x72f0>
  458c44:	b	458a08 <_obstack_memory_used@@Base+0x75f8>
  458c48:	ldrb	w1, [x2]
  458c4c:	cmp	w1, w0
  458c50:	b.eq	4587a4 <_obstack_memory_used@@Base+0x7394>  // b.none
  458c54:	cbnz	x28, 458850 <_obstack_memory_used@@Base+0x7440>
  458c58:	b	458a14 <_obstack_memory_used@@Base+0x7604>
  458c5c:	cbz	x28, 458ea8 <_obstack_memory_used@@Base+0x7a98>
  458c60:	cbz	x19, 458c94 <_obstack_memory_used@@Base+0x7884>
  458c64:	mov	x0, x24
  458c68:	mov	x1, #0x0                   	// #0
  458c6c:	nop
  458c70:	ldr	x2, [x0]
  458c74:	tbnz	x2, #63, 458c84 <_obstack_memory_used@@Base+0x7874>
  458c78:	ldr	x2, [x0, #8]
  458c7c:	cmn	x2, #0x1
  458c80:	b.eq	458ce8 <_obstack_memory_used@@Base+0x78d8>  // b.none
  458c84:	add	x1, x1, #0x1
  458c88:	add	x0, x0, #0x10
  458c8c:	cmp	x19, x1
  458c90:	b.ne	458c70 <_obstack_memory_used@@Base+0x7860>  // b.any
  458c94:	ldr	x0, [x29, #184]
  458c98:	bl	4047b0 <free@plt>
  458c9c:	ldr	w0, [x29, #116]
  458ca0:	cbnz	w0, 458fac <_obstack_memory_used@@Base+0x7b9c>
  458ca4:	ldr	x0, [x28]
  458ca8:	ldr	x21, [x28, #16]
  458cac:	cmp	x0, #0x0
  458cb0:	b.le	458904 <_obstack_memory_used@@Base+0x74f4>
  458cb4:	add	x0, x0, x0, lsl #1
  458cb8:	mov	x19, x21
  458cbc:	add	x20, x21, x0, lsl #4
  458cc0:	ldr	x0, [x19, #40]
  458cc4:	add	x19, x19, #0x30
  458cc8:	bl	4047b0 <free@plt>
  458ccc:	ldur	x0, [x19, #-32]
  458cd0:	bl	4047b0 <free@plt>
  458cd4:	cmp	x20, x19
  458cd8:	b.ne	458cc0 <_obstack_memory_used@@Base+0x78b0>  // b.any
  458cdc:	b	458904 <_obstack_memory_used@@Base+0x74f4>
  458ce0:	add	x2, x0, #0x1
  458ce4:	b	458968 <_obstack_memory_used@@Base+0x7558>
  458ce8:	cmp	x19, x1
  458cec:	ldr	x0, [x28]
  458cf0:	b.eq	458c94 <_obstack_memory_used@@Base+0x7884>  // b.none
  458cf4:	sub	x0, x0, #0x1
  458cf8:	str	x0, [x28]
  458cfc:	tbnz	x0, #63, 458fb8 <_obstack_memory_used@@Base+0x7ba8>
  458d00:	add	x0, x0, x0, lsl #1
  458d04:	ldr	x4, [x28, #16]
  458d08:	lsl	x1, x0, #4
  458d0c:	ldr	x2, [x29, #128]
  458d10:	add	x22, x4, x1
  458d14:	ldr	x25, [x4, x1]
  458d18:	mov	x0, x24
  458d1c:	ldr	x1, [x22, #16]
  458d20:	bl	403f70 <memcpy@plt>
  458d24:	ldr	x0, [x29, #184]
  458d28:	bl	4047b0 <free@plt>
  458d2c:	ldr	x0, [x22, #16]
  458d30:	bl	4047b0 <free@plt>
  458d34:	ldr	x21, [x22, #8]
  458d38:	ldp	x8, x9, [x22, #24]
  458d3c:	mov	x26, x21
  458d40:	ldr	x0, [x22, #40]
  458d44:	lsl	x22, x21, #4
  458d48:	stp	x8, x9, [x29, #168]
  458d4c:	str	x0, [x29, #184]
  458d50:	b	458748 <_obstack_memory_used@@Base+0x7338>
  458d54:	tbz	w1, #3, 4587d0 <_obstack_memory_used@@Base+0x73c0>
  458d58:	tbz	w0, #0, 4587d0 <_obstack_memory_used@@Base+0x73c0>
  458d5c:	cbnz	x28, 458850 <_obstack_memory_used@@Base+0x7440>
  458d60:	b	458a14 <_obstack_memory_used@@Base+0x7604>
  458d64:	ldr	x0, [x20, #152]
  458d68:	ldr	x0, [x0, #216]
  458d6c:	tbnz	w0, #6, 4587a4 <_obstack_memory_used@@Base+0x7394>
  458d70:	cbnz	x28, 458850 <_obstack_memory_used@@Base+0x7440>
  458d74:	b	458a14 <_obstack_memory_used@@Base+0x7604>
  458d78:	mov	x1, x21
  458d7c:	add	x0, x29, #0xa8
  458d80:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  458d84:	tst	w0, #0xff
  458d88:	b.eq	458df8 <_obstack_memory_used@@Base+0x79e8>  // b.none
  458d8c:	ldr	x0, [x20, #184]
  458d90:	ldr	x0, [x0, x25, lsl #3]
  458d94:	ldr	x1, [x0, #16]
  458d98:	cmp	x1, #0x0
  458d9c:	b.le	458bc0 <_obstack_memory_used@@Base+0x77b0>
  458da0:	ldr	x8, [x23, #40]
  458da4:	add	x5, x21, x21, lsl #1
  458da8:	ldr	x9, [x0, #24]
  458dac:	sub	x1, x1, #0x1
  458db0:	add	x0, x8, x5, lsl #3
  458db4:	mov	x2, #0x0                   	// #0
  458db8:	ldr	x0, [x0, #16]
  458dbc:	ldr	x8, [x0]
  458dc0:	b	458ddc <_obstack_memory_used@@Base+0x79cc>
  458dc4:	add	x0, x1, x2
  458dc8:	lsr	x0, x0, #1
  458dcc:	ldr	x5, [x9, x0, lsl #3]
  458dd0:	cmp	x8, x5
  458dd4:	b.gt	458e78 <_obstack_memory_used@@Base+0x7a68>
  458dd8:	mov	x1, x0
  458ddc:	cmp	x1, x2
  458de0:	b.hi	458dc4 <_obstack_memory_used@@Base+0x79b4>  // b.pmore
  458de4:	ldr	x21, [x9, x2, lsl #3]
  458de8:	cmp	x8, x21
  458dec:	b.ne	458bc0 <_obstack_memory_used@@Base+0x77b0>  // b.any
  458df0:	tbz	x21, #63, 458700 <_obstack_memory_used@@Base+0x72f0>
  458df4:	b	458a08 <_obstack_memory_used@@Base+0x75f8>
  458df8:	ldr	x0, [x29, #184]
  458dfc:	bl	4047b0 <free@plt>
  458e00:	ldr	w0, [x29, #116]
  458e04:	cbnz	w0, 458f88 <_obstack_memory_used@@Base+0x7b78>
  458e08:	cbz	x28, 458f94 <_obstack_memory_used@@Base+0x7b84>
  458e0c:	ldr	x26, [x28, #16]
  458e10:	ldr	x0, [x28]
  458e14:	str	x0, [x29, #104]
  458e18:	ldr	x0, [x29, #104]
  458e1c:	cmp	x0, #0x0
  458e20:	b.le	458e4c <_obstack_memory_used@@Base+0x7a3c>
  458e24:	add	x22, x0, x0, lsl #1
  458e28:	mov	x19, x26
  458e2c:	add	x22, x26, x22, lsl #4
  458e30:	ldr	x0, [x19, #40]
  458e34:	add	x19, x19, #0x30
  458e38:	bl	4047b0 <free@plt>
  458e3c:	ldur	x0, [x19, #-32]
  458e40:	bl	4047b0 <free@plt>
  458e44:	cmp	x22, x19
  458e48:	b.ne	458e30 <_obstack_memory_used@@Base+0x7a20>  // b.any
  458e4c:	mov	x0, x26
  458e50:	mov	w19, #0xc                   	// #12
  458e54:	bl	4047b0 <free@plt>
  458e58:	b	458910 <_obstack_memory_used@@Base+0x7500>
  458e5c:	str	x25, [x2, #8]
  458e60:	mov	x1, x24
  458e64:	ldr	x0, [x29, #120]
  458e68:	ldr	x2, [x29, #128]
  458e6c:	bl	403f70 <memcpy@plt>
  458e70:	ldr	x0, [x24, #8]
  458e74:	b	458734 <_obstack_memory_used@@Base+0x7324>
  458e78:	add	x2, x0, #0x1
  458e7c:	b	458ddc <_obstack_memory_used@@Base+0x79cc>
  458e80:	ldr	x2, [x29, #128]
  458e84:	mov	x1, x3
  458e88:	mov	x0, x24
  458e8c:	bl	403f70 <memcpy@plt>
  458e90:	ldr	x0, [x24, #8]
  458e94:	b	458734 <_obstack_memory_used@@Base+0x7324>
  458e98:	ldr	x0, [x29, #120]
  458e9c:	bl	4047b0 <free@plt>
  458ea0:	cbnz	x28, 4588cc <_obstack_memory_used@@Base+0x74bc>
  458ea4:	b	458eb8 <_obstack_memory_used@@Base+0x7aa8>
  458ea8:	ldr	x0, [x29, #184]
  458eac:	bl	4047b0 <free@plt>
  458eb0:	ldr	w0, [x29, #116]
  458eb4:	cbnz	w0, 458f9c <_obstack_memory_used@@Base+0x7b8c>
  458eb8:	mov	w19, #0x0                   	// #0
  458ebc:	b	458910 <_obstack_memory_used@@Base+0x7500>
  458ec0:	stp	xzr, xzr, [x23, #24]
  458ec4:	str	xzr, [x27, #16]
  458ec8:	tbz	x21, #63, 458700 <_obstack_memory_used@@Base+0x72f0>
  458ecc:	b	458a08 <_obstack_memory_used@@Base+0x75f8>
  458ed0:	lsl	x2, x1, #1
  458ed4:	mov	x0, x26
  458ed8:	add	x1, x2, x1
  458edc:	str	x2, [x29, #96]
  458ee0:	lsl	x1, x1, #5
  458ee4:	bl	404530 <realloc@plt>
  458ee8:	cbz	x0, 458f74 <_obstack_memory_used@@Base+0x7b64>
  458eec:	ldr	x2, [x29, #96]
  458ef0:	mov	x26, x0
  458ef4:	stp	x2, x0, [x28, #8]
  458ef8:	b	45899c <_obstack_memory_used@@Base+0x758c>
  458efc:	ldr	x1, [x29, #136]
  458f00:	lsl	x0, x19, #4
  458f04:	str	x0, [x29, #128]
  458f08:	cmp	x0, #0xfbf
  458f0c:	stp	xzr, xzr, [x29, #168]
  458f10:	mov	x28, #0x0                   	// #0
  458f14:	str	xzr, [x29, #184]
  458f18:	ldr	x21, [x1, #144]
  458f1c:	b.ls	4586dc <_obstack_memory_used@@Base+0x72cc>  // b.plast
  458f20:	bl	404310 <malloc@plt>
  458f24:	str	x0, [x29, #120]
  458f28:	mov	w1, #0x1                   	// #1
  458f2c:	str	w1, [x29, #116]
  458f30:	cbnz	x0, 4586ec <_obstack_memory_used@@Base+0x72dc>
  458f34:	cbz	x28, 458f94 <_obstack_memory_used@@Base+0x7b84>
  458f38:	mov	x20, #0x0                   	// #0
  458f3c:	mov	x21, #0x30                  	// #48
  458f40:	b	458f5c <_obstack_memory_used@@Base+0x7b4c>
  458f44:	madd	x19, x20, x21, x0
  458f48:	add	x20, x20, #0x1
  458f4c:	ldr	x0, [x19, #40]
  458f50:	bl	4047b0 <free@plt>
  458f54:	ldr	x0, [x19, #16]
  458f58:	bl	4047b0 <free@plt>
  458f5c:	ldr	x1, [x28]
  458f60:	ldr	x0, [x28, #16]
  458f64:	cmp	x20, x1
  458f68:	b.lt	458f44 <_obstack_memory_used@@Base+0x7b34>  // b.tstop
  458f6c:	b	458e50 <_obstack_memory_used@@Base+0x7a40>
  458f70:	stp	xzr, xzr, [x23, #24]
  458f74:	ldr	x0, [x29, #184]
  458f78:	bl	4047b0 <free@plt>
  458f7c:	ldr	w0, [x29, #116]
  458f80:	cbz	w0, 458e18 <_obstack_memory_used@@Base+0x7a08>
  458f84:	nop
  458f88:	ldr	x0, [x29, #120]
  458f8c:	bl	4047b0 <free@plt>
  458f90:	b	458e08 <_obstack_memory_used@@Base+0x79f8>
  458f94:	mov	w19, #0xc                   	// #12
  458f98:	b	458910 <_obstack_memory_used@@Base+0x7500>
  458f9c:	ldr	x0, [x29, #120]
  458fa0:	mov	w19, #0x0                   	// #0
  458fa4:	bl	4047b0 <free@plt>
  458fa8:	b	458910 <_obstack_memory_used@@Base+0x7500>
  458fac:	ldr	x0, [x29, #120]
  458fb0:	bl	4047b0 <free@plt>
  458fb4:	b	458ca4 <_obstack_memory_used@@Base+0x7894>
  458fb8:	bl	453af0 <_obstack_memory_used@@Base+0x26e0>
  458fbc:	nop
  458fc0:	stp	x29, x30, [sp, #-80]!
  458fc4:	mov	x29, sp
  458fc8:	stp	x19, x20, [sp, #16]
  458fcc:	stp	x21, x22, [sp, #32]
  458fd0:	ldr	x22, [x1]
  458fd4:	stp	x23, x24, [sp, #48]
  458fd8:	mov	x24, x2
  458fdc:	ldr	x19, [x2, #8]
  458fe0:	str	x25, [sp, #64]
  458fe4:	mov	x25, x0
  458fe8:	ldrb	w0, [x1, #56]
  458fec:	tst	x0, #0x10
  458ff0:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  458ff4:	b.ne	45921c <_obstack_memory_used@@Base+0x7e0c>  // b.any
  458ff8:	ldr	w2, [x22, #128]
  458ffc:	cmp	w2, #0xf
  459000:	b.eq	459278 <_obstack_memory_used@@Base+0x7e68>  // b.none
  459004:	sbfiz	x20, x2, #6, #32
  459008:	sxtw	x1, w2
  45900c:	add	x4, x20, #0x30
  459010:	add	x0, x20, #0x8
  459014:	ldr	x20, [x22, #112]
  459018:	add	w2, w2, #0x1
  45901c:	movi	v0.4s, #0x0
  459020:	lsl	x1, x1, #6
  459024:	add	x3, x20, x1
  459028:	add	x4, x20, x4
  45902c:	str	w2, [x22, #128]
  459030:	add	x2, x1, #0x20
  459034:	add	x2, x20, x2
  459038:	mov	w6, #0x8                   	// #8
  45903c:	stur	q0, [x3, #8]
  459040:	add	x20, x20, x0
  459044:	mov	x5, #0xffffffffffffffff    	// #-1
  459048:	str	xzr, [x3, #24]
  45904c:	strb	w6, [x4, #8]
  459050:	ldrb	w0, [x2, #26]
  459054:	and	w0, w0, #0xfffffff3
  459058:	strb	w0, [x2, #26]
  45905c:	str	x5, [x3, #64]
  459060:	str	q0, [x3, #32]
  459064:	ldr	w3, [x22, #128]
  459068:	cmp	w3, #0xf
  45906c:	b.eq	4592a8 <_obstack_memory_used@@Base+0x7e98>  // b.none
  459070:	sbfiz	x2, x3, #6, #32
  459074:	sxtw	x1, w3
  459078:	ldr	x21, [x22, #112]
  45907c:	add	x0, x2, #0x8
  459080:	add	w3, w3, #0x1
  459084:	add	x2, x2, #0x30
  459088:	movi	v0.4s, #0x0
  45908c:	lsl	x1, x1, #6
  459090:	add	x4, x21, x1
  459094:	add	x2, x21, x2
  459098:	str	w3, [x22, #128]
  45909c:	add	x3, x1, #0x20
  4590a0:	add	x3, x21, x3
  4590a4:	mov	w6, #0x9                   	// #9
  4590a8:	stur	q0, [x4, #8]
  4590ac:	add	x21, x21, x0
  4590b0:	mov	x5, #0xffffffffffffffff    	// #-1
  4590b4:	str	xzr, [x4, #24]
  4590b8:	strb	w6, [x2, #8]
  4590bc:	ldrb	w0, [x3, #26]
  4590c0:	and	w0, w0, #0xfffffff3
  4590c4:	strb	w0, [x3, #26]
  4590c8:	str	x5, [x4, #64]
  4590cc:	str	q0, [x4, #32]
  4590d0:	ldr	w3, [x22, #128]
  4590d4:	mov	x23, x21
  4590d8:	cbz	x19, 459150 <_obstack_memory_used@@Base+0x7d40>
  4590dc:	cmp	w3, #0xf
  4590e0:	b.eq	459308 <_obstack_memory_used@@Base+0x7ef8>  // b.none
  4590e4:	sbfiz	x0, x3, #6, #32
  4590e8:	sxtw	x1, w3
  4590ec:	ldr	x23, [x22, #112]
  4590f0:	add	x6, x0, #0x8
  4590f4:	add	x2, x0, #0x30
  4590f8:	add	w3, w3, #0x1
  4590fc:	lsl	x1, x1, #6
  459100:	add	x2, x23, x2
  459104:	add	x0, x23, x1
  459108:	add	x4, x1, #0x20
  45910c:	str	w3, [x22, #128]
  459110:	add	x3, x23, x4
  459114:	mov	w5, #0x10                  	// #16
  459118:	mov	x4, #0xffffffffffffffff    	// #-1
  45911c:	stp	xzr, x19, [x0, #8]
  459120:	add	x23, x23, x6
  459124:	str	x21, [x0, #24]
  459128:	strb	w5, [x2, #8]
  45912c:	ldrb	w2, [x3, #26]
  459130:	and	w2, w2, #0xfffffff3
  459134:	strb	w2, [x3, #26]
  459138:	stp	xzr, xzr, [x0, #32]
  45913c:	str	x4, [x0, #64]
  459140:	str	x23, [x19]
  459144:	cbz	x21, 45914c <_obstack_memory_used@@Base+0x7d3c>
  459148:	str	x23, [x21]
  45914c:	ldr	w3, [x22, #128]
  459150:	cmp	w3, #0xf
  459154:	b.eq	4592d8 <_obstack_memory_used@@Base+0x7ec8>  // b.none
  459158:	sbfiz	x19, x3, #6, #32
  45915c:	sxtw	x1, w3
  459160:	add	x5, x19, #0x30
  459164:	add	x0, x19, #0x8
  459168:	ldr	x19, [x22, #112]
  45916c:	add	w3, w3, #0x1
  459170:	lsl	x1, x1, #6
  459174:	add	x5, x19, x5
  459178:	add	x2, x19, x1
  45917c:	add	x4, x1, #0x20
  459180:	str	w3, [x22, #128]
  459184:	add	x3, x19, x4
  459188:	mov	w6, #0x10                  	// #16
  45918c:	add	x19, x19, x0
  459190:	stp	xzr, x20, [x2, #8]
  459194:	mov	x4, #0xffffffffffffffff    	// #-1
  459198:	str	x23, [x2, #24]
  45919c:	strb	w6, [x5, #8]
  4591a0:	ldrb	w0, [x3, #26]
  4591a4:	and	w0, w0, #0xfffffff3
  4591a8:	strb	w0, [x3, #26]
  4591ac:	stp	xzr, xzr, [x2, #32]
  4591b0:	str	x4, [x2, #64]
  4591b4:	cbz	x20, 4591bc <_obstack_memory_used@@Base+0x7dac>
  4591b8:	str	x19, [x20]
  4591bc:	cbz	x23, 459250 <_obstack_memory_used@@Base+0x7e40>
  4591c0:	str	x19, [x23]
  4591c4:	cbz	x19, 459250 <_obstack_memory_used@@Base+0x7e40>
  4591c8:	cmp	x20, #0x0
  4591cc:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  4591d0:	b.eq	459250 <_obstack_memory_used@@Base+0x7e40>  // b.none
  4591d4:	ldr	x0, [x24, #40]
  4591d8:	str	x0, [x21, #40]
  4591dc:	str	x0, [x20, #40]
  4591e0:	ldrb	w0, [x24, #50]
  4591e4:	ldrb	w1, [x21, #50]
  4591e8:	ubfx	x0, x0, #3, #1
  4591ec:	bfi	w1, w0, #3, #1
  4591f0:	strb	w1, [x21, #50]
  4591f4:	ldrb	w1, [x20, #50]
  4591f8:	bfi	w1, w0, #3, #1
  4591fc:	strb	w1, [x20, #50]
  459200:	mov	x0, x19
  459204:	ldp	x19, x20, [sp, #16]
  459208:	ldp	x21, x22, [sp, #32]
  45920c:	ldp	x23, x24, [sp, #48]
  459210:	ldr	x25, [sp, #64]
  459214:	ldp	x29, x30, [sp], #80
  459218:	ret
  45921c:	ldr	x0, [x2, #40]
  459220:	cmp	x0, #0x3f
  459224:	b.gt	459200 <_obstack_memory_used@@Base+0x7df0>
  459228:	ldr	x1, [x22, #160]
  45922c:	lsr	x0, x1, x0
  459230:	tbnz	w0, #0, 458ff8 <_obstack_memory_used@@Base+0x7be8>
  459234:	mov	x0, x19
  459238:	ldp	x19, x20, [sp, #16]
  45923c:	ldp	x21, x22, [sp, #32]
  459240:	ldp	x23, x24, [sp, #48]
  459244:	ldr	x25, [sp, #64]
  459248:	ldp	x29, x30, [sp], #80
  45924c:	ret
  459250:	mov	w0, #0xc                   	// #12
  459254:	str	w0, [x25]
  459258:	mov	x19, #0x0                   	// #0
  45925c:	mov	x0, x19
  459260:	ldp	x19, x20, [sp, #16]
  459264:	ldp	x21, x22, [sp, #32]
  459268:	ldp	x23, x24, [sp, #48]
  45926c:	ldr	x25, [sp, #64]
  459270:	ldp	x29, x30, [sp], #80
  459274:	ret
  459278:	mov	x0, #0x3c8                 	// #968
  45927c:	bl	404310 <malloc@plt>
  459280:	mov	x20, x0
  459284:	cbz	x0, 459340 <_obstack_memory_used@@Base+0x7f30>
  459288:	ldr	x0, [x22, #112]
  45928c:	str	x0, [x20]
  459290:	mov	w2, #0x1                   	// #1
  459294:	mov	x4, #0x30                  	// #48
  459298:	mov	x1, #0x0                   	// #0
  45929c:	mov	x0, #0x8                   	// #8
  4592a0:	str	x20, [x22, #112]
  4592a4:	b	45901c <_obstack_memory_used@@Base+0x7c0c>
  4592a8:	mov	x0, #0x3c8                 	// #968
  4592ac:	bl	404310 <malloc@plt>
  4592b0:	mov	x21, x0
  4592b4:	cbz	x0, 459338 <_obstack_memory_used@@Base+0x7f28>
  4592b8:	ldr	x0, [x22, #112]
  4592bc:	str	x0, [x21]
  4592c0:	mov	x2, #0x30                  	// #48
  4592c4:	mov	w3, #0x1                   	// #1
  4592c8:	mov	x1, #0x0                   	// #0
  4592cc:	mov	x0, #0x8                   	// #8
  4592d0:	str	x21, [x22, #112]
  4592d4:	b	459088 <_obstack_memory_used@@Base+0x7c78>
  4592d8:	mov	x0, #0x3c8                 	// #968
  4592dc:	bl	404310 <malloc@plt>
  4592e0:	mov	x19, x0
  4592e4:	cbz	x0, 459250 <_obstack_memory_used@@Base+0x7e40>
  4592e8:	ldr	x0, [x22, #112]
  4592ec:	str	x0, [x19]
  4592f0:	mov	w3, #0x1                   	// #1
  4592f4:	mov	x5, #0x30                  	// #48
  4592f8:	mov	x1, #0x0                   	// #0
  4592fc:	mov	x0, #0x8                   	// #8
  459300:	str	x19, [x22, #112]
  459304:	b	459170 <_obstack_memory_used@@Base+0x7d60>
  459308:	mov	x0, #0x3c8                 	// #968
  45930c:	bl	404310 <malloc@plt>
  459310:	mov	x23, x0
  459314:	cbz	x0, 459348 <_obstack_memory_used@@Base+0x7f38>
  459318:	ldr	x0, [x22, #112]
  45931c:	str	x0, [x23]
  459320:	mov	x2, #0x30                  	// #48
  459324:	mov	w3, #0x1                   	// #1
  459328:	mov	x6, #0x8                   	// #8
  45932c:	mov	x1, #0x0                   	// #0
  459330:	str	x23, [x22, #112]
  459334:	b	4590fc <_obstack_memory_used@@Base+0x7cec>
  459338:	mov	x21, #0x0                   	// #0
  45933c:	b	4590d0 <_obstack_memory_used@@Base+0x7cc0>
  459340:	mov	x20, #0x0                   	// #0
  459344:	b	459064 <_obstack_memory_used@@Base+0x7c54>
  459348:	ldr	w3, [x22, #128]
  45934c:	mov	x23, #0x0                   	// #0
  459350:	b	459150 <_obstack_memory_used@@Base+0x7d40>
  459354:	nop
  459358:	stp	x29, x30, [sp, #-112]!
  45935c:	mov	x29, sp
  459360:	stp	x19, x20, [sp, #16]
  459364:	mov	x20, x3
  459368:	stp	x21, x22, [sp, #32]
  45936c:	mov	x22, x5
  459370:	stp	x23, x24, [sp, #48]
  459374:	mov	x24, x0
  459378:	and	w23, w4, #0xff
  45937c:	mov	x0, #0x20                  	// #32
  459380:	stp	x25, x26, [sp, #64]
  459384:	mov	x25, x1
  459388:	mov	x26, x2
  45938c:	mov	x1, #0x1                   	// #1
  459390:	str	xzr, [sp, #104]
  459394:	bl	4044c0 <calloc@plt>
  459398:	mov	x19, x0
  45939c:	cbz	x0, 459648 <_obstack_memory_used@@Base+0x8238>
  4593a0:	mov	x1, #0x1                   	// #1
  4593a4:	mov	x0, #0x50                  	// #80
  4593a8:	bl	4044c0 <calloc@plt>
  4593ac:	mov	x21, x0
  4593b0:	cbz	x0, 45963c <_obstack_memory_used@@Base+0x822c>
  4593b4:	ldrb	w7, [x0, #32]
  4593b8:	mov	x5, x26
  4593bc:	mov	x0, x25
  4593c0:	add	x4, sp, #0x68
  4593c4:	add	x3, x21, #0x48
  4593c8:	add	x2, x21, #0x18
  4593cc:	bfxil	w7, w23, #0, #1
  4593d0:	mov	x1, x19
  4593d4:	mov	x6, #0x0                   	// #0
  4593d8:	strb	w7, [x21, #32]
  4593dc:	bl	453b18 <_obstack_memory_used@@Base+0x2708>
  4593e0:	mov	w25, w0
  4593e4:	cbnz	w0, 459708 <_obstack_memory_used@@Base+0x82f8>
  4593e8:	ldrb	w1, [x20]
  4593ec:	mov	x0, #0x1                   	// #1
  4593f0:	cbz	w1, 459414 <_obstack_memory_used@@Base+0x8004>
  4593f4:	nop
  4593f8:	ubfx	x4, x1, #6, #2
  4593fc:	lsl	x3, x0, x1
  459400:	ldrb	w1, [x20, #1]!
  459404:	ldr	x2, [x19, x4, lsl #3]
  459408:	orr	x2, x2, x3
  45940c:	str	x2, [x19, x4, lsl #3]
  459410:	cbnz	w1, 4593f8 <_obstack_memory_used@@Base+0x7fe8>
  459414:	cbz	w23, 459428 <_obstack_memory_used@@Base+0x8018>
  459418:	ldp	q1, q0, [x19]
  45941c:	mvn	v1.16b, v1.16b
  459420:	mvn	v0.16b, v0.16b
  459424:	stp	q1, q0, [x19]
  459428:	ldr	w25, [x24, #180]
  45942c:	cmp	w25, #0x1
  459430:	b.le	459464 <_obstack_memory_used@@Base+0x8054>
  459434:	ldr	x0, [x24, #120]
  459438:	add	x1, x0, #0xf
  45943c:	sub	x1, x1, x19
  459440:	cmp	x1, #0x1e
  459444:	b.ls	4596c8 <_obstack_memory_used@@Base+0x82b8>  // b.plast
  459448:	ldp	q1, q0, [x19]
  45944c:	ldr	q2, [x0]
  459450:	and	v1.16b, v1.16b, v2.16b
  459454:	str	q1, [x19]
  459458:	ldr	q1, [x0, #16]
  45945c:	and	v0.16b, v0.16b, v1.16b
  459460:	str	q0, [x19, #16]
  459464:	ldr	w26, [x24, #128]
  459468:	cmp	w26, #0xf
  45946c:	b.eq	459744 <_obstack_memory_used@@Base+0x8334>  // b.none
  459470:	ldr	x23, [x24, #112]
  459474:	sbfiz	x1, x26, #6, #32
  459478:	movi	v0.4s, #0x0
  45947c:	add	x3, x1, #0x30
  459480:	add	x2, x23, x1
  459484:	add	w0, w26, #0x1
  459488:	str	w0, [x24, #128]
  45948c:	add	x6, x23, x3
  459490:	add	x0, x1, #0x20
  459494:	mov	w7, #0x3                   	// #3
  459498:	stur	q0, [x2, #8]
  45949c:	add	x0, x23, x0
  4594a0:	add	x1, x1, #0x8
  4594a4:	str	xzr, [x2, #24]
  4594a8:	adds	x20, x23, x1
  4594ac:	str	x19, [x23, x3]
  4594b0:	mov	x4, #0xffffffffffffffff    	// #-1
  4594b4:	strb	w7, [x6, #8]
  4594b8:	ldrb	w1, [x0, #26]
  4594bc:	and	w1, w1, #0xfffffff3
  4594c0:	strb	w1, [x0, #26]
  4594c4:	str	x4, [x2, #64]
  4594c8:	str	q0, [x2, #32]
  4594cc:	b.eq	459670 <_obstack_memory_used@@Base+0x8260>  // b.none
  4594d0:	cmp	w25, #0x1
  4594d4:	b.le	4595f4 <_obstack_memory_used@@Base+0x81e4>
  4594d8:	ldrb	w1, [x24, #176]
  4594dc:	ldr	w0, [x24, #128]
  4594e0:	str	x27, [sp, #80]
  4594e4:	orr	w1, w1, #0x2
  4594e8:	strb	w1, [x24, #176]
  4594ec:	cmp	w0, #0xf
  4594f0:	b.eq	4597a4 <_obstack_memory_used@@Base+0x8394>  // b.none
  4594f4:	sbfiz	x1, x0, #6, #32
  4594f8:	sxtw	x27, w0
  4594fc:	add	x4, x1, #0x30
  459500:	add	x2, x1, #0x8
  459504:	mov	x25, x23
  459508:	add	w1, w0, #0x1
  45950c:	lsl	x0, x27, #6
  459510:	str	w1, [x24, #128]
  459514:	movi	v0.4s, #0x0
  459518:	add	x3, x25, x0
  45951c:	add	x6, x25, x4
  459520:	add	x1, x0, #0x20
  459524:	add	x1, x25, x1
  459528:	mov	w7, #0x6                   	// #6
  45952c:	str	xzr, [x3, #24]
  459530:	add	x22, x25, x2
  459534:	stur	q0, [x3, #8]
  459538:	mov	x5, #0xffffffffffffffff    	// #-1
  45953c:	str	x21, [x25, x4]
  459540:	strb	w7, [x6, #8]
  459544:	ldrb	w2, [x1, #26]
  459548:	and	w2, w2, #0xfffffff3
  45954c:	strb	w2, [x1, #26]
  459550:	str	x5, [x3, #64]
  459554:	str	q0, [x3, #32]
  459558:	ldr	w0, [x24, #128]
  45955c:	cmp	w0, #0xf
  459560:	b.eq	4597d0 <_obstack_memory_used@@Base+0x83c0>  // b.none
  459564:	sbfiz	x19, x0, #6, #32
  459568:	sxtw	x1, w0
  45956c:	add	x5, x19, #0x30
  459570:	add	x4, x19, #0x8
  459574:	add	w0, w0, #0x1
  459578:	mov	x19, x25
  45957c:	lsl	x1, x1, #6
  459580:	add	x5, x19, x5
  459584:	add	x2, x19, x1
  459588:	add	x25, x25, x27, lsl #6
  45958c:	add	x3, x1, #0x20
  459590:	sbfiz	x26, x26, #6, #32
  459594:	ldr	x27, [sp, #80]
  459598:	str	w0, [x24, #128]
  45959c:	add	x3, x19, x3
  4595a0:	stp	xzr, x20, [x2, #8]
  4595a4:	mov	w0, #0xa                   	// #10
  4595a8:	str	x22, [x2, #24]
  4595ac:	add	x19, x19, x4
  4595b0:	strb	w0, [x5, #8]
  4595b4:	add	x23, x23, x26
  4595b8:	mov	x0, #0xffffffffffffffff    	// #-1
  4595bc:	ldrb	w4, [x3, #26]
  4595c0:	and	w4, w4, #0xfffffff3
  4595c4:	strb	w4, [x3, #26]
  4595c8:	stp	xzr, xzr, [x2, #32]
  4595cc:	str	x0, [x2, #64]
  4595d0:	str	x19, [x23, #8]
  4595d4:	str	x19, [x25, #8]
  4595d8:	mov	x0, x19
  4595dc:	ldp	x19, x20, [sp, #16]
  4595e0:	ldp	x21, x22, [sp, #32]
  4595e4:	ldp	x23, x24, [sp, #48]
  4595e8:	ldp	x25, x26, [sp, #64]
  4595ec:	ldp	x29, x30, [sp], #112
  4595f0:	ret
  4595f4:	ldr	x0, [x21]
  4595f8:	mov	x19, x20
  4595fc:	bl	4047b0 <free@plt>
  459600:	ldr	x0, [x21, #8]
  459604:	bl	4047b0 <free@plt>
  459608:	ldr	x0, [x21, #16]
  45960c:	bl	4047b0 <free@plt>
  459610:	ldr	x0, [x21, #24]
  459614:	bl	4047b0 <free@plt>
  459618:	mov	x0, x21
  45961c:	bl	4047b0 <free@plt>
  459620:	mov	x0, x19
  459624:	ldp	x19, x20, [sp, #16]
  459628:	ldp	x21, x22, [sp, #32]
  45962c:	ldp	x23, x24, [sp, #48]
  459630:	ldp	x25, x26, [sp, #64]
  459634:	ldp	x29, x30, [sp], #112
  459638:	ret
  45963c:	mov	x0, x19
  459640:	mov	x19, #0x0                   	// #0
  459644:	bl	4047b0 <free@plt>
  459648:	mov	w0, #0xc                   	// #12
  45964c:	str	w0, [x22]
  459650:	mov	x0, x19
  459654:	ldp	x19, x20, [sp, #16]
  459658:	ldp	x21, x22, [sp, #32]
  45965c:	ldp	x23, x24, [sp, #48]
  459660:	ldp	x25, x26, [sp, #64]
  459664:	ldp	x29, x30, [sp], #112
  459668:	ret
  45966c:	ldr	x27, [sp, #80]
  459670:	mov	x0, x19
  459674:	bl	4047b0 <free@plt>
  459678:	mov	x19, #0x0                   	// #0
  45967c:	ldr	x0, [x21]
  459680:	bl	4047b0 <free@plt>
  459684:	ldr	x0, [x21, #8]
  459688:	bl	4047b0 <free@plt>
  45968c:	ldr	x0, [x21, #16]
  459690:	bl	4047b0 <free@plt>
  459694:	ldr	x0, [x21, #24]
  459698:	bl	4047b0 <free@plt>
  45969c:	mov	x0, x21
  4596a0:	bl	4047b0 <free@plt>
  4596a4:	mov	w0, #0xc                   	// #12
  4596a8:	str	w0, [x22]
  4596ac:	mov	x0, x19
  4596b0:	ldp	x19, x20, [sp, #16]
  4596b4:	ldp	x21, x22, [sp, #32]
  4596b8:	ldp	x23, x24, [sp, #48]
  4596bc:	ldp	x25, x26, [sp, #64]
  4596c0:	ldp	x29, x30, [sp], #112
  4596c4:	ret
  4596c8:	ldp	x1, x3, [x19]
  4596cc:	ldr	x2, [x0]
  4596d0:	and	x1, x1, x2
  4596d4:	str	x1, [x19]
  4596d8:	ldr	x2, [x19, #16]
  4596dc:	ldr	x4, [x0, #8]
  4596e0:	ldr	x1, [x19, #24]
  4596e4:	and	x3, x3, x4
  4596e8:	str	x3, [x19, #8]
  4596ec:	ldr	x3, [x0, #16]
  4596f0:	and	x2, x2, x3
  4596f4:	str	x2, [x19, #16]
  4596f8:	ldr	x0, [x0, #24]
  4596fc:	and	x0, x1, x0
  459700:	str	x0, [x19, #24]
  459704:	b	459464 <_obstack_memory_used@@Base+0x8054>
  459708:	mov	x0, x19
  45970c:	bl	4047b0 <free@plt>
  459710:	ldr	x0, [x21]
  459714:	mov	x19, #0x0                   	// #0
  459718:	bl	4047b0 <free@plt>
  45971c:	ldr	x0, [x21, #8]
  459720:	bl	4047b0 <free@plt>
  459724:	ldr	x0, [x21, #16]
  459728:	bl	4047b0 <free@plt>
  45972c:	ldr	x0, [x21, #24]
  459730:	bl	4047b0 <free@plt>
  459734:	mov	x0, x21
  459738:	bl	4047b0 <free@plt>
  45973c:	str	w25, [x22]
  459740:	b	4595d8 <_obstack_memory_used@@Base+0x81c8>
  459744:	mov	x0, #0x3c8                 	// #968
  459748:	bl	404310 <malloc@plt>
  45974c:	mov	x23, x0
  459750:	cbz	x0, 459670 <_obstack_memory_used@@Base+0x8260>
  459754:	movi	v0.4s, #0x0
  459758:	add	x20, x0, #0x8
  45975c:	ldr	w0, [x0, #56]
  459760:	mov	w1, #0x1                   	// #1
  459764:	ldr	x3, [x24, #112]
  459768:	and	w0, w0, #0xffffff00
  45976c:	and	w0, w0, #0xfff3ffff
  459770:	mov	x2, #0xffffffffffffffff    	// #-1
  459774:	orr	w0, w0, #0x3
  459778:	mov	w26, #0x0                   	// #0
  45977c:	str	x3, [x23]
  459780:	stur	q0, [x23, #8]
  459784:	str	xzr, [x23, #24]
  459788:	str	q0, [x23, #32]
  45978c:	str	x19, [x23, #48]
  459790:	str	w0, [x23, #56]
  459794:	str	x2, [x23, #64]
  459798:	str	x23, [x24, #112]
  45979c:	str	w1, [x24, #128]
  4597a0:	b	4594d0 <_obstack_memory_used@@Base+0x80c0>
  4597a4:	mov	x0, #0x3c8                 	// #968
  4597a8:	bl	404310 <malloc@plt>
  4597ac:	mov	x25, x0
  4597b0:	cbz	x0, 45966c <_obstack_memory_used@@Base+0x825c>
  4597b4:	mov	x2, #0x8                   	// #8
  4597b8:	mov	w1, #0x1                   	// #1
  4597bc:	mov	x4, #0x30                  	// #48
  4597c0:	mov	x27, #0x0                   	// #0
  4597c4:	str	x23, [x0]
  4597c8:	str	x0, [x24, #112]
  4597cc:	b	45950c <_obstack_memory_used@@Base+0x80fc>
  4597d0:	mov	x0, #0x3c8                 	// #968
  4597d4:	bl	404310 <malloc@plt>
  4597d8:	mov	x19, x0
  4597dc:	cbz	x0, 4597fc <_obstack_memory_used@@Base+0x83ec>
  4597e0:	mov	w0, #0x1                   	// #1
  4597e4:	mov	x4, #0x8                   	// #8
  4597e8:	mov	x5, #0x30                  	// #48
  4597ec:	mov	x1, #0x0                   	// #0
  4597f0:	str	x25, [x19]
  4597f4:	str	x19, [x24, #112]
  4597f8:	b	45957c <_obstack_memory_used@@Base+0x816c>
  4597fc:	mov	x19, #0x0                   	// #0
  459800:	ldr	x27, [sp, #80]
  459804:	b	4595d8 <_obstack_memory_used@@Base+0x81c8>
  459808:	stp	x29, x30, [sp, #-64]!
  45980c:	mov	x29, sp
  459810:	stp	x19, x20, [sp, #16]
  459814:	mov	x20, x0
  459818:	mov	x19, x2
  45981c:	cbz	x1, 459844 <_obstack_memory_used@@Base+0x8434>
  459820:	stp	x21, x22, [sp, #32]
  459824:	cmp	x2, #0x0
  459828:	mov	x21, x1
  45982c:	ldr	x22, [x1, #8]
  459830:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  459834:	b.gt	45986c <_obstack_memory_used@@Base+0x845c>
  459838:	cmp	x22, #0x0
  45983c:	b.gt	459880 <_obstack_memory_used@@Base+0x8470>
  459840:	ldp	x21, x22, [sp, #32]
  459844:	cbz	x19, 459854 <_obstack_memory_used@@Base+0x8444>
  459848:	ldr	x2, [x19, #8]
  45984c:	cmp	x2, #0x0
  459850:	b.gt	4598b4 <_obstack_memory_used@@Base+0x84a4>
  459854:	mov	w0, #0x0                   	// #0
  459858:	stp	xzr, xzr, [x20]
  45985c:	str	xzr, [x20, #16]
  459860:	ldp	x19, x20, [sp, #16]
  459864:	ldp	x29, x30, [sp], #64
  459868:	ret
  45986c:	str	x23, [sp, #48]
  459870:	ldr	x23, [x2, #8]
  459874:	cmp	x23, #0x0
  459878:	b.gt	4598f4 <_obstack_memory_used@@Base+0x84e4>
  45987c:	ldr	x23, [sp, #48]
  459880:	dup	v0.2d, x22
  459884:	lsl	x22, x22, #3
  459888:	mov	x0, x22
  45988c:	str	q0, [x20]
  459890:	bl	404310 <malloc@plt>
  459894:	str	x0, [x20, #16]
  459898:	cbz	x0, 4599c0 <_obstack_memory_used@@Base+0x85b0>
  45989c:	ldr	x1, [x21, #16]
  4598a0:	mov	x2, x22
  4598a4:	bl	403f70 <memcpy@plt>
  4598a8:	mov	w0, #0x0                   	// #0
  4598ac:	ldp	x21, x22, [sp, #32]
  4598b0:	b	459860 <_obstack_memory_used@@Base+0x8450>
  4598b4:	dup	v0.2d, x2
  4598b8:	stp	x21, x22, [sp, #32]
  4598bc:	lsl	x21, x2, #3
  4598c0:	mov	x0, x21
  4598c4:	str	q0, [x20]
  4598c8:	bl	404310 <malloc@plt>
  4598cc:	str	x0, [x20, #16]
  4598d0:	cbz	x0, 4599c0 <_obstack_memory_used@@Base+0x85b0>
  4598d4:	ldr	x1, [x19, #16]
  4598d8:	mov	x2, x21
  4598dc:	bl	403f70 <memcpy@plt>
  4598e0:	mov	w0, #0x0                   	// #0
  4598e4:	ldp	x19, x20, [sp, #16]
  4598e8:	ldp	x21, x22, [sp, #32]
  4598ec:	ldp	x29, x30, [sp], #64
  4598f0:	ret
  4598f4:	add	x0, x22, x23
  4598f8:	str	x0, [x20]
  4598fc:	lsl	x0, x0, #3
  459900:	bl	404310 <malloc@plt>
  459904:	str	x0, [x20, #16]
  459908:	cbz	x0, 4599d0 <_obstack_memory_used@@Base+0x85c0>
  45990c:	sub	x7, x0, #0x8
  459910:	mov	x3, #0x0                   	// #0
  459914:	mov	x4, #0x0                   	// #0
  459918:	ldr	x6, [x19, #16]
  45991c:	mov	x19, #0x0                   	// #0
  459920:	ldr	x1, [x21, #16]
  459924:	b	459944 <_obstack_memory_used@@Base+0x8534>
  459928:	cinc	x3, x3, eq  // eq = none
  45992c:	add	x4, x4, #0x1
  459930:	str	x2, [x7, x19, lsl #3]
  459934:	cmp	x22, x4
  459938:	b.le	459964 <_obstack_memory_used@@Base+0x8554>
  45993c:	cmp	x23, x3
  459940:	b.le	4599a4 <_obstack_memory_used@@Base+0x8594>
  459944:	ldr	x2, [x1, x4, lsl #3]
  459948:	add	x19, x19, #0x1
  45994c:	ldr	x5, [x6, x3, lsl #3]
  459950:	cmp	x2, x5
  459954:	b.le	459928 <_obstack_memory_used@@Base+0x8518>
  459958:	add	x3, x3, #0x1
  45995c:	str	x5, [x7, x19, lsl #3]
  459960:	b	459934 <_obstack_memory_used@@Base+0x8524>
  459964:	cmp	x23, x3
  459968:	b.gt	459988 <_obstack_memory_used@@Base+0x8578>
  45996c:	ldp	x21, x22, [sp, #32]
  459970:	mov	w0, #0x0                   	// #0
  459974:	ldr	x23, [sp, #48]
  459978:	str	x19, [x20, #8]
  45997c:	ldp	x19, x20, [sp, #16]
  459980:	ldp	x29, x30, [sp], #64
  459984:	ret
  459988:	sub	x2, x23, x3
  45998c:	add	x0, x0, x19, lsl #3
  459990:	add	x1, x6, x3, lsl #3
  459994:	add	x19, x19, x2
  459998:	lsl	x2, x2, #3
  45999c:	bl	403f70 <memcpy@plt>
  4599a0:	b	45996c <_obstack_memory_used@@Base+0x855c>
  4599a4:	sub	x2, x22, x4
  4599a8:	add	x1, x1, x4, lsl #3
  4599ac:	add	x0, x0, x19, lsl #3
  4599b0:	add	x19, x19, x2
  4599b4:	lsl	x2, x2, #3
  4599b8:	bl	403f70 <memcpy@plt>
  4599bc:	b	45996c <_obstack_memory_used@@Base+0x855c>
  4599c0:	mov	w0, #0xc                   	// #12
  4599c4:	stp	xzr, xzr, [x20]
  4599c8:	ldp	x21, x22, [sp, #32]
  4599cc:	b	459860 <_obstack_memory_used@@Base+0x8450>
  4599d0:	mov	w0, #0xc                   	// #12
  4599d4:	ldp	x21, x22, [sp, #32]
  4599d8:	ldr	x23, [sp, #48]
  4599dc:	b	459860 <_obstack_memory_used@@Base+0x8450>
  4599e0:	stp	x29, x30, [sp, #-224]!
  4599e4:	mov	x29, sp
  4599e8:	stp	x19, x20, [sp, #16]
  4599ec:	ldr	x20, [x0, #72]
  4599f0:	stp	x25, x26, [sp, #64]
  4599f4:	stp	x27, x28, [sp, #80]
  4599f8:	mov	x28, x0
  4599fc:	lsl	x0, x20, #3
  459a00:	ldr	x26, [x1]
  459a04:	stp	x23, x24, [sp, #48]
  459a08:	stp	x2, x0, [sp, #144]
  459a0c:	cmp	x26, #0x0
  459a10:	str	x1, [sp, #176]
  459a14:	ldr	x23, [x28, #152]
  459a18:	b.le	459a98 <_obstack_memory_used@@Base+0x8688>
  459a1c:	stp	x21, x22, [sp, #32]
  459a20:	mov	x22, #0x0                   	// #0
  459a24:	nop
  459a28:	ldr	x0, [sp, #144]
  459a2c:	ldr	x1, [x0]
  459a30:	ldr	x0, [x23]
  459a34:	ldr	x19, [x1, x22, lsl #3]
  459a38:	lsl	x21, x19, #4
  459a3c:	add	x0, x0, x21
  459a40:	ldrb	w1, [x0, #8]
  459a44:	cmp	w1, #0x4
  459a48:	b.ne	459a88 <_obstack_memory_used@@Base+0x8678>  // b.any
  459a4c:	ldr	w24, [x0, #8]
  459a50:	tst	w24, #0x3ff00
  459a54:	b.eq	459ac0 <_obstack_memory_used@@Base+0x86b0>  // b.none
  459a58:	ldr	w2, [x28, #160]
  459a5c:	mov	x1, x20
  459a60:	mov	x0, x28
  459a64:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  459a68:	ubfx	x1, x24, #8, #10
  459a6c:	tbz	w24, #10, 459ab4 <_obstack_memory_used@@Base+0x86a4>
  459a70:	tbz	w0, #0, 459a88 <_obstack_memory_used@@Base+0x8678>
  459a74:	tbnz	w1, #3, 459a88 <_obstack_memory_used@@Base+0x8678>
  459a78:	tbz	w1, #5, 459a80 <_obstack_memory_used@@Base+0x8670>
  459a7c:	tbz	w0, #1, 459a88 <_obstack_memory_used@@Base+0x8678>
  459a80:	tbz	w1, #7, 459ac0 <_obstack_memory_used@@Base+0x86b0>
  459a84:	tbnz	w0, #3, 459ac0 <_obstack_memory_used@@Base+0x86b0>
  459a88:	add	x22, x22, #0x1
  459a8c:	cmp	x22, x26
  459a90:	b.lt	459a28 <_obstack_memory_used@@Base+0x8618>  // b.tstop
  459a94:	ldp	x21, x22, [sp, #32]
  459a98:	mov	w0, #0x0                   	// #0
  459a9c:	ldp	x19, x20, [sp, #16]
  459aa0:	ldp	x23, x24, [sp, #48]
  459aa4:	ldp	x25, x26, [sp, #64]
  459aa8:	ldp	x27, x28, [sp, #80]
  459aac:	ldp	x29, x30, [sp], #224
  459ab0:	ret
  459ab4:	tbz	w1, #3, 459a78 <_obstack_memory_used@@Base+0x8668>
  459ab8:	tbz	w0, #0, 459a78 <_obstack_memory_used@@Base+0x8668>
  459abc:	b	459a88 <_obstack_memory_used@@Base+0x8678>
  459ac0:	ldr	x27, [x28, #200]
  459ac4:	mov	x1, #0x0                   	// #0
  459ac8:	mov	x3, x27
  459acc:	b	459af0 <_obstack_memory_used@@Base+0x86e0>
  459ad0:	asr	x0, x0, #1
  459ad4:	ldr	x4, [x28, #216]
  459ad8:	add	x2, x0, x0, lsl #2
  459adc:	add	x2, x4, x2, lsl #3
  459ae0:	ldr	x2, [x2, #8]
  459ae4:	cmp	x20, x2
  459ae8:	b.gt	459c6c <_obstack_memory_used@@Base+0x885c>
  459aec:	mov	x3, x0
  459af0:	add	x0, x3, x1
  459af4:	cmp	x3, x1
  459af8:	b.gt	459ad0 <_obstack_memory_used@@Base+0x86c0>
  459afc:	cmp	x27, x1
  459b00:	b.le	459c74 <_obstack_memory_used@@Base+0x8864>
  459b04:	ldr	x0, [x28, #216]
  459b08:	add	x1, x1, x1, lsl #2
  459b0c:	add	x1, x0, x1, lsl #3
  459b10:	ldr	x0, [x1, #8]
  459b14:	cmp	x20, x0
  459b18:	b.eq	459b28 <_obstack_memory_used@@Base+0x8718>  // b.none
  459b1c:	b	459c74 <_obstack_memory_used@@Base+0x8864>
  459b20:	ldurb	w0, [x1, #-8]
  459b24:	cbz	w0, 459c74 <_obstack_memory_used@@Base+0x8864>
  459b28:	ldr	x0, [x1]
  459b2c:	add	x1, x1, #0x28
  459b30:	cmp	x19, x0
  459b34:	b.ne	459b20 <_obstack_memory_used@@Base+0x8710>  // b.any
  459b38:	mov	x3, x27
  459b3c:	str	wzr, [sp, #196]
  459b40:	cmp	x27, x3
  459b44:	b.ge	459c60 <_obstack_memory_used@@Base+0x8850>  // b.tcont
  459b48:	add	x0, x19, x19, lsl #1
  459b4c:	lsl	x1, x19, #3
  459b50:	lsl	x0, x0, #3
  459b54:	stp	x1, x0, [sp, #112]
  459b58:	add	x0, x27, x27, lsl #2
  459b5c:	ldr	x1, [x28, #216]
  459b60:	ldr	x2, [x1, x0, lsl #3]
  459b64:	add	x0, x1, x0, lsl #3
  459b68:	cmp	x19, x2
  459b6c:	b.ne	459c54 <_obstack_memory_used@@Base+0x8844>  // b.any
  459b70:	ldr	x1, [x0, #8]
  459b74:	cmp	x20, x1
  459b78:	b.ne	459c54 <_obstack_memory_used@@Base+0x8844>  // b.any
  459b7c:	ldp	x21, x0, [x0, #16]
  459b80:	ldr	x24, [x23, #48]
  459b84:	subs	x25, x0, x21
  459b88:	b.ne	459e98 <_obstack_memory_used@@Base+0x8a88>  // b.any
  459b8c:	ldr	x1, [x23, #40]
  459b90:	ldr	x2, [sp, #120]
  459b94:	add	x1, x1, x2
  459b98:	ldr	x1, [x1, #16]
  459b9c:	ldr	x1, [x1]
  459ba0:	add	x1, x1, x1, lsl #1
  459ba4:	add	x24, x24, x1, lsl #3
  459ba8:	ldr	w2, [x28, #160]
  459bac:	add	x0, x20, x0
  459bb0:	sub	x21, x0, x21
  459bb4:	mov	x0, x28
  459bb8:	sub	x1, x21, #0x1
  459bbc:	mov	x26, #0x0                   	// #0
  459bc0:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  459bc4:	mov	w3, w0
  459bc8:	ldr	x0, [sp, #152]
  459bcc:	ldr	x4, [x28, #184]
  459bd0:	ldr	x1, [x4, x0]
  459bd4:	ldr	x0, [x4, x21, lsl #3]
  459bd8:	cbz	x1, 459be0 <_obstack_memory_used@@Base+0x87d0>
  459bdc:	ldr	x26, [x1, #16]
  459be0:	cbz	x0, 459e30 <_obstack_memory_used@@Base+0x8a20>
  459be4:	ldr	x1, [x0, #80]
  459be8:	mov	x2, x24
  459bec:	add	x0, sp, #0xc8
  459bf0:	str	w3, [sp, #104]
  459bf4:	bl	459808 <_obstack_memory_used@@Base+0x83f8>
  459bf8:	str	w0, [sp, #196]
  459bfc:	ldr	w3, [sp, #104]
  459c00:	cbnz	w0, 459eb0 <_obstack_memory_used@@Base+0x8aa0>
  459c04:	ldr	x4, [x28, #184]
  459c08:	mov	x1, x23
  459c0c:	add	x2, sp, #0xc8
  459c10:	add	x0, sp, #0xc4
  459c14:	str	x4, [sp, #104]
  459c18:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  459c1c:	ldr	x4, [sp, #104]
  459c20:	str	x0, [x4, x21, lsl #3]
  459c24:	ldr	x0, [sp, #216]
  459c28:	bl	4047b0 <free@plt>
  459c2c:	ldr	x1, [x28, #184]
  459c30:	ldr	x0, [x1, x21, lsl #3]
  459c34:	cbz	x0, 459e58 <_obstack_memory_used@@Base+0x8a48>
  459c38:	cbnz	x25, 459c50 <_obstack_memory_used@@Base+0x8840>
  459c3c:	ldr	x0, [sp, #152]
  459c40:	ldr	x0, [x1, x0]
  459c44:	ldr	x0, [x0, #16]
  459c48:	cmp	x0, x26
  459c4c:	b.gt	459df0 <_obstack_memory_used@@Base+0x89e0>
  459c50:	ldr	x3, [x28, #200]
  459c54:	add	x27, x27, #0x1
  459c58:	cmp	x27, x3
  459c5c:	b.lt	459b58 <_obstack_memory_used@@Base+0x8748>  // b.tstop
  459c60:	ldr	x0, [sp, #176]
  459c64:	ldr	x26, [x0]
  459c68:	b	459a88 <_obstack_memory_used@@Base+0x8678>
  459c6c:	add	x1, x0, #0x1
  459c70:	b	459af0 <_obstack_memory_used@@Base+0x86e0>
  459c74:	ldr	x0, [x28, #152]
  459c78:	str	x0, [sp, #168]
  459c7c:	ldr	x2, [x28, #232]
  459c80:	ldr	x1, [x0]
  459c84:	cmp	x2, #0x0
  459c88:	ldr	x0, [x1, x21]
  459c8c:	str	x0, [sp, #160]
  459c90:	b.le	459b38 <_obstack_memory_used@@Base+0x8728>
  459c94:	ldr	x7, [x28, #8]
  459c98:	str	xzr, [sp, #136]
  459c9c:	ldr	x3, [sp, #136]
  459ca0:	ldr	x0, [x28, #248]
  459ca4:	ldr	x25, [x0, x3, lsl #3]
  459ca8:	ldr	x0, [x25, #8]
  459cac:	lsl	x0, x0, #4
  459cb0:	ldr	x0, [x1, x0]
  459cb4:	ldr	x1, [sp, #160]
  459cb8:	cmp	x1, x0
  459cbc:	b.eq	459ce0 <_obstack_memory_used@@Base+0x88d0>  // b.none
  459cc0:	ldr	x0, [sp, #136]
  459cc4:	add	x0, x0, #0x1
  459cc8:	str	x0, [sp, #136]
  459ccc:	cmp	x0, x2
  459cd0:	b.ge	45a0a8 <_obstack_memory_used@@Base+0x8c98>  // b.tcont
  459cd4:	ldr	x0, [sp, #168]
  459cd8:	ldr	x1, [x0]
  459cdc:	b	459c9c <_obstack_memory_used@@Base+0x888c>
  459ce0:	ldr	x0, [x25]
  459ce4:	str	x0, [sp, #104]
  459ce8:	ldr	x2, [x25, #32]
  459cec:	cmp	x2, #0x0
  459cf0:	b.le	45a0dc <_obstack_memory_used@@Base+0x8ccc>
  459cf4:	mov	x26, x20
  459cf8:	mov	x21, #0x0                   	// #0
  459cfc:	b	459d0c <_obstack_memory_used@@Base+0x88fc>
  459d00:	ldr	x2, [x25, #32]
  459d04:	cmp	x21, x2
  459d08:	b.ge	45a06c <_obstack_memory_used@@Base+0x8c5c>  // b.tcont
  459d0c:	ldr	x0, [x25, #40]
  459d10:	mov	x10, x26
  459d14:	ldr	x24, [sp, #104]
  459d18:	ldr	x4, [x0, x21, lsl #3]
  459d1c:	ldr	x0, [x4, #8]
  459d20:	str	x0, [sp, #104]
  459d24:	sub	x3, x0, x24
  459d28:	cmp	x3, #0x0
  459d2c:	add	x26, x26, x3
  459d30:	b.le	459d64 <_obstack_memory_used@@Base+0x8954>
  459d34:	ldr	x0, [x28, #48]
  459d38:	cmp	x0, x26
  459d3c:	b.lt	459da8 <_obstack_memory_used@@Base+0x8998>  // b.tstop
  459d40:	add	x1, x7, x24
  459d44:	add	x0, x7, x10
  459d48:	mov	x2, x3
  459d4c:	stp	x7, x10, [sp, #112]
  459d50:	str	x4, [sp, #128]
  459d54:	bl	4046d0 <memcmp@plt>
  459d58:	ldp	x7, x10, [sp, #112]
  459d5c:	ldr	x4, [sp, #128]
  459d60:	cbnz	w0, 459ed8 <_obstack_memory_used@@Base+0x8ac8>
  459d64:	mov	x2, x4
  459d68:	mov	x3, x19
  459d6c:	mov	x4, x20
  459d70:	mov	x1, x25
  459d74:	mov	x0, x28
  459d78:	bl	458450 <_obstack_memory_used@@Base+0x7040>
  459d7c:	add	x21, x21, #0x1
  459d80:	cmp	w0, #0x1
  459d84:	ldr	x7, [x28, #8]
  459d88:	b.ls	459d00 <_obstack_memory_used@@Base+0x88f0>  // b.plast
  459d8c:	ldp	x21, x22, [sp, #32]
  459d90:	ldp	x19, x20, [sp, #16]
  459d94:	ldp	x23, x24, [sp, #48]
  459d98:	ldp	x25, x26, [sp, #64]
  459d9c:	ldp	x27, x28, [sp, #80]
  459da0:	ldp	x29, x30, [sp], #224
  459da4:	ret
  459da8:	ldr	x13, [x28, #88]
  459dac:	stp	x4, x3, [sp, #112]
  459db0:	add	w1, w26, #0x1
  459db4:	mov	x0, x28
  459db8:	cmp	x13, x26
  459dbc:	b.lt	459edc <_obstack_memory_used@@Base+0x8acc>  // b.tstop
  459dc0:	ldr	x2, [x28, #192]
  459dc4:	str	x2, [sp, #128]
  459dc8:	str	x10, [sp, #184]
  459dcc:	bl	456290 <_obstack_memory_used@@Base+0x4e80>
  459dd0:	cbnz	w0, 459d8c <_obstack_memory_used@@Base+0x897c>
  459dd4:	ldr	x2, [sp, #128]
  459dd8:	ldp	x4, x3, [sp, #112]
  459ddc:	cmp	x2, x26
  459de0:	ldr	x10, [sp, #184]
  459de4:	b.lt	459e64 <_obstack_memory_used@@Base+0x8a54>  // b.tstop
  459de8:	ldr	x7, [x28, #8]
  459dec:	b	459d40 <_obstack_memory_used@@Base+0x8930>
  459df0:	add	x21, x24, #0x8
  459df4:	add	x24, x24, #0x10
  459df8:	mov	x2, x24
  459dfc:	mov	x1, x21
  459e00:	mov	x3, x20
  459e04:	mov	x0, x28
  459e08:	bl	452dc0 <_obstack_memory_used@@Base+0x19b0>
  459e0c:	str	w0, [sp, #196]
  459e10:	cbnz	w0, 459d8c <_obstack_memory_used@@Base+0x897c>
  459e14:	mov	x2, x24
  459e18:	mov	x1, x21
  459e1c:	mov	x0, x28
  459e20:	bl	4599e0 <_obstack_memory_used@@Base+0x85d0>
  459e24:	str	w0, [sp, #196]
  459e28:	cbz	w0, 459c50 <_obstack_memory_used@@Base+0x8840>
  459e2c:	b	459d8c <_obstack_memory_used@@Base+0x897c>
  459e30:	mov	x1, x23
  459e34:	mov	x2, x24
  459e38:	add	x0, sp, #0xc4
  459e3c:	str	x4, [sp, #104]
  459e40:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  459e44:	ldr	x4, [sp, #104]
  459e48:	ldr	x1, [x28, #184]
  459e4c:	str	x0, [x4, x21, lsl #3]
  459e50:	ldr	x0, [x1, x21, lsl #3]
  459e54:	cbnz	x0, 459c38 <_obstack_memory_used@@Base+0x8828>
  459e58:	ldr	w0, [sp, #196]
  459e5c:	cbz	w0, 459c38 <_obstack_memory_used@@Base+0x8828>
  459e60:	b	459d8c <_obstack_memory_used@@Base+0x897c>
  459e64:	ldr	x0, [x28, #184]
  459e68:	add	x11, x2, #0x1
  459e6c:	sub	x2, x26, x2
  459e70:	mov	w1, #0x0                   	// #0
  459e74:	str	x10, [sp, #128]
  459e78:	lsl	x2, x2, #3
  459e7c:	add	x0, x0, x11, lsl #3
  459e80:	bl	404410 <memset@plt>
  459e84:	str	x26, [x28, #192]
  459e88:	ldr	x7, [x28, #8]
  459e8c:	ldp	x4, x3, [sp, #112]
  459e90:	ldr	x10, [sp, #128]
  459e94:	b	459d40 <_obstack_memory_used@@Base+0x8930>
  459e98:	ldr	x1, [x23, #24]
  459e9c:	ldr	x2, [sp, #112]
  459ea0:	ldr	x1, [x1, x2]
  459ea4:	add	x1, x1, x1, lsl #1
  459ea8:	add	x24, x24, x1, lsl #3
  459eac:	b	459ba8 <_obstack_memory_used@@Base+0x8798>
  459eb0:	ldr	x0, [sp, #216]
  459eb4:	bl	4047b0 <free@plt>
  459eb8:	ldr	w0, [sp, #196]
  459ebc:	ldp	x19, x20, [sp, #16]
  459ec0:	ldp	x21, x22, [sp, #32]
  459ec4:	ldp	x23, x24, [sp, #48]
  459ec8:	ldp	x25, x26, [sp, #64]
  459ecc:	ldp	x27, x28, [sp, #80]
  459ed0:	ldp	x29, x30, [sp], #224
  459ed4:	ret
  459ed8:	ldr	x2, [x25, #32]
  459edc:	cmp	x21, x2
  459ee0:	b.ge	459eec <_obstack_memory_used@@Base+0x8adc>  // b.tcont
  459ee4:	ldr	x2, [x28, #232]
  459ee8:	b	459cc0 <_obstack_memory_used@@Base+0x88b0>
  459eec:	cbnz	x21, 45a064 <_obstack_memory_used@@Base+0x8c54>
  459ef0:	cmp	x20, x24
  459ef4:	b.lt	459ee4 <_obstack_memory_used@@Base+0x8ad4>  // b.tstop
  459ef8:	ldr	x0, [x25]
  459efc:	sub	x0, x24, x0
  459f00:	cmp	x0, #0x0
  459f04:	b.le	459f2c <_obstack_memory_used@@Base+0x8b1c>
  459f08:	ldr	x0, [x28, #48]
  459f0c:	cmp	x0, x10
  459f10:	b.le	45a07c <_obstack_memory_used@@Base+0x8c6c>
  459f14:	add	x0, x7, x24
  459f18:	ldrb	w1, [x7, x10]
  459f1c:	add	x10, x10, #0x1
  459f20:	ldurb	w0, [x0, #-1]
  459f24:	cmp	w1, w0
  459f28:	b.ne	459ee4 <_obstack_memory_used@@Base+0x8ad4>  // b.any
  459f2c:	ldr	x0, [x28, #184]
  459f30:	ldr	x1, [x0, x24, lsl #3]
  459f34:	cbz	x1, 45a02c <_obstack_memory_used@@Base+0x8c1c>
  459f38:	ldr	x4, [x1, #16]
  459f3c:	cmp	x4, #0x0
  459f40:	b.le	45a02c <_obstack_memory_used@@Base+0x8c1c>
  459f44:	ldr	x0, [sp, #168]
  459f48:	ldr	x6, [x1, #24]
  459f4c:	ldr	x3, [x0]
  459f50:	mov	x0, #0x0                   	// #0
  459f54:	b	459f60 <_obstack_memory_used@@Base+0x8b50>
  459f58:	cmp	x4, x0
  459f5c:	b.eq	45a02c <_obstack_memory_used@@Base+0x8c1c>  // b.none
  459f60:	ldr	x21, [x6, x0, lsl #3]
  459f64:	add	x0, x0, #0x1
  459f68:	lsl	x1, x21, #4
  459f6c:	add	x2, x3, x1
  459f70:	ldrb	w2, [x2, #8]
  459f74:	cmp	w2, #0x9
  459f78:	b.ne	459f58 <_obstack_memory_used@@Base+0x8b48>  // b.any
  459f7c:	ldr	x1, [x3, x1]
  459f80:	ldr	x2, [sp, #160]
  459f84:	cmp	x2, x1
  459f88:	b.ne	459f58 <_obstack_memory_used@@Base+0x8b48>  // b.any
  459f8c:	cmn	x21, #0x1
  459f90:	b.eq	45a02c <_obstack_memory_used@@Base+0x8c1c>  // b.none
  459f94:	ldr	x1, [x25, #16]
  459f98:	ldr	x26, [x25]
  459f9c:	cbz	x1, 45a034 <_obstack_memory_used@@Base+0x8c24>
  459fa0:	ldr	x2, [x25, #8]
  459fa4:	mov	x3, x26
  459fa8:	mov	x5, x24
  459fac:	mov	x4, x21
  459fb0:	mov	x0, x28
  459fb4:	mov	w6, #0x9                   	// #9
  459fb8:	stp	x7, x10, [sp, #104]
  459fbc:	bl	457e20 <_obstack_memory_used@@Base+0x6a10>
  459fc0:	cmp	w0, #0x1
  459fc4:	ldp	x7, x10, [sp, #104]
  459fc8:	b.eq	45a02c <_obstack_memory_used@@Base+0x8c1c>  // b.none
  459fcc:	cbnz	w0, 459d8c <_obstack_memory_used@@Base+0x897c>
  459fd0:	ldp	x0, x1, [x25, #24]
  459fd4:	cmp	x1, x0
  459fd8:	b.eq	45a0b0 <_obstack_memory_used@@Base+0x8ca0>  // b.none
  459fdc:	mov	x1, #0x28                  	// #40
  459fe0:	mov	x0, #0x1                   	// #1
  459fe4:	str	x10, [sp, #104]
  459fe8:	bl	4044c0 <calloc@plt>
  459fec:	mov	x2, x0
  459ff0:	cbz	x0, 45a058 <_obstack_memory_used@@Base+0x8c48>
  459ff4:	ldp	x0, x1, [x25, #32]
  459ff8:	mov	x4, x20
  459ffc:	mov	x3, x19
  45a000:	str	x2, [x1, x0, lsl #3]
  45a004:	add	x6, x0, #0x1
  45a008:	stp	x21, x24, [x2]
  45a00c:	mov	x1, x25
  45a010:	mov	x0, x28
  45a014:	str	x6, [x25, #32]
  45a018:	bl	458450 <_obstack_memory_used@@Base+0x7040>
  45a01c:	cmp	w0, #0x1
  45a020:	ldr	x7, [x28, #8]
  45a024:	ldr	x10, [sp, #104]
  45a028:	b.hi	459d8c <_obstack_memory_used@@Base+0x897c>  // b.pmore
  45a02c:	add	x24, x24, #0x1
  45a030:	b	459ef0 <_obstack_memory_used@@Base+0x8ae0>
  45a034:	sub	x1, x24, x26
  45a038:	mov	x0, #0x18                  	// #24
  45a03c:	add	x1, x1, #0x1
  45a040:	stp	x7, x10, [sp, #104]
  45a044:	bl	4044c0 <calloc@plt>
  45a048:	str	x0, [x25, #16]
  45a04c:	mov	x1, x0
  45a050:	ldp	x7, x10, [sp, #104]
  45a054:	cbnz	x0, 459fa0 <_obstack_memory_used@@Base+0x8b90>
  45a058:	mov	w0, #0xc                   	// #12
  45a05c:	ldp	x21, x22, [sp, #32]
  45a060:	b	459d90 <_obstack_memory_used@@Base+0x8980>
  45a064:	mov	x26, x10
  45a068:	str	x24, [sp, #104]
  45a06c:	ldr	x0, [sp, #104]
  45a070:	mov	x10, x26
  45a074:	add	x24, x0, #0x1
  45a078:	b	459ef0 <_obstack_memory_used@@Base+0x8ae0>
  45a07c:	ldr	x0, [x28, #88]
  45a080:	cmp	x0, x10
  45a084:	b.le	459ee4 <_obstack_memory_used@@Base+0x8ad4>
  45a088:	add	w1, w10, #0x1
  45a08c:	mov	x0, x28
  45a090:	str	x10, [sp, #104]
  45a094:	bl	456290 <_obstack_memory_used@@Base+0x4e80>
  45a098:	cbnz	w0, 459d8c <_obstack_memory_used@@Base+0x897c>
  45a09c:	ldr	x7, [x28, #8]
  45a0a0:	ldr	x10, [sp, #104]
  45a0a4:	b	459f14 <_obstack_memory_used@@Base+0x8b04>
  45a0a8:	ldr	x3, [x28, #200]
  45a0ac:	b	459b3c <_obstack_memory_used@@Base+0x872c>
  45a0b0:	ldr	x0, [x25, #40]
  45a0b4:	lsl	x1, x1, #1
  45a0b8:	add	x26, x1, #0x1
  45a0bc:	str	x10, [sp, #104]
  45a0c0:	lsl	x1, x26, #3
  45a0c4:	bl	404530 <realloc@plt>
  45a0c8:	cbz	x0, 45a058 <_obstack_memory_used@@Base+0x8c48>
  45a0cc:	str	x26, [x25, #24]
  45a0d0:	str	x0, [x25, #40]
  45a0d4:	ldr	x10, [sp, #104]
  45a0d8:	b	459fdc <_obstack_memory_used@@Base+0x8bcc>
  45a0dc:	mov	x24, x0
  45a0e0:	mov	x10, x20
  45a0e4:	b	459ef0 <_obstack_memory_used@@Base+0x8ae0>
  45a0e8:	stp	x29, x30, [sp, #-112]!
  45a0ec:	mov	x29, sp
  45a0f0:	stp	x21, x22, [sp, #32]
  45a0f4:	mov	x21, x0
  45a0f8:	stp	x23, x24, [sp, #48]
  45a0fc:	ldp	x24, x0, [x1, #184]
  45a100:	stp	x19, x20, [sp, #16]
  45a104:	mov	x19, x1
  45a108:	ldr	x20, [x1, #72]
  45a10c:	ldr	x23, [x1, #152]
  45a110:	cmp	x0, x20
  45a114:	b.ge	45a144 <_obstack_memory_used@@Base+0x8d34>  // b.tcont
  45a118:	mov	x22, x2
  45a11c:	str	x2, [x24, x20, lsl #3]
  45a120:	str	x20, [x1, #192]
  45a124:	ldr	x0, [x23, #152]
  45a128:	cbnz	x0, 45a208 <_obstack_memory_used@@Base+0x8df8>
  45a12c:	mov	x0, x22
  45a130:	ldp	x19, x20, [sp, #16]
  45a134:	ldp	x21, x22, [sp, #32]
  45a138:	ldp	x23, x24, [sp, #48]
  45a13c:	ldp	x29, x30, [sp], #112
  45a140:	ret
  45a144:	ldr	x0, [x24, x20, lsl #3]
  45a148:	cbz	x0, 45a1fc <_obstack_memory_used@@Base+0x8dec>
  45a14c:	ldr	x0, [x0, #80]
  45a150:	cbz	x2, 45a1bc <_obstack_memory_used@@Base+0x8dac>
  45a154:	ldr	x24, [x2, #80]
  45a158:	mov	x2, x0
  45a15c:	add	x0, sp, #0x58
  45a160:	mov	x1, x24
  45a164:	bl	459808 <_obstack_memory_used@@Base+0x83f8>
  45a168:	str	w0, [x21]
  45a16c:	cbnz	w0, 45a25c <_obstack_memory_used@@Base+0x8e4c>
  45a170:	ldr	w2, [x19, #160]
  45a174:	mov	x0, x19
  45a178:	ldr	x1, [x19, #72]
  45a17c:	str	x25, [sp, #64]
  45a180:	sub	x1, x1, #0x1
  45a184:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45a188:	ldr	x25, [x19, #184]
  45a18c:	mov	w3, w0
  45a190:	add	x2, sp, #0x58
  45a194:	mov	x1, x23
  45a198:	mov	x0, x21
  45a19c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  45a1a0:	str	x0, [x25, x20, lsl #3]
  45a1a4:	mov	x22, x0
  45a1a8:	cbz	x24, 45a264 <_obstack_memory_used@@Base+0x8e54>
  45a1ac:	ldr	x0, [sp, #104]
  45a1b0:	bl	4047b0 <free@plt>
  45a1b4:	ldr	x25, [sp, #64]
  45a1b8:	b	45a124 <_obstack_memory_used@@Base+0x8d14>
  45a1bc:	ldp	x2, x3, [x0]
  45a1c0:	stp	x2, x3, [sp, #88]
  45a1c4:	ldr	w2, [x19, #160]
  45a1c8:	ldr	x3, [x0, #16]
  45a1cc:	sub	x1, x20, #0x1
  45a1d0:	mov	x0, x19
  45a1d4:	str	x3, [sp, #104]
  45a1d8:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45a1dc:	mov	w3, w0
  45a1e0:	add	x2, sp, #0x58
  45a1e4:	mov	x1, x23
  45a1e8:	mov	x0, x21
  45a1ec:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  45a1f0:	mov	x22, x0
  45a1f4:	str	x0, [x24, x20, lsl #3]
  45a1f8:	b	45a124 <_obstack_memory_used@@Base+0x8d14>
  45a1fc:	mov	x22, x2
  45a200:	str	x2, [x24, x20, lsl #3]
  45a204:	b	45a124 <_obstack_memory_used@@Base+0x8d14>
  45a208:	cbz	x22, 45a25c <_obstack_memory_used@@Base+0x8e4c>
  45a20c:	add	x23, x22, #0x10
  45a210:	add	x24, x22, #0x18
  45a214:	mov	x1, x23
  45a218:	mov	x2, x24
  45a21c:	mov	x3, x20
  45a220:	mov	x0, x19
  45a224:	bl	452dc0 <_obstack_memory_used@@Base+0x19b0>
  45a228:	str	w0, [x21]
  45a22c:	cbnz	w0, 45a25c <_obstack_memory_used@@Base+0x8e4c>
  45a230:	ldrb	w0, [x22, #104]
  45a234:	tbz	w0, #6, 45a12c <_obstack_memory_used@@Base+0x8d1c>
  45a238:	mov	x2, x24
  45a23c:	mov	x1, x23
  45a240:	mov	x0, x19
  45a244:	bl	4599e0 <_obstack_memory_used@@Base+0x85d0>
  45a248:	str	w0, [x21]
  45a24c:	cbnz	w0, 45a25c <_obstack_memory_used@@Base+0x8e4c>
  45a250:	ldr	x0, [x19, #184]
  45a254:	ldr	x22, [x0, x20, lsl #3]
  45a258:	b	45a12c <_obstack_memory_used@@Base+0x8d1c>
  45a25c:	mov	x22, #0x0                   	// #0
  45a260:	b	45a12c <_obstack_memory_used@@Base+0x8d1c>
  45a264:	ldr	x25, [sp, #64]
  45a268:	b	45a124 <_obstack_memory_used@@Base+0x8d14>
  45a26c:	nop
  45a270:	stp	x29, x30, [sp, #-256]!
  45a274:	mov	x29, sp
  45a278:	stp	x19, x20, [sp, #16]
  45a27c:	mov	x20, x0
  45a280:	mov	x19, x2
  45a284:	ldr	x0, [x0, #184]
  45a288:	stp	x21, x22, [sp, #32]
  45a28c:	lsl	x2, x2, #3
  45a290:	stp	x23, x24, [sp, #48]
  45a294:	mov	x21, x3
  45a298:	ldr	x22, [x0, x19, lsl #3]
  45a29c:	stp	x25, x26, [sp, #64]
  45a2a0:	mov	x26, x1
  45a2a4:	str	x2, [sp, #104]
  45a2a8:	add	x1, x0, x2
  45a2ac:	str	wzr, [sp, #168]
  45a2b0:	ldr	x0, [x3, #8]
  45a2b4:	ldr	x23, [x20, #152]
  45a2b8:	cbz	x22, 45a5b4 <_obstack_memory_used@@Base+0x91a4>
  45a2bc:	cbnz	x0, 45a2f4 <_obstack_memory_used@@Base+0x8ee4>
  45a2c0:	ldr	x0, [x26]
  45a2c4:	mov	w4, #0x0                   	// #0
  45a2c8:	str	xzr, [x0, x19, lsl #3]
  45a2cc:	ldr	x0, [x1]
  45a2d0:	ldrb	w0, [x0, #104]
  45a2d4:	tbnz	w0, #6, 45a414 <_obstack_memory_used@@Base+0x9004>
  45a2d8:	mov	w0, w4
  45a2dc:	ldp	x19, x20, [sp, #16]
  45a2e0:	ldp	x21, x22, [sp, #32]
  45a2e4:	ldp	x23, x24, [sp, #48]
  45a2e8:	ldp	x25, x26, [sp, #64]
  45a2ec:	ldp	x29, x30, [sp], #256
  45a2f0:	ret
  45a2f4:	mov	x2, x3
  45a2f8:	mov	x1, x23
  45a2fc:	add	x0, sp, #0xc8
  45a300:	str	wzr, [sp, #200]
  45a304:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  45a308:	ldr	w4, [sp, #200]
  45a30c:	cbnz	w4, 45a2d8 <_obstack_memory_used@@Base+0x8ec8>
  45a310:	mov	x25, x0
  45a314:	stp	x27, x28, [sp, #80]
  45a318:	ldr	x24, [x25, #56]!
  45a31c:	cbnz	x24, 45a3a8 <_obstack_memory_used@@Base+0x8f98>
  45a320:	ldr	x1, [x21, #8]
  45a324:	str	x1, [x0, #56]
  45a328:	str	xzr, [x25, #8]
  45a32c:	lsl	x0, x1, #3
  45a330:	bl	404310 <malloc@plt>
  45a334:	str	x0, [x25, #16]
  45a338:	cbz	x0, 45a384 <_obstack_memory_used@@Base+0x8f74>
  45a33c:	ldr	x0, [x21, #8]
  45a340:	str	wzr, [sp, #200]
  45a344:	cmp	x0, #0x0
  45a348:	b.gt	45a35c <_obstack_memory_used@@Base+0x8f4c>
  45a34c:	b	45a3a8 <_obstack_memory_used@@Base+0x8f98>
  45a350:	ldr	x0, [x21, #8]
  45a354:	cmp	x24, x0
  45a358:	b.ge	45a3a8 <_obstack_memory_used@@Base+0x8f98>  // b.tcont
  45a35c:	ldr	x2, [x21, #16]
  45a360:	mov	x0, x25
  45a364:	ldr	x1, [x23, #56]
  45a368:	ldr	x3, [x2, x24, lsl #3]
  45a36c:	add	x24, x24, #0x1
  45a370:	add	x3, x3, x3, lsl #1
  45a374:	add	x1, x1, x3, lsl #3
  45a378:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  45a37c:	str	w0, [sp, #200]
  45a380:	cbz	w0, 45a350 <_obstack_memory_used@@Base+0x8f40>
  45a384:	mov	w4, #0xc                   	// #12
  45a388:	mov	w0, w4
  45a38c:	ldp	x19, x20, [sp, #16]
  45a390:	ldp	x21, x22, [sp, #32]
  45a394:	ldp	x23, x24, [sp, #48]
  45a398:	ldp	x25, x26, [sp, #64]
  45a39c:	ldp	x27, x28, [sp, #80]
  45a3a0:	ldp	x29, x30, [sp], #256
  45a3a4:	ret
  45a3a8:	add	x28, x22, #0x8
  45a3ac:	mov	x2, x25
  45a3b0:	mov	x1, x28
  45a3b4:	mov	x0, x21
  45a3b8:	bl	452c10 <_obstack_memory_used@@Base+0x1800>
  45a3bc:	str	w0, [sp, #168]
  45a3c0:	mov	w4, w0
  45a3c4:	cbnz	w0, 45a878 <_obstack_memory_used@@Base+0x9468>
  45a3c8:	ldr	x10, [x26, #40]
  45a3cc:	cmp	x10, #0x0
  45a3d0:	cbnz	x10, 45a898 <_obstack_memory_used@@Base+0x9488>
  45a3d4:	ldr	x24, [x26]
  45a3d8:	mov	x2, x21
  45a3dc:	mov	x1, x23
  45a3e0:	add	x0, sp, #0xa8
  45a3e4:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  45a3e8:	ldr	w4, [sp, #168]
  45a3ec:	str	x0, [x24, x19, lsl #3]
  45a3f0:	cbnz	w4, 45a878 <_obstack_memory_used@@Base+0x9468>
  45a3f4:	ldr	x0, [sp, #104]
  45a3f8:	mov	w4, #0x0                   	// #0
  45a3fc:	ldr	x1, [x20, #184]
  45a400:	ldp	x27, x28, [sp, #80]
  45a404:	add	x1, x1, x0
  45a408:	ldr	x0, [x1]
  45a40c:	ldrb	w0, [x0, #104]
  45a410:	tbz	w0, #6, 45a2d8 <_obstack_memory_used@@Base+0x8ec8>
  45a414:	ldr	x4, [x20, #200]
  45a418:	mov	x24, #0x0                   	// #0
  45a41c:	stp	x27, x28, [sp, #80]
  45a420:	mov	x2, x4
  45a424:	b	45a448 <_obstack_memory_used@@Base+0x9038>
  45a428:	asr	x0, x0, #1
  45a42c:	ldr	x3, [x20, #216]
  45a430:	add	x1, x0, x0, lsl #2
  45a434:	add	x1, x3, x1, lsl #3
  45a438:	ldr	x1, [x1, #8]
  45a43c:	cmp	x19, x1
  45a440:	b.gt	45a7e4 <_obstack_memory_used@@Base+0x93d4>
  45a444:	mov	x2, x0
  45a448:	add	x0, x2, x24
  45a44c:	cmp	x2, x24
  45a450:	b.gt	45a428 <_obstack_memory_used@@Base+0x9018>
  45a454:	cmp	x4, x24
  45a458:	b.le	45a61c <_obstack_memory_used@@Base+0x920c>
  45a45c:	add	x1, x24, x24, lsl #2
  45a460:	ldr	x0, [x20, #216]
  45a464:	lsl	x1, x1, #3
  45a468:	str	x1, [sp, #152]
  45a46c:	add	x0, x0, x1
  45a470:	ldr	x0, [x0, #8]
  45a474:	cmp	x19, x0
  45a478:	b.ne	45a61c <_obstack_memory_used@@Base+0x920c>  // b.any
  45a47c:	ldr	x2, [x22, #16]
  45a480:	add	x0, x22, #0x8
  45a484:	str	x0, [sp, #120]
  45a488:	str	xzr, [sp, #200]
  45a48c:	cmp	x2, #0x0
  45a490:	ldr	x28, [x20, #152]
  45a494:	b.le	45a61c <_obstack_memory_used@@Base+0x920c>
  45a498:	mov	x23, #0x0                   	// #0
  45a49c:	b	45a4b4 <_obstack_memory_used@@Base+0x90a4>
  45a4a0:	cmp	w0, #0x4
  45a4a4:	b.eq	45a4ec <_obstack_memory_used@@Base+0x90dc>  // b.none
  45a4a8:	add	x23, x23, #0x1
  45a4ac:	cmp	x23, x2
  45a4b0:	b.ge	45a614 <_obstack_memory_used@@Base+0x9204>  // b.tcont
  45a4b4:	ldr	x0, [sp, #120]
  45a4b8:	ldr	x1, [x0, #16]
  45a4bc:	ldr	x0, [x28]
  45a4c0:	ldr	x27, [x1, x23, lsl #3]
  45a4c4:	ldr	x1, [x26, #16]
  45a4c8:	add	x0, x0, x27, lsl #4
  45a4cc:	cmp	x27, x1
  45a4d0:	ldrb	w0, [x0, #8]
  45a4d4:	b.ne	45a4a0 <_obstack_memory_used@@Base+0x9090>  // b.any
  45a4d8:	ldr	x1, [x26, #24]
  45a4dc:	cmp	x19, x1
  45a4e0:	b.eq	45a4a8 <_obstack_memory_used@@Base+0x9098>  // b.none
  45a4e4:	cmp	w0, #0x4
  45a4e8:	b.ne	45a4a8 <_obstack_memory_used@@Base+0x9098>  // b.any
  45a4ec:	add	x0, x27, x27, lsl #1
  45a4f0:	lsl	x1, x27, #3
  45a4f4:	ldr	x25, [x20, #216]
  45a4f8:	lsl	x0, x0, #3
  45a4fc:	stp	x1, x0, [sp, #128]
  45a500:	mov	x21, x24
  45a504:	ldr	x1, [sp, #152]
  45a508:	add	x25, x25, x1
  45a50c:	nop
  45a510:	ldr	x0, [x25]
  45a514:	cmp	x27, x0
  45a518:	b.ne	45a598 <_obstack_memory_used@@Base+0x9188>  // b.any
  45a51c:	ldp	x1, x0, [x25, #16]
  45a520:	sub	x0, x0, x1
  45a524:	add	x6, x19, x0
  45a528:	cbz	x0, 45a628 <_obstack_memory_used@@Base+0x9218>
  45a52c:	ldr	x0, [x28, #24]
  45a530:	ldr	x1, [sp, #128]
  45a534:	ldr	x5, [x0, x1]
  45a538:	ldr	x0, [x26, #24]
  45a53c:	cmp	x6, x0
  45a540:	b.gt	45a598 <_obstack_memory_used@@Base+0x9188>
  45a544:	ldr	x0, [x26]
  45a548:	ldr	x1, [x0, x6, lsl #3]
  45a54c:	cbz	x1, 45a598 <_obstack_memory_used@@Base+0x9188>
  45a550:	ldr	x0, [x1, #16]
  45a554:	cmp	x0, #0x0
  45a558:	b.le	45a598 <_obstack_memory_used@@Base+0x9188>
  45a55c:	sub	x0, x0, #0x1
  45a560:	mov	x2, #0x0                   	// #0
  45a564:	ldr	x4, [x1, #24]
  45a568:	b	45a580 <_obstack_memory_used@@Base+0x9170>
  45a56c:	lsr	x1, x1, #1
  45a570:	ldr	x9, [x4, x1, lsl #3]
  45a574:	cmp	x5, x9
  45a578:	b.gt	45a640 <_obstack_memory_used@@Base+0x9230>
  45a57c:	mov	x0, x1
  45a580:	add	x1, x0, x2
  45a584:	cmp	x0, x2
  45a588:	b.hi	45a56c <_obstack_memory_used@@Base+0x915c>  // b.pmore
  45a58c:	ldr	x0, [x4, x2, lsl #3]
  45a590:	cmp	x5, x0
  45a594:	b.eq	45a648 <_obstack_memory_used@@Base+0x9238>  // b.none
  45a598:	ldrb	w0, [x25, #32]
  45a59c:	add	x21, x21, #0x1
  45a5a0:	add	x25, x25, #0x28
  45a5a4:	cbnz	w0, 45a510 <_obstack_memory_used@@Base+0x9100>
  45a5a8:	ldr	x0, [sp, #120]
  45a5ac:	ldr	x2, [x0, #8]
  45a5b0:	b	45a4a8 <_obstack_memory_used@@Base+0x9098>
  45a5b4:	ldr	x20, [x26]
  45a5b8:	cbnz	x0, 45a5e0 <_obstack_memory_used@@Base+0x91d0>
  45a5bc:	str	xzr, [x20, x19, lsl #3]
  45a5c0:	mov	w4, #0x0                   	// #0
  45a5c4:	mov	w0, w4
  45a5c8:	ldp	x19, x20, [sp, #16]
  45a5cc:	ldp	x21, x22, [sp, #32]
  45a5d0:	ldp	x23, x24, [sp, #48]
  45a5d4:	ldp	x25, x26, [sp, #64]
  45a5d8:	ldp	x29, x30, [sp], #256
  45a5dc:	ret
  45a5e0:	mov	x1, x23
  45a5e4:	mov	x2, x3
  45a5e8:	add	x0, sp, #0xa8
  45a5ec:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  45a5f0:	ldr	w4, [sp, #168]
  45a5f4:	str	x0, [x20, x19, lsl #3]
  45a5f8:	mov	w0, w4
  45a5fc:	ldp	x19, x20, [sp, #16]
  45a600:	ldp	x21, x22, [sp, #32]
  45a604:	ldp	x23, x24, [sp, #48]
  45a608:	ldp	x25, x26, [sp, #64]
  45a60c:	ldp	x29, x30, [sp], #256
  45a610:	ret
  45a614:	ldr	x0, [sp, #200]
  45a618:	cbnz	x0, 45ab3c <_obstack_memory_used@@Base+0x972c>
  45a61c:	mov	w4, #0x0                   	// #0
  45a620:	ldp	x27, x28, [sp, #80]
  45a624:	b	45a2d8 <_obstack_memory_used@@Base+0x8ec8>
  45a628:	ldr	x0, [x28, #40]
  45a62c:	ldr	x1, [sp, #136]
  45a630:	add	x0, x0, x1
  45a634:	ldr	x0, [x0, #16]
  45a638:	ldr	x5, [x0]
  45a63c:	b	45a538 <_obstack_memory_used@@Base+0x9128>
  45a640:	add	x2, x1, #0x1
  45a644:	b	45a580 <_obstack_memory_used@@Base+0x9170>
  45a648:	mov	x4, x19
  45a64c:	mov	x3, x27
  45a650:	add	x2, x26, #0x30
  45a654:	add	x1, x26, #0x28
  45a658:	mov	x0, x20
  45a65c:	bl	455000 <_obstack_memory_used@@Base+0x3bf0>
  45a660:	tst	w0, #0xff
  45a664:	b.ne	45a598 <_obstack_memory_used@@Base+0x9188>  // b.any
  45a668:	ldr	x0, [sp, #200]
  45a66c:	cbz	x0, 45a7ec <_obstack_memory_used@@Base+0x93dc>
  45a670:	mov	x1, x21
  45a674:	add	x0, sp, #0xe8
  45a678:	stp	x27, x19, [sp, #216]
  45a67c:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  45a680:	tst	w0, #0xff
  45a684:	b.eq	45a83c <_obstack_memory_used@@Base+0x942c>  // b.none
  45a688:	ldr	x3, [sp, #104]
  45a68c:	add	x1, sp, #0xc8
  45a690:	ldr	x2, [sp, #200]
  45a694:	mov	x0, x20
  45a698:	ldr	x2, [x2, x3]
  45a69c:	str	x2, [sp, #144]
  45a6a0:	bl	45ab48 <_obstack_memory_used@@Base+0x9738>
  45a6a4:	mov	w4, w0
  45a6a8:	cbnz	w0, 45a840 <_obstack_memory_used@@Base+0x9430>
  45a6ac:	ldr	x25, [x26, #8]
  45a6b0:	ldr	x0, [sp, #200]
  45a6b4:	str	x0, [sp, #112]
  45a6b8:	cbz	x25, 45a73c <_obstack_memory_used@@Base+0x932c>
  45a6bc:	tbnz	x19, #63, 45a73c <_obstack_memory_used@@Base+0x932c>
  45a6c0:	mov	x22, #0x0                   	// #0
  45a6c4:	b	45a71c <_obstack_memory_used@@Base+0x930c>
  45a6c8:	add	x2, x4, #0x8
  45a6cc:	add	x1, x1, #0x8
  45a6d0:	add	x0, sp, #0xb0
  45a6d4:	cbz	x4, 45a710 <_obstack_memory_used@@Base+0x9300>
  45a6d8:	bl	459808 <_obstack_memory_used@@Base+0x83f8>
  45a6dc:	mov	w4, w0
  45a6e0:	str	w4, [sp, #172]
  45a6e4:	add	x2, sp, #0xb0
  45a6e8:	mov	x1, x28
  45a6ec:	add	x0, sp, #0xac
  45a6f0:	cbnz	w4, 45a840 <_obstack_memory_used@@Base+0x9430>
  45a6f4:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  45a6f8:	mov	x1, x0
  45a6fc:	ldr	x0, [sp, #192]
  45a700:	str	x1, [x25, x22, lsl #3]
  45a704:	bl	4047b0 <free@plt>
  45a708:	ldr	w4, [sp, #172]
  45a70c:	cbnz	w4, 45a840 <_obstack_memory_used@@Base+0x9430>
  45a710:	add	x22, x22, #0x1
  45a714:	cmp	x19, x22
  45a718:	b.lt	45a734 <_obstack_memory_used@@Base+0x9324>  // b.tstop
  45a71c:	ldr	x1, [x25, x22, lsl #3]
  45a720:	ldr	x0, [sp, #112]
  45a724:	ldr	x4, [x0, x22, lsl #3]
  45a728:	cbnz	x1, 45a6c8 <_obstack_memory_used@@Base+0x92b8>
  45a72c:	str	x4, [x25, x22, lsl #3]
  45a730:	b	45a710 <_obstack_memory_used@@Base+0x9300>
  45a734:	ldr	x0, [sp, #200]
  45a738:	str	x0, [sp, #112]
  45a73c:	ldp	x1, x0, [sp, #104]
  45a740:	ldr	x2, [sp, #144]
  45a744:	ldr	x6, [sp, #240]
  45a748:	str	x2, [x0, x1]
  45a74c:	cmp	x6, #0x0
  45a750:	b.le	45a794 <_obstack_memory_used@@Base+0x9384>
  45a754:	sub	x9, x6, #0x1
  45a758:	mov	x0, #0x0                   	// #0
  45a75c:	mov	x2, x9
  45a760:	ldr	x4, [sp, #248]
  45a764:	b	45a77c <_obstack_memory_used@@Base+0x936c>
  45a768:	lsr	x1, x1, #1
  45a76c:	ldr	x5, [x4, x1, lsl #3]
  45a770:	cmp	x21, x5
  45a774:	b.gt	45a7dc <_obstack_memory_used@@Base+0x93cc>
  45a778:	mov	x2, x1
  45a77c:	add	x1, x2, x0
  45a780:	cmp	x2, x0
  45a784:	b.hi	45a768 <_obstack_memory_used@@Base+0x9358>  // b.pmore
  45a788:	ldr	x1, [x4, x0, lsl #3]
  45a78c:	cmp	x21, x1
  45a790:	b.eq	45a7a4 <_obstack_memory_used@@Base+0x9394>  // b.none
  45a794:	ldr	x0, [x20, #216]
  45a798:	add	x25, x21, x21, lsl #2
  45a79c:	add	x25, x0, x25, lsl #3
  45a7a0:	b	45a598 <_obstack_memory_used@@Base+0x9188>
  45a7a4:	cmp	x0, #0x0
  45a7a8:	ccmp	x6, x0, #0x4, ge  // ge = tcont
  45a7ac:	b.le	45a794 <_obstack_memory_used@@Base+0x9384>
  45a7b0:	str	x9, [sp, #240]
  45a7b4:	cmp	x0, x9
  45a7b8:	b.ge	45a794 <_obstack_memory_used@@Base+0x9384>  // b.tcont
  45a7bc:	add	x2, x4, #0x8
  45a7c0:	ldr	x1, [x2, x0, lsl #3]
  45a7c4:	str	x1, [x4, x0, lsl #3]
  45a7c8:	add	x0, x0, #0x1
  45a7cc:	ldr	x1, [sp, #240]
  45a7d0:	cmp	x0, x1
  45a7d4:	b.lt	45a7c0 <_obstack_memory_used@@Base+0x93b0>  // b.tstop
  45a7d8:	b	45a794 <_obstack_memory_used@@Base+0x9384>
  45a7dc:	add	x0, x1, #0x1
  45a7e0:	b	45a77c <_obstack_memory_used@@Base+0x936c>
  45a7e4:	add	x24, x0, #0x1
  45a7e8:	b	45a448 <_obstack_memory_used@@Base+0x9038>
  45a7ec:	ldp	x0, x1, [x26]
  45a7f0:	stp	x0, x1, [sp, #200]
  45a7f4:	ldp	x0, x1, [x26, #40]
  45a7f8:	str	x1, [sp, #248]
  45a7fc:	ldp	x4, x5, [x26, #16]
  45a800:	stp	x4, x5, [sp, #216]
  45a804:	ldp	x4, x5, [x26, #32]
  45a808:	stp	x4, x5, [sp, #232]
  45a80c:	cmp	x0, #0x0
  45a810:	b.le	45aae8 <_obstack_memory_used@@Base+0x96d8>
  45a814:	lsl	x22, x0, #3
  45a818:	str	x0, [sp, #232]
  45a81c:	mov	x0, x22
  45a820:	bl	404310 <malloc@plt>
  45a824:	str	x0, [sp, #248]
  45a828:	cbz	x0, 45a83c <_obstack_memory_used@@Base+0x942c>
  45a82c:	ldr	x1, [x26, #48]
  45a830:	mov	x2, x22
  45a834:	bl	403f70 <memcpy@plt>
  45a838:	b	45a670 <_obstack_memory_used@@Base+0x9260>
  45a83c:	mov	w4, #0xc                   	// #12
  45a840:	ldr	x0, [sp, #200]
  45a844:	cbz	x0, 45a878 <_obstack_memory_used@@Base+0x9468>
  45a848:	ldr	x0, [sp, #248]
  45a84c:	str	w4, [sp, #104]
  45a850:	bl	4047b0 <free@plt>
  45a854:	ldr	w4, [sp, #104]
  45a858:	ldp	x19, x20, [sp, #16]
  45a85c:	mov	w0, w4
  45a860:	ldp	x21, x22, [sp, #32]
  45a864:	ldp	x23, x24, [sp, #48]
  45a868:	ldp	x25, x26, [sp, #64]
  45a86c:	ldp	x27, x28, [sp, #80]
  45a870:	ldp	x29, x30, [sp], #256
  45a874:	ret
  45a878:	mov	w0, w4
  45a87c:	ldp	x19, x20, [sp, #16]
  45a880:	ldp	x21, x22, [sp, #32]
  45a884:	ldp	x23, x24, [sp, #48]
  45a888:	ldp	x25, x26, [sp, #64]
  45a88c:	ldp	x27, x28, [sp, #80]
  45a890:	ldp	x29, x30, [sp], #256
  45a894:	ret
  45a898:	ldr	x27, [x20, #216]
  45a89c:	b.le	45a980 <_obstack_memory_used@@Base+0x9570>
  45a8a0:	mov	x25, #0x0                   	// #0
  45a8a4:	nop
  45a8a8:	ldr	x0, [x26, #48]
  45a8ac:	ldr	x0, [x0, x25, lsl #3]
  45a8b0:	add	x0, x0, x0, lsl #2
  45a8b4:	add	x1, x27, x0, lsl #3
  45a8b8:	ldr	x2, [x1, #16]
  45a8bc:	cmp	x19, x2
  45a8c0:	b.le	45a974 <_obstack_memory_used@@Base+0x9564>
  45a8c4:	ldr	x2, [x1, #8]
  45a8c8:	cmp	x19, x2
  45a8cc:	b.gt	45a974 <_obstack_memory_used@@Base+0x9564>
  45a8d0:	ldr	x2, [x27, x0, lsl #3]
  45a8d4:	ldr	x0, [x23]
  45a8d8:	lsl	x2, x2, #4
  45a8dc:	ldr	x4, [x21, #8]
  45a8e0:	ldr	x1, [x1, #24]
  45a8e4:	mov	x6, x4
  45a8e8:	ldr	x5, [x0, x2]
  45a8ec:	cmp	x19, x1
  45a8f0:	b.eq	45a988 <_obstack_memory_used@@Base+0x9578>  // b.none
  45a8f4:	cmp	x4, #0x0
  45a8f8:	mov	x24, #0x0                   	// #0
  45a8fc:	b.gt	45a910 <_obstack_memory_used@@Base+0x9500>
  45a900:	b	45a974 <_obstack_memory_used@@Base+0x9564>
  45a904:	cmp	x24, x4
  45a908:	b.ge	45a970 <_obstack_memory_used@@Base+0x9560>  // b.tcont
  45a90c:	ldr	x0, [x23]
  45a910:	ldr	x1, [x21, #16]
  45a914:	ldr	x1, [x1, x24, lsl #3]
  45a918:	add	x24, x24, #0x1
  45a91c:	lsl	x3, x1, #4
  45a920:	add	x2, x0, x3
  45a924:	ldrb	w2, [x2, #8]
  45a928:	sub	w2, w2, #0x8
  45a92c:	cmp	w2, #0x1
  45a930:	b.hi	45a904 <_obstack_memory_used@@Base+0x94f4>  // b.pmore
  45a934:	ldr	x0, [x0, x3]
  45a938:	cmp	x5, x0
  45a93c:	b.ne	45a904 <_obstack_memory_used@@Base+0x94f4>  // b.any
  45a940:	mov	x3, x28
  45a944:	mov	x2, x21
  45a948:	mov	x0, x23
  45a94c:	str	x5, [sp, #112]
  45a950:	bl	4573e0 <_obstack_memory_used@@Base+0x5fd0>
  45a954:	mov	w4, w0
  45a958:	cbnz	w0, 45a878 <_obstack_memory_used@@Base+0x9468>
  45a95c:	ldr	x4, [x21, #8]
  45a960:	ldr	x5, [sp, #112]
  45a964:	cmp	x24, x4
  45a968:	b.lt	45a90c <_obstack_memory_used@@Base+0x94fc>  // b.tstop
  45a96c:	nop
  45a970:	ldr	x10, [x26, #40]
  45a974:	add	x25, x25, #0x1
  45a978:	cmp	x25, x10
  45a97c:	b.lt	45a8a8 <_obstack_memory_used@@Base+0x9498>  // b.tstop
  45a980:	str	wzr, [sp, #168]
  45a984:	b	45a3d4 <_obstack_memory_used@@Base+0x8fc4>
  45a988:	cmp	x4, #0x0
  45a98c:	b.le	45a974 <_obstack_memory_used@@Base+0x9564>
  45a990:	ldr	x11, [x21, #16]
  45a994:	mov	x24, #0xffffffffffffffff    	// #-1
  45a998:	mov	x1, x24
  45a99c:	mov	x2, x11
  45a9a0:	add	x12, x11, x4, lsl #3
  45a9a4:	b	45a9c8 <_obstack_memory_used@@Base+0x95b8>
  45a9a8:	cmp	w3, #0x9
  45a9ac:	b.ne	45a9bc <_obstack_memory_used@@Base+0x95ac>  // b.any
  45a9b0:	ldr	x3, [x9]
  45a9b4:	cmp	x5, x3
  45a9b8:	csel	x24, x24, x4, ne  // ne = any
  45a9bc:	add	x2, x2, #0x8
  45a9c0:	cmp	x12, x2
  45a9c4:	b.eq	45a9f8 <_obstack_memory_used@@Base+0x95e8>  // b.none
  45a9c8:	ldr	x4, [x2]
  45a9cc:	lsl	x8, x4, #4
  45a9d0:	add	x9, x0, x8
  45a9d4:	ldrb	w3, [x9, #8]
  45a9d8:	cmp	w3, #0x8
  45a9dc:	b.ne	45a9a8 <_obstack_memory_used@@Base+0x9598>  // b.any
  45a9e0:	ldr	x3, [x0, x8]
  45a9e4:	add	x2, x2, #0x8
  45a9e8:	cmp	x5, x3
  45a9ec:	csel	x1, x1, x4, ne  // ne = any
  45a9f0:	cmp	x12, x2
  45a9f4:	b.ne	45a9c8 <_obstack_memory_used@@Base+0x95b8>  // b.any
  45a9f8:	tbz	x1, #63, 45aaf4 <_obstack_memory_used@@Base+0x96e4>
  45a9fc:	tbnz	x24, #63, 45a974 <_obstack_memory_used@@Base+0x9564>
  45aa00:	mov	x5, #0x0                   	// #0
  45aa04:	nop
  45aa08:	ldr	x1, [x11, x5, lsl #3]
  45aa0c:	ldr	x0, [x23, #56]
  45aa10:	add	x4, x1, x1, lsl #1
  45aa14:	lsl	x4, x4, #3
  45aa18:	add	x0, x0, x4
  45aa1c:	ldr	x2, [x0, #8]
  45aa20:	cmp	x2, #0x0
  45aa24:	b.le	45aa64 <_obstack_memory_used@@Base+0x9654>
  45aa28:	sub	x2, x2, #0x1
  45aa2c:	mov	x3, #0x0                   	// #0
  45aa30:	ldr	x8, [x0, #16]
  45aa34:	b	45aa4c <_obstack_memory_used@@Base+0x963c>
  45aa38:	lsr	x0, x0, #1
  45aa3c:	ldr	x9, [x8, x0, lsl #3]
  45aa40:	cmp	x24, x9
  45aa44:	b.gt	45ab24 <_obstack_memory_used@@Base+0x9714>
  45aa48:	mov	x2, x0
  45aa4c:	add	x0, x2, x3
  45aa50:	cmp	x2, x3
  45aa54:	b.hi	45aa38 <_obstack_memory_used@@Base+0x9628>  // b.pmore
  45aa58:	ldr	x0, [x8, x3, lsl #3]
  45aa5c:	cmp	x24, x0
  45aa60:	b.eq	45ab2c <_obstack_memory_used@@Base+0x971c>  // b.none
  45aa64:	ldr	x0, [x23, #48]
  45aa68:	add	x4, x0, x4
  45aa6c:	ldr	x2, [x4, #8]
  45aa70:	cmp	x2, #0x0
  45aa74:	b.le	45aab4 <_obstack_memory_used@@Base+0x96a4>
  45aa78:	sub	x2, x2, #0x1
  45aa7c:	mov	x3, #0x0                   	// #0
  45aa80:	ldr	x8, [x4, #16]
  45aa84:	b	45aa9c <_obstack_memory_used@@Base+0x968c>
  45aa88:	lsr	x0, x0, #1
  45aa8c:	ldr	x4, [x8, x0, lsl #3]
  45aa90:	cmp	x24, x4
  45aa94:	b.gt	45ab34 <_obstack_memory_used@@Base+0x9724>
  45aa98:	mov	x2, x0
  45aa9c:	add	x0, x2, x3
  45aaa0:	cmp	x2, x3
  45aaa4:	b.hi	45aa88 <_obstack_memory_used@@Base+0x9678>  // b.pmore
  45aaa8:	ldr	x0, [x8, x3, lsl #3]
  45aaac:	cmp	x24, x0
  45aab0:	b.eq	45ab2c <_obstack_memory_used@@Base+0x971c>  // b.none
  45aab4:	mov	x3, x28
  45aab8:	mov	x2, x21
  45aabc:	mov	x0, x23
  45aac0:	str	x5, [sp, #112]
  45aac4:	bl	4573e0 <_obstack_memory_used@@Base+0x5fd0>
  45aac8:	mov	w4, w0
  45aacc:	cbnz	w0, 45a878 <_obstack_memory_used@@Base+0x9468>
  45aad0:	ldr	x6, [x21, #8]
  45aad4:	ldr	x5, [sp, #112]
  45aad8:	cmp	x6, x5
  45aadc:	b.le	45a970 <_obstack_memory_used@@Base+0x9560>
  45aae0:	ldr	x11, [x21, #16]
  45aae4:	b	45aa08 <_obstack_memory_used@@Base+0x95f8>
  45aae8:	stp	xzr, xzr, [sp, #232]
  45aaec:	str	xzr, [sp, #248]
  45aaf0:	b	45a670 <_obstack_memory_used@@Base+0x9260>
  45aaf4:	mov	x3, x28
  45aaf8:	mov	x2, x21
  45aafc:	mov	x0, x23
  45ab00:	bl	4573e0 <_obstack_memory_used@@Base+0x5fd0>
  45ab04:	mov	w4, w0
  45ab08:	cbnz	w0, 45a878 <_obstack_memory_used@@Base+0x9468>
  45ab0c:	tbnz	x24, #63, 45a970 <_obstack_memory_used@@Base+0x9560>
  45ab10:	ldr	x6, [x21, #8]
  45ab14:	cmp	x6, #0x0
  45ab18:	b.le	45a970 <_obstack_memory_used@@Base+0x9560>
  45ab1c:	ldr	x11, [x21, #16]
  45ab20:	b	45aa00 <_obstack_memory_used@@Base+0x95f0>
  45ab24:	add	x3, x0, #0x1
  45ab28:	b	45aa4c <_obstack_memory_used@@Base+0x963c>
  45ab2c:	add	x5, x5, #0x1
  45ab30:	b	45aad8 <_obstack_memory_used@@Base+0x96c8>
  45ab34:	add	x3, x0, #0x1
  45ab38:	b	45aa9c <_obstack_memory_used@@Base+0x968c>
  45ab3c:	mov	w4, #0x0                   	// #0
  45ab40:	b	45a848 <_obstack_memory_used@@Base+0x9438>
  45ab44:	nop
  45ab48:	stp	x29, x30, [sp, #-160]!
  45ab4c:	adrp	x2, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  45ab50:	mov	x29, sp
  45ab54:	ldr	q0, [x2, #1536]
  45ab58:	stp	x19, x20, [sp, #16]
  45ab5c:	mov	x20, x0
  45ab60:	mov	x0, #0x8                   	// #8
  45ab64:	stp	x21, x22, [sp, #32]
  45ab68:	mov	x21, x1
  45ab6c:	str	q0, [sp, #128]
  45ab70:	ldp	x22, x19, [x1, #16]
  45ab74:	bl	404310 <malloc@plt>
  45ab78:	str	x0, [sp, #144]
  45ab7c:	cbz	x0, 45af14 <_obstack_memory_used@@Base+0x9b04>
  45ab80:	mov	x4, x0
  45ab84:	mov	x2, x19
  45ab88:	add	x3, sp, #0x80
  45ab8c:	mov	x1, x21
  45ab90:	mov	x0, x20
  45ab94:	str	x22, [x4]
  45ab98:	bl	45a270 <_obstack_memory_used@@Base+0x8e60>
  45ab9c:	cbnz	w0, 45af2c <_obstack_memory_used@@Base+0x9b1c>
  45aba0:	add	x0, x21, #0x30
  45aba4:	stp	x23, x24, [sp, #48]
  45aba8:	mov	w24, #0x0                   	// #0
  45abac:	stp	x25, x26, [sp, #64]
  45abb0:	stp	x27, x28, [sp, #80]
  45abb4:	str	x0, [sp, #112]
  45abb8:	add	x0, x21, #0x28
  45abbc:	str	x0, [sp, #120]
  45abc0:	cmp	x19, #0x0
  45abc4:	b.le	45aec8 <_obstack_memory_used@@Base+0x9ab8>
  45abc8:	ldr	x0, [x21]
  45abcc:	lsl	x25, x19, #3
  45abd0:	ldr	w1, [x20, #224]
  45abd4:	ldr	x2, [x0, x19, lsl #3]
  45abd8:	cmp	x2, #0x0
  45abdc:	csinc	w24, wzr, w24, ne  // ne = any
  45abe0:	cmp	w1, w24
  45abe4:	b.lt	45aedc <_obstack_memory_used@@Base+0x9acc>  // b.tstop
  45abe8:	ldr	x0, [x20, #184]
  45abec:	sub	x19, x19, #0x1
  45abf0:	add	x0, x0, x25
  45abf4:	ldur	x22, [x0, #-8]
  45abf8:	str	xzr, [sp, #136]
  45abfc:	cbz	x22, 45ad20 <_obstack_memory_used@@Base+0x9910>
  45ac00:	ldr	x0, [x22, #40]
  45ac04:	add	x22, x22, #0x20
  45ac08:	ldr	x26, [x20, #152]
  45ac0c:	cmp	x0, #0x0
  45ac10:	b.le	45ad20 <_obstack_memory_used@@Base+0x9910>
  45ac14:	mov	x23, #0x0                   	// #0
  45ac18:	ldr	x1, [x22, #16]
  45ac1c:	ldr	x0, [x26]
  45ac20:	ldr	x28, [x1, x23, lsl #3]
  45ac24:	lsl	x27, x28, #4
  45ac28:	add	x0, x0, x27
  45ac2c:	ldrb	w1, [x0, #10]
  45ac30:	tbnz	w1, #4, 45ad94 <_obstack_memory_used@@Base+0x9984>
  45ac34:	ldr	x1, [x20, #8]
  45ac38:	ldrb	w2, [x0, #8]
  45ac3c:	ldrb	w1, [x1, x19]
  45ac40:	cmp	w2, #0x5
  45ac44:	b.eq	45ad78 <_obstack_memory_used@@Base+0x9968>  // b.none
  45ac48:	b.hi	45ad6c <_obstack_memory_used@@Base+0x995c>  // b.pmore
  45ac4c:	cmp	w2, #0x1
  45ac50:	b.eq	45ae8c <_obstack_memory_used@@Base+0x9a7c>  // b.none
  45ac54:	cmp	w2, #0x3
  45ac58:	b.ne	45ad10 <_obstack_memory_used@@Base+0x9900>  // b.any
  45ac5c:	ldr	x2, [x0]
  45ac60:	ubfx	x3, x1, #6, #2
  45ac64:	ldr	x2, [x2, x3, lsl #3]
  45ac68:	lsr	x1, x2, x1
  45ac6c:	tbz	w1, #0, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45ac70:	ldr	w27, [x0, #8]
  45ac74:	tst	w27, #0x3ff00
  45ac78:	b.eq	45acb0 <_obstack_memory_used@@Base+0x98a0>  // b.none
  45ac7c:	ldr	w2, [x20, #160]
  45ac80:	mov	x1, x19
  45ac84:	mov	x0, x20
  45ac88:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45ac8c:	ubfx	x1, x27, #8, #10
  45ac90:	tbz	w27, #10, 45aea4 <_obstack_memory_used@@Base+0x9a94>
  45ac94:	tbz	w0, #0, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45ac98:	tbnz	w1, #3, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45ac9c:	tbz	w1, #5, 45aca4 <_obstack_memory_used@@Base+0x9894>
  45aca0:	tbz	w0, #1, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45aca4:	tbz	w1, #7, 45acb0 <_obstack_memory_used@@Base+0x98a0>
  45aca8:	tbz	w0, #3, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45acac:	nop
  45acb0:	ldr	x0, [x21]
  45acb4:	ldr	x1, [x0, x25]
  45acb8:	cbz	x1, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45acbc:	ldr	x0, [x1, #16]
  45acc0:	cmp	x0, #0x0
  45acc4:	b.le	45ad10 <_obstack_memory_used@@Base+0x9900>
  45acc8:	ldr	x3, [x26, #24]
  45accc:	sub	x0, x0, #0x1
  45acd0:	mov	x2, #0x0                   	// #0
  45acd4:	ldr	x4, [x1, #24]
  45acd8:	ldr	x3, [x3, x28, lsl #3]
  45acdc:	b	45acf4 <_obstack_memory_used@@Base+0x98e4>
  45ace0:	lsr	x1, x1, #1
  45ace4:	ldr	x5, [x4, x1, lsl #3]
  45ace8:	cmp	x3, x5
  45acec:	b.gt	45ad64 <_obstack_memory_used@@Base+0x9954>
  45acf0:	mov	x0, x1
  45acf4:	add	x1, x0, x2
  45acf8:	cmp	x0, x2
  45acfc:	b.hi	45ace0 <_obstack_memory_used@@Base+0x98d0>  // b.pmore
  45ad00:	ldr	x0, [x4, x2, lsl #3]
  45ad04:	cmp	x3, x0
  45ad08:	b.eq	45ae3c <_obstack_memory_used@@Base+0x9a2c>  // b.none
  45ad0c:	nop
  45ad10:	ldr	x0, [x22, #8]
  45ad14:	add	x23, x23, #0x1
  45ad18:	cmp	x23, x0
  45ad1c:	b.lt	45ac18 <_obstack_memory_used@@Base+0x9808>  // b.tstop
  45ad20:	add	x3, sp, #0x80
  45ad24:	mov	x2, x19
  45ad28:	mov	x1, x21
  45ad2c:	mov	x0, x20
  45ad30:	bl	45a270 <_obstack_memory_used@@Base+0x8e60>
  45ad34:	mov	w22, w0
  45ad38:	cbz	w0, 45abc0 <_obstack_memory_used@@Base+0x97b0>
  45ad3c:	ldp	x23, x24, [sp, #48]
  45ad40:	ldp	x25, x26, [sp, #64]
  45ad44:	ldp	x27, x28, [sp, #80]
  45ad48:	ldr	x0, [sp, #144]
  45ad4c:	bl	4047b0 <free@plt>
  45ad50:	mov	w0, w22
  45ad54:	ldp	x19, x20, [sp, #16]
  45ad58:	ldp	x21, x22, [sp, #32]
  45ad5c:	ldp	x29, x30, [sp], #160
  45ad60:	ret
  45ad64:	add	x2, x1, #0x1
  45ad68:	b	45acf4 <_obstack_memory_used@@Base+0x98e4>
  45ad6c:	cmp	w2, #0x7
  45ad70:	b.ne	45ad10 <_obstack_memory_used@@Base+0x9900>  // b.any
  45ad74:	tbnz	w1, #7, 45ad10 <_obstack_memory_used@@Base+0x9900>
  45ad78:	cmp	w1, #0xa
  45ad7c:	b.eq	45aeb0 <_obstack_memory_used@@Base+0x9aa0>  // b.none
  45ad80:	cbnz	w1, 45ac70 <_obstack_memory_used@@Base+0x9860>
  45ad84:	ldr	x1, [x20, #152]
  45ad88:	ldr	x1, [x1, #216]
  45ad8c:	tbz	w1, #7, 45ac70 <_obstack_memory_used@@Base+0x9860>
  45ad90:	b	45ad10 <_obstack_memory_used@@Base+0x9900>
  45ad94:	ldr	x6, [x20, #152]
  45ad98:	mov	x4, x19
  45ad9c:	ldr	x8, [x21, #24]
  45ada0:	mov	x1, x6
  45ada4:	mov	x3, x20
  45ada8:	mov	x2, x28
  45adac:	stp	x8, x6, [sp, #96]
  45adb0:	ldr	x0, [x1], #216
  45adb4:	bl	455288 <_obstack_memory_used@@Base+0x3e78>
  45adb8:	cmp	w0, #0x0
  45adbc:	b.le	45ae9c <_obstack_memory_used@@Base+0x9a8c>
  45adc0:	ldr	x8, [sp, #96]
  45adc4:	add	x1, x19, w0, sxtw
  45adc8:	cmp	x8, x1
  45adcc:	b.lt	45ae40 <_obstack_memory_used@@Base+0x9a30>  // b.tstop
  45add0:	ldr	x2, [x21]
  45add4:	ldr	x6, [sp, #104]
  45add8:	ldr	x1, [x2, x1, lsl #3]
  45addc:	cbz	x1, 45ae30 <_obstack_memory_used@@Base+0x9a20>
  45ade0:	ldr	x2, [x1, #16]
  45ade4:	cmp	x2, #0x0
  45ade8:	b.le	45ae30 <_obstack_memory_used@@Base+0x9a20>
  45adec:	ldr	x4, [x6, #24]
  45adf0:	sub	x2, x2, #0x1
  45adf4:	mov	x3, #0x0                   	// #0
  45adf8:	ldr	x8, [x1, #24]
  45adfc:	ldr	x6, [x4, x28, lsl #3]
  45ae00:	b	45ae18 <_obstack_memory_used@@Base+0x9a08>
  45ae04:	lsr	x1, x1, #1
  45ae08:	ldr	x4, [x8, x1, lsl #3]
  45ae0c:	cmp	x6, x4
  45ae10:	b.gt	45aec0 <_obstack_memory_used@@Base+0x9ab0>
  45ae14:	mov	x2, x1
  45ae18:	add	x1, x2, x3
  45ae1c:	cmp	x2, x3
  45ae20:	b.hi	45ae04 <_obstack_memory_used@@Base+0x99f4>  // b.pmore
  45ae24:	ldr	x1, [x8, x3, lsl #3]
  45ae28:	cmp	x6, x1
  45ae2c:	b.eq	45ae40 <_obstack_memory_used@@Base+0x9a30>  // b.none
  45ae30:	ldr	x0, [x26]
  45ae34:	add	x0, x0, x27
  45ae38:	b	45ac34 <_obstack_memory_used@@Base+0x9824>
  45ae3c:	mov	w0, #0x1                   	// #1
  45ae40:	ldr	x1, [x21, #40]
  45ae44:	cbz	x1, 45ae70 <_obstack_memory_used@@Base+0x9a60>
  45ae48:	ldr	x3, [x26, #24]
  45ae4c:	add	x4, x19, w0, sxtw
  45ae50:	ldp	x2, x1, [sp, #112]
  45ae54:	mov	x6, x19
  45ae58:	ldr	x3, [x3, x28, lsl #3]
  45ae5c:	mov	x5, x28
  45ae60:	mov	x0, x20
  45ae64:	bl	455000 <_obstack_memory_used@@Base+0x3bf0>
  45ae68:	tst	w0, #0xff
  45ae6c:	b.ne	45ad10 <_obstack_memory_used@@Base+0x9900>  // b.any
  45ae70:	mov	x1, x28
  45ae74:	add	x0, sp, #0x80
  45ae78:	bl	451a38 <_obstack_memory_used@@Base+0x628>
  45ae7c:	tst	w0, #0xff
  45ae80:	b.ne	45ad10 <_obstack_memory_used@@Base+0x9900>  // b.any
  45ae84:	mov	w22, #0xc                   	// #12
  45ae88:	b	45ad3c <_obstack_memory_used@@Base+0x992c>
  45ae8c:	ldrb	w2, [x0]
  45ae90:	cmp	w2, w1
  45ae94:	b.eq	45ac70 <_obstack_memory_used@@Base+0x9860>  // b.none
  45ae98:	b	45ad10 <_obstack_memory_used@@Base+0x9900>
  45ae9c:	b.eq	45ae30 <_obstack_memory_used@@Base+0x9a20>  // b.none
  45aea0:	b	45ae40 <_obstack_memory_used@@Base+0x9a30>
  45aea4:	tbz	w1, #3, 45ac9c <_obstack_memory_used@@Base+0x988c>
  45aea8:	tbz	w0, #0, 45ac9c <_obstack_memory_used@@Base+0x988c>
  45aeac:	b	45ad10 <_obstack_memory_used@@Base+0x9900>
  45aeb0:	ldr	x1, [x20, #152]
  45aeb4:	ldr	x1, [x1, #216]
  45aeb8:	tbnz	w1, #6, 45ac70 <_obstack_memory_used@@Base+0x9860>
  45aebc:	b	45ad10 <_obstack_memory_used@@Base+0x9900>
  45aec0:	add	x3, x1, #0x1
  45aec4:	b	45ae18 <_obstack_memory_used@@Base+0x9a08>
  45aec8:	mov	w22, #0x0                   	// #0
  45aecc:	ldp	x23, x24, [sp, #48]
  45aed0:	ldp	x25, x26, [sp, #64]
  45aed4:	ldp	x27, x28, [sp, #80]
  45aed8:	b	45ad48 <_obstack_memory_used@@Base+0x9938>
  45aedc:	mov	x2, x25
  45aee0:	mov	w1, #0x0                   	// #0
  45aee4:	bl	404410 <memset@plt>
  45aee8:	mov	w22, #0x0                   	// #0
  45aeec:	ldr	x0, [sp, #144]
  45aef0:	bl	4047b0 <free@plt>
  45aef4:	mov	w0, w22
  45aef8:	ldp	x19, x20, [sp, #16]
  45aefc:	ldp	x21, x22, [sp, #32]
  45af00:	ldp	x23, x24, [sp, #48]
  45af04:	ldp	x25, x26, [sp, #64]
  45af08:	ldp	x27, x28, [sp, #80]
  45af0c:	ldp	x29, x30, [sp], #160
  45af10:	ret
  45af14:	mov	w22, #0xc                   	// #12
  45af18:	mov	w0, w22
  45af1c:	ldp	x19, x20, [sp, #16]
  45af20:	ldp	x21, x22, [sp, #32]
  45af24:	ldp	x29, x30, [sp], #160
  45af28:	ret
  45af2c:	mov	w22, w0
  45af30:	b	45ad48 <_obstack_memory_used@@Base+0x9938>
  45af34:	nop
  45af38:	sub	sp, sp, #0x280
  45af3c:	stp	x29, x30, [sp]
  45af40:	mov	x29, sp
  45af44:	stp	x19, x20, [sp, #16]
  45af48:	mov	x19, x3
  45af4c:	ldr	w3, [sp, #640]
  45af50:	mov	x20, x0
  45af54:	stp	x27, x28, [sp, #80]
  45af58:	ldr	x27, [x0]
  45af5c:	str	d8, [sp, #96]
  45af60:	fmov	d8, x5
  45af64:	stp	x21, x22, [sp, #32]
  45af68:	mov	x21, x4
  45af6c:	stp	x25, x26, [sp, #64]
  45af70:	stp	x0, x6, [sp, #120]
  45af74:	add	x0, sp, #0x180
  45af78:	str	w3, [sp, #160]
  45af7c:	str	x2, [sp, #168]
  45af80:	mov	x2, #0x100                 	// #256
  45af84:	str	x1, [sp, #192]
  45af88:	mov	w1, #0x0                   	// #0
  45af8c:	str	x7, [sp, #272]
  45af90:	bl	404410 <memset@plt>
  45af94:	ldr	x26, [x20, #32]
  45af98:	str	x27, [sp, #536]
  45af9c:	cbz	x26, 45afb4 <_obstack_memory_used@@Base+0x9ba4>
  45afa0:	ldrb	w0, [x20, #56]
  45afa4:	tst	x0, #0x8
  45afa8:	ccmp	x19, x21, #0x4, ne  // ne = any
  45afac:	b.ne	45b390 <_obstack_memory_used@@Base+0x9f80>  // b.any
  45afb0:	mov	x26, #0x0                   	// #0
  45afb4:	ldp	x0, x3, [sp, #120]
  45afb8:	str	xzr, [sp, #232]
  45afbc:	ldr	x0, [x0, #48]
  45afc0:	cmp	x0, x3
  45afc4:	b.cs	45afe0 <_obstack_memory_used@@Base+0x9bd0>  // b.hs, b.nlast
  45afc8:	sub	x1, x3, #0x1
  45afcc:	sub	x2, x0, x1
  45afd0:	sub	x0, x1, x0
  45afd4:	str	x0, [sp, #232]
  45afd8:	add	x0, x3, x2
  45afdc:	str	x0, [sp, #128]
  45afe0:	ldr	x4, [sp, #120]
  45afe4:	ldr	x0, [x4, #16]
  45afe8:	cbz	x0, 45bb1c <_obstack_memory_used@@Base+0xa70c>
  45afec:	ldr	x0, [x27, #72]
  45aff0:	cbz	x0, 45bb1c <_obstack_memory_used@@Base+0xa70c>
  45aff4:	ldr	x1, [x27, #80]
  45aff8:	cbz	x1, 45bb1c <_obstack_memory_used@@Base+0xa70c>
  45affc:	ldr	x2, [x27, #88]
  45b000:	cbz	x2, 45bb1c <_obstack_memory_used@@Base+0xa70c>
  45b004:	ldr	x3, [x27, #96]
  45b008:	cbz	x3, 45bb1c <_obstack_memory_used@@Base+0xa70c>
  45b00c:	ldr	x0, [x0, #16]
  45b010:	cbnz	x0, 45b040 <_obstack_memory_used@@Base+0x9c30>
  45b014:	ldr	x0, [x1, #16]
  45b018:	cbnz	x0, 45b040 <_obstack_memory_used@@Base+0x9c30>
  45b01c:	ldr	x0, [x2, #16]
  45b020:	cbz	x0, 45b02c <_obstack_memory_used@@Base+0x9c1c>
  45b024:	ldrsb	w0, [x4, #56]
  45b028:	tbnz	w0, #31, 45b040 <_obstack_memory_used@@Base+0x9c30>
  45b02c:	cmp	x19, #0x0
  45b030:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  45b034:	b.ne	45bb1c <_obstack_memory_used@@Base+0xa70c>  // b.any
  45b038:	mov	x21, #0x0                   	// #0
  45b03c:	mov	x19, #0x0                   	// #0
  45b040:	ldr	x0, [sp, #128]
  45b044:	cbnz	x0, 45b380 <_obstack_memory_used@@Base+0x9f70>
  45b048:	ldr	x0, [x27, #152]
  45b04c:	cmp	x0, #0x0
  45b050:	cset	w0, ne  // ne = any
  45b054:	str	w0, [sp, #156]
  45b058:	str	w0, [sp, #180]
  45b05c:	ldr	x5, [sp, #120]
  45b060:	ldr	w0, [x27, #180]
  45b064:	ldr	x1, [x27, #16]
  45b068:	str	w0, [sp, #528]
  45b06c:	ldr	x6, [sp, #168]
  45b070:	sxtw	x4, w0
  45b074:	add	x1, x1, #0x1
  45b078:	fmov	d0, x6
  45b07c:	ldr	x2, [x5, #24]
  45b080:	cmp	x1, x4
  45b084:	ldr	x5, [x5, #40]
  45b088:	csel	x1, x1, x4, ge  // ge = tcont
  45b08c:	add	x20, x6, #0x1
  45b090:	and	x2, x2, #0x400000
  45b094:	cmp	x1, x20
  45b098:	ldrb	w3, [x27, #176]
  45b09c:	dup	v0.2d, v0.d[0]
  45b0a0:	csel	x20, x1, x20, le
  45b0a4:	orr	x22, x2, x5
  45b0a8:	cmp	x2, #0x0
  45b0ac:	cset	w2, ne  // ne = any
  45b0b0:	cmp	x22, #0x0
  45b0b4:	ldr	x7, [sp, #192]
  45b0b8:	cset	w1, ne  // ne = any
  45b0bc:	str	x5, [sp, #224]
  45b0c0:	cmp	w0, #0x1
  45b0c4:	str	x7, [sp, #384]
  45b0c8:	str	x5, [sp, #504]
  45b0cc:	strb	w2, [sp, #520]
  45b0d0:	ubfx	x2, x3, #2, #1
  45b0d4:	ubfx	x3, x3, #3, #1
  45b0d8:	strb	w2, [sp, #521]
  45b0dc:	strb	w3, [sp, #522]
  45b0e0:	strb	w1, [sp, #523]
  45b0e4:	stp	q0, q0, [sp, #464]
  45b0e8:	b.le	45bdd0 <_obstack_memory_used@@Base+0xa9c0>
  45b0ec:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  45b0f0:	cmp	x20, x0
  45b0f4:	b.hi	45c050 <_obstack_memory_used@@Base+0xac40>  // b.pmore
  45b0f8:	lsl	x0, x20, #2
  45b0fc:	bl	404310 <malloc@plt>
  45b100:	cbz	x0, 45c050 <_obstack_memory_used@@Base+0xac40>
  45b104:	stp	x23, x24, [sp, #48]
  45b108:	str	x0, [sp, #400]
  45b10c:	cbnz	x22, 45bdd8 <_obstack_memory_used@@Base+0xa9c8>
  45b110:	ldrb	w0, [x27, #176]
  45b114:	add	x1, x27, #0xb8
  45b118:	str	x20, [sp, #448]
  45b11c:	str	x1, [sp, #512]
  45b120:	ubfx	x0, x0, #4, #1
  45b124:	strb	w0, [sp, #526]
  45b128:	ldr	x0, [sp, #192]
  45b12c:	str	x0, [sp, #392]
  45b130:	ldr	w0, [x27, #180]
  45b134:	ldr	d0, [sp, #168]
  45b138:	cmp	w0, #0x1
  45b13c:	b.le	45b144 <_obstack_memory_used@@Base+0x9d34>
  45b140:	fmov	d0, xzr
  45b144:	ldr	x0, [sp, #120]
  45b148:	mov	x1, #0xffffffffffffffff    	// #-1
  45b14c:	dup	v0.2d, v0.d[0]
  45b150:	dup	v8.2d, v8.d[0]
  45b154:	ldrb	w0, [x0, #56]
  45b158:	ldr	x22, [x27, #152]
  45b15c:	str	x1, [sp, #552]
  45b160:	ubfx	x0, x0, #7, #1
  45b164:	strb	w0, [sp, #525]
  45b168:	ldr	w0, [sp, #160]
  45b16c:	str	w0, [sp, #544]
  45b170:	cmp	xzr, x22, lsl #1
  45b174:	str	q0, [sp, #432]
  45b178:	lsl	x23, x22, #1
  45b17c:	str	q8, [sp, #480]
  45b180:	b.ge	45b1c4 <_obstack_memory_used@@Base+0x9db4>  // b.tcont
  45b184:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  45b188:	movk	x0, #0x666, lsl #48
  45b18c:	cmp	x23, x0
  45b190:	b.gt	45bf88 <_obstack_memory_used@@Base+0xab78>
  45b194:	add	x0, x23, x22, lsl #3
  45b198:	lsl	x0, x0, #3
  45b19c:	bl	404310 <malloc@plt>
  45b1a0:	mov	x1, x0
  45b1a4:	lsl	x0, x22, #4
  45b1a8:	mov	x22, x1
  45b1ac:	str	x1, [sp, #600]
  45b1b0:	bl	404310 <malloc@plt>
  45b1b4:	str	x0, [sp, #632]
  45b1b8:	cmp	x0, #0x0
  45b1bc:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  45b1c0:	b.eq	45bf88 <_obstack_memory_used@@Base+0xab78>  // b.none
  45b1c4:	mov	w0, #0x1                   	// #1
  45b1c8:	str	w0, [sp, #608]
  45b1cc:	ldr	x0, [sp, #128]
  45b1d0:	str	x23, [sp, #592]
  45b1d4:	str	x23, [sp, #624]
  45b1d8:	cmp	x0, #0x1
  45b1dc:	b.ls	45bf30 <_obstack_memory_used@@Base+0xab20>  // b.plast
  45b1e0:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  45b1e4:	cmp	x20, x0
  45b1e8:	b.hi	45bf88 <_obstack_memory_used@@Base+0xab78>  // b.pmore
  45b1ec:	add	x0, x20, #0x1
  45b1f0:	lsl	x0, x0, #3
  45b1f4:	bl	404310 <malloc@plt>
  45b1f8:	str	x0, [sp, #568]
  45b1fc:	mov	x28, x0
  45b200:	cbz	x0, 45bb4c <_obstack_memory_used@@Base+0xa73c>
  45b204:	ldr	x0, [sp, #160]
  45b208:	mov	w1, #0x6                   	// #6
  45b20c:	mov	x2, #0x1                   	// #1
  45b210:	str	x19, [sp, #296]
  45b214:	tst	x0, #0x1
  45b218:	mov	w0, #0x4                   	// #4
  45b21c:	csel	w1, w0, w1, ne  // ne = any
  45b220:	cmp	x19, x21
  45b224:	str	w1, [sp, #496]
  45b228:	csel	x1, x19, x21, ge  // ge = tcont
  45b22c:	str	x1, [sp, #136]
  45b230:	mov	w1, #0x8                   	// #8
  45b234:	cneg	x2, x2, gt
  45b238:	str	w1, [sp, #176]
  45b23c:	ldr	w1, [x27, #180]
  45b240:	str	x2, [sp, #216]
  45b244:	csel	x2, x19, x21, le
  45b248:	str	x2, [sp, #184]
  45b24c:	str	w1, [sp, #260]
  45b250:	cbz	x26, 45b29c <_obstack_memory_used@@Base+0x9e8c>
  45b254:	cmp	w1, #0x1
  45b258:	b.eq	45b27c <_obstack_memory_used@@Base+0x9e6c>  // b.none
  45b25c:	ldr	x0, [sp, #120]
  45b260:	ldr	x1, [sp, #224]
  45b264:	ldr	x0, [x0, #24]
  45b268:	and	x0, x0, #0x400000
  45b26c:	orr	x0, x1, x0
  45b270:	cmp	x0, #0x0
  45b274:	cset	w0, eq  // eq = none
  45b278:	lsl	w0, w0, #2
  45b27c:	ldr	x1, [sp, #224]
  45b280:	cmp	x19, x21
  45b284:	cset	w2, le
  45b288:	cmp	x1, #0x0
  45b28c:	cset	w1, ne  // ne = any
  45b290:	orr	w0, w1, w0
  45b294:	orr	w0, w0, w2, lsl #1
  45b298:	str	w0, [sp, #176]
  45b29c:	ldr	x0, [sp, #184]
  45b2a0:	cmp	x19, x0
  45b2a4:	ldr	x0, [sp, #136]
  45b2a8:	cset	w1, lt  // lt = tstop
  45b2ac:	cmp	x19, x0
  45b2b0:	cset	w0, gt
  45b2b4:	orr	w0, w1, w0
  45b2b8:	str	w0, [sp, #284]
  45b2bc:	cbnz	w0, 45c24c <_obstack_memory_used@@Base+0xae3c>
  45b2c0:	cmp	x19, x21
  45b2c4:	add	x0, sp, #0x128
  45b2c8:	csel	x0, x0, xzr, le
  45b2cc:	stp	x27, x26, [sp, #200]
  45b2d0:	cmp	x0, #0x0
  45b2d4:	str	x0, [sp, #264]
  45b2d8:	cset	w0, ne  // ne = any
  45b2dc:	str	w0, [sp, #280]
  45b2e0:	ldr	w0, [sp, #176]
  45b2e4:	cmp	w0, #0x7
  45b2e8:	b.eq	45be88 <_obstack_memory_used@@Base+0xaa78>  // b.none
  45b2ec:	cmp	w0, #0x8
  45b2f0:	b.eq	45b438 <_obstack_memory_used@@Base+0xa028>  // b.none
  45b2f4:	cmp	w0, #0x5
  45b2f8:	b.gt	45b39c <_obstack_memory_used@@Base+0x9f8c>
  45b2fc:	cmp	w0, #0x3
  45b300:	b.gt	45be1c <_obstack_memory_used@@Base+0xaa0c>
  45b304:	ldr	x22, [sp, #136]
  45b308:	ldr	x20, [sp, #168]
  45b30c:	ldr	x21, [sp, #184]
  45b310:	ldp	x26, x23, [sp, #208]
  45b314:	ldr	x2, [sp, #424]
  45b318:	b	45b350 <_obstack_memory_used@@Base+0x9f40>
  45b31c:	cmp	x20, x19
  45b320:	mov	x0, x26
  45b324:	b.le	45b334 <_obstack_memory_used@@Base+0x9f24>
  45b328:	ldr	x0, [sp, #392]
  45b32c:	ldrb	w0, [x0, x1]
  45b330:	add	x0, x26, x0
  45b334:	ldrb	w0, [x0]
  45b338:	cbnz	w0, 45b438 <_obstack_memory_used@@Base+0xa028>
  45b33c:	add	x19, x19, x23
  45b340:	str	x19, [sp, #296]
  45b344:	cmp	x19, x21
  45b348:	ccmp	x19, x22, #0x0, ge  // ge = tcont
  45b34c:	b.gt	45b958 <_obstack_memory_used@@Base+0xa548>
  45b350:	ldr	x0, [sp, #440]
  45b354:	sub	x1, x19, x2
  45b358:	cmp	x0, x1
  45b35c:	b.hi	45b31c <_obstack_memory_used@@Base+0x9f0c>  // b.pmore
  45b360:	ldr	w2, [sp, #160]
  45b364:	mov	x1, x19
  45b368:	add	x0, sp, #0x180
  45b36c:	bl	453270 <_obstack_memory_used@@Base+0x1e60>
  45b370:	cbnz	w0, 45c11c <_obstack_memory_used@@Base+0xad0c>
  45b374:	ldr	x2, [sp, #424]
  45b378:	sub	x1, x19, x2
  45b37c:	b	45b31c <_obstack_memory_used@@Base+0x9f0c>
  45b380:	mov	w0, #0x1                   	// #1
  45b384:	str	w0, [sp, #156]
  45b388:	str	w0, [sp, #180]
  45b38c:	b	45b05c <_obstack_memory_used@@Base+0x9c4c>
  45b390:	tst	x0, #0x1
  45b394:	csel	x26, x26, xzr, eq  // eq = none
  45b398:	b	45afb4 <_obstack_memory_used@@Base+0x9ba4>
  45b39c:	ldr	w0, [sp, #176]
  45b3a0:	cmp	w0, #0x6
  45b3a4:	b.ne	45b304 <_obstack_memory_used@@Base+0x9ef4>  // b.any
  45b3a8:	ldr	x0, [sp, #136]
  45b3ac:	mov	w2, #0x0                   	// #0
  45b3b0:	cmp	x0, x19
  45b3b4:	mov	x0, x19
  45b3b8:	b.le	45b42c <_obstack_memory_used@@Base+0xa01c>
  45b3bc:	ldr	x4, [sp, #136]
  45b3c0:	ldr	x3, [sp, #192]
  45b3c4:	ldr	x26, [sp, #208]
  45b3c8:	ldrb	w1, [x3, x0]
  45b3cc:	ldrb	w1, [x26, x1]
  45b3d0:	cbnz	w1, 45b420 <_obstack_memory_used@@Base+0xa010>
  45b3d4:	add	x0, x0, #0x1
  45b3d8:	mov	w2, #0x1                   	// #1
  45b3dc:	cmp	x0, x4
  45b3e0:	b.ne	45b3c8 <_obstack_memory_used@@Base+0x9fb8>  // b.any
  45b3e4:	ldr	x0, [sp, #136]
  45b3e8:	str	x0, [sp, #296]
  45b3ec:	ldr	x1, [sp, #136]
  45b3f0:	ldr	x0, [sp, #168]
  45b3f4:	cmp	x0, x1
  45b3f8:	mov	x0, #0x0                   	// #0
  45b3fc:	b.gt	45c0b0 <_obstack_memory_used@@Base+0xaca0>
  45b400:	ldr	x1, [sp, #224]
  45b404:	cbz	x1, 45b40c <_obstack_memory_used@@Base+0x9ffc>
  45b408:	ldrb	w0, [x1, x0]
  45b40c:	ldr	x1, [sp, #208]
  45b410:	ldrb	w0, [x1, x0]
  45b414:	cbz	w0, 45b958 <_obstack_memory_used@@Base+0xa548>
  45b418:	ldr	x19, [sp, #136]
  45b41c:	b	45b438 <_obstack_memory_used@@Base+0xa028>
  45b420:	cbz	w2, 45b438 <_obstack_memory_used@@Base+0xa028>
  45b424:	mov	x19, x0
  45b428:	str	x0, [sp, #296]
  45b42c:	ldr	x0, [sp, #136]
  45b430:	cmp	x19, x0
  45b434:	b.eq	45b3ec <_obstack_memory_used@@Base+0x9fdc>  // b.none
  45b438:	ldr	w2, [sp, #160]
  45b43c:	mov	x1, x19
  45b440:	add	x0, sp, #0x180
  45b444:	bl	453270 <_obstack_memory_used@@Base+0x1e60>
  45b448:	str	w0, [sp, #152]
  45b44c:	cbnz	w0, 45bfd0 <_obstack_memory_used@@Base+0xabc0>
  45b450:	ldr	w0, [sp, #260]
  45b454:	cmp	w0, #0x1
  45b458:	b.eq	45b474 <_obstack_memory_used@@Base+0xa064>  // b.none
  45b45c:	ldr	x0, [sp, #432]
  45b460:	cbz	x0, 45b474 <_obstack_memory_used@@Base+0xa064>
  45b464:	ldr	x0, [sp, #400]
  45b468:	ldr	w0, [x0]
  45b46c:	cmn	w0, #0x1
  45b470:	b.eq	45b938 <_obstack_memory_used@@Base+0xa528>  // b.none
  45b474:	ldr	x20, [sp, #536]
  45b478:	add	x0, sp, #0x240
  45b47c:	ldr	x27, [sp, #456]
  45b480:	ldr	x19, [x20, #72]
  45b484:	stp	xzr, xzr, [x0]
  45b488:	ldrsb	w0, [x19, #104]
  45b48c:	str	wzr, [sp, #292]
  45b490:	str	wzr, [sp, #608]
  45b494:	tbz	w0, #31, 45b4c8 <_obstack_memory_used@@Base+0xa0b8>
  45b498:	ldr	w2, [sp, #544]
  45b49c:	sub	x1, x27, #0x1
  45b4a0:	add	x0, sp, #0x180
  45b4a4:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45b4a8:	tbnz	w0, #0, 45bf44 <_obstack_memory_used@@Base+0xab34>
  45b4ac:	cbz	w0, 45b4c8 <_obstack_memory_used@@Base+0xa0b8>
  45b4b0:	and	w1, w0, #0x6
  45b4b4:	cmp	w1, #0x6
  45b4b8:	b.eq	45c114 <_obstack_memory_used@@Base+0xad04>  // b.none
  45b4bc:	tbnz	w0, #1, 45c060 <_obstack_memory_used@@Base+0xac50>
  45b4c0:	tbnz	w0, #2, 45c074 <_obstack_memory_used@@Base+0xac64>
  45b4c4:	nop
  45b4c8:	ldr	x0, [sp, #568]
  45b4cc:	cbz	x0, 45be10 <_obstack_memory_used@@Base+0xaa00>
  45b4d0:	ldr	x1, [x20, #152]
  45b4d4:	str	x19, [x0, x27, lsl #3]
  45b4d8:	cbnz	x1, 45c0bc <_obstack_memory_used@@Base+0xacac>
  45b4dc:	ldrb	w0, [x19, #104]
  45b4e0:	ldr	w24, [sp, #280]
  45b4e4:	str	xzr, [sp, #112]
  45b4e8:	mov	x25, #0xffffffffffffffff    	// #-1
  45b4ec:	tbnz	w0, #4, 45c010 <_obstack_memory_used@@Base+0xac00>
  45b4f0:	ldr	x0, [sp, #264]
  45b4f4:	str	x0, [sp, #144]
  45b4f8:	ldr	x28, [sp, #456]
  45b4fc:	ldr	x0, [sp, #488]
  45b500:	cmp	x28, x0
  45b504:	b.ge	45c240 <_obstack_memory_used@@Base+0xae30>  // b.tcont
  45b508:	ldr	x0, [sp, #448]
  45b50c:	mov	x26, x28
  45b510:	add	x21, x26, #0x1
  45b514:	cmp	x21, x0
  45b518:	b.ge	45b5c8 <_obstack_memory_used@@Base+0xa1b8>  // b.tcont
  45b51c:	nop
  45b520:	ldr	x0, [sp, #432]
  45b524:	cmp	x21, x0
  45b528:	b.ge	45bb0c <_obstack_memory_used@@Base+0xa6fc>  // b.tcont
  45b52c:	ldrb	w0, [x19, #104]
  45b530:	tbnz	w0, #5, 45b5f8 <_obstack_memory_used@@Base+0xa1e8>
  45b534:	ldr	x0, [sp, #392]
  45b538:	add	x1, x26, #0x1
  45b53c:	str	x1, [sp, #456]
  45b540:	ldrb	w20, [x0, x26]
  45b544:	ldr	x0, [x19, #88]
  45b548:	cbz	x0, 45badc <_obstack_memory_used@@Base+0xa6cc>
  45b54c:	ldr	x20, [x0, x20, lsl #3]
  45b550:	ldr	x0, [sp, #568]
  45b554:	cbz	x0, 45b56c <_obstack_memory_used@@Base+0xa15c>
  45b558:	mov	x2, x20
  45b55c:	add	x1, sp, #0x180
  45b560:	add	x0, sp, #0x124
  45b564:	bl	45a0e8 <_obstack_memory_used@@Base+0x8cd8>
  45b568:	mov	x20, x0
  45b56c:	cbz	x20, 45b780 <_obstack_memory_used@@Base+0xa370>
  45b570:	cmp	x20, x19
  45b574:	ldrb	w0, [x20, #104]
  45b578:	csel	w24, w24, wzr, eq  // eq = none
  45b57c:	cmp	w24, #0x0
  45b580:	csel	x27, x27, x21, eq  // eq = none
  45b584:	ldr	x26, [sp, #456]
  45b588:	tbz	w0, #4, 45b5a8 <_obstack_memory_used@@Base+0xa198>
  45b58c:	tbnz	w0, #7, 45b9ec <_obstack_memory_used@@Base+0xa5dc>
  45b590:	ldr	w0, [sp, #156]
  45b594:	cbz	w0, 45c048 <_obstack_memory_used@@Base+0xac38>
  45b598:	mov	x25, x26
  45b59c:	mov	x0, #0x1                   	// #1
  45b5a0:	str	x0, [sp, #112]
  45b5a4:	str	xzr, [sp, #144]
  45b5a8:	ldr	x0, [sp, #488]
  45b5ac:	cmp	x0, x26
  45b5b0:	b.le	45b7d8 <_obstack_memory_used@@Base+0xa3c8>
  45b5b4:	ldr	x0, [sp, #448]
  45b5b8:	add	x21, x26, #0x1
  45b5bc:	mov	x19, x20
  45b5c0:	cmp	x21, x0
  45b5c4:	b.lt	45b520 <_obstack_memory_used@@Base+0xa110>  // b.tstop
  45b5c8:	ldr	x1, [sp, #472]
  45b5cc:	cmp	x0, x1
  45b5d0:	b.ge	45b520 <_obstack_memory_used@@Base+0xa110>  // b.tcont
  45b5d4:	add	w1, w21, #0x1
  45b5d8:	add	x0, sp, #0x180
  45b5dc:	bl	456290 <_obstack_memory_used@@Base+0x4e80>
  45b5e0:	str	w0, [sp, #292]
  45b5e4:	cbnz	w0, 45bfe0 <_obstack_memory_used@@Base+0xabd0>
  45b5e8:	ldrb	w0, [x19, #104]
  45b5ec:	ldr	x26, [sp, #456]
  45b5f0:	tbz	w0, #5, 45b534 <_obstack_memory_used@@Base+0xa124>
  45b5f4:	nop
  45b5f8:	ldr	x5, [x19, #16]
  45b5fc:	ldr	x20, [sp, #536]
  45b600:	cmp	x5, #0x0
  45b604:	b.le	45b778 <_obstack_memory_used@@Base+0xa368>
  45b608:	add	x28, x20, #0xd8
  45b60c:	stp	x25, x21, [sp, #240]
  45b610:	mov	x21, x26
  45b614:	str	w24, [sp, #256]
  45b618:	mov	x24, x5
  45b61c:	mov	x22, #0x0                   	// #0
  45b620:	ldr	x0, [x19, #24]
  45b624:	ldr	x25, [x20]
  45b628:	ldr	x26, [x0, x22, lsl #3]
  45b62c:	add	x0, x25, x26, lsl #4
  45b630:	ldrb	w1, [x0, #10]
  45b634:	tbz	w1, #4, 45b760 <_obstack_memory_used@@Base+0xa350>
  45b638:	ldr	w23, [x0, #8]
  45b63c:	tst	w23, #0x3ff00
  45b640:	b.eq	45b678 <_obstack_memory_used@@Base+0xa268>  // b.none
  45b644:	ldr	w2, [sp, #544]
  45b648:	mov	x1, x21
  45b64c:	add	x0, sp, #0x180
  45b650:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45b654:	ubfx	x2, x23, #8, #10
  45b658:	tbz	w23, #10, 45ba08 <_obstack_memory_used@@Base+0xa5f8>
  45b65c:	tbz	w0, #0, 45b760 <_obstack_memory_used@@Base+0xa350>
  45b660:	tbnz	w2, #3, 45b760 <_obstack_memory_used@@Base+0xa350>
  45b664:	tbz	w2, #5, 45b66c <_obstack_memory_used@@Base+0xa25c>
  45b668:	tbz	w0, #1, 45b760 <_obstack_memory_used@@Base+0xa350>
  45b66c:	tbz	w2, #7, 45b678 <_obstack_memory_used@@Base+0xa268>
  45b670:	tbz	w0, #3, 45b760 <_obstack_memory_used@@Base+0xa350>
  45b674:	nop
  45b678:	mov	x4, x21
  45b67c:	mov	x0, x25
  45b680:	add	x3, sp, #0x180
  45b684:	mov	x2, x26
  45b688:	mov	x1, x28
  45b68c:	bl	455288 <_obstack_memory_used@@Base+0x3e78>
  45b690:	cbz	w0, 45b758 <_obstack_memory_used@@Base+0xa348>
  45b694:	ldp	x2, x23, [sp, #448]
  45b698:	ldr	w1, [sp, #608]
  45b69c:	ldr	x24, [sp, #576]
  45b6a0:	cmp	w1, w0
  45b6a4:	csel	w1, w1, w0, ge  // ge = tcont
  45b6a8:	str	w1, [sp, #608]
  45b6ac:	add	x23, x23, w0, sxtw
  45b6b0:	cmp	x23, x2
  45b6b4:	b.lt	45ba14 <_obstack_memory_used@@Base+0xa604>  // b.tstop
  45b6b8:	ldr	x0, [sp, #472]
  45b6bc:	cmp	x2, x0
  45b6c0:	b.ge	45ba14 <_obstack_memory_used@@Base+0xa604>  // b.tcont
  45b6c4:	add	w1, w23, #0x1
  45b6c8:	add	x0, sp, #0x180
  45b6cc:	bl	456290 <_obstack_memory_used@@Base+0x4e80>
  45b6d0:	cbnz	w0, 45ba3c <_obstack_memory_used@@Base+0xa62c>
  45b6d4:	cmp	x23, x24
  45b6d8:	ldr	x21, [sp, #568]
  45b6dc:	b.gt	45bab4 <_obstack_memory_used@@Base+0xa6a4>
  45b6e0:	str	wzr, [sp, #304]
  45b6e4:	ldr	x0, [x20, #24]
  45b6e8:	ldr	x1, [x21, x23, lsl #3]
  45b6ec:	ldr	x0, [x0, x26, lsl #3]
  45b6f0:	ldr	x3, [x20, #48]
  45b6f4:	add	x0, x0, x0, lsl #1
  45b6f8:	add	x3, x3, x0, lsl #3
  45b6fc:	cbz	x1, 45ba58 <_obstack_memory_used@@Base+0xa648>
  45b700:	ldr	x1, [x1, #80]
  45b704:	mov	x2, x3
  45b708:	add	x0, sp, #0x148
  45b70c:	bl	459808 <_obstack_memory_used@@Base+0x83f8>
  45b710:	str	w0, [sp, #304]
  45b714:	cbnz	w0, 45ba3c <_obstack_memory_used@@Base+0xa62c>
  45b718:	ldr	w2, [sp, #544]
  45b71c:	sub	x1, x23, #0x1
  45b720:	add	x0, sp, #0x180
  45b724:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45b728:	mov	w3, w0
  45b72c:	ldr	x26, [sp, #568]
  45b730:	mov	x1, x20
  45b734:	add	x2, sp, #0x148
  45b738:	add	x0, sp, #0x130
  45b73c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  45b740:	str	x0, [x26, x23, lsl #3]
  45b744:	ldr	x0, [sp, #344]
  45b748:	bl	4047b0 <free@plt>
  45b74c:	ldr	x1, [sp, #568]
  45b750:	ldr	x0, [x1, x23, lsl #3]
  45b754:	cbz	x0, 45baa0 <_obstack_memory_used@@Base+0xa690>
  45b758:	ldr	x24, [x19, #16]
  45b75c:	ldr	x21, [sp, #456]
  45b760:	add	x22, x22, #0x1
  45b764:	cmp	x22, x24
  45b768:	b.lt	45b620 <_obstack_memory_used@@Base+0xa210>  // b.tstop
  45b76c:	mov	x26, x21
  45b770:	ldr	w24, [sp, #256]
  45b774:	ldp	x25, x21, [sp, #240]
  45b778:	str	wzr, [sp, #292]
  45b77c:	b	45b534 <_obstack_memory_used@@Base+0xa124>
  45b780:	ldr	w0, [sp, #292]
  45b784:	ldr	x28, [sp, #568]
  45b788:	cbnz	w0, 45bb48 <_obstack_memory_used@@Base+0xa738>
  45b78c:	cbz	x28, 45b7d8 <_obstack_memory_used@@Base+0xa3c8>
  45b790:	ldr	w0, [sp, #180]
  45b794:	ldr	w1, [sp, #112]
  45b798:	eor	w0, w0, #0x1
  45b79c:	tst	w0, w1
  45b7a0:	b.ne	45b7d8 <_obstack_memory_used@@Base+0xa3c8>  // b.any
  45b7a4:	mov	w1, #0x0                   	// #0
  45b7a8:	ldr	x0, [sp, #456]
  45b7ac:	ldr	x2, [sp, #576]
  45b7b0:	b	45b7c0 <_obstack_memory_used@@Base+0xa3b0>
  45b7b4:	ldr	x3, [x28, x0, lsl #3]
  45b7b8:	mov	w1, #0x1                   	// #1
  45b7bc:	cbnz	x3, 45b9b8 <_obstack_memory_used@@Base+0xa5a8>
  45b7c0:	mov	x3, x0
  45b7c4:	add	x0, x0, #0x1
  45b7c8:	cmp	x2, x0
  45b7cc:	b.ge	45b7b4 <_obstack_memory_used@@Base+0xa3a4>  // b.tcont
  45b7d0:	cbz	w1, 45b7d8 <_obstack_memory_used@@Base+0xa3c8>
  45b7d4:	str	x3, [sp, #456]
  45b7d8:	ldr	x1, [sp, #144]
  45b7dc:	cbz	x1, 45b7ec <_obstack_memory_used@@Base+0xa3dc>
  45b7e0:	ldr	x0, [x1]
  45b7e4:	add	x27, x0, x27
  45b7e8:	str	x27, [x1]
  45b7ec:	cmn	x25, #0x1
  45b7f0:	b.eq	45b92c <_obstack_memory_used@@Base+0xa51c>  // b.none
  45b7f4:	cmn	x25, #0x2
  45b7f8:	b.eq	45bf84 <_obstack_memory_used@@Base+0xab74>  // b.none
  45b7fc:	ldr	x0, [sp, #120]
  45b800:	str	x25, [sp, #552]
  45b804:	ldrb	w0, [x0, #56]
  45b808:	tbnz	w0, #4, 45bb8c <_obstack_memory_used@@Base+0xa77c>
  45b80c:	ldr	x1, [sp, #128]
  45b810:	cmp	x1, #0x1
  45b814:	b.ls	45bed4 <_obstack_memory_used@@Base+0xaac4>  // b.plast
  45b818:	ldr	x28, [sp, #568]
  45b81c:	mov	x3, x25
  45b820:	add	x0, sp, #0x180
  45b824:	ldr	x1, [x28, x25, lsl #3]
  45b828:	add	x2, x1, #0x18
  45b82c:	ldr	x1, [x1, #16]
  45b830:	bl	452fe0 <_obstack_memory_used@@Base+0x1bd0>
  45b834:	mov	x23, x0
  45b838:	ldr	x1, [sp, #200]
  45b83c:	ldrb	w1, [x1, #176]
  45b840:	str	x0, [sp, #560]
  45b844:	tbnz	w1, #0, 45b858 <_obstack_memory_used@@Base+0xa448>
  45b848:	ldr	x0, [sp, #200]
  45b84c:	ldr	x0, [x0, #152]
  45b850:	cbz	x0, 45c408 <_obstack_memory_used@@Base+0xaff8>
  45b854:	ldr	x23, [sp, #560]
  45b858:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  45b85c:	cmp	x25, x0
  45b860:	ldr	x27, [sp, #536]
  45b864:	b.hi	45bb48 <_obstack_memory_used@@Base+0xa738>  // b.pmore
  45b868:	add	x20, x25, #0x1
  45b86c:	lsl	x19, x20, #3
  45b870:	mov	x0, x19
  45b874:	bl	404310 <malloc@plt>
  45b878:	mov	x24, x0
  45b87c:	cbz	x0, 45bb48 <_obstack_memory_used@@Base+0xa738>
  45b880:	ldr	x0, [x27, #152]
  45b884:	cbz	x0, 45bc34 <_obstack_memory_used@@Base+0xa824>
  45b888:	mov	x0, x19
  45b88c:	bl	404310 <malloc@plt>
  45b890:	mov	x22, x0
  45b894:	mov	x21, x0
  45b898:	cbz	x0, 45c138 <_obstack_memory_used@@Base+0xad28>
  45b89c:	add	x28, sp, #0x148
  45b8a0:	lsl	x2, x20, #3
  45b8a4:	mov	w1, #0x0                   	// #0
  45b8a8:	mov	x0, x22
  45b8ac:	bl	404410 <memset@plt>
  45b8b0:	stp	x24, x22, [sp, #328]
  45b8b4:	mov	x1, x28
  45b8b8:	add	x0, sp, #0x180
  45b8bc:	stp	x23, x25, [sp, #344]
  45b8c0:	stp	xzr, xzr, [x28, #32]
  45b8c4:	str	xzr, [x28, #48]
  45b8c8:	bl	45ab48 <_obstack_memory_used@@Base+0x9738>
  45b8cc:	mov	w19, w0
  45b8d0:	ldr	x0, [sp, #376]
  45b8d4:	bl	4047b0 <free@plt>
  45b8d8:	cbnz	w19, 45bbd8 <_obstack_memory_used@@Base+0xa7c8>
  45b8dc:	ldr	x1, [x24]
  45b8e0:	ldr	x0, [x22]
  45b8e4:	cbnz	x1, 45c154 <_obstack_memory_used@@Base+0xad44>
  45b8e8:	cbnz	x0, 45c154 <_obstack_memory_used@@Base+0xad44>
  45b8ec:	sub	x25, x25, #0x1
  45b8f0:	cmn	x25, #0x1
  45b8f4:	b.eq	45b91c <_obstack_memory_used@@Base+0xa50c>  // b.none
  45b8f8:	ldr	x1, [sp, #568]
  45b8fc:	nop
  45b900:	ldr	x2, [x1, x25, lsl #3]
  45b904:	cbz	x2, 45b910 <_obstack_memory_used@@Base+0xa500>
  45b908:	ldrb	w0, [x2, #104]
  45b90c:	tbnz	w0, #4, 45bf9c <_obstack_memory_used@@Base+0xab8c>
  45b910:	sub	x25, x25, #0x1
  45b914:	cmn	x25, #0x1
  45b918:	b.ne	45b900 <_obstack_memory_used@@Base+0xa4f0>  // b.any
  45b91c:	mov	x0, x24
  45b920:	bl	4047b0 <free@plt>
  45b924:	mov	x0, x22
  45b928:	bl	4047b0 <free@plt>
  45b92c:	add	x0, sp, #0x180
  45b930:	bl	452990 <_obstack_memory_used@@Base+0x1580>
  45b934:	ldr	x19, [sp, #296]
  45b938:	ldr	x0, [sp, #216]
  45b93c:	add	x19, x19, x0
  45b940:	str	x19, [sp, #296]
  45b944:	ldr	x0, [sp, #184]
  45b948:	cmp	x19, x0
  45b94c:	ldr	x0, [sp, #136]
  45b950:	ccmp	x19, x0, #0x0, ge  // ge = tcont
  45b954:	b.le	45b2e0 <_obstack_memory_used@@Base+0x9ed0>
  45b958:	ldr	x27, [sp, #200]
  45b95c:	mov	w0, #0x1                   	// #1
  45b960:	ldr	x28, [sp, #568]
  45b964:	str	w0, [sp, #152]
  45b968:	ldp	x23, x24, [sp, #48]
  45b96c:	mov	x0, x28
  45b970:	bl	4047b0 <free@plt>
  45b974:	ldr	x0, [x27, #152]
  45b978:	cbz	x0, 45bb68 <_obstack_memory_used@@Base+0xa758>
  45b97c:	add	x0, sp, #0x180
  45b980:	bl	452990 <_obstack_memory_used@@Base+0x1580>
  45b984:	ldr	x0, [sp, #632]
  45b988:	bl	4047b0 <free@plt>
  45b98c:	ldr	x0, [sp, #600]
  45b990:	bl	4047b0 <free@plt>
  45b994:	ldr	x0, [sp, #400]
  45b998:	bl	4047b0 <free@plt>
  45b99c:	ldr	x0, [sp, #408]
  45b9a0:	bl	4047b0 <free@plt>
  45b9a4:	ldrb	w0, [sp, #523]
  45b9a8:	cbz	w0, 45bb24 <_obstack_memory_used@@Base+0xa714>
  45b9ac:	ldr	x0, [sp, #392]
  45b9b0:	bl	4047b0 <free@plt>
  45b9b4:	b	45bb24 <_obstack_memory_used@@Base+0xa714>
  45b9b8:	add	x1, sp, #0x180
  45b9bc:	mov	x2, #0x0                   	// #0
  45b9c0:	str	x0, [sp, #456]
  45b9c4:	add	x0, sp, #0x124
  45b9c8:	bl	45a0e8 <_obstack_memory_used@@Base+0x8cd8>
  45b9cc:	ldr	w1, [sp, #292]
  45b9d0:	cbnz	w1, 45b9e0 <_obstack_memory_used@@Base+0xa5d0>
  45b9d4:	cbnz	x0, 45c040 <_obstack_memory_used@@Base+0xac30>
  45b9d8:	ldr	x28, [sp, #568]
  45b9dc:	b	45b7a4 <_obstack_memory_used@@Base+0xa394>
  45b9e0:	mov	x20, x0
  45b9e4:	cbnz	x0, 45b570 <_obstack_memory_used@@Base+0xa160>
  45b9e8:	b	45b7d8 <_obstack_memory_used@@Base+0xa3c8>
  45b9ec:	ldr	x1, [x20, #16]
  45b9f0:	mov	x3, x26
  45b9f4:	add	x2, x20, #0x18
  45b9f8:	add	x0, sp, #0x180
  45b9fc:	bl	452fe0 <_obstack_memory_used@@Base+0x1bd0>
  45ba00:	cbz	x0, 45b5a8 <_obstack_memory_used@@Base+0xa198>
  45ba04:	b	45b590 <_obstack_memory_used@@Base+0xa180>
  45ba08:	tbz	w2, #3, 45b664 <_obstack_memory_used@@Base+0xa254>
  45ba0c:	tbz	w0, #0, 45b664 <_obstack_memory_used@@Base+0xa254>
  45ba10:	b	45b760 <_obstack_memory_used@@Base+0xa350>
  45ba14:	ldr	x0, [sp, #432]
  45ba18:	cmp	x23, x0
  45ba1c:	b.lt	45b6d4 <_obstack_memory_used@@Base+0xa2c4>  // b.tstop
  45ba20:	ldr	x1, [sp, #472]
  45ba24:	cmp	x0, x1
  45ba28:	b.ge	45b6d4 <_obstack_memory_used@@Base+0xa2c4>  // b.tcont
  45ba2c:	add	w1, w23, #0x1
  45ba30:	add	x0, sp, #0x180
  45ba34:	bl	456290 <_obstack_memory_used@@Base+0x4e80>
  45ba38:	cbz	w0, 45b6d4 <_obstack_memory_used@@Base+0xa2c4>
  45ba3c:	ldp	x25, x21, [sp, #240]
  45ba40:	ldr	w24, [sp, #256]
  45ba44:	ldr	x1, [sp, #568]
  45ba48:	str	w0, [sp, #292]
  45ba4c:	cbz	x1, 45bc28 <_obstack_memory_used@@Base+0xa818>
  45ba50:	mov	x20, #0x0                   	// #0
  45ba54:	b	45b558 <_obstack_memory_used@@Base+0xa148>
  45ba58:	add	x0, sp, #0x200
  45ba5c:	ldr	w2, [sp, #544]
  45ba60:	ldp	x6, x7, [x3]
  45ba64:	sub	x1, x23, #0x1
  45ba68:	stp	x6, x7, [x0, #-184]
  45ba6c:	add	x0, sp, #0x180
  45ba70:	ldr	x3, [x3, #16]
  45ba74:	str	x3, [sp, #344]
  45ba78:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45ba7c:	mov	w3, w0
  45ba80:	mov	x1, x20
  45ba84:	add	x2, sp, #0x148
  45ba88:	add	x0, sp, #0x130
  45ba8c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  45ba90:	ldr	x1, [sp, #568]
  45ba94:	str	x0, [x21, x23, lsl #3]
  45ba98:	ldr	x0, [x1, x23, lsl #3]
  45ba9c:	cbnz	x0, 45b758 <_obstack_memory_used@@Base+0xa348>
  45baa0:	ldr	w0, [sp, #304]
  45baa4:	cbz	w0, 45b758 <_obstack_memory_used@@Base+0xa348>
  45baa8:	ldr	w24, [sp, #256]
  45baac:	ldp	x25, x21, [sp, #240]
  45bab0:	b	45ba48 <_obstack_memory_used@@Base+0xa638>
  45bab4:	sub	x2, x23, x24
  45bab8:	add	x0, x24, #0x1
  45babc:	mov	w1, #0x0                   	// #0
  45bac0:	add	x0, x21, x0, lsl #3
  45bac4:	lsl	x2, x2, #3
  45bac8:	bl	404410 <memset@plt>
  45bacc:	str	wzr, [sp, #304]
  45bad0:	str	x23, [sp, #576]
  45bad4:	ldr	x21, [sp, #568]
  45bad8:	b	45b6e4 <_obstack_memory_used@@Base+0xa2d4>
  45badc:	ldr	x22, [x19, #96]
  45bae0:	cbz	x22, 45bc04 <_obstack_memory_used@@Base+0xa7f4>
  45bae4:	ldr	w2, [sp, #544]
  45bae8:	add	x0, sp, #0x180
  45baec:	ldr	x1, [sp, #456]
  45baf0:	sub	x1, x1, #0x1
  45baf4:	bl	452ee0 <_obstack_memory_used@@Base+0x1ad0>
  45baf8:	and	x1, x20, #0xff
  45bafc:	tbz	w0, #0, 45bb84 <_obstack_memory_used@@Base+0xa774>
  45bb00:	add	x1, x1, #0x100
  45bb04:	ldr	x20, [x22, x1, lsl #3]
  45bb08:	b	45b550 <_obstack_memory_used@@Base+0xa140>
  45bb0c:	ldr	x1, [sp, #472]
  45bb10:	cmp	x0, x1
  45bb14:	b.ge	45b52c <_obstack_memory_used@@Base+0xa11c>  // b.tcont
  45bb18:	b	45b5d4 <_obstack_memory_used@@Base+0xa1c4>
  45bb1c:	mov	w0, #0x1                   	// #1
  45bb20:	str	w0, [sp, #152]
  45bb24:	ldr	w0, [sp, #152]
  45bb28:	ldp	x29, x30, [sp]
  45bb2c:	ldp	x19, x20, [sp, #16]
  45bb30:	ldp	x21, x22, [sp, #32]
  45bb34:	ldp	x25, x26, [sp, #64]
  45bb38:	ldp	x27, x28, [sp, #80]
  45bb3c:	ldr	d8, [sp, #96]
  45bb40:	add	sp, sp, #0x280
  45bb44:	ret
  45bb48:	ldr	x27, [sp, #200]
  45bb4c:	mov	w0, #0xc                   	// #12
  45bb50:	ldp	x23, x24, [sp, #48]
  45bb54:	str	w0, [sp, #152]
  45bb58:	mov	x0, x28
  45bb5c:	bl	4047b0 <free@plt>
  45bb60:	ldr	x0, [x27, #152]
  45bb64:	cbnz	x0, 45b97c <_obstack_memory_used@@Base+0xa56c>
  45bb68:	ldr	x0, [sp, #400]
  45bb6c:	bl	4047b0 <free@plt>
  45bb70:	ldr	x0, [sp, #408]
  45bb74:	bl	4047b0 <free@plt>
  45bb78:	ldrb	w0, [sp, #523]
  45bb7c:	cbz	w0, 45bb24 <_obstack_memory_used@@Base+0xa714>
  45bb80:	b	45b9ac <_obstack_memory_used@@Base+0xa59c>
  45bb84:	ldr	x20, [x22, x20, lsl #3]
  45bb88:	b	45b550 <_obstack_memory_used@@Base+0xa140>
  45bb8c:	ldr	x0, [sp, #200]
  45bb90:	ldr	x0, [x0, #152]
  45bb94:	cbnz	x0, 45bba0 <_obstack_memory_used@@Base+0xa790>
  45bb98:	ldr	x27, [sp, #200]
  45bb9c:	b	45bc88 <_obstack_memory_used@@Base+0xa878>
  45bba0:	ldr	x28, [sp, #568]
  45bba4:	mov	x3, x25
  45bba8:	add	x0, sp, #0x180
  45bbac:	ldr	x1, [x28, x25, lsl #3]
  45bbb0:	add	x2, x1, #0x18
  45bbb4:	ldr	x1, [x1, #16]
  45bbb8:	bl	452fe0 <_obstack_memory_used@@Base+0x1bd0>
  45bbbc:	str	x0, [sp, #560]
  45bbc0:	b	45b854 <_obstack_memory_used@@Base+0xa444>
  45bbc4:	mov	w19, #0xc                   	// #12
  45bbc8:	mov	x21, #0x0                   	// #0
  45bbcc:	mov	x0, x22
  45bbd0:	bl	4047b0 <free@plt>
  45bbd4:	nop
  45bbd8:	mov	x0, x24
  45bbdc:	bl	4047b0 <free@plt>
  45bbe0:	mov	x0, x21
  45bbe4:	bl	4047b0 <free@plt>
  45bbe8:	cmp	w19, #0x1
  45bbec:	b.eq	45b92c <_obstack_memory_used@@Base+0xa51c>  // b.none
  45bbf0:	str	w19, [sp, #152]
  45bbf4:	ldp	x23, x24, [sp, #48]
  45bbf8:	ldr	x27, [sp, #200]
  45bbfc:	ldr	x28, [sp, #568]
  45bc00:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45bc04:	ldr	x0, [sp, #536]
  45bc08:	mov	x1, x19
  45bc0c:	bl	456960 <_obstack_memory_used@@Base+0x5550>
  45bc10:	tst	w0, #0xff
  45bc14:	b.ne	45b544 <_obstack_memory_used@@Base+0xa134>  // b.any
  45bc18:	ldr	x0, [sp, #568]
  45bc1c:	mov	w1, #0xc                   	// #12
  45bc20:	str	w1, [sp, #292]
  45bc24:	cbnz	x0, 45ba50 <_obstack_memory_used@@Base+0xa640>
  45bc28:	mov	x28, #0x0                   	// #0
  45bc2c:	ldr	x27, [sp, #200]
  45bc30:	b	45bb4c <_obstack_memory_used@@Base+0xa73c>
  45bc34:	add	x2, sp, #0x200
  45bc38:	stp	x24, xzr, [sp, #328]
  45bc3c:	add	x28, sp, #0x148
  45bc40:	stp	x23, x25, [sp, #344]
  45bc44:	mov	x1, x28
  45bc48:	add	x0, sp, #0x180
  45bc4c:	stp	xzr, xzr, [x2, #-152]
  45bc50:	str	xzr, [sp, #376]
  45bc54:	bl	45ab48 <_obstack_memory_used@@Base+0x9738>
  45bc58:	mov	w19, w0
  45bc5c:	ldr	x0, [sp, #376]
  45bc60:	bl	4047b0 <free@plt>
  45bc64:	cbnz	w19, 45c130 <_obstack_memory_used@@Base+0xad20>
  45bc68:	ldr	x0, [x24]
  45bc6c:	cbz	x0, 45c068 <_obstack_memory_used@@Base+0xac58>
  45bc70:	ldr	x27, [sp, #200]
  45bc74:	ldr	x0, [sp, #568]
  45bc78:	bl	4047b0 <free@plt>
  45bc7c:	str	x25, [sp, #552]
  45bc80:	str	x23, [sp, #560]
  45bc84:	str	x24, [sp, #568]
  45bc88:	ldr	x0, [sp, #128]
  45bc8c:	cbz	x0, 45bee8 <_obstack_memory_used@@Base+0xaad8>
  45bc90:	cmp	x0, #0x1
  45bc94:	b.ls	45bcbc <_obstack_memory_used@@Base+0xa8ac>  // b.plast
  45bc98:	ldr	x1, [sp, #272]
  45bc9c:	mov	x2, x0
  45bca0:	mvni	v0.4s, #0x0
  45bca4:	add	x0, x1, #0x10
  45bca8:	add	x1, x1, x2, lsl #4
  45bcac:	nop
  45bcb0:	str	q0, [x0], #16
  45bcb4:	cmp	x1, x0
  45bcb8:	b.ne	45bcb0 <_obstack_memory_used@@Base+0xa8a0>  // b.any
  45bcbc:	ldr	x0, [sp, #120]
  45bcc0:	ldrb	w0, [x0, #56]
  45bcc4:	ldr	x1, [sp, #272]
  45bcc8:	tst	x0, #0x10
  45bccc:	ldr	x0, [sp, #128]
  45bcd0:	stp	xzr, x25, [x1]
  45bcd4:	mov	x1, #0x0                   	// #0
  45bcd8:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  45bcdc:	b.ne	45c304 <_obstack_memory_used@@Base+0xaef4>  // b.any
  45bce0:	ldrb	w3, [sp, #524]
  45bce4:	mov	x2, #0x0                   	// #0
  45bce8:	ldr	x0, [sp, #272]
  45bcec:	ldr	x4, [sp, #296]
  45bcf0:	ldr	x7, [sp, #408]
  45bcf4:	ldp	x5, x6, [sp, #432]
  45bcf8:	cbnz	w3, 45c3a8 <_obstack_memory_used@@Base+0xaf98>
  45bcfc:	ldr	x5, [sp, #128]
  45bd00:	b	45bd08 <_obstack_memory_used@@Base+0xa8f8>
  45bd04:	ldr	x1, [x0]
  45bd08:	cmn	x1, #0x1
  45bd0c:	b.eq	45bd24 <_obstack_memory_used@@Base+0xa914>  // b.none
  45bd10:	ldr	x3, [x0, #8]
  45bd14:	add	x1, x4, x1
  45bd18:	str	x1, [x0]
  45bd1c:	add	x1, x4, x3
  45bd20:	str	x1, [x0, #8]
  45bd24:	add	x2, x2, #0x1
  45bd28:	add	x0, x0, #0x10
  45bd2c:	cmp	x5, x2
  45bd30:	b.ne	45bd04 <_obstack_memory_used@@Base+0xa8f4>  // b.any
  45bd34:	ldr	x0, [sp, #232]
  45bd38:	cmp	x0, #0x0
  45bd3c:	b.le	45bd64 <_obstack_memory_used@@Base+0xa954>
  45bd40:	ldr	x0, [sp, #128]
  45bd44:	ldr	x1, [sp, #272]
  45bd48:	mvni	v0.4s, #0x0
  45bd4c:	add	x0, x1, x0, lsl #4
  45bd50:	ldr	x1, [sp, #232]
  45bd54:	add	x1, x0, x1, lsl #4
  45bd58:	str	q0, [x0], #16
  45bd5c:	cmp	x1, x0
  45bd60:	b.ne	45bd58 <_obstack_memory_used@@Base+0xa948>  // b.any
  45bd64:	ldr	x3, [x27, #224]
  45bd68:	ldr	x28, [sp, #568]
  45bd6c:	cbz	x3, 45bdc8 <_obstack_memory_used@@Base+0xa9b8>
  45bd70:	ldr	x0, [sp, #128]
  45bd74:	cmp	x0, #0x1
  45bd78:	b.ls	45bdc8 <_obstack_memory_used@@Base+0xa9b8>  // b.plast
  45bd7c:	ldr	x5, [sp, #272]
  45bd80:	sub	x4, x0, #0x1
  45bd84:	mov	x0, #0x0                   	// #0
  45bd88:	add	x2, x5, #0x10
  45bd8c:	nop
  45bd90:	ldr	x1, [x3, x0, lsl #3]
  45bd94:	cmp	x1, x0
  45bd98:	b.eq	45bdb8 <_obstack_memory_used@@Base+0xa9a8>  // b.none
  45bd9c:	add	x1, x5, x1, lsl #4
  45bda0:	ldr	x1, [x1, #16]
  45bda4:	str	x1, [x2]
  45bda8:	ldr	x1, [x3, x0, lsl #3]
  45bdac:	add	x1, x5, x1, lsl #4
  45bdb0:	ldr	x1, [x1, #24]
  45bdb4:	str	x1, [x2, #8]
  45bdb8:	add	x0, x0, #0x1
  45bdbc:	add	x2, x2, #0x10
  45bdc0:	cmp	x0, x4
  45bdc4:	b.ne	45bd90 <_obstack_memory_used@@Base+0xa980>  // b.any
  45bdc8:	ldp	x23, x24, [sp, #48]
  45bdcc:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45bdd0:	stp	x23, x24, [sp, #48]
  45bdd4:	cbz	x22, 45b110 <_obstack_memory_used@@Base+0x9d00>
  45bdd8:	ldr	x0, [sp, #392]
  45bddc:	mov	x1, x20
  45bde0:	bl	404530 <realloc@plt>
  45bde4:	cbz	x0, 45bf88 <_obstack_memory_used@@Base+0xab78>
  45bde8:	ldrb	w1, [x27, #176]
  45bdec:	add	x2, x27, #0xb8
  45bdf0:	ldrb	w3, [sp, #523]
  45bdf4:	str	x0, [sp, #392]
  45bdf8:	ubfx	x0, x1, #4, #1
  45bdfc:	str	x20, [sp, #448]
  45be00:	str	x2, [sp, #512]
  45be04:	strb	w0, [sp, #526]
  45be08:	cbnz	w3, 45b140 <_obstack_memory_used@@Base+0x9d30>
  45be0c:	b	45b128 <_obstack_memory_used@@Base+0x9d18>
  45be10:	ldrb	w0, [x19, #104]
  45be14:	ldr	w24, [sp, #280]
  45be18:	b	45b4e4 <_obstack_memory_used@@Base+0xa0d4>
  45be1c:	ldr	x0, [sp, #184]
  45be20:	cmp	x0, x19
  45be24:	b.gt	45b958 <_obstack_memory_used@@Base+0xa548>
  45be28:	ldr	x1, [sp, #224]
  45be2c:	mov	x0, x19
  45be30:	mov	w2, #0x0                   	// #0
  45be34:	cbz	x1, 45bef4 <_obstack_memory_used@@Base+0xaae4>
  45be38:	mov	x3, x1
  45be3c:	ldr	x4, [sp, #168]
  45be40:	ldp	x5, x6, [sp, #184]
  45be44:	ldr	x26, [sp, #208]
  45be48:	b	45be5c <_obstack_memory_used@@Base+0xaa4c>
  45be4c:	sub	x0, x0, #0x1
  45be50:	mov	w2, #0x1                   	// #1
  45be54:	cmp	x0, x5
  45be58:	b.lt	45bfbc <_obstack_memory_used@@Base+0xabac>  // b.tstop
  45be5c:	cmp	x4, x0
  45be60:	mov	x1, #0x0                   	// #0
  45be64:	b.le	45be6c <_obstack_memory_used@@Base+0xaa5c>
  45be68:	ldrb	w1, [x6, x0]
  45be6c:	ldrb	w1, [x3, x1]
  45be70:	ldrb	w1, [x26, x1]
  45be74:	cbz	w1, 45be4c <_obstack_memory_used@@Base+0xaa3c>
  45be78:	cbz	w2, 45b438 <_obstack_memory_used@@Base+0xa028>
  45be7c:	mov	x19, x0
  45be80:	str	x0, [sp, #296]
  45be84:	b	45b438 <_obstack_memory_used@@Base+0xa028>
  45be88:	ldr	x0, [sp, #136]
  45be8c:	mov	w2, #0x0                   	// #0
  45be90:	cmp	x0, x19
  45be94:	mov	x0, x19
  45be98:	b.le	45b42c <_obstack_memory_used@@Base+0xa01c>
  45be9c:	ldr	x5, [sp, #136]
  45bea0:	ldr	x4, [sp, #192]
  45bea4:	ldr	x26, [sp, #208]
  45bea8:	ldr	x3, [sp, #224]
  45beac:	nop
  45beb0:	ldrb	w1, [x4, x0]
  45beb4:	ldrb	w1, [x3, x1]
  45beb8:	ldrb	w1, [x26, x1]
  45bebc:	cbnz	w1, 45c030 <_obstack_memory_used@@Base+0xac20>
  45bec0:	add	x0, x0, #0x1
  45bec4:	mov	w2, #0x1                   	// #1
  45bec8:	cmp	x0, x5
  45becc:	b.ne	45beb0 <_obstack_memory_used@@Base+0xaaa0>  // b.any
  45bed0:	b	45b3e4 <_obstack_memory_used@@Base+0x9fd4>
  45bed4:	ldr	x27, [sp, #200]
  45bed8:	ldr	x1, [x27, #152]
  45bedc:	cbnz	x1, 45bba0 <_obstack_memory_used@@Base+0xa790>
  45bee0:	ldr	x1, [sp, #128]
  45bee4:	cbnz	x1, 45bcc4 <_obstack_memory_used@@Base+0xa8b4>
  45bee8:	ldp	x23, x24, [sp, #48]
  45beec:	ldr	x28, [sp, #568]
  45bef0:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45bef4:	ldr	x3, [sp, #168]
  45bef8:	ldp	x4, x5, [sp, #184]
  45befc:	ldr	x26, [sp, #208]
  45bf00:	b	45bf14 <_obstack_memory_used@@Base+0xab04>
  45bf04:	sub	x0, x0, #0x1
  45bf08:	mov	w2, #0x1                   	// #1
  45bf0c:	cmp	x4, x0
  45bf10:	b.gt	45bfbc <_obstack_memory_used@@Base+0xabac>
  45bf14:	cmp	x3, x0
  45bf18:	mov	x1, #0x0                   	// #0
  45bf1c:	b.le	45bf24 <_obstack_memory_used@@Base+0xab14>
  45bf20:	ldrb	w1, [x5, x0]
  45bf24:	ldrb	w1, [x26, x1]
  45bf28:	cbz	w1, 45bf04 <_obstack_memory_used@@Base+0xaaf4>
  45bf2c:	b	45be78 <_obstack_memory_used@@Base+0xaa68>
  45bf30:	ldrb	w0, [x27, #176]
  45bf34:	tbnz	w0, #1, 45b1e0 <_obstack_memory_used@@Base+0x9dd0>
  45bf38:	mov	x28, #0x0                   	// #0
  45bf3c:	str	xzr, [sp, #568]
  45bf40:	b	45b204 <_obstack_memory_used@@Base+0x9df4>
  45bf44:	ldr	x19, [x20, #80]
  45bf48:	cbnz	x19, 45b4c8 <_obstack_memory_used@@Base+0xa0b8>
  45bf4c:	ldr	w0, [sp, #292]
  45bf50:	str	w0, [sp, #152]
  45bf54:	cmp	w0, #0xc
  45bf58:	ldr	x27, [sp, #200]
  45bf5c:	b.eq	45bee8 <_obstack_memory_used@@Base+0xaad8>  // b.none
  45bf60:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45bf64:	add	x3, x3, #0x2c0
  45bf68:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  45bf6c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45bf70:	add	x3, x3, #0x30
  45bf74:	add	x1, x1, #0xff8
  45bf78:	add	x0, x0, #0x78
  45bf7c:	mov	w2, #0x435                 	// #1077
  45bf80:	bl	404ac0 <__assert_fail@plt>
  45bf84:	ldr	x27, [sp, #200]
  45bf88:	mov	w0, #0xc                   	// #12
  45bf8c:	str	w0, [sp, #152]
  45bf90:	ldp	x23, x24, [sp, #48]
  45bf94:	ldr	x28, [sp, #568]
  45bf98:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45bf9c:	ldr	x1, [x2, #16]
  45bfa0:	mov	x3, x25
  45bfa4:	add	x0, sp, #0x180
  45bfa8:	add	x2, x2, #0x18
  45bfac:	add	x20, x25, #0x1
  45bfb0:	bl	452fe0 <_obstack_memory_used@@Base+0x1bd0>
  45bfb4:	mov	x23, x0
  45bfb8:	b	45b8a0 <_obstack_memory_used@@Base+0xa490>
  45bfbc:	mov	w1, #0x1                   	// #1
  45bfc0:	str	w1, [sp, #152]
  45bfc4:	str	x0, [sp, #296]
  45bfc8:	ldr	x27, [sp, #200]
  45bfcc:	b	45bee8 <_obstack_memory_used@@Base+0xaad8>
  45bfd0:	ldp	x23, x24, [sp, #48]
  45bfd4:	ldr	x27, [sp, #200]
  45bfd8:	ldr	x28, [sp, #568]
  45bfdc:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45bfe0:	cmp	w0, #0xc
  45bfe4:	ldr	x27, [sp, #200]
  45bfe8:	b.eq	45bf8c <_obstack_memory_used@@Base+0xab7c>  // b.none
  45bfec:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45bff0:	add	x3, x3, #0x2c0
  45bff4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  45bff8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45bffc:	add	x3, x3, #0x30
  45c000:	add	x1, x1, #0xff8
  45c004:	add	x0, x0, #0x78
  45c008:	mov	w2, #0x46c                 	// #1132
  45c00c:	bl	404ac0 <__assert_fail@plt>
  45c010:	ldrsb	w0, [x19, #104]
  45c014:	tbnz	w0, #31, 45c090 <_obstack_memory_used@@Base+0xac80>
  45c018:	mov	x0, #0x1                   	// #1
  45c01c:	str	x0, [sp, #112]
  45c020:	ldr	w0, [sp, #156]
  45c024:	mov	x25, x27
  45c028:	cbnz	w0, 45b4f0 <_obstack_memory_used@@Base+0xa0e0>
  45c02c:	b	45b7ec <_obstack_memory_used@@Base+0xa3dc>
  45c030:	cbz	w2, 45b438 <_obstack_memory_used@@Base+0xa028>
  45c034:	mov	x19, x0
  45c038:	str	x0, [sp, #296]
  45c03c:	b	45b42c <_obstack_memory_used@@Base+0xa01c>
  45c040:	mov	x20, x0
  45c044:	b	45b570 <_obstack_memory_used@@Base+0xa160>
  45c048:	mov	x25, x26
  45c04c:	b	45b7ec <_obstack_memory_used@@Base+0xa3dc>
  45c050:	mov	w0, #0xc                   	// #12
  45c054:	mov	x28, #0x0                   	// #0
  45c058:	str	w0, [sp, #152]
  45c05c:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45c060:	ldr	x19, [x20, #88]
  45c064:	b	45bf48 <_obstack_memory_used@@Base+0xab38>
  45c068:	mov	x0, x24
  45c06c:	bl	4047b0 <free@plt>
  45c070:	b	45b92c <_obstack_memory_used@@Base+0xa51c>
  45c074:	ldr	x2, [x19, #80]
  45c078:	mov	w3, w0
  45c07c:	mov	x1, x20
  45c080:	add	x0, sp, #0x124
  45c084:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  45c088:	mov	x19, x0
  45c08c:	b	45bf48 <_obstack_memory_used@@Base+0xab38>
  45c090:	ldr	x1, [x19, #16]
  45c094:	mov	x3, x27
  45c098:	add	x2, x19, #0x18
  45c09c:	add	x0, sp, #0x180
  45c0a0:	bl	452fe0 <_obstack_memory_used@@Base+0x1bd0>
  45c0a4:	str	x0, [sp, #112]
  45c0a8:	cbz	x0, 45b4f0 <_obstack_memory_used@@Base+0xa0e0>
  45c0ac:	b	45c018 <_obstack_memory_used@@Base+0xac08>
  45c0b0:	ldr	x0, [sp, #192]
  45c0b4:	ldrb	w0, [x0, x1]
  45c0b8:	b	45b400 <_obstack_memory_used@@Base+0x9ff0>
  45c0bc:	add	x20, x19, #0x10
  45c0c0:	add	x21, x19, #0x18
  45c0c4:	mov	x1, x20
  45c0c8:	mov	x2, x21
  45c0cc:	add	x0, sp, #0x180
  45c0d0:	mov	x3, #0x0                   	// #0
  45c0d4:	bl	452dc0 <_obstack_memory_used@@Base+0x19b0>
  45c0d8:	str	w0, [sp, #292]
  45c0dc:	cbnz	w0, 45c25c <_obstack_memory_used@@Base+0xae4c>
  45c0e0:	ldrb	w0, [x19, #104]
  45c0e4:	tbnz	w0, #6, 45c0f0 <_obstack_memory_used@@Base+0xace0>
  45c0e8:	mov	w24, #0x0                   	// #0
  45c0ec:	b	45b4e4 <_obstack_memory_used@@Base+0xa0d4>
  45c0f0:	mov	x2, x21
  45c0f4:	mov	x1, x20
  45c0f8:	add	x0, sp, #0x180
  45c0fc:	bl	4599e0 <_obstack_memory_used@@Base+0x85d0>
  45c100:	str	w0, [sp, #292]
  45c104:	cbnz	w0, 45c25c <_obstack_memory_used@@Base+0xae4c>
  45c108:	ldrb	w0, [x19, #104]
  45c10c:	mov	w24, #0x0                   	// #0
  45c110:	b	45b4e4 <_obstack_memory_used@@Base+0xa0d4>
  45c114:	ldr	x19, [x20, #96]
  45c118:	b	45bf48 <_obstack_memory_used@@Base+0xab38>
  45c11c:	str	w0, [sp, #152]
  45c120:	ldp	x23, x24, [sp, #48]
  45c124:	ldr	x27, [sp, #200]
  45c128:	ldr	x28, [sp, #568]
  45c12c:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45c130:	mov	x21, #0x0                   	// #0
  45c134:	b	45bbd8 <_obstack_memory_used@@Base+0xa7c8>
  45c138:	mov	w1, #0xc                   	// #12
  45c13c:	mov	x0, x24
  45c140:	str	w1, [sp, #152]
  45c144:	ldr	x27, [sp, #200]
  45c148:	bl	4047b0 <free@plt>
  45c14c:	ldp	x23, x24, [sp, #48]
  45c150:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45c154:	mov	x21, #0x0                   	// #0
  45c158:	b	45c1e0 <_obstack_memory_used@@Base+0xadd0>
  45c15c:	cbz	x0, 45c1d0 <_obstack_memory_used@@Base+0xadc0>
  45c160:	add	x19, x1, #0x8
  45c164:	add	x28, x0, #0x8
  45c168:	ldr	x1, [x19, #8]
  45c16c:	ldr	x0, [x28, #8]
  45c170:	cmp	x1, #0x0
  45c174:	b.le	45c1f0 <_obstack_memory_used@@Base+0xade0>
  45c178:	cmp	x0, #0x0
  45c17c:	b.gt	45c264 <_obstack_memory_used@@Base+0xae54>
  45c180:	dup	v0.2d, x1
  45c184:	lsl	x28, x1, #3
  45c188:	mov	x0, x28
  45c18c:	str	q0, [sp, #304]
  45c190:	bl	404310 <malloc@plt>
  45c194:	str	x0, [sp, #320]
  45c198:	cbz	x0, 45bbc4 <_obstack_memory_used@@Base+0xa7b4>
  45c19c:	ldr	x1, [x19, #16]
  45c1a0:	mov	x2, x28
  45c1a4:	bl	403f70 <memcpy@plt>
  45c1a8:	str	wzr, [sp, #292]
  45c1ac:	add	x2, sp, #0x130
  45c1b0:	mov	x1, x27
  45c1b4:	add	x0, sp, #0x124
  45c1b8:	bl	457728 <_obstack_memory_used@@Base+0x6318>
  45c1bc:	str	x0, [x24, x21, lsl #3]
  45c1c0:	ldr	x0, [sp, #320]
  45c1c4:	bl	4047b0 <free@plt>
  45c1c8:	ldr	w19, [sp, #292]
  45c1cc:	cbnz	w19, 45bbc8 <_obstack_memory_used@@Base+0xa7b8>
  45c1d0:	add	x21, x21, #0x1
  45c1d4:	cmp	x21, x20
  45c1d8:	b.eq	45c2dc <_obstack_memory_used@@Base+0xaecc>  // b.none
  45c1dc:	ldr	x0, [x22, x21, lsl #3]
  45c1e0:	ldr	x1, [x24, x21, lsl #3]
  45c1e4:	cbnz	x1, 45c15c <_obstack_memory_used@@Base+0xad4c>
  45c1e8:	str	x0, [x24, x21, lsl #3]
  45c1ec:	b	45c1d0 <_obstack_memory_used@@Base+0xadc0>
  45c1f0:	cmp	x0, #0x0
  45c1f4:	b.gt	45c20c <_obstack_memory_used@@Base+0xadfc>
  45c1f8:	add	x2, sp, #0x130
  45c1fc:	str	wzr, [sp, #292]
  45c200:	stp	xzr, xzr, [sp, #304]
  45c204:	str	xzr, [sp, #320]
  45c208:	b	45c1b0 <_obstack_memory_used@@Base+0xada0>
  45c20c:	dup	v0.2d, x0
  45c210:	lsl	x19, x0, #3
  45c214:	mov	x0, x19
  45c218:	str	q0, [sp, #304]
  45c21c:	bl	404310 <malloc@plt>
  45c220:	str	x0, [sp, #320]
  45c224:	cbz	x0, 45bbc4 <_obstack_memory_used@@Base+0xa7b4>
  45c228:	ldr	x1, [x28, #16]
  45c22c:	mov	x2, x19
  45c230:	bl	403f70 <memcpy@plt>
  45c234:	str	wzr, [sp, #292]
  45c238:	add	x2, sp, #0x130
  45c23c:	b	45c1b0 <_obstack_memory_used@@Base+0xada0>
  45c240:	ldr	x0, [sp, #264]
  45c244:	str	x0, [sp, #144]
  45c248:	b	45b7d8 <_obstack_memory_used@@Base+0xa3c8>
  45c24c:	mov	w0, #0x1                   	// #1
  45c250:	str	w0, [sp, #152]
  45c254:	ldp	x23, x24, [sp, #48]
  45c258:	b	45bb58 <_obstack_memory_used@@Base+0xa748>
  45c25c:	sxtw	x25, w0
  45c260:	b	45b7ec <_obstack_memory_used@@Base+0xa3dc>
  45c264:	add	x0, x1, x0
  45c268:	str	x0, [sp, #304]
  45c26c:	lsl	x0, x0, #3
  45c270:	bl	404310 <malloc@plt>
  45c274:	str	x0, [sp, #320]
  45c278:	cbz	x0, 45bbc4 <_obstack_memory_used@@Base+0xa7b4>
  45c27c:	sub	x8, x0, #0x8
  45c280:	mov	x3, #0x0                   	// #0
  45c284:	mov	x5, #0x0                   	// #0
  45c288:	mov	x4, #0x0                   	// #0
  45c28c:	ldr	x1, [x19, #16]
  45c290:	ldr	x7, [x28, #16]
  45c294:	b	45c2bc <_obstack_memory_used@@Base+0xaeac>
  45c298:	cinc	x3, x3, eq  // eq = none
  45c29c:	add	x4, x4, #0x1
  45c2a0:	str	x2, [x8, x5, lsl #3]
  45c2a4:	ldr	x2, [x19, #8]
  45c2a8:	ldr	x6, [x28, #8]
  45c2ac:	cmp	x4, x2
  45c2b0:	b.ge	45c2ec <_obstack_memory_used@@Base+0xaedc>  // b.tcont
  45c2b4:	cmp	x6, x3
  45c2b8:	b.le	45c340 <_obstack_memory_used@@Base+0xaf30>
  45c2bc:	ldr	x2, [x1, x4, lsl #3]
  45c2c0:	add	x5, x5, #0x1
  45c2c4:	ldr	x6, [x7, x3, lsl #3]
  45c2c8:	cmp	x2, x6
  45c2cc:	b.le	45c298 <_obstack_memory_used@@Base+0xae88>
  45c2d0:	add	x3, x3, #0x1
  45c2d4:	str	x6, [x8, x5, lsl #3]
  45c2d8:	b	45c2a4 <_obstack_memory_used@@Base+0xae94>
  45c2dc:	mov	x0, x22
  45c2e0:	ldr	x27, [sp, #200]
  45c2e4:	bl	4047b0 <free@plt>
  45c2e8:	b	45bc74 <_obstack_memory_used@@Base+0xa864>
  45c2ec:	cmp	x6, x3
  45c2f0:	b.gt	45c374 <_obstack_memory_used@@Base+0xaf64>
  45c2f4:	add	x2, sp, #0x130
  45c2f8:	str	wzr, [sp, #292]
  45c2fc:	str	x5, [sp, #312]
  45c300:	b	45c1b0 <_obstack_memory_used@@Base+0xada0>
  45c304:	ldrb	w0, [x27, #176]
  45c308:	tbz	w0, #0, 45c31c <_obstack_memory_used@@Base+0xaf0c>
  45c30c:	ldr	x0, [x27, #152]
  45c310:	cmp	x0, #0x0
  45c314:	cset	w0, gt
  45c318:	str	w0, [sp, #284]
  45c31c:	ldp	x0, x2, [sp, #120]
  45c320:	add	x1, sp, #0x180
  45c324:	ldrb	w4, [sp, #284]
  45c328:	ldr	x19, [sp, #272]
  45c32c:	mov	x3, x19
  45c330:	bl	458660 <_obstack_memory_used@@Base+0x7250>
  45c334:	cbnz	w0, 45bf8c <_obstack_memory_used@@Base+0xab7c>
  45c338:	ldr	x1, [x19]
  45c33c:	b	45bce0 <_obstack_memory_used@@Base+0xa8d0>
  45c340:	sub	x2, x2, x4
  45c344:	add	x1, x1, x4, lsl #3
  45c348:	add	x0, x0, x5, lsl #3
  45c34c:	str	x5, [sp, #112]
  45c350:	lsl	x2, x2, #3
  45c354:	str	x4, [sp, #144]
  45c358:	bl	403f70 <memcpy@plt>
  45c35c:	ldr	x0, [x19, #8]
  45c360:	ldr	x4, [sp, #144]
  45c364:	ldr	x5, [sp, #112]
  45c368:	sub	x4, x0, x4
  45c36c:	add	x5, x5, x4
  45c370:	b	45c2f4 <_obstack_memory_used@@Base+0xaee4>
  45c374:	sub	x2, x6, x3
  45c378:	add	x1, x7, x3, lsl #3
  45c37c:	add	x0, x0, x5, lsl #3
  45c380:	str	x5, [sp, #112]
  45c384:	lsl	x2, x2, #3
  45c388:	str	x3, [sp, #144]
  45c38c:	bl	403f70 <memcpy@plt>
  45c390:	ldr	x0, [x28, #8]
  45c394:	ldr	x3, [sp, #144]
  45c398:	ldr	x5, [sp, #112]
  45c39c:	sub	x3, x0, x3
  45c3a0:	add	x5, x5, x3
  45c3a4:	b	45c2f4 <_obstack_memory_used@@Base+0xaee4>
  45c3a8:	ldr	x9, [sp, #128]
  45c3ac:	b	45c3b4 <_obstack_memory_used@@Base+0xafa4>
  45c3b0:	ldr	x1, [x0]
  45c3b4:	cmn	x1, #0x1
  45c3b8:	b.eq	45c3ec <_obstack_memory_used@@Base+0xafdc>  // b.none
  45c3bc:	cmp	x5, x1
  45c3c0:	mov	x3, x6
  45c3c4:	ldr	x8, [x0, #8]
  45c3c8:	b.eq	45c3d0 <_obstack_memory_used@@Base+0xafc0>  // b.none
  45c3cc:	ldr	x3, [x7, x1, lsl #3]
  45c3d0:	str	x3, [x0]
  45c3d4:	cmp	x5, x8
  45c3d8:	b.eq	45c400 <_obstack_memory_used@@Base+0xaff0>  // b.none
  45c3dc:	ldr	x1, [x7, x8, lsl #3]
  45c3e0:	add	x3, x4, x3
  45c3e4:	add	x1, x4, x1
  45c3e8:	stp	x3, x1, [x0]
  45c3ec:	add	x2, x2, #0x1
  45c3f0:	add	x0, x0, #0x10
  45c3f4:	cmp	x2, x9
  45c3f8:	b.ne	45c3b0 <_obstack_memory_used@@Base+0xafa0>  // b.any
  45c3fc:	b	45bd34 <_obstack_memory_used@@Base+0xa924>
  45c400:	mov	x1, x6
  45c404:	b	45c3e0 <_obstack_memory_used@@Base+0xafd0>
  45c408:	ldr	x0, [sp, #128]
  45c40c:	ldr	x27, [sp, #200]
  45c410:	b	45bc90 <_obstack_memory_used@@Base+0xa880>
  45c414:	nop
  45c418:	stp	x29, x30, [sp, #-288]!
  45c41c:	mov	x29, sp
  45c420:	stp	x19, x20, [sp, #16]
  45c424:	mov	x20, x2
  45c428:	ldrb	w19, [x2, #8]
  45c42c:	stp	x21, x22, [sp, #32]
  45c430:	mov	x21, x1
  45c434:	mov	x22, x3
  45c438:	stp	x25, x26, [sp, #64]
  45c43c:	cmp	w19, #0x13
  45c440:	mov	x26, x0
  45c444:	stp	x27, x28, [sp, #80]
  45c448:	str	x5, [sp, #136]
  45c44c:	ldr	x28, [x1]
  45c450:	b.hi	45c664 <_obstack_memory_used@@Base+0xb254>  // b.pmore
  45c454:	cmp	w19, #0x11
  45c458:	b.hi	45d7fc <_obstack_memory_used@@Base+0xc3ec>  // b.pmore
  45c45c:	cmp	w19, #0x8
  45c460:	b.eq	45d870 <_obstack_memory_used@@Base+0xc460>  // b.none
  45c464:	b.ls	45c960 <_obstack_memory_used@@Base+0xb550>  // b.plast
  45c468:	cmp	w19, #0xb
  45c46c:	b.eq	45d7fc <_obstack_memory_used@@Base+0xc3ec>  // b.none
  45c470:	cmp	w19, #0xc
  45c474:	b.ne	45c940 <_obstack_memory_used@@Base+0xb530>  // b.any
  45c478:	stp	x23, x24, [sp, #48]
  45c47c:	mov	w0, #0x30f                 	// #783
  45c480:	ldr	w23, [x2]
  45c484:	tst	w23, w0
  45c488:	b.eq	45c4bc <_obstack_memory_used@@Base+0xb0ac>  // b.none
  45c48c:	ldrb	w0, [x28, #176]
  45c490:	tbnz	w0, #4, 45c4bc <_obstack_memory_used@@Base+0xb0ac>
  45c494:	orr	w0, w0, #0x10
  45c498:	strb	w0, [x28, #176]
  45c49c:	mov	w1, w0
  45c4a0:	tbnz	w0, #3, 45e56c <_obstack_memory_used@@Base+0xd15c>
  45c4a4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45c4a8:	ldr	q0, [x0, #1472]
  45c4ac:	stur	q0, [x28, #184]
  45c4b0:	tbz	w1, #2, 45e4fc <_obstack_memory_used@@Base+0xd0ec>
  45c4b4:	stp	xzr, xzr, [x28, #200]
  45c4b8:	ldr	w23, [x2]
  45c4bc:	sub	w0, w23, #0x100
  45c4c0:	tst	w0, #0xfffffeff
  45c4c4:	b.ne	45da84 <_obstack_memory_used@@Base+0xc674>  // b.any
  45c4c8:	cmp	w23, #0x100
  45c4cc:	b.eq	45dda8 <_obstack_memory_used@@Base+0xc998>  // b.none
  45c4d0:	mov	w0, #0x5                   	// #5
  45c4d4:	str	w0, [x20]
  45c4d8:	ldr	w0, [x28, #128]
  45c4dc:	cmp	w0, #0xf
  45c4e0:	b.eq	45e148 <_obstack_memory_used@@Base+0xcd38>  // b.none
  45c4e4:	mov	x23, #0x8                   	// #8
  45c4e8:	mov	w2, #0x40                  	// #64
  45c4ec:	add	w3, w0, #0x1
  45c4f0:	smaddl	x2, w0, w2, x23
  45c4f4:	ldr	x23, [x28, #112]
  45c4f8:	sbfiz	x0, x0, #6, #32
  45c4fc:	add	x1, x23, x0
  45c500:	str	w3, [x28, #128]
  45c504:	movi	v0.4s, #0x0
  45c508:	add	x4, x0, #0x20
  45c50c:	add	x4, x23, x4
  45c510:	add	x23, x23, x2
  45c514:	str	xzr, [x1, #24]
  45c518:	mov	x5, #0xffffffffffffffff    	// #-1
  45c51c:	stur	q0, [x1, #8]
  45c520:	ldp	x2, x3, [x20]
  45c524:	stp	x2, x3, [x1, #48]
  45c528:	ldrb	w2, [x4, #26]
  45c52c:	and	w2, w2, #0xfffffff3
  45c530:	strb	w2, [x4, #26]
  45c534:	str	x5, [x1, #64]
  45c538:	str	q0, [x1, #32]
  45c53c:	mov	w0, #0xa                   	// #10
  45c540:	str	w0, [x20]
  45c544:	ldr	w0, [x28, #128]
  45c548:	cmp	w0, #0xf
  45c54c:	b.eq	45e11c <_obstack_memory_used@@Base+0xcd0c>  // b.none
  45c550:	mov	x1, #0x8                   	// #8
  45c554:	mov	w19, #0x40                  	// #64
  45c558:	add	w2, w0, #0x1
  45c55c:	smaddl	x19, w0, w19, x1
  45c560:	ldr	x1, [x28, #112]
  45c564:	sbfiz	x0, x0, #6, #32
  45c568:	add	x4, x1, x0
  45c56c:	str	w2, [x28, #128]
  45c570:	movi	v0.4s, #0x0
  45c574:	add	x5, x0, #0x20
  45c578:	add	x5, x1, x5
  45c57c:	add	x19, x1, x19
  45c580:	str	xzr, [x4, #24]
  45c584:	mov	x6, #0xffffffffffffffff    	// #-1
  45c588:	stur	q0, [x4, #8]
  45c58c:	ldp	x2, x3, [x20]
  45c590:	stp	x2, x3, [x4, #48]
  45c594:	ldrb	w1, [x5, #26]
  45c598:	and	w1, w1, #0xfffffff3
  45c59c:	strb	w1, [x5, #26]
  45c5a0:	str	x6, [x4, #64]
  45c5a4:	str	q0, [x4, #32]
  45c5a8:	ldr	w2, [x28, #128]
  45c5ac:	cmp	w2, #0xf
  45c5b0:	b.eq	45e0ec <_obstack_memory_used@@Base+0xccdc>  // b.none
  45c5b4:	sbfiz	x1, x2, #6, #32
  45c5b8:	sxtw	x0, w2
  45c5bc:	ldr	x21, [x28, #112]
  45c5c0:	add	x6, x1, #0x8
  45c5c4:	add	w2, w2, #0x1
  45c5c8:	add	x1, x1, #0x30
  45c5cc:	lsl	x0, x0, #6
  45c5d0:	add	x1, x21, x1
  45c5d4:	add	x3, x21, x0
  45c5d8:	add	x4, x0, #0x20
  45c5dc:	str	w2, [x28, #128]
  45c5e0:	add	x2, x21, x4
  45c5e4:	mov	w5, #0xa                   	// #10
  45c5e8:	add	x6, x21, x6
  45c5ec:	stp	xzr, x23, [x3, #8]
  45c5f0:	mov	x4, #0xffffffffffffffff    	// #-1
  45c5f4:	str	x19, [x3, #24]
  45c5f8:	strb	w5, [x1, #8]
  45c5fc:	str	x6, [sp, #112]
  45c600:	ldrb	w1, [x2, #26]
  45c604:	and	w1, w1, #0xfffffff3
  45c608:	strb	w1, [x2, #26]
  45c60c:	stp	xzr, xzr, [x3, #32]
  45c610:	str	x4, [x3, #64]
  45c614:	cbz	x23, 45de20 <_obstack_memory_used@@Base+0xca10>
  45c618:	str	x6, [x23]
  45c61c:	cbz	x19, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45c620:	str	x6, [x19]
  45c624:	cbz	x6, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45c628:	mov	x1, x26
  45c62c:	mov	x2, x22
  45c630:	mov	x0, x20
  45c634:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45c638:	ldr	x1, [x26, #72]
  45c63c:	ldp	x23, x24, [sp, #48]
  45c640:	add	x0, x1, w0, sxtw
  45c644:	str	x0, [x26, #72]
  45c648:	ldp	x19, x20, [sp, #16]
  45c64c:	ldp	x21, x22, [sp, #32]
  45c650:	ldp	x25, x26, [sp, #64]
  45c654:	ldp	x27, x28, [sp, #80]
  45c658:	ldr	x0, [sp, #112]
  45c65c:	ldp	x29, x30, [sp], #288
  45c660:	ret
  45c664:	cmp	w19, #0x21
  45c668:	b.hi	45cb18 <_obstack_memory_used@@Base+0xb708>  // b.pmore
  45c66c:	cmp	w19, #0x1f
  45c670:	b.hi	45d850 <_obstack_memory_used@@Base+0xc440>  // b.pmore
  45c674:	cmp	w19, #0x17
  45c678:	b.eq	45d7f8 <_obstack_memory_used@@Base+0xc3e8>  // b.none
  45c67c:	cmp	w19, #0x18
  45c680:	b.ne	45c9f8 <_obstack_memory_used@@Base+0xb5e8>  // b.any
  45c684:	mov	w0, #0x1                   	// #1
  45c688:	strb	w0, [x20, #8]
  45c68c:	ldr	w0, [x28, #128]
  45c690:	cmp	w0, #0xf
  45c694:	b.eq	45daf4 <_obstack_memory_used@@Base+0xc6e4>  // b.none
  45c698:	ldr	x21, [x28, #112]
  45c69c:	sbfiz	x1, x0, #6, #32
  45c6a0:	movi	v0.4s, #0x0
  45c6a4:	add	w2, w0, #0x1
  45c6a8:	add	x4, x21, x1
  45c6ac:	str	w2, [x28, #128]
  45c6b0:	mov	w2, #0x40                  	// #64
  45c6b4:	add	x5, x1, #0x20
  45c6b8:	add	x5, x21, x5
  45c6bc:	mov	x6, #0xffffffffffffffff    	// #-1
  45c6c0:	str	xzr, [x4, #24]
  45c6c4:	smaddl	x0, w0, w2, x21
  45c6c8:	stur	q0, [x4, #8]
  45c6cc:	adds	x0, x0, #0x8
  45c6d0:	ldp	x2, x3, [x20]
  45c6d4:	stp	x2, x3, [x4, #48]
  45c6d8:	str	x0, [sp, #112]
  45c6dc:	ldrb	w0, [x5, #26]
  45c6e0:	and	w0, w0, #0xfffffff3
  45c6e4:	strb	w0, [x5, #26]
  45c6e8:	str	x6, [x4, #64]
  45c6ec:	str	q0, [x4, #32]
  45c6f0:	b.eq	45cd28 <_obstack_memory_used@@Base+0xb918>  // b.none
  45c6f4:	stp	x23, x24, [sp, #48]
  45c6f8:	mov	x2, x22
  45c6fc:	mov	x1, x26
  45c700:	mov	x0, x20
  45c704:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45c708:	ldr	x3, [x26, #72]
  45c70c:	ldrb	w1, [x20, #8]
  45c710:	cmp	w1, #0x12
  45c714:	sub	w2, w1, #0x12
  45c718:	cset	w24, eq  // eq = none
  45c71c:	add	x27, x3, w0, sxtw
  45c720:	cmp	w1, #0xb
  45c724:	str	x27, [x26, #72]
  45c728:	and	w2, w2, #0xff
  45c72c:	ccmp	w1, #0x17, #0x4, ne  // ne = any
  45c730:	ccmp	w2, #0x1, #0x0, ne  // ne = any
  45c734:	b.hi	45d708 <_obstack_memory_used@@Base+0xc2f8>  // b.pmore
  45c738:	and	x0, x22, #0x200000
  45c73c:	str	x0, [sp, #144]
  45c740:	and	x0, x22, #0x1000000
  45c744:	str	x0, [sp, #128]
  45c748:	ldp	x2, x3, [x20]
  45c74c:	stp	x2, x3, [sp, #96]
  45c750:	cmp	w1, #0x17
  45c754:	b.eq	45cf20 <_obstack_memory_used@@Base+0xbb10>  // b.none
  45c758:	cmp	w1, #0x13
  45c75c:	mov	x2, x22
  45c760:	mov	x1, x26
  45c764:	mov	x0, x20
  45c768:	mov	x19, #0xffffffffffffffff    	// #-1
  45c76c:	cneg	x19, x19, eq  // eq = none
  45c770:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45c774:	ldr	x1, [x26, #72]
  45c778:	add	x0, x1, w0, sxtw
  45c77c:	str	x0, [x26, #72]
  45c780:	ldr	x0, [sp, #112]
  45c784:	cbz	x0, 45d0d4 <_obstack_memory_used@@Base+0xbcc4>
  45c788:	cbnz	w24, 45d594 <_obstack_memory_used@@Base+0xc184>
  45c78c:	mov	x24, x0
  45c790:	mov	x3, #0x0                   	// #0
  45c794:	mov	x23, #0x0                   	// #0
  45c798:	ldrb	w0, [x24, #48]
  45c79c:	cmp	w0, #0x11
  45c7a0:	b.eq	45cfac <_obstack_memory_used@@Base+0xbb9c>  // b.none
  45c7a4:	cmn	x19, #0x1
  45c7a8:	ldr	w2, [x28, #128]
  45c7ac:	cset	w6, eq  // eq = none
  45c7b0:	add	w6, w6, #0xa
  45c7b4:	cmp	w2, #0xf
  45c7b8:	b.eq	45d134 <_obstack_memory_used@@Base+0xbd24>  // b.none
  45c7bc:	sbfiz	x27, x2, #6, #32
  45c7c0:	sxtw	x0, w2
  45c7c4:	ldr	x25, [x28, #112]
  45c7c8:	add	x9, x27, #0x30
  45c7cc:	add	w2, w2, #0x1
  45c7d0:	add	x27, x27, #0x8
  45c7d4:	lsl	x0, x0, #6
  45c7d8:	add	x9, x25, x9
  45c7dc:	add	x4, x25, x0
  45c7e0:	add	x5, x0, #0x20
  45c7e4:	str	w2, [x28, #128]
  45c7e8:	add	x2, x25, x5
  45c7ec:	movi	v0.4s, #0x0
  45c7f0:	mov	x10, #0xffffffffffffffff    	// #-1
  45c7f4:	stp	xzr, x24, [x4, #8]
  45c7f8:	add	x27, x25, x27
  45c7fc:	str	xzr, [x4, #24]
  45c800:	strb	w6, [x9, #8]
  45c804:	ldrb	w5, [x2, #26]
  45c808:	and	w5, w5, #0xfffffff3
  45c80c:	strb	w5, [x2, #26]
  45c810:	str	x10, [x4, #64]
  45c814:	str	q0, [x4, #32]
  45c818:	str	x27, [x24]
  45c81c:	cbz	x27, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45c820:	add	x21, x3, #0x2
  45c824:	mov	x5, x27
  45c828:	cmp	x19, x21
  45c82c:	b.lt	45d014 <_obstack_memory_used@@Base+0xbc04>  // b.tstop
  45c830:	mov	x25, x24
  45c834:	ldr	w24, [x28, #128]
  45c838:	add	x6, sp, #0x100
  45c83c:	mov	x9, #0xffffffffffffffff    	// #-1
  45c840:	cmp	w24, #0xf
  45c844:	b.eq	45c8d4 <_obstack_memory_used@@Base+0xb4c4>  // b.none
  45c848:	ldr	x0, [x28, #112]
  45c84c:	sbfiz	x2, x24, #6, #32
  45c850:	add	w3, w24, #0x1
  45c854:	str	w3, [x28, #128]
  45c858:	add	x12, x0, x2
  45c85c:	add	x13, x2, #0x20
  45c860:	mov	w2, #0x40                  	// #64
  45c864:	add	x13, x0, x13
  45c868:	sxtw	x11, w24
  45c86c:	str	xzr, [x12, #24]
  45c870:	smaddl	x24, w24, w2, x0
  45c874:	stur	q0, [x12, #8]
  45c878:	add	x24, x24, #0x8
  45c87c:	ldp	x2, x3, [x25, #40]
  45c880:	stp	x2, x3, [x12, #48]
  45c884:	ldrb	w2, [x13, #26]
  45c888:	and	w2, w2, #0xfffffff3
  45c88c:	strb	w2, [x13, #26]
  45c890:	str	x9, [x12, #64]
  45c894:	str	q0, [x12, #32]
  45c898:	str	x24, [x6]
  45c89c:	cbz	x24, 45cd7c <_obstack_memory_used@@Base+0xb96c>
  45c8a0:	add	x0, x0, x11, lsl #6
  45c8a4:	str	x27, [x0, #8]
  45c8a8:	ldr	x27, [x6]
  45c8ac:	ldrb	w0, [x27, #50]
  45c8b0:	orr	w0, w0, #0x4
  45c8b4:	strb	w0, [x27, #50]
  45c8b8:	ldr	x0, [x25, #8]
  45c8bc:	cbz	x0, 45cd58 <_obstack_memory_used@@Base+0xb948>
  45c8c0:	add	x6, x27, #0x8
  45c8c4:	mov	x25, x0
  45c8c8:	ldr	w24, [x28, #128]
  45c8cc:	cmp	w24, #0xf
  45c8d0:	b.ne	45c848 <_obstack_memory_used@@Base+0xb438>  // b.any
  45c8d4:	mov	x0, #0x3c8                 	// #968
  45c8d8:	str	x5, [sp, #96]
  45c8dc:	str	x6, [sp, #120]
  45c8e0:	bl	404310 <malloc@plt>
  45c8e4:	movi	v0.4s, #0x0
  45c8e8:	mov	x9, #0xffffffffffffffff    	// #-1
  45c8ec:	ldr	x5, [sp, #96]
  45c8f0:	ldr	x6, [sp, #120]
  45c8f4:	cbz	x0, 45dfec <_obstack_memory_used@@Base+0xcbdc>
  45c8f8:	ldr	x2, [x28, #112]
  45c8fc:	str	x2, [x0]
  45c900:	mov	w1, #0x1                   	// #1
  45c904:	str	x0, [x28, #112]
  45c908:	str	w1, [x28, #128]
  45c90c:	add	x10, x0, #0x8
  45c910:	str	xzr, [x0, #24]
  45c914:	mov	x11, #0x0                   	// #0
  45c918:	stur	q0, [x0, #8]
  45c91c:	ldp	x2, x3, [x25, #40]
  45c920:	stp	x2, x3, [x0, #48]
  45c924:	ldrb	w2, [x0, #58]
  45c928:	str	q0, [x0, #32]
  45c92c:	and	w2, w2, #0xfffffff3
  45c930:	strb	w2, [x0, #58]
  45c934:	str	x9, [x0, #64]
  45c938:	str	x10, [x6]
  45c93c:	b	45c8a0 <_obstack_memory_used@@Base+0xb490>
  45c940:	cmp	w19, #0x9
  45c944:	b.ne	45cb58 <_obstack_memory_used@@Base+0xb748>  // b.any
  45c948:	tbnz	w22, #17, 45c684 <_obstack_memory_used@@Base+0xb274>
  45c94c:	ldr	x1, [sp, #136]
  45c950:	mov	w0, #0x10                  	// #16
  45c954:	str	xzr, [sp, #112]
  45c958:	str	w0, [x1]
  45c95c:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45c960:	cmp	w19, #0x4
  45c964:	b.eq	45d940 <_obstack_memory_used@@Base+0xc530>  // b.none
  45c968:	cmp	w19, #0x5
  45c96c:	b.ne	45cb78 <_obstack_memory_used@@Base+0xb768>  // b.any
  45c970:	ldr	w0, [x28, #128]
  45c974:	cmp	w0, #0xf
  45c978:	b.eq	45dbb8 <_obstack_memory_used@@Base+0xc7a8>  // b.none
  45c97c:	ldr	x21, [x28, #112]
  45c980:	sbfiz	x1, x0, #6, #32
  45c984:	movi	v0.4s, #0x0
  45c988:	add	w2, w0, #0x1
  45c98c:	add	x4, x21, x1
  45c990:	str	w2, [x28, #128]
  45c994:	mov	w2, #0x40                  	// #64
  45c998:	add	x5, x1, #0x20
  45c99c:	add	x5, x21, x5
  45c9a0:	mov	x6, #0xffffffffffffffff    	// #-1
  45c9a4:	str	xzr, [x4, #24]
  45c9a8:	smaddl	x0, w0, w2, x21
  45c9ac:	stur	q0, [x4, #8]
  45c9b0:	adds	x0, x0, #0x8
  45c9b4:	ldp	x2, x3, [x20]
  45c9b8:	stp	x2, x3, [x4, #48]
  45c9bc:	str	x0, [sp, #112]
  45c9c0:	ldrb	w0, [x5, #26]
  45c9c4:	and	w0, w0, #0xfffffff3
  45c9c8:	strb	w0, [x5, #26]
  45c9cc:	str	x6, [x4, #64]
  45c9d0:	str	q0, [x4, #32]
  45c9d4:	b.eq	45cd28 <_obstack_memory_used@@Base+0xb918>  // b.none
  45c9d8:	stp	x23, x24, [sp, #48]
  45c9dc:	ldr	w0, [x28, #180]
  45c9e0:	cmp	w0, #0x1
  45c9e4:	b.le	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45c9e8:	ldrb	w0, [x28, #176]
  45c9ec:	orr	w0, w0, #0x2
  45c9f0:	strb	w0, [x28, #176]
  45c9f4:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45c9f8:	cmp	w19, #0x14
  45c9fc:	b.ne	45cb58 <_obstack_memory_used@@Base+0xb748>  // b.any
  45ca00:	mov	x1, #0x1                   	// #1
  45ca04:	mov	x0, #0x20                  	// #32
  45ca08:	stp	x23, x24, [sp, #48]
  45ca0c:	str	xzr, [sp, #168]
  45ca10:	bl	4044c0 <calloc@plt>
  45ca14:	mov	x1, #0x1                   	// #1
  45ca18:	mov	x19, x0
  45ca1c:	mov	x0, #0x50                  	// #80
  45ca20:	bl	4044c0 <calloc@plt>
  45ca24:	cmp	x19, #0x0
  45ca28:	mov	x23, x0
  45ca2c:	cset	w0, eq  // eq = none
  45ca30:	cmp	x23, #0x0
  45ca34:	csinc	w0, w0, wzr, ne  // ne = any
  45ca38:	cbnz	w0, 45dc6c <_obstack_memory_used@@Base+0xc85c>
  45ca3c:	mov	x1, x26
  45ca40:	mov	x2, x22
  45ca44:	mov	x0, x20
  45ca48:	bl	451570 <_obstack_memory_used@@Base+0x160>
  45ca4c:	ldrb	w1, [x20, #8]
  45ca50:	mov	w27, w0
  45ca54:	cmp	w1, #0x2
  45ca58:	b.eq	45dff8 <_obstack_memory_used@@Base+0xcbe8>  // b.none
  45ca5c:	str	wzr, [sp, #120]
  45ca60:	cmp	w1, #0x19
  45ca64:	b.eq	45db64 <_obstack_memory_used@@Base+0xc754>  // b.none
  45ca68:	cmp	w1, #0x15
  45ca6c:	b.eq	45db58 <_obstack_memory_used@@Base+0xc748>  // b.none
  45ca70:	add	x24, sp, #0xe0
  45ca74:	mov	w5, #0x1                   	// #1
  45ca78:	mov	w21, #0x3                   	// #3
  45ca7c:	str	xzr, [sp, #96]
  45ca80:	str	xzr, [sp, #112]
  45ca84:	mov	w3, w27
  45ca88:	mov	x4, x22
  45ca8c:	mov	x2, x20
  45ca90:	mov	x1, x26
  45ca94:	add	x0, sp, #0xb0
  45ca98:	str	w21, [sp, #176]
  45ca9c:	str	x24, [sp, #184]
  45caa0:	bl	454d90 <_obstack_memory_used@@Base+0x3980>
  45caa4:	cbnz	w0, 45dd9c <_obstack_memory_used@@Base+0xc98c>
  45caa8:	mov	x1, x26
  45caac:	mov	x2, x22
  45cab0:	mov	x0, x20
  45cab4:	bl	451570 <_obstack_memory_used@@Base+0x160>
  45cab8:	ldr	w1, [sp, #176]
  45cabc:	mov	w27, w0
  45cac0:	sub	w0, w1, #0x2
  45cac4:	tst	w0, #0xfffffffd
  45cac8:	b.eq	45cae0 <_obstack_memory_used@@Base+0xb6d0>  // b.none
  45cacc:	ldrb	w0, [x20, #8]
  45cad0:	cmp	w0, #0x2
  45cad4:	b.eq	45dce4 <_obstack_memory_used@@Base+0xc8d4>  // b.none
  45cad8:	cmp	w0, #0x16
  45cadc:	b.eq	45de30 <_obstack_memory_used@@Base+0xca20>  // b.none
  45cae0:	cmp	w1, #0x2
  45cae4:	b.eq	45d730 <_obstack_memory_used@@Base+0xc320>  // b.none
  45cae8:	b.hi	45d728 <_obstack_memory_used@@Base+0xc318>  // b.pmore
  45caec:	cbz	w1, 45dcc4 <_obstack_memory_used@@Base+0xc8b4>
  45caf0:	ldr	x1, [x23, #40]
  45caf4:	ldr	x2, [sp, #112]
  45caf8:	ldr	x0, [x23]
  45cafc:	cmp	x1, x2
  45cb00:	b.eq	45dc94 <_obstack_memory_used@@Base+0xc884>  // b.none
  45cb04:	add	x2, x1, #0x1
  45cb08:	str	x2, [x23, #40]
  45cb0c:	ldr	w2, [sp, #184]
  45cb10:	str	w2, [x0, x1, lsl #2]
  45cb14:	b	45d764 <_obstack_memory_used@@Base+0xc354>
  45cb18:	cmp	w19, #0x23
  45cb1c:	b.hi	45cd3c <_obstack_memory_used@@Base+0xb92c>  // b.pmore
  45cb20:	ldr	x1, [x0, #120]
  45cb24:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45cb28:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45cb2c:	add	x3, x3, #0x7e8
  45cb30:	add	x2, x2, #0x40
  45cb34:	cset	w4, eq  // eq = none
  45cb38:	mov	x0, x28
  45cb3c:	bl	459358 <_obstack_memory_used@@Base+0x7f48>
  45cb40:	ldr	x1, [sp, #136]
  45cb44:	str	x0, [sp, #112]
  45cb48:	ldr	w1, [x1]
  45cb4c:	cmp	w1, #0x0
  45cb50:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  45cb54:	b.ne	45c6f4 <_obstack_memory_used@@Base+0xb2e4>  // b.any
  45cb58:	str	xzr, [sp, #112]
  45cb5c:	ldp	x19, x20, [sp, #16]
  45cb60:	ldp	x21, x22, [sp, #32]
  45cb64:	ldp	x25, x26, [sp, #64]
  45cb68:	ldp	x27, x28, [sp, #80]
  45cb6c:	ldr	x0, [sp, #112]
  45cb70:	ldp	x29, x30, [sp], #288
  45cb74:	ret
  45cb78:	cmp	w19, #0x1
  45cb7c:	b.ne	45cb58 <_obstack_memory_used@@Base+0xb748>  // b.any
  45cb80:	ldr	w0, [x28, #128]
  45cb84:	cmp	w0, #0xf
  45cb88:	b.eq	45dc14 <_obstack_memory_used@@Base+0xc804>  // b.none
  45cb8c:	ldr	x21, [x28, #112]
  45cb90:	sbfiz	x1, x0, #6, #32
  45cb94:	movi	v0.4s, #0x0
  45cb98:	add	w2, w0, #0x1
  45cb9c:	add	x4, x21, x1
  45cba0:	str	w2, [x28, #128]
  45cba4:	mov	w2, #0x40                  	// #64
  45cba8:	add	x5, x1, #0x20
  45cbac:	add	x5, x21, x5
  45cbb0:	mov	x6, #0xffffffffffffffff    	// #-1
  45cbb4:	str	xzr, [x4, #24]
  45cbb8:	smaddl	x0, w0, w2, x21
  45cbbc:	stur	q0, [x4, #8]
  45cbc0:	adds	x0, x0, #0x8
  45cbc4:	ldp	x2, x3, [x20]
  45cbc8:	stp	x2, x3, [x4, #48]
  45cbcc:	str	x0, [sp, #112]
  45cbd0:	ldrb	w0, [x5, #26]
  45cbd4:	and	w0, w0, #0xfffffff3
  45cbd8:	strb	w0, [x5, #26]
  45cbdc:	str	x6, [x4, #64]
  45cbe0:	str	q0, [x4, #32]
  45cbe4:	b.eq	45cd28 <_obstack_memory_used@@Base+0xb918>  // b.none
  45cbe8:	stp	x23, x24, [sp, #48]
  45cbec:	ldr	w0, [x28, #180]
  45cbf0:	cmp	w0, #0x1
  45cbf4:	b.le	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45cbf8:	mov	x19, #0xffffffffffffffff    	// #-1
  45cbfc:	ldr	x24, [x26, #72]
  45cc00:	b	45cc10 <_obstack_memory_used@@Base+0xb800>
  45cc04:	str	x0, [x23]
  45cc08:	cbz	x0, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45cc0c:	str	x0, [sp, #112]
  45cc10:	ldr	x0, [x26, #104]
  45cc14:	cmp	x0, x24
  45cc18:	b.le	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45cc1c:	ldr	x0, [x26, #48]
  45cc20:	cmp	x0, x24
  45cc24:	b.eq	45c6f8 <_obstack_memory_used@@Base+0xb2e8>  // b.none
  45cc28:	ldr	x0, [x26, #16]
  45cc2c:	ldr	w0, [x0, x24, lsl #2]
  45cc30:	cmn	w0, #0x1
  45cc34:	b.ne	45c6f8 <_obstack_memory_used@@Base+0xb2e8>  // b.any
  45cc38:	mov	x2, x22
  45cc3c:	mov	x1, x26
  45cc40:	mov	x0, x20
  45cc44:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45cc48:	ldr	x2, [x26, #72]
  45cc4c:	movi	v0.4s, #0x0
  45cc50:	ldr	w1, [x28, #128]
  45cc54:	add	x24, x2, w0, sxtw
  45cc58:	str	x24, [x26, #72]
  45cc5c:	cmp	w1, #0xf
  45cc60:	b.eq	45dd6c <_obstack_memory_used@@Base+0xc95c>  // b.none
  45cc64:	mov	x0, #0x8                   	// #8
  45cc68:	mov	w23, #0x40                  	// #64
  45cc6c:	add	w2, w1, #0x1
  45cc70:	smaddl	x23, w1, w23, x0
  45cc74:	ldr	x0, [x28, #112]
  45cc78:	sbfiz	x1, x1, #6, #32
  45cc7c:	add	x4, x0, x1
  45cc80:	str	w2, [x28, #128]
  45cc84:	add	x5, x1, #0x20
  45cc88:	add	x23, x0, x23
  45cc8c:	add	x5, x0, x5
  45cc90:	str	xzr, [x4, #24]
  45cc94:	stur	q0, [x4, #8]
  45cc98:	ldp	x2, x3, [x20]
  45cc9c:	stp	x2, x3, [x4, #48]
  45cca0:	ldrb	w0, [x5, #26]
  45cca4:	and	w0, w0, #0xfffffff3
  45cca8:	strb	w0, [x5, #26]
  45ccac:	str	x19, [x4, #64]
  45ccb0:	str	q0, [x4, #32]
  45ccb4:	ldr	w3, [x28, #128]
  45ccb8:	cmp	w3, #0xf
  45ccbc:	b.eq	45dd3c <_obstack_memory_used@@Base+0xc92c>  // b.none
  45ccc0:	sbfiz	x2, x3, #6, #32
  45ccc4:	sxtw	x1, w3
  45ccc8:	ldr	x0, [x28, #112]
  45cccc:	add	x6, x2, #0x8
  45ccd0:	add	w3, w3, #0x1
  45ccd4:	add	x2, x2, #0x30
  45ccd8:	lsl	x1, x1, #6
  45ccdc:	add	x2, x0, x2
  45cce0:	add	x4, x0, x1
  45cce4:	add	x5, x1, #0x20
  45cce8:	str	w3, [x28, #128]
  45ccec:	add	x3, x0, x5
  45ccf0:	add	x0, x0, x6
  45ccf4:	mov	w5, #0x10                  	// #16
  45ccf8:	ldr	x6, [sp, #112]
  45ccfc:	stp	xzr, x6, [x4, #8]
  45cd00:	str	x23, [x4, #24]
  45cd04:	strb	w5, [x2, #8]
  45cd08:	ldrb	w2, [x3, #26]
  45cd0c:	and	w2, w2, #0xfffffff3
  45cd10:	strb	w2, [x3, #26]
  45cd14:	str	x19, [x4, #64]
  45cd18:	str	q0, [x4, #32]
  45cd1c:	str	x0, [x6]
  45cd20:	cbnz	x23, 45cc04 <_obstack_memory_used@@Base+0xb7f4>
  45cd24:	ldp	x23, x24, [sp, #48]
  45cd28:	mov	w0, #0xc                   	// #12
  45cd2c:	ldr	x1, [sp, #136]
  45cd30:	str	xzr, [sp, #112]
  45cd34:	str	w0, [x1]
  45cd38:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45cd3c:	cmp	w19, #0x24
  45cd40:	b.ne	45cb58 <_obstack_memory_used@@Base+0xb748>  // b.any
  45cd44:	mov	w0, #0x5                   	// #5
  45cd48:	str	w0, [x5]
  45cd4c:	str	xzr, [sp, #112]
  45cd50:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45cd54:	mov	x25, x2
  45cd58:	ldr	x2, [x25, #16]
  45cd5c:	cmp	x2, #0x0
  45cd60:	ccmp	x2, x0, #0x4, ne  // ne = any
  45cd64:	b.ne	45ce70 <_obstack_memory_used@@Base+0xba60>  // b.any
  45cd68:	ldr	x2, [x25]
  45cd6c:	mov	x0, x25
  45cd70:	ldr	x27, [x27]
  45cd74:	cbnz	x2, 45cd54 <_obstack_memory_used@@Base+0xb944>
  45cd78:	ldr	x24, [sp, #256]
  45cd7c:	ldr	w3, [x28, #128]
  45cd80:	cmp	w3, #0xf
  45cd84:	b.eq	45cea8 <_obstack_memory_used@@Base+0xba98>  // b.none
  45cd88:	sbfiz	x2, x3, #6, #32
  45cd8c:	sxtw	x0, w3
  45cd90:	ldr	x25, [x28, #112]
  45cd94:	add	x27, x2, #0x8
  45cd98:	add	w3, w3, #0x1
  45cd9c:	add	x2, x2, #0x30
  45cda0:	lsl	x0, x0, #6
  45cda4:	add	x2, x25, x2
  45cda8:	add	x6, x25, x0
  45cdac:	add	x9, x0, #0x20
  45cdb0:	str	w3, [x28, #128]
  45cdb4:	add	x3, x25, x9
  45cdb8:	mov	w10, #0x10                  	// #16
  45cdbc:	mov	x9, #0xffffffffffffffff    	// #-1
  45cdc0:	stp	xzr, x5, [x6, #8]
  45cdc4:	add	x27, x25, x27
  45cdc8:	str	x24, [x6, #24]
  45cdcc:	strb	w10, [x2, #8]
  45cdd0:	ldrb	w2, [x3, #26]
  45cdd4:	and	w2, w2, #0xfffffff3
  45cdd8:	strb	w2, [x3, #26]
  45cddc:	str	x9, [x6, #64]
  45cde0:	str	q0, [x6, #32]
  45cde4:	str	x27, [x5]
  45cde8:	cbz	x24, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45cdec:	str	x27, [x24]
  45cdf0:	cbz	x27, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45cdf4:	ldr	w3, [x28, #128]
  45cdf8:	cmp	w3, #0xf
  45cdfc:	b.eq	45cee4 <_obstack_memory_used@@Base+0xbad4>  // b.none
  45ce00:	sbfiz	x2, x3, #6, #32
  45ce04:	sxtw	x0, w3
  45ce08:	add	x5, x2, #0x8
  45ce0c:	add	w3, w3, #0x1
  45ce10:	add	x2, x2, #0x30
  45ce14:	lsl	x0, x0, #6
  45ce18:	add	x2, x25, x2
  45ce1c:	add	x9, x25, x0
  45ce20:	add	x10, x0, #0x20
  45ce24:	str	w3, [x28, #128]
  45ce28:	add	x3, x25, x10
  45ce2c:	mov	w11, #0xa                   	// #10
  45ce30:	mov	x10, #0xffffffffffffffff    	// #-1
  45ce34:	stp	xzr, x27, [x9, #8]
  45ce38:	add	x5, x25, x5
  45ce3c:	add	x21, x21, #0x1
  45ce40:	str	xzr, [x9, #24]
  45ce44:	cmp	x19, x21
  45ce48:	strb	w11, [x2, #8]
  45ce4c:	ldrb	w2, [x3, #26]
  45ce50:	and	w2, w2, #0xfffffff3
  45ce54:	strb	w2, [x3, #26]
  45ce58:	str	x10, [x9, #64]
  45ce5c:	str	q0, [x9, #32]
  45ce60:	str	x5, [x6, #8]
  45ce64:	b.lt	45d014 <_obstack_memory_used@@Base+0xbc04>  // b.tstop
  45ce68:	ldr	x27, [x24]
  45ce6c:	b	45c830 <_obstack_memory_used@@Base+0xb420>
  45ce70:	mov	x0, x2
  45ce74:	add	x6, x27, #0x10
  45ce78:	mov	x25, x0
  45ce7c:	b	45c8c8 <_obstack_memory_used@@Base+0xb4b8>
  45ce80:	str	xzr, [x9]
  45ce84:	nop
  45ce88:	ldr	x1, [sp, #136]
  45ce8c:	mov	w0, #0xc                   	// #12
  45ce90:	str	w0, [x1]
  45ce94:	ldr	x0, [sp, #112]
  45ce98:	str	xzr, [sp, #112]
  45ce9c:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45cea0:	ldp	x23, x24, [sp, #48]
  45cea4:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45cea8:	mov	x0, #0x3c8                 	// #968
  45ceac:	str	x5, [sp, #96]
  45ceb0:	bl	404310 <malloc@plt>
  45ceb4:	mov	x25, x0
  45ceb8:	cbz	x0, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45cebc:	ldr	x0, [x28, #112]
  45cec0:	str	x0, [x25]
  45cec4:	movi	v0.4s, #0x0
  45cec8:	mov	w3, #0x1                   	// #1
  45cecc:	mov	x2, #0x30                  	// #48
  45ced0:	mov	x27, #0x8                   	// #8
  45ced4:	mov	x0, #0x0                   	// #0
  45ced8:	str	x25, [x28, #112]
  45cedc:	ldr	x5, [sp, #96]
  45cee0:	b	45cda0 <_obstack_memory_used@@Base+0xb990>
  45cee4:	mov	x0, #0x3c8                 	// #968
  45cee8:	str	x6, [sp, #96]
  45ceec:	bl	404310 <malloc@plt>
  45cef0:	mov	x9, x0
  45cef4:	cbz	x0, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45cef8:	str	x25, [x9]
  45cefc:	mov	w3, #0x1                   	// #1
  45cf00:	movi	v0.4s, #0x0
  45cf04:	mov	x25, x9
  45cf08:	mov	x2, #0x30                  	// #48
  45cf0c:	mov	x5, #0x8                   	// #8
  45cf10:	mov	x0, #0x0                   	// #0
  45cf14:	str	x9, [x28, #112]
  45cf18:	ldr	x6, [sp, #96]
  45cf1c:	b	45ce14 <_obstack_memory_used@@Base+0xba04>
  45cf20:	mov	x19, #0xffffffffffffffff    	// #-1
  45cf24:	mov	x21, #0x8030                	// #32816
  45cf28:	mov	x2, x22
  45cf2c:	mov	x1, x26
  45cf30:	mov	x0, x20
  45cf34:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45cf38:	ldr	x3, [x26, #72]
  45cf3c:	ldrb	w1, [x20, #8]
  45cf40:	ldrb	w2, [x20]
  45cf44:	add	x0, x3, w0, sxtw
  45cf48:	str	x0, [x26, #72]
  45cf4c:	cmp	w1, #0x2
  45cf50:	b.eq	45d0f8 <_obstack_memory_used@@Base+0xbce8>  // b.none
  45cf54:	cmp	w1, #0x18
  45cf58:	b.eq	45d180 <_obstack_memory_used@@Base+0xbd70>  // b.none
  45cf5c:	cmp	w2, #0x2c
  45cf60:	b.eq	45d224 <_obstack_memory_used@@Base+0xbe14>  // b.none
  45cf64:	cmp	w1, #0x1
  45cf68:	b.eq	45cf74 <_obstack_memory_used@@Base+0xbb64>  // b.none
  45cf6c:	mov	x19, #0xfffffffffffffffe    	// #-2
  45cf70:	b	45cf28 <_obstack_memory_used@@Base+0xbb18>
  45cf74:	sub	w0, w2, #0x30
  45cf78:	and	w1, w0, #0xff
  45cf7c:	cmp	w1, #0x9
  45cf80:	ccmn	x19, #0x2, #0x4, ls  // ls = plast
  45cf84:	b.eq	45cf6c <_obstack_memory_used@@Base+0xbb5c>  // b.none
  45cf88:	cmn	x19, #0x1
  45cf8c:	b.eq	45d21c <_obstack_memory_used@@Base+0xbe0c>  // b.none
  45cf90:	add	x19, x19, x19, lsl #2
  45cf94:	and	x2, x2, #0xff
  45cf98:	add	x2, x2, x19, lsl #1
  45cf9c:	cmp	x2, x21
  45cfa0:	csel	x2, x2, x21, le
  45cfa4:	sub	x19, x2, #0x30
  45cfa8:	b	45cf28 <_obstack_memory_used@@Base+0xbb18>
  45cfac:	ldr	x5, [x24, #40]
  45cfb0:	mov	x0, x24
  45cfb4:	nop
  45cfb8:	mov	x2, x0
  45cfbc:	ldr	x0, [x0, #8]
  45cfc0:	cbnz	x0, 45cfb8 <_obstack_memory_used@@Base+0xbba8>
  45cfc4:	ldr	x0, [x2, #16]
  45cfc8:	cbnz	x0, 45cfb8 <_obstack_memory_used@@Base+0xbba8>
  45cfcc:	b	45cfec <_obstack_memory_used@@Base+0xbbdc>
  45cfd0:	ldr	x4, [x2]
  45cfd4:	cbz	x4, 45c7a4 <_obstack_memory_used@@Base+0xb394>
  45cfd8:	ldr	x0, [x4, #16]
  45cfdc:	cmp	x0, #0x0
  45cfe0:	ccmp	x2, x0, #0x4, ne  // ne = any
  45cfe4:	b.ne	45cfb8 <_obstack_memory_used@@Base+0xbba8>  // b.any
  45cfe8:	mov	x2, x4
  45cfec:	ldrb	w0, [x2, #48]
  45cff0:	cmp	w0, #0x11
  45cff4:	b.ne	45cfd0 <_obstack_memory_used@@Base+0xbbc0>  // b.any
  45cff8:	ldr	x0, [x2, #40]
  45cffc:	cmp	x5, x0
  45d000:	b.ne	45cfd0 <_obstack_memory_used@@Base+0xbbc0>  // b.any
  45d004:	ldrb	w0, [x2, #50]
  45d008:	orr	w0, w0, #0x8
  45d00c:	strb	w0, [x2, #50]
  45d010:	b	45cfd0 <_obstack_memory_used@@Base+0xbbc0>
  45d014:	cbz	x23, 45d178 <_obstack_memory_used@@Base+0xbd68>
  45d018:	ldr	w4, [x28, #128]
  45d01c:	cmp	w4, #0xf
  45d020:	b.eq	45d81c <_obstack_memory_used@@Base+0xc40c>  // b.none
  45d024:	sbfiz	x3, x4, #6, #32
  45d028:	sxtw	x2, w4
  45d02c:	add	x21, x3, #0x8
  45d030:	add	w4, w4, #0x1
  45d034:	add	x3, x3, #0x30
  45d038:	lsl	x2, x2, #6
  45d03c:	add	x3, x25, x3
  45d040:	add	x6, x25, x2
  45d044:	add	x9, x2, #0x20
  45d048:	str	w4, [x28, #128]
  45d04c:	add	x4, x25, x9
  45d050:	mov	w10, #0x10                  	// #16
  45d054:	mov	x9, #0xffffffffffffffff    	// #-1
  45d058:	stp	xzr, x23, [x6, #8]
  45d05c:	add	x1, x25, x21
  45d060:	str	x5, [x6, #24]
  45d064:	strb	w10, [x3, #8]
  45d068:	str	x1, [sp, #112]
  45d06c:	ldrb	w0, [x4, #26]
  45d070:	and	w0, w0, #0xfffffff3
  45d074:	strb	w0, [x4, #26]
  45d078:	stp	xzr, xzr, [x6, #32]
  45d07c:	str	x9, [x6, #64]
  45d080:	str	x1, [x23]
  45d084:	str	x1, [x5]
  45d088:	ldrb	w1, [x20, #8]
  45d08c:	ldr	x0, [sp, #128]
  45d090:	cmp	w1, #0xb
  45d094:	cset	w3, eq  // eq = none
  45d098:	cmp	w1, #0x17
  45d09c:	cset	w2, eq  // eq = none
  45d0a0:	cbz	x0, 45d0b0 <_obstack_memory_used@@Base+0xbca0>
  45d0a4:	cmp	w3, #0x0
  45d0a8:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  45d0ac:	b.ne	45d30c <_obstack_memory_used@@Base+0xbefc>  // b.any
  45d0b0:	subs	w0, w1, #0x12
  45d0b4:	cset	w24, eq  // eq = none
  45d0b8:	cmp	w3, #0x0
  45d0bc:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  45d0c0:	and	w0, w0, #0xff
  45d0c4:	ccmp	w0, #0x1, #0x0, eq  // eq = none
  45d0c8:	b.hi	45d708 <_obstack_memory_used@@Base+0xc2f8>  // b.pmore
  45d0cc:	ldr	x27, [x26, #72]
  45d0d0:	b	45c748 <_obstack_memory_used@@Base+0xb338>
  45d0d4:	ldr	x0, [sp, #136]
  45d0d8:	ldr	w0, [x0]
  45d0dc:	cbnz	w0, 45d128 <_obstack_memory_used@@Base+0xbd18>
  45d0e0:	str	xzr, [sp, #112]
  45d0e4:	b	45d088 <_obstack_memory_used@@Base+0xbc78>
  45d0e8:	cmn	x19, #0x2
  45d0ec:	b.eq	45d0f8 <_obstack_memory_used@@Base+0xbce8>  // b.none
  45d0f0:	cmp	w1, #0x1
  45d0f4:	b.eq	45e6d4 <_obstack_memory_used@@Base+0xd2c4>  // b.none
  45d0f8:	ldr	x0, [sp, #144]
  45d0fc:	cbz	x0, 45d1f4 <_obstack_memory_used@@Base+0xbde4>
  45d100:	str	x27, [x26, #72]
  45d104:	mov	w0, #0x1                   	// #1
  45d108:	ldp	x2, x3, [sp, #96]
  45d10c:	stp	x2, x3, [x20]
  45d110:	strb	w0, [x20, #8]
  45d114:	ldr	x0, [sp, #136]
  45d118:	ldr	w0, [x0]
  45d11c:	cbz	w0, 45d088 <_obstack_memory_used@@Base+0xbc78>
  45d120:	ldr	x0, [sp, #112]
  45d124:	cbnz	x0, 45d088 <_obstack_memory_used@@Base+0xbc78>
  45d128:	ldp	x23, x24, [sp, #48]
  45d12c:	str	xzr, [sp, #112]
  45d130:	b	45cb5c <_obstack_memory_used@@Base+0xb74c>
  45d134:	mov	x0, #0x3c8                 	// #968
  45d138:	str	x3, [sp, #96]
  45d13c:	str	w6, [sp, #120]
  45d140:	bl	404310 <malloc@plt>
  45d144:	mov	x25, x0
  45d148:	cbz	x0, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45d14c:	ldr	x0, [x28, #112]
  45d150:	str	x0, [x25]
  45d154:	ldr	w6, [sp, #120]
  45d158:	mov	x27, #0x8                   	// #8
  45d15c:	mov	w2, #0x1                   	// #1
  45d160:	mov	x9, #0x30                  	// #48
  45d164:	mov	x0, #0x0                   	// #0
  45d168:	str	x25, [x28, #112]
  45d16c:	ldr	x3, [sp, #96]
  45d170:	b	45c7d4 <_obstack_memory_used@@Base+0xb3c4>
  45d174:	mov	x5, x23
  45d178:	str	x5, [sp, #112]
  45d17c:	b	45d088 <_obstack_memory_used@@Base+0xbc78>
  45d180:	cmn	x19, #0x1
  45d184:	b.eq	45d200 <_obstack_memory_used@@Base+0xbdf0>  // b.none
  45d188:	cmn	x19, #0x2
  45d18c:	mov	x3, x19
  45d190:	b.eq	45dcb8 <_obstack_memory_used@@Base+0xc8a8>  // b.none
  45d194:	mov	x0, #0x7fff                	// #32767
  45d198:	cmp	x19, x0
  45d19c:	cset	x0, gt
  45d1a0:	cbnz	x0, 45d2fc <_obstack_memory_used@@Base+0xbeec>
  45d1a4:	mov	x1, x26
  45d1a8:	mov	x2, x22
  45d1ac:	mov	x0, x20
  45d1b0:	str	x3, [sp, #96]
  45d1b4:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45d1b8:	ldr	x1, [x26, #72]
  45d1bc:	add	x0, x1, w0, sxtw
  45d1c0:	str	x0, [x26, #72]
  45d1c4:	ldr	x1, [sp, #112]
  45d1c8:	cbz	x1, 45d0d4 <_obstack_memory_used@@Base+0xbcc4>
  45d1cc:	ldr	x3, [sp, #96]
  45d1d0:	orr	x0, x19, x3
  45d1d4:	cbnz	x0, 45d348 <_obstack_memory_used@@Base+0xbf38>
  45d1d8:	mov	x0, x1
  45d1dc:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45d1e0:	ldr	x0, [sp, #136]
  45d1e4:	ldr	w0, [x0]
  45d1e8:	cbnz	w0, 45ce94 <_obstack_memory_used@@Base+0xba84>
  45d1ec:	str	xzr, [sp, #112]
  45d1f0:	b	45d088 <_obstack_memory_used@@Base+0xbc78>
  45d1f4:	cmp	w1, #0x2
  45d1f8:	b.eq	45d9f8 <_obstack_memory_used@@Base+0xc5e8>  // b.none
  45d1fc:	nop
  45d200:	ldr	x1, [sp, #136]
  45d204:	mov	w0, #0xa                   	// #10
  45d208:	str	w0, [x1]
  45d20c:	ldr	x0, [sp, #112]
  45d210:	cbnz	x0, 45ce94 <_obstack_memory_used@@Base+0xba84>
  45d214:	ldp	x23, x24, [sp, #48]
  45d218:	b	45d12c <_obstack_memory_used@@Base+0xbd1c>
  45d21c:	sxtw	x19, w0
  45d220:	b	45cf28 <_obstack_memory_used@@Base+0xbb18>
  45d224:	cmn	x19, #0x1
  45d228:	b.ne	45d0e8 <_obstack_memory_used@@Base+0xbcd8>  // b.any
  45d22c:	cmp	w1, #0x1
  45d230:	b.ne	45d200 <_obstack_memory_used@@Base+0xbdf0>  // b.any
  45d234:	mov	x3, #0x0                   	// #0
  45d238:	mov	x19, #0xffffffffffffffff    	// #-1
  45d23c:	mov	x21, #0x8030                	// #32816
  45d240:	mov	x2, x22
  45d244:	mov	x1, x26
  45d248:	mov	x0, x20
  45d24c:	str	x3, [sp, #120]
  45d250:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45d254:	ldr	x4, [x26, #72]
  45d258:	ldrb	w1, [x20, #8]
  45d25c:	ldrb	w2, [x20]
  45d260:	add	x0, x4, w0, sxtw
  45d264:	str	x0, [x26, #72]
  45d268:	cmp	w1, #0x2
  45d26c:	b.eq	45d9f0 <_obstack_memory_used@@Base+0xc5e0>  // b.none
  45d270:	cmp	w2, #0x2c
  45d274:	ccmp	w1, #0x18, #0x4, ne  // ne = any
  45d278:	ldr	x3, [sp, #120]
  45d27c:	b.eq	45d2c8 <_obstack_memory_used@@Base+0xbeb8>  // b.none
  45d280:	cmp	w1, #0x1
  45d284:	b.eq	45d290 <_obstack_memory_used@@Base+0xbe80>  // b.none
  45d288:	mov	x19, #0xfffffffffffffffe    	// #-2
  45d28c:	b	45d240 <_obstack_memory_used@@Base+0xbe30>
  45d290:	sub	w0, w2, #0x30
  45d294:	and	w1, w0, #0xff
  45d298:	cmp	w1, #0x9
  45d29c:	ccmn	x19, #0x2, #0x4, ls  // ls = plast
  45d2a0:	b.eq	45d288 <_obstack_memory_used@@Base+0xbe78>  // b.none
  45d2a4:	cmn	x19, #0x1
  45d2a8:	b.eq	45db50 <_obstack_memory_used@@Base+0xc740>  // b.none
  45d2ac:	add	x19, x19, x19, lsl #2
  45d2b0:	and	x2, x2, #0xff
  45d2b4:	add	x2, x2, x19, lsl #1
  45d2b8:	cmp	x2, x21
  45d2bc:	csel	x2, x2, x21, le
  45d2c0:	sub	x19, x2, #0x30
  45d2c4:	b	45d240 <_obstack_memory_used@@Base+0xbe30>
  45d2c8:	cmn	x19, #0x2
  45d2cc:	b.eq	45dcb8 <_obstack_memory_used@@Base+0xc8a8>  // b.none
  45d2d0:	cmp	x19, x3
  45d2d4:	ccmn	x19, #0x1, #0x4, lt  // lt = tstop
  45d2d8:	b.ne	45d200 <_obstack_memory_used@@Base+0xbdf0>  // b.any
  45d2dc:	cmp	w1, #0x18
  45d2e0:	b.ne	45d200 <_obstack_memory_used@@Base+0xbdf0>  // b.any
  45d2e4:	cmn	x19, #0x1
  45d2e8:	b.ne	45d194 <_obstack_memory_used@@Base+0xbd84>  // b.any
  45d2ec:	mov	x0, #0x7fff                	// #32767
  45d2f0:	cmp	x3, x0
  45d2f4:	cset	x0, gt
  45d2f8:	cbz	x0, 45d1a4 <_obstack_memory_used@@Base+0xbd94>
  45d2fc:	ldr	x1, [sp, #136]
  45d300:	mov	w0, #0xf                   	// #15
  45d304:	str	w0, [x1]
  45d308:	b	45d20c <_obstack_memory_used@@Base+0xbdfc>
  45d30c:	ldr	x0, [sp, #112]
  45d310:	cbz	x0, 45d814 <_obstack_memory_used@@Base+0xc404>
  45d314:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45d318:	ldp	x23, x24, [sp, #48]
  45d31c:	mov	w0, #0xd                   	// #13
  45d320:	ldr	x1, [sp, #136]
  45d324:	str	xzr, [sp, #112]
  45d328:	ldp	x19, x20, [sp, #16]
  45d32c:	str	w0, [x1]
  45d330:	ldp	x21, x22, [sp, #32]
  45d334:	ldp	x25, x26, [sp, #64]
  45d338:	ldp	x27, x28, [sp, #80]
  45d33c:	ldr	x0, [sp, #112]
  45d340:	ldp	x29, x30, [sp], #288
  45d344:	ret
  45d348:	cmp	x3, #0x0
  45d34c:	b.le	45e6c8 <_obstack_memory_used@@Base+0xd2b8>
  45d350:	cmp	x3, #0x1
  45d354:	b.eq	45e578 <_obstack_memory_used@@Base+0xd168>  // b.none
  45d358:	movi	v0.4s, #0x0
  45d35c:	mov	x6, x1
  45d360:	ldr	x23, [x1]
  45d364:	mov	x24, x1
  45d368:	mov	x21, #0x2                   	// #2
  45d36c:	nop
  45d370:	ldr	w2, [x28, #128]
  45d374:	add	x25, sp, #0x100
  45d378:	mov	x27, #0xffffffffffffffff    	// #-1
  45d37c:	cmp	w2, #0xf
  45d380:	b.eq	45d414 <_obstack_memory_used@@Base+0xc004>  // b.none
  45d384:	nop
  45d388:	ldr	x0, [x28, #112]
  45d38c:	sbfiz	x4, x2, #6, #32
  45d390:	add	w5, w2, #0x1
  45d394:	str	w5, [x28, #128]
  45d398:	add	x11, x0, x4
  45d39c:	add	x12, x4, #0x20
  45d3a0:	mov	w4, #0x40                  	// #64
  45d3a4:	add	x12, x0, x12
  45d3a8:	sxtw	x13, w2
  45d3ac:	str	xzr, [x11, #24]
  45d3b0:	smaddl	x2, w2, w4, x0
  45d3b4:	stur	q0, [x11, #8]
  45d3b8:	add	x2, x2, #0x8
  45d3bc:	ldp	x4, x5, [x24, #40]
  45d3c0:	stp	x4, x5, [x11, #48]
  45d3c4:	ldrb	w4, [x12, #26]
  45d3c8:	and	w4, w4, #0xfffffff3
  45d3cc:	strb	w4, [x12, #26]
  45d3d0:	str	x27, [x11, #64]
  45d3d4:	str	q0, [x11, #32]
  45d3d8:	str	x2, [x25]
  45d3dc:	cbz	x2, 45d530 <_obstack_memory_used@@Base+0xc120>
  45d3e0:	add	x0, x0, x13, lsl #6
  45d3e4:	str	x23, [x0, #8]
  45d3e8:	ldr	x23, [x25]
  45d3ec:	ldrb	w0, [x23, #50]
  45d3f0:	orr	w0, w0, #0x4
  45d3f4:	strb	w0, [x23, #50]
  45d3f8:	ldr	x0, [x24, #8]
  45d3fc:	cbz	x0, 45d480 <_obstack_memory_used@@Base+0xc070>
  45d400:	add	x25, x23, #0x8
  45d404:	mov	x24, x0
  45d408:	ldr	w2, [x28, #128]
  45d40c:	cmp	w2, #0xf
  45d410:	b.ne	45d388 <_obstack_memory_used@@Base+0xbf78>  // b.any
  45d414:	mov	x0, #0x3c8                 	// #968
  45d418:	str	x6, [sp, #96]
  45d41c:	str	x3, [sp, #120]
  45d420:	bl	404310 <malloc@plt>
  45d424:	movi	v0.4s, #0x0
  45d428:	ldr	x6, [sp, #96]
  45d42c:	ldr	x3, [sp, #120]
  45d430:	cbz	x0, 45e4e8 <_obstack_memory_used@@Base+0xd0d8>
  45d434:	ldr	x2, [x28, #112]
  45d438:	str	x2, [x0]
  45d43c:	mov	w1, #0x1                   	// #1
  45d440:	str	x0, [x28, #112]
  45d444:	str	w1, [x28, #128]
  45d448:	add	x2, x0, #0x8
  45d44c:	str	xzr, [x0, #24]
  45d450:	mov	x13, #0x0                   	// #0
  45d454:	stur	q0, [x0, #8]
  45d458:	ldp	x4, x5, [x24, #40]
  45d45c:	stp	x4, x5, [x0, #48]
  45d460:	ldrb	w4, [x0, #58]
  45d464:	str	q0, [x0, #32]
  45d468:	and	w4, w4, #0xfffffff3
  45d46c:	strb	w4, [x0, #58]
  45d470:	str	x27, [x0, #64]
  45d474:	str	x2, [x25]
  45d478:	b	45d3e0 <_obstack_memory_used@@Base+0xbfd0>
  45d47c:	mov	x24, x2
  45d480:	ldr	x2, [x24, #16]
  45d484:	cmp	x2, #0x0
  45d488:	ccmp	x2, x0, #0x4, ne  // ne = any
  45d48c:	b.ne	45d584 <_obstack_memory_used@@Base+0xc174>  // b.any
  45d490:	ldr	x2, [x24]
  45d494:	mov	x0, x24
  45d498:	ldr	x23, [x23]
  45d49c:	cbnz	x2, 45d47c <_obstack_memory_used@@Base+0xc06c>
  45d4a0:	ldr	x24, [sp, #256]
  45d4a4:	ldr	w4, [x28, #128]
  45d4a8:	cmp	w4, #0xf
  45d4ac:	b.eq	45d540 <_obstack_memory_used@@Base+0xc130>  // b.none
  45d4b0:	sbfiz	x0, x4, #6, #32
  45d4b4:	sxtw	x2, w4
  45d4b8:	ldr	x1, [x28, #112]
  45d4bc:	add	x11, x0, #0x30
  45d4c0:	add	x10, x0, #0x8
  45d4c4:	add	w4, w4, #0x1
  45d4c8:	lsl	x2, x2, #6
  45d4cc:	add	x11, x1, x11
  45d4d0:	add	x0, x1, x2
  45d4d4:	add	x5, x2, #0x20
  45d4d8:	str	w4, [x28, #128]
  45d4dc:	add	x4, x1, x5
  45d4e0:	mov	w5, #0x10                  	// #16
  45d4e4:	mov	x12, #0xffffffffffffffff    	// #-1
  45d4e8:	stp	xzr, x6, [x0, #8]
  45d4ec:	add	x23, x1, x10
  45d4f0:	str	x24, [x0, #24]
  45d4f4:	strb	w5, [x11, #8]
  45d4f8:	ldrb	w5, [x4, #26]
  45d4fc:	and	w5, w5, #0xfffffff3
  45d500:	strb	w5, [x4, #26]
  45d504:	str	x12, [x0, #64]
  45d508:	str	q0, [x0, #32]
  45d50c:	str	x23, [x6]
  45d510:	cbz	x24, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45d514:	str	x23, [x24]
  45d518:	cbz	x23, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45d51c:	add	x21, x21, #0x1
  45d520:	cmp	x21, x3
  45d524:	b.gt	45d5a0 <_obstack_memory_used@@Base+0xc190>
  45d528:	mov	x6, x23
  45d52c:	b	45d370 <_obstack_memory_used@@Base+0xbf60>
  45d530:	ldr	w4, [x28, #128]
  45d534:	mov	x24, #0x0                   	// #0
  45d538:	cmp	w4, #0xf
  45d53c:	b.ne	45d4b0 <_obstack_memory_used@@Base+0xc0a0>  // b.any
  45d540:	mov	x0, #0x3c8                 	// #968
  45d544:	str	x6, [sp, #96]
  45d548:	str	x3, [sp, #120]
  45d54c:	bl	404310 <malloc@plt>
  45d550:	mov	x1, x0
  45d554:	cbz	x0, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45d558:	ldr	x0, [x28, #112]
  45d55c:	str	x0, [x1]
  45d560:	movi	v0.4s, #0x0
  45d564:	mov	w4, #0x1                   	// #1
  45d568:	mov	x10, #0x8                   	// #8
  45d56c:	mov	x11, #0x30                  	// #48
  45d570:	mov	x2, #0x0                   	// #0
  45d574:	str	x1, [x28, #112]
  45d578:	ldr	x6, [sp, #96]
  45d57c:	ldr	x3, [sp, #120]
  45d580:	b	45d4c8 <_obstack_memory_used@@Base+0xc0b8>
  45d584:	mov	x0, x2
  45d588:	add	x25, x23, #0x10
  45d58c:	mov	x24, x0
  45d590:	b	45d408 <_obstack_memory_used@@Base+0xbff8>
  45d594:	mov	x24, x0
  45d598:	mov	x23, x0
  45d59c:	mov	x3, #0x1                   	// #1
  45d5a0:	cmp	x3, x19
  45d5a4:	b.eq	45d174 <_obstack_memory_used@@Base+0xbd64>  // b.none
  45d5a8:	movi	v0.4s, #0x0
  45d5ac:	add	x9, sp, #0x100
  45d5b0:	mov	x27, #0xffffffffffffffff    	// #-1
  45d5b4:	ldr	x25, [x24]
  45d5b8:	b	45d5c4 <_obstack_memory_used@@Base+0xc1b4>
  45d5bc:	mov	x24, x0
  45d5c0:	add	x9, x25, #0x8
  45d5c4:	ldr	w2, [x28, #128]
  45d5c8:	cmp	w2, #0xf
  45d5cc:	b.eq	45d670 <_obstack_memory_used@@Base+0xc260>  // b.none
  45d5d0:	ldr	x0, [x28, #112]
  45d5d4:	sbfiz	x4, x2, #6, #32
  45d5d8:	add	w5, w2, #0x1
  45d5dc:	str	w5, [x28, #128]
  45d5e0:	add	x10, x0, x4
  45d5e4:	add	x11, x4, #0x20
  45d5e8:	mov	w4, #0x40                  	// #64
  45d5ec:	add	x11, x0, x11
  45d5f0:	sxtw	x12, w2
  45d5f4:	str	xzr, [x10, #24]
  45d5f8:	smaddl	x2, w2, w4, x0
  45d5fc:	stur	q0, [x10, #8]
  45d600:	add	x2, x2, #0x8
  45d604:	ldp	x4, x5, [x24, #40]
  45d608:	stp	x4, x5, [x10, #48]
  45d60c:	ldrb	w4, [x11, #26]
  45d610:	and	w4, w4, #0xfffffff3
  45d614:	strb	w4, [x11, #26]
  45d618:	str	x27, [x10, #64]
  45d61c:	str	q0, [x10, #32]
  45d620:	str	x2, [x9]
  45d624:	cbz	x2, 45ce88 <_obstack_memory_used@@Base+0xba78>
  45d628:	add	x0, x0, x12, lsl #6
  45d62c:	str	x25, [x0, #8]
  45d630:	ldr	x25, [x9]
  45d634:	ldrb	w0, [x25, #50]
  45d638:	orr	w0, w0, #0x4
  45d63c:	strb	w0, [x25, #50]
  45d640:	ldr	x0, [x24, #8]
  45d644:	cbnz	x0, 45d5bc <_obstack_memory_used@@Base+0xc1ac>
  45d648:	ldr	x2, [x24, #16]
  45d64c:	cmp	x2, #0x0
  45d650:	ccmp	x2, x0, #0x4, ne  // ne = any
  45d654:	b.eq	45d6ec <_obstack_memory_used@@Base+0xc2dc>  // b.none
  45d658:	mov	x24, x2
  45d65c:	ldr	w2, [x28, #128]
  45d660:	add	x9, x25, #0x10
  45d664:	cmp	w2, #0xf
  45d668:	b.ne	45d5d0 <_obstack_memory_used@@Base+0xc1c0>  // b.any
  45d66c:	nop
  45d670:	mov	x0, #0x3c8                 	// #968
  45d674:	str	x3, [sp, #96]
  45d678:	str	x9, [sp, #120]
  45d67c:	bl	404310 <malloc@plt>
  45d680:	movi	v0.4s, #0x0
  45d684:	ldr	x3, [sp, #96]
  45d688:	ldr	x9, [sp, #120]
  45d68c:	cbz	x0, 45ce80 <_obstack_memory_used@@Base+0xba70>
  45d690:	ldr	x2, [x28, #112]
  45d694:	str	x2, [x0]
  45d698:	mov	w1, #0x1                   	// #1
  45d69c:	str	x0, [x28, #112]
  45d6a0:	str	w1, [x28, #128]
  45d6a4:	add	x2, x0, #0x8
  45d6a8:	str	xzr, [x0, #24]
  45d6ac:	mov	x12, #0x0                   	// #0
  45d6b0:	stur	q0, [x0, #8]
  45d6b4:	ldp	x4, x5, [x24, #40]
  45d6b8:	stp	x4, x5, [x0, #48]
  45d6bc:	ldrb	w4, [x0, #58]
  45d6c0:	str	q0, [x0, #32]
  45d6c4:	and	w4, w4, #0xfffffff3
  45d6c8:	strb	w4, [x0, #58]
  45d6cc:	str	x27, [x0, #64]
  45d6d0:	str	x2, [x9]
  45d6d4:	b	45d628 <_obstack_memory_used@@Base+0xc218>
  45d6d8:	mov	x24, x2
  45d6dc:	ldr	x2, [x24, #16]
  45d6e0:	cmp	x2, #0x0
  45d6e4:	ccmp	x2, x0, #0x4, ne  // ne = any
  45d6e8:	b.ne	45d658 <_obstack_memory_used@@Base+0xc248>  // b.any
  45d6ec:	ldr	x2, [x24]
  45d6f0:	mov	x0, x24
  45d6f4:	ldr	x25, [x25]
  45d6f8:	cbnz	x2, 45d6d8 <_obstack_memory_used@@Base+0xc2c8>
  45d6fc:	ldr	x24, [sp, #256]
  45d700:	cbnz	x24, 45c798 <_obstack_memory_used@@Base+0xb388>
  45d704:	b	45ce88 <_obstack_memory_used@@Base+0xba78>
  45d708:	ldp	x19, x20, [sp, #16]
  45d70c:	ldp	x21, x22, [sp, #32]
  45d710:	ldp	x23, x24, [sp, #48]
  45d714:	ldp	x25, x26, [sp, #64]
  45d718:	ldp	x27, x28, [sp, #80]
  45d71c:	ldr	x0, [sp, #112]
  45d720:	ldp	x29, x30, [sp], #288
  45d724:	ret
  45d728:	cmp	w1, #0x3
  45d72c:	b.ne	45d780 <_obstack_memory_used@@Base+0xc370>  // b.any
  45d730:	ldr	x25, [sp, #184]
  45d734:	mov	x0, x25
  45d738:	bl	403ff0 <strlen@plt>
  45d73c:	cmp	x0, #0x1
  45d740:	b.ne	45e048 <_obstack_memory_used@@Base+0xcc38>  // b.any
  45d744:	ldr	x2, [sp, #136]
  45d748:	ldrb	w1, [x25]
  45d74c:	str	wzr, [x2]
  45d750:	ubfx	x2, x1, #6, #2
  45d754:	lsl	x0, x0, x1
  45d758:	ldr	x1, [x19, x2, lsl #3]
  45d75c:	orr	x0, x1, x0
  45d760:	str	x0, [x19, x2, lsl #3]
  45d764:	ldrb	w0, [x20, #8]
  45d768:	cmp	w0, #0x2
  45d76c:	b.eq	45dce4 <_obstack_memory_used@@Base+0xc8d4>  // b.none
  45d770:	cmp	w0, #0x15
  45d774:	b.eq	45e178 <_obstack_memory_used@@Base+0xcd68>  // b.none
  45d778:	mov	w5, #0x0                   	// #0
  45d77c:	b	45ca84 <_obstack_memory_used@@Base+0xb674>
  45d780:	cmp	w1, #0x4
  45d784:	b.ne	45e684 <_obstack_memory_used@@Base+0xd274>  // b.any
  45d788:	ldr	x0, [x26, #120]
  45d78c:	mov	x1, x19
  45d790:	ldr	x5, [sp, #184]
  45d794:	mov	x6, x22
  45d798:	add	x4, sp, #0xa8
  45d79c:	add	x3, x23, #0x48
  45d7a0:	add	x2, x23, #0x18
  45d7a4:	bl	453b18 <_obstack_memory_used@@Base+0x2708>
  45d7a8:	ldr	x1, [sp, #136]
  45d7ac:	str	w0, [x1]
  45d7b0:	cbz	w0, 45d764 <_obstack_memory_used@@Base+0xc354>
  45d7b4:	mov	x0, x19
  45d7b8:	bl	4047b0 <free@plt>
  45d7bc:	ldr	x0, [x23]
  45d7c0:	bl	4047b0 <free@plt>
  45d7c4:	ldr	x0, [x23, #8]
  45d7c8:	bl	4047b0 <free@plt>
  45d7cc:	ldr	x0, [x23, #16]
  45d7d0:	bl	4047b0 <free@plt>
  45d7d4:	ldr	x0, [x23, #24]
  45d7d8:	bl	4047b0 <free@plt>
  45d7dc:	mov	x0, x23
  45d7e0:	bl	4047b0 <free@plt>
  45d7e4:	ldr	x0, [sp, #136]
  45d7e8:	ldr	w0, [x0]
  45d7ec:	cbnz	w0, 45d128 <_obstack_memory_used@@Base+0xbd18>
  45d7f0:	str	xzr, [sp, #112]
  45d7f4:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45d7f8:	tbnz	w3, #24, 45d31c <_obstack_memory_used@@Base+0xbf0c>
  45d7fc:	tbnz	w22, #5, 45d31c <_obstack_memory_used@@Base+0xbf0c>
  45d800:	tbnz	w22, #4, 45dcf4 <_obstack_memory_used@@Base+0xc8e4>
  45d804:	cmp	w19, #0x9
  45d808:	b.ne	45c684 <_obstack_memory_used@@Base+0xb274>  // b.any
  45d80c:	tbnz	w22, #17, 45c684 <_obstack_memory_used@@Base+0xb274>
  45d810:	b	45c94c <_obstack_memory_used@@Base+0xb53c>
  45d814:	ldp	x23, x24, [sp, #48]
  45d818:	b	45d31c <_obstack_memory_used@@Base+0xbf0c>
  45d81c:	mov	x0, #0x3c8                 	// #968
  45d820:	str	x5, [sp, #96]
  45d824:	bl	404310 <malloc@plt>
  45d828:	ldr	x5, [sp, #96]
  45d82c:	cbz	x0, 45e6dc <_obstack_memory_used@@Base+0xd2cc>
  45d830:	str	x25, [x0]
  45d834:	mov	x3, #0x30                  	// #48
  45d838:	mov	x25, x0
  45d83c:	mov	w4, #0x1                   	// #1
  45d840:	mov	x21, #0x8                   	// #8
  45d844:	mov	x2, #0x0                   	// #0
  45d848:	str	x0, [x28, #112]
  45d84c:	b	45d038 <_obstack_memory_used@@Base+0xbc28>
  45d850:	cmp	w19, #0x21
  45d854:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45d858:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45d85c:	cset	w4, eq  // eq = none
  45d860:	add	x3, x3, #0xa0
  45d864:	add	x2, x2, #0x30
  45d868:	ldr	x1, [x0, #120]
  45d86c:	b	45cb38 <_obstack_memory_used@@Base+0xb728>
  45d870:	stp	x23, x24, [sp, #48]
  45d874:	orr	x2, x3, #0x800000
  45d878:	mov	x1, x0
  45d87c:	ldr	x23, [x21, #48]
  45d880:	mov	x0, x20
  45d884:	str	x4, [sp, #112]
  45d888:	mov	x19, #0x0                   	// #0
  45d88c:	add	x3, x23, #0x1
  45d890:	str	x3, [x21, #48]
  45d894:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45d898:	ldr	x2, [x26, #72]
  45d89c:	ldrb	w1, [x20, #8]
  45d8a0:	add	x0, x2, w0, sxtw
  45d8a4:	str	x0, [x26, #72]
  45d8a8:	cmp	w1, #0x9
  45d8ac:	b.ne	45da08 <_obstack_memory_used@@Base+0xc5f8>  // b.any
  45d8b0:	cmp	x23, #0x8
  45d8b4:	b.ls	45da68 <_obstack_memory_used@@Base+0xc658>  // b.plast
  45d8b8:	ldr	w0, [x28, #128]
  45d8bc:	cmp	w0, #0xf
  45d8c0:	b.eq	45e058 <_obstack_memory_used@@Base+0xcc48>  // b.none
  45d8c4:	sbfiz	x1, x0, #6, #32
  45d8c8:	sxtw	x3, w0
  45d8cc:	add	w2, w0, #0x1
  45d8d0:	add	x4, x1, #0x30
  45d8d4:	ldr	x0, [x28, #112]
  45d8d8:	add	x21, x1, #0x8
  45d8dc:	lsl	x1, x3, #6
  45d8e0:	add	x6, x0, x4
  45d8e4:	add	x4, x0, x1
  45d8e8:	add	x5, x1, #0x20
  45d8ec:	str	w2, [x28, #128]
  45d8f0:	add	x2, x0, x5
  45d8f4:	mov	w5, #0x11                  	// #17
  45d8f8:	add	x7, x0, x21
  45d8fc:	stp	xzr, x19, [x4, #8]
  45d900:	mov	x9, #0xffffffffffffffff    	// #-1
  45d904:	str	xzr, [x4, #24]
  45d908:	strb	w5, [x6, #8]
  45d90c:	str	x7, [sp, #112]
  45d910:	ldrb	w5, [x2, #26]
  45d914:	and	w5, w5, #0xfffffff3
  45d918:	strb	w5, [x2, #26]
  45d91c:	stp	xzr, xzr, [x4, #32]
  45d920:	str	x9, [x4, #64]
  45d924:	cbz	x19, 45d92c <_obstack_memory_used@@Base+0xc51c>
  45d928:	str	x7, [x19]
  45d92c:	ldr	x1, [sp, #112]
  45d930:	cbz	x1, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45d934:	add	x0, x0, x3, lsl #6
  45d938:	str	x23, [x0, #48]
  45d93c:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45d940:	ldr	x0, [x2]
  45d944:	mov	w19, #0x1                   	// #1
  45d948:	ldr	x1, [x28, #168]
  45d94c:	lsl	w0, w19, w0
  45d950:	sxtw	x0, w0
  45d954:	tst	x0, x1
  45d958:	b.eq	45e084 <_obstack_memory_used@@Base+0xcc74>  // b.none
  45d95c:	ldr	x2, [x28, #160]
  45d960:	ldr	w1, [x28, #128]
  45d964:	orr	x0, x2, x0
  45d968:	str	x0, [x28, #160]
  45d96c:	cmp	w1, #0xf
  45d970:	b.eq	45e094 <_obstack_memory_used@@Base+0xcc84>  // b.none
  45d974:	ldr	x21, [x28, #112]
  45d978:	sbfiz	x0, x1, #6, #32
  45d97c:	movi	v0.4s, #0x0
  45d980:	add	w2, w1, #0x1
  45d984:	add	x4, x21, x0
  45d988:	str	w2, [x28, #128]
  45d98c:	mov	w2, #0x40                  	// #64
  45d990:	add	x5, x0, #0x20
  45d994:	add	x5, x21, x5
  45d998:	mov	x6, #0xffffffffffffffff    	// #-1
  45d99c:	str	xzr, [x4, #24]
  45d9a0:	smaddl	x1, w1, w2, x21
  45d9a4:	stur	q0, [x4, #8]
  45d9a8:	adds	x1, x1, #0x8
  45d9ac:	ldp	x2, x3, [x20]
  45d9b0:	stp	x2, x3, [x4, #48]
  45d9b4:	str	x1, [sp, #112]
  45d9b8:	ldrb	w1, [x5, #26]
  45d9bc:	and	w1, w1, #0xfffffff3
  45d9c0:	strb	w1, [x5, #26]
  45d9c4:	str	x6, [x4, #64]
  45d9c8:	str	q0, [x4, #32]
  45d9cc:	b.eq	45cd28 <_obstack_memory_used@@Base+0xb918>  // b.none
  45d9d0:	stp	x23, x24, [sp, #48]
  45d9d4:	ldrb	w1, [x28, #176]
  45d9d8:	ldr	x0, [x28, #152]
  45d9dc:	orr	w1, w1, #0x2
  45d9e0:	strb	w1, [x28, #176]
  45d9e4:	add	x0, x0, #0x1
  45d9e8:	str	x0, [x28, #152]
  45d9ec:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45d9f0:	ldr	x0, [sp, #144]
  45d9f4:	cbnz	x0, 45d100 <_obstack_memory_used@@Base+0xbcf0>
  45d9f8:	ldr	x1, [sp, #136]
  45d9fc:	mov	w0, #0x9                   	// #9
  45da00:	str	w0, [x1]
  45da04:	b	45d20c <_obstack_memory_used@@Base+0xbdfc>
  45da08:	ldr	x4, [sp, #112]
  45da0c:	mov	x1, x21
  45da10:	ldr	x19, [sp, #136]
  45da14:	mov	x3, x22
  45da18:	mov	x2, x20
  45da1c:	mov	x0, x26
  45da20:	mov	x5, x19
  45da24:	add	x4, x4, #0x1
  45da28:	bl	45e9a0 <_obstack_memory_used@@Base+0xd590>
  45da2c:	mov	x1, x19
  45da30:	mov	x19, x0
  45da34:	ldr	w1, [x1]
  45da38:	cbnz	w1, 45d128 <_obstack_memory_used@@Base+0xbd18>
  45da3c:	ldrb	w1, [x20, #8]
  45da40:	cmp	w1, #0x9
  45da44:	b.eq	45d8b0 <_obstack_memory_used@@Base+0xc4a0>  // b.none
  45da48:	cbz	x0, 45da50 <_obstack_memory_used@@Base+0xc640>
  45da4c:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45da50:	ldr	x1, [sp, #136]
  45da54:	mov	w0, #0x8                   	// #8
  45da58:	str	xzr, [sp, #112]
  45da5c:	ldp	x23, x24, [sp, #48]
  45da60:	str	w0, [x1]
  45da64:	b	45cb5c <_obstack_memory_used@@Base+0xb74c>
  45da68:	mov	w0, #0x1                   	// #1
  45da6c:	ldr	x1, [x28, #168]
  45da70:	lsl	w0, w0, w23
  45da74:	sxtw	x0, w0
  45da78:	orr	x0, x1, x0
  45da7c:	str	x0, [x28, #168]
  45da80:	b	45d8b8 <_obstack_memory_used@@Base+0xc4a8>
  45da84:	ldr	w0, [x28, #128]
  45da88:	cmp	w0, #0xf
  45da8c:	b.eq	45e350 <_obstack_memory_used@@Base+0xcf40>  // b.none
  45da90:	ldr	x21, [x28, #112]
  45da94:	sbfiz	x1, x0, #6, #32
  45da98:	movi	v0.4s, #0x0
  45da9c:	add	w3, w0, #0x1
  45daa0:	add	x2, x21, x1
  45daa4:	str	w3, [x28, #128]
  45daa8:	mov	w4, #0x40                  	// #64
  45daac:	add	x3, x1, #0x20
  45dab0:	add	x3, x21, x3
  45dab4:	mov	x6, #0xffffffffffffffff    	// #-1
  45dab8:	str	xzr, [x2, #24]
  45dabc:	smaddl	x0, w0, w4, x21
  45dac0:	stur	q0, [x2, #8]
  45dac4:	adds	x0, x0, #0x8
  45dac8:	ldp	x4, x5, [x20]
  45dacc:	stp	x4, x5, [x2, #48]
  45dad0:	str	x0, [sp, #112]
  45dad4:	ldrb	w0, [x3, #26]
  45dad8:	and	w0, w0, #0xfffffff3
  45dadc:	strb	w0, [x3, #26]
  45dae0:	str	x6, [x2, #64]
  45dae4:	str	q0, [x2, #32]
  45dae8:	b.ne	45c628 <_obstack_memory_used@@Base+0xb218>  // b.any
  45daec:	ldp	x23, x24, [sp, #48]
  45daf0:	b	45cd28 <_obstack_memory_used@@Base+0xb918>
  45daf4:	mov	x0, #0x3c8                 	// #968
  45daf8:	bl	404310 <malloc@plt>
  45dafc:	cbz	x0, 45cd28 <_obstack_memory_used@@Base+0xb918>
  45db00:	stp	x23, x24, [sp, #48]
  45db04:	mov	x2, #0xffffffffffffffff    	// #-1
  45db08:	ldr	x1, [x28, #112]
  45db0c:	str	x1, [x0]
  45db10:	mov	w1, #0x1                   	// #1
  45db14:	str	w1, [x28, #128]
  45db18:	str	x0, [x28, #112]
  45db1c:	add	x1, x0, #0x8
  45db20:	ldp	x4, x5, [x20]
  45db24:	stp	x4, x5, [x0, #48]
  45db28:	movi	v0.4s, #0x0
  45db2c:	str	x1, [sp, #112]
  45db30:	ldrb	w1, [x0, #58]
  45db34:	str	xzr, [x0, #24]
  45db38:	and	w1, w1, #0xfffffff3
  45db3c:	strb	w1, [x0, #58]
  45db40:	stur	q0, [x0, #8]
  45db44:	str	q0, [x0, #32]
  45db48:	str	x2, [x0, #64]
  45db4c:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45db50:	sxtw	x19, w0
  45db54:	b	45d240 <_obstack_memory_used@@Base+0xbe30>
  45db58:	mov	w0, #0x1                   	// #1
  45db5c:	strb	w0, [x20, #8]
  45db60:	b	45ca70 <_obstack_memory_used@@Base+0xb660>
  45db64:	ldrb	w0, [x23, #32]
  45db68:	orr	w0, w0, #0x1
  45db6c:	strb	w0, [x23, #32]
  45db70:	tbz	w22, #8, 45db80 <_obstack_memory_used@@Base+0xc770>
  45db74:	ldr	x0, [x19]
  45db78:	orr	x0, x0, #0x400
  45db7c:	str	x0, [x19]
  45db80:	ldr	x3, [x26, #72]
  45db84:	mov	x1, x26
  45db88:	mov	x2, x22
  45db8c:	mov	x0, x20
  45db90:	add	x9, x3, w27, sxtw
  45db94:	str	x9, [x26, #72]
  45db98:	bl	451570 <_obstack_memory_used@@Base+0x160>
  45db9c:	mov	w27, w0
  45dba0:	ldrb	w1, [x20, #8]
  45dba4:	cmp	w1, #0x2
  45dba8:	b.eq	45dff8 <_obstack_memory_used@@Base+0xcbe8>  // b.none
  45dbac:	mov	w0, #0x1                   	// #1
  45dbb0:	str	w0, [sp, #120]
  45dbb4:	b	45ca68 <_obstack_memory_used@@Base+0xb658>
  45dbb8:	mov	x0, #0x3c8                 	// #968
  45dbbc:	bl	404310 <malloc@plt>
  45dbc0:	cbz	x0, 45cd28 <_obstack_memory_used@@Base+0xb918>
  45dbc4:	stp	x23, x24, [sp, #48]
  45dbc8:	ldr	x1, [x28, #112]
  45dbcc:	str	x1, [x0]
  45dbd0:	mov	w1, #0x1                   	// #1
  45dbd4:	str	w1, [x28, #128]
  45dbd8:	str	x0, [x28, #112]
  45dbdc:	add	x1, x0, #0x8
  45dbe0:	ldp	x2, x3, [x20]
  45dbe4:	stp	x2, x3, [x0, #48]
  45dbe8:	movi	v0.4s, #0x0
  45dbec:	str	x1, [sp, #112]
  45dbf0:	ldrb	w1, [x0, #58]
  45dbf4:	mov	x2, #0xffffffffffffffff    	// #-1
  45dbf8:	str	xzr, [x0, #24]
  45dbfc:	and	w1, w1, #0xfffffff3
  45dc00:	strb	w1, [x0, #58]
  45dc04:	stur	q0, [x0, #8]
  45dc08:	str	q0, [x0, #32]
  45dc0c:	str	x2, [x0, #64]
  45dc10:	b	45c9dc <_obstack_memory_used@@Base+0xb5cc>
  45dc14:	mov	x0, #0x3c8                 	// #968
  45dc18:	bl	404310 <malloc@plt>
  45dc1c:	cbz	x0, 45cd28 <_obstack_memory_used@@Base+0xb918>
  45dc20:	stp	x23, x24, [sp, #48]
  45dc24:	mov	x2, #0xffffffffffffffff    	// #-1
  45dc28:	ldr	x1, [x28, #112]
  45dc2c:	str	x1, [x0]
  45dc30:	str	w19, [x28, #128]
  45dc34:	add	x1, x0, #0x8
  45dc38:	movi	v0.4s, #0x0
  45dc3c:	str	x0, [x28, #112]
  45dc40:	ldp	x4, x5, [x20]
  45dc44:	stp	x4, x5, [x0, #48]
  45dc48:	str	x1, [sp, #112]
  45dc4c:	ldrb	w1, [x0, #58]
  45dc50:	stur	q0, [x0, #8]
  45dc54:	and	w1, w1, #0xfffffff3
  45dc58:	str	xzr, [x0, #24]
  45dc5c:	str	q0, [x0, #32]
  45dc60:	strb	w1, [x0, #58]
  45dc64:	str	x2, [x0, #64]
  45dc68:	b	45cbec <_obstack_memory_used@@Base+0xb7dc>
  45dc6c:	mov	x0, x19
  45dc70:	str	xzr, [sp, #112]
  45dc74:	bl	4047b0 <free@plt>
  45dc78:	mov	x0, x23
  45dc7c:	bl	4047b0 <free@plt>
  45dc80:	ldr	x1, [sp, #136]
  45dc84:	mov	w0, #0xc                   	// #12
  45dc88:	ldp	x23, x24, [sp, #48]
  45dc8c:	str	w0, [x1]
  45dc90:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45dc94:	lsl	x1, x2, #1
  45dc98:	add	x1, x1, #0x1
  45dc9c:	str	x1, [sp, #112]
  45dca0:	lsl	x1, x1, #2
  45dca4:	bl	404530 <realloc@plt>
  45dca8:	cbz	x0, 45dd98 <_obstack_memory_used@@Base+0xc988>
  45dcac:	str	x0, [x23]
  45dcb0:	ldr	x1, [x23, #40]
  45dcb4:	b	45cb04 <_obstack_memory_used@@Base+0xb6f4>
  45dcb8:	ldr	x0, [sp, #144]
  45dcbc:	cbnz	x0, 45d100 <_obstack_memory_used@@Base+0xbcf0>
  45dcc0:	b	45d200 <_obstack_memory_used@@Base+0xbdf0>
  45dcc4:	ldrb	w1, [sp, #184]
  45dcc8:	mov	x0, #0x1                   	// #1
  45dccc:	ubfx	x2, x1, #6, #2
  45dcd0:	lsl	x1, x0, x1
  45dcd4:	ldr	x0, [x19, x2, lsl #3]
  45dcd8:	orr	x0, x0, x1
  45dcdc:	str	x0, [x19, x2, lsl #3]
  45dce0:	b	45d764 <_obstack_memory_used@@Base+0xc354>
  45dce4:	ldr	x1, [sp, #136]
  45dce8:	mov	w0, #0x7                   	// #7
  45dcec:	str	w0, [x1]
  45dcf0:	b	45d7b4 <_obstack_memory_used@@Base+0xc3a4>
  45dcf4:	mov	x2, x22
  45dcf8:	mov	x1, x26
  45dcfc:	mov	x0, x20
  45dd00:	str	x4, [sp, #112]
  45dd04:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45dd08:	mov	w6, w0
  45dd0c:	ldr	x7, [x26, #72]
  45dd10:	mov	x3, x22
  45dd14:	ldr	x4, [sp, #112]
  45dd18:	mov	x2, x20
  45dd1c:	ldr	x5, [sp, #136]
  45dd20:	add	x6, x7, w6, sxtw
  45dd24:	str	x6, [x26, #72]
  45dd28:	mov	x1, x21
  45dd2c:	mov	x0, x26
  45dd30:	bl	45c418 <_obstack_memory_used@@Base+0xb008>
  45dd34:	str	x0, [sp, #112]
  45dd38:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45dd3c:	mov	x0, #0x3c8                 	// #968
  45dd40:	bl	404310 <malloc@plt>
  45dd44:	cbz	x0, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45dd48:	ldr	x1, [x28, #112]
  45dd4c:	str	x1, [x0]
  45dd50:	movi	v0.4s, #0x0
  45dd54:	mov	x2, #0x30                  	// #48
  45dd58:	mov	w3, #0x1                   	// #1
  45dd5c:	mov	x6, #0x8                   	// #8
  45dd60:	mov	x1, #0x0                   	// #0
  45dd64:	str	x0, [x28, #112]
  45dd68:	b	45ccd8 <_obstack_memory_used@@Base+0xb8c8>
  45dd6c:	mov	x0, #0x3c8                 	// #968
  45dd70:	bl	404310 <malloc@plt>
  45dd74:	movi	v0.4s, #0x0
  45dd78:	cbz	x0, 45e6f0 <_obstack_memory_used@@Base+0xd2e0>
  45dd7c:	ldr	x1, [x28, #112]
  45dd80:	str	x1, [x0]
  45dd84:	mov	w2, #0x1                   	// #1
  45dd88:	mov	x23, #0x8                   	// #8
  45dd8c:	mov	w1, #0x0                   	// #0
  45dd90:	str	x0, [x28, #112]
  45dd94:	b	45cc78 <_obstack_memory_used@@Base+0xb868>
  45dd98:	mov	w0, #0xc                   	// #12
  45dd9c:	ldr	x1, [sp, #136]
  45dda0:	str	w0, [x1]
  45dda4:	b	45d7b4 <_obstack_memory_used@@Base+0xc3a4>
  45dda8:	mov	w0, #0x6                   	// #6
  45ddac:	str	w0, [x20]
  45ddb0:	ldr	w0, [x28, #128]
  45ddb4:	cmp	w0, #0xf
  45ddb8:	b.eq	45e490 <_obstack_memory_used@@Base+0xd080>  // b.none
  45ddbc:	mov	x23, #0x8                   	// #8
  45ddc0:	mov	w2, #0x40                  	// #64
  45ddc4:	add	w3, w0, #0x1
  45ddc8:	smaddl	x2, w0, w2, x23
  45ddcc:	ldr	x23, [x28, #112]
  45ddd0:	sbfiz	x0, x0, #6, #32
  45ddd4:	add	x1, x23, x0
  45ddd8:	str	w3, [x28, #128]
  45dddc:	movi	v0.4s, #0x0
  45dde0:	add	x4, x0, #0x20
  45dde4:	add	x4, x23, x4
  45dde8:	add	x23, x23, x2
  45ddec:	str	xzr, [x1, #24]
  45ddf0:	mov	x5, #0xffffffffffffffff    	// #-1
  45ddf4:	stur	q0, [x1, #8]
  45ddf8:	ldp	x2, x3, [x20]
  45ddfc:	stp	x2, x3, [x1, #48]
  45de00:	ldrb	w2, [x4, #26]
  45de04:	and	w2, w2, #0xfffffff3
  45de08:	strb	w2, [x4, #26]
  45de0c:	str	x5, [x1, #64]
  45de10:	str	q0, [x1, #32]
  45de14:	mov	w0, #0x9                   	// #9
  45de18:	str	w0, [x20]
  45de1c:	b	45c544 <_obstack_memory_used@@Base+0xb134>
  45de20:	cbz	x19, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45de24:	ldp	x23, x24, [sp, #48]
  45de28:	str	x6, [x19]
  45de2c:	b	45cd28 <_obstack_memory_used@@Base+0xb918>
  45de30:	ldr	x3, [x26, #72]
  45de34:	mov	x1, x26
  45de38:	mov	x2, x22
  45de3c:	add	x0, sp, #0xd0
  45de40:	add	x3, x3, w27, sxtw
  45de44:	str	x3, [x26, #72]
  45de48:	bl	451570 <_obstack_memory_used@@Base+0x160>
  45de4c:	mov	w3, w0
  45de50:	ldrb	w1, [sp, #216]
  45de54:	cmp	w1, #0x2
  45de58:	b.eq	45dce4 <_obstack_memory_used@@Base+0xc8d4>  // b.none
  45de5c:	cmp	w1, #0x15
  45de60:	b.eq	45e008 <_obstack_memory_used@@Base+0xcbf8>  // b.none
  45de64:	add	x6, sp, #0x100
  45de68:	mov	x4, x22
  45de6c:	add	x2, sp, #0xd0
  45de70:	mov	x1, x26
  45de74:	add	x0, sp, #0xc0
  45de78:	mov	w5, #0x1                   	// #1
  45de7c:	str	w21, [sp, #192]
  45de80:	str	x6, [sp, #200]
  45de84:	bl	454d90 <_obstack_memory_used@@Base+0x3980>
  45de88:	cbnz	w0, 45dd9c <_obstack_memory_used@@Base+0xc98c>
  45de8c:	mov	x2, x22
  45de90:	mov	x1, x26
  45de94:	mov	x0, x20
  45de98:	bl	451570 <_obstack_memory_used@@Base+0x160>
  45de9c:	ldr	w1, [x28, #180]
  45dea0:	mov	w27, w0
  45dea4:	ldr	w2, [sp, #176]
  45dea8:	cmp	w1, #0x2
  45deac:	sub	w0, w2, #0x2
  45deb0:	csel	x25, x23, xzr, ge  // ge = tcont
  45deb4:	tst	w0, #0xfffffffd
  45deb8:	b.eq	45e4d8 <_obstack_memory_used@@Base+0xd0c8>  // b.none
  45debc:	ldr	w1, [sp, #192]
  45dec0:	sub	w0, w1, #0x2
  45dec4:	tst	w0, #0xfffffffd
  45dec8:	b.eq	45e4d8 <_obstack_memory_used@@Base+0xd0c8>  // b.none
  45decc:	cmp	w2, #0x3
  45ded0:	cset	w0, eq  // eq = none
  45ded4:	str	w0, [sp, #128]
  45ded8:	b.eq	45e728 <_obstack_memory_used@@Base+0xd318>  // b.none
  45dedc:	cmp	w1, #0x3
  45dee0:	b.eq	45e6f8 <_obstack_memory_used@@Base+0xd2e8>  // b.none
  45dee4:	cbnz	w2, 45dfd0 <_obstack_memory_used@@Base+0xcbc0>
  45dee8:	ldrb	w3, [sp, #184]
  45deec:	ldr	w0, [sp, #128]
  45def0:	cmp	w2, #0x0
  45def4:	csinc	w0, w0, wzr, ne  // ne = any
  45def8:	cbz	w1, 45e4f4 <_obstack_memory_used@@Base+0xd0e4>
  45defc:	cmp	w1, #0x3
  45df00:	b.ne	45dfdc <_obstack_memory_used@@Base+0xcbcc>  // b.any
  45df04:	ldr	x2, [sp, #200]
  45df08:	ldrb	w4, [x2]
  45df0c:	cbz	w0, 45e3a8 <_obstack_memory_used@@Base+0xcf98>
  45df10:	cbz	x25, 45e4c0 <_obstack_memory_used@@Base+0xd0b0>
  45df14:	mov	w0, w3
  45df18:	str	w4, [sp, #128]
  45df1c:	bl	404630 <btowc@plt>
  45df20:	mov	w3, w0
  45df24:	ldr	w1, [sp, #192]
  45df28:	ldr	w4, [sp, #128]
  45df2c:	cmp	w1, #0x0
  45df30:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  45df34:	b.ne	45dfe4 <_obstack_memory_used@@Base+0xcbd4>  // b.any
  45df38:	mov	w0, w4
  45df3c:	str	w3, [sp, #128]
  45df40:	bl	404630 <btowc@plt>
  45df44:	mov	w4, w0
  45df48:	ldr	w3, [sp, #128]
  45df4c:	cmn	w3, #0x1
  45df50:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  45df54:	b.eq	45e048 <_obstack_memory_used@@Base+0xcc38>  // b.none
  45df58:	tst	x22, #0x10000
  45df5c:	ccmp	w4, w3, #0x2, ne  // ne = any
  45df60:	b.cc	45e4d8 <_obstack_memory_used@@Base+0xd0c8>  // b.lo, b.ul, b.last
  45df64:	cbz	x25, 45df90 <_obstack_memory_used@@Base+0xcb80>
  45df68:	ldr	x0, [x25, #64]
  45df6c:	ldr	x1, [sp, #96]
  45df70:	ldr	x2, [x25, #8]
  45df74:	cmp	x0, x1
  45df78:	b.eq	45e590 <_obstack_memory_used@@Base+0xd180>  // b.none
  45df7c:	ldr	x1, [x25, #16]
  45df80:	str	w3, [x2, x0, lsl #2]
  45df84:	add	x2, x0, #0x1
  45df88:	str	x2, [x25, #64]
  45df8c:	str	w4, [x1, x0, lsl #2]
  45df90:	mov	x1, #0x0                   	// #0
  45df94:	mov	x6, #0x1                   	// #1
  45df98:	cmp	w1, w3
  45df9c:	ccmp	w4, w1, #0x0, cs  // cs = hs, nlast
  45dfa0:	b.cc	45dfb8 <_obstack_memory_used@@Base+0xcba8>  // b.lo, b.ul, b.last
  45dfa4:	asr	x5, x1, #6
  45dfa8:	lsl	x0, x6, x1
  45dfac:	ldr	x2, [x19, x5, lsl #3]
  45dfb0:	orr	x0, x2, x0
  45dfb4:	str	x0, [x19, x5, lsl #3]
  45dfb8:	add	x1, x1, #0x1
  45dfbc:	cmp	x1, #0x100
  45dfc0:	b.ne	45df98 <_obstack_memory_used@@Base+0xcb88>  // b.any
  45dfc4:	ldr	x0, [sp, #136]
  45dfc8:	str	wzr, [x0]
  45dfcc:	b	45d764 <_obstack_memory_used@@Base+0xc354>
  45dfd0:	ldrb	w0, [sp, #128]
  45dfd4:	mov	w3, #0x0                   	// #0
  45dfd8:	cbz	w1, 45e4f4 <_obstack_memory_used@@Base+0xd0e4>
  45dfdc:	cbnz	w0, 45e584 <_obstack_memory_used@@Base+0xd174>
  45dfe0:	ldr	w3, [sp, #184]
  45dfe4:	ldr	w4, [sp, #200]
  45dfe8:	b	45df4c <_obstack_memory_used@@Base+0xcb3c>
  45dfec:	mov	x24, #0x0                   	// #0
  45dff0:	str	xzr, [x6]
  45dff4:	b	45cd7c <_obstack_memory_used@@Base+0xb96c>
  45dff8:	ldr	x1, [sp, #136]
  45dffc:	mov	w0, #0x2                   	// #2
  45e000:	str	w0, [x1]
  45e004:	b	45d7b4 <_obstack_memory_used@@Base+0xc3a4>
  45e008:	ldr	x3, [x26, #72]
  45e00c:	neg	w0, w27
  45e010:	mov	w2, #0x1                   	// #1
  45e014:	ldr	w1, [sp, #176]
  45e018:	add	x0, x3, w0, sxtw
  45e01c:	str	x0, [x26, #72]
  45e020:	strb	w2, [x20, #8]
  45e024:	b	45cae0 <_obstack_memory_used@@Base+0xb6d0>
  45e028:	ldr	x0, [sp, #200]
  45e02c:	str	w2, [sp, #144]
  45e030:	str	w1, [sp, #156]
  45e034:	bl	403ff0 <strlen@plt>
  45e038:	cmp	x0, #0x1
  45e03c:	ldr	w2, [sp, #144]
  45e040:	ldr	w1, [sp, #156]
  45e044:	b.ls	45e750 <_obstack_memory_used@@Base+0xd340>  // b.plast
  45e048:	ldr	x1, [sp, #136]
  45e04c:	mov	w0, #0x3                   	// #3
  45e050:	str	w0, [x1]
  45e054:	b	45d7b4 <_obstack_memory_used@@Base+0xc3a4>
  45e058:	mov	x0, #0x3c8                 	// #968
  45e05c:	bl	404310 <malloc@plt>
  45e060:	cbz	x0, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45e064:	ldr	x1, [x28, #112]
  45e068:	str	x1, [x0]
  45e06c:	mov	x21, #0x8                   	// #8
  45e070:	mov	w2, #0x1                   	// #1
  45e074:	mov	x4, #0x30                  	// #48
  45e078:	mov	x3, #0x0                   	// #0
  45e07c:	str	x0, [x28, #112]
  45e080:	b	45d8dc <_obstack_memory_used@@Base+0xc4cc>
  45e084:	mov	w0, #0x6                   	// #6
  45e088:	str	w0, [x5]
  45e08c:	str	xzr, [sp, #112]
  45e090:	b	45c648 <_obstack_memory_used@@Base+0xb238>
  45e094:	mov	x0, #0x3c8                 	// #968
  45e098:	bl	404310 <malloc@plt>
  45e09c:	cbz	x0, 45cd28 <_obstack_memory_used@@Base+0xb918>
  45e0a0:	stp	x23, x24, [sp, #48]
  45e0a4:	mov	x2, #0xffffffffffffffff    	// #-1
  45e0a8:	ldr	x1, [x28, #112]
  45e0ac:	str	x1, [x0]
  45e0b0:	str	w19, [x28, #128]
  45e0b4:	add	x1, x0, #0x8
  45e0b8:	movi	v0.4s, #0x0
  45e0bc:	str	x0, [x28, #112]
  45e0c0:	ldp	x4, x5, [x20]
  45e0c4:	stp	x4, x5, [x0, #48]
  45e0c8:	str	x1, [sp, #112]
  45e0cc:	ldrb	w1, [x0, #58]
  45e0d0:	stur	q0, [x0, #8]
  45e0d4:	and	w1, w1, #0xfffffff3
  45e0d8:	str	xzr, [x0, #24]
  45e0dc:	str	q0, [x0, #32]
  45e0e0:	strb	w1, [x0, #58]
  45e0e4:	str	x2, [x0, #64]
  45e0e8:	b	45d9d4 <_obstack_memory_used@@Base+0xc5c4>
  45e0ec:	mov	x0, #0x3c8                 	// #968
  45e0f0:	bl	404310 <malloc@plt>
  45e0f4:	mov	x21, x0
  45e0f8:	cbz	x0, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45e0fc:	ldr	x0, [x28, #112]
  45e100:	str	x0, [x21]
  45e104:	mov	w2, #0x1                   	// #1
  45e108:	mov	x1, #0x30                  	// #48
  45e10c:	mov	x6, #0x8                   	// #8
  45e110:	mov	x0, #0x0                   	// #0
  45e114:	str	x21, [x28, #112]
  45e118:	b	45c5cc <_obstack_memory_used@@Base+0xb1bc>
  45e11c:	mov	x0, #0x3c8                 	// #968
  45e120:	bl	404310 <malloc@plt>
  45e124:	mov	x1, x0
  45e128:	cbz	x0, 45e67c <_obstack_memory_used@@Base+0xd26c>
  45e12c:	ldr	x0, [x28, #112]
  45e130:	str	x0, [x1]
  45e134:	mov	x19, #0x8                   	// #8
  45e138:	mov	w2, #0x1                   	// #1
  45e13c:	mov	w0, #0x0                   	// #0
  45e140:	str	x1, [x28, #112]
  45e144:	b	45c564 <_obstack_memory_used@@Base+0xb154>
  45e148:	mov	x0, #0x3c8                 	// #968
  45e14c:	bl	404310 <malloc@plt>
  45e150:	mov	x1, x0
  45e154:	mov	x23, x0
  45e158:	cbz	x0, 45c53c <_obstack_memory_used@@Base+0xb12c>
  45e15c:	ldr	x0, [x28, #112]
  45e160:	str	x0, [x1]
  45e164:	mov	x2, #0x8                   	// #8
  45e168:	mov	w3, #0x1                   	// #1
  45e16c:	mov	w0, #0x0                   	// #0
  45e170:	str	x1, [x28, #112]
  45e174:	b	45c4f8 <_obstack_memory_used@@Base+0xb0e8>
  45e178:	ldr	x0, [x26, #72]
  45e17c:	add	x9, x0, w27, sxtw
  45e180:	ldr	w0, [sp, #120]
  45e184:	str	x9, [x26, #72]
  45e188:	cbz	w0, 45e19c <_obstack_memory_used@@Base+0xcd8c>
  45e18c:	ldp	q1, q0, [x19]
  45e190:	mvn	v1.16b, v1.16b
  45e194:	mvn	v0.16b, v0.16b
  45e198:	stp	q1, q0, [x19]
  45e19c:	ldr	w4, [x28, #180]
  45e1a0:	cmp	w4, #0x1
  45e1a4:	b.le	45e1d8 <_obstack_memory_used@@Base+0xcdc8>
  45e1a8:	ldr	x0, [x28, #120]
  45e1ac:	add	x1, x19, #0xf
  45e1b0:	sub	x1, x1, x0
  45e1b4:	cmp	x1, #0x1e
  45e1b8:	b.ls	45e5f0 <_obstack_memory_used@@Base+0xd1e0>  // b.plast
  45e1bc:	ldp	q1, q0, [x19]
  45e1c0:	ldr	q2, [x0]
  45e1c4:	and	v1.16b, v1.16b, v2.16b
  45e1c8:	str	q1, [x19]
  45e1cc:	ldr	q1, [x0, #16]
  45e1d0:	and	v0.16b, v0.16b, v1.16b
  45e1d4:	str	q0, [x19, #16]
  45e1d8:	ldr	x0, [x23, #40]
  45e1dc:	cbnz	x0, 45e2a8 <_obstack_memory_used@@Base+0xce98>
  45e1e0:	ldr	x0, [x23, #48]
  45e1e4:	cbnz	x0, 45e2a8 <_obstack_memory_used@@Base+0xce98>
  45e1e8:	ldr	x0, [x23, #56]
  45e1ec:	cbnz	x0, 45e2a8 <_obstack_memory_used@@Base+0xce98>
  45e1f0:	ldr	x0, [x23, #64]
  45e1f4:	cbnz	x0, 45e2a8 <_obstack_memory_used@@Base+0xce98>
  45e1f8:	cmp	w4, #0x1
  45e1fc:	b.le	45e210 <_obstack_memory_used@@Base+0xce00>
  45e200:	ldr	x0, [x23, #72]
  45e204:	cbnz	x0, 45e2a8 <_obstack_memory_used@@Base+0xce98>
  45e208:	ldrb	w0, [x23, #32]
  45e20c:	tbnz	w0, #0, 45e2a8 <_obstack_memory_used@@Base+0xce98>
  45e210:	ldr	x0, [x23]
  45e214:	bl	4047b0 <free@plt>
  45e218:	ldr	x0, [x23, #8]
  45e21c:	bl	4047b0 <free@plt>
  45e220:	ldr	x0, [x23, #16]
  45e224:	bl	4047b0 <free@plt>
  45e228:	ldr	x0, [x23, #24]
  45e22c:	bl	4047b0 <free@plt>
  45e230:	mov	x0, x23
  45e234:	bl	4047b0 <free@plt>
  45e238:	ldr	w1, [x28, #128]
  45e23c:	cmp	w1, #0xf
  45e240:	b.eq	45e630 <_obstack_memory_used@@Base+0xd220>  // b.none
  45e244:	ldr	x21, [x28, #112]
  45e248:	sbfiz	x0, x1, #6, #32
  45e24c:	movi	v0.4s, #0x0
  45e250:	add	x3, x0, #0x30
  45e254:	add	x2, x21, x0
  45e258:	add	w1, w1, #0x1
  45e25c:	str	w1, [x28, #128]
  45e260:	add	x5, x21, x3
  45e264:	add	x1, x0, #0x20
  45e268:	mov	w6, #0x3                   	// #3
  45e26c:	stur	q0, [x2, #8]
  45e270:	add	x1, x21, x1
  45e274:	add	x0, x0, #0x8
  45e278:	str	xzr, [x2, #24]
  45e27c:	add	x0, x21, x0
  45e280:	str	x19, [x21, x3]
  45e284:	mov	x3, #0xffffffffffffffff    	// #-1
  45e288:	strb	w6, [x5, #8]
  45e28c:	str	x0, [sp, #112]
  45e290:	ldrb	w0, [x1, #26]
  45e294:	and	w0, w0, #0xfffffff3
  45e298:	strb	w0, [x1, #26]
  45e29c:	str	x3, [x2, #64]
  45e2a0:	str	q0, [x2, #32]
  45e2a4:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45e2a8:	ldrb	w0, [x28, #176]
  45e2ac:	ldr	w25, [x28, #128]
  45e2b0:	orr	w0, w0, #0x2
  45e2b4:	strb	w0, [x28, #176]
  45e2b8:	cmp	w25, #0xf
  45e2bc:	b.eq	45e6a8 <_obstack_memory_used@@Base+0xd298>  // b.none
  45e2c0:	ldr	x27, [x28, #112]
  45e2c4:	sbfiz	x0, x25, #6, #32
  45e2c8:	movi	v0.4s, #0x0
  45e2cc:	add	w1, w25, #0x1
  45e2d0:	add	x2, x27, x0
  45e2d4:	add	x3, x0, #0x30
  45e2d8:	str	w1, [x28, #128]
  45e2dc:	add	x6, x27, x3
  45e2e0:	add	x1, x0, #0x20
  45e2e4:	mov	w9, #0x6                   	// #6
  45e2e8:	stur	q0, [x2, #8]
  45e2ec:	add	x1, x27, x1
  45e2f0:	add	x21, x0, #0x8
  45e2f4:	str	xzr, [x2, #24]
  45e2f8:	mov	x4, #0xffffffffffffffff    	// #-1
  45e2fc:	str	x23, [x27, x3]
  45e300:	sxtw	x25, w25
  45e304:	strb	w9, [x6, #8]
  45e308:	add	x21, x27, x21
  45e30c:	ldrb	w0, [x1, #26]
  45e310:	and	w0, w0, #0xfffffff3
  45e314:	strb	w0, [x1, #26]
  45e318:	str	x4, [x2, #64]
  45e31c:	str	q0, [x2, #32]
  45e320:	ldr	x0, [x19]
  45e324:	cbnz	x0, 45e3b4 <_obstack_memory_used@@Base+0xcfa4>
  45e328:	ldr	x0, [x19, #8]
  45e32c:	cbnz	x0, 45e3b4 <_obstack_memory_used@@Base+0xcfa4>
  45e330:	ldr	x0, [x19, #16]
  45e334:	cbnz	x0, 45e3b4 <_obstack_memory_used@@Base+0xcfa4>
  45e338:	ldr	x0, [x19, #24]
  45e33c:	cbnz	x0, 45e3b4 <_obstack_memory_used@@Base+0xcfa4>
  45e340:	mov	x0, x19
  45e344:	str	x21, [sp, #112]
  45e348:	bl	4047b0 <free@plt>
  45e34c:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45e350:	mov	x0, #0x3c8                 	// #968
  45e354:	bl	404310 <malloc@plt>
  45e358:	cbz	x0, 45cd24 <_obstack_memory_used@@Base+0xb914>
  45e35c:	ldr	x1, [x28, #112]
  45e360:	str	x1, [x0]
  45e364:	mov	w1, #0x1                   	// #1
  45e368:	str	w1, [x28, #128]
  45e36c:	str	x0, [x28, #112]
  45e370:	add	x1, x0, #0x8
  45e374:	ldp	x2, x3, [x20]
  45e378:	stp	x2, x3, [x0, #48]
  45e37c:	movi	v0.4s, #0x0
  45e380:	str	x1, [sp, #112]
  45e384:	ldrb	w1, [x0, #58]
  45e388:	mov	x2, #0xffffffffffffffff    	// #-1
  45e38c:	str	xzr, [x0, #24]
  45e390:	and	w1, w1, #0xfffffff3
  45e394:	strb	w1, [x0, #58]
  45e398:	stur	q0, [x0, #8]
  45e39c:	str	q0, [x0, #32]
  45e3a0:	str	x2, [x0, #64]
  45e3a4:	b	45c628 <_obstack_memory_used@@Base+0xb218>
  45e3a8:	ldr	w3, [sp, #184]
  45e3ac:	cbnz	x25, 45df38 <_obstack_memory_used@@Base+0xcb28>
  45e3b0:	b	45df4c <_obstack_memory_used@@Base+0xcb3c>
  45e3b4:	ldr	w0, [x28, #128]
  45e3b8:	cmp	w0, #0xf
  45e3bc:	b.eq	45e788 <_obstack_memory_used@@Base+0xd378>  // b.none
  45e3c0:	mov	x24, x27
  45e3c4:	sbfiz	x1, x0, #6, #32
  45e3c8:	add	w2, w0, #0x1
  45e3cc:	movi	v0.4s, #0x0
  45e3d0:	add	x3, x24, x1
  45e3d4:	add	x4, x1, #0x30
  45e3d8:	str	w2, [x28, #128]
  45e3dc:	add	x9, x24, x4
  45e3e0:	add	x2, x1, #0x20
  45e3e4:	str	xzr, [x3, #24]
  45e3e8:	add	x2, x24, x2
  45e3ec:	stur	q0, [x3, #8]
  45e3f0:	mov	w10, #0x3                   	// #3
  45e3f4:	mov	x5, #0xffffffffffffffff    	// #-1
  45e3f8:	str	x19, [x24, x4]
  45e3fc:	add	x1, x1, #0x8
  45e400:	strb	w10, [x9, #8]
  45e404:	sxtw	x7, w0
  45e408:	add	x1, x24, x1
  45e40c:	mov	x0, x24
  45e410:	ldrb	w4, [x2, #26]
  45e414:	and	w4, w4, #0xfffffff3
  45e418:	strb	w4, [x2, #26]
  45e41c:	str	x5, [x3, #64]
  45e420:	str	q0, [x3, #32]
  45e424:	ldr	w3, [x28, #128]
  45e428:	cmp	w3, #0xf
  45e42c:	b.eq	45e75c <_obstack_memory_used@@Base+0xd34c>  // b.none
  45e430:	sbfiz	x2, x3, #6, #32
  45e434:	add	w3, w3, #0x1
  45e438:	add	x4, x0, x2
  45e43c:	add	x5, x2, #0x20
  45e440:	add	x5, x0, x5
  45e444:	str	w3, [x28, #128]
  45e448:	mov	w6, #0xa                   	// #10
  45e44c:	add	x2, x2, #0x8
  45e450:	stp	xzr, x1, [x4, #8]
  45e454:	add	x2, x0, x2
  45e458:	add	x24, x24, x7, lsl #6
  45e45c:	str	x21, [x4, #24]
  45e460:	add	x25, x27, x25, lsl #6
  45e464:	strb	w6, [x4, #56]
  45e468:	mov	x1, #0xffffffffffffffff    	// #-1
  45e46c:	str	x2, [sp, #112]
  45e470:	ldrb	w0, [x5, #26]
  45e474:	and	w0, w0, #0xfffffff3
  45e478:	strb	w0, [x5, #26]
  45e47c:	stp	xzr, xzr, [x4, #32]
  45e480:	str	x1, [x4, #64]
  45e484:	str	x2, [x24, #8]
  45e488:	str	x2, [x25, #8]
  45e48c:	b	45c6f8 <_obstack_memory_used@@Base+0xb2e8>
  45e490:	mov	x0, #0x3c8                 	// #968
  45e494:	bl	404310 <malloc@plt>
  45e498:	mov	x1, x0
  45e49c:	mov	x23, x0
  45e4a0:	cbz	x0, 45de14 <_obstack_memory_used@@Base+0xca04>
  45e4a4:	ldr	x0, [x28, #112]
  45e4a8:	str	x0, [x1]
  45e4ac:	mov	x2, #0x8                   	// #8
  45e4b0:	mov	w3, #0x1                   	// #1
  45e4b4:	mov	w0, #0x0                   	// #0
  45e4b8:	str	x1, [x28, #112]
  45e4bc:	b	45ddd0 <_obstack_memory_used@@Base+0xc9c0>
  45e4c0:	cmp	w1, #0x0
  45e4c4:	ccmp	w1, #0x3, #0x4, ne  // ne = any
  45e4c8:	b.ne	45dfe4 <_obstack_memory_used@@Base+0xcbd4>  // b.any
  45e4cc:	tst	x22, #0x10000
  45e4d0:	ccmp	w4, w3, #0x2, ne  // ne = any
  45e4d4:	b.cs	45df90 <_obstack_memory_used@@Base+0xcb80>  // b.hs, b.nlast
  45e4d8:	ldr	x1, [sp, #136]
  45e4dc:	mov	w0, #0xb                   	// #11
  45e4e0:	str	w0, [x1]
  45e4e4:	b	45d7b4 <_obstack_memory_used@@Base+0xc3a4>
  45e4e8:	mov	x24, #0x0                   	// #0
  45e4ec:	str	xzr, [x25]
  45e4f0:	b	45d4a4 <_obstack_memory_used@@Base+0xc094>
  45e4f4:	ldrb	w4, [sp, #200]
  45e4f8:	b	45df0c <_obstack_memory_used@@Base+0xcafc>
  45e4fc:	mov	w21, #0x80                  	// #128
  45e500:	mov	w19, #0x2                   	// #2
  45e504:	bl	404740 <__ctype_b_loc@plt>
  45e508:	ldr	x5, [x0]
  45e50c:	sxtw	x3, w19
  45e510:	add	x4, x28, #0xb8
  45e514:	mov	x6, #0x1                   	// #1
  45e518:	add	x5, x5, w21, sxtw #1
  45e51c:	mov	x0, #0x0                   	// #0
  45e520:	ldrh	w1, [x5, x0, lsl #1]
  45e524:	add	w2, w21, w0
  45e528:	cmp	w2, #0x5f
  45e52c:	and	w1, w1, #0x8
  45e530:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  45e534:	b.eq	45e548 <_obstack_memory_used@@Base+0xd138>  // b.none
  45e538:	ldr	x1, [x4, x3, lsl #3]
  45e53c:	lsl	x2, x6, x0
  45e540:	orr	x1, x1, x2
  45e544:	str	x1, [x4, x3, lsl #3]
  45e548:	add	x0, x0, #0x1
  45e54c:	cmp	x0, #0x40
  45e550:	b.ne	45e520 <_obstack_memory_used@@Base+0xd110>  // b.any
  45e554:	add	x3, x3, #0x1
  45e558:	add	w21, w21, #0x40
  45e55c:	cmp	w3, #0x3
  45e560:	add	x5, x5, #0x80
  45e564:	b.le	45e51c <_obstack_memory_used@@Base+0xd10c>
  45e568:	b	45c4bc <_obstack_memory_used@@Base+0xb0ac>
  45e56c:	mov	w21, #0x0                   	// #0
  45e570:	mov	w19, #0x0                   	// #0
  45e574:	b	45e504 <_obstack_memory_used@@Base+0xd0f4>
  45e578:	ldr	x24, [sp, #112]
  45e57c:	mov	x23, x24
  45e580:	b	45d5a0 <_obstack_memory_used@@Base+0xc190>
  45e584:	cbz	x25, 45dfe4 <_obstack_memory_used@@Base+0xcbd4>
  45e588:	mov	w4, #0x0                   	// #0
  45e58c:	b	45df14 <_obstack_memory_used@@Base+0xcb04>
  45e590:	lsl	x1, x1, #1
  45e594:	mov	x0, x2
  45e598:	add	x1, x1, #0x1
  45e59c:	str	x1, [sp, #96]
  45e5a0:	str	w4, [sp, #144]
  45e5a4:	lsl	x1, x1, #2
  45e5a8:	str	x1, [sp, #128]
  45e5ac:	str	w3, [sp, #156]
  45e5b0:	bl	404530 <realloc@plt>
  45e5b4:	mov	x2, x0
  45e5b8:	ldr	x0, [x25, #16]
  45e5bc:	ldr	x1, [sp, #128]
  45e5c0:	str	x2, [sp, #128]
  45e5c4:	bl	404530 <realloc@plt>
  45e5c8:	mov	x1, x0
  45e5cc:	ldr	x2, [sp, #128]
  45e5d0:	ldr	w4, [sp, #144]
  45e5d4:	cmp	x2, #0x0
  45e5d8:	ldr	w3, [sp, #156]
  45e5dc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  45e5e0:	b.eq	45e654 <_obstack_memory_used@@Base+0xd244>  // b.none
  45e5e4:	stp	x2, x1, [x25, #8]
  45e5e8:	ldr	x0, [x25, #64]
  45e5ec:	b	45df7c <_obstack_memory_used@@Base+0xcb6c>
  45e5f0:	ldp	x1, x3, [x19]
  45e5f4:	ldr	x2, [x0]
  45e5f8:	and	x1, x1, x2
  45e5fc:	str	x1, [x19]
  45e600:	ldr	x2, [x19, #16]
  45e604:	ldr	x5, [x0, #8]
  45e608:	ldr	x1, [x19, #24]
  45e60c:	and	x3, x3, x5
  45e610:	str	x3, [x19, #8]
  45e614:	ldr	x3, [x0, #16]
  45e618:	and	x2, x2, x3
  45e61c:	str	x2, [x19, #16]
  45e620:	ldr	x0, [x0, #24]
  45e624:	and	x0, x1, x0
  45e628:	str	x0, [x19, #24]
  45e62c:	b	45e1d8 <_obstack_memory_used@@Base+0xcdc8>
  45e630:	mov	x0, #0x3c8                 	// #968
  45e634:	bl	404310 <malloc@plt>
  45e638:	cbz	x0, 45dd98 <_obstack_memory_used@@Base+0xc988>
  45e63c:	ldr	x1, [x28, #112]
  45e640:	str	x1, [x0]
  45e644:	mov	w1, #0x0                   	// #0
  45e648:	str	x0, [x28, #112]
  45e64c:	str	wzr, [x28, #128]
  45e650:	b	45e244 <_obstack_memory_used@@Base+0xce34>
  45e654:	mov	x0, x2
  45e658:	str	x1, [sp, #112]
  45e65c:	bl	4047b0 <free@plt>
  45e660:	ldr	x1, [sp, #112]
  45e664:	mov	x0, x1
  45e668:	bl	4047b0 <free@plt>
  45e66c:	ldr	x1, [sp, #136]
  45e670:	mov	w0, #0xc                   	// #12
  45e674:	str	w0, [x1]
  45e678:	b	45d7b4 <_obstack_memory_used@@Base+0xc3a4>
  45e67c:	mov	x19, #0x0                   	// #0
  45e680:	b	45c5a8 <_obstack_memory_used@@Base+0xb198>
  45e684:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45e688:	add	x3, x3, #0x2c0
  45e68c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45e690:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  45e694:	add	x3, x3, #0x40
  45e698:	add	x1, x1, #0x90
  45e69c:	add	x0, x0, #0x3f8
  45e6a0:	mov	w2, #0xced                 	// #3309
  45e6a4:	bl	404ac0 <__assert_fail@plt>
  45e6a8:	mov	x0, #0x3c8                 	// #968
  45e6ac:	bl	404310 <malloc@plt>
  45e6b0:	cbz	x0, 45dd98 <_obstack_memory_used@@Base+0xc988>
  45e6b4:	ldr	x1, [x28, #112]
  45e6b8:	str	x1, [x0]
  45e6bc:	mov	w25, #0x0                   	// #0
  45e6c0:	str	x0, [x28, #112]
  45e6c4:	b	45e2c0 <_obstack_memory_used@@Base+0xceb0>
  45e6c8:	mov	x23, #0x0                   	// #0
  45e6cc:	ldr	x24, [sp, #112]
  45e6d0:	b	45c798 <_obstack_memory_used@@Base+0xb388>
  45e6d4:	mov	x3, x19
  45e6d8:	b	45d238 <_obstack_memory_used@@Base+0xbe28>
  45e6dc:	ldr	x0, [sp, #136]
  45e6e0:	ldr	w0, [x0]
  45e6e4:	cbnz	w0, 45ce94 <_obstack_memory_used@@Base+0xba84>
  45e6e8:	str	xzr, [sp, #112]
  45e6ec:	b	45d088 <_obstack_memory_used@@Base+0xbc78>
  45e6f0:	mov	x23, #0x0                   	// #0
  45e6f4:	b	45ccb4 <_obstack_memory_used@@Base+0xb8a4>
  45e6f8:	ldr	x0, [sp, #200]
  45e6fc:	str	w2, [sp, #144]
  45e700:	str	w1, [sp, #156]
  45e704:	bl	403ff0 <strlen@plt>
  45e708:	cmp	x0, #0x1
  45e70c:	b.hi	45e048 <_obstack_memory_used@@Base+0xcc38>  // b.pmore
  45e710:	ldr	w2, [sp, #144]
  45e714:	ldr	w1, [sp, #156]
  45e718:	cbz	w2, 45dee8 <_obstack_memory_used@@Base+0xcad8>
  45e71c:	ldrb	w0, [sp, #128]
  45e720:	mov	w3, #0x0                   	// #0
  45e724:	b	45df04 <_obstack_memory_used@@Base+0xcaf4>
  45e728:	ldr	x0, [sp, #184]
  45e72c:	str	w2, [sp, #144]
  45e730:	str	w1, [sp, #156]
  45e734:	bl	403ff0 <strlen@plt>
  45e738:	cmp	x0, #0x1
  45e73c:	ldr	w2, [sp, #144]
  45e740:	ldr	w1, [sp, #156]
  45e744:	b.hi	45e048 <_obstack_memory_used@@Base+0xcc38>  // b.pmore
  45e748:	cmp	w1, #0x3
  45e74c:	b.eq	45e028 <_obstack_memory_used@@Base+0xcc18>  // b.none
  45e750:	ldr	x0, [sp, #184]
  45e754:	ldrb	w3, [x0]
  45e758:	b	45deec <_obstack_memory_used@@Base+0xcadc>
  45e75c:	mov	x0, #0x3c8                 	// #968
  45e760:	str	x7, [sp, #96]
  45e764:	str	x1, [sp, #112]
  45e768:	bl	404310 <malloc@plt>
  45e76c:	cbz	x0, 45dd98 <_obstack_memory_used@@Base+0xc988>
  45e770:	str	x24, [x0]
  45e774:	mov	w3, #0x0                   	// #0
  45e778:	str	x0, [x28, #112]
  45e77c:	ldr	x7, [sp, #96]
  45e780:	ldr	x1, [sp, #112]
  45e784:	b	45e430 <_obstack_memory_used@@Base+0xd020>
  45e788:	mov	x0, #0x3c8                 	// #968
  45e78c:	bl	404310 <malloc@plt>
  45e790:	mov	x24, x0
  45e794:	cbz	x0, 45dd98 <_obstack_memory_used@@Base+0xc988>
  45e798:	str	x27, [x24]
  45e79c:	mov	w0, #0x0                   	// #0
  45e7a0:	str	x24, [x28, #112]
  45e7a4:	b	45e3c4 <_obstack_memory_used@@Base+0xcfb4>
  45e7a8:	stp	x29, x30, [sp, #-96]!
  45e7ac:	mov	x29, sp
  45e7b0:	stp	x27, x28, [sp, #80]
  45e7b4:	mov	x27, x5
  45e7b8:	mov	x28, x2
  45e7bc:	stp	x19, x20, [sp, #16]
  45e7c0:	stp	x21, x22, [sp, #32]
  45e7c4:	mov	x21, x1
  45e7c8:	mov	x22, x4
  45e7cc:	stp	x23, x24, [sp, #48]
  45e7d0:	mov	x23, x0
  45e7d4:	mov	x24, x3
  45e7d8:	stp	x25, x26, [sp, #64]
  45e7dc:	ldr	x26, [x1]
  45e7e0:	bl	45c418 <_obstack_memory_used@@Base+0xb008>
  45e7e4:	ldr	w1, [x27]
  45e7e8:	cmp	w1, #0x0
  45e7ec:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  45e7f0:	b.eq	45e998 <_obstack_memory_used@@Base+0xd588>  // b.none
  45e7f4:	mov	x20, x0
  45e7f8:	ldrb	w0, [x28, #8]
  45e7fc:	and	w1, w0, #0xfffffff7
  45e800:	cmp	w1, #0x2
  45e804:	b.eq	45e8fc <_obstack_memory_used@@Base+0xd4ec>  // b.none
  45e808:	cmp	x22, #0x0
  45e80c:	cset	w25, eq  // eq = none
  45e810:	b	45e82c <_obstack_memory_used@@Base+0xd41c>
  45e814:	cmp	x20, #0x0
  45e818:	csel	x20, x20, x0, ne  // ne = any
  45e81c:	ldrb	w0, [x28, #8]
  45e820:	and	w1, w0, #0xfffffff7
  45e824:	cmp	w1, #0x2
  45e828:	b.eq	45e8fc <_obstack_memory_used@@Base+0xd4ec>  // b.none
  45e82c:	cmp	w25, #0x0
  45e830:	ccmp	w0, #0x9, #0x0, eq  // eq = none
  45e834:	b.eq	45e8fc <_obstack_memory_used@@Base+0xd4ec>  // b.none
  45e838:	mov	x1, x21
  45e83c:	mov	x5, x27
  45e840:	mov	x4, x22
  45e844:	mov	x3, x24
  45e848:	mov	x2, x28
  45e84c:	mov	x0, x23
  45e850:	bl	45c418 <_obstack_memory_used@@Base+0xb008>
  45e854:	mov	x19, x0
  45e858:	ldr	w1, [x27]
  45e85c:	cmp	w1, #0x0
  45e860:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  45e864:	b.eq	45e948 <_obstack_memory_used@@Base+0xd538>  // b.none
  45e868:	cmp	x20, #0x0
  45e86c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  45e870:	b.eq	45e814 <_obstack_memory_used@@Base+0xd404>  // b.none
  45e874:	ldr	w3, [x26, #128]
  45e878:	cmp	w3, #0xf
  45e87c:	b.eq	45e91c <_obstack_memory_used@@Base+0xd50c>  // b.none
  45e880:	sbfiz	x2, x3, #6, #32
  45e884:	sxtw	x1, w3
  45e888:	ldr	x0, [x26, #112]
  45e88c:	add	x8, x2, #0x8
  45e890:	add	w3, w3, #0x1
  45e894:	add	x2, x2, #0x30
  45e898:	lsl	x1, x1, #6
  45e89c:	add	x2, x0, x2
  45e8a0:	add	x4, x0, x1
  45e8a4:	add	x5, x1, #0x20
  45e8a8:	str	w3, [x26, #128]
  45e8ac:	add	x3, x0, x5
  45e8b0:	mov	w5, #0x10                  	// #16
  45e8b4:	mov	x1, #0xffffffffffffffff    	// #-1
  45e8b8:	stp	xzr, x20, [x4, #8]
  45e8bc:	add	x0, x0, x8
  45e8c0:	str	x19, [x4, #24]
  45e8c4:	strb	w5, [x2, #8]
  45e8c8:	ldrb	w2, [x3, #26]
  45e8cc:	and	w2, w2, #0xfffffff3
  45e8d0:	strb	w2, [x3, #26]
  45e8d4:	stp	xzr, xzr, [x4, #32]
  45e8d8:	str	x1, [x4, #64]
  45e8dc:	str	x0, [x20]
  45e8e0:	str	x0, [x19]
  45e8e4:	cbz	x0, 45e95c <_obstack_memory_used@@Base+0xd54c>
  45e8e8:	mov	x20, x0
  45e8ec:	ldrb	w0, [x28, #8]
  45e8f0:	and	w1, w0, #0xfffffff7
  45e8f4:	cmp	w1, #0x2
  45e8f8:	b.ne	45e82c <_obstack_memory_used@@Base+0xd41c>  // b.any
  45e8fc:	mov	x0, x20
  45e900:	ldp	x19, x20, [sp, #16]
  45e904:	ldp	x21, x22, [sp, #32]
  45e908:	ldp	x23, x24, [sp, #48]
  45e90c:	ldp	x25, x26, [sp, #64]
  45e910:	ldp	x27, x28, [sp, #80]
  45e914:	ldp	x29, x30, [sp], #96
  45e918:	ret
  45e91c:	mov	x0, #0x3c8                 	// #968
  45e920:	bl	404310 <malloc@plt>
  45e924:	cbz	x0, 45e95c <_obstack_memory_used@@Base+0xd54c>
  45e928:	ldr	x1, [x26, #112]
  45e92c:	str	x1, [x0]
  45e930:	mov	w3, #0x1                   	// #1
  45e934:	mov	x2, #0x30                  	// #48
  45e938:	mov	x8, #0x8                   	// #8
  45e93c:	mov	x1, #0x0                   	// #0
  45e940:	str	x0, [x26, #112]
  45e944:	b	45e898 <_obstack_memory_used@@Base+0xd488>
  45e948:	cbz	x20, 45e998 <_obstack_memory_used@@Base+0xd588>
  45e94c:	mov	x0, x20
  45e950:	mov	x20, #0x0                   	// #0
  45e954:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45e958:	b	45e8fc <_obstack_memory_used@@Base+0xd4ec>
  45e95c:	mov	x0, x19
  45e960:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45e964:	mov	x0, x20
  45e968:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45e96c:	mov	w0, #0xc                   	// #12
  45e970:	str	w0, [x27]
  45e974:	mov	x20, #0x0                   	// #0
  45e978:	mov	x0, x20
  45e97c:	ldp	x19, x20, [sp, #16]
  45e980:	ldp	x21, x22, [sp, #32]
  45e984:	ldp	x23, x24, [sp, #48]
  45e988:	ldp	x25, x26, [sp, #64]
  45e98c:	ldp	x27, x28, [sp, #80]
  45e990:	ldp	x29, x30, [sp], #96
  45e994:	ret
  45e998:	mov	x20, #0x0                   	// #0
  45e99c:	b	45e8fc <_obstack_memory_used@@Base+0xd4ec>
  45e9a0:	stp	x29, x30, [sp, #-208]!
  45e9a4:	mov	x29, sp
  45e9a8:	stp	x27, x28, [sp, #80]
  45e9ac:	ldr	x27, [x1]
  45e9b0:	stp	x19, x20, [sp, #16]
  45e9b4:	mov	x20, x5
  45e9b8:	mov	x19, x3
  45e9bc:	stp	x21, x22, [sp, #32]
  45e9c0:	mov	x22, x1
  45e9c4:	ldr	x6, [x27, #168]
  45e9c8:	mov	x21, x4
  45e9cc:	stp	x25, x26, [sp, #64]
  45e9d0:	mov	x25, x0
  45e9d4:	mov	x26, x2
  45e9d8:	str	x6, [sp, #104]
  45e9dc:	bl	45e7a8 <_obstack_memory_used@@Base+0xd398>
  45e9e0:	ldr	w1, [x20]
  45e9e4:	cmp	w1, #0x0
  45e9e8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  45e9ec:	b.eq	45f260 <_obstack_memory_used@@Base+0xde50>  // b.none
  45e9f0:	mov	x28, x0
  45e9f4:	mov	x0, #0x8400                	// #33792
  45e9f8:	and	x0, x19, x0
  45e9fc:	str	x0, [sp, #152]
  45ea00:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45ea04:	add	x0, x0, #0x210
  45ea08:	str	x0, [sp, #144]
  45ea0c:	and	x0, x19, #0x2000
  45ea10:	str	x0, [sp, #120]
  45ea14:	and	x0, x19, #0x8
  45ea18:	str	x0, [sp, #168]
  45ea1c:	and	x0, x19, #0x800
  45ea20:	str	x0, [sp, #176]
  45ea24:	and	x0, x19, #0x80000
  45ea28:	mov	x1, #0x1200                	// #4608
  45ea2c:	and	x1, x19, x1
  45ea30:	str	x0, [sp, #160]
  45ea34:	and	x0, x19, #0x4000
  45ea38:	stp	x23, x24, [sp, #48]
  45ea3c:	str	x1, [sp, #136]
  45ea40:	mov	x1, #0x402                 	// #1026
  45ea44:	and	x1, x19, x1
  45ea48:	str	x1, [sp, #128]
  45ea4c:	str	x0, [sp, #184]
  45ea50:	ldrb	w0, [x26, #8]
  45ea54:	cmp	w0, #0xa
  45ea58:	b.ne	45ec00 <_obstack_memory_used@@Base+0xd7f0>  // b.any
  45ea5c:	nop
  45ea60:	ldr	x0, [x25, #72]
  45ea64:	ldr	x1, [x25, #104]
  45ea68:	cmp	x1, x0
  45ea6c:	b.le	45ed1c <_obstack_memory_used@@Base+0xd90c>
  45ea70:	ldr	x4, [x25, #8]
  45ea74:	add	x24, x0, #0x1
  45ea78:	ldrb	w1, [x26, #10]
  45ea7c:	ldr	w3, [x25, #144]
  45ea80:	ldrb	w23, [x4, x0]
  45ea84:	and	w1, w1, #0xffffff9f
  45ea88:	strb	w23, [x26]
  45ea8c:	cmp	w3, #0x1
  45ea90:	strb	w1, [x26, #10]
  45ea94:	b.le	45ed70 <_obstack_memory_used@@Base+0xd960>
  45ea98:	ldr	x1, [x25, #48]
  45ea9c:	cmp	x0, x1
  45eaa0:	b.eq	45eab4 <_obstack_memory_used@@Base+0xd6a4>  // b.none
  45eaa4:	ldr	x1, [x25, #16]
  45eaa8:	ldr	w1, [x1, x0, lsl #2]
  45eaac:	cmn	w1, #0x1
  45eab0:	b.eq	45ee94 <_obstack_memory_used@@Base+0xda84>  // b.none
  45eab4:	cmp	w23, #0x5c
  45eab8:	b.eq	45edd0 <_obstack_memory_used@@Base+0xd9c0>  // b.none
  45eabc:	ldr	x1, [x25, #16]
  45eac0:	mov	w3, #0x1                   	// #1
  45eac4:	strb	w3, [x26, #8]
  45eac8:	ldr	w1, [x1, x0, lsl #2]
  45eacc:	str	w1, [sp, #112]
  45ead0:	mov	w0, w1
  45ead4:	bl	404990 <iswalnum@plt>
  45ead8:	ldr	w1, [sp, #112]
  45eadc:	cmp	w1, #0x5f
  45eae0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  45eae4:	ldrb	w0, [x26, #10]
  45eae8:	cset	w1, ne  // ne = any
  45eaec:	cmp	w23, #0x2e
  45eaf0:	bfi	w0, w1, #6, #1
  45eaf4:	strb	w0, [x26, #10]
  45eaf8:	b.eq	45edc0 <_obstack_memory_used@@Base+0xd9b0>  // b.none
  45eafc:	b.hi	45ec98 <_obstack_memory_used@@Base+0xd888>  // b.pmore
  45eb00:	cmp	w23, #0x29
  45eb04:	b.eq	45ef8c <_obstack_memory_used@@Base+0xdb7c>  // b.none
  45eb08:	b.hi	45ec70 <_obstack_memory_used@@Base+0xd860>  // b.pmore
  45eb0c:	cmp	w23, #0x24
  45eb10:	b.eq	45ef40 <_obstack_memory_used@@Base+0xdb30>  // b.none
  45eb14:	cmp	w23, #0x28
  45eb18:	b.ne	45ec50 <_obstack_memory_used@@Base+0xd840>  // b.any
  45eb1c:	ldr	x0, [sp, #120]
  45eb20:	cbnz	x0, 45eef0 <_obstack_memory_used@@Base+0xdae0>
  45eb24:	nop
  45eb28:	str	x24, [x25, #72]
  45eb2c:	ldr	x0, [sp, #104]
  45eb30:	mov	x4, x21
  45eb34:	ldr	x23, [x27, #168]
  45eb38:	str	x0, [x27, #168]
  45eb3c:	mov	x1, x22
  45eb40:	mov	x5, x20
  45eb44:	mov	x3, x19
  45eb48:	mov	x2, x26
  45eb4c:	mov	x0, x25
  45eb50:	bl	45e7a8 <_obstack_memory_used@@Base+0xd398>
  45eb54:	ldr	w1, [x20]
  45eb58:	mov	x4, x0
  45eb5c:	cmp	w1, #0x0
  45eb60:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  45eb64:	b.eq	45f244 <_obstack_memory_used@@Base+0xde34>  // b.none
  45eb68:	ldr	x0, [x27, #168]
  45eb6c:	orr	x23, x0, x23
  45eb70:	str	x23, [x27, #168]
  45eb74:	ldr	w2, [x27, #128]
  45eb78:	cmp	w2, #0xf
  45eb7c:	b.eq	45ed38 <_obstack_memory_used@@Base+0xd928>  // b.none
  45eb80:	sbfiz	x1, x2, #6, #32
  45eb84:	sxtw	x3, w2
  45eb88:	add	x11, x1, #0x30
  45eb8c:	add	x0, x1, #0x8
  45eb90:	ldr	x1, [x27, #112]
  45eb94:	add	w2, w2, #0x1
  45eb98:	lsl	x3, x3, #6
  45eb9c:	add	x11, x1, x11
  45eba0:	add	x5, x1, x3
  45eba4:	add	x10, x3, #0x20
  45eba8:	str	w2, [x27, #128]
  45ebac:	add	x2, x1, x10
  45ebb0:	mov	w12, #0xa                   	// #10
  45ebb4:	add	x1, x1, x0
  45ebb8:	stp	xzr, x28, [x5, #8]
  45ebbc:	mov	x10, #0xffffffffffffffff    	// #-1
  45ebc0:	str	x4, [x5, #24]
  45ebc4:	strb	w12, [x11, #8]
  45ebc8:	ldrb	w0, [x2, #26]
  45ebcc:	and	w0, w0, #0xfffffff3
  45ebd0:	strb	w0, [x2, #26]
  45ebd4:	stp	xzr, xzr, [x5, #32]
  45ebd8:	str	x10, [x5, #64]
  45ebdc:	cbz	x28, 45ebe4 <_obstack_memory_used@@Base+0xd7d4>
  45ebe0:	str	x1, [x28]
  45ebe4:	cbz	x4, 45ec20 <_obstack_memory_used@@Base+0xd810>
  45ebe8:	str	x1, [x4]
  45ebec:	cbz	x1, 45ec24 <_obstack_memory_used@@Base+0xd814>
  45ebf0:	ldrb	w0, [x26, #8]
  45ebf4:	mov	x28, x1
  45ebf8:	cmp	w0, #0xa
  45ebfc:	b.eq	45ea60 <_obstack_memory_used@@Base+0xd650>  // b.none
  45ec00:	mov	x0, x28
  45ec04:	ldp	x19, x20, [sp, #16]
  45ec08:	ldp	x21, x22, [sp, #32]
  45ec0c:	ldp	x23, x24, [sp, #48]
  45ec10:	ldp	x25, x26, [sp, #64]
  45ec14:	ldp	x27, x28, [sp, #80]
  45ec18:	ldp	x29, x30, [sp], #208
  45ec1c:	ret
  45ec20:	cbnz	x1, 45ebf0 <_obstack_memory_used@@Base+0xd7e0>
  45ec24:	mov	w0, #0xc                   	// #12
  45ec28:	mov	x28, #0x0                   	// #0
  45ec2c:	ldp	x23, x24, [sp, #48]
  45ec30:	str	w0, [x20]
  45ec34:	mov	x0, x28
  45ec38:	ldp	x19, x20, [sp, #16]
  45ec3c:	ldp	x21, x22, [sp, #32]
  45ec40:	ldp	x25, x26, [sp, #64]
  45ec44:	ldp	x27, x28, [sp, #80]
  45ec48:	ldp	x29, x30, [sp], #208
  45ec4c:	ret
  45ec50:	cmp	w23, #0xa
  45ec54:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ec58:	ldr	x0, [sp, #176]
  45ec5c:	cbz	x0, 45eb28 <_obstack_memory_used@@Base+0xd718>
  45ec60:	strb	w23, [x26, #8]
  45ec64:	mov	x4, #0x0                   	// #0
  45ec68:	str	x24, [x25, #72]
  45ec6c:	b	45eb74 <_obstack_memory_used@@Base+0xd764>
  45ec70:	cmp	w23, #0x2a
  45ec74:	b.eq	45ef00 <_obstack_memory_used@@Base+0xdaf0>  // b.none
  45ec78:	cmp	w23, #0x2b
  45ec7c:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ec80:	ldr	x0, [sp, #128]
  45ec84:	cbnz	x0, 45eb28 <_obstack_memory_used@@Base+0xd718>
  45ec88:	mov	w0, #0x12                  	// #18
  45ec8c:	strb	w0, [x26, #8]
  45ec90:	str	x24, [x25, #72]
  45ec94:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ec98:	cmp	w23, #0x7b
  45ec9c:	b.eq	45ef10 <_obstack_memory_used@@Base+0xdb00>  // b.none
  45eca0:	b.hi	45eccc <_obstack_memory_used@@Base+0xd8bc>  // b.pmore
  45eca4:	cmp	w23, #0x5b
  45eca8:	b.eq	45ef30 <_obstack_memory_used@@Base+0xdb20>  // b.none
  45ecac:	cmp	w23, #0x5e
  45ecb0:	b.ne	45ecfc <_obstack_memory_used@@Base+0xd8ec>  // b.any
  45ecb4:	mov	w0, #0xc                   	// #12
  45ecb8:	strb	w0, [x26, #8]
  45ecbc:	mov	w0, #0x10                  	// #16
  45ecc0:	str	w0, [x26]
  45ecc4:	str	x24, [x25, #72]
  45ecc8:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45eccc:	cmp	w23, #0x7c
  45ecd0:	b.eq	45ef6c <_obstack_memory_used@@Base+0xdb5c>  // b.none
  45ecd4:	cmp	w23, #0x7d
  45ecd8:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ecdc:	ldr	x1, [sp, #136]
  45ece0:	mov	x0, #0x1200                	// #4608
  45ece4:	cmp	x1, x0
  45ece8:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ecec:	mov	w0, #0x18                  	// #24
  45ecf0:	strb	w0, [x26, #8]
  45ecf4:	str	x24, [x25, #72]
  45ecf8:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ecfc:	cmp	w23, #0x3f
  45ed00:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ed04:	ldr	x0, [sp, #128]
  45ed08:	cbnz	x0, 45eb28 <_obstack_memory_used@@Base+0xd718>
  45ed0c:	mov	w0, #0x13                  	// #19
  45ed10:	strb	w0, [x26, #8]
  45ed14:	str	x24, [x25, #72]
  45ed18:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ed1c:	mov	w1, #0x2                   	// #2
  45ed20:	strb	w1, [x26, #8]
  45ed24:	str	x0, [x25, #72]
  45ed28:	mov	x4, #0x0                   	// #0
  45ed2c:	ldr	w2, [x27, #128]
  45ed30:	cmp	w2, #0xf
  45ed34:	b.ne	45eb80 <_obstack_memory_used@@Base+0xd770>  // b.any
  45ed38:	mov	x0, #0x3c8                 	// #968
  45ed3c:	str	x4, [sp, #112]
  45ed40:	bl	404310 <malloc@plt>
  45ed44:	mov	x1, x0
  45ed48:	cbz	x0, 45ec24 <_obstack_memory_used@@Base+0xd814>
  45ed4c:	ldr	x0, [x27, #112]
  45ed50:	str	x0, [x1]
  45ed54:	mov	w2, #0x1                   	// #1
  45ed58:	mov	x11, #0x30                  	// #48
  45ed5c:	mov	x3, #0x0                   	// #0
  45ed60:	mov	x0, #0x8                   	// #8
  45ed64:	str	x1, [x27, #112]
  45ed68:	ldr	x4, [sp, #112]
  45ed6c:	b	45eb98 <_obstack_memory_used@@Base+0xd788>
  45ed70:	cmp	w23, #0x5c
  45ed74:	b.eq	45edd0 <_obstack_memory_used@@Base+0xd9c0>  // b.none
  45ed78:	bl	404740 <__ctype_b_loc@plt>
  45ed7c:	ldr	x0, [x0]
  45ed80:	ubfiz	x3, x23, #1, #8
  45ed84:	cmp	w23, #0x5f
  45ed88:	ldr	w1, [x26, #8]
  45ed8c:	mov	w2, #0xff00                	// #65280
  45ed90:	ldrh	w0, [x0, x3]
  45ed94:	movk	w2, #0xffbf, lsl #16
  45ed98:	and	w1, w1, w2
  45ed9c:	and	w0, w0, #0x8
  45eda0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  45eda4:	cset	w0, ne  // ne = any
  45eda8:	cmp	w23, #0x2e
  45edac:	lsl	w0, w0, #22
  45edb0:	orr	w0, w0, #0x1
  45edb4:	orr	w0, w0, w1
  45edb8:	str	w0, [x26, #8]
  45edbc:	b.ne	45eafc <_obstack_memory_used@@Base+0xd6ec>  // b.any
  45edc0:	mov	w0, #0x5                   	// #5
  45edc4:	strb	w0, [x26, #8]
  45edc8:	str	x24, [x25, #72]
  45edcc:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45edd0:	ldr	x1, [x25, #88]
  45edd4:	cmp	x1, x24
  45edd8:	b.gt	45edec <_obstack_memory_used@@Base+0xd9dc>
  45eddc:	mov	w0, #0x24                  	// #36
  45ede0:	strb	w0, [x26, #8]
  45ede4:	str	x24, [x25, #72]
  45ede8:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45edec:	ldrb	w1, [x25, #139]
  45edf0:	add	x23, x0, #0x2
  45edf4:	cbnz	w1, 45efa8 <_obstack_memory_used@@Base+0xdb98>
  45edf8:	ldrb	w1, [x4, x24]
  45edfc:	mov	w0, #0x1                   	// #1
  45ee00:	strb	w1, [x26]
  45ee04:	strb	w0, [x26, #8]
  45ee08:	cmp	w3, #0x1
  45ee0c:	b.le	45eeb8 <_obstack_memory_used@@Base+0xdaa8>
  45ee10:	ldr	x0, [x25, #16]
  45ee14:	add	x0, x0, x24, lsl #2
  45ee18:	ldr	w24, [x0]
  45ee1c:	str	w1, [sp, #112]
  45ee20:	mov	w0, w24
  45ee24:	bl	404990 <iswalnum@plt>
  45ee28:	cmp	w24, #0x5f
  45ee2c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  45ee30:	ldrb	w0, [x26, #10]
  45ee34:	cset	w2, ne  // ne = any
  45ee38:	bfi	w0, w2, #6, #1
  45ee3c:	strb	w0, [x26, #10]
  45ee40:	ldr	w1, [sp, #112]
  45ee44:	sub	w0, w1, #0x27
  45ee48:	cmp	w0, #0x56
  45ee4c:	b.hi	45ee64 <_obstack_memory_used@@Base+0xda54>  // b.pmore
  45ee50:	ldr	x2, [sp, #144]
  45ee54:	ldrh	w0, [x2, w0, uxtw #1]
  45ee58:	adr	x2, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45ee5c:	add	x0, x2, w0, sxth #2
  45ee60:	br	x0
  45ee64:	ldrb	w0, [x26, #8]
  45ee68:	mov	x4, #0x0                   	// #0
  45ee6c:	str	x23, [x25, #72]
  45ee70:	and	w1, w0, #0xfffffff7
  45ee74:	and	w1, w1, #0xff
  45ee78:	cmp	w1, #0x2
  45ee7c:	b.eq	45eb74 <_obstack_memory_used@@Base+0xd764>  // b.none
  45ee80:	cmp	x21, #0x0
  45ee84:	mov	x4, #0x0                   	// #0
  45ee88:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  45ee8c:	b.eq	45eb74 <_obstack_memory_used@@Base+0xd764>  // b.none
  45ee90:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ee94:	ldr	w0, [x26, #8]
  45ee98:	mov	w1, #0x1                   	// #1
  45ee9c:	movk	w1, #0x20, lsl #16
  45eea0:	and	w0, w0, #0xffffff00
  45eea4:	and	w0, w0, #0xffdfffff
  45eea8:	orr	w0, w0, w1
  45eeac:	str	w0, [x26, #8]
  45eeb0:	str	x24, [x25, #72]
  45eeb4:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45eeb8:	str	w1, [sp, #112]
  45eebc:	bl	404740 <__ctype_b_loc@plt>
  45eec0:	ldr	w1, [sp, #112]
  45eec4:	ldr	x0, [x0]
  45eec8:	cmp	w1, #0x5f
  45eecc:	ubfiz	x2, x1, #1, #8
  45eed0:	ldrb	w3, [x26, #10]
  45eed4:	ldrh	w0, [x0, x2]
  45eed8:	and	w0, w0, #0x8
  45eedc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  45eee0:	cset	w0, ne  // ne = any
  45eee4:	bfi	w3, w0, #6, #1
  45eee8:	strb	w3, [x26, #10]
  45eeec:	b	45ee44 <_obstack_memory_used@@Base+0xda34>
  45eef0:	mov	w0, #0x8                   	// #8
  45eef4:	strb	w0, [x26, #8]
  45eef8:	str	x24, [x25, #72]
  45eefc:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ef00:	mov	w0, #0xb                   	// #11
  45ef04:	strb	w0, [x26, #8]
  45ef08:	str	x24, [x25, #72]
  45ef0c:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ef10:	ldr	x1, [sp, #136]
  45ef14:	mov	x0, #0x1200                	// #4608
  45ef18:	cmp	x1, x0
  45ef1c:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ef20:	mov	w0, #0x17                  	// #23
  45ef24:	strb	w0, [x26, #8]
  45ef28:	str	x24, [x25, #72]
  45ef2c:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ef30:	mov	w0, #0x14                  	// #20
  45ef34:	strb	w0, [x26, #8]
  45ef38:	str	x24, [x25, #72]
  45ef3c:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ef40:	ldr	x0, [sp, #168]
  45ef44:	cbnz	x0, 45ef54 <_obstack_memory_used@@Base+0xdb44>
  45ef48:	ldr	x0, [x25, #88]
  45ef4c:	cmp	x0, x24
  45ef50:	b.ne	45f208 <_obstack_memory_used@@Base+0xddf8>  // b.any
  45ef54:	mov	w0, #0xc                   	// #12
  45ef58:	strb	w0, [x26, #8]
  45ef5c:	mov	w0, #0x20                  	// #32
  45ef60:	str	w0, [x26]
  45ef64:	str	x24, [x25, #72]
  45ef68:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45ef6c:	ldr	x0, [sp, #152]
  45ef70:	cmp	x0, #0x8, lsl #12
  45ef74:	b.ne	45eb28 <_obstack_memory_used@@Base+0xd718>  // b.any
  45ef78:	mov	w0, #0xa                   	// #10
  45ef7c:	strb	w0, [x26, #8]
  45ef80:	mov	x4, #0x0                   	// #0
  45ef84:	str	x24, [x25, #72]
  45ef88:	b	45eb74 <_obstack_memory_used@@Base+0xd764>
  45ef8c:	ldr	x0, [sp, #120]
  45ef90:	cbz	x0, 45eb28 <_obstack_memory_used@@Base+0xd718>
  45ef94:	mov	w0, #0x9                   	// #9
  45ef98:	strb	w0, [x26, #8]
  45ef9c:	mov	w0, #0x9                   	// #9
  45efa0:	str	x24, [x25, #72]
  45efa4:	b	45ee80 <_obstack_memory_used@@Base+0xda70>
  45efa8:	cmp	w3, #0x1
  45efac:	b.le	45efdc <_obstack_memory_used@@Base+0xdbcc>
  45efb0:	ldr	x0, [x25, #16]
  45efb4:	ldr	w1, [x0, x24, lsl #2]
  45efb8:	add	x0, x0, x24, lsl #2
  45efbc:	cmn	w1, #0x1
  45efc0:	b.eq	45f274 <_obstack_memory_used@@Base+0xde64>  // b.none
  45efc4:	ldr	x1, [x25, #48]
  45efc8:	cmp	x1, x23
  45efcc:	b.eq	45efdc <_obstack_memory_used@@Base+0xdbcc>  // b.none
  45efd0:	ldr	w1, [x0, #4]
  45efd4:	cmn	w1, #0x1
  45efd8:	b.eq	45f274 <_obstack_memory_used@@Base+0xde64>  // b.none
  45efdc:	ldrb	w1, [x25, #140]
  45efe0:	ldr	x0, [x25]
  45efe4:	ldr	x5, [x25, #40]
  45efe8:	cbz	w1, 45f268 <_obstack_memory_used@@Base+0xde58>
  45efec:	ldr	x1, [x25, #24]
  45eff0:	add	x0, x0, x5
  45eff4:	ldr	x1, [x1, x24, lsl #3]
  45eff8:	ldrb	w1, [x0, x1]
  45effc:	tbz	w1, #7, 45edfc <_obstack_memory_used@@Base+0xd9ec>
  45f000:	b	45edf8 <_obstack_memory_used@@Base+0xd9e8>
  45f004:	ldr	x0, [sp, #184]
  45f008:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f00c:	sub	w0, w1, #0x31
  45f010:	mov	w1, #0x4                   	// #4
  45f014:	strb	w1, [x26, #8]
  45f018:	sxtw	x0, w0
  45f01c:	str	x0, [x26]
  45f020:	str	x23, [x25, #72]
  45f024:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f028:	ldr	x0, [sp, #160]
  45f02c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f030:	mov	w0, #0xc                   	// #12
  45f034:	strb	w0, [x26, #8]
  45f038:	mov	w0, #0x40                  	// #64
  45f03c:	str	w0, [x26]
  45f040:	str	x23, [x25, #72]
  45f044:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f048:	ldr	x0, [sp, #160]
  45f04c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f050:	mov	w0, #0xc                   	// #12
  45f054:	strb	w0, [x26, #8]
  45f058:	mov	w0, #0x100                 	// #256
  45f05c:	str	w0, [x26]
  45f060:	str	x23, [x25, #72]
  45f064:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f068:	ldr	x0, [sp, #160]
  45f06c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f070:	mov	w0, #0x22                  	// #34
  45f074:	strb	w0, [x26, #8]
  45f078:	str	x23, [x25, #72]
  45f07c:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f080:	ldr	x0, [sp, #160]
  45f084:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f088:	mov	w0, #0x20                  	// #32
  45f08c:	strb	w0, [x26, #8]
  45f090:	str	x23, [x25, #72]
  45f094:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f098:	ldr	x0, [sp, #136]
  45f09c:	cmp	x0, #0x200
  45f0a0:	b.ne	45ee64 <_obstack_memory_used@@Base+0xda54>  // b.any
  45f0a4:	mov	w0, #0x17                  	// #23
  45f0a8:	strb	w0, [x26, #8]
  45f0ac:	str	x23, [x25, #72]
  45f0b0:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f0b4:	ldr	x0, [sp, #152]
  45f0b8:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f0bc:	mov	w0, #0xa                   	// #10
  45f0c0:	strb	w0, [x26, #8]
  45f0c4:	mov	x4, #0x0                   	// #0
  45f0c8:	str	x23, [x25, #72]
  45f0cc:	b	45eb74 <_obstack_memory_used@@Base+0xd764>
  45f0d0:	ldr	x0, [sp, #136]
  45f0d4:	cmp	x0, #0x200
  45f0d8:	b.ne	45ee64 <_obstack_memory_used@@Base+0xda54>  // b.any
  45f0dc:	mov	w0, #0x18                  	// #24
  45f0e0:	strb	w0, [x26, #8]
  45f0e4:	str	x23, [x25, #72]
  45f0e8:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f0ec:	ldr	x0, [sp, #128]
  45f0f0:	cmp	x0, #0x2
  45f0f4:	b.ne	45ee64 <_obstack_memory_used@@Base+0xda54>  // b.any
  45f0f8:	mov	w0, #0x13                  	// #19
  45f0fc:	strb	w0, [x26, #8]
  45f100:	str	x23, [x25, #72]
  45f104:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f108:	ldr	x0, [sp, #160]
  45f10c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f110:	mov	w0, #0xc                   	// #12
  45f114:	strb	w0, [x26, #8]
  45f118:	mov	w0, #0x200                 	// #512
  45f11c:	str	w0, [x26]
  45f120:	str	x23, [x25, #72]
  45f124:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f128:	ldr	x0, [sp, #160]
  45f12c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f130:	mov	w0, #0x23                  	// #35
  45f134:	strb	w0, [x26, #8]
  45f138:	str	x23, [x25, #72]
  45f13c:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f140:	ldr	x0, [sp, #160]
  45f144:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f148:	mov	w0, #0x21                  	// #33
  45f14c:	strb	w0, [x26, #8]
  45f150:	str	x23, [x25, #72]
  45f154:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f158:	ldr	x0, [sp, #160]
  45f15c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f160:	mov	w0, #0xc                   	// #12
  45f164:	strb	w0, [x26, #8]
  45f168:	mov	w0, #0x6                   	// #6
  45f16c:	str	w0, [x26]
  45f170:	str	x23, [x25, #72]
  45f174:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f178:	ldr	x0, [sp, #160]
  45f17c:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f180:	mov	w0, #0xc                   	// #12
  45f184:	strb	w0, [x26, #8]
  45f188:	mov	w0, #0x9                   	// #9
  45f18c:	str	w0, [x26]
  45f190:	str	x23, [x25, #72]
  45f194:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f198:	ldr	x0, [sp, #128]
  45f19c:	cmp	x0, #0x2
  45f1a0:	b.ne	45ee64 <_obstack_memory_used@@Base+0xda54>  // b.any
  45f1a4:	mov	w0, #0x12                  	// #18
  45f1a8:	strb	w0, [x26, #8]
  45f1ac:	str	x23, [x25, #72]
  45f1b0:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f1b4:	ldr	x0, [sp, #160]
  45f1b8:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f1bc:	mov	w0, #0xc                   	// #12
  45f1c0:	strb	w0, [x26, #8]
  45f1c4:	mov	w0, #0x80                  	// #128
  45f1c8:	str	w0, [x26]
  45f1cc:	str	x23, [x25, #72]
  45f1d0:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f1d4:	ldr	x0, [sp, #120]
  45f1d8:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f1dc:	mov	w0, #0x8                   	// #8
  45f1e0:	strb	w0, [x26, #8]
  45f1e4:	str	x23, [x25, #72]
  45f1e8:	b	45eb2c <_obstack_memory_used@@Base+0xd71c>
  45f1ec:	ldr	x0, [sp, #120]
  45f1f0:	cbnz	x0, 45ee64 <_obstack_memory_used@@Base+0xda54>
  45f1f4:	mov	w0, #0x9                   	// #9
  45f1f8:	strb	w0, [x26, #8]
  45f1fc:	mov	w0, #0x9                   	// #9
  45f200:	str	x23, [x25, #72]
  45f204:	b	45ee80 <_obstack_memory_used@@Base+0xda70>
  45f208:	str	x24, [x25, #72]
  45f20c:	mov	x1, x25
  45f210:	orr	x2, x19, #0x800000
  45f214:	add	x0, sp, #0xc0
  45f218:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45f21c:	ldr	x23, [x25, #72]
  45f220:	ldrb	w0, [sp, #200]
  45f224:	sub	x1, x23, #0x1
  45f228:	str	x1, [x25, #72]
  45f22c:	sub	w0, w0, #0x9
  45f230:	and	w0, w0, #0xff
  45f234:	cmp	w0, #0x1
  45f238:	b.hi	45ee64 <_obstack_memory_used@@Base+0xda54>  // b.pmore
  45f23c:	mov	x24, x23
  45f240:	b	45ef54 <_obstack_memory_used@@Base+0xdb44>
  45f244:	cbz	x28, 45f25c <_obstack_memory_used@@Base+0xde4c>
  45f248:	mov	x0, x28
  45f24c:	mov	x28, #0x0                   	// #0
  45f250:	bl	4555c0 <_obstack_memory_used@@Base+0x41b0>
  45f254:	ldp	x23, x24, [sp, #48]
  45f258:	b	45ec34 <_obstack_memory_used@@Base+0xd824>
  45f25c:	ldp	x23, x24, [sp, #48]
  45f260:	mov	x28, #0x0                   	// #0
  45f264:	b	45ec34 <_obstack_memory_used@@Base+0xd824>
  45f268:	add	x0, x0, x24
  45f26c:	ldrb	w1, [x0, x5]
  45f270:	b	45edfc <_obstack_memory_used@@Base+0xd9ec>
  45f274:	ldrb	w1, [x4, x24]
  45f278:	mov	w2, #0x1                   	// #1
  45f27c:	strb	w1, [x26]
  45f280:	strb	w2, [x26, #8]
  45f284:	b	45ee18 <_obstack_memory_used@@Base+0xda08>
  45f288:	stp	x29, x30, [sp, #-288]!
  45f28c:	mov	x29, sp
  45f290:	stp	x21, x22, [sp, #32]
  45f294:	mov	x21, x0
  45f298:	mov	x22, x1
  45f29c:	stp	x19, x20, [sp, #16]
  45f2a0:	mov	x20, x2
  45f2a4:	ldrb	w0, [x0, #56]
  45f2a8:	ldp	x19, x1, [x21]
  45f2ac:	stp	x23, x24, [sp, #48]
  45f2b0:	mov	x24, x3
  45f2b4:	mov	w3, #0xffffff90            	// #-112
  45f2b8:	and	w0, w0, w3
  45f2bc:	stp	xzr, x24, [x21, #16]
  45f2c0:	str	xzr, [x21, #48]
  45f2c4:	cmp	x1, #0xe7
  45f2c8:	strb	w0, [x21, #56]
  45f2cc:	str	wzr, [sp, #96]
  45f2d0:	b.ls	4604c4 <_obstack_memory_used@@Base+0xf0b4>  // b.plast
  45f2d4:	mov	x2, #0xe8                  	// #232
  45f2d8:	str	x2, [x21, #16]
  45f2dc:	mov	x0, x19
  45f2e0:	mov	w1, #0x0                   	// #0
  45f2e4:	bl	404410 <memset@plt>
  45f2e8:	mov	w0, #0xf                   	// #15
  45f2ec:	str	w0, [x19, #128]
  45f2f0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  45f2f4:	movk	x0, #0x555, lsl #48
  45f2f8:	cmp	x20, x0
  45f2fc:	b.cs	45f9a0 <_obstack_memory_used@@Base+0xe590>  // b.hs, b.nlast
  45f300:	stp	x25, x26, [sp, #64]
  45f304:	add	x25, x20, #0x1
  45f308:	stp	x27, x28, [sp, #80]
  45f30c:	lsl	x0, x25, #4
  45f310:	str	x25, [x19, #8]
  45f314:	bl	404310 <malloc@plt>
  45f318:	str	x0, [x19]
  45f31c:	cbz	x20, 4604e4 <_obstack_memory_used@@Base+0xf0d4>
  45f320:	mov	x1, #0x1                   	// #1
  45f324:	nop
  45f328:	lsl	x1, x1, #1
  45f32c:	cmp	x20, x1
  45f330:	b.cs	45f328 <_obstack_memory_used@@Base+0xdf18>  // b.hs, b.nlast
  45f334:	sub	x23, x1, #0x1
  45f338:	mov	x0, #0x18                  	// #24
  45f33c:	bl	4044c0 <calloc@plt>
  45f340:	str	x0, [x19, #64]
  45f344:	str	x23, [x19, #136]
  45f348:	bl	4047e0 <__ctype_get_mb_cur_max@plt>
  45f34c:	str	w0, [x19, #180]
  45f350:	mov	w0, #0xe                   	// #14
  45f354:	bl	4042d0 <nl_langinfo@plt>
  45f358:	ldrb	w1, [x0]
  45f35c:	and	w1, w1, #0xffffffdf
  45f360:	and	w1, w1, #0xff
  45f364:	cmp	w1, #0x55
  45f368:	b.ne	45f3c8 <_obstack_memory_used@@Base+0xdfb8>  // b.any
  45f36c:	ldrb	w1, [x0, #1]
  45f370:	and	w1, w1, #0xffffffdf
  45f374:	and	w1, w1, #0xff
  45f378:	cmp	w1, #0x54
  45f37c:	b.ne	45f3c8 <_obstack_memory_used@@Base+0xdfb8>  // b.any
  45f380:	ldrb	w1, [x0, #2]
  45f384:	and	w1, w1, #0xffffffdf
  45f388:	and	w1, w1, #0xff
  45f38c:	cmp	w1, #0x46
  45f390:	b.ne	45f3c8 <_obstack_memory_used@@Base+0xdfb8>  // b.any
  45f394:	ldrb	w1, [x0, #3]
  45f398:	cmp	w1, #0x2d
  45f39c:	cset	x1, eq  // eq = none
  45f3a0:	add	x1, x1, #0x3
  45f3a4:	add	x2, x0, x1
  45f3a8:	ldrb	w0, [x0, x1]
  45f3ac:	cmp	w0, #0x38
  45f3b0:	b.ne	45f3c8 <_obstack_memory_used@@Base+0xdfb8>  // b.any
  45f3b4:	ldrb	w0, [x2, #1]
  45f3b8:	cbnz	w0, 45f3c8 <_obstack_memory_used@@Base+0xdfb8>
  45f3bc:	ldrb	w0, [x19, #176]
  45f3c0:	orr	w0, w0, #0x4
  45f3c4:	strb	w0, [x19, #176]
  45f3c8:	ldrb	w0, [x19, #176]
  45f3cc:	ldr	w1, [x19, #180]
  45f3d0:	and	w2, w0, #0xfffffff7
  45f3d4:	strb	w2, [x19, #176]
  45f3d8:	cmp	w1, #0x1
  45f3dc:	b.le	45f3f4 <_obstack_memory_used@@Base+0xdfe4>
  45f3e0:	tbz	w0, #2, 45f9cc <_obstack_memory_used@@Base+0xe5bc>
  45f3e4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45f3e8:	add	x0, x0, #0x2c0
  45f3ec:	add	x0, x0, #0x10
  45f3f0:	str	x0, [x19, #120]
  45f3f4:	ldr	x0, [x19]
  45f3f8:	cbz	x0, 45f998 <_obstack_memory_used@@Base+0xe588>
  45f3fc:	ldr	x0, [x19, #64]
  45f400:	cbz	x0, 45f998 <_obstack_memory_used@@Base+0xe588>
  45f404:	add	x0, sp, #0x80
  45f408:	stp	xzr, xzr, [sp, #168]
  45f40c:	ands	x23, x24, #0x400000
  45f410:	stp	xzr, xzr, [sp, #184]
  45f414:	dup	v0.2d, x20
  45f418:	cset	w6, ne  // ne = any
  45f41c:	stp	xzr, xzr, [sp, #200]
  45f420:	mov	x27, #0x0                   	// #0
  45f424:	stp	xzr, xzr, [sp, #216]
  45f428:	stp	xzr, xzr, [sp, #232]
  45f42c:	stp	xzr, xzr, [sp, #248]
  45f430:	stp	xzr, xzr, [x0, #136]
  45f434:	ldr	x3, [x21, #40]
  45f438:	str	wzr, [sp, #96]
  45f43c:	ldrb	w1, [x19, #176]
  45f440:	orr	x26, x3, x23
  45f444:	ldr	w2, [x19, #180]
  45f448:	cmp	x26, #0x0
  45f44c:	str	x22, [sp, #128]
  45f450:	ubfx	x5, x1, #2, #1
  45f454:	cset	w4, ne  // ne = any
  45f458:	ubfx	x1, x1, #3, #1
  45f45c:	stp	xzr, xzr, [sp, #136]
  45f460:	stp	xzr, xzr, [sp, #152]
  45f464:	str	x3, [sp, #248]
  45f468:	strb	w6, [sp, #264]
  45f46c:	strb	w5, [sp, #265]
  45f470:	strb	w1, [sp, #266]
  45f474:	strb	w4, [sp, #267]
  45f478:	str	w2, [sp, #272]
  45f47c:	stp	q0, q0, [sp, #208]
  45f480:	cbnz	x20, 45f96c <_obstack_memory_used@@Base+0xe55c>
  45f484:	ldr	x0, [sp, #136]
  45f488:	cmp	w4, #0x0
  45f48c:	csel	x22, x0, x22, ne  // ne = any
  45f490:	str	x22, [sp, #136]
  45f494:	cmp	w2, #0x1
  45f498:	cbz	x23, 45f52c <_obstack_memory_used@@Base+0xe11c>
  45f49c:	b.le	46042c <_obstack_memory_used@@Base+0xf01c>
  45f4a0:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
  45f4a4:	add	x0, sp, #0x80
  45f4a8:	bl	451ec0 <_obstack_memory_used@@Base+0xab0>
  45f4ac:	cbnz	w0, 45f8f0 <_obstack_memory_used@@Base+0xe4e0>
  45f4b0:	ldr	x0, [sp, #184]
  45f4b4:	cmp	x20, x0
  45f4b8:	b.le	460554 <_obstack_memory_used@@Base+0xf144>
  45f4bc:	ldr	x1, [sp, #176]
  45f4c0:	ldrsw	x0, [x19, #180]
  45f4c4:	ldr	x25, [sp, #192]
  45f4c8:	add	x0, x0, x1
  45f4cc:	cmp	x25, x0
  45f4d0:	b.gt	460554 <_obstack_memory_used@@Base+0xf144>
  45f4d4:	ldr	w0, [sp, #272]
  45f4d8:	lsl	x26, x25, #1
  45f4dc:	cmp	w0, #0x1
  45f4e0:	b.le	45f51c <_obstack_memory_used@@Base+0xe10c>
  45f4e4:	cmp	x26, x22
  45f4e8:	b.hi	45f8ec <_obstack_memory_used@@Base+0xe4dc>  // b.pmore
  45f4ec:	ldr	x0, [sp, #144]
  45f4f0:	lsl	x1, x25, #3
  45f4f4:	bl	404530 <realloc@plt>
  45f4f8:	mov	x1, x0
  45f4fc:	cbz	x0, 45f8ec <_obstack_memory_used@@Base+0xe4dc>
  45f500:	ldr	x0, [sp, #152]
  45f504:	str	x1, [sp, #144]
  45f508:	cbz	x0, 45f51c <_obstack_memory_used@@Base+0xe10c>
  45f50c:	lsl	x1, x25, #4
  45f510:	bl	404530 <realloc@plt>
  45f514:	cbz	x0, 45f8ec <_obstack_memory_used@@Base+0xe4dc>
  45f518:	str	x0, [sp, #152]
  45f51c:	ldrb	w0, [sp, #267]
  45f520:	cbnz	w0, 45f8d0 <_obstack_memory_used@@Base+0xe4c0>
  45f524:	str	x26, [sp, #192]
  45f528:	b	45f4a4 <_obstack_memory_used@@Base+0xe094>
  45f52c:	b.gt	4602a4 <_obstack_memory_used@@Base+0xee94>
  45f530:	cbz	x26, 45fb18 <_obstack_memory_used@@Base+0xe708>
  45f534:	ldr	x2, [sp, #216]
  45f538:	ldr	x1, [sp, #176]
  45f53c:	cmp	x2, x27
  45f540:	csel	x2, x2, x27, le
  45f544:	cmp	x2, x1
  45f548:	b.le	460648 <_obstack_memory_used@@Base+0xf238>
  45f54c:	ldr	x3, [sp, #128]
  45f550:	add	x0, x1, #0x1
  45f554:	ldr	x5, [sp, #168]
  45f558:	add	x3, x3, x1
  45f55c:	ldr	x4, [sp, #248]
  45f560:	cmp	x2, x0
  45f564:	ldrb	w3, [x3, x5]
  45f568:	ldrb	w3, [x4, x3]
  45f56c:	strb	w3, [x22, x1]
  45f570:	b.le	45f5a4 <_obstack_memory_used@@Base+0xe194>
  45f574:	nop
  45f578:	ldr	x1, [sp, #128]
  45f57c:	ldr	x3, [sp, #168]
  45f580:	add	x1, x1, x0
  45f584:	ldr	x4, [sp, #248]
  45f588:	ldrb	w3, [x1, x3]
  45f58c:	ldr	x1, [sp, #136]
  45f590:	ldrb	w3, [x4, x3]
  45f594:	strb	w3, [x1, x0]
  45f598:	add	x0, x0, #0x1
  45f59c:	cmp	x2, x0
  45f5a0:	b.ne	45f578 <_obstack_memory_used@@Base+0xe168>  // b.any
  45f5a4:	dup	v0.2d, x2
  45f5a8:	str	wzr, [sp, #96]
  45f5ac:	str	q0, [sp, #176]
  45f5b0:	orr	x2, x24, #0x800000
  45f5b4:	ldr	x25, [x21]
  45f5b8:	str	xzr, [x21, #48]
  45f5bc:	add	x1, sp, #0x80
  45f5c0:	add	x0, sp, #0x68
  45f5c4:	str	x24, [x25, #216]
  45f5c8:	bl	454728 <_obstack_memory_used@@Base+0x3318>
  45f5cc:	mov	w6, w0
  45f5d0:	ldr	x1, [sp, #200]
  45f5d4:	mov	x3, x24
  45f5d8:	add	x0, sp, #0x80
  45f5dc:	add	x2, sp, #0x68
  45f5e0:	add	x5, sp, #0x60
  45f5e4:	mov	x4, #0x0                   	// #0
  45f5e8:	add	x6, x1, w6, sxtw
  45f5ec:	mov	x1, x21
  45f5f0:	str	x6, [sp, #200]
  45f5f4:	bl	45e9a0 <_obstack_memory_used@@Base+0xd590>
  45f5f8:	mov	x24, x0
  45f5fc:	ldr	w1, [sp, #96]
  45f600:	cmp	w1, #0x0
  45f604:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  45f608:	b.eq	460650 <_obstack_memory_used@@Base+0xf240>  // b.none
  45f60c:	ldr	w2, [x25, #128]
  45f610:	ldr	x20, [x21]
  45f614:	cmp	w2, #0xf
  45f618:	b.eq	460514 <_obstack_memory_used@@Base+0xf104>  // b.none
  45f61c:	sbfiz	x22, x2, #6, #32
  45f620:	sxtw	x1, w2
  45f624:	add	x4, x22, #0x30
  45f628:	add	x0, x22, #0x8
  45f62c:	ldr	x22, [x25, #112]
  45f630:	add	w2, w2, #0x1
  45f634:	movi	v0.4s, #0x0
  45f638:	lsl	x1, x1, #6
  45f63c:	add	x3, x22, x1
  45f640:	add	x4, x22, x4
  45f644:	str	w2, [x25, #128]
  45f648:	add	x2, x1, #0x20
  45f64c:	add	x2, x22, x2
  45f650:	mov	w6, #0x2                   	// #2
  45f654:	stur	q0, [x3, #8]
  45f658:	add	x22, x22, x0
  45f65c:	mov	x5, #0xffffffffffffffff    	// #-1
  45f660:	str	xzr, [x3, #24]
  45f664:	strb	w6, [x4, #8]
  45f668:	mov	x4, x22
  45f66c:	ldrb	w0, [x2, #26]
  45f670:	and	w0, w0, #0xfffffff3
  45f674:	strb	w0, [x2, #26]
  45f678:	str	x5, [x3, #64]
  45f67c:	str	q0, [x3, #32]
  45f680:	cbz	x24, 45f700 <_obstack_memory_used@@Base+0xe2f0>
  45f684:	ldr	w3, [x25, #128]
  45f688:	cmp	w3, #0xf
  45f68c:	b.eq	4605e8 <_obstack_memory_used@@Base+0xf1d8>  // b.none
  45f690:	sbfiz	x2, x3, #6, #32
  45f694:	sxtw	x1, w3
  45f698:	ldr	x0, [x25, #112]
  45f69c:	add	x7, x2, #0x8
  45f6a0:	add	w3, w3, #0x1
  45f6a4:	add	x2, x2, #0x30
  45f6a8:	lsl	x1, x1, #6
  45f6ac:	add	x2, x0, x2
  45f6b0:	add	x4, x0, x1
  45f6b4:	add	x5, x1, #0x20
  45f6b8:	str	w3, [x25, #128]
  45f6bc:	add	x3, x0, x5
  45f6c0:	mov	w6, #0x10                  	// #16
  45f6c4:	mov	x5, #0xffffffffffffffff    	// #-1
  45f6c8:	stp	xzr, x24, [x4, #8]
  45f6cc:	add	x0, x0, x7
  45f6d0:	str	x22, [x4, #24]
  45f6d4:	strb	w6, [x2, #8]
  45f6d8:	ldrb	w2, [x3, #26]
  45f6dc:	and	w2, w2, #0xfffffff3
  45f6e0:	strb	w2, [x3, #26]
  45f6e4:	stp	xzr, xzr, [x4, #32]
  45f6e8:	str	x5, [x4, #64]
  45f6ec:	str	x0, [x24]
  45f6f0:	cbz	x22, 45f6f8 <_obstack_memory_used@@Base+0xe2e8>
  45f6f4:	str	x0, [x22]
  45f6f8:	mov	x4, x22
  45f6fc:	mov	x22, x0
  45f700:	cmp	x4, #0x0
  45f704:	cset	w0, eq  // eq = none
  45f708:	cmp	x22, #0x0
  45f70c:	csinc	w0, w0, wzr, ne  // ne = any
  45f710:	cbnz	w0, 460544 <_obstack_memory_used@@Base+0xf134>
  45f714:	ldr	x24, [x20, #8]
  45f718:	str	x22, [x19, #104]
  45f71c:	lsl	x25, x24, #3
  45f720:	add	x24, x24, x24, lsl #1
  45f724:	mov	x0, x25
  45f728:	bl	404310 <malloc@plt>
  45f72c:	mov	x22, x0
  45f730:	str	x22, [x20, #24]
  45f734:	mov	x0, x25
  45f738:	lsl	x24, x24, #3
  45f73c:	bl	404310 <malloc@plt>
  45f740:	mov	x25, x0
  45f744:	str	x25, [x20, #32]
  45f748:	mov	x0, x24
  45f74c:	bl	404310 <malloc@plt>
  45f750:	mov	x1, x0
  45f754:	str	x1, [x20, #40]
  45f758:	mov	x0, x24
  45f75c:	mov	x24, x1
  45f760:	bl	404310 <malloc@plt>
  45f764:	str	x0, [x20, #48]
  45f768:	cbz	x22, 46028c <_obstack_memory_used@@Base+0xee7c>
  45f76c:	cbz	x25, 46028c <_obstack_memory_used@@Base+0xee7c>
  45f770:	cbz	x24, 46028c <_obstack_memory_used@@Base+0xee7c>
  45f774:	cbz	x0, 46028c <_obstack_memory_used@@Base+0xee7c>
  45f778:	ldr	x22, [x21, #48]
  45f77c:	lsl	x0, x22, #3
  45f780:	bl	404310 <malloc@plt>
  45f784:	str	x0, [x20, #224]
  45f788:	ldr	x1, [x20, #104]
  45f78c:	cbz	x0, 45f868 <_obstack_memory_used@@Base+0xe458>
  45f790:	mov	x2, #0x0                   	// #0
  45f794:	cbz	x22, 45f7a8 <_obstack_memory_used@@Base+0xe398>
  45f798:	str	x2, [x0, x2, lsl #3]
  45f79c:	add	x2, x2, #0x1
  45f7a0:	cmp	x2, x22
  45f7a4:	b.ne	45f798 <_obstack_memory_used@@Base+0xe388>  // b.any
  45f7a8:	ldrb	w4, [x1, #48]
  45f7ac:	mov	x7, #0x1                   	// #1
  45f7b0:	mov	x3, x1
  45f7b4:	mov	w6, w7
  45f7b8:	cmp	w4, #0x4
  45f7bc:	ldr	x2, [x1, #8]
  45f7c0:	b.eq	45f7ec <_obstack_memory_used@@Base+0xe3dc>  // b.none
  45f7c4:	nop
  45f7c8:	cmp	w4, #0x11
  45f7cc:	b.eq	45fab8 <_obstack_memory_used@@Base+0xe6a8>  // b.none
  45f7d0:	cbz	x2, 45f810 <_obstack_memory_used@@Base+0xe400>
  45f7d4:	ldrb	w4, [x2, #48]
  45f7d8:	ldr	x5, [x2, #8]
  45f7dc:	mov	x3, x2
  45f7e0:	cmp	w4, #0x4
  45f7e4:	mov	x2, x5
  45f7e8:	b.ne	45f7c8 <_obstack_memory_used@@Base+0xe3b8>  // b.any
  45f7ec:	ldrsw	x4, [x3, #40]
  45f7f0:	ldr	x5, [x20, #160]
  45f7f4:	ldr	x4, [x0, x4, lsl #3]
  45f7f8:	str	x4, [x3, #40]
  45f7fc:	lsl	w4, w6, w4
  45f800:	sxtw	x4, w4
  45f804:	orr	x4, x5, x4
  45f808:	str	x4, [x20, #160]
  45f80c:	cbnz	x2, 45f7d4 <_obstack_memory_used@@Base+0xe3c4>
  45f810:	mov	x4, #0x0                   	// #0
  45f814:	b	45f81c <_obstack_memory_used@@Base+0xe40c>
  45f818:	mov	x3, x2
  45f81c:	ldr	x2, [x3, #16]
  45f820:	cmp	x2, #0x0
  45f824:	ccmp	x2, x4, #0x4, ne  // ne = any
  45f828:	b.ne	45f7d4 <_obstack_memory_used@@Base+0xe3c4>  // b.any
  45f82c:	ldr	x2, [x3]
  45f830:	mov	x4, x3
  45f834:	cbnz	x2, 45f818 <_obstack_memory_used@@Base+0xe408>
  45f838:	cbz	x22, 45f858 <_obstack_memory_used@@Base+0xe448>
  45f83c:	nop
  45f840:	ldr	x3, [x0, x2, lsl #3]
  45f844:	cmp	x2, x3
  45f848:	b.ne	45f868 <_obstack_memory_used@@Base+0xe458>  // b.any
  45f84c:	add	x2, x2, #0x1
  45f850:	cmp	x2, x22
  45f854:	b.ne	45f840 <_obstack_memory_used@@Base+0xe430>  // b.any
  45f858:	bl	4047b0 <free@plt>
  45f85c:	str	xzr, [x20, #224]
  45f860:	ldr	x1, [x20, #104]
  45f864:	nop
  45f868:	mov	x22, x1
  45f86c:	ldr	x1, [x1, #8]
  45f870:	cbnz	x1, 45f868 <_obstack_memory_used@@Base+0xe458>
  45f874:	ldr	x1, [x22, #16]
  45f878:	cbnz	x1, 45f868 <_obstack_memory_used@@Base+0xe458>
  45f87c:	mov	x2, #0x0                   	// #0
  45f880:	str	wzr, [sp, #104]
  45f884:	cbz	x2, 45f894 <_obstack_memory_used@@Base+0xe484>
  45f888:	ldrb	w0, [x2, #48]
  45f88c:	cmp	w0, #0x11
  45f890:	b.eq	45fa68 <_obstack_memory_used@@Base+0xe658>  // b.none
  45f894:	cbz	x1, 45f8ac <_obstack_memory_used@@Base+0xe49c>
  45f898:	ldrb	w0, [x1, #48]
  45f89c:	cmp	w0, #0x11
  45f8a0:	b.eq	45fa98 <_obstack_memory_used@@Base+0xe688>  // b.none
  45f8a4:	ldr	w0, [sp, #104]
  45f8a8:	cbnz	w0, 45f8f0 <_obstack_memory_used@@Base+0xe4e0>
  45f8ac:	ldr	x0, [x22]
  45f8b0:	cbz	x0, 45fb28 <_obstack_memory_used@@Base+0xe718>
  45f8b4:	ldr	x1, [x0, #16]
  45f8b8:	cmp	x1, #0x0
  45f8bc:	ccmp	x22, x1, #0x4, ne  // ne = any
  45f8c0:	b.ne	45f868 <_obstack_memory_used@@Base+0xe458>  // b.any
  45f8c4:	mov	x22, x0
  45f8c8:	ldr	x2, [x0, #8]
  45f8cc:	b	45f880 <_obstack_memory_used@@Base+0xe470>
  45f8d0:	ldr	x0, [sp, #136]
  45f8d4:	mov	x1, x26
  45f8d8:	bl	404530 <realloc@plt>
  45f8dc:	cbz	x0, 45f8ec <_obstack_memory_used@@Base+0xe4dc>
  45f8e0:	str	x0, [sp, #136]
  45f8e4:	str	x26, [sp, #192]
  45f8e8:	b	45f4a4 <_obstack_memory_used@@Base+0xe094>
  45f8ec:	mov	w0, #0xc                   	// #12
  45f8f0:	ldr	x20, [x21]
  45f8f4:	str	w0, [sp, #96]
  45f8f8:	ldr	x22, [x20, #112]
  45f8fc:	cbz	x22, 45f910 <_obstack_memory_used@@Base+0xe500>
  45f900:	mov	x0, x22
  45f904:	ldr	x22, [x22]
  45f908:	bl	4047b0 <free@plt>
  45f90c:	cbnz	x22, 45f900 <_obstack_memory_used@@Base+0xe4f0>
  45f910:	ldr	x0, [x20, #32]
  45f914:	mov	w1, #0xf                   	// #15
  45f918:	stp	xzr, xzr, [x20, #104]
  45f91c:	str	w1, [x20, #128]
  45f920:	bl	4047b0 <free@plt>
  45f924:	str	xzr, [x20, #32]
  45f928:	ldr	x0, [sp, #144]
  45f92c:	bl	4047b0 <free@plt>
  45f930:	ldr	x0, [sp, #152]
  45f934:	bl	4047b0 <free@plt>
  45f938:	ldrb	w0, [sp, #267]
  45f93c:	cbnz	w0, 45fb08 <_obstack_memory_used@@Base+0xe6f8>
  45f940:	mov	x0, x19
  45f944:	bl	455710 <_obstack_memory_used@@Base+0x4300>
  45f948:	ldr	w0, [sp, #96]
  45f94c:	ldp	x25, x26, [sp, #64]
  45f950:	ldp	x27, x28, [sp, #80]
  45f954:	stp	xzr, xzr, [x21]
  45f958:	ldp	x19, x20, [sp, #16]
  45f95c:	ldp	x21, x22, [sp, #32]
  45f960:	ldp	x23, x24, [sp, #48]
  45f964:	ldp	x29, x30, [sp], #288
  45f968:	ret
  45f96c:	cmp	w2, #0x1
  45f970:	mov	x27, x25
  45f974:	b.le	45f988 <_obstack_memory_used@@Base+0xe578>
  45f978:	lsl	x0, x25, #2
  45f97c:	bl	404310 <malloc@plt>
  45f980:	cbz	x0, 46055c <_obstack_memory_used@@Base+0xf14c>
  45f984:	str	x0, [sp, #144]
  45f988:	cbnz	x26, 4604a0 <_obstack_memory_used@@Base+0xf090>
  45f98c:	ldr	w2, [x19, #180]
  45f990:	str	x25, [sp, #192]
  45f994:	b	45f490 <_obstack_memory_used@@Base+0xe080>
  45f998:	ldp	x25, x26, [sp, #64]
  45f99c:	ldp	x27, x28, [sp, #80]
  45f9a0:	mov	w1, #0xc                   	// #12
  45f9a4:	mov	x0, x19
  45f9a8:	str	w1, [sp, #96]
  45f9ac:	bl	455710 <_obstack_memory_used@@Base+0x4300>
  45f9b0:	stp	xzr, xzr, [x21]
  45f9b4:	ldr	w0, [sp, #96]
  45f9b8:	ldp	x19, x20, [sp, #16]
  45f9bc:	ldp	x21, x22, [sp, #32]
  45f9c0:	ldp	x23, x24, [sp, #48]
  45f9c4:	ldp	x29, x30, [sp], #288
  45f9c8:	ret
  45f9cc:	mov	x1, #0x1                   	// #1
  45f9d0:	mov	x0, #0x20                  	// #32
  45f9d4:	bl	4044c0 <calloc@plt>
  45f9d8:	str	x0, [x19, #120]
  45f9dc:	cbz	x0, 45f998 <_obstack_memory_used@@Base+0xe588>
  45f9e0:	mov	x27, #0x0                   	// #0
  45f9e4:	mov	x26, #0x1                   	// #1
  45f9e8:	lsl	w23, w27, #3
  45f9ec:	mov	w28, #0x0                   	// #0
  45f9f0:	b	45fa14 <_obstack_memory_used@@Base+0xe604>
  45f9f4:	cbnz	w3, 45fa04 <_obstack_memory_used@@Base+0xe5f4>
  45f9f8:	ldrb	w0, [x19, #176]
  45f9fc:	orr	w0, w0, #0x8
  45fa00:	strb	w0, [x19, #176]
  45fa04:	add	w28, w28, #0x1
  45fa08:	add	w23, w23, #0x1
  45fa0c:	cmp	w28, #0x40
  45fa10:	b.eq	45fa58 <_obstack_memory_used@@Base+0xe648>  // b.none
  45fa14:	mov	w0, w23
  45fa18:	bl	404630 <btowc@plt>
  45fa1c:	and	w3, w23, #0xffffff80
  45fa20:	cmn	w0, #0x1
  45fa24:	b.eq	45f9f4 <_obstack_memory_used@@Base+0xe5e4>  // b.none
  45fa28:	ldr	x4, [x19, #120]
  45fa2c:	lsl	x1, x26, x28
  45fa30:	ldr	x2, [x4, x27]
  45fa34:	orr	x1, x2, x1
  45fa38:	str	x1, [x4, x27]
  45fa3c:	cbnz	w3, 45fa04 <_obstack_memory_used@@Base+0xe5f4>
  45fa40:	cmp	w0, w23
  45fa44:	b.ne	45f9f8 <_obstack_memory_used@@Base+0xe5e8>  // b.any
  45fa48:	add	w28, w28, #0x1
  45fa4c:	add	w23, w23, #0x1
  45fa50:	cmp	w28, #0x40
  45fa54:	b.ne	45fa14 <_obstack_memory_used@@Base+0xe604>  // b.any
  45fa58:	add	x27, x27, #0x8
  45fa5c:	cmp	x27, #0x20
  45fa60:	b.ne	45f9e8 <_obstack_memory_used@@Base+0xe5d8>  // b.any
  45fa64:	b	45f3f4 <_obstack_memory_used@@Base+0xdfe4>
  45fa68:	mov	x1, x21
  45fa6c:	add	x0, sp, #0x68
  45fa70:	bl	458fc0 <_obstack_memory_used@@Base+0x7bb0>
  45fa74:	str	x0, [x22, #8]
  45fa78:	cbz	x0, 45fa80 <_obstack_memory_used@@Base+0xe670>
  45fa7c:	str	x22, [x0]
  45fa80:	ldr	x1, [x22, #16]
  45fa84:	cbz	x1, 45f8a4 <_obstack_memory_used@@Base+0xe494>
  45fa88:	ldrb	w0, [x1, #48]
  45fa8c:	cmp	w0, #0x11
  45fa90:	b.ne	45f8a4 <_obstack_memory_used@@Base+0xe494>  // b.any
  45fa94:	nop
  45fa98:	mov	x2, x1
  45fa9c:	add	x0, sp, #0x68
  45faa0:	mov	x1, x21
  45faa4:	bl	458fc0 <_obstack_memory_used@@Base+0x7bb0>
  45faa8:	str	x0, [x22, #16]
  45faac:	cbz	x0, 45f8a4 <_obstack_memory_used@@Base+0xe494>
  45fab0:	str	x22, [x0]
  45fab4:	b	45f8a4 <_obstack_memory_used@@Base+0xe494>
  45fab8:	cbz	x2, 45f810 <_obstack_memory_used@@Base+0xe400>
  45fabc:	ldrb	w4, [x2, #48]
  45fac0:	ldr	x5, [x2, #8]
  45fac4:	cmp	w4, #0x11
  45fac8:	b.ne	45f7dc <_obstack_memory_used@@Base+0xe3cc>  // b.any
  45facc:	ldr	x4, [x2, #40]
  45fad0:	str	x5, [x3, #8]
  45fad4:	cbz	x5, 45fadc <_obstack_memory_used@@Base+0xe6cc>
  45fad8:	str	x3, [x5]
  45fadc:	ldr	x8, [x3, #40]
  45fae0:	mov	x2, x5
  45fae4:	cmp	x4, #0x3f
  45fae8:	ldr	x5, [x0, x8, lsl #3]
  45faec:	str	x5, [x0, x4, lsl #3]
  45faf0:	b.gt	45f7d0 <_obstack_memory_used@@Base+0xe3c0>
  45faf4:	ldr	x5, [x20, #160]
  45faf8:	lsl	x4, x7, x4
  45fafc:	bic	x4, x5, x4
  45fb00:	str	x4, [x20, #160]
  45fb04:	b	45f7d0 <_obstack_memory_used@@Base+0xe3c0>
  45fb08:	ldr	x0, [sp, #136]
  45fb0c:	bl	4047b0 <free@plt>
  45fb10:	b	45f940 <_obstack_memory_used@@Base+0xe530>
  45fb14:	mov	x27, x20
  45fb18:	dup	v0.2d, x27
  45fb1c:	str	wzr, [sp, #96]
  45fb20:	str	q0, [sp, #176]
  45fb24:	b	45f5b0 <_obstack_memory_used@@Base+0xe1a0>
  45fb28:	ldr	x0, [x20, #104]
  45fb2c:	nop
  45fb30:	mov	x22, x0
  45fb34:	ldr	x0, [x0, #8]
  45fb38:	cbnz	x0, 45fb30 <_obstack_memory_used@@Base+0xe720>
  45fb3c:	ldr	x0, [x22, #16]
  45fb40:	cbnz	x0, 45fb30 <_obstack_memory_used@@Base+0xe720>
  45fb44:	b	45fb78 <_obstack_memory_used@@Base+0xe768>
  45fb48:	ldr	x0, [x22, #8]
  45fb4c:	ldr	x1, [x0, #24]
  45fb50:	ldr	x0, [x0, #56]
  45fb54:	str	x1, [x22, #24]
  45fb58:	str	x0, [x22, #56]
  45fb5c:	ldr	x1, [x22]
  45fb60:	cbz	x1, 45fbd8 <_obstack_memory_used@@Base+0xe7c8>
  45fb64:	ldr	x0, [x1, #16]
  45fb68:	cmp	x0, #0x0
  45fb6c:	ccmp	x22, x0, #0x4, ne  // ne = any
  45fb70:	b.ne	45fb30 <_obstack_memory_used@@Base+0xe720>  // b.any
  45fb74:	mov	x22, x1
  45fb78:	ldrb	w0, [x22, #48]
  45fb7c:	cmp	w0, #0x10
  45fb80:	b.eq	45fb48 <_obstack_memory_used@@Base+0xe738>  // b.none
  45fb84:	ldp	x2, x3, [x22, #40]
  45fb88:	str	x22, [x22, #24]
  45fb8c:	mov	x0, x20
  45fb90:	mov	x1, x2
  45fb94:	mov	x2, x3
  45fb98:	bl	4527d0 <_obstack_memory_used@@Base+0x13c0>
  45fb9c:	str	x0, [x22, #56]
  45fba0:	cmn	x0, #0x1
  45fba4:	b.eq	45f8ec <_obstack_memory_used@@Base+0xe4dc>  // b.none
  45fba8:	ldrb	w1, [x22, #48]
  45fbac:	cmp	w1, #0xc
  45fbb0:	b.ne	45fb5c <_obstack_memory_used@@Base+0xe74c>  // b.any
  45fbb4:	ldr	x1, [x20]
  45fbb8:	ldr	w2, [x22, #40]
  45fbbc:	add	x0, x1, x0, lsl #4
  45fbc0:	ldr	w1, [x0, #8]
  45fbc4:	bfi	w1, w2, #8, #10
  45fbc8:	str	w1, [x0, #8]
  45fbcc:	ldr	x1, [x22]
  45fbd0:	cbnz	x1, 45fb64 <_obstack_memory_used@@Base+0xe754>
  45fbd4:	nop
  45fbd8:	ldr	x22, [x20, #104]
  45fbdc:	mov	x0, x22
  45fbe0:	ldrb	w2, [x0, #48]
  45fbe4:	ldr	x1, [x0, #8]
  45fbe8:	cmp	w2, #0xb
  45fbec:	b.eq	45fc2c <_obstack_memory_used@@Base+0xe81c>  // b.none
  45fbf0:	cmp	w2, #0x10
  45fbf4:	b.eq	45fe0c <_obstack_memory_used@@Base+0xe9fc>  // b.none
  45fbf8:	cbz	x1, 45fc04 <_obstack_memory_used@@Base+0xe7f4>
  45fbfc:	ldr	x2, [x0, #32]
  45fc00:	str	x2, [x1, #32]
  45fc04:	ldr	x2, [x0, #16]
  45fc08:	cbz	x2, 45fc14 <_obstack_memory_used@@Base+0xe804>
  45fc0c:	ldr	x3, [x0, #32]
  45fc10:	str	x3, [x2, #32]
  45fc14:	cbz	x1, 45fc44 <_obstack_memory_used@@Base+0xe834>
  45fc18:	mov	x0, x1
  45fc1c:	ldrb	w2, [x0, #48]
  45fc20:	ldr	x1, [x0, #8]
  45fc24:	cmp	w2, #0xb
  45fc28:	b.ne	45fbf0 <_obstack_memory_used@@Base+0xe7e0>  // b.any
  45fc2c:	str	x0, [x1, #32]
  45fc30:	mov	x0, x1
  45fc34:	b	45fc1c <_obstack_memory_used@@Base+0xe80c>
  45fc38:	ldr	x2, [x3, #16]
  45fc3c:	mov	x1, x0
  45fc40:	mov	x0, x3
  45fc44:	cmp	x2, #0x0
  45fc48:	ccmp	x1, x2, #0x4, ne  // ne = any
  45fc4c:	b.ne	4603d8 <_obstack_memory_used@@Base+0xefc8>  // b.any
  45fc50:	ldr	x3, [x0]
  45fc54:	cbnz	x3, 45fc38 <_obstack_memory_used@@Base+0xe828>
  45fc58:	ldrb	w0, [x22, #48]
  45fc5c:	mov	x26, #0x2                   	// #2
  45fc60:	ldr	x1, [x22, #56]
  45fc64:	cmp	w0, #0xb
  45fc68:	b.hi	45fcec <_obstack_memory_used@@Base+0xe8dc>  // b.pmore
  45fc6c:	nop
  45fc70:	cmp	w0, #0x9
  45fc74:	b.hi	45fe60 <_obstack_memory_used@@Base+0xea50>  // b.pmore
  45fc78:	cmp	w0, #0x4
  45fc7c:	b.eq	45fed0 <_obstack_memory_used@@Base+0xeac0>  // b.none
  45fc80:	b.ls	45fdd8 <_obstack_memory_used@@Base+0xe9c8>  // b.plast
  45fc84:	sub	w2, w0, #0x8
  45fc88:	and	w2, w2, #0xff
  45fc8c:	cmp	w2, #0x1
  45fc90:	b.hi	45fcfc <_obstack_memory_used@@Base+0xe8ec>  // b.pmore
  45fc94:	ldr	x3, [x22, #32]
  45fc98:	add	x1, x1, x1, lsl #1
  45fc9c:	ldr	x2, [x20, #40]
  45fca0:	lsl	x1, x1, #3
  45fca4:	ldr	x24, [x3, #56]
  45fca8:	add	x25, x2, x1
  45fcac:	mov	x0, #0x8                   	// #8
  45fcb0:	adrp	x3, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  45fcb4:	ldr	q0, [x3, #1536]
  45fcb8:	str	q0, [x2, x1]
  45fcbc:	bl	404310 <malloc@plt>
  45fcc0:	str	x0, [x25, #16]
  45fcc4:	cbz	x0, 4605dc <_obstack_memory_used@@Base+0xf1cc>
  45fcc8:	str	x24, [x0]
  45fccc:	nop
  45fcd0:	ldr	x24, [x22, #8]
  45fcd4:	cbz	x24, 45fd28 <_obstack_memory_used@@Base+0xe918>
  45fcd8:	mov	x22, x24
  45fcdc:	ldrb	w0, [x22, #48]
  45fce0:	ldr	x1, [x22, #56]
  45fce4:	cmp	w0, #0xb
  45fce8:	b.ls	45fc70 <_obstack_memory_used@@Base+0xe860>  // b.plast
  45fcec:	cmp	w0, #0xc
  45fcf0:	b.eq	45fc94 <_obstack_memory_used@@Base+0xe884>  // b.none
  45fcf4:	cmp	w0, #0x10
  45fcf8:	b.eq	45fcd0 <_obstack_memory_used@@Base+0xe8c0>  // b.none
  45fcfc:	tbz	w0, #3, 45ff04 <_obstack_memory_used@@Base+0xeaf4>
  45fd00:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45fd04:	add	x3, x3, #0x2c0
  45fd08:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45fd0c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45fd10:	add	x3, x3, #0x58
  45fd14:	add	x1, x1, #0x90
  45fd18:	add	x0, x0, #0xe0
  45fd1c:	mov	w2, #0x5c2                 	// #1474
  45fd20:	bl	404ac0 <__assert_fail@plt>
  45fd24:	mov	x22, x0
  45fd28:	ldr	x0, [x22, #16]
  45fd2c:	cmp	x0, #0x0
  45fd30:	cset	w25, eq  // eq = none
  45fd34:	cmp	x0, x24
  45fd38:	csinc	w25, w25, wzr, ne  // ne = any
  45fd3c:	cbz	w25, 4603e4 <_obstack_memory_used@@Base+0xefd4>
  45fd40:	ldr	x0, [x22]
  45fd44:	mov	x24, x22
  45fd48:	cbnz	x0, 45fd24 <_obstack_memory_used@@Base+0xe914>
  45fd4c:	ldr	x1, [x20, #16]
  45fd50:	mov	w26, #0x0                   	// #0
  45fd54:	mov	x22, #0x0                   	// #0
  45fd58:	cmp	x22, x1
  45fd5c:	b.eq	45fdb0 <_obstack_memory_used@@Base+0xe9a0>  // b.none
  45fd60:	add	x24, x22, x22, lsl #1
  45fd64:	ldr	x0, [x20, #48]
  45fd68:	lsl	x24, x24, #3
  45fd6c:	add	x0, x0, x24
  45fd70:	ldr	x0, [x0, #8]
  45fd74:	cbnz	x0, 45fdd0 <_obstack_memory_used@@Base+0xe9c0>
  45fd78:	mov	x2, x22
  45fd7c:	mov	x1, x20
  45fd80:	add	x0, sp, #0x68
  45fd84:	mov	w3, #0x1                   	// #1
  45fd88:	bl	455d60 <_obstack_memory_used@@Base+0x4950>
  45fd8c:	cbnz	w0, 45f8f0 <_obstack_memory_used@@Base+0xe4e0>
  45fd90:	ldr	x0, [x20, #48]
  45fd94:	add	x22, x22, #0x1
  45fd98:	add	x24, x0, x24
  45fd9c:	ldr	x0, [x24, #8]
  45fda0:	cbz	x0, 45fe28 <_obstack_memory_used@@Base+0xea18>
  45fda4:	ldr	x1, [x20, #16]
  45fda8:	cmp	x22, x1
  45fdac:	b.ne	45fd60 <_obstack_memory_used@@Base+0xe950>  // b.any
  45fdb0:	cbz	w26, 45ff20 <_obstack_memory_used@@Base+0xeb10>
  45fdb4:	ldr	x0, [x20, #48]
  45fdb8:	mov	x24, #0x0                   	// #0
  45fdbc:	mov	w26, #0x0                   	// #0
  45fdc0:	mov	x22, #0x0                   	// #0
  45fdc4:	add	x0, x0, x24
  45fdc8:	ldr	x0, [x0, #8]
  45fdcc:	cbz	x0, 45fd78 <_obstack_memory_used@@Base+0xe968>
  45fdd0:	add	x22, x22, #0x1
  45fdd4:	b	45fd58 <_obstack_memory_used@@Base+0xe948>
  45fdd8:	cmp	w0, #0x2
  45fddc:	b.ne	45ff04 <_obstack_memory_used@@Base+0xeaf4>  // b.any
  45fde0:	ldr	x0, [x22, #32]
  45fde4:	cbz	x0, 45fcd0 <_obstack_memory_used@@Base+0xe8c0>
  45fde8:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45fdec:	add	x3, x3, #0x2c0
  45fdf0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45fdf4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  45fdf8:	add	x3, x3, #0x58
  45fdfc:	add	x1, x1, #0x90
  45fe00:	add	x0, x0, #0xa8
  45fe04:	mov	w2, #0x59f                 	// #1439
  45fe08:	bl	404ac0 <__assert_fail@plt>
  45fe0c:	ldr	x2, [x0, #16]
  45fe10:	ldr	x3, [x2, #24]
  45fe14:	str	x3, [x1, #32]
  45fe18:	ldr	x0, [x0, #32]
  45fe1c:	str	x0, [x2, #32]
  45fe20:	mov	x0, x1
  45fe24:	b	45fc1c <_obstack_memory_used@@Base+0xe80c>
  45fe28:	ldr	x0, [sp, #120]
  45fe2c:	bl	4047b0 <free@plt>
  45fe30:	ldr	x1, [x20, #16]
  45fe34:	cmp	x1, x22
  45fe38:	b.eq	460274 <_obstack_memory_used@@Base+0xee64>  // b.none
  45fe3c:	add	x24, x22, x22, lsl #1
  45fe40:	mov	w26, w25
  45fe44:	ldr	x0, [x20, #48]
  45fe48:	lsl	x24, x24, #3
  45fe4c:	add	x0, x0, x24
  45fe50:	ldr	x0, [x0, #8]
  45fe54:	cbz	x0, 45fd78 <_obstack_memory_used@@Base+0xe968>
  45fe58:	add	x22, x22, #0x1
  45fe5c:	b	45fd58 <_obstack_memory_used@@Base+0xe948>
  45fe60:	ldrb	w0, [x20, #176]
  45fe64:	orr	w0, w0, #0x1
  45fe68:	strb	w0, [x20, #176]
  45fe6c:	ldr	x24, [x22, #8]
  45fe70:	cbz	x24, 460404 <_obstack_memory_used@@Base+0xeff4>
  45fe74:	ldr	x0, [x24, #24]
  45fe78:	ldr	x25, [x0, #56]
  45fe7c:	ldr	x0, [x22, #16]
  45fe80:	cbz	x0, 460414 <_obstack_memory_used@@Base+0xf004>
  45fe84:	ldr	x0, [x0, #24]
  45fe88:	ldr	x28, [x0, #56]
  45fe8c:	tbnz	x25, #63, 4606b0 <_obstack_memory_used@@Base+0xf2a0>
  45fe90:	tbnz	x28, #63, 46068c <_obstack_memory_used@@Base+0xf27c>
  45fe94:	ldr	x2, [x20, #40]
  45fe98:	add	x1, x1, x1, lsl #1
  45fe9c:	mov	x0, #0x10                  	// #16
  45fea0:	add	x27, x2, x1, lsl #3
  45fea4:	str	x26, [x2, x1, lsl #3]
  45fea8:	bl	404310 <malloc@plt>
  45feac:	str	x0, [x27, #16]
  45feb0:	cbz	x0, 45f8ec <_obstack_memory_used@@Base+0xe4dc>
  45feb4:	cmp	x25, x28
  45feb8:	b.eq	4603f0 <_obstack_memory_used@@Base+0xefe0>  // b.none
  45febc:	str	x26, [x27, #8]
  45fec0:	b.ge	460420 <_obstack_memory_used@@Base+0xf010>  // b.tcont
  45fec4:	stp	x25, x28, [x0]
  45fec8:	cbnz	x24, 45fcd8 <_obstack_memory_used@@Base+0xe8c8>
  45fecc:	b	45fd28 <_obstack_memory_used@@Base+0xe918>
  45fed0:	ldr	x2, [x22, #32]
  45fed4:	ldr	x0, [x20, #24]
  45fed8:	ldr	x24, [x2, #56]
  45fedc:	str	x24, [x0, x1, lsl #3]
  45fee0:	ldrb	w0, [x22, #48]
  45fee4:	cmp	w0, #0x4
  45fee8:	b.ne	45fcd0 <_obstack_memory_used@@Base+0xe8c0>  // b.any
  45feec:	add	x1, x1, x1, lsl #1
  45fef0:	mov	x0, #0x8                   	// #8
  45fef4:	ldr	x2, [x20, #40]
  45fef8:	lsl	x1, x1, #3
  45fefc:	add	x25, x2, x1
  45ff00:	b	45fcb0 <_obstack_memory_used@@Base+0xe8a0>
  45ff04:	ldr	x2, [x22, #32]
  45ff08:	ldr	x0, [x20, #24]
  45ff0c:	ldr	x24, [x22, #8]
  45ff10:	ldr	x2, [x2, #56]
  45ff14:	str	x2, [x0, x1, lsl #3]
  45ff18:	cbnz	x24, 45fcd8 <_obstack_memory_used@@Base+0xe8c8>
  45ff1c:	b	45fd28 <_obstack_memory_used@@Base+0xe918>
  45ff20:	ldrb	w0, [x21, #56]
  45ff24:	tbnz	w0, #4, 45ff38 <_obstack_memory_used@@Base+0xeb28>
  45ff28:	ldr	x0, [x21, #48]
  45ff2c:	cbz	x0, 45ff38 <_obstack_memory_used@@Base+0xeb28>
  45ff30:	ldrb	w0, [x20, #176]
  45ff34:	tbnz	w0, #0, 45ff40 <_obstack_memory_used@@Base+0xeb30>
  45ff38:	ldr	x0, [x20, #152]
  45ff3c:	cbz	x0, 460030 <_obstack_memory_used@@Base+0xec20>
  45ff40:	add	x0, x22, x22, lsl #1
  45ff44:	lsl	x0, x0, #3
  45ff48:	bl	404310 <malloc@plt>
  45ff4c:	str	x0, [x20, #56]
  45ff50:	cbz	x0, 46055c <_obstack_memory_used@@Base+0xf14c>
  45ff54:	mov	x2, #0x0                   	// #0
  45ff58:	mov	x1, #0x0                   	// #0
  45ff5c:	cbnz	x22, 45ff68 <_obstack_memory_used@@Base+0xeb58>
  45ff60:	b	460030 <_obstack_memory_used@@Base+0xec20>
  45ff64:	ldr	x0, [x20, #56]
  45ff68:	add	x0, x0, x2
  45ff6c:	add	x1, x1, #0x1
  45ff70:	add	x2, x2, #0x18
  45ff74:	stp	xzr, xzr, [x0]
  45ff78:	str	xzr, [x0, #16]
  45ff7c:	ldr	x0, [x20, #16]
  45ff80:	cmp	x0, x1
  45ff84:	b.hi	45ff64 <_obstack_memory_used@@Base+0xeb54>  // b.pmore
  45ff88:	cbz	x0, 460030 <_obstack_memory_used@@Base+0xec20>
  45ff8c:	ldr	x6, [x20, #48]
  45ff90:	mov	x25, #0x0                   	// #0
  45ff94:	add	x28, x25, x25, lsl #1
  45ff98:	lsl	x28, x28, #3
  45ff9c:	add	x5, x6, x28
  45ffa0:	ldp	x1, x27, [x5, #8]
  45ffa4:	cmp	x1, #0x0
  45ffa8:	b.le	460020 <_obstack_memory_used@@Base+0xec10>
  45ffac:	mov	x24, #0x0                   	// #0
  45ffb0:	b	45ffd0 <_obstack_memory_used@@Base+0xebc0>
  45ffb4:	add	x2, x1, #0x1
  45ffb8:	str	x2, [x22, #8]
  45ffbc:	str	x25, [x0, x1, lsl #3]
  45ffc0:	add	x24, x24, #0x1
  45ffc4:	ldr	x0, [x5, #8]
  45ffc8:	cmp	x24, x0
  45ffcc:	b.ge	46001c <_obstack_memory_used@@Base+0xec0c>  // b.tcont
  45ffd0:	ldr	x2, [x27, x24, lsl #3]
  45ffd4:	ldr	x3, [x20, #56]
  45ffd8:	add	x2, x2, x2, lsl #1
  45ffdc:	add	x22, x3, x2, lsl #3
  45ffe0:	ldr	x4, [x3, x2, lsl #3]
  45ffe4:	ldp	x1, x0, [x22, #8]
  45ffe8:	cmp	x4, x1
  45ffec:	b.ne	45ffb4 <_obstack_memory_used@@Base+0xeba4>  // b.any
  45fff0:	add	x1, x1, #0x1
  45fff4:	lsl	x4, x1, #1
  45fff8:	str	x4, [x3, x2, lsl #3]
  45fffc:	lsl	x1, x1, #4
  460000:	bl	404530 <realloc@plt>
  460004:	cbz	x0, 45f8ec <_obstack_memory_used@@Base+0xe4dc>
  460008:	ldr	x6, [x20, #48]
  46000c:	str	x0, [x22, #16]
  460010:	ldr	x1, [x22, #8]
  460014:	add	x5, x6, x28
  460018:	b	45ffb4 <_obstack_memory_used@@Base+0xeba4>
  46001c:	ldr	x0, [x20, #16]
  460020:	add	x25, x25, #0x1
  460024:	cmp	x0, x25
  460028:	b.hi	45ff94 <_obstack_memory_used@@Base+0xeb84>  // b.pmore
  46002c:	nop
  460030:	ldrb	w0, [x19, #176]
  460034:	cmp	x23, #0x0
  460038:	str	wzr, [sp, #96]
  46003c:	cset	w1, eq  // eq = none
  460040:	ands	w1, w1, w0, lsr #2
  460044:	b.ne	4602b4 <_obstack_memory_used@@Base+0xeea4>  // b.any
  460048:	ldr	x0, [x19, #104]
  46004c:	ldr	x23, [x19, #48]
  460050:	ldr	x0, [x0, #24]
  460054:	ldr	x0, [x0, #56]
  460058:	str	x0, [x19, #144]
  46005c:	add	x0, x0, x0, lsl #1
  460060:	add	x23, x23, x0, lsl #3
  460064:	ldr	x20, [x23, #8]
  460068:	str	x20, [sp, #112]
  46006c:	cmp	x20, #0x0
  460070:	b.le	460264 <_obstack_memory_used@@Base+0xee54>
  460074:	lsl	x24, x20, #3
  460078:	str	x20, [sp, #104]
  46007c:	mov	x0, x24
  460080:	bl	404310 <malloc@plt>
  460084:	str	x0, [sp, #120]
  460088:	mov	x22, x0
  46008c:	cbz	x0, 460614 <_obstack_memory_used@@Base+0xf204>
  460090:	ldr	x1, [x23, #16]
  460094:	mov	x2, x24
  460098:	bl	403f70 <memcpy@plt>
  46009c:	str	wzr, [sp, #100]
  4600a0:	ldr	x0, [x19, #152]
  4600a4:	mov	x2, #0x0                   	// #0
  4600a8:	cmp	x0, #0x0
  4600ac:	b.le	4601a8 <_obstack_memory_used@@Base+0xed98>
  4600b0:	ldr	x1, [x22, x2, lsl #3]
  4600b4:	ldr	x4, [x19]
  4600b8:	add	x5, x4, x1, lsl #4
  4600bc:	ldrb	w0, [x5, #8]
  4600c0:	cmp	w0, #0x4
  4600c4:	b.eq	4600f0 <_obstack_memory_used@@Base+0xece0>  // b.none
  4600c8:	add	x2, x2, #0x1
  4600cc:	cmp	x2, x20
  4600d0:	b.ge	4601a8 <_obstack_memory_used@@Base+0xed98>  // b.tcont
  4600d4:	ldr	x22, [sp, #120]
  4600d8:	ldr	x4, [x19]
  4600dc:	ldr	x1, [x22, x2, lsl #3]
  4600e0:	add	x5, x4, x1, lsl #4
  4600e4:	ldrb	w0, [x5, #8]
  4600e8:	cmp	w0, #0x4
  4600ec:	b.ne	4600c8 <_obstack_memory_used@@Base+0xecb8>  // b.any
  4600f0:	cmp	x20, #0x0
  4600f4:	b.le	460484 <_obstack_memory_used@@Base+0xf074>
  4600f8:	mov	x0, #0x0                   	// #0
  4600fc:	b	46010c <_obstack_memory_used@@Base+0xecfc>
  460100:	add	x0, x0, #0x1
  460104:	cmp	x0, x20
  460108:	b.eq	4600c8 <_obstack_memory_used@@Base+0xecb8>  // b.none
  46010c:	ldr	x3, [x22, x0, lsl #3]
  460110:	lsl	x3, x3, #4
  460114:	add	x6, x4, x3
  460118:	ldrb	w6, [x6, #8]
  46011c:	cmp	w6, #0x9
  460120:	b.ne	460100 <_obstack_memory_used@@Base+0xecf0>  // b.any
  460124:	ldr	x6, [x4, x3]
  460128:	ldr	x3, [x5]
  46012c:	cmp	x6, x3
  460130:	b.ne	460100 <_obstack_memory_used@@Base+0xecf0>  // b.any
  460134:	ldr	x0, [x19, #40]
  460138:	add	x1, x1, x1, lsl #1
  46013c:	sub	x5, x20, #0x1
  460140:	mov	x4, #0x0                   	// #0
  460144:	add	x1, x0, x1, lsl #3
  460148:	ldr	x0, [x1, #16]
  46014c:	ldr	x3, [x0]
  460150:	b	46016c <_obstack_memory_used@@Base+0xed5c>
  460154:	add	x0, x5, x4
  460158:	lsr	x0, x0, #1
  46015c:	ldr	x1, [x22, x0, lsl #3]
  460160:	cmp	x1, x3
  460164:	b.lt	46025c <_obstack_memory_used@@Base+0xee4c>  // b.tstop
  460168:	mov	x5, x0
  46016c:	cmp	x5, x4
  460170:	b.hi	460154 <_obstack_memory_used@@Base+0xed44>  // b.pmore
  460174:	ldr	x0, [x22, x4, lsl #3]
  460178:	cmp	x0, x3
  46017c:	b.eq	4600c8 <_obstack_memory_used@@Base+0xecb8>  // b.none
  460180:	ldr	x1, [x19, #48]
  460184:	add	x3, x3, x3, lsl #1
  460188:	add	x0, sp, #0x68
  46018c:	add	x1, x1, x3, lsl #3
  460190:	bl	452a68 <_obstack_memory_used@@Base+0x1658>
  460194:	cbnz	w0, 4601e4 <_obstack_memory_used@@Base+0xedd4>
  460198:	ldr	x20, [sp, #112]
  46019c:	mov	x2, #0x1                   	// #1
  4601a0:	cmp	x2, x20
  4601a4:	b.lt	4600d4 <_obstack_memory_used@@Base+0xecc4>  // b.tstop
  4601a8:	add	x0, sp, #0x64
  4601ac:	add	x2, sp, #0x68
  4601b0:	mov	x1, x19
  4601b4:	mov	w3, #0x0                   	// #0
  4601b8:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  4601bc:	str	x0, [x19, #72]
  4601c0:	cbz	x0, 4603c4 <_obstack_memory_used@@Base+0xefb4>
  4601c4:	ldrsb	w1, [x0, #104]
  4601c8:	tbnz	w1, #31, 460364 <_obstack_memory_used@@Base+0xef54>
  4601cc:	dup	v0.2d, x0
  4601d0:	str	x0, [x19, #96]
  4601d4:	str	q0, [x19, #80]
  4601d8:	ldr	x0, [sp, #120]
  4601dc:	bl	4047b0 <free@plt>
  4601e0:	mov	w0, #0x0                   	// #0
  4601e4:	ldr	x22, [x21]
  4601e8:	str	w0, [sp, #96]
  4601ec:	ldr	x20, [x22, #112]
  4601f0:	cbz	x20, 460208 <_obstack_memory_used@@Base+0xedf8>
  4601f4:	nop
  4601f8:	mov	x0, x20
  4601fc:	ldr	x20, [x20]
  460200:	bl	4047b0 <free@plt>
  460204:	cbnz	x20, 4601f8 <_obstack_memory_used@@Base+0xede8>
  460208:	ldr	x0, [x22, #32]
  46020c:	mov	w1, #0xf                   	// #15
  460210:	stp	xzr, xzr, [x22, #104]
  460214:	str	w1, [x22, #128]
  460218:	bl	4047b0 <free@plt>
  46021c:	str	xzr, [x22, #32]
  460220:	ldr	x0, [sp, #144]
  460224:	bl	4047b0 <free@plt>
  460228:	ldr	x0, [sp, #152]
  46022c:	bl	4047b0 <free@plt>
  460230:	ldrb	w0, [sp, #267]
  460234:	cbnz	w0, 460298 <_obstack_memory_used@@Base+0xee88>
  460238:	ldr	w0, [sp, #96]
  46023c:	cbnz	w0, 45f940 <_obstack_memory_used@@Base+0xe530>
  460240:	ldp	x19, x20, [sp, #16]
  460244:	ldp	x21, x22, [sp, #32]
  460248:	ldp	x23, x24, [sp, #48]
  46024c:	ldp	x25, x26, [sp, #64]
  460250:	ldp	x27, x28, [sp, #80]
  460254:	ldp	x29, x30, [sp], #288
  460258:	ret
  46025c:	add	x4, x0, #0x1
  460260:	b	46016c <_obstack_memory_used@@Base+0xed5c>
  460264:	str	wzr, [sp, #100]
  460268:	stp	xzr, xzr, [sp, #104]
  46026c:	str	xzr, [sp, #120]
  460270:	b	4601a8 <_obstack_memory_used@@Base+0xed98>
  460274:	ldr	x0, [x20, #48]
  460278:	mov	w26, #0x0                   	// #0
  46027c:	ldr	x22, [x0, #8]
  460280:	cbnz	x22, 4603cc <_obstack_memory_used@@Base+0xefbc>
  460284:	mov	x24, #0x0                   	// #0
  460288:	b	45fd78 <_obstack_memory_used@@Base+0xe968>
  46028c:	mov	w0, #0xc                   	// #12
  460290:	str	w0, [sp, #96]
  460294:	b	45f8f8 <_obstack_memory_used@@Base+0xe4e8>
  460298:	ldr	x0, [sp, #136]
  46029c:	bl	4047b0 <free@plt>
  4602a0:	b	460238 <_obstack_memory_used@@Base+0xee28>
  4602a4:	add	x0, sp, #0x80
  4602a8:	bl	451cc8 <_obstack_memory_used@@Base+0x8b8>
  4602ac:	str	wzr, [sp, #96]
  4602b0:	b	45f5b0 <_obstack_memory_used@@Base+0xe1a0>
  4602b4:	ldr	x0, [x21, #40]
  4602b8:	cbnz	x0, 460048 <_obstack_memory_used@@Base+0xec38>
  4602bc:	ldr	x6, [x19, #16]
  4602c0:	cbz	x6, 46065c <_obstack_memory_used@@Base+0xf24c>
  4602c4:	ldr	x7, [x19]
  4602c8:	mov	w2, #0x10001               	// #65537
  4602cc:	mov	w8, #0x0                   	// #0
  4602d0:	mov	x5, #0x0                   	// #0
  4602d4:	mov	x4, x7
  4602d8:	mov	x3, #0x1                   	// #1
  4602dc:	movk	x2, #0x1, lsl #48
  4602e0:	ldrb	w0, [x4, #8]
  4602e4:	cmp	w0, #0x5
  4602e8:	b.eq	460634 <_obstack_memory_used@@Base+0xf224>  // b.none
  4602ec:	b.hi	460584 <_obstack_memory_used@@Base+0xf174>  // b.pmore
  4602f0:	cmp	w0, #0x3
  4602f4:	b.eq	46061c <_obstack_memory_used@@Base+0xf20c>  // b.none
  4602f8:	cmp	w0, #0x4
  4602fc:	b.ne	46056c <_obstack_memory_used@@Base+0xf15c>  // b.any
  460300:	add	x5, x5, #0x1
  460304:	add	x4, x4, #0x10
  460308:	cmp	x5, x6
  46030c:	b.ne	4602e0 <_obstack_memory_used@@Base+0xeed0>  // b.any
  460310:	orr	w26, w26, w8
  460314:	add	x5, x7, x5, lsl #4
  460318:	tst	w26, #0xff
  46031c:	mov	w1, #0x7                   	// #7
  460320:	b.ne	460340 <_obstack_memory_used@@Base+0xef30>  // b.any
  460324:	b	46065c <_obstack_memory_used@@Base+0xf24c>
  460328:	cmp	w0, #0x5
  46032c:	b.ne	460334 <_obstack_memory_used@@Base+0xef24>  // b.any
  460330:	strb	w1, [x7, #8]
  460334:	add	x7, x7, #0x10
  460338:	cmp	x7, x5
  46033c:	b.eq	460660 <_obstack_memory_used@@Base+0xf250>  // b.none
  460340:	ldrb	w0, [x7, #8]
  460344:	cmp	w0, #0x1
  460348:	b.ne	460328 <_obstack_memory_used@@Base+0xef18>  // b.any
  46034c:	ldrsb	w0, [x7]
  460350:	tbz	w0, #31, 460334 <_obstack_memory_used@@Base+0xef24>
  460354:	ldrb	w0, [x7, #10]
  460358:	and	w0, w0, #0xffffffdf
  46035c:	strb	w0, [x7, #10]
  460360:	b	460334 <_obstack_memory_used@@Base+0xef24>
  460364:	add	x2, sp, #0x68
  460368:	mov	x1, x19
  46036c:	mov	w3, #0x1                   	// #1
  460370:	add	x0, sp, #0x64
  460374:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  460378:	str	x0, [x19, #80]
  46037c:	add	x2, sp, #0x68
  460380:	mov	x1, x19
  460384:	mov	w3, #0x2                   	// #2
  460388:	add	x0, sp, #0x64
  46038c:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  460390:	str	x0, [x19, #88]
  460394:	mov	x1, x19
  460398:	add	x2, sp, #0x68
  46039c:	add	x0, sp, #0x64
  4603a0:	mov	w3, #0x6                   	// #6
  4603a4:	bl	4564e0 <_obstack_memory_used@@Base+0x50d0>
  4603a8:	str	x0, [x19, #96]
  4603ac:	ldr	x1, [x19, #80]
  4603b0:	cbz	x1, 4603c4 <_obstack_memory_used@@Base+0xefb4>
  4603b4:	ldr	x1, [x19, #88]
  4603b8:	cmp	x1, #0x0
  4603bc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4603c0:	b.ne	4601d8 <_obstack_memory_used@@Base+0xedc8>  // b.any
  4603c4:	ldr	w0, [sp, #100]
  4603c8:	b	4601e4 <_obstack_memory_used@@Base+0xedd4>
  4603cc:	mov	x22, #0x0                   	// #0
  4603d0:	add	x22, x22, #0x1
  4603d4:	b	45fd58 <_obstack_memory_used@@Base+0xe948>
  4603d8:	mov	x1, x2
  4603dc:	mov	x0, x1
  4603e0:	b	45fc1c <_obstack_memory_used@@Base+0xe80c>
  4603e4:	mov	x24, x0
  4603e8:	mov	x22, x24
  4603ec:	b	45fcdc <_obstack_memory_used@@Base+0xe8cc>
  4603f0:	mov	x1, #0x1                   	// #1
  4603f4:	str	x1, [x27, #8]
  4603f8:	str	x25, [x0]
  4603fc:	cbnz	x24, 45fcd8 <_obstack_memory_used@@Base+0xe8c8>
  460400:	b	45fd28 <_obstack_memory_used@@Base+0xe918>
  460404:	ldr	x0, [x22, #32]
  460408:	ldr	x25, [x0, #56]
  46040c:	ldr	x0, [x22, #16]
  460410:	cbnz	x0, 45fe84 <_obstack_memory_used@@Base+0xea74>
  460414:	ldr	x0, [x22, #32]
  460418:	ldr	x28, [x0, #56]
  46041c:	b	45fe8c <_obstack_memory_used@@Base+0xea7c>
  460420:	stp	x28, x25, [x0]
  460424:	cbnz	x24, 45fcd8 <_obstack_memory_used@@Base+0xe8c8>
  460428:	b	45fd28 <_obstack_memory_used@@Base+0xe918>
  46042c:	ldr	x2, [sp, #216]
  460430:	ldr	x20, [sp, #176]
  460434:	cmp	x2, x27
  460438:	csel	x27, x2, x27, le
  46043c:	cmp	x27, x20
  460440:	b.le	45fb14 <_obstack_memory_used@@Base+0xe704>
  460444:	bl	404540 <__ctype_toupper_loc@plt>
  460448:	ldr	x1, [sp, #128]
  46044c:	ldr	x2, [sp, #168]
  460450:	add	x1, x1, x20
  460454:	ldr	x3, [sp, #248]
  460458:	ldrb	w1, [x1, x2]
  46045c:	and	x2, x1, #0xff
  460460:	cbnz	x3, 4604f0 <_obstack_memory_used@@Base+0xf0e0>
  460464:	ldr	x2, [x0]
  460468:	ldr	w1, [x2, x1, lsl #2]
  46046c:	strb	w1, [x22, x20]
  460470:	add	x20, x20, #0x1
  460474:	cmp	x27, x20
  460478:	b.eq	45fb18 <_obstack_memory_used@@Base+0xe708>  // b.none
  46047c:	ldr	x22, [sp, #136]
  460480:	b	460448 <_obstack_memory_used@@Base+0xf038>
  460484:	b.eq	4600c8 <_obstack_memory_used@@Base+0xecb8>  // b.none
  460488:	ldr	x0, [x19, #40]
  46048c:	add	x1, x1, x1, lsl #1
  460490:	add	x1, x0, x1, lsl #3
  460494:	ldr	x0, [x1, #16]
  460498:	ldr	x3, [x0]
  46049c:	b	460180 <_obstack_memory_used@@Base+0xed70>
  4604a0:	ldr	x0, [sp, #136]
  4604a4:	mov	x1, x25
  4604a8:	bl	404530 <realloc@plt>
  4604ac:	cbz	x0, 46055c <_obstack_memory_used@@Base+0xf14c>
  4604b0:	ldrb	w4, [sp, #267]
  4604b4:	ldr	w2, [x19, #180]
  4604b8:	str	x0, [sp, #136]
  4604bc:	str	x25, [sp, #192]
  4604c0:	b	45f484 <_obstack_memory_used@@Base+0xe074>
  4604c4:	mov	x0, x19
  4604c8:	mov	x1, #0xe8                  	// #232
  4604cc:	bl	404530 <realloc@plt>
  4604d0:	mov	x19, x0
  4604d4:	cbz	x0, 4606d4 <_obstack_memory_used@@Base+0xf2c4>
  4604d8:	mov	x0, #0xe8                  	// #232
  4604dc:	stp	x19, x0, [x21]
  4604e0:	b	45f2d4 <_obstack_memory_used@@Base+0xdec4>
  4604e4:	mov	x23, #0x0                   	// #0
  4604e8:	mov	x1, #0x1                   	// #1
  4604ec:	b	45f338 <_obstack_memory_used@@Base+0xdf28>
  4604f0:	ldrb	w2, [x3, x2]
  4604f4:	ldr	x1, [x0]
  4604f8:	ldr	w1, [x1, x2, lsl #2]
  4604fc:	strb	w1, [x22, x20]
  460500:	add	x20, x20, #0x1
  460504:	cmp	x27, x20
  460508:	b.eq	45fb18 <_obstack_memory_used@@Base+0xe708>  // b.none
  46050c:	ldr	x22, [sp, #136]
  460510:	b	460448 <_obstack_memory_used@@Base+0xf038>
  460514:	mov	x0, #0x3c8                 	// #968
  460518:	bl	404310 <malloc@plt>
  46051c:	mov	x22, x0
  460520:	cbz	x0, 4606dc <_obstack_memory_used@@Base+0xf2cc>
  460524:	ldr	x0, [x25, #112]
  460528:	str	x0, [x22]
  46052c:	mov	w2, #0x1                   	// #1
  460530:	mov	x4, #0x30                  	// #48
  460534:	mov	x1, #0x0                   	// #0
  460538:	mov	x0, #0x8                   	// #8
  46053c:	str	x22, [x25, #112]
  460540:	b	45f634 <_obstack_memory_used@@Base+0xe224>
  460544:	mov	w0, #0xc                   	// #12
  460548:	str	w0, [sp, #96]
  46054c:	str	xzr, [x19, #104]
  460550:	b	45f8f8 <_obstack_memory_used@@Base+0xe4e8>
  460554:	str	wzr, [sp, #96]
  460558:	b	45f5b0 <_obstack_memory_used@@Base+0xe1a0>
  46055c:	mov	w0, #0xc                   	// #12
  460560:	ldr	x20, [x21]
  460564:	str	w0, [sp, #96]
  460568:	b	45f8f8 <_obstack_memory_used@@Base+0xe4e8>
  46056c:	cmp	w0, #0x1
  460570:	b.ne	4605a0 <_obstack_memory_used@@Base+0xf190>  // b.any
  460574:	ldrsb	w0, [x4]
  460578:	cmp	w0, #0x0
  46057c:	csel	w26, w26, w1, ge  // ge = tcont
  460580:	b	460300 <_obstack_memory_used@@Base+0xeef0>
  460584:	cmp	w0, #0xb
  460588:	b.hi	4605ac <_obstack_memory_used@@Base+0xf19c>  // b.pmore
  46058c:	cmp	w0, #0x7
  460590:	b.hi	460300 <_obstack_memory_used@@Base+0xeef0>  // b.pmore
  460594:	cmp	w0, #0x6
  460598:	b.eq	460048 <_obstack_memory_used@@Base+0xec38>  // b.none
  46059c:	bl	404650 <abort@plt>
  4605a0:	cmp	w0, #0x2
  4605a4:	b.eq	460300 <_obstack_memory_used@@Base+0xeef0>  // b.none
  4605a8:	bl	404650 <abort@plt>
  4605ac:	cmp	w0, #0xc
  4605b0:	b.ne	46059c <_obstack_memory_used@@Base+0xf18c>  // b.any
  4605b4:	ldr	w0, [x4]
  4605b8:	cmp	w0, #0x40
  4605bc:	b.hi	46063c <_obstack_memory_used@@Base+0xf22c>  // b.pmore
  4605c0:	cmp	w0, #0xf
  4605c4:	b.ls	460048 <_obstack_memory_used@@Base+0xec38>  // b.plast
  4605c8:	sub	w0, w0, #0x10
  4605cc:	lsl	x0, x3, x0
  4605d0:	tst	x0, x2
  4605d4:	b.eq	460048 <_obstack_memory_used@@Base+0xec38>  // b.none
  4605d8:	b	460300 <_obstack_memory_used@@Base+0xeef0>
  4605dc:	mov	w0, #0xc                   	// #12
  4605e0:	stp	xzr, xzr, [x25]
  4605e4:	b	45f8f0 <_obstack_memory_used@@Base+0xe4e0>
  4605e8:	mov	x0, #0x3c8                 	// #968
  4605ec:	bl	404310 <malloc@plt>
  4605f0:	cbz	x0, 4606e8 <_obstack_memory_used@@Base+0xf2d8>
  4605f4:	ldr	x1, [x25, #112]
  4605f8:	str	x1, [x0]
  4605fc:	mov	w3, #0x1                   	// #1
  460600:	mov	x2, #0x30                  	// #48
  460604:	mov	x7, #0x8                   	// #8
  460608:	mov	x1, #0x0                   	// #0
  46060c:	str	x0, [x25, #112]
  460610:	b	45f6a8 <_obstack_memory_used@@Base+0xe298>
  460614:	mov	w0, #0xc                   	// #12
  460618:	b	4601e4 <_obstack_memory_used@@Base+0xedd4>
  46061c:	ldr	x0, [x4]
  460620:	ldr	x9, [x0, #16]
  460624:	cbnz	x9, 460048 <_obstack_memory_used@@Base+0xec38>
  460628:	ldr	x0, [x0, #24]
  46062c:	cbz	x0, 460300 <_obstack_memory_used@@Base+0xeef0>
  460630:	b	460048 <_obstack_memory_used@@Base+0xec38>
  460634:	mov	w8, w1
  460638:	b	460300 <_obstack_memory_used@@Base+0xeef0>
  46063c:	cmp	w0, #0x80
  460640:	b.eq	460300 <_obstack_memory_used@@Base+0xeef0>  // b.none
  460644:	b	460048 <_obstack_memory_used@@Base+0xec38>
  460648:	mov	x2, x1
  46064c:	b	45f5a4 <_obstack_memory_used@@Base+0xe194>
  460650:	ldr	x20, [x21]
  460654:	str	xzr, [x19, #104]
  460658:	b	45f8f8 <_obstack_memory_used@@Base+0xe4e8>
  46065c:	mov	w8, #0x0                   	// #0
  460660:	ldr	x2, [x19, #152]
  460664:	mov	w1, #0x1                   	// #1
  460668:	ldrb	w0, [x19, #176]
  46066c:	cmp	x2, #0x0
  460670:	str	w1, [x19, #180]
  460674:	ccmp	w8, #0x0, #0x0, le
  460678:	and	w1, w0, #0xfffffff9
  46067c:	cset	w0, ne  // ne = any
  460680:	orr	w0, w1, w0, lsl #1
  460684:	strb	w0, [x19, #176]
  460688:	b	460048 <_obstack_memory_used@@Base+0xec38>
  46068c:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460690:	add	x3, x3, #0x2c0
  460694:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460698:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  46069c:	add	x3, x3, #0x58
  4606a0:	add	x1, x1, #0x90
  4606a4:	add	x0, x0, #0xd0
  4606a8:	mov	w2, #0x5b0                 	// #1456
  4606ac:	bl	404ac0 <__assert_fail@plt>
  4606b0:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4606b4:	add	x3, x3, #0x2c0
  4606b8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4606bc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4606c0:	add	x3, x3, #0x58
  4606c4:	add	x1, x1, #0x90
  4606c8:	add	x0, x0, #0xc0
  4606cc:	mov	w2, #0x5af                 	// #1455
  4606d0:	bl	404ac0 <__assert_fail@plt>
  4606d4:	mov	w0, #0xc                   	// #12
  4606d8:	b	45f958 <_obstack_memory_used@@Base+0xe548>
  4606dc:	cbz	x24, 460544 <_obstack_memory_used@@Base+0xf134>
  4606e0:	mov	x22, #0x0                   	// #0
  4606e4:	b	45f684 <_obstack_memory_used@@Base+0xe274>
  4606e8:	mov	x0, #0x0                   	// #0
  4606ec:	b	45f6f8 <_obstack_memory_used@@Base+0xe2e8>
  4606f0:	stp	x29, x30, [sp, #-16]!
  4606f4:	adrp	x3, 497000 <argp_program_version_hook@@Base+0x1e0>
  4606f8:	mov	x5, x2
  4606fc:	mov	x29, sp
  460700:	ldr	x3, [x3, #1168]
  460704:	mov	w7, #0x6f                  	// #111
  460708:	ldrb	w6, [x2, #56]
  46070c:	mov	x2, x1
  460710:	mov	x1, x0
  460714:	mov	x0, x5
  460718:	ubfx	w4, w3, #25, #1
  46071c:	and	w6, w6, w7
  460720:	ubfiz	w4, w4, #4, #4
  460724:	orr	w4, w4, #0xffffff80
  460728:	orr	w4, w4, w6
  46072c:	strb	w4, [x5, #56]
  460730:	bl	45f288 <_obstack_memory_used@@Base+0xde78>
  460734:	cbz	w0, 460764 <_obstack_memory_used@@Base+0xf354>
  460738:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  46073c:	add	x1, x1, #0x2c0
  460740:	add	x4, x1, #0x1f0
  460744:	mov	w3, w0
  460748:	ldp	x29, x30, [sp], #16
  46074c:	add	x1, x1, #0x70
  460750:	ldr	x3, [x4, w3, sxtw #3]
  460754:	mov	w2, #0x5                   	// #5
  460758:	mov	x0, #0x0                   	// #0
  46075c:	add	x1, x1, x3
  460760:	b	4049c0 <dcgettext@plt>
  460764:	mov	x0, #0x0                   	// #0
  460768:	ldp	x29, x30, [sp], #16
  46076c:	ret
  460770:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  460774:	mov	x2, x0
  460778:	ldr	x0, [x1, #1168]
  46077c:	str	x2, [x1, #1168]
  460780:	ret
  460784:	nop
  460788:	stp	x29, x30, [sp, #-48]!
  46078c:	mov	x2, #0x100                 	// #256
  460790:	mov	w1, #0x0                   	// #0
  460794:	mov	x29, sp
  460798:	stp	x19, x20, [sp, #16]
  46079c:	mov	x19, x0
  4607a0:	ldr	x20, [x0]
  4607a4:	str	x21, [sp, #32]
  4607a8:	ldr	x21, [x0, #32]
  4607ac:	mov	x0, x21
  4607b0:	bl	404410 <memset@plt>
  4607b4:	ldr	x1, [x20, #72]
  4607b8:	mov	x0, x19
  4607bc:	mov	x3, x21
  4607c0:	add	x2, x1, #0x18
  4607c4:	add	x1, x1, #0x10
  4607c8:	bl	4542a0 <_obstack_memory_used@@Base+0x2e90>
  4607cc:	ldp	x1, x0, [x20, #72]
  4607d0:	cmp	x1, x0
  4607d4:	b.eq	4607f0 <_obstack_memory_used@@Base+0xf3e0>  // b.none
  4607d8:	add	x2, x0, #0x18
  4607dc:	add	x1, x0, #0x10
  4607e0:	mov	x3, x21
  4607e4:	mov	x0, x19
  4607e8:	bl	4542a0 <_obstack_memory_used@@Base+0x2e90>
  4607ec:	ldr	x0, [x20, #72]
  4607f0:	ldr	x1, [x20, #88]
  4607f4:	cmp	x1, x0
  4607f8:	b.eq	460814 <_obstack_memory_used@@Base+0xf404>  // b.none
  4607fc:	add	x2, x1, #0x18
  460800:	mov	x0, x19
  460804:	mov	x3, x21
  460808:	add	x1, x1, #0x10
  46080c:	bl	4542a0 <_obstack_memory_used@@Base+0x2e90>
  460810:	ldr	x0, [x20, #72]
  460814:	ldr	x1, [x20, #96]
  460818:	cmp	x1, x0
  46081c:	b.eq	460834 <_obstack_memory_used@@Base+0xf424>  // b.none
  460820:	add	x2, x1, #0x18
  460824:	mov	x3, x21
  460828:	add	x1, x1, #0x10
  46082c:	mov	x0, x19
  460830:	bl	4542a0 <_obstack_memory_used@@Base+0x2e90>
  460834:	ldrb	w1, [x19, #56]
  460838:	mov	w0, #0x0                   	// #0
  46083c:	ldr	x21, [sp, #32]
  460840:	orr	w1, w1, #0x8
  460844:	strb	w1, [x19, #56]
  460848:	ldp	x19, x20, [sp, #16]
  46084c:	ldp	x29, x30, [sp], #48
  460850:	ret
  460854:	nop
  460858:	sub	sp, sp, #0x80
  46085c:	cmp	x3, #0x0
  460860:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  460864:	stp	x29, x30, [sp, #16]
  460868:	add	x29, sp, #0x10
  46086c:	stp	x21, x22, [sp, #48]
  460870:	stp	x23, x24, [sp, #64]
  460874:	add	x24, x3, x4
  460878:	b.gt	460b4c <_obstack_memory_used@@Base+0xf73c>
  46087c:	stp	x19, x20, [sp, #32]
  460880:	mov	x21, x0
  460884:	mov	x19, x3
  460888:	stp	x25, x26, [sp, #80]
  46088c:	mov	x22, x6
  460890:	mov	x25, x2
  460894:	stp	x27, x28, [sp, #96]
  460898:	and	w26, w7, #0xff
  46089c:	mov	x27, x5
  4608a0:	cmp	x24, x2
  4608a4:	b.gt	460b30 <_obstack_memory_used@@Base+0xf720>
  4608a8:	cmp	x4, #0x0
  4608ac:	ccmp	x3, x24, #0x4, ge  // ge = tcont
  4608b0:	b.gt	460b30 <_obstack_memory_used@@Base+0xf720>
  4608b4:	tbnz	x24, #63, 460b38 <_obstack_memory_used@@Base+0xf728>
  4608b8:	cmp	x4, #0x0
  4608bc:	ccmp	x3, x24, #0x0, lt  // lt = tstop
  4608c0:	b.le	460b38 <_obstack_memory_used@@Base+0xf728>
  4608c4:	ldrb	w0, [x21, #56]
  4608c8:	cmp	x24, x19
  4608cc:	ubfx	x2, x0, #5, #2
  4608d0:	str	x2, [sp, #120]
  4608d4:	b.le	4608e4 <_obstack_memory_used@@Base+0xf4d4>
  4608d8:	ldr	x2, [x21, #32]
  4608dc:	cbz	x2, 4608e4 <_obstack_memory_used@@Base+0xf4d4>
  4608e0:	tbz	w0, #3, 460ae4 <_obstack_memory_used@@Base+0xf6d4>
  4608e4:	ldrb	w2, [x21, #56]
  4608e8:	cmp	x22, #0x0
  4608ec:	cset	w0, eq  // eq = none
  4608f0:	ubfx	x3, x2, #4, #1
  4608f4:	orr	w0, w0, w3
  4608f8:	tbnz	w0, #0, 460ad0 <_obstack_memory_used@@Base+0xf6c0>
  4608fc:	and	w2, w2, #0x6
  460900:	cmp	w2, #0x4
  460904:	ldr	x0, [x21, #48]
  460908:	b.eq	460b7c <_obstack_memory_used@@Base+0xf76c>  // b.none
  46090c:	add	x28, x0, #0x1
  460910:	mov	x23, x28
  460914:	lsl	x0, x28, #4
  460918:	str	x1, [sp, #112]
  46091c:	bl	404310 <malloc@plt>
  460920:	mov	x20, x0
  460924:	cbz	x0, 460b68 <_obstack_memory_used@@Base+0xf758>
  460928:	ldr	x1, [sp, #112]
  46092c:	mov	x7, x0
  460930:	ldr	w0, [sp, #120]
  460934:	mov	x5, x27
  460938:	str	w0, [sp]
  46093c:	mov	x4, x24
  460940:	mov	x2, x25
  460944:	mov	x6, x28
  460948:	mov	x3, x19
  46094c:	mov	x0, x21
  460950:	bl	45af38 <_obstack_memory_used@@Base+0x9b28>
  460954:	cbnz	w0, 460a94 <_obstack_memory_used@@Base+0xf684>
  460958:	cbz	x22, 460a78 <_obstack_memory_used@@Base+0xf668>
  46095c:	ldrb	w24, [x21, #56]
  460960:	add	x27, x23, #0x1
  460964:	ubfx	x24, x24, #1, #2
  460968:	cbz	w24, 460af8 <_obstack_memory_used@@Base+0xf6e8>
  46096c:	cmp	w24, #0x1
  460970:	b.eq	460ba8 <_obstack_memory_used@@Base+0xf798>  // b.none
  460974:	cmp	w24, #0x2
  460978:	b.ne	460c98 <_obstack_memory_used@@Base+0xf888>  // b.any
  46097c:	ldr	x25, [x22]
  460980:	cmp	x28, x25
  460984:	b.hi	460c74 <_obstack_memory_used@@Base+0xf864>  // b.pmore
  460988:	cmp	x23, #0x0
  46098c:	b.le	460c1c <_obstack_memory_used@@Base+0xf80c>
  460990:	ldp	x2, x3, [x22, #8]
  460994:	lsl	x0, x23, #3
  460998:	add	x4, x20, x23, lsl #4
  46099c:	add	x1, x3, x0
  4609a0:	add	x0, x2, x0
  4609a4:	cmp	x1, x20
  4609a8:	add	x5, x2, #0xf
  4609ac:	ccmp	x3, x4, #0x2, hi  // hi = pmore
  4609b0:	sub	x5, x5, x3
  4609b4:	cset	w1, cs  // cs = hs, nlast
  4609b8:	cmp	x20, x0
  4609bc:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
  4609c0:	sub	x4, x23, #0x1
  4609c4:	cset	w0, cs  // cs = hs, nlast
  4609c8:	cmp	x5, #0x1e
  4609cc:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
  4609d0:	and	w0, w1, w0
  4609d4:	cset	w4, hi  // hi = pmore
  4609d8:	mov	x1, x23
  4609dc:	tst	w4, w0
  4609e0:	b.eq	460bec <_obstack_memory_used@@Base+0xf7dc>  // b.none
  4609e4:	lsr	x5, x23, #1
  4609e8:	mov	x4, x20
  4609ec:	mov	x0, #0x0                   	// #0
  4609f0:	lsl	x5, x5, #4
  4609f4:	nop
  4609f8:	ld2	{v0.2d, v1.2d}, [x4], #32
  4609fc:	str	q0, [x2, x0]
  460a00:	str	q1, [x3, x0]
  460a04:	add	x0, x0, #0x10
  460a08:	cmp	x5, x0
  460a0c:	b.ne	4609f8 <_obstack_memory_used@@Base+0xf5e8>  // b.any
  460a10:	and	x0, x23, #0xfffffffffffffffe
  460a14:	tbz	w23, #0, 460a30 <_obstack_memory_used@@Base+0xf620>
  460a18:	lsl	x4, x0, #4
  460a1c:	add	x5, x20, x4
  460a20:	ldr	x4, [x20, x4]
  460a24:	str	x4, [x2, x0, lsl #3]
  460a28:	ldr	x2, [x5, #8]
  460a2c:	str	x2, [x3, x0, lsl #3]
  460a30:	ldr	x25, [x22]
  460a34:	cmp	x1, x25
  460a38:	b.cs	460a64 <_obstack_memory_used@@Base+0xf654>  // b.hs, b.nlast
  460a3c:	ldp	x4, x3, [x22, #8]
  460a40:	mov	x0, #0xffffffffffffffff    	// #-1
  460a44:	nop
  460a48:	str	x0, [x3, x1, lsl #3]
  460a4c:	add	x23, x23, #0x1
  460a50:	str	x0, [x4, x1, lsl #3]
  460a54:	mov	x1, x23
  460a58:	ldr	x2, [x22]
  460a5c:	cmp	x23, x2
  460a60:	b.cc	460a48 <_obstack_memory_used@@Base+0xf638>  // b.lo, b.ul, b.last
  460a64:	ldrb	w0, [x21, #56]
  460a68:	bfi	w0, w24, #1, #2
  460a6c:	strb	w0, [x21, #56]
  460a70:	tst	w0, #0x6
  460a74:	b.eq	460aa0 <_obstack_memory_used@@Base+0xf690>  // b.none
  460a78:	ldr	x21, [x20]
  460a7c:	cbz	w26, 460aa4 <_obstack_memory_used@@Base+0xf694>
  460a80:	cmp	x19, x21
  460a84:	b.ne	460c50 <_obstack_memory_used@@Base+0xf840>  // b.any
  460a88:	ldr	x0, [x20, #8]
  460a8c:	sub	x21, x0, x21
  460a90:	b	460aa4 <_obstack_memory_used@@Base+0xf694>
  460a94:	cmp	w0, #0x1
  460a98:	mov	x21, #0xffffffffffffffff    	// #-1
  460a9c:	b.eq	460aa4 <_obstack_memory_used@@Base+0xf694>  // b.none
  460aa0:	mov	x21, #0xfffffffffffffffe    	// #-2
  460aa4:	mov	x0, x20
  460aa8:	bl	4047b0 <free@plt>
  460aac:	ldp	x19, x20, [sp, #32]
  460ab0:	ldp	x25, x26, [sp, #80]
  460ab4:	ldp	x27, x28, [sp, #96]
  460ab8:	mov	x0, x21
  460abc:	ldp	x29, x30, [sp, #16]
  460ac0:	ldp	x21, x22, [sp, #48]
  460ac4:	ldp	x23, x24, [sp, #64]
  460ac8:	add	sp, sp, #0x80
  460acc:	ret
  460ad0:	mov	x28, #0x1                   	// #1
  460ad4:	mov	x0, #0x10                  	// #16
  460ad8:	mov	x23, x28
  460adc:	mov	x22, #0x0                   	// #0
  460ae0:	b	460918 <_obstack_memory_used@@Base+0xf508>
  460ae4:	mov	x0, x21
  460ae8:	str	x1, [sp, #112]
  460aec:	bl	460788 <_obstack_memory_used@@Base+0xf378>
  460af0:	ldr	x1, [sp, #112]
  460af4:	b	4608e4 <_obstack_memory_used@@Base+0xf4d4>
  460af8:	lsl	x28, x27, #3
  460afc:	mov	x25, x27
  460b00:	mov	x0, x28
  460b04:	bl	404310 <malloc@plt>
  460b08:	str	x0, [x22, #8]
  460b0c:	mov	x24, x0
  460b10:	cbz	x0, 460c28 <_obstack_memory_used@@Base+0xf818>
  460b14:	mov	x0, x28
  460b18:	bl	404310 <malloc@plt>
  460b1c:	str	x0, [x22, #16]
  460b20:	cbz	x0, 460c30 <_obstack_memory_used@@Base+0xf820>
  460b24:	mov	w24, #0x1                   	// #1
  460b28:	str	x27, [x22]
  460b2c:	b	460988 <_obstack_memory_used@@Base+0xf578>
  460b30:	mov	x24, x25
  460b34:	b	4608c4 <_obstack_memory_used@@Base+0xf4b4>
  460b38:	ldrb	w28, [x21, #56]
  460b3c:	mov	x24, #0x0                   	// #0
  460b40:	ubfx	x0, x28, #5, #2
  460b44:	str	x0, [sp, #120]
  460b48:	b	4608e4 <_obstack_memory_used@@Base+0xf4d4>
  460b4c:	mov	x21, #0xffffffffffffffff    	// #-1
  460b50:	mov	x0, x21
  460b54:	ldp	x29, x30, [sp, #16]
  460b58:	ldp	x21, x22, [sp, #48]
  460b5c:	ldp	x23, x24, [sp, #64]
  460b60:	add	sp, sp, #0x80
  460b64:	ret
  460b68:	mov	x21, #0xfffffffffffffffe    	// #-2
  460b6c:	ldp	x19, x20, [sp, #32]
  460b70:	ldp	x25, x26, [sp, #80]
  460b74:	ldp	x27, x28, [sp, #96]
  460b78:	b	460ab8 <_obstack_memory_used@@Base+0xf6a8>
  460b7c:	ldr	x28, [x22]
  460b80:	cmp	x28, x0
  460b84:	b.hi	46090c <_obstack_memory_used@@Base+0xf4fc>  // b.pmore
  460b88:	cmp	x28, #0x0
  460b8c:	mov	x23, x28
  460b90:	b.gt	460914 <_obstack_memory_used@@Base+0xf504>
  460b94:	mov	x28, #0x1                   	// #1
  460b98:	mov	x0, #0x10                  	// #16
  460b9c:	mov	x23, x28
  460ba0:	mov	x22, #0x0                   	// #0
  460ba4:	b	460918 <_obstack_memory_used@@Base+0xf508>
  460ba8:	ldr	x25, [x22]
  460bac:	cmp	x25, x27
  460bb0:	b.cs	460988 <_obstack_memory_used@@Base+0xf578>  // b.hs, b.nlast
  460bb4:	ldr	x0, [x22, #8]
  460bb8:	lsl	x25, x27, #3
  460bbc:	mov	x1, x25
  460bc0:	bl	404530 <realloc@plt>
  460bc4:	mov	x28, x0
  460bc8:	cbz	x0, 460c28 <_obstack_memory_used@@Base+0xf818>
  460bcc:	ldr	x0, [x22, #16]
  460bd0:	mov	x1, x25
  460bd4:	bl	404530 <realloc@plt>
  460bd8:	cbz	x0, 460c40 <_obstack_memory_used@@Base+0xf830>
  460bdc:	mov	x25, x27
  460be0:	stp	x27, x28, [x22]
  460be4:	str	x0, [x22, #16]
  460be8:	b	460988 <_obstack_memory_used@@Base+0xf578>
  460bec:	mov	x4, x20
  460bf0:	mov	x0, #0x0                   	// #0
  460bf4:	nop
  460bf8:	ldr	x5, [x4]
  460bfc:	str	x5, [x2, x0, lsl #3]
  460c00:	add	x4, x4, #0x10
  460c04:	ldur	x5, [x4, #-8]
  460c08:	str	x5, [x3, x0, lsl #3]
  460c0c:	add	x0, x0, #0x1
  460c10:	cmp	x23, x0
  460c14:	b.ne	460bf8 <_obstack_memory_used@@Base+0xf7e8>  // b.any
  460c18:	b	460a30 <_obstack_memory_used@@Base+0xf620>
  460c1c:	mov	x1, #0x0                   	// #0
  460c20:	mov	x23, #0x0                   	// #0
  460c24:	b	460a34 <_obstack_memory_used@@Base+0xf624>
  460c28:	mov	w24, #0x0                   	// #0
  460c2c:	b	460a64 <_obstack_memory_used@@Base+0xf654>
  460c30:	mov	x0, x24
  460c34:	mov	w24, #0x0                   	// #0
  460c38:	bl	4047b0 <free@plt>
  460c3c:	b	460a64 <_obstack_memory_used@@Base+0xf654>
  460c40:	mov	x0, x28
  460c44:	mov	w24, #0x0                   	// #0
  460c48:	bl	4047b0 <free@plt>
  460c4c:	b	460a64 <_obstack_memory_used@@Base+0xf654>
  460c50:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460c54:	add	x3, x3, #0x2c0
  460c58:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  460c5c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460c60:	add	x3, x3, #0x288
  460c64:	add	x1, x1, #0xff8
  460c68:	add	x0, x0, #0x140
  460c6c:	mov	w2, #0x1be                 	// #446
  460c70:	bl	404ac0 <__assert_fail@plt>
  460c74:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460c78:	add	x3, x3, #0x2c0
  460c7c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  460c80:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460c84:	add	x3, x3, #0x278
  460c88:	add	x1, x1, #0xff8
  460c8c:	add	x0, x0, #0x128
  460c90:	mov	w2, #0x1fb                 	// #507
  460c94:	bl	404ac0 <__assert_fail@plt>
  460c98:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460c9c:	add	x3, x3, #0x2c0
  460ca0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  460ca4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460ca8:	add	x3, x3, #0x278
  460cac:	add	x1, x1, #0xff8
  460cb0:	add	x0, x0, #0x108
  460cb4:	mov	w2, #0x1f9                 	// #505
  460cb8:	bl	404ac0 <__assert_fail@plt>
  460cbc:	nop
  460cc0:	stp	x29, x30, [sp, #-64]!
  460cc4:	mov	x29, sp
  460cc8:	stp	x19, x20, [sp, #16]
  460ccc:	mov	w19, w2
  460cd0:	mov	x20, x0
  460cd4:	tst	x19, #0x1
  460cd8:	stp	x21, x22, [sp, #32]
  460cdc:	mov	x21, #0xb2fc                	// #45820
  460ce0:	str	x23, [sp, #48]
  460ce4:	mov	x23, #0x2c6                 	// #710
  460ce8:	str	xzr, [x0]
  460cec:	mov	x22, x1
  460cf0:	stp	xzr, xzr, [x0, #8]
  460cf4:	movk	x21, #0x3, lsl #16
  460cf8:	movk	x23, #0x101, lsl #16
  460cfc:	mov	x0, #0x100                 	// #256
  460d00:	csel	x23, x21, x23, ne  // ne = any
  460d04:	bl	404310 <malloc@plt>
  460d08:	str	x0, [x20, #32]
  460d0c:	cbz	x0, 460db8 <_obstack_memory_used@@Base+0xf9a8>
  460d10:	sbfiz	x21, x19, #21, #32
  460d14:	mov	w0, #0x0                   	// #0
  460d18:	and	x21, x21, #0x400000
  460d1c:	orr	x21, x21, x23
  460d20:	tbnz	w19, #2, 460d94 <_obstack_memory_used@@Base+0xf984>
  460d24:	ldrb	w1, [x20, #56]
  460d28:	ubfx	x19, x19, #3, #1
  460d2c:	ubfiz	w0, w0, #7, #1
  460d30:	mov	w2, #0x6f                  	// #111
  460d34:	orr	w19, w0, w19, lsl #4
  460d38:	and	w0, w1, w2
  460d3c:	orr	w19, w19, w0
  460d40:	str	xzr, [x20, #40]
  460d44:	strb	w19, [x20, #56]
  460d48:	mov	x0, x22
  460d4c:	bl	403ff0 <strlen@plt>
  460d50:	mov	x2, x0
  460d54:	mov	x3, x21
  460d58:	mov	x1, x22
  460d5c:	mov	x0, x20
  460d60:	bl	45f288 <_obstack_memory_used@@Base+0xde78>
  460d64:	mov	w19, w0
  460d68:	cmp	w0, #0x10
  460d6c:	b.eq	460da4 <_obstack_memory_used@@Base+0xf994>  // b.none
  460d70:	cbnz	w0, 460da8 <_obstack_memory_used@@Base+0xf998>
  460d74:	mov	x0, x20
  460d78:	bl	460788 <_obstack_memory_used@@Base+0xf378>
  460d7c:	mov	w0, w19
  460d80:	ldp	x19, x20, [sp, #16]
  460d84:	ldp	x21, x22, [sp, #32]
  460d88:	ldr	x23, [sp, #48]
  460d8c:	ldp	x29, x30, [sp], #64
  460d90:	ret
  460d94:	and	x21, x21, #0xffffffffffffffbf
  460d98:	mov	w0, #0x1                   	// #1
  460d9c:	orr	x21, x21, #0x100
  460da0:	b	460d24 <_obstack_memory_used@@Base+0xf914>
  460da4:	mov	w19, #0x8                   	// #8
  460da8:	ldr	x0, [x20, #32]
  460dac:	bl	4047b0 <free@plt>
  460db0:	str	xzr, [x20, #32]
  460db4:	b	460d7c <_obstack_memory_used@@Base+0xf96c>
  460db8:	mov	w19, #0xc                   	// #12
  460dbc:	mov	w0, w19
  460dc0:	ldp	x19, x20, [sp, #16]
  460dc4:	ldp	x21, x22, [sp, #32]
  460dc8:	ldr	x23, [sp, #48]
  460dcc:	ldp	x29, x30, [sp], #64
  460dd0:	ret
  460dd4:	nop
  460dd8:	stp	x29, x30, [sp, #-48]!
  460ddc:	cmp	w0, #0x10
  460de0:	mov	x29, sp
  460de4:	stp	x19, x20, [sp, #16]
  460de8:	stp	x21, x22, [sp, #32]
  460dec:	b.hi	460e68 <_obstack_memory_used@@Base+0xfa58>  // b.pmore
  460df0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  460df4:	add	x1, x1, #0x2c0
  460df8:	mov	w4, w0
  460dfc:	mov	x20, x3
  460e00:	add	x3, x1, #0x1f0
  460e04:	add	x1, x1, #0x70
  460e08:	mov	x21, x2
  460e0c:	mov	w2, #0x5                   	// #5
  460e10:	mov	x0, #0x0                   	// #0
  460e14:	ldr	x3, [x3, w4, sxtw #3]
  460e18:	add	x1, x1, x3
  460e1c:	bl	4049c0 <dcgettext@plt>
  460e20:	mov	x22, x0
  460e24:	bl	403ff0 <strlen@plt>
  460e28:	add	x19, x0, #0x1
  460e2c:	cbz	x20, 460e48 <_obstack_memory_used@@Base+0xfa38>
  460e30:	cmp	x19, x20
  460e34:	mov	x2, x19
  460e38:	b.hi	460e5c <_obstack_memory_used@@Base+0xfa4c>  // b.pmore
  460e3c:	mov	x1, x22
  460e40:	mov	x0, x21
  460e44:	bl	403f70 <memcpy@plt>
  460e48:	mov	x0, x19
  460e4c:	ldp	x19, x20, [sp, #16]
  460e50:	ldp	x21, x22, [sp, #32]
  460e54:	ldp	x29, x30, [sp], #48
  460e58:	ret
  460e5c:	sub	x2, x20, #0x1
  460e60:	strb	wzr, [x21, x2]
  460e64:	b	460e3c <_obstack_memory_used@@Base+0xfa2c>
  460e68:	bl	404650 <abort@plt>
  460e6c:	nop
  460e70:	stp	x29, x30, [sp, #-32]!
  460e74:	mov	x29, sp
  460e78:	str	x19, [sp, #16]
  460e7c:	mov	x19, x0
  460e80:	ldr	x0, [x0]
  460e84:	cbz	x0, 460e8c <_obstack_memory_used@@Base+0xfa7c>
  460e88:	bl	455710 <_obstack_memory_used@@Base+0x4300>
  460e8c:	ldr	x0, [x19, #32]
  460e90:	stp	xzr, xzr, [x19]
  460e94:	bl	4047b0 <free@plt>
  460e98:	str	xzr, [x19, #32]
  460e9c:	ldr	x0, [x19, #40]
  460ea0:	bl	4047b0 <free@plt>
  460ea4:	str	xzr, [x19, #40]
  460ea8:	ldr	x19, [sp, #16]
  460eac:	ldp	x29, x30, [sp], #32
  460eb0:	ret
  460eb4:	nop
  460eb8:	tst	w4, #0xfffffff8
  460ebc:	b.ne	460f94 <_obstack_memory_used@@Base+0xfb84>  // b.any
  460ec0:	sub	sp, sp, #0x50
  460ec4:	stp	x29, x30, [sp, #16]
  460ec8:	add	x29, sp, #0x10
  460ecc:	stp	x19, x20, [sp, #32]
  460ed0:	mov	w19, w4
  460ed4:	mov	x20, x0
  460ed8:	stp	x21, x22, [sp, #48]
  460edc:	mov	x21, x1
  460ee0:	mov	x22, x3
  460ee4:	str	x23, [sp, #64]
  460ee8:	mov	x23, x2
  460eec:	tbnz	w19, #2, 460f48 <_obstack_memory_used@@Base+0xfb38>
  460ef0:	mov	x0, x1
  460ef4:	bl	403ff0 <strlen@plt>
  460ef8:	mov	x5, x0
  460efc:	ldrb	w0, [x20, #56]
  460f00:	str	w19, [sp]
  460f04:	mov	x3, #0x0                   	// #0
  460f08:	tbz	w0, #4, 460f58 <_obstack_memory_used@@Base+0xfb48>
  460f0c:	mov	x1, x21
  460f10:	mov	x0, x20
  460f14:	mov	x4, x5
  460f18:	mov	x2, x5
  460f1c:	mov	x7, #0x0                   	// #0
  460f20:	mov	x6, #0x0                   	// #0
  460f24:	bl	45af38 <_obstack_memory_used@@Base+0x9b28>
  460f28:	cmp	w0, #0x0
  460f2c:	cset	w0, ne  // ne = any
  460f30:	ldp	x29, x30, [sp, #16]
  460f34:	ldp	x19, x20, [sp, #32]
  460f38:	ldp	x21, x22, [sp, #48]
  460f3c:	ldr	x23, [sp, #64]
  460f40:	add	sp, sp, #0x50
  460f44:	ret
  460f48:	ldrb	w0, [x20, #56]
  460f4c:	ldp	x3, x5, [x3]
  460f50:	str	w19, [sp]
  460f54:	tbnz	w0, #4, 460f0c <_obstack_memory_used@@Base+0xfafc>
  460f58:	mov	x7, x22
  460f5c:	mov	x6, x23
  460f60:	mov	x1, x21
  460f64:	mov	x0, x20
  460f68:	mov	x4, x5
  460f6c:	mov	x2, x5
  460f70:	bl	45af38 <_obstack_memory_used@@Base+0x9b28>
  460f74:	cmp	w0, #0x0
  460f78:	cset	w0, ne  // ne = any
  460f7c:	ldp	x29, x30, [sp, #16]
  460f80:	ldp	x19, x20, [sp, #32]
  460f84:	ldp	x21, x22, [sp, #48]
  460f88:	ldr	x23, [sp, #64]
  460f8c:	add	sp, sp, #0x50
  460f90:	ret
  460f94:	mov	w0, #0x2                   	// #2
  460f98:	ret
  460f9c:	nop
  460fa0:	sub	sp, sp, #0x70
  460fa4:	cmp	x3, #0x0
  460fa8:	ccmp	x2, x3, #0x1, ge  // ge = tcont
  460fac:	stp	x29, x30, [sp, #16]
  460fb0:	add	x29, sp, #0x10
  460fb4:	stp	x19, x20, [sp, #32]
  460fb8:	b.lt	461210 <_obstack_memory_used@@Base+0xfe00>  // b.tstop
  460fbc:	stp	x23, x24, [sp, #64]
  460fc0:	mov	x23, x0
  460fc4:	ldrb	w0, [x0, #56]
  460fc8:	cmp	x4, #0x0
  460fcc:	stp	x21, x22, [sp, #48]
  460fd0:	mov	x24, x2
  460fd4:	stp	x25, x26, [sp, #80]
  460fd8:	ubfx	x2, x0, #4, #1
  460fdc:	mov	x25, x1
  460fe0:	str	x27, [sp, #96]
  460fe4:	cset	w1, eq  // eq = none
  460fe8:	mov	x20, x3
  460fec:	mov	x21, x4
  460ff0:	ubfx	x26, x0, #5, #2
  460ff4:	orr	w1, w1, w2
  460ff8:	tbnz	w1, #0, 4611c4 <_obstack_memory_used@@Base+0xfdb4>
  460ffc:	and	w0, w0, #0x6
  461000:	cmp	w0, #0x4
  461004:	ldr	x0, [x23, #48]
  461008:	b.eq	461240 <_obstack_memory_used@@Base+0xfe30>  // b.none
  46100c:	add	x27, x0, #0x1
  461010:	mov	x22, x27
  461014:	lsl	x0, x27, #4
  461018:	bl	404310 <malloc@plt>
  46101c:	mov	x19, x0
  461020:	cbz	x0, 461228 <_obstack_memory_used@@Base+0xfe18>
  461024:	str	w26, [sp]
  461028:	mov	x7, x0
  46102c:	mov	x1, x25
  461030:	mov	x6, x27
  461034:	mov	x5, x24
  461038:	mov	x2, x24
  46103c:	mov	x4, x20
  461040:	mov	x3, x20
  461044:	mov	x0, x23
  461048:	bl	45af38 <_obstack_memory_used@@Base+0x9b28>
  46104c:	cbnz	w0, 461188 <_obstack_memory_used@@Base+0xfd78>
  461050:	cbz	x21, 461170 <_obstack_memory_used@@Base+0xfd60>
  461054:	ldrb	w24, [x23, #56]
  461058:	add	x26, x22, #0x1
  46105c:	ubfx	x24, x24, #1, #2
  461060:	cbz	w24, 4611d8 <_obstack_memory_used@@Base+0xfdc8>
  461064:	cmp	w24, #0x1
  461068:	b.eq	46126c <_obstack_memory_used@@Base+0xfe5c>  // b.none
  46106c:	cmp	w24, #0x2
  461070:	b.ne	461358 <_obstack_memory_used@@Base+0xff48>  // b.any
  461074:	ldr	x25, [x21]
  461078:	cmp	x27, x25
  46107c:	b.hi	461334 <_obstack_memory_used@@Base+0xff24>  // b.pmore
  461080:	cmp	x22, #0x0
  461084:	b.le	4612dc <_obstack_memory_used@@Base+0xfecc>
  461088:	ldp	x2, x3, [x21, #8]
  46108c:	lsl	x0, x22, #3
  461090:	add	x4, x19, x22, lsl #4
  461094:	add	x1, x3, x0
  461098:	add	x0, x2, x0
  46109c:	cmp	x19, x1
  4610a0:	add	x5, x2, #0xf
  4610a4:	ccmp	x3, x4, #0x2, cc  // cc = lo, ul, last
  4610a8:	sub	x5, x5, x3
  4610ac:	cset	w1, cs  // cs = hs, nlast
  4610b0:	cmp	x19, x0
  4610b4:	ccmp	x2, x4, #0x2, cc  // cc = lo, ul, last
  4610b8:	sub	x4, x22, #0x1
  4610bc:	cset	w0, cs  // cs = hs, nlast
  4610c0:	cmp	x5, #0x1e
  4610c4:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
  4610c8:	and	w0, w1, w0
  4610cc:	cset	w4, hi  // hi = pmore
  4610d0:	mov	x1, x22
  4610d4:	tst	w4, w0
  4610d8:	b.eq	4612b0 <_obstack_memory_used@@Base+0xfea0>  // b.none
  4610dc:	lsr	x5, x22, #1
  4610e0:	mov	x4, x19
  4610e4:	mov	x0, #0x0                   	// #0
  4610e8:	lsl	x5, x5, #4
  4610ec:	nop
  4610f0:	ld2	{v0.2d, v1.2d}, [x4], #32
  4610f4:	str	q0, [x2, x0]
  4610f8:	str	q1, [x3, x0]
  4610fc:	add	x0, x0, #0x10
  461100:	cmp	x5, x0
  461104:	b.ne	4610f0 <_obstack_memory_used@@Base+0xfce0>  // b.any
  461108:	and	x0, x22, #0xfffffffffffffffe
  46110c:	tbz	w22, #0, 461128 <_obstack_memory_used@@Base+0xfd18>
  461110:	lsl	x4, x0, #4
  461114:	add	x5, x19, x4
  461118:	ldr	x4, [x19, x4]
  46111c:	str	x4, [x2, x0, lsl #3]
  461120:	ldr	x2, [x5, #8]
  461124:	str	x2, [x3, x0, lsl #3]
  461128:	ldr	x25, [x21]
  46112c:	cmp	x1, x25
  461130:	b.cs	46115c <_obstack_memory_used@@Base+0xfd4c>  // b.hs, b.nlast
  461134:	ldp	x4, x3, [x21, #8]
  461138:	mov	x0, #0xffffffffffffffff    	// #-1
  46113c:	nop
  461140:	str	x0, [x3, x1, lsl #3]
  461144:	add	x22, x22, #0x1
  461148:	str	x0, [x4, x1, lsl #3]
  46114c:	mov	x1, x22
  461150:	ldr	x2, [x21]
  461154:	cmp	x22, x2
  461158:	b.cc	461140 <_obstack_memory_used@@Base+0xfd30>  // b.lo, b.ul, b.last
  46115c:	ldrb	w0, [x23, #56]
  461160:	bfi	w0, w24, #1, #2
  461164:	strb	w0, [x23, #56]
  461168:	tst	w0, #0x6
  46116c:	b.eq	461194 <_obstack_memory_used@@Base+0xfd84>  // b.none
  461170:	ldr	x0, [x19]
  461174:	cmp	x20, x0
  461178:	b.ne	461310 <_obstack_memory_used@@Base+0xff00>  // b.any
  46117c:	ldr	x3, [x19, #8]
  461180:	sub	x20, x3, x20
  461184:	b	461198 <_obstack_memory_used@@Base+0xfd88>
  461188:	cmp	w0, #0x1
  46118c:	mov	x20, #0xffffffffffffffff    	// #-1
  461190:	b.eq	461198 <_obstack_memory_used@@Base+0xfd88>  // b.none
  461194:	mov	x20, #0xfffffffffffffffe    	// #-2
  461198:	mov	x0, x19
  46119c:	bl	4047b0 <free@plt>
  4611a0:	ldp	x21, x22, [sp, #48]
  4611a4:	ldp	x23, x24, [sp, #64]
  4611a8:	ldp	x25, x26, [sp, #80]
  4611ac:	ldr	x27, [sp, #96]
  4611b0:	mov	x0, x20
  4611b4:	ldp	x29, x30, [sp, #16]
  4611b8:	ldp	x19, x20, [sp, #32]
  4611bc:	add	sp, sp, #0x70
  4611c0:	ret
  4611c4:	mov	x27, #0x1                   	// #1
  4611c8:	mov	x0, #0x10                  	// #16
  4611cc:	mov	x22, x27
  4611d0:	mov	x21, #0x0                   	// #0
  4611d4:	b	461018 <_obstack_memory_used@@Base+0xfc08>
  4611d8:	lsl	x27, x26, #3
  4611dc:	mov	x25, x26
  4611e0:	mov	x0, x27
  4611e4:	bl	404310 <malloc@plt>
  4611e8:	str	x0, [x21, #8]
  4611ec:	mov	x24, x0
  4611f0:	cbz	x0, 4612e8 <_obstack_memory_used@@Base+0xfed8>
  4611f4:	mov	x0, x27
  4611f8:	bl	404310 <malloc@plt>
  4611fc:	str	x0, [x21, #16]
  461200:	cbz	x0, 4612f0 <_obstack_memory_used@@Base+0xfee0>
  461204:	mov	w24, #0x1                   	// #1
  461208:	str	x26, [x21]
  46120c:	b	461080 <_obstack_memory_used@@Base+0xfc70>
  461210:	mov	x20, #0xffffffffffffffff    	// #-1
  461214:	mov	x0, x20
  461218:	ldp	x29, x30, [sp, #16]
  46121c:	ldp	x19, x20, [sp, #32]
  461220:	add	sp, sp, #0x70
  461224:	ret
  461228:	mov	x20, #0xfffffffffffffffe    	// #-2
  46122c:	ldp	x21, x22, [sp, #48]
  461230:	ldp	x23, x24, [sp, #64]
  461234:	ldp	x25, x26, [sp, #80]
  461238:	ldr	x27, [sp, #96]
  46123c:	b	4611b0 <_obstack_memory_used@@Base+0xfda0>
  461240:	ldr	x27, [x21]
  461244:	cmp	x27, x0
  461248:	b.hi	46100c <_obstack_memory_used@@Base+0xfbfc>  // b.pmore
  46124c:	cmp	x27, #0x0
  461250:	mov	x22, x27
  461254:	b.gt	461014 <_obstack_memory_used@@Base+0xfc04>
  461258:	mov	x27, #0x1                   	// #1
  46125c:	mov	x0, #0x10                  	// #16
  461260:	mov	x22, x27
  461264:	mov	x21, #0x0                   	// #0
  461268:	b	461018 <_obstack_memory_used@@Base+0xfc08>
  46126c:	ldr	x25, [x21]
  461270:	cmp	x25, x26
  461274:	b.cs	461080 <_obstack_memory_used@@Base+0xfc70>  // b.hs, b.nlast
  461278:	ldr	x0, [x21, #8]
  46127c:	lsl	x25, x26, #3
  461280:	mov	x1, x25
  461284:	bl	404530 <realloc@plt>
  461288:	mov	x27, x0
  46128c:	cbz	x0, 4612e8 <_obstack_memory_used@@Base+0xfed8>
  461290:	ldr	x0, [x21, #16]
  461294:	mov	x1, x25
  461298:	bl	404530 <realloc@plt>
  46129c:	cbz	x0, 461300 <_obstack_memory_used@@Base+0xfef0>
  4612a0:	mov	x25, x26
  4612a4:	stp	x26, x27, [x21]
  4612a8:	str	x0, [x21, #16]
  4612ac:	b	461080 <_obstack_memory_used@@Base+0xfc70>
  4612b0:	mov	x4, x19
  4612b4:	mov	x0, #0x0                   	// #0
  4612b8:	ldr	x5, [x4]
  4612bc:	str	x5, [x2, x0, lsl #3]
  4612c0:	add	x4, x4, #0x10
  4612c4:	ldur	x5, [x4, #-8]
  4612c8:	str	x5, [x3, x0, lsl #3]
  4612cc:	add	x0, x0, #0x1
  4612d0:	cmp	x22, x0
  4612d4:	b.ne	4612b8 <_obstack_memory_used@@Base+0xfea8>  // b.any
  4612d8:	b	461128 <_obstack_memory_used@@Base+0xfd18>
  4612dc:	mov	x1, #0x0                   	// #0
  4612e0:	mov	x22, #0x0                   	// #0
  4612e4:	b	46112c <_obstack_memory_used@@Base+0xfd1c>
  4612e8:	mov	w24, #0x0                   	// #0
  4612ec:	b	46115c <_obstack_memory_used@@Base+0xfd4c>
  4612f0:	mov	x0, x24
  4612f4:	mov	w24, #0x0                   	// #0
  4612f8:	bl	4047b0 <free@plt>
  4612fc:	b	46115c <_obstack_memory_used@@Base+0xfd4c>
  461300:	mov	x0, x27
  461304:	mov	w24, #0x0                   	// #0
  461308:	bl	4047b0 <free@plt>
  46130c:	b	46115c <_obstack_memory_used@@Base+0xfd4c>
  461310:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461314:	add	x3, x3, #0x2c0
  461318:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  46131c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461320:	add	x3, x3, #0x288
  461324:	add	x1, x1, #0xff8
  461328:	add	x0, x0, #0x140
  46132c:	mov	w2, #0x1be                 	// #446
  461330:	bl	404ac0 <__assert_fail@plt>
  461334:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461338:	add	x3, x3, #0x2c0
  46133c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  461340:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461344:	add	x3, x3, #0x278
  461348:	add	x1, x1, #0xff8
  46134c:	add	x0, x0, #0x128
  461350:	mov	w2, #0x1fb                 	// #507
  461354:	bl	404ac0 <__assert_fail@plt>
  461358:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  46135c:	add	x3, x3, #0x2c0
  461360:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  461364:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461368:	add	x3, x3, #0x278
  46136c:	add	x1, x1, #0xff8
  461370:	add	x0, x0, #0x108
  461374:	mov	w2, #0x1f9                 	// #505
  461378:	bl	404ac0 <__assert_fail@plt>
  46137c:	nop
  461380:	sub	sp, sp, #0x70
  461384:	cmp	x3, #0x0
  461388:	ccmp	x2, x3, #0x1, ge  // ge = tcont
  46138c:	stp	x29, x30, [sp, #16]
  461390:	add	x29, sp, #0x10
  461394:	stp	x19, x20, [sp, #32]
  461398:	stp	x21, x22, [sp, #48]
  46139c:	add	x22, x3, x4
  4613a0:	b.lt	461644 <_obstack_memory_used@@Base+0x10234>  // b.tstop
  4613a4:	stp	x23, x24, [sp, #64]
  4613a8:	mov	x19, x3
  4613ac:	mov	x20, x0
  4613b0:	stp	x25, x26, [sp, #80]
  4613b4:	mov	x23, x1
  4613b8:	mov	x21, x5
  4613bc:	stp	x27, x28, [sp, #96]
  4613c0:	cmp	x2, x22
  4613c4:	mov	x28, x2
  4613c8:	b.lt	46162c <_obstack_memory_used@@Base+0x1021c>  // b.tstop
  4613cc:	cmp	x4, #0x0
  4613d0:	ccmp	x3, x22, #0x4, ge  // ge = tcont
  4613d4:	b.gt	46162c <_obstack_memory_used@@Base+0x1021c>
  4613d8:	tbnz	x22, #63, 461634 <_obstack_memory_used@@Base+0x10224>
  4613dc:	cmp	x4, #0x0
  4613e0:	ccmp	x3, x22, #0x0, lt  // lt = tstop
  4613e4:	b.le	461634 <_obstack_memory_used@@Base+0x10224>
  4613e8:	ldrb	w0, [x20, #56]
  4613ec:	cmp	x19, x22
  4613f0:	ubfx	x24, x0, #5, #2
  4613f4:	b.ge	461404 <_obstack_memory_used@@Base+0xfff4>  // b.tcont
  4613f8:	ldr	x1, [x20, #32]
  4613fc:	cbz	x1, 461404 <_obstack_memory_used@@Base+0xfff4>
  461400:	tbz	w0, #3, 4615e8 <_obstack_memory_used@@Base+0x101d8>
  461404:	ldrb	w1, [x20, #56]
  461408:	cmp	x21, #0x0
  46140c:	cset	w0, eq  // eq = none
  461410:	ubfx	x2, x1, #4, #1
  461414:	orr	w0, w0, w2
  461418:	tbnz	w0, #0, 4615d4 <_obstack_memory_used@@Base+0x101c4>
  46141c:	and	w1, w1, #0x6
  461420:	cmp	w1, #0x4
  461424:	ldr	x0, [x20, #48]
  461428:	b.eq	461674 <_obstack_memory_used@@Base+0x10264>  // b.none
  46142c:	add	x25, x0, #0x1
  461430:	mov	x27, x25
  461434:	lsl	x0, x25, #4
  461438:	bl	404310 <malloc@plt>
  46143c:	mov	x26, x0
  461440:	cbz	x0, 461660 <_obstack_memory_used@@Base+0x10250>
  461444:	str	w24, [sp]
  461448:	mov	x7, x0
  46144c:	mov	x4, x22
  461450:	mov	x3, x19
  461454:	mov	x1, x23
  461458:	mov	x6, x25
  46145c:	mov	x5, x28
  461460:	mov	x2, x28
  461464:	mov	x0, x20
  461468:	bl	45af38 <_obstack_memory_used@@Base+0x9b28>
  46146c:	cbnz	w0, 461598 <_obstack_memory_used@@Base+0x10188>
  461470:	cbz	x21, 461590 <_obstack_memory_used@@Base+0x10180>
  461474:	ldrb	w19, [x20, #56]
  461478:	add	x23, x27, #0x1
  46147c:	ubfx	x19, x19, #1, #2
  461480:	cbz	w19, 4615f4 <_obstack_memory_used@@Base+0x101e4>
  461484:	cmp	w19, #0x1
  461488:	b.eq	4616a0 <_obstack_memory_used@@Base+0x10290>  // b.none
  46148c:	cmp	w19, #0x2
  461490:	b.ne	461748 <_obstack_memory_used@@Base+0x10338>  // b.any
  461494:	ldr	x22, [x21]
  461498:	cmp	x25, x22
  46149c:	b.hi	46176c <_obstack_memory_used@@Base+0x1035c>  // b.pmore
  4614a0:	cmp	x27, #0x0
  4614a4:	b.le	461714 <_obstack_memory_used@@Base+0x10304>
  4614a8:	ldp	x3, x4, [x21, #8]
  4614ac:	lsl	x0, x27, #3
  4614b0:	add	x2, x26, x27, lsl #4
  4614b4:	add	x1, x4, x0
  4614b8:	add	x0, x3, x0
  4614bc:	cmp	x1, x26
  4614c0:	add	x5, x3, #0xf
  4614c4:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  4614c8:	sub	x5, x5, x4
  4614cc:	cset	w1, cs  // cs = hs, nlast
  4614d0:	cmp	x26, x0
  4614d4:	ccmp	x3, x2, #0x2, cc  // cc = lo, ul, last
  4614d8:	sub	x2, x27, #0x1
  4614dc:	cset	w0, cs  // cs = hs, nlast
  4614e0:	cmp	x5, #0x1e
  4614e4:	ccmp	x2, #0x5, #0x0, hi  // hi = pmore
  4614e8:	and	w0, w1, w0
  4614ec:	cset	w1, hi  // hi = pmore
  4614f0:	mov	x2, x27
  4614f4:	tst	w1, w0
  4614f8:	b.eq	4616e4 <_obstack_memory_used@@Base+0x102d4>  // b.none
  4614fc:	lsr	x5, x27, #1
  461500:	mov	x0, x26
  461504:	mov	x1, #0x0                   	// #0
  461508:	lsl	x5, x5, #4
  46150c:	nop
  461510:	ld2	{v0.2d, v1.2d}, [x0], #32
  461514:	str	q0, [x3, x1]
  461518:	str	q1, [x4, x1]
  46151c:	add	x1, x1, #0x10
  461520:	cmp	x5, x1
  461524:	b.ne	461510 <_obstack_memory_used@@Base+0x10100>  // b.any
  461528:	and	x1, x27, #0xfffffffffffffffe
  46152c:	tbz	w27, #0, 461548 <_obstack_memory_used@@Base+0x10138>
  461530:	lsl	x5, x1, #4
  461534:	add	x0, x26, x5
  461538:	ldr	x5, [x26, x5]
  46153c:	str	x5, [x3, x1, lsl #3]
  461540:	ldr	x0, [x0, #8]
  461544:	str	x0, [x4, x1, lsl #3]
  461548:	ldr	x22, [x21]
  46154c:	cmp	x22, x2
  461550:	b.ls	46157c <_obstack_memory_used@@Base+0x1016c>  // b.plast
  461554:	ldp	x4, x3, [x21, #8]
  461558:	mov	x1, #0xffffffffffffffff    	// #-1
  46155c:	nop
  461560:	str	x1, [x3, x2, lsl #3]
  461564:	add	x27, x27, #0x1
  461568:	str	x1, [x4, x2, lsl #3]
  46156c:	mov	x2, x27
  461570:	ldr	x0, [x21]
  461574:	cmp	x27, x0
  461578:	b.cc	461560 <_obstack_memory_used@@Base+0x10150>  // b.lo, b.ul, b.last
  46157c:	ldrb	w0, [x20, #56]
  461580:	bfi	w0, w19, #1, #2
  461584:	strb	w0, [x20, #56]
  461588:	tst	w0, #0x6
  46158c:	b.eq	4615a4 <_obstack_memory_used@@Base+0x10194>  // b.none
  461590:	ldr	x19, [x26]
  461594:	b	4615a8 <_obstack_memory_used@@Base+0x10198>
  461598:	cmp	w0, #0x1
  46159c:	mov	x19, #0xffffffffffffffff    	// #-1
  4615a0:	b.eq	4615a8 <_obstack_memory_used@@Base+0x10198>  // b.none
  4615a4:	mov	x19, #0xfffffffffffffffe    	// #-2
  4615a8:	mov	x0, x26
  4615ac:	bl	4047b0 <free@plt>
  4615b0:	ldp	x23, x24, [sp, #64]
  4615b4:	ldp	x25, x26, [sp, #80]
  4615b8:	ldp	x27, x28, [sp, #96]
  4615bc:	mov	x0, x19
  4615c0:	ldp	x29, x30, [sp, #16]
  4615c4:	ldp	x19, x20, [sp, #32]
  4615c8:	ldp	x21, x22, [sp, #48]
  4615cc:	add	sp, sp, #0x70
  4615d0:	ret
  4615d4:	mov	x25, #0x1                   	// #1
  4615d8:	mov	x0, #0x10                  	// #16
  4615dc:	mov	x27, x25
  4615e0:	mov	x21, #0x0                   	// #0
  4615e4:	b	461438 <_obstack_memory_used@@Base+0x10028>
  4615e8:	mov	x0, x20
  4615ec:	bl	460788 <_obstack_memory_used@@Base+0xf378>
  4615f0:	b	461404 <_obstack_memory_used@@Base+0xfff4>
  4615f4:	lsl	x24, x23, #3
  4615f8:	mov	x22, x23
  4615fc:	mov	x0, x24
  461600:	bl	404310 <malloc@plt>
  461604:	str	x0, [x21, #8]
  461608:	mov	x19, x0
  46160c:	cbz	x0, 461720 <_obstack_memory_used@@Base+0x10310>
  461610:	mov	x0, x24
  461614:	bl	404310 <malloc@plt>
  461618:	str	x0, [x21, #16]
  46161c:	cbz	x0, 461728 <_obstack_memory_used@@Base+0x10318>
  461620:	mov	w19, #0x1                   	// #1
  461624:	str	x23, [x21]
  461628:	b	4614a0 <_obstack_memory_used@@Base+0x10090>
  46162c:	mov	x22, x28
  461630:	b	4613e8 <_obstack_memory_used@@Base+0xffd8>
  461634:	ldrb	w24, [x20, #56]
  461638:	mov	x22, #0x0                   	// #0
  46163c:	ubfx	x24, x24, #5, #2
  461640:	b	461404 <_obstack_memory_used@@Base+0xfff4>
  461644:	mov	x19, #0xffffffffffffffff    	// #-1
  461648:	mov	x0, x19
  46164c:	ldp	x29, x30, [sp, #16]
  461650:	ldp	x19, x20, [sp, #32]
  461654:	ldp	x21, x22, [sp, #48]
  461658:	add	sp, sp, #0x70
  46165c:	ret
  461660:	mov	x19, #0xfffffffffffffffe    	// #-2
  461664:	ldp	x23, x24, [sp, #64]
  461668:	ldp	x25, x26, [sp, #80]
  46166c:	ldp	x27, x28, [sp, #96]
  461670:	b	4615bc <_obstack_memory_used@@Base+0x101ac>
  461674:	ldr	x25, [x21]
  461678:	cmp	x25, x0
  46167c:	b.hi	46142c <_obstack_memory_used@@Base+0x1001c>  // b.pmore
  461680:	cmp	x25, #0x0
  461684:	mov	x27, x25
  461688:	b.gt	461434 <_obstack_memory_used@@Base+0x10024>
  46168c:	mov	x25, #0x1                   	// #1
  461690:	mov	x0, #0x10                  	// #16
  461694:	mov	x27, x25
  461698:	mov	x21, #0x0                   	// #0
  46169c:	b	461438 <_obstack_memory_used@@Base+0x10028>
  4616a0:	ldr	x22, [x21]
  4616a4:	cmp	x22, x23
  4616a8:	b.cs	4614a0 <_obstack_memory_used@@Base+0x10090>  // b.hs, b.nlast
  4616ac:	ldr	x0, [x21, #8]
  4616b0:	lsl	x22, x23, #3
  4616b4:	mov	x1, x22
  4616b8:	bl	404530 <realloc@plt>
  4616bc:	mov	x24, x0
  4616c0:	cbz	x0, 461720 <_obstack_memory_used@@Base+0x10310>
  4616c4:	ldr	x0, [x21, #16]
  4616c8:	mov	x1, x22
  4616cc:	bl	404530 <realloc@plt>
  4616d0:	cbz	x0, 461738 <_obstack_memory_used@@Base+0x10328>
  4616d4:	mov	x22, x23
  4616d8:	stp	x23, x24, [x21]
  4616dc:	str	x0, [x21, #16]
  4616e0:	b	4614a0 <_obstack_memory_used@@Base+0x10090>
  4616e4:	mov	x1, x26
  4616e8:	mov	x0, #0x0                   	// #0
  4616ec:	nop
  4616f0:	ldr	x5, [x1]
  4616f4:	str	x5, [x3, x0, lsl #3]
  4616f8:	add	x1, x1, #0x10
  4616fc:	ldur	x5, [x1, #-8]
  461700:	str	x5, [x4, x0, lsl #3]
  461704:	add	x0, x0, #0x1
  461708:	cmp	x27, x0
  46170c:	b.ne	4616f0 <_obstack_memory_used@@Base+0x102e0>  // b.any
  461710:	b	461548 <_obstack_memory_used@@Base+0x10138>
  461714:	mov	x2, #0x0                   	// #0
  461718:	mov	x27, #0x0                   	// #0
  46171c:	b	46154c <_obstack_memory_used@@Base+0x1013c>
  461720:	mov	w19, #0x0                   	// #0
  461724:	b	46157c <_obstack_memory_used@@Base+0x1016c>
  461728:	mov	x0, x19
  46172c:	mov	w19, #0x0                   	// #0
  461730:	bl	4047b0 <free@plt>
  461734:	b	46157c <_obstack_memory_used@@Base+0x1016c>
  461738:	mov	x0, x24
  46173c:	mov	w19, #0x0                   	// #0
  461740:	bl	4047b0 <free@plt>
  461744:	b	46157c <_obstack_memory_used@@Base+0x1016c>
  461748:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  46174c:	add	x3, x3, #0x2c0
  461750:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  461754:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461758:	add	x3, x3, #0x278
  46175c:	add	x1, x1, #0xff8
  461760:	add	x0, x0, #0x108
  461764:	mov	w2, #0x1f9                 	// #505
  461768:	bl	404ac0 <__assert_fail@plt>
  46176c:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461770:	add	x3, x3, #0x2c0
  461774:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x20bf0>
  461778:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  46177c:	add	x3, x3, #0x278
  461780:	add	x1, x1, #0xff8
  461784:	add	x0, x0, #0x128
  461788:	mov	w2, #0x1fb                 	// #507
  46178c:	bl	404ac0 <__assert_fail@plt>
  461790:	stp	x29, x30, [sp, #-96]!
  461794:	cmp	x4, #0x0
  461798:	ccmp	x7, #0x0, #0x1, ge  // ge = tcont
  46179c:	mov	x29, sp
  4617a0:	stp	x19, x20, [sp, #16]
  4617a4:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  4617a8:	b.lt	461884 <_obstack_memory_used@@Base+0x10474>  // b.tstop
  4617ac:	stp	x27, x28, [sp, #80]
  4617b0:	mov	x19, x4
  4617b4:	mov	x20, x2
  4617b8:	adds	x27, x2, x4
  4617bc:	b.vs	461880 <_obstack_memory_used@@Base+0x10470>
  4617c0:	stp	x21, x22, [sp, #32]
  4617c4:	mov	x28, x1
  4617c8:	mov	x21, x7
  4617cc:	stp	x23, x24, [sp, #48]
  4617d0:	mov	x23, x0
  4617d4:	mov	x24, x5
  4617d8:	stp	x25, x26, [sp, #64]
  4617dc:	mov	x25, x6
  4617e0:	cbz	x4, 461898 <_obstack_memory_used@@Base+0x10488>
  4617e4:	mov	x22, x3
  4617e8:	mov	x26, #0x0                   	// #0
  4617ec:	cbnz	x2, 461840 <_obstack_memory_used@@Base+0x10430>
  4617f0:	mov	x6, x25
  4617f4:	mov	x5, x21
  4617f8:	mov	x3, x24
  4617fc:	mov	x2, x27
  461800:	mov	x1, x22
  461804:	mov	w7, #0x1                   	// #1
  461808:	mov	x4, #0x0                   	// #0
  46180c:	mov	x0, x23
  461810:	bl	460858 <_obstack_memory_used@@Base+0xf448>
  461814:	mov	x19, x0
  461818:	mov	x0, x26
  46181c:	bl	4047b0 <free@plt>
  461820:	mov	x0, x19
  461824:	ldp	x19, x20, [sp, #16]
  461828:	ldp	x21, x22, [sp, #32]
  46182c:	ldp	x23, x24, [sp, #48]
  461830:	ldp	x25, x26, [sp, #64]
  461834:	ldp	x27, x28, [sp, #80]
  461838:	ldp	x29, x30, [sp], #96
  46183c:	ret
  461840:	mov	x0, x27
  461844:	bl	404310 <malloc@plt>
  461848:	mov	x26, x0
  46184c:	cbz	x0, 461874 <_obstack_memory_used@@Base+0x10464>
  461850:	mov	x1, x28
  461854:	mov	x2, x20
  461858:	bl	403f70 <memcpy@plt>
  46185c:	mov	x1, x22
  461860:	mov	x2, x19
  461864:	add	x0, x26, x20
  461868:	mov	x22, x26
  46186c:	bl	403f70 <memcpy@plt>
  461870:	b	4617f0 <_obstack_memory_used@@Base+0x103e0>
  461874:	ldp	x21, x22, [sp, #32]
  461878:	ldp	x23, x24, [sp, #48]
  46187c:	ldp	x25, x26, [sp, #64]
  461880:	ldp	x27, x28, [sp, #80]
  461884:	mov	x19, #0xfffffffffffffffe    	// #-2
  461888:	mov	x0, x19
  46188c:	ldp	x19, x20, [sp, #16]
  461890:	ldp	x29, x30, [sp], #96
  461894:	ret
  461898:	mov	x22, x1
  46189c:	mov	x26, #0x0                   	// #0
  4618a0:	b	4617f0 <_obstack_memory_used@@Base+0x103e0>
  4618a4:	nop
  4618a8:	stp	x29, x30, [sp, #-112]!
  4618ac:	cmp	x4, #0x0
  4618b0:	mov	x29, sp
  4618b4:	stp	x27, x28, [sp, #80]
  4618b8:	ldr	x27, [sp, #112]
  4618bc:	stp	x19, x20, [sp, #16]
  4618c0:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  4618c4:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  4618c8:	b.lt	46199c <_obstack_memory_used@@Base+0x1058c>  // b.tstop
  4618cc:	mov	x19, x4
  4618d0:	mov	x20, x2
  4618d4:	adds	x28, x2, x4
  4618d8:	b.vs	46199c <_obstack_memory_used@@Base+0x1058c>
  4618dc:	stp	x21, x22, [sp, #32]
  4618e0:	mov	x22, x0
  4618e4:	stp	x23, x24, [sp, #48]
  4618e8:	mov	x23, x5
  4618ec:	mov	x24, x6
  4618f0:	stp	x25, x26, [sp, #64]
  4618f4:	mov	x25, x7
  4618f8:	cbz	x4, 4619b4 <_obstack_memory_used@@Base+0x105a4>
  4618fc:	str	x1, [sp, #104]
  461900:	mov	x21, x3
  461904:	mov	x26, #0x0                   	// #0
  461908:	cbnz	x2, 46195c <_obstack_memory_used@@Base+0x1054c>
  46190c:	mov	x6, x25
  461910:	mov	x5, x27
  461914:	mov	x4, x24
  461918:	mov	x3, x23
  46191c:	mov	x2, x28
  461920:	mov	x1, x21
  461924:	mov	w7, #0x0                   	// #0
  461928:	mov	x0, x22
  46192c:	bl	460858 <_obstack_memory_used@@Base+0xf448>
  461930:	mov	x19, x0
  461934:	mov	x0, x26
  461938:	bl	4047b0 <free@plt>
  46193c:	mov	x0, x19
  461940:	ldp	x19, x20, [sp, #16]
  461944:	ldp	x21, x22, [sp, #32]
  461948:	ldp	x23, x24, [sp, #48]
  46194c:	ldp	x25, x26, [sp, #64]
  461950:	ldp	x27, x28, [sp, #80]
  461954:	ldp	x29, x30, [sp], #112
  461958:	ret
  46195c:	mov	x0, x28
  461960:	bl	404310 <malloc@plt>
  461964:	mov	x26, x0
  461968:	cbz	x0, 461990 <_obstack_memory_used@@Base+0x10580>
  46196c:	ldr	x1, [sp, #104]
  461970:	mov	x2, x20
  461974:	bl	403f70 <memcpy@plt>
  461978:	mov	x1, x21
  46197c:	mov	x2, x19
  461980:	add	x0, x26, x20
  461984:	mov	x21, x26
  461988:	bl	403f70 <memcpy@plt>
  46198c:	b	46190c <_obstack_memory_used@@Base+0x104fc>
  461990:	ldp	x21, x22, [sp, #32]
  461994:	ldp	x23, x24, [sp, #48]
  461998:	ldp	x25, x26, [sp, #64]
  46199c:	mov	x19, #0xfffffffffffffffe    	// #-2
  4619a0:	mov	x0, x19
  4619a4:	ldp	x19, x20, [sp, #16]
  4619a8:	ldp	x27, x28, [sp, #80]
  4619ac:	ldp	x29, x30, [sp], #112
  4619b0:	ret
  4619b4:	mov	x21, x1
  4619b8:	mov	x26, #0x0                   	// #0
  4619bc:	b	46190c <_obstack_memory_used@@Base+0x104fc>
  4619c0:	cbz	x2, 4619e0 <_obstack_memory_used@@Base+0x105d0>
  4619c4:	ldrb	w5, [x0, #56]
  4619c8:	mov	w6, #0x1                   	// #1
  4619cc:	bfi	w5, w6, #1, #2
  4619d0:	strb	w5, [x0, #56]
  4619d4:	stp	x2, x3, [x1]
  4619d8:	str	x4, [x1, #16]
  4619dc:	ret
  4619e0:	ldrb	w2, [x0, #56]
  4619e4:	and	w2, w2, #0xfffffff9
  4619e8:	strb	w2, [x0, #56]
  4619ec:	str	xzr, [x1]
  4619f0:	stp	xzr, xzr, [x1, #8]
  4619f4:	ret
  4619f8:	stp	x29, x30, [sp, #-64]!
  4619fc:	mov	x29, sp
  461a00:	stp	x21, x22, [sp, #32]
  461a04:	adrp	x22, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  461a08:	add	x22, x22, #0x4a0
  461a0c:	mov	x21, x0
  461a10:	mov	x0, x22
  461a14:	stp	x19, x20, [sp, #16]
  461a18:	bl	404af0 <getenv@plt>
  461a1c:	cbz	x0, 461ad8 <_obstack_memory_used@@Base+0x106c8>
  461a20:	stp	x23, x24, [sp, #48]
  461a24:	mov	x20, x0
  461a28:	ldrb	w24, [x21, #8]
  461a2c:	cbnz	w24, 461aac <_obstack_memory_used@@Base+0x1069c>
  461a30:	mov	x0, x20
  461a34:	bl	403ff0 <strlen@plt>
  461a38:	add	x23, x0, #0x1
  461a3c:	mov	x1, #0x76                  	// #118
  461a40:	cmp	x23, x1
  461a44:	csel	x0, x23, x1, cs  // cs = hs, nlast
  461a48:	add	x0, x0, #0x11
  461a4c:	and	x0, x0, #0xfffffffffffffff8
  461a50:	bl	404310 <malloc@plt>
  461a54:	mov	x19, x0
  461a58:	cbz	x0, 461b44 <_obstack_memory_used@@Base+0x10734>
  461a5c:	add	x3, x19, #0x9
  461a60:	mov	w0, #0x1                   	// #1
  461a64:	str	xzr, [x19]
  461a68:	mov	x1, x20
  461a6c:	strh	w0, [x19, #8]
  461a70:	mov	x2, x23
  461a74:	mov	x0, x3
  461a78:	bl	403f70 <memcpy@plt>
  461a7c:	strb	wzr, [x0, x23]
  461a80:	cbnz	w24, 461b50 <_obstack_memory_used@@Base+0x10740>
  461a84:	mov	x0, x22
  461a88:	bl	404930 <unsetenv@plt>
  461a8c:	ldp	x23, x24, [sp, #48]
  461a90:	cbnz	w0, 461b10 <_obstack_memory_used@@Base+0x10700>
  461a94:	bl	404360 <tzset@plt>
  461a98:	mov	x0, x19
  461a9c:	ldp	x19, x20, [sp, #16]
  461aa0:	ldp	x21, x22, [sp, #32]
  461aa4:	ldp	x29, x30, [sp], #64
  461aa8:	ret
  461aac:	mov	x1, x0
  461ab0:	mov	x19, #0x1                   	// #1
  461ab4:	add	x0, x21, #0x9
  461ab8:	bl	404710 <strcmp@plt>
  461abc:	cbnz	w0, 461a30 <_obstack_memory_used@@Base+0x10620>
  461ac0:	mov	x0, x19
  461ac4:	ldp	x19, x20, [sp, #16]
  461ac8:	ldp	x21, x22, [sp, #32]
  461acc:	ldp	x23, x24, [sp, #48]
  461ad0:	ldp	x29, x30, [sp], #64
  461ad4:	ret
  461ad8:	ldrb	w0, [x21, #8]
  461adc:	mov	x19, #0x1                   	// #1
  461ae0:	cbz	w0, 461a98 <_obstack_memory_used@@Base+0x10688>
  461ae4:	mov	x0, #0x80                  	// #128
  461ae8:	bl	404310 <malloc@plt>
  461aec:	mov	x19, x0
  461af0:	cbz	x0, 461b48 <_obstack_memory_used@@Base+0x10738>
  461af4:	str	xzr, [x0]
  461af8:	strh	wzr, [x0, #8]
  461afc:	add	x1, x21, #0x9
  461b00:	mov	x0, x22
  461b04:	mov	w2, #0x1                   	// #1
  461b08:	bl	404100 <setenv@plt>
  461b0c:	cbz	w0, 461a94 <_obstack_memory_used@@Base+0x10684>
  461b10:	bl	404ad0 <__errno_location@plt>
  461b14:	ldr	w21, [x0]
  461b18:	mov	x20, x0
  461b1c:	mov	x0, x19
  461b20:	ldr	x19, [x19]
  461b24:	bl	4047b0 <free@plt>
  461b28:	cbnz	x19, 461b1c <_obstack_memory_used@@Base+0x1070c>
  461b2c:	str	w21, [x20]
  461b30:	mov	x0, x19
  461b34:	ldp	x19, x20, [sp, #16]
  461b38:	ldp	x21, x22, [sp, #32]
  461b3c:	ldp	x29, x30, [sp], #64
  461b40:	ret
  461b44:	ldp	x23, x24, [sp, #48]
  461b48:	mov	x19, #0x0                   	// #0
  461b4c:	b	461a98 <_obstack_memory_used@@Base+0x10688>
  461b50:	ldp	x23, x24, [sp, #48]
  461b54:	b	461afc <_obstack_memory_used@@Base+0x106ec>
  461b58:	stp	x29, x30, [sp, #-64]!
  461b5c:	mov	x29, sp
  461b60:	stp	x23, x24, [sp, #48]
  461b64:	ldr	x23, [x1, #48]
  461b68:	cbz	x23, 461c54 <_obstack_memory_used@@Base+0x10844>
  461b6c:	stp	x19, x20, [sp, #16]
  461b70:	cmp	x1, x23
  461b74:	mov	x20, x0
  461b78:	stp	x21, x22, [sp, #32]
  461b7c:	mov	x22, x1
  461b80:	b.hi	461b94 <_obstack_memory_used@@Base+0x10784>  // b.pmore
  461b84:	add	x1, x1, #0x38
  461b88:	mov	w0, #0x1                   	// #1
  461b8c:	cmp	x23, x1
  461b90:	b.cc	461c40 <_obstack_memory_used@@Base+0x10830>  // b.lo, b.ul, b.last
  461b94:	ldrb	w0, [x23]
  461b98:	add	x19, x20, #0x9
  461b9c:	cbz	w0, 461c34 <_obstack_memory_used@@Base+0x10824>
  461ba0:	mov	x1, x23
  461ba4:	mov	x0, x19
  461ba8:	bl	404710 <strcmp@plt>
  461bac:	add	x21, x20, #0x9
  461bb0:	mov	w2, w0
  461bb4:	mov	x0, x19
  461bb8:	cbz	w2, 461c18 <_obstack_memory_used@@Base+0x10808>
  461bbc:	ldrb	w1, [x19]
  461bc0:	cmp	x21, x19
  461bc4:	cbnz	w1, 461bd4 <_obstack_memory_used@@Base+0x107c4>
  461bc8:	b.ne	461c64 <_obstack_memory_used@@Base+0x10854>  // b.any
  461bcc:	ldrb	w1, [x20, #8]
  461bd0:	cbz	w1, 461c64 <_obstack_memory_used@@Base+0x10854>
  461bd4:	bl	403ff0 <strlen@plt>
  461bd8:	add	x0, x0, #0x1
  461bdc:	add	x19, x19, x0
  461be0:	ldrb	w0, [x19]
  461be4:	cbnz	w0, 461ba0 <_obstack_memory_used@@Base+0x10790>
  461be8:	ldr	x0, [x20]
  461bec:	cbz	x0, 461ba0 <_obstack_memory_used@@Base+0x10790>
  461bf0:	add	x19, x0, #0x9
  461bf4:	mov	x20, x0
  461bf8:	mov	x1, x23
  461bfc:	mov	x0, x19
  461c00:	bl	404710 <strcmp@plt>
  461c04:	add	x21, x20, #0x9
  461c08:	mov	w2, w0
  461c0c:	mov	x0, x19
  461c10:	cbnz	w2, 461bbc <_obstack_memory_used@@Base+0x107ac>
  461c14:	nop
  461c18:	str	x19, [x22, #48]
  461c1c:	mov	w0, #0x1                   	// #1
  461c20:	ldp	x19, x20, [sp, #16]
  461c24:	ldp	x21, x22, [sp, #32]
  461c28:	ldp	x23, x24, [sp, #48]
  461c2c:	ldp	x29, x30, [sp], #64
  461c30:	ret
  461c34:	adrp	x19, 473000 <_obstack_memory_used@@Base+0x21bf0>
  461c38:	add	x19, x19, #0x7e8
  461c3c:	b	461c18 <_obstack_memory_used@@Base+0x10808>
  461c40:	ldp	x19, x20, [sp, #16]
  461c44:	ldp	x21, x22, [sp, #32]
  461c48:	ldp	x23, x24, [sp, #48]
  461c4c:	ldp	x29, x30, [sp], #64
  461c50:	ret
  461c54:	mov	w0, #0x1                   	// #1
  461c58:	ldp	x23, x24, [sp, #48]
  461c5c:	ldp	x29, x30, [sp], #64
  461c60:	ret
  461c64:	mov	x0, x23
  461c68:	sub	x21, x19, x21
  461c6c:	bl	403ff0 <strlen@plt>
  461c70:	add	x24, x0, #0x1
  461c74:	mvn	x0, x21
  461c78:	cmp	x0, x24
  461c7c:	b.cc	461ca4 <_obstack_memory_used@@Base+0x10894>  // b.lo, b.ul, b.last
  461c80:	add	x21, x24, x21
  461c84:	cmp	x21, #0x76
  461c88:	b.hi	461cc4 <_obstack_memory_used@@Base+0x108b4>  // b.pmore
  461c8c:	mov	x1, x23
  461c90:	mov	x2, x24
  461c94:	mov	x0, x19
  461c98:	bl	403f70 <memcpy@plt>
  461c9c:	strb	wzr, [x19, x24]
  461ca0:	b	461c18 <_obstack_memory_used@@Base+0x10808>
  461ca4:	bl	404ad0 <__errno_location@plt>
  461ca8:	mov	x1, x0
  461cac:	mov	w2, #0xc                   	// #12
  461cb0:	mov	w0, #0x0                   	// #0
  461cb4:	ldp	x19, x20, [sp, #16]
  461cb8:	ldp	x21, x22, [sp, #32]
  461cbc:	str	w2, [x1]
  461cc0:	b	461c28 <_obstack_memory_used@@Base+0x10818>
  461cc4:	cmp	x24, #0x76
  461cc8:	mov	x0, #0x76                  	// #118
  461ccc:	csel	x0, x24, x0, cs  // cs = hs, nlast
  461cd0:	add	x0, x0, #0x11
  461cd4:	and	x0, x0, #0xfffffffffffffff8
  461cd8:	bl	404310 <malloc@plt>
  461cdc:	mov	x21, x0
  461ce0:	cbz	x0, 461d14 <_obstack_memory_used@@Base+0x10904>
  461ce4:	add	x19, x0, #0x9
  461ce8:	mov	w3, #0x1                   	// #1
  461cec:	str	xzr, [x21]
  461cf0:	mov	x1, x23
  461cf4:	strh	w3, [x21, #8]
  461cf8:	mov	x0, x19
  461cfc:	mov	x2, x24
  461d00:	bl	403f70 <memcpy@plt>
  461d04:	strb	wzr, [x19, x24]
  461d08:	str	x21, [x20]
  461d0c:	strb	wzr, [x21, #8]
  461d10:	b	461c18 <_obstack_memory_used@@Base+0x10808>
  461d14:	mov	w0, #0x0                   	// #0
  461d18:	ldp	x21, x22, [sp, #32]
  461d1c:	str	xzr, [x20]
  461d20:	ldp	x19, x20, [sp, #16]
  461d24:	b	461c28 <_obstack_memory_used@@Base+0x10818>
  461d28:	stp	x29, x30, [sp, #-48]!
  461d2c:	mov	x29, sp
  461d30:	stp	x19, x20, [sp, #16]
  461d34:	cbz	x0, 461da0 <_obstack_memory_used@@Base+0x10990>
  461d38:	str	x21, [sp, #32]
  461d3c:	mov	x21, x0
  461d40:	bl	403ff0 <strlen@plt>
  461d44:	add	x20, x0, #0x1
  461d48:	mov	x0, #0x76                  	// #118
  461d4c:	cmp	x20, x0
  461d50:	csel	x0, x20, x0, cs  // cs = hs, nlast
  461d54:	add	x0, x0, #0x11
  461d58:	and	x0, x0, #0xfffffffffffffff8
  461d5c:	bl	404310 <malloc@plt>
  461d60:	mov	x19, x0
  461d64:	cbz	x0, 461d8c <_obstack_memory_used@@Base+0x1097c>
  461d68:	add	x3, x0, #0x9
  461d6c:	mov	w0, #0x1                   	// #1
  461d70:	str	xzr, [x19]
  461d74:	mov	x1, x21
  461d78:	strh	w0, [x19, #8]
  461d7c:	mov	x2, x20
  461d80:	mov	x0, x3
  461d84:	bl	403f70 <memcpy@plt>
  461d88:	strb	wzr, [x0, x20]
  461d8c:	ldr	x21, [sp, #32]
  461d90:	mov	x0, x19
  461d94:	ldp	x19, x20, [sp, #16]
  461d98:	ldp	x29, x30, [sp], #48
  461d9c:	ret
  461da0:	mov	x0, #0x80                  	// #128
  461da4:	bl	404310 <malloc@plt>
  461da8:	mov	x19, x0
  461dac:	cbz	x0, 461d90 <_obstack_memory_used@@Base+0x10980>
  461db0:	str	xzr, [x19]
  461db4:	mov	x0, x19
  461db8:	strh	wzr, [x19, #8]
  461dbc:	ldp	x19, x20, [sp, #16]
  461dc0:	ldp	x29, x30, [sp], #48
  461dc4:	ret
  461dc8:	cmp	x0, #0x1
  461dcc:	b.eq	461e04 <_obstack_memory_used@@Base+0x109f4>  // b.none
  461dd0:	stp	x29, x30, [sp, #-32]!
  461dd4:	mov	x29, sp
  461dd8:	str	x19, [sp, #16]
  461ddc:	mov	x19, x0
  461de0:	cbz	x0, 461df8 <_obstack_memory_used@@Base+0x109e8>
  461de4:	nop
  461de8:	mov	x0, x19
  461dec:	ldr	x19, [x19]
  461df0:	bl	4047b0 <free@plt>
  461df4:	cbnz	x19, 461de8 <_obstack_memory_used@@Base+0x109d8>
  461df8:	ldr	x19, [sp, #16]
  461dfc:	ldp	x29, x30, [sp], #32
  461e00:	ret
  461e04:	ret
  461e08:	stp	x29, x30, [sp, #-64]!
  461e0c:	mov	x29, sp
  461e10:	stp	x19, x20, [sp, #16]
  461e14:	mov	x20, x2
  461e18:	stp	x21, x22, [sp, #32]
  461e1c:	mov	x22, x1
  461e20:	cbz	x0, 461efc <_obstack_memory_used@@Base+0x10aec>
  461e24:	mov	x21, x0
  461e28:	bl	4619f8 <_obstack_memory_used@@Base+0x105e8>
  461e2c:	mov	x19, x0
  461e30:	cbz	x0, 461ed4 <_obstack_memory_used@@Base+0x10ac4>
  461e34:	mov	x0, x22
  461e38:	mov	x1, x20
  461e3c:	bl	4040f0 <localtime_r@plt>
  461e40:	cbz	x0, 461e74 <_obstack_memory_used@@Base+0x10a64>
  461e44:	mov	x0, x21
  461e48:	mov	x1, x20
  461e4c:	bl	461b58 <_obstack_memory_used@@Base+0x10748>
  461e50:	ands	w21, w0, #0xff
  461e54:	b.eq	461e74 <_obstack_memory_used@@Base+0x10a64>  // b.none
  461e58:	cmp	x19, #0x1
  461e5c:	b.ne	461f14 <_obstack_memory_used@@Base+0x10b04>  // b.any
  461e60:	mov	x0, x20
  461e64:	ldp	x19, x20, [sp, #16]
  461e68:	ldp	x21, x22, [sp, #32]
  461e6c:	ldp	x29, x30, [sp], #64
  461e70:	ret
  461e74:	cmp	x19, #0x1
  461e78:	b.eq	461ed4 <_obstack_memory_used@@Base+0x10ac4>  // b.none
  461e7c:	mov	w21, #0x0                   	// #0
  461e80:	str	x23, [sp, #48]
  461e84:	bl	404ad0 <__errno_location@plt>
  461e88:	mov	x22, x0
  461e8c:	ldrb	w1, [x19, #8]
  461e90:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  461e94:	ldr	w23, [x22]
  461e98:	cbz	w1, 461ee8 <_obstack_memory_used@@Base+0x10ad8>
  461e9c:	add	x0, x0, #0x4a0
  461ea0:	add	x1, x19, #0x9
  461ea4:	mov	w2, #0x1                   	// #1
  461ea8:	bl	404100 <setenv@plt>
  461eac:	cbz	w0, 461ef4 <_obstack_memory_used@@Base+0x10ae4>
  461eb0:	ldr	w23, [x22]
  461eb4:	mov	w21, #0x0                   	// #0
  461eb8:	mov	x0, x19
  461ebc:	ldr	x19, [x19]
  461ec0:	bl	4047b0 <free@plt>
  461ec4:	cbnz	x19, 461eb8 <_obstack_memory_used@@Base+0x10aa8>
  461ec8:	str	w23, [x22]
  461ecc:	ldr	x23, [sp, #48]
  461ed0:	cbnz	w21, 461e60 <_obstack_memory_used@@Base+0x10a50>
  461ed4:	mov	x0, #0x0                   	// #0
  461ed8:	ldp	x19, x20, [sp, #16]
  461edc:	ldp	x21, x22, [sp, #32]
  461ee0:	ldp	x29, x30, [sp], #64
  461ee4:	ret
  461ee8:	add	x0, x0, #0x4a0
  461eec:	bl	404930 <unsetenv@plt>
  461ef0:	cbnz	w0, 461eb0 <_obstack_memory_used@@Base+0x10aa0>
  461ef4:	bl	404360 <tzset@plt>
  461ef8:	b	461eb8 <_obstack_memory_used@@Base+0x10aa8>
  461efc:	mov	x0, x22
  461f00:	mov	x1, x2
  461f04:	ldp	x19, x20, [sp, #16]
  461f08:	ldp	x21, x22, [sp, #32]
  461f0c:	ldp	x29, x30, [sp], #64
  461f10:	b	404450 <gmtime_r@plt>
  461f14:	str	x23, [sp, #48]
  461f18:	b	461e84 <_obstack_memory_used@@Base+0x10a74>
  461f1c:	nop
  461f20:	stp	x29, x30, [sp, #-112]!
  461f24:	mov	x29, sp
  461f28:	stp	x19, x20, [sp, #16]
  461f2c:	mov	x20, x1
  461f30:	cbz	x0, 462088 <_obstack_memory_used@@Base+0x10c78>
  461f34:	stp	x21, x22, [sp, #32]
  461f38:	mov	x21, x0
  461f3c:	bl	4619f8 <_obstack_memory_used@@Base+0x105e8>
  461f40:	mov	x19, x0
  461f44:	cbz	x0, 46209c <_obstack_memory_used@@Base+0x10c8c>
  461f48:	mov	x0, x20
  461f4c:	bl	404600 <mktime@plt>
  461f50:	str	x0, [sp, #48]
  461f54:	cmn	x0, #0x1
  461f58:	b.eq	461ffc <_obstack_memory_used@@Base+0x10bec>  // b.none
  461f5c:	mov	x1, x20
  461f60:	mov	x0, x21
  461f64:	bl	461b58 <_obstack_memory_used@@Base+0x10748>
  461f68:	tst	w0, #0xff
  461f6c:	b.ne	461f78 <_obstack_memory_used@@Base+0x10b68>  // b.any
  461f70:	mov	x0, #0xffffffffffffffff    	// #-1
  461f74:	str	x0, [sp, #48]
  461f78:	cmp	x19, #0x1
  461f7c:	b.eq	461fc8 <_obstack_memory_used@@Base+0x10bb8>  // b.none
  461f80:	bl	404ad0 <__errno_location@plt>
  461f84:	mov	x20, x0
  461f88:	ldrb	w1, [x19, #8]
  461f8c:	adrp	x0, 471000 <_obstack_memory_used@@Base+0x1fbf0>
  461f90:	ldr	w21, [x20]
  461f94:	cbnz	w1, 461fdc <_obstack_memory_used@@Base+0x10bcc>
  461f98:	add	x0, x0, #0x4a0
  461f9c:	bl	404930 <unsetenv@plt>
  461fa0:	cbnz	w0, 461ff0 <_obstack_memory_used@@Base+0x10be0>
  461fa4:	mov	w22, #0x1                   	// #1
  461fa8:	bl	404360 <tzset@plt>
  461fac:	nop
  461fb0:	mov	x0, x19
  461fb4:	ldr	x19, [x19]
  461fb8:	bl	4047b0 <free@plt>
  461fbc:	cbnz	x19, 461fb0 <_obstack_memory_used@@Base+0x10ba0>
  461fc0:	str	w21, [x20]
  461fc4:	cbz	w22, 46209c <_obstack_memory_used@@Base+0x10c8c>
  461fc8:	ldp	x21, x22, [sp, #32]
  461fcc:	ldr	x0, [sp, #48]
  461fd0:	ldp	x19, x20, [sp, #16]
  461fd4:	ldp	x29, x30, [sp], #112
  461fd8:	ret
  461fdc:	add	x0, x0, #0x4a0
  461fe0:	add	x1, x19, #0x9
  461fe4:	mov	w2, #0x1                   	// #1
  461fe8:	bl	404100 <setenv@plt>
  461fec:	cbz	w0, 461fa4 <_obstack_memory_used@@Base+0x10b94>
  461ff0:	ldr	w21, [x20]
  461ff4:	mov	w22, #0x0                   	// #0
  461ff8:	b	461fb0 <_obstack_memory_used@@Base+0x10ba0>
  461ffc:	add	x1, sp, #0x38
  462000:	add	x0, sp, #0x30
  462004:	bl	4040f0 <localtime_r@plt>
  462008:	cbz	x0, 461f78 <_obstack_memory_used@@Base+0x10b68>
  46200c:	ldr	w1, [x20, #32]
  462010:	ldr	w0, [sp, #88]
  462014:	cmp	w1, #0x0
  462018:	cset	w3, eq  // eq = none
  46201c:	cmp	w0, #0x0
  462020:	cset	w2, eq  // eq = none
  462024:	cmp	w3, w2
  462028:	b.eq	462038 <_obstack_memory_used@@Base+0x10c28>  // b.none
  46202c:	cmp	w1, #0x0
  462030:	ccmp	w0, #0x0, #0x1, ge  // ge = tcont
  462034:	b.ge	461f78 <_obstack_memory_used@@Base+0x10b68>  // b.tcont
  462038:	ldp	w3, w6, [sp, #64]
  46203c:	ldp	w2, w4, [x20, #8]
  462040:	ldp	w5, w1, [sp, #72]
  462044:	eor	w2, w2, w3
  462048:	ldr	w0, [x20, #16]
  46204c:	eor	w4, w4, w6
  462050:	ldr	w3, [x20, #20]
  462054:	orr	w2, w2, w4
  462058:	eor	w0, w0, w5
  46205c:	eor	w3, w3, w1
  462060:	ldp	w6, w5, [sp, #56]
  462064:	orr	w0, w0, w3
  462068:	ldp	w1, w3, [x20]
  46206c:	orr	w0, w0, w2
  462070:	eor	w1, w1, w6
  462074:	eor	w2, w3, w5
  462078:	orr	w1, w1, w2
  46207c:	orr	w0, w0, w1
  462080:	cbz	w0, 461f5c <_obstack_memory_used@@Base+0x10b4c>
  462084:	b	461f78 <_obstack_memory_used@@Base+0x10b68>
  462088:	mov	x0, x1
  46208c:	bl	404b50 <timegm@plt>
  462090:	ldp	x19, x20, [sp, #16]
  462094:	ldp	x29, x30, [sp], #112
  462098:	ret
  46209c:	mov	x0, #0xffffffffffffffff    	// #-1
  4620a0:	ldp	x21, x22, [sp, #32]
  4620a4:	b	461fd0 <_obstack_memory_used@@Base+0x10bc0>
  4620a8:	mov	w1, w0
  4620ac:	cmp	w0, #0x26
  4620b0:	b.eq	4620dc <_obstack_memory_used@@Base+0x10ccc>  // b.none
  4620b4:	b.gt	4620d0 <_obstack_memory_used@@Base+0x10cc0>
  4620b8:	cmp	w0, #0x10
  4620bc:	mov	w0, #0x0                   	// #0
  4620c0:	b.eq	4620cc <_obstack_memory_used@@Base+0x10cbc>  // b.none
  4620c4:	cmp	w1, #0x16
  4620c8:	cset	w0, ne  // ne = any
  4620cc:	ret
  4620d0:	cmp	w0, #0x5f
  4620d4:	cset	w0, ne  // ne = any
  4620d8:	ret
  4620dc:	mov	w0, #0x0                   	// #0
  4620e0:	ret
  4620e4:	nop
  4620e8:	stp	x29, x30, [sp, #-64]!
  4620ec:	mov	x29, sp
  4620f0:	stp	x19, x20, [sp, #16]
  4620f4:	mov	x20, x3
  4620f8:	stp	x21, x22, [sp, #32]
  4620fc:	mov	x22, x1
  462100:	mov	x21, x2
  462104:	str	x23, [sp, #48]
  462108:	mov	x23, x0
  46210c:	mov	x0, #0x48                  	// #72
  462110:	bl	404310 <malloc@plt>
  462114:	mov	x19, x0
  462118:	cbz	x0, 462140 <_obstack_memory_used@@Base+0x10d30>
  46211c:	stp	x23, x22, [x19]
  462120:	mov	x0, #0xc8                  	// #200
  462124:	stp	x21, x20, [x19, #16]
  462128:	stp	xzr, xzr, [x19, #32]
  46212c:	bl	404310 <malloc@plt>
  462130:	str	x0, [x19, #48]
  462134:	cbz	x0, 462158 <_obstack_memory_used@@Base+0x10d48>
  462138:	add	x1, x0, #0xc8
  46213c:	stp	x0, x1, [x19, #56]
  462140:	mov	x0, x19
  462144:	ldp	x19, x20, [sp, #16]
  462148:	ldp	x21, x22, [sp, #32]
  46214c:	ldr	x23, [sp, #48]
  462150:	ldp	x29, x30, [sp], #64
  462154:	ret
  462158:	mov	x0, x19
  46215c:	mov	x19, #0x0                   	// #0
  462160:	bl	4047b0 <free@plt>
  462164:	b	462140 <_obstack_memory_used@@Base+0x10d30>
  462168:	stp	x29, x30, [sp, #-96]!
  46216c:	mov	x29, sp
  462170:	stp	x21, x22, [sp, #32]
  462174:	mov	x21, x0
  462178:	stp	x19, x20, [sp, #16]
  46217c:	ldr	x19, [x0, #32]
  462180:	ldr	x0, [x0, #48]
  462184:	ldr	x2, [x21, #56]
  462188:	add	x19, x0, x19
  46218c:	cmp	x19, x2
  462190:	b.cs	462420 <_obstack_memory_used@@Base+0x11010>  // b.hs, b.nlast
  462194:	ldr	x22, [x21, #40]
  462198:	stp	x27, x28, [sp, #80]
  46219c:	mov	x27, x2
  4621a0:	stp	x23, x24, [sp, #48]
  4621a4:	mov	w23, #0x20                  	// #32
  4621a8:	stp	x25, x26, [sp, #64]
  4621ac:	nop
  4621b0:	cbnz	x22, 462210 <_obstack_memory_used@@Base+0x10e00>
  4621b4:	ldr	x20, [x21, #8]
  4621b8:	cbz	x20, 462438 <_obstack_memory_used@@Base+0x11028>
  4621bc:	ldr	x1, [x21, #64]
  4621c0:	add	x0, x2, x20
  4621c4:	cmp	x1, x0
  4621c8:	b.ls	4625bc <_obstack_memory_used@@Base+0x111ac>  // b.plast
  4621cc:	add	x3, x19, x20
  4621d0:	sub	x2, x2, x19
  4621d4:	mov	x1, x19
  4621d8:	mov	x0, x3
  4621dc:	bl	403f80 <memmove@plt>
  4621e0:	mov	x3, x0
  4621e4:	ldr	x1, [x21, #56]
  4621e8:	mov	x0, x19
  4621ec:	mov	x2, x20
  4621f0:	mov	x19, x3
  4621f4:	add	x1, x1, x20
  4621f8:	str	x1, [x21, #56]
  4621fc:	mov	w1, #0x20                  	// #32
  462200:	bl	404410 <memset@plt>
  462204:	ldr	x27, [x21, #56]
  462208:	mov	x22, x20
  46220c:	str	x20, [x21, #40]
  462210:	sub	x25, x27, x19
  462214:	mov	x0, x19
  462218:	mov	x2, x25
  46221c:	mov	w1, #0xa                   	// #10
  462220:	bl	404960 <memchr@plt>
  462224:	mov	x26, x0
  462228:	tbz	x22, #63, 462234 <_obstack_memory_used@@Base+0x10e24>
  46222c:	mov	x22, #0x0                   	// #0
  462230:	str	xzr, [x21, #40]
  462234:	ldr	x28, [x21, #16]
  462238:	cbz	x26, 4622ac <_obstack_memory_used@@Base+0x10e9c>
  46223c:	sub	x0, x26, x19
  462240:	add	x0, x0, x22
  462244:	cmp	x0, x28
  462248:	b.lt	4623f8 <_obstack_memory_used@@Base+0x10fe8>  // b.tstop
  46224c:	ldr	x24, [x21, #24]
  462250:	sub	x20, x28, #0x1
  462254:	tbz	x24, #63, 4622c8 <_obstack_memory_used@@Base+0x10eb8>
  462258:	cmp	x27, x26
  46225c:	b.ls	462604 <_obstack_memory_used@@Base+0x111f4>  // b.plast
  462260:	sub	x0, x20, x22
  462264:	sub	x2, x27, x26
  462268:	add	x0, x19, x0
  46226c:	mov	x1, x26
  462270:	bl	403f80 <memmove@plt>
  462274:	mov	x22, #0x0                   	// #0
  462278:	ldr	x0, [x21, #40]
  46227c:	str	xzr, [x21, #40]
  462280:	ldr	x2, [x21, #56]
  462284:	sub	x20, x20, x0
  462288:	add	x20, x19, x20
  46228c:	add	x19, x19, x28
  462290:	sub	x20, x20, x26
  462294:	sub	x2, x2, x20
  462298:	str	x2, [x21, #56]
  46229c:	cmp	x19, x2
  4622a0:	b.cs	462410 <_obstack_memory_used@@Base+0x11000>  // b.hs, b.nlast
  4622a4:	mov	x27, x2
  4622a8:	b	4621b0 <_obstack_memory_used@@Base+0x10da0>
  4622ac:	add	x0, x22, x25
  4622b0:	cmp	x0, x28
  4622b4:	b.cc	462694 <_obstack_memory_used@@Base+0x11284>  // b.lo, b.ul, b.last
  4622b8:	ldr	x24, [x21, #24]
  4622bc:	sub	x20, x28, #0x1
  4622c0:	tbnz	x24, #63, 462608 <_obstack_memory_used@@Base+0x111f8>
  4622c4:	mov	x26, x27
  4622c8:	add	x3, x20, #0x1
  4622cc:	sub	x22, x3, x22
  4622d0:	adds	x22, x19, x22
  4622d4:	b.cs	462500 <_obstack_memory_used@@Base+0x110f0>  // b.hs, b.nlast
  4622d8:	bl	404740 <__ctype_b_loc@plt>
  4622dc:	mov	x20, x22
  4622e0:	ldr	x1, [x0]
  4622e4:	b	4622f4 <_obstack_memory_used@@Base+0x10ee4>
  4622e8:	cmp	x19, x3
  4622ec:	b.hi	462508 <_obstack_memory_used@@Base+0x110f8>  // b.pmore
  4622f0:	mov	x20, x3
  4622f4:	ldrb	w0, [x20]
  4622f8:	sub	x3, x20, #0x1
  4622fc:	ldrh	w0, [x1, x0, lsl #1]
  462300:	tbz	w0, #0, 4622e8 <_obstack_memory_used@@Base+0x10ed8>
  462304:	add	x3, x20, #0x1
  462308:	cmp	x19, x3
  46230c:	b.cs	462518 <_obstack_memory_used@@Base+0x11108>  // b.hs, b.nlast
  462310:	cmp	x19, x20
  462314:	b.ls	462328 <_obstack_memory_used@@Base+0x10f18>  // b.plast
  462318:	b	4625f8 <_obstack_memory_used@@Base+0x111e8>
  46231c:	ldrb	w0, [x20]
  462320:	ldrh	w0, [x1, x0, lsl #1]
  462324:	tbz	w0, #0, 462338 <_obstack_memory_used@@Base+0x10f28>
  462328:	mov	x22, x20
  46232c:	sub	x20, x20, #0x1
  462330:	cmp	x19, x20
  462334:	b.ls	46231c <_obstack_memory_used@@Base+0x10f0c>  // b.plast
  462338:	mov	x20, x3
  46233c:	nop
  462340:	add	x0, x25, #0x1
  462344:	add	x0, x19, x0
  462348:	cmp	x20, x0
  46234c:	b.eq	462454 <_obstack_memory_used@@Base+0x11044>  // b.none
  462350:	add	x1, x22, #0x1
  462354:	sub	x0, x20, x1
  462358:	cmp	x0, x24
  46235c:	b.ge	46246c <_obstack_memory_used@@Base+0x1105c>  // b.tcont
  462360:	cmp	x27, x20
  462364:	b.ls	462464 <_obstack_memory_used@@Base+0x11054>  // b.plast
  462368:	ldr	x1, [x21, #64]
  46236c:	add	x24, x24, #0x1
  462370:	sub	x1, x1, x27
  462374:	cmp	x1, x24
  462378:	b.gt	462640 <_obstack_memory_used@@Base+0x11230>
  46237c:	ldr	x0, [x21, #48]
  462380:	ldr	x3, [x21]
  462384:	cmp	x0, x22
  462388:	b.cs	46239c <_obstack_memory_used@@Base+0x10f8c>  // b.hs, b.nlast
  46238c:	sub	x2, x22, x0
  462390:	mov	x1, #0x1                   	// #1
  462394:	bl	403fd0 <fwrite_unlocked@plt>
  462398:	ldr	x3, [x21]
  46239c:	ldp	x0, x1, [x3, #40]
  4623a0:	cmp	x0, x1
  4623a4:	b.cs	462684 <_obstack_memory_used@@Base+0x11274>  // b.hs, b.nlast
  4623a8:	add	x1, x0, #0x1
  4623ac:	str	x1, [x3, #40]
  4623b0:	mov	w1, #0xa                   	// #10
  4623b4:	strb	w1, [x0]
  4623b8:	ldr	x28, [x21, #48]
  4623bc:	sub	x19, x19, x28
  4623c0:	sub	x0, x20, x28
  4623c4:	add	x25, x25, x19
  4623c8:	mov	x27, x0
  4623cc:	mov	x19, x28
  4623d0:	b	462480 <_obstack_memory_used@@Base+0x11070>
  4623d4:	bl	404740 <__ctype_b_loc@plt>
  4623d8:	ldrb	w3, [x22]
  4623dc:	ldr	x1, [x0]
  4623e0:	ldrh	w0, [x1, x3, lsl #1]
  4623e4:	tbnz	w0, #0, 46252c <_obstack_memory_used@@Base+0x1111c>
  4623e8:	add	x22, x22, #0x1
  4623ec:	cmp	x22, x26
  4623f0:	b.ne	4623d4 <_obstack_memory_used@@Base+0x10fc4>  // b.any
  4623f4:	nop
  4623f8:	ldr	x2, [x21, #56]
  4623fc:	str	xzr, [x21, #40]
  462400:	add	x19, x26, #0x1
  462404:	mov	x22, #0x0                   	// #0
  462408:	cmp	x19, x2
  46240c:	b.cc	4622a4 <_obstack_memory_used@@Base+0x10e94>  // b.lo, b.ul, b.last
  462410:	ldp	x23, x24, [sp, #48]
  462414:	ldp	x25, x26, [sp, #64]
  462418:	ldp	x27, x28, [sp, #80]
  46241c:	ldr	x0, [x21, #48]
  462420:	sub	x2, x2, x0
  462424:	ldp	x19, x20, [sp, #16]
  462428:	str	x2, [x21, #32]
  46242c:	ldp	x21, x22, [sp, #32]
  462430:	ldp	x29, x30, [sp], #96
  462434:	ret
  462438:	sub	x25, x2, x19
  46243c:	mov	x0, x19
  462440:	mov	x2, x25
  462444:	mov	w1, #0xa                   	// #10
  462448:	bl	404960 <memchr@plt>
  46244c:	mov	x26, x0
  462450:	b	462234 <_obstack_memory_used@@Base+0x10e24>
  462454:	ldr	x0, [x21, #64]
  462458:	sub	x0, x0, x22
  46245c:	cmp	x0, x24
  462460:	b.le	462360 <_obstack_memory_used@@Base+0x10f50>
  462464:	add	x1, x22, #0x1
  462468:	sub	x0, x20, x1
  46246c:	sub	x27, x20, x19
  462470:	mov	x28, x19
  462474:	mov	x19, x1
  462478:	mov	w1, #0xa                   	// #10
  46247c:	strb	w1, [x22]
  462480:	ldr	x22, [x21, #24]
  462484:	cmp	x22, x0
  462488:	b.le	4624ac <_obstack_memory_used@@Base+0x1109c>
  46248c:	add	x0, x25, #0x1
  462490:	add	x0, x28, x0
  462494:	cmp	x20, x0
  462498:	b.ne	462540 <_obstack_memory_used@@Base+0x11130>  // b.any
  46249c:	ldr	x0, [x21, #64]
  4624a0:	sub	x0, x0, x20
  4624a4:	cmp	x22, x0
  4624a8:	b.gt	462540 <_obstack_memory_used@@Base+0x11130>
  4624ac:	cmp	x22, #0x0
  4624b0:	b.le	4624dc <_obstack_memory_used@@Base+0x110cc>
  4624b4:	add	x0, x19, #0x1
  4624b8:	mvn	x2, x19
  4624bc:	nop
  4624c0:	sturb	w23, [x0, #-1]
  4624c4:	mov	x19, x0
  4624c8:	add	x0, x0, #0x1
  4624cc:	ldr	x22, [x21, #24]
  4624d0:	add	x1, x2, x0
  4624d4:	cmp	x22, x1
  4624d8:	b.gt	4624c0 <_obstack_memory_used@@Base+0x110b0>
  4624dc:	cmp	x19, x20
  4624e0:	b.cc	4625a0 <_obstack_memory_used@@Base+0x11190>  // b.lo, b.ul, b.last
  4624e4:	sub	x2, x25, x27
  4624e8:	cmp	x22, #0x0
  4624ec:	add	x2, x19, x2
  4624f0:	csinv	x22, x22, xzr, ne  // ne = any
  4624f4:	str	x22, [x21, #40]
  4624f8:	str	x2, [x21, #56]
  4624fc:	b	46229c <_obstack_memory_used@@Base+0x10e8c>
  462500:	add	x20, x22, #0x1
  462504:	nop
  462508:	cmp	x19, x20
  46250c:	b.cs	462518 <_obstack_memory_used@@Base+0x11108>  // b.hs, b.nlast
  462510:	mov	x22, x20
  462514:	b	462340 <_obstack_memory_used@@Base+0x10f30>
  462518:	cmp	x22, x26
  46251c:	b.cc	4623e8 <_obstack_memory_used@@Base+0x10fd8>  // b.lo, b.ul, b.last
  462520:	b.eq	4623f8 <_obstack_memory_used@@Base+0x10fe8>  // b.none
  462524:	bl	404740 <__ctype_b_loc@plt>
  462528:	ldr	x1, [x0]
  46252c:	mov	x20, x22
  462530:	ldrb	w0, [x20, #1]!
  462534:	ldrh	w0, [x1, x0, lsl #1]
  462538:	tbnz	w0, #0, 462530 <_obstack_memory_used@@Base+0x11120>
  46253c:	b	462340 <_obstack_memory_used@@Base+0x10f30>
  462540:	cmp	x22, #0x0
  462544:	mov	x26, #0x0                   	// #0
  462548:	b.gt	462568 <_obstack_memory_used@@Base+0x11158>
  46254c:	b	4624dc <_obstack_memory_used@@Base+0x110cc>
  462550:	str	x3, [x0, #40]
  462554:	add	x26, x26, #0x1
  462558:	strb	w23, [x1]
  46255c:	ldr	x22, [x21, #24]
  462560:	cmp	x22, x26
  462564:	b.le	4624dc <_obstack_memory_used@@Base+0x110cc>
  462568:	ldr	x0, [x21]
  46256c:	ldp	x1, x2, [x0, #40]
  462570:	add	x3, x1, #0x1
  462574:	cmp	x1, x2
  462578:	b.cc	462550 <_obstack_memory_used@@Base+0x11140>  // b.lo, b.ul, b.last
  46257c:	mov	w1, #0x20                  	// #32
  462580:	bl	404680 <__overflow@plt>
  462584:	ldr	x22, [x21, #24]
  462588:	add	x26, x26, #0x1
  46258c:	cmp	x26, x22
  462590:	b.lt	462568 <_obstack_memory_used@@Base+0x11158>  // b.tstop
  462594:	cmp	x19, x20
  462598:	b.cs	4624e4 <_obstack_memory_used@@Base+0x110d4>  // b.hs, b.nlast
  46259c:	nop
  4625a0:	add	x2, x28, x25
  4625a4:	mov	x1, x20
  4625a8:	sub	x2, x2, x20
  4625ac:	mov	x0, x19
  4625b0:	bl	403f80 <memmove@plt>
  4625b4:	ldr	x22, [x21, #24]
  4625b8:	b	4624e4 <_obstack_memory_used@@Base+0x110d4>
  4625bc:	mov	x22, #0x0                   	// #0
  4625c0:	b	4625d8 <_obstack_memory_used@@Base+0x111c8>
  4625c4:	str	x3, [x0, #40]
  4625c8:	strb	w23, [x1]
  4625cc:	add	x22, x22, #0x1
  4625d0:	cmp	x20, x22
  4625d4:	b.eq	462204 <_obstack_memory_used@@Base+0x10df4>  // b.none
  4625d8:	ldr	x0, [x21]
  4625dc:	ldp	x1, x2, [x0, #40]
  4625e0:	add	x3, x1, #0x1
  4625e4:	cmp	x1, x2
  4625e8:	b.cc	4625c4 <_obstack_memory_used@@Base+0x111b4>  // b.lo, b.ul, b.last
  4625ec:	mov	w1, #0x20                  	// #32
  4625f0:	bl	404680 <__overflow@plt>
  4625f4:	b	4625cc <_obstack_memory_used@@Base+0x111bc>
  4625f8:	mov	x22, x3
  4625fc:	mov	x20, x3
  462600:	b	462340 <_obstack_memory_used@@Base+0x10f30>
  462604:	add	x0, x25, x22
  462608:	sub	x2, x20, x0
  46260c:	add	x2, x27, x2
  462610:	ldp	x23, x24, [sp, #48]
  462614:	ldp	x25, x26, [sp, #64]
  462618:	ldp	x27, x28, [sp, #80]
  46261c:	str	x0, [x21, #40]
  462620:	ldr	x0, [x21, #48]
  462624:	str	x2, [x21, #56]
  462628:	ldp	x19, x20, [sp, #16]
  46262c:	sub	x2, x2, x0
  462630:	str	x2, [x21, #32]
  462634:	ldp	x21, x22, [sp, #32]
  462638:	ldp	x29, x30, [sp], #96
  46263c:	ret
  462640:	sub	x27, x27, x20
  462644:	mov	x1, x20
  462648:	mov	x2, x27
  46264c:	add	x0, x22, x24
  462650:	bl	403f80 <memmove@plt>
  462654:	mov	x28, x19
  462658:	ldr	x0, [x21, #24]
  46265c:	mov	x1, x22
  462660:	mov	w2, #0xa                   	// #10
  462664:	add	x20, x0, #0x1
  462668:	add	x20, x22, x20
  46266c:	strb	w2, [x1], #1
  462670:	add	x2, x20, x27
  462674:	sub	x27, x20, x19
  462678:	sub	x25, x2, x19
  46267c:	mov	x19, x1
  462680:	b	462480 <_obstack_memory_used@@Base+0x11070>
  462684:	mov	x0, x3
  462688:	mov	w1, #0xa                   	// #10
  46268c:	bl	404680 <__overflow@plt>
  462690:	b	4623b8 <_obstack_memory_used@@Base+0x10fa8>
  462694:	ldp	x23, x24, [sp, #48]
  462698:	ldr	x2, [x21, #56]
  46269c:	ldp	x25, x26, [sp, #64]
  4626a0:	ldp	x27, x28, [sp, #80]
  4626a4:	str	x0, [x21, #40]
  4626a8:	ldr	x0, [x21, #48]
  4626ac:	ldp	x19, x20, [sp, #16]
  4626b0:	sub	x2, x2, x0
  4626b4:	str	x2, [x21, #32]
  4626b8:	ldp	x21, x22, [sp, #32]
  4626bc:	ldp	x29, x30, [sp], #96
  4626c0:	ret
  4626c4:	nop
  4626c8:	stp	x29, x30, [sp, #-32]!
  4626cc:	mov	x29, sp
  4626d0:	str	x19, [sp, #16]
  4626d4:	mov	x19, x0
  4626d8:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  4626dc:	ldp	x0, x2, [x19, #48]
  4626e0:	cmp	x2, x0
  4626e4:	b.ls	4626fc <_obstack_memory_used@@Base+0x112ec>  // b.plast
  4626e8:	ldr	x3, [x19]
  4626ec:	sub	x2, x2, x0
  4626f0:	mov	x1, #0x1                   	// #1
  4626f4:	bl	403fd0 <fwrite_unlocked@plt>
  4626f8:	ldr	x0, [x19, #48]
  4626fc:	bl	4047b0 <free@plt>
  462700:	mov	x0, x19
  462704:	ldr	x19, [sp, #16]
  462708:	ldp	x29, x30, [sp], #32
  46270c:	b	4047b0 <free@plt>
  462710:	stp	x29, x30, [sp, #-32]!
  462714:	mov	x29, sp
  462718:	stp	x19, x20, [sp, #16]
  46271c:	mov	x20, x1
  462720:	ldp	x2, x1, [x0, #56]
  462724:	sub	x1, x1, x2
  462728:	cmp	x1, x20
  46272c:	b.cc	462740 <_obstack_memory_used@@Base+0x11330>  // b.lo, b.ul, b.last
  462730:	mov	w0, #0x1                   	// #1
  462734:	ldp	x19, x20, [sp, #16]
  462738:	ldp	x29, x30, [sp], #32
  46273c:	ret
  462740:	mov	x19, x0
  462744:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  462748:	mov	x1, #0x1                   	// #1
  46274c:	ldp	x0, x2, [x19, #48]
  462750:	ldr	x3, [x19]
  462754:	sub	x2, x2, x0
  462758:	bl	403fd0 <fwrite_unlocked@plt>
  46275c:	mov	x1, x0
  462760:	ldp	x0, x2, [x19, #48]
  462764:	sub	x3, x2, x0
  462768:	cmp	x1, x3
  46276c:	b.ne	4627b4 <_obstack_memory_used@@Base+0x113a4>  // b.any
  462770:	ldr	x1, [x19, #64]
  462774:	str	xzr, [x19, #32]
  462778:	str	x0, [x19, #56]
  46277c:	sub	x1, x1, x0
  462780:	cmp	x20, x1
  462784:	b.ls	462730 <_obstack_memory_used@@Base+0x11320>  // b.plast
  462788:	adds	x20, x20, x1
  46278c:	b.cs	4627e4 <_obstack_memory_used@@Base+0x113d4>  // b.hs, b.nlast
  462790:	mov	x1, x20
  462794:	bl	404530 <realloc@plt>
  462798:	cbz	x0, 4627e4 <_obstack_memory_used@@Base+0x113d4>
  46279c:	dup	v0.2d, x0
  4627a0:	add	x20, x0, x20
  4627a4:	mov	w0, #0x1                   	// #1
  4627a8:	str	x20, [x19, #64]
  4627ac:	str	q0, [x19, #48]
  4627b0:	b	462734 <_obstack_memory_used@@Base+0x11324>
  4627b4:	ldr	x3, [x19, #32]
  4627b8:	sub	x2, x2, x1
  4627bc:	str	x2, [x19, #56]
  4627c0:	sub	x2, x2, x0
  4627c4:	sub	x3, x3, x1
  4627c8:	str	x3, [x19, #32]
  4627cc:	add	x1, x0, x1
  4627d0:	bl	403f80 <memmove@plt>
  4627d4:	mov	w0, #0x0                   	// #0
  4627d8:	ldp	x19, x20, [sp, #16]
  4627dc:	ldp	x29, x30, [sp], #32
  4627e0:	ret
  4627e4:	bl	404ad0 <__errno_location@plt>
  4627e8:	mov	x1, x0
  4627ec:	mov	w2, #0xc                   	// #12
  4627f0:	mov	w0, #0x0                   	// #0
  4627f4:	str	w2, [x1]
  4627f8:	b	462734 <_obstack_memory_used@@Base+0x11324>
  4627fc:	nop
  462800:	stp	x29, x30, [sp, #-336]!
  462804:	mov	x29, sp
  462808:	stp	x23, x24, [sp, #48]
  46280c:	mov	x24, x0
  462810:	add	x23, sp, #0x120
  462814:	str	q0, [sp, #160]
  462818:	str	q1, [sp, #176]
  46281c:	str	q2, [sp, #192]
  462820:	str	q3, [sp, #208]
  462824:	str	q4, [sp, #224]
  462828:	str	q5, [sp, #240]
  46282c:	str	q6, [sp, #256]
  462830:	str	q7, [sp, #272]
  462834:	stp	x2, x3, [sp, #288]
  462838:	stp	x4, x5, [sp, #304]
  46283c:	stp	x6, x7, [sp, #320]
  462840:	stp	x19, x20, [sp, #16]
  462844:	mov	x20, x1
  462848:	mov	x19, #0x96                  	// #150
  46284c:	ldp	x3, x1, [x24, #56]
  462850:	stp	x21, x22, [sp, #32]
  462854:	mov	w22, #0xffffffd0            	// #-48
  462858:	mov	w21, #0xffffff80            	// #-128
  46285c:	sub	x0, x1, x3
  462860:	cmp	x19, x0
  462864:	b.hi	4628f8 <_obstack_memory_used@@Base+0x114e8>  // b.pmore
  462868:	add	x0, sp, #0x150
  46286c:	stp	x0, x0, [sp, #96]
  462870:	sub	x19, x1, x3
  462874:	str	x23, [sp, #112]
  462878:	mov	x1, x19
  46287c:	stp	w22, w21, [sp, #120]
  462880:	mov	w2, #0x1                   	// #1
  462884:	ldp	x8, x9, [sp, #96]
  462888:	mov	x0, x3
  46288c:	ldp	x6, x7, [sp, #112]
  462890:	add	x5, sp, #0x40
  462894:	mov	x4, x20
  462898:	mov	x3, #0xffffffffffffffff    	// #-1
  46289c:	stp	x8, x9, [sp, #64]
  4628a0:	stp	x6, x7, [sp, #80]
  4628a4:	stp	x8, x9, [sp, #128]
  4628a8:	stp	x6, x7, [sp, #144]
  4628ac:	bl	4042f0 <__vsnprintf_chk@plt>
  4628b0:	add	w1, w0, #0x1
  4628b4:	cmp	x19, w0, sxtw
  4628b8:	sxtw	x2, w0
  4628bc:	b.ls	4628e4 <_obstack_memory_used@@Base+0x114d4>  // b.plast
  4628c0:	ldr	x1, [x24, #56]
  4628c4:	mov	x0, x2
  4628c8:	ldp	x19, x20, [sp, #16]
  4628cc:	add	x2, x1, x2
  4628d0:	str	x2, [x24, #56]
  4628d4:	ldp	x21, x22, [sp, #32]
  4628d8:	ldp	x23, x24, [sp, #48]
  4628dc:	ldp	x29, x30, [sp], #336
  4628e0:	ret
  4628e4:	sxtw	x19, w1
  4628e8:	ldp	x3, x1, [x24, #56]
  4628ec:	sub	x0, x1, x3
  4628f0:	cmp	x19, x0
  4628f4:	b.ls	462868 <_obstack_memory_used@@Base+0x11458>  // b.plast
  4628f8:	mov	x0, x24
  4628fc:	bl	462168 <_obstack_memory_used@@Base+0x10d58>
  462900:	ldp	x0, x2, [x24, #48]
  462904:	mov	x1, #0x1                   	// #1
  462908:	ldr	x3, [x24]
  46290c:	sub	x2, x2, x0
  462910:	bl	403fd0 <fwrite_unlocked@plt>
  462914:	ldp	x3, x2, [x24, #48]
  462918:	sub	x1, x2, x3
  46291c:	cmp	x0, x1
  462920:	b.ne	46296c <_obstack_memory_used@@Base+0x1155c>  // b.any
  462924:	ldr	x1, [x24, #64]
  462928:	str	xzr, [x24, #32]
  46292c:	str	x3, [x24, #56]
  462930:	mov	x0, x3
  462934:	sub	x4, x1, x3
  462938:	cmp	x19, x4
  46293c:	b.ls	462868 <_obstack_memory_used@@Base+0x11458>  // b.plast
  462940:	adds	x19, x19, x4
  462944:	b.cs	4629a8 <_obstack_memory_used@@Base+0x11598>  // b.hs, b.nlast
  462948:	mov	x1, x19
  46294c:	bl	404530 <realloc@plt>
  462950:	cbz	x0, 4629a8 <_obstack_memory_used@@Base+0x11598>
  462954:	dup	v0.2d, x0
  462958:	add	x1, x0, x19
  46295c:	str	x1, [x24, #64]
  462960:	str	q0, [x24, #48]
  462964:	ldr	x3, [x24, #56]
  462968:	b	462868 <_obstack_memory_used@@Base+0x11458>
  46296c:	ldr	x1, [x24, #32]
  462970:	sub	x2, x2, x0
  462974:	str	x2, [x24, #56]
  462978:	sub	x2, x2, x3
  46297c:	sub	x1, x1, x0
  462980:	str	x1, [x24, #32]
  462984:	add	x1, x3, x0
  462988:	mov	x0, x3
  46298c:	bl	403f80 <memmove@plt>
  462990:	mov	x0, #0xffffffffffffffff    	// #-1
  462994:	ldp	x19, x20, [sp, #16]
  462998:	ldp	x21, x22, [sp, #32]
  46299c:	ldp	x23, x24, [sp, #48]
  4629a0:	ldp	x29, x30, [sp], #336
  4629a4:	ret
  4629a8:	bl	404ad0 <__errno_location@plt>
  4629ac:	mov	w1, #0xc                   	// #12
  4629b0:	str	w1, [x0]
  4629b4:	mov	x0, #0xffffffffffffffff    	// #-1
  4629b8:	b	462994 <_obstack_memory_used@@Base+0x11584>
  4629bc:	nop
  4629c0:	stp	x29, x30, [sp, #-32]!
  4629c4:	mov	x29, sp
  4629c8:	stp	x19, x20, [sp, #16]
  4629cc:	mov	x19, x0
  4629d0:	bl	4041e0 <__fpending@plt>
  4629d4:	mov	x20, x0
  4629d8:	mov	x0, x19
  4629dc:	ldr	w19, [x19]
  4629e0:	and	w19, w19, #0x20
  4629e4:	bl	4042a0 <fclose@plt>
  4629e8:	cbnz	w19, 462a10 <_obstack_memory_used@@Base+0x11600>
  4629ec:	cbz	w0, 462a04 <_obstack_memory_used@@Base+0x115f4>
  4629f0:	cbnz	x20, 462a28 <_obstack_memory_used@@Base+0x11618>
  4629f4:	bl	404ad0 <__errno_location@plt>
  4629f8:	ldr	w0, [x0]
  4629fc:	cmp	w0, #0x9
  462a00:	csetm	w0, ne  // ne = any
  462a04:	ldp	x19, x20, [sp, #16]
  462a08:	ldp	x29, x30, [sp], #32
  462a0c:	ret
  462a10:	cbnz	w0, 462a28 <_obstack_memory_used@@Base+0x11618>
  462a14:	bl	404ad0 <__errno_location@plt>
  462a18:	mov	x1, x0
  462a1c:	mov	w0, #0xffffffff            	// #-1
  462a20:	str	wzr, [x1]
  462a24:	b	462a04 <_obstack_memory_used@@Base+0x115f4>
  462a28:	mov	w0, #0xffffffff            	// #-1
  462a2c:	b	462a04 <_obstack_memory_used@@Base+0x115f4>
  462a30:	stp	x29, x30, [sp, #-64]!
  462a34:	mov	x29, sp
  462a38:	stp	x19, x20, [sp, #16]
  462a3c:	bl	404140 <opendir@plt>
  462a40:	mov	x19, x0
  462a44:	cbz	x0, 462a54 <_obstack_memory_used@@Base+0x11644>
  462a48:	bl	404920 <dirfd@plt>
  462a4c:	cmp	w0, #0x2
  462a50:	b.ls	462a64 <_obstack_memory_used@@Base+0x11654>  // b.plast
  462a54:	mov	x0, x19
  462a58:	ldp	x19, x20, [sp, #16]
  462a5c:	ldp	x29, x30, [sp], #64
  462a60:	ret
  462a64:	mov	w2, #0x3                   	// #3
  462a68:	mov	w1, #0x406                 	// #1030
  462a6c:	stp	x21, x22, [sp, #32]
  462a70:	str	x23, [sp, #48]
  462a74:	bl	450c98 <argp_parse@@Base+0x10eb8>
  462a78:	mov	w21, w0
  462a7c:	bl	404ad0 <__errno_location@plt>
  462a80:	mov	x20, x0
  462a84:	tbz	w21, #31, 462ab8 <_obstack_memory_used@@Base+0x116a8>
  462a88:	ldr	w23, [x0]
  462a8c:	mov	x22, #0x0                   	// #0
  462a90:	mov	x0, x19
  462a94:	mov	x19, x22
  462a98:	bl	404590 <closedir@plt>
  462a9c:	ldp	x21, x22, [sp, #32]
  462aa0:	str	w23, [x20]
  462aa4:	mov	x0, x19
  462aa8:	ldp	x19, x20, [sp, #16]
  462aac:	ldr	x23, [sp, #48]
  462ab0:	ldp	x29, x30, [sp], #64
  462ab4:	ret
  462ab8:	mov	w0, w21
  462abc:	bl	404610 <fdopendir@plt>
  462ac0:	ldr	w23, [x20]
  462ac4:	mov	x22, x0
  462ac8:	cbnz	x0, 462a90 <_obstack_memory_used@@Base+0x11680>
  462acc:	mov	w0, w21
  462ad0:	bl	4045c0 <close@plt>
  462ad4:	b	462a90 <_obstack_memory_used@@Base+0x11680>
  462ad8:	stp	x29, x30, [sp, #-64]!
  462adc:	mov	x29, sp
  462ae0:	str	x2, [sp, #56]
  462ae4:	mov	w2, #0x0                   	// #0
  462ae8:	tbnz	w1, #6, 462afc <_obstack_memory_used@@Base+0x116ec>
  462aec:	bl	404340 <open@plt>
  462af0:	bl	4643e8 <_obstack_memory_used@@Base+0x12fd8>
  462af4:	ldp	x29, x30, [sp], #64
  462af8:	ret
  462afc:	mov	w2, #0xfffffff8            	// #-8
  462b00:	stp	w2, wzr, [sp, #40]
  462b04:	ldr	w2, [sp, #56]
  462b08:	add	x3, sp, #0x30
  462b0c:	add	x4, sp, #0x40
  462b10:	stp	x4, x4, [sp, #16]
  462b14:	str	x3, [sp, #32]
  462b18:	bl	404340 <open@plt>
  462b1c:	bl	4643e8 <_obstack_memory_used@@Base+0x12fd8>
  462b20:	ldp	x29, x30, [sp], #64
  462b24:	ret
  462b28:	stp	x29, x30, [sp, #-16]!
  462b2c:	mov	x1, #0x0                   	// #0
  462b30:	mov	x29, sp
  462b34:	bl	404be0 <setlocale@plt>
  462b38:	mov	w1, #0x1                   	// #1
  462b3c:	cbz	x0, 462b60 <_obstack_memory_used@@Base+0x11750>
  462b40:	ldrb	w1, [x0]
  462b44:	cmp	w1, #0x43
  462b48:	b.eq	462b6c <_obstack_memory_used@@Base+0x1175c>  // b.none
  462b4c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  462b50:	add	x1, x1, #0x5d0
  462b54:	bl	404710 <strcmp@plt>
  462b58:	cmp	w0, #0x0
  462b5c:	cset	w1, ne  // ne = any
  462b60:	mov	w0, w1
  462b64:	ldp	x29, x30, [sp], #16
  462b68:	ret
  462b6c:	ldrb	w2, [x0, #1]
  462b70:	mov	w1, #0x0                   	// #0
  462b74:	cbnz	w2, 462b4c <_obstack_memory_used@@Base+0x1173c>
  462b78:	mov	w0, w1
  462b7c:	ldp	x29, x30, [sp], #16
  462b80:	ret
  462b84:	nop
  462b88:	sub	sp, sp, #0x4e0
  462b8c:	adrp	x8, 473000 <_obstack_memory_used@@Base+0x21bf0>
  462b90:	add	x8, x8, #0x7e8
  462b94:	stp	x29, x30, [sp]
  462b98:	mov	x29, sp
  462b9c:	stp	x23, x24, [sp, #48]
  462ba0:	and	w23, w4, #0xff
  462ba4:	ldr	x24, [x3, #48]
  462ba8:	stp	x19, x20, [sp, #16]
  462bac:	mov	x19, x2
  462bb0:	stp	x21, x22, [sp, #32]
  462bb4:	cmp	x24, #0x0
  462bb8:	csel	x24, x8, x24, eq  // eq = none
  462bbc:	stp	x25, x26, [sp, #64]
  462bc0:	mov	x21, x0
  462bc4:	ldr	w25, [x3, #8]
  462bc8:	stp	x27, x28, [sp, #80]
  462bcc:	mov	x22, x6
  462bd0:	mov	x28, x1
  462bd4:	str	w7, [sp, #108]
  462bd8:	cmp	w25, #0xc
  462bdc:	str	x5, [sp, #112]
  462be0:	b.le	462c70 <_obstack_memory_used@@Base+0x11860>
  462be4:	sub	w25, w25, #0xc
  462be8:	ldrb	w0, [x19]
  462bec:	mov	x20, #0x0                   	// #0
  462bf0:	cbz	w0, 462c34 <_obstack_memory_used@@Base+0x11824>
  462bf4:	mov	w26, #0xcccd                	// #52429
  462bf8:	add	x1, sp, #0xca
  462bfc:	movk	w26, #0xcccc, lsl #16
  462c00:	str	x1, [sp, #96]
  462c04:	cmp	w0, #0x25
  462c08:	b.eq	462c80 <_obstack_memory_used@@Base+0x11870>  // b.none
  462c0c:	sub	x1, x28, x20
  462c10:	cmp	x1, #0x1
  462c14:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  462c18:	cbz	x21, 462c20 <_obstack_memory_used@@Base+0x11810>
  462c1c:	strb	w0, [x21], #1
  462c20:	add	x20, x20, #0x1
  462c24:	mov	x5, x19
  462c28:	ldrb	w0, [x5, #1]
  462c2c:	add	x19, x5, #0x1
  462c30:	cbnz	w0, 462c04 <_obstack_memory_used@@Base+0x117f4>
  462c34:	cmp	x21, #0x0
  462c38:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  462c3c:	b.eq	462c4c <_obstack_memory_used@@Base+0x1183c>  // b.none
  462c40:	strb	wzr, [x21]
  462c44:	b	462c4c <_obstack_memory_used@@Base+0x1183c>
  462c48:	mov	x20, #0x0                   	// #0
  462c4c:	mov	x0, x20
  462c50:	ldp	x29, x30, [sp]
  462c54:	ldp	x19, x20, [sp, #16]
  462c58:	ldp	x21, x22, [sp, #32]
  462c5c:	ldp	x23, x24, [sp, #48]
  462c60:	ldp	x25, x26, [sp, #64]
  462c64:	ldp	x27, x28, [sp, #80]
  462c68:	add	sp, sp, #0x4e0
  462c6c:	ret
  462c70:	cmp	w25, #0x0
  462c74:	mov	w0, #0xc                   	// #12
  462c78:	csel	w25, w25, w0, ne  // ne = any
  462c7c:	b	462be8 <_obstack_memory_used@@Base+0x117d8>
  462c80:	mov	w12, w23
  462c84:	mov	w5, #0x0                   	// #0
  462c88:	mov	w11, #0x0                   	// #0
  462c8c:	nop
  462c90:	ldrb	w4, [x19, #1]!
  462c94:	cmp	w4, #0x30
  462c98:	mov	w27, w4
  462c9c:	b.eq	462cc0 <_obstack_memory_used@@Base+0x118b0>  // b.none
  462ca0:	b.hi	462db8 <_obstack_memory_used@@Base+0x119a8>  // b.pmore
  462ca4:	cmp	w4, #0x23
  462ca8:	b.ne	462cc8 <_obstack_memory_used@@Base+0x118b8>  // b.any
  462cac:	ldrb	w4, [x19, #1]!
  462cb0:	mov	w5, #0x1                   	// #1
  462cb4:	cmp	w4, #0x30
  462cb8:	mov	w27, w4
  462cbc:	b.ne	462ca0 <_obstack_memory_used@@Base+0x11890>  // b.any
  462cc0:	mov	w11, w4
  462cc4:	b	462c90 <_obstack_memory_used@@Base+0x11880>
  462cc8:	cmp	w4, #0x2d
  462ccc:	b.eq	462cc0 <_obstack_memory_used@@Base+0x118b0>  // b.none
  462cd0:	mov	w8, #0xffffffff            	// #-1
  462cd4:	cmp	w4, #0x4f
  462cd8:	b.eq	462e2c <_obstack_memory_used@@Base+0x11a1c>  // b.none
  462cdc:	cmp	w4, #0x7a
  462ce0:	mov	w27, #0x0                   	// #0
  462ce4:	b.ls	462e3c <_obstack_memory_used@@Base+0x11a2c>  // b.plast
  462ce8:	sub	x0, x19, #0x1
  462cec:	add	w2, w19, #0x1
  462cf0:	mov	x4, x0
  462cf4:	sub	w27, w2, w0
  462cf8:	ldrb	w1, [x0], #-1
  462cfc:	cmp	w1, #0x25
  462d00:	b.ne	462cf0 <_obstack_memory_used@@Base+0x118e0>  // b.any
  462d04:	cmp	w8, #0x0
  462d08:	sxtw	x27, w27
  462d0c:	csel	w0, w8, wzr, ge  // ge = tcont
  462d10:	mov	x5, x19
  462d14:	sub	x1, x28, x20
  462d18:	sxtw	x0, w0
  462d1c:	cmp	x27, x0
  462d20:	csel	x7, x27, x0, cs  // cs = hs, nlast
  462d24:	cmp	x1, x7
  462d28:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  462d2c:	cbz	x21, 462db0 <_obstack_memory_used@@Base+0x119a0>
  462d30:	cmp	x27, x0
  462d34:	b.cs	462d74 <_obstack_memory_used@@Base+0x11964>  // b.hs, b.nlast
  462d38:	sxtw	x2, w8
  462d3c:	str	w12, [sp, #120]
  462d40:	stp	x5, x4, [sp, #128]
  462d44:	sub	x2, x2, x27
  462d48:	cmp	w11, #0x30
  462d4c:	stp	x7, x3, [sp, #144]
  462d50:	add	x6, x21, x2
  462d54:	b.eq	464010 <_obstack_memory_used@@Base+0x12c00>  // b.none
  462d58:	mov	x0, x21
  462d5c:	mov	w1, #0x20                  	// #32
  462d60:	mov	x21, x6
  462d64:	bl	404410 <memset@plt>
  462d68:	ldp	x5, x4, [sp, #128]
  462d6c:	ldp	x7, x3, [sp, #144]
  462d70:	ldr	w12, [sp, #120]
  462d74:	cbz	w12, 463d58 <_obstack_memory_used@@Base+0x12948>
  462d78:	stp	x5, x4, [sp, #120]
  462d7c:	stp	x7, x3, [sp, #136]
  462d80:	bl	404540 <__ctype_toupper_loc@plt>
  462d84:	sub	x1, x27, #0x1
  462d88:	ldp	x5, x4, [sp, #120]
  462d8c:	ldp	x7, x3, [sp, #136]
  462d90:	ldrb	w6, [x4, x1]
  462d94:	ldr	x2, [x0]
  462d98:	ldr	w2, [x2, x6, lsl #2]
  462d9c:	strb	w2, [x21, x1]
  462da0:	sub	x1, x1, #0x1
  462da4:	cmn	x1, #0x1
  462da8:	b.ne	462d90 <_obstack_memory_used@@Base+0x11980>  // b.any
  462dac:	add	x21, x21, x27
  462db0:	add	x20, x20, x7
  462db4:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  462db8:	cmp	w4, #0x5e
  462dbc:	b.ne	462dc8 <_obstack_memory_used@@Base+0x119b8>  // b.any
  462dc0:	mov	w12, #0x1                   	// #1
  462dc4:	b	462c90 <_obstack_memory_used@@Base+0x11880>
  462dc8:	cmp	w4, #0x5f
  462dcc:	b.eq	462cc0 <_obstack_memory_used@@Base+0x118b0>  // b.none
  462dd0:	sub	w0, w4, #0x30
  462dd4:	cmp	w0, #0x9
  462dd8:	b.hi	46435c <_obstack_memory_used@@Base+0x12f4c>  // b.pmore
  462ddc:	mov	w7, #0xcccc                	// #52428
  462de0:	mov	w8, #0x0                   	// #0
  462de4:	movk	w7, #0xccc, lsl #16
  462de8:	mov	x0, x19
  462dec:	cmp	w8, w7
  462df0:	ldrb	w2, [x0, #1]!
  462df4:	sub	w1, w2, #0x30
  462df8:	b.gt	462e5c <_obstack_memory_used@@Base+0x11a4c>
  462dfc:	b.eq	462e54 <_obstack_memory_used@@Base+0x11a44>  // b.none
  462e00:	add	w8, w8, w8, lsl #2
  462e04:	sub	w6, w4, #0x30
  462e08:	mov	x19, x0
  462e0c:	mov	w4, w2
  462e10:	add	w8, w6, w8, lsl #1
  462e14:	cmp	w1, #0x9
  462e18:	b.ls	462de8 <_obstack_memory_used@@Base+0x119d8>  // b.plast
  462e1c:	mov	w27, w4
  462e20:	mov	w2, w4
  462e24:	cmp	w2, #0x45
  462e28:	b.ne	462e84 <_obstack_memory_used@@Base+0x11a74>  // b.any
  462e2c:	ldrb	w4, [x19, #1]
  462e30:	add	x19, x19, #0x1
  462e34:	cmp	w4, #0x7a
  462e38:	b.hi	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.pmore
  462e3c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  462e40:	add	x0, x0, #0x5d8
  462e44:	ldrh	w0, [x0, w4, uxtw #1]
  462e48:	adr	x1, 462e54 <_obstack_memory_used@@Base+0x11a44>
  462e4c:	add	x0, x1, w0, sxth #2
  462e50:	br	x0
  462e54:	cmp	w4, #0x37
  462e58:	b.ls	462e00 <_obstack_memory_used@@Base+0x119f0>  // b.plast
  462e5c:	cmp	w1, #0x9
  462e60:	b.hi	462e74 <_obstack_memory_used@@Base+0x11a64>  // b.pmore
  462e64:	ldrb	w4, [x19, #2]!
  462e68:	mov	w8, #0x7fffffff            	// #2147483647
  462e6c:	sub	w1, w4, #0x30
  462e70:	b	462e14 <_obstack_memory_used@@Base+0x11a04>
  462e74:	mov	x19, x0
  462e78:	mov	w27, w2
  462e7c:	mov	w8, #0x7fffffff            	// #2147483647
  462e80:	b	462e24 <_obstack_memory_used@@Base+0x11a14>
  462e84:	mov	w4, w2
  462e88:	b	462cd4 <_obstack_memory_used@@Base+0x118c4>
  462e8c:	cmp	w27, #0x4f
  462e90:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  462e94:	str	wzr, [sp, #144]
  462e98:	mov	w0, #0x2520                	// #9504
  462e9c:	strh	w0, [sp, #200]
  462ea0:	cbnz	w27, 464354 <_obstack_memory_used@@Base+0x12f44>
  462ea4:	ldr	x1, [sp, #96]
  462ea8:	mov	x5, x19
  462eac:	strb	w4, [x1]
  462eb0:	add	x0, sp, #0xe0
  462eb4:	strb	wzr, [x1, #1]
  462eb8:	add	x2, sp, #0xc8
  462ebc:	mov	x1, #0x400                 	// #1024
  462ec0:	stp	x3, x5, [sp, #120]
  462ec4:	str	w8, [sp, #136]
  462ec8:	str	w12, [sp, #152]
  462ecc:	str	w11, [sp, #160]
  462ed0:	bl	404150 <strftime@plt>
  462ed4:	mov	x19, x0
  462ed8:	ldp	x3, x5, [sp, #120]
  462edc:	cbz	x0, 462c28 <_obstack_memory_used@@Base+0x11818>
  462ee0:	ldr	w8, [sp, #136]
  462ee4:	sub	x4, x0, #0x1
  462ee8:	sub	x1, x28, x20
  462eec:	cmp	w8, #0x0
  462ef0:	csel	w0, w8, wzr, ge  // ge = tcont
  462ef4:	sxtw	x0, w0
  462ef8:	cmp	x4, x0
  462efc:	csel	x7, x4, x0, cs  // cs = hs, nlast
  462f00:	cmp	x1, x7
  462f04:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  462f08:	cbz	x21, 462db0 <_obstack_memory_used@@Base+0x119a0>
  462f0c:	cmp	w27, #0x0
  462f10:	ldr	w12, [sp, #152]
  462f14:	ccmp	x4, x0, #0x2, eq  // eq = none
  462f18:	b.cs	462f60 <_obstack_memory_used@@Base+0x11b50>  // b.hs, b.nlast
  462f1c:	ldr	w11, [sp, #160]
  462f20:	sxtw	x2, w8
  462f24:	str	x4, [sp, #136]
  462f28:	sub	x2, x2, x4
  462f2c:	stp	x7, x3, [sp, #152]
  462f30:	add	x6, x21, x2
  462f34:	cmp	w11, #0x30
  462f38:	b.eq	463df4 <_obstack_memory_used@@Base+0x129e4>  // b.none
  462f3c:	mov	x0, x21
  462f40:	mov	w1, #0x20                  	// #32
  462f44:	mov	x21, x6
  462f48:	str	w12, [sp, #120]
  462f4c:	str	x5, [sp, #128]
  462f50:	bl	404410 <memset@plt>
  462f54:	ldp	x5, x4, [sp, #128]
  462f58:	ldp	x7, x3, [sp, #152]
  462f5c:	ldr	w12, [sp, #120]
  462f60:	ldr	w0, [sp, #144]
  462f64:	cbnz	w0, 463da8 <_obstack_memory_used@@Base+0x12998>
  462f68:	cbz	w12, 463d80 <_obstack_memory_used@@Base+0x12970>
  462f6c:	sub	x19, x19, #0x2
  462f70:	cbz	x4, 462fac <_obstack_memory_used@@Base+0x11b9c>
  462f74:	stp	x5, x4, [sp, #120]
  462f78:	stp	x7, x3, [sp, #136]
  462f7c:	bl	404540 <__ctype_toupper_loc@plt>
  462f80:	ldp	x5, x4, [sp, #120]
  462f84:	ldp	x7, x3, [sp, #136]
  462f88:	add	x1, sp, #0xe0
  462f8c:	add	x2, x1, x19
  462f90:	ldr	x1, [x0]
  462f94:	ldrb	w2, [x2, #1]
  462f98:	ldr	w1, [x1, x2, lsl #2]
  462f9c:	strb	w1, [x21, x19]
  462fa0:	sub	x19, x19, #0x1
  462fa4:	cmn	x19, #0x1
  462fa8:	b.ne	462f88 <_obstack_memory_used@@Base+0x11b78>  // b.any
  462fac:	add	x21, x21, x4
  462fb0:	add	x20, x20, x7
  462fb4:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  462fb8:	cmp	w27, #0x45
  462fbc:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  462fc0:	ldp	w2, w1, [x3, #20]
  462fc4:	mov	w0, #0x2493                	// #9363
  462fc8:	ldr	w7, [x3, #28]
  462fcc:	movk	w0, #0x9249, lsl #16
  462fd0:	cmp	w2, #0x0
  462fd4:	mov	w16, #0xffffff9c            	// #-100
  462fd8:	sub	w15, w7, w1
  462fdc:	mov	w5, #0x12c                 	// #300
  462fe0:	add	w15, w15, #0x17e
  462fe4:	csel	w5, w5, w16, lt  // lt = tstop
  462fe8:	add	w5, w2, w5
  462fec:	smull	x0, w15, w0
  462ff0:	lsr	x0, x0, #32
  462ff4:	add	w0, w15, w0
  462ff8:	asr	w0, w0, #2
  462ffc:	sub	w0, w0, w15, asr #31
  463000:	lsl	w16, w0, #3
  463004:	sub	w0, w16, w0
  463008:	sub	w0, w15, w0
  46300c:	sub	w0, w7, w0
  463010:	adds	w0, w0, #0x3
  463014:	b.mi	46406c <_obstack_memory_used@@Base+0x12c5c>  // b.first
  463018:	tst	x5, #0x3
  46301c:	mov	w15, #0x16d                 	// #365
  463020:	b.ne	463068 <_obstack_memory_used@@Base+0x11c58>  // b.any
  463024:	mov	w17, #0x5c29                	// #23593
  463028:	mov	w15, #0xb850                	// #47184
  46302c:	movk	w17, #0xc28f, lsl #16
  463030:	movk	w15, #0x51e, lsl #16
  463034:	mov	w16, #0x5c28                	// #23592
  463038:	madd	w5, w5, w17, w15
  46303c:	movk	w16, #0x28f, lsl #16
  463040:	mov	w15, #0x16e                 	// #366
  463044:	ror	w17, w5, #2
  463048:	cmp	w17, w16
  46304c:	b.hi	463068 <_obstack_memory_used@@Base+0x11c58>  // b.pmore
  463050:	mov	w15, #0xd70a                	// #55050
  463054:	ror	w5, w5, #4
  463058:	movk	w15, #0xa3, lsl #16
  46305c:	cmp	w5, w15
  463060:	cset	w15, ls  // ls = plast
  463064:	add	w15, w15, #0x16d
  463068:	sub	w7, w7, w15
  46306c:	mov	w5, #0x2493                	// #9363
  463070:	sub	w1, w7, w1
  463074:	movk	w5, #0x9249, lsl #16
  463078:	add	w1, w1, #0x17e
  46307c:	smull	x5, w1, w5
  463080:	lsr	x5, x5, #32
  463084:	add	w5, w1, w5
  463088:	asr	w5, w5, #2
  46308c:	sub	w5, w5, w1, asr #31
  463090:	lsl	w15, w5, #3
  463094:	sub	w5, w15, w5
  463098:	sub	w1, w1, w5
  46309c:	sub	w1, w7, w1
  4630a0:	adds	w1, w1, #0x3
  4630a4:	b.mi	4641d8 <_obstack_memory_used@@Base+0x12dc8>  // b.first
  4630a8:	mov	w0, w1
  4630ac:	mov	w7, #0x1                   	// #1
  4630b0:	mov	w1, w7
  4630b4:	mov	w5, #0xfffff893            	// #-1901
  4630b8:	cmp	w4, #0x47
  4630bc:	b.eq	464178 <_obstack_memory_used@@Base+0x12d68>  // b.none
  4630c0:	cmp	w4, #0x67
  4630c4:	b.ne	464150 <_obstack_memory_used@@Base+0x12d40>  // b.any
  4630c8:	mov	w15, #0x851f                	// #34079
  4630cc:	mov	w16, #0x64                  	// #100
  4630d0:	movk	w15, #0x51eb, lsl #16
  4630d4:	mov	w7, #0x2                   	// #2
  4630d8:	smull	x0, w2, w15
  4630dc:	asr	x0, x0, #37
  4630e0:	sub	w0, w0, w2, asr #31
  4630e4:	msub	w0, w0, w16, w2
  4630e8:	add	w1, w0, w1
  4630ec:	smull	x15, w1, w15
  4630f0:	asr	x15, x15, #37
  4630f4:	sub	w15, w15, w1, asr #31
  4630f8:	msub	w15, w15, w16, w1
  4630fc:	tbz	w15, #31, 463110 <_obstack_memory_used@@Base+0x11d00>
  463100:	neg	w0, w15
  463104:	cmp	w2, w5
  463108:	add	w15, w15, w16
  46310c:	csel	w15, w15, w0, ge  // ge = tcont
  463110:	mov	w1, w15
  463114:	lsr	w15, w15, #31
  463118:	mvn	w16, w1
  46311c:	mov	w2, #0x0                   	// #0
  463120:	mov	w5, #0x0                   	// #0
  463124:	lsr	w16, w16, #31
  463128:	cmp	w27, #0x4f
  46312c:	ccmp	w16, #0x0, #0x4, eq  // eq = none
  463130:	b.eq	463a78 <_obstack_memory_used@@Base+0x12668>  // b.none
  463134:	mov	w0, #0x2520                	// #9504
  463138:	str	wzr, [sp, #144]
  46313c:	strh	w0, [sp, #200]
  463140:	mov	x5, x19
  463144:	add	x1, sp, #0xcb
  463148:	strb	w27, [sp, #202]
  46314c:	mov	w27, w7
  463150:	b	462eac <_obstack_memory_used@@Base+0x11a9c>
  463154:	cbnz	w27, 462ce8 <_obstack_memory_used@@Base+0x118d8>
  463158:	cmp	w5, #0x0
  46315c:	mov	w0, #0x2520                	// #9504
  463160:	csel	w12, w12, w5, eq  // eq = none
  463164:	mov	w27, #0x0                   	// #0
  463168:	mov	x5, x19
  46316c:	str	wzr, [sp, #144]
  463170:	strh	w0, [sp, #200]
  463174:	ldr	x1, [sp, #96]
  463178:	b	462eac <_obstack_memory_used@@Base+0x11a9c>
  46317c:	cmp	w5, #0x0
  463180:	csel	w12, w12, w5, eq  // eq = none
  463184:	cmp	w27, #0x45
  463188:	b.ne	462e94 <_obstack_memory_used@@Base+0x11a84>  // b.any
  46318c:	b	462ce8 <_obstack_memory_used@@Base+0x118d8>
  463190:	cmp	w8, #0x0
  463194:	ldurb	w1, [x19, #-1]
  463198:	csel	w0, w8, wzr, ge  // ge = tcont
  46319c:	sub	x4, x19, #0x1
  4631a0:	cmp	w1, #0x25
  4631a4:	sub	x1, x28, x20
  4631a8:	sxtw	x0, w0
  4631ac:	b.ne	464368 <_obstack_memory_used@@Base+0x12f58>  // b.any
  4631b0:	cmp	x0, #0x0
  4631b4:	mov	x27, #0x1                   	// #1
  4631b8:	mov	x5, x4
  4631bc:	csel	x7, x0, x27, ne  // ne = any
  4631c0:	b	462d24 <_obstack_memory_used@@Base+0x11914>
  4631c4:	ldr	w0, [x3, #16]
  4631c8:	cmp	w27, #0x4f
  4631cc:	mov	w7, #0x1                   	// #1
  4631d0:	b.eq	463134 <_obstack_memory_used@@Base+0x11d24>  // b.none
  4631d4:	mov	w1, #0xb                   	// #11
  4631d8:	mov	w5, #0x0                   	// #0
  4631dc:	mov	w15, #0x0                   	// #0
  4631e0:	mov	w2, #0x0                   	// #0
  4631e4:	mul	w0, w0, w1
  4631e8:	asr	w0, w0, #5
  4631ec:	add	w1, w0, w7
  4631f0:	add	x4, sp, #0xdf
  4631f4:	mov	w6, #0x3a                  	// #58
  4631f8:	b	463234 <_obstack_memory_used@@Base+0x11e24>
  4631fc:	umull	x16, w1, w26
  463200:	asr	w2, w2, #1
  463204:	sturb	w6, [x4, #-1]
  463208:	cmp	w2, #0x0
  46320c:	ccmp	w1, #0x9, #0x2, eq  // eq = none
  463210:	sub	x27, x4, #0x2
  463214:	lsr	x16, x16, #35
  463218:	add	w0, w16, w16, lsl #2
  46321c:	sub	w0, w1, w0, lsl #1
  463220:	add	w0, w0, #0x30
  463224:	sturb	w0, [x4, #-2]
  463228:	b.ls	463268 <_obstack_memory_used@@Base+0x11e58>  // b.plast
  46322c:	mov	x4, x27
  463230:	mov	w1, w16
  463234:	sub	x27, x4, #0x1
  463238:	tbnz	w2, #0, 4631fc <_obstack_memory_used@@Base+0x11dec>
  46323c:	umull	x0, w1, w26
  463240:	asr	w2, w2, #1
  463244:	cmp	w2, #0x0
  463248:	ccmp	w1, #0x9, #0x2, eq  // eq = none
  46324c:	lsr	x0, x0, #35
  463250:	mov	w16, w0
  463254:	add	w0, w0, w0, lsl #2
  463258:	sub	w0, w1, w0, lsl #1
  46325c:	add	w0, w0, #0x30
  463260:	sturb	w0, [x4, #-1]
  463264:	b.hi	46322c <_obstack_memory_used@@Base+0x11e1c>  // b.pmore
  463268:	cmp	w7, w8
  46326c:	csel	w7, w7, w8, ge  // ge = tcont
  463270:	cbnz	w15, 463c88 <_obstack_memory_used@@Base+0x12878>
  463274:	cbz	w5, 46346c <_obstack_memory_used@@Base+0x1205c>
  463278:	cmp	w11, #0x2d
  46327c:	mov	w5, #0x2b                  	// #43
  463280:	b.eq	464030 <_obstack_memory_used@@Base+0x12c20>  // b.none
  463284:	add	x4, sp, #0xdf
  463288:	sub	w0, w7, #0x1
  46328c:	sub	x4, x4, x27
  463290:	sub	x1, x28, x20
  463294:	sub	w6, w0, w4
  463298:	cmp	w6, #0x0
  46329c:	b.le	463e18 <_obstack_memory_used@@Base+0x12a08>
  4632a0:	cmp	w11, #0x5f
  4632a4:	b.eq	463ebc <_obstack_memory_used@@Base+0x12aac>  // b.none
  4632a8:	cmp	x1, w7, sxtw
  4632ac:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  4632b0:	cbz	w5, 463fbc <_obstack_memory_used@@Base+0x12bac>
  4632b4:	cmp	w8, #0x0
  4632b8:	csel	w0, w8, wzr, ge  // ge = tcont
  4632bc:	sxtw	x0, w0
  4632c0:	cmp	x0, #0x0
  4632c4:	csinc	x2, x0, xzr, ne  // ne = any
  4632c8:	cmp	x2, x1
  4632cc:	b.cs	462c48 <_obstack_memory_used@@Base+0x11838>  // b.hs, b.nlast
  4632d0:	sxtw	x6, w6
  4632d4:	add	x20, x20, x2
  4632d8:	cbz	x21, 46337c <_obstack_memory_used@@Base+0x11f6c>
  4632dc:	cmp	w7, #0x0
  4632e0:	ccmp	x0, #0x1, #0x0, eq  // eq = none
  4632e4:	b.ls	46333c <_obstack_memory_used@@Base+0x11f2c>  // b.plast
  4632e8:	sxtw	x2, w8
  4632ec:	str	w7, [sp, #136]
  4632f0:	str	w5, [sp, #144]
  4632f4:	sub	x2, x2, #0x1
  4632f8:	stp	x4, x6, [sp, #152]
  4632fc:	cmp	w11, #0x30
  463300:	add	x8, x21, x2
  463304:	str	x3, [sp, #168]
  463308:	b.eq	464314 <_obstack_memory_used@@Base+0x12f04>  // b.none
  46330c:	mov	x0, x21
  463310:	mov	w1, #0x20                  	// #32
  463314:	mov	x21, x8
  463318:	str	w12, [sp, #120]
  46331c:	str	w11, [sp, #128]
  463320:	bl	404410 <memset@plt>
  463324:	ldp	x4, x6, [sp, #152]
  463328:	ldr	w12, [sp, #120]
  46332c:	ldr	w11, [sp, #128]
  463330:	ldr	w7, [sp, #136]
  463334:	ldr	w5, [sp, #144]
  463338:	ldr	x3, [sp, #168]
  46333c:	strb	w5, [x21], #1
  463340:	mov	x0, x21
  463344:	mov	x2, x6
  463348:	add	x21, x21, x6
  46334c:	mov	w1, #0x30                  	// #48
  463350:	str	x6, [sp, #120]
  463354:	str	w12, [sp, #128]
  463358:	str	w11, [sp, #136]
  46335c:	str	w7, [sp, #144]
  463360:	stp	x4, x3, [sp, #152]
  463364:	bl	404410 <memset@plt>
  463368:	ldr	w12, [sp, #128]
  46336c:	ldp	x4, x3, [sp, #152]
  463370:	ldr	w11, [sp, #136]
  463374:	ldr	w7, [sp, #144]
  463378:	ldr	x6, [sp, #120]
  46337c:	add	x20, x20, x6
  463380:	mov	x5, x19
  463384:	sub	x1, x28, x20
  463388:	mov	x15, #0x0                   	// #0
  46338c:	mov	w8, #0x0                   	// #0
  463390:	b	46349c <_obstack_memory_used@@Base+0x1208c>
  463394:	cmp	w27, #0x45
  463398:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  46339c:	ldr	w15, [x3]
  4633a0:	mov	w7, #0x2                   	// #2
  4633a4:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  4633a8:	cmp	w27, #0x45
  4633ac:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  4633b0:	ldp	w1, w15, [x3, #24]
  4633b4:	mov	w0, #0x2493                	// #9363
  4633b8:	movk	w0, #0x9249, lsl #16
  4633bc:	mov	w7, #0x2                   	// #2
  4633c0:	sub	w15, w15, w1
  4633c4:	add	w15, w15, #0x7
  4633c8:	smull	x0, w15, w0
  4633cc:	lsr	x0, x0, #32
  4633d0:	add	w0, w15, w0
  4633d4:	asr	w0, w0, #2
  4633d8:	sub	w15, w0, w15, asr #31
  4633dc:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  4633e0:	ldp	x4, x5, [x3, #16]
  4633e4:	stp	x4, x5, [sp, #240]
  4633e8:	add	x27, sp, #0xdf
  4633ec:	ldp	x4, x5, [x3, #32]
  4633f0:	str	x3, [sp, #120]
  4633f4:	ldr	x2, [x3, #48]
  4633f8:	str	w12, [sp, #128]
  4633fc:	ldp	x0, x1, [x3]
  463400:	str	w11, [sp, #136]
  463404:	str	w8, [sp, #144]
  463408:	stp	x0, x1, [sp, #224]
  46340c:	add	x1, sp, #0xe0
  463410:	mov	x0, x22
  463414:	stp	x4, x5, [sp, #256]
  463418:	str	x2, [sp, #272]
  46341c:	bl	461f20 <_obstack_memory_used@@Base+0x10b10>
  463420:	ldr	w12, [sp, #128]
  463424:	mov	x4, x0
  463428:	ldr	w11, [sp, #136]
  46342c:	ldr	w8, [sp, #144]
  463430:	ldr	x3, [sp, #120]
  463434:	tbnz	x0, #63, 463c4c <_obstack_memory_used@@Base+0x1283c>
  463438:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  46343c:	movk	x2, #0xcccd
  463440:	umulh	x1, x4, x2
  463444:	lsr	x0, x1, #3
  463448:	cmp	xzr, x1, lsr #3
  46344c:	add	x0, x0, x0, lsl #2
  463450:	sub	x0, x4, x0, lsl #1
  463454:	lsr	x4, x1, #3
  463458:	add	w0, w0, #0x30
  46345c:	strb	w0, [x27, #-1]!
  463460:	b.ne	463440 <_obstack_memory_used@@Base+0x12030>  // b.any
  463464:	cmp	w8, #0x0
  463468:	csinc	w7, w8, wzr, gt
  46346c:	add	x4, sp, #0xdf
  463470:	cmp	w11, #0x2d
  463474:	sub	x4, x4, x27
  463478:	sub	x1, x28, x20
  46347c:	b.eq	46348c <_obstack_memory_used@@Base+0x1207c>  // b.none
  463480:	sub	w6, w7, w4
  463484:	cmp	w6, #0x0
  463488:	b.gt	4641d0 <_obstack_memory_used@@Base+0x12dc0>
  46348c:	cmp	w8, #0x0
  463490:	mov	x5, x19
  463494:	csel	w15, w8, wzr, ge  // ge = tcont
  463498:	sxtw	x15, w15
  46349c:	cmp	x4, x15
  4634a0:	csel	x6, x4, x15, cs  // cs = hs, nlast
  4634a4:	cmp	x6, x1
  4634a8:	b.cs	462c48 <_obstack_memory_used@@Base+0x11838>  // b.hs, b.nlast
  4634ac:	cbz	x21, 463538 <_obstack_memory_used@@Base+0x12128>
  4634b0:	cmp	w7, #0x0
  4634b4:	ccmp	x4, x15, #0x2, eq  // eq = none
  4634b8:	b.cs	4634f8 <_obstack_memory_used@@Base+0x120e8>  // b.hs, b.nlast
  4634bc:	sxtw	x2, w8
  4634c0:	str	w12, [sp, #120]
  4634c4:	stp	x5, x6, [sp, #128]
  4634c8:	sub	x2, x2, x4
  4634cc:	cmp	w11, #0x30
  4634d0:	stp	x4, x3, [sp, #144]
  4634d4:	add	x7, x21, x2
  4634d8:	b.eq	463fc8 <_obstack_memory_used@@Base+0x12bb8>  // b.none
  4634dc:	mov	x0, x21
  4634e0:	mov	w1, #0x20                  	// #32
  4634e4:	mov	x21, x7
  4634e8:	bl	404410 <memset@plt>
  4634ec:	ldp	x5, x6, [sp, #128]
  4634f0:	ldp	x4, x3, [sp, #144]
  4634f4:	ldr	w12, [sp, #120]
  4634f8:	cbz	w12, 463d30 <_obstack_memory_used@@Base+0x12920>
  4634fc:	sub	x19, x4, #0x1
  463500:	cbz	x4, 463534 <_obstack_memory_used@@Base+0x12124>
  463504:	stp	x5, x6, [sp, #120]
  463508:	stp	x4, x3, [sp, #136]
  46350c:	bl	404540 <__ctype_toupper_loc@plt>
  463510:	ldp	x5, x6, [sp, #120]
  463514:	ldp	x4, x3, [sp, #136]
  463518:	ldrb	w2, [x27, x19]
  46351c:	ldr	x1, [x0]
  463520:	ldr	w1, [x1, x2, lsl #2]
  463524:	strb	w1, [x21, x19]
  463528:	sub	x19, x19, #0x1
  46352c:	cmn	x19, #0x1
  463530:	b.ne	463518 <_obstack_memory_used@@Base+0x12108>  // b.any
  463534:	add	x21, x21, x4
  463538:	add	x20, x20, x6
  46353c:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  463540:	cmp	w8, #0x0
  463544:	sub	x0, x28, x20
  463548:	csel	w27, w8, wzr, ge  // ge = tcont
  46354c:	sxtw	x27, w27
  463550:	cmp	x27, #0x0
  463554:	csinc	x27, x27, xzr, ne  // ne = any
  463558:	cmp	x0, x27
  46355c:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  463560:	cbz	x21, 4635a0 <_obstack_memory_used@@Base+0x12190>
  463564:	cmp	w8, #0x1
  463568:	b.le	463598 <_obstack_memory_used@@Base+0x12188>
  46356c:	sxtw	x2, w8
  463570:	str	x3, [sp, #120]
  463574:	sub	x2, x2, #0x1
  463578:	cmp	w11, #0x30
  46357c:	add	x4, x21, x2
  463580:	b.eq	4642c0 <_obstack_memory_used@@Base+0x12eb0>  // b.none
  463584:	mov	x0, x21
  463588:	mov	w1, #0x20                  	// #32
  46358c:	mov	x21, x4
  463590:	bl	404410 <memset@plt>
  463594:	ldr	x3, [sp, #120]
  463598:	mov	w0, #0x9                   	// #9
  46359c:	strb	w0, [x21], #1
  4635a0:	add	x20, x20, x27
  4635a4:	mov	x5, x19
  4635a8:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  4635ac:	ldr	w1, [x3, #24]
  4635b0:	mov	w0, #0x2493                	// #9363
  4635b4:	movk	w0, #0x9249, lsl #16
  4635b8:	mov	w7, #0x1                   	// #1
  4635bc:	add	w1, w1, #0x6
  4635c0:	smull	x0, w1, w0
  4635c4:	lsr	x0, x0, #32
  4635c8:	add	w0, w1, w0
  4635cc:	asr	w0, w0, #2
  4635d0:	sub	w0, w0, w1, asr #31
  4635d4:	lsl	w15, w0, #3
  4635d8:	sub	w15, w15, w0
  4635dc:	sub	w15, w1, w15
  4635e0:	add	w15, w15, w7
  4635e4:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  4635e8:	cmp	w27, #0x45
  4635ec:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  4635f0:	ldr	w15, [x3, #24]
  4635f4:	mov	w7, #0x1                   	// #1
  4635f8:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  4635fc:	cmp	w8, #0x0
  463600:	sub	x0, x28, x20
  463604:	csel	w27, w8, wzr, ge  // ge = tcont
  463608:	sxtw	x27, w27
  46360c:	cmp	x27, #0x0
  463610:	csinc	x27, x27, xzr, ne  // ne = any
  463614:	cmp	x0, x27
  463618:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  46361c:	cbz	x21, 4635a0 <_obstack_memory_used@@Base+0x12190>
  463620:	cmp	w8, #0x1
  463624:	b.le	463654 <_obstack_memory_used@@Base+0x12244>
  463628:	sxtw	x2, w8
  46362c:	str	x3, [sp, #120]
  463630:	sub	x2, x2, #0x1
  463634:	cmp	w11, #0x30
  463638:	add	x4, x21, x2
  46363c:	b.eq	4642a8 <_obstack_memory_used@@Base+0x12e98>  // b.none
  463640:	mov	x0, x21
  463644:	mov	w1, #0x20                  	// #32
  463648:	mov	x21, x4
  46364c:	bl	404410 <memset@plt>
  463650:	ldr	x3, [sp, #120]
  463654:	mov	w0, #0xa                   	// #10
  463658:	strb	w0, [x21], #1
  46365c:	b	4635a0 <_obstack_memory_used@@Base+0x12190>
  463660:	cmp	w27, #0x45
  463664:	b.eq	464008 <_obstack_memory_used@@Base+0x12bf8>  // b.none
  463668:	ldr	w16, [x3, #20]
  46366c:	mov	w15, #0x851f                	// #34079
  463670:	movk	w15, #0x51eb, lsl #16
  463674:	mov	w1, #0x64                  	// #100
  463678:	mov	w2, #0x0                   	// #0
  46367c:	mov	w5, #0x0                   	// #0
  463680:	mov	w7, #0x2                   	// #2
  463684:	smull	x15, w16, w15
  463688:	asr	x15, x15, #37
  46368c:	sub	w15, w15, w16, asr #31
  463690:	add	w0, w15, #0x13
  463694:	msub	w15, w15, w1, w16
  463698:	cmp	w15, #0x0
  46369c:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  4636a0:	cset	w1, gt
  4636a4:	cmn	w16, #0x76c
  4636a8:	cset	w15, lt  // lt = tstop
  4636ac:	sub	w1, w0, w1
  4636b0:	cset	w16, ge  // ge = tcont
  4636b4:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  4636b8:	cbnz	w27, 462ce8 <_obstack_memory_used@@Base+0x118d8>
  4636bc:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4636c0:	add	x27, x27, #0x468
  4636c4:	ldr	w7, [sp, #108]
  4636c8:	mov	w4, w12
  4636cc:	ldr	x5, [sp, #112]
  4636d0:	mov	x1, #0xffffffffffffffff    	// #-1
  4636d4:	mov	x6, x22
  4636d8:	mov	x2, x27
  4636dc:	mov	x0, #0x0                   	// #0
  4636e0:	str	x3, [sp, #120]
  4636e4:	str	w8, [sp, #128]
  4636e8:	str	w12, [sp, #136]
  4636ec:	str	w11, [sp, #144]
  4636f0:	bl	462b88 <_obstack_memory_used@@Base+0x11778>
  4636f4:	ldr	w8, [sp, #128]
  4636f8:	sub	x5, x28, x20
  4636fc:	mov	x4, x0
  463700:	cmp	w8, #0x0
  463704:	csel	w1, w8, wzr, ge  // ge = tcont
  463708:	sxtw	x1, w1
  46370c:	cmp	x0, x1
  463710:	csel	x15, x0, x1, cs  // cs = hs, nlast
  463714:	cmp	x5, x15
  463718:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  46371c:	ldr	x3, [sp, #120]
  463720:	cbz	x21, 46379c <_obstack_memory_used@@Base+0x1238c>
  463724:	ldr	w12, [sp, #136]
  463728:	cmp	x0, x1
  46372c:	b.cs	463770 <_obstack_memory_used@@Base+0x12360>  // b.hs, b.nlast
  463730:	ldr	w11, [sp, #144]
  463734:	sxtw	x2, w8
  463738:	str	w12, [sp, #120]
  46373c:	sub	x2, x2, x0
  463740:	stp	x5, x0, [sp, #128]
  463744:	add	x6, x21, x2
  463748:	cmp	w11, #0x30
  46374c:	stp	x15, x3, [sp, #144]
  463750:	b.eq	46404c <_obstack_memory_used@@Base+0x12c3c>  // b.none
  463754:	mov	x0, x21
  463758:	mov	w1, #0x20                  	// #32
  46375c:	mov	x21, x6
  463760:	bl	404410 <memset@plt>
  463764:	ldp	x5, x4, [sp, #128]
  463768:	ldp	x15, x3, [sp, #144]
  46376c:	ldr	w12, [sp, #120]
  463770:	mov	x1, x5
  463774:	ldr	w7, [sp, #108]
  463778:	ldr	x5, [sp, #112]
  46377c:	mov	x0, x21
  463780:	mov	x2, x27
  463784:	add	x21, x21, x4
  463788:	mov	x6, x22
  46378c:	mov	w4, w12
  463790:	stp	x3, x15, [sp, #120]
  463794:	bl	462b88 <_obstack_memory_used@@Base+0x11778>
  463798:	ldp	x3, x15, [sp, #120]
  46379c:	add	x20, x20, x15
  4637a0:	mov	x5, x19
  4637a4:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  4637a8:	cmp	w27, #0x45
  4637ac:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  4637b0:	ldp	w2, w15, [x3, #24]
  4637b4:	mov	w0, #0x2493                	// #9363
  4637b8:	movk	w0, #0x9249, lsl #16
  4637bc:	mov	w7, #0x2                   	// #2
  4637c0:	add	w2, w2, #0x6
  4637c4:	smull	x1, w2, w0
  4637c8:	lsr	x1, x1, #32
  4637cc:	add	w1, w2, w1
  4637d0:	asr	w1, w1, #2
  4637d4:	sub	w1, w1, w2, asr #31
  4637d8:	lsl	w5, w1, #3
  4637dc:	sub	w1, w5, w1
  4637e0:	sub	w2, w2, w1
  4637e4:	sub	w2, w15, w2
  4637e8:	add	w15, w2, #0x7
  4637ec:	b	4633c8 <_obstack_memory_used@@Base+0x11fb8>
  4637f0:	cmp	w5, #0x0
  4637f4:	mov	x0, x24
  4637f8:	csel	w12, w12, wzr, eq  // eq = none
  4637fc:	str	w8, [sp, #120]
  463800:	str	x3, [sp, #128]
  463804:	str	w12, [sp, #136]
  463808:	str	w5, [sp, #144]
  46380c:	str	w11, [sp, #152]
  463810:	str	w12, [sp, #160]
  463814:	bl	403ff0 <strlen@plt>
  463818:	ldr	w8, [sp, #120]
  46381c:	mov	x27, x0
  463820:	sub	x1, x28, x20
  463824:	cmp	w8, #0x0
  463828:	csel	w0, w8, wzr, ge  // ge = tcont
  46382c:	sxtw	x0, w0
  463830:	cmp	x27, x0
  463834:	csel	x2, x27, x0, cs  // cs = hs, nlast
  463838:	str	x2, [sp, #120]
  46383c:	cmp	x1, x2
  463840:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  463844:	ldr	x3, [sp, #128]
  463848:	cbz	x21, 4638e0 <_obstack_memory_used@@Base+0x124d0>
  46384c:	ldr	w12, [sp, #136]
  463850:	cmp	x27, x0
  463854:	ldr	w5, [sp, #144]
  463858:	b.cs	46389c <_obstack_memory_used@@Base+0x1248c>  // b.hs, b.nlast
  46385c:	ldr	w11, [sp, #152]
  463860:	sxtw	x2, w8
  463864:	str	w12, [sp, #128]
  463868:	sub	x2, x2, x27
  46386c:	str	w5, [sp, #136]
  463870:	add	x6, x21, x2
  463874:	str	x3, [sp, #144]
  463878:	cmp	w11, #0x30
  46387c:	b.eq	4642f4 <_obstack_memory_used@@Base+0x12ee4>  // b.none
  463880:	mov	x0, x21
  463884:	mov	w1, #0x20                  	// #32
  463888:	mov	x21, x6
  46388c:	bl	404410 <memset@plt>
  463890:	ldr	w12, [sp, #128]
  463894:	ldr	w5, [sp, #136]
  463898:	ldr	x3, [sp, #144]
  46389c:	cbnz	w5, 464204 <_obstack_memory_used@@Base+0x12df4>
  4638a0:	cbz	w12, 4641e8 <_obstack_memory_used@@Base+0x12dd8>
  4638a4:	sub	x1, x27, #0x1
  4638a8:	str	x1, [sp, #136]
  4638ac:	cbz	x27, 4638dc <_obstack_memory_used@@Base+0x124cc>
  4638b0:	str	x3, [sp, #128]
  4638b4:	bl	404540 <__ctype_toupper_loc@plt>
  4638b8:	ldp	x3, x1, [sp, #128]
  4638bc:	mov	x5, x0
  4638c0:	ldrb	w2, [x24, x1]
  4638c4:	ldr	x0, [x5]
  4638c8:	ldr	w0, [x0, x2, lsl #2]
  4638cc:	strb	w0, [x21, x1]
  4638d0:	sub	x1, x1, #0x1
  4638d4:	cmn	x1, #0x1
  4638d8:	b.ne	4638c0 <_obstack_memory_used@@Base+0x124b0>  // b.any
  4638dc:	add	x21, x21, x27
  4638e0:	ldr	x0, [sp, #120]
  4638e4:	mov	x5, x19
  4638e8:	add	x20, x20, x0
  4638ec:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  4638f0:	cmp	w27, #0x45
  4638f4:	b.eq	464008 <_obstack_memory_used@@Base+0x12bf8>  // b.none
  4638f8:	ldr	w0, [x3, #20]
  4638fc:	mov	w15, #0x851f                	// #34079
  463900:	movk	w15, #0x51eb, lsl #16
  463904:	mov	w1, #0x64                  	// #100
  463908:	mov	w7, #0x2                   	// #2
  46390c:	smull	x15, w0, w15
  463910:	asr	x15, x15, #37
  463914:	sub	w15, w15, w0, asr #31
  463918:	msub	w15, w15, w1, w0
  46391c:	tbz	w15, #31, 463110 <_obstack_memory_used@@Base+0x11d00>
  463920:	neg	w1, w15
  463924:	cmn	w0, #0x76d
  463928:	add	w15, w15, #0x64
  46392c:	csel	w15, w15, w1, gt
  463930:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  463934:	cmp	w27, #0x45
  463938:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  46393c:	ldr	w0, [x3, #28]
  463940:	mov	w2, #0x0                   	// #0
  463944:	mov	w5, #0x0                   	// #0
  463948:	mov	w7, #0x3                   	// #3
  46394c:	adds	w1, w0, #0x1
  463950:	cset	w15, lt  // lt = tstop
  463954:	cset	w16, ge  // ge = tcont
  463958:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  46395c:	cmp	w27, #0x45
  463960:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  463964:	ldr	w15, [x3, #8]
  463968:	cmp	w11, #0x30
  46396c:	mov	w0, #0x2d                  	// #45
  463970:	ccmp	w11, w0, #0x4, ne  // ne = any
  463974:	mov	w7, #0x2                   	// #2
  463978:	mov	w0, #0x5f                  	// #95
  46397c:	csel	w11, w11, w0, eq  // eq = none
  463980:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  463984:	cmp	w27, #0x45
  463988:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  46398c:	mov	w15, w25
  463990:	b	463968 <_obstack_memory_used@@Base+0x12558>
  463994:	cmp	w27, #0x45
  463998:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  46399c:	ldr	w0, [x3, #16]
  4639a0:	mov	w2, #0x0                   	// #0
  4639a4:	mov	w5, #0x0                   	// #0
  4639a8:	mov	w7, #0x2                   	// #2
  4639ac:	adds	w1, w0, #0x1
  4639b0:	cset	w15, lt  // lt = tstop
  4639b4:	cset	w16, ge  // ge = tcont
  4639b8:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  4639bc:	cmp	w27, #0x45
  4639c0:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  4639c4:	ldr	w15, [x3, #12]
  4639c8:	mov	w7, #0x2                   	// #2
  4639cc:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  4639d0:	cmp	w27, #0x45
  4639d4:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  4639d8:	ldr	w15, [x3, #12]
  4639dc:	b	463968 <_obstack_memory_used@@Base+0x12558>
  4639e0:	cmp	w27, #0x45
  4639e4:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  4639e8:	cmp	w5, #0x0
  4639ec:	str	wzr, [sp, #144]
  4639f0:	csel	w12, w12, w5, eq  // eq = none
  4639f4:	b	462e98 <_obstack_memory_used@@Base+0x11a88>
  4639f8:	cmp	w27, #0x45
  4639fc:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  463a00:	ldr	w15, [x3, #4]
  463a04:	mov	w7, #0x2                   	// #2
  463a08:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  463a0c:	cmp	w27, #0x45
  463a10:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  463a14:	cmn	w8, #0x1
  463a18:	b.ne	464118 <_obstack_memory_used@@Base+0x12d08>  // b.any
  463a1c:	mov	w8, #0x9                   	// #9
  463a20:	ldr	w15, [sp, #108]
  463a24:	mov	w7, w8
  463a28:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  463a2c:	cmp	w27, #0x45
  463a30:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  463a34:	ldr	w15, [x3, #8]
  463a38:	mov	w7, #0x2                   	// #2
  463a3c:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  463a40:	cbnz	w27, 462ce8 <_obstack_memory_used@@Base+0x118d8>
  463a44:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  463a48:	add	x27, x27, #0x480
  463a4c:	b	4636c4 <_obstack_memory_used@@Base+0x122b4>
  463a50:	cmp	w27, #0x45
  463a54:	b.eq	464008 <_obstack_memory_used@@Base+0x12bf8>  // b.none
  463a58:	cmp	w27, #0x4f
  463a5c:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  463a60:	ldr	w0, [x3, #20]
  463a64:	mov	w2, #0x0                   	// #0
  463a68:	mov	w5, #0x0                   	// #0
  463a6c:	mov	w7, #0x4                   	// #4
  463a70:	adds	w1, w0, #0x76c
  463a74:	cset	w15, lt  // lt = tstop
  463a78:	cmp	w15, #0x0
  463a7c:	cneg	w1, w1, ne  // ne = any
  463a80:	b	4631f0 <_obstack_memory_used@@Base+0x11de0>
  463a84:	cmp	w27, #0x45
  463a88:	b.eq	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.none
  463a8c:	mov	w15, w25
  463a90:	mov	w7, #0x2                   	// #2
  463a94:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  463a98:	cmp	w8, #0x0
  463a9c:	mov	x2, #0x1                   	// #1
  463aa0:	csel	w0, w8, wzr, ge  // ge = tcont
  463aa4:	sub	x1, x28, x20
  463aa8:	sxtw	x0, w0
  463aac:	cmp	x0, #0x0
  463ab0:	csel	x7, x0, x2, ne  // ne = any
  463ab4:	cbnz	w27, 46425c <_obstack_memory_used@@Base+0x12e4c>
  463ab8:	cmp	x1, x7
  463abc:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  463ac0:	cbz	x21, 463b00 <_obstack_memory_used@@Base+0x126f0>
  463ac4:	cmp	w8, #0x1
  463ac8:	b.le	463afc <_obstack_memory_used@@Base+0x126ec>
  463acc:	sxtw	x2, w8
  463ad0:	stp	x7, x3, [sp, #120]
  463ad4:	sub	x2, x2, #0x1
  463ad8:	cmp	w11, #0x30
  463adc:	add	x27, x21, x2
  463ae0:	b.eq	4642d8 <_obstack_memory_used@@Base+0x12ec8>  // b.none
  463ae4:	mov	x0, x21
  463ae8:	mov	w1, #0x20                  	// #32
  463aec:	bl	404410 <memset@plt>
  463af0:	mov	x21, x27
  463af4:	ldp	x7, x3, [sp, #120]
  463af8:	ldrb	w4, [x19]
  463afc:	strb	w4, [x21], #1
  463b00:	add	x20, x20, x7
  463b04:	mov	x5, x19
  463b08:	b	462c28 <_obstack_memory_used@@Base+0x11818>
  463b0c:	ldrb	w0, [x19, #1]
  463b10:	add	x5, x19, #0x1
  463b14:	mov	x7, #0x1                   	// #1
  463b18:	cmp	w0, #0x3a
  463b1c:	b.eq	463c34 <_obstack_memory_used@@Base+0x12824>  // b.none
  463b20:	cmp	w0, #0x7a
  463b24:	b.ne	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.any
  463b28:	ldr	w0, [x3, #32]
  463b2c:	tbnz	w0, #31, 462c28 <_obstack_memory_used@@Base+0x11818>
  463b30:	ldr	x18, [x3, #40]
  463b34:	cmp	w18, #0x0
  463b38:	b.lt	46410c <_obstack_memory_used@@Base+0x12cfc>  // b.tstop
  463b3c:	b.ne	46419c <_obstack_memory_used@@Base+0x12d8c>  // b.any
  463b40:	ldrb	w0, [x24]
  463b44:	cmp	w0, #0x2d
  463b48:	cset	w16, ne  // ne = any
  463b4c:	cset	w15, eq  // eq = none
  463b50:	mov	w2, #0x8889                	// #34953
  463b54:	asr	w19, w18, #31
  463b58:	movk	w2, #0x8888, lsl #16
  463b5c:	mov	w0, #0xb3c5                	// #46021
  463b60:	movk	w0, #0x91a2, lsl #16
  463b64:	cmp	x7, #0x2
  463b68:	smull	x17, w18, w2
  463b6c:	smull	x0, w18, w0
  463b70:	lsr	x17, x17, #32
  463b74:	add	w17, w17, w18
  463b78:	lsr	x0, x0, #32
  463b7c:	add	w0, w0, w18
  463b80:	asr	w17, w17, #5
  463b84:	sub	w17, w17, w19
  463b88:	asr	w1, w0, #11
  463b8c:	sub	w0, w1, w19
  463b90:	lsl	w1, w17, #4
  463b94:	smull	x2, w17, w2
  463b98:	sub	w1, w1, w17
  463b9c:	sub	w1, w18, w1, lsl #2
  463ba0:	lsr	x2, x2, #32
  463ba4:	add	w2, w17, w2
  463ba8:	asr	w2, w2, #5
  463bac:	sub	w2, w2, w17, asr #31
  463bb0:	lsl	w18, w2, #4
  463bb4:	sub	w2, w18, w2
  463bb8:	sub	w2, w17, w2, lsl #2
  463bbc:	b.eq	4641a8 <_obstack_memory_used@@Base+0x12d98>  // b.none
  463bc0:	b.hi	463fe8 <_obstack_memory_used@@Base+0x12bd8>  // b.pmore
  463bc4:	cbz	x7, 464240 <_obstack_memory_used@@Base+0x12e30>
  463bc8:	mov	w1, #0x64                  	// #100
  463bcc:	mov	x19, x5
  463bd0:	mov	w7, #0x6                   	// #6
  463bd4:	mov	w5, #0x1                   	// #1
  463bd8:	madd	w1, w0, w1, w2
  463bdc:	mov	w2, #0x4                   	// #4
  463be0:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  463be4:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  463be8:	add	x27, x27, #0x478
  463bec:	b	4636c4 <_obstack_memory_used@@Base+0x122b4>
  463bf0:	mov	x5, x19
  463bf4:	mov	x7, #0x0                   	// #0
  463bf8:	b	463b28 <_obstack_memory_used@@Base+0x12718>
  463bfc:	str	wzr, [sp, #144]
  463c00:	ldr	w0, [sp, #144]
  463c04:	cmp	w5, #0x0
  463c08:	csel	w12, w12, wzr, eq  // eq = none
  463c0c:	mov	w4, #0x70                  	// #112
  463c10:	csel	w0, w0, w5, eq  // eq = none
  463c14:	str	w0, [sp, #144]
  463c18:	b	462e98 <_obstack_memory_used@@Base+0x11a88>
  463c1c:	adrp	x27, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  463c20:	add	x27, x27, #0x458
  463c24:	b	4636c4 <_obstack_memory_used@@Base+0x122b4>
  463c28:	mov	w0, #0x1                   	// #1
  463c2c:	str	w0, [sp, #144]
  463c30:	b	463c00 <_obstack_memory_used@@Base+0x127f0>
  463c34:	add	x7, x7, #0x1
  463c38:	add	x5, x19, x7
  463c3c:	ldrb	w0, [x19, x7]
  463c40:	cmp	w0, #0x3a
  463c44:	b.ne	463b20 <_obstack_memory_used@@Base+0x12710>  // b.any
  463c48:	b	463c34 <_obstack_memory_used@@Base+0x12824>
  463c4c:	mov	x6, #0x6666666666666666    	// #7378697629483820646
  463c50:	mov	w5, #0x30                  	// #48
  463c54:	movk	x6, #0x6667
  463c58:	smulh	x1, x4, x6
  463c5c:	asr	x2, x4, #63
  463c60:	asr	x1, x1, #2
  463c64:	sub	x0, x1, x2
  463c68:	add	x0, x0, x0, lsl #2
  463c6c:	sub	x0, x4, x0, lsl #1
  463c70:	subs	x4, x1, x2
  463c74:	sub	w0, w5, w0
  463c78:	strb	w0, [x27, #-1]!
  463c7c:	b.ne	463c58 <_obstack_memory_used@@Base+0x12848>  // b.any
  463c80:	cmp	w8, #0x0
  463c84:	csinc	w7, w8, wzr, gt
  463c88:	cmp	w11, #0x2d
  463c8c:	mov	w5, #0x2d                  	// #45
  463c90:	b.ne	463284 <_obstack_memory_used@@Base+0x11e74>  // b.any
  463c94:	cmp	w8, #0x0
  463c98:	sub	x0, x28, x20
  463c9c:	csel	w15, w8, wzr, ge  // ge = tcont
  463ca0:	sxtw	x15, w15
  463ca4:	cmp	x15, #0x0
  463ca8:	csinc	x4, x15, xzr, ne  // ne = any
  463cac:	cmp	x0, x4
  463cb0:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  463cb4:	cbz	x21, 463cc8 <_obstack_memory_used@@Base+0x128b8>
  463cb8:	cmp	w7, #0x0
  463cbc:	ccmp	x15, #0x1, #0x0, eq  // eq = none
  463cc0:	b.hi	463ce4 <_obstack_memory_used@@Base+0x128d4>  // b.pmore
  463cc4:	strb	w11, [x21], #1
  463cc8:	add	x20, x20, x4
  463ccc:	add	x4, sp, #0xdf
  463cd0:	mov	x5, x19
  463cd4:	sub	x1, x28, x20
  463cd8:	sub	x4, x4, x27
  463cdc:	mov	w11, #0x2d                  	// #45
  463ce0:	b	46349c <_obstack_memory_used@@Base+0x1208c>
  463ce4:	sxtw	x2, w8
  463ce8:	mov	x0, x21
  463cec:	sub	x2, x2, #0x1
  463cf0:	mov	w1, #0x20                  	// #32
  463cf4:	add	x21, x21, x2
  463cf8:	str	w8, [sp, #120]
  463cfc:	str	w12, [sp, #128]
  463d00:	str	w7, [sp, #136]
  463d04:	str	w11, [sp, #144]
  463d08:	stp	x4, x15, [sp, #152]
  463d0c:	str	x3, [sp, #168]
  463d10:	bl	404410 <memset@plt>
  463d14:	ldr	w8, [sp, #120]
  463d18:	ldr	w12, [sp, #128]
  463d1c:	ldr	w7, [sp, #136]
  463d20:	ldr	w11, [sp, #144]
  463d24:	ldp	x4, x15, [sp, #152]
  463d28:	ldr	x3, [sp, #168]
  463d2c:	b	463cc4 <_obstack_memory_used@@Base+0x128b4>
  463d30:	mov	x2, x4
  463d34:	mov	x0, x21
  463d38:	mov	x1, x27
  463d3c:	stp	x4, x5, [sp, #120]
  463d40:	stp	x6, x3, [sp, #136]
  463d44:	bl	403f70 <memcpy@plt>
  463d48:	ldp	x4, x5, [sp, #120]
  463d4c:	ldp	x6, x3, [sp, #136]
  463d50:	add	x21, x21, x4
  463d54:	b	463538 <_obstack_memory_used@@Base+0x12128>
  463d58:	mov	x0, x21
  463d5c:	mov	x1, x4
  463d60:	mov	x2, x27
  463d64:	stp	x5, x7, [sp, #120]
  463d68:	add	x21, x21, x27
  463d6c:	str	x3, [sp, #136]
  463d70:	bl	403f70 <memcpy@plt>
  463d74:	ldp	x5, x7, [sp, #120]
  463d78:	ldr	x3, [sp, #136]
  463d7c:	b	462db0 <_obstack_memory_used@@Base+0x119a0>
  463d80:	mov	x2, x4
  463d84:	mov	x0, x21
  463d88:	add	x1, sp, #0xe1
  463d8c:	stp	x4, x5, [sp, #120]
  463d90:	stp	x7, x3, [sp, #136]
  463d94:	bl	403f70 <memcpy@plt>
  463d98:	ldp	x4, x5, [sp, #120]
  463d9c:	ldp	x7, x3, [sp, #136]
  463da0:	add	x21, x21, x4
  463da4:	b	462fb0 <_obstack_memory_used@@Base+0x11ba0>
  463da8:	sub	x19, x19, #0x2
  463dac:	cbz	x4, 462fac <_obstack_memory_used@@Base+0x11b9c>
  463db0:	stp	x5, x4, [sp, #120]
  463db4:	stp	x7, x3, [sp, #136]
  463db8:	bl	4041f0 <__ctype_tolower_loc@plt>
  463dbc:	ldp	x5, x4, [sp, #120]
  463dc0:	ldp	x7, x3, [sp, #136]
  463dc4:	nop
  463dc8:	add	x1, sp, #0xe0
  463dcc:	add	x2, x1, x19
  463dd0:	ldr	x1, [x0]
  463dd4:	ldrb	w2, [x2, #1]
  463dd8:	ldr	w1, [x1, x2, lsl #2]
  463ddc:	strb	w1, [x21, x19]
  463de0:	sub	x19, x19, #0x1
  463de4:	cmn	x19, #0x1
  463de8:	b.ne	463dc8 <_obstack_memory_used@@Base+0x129b8>  // b.any
  463dec:	add	x21, x21, x4
  463df0:	b	462fb0 <_obstack_memory_used@@Base+0x11ba0>
  463df4:	mov	x0, x21
  463df8:	mov	w1, w11
  463dfc:	mov	x21, x6
  463e00:	str	w12, [sp, #120]
  463e04:	bl	404410 <memset@plt>
  463e08:	ldr	w12, [sp, #120]
  463e0c:	ldp	x5, x4, [sp, #128]
  463e10:	ldp	x7, x3, [sp, #152]
  463e14:	b	462f60 <_obstack_memory_used@@Base+0x11b50>
  463e18:	cmp	w8, #0x0
  463e1c:	csel	w15, w8, wzr, ge  // ge = tcont
  463e20:	sxtw	x15, w15
  463e24:	cmp	x15, #0x0
  463e28:	csinc	x6, x15, xzr, ne  // ne = any
  463e2c:	cmp	x6, x1
  463e30:	b.cs	462c48 <_obstack_memory_used@@Base+0x11838>  // b.hs, b.nlast
  463e34:	cbz	x21, 463eac <_obstack_memory_used@@Base+0x12a9c>
  463e38:	cmp	w7, #0x0
  463e3c:	ccmp	x15, #0x1, #0x0, eq  // eq = none
  463e40:	b.ls	463ea8 <_obstack_memory_used@@Base+0x12a98>  // b.plast
  463e44:	sxtw	x2, w8
  463e48:	str	w7, [sp, #136]
  463e4c:	str	x6, [sp, #144]
  463e50:	sub	x2, x2, #0x1
  463e54:	str	w8, [sp, #152]
  463e58:	cmp	w11, #0x30
  463e5c:	str	w5, [sp, #160]
  463e60:	add	x16, x21, x2
  463e64:	stp	x4, x15, [sp, #168]
  463e68:	str	x3, [sp, #184]
  463e6c:	b.eq	46426c <_obstack_memory_used@@Base+0x12e5c>  // b.none
  463e70:	mov	x0, x21
  463e74:	mov	w1, #0x20                  	// #32
  463e78:	mov	x21, x16
  463e7c:	str	w12, [sp, #120]
  463e80:	str	w11, [sp, #128]
  463e84:	bl	404410 <memset@plt>
  463e88:	ldp	x4, x15, [sp, #168]
  463e8c:	ldr	w12, [sp, #120]
  463e90:	ldr	w11, [sp, #128]
  463e94:	ldr	w7, [sp, #136]
  463e98:	ldr	w8, [sp, #152]
  463e9c:	ldr	w5, [sp, #160]
  463ea0:	ldr	x6, [sp, #144]
  463ea4:	ldr	x3, [sp, #184]
  463ea8:	strb	w5, [x21], #1
  463eac:	add	x20, x20, x6
  463eb0:	mov	x5, x19
  463eb4:	sub	x1, x28, x20
  463eb8:	b	46349c <_obstack_memory_used@@Base+0x1208c>
  463ebc:	cmp	x1, w6, sxtw
  463ec0:	sxtw	x2, w6
  463ec4:	b.ls	462c48 <_obstack_memory_used@@Base+0x11838>  // b.plast
  463ec8:	cbz	x21, 463f24 <_obstack_memory_used@@Base+0x12b14>
  463ecc:	mov	x0, x21
  463ed0:	mov	w1, #0x20                  	// #32
  463ed4:	add	x21, x21, x2
  463ed8:	str	x2, [sp, #120]
  463edc:	str	w12, [sp, #128]
  463ee0:	str	w11, [sp, #136]
  463ee4:	str	w7, [sp, #144]
  463ee8:	str	w8, [sp, #152]
  463eec:	str	w5, [sp, #160]
  463ef0:	str	x4, [sp, #168]
  463ef4:	str	w6, [sp, #176]
  463ef8:	str	x3, [sp, #184]
  463efc:	bl	404410 <memset@plt>
  463f00:	ldr	w12, [sp, #128]
  463f04:	ldr	w11, [sp, #136]
  463f08:	ldr	w7, [sp, #144]
  463f0c:	ldr	w8, [sp, #152]
  463f10:	ldr	w5, [sp, #160]
  463f14:	ldr	w6, [sp, #176]
  463f18:	ldr	x2, [sp, #120]
  463f1c:	ldr	x4, [sp, #168]
  463f20:	ldr	x3, [sp, #184]
  463f24:	add	x20, x20, x2
  463f28:	cmp	w8, w6
  463f2c:	b.le	464040 <_obstack_memory_used@@Base+0x12c30>
  463f30:	sub	w8, w8, w6
  463f34:	sxtw	x15, w8
  463f38:	sub	x1, x28, x20
  463f3c:	cbz	w5, 464038 <_obstack_memory_used@@Base+0x12c28>
  463f40:	cmp	x15, #0x0
  463f44:	csinc	x6, x15, xzr, ne  // ne = any
  463f48:	cmp	x6, x1
  463f4c:	b.cs	462c48 <_obstack_memory_used@@Base+0x11838>  // b.hs, b.nlast
  463f50:	cbz	x21, 463eac <_obstack_memory_used@@Base+0x12a9c>
  463f54:	cmp	w7, #0x0
  463f58:	ccmp	x15, #0x1, #0x0, eq  // eq = none
  463f5c:	b.ls	463ea8 <_obstack_memory_used@@Base+0x12a98>  // b.plast
  463f60:	sxtw	x2, w8
  463f64:	mov	x0, x21
  463f68:	sub	x2, x2, #0x1
  463f6c:	mov	w1, #0x20                  	// #32
  463f70:	add	x21, x21, x2
  463f74:	str	w8, [sp, #120]
  463f78:	str	w12, [sp, #128]
  463f7c:	str	w11, [sp, #136]
  463f80:	str	w7, [sp, #144]
  463f84:	str	x6, [sp, #152]
  463f88:	str	w5, [sp, #160]
  463f8c:	stp	x4, x15, [sp, #168]
  463f90:	str	x3, [sp, #184]
  463f94:	bl	404410 <memset@plt>
  463f98:	ldr	w8, [sp, #120]
  463f9c:	ldr	w12, [sp, #128]
  463fa0:	ldr	w11, [sp, #136]
  463fa4:	ldr	w7, [sp, #144]
  463fa8:	ldr	w5, [sp, #160]
  463fac:	ldr	x6, [sp, #152]
  463fb0:	ldp	x4, x15, [sp, #168]
  463fb4:	ldr	x3, [sp, #184]
  463fb8:	b	463ea8 <_obstack_memory_used@@Base+0x12a98>
  463fbc:	sxtw	x6, w6
  463fc0:	cbz	x21, 46337c <_obstack_memory_used@@Base+0x11f6c>
  463fc4:	b	463340 <_obstack_memory_used@@Base+0x11f30>
  463fc8:	mov	x0, x21
  463fcc:	mov	w1, w11
  463fd0:	mov	x21, x7
  463fd4:	bl	404410 <memset@plt>
  463fd8:	ldr	w12, [sp, #120]
  463fdc:	ldp	x5, x6, [sp, #128]
  463fe0:	ldp	x4, x3, [sp, #144]
  463fe4:	b	4634f8 <_obstack_memory_used@@Base+0x120e8>
  463fe8:	mov	x19, x5
  463fec:	cmp	x7, #0x3
  463ff0:	b.ne	462ce8 <_obstack_memory_used@@Base+0x118d8>  // b.any
  463ff4:	cbnz	w1, 4641a8 <_obstack_memory_used@@Base+0x12d98>
  463ff8:	cbnz	w2, 463bc8 <_obstack_memory_used@@Base+0x127b8>
  463ffc:	mov	w1, w0
  464000:	mov	w5, #0x1                   	// #1
  464004:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  464008:	mov	w7, #0x0                   	// #0
  46400c:	b	463134 <_obstack_memory_used@@Base+0x11d24>
  464010:	mov	x0, x21
  464014:	mov	w1, w11
  464018:	mov	x21, x6
  46401c:	bl	404410 <memset@plt>
  464020:	ldr	w12, [sp, #120]
  464024:	ldp	x5, x4, [sp, #128]
  464028:	ldp	x7, x3, [sp, #144]
  46402c:	b	462d74 <_obstack_memory_used@@Base+0x11964>
  464030:	mov	w11, #0x2b                  	// #43
  464034:	b	463c94 <_obstack_memory_used@@Base+0x12884>
  464038:	mov	x5, x19
  46403c:	b	46349c <_obstack_memory_used@@Base+0x1208c>
  464040:	mov	x15, #0x0                   	// #0
  464044:	mov	w8, #0x0                   	// #0
  464048:	b	463f38 <_obstack_memory_used@@Base+0x12b28>
  46404c:	mov	x0, x21
  464050:	mov	w1, w11
  464054:	mov	x21, x6
  464058:	bl	404410 <memset@plt>
  46405c:	ldr	w12, [sp, #120]
  464060:	ldp	x5, x4, [sp, #128]
  464064:	ldp	x15, x3, [sp, #144]
  464068:	b	463770 <_obstack_memory_used@@Base+0x12360>
  46406c:	sub	w5, w5, #0x1
  464070:	mov	w15, #0x16d                 	// #365
  464074:	tst	x5, #0x3
  464078:	b.ne	4640c0 <_obstack_memory_used@@Base+0x12cb0>  // b.any
  46407c:	mov	w0, #0x5c29                	// #23593
  464080:	mov	w15, #0xb850                	// #47184
  464084:	movk	w15, #0x51e, lsl #16
  464088:	movk	w0, #0xc28f, lsl #16
  46408c:	mov	w16, #0x5c28                	// #23592
  464090:	madd	w0, w5, w0, w15
  464094:	movk	w16, #0x28f, lsl #16
  464098:	mov	w15, #0x16e                 	// #366
  46409c:	ror	w0, w0, #2
  4640a0:	cmp	w0, w16
  4640a4:	b.hi	4640c0 <_obstack_memory_used@@Base+0x12cb0>  // b.pmore
  4640a8:	mov	w15, #0x190                 	// #400
  4640ac:	sdiv	w0, w5, w15
  4640b0:	msub	w5, w0, w15, w5
  4640b4:	cmp	w5, #0x0
  4640b8:	cset	w15, eq  // eq = none
  4640bc:	add	w15, w15, #0x16d
  4640c0:	add	w15, w7, w15
  4640c4:	mov	w0, #0x2493                	// #9363
  4640c8:	sub	w1, w15, w1
  4640cc:	movk	w0, #0x9249, lsl #16
  4640d0:	add	w16, w1, #0x17e
  4640d4:	mov	w7, #0xffffffff            	// #-1
  4640d8:	mov	w5, #0xfffff895            	// #-1899
  4640dc:	mov	w1, w7
  4640e0:	smull	x0, w16, w0
  4640e4:	lsr	x0, x0, #32
  4640e8:	add	w0, w16, w0
  4640ec:	asr	w0, w0, #2
  4640f0:	sub	w0, w0, w16, asr #31
  4640f4:	lsl	w17, w0, #3
  4640f8:	sub	w0, w17, w0
  4640fc:	sub	w16, w16, w0
  464100:	sub	w0, w15, w16
  464104:	add	w0, w0, #0x3
  464108:	b	4630b8 <_obstack_memory_used@@Base+0x11ca8>
  46410c:	mov	w16, #0x0                   	// #0
  464110:	mov	w15, #0x1                   	// #1
  464114:	b	463b50 <_obstack_memory_used@@Base+0x12740>
  464118:	cmp	w8, #0x8
  46411c:	b.gt	464348 <_obstack_memory_used@@Base+0x12f38>
  464120:	ldr	w15, [sp, #108]
  464124:	mov	w2, #0x6667                	// #26215
  464128:	mov	w1, w8
  46412c:	movk	w2, #0x6666, lsl #16
  464130:	smull	x0, w15, w2
  464134:	add	w1, w1, #0x1
  464138:	cmp	w1, #0x9
  46413c:	asr	x0, x0, #34
  464140:	sub	w15, w0, w15, asr #31
  464144:	b.ne	464130 <_obstack_memory_used@@Base+0x12d20>  // b.any
  464148:	mov	w7, w8
  46414c:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  464150:	mov	w15, #0x2493                	// #9363
  464154:	mov	w7, #0x2                   	// #2
  464158:	movk	w15, #0x9249, lsl #16
  46415c:	smull	x15, w0, w15
  464160:	lsr	x15, x15, #32
  464164:	add	w15, w0, w15
  464168:	asr	w15, w15, #2
  46416c:	sub	w0, w15, w0, asr #31
  464170:	add	w15, w0, #0x1
  464174:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  464178:	cmp	w2, w5
  46417c:	add	w0, w2, #0x76c
  464180:	add	w1, w0, w7
  464184:	cset	w15, lt  // lt = tstop
  464188:	cset	w16, ge  // ge = tcont
  46418c:	mov	w2, #0x0                   	// #0
  464190:	mov	w5, #0x0                   	// #0
  464194:	mov	w7, #0x4                   	// #4
  464198:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  46419c:	mov	w16, #0x1                   	// #1
  4641a0:	mov	w15, #0x0                   	// #0
  4641a4:	b	463b50 <_obstack_memory_used@@Base+0x12740>
  4641a8:	mov	w17, #0x64                  	// #100
  4641ac:	mov	w7, #0x2710                	// #10000
  4641b0:	mov	x19, x5
  4641b4:	mov	w5, #0x1                   	// #1
  4641b8:	mul	w2, w2, w17
  4641bc:	madd	w0, w0, w7, w2
  4641c0:	mov	w7, #0x9                   	// #9
  4641c4:	mov	w2, #0x14                  	// #20
  4641c8:	add	w1, w0, w1
  4641cc:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  4641d0:	mov	w5, #0x0                   	// #0
  4641d4:	b	4632a0 <_obstack_memory_used@@Base+0x11e90>
  4641d8:	mov	w7, #0x0                   	// #0
  4641dc:	mov	w5, #0xfffff894            	// #-1900
  4641e0:	mov	w1, #0x0                   	// #0
  4641e4:	b	4630b8 <_obstack_memory_used@@Base+0x11ca8>
  4641e8:	mov	x2, x27
  4641ec:	mov	x1, x24
  4641f0:	mov	x0, x21
  4641f4:	str	x3, [sp, #128]
  4641f8:	bl	403f70 <memcpy@plt>
  4641fc:	ldr	x3, [sp, #128]
  464200:	b	4638dc <_obstack_memory_used@@Base+0x124cc>
  464204:	sub	x1, x27, #0x1
  464208:	str	x1, [sp, #136]
  46420c:	cbz	x27, 4638dc <_obstack_memory_used@@Base+0x124cc>
  464210:	str	x3, [sp, #128]
  464214:	bl	4041f0 <__ctype_tolower_loc@plt>
  464218:	ldp	x3, x1, [sp, #128]
  46421c:	mov	x5, x0
  464220:	ldrb	w2, [x24, x1]
  464224:	ldr	x0, [x5]
  464228:	ldr	w0, [x0, x2, lsl #2]
  46422c:	strb	w0, [x21, x1]
  464230:	sub	x1, x1, #0x1
  464234:	cmn	x1, #0x1
  464238:	b.ne	464220 <_obstack_memory_used@@Base+0x12e10>  // b.any
  46423c:	b	4638dc <_obstack_memory_used@@Base+0x124cc>
  464240:	mov	w1, #0x64                  	// #100
  464244:	mov	x19, x5
  464248:	mov	w7, #0x5                   	// #5
  46424c:	mov	w5, #0x1                   	// #1
  464250:	madd	w1, w0, w1, w2
  464254:	mov	w2, #0x0                   	// #0
  464258:	b	463128 <_obstack_memory_used@@Base+0x11d18>
  46425c:	mov	x5, x19
  464260:	mov	x27, x2
  464264:	mov	x4, x19
  464268:	b	462d24 <_obstack_memory_used@@Base+0x11914>
  46426c:	mov	x0, x21
  464270:	mov	w1, w11
  464274:	mov	x21, x16
  464278:	str	w11, [sp, #120]
  46427c:	str	w12, [sp, #128]
  464280:	bl	404410 <memset@plt>
  464284:	ldr	w11, [sp, #120]
  464288:	ldr	w12, [sp, #128]
  46428c:	ldr	w7, [sp, #136]
  464290:	ldr	w8, [sp, #152]
  464294:	ldr	w5, [sp, #160]
  464298:	ldr	x6, [sp, #144]
  46429c:	ldp	x4, x15, [sp, #168]
  4642a0:	ldr	x3, [sp, #184]
  4642a4:	b	463ea8 <_obstack_memory_used@@Base+0x12a98>
  4642a8:	mov	x0, x21
  4642ac:	mov	w1, w11
  4642b0:	mov	x21, x4
  4642b4:	bl	404410 <memset@plt>
  4642b8:	ldr	x3, [sp, #120]
  4642bc:	b	463654 <_obstack_memory_used@@Base+0x12244>
  4642c0:	mov	x0, x21
  4642c4:	mov	w1, w11
  4642c8:	mov	x21, x4
  4642cc:	bl	404410 <memset@plt>
  4642d0:	ldr	x3, [sp, #120]
  4642d4:	b	463598 <_obstack_memory_used@@Base+0x12188>
  4642d8:	mov	x0, x21
  4642dc:	mov	w1, w11
  4642e0:	bl	404410 <memset@plt>
  4642e4:	mov	x21, x27
  4642e8:	ldrb	w4, [x19]
  4642ec:	ldp	x7, x3, [sp, #120]
  4642f0:	b	463afc <_obstack_memory_used@@Base+0x126ec>
  4642f4:	mov	x0, x21
  4642f8:	mov	w1, w11
  4642fc:	mov	x21, x6
  464300:	bl	404410 <memset@plt>
  464304:	ldr	w12, [sp, #128]
  464308:	ldr	w5, [sp, #136]
  46430c:	ldr	x3, [sp, #144]
  464310:	b	46389c <_obstack_memory_used@@Base+0x1248c>
  464314:	mov	x0, x21
  464318:	mov	w1, w11
  46431c:	mov	x21, x8
  464320:	str	w11, [sp, #120]
  464324:	str	w12, [sp, #128]
  464328:	bl	404410 <memset@plt>
  46432c:	ldr	w11, [sp, #120]
  464330:	ldr	w12, [sp, #128]
  464334:	ldr	w7, [sp, #136]
  464338:	ldr	w5, [sp, #144]
  46433c:	ldp	x4, x6, [sp, #152]
  464340:	ldr	x3, [sp, #168]
  464344:	b	46333c <_obstack_memory_used@@Base+0x11f2c>
  464348:	ldr	w15, [sp, #108]
  46434c:	mov	w7, w8
  464350:	b	463110 <_obstack_memory_used@@Base+0x11d00>
  464354:	mov	w7, #0x0                   	// #0
  464358:	b	463140 <_obstack_memory_used@@Base+0x11d30>
  46435c:	mov	w2, w4
  464360:	mov	w8, #0xffffffff            	// #-1
  464364:	b	462e24 <_obstack_memory_used@@Base+0x11a14>
  464368:	mov	x19, x4
  46436c:	b	462ce8 <_obstack_memory_used@@Base+0x118d8>
  464370:	stp	x29, x30, [sp, #-32]!
  464374:	mov	x6, x4
  464378:	mov	w7, w5
  46437c:	mov	x29, sp
  464380:	add	x5, sp, #0x1f
  464384:	mov	w4, #0x0                   	// #0
  464388:	strb	wzr, [sp, #31]
  46438c:	bl	462b88 <_obstack_memory_used@@Base+0x11778>
  464390:	ldp	x29, x30, [sp], #32
  464394:	ret
  464398:	stp	x29, x30, [sp, #-64]!
  46439c:	mov	x29, sp
  4643a0:	str	x3, [sp, #56]
  4643a4:	mov	w3, #0x0                   	// #0
  4643a8:	tbnz	w2, #6, 4643bc <_obstack_memory_used@@Base+0x12fac>
  4643ac:	bl	404ab0 <openat@plt>
  4643b0:	bl	4643e8 <_obstack_memory_used@@Base+0x12fd8>
  4643b4:	ldp	x29, x30, [sp], #64
  4643b8:	ret
  4643bc:	mov	w3, #0xfffffff8            	// #-8
  4643c0:	stp	w3, wzr, [sp, #40]
  4643c4:	ldr	w3, [sp, #56]
  4643c8:	add	x4, sp, #0x30
  4643cc:	add	x5, sp, #0x40
  4643d0:	stp	x5, x5, [sp, #16]
  4643d4:	str	x4, [sp, #32]
  4643d8:	bl	404ab0 <openat@plt>
  4643dc:	bl	4643e8 <_obstack_memory_used@@Base+0x12fd8>
  4643e0:	ldp	x29, x30, [sp], #64
  4643e4:	ret
  4643e8:	stp	x29, x30, [sp, #-48]!
  4643ec:	cmp	w0, #0x2
  4643f0:	mov	x29, sp
  4643f4:	stp	x19, x20, [sp, #16]
  4643f8:	mov	w19, w0
  4643fc:	b.ls	464410 <_obstack_memory_used@@Base+0x13000>  // b.plast
  464400:	mov	w0, w19
  464404:	ldp	x19, x20, [sp, #16]
  464408:	ldp	x29, x30, [sp], #48
  46440c:	ret
  464410:	str	x21, [sp, #32]
  464414:	bl	466110 <_obstack_memory_used@@Base+0x14d00>
  464418:	mov	w21, w0
  46441c:	bl	404ad0 <__errno_location@plt>
  464420:	mov	x20, x0
  464424:	mov	w0, w19
  464428:	mov	w19, w21
  46442c:	ldr	w21, [x20]
  464430:	bl	4045c0 <close@plt>
  464434:	str	w21, [x20]
  464438:	mov	w0, w19
  46443c:	ldp	x19, x20, [sp, #16]
  464440:	ldr	x21, [sp, #32]
  464444:	ldp	x29, x30, [sp], #48
  464448:	ret
  46444c:	nop
  464450:	stp	x29, x30, [sp, #-128]!
  464454:	mov	x29, sp
  464458:	stp	x23, x24, [sp, #48]
  46445c:	mov	x24, x1
  464460:	stp	x19, x20, [sp, #16]
  464464:	mov	x20, x0
  464468:	ldp	x0, x1, [x1]
  46446c:	stp	x0, x1, [sp, #96]
  464470:	ldp	x0, x1, [x24, #16]
  464474:	stp	x21, x22, [sp, #32]
  464478:	ldr	w22, [x24, #24]
  46447c:	stp	x25, x26, [sp, #64]
  464480:	stp	x0, x1, [sp, #112]
  464484:	ldr	x21, [x24]
  464488:	cbz	x20, 4645fc <_obstack_memory_used@@Base+0x131ec>
  46448c:	mov	x19, #0x0                   	// #0
  464490:	mov	x23, #0xffffffffffffffff    	// #-1
  464494:	stp	x27, x28, [sp, #80]
  464498:	mov	x28, x20
  46449c:	ldr	w27, [sp, #120]
  4644a0:	ldp	x26, x25, [sp, #96]
  4644a4:	b	4644cc <_obstack_memory_used@@Base+0x130bc>
  4644a8:	mov	x3, x26
  4644ac:	mov	x26, x2
  4644b0:	str	x2, [sp, #96]
  4644b4:	ldr	x0, [x3]
  4644b8:	bl	403ff0 <strlen@plt>
  4644bc:	adds	x19, x0, x19
  4644c0:	csel	x19, x19, x23, cc  // cc = lo, ul, last
  4644c4:	subs	x28, x28, #0x1
  4644c8:	b.eq	46451c <_obstack_memory_used@@Base+0x1310c>  // b.none
  4644cc:	add	x2, x26, #0xf
  4644d0:	add	w1, w27, #0x8
  4644d4:	and	x2, x2, #0xfffffffffffffff8
  4644d8:	tbz	w27, #31, 4644a8 <_obstack_memory_used@@Base+0x13098>
  4644dc:	str	w1, [sp, #120]
  4644e0:	add	x0, x26, #0xf
  4644e4:	add	x3, x25, w27, sxtw
  4644e8:	and	x0, x0, #0xfffffffffffffff8
  4644ec:	mov	w27, w1
  4644f0:	cmp	w1, #0x0
  4644f4:	b.le	4644b4 <_obstack_memory_used@@Base+0x130a4>
  4644f8:	mov	x3, x26
  4644fc:	str	x0, [sp, #96]
  464500:	mov	x26, x0
  464504:	ldr	x0, [x3]
  464508:	bl	403ff0 <strlen@plt>
  46450c:	adds	x19, x0, x19
  464510:	csel	x19, x19, x23, cc  // cc = lo, ul, last
  464514:	subs	x28, x28, #0x1
  464518:	b.ne	4644cc <_obstack_memory_used@@Base+0x130bc>  // b.any
  46451c:	mov	x0, #0x7fffffff            	// #2147483647
  464520:	cmp	x19, x0
  464524:	b.hi	4645cc <_obstack_memory_used@@Base+0x131bc>  // b.pmore
  464528:	add	x0, x19, #0x1
  46452c:	bl	4501a0 <argp_parse@@Base+0x103c0>
  464530:	mov	x25, x0
  464534:	mov	x23, x0
  464538:	b	464570 <_obstack_memory_used@@Base+0x13160>
  46453c:	mov	x1, x21
  464540:	and	x21, x2, #0xfffffffffffffff8
  464544:	ldr	x19, [x1]
  464548:	mov	x0, x19
  46454c:	bl	403ff0 <strlen@plt>
  464550:	mov	x1, x19
  464554:	mov	x19, x0
  464558:	mov	x2, x19
  46455c:	mov	x0, x23
  464560:	bl	403f70 <memcpy@plt>
  464564:	add	x23, x23, x19
  464568:	subs	x20, x20, #0x1
  46456c:	b.eq	4645a8 <_obstack_memory_used@@Base+0x13198>  // b.none
  464570:	add	x2, x21, #0xf
  464574:	add	w0, w22, #0x8
  464578:	tbz	w22, #31, 46453c <_obstack_memory_used@@Base+0x1312c>
  46457c:	add	x2, x21, #0xf
  464580:	cmp	w0, #0x0
  464584:	b.le	464598 <_obstack_memory_used@@Base+0x13188>
  464588:	mov	x1, x21
  46458c:	mov	w22, w0
  464590:	and	x21, x2, #0xfffffffffffffff8
  464594:	b	464544 <_obstack_memory_used@@Base+0x13134>
  464598:	ldr	x1, [x24, #8]
  46459c:	add	x1, x1, w22, sxtw
  4645a0:	mov	w22, w0
  4645a4:	b	464544 <_obstack_memory_used@@Base+0x13134>
  4645a8:	ldp	x27, x28, [sp, #80]
  4645ac:	strb	wzr, [x23]
  4645b0:	mov	x0, x25
  4645b4:	ldp	x19, x20, [sp, #16]
  4645b8:	ldp	x21, x22, [sp, #32]
  4645bc:	ldp	x23, x24, [sp, #48]
  4645c0:	ldp	x25, x26, [sp, #64]
  4645c4:	ldp	x29, x30, [sp], #128
  4645c8:	ret
  4645cc:	bl	404ad0 <__errno_location@plt>
  4645d0:	mov	x25, #0x0                   	// #0
  4645d4:	mov	w1, #0x4b                  	// #75
  4645d8:	ldp	x27, x28, [sp, #80]
  4645dc:	str	w1, [x0]
  4645e0:	mov	x0, x25
  4645e4:	ldp	x19, x20, [sp, #16]
  4645e8:	ldp	x21, x22, [sp, #32]
  4645ec:	ldp	x23, x24, [sp, #48]
  4645f0:	ldp	x25, x26, [sp, #64]
  4645f4:	ldp	x29, x30, [sp], #128
  4645f8:	ret
  4645fc:	mov	x0, #0x1                   	// #1
  464600:	bl	4501a0 <argp_parse@@Base+0x103c0>
  464604:	mov	x23, x0
  464608:	mov	x25, x0
  46460c:	b	4645ac <_obstack_memory_used@@Base+0x1319c>
  464610:	mov	x2, x0
  464614:	stp	x29, x30, [sp, #-96]!
  464618:	mov	x4, x0
  46461c:	mov	x29, sp
  464620:	ldrb	w3, [x2]
  464624:	mov	x0, #0x0                   	// #0
  464628:	cbnz	w3, 464648 <_obstack_memory_used@@Base+0x13238>
  46462c:	b	4646a4 <_obstack_memory_used@@Base+0x13294>
  464630:	ldrb	w3, [x4, #1]
  464634:	cmp	w3, #0x73
  464638:	b.ne	464650 <_obstack_memory_used@@Base+0x13240>  // b.any
  46463c:	ldrb	w3, [x4, #2]!
  464640:	add	x0, x0, #0x1
  464644:	cbz	w3, 4646a4 <_obstack_memory_used@@Base+0x13294>
  464648:	cmp	w3, #0x25
  46464c:	b.eq	464630 <_obstack_memory_used@@Base+0x13220>  // b.none
  464650:	ldp	x6, x7, [x1]
  464654:	add	x3, sp, #0x10
  464658:	ldp	x4, x5, [x1, #16]
  46465c:	add	x0, sp, #0x38
  464660:	mov	w1, #0x1                   	// #1
  464664:	stp	x6, x7, [sp, #16]
  464668:	stp	x4, x5, [sp, #32]
  46466c:	stp	x6, x7, [sp, #64]
  464670:	stp	x4, x5, [sp, #80]
  464674:	bl	404350 <__vasprintf_chk@plt>
  464678:	tbnz	w0, #31, 464688 <_obstack_memory_used@@Base+0x13278>
  46467c:	ldr	x0, [sp, #56]
  464680:	ldp	x29, x30, [sp], #96
  464684:	ret
  464688:	bl	404ad0 <__errno_location@plt>
  46468c:	mov	x1, x0
  464690:	mov	x0, #0x0                   	// #0
  464694:	ldr	w1, [x1]
  464698:	cmp	w1, #0xc
  46469c:	b.ne	464680 <_obstack_memory_used@@Base+0x13270>  // b.any
  4646a0:	bl	4104a0 <wcrtomb@plt+0xb880>
  4646a4:	ldp	x4, x5, [x1]
  4646a8:	ldp	x2, x3, [x1, #16]
  4646ac:	add	x1, sp, #0x10
  4646b0:	stp	x4, x5, [sp, #16]
  4646b4:	stp	x2, x3, [sp, #32]
  4646b8:	bl	464450 <_obstack_memory_used@@Base+0x13040>
  4646bc:	ldp	x29, x30, [sp], #96
  4646c0:	ret
  4646c4:	nop
  4646c8:	ldp	w11, w5, [x1, #44]
  4646cc:	ldr	w10, [x1]
  4646d0:	cmp	w11, w5
  4646d4:	ccmp	w5, w10, #0x0, lt  // lt = tstop
  4646d8:	b.ge	4648a8 <_obstack_memory_used@@Base+0x13498>  // b.tcont
  4646dc:	sbfiz	x8, x5, #3, #32
  4646e0:	sxtw	x13, w5
  4646e4:	add	x9, x8, #0x10
  4646e8:	add	x7, x0, x8
  4646ec:	mov	w6, w10
  4646f0:	mov	w4, w11
  4646f4:	add	x12, x0, #0x8
  4646f8:	stp	x29, x30, [sp, #-16]!
  4646fc:	mov	x29, sp
  464700:	sub	w16, w6, w5
  464704:	sub	w17, w5, w4
  464708:	cmp	w16, w17
  46470c:	b.le	4647bc <_obstack_memory_used@@Base+0x133ac>
  464710:	sxtw	x18, w4
  464714:	sub	w6, w6, w17
  464718:	add	x2, x18, #0x2
  46471c:	sub	w16, w17, #0x1
  464720:	sbfiz	x14, x6, #3, #32
  464724:	sxtw	x15, w6
  464728:	lsl	x2, x2, #3
  46472c:	add	x30, x14, #0x10
  464730:	sub	x3, x2, #0x10
  464734:	cmp	x3, x30
  464738:	ccmp	x14, x2, #0x0, lt  // lt = tstop
  46473c:	ccmp	w16, #0x4, #0x0, ge  // ge = tcont
  464740:	b.ls	464874 <_obstack_memory_used@@Base+0x13464>  // b.plast
  464744:	lsr	w15, w17, #1
  464748:	add	x3, x0, x3
  46474c:	add	x14, x0, x14
  464750:	mov	x2, #0x0                   	// #0
  464754:	lsl	x15, x15, #4
  464758:	ldr	q1, [x14, x2]
  46475c:	ldr	q0, [x3, x2]
  464760:	str	q1, [x3, x2]
  464764:	str	q0, [x14, x2]
  464768:	add	x2, x2, #0x10
  46476c:	cmp	x15, x2
  464770:	b.ne	464758 <_obstack_memory_used@@Base+0x13348>  // b.any
  464774:	and	w2, w17, #0xfffffffe
  464778:	tbz	w17, #0, 46479c <_obstack_memory_used@@Base+0x1338c>
  46477c:	add	w3, w2, w6
  464780:	add	w2, w2, w4
  464784:	sxtw	x3, w3
  464788:	sxtw	x2, w2
  46478c:	ldr	x15, [x0, x3, lsl #3]
  464790:	ldr	x14, [x0, x2, lsl #3]
  464794:	str	x15, [x0, x2, lsl #3]
  464798:	str	x14, [x0, x3, lsl #3]
  46479c:	cmp	w6, w5
  4647a0:	ccmp	w4, w5, #0x0, gt
  4647a4:	b.lt	464700 <_obstack_memory_used@@Base+0x132f0>  // b.tstop
  4647a8:	sub	w5, w10, w5
  4647ac:	add	w11, w5, w11
  4647b0:	stp	w11, w10, [x1, #44]
  4647b4:	ldp	x29, x30, [sp], #16
  4647b8:	ret
  4647bc:	sxtw	x14, w4
  4647c0:	sub	w2, w16, #0x1
  4647c4:	add	x3, x14, #0x2
  4647c8:	lsl	x3, x3, #3
  4647cc:	cmp	x3, x8
  4647d0:	sub	x3, x3, #0x10
  4647d4:	ccmp	x9, x3, #0x4, gt
  4647d8:	ccmp	w2, #0x4, #0x0, le
  4647dc:	b.ls	46483c <_obstack_memory_used@@Base+0x1342c>  // b.plast
  4647e0:	lsr	w14, w16, #1
  4647e4:	add	x3, x0, x3
  4647e8:	mov	x2, #0x0                   	// #0
  4647ec:	lsl	x14, x14, #4
  4647f0:	ldr	q1, [x7, x2]
  4647f4:	ldr	q0, [x3, x2]
  4647f8:	str	q1, [x3, x2]
  4647fc:	str	q0, [x7, x2]
  464800:	add	x2, x2, #0x10
  464804:	cmp	x2, x14
  464808:	b.ne	4647f0 <_obstack_memory_used@@Base+0x133e0>  // b.any
  46480c:	and	w2, w16, #0xfffffffe
  464810:	tbz	w16, #0, 464834 <_obstack_memory_used@@Base+0x13424>
  464814:	add	w3, w5, w2
  464818:	add	w2, w4, w2
  46481c:	sxtw	x3, w3
  464820:	sxtw	x2, w2
  464824:	ldr	x15, [x0, x3, lsl #3]
  464828:	ldr	x14, [x0, x2, lsl #3]
  46482c:	str	x15, [x0, x2, lsl #3]
  464830:	str	x14, [x0, x3, lsl #3]
  464834:	add	w4, w4, w16
  464838:	b	46479c <_obstack_memory_used@@Base+0x1338c>
  46483c:	add	x15, x14, w2, uxtw
  464840:	add	x2, x0, x3
  464844:	sub	x3, x13, x14
  464848:	add	x14, x12, x15, lsl #3
  46484c:	nop
  464850:	ldr	x17, [x2, x3, lsl #3]
  464854:	ldr	x15, [x2]
  464858:	str	x17, [x2]
  46485c:	str	x15, [x2, x3, lsl #3]
  464860:	add	x2, x2, #0x8
  464864:	cmp	x2, x14
  464868:	b.ne	464850 <_obstack_memory_used@@Base+0x13440>  // b.any
  46486c:	add	w4, w4, w16
  464870:	b	46479c <_obstack_memory_used@@Base+0x1338c>
  464874:	add	x14, x18, w16, uxtw
  464878:	add	x2, x0, x3
  46487c:	sub	x3, x15, x18
  464880:	add	x14, x12, x14, lsl #3
  464884:	nop
  464888:	ldr	x16, [x2, x3, lsl #3]
  46488c:	ldr	x15, [x2]
  464890:	str	x16, [x2]
  464894:	str	x15, [x2, x3, lsl #3]
  464898:	add	x2, x2, #0x8
  46489c:	cmp	x14, x2
  4648a0:	b.ne	464888 <_obstack_memory_used@@Base+0x13478>  // b.any
  4648a4:	b	46479c <_obstack_memory_used@@Base+0x1338c>
  4648a8:	sub	w5, w10, w5
  4648ac:	add	w11, w5, w11
  4648b0:	stp	w11, w10, [x1, #44]
  4648b4:	ret
  4648b8:	stp	x29, x30, [sp, #-176]!
  4648bc:	mov	x29, sp
  4648c0:	stp	x23, x24, [sp, #48]
  4648c4:	ldr	x23, [x6, #32]
  4648c8:	stp	x19, x20, [sp, #16]
  4648cc:	stp	x21, x22, [sp, #32]
  4648d0:	mov	x22, x23
  4648d4:	stp	x25, x26, [sp, #64]
  4648d8:	mov	x26, x6
  4648dc:	mov	x25, x3
  4648e0:	stp	x27, x28, [sp, #80]
  4648e4:	ldrb	w28, [x23]
  4648e8:	stp	w7, w5, [sp, #104]
  4648ec:	stp	x4, x1, [sp, #112]
  4648f0:	cmp	w28, #0x3d
  4648f4:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  4648f8:	str	x2, [sp, #128]
  4648fc:	str	w0, [sp, #152]
  464900:	b.eq	464c9c <_obstack_memory_used@@Base+0x1388c>  // b.none
  464904:	nop
  464908:	ldrb	w0, [x22, #1]!
  46490c:	cmp	w0, #0x3d
  464910:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  464914:	b.ne	464908 <_obstack_memory_used@@Base+0x134f8>  // b.any
  464918:	sub	x21, x22, x23
  46491c:	ldr	x24, [x25]
  464920:	mov	x19, x25
  464924:	mov	x20, #0x0                   	// #0
  464928:	mov	x27, x24
  46492c:	cbnz	x24, 464938 <_obstack_memory_used@@Base+0x13528>
  464930:	b	464b60 <_obstack_memory_used@@Base+0x13750>
  464934:	sxtw	x20, w0
  464938:	mov	x1, x23
  46493c:	mov	x2, x21
  464940:	mov	x0, x27
  464944:	bl	4043c0 <strncmp@plt>
  464948:	mov	w1, w0
  46494c:	mov	x0, x27
  464950:	cbnz	w1, 464960 <_obstack_memory_used@@Base+0x13550>
  464954:	bl	403ff0 <strlen@plt>
  464958:	cmp	x0, x21
  46495c:	b.eq	464aa0 <_obstack_memory_used@@Base+0x13690>  // b.none
  464960:	ldr	x27, [x19, #32]!
  464964:	add	w0, w20, #0x1
  464968:	cbnz	x27, 464934 <_obstack_memory_used@@Base+0x13524>
  46496c:	ldr	w1, [sp, #104]
  464970:	cbz	w1, 464b10 <_obstack_memory_used@@Base+0x13700>
  464974:	ldr	w1, [sp, #108]
  464978:	sxtw	x0, w0
  46497c:	str	x0, [sp, #168]
  464980:	cbnz	w1, 4649f0 <_obstack_memory_used@@Base+0x135e0>
  464984:	mov	x3, x25
  464988:	mov	w0, #0xffffffff            	// #-1
  46498c:	mov	x19, #0x0                   	// #0
  464990:	mov	x4, #0x0                   	// #0
  464994:	stp	w0, wzr, [sp, #156]
  464998:	str	wzr, [sp, #164]
  46499c:	mov	x0, x24
  4649a0:	mov	x2, x21
  4649a4:	mov	x1, x23
  4649a8:	stp	x4, x3, [sp, #136]
  4649ac:	bl	4043c0 <strncmp@plt>
  4649b0:	ldp	x4, x3, [sp, #136]
  4649b4:	cbnz	w0, 4649e0 <_obstack_memory_used@@Base+0x135d0>
  4649b8:	cbz	x19, 464cb0 <_obstack_memory_used@@Base+0x138a0>
  4649bc:	ldr	w0, [x3, #8]
  4649c0:	ldr	w1, [x19, #8]
  4649c4:	cmp	w1, w0
  4649c8:	b.eq	464dac <_obstack_memory_used@@Base+0x1399c>  // b.none
  4649cc:	ldr	w0, [sp, #160]
  4649d0:	cbnz	w0, 4649e0 <_obstack_memory_used@@Base+0x135d0>
  4649d4:	cbz	x27, 464d4c <_obstack_memory_used@@Base+0x1393c>
  4649d8:	mov	w0, #0x1                   	// #1
  4649dc:	strb	w0, [x27, x4]
  4649e0:	ldr	x24, [x3, #32]!
  4649e4:	add	x4, x4, #0x1
  4649e8:	cbnz	x24, 46499c <_obstack_memory_used@@Base+0x1358c>
  4649ec:	b	464a7c <_obstack_memory_used@@Base+0x1366c>
  4649f0:	mov	x4, x25
  4649f4:	mov	w0, #0xffffffff            	// #-1
  4649f8:	mov	x19, #0x0                   	// #0
  4649fc:	mov	x3, #0x0                   	// #0
  464a00:	stp	w0, wzr, [sp, #156]
  464a04:	str	wzr, [sp, #164]
  464a08:	mov	x0, x24
  464a0c:	mov	x2, x21
  464a10:	mov	x1, x23
  464a14:	stp	x3, x4, [sp, #136]
  464a18:	bl	4043c0 <strncmp@plt>
  464a1c:	ldp	x3, x4, [sp, #136]
  464a20:	cbnz	w0, 464a70 <_obstack_memory_used@@Base+0x13660>
  464a24:	cbz	x19, 464ca4 <_obstack_memory_used@@Base+0x13894>
  464a28:	ldr	w0, [sp, #160]
  464a2c:	cbnz	w0, 464a70 <_obstack_memory_used@@Base+0x13660>
  464a30:	cbnz	x27, 464a64 <_obstack_memory_used@@Base+0x13654>
  464a34:	ldr	x0, [sp, #168]
  464a38:	mov	x1, #0x1                   	// #1
  464a3c:	stp	x3, x4, [sp, #136]
  464a40:	bl	4044c0 <calloc@plt>
  464a44:	mov	x27, x0
  464a48:	mov	w0, #0x1                   	// #1
  464a4c:	ldp	x3, x4, [sp, #136]
  464a50:	cbz	x27, 464f18 <_obstack_memory_used@@Base+0x13b08>
  464a54:	str	w0, [sp, #164]
  464a58:	mov	w1, #0x1                   	// #1
  464a5c:	ldr	w0, [sp, #156]
  464a60:	strb	w1, [x27, w0, sxtw]
  464a64:	mov	w0, #0x1                   	// #1
  464a68:	strb	w0, [x27, x3]
  464a6c:	nop
  464a70:	ldr	x24, [x4, #32]!
  464a74:	add	x3, x3, #0x1
  464a78:	cbnz	x24, 464a08 <_obstack_memory_used@@Base+0x135f8>
  464a7c:	ldr	w0, [sp, #160]
  464a80:	cmp	x27, #0x0
  464a84:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  464a88:	b.ne	464dd0 <_obstack_memory_used@@Base+0x139c0>  // b.any
  464a8c:	mov	x27, x19
  464a90:	cbz	x27, 464b60 <_obstack_memory_used@@Base+0x13750>
  464a94:	ldr	w20, [sp, #156]
  464a98:	mov	x19, x27
  464a9c:	nop
  464aa0:	ldr	w0, [x26]
  464aa4:	ldr	w21, [x19, #8]
  464aa8:	add	w1, w0, #0x1
  464aac:	str	w1, [x26]
  464ab0:	str	xzr, [x26, #32]
  464ab4:	ldrb	w2, [x22]
  464ab8:	cbnz	w2, 464b00 <_obstack_memory_used@@Base+0x136f0>
  464abc:	cmp	w21, #0x1
  464ac0:	b.eq	464c78 <_obstack_memory_used@@Base+0x13868>  // b.none
  464ac4:	ldr	x0, [sp, #112]
  464ac8:	cbz	x0, 464ad0 <_obstack_memory_used@@Base+0x136c0>
  464acc:	str	w20, [x0]
  464ad0:	ldr	x1, [x19, #16]
  464ad4:	ldr	w0, [x19, #24]
  464ad8:	cbz	x1, 464ae4 <_obstack_memory_used@@Base+0x136d4>
  464adc:	str	w0, [x1]
  464ae0:	mov	w0, #0x0                   	// #0
  464ae4:	ldp	x19, x20, [sp, #16]
  464ae8:	ldp	x21, x22, [sp, #32]
  464aec:	ldp	x23, x24, [sp, #48]
  464af0:	ldp	x25, x26, [sp, #64]
  464af4:	ldp	x27, x28, [sp, #80]
  464af8:	ldp	x29, x30, [sp], #176
  464afc:	ret
  464b00:	cbz	w21, 464cc8 <_obstack_memory_used@@Base+0x138b8>
  464b04:	add	x22, x22, #0x1
  464b08:	str	x22, [x26, #16]
  464b0c:	b	464ac4 <_obstack_memory_used@@Base+0x136b4>
  464b10:	ldr	w0, [sp, #108]
  464b14:	mov	w19, #0x0                   	// #0
  464b18:	mov	w20, #0x0                   	// #0
  464b1c:	cbz	w0, 464bcc <_obstack_memory_used@@Base+0x137bc>
  464b20:	mov	w0, #0xffffffff            	// #-1
  464b24:	str	w0, [sp, #156]
  464b28:	b	464b3c <_obstack_memory_used@@Base+0x1372c>
  464b2c:	mov	w19, #0x1                   	// #1
  464b30:	ldr	x24, [x25, #32]!
  464b34:	add	w20, w20, #0x1
  464b38:	cbz	x24, 464c0c <_obstack_memory_used@@Base+0x137fc>
  464b3c:	mov	x0, x24
  464b40:	mov	x2, x21
  464b44:	mov	x1, x23
  464b48:	bl	4043c0 <strncmp@plt>
  464b4c:	cbnz	w0, 464b30 <_obstack_memory_used@@Base+0x13720>
  464b50:	cbnz	x27, 464b2c <_obstack_memory_used@@Base+0x1371c>
  464b54:	mov	x27, x25
  464b58:	str	w20, [sp, #156]
  464b5c:	b	464b30 <_obstack_memory_used@@Base+0x13720>
  464b60:	ldr	w0, [sp, #108]
  464b64:	cbz	w0, 464b90 <_obstack_memory_used@@Base+0x13780>
  464b68:	ldrsw	x0, [x26]
  464b6c:	ldr	x1, [sp, #120]
  464b70:	ldr	x0, [x1, x0, lsl #3]
  464b74:	ldrb	w0, [x0, #1]
  464b78:	cmp	w0, #0x2d
  464b7c:	b.eq	464b90 <_obstack_memory_used@@Base+0x13780>  // b.none
  464b80:	ldr	x0, [sp, #128]
  464b84:	mov	w1, w28
  464b88:	bl	404870 <strchr@plt>
  464b8c:	cbnz	x0, 464d44 <_obstack_memory_used@@Base+0x13934>
  464b90:	ldr	w0, [sp, #104]
  464b94:	cbnz	w0, 464c38 <_obstack_memory_used@@Base+0x13828>
  464b98:	ldr	w1, [x26]
  464b9c:	mov	w0, #0x3f                  	// #63
  464ba0:	str	wzr, [x26, #8]
  464ba4:	add	w1, w1, #0x1
  464ba8:	str	w1, [x26]
  464bac:	str	xzr, [x26, #32]
  464bb0:	ldp	x19, x20, [sp, #16]
  464bb4:	ldp	x21, x22, [sp, #32]
  464bb8:	ldp	x23, x24, [sp, #48]
  464bbc:	ldp	x25, x26, [sp, #64]
  464bc0:	ldp	x27, x28, [sp, #80]
  464bc4:	ldp	x29, x30, [sp], #176
  464bc8:	ret
  464bcc:	mov	w0, #0xffffffff            	// #-1
  464bd0:	str	w0, [sp, #156]
  464bd4:	mov	x0, x24
  464bd8:	mov	x2, x21
  464bdc:	mov	x1, x23
  464be0:	bl	4043c0 <strncmp@plt>
  464be4:	cbnz	w0, 464c00 <_obstack_memory_used@@Base+0x137f0>
  464be8:	cbz	x27, 464cbc <_obstack_memory_used@@Base+0x138ac>
  464bec:	ldr	w0, [x25, #8]
  464bf0:	ldr	w1, [x27, #8]
  464bf4:	cmp	w1, w0
  464bf8:	b.eq	464ce0 <_obstack_memory_used@@Base+0x138d0>  // b.none
  464bfc:	mov	w19, #0x1                   	// #1
  464c00:	ldr	x24, [x25, #32]!
  464c04:	add	w20, w20, #0x1
  464c08:	cbnz	x24, 464bd4 <_obstack_memory_used@@Base+0x137c4>
  464c0c:	cbz	w19, 464a90 <_obstack_memory_used@@Base+0x13680>
  464c10:	mov	x0, x23
  464c14:	bl	403ff0 <strlen@plt>
  464c18:	ldr	w1, [x26]
  464c1c:	add	x23, x23, x0
  464c20:	mov	w0, #0x3f                  	// #63
  464c24:	str	wzr, [x26, #8]
  464c28:	add	w1, w1, #0x1
  464c2c:	str	w1, [x26]
  464c30:	str	x23, [x26, #32]
  464c34:	b	464ae4 <_obstack_memory_used@@Base+0x136d4>
  464c38:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  464c3c:	mov	w2, #0x5                   	// #5
  464c40:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  464c44:	add	x1, x1, #0x728
  464c48:	ldr	x19, [x0, #1176]
  464c4c:	mov	x0, #0x0                   	// #0
  464c50:	bl	4049c0 <dcgettext@plt>
  464c54:	mov	x2, x0
  464c58:	ldr	x0, [sp, #120]
  464c5c:	mov	w1, #0x1                   	// #1
  464c60:	ldr	x5, [x26, #32]
  464c64:	ldr	x3, [x0]
  464c68:	mov	x0, x19
  464c6c:	ldr	x4, [sp, #176]
  464c70:	bl	404700 <__fprintf_chk@plt>
  464c74:	b	464b98 <_obstack_memory_used@@Base+0x13788>
  464c78:	ldr	w2, [sp, #152]
  464c7c:	cmp	w1, w2
  464c80:	b.ge	464d80 <_obstack_memory_used@@Base+0x13970>  // b.tcont
  464c84:	ldr	x2, [sp, #120]
  464c88:	add	w0, w0, #0x2
  464c8c:	ldr	x1, [x2, w1, sxtw #3]
  464c90:	str	w0, [x26]
  464c94:	str	x1, [x26, #16]
  464c98:	b	464ac4 <_obstack_memory_used@@Base+0x136b4>
  464c9c:	mov	x21, #0x0                   	// #0
  464ca0:	b	46491c <_obstack_memory_used@@Base+0x1350c>
  464ca4:	mov	x19, x4
  464ca8:	str	w3, [sp, #156]
  464cac:	b	464a70 <_obstack_memory_used@@Base+0x13660>
  464cb0:	mov	x19, x3
  464cb4:	str	w4, [sp, #156]
  464cb8:	b	4649e0 <_obstack_memory_used@@Base+0x135d0>
  464cbc:	mov	x27, x25
  464cc0:	str	w20, [sp, #156]
  464cc4:	b	464c00 <_obstack_memory_used@@Base+0x137f0>
  464cc8:	ldr	w0, [sp, #104]
  464ccc:	cbnz	w0, 464d04 <_obstack_memory_used@@Base+0x138f4>
  464cd0:	ldr	w1, [x19, #24]
  464cd4:	mov	w0, #0x3f                  	// #63
  464cd8:	str	w1, [x26, #8]
  464cdc:	b	464ae4 <_obstack_memory_used@@Base+0x136d4>
  464ce0:	ldr	x0, [x25, #16]
  464ce4:	ldr	x1, [x27, #16]
  464ce8:	cmp	x1, x0
  464cec:	b.ne	464bfc <_obstack_memory_used@@Base+0x137ec>  // b.any
  464cf0:	ldr	w0, [x25, #24]
  464cf4:	ldr	w1, [x27, #24]
  464cf8:	cmp	w1, w0
  464cfc:	csinc	w19, w19, wzr, eq  // eq = none
  464d00:	b	464c00 <_obstack_memory_used@@Base+0x137f0>
  464d04:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  464d08:	mov	w2, #0x5                   	// #5
  464d0c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  464d10:	add	x1, x1, #0x748
  464d14:	ldr	x20, [x0, #1176]
  464d18:	mov	x0, #0x0                   	// #0
  464d1c:	bl	4049c0 <dcgettext@plt>
  464d20:	mov	x2, x0
  464d24:	ldr	x0, [sp, #120]
  464d28:	mov	w1, #0x1                   	// #1
  464d2c:	ldr	x5, [x19]
  464d30:	ldr	x3, [x0]
  464d34:	mov	x0, x20
  464d38:	ldr	x4, [sp, #176]
  464d3c:	bl	404700 <__fprintf_chk@plt>
  464d40:	b	464cd0 <_obstack_memory_used@@Base+0x138c0>
  464d44:	mov	w0, #0xffffffff            	// #-1
  464d48:	b	464ae4 <_obstack_memory_used@@Base+0x136d4>
  464d4c:	ldr	x0, [sp, #168]
  464d50:	mov	x1, #0x1                   	// #1
  464d54:	stp	x4, x3, [sp, #136]
  464d58:	bl	4044c0 <calloc@plt>
  464d5c:	mov	x27, x0
  464d60:	mov	w0, #0x1                   	// #1
  464d64:	ldp	x4, x3, [sp, #136]
  464d68:	cbz	x27, 464f20 <_obstack_memory_used@@Base+0x13b10>
  464d6c:	str	w0, [sp, #164]
  464d70:	mov	w1, #0x1                   	// #1
  464d74:	ldr	w0, [sp, #156]
  464d78:	strb	w1, [x27, w0, sxtw]
  464d7c:	b	4649d8 <_obstack_memory_used@@Base+0x135c8>
  464d80:	ldr	w0, [sp, #104]
  464d84:	cbnz	w0, 464ed8 <_obstack_memory_used@@Base+0x13ac8>
  464d88:	ldr	x2, [sp, #128]
  464d8c:	mov	w0, #0x3a                  	// #58
  464d90:	ldr	w1, [x19, #24]
  464d94:	str	w1, [x26, #8]
  464d98:	mov	w1, #0x3f                  	// #63
  464d9c:	ldrb	w2, [x2]
  464da0:	cmp	w2, w0
  464da4:	csel	w0, w0, w1, eq  // eq = none
  464da8:	b	464ae4 <_obstack_memory_used@@Base+0x136d4>
  464dac:	ldr	x1, [x3, #16]
  464db0:	ldr	x0, [x19, #16]
  464db4:	cmp	x1, x0
  464db8:	b.ne	4649cc <_obstack_memory_used@@Base+0x135bc>  // b.any
  464dbc:	ldr	w0, [x3, #24]
  464dc0:	ldr	w1, [x19, #24]
  464dc4:	cmp	w1, w0
  464dc8:	b.ne	4649cc <_obstack_memory_used@@Base+0x135bc>  // b.any
  464dcc:	b	4649e0 <_obstack_memory_used@@Base+0x135d0>
  464dd0:	ldr	w0, [sp, #160]
  464dd4:	adrp	x21, 496000 <_obstack_memory_used@@Base+0x44bf0>
  464dd8:	ldr	x19, [x21, #1176]
  464ddc:	cbz	w0, 464e2c <_obstack_memory_used@@Base+0x13a1c>
  464de0:	mov	w2, #0x5                   	// #5
  464de4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  464de8:	mov	x0, #0x0                   	// #0
  464dec:	add	x1, x1, #0x6d0
  464df0:	bl	4049c0 <dcgettext@plt>
  464df4:	mov	x2, x0
  464df8:	ldr	x1, [sp, #120]
  464dfc:	mov	x0, x19
  464e00:	ldr	x5, [x26, #32]
  464e04:	ldr	x3, [x1]
  464e08:	mov	w1, #0x1                   	// #1
  464e0c:	ldr	x4, [sp, #176]
  464e10:	bl	404700 <__fprintf_chk@plt>
  464e14:	ldr	x23, [x26, #32]
  464e18:	ldr	w0, [sp, #164]
  464e1c:	cbz	w0, 464c10 <_obstack_memory_used@@Base+0x13800>
  464e20:	mov	x0, x27
  464e24:	bl	4047b0 <free@plt>
  464e28:	b	464c10 <_obstack_memory_used@@Base+0x13800>
  464e2c:	mov	x0, x19
  464e30:	bl	404090 <flockfile@plt>
  464e34:	mov	w2, #0x5                   	// #5
  464e38:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  464e3c:	ldr	x19, [x21, #1176]
  464e40:	add	x1, x1, #0x6f0
  464e44:	mov	x0, #0x0                   	// #0
  464e48:	bl	4049c0 <dcgettext@plt>
  464e4c:	ldr	x1, [sp, #120]
  464e50:	mov	x2, x0
  464e54:	ldr	x5, [x26, #32]
  464e58:	mov	x0, x19
  464e5c:	ldr	x3, [x1]
  464e60:	add	x20, x20, #0x1
  464e64:	ldr	x4, [sp, #176]
  464e68:	mov	w1, #0x1                   	// #1
  464e6c:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x21bf0>
  464e70:	mov	x19, x27
  464e74:	add	x20, x20, x27
  464e78:	add	x22, x22, #0x720
  464e7c:	bl	404700 <__fprintf_chk@plt>
  464e80:	ldr	x0, [x21, #1176]
  464e84:	b	464e94 <_obstack_memory_used@@Base+0x13a84>
  464e88:	add	x25, x25, #0x20
  464e8c:	cmp	x20, x19
  464e90:	b.eq	464ebc <_obstack_memory_used@@Base+0x13aac>  // b.none
  464e94:	ldrb	w3, [x19]
  464e98:	add	x19, x19, #0x1
  464e9c:	cbz	w3, 464e88 <_obstack_memory_used@@Base+0x13a78>
  464ea0:	ldr	x4, [x25]
  464ea4:	mov	x2, x22
  464ea8:	ldr	x3, [sp, #176]
  464eac:	mov	w1, #0x1                   	// #1
  464eb0:	bl	404700 <__fprintf_chk@plt>
  464eb4:	ldr	x0, [x21, #1176]
  464eb8:	b	464e88 <_obstack_memory_used@@Base+0x13a78>
  464ebc:	mov	x1, x0
  464ec0:	mov	w0, #0xa                   	// #10
  464ec4:	bl	404170 <fputc@plt>
  464ec8:	ldr	x0, [x21, #1176]
  464ecc:	bl	404330 <funlockfile@plt>
  464ed0:	ldr	x23, [x26, #32]
  464ed4:	b	464e18 <_obstack_memory_used@@Base+0x13a08>
  464ed8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  464edc:	mov	w2, #0x5                   	// #5
  464ee0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  464ee4:	add	x1, x1, #0x778
  464ee8:	ldr	x20, [x0, #1176]
  464eec:	mov	x0, #0x0                   	// #0
  464ef0:	bl	4049c0 <dcgettext@plt>
  464ef4:	mov	x2, x0
  464ef8:	ldr	x0, [sp, #120]
  464efc:	mov	w1, w21
  464f00:	ldr	x5, [x19]
  464f04:	ldr	x3, [x0]
  464f08:	mov	x0, x20
  464f0c:	ldr	x4, [sp, #176]
  464f10:	bl	404700 <__fprintf_chk@plt>
  464f14:	b	464d88 <_obstack_memory_used@@Base+0x13978>
  464f18:	str	w0, [sp, #160]
  464f1c:	b	464a70 <_obstack_memory_used@@Base+0x13660>
  464f20:	str	w0, [sp, #160]
  464f24:	b	4649e0 <_obstack_memory_used@@Base+0x135d0>
  464f28:	sub	sp, sp, #0x70
  464f2c:	cmp	w0, #0x0
  464f30:	stp	x29, x30, [sp, #16]
  464f34:	add	x29, sp, #0x10
  464f38:	stp	x25, x26, [sp, #80]
  464f3c:	ldr	w26, [x6, #4]
  464f40:	b.le	4653f0 <_obstack_memory_used@@Base+0x13fe0>
  464f44:	stp	x19, x20, [sp, #32]
  464f48:	mov	w20, w0
  464f4c:	ldr	w0, [x6]
  464f50:	stp	x21, x22, [sp, #48]
  464f54:	mov	x19, x6
  464f58:	mov	x25, x3
  464f5c:	stp	x23, x24, [sp, #64]
  464f60:	mov	x22, x4
  464f64:	mov	x23, x1
  464f68:	stp	x27, x28, [sp, #96]
  464f6c:	mov	x24, x2
  464f70:	mov	w27, w5
  464f74:	str	xzr, [x6, #16]
  464f78:	cbz	w0, 46516c <_obstack_memory_used@@Base+0x13d5c>
  464f7c:	ldr	w1, [x6, #24]
  464f80:	cbnz	w1, 464fb4 <_obstack_memory_used@@Base+0x13ba4>
  464f84:	dup	v0.2s, w0
  464f88:	str	xzr, [x19, #32]
  464f8c:	stur	d0, [x19, #44]
  464f90:	ldrb	w0, [x24]
  464f94:	cmp	w0, #0x2d
  464f98:	b.eq	465078 <_obstack_memory_used@@Base+0x13c68>  // b.none
  464f9c:	cmp	w0, #0x2b
  464fa0:	b.eq	465394 <_obstack_memory_used@@Base+0x13f84>  // b.none
  464fa4:	mov	x21, #0x0                   	// #0
  464fa8:	cbz	w7, 465318 <_obstack_memory_used@@Base+0x13f08>
  464fac:	str	wzr, [x19, #40]
  464fb0:	b	465088 <_obstack_memory_used@@Base+0x13c78>
  464fb4:	ldrb	w0, [x2]
  464fb8:	mov	w1, #0xfd                  	// #253
  464fbc:	ldr	x21, [x6, #32]
  464fc0:	sub	w2, w0, #0x2b
  464fc4:	tst	w2, w1
  464fc8:	b.ne	465094 <_obstack_memory_used@@Base+0x13c84>  // b.any
  464fcc:	ldrb	w0, [x24, #1]
  464fd0:	add	x24, x24, #0x1
  464fd4:	cmp	w0, #0x3a
  464fd8:	csel	w26, w26, wzr, ne  // ne = any
  464fdc:	cbnz	x21, 4650a0 <_obstack_memory_used@@Base+0x13c90>
  464fe0:	ldr	w8, [x19]
  464fe4:	ldr	w0, [x19, #48]
  464fe8:	cmp	w0, w8
  464fec:	b.le	464ff4 <_obstack_memory_used@@Base+0x13be4>
  464ff0:	str	w8, [x19, #48]
  464ff4:	ldr	w0, [x19, #44]
  464ff8:	cmp	w8, w0
  464ffc:	b.ge	465008 <_obstack_memory_used@@Base+0x13bf8>  // b.tcont
  465000:	mov	w0, w8
  465004:	str	w8, [x19, #44]
  465008:	ldr	w1, [x19, #40]
  46500c:	cmp	w1, #0x1
  465010:	b.eq	4651bc <_obstack_memory_used@@Base+0x13dac>  // b.none
  465014:	cmp	w20, w8
  465018:	b.eq	465194 <_obstack_memory_used@@Base+0x13d84>  // b.none
  46501c:	ldr	x21, [x23, w8, sxtw #3]
  465020:	ldrb	w0, [x21]
  465024:	cmp	w0, #0x2d
  465028:	b.ne	465128 <_obstack_memory_used@@Base+0x13d18>  // b.any
  46502c:	ldrb	w0, [x21, #1]
  465030:	cmp	w0, #0x2d
  465034:	b.ne	465128 <_obstack_memory_used@@Base+0x13d18>  // b.any
  465038:	ldrb	w0, [x21, #2]
  46503c:	cbnz	w0, 465128 <_obstack_memory_used@@Base+0x13d18>
  465040:	ldp	w1, w0, [x19, #44]
  465044:	add	w8, w8, #0x1
  465048:	str	w8, [x19]
  46504c:	cmp	w1, w0
  465050:	b.eq	4653f8 <_obstack_memory_used@@Base+0x13fe8>  // b.none
  465054:	cmp	w8, w0
  465058:	b.eq	46506c <_obstack_memory_used@@Base+0x13c5c>  // b.none
  46505c:	mov	x1, x19
  465060:	mov	x0, x23
  465064:	bl	4646c8 <_obstack_memory_used@@Base+0x132b8>
  465068:	ldr	w1, [x19, #44]
  46506c:	str	w20, [x19]
  465070:	str	w20, [x19, #48]
  465074:	b	465198 <_obstack_memory_used@@Base+0x13d88>
  465078:	add	x24, x24, #0x1
  46507c:	mov	w0, #0x2                   	// #2
  465080:	mov	x21, #0x0                   	// #0
  465084:	str	w0, [x19, #40]
  465088:	mov	w0, #0x1                   	// #1
  46508c:	str	w0, [x19, #24]
  465090:	ldrb	w0, [x24]
  465094:	cmp	w0, #0x3a
  465098:	csel	w26, w26, wzr, ne  // ne = any
  46509c:	cbz	x21, 464fe0 <_obstack_memory_used@@Base+0x13bd0>
  4650a0:	ldrb	w0, [x21]
  4650a4:	cbz	w0, 464fe0 <_obstack_memory_used@@Base+0x13bd0>
  4650a8:	add	x28, x21, #0x1
  4650ac:	str	x28, [x19, #32]
  4650b0:	mov	x0, x24
  4650b4:	ldrb	w27, [x21]
  4650b8:	mov	w1, w27
  4650bc:	bl	404870 <strchr@plt>
  4650c0:	ldrb	w1, [x21, #1]
  4650c4:	mov	x2, x0
  4650c8:	mov	w0, w27
  4650cc:	cbnz	w1, 4650dc <_obstack_memory_used@@Base+0x13ccc>
  4650d0:	ldr	w1, [x19]
  4650d4:	add	w1, w1, #0x1
  4650d8:	str	w1, [x19]
  4650dc:	sub	w1, w27, #0x3a
  4650e0:	cmp	x2, #0x0
  4650e4:	and	w1, w1, #0xff
  4650e8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4650ec:	b.ls	4653a4 <_obstack_memory_used@@Base+0x13f94>  // b.plast
  4650f0:	ldrb	w3, [x2]
  4650f4:	ldrb	w1, [x2, #1]
  4650f8:	cmp	w3, #0x57
  4650fc:	b.eq	4652a8 <_obstack_memory_used@@Base+0x13e98>  // b.none
  465100:	cmp	w1, #0x3a
  465104:	b.eq	465338 <_obstack_memory_used@@Base+0x13f28>  // b.none
  465108:	ldp	x29, x30, [sp, #16]
  46510c:	ldp	x19, x20, [sp, #32]
  465110:	ldp	x21, x22, [sp, #48]
  465114:	ldp	x23, x24, [sp, #64]
  465118:	ldp	x25, x26, [sp, #80]
  46511c:	ldp	x27, x28, [sp, #96]
  465120:	add	sp, sp, #0x70
  465124:	ret
  465128:	ldrb	w0, [x21]
  46512c:	cmp	w0, #0x2d
  465130:	b.eq	46522c <_obstack_memory_used@@Base+0x13e1c>  // b.none
  465134:	ldr	w0, [x19, #40]
  465138:	cbz	w0, 4653e0 <_obstack_memory_used@@Base+0x13fd0>
  46513c:	add	w8, w8, #0x1
  465140:	mov	w0, #0x1                   	// #1
  465144:	ldp	x23, x24, [sp, #64]
  465148:	ldp	x27, x28, [sp, #96]
  46514c:	str	w8, [x19]
  465150:	str	x21, [x19, #16]
  465154:	ldp	x19, x20, [sp, #32]
  465158:	ldp	x21, x22, [sp, #48]
  46515c:	ldp	x29, x30, [sp, #16]
  465160:	ldp	x25, x26, [sp, #80]
  465164:	add	sp, sp, #0x70
  465168:	ret
  46516c:	mov	w1, #0x1                   	// #1
  465170:	mov	w0, w1
  465174:	str	w1, [x6]
  465178:	dup	v0.2s, w0
  46517c:	str	xzr, [x19, #32]
  465180:	stur	d0, [x19, #44]
  465184:	ldrb	w0, [x24]
  465188:	cmp	w0, #0x2d
  46518c:	b.ne	464f9c <_obstack_memory_used@@Base+0x13b8c>  // b.any
  465190:	b	465078 <_obstack_memory_used@@Base+0x13c68>
  465194:	ldp	w1, w20, [x19, #44]
  465198:	cmp	w20, w1
  46519c:	b.eq	4653e0 <_obstack_memory_used@@Base+0x13fd0>  // b.none
  4651a0:	mov	w0, #0xffffffff            	// #-1
  4651a4:	ldp	x21, x22, [sp, #48]
  4651a8:	ldp	x23, x24, [sp, #64]
  4651ac:	ldp	x27, x28, [sp, #96]
  4651b0:	str	w1, [x19]
  4651b4:	ldp	x19, x20, [sp, #32]
  4651b8:	b	46515c <_obstack_memory_used@@Base+0x13d4c>
  4651bc:	ldr	w6, [x19, #48]
  4651c0:	cmp	w6, w0
  4651c4:	b.eq	465380 <_obstack_memory_used@@Base+0x13f70>  // b.none
  4651c8:	cmp	w8, w6
  4651cc:	b.eq	4651e0 <_obstack_memory_used@@Base+0x13dd0>  // b.none
  4651d0:	mov	x1, x19
  4651d4:	mov	x0, x23
  4651d8:	bl	4646c8 <_obstack_memory_used@@Base+0x132b8>
  4651dc:	ldr	w6, [x19]
  4651e0:	cmp	w20, w6
  4651e4:	b.le	465460 <_obstack_memory_used@@Base+0x14050>
  4651e8:	sxtw	x6, w6
  4651ec:	b	465200 <_obstack_memory_used@@Base+0x13df0>
  4651f0:	add	w8, w2, #0x1
  4651f4:	str	w8, [x19]
  4651f8:	cmp	w20, w6
  4651fc:	b.le	465224 <_obstack_memory_used@@Base+0x13e14>
  465200:	ldr	x0, [x23, x6, lsl #3]
  465204:	mov	w2, w6
  465208:	mov	w8, w6
  46520c:	add	x6, x6, #0x1
  465210:	ldrb	w1, [x0]
  465214:	cmp	w1, #0x2d
  465218:	b.ne	4651f0 <_obstack_memory_used@@Base+0x13de0>  // b.any
  46521c:	ldrb	w0, [x0, #1]
  465220:	cbz	w0, 4651f0 <_obstack_memory_used@@Base+0x13de0>
  465224:	str	w8, [x19, #48]
  465228:	b	465014 <_obstack_memory_used@@Base+0x13c04>
  46522c:	ldrb	w1, [x21, #1]
  465230:	cbz	w1, 465134 <_obstack_memory_used@@Base+0x13d24>
  465234:	cbz	x25, 4652a0 <_obstack_memory_used@@Base+0x13e90>
  465238:	cmp	w1, #0x2d
  46523c:	b.eq	46548c <_obstack_memory_used@@Base+0x1407c>  // b.none
  465240:	cbz	w27, 4652a0 <_obstack_memory_used@@Base+0x13e90>
  465244:	ldrb	w0, [x21, #2]
  465248:	cbnz	w0, 465258 <_obstack_memory_used@@Base+0x13e48>
  46524c:	mov	x0, x24
  465250:	bl	404870 <strchr@plt>
  465254:	cbnz	x0, 4652a0 <_obstack_memory_used@@Base+0x13e90>
  465258:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  46525c:	add	x0, x0, #0x7d8
  465260:	str	x0, [sp]
  465264:	add	x21, x21, #0x1
  465268:	str	x21, [x19, #32]
  46526c:	mov	w5, w27
  465270:	mov	w7, w26
  465274:	mov	x6, x19
  465278:	mov	x4, x22
  46527c:	mov	x3, x25
  465280:	mov	x2, x24
  465284:	mov	x1, x23
  465288:	mov	w0, w20
  46528c:	bl	4648b8 <_obstack_memory_used@@Base+0x134a8>
  465290:	cmn	w0, #0x1
  465294:	b.ne	465108 <_obstack_memory_used@@Base+0x13cf8>  // b.any
  465298:	ldrsw	x0, [x19]
  46529c:	ldr	x21, [x23, x0, lsl #3]
  4652a0:	add	x21, x21, #0x1
  4652a4:	b	4650a8 <_obstack_memory_used@@Base+0x13c98>
  4652a8:	cmp	w1, #0x3b
  4652ac:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  4652b0:	b.eq	465100 <_obstack_memory_used@@Base+0x13cf0>  // b.none
  4652b4:	ldrb	w0, [x21, #1]
  4652b8:	cbnz	w0, 4652cc <_obstack_memory_used@@Base+0x13ebc>
  4652bc:	ldr	w0, [x19]
  4652c0:	cmp	w0, w20
  4652c4:	b.eq	4654c4 <_obstack_memory_used@@Base+0x140b4>  // b.none
  4652c8:	ldr	x28, [x23, w0, sxtw #3]
  4652cc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4652d0:	add	x0, x0, #0x7f0
  4652d4:	mov	w7, w26
  4652d8:	mov	x6, x19
  4652dc:	mov	x4, x22
  4652e0:	mov	x3, x25
  4652e4:	mov	x2, x24
  4652e8:	mov	x1, x23
  4652ec:	str	x0, [sp]
  4652f0:	mov	w0, w20
  4652f4:	mov	w5, #0x0                   	// #0
  4652f8:	str	xzr, [x19, #16]
  4652fc:	str	x28, [x19, #32]
  465300:	bl	4648b8 <_obstack_memory_used@@Base+0x134a8>
  465304:	ldp	x19, x20, [sp, #32]
  465308:	ldp	x21, x22, [sp, #48]
  46530c:	ldp	x23, x24, [sp, #64]
  465310:	ldp	x27, x28, [sp, #96]
  465314:	b	46515c <_obstack_memory_used@@Base+0x13d4c>
  465318:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  46531c:	add	x0, x0, #0x658
  465320:	bl	404af0 <getenv@plt>
  465324:	ldr	x21, [x19, #32]
  465328:	cbnz	x0, 464fac <_obstack_memory_used@@Base+0x13b9c>
  46532c:	mov	w0, #0x1                   	// #1
  465330:	str	w0, [x19, #40]
  465334:	b	465088 <_obstack_memory_used@@Base+0x13c78>
  465338:	ldrb	w1, [x2, #2]
  46533c:	ldrb	w2, [x21, #1]
  465340:	cmp	w1, #0x3a
  465344:	b.eq	46543c <_obstack_memory_used@@Base+0x1402c>  // b.none
  465348:	ldr	w1, [x19]
  46534c:	cbnz	w2, 4653d0 <_obstack_memory_used@@Base+0x13fc0>
  465350:	cmp	w20, w1
  465354:	b.eq	46546c <_obstack_memory_used@@Base+0x1405c>  // b.none
  465358:	ldr	x2, [x23, w1, sxtw #3]
  46535c:	add	w1, w1, #0x1
  465360:	str	w1, [x19]
  465364:	str	x2, [x19, #16]
  465368:	ldp	x21, x22, [sp, #48]
  46536c:	ldp	x23, x24, [sp, #64]
  465370:	ldp	x27, x28, [sp, #96]
  465374:	str	xzr, [x19, #32]
  465378:	ldp	x19, x20, [sp, #32]
  46537c:	b	46515c <_obstack_memory_used@@Base+0x13d4c>
  465380:	cmp	w8, w0
  465384:	b.eq	465564 <_obstack_memory_used@@Base+0x14154>  // b.none
  465388:	mov	w6, w8
  46538c:	str	w8, [x19, #44]
  465390:	b	4651e0 <_obstack_memory_used@@Base+0x13dd0>
  465394:	add	x24, x24, #0x1
  465398:	mov	x21, #0x0                   	// #0
  46539c:	str	wzr, [x19, #40]
  4653a0:	b	465088 <_obstack_memory_used@@Base+0x13c78>
  4653a4:	cbnz	w26, 465404 <_obstack_memory_used@@Base+0x13ff4>
  4653a8:	mov	w0, #0x3f                  	// #63
  4653ac:	ldp	x29, x30, [sp, #16]
  4653b0:	ldp	x21, x22, [sp, #48]
  4653b4:	ldp	x23, x24, [sp, #64]
  4653b8:	str	w27, [x19, #8]
  4653bc:	ldp	x19, x20, [sp, #32]
  4653c0:	ldp	x25, x26, [sp, #80]
  4653c4:	ldp	x27, x28, [sp, #96]
  4653c8:	add	sp, sp, #0x70
  4653cc:	ret
  4653d0:	add	w1, w1, #0x1
  4653d4:	str	w1, [x19]
  4653d8:	str	x28, [x19, #16]
  4653dc:	b	465368 <_obstack_memory_used@@Base+0x13f58>
  4653e0:	ldp	x19, x20, [sp, #32]
  4653e4:	ldp	x21, x22, [sp, #48]
  4653e8:	ldp	x23, x24, [sp, #64]
  4653ec:	ldp	x27, x28, [sp, #96]
  4653f0:	mov	w0, #0xffffffff            	// #-1
  4653f4:	b	46515c <_obstack_memory_used@@Base+0x13d4c>
  4653f8:	mov	w1, w8
  4653fc:	str	w8, [x19, #44]
  465400:	b	46506c <_obstack_memory_used@@Base+0x13c5c>
  465404:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465408:	mov	w2, #0x5                   	// #5
  46540c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465410:	add	x1, x1, #0x7a0
  465414:	ldr	x20, [x0, #1176]
  465418:	mov	x0, #0x0                   	// #0
  46541c:	bl	4049c0 <dcgettext@plt>
  465420:	mov	x2, x0
  465424:	ldr	x3, [x23]
  465428:	mov	w4, w27
  46542c:	mov	x0, x20
  465430:	mov	w1, #0x1                   	// #1
  465434:	bl	404700 <__fprintf_chk@plt>
  465438:	b	4653a8 <_obstack_memory_used@@Base+0x13f98>
  46543c:	cbz	w2, 465454 <_obstack_memory_used@@Base+0x14044>
  465440:	ldr	w1, [x19]
  465444:	str	x28, [x19, #16]
  465448:	add	w1, w1, #0x1
  46544c:	str	w1, [x19]
  465450:	b	465368 <_obstack_memory_used@@Base+0x13f58>
  465454:	mov	x28, #0x0                   	// #0
  465458:	str	x28, [x19, #16]
  46545c:	b	465368 <_obstack_memory_used@@Base+0x13f58>
  465460:	mov	w8, w6
  465464:	str	w8, [x19, #48]
  465468:	b	465014 <_obstack_memory_used@@Base+0x13c04>
  46546c:	cbnz	w26, 4654f4 <_obstack_memory_used@@Base+0x140e4>
  465470:	str	w27, [x19, #8]
  465474:	mov	w1, #0x3a                  	// #58
  465478:	mov	w0, #0x3f                  	// #63
  46547c:	ldrb	w2, [x24]
  465480:	cmp	w2, w1
  465484:	csel	w0, w1, w0, eq  // eq = none
  465488:	b	465368 <_obstack_memory_used@@Base+0x13f58>
  46548c:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  465490:	add	x0, x0, #0xa68
  465494:	str	x0, [sp]
  465498:	add	x21, x21, #0x2
  46549c:	mov	w7, w26
  4654a0:	mov	x6, x19
  4654a4:	mov	w5, w27
  4654a8:	mov	x4, x22
  4654ac:	mov	x3, x25
  4654b0:	mov	x2, x24
  4654b4:	mov	x1, x23
  4654b8:	mov	w0, w20
  4654bc:	str	x21, [x19, #32]
  4654c0:	b	465300 <_obstack_memory_used@@Base+0x13ef0>
  4654c4:	cbnz	w26, 46552c <_obstack_memory_used@@Base+0x1411c>
  4654c8:	ldp	x21, x22, [sp, #48]
  4654cc:	str	w27, [x19, #8]
  4654d0:	mov	w1, #0x3a                  	// #58
  4654d4:	mov	w0, #0x3f                  	// #63
  4654d8:	ldrb	w2, [x24]
  4654dc:	ldp	x19, x20, [sp, #32]
  4654e0:	cmp	w2, w1
  4654e4:	csel	w0, w1, w0, eq  // eq = none
  4654e8:	ldp	x23, x24, [sp, #64]
  4654ec:	ldp	x27, x28, [sp, #96]
  4654f0:	b	46515c <_obstack_memory_used@@Base+0x13d4c>
  4654f4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4654f8:	mov	w2, #0x5                   	// #5
  4654fc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465500:	add	x1, x1, #0x7c0
  465504:	ldr	x20, [x0, #1176]
  465508:	mov	x0, #0x0                   	// #0
  46550c:	bl	4049c0 <dcgettext@plt>
  465510:	mov	x2, x0
  465514:	ldr	x3, [x23]
  465518:	mov	w4, w27
  46551c:	mov	x0, x20
  465520:	mov	w1, #0x1                   	// #1
  465524:	bl	404700 <__fprintf_chk@plt>
  465528:	b	465470 <_obstack_memory_used@@Base+0x14060>
  46552c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465530:	mov	w2, #0x5                   	// #5
  465534:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465538:	add	x1, x1, #0x7c0
  46553c:	ldr	x20, [x0, #1176]
  465540:	mov	x0, #0x0                   	// #0
  465544:	bl	4049c0 <dcgettext@plt>
  465548:	mov	x2, x0
  46554c:	ldr	x3, [x23]
  465550:	mov	w4, w27
  465554:	mov	x0, x20
  465558:	mov	w1, #0x1                   	// #1
  46555c:	bl	404700 <__fprintf_chk@plt>
  465560:	b	4654c8 <_obstack_memory_used@@Base+0x140b8>
  465564:	mov	w6, w0
  465568:	b	4651e0 <_obstack_memory_used@@Base+0x13dd0>
  46556c:	nop
  465570:	sub	sp, sp, #0x90
  465574:	cmp	w0, #0x0
  465578:	stp	x29, x30, [sp, #16]
  46557c:	add	x29, sp, #0x10
  465580:	stp	x25, x26, [sp, #80]
  465584:	stp	x27, x28, [sp, #96]
  465588:	adrp	x28, 496000 <_obstack_memory_used@@Base+0x44bf0>
  46558c:	add	x25, x28, #0x47c
  465590:	stp	x19, x20, [sp, #32]
  465594:	ldr	w8, [x28, #1148]
  465598:	stp	x21, x22, [sp, #48]
  46559c:	adrp	x22, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4655a0:	add	x19, x22, #0xfa0
  4655a4:	ldr	w27, [x25, #4]
  4655a8:	str	w8, [x22, #4000]
  4655ac:	str	w27, [x19, #4]
  4655b0:	stp	x23, x24, [sp, #64]
  4655b4:	str	x4, [sp, #120]
  4655b8:	b.le	465ad8 <_obstack_memory_used@@Base+0x146c8>
  4655bc:	str	xzr, [x19, #16]
  4655c0:	mov	w20, w0
  4655c4:	mov	x24, x1
  4655c8:	mov	x21, x2
  4655cc:	cbz	w8, 4657e4 <_obstack_memory_used@@Base+0x143d4>
  4655d0:	ldr	w0, [x19, #24]
  4655d4:	cbnz	w0, 465608 <_obstack_memory_used@@Base+0x141f8>
  4655d8:	dup	v0.2s, w8
  4655dc:	str	xzr, [x19, #32]
  4655e0:	stur	d0, [x19, #44]
  4655e4:	ldrb	w0, [x21]
  4655e8:	cmp	w0, #0x2d
  4655ec:	b.eq	4656dc <_obstack_memory_used@@Base+0x142cc>  // b.none
  4655f0:	cmp	w0, #0x2b
  4655f4:	b.eq	465a20 <_obstack_memory_used@@Base+0x14610>  // b.none
  4655f8:	mov	x26, #0x0                   	// #0
  4655fc:	cbz	w6, 4659a0 <_obstack_memory_used@@Base+0x14590>
  465600:	str	wzr, [x19, #40]
  465604:	b	4656ec <_obstack_memory_used@@Base+0x142dc>
  465608:	ldrb	w0, [x2]
  46560c:	mov	w1, #0xfd                  	// #253
  465610:	ldr	x26, [x19, #32]
  465614:	sub	w2, w0, #0x2b
  465618:	tst	w2, w1
  46561c:	b.ne	4656f8 <_obstack_memory_used@@Base+0x142e8>  // b.any
  465620:	ldrb	w0, [x21, #1]
  465624:	add	x21, x21, #0x1
  465628:	cmp	w0, #0x3a
  46562c:	csel	w27, w27, wzr, ne  // ne = any
  465630:	cbnz	x26, 465704 <_obstack_memory_used@@Base+0x142f4>
  465634:	nop
  465638:	ldr	w8, [x22, #4000]
  46563c:	ldr	w6, [x19, #48]
  465640:	cmp	w6, w8
  465644:	b.le	465650 <_obstack_memory_used@@Base+0x14240>
  465648:	mov	w6, w8
  46564c:	str	w8, [x19, #48]
  465650:	ldr	w0, [x19, #44]
  465654:	cmp	w8, w0
  465658:	b.ge	465664 <_obstack_memory_used@@Base+0x14254>  // b.tcont
  46565c:	mov	w0, w8
  465660:	str	w8, [x19, #44]
  465664:	ldr	w1, [x19, #40]
  465668:	cmp	w1, #0x1
  46566c:	b.eq	465830 <_obstack_memory_used@@Base+0x14420>  // b.none
  465670:	cmp	w20, w8
  465674:	b.eq	46580c <_obstack_memory_used@@Base+0x143fc>  // b.none
  465678:	ldr	x23, [x24, w8, sxtw #3]
  46567c:	ldrb	w0, [x23]
  465680:	cmp	w0, #0x2d
  465684:	b.ne	4657b8 <_obstack_memory_used@@Base+0x143a8>  // b.any
  465688:	ldrb	w0, [x23, #1]
  46568c:	cmp	w0, #0x2d
  465690:	b.ne	4657b8 <_obstack_memory_used@@Base+0x143a8>  // b.any
  465694:	ldrb	w0, [x23, #2]
  465698:	cbnz	w0, 4657b8 <_obstack_memory_used@@Base+0x143a8>
  46569c:	ldr	w0, [x19, #44]
  4656a0:	add	w8, w8, #0x1
  4656a4:	str	w8, [x22, #4000]
  4656a8:	cmp	w0, w6
  4656ac:	b.eq	465a6c <_obstack_memory_used@@Base+0x1465c>  // b.none
  4656b0:	cmp	w8, w6
  4656b4:	b.eq	4656c8 <_obstack_memory_used@@Base+0x142b8>  // b.none
  4656b8:	mov	x0, x24
  4656bc:	mov	x1, x19
  4656c0:	bl	4646c8 <_obstack_memory_used@@Base+0x132b8>
  4656c4:	ldr	w0, [x19, #44]
  4656c8:	mov	w8, w20
  4656cc:	mov	w6, w20
  4656d0:	str	w20, [x22, #4000]
  4656d4:	str	w20, [x19, #48]
  4656d8:	b	465810 <_obstack_memory_used@@Base+0x14400>
  4656dc:	add	x21, x21, #0x1
  4656e0:	mov	w0, #0x2                   	// #2
  4656e4:	mov	x26, #0x0                   	// #0
  4656e8:	str	w0, [x19, #40]
  4656ec:	mov	w0, #0x1                   	// #1
  4656f0:	str	w0, [x19, #24]
  4656f4:	ldrb	w0, [x21]
  4656f8:	cmp	w0, #0x3a
  4656fc:	csel	w27, w27, wzr, ne  // ne = any
  465700:	cbz	x26, 465638 <_obstack_memory_used@@Base+0x14228>
  465704:	ldrb	w0, [x26]
  465708:	cbz	w0, 465638 <_obstack_memory_used@@Base+0x14228>
  46570c:	add	x23, x26, #0x1
  465710:	str	x23, [x19, #32]
  465714:	mov	x0, x21
  465718:	str	x3, [sp, #136]
  46571c:	ldrb	w4, [x26]
  465720:	str	w4, [sp, #128]
  465724:	mov	w1, w4
  465728:	bl	404870 <strchr@plt>
  46572c:	mov	x2, x0
  465730:	ldrb	w1, [x26, #1]
  465734:	ldr	w4, [sp, #128]
  465738:	ldr	x3, [sp, #136]
  46573c:	mov	w0, w4
  465740:	cbnz	w1, 465750 <_obstack_memory_used@@Base+0x14340>
  465744:	ldr	w1, [x22, #4000]
  465748:	add	w1, w1, #0x1
  46574c:	str	w1, [x22, #4000]
  465750:	sub	w1, w4, #0x3a
  465754:	cmp	x2, #0x0
  465758:	and	w1, w1, #0xff
  46575c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  465760:	b.ls	465a30 <_obstack_memory_used@@Base+0x14620>  // b.plast
  465764:	ldrb	w5, [x2]
  465768:	ldrb	w1, [x2, #1]
  46576c:	cmp	w5, #0x57
  465770:	b.eq	465940 <_obstack_memory_used@@Base+0x14530>  // b.none
  465774:	ldr	w8, [x22, #4000]
  465778:	cmp	w1, #0x3a
  46577c:	b.eq	4659d0 <_obstack_memory_used@@Base+0x145c0>  // b.none
  465780:	ldr	w2, [x19, #8]
  465784:	ldr	x23, [x19, #16]
  465788:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  46578c:	str	w8, [x28, #1148]
  465790:	str	x23, [x1, #1184]
  465794:	str	w2, [x25, #8]
  465798:	ldp	x29, x30, [sp, #16]
  46579c:	ldp	x19, x20, [sp, #32]
  4657a0:	ldp	x21, x22, [sp, #48]
  4657a4:	ldp	x23, x24, [sp, #64]
  4657a8:	ldp	x25, x26, [sp, #80]
  4657ac:	ldp	x27, x28, [sp, #96]
  4657b0:	add	sp, sp, #0x90
  4657b4:	ret
  4657b8:	ldrb	w0, [x23]
  4657bc:	cmp	w0, #0x2d
  4657c0:	b.eq	4658b0 <_obstack_memory_used@@Base+0x144a0>  // b.none
  4657c4:	ldr	w0, [x19, #40]
  4657c8:	cbz	w0, 465ad8 <_obstack_memory_used@@Base+0x146c8>
  4657cc:	add	w8, w8, #0x1
  4657d0:	ldr	w2, [x19, #8]
  4657d4:	mov	w0, #0x1                   	// #1
  4657d8:	str	w8, [x22, #4000]
  4657dc:	str	x23, [x19, #16]
  4657e0:	b	465788 <_obstack_memory_used@@Base+0x14378>
  4657e4:	mov	w0, #0x1                   	// #1
  4657e8:	mov	w8, w0
  4657ec:	str	w0, [x22, #4000]
  4657f0:	dup	v0.2s, w8
  4657f4:	str	xzr, [x19, #32]
  4657f8:	stur	d0, [x19, #44]
  4657fc:	ldrb	w0, [x21]
  465800:	cmp	w0, #0x2d
  465804:	b.ne	4655f0 <_obstack_memory_used@@Base+0x141e0>  // b.any
  465808:	b	4656dc <_obstack_memory_used@@Base+0x142cc>
  46580c:	ldr	w0, [x19, #44]
  465810:	ldr	w2, [x19, #8]
  465814:	cmp	w6, w0
  465818:	ldr	x23, [x19, #16]
  46581c:	b.eq	465a64 <_obstack_memory_used@@Base+0x14654>  // b.none
  465820:	mov	w8, w0
  465824:	str	w0, [x22, #4000]
  465828:	mov	w0, #0xffffffff            	// #-1
  46582c:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465830:	cmp	w6, w0
  465834:	b.eq	465a0c <_obstack_memory_used@@Base+0x145fc>  // b.none
  465838:	cmp	w8, w6
  46583c:	b.eq	465860 <_obstack_memory_used@@Base+0x14450>  // b.none
  465840:	mov	x1, x19
  465844:	mov	x0, x24
  465848:	str	x3, [sp, #128]
  46584c:	str	w5, [sp, #136]
  465850:	bl	4646c8 <_obstack_memory_used@@Base+0x132b8>
  465854:	ldr	w6, [x22, #4000]
  465858:	ldr	w5, [sp, #136]
  46585c:	ldr	x3, [sp, #128]
  465860:	cmp	w20, w6
  465864:	b.le	465af0 <_obstack_memory_used@@Base+0x146e0>
  465868:	sxtw	x6, w6
  46586c:	b	465880 <_obstack_memory_used@@Base+0x14470>
  465870:	add	w8, w1, #0x1
  465874:	str	w8, [x19]
  465878:	cmp	w20, w6
  46587c:	b.le	4658a4 <_obstack_memory_used@@Base+0x14494>
  465880:	ldr	x0, [x24, x6, lsl #3]
  465884:	mov	w1, w6
  465888:	mov	w8, w6
  46588c:	add	x6, x6, #0x1
  465890:	ldrb	w2, [x0]
  465894:	cmp	w2, #0x2d
  465898:	b.ne	465870 <_obstack_memory_used@@Base+0x14460>  // b.any
  46589c:	ldrb	w0, [x0, #1]
  4658a0:	cbz	w0, 465870 <_obstack_memory_used@@Base+0x14460>
  4658a4:	mov	w6, w8
  4658a8:	str	w8, [x19, #48]
  4658ac:	b	465670 <_obstack_memory_used@@Base+0x14260>
  4658b0:	ldrb	w1, [x23, #1]
  4658b4:	cbz	w1, 4657c4 <_obstack_memory_used@@Base+0x143b4>
  4658b8:	cbz	x3, 465938 <_obstack_memory_used@@Base+0x14528>
  4658bc:	cmp	w1, #0x2d
  4658c0:	b.eq	465b24 <_obstack_memory_used@@Base+0x14714>  // b.none
  4658c4:	cbz	w5, 465938 <_obstack_memory_used@@Base+0x14528>
  4658c8:	ldrb	w0, [x23, #2]
  4658cc:	cbnz	w0, 4658ec <_obstack_memory_used@@Base+0x144dc>
  4658d0:	mov	x0, x21
  4658d4:	str	x3, [sp, #128]
  4658d8:	str	w5, [sp, #136]
  4658dc:	bl	404870 <strchr@plt>
  4658e0:	ldr	w5, [sp, #136]
  4658e4:	ldr	x3, [sp, #128]
  4658e8:	cbnz	x0, 465938 <_obstack_memory_used@@Base+0x14528>
  4658ec:	ldr	x4, [sp, #120]
  4658f0:	adrp	x0, 46b000 <_obstack_memory_used@@Base+0x19bf0>
  4658f4:	add	x0, x0, #0x7d8
  4658f8:	str	x0, [sp]
  4658fc:	add	x23, x23, #0x1
  465900:	mov	w7, w27
  465904:	mov	x6, x19
  465908:	mov	x2, x21
  46590c:	mov	x1, x24
  465910:	mov	w0, w20
  465914:	str	x23, [x19, #32]
  465918:	str	x3, [sp, #128]
  46591c:	bl	4648b8 <_obstack_memory_used@@Base+0x134a8>
  465920:	cmn	w0, #0x1
  465924:	ldr	x3, [sp, #128]
  465928:	b.ne	465998 <_obstack_memory_used@@Base+0x14588>  // b.any
  46592c:	ldrsw	x0, [x22, #4000]
  465930:	ldr	x23, [x24, x0, lsl #3]
  465934:	nop
  465938:	add	x26, x23, #0x1
  46593c:	b	46570c <_obstack_memory_used@@Base+0x142fc>
  465940:	cmp	w1, #0x3b
  465944:	ccmp	x3, #0x0, #0x4, eq  // eq = none
  465948:	b.eq	465774 <_obstack_memory_used@@Base+0x14364>  // b.none
  46594c:	ldrb	w0, [x26, #1]
  465950:	cbnz	w0, 465964 <_obstack_memory_used@@Base+0x14554>
  465954:	ldr	w0, [x22, #4000]
  465958:	cmp	w20, w0
  46595c:	b.eq	465b50 <_obstack_memory_used@@Base+0x14740>  // b.none
  465960:	ldr	x23, [x24, w0, sxtw #3]
  465964:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465968:	add	x0, x0, #0x7f0
  46596c:	mov	w7, w27
  465970:	ldr	x4, [sp, #120]
  465974:	mov	x2, x21
  465978:	mov	x1, x24
  46597c:	mov	x6, x19
  465980:	str	x0, [sp]
  465984:	mov	w0, w20
  465988:	mov	w5, #0x0                   	// #0
  46598c:	str	xzr, [x19, #16]
  465990:	str	x23, [x19, #32]
  465994:	bl	4648b8 <_obstack_memory_used@@Base+0x134a8>
  465998:	ldr	w8, [x22, #4000]
  46599c:	b	465780 <_obstack_memory_used@@Base+0x14370>
  4659a0:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  4659a4:	add	x0, x0, #0x658
  4659a8:	str	x3, [sp, #128]
  4659ac:	str	w5, [sp, #136]
  4659b0:	bl	404af0 <getenv@plt>
  4659b4:	ldr	w5, [sp, #136]
  4659b8:	ldr	x26, [x19, #32]
  4659bc:	ldr	x3, [sp, #128]
  4659c0:	cbnz	x0, 465600 <_obstack_memory_used@@Base+0x141f0>
  4659c4:	mov	w0, #0x1                   	// #1
  4659c8:	str	w0, [x19, #40]
  4659cc:	b	4656ec <_obstack_memory_used@@Base+0x142dc>
  4659d0:	ldrb	w2, [x2, #2]
  4659d4:	ldrb	w1, [x26, #1]
  4659d8:	cmp	w2, #0x3a
  4659dc:	b.eq	465abc <_obstack_memory_used@@Base+0x146ac>  // b.none
  4659e0:	cbnz	w1, 465a4c <_obstack_memory_used@@Base+0x1463c>
  4659e4:	cmp	w20, w8
  4659e8:	b.eq	465af8 <_obstack_memory_used@@Base+0x146e8>  // b.none
  4659ec:	add	w1, w8, #0x1
  4659f0:	ldr	w2, [x19, #8]
  4659f4:	ldr	x23, [x24, w8, sxtw #3]
  4659f8:	mov	w8, w1
  4659fc:	str	w1, [x22, #4000]
  465a00:	str	x23, [x19, #16]
  465a04:	str	xzr, [x19, #32]
  465a08:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465a0c:	cmp	w8, w6
  465a10:	b.eq	465860 <_obstack_memory_used@@Base+0x14450>  // b.none
  465a14:	mov	w6, w8
  465a18:	str	w8, [x19, #44]
  465a1c:	b	465860 <_obstack_memory_used@@Base+0x14450>
  465a20:	add	x21, x21, #0x1
  465a24:	mov	x26, #0x0                   	// #0
  465a28:	str	wzr, [x19, #40]
  465a2c:	b	4656ec <_obstack_memory_used@@Base+0x142dc>
  465a30:	cbnz	w27, 465a78 <_obstack_memory_used@@Base+0x14668>
  465a34:	ldr	w8, [x22, #4000]
  465a38:	mov	w2, w4
  465a3c:	mov	w0, #0x3f                  	// #63
  465a40:	str	w4, [x19, #8]
  465a44:	ldr	x23, [x19, #16]
  465a48:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465a4c:	add	w8, w8, #0x1
  465a50:	ldr	w2, [x19, #8]
  465a54:	str	w8, [x22, #4000]
  465a58:	str	x23, [x19, #16]
  465a5c:	str	xzr, [x19, #32]
  465a60:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465a64:	mov	w0, #0xffffffff            	// #-1
  465a68:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465a6c:	mov	w0, w8
  465a70:	str	w8, [x19, #44]
  465a74:	b	4656c8 <_obstack_memory_used@@Base+0x142b8>
  465a78:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465a7c:	mov	w2, #0x5                   	// #5
  465a80:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465a84:	add	x1, x1, #0x7a0
  465a88:	ldr	x20, [x0, #1176]
  465a8c:	mov	x0, #0x0                   	// #0
  465a90:	str	w4, [sp, #120]
  465a94:	bl	4049c0 <dcgettext@plt>
  465a98:	ldr	w4, [sp, #120]
  465a9c:	mov	x2, x0
  465aa0:	ldr	x3, [x24]
  465aa4:	mov	x0, x20
  465aa8:	mov	w1, #0x1                   	// #1
  465aac:	str	w4, [sp, #120]
  465ab0:	bl	404700 <__fprintf_chk@plt>
  465ab4:	ldr	w4, [sp, #120]
  465ab8:	b	465a34 <_obstack_memory_used@@Base+0x14624>
  465abc:	cbz	w1, 465ae8 <_obstack_memory_used@@Base+0x146d8>
  465ac0:	add	w8, w8, #0x1
  465ac4:	str	w8, [x22, #4000]
  465ac8:	ldr	w2, [x19, #8]
  465acc:	str	x23, [x19, #16]
  465ad0:	str	xzr, [x19, #32]
  465ad4:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465ad8:	ldr	w2, [x19, #8]
  465adc:	mov	w0, #0xffffffff            	// #-1
  465ae0:	ldr	x23, [x19, #16]
  465ae4:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465ae8:	mov	x23, #0x0                   	// #0
  465aec:	b	465ac8 <_obstack_memory_used@@Base+0x146b8>
  465af0:	mov	w8, w6
  465af4:	b	4658a4 <_obstack_memory_used@@Base+0x14494>
  465af8:	cbnz	w27, 465b7c <_obstack_memory_used@@Base+0x1476c>
  465afc:	str	w4, [x19, #8]
  465b00:	mov	w0, #0x3a                  	// #58
  465b04:	mov	w1, #0x3f                  	// #63
  465b08:	mov	w2, w4
  465b0c:	ldrb	w3, [x21]
  465b10:	str	xzr, [x19, #32]
  465b14:	cmp	w3, w0
  465b18:	csel	w0, w0, w1, eq  // eq = none
  465b1c:	ldr	x23, [x19, #16]
  465b20:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465b24:	adrp	x0, 470000 <_obstack_memory_used@@Base+0x1ebf0>
  465b28:	add	x0, x0, #0xa68
  465b2c:	add	x23, x23, #0x2
  465b30:	mov	w7, w27
  465b34:	mov	x2, x21
  465b38:	mov	x1, x24
  465b3c:	mov	x6, x19
  465b40:	str	x0, [sp]
  465b44:	mov	w0, w20
  465b48:	ldr	x4, [sp, #120]
  465b4c:	b	465990 <_obstack_memory_used@@Base+0x14580>
  465b50:	cbnz	w27, 465bc4 <_obstack_memory_used@@Base+0x147b4>
  465b54:	str	w4, [x19, #8]
  465b58:	mov	w0, #0x3a                  	// #58
  465b5c:	mov	w1, #0x3f                  	// #63
  465b60:	ldr	w8, [x22, #4000]
  465b64:	ldrb	w3, [x21]
  465b68:	mov	w2, w4
  465b6c:	ldr	x23, [x19, #16]
  465b70:	cmp	w3, w0
  465b74:	csel	w0, w0, w1, eq  // eq = none
  465b78:	b	465788 <_obstack_memory_used@@Base+0x14378>
  465b7c:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465b80:	mov	w2, #0x5                   	// #5
  465b84:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465b88:	add	x1, x1, #0x7c0
  465b8c:	ldr	x20, [x0, #1176]
  465b90:	mov	x0, #0x0                   	// #0
  465b94:	str	w4, [sp, #120]
  465b98:	bl	4049c0 <dcgettext@plt>
  465b9c:	ldr	w4, [sp, #120]
  465ba0:	mov	x2, x0
  465ba4:	ldr	x3, [x24]
  465ba8:	mov	x0, x20
  465bac:	mov	w1, #0x1                   	// #1
  465bb0:	str	w4, [sp, #120]
  465bb4:	bl	404700 <__fprintf_chk@plt>
  465bb8:	ldr	w8, [x22, #4000]
  465bbc:	ldr	w4, [sp, #120]
  465bc0:	b	465afc <_obstack_memory_used@@Base+0x146ec>
  465bc4:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465bc8:	mov	w2, #0x5                   	// #5
  465bcc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  465bd0:	add	x1, x1, #0x7c0
  465bd4:	ldr	x20, [x0, #1176]
  465bd8:	mov	x0, #0x0                   	// #0
  465bdc:	str	w4, [sp, #120]
  465be0:	bl	4049c0 <dcgettext@plt>
  465be4:	ldr	w4, [sp, #120]
  465be8:	mov	x2, x0
  465bec:	ldr	x3, [x24]
  465bf0:	mov	x0, x20
  465bf4:	mov	w1, #0x1                   	// #1
  465bf8:	str	w4, [sp, #120]
  465bfc:	bl	404700 <__fprintf_chk@plt>
  465c00:	ldr	w4, [sp, #120]
  465c04:	b	465b54 <_obstack_memory_used@@Base+0x14744>
  465c08:	stp	x29, x30, [sp, #-112]!
  465c0c:	cmp	w0, #0x0
  465c10:	mov	x29, sp
  465c14:	stp	x25, x26, [sp, #64]
  465c18:	adrp	x26, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465c1c:	stp	x27, x28, [sp, #80]
  465c20:	add	x28, x26, #0x47c
  465c24:	stp	x19, x20, [sp, #16]
  465c28:	ldr	w27, [x28, #4]
  465c2c:	stp	x23, x24, [sp, #48]
  465c30:	adrp	x24, 496000 <_obstack_memory_used@@Base+0x44bf0>
  465c34:	add	x19, x24, #0xfa0
  465c38:	ldr	w20, [x26, #1148]
  465c3c:	str	w20, [x24, #4000]
  465c40:	str	w27, [x19, #4]
  465c44:	b.le	4660b8 <_obstack_memory_used@@Base+0x14ca8>
  465c48:	str	xzr, [x19, #16]
  465c4c:	mov	x25, x1
  465c50:	stp	x21, x22, [sp, #32]
  465c54:	mov	w21, w0
  465c58:	mov	x22, x2
  465c5c:	cbz	w20, 465f00 <_obstack_memory_used@@Base+0x14af0>
  465c60:	ldr	w0, [x19, #24]
  465c64:	cbnz	w0, 465d40 <_obstack_memory_used@@Base+0x14930>
  465c68:	dup	v0.2s, w20
  465c6c:	str	xzr, [x19, #32]
  465c70:	stur	d0, [x19, #44]
  465c74:	ldrb	w0, [x22]
  465c78:	cmp	w0, #0x2d
  465c7c:	b.eq	465e00 <_obstack_memory_used@@Base+0x149f0>  // b.none
  465c80:	cmp	w0, #0x2b
  465c84:	b.eq	465f5c <_obstack_memory_used@@Base+0x14b4c>  // b.none
  465c88:	mov	w0, #0x0                   	// #0
  465c8c:	str	wzr, [x19, #40]
  465c90:	mov	w1, #0x1                   	// #1
  465c94:	str	w1, [x19, #24]
  465c98:	ldrb	w1, [x22]
  465c9c:	cmp	w1, #0x3a
  465ca0:	b.eq	465e24 <_obstack_memory_used@@Base+0x14a14>  // b.none
  465ca4:	ldr	w3, [x19, #48]
  465ca8:	ldp	w0, w1, [x19, #40]
  465cac:	cmp	w3, w20
  465cb0:	b.le	465cbc <_obstack_memory_used@@Base+0x148ac>
  465cb4:	mov	w3, w20
  465cb8:	str	w20, [x19, #48]
  465cbc:	mov	w4, w20
  465cc0:	cmp	w20, w1
  465cc4:	b.ge	465fc8 <_obstack_memory_used@@Base+0x14bb8>  // b.tcont
  465cc8:	str	w20, [x19, #44]
  465ccc:	cmp	w0, #0x1
  465cd0:	b.eq	465e38 <_obstack_memory_used@@Base+0x14a28>  // b.none
  465cd4:	cmp	w21, w4
  465cd8:	b.eq	465eac <_obstack_memory_used@@Base+0x14a9c>  // b.none
  465cdc:	ldr	x23, [x25, w4, sxtw #3]
  465ce0:	ldrb	w0, [x23]
  465ce4:	cmp	w0, #0x2d
  465ce8:	b.ne	465ed0 <_obstack_memory_used@@Base+0x14ac0>  // b.any
  465cec:	ldrb	w0, [x23, #1]
  465cf0:	cmp	w0, #0x2d
  465cf4:	b.ne	465ed0 <_obstack_memory_used@@Base+0x14ac0>  // b.any
  465cf8:	ldrb	w0, [x23, #2]
  465cfc:	cbnz	w0, 465ed0 <_obstack_memory_used@@Base+0x14ac0>
  465d00:	ldr	w20, [x19, #44]
  465d04:	add	w4, w4, #0x1
  465d08:	str	w4, [x24, #4000]
  465d0c:	cmp	w20, w3
  465d10:	b.eq	465ff4 <_obstack_memory_used@@Base+0x14be4>  // b.none
  465d14:	cmp	w4, w3
  465d18:	b.eq	465d2c <_obstack_memory_used@@Base+0x1491c>  // b.none
  465d1c:	mov	x0, x25
  465d20:	mov	x1, x19
  465d24:	bl	4646c8 <_obstack_memory_used@@Base+0x132b8>
  465d28:	ldr	w20, [x19, #44]
  465d2c:	mov	w4, w21
  465d30:	mov	w3, w21
  465d34:	str	w21, [x24, #4000]
  465d38:	str	w21, [x19, #48]
  465d3c:	b	465eb0 <_obstack_memory_used@@Base+0x14aa0>
  465d40:	ldrb	w0, [x2]
  465d44:	mov	w1, #0xfd                  	// #253
  465d48:	sub	w2, w0, #0x2b
  465d4c:	tst	w2, w1
  465d50:	b.eq	465f3c <_obstack_memory_used@@Base+0x14b2c>  // b.none
  465d54:	ldr	x2, [x19, #32]
  465d58:	cmp	w0, #0x3a
  465d5c:	csel	w27, w27, wzr, ne  // ne = any
  465d60:	cbz	x2, 465ca4 <_obstack_memory_used@@Base+0x14894>
  465d64:	ldrb	w0, [x2]
  465d68:	cbz	w0, 465ca4 <_obstack_memory_used@@Base+0x14894>
  465d6c:	add	x23, x2, #0x1
  465d70:	str	x23, [x19, #32]
  465d74:	mov	x0, x22
  465d78:	str	x2, [sp, #104]
  465d7c:	ldrb	w4, [x2]
  465d80:	str	w4, [sp, #100]
  465d84:	mov	w1, w4
  465d88:	bl	404870 <strchr@plt>
  465d8c:	mov	x3, x0
  465d90:	ldr	x2, [sp, #104]
  465d94:	ldr	w4, [sp, #100]
  465d98:	ldrb	w1, [x2, #1]
  465d9c:	mov	w0, w4
  465da0:	cbnz	w1, 465dac <_obstack_memory_used@@Base+0x1499c>
  465da4:	add	w20, w20, #0x1
  465da8:	str	w20, [x24, #4000]
  465dac:	sub	w1, w4, #0x3a
  465db0:	cmp	x3, #0x0
  465db4:	and	w1, w1, #0xff
  465db8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  465dbc:	b.ls	465f6c <_obstack_memory_used@@Base+0x14b5c>  // b.plast
  465dc0:	ldrb	w1, [x3, #1]
  465dc4:	cmp	w1, #0x3a
  465dc8:	b.eq	465f88 <_obstack_memory_used@@Base+0x14b78>  // b.none
  465dcc:	ldp	x21, x22, [sp, #32]
  465dd0:	ldr	w2, [x19, #8]
  465dd4:	ldr	x23, [x19, #16]
  465dd8:	adrp	x1, 497000 <argp_program_version_hook@@Base+0x1e0>
  465ddc:	str	w20, [x26, #1148]
  465de0:	str	x23, [x1, #1184]
  465de4:	str	w2, [x28, #8]
  465de8:	ldp	x19, x20, [sp, #16]
  465dec:	ldp	x23, x24, [sp, #48]
  465df0:	ldp	x25, x26, [sp, #64]
  465df4:	ldp	x27, x28, [sp, #80]
  465df8:	ldp	x29, x30, [sp], #112
  465dfc:	ret
  465e00:	mov	w1, #0x2                   	// #2
  465e04:	add	x22, x22, #0x1
  465e08:	mov	w0, w1
  465e0c:	str	w1, [x19, #40]
  465e10:	mov	w1, #0x1                   	// #1
  465e14:	str	w1, [x19, #24]
  465e18:	ldrb	w1, [x22]
  465e1c:	cmp	w1, #0x3a
  465e20:	b.ne	465ca4 <_obstack_memory_used@@Base+0x14894>  // b.any
  465e24:	mov	w3, w20
  465e28:	mov	w4, w20
  465e2c:	cmp	w0, #0x1
  465e30:	mov	w27, #0x0                   	// #0
  465e34:	b.ne	465cd4 <_obstack_memory_used@@Base+0x148c4>  // b.any
  465e38:	cmp	w3, w20
  465e3c:	b.eq	465f48 <_obstack_memory_used@@Base+0x14b38>  // b.none
  465e40:	cmp	w3, w4
  465e44:	b.eq	465e58 <_obstack_memory_used@@Base+0x14a48>  // b.none
  465e48:	mov	x1, x19
  465e4c:	mov	x0, x25
  465e50:	bl	4646c8 <_obstack_memory_used@@Base+0x132b8>
  465e54:	ldr	w3, [x24, #4000]
  465e58:	cmp	w21, w3
  465e5c:	b.le	466070 <_obstack_memory_used@@Base+0x14c60>
  465e60:	sxtw	x3, w3
  465e64:	b	465e78 <_obstack_memory_used@@Base+0x14a68>
  465e68:	add	w4, w1, #0x1
  465e6c:	str	w4, [x19]
  465e70:	cmp	w21, w3
  465e74:	b.le	465e9c <_obstack_memory_used@@Base+0x14a8c>
  465e78:	ldr	x0, [x25, x3, lsl #3]
  465e7c:	mov	w1, w3
  465e80:	mov	w4, w3
  465e84:	add	x3, x3, #0x1
  465e88:	ldrb	w2, [x0]
  465e8c:	cmp	w2, #0x2d
  465e90:	b.ne	465e68 <_obstack_memory_used@@Base+0x14a58>  // b.any
  465e94:	ldrb	w0, [x0, #1]
  465e98:	cbz	w0, 465e68 <_obstack_memory_used@@Base+0x14a58>
  465e9c:	str	w4, [x19, #48]
  465ea0:	mov	w3, w4
  465ea4:	cmp	w21, w4
  465ea8:	b.ne	465cdc <_obstack_memory_used@@Base+0x148cc>  // b.any
  465eac:	ldr	w20, [x19, #44]
  465eb0:	ldr	w2, [x19, #8]
  465eb4:	cmp	w3, w20
  465eb8:	ldr	x23, [x19, #16]
  465ebc:	b.eq	465fe4 <_obstack_memory_used@@Base+0x14bd4>  // b.none
  465ec0:	str	w20, [x24, #4000]
  465ec4:	mov	w0, #0xffffffff            	// #-1
  465ec8:	ldp	x21, x22, [sp, #32]
  465ecc:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  465ed0:	ldrb	w0, [x23]
  465ed4:	cmp	w0, #0x2d
  465ed8:	b.eq	465f28 <_obstack_memory_used@@Base+0x14b18>  // b.none
  465edc:	ldr	w0, [x19, #40]
  465ee0:	cbz	w0, 4660a0 <_obstack_memory_used@@Base+0x14c90>
  465ee4:	add	w20, w4, #0x1
  465ee8:	ldr	w2, [x19, #8]
  465eec:	mov	w0, #0x1                   	// #1
  465ef0:	str	w20, [x24, #4000]
  465ef4:	str	x23, [x19, #16]
  465ef8:	ldp	x21, x22, [sp, #32]
  465efc:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  465f00:	mov	w0, #0x1                   	// #1
  465f04:	mov	w20, w0
  465f08:	str	w0, [x24, #4000]
  465f0c:	dup	v0.2s, w20
  465f10:	str	xzr, [x19, #32]
  465f14:	stur	d0, [x19, #44]
  465f18:	ldrb	w0, [x22]
  465f1c:	cmp	w0, #0x2d
  465f20:	b.ne	465c80 <_obstack_memory_used@@Base+0x14870>  // b.any
  465f24:	b	465e00 <_obstack_memory_used@@Base+0x149f0>
  465f28:	ldrb	w0, [x23, #1]
  465f2c:	cbz	w0, 465edc <_obstack_memory_used@@Base+0x14acc>
  465f30:	add	x2, x23, #0x1
  465f34:	mov	w20, w4
  465f38:	b	465d6c <_obstack_memory_used@@Base+0x1495c>
  465f3c:	ldrb	w0, [x22, #1]
  465f40:	add	x22, x22, #0x1
  465f44:	b	465d54 <_obstack_memory_used@@Base+0x14944>
  465f48:	cmp	w3, w4
  465f4c:	b.eq	465e58 <_obstack_memory_used@@Base+0x14a48>  // b.none
  465f50:	mov	w3, w4
  465f54:	str	w4, [x19, #44]
  465f58:	b	465e58 <_obstack_memory_used@@Base+0x14a48>
  465f5c:	add	x22, x22, #0x1
  465f60:	mov	w0, #0x0                   	// #0
  465f64:	str	wzr, [x19, #40]
  465f68:	b	465c90 <_obstack_memory_used@@Base+0x14880>
  465f6c:	cbnz	w27, 466000 <_obstack_memory_used@@Base+0x14bf0>
  465f70:	mov	w2, w4
  465f74:	mov	w0, #0x3f                  	// #63
  465f78:	str	w4, [x19, #8]
  465f7c:	ldr	x23, [x19, #16]
  465f80:	ldp	x21, x22, [sp, #32]
  465f84:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  465f88:	ldrb	w3, [x3, #2]
  465f8c:	ldrb	w1, [x2, #1]
  465f90:	cmp	w3, #0x3a
  465f94:	b.eq	466048 <_obstack_memory_used@@Base+0x14c38>  // b.none
  465f98:	cbnz	w1, 465fd0 <_obstack_memory_used@@Base+0x14bc0>
  465f9c:	cmp	w21, w20
  465fa0:	b.eq	466078 <_obstack_memory_used@@Base+0x14c68>  // b.none
  465fa4:	add	w1, w20, #0x1
  465fa8:	ldr	w2, [x19, #8]
  465fac:	ldr	x23, [x25, w20, sxtw #3]
  465fb0:	mov	w20, w1
  465fb4:	str	w1, [x24, #4000]
  465fb8:	str	x23, [x19, #16]
  465fbc:	str	xzr, [x19, #32]
  465fc0:	ldp	x21, x22, [sp, #32]
  465fc4:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  465fc8:	mov	w20, w1
  465fcc:	b	465ccc <_obstack_memory_used@@Base+0x148bc>
  465fd0:	add	w20, w20, #0x1
  465fd4:	ldr	w2, [x19, #8]
  465fd8:	str	w20, [x24, #4000]
  465fdc:	str	x23, [x19, #16]
  465fe0:	b	465fbc <_obstack_memory_used@@Base+0x14bac>
  465fe4:	mov	w20, w4
  465fe8:	mov	w0, #0xffffffff            	// #-1
  465fec:	ldp	x21, x22, [sp, #32]
  465ff0:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  465ff4:	mov	w20, w4
  465ff8:	str	w4, [x19, #44]
  465ffc:	b	465d2c <_obstack_memory_used@@Base+0x1491c>
  466000:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  466004:	mov	w2, #0x5                   	// #5
  466008:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  46600c:	add	x1, x1, #0x7a0
  466010:	ldr	x20, [x0, #1176]
  466014:	mov	x0, #0x0                   	// #0
  466018:	str	w4, [sp, #100]
  46601c:	bl	4049c0 <dcgettext@plt>
  466020:	ldr	w4, [sp, #100]
  466024:	mov	x2, x0
  466028:	ldr	x3, [x25]
  46602c:	mov	x0, x20
  466030:	mov	w1, #0x1                   	// #1
  466034:	str	w4, [sp, #100]
  466038:	bl	404700 <__fprintf_chk@plt>
  46603c:	ldr	w20, [x24, #4000]
  466040:	ldr	w4, [sp, #100]
  466044:	b	465f70 <_obstack_memory_used@@Base+0x14b60>
  466048:	cbz	w1, 466068 <_obstack_memory_used@@Base+0x14c58>
  46604c:	add	w20, w20, #0x1
  466050:	str	w20, [x24, #4000]
  466054:	ldr	w2, [x19, #8]
  466058:	str	x23, [x19, #16]
  46605c:	str	xzr, [x19, #32]
  466060:	ldp	x21, x22, [sp, #32]
  466064:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  466068:	mov	x23, #0x0                   	// #0
  46606c:	b	466054 <_obstack_memory_used@@Base+0x14c44>
  466070:	mov	w4, w3
  466074:	b	465e9c <_obstack_memory_used@@Base+0x14a8c>
  466078:	cbnz	w27, 4660c8 <_obstack_memory_used@@Base+0x14cb8>
  46607c:	str	w4, [x19, #8]
  466080:	mov	w0, #0x3a                  	// #58
  466084:	mov	w1, #0x3f                  	// #63
  466088:	mov	w2, w4
  46608c:	ldrb	w3, [x22]
  466090:	ldr	x23, [x19, #16]
  466094:	cmp	w3, w0
  466098:	csel	w0, w0, w1, eq  // eq = none
  46609c:	b	465fbc <_obstack_memory_used@@Base+0x14bac>
  4660a0:	ldr	w2, [x19, #8]
  4660a4:	mov	w20, w4
  4660a8:	mov	w0, #0xffffffff            	// #-1
  4660ac:	ldr	x23, [x19, #16]
  4660b0:	ldp	x21, x22, [sp, #32]
  4660b4:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  4660b8:	ldr	w2, [x19, #8]
  4660bc:	mov	w0, #0xffffffff            	// #-1
  4660c0:	ldr	x23, [x19, #16]
  4660c4:	b	465dd8 <_obstack_memory_used@@Base+0x149c8>
  4660c8:	adrp	x0, 496000 <_obstack_memory_used@@Base+0x44bf0>
  4660cc:	mov	w2, #0x5                   	// #5
  4660d0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x21bf0>
  4660d4:	add	x1, x1, #0x7c0
  4660d8:	ldr	x20, [x0, #1176]
  4660dc:	mov	x0, #0x0                   	// #0
  4660e0:	str	w4, [sp, #100]
  4660e4:	bl	4049c0 <dcgettext@plt>
  4660e8:	ldr	w4, [sp, #100]
  4660ec:	mov	x2, x0
  4660f0:	ldr	x3, [x25]
  4660f4:	mov	x0, x20
  4660f8:	mov	w1, #0x1                   	// #1
  4660fc:	str	w4, [sp, #100]
  466100:	bl	404700 <__fprintf_chk@plt>
  466104:	ldr	w20, [x24, #4000]
  466108:	ldr	w4, [sp, #100]
  46610c:	b	46607c <_obstack_memory_used@@Base+0x14c6c>
  466110:	mov	w2, #0x3                   	// #3
  466114:	mov	w1, #0x0                   	// #0
  466118:	b	450c98 <argp_parse@@Base+0x10eb8>
  46611c:	nop
  466120:	stp	x29, x30, [sp, #-48]!
  466124:	mov	x29, sp
  466128:	str	q0, [sp, #16]
  46612c:	str	q1, [sp, #32]
  466130:	ldp	x2, x0, [sp, #16]
  466134:	ldp	x5, x3, [sp, #32]
  466138:	mrs	x11, fpcr
  46613c:	lsr	x1, x0, #63
  466140:	ubfx	x6, x0, #0, #48
  466144:	and	w13, w1, #0xff
  466148:	mov	x9, x1
  46614c:	ubfx	x7, x0, #48, #15
  466150:	cbz	w7, 466568 <_obstack_memory_used@@Base+0x15158>
  466154:	mov	w1, #0x7fff                	// #32767
  466158:	cmp	w7, w1
  46615c:	b.eq	4665a8 <_obstack_memory_used@@Base+0x15198>  // b.none
  466160:	and	x7, x7, #0xffff
  466164:	extr	x6, x6, x2, #61
  466168:	mov	x15, #0xffffffffffffc001    	// #-16383
  46616c:	orr	x4, x6, #0x8000000000000
  466170:	add	x7, x7, x15
  466174:	lsl	x2, x2, #3
  466178:	mov	x14, #0x2                   	// #2
  46617c:	mov	x12, #0x1                   	// #1
  466180:	mov	x1, #0x3                   	// #3
  466184:	mov	x16, #0x0                   	// #0
  466188:	mov	x17, #0x0                   	// #0
  46618c:	mov	w0, #0x0                   	// #0
  466190:	lsr	x8, x3, #63
  466194:	ubfx	x6, x3, #0, #48
  466198:	and	w15, w8, #0xff
  46619c:	ubfx	x10, x3, #48, #15
  4661a0:	cbz	w10, 466520 <_obstack_memory_used@@Base+0x15110>
  4661a4:	mov	w12, #0x7fff                	// #32767
  4661a8:	cmp	w10, w12
  4661ac:	b.eq	4664ec <_obstack_memory_used@@Base+0x150dc>  // b.none
  4661b0:	and	x10, x10, #0xffff
  4661b4:	extr	x6, x6, x5, #61
  4661b8:	mov	x14, #0xffffffffffffc001    	// #-16383
  4661bc:	add	x10, x10, x14
  4661c0:	orr	x6, x6, #0x8000000000000
  4661c4:	sub	x7, x7, x10
  4661c8:	lsl	x5, x5, #3
  4661cc:	mov	x1, x16
  4661d0:	mov	x3, #0x0                   	// #0
  4661d4:	eor	w10, w13, w15
  4661d8:	cmp	x1, #0x9
  4661dc:	and	x12, x10, #0xff
  4661e0:	mov	x14, x12
  4661e4:	b.gt	4662ac <_obstack_memory_used@@Base+0x14e9c>
  4661e8:	cmp	x1, #0x7
  4661ec:	b.gt	466664 <_obstack_memory_used@@Base+0x15254>
  4661f0:	cmp	x1, #0x3
  4661f4:	b.eq	466210 <_obstack_memory_used@@Base+0x14e00>  // b.none
  4661f8:	b.le	4662d4 <_obstack_memory_used@@Base+0x14ec4>
  4661fc:	cmp	x1, #0x5
  466200:	b.eq	4662bc <_obstack_memory_used@@Base+0x14eac>  // b.none
  466204:	b.le	466304 <_obstack_memory_used@@Base+0x14ef4>
  466208:	cmp	x1, #0x6
  46620c:	b.eq	466278 <_obstack_memory_used@@Base+0x14e68>  // b.none
  466210:	cmp	x3, #0x1
  466214:	b.eq	466274 <_obstack_memory_used@@Base+0x14e64>  // b.none
  466218:	cbz	x3, 46622c <_obstack_memory_used@@Base+0x14e1c>
  46621c:	cmp	x3, #0x2
  466220:	b.eq	466660 <_obstack_memory_used@@Base+0x15250>  // b.none
  466224:	cmp	x3, #0x3
  466228:	b.eq	466858 <_obstack_memory_used@@Base+0x15448>  // b.none
  46622c:	mov	x1, #0x3fff                	// #16383
  466230:	mov	w10, w15
  466234:	mov	x14, x8
  466238:	add	x3, x7, x1
  46623c:	cmp	x3, #0x0
  466240:	b.le	466730 <_obstack_memory_used@@Base+0x15320>
  466244:	tst	x5, #0x7
  466248:	b.ne	466690 <_obstack_memory_used@@Base+0x15280>  // b.any
  46624c:	tbz	x6, #52, 466258 <_obstack_memory_used@@Base+0x14e48>
  466250:	and	x6, x6, #0xffefffffffffffff
  466254:	add	x3, x7, #0x4, lsl #12
  466258:	mov	x1, #0x7ffe                	// #32766
  46625c:	cmp	x3, x1
  466260:	b.gt	466814 <_obstack_memory_used@@Base+0x15404>
  466264:	and	w1, w3, #0x7fff
  466268:	extr	x2, x6, x5, #3
  46626c:	ubfx	x6, x6, #3, #48
  466270:	b	466284 <_obstack_memory_used@@Base+0x14e74>
  466274:	mov	w10, w15
  466278:	mov	w1, #0x0                   	// #0
  46627c:	mov	x6, #0x0                   	// #0
  466280:	mov	x2, #0x0                   	// #0
  466284:	mov	x5, #0x0                   	// #0
  466288:	orr	w1, w1, w10, lsl #15
  46628c:	bfxil	x5, x6, #0, #48
  466290:	fmov	d0, x2
  466294:	bfi	x5, x1, #48, #16
  466298:	fmov	v0.d[1], x5
  46629c:	cbnz	w0, 4662f4 <_obstack_memory_used@@Base+0x14ee4>
  4662a0:	ldp	x29, x30, [sp], #48
  4662a4:	ret
  4662a8:	mov	x3, #0x3                   	// #3
  4662ac:	cmp	x1, #0xb
  4662b0:	b.gt	4665d4 <_obstack_memory_used@@Base+0x151c4>
  4662b4:	cmp	x1, #0xa
  4662b8:	b.ne	466210 <_obstack_memory_used@@Base+0x14e00>  // b.any
  4662bc:	mov	w10, #0x0                   	// #0
  4662c0:	mov	x6, #0xffffffffffff        	// #281474976710655
  4662c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4662c8:	mov	w0, #0x1                   	// #1
  4662cc:	mov	w1, #0x7fff                	// #32767
  4662d0:	b	466284 <_obstack_memory_used@@Base+0x14e74>
  4662d4:	cmp	x1, #0x1
  4662d8:	b.ne	4664e0 <_obstack_memory_used@@Base+0x150d0>  // b.any
  4662dc:	mov	x4, #0x0                   	// #0
  4662e0:	fmov	d0, x4
  4662e4:	lsl	x12, x12, #63
  4662e8:	orr	w0, w0, #0x2
  4662ec:	orr	x5, x12, #0x7fff000000000000
  4662f0:	fmov	v0.d[1], x5
  4662f4:	str	q0, [sp, #16]
  4662f8:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  4662fc:	ldr	q0, [sp, #16]
  466300:	b	4662a0 <_obstack_memory_used@@Base+0x14e90>
  466304:	cmp	x1, #0x4
  466308:	b.eq	466278 <_obstack_memory_used@@Base+0x14e68>  // b.none
  46630c:	cmp	x4, x6
  466310:	b.ls	466674 <_obstack_memory_used@@Base+0x15264>  // b.plast
  466314:	lsr	x3, x4, #1
  466318:	extr	x8, x4, x2, #1
  46631c:	lsl	x2, x2, #63
  466320:	ubfx	x13, x6, #20, #32
  466324:	extr	x9, x6, x5, #52
  466328:	lsl	x12, x5, #12
  46632c:	and	x15, x9, #0xffffffff
  466330:	udiv	x5, x3, x13
  466334:	msub	x3, x5, x13, x3
  466338:	mul	x1, x15, x5
  46633c:	extr	x3, x3, x8, #32
  466340:	cmp	x1, x3
  466344:	b.ls	466358 <_obstack_memory_used@@Base+0x14f48>  // b.plast
  466348:	adds	x3, x9, x3
  46634c:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
  466350:	b.hi	466930 <_obstack_memory_used@@Base+0x15520>  // b.pmore
  466354:	sub	x5, x5, #0x1
  466358:	sub	x3, x3, x1
  46635c:	mov	x4, x8
  466360:	udiv	x1, x3, x13
  466364:	msub	x3, x1, x13, x3
  466368:	mul	x6, x15, x1
  46636c:	bfi	x4, x3, #32, #32
  466370:	cmp	x6, x4
  466374:	b.ls	466388 <_obstack_memory_used@@Base+0x14f78>  // b.plast
  466378:	adds	x4, x9, x4
  46637c:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
  466380:	b.hi	46693c <_obstack_memory_used@@Base+0x1552c>  // b.pmore
  466384:	sub	x1, x1, #0x1
  466388:	orr	x8, x1, x5, lsl #32
  46638c:	and	x17, x12, #0xffffffff
  466390:	and	x1, x8, #0xffffffff
  466394:	lsr	x16, x12, #32
  466398:	lsr	x5, x8, #32
  46639c:	sub	x4, x4, x6
  4663a0:	mov	x18, #0x100000000           	// #4294967296
  4663a4:	mul	x3, x1, x17
  4663a8:	mul	x30, x5, x17
  4663ac:	madd	x6, x16, x1, x30
  4663b0:	and	x1, x3, #0xffffffff
  4663b4:	mul	x5, x5, x16
  4663b8:	add	x3, x6, x3, lsr #32
  4663bc:	add	x6, x5, x18
  4663c0:	cmp	x30, x3
  4663c4:	csel	x5, x6, x5, hi  // hi = pmore
  4663c8:	add	x1, x1, x3, lsl #32
  4663cc:	add	x5, x5, x3, lsr #32
  4663d0:	cmp	x4, x5
  4663d4:	b.cc	4666fc <_obstack_memory_used@@Base+0x152ec>  // b.lo, b.ul, b.last
  4663d8:	ccmp	x2, x1, #0x2, eq  // eq = none
  4663dc:	mov	x6, x8
  4663e0:	b.cc	4666fc <_obstack_memory_used@@Base+0x152ec>  // b.lo, b.ul, b.last
  4663e4:	subs	x8, x2, x1
  4663e8:	mov	x3, #0x3fff                	// #16383
  4663ec:	cmp	x2, x1
  4663f0:	add	x3, x7, x3
  4663f4:	sbc	x4, x4, x5
  4663f8:	cmp	x9, x4
  4663fc:	b.eq	466948 <_obstack_memory_used@@Base+0x15538>  // b.none
  466400:	udiv	x5, x4, x13
  466404:	msub	x4, x5, x13, x4
  466408:	mul	x2, x15, x5
  46640c:	extr	x1, x4, x8, #32
  466410:	cmp	x2, x1
  466414:	b.ls	466428 <_obstack_memory_used@@Base+0x15018>  // b.plast
  466418:	adds	x1, x9, x1
  46641c:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
  466420:	b.hi	466a00 <_obstack_memory_used@@Base+0x155f0>  // b.pmore
  466424:	sub	x5, x5, #0x1
  466428:	sub	x1, x1, x2
  46642c:	udiv	x2, x1, x13
  466430:	msub	x1, x2, x13, x1
  466434:	mul	x15, x15, x2
  466438:	bfi	x8, x1, #32, #32
  46643c:	mov	x1, x8
  466440:	cmp	x15, x8
  466444:	b.ls	466458 <_obstack_memory_used@@Base+0x15048>  // b.plast
  466448:	adds	x1, x9, x8
  46644c:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
  466450:	b.hi	466a0c <_obstack_memory_used@@Base+0x155fc>  // b.pmore
  466454:	sub	x2, x2, #0x1
  466458:	orr	x5, x2, x5, lsl #32
  46645c:	sub	x1, x1, x15
  466460:	and	x4, x5, #0xffffffff
  466464:	mov	x13, #0x100000000           	// #4294967296
  466468:	lsr	x15, x5, #32
  46646c:	mul	x2, x17, x4
  466470:	mul	x17, x15, x17
  466474:	madd	x4, x16, x4, x17
  466478:	and	x8, x2, #0xffffffff
  46647c:	mul	x16, x16, x15
  466480:	add	x2, x4, x2, lsr #32
  466484:	add	x4, x16, x13
  466488:	cmp	x17, x2
  46648c:	csel	x16, x4, x16, hi  // hi = pmore
  466490:	add	x4, x8, x2, lsl #32
  466494:	add	x16, x16, x2, lsr #32
  466498:	cmp	x1, x16
  46649c:	b.cs	466880 <_obstack_memory_used@@Base+0x15470>  // b.hs, b.nlast
  4664a0:	adds	x2, x9, x1
  4664a4:	sub	x8, x5, #0x1
  4664a8:	mov	x1, x2
  4664ac:	b.cs	4664c0 <_obstack_memory_used@@Base+0x150b0>  // b.hs, b.nlast
  4664b0:	cmp	x2, x16
  4664b4:	b.cc	466980 <_obstack_memory_used@@Base+0x15570>  // b.lo, b.ul, b.last
  4664b8:	ccmp	x12, x4, #0x2, eq  // eq = none
  4664bc:	b.cc	466980 <_obstack_memory_used@@Base+0x15570>  // b.lo, b.ul, b.last
  4664c0:	cmp	x12, x4
  4664c4:	mov	x5, x8
  4664c8:	cset	w2, ne  // ne = any
  4664cc:	cmp	w2, #0x0
  4664d0:	orr	x2, x5, #0x1
  4664d4:	ccmp	x1, x16, #0x0, eq  // eq = none
  4664d8:	csel	x5, x2, x5, ne  // ne = any
  4664dc:	b	46623c <_obstack_memory_used@@Base+0x14e2c>
  4664e0:	cmp	x1, #0x2
  4664e4:	b.eq	466278 <_obstack_memory_used@@Base+0x14e68>  // b.none
  4664e8:	b	46630c <_obstack_memory_used@@Base+0x14efc>
  4664ec:	mov	x10, #0xffffffffffff8001    	// #-32767
  4664f0:	orr	x3, x6, x5
  4664f4:	add	x7, x7, x10
  4664f8:	cbz	x3, 46664c <_obstack_memory_used@@Base+0x1523c>
  4664fc:	eor	w10, w13, w15
  466500:	ands	x3, x6, #0x800000000000
  466504:	and	x12, x10, #0xff
  466508:	csinc	w0, w0, wzr, ne  // ne = any
  46650c:	mov	x14, x12
  466510:	cmp	x1, #0x9
  466514:	b.gt	4666c4 <_obstack_memory_used@@Base+0x152b4>
  466518:	mov	x3, #0x3                   	// #3
  46651c:	b	4661e8 <_obstack_memory_used@@Base+0x14dd8>
  466520:	orr	x1, x6, x5
  466524:	cbz	x1, 466638 <_obstack_memory_used@@Base+0x15228>
  466528:	cbz	x6, 4667cc <_obstack_memory_used@@Base+0x153bc>
  46652c:	clz	x1, x6
  466530:	sub	x3, x1, #0xf
  466534:	add	w12, w3, #0x3
  466538:	mov	w10, #0x3d                  	// #61
  46653c:	sub	w3, w10, w3
  466540:	lsl	x6, x6, x12
  466544:	lsr	x3, x5, x3
  466548:	orr	x6, x3, x6
  46654c:	lsl	x5, x5, x12
  466550:	add	x7, x1, x7
  466554:	mov	x12, #0x3fef                	// #16367
  466558:	mov	x1, x16
  46655c:	add	x7, x7, x12
  466560:	mov	x3, #0x0                   	// #0
  466564:	b	4661d4 <_obstack_memory_used@@Base+0x14dc4>
  466568:	orr	x4, x6, x2
  46656c:	cbz	x4, 466614 <_obstack_memory_used@@Base+0x15204>
  466570:	cbz	x6, 4667f0 <_obstack_memory_used@@Base+0x153e0>
  466574:	clz	x0, x6
  466578:	sub	x4, x0, #0xf
  46657c:	add	w7, w4, #0x3
  466580:	mov	w1, #0x3d                  	// #61
  466584:	sub	w4, w1, w4
  466588:	lsl	x6, x6, x7
  46658c:	lsr	x4, x2, x4
  466590:	orr	x4, x4, x6
  466594:	lsl	x2, x2, x7
  466598:	mov	x7, #0xffffffffffffc011    	// #-16367
  46659c:	mov	x14, #0x2                   	// #2
  4665a0:	sub	x7, x7, x0
  4665a4:	b	46617c <_obstack_memory_used@@Base+0x14d6c>
  4665a8:	orr	x4, x6, x2
  4665ac:	cbnz	x4, 4665ec <_obstack_memory_used@@Base+0x151dc>
  4665b0:	mov	x2, #0x0                   	// #0
  4665b4:	mov	x14, #0xa                   	// #10
  4665b8:	mov	x12, #0x9                   	// #9
  4665bc:	mov	x1, #0xb                   	// #11
  4665c0:	mov	x16, #0x8                   	// #8
  4665c4:	mov	x7, #0x7fff                	// #32767
  4665c8:	mov	x17, #0x2                   	// #2
  4665cc:	mov	w0, #0x0                   	// #0
  4665d0:	b	466190 <_obstack_memory_used@@Base+0x14d80>
  4665d4:	mov	w15, w13
  4665d8:	mov	x6, x4
  4665dc:	mov	x5, x2
  4665e0:	mov	x8, x9
  4665e4:	mov	x3, x17
  4665e8:	b	466210 <_obstack_memory_used@@Base+0x14e00>
  4665ec:	lsr	x0, x6, #47
  4665f0:	mov	x4, x6
  4665f4:	eor	w0, w0, #0x1
  4665f8:	mov	x14, #0xe                   	// #14
  4665fc:	mov	x12, #0xd                   	// #13
  466600:	mov	x1, #0xf                   	// #15
  466604:	mov	x16, #0xc                   	// #12
  466608:	mov	x7, #0x7fff                	// #32767
  46660c:	mov	x17, #0x3                   	// #3
  466610:	b	466190 <_obstack_memory_used@@Base+0x14d80>
  466614:	mov	x2, #0x0                   	// #0
  466618:	mov	x14, #0x6                   	// #6
  46661c:	mov	x12, #0x5                   	// #5
  466620:	mov	x1, #0x7                   	// #7
  466624:	mov	x16, #0x4                   	// #4
  466628:	mov	x7, #0x0                   	// #0
  46662c:	mov	x17, #0x1                   	// #1
  466630:	mov	w0, #0x0                   	// #0
  466634:	b	466190 <_obstack_memory_used@@Base+0x14d80>
  466638:	mov	x1, x12
  46663c:	mov	x6, #0x0                   	// #0
  466640:	mov	x5, #0x0                   	// #0
  466644:	mov	x3, #0x1                   	// #1
  466648:	b	4661d4 <_obstack_memory_used@@Base+0x14dc4>
  46664c:	mov	x1, x14
  466650:	mov	x6, #0x0                   	// #0
  466654:	mov	x5, #0x0                   	// #0
  466658:	mov	x3, #0x2                   	// #2
  46665c:	b	4661d4 <_obstack_memory_used@@Base+0x14dc4>
  466660:	mov	w10, w15
  466664:	mov	w1, #0x7fff                	// #32767
  466668:	mov	x6, #0x0                   	// #0
  46666c:	mov	x2, #0x0                   	// #0
  466670:	b	466284 <_obstack_memory_used@@Base+0x14e74>
  466674:	ccmp	x5, x2, #0x2, eq  // eq = none
  466678:	b.ls	466314 <_obstack_memory_used@@Base+0x14f04>  // b.plast
  46667c:	mov	x8, x2
  466680:	sub	x7, x7, #0x1
  466684:	mov	x3, x4
  466688:	mov	x2, #0x0                   	// #0
  46668c:	b	466320 <_obstack_memory_used@@Base+0x14f10>
  466690:	and	x1, x11, #0xc00000
  466694:	orr	w0, w0, #0x10
  466698:	cmp	x1, #0x400, lsl #12
  46669c:	b.eq	4669cc <_obstack_memory_used@@Base+0x155bc>  // b.none
  4666a0:	cmp	x1, #0x800, lsl #12
  4666a4:	b.eq	4668fc <_obstack_memory_used@@Base+0x154ec>  // b.none
  4666a8:	cbnz	x1, 46624c <_obstack_memory_used@@Base+0x14e3c>
  4666ac:	and	x1, x5, #0xf
  4666b0:	cmp	x1, #0x4
  4666b4:	b.eq	46624c <_obstack_memory_used@@Base+0x14e3c>  // b.none
  4666b8:	adds	x5, x5, #0x4
  4666bc:	cinc	x6, x6, cs  // cs = hs, nlast
  4666c0:	b	46624c <_obstack_memory_used@@Base+0x14e3c>
  4666c4:	cmp	x1, #0xf
  4666c8:	b.ne	4662a8 <_obstack_memory_used@@Base+0x14e98>  // b.any
  4666cc:	tbz	x4, #47, 4666e8 <_obstack_memory_used@@Base+0x152d8>
  4666d0:	cbnz	x3, 4666e8 <_obstack_memory_used@@Base+0x152d8>
  4666d4:	orr	x6, x6, #0x800000000000
  4666d8:	mov	w10, w15
  4666dc:	mov	x2, x5
  4666e0:	mov	w1, #0x7fff                	// #32767
  4666e4:	b	466284 <_obstack_memory_used@@Base+0x14e74>
  4666e8:	orr	x6, x4, #0x800000000000
  4666ec:	mov	w10, w13
  4666f0:	and	x6, x6, #0xffffffffffff
  4666f4:	mov	w1, #0x7fff                	// #32767
  4666f8:	b	466284 <_obstack_memory_used@@Base+0x14e74>
  4666fc:	adds	x3, x2, x12
  466700:	sub	x6, x8, #0x1
  466704:	adc	x4, x4, x9
  466708:	cset	x18, cs  // cs = hs, nlast
  46670c:	mov	x2, x3
  466710:	cmp	x9, x4
  466714:	b.cs	466870 <_obstack_memory_used@@Base+0x15460>  // b.hs, b.nlast
  466718:	cmp	x5, x4
  46671c:	b.ls	466898 <_obstack_memory_used@@Base+0x15488>  // b.plast
  466720:	adds	x2, x12, x3
  466724:	sub	x6, x8, #0x2
  466728:	adc	x4, x4, x9
  46672c:	b	4663e4 <_obstack_memory_used@@Base+0x14fd4>
  466730:	mov	x1, #0x1                   	// #1
  466734:	sub	x1, x1, x3
  466738:	cmp	x1, #0x74
  46673c:	b.le	466758 <_obstack_memory_used@@Base+0x15348>
  466740:	orr	x2, x5, x6
  466744:	cbnz	x2, 466964 <_obstack_memory_used@@Base+0x15554>
  466748:	orr	w0, w0, #0x8
  46674c:	mov	w1, #0x0                   	// #0
  466750:	mov	x6, #0x0                   	// #0
  466754:	b	46683c <_obstack_memory_used@@Base+0x1542c>
  466758:	cmp	x1, #0x3f
  46675c:	b.le	4668a4 <_obstack_memory_used@@Base+0x15494>
  466760:	mov	w2, #0x80                  	// #128
  466764:	sub	w2, w2, w1
  466768:	cmp	x1, #0x40
  46676c:	sub	w1, w1, #0x40
  466770:	lsl	x2, x6, x2
  466774:	orr	x2, x5, x2
  466778:	csel	x5, x2, x5, ne  // ne = any
  46677c:	lsr	x6, x6, x1
  466780:	cmp	x5, #0x0
  466784:	cset	x2, ne  // ne = any
  466788:	orr	x2, x2, x6
  46678c:	ands	x6, x2, #0x7
  466790:	b.eq	4668d8 <_obstack_memory_used@@Base+0x154c8>  // b.none
  466794:	mov	x6, #0x0                   	// #0
  466798:	and	x11, x11, #0xc00000
  46679c:	orr	w0, w0, #0x10
  4667a0:	cmp	x11, #0x400, lsl #12
  4667a4:	b.eq	466a18 <_obstack_memory_used@@Base+0x15608>  // b.none
  4667a8:	cmp	x11, #0x800, lsl #12
  4667ac:	b.eq	466a38 <_obstack_memory_used@@Base+0x15628>  // b.none
  4667b0:	cbz	x11, 4669a0 <_obstack_memory_used@@Base+0x15590>
  4667b4:	tbnz	x6, #51, 4669b8 <_obstack_memory_used@@Base+0x155a8>
  4667b8:	orr	w0, w0, #0x8
  4667bc:	extr	x2, x6, x2, #3
  4667c0:	mov	w1, #0x0                   	// #0
  4667c4:	ubfx	x6, x6, #3, #48
  4667c8:	b	46683c <_obstack_memory_used@@Base+0x1542c>
  4667cc:	clz	x1, x5
  4667d0:	add	x3, x1, #0x31
  4667d4:	add	x1, x1, #0x40
  4667d8:	cmp	x3, #0x3c
  4667dc:	b.le	466534 <_obstack_memory_used@@Base+0x15124>
  4667e0:	sub	w6, w3, #0x3d
  4667e4:	lsl	x6, x5, x6
  4667e8:	mov	x5, #0x0                   	// #0
  4667ec:	b	466550 <_obstack_memory_used@@Base+0x15140>
  4667f0:	clz	x7, x2
  4667f4:	add	x4, x7, #0x31
  4667f8:	add	x0, x7, #0x40
  4667fc:	cmp	x4, #0x3c
  466800:	b.le	46657c <_obstack_memory_used@@Base+0x1516c>
  466804:	sub	w4, w4, #0x3d
  466808:	lsl	x4, x2, x4
  46680c:	mov	x2, #0x0                   	// #0
  466810:	b	466598 <_obstack_memory_used@@Base+0x15188>
  466814:	and	x2, x11, #0xc00000
  466818:	cmp	x2, #0x400, lsl #12
  46681c:	b.eq	4669e4 <_obstack_memory_used@@Base+0x155d4>  // b.none
  466820:	cmp	x2, #0x800, lsl #12
  466824:	b.eq	466914 <_obstack_memory_used@@Base+0x15504>  // b.none
  466828:	cbz	x2, 4668f0 <_obstack_memory_used@@Base+0x154e0>
  46682c:	mov	x6, #0xffffffffffff        	// #281474976710655
  466830:	mov	x2, #0xffffffffffffffff    	// #-1
  466834:	mov	w3, #0x14                  	// #20
  466838:	orr	w0, w0, w3
  46683c:	mov	x5, #0x0                   	// #0
  466840:	orr	w1, w1, w10, lsl #15
  466844:	bfxil	x5, x6, #0, #48
  466848:	fmov	d0, x2
  46684c:	bfi	x5, x1, #48, #16
  466850:	fmov	v0.d[1], x5
  466854:	b	4662f4 <_obstack_memory_used@@Base+0x14ee4>
  466858:	orr	x6, x6, #0x800000000000
  46685c:	mov	w10, w15
  466860:	and	x6, x6, #0xffffffffffff
  466864:	mov	x2, x5
  466868:	mov	w1, #0x7fff                	// #32767
  46686c:	b	466284 <_obstack_memory_used@@Base+0x14e74>
  466870:	cmp	x18, #0x0
  466874:	ccmp	x9, x4, #0x0, eq  // eq = none
  466878:	b.ne	4663e4 <_obstack_memory_used@@Base+0x14fd4>  // b.any
  46687c:	b	466718 <_obstack_memory_used@@Base+0x15308>
  466880:	cmp	x4, #0x0
  466884:	cset	w2, ne  // ne = any
  466888:	cmp	w2, #0x0
  46688c:	ccmp	x1, x16, #0x0, ne  // ne = any
  466890:	b.ne	4664cc <_obstack_memory_used@@Base+0x150bc>  // b.any
  466894:	b	4664a0 <_obstack_memory_used@@Base+0x15090>
  466898:	ccmp	x1, x3, #0x0, eq  // eq = none
  46689c:	b.ls	4663e4 <_obstack_memory_used@@Base+0x14fd4>  // b.plast
  4668a0:	b	466720 <_obstack_memory_used@@Base+0x15310>
  4668a4:	mov	w2, #0x40                  	// #64
  4668a8:	sub	w2, w2, w1
  4668ac:	lsr	x4, x5, x1
  4668b0:	lsl	x5, x5, x2
  4668b4:	cmp	x5, #0x0
  4668b8:	cset	x3, ne  // ne = any
  4668bc:	lsl	x2, x6, x2
  4668c0:	orr	x2, x2, x4
  4668c4:	lsr	x6, x6, x1
  4668c8:	orr	x2, x2, x3
  4668cc:	tst	x2, #0x7
  4668d0:	b.ne	466798 <_obstack_memory_used@@Base+0x15388>  // b.any
  4668d4:	tbnz	x6, #51, 466a44 <_obstack_memory_used@@Base+0x15634>
  4668d8:	mov	w1, #0x0                   	// #0
  4668dc:	extr	x2, x6, x2, #3
  4668e0:	ubfx	x6, x6, #3, #48
  4668e4:	tbz	w11, #11, 466284 <_obstack_memory_used@@Base+0x14e74>
  4668e8:	orr	w0, w0, #0x8
  4668ec:	b	46683c <_obstack_memory_used@@Base+0x1542c>
  4668f0:	mov	w1, #0x7fff                	// #32767
  4668f4:	mov	x6, #0x0                   	// #0
  4668f8:	b	466834 <_obstack_memory_used@@Base+0x15424>
  4668fc:	mov	w10, #0x0                   	// #0
  466900:	cbz	x14, 46624c <_obstack_memory_used@@Base+0x14e3c>
  466904:	adds	x5, x5, #0x8
  466908:	mov	w10, #0x1                   	// #1
  46690c:	cinc	x6, x6, cs  // cs = hs, nlast
  466910:	b	46624c <_obstack_memory_used@@Base+0x14e3c>
  466914:	cmp	x14, #0x0
  466918:	mov	w2, #0x7fff                	// #32767
  46691c:	mov	x6, #0xffffffffffff        	// #281474976710655
  466920:	csel	w1, w1, w2, eq  // eq = none
  466924:	csel	x6, x6, xzr, eq  // eq = none
  466928:	csetm	x2, eq  // eq = none
  46692c:	b	466834 <_obstack_memory_used@@Base+0x15424>
  466930:	sub	x5, x5, #0x2
  466934:	add	x3, x3, x9
  466938:	b	466358 <_obstack_memory_used@@Base+0x14f48>
  46693c:	sub	x1, x1, #0x2
  466940:	add	x4, x4, x9
  466944:	b	466388 <_obstack_memory_used@@Base+0x14f78>
  466948:	cmp	x3, #0x0
  46694c:	mov	x5, #0xffffffffffffffff    	// #-1
  466950:	b.gt	466690 <_obstack_memory_used@@Base+0x15280>
  466954:	mov	x1, #0x1                   	// #1
  466958:	sub	x1, x1, x3
  46695c:	cmp	x1, #0x74
  466960:	b.le	466758 <_obstack_memory_used@@Base+0x15348>
  466964:	and	x11, x11, #0xc00000
  466968:	orr	w0, w0, #0x10
  46696c:	cmp	x11, #0x400, lsl #12
  466970:	b.eq	466a2c <_obstack_memory_used@@Base+0x1561c>  // b.none
  466974:	cmp	x11, #0x800, lsl #12
  466978:	csel	x2, x14, xzr, eq  // eq = none
  46697c:	b	466748 <_obstack_memory_used@@Base+0x15338>
  466980:	lsl	x8, x12, #1
  466984:	sub	x5, x5, #0x2
  466988:	cmp	x12, x8
  46698c:	cinc	x1, x9, hi  // hi = pmore
  466990:	cmp	x4, x8
  466994:	add	x1, x2, x1
  466998:	cset	w2, ne  // ne = any
  46699c:	b	4664cc <_obstack_memory_used@@Base+0x150bc>
  4669a0:	and	x1, x2, #0xf
  4669a4:	cmp	x1, #0x4
  4669a8:	b.eq	4669b4 <_obstack_memory_used@@Base+0x155a4>  // b.none
  4669ac:	adds	x2, x2, #0x4
  4669b0:	cinc	x6, x6, cs  // cs = hs, nlast
  4669b4:	tbz	x6, #51, 4667b8 <_obstack_memory_used@@Base+0x153a8>
  4669b8:	orr	w0, w0, #0x8
  4669bc:	mov	w1, #0x1                   	// #1
  4669c0:	mov	x6, #0x0                   	// #0
  4669c4:	mov	x2, #0x0                   	// #0
  4669c8:	b	46683c <_obstack_memory_used@@Base+0x1542c>
  4669cc:	mov	w10, #0x1                   	// #1
  4669d0:	cbnz	x14, 46624c <_obstack_memory_used@@Base+0x14e3c>
  4669d4:	adds	x5, x5, #0x8
  4669d8:	mov	w10, #0x0                   	// #0
  4669dc:	cinc	x6, x6, cs  // cs = hs, nlast
  4669e0:	b	46624c <_obstack_memory_used@@Base+0x14e3c>
  4669e4:	cmp	x14, #0x0
  4669e8:	mov	w2, #0x7fff                	// #32767
  4669ec:	mov	x6, #0xffffffffffff        	// #281474976710655
  4669f0:	csel	w1, w1, w2, ne  // ne = any
  4669f4:	csel	x6, x6, xzr, ne  // ne = any
  4669f8:	csetm	x2, ne  // ne = any
  4669fc:	b	466834 <_obstack_memory_used@@Base+0x15424>
  466a00:	sub	x5, x5, #0x2
  466a04:	add	x1, x1, x9
  466a08:	b	466428 <_obstack_memory_used@@Base+0x15018>
  466a0c:	sub	x2, x2, #0x2
  466a10:	add	x1, x1, x9
  466a14:	b	466458 <_obstack_memory_used@@Base+0x15048>
  466a18:	cbnz	x14, 4669b4 <_obstack_memory_used@@Base+0x155a4>
  466a1c:	adds	x2, x2, #0x8
  466a20:	cinc	x6, x6, cs  // cs = hs, nlast
  466a24:	tbnz	x6, #51, 4669b8 <_obstack_memory_used@@Base+0x155a8>
  466a28:	b	4667b8 <_obstack_memory_used@@Base+0x153a8>
  466a2c:	mov	x2, #0x1                   	// #1
  466a30:	sub	x2, x2, x14
  466a34:	b	466748 <_obstack_memory_used@@Base+0x15338>
  466a38:	cbnz	x14, 466a1c <_obstack_memory_used@@Base+0x1560c>
  466a3c:	tbnz	x6, #51, 4669b8 <_obstack_memory_used@@Base+0x155a8>
  466a40:	b	4667b8 <_obstack_memory_used@@Base+0x153a8>
  466a44:	orr	w0, w0, #0x10
  466a48:	b	4669b8 <_obstack_memory_used@@Base+0x155a8>
  466a4c:	nop
  466a50:	stp	x29, x30, [sp, #-48]!
  466a54:	mov	x29, sp
  466a58:	str	q0, [sp, #16]
  466a5c:	str	q1, [sp, #32]
  466a60:	ldp	x6, x1, [sp, #16]
  466a64:	ldp	x7, x0, [sp, #32]
  466a68:	mrs	x2, fpcr
  466a6c:	ubfx	x4, x1, #48, #15
  466a70:	lsr	x2, x1, #63
  466a74:	lsr	x3, x0, #63
  466a78:	ubfx	x9, x0, #0, #48
  466a7c:	mov	x5, #0x7fff                	// #32767
  466a80:	mov	x10, x6
  466a84:	cmp	x4, x5
  466a88:	and	w2, w2, #0xff
  466a8c:	ubfx	x1, x1, #0, #48
  466a90:	and	w3, w3, #0xff
  466a94:	ubfx	x0, x0, #48, #15
  466a98:	b.eq	466acc <_obstack_memory_used@@Base+0x156bc>  // b.none
  466a9c:	cmp	x0, x5
  466aa0:	b.eq	466ab8 <_obstack_memory_used@@Base+0x156a8>  // b.none
  466aa4:	cmp	x4, x0
  466aa8:	mov	w0, #0x1                   	// #1
  466aac:	b.eq	466ae4 <_obstack_memory_used@@Base+0x156d4>  // b.none
  466ab0:	ldp	x29, x30, [sp], #48
  466ab4:	ret
  466ab8:	orr	x8, x9, x7
  466abc:	cbnz	x8, 466b48 <_obstack_memory_used@@Base+0x15738>
  466ac0:	mov	w0, #0x1                   	// #1
  466ac4:	ldp	x29, x30, [sp], #48
  466ac8:	ret
  466acc:	orr	x5, x1, x6
  466ad0:	cbnz	x5, 466b18 <_obstack_memory_used@@Base+0x15708>
  466ad4:	cmp	x0, x4
  466ad8:	b.ne	466ac0 <_obstack_memory_used@@Base+0x156b0>  // b.any
  466adc:	orr	x8, x9, x7
  466ae0:	cbnz	x8, 466b48 <_obstack_memory_used@@Base+0x15738>
  466ae4:	cmp	x1, x9
  466ae8:	mov	w0, #0x1                   	// #1
  466aec:	ccmp	x6, x7, #0x0, eq  // eq = none
  466af0:	b.ne	466ab0 <_obstack_memory_used@@Base+0x156a0>  // b.any
  466af4:	cmp	w2, w3
  466af8:	mov	w0, #0x0                   	// #0
  466afc:	b.eq	466ab0 <_obstack_memory_used@@Base+0x156a0>  // b.none
  466b00:	mov	w0, #0x1                   	// #1
  466b04:	cbnz	x4, 466ab0 <_obstack_memory_used@@Base+0x156a0>
  466b08:	orr	x1, x1, x10
  466b0c:	cmp	x1, #0x0
  466b10:	cset	w0, ne  // ne = any
  466b14:	b	466ab0 <_obstack_memory_used@@Base+0x156a0>
  466b18:	tst	x1, #0x800000000000
  466b1c:	b.ne	466b34 <_obstack_memory_used@@Base+0x15724>  // b.any
  466b20:	mov	w0, #0x1                   	// #1
  466b24:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  466b28:	mov	w0, #0x1                   	// #1
  466b2c:	ldp	x29, x30, [sp], #48
  466b30:	ret
  466b34:	cmp	x0, x4
  466b38:	mov	w0, #0x1                   	// #1
  466b3c:	b.ne	466ab0 <_obstack_memory_used@@Base+0x156a0>  // b.any
  466b40:	orr	x8, x9, x7
  466b44:	cbz	x8, 466ab0 <_obstack_memory_used@@Base+0x156a0>
  466b48:	tst	x9, #0x800000000000
  466b4c:	b.eq	466b20 <_obstack_memory_used@@Base+0x15710>  // b.none
  466b50:	b	466ac0 <_obstack_memory_used@@Base+0x156b0>
  466b54:	nop
  466b58:	stp	x29, x30, [sp, #-48]!
  466b5c:	mov	x29, sp
  466b60:	str	q0, [sp, #16]
  466b64:	str	q1, [sp, #32]
  466b68:	ldp	x8, x1, [sp, #16]
  466b6c:	ldp	x9, x0, [sp, #32]
  466b70:	mrs	x2, fpcr
  466b74:	ubfx	x4, x1, #48, #15
  466b78:	ubfx	x10, x1, #0, #48
  466b7c:	lsr	x2, x1, #63
  466b80:	mov	x7, #0x7fff                	// #32767
  466b84:	mov	x5, x8
  466b88:	cmp	x4, x7
  466b8c:	ubfx	x11, x0, #0, #48
  466b90:	ubfx	x6, x0, #48, #15
  466b94:	lsr	x1, x0, #63
  466b98:	mov	x3, x9
  466b9c:	b.eq	466bd8 <_obstack_memory_used@@Base+0x157c8>  // b.none
  466ba0:	cmp	x6, x7
  466ba4:	b.eq	466be8 <_obstack_memory_used@@Base+0x157d8>  // b.none
  466ba8:	cbnz	x4, 466c10 <_obstack_memory_used@@Base+0x15800>
  466bac:	orr	x5, x10, x8
  466bb0:	cmp	x5, #0x0
  466bb4:	cset	w0, eq  // eq = none
  466bb8:	cbnz	x6, 466bc4 <_obstack_memory_used@@Base+0x157b4>
  466bbc:	orr	x3, x11, x9
  466bc0:	cbz	x3, 466c30 <_obstack_memory_used@@Base+0x15820>
  466bc4:	cbz	w0, 466bf4 <_obstack_memory_used@@Base+0x157e4>
  466bc8:	cmp	x1, #0x0
  466bcc:	csinv	w0, w0, wzr, ne  // ne = any
  466bd0:	ldp	x29, x30, [sp], #48
  466bd4:	ret
  466bd8:	orr	x0, x10, x8
  466bdc:	cbnz	x0, 466c3c <_obstack_memory_used@@Base+0x1582c>
  466be0:	cmp	x6, x4
  466be4:	b.ne	466c10 <_obstack_memory_used@@Base+0x15800>  // b.any
  466be8:	orr	x3, x11, x3
  466bec:	cbnz	x3, 466c3c <_obstack_memory_used@@Base+0x1582c>
  466bf0:	cbz	x4, 466c20 <_obstack_memory_used@@Base+0x15810>
  466bf4:	cmp	x2, x1
  466bf8:	b.eq	466c50 <_obstack_memory_used@@Base+0x15840>  // b.none
  466bfc:	cmp	x2, #0x0
  466c00:	mov	w0, #0xffffffff            	// #-1
  466c04:	cneg	w0, w0, eq  // eq = none
  466c08:	ldp	x29, x30, [sp], #48
  466c0c:	ret
  466c10:	cbnz	x6, 466bf4 <_obstack_memory_used@@Base+0x157e4>
  466c14:	orr	x3, x11, x3
  466c18:	cbnz	x3, 466bf4 <_obstack_memory_used@@Base+0x157e4>
  466c1c:	b	466bfc <_obstack_memory_used@@Base+0x157ec>
  466c20:	orr	x5, x10, x5
  466c24:	cmp	x5, #0x0
  466c28:	cset	w0, eq  // eq = none
  466c2c:	b	466bc4 <_obstack_memory_used@@Base+0x157b4>
  466c30:	mov	w0, #0x0                   	// #0
  466c34:	cbz	x5, 466bd0 <_obstack_memory_used@@Base+0x157c0>
  466c38:	b	466bfc <_obstack_memory_used@@Base+0x157ec>
  466c3c:	mov	w0, #0x1                   	// #1
  466c40:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  466c44:	mov	w0, #0xfffffffe            	// #-2
  466c48:	ldp	x29, x30, [sp], #48
  466c4c:	ret
  466c50:	cmp	x4, x6
  466c54:	b.gt	466bfc <_obstack_memory_used@@Base+0x157ec>
  466c58:	b.lt	466c90 <_obstack_memory_used@@Base+0x15880>  // b.tstop
  466c5c:	cmp	x10, x11
  466c60:	b.hi	466bfc <_obstack_memory_used@@Base+0x157ec>  // b.pmore
  466c64:	cset	w0, eq  // eq = none
  466c68:	cmp	w0, #0x0
  466c6c:	ccmp	x8, x9, #0x0, ne  // ne = any
  466c70:	b.hi	466bfc <_obstack_memory_used@@Base+0x157ec>  // b.pmore
  466c74:	cmp	x10, x11
  466c78:	b.cc	466c90 <_obstack_memory_used@@Base+0x15880>  // b.lo, b.ul, b.last
  466c7c:	cmp	w0, #0x0
  466c80:	mov	w0, #0x0                   	// #0
  466c84:	ccmp	x8, x9, #0x2, ne  // ne = any
  466c88:	b.cs	466bd0 <_obstack_memory_used@@Base+0x157c0>  // b.hs, b.nlast
  466c8c:	nop
  466c90:	cmp	x2, #0x0
  466c94:	mov	w0, #0x1                   	// #1
  466c98:	cneg	w0, w0, eq  // eq = none
  466c9c:	b	466bd0 <_obstack_memory_used@@Base+0x157c0>
  466ca0:	stp	x29, x30, [sp, #-48]!
  466ca4:	mov	x29, sp
  466ca8:	str	q0, [sp, #16]
  466cac:	str	q1, [sp, #32]
  466cb0:	ldp	x8, x1, [sp, #16]
  466cb4:	ldp	x9, x0, [sp, #32]
  466cb8:	mrs	x2, fpcr
  466cbc:	ubfx	x4, x1, #48, #15
  466cc0:	ubfx	x10, x1, #0, #48
  466cc4:	lsr	x2, x1, #63
  466cc8:	mov	x5, #0x7fff                	// #32767
  466ccc:	mov	x6, x8
  466cd0:	cmp	x4, x5
  466cd4:	ubfx	x11, x0, #0, #48
  466cd8:	ubfx	x7, x0, #48, #15
  466cdc:	lsr	x1, x0, #63
  466ce0:	mov	x3, x9
  466ce4:	b.eq	466d1c <_obstack_memory_used@@Base+0x1590c>  // b.none
  466ce8:	cmp	x7, x5
  466cec:	b.eq	466d2c <_obstack_memory_used@@Base+0x1591c>  // b.none
  466cf0:	cbnz	x4, 466d58 <_obstack_memory_used@@Base+0x15948>
  466cf4:	orr	x6, x10, x8
  466cf8:	cmp	x6, #0x0
  466cfc:	cset	w0, eq  // eq = none
  466d00:	cbnz	x7, 466d44 <_obstack_memory_used@@Base+0x15934>
  466d04:	orr	x3, x11, x9
  466d08:	cbnz	x3, 466d44 <_obstack_memory_used@@Base+0x15934>
  466d0c:	mov	w0, #0x0                   	// #0
  466d10:	cbnz	x6, 466d6c <_obstack_memory_used@@Base+0x1595c>
  466d14:	ldp	x29, x30, [sp], #48
  466d18:	ret
  466d1c:	orr	x0, x10, x8
  466d20:	cbnz	x0, 466d80 <_obstack_memory_used@@Base+0x15970>
  466d24:	cmp	x7, x4
  466d28:	b.ne	466d58 <_obstack_memory_used@@Base+0x15948>  // b.any
  466d2c:	orr	x3, x11, x3
  466d30:	cbnz	x3, 466d80 <_obstack_memory_used@@Base+0x15970>
  466d34:	cbnz	x4, 466d64 <_obstack_memory_used@@Base+0x15954>
  466d38:	orr	x6, x10, x6
  466d3c:	cmp	x6, #0x0
  466d40:	cset	w0, eq  // eq = none
  466d44:	cbz	w0, 466d64 <_obstack_memory_used@@Base+0x15954>
  466d48:	cmp	x1, #0x0
  466d4c:	csinv	w0, w0, wzr, ne  // ne = any
  466d50:	ldp	x29, x30, [sp], #48
  466d54:	ret
  466d58:	cbnz	x7, 466d64 <_obstack_memory_used@@Base+0x15954>
  466d5c:	orr	x3, x11, x3
  466d60:	cbz	x3, 466d6c <_obstack_memory_used@@Base+0x1595c>
  466d64:	cmp	x2, x1
  466d68:	b.eq	466d94 <_obstack_memory_used@@Base+0x15984>  // b.none
  466d6c:	cmp	x2, #0x0
  466d70:	mov	w0, #0xffffffff            	// #-1
  466d74:	cneg	w0, w0, eq  // eq = none
  466d78:	ldp	x29, x30, [sp], #48
  466d7c:	ret
  466d80:	mov	w0, #0x1                   	// #1
  466d84:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  466d88:	mov	w0, #0x2                   	// #2
  466d8c:	ldp	x29, x30, [sp], #48
  466d90:	ret
  466d94:	cmp	x4, x7
  466d98:	b.gt	466d6c <_obstack_memory_used@@Base+0x1595c>
  466d9c:	b.lt	466dd0 <_obstack_memory_used@@Base+0x159c0>  // b.tstop
  466da0:	cmp	x10, x11
  466da4:	b.hi	466d6c <_obstack_memory_used@@Base+0x1595c>  // b.pmore
  466da8:	cset	w0, eq  // eq = none
  466dac:	cmp	w0, #0x0
  466db0:	ccmp	x8, x9, #0x0, ne  // ne = any
  466db4:	b.hi	466d6c <_obstack_memory_used@@Base+0x1595c>  // b.pmore
  466db8:	cmp	x10, x11
  466dbc:	b.cc	466dd0 <_obstack_memory_used@@Base+0x159c0>  // b.lo, b.ul, b.last
  466dc0:	cmp	w0, #0x0
  466dc4:	mov	w0, #0x0                   	// #0
  466dc8:	ccmp	x8, x9, #0x2, ne  // ne = any
  466dcc:	b.cs	466d14 <_obstack_memory_used@@Base+0x15904>  // b.hs, b.nlast
  466dd0:	cmp	x2, #0x0
  466dd4:	mov	w0, #0x1                   	// #1
  466dd8:	cneg	w0, w0, eq  // eq = none
  466ddc:	b	466d14 <_obstack_memory_used@@Base+0x15904>
  466de0:	stp	x29, x30, [sp, #-80]!
  466de4:	mov	x29, sp
  466de8:	str	q0, [sp, #48]
  466dec:	str	q1, [sp, #64]
  466df0:	ldp	x1, x0, [sp, #48]
  466df4:	ldp	x3, x2, [sp, #64]
  466df8:	mrs	x12, fpcr
  466dfc:	lsr	x4, x0, #63
  466e00:	ubfx	x8, x0, #0, #48
  466e04:	and	w16, w4, #0xff
  466e08:	mov	x14, x4
  466e0c:	ubfx	x10, x0, #48, #15
  466e10:	cbz	w10, 467194 <_obstack_memory_used@@Base+0x15d84>
  466e14:	mov	w4, #0x7fff                	// #32767
  466e18:	cmp	w10, w4
  466e1c:	b.eq	4671d4 <_obstack_memory_used@@Base+0x15dc4>  // b.none
  466e20:	and	x10, x10, #0xffff
  466e24:	extr	x4, x8, x1, #61
  466e28:	mov	x5, #0xffffffffffffc001    	// #-16383
  466e2c:	orr	x8, x4, #0x8000000000000
  466e30:	add	x10, x10, x5
  466e34:	lsl	x7, x1, #3
  466e38:	mov	x11, #0x2                   	// #2
  466e3c:	mov	x9, #0x1                   	// #1
  466e40:	mov	x6, #0x3                   	// #3
  466e44:	mov	x1, #0x0                   	// #0
  466e48:	mov	x17, #0x0                   	// #0
  466e4c:	mov	w0, #0x0                   	// #0
  466e50:	lsr	x5, x2, #63
  466e54:	ubfx	x4, x2, #0, #48
  466e58:	and	w15, w5, #0xff
  466e5c:	mov	x13, x5
  466e60:	ubfx	x5, x2, #48, #15
  466e64:	cbz	w5, 467218 <_obstack_memory_used@@Base+0x15e08>
  466e68:	mov	w9, #0x7fff                	// #32767
  466e6c:	cmp	w5, w9
  466e70:	b.eq	466f00 <_obstack_memory_used@@Base+0x15af0>  // b.none
  466e74:	and	x5, x5, #0xffff
  466e78:	extr	x2, x4, x3, #61
  466e7c:	mov	x4, #0xffffffffffffc001    	// #-16383
  466e80:	add	x5, x5, x4
  466e84:	add	x10, x10, x5
  466e88:	orr	x4, x2, #0x8000000000000
  466e8c:	lsl	x5, x3, #3
  466e90:	mov	x6, #0x0                   	// #0
  466e94:	eor	w3, w16, w15
  466e98:	cmp	x1, #0xa
  466e9c:	and	w11, w3, #0xff
  466ea0:	and	x9, x3, #0xff
  466ea4:	add	x18, x10, #0x1
  466ea8:	b.gt	467180 <_obstack_memory_used@@Base+0x15d70>
  466eac:	cmp	x1, #0x2
  466eb0:	b.gt	466f40 <_obstack_memory_used@@Base+0x15b30>
  466eb4:	sub	x1, x1, #0x1
  466eb8:	cmp	x1, #0x1
  466ebc:	b.hi	466fa0 <_obstack_memory_used@@Base+0x15b90>  // b.pmore
  466ec0:	cmp	x6, #0x2
  466ec4:	b.eq	46725c <_obstack_memory_used@@Base+0x15e4c>  // b.none
  466ec8:	cmp	x6, #0x1
  466ecc:	b.ne	467100 <_obstack_memory_used@@Base+0x15cf0>  // b.any
  466ed0:	mov	w1, #0x0                   	// #0
  466ed4:	mov	x4, #0x0                   	// #0
  466ed8:	mov	x7, #0x0                   	// #0
  466edc:	mov	x3, #0x0                   	// #0
  466ee0:	orr	w1, w1, w11, lsl #15
  466ee4:	bfxil	x3, x4, #0, #48
  466ee8:	fmov	d0, x7
  466eec:	bfi	x3, x1, #48, #16
  466ef0:	fmov	v0.d[1], x3
  466ef4:	cbnz	w0, 467408 <_obstack_memory_used@@Base+0x15ff8>
  466ef8:	ldp	x29, x30, [sp], #80
  466efc:	ret
  466f00:	mov	x2, #0x7fff                	// #32767
  466f04:	orr	x5, x4, x3
  466f08:	add	x2, x10, x2
  466f0c:	cbz	x5, 46726c <_obstack_memory_used@@Base+0x15e5c>
  466f10:	ands	x1, x4, #0x800000000000
  466f14:	eor	w9, w16, w15
  466f18:	csinc	w0, w0, wzr, ne  // ne = any
  466f1c:	and	w11, w9, #0xff
  466f20:	add	x18, x10, #0x8, lsl #12
  466f24:	cmp	x6, #0xa
  466f28:	and	x9, x9, #0xff
  466f2c:	b.gt	467364 <_obstack_memory_used@@Base+0x15f54>
  466f30:	mov	x10, x2
  466f34:	mov	x5, x3
  466f38:	mov	x1, x6
  466f3c:	mov	x6, #0x3                   	// #3
  466f40:	mov	x2, #0x1                   	// #1
  466f44:	mov	x3, #0x530                 	// #1328
  466f48:	lsl	x1, x2, x1
  466f4c:	tst	x1, x3
  466f50:	b.ne	467174 <_obstack_memory_used@@Base+0x15d64>  // b.any
  466f54:	mov	x3, #0x240                 	// #576
  466f58:	tst	x1, x3
  466f5c:	b.ne	46715c <_obstack_memory_used@@Base+0x15d4c>  // b.any
  466f60:	mov	x2, #0x88                  	// #136
  466f64:	tst	x1, x2
  466f68:	b.eq	466fa0 <_obstack_memory_used@@Base+0x15b90>  // b.none
  466f6c:	mov	x8, x4
  466f70:	mov	x7, x5
  466f74:	mov	x17, x6
  466f78:	cmp	x17, #0x2
  466f7c:	b.eq	4675b4 <_obstack_memory_used@@Base+0x161a4>  // b.none
  466f80:	mov	x6, x17
  466f84:	mov	w11, w15
  466f88:	cmp	x17, #0x3
  466f8c:	mov	x4, x8
  466f90:	mov	x5, x7
  466f94:	mov	x9, x13
  466f98:	b.ne	466ec8 <_obstack_memory_used@@Base+0x15ab8>  // b.any
  466f9c:	b	4673ac <_obstack_memory_used@@Base+0x15f9c>
  466fa0:	lsr	x13, x7, #32
  466fa4:	and	x6, x5, #0xffffffff
  466fa8:	and	x17, x4, #0xffffffff
  466fac:	and	x7, x7, #0xffffffff
  466fb0:	stp	x21, x22, [sp, #32]
  466fb4:	lsr	x22, x5, #32
  466fb8:	lsr	x2, x4, #32
  466fbc:	stp	x19, x20, [sp, #16]
  466fc0:	mul	x19, x13, x6
  466fc4:	lsr	x4, x8, #32
  466fc8:	mul	x1, x13, x17
  466fcc:	and	x3, x8, #0xffffffff
  466fd0:	madd	x5, x22, x7, x19
  466fd4:	mov	x14, #0x100000000           	// #4294967296
  466fd8:	mul	x15, x6, x7
  466fdc:	mul	x16, x7, x17
  466fe0:	madd	x7, x2, x7, x1
  466fe4:	and	x30, x15, #0xffffffff
  466fe8:	mul	x21, x4, x6
  466fec:	add	x15, x5, x15, lsr #32
  466ff0:	mul	x20, x4, x17
  466ff4:	cmp	x19, x15
  466ff8:	mul	x5, x13, x22
  466ffc:	add	x30, x30, x15, lsl #32
  467000:	mul	x19, x13, x2
  467004:	add	x13, x7, x16, lsr #32
  467008:	mul	x6, x6, x3
  46700c:	add	x8, x5, x14
  467010:	mul	x17, x3, x17
  467014:	csel	x5, x8, x5, hi  // hi = pmore
  467018:	madd	x7, x22, x3, x21
  46701c:	cmp	x1, x13
  467020:	madd	x3, x2, x3, x20
  467024:	and	x16, x16, #0xffffffff
  467028:	mul	x8, x22, x4
  46702c:	add	x16, x16, x13, lsl #32
  467030:	add	x7, x7, x6, lsr #32
  467034:	mul	x2, x2, x4
  467038:	add	x3, x3, x17, lsr #32
  46703c:	add	x4, x19, x14
  467040:	csel	x19, x4, x19, hi  // hi = pmore
  467044:	and	x1, x17, #0xffffffff
  467048:	cmp	x21, x7
  46704c:	add	x4, x8, x14
  467050:	csel	x8, x4, x8, hi  // hi = pmore
  467054:	add	x1, x1, x3, lsl #32
  467058:	cmp	x20, x3
  46705c:	add	x15, x16, x15, lsr #32
  467060:	add	x13, x19, x13, lsr #32
  467064:	add	x14, x2, x14
  467068:	add	x15, x5, x15
  46706c:	csel	x2, x14, x2, hi  // hi = pmore
  467070:	adds	x1, x1, x13
  467074:	and	x6, x6, #0xffffffff
  467078:	cset	x5, cs  // cs = hs, nlast
  46707c:	cmp	x15, x16
  467080:	cset	x4, cc  // cc = lo, ul, last
  467084:	add	x6, x6, x7, lsl #32
  467088:	adds	x1, x1, x4
  46708c:	lsr	x3, x3, #32
  467090:	cset	x4, cs  // cs = hs, nlast
  467094:	cmp	x5, #0x0
  467098:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  46709c:	add	x7, x8, x7, lsr #32
  4670a0:	cinc	x3, x3, ne  // ne = any
  4670a4:	adds	x5, x15, x6
  4670a8:	cset	x4, cs  // cs = hs, nlast
  4670ac:	adds	x1, x1, x7
  4670b0:	cset	x6, cs  // cs = hs, nlast
  4670b4:	adds	x1, x1, x4
  4670b8:	cset	x4, cs  // cs = hs, nlast
  4670bc:	cmp	x6, #0x0
  4670c0:	ccmp	x4, #0x0, #0x0, eq  // eq = none
  4670c4:	orr	x30, x30, x5, lsl #13
  4670c8:	cinc	x2, x2, ne  // ne = any
  4670cc:	cmp	x30, #0x0
  4670d0:	add	x2, x2, x3
  4670d4:	cset	x3, ne  // ne = any
  4670d8:	orr	x5, x3, x5, lsr #51
  4670dc:	orr	x5, x5, x1, lsl #13
  4670e0:	extr	x4, x2, x1, #51
  4670e4:	tbz	x2, #39, 467490 <_obstack_memory_used@@Base+0x16080>
  4670e8:	ldp	x19, x20, [sp, #16]
  4670ec:	and	x1, x5, #0x1
  4670f0:	ldp	x21, x22, [sp, #32]
  4670f4:	orr	x5, x1, x5, lsr #1
  4670f8:	orr	x5, x5, x4, lsl #63
  4670fc:	lsr	x4, x4, #1
  467100:	mov	x1, #0x3fff                	// #16383
  467104:	add	x2, x18, x1
  467108:	cmp	x2, #0x0
  46710c:	b.le	4672e0 <_obstack_memory_used@@Base+0x15ed0>
  467110:	tst	x5, #0x7
  467114:	b.eq	467134 <_obstack_memory_used@@Base+0x15d24>  // b.none
  467118:	and	x1, x12, #0xc00000
  46711c:	orr	w0, w0, #0x10
  467120:	cmp	x1, #0x400, lsl #12
  467124:	b.eq	467568 <_obstack_memory_used@@Base+0x16158>  // b.none
  467128:	cmp	x1, #0x800, lsl #12
  46712c:	b.eq	4674f8 <_obstack_memory_used@@Base+0x160e8>  // b.none
  467130:	cbz	x1, 467524 <_obstack_memory_used@@Base+0x16114>
  467134:	tbz	x4, #52, 467140 <_obstack_memory_used@@Base+0x15d30>
  467138:	and	x4, x4, #0xffefffffffffffff
  46713c:	add	x2, x18, #0x4, lsl #12
  467140:	mov	x1, #0x7ffe                	// #32766
  467144:	cmp	x2, x1
  467148:	b.gt	467464 <_obstack_memory_used@@Base+0x16054>
  46714c:	and	w1, w2, #0x7fff
  467150:	extr	x7, x4, x5, #3
  467154:	ubfx	x4, x4, #3, #48
  467158:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  46715c:	mov	w0, w2
  467160:	mov	w11, #0x0                   	// #0
  467164:	mov	x4, #0xffffffffffff        	// #281474976710655
  467168:	mov	x7, #0xffffffffffffffff    	// #-1
  46716c:	mov	w1, #0x7fff                	// #32767
  467170:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  467174:	mov	w15, w11
  467178:	mov	x13, x9
  46717c:	b	466f78 <_obstack_memory_used@@Base+0x15b68>
  467180:	cmp	x1, #0xb
  467184:	b.eq	466f6c <_obstack_memory_used@@Base+0x15b5c>  // b.none
  467188:	mov	w15, w16
  46718c:	mov	x13, x14
  467190:	b	466f78 <_obstack_memory_used@@Base+0x15b68>
  467194:	orr	x7, x8, x1
  467198:	cbz	x7, 4672bc <_obstack_memory_used@@Base+0x15eac>
  46719c:	cbz	x8, 46741c <_obstack_memory_used@@Base+0x1600c>
  4671a0:	clz	x0, x8
  4671a4:	sub	x4, x0, #0xf
  4671a8:	add	w7, w4, #0x3
  4671ac:	mov	w5, #0x3d                  	// #61
  4671b0:	sub	w5, w5, w4
  4671b4:	lsl	x4, x8, x7
  4671b8:	lsr	x5, x1, x5
  4671bc:	orr	x8, x5, x4
  4671c0:	lsl	x7, x1, x7
  4671c4:	mov	x10, #0xffffffffffffc011    	// #-16367
  4671c8:	mov	x11, #0x2                   	// #2
  4671cc:	sub	x10, x10, x0
  4671d0:	b	466e3c <_obstack_memory_used@@Base+0x15a2c>
  4671d4:	orr	x7, x8, x1
  4671d8:	cbnz	x7, 467290 <_obstack_memory_used@@Base+0x15e80>
  4671dc:	lsr	x5, x2, #63
  4671e0:	ubfx	x4, x2, #0, #48
  4671e4:	and	w15, w5, #0xff
  4671e8:	mov	x13, x5
  4671ec:	mov	x8, #0x0                   	// #0
  4671f0:	ubfx	x5, x2, #48, #15
  4671f4:	mov	x11, #0xa                   	// #10
  4671f8:	mov	x9, #0x9                   	// #9
  4671fc:	mov	x6, #0xb                   	// #11
  467200:	mov	x1, #0x8                   	// #8
  467204:	mov	x10, #0x7fff                	// #32767
  467208:	mov	x17, #0x2                   	// #2
  46720c:	mov	w0, #0x0                   	// #0
  467210:	cbnz	w5, 466e68 <_obstack_memory_used@@Base+0x15a58>
  467214:	nop
  467218:	orr	x5, x4, x3
  46721c:	cbz	x5, 467280 <_obstack_memory_used@@Base+0x15e70>
  467220:	cbz	x4, 467440 <_obstack_memory_used@@Base+0x16030>
  467224:	clz	x6, x4
  467228:	sub	x2, x6, #0xf
  46722c:	add	w5, w2, #0x3
  467230:	mov	w9, #0x3d                  	// #61
  467234:	sub	w9, w9, w2
  467238:	lsl	x2, x4, x5
  46723c:	lsr	x9, x3, x9
  467240:	orr	x4, x9, x2
  467244:	lsl	x5, x3, x5
  467248:	sub	x10, x10, x6
  46724c:	mov	x3, #0xffffffffffffc011    	// #-16367
  467250:	mov	x6, #0x0                   	// #0
  467254:	add	x10, x10, x3
  467258:	b	466e94 <_obstack_memory_used@@Base+0x15a84>
  46725c:	mov	w1, #0x7fff                	// #32767
  467260:	mov	x4, #0x0                   	// #0
  467264:	mov	x7, #0x0                   	// #0
  467268:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  46726c:	mov	x1, x11
  467270:	mov	x10, x2
  467274:	mov	x4, #0x0                   	// #0
  467278:	mov	x6, #0x2                   	// #2
  46727c:	b	466e94 <_obstack_memory_used@@Base+0x15a84>
  467280:	mov	x1, x9
  467284:	mov	x4, #0x0                   	// #0
  467288:	mov	x6, #0x1                   	// #1
  46728c:	b	466e94 <_obstack_memory_used@@Base+0x15a84>
  467290:	lsr	x0, x8, #47
  467294:	mov	x7, x1
  467298:	eor	x0, x0, #0x1
  46729c:	mov	x11, #0xe                   	// #14
  4672a0:	and	w0, w0, #0x1
  4672a4:	mov	x9, #0xd                   	// #13
  4672a8:	mov	x6, #0xf                   	// #15
  4672ac:	mov	x1, #0xc                   	// #12
  4672b0:	mov	x10, #0x7fff                	// #32767
  4672b4:	mov	x17, #0x3                   	// #3
  4672b8:	b	466e50 <_obstack_memory_used@@Base+0x15a40>
  4672bc:	mov	x8, #0x0                   	// #0
  4672c0:	mov	x11, #0x6                   	// #6
  4672c4:	mov	x9, #0x5                   	// #5
  4672c8:	mov	x6, #0x7                   	// #7
  4672cc:	mov	x1, #0x4                   	// #4
  4672d0:	mov	x10, #0x0                   	// #0
  4672d4:	mov	x17, #0x1                   	// #1
  4672d8:	mov	w0, #0x0                   	// #0
  4672dc:	b	466e50 <_obstack_memory_used@@Base+0x15a40>
  4672e0:	mov	x1, #0x1                   	// #1
  4672e4:	sub	x2, x1, x2
  4672e8:	cmp	x2, #0x74
  4672ec:	b.gt	4673c0 <_obstack_memory_used@@Base+0x15fb0>
  4672f0:	cmp	x2, #0x3f
  4672f4:	b.le	4674a0 <_obstack_memory_used@@Base+0x16090>
  4672f8:	mov	w1, #0x80                  	// #128
  4672fc:	sub	w1, w1, w2
  467300:	cmp	x2, #0x40
  467304:	sub	w2, w2, #0x40
  467308:	lsl	x1, x4, x1
  46730c:	orr	x1, x5, x1
  467310:	csel	x5, x1, x5, ne  // ne = any
  467314:	lsr	x2, x4, x2
  467318:	cmp	x5, #0x0
  46731c:	cset	x7, ne  // ne = any
  467320:	orr	x7, x7, x2
  467324:	ands	x4, x7, #0x7
  467328:	b.eq	4674d4 <_obstack_memory_used@@Base+0x160c4>  // b.none
  46732c:	mov	x4, #0x0                   	// #0
  467330:	and	x12, x12, #0xc00000
  467334:	orr	w0, w0, #0x10
  467338:	cmp	x12, #0x400, lsl #12
  46733c:	b.eq	4675a0 <_obstack_memory_used@@Base+0x16190>  // b.none
  467340:	cmp	x12, #0x800, lsl #12
  467344:	b.eq	46758c <_obstack_memory_used@@Base+0x1617c>  // b.none
  467348:	cbz	x12, 46753c <_obstack_memory_used@@Base+0x1612c>
  46734c:	tbnz	x4, #51, 467554 <_obstack_memory_used@@Base+0x16144>
  467350:	orr	w0, w0, #0x8
  467354:	extr	x7, x4, x7, #3
  467358:	mov	w1, #0x0                   	// #0
  46735c:	ubfx	x4, x4, #3, #48
  467360:	b	4673f0 <_obstack_memory_used@@Base+0x15fe0>
  467364:	cmp	x6, #0xf
  467368:	b.ne	46739c <_obstack_memory_used@@Base+0x15f8c>  // b.any
  46736c:	tbz	x8, #47, 467388 <_obstack_memory_used@@Base+0x15f78>
  467370:	cbnz	x1, 467388 <_obstack_memory_used@@Base+0x15f78>
  467374:	orr	x4, x4, #0x800000000000
  467378:	mov	w11, w15
  46737c:	mov	x7, x3
  467380:	mov	w1, #0x7fff                	// #32767
  467384:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  467388:	orr	x4, x8, #0x800000000000
  46738c:	mov	w11, w16
  467390:	and	x4, x4, #0xffffffffffff
  467394:	mov	w1, #0x7fff                	// #32767
  467398:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  46739c:	cmp	x6, #0xb
  4673a0:	b.ne	467188 <_obstack_memory_used@@Base+0x15d78>  // b.any
  4673a4:	mov	w11, w15
  4673a8:	mov	x5, x3
  4673ac:	orr	x4, x4, #0x800000000000
  4673b0:	mov	x7, x5
  4673b4:	and	x4, x4, #0xffffffffffff
  4673b8:	mov	w1, #0x7fff                	// #32767
  4673bc:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  4673c0:	orr	x7, x5, x4
  4673c4:	cbz	x7, 4673e4 <_obstack_memory_used@@Base+0x15fd4>
  4673c8:	and	x12, x12, #0xc00000
  4673cc:	orr	w0, w0, #0x10
  4673d0:	cmp	x12, #0x400, lsl #12
  4673d4:	sub	x7, x1, x9
  4673d8:	b.eq	4673e4 <_obstack_memory_used@@Base+0x15fd4>  // b.none
  4673dc:	cmp	x12, #0x800, lsl #12
  4673e0:	csel	x7, x9, xzr, eq  // eq = none
  4673e4:	orr	w0, w0, #0x8
  4673e8:	mov	w1, #0x0                   	// #0
  4673ec:	mov	x4, #0x0                   	// #0
  4673f0:	mov	x3, #0x0                   	// #0
  4673f4:	fmov	d0, x7
  4673f8:	bfxil	x3, x4, #0, #48
  4673fc:	bfi	x3, x1, #48, #15
  467400:	bfi	x3, x11, #63, #1
  467404:	fmov	v0.d[1], x3
  467408:	str	q0, [sp, #48]
  46740c:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  467410:	ldr	q0, [sp, #48]
  467414:	ldp	x29, x30, [sp], #80
  467418:	ret
  46741c:	clz	x10, x1
  467420:	add	x4, x10, #0x31
  467424:	add	x0, x10, #0x40
  467428:	cmp	x4, #0x3c
  46742c:	b.le	4671a8 <_obstack_memory_used@@Base+0x15d98>
  467430:	sub	w4, w4, #0x3d
  467434:	mov	x7, #0x0                   	// #0
  467438:	lsl	x8, x1, x4
  46743c:	b	4671c4 <_obstack_memory_used@@Base+0x15db4>
  467440:	clz	x6, x3
  467444:	add	x2, x6, #0x31
  467448:	add	x6, x6, #0x40
  46744c:	cmp	x2, #0x3c
  467450:	b.le	46722c <_obstack_memory_used@@Base+0x15e1c>
  467454:	sub	w2, w2, #0x3d
  467458:	mov	x5, #0x0                   	// #0
  46745c:	lsl	x4, x3, x2
  467460:	b	467248 <_obstack_memory_used@@Base+0x15e38>
  467464:	and	x7, x12, #0xc00000
  467468:	cmp	x7, #0x400, lsl #12
  46746c:	b.eq	467570 <_obstack_memory_used@@Base+0x16160>  // b.none
  467470:	cmp	x7, #0x800, lsl #12
  467474:	b.eq	467508 <_obstack_memory_used@@Base+0x160f8>  // b.none
  467478:	cbz	x7, 4674ec <_obstack_memory_used@@Base+0x160dc>
  46747c:	mov	x4, #0xffffffffffff        	// #281474976710655
  467480:	mov	x7, #0xffffffffffffffff    	// #-1
  467484:	mov	w2, #0x14                  	// #20
  467488:	orr	w0, w0, w2
  46748c:	b	4673f0 <_obstack_memory_used@@Base+0x15fe0>
  467490:	mov	x18, x10
  467494:	ldp	x19, x20, [sp, #16]
  467498:	ldp	x21, x22, [sp, #32]
  46749c:	b	467100 <_obstack_memory_used@@Base+0x15cf0>
  4674a0:	mov	w1, #0x40                  	// #64
  4674a4:	sub	w1, w1, w2
  4674a8:	lsr	x3, x5, x2
  4674ac:	lsl	x5, x5, x1
  4674b0:	cmp	x5, #0x0
  4674b4:	lsl	x7, x4, x1
  4674b8:	cset	x1, ne  // ne = any
  4674bc:	orr	x7, x7, x3
  4674c0:	lsr	x4, x4, x2
  4674c4:	orr	x7, x7, x1
  4674c8:	tst	x7, #0x7
  4674cc:	b.ne	467330 <_obstack_memory_used@@Base+0x15f20>  // b.any
  4674d0:	tbnz	x4, #51, 4675ac <_obstack_memory_used@@Base+0x1619c>
  4674d4:	mov	w1, #0x0                   	// #0
  4674d8:	extr	x7, x4, x7, #3
  4674dc:	ubfx	x4, x4, #3, #48
  4674e0:	tbz	w12, #11, 466edc <_obstack_memory_used@@Base+0x15acc>
  4674e4:	orr	w0, w0, #0x8
  4674e8:	b	4673f0 <_obstack_memory_used@@Base+0x15fe0>
  4674ec:	mov	w1, #0x7fff                	// #32767
  4674f0:	mov	x4, #0x0                   	// #0
  4674f4:	b	467484 <_obstack_memory_used@@Base+0x16074>
  4674f8:	cbz	x9, 467134 <_obstack_memory_used@@Base+0x15d24>
  4674fc:	adds	x5, x5, #0x8
  467500:	cinc	x4, x4, cs  // cs = hs, nlast
  467504:	b	467134 <_obstack_memory_used@@Base+0x15d24>
  467508:	cmp	x9, #0x0
  46750c:	mov	w2, #0x7fff                	// #32767
  467510:	mov	x4, #0xffffffffffff        	// #281474976710655
  467514:	csel	w1, w1, w2, eq  // eq = none
  467518:	csel	x4, x4, xzr, eq  // eq = none
  46751c:	csetm	x7, eq  // eq = none
  467520:	b	467484 <_obstack_memory_used@@Base+0x16074>
  467524:	and	x1, x5, #0xf
  467528:	cmp	x1, #0x4
  46752c:	b.eq	467134 <_obstack_memory_used@@Base+0x15d24>  // b.none
  467530:	adds	x5, x5, #0x4
  467534:	cinc	x4, x4, cs  // cs = hs, nlast
  467538:	b	467134 <_obstack_memory_used@@Base+0x15d24>
  46753c:	and	x1, x7, #0xf
  467540:	cmp	x1, #0x4
  467544:	b.eq	467550 <_obstack_memory_used@@Base+0x16140>  // b.none
  467548:	adds	x7, x7, #0x4
  46754c:	cinc	x4, x4, cs  // cs = hs, nlast
  467550:	tbz	x4, #51, 467350 <_obstack_memory_used@@Base+0x15f40>
  467554:	orr	w0, w0, #0x8
  467558:	mov	w1, #0x1                   	// #1
  46755c:	mov	x4, #0x0                   	// #0
  467560:	mov	x7, #0x0                   	// #0
  467564:	b	4673f0 <_obstack_memory_used@@Base+0x15fe0>
  467568:	cbnz	x9, 467134 <_obstack_memory_used@@Base+0x15d24>
  46756c:	b	4674fc <_obstack_memory_used@@Base+0x160ec>
  467570:	cmp	x9, #0x0
  467574:	mov	w2, #0x7fff                	// #32767
  467578:	mov	x4, #0xffffffffffff        	// #281474976710655
  46757c:	csel	w1, w1, w2, ne  // ne = any
  467580:	csel	x4, x4, xzr, ne  // ne = any
  467584:	csetm	x7, ne  // ne = any
  467588:	b	467484 <_obstack_memory_used@@Base+0x16074>
  46758c:	cbz	x9, 467550 <_obstack_memory_used@@Base+0x16140>
  467590:	adds	x7, x7, #0x8
  467594:	cinc	x4, x4, cs  // cs = hs, nlast
  467598:	tbnz	x4, #51, 467554 <_obstack_memory_used@@Base+0x16144>
  46759c:	b	467350 <_obstack_memory_used@@Base+0x15f40>
  4675a0:	cbz	x9, 467590 <_obstack_memory_used@@Base+0x16180>
  4675a4:	tbnz	x4, #51, 467554 <_obstack_memory_used@@Base+0x16144>
  4675a8:	b	467350 <_obstack_memory_used@@Base+0x15f40>
  4675ac:	orr	w0, w0, #0x10
  4675b0:	b	467554 <_obstack_memory_used@@Base+0x16144>
  4675b4:	mov	w11, w15
  4675b8:	mov	w1, #0x7fff                	// #32767
  4675bc:	mov	x4, #0x0                   	// #0
  4675c0:	mov	x7, #0x0                   	// #0
  4675c4:	b	466edc <_obstack_memory_used@@Base+0x15acc>
  4675c8:	cbz	w0, 46760c <_obstack_memory_used@@Base+0x161fc>
  4675cc:	mov	w0, w0
  4675d0:	mov	w1, #0x403e                	// #16446
  4675d4:	clz	x3, x0
  4675d8:	mov	w2, #0x402f                	// #16431
  4675dc:	sub	w1, w1, w3
  4675e0:	mov	x3, #0x0                   	// #0
  4675e4:	sub	w2, w2, w1
  4675e8:	and	w1, w1, #0x7fff
  4675ec:	lsl	x0, x0, x2
  4675f0:	and	x0, x0, #0xffffffffffff
  4675f4:	mov	x2, #0x0                   	// #0
  4675f8:	fmov	d0, x2
  4675fc:	bfxil	x3, x0, #0, #48
  467600:	bfi	x3, x1, #48, #16
  467604:	fmov	v0.d[1], x3
  467608:	ret
  46760c:	mov	x0, #0x0                   	// #0
  467610:	mov	x3, #0x0                   	// #0
  467614:	bfxil	x3, x0, #0, #48
  467618:	mov	x2, #0x0                   	// #0
  46761c:	fmov	d0, x2
  467620:	mov	w1, #0x0                   	// #0
  467624:	bfi	x3, x1, #48, #16
  467628:	fmov	v0.d[1], x3
  46762c:	ret
  467630:	stp	x29, x30, [sp, #-48]!
  467634:	mov	x29, sp
  467638:	str	x19, [sp, #16]
  46763c:	str	q0, [sp, #32]
  467640:	ldr	x19, [sp, #32]
  467644:	ldr	x1, [sp, #40]
  467648:	mrs	x0, fpcr
  46764c:	ubfx	x3, x1, #48, #15
  467650:	mov	x2, x19
  467654:	mov	x4, #0x3ffe                	// #16382
  467658:	ubfx	x19, x1, #0, #48
  46765c:	cmp	x3, x4
  467660:	b.gt	46768c <_obstack_memory_used@@Base+0x1627c>
  467664:	cbnz	x3, 467670 <_obstack_memory_used@@Base+0x16260>
  467668:	orr	x19, x2, x19
  46766c:	cbz	x19, 46767c <_obstack_memory_used@@Base+0x1626c>
  467670:	mov	w0, #0x10                  	// #16
  467674:	mov	x19, #0x0                   	// #0
  467678:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  46767c:	mov	x0, x19
  467680:	ldr	x19, [sp, #16]
  467684:	ldp	x29, x30, [sp], #48
  467688:	ret
  46768c:	lsr	x0, x1, #63
  467690:	mov	x4, #0x403f                	// #16447
  467694:	and	w0, w0, #0xff
  467698:	and	x5, x0, #0xff
  46769c:	sub	x4, x4, x5
  4676a0:	cmp	x4, x3
  4676a4:	b.le	4676f8 <_obstack_memory_used@@Base+0x162e8>
  4676a8:	cbnz	x5, 46770c <_obstack_memory_used@@Base+0x162fc>
  4676ac:	mov	x1, x3
  4676b0:	mov	x0, #0x406f                	// #16495
  4676b4:	sub	x3, x0, x3
  4676b8:	orr	x4, x19, #0x1000000000000
  4676bc:	cmp	x3, #0x3f
  4676c0:	b.gt	46771c <_obstack_memory_used@@Base+0x1630c>
  4676c4:	mov	w3, #0xffffbfd1            	// #-16431
  4676c8:	add	w3, w1, w3
  4676cc:	sub	w1, w0, w1
  4676d0:	lsl	x0, x2, x3
  4676d4:	cmp	x0, #0x0
  4676d8:	lsr	x19, x2, x1
  4676dc:	cset	w0, ne  // ne = any
  4676e0:	lsl	x4, x4, x3
  4676e4:	orr	x19, x19, x4
  4676e8:	cbz	w0, 46767c <_obstack_memory_used@@Base+0x1626c>
  4676ec:	mov	w0, #0x10                  	// #16
  4676f0:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  4676f4:	b	46767c <_obstack_memory_used@@Base+0x1626c>
  4676f8:	eor	w19, w0, #0x1
  4676fc:	mov	w0, #0x1                   	// #1
  467700:	sbfx	x19, x19, #0, #1
  467704:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  467708:	b	46767c <_obstack_memory_used@@Base+0x1626c>
  46770c:	mov	w0, #0x1                   	// #1
  467710:	mov	x19, #0x0                   	// #0
  467714:	bl	4677f0 <_obstack_memory_used@@Base+0x163e0>
  467718:	b	46767c <_obstack_memory_used@@Base+0x1626c>
  46771c:	mov	w0, #0xffffc011            	// #-16367
  467720:	add	w5, w1, w0
  467724:	mov	w0, #0x402f                	// #16431
  467728:	cmp	x3, #0x40
  46772c:	sub	w1, w0, w1
  467730:	lsl	x0, x4, x5
  467734:	orr	x0, x2, x0
  467738:	csel	x2, x0, x2, ne  // ne = any
  46773c:	lsr	x19, x4, x1
  467740:	cmp	x2, #0x0
  467744:	cset	w0, ne  // ne = any
  467748:	b	4676e8 <_obstack_memory_used@@Base+0x162d8>
  46774c:	nop
  467750:	cbz	x0, 4677a4 <_obstack_memory_used@@Base+0x16394>
  467754:	clz	x2, x0
  467758:	mov	w1, #0x403e                	// #16446
  46775c:	sub	w1, w1, w2
  467760:	mov	x2, #0x406f                	// #16495
  467764:	and	w4, w1, #0x7fff
  467768:	sub	x3, x2, w1, sxtw
  46776c:	cmp	x3, #0x3f
  467770:	b.gt	4677c4 <_obstack_memory_used@@Base+0x163b4>
  467774:	sub	w2, w2, w1
  467778:	mov	w3, #0xffffbfd1            	// #-16431
  46777c:	add	w1, w1, w3
  467780:	mov	x3, #0x0                   	// #0
  467784:	lsr	x1, x0, x1
  467788:	and	x1, x1, #0xffffffffffff
  46778c:	lsl	x0, x0, x2
  467790:	fmov	d0, x0
  467794:	bfxil	x3, x1, #0, #48
  467798:	bfi	x3, x4, #48, #16
  46779c:	fmov	v0.d[1], x3
  4677a0:	ret
  4677a4:	mov	x1, #0x0                   	// #0
  4677a8:	mov	x3, #0x0                   	// #0
  4677ac:	bfxil	x3, x1, #0, #48
  4677b0:	fmov	d0, x0
  4677b4:	mov	w4, #0x0                   	// #0
  4677b8:	bfi	x3, x4, #48, #16
  4677bc:	fmov	v0.d[1], x3
  4677c0:	ret
  4677c4:	mov	w2, #0x402f                	// #16431
  4677c8:	sub	w1, w2, w1
  4677cc:	mov	x3, #0x0                   	// #0
  4677d0:	lsl	x1, x0, x1
  4677d4:	and	x1, x1, #0xffffffffffff
  4677d8:	mov	x0, #0x0                   	// #0
  4677dc:	fmov	d0, x0
  4677e0:	bfxil	x3, x1, #0, #48
  4677e4:	bfi	x3, x4, #48, #16
  4677e8:	fmov	v0.d[1], x3
  4677ec:	ret
  4677f0:	tbz	w0, #0, 467800 <_obstack_memory_used@@Base+0x163f0>
  4677f4:	movi	v1.2s, #0x0
  4677f8:	fdiv	s0, s1, s1
  4677fc:	mrs	x1, fpsr
  467800:	tbz	w0, #1, 467814 <_obstack_memory_used@@Base+0x16404>
  467804:	fmov	s1, #1.000000000000000000e+00
  467808:	movi	v2.2s, #0x0
  46780c:	fdiv	s0, s1, s2
  467810:	mrs	x1, fpsr
  467814:	tbz	w0, #2, 467834 <_obstack_memory_used@@Base+0x16424>
  467818:	mov	w2, #0xc5ae                	// #50606
  46781c:	mov	w1, #0x7f7fffff            	// #2139095039
  467820:	movk	w2, #0x749d, lsl #16
  467824:	fmov	s1, w1
  467828:	fmov	s2, w2
  46782c:	fadd	s0, s1, s2
  467830:	mrs	x1, fpsr
  467834:	tbz	w0, #3, 467844 <_obstack_memory_used@@Base+0x16434>
  467838:	movi	v1.2s, #0x80, lsl #16
  46783c:	fmul	s0, s1, s1
  467840:	mrs	x1, fpsr
  467844:	tbz	w0, #4, 46785c <_obstack_memory_used@@Base+0x1644c>
  467848:	mov	w0, #0x7f7fffff            	// #2139095039
  46784c:	fmov	s2, #1.000000000000000000e+00
  467850:	fmov	s1, w0
  467854:	fsub	s0, s1, s2
  467858:	mrs	x0, fpsr
  46785c:	ret
  467860:	stp	x29, x30, [sp, #-64]!
  467864:	mov	x29, sp
  467868:	stp	x19, x20, [sp, #16]
  46786c:	adrp	x20, 492000 <_obstack_memory_used@@Base+0x40bf0>
  467870:	add	x20, x20, #0xde0
  467874:	stp	x21, x22, [sp, #32]
  467878:	adrp	x21, 492000 <_obstack_memory_used@@Base+0x40bf0>
  46787c:	add	x21, x21, #0xdd8
  467880:	sub	x20, x20, x21
  467884:	mov	w22, w0
  467888:	stp	x23, x24, [sp, #48]
  46788c:	mov	x23, x1
  467890:	mov	x24, x2
  467894:	bl	403f28 <mbrtowc@plt-0x38>
  467898:	cmp	xzr, x20, asr #3
  46789c:	b.eq	4678c8 <_obstack_memory_used@@Base+0x164b8>  // b.none
  4678a0:	asr	x20, x20, #3
  4678a4:	mov	x19, #0x0                   	// #0
  4678a8:	ldr	x3, [x21, x19, lsl #3]
  4678ac:	mov	x2, x24
  4678b0:	add	x19, x19, #0x1
  4678b4:	mov	x1, x23
  4678b8:	mov	w0, w22
  4678bc:	blr	x3
  4678c0:	cmp	x20, x19
  4678c4:	b.ne	4678a8 <_obstack_memory_used@@Base+0x16498>  // b.any
  4678c8:	ldp	x19, x20, [sp, #16]
  4678cc:	ldp	x21, x22, [sp, #32]
  4678d0:	ldp	x23, x24, [sp, #48]
  4678d4:	ldp	x29, x30, [sp], #64
  4678d8:	ret
  4678dc:	nop
  4678e0:	ret

Disassembly of section .fini:

00000000004678e4 <.fini>:
  4678e4:	stp	x29, x30, [sp, #-16]!
  4678e8:	mov	x29, sp
  4678ec:	ldp	x29, x30, [sp], #16
  4678f0:	ret
