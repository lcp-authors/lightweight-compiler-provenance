
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cat.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_isprint>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	cmp	w0, #0x1f
  10:	b.le	28 <grub_isprint+0x28>
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x7e
  1c:	b.gt	28 <grub_isprint+0x28>
  20:	mov	w0, #0x1                   	// #1
  24:	b	2c <grub_isprint+0x2c>
  28:	mov	w0, #0x0                   	// #0
  2c:	add	sp, sp, #0x10
  30:	ret

0000000000000034 <grub_term_setcolorstate>:
  34:	stp	x29, x30, [sp, #-32]!
  38:	mov	x29, sp
  3c:	str	x0, [sp, #24]
  40:	str	w1, [sp, #20]
  44:	ldr	x0, [sp, #24]
  48:	ldr	x0, [x0, #88]
  4c:	cmp	x0, #0x0
  50:	b.eq	68 <grub_term_setcolorstate+0x34>  // b.none
  54:	ldr	x0, [sp, #24]
  58:	ldr	x2, [x0, #88]
  5c:	ldr	w1, [sp, #20]
  60:	ldr	x0, [sp, #24]
  64:	blr	x2
  68:	nop
  6c:	ldp	x29, x30, [sp], #32
  70:	ret

0000000000000074 <grub_setcolorstate>:
  74:	stp	x29, x30, [sp, #-48]!
  78:	mov	x29, sp
  7c:	str	w0, [sp, #28]
  80:	adrp	x0, 0 <grub_isprint>
  84:	add	x0, x0, #0x0
  88:	ldr	x0, [x0]
  8c:	ldr	x0, [x0]
  90:	str	x0, [sp, #40]
  94:	b	b0 <grub_setcolorstate+0x3c>
  98:	ldr	w1, [sp, #28]
  9c:	ldr	x0, [sp, #40]
  a0:	bl	34 <grub_term_setcolorstate>
  a4:	ldr	x0, [sp, #40]
  a8:	ldr	x0, [x0]
  ac:	str	x0, [sp, #40]
  b0:	ldr	x0, [sp, #40]
  b4:	cmp	x0, #0x0
  b8:	b.ne	98 <grub_setcolorstate+0x24>  // b.any
  bc:	nop
  c0:	nop
  c4:	ldp	x29, x30, [sp], #48
  c8:	ret
  cc:	nop
	...

00000000000000d8 <grub_utf8_process>:
  d8:	sub	sp, sp, #0x20
  dc:	strb	w0, [sp, #31]
  e0:	str	x1, [sp, #16]
  e4:	str	x2, [sp, #8]
  e8:	ldr	x0, [sp, #8]
  ec:	ldr	w0, [x0]
  f0:	cmp	w0, #0x0
  f4:	b.eq	1bc <grub_utf8_process+0xe4>  // b.none
  f8:	ldrb	w0, [sp, #31]
  fc:	and	w0, w0, #0xc0
 100:	cmp	w0, #0x80
 104:	b.eq	118 <grub_utf8_process+0x40>  // b.none
 108:	ldr	x0, [sp, #8]
 10c:	str	wzr, [x0]
 110:	mov	w0, #0x0                   	// #0
 114:	b	2a4 <grub_utf8_process+0x1cc>
 118:	ldr	x0, [sp, #16]
 11c:	ldr	w0, [x0]
 120:	lsl	w1, w0, #6
 124:	ldr	x0, [sp, #16]
 128:	str	w1, [x0]
 12c:	ldr	x0, [sp, #16]
 130:	ldr	w1, [x0]
 134:	ldrb	w0, [sp, #31]
 138:	and	w0, w0, #0x3f
 13c:	orr	w1, w1, w0
 140:	ldr	x0, [sp, #16]
 144:	str	w1, [x0]
 148:	ldr	x0, [sp, #8]
 14c:	ldr	w0, [x0]
 150:	sub	w1, w0, #0x1
 154:	ldr	x0, [sp, #8]
 158:	str	w1, [x0]
 15c:	ldr	x0, [sp, #8]
 160:	ldr	w0, [x0]
 164:	cmp	w0, #0x1
 168:	b.ne	17c <grub_utf8_process+0xa4>  // b.any
 16c:	ldr	x0, [sp, #16]
 170:	ldr	w0, [x0]
 174:	cmp	w0, #0x1f
 178:	b.ls	19c <grub_utf8_process+0xc4>  // b.plast
 17c:	ldr	x0, [sp, #8]
 180:	ldr	w0, [x0]
 184:	cmp	w0, #0x2
 188:	b.ne	1b4 <grub_utf8_process+0xdc>  // b.any
 18c:	ldr	x0, [sp, #16]
 190:	ldr	w0, [x0]
 194:	cmp	w0, #0xf
 198:	b.hi	1b4 <grub_utf8_process+0xdc>  // b.pmore
 19c:	ldr	x0, [sp, #16]
 1a0:	str	wzr, [x0]
 1a4:	ldr	x0, [sp, #8]
 1a8:	str	wzr, [x0]
 1ac:	mov	w0, #0x0                   	// #0
 1b0:	b	2a4 <grub_utf8_process+0x1cc>
 1b4:	mov	w0, #0x1                   	// #1
 1b8:	b	2a4 <grub_utf8_process+0x1cc>
 1bc:	ldrsb	w0, [sp, #31]
 1c0:	cmp	w0, #0x0
 1c4:	b.lt	1dc <grub_utf8_process+0x104>  // b.tstop
 1c8:	ldrb	w1, [sp, #31]
 1cc:	ldr	x0, [sp, #16]
 1d0:	str	w1, [x0]
 1d4:	mov	w0, #0x1                   	// #1
 1d8:	b	2a4 <grub_utf8_process+0x1cc>
 1dc:	ldrb	w0, [sp, #31]
 1e0:	and	w0, w0, #0xe0
 1e4:	cmp	w0, #0xc0
 1e8:	b.ne	238 <grub_utf8_process+0x160>  // b.any
 1ec:	ldr	x0, [sp, #8]
 1f0:	mov	w1, #0x1                   	// #1
 1f4:	str	w1, [x0]
 1f8:	ldrb	w0, [sp, #31]
 1fc:	and	w1, w0, #0x1f
 200:	ldr	x0, [sp, #16]
 204:	str	w1, [x0]
 208:	ldr	x0, [sp, #16]
 20c:	ldr	w0, [x0]
 210:	cmp	w0, #0x1
 214:	b.hi	230 <grub_utf8_process+0x158>  // b.pmore
 218:	ldr	x0, [sp, #8]
 21c:	str	wzr, [x0]
 220:	ldr	x0, [sp, #16]
 224:	str	wzr, [x0]
 228:	mov	w0, #0x0                   	// #0
 22c:	b	2a4 <grub_utf8_process+0x1cc>
 230:	mov	w0, #0x1                   	// #1
 234:	b	2a4 <grub_utf8_process+0x1cc>
 238:	ldrb	w0, [sp, #31]
 23c:	and	w0, w0, #0xf0
 240:	cmp	w0, #0xe0
 244:	b.ne	26c <grub_utf8_process+0x194>  // b.any
 248:	ldr	x0, [sp, #8]
 24c:	mov	w1, #0x2                   	// #2
 250:	str	w1, [x0]
 254:	ldrb	w0, [sp, #31]
 258:	and	w1, w0, #0xf
 25c:	ldr	x0, [sp, #16]
 260:	str	w1, [x0]
 264:	mov	w0, #0x1                   	// #1
 268:	b	2a4 <grub_utf8_process+0x1cc>
 26c:	ldrb	w0, [sp, #31]
 270:	and	w0, w0, #0xf8
 274:	cmp	w0, #0xf0
 278:	b.ne	2a0 <grub_utf8_process+0x1c8>  // b.any
 27c:	ldr	x0, [sp, #8]
 280:	mov	w1, #0x3                   	// #3
 284:	str	w1, [x0]
 288:	ldrb	w0, [sp, #31]
 28c:	and	w1, w0, #0x7
 290:	ldr	x0, [sp, #16]
 294:	str	w1, [x0]
 298:	mov	w0, #0x1                   	// #1
 29c:	b	2a4 <grub_utf8_process+0x1cc>
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	add	sp, sp, #0x20
 2a8:	ret

00000000000002ac <grub_cmd_cat>:
 2ac:	sub	sp, sp, #0x270
 2b0:	stp	x29, x30, [sp]
 2b4:	mov	x29, sp
 2b8:	str	x0, [sp, #40]
 2bc:	str	w1, [sp, #36]
 2c0:	str	x2, [sp, #24]
 2c4:	ldr	x0, [sp, #40]
 2c8:	ldr	x0, [x0, #8]
 2cc:	str	x0, [sp, #592]
 2d0:	str	wzr, [sp, #620]
 2d4:	str	wzr, [sp, #616]
 2d8:	str	wzr, [sp, #60]
 2dc:	str	wzr, [sp, #56]
 2e0:	str	wzr, [sp, #612]
 2e4:	str	wzr, [sp, #608]
 2e8:	ldr	x0, [sp, #592]
 2ec:	ldr	w0, [x0]
 2f0:	cmp	w0, #0x0
 2f4:	b.eq	300 <grub_cmd_cat+0x54>  // b.none
 2f8:	mov	w0, #0x1                   	// #1
 2fc:	str	w0, [sp, #620]
 300:	ldr	w0, [sp, #36]
 304:	cmp	w0, #0x1
 308:	b.eq	324 <grub_cmd_cat+0x78>  // b.none
 30c:	adrp	x0, 0 <grub_isprint>
 310:	add	x0, x0, #0x0
 314:	ldr	x1, [x0]
 318:	mov	w0, #0x12                  	// #18
 31c:	bl	0 <grub_error>
 320:	b	700 <grub_cmd_cat+0x454>
 324:	ldr	x0, [sp, #24]
 328:	ldr	x0, [x0]
 32c:	mov	w1, #0x2b                  	// #43
 330:	bl	0 <grub_file_open>
 334:	str	x0, [sp, #584]
 338:	ldr	x0, [sp, #584]
 33c:	cmp	x0, #0x0
 340:	b.ne	610 <grub_cmd_cat+0x364>  // b.any
 344:	adrp	x0, 0 <grub_isprint>
 348:	add	x0, x0, #0x0
 34c:	ldr	x0, [x0]
 350:	ldr	w0, [x0]
 354:	b	700 <grub_cmd_cat+0x454>
 358:	str	wzr, [sp, #600]
 35c:	b	5e0 <grub_cmd_cat+0x334>
 360:	ldr	w0, [sp, #612]
 364:	add	w1, w0, #0x1
 368:	str	w1, [sp, #612]
 36c:	ldrsw	x1, [sp, #600]
 370:	add	x2, sp, #0x40
 374:	ldrb	w2, [x2, x1]
 378:	sxtw	x0, w0
 37c:	add	x1, sp, #0x30
 380:	strb	w2, [x1, x0]
 384:	ldr	w0, [sp, #608]
 388:	cmp	w0, #0x0
 38c:	b.eq	3c8 <grub_cmd_cat+0x11c>  // b.none
 390:	ldrsw	x0, [sp, #600]
 394:	add	x1, sp, #0x40
 398:	ldrb	w0, [x1, x0]
 39c:	cmp	w0, #0xa
 3a0:	b.eq	3c8 <grub_cmd_cat+0x11c>  // b.none
 3a4:	mov	w0, #0x2                   	// #2
 3a8:	bl	74 <grub_setcolorstate>
 3ac:	mov	w1, #0xd                   	// #13
 3b0:	adrp	x0, 0 <grub_isprint>
 3b4:	add	x0, x0, #0x0
 3b8:	ldr	x0, [x0]
 3bc:	bl	0 <grub_printf>
 3c0:	mov	w0, #0x0                   	// #0
 3c4:	bl	74 <grub_setcolorstate>
 3c8:	str	wzr, [sp, #608]
 3cc:	ldrsw	x0, [sp, #600]
 3d0:	add	x1, sp, #0x40
 3d4:	ldrb	w3, [x1, x0]
 3d8:	add	x1, sp, #0x38
 3dc:	add	x0, sp, #0x3c
 3e0:	mov	x2, x1
 3e4:	mov	x1, x0
 3e8:	mov	w0, w3
 3ec:	bl	d8 <grub_utf8_process>
 3f0:	cmp	w0, #0x0
 3f4:	b.ne	4d0 <grub_cmd_cat+0x224>  // b.any
 3f8:	mov	w0, #0x2                   	// #2
 3fc:	bl	74 <grub_setcolorstate>
 400:	str	wzr, [sp, #604]
 404:	b	434 <grub_cmd_cat+0x188>
 408:	ldrsw	x0, [sp, #604]
 40c:	add	x1, sp, #0x30
 410:	ldrb	w0, [x1, x0]
 414:	mov	w1, w0
 418:	adrp	x0, 0 <grub_isprint>
 41c:	add	x0, x0, #0x0
 420:	ldr	x0, [x0]
 424:	bl	0 <grub_printf>
 428:	ldr	w0, [sp, #604]
 42c:	add	w0, w0, #0x1
 430:	str	w0, [sp, #604]
 434:	ldr	w0, [sp, #612]
 438:	sub	w0, w0, #0x1
 43c:	ldr	w1, [sp, #604]
 440:	cmp	w1, w0
 444:	b.lt	408 <grub_cmd_cat+0x15c>  // b.tstop
 448:	str	wzr, [sp, #60]
 44c:	str	wzr, [sp, #56]
 450:	ldr	w0, [sp, #612]
 454:	cmp	w0, #0x1
 458:	b.eq	488 <grub_cmd_cat+0x1dc>  // b.none
 45c:	ldrsw	x0, [sp, #600]
 460:	add	x1, sp, #0x40
 464:	ldrb	w3, [x1, x0]
 468:	add	x1, sp, #0x38
 46c:	add	x0, sp, #0x3c
 470:	mov	x2, x1
 474:	mov	x1, x0
 478:	mov	w0, w3
 47c:	bl	d8 <grub_utf8_process>
 480:	cmp	w0, #0x0
 484:	b.ne	4c0 <grub_cmd_cat+0x214>  // b.any
 488:	ldrsw	x0, [sp, #600]
 48c:	add	x1, sp, #0x40
 490:	ldrb	w0, [x1, x0]
 494:	mov	w1, w0
 498:	adrp	x0, 0 <grub_isprint>
 49c:	add	x0, x0, #0x0
 4a0:	ldr	x0, [x0]
 4a4:	bl	0 <grub_printf>
 4a8:	str	wzr, [sp, #60]
 4ac:	str	wzr, [sp, #56]
 4b0:	str	wzr, [sp, #612]
 4b4:	mov	w0, #0x0                   	// #0
 4b8:	bl	74 <grub_setcolorstate>
 4bc:	b	5d4 <grub_cmd_cat+0x328>
 4c0:	mov	w0, #0x0                   	// #0
 4c4:	bl	74 <grub_setcolorstate>
 4c8:	mov	w0, #0x1                   	// #1
 4cc:	str	w0, [sp, #612]
 4d0:	ldr	w0, [sp, #56]
 4d4:	cmp	w0, #0x0
 4d8:	b.ne	5d0 <grub_cmd_cat+0x324>  // b.any
 4dc:	ldr	w0, [sp, #60]
 4e0:	cmp	w0, #0xa0
 4e4:	b.hi	508 <grub_cmd_cat+0x25c>  // b.pmore
 4e8:	ldr	w0, [sp, #60]
 4ec:	bl	0 <grub_isprint>
 4f0:	cmp	w0, #0x0
 4f4:	b.ne	508 <grub_cmd_cat+0x25c>  // b.any
 4f8:	ldr	w0, [sp, #60]
 4fc:	bl	0 <grub_isspace>
 500:	cmp	w0, #0x0
 504:	b.eq	53c <grub_cmd_cat+0x290>  // b.none
 508:	ldr	w0, [sp, #60]
 50c:	cmp	w0, #0xd
 510:	b.eq	53c <grub_cmd_cat+0x290>  // b.none
 514:	ldr	w0, [sp, #60]
 518:	mov	w1, w0
 51c:	adrp	x0, 0 <grub_isprint>
 520:	add	x0, x0, #0x0
 524:	ldr	x0, [x0]
 528:	bl	0 <grub_printf>
 52c:	str	wzr, [sp, #56]
 530:	str	wzr, [sp, #60]
 534:	str	wzr, [sp, #612]
 538:	b	5d4 <grub_cmd_cat+0x328>
 53c:	ldr	w0, [sp, #620]
 540:	cmp	w0, #0x0
 544:	b.eq	56c <grub_cmd_cat+0x2c0>  // b.none
 548:	ldr	w0, [sp, #60]
 54c:	cmp	w0, #0xd
 550:	b.ne	56c <grub_cmd_cat+0x2c0>  // b.any
 554:	mov	w0, #0x1                   	// #1
 558:	str	w0, [sp, #608]
 55c:	str	wzr, [sp, #56]
 560:	str	wzr, [sp, #60]
 564:	str	wzr, [sp, #612]
 568:	b	5d4 <grub_cmd_cat+0x328>
 56c:	mov	w0, #0x2                   	// #2
 570:	bl	74 <grub_setcolorstate>
 574:	str	wzr, [sp, #604]
 578:	b	5a8 <grub_cmd_cat+0x2fc>
 57c:	ldrsw	x0, [sp, #604]
 580:	add	x1, sp, #0x30
 584:	ldrb	w0, [x1, x0]
 588:	mov	w1, w0
 58c:	adrp	x0, 0 <grub_isprint>
 590:	add	x0, x0, #0x0
 594:	ldr	x0, [x0]
 598:	bl	0 <grub_printf>
 59c:	ldr	w0, [sp, #604]
 5a0:	add	w0, w0, #0x1
 5a4:	str	w0, [sp, #604]
 5a8:	ldr	w1, [sp, #604]
 5ac:	ldr	w0, [sp, #612]
 5b0:	cmp	w1, w0
 5b4:	b.lt	57c <grub_cmd_cat+0x2d0>  // b.tstop
 5b8:	mov	w0, #0x0                   	// #0
 5bc:	bl	74 <grub_setcolorstate>
 5c0:	str	wzr, [sp, #56]
 5c4:	str	wzr, [sp, #60]
 5c8:	str	wzr, [sp, #612]
 5cc:	b	5d4 <grub_cmd_cat+0x328>
 5d0:	nop
 5d4:	ldr	w0, [sp, #600]
 5d8:	add	w0, w0, #0x1
 5dc:	str	w0, [sp, #600]
 5e0:	ldrsw	x0, [sp, #600]
 5e4:	ldr	x1, [sp, #576]
 5e8:	cmp	x1, x0
 5ec:	b.gt	360 <grub_cmd_cat+0xb4>
 5f0:	bl	0 <grub_getkey_noblock>
 5f4:	str	w0, [sp, #616]
 5f8:	ldr	w0, [sp, #616]
 5fc:	cmp	w0, #0x1b
 600:	b.eq	610 <grub_cmd_cat+0x364>  // b.none
 604:	ldr	w0, [sp, #616]
 608:	cmp	w0, #0x0
 60c:	b.ne	5f0 <grub_cmd_cat+0x344>  // b.any
 610:	add	x0, sp, #0x40
 614:	mov	x2, #0x200                 	// #512
 618:	mov	x1, x0
 61c:	ldr	x0, [sp, #584]
 620:	bl	0 <grub_file_read>
 624:	str	x0, [sp, #576]
 628:	ldr	x0, [sp, #576]
 62c:	cmp	x0, #0x0
 630:	b.le	640 <grub_cmd_cat+0x394>
 634:	ldr	w0, [sp, #616]
 638:	cmp	w0, #0x1b
 63c:	b.ne	358 <grub_cmd_cat+0xac>  // b.any
 640:	ldr	w0, [sp, #608]
 644:	cmp	w0, #0x0
 648:	b.eq	670 <grub_cmd_cat+0x3c4>  // b.none
 64c:	mov	w0, #0x2                   	// #2
 650:	bl	74 <grub_setcolorstate>
 654:	mov	w1, #0xd                   	// #13
 658:	adrp	x0, 0 <grub_isprint>
 65c:	add	x0, x0, #0x0
 660:	ldr	x0, [x0]
 664:	bl	0 <grub_printf>
 668:	mov	w0, #0x0                   	// #0
 66c:	bl	74 <grub_setcolorstate>
 670:	ldr	w0, [sp, #612]
 674:	cmp	w0, #0x0
 678:	b.eq	6d0 <grub_cmd_cat+0x424>  // b.none
 67c:	mov	w0, #0x2                   	// #2
 680:	bl	74 <grub_setcolorstate>
 684:	str	wzr, [sp, #604]
 688:	b	6b8 <grub_cmd_cat+0x40c>
 68c:	ldrsw	x0, [sp, #604]
 690:	add	x1, sp, #0x30
 694:	ldrb	w0, [x1, x0]
 698:	mov	w1, w0
 69c:	adrp	x0, 0 <grub_isprint>
 6a0:	add	x0, x0, #0x0
 6a4:	ldr	x0, [x0]
 6a8:	bl	0 <grub_printf>
 6ac:	ldr	w0, [sp, #604]
 6b0:	add	w0, w0, #0x1
 6b4:	str	w0, [sp, #604]
 6b8:	ldr	w1, [sp, #604]
 6bc:	ldr	w0, [sp, #612]
 6c0:	cmp	w1, w0
 6c4:	b.lt	68c <grub_cmd_cat+0x3e0>  // b.tstop
 6c8:	mov	w0, #0x0                   	// #0
 6cc:	bl	74 <grub_setcolorstate>
 6d0:	adrp	x0, 0 <grub_isprint>
 6d4:	add	x0, x0, #0x0
 6d8:	ldr	x0, [x0]
 6dc:	ldr	x1, [x0]
 6e0:	adrp	x0, 0 <grub_isprint>
 6e4:	add	x0, x0, #0x0
 6e8:	ldr	x0, [x0]
 6ec:	blr	x1
 6f0:	bl	0 <grub_refresh>
 6f4:	ldr	x0, [sp, #584]
 6f8:	bl	0 <grub_file_close>
 6fc:	mov	w0, #0x0                   	// #0
 700:	ldp	x29, x30, [sp]
 704:	add	sp, sp, #0x270
 708:	ret
 70c:	nop
	...

0000000000000740 <grub_mod_init>:
 740:	stp	x29, x30, [sp, #-32]!
 744:	mov	x29, sp
 748:	str	x0, [sp, #24]
 74c:	adrp	x0, 0 <grub_isprint>
 750:	add	x0, x0, #0x0
 754:	ldr	x5, [x0]
 758:	adrp	x0, 0 <grub_isprint>
 75c:	add	x0, x0, #0x0
 760:	ldr	x4, [x0]
 764:	adrp	x0, 0 <grub_isprint>
 768:	add	x0, x0, #0x0
 76c:	ldr	x3, [x0]
 770:	mov	w2, #0x0                   	// #0
 774:	adrp	x0, 0 <grub_isprint>
 778:	add	x0, x0, #0x0
 77c:	ldr	x1, [x0]
 780:	adrp	x0, 0 <grub_isprint>
 784:	add	x0, x0, #0x0
 788:	ldr	x0, [x0]
 78c:	bl	0 <grub_register_extcmd>
 790:	mov	x1, x0
 794:	adrp	x0, 0 <grub_isprint>
 798:	add	x0, x0, #0x0
 79c:	ldr	x0, [x0]
 7a0:	str	x1, [x0]
 7a4:	nop
 7a8:	ldp	x29, x30, [sp], #32
 7ac:	ret
	...

00000000000007e0 <grub_mod_fini>:
 7e0:	stp	x29, x30, [sp, #-16]!
 7e4:	mov	x29, sp
 7e8:	adrp	x0, 0 <grub_isprint>
 7ec:	add	x0, x0, #0x0
 7f0:	ldr	x0, [x0]
 7f4:	ldr	x0, [x0]
 7f8:	bl	0 <grub_unregister_extcmd>
 7fc:	nop
 800:	ldp	x29, x30, [sp], #16
 804:	ret
	...
