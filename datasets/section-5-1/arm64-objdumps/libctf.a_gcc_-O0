In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf.a_gcc_-O0:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__uint64_identity>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	add	sp, sp, #0x10
      10:	ret

0000000000000014 <ctf_qsort_r>:
      14:	stp	x29, x30, [sp, #-64]!
      18:	mov	x29, sp
      1c:	str	x0, [sp, #56]
      20:	str	x1, [sp, #48]
      24:	str	x2, [sp, #40]
      28:	str	x3, [sp, #32]
      2c:	str	x4, [sp, #24]
      30:	ldr	x4, [sp, #24]
      34:	ldr	x3, [sp, #32]
      38:	ldr	x2, [sp, #40]
      3c:	ldr	x1, [sp, #48]
      40:	ldr	x0, [sp, #56]
      44:	bl	0 <qsort_r>
      48:	nop
      4c:	ldp	x29, x30, [sp], #64
      50:	ret

0000000000000054 <ctf_arc_write_fd>:
      54:	stp	x29, x30, [sp, #-192]!
      58:	mov	x29, sp
      5c:	str	x19, [sp, #16]
      60:	str	w0, [sp, #76]
      64:	str	x1, [sp, #64]
      68:	str	x2, [sp, #56]
      6c:	str	x3, [sp, #48]
      70:	str	x4, [sp, #40]
      74:	strb	wzr, [sp, #95]
      78:	str	xzr, [sp, #152]
      7c:	ldr	x1, [sp, #56]
      80:	adrp	x0, 0 <__uint64_identity>
      84:	add	x0, x0, #0x0
      88:	bl	0 <ctf_dprintf>
      8c:	ldr	x0, [sp, #56]
      90:	lsl	x0, x0, #4
      94:	add	x0, x0, #0x28
      98:	str	x0, [sp, #144]
      9c:	ldr	x1, [sp, #144]
      a0:	adrp	x0, 0 <__uint64_identity>
      a4:	add	x0, x0, #0x0
      a8:	bl	0 <ctf_dprintf>
      ac:	ldr	x0, [sp, #144]
      b0:	str	x0, [sp, #136]
      b4:	ldr	x0, [sp, #136]
      b8:	sub	x0, x0, #0x1
      bc:	mov	w2, #0x0                   	// #0
      c0:	mov	x1, x0
      c4:	ldr	w0, [sp, #76]
      c8:	bl	0 <lseek>
      cc:	cmp	x0, #0x0
      d0:	b.ge	e4 <ctf_arc_write_fd+0x90>  // b.tcont
      d4:	adrp	x0, 0 <__uint64_identity>
      d8:	add	x0, x0, #0x0
      dc:	str	x0, [sp, #96]
      e0:	b	4dc <ctf_arc_write_fd+0x488>
      e4:	add	x0, sp, #0x5f
      e8:	mov	x2, #0x1                   	// #1
      ec:	mov	x1, x0
      f0:	ldr	w0, [sp, #76]
      f4:	bl	0 <write>
      f8:	cmp	x0, #0x0
      fc:	b.ge	110 <ctf_arc_write_fd+0xbc>  // b.tcont
     100:	adrp	x0, 0 <__uint64_identity>
     104:	add	x0, x0, #0x0
     108:	str	x0, [sp, #96]
     10c:	b	4dc <ctf_arc_write_fd+0x488>
     110:	ldr	x1, [sp, #144]
     114:	ldr	w0, [sp, #76]
     118:	bl	12d8 <arc_mmap_header>
     11c:	str	x0, [sp, #128]
     120:	ldr	x0, [sp, #128]
     124:	cmp	x0, #0x0
     128:	b.ne	13c <ctf_arc_write_fd+0xe8>  // b.any
     12c:	adrp	x0, 0 <__uint64_identity>
     130:	add	x0, x0, #0x0
     134:	str	x0, [sp, #96]
     138:	b	4dc <ctf_arc_write_fd+0x488>
     13c:	mov	x0, #0x3eeb                	// #16107
     140:	movk	x0, #0xd762, lsl #16
     144:	movk	x0, #0xf2a4, lsl #32
     148:	movk	x0, #0x8b47, lsl #48
     14c:	bl	0 <__uint64_identity>
     150:	mov	x1, x0
     154:	ldr	x0, [sp, #128]
     158:	str	x1, [x0]
     15c:	ldr	x0, [sp, #56]
     160:	bl	0 <__uint64_identity>
     164:	mov	x1, x0
     168:	ldr	x0, [sp, #128]
     16c:	str	x1, [x0, #16]
     170:	ldr	x0, [sp, #136]
     174:	bl	0 <__uint64_identity>
     178:	mov	x1, x0
     17c:	ldr	x0, [sp, #128]
     180:	str	x1, [x0, #32]
     184:	ldr	x0, [sp, #56]
     188:	cmp	x0, #0x0
     18c:	b.eq	1b0 <ctf_arc_write_fd+0x15c>  // b.none
     190:	ldr	x0, [sp, #64]
     194:	ldr	x0, [x0]
     198:	bl	0 <ctf_getmodel>
     19c:	sxtw	x0, w0
     1a0:	bl	0 <__uint64_identity>
     1a4:	mov	x1, x0
     1a8:	ldr	x0, [sp, #128]
     1ac:	str	x1, [x0, #8]
     1b0:	str	xzr, [sp, #184]
     1b4:	str	xzr, [sp, #176]
     1b8:	b	1f4 <ctf_arc_write_fd+0x1a0>
     1bc:	ldr	x0, [sp, #184]
     1c0:	lsl	x0, x0, #3
     1c4:	ldr	x1, [sp, #48]
     1c8:	add	x0, x1, x0
     1cc:	ldr	x0, [x0]
     1d0:	bl	0 <strlen>
     1d4:	mov	x1, x0
     1d8:	ldr	x0, [sp, #176]
     1dc:	add	x0, x1, x0
     1e0:	add	x0, x0, #0x1
     1e4:	str	x0, [sp, #176]
     1e8:	ldr	x0, [sp, #184]
     1ec:	add	x0, x0, #0x1
     1f0:	str	x0, [sp, #184]
     1f4:	ldr	x0, [sp, #128]
     1f8:	ldr	x0, [x0, #16]
     1fc:	bl	0 <__uint64_identity>
     200:	mov	x1, x0
     204:	ldr	x0, [sp, #184]
     208:	cmp	x0, x1
     20c:	b.cc	1bc <ctf_arc_write_fd+0x168>  // b.lo, b.ul, b.last
     210:	ldr	x0, [sp, #176]
     214:	bl	0 <malloc>
     218:	str	x0, [sp, #152]
     21c:	ldr	x0, [sp, #152]
     220:	cmp	x0, #0x0
     224:	b.ne	238 <ctf_arc_write_fd+0x1e4>  // b.any
     228:	adrp	x0, 0 <__uint64_identity>
     22c:	add	x0, x0, #0x0
     230:	str	x0, [sp, #96]
     234:	b	4c4 <ctf_arc_write_fd+0x470>
     238:	str	xzr, [sp, #184]
     23c:	str	xzr, [sp, #176]
     240:	ldr	x0, [sp, #128]
     244:	add	x0, x0, #0x28
     248:	str	x0, [sp, #160]
     24c:	b	36c <ctf_arc_write_fd+0x318>
     250:	ldr	x0, [sp, #176]
     254:	ldr	x1, [sp, #152]
     258:	add	x2, x1, x0
     25c:	ldr	x0, [sp, #184]
     260:	lsl	x0, x0, #3
     264:	ldr	x1, [sp, #48]
     268:	add	x0, x1, x0
     26c:	ldr	x0, [x0]
     270:	mov	x1, x0
     274:	mov	x0, x2
     278:	bl	0 <strcpy>
     27c:	ldr	x0, [sp, #184]
     280:	lsl	x0, x0, #3
     284:	ldr	x1, [sp, #64]
     288:	add	x0, x1, x0
     28c:	ldr	x0, [x0]
     290:	ldr	x2, [sp, #40]
     294:	ldr	w1, [sp, #76]
     298:	bl	64c <arc_write_one_ctf>
     29c:	str	x0, [sp, #104]
     2a0:	ldr	x0, [sp, #104]
     2a4:	cmp	x0, #0x0
     2a8:	b.ge	2c8 <ctf_arc_write_fd+0x274>  // b.tcont
     2ac:	ldr	x0, [sp, #104]
     2b0:	cmn	x0, #0x3e7
     2b4:	b.lt	2c8 <ctf_arc_write_fd+0x274>  // b.tstop
     2b8:	adrp	x0, 0 <__uint64_identity>
     2bc:	add	x0, x0, #0x0
     2c0:	str	x0, [sp, #96]
     2c4:	b	4b4 <ctf_arc_write_fd+0x460>
     2c8:	ldr	x0, [sp, #104]
     2cc:	cmp	x0, #0x0
     2d0:	b.ge	2f8 <ctf_arc_write_fd+0x2a4>  // b.tcont
     2d4:	adrp	x0, 0 <__uint64_identity>
     2d8:	add	x0, x0, #0x0
     2dc:	str	x0, [sp, #96]
     2e0:	ldr	x0, [sp, #104]
     2e4:	neg	w19, w0
     2e8:	bl	0 <__errno_location>
     2ec:	mov	w1, w19
     2f0:	str	w1, [x0]
     2f4:	b	4b4 <ctf_arc_write_fd+0x460>
     2f8:	ldr	x0, [sp, #176]
     2fc:	bl	0 <__uint64_identity>
     300:	mov	x1, x0
     304:	ldr	x0, [sp, #160]
     308:	str	x1, [x0]
     30c:	ldr	x1, [sp, #104]
     310:	ldr	x0, [sp, #136]
     314:	sub	x0, x1, x0
     318:	bl	0 <__uint64_identity>
     31c:	mov	x1, x0
     320:	ldr	x0, [sp, #160]
     324:	str	x1, [x0, #8]
     328:	ldr	x0, [sp, #184]
     32c:	lsl	x0, x0, #3
     330:	ldr	x1, [sp, #48]
     334:	add	x0, x1, x0
     338:	ldr	x0, [x0]
     33c:	bl	0 <strlen>
     340:	mov	x1, x0
     344:	ldr	x0, [sp, #176]
     348:	add	x0, x1, x0
     34c:	add	x0, x0, #0x1
     350:	str	x0, [sp, #176]
     354:	ldr	x0, [sp, #160]
     358:	add	x0, x0, #0x10
     35c:	str	x0, [sp, #160]
     360:	ldr	x0, [sp, #184]
     364:	add	x0, x0, #0x1
     368:	str	x0, [sp, #184]
     36c:	ldr	x0, [sp, #128]
     370:	ldr	x0, [x0, #16]
     374:	bl	0 <__uint64_identity>
     378:	mov	x1, x0
     37c:	ldr	x0, [sp, #184]
     380:	cmp	x0, x1
     384:	b.cc	250 <ctf_arc_write_fd+0x1fc>  // b.lo, b.ul, b.last
     388:	ldr	x0, [sp, #128]
     38c:	add	x19, x0, #0x28
     390:	ldr	x0, [sp, #128]
     394:	ldr	x0, [x0, #16]
     398:	bl	0 <__uint64_identity>
     39c:	mov	x1, x0
     3a0:	ldr	x4, [sp, #152]
     3a4:	adrp	x0, 0 <__uint64_identity>
     3a8:	add	x3, x0, #0x0
     3ac:	mov	x2, #0x10                  	// #16
     3b0:	mov	x0, x19
     3b4:	bl	14 <ctf_qsort_r>
     3b8:	mov	w2, #0x1                   	// #1
     3bc:	mov	x1, #0x0                   	// #0
     3c0:	ldr	w0, [sp, #76]
     3c4:	bl	0 <lseek>
     3c8:	str	x0, [sp, #120]
     3cc:	ldr	x0, [sp, #120]
     3d0:	cmp	x0, #0x0
     3d4:	b.ge	3e8 <ctf_arc_write_fd+0x394>  // b.tcont
     3d8:	adrp	x0, 0 <__uint64_identity>
     3dc:	add	x0, x0, #0x0
     3e0:	str	x0, [sp, #96]
     3e4:	b	4b4 <ctf_arc_write_fd+0x460>
     3e8:	ldr	x0, [sp, #120]
     3ec:	bl	0 <__uint64_identity>
     3f0:	mov	x1, x0
     3f4:	ldr	x0, [sp, #128]
     3f8:	str	x1, [x0, #24]
     3fc:	ldr	x0, [sp, #152]
     400:	str	x0, [sp, #168]
     404:	b	45c <ctf_arc_write_fd+0x408>
     408:	ldr	x0, [sp, #176]
     40c:	mov	x2, x0
     410:	ldr	x1, [sp, #168]
     414:	ldr	w0, [sp, #76]
     418:	bl	0 <write>
     41c:	str	x0, [sp, #112]
     420:	ldr	x0, [sp, #112]
     424:	cmp	x0, #0x0
     428:	b.ge	43c <ctf_arc_write_fd+0x3e8>  // b.tcont
     42c:	adrp	x0, 0 <__uint64_identity>
     430:	add	x0, x0, #0x0
     434:	str	x0, [sp, #96]
     438:	b	4b4 <ctf_arc_write_fd+0x460>
     43c:	ldr	x1, [sp, #176]
     440:	ldr	x0, [sp, #112]
     444:	sub	x0, x1, x0
     448:	str	x0, [sp, #176]
     44c:	ldr	x0, [sp, #112]
     450:	ldr	x1, [sp, #168]
     454:	add	x0, x1, x0
     458:	str	x0, [sp, #168]
     45c:	ldr	x0, [sp, #176]
     460:	cmp	x0, #0x0
     464:	b.gt	408 <ctf_arc_write_fd+0x3b4>
     468:	ldr	x0, [sp, #152]
     46c:	bl	0 <free>
     470:	add	x0, sp, #0x60
     474:	mov	x3, x0
     478:	ldr	x2, [sp, #144]
     47c:	ldr	x1, [sp, #128]
     480:	ldr	w0, [sp, #76]
     484:	bl	1378 <arc_mmap_writeout>
     488:	cmp	w0, #0x0
     48c:	b.lt	4c0 <ctf_arc_write_fd+0x46c>  // b.tstop
     490:	add	x0, sp, #0x60
     494:	mov	x2, x0
     498:	ldr	x1, [sp, #144]
     49c:	ldr	x0, [sp, #128]
     4a0:	bl	13d8 <arc_mmap_unmap>
     4a4:	cmp	w0, #0x0
     4a8:	b.lt	4d8 <ctf_arc_write_fd+0x484>  // b.tstop
     4ac:	mov	w0, #0x0                   	// #0
     4b0:	b	520 <ctf_arc_write_fd+0x4cc>
     4b4:	ldr	x0, [sp, #152]
     4b8:	bl	0 <free>
     4bc:	b	4c4 <ctf_arc_write_fd+0x470>
     4c0:	nop
     4c4:	mov	x2, #0x0                   	// #0
     4c8:	ldr	x1, [sp, #144]
     4cc:	ldr	x0, [sp, #128]
     4d0:	bl	13d8 <arc_mmap_unmap>
     4d4:	b	4dc <ctf_arc_write_fd+0x488>
     4d8:	nop
     4dc:	ldr	x19, [sp, #96]
     4e0:	bl	0 <__errno_location>
     4e4:	ldr	w0, [x0]
     4e8:	cmp	w0, #0x3e7
     4ec:	b.gt	500 <ctf_arc_write_fd+0x4ac>
     4f0:	bl	0 <__errno_location>
     4f4:	ldr	w0, [x0]
     4f8:	bl	0 <strerror>
     4fc:	b	50c <ctf_arc_write_fd+0x4b8>
     500:	bl	0 <__errno_location>
     504:	ldr	w0, [x0]
     508:	bl	0 <ctf_errmsg>
     50c:	mov	x1, x0
     510:	mov	x0, x19
     514:	bl	0 <ctf_dprintf>
     518:	bl	0 <__errno_location>
     51c:	ldr	w0, [x0]
     520:	ldr	x19, [sp, #16]
     524:	ldp	x29, x30, [sp], #192
     528:	ret

000000000000052c <ctf_arc_write>:
     52c:	stp	x29, x30, [sp, #-80]!
     530:	mov	x29, sp
     534:	str	x0, [sp, #56]
     538:	str	x1, [sp, #48]
     53c:	str	x2, [sp, #40]
     540:	str	x3, [sp, #32]
     544:	str	x4, [sp, #24]
     548:	mov	w2, #0x1b6                 	// #438
     54c:	mov	w1, #0x242                 	// #578
     550:	movk	w1, #0x8, lsl #16
     554:	ldr	x0, [sp, #56]
     558:	bl	0 <open>
     55c:	str	w0, [sp, #72]
     560:	ldr	w0, [sp, #72]
     564:	cmp	w0, #0x0
     568:	b.ge	598 <ctf_arc_write+0x6c>  // b.tcont
     56c:	bl	0 <__errno_location>
     570:	ldr	w0, [x0]
     574:	bl	0 <strerror>
     578:	mov	x2, x0
     57c:	ldr	x1, [sp, #56]
     580:	adrp	x0, 0 <__uint64_identity>
     584:	add	x0, x0, #0x0
     588:	bl	0 <ctf_dprintf>
     58c:	bl	0 <__errno_location>
     590:	ldr	w0, [x0]
     594:	b	644 <ctf_arc_write+0x118>
     598:	ldr	x4, [sp, #24]
     59c:	ldr	x3, [sp, #32]
     5a0:	ldr	x2, [sp, #40]
     5a4:	ldr	x1, [sp, #48]
     5a8:	ldr	w0, [sp, #72]
     5ac:	bl	54 <ctf_arc_write_fd>
     5b0:	str	w0, [sp, #76]
     5b4:	ldr	w0, [sp, #76]
     5b8:	cmp	w0, #0x0
     5bc:	b.ne	608 <ctf_arc_write+0xdc>  // b.any
     5c0:	ldr	w0, [sp, #72]
     5c4:	bl	0 <close>
     5c8:	str	w0, [sp, #76]
     5cc:	ldr	w0, [sp, #76]
     5d0:	cmp	w0, #0x0
     5d4:	b.ge	610 <ctf_arc_write+0xe4>  // b.tcont
     5d8:	bl	0 <__errno_location>
     5dc:	ldr	w0, [x0]
     5e0:	bl	0 <strerror>
     5e4:	mov	x1, x0
     5e8:	adrp	x0, 0 <__uint64_identity>
     5ec:	add	x0, x0, #0x0
     5f0:	bl	0 <ctf_dprintf>
     5f4:	nop
     5f8:	ldr	w0, [sp, #76]
     5fc:	cmp	w0, #0x0
     600:	b.ge	640 <ctf_arc_write+0x114>  // b.tcont
     604:	b	638 <ctf_arc_write+0x10c>
     608:	nop
     60c:	b	614 <ctf_arc_write+0xe8>
     610:	nop
     614:	ldr	w0, [sp, #72]
     618:	bl	0 <close>
     61c:	ldr	w0, [sp, #76]
     620:	cmp	w0, #0x0
     624:	b.ge	630 <ctf_arc_write+0x104>  // b.tcont
     628:	ldr	x0, [sp, #56]
     62c:	bl	0 <unlink>
     630:	ldr	w0, [sp, #76]
     634:	b	644 <ctf_arc_write+0x118>
     638:	ldr	x0, [sp, #56]
     63c:	bl	0 <unlink>
     640:	ldr	w0, [sp, #76]
     644:	ldp	x29, x30, [sp], #80
     648:	ret

000000000000064c <arc_write_one_ctf>:
     64c:	stp	x29, x30, [sp, #-112]!
     650:	mov	x29, sp
     654:	str	x0, [sp, #40]
     658:	str	w1, [sp, #36]
     65c:	str	x2, [sp, #24]
     660:	str	xzr, [sp, #48]
     664:	ldr	x0, [sp, #40]
     668:	bl	0 <ctf_serialize>
     66c:	cmp	w0, #0x0
     670:	b.ge	688 <arc_write_one_ctf+0x3c>  // b.tcont
     674:	ldr	x0, [sp, #40]
     678:	ldr	w0, [x0, #556]
     67c:	neg	w0, w0
     680:	sxtw	x0, w0
     684:	b	8b4 <arc_write_one_ctf+0x268>
     688:	mov	w2, #0x1                   	// #1
     68c:	mov	x1, #0x0                   	// #0
     690:	ldr	w0, [sp, #36]
     694:	bl	0 <lseek>
     698:	str	x0, [sp, #80]
     69c:	ldr	x0, [sp, #80]
     6a0:	cmp	x0, #0x0
     6a4:	b.ge	6bc <arc_write_one_ctf+0x70>  // b.tcont
     6a8:	bl	0 <__errno_location>
     6ac:	ldr	w0, [x0]
     6b0:	neg	w0, w0
     6b4:	sxtw	x0, w0
     6b8:	b	8b4 <arc_write_one_ctf+0x268>
     6bc:	ldr	x0, [sp, #40]
     6c0:	ldr	x0, [x0, #416]
     6c4:	ldr	x1, [sp, #24]
     6c8:	cmp	x1, x0
     6cc:	b.cs	6e0 <arc_write_one_ctf+0x94>  // b.hs, b.nlast
     6d0:	adrp	x0, 0 <ctf_compress_write>
     6d4:	add	x0, x0, #0x0
     6d8:	str	x0, [sp, #88]
     6dc:	b	6ec <arc_write_one_ctf+0xa0>
     6e0:	adrp	x0, 0 <ctf_write>
     6e4:	add	x0, x0, #0x0
     6e8:	str	x0, [sp, #88]
     6ec:	mov	x0, #0x8                   	// #8
     6f0:	str	x0, [sp, #96]
     6f4:	add	x0, sp, #0x30
     6f8:	str	x0, [sp, #104]
     6fc:	b	754 <arc_write_one_ctf+0x108>
     700:	ldr	x2, [sp, #96]
     704:	ldr	x1, [sp, #104]
     708:	ldr	w0, [sp, #36]
     70c:	bl	0 <write>
     710:	str	x0, [sp, #56]
     714:	ldr	x0, [sp, #56]
     718:	cmp	x0, #0x0
     71c:	b.ge	734 <arc_write_one_ctf+0xe8>  // b.tcont
     720:	bl	0 <__errno_location>
     724:	ldr	w0, [x0]
     728:	neg	w0, w0
     72c:	sxtw	x0, w0
     730:	b	8b4 <arc_write_one_ctf+0x268>
     734:	ldr	x0, [sp, #56]
     738:	ldr	x1, [sp, #96]
     73c:	sub	x0, x1, x0
     740:	str	x0, [sp, #96]
     744:	ldr	x0, [sp, #56]
     748:	ldr	x1, [sp, #104]
     74c:	add	x0, x1, x0
     750:	str	x0, [sp, #104]
     754:	ldr	x0, [sp, #96]
     758:	cmp	x0, #0x0
     75c:	b.ne	700 <arc_write_one_ctf+0xb4>  // b.any
     760:	ldr	x2, [sp, #88]
     764:	ldr	w1, [sp, #36]
     768:	ldr	x0, [sp, #40]
     76c:	blr	x2
     770:	cmp	w0, #0x0
     774:	b.eq	78c <arc_write_one_ctf+0x140>  // b.none
     778:	ldr	x0, [sp, #40]
     77c:	ldr	w0, [x0, #556]
     780:	neg	w0, w0
     784:	sxtw	x0, w0
     788:	b	8b4 <arc_write_one_ctf+0x268>
     78c:	mov	w2, #0x1                   	// #1
     790:	mov	x1, #0x0                   	// #0
     794:	ldr	w0, [sp, #36]
     798:	bl	0 <lseek>
     79c:	str	x0, [sp, #72]
     7a0:	ldr	x0, [sp, #72]
     7a4:	cmp	x0, #0x0
     7a8:	b.ge	7c0 <arc_write_one_ctf+0x174>  // b.tcont
     7ac:	bl	0 <__errno_location>
     7b0:	ldr	w0, [x0]
     7b4:	neg	w0, w0
     7b8:	sxtw	x0, w0
     7bc:	b	8b4 <arc_write_one_ctf+0x268>
     7c0:	ldr	x1, [sp, #72]
     7c4:	ldr	x0, [sp, #80]
     7c8:	sub	x0, x1, x0
     7cc:	bl	0 <__uint64_identity>
     7d0:	str	x0, [sp, #48]
     7d4:	mov	w2, #0x0                   	// #0
     7d8:	ldr	x1, [sp, #80]
     7dc:	ldr	w0, [sp, #36]
     7e0:	bl	0 <lseek>
     7e4:	cmp	x0, #0x0
     7e8:	b.ge	800 <arc_write_one_ctf+0x1b4>  // b.tcont
     7ec:	bl	0 <__errno_location>
     7f0:	ldr	w0, [x0]
     7f4:	neg	w0, w0
     7f8:	sxtw	x0, w0
     7fc:	b	8b4 <arc_write_one_ctf+0x268>
     800:	mov	x0, #0x8                   	// #8
     804:	str	x0, [sp, #96]
     808:	add	x0, sp, #0x30
     80c:	str	x0, [sp, #104]
     810:	b	868 <arc_write_one_ctf+0x21c>
     814:	ldr	x2, [sp, #96]
     818:	ldr	x1, [sp, #104]
     81c:	ldr	w0, [sp, #36]
     820:	bl	0 <write>
     824:	str	x0, [sp, #64]
     828:	ldr	x0, [sp, #64]
     82c:	cmp	x0, #0x0
     830:	b.ge	848 <arc_write_one_ctf+0x1fc>  // b.tcont
     834:	bl	0 <__errno_location>
     838:	ldr	w0, [x0]
     83c:	neg	w0, w0
     840:	sxtw	x0, w0
     844:	b	8b4 <arc_write_one_ctf+0x268>
     848:	ldr	x0, [sp, #64]
     84c:	ldr	x1, [sp, #96]
     850:	sub	x0, x1, x0
     854:	str	x0, [sp, #96]
     858:	ldr	x0, [sp, #64]
     85c:	ldr	x1, [sp, #104]
     860:	add	x0, x1, x0
     864:	str	x0, [sp, #104]
     868:	ldr	x0, [sp, #96]
     86c:	cmp	x0, #0x0
     870:	b.ne	814 <arc_write_one_ctf+0x1c8>  // b.any
     874:	ldr	x0, [sp, #72]
     878:	add	x0, x0, #0x7
     87c:	and	x0, x0, #0xfffffffffffffff8
     880:	str	x0, [sp, #72]
     884:	mov	w2, #0x0                   	// #0
     888:	ldr	x1, [sp, #72]
     88c:	ldr	w0, [sp, #36]
     890:	bl	0 <lseek>
     894:	cmp	x0, #0x0
     898:	b.ge	8b0 <arc_write_one_ctf+0x264>  // b.tcont
     89c:	bl	0 <__errno_location>
     8a0:	ldr	w0, [x0]
     8a4:	neg	w0, w0
     8a8:	sxtw	x0, w0
     8ac:	b	8b4 <arc_write_one_ctf+0x268>
     8b0:	ldr	x0, [sp, #80]
     8b4:	ldp	x29, x30, [sp], #112
     8b8:	ret

00000000000008bc <sort_modent_by_name>:
     8bc:	stp	x29, x30, [sp, #-96]!
     8c0:	mov	x29, sp
     8c4:	str	x19, [sp, #16]
     8c8:	str	x0, [sp, #56]
     8cc:	str	x1, [sp, #48]
     8d0:	str	x2, [sp, #40]
     8d4:	ldr	x0, [sp, #56]
     8d8:	str	x0, [sp, #88]
     8dc:	ldr	x0, [sp, #48]
     8e0:	str	x0, [sp, #80]
     8e4:	ldr	x0, [sp, #40]
     8e8:	str	x0, [sp, #72]
     8ec:	ldr	x0, [sp, #88]
     8f0:	ldr	x0, [x0]
     8f4:	bl	0 <__uint64_identity>
     8f8:	mov	x1, x0
     8fc:	ldr	x0, [sp, #72]
     900:	add	x19, x0, x1
     904:	ldr	x0, [sp, #80]
     908:	ldr	x0, [x0]
     90c:	bl	0 <__uint64_identity>
     910:	mov	x1, x0
     914:	ldr	x0, [sp, #72]
     918:	add	x0, x0, x1
     91c:	mov	x1, x0
     920:	mov	x0, x19
     924:	bl	0 <strcmp>
     928:	ldr	x19, [sp, #16]
     92c:	ldp	x29, x30, [sp], #96
     930:	ret

0000000000000934 <search_modent_by_name>:
     934:	stp	x29, x30, [sp, #-64]!
     938:	mov	x29, sp
     93c:	str	x19, [sp, #16]
     940:	str	x0, [sp, #40]
     944:	str	x1, [sp, #32]
     948:	ldr	x0, [sp, #40]
     94c:	str	x0, [sp, #56]
     950:	ldr	x0, [sp, #32]
     954:	str	x0, [sp, #48]
     958:	mrs	x0, tpidr_el0
     95c:	add	x0, x0, #0x0, lsl #12
     960:	add	x0, x0, #0x0
     964:	ldr	x19, [x0]
     968:	ldr	x0, [sp, #48]
     96c:	ldr	x0, [x0]
     970:	bl	0 <__uint64_identity>
     974:	add	x0, x19, x0
     978:	mov	x1, x0
     97c:	ldr	x0, [sp, #56]
     980:	bl	0 <strcmp>
     984:	ldr	x19, [sp, #16]
     988:	ldp	x29, x30, [sp], #64
     98c:	ret

0000000000000990 <ctf_arc_bufopen>:
     990:	stp	x29, x30, [sp, #-64]!
     994:	mov	x29, sp
     998:	str	x0, [sp, #40]
     99c:	str	x1, [sp, #32]
     9a0:	str	x2, [sp, #24]
     9a4:	ldr	x0, [sp, #40]
     9a8:	str	x0, [sp, #56]
     9ac:	ldr	x0, [sp, #56]
     9b0:	ldr	x0, [x0]
     9b4:	bl	0 <__uint64_identity>
     9b8:	mov	x1, x0
     9bc:	mov	x0, #0x3eeb                	// #16107
     9c0:	movk	x0, #0xd762, lsl #16
     9c4:	movk	x0, #0xf2a4, lsl #32
     9c8:	movk	x0, #0x8b47, lsl #48
     9cc:	cmp	x1, x0
     9d0:	b.eq	9f4 <ctf_arc_bufopen+0x64>  // b.none
     9d4:	ldr	x0, [sp, #24]
     9d8:	cmp	x0, #0x0
     9dc:	b.eq	9ec <ctf_arc_bufopen+0x5c>  // b.none
     9e0:	ldr	x0, [sp, #24]
     9e4:	mov	w1, #0x3e8                 	// #1000
     9e8:	str	w1, [x0]
     9ec:	mov	x0, #0x0                   	// #0
     9f0:	b	9f8 <ctf_arc_bufopen+0x68>
     9f4:	ldr	x0, [sp, #56]
     9f8:	ldp	x29, x30, [sp], #64
     9fc:	ret

0000000000000a00 <ctf_arc_open_internal>:
     a00:	stp	x29, x30, [sp, #-192]!
     a04:	mov	x29, sp
     a08:	str	x0, [sp, #24]
     a0c:	str	x1, [sp, #16]
     a10:	bl	0 <libctf_init_debug>
     a14:	mov	w1, #0x0                   	// #0
     a18:	ldr	x0, [sp, #24]
     a1c:	bl	0 <open>
     a20:	str	w0, [sp, #180]
     a24:	ldr	w0, [sp, #180]
     a28:	cmp	w0, #0x0
     a2c:	b.ge	a40 <ctf_arc_open_internal+0x40>  // b.tcont
     a30:	adrp	x0, 0 <__uint64_identity>
     a34:	add	x0, x0, #0x0
     a38:	str	x0, [sp, #184]
     a3c:	b	b20 <ctf_arc_open_internal+0x120>
     a40:	add	x0, sp, #0x28
     a44:	mov	x1, x0
     a48:	ldr	w0, [sp, #180]
     a4c:	bl	0 <fstat>
     a50:	cmp	w0, #0x0
     a54:	b.ge	a68 <ctf_arc_open_internal+0x68>  // b.tcont
     a58:	adrp	x0, 0 <__uint64_identity>
     a5c:	add	x0, x0, #0x0
     a60:	str	x0, [sp, #184]
     a64:	b	b18 <ctf_arc_open_internal+0x118>
     a68:	ldr	x0, [sp, #88]
     a6c:	mov	x1, x0
     a70:	ldr	w0, [sp, #180]
     a74:	bl	1328 <arc_mmap_file>
     a78:	str	x0, [sp, #168]
     a7c:	ldr	x0, [sp, #168]
     a80:	cmp	x0, #0x0
     a84:	b.ne	a98 <ctf_arc_open_internal+0x98>  // b.any
     a88:	adrp	x0, 0 <__uint64_identity>
     a8c:	add	x0, x0, #0x0
     a90:	str	x0, [sp, #184]
     a94:	b	b18 <ctf_arc_open_internal+0x118>
     a98:	ldr	x0, [sp, #168]
     a9c:	ldr	x0, [x0]
     aa0:	bl	0 <__uint64_identity>
     aa4:	mov	x1, x0
     aa8:	mov	x0, #0x3eeb                	// #16107
     aac:	movk	x0, #0xd762, lsl #16
     ab0:	movk	x0, #0xf2a4, lsl #32
     ab4:	movk	x0, #0x8b47, lsl #48
     ab8:	cmp	x1, x0
     abc:	b.eq	af8 <ctf_arc_open_internal+0xf8>  // b.none
     ac0:	adrp	x0, 0 <__uint64_identity>
     ac4:	add	x0, x0, #0x0
     ac8:	str	x0, [sp, #184]
     acc:	bl	0 <__errno_location>
     ad0:	mov	x1, x0
     ad4:	mov	w0, #0x3e8                 	// #1000
     ad8:	str	w0, [x1]
     adc:	nop
     ae0:	ldr	x0, [sp, #88]
     ae4:	mov	x2, #0x0                   	// #0
     ae8:	mov	x1, x0
     aec:	ldr	x0, [sp, #168]
     af0:	bl	13d8 <arc_mmap_unmap>
     af4:	b	b18 <ctf_arc_open_internal+0x118>
     af8:	ldr	x0, [sp, #88]
     afc:	mov	x1, x0
     b00:	ldr	x0, [sp, #168]
     b04:	str	x1, [x0]
     b08:	ldr	w0, [sp, #180]
     b0c:	bl	0 <close>
     b10:	ldr	x0, [sp, #168]
     b14:	b	b7c <ctf_arc_open_internal+0x17c>
     b18:	ldr	w0, [sp, #180]
     b1c:	bl	0 <close>
     b20:	ldr	x0, [sp, #16]
     b24:	cmp	x0, #0x0
     b28:	b.eq	b3c <ctf_arc_open_internal+0x13c>  // b.none
     b2c:	bl	0 <__errno_location>
     b30:	ldr	w1, [x0]
     b34:	ldr	x0, [sp, #16]
     b38:	str	w1, [x0]
     b3c:	bl	0 <__errno_location>
     b40:	ldr	w0, [x0]
     b44:	cmp	w0, #0x3e7
     b48:	b.gt	b5c <ctf_arc_open_internal+0x15c>
     b4c:	bl	0 <__errno_location>
     b50:	ldr	w0, [x0]
     b54:	bl	0 <strerror>
     b58:	b	b68 <ctf_arc_open_internal+0x168>
     b5c:	bl	0 <__errno_location>
     b60:	ldr	w0, [x0]
     b64:	bl	0 <ctf_errmsg>
     b68:	mov	x2, x0
     b6c:	ldr	x1, [sp, #24]
     b70:	ldr	x0, [sp, #184]
     b74:	bl	0 <ctf_dprintf>
     b78:	mov	x0, #0x0                   	// #0
     b7c:	ldp	x29, x30, [sp], #192
     b80:	ret

0000000000000b84 <ctf_arc_close_internal>:
     b84:	stp	x29, x30, [sp, #-32]!
     b88:	mov	x29, sp
     b8c:	str	x0, [sp, #24]
     b90:	ldr	x0, [sp, #24]
     b94:	cmp	x0, #0x0
     b98:	b.eq	bb8 <ctf_arc_close_internal+0x34>  // b.none
     b9c:	ldr	x0, [sp, #24]
     ba0:	ldr	x0, [x0]
     ba4:	mov	x2, #0x0                   	// #0
     ba8:	mov	x1, x0
     bac:	ldr	x0, [sp, #24]
     bb0:	bl	13d8 <arc_mmap_unmap>
     bb4:	b	bbc <ctf_arc_close_internal+0x38>
     bb8:	nop
     bbc:	ldp	x29, x30, [sp], #32
     bc0:	ret

0000000000000bc4 <ctf_arc_close>:
     bc4:	stp	x29, x30, [sp, #-32]!
     bc8:	mov	x29, sp
     bcc:	str	x0, [sp, #24]
     bd0:	ldr	x0, [sp, #24]
     bd4:	cmp	x0, #0x0
     bd8:	b.eq	c4c <ctf_arc_close+0x88>  // b.none
     bdc:	ldr	x0, [sp, #24]
     be0:	ldr	w0, [x0]
     be4:	cmp	w0, #0x0
     be8:	b.eq	bfc <ctf_arc_close+0x38>  // b.none
     bec:	ldr	x0, [sp, #24]
     bf0:	ldr	x0, [x0, #16]
     bf4:	bl	b84 <ctf_arc_close_internal>
     bf8:	b	c08 <ctf_arc_close+0x44>
     bfc:	ldr	x0, [sp, #24]
     c00:	ldr	x0, [x0, #8]
     c04:	bl	0 <ctf_file_close>
     c08:	ldr	x0, [sp, #24]
     c0c:	ldr	x0, [x0, #32]
     c10:	bl	0 <free>
     c14:	ldr	x0, [sp, #24]
     c18:	ldr	x0, [x0, #88]
     c1c:	bl	0 <free>
     c20:	ldr	x0, [sp, #24]
     c24:	ldr	x0, [x0, #104]
     c28:	cmp	x0, #0x0
     c2c:	b.eq	c40 <ctf_arc_close+0x7c>  // b.none
     c30:	ldr	x0, [sp, #24]
     c34:	ldr	x1, [x0, #104]
     c38:	ldr	x0, [sp, #24]
     c3c:	blr	x1
     c40:	ldr	x0, [sp, #24]
     c44:	bl	0 <free>
     c48:	b	c50 <ctf_arc_close+0x8c>
     c4c:	nop
     c50:	ldp	x29, x30, [sp], #32
     c54:	ret

0000000000000c58 <ctf_arc_open_by_name_internal>:
     c58:	stp	x29, x30, [sp, #-80]!
     c5c:	mov	x29, sp
     c60:	str	x0, [sp, #56]
     c64:	str	x1, [sp, #48]
     c68:	str	x2, [sp, #40]
     c6c:	str	x3, [sp, #32]
     c70:	str	x4, [sp, #24]
     c74:	ldr	x0, [sp, #32]
     c78:	cmp	x0, #0x0
     c7c:	b.ne	c8c <ctf_arc_open_by_name_internal+0x34>  // b.any
     c80:	adrp	x0, 0 <_CTF_SECTION>
     c84:	add	x0, x0, #0x0
     c88:	str	x0, [sp, #32]
     c8c:	ldr	x1, [sp, #32]
     c90:	adrp	x0, 0 <__uint64_identity>
     c94:	add	x0, x0, #0x0
     c98:	bl	0 <ctf_dprintf>
     c9c:	ldr	x0, [sp, #56]
     ca0:	add	x0, x0, #0x28
     ca4:	str	x0, [sp, #72]
     ca8:	ldr	x0, [sp, #56]
     cac:	ldr	x0, [x0, #24]
     cb0:	bl	0 <__uint64_identity>
     cb4:	mov	x1, x0
     cb8:	ldr	x0, [sp, #56]
     cbc:	add	x1, x0, x1
     cc0:	mrs	x0, tpidr_el0
     cc4:	add	x0, x0, #0x0, lsl #12
     cc8:	add	x0, x0, #0x0
     ccc:	str	x1, [x0]
     cd0:	ldr	x0, [sp, #56]
     cd4:	ldr	x0, [x0, #16]
     cd8:	bl	0 <__uint64_identity>
     cdc:	mov	x1, x0
     ce0:	adrp	x0, 0 <__uint64_identity>
     ce4:	add	x4, x0, #0x0
     ce8:	mov	x3, #0x10                  	// #16
     cec:	mov	x2, x1
     cf0:	ldr	x1, [sp, #72]
     cf4:	ldr	x0, [sp, #32]
     cf8:	bl	0 <bsearch>
     cfc:	str	x0, [sp, #72]
     d00:	ldr	x0, [sp, #72]
     d04:	cmp	x0, #0x0
     d08:	b.ne	d2c <ctf_arc_open_by_name_internal+0xd4>  // b.any
     d0c:	ldr	x0, [sp, #24]
     d10:	cmp	x0, #0x0
     d14:	b.eq	d24 <ctf_arc_open_by_name_internal+0xcc>  // b.none
     d18:	ldr	x0, [sp, #24]
     d1c:	mov	w1, #0x415                 	// #1045
     d20:	str	w1, [x0]
     d24:	mov	x0, #0x0                   	// #0
     d28:	b	d50 <ctf_arc_open_by_name_internal+0xf8>
     d2c:	ldr	x0, [sp, #72]
     d30:	ldr	x0, [x0, #8]
     d34:	bl	0 <__uint64_identity>
     d38:	ldr	x4, [sp, #24]
     d3c:	mov	x3, x0
     d40:	ldr	x2, [sp, #40]
     d44:	ldr	x1, [sp, #48]
     d48:	ldr	x0, [sp, #56]
     d4c:	bl	eb0 <ctf_arc_open_by_offset>
     d50:	ldp	x29, x30, [sp], #80
     d54:	ret

0000000000000d58 <ctf_arc_open_by_name_sections>:
     d58:	stp	x29, x30, [sp, #-80]!
     d5c:	mov	x29, sp
     d60:	str	x0, [sp, #56]
     d64:	str	x1, [sp, #48]
     d68:	str	x2, [sp, #40]
     d6c:	str	x3, [sp, #32]
     d70:	str	x4, [sp, #24]
     d74:	ldr	x0, [sp, #56]
     d78:	ldr	w0, [x0]
     d7c:	cmp	w0, #0x0
     d80:	b.eq	dc4 <ctf_arc_open_by_name_sections+0x6c>  // b.none
     d84:	ldr	x0, [sp, #56]
     d88:	ldr	x0, [x0, #16]
     d8c:	ldr	x4, [sp, #24]
     d90:	ldr	x3, [sp, #32]
     d94:	ldr	x2, [sp, #40]
     d98:	ldr	x1, [sp, #48]
     d9c:	bl	c58 <ctf_arc_open_by_name_internal>
     da0:	str	x0, [sp, #72]
     da4:	ldr	x0, [sp, #72]
     da8:	cmp	x0, #0x0
     dac:	b.eq	dbc <ctf_arc_open_by_name_sections+0x64>  // b.none
     db0:	ldr	x0, [sp, #72]
     db4:	ldr	x1, [sp, #56]
     db8:	str	x1, [x0, #640]
     dbc:	ldr	x0, [sp, #72]
     dc0:	b	e34 <ctf_arc_open_by_name_sections+0xdc>
     dc4:	ldr	x0, [sp, #32]
     dc8:	cmp	x0, #0x0
     dcc:	b.eq	e08 <ctf_arc_open_by_name_sections+0xb0>  // b.none
     dd0:	adrp	x0, 0 <_CTF_SECTION>
     dd4:	add	x1, x0, #0x0
     dd8:	ldr	x0, [sp, #32]
     ddc:	bl	0 <strcmp>
     de0:	cmp	w0, #0x0
     de4:	b.eq	e08 <ctf_arc_open_by_name_sections+0xb0>  // b.none
     de8:	ldr	x0, [sp, #24]
     dec:	cmp	x0, #0x0
     df0:	b.eq	e00 <ctf_arc_open_by_name_sections+0xa8>  // b.none
     df4:	ldr	x0, [sp, #24]
     df8:	mov	w1, #0x415                 	// #1045
     dfc:	str	w1, [x0]
     e00:	mov	x0, #0x0                   	// #0
     e04:	b	e34 <ctf_arc_open_by_name_sections+0xdc>
     e08:	ldr	x0, [sp, #56]
     e0c:	ldr	x0, [x0, #8]
     e10:	ldr	x1, [sp, #56]
     e14:	str	x1, [x0, #640]
     e18:	ldr	x0, [sp, #56]
     e1c:	ldr	x0, [x0, #8]
     e20:	ldr	w1, [x0, #548]
     e24:	add	w1, w1, #0x1
     e28:	str	w1, [x0, #548]
     e2c:	ldr	x0, [sp, #56]
     e30:	ldr	x0, [x0, #8]
     e34:	ldp	x29, x30, [sp], #80
     e38:	ret

0000000000000e3c <ctf_arc_open_by_name>:
     e3c:	stp	x29, x30, [sp, #-64]!
     e40:	mov	x29, sp
     e44:	str	x0, [sp, #40]
     e48:	str	x1, [sp, #32]
     e4c:	str	x2, [sp, #24]
     e50:	ldr	x0, [sp, #40]
     e54:	add	x0, x0, #0x18
     e58:	str	x0, [sp, #56]
     e5c:	ldr	x0, [sp, #40]
     e60:	add	x0, x0, #0x38
     e64:	str	x0, [sp, #48]
     e68:	ldr	x0, [sp, #56]
     e6c:	ldr	x0, [x0]
     e70:	cmp	x0, #0x0
     e74:	b.ne	e7c <ctf_arc_open_by_name+0x40>  // b.any
     e78:	str	xzr, [sp, #56]
     e7c:	ldr	x0, [sp, #48]
     e80:	ldr	x0, [x0]
     e84:	cmp	x0, #0x0
     e88:	b.ne	e90 <ctf_arc_open_by_name+0x54>  // b.any
     e8c:	str	xzr, [sp, #48]
     e90:	ldr	x4, [sp, #24]
     e94:	ldr	x3, [sp, #32]
     e98:	ldr	x2, [sp, #48]
     e9c:	ldr	x1, [sp, #56]
     ea0:	ldr	x0, [sp, #40]
     ea4:	bl	d58 <ctf_arc_open_by_name_sections>
     ea8:	ldp	x29, x30, [sp], #64
     eac:	ret

0000000000000eb0 <ctf_arc_open_by_offset>:
     eb0:	stp	x29, x30, [sp, #-112]!
     eb4:	mov	x29, sp
     eb8:	str	x0, [sp, #56]
     ebc:	str	x1, [sp, #48]
     ec0:	str	x2, [sp, #40]
     ec4:	str	x3, [sp, #32]
     ec8:	str	x4, [sp, #24]
     ecc:	ldr	x1, [sp, #32]
     ed0:	adrp	x0, 0 <__uint64_identity>
     ed4:	add	x0, x0, #0x0
     ed8:	bl	0 <ctf_dprintf>
     edc:	add	x0, sp, #0x48
     ee0:	mov	x2, #0x20                  	// #32
     ee4:	mov	w1, #0x0                   	// #0
     ee8:	bl	0 <memset>
     eec:	ldr	x0, [sp, #56]
     ef0:	ldr	x0, [x0, #32]
     ef4:	bl	0 <__uint64_identity>
     ef8:	mov	x1, x0
     efc:	ldr	x0, [sp, #32]
     f00:	add	x0, x0, x1
     f04:	str	x0, [sp, #32]
     f08:	adrp	x0, 0 <_CTF_SECTION>
     f0c:	add	x0, x0, #0x0
     f10:	str	x0, [sp, #72]
     f14:	ldr	x1, [sp, #56]
     f18:	ldr	x0, [sp, #32]
     f1c:	add	x0, x1, x0
     f20:	ldr	x0, [x0]
     f24:	bl	0 <__uint64_identity>
     f28:	str	x0, [sp, #88]
     f2c:	mov	x0, #0x1                   	// #1
     f30:	str	x0, [sp, #96]
     f34:	ldr	x0, [sp, #32]
     f38:	add	x0, x0, #0x8
     f3c:	ldr	x1, [sp, #56]
     f40:	add	x0, x1, x0
     f44:	str	x0, [sp, #80]
     f48:	add	x0, sp, #0x48
     f4c:	ldr	x3, [sp, #24]
     f50:	ldr	x2, [sp, #40]
     f54:	ldr	x1, [sp, #48]
     f58:	bl	0 <ctf_bufopen>
     f5c:	str	x0, [sp, #104]
     f60:	ldr	x0, [sp, #104]
     f64:	cmp	x0, #0x0
     f68:	b.eq	f84 <ctf_arc_open_by_offset+0xd4>  // b.none
     f6c:	ldr	x0, [sp, #56]
     f70:	ldr	x0, [x0, #8]
     f74:	bl	0 <__uint64_identity>
     f78:	mov	w1, w0
     f7c:	ldr	x0, [sp, #104]
     f80:	bl	0 <ctf_setmodel>
     f84:	ldr	x0, [sp, #104]
     f88:	ldp	x29, x30, [sp], #112
     f8c:	ret

0000000000000f90 <ctf_archive_raw_iter_internal>:
     f90:	stp	x29, x30, [sp, #-112]!
     f94:	mov	x29, sp
     f98:	str	x19, [sp, #16]
     f9c:	str	x0, [sp, #56]
     fa0:	str	x1, [sp, #48]
     fa4:	str	x2, [sp, #40]
     fa8:	ldr	x0, [sp, #56]
     fac:	add	x0, x0, #0x28
     fb0:	str	x0, [sp, #96]
     fb4:	ldr	x0, [sp, #56]
     fb8:	ldr	x0, [x0, #24]
     fbc:	bl	0 <__uint64_identity>
     fc0:	mov	x1, x0
     fc4:	ldr	x0, [sp, #56]
     fc8:	add	x0, x0, x1
     fcc:	str	x0, [sp, #88]
     fd0:	str	xzr, [sp, #104]
     fd4:	b	1088 <ctf_archive_raw_iter_internal+0xf8>
     fd8:	ldr	x0, [sp, #104]
     fdc:	lsl	x0, x0, #4
     fe0:	ldr	x1, [sp, #96]
     fe4:	add	x0, x1, x0
     fe8:	ldr	x0, [x0]
     fec:	bl	0 <__uint64_identity>
     ff0:	mov	x1, x0
     ff4:	ldr	x0, [sp, #88]
     ff8:	add	x0, x0, x1
     ffc:	str	x0, [sp, #80]
    1000:	ldr	x0, [sp, #56]
    1004:	ldr	x0, [x0, #32]
    1008:	bl	0 <__uint64_identity>
    100c:	mov	x19, x0
    1010:	ldr	x0, [sp, #104]
    1014:	lsl	x0, x0, #4
    1018:	ldr	x1, [sp, #96]
    101c:	add	x0, x1, x0
    1020:	ldr	x0, [x0, #8]
    1024:	bl	0 <__uint64_identity>
    1028:	add	x0, x19, x0
    102c:	ldr	x1, [sp, #56]
    1030:	add	x0, x1, x0
    1034:	str	x0, [sp, #72]
    1038:	ldr	x0, [sp, #72]
    103c:	add	x19, x0, #0x8
    1040:	ldr	x0, [sp, #72]
    1044:	ldr	x0, [x0]
    1048:	bl	0 <__uint64_identity>
    104c:	ldr	x4, [sp, #48]
    1050:	ldr	x3, [sp, #40]
    1054:	mov	x2, x0
    1058:	mov	x1, x19
    105c:	ldr	x0, [sp, #80]
    1060:	blr	x4
    1064:	str	w0, [sp, #68]
    1068:	ldr	w0, [sp, #68]
    106c:	cmp	w0, #0x0
    1070:	b.eq	107c <ctf_archive_raw_iter_internal+0xec>  // b.none
    1074:	ldr	w0, [sp, #68]
    1078:	b	10a8 <ctf_archive_raw_iter_internal+0x118>
    107c:	ldr	x0, [sp, #104]
    1080:	add	x0, x0, #0x1
    1084:	str	x0, [sp, #104]
    1088:	ldr	x0, [sp, #56]
    108c:	ldr	x0, [x0, #16]
    1090:	bl	0 <__uint64_identity>
    1094:	mov	x1, x0
    1098:	ldr	x0, [sp, #104]
    109c:	cmp	x0, x1
    10a0:	b.cc	fd8 <ctf_archive_raw_iter_internal+0x48>  // b.lo, b.ul, b.last
    10a4:	mov	w0, #0x0                   	// #0
    10a8:	ldr	x19, [sp, #16]
    10ac:	ldp	x29, x30, [sp], #112
    10b0:	ret

00000000000010b4 <ctf_archive_raw_iter>:
    10b4:	stp	x29, x30, [sp, #-48]!
    10b8:	mov	x29, sp
    10bc:	str	x0, [sp, #40]
    10c0:	str	x1, [sp, #32]
    10c4:	str	x2, [sp, #24]
    10c8:	ldr	x0, [sp, #40]
    10cc:	ldr	w0, [x0]
    10d0:	cmp	w0, #0x0
    10d4:	b.eq	10f0 <ctf_archive_raw_iter+0x3c>  // b.none
    10d8:	ldr	x0, [sp, #40]
    10dc:	ldr	x0, [x0, #16]
    10e0:	ldr	x2, [sp, #24]
    10e4:	ldr	x1, [sp, #32]
    10e8:	bl	f90 <ctf_archive_raw_iter_internal>
    10ec:	b	10f4 <ctf_archive_raw_iter+0x40>
    10f0:	mov	w0, #0xffffffea            	// #-22
    10f4:	ldp	x29, x30, [sp], #48
    10f8:	ret

00000000000010fc <ctf_archive_iter_internal>:
    10fc:	stp	x29, x30, [sp, #-112]!
    1100:	mov	x29, sp
    1104:	str	x0, [sp, #56]
    1108:	str	x1, [sp, #48]
    110c:	str	x2, [sp, #40]
    1110:	str	x3, [sp, #32]
    1114:	str	x4, [sp, #24]
    1118:	str	x5, [sp, #16]
    111c:	ldr	x0, [sp, #48]
    1120:	add	x0, x0, #0x28
    1124:	str	x0, [sp, #96]
    1128:	ldr	x0, [sp, #48]
    112c:	ldr	x0, [x0, #24]
    1130:	bl	0 <__uint64_identity>
    1134:	mov	x1, x0
    1138:	ldr	x0, [sp, #48]
    113c:	add	x0, x0, x1
    1140:	str	x0, [sp, #88]
    1144:	str	xzr, [sp, #104]
    1148:	b	11fc <ctf_archive_iter_internal+0x100>
    114c:	ldr	x0, [sp, #104]
    1150:	lsl	x0, x0, #4
    1154:	ldr	x1, [sp, #96]
    1158:	add	x0, x1, x0
    115c:	ldr	x0, [x0]
    1160:	bl	0 <__uint64_identity>
    1164:	mov	x1, x0
    1168:	ldr	x0, [sp, #88]
    116c:	add	x0, x0, x1
    1170:	str	x0, [sp, #80]
    1174:	add	x0, sp, #0x44
    1178:	mov	x4, x0
    117c:	ldr	x3, [sp, #80]
    1180:	ldr	x2, [sp, #32]
    1184:	ldr	x1, [sp, #40]
    1188:	ldr	x0, [sp, #48]
    118c:	bl	c58 <ctf_arc_open_by_name_internal>
    1190:	str	x0, [sp, #72]
    1194:	ldr	x0, [sp, #72]
    1198:	cmp	x0, #0x0
    119c:	b.ne	11a8 <ctf_archive_iter_internal+0xac>  // b.any
    11a0:	ldr	w0, [sp, #68]
    11a4:	b	121c <ctf_archive_iter_internal+0x120>
    11a8:	ldr	x0, [sp, #72]
    11ac:	ldr	x1, [sp, #56]
    11b0:	str	x1, [x0, #640]
    11b4:	ldr	x3, [sp, #24]
    11b8:	ldr	x2, [sp, #16]
    11bc:	ldr	x1, [sp, #80]
    11c0:	ldr	x0, [sp, #72]
    11c4:	blr	x3
    11c8:	str	w0, [sp, #68]
    11cc:	ldr	w0, [sp, #68]
    11d0:	cmp	w0, #0x0
    11d4:	b.eq	11e8 <ctf_archive_iter_internal+0xec>  // b.none
    11d8:	ldr	x0, [sp, #72]
    11dc:	bl	0 <ctf_file_close>
    11e0:	ldr	w0, [sp, #68]
    11e4:	b	121c <ctf_archive_iter_internal+0x120>
    11e8:	ldr	x0, [sp, #72]
    11ec:	bl	0 <ctf_file_close>
    11f0:	ldr	x0, [sp, #104]
    11f4:	add	x0, x0, #0x1
    11f8:	str	x0, [sp, #104]
    11fc:	ldr	x0, [sp, #48]
    1200:	ldr	x0, [x0, #16]
    1204:	bl	0 <__uint64_identity>
    1208:	mov	x1, x0
    120c:	ldr	x0, [sp, #104]
    1210:	cmp	x0, x1
    1214:	b.cc	114c <ctf_archive_iter_internal+0x50>  // b.lo, b.ul, b.last
    1218:	mov	w0, #0x0                   	// #0
    121c:	ldp	x29, x30, [sp], #112
    1220:	ret

0000000000001224 <ctf_archive_iter>:
    1224:	stp	x29, x30, [sp, #-64]!
    1228:	mov	x29, sp
    122c:	str	x0, [sp, #40]
    1230:	str	x1, [sp, #32]
    1234:	str	x2, [sp, #24]
    1238:	ldr	x0, [sp, #40]
    123c:	add	x0, x0, #0x18
    1240:	str	x0, [sp, #56]
    1244:	ldr	x0, [sp, #40]
    1248:	add	x0, x0, #0x38
    124c:	str	x0, [sp, #48]
    1250:	ldr	x0, [sp, #56]
    1254:	ldr	x0, [x0]
    1258:	cmp	x0, #0x0
    125c:	b.ne	1264 <ctf_archive_iter+0x40>  // b.any
    1260:	str	xzr, [sp, #56]
    1264:	ldr	x0, [sp, #48]
    1268:	ldr	x0, [x0]
    126c:	cmp	x0, #0x0
    1270:	b.ne	1278 <ctf_archive_iter+0x54>  // b.any
    1274:	str	xzr, [sp, #48]
    1278:	ldr	x0, [sp, #40]
    127c:	ldr	w0, [x0]
    1280:	cmp	w0, #0x0
    1284:	b.eq	12b0 <ctf_archive_iter+0x8c>  // b.none
    1288:	ldr	x0, [sp, #40]
    128c:	ldr	x0, [x0, #16]
    1290:	ldr	x5, [sp, #24]
    1294:	ldr	x4, [sp, #32]
    1298:	ldr	x3, [sp, #48]
    129c:	ldr	x2, [sp, #56]
    12a0:	mov	x1, x0
    12a4:	ldr	x0, [sp, #40]
    12a8:	bl	10fc <ctf_archive_iter_internal>
    12ac:	b	12d0 <ctf_archive_iter+0xac>
    12b0:	ldr	x0, [sp, #40]
    12b4:	ldr	x4, [x0, #8]
    12b8:	ldr	x3, [sp, #32]
    12bc:	ldr	x2, [sp, #24]
    12c0:	adrp	x0, 0 <_CTF_SECTION>
    12c4:	add	x1, x0, #0x0
    12c8:	mov	x0, x4
    12cc:	blr	x3
    12d0:	ldp	x29, x30, [sp], #64
    12d4:	ret

00000000000012d8 <arc_mmap_header>:
    12d8:	stp	x29, x30, [sp, #-48]!
    12dc:	mov	x29, sp
    12e0:	str	w0, [sp, #28]
    12e4:	str	x1, [sp, #16]
    12e8:	mov	x5, #0x0                   	// #0
    12ec:	ldr	w4, [sp, #28]
    12f0:	mov	w3, #0x1                   	// #1
    12f4:	mov	w2, #0x3                   	// #3
    12f8:	ldr	x1, [sp, #16]
    12fc:	mov	x0, #0x0                   	// #0
    1300:	bl	0 <mmap>
    1304:	str	x0, [sp, #40]
    1308:	ldr	x0, [sp, #40]
    130c:	cmn	x0, #0x1
    1310:	b.ne	131c <arc_mmap_header+0x44>  // b.any
    1314:	mov	x0, #0x0                   	// #0
    1318:	b	1320 <arc_mmap_header+0x48>
    131c:	ldr	x0, [sp, #40]
    1320:	ldp	x29, x30, [sp], #48
    1324:	ret

0000000000001328 <arc_mmap_file>:
    1328:	stp	x29, x30, [sp, #-48]!
    132c:	mov	x29, sp
    1330:	str	w0, [sp, #28]
    1334:	str	x1, [sp, #16]
    1338:	mov	x5, #0x0                   	// #0
    133c:	ldr	w4, [sp, #28]
    1340:	mov	w3, #0x2                   	// #2
    1344:	mov	w2, #0x3                   	// #3
    1348:	ldr	x1, [sp, #16]
    134c:	mov	x0, #0x0                   	// #0
    1350:	bl	0 <mmap>
    1354:	str	x0, [sp, #40]
    1358:	ldr	x0, [sp, #40]
    135c:	cmn	x0, #0x1
    1360:	b.ne	136c <arc_mmap_file+0x44>  // b.any
    1364:	mov	x0, #0x0                   	// #0
    1368:	b	1370 <arc_mmap_file+0x48>
    136c:	ldr	x0, [sp, #40]
    1370:	ldp	x29, x30, [sp], #48
    1374:	ret

0000000000001378 <arc_mmap_writeout>:
    1378:	stp	x29, x30, [sp, #-48]!
    137c:	mov	x29, sp
    1380:	str	w0, [sp, #44]
    1384:	str	x1, [sp, #32]
    1388:	str	x2, [sp, #24]
    138c:	str	x3, [sp, #16]
    1390:	mov	w2, #0x1                   	// #1
    1394:	ldr	x1, [sp, #24]
    1398:	ldr	x0, [sp, #32]
    139c:	bl	0 <msync>
    13a0:	cmp	w0, #0x0
    13a4:	b.ge	13cc <arc_mmap_writeout+0x54>  // b.tcont
    13a8:	ldr	x0, [sp, #16]
    13ac:	cmp	x0, #0x0
    13b0:	b.eq	13c4 <arc_mmap_writeout+0x4c>  // b.none
    13b4:	ldr	x0, [sp, #16]
    13b8:	adrp	x1, 0 <__uint64_identity>
    13bc:	add	x1, x1, #0x0
    13c0:	str	x1, [x0]
    13c4:	mov	w0, #0xffffffff            	// #-1
    13c8:	b	13d0 <arc_mmap_writeout+0x58>
    13cc:	mov	w0, #0x0                   	// #0
    13d0:	ldp	x29, x30, [sp], #48
    13d4:	ret

00000000000013d8 <arc_mmap_unmap>:
    13d8:	stp	x29, x30, [sp, #-48]!
    13dc:	mov	x29, sp
    13e0:	str	x0, [sp, #40]
    13e4:	str	x1, [sp, #32]
    13e8:	str	x2, [sp, #24]
    13ec:	ldr	x1, [sp, #32]
    13f0:	ldr	x0, [sp, #40]
    13f4:	bl	0 <munmap>
    13f8:	cmp	w0, #0x0
    13fc:	b.ge	1424 <arc_mmap_unmap+0x4c>  // b.tcont
    1400:	ldr	x0, [sp, #24]
    1404:	cmp	x0, #0x0
    1408:	b.eq	141c <arc_mmap_unmap+0x44>  // b.none
    140c:	ldr	x0, [sp, #24]
    1410:	adrp	x1, 0 <__uint64_identity>
    1414:	add	x1, x1, #0x0
    1418:	str	x1, [x0]
    141c:	mov	w0, #0xffffffff            	// #-1
    1420:	b	1428 <arc_mmap_unmap+0x50>
    1424:	mov	w0, #0x0                   	// #0
    1428:	ldp	x29, x30, [sp], #48
    142c:	ret

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_dump_append>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	str	x1, [sp, #16]
      10:	mov	x0, #0x18                  	// #24
      14:	bl	0 <malloc>
      18:	str	x0, [sp, #40]
      1c:	ldr	x0, [sp, #40]
      20:	cmp	x0, #0x0
      24:	b.ne	3c <ctf_dump_append+0x3c>  // b.any
      28:	ldr	x0, [sp, #24]
      2c:	ldr	x0, [x0, #8]
      30:	mov	w1, #0xc                   	// #12
      34:	bl	0 <ctf_set_errno>
      38:	b	5c <ctf_dump_append+0x5c>
      3c:	ldr	x0, [sp, #40]
      40:	ldr	x1, [sp, #16]
      44:	str	x1, [x0, #16]
      48:	ldr	x0, [sp, #24]
      4c:	add	x0, x0, #0x18
      50:	ldr	x1, [sp, #40]
      54:	bl	0 <ctf_list_append>
      58:	mov	w0, #0x0                   	// #0
      5c:	ldp	x29, x30, [sp], #48
      60:	ret

0000000000000064 <ctf_dump_free>:
      64:	stp	x29, x30, [sp, #-48]!
      68:	mov	x29, sp
      6c:	str	x0, [sp, #24]
      70:	ldr	x0, [sp, #24]
      74:	cmp	x0, #0x0
      78:	b.eq	c4 <ctf_dump_free+0x60>  // b.none
      7c:	ldr	x0, [sp, #24]
      80:	ldr	x0, [x0, #32]
      84:	str	x0, [sp, #40]
      88:	b	b4 <ctf_dump_free+0x50>
      8c:	ldr	x0, [sp, #40]
      90:	ldr	x0, [x0, #16]
      94:	bl	0 <free>
      98:	ldr	x0, [sp, #40]
      9c:	ldr	x0, [x0, #8]
      a0:	str	x0, [sp, #32]
      a4:	ldr	x0, [sp, #40]
      a8:	bl	0 <free>
      ac:	ldr	x0, [sp, #32]
      b0:	str	x0, [sp, #40]
      b4:	ldr	x0, [sp, #40]
      b8:	cmp	x0, #0x0
      bc:	b.ne	8c <ctf_dump_free+0x28>  // b.any
      c0:	b	c8 <ctf_dump_free+0x64>
      c4:	nop
      c8:	ldp	x29, x30, [sp], #48
      cc:	ret

00000000000000d0 <ctf_is_slice>:
      d0:	stp	x29, x30, [sp, #-64]!
      d4:	mov	x29, sp
      d8:	str	x0, [sp, #40]
      dc:	str	x1, [sp, #32]
      e0:	str	x2, [sp, #24]
      e4:	ldr	x1, [sp, #32]
      e8:	ldr	x0, [sp, #40]
      ec:	bl	0 <ctf_type_kind>
      f0:	str	w0, [sp, #60]
      f4:	ldr	w0, [sp, #60]
      f8:	cmp	w0, #0x1
      fc:	b.eq	118 <ctf_is_slice+0x48>  // b.none
     100:	ldr	w0, [sp, #60]
     104:	cmp	w0, #0x8
     108:	b.eq	118 <ctf_is_slice+0x48>  // b.none
     10c:	ldr	w0, [sp, #60]
     110:	cmp	w0, #0x2
     114:	b.ne	14c <ctf_is_slice+0x7c>  // b.any
     118:	ldr	x1, [sp, #32]
     11c:	ldr	x0, [sp, #40]
     120:	bl	0 <ctf_type_reference>
     124:	cmn	x0, #0x1
     128:	b.eq	14c <ctf_is_slice+0x7c>  // b.none
     12c:	ldr	x2, [sp, #24]
     130:	ldr	x1, [sp, #32]
     134:	ldr	x0, [sp, #40]
     138:	bl	0 <ctf_type_encoding>
     13c:	cmp	w0, #0x0
     140:	b.ne	14c <ctf_is_slice+0x7c>  // b.any
     144:	mov	w0, #0x1                   	// #1
     148:	b	150 <ctf_is_slice+0x80>
     14c:	mov	w0, #0x0                   	// #0
     150:	ldp	x29, x30, [sp], #64
     154:	ret

0000000000000158 <ctf_dump_format_type>:
     158:	stp	x29, x30, [sp, #-128]!
     15c:	mov	x29, sp
     160:	str	x19, [sp, #16]
     164:	str	x0, [sp, #56]
     168:	str	x1, [sp, #48]
     16c:	str	w2, [sp, #44]
     170:	str	xzr, [sp, #112]
     174:	str	xzr, [sp, #80]
     178:	str	xzr, [sp, #88]
     17c:	ldr	x0, [sp, #48]
     180:	str	x0, [sp, #120]
     184:	adrp	x0, 0 <ctf_dump_append>
     188:	add	x0, x0, #0x0
     18c:	str	x0, [sp, #104]
     190:	adrp	x0, 0 <ctf_dump_append>
     194:	add	x0, x0, #0x0
     198:	str	x0, [sp, #96]
     19c:	ldr	x0, [sp, #120]
     1a0:	str	x0, [sp, #48]
     1a4:	ldr	w0, [sp, #44]
     1a8:	cmp	w0, #0x0
     1ac:	b.ne	1c8 <ctf_dump_format_type+0x70>  // b.any
     1b0:	adrp	x0, 0 <ctf_dump_append>
     1b4:	add	x0, x0, #0x0
     1b8:	str	x0, [sp, #104]
     1bc:	adrp	x0, 0 <ctf_dump_append>
     1c0:	add	x0, x0, #0x0
     1c4:	str	x0, [sp, #96]
     1c8:	ldr	x1, [sp, #48]
     1cc:	ldr	x0, [sp, #56]
     1d0:	bl	0 <ctf_type_aname>
     1d4:	str	x0, [sp, #88]
     1d8:	ldr	x0, [sp, #88]
     1dc:	cmp	x0, #0x0
     1e0:	b.ne	224 <ctf_dump_format_type+0xcc>  // b.any
     1e4:	ldr	x0, [sp, #48]
     1e8:	cmp	x0, #0x0
     1ec:	b.eq	200 <ctf_dump_format_type+0xa8>  // b.none
     1f0:	ldr	x0, [sp, #56]
     1f4:	bl	0 <ctf_errno>
     1f8:	cmp	w0, #0x41b
     1fc:	b.ne	398 <ctf_dump_format_type+0x240>  // b.any
     200:	adrp	x0, 0 <ctf_dump_append>
     204:	add	x1, x0, #0x0
     208:	ldr	x0, [sp, #112]
     20c:	bl	0 <ctf_str_append_noerr>
     210:	str	x0, [sp, #112]
     214:	mov	w1, #0x400                 	// #1024
     218:	ldr	x0, [sp, #56]
     21c:	bl	0 <ctf_set_errno>
     220:	b	354 <ctf_dump_format_type+0x1fc>
     224:	add	x0, sp, #0x40
     228:	mov	x2, x0
     22c:	ldr	x1, [sp, #48]
     230:	ldr	x0, [sp, #56]
     234:	bl	d0 <ctf_is_slice>
     238:	cmp	w0, #0x0
     23c:	b.eq	290 <ctf_dump_format_type+0x138>  // b.none
     240:	add	x0, sp, #0x40
     244:	mov	x2, x0
     248:	ldr	x1, [sp, #48]
     24c:	ldr	x0, [sp, #56]
     250:	bl	0 <ctf_type_encoding>
     254:	ldr	w0, [sp, #68]
     258:	ldr	w1, [sp, #72]
     25c:	add	x7, sp, #0x50
     260:	ldr	x6, [sp, #96]
     264:	mov	w5, w1
     268:	mov	w4, w0
     26c:	ldr	x3, [sp, #48]
     270:	ldr	x2, [sp, #104]
     274:	adrp	x0, 0 <ctf_dump_append>
     278:	add	x1, x0, #0x0
     27c:	mov	x0, x7
     280:	bl	0 <asprintf>
     284:	cmp	w0, #0x0
     288:	b.ge	2ec <ctf_dump_format_type+0x194>  // b.tcont
     28c:	b	380 <ctf_dump_format_type+0x228>
     290:	ldr	x0, [sp, #88]
     294:	ldrb	w0, [x0]
     298:	cmp	w0, #0x0
     29c:	b.eq	2a8 <ctf_dump_format_type+0x150>  // b.none
     2a0:	ldr	x19, [sp, #88]
     2a4:	b	2b0 <ctf_dump_format_type+0x158>
     2a8:	adrp	x0, 0 <ctf_dump_append>
     2ac:	add	x19, x0, #0x0
     2b0:	ldr	x1, [sp, #48]
     2b4:	ldr	x0, [sp, #56]
     2b8:	bl	0 <ctf_type_size>
     2bc:	add	x7, sp, #0x50
     2c0:	ldr	x6, [sp, #96]
     2c4:	mov	x5, x0
     2c8:	mov	x4, x19
     2cc:	ldr	x3, [sp, #48]
     2d0:	ldr	x2, [sp, #104]
     2d4:	adrp	x0, 0 <ctf_dump_append>
     2d8:	add	x1, x0, #0x0
     2dc:	mov	x0, x7
     2e0:	bl	0 <asprintf>
     2e4:	cmp	w0, #0x0
     2e8:	b.lt	37c <ctf_dump_format_type+0x224>  // b.tstop
     2ec:	ldr	x0, [sp, #88]
     2f0:	bl	0 <free>
     2f4:	str	xzr, [sp, #88]
     2f8:	ldr	x0, [sp, #80]
     2fc:	mov	x1, x0
     300:	ldr	x0, [sp, #112]
     304:	bl	0 <ctf_str_append_noerr>
     308:	str	x0, [sp, #112]
     30c:	ldr	x0, [sp, #80]
     310:	bl	0 <free>
     314:	str	xzr, [sp, #80]
     318:	ldr	x1, [sp, #48]
     31c:	ldr	x0, [sp, #56]
     320:	bl	0 <ctf_type_reference>
     324:	str	x0, [sp, #120]
     328:	ldr	x0, [sp, #120]
     32c:	cmn	x0, #0x1
     330:	b.eq	348 <ctf_dump_format_type+0x1f0>  // b.none
     334:	adrp	x0, 0 <ctf_dump_append>
     338:	add	x1, x0, #0x0
     33c:	ldr	x0, [sp, #112]
     340:	bl	0 <ctf_str_append_noerr>
     344:	str	x0, [sp, #112]
     348:	ldr	x0, [sp, #120]
     34c:	cmn	x0, #0x1
     350:	b.ne	184 <ctf_dump_format_type+0x2c>  // b.any
     354:	ldr	x0, [sp, #56]
     358:	bl	0 <ctf_errno>
     35c:	cmp	w0, #0x400
     360:	b.eq	374 <ctf_dump_format_type+0x21c>  // b.none
     364:	ldr	x0, [sp, #112]
     368:	bl	0 <free>
     36c:	mov	x0, #0x0                   	// #0
     370:	b	3b8 <ctf_dump_format_type+0x260>
     374:	ldr	x0, [sp, #112]
     378:	b	3b8 <ctf_dump_format_type+0x260>
     37c:	nop
     380:	bl	0 <__errno_location>
     384:	ldr	w0, [x0]
     388:	mov	w1, w0
     38c:	ldr	x0, [sp, #56]
     390:	bl	0 <ctf_set_errno>
     394:	b	39c <ctf_dump_format_type+0x244>
     398:	nop
     39c:	ldr	x0, [sp, #88]
     3a0:	bl	0 <free>
     3a4:	ldr	x0, [sp, #112]
     3a8:	bl	0 <free>
     3ac:	ldr	x0, [sp, #80]
     3b0:	bl	0 <free>
     3b4:	mov	x0, #0x0                   	// #0
     3b8:	ldr	x19, [sp, #16]
     3bc:	ldp	x29, x30, [sp], #128
     3c0:	ret

00000000000003c4 <ctf_dump_header_strfield>:
     3c4:	stp	x29, x30, [sp, #-64]!
     3c8:	mov	x29, sp
     3cc:	str	x0, [sp, #40]
     3d0:	str	x1, [sp, #32]
     3d4:	str	x2, [sp, #24]
     3d8:	str	w3, [sp, #20]
     3dc:	ldr	w0, [sp, #20]
     3e0:	cmp	w0, #0x0
     3e4:	b.eq	428 <ctf_dump_header_strfield+0x64>  // b.none
     3e8:	ldr	w1, [sp, #20]
     3ec:	ldr	x0, [sp, #40]
     3f0:	bl	0 <ctf_strptr>
     3f4:	add	x4, sp, #0x38
     3f8:	mov	x3, x0
     3fc:	ldr	x2, [sp, #24]
     400:	adrp	x0, 0 <ctf_dump_append>
     404:	add	x1, x0, #0x0
     408:	mov	x0, x4
     40c:	bl	0 <asprintf>
     410:	cmp	w0, #0x0
     414:	b.lt	430 <ctf_dump_header_strfield+0x6c>  // b.tstop
     418:	ldr	x0, [sp, #56]
     41c:	mov	x1, x0
     420:	ldr	x0, [sp, #32]
     424:	bl	0 <ctf_dump_append>
     428:	mov	w0, #0x0                   	// #0
     42c:	b	448 <ctf_dump_header_strfield+0x84>
     430:	nop
     434:	bl	0 <__errno_location>
     438:	ldr	w0, [x0]
     43c:	mov	w1, w0
     440:	ldr	x0, [sp, #40]
     444:	bl	0 <ctf_set_errno>
     448:	ldp	x29, x30, [sp], #64
     44c:	ret

0000000000000450 <ctf_dump_header_sectfield>:
     450:	stp	x29, x30, [sp, #-64]!
     454:	mov	x29, sp
     458:	str	x0, [sp, #40]
     45c:	str	x1, [sp, #32]
     460:	str	x2, [sp, #24]
     464:	str	w3, [sp, #20]
     468:	str	w4, [sp, #16]
     46c:	ldr	w1, [sp, #16]
     470:	ldr	w0, [sp, #20]
     474:	cmp	w1, w0
     478:	b.eq	4d8 <ctf_dump_header_sectfield+0x88>  // b.none
     47c:	ldr	w2, [sp, #20]
     480:	ldr	w0, [sp, #16]
     484:	sub	w0, w0, #0x1
     488:	mov	w3, w0
     48c:	ldr	w1, [sp, #16]
     490:	ldr	w0, [sp, #20]
     494:	sub	w0, w1, w0
     498:	mov	w0, w0
     49c:	add	x6, sp, #0x38
     4a0:	mov	x5, x0
     4a4:	mov	x4, x3
     4a8:	mov	x3, x2
     4ac:	ldr	x2, [sp, #24]
     4b0:	adrp	x0, 0 <ctf_dump_append>
     4b4:	add	x1, x0, #0x0
     4b8:	mov	x0, x6
     4bc:	bl	0 <asprintf>
     4c0:	cmp	w0, #0x0
     4c4:	b.lt	4e0 <ctf_dump_header_sectfield+0x90>  // b.tstop
     4c8:	ldr	x0, [sp, #56]
     4cc:	mov	x1, x0
     4d0:	ldr	x0, [sp, #32]
     4d4:	bl	0 <ctf_dump_append>
     4d8:	mov	w0, #0x0                   	// #0
     4dc:	b	4f8 <ctf_dump_header_sectfield+0xa8>
     4e0:	nop
     4e4:	bl	0 <__errno_location>
     4e8:	ldr	w0, [x0]
     4ec:	mov	w1, w0
     4f0:	ldr	x0, [sp, #40]
     4f4:	bl	0 <ctf_set_errno>
     4f8:	ldp	x29, x30, [sp], #64
     4fc:	ret

0000000000000500 <ctf_dump_header>:
     500:	stp	x29, x30, [sp, #-112]!
     504:	mov	x29, sp
     508:	str	x0, [sp, #24]
     50c:	str	x1, [sp, #16]
     510:	ldr	x0, [sp, #24]
     514:	ldr	x0, [x0, #8]
     518:	str	x0, [sp, #96]
     51c:	adrp	x0, 0 <ctf_dump_append>
     520:	add	x1, x0, #0x0
     524:	add	x0, sp, #0x28
     528:	ldp	x2, x3, [x1]
     52c:	stp	x2, x3, [x0]
     530:	ldp	x2, x3, [x1, #16]
     534:	stp	x2, x3, [x0, #16]
     538:	ldp	x2, x3, [x1, #32]
     53c:	stp	x2, x3, [x0, #32]
     540:	str	xzr, [sp, #104]
     544:	ldr	x0, [sp, #96]
     548:	ldrh	w0, [x0]
     54c:	add	x3, sp, #0x58
     550:	mov	w2, w0
     554:	adrp	x0, 0 <ctf_dump_append>
     558:	add	x1, x0, #0x0
     55c:	mov	x0, x3
     560:	bl	0 <asprintf>
     564:	cmp	w0, #0x0
     568:	b.lt	84c <ctf_dump_header+0x34c>  // b.tstop
     56c:	ldr	x0, [sp, #88]
     570:	mov	x1, x0
     574:	ldr	x0, [sp, #16]
     578:	bl	0 <ctf_dump_append>
     57c:	ldr	x0, [sp, #96]
     580:	ldrb	w0, [x0, #2]
     584:	cmp	w0, #0x4
     588:	b.hi	5a8 <ctf_dump_header+0xa8>  // b.pmore
     58c:	ldr	x0, [sp, #96]
     590:	ldrb	w0, [x0, #2]
     594:	sxtw	x0, w0
     598:	lsl	x0, x0, #3
     59c:	add	x1, sp, #0x28
     5a0:	ldr	x0, [x1, x0]
     5a4:	str	x0, [sp, #104]
     5a8:	ldr	x0, [sp, #104]
     5ac:	cmp	x0, #0x0
     5b0:	b.ne	5c0 <ctf_dump_header+0xc0>  // b.any
     5b4:	adrp	x0, 0 <ctf_dump_append>
     5b8:	add	x0, x0, #0x0
     5bc:	str	x0, [sp, #104]
     5c0:	ldr	x0, [sp, #96]
     5c4:	ldrb	w0, [x0, #2]
     5c8:	add	x4, sp, #0x58
     5cc:	ldr	x3, [sp, #104]
     5d0:	mov	w2, w0
     5d4:	adrp	x0, 0 <ctf_dump_append>
     5d8:	add	x1, x0, #0x0
     5dc:	mov	x0, x4
     5e0:	bl	0 <asprintf>
     5e4:	cmp	w0, #0x0
     5e8:	b.lt	854 <ctf_dump_header+0x354>  // b.tstop
     5ec:	ldr	x0, [sp, #88]
     5f0:	mov	x1, x0
     5f4:	ldr	x0, [sp, #16]
     5f8:	bl	0 <ctf_dump_append>
     5fc:	ldr	x0, [sp, #24]
     600:	ldrb	w0, [x0, #16]
     604:	cmp	w0, #0x0
     608:	b.eq	684 <ctf_dump_header+0x184>  // b.none
     60c:	ldr	x0, [sp, #24]
     610:	ldrb	w0, [x0, #16]
     614:	cmp	w0, #0x0
     618:	b.eq	674 <ctf_dump_header+0x174>  // b.none
     61c:	ldr	x0, [sp, #24]
     620:	ldrb	w0, [x0, #16]
     624:	mov	w1, w0
     628:	ldr	x0, [sp, #24]
     62c:	ldrb	w0, [x0, #16]
     630:	and	w0, w0, #0x1
     634:	cmp	w0, #0x0
     638:	b.eq	648 <ctf_dump_header+0x148>  // b.none
     63c:	adrp	x0, 0 <ctf_dump_append>
     640:	add	x0, x0, #0x0
     644:	b	650 <ctf_dump_header+0x150>
     648:	adrp	x0, 0 <ctf_dump_append>
     64c:	add	x0, x0, #0x0
     650:	add	x4, sp, #0x58
     654:	mov	x3, x0
     658:	mov	w2, w1
     65c:	adrp	x0, 0 <ctf_dump_append>
     660:	add	x1, x0, #0x0
     664:	mov	x0, x4
     668:	bl	0 <asprintf>
     66c:	cmp	w0, #0x0
     670:	b.lt	85c <ctf_dump_header+0x35c>  // b.tstop
     674:	ldr	x0, [sp, #88]
     678:	mov	x1, x0
     67c:	ldr	x0, [sp, #16]
     680:	bl	0 <ctf_dump_append>
     684:	ldr	x0, [sp, #96]
     688:	ldr	w0, [x0, #4]
     68c:	mov	w3, w0
     690:	adrp	x0, 0 <ctf_dump_append>
     694:	add	x2, x0, #0x0
     698:	ldr	x1, [sp, #16]
     69c:	ldr	x0, [sp, #24]
     6a0:	bl	3c4 <ctf_dump_header_strfield>
     6a4:	cmp	w0, #0x0
     6a8:	b.lt	864 <ctf_dump_header+0x364>  // b.tstop
     6ac:	ldr	x0, [sp, #96]
     6b0:	ldr	w0, [x0, #8]
     6b4:	mov	w3, w0
     6b8:	adrp	x0, 0 <ctf_dump_append>
     6bc:	add	x2, x0, #0x0
     6c0:	ldr	x1, [sp, #16]
     6c4:	ldr	x0, [sp, #24]
     6c8:	bl	3c4 <ctf_dump_header_strfield>
     6cc:	cmp	w0, #0x0
     6d0:	b.lt	86c <ctf_dump_header+0x36c>  // b.tstop
     6d4:	ldr	x0, [sp, #96]
     6d8:	ldr	w0, [x0, #12]
     6dc:	mov	w3, w0
     6e0:	adrp	x0, 0 <ctf_dump_append>
     6e4:	add	x2, x0, #0x0
     6e8:	ldr	x1, [sp, #16]
     6ec:	ldr	x0, [sp, #24]
     6f0:	bl	3c4 <ctf_dump_header_strfield>
     6f4:	cmp	w0, #0x0
     6f8:	b.lt	874 <ctf_dump_header+0x374>  // b.tstop
     6fc:	ldr	x0, [sp, #96]
     700:	ldr	w1, [x0, #16]
     704:	ldr	x0, [sp, #96]
     708:	ldr	w0, [x0, #20]
     70c:	mov	w4, w0
     710:	mov	w3, w1
     714:	adrp	x0, 0 <ctf_dump_append>
     718:	add	x2, x0, #0x0
     71c:	ldr	x1, [sp, #16]
     720:	ldr	x0, [sp, #24]
     724:	bl	450 <ctf_dump_header_sectfield>
     728:	cmp	w0, #0x0
     72c:	b.lt	87c <ctf_dump_header+0x37c>  // b.tstop
     730:	ldr	x0, [sp, #96]
     734:	ldr	w1, [x0, #20]
     738:	ldr	x0, [sp, #96]
     73c:	ldr	w0, [x0, #24]
     740:	mov	w4, w0
     744:	mov	w3, w1
     748:	adrp	x0, 0 <ctf_dump_append>
     74c:	add	x2, x0, #0x0
     750:	ldr	x1, [sp, #16]
     754:	ldr	x0, [sp, #24]
     758:	bl	450 <ctf_dump_header_sectfield>
     75c:	cmp	w0, #0x0
     760:	b.lt	884 <ctf_dump_header+0x384>  // b.tstop
     764:	ldr	x0, [sp, #96]
     768:	ldr	w1, [x0, #24]
     76c:	ldr	x0, [sp, #96]
     770:	ldr	w0, [x0, #36]
     774:	mov	w4, w0
     778:	mov	w3, w1
     77c:	adrp	x0, 0 <ctf_dump_append>
     780:	add	x2, x0, #0x0
     784:	ldr	x1, [sp, #16]
     788:	ldr	x0, [sp, #24]
     78c:	bl	450 <ctf_dump_header_sectfield>
     790:	cmp	w0, #0x0
     794:	b.lt	88c <ctf_dump_header+0x38c>  // b.tstop
     798:	ldr	x0, [sp, #96]
     79c:	ldr	w1, [x0, #36]
     7a0:	ldr	x0, [sp, #96]
     7a4:	ldr	w0, [x0, #40]
     7a8:	mov	w4, w0
     7ac:	mov	w3, w1
     7b0:	adrp	x0, 0 <ctf_dump_append>
     7b4:	add	x2, x0, #0x0
     7b8:	ldr	x1, [sp, #16]
     7bc:	ldr	x0, [sp, #24]
     7c0:	bl	450 <ctf_dump_header_sectfield>
     7c4:	cmp	w0, #0x0
     7c8:	b.lt	894 <ctf_dump_header+0x394>  // b.tstop
     7cc:	ldr	x0, [sp, #96]
     7d0:	ldr	w1, [x0, #40]
     7d4:	ldr	x0, [sp, #96]
     7d8:	ldr	w0, [x0, #44]
     7dc:	mov	w4, w0
     7e0:	mov	w3, w1
     7e4:	adrp	x0, 0 <ctf_dump_append>
     7e8:	add	x2, x0, #0x0
     7ec:	ldr	x1, [sp, #16]
     7f0:	ldr	x0, [sp, #24]
     7f4:	bl	450 <ctf_dump_header_sectfield>
     7f8:	cmp	w0, #0x0
     7fc:	b.lt	89c <ctf_dump_header+0x39c>  // b.tstop
     800:	ldr	x0, [sp, #96]
     804:	ldr	w2, [x0, #44]
     808:	ldr	x0, [sp, #96]
     80c:	ldr	w1, [x0, #44]
     810:	ldr	x0, [sp, #96]
     814:	ldr	w0, [x0, #48]
     818:	add	w0, w1, w0
     81c:	add	w0, w0, #0x1
     820:	mov	w4, w0
     824:	mov	w3, w2
     828:	adrp	x0, 0 <ctf_dump_append>
     82c:	add	x2, x0, #0x0
     830:	ldr	x1, [sp, #16]
     834:	ldr	x0, [sp, #24]
     838:	bl	450 <ctf_dump_header_sectfield>
     83c:	cmp	w0, #0x0
     840:	b.lt	8a4 <ctf_dump_header+0x3a4>  // b.tstop
     844:	mov	w0, #0x0                   	// #0
     848:	b	8bc <ctf_dump_header+0x3bc>
     84c:	nop
     850:	b	8a8 <ctf_dump_header+0x3a8>
     854:	nop
     858:	b	8a8 <ctf_dump_header+0x3a8>
     85c:	nop
     860:	b	8a8 <ctf_dump_header+0x3a8>
     864:	nop
     868:	b	8a8 <ctf_dump_header+0x3a8>
     86c:	nop
     870:	b	8a8 <ctf_dump_header+0x3a8>
     874:	nop
     878:	b	8a8 <ctf_dump_header+0x3a8>
     87c:	nop
     880:	b	8a8 <ctf_dump_header+0x3a8>
     884:	nop
     888:	b	8a8 <ctf_dump_header+0x3a8>
     88c:	nop
     890:	b	8a8 <ctf_dump_header+0x3a8>
     894:	nop
     898:	b	8a8 <ctf_dump_header+0x3a8>
     89c:	nop
     8a0:	b	8a8 <ctf_dump_header+0x3a8>
     8a4:	nop
     8a8:	bl	0 <__errno_location>
     8ac:	ldr	w0, [x0]
     8b0:	mov	w1, w0
     8b4:	ldr	x0, [sp, #24]
     8b8:	bl	0 <ctf_set_errno>
     8bc:	ldp	x29, x30, [sp], #112
     8c0:	ret

00000000000008c4 <ctf_dump_label>:
     8c4:	stp	x29, x30, [sp, #-96]!
     8c8:	mov	x29, sp
     8cc:	str	x19, [sp, #16]
     8d0:	str	x0, [sp, #56]
     8d4:	str	x1, [sp, #48]
     8d8:	str	x2, [sp, #40]
     8dc:	ldr	x0, [sp, #40]
     8e0:	str	x0, [sp, #88]
     8e4:	add	x3, sp, #0x48
     8e8:	ldr	x2, [sp, #56]
     8ec:	adrp	x0, 0 <ctf_dump_append>
     8f0:	add	x1, x0, #0x0
     8f4:	mov	x0, x3
     8f8:	bl	0 <asprintf>
     8fc:	cmp	w0, #0x0
     900:	b.ge	924 <ctf_dump_label+0x60>  // b.tcont
     904:	ldr	x0, [sp, #88]
     908:	ldr	x19, [x0, #8]
     90c:	bl	0 <__errno_location>
     910:	ldr	w0, [x0]
     914:	mov	w1, w0
     918:	mov	x0, x19
     91c:	bl	0 <ctf_set_errno>
     920:	b	990 <ctf_dump_label+0xcc>
     924:	ldr	x0, [sp, #88]
     928:	ldr	x3, [x0, #8]
     92c:	ldr	x0, [sp, #48]
     930:	ldr	x0, [x0]
     934:	mov	w2, #0x1                   	// #1
     938:	mov	x1, x0
     93c:	mov	x0, x3
     940:	bl	158 <ctf_dump_format_type>
     944:	str	x0, [sp, #80]
     948:	ldr	x0, [sp, #80]
     94c:	cmp	x0, #0x0
     950:	b.ne	964 <ctf_dump_label+0xa0>  // b.any
     954:	ldr	x0, [sp, #72]
     958:	bl	0 <free>
     95c:	mov	w0, #0xffffffff            	// #-1
     960:	b	990 <ctf_dump_label+0xcc>
     964:	ldr	x0, [sp, #72]
     968:	ldr	x1, [sp, #80]
     96c:	bl	0 <ctf_str_append_noerr>
     970:	str	x0, [sp, #72]
     974:	ldr	x0, [sp, #80]
     978:	bl	0 <free>
     97c:	ldr	x0, [sp, #72]
     980:	mov	x1, x0
     984:	ldr	x0, [sp, #88]
     988:	bl	0 <ctf_dump_append>
     98c:	mov	w0, #0x0                   	// #0
     990:	ldr	x19, [sp, #16]
     994:	ldp	x29, x30, [sp], #96
     998:	ret

000000000000099c <ctf_dump_objts>:
     99c:	stp	x29, x30, [sp, #-80]!
     9a0:	mov	x29, sp
     9a4:	str	x0, [sp, #24]
     9a8:	str	x1, [sp, #16]
     9ac:	str	xzr, [sp, #72]
     9b0:	b	b04 <ctf_dump_objts+0x168>
     9b4:	ldr	x0, [sp, #16]
     9b8:	ldr	x0, [x0, #8]
     9bc:	ldr	x1, [sp, #72]
     9c0:	bl	0 <ctf_lookup_by_symbol>
     9c4:	str	x0, [sp, #64]
     9c8:	ldr	x0, [sp, #64]
     9cc:	cmn	x0, #0x1
     9d0:	b.ne	a08 <ctf_dump_objts+0x6c>  // b.any
     9d4:	ldr	x0, [sp, #16]
     9d8:	ldr	x0, [x0, #8]
     9dc:	bl	0 <ctf_errno>
     9e0:	cmp	w0, #0x3f2
     9e4:	b.eq	a00 <ctf_dump_objts+0x64>  // b.none
     9e8:	cmp	w0, #0x3f2
     9ec:	b.lt	a08 <ctf_dump_objts+0x6c>  // b.tstop
     9f0:	sub	w0, w0, #0x406
     9f4:	cmp	w0, #0x1
     9f8:	b.hi	a08 <ctf_dump_objts+0x6c>  // b.pmore
     9fc:	b	af8 <ctf_dump_objts+0x15c>
     a00:	mov	w0, #0xffffffff            	// #-1
     a04:	b	b1c <ctf_dump_objts+0x180>
     a08:	ldr	x1, [sp, #72]
     a0c:	ldr	x0, [sp, #24]
     a10:	bl	0 <ctf_lookup_symbol_name>
     a14:	str	x0, [sp, #56]
     a18:	ldr	x0, [sp, #56]
     a1c:	ldrb	w0, [x0]
     a20:	cmp	w0, #0x0
     a24:	b.ne	a60 <ctf_dump_objts+0xc4>  // b.any
     a28:	add	x3, sp, #0x28
     a2c:	ldr	x2, [sp, #72]
     a30:	adrp	x0, 0 <ctf_dump_append>
     a34:	add	x1, x0, #0x0
     a38:	mov	x0, x3
     a3c:	bl	0 <asprintf>
     a40:	cmp	w0, #0x0
     a44:	b.ge	a9c <ctf_dump_objts+0x100>  // b.tcont
     a48:	bl	0 <__errno_location>
     a4c:	ldr	w0, [x0]
     a50:	mov	w1, w0
     a54:	ldr	x0, [sp, #24]
     a58:	bl	0 <ctf_set_errno>
     a5c:	b	b1c <ctf_dump_objts+0x180>
     a60:	add	x4, sp, #0x28
     a64:	ldr	x3, [sp, #72]
     a68:	ldr	x2, [sp, #56]
     a6c:	adrp	x0, 0 <ctf_dump_append>
     a70:	add	x1, x0, #0x0
     a74:	mov	x0, x4
     a78:	bl	0 <asprintf>
     a7c:	cmp	w0, #0x0
     a80:	b.ge	a9c <ctf_dump_objts+0x100>  // b.tcont
     a84:	bl	0 <__errno_location>
     a88:	ldr	w0, [x0]
     a8c:	mov	w1, w0
     a90:	ldr	x0, [sp, #24]
     a94:	bl	0 <ctf_set_errno>
     a98:	b	b1c <ctf_dump_objts+0x180>
     a9c:	ldr	x0, [sp, #16]
     aa0:	ldr	x0, [x0, #8]
     aa4:	mov	w2, #0x1                   	// #1
     aa8:	ldr	x1, [sp, #64]
     aac:	bl	158 <ctf_dump_format_type>
     ab0:	str	x0, [sp, #48]
     ab4:	ldr	x0, [sp, #48]
     ab8:	cmp	x0, #0x0
     abc:	b.ne	ad0 <ctf_dump_objts+0x134>  // b.any
     ac0:	ldr	x0, [sp, #40]
     ac4:	bl	0 <free>
     ac8:	mov	w0, #0xffffffff            	// #-1
     acc:	b	b1c <ctf_dump_objts+0x180>
     ad0:	ldr	x0, [sp, #40]
     ad4:	ldr	x1, [sp, #48]
     ad8:	bl	0 <ctf_str_append_noerr>
     adc:	str	x0, [sp, #40]
     ae0:	ldr	x0, [sp, #48]
     ae4:	bl	0 <free>
     ae8:	ldr	x0, [sp, #40]
     aec:	mov	x1, x0
     af0:	ldr	x0, [sp, #16]
     af4:	bl	0 <ctf_dump_append>
     af8:	ldr	x0, [sp, #72]
     afc:	add	x0, x0, #0x1
     b00:	str	x0, [sp, #72]
     b04:	ldr	x0, [sp, #24]
     b08:	ldr	x0, [x0, #432]
     b0c:	ldr	x1, [sp, #72]
     b10:	cmp	x1, x0
     b14:	b.cc	9b4 <ctf_dump_objts+0x18>  // b.lo, b.ul, b.last
     b18:	mov	w0, #0x0                   	// #0
     b1c:	ldp	x29, x30, [sp], #80
     b20:	ret

0000000000000b24 <ctf_dump_funcs>:
     b24:	stp	x29, x30, [sp, #-112]!
     b28:	mov	x29, sp
     b2c:	str	x0, [sp, #24]
     b30:	str	x1, [sp, #16]
     b34:	str	xzr, [sp, #104]
     b38:	b	e6c <ctf_dump_funcs+0x348>
     b3c:	ldr	x0, [sp, #16]
     b40:	ldr	x0, [x0, #8]
     b44:	add	x1, sp, #0x20
     b48:	mov	x2, x1
     b4c:	ldr	x1, [sp, #104]
     b50:	bl	0 <ctf_func_info>
     b54:	sxtw	x0, w0
     b58:	str	x0, [sp, #72]
     b5c:	ldr	x0, [sp, #72]
     b60:	cmn	x0, #0x1
     b64:	b.ne	b9c <ctf_dump_funcs+0x78>  // b.any
     b68:	ldr	x0, [sp, #16]
     b6c:	ldr	x0, [x0, #8]
     b70:	bl	0 <ctf_errno>
     b74:	cmp	w0, #0x3f2
     b78:	b.eq	b94 <ctf_dump_funcs+0x70>  // b.none
     b7c:	cmp	w0, #0x3f2
     b80:	b.lt	b9c <ctf_dump_funcs+0x78>  // b.tstop
     b84:	sub	w0, w0, #0x404
     b88:	cmp	w0, #0x2
     b8c:	b.hi	b9c <ctf_dump_funcs+0x78>  // b.pmore
     b90:	b	e60 <ctf_dump_funcs+0x33c>
     b94:	mov	w0, #0xffffffff            	// #-1
     b98:	b	e84 <ctf_dump_funcs+0x360>
     b9c:	ldr	w0, [sp, #40]
     ba0:	mov	w0, w0
     ba4:	mov	x1, #0x8                   	// #8
     ba8:	bl	0 <calloc>
     bac:	str	x0, [sp, #64]
     bb0:	ldr	x0, [sp, #64]
     bb4:	cmp	x0, #0x0
     bb8:	b.ne	bcc <ctf_dump_funcs+0xa8>  // b.any
     bbc:	mov	w1, #0xc                   	// #12
     bc0:	ldr	x0, [sp, #24]
     bc4:	bl	0 <ctf_set_errno>
     bc8:	b	e84 <ctf_dump_funcs+0x360>
     bcc:	ldr	x0, [sp, #16]
     bd0:	ldr	x0, [x0, #8]
     bd4:	ldr	x1, [sp, #72]
     bd8:	bl	0 <ctf_type_aname>
     bdc:	str	x0, [sp, #96]
     be0:	ldr	x0, [sp, #96]
     be4:	cmp	x0, #0x0
     be8:	b.ne	bfc <ctf_dump_funcs+0xd8>  // b.any
     bec:	adrp	x0, 0 <ctf_dump_append>
     bf0:	add	x0, x0, #0x0
     bf4:	str	x0, [sp, #88]
     bf8:	b	e20 <ctf_dump_funcs+0x2fc>
     bfc:	adrp	x0, 0 <ctf_dump_append>
     c00:	add	x1, x0, #0x0
     c04:	ldr	x0, [sp, #96]
     c08:	bl	0 <ctf_str_append_noerr>
     c0c:	str	x0, [sp, #96]
     c10:	ldr	x1, [sp, #104]
     c14:	ldr	x0, [sp, #24]
     c18:	bl	0 <ctf_lookup_symbol_name>
     c1c:	str	x0, [sp, #56]
     c20:	ldr	x0, [sp, #56]
     c24:	ldrb	w0, [x0]
     c28:	cmp	w0, #0x0
     c2c:	b.ne	c54 <ctf_dump_funcs+0x130>  // b.any
     c30:	add	x3, sp, #0x30
     c34:	ldr	x2, [sp, #104]
     c38:	adrp	x0, 0 <ctf_dump_append>
     c3c:	add	x1, x0, #0x0
     c40:	mov	x0, x3
     c44:	bl	0 <asprintf>
     c48:	cmp	w0, #0x0
     c4c:	b.ge	c78 <ctf_dump_funcs+0x154>  // b.tcont
     c50:	b	df8 <ctf_dump_funcs+0x2d4>
     c54:	add	x4, sp, #0x30
     c58:	ldr	x3, [sp, #104]
     c5c:	ldr	x2, [sp, #56]
     c60:	adrp	x0, 0 <ctf_dump_append>
     c64:	add	x1, x0, #0x0
     c68:	mov	x0, x4
     c6c:	bl	0 <asprintf>
     c70:	cmp	w0, #0x0
     c74:	b.lt	df4 <ctf_dump_funcs+0x2d0>  // b.tstop
     c78:	ldr	x0, [sp, #48]
     c7c:	mov	x1, x0
     c80:	ldr	x0, [sp, #96]
     c84:	bl	0 <ctf_str_append_noerr>
     c88:	str	x0, [sp, #96]
     c8c:	adrp	x0, 0 <ctf_dump_append>
     c90:	add	x1, x0, #0x0
     c94:	ldr	x0, [sp, #96]
     c98:	bl	0 <ctf_str_append_noerr>
     c9c:	str	x0, [sp, #96]
     ca0:	ldr	x0, [sp, #48]
     ca4:	bl	0 <free>
     ca8:	ldr	x0, [sp, #16]
     cac:	ldr	x0, [x0, #8]
     cb0:	ldr	w1, [sp, #40]
     cb4:	ldr	x3, [sp, #64]
     cb8:	mov	w2, w1
     cbc:	ldr	x1, [sp, #104]
     cc0:	bl	0 <ctf_func_args>
     cc4:	cmp	w0, #0x0
     cc8:	b.ge	cdc <ctf_dump_funcs+0x1b8>  // b.tcont
     ccc:	adrp	x0, 0 <ctf_dump_append>
     cd0:	add	x0, x0, #0x0
     cd4:	str	x0, [sp, #88]
     cd8:	b	e20 <ctf_dump_funcs+0x2fc>
     cdc:	str	xzr, [sp, #80]
     ce0:	b	d90 <ctf_dump_funcs+0x26c>
     ce4:	ldr	x0, [sp, #16]
     ce8:	ldr	x2, [x0, #8]
     cec:	ldr	x0, [sp, #80]
     cf0:	lsl	x0, x0, #3
     cf4:	ldr	x1, [sp, #64]
     cf8:	add	x0, x1, x0
     cfc:	ldr	x0, [x0]
     d00:	mov	x1, x0
     d04:	mov	x0, x2
     d08:	bl	0 <ctf_type_aname>
     d0c:	str	x0, [sp, #48]
     d10:	ldr	x0, [sp, #48]
     d14:	cmp	x0, #0x0
     d18:	b.ne	d2c <ctf_dump_funcs+0x208>  // b.any
     d1c:	adrp	x0, 0 <ctf_dump_append>
     d20:	add	x0, x0, #0x0
     d24:	str	x0, [sp, #88]
     d28:	b	e20 <ctf_dump_funcs+0x2fc>
     d2c:	ldr	x0, [sp, #48]
     d30:	mov	x1, x0
     d34:	ldr	x0, [sp, #96]
     d38:	bl	0 <ctf_str_append_noerr>
     d3c:	str	x0, [sp, #96]
     d40:	ldr	w0, [sp, #40]
     d44:	sub	w0, w0, #0x1
     d48:	mov	w0, w0
     d4c:	ldr	x1, [sp, #80]
     d50:	cmp	x1, x0
     d54:	b.cc	d68 <ctf_dump_funcs+0x244>  // b.lo, b.ul, b.last
     d58:	ldr	w0, [sp, #44]
     d5c:	and	w0, w0, #0x1
     d60:	cmp	w0, #0x0
     d64:	b.eq	d7c <ctf_dump_funcs+0x258>  // b.none
     d68:	adrp	x0, 0 <ctf_dump_append>
     d6c:	add	x1, x0, #0x0
     d70:	ldr	x0, [sp, #96]
     d74:	bl	0 <ctf_str_append_noerr>
     d78:	str	x0, [sp, #96]
     d7c:	ldr	x0, [sp, #48]
     d80:	bl	0 <free>
     d84:	ldr	x0, [sp, #80]
     d88:	add	x0, x0, #0x1
     d8c:	str	x0, [sp, #80]
     d90:	ldr	w0, [sp, #40]
     d94:	mov	w0, w0
     d98:	ldr	x1, [sp, #80]
     d9c:	cmp	x1, x0
     da0:	b.cc	ce4 <ctf_dump_funcs+0x1c0>  // b.lo, b.ul, b.last
     da4:	ldr	w0, [sp, #44]
     da8:	and	w0, w0, #0x1
     dac:	cmp	w0, #0x0
     db0:	b.eq	dc8 <ctf_dump_funcs+0x2a4>  // b.none
     db4:	adrp	x0, 0 <ctf_dump_append>
     db8:	add	x1, x0, #0x0
     dbc:	ldr	x0, [sp, #96]
     dc0:	bl	0 <ctf_str_append_noerr>
     dc4:	str	x0, [sp, #96]
     dc8:	adrp	x0, 0 <ctf_dump_append>
     dcc:	add	x1, x0, #0x0
     dd0:	ldr	x0, [sp, #96]
     dd4:	bl	0 <ctf_str_append_noerr>
     dd8:	str	x0, [sp, #96]
     ddc:	ldr	x0, [sp, #64]
     de0:	bl	0 <free>
     de4:	ldr	x1, [sp, #96]
     de8:	ldr	x0, [sp, #16]
     dec:	bl	0 <ctf_dump_append>
     df0:	b	e60 <ctf_dump_funcs+0x33c>
     df4:	nop
     df8:	ldr	x0, [sp, #64]
     dfc:	bl	0 <free>
     e00:	ldr	x0, [sp, #96]
     e04:	bl	0 <free>
     e08:	bl	0 <__errno_location>
     e0c:	ldr	w0, [x0]
     e10:	mov	w1, w0
     e14:	ldr	x0, [sp, #24]
     e18:	bl	0 <ctf_set_errno>
     e1c:	b	e84 <ctf_dump_funcs+0x360>
     e20:	ldr	x0, [sp, #16]
     e24:	ldr	x0, [x0, #8]
     e28:	bl	0 <ctf_errno>
     e2c:	bl	0 <ctf_errmsg>
     e30:	mov	x3, x0
     e34:	ldr	x2, [sp, #104]
     e38:	ldr	x1, [sp, #88]
     e3c:	adrp	x0, 0 <ctf_dump_append>
     e40:	add	x0, x0, #0x0
     e44:	bl	0 <ctf_dprintf>
     e48:	ldr	x0, [sp, #64]
     e4c:	bl	0 <free>
     e50:	ldr	x0, [sp, #96]
     e54:	bl	0 <free>
     e58:	mov	w0, #0xffffffff            	// #-1
     e5c:	b	e84 <ctf_dump_funcs+0x360>
     e60:	ldr	x0, [sp, #104]
     e64:	add	x0, x0, #0x1
     e68:	str	x0, [sp, #104]
     e6c:	ldr	x0, [sp, #24]
     e70:	ldr	x0, [x0, #432]
     e74:	ldr	x1, [sp, #104]
     e78:	cmp	x1, x0
     e7c:	b.cc	b3c <ctf_dump_funcs+0x18>  // b.lo, b.ul, b.last
     e80:	mov	w0, #0x0                   	// #0
     e84:	ldp	x29, x30, [sp], #112
     e88:	ret

0000000000000e8c <ctf_dump_var>:
     e8c:	stp	x29, x30, [sp, #-96]!
     e90:	mov	x29, sp
     e94:	str	x19, [sp, #16]
     e98:	str	x0, [sp, #56]
     e9c:	str	x1, [sp, #48]
     ea0:	str	x2, [sp, #40]
     ea4:	ldr	x0, [sp, #40]
     ea8:	str	x0, [sp, #88]
     eac:	add	x3, sp, #0x48
     eb0:	ldr	x2, [sp, #56]
     eb4:	adrp	x0, 0 <ctf_dump_append>
     eb8:	add	x1, x0, #0x0
     ebc:	mov	x0, x3
     ec0:	bl	0 <asprintf>
     ec4:	cmp	w0, #0x0
     ec8:	b.ge	eec <ctf_dump_var+0x60>  // b.tcont
     ecc:	ldr	x0, [sp, #88]
     ed0:	ldr	x19, [x0, #8]
     ed4:	bl	0 <__errno_location>
     ed8:	ldr	w0, [x0]
     edc:	mov	w1, w0
     ee0:	mov	x0, x19
     ee4:	bl	0 <ctf_set_errno>
     ee8:	b	f4c <ctf_dump_var+0xc0>
     eec:	ldr	x0, [sp, #88]
     ef0:	ldr	x0, [x0, #8]
     ef4:	mov	w2, #0x1                   	// #1
     ef8:	ldr	x1, [sp, #48]
     efc:	bl	158 <ctf_dump_format_type>
     f00:	str	x0, [sp, #80]
     f04:	ldr	x0, [sp, #80]
     f08:	cmp	x0, #0x0
     f0c:	b.ne	f20 <ctf_dump_var+0x94>  // b.any
     f10:	ldr	x0, [sp, #72]
     f14:	bl	0 <free>
     f18:	mov	w0, #0xffffffff            	// #-1
     f1c:	b	f4c <ctf_dump_var+0xc0>
     f20:	ldr	x0, [sp, #72]
     f24:	ldr	x1, [sp, #80]
     f28:	bl	0 <ctf_str_append_noerr>
     f2c:	str	x0, [sp, #72]
     f30:	ldr	x0, [sp, #80]
     f34:	bl	0 <free>
     f38:	ldr	x0, [sp, #72]
     f3c:	mov	x1, x0
     f40:	ldr	x0, [sp, #88]
     f44:	bl	0 <ctf_dump_append>
     f48:	mov	w0, #0x0                   	// #0
     f4c:	ldr	x19, [sp, #16]
     f50:	ldp	x29, x30, [sp], #96
     f54:	ret

0000000000000f58 <ctf_dump_member>:
     f58:	stp	x29, x30, [sp, #-128]!
     f5c:	mov	x29, sp
     f60:	str	x19, [sp, #16]
     f64:	str	x0, [sp, #72]
     f68:	str	x1, [sp, #64]
     f6c:	str	x2, [sp, #56]
     f70:	str	w3, [sp, #52]
     f74:	str	x4, [sp, #40]
     f78:	ldr	x0, [sp, #40]
     f7c:	str	x0, [sp, #104]
     f80:	str	xzr, [sp, #120]
     f84:	str	xzr, [sp, #96]
     f88:	str	xzr, [sp, #112]
     f8c:	b	fc4 <ctf_dump_member+0x6c>
     f90:	ldr	x0, [sp, #104]
     f94:	ldr	x0, [x0]
     f98:	ldr	x2, [x0]
     f9c:	ldr	x0, [sp, #104]
     fa0:	ldr	x19, [x0]
     fa4:	adrp	x0, 0 <ctf_dump_append>
     fa8:	add	x1, x0, #0x0
     fac:	mov	x0, x2
     fb0:	bl	0 <ctf_str_append_noerr>
     fb4:	str	x0, [x19]
     fb8:	ldr	x0, [sp, #112]
     fbc:	add	x0, x0, #0x1
     fc0:	str	x0, [sp, #112]
     fc4:	ldrsw	x0, [sp, #52]
     fc8:	ldr	x1, [sp, #112]
     fcc:	cmp	x1, x0
     fd0:	b.lt	f90 <ctf_dump_member+0x38>  // b.tstop
     fd4:	ldr	x0, [sp, #104]
     fd8:	ldr	x0, [x0, #8]
     fdc:	ldr	x1, [sp, #64]
     fe0:	bl	0 <ctf_type_aname>
     fe4:	str	x0, [sp, #120]
     fe8:	ldr	x0, [sp, #120]
     fec:	cmp	x0, #0x0
     ff0:	b.ne	1070 <ctf_dump_member+0x118>  // b.any
     ff4:	ldr	x0, [sp, #64]
     ff8:	cmp	x0, #0x0
     ffc:	b.eq	1014 <ctf_dump_member+0xbc>  // b.none
    1000:	ldr	x0, [sp, #104]
    1004:	ldr	x0, [x0, #8]
    1008:	bl	0 <ctf_errno>
    100c:	cmp	w0, #0x41b
    1010:	b.ne	1200 <ctf_dump_member+0x2a8>  // b.any
    1014:	add	x3, sp, #0x60
    1018:	ldr	x2, [sp, #56]
    101c:	adrp	x0, 0 <ctf_dump_append>
    1020:	add	x1, x0, #0x0
    1024:	mov	x0, x3
    1028:	bl	0 <asprintf>
    102c:	cmp	w0, #0x0
    1030:	b.lt	1208 <ctf_dump_member+0x2b0>  // b.tstop
    1034:	ldr	x0, [sp, #104]
    1038:	ldr	x0, [x0]
    103c:	ldr	x2, [x0]
    1040:	ldr	x1, [sp, #96]
    1044:	ldr	x0, [sp, #104]
    1048:	ldr	x19, [x0]
    104c:	mov	x0, x2
    1050:	bl	0 <ctf_str_append_noerr>
    1054:	str	x0, [x19]
    1058:	ldr	x0, [sp, #120]
    105c:	bl	0 <free>
    1060:	ldr	x0, [sp, #96]
    1064:	bl	0 <free>
    1068:	mov	w0, #0x0                   	// #0
    106c:	b	1248 <ctf_dump_member+0x2f0>
    1070:	ldr	x0, [sp, #104]
    1074:	ldr	x0, [x0, #8]
    1078:	ldr	x1, [sp, #64]
    107c:	bl	0 <ctf_type_kind>
    1080:	mov	w19, w0
    1084:	ldr	x0, [sp, #104]
    1088:	ldr	x0, [x0, #8]
    108c:	ldr	x1, [sp, #64]
    1090:	bl	0 <ctf_type_align>
    1094:	add	x8, sp, #0x60
    1098:	mov	x7, x0
    109c:	ldr	x6, [sp, #72]
    10a0:	ldr	x5, [sp, #120]
    10a4:	mov	w4, w19
    10a8:	ldr	x3, [sp, #64]
    10ac:	ldr	x2, [sp, #56]
    10b0:	adrp	x0, 0 <ctf_dump_append>
    10b4:	add	x1, x0, #0x0
    10b8:	mov	x0, x8
    10bc:	bl	0 <asprintf>
    10c0:	cmp	w0, #0x0
    10c4:	b.lt	1210 <ctf_dump_member+0x2b8>  // b.tstop
    10c8:	ldr	x0, [sp, #104]
    10cc:	ldr	x0, [x0]
    10d0:	ldr	x2, [x0]
    10d4:	ldr	x1, [sp, #96]
    10d8:	ldr	x0, [sp, #104]
    10dc:	ldr	x19, [x0]
    10e0:	mov	x0, x2
    10e4:	bl	0 <ctf_str_append_noerr>
    10e8:	str	x0, [x19]
    10ec:	ldr	x0, [sp, #120]
    10f0:	bl	0 <free>
    10f4:	ldr	x0, [sp, #96]
    10f8:	bl	0 <free>
    10fc:	str	xzr, [sp, #120]
    1100:	str	xzr, [sp, #96]
    1104:	ldr	x0, [sp, #104]
    1108:	ldr	x0, [x0, #8]
    110c:	ldr	x1, [sp, #64]
    1110:	bl	0 <ctf_type_kind>
    1114:	cmp	w0, #0x1
    1118:	b.eq	1154 <ctf_dump_member+0x1fc>  // b.none
    111c:	ldr	x0, [sp, #104]
    1120:	ldr	x0, [x0, #8]
    1124:	ldr	x1, [sp, #64]
    1128:	bl	0 <ctf_type_kind>
    112c:	cmp	w0, #0x2
    1130:	b.eq	1154 <ctf_dump_member+0x1fc>  // b.none
    1134:	ldr	x0, [sp, #104]
    1138:	ldr	x0, [x0, #8]
    113c:	add	x1, sp, #0x50
    1140:	mov	x2, x1
    1144:	ldr	x1, [sp, #64]
    1148:	bl	d0 <ctf_is_slice>
    114c:	cmp	w0, #0x8
    1150:	b.ne	11d0 <ctf_dump_member+0x278>  // b.any
    1154:	ldr	x0, [sp, #104]
    1158:	ldr	x0, [x0, #8]
    115c:	add	x1, sp, #0x50
    1160:	mov	x2, x1
    1164:	ldr	x1, [sp, #64]
    1168:	bl	0 <ctf_type_encoding>
    116c:	ldr	w0, [sp, #80]
    1170:	ldr	w1, [sp, #84]
    1174:	ldr	w2, [sp, #88]
    1178:	add	x5, sp, #0x60
    117c:	mov	w4, w2
    1180:	mov	w3, w1
    1184:	mov	w2, w0
    1188:	adrp	x0, 0 <ctf_dump_append>
    118c:	add	x1, x0, #0x0
    1190:	mov	x0, x5
    1194:	bl	0 <asprintf>
    1198:	cmp	w0, #0x0
    119c:	b.lt	1218 <ctf_dump_member+0x2c0>  // b.tstop
    11a0:	ldr	x0, [sp, #104]
    11a4:	ldr	x0, [x0]
    11a8:	ldr	x2, [x0]
    11ac:	ldr	x1, [sp, #96]
    11b0:	ldr	x0, [sp, #104]
    11b4:	ldr	x19, [x0]
    11b8:	mov	x0, x2
    11bc:	bl	0 <ctf_str_append_noerr>
    11c0:	str	x0, [x19]
    11c4:	ldr	x0, [sp, #96]
    11c8:	bl	0 <free>
    11cc:	str	xzr, [sp, #96]
    11d0:	ldr	x0, [sp, #104]
    11d4:	ldr	x0, [x0]
    11d8:	ldr	x2, [x0]
    11dc:	ldr	x0, [sp, #104]
    11e0:	ldr	x19, [x0]
    11e4:	adrp	x0, 0 <ctf_dump_append>
    11e8:	add	x1, x0, #0x0
    11ec:	mov	x0, x2
    11f0:	bl	0 <ctf_str_append_noerr>
    11f4:	str	x0, [x19]
    11f8:	mov	w0, #0x0                   	// #0
    11fc:	b	1248 <ctf_dump_member+0x2f0>
    1200:	nop
    1204:	b	121c <ctf_dump_member+0x2c4>
    1208:	nop
    120c:	b	121c <ctf_dump_member+0x2c4>
    1210:	nop
    1214:	b	121c <ctf_dump_member+0x2c4>
    1218:	nop
    121c:	ldr	x0, [sp, #120]
    1220:	bl	0 <free>
    1224:	ldr	x0, [sp, #96]
    1228:	bl	0 <free>
    122c:	ldr	x0, [sp, #104]
    1230:	ldr	x19, [x0, #8]
    1234:	bl	0 <__errno_location>
    1238:	ldr	w0, [x0]
    123c:	mov	w1, w0
    1240:	mov	x0, x19
    1244:	bl	0 <ctf_set_errno>
    1248:	ldr	x19, [sp, #16]
    124c:	ldp	x29, x30, [sp], #128
    1250:	ret

0000000000001254 <ctf_dump_type>:
    1254:	stp	x29, x30, [sp, #-96]!
    1258:	mov	x29, sp
    125c:	str	x0, [sp, #40]
    1260:	str	w1, [sp, #36]
    1264:	str	x2, [sp, #24]
    1268:	ldr	x0, [sp, #24]
    126c:	str	x0, [sp, #80]
    1270:	add	x0, sp, #0x40
    1274:	str	x0, [sp, #48]
    1278:	ldr	x0, [sp, #80]
    127c:	ldr	x0, [x0, #8]
    1280:	str	x0, [sp, #56]
    1284:	ldr	x0, [sp, #80]
    1288:	ldr	x0, [x0, #8]
    128c:	ldr	w2, [sp, #36]
    1290:	ldr	x1, [sp, #40]
    1294:	bl	158 <ctf_dump_format_type>
    1298:	str	x0, [sp, #64]
    129c:	ldr	x0, [sp, #64]
    12a0:	cmp	x0, #0x0
    12a4:	b.ne	12b8 <ctf_dump_type+0x64>  // b.any
    12a8:	adrp	x0, 0 <ctf_dump_append>
    12ac:	add	x0, x0, #0x0
    12b0:	str	x0, [sp, #88]
    12b4:	b	1398 <ctf_dump_type+0x144>
    12b8:	ldr	x2, [sp, #64]
    12bc:	adrp	x0, 0 <ctf_dump_append>
    12c0:	add	x1, x0, #0x0
    12c4:	mov	x0, x2
    12c8:	bl	0 <ctf_str_append_noerr>
    12cc:	str	x0, [sp, #64]
    12d0:	ldr	x0, [sp, #80]
    12d4:	ldr	x4, [x0, #8]
    12d8:	add	x0, sp, #0x30
    12dc:	mov	x3, x0
    12e0:	adrp	x0, 0 <ctf_dump_append>
    12e4:	add	x2, x0, #0x0
    12e8:	ldr	x1, [sp, #40]
    12ec:	mov	x0, x4
    12f0:	bl	0 <ctf_type_visit>
    12f4:	cmp	w0, #0x0
    12f8:	b.ge	1344 <ctf_dump_type+0xf0>  // b.tcont
    12fc:	ldr	x0, [sp, #40]
    1300:	cmp	x0, #0x0
    1304:	b.eq	131c <ctf_dump_type+0xc8>  // b.none
    1308:	ldr	x0, [sp, #80]
    130c:	ldr	x0, [x0, #8]
    1310:	bl	0 <ctf_errno>
    1314:	cmp	w0, #0x41b
    1318:	b.ne	1334 <ctf_dump_type+0xe0>  // b.any
    131c:	ldr	x0, [sp, #64]
    1320:	mov	x1, x0
    1324:	ldr	x0, [sp, #80]
    1328:	bl	0 <ctf_dump_append>
    132c:	mov	w0, #0x0                   	// #0
    1330:	b	13cc <ctf_dump_type+0x178>
    1334:	adrp	x0, 0 <ctf_dump_append>
    1338:	add	x0, x0, #0x0
    133c:	str	x0, [sp, #88]
    1340:	b	1398 <ctf_dump_type+0x144>
    1344:	ldr	x0, [sp, #64]
    1348:	bl	0 <strlen>
    134c:	str	x0, [sp, #72]
    1350:	ldr	x1, [sp, #64]
    1354:	ldr	x0, [sp, #72]
    1358:	sub	x0, x0, #0x1
    135c:	add	x0, x1, x0
    1360:	ldrb	w0, [x0]
    1364:	cmp	w0, #0xa
    1368:	b.ne	1380 <ctf_dump_type+0x12c>  // b.any
    136c:	ldr	x1, [sp, #64]
    1370:	ldr	x0, [sp, #72]
    1374:	sub	x0, x0, #0x1
    1378:	add	x0, x1, x0
    137c:	strb	wzr, [x0]
    1380:	ldr	x0, [sp, #64]
    1384:	mov	x1, x0
    1388:	ldr	x0, [sp, #80]
    138c:	bl	0 <ctf_dump_append>
    1390:	mov	w0, #0x0                   	// #0
    1394:	b	13cc <ctf_dump_type+0x178>
    1398:	ldr	x0, [sp, #80]
    139c:	ldr	x0, [x0, #8]
    13a0:	bl	0 <ctf_errno>
    13a4:	bl	0 <ctf_errmsg>
    13a8:	mov	x3, x0
    13ac:	ldr	x2, [sp, #40]
    13b0:	ldr	x1, [sp, #88]
    13b4:	adrp	x0, 0 <ctf_dump_append>
    13b8:	add	x0, x0, #0x0
    13bc:	bl	0 <ctf_dprintf>
    13c0:	ldr	x0, [sp, #64]
    13c4:	bl	0 <free>
    13c8:	mov	w0, #0xffffffff            	// #-1
    13cc:	ldp	x29, x30, [sp], #96
    13d0:	ret

00000000000013d4 <ctf_dump_str>:
    13d4:	stp	x29, x30, [sp, #-48]!
    13d8:	mov	x29, sp
    13dc:	str	x0, [sp, #24]
    13e0:	str	x1, [sp, #16]
    13e4:	ldr	x0, [sp, #24]
    13e8:	ldr	x0, [x0, #336]
    13ec:	str	x0, [sp, #40]
    13f0:	b	1468 <ctf_dump_str+0x94>
    13f4:	ldr	x0, [sp, #24]
    13f8:	ldr	x0, [x0, #336]
    13fc:	ldr	x1, [sp, #40]
    1400:	sub	x0, x1, x0
    1404:	add	x4, sp, #0x20
    1408:	ldr	x3, [sp, #40]
    140c:	mov	x2, x0
    1410:	adrp	x0, 0 <ctf_dump_append>
    1414:	add	x1, x0, #0x0
    1418:	mov	x0, x4
    141c:	bl	0 <asprintf>
    1420:	cmp	w0, #0x0
    1424:	b.ge	1440 <ctf_dump_str+0x6c>  // b.tcont
    1428:	bl	0 <__errno_location>
    142c:	ldr	w0, [x0]
    1430:	mov	w1, w0
    1434:	ldr	x0, [sp, #24]
    1438:	bl	0 <ctf_set_errno>
    143c:	b	148c <ctf_dump_str+0xb8>
    1440:	ldr	x0, [sp, #32]
    1444:	mov	x1, x0
    1448:	ldr	x0, [sp, #16]
    144c:	bl	0 <ctf_dump_append>
    1450:	ldr	x0, [sp, #40]
    1454:	bl	0 <strlen>
    1458:	add	x0, x0, #0x1
    145c:	ldr	x1, [sp, #40]
    1460:	add	x0, x1, x0
    1464:	str	x0, [sp, #40]
    1468:	ldr	x0, [sp, #24]
    146c:	ldr	x1, [x0, #336]
    1470:	ldr	x0, [sp, #24]
    1474:	ldr	x0, [x0, #344]
    1478:	add	x0, x1, x0
    147c:	ldr	x1, [sp, #40]
    1480:	cmp	x1, x0
    1484:	b.cc	13f4 <ctf_dump_str+0x20>  // b.lo, b.ul, b.last
    1488:	mov	w0, #0x0                   	// #0
    148c:	ldp	x29, x30, [sp], #48
    1490:	ret

0000000000001494 <ctf_dump>:
    1494:	stp	x29, x30, [sp, #-112]!
    1498:	mov	x29, sp
    149c:	str	x0, [sp, #56]
    14a0:	str	x1, [sp, #48]
    14a4:	str	w2, [sp, #44]
    14a8:	str	x3, [sp, #32]
    14ac:	str	x4, [sp, #24]
    14b0:	str	xzr, [sp, #88]
    14b4:	ldr	x0, [sp, #48]
    14b8:	ldr	x0, [x0]
    14bc:	cmp	x0, #0x0
    14c0:	b.ne	169c <ctf_dump+0x208>  // b.any
    14c4:	mov	x0, #0x28                  	// #40
    14c8:	bl	0 <malloc>
    14cc:	mov	x1, x0
    14d0:	ldr	x0, [sp, #48]
    14d4:	str	x1, [x0]
    14d8:	ldr	x0, [sp, #48]
    14dc:	ldr	x0, [x0]
    14e0:	cmp	x0, #0x0
    14e4:	b.ne	14f8 <ctf_dump+0x64>  // b.any
    14e8:	mov	w1, #0xc                   	// #12
    14ec:	ldr	x0, [sp, #56]
    14f0:	bl	0 <ctf_set_errno>
    14f4:	b	18b8 <ctf_dump+0x424>
    14f8:	ldr	x0, [sp, #48]
    14fc:	ldr	x0, [x0]
    1500:	str	x0, [sp, #88]
    1504:	mov	x2, #0x28                  	// #40
    1508:	mov	w1, #0x0                   	// #0
    150c:	ldr	x0, [sp, #88]
    1510:	bl	0 <memset>
    1514:	ldr	x0, [sp, #88]
    1518:	ldr	x1, [sp, #56]
    151c:	str	x1, [x0, #8]
    1520:	ldr	x0, [sp, #88]
    1524:	ldr	w1, [sp, #44]
    1528:	str	w1, [x0]
    152c:	ldr	w0, [sp, #44]
    1530:	cmp	w0, #0x6
    1534:	b.eq	167c <ctf_dump+0x1e8>  // b.none
    1538:	ldr	w0, [sp, #44]
    153c:	cmp	w0, #0x6
    1540:	b.hi	168c <ctf_dump+0x1f8>  // b.pmore
    1544:	ldr	w0, [sp, #44]
    1548:	cmp	w0, #0x5
    154c:	b.eq	165c <ctf_dump+0x1c8>  // b.none
    1550:	ldr	w0, [sp, #44]
    1554:	cmp	w0, #0x5
    1558:	b.hi	168c <ctf_dump+0x1f8>  // b.pmore
    155c:	ldr	w0, [sp, #44]
    1560:	cmp	w0, #0x4
    1564:	b.eq	163c <ctf_dump+0x1a8>  // b.none
    1568:	ldr	w0, [sp, #44]
    156c:	cmp	w0, #0x4
    1570:	b.hi	168c <ctf_dump+0x1f8>  // b.pmore
    1574:	ldr	w0, [sp, #44]
    1578:	cmp	w0, #0x3
    157c:	b.eq	1624 <ctf_dump+0x190>  // b.none
    1580:	ldr	w0, [sp, #44]
    1584:	cmp	w0, #0x3
    1588:	b.hi	168c <ctf_dump+0x1f8>  // b.pmore
    158c:	ldr	w0, [sp, #44]
    1590:	cmp	w0, #0x2
    1594:	b.eq	160c <ctf_dump+0x178>  // b.none
    1598:	ldr	w0, [sp, #44]
    159c:	cmp	w0, #0x2
    15a0:	b.hi	168c <ctf_dump+0x1f8>  // b.pmore
    15a4:	ldr	w0, [sp, #44]
    15a8:	cmp	w0, #0x0
    15ac:	b.eq	15c0 <ctf_dump+0x12c>  // b.none
    15b0:	ldr	w0, [sp, #44]
    15b4:	cmp	w0, #0x1
    15b8:	b.eq	15d0 <ctf_dump+0x13c>  // b.none
    15bc:	b	168c <ctf_dump+0x1f8>
    15c0:	ldr	x1, [sp, #88]
    15c4:	ldr	x0, [sp, #56]
    15c8:	bl	500 <ctf_dump_header>
    15cc:	b	16f0 <ctf_dump+0x25c>
    15d0:	ldr	x2, [sp, #88]
    15d4:	adrp	x0, 0 <ctf_dump_append>
    15d8:	add	x1, x0, #0x0
    15dc:	ldr	x0, [sp, #56]
    15e0:	bl	0 <ctf_label_iter>
    15e4:	cmp	w0, #0x0
    15e8:	b.ge	16cc <ctf_dump+0x238>  // b.tcont
    15ec:	ldr	x0, [sp, #56]
    15f0:	bl	0 <ctf_errno>
    15f4:	cmp	w0, #0x409
    15f8:	b.ne	18ac <ctf_dump+0x418>  // b.any
    15fc:	mov	w1, #0x0                   	// #0
    1600:	ldr	x0, [sp, #56]
    1604:	bl	0 <ctf_set_errno>
    1608:	b	16cc <ctf_dump+0x238>
    160c:	ldr	x1, [sp, #88]
    1610:	ldr	x0, [sp, #56]
    1614:	bl	99c <ctf_dump_objts>
    1618:	cmp	w0, #0x0
    161c:	b.ge	16d4 <ctf_dump+0x240>  // b.tcont
    1620:	b	18b8 <ctf_dump+0x424>
    1624:	ldr	x1, [sp, #88]
    1628:	ldr	x0, [sp, #56]
    162c:	bl	b24 <ctf_dump_funcs>
    1630:	cmp	w0, #0x0
    1634:	b.ge	16dc <ctf_dump+0x248>  // b.tcont
    1638:	b	18b8 <ctf_dump+0x424>
    163c:	ldr	x2, [sp, #88]
    1640:	adrp	x0, 0 <ctf_dump_append>
    1644:	add	x1, x0, #0x0
    1648:	ldr	x0, [sp, #56]
    164c:	bl	0 <ctf_variable_iter>
    1650:	cmp	w0, #0x0
    1654:	b.ge	16e4 <ctf_dump+0x250>  // b.tcont
    1658:	b	18b8 <ctf_dump+0x424>
    165c:	ldr	x2, [sp, #88]
    1660:	adrp	x0, 0 <ctf_dump_append>
    1664:	add	x1, x0, #0x0
    1668:	ldr	x0, [sp, #56]
    166c:	bl	0 <ctf_type_iter_all>
    1670:	cmp	w0, #0x0
    1674:	b.ge	16ec <ctf_dump+0x258>  // b.tcont
    1678:	b	18b8 <ctf_dump+0x424>
    167c:	ldr	x1, [sp, #88]
    1680:	ldr	x0, [sp, #56]
    1684:	bl	13d4 <ctf_dump_str>
    1688:	b	16f0 <ctf_dump+0x25c>
    168c:	mov	w1, #0x417                 	// #1047
    1690:	ldr	x0, [sp, #56]
    1694:	bl	0 <ctf_set_errno>
    1698:	b	18b8 <ctf_dump+0x424>
    169c:	ldr	x0, [sp, #48]
    16a0:	ldr	x0, [x0]
    16a4:	str	x0, [sp, #88]
    16a8:	ldr	x0, [sp, #88]
    16ac:	ldr	w0, [x0]
    16b0:	ldr	w1, [sp, #44]
    16b4:	cmp	w1, w0
    16b8:	b.eq	16f0 <ctf_dump+0x25c>  // b.none
    16bc:	mov	w1, #0x418                 	// #1048
    16c0:	ldr	x0, [sp, #56]
    16c4:	bl	0 <ctf_set_errno>
    16c8:	b	18b8 <ctf_dump+0x424>
    16cc:	nop
    16d0:	b	16f0 <ctf_dump+0x25c>
    16d4:	nop
    16d8:	b	16f0 <ctf_dump+0x25c>
    16dc:	nop
    16e0:	b	16f0 <ctf_dump+0x25c>
    16e4:	nop
    16e8:	b	16f0 <ctf_dump+0x25c>
    16ec:	nop
    16f0:	ldr	x0, [sp, #88]
    16f4:	ldr	x0, [x0, #16]
    16f8:	cmp	x0, #0x0
    16fc:	b.ne	1714 <ctf_dump+0x280>  // b.any
    1700:	ldr	x0, [sp, #88]
    1704:	ldr	x1, [x0, #32]
    1708:	ldr	x0, [sp, #88]
    170c:	str	x1, [x0, #16]
    1710:	b	1728 <ctf_dump+0x294>
    1714:	ldr	x0, [sp, #88]
    1718:	ldr	x0, [x0, #16]
    171c:	ldr	x1, [x0, #8]
    1720:	ldr	x0, [sp, #88]
    1724:	str	x1, [x0, #16]
    1728:	ldr	x0, [sp, #88]
    172c:	ldr	x0, [x0, #16]
    1730:	cmp	x0, #0x0
    1734:	b.eq	18b4 <ctf_dump+0x420>  // b.none
    1738:	ldr	x0, [sp, #32]
    173c:	cmp	x0, #0x0
    1740:	b.eq	1864 <ctf_dump+0x3d0>  // b.none
    1744:	str	xzr, [sp, #104]
    1748:	ldr	x0, [sp, #88]
    174c:	ldr	x0, [x0, #16]
    1750:	ldr	x0, [x0, #16]
    1754:	str	x0, [sp, #96]
    1758:	b	1808 <ctf_dump+0x374>
    175c:	ldr	x0, [sp, #96]
    1760:	str	x0, [sp, #80]
    1764:	mov	w1, #0xa                   	// #10
    1768:	ldr	x0, [sp, #96]
    176c:	bl	0 <strchr>
    1770:	str	x0, [sp, #80]
    1774:	ldr	x0, [sp, #80]
    1778:	cmp	x0, #0x0
    177c:	b.eq	1788 <ctf_dump+0x2f4>  // b.none
    1780:	ldr	x0, [sp, #80]
    1784:	strb	wzr, [x0]
    1788:	ldr	x3, [sp, #32]
    178c:	ldr	x2, [sp, #24]
    1790:	ldr	x1, [sp, #96]
    1794:	ldr	w0, [sp, #44]
    1798:	blr	x3
    179c:	str	x0, [sp, #72]
    17a0:	ldr	x1, [sp, #72]
    17a4:	ldr	x0, [sp, #104]
    17a8:	bl	0 <ctf_str_append_noerr>
    17ac:	str	x0, [sp, #104]
    17b0:	adrp	x0, 0 <ctf_dump_append>
    17b4:	add	x1, x0, #0x0
    17b8:	ldr	x0, [sp, #104]
    17bc:	bl	0 <ctf_str_append_noerr>
    17c0:	str	x0, [sp, #104]
    17c4:	ldr	x1, [sp, #72]
    17c8:	ldr	x0, [sp, #96]
    17cc:	cmp	x1, x0
    17d0:	b.eq	17dc <ctf_dump+0x348>  // b.none
    17d4:	ldr	x0, [sp, #72]
    17d8:	bl	0 <free>
    17dc:	ldr	x0, [sp, #80]
    17e0:	cmp	x0, #0x0
    17e4:	b.eq	1800 <ctf_dump+0x36c>  // b.none
    17e8:	ldr	x0, [sp, #80]
    17ec:	mov	w1, #0xa                   	// #10
    17f0:	strb	w1, [x0]
    17f4:	ldr	x0, [sp, #80]
    17f8:	add	x0, x0, #0x1
    17fc:	str	x0, [sp, #80]
    1800:	ldr	x0, [sp, #80]
    1804:	str	x0, [sp, #96]
    1808:	ldr	x0, [sp, #96]
    180c:	cmp	x0, #0x0
    1810:	b.eq	1824 <ctf_dump+0x390>  // b.none
    1814:	ldr	x0, [sp, #96]
    1818:	ldrb	w0, [x0]
    181c:	cmp	w0, #0x0
    1820:	b.ne	175c <ctf_dump+0x2c8>  // b.any
    1824:	ldr	x0, [sp, #104]
    1828:	bl	0 <strlen>
    182c:	str	x0, [sp, #64]
    1830:	ldr	x0, [sp, #64]
    1834:	sub	x0, x0, #0x1
    1838:	ldr	x1, [sp, #104]
    183c:	add	x0, x1, x0
    1840:	ldrb	w0, [x0]
    1844:	cmp	w0, #0xa
    1848:	b.ne	1898 <ctf_dump+0x404>  // b.any
    184c:	ldr	x0, [sp, #64]
    1850:	sub	x0, x0, #0x1
    1854:	ldr	x1, [sp, #104]
    1858:	add	x0, x1, x0
    185c:	strb	wzr, [x0]
    1860:	b	1898 <ctf_dump+0x404>
    1864:	ldr	x0, [sp, #88]
    1868:	ldr	x0, [x0, #16]
    186c:	ldr	x0, [x0, #16]
    1870:	bl	0 <strdup>
    1874:	str	x0, [sp, #104]
    1878:	ldr	x0, [sp, #104]
    187c:	cmp	x0, #0x0
    1880:	b.ne	1898 <ctf_dump+0x404>  // b.any
    1884:	mov	w1, #0xc                   	// #12
    1888:	ldr	x0, [sp, #56]
    188c:	bl	0 <ctf_set_errno>
    1890:	ldr	x0, [sp, #104]
    1894:	b	18e0 <ctf_dump+0x44c>
    1898:	mov	w1, #0x0                   	// #0
    189c:	ldr	x0, [sp, #56]
    18a0:	bl	0 <ctf_set_errno>
    18a4:	ldr	x0, [sp, #104]
    18a8:	b	18e0 <ctf_dump+0x44c>
    18ac:	nop
    18b0:	b	18b8 <ctf_dump+0x424>
    18b4:	nop
    18b8:	ldr	x0, [sp, #88]
    18bc:	bl	64 <ctf_dump_free>
    18c0:	ldr	x0, [sp, #88]
    18c4:	bl	0 <free>
    18c8:	mov	w1, #0x0                   	// #0
    18cc:	ldr	x0, [sp, #56]
    18d0:	bl	0 <ctf_set_errno>
    18d4:	ldr	x0, [sp, #48]
    18d8:	str	xzr, [x0]
    18dc:	mov	x0, #0x0                   	// #0
    18e0:	ldp	x29, x30, [sp], #112
    18e4:	ret

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_qsort_r>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #56]
       c:	str	x1, [sp, #48]
      10:	str	x2, [sp, #40]
      14:	str	x3, [sp, #32]
      18:	str	x4, [sp, #24]
      1c:	ldr	x4, [sp, #24]
      20:	ldr	x3, [sp, #32]
      24:	ldr	x2, [sp, #40]
      28:	ldr	x1, [sp, #48]
      2c:	ldr	x0, [sp, #56]
      30:	bl	0 <qsort_r>
      34:	nop
      38:	ldp	x29, x30, [sp], #64
      3c:	ret

0000000000000040 <ctf_get_ctt_size>:
      40:	stp	x29, x30, [sp, #-48]!
      44:	mov	x29, sp
      48:	str	x0, [sp, #40]
      4c:	str	x1, [sp, #32]
      50:	str	x2, [sp, #24]
      54:	str	x3, [sp, #16]
      58:	ldr	x0, [sp, #40]
      5c:	ldr	x0, [x0]
      60:	ldr	x4, [x0, #24]
      64:	ldr	x3, [sp, #16]
      68:	ldr	x2, [sp, #24]
      6c:	ldr	x1, [sp, #32]
      70:	ldr	x0, [sp, #40]
      74:	blr	x4
      78:	ldp	x29, x30, [sp], #48
      7c:	ret

0000000000000080 <ctf_grow_ptrtab>:
      80:	stp	x29, x30, [sp, #-48]!
      84:	mov	x29, sp
      88:	str	x0, [sp, #24]
      8c:	ldr	x0, [sp, #24]
      90:	ldr	x0, [x0, #456]
      94:	str	x0, [sp, #40]
      98:	ldr	x0, [sp, #24]
      9c:	ldr	x0, [x0, #448]
      a0:	cmp	x0, #0x0
      a4:	b.ne	b4 <ctf_grow_ptrtab+0x34>  // b.any
      a8:	mov	x0, #0x400                 	// #1024
      ac:	str	x0, [sp, #40]
      b0:	b	ec <ctf_grow_ptrtab+0x6c>
      b4:	ldr	x0, [sp, #24]
      b8:	ldr	x0, [x0, #480]
      bc:	add	x1, x0, #0x2
      c0:	ldr	x0, [sp, #24]
      c4:	ldr	x0, [x0, #456]
      c8:	cmp	x1, x0
      cc:	b.ls	ec <ctf_grow_ptrtab+0x6c>  // b.plast
      d0:	ldr	x0, [sp, #24]
      d4:	ldr	d0, [x0, #456]
      d8:	ucvtf	d1, d0
      dc:	fmov	d0, #1.250000000000000000e+00
      e0:	fmul	d0, d1, d0
      e4:	fcvtzu	d0, d0
      e8:	str	d0, [sp, #40]
      ec:	ldr	x0, [sp, #24]
      f0:	ldr	x0, [x0, #456]
      f4:	ldr	x1, [sp, #40]
      f8:	cmp	x1, x0
      fc:	b.eq	190 <ctf_grow_ptrtab+0x110>  // b.none
     100:	ldr	x0, [sp, #24]
     104:	ldr	x2, [x0, #448]
     108:	ldr	x0, [sp, #40]
     10c:	lsl	x0, x0, #2
     110:	mov	x1, x0
     114:	mov	x0, x2
     118:	bl	0 <realloc>
     11c:	str	x0, [sp, #32]
     120:	ldr	x0, [sp, #32]
     124:	cmp	x0, #0x0
     128:	b.ne	13c <ctf_grow_ptrtab+0xbc>  // b.any
     12c:	mov	w1, #0xc                   	// #12
     130:	ldr	x0, [sp, #24]
     134:	bl	0 <ctf_set_errno>
     138:	b	194 <ctf_grow_ptrtab+0x114>
     13c:	ldr	x0, [sp, #24]
     140:	ldr	x1, [sp, #32]
     144:	str	x1, [x0, #448]
     148:	ldr	x0, [sp, #24]
     14c:	ldr	x1, [x0, #448]
     150:	ldr	x0, [sp, #24]
     154:	ldr	x0, [x0, #456]
     158:	lsl	x0, x0, #2
     15c:	add	x3, x1, x0
     160:	ldr	x0, [sp, #24]
     164:	ldr	x0, [x0, #456]
     168:	ldr	x1, [sp, #40]
     16c:	sub	x0, x1, x0
     170:	lsl	x0, x0, #2
     174:	mov	x2, x0
     178:	mov	w1, #0x0                   	// #0
     17c:	mov	x0, x3
     180:	bl	0 <memset>
     184:	ldr	x0, [sp, #24]
     188:	ldr	x1, [sp, #40]
     18c:	str	x1, [x0, #456]
     190:	mov	w0, #0x0                   	// #0
     194:	ldp	x29, x30, [sp], #48
     198:	ret

000000000000019c <ctf_create>:
     19c:	stp	x29, x30, [sp, #-128]!
     1a0:	mov	x29, sp
     1a4:	str	x0, [sp, #24]
     1a8:	str	xzr, [sp, #120]
     1ac:	str	xzr, [sp, #112]
     1b0:	str	xzr, [sp, #104]
     1b4:	str	xzr, [sp, #96]
     1b8:	bl	0 <libctf_init_debug>
     1bc:	mov	x3, #0x0                   	// #0
     1c0:	mov	x2, #0x0                   	// #0
     1c4:	adrp	x0, 0 <ctf_hash_eq_integer>
     1c8:	add	x1, x0, #0x0
     1cc:	adrp	x0, 0 <ctf_hash_integer>
     1d0:	add	x0, x0, #0x0
     1d4:	bl	0 <ctf_dynhash_create>
     1d8:	str	x0, [sp, #88]
     1dc:	ldr	x0, [sp, #88]
     1e0:	cmp	x0, #0x0
     1e4:	b.ne	1f8 <ctf_create+0x5c>  // b.any
     1e8:	mov	w1, #0xb                   	// #11
     1ec:	ldr	x0, [sp, #24]
     1f0:	bl	0 <ctf_set_open_errno>
     1f4:	b	430 <ctf_create+0x294>
     1f8:	mov	x3, #0x0                   	// #0
     1fc:	mov	x2, #0x0                   	// #0
     200:	adrp	x0, 0 <ctf_hash_eq_string>
     204:	add	x1, x0, #0x0
     208:	adrp	x0, 0 <ctf_hash_string>
     20c:	add	x0, x0, #0x0
     210:	bl	0 <ctf_dynhash_create>
     214:	str	x0, [sp, #80]
     218:	ldr	x0, [sp, #80]
     21c:	cmp	x0, #0x0
     220:	b.ne	234 <ctf_create+0x98>  // b.any
     224:	mov	w1, #0xb                   	// #11
     228:	ldr	x0, [sp, #24]
     22c:	bl	0 <ctf_set_open_errno>
     230:	b	428 <ctf_create+0x28c>
     234:	mov	x3, #0x0                   	// #0
     238:	mov	x2, #0x0                   	// #0
     23c:	adrp	x0, 0 <ctf_hash_eq_string>
     240:	add	x1, x0, #0x0
     244:	adrp	x0, 0 <ctf_hash_string>
     248:	add	x0, x0, #0x0
     24c:	bl	0 <ctf_dynhash_create>
     250:	str	x0, [sp, #120]
     254:	mov	x3, #0x0                   	// #0
     258:	mov	x2, #0x0                   	// #0
     25c:	adrp	x0, 0 <ctf_hash_eq_string>
     260:	add	x1, x0, #0x0
     264:	adrp	x0, 0 <ctf_hash_string>
     268:	add	x0, x0, #0x0
     26c:	bl	0 <ctf_dynhash_create>
     270:	str	x0, [sp, #112]
     274:	mov	x3, #0x0                   	// #0
     278:	mov	x2, #0x0                   	// #0
     27c:	adrp	x0, 0 <ctf_hash_eq_string>
     280:	add	x1, x0, #0x0
     284:	adrp	x0, 0 <ctf_hash_string>
     288:	add	x0, x0, #0x0
     28c:	bl	0 <ctf_dynhash_create>
     290:	str	x0, [sp, #104]
     294:	mov	x3, #0x0                   	// #0
     298:	mov	x2, #0x0                   	// #0
     29c:	adrp	x0, 0 <ctf_hash_eq_string>
     2a0:	add	x1, x0, #0x0
     2a4:	adrp	x0, 0 <ctf_hash_string>
     2a8:	add	x0, x0, #0x0
     2ac:	bl	0 <ctf_dynhash_create>
     2b0:	str	x0, [sp, #96]
     2b4:	ldr	x0, [sp, #120]
     2b8:	cmp	x0, #0x0
     2bc:	b.eq	2e4 <ctf_create+0x148>  // b.none
     2c0:	ldr	x0, [sp, #112]
     2c4:	cmp	x0, #0x0
     2c8:	b.eq	2e4 <ctf_create+0x148>  // b.none
     2cc:	ldr	x0, [sp, #104]
     2d0:	cmp	x0, #0x0
     2d4:	b.eq	2e4 <ctf_create+0x148>  // b.none
     2d8:	ldr	x0, [sp, #96]
     2dc:	cmp	x0, #0x0
     2e0:	b.ne	2f4 <ctf_create+0x158>  // b.any
     2e4:	mov	w1, #0xb                   	// #11
     2e8:	ldr	x0, [sp, #24]
     2ec:	bl	0 <ctf_set_open_errno>
     2f0:	b	400 <ctf_create+0x264>
     2f4:	adrp	x0, 0 <_CTF_SECTION>
     2f8:	add	x0, x0, #0x0
     2fc:	str	x0, [sp, #40]
     300:	adrp	x0, 0 <ctf_qsort_r>
     304:	add	x0, x0, #0x0
     308:	str	x0, [sp, #48]
     30c:	mov	x0, #0x34                  	// #52
     310:	str	x0, [sp, #56]
     314:	mov	x0, #0x1                   	// #1
     318:	str	x0, [sp, #64]
     31c:	add	x0, sp, #0x28
     320:	ldr	x5, [sp, #24]
     324:	mov	w4, #0x1                   	// #1
     328:	mov	x3, #0x0                   	// #0
     32c:	mov	x2, #0x0                   	// #0
     330:	mov	x1, #0x0                   	// #0
     334:	bl	0 <ctf_bufopen_internal>
     338:	str	x0, [sp, #72]
     33c:	ldr	x0, [sp, #72]
     340:	cmp	x0, #0x0
     344:	b.eq	3fc <ctf_create+0x260>  // b.none
     348:	ldr	x0, [sp, #72]
     34c:	ldr	x1, [sp, #120]
     350:	str	x1, [x0, #160]
     354:	ldr	x0, [sp, #72]
     358:	ldr	x1, [sp, #112]
     35c:	str	x1, [x0, #176]
     360:	ldr	x0, [sp, #72]
     364:	ldr	x1, [sp, #104]
     368:	str	x1, [x0, #192]
     36c:	ldr	x0, [sp, #72]
     370:	ldr	x1, [sp, #96]
     374:	str	x1, [x0, #208]
     378:	ldr	x0, [sp, #72]
     37c:	ldr	x1, [sp, #88]
     380:	str	x1, [x0, #568]
     384:	ldr	x0, [sp, #72]
     388:	ldr	x1, [sp, #80]
     38c:	str	x1, [x0, #592]
     390:	ldr	x0, [sp, #72]
     394:	str	xzr, [x0, #616]
     398:	ldr	x0, [sp, #72]
     39c:	mov	x1, #0x1                   	// #1
     3a0:	str	x1, [x0, #624]
     3a4:	ldr	x0, [sp, #72]
     3a8:	str	xzr, [x0, #632]
     3ac:	ldr	x0, [sp, #72]
     3b0:	bl	0 <ctf_set_ctl_hashes>
     3b4:	mov	w1, #0x2                   	// #2
     3b8:	ldr	x0, [sp, #72]
     3bc:	bl	0 <ctf_setmodel>
     3c0:	ldr	x0, [sp, #72]
     3c4:	bl	80 <ctf_grow_ptrtab>
     3c8:	cmp	w0, #0x0
     3cc:	b.ge	3f4 <ctf_create+0x258>  // b.tcont
     3d0:	ldr	x0, [sp, #72]
     3d4:	bl	0 <ctf_errno>
     3d8:	mov	w1, w0
     3dc:	ldr	x0, [sp, #24]
     3e0:	bl	0 <ctf_set_open_errno>
     3e4:	ldr	x0, [sp, #72]
     3e8:	bl	0 <ctf_file_close>
     3ec:	mov	x0, #0x0                   	// #0
     3f0:	b	434 <ctf_create+0x298>
     3f4:	ldr	x0, [sp, #72]
     3f8:	b	434 <ctf_create+0x298>
     3fc:	nop
     400:	ldr	x0, [sp, #120]
     404:	bl	0 <ctf_dynhash_destroy>
     408:	ldr	x0, [sp, #112]
     40c:	bl	0 <ctf_dynhash_destroy>
     410:	ldr	x0, [sp, #104]
     414:	bl	0 <ctf_dynhash_destroy>
     418:	ldr	x0, [sp, #96]
     41c:	bl	0 <ctf_dynhash_destroy>
     420:	ldr	x0, [sp, #80]
     424:	bl	0 <ctf_dynhash_destroy>
     428:	ldr	x0, [sp, #88]
     42c:	bl	0 <ctf_dynhash_destroy>
     430:	mov	x0, #0x0                   	// #0
     434:	ldp	x29, x30, [sp], #128
     438:	ret

000000000000043c <ctf_copy_smembers>:
     43c:	stp	x29, x30, [sp, #-80]!
     440:	mov	x29, sp
     444:	str	x0, [sp, #40]
     448:	str	x1, [sp, #32]
     44c:	str	x2, [sp, #24]
     450:	ldr	x0, [sp, #32]
     454:	ldr	x0, [x0, #56]
     458:	str	x0, [sp, #72]
     45c:	b	4e4 <ctf_copy_smembers+0xa8>
     460:	str	wzr, [sp, #48]
     464:	ldr	x0, [sp, #72]
     468:	ldr	x0, [x0, #24]
     46c:	str	w0, [sp, #56]
     470:	ldr	x0, [sp, #72]
     474:	ldr	x0, [x0, #32]
     478:	str	w0, [sp, #52]
     47c:	ldr	x0, [sp, #24]
     480:	mov	x1, x0
     484:	add	x0, sp, #0x30
     488:	ldr	x2, [x0]
     48c:	str	x2, [x1]
     490:	ldr	w0, [x0, #8]
     494:	str	w0, [x1, #8]
     498:	ldr	x0, [sp, #24]
     49c:	str	x0, [sp, #64]
     4a0:	ldr	x0, [sp, #72]
     4a4:	ldr	x0, [x0, #16]
     4a8:	cmp	x0, #0x0
     4ac:	b.eq	4cc <ctf_copy_smembers+0x90>  // b.none
     4b0:	ldr	x0, [sp, #72]
     4b4:	ldr	x0, [x0, #16]
     4b8:	ldr	x1, [sp, #64]
     4bc:	mov	x2, x1
     4c0:	mov	x1, x0
     4c4:	ldr	x0, [sp, #40]
     4c8:	bl	0 <ctf_str_add_ref>
     4cc:	ldr	x0, [sp, #24]
     4d0:	add	x0, x0, #0xc
     4d4:	str	x0, [sp, #24]
     4d8:	ldr	x0, [sp, #72]
     4dc:	ldr	x0, [x0, #8]
     4e0:	str	x0, [sp, #72]
     4e4:	ldr	x0, [sp, #72]
     4e8:	cmp	x0, #0x0
     4ec:	b.ne	460 <ctf_copy_smembers+0x24>  // b.any
     4f0:	ldr	x0, [sp, #24]
     4f4:	ldp	x29, x30, [sp], #80
     4f8:	ret

00000000000004fc <ctf_copy_lmembers>:
     4fc:	stp	x29, x30, [sp, #-80]!
     500:	mov	x29, sp
     504:	str	x0, [sp, #40]
     508:	str	x1, [sp, #32]
     50c:	str	x2, [sp, #24]
     510:	ldr	x0, [sp, #32]
     514:	ldr	x0, [x0, #56]
     518:	str	x0, [sp, #72]
     51c:	b	5a4 <ctf_copy_lmembers+0xa8>
     520:	str	wzr, [sp, #48]
     524:	ldr	x0, [sp, #72]
     528:	ldr	x0, [x0, #24]
     52c:	str	w0, [sp, #56]
     530:	ldr	x0, [sp, #72]
     534:	ldr	x0, [x0, #32]
     538:	lsr	x0, x0, #32
     53c:	str	w0, [sp, #52]
     540:	ldr	x0, [sp, #72]
     544:	ldr	x0, [x0, #32]
     548:	str	w0, [sp, #60]
     54c:	ldp	x0, x1, [sp, #48]
     550:	ldr	x2, [sp, #24]
     554:	stp	x0, x1, [x2]
     558:	ldr	x0, [sp, #24]
     55c:	str	x0, [sp, #64]
     560:	ldr	x0, [sp, #72]
     564:	ldr	x0, [x0, #16]
     568:	cmp	x0, #0x0
     56c:	b.eq	58c <ctf_copy_lmembers+0x90>  // b.none
     570:	ldr	x0, [sp, #72]
     574:	ldr	x0, [x0, #16]
     578:	ldr	x1, [sp, #64]
     57c:	mov	x2, x1
     580:	mov	x1, x0
     584:	ldr	x0, [sp, #40]
     588:	bl	0 <ctf_str_add_ref>
     58c:	ldr	x0, [sp, #24]
     590:	add	x0, x0, #0x10
     594:	str	x0, [sp, #24]
     598:	ldr	x0, [sp, #72]
     59c:	ldr	x0, [x0, #8]
     5a0:	str	x0, [sp, #72]
     5a4:	ldr	x0, [sp, #72]
     5a8:	cmp	x0, #0x0
     5ac:	b.ne	520 <ctf_copy_lmembers+0x24>  // b.any
     5b0:	ldr	x0, [sp, #24]
     5b4:	ldp	x29, x30, [sp], #80
     5b8:	ret

00000000000005bc <ctf_copy_emembers>:
     5bc:	stp	x29, x30, [sp, #-80]!
     5c0:	mov	x29, sp
     5c4:	str	x0, [sp, #40]
     5c8:	str	x1, [sp, #32]
     5cc:	str	x2, [sp, #24]
     5d0:	ldr	x0, [sp, #32]
     5d4:	ldr	x0, [x0, #56]
     5d8:	str	x0, [sp, #72]
     5dc:	b	634 <ctf_copy_emembers+0x78>
     5e0:	ldr	x0, [sp, #72]
     5e4:	ldr	w0, [x0, #40]
     5e8:	str	w0, [sp, #60]
     5ec:	ldr	x1, [sp, #56]
     5f0:	ldr	x0, [sp, #24]
     5f4:	str	x1, [x0]
     5f8:	ldr	x0, [sp, #24]
     5fc:	str	x0, [sp, #64]
     600:	ldr	x0, [sp, #72]
     604:	ldr	x0, [x0, #16]
     608:	ldr	x1, [sp, #64]
     60c:	mov	x2, x1
     610:	mov	x1, x0
     614:	ldr	x0, [sp, #40]
     618:	bl	0 <ctf_str_add_ref>
     61c:	ldr	x0, [sp, #24]
     620:	add	x0, x0, #0x8
     624:	str	x0, [sp, #24]
     628:	ldr	x0, [sp, #72]
     62c:	ldr	x0, [x0, #8]
     630:	str	x0, [sp, #72]
     634:	ldr	x0, [sp, #72]
     638:	cmp	x0, #0x0
     63c:	b.ne	5e0 <ctf_copy_emembers+0x24>  // b.any
     640:	ldr	x0, [sp, #24]
     644:	ldp	x29, x30, [sp], #80
     648:	ret

000000000000064c <ctf_sort_var>:
     64c:	stp	x29, x30, [sp, #-96]!
     650:	mov	x29, sp
     654:	str	x19, [sp, #16]
     658:	str	x0, [sp, #56]
     65c:	str	x1, [sp, #48]
     660:	str	x2, [sp, #40]
     664:	ldr	x0, [sp, #56]
     668:	str	x0, [sp, #88]
     66c:	ldr	x0, [sp, #48]
     670:	str	x0, [sp, #80]
     674:	ldr	x0, [sp, #40]
     678:	str	x0, [sp, #72]
     67c:	ldr	x0, [sp, #72]
     680:	ldr	x3, [x0]
     684:	ldr	x0, [sp, #88]
     688:	ldr	w1, [x0]
     68c:	ldr	x0, [sp, #72]
     690:	ldr	x0, [x0, #8]
     694:	mov	x2, x0
     698:	mov	x0, x3
     69c:	bl	0 <ctf_strraw_explicit>
     6a0:	mov	x19, x0
     6a4:	ldr	x0, [sp, #72]
     6a8:	ldr	x3, [x0]
     6ac:	ldr	x0, [sp, #80]
     6b0:	ldr	w1, [x0]
     6b4:	ldr	x0, [sp, #72]
     6b8:	ldr	x0, [x0, #8]
     6bc:	mov	x2, x0
     6c0:	mov	x0, x3
     6c4:	bl	0 <ctf_strraw_explicit>
     6c8:	mov	x1, x0
     6cc:	mov	x0, x19
     6d0:	bl	0 <strcmp>
     6d4:	ldr	x19, [sp, #16]
     6d8:	ldp	x29, x30, [sp], #96
     6dc:	ret

00000000000006e0 <ctf_update>:
     6e0:	stp	x29, x30, [sp, #-32]!
     6e4:	mov	x29, sp
     6e8:	str	x0, [sp, #24]
     6ec:	ldr	x0, [sp, #24]
     6f0:	ldr	w0, [x0, #552]
     6f4:	and	w0, w0, #0x2
     6f8:	cmp	w0, #0x0
     6fc:	b.ne	710 <ctf_update+0x30>  // b.any
     700:	mov	w1, #0x40d                 	// #1037
     704:	ldr	x0, [sp, #24]
     708:	bl	0 <ctf_set_errno>
     70c:	b	724 <ctf_update+0x44>
     710:	ldr	x0, [sp, #24]
     714:	ldr	x1, [x0, #480]
     718:	ldr	x0, [sp, #24]
     71c:	str	x1, [x0, #616]
     720:	mov	w0, #0x0                   	// #0
     724:	ldp	x29, x30, [sp], #32
     728:	ret

000000000000072c <ctf_serialize>:
     72c:	sub	sp, sp, #0x420
     730:	stp	x29, x30, [sp, #16]
     734:	add	x29, sp, #0x10
     738:	str	x0, [sp, #40]
     73c:	ldr	x0, [sp, #40]
     740:	ldr	w0, [x0, #552]
     744:	and	w0, w0, #0x2
     748:	cmp	w0, #0x0
     74c:	b.ne	760 <ctf_serialize+0x34>  // b.any
     750:	mov	w1, #0x40d                 	// #1037
     754:	ldr	x0, [sp, #40]
     758:	bl	0 <ctf_set_errno>
     75c:	b	1430 <ctf_serialize+0xd04>
     760:	ldr	x0, [sp, #40]
     764:	ldr	w0, [x0, #552]
     768:	and	w0, w0, #0x4
     76c:	cmp	w0, #0x0
     770:	b.ne	77c <ctf_serialize+0x50>  // b.any
     774:	mov	w0, #0x0                   	// #0
     778:	b	1430 <ctf_serialize+0xd04>
     77c:	add	x0, sp, #0x70
     780:	mov	x2, #0x34                  	// #52
     784:	mov	w1, #0x0                   	// #0
     788:	bl	0 <memset>
     78c:	mov	w0, #0xffffdff2            	// #-8206
     790:	strh	w0, [sp, #112]
     794:	mov	w0, #0x4                   	// #4
     798:	strb	w0, [sp, #114]
     79c:	str	xzr, [sp, #1016]
     7a0:	ldr	x0, [sp, #40]
     7a4:	ldr	x0, [x0, #584]
     7a8:	str	x0, [sp, #1048]
     7ac:	b	96c <ctf_serialize+0x240>
     7b0:	ldr	x0, [sp, #40]
     7b4:	ldr	x0, [x0]
     7b8:	ldr	x1, [x0]
     7bc:	ldr	x0, [sp, #1048]
     7c0:	ldr	w0, [x0, #28]
     7c4:	blr	x1
     7c8:	str	w0, [sp, #900]
     7cc:	ldr	x0, [sp, #40]
     7d0:	ldr	x0, [x0]
     7d4:	ldr	x1, [x0, #16]
     7d8:	ldr	x0, [sp, #1048]
     7dc:	ldr	w0, [x0, #28]
     7e0:	blr	x1
     7e4:	str	w0, [sp, #896]
     7e8:	ldr	x0, [sp, #1048]
     7ec:	ldr	w0, [x0, #32]
     7f0:	cmn	w0, #0x1
     7f4:	b.eq	808 <ctf_serialize+0xdc>  // b.none
     7f8:	ldr	x0, [sp, #1016]
     7fc:	add	x0, x0, #0xc
     800:	str	x0, [sp, #1016]
     804:	b	814 <ctf_serialize+0xe8>
     808:	ldr	x0, [sp, #1016]
     80c:	add	x0, x0, #0x14
     810:	str	x0, [sp, #1016]
     814:	ldr	w0, [sp, #900]
     818:	cmp	w0, #0xe
     81c:	b.eq	8c0 <ctf_serialize+0x194>  // b.none
     820:	ldr	w0, [sp, #900]
     824:	cmp	w0, #0xe
     828:	b.hi	960 <ctf_serialize+0x234>  // b.pmore
     82c:	ldr	w0, [sp, #900]
     830:	cmp	w0, #0x8
     834:	b.eq	948 <ctf_serialize+0x21c>  // b.none
     838:	ldr	w0, [sp, #900]
     83c:	cmp	w0, #0x8
     840:	b.hi	960 <ctf_serialize+0x234>  // b.pmore
     844:	ldr	w0, [sp, #900]
     848:	cmp	w0, #0x7
     84c:	b.hi	960 <ctf_serialize+0x234>  // b.pmore
     850:	ldr	w0, [sp, #900]
     854:	cmp	w0, #0x6
     858:	b.cs	8f4 <ctf_serialize+0x1c8>  // b.hs, b.nlast
     85c:	ldr	w0, [sp, #900]
     860:	cmp	w0, #0x5
     864:	b.eq	8d0 <ctf_serialize+0x1a4>  // b.none
     868:	ldr	w0, [sp, #900]
     86c:	cmp	w0, #0x5
     870:	b.hi	960 <ctf_serialize+0x234>  // b.pmore
     874:	ldr	w0, [sp, #900]
     878:	cmp	w0, #0x2
     87c:	b.hi	890 <ctf_serialize+0x164>  // b.pmore
     880:	ldr	w0, [sp, #900]
     884:	cmp	w0, #0x0
     888:	b.ne	8a0 <ctf_serialize+0x174>  // b.any
     88c:	b	960 <ctf_serialize+0x234>
     890:	ldr	w0, [sp, #900]
     894:	cmp	w0, #0x4
     898:	b.eq	8b0 <ctf_serialize+0x184>  // b.none
     89c:	b	960 <ctf_serialize+0x234>
     8a0:	ldr	x0, [sp, #1016]
     8a4:	add	x0, x0, #0x4
     8a8:	str	x0, [sp, #1016]
     8ac:	b	960 <ctf_serialize+0x234>
     8b0:	ldr	x0, [sp, #1016]
     8b4:	add	x0, x0, #0xc
     8b8:	str	x0, [sp, #1016]
     8bc:	b	960 <ctf_serialize+0x234>
     8c0:	ldr	x0, [sp, #1016]
     8c4:	add	x0, x0, #0x8
     8c8:	str	x0, [sp, #1016]
     8cc:	b	960 <ctf_serialize+0x234>
     8d0:	ldr	w0, [sp, #896]
     8d4:	add	w0, w0, #0x1
     8d8:	mov	w0, w0
     8dc:	and	x0, x0, #0xfffffffe
     8e0:	lsl	x0, x0, #2
     8e4:	ldr	x1, [sp, #1016]
     8e8:	add	x0, x1, x0
     8ec:	str	x0, [sp, #1016]
     8f0:	b	960 <ctf_serialize+0x234>
     8f4:	ldr	x0, [sp, #1048]
     8f8:	ldr	w1, [x0, #32]
     8fc:	mov	w0, #0x1fffffff            	// #536870911
     900:	cmp	w1, w0
     904:	b.hi	930 <ctf_serialize+0x204>  // b.pmore
     908:	ldr	w1, [sp, #896]
     90c:	mov	x0, x1
     910:	lsl	x0, x0, #1
     914:	add	x0, x0, x1
     918:	lsl	x0, x0, #2
     91c:	mov	x1, x0
     920:	ldr	x0, [sp, #1016]
     924:	add	x0, x0, x1
     928:	str	x0, [sp, #1016]
     92c:	b	960 <ctf_serialize+0x234>
     930:	ldr	w0, [sp, #896]
     934:	lsl	x0, x0, #4
     938:	ldr	x1, [sp, #1016]
     93c:	add	x0, x1, x0
     940:	str	x0, [sp, #1016]
     944:	b	960 <ctf_serialize+0x234>
     948:	ldr	w0, [sp, #896]
     94c:	lsl	x0, x0, #3
     950:	ldr	x1, [sp, #1016]
     954:	add	x0, x1, x0
     958:	str	x0, [sp, #1016]
     95c:	nop
     960:	ldr	x0, [sp, #1048]
     964:	ldr	x0, [x0, #8]
     968:	str	x0, [sp, #1048]
     96c:	ldr	x0, [sp, #1048]
     970:	cmp	x0, #0x0
     974:	b.ne	7b0 <ctf_serialize+0x84>  // b.any
     978:	str	xzr, [sp, #1008]
     97c:	ldr	x0, [sp, #40]
     980:	ldr	x0, [x0, #608]
     984:	str	x0, [sp, #1040]
     988:	b	9a4 <ctf_serialize+0x278>
     98c:	ldr	x0, [sp, #1040]
     990:	ldr	x0, [x0, #8]
     994:	str	x0, [sp, #1040]
     998:	ldr	x0, [sp, #1008]
     99c:	add	x0, x0, #0x1
     9a0:	str	x0, [sp, #1008]
     9a4:	ldr	x0, [sp, #1040]
     9a8:	cmp	x0, #0x0
     9ac:	b.ne	98c <ctf_serialize+0x260>  // b.any
     9b0:	ldr	w1, [sp, #148]
     9b4:	ldr	x0, [sp, #1008]
     9b8:	lsl	w0, w0, #3
     9bc:	add	w0, w1, w0
     9c0:	str	w0, [sp, #152]
     9c4:	ldr	w0, [sp, #152]
     9c8:	ldr	x1, [sp, #1016]
     9cc:	add	w0, w0, w1
     9d0:	str	w0, [sp, #156]
     9d4:	str	wzr, [sp, #160]
     9d8:	ldr	w0, [sp, #156]
     9dc:	mov	w1, w0
     9e0:	ldr	w0, [sp, #160]
     9e4:	mov	w0, w0
     9e8:	add	x0, x1, x0
     9ec:	add	x0, x0, #0x34
     9f0:	str	x0, [sp, #976]
     9f4:	ldr	x0, [sp, #976]
     9f8:	bl	0 <malloc>
     9fc:	str	x0, [sp, #968]
     a00:	ldr	x0, [sp, #968]
     a04:	cmp	x0, #0x0
     a08:	b.ne	a1c <ctf_serialize+0x2f0>  // b.any
     a0c:	mov	w1, #0xb                   	// #11
     a10:	ldr	x0, [sp, #40]
     a14:	bl	0 <ctf_set_errno>
     a18:	b	1430 <ctf_serialize+0xd04>
     a1c:	ldr	x0, [sp, #968]
     a20:	mov	x1, x0
     a24:	add	x0, sp, #0x70
     a28:	ldp	x2, x3, [x0]
     a2c:	stp	x2, x3, [x1]
     a30:	ldp	x2, x3, [x0, #16]
     a34:	stp	x2, x3, [x1, #16]
     a38:	ldp	x2, x3, [x0, #32]
     a3c:	stp	x2, x3, [x1, #32]
     a40:	ldr	w0, [x0, #48]
     a44:	str	w0, [x1, #48]
     a48:	ldr	w0, [sp, #148]
     a4c:	mov	w0, w0
     a50:	add	x0, x0, #0x34
     a54:	ldr	x1, [sp, #968]
     a58:	add	x0, x1, x0
     a5c:	str	x0, [sp, #1032]
     a60:	ldr	x0, [sp, #968]
     a64:	str	x0, [sp, #960]
     a68:	ldr	x0, [sp, #40]
     a6c:	ldr	w0, [x0, #552]
     a70:	and	w0, w0, #0x1
     a74:	cmp	w0, #0x0
     a78:	b.eq	aa8 <ctf_serialize+0x37c>  // b.none
     a7c:	ldr	x0, [sp, #40]
     a80:	ldr	x0, [x0, #528]
     a84:	cmp	x0, #0x0
     a88:	b.eq	aa8 <ctf_serialize+0x37c>  // b.none
     a8c:	ldr	x0, [sp, #40]
     a90:	ldr	x1, [x0, #528]
     a94:	ldr	x0, [sp, #960]
     a98:	add	x0, x0, #0x8
     a9c:	mov	x2, x0
     aa0:	ldr	x0, [sp, #40]
     aa4:	bl	0 <ctf_str_add_ref>
     aa8:	ldr	x0, [sp, #40]
     aac:	ldr	x0, [x0, #496]
     ab0:	cmp	x0, #0x0
     ab4:	b.eq	ad4 <ctf_serialize+0x3a8>  // b.none
     ab8:	ldr	x0, [sp, #40]
     abc:	ldr	x1, [x0, #496]
     ac0:	ldr	x0, [sp, #960]
     ac4:	add	x0, x0, #0xc
     ac8:	mov	x2, x0
     acc:	ldr	x0, [sp, #40]
     ad0:	bl	0 <ctf_str_add_ref>
     ad4:	ldr	x0, [sp, #1032]
     ad8:	str	x0, [sp, #952]
     adc:	str	xzr, [sp, #1024]
     ae0:	ldr	x0, [sp, #40]
     ae4:	ldr	x0, [x0, #608]
     ae8:	str	x0, [sp, #1040]
     aec:	b	b4c <ctf_serialize+0x420>
     af0:	ldr	x0, [sp, #1024]
     af4:	lsl	x0, x0, #3
     af8:	ldr	x1, [sp, #952]
     afc:	add	x0, x1, x0
     b00:	str	x0, [sp, #904]
     b04:	ldr	x0, [sp, #1040]
     b08:	ldr	x0, [x0, #16]
     b0c:	ldr	x1, [sp, #904]
     b10:	mov	x2, x1
     b14:	mov	x1, x0
     b18:	ldr	x0, [sp, #40]
     b1c:	bl	0 <ctf_str_add_ref>
     b20:	ldr	x0, [sp, #1040]
     b24:	ldr	x0, [x0, #24]
     b28:	mov	w1, w0
     b2c:	ldr	x0, [sp, #904]
     b30:	str	w1, [x0, #4]
     b34:	ldr	x0, [sp, #1040]
     b38:	ldr	x0, [x0, #8]
     b3c:	str	x0, [sp, #1040]
     b40:	ldr	x0, [sp, #1024]
     b44:	add	x0, x0, #0x1
     b48:	str	x0, [sp, #1024]
     b4c:	ldr	x0, [sp, #1040]
     b50:	cmp	x0, #0x0
     b54:	b.ne	af0 <ctf_serialize+0x3c4>  // b.any
     b58:	ldr	x1, [sp, #1024]
     b5c:	ldr	x0, [sp, #1008]
     b60:	cmp	x1, x0
     b64:	b.eq	b88 <ctf_serialize+0x45c>  // b.none
     b68:	adrp	x0, 0 <ctf_qsort_r>
     b6c:	add	x3, x0, #0x0
     b70:	mov	w2, #0x179                 	// #377
     b74:	adrp	x0, 0 <ctf_qsort_r>
     b78:	add	x1, x0, #0x0
     b7c:	adrp	x0, 0 <ctf_qsort_r>
     b80:	add	x0, x0, #0x0
     b84:	bl	0 <__assert_fail>
     b88:	ldr	x0, [sp, #1008]
     b8c:	lsl	x0, x0, #3
     b90:	ldr	x1, [sp, #1032]
     b94:	add	x0, x1, x0
     b98:	str	x0, [sp, #1032]
     b9c:	ldr	w0, [sp, #152]
     ba0:	mov	w0, w0
     ba4:	add	x0, x0, #0x34
     ba8:	ldr	x1, [sp, #968]
     bac:	add	x0, x1, x0
     bb0:	ldr	x1, [sp, #1032]
     bb4:	cmp	x1, x0
     bb8:	b.eq	bdc <ctf_serialize+0x4b0>  // b.none
     bbc:	adrp	x0, 0 <ctf_qsort_r>
     bc0:	add	x3, x0, #0x0
     bc4:	mov	w2, #0x17d                 	// #381
     bc8:	adrp	x0, 0 <ctf_qsort_r>
     bcc:	add	x1, x0, #0x0
     bd0:	adrp	x0, 0 <ctf_qsort_r>
     bd4:	add	x0, x0, #0x0
     bd8:	bl	0 <__assert_fail>
     bdc:	ldr	x0, [sp, #40]
     be0:	ldr	x0, [x0, #584]
     be4:	str	x0, [sp, #1048]
     be8:	b	f30 <ctf_serialize+0x804>
     bec:	ldr	x0, [sp, #40]
     bf0:	ldr	x0, [x0]
     bf4:	ldr	x1, [x0]
     bf8:	ldr	x0, [sp, #1048]
     bfc:	ldr	w0, [x0, #28]
     c00:	blr	x1
     c04:	str	w0, [sp, #932]
     c08:	ldr	x0, [sp, #40]
     c0c:	ldr	x0, [x0]
     c10:	ldr	x1, [x0, #16]
     c14:	ldr	x0, [sp, #1048]
     c18:	ldr	w0, [x0, #28]
     c1c:	blr	x1
     c20:	str	w0, [sp, #928]
     c24:	ldr	x0, [sp, #1048]
     c28:	ldr	w0, [x0, #32]
     c2c:	cmn	w0, #0x1
     c30:	b.eq	c40 <ctf_serialize+0x514>  // b.none
     c34:	mov	x0, #0xc                   	// #12
     c38:	str	x0, [sp, #1000]
     c3c:	b	c48 <ctf_serialize+0x51c>
     c40:	mov	x0, #0x14                  	// #20
     c44:	str	x0, [sp, #1000]
     c48:	ldr	x0, [sp, #1048]
     c4c:	add	x0, x0, #0x18
     c50:	ldr	x2, [sp, #1000]
     c54:	mov	x1, x0
     c58:	ldr	x0, [sp, #1032]
     c5c:	bl	0 <memcpy>
     c60:	ldr	x0, [sp, #1032]
     c64:	str	x0, [sp, #920]
     c68:	ldr	x0, [sp, #920]
     c6c:	ldr	w0, [x0]
     c70:	cmp	w0, #0x0
     c74:	b.eq	cb0 <ctf_serialize+0x584>  // b.none
     c78:	ldr	x0, [sp, #920]
     c7c:	ldr	w0, [x0]
     c80:	mov	w1, w0
     c84:	ldr	x0, [sp, #40]
     c88:	bl	0 <ctf_strraw>
     c8c:	str	x0, [sp, #912]
     c90:	ldr	x0, [sp, #912]
     c94:	cmp	x0, #0x0
     c98:	b.eq	cb0 <ctf_serialize+0x584>  // b.none
     c9c:	ldr	x0, [sp, #920]
     ca0:	mov	x2, x0
     ca4:	ldr	x1, [sp, #912]
     ca8:	ldr	x0, [sp, #40]
     cac:	bl	0 <ctf_str_add_ref>
     cb0:	ldr	x1, [sp, #1032]
     cb4:	ldr	x0, [sp, #1000]
     cb8:	add	x0, x1, x0
     cbc:	str	x0, [sp, #1032]
     cc0:	ldr	w0, [sp, #932]
     cc4:	cmp	w0, #0xe
     cc8:	b.eq	dd0 <ctf_serialize+0x6a4>  // b.none
     ccc:	ldr	w0, [sp, #932]
     cd0:	cmp	w0, #0xe
     cd4:	b.hi	f24 <ctf_serialize+0x7f8>  // b.pmore
     cd8:	ldr	w0, [sp, #932]
     cdc:	cmp	w0, #0x8
     ce0:	b.eq	f0c <ctf_serialize+0x7e0>  // b.none
     ce4:	ldr	w0, [sp, #932]
     ce8:	cmp	w0, #0x8
     cec:	b.hi	f24 <ctf_serialize+0x7f8>  // b.pmore
     cf0:	ldr	w0, [sp, #932]
     cf4:	cmp	w0, #0x7
     cf8:	b.hi	f24 <ctf_serialize+0x7f8>  // b.pmore
     cfc:	ldr	w0, [sp, #932]
     d00:	cmp	w0, #0x6
     d04:	b.cs	ec8 <ctf_serialize+0x79c>  // b.hs, b.nlast
     d08:	ldr	w0, [sp, #932]
     d0c:	cmp	w0, #0x5
     d10:	b.eq	e44 <ctf_serialize+0x718>  // b.none
     d14:	ldr	w0, [sp, #932]
     d18:	cmp	w0, #0x5
     d1c:	b.hi	f24 <ctf_serialize+0x7f8>  // b.pmore
     d20:	ldr	w0, [sp, #932]
     d24:	cmp	w0, #0x2
     d28:	b.hi	d3c <ctf_serialize+0x610>  // b.pmore
     d2c:	ldr	w0, [sp, #932]
     d30:	cmp	w0, #0x0
     d34:	b.ne	d4c <ctf_serialize+0x620>  // b.any
     d38:	b	f24 <ctf_serialize+0x7f8>
     d3c:	ldr	w0, [sp, #932]
     d40:	cmp	w0, #0x4
     d44:	b.eq	df4 <ctf_serialize+0x6c8>  // b.none
     d48:	b	f24 <ctf_serialize+0x7f8>
     d4c:	ldr	w0, [sp, #932]
     d50:	cmp	w0, #0x1
     d54:	b.ne	d88 <ctf_serialize+0x65c>  // b.any
     d58:	ldr	x0, [sp, #1048]
     d5c:	ldr	w0, [x0, #48]
     d60:	lsl	w1, w0, #24
     d64:	ldr	x0, [sp, #1048]
     d68:	ldr	w0, [x0, #52]
     d6c:	lsl	w0, w0, #16
     d70:	orr	w1, w1, w0
     d74:	ldr	x0, [sp, #1048]
     d78:	ldr	w0, [x0, #56]
     d7c:	orr	w0, w1, w0
     d80:	str	w0, [sp, #52]
     d84:	b	db4 <ctf_serialize+0x688>
     d88:	ldr	x0, [sp, #1048]
     d8c:	ldr	w0, [x0, #48]
     d90:	lsl	w1, w0, #24
     d94:	ldr	x0, [sp, #1048]
     d98:	ldr	w0, [x0, #52]
     d9c:	lsl	w0, w0, #16
     da0:	orr	w1, w1, w0
     da4:	ldr	x0, [sp, #1048]
     da8:	ldr	w0, [x0, #56]
     dac:	orr	w0, w1, w0
     db0:	str	w0, [sp, #52]
     db4:	ldr	w1, [sp, #52]
     db8:	ldr	x0, [sp, #1032]
     dbc:	str	w1, [x0]
     dc0:	ldr	x0, [sp, #1032]
     dc4:	add	x0, x0, #0x4
     dc8:	str	x0, [sp, #1032]
     dcc:	b	f24 <ctf_serialize+0x7f8>
     dd0:	ldr	x0, [sp, #1048]
     dd4:	add	x0, x0, #0x30
     dd8:	ldr	x1, [x0]
     ddc:	ldr	x0, [sp, #1032]
     de0:	str	x1, [x0]
     de4:	ldr	x0, [sp, #1032]
     de8:	add	x0, x0, #0x8
     dec:	str	x0, [sp, #1032]
     df0:	b	f24 <ctf_serialize+0x7f8>
     df4:	ldr	x0, [sp, #1048]
     df8:	ldr	x0, [x0, #48]
     dfc:	str	w0, [sp, #56]
     e00:	ldr	x0, [sp, #1048]
     e04:	ldr	x0, [x0, #56]
     e08:	str	w0, [sp, #60]
     e0c:	ldr	x0, [sp, #1048]
     e10:	ldr	w0, [x0, #64]
     e14:	str	w0, [sp, #64]
     e18:	ldr	x0, [sp, #1032]
     e1c:	mov	x1, x0
     e20:	add	x0, sp, #0x38
     e24:	ldr	x2, [x0]
     e28:	str	x2, [x1]
     e2c:	ldr	w0, [x0, #8]
     e30:	str	w0, [x1, #8]
     e34:	ldr	x0, [sp, #1032]
     e38:	add	x0, x0, #0xc
     e3c:	str	x0, [sp, #1032]
     e40:	b	f24 <ctf_serialize+0x7f8>
     e44:	ldr	x0, [sp, #1032]
     e48:	str	x0, [sp, #992]
     e4c:	str	wzr, [sp, #988]
     e50:	b	e8c <ctf_serialize+0x760>
     e54:	ldr	x0, [sp, #1048]
     e58:	ldr	x1, [x0, #48]
     e5c:	ldr	w0, [sp, #988]
     e60:	lsl	x0, x0, #3
     e64:	add	x0, x1, x0
     e68:	ldr	x2, [x0]
     e6c:	ldr	x0, [sp, #992]
     e70:	add	x1, x0, #0x4
     e74:	str	x1, [sp, #992]
     e78:	mov	w1, w2
     e7c:	str	w1, [x0]
     e80:	ldr	w0, [sp, #988]
     e84:	add	w0, w0, #0x1
     e88:	str	w0, [sp, #988]
     e8c:	ldr	w1, [sp, #988]
     e90:	ldr	w0, [sp, #928]
     e94:	cmp	w1, w0
     e98:	b.cc	e54 <ctf_serialize+0x728>  // b.lo, b.ul, b.last
     e9c:	ldr	w0, [sp, #928]
     ea0:	and	w0, w0, #0x1
     ea4:	cmp	w0, #0x0
     ea8:	b.eq	ebc <ctf_serialize+0x790>  // b.none
     eac:	ldr	x0, [sp, #992]
     eb0:	add	x1, x0, #0x4
     eb4:	str	x1, [sp, #992]
     eb8:	str	wzr, [x0]
     ebc:	ldr	x0, [sp, #992]
     ec0:	str	x0, [sp, #1032]
     ec4:	b	f24 <ctf_serialize+0x7f8>
     ec8:	ldr	x0, [sp, #1048]
     ecc:	ldr	w1, [x0, #32]
     ed0:	mov	w0, #0x1fffffff            	// #536870911
     ed4:	cmp	w1, w0
     ed8:	b.hi	ef4 <ctf_serialize+0x7c8>  // b.pmore
     edc:	ldr	x2, [sp, #1032]
     ee0:	ldr	x1, [sp, #1048]
     ee4:	ldr	x0, [sp, #40]
     ee8:	bl	43c <ctf_copy_smembers>
     eec:	str	x0, [sp, #1032]
     ef0:	b	f24 <ctf_serialize+0x7f8>
     ef4:	ldr	x2, [sp, #1032]
     ef8:	ldr	x1, [sp, #1048]
     efc:	ldr	x0, [sp, #40]
     f00:	bl	4fc <ctf_copy_lmembers>
     f04:	str	x0, [sp, #1032]
     f08:	b	f24 <ctf_serialize+0x7f8>
     f0c:	ldr	x2, [sp, #1032]
     f10:	ldr	x1, [sp, #1048]
     f14:	ldr	x0, [sp, #40]
     f18:	bl	5bc <ctf_copy_emembers>
     f1c:	str	x0, [sp, #1032]
     f20:	nop
     f24:	ldr	x0, [sp, #1048]
     f28:	ldr	x0, [x0, #8]
     f2c:	str	x0, [sp, #1048]
     f30:	ldr	x0, [sp, #1048]
     f34:	cmp	x0, #0x0
     f38:	b.ne	bec <ctf_serialize+0x4c0>  // b.any
     f3c:	ldr	w0, [sp, #156]
     f40:	mov	w0, w0
     f44:	add	x0, x0, #0x34
     f48:	ldr	x1, [sp, #968]
     f4c:	add	x0, x1, x0
     f50:	ldr	x1, [sp, #1032]
     f54:	cmp	x1, x0
     f58:	b.eq	f7c <ctf_serialize+0x850>  // b.none
     f5c:	adrp	x0, 0 <ctf_qsort_r>
     f60:	add	x3, x0, #0x0
     f64:	mov	w2, #0x1d8                 	// #472
     f68:	adrp	x0, 0 <ctf_qsort_r>
     f6c:	add	x1, x0, #0x0
     f70:	adrp	x0, 0 <ctf_qsort_r>
     f74:	add	x0, x0, #0x0
     f78:	bl	0 <__assert_fail>
     f7c:	ldr	x0, [sp, #40]
     f80:	bl	0 <ctf_str_write_strtab>
     f84:	stp	x0, x1, [sp, #96]
     f88:	ldr	x0, [sp, #40]
     f8c:	bl	0 <ctf_str_purge_refs>
     f90:	ldr	x0, [sp, #96]
     f94:	cmp	x0, #0x0
     f98:	b.ne	fb4 <ctf_serialize+0x888>  // b.any
     f9c:	ldr	x0, [sp, #968]
     fa0:	bl	0 <free>
     fa4:	mov	w1, #0xb                   	// #11
     fa8:	ldr	x0, [sp, #40]
     fac:	bl	0 <ctf_set_errno>
     fb0:	b	1430 <ctf_serialize+0xd04>
     fb4:	ldr	x0, [sp, #40]
     fb8:	str	x0, [sp, #72]
     fbc:	add	x0, sp, #0x60
     fc0:	str	x0, [sp, #80]
     fc4:	add	x0, sp, #0x48
     fc8:	mov	x4, x0
     fcc:	adrp	x0, 0 <ctf_qsort_r>
     fd0:	add	x3, x0, #0x0
     fd4:	mov	x2, #0x8                   	// #8
     fd8:	ldr	x1, [sp, #1008]
     fdc:	ldr	x0, [sp, #952]
     fe0:	bl	0 <ctf_qsort_r>
     fe4:	ldr	x1, [sp, #104]
     fe8:	ldr	x0, [sp, #976]
     fec:	add	x0, x1, x0
     ff0:	mov	x2, x0
     ff4:	ldr	x1, [sp, #968]
     ff8:	ldr	x0, [sp, #40]
     ffc:	bl	0 <ctf_realloc>
    1000:	str	x0, [sp, #944]
    1004:	ldr	x0, [sp, #944]
    1008:	cmp	x0, #0x0
    100c:	b.ne	1030 <ctf_serialize+0x904>  // b.any
    1010:	ldr	x0, [sp, #968]
    1014:	bl	0 <free>
    1018:	ldr	x0, [sp, #96]
    101c:	bl	0 <free>
    1020:	mov	w1, #0xb                   	// #11
    1024:	ldr	x0, [sp, #40]
    1028:	bl	0 <ctf_set_errno>
    102c:	b	1430 <ctf_serialize+0xd04>
    1030:	ldr	x0, [sp, #944]
    1034:	str	x0, [sp, #968]
    1038:	ldr	x1, [sp, #968]
    103c:	ldr	x0, [sp, #976]
    1040:	add	x0, x1, x0
    1044:	ldr	x1, [sp, #96]
    1048:	ldr	x2, [sp, #104]
    104c:	bl	0 <memcpy>
    1050:	ldr	x0, [sp, #968]
    1054:	str	x0, [sp, #960]
    1058:	ldr	x0, [sp, #104]
    105c:	mov	w1, w0
    1060:	ldr	x0, [sp, #960]
    1064:	str	w1, [x0, #48]
    1068:	ldr	x0, [sp, #960]
    106c:	ldr	w0, [x0, #48]
    1070:	mov	w0, w0
    1074:	ldr	x1, [sp, #976]
    1078:	add	x0, x1, x0
    107c:	str	x0, [sp, #976]
    1080:	ldr	x0, [sp, #96]
    1084:	bl	0 <free>
    1088:	ldr	x0, [sp, #40]
    108c:	ldr	x1, [x0, #128]
    1090:	add	x0, sp, #0x5c
    1094:	str	x0, [sp, #8]
    1098:	mov	w0, #0x1                   	// #1
    109c:	str	w0, [sp]
    10a0:	mov	x7, x1
    10a4:	mov	x6, #0x0                   	// #0
    10a8:	mov	x5, #0x0                   	// #0
    10ac:	mov	x4, #0x0                   	// #0
    10b0:	mov	x3, #0x0                   	// #0
    10b4:	mov	x2, #0x0                   	// #0
    10b8:	ldr	x1, [sp, #976]
    10bc:	ldr	x0, [sp, #968]
    10c0:	bl	0 <ctf_simple_open_internal>
    10c4:	str	x0, [sp, #936]
    10c8:	ldr	x0, [sp, #936]
    10cc:	cmp	x0, #0x0
    10d0:	b.ne	10f0 <ctf_serialize+0x9c4>  // b.any
    10d4:	ldr	x0, [sp, #968]
    10d8:	bl	0 <free>
    10dc:	ldr	w0, [sp, #92]
    10e0:	mov	w1, w0
    10e4:	ldr	x0, [sp, #40]
    10e8:	bl	0 <ctf_set_errno>
    10ec:	b	1430 <ctf_serialize+0xd04>
    10f0:	ldr	x0, [sp, #40]
    10f4:	bl	0 <ctf_getmodel>
    10f8:	mov	w1, w0
    10fc:	ldr	x0, [sp, #936]
    1100:	bl	0 <ctf_setmodel>
    1104:	ldr	x0, [sp, #40]
    1108:	ldr	x0, [x0, #512]
    110c:	mov	x1, x0
    1110:	ldr	x0, [sp, #936]
    1114:	bl	0 <ctf_import>
    1118:	ldr	x0, [sp, #40]
    111c:	ldr	w1, [x0, #548]
    1120:	ldr	x0, [sp, #936]
    1124:	str	w1, [x0, #548]
    1128:	ldr	x0, [sp, #936]
    112c:	ldr	w1, [x0, #552]
    1130:	ldr	x0, [sp, #40]
    1134:	ldr	w0, [x0, #552]
    1138:	and	w0, w0, #0xfffffffb
    113c:	orr	w1, w1, w0
    1140:	ldr	x0, [sp, #936]
    1144:	str	w1, [x0, #552]
    1148:	ldr	x0, [sp, #936]
    114c:	ldr	x0, [x0, #400]
    1150:	cmp	x0, #0x0
    1154:	b.ne	1164 <ctf_serialize+0xa38>  // b.any
    1158:	ldr	x0, [sp, #936]
    115c:	ldr	x1, [sp, #968]
    1160:	str	x1, [x0, #400]
    1164:	ldr	x0, [sp, #40]
    1168:	ldr	x1, [x0, #568]
    116c:	ldr	x0, [sp, #936]
    1170:	str	x1, [x0, #568]
    1174:	ldr	x0, [sp, #936]
    1178:	add	x2, x0, #0x200
    117c:	ldr	x0, [sp, #40]
    1180:	add	x0, x0, #0x200
    1184:	ldp	x0, x1, [x0, #64]
    1188:	stp	x0, x1, [x2, #64]
    118c:	ldr	x0, [sp, #40]
    1190:	ldr	x1, [x0, #592]
    1194:	ldr	x0, [sp, #936]
    1198:	str	x1, [x0, #592]
    119c:	ldr	x0, [sp, #936]
    11a0:	add	x2, x0, #0x200
    11a4:	ldr	x0, [sp, #40]
    11a8:	add	x0, x0, #0x200
    11ac:	ldp	x0, x1, [x0, #88]
    11b0:	stp	x0, x1, [x2, #88]
    11b4:	ldr	x0, [sp, #40]
    11b8:	ldr	x1, [x0, #616]
    11bc:	ldr	x0, [sp, #936]
    11c0:	str	x1, [x0, #616]
    11c4:	ldr	x0, [sp, #40]
    11c8:	ldr	x1, [x0, #696]
    11cc:	ldr	x0, [sp, #936]
    11d0:	str	x1, [x0, #696]
    11d4:	ldr	x0, [sp, #40]
    11d8:	ldr	x0, [x0, #624]
    11dc:	add	x1, x0, #0x1
    11e0:	ldr	x0, [sp, #936]
    11e4:	str	x1, [x0, #624]
    11e8:	ldr	x0, [sp, #40]
    11ec:	ldr	x1, [x0, #720]
    11f0:	ldr	x0, [sp, #936]
    11f4:	str	x1, [x0, #720]
    11f8:	ldr	x0, [sp, #40]
    11fc:	ldr	x1, [x0, #448]
    1200:	ldr	x0, [sp, #936]
    1204:	str	x1, [x0, #448]
    1208:	ldr	x0, [sp, #40]
    120c:	ldr	x1, [x0, #456]
    1210:	ldr	x0, [sp, #936]
    1214:	str	x1, [x0, #456]
    1218:	ldr	x0, [sp, #40]
    121c:	ldr	x1, [x0, #648]
    1220:	ldr	x0, [sp, #936]
    1224:	str	x1, [x0, #648]
    1228:	ldr	x0, [sp, #40]
    122c:	ldr	x1, [x0, #656]
    1230:	ldr	x0, [sp, #936]
    1234:	str	x1, [x0, #656]
    1238:	ldr	x0, [sp, #40]
    123c:	ldr	w1, [x0, #384]
    1240:	ldr	x0, [sp, #936]
    1244:	str	w1, [x0, #384]
    1248:	ldr	x0, [sp, #40]
    124c:	ldr	x1, [x0, #128]
    1250:	ldr	x0, [sp, #936]
    1254:	str	x1, [x0, #128]
    1258:	ldr	x0, [sp, #40]
    125c:	ldr	x1, [x0, #672]
    1260:	ldr	x0, [sp, #936]
    1264:	str	x1, [x0, #672]
    1268:	ldr	x0, [sp, #40]
    126c:	ldr	x1, [x0, #664]
    1270:	ldr	x0, [sp, #936]
    1274:	str	x1, [x0, #664]
    1278:	ldr	x0, [sp, #40]
    127c:	ldr	x1, [x0, #680]
    1280:	ldr	x0, [sp, #936]
    1284:	str	x1, [x0, #680]
    1288:	ldr	x0, [sp, #40]
    128c:	ldr	x1, [x0, #688]
    1290:	ldr	x0, [sp, #936]
    1294:	str	x1, [x0, #688]
    1298:	ldr	x0, [sp, #40]
    129c:	ldr	x1, [x0, #624]
    12a0:	ldr	x0, [sp, #936]
    12a4:	str	x1, [x0, #632]
    12a8:	ldr	x0, [sp, #936]
    12ac:	add	x3, x0, #0xd8
    12b0:	ldr	x0, [sp, #40]
    12b4:	add	x0, x0, #0xd8
    12b8:	mov	x2, #0x78                  	// #120
    12bc:	mov	x1, x0
    12c0:	mov	x0, x3
    12c4:	bl	0 <memcpy>
    12c8:	ldr	x2, [sp, #936]
    12cc:	ldr	x0, [sp, #40]
    12d0:	ldp	x0, x1, [x0, #152]
    12d4:	stp	x0, x1, [x2, #152]
    12d8:	ldr	x2, [sp, #936]
    12dc:	ldr	x0, [sp, #40]
    12e0:	ldp	x0, x1, [x0, #168]
    12e4:	stp	x0, x1, [x2, #168]
    12e8:	ldr	x2, [sp, #936]
    12ec:	ldr	x0, [sp, #40]
    12f0:	ldp	x0, x1, [x0, #184]
    12f4:	stp	x0, x1, [x2, #184]
    12f8:	ldr	x2, [sp, #936]
    12fc:	ldr	x0, [sp, #40]
    1300:	ldp	x0, x1, [x0, #200]
    1304:	stp	x0, x1, [x2, #200]
    1308:	ldr	x0, [sp, #40]
    130c:	str	xzr, [x0, #568]
    1310:	ldr	x0, [sp, #936]
    1314:	bl	0 <ctf_str_free_atoms>
    1318:	ldr	x0, [sp, #40]
    131c:	ldr	x1, [x0, #368]
    1320:	ldr	x0, [sp, #936]
    1324:	str	x1, [x0, #368]
    1328:	ldr	x0, [sp, #40]
    132c:	ldr	x1, [x0, #120]
    1330:	ldr	x0, [sp, #936]
    1334:	str	x1, [x0, #120]
    1338:	ldr	x0, [sp, #40]
    133c:	str	xzr, [x0, #368]
    1340:	ldr	x0, [sp, #40]
    1344:	str	xzr, [x0, #120]
    1348:	ldr	x0, [sp, #40]
    134c:	add	x0, x0, #0x240
    1350:	mov	x2, #0x10                  	// #16
    1354:	mov	w1, #0x0                   	// #0
    1358:	bl	0 <memset>
    135c:	ldr	x0, [sp, #40]
    1360:	str	xzr, [x0, #696]
    1364:	ldr	x0, [sp, #40]
    1368:	str	xzr, [x0, #448]
    136c:	ldr	x0, [sp, #40]
    1370:	str	xzr, [x0, #648]
    1374:	ldr	x0, [sp, #40]
    1378:	str	xzr, [x0, #656]
    137c:	ldr	x0, [sp, #40]
    1380:	str	xzr, [x0, #128]
    1384:	ldr	x0, [sp, #40]
    1388:	str	xzr, [x0, #672]
    138c:	ldr	x0, [sp, #40]
    1390:	str	xzr, [x0, #664]
    1394:	ldr	x0, [sp, #40]
    1398:	str	xzr, [x0, #592]
    139c:	ldr	x0, [sp, #40]
    13a0:	add	x0, x0, #0x258
    13a4:	mov	x2, #0x10                  	// #16
    13a8:	mov	w1, #0x0                   	// #0
    13ac:	bl	0 <memset>
    13b0:	ldr	x0, [sp, #40]
    13b4:	add	x0, x0, #0xd8
    13b8:	mov	x2, #0x78                  	// #120
    13bc:	mov	w1, #0x0                   	// #0
    13c0:	bl	0 <memset>
    13c4:	ldr	x0, [sp, #40]
    13c8:	str	xzr, [x0, #160]
    13cc:	ldr	x0, [sp, #40]
    13d0:	str	xzr, [x0, #176]
    13d4:	ldr	x0, [sp, #40]
    13d8:	str	xzr, [x0, #192]
    13dc:	ldr	x0, [sp, #40]
    13e0:	str	xzr, [x0, #208]
    13e4:	add	x0, sp, #0xa8
    13e8:	mov	x2, #0x2d8                 	// #728
    13ec:	ldr	x1, [sp, #40]
    13f0:	bl	0 <memcpy>
    13f4:	mov	x2, #0x2d8                 	// #728
    13f8:	ldr	x1, [sp, #936]
    13fc:	ldr	x0, [sp, #40]
    1400:	bl	0 <memcpy>
    1404:	add	x0, sp, #0xa8
    1408:	mov	x2, #0x2d8                 	// #728
    140c:	mov	x1, x0
    1410:	ldr	x0, [sp, #936]
    1414:	bl	0 <memcpy>
    1418:	ldr	x0, [sp, #936]
    141c:	mov	w1, #0x1                   	// #1
    1420:	str	w1, [x0, #548]
    1424:	ldr	x0, [sp, #936]
    1428:	bl	0 <ctf_file_close>
    142c:	mov	w0, #0x0                   	// #0
    1430:	ldp	x29, x30, [sp, #16]
    1434:	add	sp, sp, #0x420
    1438:	ret

000000000000143c <ctf_name_table>:
    143c:	sub	sp, sp, #0x10
    1440:	str	x0, [sp, #8]
    1444:	str	w1, [sp, #4]
    1448:	ldr	w0, [sp, #4]
    144c:	cmp	w0, #0x8
    1450:	b.eq	1494 <ctf_name_table+0x58>  // b.none
    1454:	ldr	w0, [sp, #4]
    1458:	cmp	w0, #0x8
    145c:	b.gt	14a0 <ctf_name_table+0x64>
    1460:	ldr	w0, [sp, #4]
    1464:	cmp	w0, #0x6
    1468:	b.eq	147c <ctf_name_table+0x40>  // b.none
    146c:	ldr	w0, [sp, #4]
    1470:	cmp	w0, #0x7
    1474:	b.eq	1488 <ctf_name_table+0x4c>  // b.none
    1478:	b	14a0 <ctf_name_table+0x64>
    147c:	ldr	x0, [sp, #8]
    1480:	add	x0, x0, #0x98
    1484:	b	14a8 <ctf_name_table+0x6c>
    1488:	ldr	x0, [sp, #8]
    148c:	add	x0, x0, #0xa8
    1490:	b	14a8 <ctf_name_table+0x6c>
    1494:	ldr	x0, [sp, #8]
    1498:	add	x0, x0, #0xb8
    149c:	b	14a8 <ctf_name_table+0x6c>
    14a0:	ldr	x0, [sp, #8]
    14a4:	add	x0, x0, #0xc8
    14a8:	add	sp, sp, #0x10
    14ac:	ret

00000000000014b0 <ctf_dtd_insert>:
    14b0:	stp	x29, x30, [sp, #-64]!
    14b4:	mov	x29, sp
    14b8:	str	x0, [sp, #40]
    14bc:	str	x1, [sp, #32]
    14c0:	str	w2, [sp, #28]
    14c4:	ldr	x0, [sp, #40]
    14c8:	ldr	x3, [x0, #568]
    14cc:	ldr	x0, [sp, #32]
    14d0:	ldr	x0, [x0, #16]
    14d4:	ldr	x2, [sp, #32]
    14d8:	mov	x1, x0
    14dc:	mov	x0, x3
    14e0:	bl	0 <ctf_dynhash_insert>
    14e4:	cmp	w0, #0x0
    14e8:	b.ge	14f4 <ctf_dtd_insert+0x44>  // b.tcont
    14ec:	mov	w0, #0xffffffff            	// #-1
    14f0:	b	1590 <ctf_dtd_insert+0xe0>
    14f4:	ldr	x0, [sp, #32]
    14f8:	ldr	w0, [x0, #24]
    14fc:	cmp	w0, #0x0
    1500:	b.eq	157c <ctf_dtd_insert+0xcc>  // b.none
    1504:	ldr	x0, [sp, #32]
    1508:	ldr	w0, [x0, #24]
    150c:	mov	w1, w0
    1510:	ldr	x0, [sp, #40]
    1514:	bl	0 <ctf_strraw>
    1518:	str	x0, [sp, #56]
    151c:	ldr	x0, [sp, #56]
    1520:	cmp	x0, #0x0
    1524:	b.eq	157c <ctf_dtd_insert+0xcc>  // b.none
    1528:	ldr	w1, [sp, #28]
    152c:	ldr	x0, [sp, #40]
    1530:	bl	143c <ctf_name_table>
    1534:	ldr	x3, [x0, #8]
    1538:	ldr	x0, [sp, #32]
    153c:	ldr	x0, [x0, #16]
    1540:	mov	x2, x0
    1544:	ldr	x1, [sp, #56]
    1548:	mov	x0, x3
    154c:	bl	0 <ctf_dynhash_insert>
    1550:	cmp	w0, #0x0
    1554:	b.ge	157c <ctf_dtd_insert+0xcc>  // b.tcont
    1558:	ldr	x0, [sp, #40]
    155c:	ldr	x2, [x0, #568]
    1560:	ldr	x0, [sp, #32]
    1564:	ldr	x0, [x0, #16]
    1568:	mov	x1, x0
    156c:	mov	x0, x2
    1570:	bl	0 <ctf_dynhash_remove>
    1574:	mov	w0, #0xffffffff            	// #-1
    1578:	b	1590 <ctf_dtd_insert+0xe0>
    157c:	ldr	x0, [sp, #40]
    1580:	add	x0, x0, #0x240
    1584:	ldr	x1, [sp, #32]
    1588:	bl	0 <ctf_list_append>
    158c:	mov	w0, #0x0                   	// #0
    1590:	ldp	x29, x30, [sp], #64
    1594:	ret

0000000000001598 <ctf_dtd_delete>:
    1598:	stp	x29, x30, [sp, #-64]!
    159c:	mov	x29, sp
    15a0:	str	x0, [sp, #24]
    15a4:	str	x1, [sp, #16]
    15a8:	ldr	x0, [sp, #24]
    15ac:	ldr	x0, [x0]
    15b0:	ldr	x1, [x0]
    15b4:	ldr	x0, [sp, #16]
    15b8:	ldr	w0, [x0, #28]
    15bc:	blr	x1
    15c0:	str	w0, [sp, #52]
    15c4:	ldr	x0, [sp, #24]
    15c8:	ldr	x2, [x0, #568]
    15cc:	ldr	x0, [sp, #16]
    15d0:	ldr	x0, [x0, #16]
    15d4:	mov	x1, x0
    15d8:	mov	x0, x2
    15dc:	bl	0 <ctf_dynhash_remove>
    15e0:	ldr	w0, [sp, #52]
    15e4:	cmp	w0, #0x5
    15e8:	b.eq	1660 <ctf_dtd_delete+0xc8>  // b.none
    15ec:	ldr	w0, [sp, #52]
    15f0:	cmp	w0, #0x5
    15f4:	b.lt	1670 <ctf_dtd_delete+0xd8>  // b.tstop
    15f8:	ldr	w0, [sp, #52]
    15fc:	sub	w0, w0, #0x6
    1600:	cmp	w0, #0x2
    1604:	b.hi	1670 <ctf_dtd_delete+0xd8>  // b.pmore
    1608:	ldr	x0, [sp, #16]
    160c:	ldr	x0, [x0, #56]
    1610:	str	x0, [sp, #56]
    1614:	b	1650 <ctf_dtd_delete+0xb8>
    1618:	ldr	x0, [sp, #56]
    161c:	ldr	x0, [x0, #16]
    1620:	cmp	x0, #0x0
    1624:	b.eq	1634 <ctf_dtd_delete+0x9c>  // b.none
    1628:	ldr	x0, [sp, #56]
    162c:	ldr	x0, [x0, #16]
    1630:	bl	0 <free>
    1634:	ldr	x0, [sp, #56]
    1638:	ldr	x0, [x0, #8]
    163c:	str	x0, [sp, #40]
    1640:	ldr	x0, [sp, #56]
    1644:	bl	0 <free>
    1648:	ldr	x0, [sp, #40]
    164c:	str	x0, [sp, #56]
    1650:	ldr	x0, [sp, #56]
    1654:	cmp	x0, #0x0
    1658:	b.ne	1618 <ctf_dtd_delete+0x80>  // b.any
    165c:	b	1670 <ctf_dtd_delete+0xd8>
    1660:	ldr	x0, [sp, #16]
    1664:	ldr	x0, [x0, #48]
    1668:	bl	0 <free>
    166c:	nop
    1670:	ldr	x0, [sp, #16]
    1674:	ldr	w0, [x0, #24]
    1678:	cmp	w0, #0x0
    167c:	b.eq	16d4 <ctf_dtd_delete+0x13c>  // b.none
    1680:	ldr	x0, [sp, #16]
    1684:	ldr	w0, [x0, #24]
    1688:	mov	w1, w0
    168c:	ldr	x0, [sp, #24]
    1690:	bl	0 <ctf_strraw>
    1694:	str	x0, [sp, #32]
    1698:	ldr	x0, [sp, #32]
    169c:	cmp	x0, #0x0
    16a0:	b.eq	16d4 <ctf_dtd_delete+0x13c>  // b.none
    16a4:	ldr	w1, [sp, #52]
    16a8:	ldr	x0, [sp, #24]
    16ac:	bl	143c <ctf_name_table>
    16b0:	ldr	x0, [x0, #8]
    16b4:	ldr	x1, [sp, #32]
    16b8:	bl	0 <ctf_dynhash_remove>
    16bc:	ldr	x0, [sp, #16]
    16c0:	add	x0, x0, #0x18
    16c4:	mov	x2, x0
    16c8:	ldr	x1, [sp, #32]
    16cc:	ldr	x0, [sp, #24]
    16d0:	bl	0 <ctf_str_remove_ref>
    16d4:	ldr	x0, [sp, #24]
    16d8:	add	x0, x0, #0x240
    16dc:	ldr	x1, [sp, #16]
    16e0:	bl	0 <ctf_list_delete>
    16e4:	ldr	x0, [sp, #16]
    16e8:	bl	0 <free>
    16ec:	nop
    16f0:	ldp	x29, x30, [sp], #64
    16f4:	ret

00000000000016f8 <ctf_dtd_lookup>:
    16f8:	stp	x29, x30, [sp, #-32]!
    16fc:	mov	x29, sp
    1700:	str	x0, [sp, #24]
    1704:	str	x1, [sp, #16]
    1708:	ldr	x0, [sp, #24]
    170c:	ldr	x0, [x0, #568]
    1710:	ldr	x1, [sp, #16]
    1714:	bl	0 <ctf_dynhash_lookup>
    1718:	ldp	x29, x30, [sp], #32
    171c:	ret

0000000000001720 <ctf_dynamic_type>:
    1720:	stp	x29, x30, [sp, #-48]!
    1724:	mov	x29, sp
    1728:	str	x0, [sp, #24]
    172c:	str	x1, [sp, #16]
    1730:	ldr	x0, [sp, #24]
    1734:	ldr	w0, [x0, #552]
    1738:	and	w0, w0, #0x2
    173c:	cmp	w0, #0x0
    1740:	b.ne	174c <ctf_dynamic_type+0x2c>  // b.any
    1744:	mov	x0, #0x0                   	// #0
    1748:	b	17c4 <ctf_dynamic_type+0xa4>
    174c:	ldr	x0, [sp, #24]
    1750:	ldr	w0, [x0, #552]
    1754:	and	w0, w0, #0x1
    1758:	cmp	w0, #0x0
    175c:	b.eq	1784 <ctf_dynamic_type+0x64>  // b.none
    1760:	ldr	x0, [sp, #24]
    1764:	ldr	w0, [x0, #544]
    1768:	mov	w0, w0
    176c:	ldr	x1, [sp, #16]
    1770:	cmp	x1, x0
    1774:	b.hi	1784 <ctf_dynamic_type+0x64>  // b.pmore
    1778:	ldr	x0, [sp, #24]
    177c:	ldr	x0, [x0, #512]
    1780:	str	x0, [sp, #24]
    1784:	ldr	x0, [sp, #24]
    1788:	ldr	w0, [x0, #544]
    178c:	mov	w0, w0
    1790:	ldr	x1, [sp, #16]
    1794:	and	x0, x1, x0
    1798:	str	x0, [sp, #40]
    179c:	ldr	x0, [sp, #24]
    17a0:	ldr	x0, [x0, #480]
    17a4:	ldr	x1, [sp, #40]
    17a8:	cmp	x1, x0
    17ac:	b.hi	17c0 <ctf_dynamic_type+0xa0>  // b.pmore
    17b0:	ldr	x1, [sp, #16]
    17b4:	ldr	x0, [sp, #24]
    17b8:	bl	16f8 <ctf_dtd_lookup>
    17bc:	b	17c4 <ctf_dynamic_type+0xa4>
    17c0:	mov	x0, #0x0                   	// #0
    17c4:	ldp	x29, x30, [sp], #48
    17c8:	ret

00000000000017cc <ctf_dvd_insert>:
    17cc:	stp	x29, x30, [sp, #-32]!
    17d0:	mov	x29, sp
    17d4:	str	x0, [sp, #24]
    17d8:	str	x1, [sp, #16]
    17dc:	ldr	x0, [sp, #24]
    17e0:	ldr	x3, [x0, #592]
    17e4:	ldr	x0, [sp, #16]
    17e8:	ldr	x0, [x0, #16]
    17ec:	ldr	x2, [sp, #16]
    17f0:	mov	x1, x0
    17f4:	mov	x0, x3
    17f8:	bl	0 <ctf_dynhash_insert>
    17fc:	cmp	w0, #0x0
    1800:	b.ge	180c <ctf_dvd_insert+0x40>  // b.tcont
    1804:	mov	w0, #0xffffffff            	// #-1
    1808:	b	1820 <ctf_dvd_insert+0x54>
    180c:	ldr	x0, [sp, #24]
    1810:	add	x0, x0, #0x258
    1814:	ldr	x1, [sp, #16]
    1818:	bl	0 <ctf_list_append>
    181c:	mov	w0, #0x0                   	// #0
    1820:	ldp	x29, x30, [sp], #32
    1824:	ret

0000000000001828 <ctf_dvd_delete>:
    1828:	stp	x29, x30, [sp, #-32]!
    182c:	mov	x29, sp
    1830:	str	x0, [sp, #24]
    1834:	str	x1, [sp, #16]
    1838:	ldr	x0, [sp, #24]
    183c:	ldr	x2, [x0, #592]
    1840:	ldr	x0, [sp, #16]
    1844:	ldr	x0, [x0, #16]
    1848:	mov	x1, x0
    184c:	mov	x0, x2
    1850:	bl	0 <ctf_dynhash_remove>
    1854:	ldr	x0, [sp, #16]
    1858:	ldr	x0, [x0, #16]
    185c:	bl	0 <free>
    1860:	ldr	x0, [sp, #24]
    1864:	add	x0, x0, #0x258
    1868:	ldr	x1, [sp, #16]
    186c:	bl	0 <ctf_list_delete>
    1870:	ldr	x0, [sp, #16]
    1874:	bl	0 <free>
    1878:	nop
    187c:	ldp	x29, x30, [sp], #32
    1880:	ret

0000000000001884 <ctf_dvd_lookup>:
    1884:	stp	x29, x30, [sp, #-32]!
    1888:	mov	x29, sp
    188c:	str	x0, [sp, #24]
    1890:	str	x1, [sp, #16]
    1894:	ldr	x0, [sp, #24]
    1898:	ldr	x0, [x0, #592]
    189c:	ldr	x1, [sp, #16]
    18a0:	bl	0 <ctf_dynhash_lookup>
    18a4:	ldp	x29, x30, [sp], #32
    18a8:	ret

00000000000018ac <ctf_discard>:
    18ac:	stp	x29, x30, [sp, #-48]!
    18b0:	mov	x29, sp
    18b4:	str	x0, [sp, #24]
    18b8:	ldr	x0, [sp, #24]
    18bc:	ldr	x0, [x0, #616]
    18c0:	str	x0, [sp, #32]
    18c4:	ldr	x0, [sp, #24]
    18c8:	ldr	x0, [x0, #632]
    18cc:	add	x0, x0, #0x1
    18d0:	str	x0, [sp, #40]
    18d4:	ldr	x0, [sp, #24]
    18d8:	ldr	w0, [x0, #552]
    18dc:	and	w0, w0, #0x4
    18e0:	cmp	w0, #0x0
    18e4:	b.ne	18f0 <ctf_discard+0x44>  // b.any
    18e8:	mov	w0, #0x0                   	// #0
    18ec:	b	18fc <ctf_discard+0x50>
    18f0:	ldp	x1, x2, [sp, #32]
    18f4:	ldr	x0, [sp, #24]
    18f8:	bl	193c <ctf_rollback>
    18fc:	ldp	x29, x30, [sp], #48
    1900:	ret

0000000000001904 <ctf_snapshot>:
    1904:	sub	sp, sp, #0x20
    1908:	str	x0, [sp, #8]
    190c:	ldr	x0, [sp, #8]
    1910:	ldr	x0, [x0, #480]
    1914:	str	x0, [sp, #16]
    1918:	ldr	x0, [sp, #8]
    191c:	ldr	x0, [x0, #624]
    1920:	add	x2, x0, #0x1
    1924:	ldr	x1, [sp, #8]
    1928:	str	x2, [x1, #624]
    192c:	str	x0, [sp, #24]
    1930:	ldp	x0, x1, [sp, #16]
    1934:	add	sp, sp, #0x20
    1938:	ret

000000000000193c <ctf_rollback>:
    193c:	stp	x29, x30, [sp, #-96]!
    1940:	mov	x29, sp
    1944:	str	x0, [sp, #40]
    1948:	stp	x1, x2, [sp, #24]
    194c:	ldr	x0, [sp, #40]
    1950:	ldr	w0, [x0, #552]
    1954:	and	w0, w0, #0x2
    1958:	cmp	w0, #0x0
    195c:	b.ne	1970 <ctf_rollback+0x34>  // b.any
    1960:	mov	w1, #0x40d                 	// #1037
    1964:	ldr	x0, [sp, #40]
    1968:	bl	0 <ctf_set_errno>
    196c:	b	1b38 <ctf_rollback+0x1fc>
    1970:	ldr	x0, [sp, #40]
    1974:	ldr	x1, [x0, #632]
    1978:	ldr	x0, [sp, #32]
    197c:	cmp	x1, x0
    1980:	b.cc	1994 <ctf_rollback+0x58>  // b.lo, b.ul, b.last
    1984:	mov	w1, #0x412                 	// #1042
    1988:	ldr	x0, [sp, #40]
    198c:	bl	0 <ctf_set_errno>
    1990:	b	1b38 <ctf_rollback+0x1fc>
    1994:	ldr	x0, [sp, #40]
    1998:	ldr	x0, [x0, #584]
    199c:	str	x0, [sp, #88]
    19a0:	b	1a8c <ctf_rollback+0x150>
    19a4:	ldr	x0, [sp, #88]
    19a8:	ldr	x0, [x0, #8]
    19ac:	str	x0, [sp, #64]
    19b0:	ldr	x0, [sp, #88]
    19b4:	ldr	x1, [x0, #16]
    19b8:	ldr	x0, [sp, #40]
    19bc:	ldr	w0, [x0, #544]
    19c0:	mov	w0, w0
    19c4:	and	x1, x1, x0
    19c8:	ldr	x0, [sp, #24]
    19cc:	cmp	x1, x0
    19d0:	b.ls	1a80 <ctf_rollback+0x144>  // b.plast
    19d4:	ldr	x0, [sp, #40]
    19d8:	ldr	x0, [x0]
    19dc:	ldr	x1, [x0]
    19e0:	ldr	x0, [sp, #88]
    19e4:	ldr	w0, [x0, #28]
    19e8:	blr	x1
    19ec:	str	w0, [sp, #60]
    19f0:	ldr	x0, [sp, #88]
    19f4:	ldr	w0, [x0, #24]
    19f8:	cmp	w0, #0x0
    19fc:	b.eq	1a54 <ctf_rollback+0x118>  // b.none
    1a00:	ldr	x0, [sp, #88]
    1a04:	ldr	w0, [x0, #24]
    1a08:	mov	w1, w0
    1a0c:	ldr	x0, [sp, #40]
    1a10:	bl	0 <ctf_strraw>
    1a14:	str	x0, [sp, #48]
    1a18:	ldr	x0, [sp, #48]
    1a1c:	cmp	x0, #0x0
    1a20:	b.eq	1a54 <ctf_rollback+0x118>  // b.none
    1a24:	ldr	w1, [sp, #60]
    1a28:	ldr	x0, [sp, #40]
    1a2c:	bl	143c <ctf_name_table>
    1a30:	ldr	x0, [x0, #8]
    1a34:	ldr	x1, [sp, #48]
    1a38:	bl	0 <ctf_dynhash_remove>
    1a3c:	ldr	x0, [sp, #88]
    1a40:	add	x0, x0, #0x18
    1a44:	mov	x2, x0
    1a48:	ldr	x1, [sp, #48]
    1a4c:	ldr	x0, [sp, #40]
    1a50:	bl	0 <ctf_str_remove_ref>
    1a54:	ldr	x0, [sp, #40]
    1a58:	ldr	x2, [x0, #568]
    1a5c:	ldr	x0, [sp, #88]
    1a60:	ldr	x0, [x0, #16]
    1a64:	mov	x1, x0
    1a68:	mov	x0, x2
    1a6c:	bl	0 <ctf_dynhash_remove>
    1a70:	ldr	x1, [sp, #88]
    1a74:	ldr	x0, [sp, #40]
    1a78:	bl	1598 <ctf_dtd_delete>
    1a7c:	b	1a84 <ctf_rollback+0x148>
    1a80:	nop
    1a84:	ldr	x0, [sp, #64]
    1a88:	str	x0, [sp, #88]
    1a8c:	ldr	x0, [sp, #88]
    1a90:	cmp	x0, #0x0
    1a94:	b.ne	19a4 <ctf_rollback+0x68>  // b.any
    1a98:	ldr	x0, [sp, #40]
    1a9c:	ldr	x0, [x0, #608]
    1aa0:	str	x0, [sp, #80]
    1aa4:	b	1ae4 <ctf_rollback+0x1a8>
    1aa8:	ldr	x0, [sp, #80]
    1aac:	ldr	x0, [x0, #8]
    1ab0:	str	x0, [sp, #72]
    1ab4:	ldr	x0, [sp, #80]
    1ab8:	ldr	x1, [x0, #32]
    1abc:	ldr	x0, [sp, #32]
    1ac0:	cmp	x1, x0
    1ac4:	b.ls	1ad8 <ctf_rollback+0x19c>  // b.plast
    1ac8:	ldr	x1, [sp, #80]
    1acc:	ldr	x0, [sp, #40]
    1ad0:	bl	1828 <ctf_dvd_delete>
    1ad4:	b	1adc <ctf_rollback+0x1a0>
    1ad8:	nop
    1adc:	ldr	x0, [sp, #72]
    1ae0:	str	x0, [sp, #80]
    1ae4:	ldr	x0, [sp, #80]
    1ae8:	cmp	x0, #0x0
    1aec:	b.ne	1aa8 <ctf_rollback+0x16c>  // b.any
    1af0:	ldr	x1, [sp, #24]
    1af4:	ldr	x0, [sp, #40]
    1af8:	str	x1, [x0, #480]
    1afc:	ldr	x1, [sp, #32]
    1b00:	ldr	x0, [sp, #40]
    1b04:	str	x1, [x0, #624]
    1b08:	ldr	x0, [sp, #40]
    1b0c:	ldr	x1, [x0, #624]
    1b10:	ldr	x0, [sp, #40]
    1b14:	ldr	x0, [x0, #632]
    1b18:	cmp	x1, x0
    1b1c:	b.ne	1b34 <ctf_rollback+0x1f8>  // b.any
    1b20:	ldr	x0, [sp, #40]
    1b24:	ldr	w0, [x0, #552]
    1b28:	and	w1, w0, #0xfffffffb
    1b2c:	ldr	x0, [sp, #40]
    1b30:	str	w1, [x0, #552]
    1b34:	mov	w0, #0x0                   	// #0
    1b38:	ldp	x29, x30, [sp], #96
    1b3c:	ret

0000000000001b40 <ctf_add_generic>:
    1b40:	stp	x29, x30, [sp, #-64]!
    1b44:	mov	x29, sp
    1b48:	str	x0, [sp, #40]
    1b4c:	str	w1, [sp, #36]
    1b50:	str	x2, [sp, #24]
    1b54:	str	w3, [sp, #32]
    1b58:	str	x4, [sp, #16]
    1b5c:	ldr	w0, [sp, #36]
    1b60:	cmp	w0, #0x0
    1b64:	b.eq	1b84 <ctf_add_generic+0x44>  // b.none
    1b68:	ldr	w0, [sp, #36]
    1b6c:	cmp	w0, #0x1
    1b70:	b.eq	1b84 <ctf_add_generic+0x44>  // b.none
    1b74:	mov	w1, #0x16                  	// #22
    1b78:	ldr	x0, [sp, #40]
    1b7c:	bl	0 <ctf_set_errno>
    1b80:	b	1d80 <ctf_add_generic+0x240>
    1b84:	ldr	x0, [sp, #40]
    1b88:	ldr	w0, [x0, #552]
    1b8c:	and	w0, w0, #0x2
    1b90:	cmp	w0, #0x0
    1b94:	b.ne	1ba8 <ctf_add_generic+0x68>  // b.any
    1b98:	mov	w1, #0x40d                 	// #1037
    1b9c:	ldr	x0, [sp, #40]
    1ba0:	bl	0 <ctf_set_errno>
    1ba4:	b	1d80 <ctf_add_generic+0x240>
    1ba8:	ldr	x0, [sp, #40]
    1bac:	ldr	x1, [x0, #480]
    1bb0:	ldr	x0, [sp, #40]
    1bb4:	ldr	w0, [x0, #544]
    1bb8:	add	w0, w0, #0x1
    1bbc:	mov	w0, w0
    1bc0:	orr	x1, x1, x0
    1bc4:	mov	w0, #0xfffffffd            	// #-3
    1bc8:	cmp	x1, x0
    1bcc:	b.ls	1be0 <ctf_add_generic+0xa0>  // b.plast
    1bd0:	mov	w1, #0x40f                 	// #1039
    1bd4:	ldr	x0, [sp, #40]
    1bd8:	bl	0 <ctf_set_errno>
    1bdc:	b	1d80 <ctf_add_generic+0x240>
    1be0:	ldr	x0, [sp, #40]
    1be4:	ldr	x1, [x0, #480]
    1be8:	ldr	x0, [sp, #40]
    1bec:	ldr	w0, [x0, #544]
    1bf0:	add	w0, w0, #0x1
    1bf4:	mov	w0, w0
    1bf8:	orr	x1, x1, x0
    1bfc:	mov	x0, #0x7ffffffe            	// #2147483646
    1c00:	cmp	x1, x0
    1c04:	b.ne	1c18 <ctf_add_generic+0xd8>  // b.any
    1c08:	mov	w1, #0x40f                 	// #1039
    1c0c:	ldr	x0, [sp, #40]
    1c10:	bl	0 <ctf_set_errno>
    1c14:	b	1d80 <ctf_add_generic+0x240>
    1c18:	ldr	x0, [sp, #40]
    1c1c:	bl	80 <ctf_grow_ptrtab>
    1c20:	cmp	w0, #0x0
    1c24:	b.ge	1c30 <ctf_add_generic+0xf0>  // b.tcont
    1c28:	mov	x0, #0xffffffffffffffff    	// #-1
    1c2c:	b	1d80 <ctf_add_generic+0x240>
    1c30:	mov	x0, #0x48                  	// #72
    1c34:	bl	0 <malloc>
    1c38:	str	x0, [sp, #56]
    1c3c:	ldr	x0, [sp, #56]
    1c40:	cmp	x0, #0x0
    1c44:	b.ne	1c58 <ctf_add_generic+0x118>  // b.any
    1c48:	mov	w1, #0xb                   	// #11
    1c4c:	ldr	x0, [sp, #40]
    1c50:	bl	0 <ctf_set_errno>
    1c54:	b	1d80 <ctf_add_generic+0x240>
    1c58:	ldr	x0, [sp, #40]
    1c5c:	ldr	x0, [x0, #480]
    1c60:	add	x1, x0, #0x1
    1c64:	ldr	x0, [sp, #40]
    1c68:	str	x1, [x0, #480]
    1c6c:	ldr	x0, [sp, #40]
    1c70:	ldr	x0, [x0, #480]
    1c74:	str	x0, [sp, #48]
    1c78:	ldr	x0, [sp, #40]
    1c7c:	ldr	w0, [x0, #552]
    1c80:	and	w0, w0, #0x1
    1c84:	cmp	w0, #0x0
    1c88:	b.eq	1ca8 <ctf_add_generic+0x168>  // b.none
    1c8c:	ldr	x0, [sp, #40]
    1c90:	ldr	w0, [x0, #544]
    1c94:	add	w0, w0, #0x1
    1c98:	mov	w1, w0
    1c9c:	ldr	x0, [sp, #48]
    1ca0:	orr	x0, x1, x0
    1ca4:	b	1cac <ctf_add_generic+0x16c>
    1ca8:	ldr	x0, [sp, #48]
    1cac:	str	x0, [sp, #48]
    1cb0:	mov	x2, #0x48                  	// #72
    1cb4:	mov	w1, #0x0                   	// #0
    1cb8:	ldr	x0, [sp, #56]
    1cbc:	bl	0 <memset>
    1cc0:	ldr	x0, [sp, #56]
    1cc4:	add	x0, x0, #0x18
    1cc8:	mov	x2, x0
    1ccc:	ldr	x1, [sp, #24]
    1cd0:	ldr	x0, [sp, #40]
    1cd4:	bl	0 <ctf_str_add_ref>
    1cd8:	mov	w1, w0
    1cdc:	ldr	x0, [sp, #56]
    1ce0:	str	w1, [x0, #24]
    1ce4:	ldr	x0, [sp, #56]
    1ce8:	ldr	x1, [sp, #48]
    1cec:	str	x1, [x0, #16]
    1cf0:	ldr	x0, [sp, #56]
    1cf4:	ldr	w0, [x0, #24]
    1cf8:	cmp	w0, #0x0
    1cfc:	b.ne	1d34 <ctf_add_generic+0x1f4>  // b.any
    1d00:	ldr	x0, [sp, #24]
    1d04:	cmp	x0, #0x0
    1d08:	b.eq	1d34 <ctf_add_generic+0x1f4>  // b.none
    1d0c:	ldr	x0, [sp, #24]
    1d10:	ldrb	w0, [x0]
    1d14:	cmp	w0, #0x0
    1d18:	b.eq	1d34 <ctf_add_generic+0x1f4>  // b.none
    1d1c:	ldr	x0, [sp, #56]
    1d20:	bl	0 <free>
    1d24:	mov	w1, #0xb                   	// #11
    1d28:	ldr	x0, [sp, #40]
    1d2c:	bl	0 <ctf_set_errno>
    1d30:	b	1d80 <ctf_add_generic+0x240>
    1d34:	ldr	w2, [sp, #32]
    1d38:	ldr	x1, [sp, #56]
    1d3c:	ldr	x0, [sp, #40]
    1d40:	bl	14b0 <ctf_dtd_insert>
    1d44:	cmp	w0, #0x0
    1d48:	b.ge	1d5c <ctf_add_generic+0x21c>  // b.tcont
    1d4c:	ldr	x0, [sp, #56]
    1d50:	bl	0 <free>
    1d54:	mov	x0, #0xffffffffffffffff    	// #-1
    1d58:	b	1d80 <ctf_add_generic+0x240>
    1d5c:	ldr	x0, [sp, #40]
    1d60:	ldr	w0, [x0, #552]
    1d64:	orr	w1, w0, #0x4
    1d68:	ldr	x0, [sp, #40]
    1d6c:	str	w1, [x0, #552]
    1d70:	ldr	x0, [sp, #16]
    1d74:	ldr	x1, [sp, #56]
    1d78:	str	x1, [x0]
    1d7c:	ldr	x0, [sp, #48]
    1d80:	ldp	x29, x30, [sp], #64
    1d84:	ret

0000000000001d88 <clp2>:
    1d88:	sub	sp, sp, #0x10
    1d8c:	str	x0, [sp, #8]
    1d90:	ldr	x0, [sp, #8]
    1d94:	sub	x0, x0, #0x1
    1d98:	str	x0, [sp, #8]
    1d9c:	ldr	x0, [sp, #8]
    1da0:	lsr	x0, x0, #1
    1da4:	ldr	x1, [sp, #8]
    1da8:	orr	x0, x1, x0
    1dac:	str	x0, [sp, #8]
    1db0:	ldr	x0, [sp, #8]
    1db4:	lsr	x0, x0, #2
    1db8:	ldr	x1, [sp, #8]
    1dbc:	orr	x0, x1, x0
    1dc0:	str	x0, [sp, #8]
    1dc4:	ldr	x0, [sp, #8]
    1dc8:	lsr	x0, x0, #4
    1dcc:	ldr	x1, [sp, #8]
    1dd0:	orr	x0, x1, x0
    1dd4:	str	x0, [sp, #8]
    1dd8:	ldr	x0, [sp, #8]
    1ddc:	lsr	x0, x0, #8
    1de0:	ldr	x1, [sp, #8]
    1de4:	orr	x0, x1, x0
    1de8:	str	x0, [sp, #8]
    1dec:	ldr	x0, [sp, #8]
    1df0:	lsr	x0, x0, #16
    1df4:	ldr	x1, [sp, #8]
    1df8:	orr	x0, x1, x0
    1dfc:	str	x0, [sp, #8]
    1e00:	ldr	x0, [sp, #8]
    1e04:	add	x0, x0, #0x1
    1e08:	add	sp, sp, #0x10
    1e0c:	ret

0000000000001e10 <ctf_add_encoded>:
    1e10:	stp	x29, x30, [sp, #-64]!
    1e14:	mov	x29, sp
    1e18:	str	x0, [sp, #40]
    1e1c:	str	w1, [sp, #36]
    1e20:	str	x2, [sp, #24]
    1e24:	str	x3, [sp, #16]
    1e28:	str	w4, [sp, #32]
    1e2c:	ldr	x0, [sp, #16]
    1e30:	cmp	x0, #0x0
    1e34:	b.ne	1e48 <ctf_add_encoded+0x38>  // b.any
    1e38:	mov	w1, #0x16                  	// #22
    1e3c:	ldr	x0, [sp, #40]
    1e40:	bl	0 <ctf_set_errno>
    1e44:	b	1ef8 <ctf_add_encoded+0xe8>
    1e48:	ldr	w0, [sp, #32]
    1e4c:	add	x1, sp, #0x30
    1e50:	mov	x4, x1
    1e54:	mov	w3, w0
    1e58:	ldr	x2, [sp, #24]
    1e5c:	ldr	w1, [sp, #36]
    1e60:	ldr	x0, [sp, #40]
    1e64:	bl	1b40 <ctf_add_generic>
    1e68:	str	x0, [sp, #56]
    1e6c:	ldr	x0, [sp, #56]
    1e70:	cmn	x0, #0x1
    1e74:	b.ne	1e80 <ctf_add_encoded+0x70>  // b.any
    1e78:	mov	x0, #0xffffffffffffffff    	// #-1
    1e7c:	b	1ef8 <ctf_add_encoded+0xe8>
    1e80:	ldr	w0, [sp, #32]
    1e84:	lsl	w2, w0, #26
    1e88:	ldr	w0, [sp, #36]
    1e8c:	cmp	w0, #0x0
    1e90:	b.eq	1e9c <ctf_add_encoded+0x8c>  // b.none
    1e94:	mov	w0, #0x2000000             	// #33554432
    1e98:	b	1ea0 <ctf_add_encoded+0x90>
    1e9c:	mov	w0, #0x0                   	// #0
    1ea0:	ldr	x1, [sp, #48]
    1ea4:	orr	w0, w0, w2
    1ea8:	str	w0, [x1, #28]
    1eac:	ldr	x0, [sp, #16]
    1eb0:	ldr	w0, [x0, #8]
    1eb4:	neg	w0, w0
    1eb8:	and	w0, w0, #0xfffffff8
    1ebc:	neg	w0, w0
    1ec0:	lsr	w0, w0, #3
    1ec4:	mov	w0, w0
    1ec8:	bl	1d88 <clp2>
    1ecc:	mov	x1, x0
    1ed0:	ldr	x0, [sp, #48]
    1ed4:	str	w1, [x0, #32]
    1ed8:	ldr	x0, [sp, #48]
    1edc:	add	x0, x0, #0x30
    1ee0:	ldr	x1, [sp, #16]
    1ee4:	ldr	x2, [x1]
    1ee8:	str	x2, [x0]
    1eec:	ldr	w1, [x1, #8]
    1ef0:	str	w1, [x0, #8]
    1ef4:	ldr	x0, [sp, #56]
    1ef8:	ldp	x29, x30, [sp], #64
    1efc:	ret

0000000000001f00 <ctf_add_reftype>:
    1f00:	stp	x29, x30, [sp, #-96]!
    1f04:	mov	x29, sp
    1f08:	str	x0, [sp, #40]
    1f0c:	str	w1, [sp, #36]
    1f10:	str	x2, [sp, #24]
    1f14:	str	w3, [sp, #32]
    1f18:	ldr	x0, [sp, #40]
    1f1c:	str	x0, [sp, #48]
    1f20:	ldr	x0, [sp, #40]
    1f24:	ldr	w0, [x0, #552]
    1f28:	and	w0, w0, #0x1
    1f2c:	str	w0, [sp, #92]
    1f30:	ldr	x0, [sp, #24]
    1f34:	cmn	x0, #0x1
    1f38:	b.eq	1f4c <ctf_add_reftype+0x4c>  // b.none
    1f3c:	ldr	x1, [sp, #24]
    1f40:	mov	x0, #0xfffffffe            	// #4294967294
    1f44:	cmp	x1, x0
    1f48:	b.ls	1f5c <ctf_add_reftype+0x5c>  // b.plast
    1f4c:	mov	w1, #0x16                  	// #22
    1f50:	ldr	x0, [sp, #40]
    1f54:	bl	0 <ctf_set_errno>
    1f58:	b	2120 <ctf_add_reftype+0x220>
    1f5c:	add	x0, sp, #0x30
    1f60:	ldr	x1, [sp, #24]
    1f64:	bl	0 <ctf_lookup_by_id>
    1f68:	cmp	x0, #0x0
    1f6c:	b.ne	1f78 <ctf_add_reftype+0x78>  // b.any
    1f70:	mov	x0, #0xffffffffffffffff    	// #-1
    1f74:	b	2120 <ctf_add_reftype+0x220>
    1f78:	ldr	w0, [sp, #32]
    1f7c:	add	x1, sp, #0x38
    1f80:	mov	x4, x1
    1f84:	mov	w3, w0
    1f88:	mov	x2, #0x0                   	// #0
    1f8c:	ldr	w1, [sp, #36]
    1f90:	ldr	x0, [sp, #40]
    1f94:	bl	1b40 <ctf_add_generic>
    1f98:	str	x0, [sp, #80]
    1f9c:	ldr	x0, [sp, #80]
    1fa0:	cmn	x0, #0x1
    1fa4:	b.ne	1fb0 <ctf_add_reftype+0xb0>  // b.any
    1fa8:	mov	x0, #0xffffffffffffffff    	// #-1
    1fac:	b	2120 <ctf_add_reftype+0x220>
    1fb0:	ldr	w0, [sp, #32]
    1fb4:	lsl	w2, w0, #26
    1fb8:	ldr	w0, [sp, #36]
    1fbc:	cmp	w0, #0x0
    1fc0:	b.eq	1fcc <ctf_add_reftype+0xcc>  // b.none
    1fc4:	mov	w0, #0x2000000             	// #33554432
    1fc8:	b	1fd0 <ctf_add_reftype+0xd0>
    1fcc:	mov	w0, #0x0                   	// #0
    1fd0:	ldr	x1, [sp, #56]
    1fd4:	orr	w0, w0, w2
    1fd8:	str	w0, [x1, #28]
    1fdc:	ldr	x0, [sp, #56]
    1fe0:	ldr	x1, [sp, #24]
    1fe4:	str	w1, [x0, #32]
    1fe8:	ldr	w0, [sp, #32]
    1fec:	cmp	w0, #0x3
    1ff0:	b.eq	1ffc <ctf_add_reftype+0xfc>  // b.none
    1ff4:	ldr	x0, [sp, #80]
    1ff8:	b	2120 <ctf_add_reftype+0x220>
    1ffc:	ldr	x0, [sp, #40]
    2000:	ldr	w0, [x0, #544]
    2004:	ldr	x1, [sp, #80]
    2008:	and	w0, w0, w1
    200c:	str	w0, [sp, #76]
    2010:	ldr	x0, [sp, #40]
    2014:	ldr	w0, [x0, #544]
    2018:	ldr	x1, [sp, #24]
    201c:	and	w0, w0, w1
    2020:	str	w0, [sp, #72]
    2024:	ldr	x0, [sp, #40]
    2028:	ldr	w0, [x0, #544]
    202c:	mov	w0, w0
    2030:	ldr	x1, [sp, #24]
    2034:	cmp	x1, x0
    2038:	cset	w0, hi  // hi = pmore
    203c:	and	w0, w0, #0xff
    2040:	mov	w1, w0
    2044:	ldr	w0, [sp, #92]
    2048:	cmp	w0, w1
    204c:	b.ne	211c <ctf_add_reftype+0x21c>  // b.any
    2050:	ldr	w1, [sp, #72]
    2054:	ldr	x0, [sp, #40]
    2058:	ldr	x0, [x0, #480]
    205c:	cmp	x1, x0
    2060:	b.cs	211c <ctf_add_reftype+0x21c>  // b.hs, b.nlast
    2064:	ldr	x0, [sp, #40]
    2068:	ldr	x1, [x0, #448]
    206c:	ldr	w0, [sp, #72]
    2070:	lsl	x0, x0, #2
    2074:	add	x0, x1, x0
    2078:	ldr	w1, [sp, #76]
    207c:	str	w1, [x0]
    2080:	ldr	x0, [sp, #56]
    2084:	ldr	w1, [x0, #32]
    2088:	ldr	x0, [sp, #40]
    208c:	ldr	w0, [x0, #544]
    2090:	and	w0, w1, w0
    2094:	mov	w0, w0
    2098:	str	x0, [sp, #64]
    209c:	ldr	x0, [sp, #48]
    20a0:	ldr	x1, [sp, #40]
    20a4:	cmp	x1, x0
    20a8:	b.ne	211c <ctf_add_reftype+0x21c>  // b.any
    20ac:	ldr	x0, [sp, #40]
    20b0:	ldr	x0, [x0]
    20b4:	ldr	x1, [x0]
    20b8:	ldr	x0, [sp, #56]
    20bc:	ldr	w0, [x0, #28]
    20c0:	blr	x1
    20c4:	cmp	w0, #0xa
    20c8:	b.ne	211c <ctf_add_reftype+0x21c>  // b.any
    20cc:	ldr	x0, [sp, #56]
    20d0:	ldr	w0, [x0, #24]
    20d4:	mov	w1, w0
    20d8:	ldr	x0, [sp, #40]
    20dc:	bl	0 <ctf_strptr>
    20e0:	ldrb	w0, [x0]
    20e4:	cmp	w0, #0x0
    20e8:	b.ne	211c <ctf_add_reftype+0x21c>  // b.any
    20ec:	ldr	x0, [sp, #40]
    20f0:	ldr	x0, [x0, #480]
    20f4:	ldr	x1, [sp, #64]
    20f8:	cmp	x1, x0
    20fc:	b.cs	211c <ctf_add_reftype+0x21c>  // b.hs, b.nlast
    2100:	ldr	x0, [sp, #40]
    2104:	ldr	x1, [x0, #448]
    2108:	ldr	x0, [sp, #64]
    210c:	lsl	x0, x0, #2
    2110:	add	x0, x1, x0
    2114:	ldr	w1, [sp, #76]
    2118:	str	w1, [x0]
    211c:	ldr	x0, [sp, #80]
    2120:	ldp	x29, x30, [sp], #96
    2124:	ret

0000000000002128 <ctf_add_slice>:
    2128:	stp	x29, x30, [sp, #-96]!
    212c:	mov	x29, sp
    2130:	str	x0, [sp, #40]
    2134:	str	w1, [sp, #36]
    2138:	str	x2, [sp, #24]
    213c:	str	x3, [sp, #16]
    2140:	ldr	x0, [sp, #40]
    2144:	str	x0, [sp, #56]
    2148:	ldr	x0, [sp, #16]
    214c:	cmp	x0, #0x0
    2150:	b.ne	2164 <ctf_add_slice+0x3c>  // b.any
    2154:	mov	w1, #0x16                  	// #22
    2158:	ldr	x0, [sp, #40]
    215c:	bl	0 <ctf_set_errno>
    2160:	b	22e0 <ctf_add_slice+0x1b8>
    2164:	ldr	x0, [sp, #16]
    2168:	ldr	w0, [x0, #8]
    216c:	cmp	w0, #0xff
    2170:	b.hi	2184 <ctf_add_slice+0x5c>  // b.pmore
    2174:	ldr	x0, [sp, #16]
    2178:	ldr	w0, [x0, #4]
    217c:	cmp	w0, #0xff
    2180:	b.ls	2194 <ctf_add_slice+0x6c>  // b.plast
    2184:	mov	w1, #0x416                 	// #1046
    2188:	ldr	x0, [sp, #40]
    218c:	bl	0 <ctf_set_errno>
    2190:	b	22e0 <ctf_add_slice+0x1b8>
    2194:	ldr	x0, [sp, #24]
    2198:	cmn	x0, #0x1
    219c:	b.eq	21b0 <ctf_add_slice+0x88>  // b.none
    21a0:	ldr	x1, [sp, #24]
    21a4:	mov	x0, #0xfffffffe            	// #4294967294
    21a8:	cmp	x1, x0
    21ac:	b.ls	21c0 <ctf_add_slice+0x98>  // b.plast
    21b0:	mov	w1, #0x16                  	// #22
    21b4:	ldr	x0, [sp, #40]
    21b8:	bl	0 <ctf_set_errno>
    21bc:	b	22e0 <ctf_add_slice+0x1b8>
    21c0:	add	x0, sp, #0x38
    21c4:	ldr	x1, [sp, #24]
    21c8:	bl	0 <ctf_lookup_by_id>
    21cc:	str	x0, [sp, #88]
    21d0:	ldr	x0, [sp, #88]
    21d4:	cmp	x0, #0x0
    21d8:	b.ne	21e4 <ctf_add_slice+0xbc>  // b.any
    21dc:	mov	x0, #0xffffffffffffffff    	// #-1
    21e0:	b	22e0 <ctf_add_slice+0x1b8>
    21e4:	ldr	x0, [sp, #56]
    21e8:	ldr	x1, [sp, #24]
    21ec:	bl	0 <ctf_type_kind_unsliced>
    21f0:	str	w0, [sp, #84]
    21f4:	ldr	w0, [sp, #84]
    21f8:	cmp	w0, #0x1
    21fc:	b.eq	2228 <ctf_add_slice+0x100>  // b.none
    2200:	ldr	w0, [sp, #84]
    2204:	cmp	w0, #0x2
    2208:	b.eq	2228 <ctf_add_slice+0x100>  // b.none
    220c:	ldr	w0, [sp, #84]
    2210:	cmp	w0, #0x8
    2214:	b.eq	2228 <ctf_add_slice+0x100>  // b.none
    2218:	mov	w1, #0x3fe                 	// #1022
    221c:	ldr	x0, [sp, #40]
    2220:	bl	0 <ctf_set_errno>
    2224:	b	22e0 <ctf_add_slice+0x1b8>
    2228:	add	x0, sp, #0x40
    222c:	mov	x4, x0
    2230:	mov	w3, #0xe                   	// #14
    2234:	mov	x2, #0x0                   	// #0
    2238:	ldr	w1, [sp, #36]
    223c:	ldr	x0, [sp, #40]
    2240:	bl	1b40 <ctf_add_generic>
    2244:	str	x0, [sp, #72]
    2248:	ldr	x0, [sp, #72]
    224c:	cmn	x0, #0x1
    2250:	b.ne	225c <ctf_add_slice+0x134>  // b.any
    2254:	mov	x0, #0xffffffffffffffff    	// #-1
    2258:	b	22e0 <ctf_add_slice+0x1b8>
    225c:	ldr	w0, [sp, #36]
    2260:	cmp	w0, #0x0
    2264:	b.eq	2270 <ctf_add_slice+0x148>  // b.none
    2268:	mov	w0, #0x3a000000            	// #973078528
    226c:	b	2274 <ctf_add_slice+0x14c>
    2270:	mov	w0, #0x38000000            	// #939524096
    2274:	ldr	x1, [sp, #64]
    2278:	str	w0, [x1, #28]
    227c:	ldr	x0, [sp, #16]
    2280:	ldr	w0, [x0, #8]
    2284:	neg	w0, w0
    2288:	and	w0, w0, #0xfffffff8
    228c:	neg	w0, w0
    2290:	lsr	w0, w0, #3
    2294:	mov	w0, w0
    2298:	bl	1d88 <clp2>
    229c:	mov	x1, x0
    22a0:	ldr	x0, [sp, #64]
    22a4:	str	w1, [x0, #32]
    22a8:	ldr	x0, [sp, #64]
    22ac:	ldr	x1, [sp, #24]
    22b0:	str	w1, [x0, #48]
    22b4:	ldr	x0, [sp, #16]
    22b8:	ldr	w1, [x0, #8]
    22bc:	ldr	x0, [sp, #64]
    22c0:	and	w1, w1, #0xffff
    22c4:	strh	w1, [x0, #54]
    22c8:	ldr	x0, [sp, #16]
    22cc:	ldr	w1, [x0, #4]
    22d0:	ldr	x0, [sp, #64]
    22d4:	and	w1, w1, #0xffff
    22d8:	strh	w1, [x0, #52]
    22dc:	ldr	x0, [sp, #72]
    22e0:	ldp	x29, x30, [sp], #96
    22e4:	ret

00000000000022e8 <ctf_add_integer>:
    22e8:	stp	x29, x30, [sp, #-48]!
    22ec:	mov	x29, sp
    22f0:	str	x0, [sp, #40]
    22f4:	str	w1, [sp, #36]
    22f8:	str	x2, [sp, #24]
    22fc:	str	x3, [sp, #16]
    2300:	mov	w4, #0x1                   	// #1
    2304:	ldr	x3, [sp, #16]
    2308:	ldr	x2, [sp, #24]
    230c:	ldr	w1, [sp, #36]
    2310:	ldr	x0, [sp, #40]
    2314:	bl	1e10 <ctf_add_encoded>
    2318:	ldp	x29, x30, [sp], #48
    231c:	ret

0000000000002320 <ctf_add_float>:
    2320:	stp	x29, x30, [sp, #-48]!
    2324:	mov	x29, sp
    2328:	str	x0, [sp, #40]
    232c:	str	w1, [sp, #36]
    2330:	str	x2, [sp, #24]
    2334:	str	x3, [sp, #16]
    2338:	mov	w4, #0x2                   	// #2
    233c:	ldr	x3, [sp, #16]
    2340:	ldr	x2, [sp, #24]
    2344:	ldr	w1, [sp, #36]
    2348:	ldr	x0, [sp, #40]
    234c:	bl	1e10 <ctf_add_encoded>
    2350:	ldp	x29, x30, [sp], #48
    2354:	ret

0000000000002358 <ctf_add_pointer>:
    2358:	stp	x29, x30, [sp, #-48]!
    235c:	mov	x29, sp
    2360:	str	x0, [sp, #40]
    2364:	str	w1, [sp, #36]
    2368:	str	x2, [sp, #24]
    236c:	mov	w3, #0x3                   	// #3
    2370:	ldr	x2, [sp, #24]
    2374:	ldr	w1, [sp, #36]
    2378:	ldr	x0, [sp, #40]
    237c:	bl	1f00 <ctf_add_reftype>
    2380:	ldp	x29, x30, [sp], #48
    2384:	ret

0000000000002388 <ctf_add_array>:
    2388:	stp	x29, x30, [sp, #-80]!
    238c:	mov	x29, sp
    2390:	str	x0, [sp, #40]
    2394:	str	w1, [sp, #36]
    2398:	str	x2, [sp, #24]
    239c:	ldr	x0, [sp, #40]
    23a0:	str	x0, [sp, #56]
    23a4:	ldr	x0, [sp, #24]
    23a8:	cmp	x0, #0x0
    23ac:	b.ne	23c0 <ctf_add_array+0x38>  // b.any
    23b0:	mov	w1, #0x16                  	// #22
    23b4:	ldr	x0, [sp, #40]
    23b8:	bl	0 <ctf_set_errno>
    23bc:	b	248c <ctf_add_array+0x104>
    23c0:	ldr	x0, [sp, #24]
    23c4:	ldr	x1, [x0]
    23c8:	add	x0, sp, #0x38
    23cc:	bl	0 <ctf_lookup_by_id>
    23d0:	cmp	x0, #0x0
    23d4:	b.ne	23e0 <ctf_add_array+0x58>  // b.any
    23d8:	mov	x0, #0xffffffffffffffff    	// #-1
    23dc:	b	248c <ctf_add_array+0x104>
    23e0:	ldr	x0, [sp, #40]
    23e4:	str	x0, [sp, #56]
    23e8:	ldr	x0, [sp, #24]
    23ec:	ldr	x1, [x0, #8]
    23f0:	add	x0, sp, #0x38
    23f4:	bl	0 <ctf_lookup_by_id>
    23f8:	cmp	x0, #0x0
    23fc:	b.ne	2408 <ctf_add_array+0x80>  // b.any
    2400:	mov	x0, #0xffffffffffffffff    	// #-1
    2404:	b	248c <ctf_add_array+0x104>
    2408:	add	x0, sp, #0x40
    240c:	mov	x4, x0
    2410:	mov	w3, #0x4                   	// #4
    2414:	mov	x2, #0x0                   	// #0
    2418:	ldr	w1, [sp, #36]
    241c:	ldr	x0, [sp, #40]
    2420:	bl	1b40 <ctf_add_generic>
    2424:	str	x0, [sp, #72]
    2428:	ldr	x0, [sp, #72]
    242c:	cmn	x0, #0x1
    2430:	b.ne	243c <ctf_add_array+0xb4>  // b.any
    2434:	mov	x0, #0xffffffffffffffff    	// #-1
    2438:	b	248c <ctf_add_array+0x104>
    243c:	ldr	w0, [sp, #36]
    2440:	cmp	w0, #0x0
    2444:	b.eq	2450 <ctf_add_array+0xc8>  // b.none
    2448:	mov	w0, #0x12000000            	// #301989888
    244c:	b	2454 <ctf_add_array+0xcc>
    2450:	mov	w0, #0x10000000            	// #268435456
    2454:	ldr	x1, [sp, #64]
    2458:	str	w0, [x1, #28]
    245c:	ldr	x0, [sp, #64]
    2460:	str	wzr, [x0, #32]
    2464:	ldr	x0, [sp, #64]
    2468:	add	x1, x0, #0x30
    246c:	ldr	x0, [sp, #24]
    2470:	mov	x2, x1
    2474:	mov	x3, x0
    2478:	ldp	x0, x1, [x3]
    247c:	stp	x0, x1, [x2]
    2480:	ldr	x0, [x3, #16]
    2484:	str	x0, [x2, #16]
    2488:	ldr	x0, [sp, #72]
    248c:	ldp	x29, x30, [sp], #80
    2490:	ret

0000000000002494 <ctf_set_array>:
    2494:	stp	x29, x30, [sp, #-64]!
    2498:	mov	x29, sp
    249c:	str	x0, [sp, #40]
    24a0:	str	x1, [sp, #32]
    24a4:	str	x2, [sp, #24]
    24a8:	ldr	x1, [sp, #32]
    24ac:	ldr	x0, [sp, #40]
    24b0:	bl	16f8 <ctf_dtd_lookup>
    24b4:	str	x0, [sp, #56]
    24b8:	ldr	x0, [sp, #40]
    24bc:	ldr	w0, [x0, #552]
    24c0:	and	w0, w0, #0x2
    24c4:	cmp	w0, #0x0
    24c8:	b.ne	24dc <ctf_set_array+0x48>  // b.any
    24cc:	mov	w1, #0x40d                 	// #1037
    24d0:	ldr	x0, [sp, #40]
    24d4:	bl	0 <ctf_set_errno>
    24d8:	b	2554 <ctf_set_array+0xc0>
    24dc:	ldr	x0, [sp, #56]
    24e0:	cmp	x0, #0x0
    24e4:	b.eq	2508 <ctf_set_array+0x74>  // b.none
    24e8:	ldr	x0, [sp, #40]
    24ec:	ldr	x0, [x0]
    24f0:	ldr	x1, [x0]
    24f4:	ldr	x0, [sp, #56]
    24f8:	ldr	w0, [x0, #28]
    24fc:	blr	x1
    2500:	cmp	w0, #0x4
    2504:	b.eq	2518 <ctf_set_array+0x84>  // b.none
    2508:	mov	w1, #0x3fa                 	// #1018
    250c:	ldr	x0, [sp, #40]
    2510:	bl	0 <ctf_set_errno>
    2514:	b	2554 <ctf_set_array+0xc0>
    2518:	ldr	x0, [sp, #40]
    251c:	ldr	w0, [x0, #552]
    2520:	orr	w1, w0, #0x4
    2524:	ldr	x0, [sp, #40]
    2528:	str	w1, [x0, #552]
    252c:	ldr	x0, [sp, #56]
    2530:	add	x1, x0, #0x30
    2534:	ldr	x0, [sp, #24]
    2538:	mov	x2, x1
    253c:	mov	x3, x0
    2540:	ldp	x0, x1, [x3]
    2544:	stp	x0, x1, [x2]
    2548:	ldr	x0, [x3, #16]
    254c:	str	x0, [x2, #16]
    2550:	mov	w0, #0x0                   	// #0
    2554:	ldp	x29, x30, [sp], #64
    2558:	ret

000000000000255c <ctf_add_function>:
    255c:	stp	x29, x30, [sp, #-96]!
    2560:	mov	x29, sp
    2564:	str	x0, [sp, #40]
    2568:	str	w1, [sp, #36]
    256c:	str	x2, [sp, #24]
    2570:	str	x3, [sp, #16]
    2574:	str	xzr, [sp, #80]
    2578:	ldr	x0, [sp, #40]
    257c:	str	x0, [sp, #48]
    2580:	ldr	x0, [sp, #24]
    2584:	cmp	x0, #0x0
    2588:	b.eq	25bc <ctf_add_function+0x60>  // b.none
    258c:	ldr	x0, [sp, #24]
    2590:	ldr	w0, [x0, #12]
    2594:	and	w0, w0, #0xfffffffe
    2598:	cmp	w0, #0x0
    259c:	b.ne	25bc <ctf_add_function+0x60>  // b.any
    25a0:	ldr	x0, [sp, #24]
    25a4:	ldr	w0, [x0, #8]
    25a8:	cmp	w0, #0x0
    25ac:	b.eq	25cc <ctf_add_function+0x70>  // b.none
    25b0:	ldr	x0, [sp, #16]
    25b4:	cmp	x0, #0x0
    25b8:	b.ne	25cc <ctf_add_function+0x70>  // b.any
    25bc:	mov	w1, #0x16                  	// #22
    25c0:	ldr	x0, [sp, #40]
    25c4:	bl	0 <ctf_set_errno>
    25c8:	b	27a8 <ctf_add_function+0x24c>
    25cc:	ldr	x0, [sp, #24]
    25d0:	ldr	w0, [x0, #8]
    25d4:	str	w0, [sp, #92]
    25d8:	ldr	x0, [sp, #24]
    25dc:	ldr	w0, [x0, #12]
    25e0:	and	w0, w0, #0x1
    25e4:	cmp	w0, #0x0
    25e8:	b.eq	25f8 <ctf_add_function+0x9c>  // b.none
    25ec:	ldr	w0, [sp, #92]
    25f0:	add	w0, w0, #0x1
    25f4:	str	w0, [sp, #92]
    25f8:	ldr	x0, [sp, #24]
    25fc:	ldr	x1, [x0]
    2600:	add	x0, sp, #0x30
    2604:	bl	0 <ctf_lookup_by_id>
    2608:	cmp	x0, #0x0
    260c:	b.ne	2618 <ctf_add_function+0xbc>  // b.any
    2610:	mov	x0, #0xffffffffffffffff    	// #-1
    2614:	b	27a8 <ctf_add_function+0x24c>
    2618:	str	xzr, [sp, #72]
    261c:	b	2660 <ctf_add_function+0x104>
    2620:	ldr	x0, [sp, #40]
    2624:	str	x0, [sp, #48]
    2628:	ldr	x0, [sp, #72]
    262c:	lsl	x0, x0, #3
    2630:	ldr	x1, [sp, #16]
    2634:	add	x0, x1, x0
    2638:	ldr	x1, [x0]
    263c:	add	x0, sp, #0x30
    2640:	bl	0 <ctf_lookup_by_id>
    2644:	cmp	x0, #0x0
    2648:	b.ne	2654 <ctf_add_function+0xf8>  // b.any
    264c:	mov	x0, #0xffffffffffffffff    	// #-1
    2650:	b	27a8 <ctf_add_function+0x24c>
    2654:	ldr	x0, [sp, #72]
    2658:	add	x0, x0, #0x1
    265c:	str	x0, [sp, #72]
    2660:	ldr	x0, [sp, #24]
    2664:	ldr	w0, [x0, #8]
    2668:	mov	w0, w0
    266c:	ldr	x1, [sp, #72]
    2670:	cmp	x1, x0
    2674:	b.cc	2620 <ctf_add_function+0xc4>  // b.lo, b.ul, b.last
    2678:	ldr	w1, [sp, #92]
    267c:	mov	w0, #0xffffff              	// #16777215
    2680:	cmp	w1, w0
    2684:	b.ls	2698 <ctf_add_function+0x13c>  // b.plast
    2688:	mov	w1, #0x4b                  	// #75
    268c:	ldr	x0, [sp, #40]
    2690:	bl	0 <ctf_set_errno>
    2694:	b	27a8 <ctf_add_function+0x24c>
    2698:	ldr	w0, [sp, #92]
    269c:	cmp	w0, #0x0
    26a0:	b.eq	26d0 <ctf_add_function+0x174>  // b.none
    26a4:	ldr	w0, [sp, #92]
    26a8:	lsl	x0, x0, #3
    26ac:	bl	0 <malloc>
    26b0:	str	x0, [sp, #80]
    26b4:	ldr	x0, [sp, #80]
    26b8:	cmp	x0, #0x0
    26bc:	b.ne	26d0 <ctf_add_function+0x174>  // b.any
    26c0:	mov	w1, #0xb                   	// #11
    26c4:	ldr	x0, [sp, #40]
    26c8:	bl	0 <ctf_set_errno>
    26cc:	b	27a8 <ctf_add_function+0x24c>
    26d0:	add	x0, sp, #0x38
    26d4:	mov	x4, x0
    26d8:	mov	w3, #0x5                   	// #5
    26dc:	mov	x2, #0x0                   	// #0
    26e0:	ldr	w1, [sp, #36]
    26e4:	ldr	x0, [sp, #40]
    26e8:	bl	1b40 <ctf_add_generic>
    26ec:	str	x0, [sp, #64]
    26f0:	ldr	x0, [sp, #64]
    26f4:	cmn	x0, #0x1
    26f8:	b.ne	270c <ctf_add_function+0x1b0>  // b.any
    26fc:	ldr	x0, [sp, #80]
    2700:	bl	0 <free>
    2704:	mov	x0, #0xffffffffffffffff    	// #-1
    2708:	b	27a8 <ctf_add_function+0x24c>
    270c:	ldr	w0, [sp, #36]
    2710:	cmp	w0, #0x0
    2714:	b.eq	2720 <ctf_add_function+0x1c4>  // b.none
    2718:	mov	w0, #0x16000000            	// #369098752
    271c:	b	2724 <ctf_add_function+0x1c8>
    2720:	mov	w0, #0x14000000            	// #335544320
    2724:	ldr	w1, [sp, #92]
    2728:	and	w2, w1, #0xffffff
    272c:	ldr	x1, [sp, #56]
    2730:	orr	w0, w0, w2
    2734:	str	w0, [x1, #28]
    2738:	ldr	x0, [sp, #24]
    273c:	ldr	x1, [x0]
    2740:	ldr	x0, [sp, #56]
    2744:	str	w1, [x0, #32]
    2748:	ldr	x0, [sp, #24]
    274c:	ldr	w0, [x0, #8]
    2750:	mov	w0, w0
    2754:	lsl	x0, x0, #3
    2758:	mov	x2, x0
    275c:	ldr	x1, [sp, #16]
    2760:	ldr	x0, [sp, #80]
    2764:	bl	0 <memcpy>
    2768:	ldr	x0, [sp, #24]
    276c:	ldr	w0, [x0, #12]
    2770:	and	w0, w0, #0x1
    2774:	cmp	w0, #0x0
    2778:	b.eq	2798 <ctf_add_function+0x23c>  // b.none
    277c:	ldr	w0, [sp, #92]
    2780:	sub	w0, w0, #0x1
    2784:	mov	w0, w0
    2788:	lsl	x0, x0, #3
    278c:	ldr	x1, [sp, #80]
    2790:	add	x0, x1, x0
    2794:	str	xzr, [x0]
    2798:	ldr	x0, [sp, #56]
    279c:	ldr	x1, [sp, #80]
    27a0:	str	x1, [x0, #48]
    27a4:	ldr	x0, [sp, #64]
    27a8:	ldp	x29, x30, [sp], #96
    27ac:	ret

00000000000027b0 <ctf_add_struct_sized>:
    27b0:	stp	x29, x30, [sp, #-64]!
    27b4:	mov	x29, sp
    27b8:	str	x0, [sp, #40]
    27bc:	str	w1, [sp, #36]
    27c0:	str	x2, [sp, #24]
    27c4:	str	x3, [sp, #16]
    27c8:	str	xzr, [sp, #56]
    27cc:	ldr	x0, [sp, #24]
    27d0:	cmp	x0, #0x0
    27d4:	b.eq	27ec <ctf_add_struct_sized+0x3c>  // b.none
    27d8:	ldr	x2, [sp, #24]
    27dc:	mov	w1, #0x6                   	// #6
    27e0:	ldr	x0, [sp, #40]
    27e4:	bl	0 <ctf_lookup_by_rawname>
    27e8:	str	x0, [sp, #56]
    27ec:	ldr	x0, [sp, #56]
    27f0:	cmp	x0, #0x0
    27f4:	b.eq	2820 <ctf_add_struct_sized+0x70>  // b.none
    27f8:	ldr	x1, [sp, #56]
    27fc:	ldr	x0, [sp, #40]
    2800:	bl	0 <ctf_type_kind>
    2804:	cmp	w0, #0x9
    2808:	b.ne	2820 <ctf_add_struct_sized+0x70>  // b.any
    280c:	ldr	x1, [sp, #56]
    2810:	ldr	x0, [sp, #40]
    2814:	bl	16f8 <ctf_dtd_lookup>
    2818:	str	x0, [sp, #48]
    281c:	b	2854 <ctf_add_struct_sized+0xa4>
    2820:	add	x0, sp, #0x30
    2824:	mov	x4, x0
    2828:	mov	w3, #0x6                   	// #6
    282c:	ldr	x2, [sp, #24]
    2830:	ldr	w1, [sp, #36]
    2834:	ldr	x0, [sp, #40]
    2838:	bl	1b40 <ctf_add_generic>
    283c:	str	x0, [sp, #56]
    2840:	ldr	x0, [sp, #56]
    2844:	cmn	x0, #0x1
    2848:	b.ne	2854 <ctf_add_struct_sized+0xa4>  // b.any
    284c:	mov	x0, #0xffffffffffffffff    	// #-1
    2850:	b	28c0 <ctf_add_struct_sized+0x110>
    2854:	ldr	w0, [sp, #36]
    2858:	cmp	w0, #0x0
    285c:	b.eq	2868 <ctf_add_struct_sized+0xb8>  // b.none
    2860:	mov	w0, #0x1a000000            	// #436207616
    2864:	b	286c <ctf_add_struct_sized+0xbc>
    2868:	mov	w0, #0x18000000            	// #402653184
    286c:	ldr	x1, [sp, #48]
    2870:	str	w0, [x1, #28]
    2874:	ldr	x1, [sp, #16]
    2878:	mov	x0, #0xfffffffe            	// #4294967294
    287c:	cmp	x1, x0
    2880:	b.ls	28b0 <ctf_add_struct_sized+0x100>  // b.plast
    2884:	ldr	x0, [sp, #48]
    2888:	mov	w1, #0xffffffff            	// #-1
    288c:	str	w1, [x0, #32]
    2890:	ldr	x0, [sp, #16]
    2894:	lsr	x1, x0, #32
    2898:	ldr	x0, [sp, #48]
    289c:	str	w1, [x0, #36]
    28a0:	ldr	x0, [sp, #48]
    28a4:	ldr	x1, [sp, #16]
    28a8:	str	w1, [x0, #40]
    28ac:	b	28bc <ctf_add_struct_sized+0x10c>
    28b0:	ldr	x0, [sp, #48]
    28b4:	ldr	x1, [sp, #16]
    28b8:	str	w1, [x0, #32]
    28bc:	ldr	x0, [sp, #56]
    28c0:	ldp	x29, x30, [sp], #64
    28c4:	ret

00000000000028c8 <ctf_add_struct>:
    28c8:	stp	x29, x30, [sp, #-48]!
    28cc:	mov	x29, sp
    28d0:	str	x0, [sp, #40]
    28d4:	str	w1, [sp, #36]
    28d8:	str	x2, [sp, #24]
    28dc:	mov	x3, #0x0                   	// #0
    28e0:	ldr	x2, [sp, #24]
    28e4:	ldr	w1, [sp, #36]
    28e8:	ldr	x0, [sp, #40]
    28ec:	bl	27b0 <ctf_add_struct_sized>
    28f0:	ldp	x29, x30, [sp], #48
    28f4:	ret

00000000000028f8 <ctf_add_union_sized>:
    28f8:	stp	x29, x30, [sp, #-64]!
    28fc:	mov	x29, sp
    2900:	str	x0, [sp, #40]
    2904:	str	w1, [sp, #36]
    2908:	str	x2, [sp, #24]
    290c:	str	x3, [sp, #16]
    2910:	str	xzr, [sp, #56]
    2914:	ldr	x0, [sp, #24]
    2918:	cmp	x0, #0x0
    291c:	b.eq	2934 <ctf_add_union_sized+0x3c>  // b.none
    2920:	ldr	x2, [sp, #24]
    2924:	mov	w1, #0x7                   	// #7
    2928:	ldr	x0, [sp, #40]
    292c:	bl	0 <ctf_lookup_by_rawname>
    2930:	str	x0, [sp, #56]
    2934:	ldr	x0, [sp, #56]
    2938:	cmp	x0, #0x0
    293c:	b.eq	2968 <ctf_add_union_sized+0x70>  // b.none
    2940:	ldr	x1, [sp, #56]
    2944:	ldr	x0, [sp, #40]
    2948:	bl	0 <ctf_type_kind>
    294c:	cmp	w0, #0x9
    2950:	b.ne	2968 <ctf_add_union_sized+0x70>  // b.any
    2954:	ldr	x1, [sp, #56]
    2958:	ldr	x0, [sp, #40]
    295c:	bl	16f8 <ctf_dtd_lookup>
    2960:	str	x0, [sp, #48]
    2964:	b	299c <ctf_add_union_sized+0xa4>
    2968:	add	x0, sp, #0x30
    296c:	mov	x4, x0
    2970:	mov	w3, #0x7                   	// #7
    2974:	ldr	x2, [sp, #24]
    2978:	ldr	w1, [sp, #36]
    297c:	ldr	x0, [sp, #40]
    2980:	bl	1b40 <ctf_add_generic>
    2984:	str	x0, [sp, #56]
    2988:	ldr	x0, [sp, #56]
    298c:	cmn	x0, #0x1
    2990:	b.ne	299c <ctf_add_union_sized+0xa4>  // b.any
    2994:	mov	x0, #0xffffffffffffffff    	// #-1
    2998:	b	2a08 <ctf_add_union_sized+0x110>
    299c:	ldr	w0, [sp, #36]
    29a0:	cmp	w0, #0x0
    29a4:	b.eq	29b0 <ctf_add_union_sized+0xb8>  // b.none
    29a8:	mov	w0, #0x1e000000            	// #503316480
    29ac:	b	29b4 <ctf_add_union_sized+0xbc>
    29b0:	mov	w0, #0x1c000000            	// #469762048
    29b4:	ldr	x1, [sp, #48]
    29b8:	str	w0, [x1, #28]
    29bc:	ldr	x1, [sp, #16]
    29c0:	mov	x0, #0xfffffffe            	// #4294967294
    29c4:	cmp	x1, x0
    29c8:	b.ls	29f8 <ctf_add_union_sized+0x100>  // b.plast
    29cc:	ldr	x0, [sp, #48]
    29d0:	mov	w1, #0xffffffff            	// #-1
    29d4:	str	w1, [x0, #32]
    29d8:	ldr	x0, [sp, #16]
    29dc:	lsr	x1, x0, #32
    29e0:	ldr	x0, [sp, #48]
    29e4:	str	w1, [x0, #36]
    29e8:	ldr	x0, [sp, #48]
    29ec:	ldr	x1, [sp, #16]
    29f0:	str	w1, [x0, #40]
    29f4:	b	2a04 <ctf_add_union_sized+0x10c>
    29f8:	ldr	x0, [sp, #48]
    29fc:	ldr	x1, [sp, #16]
    2a00:	str	w1, [x0, #32]
    2a04:	ldr	x0, [sp, #56]
    2a08:	ldp	x29, x30, [sp], #64
    2a0c:	ret

0000000000002a10 <ctf_add_union>:
    2a10:	stp	x29, x30, [sp, #-48]!
    2a14:	mov	x29, sp
    2a18:	str	x0, [sp, #40]
    2a1c:	str	w1, [sp, #36]
    2a20:	str	x2, [sp, #24]
    2a24:	mov	x3, #0x0                   	// #0
    2a28:	ldr	x2, [sp, #24]
    2a2c:	ldr	w1, [sp, #36]
    2a30:	ldr	x0, [sp, #40]
    2a34:	bl	28f8 <ctf_add_union_sized>
    2a38:	ldp	x29, x30, [sp], #48
    2a3c:	ret

0000000000002a40 <ctf_add_enum>:
    2a40:	stp	x29, x30, [sp, #-64]!
    2a44:	mov	x29, sp
    2a48:	str	x0, [sp, #40]
    2a4c:	str	w1, [sp, #36]
    2a50:	str	x2, [sp, #24]
    2a54:	str	xzr, [sp, #56]
    2a58:	ldr	x0, [sp, #24]
    2a5c:	cmp	x0, #0x0
    2a60:	b.eq	2a78 <ctf_add_enum+0x38>  // b.none
    2a64:	ldr	x2, [sp, #24]
    2a68:	mov	w1, #0x8                   	// #8
    2a6c:	ldr	x0, [sp, #40]
    2a70:	bl	0 <ctf_lookup_by_rawname>
    2a74:	str	x0, [sp, #56]
    2a78:	ldr	x0, [sp, #56]
    2a7c:	cmp	x0, #0x0
    2a80:	b.eq	2aac <ctf_add_enum+0x6c>  // b.none
    2a84:	ldr	x1, [sp, #56]
    2a88:	ldr	x0, [sp, #40]
    2a8c:	bl	0 <ctf_type_kind>
    2a90:	cmp	w0, #0x9
    2a94:	b.ne	2aac <ctf_add_enum+0x6c>  // b.any
    2a98:	ldr	x1, [sp, #56]
    2a9c:	ldr	x0, [sp, #40]
    2aa0:	bl	16f8 <ctf_dtd_lookup>
    2aa4:	str	x0, [sp, #48]
    2aa8:	b	2ae0 <ctf_add_enum+0xa0>
    2aac:	add	x0, sp, #0x30
    2ab0:	mov	x4, x0
    2ab4:	mov	w3, #0x8                   	// #8
    2ab8:	ldr	x2, [sp, #24]
    2abc:	ldr	w1, [sp, #36]
    2ac0:	ldr	x0, [sp, #40]
    2ac4:	bl	1b40 <ctf_add_generic>
    2ac8:	str	x0, [sp, #56]
    2acc:	ldr	x0, [sp, #56]
    2ad0:	cmn	x0, #0x1
    2ad4:	b.ne	2ae0 <ctf_add_enum+0xa0>  // b.any
    2ad8:	mov	x0, #0xffffffffffffffff    	// #-1
    2adc:	b	2b18 <ctf_add_enum+0xd8>
    2ae0:	ldr	w0, [sp, #36]
    2ae4:	cmp	w0, #0x0
    2ae8:	b.eq	2af4 <ctf_add_enum+0xb4>  // b.none
    2aec:	mov	w0, #0x22000000            	// #570425344
    2af0:	b	2af8 <ctf_add_enum+0xb8>
    2af4:	mov	w0, #0x20000000            	// #536870912
    2af8:	ldr	x1, [sp, #48]
    2afc:	str	w0, [x1, #28]
    2b00:	ldr	x0, [sp, #40]
    2b04:	ldr	x0, [x0, #488]
    2b08:	ldr	x1, [x0, #40]
    2b0c:	ldr	x0, [sp, #48]
    2b10:	str	w1, [x0, #32]
    2b14:	ldr	x0, [sp, #56]
    2b18:	ldp	x29, x30, [sp], #64
    2b1c:	ret

0000000000002b20 <ctf_add_enum_encoded>:
    2b20:	stp	x29, x30, [sp, #-64]!
    2b24:	mov	x29, sp
    2b28:	str	x0, [sp, #40]
    2b2c:	str	w1, [sp, #36]
    2b30:	str	x2, [sp, #24]
    2b34:	str	x3, [sp, #16]
    2b38:	str	xzr, [sp, #56]
    2b3c:	ldr	x0, [sp, #24]
    2b40:	cmp	x0, #0x0
    2b44:	b.eq	2b5c <ctf_add_enum_encoded+0x3c>  // b.none
    2b48:	ldr	x2, [sp, #24]
    2b4c:	mov	w1, #0x8                   	// #8
    2b50:	ldr	x0, [sp, #40]
    2b54:	bl	0 <ctf_lookup_by_rawname>
    2b58:	str	x0, [sp, #56]
    2b5c:	ldr	x0, [sp, #56]
    2b60:	cmp	x0, #0x0
    2b64:	b.eq	2ba0 <ctf_add_enum_encoded+0x80>  // b.none
    2b68:	ldr	x1, [sp, #56]
    2b6c:	ldr	x0, [sp, #40]
    2b70:	bl	0 <ctf_type_kind>
    2b74:	cmp	w0, #0x9
    2b78:	b.eq	2bc8 <ctf_add_enum_encoded+0xa8>  // b.none
    2b7c:	ldr	x1, [sp, #56]
    2b80:	ldr	x0, [sp, #40]
    2b84:	bl	0 <ctf_type_kind_unsliced>
    2b88:	cmp	w0, #0x8
    2b8c:	b.eq	2bc8 <ctf_add_enum_encoded+0xa8>  // b.none
    2b90:	mov	w1, #0x3fe                 	// #1022
    2b94:	ldr	x0, [sp, #40]
    2b98:	bl	0 <ctf_set_errno>
    2b9c:	b	2bdc <ctf_add_enum_encoded+0xbc>
    2ba0:	ldr	x2, [sp, #24]
    2ba4:	ldr	w1, [sp, #36]
    2ba8:	ldr	x0, [sp, #40]
    2bac:	bl	2a40 <ctf_add_enum>
    2bb0:	str	x0, [sp, #56]
    2bb4:	ldr	x0, [sp, #56]
    2bb8:	cmn	x0, #0x1
    2bbc:	b.ne	2bc8 <ctf_add_enum_encoded+0xa8>  // b.any
    2bc0:	mov	x0, #0xffffffffffffffff    	// #-1
    2bc4:	b	2bdc <ctf_add_enum_encoded+0xbc>
    2bc8:	ldr	x3, [sp, #16]
    2bcc:	ldr	x2, [sp, #56]
    2bd0:	ldr	w1, [sp, #36]
    2bd4:	ldr	x0, [sp, #40]
    2bd8:	bl	2128 <ctf_add_slice>
    2bdc:	ldp	x29, x30, [sp], #64
    2be0:	ret

0000000000002be4 <ctf_add_forward>:
    2be4:	stp	x29, x30, [sp, #-64]!
    2be8:	mov	x29, sp
    2bec:	str	x0, [sp, #40]
    2bf0:	str	w1, [sp, #36]
    2bf4:	str	x2, [sp, #24]
    2bf8:	str	w3, [sp, #32]
    2bfc:	str	xzr, [sp, #56]
    2c00:	ldr	w0, [sp, #32]
    2c04:	cmp	w0, #0x6
    2c08:	b.eq	2c34 <ctf_add_forward+0x50>  // b.none
    2c0c:	ldr	w0, [sp, #32]
    2c10:	cmp	w0, #0x7
    2c14:	b.eq	2c34 <ctf_add_forward+0x50>  // b.none
    2c18:	ldr	w0, [sp, #32]
    2c1c:	cmp	w0, #0x8
    2c20:	b.eq	2c34 <ctf_add_forward+0x50>  // b.none
    2c24:	mov	w1, #0x3fd                 	// #1021
    2c28:	ldr	x0, [sp, #40]
    2c2c:	bl	0 <ctf_set_errno>
    2c30:	b	2cbc <ctf_add_forward+0xd8>
    2c34:	ldr	x0, [sp, #24]
    2c38:	cmp	x0, #0x0
    2c3c:	b.eq	2c58 <ctf_add_forward+0x74>  // b.none
    2c40:	ldr	w0, [sp, #32]
    2c44:	ldr	x2, [sp, #24]
    2c48:	mov	w1, w0
    2c4c:	ldr	x0, [sp, #40]
    2c50:	bl	0 <ctf_lookup_by_rawname>
    2c54:	str	x0, [sp, #56]
    2c58:	add	x0, sp, #0x30
    2c5c:	mov	x4, x0
    2c60:	mov	w3, #0x9                   	// #9
    2c64:	ldr	x2, [sp, #24]
    2c68:	ldr	w1, [sp, #36]
    2c6c:	ldr	x0, [sp, #40]
    2c70:	bl	1b40 <ctf_add_generic>
    2c74:	str	x0, [sp, #56]
    2c78:	ldr	x0, [sp, #56]
    2c7c:	cmn	x0, #0x1
    2c80:	b.ne	2c8c <ctf_add_forward+0xa8>  // b.any
    2c84:	mov	x0, #0xffffffffffffffff    	// #-1
    2c88:	b	2cbc <ctf_add_forward+0xd8>
    2c8c:	ldr	w0, [sp, #36]
    2c90:	cmp	w0, #0x0
    2c94:	b.eq	2ca0 <ctf_add_forward+0xbc>  // b.none
    2c98:	mov	w0, #0x26000000            	// #637534208
    2c9c:	b	2ca4 <ctf_add_forward+0xc0>
    2ca0:	mov	w0, #0x24000000            	// #603979776
    2ca4:	ldr	x1, [sp, #48]
    2ca8:	str	w0, [x1, #28]
    2cac:	ldr	x0, [sp, #48]
    2cb0:	ldr	w1, [sp, #32]
    2cb4:	str	w1, [x0, #32]
    2cb8:	ldr	x0, [sp, #56]
    2cbc:	ldp	x29, x30, [sp], #64
    2cc0:	ret

0000000000002cc4 <ctf_add_typedef>:
    2cc4:	stp	x29, x30, [sp, #-80]!
    2cc8:	mov	x29, sp
    2ccc:	str	x0, [sp, #40]
    2cd0:	str	w1, [sp, #36]
    2cd4:	str	x2, [sp, #24]
    2cd8:	str	x3, [sp, #16]
    2cdc:	ldr	x0, [sp, #40]
    2ce0:	str	x0, [sp, #56]
    2ce4:	ldr	x0, [sp, #16]
    2ce8:	cmn	x0, #0x1
    2cec:	b.eq	2d00 <ctf_add_typedef+0x3c>  // b.none
    2cf0:	ldr	x1, [sp, #16]
    2cf4:	mov	x0, #0xfffffffe            	// #4294967294
    2cf8:	cmp	x1, x0
    2cfc:	b.ls	2d10 <ctf_add_typedef+0x4c>  // b.plast
    2d00:	mov	w1, #0x16                  	// #22
    2d04:	ldr	x0, [sp, #40]
    2d08:	bl	0 <ctf_set_errno>
    2d0c:	b	2d90 <ctf_add_typedef+0xcc>
    2d10:	add	x0, sp, #0x38
    2d14:	ldr	x1, [sp, #16]
    2d18:	bl	0 <ctf_lookup_by_id>
    2d1c:	cmp	x0, #0x0
    2d20:	b.ne	2d2c <ctf_add_typedef+0x68>  // b.any
    2d24:	mov	x0, #0xffffffffffffffff    	// #-1
    2d28:	b	2d90 <ctf_add_typedef+0xcc>
    2d2c:	add	x0, sp, #0x40
    2d30:	mov	x4, x0
    2d34:	mov	w3, #0xa                   	// #10
    2d38:	ldr	x2, [sp, #24]
    2d3c:	ldr	w1, [sp, #36]
    2d40:	ldr	x0, [sp, #40]
    2d44:	bl	1b40 <ctf_add_generic>
    2d48:	str	x0, [sp, #72]
    2d4c:	ldr	x0, [sp, #72]
    2d50:	cmn	x0, #0x1
    2d54:	b.ne	2d60 <ctf_add_typedef+0x9c>  // b.any
    2d58:	mov	x0, #0xffffffffffffffff    	// #-1
    2d5c:	b	2d90 <ctf_add_typedef+0xcc>
    2d60:	ldr	w0, [sp, #36]
    2d64:	cmp	w0, #0x0
    2d68:	b.eq	2d74 <ctf_add_typedef+0xb0>  // b.none
    2d6c:	mov	w0, #0x2a000000            	// #704643072
    2d70:	b	2d78 <ctf_add_typedef+0xb4>
    2d74:	mov	w0, #0x28000000            	// #671088640
    2d78:	ldr	x1, [sp, #64]
    2d7c:	str	w0, [x1, #28]
    2d80:	ldr	x0, [sp, #64]
    2d84:	ldr	x1, [sp, #16]
    2d88:	str	w1, [x0, #32]
    2d8c:	ldr	x0, [sp, #72]
    2d90:	ldp	x29, x30, [sp], #80
    2d94:	ret

0000000000002d98 <ctf_add_volatile>:
    2d98:	stp	x29, x30, [sp, #-48]!
    2d9c:	mov	x29, sp
    2da0:	str	x0, [sp, #40]
    2da4:	str	w1, [sp, #36]
    2da8:	str	x2, [sp, #24]
    2dac:	mov	w3, #0xb                   	// #11
    2db0:	ldr	x2, [sp, #24]
    2db4:	ldr	w1, [sp, #36]
    2db8:	ldr	x0, [sp, #40]
    2dbc:	bl	1f00 <ctf_add_reftype>
    2dc0:	ldp	x29, x30, [sp], #48
    2dc4:	ret

0000000000002dc8 <ctf_add_const>:
    2dc8:	stp	x29, x30, [sp, #-48]!
    2dcc:	mov	x29, sp
    2dd0:	str	x0, [sp, #40]
    2dd4:	str	w1, [sp, #36]
    2dd8:	str	x2, [sp, #24]
    2ddc:	mov	w3, #0xc                   	// #12
    2de0:	ldr	x2, [sp, #24]
    2de4:	ldr	w1, [sp, #36]
    2de8:	ldr	x0, [sp, #40]
    2dec:	bl	1f00 <ctf_add_reftype>
    2df0:	ldp	x29, x30, [sp], #48
    2df4:	ret

0000000000002df8 <ctf_add_restrict>:
    2df8:	stp	x29, x30, [sp, #-48]!
    2dfc:	mov	x29, sp
    2e00:	str	x0, [sp, #40]
    2e04:	str	w1, [sp, #36]
    2e08:	str	x2, [sp, #24]
    2e0c:	mov	w3, #0xd                   	// #13
    2e10:	ldr	x2, [sp, #24]
    2e14:	ldr	w1, [sp, #36]
    2e18:	ldr	x0, [sp, #40]
    2e1c:	bl	1f00 <ctf_add_reftype>
    2e20:	ldp	x29, x30, [sp], #48
    2e24:	ret

0000000000002e28 <ctf_add_enumerator>:
    2e28:	stp	x29, x30, [sp, #-96]!
    2e2c:	mov	x29, sp
    2e30:	str	x0, [sp, #40]
    2e34:	str	x1, [sp, #32]
    2e38:	str	x2, [sp, #24]
    2e3c:	str	w3, [sp, #20]
    2e40:	ldr	x1, [sp, #32]
    2e44:	ldr	x0, [sp, #40]
    2e48:	bl	16f8 <ctf_dtd_lookup>
    2e4c:	str	x0, [sp, #80]
    2e50:	ldr	x0, [sp, #24]
    2e54:	cmp	x0, #0x0
    2e58:	b.ne	2e6c <ctf_add_enumerator+0x44>  // b.any
    2e5c:	mov	w1, #0x16                  	// #22
    2e60:	ldr	x0, [sp, #40]
    2e64:	bl	0 <ctf_set_errno>
    2e68:	b	3074 <ctf_add_enumerator+0x24c>
    2e6c:	ldr	x0, [sp, #40]
    2e70:	ldr	w0, [x0, #552]
    2e74:	and	w0, w0, #0x2
    2e78:	cmp	w0, #0x0
    2e7c:	b.ne	2e90 <ctf_add_enumerator+0x68>  // b.any
    2e80:	mov	w1, #0x40d                 	// #1037
    2e84:	ldr	x0, [sp, #40]
    2e88:	bl	0 <ctf_set_errno>
    2e8c:	b	3074 <ctf_add_enumerator+0x24c>
    2e90:	ldr	x0, [sp, #80]
    2e94:	cmp	x0, #0x0
    2e98:	b.ne	2eac <ctf_add_enumerator+0x84>  // b.any
    2e9c:	mov	w1, #0x3fa                 	// #1018
    2ea0:	ldr	x0, [sp, #40]
    2ea4:	bl	0 <ctf_set_errno>
    2ea8:	b	3074 <ctf_add_enumerator+0x24c>
    2eac:	ldr	x0, [sp, #40]
    2eb0:	ldr	x0, [x0]
    2eb4:	ldr	x1, [x0]
    2eb8:	ldr	x0, [sp, #80]
    2ebc:	ldr	w0, [x0, #28]
    2ec0:	blr	x1
    2ec4:	str	w0, [sp, #76]
    2ec8:	ldr	x0, [sp, #40]
    2ecc:	ldr	x0, [x0]
    2ed0:	ldr	x1, [x0, #8]
    2ed4:	ldr	x0, [sp, #80]
    2ed8:	ldr	w0, [x0, #28]
    2edc:	blr	x1
    2ee0:	str	w0, [sp, #72]
    2ee4:	ldr	x0, [sp, #40]
    2ee8:	ldr	x0, [x0]
    2eec:	ldr	x1, [x0, #16]
    2ef0:	ldr	x0, [sp, #80]
    2ef4:	ldr	w0, [x0, #28]
    2ef8:	blr	x1
    2efc:	str	w0, [sp, #68]
    2f00:	ldr	w0, [sp, #76]
    2f04:	cmp	w0, #0x8
    2f08:	b.eq	2f1c <ctf_add_enumerator+0xf4>  // b.none
    2f0c:	mov	w1, #0x3fc                 	// #1020
    2f10:	ldr	x0, [sp, #40]
    2f14:	bl	0 <ctf_set_errno>
    2f18:	b	3074 <ctf_add_enumerator+0x24c>
    2f1c:	ldr	w1, [sp, #68]
    2f20:	mov	w0, #0xffffff              	// #16777215
    2f24:	cmp	w1, w0
    2f28:	b.ne	2f3c <ctf_add_enumerator+0x114>  // b.any
    2f2c:	mov	w1, #0x40e                 	// #1038
    2f30:	ldr	x0, [sp, #40]
    2f34:	bl	0 <ctf_set_errno>
    2f38:	b	3074 <ctf_add_enumerator+0x24c>
    2f3c:	ldr	x0, [sp, #80]
    2f40:	ldr	x0, [x0, #56]
    2f44:	str	x0, [sp, #88]
    2f48:	b	2f80 <ctf_add_enumerator+0x158>
    2f4c:	ldr	x0, [sp, #88]
    2f50:	ldr	x0, [x0, #16]
    2f54:	ldr	x1, [sp, #24]
    2f58:	bl	0 <strcmp>
    2f5c:	cmp	w0, #0x0
    2f60:	b.ne	2f74 <ctf_add_enumerator+0x14c>  // b.any
    2f64:	mov	w1, #0x410                 	// #1040
    2f68:	ldr	x0, [sp, #40]
    2f6c:	bl	0 <ctf_set_errno>
    2f70:	b	3074 <ctf_add_enumerator+0x24c>
    2f74:	ldr	x0, [sp, #88]
    2f78:	ldr	x0, [x0, #8]
    2f7c:	str	x0, [sp, #88]
    2f80:	ldr	x0, [sp, #88]
    2f84:	cmp	x0, #0x0
    2f88:	b.ne	2f4c <ctf_add_enumerator+0x124>  // b.any
    2f8c:	mov	x0, #0x30                  	// #48
    2f90:	bl	0 <malloc>
    2f94:	str	x0, [sp, #88]
    2f98:	ldr	x0, [sp, #88]
    2f9c:	cmp	x0, #0x0
    2fa0:	b.ne	2fb4 <ctf_add_enumerator+0x18c>  // b.any
    2fa4:	mov	w1, #0xb                   	// #11
    2fa8:	ldr	x0, [sp, #40]
    2fac:	bl	0 <ctf_set_errno>
    2fb0:	b	3074 <ctf_add_enumerator+0x24c>
    2fb4:	ldr	x0, [sp, #24]
    2fb8:	bl	0 <strdup>
    2fbc:	str	x0, [sp, #56]
    2fc0:	ldr	x0, [sp, #56]
    2fc4:	cmp	x0, #0x0
    2fc8:	b.ne	2fe4 <ctf_add_enumerator+0x1bc>  // b.any
    2fcc:	ldr	x0, [sp, #88]
    2fd0:	bl	0 <free>
    2fd4:	mov	w1, #0xb                   	// #11
    2fd8:	ldr	x0, [sp, #40]
    2fdc:	bl	0 <ctf_set_errno>
    2fe0:	b	3074 <ctf_add_enumerator+0x24c>
    2fe4:	ldr	x0, [sp, #88]
    2fe8:	ldr	x1, [sp, #56]
    2fec:	str	x1, [x0, #16]
    2ff0:	ldr	x0, [sp, #88]
    2ff4:	mov	x1, #0xffffffffffffffff    	// #-1
    2ff8:	str	x1, [x0, #24]
    2ffc:	ldr	x0, [sp, #88]
    3000:	str	xzr, [x0, #32]
    3004:	ldr	x0, [sp, #88]
    3008:	ldr	w1, [sp, #20]
    300c:	str	w1, [x0, #40]
    3010:	ldr	w0, [sp, #76]
    3014:	lsl	w1, w0, #26
    3018:	ldr	w0, [sp, #72]
    301c:	cmp	w0, #0x0
    3020:	b.eq	302c <ctf_add_enumerator+0x204>  // b.none
    3024:	mov	w0, #0x2000000             	// #33554432
    3028:	b	3030 <ctf_add_enumerator+0x208>
    302c:	mov	w0, #0x0                   	// #0
    3030:	orr	w1, w0, w1
    3034:	ldr	w0, [sp, #68]
    3038:	add	w0, w0, #0x1
    303c:	and	w0, w0, #0xffffff
    3040:	orr	w1, w1, w0
    3044:	ldr	x0, [sp, #80]
    3048:	str	w1, [x0, #28]
    304c:	ldr	x0, [sp, #80]
    3050:	add	x0, x0, #0x30
    3054:	ldr	x1, [sp, #88]
    3058:	bl	0 <ctf_list_append>
    305c:	ldr	x0, [sp, #40]
    3060:	ldr	w0, [x0, #552]
    3064:	orr	w1, w0, #0x4
    3068:	ldr	x0, [sp, #40]
    306c:	str	w1, [x0, #552]
    3070:	mov	w0, #0x0                   	// #0
    3074:	ldp	x29, x30, [sp], #96
    3078:	ret

000000000000307c <ctf_add_member_offset>:
    307c:	stp	x29, x30, [sp, #-176]!
    3080:	mov	x29, sp
    3084:	str	x0, [sp, #56]
    3088:	str	x1, [sp, #48]
    308c:	str	x2, [sp, #40]
    3090:	str	x3, [sp, #32]
    3094:	str	x4, [sp, #24]
    3098:	ldr	x1, [sp, #48]
    309c:	ldr	x0, [sp, #56]
    30a0:	bl	16f8 <ctf_dtd_lookup>
    30a4:	str	x0, [sp, #136]
    30a8:	str	xzr, [sp, #152]
    30ac:	ldr	x0, [sp, #56]
    30b0:	ldr	w0, [x0, #552]
    30b4:	and	w0, w0, #0x2
    30b8:	cmp	w0, #0x0
    30bc:	b.ne	30d0 <ctf_add_member_offset+0x54>  // b.any
    30c0:	mov	w1, #0x40d                 	// #1037
    30c4:	ldr	x0, [sp, #56]
    30c8:	bl	0 <ctf_set_errno>
    30cc:	b	3560 <ctf_add_member_offset+0x4e4>
    30d0:	ldr	x0, [sp, #136]
    30d4:	cmp	x0, #0x0
    30d8:	b.ne	30ec <ctf_add_member_offset+0x70>  // b.any
    30dc:	mov	w1, #0x3fa                 	// #1018
    30e0:	ldr	x0, [sp, #56]
    30e4:	bl	0 <ctf_set_errno>
    30e8:	b	3560 <ctf_add_member_offset+0x4e4>
    30ec:	ldr	x0, [sp, #56]
    30f0:	ldr	x0, [x0]
    30f4:	ldr	x1, [x0]
    30f8:	ldr	x0, [sp, #136]
    30fc:	ldr	w0, [x0, #28]
    3100:	blr	x1
    3104:	str	w0, [sp, #132]
    3108:	ldr	x0, [sp, #56]
    310c:	ldr	x0, [x0]
    3110:	ldr	x1, [x0, #8]
    3114:	ldr	x0, [sp, #136]
    3118:	ldr	w0, [x0, #28]
    311c:	blr	x1
    3120:	str	w0, [sp, #128]
    3124:	ldr	x0, [sp, #56]
    3128:	ldr	x0, [x0]
    312c:	ldr	x1, [x0, #16]
    3130:	ldr	x0, [sp, #136]
    3134:	ldr	w0, [x0, #28]
    3138:	blr	x1
    313c:	str	w0, [sp, #124]
    3140:	ldr	w0, [sp, #132]
    3144:	cmp	w0, #0x6
    3148:	b.eq	3168 <ctf_add_member_offset+0xec>  // b.none
    314c:	ldr	w0, [sp, #132]
    3150:	cmp	w0, #0x7
    3154:	b.eq	3168 <ctf_add_member_offset+0xec>  // b.none
    3158:	mov	w1, #0x3fb                 	// #1019
    315c:	ldr	x0, [sp, #56]
    3160:	bl	0 <ctf_set_errno>
    3164:	b	3560 <ctf_add_member_offset+0x4e4>
    3168:	ldr	w1, [sp, #124]
    316c:	mov	w0, #0xffffff              	// #16777215
    3170:	cmp	w1, w0
    3174:	b.ne	3188 <ctf_add_member_offset+0x10c>  // b.any
    3178:	mov	w1, #0x40e                 	// #1038
    317c:	ldr	x0, [sp, #56]
    3180:	bl	0 <ctf_set_errno>
    3184:	b	3560 <ctf_add_member_offset+0x4e4>
    3188:	ldr	x0, [sp, #40]
    318c:	cmp	x0, #0x0
    3190:	b.eq	31f4 <ctf_add_member_offset+0x178>  // b.none
    3194:	ldr	x0, [sp, #136]
    3198:	ldr	x0, [x0, #56]
    319c:	str	x0, [sp, #168]
    31a0:	b	31e8 <ctf_add_member_offset+0x16c>
    31a4:	ldr	x0, [sp, #168]
    31a8:	ldr	x0, [x0, #16]
    31ac:	cmp	x0, #0x0
    31b0:	b.eq	31dc <ctf_add_member_offset+0x160>  // b.none
    31b4:	ldr	x0, [sp, #168]
    31b8:	ldr	x0, [x0, #16]
    31bc:	ldr	x1, [sp, #40]
    31c0:	bl	0 <strcmp>
    31c4:	cmp	w0, #0x0
    31c8:	b.ne	31dc <ctf_add_member_offset+0x160>  // b.any
    31cc:	mov	w1, #0x410                 	// #1040
    31d0:	ldr	x0, [sp, #56]
    31d4:	bl	0 <ctf_set_errno>
    31d8:	b	3560 <ctf_add_member_offset+0x4e4>
    31dc:	ldr	x0, [sp, #168]
    31e0:	ldr	x0, [x0, #8]
    31e4:	str	x0, [sp, #168]
    31e8:	ldr	x0, [sp, #168]
    31ec:	cmp	x0, #0x0
    31f0:	b.ne	31a4 <ctf_add_member_offset+0x128>  // b.any
    31f4:	ldr	x1, [sp, #32]
    31f8:	ldr	x0, [sp, #56]
    31fc:	bl	0 <ctf_type_size>
    3200:	str	x0, [sp, #112]
    3204:	ldr	x0, [sp, #112]
    3208:	cmp	x0, #0x0
    320c:	b.lt	322c <ctf_add_member_offset+0x1b0>  // b.tstop
    3210:	ldr	x1, [sp, #32]
    3214:	ldr	x0, [sp, #56]
    3218:	bl	0 <ctf_type_align>
    321c:	str	x0, [sp, #104]
    3220:	ldr	x0, [sp, #104]
    3224:	cmp	x0, #0x0
    3228:	b.ge	3234 <ctf_add_member_offset+0x1b8>  // b.tcont
    322c:	mov	w0, #0xffffffff            	// #-1
    3230:	b	3560 <ctf_add_member_offset+0x4e4>
    3234:	mov	x0, #0x30                  	// #48
    3238:	bl	0 <malloc>
    323c:	str	x0, [sp, #168]
    3240:	ldr	x0, [sp, #168]
    3244:	cmp	x0, #0x0
    3248:	b.ne	325c <ctf_add_member_offset+0x1e0>  // b.any
    324c:	mov	w1, #0xb                   	// #11
    3250:	ldr	x0, [sp, #56]
    3254:	bl	0 <ctf_set_errno>
    3258:	b	3560 <ctf_add_member_offset+0x4e4>
    325c:	ldr	x0, [sp, #40]
    3260:	cmp	x0, #0x0
    3264:	b.eq	3298 <ctf_add_member_offset+0x21c>  // b.none
    3268:	ldr	x0, [sp, #40]
    326c:	bl	0 <strdup>
    3270:	str	x0, [sp, #152]
    3274:	ldr	x0, [sp, #152]
    3278:	cmp	x0, #0x0
    327c:	b.ne	3298 <ctf_add_member_offset+0x21c>  // b.any
    3280:	ldr	x0, [sp, #168]
    3284:	bl	0 <free>
    3288:	mov	w1, #0xb                   	// #11
    328c:	ldr	x0, [sp, #56]
    3290:	bl	0 <ctf_set_errno>
    3294:	b	3560 <ctf_add_member_offset+0x4e4>
    3298:	ldr	x0, [sp, #168]
    329c:	ldr	x1, [sp, #152]
    32a0:	str	x1, [x0, #16]
    32a4:	ldr	x0, [sp, #168]
    32a8:	ldr	x1, [sp, #32]
    32ac:	str	x1, [x0, #24]
    32b0:	ldr	x0, [sp, #168]
    32b4:	mov	w1, #0xffffffff            	// #-1
    32b8:	str	w1, [x0, #40]
    32bc:	ldr	w0, [sp, #132]
    32c0:	cmp	w0, #0x6
    32c4:	b.ne	3468 <ctf_add_member_offset+0x3ec>  // b.any
    32c8:	ldr	w0, [sp, #124]
    32cc:	cmp	w0, #0x0
    32d0:	b.eq	3468 <ctf_add_member_offset+0x3ec>  // b.none
    32d4:	ldr	x0, [sp, #24]
    32d8:	cmn	x0, #0x1
    32dc:	b.ne	3404 <ctf_add_member_offset+0x388>  // b.any
    32e0:	ldr	x0, [sp, #136]
    32e4:	ldr	x0, [x0, #48]
    32e8:	str	x0, [sp, #96]
    32ec:	ldr	x0, [sp, #96]
    32f0:	ldr	x0, [x0, #24]
    32f4:	mov	x1, x0
    32f8:	ldr	x0, [sp, #56]
    32fc:	bl	0 <ctf_type_resolve>
    3300:	str	x0, [sp, #88]
    3304:	ldr	x0, [sp, #96]
    3308:	ldr	x0, [x0, #32]
    330c:	str	x0, [sp, #144]
    3310:	add	x0, sp, #0x40
    3314:	mov	x2, x0
    3318:	ldr	x1, [sp, #88]
    331c:	ldr	x0, [sp, #56]
    3320:	bl	0 <ctf_type_encoding>
    3324:	cmp	w0, #0x0
    3328:	b.ne	3344 <ctf_add_member_offset+0x2c8>  // b.any
    332c:	ldr	w0, [sp, #72]
    3330:	mov	w0, w0
    3334:	ldr	x1, [sp, #144]
    3338:	add	x0, x1, x0
    333c:	str	x0, [sp, #144]
    3340:	b	3378 <ctf_add_member_offset+0x2fc>
    3344:	ldr	x1, [sp, #88]
    3348:	ldr	x0, [sp, #56]
    334c:	bl	0 <ctf_type_size>
    3350:	str	x0, [sp, #80]
    3354:	ldr	x0, [sp, #80]
    3358:	cmp	x0, #0x0
    335c:	b.le	3378 <ctf_add_member_offset+0x2fc>
    3360:	ldr	x0, [sp, #80]
    3364:	lsl	x0, x0, #3
    3368:	mov	x1, x0
    336c:	ldr	x0, [sp, #144]
    3370:	add	x0, x0, x1
    3374:	str	x0, [sp, #144]
    3378:	ldr	x0, [sp, #144]
    337c:	add	x0, x0, #0x7
    3380:	lsr	x0, x0, #3
    3384:	str	x0, [sp, #144]
    3388:	ldr	x2, [sp, #104]
    338c:	ldr	x1, [sp, #104]
    3390:	mov	x0, #0x1                   	// #1
    3394:	cmp	x2, #0x0
    3398:	csel	x0, x1, x0, gt
    339c:	mov	x1, x0
    33a0:	ldr	x0, [sp, #144]
    33a4:	add	x0, x1, x0
    33a8:	sub	x0, x0, #0x1
    33ac:	ldr	x3, [sp, #104]
    33b0:	ldr	x2, [sp, #104]
    33b4:	mov	x1, #0x1                   	// #1
    33b8:	cmp	x3, #0x0
    33bc:	csel	x1, x2, x1, gt
    33c0:	udiv	x0, x0, x1
    33c4:	ldr	x3, [sp, #104]
    33c8:	ldr	x2, [sp, #104]
    33cc:	mov	x1, #0x1                   	// #1
    33d0:	cmp	x3, #0x0
    33d4:	csel	x1, x2, x1, gt
    33d8:	mul	x0, x0, x1
    33dc:	str	x0, [sp, #144]
    33e0:	ldr	x0, [sp, #144]
    33e4:	lsl	x1, x0, #3
    33e8:	ldr	x0, [sp, #168]
    33ec:	str	x1, [x0, #32]
    33f0:	ldr	x1, [sp, #112]
    33f4:	ldr	x0, [sp, #144]
    33f8:	add	x0, x1, x0
    33fc:	str	x0, [sp, #160]
    3400:	b	34a8 <ctf_add_member_offset+0x42c>
    3404:	ldr	x0, [sp, #168]
    3408:	ldr	x1, [sp, #24]
    340c:	str	x1, [x0, #32]
    3410:	ldr	x0, [sp, #136]
    3414:	add	x0, x0, #0x18
    3418:	mov	x3, #0x0                   	// #0
    341c:	mov	x2, #0x0                   	// #0
    3420:	mov	x1, x0
    3424:	ldr	x0, [sp, #56]
    3428:	bl	40 <ctf_get_ctt_size>
    342c:	str	x0, [sp, #160]
    3430:	ldr	x0, [sp, #24]
    3434:	add	w1, w0, #0x7
    3438:	cmp	w0, #0x0
    343c:	csel	w0, w1, w0, lt  // lt = tstop
    3440:	asr	w0, w0, #3
    3444:	sxtw	x1, w0
    3448:	ldr	x0, [sp, #112]
    344c:	add	x0, x1, x0
    3450:	ldr	x2, [sp, #160]
    3454:	ldr	x1, [sp, #160]
    3458:	cmp	x2, x0
    345c:	csel	x0, x1, x0, ge  // ge = tcont
    3460:	str	x0, [sp, #160]
    3464:	b	34a8 <ctf_add_member_offset+0x42c>
    3468:	ldr	x0, [sp, #168]
    346c:	str	xzr, [x0, #32]
    3470:	ldr	x0, [sp, #136]
    3474:	add	x0, x0, #0x18
    3478:	mov	x3, #0x0                   	// #0
    347c:	mov	x2, #0x0                   	// #0
    3480:	mov	x1, x0
    3484:	ldr	x0, [sp, #56]
    3488:	bl	40 <ctf_get_ctt_size>
    348c:	str	x0, [sp, #160]
    3490:	ldr	x0, [sp, #160]
    3494:	ldr	x2, [sp, #112]
    3498:	ldr	x1, [sp, #112]
    349c:	cmp	x2, x0
    34a0:	csel	x0, x1, x0, ge  // ge = tcont
    34a4:	str	x0, [sp, #160]
    34a8:	ldr	x1, [sp, #160]
    34ac:	mov	x0, #0xfffffffe            	// #4294967294
    34b0:	cmp	x1, x0
    34b4:	b.ls	34ec <ctf_add_member_offset+0x470>  // b.plast
    34b8:	ldr	x0, [sp, #136]
    34bc:	mov	w1, #0xffffffff            	// #-1
    34c0:	str	w1, [x0, #32]
    34c4:	ldr	x0, [sp, #160]
    34c8:	lsr	x0, x0, #32
    34cc:	mov	w1, w0
    34d0:	ldr	x0, [sp, #136]
    34d4:	str	w1, [x0, #36]
    34d8:	ldr	x0, [sp, #160]
    34dc:	mov	w1, w0
    34e0:	ldr	x0, [sp, #136]
    34e4:	str	w1, [x0, #40]
    34e8:	b	34fc <ctf_add_member_offset+0x480>
    34ec:	ldr	x0, [sp, #160]
    34f0:	mov	w1, w0
    34f4:	ldr	x0, [sp, #136]
    34f8:	str	w1, [x0, #32]
    34fc:	ldr	w0, [sp, #132]
    3500:	lsl	w1, w0, #26
    3504:	ldr	w0, [sp, #128]
    3508:	cmp	w0, #0x0
    350c:	b.eq	3518 <ctf_add_member_offset+0x49c>  // b.none
    3510:	mov	w0, #0x2000000             	// #33554432
    3514:	b	351c <ctf_add_member_offset+0x4a0>
    3518:	mov	w0, #0x0                   	// #0
    351c:	orr	w1, w0, w1
    3520:	ldr	w0, [sp, #124]
    3524:	add	w0, w0, #0x1
    3528:	and	w0, w0, #0xffffff
    352c:	orr	w1, w1, w0
    3530:	ldr	x0, [sp, #136]
    3534:	str	w1, [x0, #28]
    3538:	ldr	x0, [sp, #136]
    353c:	add	x0, x0, #0x30
    3540:	ldr	x1, [sp, #168]
    3544:	bl	0 <ctf_list_append>
    3548:	ldr	x0, [sp, #56]
    354c:	ldr	w0, [x0, #552]
    3550:	orr	w1, w0, #0x4
    3554:	ldr	x0, [sp, #56]
    3558:	str	w1, [x0, #552]
    355c:	mov	w0, #0x0                   	// #0
    3560:	ldp	x29, x30, [sp], #176
    3564:	ret

0000000000003568 <ctf_add_member_encoded>:
    3568:	stp	x29, x30, [sp, #-96]!
    356c:	mov	x29, sp
    3570:	str	x0, [sp, #72]
    3574:	str	x1, [sp, #64]
    3578:	str	x2, [sp, #56]
    357c:	str	x3, [sp, #48]
    3580:	str	x4, [sp, #40]
    3584:	mov	x0, x5
    3588:	mov	x1, x6
    358c:	str	x0, [sp, #24]
    3590:	ldr	w0, [sp, #32]
    3594:	bfxil	w0, w1, #0, #32
    3598:	str	w0, [sp, #32]
    359c:	ldr	x1, [sp, #48]
    35a0:	ldr	x0, [sp, #72]
    35a4:	bl	16f8 <ctf_dtd_lookup>
    35a8:	str	x0, [sp, #88]
    35ac:	ldr	x0, [sp, #72]
    35b0:	ldr	x0, [x0]
    35b4:	ldr	x1, [x0]
    35b8:	ldr	x0, [sp, #88]
    35bc:	ldr	w0, [x0, #28]
    35c0:	blr	x1
    35c4:	str	w0, [sp, #84]
    35c8:	ldr	x0, [sp, #48]
    35cc:	str	w0, [sp, #80]
    35d0:	ldr	w0, [sp, #84]
    35d4:	cmp	w0, #0x1
    35d8:	b.eq	3604 <ctf_add_member_encoded+0x9c>  // b.none
    35dc:	ldr	w0, [sp, #84]
    35e0:	cmp	w0, #0x2
    35e4:	b.eq	3604 <ctf_add_member_encoded+0x9c>  // b.none
    35e8:	ldr	w0, [sp, #84]
    35ec:	cmp	w0, #0x8
    35f0:	b.eq	3604 <ctf_add_member_encoded+0x9c>  // b.none
    35f4:	mov	w1, #0x3fe                 	// #1022
    35f8:	ldr	x0, [sp, #72]
    35fc:	bl	0 <ctf_set_errno>
    3600:	b	3650 <ctf_add_member_encoded+0xe8>
    3604:	ldrsw	x0, [sp, #80]
    3608:	add	x1, sp, #0x18
    360c:	mov	x3, x1
    3610:	mov	x2, x0
    3614:	mov	w1, #0x0                   	// #0
    3618:	ldr	x0, [sp, #72]
    361c:	bl	2128 <ctf_add_slice>
    3620:	str	x0, [sp, #48]
    3624:	ldr	x0, [sp, #48]
    3628:	cmn	x0, #0x1
    362c:	b.ne	3638 <ctf_add_member_encoded+0xd0>  // b.any
    3630:	mov	w0, #0xffffffff            	// #-1
    3634:	b	3650 <ctf_add_member_encoded+0xe8>
    3638:	ldr	x4, [sp, #40]
    363c:	ldr	x3, [sp, #48]
    3640:	ldr	x2, [sp, #56]
    3644:	ldr	x1, [sp, #64]
    3648:	ldr	x0, [sp, #72]
    364c:	bl	307c <ctf_add_member_offset>
    3650:	ldp	x29, x30, [sp], #96
    3654:	ret

0000000000003658 <ctf_add_member>:
    3658:	stp	x29, x30, [sp, #-48]!
    365c:	mov	x29, sp
    3660:	str	x0, [sp, #40]
    3664:	str	x1, [sp, #32]
    3668:	str	x2, [sp, #24]
    366c:	str	x3, [sp, #16]
    3670:	mov	x4, #0xffffffffffffffff    	// #-1
    3674:	ldr	x3, [sp, #16]
    3678:	ldr	x2, [sp, #24]
    367c:	ldr	x1, [sp, #32]
    3680:	ldr	x0, [sp, #40]
    3684:	bl	307c <ctf_add_member_offset>
    3688:	ldp	x29, x30, [sp], #48
    368c:	ret

0000000000003690 <ctf_add_variable>:
    3690:	stp	x29, x30, [sp, #-64]!
    3694:	mov	x29, sp
    3698:	str	x0, [sp, #40]
    369c:	str	x1, [sp, #32]
    36a0:	str	x2, [sp, #24]
    36a4:	ldr	x0, [sp, #40]
    36a8:	str	x0, [sp, #48]
    36ac:	ldr	x0, [sp, #40]
    36b0:	ldr	w0, [x0, #552]
    36b4:	and	w0, w0, #0x2
    36b8:	cmp	w0, #0x0
    36bc:	b.ne	36d0 <ctf_add_variable+0x40>  // b.any
    36c0:	mov	w1, #0x40d                 	// #1037
    36c4:	ldr	x0, [sp, #40]
    36c8:	bl	0 <ctf_set_errno>
    36cc:	b	3810 <ctf_add_variable+0x180>
    36d0:	ldr	x1, [sp, #32]
    36d4:	ldr	x0, [sp, #40]
    36d8:	bl	1884 <ctf_dvd_lookup>
    36dc:	cmp	x0, #0x0
    36e0:	b.eq	36f4 <ctf_add_variable+0x64>  // b.none
    36e4:	mov	w1, #0x410                 	// #1040
    36e8:	ldr	x0, [sp, #40]
    36ec:	bl	0 <ctf_set_errno>
    36f0:	b	3810 <ctf_add_variable+0x180>
    36f4:	add	x0, sp, #0x30
    36f8:	ldr	x1, [sp, #24]
    36fc:	bl	0 <ctf_lookup_by_id>
    3700:	cmp	x0, #0x0
    3704:	b.ne	3710 <ctf_add_variable+0x80>  // b.any
    3708:	mov	w0, #0xffffffff            	// #-1
    370c:	b	3810 <ctf_add_variable+0x180>
    3710:	ldr	x1, [sp, #24]
    3714:	ldr	x0, [sp, #40]
    3718:	bl	0 <ctf_type_resolve>
    371c:	cmn	x0, #0x1
    3720:	b.ne	373c <ctf_add_variable+0xac>  // b.any
    3724:	ldr	x0, [sp, #40]
    3728:	bl	0 <ctf_errno>
    372c:	cmp	w0, #0x41b
    3730:	b.ne	373c <ctf_add_variable+0xac>  // b.any
    3734:	mov	w0, #0xffffffff            	// #-1
    3738:	b	3810 <ctf_add_variable+0x180>
    373c:	mov	x0, #0x28                  	// #40
    3740:	bl	0 <malloc>
    3744:	str	x0, [sp, #56]
    3748:	ldr	x0, [sp, #56]
    374c:	cmp	x0, #0x0
    3750:	b.ne	3764 <ctf_add_variable+0xd4>  // b.any
    3754:	mov	w1, #0xb                   	// #11
    3758:	ldr	x0, [sp, #40]
    375c:	bl	0 <ctf_set_errno>
    3760:	b	3810 <ctf_add_variable+0x180>
    3764:	ldr	x0, [sp, #32]
    3768:	cmp	x0, #0x0
    376c:	b.eq	37ac <ctf_add_variable+0x11c>  // b.none
    3770:	ldr	x0, [sp, #32]
    3774:	bl	0 <strdup>
    3778:	mov	x1, x0
    377c:	ldr	x0, [sp, #56]
    3780:	str	x1, [x0, #16]
    3784:	ldr	x0, [sp, #56]
    3788:	ldr	x0, [x0, #16]
    378c:	cmp	x0, #0x0
    3790:	b.ne	37ac <ctf_add_variable+0x11c>  // b.any
    3794:	ldr	x0, [sp, #56]
    3798:	bl	0 <free>
    379c:	mov	w1, #0xb                   	// #11
    37a0:	ldr	x0, [sp, #40]
    37a4:	bl	0 <ctf_set_errno>
    37a8:	b	3810 <ctf_add_variable+0x180>
    37ac:	ldr	x0, [sp, #56]
    37b0:	ldr	x1, [sp, #24]
    37b4:	str	x1, [x0, #24]
    37b8:	ldr	x0, [sp, #40]
    37bc:	ldr	x1, [x0, #624]
    37c0:	ldr	x0, [sp, #56]
    37c4:	str	x1, [x0, #32]
    37c8:	ldr	x1, [sp, #56]
    37cc:	ldr	x0, [sp, #40]
    37d0:	bl	17cc <ctf_dvd_insert>
    37d4:	cmp	w0, #0x0
    37d8:	b.ge	37f8 <ctf_add_variable+0x168>  // b.tcont
    37dc:	ldr	x0, [sp, #56]
    37e0:	ldr	x0, [x0, #16]
    37e4:	bl	0 <free>
    37e8:	ldr	x0, [sp, #56]
    37ec:	bl	0 <free>
    37f0:	mov	w0, #0xffffffff            	// #-1
    37f4:	b	3810 <ctf_add_variable+0x180>
    37f8:	ldr	x0, [sp, #40]
    37fc:	ldr	w0, [x0, #552]
    3800:	orr	w1, w0, #0x4
    3804:	ldr	x0, [sp, #40]
    3808:	str	w1, [x0, #552]
    380c:	mov	w0, #0x0                   	// #0
    3810:	ldp	x29, x30, [sp], #64
    3814:	ret

0000000000003818 <enumcmp>:
    3818:	stp	x29, x30, [sp, #-64]!
    381c:	mov	x29, sp
    3820:	str	x0, [sp, #40]
    3824:	str	w1, [sp, #36]
    3828:	str	x2, [sp, #24]
    382c:	ldr	x0, [sp, #24]
    3830:	str	x0, [sp, #56]
    3834:	ldr	x0, [sp, #56]
    3838:	ldr	x4, [x0]
    383c:	ldr	x0, [sp, #56]
    3840:	ldr	x0, [x0, #8]
    3844:	add	x1, sp, #0x34
    3848:	mov	x3, x1
    384c:	ldr	x2, [sp, #40]
    3850:	mov	x1, x0
    3854:	mov	x0, x4
    3858:	bl	0 <ctf_enum_value>
    385c:	cmp	w0, #0x0
    3860:	b.ge	3890 <enumcmp+0x78>  // b.tcont
    3864:	ldr	x0, [sp, #56]
    3868:	ldr	x0, [x0]
    386c:	bl	0 <ctf_errno>
    3870:	bl	0 <ctf_errmsg>
    3874:	mov	x2, x0
    3878:	ldr	x1, [sp, #40]
    387c:	adrp	x0, 0 <ctf_qsort_r>
    3880:	add	x0, x0, #0x0
    3884:	bl	0 <ctf_dprintf>
    3888:	mov	w0, #0x1                   	// #1
    388c:	b	38c4 <enumcmp+0xac>
    3890:	ldr	w0, [sp, #52]
    3894:	ldr	w1, [sp, #36]
    3898:	cmp	w1, w0
    389c:	b.eq	38c0 <enumcmp+0xa8>  // b.none
    38a0:	ldr	w0, [sp, #52]
    38a4:	mov	w2, w0
    38a8:	ldr	w1, [sp, #36]
    38ac:	adrp	x0, 0 <ctf_qsort_r>
    38b0:	add	x0, x0, #0x0
    38b4:	bl	0 <ctf_dprintf>
    38b8:	mov	w0, #0x1                   	// #1
    38bc:	b	38c4 <enumcmp+0xac>
    38c0:	mov	w0, #0x0                   	// #0
    38c4:	ldp	x29, x30, [sp], #64
    38c8:	ret

00000000000038cc <enumadd>:
    38cc:	stp	x29, x30, [sp, #-64]!
    38d0:	mov	x29, sp
    38d4:	str	x0, [sp, #40]
    38d8:	str	w1, [sp, #36]
    38dc:	str	x2, [sp, #24]
    38e0:	ldr	x0, [sp, #24]
    38e4:	str	x0, [sp, #56]
    38e8:	ldr	x0, [sp, #56]
    38ec:	ldr	x4, [x0]
    38f0:	ldr	x0, [sp, #56]
    38f4:	ldr	x0, [x0, #8]
    38f8:	ldr	w3, [sp, #36]
    38fc:	ldr	x2, [sp, #40]
    3900:	mov	x1, x0
    3904:	mov	x0, x4
    3908:	bl	2e28 <ctf_add_enumerator>
    390c:	lsr	w0, w0, #31
    3910:	and	w0, w0, #0xff
    3914:	ldp	x29, x30, [sp], #64
    3918:	ret

000000000000391c <membcmp>:
    391c:	stp	x29, x30, [sp, #-80]!
    3920:	mov	x29, sp
    3924:	str	x0, [sp, #40]
    3928:	str	x1, [sp, #32]
    392c:	str	x2, [sp, #24]
    3930:	str	x3, [sp, #16]
    3934:	ldr	x0, [sp, #16]
    3938:	str	x0, [sp, #72]
    393c:	ldr	x0, [sp, #72]
    3940:	ldr	x4, [x0]
    3944:	ldr	x0, [sp, #72]
    3948:	ldr	x0, [x0, #8]
    394c:	add	x1, sp, #0x38
    3950:	mov	x3, x1
    3954:	ldr	x2, [sp, #40]
    3958:	mov	x1, x0
    395c:	mov	x0, x4
    3960:	bl	0 <ctf_member_info>
    3964:	cmp	w0, #0x0
    3968:	b.ge	3998 <membcmp+0x7c>  // b.tcont
    396c:	ldr	x0, [sp, #72]
    3970:	ldr	x0, [x0]
    3974:	bl	0 <ctf_errno>
    3978:	bl	0 <ctf_errmsg>
    397c:	mov	x2, x0
    3980:	ldr	x1, [sp, #40]
    3984:	adrp	x0, 0 <ctf_qsort_r>
    3988:	add	x0, x0, #0x0
    398c:	bl	0 <ctf_dprintf>
    3990:	mov	w0, #0x1                   	// #1
    3994:	b	39d0 <membcmp+0xb4>
    3998:	ldr	x0, [sp, #64]
    399c:	ldr	x1, [sp, #24]
    39a0:	cmp	x1, x0
    39a4:	b.eq	39cc <membcmp+0xb0>  // b.none
    39a8:	ldr	x0, [sp, #64]
    39ac:	ldr	x3, [sp, #24]
    39b0:	mov	x2, x0
    39b4:	ldr	x1, [sp, #40]
    39b8:	adrp	x0, 0 <ctf_qsort_r>
    39bc:	add	x0, x0, #0x0
    39c0:	bl	0 <ctf_dprintf>
    39c4:	mov	w0, #0x1                   	// #1
    39c8:	b	39d0 <membcmp+0xb4>
    39cc:	mov	w0, #0x0                   	// #0
    39d0:	ldp	x29, x30, [sp], #80
    39d4:	ret

00000000000039d8 <membadd>:
    39d8:	stp	x29, x30, [sp, #-80]!
    39dc:	mov	x29, sp
    39e0:	str	x0, [sp, #40]
    39e4:	str	x1, [sp, #32]
    39e8:	str	x2, [sp, #24]
    39ec:	str	x3, [sp, #16]
    39f0:	ldr	x0, [sp, #16]
    39f4:	str	x0, [sp, #64]
    39f8:	str	xzr, [sp, #72]
    39fc:	mov	x0, #0x30                  	// #48
    3a00:	bl	0 <malloc>
    3a04:	str	x0, [sp, #56]
    3a08:	ldr	x0, [sp, #56]
    3a0c:	cmp	x0, #0x0
    3a10:	b.ne	3a28 <membadd+0x50>  // b.any
    3a14:	ldr	x0, [sp, #64]
    3a18:	ldr	x0, [x0]
    3a1c:	mov	w1, #0xb                   	// #11
    3a20:	bl	0 <ctf_set_errno>
    3a24:	b	3acc <membadd+0xf4>
    3a28:	ldr	x0, [sp, #40]
    3a2c:	cmp	x0, #0x0
    3a30:	b.eq	3a68 <membadd+0x90>  // b.none
    3a34:	ldr	x0, [sp, #40]
    3a38:	bl	0 <strdup>
    3a3c:	str	x0, [sp, #72]
    3a40:	ldr	x0, [sp, #72]
    3a44:	cmp	x0, #0x0
    3a48:	b.ne	3a68 <membadd+0x90>  // b.any
    3a4c:	ldr	x0, [sp, #56]
    3a50:	bl	0 <free>
    3a54:	ldr	x0, [sp, #64]
    3a58:	ldr	x0, [x0]
    3a5c:	mov	w1, #0xb                   	// #11
    3a60:	bl	0 <ctf_set_errno>
    3a64:	b	3acc <membadd+0xf4>
    3a68:	ldr	x0, [sp, #56]
    3a6c:	ldr	x1, [sp, #72]
    3a70:	str	x1, [x0, #16]
    3a74:	ldr	x0, [sp, #56]
    3a78:	ldr	x1, [sp, #32]
    3a7c:	str	x1, [x0, #24]
    3a80:	ldr	x0, [sp, #56]
    3a84:	ldr	x1, [sp, #24]
    3a88:	str	x1, [x0, #32]
    3a8c:	ldr	x0, [sp, #56]
    3a90:	mov	w1, #0xffffffff            	// #-1
    3a94:	str	w1, [x0, #40]
    3a98:	ldr	x0, [sp, #64]
    3a9c:	ldr	x0, [x0, #16]
    3aa0:	add	x0, x0, #0x30
    3aa4:	ldr	x1, [sp, #56]
    3aa8:	bl	0 <ctf_list_append>
    3aac:	ldr	x0, [sp, #64]
    3ab0:	ldr	x0, [x0]
    3ab4:	ldr	w1, [x0, #552]
    3ab8:	ldr	x0, [sp, #64]
    3abc:	ldr	x0, [x0]
    3ac0:	orr	w1, w1, #0x4
    3ac4:	str	w1, [x0, #552]
    3ac8:	mov	w0, #0x0                   	// #0
    3acc:	ldp	x29, x30, [sp], #80
    3ad0:	ret

0000000000003ad4 <ctf_add_type_internal>:
    3ad4:	sub	sp, sp, #0x170
    3ad8:	stp	x29, x30, [sp, #16]
    3adc:	add	x29, sp, #0x10
    3ae0:	str	x19, [sp, #32]
    3ae4:	str	x0, [sp, #72]
    3ae8:	str	x1, [sp, #64]
    3aec:	str	x2, [sp, #56]
    3af0:	str	x3, [sp, #48]
    3af4:	mov	x0, #0xffffffffffffffff    	// #-1
    3af8:	str	x0, [sp, #360]
    3afc:	str	wzr, [sp, #356]
    3b00:	ldr	x0, [sp, #72]
    3b04:	str	x0, [sp, #248]
    3b08:	ldr	x0, [sp, #56]
    3b0c:	str	x0, [sp, #328]
    3b10:	ldr	x0, [sp, #72]
    3b14:	ldr	w0, [x0, #552]
    3b18:	and	w0, w0, #0x2
    3b1c:	cmp	w0, #0x0
    3b20:	b.ne	3b34 <ctf_add_type_internal+0x60>  // b.any
    3b24:	mov	w1, #0x40d                 	// #1037
    3b28:	ldr	x0, [sp, #72]
    3b2c:	bl	0 <ctf_set_errno>
    3b30:	b	4854 <ctf_add_type_internal+0xd80>
    3b34:	add	x0, sp, #0x40
    3b38:	ldr	x1, [sp, #56]
    3b3c:	bl	0 <ctf_lookup_by_id>
    3b40:	str	x0, [sp, #320]
    3b44:	ldr	x0, [sp, #320]
    3b48:	cmp	x0, #0x0
    3b4c:	b.ne	3b68 <ctf_add_type_internal+0x94>  // b.any
    3b50:	ldr	x0, [sp, #64]
    3b54:	bl	0 <ctf_errno>
    3b58:	mov	w1, w0
    3b5c:	ldr	x0, [sp, #72]
    3b60:	bl	0 <ctf_set_errno>
    3b64:	b	4854 <ctf_add_type_internal+0xd80>
    3b68:	ldr	x0, [sp, #64]
    3b6c:	ldr	x1, [sp, #56]
    3b70:	bl	0 <ctf_type_resolve>
    3b74:	cmn	x0, #0x1
    3b78:	b.ne	3b9c <ctf_add_type_internal+0xc8>  // b.any
    3b7c:	ldr	x0, [sp, #64]
    3b80:	bl	0 <ctf_errno>
    3b84:	cmp	w0, #0x41b
    3b88:	b.ne	3b9c <ctf_add_type_internal+0xc8>  // b.any
    3b8c:	mov	w1, #0x41b                 	// #1051
    3b90:	ldr	x0, [sp, #72]
    3b94:	bl	0 <ctf_set_errno>
    3b98:	b	4854 <ctf_add_type_internal+0xd80>
    3b9c:	ldr	x2, [sp, #64]
    3ba0:	ldr	x0, [sp, #320]
    3ba4:	ldr	w0, [x0]
    3ba8:	mov	w1, w0
    3bac:	mov	x0, x2
    3bb0:	bl	0 <ctf_strptr>
    3bb4:	str	x0, [sp, #312]
    3bb8:	ldr	x0, [sp, #64]
    3bbc:	ldr	x0, [x0]
    3bc0:	ldr	x1, [x0]
    3bc4:	ldr	x0, [sp, #320]
    3bc8:	ldr	w0, [x0, #4]
    3bcc:	blr	x1
    3bd0:	str	w0, [sp, #308]
    3bd4:	ldr	x0, [sp, #64]
    3bd8:	ldr	x0, [x0]
    3bdc:	ldr	x1, [x0, #8]
    3be0:	ldr	x0, [sp, #320]
    3be4:	ldr	w0, [x0, #4]
    3be8:	blr	x1
    3bec:	str	w0, [sp, #304]
    3bf0:	ldr	x0, [sp, #64]
    3bf4:	ldr	x0, [x0]
    3bf8:	ldr	x1, [x0, #16]
    3bfc:	ldr	x0, [sp, #320]
    3c00:	ldr	w0, [x0, #4]
    3c04:	blr	x1
    3c08:	str	w0, [sp, #300]
    3c0c:	ldr	x0, [sp, #64]
    3c10:	add	x1, sp, #0xf8
    3c14:	mov	x2, x1
    3c18:	ldr	x1, [sp, #56]
    3c1c:	bl	0 <ctf_type_mapping>
    3c20:	str	x0, [sp, #288]
    3c24:	ldr	x0, [sp, #288]
    3c28:	cmp	x0, #0x0
    3c2c:	b.eq	3cdc <ctf_add_type_internal+0x208>  // b.none
    3c30:	ldr	x0, [sp, #48]
    3c34:	ldr	x0, [x0, #696]
    3c38:	ldr	x1, [sp, #56]
    3c3c:	bl	0 <ctf_dynhash_lookup>
    3c40:	cmp	x0, #0x0
    3c44:	b.eq	3c50 <ctf_add_type_internal+0x17c>  // b.none
    3c48:	ldr	x0, [sp, #288]
    3c4c:	b	4854 <ctf_add_type_internal+0xd80>
    3c50:	ldr	x0, [sp, #248]
    3c54:	ldr	x1, [sp, #288]
    3c58:	bl	0 <ctf_type_kind_unsliced>
    3c5c:	mov	w1, w0
    3c60:	ldr	w0, [sp, #308]
    3c64:	cmp	w1, w0
    3c68:	b.ne	3cdc <ctf_add_type_internal+0x208>  // b.any
    3c6c:	ldr	w0, [sp, #308]
    3c70:	cmp	w0, #0x6
    3c74:	b.eq	3c90 <ctf_add_type_internal+0x1bc>  // b.none
    3c78:	ldr	w0, [sp, #308]
    3c7c:	cmp	w0, #0x7
    3c80:	b.eq	3c90 <ctf_add_type_internal+0x1bc>  // b.none
    3c84:	ldr	w0, [sp, #308]
    3c88:	cmp	w0, #0x8
    3c8c:	b.ne	3cdc <ctf_add_type_internal+0x208>  // b.any
    3c90:	add	x0, sp, #0xf8
    3c94:	ldr	x1, [sp, #360]
    3c98:	bl	0 <ctf_lookup_by_id>
    3c9c:	str	x0, [sp, #280]
    3ca0:	ldr	x0, [sp, #280]
    3ca4:	cmp	x0, #0x0
    3ca8:	b.eq	3cdc <ctf_add_type_internal+0x208>  // b.none
    3cac:	ldr	x0, [sp, #248]
    3cb0:	ldr	x0, [x0]
    3cb4:	ldr	x1, [x0, #16]
    3cb8:	ldr	x0, [sp, #280]
    3cbc:	ldr	w0, [x0, #4]
    3cc0:	blr	x1
    3cc4:	mov	w1, w0
    3cc8:	ldr	w0, [sp, #300]
    3ccc:	cmp	w0, w1
    3cd0:	b.ne	3cdc <ctf_add_type_internal+0x208>  // b.any
    3cd4:	ldr	x0, [sp, #288]
    3cd8:	b	4854 <ctf_add_type_internal+0xd80>
    3cdc:	ldr	w0, [sp, #308]
    3ce0:	str	w0, [sp, #352]
    3ce4:	ldr	w0, [sp, #308]
    3ce8:	cmp	w0, #0x9
    3cec:	b.ne	3cfc <ctf_add_type_internal+0x228>  // b.any
    3cf0:	ldr	x0, [sp, #320]
    3cf4:	ldr	w0, [x0, #8]
    3cf8:	str	w0, [sp, #352]
    3cfc:	ldr	w0, [sp, #304]
    3d00:	and	w0, w0, #0x1
    3d04:	cmp	w0, #0x0
    3d08:	b.eq	3d58 <ctf_add_type_internal+0x284>  // b.none
    3d0c:	ldr	x0, [sp, #312]
    3d10:	ldrb	w0, [x0]
    3d14:	cmp	w0, #0x0
    3d18:	b.eq	3d58 <ctf_add_type_internal+0x284>  // b.none
    3d1c:	ldr	w0, [sp, #352]
    3d20:	ldr	x2, [sp, #312]
    3d24:	mov	w1, w0
    3d28:	ldr	x0, [sp, #72]
    3d2c:	bl	0 <ctf_lookup_by_rawname>
    3d30:	str	x0, [sp, #288]
    3d34:	ldr	x0, [sp, #288]
    3d38:	cmp	x0, #0x0
    3d3c:	b.eq	3d58 <ctf_add_type_internal+0x284>  // b.none
    3d40:	ldr	x0, [sp, #288]
    3d44:	str	x0, [sp, #360]
    3d48:	ldr	x1, [sp, #360]
    3d4c:	ldr	x0, [sp, #72]
    3d50:	bl	0 <ctf_type_kind_unsliced>
    3d54:	str	w0, [sp, #356]
    3d58:	ldr	x0, [sp, #360]
    3d5c:	cmn	x0, #0x1
    3d60:	b.eq	3e1c <ctf_add_type_internal+0x348>  // b.none
    3d64:	ldr	w1, [sp, #356]
    3d68:	ldr	w0, [sp, #308]
    3d6c:	cmp	w1, w0
    3d70:	b.eq	3e1c <ctf_add_type_internal+0x348>  // b.none
    3d74:	ldr	w0, [sp, #308]
    3d78:	cmp	w0, #0x9
    3d7c:	b.ne	3dc0 <ctf_add_type_internal+0x2ec>  // b.any
    3d80:	ldr	w0, [sp, #356]
    3d84:	cmp	w0, #0x8
    3d88:	b.eq	3da4 <ctf_add_type_internal+0x2d0>  // b.none
    3d8c:	ldr	w0, [sp, #356]
    3d90:	cmp	w0, #0x6
    3d94:	b.eq	3da4 <ctf_add_type_internal+0x2d0>  // b.none
    3d98:	ldr	w0, [sp, #356]
    3d9c:	cmp	w0, #0x7
    3da0:	b.ne	3dc0 <ctf_add_type_internal+0x2ec>  // b.any
    3da4:	ldr	x0, [sp, #64]
    3da8:	ldr	x3, [sp, #360]
    3dac:	ldr	x2, [sp, #72]
    3db0:	ldr	x1, [sp, #56]
    3db4:	bl	0 <ctf_add_type_mapping>
    3db8:	ldr	x0, [sp, #360]
    3dbc:	b	4854 <ctf_add_type_internal+0xd80>
    3dc0:	ldr	w0, [sp, #356]
    3dc4:	cmp	w0, #0x9
    3dc8:	b.ne	3df0 <ctf_add_type_internal+0x31c>  // b.any
    3dcc:	ldr	w0, [sp, #308]
    3dd0:	cmp	w0, #0x8
    3dd4:	b.eq	3e1c <ctf_add_type_internal+0x348>  // b.none
    3dd8:	ldr	w0, [sp, #308]
    3ddc:	cmp	w0, #0x6
    3de0:	b.eq	3e1c <ctf_add_type_internal+0x348>  // b.none
    3de4:	ldr	w0, [sp, #308]
    3de8:	cmp	w0, #0x7
    3dec:	b.eq	3e1c <ctf_add_type_internal+0x348>  // b.none
    3df0:	ldr	w4, [sp, #356]
    3df4:	ldr	x3, [sp, #360]
    3df8:	ldr	w2, [sp, #308]
    3dfc:	ldr	x1, [sp, #312]
    3e00:	adrp	x0, 0 <ctf_qsort_r>
    3e04:	add	x0, x0, #0x0
    3e08:	bl	0 <ctf_dprintf>
    3e0c:	mov	w1, #0x411                 	// #1041
    3e10:	ldr	x0, [sp, #72]
    3e14:	bl	0 <ctf_set_errno>
    3e18:	b	4854 <ctf_add_type_internal+0xd80>
    3e1c:	ldr	w0, [sp, #308]
    3e20:	cmp	w0, #0x1
    3e24:	b.eq	3e40 <ctf_add_type_internal+0x36c>  // b.none
    3e28:	ldr	w0, [sp, #308]
    3e2c:	cmp	w0, #0x2
    3e30:	b.eq	3e40 <ctf_add_type_internal+0x36c>  // b.none
    3e34:	ldr	w0, [sp, #308]
    3e38:	cmp	w0, #0xe
    3e3c:	b.ne	3f84 <ctf_add_type_internal+0x4b0>  // b.any
    3e40:	ldr	x0, [sp, #64]
    3e44:	add	x1, sp, #0xb8
    3e48:	mov	x2, x1
    3e4c:	ldr	x1, [sp, #56]
    3e50:	bl	0 <ctf_type_encoding>
    3e54:	cmp	w0, #0x0
    3e58:	b.eq	3e74 <ctf_add_type_internal+0x3a0>  // b.none
    3e5c:	ldr	x0, [sp, #64]
    3e60:	bl	0 <ctf_errno>
    3e64:	mov	w1, w0
    3e68:	ldr	x0, [sp, #72]
    3e6c:	bl	0 <ctf_set_errno>
    3e70:	b	4854 <ctf_add_type_internal+0xd80>
    3e74:	ldr	x0, [sp, #360]
    3e78:	cmn	x0, #0x1
    3e7c:	b.eq	3f84 <ctf_add_type_internal+0x4b0>  // b.none
    3e80:	ldr	x0, [sp, #72]
    3e84:	str	x0, [sp, #96]
    3e88:	add	x0, sp, #0x60
    3e8c:	ldr	x1, [sp, #360]
    3e90:	bl	0 <ctf_lookup_by_id>
    3e94:	str	x0, [sp, #280]
    3e98:	ldr	x0, [sp, #280]
    3e9c:	cmp	x0, #0x0
    3ea0:	b.ne	3eac <ctf_add_type_internal+0x3d8>  // b.any
    3ea4:	mov	x0, #0xffffffffffffffff    	// #-1
    3ea8:	b	4854 <ctf_add_type_internal+0xd80>
    3eac:	add	x0, sp, #0xa8
    3eb0:	mov	x2, x0
    3eb4:	ldr	x1, [sp, #360]
    3eb8:	ldr	x0, [sp, #72]
    3ebc:	bl	0 <ctf_type_encoding>
    3ec0:	cmp	w0, #0x0
    3ec4:	b.eq	3ed0 <ctf_add_type_internal+0x3fc>  // b.none
    3ec8:	mov	x0, #0xffffffffffffffff    	// #-1
    3ecc:	b	4854 <ctf_add_type_internal+0xd80>
    3ed0:	ldr	x0, [sp, #96]
    3ed4:	ldr	x0, [x0]
    3ed8:	ldr	x1, [x0, #8]
    3edc:	ldr	x0, [sp, #280]
    3ee0:	ldr	w0, [x0, #4]
    3ee4:	blr	x1
    3ee8:	and	w0, w0, #0x1
    3eec:	cmp	w0, #0x0
    3ef0:	b.eq	3f44 <ctf_add_type_internal+0x470>  // b.none
    3ef4:	add	x1, sp, #0xa8
    3ef8:	add	x0, sp, #0xb8
    3efc:	mov	x2, #0xc                   	// #12
    3f00:	bl	0 <memcmp>
    3f04:	cmp	w0, #0x0
    3f08:	b.ne	3f34 <ctf_add_type_internal+0x460>  // b.any
    3f0c:	ldr	w0, [sp, #308]
    3f10:	cmp	w0, #0xe
    3f14:	b.eq	3f84 <ctf_add_type_internal+0x4b0>  // b.none
    3f18:	ldr	x0, [sp, #64]
    3f1c:	ldr	x3, [sp, #360]
    3f20:	ldr	x2, [sp, #72]
    3f24:	ldr	x1, [sp, #56]
    3f28:	bl	0 <ctf_add_type_mapping>
    3f2c:	ldr	x0, [sp, #360]
    3f30:	b	4854 <ctf_add_type_internal+0xd80>
    3f34:	mov	w1, #0x411                 	// #1041
    3f38:	ldr	x0, [sp, #72]
    3f3c:	bl	0 <ctf_set_errno>
    3f40:	b	4854 <ctf_add_type_internal+0xd80>
    3f44:	add	x1, sp, #0xa8
    3f48:	add	x0, sp, #0xb8
    3f4c:	mov	x2, #0xc                   	// #12
    3f50:	bl	0 <memcmp>
    3f54:	cmp	w0, #0x0
    3f58:	b.ne	3f84 <ctf_add_type_internal+0x4b0>  // b.any
    3f5c:	ldr	w0, [sp, #308]
    3f60:	cmp	w0, #0xe
    3f64:	b.eq	3f84 <ctf_add_type_internal+0x4b0>  // b.none
    3f68:	ldr	x0, [sp, #64]
    3f6c:	ldr	x3, [sp, #360]
    3f70:	ldr	x2, [sp, #72]
    3f74:	ldr	x1, [sp, #56]
    3f78:	bl	0 <ctf_add_type_mapping>
    3f7c:	ldr	x0, [sp, #360]
    3f80:	b	4854 <ctf_add_type_internal+0xd80>
    3f84:	ldr	x0, [sp, #64]
    3f88:	str	x0, [sp, #224]
    3f8c:	ldr	x0, [sp, #56]
    3f90:	str	x0, [sp, #232]
    3f94:	str	xzr, [sp, #240]
    3f98:	ldr	x0, [sp, #72]
    3f9c:	str	x0, [sp, #200]
    3fa0:	ldr	x0, [sp, #360]
    3fa4:	str	x0, [sp, #208]
    3fa8:	str	xzr, [sp, #216]
    3fac:	ldr	x0, [sp, #48]
    3fb0:	ldr	x0, [x0, #696]
    3fb4:	ldr	x1, [sp, #56]
    3fb8:	mov	x2, #0x1                   	// #1
    3fbc:	bl	0 <ctf_dynhash_insert>
    3fc0:	cmp	w0, #0x0
    3fc4:	b.ge	3fd8 <ctf_add_type_internal+0x504>  // b.tcont
    3fc8:	mov	w1, #0xc                   	// #12
    3fcc:	ldr	x0, [sp, #72]
    3fd0:	bl	0 <ctf_set_errno>
    3fd4:	b	4854 <ctf_add_type_internal+0xd80>
    3fd8:	ldr	w0, [sp, #308]
    3fdc:	cmp	w0, #0xe
    3fe0:	b.eq	410c <ctf_add_type_internal+0x638>  // b.none
    3fe4:	ldr	w0, [sp, #308]
    3fe8:	cmp	w0, #0xe
    3fec:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    3ff0:	ldr	w0, [sp, #308]
    3ff4:	cmp	w0, #0xd
    3ff8:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    3ffc:	ldr	w0, [sp, #308]
    4000:	cmp	w0, #0xb
    4004:	b.cs	416c <ctf_add_type_internal+0x698>  // b.hs, b.nlast
    4008:	ldr	w0, [sp, #308]
    400c:	cmp	w0, #0xa
    4010:	b.eq	478c <ctf_add_type_internal+0xcb8>  // b.none
    4014:	ldr	w0, [sp, #308]
    4018:	cmp	w0, #0xa
    401c:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    4020:	ldr	w0, [sp, #308]
    4024:	cmp	w0, #0x9
    4028:	b.eq	4764 <ctf_add_type_internal+0xc90>  // b.none
    402c:	ldr	w0, [sp, #308]
    4030:	cmp	w0, #0x9
    4034:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    4038:	ldr	w0, [sp, #308]
    403c:	cmp	w0, #0x8
    4040:	b.eq	4670 <ctf_add_type_internal+0xb9c>  // b.none
    4044:	ldr	w0, [sp, #308]
    4048:	cmp	w0, #0x8
    404c:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    4050:	ldr	w0, [sp, #308]
    4054:	cmp	w0, #0x7
    4058:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    405c:	ldr	w0, [sp, #308]
    4060:	cmp	w0, #0x6
    4064:	b.cs	437c <ctf_add_type_internal+0x8a8>  // b.hs, b.nlast
    4068:	ldr	w0, [sp, #308]
    406c:	cmp	w0, #0x5
    4070:	b.eq	431c <ctf_add_type_internal+0x848>  // b.none
    4074:	ldr	w0, [sp, #308]
    4078:	cmp	w0, #0x5
    407c:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    4080:	ldr	w0, [sp, #308]
    4084:	cmp	w0, #0x4
    4088:	b.eq	41c8 <ctf_add_type_internal+0x6f4>  // b.none
    408c:	ldr	w0, [sp, #308]
    4090:	cmp	w0, #0x4
    4094:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    4098:	ldr	w0, [sp, #308]
    409c:	cmp	w0, #0x3
    40a0:	b.eq	416c <ctf_add_type_internal+0x698>  // b.none
    40a4:	ldr	w0, [sp, #308]
    40a8:	cmp	w0, #0x3
    40ac:	b.hi	47f4 <ctf_add_type_internal+0xd20>  // b.pmore
    40b0:	ldr	w0, [sp, #308]
    40b4:	cmp	w0, #0x1
    40b8:	b.eq	40cc <ctf_add_type_internal+0x5f8>  // b.none
    40bc:	ldr	w0, [sp, #308]
    40c0:	cmp	w0, #0x2
    40c4:	b.eq	40ec <ctf_add_type_internal+0x618>  // b.none
    40c8:	b	47f4 <ctf_add_type_internal+0xd20>
    40cc:	add	x0, sp, #0xb8
    40d0:	mov	x3, x0
    40d4:	ldr	x2, [sp, #312]
    40d8:	ldr	w1, [sp, #304]
    40dc:	ldr	x0, [sp, #72]
    40e0:	bl	22e8 <ctf_add_integer>
    40e4:	str	x0, [sp, #360]
    40e8:	b	4830 <ctf_add_type_internal+0xd5c>
    40ec:	add	x0, sp, #0xb8
    40f0:	mov	x3, x0
    40f4:	ldr	x2, [sp, #312]
    40f8:	ldr	w1, [sp, #304]
    40fc:	ldr	x0, [sp, #72]
    4100:	bl	2320 <ctf_add_float>
    4104:	str	x0, [sp, #360]
    4108:	b	4830 <ctf_add_type_internal+0xd5c>
    410c:	ldr	x0, [sp, #64]
    4110:	ldr	x1, [sp, #56]
    4114:	bl	0 <ctf_type_reference>
    4118:	str	x0, [sp, #56]
    411c:	ldr	x0, [sp, #64]
    4120:	ldr	x3, [sp, #48]
    4124:	ldr	x2, [sp, #56]
    4128:	mov	x1, x0
    412c:	ldr	x0, [sp, #72]
    4130:	bl	3ad4 <ctf_add_type_internal>
    4134:	str	x0, [sp, #56]
    4138:	ldr	x0, [sp, #56]
    413c:	cmn	x0, #0x1
    4140:	b.ne	414c <ctf_add_type_internal+0x678>  // b.any
    4144:	mov	x0, #0xffffffffffffffff    	// #-1
    4148:	b	4854 <ctf_add_type_internal+0xd80>
    414c:	add	x0, sp, #0xb8
    4150:	mov	x3, x0
    4154:	ldr	x2, [sp, #56]
    4158:	ldr	w1, [sp, #304]
    415c:	ldr	x0, [sp, #72]
    4160:	bl	2128 <ctf_add_slice>
    4164:	str	x0, [sp, #360]
    4168:	b	4830 <ctf_add_type_internal+0xd5c>
    416c:	ldr	x0, [sp, #64]
    4170:	ldr	x1, [sp, #56]
    4174:	bl	0 <ctf_type_reference>
    4178:	str	x0, [sp, #56]
    417c:	ldr	x0, [sp, #64]
    4180:	ldr	x3, [sp, #48]
    4184:	ldr	x2, [sp, #56]
    4188:	mov	x1, x0
    418c:	ldr	x0, [sp, #72]
    4190:	bl	3ad4 <ctf_add_type_internal>
    4194:	str	x0, [sp, #56]
    4198:	ldr	x0, [sp, #56]
    419c:	cmn	x0, #0x1
    41a0:	b.ne	41ac <ctf_add_type_internal+0x6d8>  // b.any
    41a4:	mov	x0, #0xffffffffffffffff    	// #-1
    41a8:	b	4854 <ctf_add_type_internal+0xd80>
    41ac:	ldr	w3, [sp, #308]
    41b0:	ldr	x2, [sp, #56]
    41b4:	ldr	w1, [sp, #304]
    41b8:	ldr	x0, [sp, #72]
    41bc:	bl	1f00 <ctf_add_reftype>
    41c0:	str	x0, [sp, #360]
    41c4:	b	4830 <ctf_add_type_internal+0xd5c>
    41c8:	ldr	x0, [sp, #64]
    41cc:	add	x1, sp, #0x90
    41d0:	mov	x2, x1
    41d4:	ldr	x1, [sp, #56]
    41d8:	bl	0 <ctf_array_info>
    41dc:	cmp	w0, #0x0
    41e0:	b.eq	41fc <ctf_add_type_internal+0x728>  // b.none
    41e4:	ldr	x0, [sp, #64]
    41e8:	bl	0 <ctf_errno>
    41ec:	mov	w1, w0
    41f0:	ldr	x0, [sp, #72]
    41f4:	bl	0 <ctf_set_errno>
    41f8:	b	4854 <ctf_add_type_internal+0xd80>
    41fc:	ldr	x0, [sp, #64]
    4200:	ldr	x1, [sp, #144]
    4204:	ldr	x3, [sp, #48]
    4208:	mov	x2, x1
    420c:	mov	x1, x0
    4210:	ldr	x0, [sp, #72]
    4214:	bl	3ad4 <ctf_add_type_internal>
    4218:	str	x0, [sp, #144]
    421c:	ldr	x0, [sp, #64]
    4220:	ldr	x1, [sp, #152]
    4224:	ldr	x3, [sp, #48]
    4228:	mov	x2, x1
    422c:	mov	x1, x0
    4230:	ldr	x0, [sp, #72]
    4234:	bl	3ad4 <ctf_add_type_internal>
    4238:	str	x0, [sp, #152]
    423c:	ldr	w0, [sp, #160]
    4240:	str	w0, [sp, #160]
    4244:	ldr	x0, [sp, #144]
    4248:	cmn	x0, #0x1
    424c:	b.eq	425c <ctf_add_type_internal+0x788>  // b.none
    4250:	ldr	x0, [sp, #152]
    4254:	cmn	x0, #0x1
    4258:	b.ne	4264 <ctf_add_type_internal+0x790>  // b.any
    425c:	mov	x0, #0xffffffffffffffff    	// #-1
    4260:	b	4854 <ctf_add_type_internal+0xd80>
    4264:	ldr	x0, [sp, #360]
    4268:	cmn	x0, #0x1
    426c:	b.eq	4300 <ctf_add_type_internal+0x82c>  // b.none
    4270:	add	x0, sp, #0x78
    4274:	mov	x2, x0
    4278:	ldr	x1, [sp, #360]
    427c:	ldr	x0, [sp, #72]
    4280:	bl	0 <ctf_array_info>
    4284:	cmp	w0, #0x0
    4288:	b.eq	4294 <ctf_add_type_internal+0x7c0>  // b.none
    428c:	mov	x0, #0xffffffffffffffff    	// #-1
    4290:	b	4854 <ctf_add_type_internal+0xd80>
    4294:	add	x1, sp, #0x78
    4298:	add	x0, sp, #0x90
    429c:	mov	x2, #0x18                  	// #24
    42a0:	bl	0 <memcmp>
    42a4:	cmp	w0, #0x0
    42a8:	b.eq	4804 <ctf_add_type_internal+0xd30>  // b.none
    42ac:	ldr	x1, [sp, #144]
    42b0:	ldr	x2, [sp, #152]
    42b4:	ldr	w3, [sp, #160]
    42b8:	ldr	x4, [sp, #120]
    42bc:	ldr	x5, [sp, #128]
    42c0:	ldr	w0, [sp, #136]
    42c4:	str	w0, [sp]
    42c8:	mov	x7, x5
    42cc:	mov	x6, x4
    42d0:	mov	w5, w3
    42d4:	mov	x4, x2
    42d8:	mov	x3, x1
    42dc:	ldr	x2, [sp, #360]
    42e0:	ldr	x1, [sp, #312]
    42e4:	adrp	x0, 0 <ctf_qsort_r>
    42e8:	add	x0, x0, #0x0
    42ec:	bl	0 <ctf_dprintf>
    42f0:	mov	w1, #0x411                 	// #1041
    42f4:	ldr	x0, [sp, #72]
    42f8:	bl	0 <ctf_set_errno>
    42fc:	b	4854 <ctf_add_type_internal+0xd80>
    4300:	add	x0, sp, #0x90
    4304:	mov	x2, x0
    4308:	ldr	w1, [sp, #304]
    430c:	ldr	x0, [sp, #72]
    4310:	bl	2388 <ctf_add_array>
    4314:	str	x0, [sp, #360]
    4318:	b	4804 <ctf_add_type_internal+0xd30>
    431c:	ldr	x1, [sp, #64]
    4320:	ldr	x0, [sp, #320]
    4324:	ldr	w0, [x0, #8]
    4328:	mov	w0, w0
    432c:	ldr	x3, [sp, #48]
    4330:	mov	x2, x0
    4334:	ldr	x0, [sp, #72]
    4338:	bl	3ad4 <ctf_add_type_internal>
    433c:	str	x0, [sp, #104]
    4340:	str	wzr, [sp, #112]
    4344:	str	wzr, [sp, #116]
    4348:	ldr	x0, [sp, #104]
    434c:	cmn	x0, #0x1
    4350:	b.ne	435c <ctf_add_type_internal+0x888>  // b.any
    4354:	mov	x0, #0xffffffffffffffff    	// #-1
    4358:	b	4854 <ctf_add_type_internal+0xd80>
    435c:	add	x0, sp, #0x68
    4360:	mov	x3, #0x0                   	// #0
    4364:	mov	x2, x0
    4368:	ldr	w1, [sp, #304]
    436c:	ldr	x0, [sp, #72]
    4370:	bl	255c <ctf_add_function>
    4374:	str	x0, [sp, #360]
    4378:	b	4830 <ctf_add_type_internal+0xd5c>
    437c:	str	wzr, [sp, #340]
    4380:	ldr	x0, [sp, #360]
    4384:	cmn	x0, #0x1
    4388:	b.eq	445c <ctf_add_type_internal+0x988>  // b.none
    438c:	ldr	w0, [sp, #308]
    4390:	cmp	w0, #0x9
    4394:	b.eq	445c <ctf_add_type_internal+0x988>  // b.none
    4398:	ldr	w0, [sp, #356]
    439c:	cmp	w0, #0x9
    43a0:	b.eq	445c <ctf_add_type_internal+0x988>  // b.none
    43a4:	ldr	x0, [sp, #64]
    43a8:	ldr	x1, [sp, #56]
    43ac:	bl	0 <ctf_type_size>
    43b0:	mov	x19, x0
    43b4:	ldr	x1, [sp, #360]
    43b8:	ldr	x0, [sp, #72]
    43bc:	bl	0 <ctf_type_size>
    43c0:	cmp	x19, x0
    43c4:	b.eq	4410 <ctf_add_type_internal+0x93c>  // b.none
    43c8:	ldr	x0, [sp, #64]
    43cc:	ldr	x1, [sp, #56]
    43d0:	bl	0 <ctf_type_size>
    43d4:	mov	x19, x0
    43d8:	ldr	x1, [sp, #360]
    43dc:	ldr	x0, [sp, #72]
    43e0:	bl	0 <ctf_type_size>
    43e4:	mov	x4, x0
    43e8:	mov	x3, x19
    43ec:	ldr	x2, [sp, #360]
    43f0:	ldr	x1, [sp, #312]
    43f4:	adrp	x0, 0 <ctf_qsort_r>
    43f8:	add	x0, x0, #0x0
    43fc:	bl	0 <ctf_dprintf>
    4400:	mov	w1, #0x411                 	// #1041
    4404:	ldr	x0, [sp, #72]
    4408:	bl	0 <ctf_set_errno>
    440c:	b	4854 <ctf_add_type_internal+0xd80>
    4410:	ldr	x4, [sp, #64]
    4414:	add	x0, sp, #0xc8
    4418:	mov	x3, x0
    441c:	adrp	x0, 0 <ctf_qsort_r>
    4420:	add	x2, x0, #0x0
    4424:	ldr	x1, [sp, #56]
    4428:	mov	x0, x4
    442c:	bl	0 <ctf_member_iter>
    4430:	cmp	w0, #0x0
    4434:	b.eq	480c <ctf_add_type_internal+0xd38>  // b.none
    4438:	ldr	x2, [sp, #360]
    443c:	ldr	x1, [sp, #312]
    4440:	adrp	x0, 0 <ctf_qsort_r>
    4444:	add	x0, x0, #0x0
    4448:	bl	0 <ctf_dprintf>
    444c:	mov	w1, #0x411                 	// #1041
    4450:	ldr	x0, [sp, #72]
    4454:	bl	0 <ctf_set_errno>
    4458:	b	4854 <ctf_add_type_internal+0xd80>
    445c:	ldr	w0, [sp, #308]
    4460:	add	x1, sp, #0x58
    4464:	mov	x4, x1
    4468:	mov	w3, w0
    446c:	ldr	x2, [sp, #312]
    4470:	ldr	w1, [sp, #304]
    4474:	ldr	x0, [sp, #72]
    4478:	bl	1b40 <ctf_add_generic>
    447c:	str	x0, [sp, #360]
    4480:	ldr	x0, [sp, #360]
    4484:	cmn	x0, #0x1
    4488:	b.ne	4494 <ctf_add_type_internal+0x9c0>  // b.any
    448c:	mov	x0, #0xffffffffffffffff    	// #-1
    4490:	b	4854 <ctf_add_type_internal+0xd80>
    4494:	ldr	x0, [sp, #360]
    4498:	str	x0, [sp, #208]
    449c:	ldr	x0, [sp, #88]
    44a0:	str	x0, [sp, #216]
    44a4:	ldr	x0, [sp, #64]
    44a8:	ldr	x3, [sp, #360]
    44ac:	ldr	x2, [sp, #72]
    44b0:	ldr	x1, [sp, #56]
    44b4:	bl	0 <ctf_add_type_mapping>
    44b8:	ldr	x4, [sp, #64]
    44bc:	add	x0, sp, #0xc8
    44c0:	mov	x3, x0
    44c4:	adrp	x0, 0 <ctf_qsort_r>
    44c8:	add	x2, x0, #0x0
    44cc:	ldr	x1, [sp, #56]
    44d0:	mov	x0, x4
    44d4:	bl	0 <ctf_member_iter>
    44d8:	cmp	w0, #0x0
    44dc:	b.eq	44ec <ctf_add_type_internal+0xa18>  // b.none
    44e0:	ldr	w0, [sp, #340]
    44e4:	add	w0, w0, #0x1
    44e8:	str	w0, [sp, #340]
    44ec:	ldr	x0, [sp, #64]
    44f0:	ldr	x1, [sp, #56]
    44f4:	bl	0 <ctf_type_size>
    44f8:	str	x0, [sp, #272]
    44fc:	ldr	x0, [sp, #272]
    4500:	cmp	x0, #0x0
    4504:	b.ge	4510 <ctf_add_type_internal+0xa3c>  // b.tcont
    4508:	mov	x0, #0xffffffffffffffff    	// #-1
    450c:	b	4854 <ctf_add_type_internal+0xd80>
    4510:	ldr	x0, [sp, #272]
    4514:	str	x0, [sp, #264]
    4518:	ldr	x1, [sp, #264]
    451c:	mov	x0, #0xfffffffe            	// #4294967294
    4520:	cmp	x1, x0
    4524:	b.ls	4554 <ctf_add_type_internal+0xa80>  // b.plast
    4528:	ldr	x0, [sp, #88]
    452c:	mov	w1, #0xffffffff            	// #-1
    4530:	str	w1, [x0, #32]
    4534:	ldr	x0, [sp, #264]
    4538:	lsr	x1, x0, #32
    453c:	ldr	x0, [sp, #88]
    4540:	str	w1, [x0, #36]
    4544:	ldr	x0, [sp, #88]
    4548:	ldr	x1, [sp, #264]
    454c:	str	w1, [x0, #40]
    4550:	b	4560 <ctf_add_type_internal+0xa8c>
    4554:	ldr	x0, [sp, #88]
    4558:	ldr	x1, [sp, #264]
    455c:	str	w1, [x0, #32]
    4560:	ldr	w0, [sp, #308]
    4564:	lsl	w1, w0, #26
    4568:	ldr	w0, [sp, #304]
    456c:	cmp	w0, #0x0
    4570:	b.eq	457c <ctf_add_type_internal+0xaa8>  // b.none
    4574:	mov	w0, #0x2000000             	// #33554432
    4578:	b	4580 <ctf_add_type_internal+0xaac>
    457c:	mov	w0, #0x0                   	// #0
    4580:	orr	w2, w0, w1
    4584:	ldr	w0, [sp, #300]
    4588:	and	w1, w0, #0xffffff
    458c:	ldr	x0, [sp, #88]
    4590:	orr	w1, w2, w1
    4594:	str	w1, [x0, #28]
    4598:	ldr	x0, [sp, #88]
    459c:	ldr	x0, [x0, #56]
    45a0:	str	x0, [sp, #344]
    45a4:	b	4650 <ctf_add_type_internal+0xb7c>
    45a8:	ldr	x0, [sp, #72]
    45ac:	str	x0, [sp, #80]
    45b0:	ldr	x3, [sp, #64]
    45b4:	ldr	x0, [sp, #344]
    45b8:	ldr	x0, [x0, #24]
    45bc:	add	x1, sp, #0x50
    45c0:	mov	x2, x1
    45c4:	mov	x1, x0
    45c8:	mov	x0, x3
    45cc:	bl	0 <ctf_type_mapping>
    45d0:	str	x0, [sp, #256]
    45d4:	ldr	x0, [sp, #256]
    45d8:	cmp	x0, #0x0
    45dc:	b.ne	4638 <ctf_add_type_internal+0xb64>  // b.any
    45e0:	ldr	x1, [sp, #64]
    45e4:	ldr	x0, [sp, #344]
    45e8:	ldr	x0, [x0, #24]
    45ec:	ldr	x3, [sp, #48]
    45f0:	mov	x2, x0
    45f4:	ldr	x0, [sp, #72]
    45f8:	bl	3ad4 <ctf_add_type_internal>
    45fc:	mov	x1, x0
    4600:	ldr	x0, [sp, #344]
    4604:	str	x1, [x0, #24]
    4608:	ldr	x0, [sp, #344]
    460c:	ldr	x0, [x0, #24]
    4610:	cmn	x0, #0x1
    4614:	b.ne	4644 <ctf_add_type_internal+0xb70>  // b.any
    4618:	ldr	x0, [sp, #72]
    461c:	bl	0 <ctf_errno>
    4620:	cmp	w0, #0x41b
    4624:	b.eq	4644 <ctf_add_type_internal+0xb70>  // b.none
    4628:	ldr	w0, [sp, #340]
    462c:	add	w0, w0, #0x1
    4630:	str	w0, [sp, #340]
    4634:	b	4644 <ctf_add_type_internal+0xb70>
    4638:	ldr	x0, [sp, #344]
    463c:	ldr	x1, [sp, #256]
    4640:	str	x1, [x0, #24]
    4644:	ldr	x0, [sp, #344]
    4648:	ldr	x0, [x0, #8]
    464c:	str	x0, [sp, #344]
    4650:	ldr	x0, [sp, #344]
    4654:	cmp	x0, #0x0
    4658:	b.ne	45a8 <ctf_add_type_internal+0xad4>  // b.any
    465c:	ldr	w0, [sp, #340]
    4660:	cmp	w0, #0x0
    4664:	b.eq	4814 <ctf_add_type_internal+0xd40>  // b.none
    4668:	mov	x0, #0xffffffffffffffff    	// #-1
    466c:	b	4854 <ctf_add_type_internal+0xd80>
    4670:	ldr	x0, [sp, #360]
    4674:	cmn	x0, #0x1
    4678:	b.eq	4704 <ctf_add_type_internal+0xc30>  // b.none
    467c:	ldr	w0, [sp, #308]
    4680:	cmp	w0, #0x9
    4684:	b.eq	4704 <ctf_add_type_internal+0xc30>  // b.none
    4688:	ldr	w0, [sp, #356]
    468c:	cmp	w0, #0x9
    4690:	b.eq	4704 <ctf_add_type_internal+0xc30>  // b.none
    4694:	ldr	x4, [sp, #64]
    4698:	add	x0, sp, #0xc8
    469c:	mov	x3, x0
    46a0:	adrp	x0, 0 <ctf_qsort_r>
    46a4:	add	x2, x0, #0x0
    46a8:	ldr	x1, [sp, #56]
    46ac:	mov	x0, x4
    46b0:	bl	0 <ctf_enum_iter>
    46b4:	cmp	w0, #0x0
    46b8:	b.ne	46e0 <ctf_add_type_internal+0xc0c>  // b.any
    46bc:	add	x0, sp, #0xe0
    46c0:	mov	x3, x0
    46c4:	adrp	x0, 0 <ctf_qsort_r>
    46c8:	add	x2, x0, #0x0
    46cc:	ldr	x1, [sp, #360]
    46d0:	ldr	x0, [sp, #72]
    46d4:	bl	0 <ctf_enum_iter>
    46d8:	cmp	w0, #0x0
    46dc:	b.eq	475c <ctf_add_type_internal+0xc88>  // b.none
    46e0:	ldr	x2, [sp, #360]
    46e4:	ldr	x1, [sp, #312]
    46e8:	adrp	x0, 0 <ctf_qsort_r>
    46ec:	add	x0, x0, #0x0
    46f0:	bl	0 <ctf_dprintf>
    46f4:	mov	w1, #0x411                 	// #1041
    46f8:	ldr	x0, [sp, #72]
    46fc:	bl	0 <ctf_set_errno>
    4700:	b	4854 <ctf_add_type_internal+0xd80>
    4704:	ldr	x2, [sp, #312]
    4708:	ldr	w1, [sp, #304]
    470c:	ldr	x0, [sp, #72]
    4710:	bl	2a40 <ctf_add_enum>
    4714:	str	x0, [sp, #360]
    4718:	ldr	x0, [sp, #360]
    471c:	str	x0, [sp, #208]
    4720:	ldr	x0, [sp, #208]
    4724:	cmn	x0, #0x1
    4728:	b.eq	4754 <ctf_add_type_internal+0xc80>  // b.none
    472c:	ldr	x4, [sp, #64]
    4730:	add	x0, sp, #0xc8
    4734:	mov	x3, x0
    4738:	adrp	x0, 0 <ctf_qsort_r>
    473c:	add	x2, x0, #0x0
    4740:	ldr	x1, [sp, #56]
    4744:	mov	x0, x4
    4748:	bl	0 <ctf_enum_iter>
    474c:	cmp	w0, #0x0
    4750:	b.eq	481c <ctf_add_type_internal+0xd48>  // b.none
    4754:	mov	x0, #0xffffffffffffffff    	// #-1
    4758:	b	4854 <ctf_add_type_internal+0xd80>
    475c:	nop
    4760:	b	481c <ctf_add_type_internal+0xd48>
    4764:	ldr	x0, [sp, #360]
    4768:	cmn	x0, #0x1
    476c:	b.ne	4824 <ctf_add_type_internal+0xd50>  // b.any
    4770:	ldr	w3, [sp, #352]
    4774:	ldr	x2, [sp, #312]
    4778:	ldr	w1, [sp, #304]
    477c:	ldr	x0, [sp, #72]
    4780:	bl	2be4 <ctf_add_forward>
    4784:	str	x0, [sp, #360]
    4788:	b	4824 <ctf_add_type_internal+0xd50>
    478c:	ldr	x0, [sp, #64]
    4790:	ldr	x1, [sp, #56]
    4794:	bl	0 <ctf_type_reference>
    4798:	str	x0, [sp, #56]
    479c:	ldr	x0, [sp, #64]
    47a0:	ldr	x3, [sp, #48]
    47a4:	ldr	x2, [sp, #56]
    47a8:	mov	x1, x0
    47ac:	ldr	x0, [sp, #72]
    47b0:	bl	3ad4 <ctf_add_type_internal>
    47b4:	str	x0, [sp, #56]
    47b8:	ldr	x0, [sp, #56]
    47bc:	cmn	x0, #0x1
    47c0:	b.ne	47cc <ctf_add_type_internal+0xcf8>  // b.any
    47c4:	mov	x0, #0xffffffffffffffff    	// #-1
    47c8:	b	4854 <ctf_add_type_internal+0xd80>
    47cc:	ldr	x0, [sp, #360]
    47d0:	cmn	x0, #0x1
    47d4:	b.ne	482c <ctf_add_type_internal+0xd58>  // b.any
    47d8:	ldr	x3, [sp, #56]
    47dc:	ldr	x2, [sp, #312]
    47e0:	ldr	w1, [sp, #304]
    47e4:	ldr	x0, [sp, #72]
    47e8:	bl	2cc4 <ctf_add_typedef>
    47ec:	str	x0, [sp, #360]
    47f0:	b	482c <ctf_add_type_internal+0xd58>
    47f4:	mov	w1, #0x3ef                 	// #1007
    47f8:	ldr	x0, [sp, #72]
    47fc:	bl	0 <ctf_set_errno>
    4800:	b	4854 <ctf_add_type_internal+0xd80>
    4804:	nop
    4808:	b	4830 <ctf_add_type_internal+0xd5c>
    480c:	nop
    4810:	b	4830 <ctf_add_type_internal+0xd5c>
    4814:	nop
    4818:	b	4830 <ctf_add_type_internal+0xd5c>
    481c:	nop
    4820:	b	4830 <ctf_add_type_internal+0xd5c>
    4824:	nop
    4828:	b	4830 <ctf_add_type_internal+0xd5c>
    482c:	nop
    4830:	ldr	x0, [sp, #360]
    4834:	cmn	x0, #0x1
    4838:	b.eq	4850 <ctf_add_type_internal+0xd7c>  // b.none
    483c:	ldr	x0, [sp, #64]
    4840:	ldr	x3, [sp, #360]
    4844:	ldr	x2, [sp, #72]
    4848:	ldr	x1, [sp, #328]
    484c:	bl	0 <ctf_add_type_mapping>
    4850:	ldr	x0, [sp, #360]
    4854:	ldr	x19, [sp, #32]
    4858:	ldp	x29, x30, [sp, #16]
    485c:	add	sp, sp, #0x170
    4860:	ret

0000000000004864 <ctf_add_type>:
    4864:	stp	x29, x30, [sp, #-64]!
    4868:	mov	x29, sp
    486c:	str	x0, [sp, #40]
    4870:	str	x1, [sp, #32]
    4874:	str	x2, [sp, #24]
    4878:	ldr	x0, [sp, #32]
    487c:	ldr	x0, [x0, #696]
    4880:	cmp	x0, #0x0
    4884:	b.ne	48b0 <ctf_add_type+0x4c>  // b.any
    4888:	mov	x3, #0x0                   	// #0
    488c:	mov	x2, #0x0                   	// #0
    4890:	adrp	x0, 0 <ctf_hash_eq_integer>
    4894:	add	x1, x0, #0x0
    4898:	adrp	x0, 0 <ctf_hash_integer>
    489c:	add	x0, x0, #0x0
    48a0:	bl	0 <ctf_dynhash_create>
    48a4:	mov	x1, x0
    48a8:	ldr	x0, [sp, #32]
    48ac:	str	x1, [x0, #696]
    48b0:	ldr	x0, [sp, #32]
    48b4:	ldr	x0, [x0, #696]
    48b8:	cmp	x0, #0x0
    48bc:	b.ne	48d0 <ctf_add_type+0x6c>  // b.any
    48c0:	mov	w1, #0xc                   	// #12
    48c4:	ldr	x0, [sp, #40]
    48c8:	bl	0 <ctf_set_errno>
    48cc:	b	48f8 <ctf_add_type+0x94>
    48d0:	ldr	x3, [sp, #32]
    48d4:	ldr	x2, [sp, #24]
    48d8:	ldr	x1, [sp, #32]
    48dc:	ldr	x0, [sp, #40]
    48e0:	bl	3ad4 <ctf_add_type_internal>
    48e4:	str	x0, [sp, #56]
    48e8:	ldr	x0, [sp, #32]
    48ec:	ldr	x0, [x0, #696]
    48f0:	bl	0 <ctf_dynhash_empty>
    48f4:	ldr	x0, [sp, #56]
    48f8:	ldp	x29, x30, [sp], #64
    48fc:	ret

0000000000004900 <ctf_gzwrite>:
    4900:	stp	x29, x30, [sp, #-64]!
    4904:	mov	x29, sp
    4908:	str	x0, [sp, #24]
    490c:	str	x1, [sp, #16]
    4910:	mov	x0, #0x34                  	// #52
    4914:	str	x0, [sp, #48]
    4918:	ldr	x0, [sp, #24]
    491c:	ldr	x0, [x0, #8]
    4920:	str	x0, [sp, #56]
    4924:	b	4988 <ctf_gzwrite+0x88>
    4928:	ldr	x0, [sp, #48]
    492c:	mov	w2, w0
    4930:	ldr	x1, [sp, #56]
    4934:	ldr	x0, [sp, #16]
    4938:	bl	0 <gzwrite>
    493c:	sxtw	x0, w0
    4940:	str	x0, [sp, #40]
    4944:	ldr	x0, [sp, #40]
    4948:	cmp	x0, #0x0
    494c:	b.gt	4968 <ctf_gzwrite+0x68>
    4950:	bl	0 <__errno_location>
    4954:	ldr	w0, [x0]
    4958:	mov	w1, w0
    495c:	ldr	x0, [sp, #24]
    4960:	bl	0 <ctf_set_errno>
    4964:	b	4a20 <ctf_gzwrite+0x120>
    4968:	ldr	x1, [sp, #48]
    496c:	ldr	x0, [sp, #40]
    4970:	sub	x0, x1, x0
    4974:	str	x0, [sp, #48]
    4978:	ldr	x0, [sp, #40]
    497c:	ldr	x1, [sp, #56]
    4980:	add	x0, x1, x0
    4984:	str	x0, [sp, #56]
    4988:	ldr	x0, [sp, #48]
    498c:	cmp	x0, #0x0
    4990:	b.ne	4928 <ctf_gzwrite+0x28>  // b.any
    4994:	ldr	x0, [sp, #24]
    4998:	ldr	x0, [x0, #416]
    499c:	str	x0, [sp, #48]
    49a0:	ldr	x0, [sp, #24]
    49a4:	ldr	x0, [x0, #408]
    49a8:	str	x0, [sp, #56]
    49ac:	b	4a10 <ctf_gzwrite+0x110>
    49b0:	ldr	x0, [sp, #48]
    49b4:	mov	w2, w0
    49b8:	ldr	x1, [sp, #56]
    49bc:	ldr	x0, [sp, #16]
    49c0:	bl	0 <gzwrite>
    49c4:	sxtw	x0, w0
    49c8:	str	x0, [sp, #40]
    49cc:	ldr	x0, [sp, #40]
    49d0:	cmp	x0, #0x0
    49d4:	b.gt	49f0 <ctf_gzwrite+0xf0>
    49d8:	bl	0 <__errno_location>
    49dc:	ldr	w0, [x0]
    49e0:	mov	w1, w0
    49e4:	ldr	x0, [sp, #24]
    49e8:	bl	0 <ctf_set_errno>
    49ec:	b	4a20 <ctf_gzwrite+0x120>
    49f0:	ldr	x1, [sp, #48]
    49f4:	ldr	x0, [sp, #40]
    49f8:	sub	x0, x1, x0
    49fc:	str	x0, [sp, #48]
    4a00:	ldr	x0, [sp, #40]
    4a04:	ldr	x1, [sp, #56]
    4a08:	add	x0, x1, x0
    4a0c:	str	x0, [sp, #56]
    4a10:	ldr	x0, [sp, #48]
    4a14:	cmp	x0, #0x0
    4a18:	b.ne	49b0 <ctf_gzwrite+0xb0>  // b.any
    4a1c:	mov	w0, #0x0                   	// #0
    4a20:	ldp	x29, x30, [sp], #64
    4a24:	ret

0000000000004a28 <ctf_compress_write>:
    4a28:	stp	x29, x30, [sp, #-160]!
    4a2c:	mov	x29, sp
    4a30:	str	x0, [sp, #24]
    4a34:	str	w1, [sp, #20]
    4a38:	add	x0, sp, #0x30
    4a3c:	str	x0, [sp, #144]
    4a40:	mov	x0, #0x34                  	// #52
    4a44:	str	x0, [sp, #136]
    4a48:	str	wzr, [sp, #132]
    4a4c:	ldr	x0, [sp, #24]
    4a50:	bl	72c <ctf_serialize>
    4a54:	cmp	w0, #0x0
    4a58:	b.ge	4a64 <ctf_compress_write+0x3c>  // b.tcont
    4a5c:	mov	w0, #0xffffffff            	// #-1
    4a60:	b	4c44 <ctf_compress_write+0x21c>
    4a64:	ldr	x0, [sp, #24]
    4a68:	ldr	x0, [x0, #8]
    4a6c:	ldr	x1, [sp, #136]
    4a70:	mov	x2, x1
    4a74:	mov	x1, x0
    4a78:	ldr	x0, [sp, #144]
    4a7c:	bl	0 <memcpy>
    4a80:	ldr	x0, [sp, #144]
    4a84:	ldrb	w0, [x0, #3]
    4a88:	orr	w0, w0, #0x1
    4a8c:	and	w1, w0, #0xff
    4a90:	ldr	x0, [sp, #144]
    4a94:	strb	w1, [x0, #3]
    4a98:	ldr	x0, [sp, #24]
    4a9c:	ldr	x0, [x0, #416]
    4aa0:	bl	0 <compressBound>
    4aa4:	str	x0, [sp, #40]
    4aa8:	ldr	x0, [sp, #40]
    4aac:	bl	0 <malloc>
    4ab0:	str	x0, [sp, #120]
    4ab4:	ldr	x0, [sp, #120]
    4ab8:	cmp	x0, #0x0
    4abc:	b.ne	4ad0 <ctf_compress_write+0xa8>  // b.any
    4ac0:	mov	w1, #0x3f6                 	// #1014
    4ac4:	ldr	x0, [sp, #24]
    4ac8:	bl	0 <ctf_set_errno>
    4acc:	b	4c44 <ctf_compress_write+0x21c>
    4ad0:	ldr	x0, [sp, #24]
    4ad4:	ldr	x1, [x0, #408]
    4ad8:	ldr	x0, [sp, #24]
    4adc:	ldr	x2, [x0, #416]
    4ae0:	add	x0, sp, #0x28
    4ae4:	mov	x3, x2
    4ae8:	mov	x2, x1
    4aec:	mov	x1, x0
    4af0:	ldr	x0, [sp, #120]
    4af4:	bl	0 <compress>
    4af8:	str	w0, [sp, #116]
    4afc:	ldr	w0, [sp, #116]
    4b00:	cmp	w0, #0x0
    4b04:	b.eq	4bb0 <ctf_compress_write+0x188>  // b.none
    4b08:	ldr	w0, [sp, #116]
    4b0c:	bl	0 <zError>
    4b10:	mov	x1, x0
    4b14:	adrp	x0, 0 <ctf_qsort_r>
    4b18:	add	x0, x0, #0x0
    4b1c:	bl	0 <ctf_dprintf>
    4b20:	mov	w1, #0x413                 	// #1043
    4b24:	ldr	x0, [sp, #24]
    4b28:	bl	0 <ctf_set_errno>
    4b2c:	str	w0, [sp, #132]
    4b30:	b	4c38 <ctf_compress_write+0x210>
    4b34:	ldr	x0, [sp, #136]
    4b38:	mov	x2, x0
    4b3c:	ldr	x1, [sp, #144]
    4b40:	ldr	w0, [sp, #20]
    4b44:	bl	0 <write>
    4b48:	str	x0, [sp, #104]
    4b4c:	ldr	x0, [sp, #104]
    4b50:	cmp	x0, #0x0
    4b54:	b.ge	4b74 <ctf_compress_write+0x14c>  // b.tcont
    4b58:	bl	0 <__errno_location>
    4b5c:	ldr	w0, [x0]
    4b60:	mov	w1, w0
    4b64:	ldr	x0, [sp, #24]
    4b68:	bl	0 <ctf_set_errno>
    4b6c:	str	w0, [sp, #132]
    4b70:	b	4c38 <ctf_compress_write+0x210>
    4b74:	ldr	x1, [sp, #136]
    4b78:	ldr	x0, [sp, #104]
    4b7c:	sub	x0, x1, x0
    4b80:	str	x0, [sp, #136]
    4b84:	ldr	x1, [sp, #104]
    4b88:	mov	x0, x1
    4b8c:	lsl	x0, x0, #1
    4b90:	add	x0, x0, x1
    4b94:	lsl	x0, x0, #2
    4b98:	add	x0, x0, x1
    4b9c:	lsl	x0, x0, #2
    4ba0:	mov	x1, x0
    4ba4:	ldr	x0, [sp, #144]
    4ba8:	add	x0, x0, x1
    4bac:	str	x0, [sp, #144]
    4bb0:	ldr	x0, [sp, #136]
    4bb4:	cmp	x0, #0x0
    4bb8:	b.gt	4b34 <ctf_compress_write+0x10c>
    4bbc:	ldr	x0, [sp, #120]
    4bc0:	str	x0, [sp, #152]
    4bc4:	b	4c28 <ctf_compress_write+0x200>
    4bc8:	ldr	x0, [sp, #40]
    4bcc:	mov	x2, x0
    4bd0:	ldr	x1, [sp, #152]
    4bd4:	ldr	w0, [sp, #20]
    4bd8:	bl	0 <write>
    4bdc:	str	x0, [sp, #104]
    4be0:	ldr	x0, [sp, #104]
    4be4:	cmp	x0, #0x0
    4be8:	b.ge	4c08 <ctf_compress_write+0x1e0>  // b.tcont
    4bec:	bl	0 <__errno_location>
    4bf0:	ldr	w0, [x0]
    4bf4:	mov	w1, w0
    4bf8:	ldr	x0, [sp, #24]
    4bfc:	bl	0 <ctf_set_errno>
    4c00:	str	w0, [sp, #132]
    4c04:	b	4c38 <ctf_compress_write+0x210>
    4c08:	ldr	x1, [sp, #40]
    4c0c:	ldr	x0, [sp, #104]
    4c10:	sub	x0, x1, x0
    4c14:	str	x0, [sp, #40]
    4c18:	ldr	x0, [sp, #104]
    4c1c:	ldr	x1, [sp, #152]
    4c20:	add	x0, x1, x0
    4c24:	str	x0, [sp, #152]
    4c28:	ldr	x0, [sp, #40]
    4c2c:	cmp	x0, #0x0
    4c30:	b.gt	4bc8 <ctf_compress_write+0x1a0>
    4c34:	nop
    4c38:	ldr	x0, [sp, #120]
    4c3c:	bl	0 <free>
    4c40:	ldr	w0, [sp, #132]
    4c44:	ldp	x29, x30, [sp], #160
    4c48:	ret

0000000000004c4c <ctf_write_mem>:
    4c4c:	stp	x29, x30, [sp, #-96]!
    4c50:	mov	x29, sp
    4c54:	str	x0, [sp, #40]
    4c58:	str	x1, [sp, #32]
    4c5c:	str	x2, [sp, #24]
    4c60:	mov	x0, #0x34                  	// #52
    4c64:	str	x0, [sp, #88]
    4c68:	ldr	x0, [sp, #40]
    4c6c:	bl	72c <ctf_serialize>
    4c70:	cmp	w0, #0x0
    4c74:	b.ge	4c80 <ctf_write_mem+0x34>  // b.tcont
    4c78:	mov	x0, #0x0                   	// #0
    4c7c:	b	4e24 <ctf_write_mem+0x1d8>
    4c80:	ldr	x0, [sp, #40]
    4c84:	ldr	x0, [x0, #416]
    4c88:	bl	0 <compressBound>
    4c8c:	str	x0, [sp, #48]
    4c90:	ldr	x0, [sp, #40]
    4c94:	ldr	x0, [x0, #416]
    4c98:	ldr	x1, [sp, #24]
    4c9c:	cmp	x1, x0
    4ca0:	b.ls	4cb0 <ctf_write_mem+0x64>  // b.plast
    4ca4:	ldr	x0, [sp, #40]
    4ca8:	ldr	x0, [x0, #416]
    4cac:	str	x0, [sp, #48]
    4cb0:	ldr	x0, [sp, #48]
    4cb4:	add	x0, x0, #0x34
    4cb8:	bl	0 <malloc>
    4cbc:	str	x0, [sp, #80]
    4cc0:	ldr	x0, [sp, #80]
    4cc4:	cmp	x0, #0x0
    4cc8:	b.ne	4ce0 <ctf_write_mem+0x94>  // b.any
    4ccc:	mov	w1, #0xc                   	// #12
    4cd0:	ldr	x0, [sp, #40]
    4cd4:	bl	0 <ctf_set_errno>
    4cd8:	mov	x0, #0x0                   	// #0
    4cdc:	b	4e24 <ctf_write_mem+0x1d8>
    4ce0:	ldr	x0, [sp, #80]
    4ce4:	str	x0, [sp, #72]
    4ce8:	ldr	x0, [sp, #40]
    4cec:	ldr	x0, [x0, #8]
    4cf0:	ldr	x1, [sp, #88]
    4cf4:	mov	x2, x1
    4cf8:	mov	x1, x0
    4cfc:	ldr	x0, [sp, #72]
    4d00:	bl	0 <memcpy>
    4d04:	ldr	x0, [sp, #80]
    4d08:	add	x0, x0, #0x34
    4d0c:	str	x0, [sp, #64]
    4d10:	ldr	x0, [sp, #32]
    4d14:	mov	x1, #0x34                  	// #52
    4d18:	str	x1, [x0]
    4d1c:	ldr	x0, [sp, #40]
    4d20:	ldr	x0, [x0, #416]
    4d24:	ldr	x1, [sp, #24]
    4d28:	cmp	x1, x0
    4d2c:	b.ls	4d84 <ctf_write_mem+0x138>  // b.plast
    4d30:	ldr	x0, [sp, #72]
    4d34:	ldrb	w0, [x0, #3]
    4d38:	and	w0, w0, #0xfffffffe
    4d3c:	and	w1, w0, #0xff
    4d40:	ldr	x0, [sp, #72]
    4d44:	strb	w1, [x0, #3]
    4d48:	ldr	x0, [sp, #40]
    4d4c:	ldr	x1, [x0, #408]
    4d50:	ldr	x0, [sp, #40]
    4d54:	ldr	x0, [x0, #416]
    4d58:	mov	x2, x0
    4d5c:	ldr	x0, [sp, #64]
    4d60:	bl	0 <memcpy>
    4d64:	ldr	x0, [sp, #32]
    4d68:	ldr	x1, [x0]
    4d6c:	ldr	x0, [sp, #40]
    4d70:	ldr	x0, [x0, #416]
    4d74:	add	x1, x1, x0
    4d78:	ldr	x0, [sp, #32]
    4d7c:	str	x1, [x0]
    4d80:	b	4e20 <ctf_write_mem+0x1d4>
    4d84:	ldr	x0, [sp, #72]
    4d88:	ldrb	w0, [x0, #3]
    4d8c:	orr	w0, w0, #0x1
    4d90:	and	w1, w0, #0xff
    4d94:	ldr	x0, [sp, #72]
    4d98:	strb	w1, [x0, #3]
    4d9c:	ldr	x0, [sp, #40]
    4da0:	ldr	x1, [x0, #408]
    4da4:	ldr	x0, [sp, #40]
    4da8:	ldr	x2, [x0, #416]
    4dac:	add	x0, sp, #0x30
    4db0:	mov	x3, x2
    4db4:	mov	x2, x1
    4db8:	mov	x1, x0
    4dbc:	ldr	x0, [sp, #64]
    4dc0:	bl	0 <compress>
    4dc4:	str	w0, [sp, #60]
    4dc8:	ldr	w0, [sp, #60]
    4dcc:	cmp	w0, #0x0
    4dd0:	b.eq	4e08 <ctf_write_mem+0x1bc>  // b.none
    4dd4:	ldr	w0, [sp, #60]
    4dd8:	bl	0 <zError>
    4ddc:	mov	x1, x0
    4de0:	adrp	x0, 0 <ctf_qsort_r>
    4de4:	add	x0, x0, #0x0
    4de8:	bl	0 <ctf_dprintf>
    4dec:	mov	w1, #0x413                 	// #1043
    4df0:	ldr	x0, [sp, #40]
    4df4:	bl	0 <ctf_set_errno>
    4df8:	ldr	x0, [sp, #80]
    4dfc:	bl	0 <free>
    4e00:	mov	x0, #0x0                   	// #0
    4e04:	b	4e24 <ctf_write_mem+0x1d8>
    4e08:	ldr	x0, [sp, #32]
    4e0c:	ldr	x0, [x0]
    4e10:	ldr	x1, [sp, #48]
    4e14:	add	x1, x0, x1
    4e18:	ldr	x0, [sp, #32]
    4e1c:	str	x1, [x0]
    4e20:	ldr	x0, [sp, #80]
    4e24:	ldp	x29, x30, [sp], #96
    4e28:	ret

0000000000004e2c <ctf_write>:
    4e2c:	stp	x29, x30, [sp, #-64]!
    4e30:	mov	x29, sp
    4e34:	str	x0, [sp, #24]
    4e38:	str	w1, [sp, #20]
    4e3c:	ldr	x0, [sp, #24]
    4e40:	bl	72c <ctf_serialize>
    4e44:	cmp	w0, #0x0
    4e48:	b.ge	4e54 <ctf_write+0x28>  // b.tcont
    4e4c:	mov	w0, #0xffffffff            	// #-1
    4e50:	b	4f5c <ctf_write+0x130>
    4e54:	mov	x0, #0x34                  	// #52
    4e58:	str	x0, [sp, #48]
    4e5c:	ldr	x0, [sp, #24]
    4e60:	ldr	x0, [x0, #8]
    4e64:	str	x0, [sp, #56]
    4e68:	b	4ec8 <ctf_write+0x9c>
    4e6c:	ldr	x0, [sp, #48]
    4e70:	mov	x2, x0
    4e74:	ldr	x1, [sp, #56]
    4e78:	ldr	w0, [sp, #20]
    4e7c:	bl	0 <write>
    4e80:	str	x0, [sp, #40]
    4e84:	ldr	x0, [sp, #40]
    4e88:	cmp	x0, #0x0
    4e8c:	b.gt	4ea8 <ctf_write+0x7c>
    4e90:	bl	0 <__errno_location>
    4e94:	ldr	w0, [x0]
    4e98:	mov	w1, w0
    4e9c:	ldr	x0, [sp, #24]
    4ea0:	bl	0 <ctf_set_errno>
    4ea4:	b	4f5c <ctf_write+0x130>
    4ea8:	ldr	x1, [sp, #48]
    4eac:	ldr	x0, [sp, #40]
    4eb0:	sub	x0, x1, x0
    4eb4:	str	x0, [sp, #48]
    4eb8:	ldr	x0, [sp, #40]
    4ebc:	ldr	x1, [sp, #56]
    4ec0:	add	x0, x1, x0
    4ec4:	str	x0, [sp, #56]
    4ec8:	ldr	x0, [sp, #48]
    4ecc:	cmp	x0, #0x0
    4ed0:	b.ne	4e6c <ctf_write+0x40>  // b.any
    4ed4:	ldr	x0, [sp, #24]
    4ed8:	ldr	x0, [x0, #416]
    4edc:	str	x0, [sp, #48]
    4ee0:	ldr	x0, [sp, #24]
    4ee4:	ldr	x0, [x0, #408]
    4ee8:	str	x0, [sp, #56]
    4eec:	b	4f4c <ctf_write+0x120>
    4ef0:	ldr	x0, [sp, #48]
    4ef4:	mov	x2, x0
    4ef8:	ldr	x1, [sp, #56]
    4efc:	ldr	w0, [sp, #20]
    4f00:	bl	0 <write>
    4f04:	str	x0, [sp, #40]
    4f08:	ldr	x0, [sp, #40]
    4f0c:	cmp	x0, #0x0
    4f10:	b.gt	4f2c <ctf_write+0x100>
    4f14:	bl	0 <__errno_location>
    4f18:	ldr	w0, [x0]
    4f1c:	mov	w1, w0
    4f20:	ldr	x0, [sp, #24]
    4f24:	bl	0 <ctf_set_errno>
    4f28:	b	4f5c <ctf_write+0x130>
    4f2c:	ldr	x1, [sp, #48]
    4f30:	ldr	x0, [sp, #40]
    4f34:	sub	x0, x1, x0
    4f38:	str	x0, [sp, #48]
    4f3c:	ldr	x0, [sp, #40]
    4f40:	ldr	x1, [sp, #56]
    4f44:	add	x0, x1, x0
    4f48:	str	x0, [sp, #56]
    4f4c:	ldr	x0, [sp, #48]
    4f50:	cmp	x0, #0x0
    4f54:	b.ne	4ef0 <ctf_write+0xc4>  // b.any
    4f58:	mov	w0, #0x0                   	// #0
    4f5c:	ldp	x29, x30, [sp], #64
    4f60:	ret

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	mov	x2, #0x68                  	// #104
  10:	mov	w1, #0x0                   	// #0
  14:	ldr	x0, [sp, #24]
  18:	bl	0 <memset>
  1c:	str	wzr, [sp, #44]
  20:	b	44 <ctf_decl_init+0x44>
  24:	ldr	x0, [sp, #24]
  28:	ldrsw	x1, [sp, #44]
  2c:	add	x1, x1, #0x10
  30:	mov	w2, #0xffffffff            	// #-1
  34:	str	w2, [x0, x1, lsl #2]
  38:	ldr	w0, [sp, #44]
  3c:	add	w0, w0, #0x1
  40:	str	w0, [sp, #44]
  44:	ldr	w0, [sp, #44]
  48:	cmp	w0, #0x3
  4c:	b.le	24 <ctf_decl_init+0x24>
  50:	ldr	x0, [sp, #24]
  54:	str	wzr, [x0, #80]
  58:	ldr	x0, [sp, #24]
  5c:	str	wzr, [x0, #84]
  60:	nop
  64:	ldp	x29, x30, [sp], #48
  68:	ret

000000000000006c <ctf_decl_fini>:
  6c:	stp	x29, x30, [sp, #-64]!
  70:	mov	x29, sp
  74:	str	x0, [sp, #24]
  78:	str	wzr, [sp, #52]
  7c:	b	d0 <ctf_decl_fini+0x64>
  80:	ldr	x1, [sp, #24]
  84:	ldrsw	x0, [sp, #52]
  88:	lsl	x0, x0, #4
  8c:	add	x0, x1, x0
  90:	ldr	x0, [x0, #8]
  94:	str	x0, [sp, #56]
  98:	b	b8 <ctf_decl_fini+0x4c>
  9c:	ldr	x0, [sp, #56]
  a0:	ldr	x0, [x0, #8]
  a4:	str	x0, [sp, #40]
  a8:	ldr	x0, [sp, #56]
  ac:	bl	0 <free>
  b0:	ldr	x0, [sp, #40]
  b4:	str	x0, [sp, #56]
  b8:	ldr	x0, [sp, #56]
  bc:	cmp	x0, #0x0
  c0:	b.ne	9c <ctf_decl_fini+0x30>  // b.any
  c4:	ldr	w0, [sp, #52]
  c8:	add	w0, w0, #0x1
  cc:	str	w0, [sp, #52]
  d0:	ldr	w0, [sp, #52]
  d4:	cmp	w0, #0x3
  d8:	b.le	80 <ctf_decl_fini+0x14>
  dc:	nop
  e0:	nop
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret

00000000000000ec <ctf_decl_push>:
  ec:	stp	x29, x30, [sp, #-128]!
  f0:	mov	x29, sp
  f4:	str	x19, [sp, #16]
  f8:	str	x0, [sp, #56]
  fc:	str	x1, [sp, #48]
 100:	str	x2, [sp, #40]
 104:	mov	w0, #0x1                   	// #1
 108:	str	w0, [sp, #120]
 10c:	str	wzr, [sp, #116]
 110:	add	x0, sp, #0x30
 114:	ldr	x1, [sp, #40]
 118:	bl	0 <ctf_lookup_by_id>
 11c:	str	x0, [sp, #104]
 120:	ldr	x0, [sp, #104]
 124:	cmp	x0, #0x0
 128:	b.ne	140 <ctf_decl_push+0x54>  // b.any
 12c:	ldr	x0, [sp, #48]
 130:	ldr	w1, [x0, #556]
 134:	ldr	x0, [sp, #56]
 138:	str	w1, [x0, #96]
 13c:	b	428 <ctf_decl_push+0x33c>
 140:	ldr	x0, [sp, #48]
 144:	ldr	x0, [x0]
 148:	ldr	x1, [x0]
 14c:	ldr	x0, [sp, #104]
 150:	ldr	w0, [x0, #4]
 154:	blr	x1
 158:	str	w0, [sp, #100]
 15c:	ldr	w0, [sp, #100]
 160:	cmp	w0, #0xe
 164:	b.eq	2b0 <ctf_decl_push+0x1c4>  // b.none
 168:	ldr	w0, [sp, #100]
 16c:	cmp	w0, #0xe
 170:	b.hi	310 <ctf_decl_push+0x224>  // b.pmore
 174:	ldr	w0, [sp, #100]
 178:	cmp	w0, #0xd
 17c:	b.hi	310 <ctf_decl_push+0x224>  // b.pmore
 180:	ldr	w0, [sp, #100]
 184:	cmp	w0, #0xb
 188:	b.cs	2d8 <ctf_decl_push+0x1ec>  // b.hs, b.nlast
 18c:	ldr	w0, [sp, #100]
 190:	cmp	w0, #0xa
 194:	b.eq	214 <ctf_decl_push+0x128>  // b.none
 198:	ldr	w0, [sp, #100]
 19c:	cmp	w0, #0xa
 1a0:	b.hi	310 <ctf_decl_push+0x224>  // b.pmore
 1a4:	ldr	w0, [sp, #100]
 1a8:	cmp	w0, #0x5
 1ac:	b.eq	260 <ctf_decl_push+0x174>  // b.none
 1b0:	ldr	w0, [sp, #100]
 1b4:	cmp	w0, #0x5
 1b8:	b.hi	310 <ctf_decl_push+0x224>  // b.pmore
 1bc:	ldr	w0, [sp, #100]
 1c0:	cmp	w0, #0x3
 1c4:	b.eq	288 <ctf_decl_push+0x19c>  // b.none
 1c8:	ldr	w0, [sp, #100]
 1cc:	cmp	w0, #0x4
 1d0:	b.ne	310 <ctf_decl_push+0x224>  // b.any
 1d4:	ldr	x0, [sp, #48]
 1d8:	add	x1, sp, #0x40
 1dc:	mov	x2, x1
 1e0:	ldr	x1, [sp, #40]
 1e4:	bl	0 <ctf_array_info>
 1e8:	ldr	x0, [sp, #48]
 1ec:	ldr	x1, [sp, #64]
 1f0:	mov	x2, x1
 1f4:	mov	x1, x0
 1f8:	ldr	x0, [sp, #56]
 1fc:	bl	ec <ctf_decl_push>
 200:	ldr	w0, [sp, #80]
 204:	str	w0, [sp, #120]
 208:	mov	w0, #0x2                   	// #2
 20c:	str	w0, [sp, #124]
 210:	b	314 <ctf_decl_push+0x228>
 214:	ldr	x2, [sp, #48]
 218:	ldr	x0, [sp, #104]
 21c:	ldr	w0, [x0]
 220:	mov	w1, w0
 224:	mov	x0, x2
 228:	bl	0 <ctf_strptr>
 22c:	ldrb	w0, [x0]
 230:	cmp	w0, #0x0
 234:	b.ne	258 <ctf_decl_push+0x16c>  // b.any
 238:	ldr	x1, [sp, #48]
 23c:	ldr	x0, [sp, #104]
 240:	ldr	w0, [x0, #8]
 244:	mov	w0, w0
 248:	mov	x2, x0
 24c:	ldr	x0, [sp, #56]
 250:	bl	ec <ctf_decl_push>
 254:	b	428 <ctf_decl_push+0x33c>
 258:	str	wzr, [sp, #124]
 25c:	b	314 <ctf_decl_push+0x228>
 260:	ldr	x1, [sp, #48]
 264:	ldr	x0, [sp, #104]
 268:	ldr	w0, [x0, #8]
 26c:	mov	w0, w0
 270:	mov	x2, x0
 274:	ldr	x0, [sp, #56]
 278:	bl	ec <ctf_decl_push>
 27c:	mov	w0, #0x3                   	// #3
 280:	str	w0, [sp, #124]
 284:	b	314 <ctf_decl_push+0x228>
 288:	ldr	x1, [sp, #48]
 28c:	ldr	x0, [sp, #104]
 290:	ldr	w0, [x0, #8]
 294:	mov	w0, w0
 298:	mov	x2, x0
 29c:	ldr	x0, [sp, #56]
 2a0:	bl	ec <ctf_decl_push>
 2a4:	mov	w0, #0x1                   	// #1
 2a8:	str	w0, [sp, #124]
 2ac:	b	314 <ctf_decl_push+0x228>
 2b0:	ldr	x19, [sp, #48]
 2b4:	ldr	x0, [sp, #48]
 2b8:	ldr	x1, [sp, #40]
 2bc:	bl	0 <ctf_type_reference>
 2c0:	mov	x2, x0
 2c4:	mov	x1, x19
 2c8:	ldr	x0, [sp, #56]
 2cc:	bl	ec <ctf_decl_push>
 2d0:	str	wzr, [sp, #124]
 2d4:	b	314 <ctf_decl_push+0x228>
 2d8:	ldr	x1, [sp, #48]
 2dc:	ldr	x0, [sp, #104]
 2e0:	ldr	w0, [x0, #8]
 2e4:	mov	w0, w0
 2e8:	mov	x2, x0
 2ec:	ldr	x0, [sp, #56]
 2f0:	bl	ec <ctf_decl_push>
 2f4:	ldr	x0, [sp, #56]
 2f8:	ldr	w0, [x0, #80]
 2fc:	str	w0, [sp, #124]
 300:	ldr	w0, [sp, #116]
 304:	add	w0, w0, #0x1
 308:	str	w0, [sp, #116]
 30c:	b	314 <ctf_decl_push+0x228>
 310:	str	wzr, [sp, #124]
 314:	mov	x0, #0x20                  	// #32
 318:	bl	0 <malloc>
 31c:	str	x0, [sp, #88]
 320:	ldr	x0, [sp, #88]
 324:	cmp	x0, #0x0
 328:	b.ne	33c <ctf_decl_push+0x250>  // b.any
 32c:	ldr	x0, [sp, #56]
 330:	mov	w1, #0xb                   	// #11
 334:	str	w1, [x0, #96]
 338:	b	428 <ctf_decl_push+0x33c>
 33c:	ldr	x0, [sp, #88]
 340:	ldr	x1, [sp, #40]
 344:	str	x1, [x0, #16]
 348:	ldr	x0, [sp, #88]
 34c:	ldr	w1, [sp, #100]
 350:	str	w1, [x0, #24]
 354:	ldr	x0, [sp, #88]
 358:	ldr	w1, [sp, #120]
 35c:	str	w1, [x0, #28]
 360:	ldr	x1, [sp, #56]
 364:	ldr	w0, [sp, #124]
 368:	lsl	x0, x0, #4
 36c:	add	x0, x1, x0
 370:	ldr	x0, [x0, #8]
 374:	cmp	x0, #0x0
 378:	b.ne	3a4 <ctf_decl_push+0x2b8>  // b.any
 37c:	ldr	x0, [sp, #56]
 380:	ldr	w0, [x0, #84]
 384:	add	w2, w0, #0x1
 388:	ldr	x1, [sp, #56]
 38c:	str	w2, [x1, #84]
 390:	mov	w2, w0
 394:	ldr	x0, [sp, #56]
 398:	ldr	w1, [sp, #124]
 39c:	add	x1, x1, #0x10
 3a0:	str	w2, [x0, x1, lsl #2]
 3a4:	ldr	x0, [sp, #56]
 3a8:	ldr	w0, [x0, #80]
 3ac:	ldr	w1, [sp, #124]
 3b0:	cmp	w1, w0
 3b4:	b.ls	3d0 <ctf_decl_push+0x2e4>  // b.plast
 3b8:	ldr	w0, [sp, #124]
 3bc:	cmp	w0, #0x1
 3c0:	b.hi	3d0 <ctf_decl_push+0x2e4>  // b.pmore
 3c4:	ldr	x0, [sp, #56]
 3c8:	ldr	w1, [sp, #124]
 3cc:	str	w1, [x0, #80]
 3d0:	ldr	w0, [sp, #100]
 3d4:	cmp	w0, #0x4
 3d8:	b.eq	3f4 <ctf_decl_push+0x308>  // b.none
 3dc:	ldr	w0, [sp, #116]
 3e0:	cmp	w0, #0x0
 3e4:	b.eq	410 <ctf_decl_push+0x324>  // b.none
 3e8:	ldr	w0, [sp, #124]
 3ec:	cmp	w0, #0x0
 3f0:	b.ne	410 <ctf_decl_push+0x324>  // b.any
 3f4:	ldr	w0, [sp, #124]
 3f8:	lsl	x0, x0, #4
 3fc:	ldr	x1, [sp, #56]
 400:	add	x0, x1, x0
 404:	ldr	x1, [sp, #88]
 408:	bl	0 <ctf_list_prepend>
 40c:	b	428 <ctf_decl_push+0x33c>
 410:	ldr	w0, [sp, #124]
 414:	lsl	x0, x0, #4
 418:	ldr	x1, [sp, #56]
 41c:	add	x0, x1, x0
 420:	ldr	x1, [sp, #88]
 424:	bl	0 <ctf_list_append>
 428:	ldr	x19, [sp, #16]
 42c:	ldp	x29, x30, [sp], #128
 430:	ret

0000000000000434 <ctf_decl_sprintf>:
 434:	stp	x29, x30, [sp, #-304]!
 438:	mov	x29, sp
 43c:	str	x0, [sp, #56]
 440:	str	x1, [sp, #48]
 444:	str	x2, [sp, #256]
 448:	str	x3, [sp, #264]
 44c:	str	x4, [sp, #272]
 450:	str	x5, [sp, #280]
 454:	str	x6, [sp, #288]
 458:	str	x7, [sp, #296]
 45c:	str	q0, [sp, #128]
 460:	str	q1, [sp, #144]
 464:	str	q2, [sp, #160]
 468:	str	q3, [sp, #176]
 46c:	str	q4, [sp, #192]
 470:	str	q5, [sp, #208]
 474:	str	q6, [sp, #224]
 478:	str	q7, [sp, #240]
 47c:	ldr	x0, [sp, #56]
 480:	ldr	w0, [x0, #100]
 484:	cmp	w0, #0x0
 488:	b.ne	564 <ctf_decl_sprintf+0x130>  // b.any
 48c:	add	x0, sp, #0x130
 490:	str	x0, [sp, #80]
 494:	add	x0, sp, #0x130
 498:	str	x0, [sp, #88]
 49c:	add	x0, sp, #0x100
 4a0:	str	x0, [sp, #96]
 4a4:	mov	w0, #0xffffffd0            	// #-48
 4a8:	str	w0, [sp, #104]
 4ac:	mov	w0, #0xffffff80            	// #-128
 4b0:	str	w0, [sp, #108]
 4b4:	add	x2, sp, #0x10
 4b8:	add	x3, sp, #0x50
 4bc:	ldp	x0, x1, [x3]
 4c0:	stp	x0, x1, [x2]
 4c4:	ldp	x0, x1, [x3, #16]
 4c8:	stp	x0, x1, [x2, #16]
 4cc:	add	x1, sp, #0x10
 4d0:	add	x0, sp, #0x48
 4d4:	mov	x2, x1
 4d8:	ldr	x1, [sp, #48]
 4dc:	bl	0 <vasprintf>
 4e0:	str	w0, [sp, #124]
 4e4:	ldr	w0, [sp, #124]
 4e8:	cmp	w0, #0x0
 4ec:	b.le	51c <ctf_decl_sprintf+0xe8>
 4f0:	ldr	x0, [sp, #56]
 4f4:	ldr	x0, [x0, #88]
 4f8:	ldr	x1, [sp, #72]
 4fc:	bl	0 <ctf_str_append>
 500:	str	x0, [sp, #112]
 504:	ldr	x0, [sp, #112]
 508:	cmp	x0, #0x0
 50c:	b.eq	51c <ctf_decl_sprintf+0xe8>  // b.none
 510:	ldr	x0, [sp, #56]
 514:	ldr	x1, [sp, #112]
 518:	str	x1, [x0, #88]
 51c:	ldr	w0, [sp, #124]
 520:	cmp	w0, #0x0
 524:	b.lt	538 <ctf_decl_sprintf+0x104>  // b.tstop
 528:	ldr	x0, [sp, #56]
 52c:	ldr	x0, [x0, #88]
 530:	cmp	x0, #0x0
 534:	b.ne	558 <ctf_decl_sprintf+0x124>  // b.any
 538:	ldr	x0, [sp, #56]
 53c:	ldr	x0, [x0, #88]
 540:	bl	0 <free>
 544:	ldr	x0, [sp, #56]
 548:	str	xzr, [x0, #88]
 54c:	ldr	x0, [sp, #56]
 550:	mov	w1, #0x1                   	// #1
 554:	str	w1, [x0, #100]
 558:	ldr	x0, [sp, #72]
 55c:	bl	0 <free>
 560:	b	568 <ctf_decl_sprintf+0x134>
 564:	nop
 568:	ldp	x29, x30, [sp], #304
 56c:	ret

0000000000000570 <ctf_decl_buf>:
 570:	sub	sp, sp, #0x10
 574:	str	x0, [sp, #8]
 578:	ldr	x0, [sp, #8]
 57c:	ldr	x0, [x0, #88]
 580:	add	sp, sp, #0x10
 584:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	ldr	w0, [sp, #28]
  10:	cmp	w0, #0x3e7
  14:	b.le	4c <ctf_errmsg+0x4c>
  18:	ldr	w0, [sp, #28]
  1c:	sub	w1, w0, #0x3e7
  20:	mov	w0, #0x34                  	// #52
  24:	cmp	w1, w0
  28:	b.gt	4c <ctf_errmsg+0x4c>
  2c:	ldr	w0, [sp, #28]
  30:	sub	w1, w0, #0x3e8
  34:	adrp	x0, 0 <ctf_errmsg>
  38:	add	x0, x0, #0x0
  3c:	sxtw	x1, w1
  40:	ldr	x0, [x0, x1, lsl #3]
  44:	str	x0, [sp, #40]
  48:	b	58 <ctf_errmsg+0x58>
  4c:	ldr	w0, [sp, #28]
  50:	bl	0 <ctf_strerror>
  54:	str	x0, [sp, #40]
  58:	ldr	x0, [sp, #40]
  5c:	cmp	x0, #0x0
  60:	b.eq	6c <ctf_errmsg+0x6c>  // b.none
  64:	ldr	x0, [sp, #40]
  68:	b	74 <ctf_errmsg+0x74>
  6c:	adrp	x0, 0 <ctf_errmsg>
  70:	add	x0, x0, #0x0
  74:	ldp	x29, x30, [sp], #48
  78:	ret

000000000000007c <ctf_errno>:
  7c:	sub	sp, sp, #0x10
  80:	str	x0, [sp, #8]
  84:	ldr	x0, [sp, #8]
  88:	ldr	w0, [x0, #556]
  8c:	add	sp, sp, #0x10
  90:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hash_integer>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	str	x0, [sp, #40]
  14:	adrp	x0, 0 <htab_hash_pointer>
  18:	add	x0, x0, #0x0
  1c:	ldr	x1, [x0]
  20:	ldr	x0, [sp, #40]
  24:	ldr	x0, [x0]
  28:	blr	x1
  2c:	ldp	x29, x30, [sp], #48
  30:	ret

0000000000000034 <ctf_hash_eq_integer>:
  34:	stp	x29, x30, [sp, #-48]!
  38:	mov	x29, sp
  3c:	str	x0, [sp, #24]
  40:	str	x1, [sp, #16]
  44:	ldr	x0, [sp, #24]
  48:	str	x0, [sp, #40]
  4c:	ldr	x0, [sp, #16]
  50:	str	x0, [sp, #32]
  54:	adrp	x0, 0 <htab_eq_pointer>
  58:	add	x0, x0, #0x0
  5c:	ldr	x2, [x0]
  60:	ldr	x0, [sp, #40]
  64:	ldr	x3, [x0]
  68:	ldr	x0, [sp, #32]
  6c:	ldr	x0, [x0]
  70:	mov	x1, x0
  74:	mov	x0, x3
  78:	blr	x2
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

0000000000000084 <ctf_hash_string>:
  84:	stp	x29, x30, [sp, #-48]!
  88:	mov	x29, sp
  8c:	str	x0, [sp, #24]
  90:	ldr	x0, [sp, #24]
  94:	str	x0, [sp, #40]
  98:	ldr	x0, [sp, #40]
  9c:	ldr	x0, [x0]
  a0:	bl	0 <htab_hash_string>
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <ctf_hash_eq_string>:
  ac:	stp	x29, x30, [sp, #-48]!
  b0:	mov	x29, sp
  b4:	str	x0, [sp, #24]
  b8:	str	x1, [sp, #16]
  bc:	ldr	x0, [sp, #24]
  c0:	str	x0, [sp, #40]
  c4:	ldr	x0, [sp, #16]
  c8:	str	x0, [sp, #32]
  cc:	ldr	x0, [sp, #40]
  d0:	ldr	x2, [x0]
  d4:	ldr	x0, [sp, #32]
  d8:	ldr	x0, [x0]
  dc:	mov	x1, x0
  e0:	mov	x0, x2
  e4:	bl	0 <strcmp>
  e8:	cmp	w0, #0x0
  ec:	cset	w0, eq  // eq = none
  f0:	and	w0, w0, #0xff
  f4:	ldp	x29, x30, [sp], #48
  f8:	ret

00000000000000fc <ctf_hash_type_mapping_key>:
  fc:	stp	x29, x30, [sp, #-64]!
 100:	mov	x29, sp
 104:	str	x19, [sp, #16]
 108:	str	x0, [sp, #40]
 10c:	ldr	x0, [sp, #40]
 110:	str	x0, [sp, #56]
 114:	ldr	x0, [sp, #56]
 118:	ldr	x0, [x0]
 11c:	str	x0, [sp, #48]
 120:	adrp	x0, 0 <htab_hash_pointer>
 124:	add	x0, x0, #0x0
 128:	ldr	x1, [x0]
 12c:	ldr	x0, [sp, #48]
 130:	ldr	x0, [x0]
 134:	blr	x1
 138:	mov	w19, w0
 13c:	adrp	x0, 0 <htab_hash_pointer>
 140:	add	x0, x0, #0x0
 144:	ldr	x1, [x0]
 148:	ldr	x0, [sp, #48]
 14c:	ldr	x0, [x0, #8]
 150:	blr	x1
 154:	mov	w1, w0
 158:	mov	w0, #0x3b                  	// #59
 15c:	mul	w0, w1, w0
 160:	add	w0, w19, w0
 164:	ldr	x19, [sp, #16]
 168:	ldp	x29, x30, [sp], #64
 16c:	ret

0000000000000170 <ctf_hash_eq_type_mapping_key>:
 170:	sub	sp, sp, #0x30
 174:	str	x0, [sp, #8]
 178:	str	x1, [sp]
 17c:	ldr	x0, [sp, #8]
 180:	str	x0, [sp, #40]
 184:	ldr	x0, [sp]
 188:	str	x0, [sp, #32]
 18c:	ldr	x0, [sp, #40]
 190:	ldr	x0, [x0]
 194:	str	x0, [sp, #24]
 198:	ldr	x0, [sp, #32]
 19c:	ldr	x0, [x0]
 1a0:	str	x0, [sp, #16]
 1a4:	ldr	x0, [sp, #24]
 1a8:	ldr	x1, [x0]
 1ac:	ldr	x0, [sp, #16]
 1b0:	ldr	x0, [x0]
 1b4:	cmp	x1, x0
 1b8:	b.ne	1dc <ctf_hash_eq_type_mapping_key+0x6c>  // b.any
 1bc:	ldr	x0, [sp, #24]
 1c0:	ldr	x1, [x0, #8]
 1c4:	ldr	x0, [sp, #16]
 1c8:	ldr	x0, [x0, #8]
 1cc:	cmp	x1, x0
 1d0:	b.ne	1dc <ctf_hash_eq_type_mapping_key+0x6c>  // b.any
 1d4:	mov	w0, #0x1                   	// #1
 1d8:	b	1e0 <ctf_hash_eq_type_mapping_key+0x70>
 1dc:	mov	w0, #0x0                   	// #0
 1e0:	add	sp, sp, #0x30
 1e4:	ret

00000000000001e8 <ctf_dynhash_item_free>:
 1e8:	stp	x29, x30, [sp, #-48]!
 1ec:	mov	x29, sp
 1f0:	str	x0, [sp, #24]
 1f4:	ldr	x0, [sp, #24]
 1f8:	str	x0, [sp, #40]
 1fc:	ldr	x0, [sp, #40]
 200:	ldr	x0, [x0, #16]
 204:	cmp	x0, #0x0
 208:	b.eq	230 <ctf_dynhash_item_free+0x48>  // b.none
 20c:	ldr	x0, [sp, #40]
 210:	ldr	x0, [x0]
 214:	cmp	x0, #0x0
 218:	b.eq	230 <ctf_dynhash_item_free+0x48>  // b.none
 21c:	ldr	x0, [sp, #40]
 220:	ldr	x1, [x0, #16]
 224:	ldr	x0, [sp, #40]
 228:	ldr	x0, [x0]
 22c:	blr	x1
 230:	ldr	x0, [sp, #40]
 234:	ldr	x0, [x0, #24]
 238:	cmp	x0, #0x0
 23c:	b.eq	264 <ctf_dynhash_item_free+0x7c>  // b.none
 240:	ldr	x0, [sp, #40]
 244:	ldr	x0, [x0, #8]
 248:	cmp	x0, #0x0
 24c:	b.eq	264 <ctf_dynhash_item_free+0x7c>  // b.none
 250:	ldr	x0, [sp, #40]
 254:	ldr	x1, [x0, #24]
 258:	ldr	x0, [sp, #40]
 25c:	ldr	x0, [x0, #8]
 260:	blr	x1
 264:	ldr	x0, [sp, #40]
 268:	bl	0 <free>
 26c:	nop
 270:	ldp	x29, x30, [sp], #48
 274:	ret

0000000000000278 <ctf_dynhash_create>:
 278:	stp	x29, x30, [sp, #-64]!
 27c:	mov	x29, sp
 280:	str	x0, [sp, #40]
 284:	str	x1, [sp, #32]
 288:	str	x2, [sp, #24]
 28c:	str	x3, [sp, #16]
 290:	mov	x0, #0x18                  	// #24
 294:	bl	0 <malloc>
 298:	str	x0, [sp, #56]
 29c:	ldr	x0, [sp, #56]
 2a0:	cmp	x0, #0x0
 2a4:	b.ne	2b0 <ctf_dynhash_create+0x38>  // b.any
 2a8:	mov	x0, #0x0                   	// #0
 2ac:	b	320 <ctf_dynhash_create+0xa8>
 2b0:	adrp	x0, 0 <free>
 2b4:	add	x5, x0, #0x0
 2b8:	adrp	x0, 0 <xcalloc>
 2bc:	add	x4, x0, #0x0
 2c0:	adrp	x0, 0 <ctf_hash_integer>
 2c4:	add	x3, x0, #0x0
 2c8:	ldr	x2, [sp, #32]
 2cc:	ldr	x1, [sp, #40]
 2d0:	mov	x0, #0x7                   	// #7
 2d4:	bl	0 <htab_create_alloc>
 2d8:	mov	x1, x0
 2dc:	ldr	x0, [sp, #56]
 2e0:	str	x1, [x0]
 2e4:	ldr	x0, [sp, #56]
 2e8:	ldr	x0, [x0]
 2ec:	cmp	x0, #0x0
 2f0:	b.ne	304 <ctf_dynhash_create+0x8c>  // b.any
 2f4:	ldr	x0, [sp, #56]
 2f8:	bl	0 <free>
 2fc:	mov	x0, #0x0                   	// #0
 300:	b	320 <ctf_dynhash_create+0xa8>
 304:	ldr	x0, [sp, #56]
 308:	ldr	x1, [sp, #24]
 30c:	str	x1, [x0, #8]
 310:	ldr	x0, [sp, #56]
 314:	ldr	x1, [sp, #16]
 318:	str	x1, [x0, #16]
 31c:	ldr	x0, [sp, #56]
 320:	ldp	x29, x30, [sp], #64
 324:	ret

0000000000000328 <ctf_hashtab_lookup>:
 328:	stp	x29, x30, [sp, #-80]!
 32c:	mov	x29, sp
 330:	str	x0, [sp, #40]
 334:	str	x1, [sp, #32]
 338:	str	w2, [sp, #28]
 33c:	stp	xzr, xzr, [sp, #48]
 340:	stp	xzr, xzr, [sp, #64]
 344:	ldr	x0, [sp, #32]
 348:	str	x0, [sp, #48]
 34c:	add	x0, sp, #0x30
 350:	ldr	w2, [sp, #28]
 354:	mov	x1, x0
 358:	ldr	x0, [sp, #40]
 35c:	bl	0 <htab_find_slot>
 360:	ldp	x29, x30, [sp], #80
 364:	ret

0000000000000368 <ctf_hashtab_insert>:
 368:	stp	x29, x30, [sp, #-80]!
 36c:	mov	x29, sp
 370:	str	x0, [sp, #56]
 374:	str	x1, [sp, #48]
 378:	str	x2, [sp, #40]
 37c:	str	x3, [sp, #32]
 380:	str	x4, [sp, #24]
 384:	mov	w2, #0x1                   	// #1
 388:	ldr	x1, [sp, #48]
 38c:	ldr	x0, [sp, #56]
 390:	bl	328 <ctf_hashtab_lookup>
 394:	str	x0, [sp, #72]
 398:	ldr	x0, [sp, #72]
 39c:	cmp	x0, #0x0
 3a0:	b.ne	3bc <ctf_hashtab_insert+0x54>  // b.any
 3a4:	bl	0 <__errno_location>
 3a8:	mov	x1, x0
 3ac:	mov	w0, #0xfffffff4            	// #-12
 3b0:	str	w0, [x1]
 3b4:	mov	x0, #0x0                   	// #0
 3b8:	b	460 <ctf_hashtab_insert+0xf8>
 3bc:	ldr	x0, [sp, #72]
 3c0:	ldr	x0, [x0]
 3c4:	cmp	x0, #0x0
 3c8:	b.ne	3f8 <ctf_hashtab_insert+0x90>  // b.any
 3cc:	mov	x0, #0x20                  	// #32
 3d0:	bl	0 <malloc>
 3d4:	mov	x1, x0
 3d8:	ldr	x0, [sp, #72]
 3dc:	str	x1, [x0]
 3e0:	ldr	x0, [sp, #72]
 3e4:	ldr	x0, [x0]
 3e8:	cmp	x0, #0x0
 3ec:	b.ne	438 <ctf_hashtab_insert+0xd0>  // b.any
 3f0:	mov	x0, #0x0                   	// #0
 3f4:	b	460 <ctf_hashtab_insert+0xf8>
 3f8:	ldr	x0, [sp, #32]
 3fc:	cmp	x0, #0x0
 400:	b.eq	418 <ctf_hashtab_insert+0xb0>  // b.none
 404:	ldr	x0, [sp, #72]
 408:	ldr	x0, [x0]
 40c:	ldr	x0, [x0]
 410:	ldr	x1, [sp, #32]
 414:	blr	x1
 418:	ldr	x0, [sp, #24]
 41c:	cmp	x0, #0x0
 420:	b.eq	438 <ctf_hashtab_insert+0xd0>  // b.none
 424:	ldr	x0, [sp, #72]
 428:	ldr	x0, [x0]
 42c:	ldr	x0, [x0, #8]
 430:	ldr	x1, [sp, #24]
 434:	blr	x1
 438:	ldr	x0, [sp, #72]
 43c:	ldr	x0, [x0]
 440:	ldr	x1, [sp, #48]
 444:	str	x1, [x0]
 448:	ldr	x0, [sp, #72]
 44c:	ldr	x0, [x0]
 450:	ldr	x1, [sp, #40]
 454:	str	x1, [x0, #8]
 458:	ldr	x0, [sp, #72]
 45c:	ldr	x0, [x0]
 460:	ldp	x29, x30, [sp], #80
 464:	ret

0000000000000468 <ctf_dynhash_insert>:
 468:	stp	x29, x30, [sp, #-64]!
 46c:	mov	x29, sp
 470:	str	x0, [sp, #40]
 474:	str	x1, [sp, #32]
 478:	str	x2, [sp, #24]
 47c:	ldr	x0, [sp, #40]
 480:	ldr	x5, [x0]
 484:	ldr	x0, [sp, #40]
 488:	ldr	x1, [x0, #8]
 48c:	ldr	x0, [sp, #40]
 490:	ldr	x0, [x0, #16]
 494:	mov	x4, x0
 498:	mov	x3, x1
 49c:	ldr	x2, [sp, #24]
 4a0:	ldr	x1, [sp, #32]
 4a4:	mov	x0, x5
 4a8:	bl	368 <ctf_hashtab_insert>
 4ac:	str	x0, [sp, #56]
 4b0:	ldr	x0, [sp, #56]
 4b4:	cmp	x0, #0x0
 4b8:	b.ne	4c8 <ctf_dynhash_insert+0x60>  // b.any
 4bc:	bl	0 <__errno_location>
 4c0:	ldr	w0, [x0]
 4c4:	b	4ec <ctf_dynhash_insert+0x84>
 4c8:	ldr	x0, [sp, #40]
 4cc:	ldr	x1, [x0, #8]
 4d0:	ldr	x0, [sp, #56]
 4d4:	str	x1, [x0, #16]
 4d8:	ldr	x0, [sp, #40]
 4dc:	ldr	x1, [x0, #16]
 4e0:	ldr	x0, [sp, #56]
 4e4:	str	x1, [x0, #24]
 4e8:	mov	w0, #0x0                   	// #0
 4ec:	ldp	x29, x30, [sp], #64
 4f0:	ret

00000000000004f4 <ctf_dynhash_remove>:
 4f4:	stp	x29, x30, [sp, #-64]!
 4f8:	mov	x29, sp
 4fc:	str	x0, [sp, #24]
 500:	str	x1, [sp, #16]
 504:	ldr	x0, [sp, #16]
 508:	str	x0, [sp, #32]
 50c:	str	xzr, [sp, #40]
 510:	str	xzr, [sp, #48]
 514:	str	xzr, [sp, #56]
 518:	ldr	x0, [sp, #24]
 51c:	ldr	x0, [x0]
 520:	add	x1, sp, #0x20
 524:	bl	0 <htab_remove_elt>
 528:	nop
 52c:	ldp	x29, x30, [sp], #64
 530:	ret

0000000000000534 <ctf_dynhash_empty>:
 534:	stp	x29, x30, [sp, #-32]!
 538:	mov	x29, sp
 53c:	str	x0, [sp, #24]
 540:	ldr	x0, [sp, #24]
 544:	ldr	x0, [x0]
 548:	bl	0 <htab_empty>
 54c:	nop
 550:	ldp	x29, x30, [sp], #32
 554:	ret

0000000000000558 <ctf_dynhash_lookup>:
 558:	stp	x29, x30, [sp, #-48]!
 55c:	mov	x29, sp
 560:	str	x0, [sp, #24]
 564:	str	x1, [sp, #16]
 568:	ldr	x0, [sp, #24]
 56c:	ldr	x0, [x0]
 570:	mov	w2, #0x0                   	// #0
 574:	ldr	x1, [sp, #16]
 578:	bl	328 <ctf_hashtab_lookup>
 57c:	str	x0, [sp, #40]
 580:	ldr	x0, [sp, #40]
 584:	cmp	x0, #0x0
 588:	b.eq	59c <ctf_dynhash_lookup+0x44>  // b.none
 58c:	ldr	x0, [sp, #40]
 590:	ldr	x0, [x0]
 594:	ldr	x0, [x0, #8]
 598:	b	5a0 <ctf_dynhash_lookup+0x48>
 59c:	mov	x0, #0x0                   	// #0
 5a0:	ldp	x29, x30, [sp], #48
 5a4:	ret

00000000000005a8 <ctf_hashtab_traverse>:
 5a8:	stp	x29, x30, [sp, #-48]!
 5ac:	mov	x29, sp
 5b0:	str	x0, [sp, #24]
 5b4:	str	x1, [sp, #16]
 5b8:	ldr	x0, [sp, #24]
 5bc:	ldr	x0, [x0]
 5c0:	str	x0, [sp, #40]
 5c4:	ldr	x0, [sp, #16]
 5c8:	str	x0, [sp, #32]
 5cc:	ldr	x0, [sp, #32]
 5d0:	ldr	x3, [x0]
 5d4:	ldr	x0, [sp, #40]
 5d8:	ldr	x4, [x0]
 5dc:	ldr	x0, [sp, #40]
 5e0:	ldr	x1, [x0, #8]
 5e4:	ldr	x0, [sp, #32]
 5e8:	ldr	x0, [x0, #8]
 5ec:	mov	x2, x0
 5f0:	mov	x0, x4
 5f4:	blr	x3
 5f8:	mov	w0, #0x1                   	// #1
 5fc:	ldp	x29, x30, [sp], #48
 600:	ret

0000000000000604 <ctf_dynhash_iter>:
 604:	stp	x29, x30, [sp, #-64]!
 608:	mov	x29, sp
 60c:	str	x0, [sp, #40]
 610:	str	x1, [sp, #32]
 614:	str	x2, [sp, #24]
 618:	ldr	x0, [sp, #32]
 61c:	str	x0, [sp, #48]
 620:	ldr	x0, [sp, #24]
 624:	str	x0, [sp, #56]
 628:	ldr	x0, [sp, #40]
 62c:	ldr	x3, [x0]
 630:	add	x0, sp, #0x30
 634:	mov	x2, x0
 638:	adrp	x0, 0 <ctf_hash_integer>
 63c:	add	x1, x0, #0x0
 640:	mov	x0, x3
 644:	bl	0 <htab_traverse>
 648:	nop
 64c:	ldp	x29, x30, [sp], #64
 650:	ret

0000000000000654 <ctf_hashtab_traverse_remove>:
 654:	stp	x29, x30, [sp, #-48]!
 658:	mov	x29, sp
 65c:	str	x0, [sp, #24]
 660:	str	x1, [sp, #16]
 664:	ldr	x0, [sp, #24]
 668:	ldr	x0, [x0]
 66c:	str	x0, [sp, #40]
 670:	ldr	x0, [sp, #16]
 674:	str	x0, [sp, #32]
 678:	ldr	x0, [sp, #32]
 67c:	ldr	x3, [x0, #8]
 680:	ldr	x0, [sp, #40]
 684:	ldr	x4, [x0]
 688:	ldr	x0, [sp, #40]
 68c:	ldr	x1, [x0, #8]
 690:	ldr	x0, [sp, #32]
 694:	ldr	x0, [x0, #16]
 698:	mov	x2, x0
 69c:	mov	x0, x4
 6a0:	blr	x3
 6a4:	cmp	w0, #0x0
 6a8:	b.eq	6bc <ctf_hashtab_traverse_remove+0x68>  // b.none
 6ac:	ldr	x0, [sp, #32]
 6b0:	ldr	x0, [x0]
 6b4:	ldr	x1, [sp, #24]
 6b8:	bl	0 <htab_clear_slot>
 6bc:	mov	w0, #0x1                   	// #1
 6c0:	ldp	x29, x30, [sp], #48
 6c4:	ret

00000000000006c8 <ctf_dynhash_iter_remove>:
 6c8:	stp	x29, x30, [sp, #-80]!
 6cc:	mov	x29, sp
 6d0:	str	x0, [sp, #40]
 6d4:	str	x1, [sp, #32]
 6d8:	str	x2, [sp, #24]
 6dc:	ldr	x0, [sp, #40]
 6e0:	ldr	x0, [x0]
 6e4:	str	x0, [sp, #56]
 6e8:	ldr	x0, [sp, #32]
 6ec:	str	x0, [sp, #64]
 6f0:	ldr	x0, [sp, #24]
 6f4:	str	x0, [sp, #72]
 6f8:	ldr	x0, [sp, #40]
 6fc:	ldr	x3, [x0]
 700:	add	x0, sp, #0x38
 704:	mov	x2, x0
 708:	adrp	x0, 0 <ctf_hash_integer>
 70c:	add	x1, x0, #0x0
 710:	mov	x0, x3
 714:	bl	0 <htab_traverse>
 718:	nop
 71c:	ldp	x29, x30, [sp], #80
 720:	ret

0000000000000724 <ctf_dynhash_destroy>:
 724:	stp	x29, x30, [sp, #-32]!
 728:	mov	x29, sp
 72c:	str	x0, [sp, #24]
 730:	ldr	x0, [sp, #24]
 734:	cmp	x0, #0x0
 738:	b.eq	748 <ctf_dynhash_destroy+0x24>  // b.none
 73c:	ldr	x0, [sp, #24]
 740:	ldr	x0, [x0]
 744:	bl	0 <htab_delete>
 748:	ldr	x0, [sp, #24]
 74c:	bl	0 <free>
 750:	nop
 754:	ldp	x29, x30, [sp], #32
 758:	ret

000000000000075c <ctf_hash_create>:
 75c:	stp	x29, x30, [sp, #-48]!
 760:	mov	x29, sp
 764:	str	x0, [sp, #40]
 768:	str	x1, [sp, #32]
 76c:	str	x2, [sp, #24]
 770:	adrp	x0, 0 <free>
 774:	add	x5, x0, #0x0
 778:	adrp	x0, 0 <xcalloc>
 77c:	add	x4, x0, #0x0
 780:	adrp	x0, 0 <free>
 784:	add	x3, x0, #0x0
 788:	ldr	x2, [sp, #24]
 78c:	ldr	x1, [sp, #32]
 790:	ldr	x0, [sp, #40]
 794:	bl	0 <htab_create_alloc>
 798:	ldp	x29, x30, [sp], #48
 79c:	ret

00000000000007a0 <ctf_hash_size>:
 7a0:	stp	x29, x30, [sp, #-32]!
 7a4:	mov	x29, sp
 7a8:	str	x0, [sp, #24]
 7ac:	ldr	x0, [sp, #24]
 7b0:	bl	0 <htab_elements>
 7b4:	ldp	x29, x30, [sp], #32
 7b8:	ret

00000000000007bc <ctf_hash_insert_type>:
 7bc:	stp	x29, x30, [sp, #-64]!
 7c0:	mov	x29, sp
 7c4:	str	x0, [sp, #40]
 7c8:	str	x1, [sp, #32]
 7cc:	str	w2, [sp, #28]
 7d0:	str	w3, [sp, #24]
 7d4:	ldr	w1, [sp, #24]
 7d8:	ldr	x0, [sp, #32]
 7dc:	bl	0 <ctf_strraw>
 7e0:	str	x0, [sp, #56]
 7e4:	ldr	w0, [sp, #28]
 7e8:	cmp	w0, #0x0
 7ec:	b.ne	7f8 <ctf_hash_insert_type+0x3c>  // b.any
 7f0:	mov	w0, #0x16                  	// #22
 7f4:	b	8b4 <ctf_hash_insert_type+0xf8>
 7f8:	ldr	x0, [sp, #56]
 7fc:	cmp	x0, #0x0
 800:	b.ne	854 <ctf_hash_insert_type+0x98>  // b.any
 804:	ldr	w0, [sp, #24]
 808:	lsr	w0, w0, #31
 80c:	cmp	w0, #0x1
 810:	b.ne	854 <ctf_hash_insert_type+0x98>  // b.any
 814:	ldr	x0, [sp, #32]
 818:	ldr	x0, [x0, #128]
 81c:	cmp	x0, #0x0
 820:	b.ne	854 <ctf_hash_insert_type+0x98>  // b.any
 824:	ldr	w0, [sp, #24]
 828:	lsr	w0, w0, #31
 82c:	ldr	x1, [sp, #32]
 830:	mov	w0, w0
 834:	add	x0, x0, #0x15
 838:	lsl	x0, x0, #4
 83c:	add	x0, x1, x0
 840:	ldr	x0, [x0]
 844:	cmp	x0, #0x0
 848:	b.ne	854 <ctf_hash_insert_type+0x98>  // b.any
 84c:	mov	w0, #0x3f8                 	// #1016
 850:	b	8b4 <ctf_hash_insert_type+0xf8>
 854:	ldr	x0, [sp, #56]
 858:	cmp	x0, #0x0
 85c:	b.ne	868 <ctf_hash_insert_type+0xac>  // b.any
 860:	mov	w0, #0x3f9                 	// #1017
 864:	b	8b4 <ctf_hash_insert_type+0xf8>
 868:	ldr	x0, [sp, #56]
 86c:	ldrb	w0, [x0]
 870:	cmp	w0, #0x0
 874:	b.ne	880 <ctf_hash_insert_type+0xc4>  // b.any
 878:	mov	w0, #0x0                   	// #0
 87c:	b	8b4 <ctf_hash_insert_type+0xf8>
 880:	ldr	w0, [sp, #28]
 884:	mov	x4, #0x0                   	// #0
 888:	mov	x3, #0x0                   	// #0
 88c:	mov	x2, x0
 890:	ldr	x1, [sp, #56]
 894:	ldr	x0, [sp, #40]
 898:	bl	368 <ctf_hashtab_insert>
 89c:	cmp	x0, #0x0
 8a0:	b.eq	8ac <ctf_hash_insert_type+0xf0>  // b.none
 8a4:	mov	w0, #0x0                   	// #0
 8a8:	b	8b4 <ctf_hash_insert_type+0xf8>
 8ac:	bl	0 <__errno_location>
 8b0:	ldr	w0, [x0]
 8b4:	ldp	x29, x30, [sp], #64
 8b8:	ret

00000000000008bc <ctf_hash_define_type>:
 8bc:	stp	x29, x30, [sp, #-48]!
 8c0:	mov	x29, sp
 8c4:	str	x0, [sp, #40]
 8c8:	str	x1, [sp, #32]
 8cc:	str	w2, [sp, #28]
 8d0:	str	w3, [sp, #24]
 8d4:	ldr	w3, [sp, #24]
 8d8:	ldr	w2, [sp, #28]
 8dc:	ldr	x1, [sp, #32]
 8e0:	ldr	x0, [sp, #40]
 8e4:	bl	7bc <ctf_hash_insert_type>
 8e8:	ldp	x29, x30, [sp], #48
 8ec:	ret

00000000000008f0 <ctf_hash_lookup_type>:
 8f0:	stp	x29, x30, [sp, #-64]!
 8f4:	mov	x29, sp
 8f8:	str	x0, [sp, #40]
 8fc:	str	x1, [sp, #32]
 900:	str	x2, [sp, #24]
 904:	mov	w2, #0x0                   	// #0
 908:	ldr	x1, [sp, #24]
 90c:	ldr	x0, [sp, #40]
 910:	bl	328 <ctf_hashtab_lookup>
 914:	str	x0, [sp, #56]
 918:	ldr	x0, [sp, #56]
 91c:	cmp	x0, #0x0
 920:	b.eq	934 <ctf_hash_lookup_type+0x44>  // b.none
 924:	ldr	x0, [sp, #56]
 928:	ldr	x0, [x0]
 92c:	ldr	x0, [x0, #8]
 930:	b	938 <ctf_hash_lookup_type+0x48>
 934:	mov	x0, #0x0                   	// #0
 938:	ldp	x29, x30, [sp], #64
 93c:	ret

0000000000000940 <ctf_hash_destroy>:
 940:	stp	x29, x30, [sp, #-32]!
 944:	mov	x29, sp
 948:	str	x0, [sp, #24]
 94c:	ldr	x0, [sp, #24]
 950:	cmp	x0, #0x0
 954:	b.eq	960 <ctf_hash_destroy+0x20>  // b.none
 958:	ldr	x0, [sp, #24]
 95c:	bl	0 <htab_delete>
 960:	nop
 964:	ldp	x29, x30, [sp], #32
 968:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <extract_label_info>:
   0:	sub	sp, sp, #0x30
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	x2, [sp, #8]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0, #32]
  18:	str	x0, [sp, #40]
  1c:	ldr	x0, [sp, #24]
  20:	ldr	x1, [x0, #408]
  24:	ldr	x0, [sp, #40]
  28:	ldr	w0, [x0, #16]
  2c:	mov	w0, w0
  30:	add	x1, x1, x0
  34:	ldr	x0, [sp, #16]
  38:	str	x1, [x0]
  3c:	ldr	x0, [sp, #40]
  40:	ldr	w1, [x0, #20]
  44:	ldr	x0, [sp, #40]
  48:	ldr	w0, [x0, #16]
  4c:	sub	w0, w1, w0
  50:	lsr	w1, w0, #3
  54:	ldr	x0, [sp, #8]
  58:	str	w1, [x0]
  5c:	mov	w0, #0x0                   	// #0
  60:	add	sp, sp, #0x30
  64:	ret

0000000000000068 <ctf_label_topmost>:
  68:	stp	x29, x30, [sp, #-64]!
  6c:	mov	x29, sp
  70:	str	x0, [sp, #24]
  74:	str	xzr, [sp, #48]
  78:	str	wzr, [sp, #44]
  7c:	add	x1, sp, #0x2c
  80:	add	x0, sp, #0x30
  84:	mov	x2, x1
  88:	mov	x1, x0
  8c:	ldr	x0, [sp, #24]
  90:	bl	0 <extract_label_info>
  94:	cmp	w0, #0x0
  98:	b.ge	a4 <ctf_label_topmost+0x3c>  // b.tcont
  9c:	mov	x0, #0x0                   	// #0
  a0:	b	10c <ctf_label_topmost+0xa4>
  a4:	ldr	w0, [sp, #44]
  a8:	cmp	w0, #0x0
  ac:	b.ne	c4 <ctf_label_topmost+0x5c>  // b.any
  b0:	mov	w1, #0x409                 	// #1033
  b4:	ldr	x0, [sp, #24]
  b8:	bl	0 <ctf_set_errno>
  bc:	mov	x0, #0x0                   	// #0
  c0:	b	10c <ctf_label_topmost+0xa4>
  c4:	ldr	x1, [sp, #48]
  c8:	ldr	w0, [sp, #44]
  cc:	mov	w0, w0
  d0:	lsl	x0, x0, #3
  d4:	sub	x0, x0, #0x8
  d8:	add	x0, x1, x0
  dc:	ldr	w0, [x0]
  e0:	mov	w1, w0
  e4:	ldr	x0, [sp, #24]
  e8:	bl	0 <ctf_strraw>
  ec:	str	x0, [sp, #56]
  f0:	ldr	x0, [sp, #56]
  f4:	cmp	x0, #0x0
  f8:	b.ne	108 <ctf_label_topmost+0xa0>  // b.any
  fc:	mov	w1, #0x3ef                 	// #1007
 100:	ldr	x0, [sp, #24]
 104:	bl	0 <ctf_set_errno>
 108:	ldr	x0, [sp, #56]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

0000000000000114 <ctf_label_iter>:
 114:	stp	x29, x30, [sp, #-96]!
 118:	mov	x29, sp
 11c:	str	x0, [sp, #40]
 120:	str	x1, [sp, #32]
 124:	str	x2, [sp, #24]
 128:	str	xzr, [sp, #64]
 12c:	str	wzr, [sp, #60]
 130:	add	x1, sp, #0x3c
 134:	add	x0, sp, #0x40
 138:	mov	x2, x1
 13c:	mov	x1, x0
 140:	ldr	x0, [sp, #40]
 144:	bl	0 <extract_label_info>
 148:	cmp	w0, #0x0
 14c:	b.ge	158 <ctf_label_iter+0x44>  // b.tcont
 150:	mov	w0, #0xffffffff            	// #-1
 154:	b	23c <ctf_label_iter+0x128>
 158:	ldr	w0, [sp, #60]
 15c:	cmp	w0, #0x0
 160:	b.ne	174 <ctf_label_iter+0x60>  // b.any
 164:	mov	w1, #0x409                 	// #1033
 168:	ldr	x0, [sp, #40]
 16c:	bl	0 <ctf_set_errno>
 170:	b	23c <ctf_label_iter+0x128>
 174:	str	wzr, [sp, #92]
 178:	b	228 <ctf_label_iter+0x114>
 17c:	ldr	x0, [sp, #64]
 180:	ldr	w0, [x0]
 184:	mov	w1, w0
 188:	ldr	x0, [sp, #40]
 18c:	bl	0 <ctf_strraw>
 190:	str	x0, [sp, #80]
 194:	ldr	x0, [sp, #80]
 198:	cmp	x0, #0x0
 19c:	b.ne	1d0 <ctf_label_iter+0xbc>  // b.any
 1a0:	ldr	x0, [sp, #64]
 1a4:	ldr	w1, [x0]
 1a8:	ldr	x0, [sp, #64]
 1ac:	ldr	w0, [x0, #4]
 1b0:	mov	w2, w0
 1b4:	adrp	x0, 0 <extract_label_info>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <ctf_dprintf>
 1c0:	mov	w1, #0x3ef                 	// #1007
 1c4:	ldr	x0, [sp, #40]
 1c8:	bl	0 <ctf_set_errno>
 1cc:	b	23c <ctf_label_iter+0x128>
 1d0:	ldr	x0, [sp, #64]
 1d4:	ldr	w0, [x0, #4]
 1d8:	mov	w0, w0
 1dc:	str	x0, [sp, #48]
 1e0:	add	x0, sp, #0x30
 1e4:	ldr	x3, [sp, #32]
 1e8:	ldr	x2, [sp, #24]
 1ec:	mov	x1, x0
 1f0:	ldr	x0, [sp, #80]
 1f4:	blr	x3
 1f8:	str	w0, [sp, #76]
 1fc:	ldr	w0, [sp, #76]
 200:	cmp	w0, #0x0
 204:	b.eq	210 <ctf_label_iter+0xfc>  // b.none
 208:	ldr	w0, [sp, #76]
 20c:	b	23c <ctf_label_iter+0x128>
 210:	ldr	w0, [sp, #92]
 214:	add	w0, w0, #0x1
 218:	str	w0, [sp, #92]
 21c:	ldr	x0, [sp, #64]
 220:	add	x0, x0, #0x8
 224:	str	x0, [sp, #64]
 228:	ldr	w0, [sp, #60]
 22c:	ldr	w1, [sp, #92]
 230:	cmp	w1, w0
 234:	b.cc	17c <ctf_label_iter+0x68>  // b.lo, b.ul, b.last
 238:	mov	w0, #0x0                   	// #0
 23c:	ldp	x29, x30, [sp], #96
 240:	ret

0000000000000244 <label_info_cb>:
 244:	stp	x29, x30, [sp, #-48]!
 248:	mov	x29, sp
 24c:	str	x0, [sp, #40]
 250:	str	x1, [sp, #32]
 254:	str	x2, [sp, #24]
 258:	ldr	x0, [sp, #24]
 25c:	ldr	x0, [x0]
 260:	mov	x1, x0
 264:	ldr	x0, [sp, #40]
 268:	bl	0 <strcmp>
 26c:	cmp	w0, #0x0
 270:	b.ne	2a0 <label_info_cb+0x5c>  // b.any
 274:	ldr	x0, [sp, #24]
 278:	ldr	x0, [x0, #8]
 27c:	cmp	x0, #0x0
 280:	b.eq	298 <label_info_cb+0x54>  // b.none
 284:	ldr	x0, [sp, #24]
 288:	ldr	x0, [x0, #8]
 28c:	ldr	x1, [sp, #32]
 290:	ldr	x1, [x1]
 294:	str	x1, [x0]
 298:	mov	w0, #0x1                   	// #1
 29c:	b	2a4 <label_info_cb+0x60>
 2a0:	mov	w0, #0x0                   	// #0
 2a4:	ldp	x29, x30, [sp], #48
 2a8:	ret

00000000000002ac <ctf_label_info>:
 2ac:	stp	x29, x30, [sp, #-80]!
 2b0:	mov	x29, sp
 2b4:	str	x0, [sp, #40]
 2b8:	str	x1, [sp, #32]
 2bc:	str	x2, [sp, #24]
 2c0:	ldr	x0, [sp, #32]
 2c4:	str	x0, [sp, #56]
 2c8:	ldr	x0, [sp, #24]
 2cc:	str	x0, [sp, #64]
 2d0:	add	x0, sp, #0x38
 2d4:	mov	x2, x0
 2d8:	adrp	x0, 0 <extract_label_info>
 2dc:	add	x1, x0, #0x0
 2e0:	ldr	x0, [sp, #40]
 2e4:	bl	114 <ctf_label_iter>
 2e8:	str	w0, [sp, #76]
 2ec:	ldr	w0, [sp, #76]
 2f0:	cmp	w0, #0x0
 2f4:	b.ge	300 <ctf_label_info+0x54>  // b.tcont
 2f8:	ldr	w0, [sp, #76]
 2fc:	b	320 <ctf_label_info+0x74>
 300:	ldr	w0, [sp, #76]
 304:	cmp	w0, #0x1
 308:	b.eq	31c <ctf_label_info+0x70>  // b.none
 30c:	mov	w1, #0x408                 	// #1032
 310:	ldr	x0, [sp, #40]
 314:	bl	0 <ctf_set_errno>
 318:	b	320 <ctf_label_info+0x74>
 31c:	mov	w0, #0x0                   	// #0
 320:	ldp	x29, x30, [sp], #80
 324:	ret

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_add_type_mapping>:
       0:	stp	x29, x30, [sp, #-80]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	str	x3, [sp, #16]
      18:	ldr	x0, [sp, #40]
      1c:	ldr	w0, [x0, #544]
      20:	mov	w0, w0
      24:	ldr	x1, [sp, #32]
      28:	cmp	x1, x0
      2c:	b.hi	4c <ctf_add_type_mapping+0x4c>  // b.pmore
      30:	ldr	x0, [sp, #40]
      34:	ldr	x0, [x0, #512]
      38:	cmp	x0, #0x0
      3c:	b.eq	4c <ctf_add_type_mapping+0x4c>  // b.none
      40:	ldr	x0, [sp, #40]
      44:	ldr	x0, [x0, #512]
      48:	str	x0, [sp, #40]
      4c:	ldr	x0, [sp, #40]
      50:	ldr	w0, [x0, #544]
      54:	mov	w0, w0
      58:	ldr	x1, [sp, #32]
      5c:	and	x0, x1, x0
      60:	str	x0, [sp, #32]
      64:	ldr	x0, [sp, #24]
      68:	ldr	w0, [x0, #544]
      6c:	mov	w0, w0
      70:	ldr	x1, [sp, #16]
      74:	cmp	x1, x0
      78:	b.hi	98 <ctf_add_type_mapping+0x98>  // b.pmore
      7c:	ldr	x0, [sp, #24]
      80:	ldr	x0, [x0, #512]
      84:	cmp	x0, #0x0
      88:	b.eq	98 <ctf_add_type_mapping+0x98>  // b.none
      8c:	ldr	x0, [sp, #24]
      90:	ldr	x0, [x0, #512]
      94:	str	x0, [sp, #24]
      98:	ldr	x0, [sp, #24]
      9c:	ldr	w0, [x0, #544]
      a0:	mov	w0, w0
      a4:	ldr	x1, [sp, #16]
      a8:	and	x0, x1, x0
      ac:	str	x0, [sp, #16]
      b0:	ldr	x0, [sp, #24]
      b4:	ldr	x0, [x0, #664]
      b8:	cmp	x0, #0x0
      bc:	b.ne	10c <ctf_add_type_mapping+0x10c>  // b.any
      c0:	adrp	x0, 0 <ctf_hash_type_mapping_key>
      c4:	add	x0, x0, #0x0
      c8:	str	x0, [sp, #72]
      cc:	adrp	x0, 0 <ctf_hash_eq_type_mapping_key>
      d0:	add	x0, x0, #0x0
      d4:	str	x0, [sp, #64]
      d8:	mov	x3, #0x0                   	// #0
      dc:	adrp	x0, 0 <free>
      e0:	add	x2, x0, #0x0
      e4:	ldr	x1, [sp, #64]
      e8:	ldr	x0, [sp, #72]
      ec:	bl	0 <ctf_dynhash_create>
      f0:	mov	x1, x0
      f4:	ldr	x0, [sp, #24]
      f8:	str	x1, [x0, #664]
      fc:	ldr	x0, [sp, #24]
     100:	ldr	x0, [x0, #664]
     104:	cmp	x0, #0x0
     108:	b.eq	15c <ctf_add_type_mapping+0x15c>  // b.none
     10c:	mov	x1, #0x10                  	// #16
     110:	mov	x0, #0x1                   	// #1
     114:	bl	0 <calloc>
     118:	str	x0, [sp, #56]
     11c:	ldr	x0, [sp, #56]
     120:	cmp	x0, #0x0
     124:	b.eq	164 <ctf_add_type_mapping+0x164>  // b.none
     128:	ldr	x0, [sp, #56]
     12c:	ldr	x1, [sp, #40]
     130:	str	x1, [x0]
     134:	ldr	x0, [sp, #56]
     138:	ldr	x1, [sp, #32]
     13c:	str	x1, [x0, #8]
     140:	ldr	x0, [sp, #24]
     144:	ldr	x0, [x0, #664]
     148:	ldr	x1, [sp, #16]
     14c:	mov	x2, x1
     150:	ldr	x1, [sp, #56]
     154:	bl	0 <ctf_dynhash_insert>
     158:	b	168 <ctf_add_type_mapping+0x168>
     15c:	nop
     160:	b	168 <ctf_add_type_mapping+0x168>
     164:	nop
     168:	ldp	x29, x30, [sp], #80
     16c:	ret

0000000000000170 <ctf_type_mapping>:
     170:	stp	x29, x30, [sp, #-80]!
     174:	mov	x29, sp
     178:	str	x0, [sp, #40]
     17c:	str	x1, [sp, #32]
     180:	str	x2, [sp, #24]
     184:	ldr	x0, [sp, #24]
     188:	ldr	x0, [x0]
     18c:	str	x0, [sp, #64]
     190:	str	xzr, [sp, #72]
     194:	ldr	x0, [sp, #40]
     198:	ldr	w0, [x0, #544]
     19c:	mov	w0, w0
     1a0:	ldr	x1, [sp, #32]
     1a4:	cmp	x1, x0
     1a8:	b.hi	1c8 <ctf_type_mapping+0x58>  // b.pmore
     1ac:	ldr	x0, [sp, #40]
     1b0:	ldr	x0, [x0, #512]
     1b4:	cmp	x0, #0x0
     1b8:	b.eq	1c8 <ctf_type_mapping+0x58>  // b.none
     1bc:	ldr	x0, [sp, #40]
     1c0:	ldr	x0, [x0, #512]
     1c4:	str	x0, [sp, #40]
     1c8:	ldr	x0, [sp, #40]
     1cc:	ldr	w0, [x0, #544]
     1d0:	mov	w0, w0
     1d4:	ldr	x1, [sp, #32]
     1d8:	and	x0, x1, x0
     1dc:	str	x0, [sp, #32]
     1e0:	ldr	x0, [sp, #40]
     1e4:	str	x0, [sp, #48]
     1e8:	ldr	x0, [sp, #32]
     1ec:	str	x0, [sp, #56]
     1f0:	ldr	x0, [sp, #64]
     1f4:	ldr	x0, [x0, #664]
     1f8:	cmp	x0, #0x0
     1fc:	b.eq	214 <ctf_type_mapping+0xa4>  // b.none
     200:	ldr	x0, [sp, #64]
     204:	ldr	x0, [x0, #664]
     208:	add	x1, sp, #0x30
     20c:	bl	0 <ctf_dynhash_lookup>
     210:	str	x0, [sp, #72]
     214:	ldr	x0, [sp, #72]
     218:	cmp	x0, #0x0
     21c:	b.eq	268 <ctf_type_mapping+0xf8>  // b.none
     220:	ldr	x0, [sp, #64]
     224:	ldr	x0, [x0, #512]
     228:	cmp	x0, #0x0
     22c:	b.eq	24c <ctf_type_mapping+0xdc>  // b.none
     230:	ldr	x0, [sp, #64]
     234:	ldr	w0, [x0, #544]
     238:	add	w0, w0, #0x1
     23c:	mov	w1, w0
     240:	ldr	x0, [sp, #72]
     244:	orr	x0, x1, x0
     248:	b	250 <ctf_type_mapping+0xe0>
     24c:	ldr	x0, [sp, #72]
     250:	str	x0, [sp, #72]
     254:	ldr	x0, [sp, #24]
     258:	ldr	x1, [sp, #64]
     25c:	str	x1, [x0]
     260:	ldr	x0, [sp, #72]
     264:	b	304 <ctf_type_mapping+0x194>
     268:	ldr	x0, [sp, #64]
     26c:	ldr	x0, [x0, #512]
     270:	cmp	x0, #0x0
     274:	b.eq	298 <ctf_type_mapping+0x128>  // b.none
     278:	ldr	x0, [sp, #64]
     27c:	ldr	x0, [x0, #512]
     280:	str	x0, [sp, #64]
     284:	ldr	x0, [sp, #64]
     288:	ldr	x0, [x0, #664]
     28c:	cmp	x0, #0x0
     290:	b.eq	2b4 <ctf_type_mapping+0x144>  // b.none
     294:	b	2a0 <ctf_type_mapping+0x130>
     298:	mov	x0, #0x0                   	// #0
     29c:	b	304 <ctf_type_mapping+0x194>
     2a0:	ldr	x0, [sp, #64]
     2a4:	ldr	x0, [x0, #664]
     2a8:	add	x1, sp, #0x30
     2ac:	bl	0 <ctf_dynhash_lookup>
     2b0:	str	x0, [sp, #72]
     2b4:	ldr	x0, [sp, #72]
     2b8:	cmp	x0, #0x0
     2bc:	b.eq	2f4 <ctf_type_mapping+0x184>  // b.none
     2c0:	ldr	x0, [sp, #64]
     2c4:	ldr	x0, [x0, #512]
     2c8:	cmp	x0, #0x0
     2cc:	b.eq	2ec <ctf_type_mapping+0x17c>  // b.none
     2d0:	ldr	x0, [sp, #64]
     2d4:	ldr	w0, [x0, #544]
     2d8:	add	w0, w0, #0x1
     2dc:	mov	w1, w0
     2e0:	ldr	x0, [sp, #72]
     2e4:	orr	x0, x1, x0
     2e8:	b	2f0 <ctf_type_mapping+0x180>
     2ec:	ldr	x0, [sp, #72]
     2f0:	str	x0, [sp, #72]
     2f4:	ldr	x0, [sp, #24]
     2f8:	ldr	x1, [sp, #64]
     2fc:	str	x1, [x0]
     300:	ldr	x0, [sp, #72]
     304:	ldp	x29, x30, [sp], #80
     308:	ret

000000000000030c <ctf_arc_close_thunk>:
     30c:	stp	x29, x30, [sp, #-32]!
     310:	mov	x29, sp
     314:	str	x0, [sp, #24]
     318:	ldr	x0, [sp, #24]
     31c:	bl	0 <ctf_arc_close>
     320:	nop
     324:	ldp	x29, x30, [sp], #32
     328:	ret

000000000000032c <ctf_file_close_thunk>:
     32c:	stp	x29, x30, [sp, #-32]!
     330:	mov	x29, sp
     334:	str	x0, [sp, #24]
     338:	ldr	x0, [sp, #24]
     33c:	bl	0 <ctf_file_close>
     340:	nop
     344:	ldp	x29, x30, [sp], #32
     348:	ret

000000000000034c <ctf_link_add_ctf>:
     34c:	stp	x29, x30, [sp, #-64]!
     350:	mov	x29, sp
     354:	str	x0, [sp, #40]
     358:	str	x1, [sp, #32]
     35c:	str	x2, [sp, #24]
     360:	str	xzr, [sp, #56]
     364:	ldr	x0, [sp, #40]
     368:	ldr	x0, [x0, #656]
     36c:	cmp	x0, #0x0
     370:	b.eq	384 <ctf_link_add_ctf+0x38>  // b.none
     374:	mov	w1, #0x3f5                 	// #1013
     378:	ldr	x0, [sp, #40]
     37c:	bl	0 <ctf_set_errno>
     380:	b	44c <ctf_link_add_ctf+0x100>
     384:	ldr	x0, [sp, #40]
     388:	ldr	x0, [x0, #648]
     38c:	cmp	x0, #0x0
     390:	b.ne	3c4 <ctf_link_add_ctf+0x78>  // b.any
     394:	adrp	x0, 0 <ctf_add_type_mapping>
     398:	add	x3, x0, #0x0
     39c:	adrp	x0, 0 <free>
     3a0:	add	x2, x0, #0x0
     3a4:	adrp	x0, 0 <ctf_hash_eq_string>
     3a8:	add	x1, x0, #0x0
     3ac:	adrp	x0, 0 <ctf_hash_string>
     3b0:	add	x0, x0, #0x0
     3b4:	bl	0 <ctf_dynhash_create>
     3b8:	mov	x1, x0
     3bc:	ldr	x0, [sp, #40]
     3c0:	str	x1, [x0, #648]
     3c4:	ldr	x0, [sp, #40]
     3c8:	ldr	x0, [x0, #648]
     3cc:	cmp	x0, #0x0
     3d0:	b.eq	410 <ctf_link_add_ctf+0xc4>  // b.none
     3d4:	ldr	x0, [sp, #24]
     3d8:	bl	0 <strdup>
     3dc:	str	x0, [sp, #56]
     3e0:	ldr	x0, [sp, #56]
     3e4:	cmp	x0, #0x0
     3e8:	b.eq	418 <ctf_link_add_ctf+0xcc>  // b.none
     3ec:	ldr	x0, [sp, #40]
     3f0:	ldr	x0, [x0, #648]
     3f4:	ldr	x2, [sp, #32]
     3f8:	ldr	x1, [sp, #56]
     3fc:	bl	0 <ctf_dynhash_insert>
     400:	cmp	w0, #0x0
     404:	b.lt	420 <ctf_link_add_ctf+0xd4>  // b.tstop
     408:	mov	w0, #0x0                   	// #0
     40c:	b	44c <ctf_link_add_ctf+0x100>
     410:	nop
     414:	b	424 <ctf_link_add_ctf+0xd8>
     418:	nop
     41c:	b	424 <ctf_link_add_ctf+0xd8>
     420:	nop
     424:	ldr	x0, [sp, #40]
     428:	ldr	x0, [x0, #648]
     42c:	bl	0 <free>
     430:	ldr	x0, [sp, #40]
     434:	str	xzr, [x0, #648]
     438:	ldr	x0, [sp, #56]
     43c:	bl	0 <free>
     440:	mov	w1, #0xc                   	// #12
     444:	ldr	x0, [sp, #40]
     448:	bl	0 <ctf_set_errno>
     44c:	ldp	x29, x30, [sp], #64
     450:	ret

0000000000000454 <ctf_create_per_cu>:
     454:	stp	x29, x30, [sp, #-80]!
     458:	mov	x29, sp
     45c:	str	x0, [sp, #40]
     460:	str	x1, [sp, #32]
     464:	str	x2, [sp, #24]
     468:	str	xzr, [sp, #64]
     46c:	str	xzr, [sp, #56]
     470:	ldr	x0, [sp, #40]
     474:	ldr	x0, [x0, #672]
     478:	cmp	x0, #0x0
     47c:	b.eq	4c8 <ctf_create_per_cu+0x74>  // b.none
     480:	ldr	x0, [sp, #40]
     484:	ldr	x0, [x0, #672]
     488:	ldr	x1, [sp, #32]
     48c:	bl	0 <ctf_dynhash_lookup>
     490:	str	x0, [sp, #64]
     494:	ldr	x0, [sp, #64]
     498:	cmp	x0, #0x0
     49c:	b.ne	4c8 <ctf_create_per_cu+0x74>  // b.any
     4a0:	ldr	x0, [sp, #40]
     4a4:	ldr	x0, [x0, #672]
     4a8:	ldr	x1, [sp, #24]
     4ac:	bl	0 <ctf_dynhash_lookup>
     4b0:	str	x0, [sp, #64]
     4b4:	ldr	x0, [sp, #64]
     4b8:	cmp	x0, #0x0
     4bc:	b.ne	4c8 <ctf_create_per_cu+0x74>  // b.any
     4c0:	ldr	x0, [sp, #32]
     4c4:	str	x0, [sp, #64]
     4c8:	ldr	x0, [sp, #64]
     4cc:	cmp	x0, #0x0
     4d0:	b.ne	4dc <ctf_create_per_cu+0x88>  // b.any
     4d4:	ldr	x0, [sp, #32]
     4d8:	str	x0, [sp, #64]
     4dc:	ldr	x0, [sp, #40]
     4e0:	ldr	x0, [x0, #656]
     4e4:	ldr	x1, [sp, #64]
     4e8:	bl	0 <ctf_dynhash_lookup>
     4ec:	str	x0, [sp, #72]
     4f0:	ldr	x0, [sp, #72]
     4f4:	cmp	x0, #0x0
     4f8:	b.ne	5a8 <ctf_create_per_cu+0x154>  // b.any
     4fc:	add	x0, sp, #0x34
     500:	bl	0 <ctf_create>
     504:	str	x0, [sp, #72]
     508:	ldr	x0, [sp, #72]
     50c:	cmp	x0, #0x0
     510:	b.ne	54c <ctf_create_per_cu+0xf8>  // b.any
     514:	ldr	w0, [sp, #52]
     518:	bl	0 <ctf_errmsg>
     51c:	mov	x3, x0
     520:	ldr	x2, [sp, #32]
     524:	ldr	x1, [sp, #24]
     528:	adrp	x0, 0 <ctf_add_type_mapping>
     52c:	add	x0, x0, #0x0
     530:	bl	0 <ctf_dprintf>
     534:	ldr	w0, [sp, #52]
     538:	mov	w1, w0
     53c:	ldr	x0, [sp, #40]
     540:	bl	0 <ctf_set_errno>
     544:	mov	x0, #0x0                   	// #0
     548:	b	5dc <ctf_create_per_cu+0x188>
     54c:	ldr	x0, [sp, #64]
     550:	bl	0 <strdup>
     554:	str	x0, [sp, #56]
     558:	ldr	x0, [sp, #56]
     55c:	cmp	x0, #0x0
     560:	b.eq	5b0 <ctf_create_per_cu+0x15c>  // b.none
     564:	ldr	x0, [sp, #40]
     568:	ldr	x0, [x0, #656]
     56c:	ldr	x2, [sp, #72]
     570:	ldr	x1, [sp, #56]
     574:	bl	0 <ctf_dynhash_insert>
     578:	cmp	w0, #0x0
     57c:	b.lt	5b8 <ctf_create_per_cu+0x164>  // b.tstop
     580:	ldr	x1, [sp, #40]
     584:	ldr	x0, [sp, #72]
     588:	bl	0 <ctf_import>
     58c:	ldr	x1, [sp, #24]
     590:	ldr	x0, [sp, #72]
     594:	bl	0 <ctf_cuname_set>
     598:	adrp	x0, 0 <_CTF_SECTION>
     59c:	add	x1, x0, #0x0
     5a0:	ldr	x0, [sp, #72]
     5a4:	bl	0 <ctf_parent_name_set>
     5a8:	ldr	x0, [sp, #72]
     5ac:	b	5dc <ctf_create_per_cu+0x188>
     5b0:	nop
     5b4:	b	5bc <ctf_create_per_cu+0x168>
     5b8:	nop
     5bc:	ldr	x0, [sp, #56]
     5c0:	bl	0 <free>
     5c4:	ldr	x0, [sp, #72]
     5c8:	bl	0 <ctf_file_close>
     5cc:	mov	w1, #0xc                   	// #12
     5d0:	ldr	x0, [sp, #40]
     5d4:	bl	0 <ctf_set_errno>
     5d8:	mov	x0, #0x0                   	// #0
     5dc:	ldp	x29, x30, [sp], #80
     5e0:	ret

00000000000005e4 <ctf_link_add_cu_mapping>:
     5e4:	stp	x29, x30, [sp, #-80]!
     5e8:	mov	x29, sp
     5ec:	str	x0, [sp, #40]
     5f0:	str	x1, [sp, #32]
     5f4:	str	x2, [sp, #24]
     5f8:	ldr	x0, [sp, #40]
     5fc:	ldr	x0, [x0, #672]
     600:	cmp	x0, #0x0
     604:	b.ne	638 <ctf_link_add_cu_mapping+0x54>  // b.any
     608:	adrp	x0, 0 <free>
     60c:	add	x3, x0, #0x0
     610:	adrp	x0, 0 <free>
     614:	add	x2, x0, #0x0
     618:	adrp	x0, 0 <ctf_hash_eq_string>
     61c:	add	x1, x0, #0x0
     620:	adrp	x0, 0 <ctf_hash_string>
     624:	add	x0, x0, #0x0
     628:	bl	0 <ctf_dynhash_create>
     62c:	mov	x1, x0
     630:	ldr	x0, [sp, #40]
     634:	str	x1, [x0, #672]
     638:	ldr	x0, [sp, #40]
     63c:	ldr	x0, [x0, #672]
     640:	cmp	x0, #0x0
     644:	b.ne	658 <ctf_link_add_cu_mapping+0x74>  // b.any
     648:	mov	w1, #0xc                   	// #12
     64c:	ldr	x0, [sp, #40]
     650:	bl	0 <ctf_set_errno>
     654:	b	770 <ctf_link_add_cu_mapping+0x18c>
     658:	ldr	x0, [sp, #40]
     65c:	ldr	x0, [x0, #656]
     660:	cmp	x0, #0x0
     664:	b.ne	698 <ctf_link_add_cu_mapping+0xb4>  // b.any
     668:	adrp	x0, 0 <ctf_add_type_mapping>
     66c:	add	x3, x0, #0x0
     670:	adrp	x0, 0 <free>
     674:	add	x2, x0, #0x0
     678:	adrp	x0, 0 <ctf_hash_eq_string>
     67c:	add	x1, x0, #0x0
     680:	adrp	x0, 0 <ctf_hash_string>
     684:	add	x0, x0, #0x0
     688:	bl	0 <ctf_dynhash_create>
     68c:	mov	x1, x0
     690:	ldr	x0, [sp, #40]
     694:	str	x1, [x0, #656]
     698:	ldr	x0, [sp, #40]
     69c:	ldr	x0, [x0, #656]
     6a0:	cmp	x0, #0x0
     6a4:	b.ne	6b8 <ctf_link_add_cu_mapping+0xd4>  // b.any
     6a8:	mov	w1, #0xc                   	// #12
     6ac:	ldr	x0, [sp, #40]
     6b0:	bl	0 <ctf_set_errno>
     6b4:	b	770 <ctf_link_add_cu_mapping+0x18c>
     6b8:	ldr	x0, [sp, #32]
     6bc:	bl	0 <strdup>
     6c0:	str	x0, [sp, #72]
     6c4:	ldr	x0, [sp, #24]
     6c8:	bl	0 <strdup>
     6cc:	str	x0, [sp, #64]
     6d0:	ldr	x0, [sp, #72]
     6d4:	cmp	x0, #0x0
     6d8:	b.eq	73c <ctf_link_add_cu_mapping+0x158>  // b.none
     6dc:	ldr	x0, [sp, #64]
     6e0:	cmp	x0, #0x0
     6e4:	b.eq	73c <ctf_link_add_cu_mapping+0x158>  // b.none
     6e8:	ldr	x2, [sp, #64]
     6ec:	ldr	x1, [sp, #64]
     6f0:	ldr	x0, [sp, #40]
     6f4:	bl	454 <ctf_create_per_cu>
     6f8:	cmp	x0, #0x0
     6fc:	b.eq	758 <ctf_link_add_cu_mapping+0x174>  // b.none
     700:	ldr	x0, [sp, #40]
     704:	ldr	x0, [x0, #672]
     708:	ldr	x2, [sp, #64]
     70c:	ldr	x1, [sp, #72]
     710:	bl	0 <ctf_dynhash_insert>
     714:	str	w0, [sp, #60]
     718:	ldr	w0, [sp, #60]
     71c:	cmp	w0, #0x0
     720:	b.eq	734 <ctf_link_add_cu_mapping+0x150>  // b.none
     724:	ldr	w1, [sp, #60]
     728:	ldr	x0, [sp, #40]
     72c:	bl	0 <ctf_set_errno>
     730:	b	75c <ctf_link_add_cu_mapping+0x178>
     734:	mov	w0, #0x0                   	// #0
     738:	b	770 <ctf_link_add_cu_mapping+0x18c>
     73c:	nop
     740:	bl	0 <__errno_location>
     744:	ldr	w0, [x0]
     748:	mov	w1, w0
     74c:	ldr	x0, [sp, #40]
     750:	bl	0 <ctf_set_errno>
     754:	b	75c <ctf_link_add_cu_mapping+0x178>
     758:	nop
     75c:	ldr	x0, [sp, #72]
     760:	bl	0 <free>
     764:	ldr	x0, [sp, #64]
     768:	bl	0 <free>
     76c:	mov	w0, #0xffffffff            	// #-1
     770:	ldp	x29, x30, [sp], #80
     774:	ret

0000000000000778 <ctf_link_set_memb_name_changer>:
     778:	sub	sp, sp, #0x20
     77c:	str	x0, [sp, #24]
     780:	str	x1, [sp, #16]
     784:	str	x2, [sp, #8]
     788:	ldr	x0, [sp, #24]
     78c:	ldr	x1, [sp, #16]
     790:	str	x1, [x0, #680]
     794:	ldr	x0, [sp, #24]
     798:	ldr	x1, [sp, #8]
     79c:	str	x1, [x0, #688]
     7a0:	nop
     7a4:	add	sp, sp, #0x20
     7a8:	ret

00000000000007ac <ctf_link_one_type>:
     7ac:	stp	x29, x30, [sp, #-112]!
     7b0:	mov	x29, sp
     7b4:	stp	x19, x20, [sp, #16]
     7b8:	str	x21, [sp, #32]
     7bc:	str	x0, [sp, #72]
     7c0:	str	w1, [sp, #68]
     7c4:	str	x2, [sp, #56]
     7c8:	ldr	x0, [sp, #56]
     7cc:	str	x0, [sp, #104]
     7d0:	ldr	x0, [sp, #104]
     7d4:	ldr	w0, [x0, #52]
     7d8:	cmp	w0, #0x0
     7dc:	b.eq	800 <ctf_link_one_type+0x54>  // b.none
     7e0:	adrp	x0, 0 <ctf_add_type_mapping>
     7e4:	add	x0, x0, #0x0
     7e8:	bl	0 <ctf_dprintf>
     7ec:	ldr	x0, [sp, #104]
     7f0:	ldr	x0, [x0]
     7f4:	mov	w1, #0x419                 	// #1049
     7f8:	bl	0 <ctf_set_errno>
     7fc:	b	990 <ctf_link_one_type+0x1e4>
     800:	ldr	x0, [sp, #104]
     804:	ldr	w0, [x0, #56]
     808:	cmp	w0, #0x0
     80c:	b.ne	8b4 <ctf_link_one_type+0x108>  // b.any
     810:	ldr	x0, [sp, #104]
     814:	ldr	x3, [x0]
     818:	ldr	x0, [sp, #104]
     81c:	ldr	x0, [x0, #16]
     820:	ldr	x2, [sp, #72]
     824:	mov	x1, x0
     828:	mov	x0, x3
     82c:	bl	0 <ctf_add_type>
     830:	cmn	x0, #0x1
     834:	b.eq	840 <ctf_link_one_type+0x94>  // b.none
     838:	mov	w0, #0x0                   	// #0
     83c:	b	990 <ctf_link_one_type+0x1e4>
     840:	ldr	x0, [sp, #104]
     844:	ldr	x0, [x0]
     848:	bl	0 <ctf_errno>
     84c:	str	w0, [sp, #100]
     850:	ldr	w0, [sp, #100]
     854:	cmp	w0, #0x411
     858:	b.eq	8a4 <ctf_link_one_type+0xf8>  // b.none
     85c:	ldr	w0, [sp, #100]
     860:	cmp	w0, #0x41b
     864:	b.eq	89c <ctf_link_one_type+0xf0>  // b.none
     868:	ldr	x0, [sp, #104]
     86c:	ldr	x19, [x0, #40]
     870:	ldr	x0, [sp, #104]
     874:	ldr	x20, [x0, #8]
     878:	ldr	w0, [sp, #100]
     87c:	bl	0 <ctf_errmsg>
     880:	mov	x4, x0
     884:	mov	x3, x20
     888:	mov	x2, x19
     88c:	ldr	x1, [sp, #72]
     890:	adrp	x0, 0 <ctf_add_type_mapping>
     894:	add	x0, x0, #0x0
     898:	bl	0 <ctf_dprintf>
     89c:	mov	w0, #0x0                   	// #0
     8a0:	b	990 <ctf_link_one_type+0x1e4>
     8a4:	ldr	x0, [sp, #104]
     8a8:	ldr	x0, [x0]
     8ac:	mov	w1, #0x0                   	// #0
     8b0:	bl	0 <ctf_set_errno>
     8b4:	ldr	x0, [sp, #104]
     8b8:	ldr	x3, [x0]
     8bc:	ldr	x0, [sp, #104]
     8c0:	ldr	x1, [x0, #8]
     8c4:	ldr	x0, [sp, #104]
     8c8:	ldr	x0, [x0, #32]
     8cc:	mov	x2, x0
     8d0:	mov	x0, x3
     8d4:	bl	454 <ctf_create_per_cu>
     8d8:	str	x0, [sp, #88]
     8dc:	ldr	x0, [sp, #88]
     8e0:	cmp	x0, #0x0
     8e4:	b.ne	8f0 <ctf_link_one_type+0x144>  // b.any
     8e8:	mov	w0, #0xffffffff            	// #-1
     8ec:	b	990 <ctf_link_one_type+0x1e4>
     8f0:	ldr	x0, [sp, #104]
     8f4:	ldr	x0, [x0, #16]
     8f8:	ldr	x2, [sp, #72]
     8fc:	mov	x1, x0
     900:	ldr	x0, [sp, #88]
     904:	bl	0 <ctf_add_type>
     908:	cmn	x0, #0x1
     90c:	b.eq	918 <ctf_link_one_type+0x16c>  // b.none
     910:	mov	w0, #0x0                   	// #0
     914:	b	990 <ctf_link_one_type+0x1e4>
     918:	ldr	x0, [sp, #88]
     91c:	bl	0 <ctf_errno>
     920:	str	w0, [sp, #100]
     924:	ldr	w0, [sp, #100]
     928:	cmp	w0, #0x41b
     92c:	b.eq	970 <ctf_link_one_type+0x1c4>  // b.none
     930:	ldr	x0, [sp, #104]
     934:	ldr	x19, [x0, #40]
     938:	ldr	x0, [sp, #104]
     93c:	ldr	x20, [x0, #8]
     940:	ldr	x0, [sp, #104]
     944:	ldr	x21, [x0, #40]
     948:	ldr	w0, [sp, #100]
     94c:	bl	0 <ctf_errmsg>
     950:	mov	x5, x0
     954:	mov	x4, x21
     958:	mov	x3, x20
     95c:	mov	x2, x19
     960:	ldr	x1, [sp, #72]
     964:	adrp	x0, 0 <ctf_add_type_mapping>
     968:	add	x0, x0, #0x0
     96c:	bl	0 <ctf_dprintf>
     970:	ldr	w0, [sp, #100]
     974:	cmp	w0, #0x411
     978:	b.ne	98c <ctf_link_one_type+0x1e0>  // b.any
     97c:	ldr	x0, [sp, #104]
     980:	ldr	x0, [x0]
     984:	mov	w1, #0x0                   	// #0
     988:	bl	0 <ctf_set_errno>
     98c:	mov	w0, #0x0                   	// #0
     990:	ldp	x19, x20, [sp, #16]
     994:	ldr	x21, [sp, #32]
     998:	ldp	x29, x30, [sp], #112
     99c:	ret

00000000000009a0 <check_variable>:
     9a0:	stp	x29, x30, [sp, #-64]!
     9a4:	mov	x29, sp
     9a8:	str	x0, [sp, #40]
     9ac:	str	x1, [sp, #32]
     9b0:	str	x2, [sp, #24]
     9b4:	str	x3, [sp, #16]
     9b8:	ldr	x0, [sp, #32]
     9bc:	ldr	x0, [x0, #592]
     9c0:	ldr	x1, [sp, #40]
     9c4:	bl	0 <ctf_dynhash_lookup>
     9c8:	str	x0, [sp, #56]
     9cc:	ldr	x0, [sp, #16]
     9d0:	ldr	x1, [sp, #56]
     9d4:	str	x1, [x0]
     9d8:	ldr	x0, [sp, #56]
     9dc:	cmp	x0, #0x0
     9e0:	b.ne	9ec <check_variable+0x4c>  // b.any
     9e4:	mov	w0, #0x1                   	// #1
     9e8:	b	a14 <check_variable+0x74>
     9ec:	ldr	x0, [sp, #56]
     9f0:	ldr	x0, [x0, #24]
     9f4:	ldr	x1, [sp, #24]
     9f8:	cmp	x1, x0
     9fc:	b.eq	a10 <check_variable+0x70>  // b.none
     a00:	ldr	x1, [sp, #40]
     a04:	adrp	x0, 0 <ctf_add_type_mapping>
     a08:	add	x0, x0, #0x0
     a0c:	bl	0 <ctf_dprintf>
     a10:	mov	w0, #0x0                   	// #0
     a14:	ldp	x29, x30, [sp], #64
     a18:	ret

0000000000000a1c <ctf_link_one_variable>:
     a1c:	stp	x29, x30, [sp, #-112]!
     a20:	mov	x29, sp
     a24:	str	x19, [sp, #16]
     a28:	str	x0, [sp, #56]
     a2c:	str	x1, [sp, #48]
     a30:	str	x2, [sp, #40]
     a34:	ldr	x0, [sp, #40]
     a38:	str	x0, [sp, #96]
     a3c:	str	xzr, [sp, #104]
     a40:	ldr	x0, [sp, #96]
     a44:	ldr	x0, [x0]
     a48:	str	x0, [sp, #80]
     a4c:	ldr	x0, [sp, #96]
     a50:	ldr	x0, [x0, #16]
     a54:	add	x1, sp, #0x50
     a58:	mov	x2, x1
     a5c:	ldr	x1, [sp, #48]
     a60:	bl	170 <ctf_type_mapping>
     a64:	str	x0, [sp, #104]
     a68:	ldr	x0, [sp, #104]
     a6c:	cmp	x0, #0x0
     a70:	b.eq	b14 <ctf_link_one_variable+0xf8>  // b.none
     a74:	ldr	x0, [sp, #96]
     a78:	ldr	x1, [x0]
     a7c:	ldr	x0, [sp, #80]
     a80:	cmp	x1, x0
     a84:	b.ne	b14 <ctf_link_one_variable+0xf8>  // b.any
     a88:	ldr	x0, [sp, #80]
     a8c:	add	x1, sp, #0x48
     a90:	mov	x3, x1
     a94:	ldr	x2, [sp, #104]
     a98:	mov	x1, x0
     a9c:	ldr	x0, [sp, #56]
     aa0:	bl	9a0 <check_variable>
     aa4:	cmp	w0, #0x0
     aa8:	b.eq	aec <ctf_link_one_variable+0xd0>  // b.none
     aac:	ldr	x0, [sp, #80]
     ab0:	ldr	x2, [sp, #104]
     ab4:	ldr	x1, [sp, #56]
     ab8:	bl	0 <ctf_add_variable>
     abc:	cmp	w0, #0x0
     ac0:	b.ge	ae4 <ctf_link_one_variable+0xc8>  // b.tcont
     ac4:	ldr	x0, [sp, #96]
     ac8:	ldr	x19, [x0]
     acc:	ldr	x0, [sp, #80]
     ad0:	bl	0 <ctf_errno>
     ad4:	mov	w1, w0
     ad8:	mov	x0, x19
     adc:	bl	0 <ctf_set_errno>
     ae0:	b	c10 <ctf_link_one_variable+0x1f4>
     ae4:	mov	w0, #0x0                   	// #0
     ae8:	b	c10 <ctf_link_one_variable+0x1f4>
     aec:	ldr	x0, [sp, #72]
     af0:	cmp	x0, #0x0
     af4:	b.eq	b14 <ctf_link_one_variable+0xf8>  // b.none
     af8:	ldr	x0, [sp, #72]
     afc:	ldr	x0, [x0, #24]
     b00:	ldr	x1, [sp, #48]
     b04:	cmp	x1, x0
     b08:	b.ne	b14 <ctf_link_one_variable+0xf8>  // b.any
     b0c:	mov	w0, #0x0                   	// #0
     b10:	b	c10 <ctf_link_one_variable+0x1f4>
     b14:	ldr	x0, [sp, #96]
     b18:	ldr	x3, [x0]
     b1c:	ldr	x0, [sp, #96]
     b20:	ldr	x1, [x0, #8]
     b24:	ldr	x0, [sp, #96]
     b28:	ldr	x0, [x0, #32]
     b2c:	mov	x2, x0
     b30:	mov	x0, x3
     b34:	bl	454 <ctf_create_per_cu>
     b38:	str	x0, [sp, #88]
     b3c:	ldr	x0, [sp, #88]
     b40:	cmp	x0, #0x0
     b44:	b.ne	b50 <ctf_link_one_variable+0x134>  // b.any
     b48:	mov	w0, #0xffffffff            	// #-1
     b4c:	b	c10 <ctf_link_one_variable+0x1f4>
     b50:	ldr	x0, [sp, #104]
     b54:	cmp	x0, #0x0
     b58:	b.ne	bb4 <ctf_link_one_variable+0x198>  // b.any
     b5c:	ldr	x0, [sp, #88]
     b60:	str	x0, [sp, #80]
     b64:	ldr	x0, [sp, #96]
     b68:	ldr	x0, [x0, #16]
     b6c:	add	x1, sp, #0x50
     b70:	mov	x2, x1
     b74:	ldr	x1, [sp, #48]
     b78:	bl	170 <ctf_type_mapping>
     b7c:	str	x0, [sp, #104]
     b80:	ldr	x0, [sp, #104]
     b84:	cmp	x0, #0x0
     b88:	b.ne	bb4 <ctf_link_one_variable+0x198>  // b.any
     b8c:	ldr	x0, [sp, #96]
     b90:	ldr	x0, [x0, #8]
     b94:	mov	x3, x0
     b98:	ldr	x2, [sp, #56]
     b9c:	ldr	x1, [sp, #48]
     ba0:	adrp	x0, 0 <ctf_add_type_mapping>
     ba4:	add	x0, x0, #0x0
     ba8:	bl	0 <ctf_dprintf>
     bac:	mov	w0, #0x0                   	// #0
     bb0:	b	c10 <ctf_link_one_variable+0x1f4>
     bb4:	add	x0, sp, #0x48
     bb8:	mov	x3, x0
     bbc:	ldr	x2, [sp, #104]
     bc0:	ldr	x1, [sp, #88]
     bc4:	ldr	x0, [sp, #56]
     bc8:	bl	9a0 <check_variable>
     bcc:	cmp	w0, #0x0
     bd0:	b.eq	c0c <ctf_link_one_variable+0x1f0>  // b.none
     bd4:	ldr	x2, [sp, #104]
     bd8:	ldr	x1, [sp, #56]
     bdc:	ldr	x0, [sp, #88]
     be0:	bl	0 <ctf_add_variable>
     be4:	cmp	w0, #0x0
     be8:	b.ge	c0c <ctf_link_one_variable+0x1f0>  // b.tcont
     bec:	ldr	x0, [sp, #96]
     bf0:	ldr	x19, [x0]
     bf4:	ldr	x0, [sp, #88]
     bf8:	bl	0 <ctf_errno>
     bfc:	mov	w1, w0
     c00:	mov	x0, x19
     c04:	bl	0 <ctf_set_errno>
     c08:	b	c10 <ctf_link_one_variable+0x1f4>
     c0c:	mov	w0, #0x0                   	// #0
     c10:	ldr	x19, [sp, #16]
     c14:	ldp	x29, x30, [sp], #112
     c18:	ret

0000000000000c1c <ctf_link_one_input_archive_member>:
     c1c:	stp	x29, x30, [sp, #-80]!
     c20:	mov	x29, sp
     c24:	str	x0, [sp, #40]
     c28:	str	x1, [sp, #32]
     c2c:	str	x2, [sp, #24]
     c30:	ldr	x0, [sp, #24]
     c34:	str	x0, [sp, #64]
     c38:	str	wzr, [sp, #76]
     c3c:	adrp	x0, 0 <_CTF_SECTION>
     c40:	add	x1, x0, #0x0
     c44:	ldr	x0, [sp, #32]
     c48:	bl	0 <strcmp>
     c4c:	cmp	w0, #0x0
     c50:	b.ne	ce0 <ctf_link_one_input_archive_member+0xc4>  // b.any
     c54:	ldr	x0, [sp, #64]
     c58:	ldr	w0, [x0, #48]
     c5c:	cmp	w0, #0x0
     c60:	b.eq	c6c <ctf_link_one_input_archive_member+0x50>  // b.none
     c64:	mov	w0, #0x0                   	// #0
     c68:	b	dec <ctf_link_one_input_archive_member+0x1d0>
     c6c:	adrp	x0, 0 <ctf_add_type_mapping>
     c70:	add	x0, x0, #0x0
     c74:	bl	0 <strdup>
     c78:	mov	x1, x0
     c7c:	ldr	x0, [sp, #64]
     c80:	str	x1, [x0, #40]
     c84:	ldr	x0, [sp, #64]
     c88:	ldr	x0, [x0, #40]
     c8c:	cmp	x0, #0x0
     c90:	b.eq	d14 <ctf_link_one_input_archive_member+0xf8>  // b.none
     c94:	ldr	x0, [sp, #64]
     c98:	ldr	x2, [x0, #40]
     c9c:	ldr	x0, [sp, #64]
     ca0:	ldr	x0, [x0, #8]
     ca4:	mov	x1, x0
     ca8:	mov	x0, x2
     cac:	bl	0 <ctf_str_append>
     cb0:	str	x0, [sp, #56]
     cb4:	ldr	x0, [sp, #56]
     cb8:	cmp	x0, #0x0
     cbc:	b.eq	cd0 <ctf_link_one_input_archive_member+0xb4>  // b.none
     cc0:	ldr	x0, [sp, #64]
     cc4:	ldr	x1, [sp, #56]
     cc8:	str	x1, [x0, #40]
     ccc:	b	d14 <ctf_link_one_input_archive_member+0xf8>
     cd0:	ldr	x0, [sp, #64]
     cd4:	ldr	x0, [x0, #40]
     cd8:	bl	0 <free>
     cdc:	b	d14 <ctf_link_one_input_archive_member+0xf8>
     ce0:	ldr	x0, [sp, #32]
     ce4:	bl	0 <strdup>
     ce8:	mov	x1, x0
     cec:	ldr	x0, [sp, #64]
     cf0:	str	x1, [x0, #40]
     cf4:	ldr	x0, [sp, #64]
     cf8:	ldr	x0, [x0, #24]
     cfc:	mov	x1, x0
     d00:	ldr	x0, [sp, #40]
     d04:	bl	0 <ctf_import>
     d08:	ldr	x0, [sp, #64]
     d0c:	mov	w1, #0x1                   	// #1
     d10:	str	w1, [x0, #56]
     d14:	ldr	x0, [sp, #64]
     d18:	ldr	x0, [x0, #40]
     d1c:	cmp	x0, #0x0
     d20:	b.ne	d34 <ctf_link_one_input_archive_member+0x118>  // b.any
     d24:	mov	w1, #0xc                   	// #12
     d28:	ldr	x0, [sp, #40]
     d2c:	bl	0 <ctf_set_errno>
     d30:	b	dec <ctf_link_one_input_archive_member+0x1d0>
     d34:	ldr	x0, [sp, #64]
     d38:	ldr	x1, [sp, #32]
     d3c:	str	x1, [x0, #32]
     d40:	ldr	x0, [sp, #64]
     d44:	ldr	x3, [x0, #32]
     d48:	mov	x2, #0x5                   	// #5
     d4c:	adrp	x0, 0 <ctf_add_type_mapping>
     d50:	add	x1, x0, #0x0
     d54:	mov	x0, x3
     d58:	bl	0 <strncmp>
     d5c:	cmp	w0, #0x0
     d60:	b.ne	d78 <ctf_link_one_input_archive_member+0x15c>  // b.any
     d64:	ldr	x0, [sp, #64]
     d68:	ldr	x0, [x0, #32]
     d6c:	add	x1, x0, #0x5
     d70:	ldr	x0, [sp, #64]
     d74:	str	x1, [x0, #32]
     d78:	ldr	x0, [sp, #64]
     d7c:	ldr	x1, [sp, #40]
     d80:	str	x1, [x0, #16]
     d84:	ldr	x2, [sp, #64]
     d88:	adrp	x0, 0 <ctf_add_type_mapping>
     d8c:	add	x1, x0, #0x0
     d90:	ldr	x0, [sp, #40]
     d94:	bl	0 <ctf_type_iter_all>
     d98:	str	w0, [sp, #76]
     d9c:	ldr	w0, [sp, #76]
     da0:	cmp	w0, #0x0
     da4:	b.lt	dc0 <ctf_link_one_input_archive_member+0x1a4>  // b.tstop
     da8:	ldr	x2, [sp, #64]
     dac:	adrp	x0, 0 <ctf_add_type_mapping>
     db0:	add	x1, x0, #0x0
     db4:	ldr	x0, [sp, #40]
     db8:	bl	0 <ctf_variable_iter>
     dbc:	str	w0, [sp, #76]
     dc0:	ldr	x0, [sp, #64]
     dc4:	str	wzr, [x0, #56]
     dc8:	ldr	x0, [sp, #64]
     dcc:	ldr	x0, [x0, #40]
     dd0:	bl	0 <free>
     dd4:	ldr	w0, [sp, #76]
     dd8:	cmp	w0, #0x0
     ddc:	b.ge	de8 <ctf_link_one_input_archive_member+0x1cc>  // b.tcont
     de0:	mov	w0, #0xffffffff            	// #-1
     de4:	b	dec <ctf_link_one_input_archive_member+0x1d0>
     de8:	mov	w0, #0x0                   	// #0
     dec:	ldp	x29, x30, [sp], #80
     df0:	ret

0000000000000df4 <empty_link_type_mapping>:
     df4:	stp	x29, x30, [sp, #-64]!
     df8:	mov	x29, sp
     dfc:	str	x0, [sp, #40]
     e00:	str	x1, [sp, #32]
     e04:	str	x2, [sp, #24]
     e08:	ldr	x0, [sp, #32]
     e0c:	str	x0, [sp, #56]
     e10:	ldr	x0, [sp, #56]
     e14:	ldr	x0, [x0, #664]
     e18:	cmp	x0, #0x0
     e1c:	b.eq	e2c <empty_link_type_mapping+0x38>  // b.none
     e20:	ldr	x0, [sp, #56]
     e24:	ldr	x0, [x0, #664]
     e28:	bl	0 <ctf_dynhash_empty>
     e2c:	nop
     e30:	ldp	x29, x30, [sp], #64
     e34:	ret

0000000000000e38 <ctf_link_one_input_archive>:
     e38:	stp	x29, x30, [sp, #-96]!
     e3c:	mov	x29, sp
     e40:	str	x19, [sp, #16]
     e44:	str	x0, [sp, #56]
     e48:	str	x1, [sp, #48]
     e4c:	str	x2, [sp, #40]
     e50:	ldr	x0, [sp, #56]
     e54:	str	x0, [sp, #88]
     e58:	ldr	x0, [sp, #48]
     e5c:	str	x0, [sp, #80]
     e60:	ldr	x0, [sp, #40]
     e64:	str	x0, [sp, #72]
     e68:	ldr	x0, [sp, #72]
     e6c:	ldr	x1, [sp, #88]
     e70:	str	x1, [x0, #8]
     e74:	ldr	x0, [sp, #72]
     e78:	str	wzr, [x0, #48]
     e7c:	add	x0, sp, #0x44
     e80:	mov	x2, x0
     e84:	mov	x1, #0x0                   	// #0
     e88:	ldr	x0, [sp, #80]
     e8c:	bl	0 <ctf_arc_open_by_name>
     e90:	mov	x1, x0
     e94:	ldr	x0, [sp, #72]
     e98:	str	x1, [x0, #24]
     e9c:	ldr	x0, [sp, #72]
     ea0:	ldr	x0, [x0, #24]
     ea4:	cmp	x0, #0x0
     ea8:	b.ne	ee0 <ctf_link_one_input_archive+0xa8>  // b.any
     eac:	ldr	w0, [sp, #68]
     eb0:	cmp	w0, #0x415
     eb4:	b.eq	ee0 <ctf_link_one_input_archive+0xa8>  // b.none
     eb8:	ldr	x0, [sp, #72]
     ebc:	ldr	x19, [x0, #8]
     ec0:	ldr	w0, [sp, #68]
     ec4:	bl	0 <ctf_errmsg>
     ec8:	mov	x2, x0
     ecc:	mov	x1, x19
     ed0:	adrp	x0, 0 <ctf_add_type_mapping>
     ed4:	add	x0, x0, #0x0
     ed8:	bl	0 <ctf_dprintf>
     edc:	b	fcc <ctf_link_one_input_archive+0x194>
     ee0:	ldr	x0, [sp, #72]
     ee4:	ldr	x3, [x0, #24]
     ee8:	ldr	x2, [sp, #72]
     eec:	adrp	x0, 0 <_CTF_SECTION>
     ef0:	add	x1, x0, #0x0
     ef4:	mov	x0, x3
     ef8:	bl	c1c <ctf_link_one_input_archive_member>
     efc:	cmp	w0, #0x0
     f00:	b.ge	f14 <ctf_link_one_input_archive+0xdc>  // b.tcont
     f04:	ldr	x0, [sp, #72]
     f08:	ldr	x0, [x0, #24]
     f0c:	bl	0 <ctf_file_close>
     f10:	b	fcc <ctf_link_one_input_archive+0x194>
     f14:	ldr	x0, [sp, #72]
     f18:	mov	w1, #0x1                   	// #1
     f1c:	str	w1, [x0, #48]
     f20:	ldr	x2, [sp, #72]
     f24:	adrp	x0, 0 <ctf_add_type_mapping>
     f28:	add	x1, x0, #0x0
     f2c:	ldr	x0, [sp, #80]
     f30:	bl	0 <ctf_archive_iter>
     f34:	cmp	w0, #0x0
     f38:	b.ge	f6c <ctf_link_one_input_archive+0x134>  // b.tcont
     f3c:	ldr	x0, [sp, #72]
     f40:	ldr	x19, [x0, #8]
     f44:	ldr	x0, [sp, #72]
     f48:	ldr	x0, [x0]
     f4c:	bl	0 <ctf_errno>
     f50:	bl	0 <ctf_errmsg>
     f54:	mov	x2, x0
     f58:	mov	x1, x19
     f5c:	adrp	x0, 0 <ctf_add_type_mapping>
     f60:	add	x0, x0, #0x0
     f64:	bl	0 <ctf_dprintf>
     f68:	b	f7c <ctf_link_one_input_archive+0x144>
     f6c:	ldr	x0, [sp, #72]
     f70:	ldr	x0, [x0]
     f74:	mov	w1, #0x0                   	// #0
     f78:	bl	0 <ctf_set_errno>
     f7c:	ldr	x0, [sp, #72]
     f80:	ldr	x0, [x0, #24]
     f84:	bl	0 <ctf_file_close>
     f88:	ldr	x0, [sp, #72]
     f8c:	ldr	x0, [x0]
     f90:	ldr	x0, [x0, #664]
     f94:	cmp	x0, #0x0
     f98:	b.eq	fac <ctf_link_one_input_archive+0x174>  // b.none
     f9c:	ldr	x0, [sp, #72]
     fa0:	ldr	x0, [x0]
     fa4:	ldr	x0, [x0, #664]
     fa8:	bl	0 <ctf_dynhash_empty>
     fac:	ldr	x0, [sp, #72]
     fb0:	ldr	x0, [x0]
     fb4:	ldr	x3, [x0, #656]
     fb8:	mov	x2, #0x0                   	// #0
     fbc:	adrp	x0, 0 <ctf_add_type_mapping>
     fc0:	add	x1, x0, #0x0
     fc4:	mov	x0, x3
     fc8:	bl	0 <ctf_dynhash_iter>
     fcc:	ldr	x19, [sp, #16]
     fd0:	ldp	x29, x30, [sp], #96
     fd4:	ret

0000000000000fd8 <ctf_link>:
     fd8:	stp	x29, x30, [sp, #-96]!
     fdc:	mov	x29, sp
     fe0:	str	x0, [sp, #24]
     fe4:	str	w1, [sp, #20]
     fe8:	add	x0, sp, #0x20
     fec:	mov	x2, #0x40                  	// #64
     ff0:	mov	w1, #0x0                   	// #0
     ff4:	bl	0 <memset>
     ff8:	ldr	x0, [sp, #24]
     ffc:	str	x0, [sp, #32]
    1000:	ldr	w0, [sp, #20]
    1004:	str	w0, [sp, #84]
    1008:	ldr	x0, [sp, #24]
    100c:	ldr	x0, [x0, #648]
    1010:	cmp	x0, #0x0
    1014:	b.ne	1020 <ctf_link+0x48>  // b.any
    1018:	mov	w0, #0x0                   	// #0
    101c:	b	10bc <ctf_link+0xe4>
    1020:	ldr	x0, [sp, #24]
    1024:	ldr	x0, [x0, #656]
    1028:	cmp	x0, #0x0
    102c:	b.ne	1060 <ctf_link+0x88>  // b.any
    1030:	adrp	x0, 0 <ctf_add_type_mapping>
    1034:	add	x3, x0, #0x0
    1038:	adrp	x0, 0 <free>
    103c:	add	x2, x0, #0x0
    1040:	adrp	x0, 0 <ctf_hash_eq_string>
    1044:	add	x1, x0, #0x0
    1048:	adrp	x0, 0 <ctf_hash_string>
    104c:	add	x0, x0, #0x0
    1050:	bl	0 <ctf_dynhash_create>
    1054:	mov	x1, x0
    1058:	ldr	x0, [sp, #24]
    105c:	str	x1, [x0, #656]
    1060:	ldr	x0, [sp, #24]
    1064:	ldr	x0, [x0, #656]
    1068:	cmp	x0, #0x0
    106c:	b.ne	1080 <ctf_link+0xa8>  // b.any
    1070:	mov	w1, #0xc                   	// #12
    1074:	ldr	x0, [sp, #24]
    1078:	bl	0 <ctf_set_errno>
    107c:	b	10bc <ctf_link+0xe4>
    1080:	ldr	x0, [sp, #24]
    1084:	ldr	x3, [x0, #648]
    1088:	add	x0, sp, #0x20
    108c:	mov	x2, x0
    1090:	adrp	x0, 0 <ctf_add_type_mapping>
    1094:	add	x1, x0, #0x0
    1098:	mov	x0, x3
    109c:	bl	0 <ctf_dynhash_iter>
    10a0:	ldr	x0, [sp, #24]
    10a4:	bl	0 <ctf_errno>
    10a8:	cmp	w0, #0x0
    10ac:	b.eq	10b8 <ctf_link+0xe0>  // b.none
    10b0:	mov	w0, #0xffffffff            	// #-1
    10b4:	b	10bc <ctf_link+0xe4>
    10b8:	mov	w0, #0x0                   	// #0
    10bc:	ldp	x29, x30, [sp], #96
    10c0:	ret

00000000000010c4 <ctf_link_intern_extern_string>:
    10c4:	stp	x29, x30, [sp, #-64]!
    10c8:	mov	x29, sp
    10cc:	str	x0, [sp, #40]
    10d0:	str	x1, [sp, #32]
    10d4:	str	x2, [sp, #24]
    10d8:	ldr	x0, [sp, #32]
    10dc:	str	x0, [sp, #56]
    10e0:	ldr	x0, [sp, #24]
    10e4:	str	x0, [sp, #48]
    10e8:	ldr	x0, [sp, #56]
    10ec:	ldr	w0, [x0, #552]
    10f0:	orr	w1, w0, #0x4
    10f4:	ldr	x0, [sp, #56]
    10f8:	str	w1, [x0, #552]
    10fc:	ldr	x0, [sp, #48]
    1100:	ldr	x1, [x0]
    1104:	ldr	x0, [sp, #48]
    1108:	ldr	w0, [x0, #8]
    110c:	mov	w2, w0
    1110:	ldr	x0, [sp, #56]
    1114:	bl	0 <ctf_str_add_external>
    1118:	cmp	w0, #0x0
    111c:	b.ne	112c <ctf_link_intern_extern_string+0x68>  // b.any
    1120:	ldr	x0, [sp, #48]
    1124:	mov	w1, #0xc                   	// #12
    1128:	str	w1, [x0, #12]
    112c:	nop
    1130:	ldp	x29, x30, [sp], #64
    1134:	ret

0000000000001138 <ctf_link_add_strtab>:
    1138:	stp	x29, x30, [sp, #-96]!
    113c:	mov	x29, sp
    1140:	str	x0, [sp, #40]
    1144:	str	x1, [sp, #32]
    1148:	str	x2, [sp, #24]
    114c:	str	wzr, [sp, #92]
    1150:	b	11d4 <ctf_link_add_strtab+0x9c>
    1154:	ldr	x0, [sp, #80]
    1158:	str	x0, [sp, #56]
    115c:	ldr	w0, [sp, #76]
    1160:	str	w0, [sp, #64]
    1164:	str	wzr, [sp, #68]
    1168:	ldr	x0, [sp, #40]
    116c:	ldr	w0, [x0, #552]
    1170:	orr	w1, w0, #0x4
    1174:	ldr	x0, [sp, #40]
    1178:	str	w1, [x0, #552]
    117c:	ldr	w0, [sp, #76]
    1180:	mov	w2, w0
    1184:	ldr	x1, [sp, #80]
    1188:	ldr	x0, [sp, #40]
    118c:	bl	0 <ctf_str_add_external>
    1190:	cmp	w0, #0x0
    1194:	b.ne	11a0 <ctf_link_add_strtab+0x68>  // b.any
    1198:	mov	w0, #0xc                   	// #12
    119c:	str	w0, [sp, #92]
    11a0:	ldr	x0, [sp, #40]
    11a4:	ldr	x3, [x0, #656]
    11a8:	add	x0, sp, #0x38
    11ac:	mov	x2, x0
    11b0:	adrp	x0, 0 <ctf_add_type_mapping>
    11b4:	add	x1, x0, #0x0
    11b8:	mov	x0, x3
    11bc:	bl	0 <ctf_dynhash_iter>
    11c0:	ldr	w0, [sp, #68]
    11c4:	cmp	w0, #0x0
    11c8:	b.eq	11d4 <ctf_link_add_strtab+0x9c>  // b.none
    11cc:	ldr	w0, [sp, #68]
    11d0:	str	w0, [sp, #92]
    11d4:	add	x0, sp, #0x4c
    11d8:	ldr	x2, [sp, #32]
    11dc:	ldr	x1, [sp, #24]
    11e0:	blr	x2
    11e4:	str	x0, [sp, #80]
    11e8:	ldr	x0, [sp, #80]
    11ec:	cmp	x0, #0x0
    11f0:	b.ne	1154 <ctf_link_add_strtab+0x1c>  // b.any
    11f4:	ldr	w0, [sp, #92]
    11f8:	neg	w0, w0
    11fc:	ldp	x29, x30, [sp], #96
    1200:	ret

0000000000001204 <ctf_link_shuffle_syms>:
    1204:	sub	sp, sp, #0x20
    1208:	str	x0, [sp, #24]
    120c:	str	x1, [sp, #16]
    1210:	str	x2, [sp, #8]
    1214:	mov	w0, #0x0                   	// #0
    1218:	add	sp, sp, #0x20
    121c:	ret

0000000000001220 <ctf_accumulate_archive_names>:
    1220:	stp	x29, x30, [sp, #-112]!
    1224:	mov	x29, sp
    1228:	str	x0, [sp, #40]
    122c:	str	x1, [sp, #32]
    1230:	str	x2, [sp, #24]
    1234:	ldr	x0, [sp, #40]
    1238:	str	x0, [sp, #104]
    123c:	ldr	x0, [sp, #32]
    1240:	str	x0, [sp, #96]
    1244:	ldr	x0, [sp, #24]
    1248:	str	x0, [sp, #88]
    124c:	ldr	x0, [sp, #88]
    1250:	ldr	x2, [x0]
    1254:	ldr	x0, [sp, #88]
    1258:	ldr	x0, [x0, #24]
    125c:	add	x1, x0, #0x1
    1260:	ldr	x0, [sp, #88]
    1264:	str	x1, [x0, #24]
    1268:	ldr	x0, [sp, #88]
    126c:	ldr	x0, [x0, #24]
    1270:	lsl	x0, x0, #3
    1274:	mov	x1, x0
    1278:	mov	x0, x2
    127c:	bl	0 <realloc>
    1280:	str	x0, [sp, #80]
    1284:	ldr	x0, [sp, #80]
    1288:	cmp	x0, #0x0
    128c:	b.ne	12b8 <ctf_accumulate_archive_names+0x98>  // b.any
    1290:	ldr	x0, [sp, #88]
    1294:	ldr	x0, [x0, #24]
    1298:	sub	x1, x0, #0x1
    129c:	ldr	x0, [sp, #88]
    12a0:	str	x1, [x0, #24]
    12a4:	ldr	x0, [sp, #88]
    12a8:	ldr	x0, [x0, #8]
    12ac:	mov	w1, #0xc                   	// #12
    12b0:	bl	0 <ctf_set_errno>
    12b4:	b	1434 <ctf_accumulate_archive_names+0x214>
    12b8:	ldr	x0, [sp, #88]
    12bc:	ldr	x2, [x0, #16]
    12c0:	ldr	x0, [sp, #88]
    12c4:	ldr	x0, [x0, #24]
    12c8:	lsl	x0, x0, #3
    12cc:	mov	x1, x0
    12d0:	mov	x0, x2
    12d4:	bl	0 <realloc>
    12d8:	str	x0, [sp, #72]
    12dc:	ldr	x0, [sp, #72]
    12e0:	cmp	x0, #0x0
    12e4:	b.ne	1310 <ctf_accumulate_archive_names+0xf0>  // b.any
    12e8:	ldr	x0, [sp, #88]
    12ec:	ldr	x0, [x0, #24]
    12f0:	sub	x1, x0, #0x1
    12f4:	ldr	x0, [sp, #88]
    12f8:	str	x1, [x0, #24]
    12fc:	ldr	x0, [sp, #88]
    1300:	ldr	x0, [x0, #8]
    1304:	mov	w1, #0xc                   	// #12
    1308:	bl	0 <ctf_set_errno>
    130c:	b	1434 <ctf_accumulate_archive_names+0x214>
    1310:	ldr	x0, [sp, #96]
    1314:	ldr	x0, [x0, #680]
    1318:	cmp	x0, #0x0
    131c:	b.eq	13d4 <ctf_accumulate_archive_names+0x1b4>  // b.none
    1320:	ldr	x0, [sp, #96]
    1324:	ldr	x0, [x0, #688]
    1328:	str	x0, [sp, #64]
    132c:	ldr	x0, [sp, #96]
    1330:	ldr	x3, [x0, #680]
    1334:	ldr	x2, [sp, #64]
    1338:	ldr	x1, [sp, #104]
    133c:	ldr	x0, [sp, #96]
    1340:	blr	x3
    1344:	str	x0, [sp, #56]
    1348:	ldr	x0, [sp, #56]
    134c:	cmp	x0, #0x0
    1350:	b.eq	13d4 <ctf_accumulate_archive_names+0x1b4>  // b.none
    1354:	ldr	x0, [sp, #88]
    1358:	ldr	x2, [x0, #32]
    135c:	ldr	x0, [sp, #88]
    1360:	ldr	x0, [x0, #40]
    1364:	add	x1, x0, #0x1
    1368:	ldr	x0, [sp, #88]
    136c:	str	x1, [x0, #40]
    1370:	ldr	x0, [sp, #88]
    1374:	ldr	x0, [x0, #40]
    1378:	lsl	x0, x0, #3
    137c:	mov	x1, x0
    1380:	mov	x0, x2
    1384:	bl	0 <realloc>
    1388:	str	x0, [sp, #48]
    138c:	ldr	x0, [sp, #48]
    1390:	cmp	x0, #0x0
    1394:	b.ne	13c0 <ctf_accumulate_archive_names+0x1a0>  // b.any
    1398:	ldr	x0, [sp, #88]
    139c:	ldr	x0, [x0, #40]
    13a0:	sub	x1, x0, #0x1
    13a4:	ldr	x0, [sp, #88]
    13a8:	str	x1, [x0, #40]
    13ac:	ldr	x0, [sp, #88]
    13b0:	ldr	x0, [x0, #8]
    13b4:	mov	w1, #0xc                   	// #12
    13b8:	bl	0 <ctf_set_errno>
    13bc:	b	1434 <ctf_accumulate_archive_names+0x214>
    13c0:	ldr	x0, [sp, #88]
    13c4:	ldr	x1, [sp, #48]
    13c8:	str	x1, [x0, #32]
    13cc:	ldr	x0, [sp, #56]
    13d0:	str	x0, [sp, #104]
    13d4:	ldr	x0, [sp, #88]
    13d8:	ldr	x1, [sp, #80]
    13dc:	str	x1, [x0]
    13e0:	ldr	x0, [sp, #88]
    13e4:	ldr	x1, [x0]
    13e8:	ldr	x0, [sp, #88]
    13ec:	ldr	x0, [x0, #24]
    13f0:	lsl	x0, x0, #3
    13f4:	sub	x0, x0, #0x8
    13f8:	add	x0, x1, x0
    13fc:	ldr	x1, [sp, #104]
    1400:	str	x1, [x0]
    1404:	ldr	x0, [sp, #88]
    1408:	ldr	x1, [sp, #72]
    140c:	str	x1, [x0, #16]
    1410:	ldr	x0, [sp, #88]
    1414:	ldr	x1, [x0, #16]
    1418:	ldr	x0, [sp, #88]
    141c:	ldr	x0, [x0, #24]
    1420:	lsl	x0, x0, #3
    1424:	sub	x0, x0, #0x8
    1428:	add	x0, x1, x0
    142c:	ldr	x1, [sp, #96]
    1430:	str	x1, [x0]
    1434:	ldp	x29, x30, [sp], #112
    1438:	ret

000000000000143c <ctf_change_parent_name>:
    143c:	stp	x29, x30, [sp, #-64]!
    1440:	mov	x29, sp
    1444:	str	x0, [sp, #40]
    1448:	str	x1, [sp, #32]
    144c:	str	x2, [sp, #24]
    1450:	ldr	x0, [sp, #32]
    1454:	str	x0, [sp, #56]
    1458:	ldr	x0, [sp, #24]
    145c:	str	x0, [sp, #48]
    1460:	ldr	x1, [sp, #48]
    1464:	ldr	x0, [sp, #56]
    1468:	bl	0 <ctf_parent_name_set>
    146c:	nop
    1470:	ldp	x29, x30, [sp], #64
    1474:	ret

0000000000001478 <ctf_link_write>:
    1478:	stp	x29, x30, [sp, #-192]!
    147c:	mov	x29, sp
    1480:	str	x0, [sp, #40]
    1484:	str	x1, [sp, #32]
    1488:	str	x2, [sp, #24]
    148c:	str	xzr, [sp, #184]
    1490:	str	xzr, [sp, #176]
    1494:	str	xzr, [sp, #160]
    1498:	add	x0, sp, #0x38
    149c:	mov	x2, #0x30                  	// #48
    14a0:	mov	w1, #0x0                   	// #0
    14a4:	bl	0 <memset>
    14a8:	ldr	x0, [sp, #40]
    14ac:	str	x0, [sp, #64]
    14b0:	ldr	x0, [sp, #40]
    14b4:	ldr	x0, [x0, #656]
    14b8:	cmp	x0, #0x0
    14bc:	b.eq	1500 <ctf_link_write+0x88>  // b.none
    14c0:	ldr	x0, [sp, #40]
    14c4:	ldr	x3, [x0, #656]
    14c8:	add	x0, sp, #0x38
    14cc:	mov	x2, x0
    14d0:	adrp	x0, 0 <ctf_add_type_mapping>
    14d4:	add	x1, x0, #0x0
    14d8:	mov	x0, x3
    14dc:	bl	0 <ctf_dynhash_iter>
    14e0:	ldr	x0, [sp, #40]
    14e4:	bl	0 <ctf_errno>
    14e8:	cmp	w0, #0x0
    14ec:	b.ge	1500 <ctf_link_write+0x88>  // b.tcont
    14f0:	adrp	x0, 0 <ctf_add_type_mapping>
    14f4:	add	x0, x0, #0x0
    14f8:	str	x0, [sp, #168]
    14fc:	b	1874 <ctf_link_write+0x3fc>
    1500:	ldr	x0, [sp, #80]
    1504:	cmp	x0, #0x0
    1508:	b.ne	1520 <ctf_link_write+0xa8>  // b.any
    150c:	ldr	x2, [sp, #24]
    1510:	ldr	x1, [sp, #32]
    1514:	ldr	x0, [sp, #40]
    1518:	bl	0 <ctf_write_mem>
    151c:	b	191c <ctf_link_write+0x4a4>
    1520:	ldr	x2, [sp, #56]
    1524:	ldr	x0, [sp, #80]
    1528:	add	x0, x0, #0x1
    152c:	lsl	x0, x0, #3
    1530:	mov	x1, x0
    1534:	mov	x0, x2
    1538:	bl	0 <realloc>
    153c:	str	x0, [sp, #136]
    1540:	ldr	x0, [sp, #136]
    1544:	cmp	x0, #0x0
    1548:	b.ne	155c <ctf_link_write+0xe4>  // b.any
    154c:	adrp	x0, 0 <ctf_add_type_mapping>
    1550:	add	x0, x0, #0x0
    1554:	str	x0, [sp, #168]
    1558:	b	1860 <ctf_link_write+0x3e8>
    155c:	ldr	x0, [sp, #136]
    1560:	str	x0, [sp, #56]
    1564:	ldr	x0, [sp, #56]
    1568:	add	x3, x0, #0x8
    156c:	ldr	x1, [sp, #56]
    1570:	ldr	x0, [sp, #80]
    1574:	lsl	x0, x0, #3
    1578:	mov	x2, x0
    157c:	mov	x0, x3
    1580:	bl	0 <memmove>
    1584:	ldr	x0, [sp, #56]
    1588:	adrp	x1, 0 <_CTF_SECTION>
    158c:	add	x1, x1, #0x0
    1590:	str	x1, [x0]
    1594:	ldr	x0, [sp, #40]
    1598:	ldr	x0, [x0, #680]
    159c:	cmp	x0, #0x0
    15a0:	b.eq	1604 <ctf_link_write+0x18c>  // b.none
    15a4:	ldr	x0, [sp, #40]
    15a8:	ldr	x0, [x0, #688]
    15ac:	str	x0, [sp, #128]
    15b0:	ldr	x0, [sp, #40]
    15b4:	ldr	x3, [x0, #680]
    15b8:	ldr	x2, [sp, #128]
    15bc:	adrp	x0, 0 <_CTF_SECTION>
    15c0:	add	x1, x0, #0x0
    15c4:	ldr	x0, [sp, #40]
    15c8:	blr	x3
    15cc:	str	x0, [sp, #184]
    15d0:	ldr	x0, [sp, #184]
    15d4:	cmp	x0, #0x0
    15d8:	b.eq	1604 <ctf_link_write+0x18c>  // b.none
    15dc:	ldr	x0, [sp, #56]
    15e0:	ldr	x1, [sp, #184]
    15e4:	str	x1, [x0]
    15e8:	ldr	x0, [sp, #40]
    15ec:	ldr	x3, [x0, #656]
    15f0:	ldr	x2, [sp, #184]
    15f4:	adrp	x0, 0 <ctf_add_type_mapping>
    15f8:	add	x1, x0, #0x0
    15fc:	mov	x0, x3
    1600:	bl	0 <ctf_dynhash_iter>
    1604:	ldr	x2, [sp, #72]
    1608:	ldr	x0, [sp, #80]
    160c:	add	x0, x0, #0x1
    1610:	lsl	x0, x0, #3
    1614:	mov	x1, x0
    1618:	mov	x0, x2
    161c:	bl	0 <realloc>
    1620:	str	x0, [sp, #120]
    1624:	ldr	x0, [sp, #120]
    1628:	cmp	x0, #0x0
    162c:	b.ne	1640 <ctf_link_write+0x1c8>  // b.any
    1630:	adrp	x0, 0 <ctf_add_type_mapping>
    1634:	add	x0, x0, #0x0
    1638:	str	x0, [sp, #168]
    163c:	b	1860 <ctf_link_write+0x3e8>
    1640:	ldr	x0, [sp, #120]
    1644:	str	x0, [sp, #72]
    1648:	ldr	x0, [sp, #72]
    164c:	add	x3, x0, #0x8
    1650:	ldr	x1, [sp, #72]
    1654:	ldr	x0, [sp, #80]
    1658:	lsl	x0, x0, #3
    165c:	mov	x2, x0
    1660:	mov	x0, x3
    1664:	bl	0 <memmove>
    1668:	ldr	x0, [sp, #72]
    166c:	ldr	x1, [sp, #40]
    1670:	str	x1, [x0]
    1674:	bl	0 <tmpfile>
    1678:	str	x0, [sp, #176]
    167c:	ldr	x0, [sp, #176]
    1680:	cmp	x0, #0x0
    1684:	b.ne	1698 <ctf_link_write+0x220>  // b.any
    1688:	adrp	x0, 0 <ctf_add_type_mapping>
    168c:	add	x0, x0, #0x0
    1690:	str	x0, [sp, #168]
    1694:	b	1860 <ctf_link_write+0x3e8>
    1698:	ldr	x0, [sp, #176]
    169c:	bl	0 <fileno>
    16a0:	mov	w5, w0
    16a4:	ldr	x1, [sp, #72]
    16a8:	ldr	x0, [sp, #80]
    16ac:	add	x0, x0, #0x1
    16b0:	ldr	x2, [sp, #56]
    16b4:	ldr	x4, [sp, #24]
    16b8:	mov	x3, x2
    16bc:	mov	x2, x0
    16c0:	mov	w0, w5
    16c4:	bl	0 <ctf_arc_write_fd>
    16c8:	str	w0, [sp, #116]
    16cc:	ldr	w0, [sp, #116]
    16d0:	cmp	w0, #0x0
    16d4:	b.ge	16f4 <ctf_link_write+0x27c>  // b.tcont
    16d8:	adrp	x0, 0 <ctf_add_type_mapping>
    16dc:	add	x0, x0, #0x0
    16e0:	str	x0, [sp, #168]
    16e4:	ldr	w1, [sp, #116]
    16e8:	ldr	x0, [sp, #40]
    16ec:	bl	0 <ctf_set_errno>
    16f0:	b	1874 <ctf_link_write+0x3fc>
    16f4:	mov	w2, #0x2                   	// #2
    16f8:	mov	x1, #0x0                   	// #0
    16fc:	ldr	x0, [sp, #176]
    1700:	bl	0 <fseek>
    1704:	cmp	w0, #0x0
    1708:	b.ge	171c <ctf_link_write+0x2a4>  // b.tcont
    170c:	adrp	x0, 0 <ctf_add_type_mapping>
    1710:	add	x0, x0, #0x0
    1714:	str	x0, [sp, #168]
    1718:	b	1860 <ctf_link_write+0x3e8>
    171c:	ldr	x0, [sp, #176]
    1720:	bl	0 <ftell>
    1724:	str	x0, [sp, #104]
    1728:	ldr	x0, [sp, #104]
    172c:	cmp	x0, #0x0
    1730:	b.ge	1744 <ctf_link_write+0x2cc>  // b.tcont
    1734:	adrp	x0, 0 <ctf_add_type_mapping>
    1738:	add	x0, x0, #0x0
    173c:	str	x0, [sp, #168]
    1740:	b	1860 <ctf_link_write+0x3e8>
    1744:	mov	w2, #0x0                   	// #0
    1748:	mov	x1, #0x0                   	// #0
    174c:	ldr	x0, [sp, #176]
    1750:	bl	0 <fseek>
    1754:	cmp	w0, #0x0
    1758:	b.ge	176c <ctf_link_write+0x2f4>  // b.tcont
    175c:	adrp	x0, 0 <ctf_add_type_mapping>
    1760:	add	x0, x0, #0x0
    1764:	str	x0, [sp, #168]
    1768:	b	1860 <ctf_link_write+0x3e8>
    176c:	ldr	x0, [sp, #104]
    1770:	bl	0 <malloc>
    1774:	str	x0, [sp, #160]
    1778:	ldr	x0, [sp, #160]
    177c:	cmp	x0, #0x0
    1780:	b.ne	17b4 <ctf_link_write+0x33c>  // b.any
    1784:	adrp	x0, 0 <ctf_add_type_mapping>
    1788:	add	x0, x0, #0x0
    178c:	str	x0, [sp, #168]
    1790:	b	1860 <ctf_link_write+0x3e8>
    1794:	ldr	x0, [sp, #176]
    1798:	bl	0 <ferror>
    179c:	cmp	w0, #0x0
    17a0:	b.eq	17b4 <ctf_link_write+0x33c>  // b.none
    17a4:	adrp	x0, 0 <ctf_add_type_mapping>
    17a8:	add	x0, x0, #0x0
    17ac:	str	x0, [sp, #168]
    17b0:	b	1860 <ctf_link_write+0x3e8>
    17b4:	ldr	x0, [sp, #176]
    17b8:	bl	0 <feof>
    17bc:	cmp	w0, #0x0
    17c0:	b.ne	17e4 <ctf_link_write+0x36c>  // b.any
    17c4:	ldr	x0, [sp, #104]
    17c8:	ldr	x3, [sp, #176]
    17cc:	mov	x2, #0x1                   	// #1
    17d0:	mov	x1, x0
    17d4:	ldr	x0, [sp, #160]
    17d8:	bl	0 <fread>
    17dc:	cmp	x0, #0x0
    17e0:	b.eq	1794 <ctf_link_write+0x31c>  // b.none
    17e4:	ldr	x1, [sp, #104]
    17e8:	ldr	x0, [sp, #32]
    17ec:	str	x1, [x0]
    17f0:	ldr	x0, [sp, #56]
    17f4:	bl	0 <free>
    17f8:	ldr	x0, [sp, #72]
    17fc:	bl	0 <free>
    1800:	ldr	x0, [sp, #184]
    1804:	bl	0 <free>
    1808:	ldr	x0, [sp, #96]
    180c:	cmp	x0, #0x0
    1810:	b.eq	1858 <ctf_link_write+0x3e0>  // b.none
    1814:	str	xzr, [sp, #152]
    1818:	b	1840 <ctf_link_write+0x3c8>
    181c:	ldr	x1, [sp, #88]
    1820:	ldr	x0, [sp, #152]
    1824:	lsl	x0, x0, #3
    1828:	add	x0, x1, x0
    182c:	ldr	x0, [x0]
    1830:	bl	0 <free>
    1834:	ldr	x0, [sp, #152]
    1838:	add	x0, x0, #0x1
    183c:	str	x0, [sp, #152]
    1840:	ldr	x0, [sp, #96]
    1844:	ldr	x1, [sp, #152]
    1848:	cmp	x1, x0
    184c:	b.cc	181c <ctf_link_write+0x3a4>  // b.lo, b.ul, b.last
    1850:	ldr	x0, [sp, #88]
    1854:	bl	0 <free>
    1858:	ldr	x0, [sp, #160]
    185c:	b	191c <ctf_link_write+0x4a4>
    1860:	bl	0 <__errno_location>
    1864:	ldr	w0, [x0]
    1868:	mov	w1, w0
    186c:	ldr	x0, [sp, #40]
    1870:	bl	0 <ctf_set_errno>
    1874:	ldr	x0, [sp, #160]
    1878:	bl	0 <free>
    187c:	ldr	x0, [sp, #176]
    1880:	cmp	x0, #0x0
    1884:	b.eq	1890 <ctf_link_write+0x418>  // b.none
    1888:	ldr	x0, [sp, #176]
    188c:	bl	0 <fclose>
    1890:	ldr	x0, [sp, #56]
    1894:	bl	0 <free>
    1898:	ldr	x0, [sp, #72]
    189c:	bl	0 <free>
    18a0:	ldr	x0, [sp, #184]
    18a4:	bl	0 <free>
    18a8:	ldr	x0, [sp, #96]
    18ac:	cmp	x0, #0x0
    18b0:	b.eq	18f8 <ctf_link_write+0x480>  // b.none
    18b4:	str	xzr, [sp, #144]
    18b8:	b	18e0 <ctf_link_write+0x468>
    18bc:	ldr	x1, [sp, #88]
    18c0:	ldr	x0, [sp, #144]
    18c4:	lsl	x0, x0, #3
    18c8:	add	x0, x1, x0
    18cc:	ldr	x0, [x0]
    18d0:	bl	0 <free>
    18d4:	ldr	x0, [sp, #144]
    18d8:	add	x0, x0, #0x1
    18dc:	str	x0, [sp, #144]
    18e0:	ldr	x0, [sp, #96]
    18e4:	ldr	x1, [sp, #144]
    18e8:	cmp	x1, x0
    18ec:	b.cc	18bc <ctf_link_write+0x444>  // b.lo, b.ul, b.last
    18f0:	ldr	x0, [sp, #88]
    18f4:	bl	0 <free>
    18f8:	ldr	x0, [sp, #40]
    18fc:	bl	0 <ctf_errno>
    1900:	bl	0 <ctf_errmsg>
    1904:	mov	x2, x0
    1908:	ldr	x1, [sp, #168]
    190c:	adrp	x0, 0 <ctf_add_type_mapping>
    1910:	add	x0, x0, #0x0
    1914:	bl	0 <ctf_dprintf>
    1918:	mov	x0, #0x0                   	// #0
    191c:	ldp	x29, x30, [sp], #192
    1920:	ret

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <isqualifier>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	sub	x0, x0, #0x1
  18:	ldr	x1, [sp, #24]
  1c:	add	x0, x1, x0
  20:	ldrb	w0, [x0]
  24:	mov	w1, w0
  28:	ldr	x0, [sp, #16]
  2c:	add	w0, w1, w0
  30:	sub	w0, w0, #0x69
  34:	str	w0, [sp, #44]
  38:	ldrsw	x0, [sp, #44]
  3c:	lsl	x1, x0, #4
  40:	adrp	x0, 0 <isqualifier>
  44:	add	x0, x0, #0x0
  48:	add	x0, x1, x0
  4c:	str	x0, [sp, #32]
  50:	ldr	w0, [sp, #44]
  54:	cmp	w0, #0x0
  58:	b.lt	ac <isqualifier+0xac>  // b.tstop
  5c:	ldr	w0, [sp, #44]
  60:	cmp	w0, #0x14
  64:	b.hi	ac <isqualifier+0xac>  // b.pmore
  68:	ldr	x0, [sp, #32]
  6c:	ldr	x0, [x0, #8]
  70:	ldr	x1, [sp, #16]
  74:	cmp	x1, x0
  78:	b.ne	ac <isqualifier+0xac>  // b.any
  7c:	ldr	x0, [sp, #32]
  80:	ldr	x3, [x0]
  84:	ldr	x0, [sp, #32]
  88:	ldr	x0, [x0, #8]
  8c:	mov	x2, x0
  90:	ldr	x1, [sp, #24]
  94:	mov	x0, x3
  98:	bl	0 <strncmp>
  9c:	cmp	w0, #0x0
  a0:	b.ne	ac <isqualifier+0xac>  // b.any
  a4:	mov	w0, #0x1                   	// #1
  a8:	b	b0 <isqualifier+0xb0>
  ac:	mov	w0, #0x0                   	// #0
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

00000000000000b8 <ctf_lookup_by_name>:
  b8:	stp	x29, x30, [sp, #-96]!
  bc:	mov	x29, sp
  c0:	str	x0, [sp, #24]
  c4:	str	x1, [sp, #16]
  c8:	str	xzr, [sp, #64]
  cc:	ldr	x0, [sp, #16]
  d0:	cmp	x0, #0x0
  d4:	b.ne	e8 <ctf_lookup_by_name+0x30>  // b.any
  d8:	mov	w1, #0x16                  	// #22
  dc:	ldr	x0, [sp, #24]
  e0:	bl	0 <ctf_set_errno>
  e4:	b	590 <ctf_lookup_by_name+0x4d8>
  e8:	ldr	x0, [sp, #16]
  ec:	str	x0, [sp, #80]
  f0:	ldr	x0, [sp, #16]
  f4:	bl	0 <strlen>
  f8:	mov	x1, x0
  fc:	ldr	x0, [sp, #16]
 100:	add	x0, x0, x1
 104:	str	x0, [sp, #48]
 108:	b	508 <ctf_lookup_by_name+0x450>
 10c:	ldr	x0, [sp, #80]
 110:	add	x0, x0, #0x1
 114:	str	x0, [sp, #80]
 118:	bl	0 <__ctype_b_loc>
 11c:	ldr	x1, [x0]
 120:	ldr	x0, [sp, #80]
 124:	ldrb	w0, [x0]
 128:	and	x0, x0, #0xff
 12c:	lsl	x0, x0, #1
 130:	add	x0, x1, x0
 134:	ldrh	w0, [x0]
 138:	and	w0, w0, #0x2000
 13c:	cmp	w0, #0x0
 140:	b.ne	10c <ctf_lookup_by_name+0x54>  // b.any
 144:	ldr	x1, [sp, #80]
 148:	ldr	x0, [sp, #48]
 14c:	cmp	x1, x0
 150:	b.eq	51c <ctf_lookup_by_name+0x464>  // b.none
 154:	ldr	x0, [sp, #80]
 158:	add	x2, x0, #0x1
 15c:	adrp	x0, 0 <isqualifier>
 160:	add	x1, x0, #0x0
 164:	mov	x0, x2
 168:	bl	0 <strpbrk>
 16c:	str	x0, [sp, #72]
 170:	ldr	x0, [sp, #72]
 174:	cmp	x0, #0x0
 178:	b.ne	184 <ctf_lookup_by_name+0xcc>  // b.any
 17c:	ldr	x0, [sp, #48]
 180:	str	x0, [sp, #72]
 184:	ldr	x0, [sp, #80]
 188:	ldrb	w0, [x0]
 18c:	cmp	w0, #0x2a
 190:	b.ne	280 <ctf_lookup_by_name+0x1c8>  // b.any
 194:	ldr	x0, [sp, #24]
 198:	ldr	x1, [x0, #448]
 19c:	ldr	x0, [sp, #24]
 1a0:	ldr	w0, [x0, #544]
 1a4:	mov	w2, w0
 1a8:	ldr	x0, [sp, #64]
 1ac:	and	x0, x2, x0
 1b0:	lsl	x0, x0, #2
 1b4:	add	x0, x1, x0
 1b8:	ldr	w0, [x0]
 1bc:	mov	w0, w0
 1c0:	str	x0, [sp, #56]
 1c4:	ldr	x0, [sp, #56]
 1c8:	cmp	x0, #0x0
 1cc:	b.ne	238 <ctf_lookup_by_name+0x180>  // b.any
 1d0:	ldr	x1, [sp, #64]
 1d4:	ldr	x0, [sp, #24]
 1d8:	bl	0 <ctf_type_resolve_unsliced>
 1dc:	str	x0, [sp, #56]
 1e0:	ldr	x0, [sp, #56]
 1e4:	cmn	x0, #0x1
 1e8:	b.eq	228 <ctf_lookup_by_name+0x170>  // b.none
 1ec:	ldr	x0, [sp, #24]
 1f0:	ldr	x1, [x0, #448]
 1f4:	ldr	x0, [sp, #24]
 1f8:	ldr	w0, [x0, #544]
 1fc:	mov	w2, w0
 200:	ldr	x0, [sp, #56]
 204:	and	x0, x2, x0
 208:	lsl	x0, x0, #2
 20c:	add	x0, x1, x0
 210:	ldr	w0, [x0]
 214:	mov	w0, w0
 218:	str	x0, [sp, #56]
 21c:	ldr	x0, [sp, #56]
 220:	cmp	x0, #0x0
 224:	b.ne	238 <ctf_lookup_by_name+0x180>  // b.any
 228:	mov	w1, #0x402                 	// #1026
 22c:	ldr	x0, [sp, #24]
 230:	bl	0 <ctf_set_errno>
 234:	b	554 <ctf_lookup_by_name+0x49c>
 238:	ldr	x0, [sp, #24]
 23c:	ldr	w0, [x0, #552]
 240:	and	w0, w0, #0x1
 244:	cmp	w0, #0x0
 248:	b.eq	268 <ctf_lookup_by_name+0x1b0>  // b.none
 24c:	ldr	x0, [sp, #24]
 250:	ldr	w0, [x0, #544]
 254:	add	w0, w0, #0x1
 258:	mov	w1, w0
 25c:	ldr	x0, [sp, #56]
 260:	orr	x0, x1, x0
 264:	b	26c <ctf_lookup_by_name+0x1b4>
 268:	ldr	x0, [sp, #56]
 26c:	str	x0, [sp, #64]
 270:	ldr	x0, [sp, #80]
 274:	add	x0, x0, #0x1
 278:	str	x0, [sp, #72]
 27c:	b	500 <ctf_lookup_by_name+0x448>
 280:	ldr	x1, [sp, #72]
 284:	ldr	x0, [sp, #80]
 288:	sub	x0, x1, x0
 28c:	mov	x1, x0
 290:	ldr	x0, [sp, #80]
 294:	bl	0 <isqualifier>
 298:	cmp	w0, #0x0
 29c:	b.ne	4fc <ctf_lookup_by_name+0x444>  // b.any
 2a0:	ldr	x0, [sp, #24]
 2a4:	add	x0, x0, #0xd8
 2a8:	str	x0, [sp, #88]
 2ac:	b	4c4 <ctf_lookup_by_name+0x40c>
 2b0:	ldr	x0, [sp, #88]
 2b4:	ldr	x0, [x0]
 2b8:	ldrb	w0, [x0]
 2bc:	cmp	w0, #0x0
 2c0:	b.eq	2f0 <ctf_lookup_by_name+0x238>  // b.none
 2c4:	ldr	x0, [sp, #88]
 2c8:	ldr	x3, [x0]
 2cc:	ldr	x1, [sp, #72]
 2d0:	ldr	x0, [sp, #80]
 2d4:	sub	x0, x1, x0
 2d8:	mov	x2, x0
 2dc:	mov	x1, x3
 2e0:	ldr	x0, [sp, #80]
 2e4:	bl	0 <strncmp>
 2e8:	cmp	w0, #0x0
 2ec:	b.ne	4b8 <ctf_lookup_by_name+0x400>  // b.any
 2f0:	ldr	x1, [sp, #72]
 2f4:	ldr	x0, [sp, #80]
 2f8:	sub	x0, x1, x0
 2fc:	mov	x1, x0
 300:	ldr	x0, [sp, #88]
 304:	ldr	x0, [x0, #8]
 308:	cmp	x1, x0
 30c:	b.cc	4b8 <ctf_lookup_by_name+0x400>  // b.lo, b.ul, b.last
 310:	ldr	x0, [sp, #88]
 314:	ldr	x0, [x0, #8]
 318:	ldr	x1, [sp, #80]
 31c:	add	x0, x1, x0
 320:	str	x0, [sp, #80]
 324:	b	334 <ctf_lookup_by_name+0x27c>
 328:	ldr	x0, [sp, #80]
 32c:	add	x0, x0, #0x1
 330:	str	x0, [sp, #80]
 334:	bl	0 <__ctype_b_loc>
 338:	ldr	x1, [x0]
 33c:	ldr	x0, [sp, #80]
 340:	ldrb	w0, [x0]
 344:	and	x0, x0, #0xff
 348:	lsl	x0, x0, #1
 34c:	add	x0, x1, x0
 350:	ldrh	w0, [x0]
 354:	and	w0, w0, #0x2000
 358:	cmp	w0, #0x0
 35c:	b.ne	328 <ctf_lookup_by_name+0x270>  // b.any
 360:	mov	w1, #0x2a                  	// #42
 364:	ldr	x0, [sp, #80]
 368:	bl	0 <strchr>
 36c:	str	x0, [sp, #72]
 370:	ldr	x0, [sp, #72]
 374:	cmp	x0, #0x0
 378:	b.ne	394 <ctf_lookup_by_name+0x2dc>  // b.any
 37c:	ldr	x0, [sp, #48]
 380:	str	x0, [sp, #72]
 384:	b	394 <ctf_lookup_by_name+0x2dc>
 388:	ldr	x0, [sp, #72]
 38c:	sub	x0, x0, #0x1
 390:	str	x0, [sp, #72]
 394:	bl	0 <__ctype_b_loc>
 398:	ldr	x1, [x0]
 39c:	ldr	x0, [sp, #72]
 3a0:	sub	x0, x0, #0x1
 3a4:	ldrb	w0, [x0]
 3a8:	and	x0, x0, #0xff
 3ac:	lsl	x0, x0, #1
 3b0:	add	x0, x1, x0
 3b4:	ldrh	w0, [x0]
 3b8:	and	w0, w0, #0x2000
 3bc:	cmp	w0, #0x0
 3c0:	b.ne	388 <ctf_lookup_by_name+0x2d0>  // b.any
 3c4:	ldr	x0, [sp, #24]
 3c8:	ldr	x1, [x0, #712]
 3cc:	ldr	x2, [sp, #72]
 3d0:	ldr	x0, [sp, #80]
 3d4:	sub	x0, x2, x0
 3d8:	add	x0, x0, #0x1
 3dc:	cmp	x1, x0
 3e0:	b.cc	428 <ctf_lookup_by_name+0x370>  // b.lo, b.ul, b.last
 3e4:	ldr	x0, [sp, #24]
 3e8:	ldr	x3, [x0, #704]
 3ec:	ldr	x1, [sp, #72]
 3f0:	ldr	x0, [sp, #80]
 3f4:	sub	x0, x1, x0
 3f8:	mov	x2, x0
 3fc:	ldr	x1, [sp, #80]
 400:	mov	x0, x3
 404:	bl	0 <memcpy>
 408:	ldr	x0, [sp, #24]
 40c:	ldr	x0, [x0, #704]
 410:	ldr	x2, [sp, #72]
 414:	ldr	x1, [sp, #80]
 418:	sub	x1, x2, x1
 41c:	add	x0, x0, x1
 420:	strb	wzr, [x0]
 424:	b	47c <ctf_lookup_by_name+0x3c4>
 428:	ldr	x0, [sp, #24]
 42c:	ldr	x0, [x0, #704]
 430:	bl	0 <free>
 434:	ldr	x1, [sp, #72]
 438:	ldr	x0, [sp, #80]
 43c:	sub	x0, x1, x0
 440:	mov	x1, x0
 444:	ldr	x0, [sp, #80]
 448:	bl	0 <xstrndup>
 44c:	mov	x1, x0
 450:	ldr	x0, [sp, #24]
 454:	str	x1, [x0, #704]
 458:	ldr	x0, [sp, #24]
 45c:	ldr	x0, [x0, #704]
 460:	cmp	x0, #0x0
 464:	b.ne	47c <ctf_lookup_by_name+0x3c4>  // b.any
 468:	mov	w1, #0xc                   	// #12
 46c:	ldr	x0, [sp, #24]
 470:	bl	0 <ctf_set_errno>
 474:	mov	x0, #0xffffffffffffffff    	// #-1
 478:	b	590 <ctf_lookup_by_name+0x4d8>
 47c:	ldr	x0, [sp, #88]
 480:	ldr	x1, [x0, #16]
 484:	ldr	x0, [sp, #24]
 488:	ldr	x0, [x0, #704]
 48c:	mov	x2, x0
 490:	ldr	x0, [sp, #24]
 494:	bl	0 <ctf_lookup_by_rawhash>
 498:	str	x0, [sp, #64]
 49c:	ldr	x0, [sp, #64]
 4a0:	cmp	x0, #0x0
 4a4:	b.ne	4d8 <ctf_lookup_by_name+0x420>  // b.any
 4a8:	mov	w1, #0x402                 	// #1026
 4ac:	ldr	x0, [sp, #24]
 4b0:	bl	0 <ctf_set_errno>
 4b4:	b	554 <ctf_lookup_by_name+0x49c>
 4b8:	ldr	x0, [sp, #88]
 4bc:	add	x0, x0, #0x18
 4c0:	str	x0, [sp, #88]
 4c4:	ldr	x0, [sp, #88]
 4c8:	ldr	x0, [x0]
 4cc:	cmp	x0, #0x0
 4d0:	b.ne	2b0 <ctf_lookup_by_name+0x1f8>  // b.any
 4d4:	b	4dc <ctf_lookup_by_name+0x424>
 4d8:	nop
 4dc:	ldr	x0, [sp, #88]
 4e0:	ldr	x0, [x0]
 4e4:	cmp	x0, #0x0
 4e8:	b.ne	500 <ctf_lookup_by_name+0x448>  // b.any
 4ec:	mov	w1, #0x402                 	// #1026
 4f0:	ldr	x0, [sp, #24]
 4f4:	bl	0 <ctf_set_errno>
 4f8:	b	554 <ctf_lookup_by_name+0x49c>
 4fc:	nop
 500:	ldr	x0, [sp, #72]
 504:	str	x0, [sp, #80]
 508:	ldr	x0, [sp, #80]
 50c:	ldrb	w0, [x0]
 510:	cmp	w0, #0x0
 514:	b.ne	118 <ctf_lookup_by_name+0x60>  // b.any
 518:	b	520 <ctf_lookup_by_name+0x468>
 51c:	nop
 520:	ldr	x0, [sp, #80]
 524:	ldrb	w0, [x0]
 528:	cmp	w0, #0x0
 52c:	b.ne	53c <ctf_lookup_by_name+0x484>  // b.any
 530:	ldr	x0, [sp, #64]
 534:	cmp	x0, #0x0
 538:	b.ne	54c <ctf_lookup_by_name+0x494>  // b.any
 53c:	mov	w1, #0x403                 	// #1027
 540:	ldr	x0, [sp, #24]
 544:	bl	0 <ctf_set_errno>
 548:	b	590 <ctf_lookup_by_name+0x4d8>
 54c:	ldr	x0, [sp, #64]
 550:	b	590 <ctf_lookup_by_name+0x4d8>
 554:	ldr	x0, [sp, #24]
 558:	ldr	x0, [x0, #512]
 55c:	cmp	x0, #0x0
 560:	b.eq	58c <ctf_lookup_by_name+0x4d4>  // b.none
 564:	ldr	x0, [sp, #24]
 568:	ldr	x0, [x0, #512]
 56c:	ldr	x1, [sp, #16]
 570:	bl	b8 <ctf_lookup_by_name>
 574:	str	x0, [sp, #40]
 578:	ldr	x0, [sp, #40]
 57c:	cmn	x0, #0x1
 580:	b.eq	58c <ctf_lookup_by_name+0x4d4>  // b.none
 584:	ldr	x0, [sp, #40]
 588:	b	590 <ctf_lookup_by_name+0x4d8>
 58c:	mov	x0, #0xffffffffffffffff    	// #-1
 590:	ldp	x29, x30, [sp], #96
 594:	ret

0000000000000598 <ctf_lookup_var>:
 598:	stp	x29, x30, [sp, #-64]!
 59c:	mov	x29, sp
 5a0:	str	x19, [sp, #16]
 5a4:	str	x0, [sp, #40]
 5a8:	str	x1, [sp, #32]
 5ac:	ldr	x0, [sp, #40]
 5b0:	str	x0, [sp, #56]
 5b4:	ldr	x0, [sp, #32]
 5b8:	str	x0, [sp, #48]
 5bc:	ldr	x0, [sp, #56]
 5c0:	ldr	x19, [x0, #8]
 5c4:	ldr	x0, [sp, #56]
 5c8:	ldr	x2, [x0]
 5cc:	ldr	x0, [sp, #48]
 5d0:	ldr	w0, [x0]
 5d4:	mov	w1, w0
 5d8:	mov	x0, x2
 5dc:	bl	0 <ctf_strptr>
 5e0:	mov	x1, x0
 5e4:	mov	x0, x19
 5e8:	bl	0 <strcmp>
 5ec:	ldr	x19, [sp, #16]
 5f0:	ldp	x29, x30, [sp], #64
 5f4:	ret

00000000000005f8 <ctf_lookup_variable>:
 5f8:	stp	x29, x30, [sp, #-64]!
 5fc:	mov	x29, sp
 600:	str	x0, [sp, #24]
 604:	str	x1, [sp, #16]
 608:	ldr	x0, [sp, #24]
 60c:	str	x0, [sp, #40]
 610:	ldr	x0, [sp, #16]
 614:	str	x0, [sp, #48]
 618:	ldr	x0, [sp, #24]
 61c:	ldr	x1, [x0, #464]
 620:	ldr	x0, [sp, #24]
 624:	ldr	x2, [x0, #472]
 628:	add	x5, sp, #0x28
 62c:	adrp	x0, 0 <isqualifier>
 630:	add	x4, x0, #0x0
 634:	mov	x3, #0x8                   	// #8
 638:	mov	x0, x5
 63c:	bl	0 <bsearch>
 640:	str	x0, [sp, #56]
 644:	ldr	x0, [sp, #56]
 648:	cmp	x0, #0x0
 64c:	b.ne	684 <ctf_lookup_variable+0x8c>  // b.any
 650:	ldr	x0, [sp, #24]
 654:	ldr	x0, [x0, #512]
 658:	cmp	x0, #0x0
 65c:	b.eq	674 <ctf_lookup_variable+0x7c>  // b.none
 660:	ldr	x0, [sp, #24]
 664:	ldr	x0, [x0, #512]
 668:	ldr	x1, [sp, #16]
 66c:	bl	5f8 <ctf_lookup_variable>
 670:	b	690 <ctf_lookup_variable+0x98>
 674:	mov	w1, #0x407                 	// #1031
 678:	ldr	x0, [sp, #24]
 67c:	bl	0 <ctf_set_errno>
 680:	b	690 <ctf_lookup_variable+0x98>
 684:	ldr	x0, [sp, #56]
 688:	ldr	w0, [x0, #4]
 68c:	mov	w0, w0
 690:	ldp	x29, x30, [sp], #64
 694:	ret

0000000000000698 <ctf_lookup_symbol_name>:
 698:	stp	x29, x30, [sp, #-80]!
 69c:	mov	x29, sp
 6a0:	str	x0, [sp, #24]
 6a4:	str	x1, [sp, #16]
 6a8:	ldr	x0, [sp, #24]
 6ac:	add	x0, x0, #0x38
 6b0:	str	x0, [sp, #64]
 6b4:	ldr	x0, [sp, #64]
 6b8:	ldr	x0, [x0, #8]
 6bc:	cmp	x0, #0x0
 6c0:	b.ne	6dc <ctf_lookup_symbol_name+0x44>  // b.any
 6c4:	mov	w1, #0x3f2                 	// #1010
 6c8:	ldr	x0, [sp, #24]
 6cc:	bl	0 <ctf_set_errno>
 6d0:	adrp	x0, 0 <_CTF_NULLSTR>
 6d4:	add	x0, x0, #0x0
 6d8:	b	7ac <ctf_lookup_symbol_name+0x114>
 6dc:	ldr	x0, [sp, #24]
 6e0:	ldr	x0, [x0, #432]
 6e4:	ldr	x1, [sp, #16]
 6e8:	cmp	x1, x0
 6ec:	b.cc	708 <ctf_lookup_symbol_name+0x70>  // b.lo, b.ul, b.last
 6f0:	mov	w1, #0x16                  	// #22
 6f4:	ldr	x0, [sp, #24]
 6f8:	bl	0 <ctf_set_errno>
 6fc:	adrp	x0, 0 <_CTF_NULLSTR>
 700:	add	x0, x0, #0x0
 704:	b	7ac <ctf_lookup_symbol_name+0x114>
 708:	ldr	x0, [sp, #64]
 70c:	ldr	x0, [x0, #24]
 710:	cmp	x0, #0x10
 714:	b.ne	748 <ctf_lookup_symbol_name+0xb0>  // b.any
 718:	ldr	x0, [sp, #64]
 71c:	ldr	x1, [x0, #8]
 720:	ldr	x0, [sp, #16]
 724:	lsl	x0, x0, #4
 728:	add	x0, x1, x0
 72c:	str	x0, [sp, #56]
 730:	add	x0, sp, #0x20
 734:	mov	x1, x0
 738:	ldr	x0, [sp, #56]
 73c:	bl	0 <ctf_sym_to_elf64>
 740:	str	x0, [sp, #72]
 744:	b	76c <ctf_lookup_symbol_name+0xd4>
 748:	ldr	x0, [sp, #64]
 74c:	ldr	x2, [x0, #8]
 750:	ldr	x1, [sp, #16]
 754:	mov	x0, x1
 758:	lsl	x0, x0, #1
 75c:	add	x0, x0, x1
 760:	lsl	x0, x0, #3
 764:	add	x0, x2, x0
 768:	str	x0, [sp, #72]
 76c:	ldr	x0, [sp, #72]
 770:	ldr	w0, [x0]
 774:	mov	w1, w0
 778:	ldr	x0, [sp, #24]
 77c:	ldr	x0, [x0, #360]
 780:	cmp	x1, x0
 784:	b.cs	7a4 <ctf_lookup_symbol_name+0x10c>  // b.hs, b.nlast
 788:	ldr	x0, [sp, #24]
 78c:	ldr	x1, [x0, #352]
 790:	ldr	x0, [sp, #72]
 794:	ldr	w0, [x0]
 798:	mov	w0, w0
 79c:	add	x0, x1, x0
 7a0:	b	7ac <ctf_lookup_symbol_name+0x114>
 7a4:	adrp	x0, 0 <_CTF_NULLSTR>
 7a8:	add	x0, x0, #0x0
 7ac:	ldp	x29, x30, [sp], #80
 7b0:	ret

00000000000007b4 <ctf_lookup_by_symbol>:
 7b4:	stp	x29, x30, [sp, #-64]!
 7b8:	mov	x29, sp
 7bc:	str	x0, [sp, #24]
 7c0:	str	x1, [sp, #16]
 7c4:	ldr	x0, [sp, #24]
 7c8:	add	x0, x0, #0x38
 7cc:	str	x0, [sp, #56]
 7d0:	ldr	x0, [sp, #56]
 7d4:	ldr	x0, [x0, #8]
 7d8:	cmp	x0, #0x0
 7dc:	b.ne	7f0 <ctf_lookup_by_symbol+0x3c>  // b.any
 7e0:	mov	w1, #0x3f2                 	// #1010
 7e4:	ldr	x0, [sp, #24]
 7e8:	bl	0 <ctf_set_errno>
 7ec:	b	930 <ctf_lookup_by_symbol+0x17c>
 7f0:	ldr	x0, [sp, #24]
 7f4:	ldr	x0, [x0, #432]
 7f8:	ldr	x1, [sp, #16]
 7fc:	cmp	x1, x0
 800:	b.cc	814 <ctf_lookup_by_symbol+0x60>  // b.lo, b.ul, b.last
 804:	mov	w1, #0x16                  	// #22
 808:	ldr	x0, [sp, #24]
 80c:	bl	0 <ctf_set_errno>
 810:	b	930 <ctf_lookup_by_symbol+0x17c>
 814:	ldr	x0, [sp, #56]
 818:	ldr	x0, [x0, #24]
 81c:	cmp	x0, #0x10
 820:	b.ne	860 <ctf_lookup_by_symbol+0xac>  // b.any
 824:	ldr	x0, [sp, #56]
 828:	ldr	x1, [x0, #8]
 82c:	ldr	x0, [sp, #16]
 830:	lsl	x0, x0, #4
 834:	add	x0, x1, x0
 838:	str	x0, [sp, #40]
 83c:	ldr	x0, [sp, #40]
 840:	ldrb	w0, [x0, #12]
 844:	and	w0, w0, #0xf
 848:	cmp	w0, #0x1
 84c:	b.eq	8a8 <ctf_lookup_by_symbol+0xf4>  // b.none
 850:	mov	w1, #0x406                 	// #1030
 854:	ldr	x0, [sp, #24]
 858:	bl	0 <ctf_set_errno>
 85c:	b	930 <ctf_lookup_by_symbol+0x17c>
 860:	ldr	x0, [sp, #56]
 864:	ldr	x2, [x0, #8]
 868:	ldr	x1, [sp, #16]
 86c:	mov	x0, x1
 870:	lsl	x0, x0, #1
 874:	add	x0, x0, x1
 878:	lsl	x0, x0, #3
 87c:	add	x0, x2, x0
 880:	str	x0, [sp, #48]
 884:	ldr	x0, [sp, #48]
 888:	ldrb	w0, [x0, #4]
 88c:	and	w0, w0, #0xf
 890:	cmp	w0, #0x1
 894:	b.eq	8a8 <ctf_lookup_by_symbol+0xf4>  // b.none
 898:	mov	w1, #0x406                 	// #1030
 89c:	ldr	x0, [sp, #24]
 8a0:	bl	0 <ctf_set_errno>
 8a4:	b	930 <ctf_lookup_by_symbol+0x17c>
 8a8:	ldr	x0, [sp, #24]
 8ac:	ldr	x1, [x0, #424]
 8b0:	ldr	x0, [sp, #16]
 8b4:	lsl	x0, x0, #2
 8b8:	add	x0, x1, x0
 8bc:	ldr	w0, [x0]
 8c0:	cmn	w0, #0x1
 8c4:	b.ne	8d8 <ctf_lookup_by_symbol+0x124>  // b.any
 8c8:	mov	w1, #0x407                 	// #1031
 8cc:	ldr	x0, [sp, #24]
 8d0:	bl	0 <ctf_set_errno>
 8d4:	b	930 <ctf_lookup_by_symbol+0x17c>
 8d8:	ldr	x0, [sp, #24]
 8dc:	ldr	x0, [x0, #408]
 8e0:	mov	x2, x0
 8e4:	ldr	x0, [sp, #24]
 8e8:	ldr	x1, [x0, #424]
 8ec:	ldr	x0, [sp, #16]
 8f0:	lsl	x0, x0, #2
 8f4:	add	x0, x1, x0
 8f8:	ldr	w0, [x0]
 8fc:	mov	w0, w0
 900:	add	x0, x2, x0
 904:	ldr	w0, [x0]
 908:	mov	w0, w0
 90c:	str	x0, [sp, #32]
 910:	ldr	x0, [sp, #32]
 914:	cmp	x0, #0x0
 918:	b.ne	92c <ctf_lookup_by_symbol+0x178>  // b.any
 91c:	mov	w1, #0x407                 	// #1031
 920:	ldr	x0, [sp, #24]
 924:	bl	0 <ctf_set_errno>
 928:	b	930 <ctf_lookup_by_symbol+0x17c>
 92c:	ldr	x0, [sp, #32]
 930:	ldp	x29, x30, [sp], #64
 934:	ret

0000000000000938 <ctf_lookup_by_id>:
 938:	stp	x29, x30, [sp, #-64]!
 93c:	mov	x29, sp
 940:	str	x0, [sp, #24]
 944:	str	x1, [sp, #16]
 948:	ldr	x0, [sp, #24]
 94c:	ldr	x0, [x0]
 950:	str	x0, [sp, #56]
 954:	ldr	x0, [sp, #56]
 958:	ldr	w0, [x0, #552]
 95c:	and	w0, w0, #0x1
 960:	cmp	w0, #0x0
 964:	b.eq	9b0 <ctf_lookup_by_id+0x78>  // b.none
 968:	ldr	x0, [sp, #56]
 96c:	ldr	w0, [x0, #544]
 970:	mov	w0, w0
 974:	ldr	x1, [sp, #16]
 978:	cmp	x1, x0
 97c:	b.hi	9b0 <ctf_lookup_by_id+0x78>  // b.pmore
 980:	ldr	x0, [sp, #56]
 984:	ldr	x0, [x0, #512]
 988:	str	x0, [sp, #56]
 98c:	ldr	x0, [sp, #56]
 990:	cmp	x0, #0x0
 994:	b.ne	9b0 <ctf_lookup_by_id+0x78>  // b.any
 998:	ldr	x0, [sp, #24]
 99c:	ldr	x0, [x0]
 9a0:	mov	w1, #0x3f3                 	// #1011
 9a4:	bl	0 <ctf_set_errno>
 9a8:	mov	x0, #0x0                   	// #0
 9ac:	b	af4 <ctf_lookup_by_id+0x1bc>
 9b0:	ldr	x0, [sp, #56]
 9b4:	ldr	w0, [x0, #552]
 9b8:	and	w0, w0, #0x2
 9bc:	cmp	w0, #0x0
 9c0:	b.eq	a10 <ctf_lookup_by_id+0xd8>  // b.none
 9c4:	ldr	x1, [sp, #16]
 9c8:	ldr	x0, [sp, #56]
 9cc:	bl	0 <ctf_dynamic_type>
 9d0:	str	x0, [sp, #40]
 9d4:	ldr	x0, [sp, #40]
 9d8:	cmp	x0, #0x0
 9dc:	b.eq	9f8 <ctf_lookup_by_id+0xc0>  // b.none
 9e0:	ldr	x0, [sp, #24]
 9e4:	ldr	x1, [sp, #56]
 9e8:	str	x1, [x0]
 9ec:	ldr	x0, [sp, #40]
 9f0:	add	x0, x0, #0x18
 9f4:	b	af4 <ctf_lookup_by_id+0x1bc>
 9f8:	ldr	x0, [sp, #24]
 9fc:	ldr	x0, [x0]
 a00:	mov	w1, #0x3fa                 	// #1018
 a04:	bl	0 <ctf_set_errno>
 a08:	mov	x0, #0x0                   	// #0
 a0c:	b	af4 <ctf_lookup_by_id+0x1bc>
 a10:	ldr	x0, [sp, #56]
 a14:	ldr	w0, [x0, #544]
 a18:	mov	w0, w0
 a1c:	ldr	x1, [sp, #16]
 a20:	and	x0, x1, x0
 a24:	str	x0, [sp, #48]
 a28:	ldr	x0, [sp, #48]
 a2c:	cmp	x0, #0x0
 a30:	b.eq	ae0 <ctf_lookup_by_id+0x1a8>  // b.none
 a34:	ldr	x0, [sp, #56]
 a38:	ldr	x0, [x0, #480]
 a3c:	ldr	x1, [sp, #48]
 a40:	cmp	x1, x0
 a44:	b.hi	ae0 <ctf_lookup_by_id+0x1a8>  // b.pmore
 a48:	ldr	x0, [sp, #24]
 a4c:	ldr	x1, [sp, #56]
 a50:	str	x1, [x0]
 a54:	ldr	x0, [sp, #56]
 a58:	ldr	w0, [x0, #552]
 a5c:	and	w0, w0, #0x2
 a60:	cmp	w0, #0x0
 a64:	b.eq	ab0 <ctf_lookup_by_id+0x178>  // b.none
 a68:	ldr	x0, [sp, #56]
 a6c:	ldr	w0, [x0, #552]
 a70:	and	w0, w0, #0x1
 a74:	cmp	w0, #0x0
 a78:	b.eq	a98 <ctf_lookup_by_id+0x160>  // b.none
 a7c:	ldr	x0, [sp, #56]
 a80:	ldr	w0, [x0, #544]
 a84:	add	w0, w0, #0x1
 a88:	mov	w1, w0
 a8c:	ldr	x0, [sp, #48]
 a90:	orr	x0, x1, x0
 a94:	b	a9c <ctf_lookup_by_id+0x164>
 a98:	ldr	x0, [sp, #48]
 a9c:	mov	x1, x0
 aa0:	ldr	x0, [sp, #56]
 aa4:	bl	0 <ctf_dtd_lookup>
 aa8:	add	x0, x0, #0x18
 aac:	b	af4 <ctf_lookup_by_id+0x1bc>
 ab0:	ldr	x0, [sp, #56]
 ab4:	ldr	x0, [x0, #408]
 ab8:	mov	x2, x0
 abc:	ldr	x0, [sp, #56]
 ac0:	ldr	x1, [x0, #440]
 ac4:	ldr	x0, [sp, #48]
 ac8:	lsl	x0, x0, #2
 acc:	add	x0, x1, x0
 ad0:	ldr	w0, [x0]
 ad4:	mov	w0, w0
 ad8:	add	x0, x2, x0
 adc:	b	af4 <ctf_lookup_by_id+0x1bc>
 ae0:	ldr	x0, [sp, #24]
 ae4:	ldr	x0, [x0]
 ae8:	mov	w1, #0x3fa                 	// #1018
 aec:	bl	0 <ctf_set_errno>
 af0:	mov	x0, #0x0                   	// #0
 af4:	ldp	x29, x30, [sp], #64
 af8:	ret

0000000000000afc <ctf_func_info>:
 afc:	stp	x29, x30, [sp, #-96]!
 b00:	mov	x29, sp
 b04:	str	x0, [sp, #40]
 b08:	str	x1, [sp, #32]
 b0c:	str	x2, [sp, #24]
 b10:	ldr	x0, [sp, #40]
 b14:	add	x0, x0, #0x38
 b18:	str	x0, [sp, #88]
 b1c:	ldr	x0, [sp, #88]
 b20:	ldr	x0, [x0, #8]
 b24:	cmp	x0, #0x0
 b28:	b.ne	b3c <ctf_func_info+0x40>  // b.any
 b2c:	mov	w1, #0x3f2                 	// #1010
 b30:	ldr	x0, [sp, #40]
 b34:	bl	0 <ctf_set_errno>
 b38:	b	d68 <ctf_func_info+0x26c>
 b3c:	ldr	x0, [sp, #40]
 b40:	ldr	x0, [x0, #432]
 b44:	ldr	x1, [sp, #32]
 b48:	cmp	x1, x0
 b4c:	b.cc	b60 <ctf_func_info+0x64>  // b.lo, b.ul, b.last
 b50:	mov	w1, #0x16                  	// #22
 b54:	ldr	x0, [sp, #40]
 b58:	bl	0 <ctf_set_errno>
 b5c:	b	d68 <ctf_func_info+0x26c>
 b60:	ldr	x0, [sp, #88]
 b64:	ldr	x0, [x0, #24]
 b68:	cmp	x0, #0x10
 b6c:	b.ne	bac <ctf_func_info+0xb0>  // b.any
 b70:	ldr	x0, [sp, #88]
 b74:	ldr	x1, [x0, #8]
 b78:	ldr	x0, [sp, #32]
 b7c:	lsl	x0, x0, #4
 b80:	add	x0, x1, x0
 b84:	str	x0, [sp, #72]
 b88:	ldr	x0, [sp, #72]
 b8c:	ldrb	w0, [x0, #12]
 b90:	and	w0, w0, #0xf
 b94:	cmp	w0, #0x2
 b98:	b.eq	bf4 <ctf_func_info+0xf8>  // b.none
 b9c:	mov	w1, #0x404                 	// #1028
 ba0:	ldr	x0, [sp, #40]
 ba4:	bl	0 <ctf_set_errno>
 ba8:	b	d68 <ctf_func_info+0x26c>
 bac:	ldr	x0, [sp, #88]
 bb0:	ldr	x2, [x0, #8]
 bb4:	ldr	x1, [sp, #32]
 bb8:	mov	x0, x1
 bbc:	lsl	x0, x0, #1
 bc0:	add	x0, x0, x1
 bc4:	lsl	x0, x0, #3
 bc8:	add	x0, x2, x0
 bcc:	str	x0, [sp, #80]
 bd0:	ldr	x0, [sp, #80]
 bd4:	ldrb	w0, [x0, #4]
 bd8:	and	w0, w0, #0xf
 bdc:	cmp	w0, #0x2
 be0:	b.eq	bf4 <ctf_func_info+0xf8>  // b.none
 be4:	mov	w1, #0x404                 	// #1028
 be8:	ldr	x0, [sp, #40]
 bec:	bl	0 <ctf_set_errno>
 bf0:	b	d68 <ctf_func_info+0x26c>
 bf4:	ldr	x0, [sp, #40]
 bf8:	ldr	x1, [x0, #424]
 bfc:	ldr	x0, [sp, #32]
 c00:	lsl	x0, x0, #2
 c04:	add	x0, x1, x0
 c08:	ldr	w0, [x0]
 c0c:	cmn	w0, #0x1
 c10:	b.ne	c24 <ctf_func_info+0x128>  // b.any
 c14:	mov	w1, #0x405                 	// #1029
 c18:	ldr	x0, [sp, #40]
 c1c:	bl	0 <ctf_set_errno>
 c20:	b	d68 <ctf_func_info+0x26c>
 c24:	ldr	x0, [sp, #40]
 c28:	ldr	x0, [x0, #408]
 c2c:	mov	x2, x0
 c30:	ldr	x0, [sp, #40]
 c34:	ldr	x1, [x0, #424]
 c38:	ldr	x0, [sp, #32]
 c3c:	lsl	x0, x0, #2
 c40:	add	x0, x1, x0
 c44:	ldr	w0, [x0]
 c48:	mov	w0, w0
 c4c:	add	x0, x2, x0
 c50:	str	x0, [sp, #64]
 c54:	ldr	x0, [sp, #64]
 c58:	add	x1, x0, #0x4
 c5c:	str	x1, [sp, #64]
 c60:	ldr	w0, [x0]
 c64:	str	w0, [sp, #60]
 c68:	ldr	x0, [sp, #40]
 c6c:	ldr	x0, [x0]
 c70:	ldr	x1, [x0]
 c74:	ldr	w0, [sp, #60]
 c78:	blr	x1
 c7c:	str	w0, [sp, #56]
 c80:	ldr	x0, [sp, #40]
 c84:	ldr	x0, [x0]
 c88:	ldr	x1, [x0, #16]
 c8c:	ldr	w0, [sp, #60]
 c90:	blr	x1
 c94:	str	w0, [sp, #52]
 c98:	ldr	w0, [sp, #56]
 c9c:	cmp	w0, #0x0
 ca0:	b.ne	cc0 <ctf_func_info+0x1c4>  // b.any
 ca4:	ldr	w0, [sp, #52]
 ca8:	cmp	w0, #0x0
 cac:	b.ne	cc0 <ctf_func_info+0x1c4>  // b.any
 cb0:	mov	w1, #0x405                 	// #1029
 cb4:	ldr	x0, [sp, #40]
 cb8:	bl	0 <ctf_set_errno>
 cbc:	b	d68 <ctf_func_info+0x26c>
 cc0:	ldr	w0, [sp, #56]
 cc4:	cmp	w0, #0x5
 cc8:	b.eq	cdc <ctf_func_info+0x1e0>  // b.none
 ccc:	mov	w1, #0x3ef                 	// #1007
 cd0:	ldr	x0, [sp, #40]
 cd4:	bl	0 <ctf_set_errno>
 cd8:	b	d68 <ctf_func_info+0x26c>
 cdc:	ldr	x0, [sp, #64]
 ce0:	add	x1, x0, #0x4
 ce4:	str	x1, [sp, #64]
 ce8:	ldr	w0, [x0]
 cec:	mov	w1, w0
 cf0:	ldr	x0, [sp, #24]
 cf4:	str	x1, [x0]
 cf8:	ldr	x0, [sp, #24]
 cfc:	ldr	w1, [sp, #52]
 d00:	str	w1, [x0, #8]
 d04:	ldr	x0, [sp, #24]
 d08:	str	wzr, [x0, #12]
 d0c:	ldr	w0, [sp, #52]
 d10:	cmp	w0, #0x0
 d14:	b.eq	d64 <ctf_func_info+0x268>  // b.none
 d18:	ldr	w0, [sp, #52]
 d1c:	sub	w0, w0, #0x1
 d20:	mov	w0, w0
 d24:	lsl	x0, x0, #2
 d28:	ldr	x1, [sp, #64]
 d2c:	add	x0, x1, x0
 d30:	ldr	w0, [x0]
 d34:	cmp	w0, #0x0
 d38:	b.ne	d64 <ctf_func_info+0x268>  // b.any
 d3c:	ldr	x0, [sp, #24]
 d40:	ldr	w0, [x0, #12]
 d44:	orr	w1, w0, #0x1
 d48:	ldr	x0, [sp, #24]
 d4c:	str	w1, [x0, #12]
 d50:	ldr	x0, [sp, #24]
 d54:	ldr	w0, [x0, #8]
 d58:	sub	w1, w0, #0x1
 d5c:	ldr	x0, [sp, #24]
 d60:	str	w1, [x0, #8]
 d64:	mov	w0, #0x0                   	// #0
 d68:	ldp	x29, x30, [sp], #96
 d6c:	ret

0000000000000d70 <ctf_func_args>:
 d70:	stp	x29, x30, [sp, #-80]!
 d74:	mov	x29, sp
 d78:	str	x0, [sp, #40]
 d7c:	str	x1, [sp, #32]
 d80:	str	w2, [sp, #28]
 d84:	str	x3, [sp, #16]
 d88:	add	x0, sp, #0x38
 d8c:	mov	x2, x0
 d90:	ldr	x1, [sp, #32]
 d94:	ldr	x0, [sp, #40]
 d98:	bl	afc <ctf_func_info>
 d9c:	cmp	w0, #0x0
 da0:	b.ge	dac <ctf_func_args+0x3c>  // b.tcont
 da4:	mov	w0, #0xffffffff            	// #-1
 da8:	b	e3c <ctf_func_args+0xcc>
 dac:	ldr	x0, [sp, #40]
 db0:	ldr	x0, [x0, #408]
 db4:	mov	x2, x0
 db8:	ldr	x0, [sp, #40]
 dbc:	ldr	x1, [x0, #424]
 dc0:	ldr	x0, [sp, #32]
 dc4:	lsl	x0, x0, #2
 dc8:	add	x0, x1, x0
 dcc:	ldr	w0, [x0]
 dd0:	mov	w0, w0
 dd4:	add	x0, x2, x0
 dd8:	add	x0, x0, #0x8
 ddc:	str	x0, [sp, #72]
 de0:	ldr	w0, [sp, #64]
 de4:	ldr	w2, [sp, #28]
 de8:	ldr	w1, [sp, #28]
 dec:	cmp	w2, w0
 df0:	csel	w0, w1, w0, ls  // ls = plast
 df4:	str	w0, [sp, #28]
 df8:	b	e2c <ctf_func_args+0xbc>
 dfc:	ldr	x0, [sp, #72]
 e00:	add	x1, x0, #0x4
 e04:	str	x1, [sp, #72]
 e08:	ldr	w2, [x0]
 e0c:	ldr	x0, [sp, #16]
 e10:	add	x1, x0, #0x8
 e14:	str	x1, [sp, #16]
 e18:	mov	w1, w2
 e1c:	str	x1, [x0]
 e20:	ldr	w0, [sp, #28]
 e24:	sub	w0, w0, #0x1
 e28:	str	w0, [sp, #28]
 e2c:	ldr	w0, [sp, #28]
 e30:	cmp	w0, #0x0
 e34:	b.ne	dfc <ctf_func_args+0x8c>  // b.any
 e38:	mov	w0, #0x0                   	// #0
 e3c:	ldp	x29, x30, [sp], #80
 e40:	ret

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__bswap_16>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	rev16	w0, w0
      10:	and	w0, w0, #0xffff
      14:	add	sp, sp, #0x10
      18:	ret

000000000000001c <__bswap_32>:
      1c:	sub	sp, sp, #0x10
      20:	str	w0, [sp, #12]
      24:	ldr	w0, [sp, #12]
      28:	rev	w0, w0
      2c:	add	sp, sp, #0x10
      30:	ret

0000000000000034 <ctf_get_ctt_size>:
      34:	stp	x29, x30, [sp, #-48]!
      38:	mov	x29, sp
      3c:	str	x0, [sp, #40]
      40:	str	x1, [sp, #32]
      44:	str	x2, [sp, #24]
      48:	str	x3, [sp, #16]
      4c:	ldr	x0, [sp, #40]
      50:	ldr	x0, [x0]
      54:	ldr	x4, [x0, #24]
      58:	ldr	x3, [sp, #16]
      5c:	ldr	x2, [sp, #24]
      60:	ldr	x1, [sp, #32]
      64:	ldr	x0, [sp, #40]
      68:	blr	x4
      6c:	ldp	x29, x30, [sp], #48
      70:	ret

0000000000000074 <get_kind_v1>:
      74:	sub	sp, sp, #0x10
      78:	str	w0, [sp, #12]
      7c:	ldr	w0, [sp, #12]
      80:	lsr	w0, w0, #11
      84:	and	w0, w0, #0x1f
      88:	add	sp, sp, #0x10
      8c:	ret

0000000000000090 <get_root_v1>:
      90:	sub	sp, sp, #0x10
      94:	str	w0, [sp, #12]
      98:	ldr	w0, [sp, #12]
      9c:	lsr	w0, w0, #10
      a0:	and	w0, w0, #0x1
      a4:	add	sp, sp, #0x10
      a8:	ret

00000000000000ac <get_vlen_v1>:
      ac:	sub	sp, sp, #0x10
      b0:	str	w0, [sp, #12]
      b4:	ldr	w0, [sp, #12]
      b8:	and	w0, w0, #0x3ff
      bc:	add	sp, sp, #0x10
      c0:	ret

00000000000000c4 <get_kind_v2>:
      c4:	sub	sp, sp, #0x10
      c8:	str	w0, [sp, #12]
      cc:	ldr	w0, [sp, #12]
      d0:	lsr	w0, w0, #26
      d4:	add	sp, sp, #0x10
      d8:	ret

00000000000000dc <get_root_v2>:
      dc:	sub	sp, sp, #0x10
      e0:	str	w0, [sp, #12]
      e4:	ldr	w0, [sp, #12]
      e8:	lsr	w0, w0, #25
      ec:	and	w0, w0, #0x1
      f0:	add	sp, sp, #0x10
      f4:	ret

00000000000000f8 <get_vlen_v2>:
      f8:	sub	sp, sp, #0x10
      fc:	str	w0, [sp, #12]
     100:	ldr	w0, [sp, #12]
     104:	and	w0, w0, #0xffffff
     108:	add	sp, sp, #0x10
     10c:	ret

0000000000000110 <get_ctt_size_common>:
     110:	sub	sp, sp, #0x50
     114:	str	x0, [sp, #56]
     118:	str	x1, [sp, #48]
     11c:	str	x2, [sp, #40]
     120:	str	x3, [sp, #32]
     124:	str	x4, [sp, #24]
     128:	str	x5, [sp, #16]
     12c:	str	x6, [sp, #8]
     130:	str	x7, [sp]
     134:	ldr	x1, [sp, #16]
     138:	ldr	x0, [sp, #80]
     13c:	cmp	x1, x0
     140:	b.ne	158 <get_ctt_size_common+0x48>  // b.any
     144:	ldr	x0, [sp, #24]
     148:	str	x0, [sp, #72]
     14c:	ldr	x0, [sp, #8]
     150:	str	x0, [sp, #64]
     154:	b	168 <get_ctt_size_common+0x58>
     158:	ldr	x0, [sp, #16]
     15c:	str	x0, [sp, #72]
     160:	ldr	x0, [sp]
     164:	str	x0, [sp, #64]
     168:	ldr	x0, [sp, #40]
     16c:	cmp	x0, #0x0
     170:	b.eq	180 <get_ctt_size_common+0x70>  // b.none
     174:	ldr	x0, [sp, #40]
     178:	ldr	x1, [sp, #72]
     17c:	str	x1, [x0]
     180:	ldr	x0, [sp, #32]
     184:	cmp	x0, #0x0
     188:	b.eq	198 <get_ctt_size_common+0x88>  // b.none
     18c:	ldr	x0, [sp, #32]
     190:	ldr	x1, [sp, #64]
     194:	str	x1, [x0]
     198:	ldr	x0, [sp, #72]
     19c:	add	sp, sp, #0x50
     1a0:	ret

00000000000001a4 <get_ctt_size_v1>:
     1a4:	sub	sp, sp, #0x50
     1a8:	stp	x29, x30, [sp, #16]
     1ac:	add	x29, sp, #0x10
     1b0:	str	x0, [sp, #56]
     1b4:	str	x1, [sp, #48]
     1b8:	str	x2, [sp, #40]
     1bc:	str	x3, [sp, #32]
     1c0:	ldr	x0, [sp, #48]
     1c4:	str	x0, [sp, #72]
     1c8:	ldr	x0, [sp, #72]
     1cc:	ldr	w0, [x0, #8]
     1d0:	mov	w0, w0
     1d4:	lsl	x1, x0, #32
     1d8:	ldr	x0, [sp, #72]
     1dc:	ldr	w0, [x0, #12]
     1e0:	mov	w0, w0
     1e4:	orr	x1, x1, x0
     1e8:	ldr	x0, [sp, #72]
     1ec:	ldrh	w0, [x0, #6]
     1f0:	and	x2, x0, #0xffff
     1f4:	mov	x0, #0xffff                	// #65535
     1f8:	str	x0, [sp]
     1fc:	mov	x7, #0x8                   	// #8
     200:	mov	x6, #0x10                  	// #16
     204:	mov	x5, x2
     208:	mov	x4, x1
     20c:	ldr	x3, [sp, #32]
     210:	ldr	x2, [sp, #40]
     214:	ldr	x1, [sp, #48]
     218:	ldr	x0, [sp, #56]
     21c:	bl	110 <get_ctt_size_common>
     220:	ldp	x29, x30, [sp, #16]
     224:	add	sp, sp, #0x50
     228:	ret

000000000000022c <get_ctt_size_v2_unconverted>:
     22c:	sub	sp, sp, #0x50
     230:	stp	x29, x30, [sp, #16]
     234:	add	x29, sp, #0x10
     238:	str	x0, [sp, #56]
     23c:	str	x1, [sp, #48]
     240:	str	x2, [sp, #40]
     244:	str	x3, [sp, #32]
     248:	ldr	x0, [sp, #48]
     24c:	str	x0, [sp, #72]
     250:	ldr	x0, [sp, #72]
     254:	ldr	w0, [x0, #8]
     258:	mov	w0, w0
     25c:	lsl	x1, x0, #32
     260:	ldr	x0, [sp, #72]
     264:	ldr	w0, [x0, #12]
     268:	mov	w0, w0
     26c:	orr	x1, x1, x0
     270:	ldr	x0, [sp, #72]
     274:	ldrh	w0, [x0, #6]
     278:	and	x2, x0, #0xffff
     27c:	mov	x0, #0xffffffff            	// #4294967295
     280:	str	x0, [sp]
     284:	mov	x7, #0xc                   	// #12
     288:	mov	x6, #0x14                  	// #20
     28c:	mov	x5, x2
     290:	mov	x4, x1
     294:	ldr	x3, [sp, #32]
     298:	ldr	x2, [sp, #40]
     29c:	ldr	x1, [sp, #48]
     2a0:	ldr	x0, [sp, #56]
     2a4:	bl	110 <get_ctt_size_common>
     2a8:	ldp	x29, x30, [sp, #16]
     2ac:	add	sp, sp, #0x50
     2b0:	ret

00000000000002b4 <get_ctt_size_v2>:
     2b4:	sub	sp, sp, #0x40
     2b8:	stp	x29, x30, [sp, #16]
     2bc:	add	x29, sp, #0x10
     2c0:	str	x0, [sp, #56]
     2c4:	str	x1, [sp, #48]
     2c8:	str	x2, [sp, #40]
     2cc:	str	x3, [sp, #32]
     2d0:	ldr	x0, [sp, #48]
     2d4:	ldr	w0, [x0, #12]
     2d8:	mov	w0, w0
     2dc:	lsl	x1, x0, #32
     2e0:	ldr	x0, [sp, #48]
     2e4:	ldr	w0, [x0, #16]
     2e8:	mov	w0, w0
     2ec:	orr	x1, x1, x0
     2f0:	ldr	x0, [sp, #48]
     2f4:	ldr	w0, [x0, #8]
     2f8:	mov	w2, w0
     2fc:	mov	x0, #0xffffffff            	// #4294967295
     300:	str	x0, [sp]
     304:	mov	x7, #0xc                   	// #12
     308:	mov	x6, #0x14                  	// #20
     30c:	mov	x5, x2
     310:	mov	x4, x1
     314:	ldr	x3, [sp, #32]
     318:	ldr	x2, [sp, #40]
     31c:	ldr	x1, [sp, #48]
     320:	ldr	x0, [sp, #56]
     324:	bl	110 <get_ctt_size_common>
     328:	ldp	x29, x30, [sp, #16]
     32c:	add	sp, sp, #0x40
     330:	ret

0000000000000334 <get_vbytes_common>:
     334:	stp	x29, x30, [sp, #-48]!
     338:	mov	x29, sp
     33c:	strh	w0, [sp, #46]
     340:	str	x1, [sp, #32]
     344:	str	x2, [sp, #24]
     348:	ldrh	w0, [sp, #46]
     34c:	cmp	w0, #0xe
     350:	b.eq	3b0 <get_vbytes_common+0x7c>  // b.none
     354:	cmp	w0, #0xe
     358:	b.gt	3cc <get_vbytes_common+0x98>
     35c:	cmp	w0, #0xd
     360:	b.gt	3cc <get_vbytes_common+0x98>
     364:	cmp	w0, #0x9
     368:	b.ge	3c4 <get_vbytes_common+0x90>  // b.tcont
     36c:	cmp	w0, #0x8
     370:	b.eq	3b8 <get_vbytes_common+0x84>  // b.none
     374:	cmp	w0, #0x8
     378:	b.gt	3cc <get_vbytes_common+0x98>
     37c:	cmp	w0, #0x3
     380:	b.eq	3c4 <get_vbytes_common+0x90>  // b.none
     384:	cmp	w0, #0x3
     388:	b.gt	3cc <get_vbytes_common+0x98>
     38c:	cmp	w0, #0x0
     390:	b.eq	3c4 <get_vbytes_common+0x90>  // b.none
     394:	cmp	w0, #0x0
     398:	b.lt	3cc <get_vbytes_common+0x98>  // b.tstop
     39c:	sub	w0, w0, #0x1
     3a0:	cmp	w0, #0x1
     3a4:	b.hi	3cc <get_vbytes_common+0x98>  // b.pmore
     3a8:	mov	x0, #0x4                   	// #4
     3ac:	b	3e4 <get_vbytes_common+0xb0>
     3b0:	mov	x0, #0x8                   	// #8
     3b4:	b	3e4 <get_vbytes_common+0xb0>
     3b8:	ldr	x0, [sp, #24]
     3bc:	lsl	x0, x0, #3
     3c0:	b	3e4 <get_vbytes_common+0xb0>
     3c4:	mov	x0, #0x0                   	// #0
     3c8:	b	3e4 <get_vbytes_common+0xb0>
     3cc:	ldrh	w0, [sp, #46]
     3d0:	mov	w1, w0
     3d4:	adrp	x0, 0 <__bswap_16>
     3d8:	add	x0, x0, #0x0
     3dc:	bl	0 <ctf_dprintf>
     3e0:	mov	x0, #0x3ef                 	// #1007
     3e4:	ldp	x29, x30, [sp], #48
     3e8:	ret

00000000000003ec <get_vbytes_v1>:
     3ec:	stp	x29, x30, [sp, #-48]!
     3f0:	mov	x29, sp
     3f4:	strh	w0, [sp, #46]
     3f8:	str	x1, [sp, #32]
     3fc:	str	x2, [sp, #24]
     400:	ldrh	w0, [sp, #46]
     404:	cmp	w0, #0x7
     408:	b.gt	46c <get_vbytes_v1+0x80>
     40c:	cmp	w0, #0x6
     410:	b.ge	444 <get_vbytes_v1+0x58>  // b.tcont
     414:	cmp	w0, #0x4
     418:	b.eq	428 <get_vbytes_v1+0x3c>  // b.none
     41c:	cmp	w0, #0x5
     420:	b.eq	430 <get_vbytes_v1+0x44>  // b.none
     424:	b	46c <get_vbytes_v1+0x80>
     428:	mov	x0, #0x8                   	// #8
     42c:	b	47c <get_vbytes_v1+0x90>
     430:	ldr	x0, [sp, #24]
     434:	add	x0, x0, #0x1
     438:	and	x0, x0, #0xfffffffffffffffe
     43c:	lsl	x0, x0, #1
     440:	b	47c <get_vbytes_v1+0x90>
     444:	ldr	x1, [sp, #32]
     448:	mov	x0, #0x1fff                	// #8191
     44c:	cmp	x1, x0
     450:	b.gt	460 <get_vbytes_v1+0x74>
     454:	ldr	x0, [sp, #24]
     458:	lsl	x0, x0, #3
     45c:	b	47c <get_vbytes_v1+0x90>
     460:	ldr	x0, [sp, #24]
     464:	lsl	x0, x0, #4
     468:	b	47c <get_vbytes_v1+0x90>
     46c:	ldr	x2, [sp, #24]
     470:	ldr	x1, [sp, #32]
     474:	ldrh	w0, [sp, #46]
     478:	bl	334 <get_vbytes_common>
     47c:	ldp	x29, x30, [sp], #48
     480:	ret

0000000000000484 <get_vbytes_v2>:
     484:	stp	x29, x30, [sp, #-48]!
     488:	mov	x29, sp
     48c:	strh	w0, [sp, #46]
     490:	str	x1, [sp, #32]
     494:	str	x2, [sp, #24]
     498:	ldrh	w0, [sp, #46]
     49c:	cmp	w0, #0x7
     4a0:	b.gt	510 <get_vbytes_v2+0x8c>
     4a4:	cmp	w0, #0x6
     4a8:	b.ge	4dc <get_vbytes_v2+0x58>  // b.tcont
     4ac:	cmp	w0, #0x4
     4b0:	b.eq	4c0 <get_vbytes_v2+0x3c>  // b.none
     4b4:	cmp	w0, #0x5
     4b8:	b.eq	4c8 <get_vbytes_v2+0x44>  // b.none
     4bc:	b	510 <get_vbytes_v2+0x8c>
     4c0:	mov	x0, #0xc                   	// #12
     4c4:	b	520 <get_vbytes_v2+0x9c>
     4c8:	ldr	x0, [sp, #24]
     4cc:	add	x0, x0, #0x1
     4d0:	and	x0, x0, #0xfffffffffffffffe
     4d4:	lsl	x0, x0, #2
     4d8:	b	520 <get_vbytes_v2+0x9c>
     4dc:	ldr	x1, [sp, #32]
     4e0:	mov	x0, #0x1fffffff            	// #536870911
     4e4:	cmp	x1, x0
     4e8:	b.gt	504 <get_vbytes_v2+0x80>
     4ec:	ldr	x1, [sp, #24]
     4f0:	mov	x0, x1
     4f4:	lsl	x0, x0, #1
     4f8:	add	x0, x0, x1
     4fc:	lsl	x0, x0, #2
     500:	b	520 <get_vbytes_v2+0x9c>
     504:	ldr	x0, [sp, #24]
     508:	lsl	x0, x0, #4
     50c:	b	520 <get_vbytes_v2+0x9c>
     510:	ldr	x2, [sp, #24]
     514:	ldr	x1, [sp, #32]
     518:	ldrh	w0, [sp, #46]
     51c:	bl	334 <get_vbytes_common>
     520:	ldp	x29, x30, [sp], #48
     524:	ret

0000000000000528 <init_symtab>:
     528:	stp	x29, x30, [sp, #-128]!
     52c:	mov	x29, sp
     530:	str	x0, [sp, #40]
     534:	str	x1, [sp, #32]
     538:	str	x2, [sp, #24]
     53c:	str	x3, [sp, #16]
     540:	ldr	x0, [sp, #24]
     544:	ldr	x0, [x0, #8]
     548:	str	x0, [sp, #120]
     54c:	ldr	x0, [sp, #40]
     550:	ldr	x0, [x0, #424]
     554:	str	x0, [sp, #112]
     558:	ldr	x0, [sp, #40]
     55c:	ldr	x0, [x0, #432]
     560:	lsl	x0, x0, #2
     564:	ldr	x1, [sp, #112]
     568:	add	x0, x1, x0
     56c:	str	x0, [sp, #80]
     570:	ldr	x0, [sp, #32]
     574:	ldr	w0, [x0, #20]
     578:	str	w0, [sp, #108]
     57c:	ldr	x0, [sp, #32]
     580:	ldr	w0, [x0, #24]
     584:	str	w0, [sp, #104]
     588:	b	7d0 <init_symtab+0x2a8>
     58c:	ldr	x0, [sp, #24]
     590:	ldr	x0, [x0, #24]
     594:	cmp	x0, #0x10
     598:	b.ne	5b4 <init_symtab+0x8c>  // b.any
     59c:	add	x0, sp, #0x30
     5a0:	mov	x1, x0
     5a4:	ldr	x0, [sp, #120]
     5a8:	bl	0 <ctf_sym_to_elf64>
     5ac:	str	x0, [sp, #96]
     5b0:	b	5bc <init_symtab+0x94>
     5b4:	ldr	x0, [sp, #120]
     5b8:	str	x0, [sp, #96]
     5bc:	ldr	x0, [sp, #96]
     5c0:	ldr	w0, [x0]
     5c4:	mov	w1, w0
     5c8:	ldr	x0, [sp, #16]
     5cc:	ldr	x0, [x0, #16]
     5d0:	cmp	x1, x0
     5d4:	b.cs	5f8 <init_symtab+0xd0>  // b.hs, b.nlast
     5d8:	ldr	x0, [sp, #16]
     5dc:	ldr	x1, [x0, #8]
     5e0:	ldr	x0, [sp, #96]
     5e4:	ldr	w0, [x0]
     5e8:	mov	w0, w0
     5ec:	add	x0, x1, x0
     5f0:	str	x0, [sp, #88]
     5f4:	b	604 <init_symtab+0xdc>
     5f8:	adrp	x0, c0 <get_vlen_v1+0x14>
     5fc:	add	x0, x0, #0x0
     600:	str	x0, [sp, #88]
     604:	ldr	x0, [sp, #96]
     608:	ldr	w0, [x0]
     60c:	cmp	w0, #0x0
     610:	b.eq	654 <init_symtab+0x12c>  // b.none
     614:	ldr	x0, [sp, #96]
     618:	ldrh	w0, [x0, #6]
     61c:	cmp	w0, #0x0
     620:	b.eq	654 <init_symtab+0x12c>  // b.none
     624:	adrp	x0, 0 <__bswap_16>
     628:	add	x1, x0, #0x0
     62c:	ldr	x0, [sp, #88]
     630:	bl	0 <strcmp>
     634:	cmp	w0, #0x0
     638:	b.eq	654 <init_symtab+0x12c>  // b.none
     63c:	adrp	x0, 0 <__bswap_16>
     640:	add	x1, x0, #0x0
     644:	ldr	x0, [sp, #88]
     648:	bl	0 <strcmp>
     64c:	cmp	w0, #0x0
     650:	b.ne	664 <init_symtab+0x13c>  // b.any
     654:	ldr	x0, [sp, #112]
     658:	mov	w1, #0xffffffff            	// #-1
     65c:	str	w1, [x0]
     660:	b	7b0 <init_symtab+0x288>
     664:	ldr	x0, [sp, #96]
     668:	ldrb	w0, [x0, #4]
     66c:	and	w0, w0, #0xf
     670:	cmp	w0, #0x1
     674:	b.eq	684 <init_symtab+0x15c>  // b.none
     678:	cmp	w0, #0x2
     67c:	b.eq	6e8 <init_symtab+0x1c0>  // b.none
     680:	b	7a0 <init_symtab+0x278>
     684:	ldr	x0, [sp, #32]
     688:	ldr	w0, [x0, #24]
     68c:	ldr	w1, [sp, #108]
     690:	cmp	w1, w0
     694:	b.cs	6bc <init_symtab+0x194>  // b.hs, b.nlast
     698:	ldr	x0, [sp, #96]
     69c:	ldrh	w1, [x0, #6]
     6a0:	mov	w0, #0xfff1                	// #65521
     6a4:	cmp	w1, w0
     6a8:	b.ne	6cc <init_symtab+0x1a4>  // b.any
     6ac:	ldr	x0, [sp, #96]
     6b0:	ldr	x0, [x0, #8]
     6b4:	cmp	x0, #0x0
     6b8:	b.ne	6cc <init_symtab+0x1a4>  // b.any
     6bc:	ldr	x0, [sp, #112]
     6c0:	mov	w1, #0xffffffff            	// #-1
     6c4:	str	w1, [x0]
     6c8:	b	7b0 <init_symtab+0x288>
     6cc:	ldr	x0, [sp, #112]
     6d0:	ldr	w1, [sp, #108]
     6d4:	str	w1, [x0]
     6d8:	ldr	w0, [sp, #108]
     6dc:	add	w0, w0, #0x4
     6e0:	str	w0, [sp, #108]
     6e4:	b	7b0 <init_symtab+0x288>
     6e8:	ldr	x0, [sp, #32]
     6ec:	ldr	w0, [x0, #28]
     6f0:	ldr	w1, [sp, #104]
     6f4:	cmp	w1, w0
     6f8:	b.cc	70c <init_symtab+0x1e4>  // b.lo, b.ul, b.last
     6fc:	ldr	x0, [sp, #112]
     700:	mov	w1, #0xffffffff            	// #-1
     704:	str	w1, [x0]
     708:	b	7b0 <init_symtab+0x288>
     70c:	ldr	x0, [sp, #112]
     710:	ldr	w1, [sp, #104]
     714:	str	w1, [x0]
     718:	ldr	x0, [sp, #40]
     71c:	ldr	x0, [x0, #408]
     720:	mov	x1, x0
     724:	ldr	w0, [sp, #104]
     728:	add	x0, x1, x0
     72c:	ldr	w0, [x0]
     730:	str	w0, [sp, #76]
     734:	ldr	x0, [sp, #40]
     738:	ldr	x0, [x0]
     73c:	ldr	x1, [x0, #16]
     740:	ldr	w0, [sp, #76]
     744:	blr	x1
     748:	str	w0, [sp, #72]
     74c:	ldr	x0, [sp, #40]
     750:	ldr	x0, [x0]
     754:	ldr	x1, [x0]
     758:	ldr	w0, [sp, #76]
     75c:	blr	x1
     760:	cmp	w0, #0x0
     764:	b.ne	784 <init_symtab+0x25c>  // b.any
     768:	ldr	w0, [sp, #72]
     76c:	cmp	w0, #0x0
     770:	b.ne	784 <init_symtab+0x25c>  // b.any
     774:	ldr	w0, [sp, #104]
     778:	add	w0, w0, #0x4
     77c:	str	w0, [sp, #104]
     780:	b	7b0 <init_symtab+0x288>
     784:	ldr	w0, [sp, #72]
     788:	add	w0, w0, #0x2
     78c:	lsl	w0, w0, #2
     790:	ldr	w1, [sp, #104]
     794:	add	w0, w1, w0
     798:	str	w0, [sp, #104]
     79c:	b	7b0 <init_symtab+0x288>
     7a0:	ldr	x0, [sp, #112]
     7a4:	mov	w1, #0xffffffff            	// #-1
     7a8:	str	w1, [x0]
     7ac:	nop
     7b0:	ldr	x0, [sp, #112]
     7b4:	add	x0, x0, #0x4
     7b8:	str	x0, [sp, #112]
     7bc:	ldr	x0, [sp, #24]
     7c0:	ldr	x0, [x0, #24]
     7c4:	ldr	x1, [sp, #120]
     7c8:	add	x0, x1, x0
     7cc:	str	x0, [sp, #120]
     7d0:	ldr	x1, [sp, #112]
     7d4:	ldr	x0, [sp, #80]
     7d8:	cmp	x1, x0
     7dc:	b.cc	58c <init_symtab+0x64>  // b.lo, b.ul, b.last
     7e0:	ldr	x0, [sp, #40]
     7e4:	ldr	x0, [x0, #432]
     7e8:	mov	x1, x0
     7ec:	adrp	x0, 0 <__bswap_16>
     7f0:	add	x0, x0, #0x0
     7f4:	bl	0 <ctf_dprintf>
     7f8:	mov	w0, #0x0                   	// #0
     7fc:	ldp	x29, x30, [sp], #128
     800:	ret

0000000000000804 <ctf_set_base>:
     804:	stp	x29, x30, [sp, #-48]!
     808:	mov	x29, sp
     80c:	str	x0, [sp, #40]
     810:	str	x1, [sp, #32]
     814:	str	x2, [sp, #24]
     818:	ldr	x0, [sp, #40]
     81c:	ldr	x1, [x0, #408]
     820:	ldr	x0, [sp, #40]
     824:	ldr	x0, [x0, #392]
     828:	sub	x0, x1, x0
     82c:	mov	x1, x0
     830:	ldr	x0, [sp, #24]
     834:	add	x1, x0, x1
     838:	ldr	x0, [sp, #40]
     83c:	str	x1, [x0, #408]
     840:	ldr	x0, [sp, #40]
     844:	ldr	x1, [sp, #24]
     848:	str	x1, [x0, #392]
     84c:	ldr	x0, [sp, #40]
     850:	ldr	x1, [x0, #408]
     854:	ldr	x0, [sp, #32]
     858:	ldr	w0, [x0, #36]
     85c:	mov	w0, w0
     860:	add	x1, x1, x0
     864:	ldr	x0, [sp, #40]
     868:	str	x1, [x0, #464]
     86c:	ldr	x0, [sp, #32]
     870:	ldr	w1, [x0, #40]
     874:	ldr	x0, [sp, #32]
     878:	ldr	w0, [x0, #36]
     87c:	sub	w0, w1, w0
     880:	lsr	w0, w0, #3
     884:	mov	w1, w0
     888:	ldr	x0, [sp, #40]
     88c:	str	x1, [x0, #472]
     890:	ldr	x0, [sp, #40]
     894:	ldr	x1, [x0, #408]
     898:	ldr	x0, [sp, #32]
     89c:	ldr	w0, [x0, #44]
     8a0:	mov	w0, w0
     8a4:	add	x1, x1, x0
     8a8:	ldr	x0, [sp, #40]
     8ac:	str	x1, [x0, #336]
     8b0:	ldr	x0, [sp, #32]
     8b4:	ldr	w0, [x0, #48]
     8b8:	mov	w1, w0
     8bc:	ldr	x0, [sp, #40]
     8c0:	str	x1, [x0, #344]
     8c4:	ldr	x0, [sp, #32]
     8c8:	ldr	w0, [x0, #4]
     8cc:	cmp	w0, #0x0
     8d0:	b.eq	8f4 <ctf_set_base+0xf0>  // b.none
     8d4:	ldr	x0, [sp, #32]
     8d8:	ldr	w0, [x0, #4]
     8dc:	mov	w1, w0
     8e0:	ldr	x0, [sp, #40]
     8e4:	bl	0 <ctf_strptr>
     8e8:	mov	x1, x0
     8ec:	ldr	x0, [sp, #40]
     8f0:	str	x1, [x0, #520]
     8f4:	ldr	x0, [sp, #32]
     8f8:	ldr	w0, [x0, #8]
     8fc:	cmp	w0, #0x0
     900:	b.eq	924 <ctf_set_base+0x120>  // b.none
     904:	ldr	x0, [sp, #32]
     908:	ldr	w0, [x0, #8]
     90c:	mov	w1, w0
     910:	ldr	x0, [sp, #40]
     914:	bl	0 <ctf_strptr>
     918:	mov	x1, x0
     91c:	ldr	x0, [sp, #40]
     920:	str	x1, [x0, #528]
     924:	ldr	x0, [sp, #32]
     928:	ldr	w0, [x0, #12]
     92c:	cmp	w0, #0x0
     930:	b.eq	954 <ctf_set_base+0x150>  // b.none
     934:	ldr	x0, [sp, #32]
     938:	ldr	w0, [x0, #12]
     93c:	mov	w1, w0
     940:	ldr	x0, [sp, #40]
     944:	bl	0 <ctf_strptr>
     948:	mov	x1, x0
     94c:	ldr	x0, [sp, #40]
     950:	str	x1, [x0, #496]
     954:	ldr	x0, [sp, #40]
     958:	ldr	x0, [x0, #496]
     95c:	cmp	x0, #0x0
     960:	b.eq	97c <ctf_set_base+0x178>  // b.none
     964:	ldr	x0, [sp, #40]
     968:	ldr	x0, [x0, #496]
     96c:	mov	x1, x0
     970:	adrp	x0, 0 <__bswap_16>
     974:	add	x0, x0, #0x0
     978:	bl	0 <ctf_dprintf>
     97c:	ldr	x0, [sp, #40]
     980:	ldr	x0, [x0, #528]
     984:	cmp	x0, #0x0
     988:	b.eq	9c8 <ctf_set_base+0x1c4>  // b.none
     98c:	ldr	x0, [sp, #40]
     990:	ldr	x1, [x0, #528]
     994:	ldr	x0, [sp, #40]
     998:	ldr	x0, [x0, #520]
     99c:	cmp	x0, #0x0
     9a0:	b.eq	9b0 <ctf_set_base+0x1ac>  // b.none
     9a4:	ldr	x0, [sp, #40]
     9a8:	ldr	x0, [x0, #520]
     9ac:	b	9b8 <ctf_set_base+0x1b4>
     9b0:	adrp	x0, 0 <__bswap_16>
     9b4:	add	x0, x0, #0x0
     9b8:	mov	x2, x0
     9bc:	adrp	x0, 0 <__bswap_16>
     9c0:	add	x0, x0, #0x0
     9c4:	bl	0 <ctf_dprintf>
     9c8:	nop
     9cc:	ldp	x29, x30, [sp], #48
     9d0:	ret

00000000000009d4 <ctf_set_version>:
     9d4:	sub	sp, sp, #0x20
     9d8:	str	x0, [sp, #24]
     9dc:	str	x1, [sp, #16]
     9e0:	str	w2, [sp, #12]
     9e4:	ldr	x0, [sp, #24]
     9e8:	ldr	w1, [sp, #12]
     9ec:	str	w1, [x0, #560]
     9f0:	ldr	w0, [sp, #12]
     9f4:	and	w1, w0, #0xff
     9f8:	ldr	x0, [sp, #16]
     9fc:	strb	w1, [x0, #2]
     a00:	ldrsw	x1, [sp, #12]
     a04:	mov	x0, x1
     a08:	lsl	x0, x0, #2
     a0c:	add	x0, x0, x1
     a10:	lsl	x0, x0, #3
     a14:	adrp	x1, 0 <__bswap_16>
     a18:	add	x1, x1, #0x0
     a1c:	add	x1, x0, x1
     a20:	ldr	x0, [sp, #24]
     a24:	str	x1, [x0]
     a28:	nop
     a2c:	add	sp, sp, #0x20
     a30:	ret

0000000000000a34 <upgrade_header>:
     a34:	sub	sp, sp, #0x20
     a38:	str	x0, [sp, #8]
     a3c:	ldr	x0, [sp, #8]
     a40:	str	x0, [sp, #24]
     a44:	ldr	x0, [sp, #24]
     a48:	ldr	w1, [x0, #36]
     a4c:	ldr	x0, [sp, #8]
     a50:	str	w1, [x0, #48]
     a54:	ldr	x0, [sp, #24]
     a58:	ldr	w1, [x0, #32]
     a5c:	ldr	x0, [sp, #8]
     a60:	str	w1, [x0, #44]
     a64:	ldr	x0, [sp, #24]
     a68:	ldr	w1, [x0, #28]
     a6c:	ldr	x0, [sp, #8]
     a70:	str	w1, [x0, #40]
     a74:	ldr	x0, [sp, #24]
     a78:	ldr	w1, [x0, #24]
     a7c:	ldr	x0, [sp, #8]
     a80:	str	w1, [x0, #36]
     a84:	ldr	x0, [sp, #8]
     a88:	ldr	w1, [x0, #36]
     a8c:	ldr	x0, [sp, #8]
     a90:	str	w1, [x0, #32]
     a94:	ldr	x0, [sp, #8]
     a98:	ldr	w1, [x0, #32]
     a9c:	ldr	x0, [sp, #8]
     aa0:	str	w1, [x0, #28]
     aa4:	ldr	x0, [sp, #24]
     aa8:	ldr	w1, [x0, #20]
     aac:	ldr	x0, [sp, #8]
     ab0:	str	w1, [x0, #24]
     ab4:	ldr	x0, [sp, #24]
     ab8:	ldr	w1, [x0, #16]
     abc:	ldr	x0, [sp, #8]
     ac0:	str	w1, [x0, #20]
     ac4:	ldr	x0, [sp, #24]
     ac8:	ldr	w1, [x0, #12]
     acc:	ldr	x0, [sp, #8]
     ad0:	str	w1, [x0, #16]
     ad4:	ldr	x0, [sp, #8]
     ad8:	str	wzr, [x0, #12]
     adc:	nop
     ae0:	add	sp, sp, #0x20
     ae4:	ret

0000000000000ae8 <upgrade_types_v1>:
     ae8:	stp	x29, x30, [sp, #-304]!
     aec:	mov	x29, sp
     af0:	str	x0, [sp, #24]
     af4:	str	x1, [sp, #16]
     af8:	ldr	x0, [sp, #24]
     afc:	ldr	x0, [x0, #400]
     b00:	str	x0, [sp, #200]
     b04:	str	xzr, [sp, #296]
     b08:	ldr	x0, [sp, #24]
     b0c:	ldr	x1, [x0, #408]
     b10:	ldr	x0, [sp, #16]
     b14:	ldr	w0, [x0, #40]
     b18:	mov	w0, w0
     b1c:	add	x0, x1, x0
     b20:	str	x0, [sp, #192]
     b24:	ldr	x0, [sp, #24]
     b28:	ldr	x1, [x0, #408]
     b2c:	ldr	x0, [sp, #16]
     b30:	ldr	w0, [x0, #44]
     b34:	mov	w0, w0
     b38:	add	x0, x1, x0
     b3c:	str	x0, [sp, #184]
     b40:	ldr	x0, [sp, #192]
     b44:	str	x0, [sp, #288]
     b48:	b	c34 <upgrade_types_v1+0x14c>
     b4c:	ldr	x0, [sp, #288]
     b50:	ldrh	w0, [x0, #4]
     b54:	lsr	w0, w0, #11
     b58:	strh	w0, [sp, #86]
     b5c:	ldr	x0, [sp, #288]
     b60:	ldrh	w0, [x0, #4]
     b64:	and	x0, x0, #0xffff
     b68:	and	x0, x0, #0x3ff
     b6c:	str	x0, [sp, #72]
     b70:	add	x0, sp, #0x40
     b74:	mov	x3, x0
     b78:	mov	x2, #0x0                   	// #0
     b7c:	ldr	x1, [sp, #288]
     b80:	ldr	x0, [sp, #24]
     b84:	bl	1a4 <get_ctt_size_v1>
     b88:	str	x0, [sp, #144]
     b8c:	ldr	x2, [sp, #72]
     b90:	ldr	x1, [sp, #144]
     b94:	ldrh	w0, [sp, #86]
     b98:	bl	3ec <get_vbytes_v1>
     b9c:	str	x0, [sp, #136]
     ba0:	add	x0, sp, #0x38
     ba4:	mov	x3, x0
     ba8:	mov	x2, #0x0                   	// #0
     bac:	ldr	x1, [sp, #288]
     bb0:	ldr	x0, [sp, #24]
     bb4:	bl	22c <get_ctt_size_v2_unconverted>
     bb8:	ldr	x2, [sp, #72]
     bbc:	ldr	x1, [sp, #144]
     bc0:	ldrh	w0, [sp, #86]
     bc4:	bl	484 <get_vbytes_v2>
     bc8:	str	x0, [sp, #120]
     bcc:	ldr	x0, [sp, #136]
     bd0:	cmp	x0, #0x0
     bd4:	b.lt	be4 <upgrade_types_v1+0xfc>  // b.tstop
     bd8:	ldr	x0, [sp, #144]
     bdc:	cmp	x0, #0x0
     be0:	b.ge	bec <upgrade_types_v1+0x104>  // b.tcont
     be4:	mov	w0, #0x3ef                 	// #1007
     be8:	b	12fc <upgrade_types_v1+0x814>
     bec:	ldr	x1, [sp, #56]
     bf0:	ldr	x0, [sp, #64]
     bf4:	sub	x0, x1, x0
     bf8:	ldr	x1, [sp, #296]
     bfc:	add	x0, x1, x0
     c00:	str	x0, [sp, #296]
     c04:	ldr	x1, [sp, #120]
     c08:	ldr	x0, [sp, #136]
     c0c:	sub	x0, x1, x0
     c10:	ldr	x1, [sp, #296]
     c14:	add	x0, x1, x0
     c18:	str	x0, [sp, #296]
     c1c:	ldr	x0, [sp, #288]
     c20:	ldr	x1, [sp, #64]
     c24:	add	x1, x0, x1
     c28:	ldr	x0, [sp, #136]
     c2c:	add	x0, x1, x0
     c30:	str	x0, [sp, #288]
     c34:	ldr	x1, [sp, #288]
     c38:	ldr	x0, [sp, #184]
     c3c:	cmp	x1, x0
     c40:	b.cc	b4c <upgrade_types_v1+0x64>  // b.lo, b.ul, b.last
     c44:	ldr	x0, [sp, #24]
     c48:	ldr	x1, [x0, #416]
     c4c:	ldr	x0, [sp, #296]
     c50:	add	x0, x1, x0
     c54:	bl	0 <malloc>
     c58:	str	x0, [sp, #176]
     c5c:	ldr	x0, [sp, #176]
     c60:	cmp	x0, #0x0
     c64:	b.ne	c70 <upgrade_types_v1+0x188>  // b.any
     c68:	mov	w0, #0x3f6                 	// #1014
     c6c:	b	12fc <upgrade_types_v1+0x814>
     c70:	ldr	x0, [sp, #24]
     c74:	ldr	x1, [x0, #408]
     c78:	ldr	x0, [sp, #16]
     c7c:	ldr	w0, [x0, #40]
     c80:	mov	w0, w0
     c84:	mov	x2, x0
     c88:	ldr	x0, [sp, #176]
     c8c:	bl	0 <memcpy>
     c90:	ldr	x0, [sp, #16]
     c94:	ldr	w0, [x0, #44]
     c98:	mov	w1, w0
     c9c:	ldr	x0, [sp, #296]
     ca0:	add	x0, x1, x0
     ca4:	ldr	x1, [sp, #176]
     ca8:	add	x3, x1, x0
     cac:	ldr	x0, [sp, #24]
     cb0:	ldr	x1, [x0, #408]
     cb4:	ldr	x0, [sp, #16]
     cb8:	ldr	w0, [x0, #44]
     cbc:	mov	w0, w0
     cc0:	add	x1, x1, x0
     cc4:	ldr	x0, [sp, #16]
     cc8:	ldr	w0, [x0, #48]
     ccc:	mov	w0, w0
     cd0:	mov	x2, x0
     cd4:	mov	x0, x3
     cd8:	bl	0 <memcpy>
     cdc:	ldr	x0, [sp, #16]
     ce0:	ldr	w0, [x0, #40]
     ce4:	mov	w0, w0
     ce8:	ldr	x1, [sp, #176]
     cec:	add	x3, x1, x0
     cf0:	ldr	x0, [sp, #16]
     cf4:	ldr	w1, [x0, #44]
     cf8:	ldr	x0, [sp, #16]
     cfc:	ldr	w0, [x0, #40]
     d00:	sub	w0, w1, w0
     d04:	mov	w1, w0
     d08:	ldr	x0, [sp, #296]
     d0c:	add	x0, x1, x0
     d10:	mov	x2, x0
     d14:	mov	w1, #0x0                   	// #0
     d18:	mov	x0, x3
     d1c:	bl	0 <memset>
     d20:	ldr	x0, [sp, #16]
     d24:	ldr	w0, [x0, #44]
     d28:	ldr	x1, [sp, #296]
     d2c:	add	w1, w0, w1
     d30:	ldr	x0, [sp, #16]
     d34:	str	w1, [x0, #44]
     d38:	ldr	x0, [sp, #24]
     d3c:	ldr	x1, [x0, #416]
     d40:	ldr	x0, [sp, #296]
     d44:	add	x1, x1, x0
     d48:	ldr	x0, [sp, #24]
     d4c:	str	x1, [x0, #416]
     d50:	ldr	x0, [sp, #16]
     d54:	ldr	w1, [x0, #44]
     d58:	ldr	x0, [sp, #16]
     d5c:	ldr	w0, [x0, #40]
     d60:	cmp	w1, w0
     d64:	b.cs	d88 <upgrade_types_v1+0x2a0>  // b.hs, b.nlast
     d68:	adrp	x0, 0 <__bswap_16>
     d6c:	add	x3, x0, #0x0
     d70:	mov	w2, #0x1d0                 	// #464
     d74:	adrp	x0, 0 <__bswap_16>
     d78:	add	x1, x0, #0x0
     d7c:	adrp	x0, 0 <__bswap_16>
     d80:	add	x0, x0, #0x0
     d84:	bl	0 <__assert_fail>
     d88:	ldr	x0, [sp, #24]
     d8c:	ldr	x1, [sp, #176]
     d90:	str	x1, [x0, #392]
     d94:	ldr	x0, [sp, #24]
     d98:	ldr	x1, [sp, #176]
     d9c:	str	x1, [x0, #408]
     da0:	ldr	x0, [sp, #24]
     da4:	ldr	x1, [sp, #176]
     da8:	str	x1, [x0, #400]
     dac:	ldr	x2, [sp, #176]
     db0:	ldr	x1, [sp, #16]
     db4:	ldr	x0, [sp, #24]
     db8:	bl	804 <ctf_set_base>
     dbc:	ldr	x0, [sp, #24]
     dc0:	ldr	x1, [x0, #408]
     dc4:	ldr	x0, [sp, #16]
     dc8:	ldr	w0, [x0, #40]
     dcc:	mov	w0, w0
     dd0:	add	x0, x1, x0
     dd4:	str	x0, [sp, #168]
     dd8:	ldr	x0, [sp, #192]
     ddc:	str	x0, [sp, #288]
     de0:	ldr	x0, [sp, #168]
     de4:	str	x0, [sp, #280]
     de8:	b	128c <upgrade_types_v1+0x7a4>
     dec:	ldr	x0, [sp, #288]
     df0:	ldrh	w0, [x0, #4]
     df4:	lsr	w0, w0, #11
     df8:	strh	w0, [sp, #166]
     dfc:	ldr	x0, [sp, #288]
     e00:	ldrh	w0, [x0, #4]
     e04:	asr	w0, w0, #10
     e08:	and	w0, w0, #0x1
     e0c:	str	w0, [sp, #160]
     e10:	ldr	x0, [sp, #288]
     e14:	ldrh	w0, [x0, #4]
     e18:	and	x0, x0, #0xffff
     e1c:	and	x0, x0, #0x3ff
     e20:	str	x0, [sp, #152]
     e24:	add	x0, sp, #0x40
     e28:	mov	x3, x0
     e2c:	mov	x2, #0x0                   	// #0
     e30:	ldr	x1, [sp, #288]
     e34:	ldr	x0, [sp, #24]
     e38:	bl	1a4 <get_ctt_size_v1>
     e3c:	str	x0, [sp, #144]
     e40:	ldr	x2, [sp, #152]
     e44:	ldr	x1, [sp, #144]
     e48:	ldrh	w0, [sp, #166]
     e4c:	bl	3ec <get_vbytes_v1>
     e50:	str	x0, [sp, #136]
     e54:	ldr	x0, [sp, #288]
     e58:	ldr	w1, [x0]
     e5c:	ldr	x0, [sp, #280]
     e60:	str	w1, [x0]
     e64:	ldrh	w0, [sp, #166]
     e68:	lsl	w1, w0, #26
     e6c:	ldr	w0, [sp, #160]
     e70:	cmp	w0, #0x0
     e74:	b.eq	e80 <upgrade_types_v1+0x398>  // b.none
     e78:	mov	w0, #0x2000000             	// #33554432
     e7c:	b	e84 <upgrade_types_v1+0x39c>
     e80:	mov	w0, #0x0                   	// #0
     e84:	orr	w0, w0, w1
     e88:	mov	w1, w0
     e8c:	ldr	x0, [sp, #152]
     e90:	and	w0, w0, #0xffffff
     e94:	orr	w1, w1, w0
     e98:	ldr	x0, [sp, #280]
     e9c:	str	w1, [x0, #4]
     ea0:	ldrh	w0, [sp, #166]
     ea4:	cmp	w0, #0xd
     ea8:	cset	w1, hi  // hi = pmore
     eac:	and	w1, w1, #0xff
     eb0:	cmp	w1, #0x0
     eb4:	b.ne	f5c <upgrade_types_v1+0x474>  // b.any
     eb8:	mov	x1, #0x1                   	// #1
     ebc:	lsl	x0, x1, x0
     ec0:	mov	x1, #0x1d7                 	// #471
     ec4:	and	x1, x0, x1
     ec8:	cmp	x1, #0x0
     ecc:	cset	w1, ne  // ne = any
     ed0:	and	w1, w1, #0xff
     ed4:	cmp	w1, #0x0
     ed8:	b.ne	f10 <upgrade_types_v1+0x428>  // b.any
     edc:	mov	x1, #0x3e28                	// #15912
     ee0:	and	x0, x0, x1
     ee4:	cmp	x0, #0x0
     ee8:	cset	w0, ne  // ne = any
     eec:	and	w0, w0, #0xff
     ef0:	cmp	w0, #0x0
     ef4:	b.eq	f5c <upgrade_types_v1+0x474>  // b.none
     ef8:	ldr	x0, [sp, #288]
     efc:	ldrh	w0, [x0, #6]
     f00:	mov	w1, w0
     f04:	ldr	x0, [sp, #280]
     f08:	str	w1, [x0, #8]
     f0c:	b	f5c <upgrade_types_v1+0x474>
     f10:	ldr	x1, [sp, #144]
     f14:	mov	x0, #0xfffffffe            	// #4294967294
     f18:	cmp	x1, x0
     f1c:	b.hi	f34 <upgrade_types_v1+0x44c>  // b.pmore
     f20:	ldr	x0, [sp, #144]
     f24:	mov	w1, w0
     f28:	ldr	x0, [sp, #280]
     f2c:	str	w1, [x0, #8]
     f30:	b	f58 <upgrade_types_v1+0x470>
     f34:	ldr	x0, [sp, #144]
     f38:	lsr	x0, x0, #32
     f3c:	mov	w1, w0
     f40:	ldr	x0, [sp, #280]
     f44:	str	w1, [x0, #12]
     f48:	ldr	x0, [sp, #144]
     f4c:	mov	w1, w0
     f50:	ldr	x0, [sp, #280]
     f54:	str	w1, [x0, #16]
     f58:	nop
     f5c:	add	x0, sp, #0x38
     f60:	mov	x3, x0
     f64:	mov	x2, #0x0                   	// #0
     f68:	ldr	x1, [sp, #280]
     f6c:	ldr	x0, [sp, #24]
     f70:	bl	2b4 <get_ctt_size_v2>
     f74:	str	x0, [sp, #128]
     f78:	ldr	x2, [sp, #152]
     f7c:	ldr	x1, [sp, #128]
     f80:	ldrh	w0, [sp, #166]
     f84:	bl	484 <get_vbytes_v2>
     f88:	str	x0, [sp, #120]
     f8c:	ldr	x1, [sp, #144]
     f90:	ldr	x0, [sp, #128]
     f94:	cmp	x1, x0
     f98:	b.eq	fbc <upgrade_types_v1+0x4d4>  // b.none
     f9c:	adrp	x0, 0 <__bswap_16>
     fa0:	add	x3, x0, #0x0
     fa4:	mov	w2, #0x210                 	// #528
     fa8:	adrp	x0, 0 <__bswap_16>
     fac:	add	x1, x0, #0x0
     fb0:	adrp	x0, 0 <__bswap_16>
     fb4:	add	x0, x0, #0x0
     fb8:	bl	0 <__assert_fail>
     fbc:	ldr	x0, [sp, #288]
     fc0:	ldr	x1, [sp, #64]
     fc4:	add	x0, x0, x1
     fc8:	str	x0, [sp, #112]
     fcc:	ldr	x0, [sp, #280]
     fd0:	ldr	x1, [sp, #56]
     fd4:	add	x0, x0, x1
     fd8:	str	x0, [sp, #104]
     fdc:	ldrh	w0, [sp, #166]
     fe0:	cmp	w0, #0x7
     fe4:	b.gt	1218 <upgrade_types_v1+0x730>
     fe8:	cmp	w0, #0x6
     fec:	b.ge	1050 <upgrade_types_v1+0x568>  // b.tcont
     ff0:	cmp	w0, #0x4
     ff4:	b.eq	1004 <upgrade_types_v1+0x51c>  // b.none
     ff8:	cmp	w0, #0x5
     ffc:	b.eq	11b8 <upgrade_types_v1+0x6d0>  // b.none
    1000:	b	1218 <upgrade_types_v1+0x730>
    1004:	ldr	x0, [sp, #112]
    1008:	str	x0, [sp, #96]
    100c:	ldr	x0, [sp, #104]
    1010:	str	x0, [sp, #88]
    1014:	ldr	x0, [sp, #96]
    1018:	ldrh	w0, [x0]
    101c:	mov	w1, w0
    1020:	ldr	x0, [sp, #88]
    1024:	str	w1, [x0]
    1028:	ldr	x0, [sp, #96]
    102c:	ldrh	w0, [x0, #2]
    1030:	mov	w1, w0
    1034:	ldr	x0, [sp, #88]
    1038:	str	w1, [x0, #4]
    103c:	ldr	x0, [sp, #96]
    1040:	ldr	w1, [x0, #4]
    1044:	ldr	x0, [sp, #88]
    1048:	str	w1, [x0, #8]
    104c:	b	125c <upgrade_types_v1+0x774>
    1050:	ldr	x0, [sp, #112]
    1054:	str	x0, [sp, #272]
    1058:	ldr	x0, [sp, #272]
    105c:	str	x0, [sp, #264]
    1060:	ldr	x0, [sp, #104]
    1064:	str	x0, [sp, #256]
    1068:	ldr	x0, [sp, #256]
    106c:	str	x0, [sp, #248]
    1070:	ldr	x0, [sp, #152]
    1074:	str	x0, [sp, #240]
    1078:	b	11a8 <upgrade_types_v1+0x6c0>
    107c:	ldr	x1, [sp, #144]
    1080:	mov	x0, #0x1fff                	// #8191
    1084:	cmp	x1, x0
    1088:	b.gt	10b8 <upgrade_types_v1+0x5d0>
    108c:	ldr	x0, [sp, #272]
    1090:	ldrh	w0, [x0, #6]
    1094:	and	x0, x0, #0xffff
    1098:	str	x0, [sp, #232]
    109c:	ldr	x0, [sp, #272]
    10a0:	ldr	w0, [x0]
    10a4:	str	w0, [sp, #40]
    10a8:	ldr	x0, [sp, #272]
    10ac:	ldrh	w0, [x0, #4]
    10b0:	str	w0, [sp, #48]
    10b4:	b	10f4 <upgrade_types_v1+0x60c>
    10b8:	ldr	x0, [sp, #264]
    10bc:	ldr	w0, [x0, #8]
    10c0:	mov	w0, w0
    10c4:	lsl	x1, x0, #32
    10c8:	ldr	x0, [sp, #264]
    10cc:	ldr	w0, [x0, #12]
    10d0:	mov	w0, w0
    10d4:	orr	x0, x1, x0
    10d8:	str	x0, [sp, #232]
    10dc:	ldr	x0, [sp, #264]
    10e0:	ldr	w0, [x0]
    10e4:	str	w0, [sp, #40]
    10e8:	ldr	x0, [sp, #264]
    10ec:	ldrh	w0, [x0, #4]
    10f0:	str	w0, [sp, #48]
    10f4:	ldr	x1, [sp, #144]
    10f8:	mov	x0, #0x1fffffff            	// #536870911
    10fc:	cmp	x1, x0
    1100:	b.gt	1130 <upgrade_types_v1+0x648>
    1104:	ldr	w1, [sp, #40]
    1108:	ldr	x0, [sp, #256]
    110c:	str	w1, [x0]
    1110:	ldr	w1, [sp, #48]
    1114:	ldr	x0, [sp, #256]
    1118:	str	w1, [x0, #8]
    111c:	ldr	x0, [sp, #232]
    1120:	mov	w1, w0
    1124:	ldr	x0, [sp, #256]
    1128:	str	w1, [x0, #4]
    112c:	b	116c <upgrade_types_v1+0x684>
    1130:	ldr	w1, [sp, #40]
    1134:	ldr	x0, [sp, #248]
    1138:	str	w1, [x0]
    113c:	ldr	w1, [sp, #48]
    1140:	ldr	x0, [sp, #248]
    1144:	str	w1, [x0, #8]
    1148:	ldr	x0, [sp, #232]
    114c:	lsr	x0, x0, #32
    1150:	mov	w1, w0
    1154:	ldr	x0, [sp, #248]
    1158:	str	w1, [x0, #4]
    115c:	ldr	x0, [sp, #232]
    1160:	mov	w1, w0
    1164:	ldr	x0, [sp, #248]
    1168:	str	w1, [x0, #12]
    116c:	ldr	x0, [sp, #240]
    1170:	sub	x0, x0, #0x1
    1174:	str	x0, [sp, #240]
    1178:	ldr	x0, [sp, #272]
    117c:	add	x0, x0, #0x8
    1180:	str	x0, [sp, #272]
    1184:	ldr	x0, [sp, #264]
    1188:	add	x0, x0, #0x10
    118c:	str	x0, [sp, #264]
    1190:	ldr	x0, [sp, #256]
    1194:	add	x0, x0, #0xc
    1198:	str	x0, [sp, #256]
    119c:	ldr	x0, [sp, #248]
    11a0:	add	x0, x0, #0x10
    11a4:	str	x0, [sp, #248]
    11a8:	ldr	x0, [sp, #240]
    11ac:	cmp	x0, #0x0
    11b0:	b.ne	107c <upgrade_types_v1+0x594>  // b.any
    11b4:	b	125c <upgrade_types_v1+0x774>
    11b8:	ldr	x0, [sp, #112]
    11bc:	str	x0, [sp, #216]
    11c0:	ldr	x0, [sp, #104]
    11c4:	str	x0, [sp, #208]
    11c8:	ldr	x0, [sp, #152]
    11cc:	str	x0, [sp, #224]
    11d0:	b	120c <upgrade_types_v1+0x724>
    11d4:	ldr	x0, [sp, #216]
    11d8:	ldrh	w0, [x0]
    11dc:	mov	w1, w0
    11e0:	ldr	x0, [sp, #208]
    11e4:	str	w1, [x0]
    11e8:	ldr	x0, [sp, #224]
    11ec:	sub	x0, x0, #0x1
    11f0:	str	x0, [sp, #224]
    11f4:	ldr	x0, [sp, #216]
    11f8:	add	x0, x0, #0x2
    11fc:	str	x0, [sp, #216]
    1200:	ldr	x0, [sp, #208]
    1204:	add	x0, x0, #0x4
    1208:	str	x0, [sp, #208]
    120c:	ldr	x0, [sp, #224]
    1210:	cmp	x0, #0x0
    1214:	b.ne	11d4 <upgrade_types_v1+0x6ec>  // b.any
    1218:	ldr	x1, [sp, #136]
    121c:	ldr	x0, [sp, #120]
    1220:	cmp	x1, x0
    1224:	b.eq	1248 <upgrade_types_v1+0x760>  // b.none
    1228:	adrp	x0, 0 <__bswap_16>
    122c:	add	x3, x0, #0x0
    1230:	mov	w2, #0x25c                 	// #604
    1234:	adrp	x0, 0 <__bswap_16>
    1238:	add	x1, x0, #0x0
    123c:	adrp	x0, 0 <__bswap_16>
    1240:	add	x0, x0, #0x0
    1244:	bl	0 <__assert_fail>
    1248:	ldr	x0, [sp, #136]
    124c:	mov	x2, x0
    1250:	ldr	x1, [sp, #112]
    1254:	ldr	x0, [sp, #104]
    1258:	bl	0 <memcpy>
    125c:	ldr	x0, [sp, #288]
    1260:	ldr	x1, [sp, #64]
    1264:	add	x1, x0, x1
    1268:	ldr	x0, [sp, #136]
    126c:	add	x0, x1, x0
    1270:	str	x0, [sp, #288]
    1274:	ldr	x0, [sp, #280]
    1278:	ldr	x1, [sp, #56]
    127c:	add	x1, x0, x1
    1280:	ldr	x0, [sp, #120]
    1284:	add	x0, x1, x0
    1288:	str	x0, [sp, #280]
    128c:	ldr	x1, [sp, #288]
    1290:	ldr	x0, [sp, #184]
    1294:	cmp	x1, x0
    1298:	b.cc	dec <upgrade_types_v1+0x304>  // b.lo, b.ul, b.last
    129c:	ldr	x0, [sp, #280]
    12a0:	ldr	x1, [sp, #24]
    12a4:	ldr	x1, [x1, #408]
    12a8:	sub	x1, x0, x1
    12ac:	ldr	x0, [sp, #16]
    12b0:	ldr	w0, [x0, #44]
    12b4:	mov	w0, w0
    12b8:	cmp	x1, x0
    12bc:	b.eq	12e0 <upgrade_types_v1+0x7f8>  // b.none
    12c0:	adrp	x0, 0 <__bswap_16>
    12c4:	add	x3, x0, #0x0
    12c8:	mov	w2, #0x265                 	// #613
    12cc:	adrp	x0, 0 <__bswap_16>
    12d0:	add	x1, x0, #0x0
    12d4:	adrp	x0, 0 <__bswap_16>
    12d8:	add	x0, x0, #0x0
    12dc:	bl	0 <__assert_fail>
    12e0:	mov	w2, #0x2                   	// #2
    12e4:	ldr	x1, [sp, #16]
    12e8:	ldr	x0, [sp, #24]
    12ec:	bl	9d4 <ctf_set_version>
    12f0:	ldr	x0, [sp, #200]
    12f4:	bl	0 <free>
    12f8:	mov	w0, #0x0                   	// #0
    12fc:	ldp	x29, x30, [sp], #304
    1300:	ret

0000000000001304 <upgrade_types>:
    1304:	stp	x29, x30, [sp, #-32]!
    1308:	mov	x29, sp
    130c:	str	x0, [sp, #24]
    1310:	str	x1, [sp, #16]
    1314:	ldr	x0, [sp, #16]
    1318:	ldrb	w0, [x0, #2]
    131c:	cmp	w0, #0x1
    1320:	b.eq	1330 <upgrade_types+0x2c>  // b.none
    1324:	cmp	w0, #0x2
    1328:	b.eq	133c <upgrade_types+0x38>  // b.none
    132c:	b	1348 <upgrade_types+0x44>
    1330:	ldr	x1, [sp, #16]
    1334:	ldr	x0, [sp, #24]
    1338:	bl	ae8 <upgrade_types_v1>
    133c:	ldr	x0, [sp, #24]
    1340:	mov	w1, #0x7fff                	// #32767
    1344:	str	w1, [x0, #544]
    1348:	mov	w0, #0x0                   	// #0
    134c:	ldp	x29, x30, [sp], #32
    1350:	ret

0000000000001354 <init_types>:
    1354:	sub	sp, sp, #0x2c0
    1358:	stp	x29, x30, [sp]
    135c:	mov	x29, sp
    1360:	str	x0, [sp, #24]
    1364:	str	x1, [sp, #16]
    1368:	add	x0, sp, #0x40
    136c:	mov	x1, #0x200                 	// #512
    1370:	mov	x2, x1
    1374:	mov	w1, #0x0                   	// #0
    1378:	bl	0 <memset>
    137c:	ldr	x0, [sp, #16]
    1380:	ldr	w0, [x0, #8]
    1384:	cmp	w0, #0x0
    1388:	cset	w0, ne  // ne = any
    138c:	and	w0, w0, #0xff
    1390:	str	w0, [sp, #668]
    1394:	str	wzr, [sp, #676]
    1398:	str	wzr, [sp, #672]
    139c:	ldr	x0, [sp, #24]
    13a0:	ldr	w0, [x0, #552]
    13a4:	and	w0, w0, #0x2
    13a8:	cmp	w0, #0x0
    13ac:	b.eq	13d0 <init_types+0x7c>  // b.none
    13b0:	adrp	x0, 0 <__bswap_16>
    13b4:	add	x3, x0, #0x0
    13b8:	mov	w2, #0x29c                 	// #668
    13bc:	adrp	x0, 0 <__bswap_16>
    13c0:	add	x1, x0, #0x0
    13c4:	adrp	x0, 0 <__bswap_16>
    13c8:	add	x0, x0, #0x0
    13cc:	bl	0 <__assert_fail>
    13d0:	ldr	x0, [sp, #24]
    13d4:	ldr	w0, [x0, #560]
    13d8:	cmp	w0, #0x1
    13dc:	cset	w0, eq  // eq = none
    13e0:	and	w0, w0, #0xff
    13e4:	and	x0, x0, #0xff
    13e8:	cmp	x0, #0x0
    13ec:	b.eq	1414 <init_types+0xc0>  // b.none
    13f0:	ldr	x1, [sp, #16]
    13f4:	ldr	x0, [sp, #24]
    13f8:	bl	1304 <upgrade_types>
    13fc:	str	w0, [sp, #664]
    1400:	ldr	w0, [sp, #664]
    1404:	cmp	w0, #0x0
    1408:	b.eq	1414 <init_types+0xc0>  // b.none
    140c:	ldr	w0, [sp, #664]
    1410:	b	20c4 <init_types+0xd70>
    1414:	ldr	x0, [sp, #24]
    1418:	ldr	x1, [x0, #408]
    141c:	ldr	x0, [sp, #16]
    1420:	ldr	w0, [x0, #40]
    1424:	mov	w0, w0
    1428:	add	x0, x1, x0
    142c:	str	x0, [sp, #656]
    1430:	ldr	x0, [sp, #24]
    1434:	ldr	x1, [x0, #408]
    1438:	ldr	x0, [sp, #16]
    143c:	ldr	w0, [x0, #44]
    1440:	mov	w0, w0
    1444:	add	x0, x1, x0
    1448:	str	x0, [sp, #648]
    144c:	ldr	x0, [sp, #656]
    1450:	str	x0, [sp, #696]
    1454:	b	15a4 <init_types+0x250>
    1458:	ldr	x0, [sp, #24]
    145c:	ldr	x0, [x0]
    1460:	ldr	x1, [x0]
    1464:	ldr	x0, [sp, #696]
    1468:	ldr	w0, [x0, #4]
    146c:	blr	x1
    1470:	strh	w0, [sp, #598]
    1474:	ldr	x0, [sp, #24]
    1478:	ldr	x0, [x0]
    147c:	ldr	x1, [x0, #16]
    1480:	ldr	x0, [sp, #696]
    1484:	ldr	w0, [x0, #4]
    1488:	blr	x1
    148c:	mov	w0, w0
    1490:	str	x0, [sp, #584]
    1494:	add	x1, sp, #0x30
    1498:	add	x0, sp, #0x38
    149c:	mov	x3, x1
    14a0:	mov	x2, x0
    14a4:	ldr	x1, [sp, #696]
    14a8:	ldr	x0, [sp, #24]
    14ac:	bl	34 <ctf_get_ctt_size>
    14b0:	ldr	x0, [sp, #24]
    14b4:	ldr	x0, [x0]
    14b8:	ldr	x3, [x0, #32]
    14bc:	ldr	x0, [sp, #56]
    14c0:	ldr	x2, [sp, #584]
    14c4:	mov	x1, x0
    14c8:	ldrh	w0, [sp, #598]
    14cc:	blr	x3
    14d0:	str	x0, [sp, #576]
    14d4:	ldr	x0, [sp, #576]
    14d8:	cmp	x0, #0x0
    14dc:	b.ge	14e8 <init_types+0x194>  // b.tcont
    14e0:	mov	w0, #0x3ef                 	// #1007
    14e4:	b	20c4 <init_types+0xd70>
    14e8:	ldrh	w0, [sp, #598]
    14ec:	cmp	w0, #0x9
    14f0:	b.ne	1550 <init_types+0x1fc>  // b.any
    14f4:	ldr	x0, [sp, #696]
    14f8:	ldr	w0, [x0, #8]
    14fc:	cmp	w0, #0x0
    1500:	b.eq	1514 <init_types+0x1c0>  // b.none
    1504:	ldr	x0, [sp, #696]
    1508:	ldr	w0, [x0, #8]
    150c:	cmp	w0, #0x3e
    1510:	b.ls	1524 <init_types+0x1d0>  // b.plast
    1514:	ldr	x0, [sp, #112]
    1518:	add	x0, x0, #0x1
    151c:	str	x0, [sp, #112]
    1520:	b	1550 <init_types+0x1fc>
    1524:	ldr	x0, [sp, #696]
    1528:	ldr	w3, [x0, #8]
    152c:	mov	w0, w3
    1530:	lsl	x0, x0, #3
    1534:	add	x1, sp, #0x40
    1538:	ldr	x0, [x1, x0]
    153c:	add	x2, x0, #0x1
    1540:	mov	w0, w3
    1544:	lsl	x0, x0, #3
    1548:	add	x1, sp, #0x40
    154c:	str	x2, [x1, x0]
    1550:	ldr	x0, [sp, #696]
    1554:	ldr	x1, [sp, #48]
    1558:	add	x1, x0, x1
    155c:	ldr	x0, [sp, #576]
    1560:	add	x0, x1, x0
    1564:	str	x0, [sp, #696]
    1568:	ldrh	w3, [sp, #598]
    156c:	sxtw	x0, w3
    1570:	lsl	x0, x0, #3
    1574:	add	x1, sp, #0x40
    1578:	ldr	x0, [x1, x0]
    157c:	add	x2, x0, #0x1
    1580:	sxtw	x0, w3
    1584:	lsl	x0, x0, #3
    1588:	add	x1, sp, #0x40
    158c:	str	x2, [x1, x0]
    1590:	ldr	x0, [sp, #24]
    1594:	ldr	x0, [x0, #480]
    1598:	add	x1, x0, #0x1
    159c:	ldr	x0, [sp, #24]
    15a0:	str	x1, [x0, #480]
    15a4:	ldr	x1, [sp, #696]
    15a8:	ldr	x0, [sp, #648]
    15ac:	cmp	x1, x0
    15b0:	b.cc	1458 <init_types+0x104>  // b.lo, b.ul, b.last
    15b4:	ldr	w0, [sp, #668]
    15b8:	cmp	w0, #0x0
    15bc:	b.eq	15e8 <init_types+0x294>  // b.none
    15c0:	ldr	x1, [sp, #24]
    15c4:	adrp	x0, 0 <__bswap_16>
    15c8:	add	x0, x0, #0x0
    15cc:	bl	0 <ctf_dprintf>
    15d0:	ldr	x0, [sp, #24]
    15d4:	ldr	w0, [x0, #552]
    15d8:	orr	w1, w0, #0x1
    15dc:	ldr	x0, [sp, #24]
    15e0:	str	w1, [x0, #552]
    15e4:	b	15f8 <init_types+0x2a4>
    15e8:	ldr	x1, [sp, #24]
    15ec:	adrp	x0, 0 <__bswap_16>
    15f0:	add	x0, x0, #0x0
    15f4:	bl	0 <ctf_dprintf>
    15f8:	ldr	x3, [sp, #112]
    15fc:	adrp	x0, 0 <ctf_hash_eq_string>
    1600:	add	x2, x0, #0x0
    1604:	adrp	x0, 0 <ctf_hash_string>
    1608:	add	x1, x0, #0x0
    160c:	mov	x0, x3
    1610:	bl	0 <ctf_hash_create>
    1614:	mov	x1, x0
    1618:	ldr	x0, [sp, #24]
    161c:	str	x1, [x0, #152]
    1620:	ldr	x0, [sp, #24]
    1624:	ldr	x0, [x0, #152]
    1628:	cmp	x0, #0x0
    162c:	b.ne	1638 <init_types+0x2e4>  // b.any
    1630:	mov	w0, #0xc                   	// #12
    1634:	b	20c4 <init_types+0xd70>
    1638:	ldr	x3, [sp, #120]
    163c:	adrp	x0, 0 <ctf_hash_eq_string>
    1640:	add	x2, x0, #0x0
    1644:	adrp	x0, 0 <ctf_hash_string>
    1648:	add	x1, x0, #0x0
    164c:	mov	x0, x3
    1650:	bl	0 <ctf_hash_create>
    1654:	mov	x1, x0
    1658:	ldr	x0, [sp, #24]
    165c:	str	x1, [x0, #168]
    1660:	ldr	x0, [sp, #24]
    1664:	ldr	x0, [x0, #168]
    1668:	cmp	x0, #0x0
    166c:	b.ne	1678 <init_types+0x324>  // b.any
    1670:	mov	w0, #0xc                   	// #12
    1674:	b	20c4 <init_types+0xd70>
    1678:	ldr	x3, [sp, #128]
    167c:	adrp	x0, 0 <ctf_hash_eq_string>
    1680:	add	x2, x0, #0x0
    1684:	adrp	x0, 0 <ctf_hash_string>
    1688:	add	x1, x0, #0x0
    168c:	mov	x0, x3
    1690:	bl	0 <ctf_hash_create>
    1694:	mov	x1, x0
    1698:	ldr	x0, [sp, #24]
    169c:	str	x1, [x0, #184]
    16a0:	ldr	x0, [sp, #24]
    16a4:	ldr	x0, [x0, #184]
    16a8:	cmp	x0, #0x0
    16ac:	b.ne	16b8 <init_types+0x364>  // b.any
    16b0:	mov	w0, #0xc                   	// #12
    16b4:	b	20c4 <init_types+0xd70>
    16b8:	ldr	x1, [sp, #72]
    16bc:	ldr	x0, [sp, #80]
    16c0:	add	x1, x1, x0
    16c4:	ldr	x0, [sp, #104]
    16c8:	add	x1, x1, x0
    16cc:	ldr	x0, [sp, #144]
    16d0:	add	x1, x1, x0
    16d4:	ldr	x0, [sp, #88]
    16d8:	add	x1, x1, x0
    16dc:	ldr	x0, [sp, #152]
    16e0:	add	x1, x1, x0
    16e4:	ldr	x0, [sp, #160]
    16e8:	add	x1, x1, x0
    16ec:	ldr	x0, [sp, #168]
    16f0:	add	x3, x1, x0
    16f4:	adrp	x0, 0 <ctf_hash_eq_string>
    16f8:	add	x2, x0, #0x0
    16fc:	adrp	x0, 0 <ctf_hash_string>
    1700:	add	x1, x0, #0x0
    1704:	mov	x0, x3
    1708:	bl	0 <ctf_hash_create>
    170c:	mov	x1, x0
    1710:	ldr	x0, [sp, #24]
    1714:	str	x1, [x0, #200]
    1718:	ldr	x0, [sp, #24]
    171c:	ldr	x0, [x0, #200]
    1720:	cmp	x0, #0x0
    1724:	b.ne	1730 <init_types+0x3dc>  // b.any
    1728:	mov	w0, #0xc                   	// #12
    172c:	b	20c4 <init_types+0xd70>
    1730:	ldr	x0, [sp, #24]
    1734:	ldr	x0, [x0, #480]
    1738:	add	x0, x0, #0x1
    173c:	lsl	x0, x0, #2
    1740:	bl	0 <malloc>
    1744:	mov	x1, x0
    1748:	ldr	x0, [sp, #24]
    174c:	str	x1, [x0, #440]
    1750:	ldr	x0, [sp, #24]
    1754:	ldr	x0, [x0, #480]
    1758:	add	x1, x0, #0x1
    175c:	ldr	x0, [sp, #24]
    1760:	str	x1, [x0, #456]
    1764:	ldr	x0, [sp, #24]
    1768:	ldr	x0, [x0, #456]
    176c:	lsl	x0, x0, #2
    1770:	bl	0 <malloc>
    1774:	mov	x1, x0
    1778:	ldr	x0, [sp, #24]
    177c:	str	x1, [x0, #448]
    1780:	ldr	x0, [sp, #24]
    1784:	ldr	x0, [x0, #440]
    1788:	cmp	x0, #0x0
    178c:	b.eq	17a0 <init_types+0x44c>  // b.none
    1790:	ldr	x0, [sp, #24]
    1794:	ldr	x0, [x0, #448]
    1798:	cmp	x0, #0x0
    179c:	b.ne	17a8 <init_types+0x454>  // b.any
    17a0:	mov	w0, #0xc                   	// #12
    17a4:	b	20c4 <init_types+0xd70>
    17a8:	ldr	x0, [sp, #24]
    17ac:	ldr	x0, [x0, #440]
    17b0:	str	x0, [sp, #680]
    17b4:	ldr	x0, [sp, #680]
    17b8:	add	x1, x0, #0x4
    17bc:	str	x1, [sp, #680]
    17c0:	str	wzr, [x0]
    17c4:	ldr	x0, [sp, #24]
    17c8:	ldr	x3, [x0, #440]
    17cc:	ldr	x0, [sp, #24]
    17d0:	ldr	x0, [x0, #480]
    17d4:	add	x0, x0, #0x1
    17d8:	lsl	x0, x0, #2
    17dc:	mov	x2, x0
    17e0:	mov	w1, #0x0                   	// #0
    17e4:	mov	x0, x3
    17e8:	bl	0 <memset>
    17ec:	ldr	x0, [sp, #24]
    17f0:	ldr	x3, [x0, #448]
    17f4:	ldr	x0, [sp, #24]
    17f8:	ldr	x0, [x0, #480]
    17fc:	add	x0, x0, #0x1
    1800:	lsl	x0, x0, #2
    1804:	mov	x2, x0
    1808:	mov	w1, #0x0                   	// #0
    180c:	mov	x0, x3
    1810:	bl	0 <memset>
    1814:	mov	w0, #0x1                   	// #1
    1818:	str	w0, [sp, #692]
    181c:	ldr	x0, [sp, #656]
    1820:	str	x0, [sp, #696]
    1824:	b	1e7c <init_types+0xb28>
    1828:	ldr	x0, [sp, #24]
    182c:	ldr	x0, [x0]
    1830:	ldr	x1, [x0]
    1834:	ldr	x0, [sp, #696]
    1838:	ldr	w0, [x0, #4]
    183c:	blr	x1
    1840:	strh	w0, [sp, #642]
    1844:	ldr	x0, [sp, #24]
    1848:	ldr	x0, [x0]
    184c:	ldr	x1, [x0, #8]
    1850:	ldr	x0, [sp, #696]
    1854:	ldr	w0, [x0, #4]
    1858:	blr	x1
    185c:	strh	w0, [sp, #640]
    1860:	ldr	x0, [sp, #24]
    1864:	ldr	x0, [x0]
    1868:	ldr	x1, [x0, #16]
    186c:	ldr	x0, [sp, #696]
    1870:	ldr	w0, [x0, #4]
    1874:	blr	x1
    1878:	mov	w0, w0
    187c:	str	x0, [sp, #632]
    1880:	add	x1, sp, #0x20
    1884:	add	x0, sp, #0x28
    1888:	mov	x3, x1
    188c:	mov	x2, x0
    1890:	ldr	x1, [sp, #696]
    1894:	ldr	x0, [sp, #24]
    1898:	bl	34 <ctf_get_ctt_size>
    189c:	ldr	x0, [sp, #696]
    18a0:	ldr	w0, [x0]
    18a4:	mov	w1, w0
    18a8:	ldr	x0, [sp, #24]
    18ac:	bl	0 <ctf_strptr>
    18b0:	str	x0, [sp, #624]
    18b4:	ldr	x0, [sp, #24]
    18b8:	ldr	x0, [x0]
    18bc:	ldr	x3, [x0, #32]
    18c0:	ldr	x0, [sp, #40]
    18c4:	ldr	x2, [sp, #632]
    18c8:	mov	x1, x0
    18cc:	ldrh	w0, [sp, #642]
    18d0:	blr	x3
    18d4:	str	x0, [sp, #616]
    18d8:	ldrh	w0, [sp, #642]
    18dc:	cmp	w0, #0xe
    18e0:	b.eq	1dec <init_types+0xa98>  // b.none
    18e4:	cmp	w0, #0xe
    18e8:	b.gt	1dd0 <init_types+0xa7c>
    18ec:	cmp	w0, #0xd
    18f0:	b.gt	1dd0 <init_types+0xa7c>
    18f4:	cmp	w0, #0xb
    18f8:	b.ge	1d6c <init_types+0xa18>  // b.tcont
    18fc:	cmp	w0, #0xa
    1900:	b.eq	1bec <init_types+0x898>  // b.none
    1904:	cmp	w0, #0xa
    1908:	b.gt	1dd0 <init_types+0xa7c>
    190c:	cmp	w0, #0x9
    1910:	b.eq	1c50 <init_types+0x8fc>  // b.none
    1914:	cmp	w0, #0x9
    1918:	b.gt	1dd0 <init_types+0xa7c>
    191c:	cmp	w0, #0x8
    1920:	b.eq	1b88 <init_types+0x834>  // b.none
    1924:	cmp	w0, #0x8
    1928:	b.gt	1dd0 <init_types+0xa7c>
    192c:	cmp	w0, #0x7
    1930:	b.eq	1b04 <init_types+0x7b0>  // b.none
    1934:	cmp	w0, #0x7
    1938:	b.gt	1dd0 <init_types+0xa7c>
    193c:	cmp	w0, #0x6
    1940:	b.eq	1a80 <init_types+0x72c>  // b.none
    1944:	cmp	w0, #0x6
    1948:	b.gt	1dd0 <init_types+0xa7c>
    194c:	cmp	w0, #0x5
    1950:	b.eq	1a1c <init_types+0x6c8>  // b.none
    1954:	cmp	w0, #0x5
    1958:	b.gt	1dd0 <init_types+0xa7c>
    195c:	cmp	w0, #0x4
    1960:	b.eq	1dec <init_types+0xa98>  // b.none
    1964:	cmp	w0, #0x4
    1968:	b.gt	1dd0 <init_types+0xa7c>
    196c:	cmp	w0, #0x2
    1970:	b.gt	1980 <init_types+0x62c>
    1974:	cmp	w0, #0x0
    1978:	b.gt	198c <init_types+0x638>
    197c:	b	1dd0 <init_types+0xa7c>
    1980:	cmp	w0, #0x3
    1984:	b.eq	1ce8 <init_types+0x994>  // b.none
    1988:	b	1dd0 <init_types+0xa7c>
    198c:	ldr	x0, [sp, #24]
    1990:	ldr	x0, [x0, #200]
    1994:	ldr	x2, [sp, #624]
    1998:	ldr	x1, [sp, #24]
    199c:	bl	0 <ctf_hash_lookup_type>
    19a0:	cmp	x0, #0x0
    19a4:	b.eq	19b8 <init_types+0x664>  // b.none
    19a8:	ldrh	w0, [sp, #640]
    19ac:	and	w0, w0, #0x1
    19b0:	cmp	w0, #0x0
    19b4:	b.eq	1df4 <init_types+0xaa0>  // b.none
    19b8:	ldr	x0, [sp, #24]
    19bc:	ldr	x4, [x0, #200]
    19c0:	ldr	w0, [sp, #668]
    19c4:	cmp	w0, #0x0
    19c8:	b.eq	19e4 <init_types+0x690>  // b.none
    19cc:	ldr	x0, [sp, #24]
    19d0:	ldr	w0, [x0, #544]
    19d4:	add	w1, w0, #0x1
    19d8:	ldr	w0, [sp, #692]
    19dc:	orr	w0, w1, w0
    19e0:	b	19e8 <init_types+0x694>
    19e4:	ldr	w0, [sp, #692]
    19e8:	ldr	x1, [sp, #696]
    19ec:	ldr	w1, [x1]
    19f0:	mov	w3, w1
    19f4:	mov	w2, w0
    19f8:	ldr	x1, [sp, #24]
    19fc:	mov	x0, x4
    1a00:	bl	0 <ctf_hash_define_type>
    1a04:	str	w0, [sp, #612]
    1a08:	ldr	w0, [sp, #612]
    1a0c:	cmp	w0, #0x0
    1a10:	b.eq	1df4 <init_types+0xaa0>  // b.none
    1a14:	ldr	w0, [sp, #612]
    1a18:	b	20c4 <init_types+0xd70>
    1a1c:	ldr	x0, [sp, #24]
    1a20:	ldr	x4, [x0, #200]
    1a24:	ldr	w0, [sp, #668]
    1a28:	cmp	w0, #0x0
    1a2c:	b.eq	1a48 <init_types+0x6f4>  // b.none
    1a30:	ldr	x0, [sp, #24]
    1a34:	ldr	w0, [x0, #544]
    1a38:	add	w1, w0, #0x1
    1a3c:	ldr	w0, [sp, #692]
    1a40:	orr	w0, w1, w0
    1a44:	b	1a4c <init_types+0x6f8>
    1a48:	ldr	w0, [sp, #692]
    1a4c:	ldr	x1, [sp, #696]
    1a50:	ldr	w1, [x1]
    1a54:	mov	w3, w1
    1a58:	mov	w2, w0
    1a5c:	ldr	x1, [sp, #24]
    1a60:	mov	x0, x4
    1a64:	bl	0 <ctf_hash_insert_type>
    1a68:	str	w0, [sp, #612]
    1a6c:	ldr	w0, [sp, #612]
    1a70:	cmp	w0, #0x0
    1a74:	b.eq	1dfc <init_types+0xaa8>  // b.none
    1a78:	ldr	w0, [sp, #612]
    1a7c:	b	20c4 <init_types+0xd70>
    1a80:	ldr	x0, [sp, #24]
    1a84:	ldr	x4, [x0, #152]
    1a88:	ldr	w0, [sp, #668]
    1a8c:	cmp	w0, #0x0
    1a90:	b.eq	1aac <init_types+0x758>  // b.none
    1a94:	ldr	x0, [sp, #24]
    1a98:	ldr	w0, [x0, #544]
    1a9c:	add	w1, w0, #0x1
    1aa0:	ldr	w0, [sp, #692]
    1aa4:	orr	w0, w1, w0
    1aa8:	b	1ab0 <init_types+0x75c>
    1aac:	ldr	w0, [sp, #692]
    1ab0:	ldr	x1, [sp, #696]
    1ab4:	ldr	w1, [x1]
    1ab8:	mov	w3, w1
    1abc:	mov	w2, w0
    1ac0:	ldr	x1, [sp, #24]
    1ac4:	mov	x0, x4
    1ac8:	bl	0 <ctf_hash_define_type>
    1acc:	str	w0, [sp, #612]
    1ad0:	ldr	w0, [sp, #612]
    1ad4:	cmp	w0, #0x0
    1ad8:	b.eq	1ae4 <init_types+0x790>  // b.none
    1adc:	ldr	w0, [sp, #612]
    1ae0:	b	20c4 <init_types+0xd70>
    1ae4:	ldr	x1, [sp, #40]
    1ae8:	mov	x0, #0x1fffffff            	// #536870911
    1aec:	cmp	x1, x0
    1af0:	b.le	1e04 <init_types+0xab0>
    1af4:	ldr	w0, [sp, #676]
    1af8:	add	w0, w0, #0x1
    1afc:	str	w0, [sp, #676]
    1b00:	b	1e04 <init_types+0xab0>
    1b04:	ldr	x0, [sp, #24]
    1b08:	ldr	x4, [x0, #168]
    1b0c:	ldr	w0, [sp, #668]
    1b10:	cmp	w0, #0x0
    1b14:	b.eq	1b30 <init_types+0x7dc>  // b.none
    1b18:	ldr	x0, [sp, #24]
    1b1c:	ldr	w0, [x0, #544]
    1b20:	add	w1, w0, #0x1
    1b24:	ldr	w0, [sp, #692]
    1b28:	orr	w0, w1, w0
    1b2c:	b	1b34 <init_types+0x7e0>
    1b30:	ldr	w0, [sp, #692]
    1b34:	ldr	x1, [sp, #696]
    1b38:	ldr	w1, [x1]
    1b3c:	mov	w3, w1
    1b40:	mov	w2, w0
    1b44:	ldr	x1, [sp, #24]
    1b48:	mov	x0, x4
    1b4c:	bl	0 <ctf_hash_define_type>
    1b50:	str	w0, [sp, #612]
    1b54:	ldr	w0, [sp, #612]
    1b58:	cmp	w0, #0x0
    1b5c:	b.eq	1b68 <init_types+0x814>  // b.none
    1b60:	ldr	w0, [sp, #612]
    1b64:	b	20c4 <init_types+0xd70>
    1b68:	ldr	x1, [sp, #40]
    1b6c:	mov	x0, #0x1fffffff            	// #536870911
    1b70:	cmp	x1, x0
    1b74:	b.le	1e0c <init_types+0xab8>
    1b78:	ldr	w0, [sp, #672]
    1b7c:	add	w0, w0, #0x1
    1b80:	str	w0, [sp, #672]
    1b84:	b	1e0c <init_types+0xab8>
    1b88:	ldr	x0, [sp, #24]
    1b8c:	ldr	x4, [x0, #184]
    1b90:	ldr	w0, [sp, #668]
    1b94:	cmp	w0, #0x0
    1b98:	b.eq	1bb4 <init_types+0x860>  // b.none
    1b9c:	ldr	x0, [sp, #24]
    1ba0:	ldr	w0, [x0, #544]
    1ba4:	add	w1, w0, #0x1
    1ba8:	ldr	w0, [sp, #692]
    1bac:	orr	w0, w1, w0
    1bb0:	b	1bb8 <init_types+0x864>
    1bb4:	ldr	w0, [sp, #692]
    1bb8:	ldr	x1, [sp, #696]
    1bbc:	ldr	w1, [x1]
    1bc0:	mov	w3, w1
    1bc4:	mov	w2, w0
    1bc8:	ldr	x1, [sp, #24]
    1bcc:	mov	x0, x4
    1bd0:	bl	0 <ctf_hash_define_type>
    1bd4:	str	w0, [sp, #612]
    1bd8:	ldr	w0, [sp, #612]
    1bdc:	cmp	w0, #0x0
    1be0:	b.eq	1e14 <init_types+0xac0>  // b.none
    1be4:	ldr	w0, [sp, #612]
    1be8:	b	20c4 <init_types+0xd70>
    1bec:	ldr	x0, [sp, #24]
    1bf0:	ldr	x4, [x0, #200]
    1bf4:	ldr	w0, [sp, #668]
    1bf8:	cmp	w0, #0x0
    1bfc:	b.eq	1c18 <init_types+0x8c4>  // b.none
    1c00:	ldr	x0, [sp, #24]
    1c04:	ldr	w0, [x0, #544]
    1c08:	add	w1, w0, #0x1
    1c0c:	ldr	w0, [sp, #692]
    1c10:	orr	w0, w1, w0
    1c14:	b	1c1c <init_types+0x8c8>
    1c18:	ldr	w0, [sp, #692]
    1c1c:	ldr	x1, [sp, #696]
    1c20:	ldr	w1, [x1]
    1c24:	mov	w3, w1
    1c28:	mov	w2, w0
    1c2c:	ldr	x1, [sp, #24]
    1c30:	mov	x0, x4
    1c34:	bl	0 <ctf_hash_insert_type>
    1c38:	str	w0, [sp, #612]
    1c3c:	ldr	w0, [sp, #612]
    1c40:	cmp	w0, #0x0
    1c44:	b.eq	1e1c <init_types+0xac8>  // b.none
    1c48:	ldr	w0, [sp, #612]
    1c4c:	b	20c4 <init_types+0xd70>
    1c50:	ldr	x0, [sp, #696]
    1c54:	ldr	w0, [x0, #8]
    1c58:	mov	w1, w0
    1c5c:	ldr	x0, [sp, #24]
    1c60:	bl	0 <ctf_name_table>
    1c64:	str	x0, [sp, #600]
    1c68:	ldr	x0, [sp, #600]
    1c6c:	ldr	x0, [x0]
    1c70:	ldr	x2, [sp, #624]
    1c74:	ldr	x1, [sp, #24]
    1c78:	bl	0 <ctf_hash_lookup_type>
    1c7c:	cmp	x0, #0x0
    1c80:	b.ne	1e24 <init_types+0xad0>  // b.any
    1c84:	ldr	x0, [sp, #600]
    1c88:	ldr	x4, [x0]
    1c8c:	ldr	w0, [sp, #668]
    1c90:	cmp	w0, #0x0
    1c94:	b.eq	1cb0 <init_types+0x95c>  // b.none
    1c98:	ldr	x0, [sp, #24]
    1c9c:	ldr	w0, [x0, #544]
    1ca0:	add	w1, w0, #0x1
    1ca4:	ldr	w0, [sp, #692]
    1ca8:	orr	w0, w1, w0
    1cac:	b	1cb4 <init_types+0x960>
    1cb0:	ldr	w0, [sp, #692]
    1cb4:	ldr	x1, [sp, #696]
    1cb8:	ldr	w1, [x1]
    1cbc:	mov	w3, w1
    1cc0:	mov	w2, w0
    1cc4:	ldr	x1, [sp, #24]
    1cc8:	mov	x0, x4
    1ccc:	bl	0 <ctf_hash_insert_type>
    1cd0:	str	w0, [sp, #612]
    1cd4:	ldr	w0, [sp, #612]
    1cd8:	cmp	w0, #0x0
    1cdc:	b.eq	1e24 <init_types+0xad0>  // b.none
    1ce0:	ldr	w0, [sp, #612]
    1ce4:	b	20c4 <init_types+0xd70>
    1ce8:	ldr	x0, [sp, #696]
    1cec:	ldr	w1, [x0, #8]
    1cf0:	ldr	x0, [sp, #24]
    1cf4:	ldr	w0, [x0, #544]
    1cf8:	cmp	w1, w0
    1cfc:	cset	w0, hi  // hi = pmore
    1d00:	and	w0, w0, #0xff
    1d04:	mov	w1, w0
    1d08:	ldr	w0, [sp, #668]
    1d0c:	cmp	w0, w1
    1d10:	b.ne	1d6c <init_types+0xa18>  // b.any
    1d14:	ldr	x0, [sp, #696]
    1d18:	ldr	w1, [x0, #8]
    1d1c:	ldr	x0, [sp, #24]
    1d20:	ldr	w0, [x0, #544]
    1d24:	and	w0, w1, w0
    1d28:	mov	w1, w0
    1d2c:	ldr	x0, [sp, #24]
    1d30:	ldr	x0, [x0, #480]
    1d34:	cmp	x1, x0
    1d38:	b.hi	1d6c <init_types+0xa18>  // b.pmore
    1d3c:	ldr	x0, [sp, #24]
    1d40:	ldr	x1, [x0, #448]
    1d44:	ldr	x0, [sp, #696]
    1d48:	ldr	w2, [x0, #8]
    1d4c:	ldr	x0, [sp, #24]
    1d50:	ldr	w0, [x0, #544]
    1d54:	and	w0, w2, w0
    1d58:	mov	w0, w0
    1d5c:	lsl	x0, x0, #2
    1d60:	add	x0, x1, x0
    1d64:	ldr	w1, [sp, #692]
    1d68:	str	w1, [x0]
    1d6c:	ldr	x0, [sp, #24]
    1d70:	ldr	x4, [x0, #200]
    1d74:	ldr	w0, [sp, #668]
    1d78:	cmp	w0, #0x0
    1d7c:	b.eq	1d98 <init_types+0xa44>  // b.none
    1d80:	ldr	x0, [sp, #24]
    1d84:	ldr	w0, [x0, #544]
    1d88:	add	w1, w0, #0x1
    1d8c:	ldr	w0, [sp, #692]
    1d90:	orr	w0, w1, w0
    1d94:	b	1d9c <init_types+0xa48>
    1d98:	ldr	w0, [sp, #692]
    1d9c:	ldr	x1, [sp, #696]
    1da0:	ldr	w1, [x1]
    1da4:	mov	w3, w1
    1da8:	mov	w2, w0
    1dac:	ldr	x1, [sp, #24]
    1db0:	mov	x0, x4
    1db4:	bl	0 <ctf_hash_insert_type>
    1db8:	str	w0, [sp, #612]
    1dbc:	ldr	w0, [sp, #612]
    1dc0:	cmp	w0, #0x0
    1dc4:	b.eq	1e2c <init_types+0xad8>  // b.none
    1dc8:	ldr	w0, [sp, #612]
    1dcc:	b	20c4 <init_types+0xd70>
    1dd0:	ldrh	w0, [sp, #642]
    1dd4:	mov	w1, w0
    1dd8:	adrp	x0, 0 <__bswap_16>
    1ddc:	add	x0, x0, #0x0
    1de0:	bl	0 <ctf_dprintf>
    1de4:	mov	w0, #0x3ef                 	// #1007
    1de8:	b	20c4 <init_types+0xd70>
    1dec:	nop
    1df0:	b	1e30 <init_types+0xadc>
    1df4:	nop
    1df8:	b	1e30 <init_types+0xadc>
    1dfc:	nop
    1e00:	b	1e30 <init_types+0xadc>
    1e04:	nop
    1e08:	b	1e30 <init_types+0xadc>
    1e0c:	nop
    1e10:	b	1e30 <init_types+0xadc>
    1e14:	nop
    1e18:	b	1e30 <init_types+0xadc>
    1e1c:	nop
    1e20:	b	1e30 <init_types+0xadc>
    1e24:	nop
    1e28:	b	1e30 <init_types+0xadc>
    1e2c:	nop
    1e30:	ldr	x0, [sp, #696]
    1e34:	ldr	x1, [sp, #24]
    1e38:	ldr	x1, [x1, #408]
    1e3c:	sub	x0, x0, x1
    1e40:	mov	w1, w0
    1e44:	ldr	x0, [sp, #680]
    1e48:	str	w1, [x0]
    1e4c:	ldr	x0, [sp, #696]
    1e50:	ldr	x1, [sp, #32]
    1e54:	add	x1, x0, x1
    1e58:	ldr	x0, [sp, #616]
    1e5c:	add	x0, x1, x0
    1e60:	str	x0, [sp, #696]
    1e64:	ldr	x0, [sp, #680]
    1e68:	add	x0, x0, #0x4
    1e6c:	str	x0, [sp, #680]
    1e70:	ldr	w0, [sp, #692]
    1e74:	add	w0, w0, #0x1
    1e78:	str	w0, [sp, #692]
    1e7c:	ldr	x1, [sp, #696]
    1e80:	ldr	x0, [sp, #648]
    1e84:	cmp	x1, x0
    1e88:	b.cc	1828 <init_types+0x4d4>  // b.lo, b.ul, b.last
    1e8c:	ldr	x0, [sp, #24]
    1e90:	ldr	x0, [x0, #480]
    1e94:	mov	x1, x0
    1e98:	adrp	x0, 0 <__bswap_16>
    1e9c:	add	x0, x0, #0x0
    1ea0:	bl	0 <ctf_dprintf>
    1ea4:	ldr	x0, [sp, #24]
    1ea8:	ldr	x0, [x0, #184]
    1eac:	bl	0 <ctf_hash_size>
    1eb0:	mov	w1, w0
    1eb4:	adrp	x0, 0 <__bswap_16>
    1eb8:	add	x0, x0, #0x0
    1ebc:	bl	0 <ctf_dprintf>
    1ec0:	ldr	x0, [sp, #24]
    1ec4:	ldr	x0, [x0, #152]
    1ec8:	bl	0 <ctf_hash_size>
    1ecc:	ldr	w2, [sp, #676]
    1ed0:	mov	w1, w0
    1ed4:	adrp	x0, 0 <__bswap_16>
    1ed8:	add	x0, x0, #0x0
    1edc:	bl	0 <ctf_dprintf>
    1ee0:	ldr	x0, [sp, #24]
    1ee4:	ldr	x0, [x0, #168]
    1ee8:	bl	0 <ctf_hash_size>
    1eec:	ldr	w2, [sp, #672]
    1ef0:	mov	w1, w0
    1ef4:	adrp	x0, 0 <__bswap_16>
    1ef8:	add	x0, x0, #0x0
    1efc:	bl	0 <ctf_dprintf>
    1f00:	ldr	x0, [sp, #24]
    1f04:	ldr	x0, [x0, #200]
    1f08:	bl	0 <ctf_hash_size>
    1f0c:	mov	w1, w0
    1f10:	adrp	x0, 0 <__bswap_16>
    1f14:	add	x0, x0, #0x0
    1f18:	bl	0 <ctf_dprintf>
    1f1c:	mov	w0, #0x1                   	// #1
    1f20:	str	w0, [sp, #692]
    1f24:	b	20ac <init_types+0xd58>
    1f28:	ldr	x0, [sp, #24]
    1f2c:	ldr	x1, [x0, #448]
    1f30:	ldr	w0, [sp, #692]
    1f34:	lsl	x0, x0, #2
    1f38:	add	x0, x1, x0
    1f3c:	ldr	w0, [x0]
    1f40:	str	w0, [sp, #644]
    1f44:	ldr	w0, [sp, #644]
    1f48:	cmp	w0, #0x0
    1f4c:	b.eq	20a0 <init_types+0xd4c>  // b.none
    1f50:	ldr	x0, [sp, #24]
    1f54:	ldr	w0, [x0, #552]
    1f58:	and	w0, w0, #0x2
    1f5c:	cmp	w0, #0x0
    1f60:	b.eq	1fac <init_types+0xc58>  // b.none
    1f64:	ldr	x0, [sp, #24]
    1f68:	ldr	w0, [x0, #552]
    1f6c:	and	w0, w0, #0x1
    1f70:	cmp	w0, #0x0
    1f74:	b.eq	1f94 <init_types+0xc40>  // b.none
    1f78:	ldr	x0, [sp, #24]
    1f7c:	ldr	w0, [x0, #544]
    1f80:	add	w1, w0, #0x1
    1f84:	ldr	w0, [sp, #692]
    1f88:	orr	w0, w1, w0
    1f8c:	mov	w0, w0
    1f90:	b	1f98 <init_types+0xc44>
    1f94:	ldr	w0, [sp, #692]
    1f98:	mov	x1, x0
    1f9c:	ldr	x0, [sp, #24]
    1fa0:	bl	0 <ctf_dtd_lookup>
    1fa4:	add	x0, x0, #0x18
    1fa8:	b	1fd8 <init_types+0xc84>
    1fac:	ldr	x0, [sp, #24]
    1fb0:	ldr	x0, [x0, #408]
    1fb4:	mov	x2, x0
    1fb8:	ldr	x0, [sp, #24]
    1fbc:	ldr	x1, [x0, #440]
    1fc0:	ldr	w0, [sp, #692]
    1fc4:	lsl	x0, x0, #2
    1fc8:	add	x0, x1, x0
    1fcc:	ldr	w0, [x0]
    1fd0:	mov	w0, w0
    1fd4:	add	x0, x2, x0
    1fd8:	str	x0, [sp, #696]
    1fdc:	ldr	x0, [sp, #24]
    1fe0:	ldr	x0, [x0]
    1fe4:	ldr	x1, [x0]
    1fe8:	ldr	x0, [sp, #696]
    1fec:	ldr	w0, [x0, #4]
    1ff0:	blr	x1
    1ff4:	cmp	w0, #0xa
    1ff8:	b.ne	20a0 <init_types+0xd4c>  // b.any
    1ffc:	ldr	x0, [sp, #696]
    2000:	ldr	w0, [x0]
    2004:	mov	w1, w0
    2008:	ldr	x0, [sp, #24]
    200c:	bl	0 <ctf_strptr>
    2010:	ldrb	w0, [x0]
    2014:	cmp	w0, #0x0
    2018:	b.ne	20a0 <init_types+0xd4c>  // b.any
    201c:	ldr	x0, [sp, #696]
    2020:	ldr	w1, [x0, #8]
    2024:	ldr	x0, [sp, #24]
    2028:	ldr	w0, [x0, #544]
    202c:	cmp	w1, w0
    2030:	cset	w0, hi  // hi = pmore
    2034:	and	w0, w0, #0xff
    2038:	mov	w1, w0
    203c:	ldr	w0, [sp, #668]
    2040:	cmp	w0, w1
    2044:	b.ne	20a0 <init_types+0xd4c>  // b.any
    2048:	ldr	x0, [sp, #696]
    204c:	ldr	w1, [x0, #8]
    2050:	ldr	x0, [sp, #24]
    2054:	ldr	w0, [x0, #544]
    2058:	and	w0, w1, w0
    205c:	mov	w1, w0
    2060:	ldr	x0, [sp, #24]
    2064:	ldr	x0, [x0, #480]
    2068:	cmp	x1, x0
    206c:	b.hi	20a0 <init_types+0xd4c>  // b.pmore
    2070:	ldr	x0, [sp, #24]
    2074:	ldr	x1, [x0, #448]
    2078:	ldr	x0, [sp, #696]
    207c:	ldr	w2, [x0, #8]
    2080:	ldr	x0, [sp, #24]
    2084:	ldr	w0, [x0, #544]
    2088:	and	w0, w2, w0
    208c:	mov	w0, w0
    2090:	lsl	x0, x0, #2
    2094:	add	x0, x1, x0
    2098:	ldr	w1, [sp, #644]
    209c:	str	w1, [x0]
    20a0:	ldr	w0, [sp, #692]
    20a4:	add	w0, w0, #0x1
    20a8:	str	w0, [sp, #692]
    20ac:	ldr	w1, [sp, #692]
    20b0:	ldr	x0, [sp, #24]
    20b4:	ldr	x0, [x0, #480]
    20b8:	cmp	x1, x0
    20bc:	b.ls	1f28 <init_types+0xbd4>  // b.plast
    20c0:	mov	w0, #0x0                   	// #0
    20c4:	ldp	x29, x30, [sp]
    20c8:	add	sp, sp, #0x2c0
    20cc:	ret

00000000000020d0 <flip_header>:
    20d0:	stp	x29, x30, [sp, #-32]!
    20d4:	mov	x29, sp
    20d8:	str	x0, [sp, #24]
    20dc:	ldr	x0, [sp, #24]
    20e0:	ldrh	w0, [x0]
    20e4:	bl	0 <__bswap_16>
    20e8:	and	w1, w0, #0xffff
    20ec:	ldr	x0, [sp, #24]
    20f0:	strh	w1, [x0]
    20f4:	nop
    20f8:	nop
    20fc:	nop
    2100:	ldr	x0, [sp, #24]
    2104:	ldr	w0, [x0, #4]
    2108:	bl	1c <__bswap_32>
    210c:	mov	w1, w0
    2110:	ldr	x0, [sp, #24]
    2114:	str	w1, [x0, #4]
    2118:	nop
    211c:	ldr	x0, [sp, #24]
    2120:	ldr	w0, [x0, #8]
    2124:	bl	1c <__bswap_32>
    2128:	mov	w1, w0
    212c:	ldr	x0, [sp, #24]
    2130:	str	w1, [x0, #8]
    2134:	nop
    2138:	ldr	x0, [sp, #24]
    213c:	ldr	w0, [x0, #12]
    2140:	bl	1c <__bswap_32>
    2144:	mov	w1, w0
    2148:	ldr	x0, [sp, #24]
    214c:	str	w1, [x0, #12]
    2150:	nop
    2154:	ldr	x0, [sp, #24]
    2158:	ldr	w0, [x0, #20]
    215c:	bl	1c <__bswap_32>
    2160:	mov	w1, w0
    2164:	ldr	x0, [sp, #24]
    2168:	str	w1, [x0, #20]
    216c:	nop
    2170:	ldr	x0, [sp, #24]
    2174:	ldr	w0, [x0, #24]
    2178:	bl	1c <__bswap_32>
    217c:	mov	w1, w0
    2180:	ldr	x0, [sp, #24]
    2184:	str	w1, [x0, #24]
    2188:	nop
    218c:	ldr	x0, [sp, #24]
    2190:	ldr	w0, [x0, #28]
    2194:	bl	1c <__bswap_32>
    2198:	mov	w1, w0
    219c:	ldr	x0, [sp, #24]
    21a0:	str	w1, [x0, #28]
    21a4:	nop
    21a8:	ldr	x0, [sp, #24]
    21ac:	ldr	w0, [x0, #32]
    21b0:	bl	1c <__bswap_32>
    21b4:	mov	w1, w0
    21b8:	ldr	x0, [sp, #24]
    21bc:	str	w1, [x0, #32]
    21c0:	nop
    21c4:	ldr	x0, [sp, #24]
    21c8:	ldr	w0, [x0, #36]
    21cc:	bl	1c <__bswap_32>
    21d0:	mov	w1, w0
    21d4:	ldr	x0, [sp, #24]
    21d8:	str	w1, [x0, #36]
    21dc:	nop
    21e0:	ldr	x0, [sp, #24]
    21e4:	ldr	w0, [x0, #40]
    21e8:	bl	1c <__bswap_32>
    21ec:	mov	w1, w0
    21f0:	ldr	x0, [sp, #24]
    21f4:	str	w1, [x0, #40]
    21f8:	nop
    21fc:	ldr	x0, [sp, #24]
    2200:	ldr	w0, [x0, #44]
    2204:	bl	1c <__bswap_32>
    2208:	mov	w1, w0
    220c:	ldr	x0, [sp, #24]
    2210:	str	w1, [x0, #44]
    2214:	nop
    2218:	ldr	x0, [sp, #24]
    221c:	ldr	w0, [x0, #48]
    2220:	bl	1c <__bswap_32>
    2224:	mov	w1, w0
    2228:	ldr	x0, [sp, #24]
    222c:	str	w1, [x0, #48]
    2230:	nop
    2234:	nop
    2238:	ldp	x29, x30, [sp], #32
    223c:	ret

0000000000002240 <flip_lbls>:
    2240:	stp	x29, x30, [sp, #-48]!
    2244:	mov	x29, sp
    2248:	str	x0, [sp, #24]
    224c:	str	x1, [sp, #16]
    2250:	ldr	x0, [sp, #24]
    2254:	str	x0, [sp, #40]
    2258:	ldr	x0, [sp, #16]
    225c:	lsr	x0, x0, #3
    2260:	str	x0, [sp, #32]
    2264:	b	22b8 <flip_lbls+0x78>
    2268:	ldr	x0, [sp, #40]
    226c:	ldr	w0, [x0]
    2270:	bl	1c <__bswap_32>
    2274:	mov	w1, w0
    2278:	ldr	x0, [sp, #40]
    227c:	str	w1, [x0]
    2280:	nop
    2284:	ldr	x0, [sp, #40]
    2288:	ldr	w0, [x0, #4]
    228c:	bl	1c <__bswap_32>
    2290:	mov	w1, w0
    2294:	ldr	x0, [sp, #40]
    2298:	str	w1, [x0, #4]
    229c:	nop
    22a0:	ldr	x0, [sp, #40]
    22a4:	add	x0, x0, #0x8
    22a8:	str	x0, [sp, #40]
    22ac:	ldr	x0, [sp, #32]
    22b0:	sub	x0, x0, #0x1
    22b4:	str	x0, [sp, #32]
    22b8:	ldr	x0, [sp, #32]
    22bc:	cmp	x0, #0x0
    22c0:	b.gt	2268 <flip_lbls+0x28>
    22c4:	nop
    22c8:	nop
    22cc:	ldp	x29, x30, [sp], #48
    22d0:	ret

00000000000022d4 <flip_objts>:
    22d4:	stp	x29, x30, [sp, #-48]!
    22d8:	mov	x29, sp
    22dc:	str	x0, [sp, #24]
    22e0:	str	x1, [sp, #16]
    22e4:	ldr	x0, [sp, #24]
    22e8:	str	x0, [sp, #40]
    22ec:	ldr	x0, [sp, #16]
    22f0:	lsr	x0, x0, #2
    22f4:	str	x0, [sp, #32]
    22f8:	b	2330 <flip_objts+0x5c>
    22fc:	ldr	x0, [sp, #40]
    2300:	ldr	w0, [x0]
    2304:	bl	1c <__bswap_32>
    2308:	mov	w1, w0
    230c:	ldr	x0, [sp, #40]
    2310:	str	w1, [x0]
    2314:	nop
    2318:	ldr	x0, [sp, #40]
    231c:	add	x0, x0, #0x4
    2320:	str	x0, [sp, #40]
    2324:	ldr	x0, [sp, #32]
    2328:	sub	x0, x0, #0x1
    232c:	str	x0, [sp, #32]
    2330:	ldr	x0, [sp, #32]
    2334:	cmp	x0, #0x0
    2338:	b.gt	22fc <flip_objts+0x28>
    233c:	nop
    2340:	nop
    2344:	ldp	x29, x30, [sp], #48
    2348:	ret

000000000000234c <flip_vars>:
    234c:	stp	x29, x30, [sp, #-48]!
    2350:	mov	x29, sp
    2354:	str	x0, [sp, #24]
    2358:	str	x1, [sp, #16]
    235c:	ldr	x0, [sp, #24]
    2360:	str	x0, [sp, #40]
    2364:	ldr	x0, [sp, #16]
    2368:	lsr	x0, x0, #3
    236c:	str	x0, [sp, #32]
    2370:	b	23c4 <flip_vars+0x78>
    2374:	ldr	x0, [sp, #40]
    2378:	ldr	w0, [x0]
    237c:	bl	1c <__bswap_32>
    2380:	mov	w1, w0
    2384:	ldr	x0, [sp, #40]
    2388:	str	w1, [x0]
    238c:	nop
    2390:	ldr	x0, [sp, #40]
    2394:	ldr	w0, [x0, #4]
    2398:	bl	1c <__bswap_32>
    239c:	mov	w1, w0
    23a0:	ldr	x0, [sp, #40]
    23a4:	str	w1, [x0, #4]
    23a8:	nop
    23ac:	ldr	x0, [sp, #40]
    23b0:	add	x0, x0, #0x8
    23b4:	str	x0, [sp, #40]
    23b8:	ldr	x0, [sp, #32]
    23bc:	sub	x0, x0, #0x1
    23c0:	str	x0, [sp, #32]
    23c4:	ldr	x0, [sp, #32]
    23c8:	cmp	x0, #0x0
    23cc:	b.gt	2374 <flip_vars+0x28>
    23d0:	nop
    23d4:	nop
    23d8:	ldp	x29, x30, [sp], #48
    23dc:	ret

00000000000023e0 <flip_types>:
    23e0:	stp	x29, x30, [sp, #-160]!
    23e4:	mov	x29, sp
    23e8:	str	x0, [sp, #24]
    23ec:	str	x1, [sp, #16]
    23f0:	ldr	x0, [sp, #24]
    23f4:	str	x0, [sp, #152]
    23f8:	b	29c4 <flip_types+0x5e4>
    23fc:	ldr	x0, [sp, #152]
    2400:	ldr	w0, [x0]
    2404:	bl	1c <__bswap_32>
    2408:	mov	w1, w0
    240c:	ldr	x0, [sp, #152]
    2410:	str	w1, [x0]
    2414:	nop
    2418:	ldr	x0, [sp, #152]
    241c:	ldr	w0, [x0, #4]
    2420:	bl	1c <__bswap_32>
    2424:	mov	w1, w0
    2428:	ldr	x0, [sp, #152]
    242c:	str	w1, [x0, #4]
    2430:	nop
    2434:	ldr	x0, [sp, #152]
    2438:	ldr	w0, [x0, #8]
    243c:	bl	1c <__bswap_32>
    2440:	mov	w1, w0
    2444:	ldr	x0, [sp, #152]
    2448:	str	w1, [x0, #8]
    244c:	nop
    2450:	ldr	x0, [sp, #152]
    2454:	ldr	w0, [x0, #4]
    2458:	lsr	w0, w0, #26
    245c:	str	w0, [sp, #44]
    2460:	ldr	x0, [sp, #152]
    2464:	ldr	w0, [x0, #8]
    2468:	mov	w0, w0
    246c:	str	x0, [sp, #56]
    2470:	ldr	x0, [sp, #152]
    2474:	ldr	w0, [x0, #4]
    2478:	and	w0, w0, #0xffffff
    247c:	str	w0, [sp, #40]
    2480:	ldr	w0, [sp, #44]
    2484:	and	w3, w0, #0xffff
    2488:	ldr	x0, [sp, #56]
    248c:	ldr	w1, [sp, #40]
    2490:	mov	x2, x1
    2494:	mov	x1, x0
    2498:	mov	w0, w3
    249c:	bl	484 <get_vbytes_v2>
    24a0:	str	x0, [sp, #48]
    24a4:	ldr	x1, [sp, #56]
    24a8:	mov	x0, #0xffffffff            	// #4294967295
    24ac:	cmp	x1, x0
    24b0:	cset	w0, eq  // eq = none
    24b4:	and	w0, w0, #0xff
    24b8:	and	x0, x0, #0xff
    24bc:	cmp	x0, #0x0
    24c0:	b.eq	2530 <flip_types+0x150>  // b.none
    24c4:	ldr	x0, [sp, #152]
    24c8:	ldr	w0, [x0, #12]
    24cc:	bl	1c <__bswap_32>
    24d0:	mov	w1, w0
    24d4:	ldr	x0, [sp, #152]
    24d8:	str	w1, [x0, #12]
    24dc:	nop
    24e0:	ldr	x0, [sp, #152]
    24e4:	ldr	w0, [x0, #16]
    24e8:	bl	1c <__bswap_32>
    24ec:	mov	w1, w0
    24f0:	ldr	x0, [sp, #152]
    24f4:	str	w1, [x0, #16]
    24f8:	nop
    24fc:	ldr	x0, [sp, #152]
    2500:	ldr	w0, [x0, #12]
    2504:	mov	w0, w0
    2508:	lsl	x1, x0, #32
    250c:	ldr	x0, [sp, #152]
    2510:	ldr	w0, [x0, #16]
    2514:	mov	w0, w0
    2518:	orr	x0, x1, x0
    251c:	str	x0, [sp, #56]
    2520:	ldr	x0, [sp, #152]
    2524:	add	x0, x0, #0x14
    2528:	str	x0, [sp, #152]
    252c:	b	253c <flip_types+0x15c>
    2530:	ldr	x0, [sp, #152]
    2534:	add	x0, x0, #0xc
    2538:	str	x0, [sp, #152]
    253c:	ldr	w0, [sp, #44]
    2540:	cmp	w0, #0xe
    2544:	b.eq	273c <flip_types+0x35c>  // b.none
    2548:	ldr	w0, [sp, #44]
    254c:	cmp	w0, #0xe
    2550:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    2554:	ldr	w0, [sp, #44]
    2558:	cmp	w0, #0xd
    255c:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    2560:	ldr	w0, [sp, #44]
    2564:	cmp	w0, #0x9
    2568:	b.cs	2604 <flip_types+0x224>  // b.hs, b.nlast
    256c:	ldr	w0, [sp, #44]
    2570:	cmp	w0, #0x8
    2574:	b.eq	2924 <flip_types+0x544>  // b.none
    2578:	ldr	w0, [sp, #44]
    257c:	cmp	w0, #0x8
    2580:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    2584:	ldr	w0, [sp, #44]
    2588:	cmp	w0, #0x7
    258c:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    2590:	ldr	w0, [sp, #44]
    2594:	cmp	w0, #0x6
    2598:	b.cs	27c8 <flip_types+0x3e8>  // b.hs, b.nlast
    259c:	ldr	w0, [sp, #44]
    25a0:	cmp	w0, #0x5
    25a4:	b.eq	2658 <flip_types+0x278>  // b.none
    25a8:	ldr	w0, [sp, #44]
    25ac:	cmp	w0, #0x5
    25b0:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    25b4:	ldr	w0, [sp, #44]
    25b8:	cmp	w0, #0x4
    25bc:	b.eq	26b0 <flip_types+0x2d0>  // b.none
    25c0:	ldr	w0, [sp, #44]
    25c4:	cmp	w0, #0x4
    25c8:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    25cc:	ldr	w0, [sp, #44]
    25d0:	cmp	w0, #0x3
    25d4:	b.eq	2604 <flip_types+0x224>  // b.none
    25d8:	ldr	w0, [sp, #44]
    25dc:	cmp	w0, #0x3
    25e0:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    25e4:	ldr	w0, [sp, #44]
    25e8:	cmp	w0, #0x0
    25ec:	b.eq	2604 <flip_types+0x224>  // b.none
    25f0:	ldr	w0, [sp, #44]
    25f4:	sub	w0, w0, #0x1
    25f8:	cmp	w0, #0x1
    25fc:	b.hi	2998 <flip_types+0x5b8>  // b.pmore
    2600:	b	2630 <flip_types+0x250>
    2604:	ldr	x0, [sp, #48]
    2608:	cmp	x0, #0x0
    260c:	b.eq	29b0 <flip_types+0x5d0>  // b.none
    2610:	adrp	x0, 0 <__bswap_16>
    2614:	add	x3, x0, #0x0
    2618:	mov	w2, #0x428                 	// #1064
    261c:	adrp	x0, 0 <__bswap_16>
    2620:	add	x1, x0, #0x0
    2624:	adrp	x0, 0 <__bswap_16>
    2628:	add	x0, x0, #0x0
    262c:	bl	0 <__assert_fail>
    2630:	ldr	x0, [sp, #152]
    2634:	str	x0, [sp, #144]
    2638:	ldr	x0, [sp, #144]
    263c:	ldr	w0, [x0]
    2640:	bl	1c <__bswap_32>
    2644:	mov	w1, w0
    2648:	ldr	x0, [sp, #144]
    264c:	str	w1, [x0]
    2650:	nop
    2654:	b	29b4 <flip_types+0x5d4>
    2658:	ldr	x0, [sp, #152]
    265c:	str	x0, [sp, #128]
    2660:	ldr	w0, [sp, #40]
    2664:	str	x0, [sp, #120]
    2668:	b	26a0 <flip_types+0x2c0>
    266c:	ldr	x0, [sp, #128]
    2670:	ldr	w0, [x0]
    2674:	bl	1c <__bswap_32>
    2678:	mov	w1, w0
    267c:	ldr	x0, [sp, #128]
    2680:	str	w1, [x0]
    2684:	nop
    2688:	ldr	x0, [sp, #128]
    268c:	add	x0, x0, #0x4
    2690:	str	x0, [sp, #128]
    2694:	ldr	x0, [sp, #120]
    2698:	sub	x0, x0, #0x1
    269c:	str	x0, [sp, #120]
    26a0:	ldr	x0, [sp, #120]
    26a4:	cmp	x0, #0x0
    26a8:	b.gt	266c <flip_types+0x28c>
    26ac:	b	29b4 <flip_types+0x5d4>
    26b0:	ldr	x0, [sp, #152]
    26b4:	str	x0, [sp, #136]
    26b8:	ldr	x0, [sp, #48]
    26bc:	cmp	x0, #0xc
    26c0:	b.eq	26e4 <flip_types+0x304>  // b.none
    26c4:	adrp	x0, 0 <__bswap_16>
    26c8:	add	x3, x0, #0x0
    26cc:	mov	w2, #0x448                 	// #1096
    26d0:	adrp	x0, 0 <__bswap_16>
    26d4:	add	x1, x0, #0x0
    26d8:	adrp	x0, 0 <__bswap_16>
    26dc:	add	x0, x0, #0x0
    26e0:	bl	0 <__assert_fail>
    26e4:	ldr	x0, [sp, #136]
    26e8:	ldr	w0, [x0]
    26ec:	bl	1c <__bswap_32>
    26f0:	mov	w1, w0
    26f4:	ldr	x0, [sp, #136]
    26f8:	str	w1, [x0]
    26fc:	nop
    2700:	ldr	x0, [sp, #136]
    2704:	ldr	w0, [x0, #4]
    2708:	bl	1c <__bswap_32>
    270c:	mov	w1, w0
    2710:	ldr	x0, [sp, #136]
    2714:	str	w1, [x0, #4]
    2718:	nop
    271c:	ldr	x0, [sp, #136]
    2720:	ldr	w0, [x0, #8]
    2724:	bl	1c <__bswap_32>
    2728:	mov	w1, w0
    272c:	ldr	x0, [sp, #136]
    2730:	str	w1, [x0, #8]
    2734:	nop
    2738:	b	29b4 <flip_types+0x5d4>
    273c:	ldr	x0, [sp, #152]
    2740:	str	x0, [sp, #64]
    2744:	ldr	x0, [sp, #48]
    2748:	cmp	x0, #0x8
    274c:	b.eq	2770 <flip_types+0x390>  // b.none
    2750:	adrp	x0, 0 <__bswap_16>
    2754:	add	x3, x0, #0x0
    2758:	mov	w2, #0x456                 	// #1110
    275c:	adrp	x0, 0 <__bswap_16>
    2760:	add	x1, x0, #0x0
    2764:	adrp	x0, 0 <__bswap_16>
    2768:	add	x0, x0, #0x0
    276c:	bl	0 <__assert_fail>
    2770:	ldr	x0, [sp, #64]
    2774:	ldr	w0, [x0]
    2778:	bl	1c <__bswap_32>
    277c:	mov	w1, w0
    2780:	ldr	x0, [sp, #64]
    2784:	str	w1, [x0]
    2788:	nop
    278c:	ldr	x0, [sp, #64]
    2790:	ldrh	w0, [x0, #4]
    2794:	bl	0 <__bswap_16>
    2798:	and	w1, w0, #0xffff
    279c:	ldr	x0, [sp, #64]
    27a0:	strh	w1, [x0, #4]
    27a4:	nop
    27a8:	ldr	x0, [sp, #64]
    27ac:	ldrh	w0, [x0, #6]
    27b0:	bl	0 <__bswap_16>
    27b4:	and	w1, w0, #0xffff
    27b8:	ldr	x0, [sp, #64]
    27bc:	strh	w1, [x0, #6]
    27c0:	nop
    27c4:	b	29b4 <flip_types+0x5d4>
    27c8:	ldr	x1, [sp, #56]
    27cc:	mov	x0, #0x1fffffff            	// #536870911
    27d0:	cmp	x1, x0
    27d4:	cset	w0, hi  // hi = pmore
    27d8:	and	w0, w0, #0xff
    27dc:	and	x0, x0, #0xff
    27e0:	cmp	x0, #0x0
    27e4:	b.eq	2894 <flip_types+0x4b4>  // b.none
    27e8:	ldr	x0, [sp, #152]
    27ec:	str	x0, [sp, #104]
    27f0:	ldr	w0, [sp, #40]
    27f4:	str	x0, [sp, #112]
    27f8:	b	2884 <flip_types+0x4a4>
    27fc:	ldr	x0, [sp, #104]
    2800:	ldr	w0, [x0]
    2804:	bl	1c <__bswap_32>
    2808:	mov	w1, w0
    280c:	ldr	x0, [sp, #104]
    2810:	str	w1, [x0]
    2814:	nop
    2818:	ldr	x0, [sp, #104]
    281c:	ldr	w0, [x0, #4]
    2820:	bl	1c <__bswap_32>
    2824:	mov	w1, w0
    2828:	ldr	x0, [sp, #104]
    282c:	str	w1, [x0, #4]
    2830:	nop
    2834:	ldr	x0, [sp, #104]
    2838:	ldr	w0, [x0, #8]
    283c:	bl	1c <__bswap_32>
    2840:	mov	w1, w0
    2844:	ldr	x0, [sp, #104]
    2848:	str	w1, [x0, #8]
    284c:	nop
    2850:	ldr	x0, [sp, #104]
    2854:	ldr	w0, [x0, #12]
    2858:	bl	1c <__bswap_32>
    285c:	mov	w1, w0
    2860:	ldr	x0, [sp, #104]
    2864:	str	w1, [x0, #12]
    2868:	nop
    286c:	ldr	x0, [sp, #112]
    2870:	sub	x0, x0, #0x1
    2874:	str	x0, [sp, #112]
    2878:	ldr	x0, [sp, #104]
    287c:	add	x0, x0, #0x10
    2880:	str	x0, [sp, #104]
    2884:	ldr	x0, [sp, #112]
    2888:	cmp	x0, #0x0
    288c:	b.gt	27fc <flip_types+0x41c>
    2890:	b	29b4 <flip_types+0x5d4>
    2894:	ldr	x0, [sp, #152]
    2898:	str	x0, [sp, #88]
    289c:	ldr	w0, [sp, #40]
    28a0:	str	x0, [sp, #96]
    28a4:	b	2914 <flip_types+0x534>
    28a8:	ldr	x0, [sp, #88]
    28ac:	ldr	w0, [x0]
    28b0:	bl	1c <__bswap_32>
    28b4:	mov	w1, w0
    28b8:	ldr	x0, [sp, #88]
    28bc:	str	w1, [x0]
    28c0:	nop
    28c4:	ldr	x0, [sp, #88]
    28c8:	ldr	w0, [x0, #4]
    28cc:	bl	1c <__bswap_32>
    28d0:	mov	w1, w0
    28d4:	ldr	x0, [sp, #88]
    28d8:	str	w1, [x0, #4]
    28dc:	nop
    28e0:	ldr	x0, [sp, #88]
    28e4:	ldr	w0, [x0, #8]
    28e8:	bl	1c <__bswap_32>
    28ec:	mov	w1, w0
    28f0:	ldr	x0, [sp, #88]
    28f4:	str	w1, [x0, #8]
    28f8:	nop
    28fc:	ldr	x0, [sp, #96]
    2900:	sub	x0, x0, #0x1
    2904:	str	x0, [sp, #96]
    2908:	ldr	x0, [sp, #88]
    290c:	add	x0, x0, #0xc
    2910:	str	x0, [sp, #88]
    2914:	ldr	x0, [sp, #96]
    2918:	cmp	x0, #0x0
    291c:	b.gt	28a8 <flip_types+0x4c8>
    2920:	b	29b4 <flip_types+0x5d4>
    2924:	ldr	x0, [sp, #152]
    2928:	str	x0, [sp, #80]
    292c:	ldr	w0, [sp, #40]
    2930:	str	x0, [sp, #72]
    2934:	b	2988 <flip_types+0x5a8>
    2938:	ldr	x0, [sp, #80]
    293c:	ldr	w0, [x0]
    2940:	bl	1c <__bswap_32>
    2944:	mov	w1, w0
    2948:	ldr	x0, [sp, #80]
    294c:	str	w1, [x0]
    2950:	nop
    2954:	ldr	x0, [sp, #80]
    2958:	ldr	w0, [x0, #4]
    295c:	bl	1c <__bswap_32>
    2960:	mov	w1, w0
    2964:	ldr	x0, [sp, #80]
    2968:	str	w1, [x0, #4]
    296c:	nop
    2970:	ldr	x0, [sp, #80]
    2974:	add	x0, x0, #0x8
    2978:	str	x0, [sp, #80]
    297c:	ldr	x0, [sp, #72]
    2980:	sub	x0, x0, #0x1
    2984:	str	x0, [sp, #72]
    2988:	ldr	x0, [sp, #72]
    298c:	cmp	x0, #0x0
    2990:	b.gt	2938 <flip_types+0x558>
    2994:	b	29b4 <flip_types+0x5d4>
    2998:	ldr	w1, [sp, #44]
    299c:	adrp	x0, 0 <__bswap_16>
    29a0:	add	x0, x0, #0x0
    29a4:	bl	0 <ctf_dprintf>
    29a8:	mov	w0, #0x3ef                 	// #1007
    29ac:	b	29e0 <flip_types+0x600>
    29b0:	nop
    29b4:	ldr	x1, [sp, #152]
    29b8:	ldr	x0, [sp, #48]
    29bc:	add	x0, x1, x0
    29c0:	str	x0, [sp, #152]
    29c4:	ldr	x1, [sp, #24]
    29c8:	ldr	x0, [sp, #16]
    29cc:	add	x1, x1, x0
    29d0:	ldr	x0, [sp, #152]
    29d4:	cmp	x1, x0
    29d8:	b.hi	23fc <flip_types+0x1c>  // b.pmore
    29dc:	mov	w0, #0x0                   	// #0
    29e0:	ldp	x29, x30, [sp], #160
    29e4:	ret

00000000000029e8 <flip_ctf>:
    29e8:	stp	x29, x30, [sp, #-32]!
    29ec:	mov	x29, sp
    29f0:	str	x0, [sp, #24]
    29f4:	str	x1, [sp, #16]
    29f8:	ldr	x0, [sp, #24]
    29fc:	ldr	w0, [x0, #16]
    2a00:	mov	w0, w0
    2a04:	ldr	x1, [sp, #16]
    2a08:	add	x2, x1, x0
    2a0c:	ldr	x0, [sp, #24]
    2a10:	ldr	w1, [x0, #20]
    2a14:	ldr	x0, [sp, #24]
    2a18:	ldr	w0, [x0, #16]
    2a1c:	sub	w0, w1, w0
    2a20:	mov	w0, w0
    2a24:	mov	x1, x0
    2a28:	mov	x0, x2
    2a2c:	bl	2240 <flip_lbls>
    2a30:	ldr	x0, [sp, #24]
    2a34:	ldr	w0, [x0, #20]
    2a38:	mov	w0, w0
    2a3c:	ldr	x1, [sp, #16]
    2a40:	add	x2, x1, x0
    2a44:	ldr	x0, [sp, #24]
    2a48:	ldr	w1, [x0, #24]
    2a4c:	ldr	x0, [sp, #24]
    2a50:	ldr	w0, [x0, #20]
    2a54:	sub	w0, w1, w0
    2a58:	mov	w0, w0
    2a5c:	mov	x1, x0
    2a60:	mov	x0, x2
    2a64:	bl	22d4 <flip_objts>
    2a68:	ldr	x0, [sp, #24]
    2a6c:	ldr	w0, [x0, #24]
    2a70:	mov	w0, w0
    2a74:	ldr	x1, [sp, #16]
    2a78:	add	x2, x1, x0
    2a7c:	ldr	x0, [sp, #24]
    2a80:	ldr	w1, [x0, #28]
    2a84:	ldr	x0, [sp, #24]
    2a88:	ldr	w0, [x0, #24]
    2a8c:	sub	w0, w1, w0
    2a90:	mov	w0, w0
    2a94:	mov	x1, x0
    2a98:	mov	x0, x2
    2a9c:	bl	22d4 <flip_objts>
    2aa0:	ldr	x0, [sp, #24]
    2aa4:	ldr	w0, [x0, #28]
    2aa8:	mov	w0, w0
    2aac:	ldr	x1, [sp, #16]
    2ab0:	add	x2, x1, x0
    2ab4:	ldr	x0, [sp, #24]
    2ab8:	ldr	w1, [x0, #32]
    2abc:	ldr	x0, [sp, #24]
    2ac0:	ldr	w0, [x0, #28]
    2ac4:	sub	w0, w1, w0
    2ac8:	mov	w0, w0
    2acc:	mov	x1, x0
    2ad0:	mov	x0, x2
    2ad4:	bl	22d4 <flip_objts>
    2ad8:	ldr	x0, [sp, #24]
    2adc:	ldr	w0, [x0, #32]
    2ae0:	mov	w0, w0
    2ae4:	ldr	x1, [sp, #16]
    2ae8:	add	x2, x1, x0
    2aec:	ldr	x0, [sp, #24]
    2af0:	ldr	w1, [x0, #36]
    2af4:	ldr	x0, [sp, #24]
    2af8:	ldr	w0, [x0, #32]
    2afc:	sub	w0, w1, w0
    2b00:	mov	w0, w0
    2b04:	mov	x1, x0
    2b08:	mov	x0, x2
    2b0c:	bl	22d4 <flip_objts>
    2b10:	ldr	x0, [sp, #24]
    2b14:	ldr	w0, [x0, #36]
    2b18:	mov	w0, w0
    2b1c:	ldr	x1, [sp, #16]
    2b20:	add	x2, x1, x0
    2b24:	ldr	x0, [sp, #24]
    2b28:	ldr	w1, [x0, #40]
    2b2c:	ldr	x0, [sp, #24]
    2b30:	ldr	w0, [x0, #36]
    2b34:	sub	w0, w1, w0
    2b38:	mov	w0, w0
    2b3c:	mov	x1, x0
    2b40:	mov	x0, x2
    2b44:	bl	234c <flip_vars>
    2b48:	ldr	x0, [sp, #24]
    2b4c:	ldr	w0, [x0, #40]
    2b50:	mov	w0, w0
    2b54:	ldr	x1, [sp, #16]
    2b58:	add	x2, x1, x0
    2b5c:	ldr	x0, [sp, #24]
    2b60:	ldr	w1, [x0, #44]
    2b64:	ldr	x0, [sp, #24]
    2b68:	ldr	w0, [x0, #40]
    2b6c:	sub	w0, w1, w0
    2b70:	mov	w0, w0
    2b74:	mov	x1, x0
    2b78:	mov	x0, x2
    2b7c:	bl	23e0 <flip_types>
    2b80:	ldp	x29, x30, [sp], #32
    2b84:	ret

0000000000002b88 <ctf_set_ctl_hashes>:
    2b88:	stp	x29, x30, [sp, #-32]!
    2b8c:	mov	x29, sp
    2b90:	str	x0, [sp, #24]
    2b94:	ldr	x0, [sp, #24]
    2b98:	adrp	x1, 0 <__bswap_16>
    2b9c:	add	x1, x1, #0x0
    2ba0:	str	x1, [x0, #216]
    2ba4:	ldr	x0, [sp, #24]
    2ba8:	ldr	x0, [x0, #216]
    2bac:	bl	0 <strlen>
    2bb0:	mov	x1, x0
    2bb4:	ldr	x0, [sp, #24]
    2bb8:	str	x1, [x0, #224]
    2bbc:	ldr	x0, [sp, #24]
    2bc0:	add	x1, x0, #0x98
    2bc4:	ldr	x0, [sp, #24]
    2bc8:	str	x1, [x0, #232]
    2bcc:	ldr	x0, [sp, #24]
    2bd0:	adrp	x1, 0 <__bswap_16>
    2bd4:	add	x1, x1, #0x0
    2bd8:	str	x1, [x0, #240]
    2bdc:	ldr	x0, [sp, #24]
    2be0:	ldr	x0, [x0, #240]
    2be4:	bl	0 <strlen>
    2be8:	mov	x1, x0
    2bec:	ldr	x0, [sp, #24]
    2bf0:	str	x1, [x0, #248]
    2bf4:	ldr	x0, [sp, #24]
    2bf8:	add	x1, x0, #0xa8
    2bfc:	ldr	x0, [sp, #24]
    2c00:	str	x1, [x0, #256]
    2c04:	ldr	x0, [sp, #24]
    2c08:	adrp	x1, 0 <__bswap_16>
    2c0c:	add	x1, x1, #0x0
    2c10:	str	x1, [x0, #264]
    2c14:	ldr	x0, [sp, #24]
    2c18:	ldr	x0, [x0, #264]
    2c1c:	bl	0 <strlen>
    2c20:	mov	x1, x0
    2c24:	ldr	x0, [sp, #24]
    2c28:	str	x1, [x0, #272]
    2c2c:	ldr	x0, [sp, #24]
    2c30:	add	x1, x0, #0xb8
    2c34:	ldr	x0, [sp, #24]
    2c38:	str	x1, [x0, #280]
    2c3c:	ldr	x0, [sp, #24]
    2c40:	adrp	x1, c0 <get_vlen_v1+0x14>
    2c44:	add	x1, x1, #0x0
    2c48:	str	x1, [x0, #288]
    2c4c:	ldr	x0, [sp, #24]
    2c50:	ldr	x0, [x0, #288]
    2c54:	bl	0 <strlen>
    2c58:	mov	x1, x0
    2c5c:	ldr	x0, [sp, #24]
    2c60:	str	x1, [x0, #296]
    2c64:	ldr	x0, [sp, #24]
    2c68:	add	x1, x0, #0xc8
    2c6c:	ldr	x0, [sp, #24]
    2c70:	str	x1, [x0, #304]
    2c74:	ldr	x0, [sp, #24]
    2c78:	str	xzr, [x0, #312]
    2c7c:	ldr	x0, [sp, #24]
    2c80:	str	xzr, [x0, #320]
    2c84:	ldr	x0, [sp, #24]
    2c88:	str	xzr, [x0, #328]
    2c8c:	nop
    2c90:	ldp	x29, x30, [sp], #32
    2c94:	ret

0000000000002c98 <ctf_simple_open>:
    2c98:	sub	sp, sp, #0x60
    2c9c:	stp	x29, x30, [sp, #16]
    2ca0:	add	x29, sp, #0x10
    2ca4:	str	x0, [sp, #88]
    2ca8:	str	x1, [sp, #80]
    2cac:	str	x2, [sp, #72]
    2cb0:	str	x3, [sp, #64]
    2cb4:	str	x4, [sp, #56]
    2cb8:	str	x5, [sp, #48]
    2cbc:	str	x6, [sp, #40]
    2cc0:	str	x7, [sp, #32]
    2cc4:	ldr	x0, [sp, #32]
    2cc8:	str	x0, [sp, #8]
    2ccc:	str	wzr, [sp]
    2cd0:	mov	x7, #0x0                   	// #0
    2cd4:	ldr	x6, [sp, #40]
    2cd8:	ldr	x5, [sp, #48]
    2cdc:	ldr	x4, [sp, #56]
    2ce0:	ldr	x3, [sp, #64]
    2ce4:	ldr	x2, [sp, #72]
    2ce8:	ldr	x1, [sp, #80]
    2cec:	ldr	x0, [sp, #88]
    2cf0:	bl	2d00 <ctf_simple_open_internal>
    2cf4:	ldp	x29, x30, [sp, #16]
    2cf8:	add	sp, sp, #0x60
    2cfc:	ret

0000000000002d00 <ctf_simple_open_internal>:
    2d00:	stp	x29, x30, [sp, #-240]!
    2d04:	mov	x29, sp
    2d08:	str	x0, [sp, #72]
    2d0c:	str	x1, [sp, #64]
    2d10:	str	x2, [sp, #56]
    2d14:	str	x3, [sp, #48]
    2d18:	str	x4, [sp, #40]
    2d1c:	str	x5, [sp, #32]
    2d20:	str	x6, [sp, #24]
    2d24:	str	x7, [sp, #16]
    2d28:	str	xzr, [sp, #232]
    2d2c:	str	xzr, [sp, #224]
    2d30:	str	xzr, [sp, #216]
    2d34:	adrp	x0, b8 <get_vlen_v1+0xc>
    2d38:	add	x0, x0, #0x0
    2d3c:	str	x0, [sp, #184]
    2d40:	mov	x0, #0x1                   	// #1
    2d44:	str	x0, [sp, #208]
    2d48:	ldr	x0, [sp, #72]
    2d4c:	cmp	x0, #0x0
    2d50:	b.eq	2d84 <ctf_simple_open_internal+0x84>  // b.none
    2d54:	add	x2, sp, #0x98
    2d58:	add	x3, sp, #0xb8
    2d5c:	ldp	x0, x1, [x3]
    2d60:	stp	x0, x1, [x2]
    2d64:	ldp	x0, x1, [x3, #16]
    2d68:	stp	x0, x1, [x2, #16]
    2d6c:	ldr	x0, [sp, #72]
    2d70:	str	x0, [sp, #160]
    2d74:	ldr	x0, [sp, #64]
    2d78:	str	x0, [sp, #168]
    2d7c:	add	x0, sp, #0x98
    2d80:	str	x0, [sp, #232]
    2d84:	ldr	x0, [sp, #56]
    2d88:	cmp	x0, #0x0
    2d8c:	b.eq	2dc8 <ctf_simple_open_internal+0xc8>  // b.none
    2d90:	add	x2, sp, #0x78
    2d94:	add	x3, sp, #0xb8
    2d98:	ldp	x0, x1, [x3]
    2d9c:	stp	x0, x1, [x2]
    2da0:	ldp	x0, x1, [x3, #16]
    2da4:	stp	x0, x1, [x2, #16]
    2da8:	ldr	x0, [sp, #56]
    2dac:	str	x0, [sp, #128]
    2db0:	ldr	x0, [sp, #48]
    2db4:	str	x0, [sp, #136]
    2db8:	ldr	x0, [sp, #40]
    2dbc:	str	x0, [sp, #144]
    2dc0:	add	x0, sp, #0x78
    2dc4:	str	x0, [sp, #224]
    2dc8:	ldr	x0, [sp, #32]
    2dcc:	cmp	x0, #0x0
    2dd0:	b.eq	2e04 <ctf_simple_open_internal+0x104>  // b.none
    2dd4:	add	x2, sp, #0x58
    2dd8:	add	x3, sp, #0xb8
    2ddc:	ldp	x0, x1, [x3]
    2de0:	stp	x0, x1, [x2]
    2de4:	ldp	x0, x1, [x3, #16]
    2de8:	stp	x0, x1, [x2, #16]
    2dec:	ldr	x0, [sp, #32]
    2df0:	str	x0, [sp, #96]
    2df4:	ldr	x0, [sp, #24]
    2df8:	str	x0, [sp, #104]
    2dfc:	add	x0, sp, #0x58
    2e00:	str	x0, [sp, #216]
    2e04:	ldr	x5, [sp, #248]
    2e08:	ldr	w4, [sp, #240]
    2e0c:	ldr	x3, [sp, #16]
    2e10:	ldr	x2, [sp, #216]
    2e14:	ldr	x1, [sp, #224]
    2e18:	ldr	x0, [sp, #232]
    2e1c:	bl	2e64 <ctf_bufopen_internal>
    2e20:	ldp	x29, x30, [sp], #240
    2e24:	ret

0000000000002e28 <ctf_bufopen>:
    2e28:	stp	x29, x30, [sp, #-48]!
    2e2c:	mov	x29, sp
    2e30:	str	x0, [sp, #40]
    2e34:	str	x1, [sp, #32]
    2e38:	str	x2, [sp, #24]
    2e3c:	str	x3, [sp, #16]
    2e40:	ldr	x5, [sp, #16]
    2e44:	mov	w4, #0x0                   	// #0
    2e48:	mov	x3, #0x0                   	// #0
    2e4c:	ldr	x2, [sp, #24]
    2e50:	ldr	x1, [sp, #32]
    2e54:	ldr	x0, [sp, #40]
    2e58:	bl	2e64 <ctf_bufopen_internal>
    2e5c:	ldp	x29, x30, [sp], #48
    2e60:	ret

0000000000002e64 <ctf_bufopen_internal>:
    2e64:	stp	x29, x30, [sp, #-160]!
    2e68:	mov	x29, sp
    2e6c:	str	x19, [sp, #16]
    2e70:	str	x0, [sp, #72]
    2e74:	str	x1, [sp, #64]
    2e78:	str	x2, [sp, #56]
    2e7c:	str	x3, [sp, #48]
    2e80:	str	w4, [sp, #44]
    2e84:	str	x5, [sp, #32]
    2e88:	mov	x0, #0x34                  	// #52
    2e8c:	str	x0, [sp, #152]
    2e90:	str	wzr, [sp, #148]
    2e94:	bl	0 <libctf_init_debug>
    2e98:	ldr	x0, [sp, #72]
    2e9c:	cmp	x0, #0x0
    2ea0:	b.eq	2ec8 <ctf_bufopen_internal+0x64>  // b.none
    2ea4:	ldr	x0, [sp, #64]
    2ea8:	cmp	x0, #0x0
    2eac:	b.eq	2ed8 <ctf_bufopen_internal+0x74>  // b.none
    2eb0:	ldr	x0, [sp, #56]
    2eb4:	cmp	x0, #0x0
    2eb8:	b.ne	2ed8 <ctf_bufopen_internal+0x74>  // b.any
    2ebc:	ldr	x0, [sp, #48]
    2ec0:	cmp	x0, #0x0
    2ec4:	b.ne	2ed8 <ctf_bufopen_internal+0x74>  // b.any
    2ec8:	mov	w1, #0x16                  	// #22
    2ecc:	ldr	x0, [sp, #32]
    2ed0:	bl	0 <ctf_set_open_errno>
    2ed4:	b	3a00 <ctf_bufopen_internal+0xb9c>
    2ed8:	ldr	x0, [sp, #64]
    2edc:	cmp	x0, #0x0
    2ee0:	b.eq	2f14 <ctf_bufopen_internal+0xb0>  // b.none
    2ee4:	ldr	x0, [sp, #64]
    2ee8:	ldr	x0, [x0, #24]
    2eec:	cmp	x0, #0x10
    2ef0:	b.eq	2f14 <ctf_bufopen_internal+0xb0>  // b.none
    2ef4:	ldr	x0, [sp, #64]
    2ef8:	ldr	x0, [x0, #24]
    2efc:	cmp	x0, #0x18
    2f00:	b.eq	2f14 <ctf_bufopen_internal+0xb0>  // b.none
    2f04:	mov	w1, #0x3ec                 	// #1004
    2f08:	ldr	x0, [sp, #32]
    2f0c:	bl	0 <ctf_set_open_errno>
    2f10:	b	3a00 <ctf_bufopen_internal+0xb9c>
    2f14:	ldr	x0, [sp, #64]
    2f18:	cmp	x0, #0x0
    2f1c:	b.eq	2f40 <ctf_bufopen_internal+0xdc>  // b.none
    2f20:	ldr	x0, [sp, #64]
    2f24:	ldr	x0, [x0, #8]
    2f28:	cmp	x0, #0x0
    2f2c:	b.ne	2f40 <ctf_bufopen_internal+0xdc>  // b.any
    2f30:	mov	w1, #0x3ed                 	// #1005
    2f34:	ldr	x0, [sp, #32]
    2f38:	bl	0 <ctf_set_open_errno>
    2f3c:	b	3a00 <ctf_bufopen_internal+0xb9c>
    2f40:	ldr	x0, [sp, #56]
    2f44:	cmp	x0, #0x0
    2f48:	b.eq	2f6c <ctf_bufopen_internal+0x108>  // b.none
    2f4c:	ldr	x0, [sp, #56]
    2f50:	ldr	x0, [x0, #8]
    2f54:	cmp	x0, #0x0
    2f58:	b.ne	2f6c <ctf_bufopen_internal+0x108>  // b.any
    2f5c:	mov	w1, #0x3ee                 	// #1006
    2f60:	ldr	x0, [sp, #32]
    2f64:	bl	0 <ctf_set_open_errno>
    2f68:	b	3a00 <ctf_bufopen_internal+0xb9c>
    2f6c:	ldr	x0, [sp, #72]
    2f70:	ldr	x0, [x0, #16]
    2f74:	cmp	x0, #0x3
    2f78:	b.hi	2f8c <ctf_bufopen_internal+0x128>  // b.pmore
    2f7c:	mov	w1, #0x3f1                 	// #1009
    2f80:	ldr	x0, [sp, #32]
    2f84:	bl	0 <ctf_set_open_errno>
    2f88:	b	3a00 <ctf_bufopen_internal+0xb9c>
    2f8c:	ldr	x0, [sp, #72]
    2f90:	ldr	x0, [x0, #8]
    2f94:	str	x0, [sp, #136]
    2f98:	ldr	x0, [sp, #136]
    2f9c:	ldrh	w0, [x0]
    2fa0:	mov	w1, w0
    2fa4:	ldr	x0, [sp, #136]
    2fa8:	ldrb	w0, [x0, #2]
    2fac:	mov	w2, w0
    2fb0:	adrp	x0, 0 <__bswap_16>
    2fb4:	add	x0, x0, #0x0
    2fb8:	bl	0 <ctf_dprintf>
    2fbc:	ldr	x0, [sp, #136]
    2fc0:	ldrh	w1, [x0]
    2fc4:	mov	w0, #0xdff2                	// #57330
    2fc8:	cmp	w1, w0
    2fcc:	cset	w0, ne  // ne = any
    2fd0:	and	w0, w0, #0xff
    2fd4:	and	x0, x0, #0xff
    2fd8:	cmp	x0, #0x0
    2fdc:	b.eq	3038 <ctf_bufopen_internal+0x1d4>  // b.none
    2fe0:	ldr	x0, [sp, #136]
    2fe4:	ldrh	w19, [x0]
    2fe8:	mov	w0, #0xffffdff2            	// #-8206
    2fec:	bl	0 <__bswap_16>
    2ff0:	and	w0, w0, #0xffff
    2ff4:	cmp	w19, w0
    2ff8:	b.ne	3028 <ctf_bufopen_internal+0x1c4>  // b.any
    2ffc:	ldr	x0, [sp, #136]
    3000:	ldrb	w0, [x0, #2]
    3004:	cmp	w0, #0x4
    3008:	b.eq	301c <ctf_bufopen_internal+0x1b8>  // b.none
    300c:	mov	w1, #0x3ea                 	// #1002
    3010:	ldr	x0, [sp, #32]
    3014:	bl	0 <ctf_set_open_errno>
    3018:	b	3a00 <ctf_bufopen_internal+0xb9c>
    301c:	mov	w0, #0x1                   	// #1
    3020:	str	w0, [sp, #148]
    3024:	b	3038 <ctf_bufopen_internal+0x1d4>
    3028:	mov	w1, #0x3f1                 	// #1009
    302c:	ldr	x0, [sp, #32]
    3030:	bl	0 <ctf_set_open_errno>
    3034:	b	3a00 <ctf_bufopen_internal+0xb9c>
    3038:	ldr	x0, [sp, #136]
    303c:	ldrb	w0, [x0, #2]
    3040:	cmp	w0, #0x0
    3044:	cset	w0, eq  // eq = none
    3048:	and	w0, w0, #0xff
    304c:	and	x0, x0, #0xff
    3050:	cmp	x0, #0x0
    3054:	b.ne	3078 <ctf_bufopen_internal+0x214>  // b.any
    3058:	ldr	x0, [sp, #136]
    305c:	ldrb	w0, [x0, #2]
    3060:	cmp	w0, #0x4
    3064:	cset	w0, hi  // hi = pmore
    3068:	and	w0, w0, #0xff
    306c:	and	x0, x0, #0xff
    3070:	cmp	x0, #0x0
    3074:	b.eq	3088 <ctf_bufopen_internal+0x224>  // b.none
    3078:	mov	w1, #0x3ea                 	// #1002
    307c:	ldr	x0, [sp, #32]
    3080:	bl	0 <ctf_set_open_errno>
    3084:	b	3a00 <ctf_bufopen_internal+0xb9c>
    3088:	ldr	x0, [sp, #64]
    308c:	cmp	x0, #0x0
    3090:	b.eq	30cc <ctf_bufopen_internal+0x268>  // b.none
    3094:	ldr	x0, [sp, #136]
    3098:	ldrb	w0, [x0, #2]
    309c:	cmp	w0, #0x2
    30a0:	b.hi	30cc <ctf_bufopen_internal+0x268>  // b.pmore
    30a4:	ldr	x0, [sp, #136]
    30a8:	ldrb	w0, [x0, #2]
    30ac:	mov	w1, w0
    30b0:	adrp	x0, 0 <__bswap_16>
    30b4:	add	x0, x0, #0x0
    30b8:	bl	0 <ctf_dprintf>
    30bc:	mov	w1, #0x40a                 	// #1034
    30c0:	ldr	x0, [sp, #32]
    30c4:	bl	0 <ctf_set_open_errno>
    30c8:	b	3a00 <ctf_bufopen_internal+0xb9c>
    30cc:	ldr	x0, [sp, #136]
    30d0:	ldrb	w0, [x0, #2]
    30d4:	cmp	w0, #0x3
    30d8:	b.hi	30e4 <ctf_bufopen_internal+0x280>  // b.pmore
    30dc:	mov	x0, #0x28                  	// #40
    30e0:	str	x0, [sp, #152]
    30e4:	ldr	x0, [sp, #72]
    30e8:	ldr	x0, [x0, #16]
    30ec:	ldr	x1, [sp, #152]
    30f0:	cmp	x1, x0
    30f4:	b.ls	3108 <ctf_bufopen_internal+0x2a4>  // b.plast
    30f8:	mov	w1, #0x3f1                 	// #1009
    30fc:	ldr	x0, [sp, #32]
    3100:	bl	0 <ctf_set_open_errno>
    3104:	b	3a00 <ctf_bufopen_internal+0xb9c>
    3108:	mov	x0, #0x2d8                 	// #728
    310c:	bl	0 <malloc>
    3110:	str	x0, [sp, #128]
    3114:	ldr	x0, [sp, #128]
    3118:	cmp	x0, #0x0
    311c:	b.ne	3130 <ctf_bufopen_internal+0x2cc>  // b.any
    3120:	mov	w1, #0xc                   	// #12
    3124:	ldr	x0, [sp, #32]
    3128:	bl	0 <ctf_set_open_errno>
    312c:	b	3a00 <ctf_bufopen_internal+0xb9c>
    3130:	mov	x2, #0x2d8                 	// #728
    3134:	mov	w1, #0x0                   	// #0
    3138:	ldr	x0, [sp, #128]
    313c:	bl	0 <memset>
    3140:	ldr	w0, [sp, #44]
    3144:	cmp	w0, #0x0
    3148:	b.eq	3160 <ctf_bufopen_internal+0x2fc>  // b.none
    314c:	ldr	x0, [sp, #128]
    3150:	ldr	w0, [x0, #552]
    3154:	orr	w1, w0, #0x2
    3158:	ldr	x0, [sp, #128]
    315c:	str	w1, [x0, #552]
    3160:	mov	x0, #0x34                  	// #52
    3164:	bl	0 <malloc>
    3168:	mov	x1, x0
    316c:	ldr	x0, [sp, #128]
    3170:	str	x1, [x0, #8]
    3174:	ldr	x0, [sp, #128]
    3178:	ldr	x0, [x0, #8]
    317c:	cmp	x0, #0x0
    3180:	b.ne	319c <ctf_bufopen_internal+0x338>  // b.any
    3184:	ldr	x0, [sp, #128]
    3188:	bl	0 <free>
    318c:	mov	w1, #0xc                   	// #12
    3190:	ldr	x0, [sp, #32]
    3194:	bl	0 <ctf_set_open_errno>
    3198:	b	3a00 <ctf_bufopen_internal+0xb9c>
    319c:	ldr	x0, [sp, #128]
    31a0:	ldr	x0, [x0, #8]
    31a4:	str	x0, [sp, #120]
    31a8:	ldr	x0, [sp, #72]
    31ac:	ldr	x0, [x0, #8]
    31b0:	ldr	x2, [sp, #152]
    31b4:	mov	x1, x0
    31b8:	ldr	x0, [sp, #120]
    31bc:	bl	0 <memcpy>
    31c0:	ldr	x0, [sp, #136]
    31c4:	ldrb	w0, [x0, #2]
    31c8:	cmp	w0, #0x3
    31cc:	b.hi	31d8 <ctf_bufopen_internal+0x374>  // b.pmore
    31d0:	ldr	x0, [sp, #120]
    31d4:	bl	a34 <upgrade_header>
    31d8:	ldr	w0, [sp, #148]
    31dc:	cmp	w0, #0x0
    31e0:	b.eq	31ec <ctf_bufopen_internal+0x388>  // b.none
    31e4:	ldr	x0, [sp, #120]
    31e8:	bl	20d0 <flip_header>
    31ec:	ldr	x0, [sp, #120]
    31f0:	ldrb	w1, [x0, #3]
    31f4:	ldr	x0, [sp, #128]
    31f8:	strb	w1, [x0, #16]
    31fc:	ldr	x0, [sp, #120]
    3200:	ldr	w1, [x0, #44]
    3204:	ldr	x0, [sp, #120]
    3208:	ldr	w0, [x0, #48]
    320c:	add	w0, w1, w0
    3210:	mov	w1, w0
    3214:	ldr	x0, [sp, #128]
    3218:	str	x1, [x0, #416]
    321c:	ldr	x0, [sp, #128]
    3220:	ldr	x0, [x0, #416]
    3224:	mov	x1, x0
    3228:	adrp	x0, 0 <__bswap_16>
    322c:	add	x0, x0, #0x0
    3230:	bl	0 <ctf_dprintf>
    3234:	ldr	x0, [sp, #120]
    3238:	ldr	w0, [x0, #16]
    323c:	mov	w1, w0
    3240:	ldr	x0, [sp, #128]
    3244:	ldr	x0, [x0, #416]
    3248:	cmp	x1, x0
    324c:	b.hi	32f8 <ctf_bufopen_internal+0x494>  // b.pmore
    3250:	ldr	x0, [sp, #120]
    3254:	ldr	w0, [x0, #20]
    3258:	mov	w1, w0
    325c:	ldr	x0, [sp, #128]
    3260:	ldr	x0, [x0, #416]
    3264:	cmp	x1, x0
    3268:	b.hi	32f8 <ctf_bufopen_internal+0x494>  // b.pmore
    326c:	ldr	x0, [sp, #120]
    3270:	ldr	w0, [x0, #24]
    3274:	mov	w1, w0
    3278:	ldr	x0, [sp, #128]
    327c:	ldr	x0, [x0, #416]
    3280:	cmp	x1, x0
    3284:	b.hi	32f8 <ctf_bufopen_internal+0x494>  // b.pmore
    3288:	ldr	x0, [sp, #120]
    328c:	ldr	w0, [x0, #28]
    3290:	mov	w1, w0
    3294:	ldr	x0, [sp, #128]
    3298:	ldr	x0, [x0, #416]
    329c:	cmp	x1, x0
    32a0:	b.hi	32f8 <ctf_bufopen_internal+0x494>  // b.pmore
    32a4:	ldr	x0, [sp, #120]
    32a8:	ldr	w0, [x0, #32]
    32ac:	mov	w1, w0
    32b0:	ldr	x0, [sp, #128]
    32b4:	ldr	x0, [x0, #416]
    32b8:	cmp	x1, x0
    32bc:	b.hi	32f8 <ctf_bufopen_internal+0x494>  // b.pmore
    32c0:	ldr	x0, [sp, #120]
    32c4:	ldr	w0, [x0, #40]
    32c8:	mov	w1, w0
    32cc:	ldr	x0, [sp, #128]
    32d0:	ldr	x0, [x0, #416]
    32d4:	cmp	x1, x0
    32d8:	b.hi	32f8 <ctf_bufopen_internal+0x494>  // b.pmore
    32dc:	ldr	x0, [sp, #120]
    32e0:	ldr	w0, [x0, #44]
    32e4:	mov	w1, w0
    32e8:	ldr	x0, [sp, #128]
    32ec:	ldr	x0, [x0, #416]
    32f0:	cmp	x1, x0
    32f4:	b.ls	3308 <ctf_bufopen_internal+0x4a4>  // b.plast
    32f8:	mov	w1, #0x3ef                 	// #1007
    32fc:	ldr	x0, [sp, #32]
    3300:	bl	0 <ctf_set_open_errno>
    3304:	b	3a00 <ctf_bufopen_internal+0xb9c>
    3308:	ldr	x0, [sp, #120]
    330c:	ldr	w1, [x0, #16]
    3310:	ldr	x0, [sp, #120]
    3314:	ldr	w0, [x0, #20]
    3318:	cmp	w1, w0
    331c:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    3320:	ldr	x0, [sp, #120]
    3324:	ldr	w1, [x0, #20]
    3328:	ldr	x0, [sp, #120]
    332c:	ldr	w0, [x0, #24]
    3330:	cmp	w1, w0
    3334:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    3338:	ldr	x0, [sp, #120]
    333c:	ldr	w1, [x0, #24]
    3340:	ldr	x0, [sp, #120]
    3344:	ldr	w0, [x0, #40]
    3348:	cmp	w1, w0
    334c:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    3350:	ldr	x0, [sp, #120]
    3354:	ldr	w1, [x0, #24]
    3358:	ldr	x0, [sp, #120]
    335c:	ldr	w0, [x0, #28]
    3360:	cmp	w1, w0
    3364:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    3368:	ldr	x0, [sp, #120]
    336c:	ldr	w1, [x0, #28]
    3370:	ldr	x0, [sp, #120]
    3374:	ldr	w0, [x0, #32]
    3378:	cmp	w1, w0
    337c:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    3380:	ldr	x0, [sp, #120]
    3384:	ldr	w1, [x0, #32]
    3388:	ldr	x0, [sp, #120]
    338c:	ldr	w0, [x0, #36]
    3390:	cmp	w1, w0
    3394:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    3398:	ldr	x0, [sp, #120]
    339c:	ldr	w1, [x0, #36]
    33a0:	ldr	x0, [sp, #120]
    33a4:	ldr	w0, [x0, #40]
    33a8:	cmp	w1, w0
    33ac:	b.hi	33c8 <ctf_bufopen_internal+0x564>  // b.pmore
    33b0:	ldr	x0, [sp, #120]
    33b4:	ldr	w1, [x0, #40]
    33b8:	ldr	x0, [sp, #120]
    33bc:	ldr	w0, [x0, #44]
    33c0:	cmp	w1, w0
    33c4:	b.ls	33d8 <ctf_bufopen_internal+0x574>  // b.plast
    33c8:	mov	w1, #0x3ef                 	// #1007
    33cc:	ldr	x0, [sp, #32]
    33d0:	bl	0 <ctf_set_open_errno>
    33d4:	b	3a00 <ctf_bufopen_internal+0xb9c>
    33d8:	ldr	x0, [sp, #120]
    33dc:	ldr	w0, [x0, #16]
    33e0:	and	w0, w0, #0x3
    33e4:	cmp	w0, #0x0
    33e8:	b.ne	3464 <ctf_bufopen_internal+0x600>  // b.any
    33ec:	ldr	x0, [sp, #120]
    33f0:	ldr	w0, [x0, #20]
    33f4:	and	w0, w0, #0x2
    33f8:	cmp	w0, #0x0
    33fc:	b.ne	3464 <ctf_bufopen_internal+0x600>  // b.any
    3400:	ldr	x0, [sp, #120]
    3404:	ldr	w0, [x0, #24]
    3408:	and	w0, w0, #0x2
    340c:	cmp	w0, #0x0
    3410:	b.ne	3464 <ctf_bufopen_internal+0x600>  // b.any
    3414:	ldr	x0, [sp, #120]
    3418:	ldr	w0, [x0, #28]
    341c:	and	w0, w0, #0x2
    3420:	cmp	w0, #0x0
    3424:	b.ne	3464 <ctf_bufopen_internal+0x600>  // b.any
    3428:	ldr	x0, [sp, #120]
    342c:	ldr	w0, [x0, #32]
    3430:	and	w0, w0, #0x2
    3434:	cmp	w0, #0x0
    3438:	b.ne	3464 <ctf_bufopen_internal+0x600>  // b.any
    343c:	ldr	x0, [sp, #120]
    3440:	ldr	w0, [x0, #36]
    3444:	and	w0, w0, #0x3
    3448:	cmp	w0, #0x0
    344c:	b.ne	3464 <ctf_bufopen_internal+0x600>  // b.any
    3450:	ldr	x0, [sp, #120]
    3454:	ldr	w0, [x0, #40]
    3458:	and	w0, w0, #0x3
    345c:	cmp	w0, #0x0
    3460:	b.eq	3474 <ctf_bufopen_internal+0x610>  // b.none
    3464:	mov	w1, #0x3ef                 	// #1007
    3468:	ldr	x0, [sp, #32]
    346c:	bl	0 <ctf_set_open_errno>
    3470:	b	3a00 <ctf_bufopen_internal+0xb9c>
    3474:	ldr	x0, [sp, #120]
    3478:	ldrb	w0, [x0, #3]
    347c:	and	w0, w0, #0x1
    3480:	cmp	w0, #0x0
    3484:	b.eq	35b4 <ctf_bufopen_internal+0x750>  // b.none
    3488:	str	wzr, [sp, #116]
    348c:	ldr	x0, [sp, #128]
    3490:	ldr	x0, [x0, #416]
    3494:	bl	0 <malloc>
    3498:	mov	x1, x0
    349c:	ldr	x0, [sp, #128]
    34a0:	str	x1, [x0, #392]
    34a4:	ldr	x0, [sp, #128]
    34a8:	ldr	x0, [x0, #392]
    34ac:	cmp	x0, #0x0
    34b0:	b.ne	34c0 <ctf_bufopen_internal+0x65c>  // b.any
    34b4:	mov	w0, #0x3f6                 	// #1014
    34b8:	str	w0, [sp, #144]
    34bc:	b	39e8 <ctf_bufopen_internal+0xb84>
    34c0:	ldr	x0, [sp, #128]
    34c4:	ldr	x1, [x0, #392]
    34c8:	ldr	x0, [sp, #128]
    34cc:	str	x1, [x0, #400]
    34d0:	ldr	x0, [sp, #120]
    34d4:	ldrb	w0, [x0, #3]
    34d8:	and	w0, w0, #0xfffffffe
    34dc:	and	w1, w0, #0xff
    34e0:	ldr	x0, [sp, #120]
    34e4:	strb	w1, [x0, #3]
    34e8:	ldr	x0, [sp, #72]
    34ec:	ldr	x1, [x0, #8]
    34f0:	ldr	x0, [sp, #152]
    34f4:	add	x0, x1, x0
    34f8:	str	x0, [sp, #104]
    34fc:	ldr	x0, [sp, #72]
    3500:	ldr	x1, [x0, #16]
    3504:	ldr	x0, [sp, #152]
    3508:	sub	x0, x1, x0
    350c:	str	x0, [sp, #96]
    3510:	ldr	x0, [sp, #128]
    3514:	ldr	x0, [x0, #416]
    3518:	str	x0, [sp, #88]
    351c:	ldr	x0, [sp, #128]
    3520:	ldr	x1, [x0, #392]
    3524:	ldr	x0, [sp, #128]
    3528:	str	x1, [x0, #408]
    352c:	ldr	x0, [sp, #128]
    3530:	ldr	x0, [x0, #392]
    3534:	add	x1, sp, #0x58
    3538:	ldr	x3, [sp, #96]
    353c:	ldr	x2, [sp, #104]
    3540:	bl	0 <uncompress>
    3544:	str	w0, [sp, #116]
    3548:	ldr	w0, [sp, #116]
    354c:	cmp	w0, #0x0
    3550:	b.eq	3578 <ctf_bufopen_internal+0x714>  // b.none
    3554:	ldr	w0, [sp, #116]
    3558:	bl	0 <zError>
    355c:	mov	x1, x0
    3560:	adrp	x0, 0 <__bswap_16>
    3564:	add	x0, x0, #0x0
    3568:	bl	0 <ctf_dprintf>
    356c:	mov	w0, #0x3f7                 	// #1015
    3570:	str	w0, [sp, #144]
    3574:	b	39e8 <ctf_bufopen_internal+0xb84>
    3578:	ldr	x0, [sp, #128]
    357c:	ldr	x1, [x0, #416]
    3580:	ldr	x0, [sp, #88]
    3584:	cmp	x1, x0
    3588:	b.eq	3674 <ctf_bufopen_internal+0x810>  // b.none
    358c:	ldr	x1, [sp, #88]
    3590:	ldr	x0, [sp, #128]
    3594:	ldr	x0, [x0, #416]
    3598:	mov	x2, x0
    359c:	adrp	x0, 0 <__bswap_16>
    35a0:	add	x0, x0, #0x0
    35a4:	bl	0 <ctf_dprintf>
    35a8:	mov	w0, #0x3ef                 	// #1007
    35ac:	str	w0, [sp, #144]
    35b0:	b	39e8 <ctf_bufopen_internal+0xb84>
    35b4:	ldr	w0, [sp, #148]
    35b8:	cmp	w0, #0x0
    35bc:	b.eq	3644 <ctf_bufopen_internal+0x7e0>  // b.none
    35c0:	ldr	x0, [sp, #128]
    35c4:	ldr	x0, [x0, #416]
    35c8:	bl	0 <malloc>
    35cc:	mov	x1, x0
    35d0:	ldr	x0, [sp, #128]
    35d4:	str	x1, [x0, #392]
    35d8:	ldr	x0, [sp, #128]
    35dc:	ldr	x0, [x0, #392]
    35e0:	cmp	x0, #0x0
    35e4:	b.ne	35f4 <ctf_bufopen_internal+0x790>  // b.any
    35e8:	mov	w0, #0x3f6                 	// #1014
    35ec:	str	w0, [sp, #144]
    35f0:	b	39e8 <ctf_bufopen_internal+0xb84>
    35f4:	ldr	x0, [sp, #128]
    35f8:	ldr	x1, [x0, #392]
    35fc:	ldr	x0, [sp, #128]
    3600:	str	x1, [x0, #400]
    3604:	ldr	x0, [sp, #128]
    3608:	ldr	x3, [x0, #392]
    360c:	ldr	x0, [sp, #72]
    3610:	ldr	x1, [x0, #8]
    3614:	ldr	x0, [sp, #152]
    3618:	add	x1, x1, x0
    361c:	ldr	x0, [sp, #128]
    3620:	ldr	x0, [x0, #416]
    3624:	mov	x2, x0
    3628:	mov	x0, x3
    362c:	bl	0 <memcpy>
    3630:	ldr	x0, [sp, #128]
    3634:	ldr	x1, [x0, #392]
    3638:	ldr	x0, [sp, #128]
    363c:	str	x1, [x0, #408]
    3640:	b	3674 <ctf_bufopen_internal+0x810>
    3644:	ldr	x0, [sp, #72]
    3648:	ldr	x1, [x0, #8]
    364c:	ldr	x0, [sp, #128]
    3650:	str	x1, [x0, #392]
    3654:	ldr	x0, [sp, #128]
    3658:	str	xzr, [x0, #400]
    365c:	ldr	x0, [sp, #128]
    3660:	ldr	x1, [x0, #392]
    3664:	ldr	x0, [sp, #152]
    3668:	add	x1, x1, x0
    366c:	ldr	x0, [sp, #128]
    3670:	str	x1, [x0, #408]
    3674:	ldr	x0, [sp, #120]
    3678:	ldrb	w0, [x0, #2]
    367c:	mov	w2, w0
    3680:	ldr	x1, [sp, #120]
    3684:	ldr	x0, [sp, #128]
    3688:	bl	9d4 <ctf_set_version>
    368c:	ldr	x0, [sp, #128]
    3690:	bl	0 <ctf_str_create_atoms>
    3694:	ldr	x0, [sp, #128]
    3698:	mov	w1, #0x7fffffff            	// #2147483647
    369c:	str	w1, [x0, #544]
    36a0:	ldr	x0, [sp, #128]
    36a4:	add	x0, x0, #0x18
    36a8:	mov	x2, #0x20                  	// #32
    36ac:	ldr	x1, [sp, #72]
    36b0:	bl	0 <memcpy>
    36b4:	ldr	x0, [sp, #64]
    36b8:	cmp	x0, #0x0
    36bc:	b.eq	36e8 <ctf_bufopen_internal+0x884>  // b.none
    36c0:	ldr	x0, [sp, #128]
    36c4:	add	x0, x0, #0x38
    36c8:	mov	x2, #0x20                  	// #32
    36cc:	ldr	x1, [sp, #64]
    36d0:	bl	0 <memcpy>
    36d4:	ldr	x0, [sp, #128]
    36d8:	add	x0, x0, #0x58
    36dc:	mov	x2, #0x20                  	// #32
    36e0:	ldr	x1, [sp, #56]
    36e4:	bl	0 <memcpy>
    36e8:	ldr	x0, [sp, #128]
    36ec:	ldr	x0, [x0, #24]
    36f0:	cmp	x0, #0x0
    36f4:	b.eq	372c <ctf_bufopen_internal+0x8c8>  // b.none
    36f8:	ldr	x0, [sp, #128]
    36fc:	ldr	x0, [x0, #24]
    3700:	bl	0 <strdup>
    3704:	mov	x1, x0
    3708:	ldr	x0, [sp, #128]
    370c:	str	x1, [x0, #24]
    3710:	ldr	x0, [sp, #128]
    3714:	ldr	x0, [x0, #24]
    3718:	cmp	x0, #0x0
    371c:	b.ne	372c <ctf_bufopen_internal+0x8c8>  // b.any
    3720:	mov	w0, #0xc                   	// #12
    3724:	str	w0, [sp, #144]
    3728:	b	39e8 <ctf_bufopen_internal+0xb84>
    372c:	ldr	x0, [sp, #128]
    3730:	ldr	x0, [x0, #56]
    3734:	cmp	x0, #0x0
    3738:	b.eq	3770 <ctf_bufopen_internal+0x90c>  // b.none
    373c:	ldr	x0, [sp, #128]
    3740:	ldr	x0, [x0, #56]
    3744:	bl	0 <strdup>
    3748:	mov	x1, x0
    374c:	ldr	x0, [sp, #128]
    3750:	str	x1, [x0, #56]
    3754:	ldr	x0, [sp, #128]
    3758:	ldr	x0, [x0, #56]
    375c:	cmp	x0, #0x0
    3760:	b.ne	3770 <ctf_bufopen_internal+0x90c>  // b.any
    3764:	mov	w0, #0xc                   	// #12
    3768:	str	w0, [sp, #144]
    376c:	b	39e8 <ctf_bufopen_internal+0xb84>
    3770:	ldr	x0, [sp, #128]
    3774:	ldr	x0, [x0, #88]
    3778:	cmp	x0, #0x0
    377c:	b.eq	37b4 <ctf_bufopen_internal+0x950>  // b.none
    3780:	ldr	x0, [sp, #128]
    3784:	ldr	x0, [x0, #88]
    3788:	bl	0 <strdup>
    378c:	mov	x1, x0
    3790:	ldr	x0, [sp, #128]
    3794:	str	x1, [x0, #88]
    3798:	ldr	x0, [sp, #128]
    379c:	ldr	x0, [x0, #88]
    37a0:	cmp	x0, #0x0
    37a4:	b.ne	37b4 <ctf_bufopen_internal+0x950>  // b.any
    37a8:	mov	w0, #0xc                   	// #12
    37ac:	str	w0, [sp, #144]
    37b0:	b	39e8 <ctf_bufopen_internal+0xb84>
    37b4:	ldr	x0, [sp, #128]
    37b8:	ldr	x0, [x0, #24]
    37bc:	cmp	x0, #0x0
    37c0:	b.ne	37d4 <ctf_bufopen_internal+0x970>  // b.any
    37c4:	ldr	x0, [sp, #128]
    37c8:	adrp	x1, c0 <get_vlen_v1+0x14>
    37cc:	add	x1, x1, #0x0
    37d0:	str	x1, [x0, #24]
    37d4:	ldr	x0, [sp, #128]
    37d8:	ldr	x0, [x0, #56]
    37dc:	cmp	x0, #0x0
    37e0:	b.ne	37f4 <ctf_bufopen_internal+0x990>  // b.any
    37e4:	ldr	x0, [sp, #128]
    37e8:	adrp	x1, c0 <get_vlen_v1+0x14>
    37ec:	add	x1, x1, #0x0
    37f0:	str	x1, [x0, #56]
    37f4:	ldr	x0, [sp, #128]
    37f8:	ldr	x0, [x0, #88]
    37fc:	cmp	x0, #0x0
    3800:	b.ne	3814 <ctf_bufopen_internal+0x9b0>  // b.any
    3804:	ldr	x0, [sp, #128]
    3808:	adrp	x1, c0 <get_vlen_v1+0x14>
    380c:	add	x1, x1, #0x0
    3810:	str	x1, [x0, #88]
    3814:	ldr	x0, [sp, #56]
    3818:	cmp	x0, #0x0
    381c:	b.eq	3840 <ctf_bufopen_internal+0x9dc>  // b.none
    3820:	ldr	x0, [sp, #56]
    3824:	ldr	x1, [x0, #8]
    3828:	ldr	x0, [sp, #128]
    382c:	str	x1, [x0, #352]
    3830:	ldr	x0, [sp, #56]
    3834:	ldr	x1, [x0, #16]
    3838:	ldr	x0, [sp, #128]
    383c:	str	x1, [x0, #360]
    3840:	ldr	x0, [sp, #128]
    3844:	ldr	x1, [sp, #48]
    3848:	str	x1, [x0, #128]
    384c:	ldr	w0, [sp, #148]
    3850:	cmp	w0, #0x0
    3854:	b.eq	3898 <ctf_bufopen_internal+0xa34>  // b.none
    3858:	ldr	x0, [sp, #128]
    385c:	ldr	x0, [x0, #408]
    3860:	mov	x1, x0
    3864:	ldr	x0, [sp, #120]
    3868:	bl	29e8 <flip_ctf>
    386c:	str	w0, [sp, #144]
    3870:	ldr	w0, [sp, #144]
    3874:	cmp	w0, #0x0
    3878:	b.eq	3898 <ctf_bufopen_internal+0xa34>  // b.none
    387c:	ldr	x0, [sp, #128]
    3880:	ldr	x0, [x0, #392]
    3884:	mov	x2, x0
    3888:	ldr	x1, [sp, #120]
    388c:	ldr	x0, [sp, #128]
    3890:	bl	804 <ctf_set_base>
    3894:	b	39e8 <ctf_bufopen_internal+0xb84>
    3898:	ldr	x0, [sp, #128]
    389c:	ldr	x0, [x0, #392]
    38a0:	mov	x2, x0
    38a4:	ldr	x1, [sp, #120]
    38a8:	ldr	x0, [sp, #128]
    38ac:	bl	804 <ctf_set_base>
    38b0:	ldr	x0, [sp, #128]
    38b4:	ldr	w0, [x0, #552]
    38b8:	and	w0, w0, #0x2
    38bc:	cmp	w0, #0x0
    38c0:	b.eq	38d8 <ctf_bufopen_internal+0xa74>  // b.none
    38c4:	ldr	x0, [sp, #128]
    38c8:	mov	w1, #0x1                   	// #1
    38cc:	str	w1, [x0, #548]
    38d0:	ldr	x0, [sp, #128]
    38d4:	b	3a00 <ctf_bufopen_internal+0xb9c>
    38d8:	ldr	x1, [sp, #120]
    38dc:	ldr	x0, [sp, #128]
    38e0:	bl	1354 <init_types>
    38e4:	str	w0, [sp, #144]
    38e8:	ldr	w0, [sp, #144]
    38ec:	cmp	w0, #0x0
    38f0:	b.ne	39dc <ctf_bufopen_internal+0xb78>  // b.any
    38f4:	ldr	x0, [sp, #64]
    38f8:	cmp	x0, #0x0
    38fc:	b.eq	3978 <ctf_bufopen_internal+0xb14>  // b.none
    3900:	ldr	x0, [sp, #64]
    3904:	ldr	x1, [x0, #16]
    3908:	ldr	x0, [sp, #64]
    390c:	ldr	x0, [x0, #24]
    3910:	udiv	x1, x1, x0
    3914:	ldr	x0, [sp, #128]
    3918:	str	x1, [x0, #432]
    391c:	ldr	x0, [sp, #128]
    3920:	ldr	x0, [x0, #432]
    3924:	lsl	x0, x0, #2
    3928:	bl	0 <malloc>
    392c:	mov	x1, x0
    3930:	ldr	x0, [sp, #128]
    3934:	str	x1, [x0, #424]
    3938:	ldr	x0, [sp, #128]
    393c:	ldr	x0, [x0, #424]
    3940:	cmp	x0, #0x0
    3944:	b.ne	3954 <ctf_bufopen_internal+0xaf0>  // b.any
    3948:	mov	w0, #0xc                   	// #12
    394c:	str	w0, [sp, #144]
    3950:	b	39e8 <ctf_bufopen_internal+0xb84>
    3954:	ldr	x3, [sp, #56]
    3958:	ldr	x2, [sp, #64]
    395c:	ldr	x1, [sp, #120]
    3960:	ldr	x0, [sp, #128]
    3964:	bl	528 <init_symtab>
    3968:	str	w0, [sp, #144]
    396c:	ldr	w0, [sp, #144]
    3970:	cmp	w0, #0x0
    3974:	b.ne	39e4 <ctf_bufopen_internal+0xb80>  // b.any
    3978:	ldr	x0, [sp, #128]
    397c:	bl	2b88 <ctf_set_ctl_hashes>
    3980:	ldr	x0, [sp, #64]
    3984:	cmp	x0, #0x0
    3988:	b.eq	39bc <ctf_bufopen_internal+0xb58>  // b.none
    398c:	ldr	x0, [sp, #64]
    3990:	ldr	x0, [x0, #24]
    3994:	cmp	x0, #0x18
    3998:	b.ne	39ac <ctf_bufopen_internal+0xb48>  // b.any
    399c:	mov	w1, #0x2                   	// #2
    39a0:	ldr	x0, [sp, #128]
    39a4:	bl	3fd4 <ctf_setmodel>
    39a8:	b	39c8 <ctf_bufopen_internal+0xb64>
    39ac:	mov	w1, #0x1                   	// #1
    39b0:	ldr	x0, [sp, #128]
    39b4:	bl	3fd4 <ctf_setmodel>
    39b8:	b	39c8 <ctf_bufopen_internal+0xb64>
    39bc:	mov	w1, #0x2                   	// #2
    39c0:	ldr	x0, [sp, #128]
    39c4:	bl	3fd4 <ctf_setmodel>
    39c8:	ldr	x0, [sp, #128]
    39cc:	mov	w1, #0x1                   	// #1
    39d0:	str	w1, [x0, #548]
    39d4:	ldr	x0, [sp, #128]
    39d8:	b	3a00 <ctf_bufopen_internal+0xb9c>
    39dc:	nop
    39e0:	b	39e8 <ctf_bufopen_internal+0xb84>
    39e4:	nop
    39e8:	ldr	w1, [sp, #144]
    39ec:	ldr	x0, [sp, #32]
    39f0:	bl	0 <ctf_set_open_errno>
    39f4:	ldr	x0, [sp, #128]
    39f8:	bl	3a0c <ctf_file_close>
    39fc:	mov	x0, #0x0                   	// #0
    3a00:	ldr	x19, [sp, #16]
    3a04:	ldp	x29, x30, [sp], #160
    3a08:	ret

0000000000003a0c <ctf_file_close>:
    3a0c:	stp	x29, x30, [sp, #-64]!
    3a10:	mov	x29, sp
    3a14:	str	x0, [sp, #24]
    3a18:	ldr	x0, [sp, #24]
    3a1c:	cmp	x0, #0x0
    3a20:	b.eq	3cd4 <ctf_file_close+0x2c8>  // b.none
    3a24:	ldr	x0, [sp, #24]
    3a28:	ldr	w0, [x0, #548]
    3a2c:	mov	w2, w0
    3a30:	ldr	x1, [sp, #24]
    3a34:	adrp	x0, 0 <__bswap_16>
    3a38:	add	x0, x0, #0x0
    3a3c:	bl	0 <ctf_dprintf>
    3a40:	ldr	x0, [sp, #24]
    3a44:	ldr	w0, [x0, #548]
    3a48:	cmp	w0, #0x1
    3a4c:	b.ls	3a68 <ctf_file_close+0x5c>  // b.plast
    3a50:	ldr	x0, [sp, #24]
    3a54:	ldr	w0, [x0, #548]
    3a58:	sub	w1, w0, #0x1
    3a5c:	ldr	x0, [sp, #24]
    3a60:	str	w1, [x0, #548]
    3a64:	b	3cd8 <ctf_file_close+0x2cc>
    3a68:	ldr	x0, [sp, #24]
    3a6c:	ldr	x0, [x0, #504]
    3a70:	bl	0 <free>
    3a74:	ldr	x0, [sp, #24]
    3a78:	ldr	x0, [x0, #536]
    3a7c:	bl	0 <free>
    3a80:	ldr	x0, [sp, #24]
    3a84:	ldr	x0, [x0, #512]
    3a88:	bl	3a0c <ctf_file_close>
    3a8c:	ldr	x0, [sp, #24]
    3a90:	ldr	x0, [x0, #584]
    3a94:	str	x0, [sp, #56]
    3a98:	b	3abc <ctf_file_close+0xb0>
    3a9c:	ldr	x0, [sp, #56]
    3aa0:	ldr	x0, [x0, #8]
    3aa4:	str	x0, [sp, #32]
    3aa8:	ldr	x1, [sp, #56]
    3aac:	ldr	x0, [sp, #24]
    3ab0:	bl	0 <ctf_dtd_delete>
    3ab4:	ldr	x0, [sp, #32]
    3ab8:	str	x0, [sp, #56]
    3abc:	ldr	x0, [sp, #56]
    3ac0:	cmp	x0, #0x0
    3ac4:	b.ne	3a9c <ctf_file_close+0x90>  // b.any
    3ac8:	ldr	x0, [sp, #24]
    3acc:	ldr	x0, [x0, #568]
    3ad0:	bl	0 <ctf_dynhash_destroy>
    3ad4:	ldr	x0, [sp, #24]
    3ad8:	ldr	w0, [x0, #552]
    3adc:	and	w0, w0, #0x2
    3ae0:	cmp	w0, #0x0
    3ae4:	b.eq	3b1c <ctf_file_close+0x110>  // b.none
    3ae8:	ldr	x0, [sp, #24]
    3aec:	ldr	x0, [x0, #160]
    3af0:	bl	0 <ctf_dynhash_destroy>
    3af4:	ldr	x0, [sp, #24]
    3af8:	ldr	x0, [x0, #176]
    3afc:	bl	0 <ctf_dynhash_destroy>
    3b00:	ldr	x0, [sp, #24]
    3b04:	ldr	x0, [x0, #192]
    3b08:	bl	0 <ctf_dynhash_destroy>
    3b0c:	ldr	x0, [sp, #24]
    3b10:	ldr	x0, [x0, #208]
    3b14:	bl	0 <ctf_dynhash_destroy>
    3b18:	b	3b4c <ctf_file_close+0x140>
    3b1c:	ldr	x0, [sp, #24]
    3b20:	ldr	x0, [x0, #152]
    3b24:	bl	0 <ctf_hash_destroy>
    3b28:	ldr	x0, [sp, #24]
    3b2c:	ldr	x0, [x0, #168]
    3b30:	bl	0 <ctf_hash_destroy>
    3b34:	ldr	x0, [sp, #24]
    3b38:	ldr	x0, [x0, #184]
    3b3c:	bl	0 <ctf_hash_destroy>
    3b40:	ldr	x0, [sp, #24]
    3b44:	ldr	x0, [x0, #200]
    3b48:	bl	0 <ctf_hash_destroy>
    3b4c:	ldr	x0, [sp, #24]
    3b50:	ldr	x0, [x0, #608]
    3b54:	str	x0, [sp, #48]
    3b58:	b	3b7c <ctf_file_close+0x170>
    3b5c:	ldr	x0, [sp, #48]
    3b60:	ldr	x0, [x0, #8]
    3b64:	str	x0, [sp, #40]
    3b68:	ldr	x1, [sp, #48]
    3b6c:	ldr	x0, [sp, #24]
    3b70:	bl	0 <ctf_dvd_delete>
    3b74:	ldr	x0, [sp, #40]
    3b78:	str	x0, [sp, #48]
    3b7c:	ldr	x0, [sp, #48]
    3b80:	cmp	x0, #0x0
    3b84:	b.ne	3b5c <ctf_file_close+0x150>  // b.any
    3b88:	ldr	x0, [sp, #24]
    3b8c:	ldr	x0, [x0, #592]
    3b90:	bl	0 <ctf_dynhash_destroy>
    3b94:	ldr	x0, [sp, #24]
    3b98:	bl	0 <ctf_str_free_atoms>
    3b9c:	ldr	x0, [sp, #24]
    3ba0:	ldr	x0, [x0, #704]
    3ba4:	bl	0 <free>
    3ba8:	ldr	x0, [sp, #24]
    3bac:	ldr	x1, [x0, #24]
    3bb0:	adrp	x0, c0 <get_vlen_v1+0x14>
    3bb4:	add	x0, x0, #0x0
    3bb8:	cmp	x1, x0
    3bbc:	b.eq	3bcc <ctf_file_close+0x1c0>  // b.none
    3bc0:	ldr	x0, [sp, #24]
    3bc4:	ldr	x0, [x0, #24]
    3bc8:	bl	0 <free>
    3bcc:	ldr	x0, [sp, #24]
    3bd0:	ldr	x1, [x0, #56]
    3bd4:	adrp	x0, c0 <get_vlen_v1+0x14>
    3bd8:	add	x0, x0, #0x0
    3bdc:	cmp	x1, x0
    3be0:	b.eq	3bf0 <ctf_file_close+0x1e4>  // b.none
    3be4:	ldr	x0, [sp, #24]
    3be8:	ldr	x0, [x0, #56]
    3bec:	bl	0 <free>
    3bf0:	ldr	x0, [sp, #24]
    3bf4:	ldr	x1, [x0, #88]
    3bf8:	adrp	x0, c0 <get_vlen_v1+0x14>
    3bfc:	add	x0, x0, #0x0
    3c00:	cmp	x1, x0
    3c04:	b.eq	3c18 <ctf_file_close+0x20c>  // b.none
    3c08:	ldr	x0, [sp, #24]
    3c0c:	ldr	x0, [x0, #88]
    3c10:	bl	0 <free>
    3c14:	b	3c44 <ctf_file_close+0x238>
    3c18:	ldr	x0, [sp, #24]
    3c1c:	ldr	x0, [x0, #136]
    3c20:	cmp	x0, #0x0
    3c24:	b.eq	3c44 <ctf_file_close+0x238>  // b.none
    3c28:	ldr	x0, [sp, #24]
    3c2c:	ldr	x2, [x0, #136]
    3c30:	ldr	x0, [sp, #24]
    3c34:	ldr	x0, [x0, #144]
    3c38:	mov	x1, x0
    3c3c:	mov	x0, x2
    3c40:	bl	0 <ctf_munmap>
    3c44:	ldr	x0, [sp, #24]
    3c48:	ldr	x0, [x0, #400]
    3c4c:	bl	0 <free>
    3c50:	ldr	x0, [sp, #24]
    3c54:	ldr	x0, [x0, #128]
    3c58:	bl	0 <ctf_dynhash_destroy>
    3c5c:	ldr	x0, [sp, #24]
    3c60:	ldr	x0, [x0, #648]
    3c64:	bl	0 <ctf_dynhash_destroy>
    3c68:	ldr	x0, [sp, #24]
    3c6c:	ldr	x0, [x0, #656]
    3c70:	bl	0 <ctf_dynhash_destroy>
    3c74:	ldr	x0, [sp, #24]
    3c78:	ldr	x0, [x0, #664]
    3c7c:	bl	0 <ctf_dynhash_destroy>
    3c80:	ldr	x0, [sp, #24]
    3c84:	ldr	x0, [x0, #672]
    3c88:	bl	0 <ctf_dynhash_destroy>
    3c8c:	ldr	x0, [sp, #24]
    3c90:	ldr	x0, [x0, #696]
    3c94:	bl	0 <ctf_dynhash_destroy>
    3c98:	ldr	x0, [sp, #24]
    3c9c:	ldr	x0, [x0, #424]
    3ca0:	bl	0 <free>
    3ca4:	ldr	x0, [sp, #24]
    3ca8:	ldr	x0, [x0, #440]
    3cac:	bl	0 <free>
    3cb0:	ldr	x0, [sp, #24]
    3cb4:	ldr	x0, [x0, #448]
    3cb8:	bl	0 <free>
    3cbc:	ldr	x0, [sp, #24]
    3cc0:	ldr	x0, [x0, #8]
    3cc4:	bl	0 <free>
    3cc8:	ldr	x0, [sp, #24]
    3ccc:	bl	0 <free>
    3cd0:	b	3cd8 <ctf_file_close+0x2cc>
    3cd4:	nop
    3cd8:	ldp	x29, x30, [sp], #64
    3cdc:	ret

0000000000003ce0 <ctf_close>:
    3ce0:	stp	x29, x30, [sp, #-32]!
    3ce4:	mov	x29, sp
    3ce8:	str	x0, [sp, #24]
    3cec:	ldr	x0, [sp, #24]
    3cf0:	bl	0 <ctf_arc_close>
    3cf4:	nop
    3cf8:	ldp	x29, x30, [sp], #32
    3cfc:	ret

0000000000003d00 <ctf_get_arc>:
    3d00:	sub	sp, sp, #0x10
    3d04:	str	x0, [sp, #8]
    3d08:	ldr	x0, [sp, #8]
    3d0c:	ldr	x0, [x0, #640]
    3d10:	add	sp, sp, #0x10
    3d14:	ret

0000000000003d18 <ctf_getdatasect>:
    3d18:	sub	sp, sp, #0x10
    3d1c:	mov	x1, x8
    3d20:	str	x0, [sp, #8]
    3d24:	ldr	x0, [sp, #8]
    3d28:	add	x0, x0, #0x18
    3d2c:	mov	x2, x1
    3d30:	mov	x3, x0
    3d34:	ldp	x0, x1, [x3]
    3d38:	stp	x0, x1, [x2]
    3d3c:	ldp	x0, x1, [x3, #16]
    3d40:	stp	x0, x1, [x2, #16]
    3d44:	add	sp, sp, #0x10
    3d48:	ret

0000000000003d4c <ctf_parent_file>:
    3d4c:	sub	sp, sp, #0x10
    3d50:	str	x0, [sp, #8]
    3d54:	ldr	x0, [sp, #8]
    3d58:	ldr	x0, [x0, #512]
    3d5c:	add	sp, sp, #0x10
    3d60:	ret

0000000000003d64 <ctf_parent_name>:
    3d64:	sub	sp, sp, #0x10
    3d68:	str	x0, [sp, #8]
    3d6c:	ldr	x0, [sp, #8]
    3d70:	ldr	x0, [x0, #528]
    3d74:	add	sp, sp, #0x10
    3d78:	ret

0000000000003d7c <ctf_parent_name_set>:
    3d7c:	stp	x29, x30, [sp, #-32]!
    3d80:	mov	x29, sp
    3d84:	str	x0, [sp, #24]
    3d88:	str	x1, [sp, #16]
    3d8c:	ldr	x0, [sp, #24]
    3d90:	ldr	x0, [x0, #536]
    3d94:	cmp	x0, #0x0
    3d98:	b.eq	3da8 <ctf_parent_name_set+0x2c>  // b.none
    3d9c:	ldr	x0, [sp, #24]
    3da0:	ldr	x0, [x0, #536]
    3da4:	bl	0 <free>
    3da8:	ldr	x0, [sp, #16]
    3dac:	bl	0 <strdup>
    3db0:	mov	x1, x0
    3db4:	ldr	x0, [sp, #24]
    3db8:	str	x1, [x0, #536]
    3dbc:	ldr	x0, [sp, #24]
    3dc0:	ldr	x0, [x0, #536]
    3dc4:	cmp	x0, #0x0
    3dc8:	b.ne	3ddc <ctf_parent_name_set+0x60>  // b.any
    3dcc:	mov	w1, #0xc                   	// #12
    3dd0:	ldr	x0, [sp, #24]
    3dd4:	bl	0 <ctf_set_errno>
    3dd8:	b	3df0 <ctf_parent_name_set+0x74>
    3ddc:	ldr	x0, [sp, #24]
    3de0:	ldr	x1, [x0, #536]
    3de4:	ldr	x0, [sp, #24]
    3de8:	str	x1, [x0, #528]
    3dec:	mov	w0, #0x0                   	// #0
    3df0:	ldp	x29, x30, [sp], #32
    3df4:	ret

0000000000003df8 <ctf_cuname>:
    3df8:	sub	sp, sp, #0x10
    3dfc:	str	x0, [sp, #8]
    3e00:	ldr	x0, [sp, #8]
    3e04:	ldr	x0, [x0, #496]
    3e08:	add	sp, sp, #0x10
    3e0c:	ret

0000000000003e10 <ctf_cuname_set>:
    3e10:	stp	x29, x30, [sp, #-32]!
    3e14:	mov	x29, sp
    3e18:	str	x0, [sp, #24]
    3e1c:	str	x1, [sp, #16]
    3e20:	ldr	x0, [sp, #24]
    3e24:	ldr	x0, [x0, #504]
    3e28:	cmp	x0, #0x0
    3e2c:	b.eq	3e3c <ctf_cuname_set+0x2c>  // b.none
    3e30:	ldr	x0, [sp, #24]
    3e34:	ldr	x0, [x0, #504]
    3e38:	bl	0 <free>
    3e3c:	ldr	x0, [sp, #16]
    3e40:	bl	0 <strdup>
    3e44:	mov	x1, x0
    3e48:	ldr	x0, [sp, #24]
    3e4c:	str	x1, [x0, #504]
    3e50:	ldr	x0, [sp, #24]
    3e54:	ldr	x0, [x0, #504]
    3e58:	cmp	x0, #0x0
    3e5c:	b.ne	3e70 <ctf_cuname_set+0x60>  // b.any
    3e60:	mov	w1, #0xc                   	// #12
    3e64:	ldr	x0, [sp, #24]
    3e68:	bl	0 <ctf_set_errno>
    3e6c:	b	3e84 <ctf_cuname_set+0x74>
    3e70:	ldr	x0, [sp, #24]
    3e74:	ldr	x1, [x0, #504]
    3e78:	ldr	x0, [sp, #24]
    3e7c:	str	x1, [x0, #496]
    3e80:	mov	w0, #0x0                   	// #0
    3e84:	ldp	x29, x30, [sp], #32
    3e88:	ret

0000000000003e8c <ctf_import>:
    3e8c:	stp	x29, x30, [sp, #-48]!
    3e90:	mov	x29, sp
    3e94:	str	x0, [sp, #24]
    3e98:	str	x1, [sp, #16]
    3e9c:	ldr	x0, [sp, #24]
    3ea0:	cmp	x0, #0x0
    3ea4:	b.eq	3ed4 <ctf_import+0x48>  // b.none
    3ea8:	ldr	x1, [sp, #24]
    3eac:	ldr	x0, [sp, #16]
    3eb0:	cmp	x1, x0
    3eb4:	b.eq	3ed4 <ctf_import+0x48>  // b.none
    3eb8:	ldr	x0, [sp, #16]
    3ebc:	cmp	x0, #0x0
    3ec0:	b.eq	3ee4 <ctf_import+0x58>  // b.none
    3ec4:	ldr	x0, [sp, #16]
    3ec8:	ldr	w0, [x0, #548]
    3ecc:	cmp	w0, #0x0
    3ed0:	b.ne	3ee4 <ctf_import+0x58>  // b.any
    3ed4:	mov	w1, #0x16                  	// #22
    3ed8:	ldr	x0, [sp, #24]
    3edc:	bl	0 <ctf_set_errno>
    3ee0:	b	3fcc <ctf_import+0x140>
    3ee4:	ldr	x0, [sp, #16]
    3ee8:	cmp	x0, #0x0
    3eec:	b.eq	3f18 <ctf_import+0x8c>  // b.none
    3ef0:	ldr	x0, [sp, #16]
    3ef4:	ldr	x1, [x0, #488]
    3ef8:	ldr	x0, [sp, #24]
    3efc:	ldr	x0, [x0, #488]
    3f00:	cmp	x1, x0
    3f04:	b.eq	3f18 <ctf_import+0x8c>  // b.none
    3f08:	mov	w1, #0x3f4                 	// #1012
    3f0c:	ldr	x0, [sp, #24]
    3f10:	bl	0 <ctf_set_errno>
    3f14:	b	3fcc <ctf_import+0x140>
    3f18:	ldr	x0, [sp, #24]
    3f1c:	ldr	x0, [x0, #512]
    3f20:	cmp	x0, #0x0
    3f24:	b.eq	3f50 <ctf_import+0xc4>  // b.none
    3f28:	ldr	x0, [sp, #24]
    3f2c:	ldr	x0, [x0, #512]
    3f30:	ldr	w1, [x0, #548]
    3f34:	sub	w1, w1, #0x1
    3f38:	str	w1, [x0, #548]
    3f3c:	ldr	x0, [sp, #24]
    3f40:	ldr	x0, [x0, #512]
    3f44:	bl	3a0c <ctf_file_close>
    3f48:	ldr	x0, [sp, #24]
    3f4c:	str	xzr, [x0, #512]
    3f50:	ldr	x0, [sp, #16]
    3f54:	cmp	x0, #0x0
    3f58:	b.eq	3fbc <ctf_import+0x130>  // b.none
    3f5c:	ldr	x0, [sp, #24]
    3f60:	ldr	x0, [x0, #528]
    3f64:	cmp	x0, #0x0
    3f68:	b.ne	3f94 <ctf_import+0x108>  // b.any
    3f6c:	adrp	x0, 0 <__bswap_16>
    3f70:	add	x1, x0, #0x0
    3f74:	ldr	x0, [sp, #24]
    3f78:	bl	3d7c <ctf_parent_name_set>
    3f7c:	str	w0, [sp, #44]
    3f80:	ldr	w0, [sp, #44]
    3f84:	cmp	w0, #0x0
    3f88:	b.ge	3f94 <ctf_import+0x108>  // b.tcont
    3f8c:	ldr	w0, [sp, #44]
    3f90:	b	3fcc <ctf_import+0x140>
    3f94:	ldr	x0, [sp, #24]
    3f98:	ldr	w0, [x0, #552]
    3f9c:	orr	w1, w0, #0x1
    3fa0:	ldr	x0, [sp, #24]
    3fa4:	str	w1, [x0, #552]
    3fa8:	ldr	x0, [sp, #16]
    3fac:	ldr	w0, [x0, #548]
    3fb0:	add	w1, w0, #0x1
    3fb4:	ldr	x0, [sp, #16]
    3fb8:	str	w1, [x0, #548]
    3fbc:	ldr	x0, [sp, #24]
    3fc0:	ldr	x1, [sp, #16]
    3fc4:	str	x1, [x0, #512]
    3fc8:	mov	w0, #0x0                   	// #0
    3fcc:	ldp	x29, x30, [sp], #48
    3fd0:	ret

0000000000003fd4 <ctf_setmodel>:
    3fd4:	stp	x29, x30, [sp, #-48]!
    3fd8:	mov	x29, sp
    3fdc:	str	x0, [sp, #24]
    3fe0:	str	w1, [sp, #20]
    3fe4:	adrp	x0, 0 <__bswap_16>
    3fe8:	add	x0, x0, #0x0
    3fec:	str	x0, [sp, #40]
    3ff0:	b	4028 <ctf_setmodel+0x54>
    3ff4:	ldr	x0, [sp, #40]
    3ff8:	ldr	w0, [x0, #8]
    3ffc:	ldr	w1, [sp, #20]
    4000:	cmp	w1, w0
    4004:	b.ne	401c <ctf_setmodel+0x48>  // b.any
    4008:	ldr	x0, [sp, #24]
    400c:	ldr	x1, [sp, #40]
    4010:	str	x1, [x0, #488]
    4014:	mov	w0, #0x0                   	// #0
    4018:	b	4044 <ctf_setmodel+0x70>
    401c:	ldr	x0, [sp, #40]
    4020:	add	x0, x0, #0x38
    4024:	str	x0, [sp, #40]
    4028:	ldr	x0, [sp, #40]
    402c:	ldr	x0, [x0]
    4030:	cmp	x0, #0x0
    4034:	b.ne	3ff4 <ctf_setmodel+0x20>  // b.any
    4038:	mov	w1, #0x16                  	// #22
    403c:	ldr	x0, [sp, #24]
    4040:	bl	0 <ctf_set_errno>
    4044:	ldp	x29, x30, [sp], #48
    4048:	ret

000000000000404c <ctf_getmodel>:
    404c:	sub	sp, sp, #0x10
    4050:	str	x0, [sp, #8]
    4054:	ldr	x0, [sp, #8]
    4058:	ldr	x0, [x0, #488]
    405c:	ldr	w0, [x0, #8]
    4060:	add	sp, sp, #0x10
    4064:	ret

0000000000004068 <ctf_setspecific>:
    4068:	sub	sp, sp, #0x10
    406c:	str	x0, [sp, #8]
    4070:	str	x1, [sp]
    4074:	ldr	x0, [sp, #8]
    4078:	ldr	x1, [sp]
    407c:	str	x1, [x0, #720]
    4080:	nop
    4084:	add	sp, sp, #0x10
    4088:	ret

000000000000408c <ctf_getspecific>:
    408c:	sub	sp, sp, #0x10
    4090:	str	x0, [sp, #8]
    4094:	ldr	x0, [sp, #8]
    4098:	ldr	x0, [x0, #720]
    409c:	add	sp, sp, #0x10
    40a0:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_strraw_explicit>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	x2, [sp, #24]
  14:	ldr	w0, [sp, #36]
  18:	lsr	w0, w0, #31
  1c:	mov	w0, w0
  20:	add	x0, x0, #0x15
  24:	lsl	x0, x0, #4
  28:	ldr	x1, [sp, #40]
  2c:	add	x0, x1, x0
  30:	str	x0, [sp, #56]
  34:	ldr	w0, [sp, #36]
  38:	cmp	w0, #0x0
  3c:	b.lt	54 <ctf_strraw_explicit+0x54>  // b.tstop
  40:	ldr	x0, [sp, #24]
  44:	cmp	x0, #0x0
  48:	b.eq	54 <ctf_strraw_explicit+0x54>  // b.none
  4c:	ldr	x0, [sp, #24]
  50:	str	x0, [sp, #56]
  54:	ldr	w0, [sp, #36]
  58:	lsr	w0, w0, #31
  5c:	cmp	w0, #0x1
  60:	b.ne	88 <ctf_strraw_explicit+0x88>  // b.any
  64:	ldr	x0, [sp, #40]
  68:	ldr	x0, [x0, #128]
  6c:	cmp	x0, #0x0
  70:	b.eq	88 <ctf_strraw_explicit+0x88>  // b.none
  74:	ldr	x0, [sp, #40]
  78:	ldr	x0, [x0, #128]
  7c:	ldr	w1, [sp, #36]
  80:	bl	0 <ctf_dynhash_lookup>
  84:	b	114 <ctf_strraw_explicit+0x114>
  88:	ldr	w0, [sp, #36]
  8c:	cmp	w0, #0x0
  90:	b.lt	d0 <ctf_strraw_explicit+0xd0>  // b.tstop
  94:	ldr	w1, [sp, #36]
  98:	ldr	x0, [sp, #56]
  9c:	ldr	x0, [x0, #8]
  a0:	cmp	x1, x0
  a4:	b.cc	d0 <ctf_strraw_explicit+0xd0>  // b.lo, b.ul, b.last
  a8:	ldr	x0, [sp, #40]
  ac:	ldr	w0, [x0, #384]
  b0:	ldr	w1, [sp, #36]
  b4:	cmp	w1, w0
  b8:	b.cs	d0 <ctf_strraw_explicit+0xd0>  // b.hs, b.nlast
  bc:	ldr	x0, [sp, #40]
  c0:	ldr	x0, [x0, #120]
  c4:	ldr	w1, [sp, #36]
  c8:	bl	0 <ctf_dynhash_lookup>
  cc:	b	114 <ctf_strraw_explicit+0x114>
  d0:	ldr	x0, [sp, #56]
  d4:	ldr	x0, [x0]
  d8:	cmp	x0, #0x0
  dc:	b.eq	110 <ctf_strraw_explicit+0x110>  // b.none
  e0:	ldr	w0, [sp, #36]
  e4:	and	x1, x0, #0x7fffffff
  e8:	ldr	x0, [sp, #56]
  ec:	ldr	x0, [x0, #8]
  f0:	cmp	x1, x0
  f4:	b.cs	110 <ctf_strraw_explicit+0x110>  // b.hs, b.nlast
  f8:	ldr	x0, [sp, #56]
  fc:	ldr	x1, [x0]
 100:	ldr	w0, [sp, #36]
 104:	and	x0, x0, #0x7fffffff
 108:	add	x0, x1, x0
 10c:	b	114 <ctf_strraw_explicit+0x114>
 110:	mov	x0, #0x0                   	// #0
 114:	ldp	x29, x30, [sp], #64
 118:	ret

000000000000011c <ctf_strraw>:
 11c:	stp	x29, x30, [sp, #-32]!
 120:	mov	x29, sp
 124:	str	x0, [sp, #24]
 128:	str	w1, [sp, #20]
 12c:	mov	x2, #0x0                   	// #0
 130:	ldr	w1, [sp, #20]
 134:	ldr	x0, [sp, #24]
 138:	bl	0 <ctf_strraw_explicit>
 13c:	ldp	x29, x30, [sp], #32
 140:	ret

0000000000000144 <ctf_strptr>:
 144:	stp	x29, x30, [sp, #-48]!
 148:	mov	x29, sp
 14c:	str	x0, [sp, #24]
 150:	str	w1, [sp, #20]
 154:	ldr	w1, [sp, #20]
 158:	ldr	x0, [sp, #24]
 15c:	bl	11c <ctf_strraw>
 160:	str	x0, [sp, #40]
 164:	ldr	x0, [sp, #40]
 168:	cmp	x0, #0x0
 16c:	b.eq	178 <ctf_strptr+0x34>  // b.none
 170:	ldr	x0, [sp, #40]
 174:	b	180 <ctf_strptr+0x3c>
 178:	adrp	x0, 0 <ctf_strraw_explicit>
 17c:	add	x0, x0, #0x0
 180:	ldp	x29, x30, [sp], #48
 184:	ret

0000000000000188 <ctf_str_purge_atom_refs>:
 188:	stp	x29, x30, [sp, #-48]!
 18c:	mov	x29, sp
 190:	str	x0, [sp, #24]
 194:	ldr	x0, [sp, #24]
 198:	ldr	x0, [x0, #16]
 19c:	str	x0, [sp, #40]
 1a0:	b	1d0 <ctf_str_purge_atom_refs+0x48>
 1a4:	ldr	x0, [sp, #40]
 1a8:	ldr	x0, [x0, #8]
 1ac:	str	x0, [sp, #32]
 1b0:	ldr	x0, [sp, #24]
 1b4:	add	x0, x0, #0x8
 1b8:	ldr	x1, [sp, #40]
 1bc:	bl	0 <ctf_list_delete>
 1c0:	ldr	x0, [sp, #40]
 1c4:	bl	0 <free>
 1c8:	ldr	x0, [sp, #32]
 1cc:	str	x0, [sp, #40]
 1d0:	ldr	x0, [sp, #40]
 1d4:	cmp	x0, #0x0
 1d8:	b.ne	1a4 <ctf_str_purge_atom_refs+0x1c>  // b.any
 1dc:	nop
 1e0:	nop
 1e4:	ldp	x29, x30, [sp], #48
 1e8:	ret

00000000000001ec <ctf_str_free_atom>:
 1ec:	stp	x29, x30, [sp, #-48]!
 1f0:	mov	x29, sp
 1f4:	str	x0, [sp, #24]
 1f8:	ldr	x0, [sp, #24]
 1fc:	str	x0, [sp, #40]
 200:	ldr	x0, [sp, #40]
 204:	bl	188 <ctf_str_purge_atom_refs>
 208:	ldr	x0, [sp, #40]
 20c:	bl	0 <free>
 210:	nop
 214:	ldp	x29, x30, [sp], #48
 218:	ret

000000000000021c <ctf_str_create_atoms>:
 21c:	stp	x29, x30, [sp, #-32]!
 220:	mov	x29, sp
 224:	str	x0, [sp, #24]
 228:	adrp	x0, 0 <ctf_strraw_explicit>
 22c:	add	x3, x0, #0x0
 230:	adrp	x0, 0 <free>
 234:	add	x2, x0, #0x0
 238:	adrp	x0, 0 <ctf_hash_eq_string>
 23c:	add	x1, x0, #0x0
 240:	adrp	x0, 0 <ctf_hash_string>
 244:	add	x0, x0, #0x0
 248:	bl	0 <ctf_dynhash_create>
 24c:	mov	x1, x0
 250:	ldr	x0, [sp, #24]
 254:	str	x1, [x0, #368]
 258:	ldr	x0, [sp, #24]
 25c:	ldr	x0, [x0, #368]
 260:	cmp	x0, #0x0
 264:	b.ne	270 <ctf_str_create_atoms+0x54>  // b.any
 268:	mov	w0, #0xfffffff4            	// #-12
 26c:	b	320 <ctf_str_create_atoms+0x104>
 270:	ldr	x0, [sp, #24]
 274:	ldr	x0, [x0, #120]
 278:	cmp	x0, #0x0
 27c:	b.ne	2a8 <ctf_str_create_atoms+0x8c>  // b.any
 280:	mov	x3, #0x0                   	// #0
 284:	mov	x2, #0x0                   	// #0
 288:	adrp	x0, 0 <ctf_hash_eq_integer>
 28c:	add	x1, x0, #0x0
 290:	adrp	x0, 0 <ctf_hash_integer>
 294:	add	x0, x0, #0x0
 298:	bl	0 <ctf_dynhash_create>
 29c:	mov	x1, x0
 2a0:	ldr	x0, [sp, #24]
 2a4:	str	x1, [x0, #120]
 2a8:	ldr	x0, [sp, #24]
 2ac:	ldr	x0, [x0, #120]
 2b0:	cmp	x0, #0x0
 2b4:	b.eq	304 <ctf_str_create_atoms+0xe8>  // b.none
 2b8:	bl	0 <__errno_location>
 2bc:	str	wzr, [x0]
 2c0:	adrp	x0, 0 <ctf_strraw_explicit>
 2c4:	add	x1, x0, #0x0
 2c8:	ldr	x0, [sp, #24]
 2cc:	bl	598 <ctf_str_add>
 2d0:	bl	0 <__errno_location>
 2d4:	ldr	w0, [x0]
 2d8:	cmp	w0, #0xc
 2dc:	b.eq	2e8 <ctf_str_create_atoms+0xcc>  // b.none
 2e0:	mov	w0, #0x0                   	// #0
 2e4:	b	320 <ctf_str_create_atoms+0x104>
 2e8:	nop
 2ec:	ldr	x0, [sp, #24]
 2f0:	ldr	x0, [x0, #120]
 2f4:	bl	0 <ctf_dynhash_destroy>
 2f8:	ldr	x0, [sp, #24]
 2fc:	str	xzr, [x0, #120]
 300:	b	308 <ctf_str_create_atoms+0xec>
 304:	nop
 308:	ldr	x0, [sp, #24]
 30c:	ldr	x0, [x0, #368]
 310:	bl	0 <ctf_dynhash_destroy>
 314:	ldr	x0, [sp, #24]
 318:	str	xzr, [x0, #368]
 31c:	mov	w0, #0xfffffff4            	// #-12
 320:	ldp	x29, x30, [sp], #32
 324:	ret

0000000000000328 <ctf_str_free_atoms>:
 328:	stp	x29, x30, [sp, #-32]!
 32c:	mov	x29, sp
 330:	str	x0, [sp, #24]
 334:	ldr	x0, [sp, #24]
 338:	ldr	x0, [x0, #120]
 33c:	bl	0 <ctf_dynhash_destroy>
 340:	ldr	x0, [sp, #24]
 344:	ldr	x0, [x0, #368]
 348:	bl	0 <ctf_dynhash_destroy>
 34c:	nop
 350:	ldp	x29, x30, [sp], #32
 354:	ret

0000000000000358 <ctf_str_add_ref_internal>:
 358:	stp	x29, x30, [sp, #-96]!
 35c:	mov	x29, sp
 360:	str	x19, [sp, #16]
 364:	str	x0, [sp, #56]
 368:	str	x1, [sp, #48]
 36c:	str	w2, [sp, #44]
 370:	str	w3, [sp, #40]
 374:	str	x4, [sp, #32]
 378:	str	xzr, [sp, #88]
 37c:	str	xzr, [sp, #72]
 380:	str	xzr, [sp, #80]
 384:	ldr	x0, [sp, #56]
 388:	ldr	x0, [x0, #368]
 38c:	ldr	x1, [sp, #48]
 390:	bl	0 <ctf_dynhash_lookup>
 394:	str	x0, [sp, #72]
 398:	ldr	w0, [sp, #44]
 39c:	cmp	w0, #0x0
 3a0:	b.eq	3d0 <ctf_str_add_ref_internal+0x78>  // b.none
 3a4:	mov	x0, #0x18                  	// #24
 3a8:	bl	0 <malloc>
 3ac:	str	x0, [sp, #80]
 3b0:	ldr	x0, [sp, #80]
 3b4:	cmp	x0, #0x0
 3b8:	b.ne	3c4 <ctf_str_add_ref_internal+0x6c>  // b.any
 3bc:	mov	x0, #0x0                   	// #0
 3c0:	b	58c <ctf_str_add_ref_internal+0x234>
 3c4:	ldr	x0, [sp, #80]
 3c8:	ldr	x1, [sp, #32]
 3cc:	str	x1, [x0, #16]
 3d0:	ldr	x0, [sp, #72]
 3d4:	cmp	x0, #0x0
 3d8:	b.eq	414 <ctf_str_add_ref_internal+0xbc>  // b.none
 3dc:	ldr	w0, [sp, #44]
 3e0:	cmp	w0, #0x0
 3e4:	b.eq	40c <ctf_str_add_ref_internal+0xb4>  // b.none
 3e8:	ldr	x0, [sp, #72]
 3ec:	add	x0, x0, #0x8
 3f0:	ldr	x1, [sp, #80]
 3f4:	bl	0 <ctf_list_append>
 3f8:	ldr	x0, [sp, #56]
 3fc:	ldr	x0, [x0, #376]
 400:	add	x1, x0, #0x1
 404:	ldr	x0, [sp, #56]
 408:	str	x1, [x0, #376]
 40c:	ldr	x0, [sp, #72]
 410:	b	58c <ctf_str_add_ref_internal+0x234>
 414:	mov	x0, #0x28                  	// #40
 418:	bl	0 <malloc>
 41c:	str	x0, [sp, #72]
 420:	ldr	x0, [sp, #72]
 424:	cmp	x0, #0x0
 428:	b.eq	538 <ctf_str_add_ref_internal+0x1e0>  // b.none
 42c:	mov	x2, #0x28                  	// #40
 430:	mov	w1, #0x0                   	// #0
 434:	ldr	x0, [sp, #72]
 438:	bl	0 <memset>
 43c:	ldr	x0, [sp, #48]
 440:	bl	0 <strdup>
 444:	str	x0, [sp, #88]
 448:	ldr	x0, [sp, #88]
 44c:	cmp	x0, #0x0
 450:	b.eq	540 <ctf_str_add_ref_internal+0x1e8>  // b.none
 454:	ldr	x0, [sp, #56]
 458:	ldr	x0, [x0, #368]
 45c:	ldr	x2, [sp, #72]
 460:	ldr	x1, [sp, #88]
 464:	bl	0 <ctf_dynhash_insert>
 468:	cmp	w0, #0x0
 46c:	b.lt	548 <ctf_str_add_ref_internal+0x1f0>  // b.tstop
 470:	ldr	x0, [sp, #72]
 474:	ldr	x1, [sp, #88]
 478:	str	x1, [x0]
 47c:	ldr	x0, [sp, #56]
 480:	ldr	x1, [x0, #624]
 484:	ldr	x0, [sp, #72]
 488:	str	x1, [x0, #32]
 48c:	ldr	w0, [sp, #40]
 490:	cmp	w0, #0x0
 494:	b.eq	500 <ctf_str_add_ref_internal+0x1a8>  // b.none
 498:	ldr	x0, [sp, #56]
 49c:	ldr	w1, [x0, #384]
 4a0:	ldr	x0, [sp, #72]
 4a4:	str	w1, [x0, #24]
 4a8:	ldr	x0, [sp, #56]
 4ac:	ldr	x3, [x0, #120]
 4b0:	ldr	x0, [sp, #72]
 4b4:	ldr	w0, [x0, #24]
 4b8:	mov	w0, w0
 4bc:	mov	x1, x0
 4c0:	ldr	x0, [sp, #72]
 4c4:	ldr	x0, [x0]
 4c8:	mov	x2, x0
 4cc:	mov	x0, x3
 4d0:	bl	0 <ctf_dynhash_insert>
 4d4:	cmp	w0, #0x0
 4d8:	b.lt	550 <ctf_str_add_ref_internal+0x1f8>  // b.tstop
 4dc:	ldr	x0, [sp, #56]
 4e0:	ldr	w19, [x0, #384]
 4e4:	ldr	x0, [sp, #72]
 4e8:	ldr	x0, [x0]
 4ec:	bl	0 <strlen>
 4f0:	add	w0, w19, w0
 4f4:	add	w1, w0, #0x1
 4f8:	ldr	x0, [sp, #56]
 4fc:	str	w1, [x0, #384]
 500:	ldr	w0, [sp, #44]
 504:	cmp	w0, #0x0
 508:	b.eq	530 <ctf_str_add_ref_internal+0x1d8>  // b.none
 50c:	ldr	x0, [sp, #72]
 510:	add	x0, x0, #0x8
 514:	ldr	x1, [sp, #80]
 518:	bl	0 <ctf_list_append>
 51c:	ldr	x0, [sp, #56]
 520:	ldr	x0, [x0, #376]
 524:	add	x1, x0, #0x1
 528:	ldr	x0, [sp, #56]
 52c:	str	x1, [x0, #376]
 530:	ldr	x0, [sp, #72]
 534:	b	58c <ctf_str_add_ref_internal+0x234>
 538:	nop
 53c:	b	554 <ctf_str_add_ref_internal+0x1fc>
 540:	nop
 544:	b	554 <ctf_str_add_ref_internal+0x1fc>
 548:	nop
 54c:	b	554 <ctf_str_add_ref_internal+0x1fc>
 550:	nop
 554:	ldr	x0, [sp, #88]
 558:	cmp	x0, #0x0
 55c:	b.eq	570 <ctf_str_add_ref_internal+0x218>  // b.none
 560:	ldr	x0, [sp, #56]
 564:	ldr	x0, [x0, #368]
 568:	ldr	x1, [sp, #88]
 56c:	bl	0 <ctf_dynhash_remove>
 570:	ldr	x0, [sp, #72]
 574:	bl	0 <free>
 578:	ldr	x0, [sp, #80]
 57c:	bl	0 <free>
 580:	ldr	x0, [sp, #88]
 584:	bl	0 <free>
 588:	mov	x0, #0x0                   	// #0
 58c:	ldr	x19, [sp, #16]
 590:	ldp	x29, x30, [sp], #96
 594:	ret

0000000000000598 <ctf_str_add>:
 598:	stp	x29, x30, [sp, #-48]!
 59c:	mov	x29, sp
 5a0:	str	x0, [sp, #24]
 5a4:	str	x1, [sp, #16]
 5a8:	ldr	x0, [sp, #16]
 5ac:	cmp	x0, #0x0
 5b0:	b.ne	5bc <ctf_str_add+0x24>  // b.any
 5b4:	mov	w0, #0x0                   	// #0
 5b8:	b	5f4 <ctf_str_add+0x5c>
 5bc:	mov	x4, #0x0                   	// #0
 5c0:	mov	w3, #0x1                   	// #1
 5c4:	mov	w2, #0x0                   	// #0
 5c8:	ldr	x1, [sp, #16]
 5cc:	ldr	x0, [sp, #24]
 5d0:	bl	358 <ctf_str_add_ref_internal>
 5d4:	str	x0, [sp, #40]
 5d8:	ldr	x0, [sp, #40]
 5dc:	cmp	x0, #0x0
 5e0:	b.ne	5ec <ctf_str_add+0x54>  // b.any
 5e4:	mov	w0, #0x0                   	// #0
 5e8:	b	5f4 <ctf_str_add+0x5c>
 5ec:	ldr	x0, [sp, #40]
 5f0:	ldr	w0, [x0, #24]
 5f4:	ldp	x29, x30, [sp], #48
 5f8:	ret

00000000000005fc <ctf_str_add_ref>:
 5fc:	stp	x29, x30, [sp, #-64]!
 600:	mov	x29, sp
 604:	str	x0, [sp, #40]
 608:	str	x1, [sp, #32]
 60c:	str	x2, [sp, #24]
 610:	ldr	x0, [sp, #32]
 614:	cmp	x0, #0x0
 618:	b.ne	624 <ctf_str_add_ref+0x28>  // b.any
 61c:	mov	w0, #0x0                   	// #0
 620:	b	65c <ctf_str_add_ref+0x60>
 624:	ldr	x4, [sp, #24]
 628:	mov	w3, #0x1                   	// #1
 62c:	mov	w2, #0x1                   	// #1
 630:	ldr	x1, [sp, #32]
 634:	ldr	x0, [sp, #40]
 638:	bl	358 <ctf_str_add_ref_internal>
 63c:	str	x0, [sp, #56]
 640:	ldr	x0, [sp, #56]
 644:	cmp	x0, #0x0
 648:	b.ne	654 <ctf_str_add_ref+0x58>  // b.any
 64c:	mov	w0, #0x0                   	// #0
 650:	b	65c <ctf_str_add_ref+0x60>
 654:	ldr	x0, [sp, #56]
 658:	ldr	w0, [x0, #24]
 65c:	ldp	x29, x30, [sp], #64
 660:	ret

0000000000000664 <ctf_str_add_external>:
 664:	stp	x29, x30, [sp, #-64]!
 668:	mov	x29, sp
 66c:	str	x0, [sp, #40]
 670:	str	x1, [sp, #32]
 674:	str	w2, [sp, #28]
 678:	ldr	x0, [sp, #32]
 67c:	cmp	x0, #0x0
 680:	b.ne	68c <ctf_str_add_external+0x28>  // b.any
 684:	mov	w0, #0x0                   	// #0
 688:	b	6d0 <ctf_str_add_external+0x6c>
 68c:	mov	x4, #0x0                   	// #0
 690:	mov	w3, #0x0                   	// #0
 694:	mov	w2, #0x0                   	// #0
 698:	ldr	x1, [sp, #32]
 69c:	ldr	x0, [sp, #40]
 6a0:	bl	358 <ctf_str_add_ref_internal>
 6a4:	str	x0, [sp, #56]
 6a8:	ldr	x0, [sp, #56]
 6ac:	cmp	x0, #0x0
 6b0:	b.ne	6bc <ctf_str_add_external+0x58>  // b.any
 6b4:	mov	w0, #0x0                   	// #0
 6b8:	b	6d0 <ctf_str_add_external+0x6c>
 6bc:	ldr	w0, [sp, #28]
 6c0:	orr	w1, w0, #0x80000000
 6c4:	ldr	x0, [sp, #56]
 6c8:	str	w1, [x0, #28]
 6cc:	mov	w0, #0x1                   	// #1
 6d0:	ldp	x29, x30, [sp], #64
 6d4:	ret

00000000000006d8 <ctf_str_remove_ref>:
 6d8:	stp	x29, x30, [sp, #-80]!
 6dc:	mov	x29, sp
 6e0:	str	x0, [sp, #40]
 6e4:	str	x1, [sp, #32]
 6e8:	str	x2, [sp, #24]
 6ec:	str	xzr, [sp, #64]
 6f0:	ldr	x0, [sp, #40]
 6f4:	ldr	x0, [x0, #368]
 6f8:	ldr	x1, [sp, #32]
 6fc:	bl	0 <ctf_dynhash_lookup>
 700:	str	x0, [sp, #64]
 704:	ldr	x0, [sp, #64]
 708:	cmp	x0, #0x0
 70c:	b.eq	770 <ctf_str_remove_ref+0x98>  // b.none
 710:	ldr	x0, [sp, #64]
 714:	ldr	x0, [x0, #16]
 718:	str	x0, [sp, #72]
 71c:	b	760 <ctf_str_remove_ref+0x88>
 720:	ldr	x0, [sp, #72]
 724:	ldr	x0, [x0, #8]
 728:	str	x0, [sp, #56]
 72c:	ldr	x0, [sp, #72]
 730:	ldr	x0, [x0, #16]
 734:	ldr	x1, [sp, #24]
 738:	cmp	x1, x0
 73c:	b.ne	758 <ctf_str_remove_ref+0x80>  // b.any
 740:	ldr	x0, [sp, #64]
 744:	add	x0, x0, #0x8
 748:	ldr	x1, [sp, #72]
 74c:	bl	0 <ctf_list_delete>
 750:	ldr	x0, [sp, #72]
 754:	bl	0 <free>
 758:	ldr	x0, [sp, #56]
 75c:	str	x0, [sp, #72]
 760:	ldr	x0, [sp, #72]
 764:	cmp	x0, #0x0
 768:	b.ne	720 <ctf_str_remove_ref+0x48>  // b.any
 76c:	b	774 <ctf_str_remove_ref+0x9c>
 770:	nop
 774:	ldp	x29, x30, [sp], #80
 778:	ret

000000000000077c <ctf_str_rollback_atom>:
 77c:	sub	sp, sp, #0x30
 780:	str	x0, [sp, #24]
 784:	str	x1, [sp, #16]
 788:	str	x2, [sp, #8]
 78c:	ldr	x0, [sp, #16]
 790:	str	x0, [sp, #40]
 794:	ldr	x0, [sp, #8]
 798:	str	x0, [sp, #32]
 79c:	ldr	x0, [sp, #40]
 7a0:	ldr	x1, [x0, #32]
 7a4:	ldr	x0, [sp, #32]
 7a8:	ldr	x0, [x0, #8]
 7ac:	cmp	x1, x0
 7b0:	cset	w0, hi  // hi = pmore
 7b4:	and	w0, w0, #0xff
 7b8:	add	sp, sp, #0x30
 7bc:	ret

00000000000007c0 <ctf_str_rollback>:
 7c0:	stp	x29, x30, [sp, #-48]!
 7c4:	mov	x29, sp
 7c8:	str	x0, [sp, #40]
 7cc:	stp	x1, x2, [sp, #24]
 7d0:	ldr	x0, [sp, #40]
 7d4:	ldr	x3, [x0, #368]
 7d8:	add	x0, sp, #0x18
 7dc:	mov	x2, x0
 7e0:	adrp	x0, 0 <ctf_strraw_explicit>
 7e4:	add	x1, x0, #0x0
 7e8:	mov	x0, x3
 7ec:	bl	0 <ctf_dynhash_iter_remove>
 7f0:	nop
 7f4:	ldp	x29, x30, [sp], #48
 7f8:	ret

00000000000007fc <ctf_str_purge_one_atom_refs>:
 7fc:	stp	x29, x30, [sp, #-64]!
 800:	mov	x29, sp
 804:	str	x0, [sp, #40]
 808:	str	x1, [sp, #32]
 80c:	str	x2, [sp, #24]
 810:	ldr	x0, [sp, #32]
 814:	str	x0, [sp, #56]
 818:	ldr	x0, [sp, #56]
 81c:	bl	188 <ctf_str_purge_atom_refs>
 820:	nop
 824:	ldp	x29, x30, [sp], #64
 828:	ret

000000000000082c <ctf_str_purge_refs>:
 82c:	stp	x29, x30, [sp, #-32]!
 830:	mov	x29, sp
 834:	str	x0, [sp, #24]
 838:	ldr	x0, [sp, #24]
 83c:	ldr	x0, [x0, #376]
 840:	cmp	x0, #0x0
 844:	b.eq	864 <ctf_str_purge_refs+0x38>  // b.none
 848:	ldr	x0, [sp, #24]
 84c:	ldr	x3, [x0, #368]
 850:	mov	x2, #0x0                   	// #0
 854:	adrp	x0, 0 <ctf_strraw_explicit>
 858:	add	x1, x0, #0x0
 85c:	mov	x0, x3
 860:	bl	0 <ctf_dynhash_iter>
 864:	ldr	x0, [sp, #24]
 868:	str	xzr, [x0, #376]
 86c:	nop
 870:	ldp	x29, x30, [sp], #32
 874:	ret

0000000000000878 <ctf_str_update_refs>:
 878:	sub	sp, sp, #0x20
 87c:	str	x0, [sp, #8]
 880:	str	w1, [sp, #4]
 884:	ldr	x0, [sp, #8]
 888:	ldr	x0, [x0, #16]
 88c:	str	x0, [sp, #24]
 890:	b	8b0 <ctf_str_update_refs+0x38>
 894:	ldr	x0, [sp, #24]
 898:	ldr	x0, [x0, #16]
 89c:	ldr	w1, [sp, #4]
 8a0:	str	w1, [x0]
 8a4:	ldr	x0, [sp, #24]
 8a8:	ldr	x0, [x0, #8]
 8ac:	str	x0, [sp, #24]
 8b0:	ldr	x0, [sp, #24]
 8b4:	cmp	x0, #0x0
 8b8:	b.ne	894 <ctf_str_update_refs+0x1c>  // b.any
 8bc:	nop
 8c0:	nop
 8c4:	add	sp, sp, #0x20
 8c8:	ret

00000000000008cc <ctf_str_count_strtab>:
 8cc:	stp	x29, x30, [sp, #-80]!
 8d0:	mov	x29, sp
 8d4:	str	x19, [sp, #16]
 8d8:	str	x0, [sp, #56]
 8dc:	str	x1, [sp, #48]
 8e0:	str	x2, [sp, #40]
 8e4:	ldr	x0, [sp, #48]
 8e8:	str	x0, [sp, #72]
 8ec:	ldr	x0, [sp, #40]
 8f0:	str	x0, [sp, #64]
 8f4:	ldr	x0, [sp, #64]
 8f8:	ldr	x0, [x0, #32]
 8fc:	ldr	x1, [sp, #72]
 900:	cmp	x1, x0
 904:	b.ne	920 <ctf_str_count_strtab+0x54>  // b.any
 908:	ldr	x0, [sp, #64]
 90c:	ldr	x0, [x0, #8]
 910:	add	x1, x0, #0x1
 914:	ldr	x0, [sp, #64]
 918:	str	x1, [x0, #8]
 91c:	b	984 <ctf_str_count_strtab+0xb8>
 920:	ldr	x0, [sp, #72]
 924:	add	x0, x0, #0x8
 928:	bl	0 <ctf_list_empty_p>
 92c:	cmp	w0, #0x0
 930:	b.ne	984 <ctf_str_count_strtab+0xb8>  // b.any
 934:	ldr	x0, [sp, #72]
 938:	ldr	w0, [x0, #28]
 93c:	cmp	w0, #0x0
 940:	b.ne	970 <ctf_str_count_strtab+0xa4>  // b.any
 944:	ldr	x0, [sp, #64]
 948:	ldr	x0, [x0]
 94c:	ldr	x19, [x0, #8]
 950:	ldr	x0, [sp, #72]
 954:	ldr	x0, [x0]
 958:	bl	0 <strlen>
 95c:	add	x1, x19, x0
 960:	ldr	x0, [sp, #64]
 964:	ldr	x0, [x0]
 968:	add	x1, x1, #0x1
 96c:	str	x1, [x0, #8]
 970:	ldr	x0, [sp, #64]
 974:	ldr	x0, [x0, #8]
 978:	add	x1, x0, #0x1
 97c:	ldr	x0, [sp, #64]
 980:	str	x1, [x0, #8]
 984:	ldr	x19, [sp, #16]
 988:	ldp	x29, x30, [sp], #80
 98c:	ret

0000000000000990 <ctf_str_populate_sorttab>:
 990:	stp	x29, x30, [sp, #-64]!
 994:	mov	x29, sp
 998:	str	x0, [sp, #40]
 99c:	str	x1, [sp, #32]
 9a0:	str	x2, [sp, #24]
 9a4:	ldr	x0, [sp, #32]
 9a8:	str	x0, [sp, #56]
 9ac:	ldr	x0, [sp, #24]
 9b0:	str	x0, [sp, #48]
 9b4:	ldr	x0, [sp, #48]
 9b8:	ldr	x0, [x0, #32]
 9bc:	ldr	x1, [sp, #56]
 9c0:	cmp	x1, x0
 9c4:	b.eq	a0c <ctf_str_populate_sorttab+0x7c>  // b.none
 9c8:	ldr	x0, [sp, #56]
 9cc:	add	x0, x0, #0x8
 9d0:	bl	0 <ctf_list_empty_p>
 9d4:	cmp	w0, #0x0
 9d8:	b.ne	a10 <ctf_str_populate_sorttab+0x80>  // b.any
 9dc:	ldr	x0, [sp, #48]
 9e0:	ldr	x1, [x0, #16]
 9e4:	ldr	x0, [sp, #48]
 9e8:	ldr	x0, [x0, #24]
 9ec:	add	x3, x0, #0x1
 9f0:	ldr	x2, [sp, #48]
 9f4:	str	x3, [x2, #24]
 9f8:	lsl	x0, x0, #3
 9fc:	add	x0, x1, x0
 a00:	ldr	x1, [sp, #56]
 a04:	str	x1, [x0]
 a08:	b	a10 <ctf_str_populate_sorttab+0x80>
 a0c:	nop
 a10:	ldp	x29, x30, [sp], #64
 a14:	ret

0000000000000a18 <ctf_str_sort_strtab>:
 a18:	stp	x29, x30, [sp, #-48]!
 a1c:	mov	x29, sp
 a20:	str	x0, [sp, #24]
 a24:	str	x1, [sp, #16]
 a28:	ldr	x0, [sp, #24]
 a2c:	str	x0, [sp, #40]
 a30:	ldr	x0, [sp, #16]
 a34:	str	x0, [sp, #32]
 a38:	ldr	x0, [sp, #40]
 a3c:	ldr	x0, [x0]
 a40:	ldr	x2, [x0]
 a44:	ldr	x0, [sp, #32]
 a48:	ldr	x0, [x0]
 a4c:	ldr	x0, [x0]
 a50:	mov	x1, x0
 a54:	mov	x0, x2
 a58:	bl	0 <strcmp>
 a5c:	ldp	x29, x30, [sp], #48
 a60:	ret

0000000000000a64 <ctf_str_write_strtab>:
 a64:	stp	x29, x30, [sp, #-128]!
 a68:	mov	x29, sp
 a6c:	str	x0, [sp, #24]
 a70:	str	wzr, [sp, #124]
 a74:	str	wzr, [sp, #108]
 a78:	add	x0, sp, #0x48
 a7c:	mov	x2, #0x10                  	// #16
 a80:	mov	w1, #0x0                   	// #0
 a84:	bl	0 <memset>
 a88:	add	x0, sp, #0x20
 a8c:	mov	x2, #0x28                  	// #40
 a90:	mov	w1, #0x0                   	// #0
 a94:	bl	0 <memset>
 a98:	add	x0, sp, #0x48
 a9c:	str	x0, [sp, #32]
 aa0:	ldr	x0, [sp, #24]
 aa4:	ldr	x2, [x0, #368]
 aa8:	adrp	x0, 0 <ctf_strraw_explicit>
 aac:	add	x1, x0, #0x0
 ab0:	mov	x0, x2
 ab4:	bl	0 <ctf_dynhash_lookup>
 ab8:	str	x0, [sp, #96]
 abc:	ldr	x0, [sp, #96]
 ac0:	cmp	x0, #0x0
 ac4:	b.ne	ae0 <ctf_str_write_strtab+0x7c>  // b.any
 ac8:	adrp	x0, 0 <ctf_strraw_explicit>
 acc:	add	x0, x0, #0x0
 ad0:	bl	0 <ctf_dprintf>
 ad4:	str	xzr, [sp, #72]
 ad8:	ldp	x0, x1, [sp, #72]
 adc:	b	e2c <ctf_str_write_strtab+0x3c8>
 ae0:	ldr	x0, [sp, #96]
 ae4:	str	x0, [sp, #64]
 ae8:	ldr	x0, [sp, #24]
 aec:	ldr	x3, [x0, #368]
 af0:	add	x0, sp, #0x20
 af4:	mov	x2, x0
 af8:	adrp	x0, 0 <ctf_strraw_explicit>
 afc:	add	x1, x0, #0x0
 b00:	mov	x0, x3
 b04:	bl	0 <ctf_dynhash_iter>
 b08:	ldr	x0, [sp, #80]
 b0c:	add	x0, x0, #0x1
 b10:	str	x0, [sp, #80]
 b14:	ldr	x0, [sp, #80]
 b18:	mov	x1, x0
 b1c:	adrp	x0, 0 <ctf_strraw_explicit>
 b20:	add	x0, x0, #0x0
 b24:	bl	0 <ctf_dprintf>
 b28:	ldr	x0, [sp, #40]
 b2c:	mov	x1, #0x8                   	// #8
 b30:	bl	0 <calloc>
 b34:	str	x0, [sp, #88]
 b38:	ldr	x0, [sp, #88]
 b3c:	cmp	x0, #0x0
 b40:	b.eq	e24 <ctf_str_write_strtab+0x3c0>  // b.none
 b44:	ldr	x0, [sp, #88]
 b48:	ldr	x1, [sp, #96]
 b4c:	str	x1, [x0]
 b50:	mov	x0, #0x1                   	// #1
 b54:	str	x0, [sp, #56]
 b58:	ldr	x0, [sp, #88]
 b5c:	str	x0, [sp, #48]
 b60:	ldr	x0, [sp, #24]
 b64:	ldr	x3, [x0, #368]
 b68:	add	x0, sp, #0x20
 b6c:	mov	x2, x0
 b70:	adrp	x0, 0 <ctf_strraw_explicit>
 b74:	add	x1, x0, #0x0
 b78:	mov	x0, x3
 b7c:	bl	0 <ctf_dynhash_iter>
 b80:	ldr	x0, [sp, #88]
 b84:	add	x4, x0, #0x8
 b88:	ldr	x0, [sp, #40]
 b8c:	sub	x1, x0, #0x1
 b90:	adrp	x0, 0 <ctf_strraw_explicit>
 b94:	add	x3, x0, #0x0
 b98:	mov	x2, #0x8                   	// #8
 b9c:	mov	x0, x4
 ba0:	bl	0 <qsort>
 ba4:	ldr	x0, [sp, #80]
 ba8:	bl	0 <malloc>
 bac:	str	x0, [sp, #72]
 bb0:	ldr	x0, [sp, #72]
 bb4:	cmp	x0, #0x0
 bb8:	b.eq	e14 <ctf_str_write_strtab+0x3b0>  // b.none
 bbc:	ldr	x0, [sp, #24]
 bc0:	ldr	x0, [x0, #128]
 bc4:	cmp	x0, #0x0
 bc8:	b.ne	bf4 <ctf_str_write_strtab+0x190>  // b.any
 bcc:	mov	x3, #0x0                   	// #0
 bd0:	mov	x2, #0x0                   	// #0
 bd4:	adrp	x0, 0 <ctf_hash_eq_integer>
 bd8:	add	x1, x0, #0x0
 bdc:	adrp	x0, 0 <ctf_hash_integer>
 be0:	add	x0, x0, #0x0
 be4:	bl	0 <ctf_dynhash_create>
 be8:	mov	x1, x0
 bec:	ldr	x0, [sp, #24]
 bf0:	str	x1, [x0, #128]
 bf4:	ldr	x0, [sp, #24]
 bf8:	ldr	x0, [x0, #128]
 bfc:	cmp	x0, #0x0
 c00:	b.eq	df8 <ctf_str_write_strtab+0x394>  // b.none
 c04:	str	xzr, [sp, #112]
 c08:	b	d9c <ctf_str_write_strtab+0x338>
 c0c:	ldr	x0, [sp, #112]
 c10:	lsl	x0, x0, #3
 c14:	ldr	x1, [sp, #88]
 c18:	add	x0, x1, x0
 c1c:	ldr	x0, [x0]
 c20:	ldr	w0, [x0, #28]
 c24:	cmp	w0, #0x0
 c28:	b.eq	cf8 <ctf_str_write_strtab+0x294>  // b.none
 c2c:	mov	w0, #0x1                   	// #1
 c30:	str	w0, [sp, #108]
 c34:	ldr	x0, [sp, #112]
 c38:	lsl	x0, x0, #3
 c3c:	ldr	x1, [sp, #88]
 c40:	add	x0, x1, x0
 c44:	ldr	x2, [x0]
 c48:	ldr	x0, [sp, #112]
 c4c:	lsl	x0, x0, #3
 c50:	ldr	x1, [sp, #88]
 c54:	add	x0, x1, x0
 c58:	ldr	x0, [x0]
 c5c:	ldr	w0, [x0, #28]
 c60:	mov	w1, w0
 c64:	mov	x0, x2
 c68:	bl	878 <ctf_str_update_refs>
 c6c:	ldr	x0, [sp, #24]
 c70:	ldr	x3, [x0, #128]
 c74:	ldr	x0, [sp, #112]
 c78:	lsl	x0, x0, #3
 c7c:	ldr	x1, [sp, #88]
 c80:	add	x0, x1, x0
 c84:	ldr	x0, [x0]
 c88:	ldr	w0, [x0, #28]
 c8c:	mov	w0, w0
 c90:	mov	x4, x0
 c94:	ldr	x0, [sp, #112]
 c98:	lsl	x0, x0, #3
 c9c:	ldr	x1, [sp, #88]
 ca0:	add	x0, x1, x0
 ca4:	ldr	x0, [x0]
 ca8:	ldr	x0, [x0]
 cac:	mov	x2, x0
 cb0:	mov	x1, x4
 cb4:	mov	x0, x3
 cb8:	bl	0 <ctf_dynhash_insert>
 cbc:	cmp	w0, #0x0
 cc0:	b.lt	e00 <ctf_str_write_strtab+0x39c>  // b.tstop
 cc4:	ldr	x0, [sp, #112]
 cc8:	lsl	x0, x0, #3
 ccc:	ldr	x1, [sp, #88]
 cd0:	add	x0, x1, x0
 cd4:	ldr	x1, [x0]
 cd8:	ldr	x0, [sp, #112]
 cdc:	lsl	x0, x0, #3
 ce0:	ldr	x2, [sp, #88]
 ce4:	add	x0, x2, x0
 ce8:	ldr	x0, [x0]
 cec:	ldr	w1, [x1, #28]
 cf0:	str	w1, [x0, #24]
 cf4:	b	d90 <ctf_str_write_strtab+0x32c>
 cf8:	ldr	x0, [sp, #112]
 cfc:	lsl	x0, x0, #3
 d00:	ldr	x1, [sp, #88]
 d04:	add	x0, x1, x0
 d08:	ldr	x0, [x0]
 d0c:	ldr	w1, [sp, #124]
 d10:	bl	878 <ctf_str_update_refs>
 d14:	ldr	x0, [sp, #112]
 d18:	lsl	x0, x0, #3
 d1c:	ldr	x1, [sp, #88]
 d20:	add	x0, x1, x0
 d24:	ldr	x0, [x0]
 d28:	ldr	w1, [sp, #124]
 d2c:	str	w1, [x0, #24]
 d30:	ldr	x1, [sp, #72]
 d34:	ldr	w0, [sp, #124]
 d38:	add	x2, x1, x0
 d3c:	ldr	x0, [sp, #112]
 d40:	lsl	x0, x0, #3
 d44:	ldr	x1, [sp, #88]
 d48:	add	x0, x1, x0
 d4c:	ldr	x0, [x0]
 d50:	ldr	x0, [x0]
 d54:	mov	x1, x0
 d58:	mov	x0, x2
 d5c:	bl	0 <strcpy>
 d60:	ldr	x0, [sp, #112]
 d64:	lsl	x0, x0, #3
 d68:	ldr	x1, [sp, #88]
 d6c:	add	x0, x1, x0
 d70:	ldr	x0, [x0]
 d74:	ldr	x0, [x0]
 d78:	bl	0 <strlen>
 d7c:	mov	w1, w0
 d80:	ldr	w0, [sp, #124]
 d84:	add	w0, w1, w0
 d88:	add	w0, w0, #0x1
 d8c:	str	w0, [sp, #124]
 d90:	ldr	x0, [sp, #112]
 d94:	add	x0, x0, #0x1
 d98:	str	x0, [sp, #112]
 d9c:	ldr	x0, [sp, #40]
 da0:	ldr	x1, [sp, #112]
 da4:	cmp	x1, x0
 da8:	b.cc	c0c <ctf_str_write_strtab+0x1a8>  // b.lo, b.ul, b.last
 dac:	ldr	x0, [sp, #88]
 db0:	bl	0 <free>
 db4:	ldr	w0, [sp, #108]
 db8:	cmp	w0, #0x0
 dbc:	b.ne	dd4 <ctf_str_write_strtab+0x370>  // b.any
 dc0:	ldr	x0, [sp, #24]
 dc4:	ldr	x0, [x0, #128]
 dc8:	bl	0 <ctf_dynhash_destroy>
 dcc:	ldr	x0, [sp, #24]
 dd0:	str	xzr, [x0, #128]
 dd4:	ldr	x0, [sp, #24]
 dd8:	ldr	x0, [x0, #120]
 ddc:	bl	0 <ctf_dynhash_empty>
 de0:	ldr	x0, [sp, #80]
 de4:	add	w1, w0, #0x1
 de8:	ldr	x0, [sp, #24]
 dec:	str	w1, [x0, #384]
 df0:	ldp	x0, x1, [sp, #72]
 df4:	b	e2c <ctf_str_write_strtab+0x3c8>
 df8:	nop
 dfc:	b	e04 <ctf_str_write_strtab+0x3a0>
 e00:	nop
 e04:	ldr	x0, [sp, #72]
 e08:	bl	0 <free>
 e0c:	str	xzr, [sp, #72]
 e10:	b	e18 <ctf_str_write_strtab+0x3b4>
 e14:	nop
 e18:	ldr	x0, [sp, #88]
 e1c:	bl	0 <free>
 e20:	b	e28 <ctf_str_write_strtab+0x3c4>
 e24:	nop
 e28:	ldp	x0, x1, [sp, #72]
 e2c:	ldp	x29, x30, [sp], #128
 e30:	ret

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_mmap>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	x0, [sp, #32]
  18:	mov	x5, x0
  1c:	ldr	w4, [sp, #28]
  20:	mov	w3, #0x2                   	// #2
  24:	mov	w2, #0x1                   	// #1
  28:	ldr	x1, [sp, #40]
  2c:	mov	x0, #0x0                   	// #0
  30:	bl	0 <mmap>
  34:	str	x0, [sp, #56]
  38:	ldr	x0, [sp, #56]
  3c:	cmn	x0, #0x1
  40:	b.ne	48 <ctf_mmap+0x48>  // b.any
  44:	str	xzr, [sp, #56]
  48:	ldr	x0, [sp, #56]
  4c:	ldp	x29, x30, [sp], #64
  50:	ret

0000000000000054 <ctf_munmap>:
  54:	stp	x29, x30, [sp, #-32]!
  58:	mov	x29, sp
  5c:	str	x0, [sp, #24]
  60:	str	x1, [sp, #16]
  64:	ldr	x1, [sp, #16]
  68:	ldr	x0, [sp, #24]
  6c:	bl	0 <munmap>
  70:	nop
  74:	ldp	x29, x30, [sp], #32
  78:	ret

000000000000007c <ctf_pread>:
  7c:	stp	x29, x30, [sp, #-80]!
  80:	mov	x29, sp
  84:	str	w0, [sp, #44]
  88:	str	x1, [sp, #32]
  8c:	str	x2, [sp, #24]
  90:	str	x3, [sp, #16]
  94:	str	xzr, [sp, #72]
  98:	ldr	x0, [sp, #32]
  9c:	str	x0, [sp, #64]
  a0:	b	154 <ctf_pread+0xd8>
  a4:	bl	0 <__errno_location>
  a8:	str	wzr, [x0]
  ac:	ldr	x0, [sp, #24]
  b0:	ldr	x3, [sp, #16]
  b4:	mov	x2, x0
  b8:	ldr	x1, [sp, #64]
  bc:	ldr	w0, [sp, #44]
  c0:	bl	0 <pread>
  c4:	str	x0, [sp, #56]
  c8:	ldr	x0, [sp, #56]
  cc:	cmp	x0, #0x0
  d0:	b.ge	ec <ctf_pread+0x70>  // b.tcont
  d4:	bl	0 <__errno_location>
  d8:	ldr	w0, [x0]
  dc:	cmp	w0, #0x4
  e0:	b.eq	ec <ctf_pread+0x70>  // b.none
  e4:	ldr	x0, [sp, #56]
  e8:	b	164 <ctf_pread+0xe8>
  ec:	bl	0 <__errno_location>
  f0:	ldr	w0, [x0]
  f4:	cmp	w0, #0x4
  f8:	b.ne	100 <ctf_pread+0x84>  // b.any
  fc:	b	154 <ctf_pread+0xd8>
 100:	ldr	x0, [sp, #56]
 104:	ldr	x1, [sp, #72]
 108:	add	x0, x1, x0
 10c:	str	x0, [sp, #72]
 110:	ldr	x0, [sp, #56]
 114:	cmp	x0, #0x0
 118:	b.ne	124 <ctf_pread+0xa8>  // b.any
 11c:	ldr	x0, [sp, #72]
 120:	b	164 <ctf_pread+0xe8>
 124:	ldr	x1, [sp, #24]
 128:	ldr	x0, [sp, #56]
 12c:	sub	x0, x1, x0
 130:	str	x0, [sp, #24]
 134:	ldr	x1, [sp, #16]
 138:	ldr	x0, [sp, #56]
 13c:	add	x0, x1, x0
 140:	str	x0, [sp, #16]
 144:	ldr	x0, [sp, #56]
 148:	ldr	x1, [sp, #64]
 14c:	add	x0, x1, x0
 150:	str	x0, [sp, #64]
 154:	ldr	x0, [sp, #24]
 158:	cmp	x0, #0x0
 15c:	b.gt	a4 <ctf_pread+0x28>
 160:	ldr	x0, [sp, #72]
 164:	ldp	x29, x30, [sp], #80
 168:	ret

000000000000016c <ctf_strerror>:
 16c:	stp	x29, x30, [sp, #-32]!
 170:	mov	x29, sp
 174:	str	w0, [sp, #28]
 178:	ldr	w0, [sp, #28]
 17c:	bl	0 <strerror>
 180:	ldp	x29, x30, [sp], #32
 184:	ret

0000000000000188 <ctf_version>:
 188:	stp	x29, x30, [sp, #-32]!
 18c:	mov	x29, sp
 190:	str	w0, [sp, #28]
 194:	ldr	w0, [sp, #28]
 198:	cmp	w0, #0x0
 19c:	b.ge	1b8 <ctf_version+0x30>  // b.tcont
 1a0:	bl	0 <__errno_location>
 1a4:	mov	x1, x0
 1a8:	mov	w0, #0x16                  	// #22
 1ac:	str	w0, [x1]
 1b0:	mov	w0, #0xffffffff            	// #-1
 1b4:	b	214 <ctf_version+0x8c>
 1b8:	ldr	w0, [sp, #28]
 1bc:	cmp	w0, #0x0
 1c0:	b.le	208 <ctf_version+0x80>
 1c4:	ldr	w0, [sp, #28]
 1c8:	cmp	w0, #0x4
 1cc:	b.eq	1e8 <ctf_version+0x60>  // b.none
 1d0:	bl	0 <__errno_location>
 1d4:	mov	x1, x0
 1d8:	mov	w0, #0x5f                  	// #95
 1dc:	str	w0, [x1]
 1e0:	mov	w0, #0xffffffff            	// #-1
 1e4:	b	214 <ctf_version+0x8c>
 1e8:	ldr	w1, [sp, #28]
 1ec:	adrp	x0, 0 <ctf_mmap>
 1f0:	add	x0, x0, #0x0
 1f4:	bl	2c8 <ctf_dprintf>
 1f8:	adrp	x0, 0 <ctf_mmap>
 1fc:	add	x0, x0, #0x0
 200:	ldr	w1, [sp, #28]
 204:	str	w1, [x0]
 208:	adrp	x0, 0 <ctf_mmap>
 20c:	add	x0, x0, #0x0
 210:	ldr	w0, [x0]
 214:	ldp	x29, x30, [sp], #32
 218:	ret

000000000000021c <libctf_init_debug>:
 21c:	stp	x29, x30, [sp, #-16]!
 220:	mov	x29, sp
 224:	adrp	x0, 0 <ctf_mmap>
 228:	add	x0, x0, #0x0
 22c:	ldr	w0, [x0]
 230:	cmp	w0, #0x0
 234:	b.ne	270 <libctf_init_debug+0x54>  // b.any
 238:	adrp	x0, 0 <ctf_mmap>
 23c:	add	x0, x0, #0x0
 240:	bl	0 <getenv>
 244:	cmp	x0, #0x0
 248:	cset	w0, ne  // ne = any
 24c:	and	w0, w0, #0xff
 250:	mov	w1, w0
 254:	adrp	x0, 0 <ctf_mmap>
 258:	add	x0, x0, #0x0
 25c:	str	w1, [x0]
 260:	adrp	x0, 0 <ctf_mmap>
 264:	add	x0, x0, #0x0
 268:	mov	w1, #0x1                   	// #1
 26c:	str	w1, [x0]
 270:	nop
 274:	ldp	x29, x30, [sp], #16
 278:	ret

000000000000027c <ctf_setdebug>:
 27c:	stp	x29, x30, [sp, #-32]!
 280:	mov	x29, sp
 284:	str	w0, [sp, #28]
 288:	bl	21c <libctf_init_debug>
 28c:	adrp	x0, 0 <ctf_mmap>
 290:	add	x0, x0, #0x0
 294:	ldr	w1, [sp, #28]
 298:	str	w1, [x0]
 29c:	ldr	w1, [sp, #28]
 2a0:	adrp	x0, 0 <ctf_mmap>
 2a4:	add	x0, x0, #0x0
 2a8:	bl	2c8 <ctf_dprintf>
 2ac:	nop
 2b0:	ldp	x29, x30, [sp], #32
 2b4:	ret

00000000000002b8 <ctf_getdebug>:
 2b8:	adrp	x0, 0 <ctf_mmap>
 2bc:	add	x0, x0, #0x0
 2c0:	ldr	w0, [x0]
 2c4:	ret

00000000000002c8 <ctf_dprintf>:
 2c8:	stp	x29, x30, [sp, #-288]!
 2cc:	mov	x29, sp
 2d0:	str	x0, [sp, #56]
 2d4:	str	x1, [sp, #232]
 2d8:	str	x2, [sp, #240]
 2dc:	str	x3, [sp, #248]
 2e0:	str	x4, [sp, #256]
 2e4:	str	x5, [sp, #264]
 2e8:	str	x6, [sp, #272]
 2ec:	str	x7, [sp, #280]
 2f0:	str	q0, [sp, #96]
 2f4:	str	q1, [sp, #112]
 2f8:	str	q2, [sp, #128]
 2fc:	str	q3, [sp, #144]
 300:	str	q4, [sp, #160]
 304:	str	q5, [sp, #176]
 308:	str	q6, [sp, #192]
 30c:	str	q7, [sp, #208]
 310:	adrp	x0, 0 <ctf_mmap>
 314:	add	x0, x0, #0x0
 318:	ldr	w0, [x0]
 31c:	cmp	w0, #0x0
 320:	b.eq	3b8 <ctf_dprintf+0xf0>  // b.none
 324:	add	x0, sp, #0x120
 328:	str	x0, [sp, #64]
 32c:	add	x0, sp, #0x120
 330:	str	x0, [sp, #72]
 334:	add	x0, sp, #0xe0
 338:	str	x0, [sp, #80]
 33c:	mov	w0, #0xffffffc8            	// #-56
 340:	str	w0, [sp, #88]
 344:	mov	w0, #0xffffff80            	// #-128
 348:	str	w0, [sp, #92]
 34c:	adrp	x0, 0 <stdout>
 350:	add	x0, x0, #0x0
 354:	ldr	x0, [x0]
 358:	bl	0 <fflush>
 35c:	adrp	x0, 0 <stderr>
 360:	add	x0, x0, #0x0
 364:	ldr	x0, [x0]
 368:	mov	x3, x0
 36c:	mov	x2, #0xe                   	// #14
 370:	mov	x1, #0x1                   	// #1
 374:	adrp	x0, 0 <ctf_mmap>
 378:	add	x0, x0, #0x0
 37c:	bl	0 <fwrite>
 380:	adrp	x0, 0 <stderr>
 384:	add	x0, x0, #0x0
 388:	ldr	x4, [x0]
 38c:	add	x2, sp, #0x10
 390:	add	x3, sp, #0x40
 394:	ldp	x0, x1, [x3]
 398:	stp	x0, x1, [x2]
 39c:	ldp	x0, x1, [x3, #16]
 3a0:	stp	x0, x1, [x2, #16]
 3a4:	add	x0, sp, #0x10
 3a8:	mov	x2, x0
 3ac:	ldr	x1, [sp, #56]
 3b0:	mov	x0, x4
 3b4:	bl	0 <vfprintf>
 3b8:	nop
 3bc:	ldp	x29, x30, [sp], #288
 3c0:	ret

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_get_ctt_size>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	str	x3, [sp, #16]
      18:	ldr	x0, [sp, #40]
      1c:	ldr	x0, [x0]
      20:	ldr	x4, [x0, #24]
      24:	ldr	x3, [sp, #16]
      28:	ldr	x2, [sp, #24]
      2c:	ldr	x1, [sp, #32]
      30:	ldr	x0, [sp, #40]
      34:	blr	x4
      38:	ldp	x29, x30, [sp], #48
      3c:	ret

0000000000000040 <ctf_type_isparent>:
      40:	sub	sp, sp, #0x10
      44:	str	x0, [sp, #8]
      48:	str	x1, [sp]
      4c:	ldr	x0, [sp, #8]
      50:	ldr	w0, [x0, #544]
      54:	mov	w0, w0
      58:	ldr	x1, [sp]
      5c:	cmp	x1, x0
      60:	cset	w0, ls  // ls = plast
      64:	and	w0, w0, #0xff
      68:	add	sp, sp, #0x10
      6c:	ret

0000000000000070 <ctf_type_ischild>:
      70:	sub	sp, sp, #0x10
      74:	str	x0, [sp, #8]
      78:	str	x1, [sp]
      7c:	ldr	x0, [sp, #8]
      80:	ldr	w0, [x0, #544]
      84:	mov	w0, w0
      88:	ldr	x1, [sp]
      8c:	cmp	x1, x0
      90:	cset	w0, hi  // hi = pmore
      94:	and	w0, w0, #0xff
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ctf_member_iter>:
      a0:	stp	x29, x30, [sp, #-160]!
      a4:	mov	x29, sp
      a8:	str	x0, [sp, #40]
      ac:	str	x1, [sp, #32]
      b0:	str	x2, [sp, #24]
      b4:	str	x3, [sp, #16]
      b8:	ldr	x0, [sp, #40]
      bc:	str	x0, [sp, #120]
      c0:	ldr	x0, [sp, #40]
      c4:	ldr	x1, [sp, #32]
      c8:	bl	9b8 <ctf_type_resolve>
      cc:	str	x0, [sp, #32]
      d0:	ldr	x0, [sp, #32]
      d4:	cmn	x0, #0x1
      d8:	b.ne	e4 <ctf_member_iter+0x44>  // b.any
      dc:	mov	w0, #0xffffffff            	// #-1
      e0:	b	38c <ctf_member_iter+0x2ec>
      e4:	add	x0, sp, #0x28
      e8:	ldr	x1, [sp, #32]
      ec:	bl	0 <ctf_lookup_by_id>
      f0:	str	x0, [sp, #112]
      f4:	ldr	x0, [sp, #112]
      f8:	cmp	x0, #0x0
      fc:	b.ne	108 <ctf_member_iter+0x68>  // b.any
     100:	mov	w0, #0xffffffff            	// #-1
     104:	b	38c <ctf_member_iter+0x2ec>
     108:	ldr	x0, [sp, #40]
     10c:	add	x2, sp, #0x38
     110:	add	x1, sp, #0x40
     114:	mov	x3, x2
     118:	mov	x2, x1
     11c:	ldr	x1, [sp, #112]
     120:	bl	0 <ctf_get_ctt_size>
     124:	ldr	x0, [sp, #40]
     128:	ldr	x0, [x0]
     12c:	ldr	x1, [x0]
     130:	ldr	x0, [sp, #112]
     134:	ldr	w0, [x0, #4]
     138:	blr	x1
     13c:	str	w0, [sp, #108]
     140:	ldr	w0, [sp, #108]
     144:	cmp	w0, #0x6
     148:	b.eq	168 <ctf_member_iter+0xc8>  // b.none
     14c:	ldr	w0, [sp, #108]
     150:	cmp	w0, #0x7
     154:	b.eq	168 <ctf_member_iter+0xc8>  // b.none
     158:	mov	w1, #0x3fb                 	// #1019
     15c:	ldr	x0, [sp, #120]
     160:	bl	0 <ctf_set_errno>
     164:	b	38c <ctf_member_iter+0x2ec>
     168:	ldr	x0, [sp, #40]
     16c:	ldr	x1, [sp, #32]
     170:	bl	0 <ctf_dynamic_type>
     174:	str	x0, [sp, #96]
     178:	ldr	x0, [sp, #96]
     17c:	cmp	x0, #0x0
     180:	b.ne	31c <ctf_member_iter+0x27c>  // b.any
     184:	ldr	x1, [sp, #64]
     188:	mov	x0, #0x1fffffff            	// #536870911
     18c:	cmp	x1, x0
     190:	b.gt	24c <ctf_member_iter+0x1ac>
     194:	ldr	x0, [sp, #112]
     198:	ldr	x1, [sp, #56]
     19c:	add	x0, x0, x1
     1a0:	str	x0, [sp, #144]
     1a4:	ldr	x0, [sp, #40]
     1a8:	ldr	x0, [x0]
     1ac:	ldr	x1, [x0, #16]
     1b0:	ldr	x0, [sp, #112]
     1b4:	ldr	w0, [x0, #4]
     1b8:	blr	x1
     1bc:	str	w0, [sp, #156]
     1c0:	b	23c <ctf_member_iter+0x19c>
     1c4:	ldr	x2, [sp, #40]
     1c8:	ldr	x0, [sp, #144]
     1cc:	ldr	w0, [x0]
     1d0:	mov	w1, w0
     1d4:	mov	x0, x2
     1d8:	bl	0 <ctf_strptr>
     1dc:	str	x0, [sp, #72]
     1e0:	ldr	x0, [sp, #144]
     1e4:	ldr	w0, [x0, #8]
     1e8:	mov	w1, w0
     1ec:	ldr	x0, [sp, #144]
     1f0:	ldr	w0, [x0, #4]
     1f4:	mov	w0, w0
     1f8:	ldr	x4, [sp, #24]
     1fc:	ldr	x3, [sp, #16]
     200:	mov	x2, x0
     204:	ldr	x0, [sp, #72]
     208:	blr	x4
     20c:	str	w0, [sp, #92]
     210:	ldr	w0, [sp, #92]
     214:	cmp	w0, #0x0
     218:	b.eq	224 <ctf_member_iter+0x184>  // b.none
     21c:	ldr	w0, [sp, #92]
     220:	b	38c <ctf_member_iter+0x2ec>
     224:	ldr	w0, [sp, #156]
     228:	sub	w0, w0, #0x1
     22c:	str	w0, [sp, #156]
     230:	ldr	x0, [sp, #144]
     234:	add	x0, x0, #0xc
     238:	str	x0, [sp, #144]
     23c:	ldr	w0, [sp, #156]
     240:	cmp	w0, #0x0
     244:	b.ne	1c4 <ctf_member_iter+0x124>  // b.any
     248:	b	388 <ctf_member_iter+0x2e8>
     24c:	ldr	x0, [sp, #112]
     250:	ldr	x1, [sp, #56]
     254:	add	x0, x0, x1
     258:	str	x0, [sp, #136]
     25c:	ldr	x0, [sp, #40]
     260:	ldr	x0, [x0]
     264:	ldr	x1, [x0, #16]
     268:	ldr	x0, [sp, #112]
     26c:	ldr	w0, [x0, #4]
     270:	blr	x1
     274:	str	w0, [sp, #156]
     278:	b	30c <ctf_member_iter+0x26c>
     27c:	ldr	x2, [sp, #40]
     280:	ldr	x0, [sp, #136]
     284:	ldr	w0, [x0]
     288:	mov	w1, w0
     28c:	mov	x0, x2
     290:	bl	0 <ctf_strptr>
     294:	str	x0, [sp, #80]
     298:	ldr	x0, [sp, #136]
     29c:	ldr	w0, [x0, #8]
     2a0:	mov	w5, w0
     2a4:	ldr	x0, [sp, #136]
     2a8:	ldr	w0, [x0, #4]
     2ac:	mov	w0, w0
     2b0:	lsl	x1, x0, #32
     2b4:	ldr	x0, [sp, #136]
     2b8:	ldr	w0, [x0, #12]
     2bc:	mov	w0, w0
     2c0:	orr	x0, x1, x0
     2c4:	ldr	x4, [sp, #24]
     2c8:	ldr	x3, [sp, #16]
     2cc:	mov	x2, x0
     2d0:	mov	x1, x5
     2d4:	ldr	x0, [sp, #80]
     2d8:	blr	x4
     2dc:	str	w0, [sp, #92]
     2e0:	ldr	w0, [sp, #92]
     2e4:	cmp	w0, #0x0
     2e8:	b.eq	2f4 <ctf_member_iter+0x254>  // b.none
     2ec:	ldr	w0, [sp, #92]
     2f0:	b	38c <ctf_member_iter+0x2ec>
     2f4:	ldr	w0, [sp, #156]
     2f8:	sub	w0, w0, #0x1
     2fc:	str	w0, [sp, #156]
     300:	ldr	x0, [sp, #136]
     304:	add	x0, x0, #0x10
     308:	str	x0, [sp, #136]
     30c:	ldr	w0, [sp, #156]
     310:	cmp	w0, #0x0
     314:	b.ne	27c <ctf_member_iter+0x1dc>  // b.any
     318:	b	388 <ctf_member_iter+0x2e8>
     31c:	ldr	x0, [sp, #96]
     320:	ldr	x0, [x0, #56]
     324:	str	x0, [sp, #128]
     328:	b	37c <ctf_member_iter+0x2dc>
     32c:	ldr	x0, [sp, #128]
     330:	ldr	x5, [x0, #16]
     334:	ldr	x0, [sp, #128]
     338:	ldr	x1, [x0, #24]
     33c:	ldr	x0, [sp, #128]
     340:	ldr	x0, [x0, #32]
     344:	ldr	x4, [sp, #24]
     348:	ldr	x3, [sp, #16]
     34c:	mov	x2, x0
     350:	mov	x0, x5
     354:	blr	x4
     358:	str	w0, [sp, #92]
     35c:	ldr	w0, [sp, #92]
     360:	cmp	w0, #0x0
     364:	b.eq	370 <ctf_member_iter+0x2d0>  // b.none
     368:	ldr	w0, [sp, #92]
     36c:	b	38c <ctf_member_iter+0x2ec>
     370:	ldr	x0, [sp, #128]
     374:	ldr	x0, [x0, #8]
     378:	str	x0, [sp, #128]
     37c:	ldr	x0, [sp, #128]
     380:	cmp	x0, #0x0
     384:	b.ne	32c <ctf_member_iter+0x28c>  // b.any
     388:	mov	w0, #0x0                   	// #0
     38c:	ldp	x29, x30, [sp], #160
     390:	ret

0000000000000394 <ctf_enum_iter>:
     394:	stp	x29, x30, [sp, #-128]!
     398:	mov	x29, sp
     39c:	str	x0, [sp, #40]
     3a0:	str	x1, [sp, #32]
     3a4:	str	x2, [sp, #24]
     3a8:	str	x3, [sp, #16]
     3ac:	ldr	x0, [sp, #40]
     3b0:	str	x0, [sp, #96]
     3b4:	ldr	x0, [sp, #40]
     3b8:	ldr	x1, [sp, #32]
     3bc:	bl	af0 <ctf_type_resolve_unsliced>
     3c0:	str	x0, [sp, #32]
     3c4:	ldr	x0, [sp, #32]
     3c8:	cmn	x0, #0x1
     3cc:	b.ne	3d8 <ctf_enum_iter+0x44>  // b.any
     3d0:	mov	w0, #0xffffffff            	// #-1
     3d4:	b	570 <ctf_enum_iter+0x1dc>
     3d8:	add	x0, sp, #0x28
     3dc:	ldr	x1, [sp, #32]
     3e0:	bl	0 <ctf_lookup_by_id>
     3e4:	str	x0, [sp, #88]
     3e8:	ldr	x0, [sp, #88]
     3ec:	cmp	x0, #0x0
     3f0:	b.ne	3fc <ctf_enum_iter+0x68>  // b.any
     3f4:	mov	w0, #0xffffffff            	// #-1
     3f8:	b	570 <ctf_enum_iter+0x1dc>
     3fc:	ldr	x0, [sp, #40]
     400:	ldr	x0, [x0]
     404:	ldr	x1, [x0]
     408:	ldr	x0, [sp, #88]
     40c:	ldr	w0, [x0, #4]
     410:	blr	x1
     414:	cmp	w0, #0x8
     418:	b.eq	42c <ctf_enum_iter+0x98>  // b.none
     41c:	mov	w1, #0x3fc                 	// #1020
     420:	ldr	x0, [sp, #96]
     424:	bl	0 <ctf_set_errno>
     428:	b	570 <ctf_enum_iter+0x1dc>
     42c:	ldr	x0, [sp, #40]
     430:	add	x1, sp, #0x38
     434:	mov	x3, x1
     438:	mov	x2, #0x0                   	// #0
     43c:	ldr	x1, [sp, #88]
     440:	bl	0 <ctf_get_ctt_size>
     444:	ldr	x1, [sp, #32]
     448:	ldr	x0, [sp, #96]
     44c:	bl	0 <ctf_dynamic_type>
     450:	str	x0, [sp, #80]
     454:	ldr	x0, [sp, #80]
     458:	cmp	x0, #0x0
     45c:	b.ne	508 <ctf_enum_iter+0x174>  // b.any
     460:	ldr	x0, [sp, #88]
     464:	ldr	x1, [sp, #56]
     468:	add	x0, x0, x1
     46c:	str	x0, [sp, #120]
     470:	ldr	x0, [sp, #40]
     474:	ldr	x0, [x0]
     478:	ldr	x1, [x0, #16]
     47c:	ldr	x0, [sp, #88]
     480:	ldr	w0, [x0, #4]
     484:	blr	x1
     488:	str	w0, [sp, #116]
     48c:	b	4f8 <ctf_enum_iter+0x164>
     490:	ldr	x2, [sp, #40]
     494:	ldr	x0, [sp, #120]
     498:	ldr	w0, [x0]
     49c:	mov	w1, w0
     4a0:	mov	x0, x2
     4a4:	bl	0 <ctf_strptr>
     4a8:	str	x0, [sp, #64]
     4ac:	ldr	x0, [sp, #120]
     4b0:	ldr	w0, [x0, #4]
     4b4:	ldr	x3, [sp, #24]
     4b8:	ldr	x2, [sp, #16]
     4bc:	mov	w1, w0
     4c0:	ldr	x0, [sp, #64]
     4c4:	blr	x3
     4c8:	str	w0, [sp, #76]
     4cc:	ldr	w0, [sp, #76]
     4d0:	cmp	w0, #0x0
     4d4:	b.eq	4e0 <ctf_enum_iter+0x14c>  // b.none
     4d8:	ldr	w0, [sp, #76]
     4dc:	b	570 <ctf_enum_iter+0x1dc>
     4e0:	ldr	w0, [sp, #116]
     4e4:	sub	w0, w0, #0x1
     4e8:	str	w0, [sp, #116]
     4ec:	ldr	x0, [sp, #120]
     4f0:	add	x0, x0, #0x8
     4f4:	str	x0, [sp, #120]
     4f8:	ldr	w0, [sp, #116]
     4fc:	cmp	w0, #0x0
     500:	b.ne	490 <ctf_enum_iter+0xfc>  // b.any
     504:	b	56c <ctf_enum_iter+0x1d8>
     508:	ldr	x0, [sp, #80]
     50c:	ldr	x0, [x0, #56]
     510:	str	x0, [sp, #104]
     514:	b	560 <ctf_enum_iter+0x1cc>
     518:	ldr	x0, [sp, #104]
     51c:	ldr	x4, [x0, #16]
     520:	ldr	x0, [sp, #104]
     524:	ldr	w0, [x0, #40]
     528:	ldr	x3, [sp, #24]
     52c:	ldr	x2, [sp, #16]
     530:	mov	w1, w0
     534:	mov	x0, x4
     538:	blr	x3
     53c:	str	w0, [sp, #76]
     540:	ldr	w0, [sp, #76]
     544:	cmp	w0, #0x0
     548:	b.eq	554 <ctf_enum_iter+0x1c0>  // b.none
     54c:	ldr	w0, [sp, #76]
     550:	b	570 <ctf_enum_iter+0x1dc>
     554:	ldr	x0, [sp, #104]
     558:	ldr	x0, [x0, #8]
     55c:	str	x0, [sp, #104]
     560:	ldr	x0, [sp, #104]
     564:	cmp	x0, #0x0
     568:	b.ne	518 <ctf_enum_iter+0x184>  // b.any
     56c:	mov	w0, #0x0                   	// #0
     570:	ldp	x29, x30, [sp], #128
     574:	ret

0000000000000578 <ctf_type_iter>:
     578:	stp	x29, x30, [sp, #-96]!
     57c:	mov	x29, sp
     580:	str	x0, [sp, #40]
     584:	str	x1, [sp, #32]
     588:	str	x2, [sp, #24]
     58c:	ldr	x0, [sp, #40]
     590:	ldr	x0, [x0, #480]
     594:	str	x0, [sp, #80]
     598:	ldr	x0, [sp, #40]
     59c:	ldr	w0, [x0, #552]
     5a0:	and	w0, w0, #0x1
     5a4:	str	w0, [sp, #76]
     5a8:	mov	x0, #0x1                   	// #1
     5ac:	str	x0, [sp, #88]
     5b0:	b	6bc <ctf_type_iter+0x144>
     5b4:	ldr	x0, [sp, #40]
     5b8:	ldr	w0, [x0, #552]
     5bc:	and	w0, w0, #0x2
     5c0:	cmp	w0, #0x0
     5c4:	b.eq	610 <ctf_type_iter+0x98>  // b.none
     5c8:	ldr	x0, [sp, #40]
     5cc:	ldr	w0, [x0, #552]
     5d0:	and	w0, w0, #0x1
     5d4:	cmp	w0, #0x0
     5d8:	b.eq	5f8 <ctf_type_iter+0x80>  // b.none
     5dc:	ldr	x0, [sp, #40]
     5e0:	ldr	w0, [x0, #544]
     5e4:	add	w0, w0, #0x1
     5e8:	mov	w1, w0
     5ec:	ldr	x0, [sp, #88]
     5f0:	orr	x0, x1, x0
     5f4:	b	5fc <ctf_type_iter+0x84>
     5f8:	ldr	x0, [sp, #88]
     5fc:	mov	x1, x0
     600:	ldr	x0, [sp, #40]
     604:	bl	0 <ctf_dtd_lookup>
     608:	add	x0, x0, #0x18
     60c:	b	63c <ctf_type_iter+0xc4>
     610:	ldr	x0, [sp, #40]
     614:	ldr	x0, [x0, #408]
     618:	mov	x2, x0
     61c:	ldr	x0, [sp, #40]
     620:	ldr	x1, [x0, #440]
     624:	ldr	x0, [sp, #88]
     628:	lsl	x0, x0, #2
     62c:	add	x0, x1, x0
     630:	ldr	w0, [x0]
     634:	mov	w0, w0
     638:	add	x0, x2, x0
     63c:	str	x0, [sp, #64]
     640:	ldr	x0, [sp, #40]
     644:	ldr	x0, [x0]
     648:	ldr	x1, [x0, #8]
     64c:	ldr	x0, [sp, #64]
     650:	ldr	w0, [x0, #4]
     654:	blr	x1
     658:	cmp	w0, #0x0
     65c:	b.eq	6b0 <ctf_type_iter+0x138>  // b.none
     660:	ldr	w0, [sp, #76]
     664:	cmp	w0, #0x0
     668:	b.eq	688 <ctf_type_iter+0x110>  // b.none
     66c:	ldr	x0, [sp, #40]
     670:	ldr	w0, [x0, #544]
     674:	add	w0, w0, #0x1
     678:	mov	w1, w0
     67c:	ldr	x0, [sp, #88]
     680:	orr	x0, x1, x0
     684:	b	68c <ctf_type_iter+0x114>
     688:	ldr	x0, [sp, #88]
     68c:	ldr	x2, [sp, #32]
     690:	ldr	x1, [sp, #24]
     694:	blr	x2
     698:	str	w0, [sp, #60]
     69c:	ldr	w0, [sp, #60]
     6a0:	cmp	w0, #0x0
     6a4:	b.eq	6b0 <ctf_type_iter+0x138>  // b.none
     6a8:	ldr	w0, [sp, #60]
     6ac:	b	6d0 <ctf_type_iter+0x158>
     6b0:	ldr	x0, [sp, #88]
     6b4:	add	x0, x0, #0x1
     6b8:	str	x0, [sp, #88]
     6bc:	ldr	x1, [sp, #88]
     6c0:	ldr	x0, [sp, #80]
     6c4:	cmp	x1, x0
     6c8:	b.ls	5b4 <ctf_type_iter+0x3c>  // b.plast
     6cc:	mov	w0, #0x0                   	// #0
     6d0:	ldp	x29, x30, [sp], #96
     6d4:	ret

00000000000006d8 <ctf_type_iter_all>:
     6d8:	stp	x29, x30, [sp, #-112]!
     6dc:	mov	x29, sp
     6e0:	str	x19, [sp, #16]
     6e4:	str	x0, [sp, #56]
     6e8:	str	x1, [sp, #48]
     6ec:	str	x2, [sp, #40]
     6f0:	ldr	x0, [sp, #56]
     6f4:	ldr	x0, [x0, #480]
     6f8:	str	x0, [sp, #96]
     6fc:	ldr	x0, [sp, #56]
     700:	ldr	w0, [x0, #552]
     704:	and	w0, w0, #0x1
     708:	str	w0, [sp, #92]
     70c:	mov	x0, #0x1                   	// #1
     710:	str	x0, [sp, #104]
     714:	b	838 <ctf_type_iter_all+0x160>
     718:	ldr	x0, [sp, #56]
     71c:	ldr	w0, [x0, #552]
     720:	and	w0, w0, #0x2
     724:	cmp	w0, #0x0
     728:	b.eq	774 <ctf_type_iter_all+0x9c>  // b.none
     72c:	ldr	x0, [sp, #56]
     730:	ldr	w0, [x0, #552]
     734:	and	w0, w0, #0x1
     738:	cmp	w0, #0x0
     73c:	b.eq	75c <ctf_type_iter_all+0x84>  // b.none
     740:	ldr	x0, [sp, #56]
     744:	ldr	w0, [x0, #544]
     748:	add	w0, w0, #0x1
     74c:	mov	w1, w0
     750:	ldr	x0, [sp, #104]
     754:	orr	x0, x1, x0
     758:	b	760 <ctf_type_iter_all+0x88>
     75c:	ldr	x0, [sp, #104]
     760:	mov	x1, x0
     764:	ldr	x0, [sp, #56]
     768:	bl	0 <ctf_dtd_lookup>
     76c:	add	x0, x0, #0x18
     770:	b	7a0 <ctf_type_iter_all+0xc8>
     774:	ldr	x0, [sp, #56]
     778:	ldr	x0, [x0, #408]
     77c:	mov	x2, x0
     780:	ldr	x0, [sp, #56]
     784:	ldr	x1, [x0, #440]
     788:	ldr	x0, [sp, #104]
     78c:	lsl	x0, x0, #2
     790:	add	x0, x1, x0
     794:	ldr	w0, [x0]
     798:	mov	w0, w0
     79c:	add	x0, x2, x0
     7a0:	str	x0, [sp, #80]
     7a4:	ldr	w0, [sp, #92]
     7a8:	cmp	w0, #0x0
     7ac:	b.eq	7cc <ctf_type_iter_all+0xf4>  // b.none
     7b0:	ldr	x0, [sp, #56]
     7b4:	ldr	w0, [x0, #544]
     7b8:	add	w0, w0, #0x1
     7bc:	mov	w1, w0
     7c0:	ldr	x0, [sp, #104]
     7c4:	orr	x19, x1, x0
     7c8:	b	7d0 <ctf_type_iter_all+0xf8>
     7cc:	ldr	x19, [sp, #104]
     7d0:	ldr	x0, [sp, #56]
     7d4:	ldr	x0, [x0]
     7d8:	ldr	x1, [x0, #8]
     7dc:	ldr	x0, [sp, #80]
     7e0:	ldr	w0, [x0, #4]
     7e4:	blr	x1
     7e8:	cmp	w0, #0x0
     7ec:	cset	w0, ne  // ne = any
     7f0:	and	w0, w0, #0xff
     7f4:	ldr	x3, [sp, #48]
     7f8:	ldr	x2, [sp, #40]
     7fc:	mov	w1, w0
     800:	mov	x0, x19
     804:	blr	x3
     808:	cmp	w0, #0x0
     80c:	cset	w0, ne  // ne = any
     810:	and	w0, w0, #0xff
     814:	str	w0, [sp, #76]
     818:	ldr	w0, [sp, #76]
     81c:	cmp	w0, #0x0
     820:	b.eq	82c <ctf_type_iter_all+0x154>  // b.none
     824:	ldr	w0, [sp, #76]
     828:	b	84c <ctf_type_iter_all+0x174>
     82c:	ldr	x0, [sp, #104]
     830:	add	x0, x0, #0x1
     834:	str	x0, [sp, #104]
     838:	ldr	x1, [sp, #104]
     83c:	ldr	x0, [sp, #96]
     840:	cmp	x1, x0
     844:	b.ls	718 <ctf_type_iter_all+0x40>  // b.plast
     848:	mov	w0, #0x0                   	// #0
     84c:	ldr	x19, [sp, #16]
     850:	ldp	x29, x30, [sp], #112
     854:	ret

0000000000000858 <ctf_variable_iter>:
     858:	stp	x29, x30, [sp, #-80]!
     85c:	mov	x29, sp
     860:	str	x0, [sp, #40]
     864:	str	x1, [sp, #32]
     868:	str	x2, [sp, #24]
     86c:	ldr	x0, [sp, #40]
     870:	ldr	w0, [x0, #552]
     874:	and	w0, w0, #0x1
     878:	cmp	w0, #0x0
     87c:	b.eq	898 <ctf_variable_iter+0x40>  // b.none
     880:	ldr	x0, [sp, #40]
     884:	ldr	x0, [x0, #512]
     888:	cmp	x0, #0x0
     88c:	b.ne	898 <ctf_variable_iter+0x40>  // b.any
     890:	mov	w0, #0x3f3                 	// #1011
     894:	b	9b0 <ctf_variable_iter+0x158>
     898:	ldr	x0, [sp, #40]
     89c:	ldr	w0, [x0, #552]
     8a0:	and	w0, w0, #0x2
     8a4:	cmp	w0, #0x0
     8a8:	b.ne	948 <ctf_variable_iter+0xf0>  // b.any
     8ac:	str	xzr, [sp, #72]
     8b0:	b	930 <ctf_variable_iter+0xd8>
     8b4:	ldr	x0, [sp, #40]
     8b8:	ldr	x1, [x0, #464]
     8bc:	ldr	x0, [sp, #72]
     8c0:	lsl	x0, x0, #3
     8c4:	add	x0, x1, x0
     8c8:	ldr	w0, [x0]
     8cc:	mov	w1, w0
     8d0:	ldr	x0, [sp, #40]
     8d4:	bl	0 <ctf_strptr>
     8d8:	mov	x4, x0
     8dc:	ldr	x0, [sp, #40]
     8e0:	ldr	x1, [x0, #464]
     8e4:	ldr	x0, [sp, #72]
     8e8:	lsl	x0, x0, #3
     8ec:	add	x0, x1, x0
     8f0:	ldr	w0, [x0, #4]
     8f4:	mov	w0, w0
     8f8:	ldr	x3, [sp, #32]
     8fc:	ldr	x2, [sp, #24]
     900:	mov	x1, x0
     904:	mov	x0, x4
     908:	blr	x3
     90c:	str	w0, [sp, #60]
     910:	ldr	w0, [sp, #60]
     914:	cmp	w0, #0x0
     918:	b.eq	924 <ctf_variable_iter+0xcc>  // b.none
     91c:	ldr	w0, [sp, #60]
     920:	b	9b0 <ctf_variable_iter+0x158>
     924:	ldr	x0, [sp, #72]
     928:	add	x0, x0, #0x1
     92c:	str	x0, [sp, #72]
     930:	ldr	x0, [sp, #40]
     934:	ldr	x0, [x0, #472]
     938:	ldr	x1, [sp, #72]
     93c:	cmp	x1, x0
     940:	b.cc	8b4 <ctf_variable_iter+0x5c>  // b.lo, b.ul, b.last
     944:	b	9ac <ctf_variable_iter+0x154>
     948:	ldr	x0, [sp, #40]
     94c:	ldr	x0, [x0, #608]
     950:	str	x0, [sp, #64]
     954:	b	9a0 <ctf_variable_iter+0x148>
     958:	ldr	x0, [sp, #64]
     95c:	ldr	x4, [x0, #16]
     960:	ldr	x0, [sp, #64]
     964:	ldr	x0, [x0, #24]
     968:	ldr	x3, [sp, #32]
     96c:	ldr	x2, [sp, #24]
     970:	mov	x1, x0
     974:	mov	x0, x4
     978:	blr	x3
     97c:	str	w0, [sp, #60]
     980:	ldr	w0, [sp, #60]
     984:	cmp	w0, #0x0
     988:	b.eq	994 <ctf_variable_iter+0x13c>  // b.none
     98c:	ldr	w0, [sp, #60]
     990:	b	9b0 <ctf_variable_iter+0x158>
     994:	ldr	x0, [sp, #64]
     998:	ldr	x0, [x0, #8]
     99c:	str	x0, [sp, #64]
     9a0:	ldr	x0, [sp, #64]
     9a4:	cmp	x0, #0x0
     9a8:	b.ne	958 <ctf_variable_iter+0x100>  // b.any
     9ac:	mov	w0, #0x0                   	// #0
     9b0:	ldp	x29, x30, [sp], #80
     9b4:	ret

00000000000009b8 <ctf_type_resolve>:
     9b8:	stp	x29, x30, [sp, #-64]!
     9bc:	mov	x29, sp
     9c0:	str	x0, [sp, #24]
     9c4:	str	x1, [sp, #16]
     9c8:	ldr	x0, [sp, #16]
     9cc:	str	x0, [sp, #56]
     9d0:	ldr	x0, [sp, #16]
     9d4:	str	x0, [sp, #48]
     9d8:	ldr	x0, [sp, #24]
     9dc:	str	x0, [sp, #40]
     9e0:	ldr	x0, [sp, #16]
     9e4:	cmp	x0, #0x0
     9e8:	b.ne	ac8 <ctf_type_resolve+0x110>  // b.any
     9ec:	mov	w1, #0x41b                 	// #1051
     9f0:	ldr	x0, [sp, #40]
     9f4:	bl	0 <ctf_set_errno>
     9f8:	b	ae8 <ctf_type_resolve+0x130>
     9fc:	ldr	x0, [sp, #24]
     a00:	ldr	x0, [x0]
     a04:	ldr	x1, [x0]
     a08:	ldr	x0, [sp, #32]
     a0c:	ldr	w0, [x0, #4]
     a10:	blr	x1
     a14:	sub	w0, w0, #0xa
     a18:	cmp	w0, #0x3
     a1c:	b.hi	aa4 <ctf_type_resolve+0xec>  // b.pmore
     a20:	ldr	x0, [sp, #32]
     a24:	ldr	w0, [x0, #8]
     a28:	mov	w0, w0
     a2c:	ldr	x1, [sp, #16]
     a30:	cmp	x1, x0
     a34:	b.eq	a68 <ctf_type_resolve+0xb0>  // b.none
     a38:	ldr	x0, [sp, #32]
     a3c:	ldr	w0, [x0, #8]
     a40:	mov	w0, w0
     a44:	ldr	x1, [sp, #48]
     a48:	cmp	x1, x0
     a4c:	b.eq	a68 <ctf_type_resolve+0xb0>  // b.none
     a50:	ldr	x0, [sp, #32]
     a54:	ldr	w0, [x0, #8]
     a58:	mov	w0, w0
     a5c:	ldr	x1, [sp, #56]
     a60:	cmp	x1, x0
     a64:	b.ne	a88 <ctf_type_resolve+0xd0>  // b.any
     a68:	ldr	x1, [sp, #48]
     a6c:	adrp	x0, 0 <ctf_get_ctt_size>
     a70:	add	x0, x0, #0x0
     a74:	bl	0 <ctf_dprintf>
     a78:	mov	w1, #0x3ef                 	// #1007
     a7c:	ldr	x0, [sp, #40]
     a80:	bl	0 <ctf_set_errno>
     a84:	b	ae8 <ctf_type_resolve+0x130>
     a88:	ldr	x0, [sp, #16]
     a8c:	str	x0, [sp, #56]
     a90:	ldr	x0, [sp, #32]
     a94:	ldr	w0, [x0, #8]
     a98:	mov	w0, w0
     a9c:	str	x0, [sp, #16]
     aa0:	b	aac <ctf_type_resolve+0xf4>
     aa4:	ldr	x0, [sp, #16]
     aa8:	b	ae8 <ctf_type_resolve+0x130>
     aac:	ldr	x0, [sp, #16]
     ab0:	cmp	x0, #0x0
     ab4:	b.ne	ac8 <ctf_type_resolve+0x110>  // b.any
     ab8:	mov	w1, #0x41b                 	// #1051
     abc:	ldr	x0, [sp, #40]
     ac0:	bl	0 <ctf_set_errno>
     ac4:	b	ae8 <ctf_type_resolve+0x130>
     ac8:	add	x0, sp, #0x18
     acc:	ldr	x1, [sp, #16]
     ad0:	bl	0 <ctf_lookup_by_id>
     ad4:	str	x0, [sp, #32]
     ad8:	ldr	x0, [sp, #32]
     adc:	cmp	x0, #0x0
     ae0:	b.ne	9fc <ctf_type_resolve+0x44>  // b.any
     ae4:	mov	x0, #0xffffffffffffffff    	// #-1
     ae8:	ldp	x29, x30, [sp], #64
     aec:	ret

0000000000000af0 <ctf_type_resolve_unsliced>:
     af0:	stp	x29, x30, [sp, #-48]!
     af4:	mov	x29, sp
     af8:	str	x0, [sp, #24]
     afc:	str	x1, [sp, #16]
     b00:	ldr	x0, [sp, #24]
     b04:	ldr	x1, [sp, #16]
     b08:	bl	9b8 <ctf_type_resolve>
     b0c:	str	x0, [sp, #16]
     b10:	ldr	x0, [sp, #16]
     b14:	cmn	x0, #0x1
     b18:	b.ne	b24 <ctf_type_resolve_unsliced+0x34>  // b.any
     b1c:	mov	x0, #0xffffffffffffffff    	// #-1
     b20:	b	b7c <ctf_type_resolve_unsliced+0x8c>
     b24:	add	x0, sp, #0x18
     b28:	ldr	x1, [sp, #16]
     b2c:	bl	0 <ctf_lookup_by_id>
     b30:	str	x0, [sp, #40]
     b34:	ldr	x0, [sp, #40]
     b38:	cmp	x0, #0x0
     b3c:	b.ne	b48 <ctf_type_resolve_unsliced+0x58>  // b.any
     b40:	mov	x0, #0xffffffffffffffff    	// #-1
     b44:	b	b7c <ctf_type_resolve_unsliced+0x8c>
     b48:	ldr	x0, [sp, #24]
     b4c:	ldr	x0, [x0]
     b50:	ldr	x1, [x0]
     b54:	ldr	x0, [sp, #40]
     b58:	ldr	w0, [x0, #4]
     b5c:	blr	x1
     b60:	cmp	w0, #0xe
     b64:	b.ne	b78 <ctf_type_resolve_unsliced+0x88>  // b.any
     b68:	ldr	x0, [sp, #24]
     b6c:	ldr	x1, [sp, #16]
     b70:	bl	173c <ctf_type_reference>
     b74:	b	b7c <ctf_type_resolve_unsliced+0x8c>
     b78:	ldr	x0, [sp, #16]
     b7c:	ldp	x29, x30, [sp], #48
     b80:	ret

0000000000000b84 <ctf_lookup_by_rawname>:
     b84:	stp	x29, x30, [sp, #-48]!
     b88:	mov	x29, sp
     b8c:	str	x0, [sp, #40]
     b90:	str	w1, [sp, #36]
     b94:	str	x2, [sp, #24]
     b98:	ldr	w1, [sp, #36]
     b9c:	ldr	x0, [sp, #40]
     ba0:	bl	0 <ctf_name_table>
     ba4:	ldr	x2, [sp, #24]
     ba8:	mov	x1, x0
     bac:	ldr	x0, [sp, #40]
     bb0:	bl	bbc <ctf_lookup_by_rawhash>
     bb4:	ldp	x29, x30, [sp], #48
     bb8:	ret

0000000000000bbc <ctf_lookup_by_rawhash>:
     bbc:	stp	x29, x30, [sp, #-64]!
     bc0:	mov	x29, sp
     bc4:	str	x0, [sp, #40]
     bc8:	str	x1, [sp, #32]
     bcc:	str	x2, [sp, #24]
     bd0:	ldr	x0, [sp, #40]
     bd4:	ldr	w0, [x0, #552]
     bd8:	and	w0, w0, #0x2
     bdc:	cmp	w0, #0x0
     be0:	b.eq	bfc <ctf_lookup_by_rawhash+0x40>  // b.none
     be4:	ldr	x0, [sp, #32]
     be8:	ldr	x0, [x0, #8]
     bec:	ldr	x1, [sp, #24]
     bf0:	bl	0 <ctf_dynhash_lookup>
     bf4:	str	x0, [sp, #56]
     bf8:	b	c14 <ctf_lookup_by_rawhash+0x58>
     bfc:	ldr	x0, [sp, #32]
     c00:	ldr	x0, [x0]
     c04:	ldr	x2, [sp, #24]
     c08:	ldr	x1, [sp, #40]
     c0c:	bl	0 <ctf_hash_lookup_type>
     c10:	str	x0, [sp, #56]
     c14:	ldr	x0, [sp, #56]
     c18:	ldp	x29, x30, [sp], #64
     c1c:	ret

0000000000000c20 <ctf_type_aname>:
     c20:	stp	x29, x30, [sp, #-208]!
     c24:	mov	x29, sp
     c28:	str	x0, [sp, #24]
     c2c:	str	x1, [sp, #16]
     c30:	ldr	x0, [sp, #24]
     c34:	cmp	x0, #0x0
     c38:	b.ne	c50 <ctf_type_aname+0x30>  // b.any
     c3c:	ldr	x0, [sp, #16]
     c40:	cmn	x0, #0x1
     c44:	b.ne	c50 <ctf_type_aname+0x30>  // b.any
     c48:	mov	x0, #0x0                   	// #0
     c4c:	b	104c <ctf_type_aname+0x42c>
     c50:	add	x0, sp, #0x30
     c54:	bl	0 <ctf_decl_init>
     c58:	add	x0, sp, #0x30
     c5c:	ldr	x2, [sp, #16]
     c60:	ldr	x1, [sp, #24]
     c64:	bl	0 <ctf_decl_push>
     c68:	ldr	w0, [sp, #144]
     c6c:	cmp	w0, #0x0
     c70:	b.eq	c94 <ctf_type_aname+0x74>  // b.none
     c74:	add	x0, sp, #0x30
     c78:	bl	0 <ctf_decl_fini>
     c7c:	ldr	w0, [sp, #144]
     c80:	mov	w1, w0
     c84:	ldr	x0, [sp, #24]
     c88:	bl	0 <ctf_set_errno>
     c8c:	mov	x0, #0x0                   	// #0
     c90:	b	104c <ctf_type_aname+0x42c>
     c94:	ldr	w0, [sp, #116]
     c98:	cmp	w0, #0x1
     c9c:	cset	w0, gt
     ca0:	and	w0, w0, #0xff
     ca4:	str	w0, [sp, #184]
     ca8:	ldr	w0, [sp, #120]
     cac:	cmp	w0, #0x2
     cb0:	cset	w0, gt
     cb4:	and	w0, w0, #0xff
     cb8:	str	w0, [sp, #180]
     cbc:	ldr	w0, [sp, #180]
     cc0:	cmp	w0, #0x0
     cc4:	b.ne	ce4 <ctf_type_aname+0xc4>  // b.any
     cc8:	ldr	w0, [sp, #184]
     ccc:	cmp	w0, #0x0
     cd0:	b.eq	cdc <ctf_type_aname+0xbc>  // b.none
     cd4:	mov	w0, #0x1                   	// #1
     cd8:	b	ce8 <ctf_type_aname+0xc8>
     cdc:	mov	w0, #0xffffffff            	// #-1
     ce0:	b	ce8 <ctf_type_aname+0xc8>
     ce4:	mov	w0, #0x2                   	// #2
     ce8:	str	w0, [sp, #176]
     cec:	ldr	w0, [sp, #184]
     cf0:	cmp	w0, #0x0
     cf4:	b.ne	d14 <ctf_type_aname+0xf4>  // b.any
     cf8:	ldr	w0, [sp, #180]
     cfc:	cmp	w0, #0x0
     d00:	b.eq	d0c <ctf_type_aname+0xec>  // b.none
     d04:	mov	w0, #0x2                   	// #2
     d08:	b	d18 <ctf_type_aname+0xf8>
     d0c:	mov	w0, #0xffffffff            	// #-1
     d10:	b	d18 <ctf_type_aname+0xf8>
     d14:	mov	w0, #0x1                   	// #1
     d18:	str	w0, [sp, #192]
     d1c:	mov	w0, #0x3                   	// #3
     d20:	str	w0, [sp, #188]
     d24:	str	wzr, [sp, #196]
     d28:	b	1010 <ctf_type_aname+0x3f0>
     d2c:	ldr	w0, [sp, #196]
     d30:	lsl	x0, x0, #4
     d34:	add	x1, sp, #0x38
     d38:	ldr	x0, [x1, x0]
     d3c:	str	x0, [sp, #200]
     d40:	b	fd4 <ctf_type_aname+0x3b4>
     d44:	ldr	x0, [sp, #24]
     d48:	str	x0, [sp, #40]
     d4c:	ldr	x0, [sp, #200]
     d50:	ldr	x1, [x0, #16]
     d54:	add	x0, sp, #0x28
     d58:	bl	0 <ctf_lookup_by_id>
     d5c:	str	x0, [sp, #160]
     d60:	ldr	x2, [sp, #40]
     d64:	ldr	x0, [sp, #160]
     d68:	ldr	w0, [x0]
     d6c:	mov	w1, w0
     d70:	mov	x0, x2
     d74:	bl	0 <ctf_strptr>
     d78:	str	x0, [sp, #152]
     d7c:	ldr	w0, [sp, #188]
     d80:	cmp	w0, #0x3
     d84:	b.eq	da8 <ctf_type_aname+0x188>  // b.none
     d88:	ldr	w0, [sp, #188]
     d8c:	cmp	w0, #0x4
     d90:	b.eq	da8 <ctf_type_aname+0x188>  // b.none
     d94:	add	x2, sp, #0x30
     d98:	adrp	x0, 0 <ctf_get_ctt_size>
     d9c:	add	x1, x0, #0x0
     da0:	mov	x0, x2
     da4:	bl	0 <ctf_decl_sprintf>
     da8:	ldr	w1, [sp, #192]
     dac:	ldr	w0, [sp, #196]
     db0:	cmp	w1, w0
     db4:	b.ne	dd4 <ctf_type_aname+0x1b4>  // b.any
     db8:	add	x2, sp, #0x30
     dbc:	adrp	x0, 0 <ctf_get_ctt_size>
     dc0:	add	x1, x0, #0x0
     dc4:	mov	x0, x2
     dc8:	bl	0 <ctf_decl_sprintf>
     dcc:	mov	w0, #0xffffffff            	// #-1
     dd0:	str	w0, [sp, #192]
     dd4:	ldr	x0, [sp, #200]
     dd8:	ldr	w0, [x0, #24]
     ddc:	cmp	w0, #0xe
     de0:	b.eq	fb8 <ctf_type_aname+0x398>  // b.none
     de4:	cmp	w0, #0xe
     de8:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     dec:	cmp	w0, #0xd
     df0:	b.eq	fa0 <ctf_type_aname+0x380>  // b.none
     df4:	cmp	w0, #0xd
     df8:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     dfc:	cmp	w0, #0xc
     e00:	b.eq	f88 <ctf_type_aname+0x368>  // b.none
     e04:	cmp	w0, #0xc
     e08:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e0c:	cmp	w0, #0xb
     e10:	b.eq	f70 <ctf_type_aname+0x350>  // b.none
     e14:	cmp	w0, #0xb
     e18:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e1c:	cmp	w0, #0xa
     e20:	b.eq	eac <ctf_type_aname+0x28c>  // b.none
     e24:	cmp	w0, #0xa
     e28:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e2c:	cmp	w0, #0x9
     e30:	b.eq	f1c <ctf_type_aname+0x2fc>  // b.none
     e34:	cmp	w0, #0x9
     e38:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e3c:	cmp	w0, #0x8
     e40:	b.eq	f54 <ctf_type_aname+0x334>  // b.none
     e44:	cmp	w0, #0x8
     e48:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e4c:	cmp	w0, #0x7
     e50:	b.eq	f38 <ctf_type_aname+0x318>  // b.none
     e54:	cmp	w0, #0x7
     e58:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e5c:	cmp	w0, #0x6
     e60:	b.eq	f1c <ctf_type_aname+0x2fc>  // b.none
     e64:	cmp	w0, #0x6
     e68:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e6c:	cmp	w0, #0x5
     e70:	b.eq	f04 <ctf_type_aname+0x2e4>  // b.none
     e74:	cmp	w0, #0x5
     e78:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e7c:	cmp	w0, #0x4
     e80:	b.eq	ee0 <ctf_type_aname+0x2c0>  // b.none
     e84:	cmp	w0, #0x4
     e88:	b.hi	fbc <ctf_type_aname+0x39c>  // b.pmore
     e8c:	cmp	w0, #0x2
     e90:	b.hi	ea0 <ctf_type_aname+0x280>  // b.pmore
     e94:	cmp	w0, #0x0
     e98:	b.ne	eac <ctf_type_aname+0x28c>  // b.any
     e9c:	b	fbc <ctf_type_aname+0x39c>
     ea0:	cmp	w0, #0x3
     ea4:	b.eq	ec8 <ctf_type_aname+0x2a8>  // b.none
     ea8:	b	fbc <ctf_type_aname+0x39c>
     eac:	add	x3, sp, #0x30
     eb0:	ldr	x2, [sp, #152]
     eb4:	adrp	x0, 0 <ctf_get_ctt_size>
     eb8:	add	x1, x0, #0x0
     ebc:	mov	x0, x3
     ec0:	bl	0 <ctf_decl_sprintf>
     ec4:	b	fbc <ctf_type_aname+0x39c>
     ec8:	add	x2, sp, #0x30
     ecc:	adrp	x0, 0 <ctf_get_ctt_size>
     ed0:	add	x1, x0, #0x0
     ed4:	mov	x0, x2
     ed8:	bl	0 <ctf_decl_sprintf>
     edc:	b	fbc <ctf_type_aname+0x39c>
     ee0:	ldr	x0, [sp, #200]
     ee4:	ldr	w0, [x0, #28]
     ee8:	add	x3, sp, #0x30
     eec:	mov	w2, w0
     ef0:	adrp	x0, 0 <ctf_get_ctt_size>
     ef4:	add	x1, x0, #0x0
     ef8:	mov	x0, x3
     efc:	bl	0 <ctf_decl_sprintf>
     f00:	b	fbc <ctf_type_aname+0x39c>
     f04:	add	x2, sp, #0x30
     f08:	adrp	x0, 0 <ctf_get_ctt_size>
     f0c:	add	x1, x0, #0x0
     f10:	mov	x0, x2
     f14:	bl	0 <ctf_decl_sprintf>
     f18:	b	fbc <ctf_type_aname+0x39c>
     f1c:	add	x3, sp, #0x30
     f20:	ldr	x2, [sp, #152]
     f24:	adrp	x0, 0 <ctf_get_ctt_size>
     f28:	add	x1, x0, #0x0
     f2c:	mov	x0, x3
     f30:	bl	0 <ctf_decl_sprintf>
     f34:	b	fbc <ctf_type_aname+0x39c>
     f38:	add	x3, sp, #0x30
     f3c:	ldr	x2, [sp, #152]
     f40:	adrp	x0, 0 <ctf_get_ctt_size>
     f44:	add	x1, x0, #0x0
     f48:	mov	x0, x3
     f4c:	bl	0 <ctf_decl_sprintf>
     f50:	b	fbc <ctf_type_aname+0x39c>
     f54:	add	x3, sp, #0x30
     f58:	ldr	x2, [sp, #152]
     f5c:	adrp	x0, 0 <ctf_get_ctt_size>
     f60:	add	x1, x0, #0x0
     f64:	mov	x0, x3
     f68:	bl	0 <ctf_decl_sprintf>
     f6c:	b	fbc <ctf_type_aname+0x39c>
     f70:	add	x2, sp, #0x30
     f74:	adrp	x0, 0 <ctf_get_ctt_size>
     f78:	add	x1, x0, #0x0
     f7c:	mov	x0, x2
     f80:	bl	0 <ctf_decl_sprintf>
     f84:	b	fbc <ctf_type_aname+0x39c>
     f88:	add	x2, sp, #0x30
     f8c:	adrp	x0, 0 <ctf_get_ctt_size>
     f90:	add	x1, x0, #0x0
     f94:	mov	x0, x2
     f98:	bl	0 <ctf_decl_sprintf>
     f9c:	b	fbc <ctf_type_aname+0x39c>
     fa0:	add	x2, sp, #0x30
     fa4:	adrp	x0, 0 <ctf_get_ctt_size>
     fa8:	add	x1, x0, #0x0
     fac:	mov	x0, x2
     fb0:	bl	0 <ctf_decl_sprintf>
     fb4:	b	fbc <ctf_type_aname+0x39c>
     fb8:	nop
     fbc:	ldr	x0, [sp, #200]
     fc0:	ldr	w0, [x0, #24]
     fc4:	str	w0, [sp, #188]
     fc8:	ldr	x0, [sp, #200]
     fcc:	ldr	x0, [x0, #8]
     fd0:	str	x0, [sp, #200]
     fd4:	ldr	x0, [sp, #200]
     fd8:	cmp	x0, #0x0
     fdc:	b.ne	d44 <ctf_type_aname+0x124>  // b.any
     fe0:	ldr	w1, [sp, #176]
     fe4:	ldr	w0, [sp, #196]
     fe8:	cmp	w1, w0
     fec:	b.ne	1004 <ctf_type_aname+0x3e4>  // b.any
     ff0:	add	x2, sp, #0x30
     ff4:	adrp	x0, 0 <ctf_get_ctt_size>
     ff8:	add	x1, x0, #0x0
     ffc:	mov	x0, x2
    1000:	bl	0 <ctf_decl_sprintf>
    1004:	ldr	w0, [sp, #196]
    1008:	add	w0, w0, #0x1
    100c:	str	w0, [sp, #196]
    1010:	ldr	w0, [sp, #196]
    1014:	cmp	w0, #0x3
    1018:	b.ls	d2c <ctf_type_aname+0x10c>  // b.plast
    101c:	ldr	w0, [sp, #148]
    1020:	cmp	w0, #0x0
    1024:	b.eq	1034 <ctf_type_aname+0x414>  // b.none
    1028:	mov	w1, #0xc                   	// #12
    102c:	ldr	x0, [sp, #24]
    1030:	bl	0 <ctf_set_errno>
    1034:	add	x0, sp, #0x30
    1038:	bl	0 <ctf_decl_buf>
    103c:	str	x0, [sp, #168]
    1040:	add	x0, sp, #0x30
    1044:	bl	0 <ctf_decl_fini>
    1048:	ldr	x0, [sp, #168]
    104c:	ldp	x29, x30, [sp], #208
    1050:	ret

0000000000001054 <ctf_type_lname>:
    1054:	stp	x29, x30, [sp, #-64]!
    1058:	mov	x29, sp
    105c:	str	x0, [sp, #40]
    1060:	str	x1, [sp, #32]
    1064:	str	x2, [sp, #24]
    1068:	str	x3, [sp, #16]
    106c:	ldr	x1, [sp, #32]
    1070:	ldr	x0, [sp, #40]
    1074:	bl	c20 <ctf_type_aname>
    1078:	str	x0, [sp, #56]
    107c:	ldr	x0, [sp, #56]
    1080:	cmp	x0, #0x0
    1084:	b.ne	1090 <ctf_type_lname+0x3c>  // b.any
    1088:	mov	x0, #0xffffffffffffffff    	// #-1
    108c:	b	10dc <ctf_type_lname+0x88>
    1090:	ldr	x0, [sp, #56]
    1094:	bl	0 <strlen>
    1098:	str	x0, [sp, #48]
    109c:	ldr	x3, [sp, #56]
    10a0:	adrp	x0, 0 <ctf_get_ctt_size>
    10a4:	add	x2, x0, #0x0
    10a8:	ldr	x1, [sp, #16]
    10ac:	ldr	x0, [sp, #24]
    10b0:	bl	0 <snprintf>
    10b4:	ldr	x0, [sp, #56]
    10b8:	bl	0 <free>
    10bc:	ldr	x1, [sp, #48]
    10c0:	ldr	x0, [sp, #16]
    10c4:	cmp	x1, x0
    10c8:	b.cc	10d8 <ctf_type_lname+0x84>  // b.lo, b.ul, b.last
    10cc:	mov	w1, #0x401                 	// #1025
    10d0:	ldr	x0, [sp, #40]
    10d4:	bl	0 <ctf_set_errno>
    10d8:	ldr	x0, [sp, #48]
    10dc:	ldp	x29, x30, [sp], #64
    10e0:	ret

00000000000010e4 <ctf_type_name>:
    10e4:	stp	x29, x30, [sp, #-64]!
    10e8:	mov	x29, sp
    10ec:	str	x0, [sp, #40]
    10f0:	str	x1, [sp, #32]
    10f4:	str	x2, [sp, #24]
    10f8:	str	x3, [sp, #16]
    10fc:	ldr	x3, [sp, #16]
    1100:	ldr	x2, [sp, #24]
    1104:	ldr	x1, [sp, #32]
    1108:	ldr	x0, [sp, #40]
    110c:	bl	1054 <ctf_type_lname>
    1110:	str	x0, [sp, #56]
    1114:	ldr	x0, [sp, #56]
    1118:	cmp	x0, #0x0
    111c:	b.lt	1138 <ctf_type_name+0x54>  // b.tstop
    1120:	ldr	x0, [sp, #56]
    1124:	ldr	x1, [sp, #16]
    1128:	cmp	x1, x0
    112c:	b.ls	1138 <ctf_type_name+0x54>  // b.plast
    1130:	ldr	x0, [sp, #24]
    1134:	b	113c <ctf_type_name+0x58>
    1138:	mov	x0, #0x0                   	// #0
    113c:	ldp	x29, x30, [sp], #64
    1140:	ret

0000000000001144 <ctf_type_aname_raw>:
    1144:	stp	x29, x30, [sp, #-48]!
    1148:	mov	x29, sp
    114c:	str	x0, [sp, #24]
    1150:	str	x1, [sp, #16]
    1154:	add	x0, sp, #0x18
    1158:	ldr	x1, [sp, #16]
    115c:	bl	0 <ctf_lookup_by_id>
    1160:	str	x0, [sp, #40]
    1164:	ldr	x0, [sp, #40]
    1168:	cmp	x0, #0x0
    116c:	b.ne	1178 <ctf_type_aname_raw+0x34>  // b.any
    1170:	mov	x0, #0x0                   	// #0
    1174:	b	11bc <ctf_type_aname_raw+0x78>
    1178:	ldr	x2, [sp, #24]
    117c:	ldr	x0, [sp, #40]
    1180:	ldr	w0, [x0]
    1184:	mov	w1, w0
    1188:	mov	x0, x2
    118c:	bl	0 <ctf_strraw>
    1190:	cmp	x0, #0x0
    1194:	b.eq	11b8 <ctf_type_aname_raw+0x74>  // b.none
    1198:	ldr	x2, [sp, #24]
    119c:	ldr	x0, [sp, #40]
    11a0:	ldr	w0, [x0]
    11a4:	mov	w1, w0
    11a8:	mov	x0, x2
    11ac:	bl	0 <ctf_strraw>
    11b0:	bl	0 <strdup>
    11b4:	b	11bc <ctf_type_aname_raw+0x78>
    11b8:	mov	x0, #0x0                   	// #0
    11bc:	ldp	x29, x30, [sp], #48
    11c0:	ret

00000000000011c4 <ctf_type_size>:
    11c4:	stp	x29, x30, [sp, #-80]!
    11c8:	mov	x29, sp
    11cc:	str	x0, [sp, #24]
    11d0:	str	x1, [sp, #16]
    11d4:	ldr	x0, [sp, #24]
    11d8:	ldr	x1, [sp, #16]
    11dc:	bl	9b8 <ctf_type_resolve>
    11e0:	str	x0, [sp, #16]
    11e4:	ldr	x0, [sp, #16]
    11e8:	cmn	x0, #0x1
    11ec:	b.ne	11f8 <ctf_type_size+0x34>  // b.any
    11f0:	mov	x0, #0xffffffffffffffff    	// #-1
    11f4:	b	1324 <ctf_type_size+0x160>
    11f8:	add	x0, sp, #0x18
    11fc:	ldr	x1, [sp, #16]
    1200:	bl	0 <ctf_lookup_by_id>
    1204:	str	x0, [sp, #72]
    1208:	ldr	x0, [sp, #72]
    120c:	cmp	x0, #0x0
    1210:	b.ne	121c <ctf_type_size+0x58>  // b.any
    1214:	mov	x0, #0xffffffffffffffff    	// #-1
    1218:	b	1324 <ctf_type_size+0x160>
    121c:	ldr	x0, [sp, #24]
    1220:	ldr	x0, [x0]
    1224:	ldr	x1, [x0]
    1228:	ldr	x0, [sp, #72]
    122c:	ldr	w0, [x0, #4]
    1230:	blr	x1
    1234:	cmp	w0, #0x8
    1238:	b.eq	1280 <ctf_type_size+0xbc>  // b.none
    123c:	cmp	w0, #0x8
    1240:	b.hi	1310 <ctf_type_size+0x14c>  // b.pmore
    1244:	cmp	w0, #0x5
    1248:	b.eq	1278 <ctf_type_size+0xb4>  // b.none
    124c:	cmp	w0, #0x5
    1250:	b.hi	1310 <ctf_type_size+0x14c>  // b.pmore
    1254:	cmp	w0, #0x3
    1258:	b.eq	1268 <ctf_type_size+0xa4>  // b.none
    125c:	cmp	w0, #0x4
    1260:	b.eq	1290 <ctf_type_size+0xcc>  // b.none
    1264:	b	1310 <ctf_type_size+0x14c>
    1268:	ldr	x0, [sp, #24]
    126c:	ldr	x0, [x0, #488]
    1270:	ldr	x0, [x0, #16]
    1274:	b	1324 <ctf_type_size+0x160>
    1278:	mov	x0, #0x0                   	// #0
    127c:	b	1324 <ctf_type_size+0x160>
    1280:	ldr	x0, [sp, #24]
    1284:	ldr	x0, [x0, #488]
    1288:	ldr	x0, [x0, #40]
    128c:	b	1324 <ctf_type_size+0x160>
    1290:	ldr	x0, [sp, #24]
    1294:	mov	x3, #0x0                   	// #0
    1298:	mov	x2, #0x0                   	// #0
    129c:	ldr	x1, [sp, #72]
    12a0:	bl	0 <ctf_get_ctt_size>
    12a4:	str	x0, [sp, #64]
    12a8:	ldr	x0, [sp, #64]
    12ac:	cmp	x0, #0x0
    12b0:	b.le	12bc <ctf_type_size+0xf8>
    12b4:	ldr	x0, [sp, #64]
    12b8:	b	1324 <ctf_type_size+0x160>
    12bc:	ldr	x0, [sp, #24]
    12c0:	add	x1, sp, #0x28
    12c4:	mov	x2, x1
    12c8:	ldr	x1, [sp, #16]
    12cc:	bl	2440 <ctf_array_info>
    12d0:	cmp	w0, #0x0
    12d4:	b.lt	12f4 <ctf_type_size+0x130>  // b.tstop
    12d8:	ldr	x0, [sp, #24]
    12dc:	ldr	x1, [sp, #40]
    12e0:	bl	11c4 <ctf_type_size>
    12e4:	str	x0, [sp, #64]
    12e8:	ldr	x0, [sp, #64]
    12ec:	cmp	x0, #0x0
    12f0:	b.ge	12fc <ctf_type_size+0x138>  // b.tcont
    12f4:	mov	x0, #0xffffffffffffffff    	// #-1
    12f8:	b	1324 <ctf_type_size+0x160>
    12fc:	ldr	w0, [sp, #56]
    1300:	mov	w1, w0
    1304:	ldr	x0, [sp, #64]
    1308:	mul	x0, x1, x0
    130c:	b	1324 <ctf_type_size+0x160>
    1310:	ldr	x0, [sp, #24]
    1314:	mov	x3, #0x0                   	// #0
    1318:	mov	x2, #0x0                   	// #0
    131c:	ldr	x1, [sp, #72]
    1320:	bl	0 <ctf_get_ctt_size>
    1324:	ldp	x29, x30, [sp], #80
    1328:	ret

000000000000132c <ctf_type_align>:
    132c:	stp	x29, x30, [sp, #-176]!
    1330:	mov	x29, sp
    1334:	str	x0, [sp, #24]
    1338:	str	x1, [sp, #16]
    133c:	ldr	x0, [sp, #24]
    1340:	str	x0, [sp, #128]
    1344:	ldr	x0, [sp, #24]
    1348:	ldr	x1, [sp, #16]
    134c:	bl	9b8 <ctf_type_resolve>
    1350:	str	x0, [sp, #16]
    1354:	ldr	x0, [sp, #16]
    1358:	cmn	x0, #0x1
    135c:	b.ne	1368 <ctf_type_align+0x3c>  // b.any
    1360:	mov	x0, #0xffffffffffffffff    	// #-1
    1364:	b	1660 <ctf_type_align+0x334>
    1368:	add	x0, sp, #0x18
    136c:	ldr	x1, [sp, #16]
    1370:	bl	0 <ctf_lookup_by_id>
    1374:	str	x0, [sp, #120]
    1378:	ldr	x0, [sp, #120]
    137c:	cmp	x0, #0x0
    1380:	b.ne	138c <ctf_type_align+0x60>  // b.any
    1384:	mov	x0, #0xffffffffffffffff    	// #-1
    1388:	b	1660 <ctf_type_align+0x334>
    138c:	ldr	x0, [sp, #24]
    1390:	ldr	x0, [x0]
    1394:	ldr	x1, [x0]
    1398:	ldr	x0, [sp, #120]
    139c:	ldr	w0, [x0, #4]
    13a0:	blr	x1
    13a4:	str	w0, [sp, #116]
    13a8:	ldr	w0, [sp, #116]
    13ac:	cmp	w0, #0x8
    13b0:	b.eq	163c <ctf_type_align+0x310>  // b.none
    13b4:	ldr	w0, [sp, #116]
    13b8:	cmp	w0, #0x8
    13bc:	b.gt	164c <ctf_type_align+0x320>
    13c0:	ldr	w0, [sp, #116]
    13c4:	cmp	w0, #0x7
    13c8:	b.gt	164c <ctf_type_align+0x320>
    13cc:	ldr	w0, [sp, #116]
    13d0:	cmp	w0, #0x6
    13d4:	b.ge	1450 <ctf_type_align+0x124>  // b.tcont
    13d8:	ldr	w0, [sp, #116]
    13dc:	cmp	w0, #0x5
    13e0:	b.eq	140c <ctf_type_align+0xe0>  // b.none
    13e4:	ldr	w0, [sp, #116]
    13e8:	cmp	w0, #0x5
    13ec:	b.gt	164c <ctf_type_align+0x320>
    13f0:	ldr	w0, [sp, #116]
    13f4:	cmp	w0, #0x3
    13f8:	b.eq	140c <ctf_type_align+0xe0>  // b.none
    13fc:	ldr	w0, [sp, #116]
    1400:	cmp	w0, #0x4
    1404:	b.eq	141c <ctf_type_align+0xf0>  // b.none
    1408:	b	164c <ctf_type_align+0x320>
    140c:	ldr	x0, [sp, #24]
    1410:	ldr	x0, [x0, #488]
    1414:	ldr	x0, [x0, #16]
    1418:	b	1660 <ctf_type_align+0x334>
    141c:	ldr	x0, [sp, #24]
    1420:	add	x1, sp, #0x30
    1424:	mov	x2, x1
    1428:	ldr	x1, [sp, #16]
    142c:	bl	2440 <ctf_array_info>
    1430:	cmp	w0, #0x0
    1434:	b.ge	1440 <ctf_type_align+0x114>  // b.tcont
    1438:	mov	x0, #0xffffffffffffffff    	// #-1
    143c:	b	1660 <ctf_type_align+0x334>
    1440:	ldr	x0, [sp, #24]
    1444:	ldr	x1, [sp, #48]
    1448:	bl	132c <ctf_type_align>
    144c:	b	1660 <ctf_type_align+0x334>
    1450:	str	xzr, [sp, #168]
    1454:	ldr	x1, [sp, #16]
    1458:	ldr	x0, [sp, #128]
    145c:	bl	0 <ctf_dynamic_type>
    1460:	str	x0, [sp, #104]
    1464:	ldr	x0, [sp, #104]
    1468:	cmp	x0, #0x0
    146c:	b.ne	15c4 <ctf_type_align+0x298>  // b.any
    1470:	ldr	x0, [sp, #24]
    1474:	ldr	x0, [x0]
    1478:	ldr	x1, [x0, #16]
    147c:	ldr	x0, [sp, #120]
    1480:	ldr	w0, [x0, #4]
    1484:	blr	x1
    1488:	str	w0, [sp, #164]
    148c:	ldr	x0, [sp, #24]
    1490:	add	x2, sp, #0x20
    1494:	add	x1, sp, #0x28
    1498:	mov	x3, x2
    149c:	mov	x2, x1
    14a0:	ldr	x1, [sp, #120]
    14a4:	bl	0 <ctf_get_ctt_size>
    14a8:	ldr	x0, [sp, #32]
    14ac:	mov	x1, x0
    14b0:	ldr	x0, [sp, #120]
    14b4:	add	x0, x0, x1
    14b8:	str	x0, [sp, #88]
    14bc:	ldr	w0, [sp, #116]
    14c0:	cmp	w0, #0x6
    14c4:	b.ne	14dc <ctf_type_align+0x1b0>  // b.any
    14c8:	ldr	w0, [sp, #164]
    14cc:	cmp	w0, #0x0
    14d0:	cset	w0, ne  // ne = any
    14d4:	and	w0, w0, #0xff
    14d8:	str	w0, [sp, #164]
    14dc:	ldr	x1, [sp, #40]
    14e0:	mov	x0, #0x1fffffff            	// #536870911
    14e4:	cmp	x1, x0
    14e8:	b.gt	1558 <ctf_type_align+0x22c>
    14ec:	ldr	x0, [sp, #88]
    14f0:	str	x0, [sp, #152]
    14f4:	b	1548 <ctf_type_align+0x21c>
    14f8:	ldr	x2, [sp, #24]
    14fc:	ldr	x0, [sp, #152]
    1500:	ldr	w0, [x0, #8]
    1504:	mov	w0, w0
    1508:	mov	x1, x0
    150c:	mov	x0, x2
    1510:	bl	132c <ctf_type_align>
    1514:	str	x0, [sp, #72]
    1518:	ldr	x0, [sp, #72]
    151c:	ldr	x2, [sp, #168]
    1520:	ldr	x1, [sp, #168]
    1524:	cmp	x2, x0
    1528:	csel	x0, x1, x0, cs  // cs = hs, nlast
    152c:	str	x0, [sp, #168]
    1530:	ldr	w0, [sp, #164]
    1534:	sub	w0, w0, #0x1
    1538:	str	w0, [sp, #164]
    153c:	ldr	x0, [sp, #152]
    1540:	add	x0, x0, #0xc
    1544:	str	x0, [sp, #152]
    1548:	ldr	w0, [sp, #164]
    154c:	cmp	w0, #0x0
    1550:	b.ne	14f8 <ctf_type_align+0x1cc>  // b.any
    1554:	b	1634 <ctf_type_align+0x308>
    1558:	ldr	x0, [sp, #88]
    155c:	str	x0, [sp, #144]
    1560:	b	15b4 <ctf_type_align+0x288>
    1564:	ldr	x2, [sp, #24]
    1568:	ldr	x0, [sp, #144]
    156c:	ldr	w0, [x0, #8]
    1570:	mov	w0, w0
    1574:	mov	x1, x0
    1578:	mov	x0, x2
    157c:	bl	132c <ctf_type_align>
    1580:	str	x0, [sp, #80]
    1584:	ldr	x0, [sp, #80]
    1588:	ldr	x2, [sp, #168]
    158c:	ldr	x1, [sp, #168]
    1590:	cmp	x2, x0
    1594:	csel	x0, x1, x0, cs  // cs = hs, nlast
    1598:	str	x0, [sp, #168]
    159c:	ldr	w0, [sp, #164]
    15a0:	sub	w0, w0, #0x1
    15a4:	str	w0, [sp, #164]
    15a8:	ldr	x0, [sp, #144]
    15ac:	add	x0, x0, #0x10
    15b0:	str	x0, [sp, #144]
    15b4:	ldr	w0, [sp, #164]
    15b8:	cmp	w0, #0x0
    15bc:	b.ne	1564 <ctf_type_align+0x238>  // b.any
    15c0:	b	1634 <ctf_type_align+0x308>
    15c4:	ldr	x0, [sp, #104]
    15c8:	ldr	x0, [x0, #56]
    15cc:	str	x0, [sp, #136]
    15d0:	b	1620 <ctf_type_align+0x2f4>
    15d4:	ldr	x2, [sp, #24]
    15d8:	ldr	x0, [sp, #136]
    15dc:	ldr	x0, [x0, #24]
    15e0:	mov	x1, x0
    15e4:	mov	x0, x2
    15e8:	bl	132c <ctf_type_align>
    15ec:	str	x0, [sp, #96]
    15f0:	ldr	x0, [sp, #96]
    15f4:	ldr	x2, [sp, #168]
    15f8:	ldr	x1, [sp, #168]
    15fc:	cmp	x2, x0
    1600:	csel	x0, x1, x0, cs  // cs = hs, nlast
    1604:	str	x0, [sp, #168]
    1608:	ldr	w0, [sp, #116]
    160c:	cmp	w0, #0x6
    1610:	b.eq	1630 <ctf_type_align+0x304>  // b.none
    1614:	ldr	x0, [sp, #136]
    1618:	ldr	x0, [x0, #8]
    161c:	str	x0, [sp, #136]
    1620:	ldr	x0, [sp, #136]
    1624:	cmp	x0, #0x0
    1628:	b.ne	15d4 <ctf_type_align+0x2a8>  // b.any
    162c:	b	1634 <ctf_type_align+0x308>
    1630:	nop
    1634:	ldr	x0, [sp, #168]
    1638:	b	1660 <ctf_type_align+0x334>
    163c:	ldr	x0, [sp, #24]
    1640:	ldr	x0, [x0, #488]
    1644:	ldr	x0, [x0, #40]
    1648:	b	1660 <ctf_type_align+0x334>
    164c:	ldr	x0, [sp, #24]
    1650:	mov	x3, #0x0                   	// #0
    1654:	mov	x2, #0x0                   	// #0
    1658:	ldr	x1, [sp, #120]
    165c:	bl	0 <ctf_get_ctt_size>
    1660:	ldp	x29, x30, [sp], #176
    1664:	ret

0000000000001668 <ctf_type_kind_unsliced>:
    1668:	stp	x29, x30, [sp, #-48]!
    166c:	mov	x29, sp
    1670:	str	x0, [sp, #24]
    1674:	str	x1, [sp, #16]
    1678:	add	x0, sp, #0x18
    167c:	ldr	x1, [sp, #16]
    1680:	bl	0 <ctf_lookup_by_id>
    1684:	str	x0, [sp, #40]
    1688:	ldr	x0, [sp, #40]
    168c:	cmp	x0, #0x0
    1690:	b.ne	169c <ctf_type_kind_unsliced+0x34>  // b.any
    1694:	mov	w0, #0xffffffff            	// #-1
    1698:	b	16b4 <ctf_type_kind_unsliced+0x4c>
    169c:	ldr	x0, [sp, #24]
    16a0:	ldr	x0, [x0]
    16a4:	ldr	x1, [x0]
    16a8:	ldr	x0, [sp, #40]
    16ac:	ldr	w0, [x0, #4]
    16b0:	blr	x1
    16b4:	ldp	x29, x30, [sp], #48
    16b8:	ret

00000000000016bc <ctf_type_kind>:
    16bc:	stp	x29, x30, [sp, #-48]!
    16c0:	mov	x29, sp
    16c4:	str	x0, [sp, #24]
    16c8:	str	x1, [sp, #16]
    16cc:	ldr	x1, [sp, #16]
    16d0:	ldr	x0, [sp, #24]
    16d4:	bl	1668 <ctf_type_kind_unsliced>
    16d8:	str	w0, [sp, #44]
    16dc:	ldr	w0, [sp, #44]
    16e0:	cmp	w0, #0x0
    16e4:	b.ge	16f0 <ctf_type_kind+0x34>  // b.tcont
    16e8:	mov	w0, #0xffffffff            	// #-1
    16ec:	b	1734 <ctf_type_kind+0x78>
    16f0:	ldr	w0, [sp, #44]
    16f4:	cmp	w0, #0xe
    16f8:	b.ne	1730 <ctf_type_kind+0x74>  // b.any
    16fc:	ldr	x1, [sp, #16]
    1700:	ldr	x0, [sp, #24]
    1704:	bl	173c <ctf_type_reference>
    1708:	str	x0, [sp, #16]
    170c:	ldr	x0, [sp, #16]
    1710:	cmn	x0, #0x1
    1714:	b.ne	1720 <ctf_type_kind+0x64>  // b.any
    1718:	mov	w0, #0xffffffff            	// #-1
    171c:	b	1734 <ctf_type_kind+0x78>
    1720:	ldr	x1, [sp, #16]
    1724:	ldr	x0, [sp, #24]
    1728:	bl	1668 <ctf_type_kind_unsliced>
    172c:	str	w0, [sp, #44]
    1730:	ldr	w0, [sp, #44]
    1734:	ldp	x29, x30, [sp], #48
    1738:	ret

000000000000173c <ctf_type_reference>:
    173c:	stp	x29, x30, [sp, #-64]!
    1740:	mov	x29, sp
    1744:	str	x0, [sp, #24]
    1748:	str	x1, [sp, #16]
    174c:	ldr	x0, [sp, #24]
    1750:	str	x0, [sp, #56]
    1754:	add	x0, sp, #0x18
    1758:	ldr	x1, [sp, #16]
    175c:	bl	0 <ctf_lookup_by_id>
    1760:	str	x0, [sp, #48]
    1764:	ldr	x0, [sp, #48]
    1768:	cmp	x0, #0x0
    176c:	b.ne	1778 <ctf_type_reference+0x3c>  // b.any
    1770:	mov	x0, #0xffffffffffffffff    	// #-1
    1774:	b	1810 <ctf_type_reference+0xd4>
    1778:	ldr	x0, [sp, #24]
    177c:	ldr	x0, [x0]
    1780:	ldr	x1, [x0]
    1784:	ldr	x0, [sp, #48]
    1788:	ldr	w0, [x0, #4]
    178c:	blr	x1
    1790:	cmp	w0, #0xe
    1794:	b.eq	17cc <ctf_type_reference+0x90>  // b.none
    1798:	cmp	w0, #0xe
    179c:	b.hi	1804 <ctf_type_reference+0xc8>  // b.pmore
    17a0:	cmp	w0, #0x3
    17a4:	b.eq	17bc <ctf_type_reference+0x80>  // b.none
    17a8:	cmp	w0, #0x3
    17ac:	b.cc	1804 <ctf_type_reference+0xc8>  // b.lo, b.ul, b.last
    17b0:	sub	w0, w0, #0xa
    17b4:	cmp	w0, #0x3
    17b8:	b.hi	1804 <ctf_type_reference+0xc8>  // b.pmore
    17bc:	ldr	x0, [sp, #48]
    17c0:	ldr	w0, [x0, #8]
    17c4:	mov	w0, w0
    17c8:	b	1810 <ctf_type_reference+0xd4>
    17cc:	ldr	x0, [sp, #24]
    17d0:	add	x1, sp, #0x20
    17d4:	mov	x3, x1
    17d8:	mov	x2, #0x0                   	// #0
    17dc:	ldr	x1, [sp, #48]
    17e0:	bl	0 <ctf_get_ctt_size>
    17e4:	ldr	x0, [sp, #48]
    17e8:	ldr	x1, [sp, #32]
    17ec:	add	x0, x0, x1
    17f0:	str	x0, [sp, #40]
    17f4:	ldr	x0, [sp, #40]
    17f8:	ldr	w0, [x0]
    17fc:	mov	w0, w0
    1800:	b	1810 <ctf_type_reference+0xd4>
    1804:	mov	w1, #0x400                 	// #1024
    1808:	ldr	x0, [sp, #56]
    180c:	bl	0 <ctf_set_errno>
    1810:	ldp	x29, x30, [sp], #64
    1814:	ret

0000000000001818 <ctf_type_pointer>:
    1818:	stp	x29, x30, [sp, #-48]!
    181c:	mov	x29, sp
    1820:	str	x0, [sp, #24]
    1824:	str	x1, [sp, #16]
    1828:	ldr	x0, [sp, #24]
    182c:	str	x0, [sp, #40]
    1830:	add	x0, sp, #0x18
    1834:	ldr	x1, [sp, #16]
    1838:	bl	0 <ctf_lookup_by_id>
    183c:	cmp	x0, #0x0
    1840:	b.ne	184c <ctf_type_pointer+0x34>  // b.any
    1844:	mov	x0, #0xffffffffffffffff    	// #-1
    1848:	b	1990 <ctf_type_pointer+0x178>
    184c:	ldr	x0, [sp, #24]
    1850:	ldr	x1, [x0, #448]
    1854:	ldr	x0, [sp, #24]
    1858:	ldr	w0, [x0, #544]
    185c:	mov	w2, w0
    1860:	ldr	x0, [sp, #16]
    1864:	and	x0, x2, x0
    1868:	lsl	x0, x0, #2
    186c:	add	x0, x1, x0
    1870:	ldr	w0, [x0]
    1874:	mov	w0, w0
    1878:	str	x0, [sp, #32]
    187c:	ldr	x0, [sp, #32]
    1880:	cmp	x0, #0x0
    1884:	b.eq	18c0 <ctf_type_pointer+0xa8>  // b.none
    1888:	ldr	x0, [sp, #24]
    188c:	ldr	w0, [x0, #552]
    1890:	and	w0, w0, #0x1
    1894:	cmp	w0, #0x0
    1898:	b.eq	18b8 <ctf_type_pointer+0xa0>  // b.none
    189c:	ldr	x0, [sp, #24]
    18a0:	ldr	w0, [x0, #544]
    18a4:	add	w0, w0, #0x1
    18a8:	mov	w1, w0
    18ac:	ldr	x0, [sp, #32]
    18b0:	orr	x0, x1, x0
    18b4:	b	1990 <ctf_type_pointer+0x178>
    18b8:	ldr	x0, [sp, #32]
    18bc:	b	1990 <ctf_type_pointer+0x178>
    18c0:	ldr	x0, [sp, #24]
    18c4:	ldr	x1, [sp, #16]
    18c8:	bl	9b8 <ctf_type_resolve>
    18cc:	str	x0, [sp, #16]
    18d0:	ldr	x0, [sp, #16]
    18d4:	cmn	x0, #0x1
    18d8:	b.ne	18ec <ctf_type_pointer+0xd4>  // b.any
    18dc:	mov	w1, #0x402                 	// #1026
    18e0:	ldr	x0, [sp, #40]
    18e4:	bl	0 <ctf_set_errno>
    18e8:	b	1990 <ctf_type_pointer+0x178>
    18ec:	add	x0, sp, #0x18
    18f0:	ldr	x1, [sp, #16]
    18f4:	bl	0 <ctf_lookup_by_id>
    18f8:	cmp	x0, #0x0
    18fc:	b.ne	1910 <ctf_type_pointer+0xf8>  // b.any
    1900:	mov	w1, #0x402                 	// #1026
    1904:	ldr	x0, [sp, #40]
    1908:	bl	0 <ctf_set_errno>
    190c:	b	1990 <ctf_type_pointer+0x178>
    1910:	ldr	x0, [sp, #24]
    1914:	ldr	x1, [x0, #448]
    1918:	ldr	x0, [sp, #24]
    191c:	ldr	w0, [x0, #544]
    1920:	mov	w2, w0
    1924:	ldr	x0, [sp, #16]
    1928:	and	x0, x2, x0
    192c:	lsl	x0, x0, #2
    1930:	add	x0, x1, x0
    1934:	ldr	w0, [x0]
    1938:	mov	w0, w0
    193c:	str	x0, [sp, #32]
    1940:	ldr	x0, [sp, #32]
    1944:	cmp	x0, #0x0
    1948:	b.eq	1984 <ctf_type_pointer+0x16c>  // b.none
    194c:	ldr	x0, [sp, #24]
    1950:	ldr	w0, [x0, #552]
    1954:	and	w0, w0, #0x1
    1958:	cmp	w0, #0x0
    195c:	b.eq	197c <ctf_type_pointer+0x164>  // b.none
    1960:	ldr	x0, [sp, #24]
    1964:	ldr	w0, [x0, #544]
    1968:	add	w0, w0, #0x1
    196c:	mov	w1, w0
    1970:	ldr	x0, [sp, #32]
    1974:	orr	x0, x1, x0
    1978:	b	1990 <ctf_type_pointer+0x178>
    197c:	ldr	x0, [sp, #32]
    1980:	b	1990 <ctf_type_pointer+0x178>
    1984:	mov	w1, #0x402                 	// #1026
    1988:	ldr	x0, [sp, #40]
    198c:	bl	0 <ctf_set_errno>
    1990:	ldp	x29, x30, [sp], #48
    1994:	ret

0000000000001998 <ctf_type_encoding>:
    1998:	stp	x29, x30, [sp, #-144]!
    199c:	mov	x29, sp
    19a0:	str	x0, [sp, #40]
    19a4:	str	x1, [sp, #32]
    19a8:	str	x2, [sp, #24]
    19ac:	ldr	x0, [sp, #40]
    19b0:	str	x0, [sp, #136]
    19b4:	add	x0, sp, #0x28
    19b8:	ldr	x1, [sp, #32]
    19bc:	bl	0 <ctf_lookup_by_id>
    19c0:	str	x0, [sp, #128]
    19c4:	ldr	x0, [sp, #128]
    19c8:	cmp	x0, #0x0
    19cc:	b.ne	19d8 <ctf_type_encoding+0x40>  // b.any
    19d0:	mov	w0, #0xffffffff            	// #-1
    19d4:	b	1c44 <ctf_type_encoding+0x2ac>
    19d8:	ldr	x1, [sp, #32]
    19dc:	ldr	x0, [sp, #136]
    19e0:	bl	0 <ctf_dynamic_type>
    19e4:	str	x0, [sp, #120]
    19e8:	ldr	x0, [sp, #120]
    19ec:	cmp	x0, #0x0
    19f0:	b.eq	1ad4 <ctf_type_encoding+0x13c>  // b.none
    19f4:	ldr	x0, [sp, #40]
    19f8:	ldr	x0, [x0]
    19fc:	ldr	x1, [x0]
    1a00:	ldr	x0, [sp, #128]
    1a04:	ldr	w0, [x0, #4]
    1a08:	blr	x1
    1a0c:	cmp	w0, #0x2
    1a10:	b.hi	1a20 <ctf_type_encoding+0x88>  // b.pmore
    1a14:	cmp	w0, #0x0
    1a18:	b.ne	1a2c <ctf_type_encoding+0x94>  // b.any
    1a1c:	b	1abc <ctf_type_encoding+0x124>
    1a20:	cmp	w0, #0xe
    1a24:	b.eq	1a50 <ctf_type_encoding+0xb8>  // b.none
    1a28:	b	1abc <ctf_type_encoding+0x124>
    1a2c:	ldr	x2, [sp, #24]
    1a30:	ldr	x0, [sp, #120]
    1a34:	add	x1, x0, #0x30
    1a38:	mov	x0, x2
    1a3c:	ldr	x2, [x1]
    1a40:	str	x2, [x0]
    1a44:	ldr	w1, [x1, #8]
    1a48:	str	w1, [x0, #8]
    1a4c:	b	1acc <ctf_type_encoding+0x134>
    1a50:	ldr	x0, [sp, #120]
    1a54:	add	x0, x0, #0x30
    1a58:	str	x0, [sp, #96]
    1a5c:	ldr	x3, [sp, #40]
    1a60:	ldr	x0, [sp, #96]
    1a64:	ldr	w0, [x0]
    1a68:	mov	w0, w0
    1a6c:	add	x1, sp, #0x48
    1a70:	mov	x2, x1
    1a74:	mov	x1, x0
    1a78:	mov	x0, x3
    1a7c:	bl	1998 <ctf_type_encoding>
    1a80:	str	w0, [sp, #108]
    1a84:	ldr	w1, [sp, #72]
    1a88:	ldr	x0, [sp, #24]
    1a8c:	str	w1, [x0]
    1a90:	ldr	x0, [sp, #96]
    1a94:	ldrh	w0, [x0, #4]
    1a98:	mov	w1, w0
    1a9c:	ldr	x0, [sp, #24]
    1aa0:	str	w1, [x0, #4]
    1aa4:	ldr	x0, [sp, #96]
    1aa8:	ldrh	w0, [x0, #6]
    1aac:	mov	w1, w0
    1ab0:	ldr	x0, [sp, #24]
    1ab4:	str	w1, [x0, #8]
    1ab8:	b	1acc <ctf_type_encoding+0x134>
    1abc:	mov	w1, #0x3fe                 	// #1022
    1ac0:	ldr	x0, [sp, #136]
    1ac4:	bl	0 <ctf_set_errno>
    1ac8:	b	1c44 <ctf_type_encoding+0x2ac>
    1acc:	mov	w0, #0x0                   	// #0
    1ad0:	b	1c44 <ctf_type_encoding+0x2ac>
    1ad4:	ldr	x0, [sp, #40]
    1ad8:	add	x1, sp, #0x58
    1adc:	mov	x3, x1
    1ae0:	mov	x2, #0x0                   	// #0
    1ae4:	ldr	x1, [sp, #128]
    1ae8:	bl	0 <ctf_get_ctt_size>
    1aec:	ldr	x0, [sp, #40]
    1af0:	ldr	x0, [x0]
    1af4:	ldr	x1, [x0]
    1af8:	ldr	x0, [sp, #128]
    1afc:	ldr	w0, [x0, #4]
    1b00:	blr	x1
    1b04:	cmp	w0, #0xe
    1b08:	b.eq	1bc0 <ctf_type_encoding+0x228>  // b.none
    1b0c:	cmp	w0, #0xe
    1b10:	b.hi	1c30 <ctf_type_encoding+0x298>  // b.pmore
    1b14:	cmp	w0, #0x1
    1b18:	b.eq	1b28 <ctf_type_encoding+0x190>  // b.none
    1b1c:	cmp	w0, #0x2
    1b20:	b.eq	1b74 <ctf_type_encoding+0x1dc>  // b.none
    1b24:	b	1c30 <ctf_type_encoding+0x298>
    1b28:	ldr	x0, [sp, #128]
    1b2c:	ldr	x1, [sp, #88]
    1b30:	add	x0, x0, x1
    1b34:	ldr	w0, [x0]
    1b38:	str	w0, [sp, #108]
    1b3c:	ldr	w0, [sp, #108]
    1b40:	lsr	w1, w0, #24
    1b44:	ldr	x0, [sp, #24]
    1b48:	str	w1, [x0]
    1b4c:	ldr	w0, [sp, #108]
    1b50:	lsr	w0, w0, #16
    1b54:	and	w1, w0, #0xff
    1b58:	ldr	x0, [sp, #24]
    1b5c:	str	w1, [x0, #4]
    1b60:	ldr	w0, [sp, #108]
    1b64:	and	w1, w0, #0xffff
    1b68:	ldr	x0, [sp, #24]
    1b6c:	str	w1, [x0, #8]
    1b70:	b	1c40 <ctf_type_encoding+0x2a8>
    1b74:	ldr	x0, [sp, #128]
    1b78:	ldr	x1, [sp, #88]
    1b7c:	add	x0, x0, x1
    1b80:	ldr	w0, [x0]
    1b84:	str	w0, [sp, #108]
    1b88:	ldr	w0, [sp, #108]
    1b8c:	lsr	w1, w0, #24
    1b90:	ldr	x0, [sp, #24]
    1b94:	str	w1, [x0]
    1b98:	ldr	w0, [sp, #108]
    1b9c:	lsr	w0, w0, #16
    1ba0:	and	w1, w0, #0xff
    1ba4:	ldr	x0, [sp, #24]
    1ba8:	str	w1, [x0, #4]
    1bac:	ldr	w0, [sp, #108]
    1bb0:	and	w1, w0, #0xffff
    1bb4:	ldr	x0, [sp, #24]
    1bb8:	str	w1, [x0, #8]
    1bbc:	b	1c40 <ctf_type_encoding+0x2a8>
    1bc0:	ldr	x0, [sp, #128]
    1bc4:	ldr	x1, [sp, #88]
    1bc8:	add	x0, x0, x1
    1bcc:	str	x0, [sp, #112]
    1bd0:	ldr	x3, [sp, #40]
    1bd4:	ldr	x0, [sp, #112]
    1bd8:	ldr	w0, [x0]
    1bdc:	mov	w0, w0
    1be0:	add	x1, sp, #0x38
    1be4:	mov	x2, x1
    1be8:	mov	x1, x0
    1bec:	mov	x0, x3
    1bf0:	bl	1998 <ctf_type_encoding>
    1bf4:	str	w0, [sp, #108]
    1bf8:	ldr	w1, [sp, #56]
    1bfc:	ldr	x0, [sp, #24]
    1c00:	str	w1, [x0]
    1c04:	ldr	x0, [sp, #112]
    1c08:	ldrh	w0, [x0, #4]
    1c0c:	mov	w1, w0
    1c10:	ldr	x0, [sp, #24]
    1c14:	str	w1, [x0, #4]
    1c18:	ldr	x0, [sp, #112]
    1c1c:	ldrh	w0, [x0, #6]
    1c20:	mov	w1, w0
    1c24:	ldr	x0, [sp, #24]
    1c28:	str	w1, [x0, #8]
    1c2c:	b	1c40 <ctf_type_encoding+0x2a8>
    1c30:	mov	w1, #0x3fe                 	// #1022
    1c34:	ldr	x0, [sp, #136]
    1c38:	bl	0 <ctf_set_errno>
    1c3c:	b	1c44 <ctf_type_encoding+0x2ac>
    1c40:	mov	w0, #0x0                   	// #0
    1c44:	ldp	x29, x30, [sp], #144
    1c48:	ret

0000000000001c4c <ctf_type_cmp>:
    1c4c:	sub	sp, sp, #0x30
    1c50:	str	x0, [sp, #24]
    1c54:	str	x1, [sp, #16]
    1c58:	str	x2, [sp, #8]
    1c5c:	str	x3, [sp]
    1c60:	ldr	x1, [sp, #16]
    1c64:	ldr	x0, [sp]
    1c68:	cmp	x1, x0
    1c6c:	b.cs	1c7c <ctf_type_cmp+0x30>  // b.hs, b.nlast
    1c70:	mov	w0, #0xffffffff            	// #-1
    1c74:	str	w0, [sp, #44]
    1c78:	b	1c9c <ctf_type_cmp+0x50>
    1c7c:	ldr	x1, [sp, #16]
    1c80:	ldr	x0, [sp]
    1c84:	cmp	x1, x0
    1c88:	b.ls	1c98 <ctf_type_cmp+0x4c>  // b.plast
    1c8c:	mov	w0, #0x1                   	// #1
    1c90:	str	w0, [sp, #44]
    1c94:	b	1c9c <ctf_type_cmp+0x50>
    1c98:	str	wzr, [sp, #44]
    1c9c:	ldr	x1, [sp, #24]
    1ca0:	ldr	x0, [sp, #8]
    1ca4:	cmp	x1, x0
    1ca8:	b.ne	1cb4 <ctf_type_cmp+0x68>  // b.any
    1cac:	ldr	w0, [sp, #44]
    1cb0:	b	1d50 <ctf_type_cmp+0x104>
    1cb4:	ldr	x0, [sp, #24]
    1cb8:	ldr	w0, [x0, #544]
    1cbc:	mov	w0, w0
    1cc0:	ldr	x1, [sp, #16]
    1cc4:	cmp	x1, x0
    1cc8:	b.hi	1ce8 <ctf_type_cmp+0x9c>  // b.pmore
    1ccc:	ldr	x0, [sp, #24]
    1cd0:	ldr	x0, [x0, #512]
    1cd4:	cmp	x0, #0x0
    1cd8:	b.eq	1ce8 <ctf_type_cmp+0x9c>  // b.none
    1cdc:	ldr	x0, [sp, #24]
    1ce0:	ldr	x0, [x0, #512]
    1ce4:	str	x0, [sp, #24]
    1ce8:	ldr	x0, [sp, #8]
    1cec:	ldr	w0, [x0, #544]
    1cf0:	mov	w0, w0
    1cf4:	ldr	x1, [sp]
    1cf8:	cmp	x1, x0
    1cfc:	b.hi	1d1c <ctf_type_cmp+0xd0>  // b.pmore
    1d00:	ldr	x0, [sp, #8]
    1d04:	ldr	x0, [x0, #512]
    1d08:	cmp	x0, #0x0
    1d0c:	b.eq	1d1c <ctf_type_cmp+0xd0>  // b.none
    1d10:	ldr	x0, [sp, #8]
    1d14:	ldr	x0, [x0, #512]
    1d18:	str	x0, [sp, #8]
    1d1c:	ldr	x1, [sp, #24]
    1d20:	ldr	x0, [sp, #8]
    1d24:	cmp	x1, x0
    1d28:	b.cs	1d34 <ctf_type_cmp+0xe8>  // b.hs, b.nlast
    1d2c:	mov	w0, #0xffffffff            	// #-1
    1d30:	b	1d50 <ctf_type_cmp+0x104>
    1d34:	ldr	x1, [sp, #24]
    1d38:	ldr	x0, [sp, #8]
    1d3c:	cmp	x1, x0
    1d40:	b.ls	1d4c <ctf_type_cmp+0x100>  // b.plast
    1d44:	mov	w0, #0x1                   	// #1
    1d48:	b	1d50 <ctf_type_cmp+0x104>
    1d4c:	ldr	w0, [sp, #44]
    1d50:	add	sp, sp, #0x30
    1d54:	ret

0000000000001d58 <ctf_type_compat>:
    1d58:	stp	x29, x30, [sp, #-208]!
    1d5c:	mov	x29, sp
    1d60:	stp	x19, x20, [sp, #16]
    1d64:	str	x21, [sp, #32]
    1d68:	str	x0, [sp, #72]
    1d6c:	str	x1, [sp, #64]
    1d70:	str	x2, [sp, #56]
    1d74:	str	x3, [sp, #48]
    1d78:	str	wzr, [sp, #204]
    1d7c:	ldr	x0, [sp, #72]
    1d80:	ldr	x1, [sp, #56]
    1d84:	ldr	x3, [sp, #48]
    1d88:	mov	x2, x1
    1d8c:	ldr	x1, [sp, #64]
    1d90:	bl	1c4c <ctf_type_cmp>
    1d94:	cmp	w0, #0x0
    1d98:	b.ne	1da4 <ctf_type_compat+0x4c>  // b.any
    1d9c:	mov	w0, #0x1                   	// #1
    1da0:	b	214c <ctf_type_compat+0x3f4>
    1da4:	ldr	x0, [sp, #72]
    1da8:	ldr	x1, [sp, #64]
    1dac:	bl	9b8 <ctf_type_resolve>
    1db0:	str	x0, [sp, #64]
    1db4:	ldr	x0, [sp, #72]
    1db8:	ldr	x1, [sp, #64]
    1dbc:	bl	16bc <ctf_type_kind>
    1dc0:	str	w0, [sp, #200]
    1dc4:	ldr	x0, [sp, #56]
    1dc8:	ldr	x1, [sp, #48]
    1dcc:	bl	9b8 <ctf_type_resolve>
    1dd0:	str	x0, [sp, #48]
    1dd4:	ldr	x0, [sp, #56]
    1dd8:	ldr	x1, [sp, #48]
    1ddc:	bl	16bc <ctf_type_kind>
    1de0:	str	w0, [sp, #196]
    1de4:	add	x0, sp, #0x48
    1de8:	ldr	x1, [sp, #64]
    1dec:	bl	0 <ctf_lookup_by_id>
    1df0:	str	x0, [sp, #184]
    1df4:	add	x0, sp, #0x38
    1df8:	ldr	x1, [sp, #48]
    1dfc:	bl	0 <ctf_lookup_by_id>
    1e00:	str	x0, [sp, #176]
    1e04:	ldr	x0, [sp, #184]
    1e08:	cmp	x0, #0x0
    1e0c:	b.eq	1e6c <ctf_type_compat+0x114>  // b.none
    1e10:	ldr	x0, [sp, #176]
    1e14:	cmp	x0, #0x0
    1e18:	b.eq	1e6c <ctf_type_compat+0x114>  // b.none
    1e1c:	ldr	x2, [sp, #72]
    1e20:	ldr	x0, [sp, #184]
    1e24:	ldr	w0, [x0]
    1e28:	mov	w1, w0
    1e2c:	mov	x0, x2
    1e30:	bl	0 <ctf_strptr>
    1e34:	mov	x19, x0
    1e38:	ldr	x2, [sp, #56]
    1e3c:	ldr	x0, [sp, #176]
    1e40:	ldr	w0, [x0]
    1e44:	mov	w1, w0
    1e48:	mov	x0, x2
    1e4c:	bl	0 <ctf_strptr>
    1e50:	mov	x1, x0
    1e54:	mov	x0, x19
    1e58:	bl	0 <strcmp>
    1e5c:	cmp	w0, #0x0
    1e60:	cset	w0, eq  // eq = none
    1e64:	and	w0, w0, #0xff
    1e68:	str	w0, [sp, #204]
    1e6c:	ldr	w0, [sp, #200]
    1e70:	cmp	w0, #0x8
    1e74:	b.ne	1e84 <ctf_type_compat+0x12c>  // b.any
    1e78:	ldr	w0, [sp, #196]
    1e7c:	cmp	w0, #0x1
    1e80:	b.eq	1e9c <ctf_type_compat+0x144>  // b.none
    1e84:	ldr	w0, [sp, #196]
    1e88:	cmp	w0, #0x8
    1e8c:	b.ne	1ea4 <ctf_type_compat+0x14c>  // b.any
    1e90:	ldr	w0, [sp, #200]
    1e94:	cmp	w0, #0x1
    1e98:	b.ne	1ea4 <ctf_type_compat+0x14c>  // b.any
    1e9c:	mov	w0, #0x1                   	// #1
    1ea0:	b	214c <ctf_type_compat+0x3f4>
    1ea4:	ldr	w1, [sp, #200]
    1ea8:	ldr	w0, [sp, #196]
    1eac:	cmp	w1, w0
    1eb0:	b.eq	1ebc <ctf_type_compat+0x164>  // b.none
    1eb4:	mov	w0, #0x0                   	// #0
    1eb8:	b	214c <ctf_type_compat+0x3f4>
    1ebc:	ldr	w0, [sp, #200]
    1ec0:	cmp	w0, #0x9
    1ec4:	b.eq	2140 <ctf_type_compat+0x3e8>  // b.none
    1ec8:	ldr	w0, [sp, #200]
    1ecc:	cmp	w0, #0x9
    1ed0:	b.hi	2148 <ctf_type_compat+0x3f0>  // b.pmore
    1ed4:	ldr	w0, [sp, #200]
    1ed8:	cmp	w0, #0x8
    1edc:	b.eq	20d4 <ctf_type_compat+0x37c>  // b.none
    1ee0:	ldr	w0, [sp, #200]
    1ee4:	cmp	w0, #0x8
    1ee8:	b.hi	2148 <ctf_type_compat+0x3f0>  // b.pmore
    1eec:	ldr	w0, [sp, #200]
    1ef0:	cmp	w0, #0x7
    1ef4:	b.hi	2148 <ctf_type_compat+0x3f0>  // b.pmore
    1ef8:	ldr	w0, [sp, #200]
    1efc:	cmp	w0, #0x6
    1f00:	b.cs	2094 <ctf_type_compat+0x33c>  // b.hs, b.nlast
    1f04:	ldr	w0, [sp, #200]
    1f08:	cmp	w0, #0x4
    1f0c:	b.eq	2004 <ctf_type_compat+0x2ac>  // b.none
    1f10:	ldr	w0, [sp, #200]
    1f14:	cmp	w0, #0x4
    1f18:	b.hi	2148 <ctf_type_compat+0x3f0>  // b.pmore
    1f1c:	ldr	w0, [sp, #200]
    1f20:	cmp	w0, #0x2
    1f24:	b.hi	1f38 <ctf_type_compat+0x1e0>  // b.pmore
    1f28:	ldr	w0, [sp, #200]
    1f2c:	cmp	w0, #0x0
    1f30:	b.ne	1f48 <ctf_type_compat+0x1f0>  // b.any
    1f34:	b	2148 <ctf_type_compat+0x3f0>
    1f38:	ldr	w0, [sp, #200]
    1f3c:	cmp	w0, #0x3
    1f40:	b.eq	1fc8 <ctf_type_compat+0x270>  // b.none
    1f44:	b	2148 <ctf_type_compat+0x3f0>
    1f48:	add	x0, sp, #0x98
    1f4c:	mov	x2, #0xc                   	// #12
    1f50:	mov	w1, #0x0                   	// #0
    1f54:	bl	0 <memset>
    1f58:	add	x0, sp, #0x88
    1f5c:	mov	x2, #0xc                   	// #12
    1f60:	mov	w1, #0x0                   	// #0
    1f64:	bl	0 <memset>
    1f68:	ldr	x0, [sp, #72]
    1f6c:	add	x1, sp, #0x98
    1f70:	mov	x2, x1
    1f74:	ldr	x1, [sp, #64]
    1f78:	bl	1998 <ctf_type_encoding>
    1f7c:	cmp	w0, #0x0
    1f80:	b.ne	1fc0 <ctf_type_compat+0x268>  // b.any
    1f84:	ldr	x0, [sp, #56]
    1f88:	add	x1, sp, #0x88
    1f8c:	mov	x2, x1
    1f90:	ldr	x1, [sp, #48]
    1f94:	bl	1998 <ctf_type_encoding>
    1f98:	cmp	w0, #0x0
    1f9c:	b.ne	1fc0 <ctf_type_compat+0x268>  // b.any
    1fa0:	add	x1, sp, #0x88
    1fa4:	add	x0, sp, #0x98
    1fa8:	mov	x2, #0xc                   	// #12
    1fac:	bl	0 <memcmp>
    1fb0:	cmp	w0, #0x0
    1fb4:	b.ne	1fc0 <ctf_type_compat+0x268>  // b.any
    1fb8:	mov	w0, #0x1                   	// #1
    1fbc:	b	214c <ctf_type_compat+0x3f4>
    1fc0:	mov	w0, #0x0                   	// #0
    1fc4:	b	214c <ctf_type_compat+0x3f4>
    1fc8:	ldr	x19, [sp, #72]
    1fcc:	ldr	x0, [sp, #72]
    1fd0:	ldr	x1, [sp, #64]
    1fd4:	bl	173c <ctf_type_reference>
    1fd8:	mov	x21, x0
    1fdc:	ldr	x20, [sp, #56]
    1fe0:	ldr	x0, [sp, #56]
    1fe4:	ldr	x1, [sp, #48]
    1fe8:	bl	173c <ctf_type_reference>
    1fec:	mov	x3, x0
    1ff0:	mov	x2, x20
    1ff4:	mov	x1, x21
    1ff8:	mov	x0, x19
    1ffc:	bl	1d58 <ctf_type_compat>
    2000:	b	214c <ctf_type_compat+0x3f4>
    2004:	ldr	x0, [sp, #72]
    2008:	add	x1, sp, #0x70
    200c:	mov	x2, x1
    2010:	ldr	x1, [sp, #64]
    2014:	bl	2440 <ctf_array_info>
    2018:	cmp	w0, #0x0
    201c:	b.ne	208c <ctf_type_compat+0x334>  // b.any
    2020:	ldr	x0, [sp, #56]
    2024:	add	x1, sp, #0x58
    2028:	mov	x2, x1
    202c:	ldr	x1, [sp, #48]
    2030:	bl	2440 <ctf_array_info>
    2034:	cmp	w0, #0x0
    2038:	b.ne	208c <ctf_type_compat+0x334>  // b.any
    203c:	ldr	w1, [sp, #128]
    2040:	ldr	w0, [sp, #104]
    2044:	cmp	w1, w0
    2048:	b.ne	208c <ctf_type_compat+0x334>  // b.any
    204c:	ldr	x0, [sp, #72]
    2050:	ldr	x1, [sp, #112]
    2054:	ldr	x2, [sp, #56]
    2058:	ldr	x3, [sp, #88]
    205c:	bl	1d58 <ctf_type_compat>
    2060:	cmp	w0, #0x0
    2064:	b.eq	208c <ctf_type_compat+0x334>  // b.none
    2068:	ldr	x0, [sp, #72]
    206c:	ldr	x1, [sp, #120]
    2070:	ldr	x2, [sp, #56]
    2074:	ldr	x3, [sp, #96]
    2078:	bl	1d58 <ctf_type_compat>
    207c:	cmp	w0, #0x0
    2080:	b.eq	208c <ctf_type_compat+0x334>  // b.none
    2084:	mov	w0, #0x1                   	// #1
    2088:	b	214c <ctf_type_compat+0x3f4>
    208c:	mov	w0, #0x0                   	// #0
    2090:	b	214c <ctf_type_compat+0x3f4>
    2094:	ldr	w0, [sp, #204]
    2098:	cmp	w0, #0x0
    209c:	b.eq	20cc <ctf_type_compat+0x374>  // b.none
    20a0:	ldr	x0, [sp, #72]
    20a4:	ldr	x1, [sp, #64]
    20a8:	bl	11c4 <ctf_type_size>
    20ac:	mov	x19, x0
    20b0:	ldr	x0, [sp, #56]
    20b4:	ldr	x1, [sp, #48]
    20b8:	bl	11c4 <ctf_type_size>
    20bc:	cmp	x19, x0
    20c0:	b.ne	20cc <ctf_type_compat+0x374>  // b.any
    20c4:	mov	w0, #0x1                   	// #1
    20c8:	b	214c <ctf_type_compat+0x3f4>
    20cc:	mov	w0, #0x0                   	// #0
    20d0:	b	214c <ctf_type_compat+0x3f4>
    20d4:	ldr	x0, [sp, #72]
    20d8:	add	x1, sp, #0x98
    20dc:	mov	x2, x1
    20e0:	ldr	x1, [sp, #64]
    20e4:	bl	1998 <ctf_type_encoding>
    20e8:	str	w0, [sp, #172]
    20ec:	ldr	x0, [sp, #56]
    20f0:	add	x1, sp, #0x88
    20f4:	mov	x2, x1
    20f8:	ldr	x1, [sp, #48]
    20fc:	bl	1998 <ctf_type_encoding>
    2100:	str	w0, [sp, #168]
    2104:	ldr	w1, [sp, #172]
    2108:	ldr	w0, [sp, #168]
    210c:	cmp	w1, w0
    2110:	b.ne	2138 <ctf_type_compat+0x3e0>  // b.any
    2114:	ldr	w0, [sp, #172]
    2118:	cmp	w0, #0x0
    211c:	b.ne	2140 <ctf_type_compat+0x3e8>  // b.any
    2120:	add	x1, sp, #0x88
    2124:	add	x0, sp, #0x98
    2128:	mov	x2, #0xc                   	// #12
    212c:	bl	0 <memcmp>
    2130:	cmp	w0, #0x0
    2134:	b.eq	2140 <ctf_type_compat+0x3e8>  // b.none
    2138:	mov	w0, #0x0                   	// #0
    213c:	b	214c <ctf_type_compat+0x3f4>
    2140:	ldr	w0, [sp, #204]
    2144:	b	214c <ctf_type_compat+0x3f4>
    2148:	mov	w0, #0x0                   	// #0
    214c:	ldp	x19, x20, [sp, #16]
    2150:	ldr	x21, [sp, #32]
    2154:	ldp	x29, x30, [sp], #208
    2158:	ret

000000000000215c <ctf_member_info>:
    215c:	stp	x29, x30, [sp, #-128]!
    2160:	mov	x29, sp
    2164:	str	x0, [sp, #40]
    2168:	str	x1, [sp, #32]
    216c:	str	x2, [sp, #24]
    2170:	str	x3, [sp, #16]
    2174:	ldr	x0, [sp, #40]
    2178:	str	x0, [sp, #88]
    217c:	ldr	x0, [sp, #40]
    2180:	ldr	x1, [sp, #32]
    2184:	bl	9b8 <ctf_type_resolve>
    2188:	str	x0, [sp, #32]
    218c:	ldr	x0, [sp, #32]
    2190:	cmn	x0, #0x1
    2194:	b.ne	21a0 <ctf_member_info+0x44>  // b.any
    2198:	mov	w0, #0xffffffff            	// #-1
    219c:	b	2438 <ctf_member_info+0x2dc>
    21a0:	add	x0, sp, #0x28
    21a4:	ldr	x1, [sp, #32]
    21a8:	bl	0 <ctf_lookup_by_id>
    21ac:	str	x0, [sp, #80]
    21b0:	ldr	x0, [sp, #80]
    21b4:	cmp	x0, #0x0
    21b8:	b.ne	21c4 <ctf_member_info+0x68>  // b.any
    21bc:	mov	w0, #0xffffffff            	// #-1
    21c0:	b	2438 <ctf_member_info+0x2dc>
    21c4:	ldr	x0, [sp, #40]
    21c8:	add	x2, sp, #0x30
    21cc:	add	x1, sp, #0x38
    21d0:	mov	x3, x2
    21d4:	mov	x2, x1
    21d8:	ldr	x1, [sp, #80]
    21dc:	bl	0 <ctf_get_ctt_size>
    21e0:	ldr	x0, [sp, #40]
    21e4:	ldr	x0, [x0]
    21e8:	ldr	x1, [x0]
    21ec:	ldr	x0, [sp, #80]
    21f0:	ldr	w0, [x0, #4]
    21f4:	blr	x1
    21f8:	str	w0, [sp, #76]
    21fc:	ldr	w0, [sp, #76]
    2200:	cmp	w0, #0x6
    2204:	b.eq	2224 <ctf_member_info+0xc8>  // b.none
    2208:	ldr	w0, [sp, #76]
    220c:	cmp	w0, #0x7
    2210:	b.eq	2224 <ctf_member_info+0xc8>  // b.none
    2214:	mov	w1, #0x3fb                 	// #1019
    2218:	ldr	x0, [sp, #88]
    221c:	bl	0 <ctf_set_errno>
    2220:	b	2438 <ctf_member_info+0x2dc>
    2224:	ldr	x0, [sp, #40]
    2228:	ldr	x1, [sp, #32]
    222c:	bl	0 <ctf_dynamic_type>
    2230:	str	x0, [sp, #64]
    2234:	ldr	x0, [sp, #64]
    2238:	cmp	x0, #0x0
    223c:	b.ne	23c4 <ctf_member_info+0x268>  // b.any
    2240:	ldr	x1, [sp, #56]
    2244:	mov	x0, #0x1fffffff            	// #536870911
    2248:	cmp	x1, x0
    224c:	b.gt	2300 <ctf_member_info+0x1a4>
    2250:	ldr	x0, [sp, #80]
    2254:	ldr	x1, [sp, #48]
    2258:	add	x0, x0, x1
    225c:	str	x0, [sp, #112]
    2260:	ldr	x0, [sp, #40]
    2264:	ldr	x0, [x0]
    2268:	ldr	x1, [x0, #16]
    226c:	ldr	x0, [sp, #80]
    2270:	ldr	w0, [x0, #4]
    2274:	blr	x1
    2278:	str	w0, [sp, #124]
    227c:	b	22f0 <ctf_member_info+0x194>
    2280:	ldr	x2, [sp, #40]
    2284:	ldr	x0, [sp, #112]
    2288:	ldr	w0, [x0]
    228c:	mov	w1, w0
    2290:	mov	x0, x2
    2294:	bl	0 <ctf_strptr>
    2298:	ldr	x1, [sp, #24]
    229c:	bl	0 <strcmp>
    22a0:	cmp	w0, #0x0
    22a4:	b.ne	22d8 <ctf_member_info+0x17c>  // b.any
    22a8:	ldr	x0, [sp, #112]
    22ac:	ldr	w0, [x0, #8]
    22b0:	mov	w1, w0
    22b4:	ldr	x0, [sp, #16]
    22b8:	str	x1, [x0]
    22bc:	ldr	x0, [sp, #112]
    22c0:	ldr	w0, [x0, #4]
    22c4:	mov	w1, w0
    22c8:	ldr	x0, [sp, #16]
    22cc:	str	x1, [x0, #8]
    22d0:	mov	w0, #0x0                   	// #0
    22d4:	b	2438 <ctf_member_info+0x2dc>
    22d8:	ldr	w0, [sp, #124]
    22dc:	sub	w0, w0, #0x1
    22e0:	str	w0, [sp, #124]
    22e4:	ldr	x0, [sp, #112]
    22e8:	add	x0, x0, #0xc
    22ec:	str	x0, [sp, #112]
    22f0:	ldr	w0, [sp, #124]
    22f4:	cmp	w0, #0x0
    22f8:	b.ne	2280 <ctf_member_info+0x124>  // b.any
    22fc:	b	242c <ctf_member_info+0x2d0>
    2300:	ldr	x0, [sp, #80]
    2304:	ldr	x1, [sp, #48]
    2308:	add	x0, x0, x1
    230c:	str	x0, [sp, #104]
    2310:	ldr	x0, [sp, #40]
    2314:	ldr	x0, [x0]
    2318:	ldr	x1, [x0, #16]
    231c:	ldr	x0, [sp, #80]
    2320:	ldr	w0, [x0, #4]
    2324:	blr	x1
    2328:	str	w0, [sp, #124]
    232c:	b	23b4 <ctf_member_info+0x258>
    2330:	ldr	x2, [sp, #40]
    2334:	ldr	x0, [sp, #104]
    2338:	ldr	w0, [x0]
    233c:	mov	w1, w0
    2340:	mov	x0, x2
    2344:	bl	0 <ctf_strptr>
    2348:	ldr	x1, [sp, #24]
    234c:	bl	0 <strcmp>
    2350:	cmp	w0, #0x0
    2354:	b.ne	239c <ctf_member_info+0x240>  // b.any
    2358:	ldr	x0, [sp, #104]
    235c:	ldr	w0, [x0, #8]
    2360:	mov	w1, w0
    2364:	ldr	x0, [sp, #16]
    2368:	str	x1, [x0]
    236c:	ldr	x0, [sp, #104]
    2370:	ldr	w0, [x0, #4]
    2374:	mov	w0, w0
    2378:	lsl	x1, x0, #32
    237c:	ldr	x0, [sp, #104]
    2380:	ldr	w0, [x0, #12]
    2384:	mov	w0, w0
    2388:	orr	x1, x1, x0
    238c:	ldr	x0, [sp, #16]
    2390:	str	x1, [x0, #8]
    2394:	mov	w0, #0x0                   	// #0
    2398:	b	2438 <ctf_member_info+0x2dc>
    239c:	ldr	w0, [sp, #124]
    23a0:	sub	w0, w0, #0x1
    23a4:	str	w0, [sp, #124]
    23a8:	ldr	x0, [sp, #104]
    23ac:	add	x0, x0, #0x10
    23b0:	str	x0, [sp, #104]
    23b4:	ldr	w0, [sp, #124]
    23b8:	cmp	w0, #0x0
    23bc:	b.ne	2330 <ctf_member_info+0x1d4>  // b.any
    23c0:	b	242c <ctf_member_info+0x2d0>
    23c4:	ldr	x0, [sp, #64]
    23c8:	ldr	x0, [x0, #56]
    23cc:	str	x0, [sp, #96]
    23d0:	b	2420 <ctf_member_info+0x2c4>
    23d4:	ldr	x0, [sp, #96]
    23d8:	ldr	x0, [x0, #16]
    23dc:	ldr	x1, [sp, #24]
    23e0:	bl	0 <strcmp>
    23e4:	cmp	w0, #0x0
    23e8:	b.ne	2414 <ctf_member_info+0x2b8>  // b.any
    23ec:	ldr	x0, [sp, #96]
    23f0:	ldr	x1, [x0, #24]
    23f4:	ldr	x0, [sp, #16]
    23f8:	str	x1, [x0]
    23fc:	ldr	x0, [sp, #96]
    2400:	ldr	x1, [x0, #32]
    2404:	ldr	x0, [sp, #16]
    2408:	str	x1, [x0, #8]
    240c:	mov	w0, #0x0                   	// #0
    2410:	b	2438 <ctf_member_info+0x2dc>
    2414:	ldr	x0, [sp, #96]
    2418:	ldr	x0, [x0, #8]
    241c:	str	x0, [sp, #96]
    2420:	ldr	x0, [sp, #96]
    2424:	cmp	x0, #0x0
    2428:	b.ne	23d4 <ctf_member_info+0x278>  // b.any
    242c:	mov	w1, #0x40c                 	// #1036
    2430:	ldr	x0, [sp, #88]
    2434:	bl	0 <ctf_set_errno>
    2438:	ldp	x29, x30, [sp], #128
    243c:	ret

0000000000002440 <ctf_array_info>:
    2440:	stp	x29, x30, [sp, #-96]!
    2444:	mov	x29, sp
    2448:	str	x0, [sp, #40]
    244c:	str	x1, [sp, #32]
    2450:	str	x2, [sp, #24]
    2454:	ldr	x0, [sp, #40]
    2458:	str	x0, [sp, #88]
    245c:	add	x0, sp, #0x28
    2460:	ldr	x1, [sp, #32]
    2464:	bl	0 <ctf_lookup_by_id>
    2468:	str	x0, [sp, #80]
    246c:	ldr	x0, [sp, #80]
    2470:	cmp	x0, #0x0
    2474:	b.ne	2480 <ctf_array_info+0x40>  // b.any
    2478:	mov	w0, #0xffffffff            	// #-1
    247c:	b	255c <ctf_array_info+0x11c>
    2480:	ldr	x0, [sp, #40]
    2484:	ldr	x0, [x0]
    2488:	ldr	x1, [x0]
    248c:	ldr	x0, [sp, #80]
    2490:	ldr	w0, [x0, #4]
    2494:	blr	x1
    2498:	cmp	w0, #0x4
    249c:	b.eq	24b0 <ctf_array_info+0x70>  // b.none
    24a0:	mov	w1, #0x3ff                 	// #1023
    24a4:	ldr	x0, [sp, #88]
    24a8:	bl	0 <ctf_set_errno>
    24ac:	b	255c <ctf_array_info+0x11c>
    24b0:	ldr	x1, [sp, #32]
    24b4:	ldr	x0, [sp, #88]
    24b8:	bl	0 <ctf_dynamic_type>
    24bc:	str	x0, [sp, #72]
    24c0:	ldr	x0, [sp, #72]
    24c4:	cmp	x0, #0x0
    24c8:	b.eq	24f8 <ctf_array_info+0xb8>  // b.none
    24cc:	ldr	x1, [sp, #24]
    24d0:	ldr	x0, [sp, #72]
    24d4:	add	x0, x0, #0x30
    24d8:	mov	x2, x1
    24dc:	mov	x3, x0
    24e0:	ldp	x0, x1, [x3]
    24e4:	stp	x0, x1, [x2]
    24e8:	ldr	x0, [x3, #16]
    24ec:	str	x0, [x2, #16]
    24f0:	mov	w0, #0x0                   	// #0
    24f4:	b	255c <ctf_array_info+0x11c>
    24f8:	ldr	x0, [sp, #40]
    24fc:	add	x1, sp, #0x38
    2500:	mov	x3, x1
    2504:	mov	x2, #0x0                   	// #0
    2508:	ldr	x1, [sp, #80]
    250c:	bl	0 <ctf_get_ctt_size>
    2510:	ldr	x0, [sp, #80]
    2514:	ldr	x1, [sp, #56]
    2518:	add	x0, x0, x1
    251c:	str	x0, [sp, #64]
    2520:	ldr	x0, [sp, #64]
    2524:	ldr	w0, [x0]
    2528:	mov	w1, w0
    252c:	ldr	x0, [sp, #24]
    2530:	str	x1, [x0]
    2534:	ldr	x0, [sp, #64]
    2538:	ldr	w0, [x0, #4]
    253c:	mov	w1, w0
    2540:	ldr	x0, [sp, #24]
    2544:	str	x1, [x0, #8]
    2548:	ldr	x0, [sp, #64]
    254c:	ldr	w1, [x0, #8]
    2550:	ldr	x0, [sp, #24]
    2554:	str	w1, [x0, #16]
    2558:	mov	w0, #0x0                   	// #0
    255c:	ldp	x29, x30, [sp], #96
    2560:	ret

0000000000002564 <ctf_enum_name>:
    2564:	stp	x29, x30, [sp, #-112]!
    2568:	mov	x29, sp
    256c:	str	x0, [sp, #40]
    2570:	str	x1, [sp, #32]
    2574:	str	w2, [sp, #28]
    2578:	ldr	x0, [sp, #40]
    257c:	str	x0, [sp, #80]
    2580:	ldr	x0, [sp, #40]
    2584:	ldr	x1, [sp, #32]
    2588:	bl	af0 <ctf_type_resolve_unsliced>
    258c:	str	x0, [sp, #32]
    2590:	ldr	x0, [sp, #32]
    2594:	cmn	x0, #0x1
    2598:	b.ne	25a4 <ctf_enum_name+0x40>  // b.any
    259c:	mov	x0, #0x0                   	// #0
    25a0:	b	2714 <ctf_enum_name+0x1b0>
    25a4:	add	x0, sp, #0x28
    25a8:	ldr	x1, [sp, #32]
    25ac:	bl	0 <ctf_lookup_by_id>
    25b0:	str	x0, [sp, #72]
    25b4:	ldr	x0, [sp, #72]
    25b8:	cmp	x0, #0x0
    25bc:	b.ne	25c8 <ctf_enum_name+0x64>  // b.any
    25c0:	mov	x0, #0x0                   	// #0
    25c4:	b	2714 <ctf_enum_name+0x1b0>
    25c8:	ldr	x0, [sp, #40]
    25cc:	ldr	x0, [x0]
    25d0:	ldr	x1, [x0]
    25d4:	ldr	x0, [sp, #72]
    25d8:	ldr	w0, [x0, #4]
    25dc:	blr	x1
    25e0:	cmp	w0, #0x8
    25e4:	b.eq	25fc <ctf_enum_name+0x98>  // b.none
    25e8:	mov	w1, #0x3fc                 	// #1020
    25ec:	ldr	x0, [sp, #80]
    25f0:	bl	0 <ctf_set_errno>
    25f4:	mov	x0, #0x0                   	// #0
    25f8:	b	2714 <ctf_enum_name+0x1b0>
    25fc:	ldr	x0, [sp, #40]
    2600:	add	x1, sp, #0x38
    2604:	mov	x3, x1
    2608:	mov	x2, #0x0                   	// #0
    260c:	ldr	x1, [sp, #72]
    2610:	bl	0 <ctf_get_ctt_size>
    2614:	ldr	x1, [sp, #32]
    2618:	ldr	x0, [sp, #80]
    261c:	bl	0 <ctf_dynamic_type>
    2620:	str	x0, [sp, #64]
    2624:	ldr	x0, [sp, #64]
    2628:	cmp	x0, #0x0
    262c:	b.ne	26b8 <ctf_enum_name+0x154>  // b.any
    2630:	ldr	x0, [sp, #72]
    2634:	ldr	x1, [sp, #56]
    2638:	add	x0, x0, x1
    263c:	str	x0, [sp, #104]
    2640:	ldr	x0, [sp, #40]
    2644:	ldr	x0, [x0]
    2648:	ldr	x1, [x0, #16]
    264c:	ldr	x0, [sp, #72]
    2650:	ldr	w0, [x0, #4]
    2654:	blr	x1
    2658:	str	w0, [sp, #100]
    265c:	b	26a8 <ctf_enum_name+0x144>
    2660:	ldr	x0, [sp, #104]
    2664:	ldr	w0, [x0, #4]
    2668:	ldr	w1, [sp, #28]
    266c:	cmp	w1, w0
    2670:	b.ne	2690 <ctf_enum_name+0x12c>  // b.any
    2674:	ldr	x2, [sp, #40]
    2678:	ldr	x0, [sp, #104]
    267c:	ldr	w0, [x0]
    2680:	mov	w1, w0
    2684:	mov	x0, x2
    2688:	bl	0 <ctf_strptr>
    268c:	b	2714 <ctf_enum_name+0x1b0>
    2690:	ldr	w0, [sp, #100]
    2694:	sub	w0, w0, #0x1
    2698:	str	w0, [sp, #100]
    269c:	ldr	x0, [sp, #104]
    26a0:	add	x0, x0, #0x8
    26a4:	str	x0, [sp, #104]
    26a8:	ldr	w0, [sp, #100]
    26ac:	cmp	w0, #0x0
    26b0:	b.ne	2660 <ctf_enum_name+0xfc>  // b.any
    26b4:	b	2704 <ctf_enum_name+0x1a0>
    26b8:	ldr	x0, [sp, #64]
    26bc:	add	x0, x0, #0x30
    26c0:	ldr	x0, [x0, #8]
    26c4:	str	x0, [sp, #88]
    26c8:	b	26f8 <ctf_enum_name+0x194>
    26cc:	ldr	x0, [sp, #88]
    26d0:	ldr	w0, [x0, #40]
    26d4:	ldr	w1, [sp, #28]
    26d8:	cmp	w1, w0
    26dc:	b.ne	26ec <ctf_enum_name+0x188>  // b.any
    26e0:	ldr	x0, [sp, #88]
    26e4:	ldr	x0, [x0, #16]
    26e8:	b	2714 <ctf_enum_name+0x1b0>
    26ec:	ldr	x0, [sp, #88]
    26f0:	ldr	x0, [x0, #8]
    26f4:	str	x0, [sp, #88]
    26f8:	ldr	x0, [sp, #88]
    26fc:	cmp	x0, #0x0
    2700:	b.ne	26cc <ctf_enum_name+0x168>  // b.any
    2704:	mov	w1, #0x40b                 	// #1035
    2708:	ldr	x0, [sp, #80]
    270c:	bl	0 <ctf_set_errno>
    2710:	mov	x0, #0x0                   	// #0
    2714:	ldp	x29, x30, [sp], #112
    2718:	ret

000000000000271c <ctf_enum_value>:
    271c:	stp	x29, x30, [sp, #-112]!
    2720:	mov	x29, sp
    2724:	str	x0, [sp, #40]
    2728:	str	x1, [sp, #32]
    272c:	str	x2, [sp, #24]
    2730:	str	x3, [sp, #16]
    2734:	ldr	x0, [sp, #40]
    2738:	str	x0, [sp, #80]
    273c:	ldr	x0, [sp, #40]
    2740:	ldr	x1, [sp, #32]
    2744:	bl	af0 <ctf_type_resolve_unsliced>
    2748:	str	x0, [sp, #32]
    274c:	ldr	x0, [sp, #32]
    2750:	cmn	x0, #0x1
    2754:	b.ne	2760 <ctf_enum_value+0x44>  // b.any
    2758:	mov	w0, #0xffffffff            	// #-1
    275c:	b	2908 <ctf_enum_value+0x1ec>
    2760:	add	x0, sp, #0x28
    2764:	ldr	x1, [sp, #32]
    2768:	bl	0 <ctf_lookup_by_id>
    276c:	str	x0, [sp, #72]
    2770:	ldr	x0, [sp, #72]
    2774:	cmp	x0, #0x0
    2778:	b.ne	2784 <ctf_enum_value+0x68>  // b.any
    277c:	mov	w0, #0xffffffff            	// #-1
    2780:	b	2908 <ctf_enum_value+0x1ec>
    2784:	ldr	x0, [sp, #40]
    2788:	ldr	x0, [x0]
    278c:	ldr	x1, [x0]
    2790:	ldr	x0, [sp, #72]
    2794:	ldr	w0, [x0, #4]
    2798:	blr	x1
    279c:	cmp	w0, #0x8
    27a0:	b.eq	27b8 <ctf_enum_value+0x9c>  // b.none
    27a4:	mov	w1, #0x3fc                 	// #1020
    27a8:	ldr	x0, [sp, #80]
    27ac:	bl	0 <ctf_set_errno>
    27b0:	mov	w0, #0xffffffff            	// #-1
    27b4:	b	2908 <ctf_enum_value+0x1ec>
    27b8:	ldr	x0, [sp, #40]
    27bc:	add	x1, sp, #0x38
    27c0:	mov	x3, x1
    27c4:	mov	x2, #0x0                   	// #0
    27c8:	ldr	x1, [sp, #72]
    27cc:	bl	0 <ctf_get_ctt_size>
    27d0:	ldr	x0, [sp, #72]
    27d4:	ldr	x1, [sp, #56]
    27d8:	add	x0, x0, x1
    27dc:	str	x0, [sp, #104]
    27e0:	ldr	x1, [sp, #32]
    27e4:	ldr	x0, [sp, #80]
    27e8:	bl	0 <ctf_dynamic_type>
    27ec:	str	x0, [sp, #64]
    27f0:	ldr	x0, [sp, #64]
    27f4:	cmp	x0, #0x0
    27f8:	b.ne	2890 <ctf_enum_value+0x174>  // b.any
    27fc:	ldr	x0, [sp, #40]
    2800:	ldr	x0, [x0]
    2804:	ldr	x1, [x0, #16]
    2808:	ldr	x0, [sp, #72]
    280c:	ldr	w0, [x0, #4]
    2810:	blr	x1
    2814:	str	w0, [sp, #100]
    2818:	b	2880 <ctf_enum_value+0x164>
    281c:	ldr	x2, [sp, #40]
    2820:	ldr	x0, [sp, #104]
    2824:	ldr	w0, [x0]
    2828:	mov	w1, w0
    282c:	mov	x0, x2
    2830:	bl	0 <ctf_strptr>
    2834:	ldr	x1, [sp, #24]
    2838:	bl	0 <strcmp>
    283c:	cmp	w0, #0x0
    2840:	b.ne	2868 <ctf_enum_value+0x14c>  // b.any
    2844:	ldr	x0, [sp, #16]
    2848:	cmp	x0, #0x0
    284c:	b.eq	2860 <ctf_enum_value+0x144>  // b.none
    2850:	ldr	x0, [sp, #104]
    2854:	ldr	w1, [x0, #4]
    2858:	ldr	x0, [sp, #16]
    285c:	str	w1, [x0]
    2860:	mov	w0, #0x0                   	// #0
    2864:	b	2908 <ctf_enum_value+0x1ec>
    2868:	ldr	w0, [sp, #100]
    286c:	sub	w0, w0, #0x1
    2870:	str	w0, [sp, #100]
    2874:	ldr	x0, [sp, #104]
    2878:	add	x0, x0, #0x8
    287c:	str	x0, [sp, #104]
    2880:	ldr	w0, [sp, #100]
    2884:	cmp	w0, #0x0
    2888:	b.ne	281c <ctf_enum_value+0x100>  // b.any
    288c:	b	28f8 <ctf_enum_value+0x1dc>
    2890:	ldr	x0, [sp, #64]
    2894:	add	x0, x0, #0x30
    2898:	ldr	x0, [x0, #8]
    289c:	str	x0, [sp, #88]
    28a0:	b	28ec <ctf_enum_value+0x1d0>
    28a4:	ldr	x0, [sp, #88]
    28a8:	ldr	x0, [x0, #16]
    28ac:	ldr	x1, [sp, #24]
    28b0:	bl	0 <strcmp>
    28b4:	cmp	w0, #0x0
    28b8:	b.ne	28e0 <ctf_enum_value+0x1c4>  // b.any
    28bc:	ldr	x0, [sp, #16]
    28c0:	cmp	x0, #0x0
    28c4:	b.eq	28d8 <ctf_enum_value+0x1bc>  // b.none
    28c8:	ldr	x0, [sp, #88]
    28cc:	ldr	w1, [x0, #40]
    28d0:	ldr	x0, [sp, #16]
    28d4:	str	w1, [x0]
    28d8:	mov	w0, #0x0                   	// #0
    28dc:	b	2908 <ctf_enum_value+0x1ec>
    28e0:	ldr	x0, [sp, #88]
    28e4:	ldr	x0, [x0, #8]
    28e8:	str	x0, [sp, #88]
    28ec:	ldr	x0, [sp, #88]
    28f0:	cmp	x0, #0x0
    28f4:	b.ne	28a4 <ctf_enum_value+0x188>  // b.any
    28f8:	mov	w1, #0x40b                 	// #1035
    28fc:	ldr	x0, [sp, #80]
    2900:	bl	0 <ctf_set_errno>
    2904:	mov	w0, #0xffffffff            	// #-1
    2908:	ldp	x29, x30, [sp], #112
    290c:	ret

0000000000002910 <ctf_func_type_info>:
    2910:	stp	x29, x30, [sp, #-96]!
    2914:	mov	x29, sp
    2918:	str	x0, [sp, #40]
    291c:	str	x1, [sp, #32]
    2920:	str	x2, [sp, #24]
    2924:	ldr	x0, [sp, #40]
    2928:	ldr	x1, [sp, #32]
    292c:	bl	9b8 <ctf_type_resolve>
    2930:	str	x0, [sp, #32]
    2934:	ldr	x0, [sp, #32]
    2938:	cmn	x0, #0x1
    293c:	b.ne	2948 <ctf_func_type_info+0x38>  // b.any
    2940:	mov	w0, #0xffffffff            	// #-1
    2944:	b	2aa0 <ctf_func_type_info+0x190>
    2948:	add	x0, sp, #0x28
    294c:	ldr	x1, [sp, #32]
    2950:	bl	0 <ctf_lookup_by_id>
    2954:	str	x0, [sp, #80]
    2958:	ldr	x0, [sp, #80]
    295c:	cmp	x0, #0x0
    2960:	b.ne	296c <ctf_func_type_info+0x5c>  // b.any
    2964:	mov	w0, #0xffffffff            	// #-1
    2968:	b	2aa0 <ctf_func_type_info+0x190>
    296c:	ldr	x0, [sp, #40]
    2970:	add	x2, sp, #0x30
    2974:	add	x1, sp, #0x38
    2978:	mov	x3, x2
    297c:	mov	x2, x1
    2980:	ldr	x1, [sp, #80]
    2984:	bl	0 <ctf_get_ctt_size>
    2988:	ldr	x0, [sp, #40]
    298c:	ldr	x0, [x0]
    2990:	ldr	x1, [x0]
    2994:	ldr	x0, [sp, #80]
    2998:	ldr	w0, [x0, #4]
    299c:	blr	x1
    29a0:	str	w0, [sp, #76]
    29a4:	ldr	w0, [sp, #76]
    29a8:	cmp	w0, #0x5
    29ac:	b.eq	29c0 <ctf_func_type_info+0xb0>  // b.none
    29b0:	ldr	x0, [sp, #40]
    29b4:	mov	w1, #0x404                 	// #1028
    29b8:	bl	0 <ctf_set_errno>
    29bc:	b	2aa0 <ctf_func_type_info+0x190>
    29c0:	ldr	x0, [sp, #80]
    29c4:	ldr	w0, [x0, #8]
    29c8:	mov	w1, w0
    29cc:	ldr	x0, [sp, #24]
    29d0:	str	x1, [x0]
    29d4:	ldr	x0, [sp, #24]
    29d8:	str	wzr, [x0, #12]
    29dc:	ldr	x0, [sp, #40]
    29e0:	ldr	x0, [x0]
    29e4:	ldr	x1, [x0, #16]
    29e8:	ldr	x0, [sp, #80]
    29ec:	ldr	w0, [x0, #4]
    29f0:	blr	x1
    29f4:	mov	w1, w0
    29f8:	ldr	x0, [sp, #24]
    29fc:	str	w1, [x0, #8]
    2a00:	ldr	x0, [sp, #40]
    2a04:	ldr	x1, [sp, #32]
    2a08:	bl	0 <ctf_dynamic_type>
    2a0c:	str	x0, [sp, #64]
    2a10:	ldr	x0, [sp, #64]
    2a14:	cmp	x0, #0x0
    2a18:	b.ne	2a30 <ctf_func_type_info+0x120>  // b.any
    2a1c:	ldr	x0, [sp, #80]
    2a20:	ldr	x1, [sp, #48]
    2a24:	add	x0, x0, x1
    2a28:	str	x0, [sp, #88]
    2a2c:	b	2a3c <ctf_func_type_info+0x12c>
    2a30:	ldr	x0, [sp, #64]
    2a34:	ldr	x0, [x0, #48]
    2a38:	str	x0, [sp, #88]
    2a3c:	ldr	x0, [sp, #24]
    2a40:	ldr	w0, [x0, #8]
    2a44:	cmp	w0, #0x0
    2a48:	b.eq	2a9c <ctf_func_type_info+0x18c>  // b.none
    2a4c:	ldr	x0, [sp, #24]
    2a50:	ldr	w0, [x0, #8]
    2a54:	sub	w0, w0, #0x1
    2a58:	mov	w0, w0
    2a5c:	lsl	x0, x0, #2
    2a60:	ldr	x1, [sp, #88]
    2a64:	add	x0, x1, x0
    2a68:	ldr	w0, [x0]
    2a6c:	cmp	w0, #0x0
    2a70:	b.ne	2a9c <ctf_func_type_info+0x18c>  // b.any
    2a74:	ldr	x0, [sp, #24]
    2a78:	ldr	w0, [x0, #12]
    2a7c:	orr	w1, w0, #0x1
    2a80:	ldr	x0, [sp, #24]
    2a84:	str	w1, [x0, #12]
    2a88:	ldr	x0, [sp, #24]
    2a8c:	ldr	w0, [x0, #8]
    2a90:	sub	w1, w0, #0x1
    2a94:	ldr	x0, [sp, #24]
    2a98:	str	w1, [x0, #8]
    2a9c:	mov	w0, #0x0                   	// #0
    2aa0:	ldp	x29, x30, [sp], #96
    2aa4:	ret

0000000000002aa8 <ctf_func_type_args>:
    2aa8:	stp	x29, x30, [sp, #-112]!
    2aac:	mov	x29, sp
    2ab0:	str	x0, [sp, #40]
    2ab4:	str	x1, [sp, #32]
    2ab8:	str	w2, [sp, #28]
    2abc:	str	x3, [sp, #16]
    2ac0:	ldr	x0, [sp, #40]
    2ac4:	add	x1, sp, #0x38
    2ac8:	mov	x2, x1
    2acc:	ldr	x1, [sp, #32]
    2ad0:	bl	2910 <ctf_func_type_info>
    2ad4:	cmp	w0, #0x0
    2ad8:	b.ge	2ae4 <ctf_func_type_args+0x3c>  // b.tcont
    2adc:	mov	w0, #0xffffffff            	// #-1
    2ae0:	b	2be0 <ctf_func_type_args+0x138>
    2ae4:	ldr	x0, [sp, #40]
    2ae8:	ldr	x1, [sp, #32]
    2aec:	bl	9b8 <ctf_type_resolve>
    2af0:	str	x0, [sp, #32]
    2af4:	ldr	x0, [sp, #32]
    2af8:	cmn	x0, #0x1
    2afc:	b.ne	2b08 <ctf_func_type_args+0x60>  // b.any
    2b00:	mov	w0, #0xffffffff            	// #-1
    2b04:	b	2be0 <ctf_func_type_args+0x138>
    2b08:	add	x0, sp, #0x28
    2b0c:	ldr	x1, [sp, #32]
    2b10:	bl	0 <ctf_lookup_by_id>
    2b14:	str	x0, [sp, #96]
    2b18:	ldr	x0, [sp, #96]
    2b1c:	cmp	x0, #0x0
    2b20:	b.ne	2b2c <ctf_func_type_args+0x84>  // b.any
    2b24:	mov	w0, #0xffffffff            	// #-1
    2b28:	b	2be0 <ctf_func_type_args+0x138>
    2b2c:	ldr	x0, [sp, #40]
    2b30:	add	x2, sp, #0x48
    2b34:	add	x1, sp, #0x50
    2b38:	mov	x3, x2
    2b3c:	mov	x2, x1
    2b40:	ldr	x1, [sp, #96]
    2b44:	bl	0 <ctf_get_ctt_size>
    2b48:	ldr	x0, [sp, #40]
    2b4c:	ldr	x1, [sp, #32]
    2b50:	bl	0 <ctf_dynamic_type>
    2b54:	str	x0, [sp, #88]
    2b58:	ldr	x0, [sp, #88]
    2b5c:	cmp	x0, #0x0
    2b60:	b.ne	2b78 <ctf_func_type_args+0xd0>  // b.any
    2b64:	ldr	x0, [sp, #96]
    2b68:	ldr	x1, [sp, #72]
    2b6c:	add	x0, x0, x1
    2b70:	str	x0, [sp, #104]
    2b74:	b	2b84 <ctf_func_type_args+0xdc>
    2b78:	ldr	x0, [sp, #88]
    2b7c:	ldr	x0, [x0, #48]
    2b80:	str	x0, [sp, #104]
    2b84:	ldr	w0, [sp, #64]
    2b88:	ldr	w2, [sp, #28]
    2b8c:	ldr	w1, [sp, #28]
    2b90:	cmp	w2, w0
    2b94:	csel	w0, w1, w0, ls  // ls = plast
    2b98:	str	w0, [sp, #28]
    2b9c:	b	2bd0 <ctf_func_type_args+0x128>
    2ba0:	ldr	x0, [sp, #104]
    2ba4:	add	x1, x0, #0x4
    2ba8:	str	x1, [sp, #104]
    2bac:	ldr	w2, [x0]
    2bb0:	ldr	x0, [sp, #16]
    2bb4:	add	x1, x0, #0x8
    2bb8:	str	x1, [sp, #16]
    2bbc:	mov	w1, w2
    2bc0:	str	x1, [x0]
    2bc4:	ldr	w0, [sp, #28]
    2bc8:	sub	w0, w0, #0x1
    2bcc:	str	w0, [sp, #28]
    2bd0:	ldr	w0, [sp, #28]
    2bd4:	cmp	w0, #0x0
    2bd8:	b.ne	2ba0 <ctf_func_type_args+0xf8>  // b.any
    2bdc:	mov	w0, #0x0                   	// #0
    2be0:	ldp	x29, x30, [sp], #112
    2be4:	ret

0000000000002be8 <ctf_type_rvisit>:
    2be8:	stp	x29, x30, [sp, #-176]!
    2bec:	mov	x29, sp
    2bf0:	stp	x19, x20, [sp, #16]
    2bf4:	str	x0, [sp, #88]
    2bf8:	str	x1, [sp, #80]
    2bfc:	str	x2, [sp, #72]
    2c00:	str	x3, [sp, #64]
    2c04:	str	x4, [sp, #56]
    2c08:	str	x5, [sp, #48]
    2c0c:	str	w6, [sp, #44]
    2c10:	ldr	x0, [sp, #80]
    2c14:	str	x0, [sp, #136]
    2c18:	ldr	x0, [sp, #88]
    2c1c:	ldr	x1, [sp, #80]
    2c20:	bl	9b8 <ctf_type_resolve>
    2c24:	str	x0, [sp, #80]
    2c28:	ldr	x0, [sp, #80]
    2c2c:	cmn	x0, #0x1
    2c30:	b.ne	2c3c <ctf_type_rvisit+0x54>  // b.any
    2c34:	mov	w0, #0xffffffff            	// #-1
    2c38:	b	2f64 <ctf_type_rvisit+0x37c>
    2c3c:	add	x0, sp, #0x58
    2c40:	ldr	x1, [sp, #80]
    2c44:	bl	0 <ctf_lookup_by_id>
    2c48:	str	x0, [sp, #128]
    2c4c:	ldr	x0, [sp, #128]
    2c50:	cmp	x0, #0x0
    2c54:	b.ne	2c60 <ctf_type_rvisit+0x78>  // b.any
    2c58:	mov	w0, #0xffffffff            	// #-1
    2c5c:	b	2f64 <ctf_type_rvisit+0x37c>
    2c60:	ldr	x5, [sp, #72]
    2c64:	ldr	x4, [sp, #64]
    2c68:	ldr	w3, [sp, #44]
    2c6c:	ldr	x2, [sp, #48]
    2c70:	ldr	x1, [sp, #136]
    2c74:	ldr	x0, [sp, #56]
    2c78:	blr	x5
    2c7c:	str	w0, [sp, #124]
    2c80:	ldr	w0, [sp, #124]
    2c84:	cmp	w0, #0x0
    2c88:	b.eq	2c94 <ctf_type_rvisit+0xac>  // b.none
    2c8c:	ldr	w0, [sp, #124]
    2c90:	b	2f64 <ctf_type_rvisit+0x37c>
    2c94:	ldr	x0, [sp, #88]
    2c98:	ldr	x0, [x0]
    2c9c:	ldr	x1, [x0]
    2ca0:	ldr	x0, [sp, #128]
    2ca4:	ldr	w0, [x0, #4]
    2ca8:	blr	x1
    2cac:	str	w0, [sp, #120]
    2cb0:	ldr	w0, [sp, #120]
    2cb4:	cmp	w0, #0x6
    2cb8:	b.eq	2cd0 <ctf_type_rvisit+0xe8>  // b.none
    2cbc:	ldr	w0, [sp, #120]
    2cc0:	cmp	w0, #0x7
    2cc4:	b.eq	2cd0 <ctf_type_rvisit+0xe8>  // b.none
    2cc8:	mov	w0, #0x0                   	// #0
    2ccc:	b	2f64 <ctf_type_rvisit+0x37c>
    2cd0:	ldr	x0, [sp, #88]
    2cd4:	add	x2, sp, #0x60
    2cd8:	add	x1, sp, #0x68
    2cdc:	mov	x3, x2
    2ce0:	mov	x2, x1
    2ce4:	ldr	x1, [sp, #128]
    2ce8:	bl	0 <ctf_get_ctt_size>
    2cec:	ldr	x0, [sp, #88]
    2cf0:	ldr	x1, [sp, #80]
    2cf4:	bl	0 <ctf_dynamic_type>
    2cf8:	str	x0, [sp, #112]
    2cfc:	ldr	x0, [sp, #112]
    2d00:	cmp	x0, #0x0
    2d04:	b.ne	2edc <ctf_type_rvisit+0x2f4>  // b.any
    2d08:	ldr	x1, [sp, #104]
    2d0c:	mov	x0, #0x1fffffff            	// #536870911
    2d10:	cmp	x1, x0
    2d14:	b.gt	2df0 <ctf_type_rvisit+0x208>
    2d18:	ldr	x0, [sp, #128]
    2d1c:	ldr	x1, [sp, #96]
    2d20:	add	x0, x0, x1
    2d24:	str	x0, [sp, #160]
    2d28:	ldr	x0, [sp, #88]
    2d2c:	ldr	x0, [x0]
    2d30:	ldr	x1, [x0, #16]
    2d34:	ldr	x0, [sp, #128]
    2d38:	ldr	w0, [x0, #4]
    2d3c:	blr	x1
    2d40:	str	w0, [sp, #172]
    2d44:	b	2de0 <ctf_type_rvisit+0x1f8>
    2d48:	ldr	x19, [sp, #88]
    2d4c:	ldr	x0, [sp, #160]
    2d50:	ldr	w0, [x0, #8]
    2d54:	mov	w20, w0
    2d58:	ldr	x2, [sp, #88]
    2d5c:	ldr	x0, [sp, #160]
    2d60:	ldr	w0, [x0]
    2d64:	mov	w1, w0
    2d68:	mov	x0, x2
    2d6c:	bl	0 <ctf_strptr>
    2d70:	mov	x2, x0
    2d74:	ldr	x0, [sp, #160]
    2d78:	ldr	w0, [x0, #4]
    2d7c:	mov	w1, w0
    2d80:	ldr	x0, [sp, #48]
    2d84:	add	x1, x1, x0
    2d88:	ldr	w0, [sp, #44]
    2d8c:	add	w0, w0, #0x1
    2d90:	mov	w6, w0
    2d94:	mov	x5, x1
    2d98:	mov	x4, x2
    2d9c:	ldr	x3, [sp, #64]
    2da0:	ldr	x2, [sp, #72]
    2da4:	mov	x1, x20
    2da8:	mov	x0, x19
    2dac:	bl	2be8 <ctf_type_rvisit>
    2db0:	str	w0, [sp, #124]
    2db4:	ldr	w0, [sp, #124]
    2db8:	cmp	w0, #0x0
    2dbc:	b.eq	2dc8 <ctf_type_rvisit+0x1e0>  // b.none
    2dc0:	ldr	w0, [sp, #124]
    2dc4:	b	2f64 <ctf_type_rvisit+0x37c>
    2dc8:	ldr	w0, [sp, #172]
    2dcc:	sub	w0, w0, #0x1
    2dd0:	str	w0, [sp, #172]
    2dd4:	ldr	x0, [sp, #160]
    2dd8:	add	x0, x0, #0xc
    2ddc:	str	x0, [sp, #160]
    2de0:	ldr	w0, [sp, #172]
    2de4:	cmp	w0, #0x0
    2de8:	b.ne	2d48 <ctf_type_rvisit+0x160>  // b.any
    2dec:	b	2f60 <ctf_type_rvisit+0x378>
    2df0:	ldr	x0, [sp, #128]
    2df4:	ldr	x1, [sp, #96]
    2df8:	add	x0, x0, x1
    2dfc:	str	x0, [sp, #152]
    2e00:	ldr	x0, [sp, #88]
    2e04:	ldr	x0, [x0]
    2e08:	ldr	x1, [x0, #16]
    2e0c:	ldr	x0, [sp, #128]
    2e10:	ldr	w0, [x0, #4]
    2e14:	blr	x1
    2e18:	str	w0, [sp, #172]
    2e1c:	b	2ecc <ctf_type_rvisit+0x2e4>
    2e20:	ldr	x19, [sp, #88]
    2e24:	ldr	x0, [sp, #152]
    2e28:	ldr	w0, [x0, #8]
    2e2c:	mov	w20, w0
    2e30:	ldr	x2, [sp, #88]
    2e34:	ldr	x0, [sp, #152]
    2e38:	ldr	w0, [x0]
    2e3c:	mov	w1, w0
    2e40:	mov	x0, x2
    2e44:	bl	0 <ctf_strptr>
    2e48:	mov	x2, x0
    2e4c:	ldr	x0, [sp, #152]
    2e50:	ldr	w0, [x0, #4]
    2e54:	mov	w0, w0
    2e58:	lsl	x1, x0, #32
    2e5c:	ldr	x0, [sp, #152]
    2e60:	ldr	w0, [x0, #12]
    2e64:	mov	w0, w0
    2e68:	orr	x1, x1, x0
    2e6c:	ldr	x0, [sp, #48]
    2e70:	add	x1, x1, x0
    2e74:	ldr	w0, [sp, #44]
    2e78:	add	w0, w0, #0x1
    2e7c:	mov	w6, w0
    2e80:	mov	x5, x1
    2e84:	mov	x4, x2
    2e88:	ldr	x3, [sp, #64]
    2e8c:	ldr	x2, [sp, #72]
    2e90:	mov	x1, x20
    2e94:	mov	x0, x19
    2e98:	bl	2be8 <ctf_type_rvisit>
    2e9c:	str	w0, [sp, #124]
    2ea0:	ldr	w0, [sp, #124]
    2ea4:	cmp	w0, #0x0
    2ea8:	b.eq	2eb4 <ctf_type_rvisit+0x2cc>  // b.none
    2eac:	ldr	w0, [sp, #124]
    2eb0:	b	2f64 <ctf_type_rvisit+0x37c>
    2eb4:	ldr	w0, [sp, #172]
    2eb8:	sub	w0, w0, #0x1
    2ebc:	str	w0, [sp, #172]
    2ec0:	ldr	x0, [sp, #152]
    2ec4:	add	x0, x0, #0x10
    2ec8:	str	x0, [sp, #152]
    2ecc:	ldr	w0, [sp, #172]
    2ed0:	cmp	w0, #0x0
    2ed4:	b.ne	2e20 <ctf_type_rvisit+0x238>  // b.any
    2ed8:	b	2f60 <ctf_type_rvisit+0x378>
    2edc:	ldr	x0, [sp, #112]
    2ee0:	add	x0, x0, #0x30
    2ee4:	ldr	x0, [x0, #8]
    2ee8:	str	x0, [sp, #144]
    2eec:	b	2f54 <ctf_type_rvisit+0x36c>
    2ef0:	ldr	x7, [sp, #88]
    2ef4:	ldr	x0, [sp, #144]
    2ef8:	ldr	x1, [x0, #24]
    2efc:	ldr	x0, [sp, #144]
    2f00:	ldr	x2, [x0, #16]
    2f04:	ldr	x0, [sp, #144]
    2f08:	ldr	x3, [x0, #32]
    2f0c:	ldr	w0, [sp, #44]
    2f10:	add	w0, w0, #0x1
    2f14:	mov	w6, w0
    2f18:	mov	x5, x3
    2f1c:	mov	x4, x2
    2f20:	ldr	x3, [sp, #64]
    2f24:	ldr	x2, [sp, #72]
    2f28:	mov	x0, x7
    2f2c:	bl	2be8 <ctf_type_rvisit>
    2f30:	str	w0, [sp, #124]
    2f34:	ldr	w0, [sp, #124]
    2f38:	cmp	w0, #0x0
    2f3c:	b.eq	2f48 <ctf_type_rvisit+0x360>  // b.none
    2f40:	ldr	w0, [sp, #124]
    2f44:	b	2f64 <ctf_type_rvisit+0x37c>
    2f48:	ldr	x0, [sp, #144]
    2f4c:	ldr	x0, [x0, #8]
    2f50:	str	x0, [sp, #144]
    2f54:	ldr	x0, [sp, #144]
    2f58:	cmp	x0, #0x0
    2f5c:	b.ne	2ef0 <ctf_type_rvisit+0x308>  // b.any
    2f60:	mov	w0, #0x0                   	// #0
    2f64:	ldp	x19, x20, [sp, #16]
    2f68:	ldp	x29, x30, [sp], #176
    2f6c:	ret

0000000000002f70 <ctf_type_visit>:
    2f70:	stp	x29, x30, [sp, #-48]!
    2f74:	mov	x29, sp
    2f78:	str	x0, [sp, #40]
    2f7c:	str	x1, [sp, #32]
    2f80:	str	x2, [sp, #24]
    2f84:	str	x3, [sp, #16]
    2f88:	mov	w6, #0x0                   	// #0
    2f8c:	mov	x5, #0x0                   	// #0
    2f90:	adrp	x0, 0 <ctf_get_ctt_size>
    2f94:	add	x4, x0, #0x0
    2f98:	ldr	x3, [sp, #16]
    2f9c:	ldr	x2, [sp, #24]
    2fa0:	ldr	x1, [sp, #32]
    2fa4:	ldr	x0, [sp, #40]
    2fa8:	bl	2be8 <ctf_type_rvisit>
    2fac:	ldp	x29, x30, [sp], #48
    2fb0:	ret

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	ldr	x0, [x0]
  14:	str	x0, [sp, #24]
  18:	ldr	x0, [sp]
  1c:	str	x0, [sp, #16]
  20:	ldr	x0, [sp, #8]
  24:	ldr	x1, [sp, #16]
  28:	str	x1, [x0]
  2c:	ldr	x0, [sp, #16]
  30:	ldr	x1, [sp, #24]
  34:	str	x1, [x0]
  38:	ldr	x0, [sp, #16]
  3c:	str	xzr, [x0, #8]
  40:	ldr	x0, [sp, #24]
  44:	cmp	x0, #0x0
  48:	b.eq	5c <ctf_list_append+0x5c>  // b.none
  4c:	ldr	x0, [sp, #24]
  50:	ldr	x1, [sp, #16]
  54:	str	x1, [x0, #8]
  58:	b	68 <ctf_list_append+0x68>
  5c:	ldr	x0, [sp, #8]
  60:	ldr	x1, [sp, #16]
  64:	str	x1, [x0, #8]
  68:	nop
  6c:	add	sp, sp, #0x20
  70:	ret

0000000000000074 <ctf_list_prepend>:
  74:	sub	sp, sp, #0x20
  78:	str	x0, [sp, #8]
  7c:	str	x1, [sp]
  80:	ldr	x0, [sp]
  84:	str	x0, [sp, #24]
  88:	ldr	x0, [sp, #8]
  8c:	ldr	x0, [x0, #8]
  90:	str	x0, [sp, #16]
  94:	ldr	x0, [sp, #8]
  98:	ldr	x1, [sp, #24]
  9c:	str	x1, [x0, #8]
  a0:	ldr	x0, [sp, #24]
  a4:	str	xzr, [x0]
  a8:	ldr	x0, [sp, #24]
  ac:	ldr	x1, [sp, #16]
  b0:	str	x1, [x0, #8]
  b4:	ldr	x0, [sp, #16]
  b8:	cmp	x0, #0x0
  bc:	b.eq	d0 <ctf_list_prepend+0x5c>  // b.none
  c0:	ldr	x0, [sp, #16]
  c4:	ldr	x1, [sp, #24]
  c8:	str	x1, [x0]
  cc:	b	dc <ctf_list_prepend+0x68>
  d0:	ldr	x0, [sp, #8]
  d4:	ldr	x1, [sp, #24]
  d8:	str	x1, [x0]
  dc:	nop
  e0:	add	sp, sp, #0x20
  e4:	ret

00000000000000e8 <ctf_list_delete>:
  e8:	sub	sp, sp, #0x20
  ec:	str	x0, [sp, #8]
  f0:	str	x1, [sp]
  f4:	ldr	x0, [sp]
  f8:	str	x0, [sp, #24]
  fc:	ldr	x0, [sp, #24]
 100:	ldr	x0, [x0]
 104:	cmp	x0, #0x0
 108:	b.eq	124 <ctf_list_delete+0x3c>  // b.none
 10c:	ldr	x0, [sp, #24]
 110:	ldr	x0, [x0]
 114:	ldr	x1, [sp, #24]
 118:	ldr	x1, [x1, #8]
 11c:	str	x1, [x0, #8]
 120:	b	134 <ctf_list_delete+0x4c>
 124:	ldr	x0, [sp, #24]
 128:	ldr	x1, [x0, #8]
 12c:	ldr	x0, [sp, #8]
 130:	str	x1, [x0, #8]
 134:	ldr	x0, [sp, #24]
 138:	ldr	x0, [x0, #8]
 13c:	cmp	x0, #0x0
 140:	b.eq	15c <ctf_list_delete+0x74>  // b.none
 144:	ldr	x0, [sp, #24]
 148:	ldr	x0, [x0, #8]
 14c:	ldr	x1, [sp, #24]
 150:	ldr	x1, [x1]
 154:	str	x1, [x0]
 158:	b	16c <ctf_list_delete+0x84>
 15c:	ldr	x0, [sp, #24]
 160:	ldr	x1, [x0]
 164:	ldr	x0, [sp, #8]
 168:	str	x1, [x0]
 16c:	nop
 170:	add	sp, sp, #0x20
 174:	ret

0000000000000178 <ctf_list_empty_p>:
 178:	sub	sp, sp, #0x10
 17c:	str	x0, [sp, #8]
 180:	ldr	x0, [sp, #8]
 184:	ldr	x0, [x0, #8]
 188:	cmp	x0, #0x0
 18c:	b.ne	1a8 <ctf_list_empty_p+0x30>  // b.any
 190:	ldr	x0, [sp, #8]
 194:	ldr	x0, [x0]
 198:	cmp	x0, #0x0
 19c:	b.ne	1a8 <ctf_list_empty_p+0x30>  // b.any
 1a0:	mov	w0, #0x1                   	// #1
 1a4:	b	1ac <ctf_list_empty_p+0x34>
 1a8:	mov	w0, #0x0                   	// #0
 1ac:	add	sp, sp, #0x10
 1b0:	ret

00000000000001b4 <ctf_sym_to_elf64>:
 1b4:	sub	sp, sp, #0x10
 1b8:	str	x0, [sp, #8]
 1bc:	str	x1, [sp]
 1c0:	ldr	x0, [sp, #8]
 1c4:	ldr	w1, [x0]
 1c8:	ldr	x0, [sp]
 1cc:	str	w1, [x0]
 1d0:	ldr	x0, [sp, #8]
 1d4:	ldr	w0, [x0, #4]
 1d8:	mov	w1, w0
 1dc:	ldr	x0, [sp]
 1e0:	str	x1, [x0, #8]
 1e4:	ldr	x0, [sp, #8]
 1e8:	ldr	w0, [x0, #8]
 1ec:	mov	w1, w0
 1f0:	ldr	x0, [sp]
 1f4:	str	x1, [x0, #16]
 1f8:	ldr	x0, [sp, #8]
 1fc:	ldrb	w1, [x0, #12]
 200:	ldr	x0, [sp]
 204:	strb	w1, [x0, #4]
 208:	ldr	x0, [sp, #8]
 20c:	ldrb	w1, [x0, #13]
 210:	ldr	x0, [sp]
 214:	strb	w1, [x0, #5]
 218:	ldr	x0, [sp, #8]
 21c:	ldrh	w1, [x0, #14]
 220:	ldr	x0, [sp]
 224:	strh	w1, [x0, #6]
 228:	ldr	x0, [sp]
 22c:	add	sp, sp, #0x10
 230:	ret

0000000000000234 <ctf_str_append>:
 234:	stp	x29, x30, [sp, #-48]!
 238:	mov	x29, sp
 23c:	str	x0, [sp, #24]
 240:	str	x1, [sp, #16]
 244:	str	xzr, [sp, #40]
 248:	ldr	x0, [sp, #16]
 24c:	cmp	x0, #0x0
 250:	b.ne	25c <ctf_str_append+0x28>  // b.any
 254:	ldr	x0, [sp, #24]
 258:	b	2e8 <ctf_str_append+0xb4>
 25c:	ldr	x0, [sp, #24]
 260:	cmp	x0, #0x0
 264:	b.eq	274 <ctf_str_append+0x40>  // b.none
 268:	ldr	x0, [sp, #24]
 26c:	bl	0 <strlen>
 270:	str	x0, [sp, #40]
 274:	ldr	x0, [sp, #16]
 278:	bl	0 <strlen>
 27c:	str	x0, [sp, #32]
 280:	ldr	x1, [sp, #40]
 284:	ldr	x0, [sp, #32]
 288:	add	x0, x1, x0
 28c:	add	x0, x0, #0x1
 290:	mov	x1, x0
 294:	ldr	x0, [sp, #24]
 298:	bl	0 <realloc>
 29c:	str	x0, [sp, #24]
 2a0:	ldr	x0, [sp, #24]
 2a4:	cmp	x0, #0x0
 2a8:	b.ne	2b4 <ctf_str_append+0x80>  // b.any
 2ac:	mov	x0, #0x0                   	// #0
 2b0:	b	2e8 <ctf_str_append+0xb4>
 2b4:	ldr	x1, [sp, #24]
 2b8:	ldr	x0, [sp, #40]
 2bc:	add	x0, x1, x0
 2c0:	ldr	x2, [sp, #32]
 2c4:	ldr	x1, [sp, #16]
 2c8:	bl	0 <memcpy>
 2cc:	ldr	x1, [sp, #40]
 2d0:	ldr	x0, [sp, #32]
 2d4:	add	x0, x1, x0
 2d8:	ldr	x1, [sp, #24]
 2dc:	add	x0, x1, x0
 2e0:	strb	wzr, [x0]
 2e4:	ldr	x0, [sp, #24]
 2e8:	ldp	x29, x30, [sp], #48
 2ec:	ret

00000000000002f0 <ctf_str_append_noerr>:
 2f0:	stp	x29, x30, [sp, #-48]!
 2f4:	mov	x29, sp
 2f8:	str	x0, [sp, #24]
 2fc:	str	x1, [sp, #16]
 300:	ldr	x1, [sp, #16]
 304:	ldr	x0, [sp, #24]
 308:	bl	234 <ctf_str_append>
 30c:	str	x0, [sp, #40]
 310:	ldr	x0, [sp, #40]
 314:	cmp	x0, #0x0
 318:	b.ne	324 <ctf_str_append_noerr+0x34>  // b.any
 31c:	ldr	x0, [sp, #24]
 320:	b	328 <ctf_str_append_noerr+0x38>
 324:	ldr	x0, [sp, #40]
 328:	ldp	x29, x30, [sp], #48
 32c:	ret

0000000000000330 <ctf_realloc>:
 330:	stp	x29, x30, [sp, #-48]!
 334:	mov	x29, sp
 338:	str	x0, [sp, #40]
 33c:	str	x1, [sp, #32]
 340:	str	x2, [sp, #24]
 344:	ldr	x0, [sp, #40]
 348:	ldr	x0, [x0, #376]
 34c:	cmp	x0, #0x0
 350:	b.eq	378 <ctf_realloc+0x48>  // b.none
 354:	ldr	x0, [sp, #40]
 358:	ldr	x0, [x0, #376]
 35c:	mov	x2, x0
 360:	ldr	x1, [sp, #40]
 364:	adrp	x0, 0 <ctf_list_append>
 368:	add	x0, x0, #0x0
 36c:	bl	0 <ctf_dprintf>
 370:	mov	x0, #0x0                   	// #0
 374:	b	384 <ctf_realloc+0x54>
 378:	ldr	x1, [sp, #24]
 37c:	ldr	x0, [sp, #32]
 380:	bl	0 <realloc>
 384:	ldp	x29, x30, [sp], #48
 388:	ret

000000000000038c <ctf_set_open_errno>:
 38c:	sub	sp, sp, #0x10
 390:	str	x0, [sp, #8]
 394:	str	w1, [sp, #4]
 398:	ldr	x0, [sp, #8]
 39c:	cmp	x0, #0x0
 3a0:	b.eq	3b0 <ctf_set_open_errno+0x24>  // b.none
 3a4:	ldr	x0, [sp, #8]
 3a8:	ldr	w1, [sp, #4]
 3ac:	str	w1, [x0]
 3b0:	mov	x0, #0x0                   	// #0
 3b4:	add	sp, sp, #0x10
 3b8:	ret

00000000000003bc <ctf_set_errno>:
 3bc:	sub	sp, sp, #0x10
 3c0:	str	x0, [sp, #8]
 3c4:	str	w1, [sp, #4]
 3c8:	ldr	x0, [sp, #8]
 3cc:	ldr	w1, [sp, #4]
 3d0:	str	w1, [x0, #556]
 3d4:	mov	x0, #0xffffffffffffffff    	// #-1
 3d8:	add	sp, sp, #0x10
 3dc:	ret

ctf-open-bfd.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__bswap_16>:
   0:	sub	sp, sp, #0x10
   4:	strh	w0, [sp, #14]
   8:	ldrh	w0, [sp, #14]
   c:	rev16	w0, w0
  10:	and	w0, w0, #0xffff
  14:	add	sp, sp, #0x10
  18:	ret

000000000000001c <__uint64_identity>:
  1c:	sub	sp, sp, #0x10
  20:	str	x0, [sp, #8]
  24:	ldr	x0, [sp, #8]
  28:	add	sp, sp, #0x10
  2c:	ret

0000000000000030 <bfd_section_size>:
  30:	sub	sp, sp, #0x10
  34:	str	x0, [sp, #8]
  38:	ldr	x0, [sp, #8]
  3c:	ldr	x0, [x0, #56]
  40:	add	sp, sp, #0x10
  44:	ret

0000000000000048 <bfd_set_cacheable>:
  48:	sub	sp, sp, #0x10
  4c:	str	x0, [sp, #8]
  50:	str	w1, [sp, #4]
  54:	ldr	w0, [sp, #4]
  58:	and	w0, w0, #0x1
  5c:	and	w2, w0, #0xff
  60:	ldr	x1, [sp, #8]
  64:	ldrb	w0, [x1, #76]
  68:	bfxil	w0, w2, #0, #1
  6c:	strb	w0, [x1, #76]
  70:	mov	w0, #0x1                   	// #1
  74:	add	sp, sp, #0x10
  78:	ret

000000000000007c <ctf_new_archive_internal>:
  7c:	stp	x29, x30, [sp, #-80]!
  80:	mov	x29, sp
  84:	str	w0, [sp, #60]
  88:	str	x1, [sp, #48]
  8c:	str	x2, [sp, #40]
  90:	str	x3, [sp, #32]
  94:	str	x4, [sp, #24]
  98:	str	x5, [sp, #16]
  9c:	mov	x1, #0x70                  	// #112
  a0:	mov	x0, #0x1                   	// #1
  a4:	bl	0 <calloc>
  a8:	str	x0, [sp, #72]
  ac:	ldr	x0, [sp, #72]
  b0:	cmp	x0, #0x0
  b4:	b.ne	f0 <ctf_new_archive_internal+0x74>  // b.any
  b8:	ldr	w0, [sp, #60]
  bc:	cmp	w0, #0x0
  c0:	b.eq	d0 <ctf_new_archive_internal+0x54>  // b.none
  c4:	ldr	x0, [sp, #48]
  c8:	bl	0 <ctf_arc_close_internal>
  cc:	b	d8 <ctf_new_archive_internal+0x5c>
  d0:	ldr	x0, [sp, #40]
  d4:	bl	0 <ctf_file_close>
  d8:	bl	0 <__errno_location>
  dc:	ldr	w0, [x0]
  e0:	mov	w1, w0
  e4:	ldr	x0, [sp, #16]
  e8:	bl	0 <ctf_set_open_errno>
  ec:	b	168 <ctf_new_archive_internal+0xec>
  f0:	ldr	x0, [sp, #72]
  f4:	ldr	w1, [sp, #60]
  f8:	str	w1, [x0]
  fc:	ldr	w0, [sp, #60]
 100:	cmp	w0, #0x0
 104:	b.eq	118 <ctf_new_archive_internal+0x9c>  // b.none
 108:	ldr	x0, [sp, #72]
 10c:	ldr	x1, [sp, #48]
 110:	str	x1, [x0, #16]
 114:	b	124 <ctf_new_archive_internal+0xa8>
 118:	ldr	x0, [sp, #72]
 11c:	ldr	x1, [sp, #40]
 120:	str	x1, [x0, #8]
 124:	ldr	x0, [sp, #32]
 128:	cmp	x0, #0x0
 12c:	b.eq	144 <ctf_new_archive_internal+0xc8>  // b.none
 130:	ldr	x0, [sp, #72]
 134:	add	x0, x0, #0x18
 138:	mov	x2, #0x20                  	// #32
 13c:	ldr	x1, [sp, #32]
 140:	bl	0 <memcpy>
 144:	ldr	x0, [sp, #24]
 148:	cmp	x0, #0x0
 14c:	b.eq	164 <ctf_new_archive_internal+0xe8>  // b.none
 150:	ldr	x0, [sp, #72]
 154:	add	x0, x0, #0x38
 158:	mov	x2, #0x20                  	// #32
 15c:	ldr	x1, [sp, #24]
 160:	bl	0 <memcpy>
 164:	ldr	x0, [sp, #72]
 168:	ldp	x29, x30, [sp], #80
 16c:	ret

0000000000000170 <ctf_bfdclose>:
 170:	stp	x29, x30, [sp, #-32]!
 174:	mov	x29, sp
 178:	str	x0, [sp, #24]
 17c:	ldr	x0, [sp, #24]
 180:	ldr	x0, [x0, #96]
 184:	cmp	x0, #0x0
 188:	b.eq	1b8 <ctf_bfdclose+0x48>  // b.none
 18c:	ldr	x0, [sp, #24]
 190:	ldr	x0, [x0, #96]
 194:	bl	0 <bfd_close_all_done>
 198:	cmp	w0, #0x0
 19c:	b.ne	1b8 <ctf_bfdclose+0x48>  // b.any
 1a0:	bl	0 <bfd_get_error>
 1a4:	bl	0 <bfd_errmsg>
 1a8:	mov	x1, x0
 1ac:	adrp	x0, 0 <__bswap_16>
 1b0:	add	x0, x0, #0x0
 1b4:	bl	0 <ctf_dprintf>
 1b8:	nop
 1bc:	ldp	x29, x30, [sp], #32
 1c0:	ret

00000000000001c4 <ctf_bfdopen>:
 1c4:	stp	x29, x30, [sp, #-96]!
 1c8:	mov	x29, sp
 1cc:	str	x0, [sp, #24]
 1d0:	str	x1, [sp, #16]
 1d4:	bl	0 <libctf_init_debug>
 1d8:	adrp	x0, 0 <_CTF_SECTION>
 1dc:	add	x1, x0, #0x0
 1e0:	ldr	x0, [sp, #24]
 1e4:	bl	0 <bfd_get_section_by_name>
 1e8:	str	x0, [sp, #88]
 1ec:	ldr	x0, [sp, #88]
 1f0:	cmp	x0, #0x0
 1f4:	b.ne	208 <ctf_bfdopen+0x44>  // b.any
 1f8:	mov	w1, #0x3f0                 	// #1008
 1fc:	ldr	x0, [sp, #16]
 200:	bl	0 <ctf_set_open_errno>
 204:	b	2b8 <ctf_bfdopen+0xf4>
 208:	add	x0, sp, #0x48
 20c:	mov	x2, x0
 210:	ldr	x1, [sp, #88]
 214:	ldr	x0, [sp, #24]
 218:	bl	0 <bfd_malloc_and_get_section>
 21c:	cmp	w0, #0x0
 220:	b.ne	24c <ctf_bfdopen+0x88>  // b.any
 224:	bl	0 <bfd_get_error>
 228:	bl	0 <bfd_errmsg>
 22c:	mov	x1, x0
 230:	adrp	x0, 0 <__bswap_16>
 234:	add	x0, x0, #0x0
 238:	bl	0 <ctf_dprintf>
 23c:	mov	w1, #0x3e8                 	// #1000
 240:	ldr	x0, [sp, #16]
 244:	bl	0 <ctf_set_open_errno>
 248:	b	2b8 <ctf_bfdopen+0xf4>
 24c:	adrp	x0, 0 <_CTF_SECTION>
 250:	add	x0, x0, #0x0
 254:	str	x0, [sp, #40]
 258:	mov	x0, #0x1                   	// #1
 25c:	str	x0, [sp, #64]
 260:	ldr	x0, [sp, #88]
 264:	bl	30 <bfd_section_size>
 268:	str	x0, [sp, #56]
 26c:	ldr	x0, [sp, #72]
 270:	str	x0, [sp, #48]
 274:	add	x0, sp, #0x28
 278:	ldr	x2, [sp, #16]
 27c:	mov	x1, x0
 280:	ldr	x0, [sp, #24]
 284:	bl	2c0 <ctf_bfdopen_ctfsect>
 288:	str	x0, [sp, #80]
 28c:	ldr	x0, [sp, #80]
 290:	cmp	x0, #0x0
 294:	b.eq	2ac <ctf_bfdopen+0xe8>  // b.none
 298:	ldr	x1, [sp, #48]
 29c:	ldr	x0, [sp, #80]
 2a0:	str	x1, [x0, #88]
 2a4:	ldr	x0, [sp, #80]
 2a8:	b	2b8 <ctf_bfdopen+0xf4>
 2ac:	ldr	x0, [sp, #72]
 2b0:	bl	0 <free>
 2b4:	mov	x0, #0x0                   	// #0
 2b8:	ldp	x29, x30, [sp], #96
 2bc:	ret

00000000000002c0 <ctf_bfdopen_ctfsect>:
 2c0:	stp	x29, x30, [sp, #-224]!
 2c4:	mov	x29, sp
 2c8:	str	x0, [sp, #40]
 2cc:	str	x1, [sp, #32]
 2d0:	str	x2, [sp, #24]
 2d4:	str	xzr, [sp, #216]
 2d8:	str	xzr, [sp, #208]
 2dc:	str	xzr, [sp, #200]
 2e0:	str	xzr, [sp, #192]
 2e4:	str	xzr, [sp, #184]
 2e8:	ldr	x0, [sp, #40]
 2ec:	ldr	x0, [x0, #248]
 2f0:	add	x0, x0, #0x68
 2f4:	str	x0, [sp, #152]
 2f8:	ldr	x0, [sp, #152]
 2fc:	ldr	x1, [x0, #32]
 300:	ldr	x0, [sp, #152]
 304:	ldr	x0, [x0, #56]
 308:	udiv	x0, x1, x0
 30c:	str	x0, [sp, #144]
 310:	str	xzr, [sp, #160]
 314:	ldr	x0, [sp, #152]
 318:	ldr	x0, [x0, #32]
 31c:	bl	0 <malloc>
 320:	str	x0, [sp, #136]
 324:	ldr	x0, [sp, #136]
 328:	cmp	x0, #0x0
 32c:	b.ne	340 <ctf_bfdopen_ctfsect+0x80>  // b.any
 330:	adrp	x0, 0 <__bswap_16>
 334:	add	x0, x0, #0x0
 338:	str	x0, [sp, #184]
 33c:	b	5d8 <ctf_bfdopen_ctfsect+0x318>
 340:	mov	x6, #0x0                   	// #0
 344:	ldr	x5, [sp, #136]
 348:	mov	x4, #0x0                   	// #0
 34c:	mov	x3, #0x0                   	// #0
 350:	ldr	x2, [sp, #144]
 354:	ldr	x1, [sp, #152]
 358:	ldr	x0, [sp, #40]
 35c:	bl	0 <bfd_elf_get_elf_syms>
 360:	str	x0, [sp, #128]
 364:	ldr	x0, [sp, #128]
 368:	bl	0 <free>
 36c:	ldr	x0, [sp, #128]
 370:	cmp	x0, #0x0
 374:	b.ne	388 <ctf_bfdopen_ctfsect+0xc8>  // b.any
 378:	adrp	x0, 0 <__bswap_16>
 37c:	add	x0, x0, #0x0
 380:	str	x0, [sp, #184]
 384:	b	5d0 <ctf_bfdopen_ctfsect+0x310>
 388:	ldr	x0, [sp, #40]
 38c:	ldr	x0, [x0, #248]
 390:	ldr	x0, [x0, #88]
 394:	cmp	x0, #0x0
 398:	b.eq	430 <ctf_bfdopen_ctfsect+0x170>  // b.none
 39c:	ldr	x0, [sp, #152]
 3a0:	ldr	w1, [x0, #40]
 3a4:	ldr	x0, [sp, #40]
 3a8:	ldr	x0, [x0, #248]
 3ac:	ldr	w0, [x0, #764]
 3b0:	cmp	w1, w0
 3b4:	b.cs	430 <ctf_bfdopen_ctfsect+0x170>  // b.hs, b.nlast
 3b8:	ldr	x0, [sp, #40]
 3bc:	ldr	x0, [x0, #248]
 3c0:	ldr	x1, [x0, #88]
 3c4:	ldr	x0, [sp, #152]
 3c8:	ldr	w0, [x0, #40]
 3cc:	mov	w0, w0
 3d0:	lsl	x0, x0, #3
 3d4:	add	x0, x1, x0
 3d8:	ldr	x0, [x0]
 3dc:	str	x0, [sp, #168]
 3e0:	ldr	x0, [sp, #168]
 3e4:	ldr	x0, [x0, #72]
 3e8:	cmp	x0, #0x0
 3ec:	b.ne	424 <ctf_bfdopen_ctfsect+0x164>  // b.any
 3f0:	ldr	x0, [sp, #152]
 3f4:	ldr	w0, [x0, #40]
 3f8:	mov	w1, w0
 3fc:	ldr	x0, [sp, #40]
 400:	bl	0 <bfd_elf_get_str_section>
 404:	str	x0, [sp, #160]
 408:	ldr	x0, [sp, #160]
 40c:	cmp	x0, #0x0
 410:	b.ne	430 <ctf_bfdopen_ctfsect+0x170>  // b.any
 414:	adrp	x0, 0 <__bswap_16>
 418:	add	x0, x0, #0x0
 41c:	str	x0, [sp, #184]
 420:	b	5d0 <ctf_bfdopen_ctfsect+0x310>
 424:	ldr	x0, [sp, #168]
 428:	ldr	x0, [x0, #72]
 42c:	str	x0, [sp, #160]
 430:	ldr	x0, [sp, #160]
 434:	cmp	x0, #0x0
 438:	b.eq	4e0 <ctf_bfdopen_ctfsect+0x220>  // b.none
 43c:	ldr	x0, [sp, #160]
 440:	str	x0, [sp, #64]
 444:	adrp	x0, 0 <__bswap_16>
 448:	add	x0, x0, #0x0
 44c:	str	x0, [sp, #56]
 450:	ldr	x0, [sp, #168]
 454:	ldr	x0, [x0, #32]
 458:	str	x0, [sp, #72]
 45c:	add	x0, sp, #0x38
 460:	str	x0, [sp, #192]
 464:	ldr	x0, [sp, #152]
 468:	ldr	x1, [x0, #56]
 46c:	ldr	x0, [sp, #40]
 470:	ldr	x0, [x0, #8]
 474:	ldr	x0, [x0, #880]
 478:	ldr	x0, [x0, #784]
 47c:	ldrb	w0, [x0, #5]
 480:	and	x0, x0, #0xff
 484:	cmp	x1, x0
 488:	b.eq	4ac <ctf_bfdopen_ctfsect+0x1ec>  // b.none
 48c:	adrp	x0, 0 <__bswap_16>
 490:	add	x3, x0, #0x0
 494:	mov	w2, #0xba                  	// #186
 498:	adrp	x0, 0 <__bswap_16>
 49c:	add	x1, x0, #0x0
 4a0:	adrp	x0, 0 <__bswap_16>
 4a4:	add	x0, x0, #0x0
 4a8:	bl	0 <__assert_fail>
 4ac:	adrp	x0, 0 <__bswap_16>
 4b0:	add	x0, x0, #0x0
 4b4:	str	x0, [sp, #88]
 4b8:	ldr	x0, [sp, #152]
 4bc:	ldr	x0, [x0, #56]
 4c0:	str	x0, [sp, #112]
 4c4:	ldr	x0, [sp, #152]
 4c8:	ldr	x0, [x0, #32]
 4cc:	str	x0, [sp, #104]
 4d0:	ldr	x0, [sp, #136]
 4d4:	str	x0, [sp, #96]
 4d8:	add	x0, sp, #0x58
 4dc:	str	x0, [sp, #200]
 4e0:	ldr	x0, [sp, #32]
 4e4:	ldr	x0, [x0, #16]
 4e8:	cmp	x0, #0x8
 4ec:	b.ls	550 <ctf_bfdopen_ctfsect+0x290>  // b.plast
 4f0:	ldr	x0, [sp, #32]
 4f4:	ldr	x0, [x0, #8]
 4f8:	ldr	x1, [x0]
 4fc:	mov	x0, #0x3eeb                	// #16107
 500:	movk	x0, #0xd762, lsl #16
 504:	movk	x0, #0xf2a4, lsl #32
 508:	movk	x0, #0x8b47, lsl #48
 50c:	cmp	x1, x0
 510:	b.ne	550 <ctf_bfdopen_ctfsect+0x290>  // b.any
 514:	mov	w0, #0x1                   	// #1
 518:	str	w0, [sp, #180]
 51c:	ldr	x0, [sp, #32]
 520:	ldr	x3, [x0, #8]
 524:	ldr	x0, [sp, #32]
 528:	ldr	x0, [x0, #16]
 52c:	ldr	x2, [sp, #24]
 530:	mov	x1, x0
 534:	mov	x0, x3
 538:	bl	0 <ctf_arc_bufopen>
 53c:	str	x0, [sp, #216]
 540:	ldr	x0, [sp, #216]
 544:	cmp	x0, #0x0
 548:	b.ne	598 <ctf_bfdopen_ctfsect+0x2d8>  // b.any
 54c:	b	5d0 <ctf_bfdopen_ctfsect+0x310>
 550:	str	wzr, [sp, #180]
 554:	ldr	x3, [sp, #24]
 558:	ldr	x2, [sp, #192]
 55c:	ldr	x1, [sp, #200]
 560:	ldr	x0, [sp, #32]
 564:	bl	0 <ctf_bufopen>
 568:	str	x0, [sp, #208]
 56c:	ldr	x0, [sp, #208]
 570:	cmp	x0, #0x0
 574:	b.ne	598 <ctf_bfdopen_ctfsect+0x2d8>  // b.any
 578:	ldr	x0, [sp, #24]
 57c:	ldr	w0, [x0]
 580:	bl	0 <ctf_errmsg>
 584:	mov	x1, x0
 588:	adrp	x0, 0 <__bswap_16>
 58c:	add	x0, x0, #0x0
 590:	bl	0 <ctf_dprintf>
 594:	b	5d0 <ctf_bfdopen_ctfsect+0x310>
 598:	ldr	x5, [sp, #24]
 59c:	ldr	x4, [sp, #192]
 5a0:	ldr	x3, [sp, #200]
 5a4:	ldr	x2, [sp, #208]
 5a8:	ldr	x1, [sp, #216]
 5ac:	ldr	w0, [sp, #180]
 5b0:	bl	7c <ctf_new_archive_internal>
 5b4:	str	x0, [sp, #120]
 5b8:	ldr	x0, [sp, #120]
 5bc:	cmp	x0, #0x0
 5c0:	b.eq	5cc <ctf_bfdopen_ctfsect+0x30c>  // b.none
 5c4:	ldr	x0, [sp, #120]
 5c8:	b	610 <ctf_bfdopen_ctfsect+0x350>
 5cc:	nop
 5d0:	ldr	x0, [sp, #136]
 5d4:	bl	0 <free>
 5d8:	ldr	x0, [sp, #184]
 5dc:	cmp	x0, #0x0
 5e0:	b.eq	60c <ctf_bfdopen_ctfsect+0x34c>  // b.none
 5e4:	bl	0 <bfd_get_error>
 5e8:	bl	0 <bfd_errmsg>
 5ec:	mov	x2, x0
 5f0:	ldr	x1, [sp, #184]
 5f4:	adrp	x0, 0 <__bswap_16>
 5f8:	add	x0, x0, #0x0
 5fc:	bl	0 <ctf_dprintf>
 600:	mov	w1, #0x3e8                 	// #1000
 604:	ldr	x0, [sp, #24]
 608:	bl	0 <ctf_set_open_errno>
 60c:	mov	x0, #0x0                   	// #0
 610:	ldp	x29, x30, [sp], #224
 614:	ret

0000000000000618 <ctf_fdopen>:
 618:	stp	x29, x30, [sp, #-272]!
 61c:	mov	x29, sp
 620:	str	x19, [sp, #16]
 624:	str	w0, [sp, #60]
 628:	str	x1, [sp, #48]
 62c:	str	x2, [sp, #40]
 630:	str	x3, [sp, #32]
 634:	add	x0, sp, #0x50
 638:	mov	x2, #0x4                   	// #4
 63c:	mov	w1, #0x0                   	// #0
 640:	bl	0 <memset>
 644:	bl	0 <libctf_init_debug>
 648:	add	x0, sp, #0x58
 64c:	mov	x1, x0
 650:	ldr	w0, [sp, #60]
 654:	bl	0 <fstat>
 658:	cmn	w0, #0x1
 65c:	b.ne	678 <ctf_fdopen+0x60>  // b.any
 660:	bl	0 <__errno_location>
 664:	ldr	w0, [x0]
 668:	mov	w1, w0
 66c:	ldr	x0, [sp, #32]
 670:	bl	0 <ctf_set_open_errno>
 674:	b	a18 <ctf_fdopen+0x400>
 678:	add	x0, sp, #0x50
 67c:	mov	x3, #0x0                   	// #0
 680:	mov	x2, #0x4                   	// #4
 684:	mov	x1, x0
 688:	ldr	w0, [sp, #60]
 68c:	bl	0 <ctf_pread>
 690:	str	x0, [sp, #264]
 694:	ldr	x0, [sp, #264]
 698:	cmp	x0, #0x0
 69c:	b.gt	6cc <ctf_fdopen+0xb4>
 6a0:	ldr	x0, [sp, #264]
 6a4:	cmp	x0, #0x0
 6a8:	b.ge	6b8 <ctf_fdopen+0xa0>  // b.tcont
 6ac:	bl	0 <__errno_location>
 6b0:	ldr	w0, [x0]
 6b4:	b	6bc <ctf_fdopen+0xa4>
 6b8:	mov	w0, #0x3e8                 	// #1000
 6bc:	mov	w1, w0
 6c0:	ldr	x0, [sp, #32]
 6c4:	bl	0 <ctf_set_open_errno>
 6c8:	b	a18 <ctf_fdopen+0x400>
 6cc:	ldr	x0, [sp, #264]
 6d0:	cmp	x0, #0x3
 6d4:	b.ls	7c8 <ctf_fdopen+0x1b0>  // b.plast
 6d8:	ldrh	w1, [sp, #80]
 6dc:	mov	w0, #0xdff2                	// #57330
 6e0:	cmp	w1, w0
 6e4:	b.eq	700 <ctf_fdopen+0xe8>  // b.none
 6e8:	ldrh	w19, [sp, #80]
 6ec:	mov	w0, #0xffffdff2            	// #-8206
 6f0:	bl	0 <__bswap_16>
 6f4:	and	w0, w0, #0xffff
 6f8:	cmp	w19, w0
 6fc:	b.ne	7c8 <ctf_fdopen+0x1b0>  // b.any
 700:	str	xzr, [sp, #256]
 704:	ldr	x0, [sp, #136]
 708:	ldr	w2, [sp, #60]
 70c:	mov	x1, #0x0                   	// #0
 710:	bl	0 <ctf_mmap>
 714:	str	x0, [sp, #248]
 718:	ldr	x0, [sp, #248]
 71c:	cmp	x0, #0x0
 720:	b.ne	73c <ctf_fdopen+0x124>  // b.any
 724:	bl	0 <__errno_location>
 728:	ldr	w0, [x0]
 72c:	mov	w1, w0
 730:	ldr	x0, [sp, #32]
 734:	bl	0 <ctf_set_open_errno>
 738:	b	a18 <ctf_fdopen+0x400>
 73c:	ldr	x0, [sp, #136]
 740:	ldr	x7, [sp, #32]
 744:	mov	x6, #0x0                   	// #0
 748:	mov	x5, #0x0                   	// #0
 74c:	mov	x4, #0x0                   	// #0
 750:	mov	x3, #0x0                   	// #0
 754:	mov	x2, #0x0                   	// #0
 758:	mov	x1, x0
 75c:	ldr	x0, [sp, #248]
 760:	bl	0 <ctf_simple_open>
 764:	str	x0, [sp, #256]
 768:	ldr	x0, [sp, #256]
 76c:	cmp	x0, #0x0
 770:	b.ne	78c <ctf_fdopen+0x174>  // b.any
 774:	ldr	x0, [sp, #136]
 778:	mov	x1, x0
 77c:	ldr	x0, [sp, #248]
 780:	bl	0 <ctf_munmap>
 784:	mov	x0, #0x0                   	// #0
 788:	b	a18 <ctf_fdopen+0x400>
 78c:	ldr	x0, [sp, #256]
 790:	ldr	x1, [sp, #248]
 794:	str	x1, [x0, #136]
 798:	ldr	x0, [sp, #136]
 79c:	mov	x1, x0
 7a0:	ldr	x0, [sp, #256]
 7a4:	str	x1, [x0, #144]
 7a8:	ldr	x5, [sp, #32]
 7ac:	mov	x4, #0x0                   	// #0
 7b0:	mov	x3, #0x0                   	// #0
 7b4:	ldr	x2, [sp, #256]
 7b8:	mov	x1, #0x0                   	// #0
 7bc:	mov	w0, #0x0                   	// #0
 7c0:	bl	7c <ctf_new_archive_internal>
 7c4:	b	a18 <ctf_fdopen+0x400>
 7c8:	add	x0, sp, #0x48
 7cc:	mov	x3, #0x0                   	// #0
 7d0:	mov	x2, #0x8                   	// #8
 7d4:	mov	x1, x0
 7d8:	ldr	w0, [sp, #60]
 7dc:	bl	0 <ctf_pread>
 7e0:	str	x0, [sp, #264]
 7e4:	ldr	x0, [sp, #264]
 7e8:	cmp	x0, #0x0
 7ec:	b.gt	81c <ctf_fdopen+0x204>
 7f0:	ldr	x0, [sp, #264]
 7f4:	cmp	x0, #0x0
 7f8:	b.ge	808 <ctf_fdopen+0x1f0>  // b.tcont
 7fc:	bl	0 <__errno_location>
 800:	ldr	w0, [x0]
 804:	b	80c <ctf_fdopen+0x1f4>
 808:	mov	w0, #0x3e8                 	// #1000
 80c:	mov	w1, w0
 810:	ldr	x0, [sp, #32]
 814:	bl	0 <ctf_set_open_errno>
 818:	b	a18 <ctf_fdopen+0x400>
 81c:	ldr	x0, [sp, #264]
 820:	cmp	x0, #0x7
 824:	b.ls	890 <ctf_fdopen+0x278>  // b.plast
 828:	ldr	x0, [sp, #72]
 82c:	bl	1c <__uint64_identity>
 830:	mov	x1, x0
 834:	mov	x0, #0x3eeb                	// #16107
 838:	movk	x0, #0xd762, lsl #16
 83c:	movk	x0, #0xf2a4, lsl #32
 840:	movk	x0, #0x8b47, lsl #48
 844:	cmp	x1, x0
 848:	b.ne	890 <ctf_fdopen+0x278>  // b.any
 84c:	ldr	x1, [sp, #32]
 850:	ldr	x0, [sp, #48]
 854:	bl	0 <ctf_arc_open_internal>
 858:	str	x0, [sp, #240]
 85c:	ldr	x0, [sp, #240]
 860:	cmp	x0, #0x0
 864:	b.ne	870 <ctf_fdopen+0x258>  // b.any
 868:	mov	x0, #0x0                   	// #0
 86c:	b	a18 <ctf_fdopen+0x400>
 870:	ldr	x5, [sp, #32]
 874:	mov	x4, #0x0                   	// #0
 878:	mov	x3, #0x0                   	// #0
 87c:	mov	x2, #0x0                   	// #0
 880:	ldr	x1, [sp, #240]
 884:	mov	w0, #0x1                   	// #1
 888:	bl	7c <ctf_new_archive_internal>
 88c:	b	a18 <ctf_fdopen+0x400>
 890:	ldr	w0, [sp, #60]
 894:	bl	0 <dup>
 898:	str	w0, [sp, #236]
 89c:	ldr	w0, [sp, #236]
 8a0:	cmp	w0, #0x0
 8a4:	b.ge	8c0 <ctf_fdopen+0x2a8>  // b.tcont
 8a8:	bl	0 <__errno_location>
 8ac:	ldr	w0, [x0]
 8b0:	mov	w1, w0
 8b4:	ldr	x0, [sp, #32]
 8b8:	bl	0 <ctf_set_open_errno>
 8bc:	b	a18 <ctf_fdopen+0x400>
 8c0:	ldr	w2, [sp, #236]
 8c4:	ldr	x1, [sp, #40]
 8c8:	ldr	x0, [sp, #48]
 8cc:	bl	0 <bfd_fdopenr>
 8d0:	str	x0, [sp, #224]
 8d4:	ldr	x0, [sp, #224]
 8d8:	cmp	x0, #0x0
 8dc:	b.ne	928 <ctf_fdopen+0x310>  // b.any
 8e0:	ldr	x0, [sp, #48]
 8e4:	cmp	x0, #0x0
 8e8:	b.eq	8f4 <ctf_fdopen+0x2dc>  // b.none
 8ec:	ldr	x19, [sp, #48]
 8f0:	b	8fc <ctf_fdopen+0x2e4>
 8f4:	adrp	x0, 0 <__bswap_16>
 8f8:	add	x19, x0, #0x0
 8fc:	bl	0 <bfd_get_error>
 900:	bl	0 <bfd_errmsg>
 904:	mov	x2, x0
 908:	mov	x1, x19
 90c:	adrp	x0, 0 <__bswap_16>
 910:	add	x0, x0, #0x0
 914:	bl	0 <ctf_dprintf>
 918:	mov	w1, #0x3e8                 	// #1000
 91c:	ldr	x0, [sp, #32]
 920:	bl	0 <ctf_set_open_errno>
 924:	b	a18 <ctf_fdopen+0x400>
 928:	mov	w1, #0x1                   	// #1
 92c:	ldr	x0, [sp, #224]
 930:	bl	48 <bfd_set_cacheable>
 934:	mov	w1, #0x1                   	// #1
 938:	ldr	x0, [sp, #224]
 93c:	bl	0 <bfd_check_format>
 940:	cmp	w0, #0x0
 944:	b.ne	9ac <ctf_fdopen+0x394>  // b.any
 948:	ldr	x0, [sp, #48]
 94c:	cmp	x0, #0x0
 950:	b.eq	95c <ctf_fdopen+0x344>  // b.none
 954:	ldr	x19, [sp, #48]
 958:	b	964 <ctf_fdopen+0x34c>
 95c:	adrp	x0, 0 <__bswap_16>
 960:	add	x19, x0, #0x0
 964:	bl	0 <bfd_get_error>
 968:	bl	0 <bfd_errmsg>
 96c:	mov	x2, x0
 970:	mov	x1, x19
 974:	adrp	x0, 0 <__bswap_16>
 978:	add	x0, x0, #0x0
 97c:	bl	0 <ctf_dprintf>
 980:	bl	0 <bfd_get_error>
 984:	cmp	w0, #0xd
 988:	b.ne	99c <ctf_fdopen+0x384>  // b.any
 98c:	mov	w1, #0x3eb                 	// #1003
 990:	ldr	x0, [sp, #32]
 994:	bl	0 <ctf_set_open_errno>
 998:	b	a18 <ctf_fdopen+0x400>
 99c:	mov	w1, #0x3e8                 	// #1000
 9a0:	ldr	x0, [sp, #32]
 9a4:	bl	0 <ctf_set_open_errno>
 9a8:	b	a18 <ctf_fdopen+0x400>
 9ac:	ldr	x1, [sp, #32]
 9b0:	ldr	x0, [sp, #224]
 9b4:	bl	1c4 <ctf_bfdopen>
 9b8:	str	x0, [sp, #216]
 9bc:	ldr	x0, [sp, #216]
 9c0:	cmp	x0, #0x0
 9c4:	b.ne	9f8 <ctf_fdopen+0x3e0>  // b.any
 9c8:	ldr	x0, [sp, #224]
 9cc:	bl	0 <bfd_close_all_done>
 9d0:	cmp	w0, #0x0
 9d4:	b.ne	9f0 <ctf_fdopen+0x3d8>  // b.any
 9d8:	bl	0 <bfd_get_error>
 9dc:	bl	0 <bfd_errmsg>
 9e0:	mov	x1, x0
 9e4:	adrp	x0, 0 <__bswap_16>
 9e8:	add	x0, x0, #0x0
 9ec:	bl	0 <ctf_dprintf>
 9f0:	mov	x0, #0x0                   	// #0
 9f4:	b	a18 <ctf_fdopen+0x400>
 9f8:	ldr	x0, [sp, #216]
 9fc:	adrp	x1, 0 <__bswap_16>
 a00:	add	x1, x1, #0x0
 a04:	str	x1, [x0, #104]
 a08:	ldr	x0, [sp, #216]
 a0c:	ldr	x1, [sp, #224]
 a10:	str	x1, [x0, #96]
 a14:	ldr	x0, [sp, #216]
 a18:	ldr	x19, [sp, #16]
 a1c:	ldp	x29, x30, [sp], #272
 a20:	ret

0000000000000a24 <ctf_open>:
 a24:	stp	x29, x30, [sp, #-64]!
 a28:	mov	x29, sp
 a2c:	str	x0, [sp, #40]
 a30:	str	x1, [sp, #32]
 a34:	str	x2, [sp, #24]
 a38:	mov	w1, #0x0                   	// #0
 a3c:	ldr	x0, [sp, #40]
 a40:	bl	0 <open>
 a44:	str	w0, [sp, #60]
 a48:	ldr	w0, [sp, #60]
 a4c:	cmn	w0, #0x1
 a50:	b.ne	a78 <ctf_open+0x54>  // b.any
 a54:	ldr	x0, [sp, #24]
 a58:	cmp	x0, #0x0
 a5c:	b.eq	a70 <ctf_open+0x4c>  // b.none
 a60:	bl	0 <__errno_location>
 a64:	ldr	w1, [x0]
 a68:	ldr	x0, [sp, #24]
 a6c:	str	w1, [x0]
 a70:	mov	x0, #0x0                   	// #0
 a74:	b	a9c <ctf_open+0x78>
 a78:	ldr	x3, [sp, #24]
 a7c:	ldr	x2, [sp, #32]
 a80:	ldr	x1, [sp, #40]
 a84:	ldr	w0, [sp, #60]
 a88:	bl	618 <ctf_fdopen>
 a8c:	str	x0, [sp, #48]
 a90:	ldr	w0, [sp, #60]
 a94:	bl	0 <close>
 a98:	ldr	x0, [sp, #48]
 a9c:	ldp	x29, x30, [sp], #64
 aa0:	ret

0000000000000aa4 <ctf_arc_open>:
 aa4:	stp	x29, x30, [sp, #-32]!
 aa8:	mov	x29, sp
 aac:	str	x0, [sp, #24]
 ab0:	str	x1, [sp, #16]
 ab4:	ldr	x2, [sp, #16]
 ab8:	mov	x1, #0x0                   	// #0
 abc:	ldr	x0, [sp, #24]
 ac0:	bl	a24 <ctf_open>
 ac4:	ldp	x29, x30, [sp], #32
 ac8:	ret
