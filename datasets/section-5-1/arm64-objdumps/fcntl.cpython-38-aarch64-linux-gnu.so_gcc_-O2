
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x11340>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0xc70>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	nop
    1068:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12340>
    106c:	add	x0, x0, #0x1e8
    1070:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12340>
    1074:	add	x1, x1, #0x1e8
    1078:	cmp	x1, x0
    107c:	b.eq	1094 <ioctl@plt+0x54>  // b.none
    1080:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11340>
    1084:	ldr	x1, [x1, #4000]
    1088:	cbz	x1, 1094 <ioctl@plt+0x54>
    108c:	mov	x16, x1
    1090:	br	x16
    1094:	ret
    1098:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12340>
    109c:	add	x0, x0, #0x1e8
    10a0:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12340>
    10a4:	add	x1, x1, #0x1e8
    10a8:	sub	x1, x1, x0
    10ac:	lsr	x2, x1, #63
    10b0:	add	x1, x2, x1, asr #3
    10b4:	cmp	xzr, x1, asr #1
    10b8:	asr	x1, x1, #1
    10bc:	b.eq	10d4 <ioctl@plt+0x94>  // b.none
    10c0:	adrp	x2, 13000 <PyInit_fcntl@@Base+0x11340>
    10c4:	ldr	x2, [x2, #4064]
    10c8:	cbz	x2, 10d4 <ioctl@plt+0x94>
    10cc:	mov	x16, x2
    10d0:	br	x16
    10d4:	ret
    10d8:	stp	x29, x30, [sp, #-32]!
    10dc:	mov	x29, sp
    10e0:	str	x19, [sp, #16]
    10e4:	adrp	x19, 14000 <PyInit_fcntl@@Base+0x12340>
    10e8:	ldrb	w0, [x19, #488]
    10ec:	cbnz	w0, 1114 <ioctl@plt+0xd4>
    10f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    10f4:	ldr	x0, [x0, #4016]
    10f8:	cbz	x0, 1108 <ioctl@plt+0xc8>
    10fc:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12340>
    1100:	ldr	x0, [x0, #216]
    1104:	bl	ef0 <__cxa_finalize@plt>
    1108:	bl	1068 <ioctl@plt+0x28>
    110c:	mov	w0, #0x1                   	// #1
    1110:	strb	w0, [x19, #488]
    1114:	ldr	x19, [sp, #16]
    1118:	ldp	x29, x30, [sp], #32
    111c:	ret
    1120:	b	1098 <ioctl@plt+0x58>
    1124:	nop
    1128:	stp	x29, x30, [sp, #-112]!
    112c:	sub	x0, x2, #0x2
    1130:	cmp	x0, #0x3
    1134:	mov	x29, sp
    1138:	stp	x19, x20, [sp, #16]
    113c:	mov	x19, x1
    1140:	stp	x21, x22, [sp, #32]
    1144:	mov	x22, x2
    1148:	b.ls	1168 <ioctl@plt+0x128>  // b.plast
    114c:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x340>
    1150:	mov	x1, x22
    1154:	add	x0, x0, #0x170
    1158:	mov	x3, #0x5                   	// #5
    115c:	mov	x2, #0x2                   	// #2
    1160:	bl	f80 <_PyArg_CheckPositional@plt>
    1164:	cbz	w0, 1318 <ioctl@plt+0x2d8>
    1168:	ldr	x0, [x19]
    116c:	stp	x23, x24, [sp, #48]
    1170:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1174:	mov	w23, w0
    1178:	tbnz	w0, #31, 132c <ioctl@plt+0x2ec>
    117c:	ldr	x0, [x19, #8]
    1180:	adrp	x24, 13000 <PyInit_fcntl@@Base+0x11340>
    1184:	ldr	x1, [x24, #4008]
    1188:	ldr	x0, [x0, #8]
    118c:	cmp	x0, x1
    1190:	b.eq	12d4 <ioctl@plt+0x294>  // b.none
    1194:	bl	1010 <PyType_IsSubtype@plt>
    1198:	mov	w20, w0
    119c:	cbnz	w0, 12d4 <ioctl@plt+0x294>
    11a0:	ldr	x0, [x19, #8]
    11a4:	stp	x25, x26, [sp, #64]
    11a8:	bl	1030 <_PyLong_AsInt@plt>
    11ac:	mov	w21, w0
    11b0:	cmn	w0, #0x1
    11b4:	b.eq	1394 <ioctl@plt+0x354>  // b.none
    11b8:	cmp	x22, #0x2
    11bc:	b.le	1380 <ioctl@plt+0x340>
    11c0:	cmp	x22, #0x3
    11c4:	ldr	x26, [x19, #16]
    11c8:	b.eq	13e0 <ioctl@plt+0x3a0>  // b.none
    11cc:	cmp	x22, #0x4
    11d0:	ldr	x25, [x19, #24]
    11d4:	b.eq	1208 <ioctl@plt+0x1c8>  // b.none
    11d8:	ldr	x0, [x19, #32]
    11dc:	ldr	x1, [x24, #4008]
    11e0:	ldr	x0, [x0, #8]
    11e4:	cmp	x0, x1
    11e8:	b.eq	13b8 <ioctl@plt+0x378>  // b.none
    11ec:	bl	1010 <PyType_IsSubtype@plt>
    11f0:	cbnz	w0, 13b8 <ioctl@plt+0x378>
    11f4:	ldr	x0, [x19, #32]
    11f8:	bl	1030 <_PyLong_AsInt@plt>
    11fc:	mov	w20, w0
    1200:	cmn	w0, #0x1
    1204:	b.eq	1304 <ioctl@plt+0x2c4>  // b.none
    1208:	cmp	w21, #0x8
    120c:	b.eq	1338 <ioctl@plt+0x2f8>  // b.none
    1210:	tbnz	w21, #0, 1378 <ioctl@plt+0x338>
    1214:	tbz	w21, #1, 1410 <ioctl@plt+0x3d0>
    1218:	mov	w0, #0x1                   	// #1
    121c:	strh	w0, [sp, #80]
    1220:	stp	xzr, xzr, [sp, #88]
    1224:	cbnz	x25, 1348 <ioctl@plt+0x308>
    1228:	cbz	x26, 1240 <ioctl@plt+0x200>
    122c:	mov	x0, x26
    1230:	bl	fb0 <PyLong_AsLong@plt>
    1234:	str	x0, [sp, #96]
    1238:	bl	f90 <PyErr_Occurred@plt>
    123c:	cbnz	x0, 135c <ioctl@plt+0x31c>
    1240:	tst	x21, #0x4
    1244:	mov	w0, #0x7                   	// #7
    1248:	mov	w21, #0x6                   	// #6
    124c:	add	x22, sp, #0x50
    1250:	csel	w21, w21, w0, ne  // ne = any
    1254:	strh	w20, [sp, #82]
    1258:	b	1274 <ioctl@plt+0x234>
    125c:	bl	1020 <__errno_location@plt>
    1260:	ldr	w0, [x0]
    1264:	cmp	w0, #0x4
    1268:	b.ne	13f4 <ioctl@plt+0x3b4>  // b.any
    126c:	bl	1000 <PyErr_CheckSignals@plt>
    1270:	cbnz	w0, 135c <ioctl@plt+0x31c>
    1274:	bl	fe0 <PyEval_SaveThread@plt>
    1278:	mov	x20, x0
    127c:	mov	x2, x22
    1280:	mov	w1, w21
    1284:	mov	w0, w23
    1288:	bl	fd0 <fcntl64@plt>
    128c:	mov	w19, w0
    1290:	mov	x0, x20
    1294:	bl	ec0 <PyEval_RestoreThread@plt>
    1298:	cmn	w19, #0x1
    129c:	b.eq	125c <ioctl@plt+0x21c>  // b.none
    12a0:	tbnz	w19, #31, 13f4 <ioctl@plt+0x3b4>
    12a4:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11340>
    12a8:	ldp	x23, x24, [sp, #48]
    12ac:	ldr	x1, [x1, #4056]
    12b0:	ldp	x25, x26, [sp, #64]
    12b4:	mov	x0, x1
    12b8:	ldr	x2, [x1]
    12bc:	ldp	x19, x20, [sp, #16]
    12c0:	add	x2, x2, #0x1
    12c4:	str	x2, [x1]
    12c8:	ldp	x21, x22, [sp, #32]
    12cc:	ldp	x29, x30, [sp], #112
    12d0:	ret
    12d4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    12d8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    12dc:	add	x1, x1, #0x178
    12e0:	ldr	x0, [x0, #4032]
    12e4:	ldr	x0, [x0]
    12e8:	bl	f10 <PyErr_SetString@plt>
    12ec:	ldp	x23, x24, [sp, #48]
    12f0:	mov	x0, #0x0                   	// #0
    12f4:	ldp	x19, x20, [sp, #16]
    12f8:	ldp	x21, x22, [sp, #32]
    12fc:	ldp	x29, x30, [sp], #112
    1300:	ret
    1304:	bl	f90 <PyErr_Occurred@plt>
    1308:	cbz	x0, 1208 <ioctl@plt+0x1c8>
    130c:	nop
    1310:	ldp	x23, x24, [sp, #48]
    1314:	ldp	x25, x26, [sp, #64]
    1318:	mov	x0, #0x0                   	// #0
    131c:	ldp	x19, x20, [sp, #16]
    1320:	ldp	x21, x22, [sp, #32]
    1324:	ldp	x29, x30, [sp], #112
    1328:	ret
    132c:	mov	x0, #0x0                   	// #0
    1330:	ldp	x23, x24, [sp, #48]
    1334:	b	131c <ioctl@plt+0x2dc>
    1338:	mov	w0, #0x2                   	// #2
    133c:	strh	w0, [sp, #80]
    1340:	stp	xzr, xzr, [sp, #88]
    1344:	cbz	x25, 1228 <ioctl@plt+0x1e8>
    1348:	mov	x0, x25
    134c:	bl	fb0 <PyLong_AsLong@plt>
    1350:	str	x0, [sp, #88]
    1354:	bl	f90 <PyErr_Occurred@plt>
    1358:	cbz	x0, 1228 <ioctl@plt+0x1e8>
    135c:	mov	x0, #0x0                   	// #0
    1360:	ldp	x19, x20, [sp, #16]
    1364:	ldp	x21, x22, [sp, #32]
    1368:	ldp	x23, x24, [sp, #48]
    136c:	ldp	x25, x26, [sp, #64]
    1370:	ldp	x29, x30, [sp], #112
    1374:	ret
    1378:	strh	wzr, [sp, #80]
    137c:	b	1340 <ioctl@plt+0x300>
    1380:	cmp	w21, #0x8
    1384:	mov	x25, #0x0                   	// #0
    1388:	mov	x26, #0x0                   	// #0
    138c:	b.ne	1210 <ioctl@plt+0x1d0>  // b.any
    1390:	b	1338 <ioctl@plt+0x2f8>
    1394:	bl	f90 <PyErr_Occurred@plt>
    1398:	mov	x25, x0
    139c:	cbnz	x0, 1310 <ioctl@plt+0x2d0>
    13a0:	cmp	x22, #0x2
    13a4:	b.le	13e8 <ioctl@plt+0x3a8>
    13a8:	cmp	x22, #0x3
    13ac:	ldr	x26, [x19, #16]
    13b0:	b.ne	11cc <ioctl@plt+0x18c>  // b.any
    13b4:	b	1210 <ioctl@plt+0x1d0>
    13b8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    13bc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    13c0:	add	x1, x1, #0x178
    13c4:	ldr	x0, [x0, #4032]
    13c8:	ldr	x0, [x0]
    13cc:	bl	f10 <PyErr_SetString@plt>
    13d0:	mov	x0, #0x0                   	// #0
    13d4:	ldp	x23, x24, [sp, #48]
    13d8:	ldp	x25, x26, [sp, #64]
    13dc:	b	12f4 <ioctl@plt+0x2b4>
    13e0:	mov	x25, #0x0                   	// #0
    13e4:	b	1208 <ioctl@plt+0x1c8>
    13e8:	strh	wzr, [sp, #80]
    13ec:	stp	xzr, xzr, [sp, #88]
    13f0:	b	1240 <ioctl@plt+0x200>
    13f4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    13f8:	ldr	x0, [x0, #4040]
    13fc:	ldr	x0, [x0]
    1400:	bl	ed0 <PyErr_SetFromErrno@plt>
    1404:	ldp	x23, x24, [sp, #48]
    1408:	ldp	x25, x26, [sp, #64]
    140c:	b	12f4 <ioctl@plt+0x2b4>
    1410:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1414:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1418:	add	x1, x1, #0x1a0
    141c:	ldr	x0, [x0, #4024]
    1420:	ldr	x0, [x0]
    1424:	bl	f10 <PyErr_SetString@plt>
    1428:	b	135c <ioctl@plt+0x31c>
    142c:	nop
    1430:	stp	x29, x30, [sp, #-48]!
    1434:	cmp	x2, #0x2
    1438:	mov	x29, sp
    143c:	stp	x19, x20, [sp, #16]
    1440:	mov	x19, x1
    1444:	b.eq	1464 <ioctl@plt+0x424>  // b.none
    1448:	mov	x1, x2
    144c:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x340>
    1450:	mov	x3, #0x2                   	// #2
    1454:	add	x0, x0, #0x1c0
    1458:	mov	x2, x3
    145c:	bl	f80 <_PyArg_CheckPositional@plt>
    1460:	cbz	w0, 152c <ioctl@plt+0x4ec>
    1464:	ldr	x0, [x19]
    1468:	stp	x21, x22, [sp, #32]
    146c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1470:	mov	w22, w0
    1474:	tbnz	w0, #31, 1528 <ioctl@plt+0x4e8>
    1478:	ldr	x0, [x19, #8]
    147c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11340>
    1480:	ldr	x1, [x1, #4008]
    1484:	ldr	x0, [x0, #8]
    1488:	cmp	x0, x1
    148c:	b.eq	153c <ioctl@plt+0x4fc>  // b.none
    1490:	bl	1010 <PyType_IsSubtype@plt>
    1494:	cbnz	w0, 153c <ioctl@plt+0x4fc>
    1498:	ldr	x0, [x19, #8]
    149c:	bl	1030 <_PyLong_AsInt@plt>
    14a0:	mov	w21, w0
    14a4:	cmn	w0, #0x1
    14a8:	b.ne	14c8 <ioctl@plt+0x488>  // b.any
    14ac:	b	151c <ioctl@plt+0x4dc>
    14b0:	bl	1020 <__errno_location@plt>
    14b4:	ldr	w0, [x0]
    14b8:	cmp	w0, #0x4
    14bc:	b.ne	1568 <ioctl@plt+0x528>  // b.any
    14c0:	bl	1000 <PyErr_CheckSignals@plt>
    14c4:	cbnz	w0, 1528 <ioctl@plt+0x4e8>
    14c8:	bl	fe0 <PyEval_SaveThread@plt>
    14cc:	mov	x20, x0
    14d0:	mov	w1, w21
    14d4:	mov	w0, w22
    14d8:	bl	f20 <flock@plt>
    14dc:	mov	w19, w0
    14e0:	mov	x0, x20
    14e4:	bl	ec0 <PyEval_RestoreThread@plt>
    14e8:	cmn	w19, #0x1
    14ec:	b.eq	14b0 <ioctl@plt+0x470>  // b.none
    14f0:	tbnz	w19, #31, 1568 <ioctl@plt+0x528>
    14f4:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11340>
    14f8:	ldp	x21, x22, [sp, #32]
    14fc:	ldr	x1, [x1, #4056]
    1500:	ldp	x19, x20, [sp, #16]
    1504:	mov	x0, x1
    1508:	ldr	x2, [x1]
    150c:	add	x2, x2, #0x1
    1510:	str	x2, [x1]
    1514:	ldp	x29, x30, [sp], #48
    1518:	ret
    151c:	bl	f90 <PyErr_Occurred@plt>
    1520:	cbz	x0, 14c8 <ioctl@plt+0x488>
    1524:	nop
    1528:	ldp	x21, x22, [sp, #32]
    152c:	mov	x0, #0x0                   	// #0
    1530:	ldp	x19, x20, [sp, #16]
    1534:	ldp	x29, x30, [sp], #48
    1538:	ret
    153c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1540:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1544:	add	x1, x1, #0x178
    1548:	ldr	x0, [x0, #4032]
    154c:	ldr	x0, [x0]
    1550:	bl	f10 <PyErr_SetString@plt>
    1554:	mov	x0, #0x0                   	// #0
    1558:	ldp	x19, x20, [sp, #16]
    155c:	ldp	x21, x22, [sp, #32]
    1560:	ldp	x29, x30, [sp], #48
    1564:	ret
    1568:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    156c:	ldp	x19, x20, [sp, #16]
    1570:	ldr	x0, [x0, #4040]
    1574:	ldp	x21, x22, [sp, #32]
    1578:	ldp	x29, x30, [sp], #48
    157c:	ldr	x0, [x0]
    1580:	b	ed0 <PyErr_SetFromErrno@plt>
    1584:	nop
    1588:	sub	sp, sp, #0x4b0
    158c:	stp	x29, x30, [sp]
    1590:	mov	x29, sp
    1594:	stp	x19, x20, [sp, #16]
    1598:	stp	x21, x22, [sp, #32]
    159c:	mov	w22, w0
    15a0:	mov	w21, w1
    15a4:	str	wzr, [sp, #84]
    15a8:	cbz	x2, 16e0 <ioctl@plt+0x6a0>
    15ac:	mov	x19, x2
    15b0:	stp	x23, x24, [sp, #48]
    15b4:	add	x23, sp, #0x58
    15b8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    15bc:	mov	w20, w3
    15c0:	mov	x2, x23
    15c4:	add	x1, x1, #0x1c8
    15c8:	mov	x0, x19
    15cc:	bl	f30 <_PyArg_Parse_SizeT@plt>
    15d0:	cbz	w0, 163c <ioctl@plt+0x5fc>
    15d4:	ldr	x24, [sp, #104]
    15d8:	str	x25, [sp, #64]
    15dc:	ldr	x25, [sp, #88]
    15e0:	cmp	x24, #0x400
    15e4:	cbz	w20, 1724 <ioctl@plt+0x6e4>
    15e8:	b.le	1798 <ioctl@plt+0x758>
    15ec:	add	x0, sp, #0xa8
    15f0:	cmp	x25, x0
    15f4:	b.eq	18b0 <ioctl@plt+0x870>  // b.none
    15f8:	mov	x2, x25
    15fc:	mov	x1, x21
    1600:	mov	w0, w22
    1604:	bl	1040 <ioctl@plt>
    1608:	mov	w19, w0
    160c:	mov	x0, x23
    1610:	bl	ee0 <PyBuffer_Release@plt>
    1614:	tbnz	w19, #31, 17f0 <ioctl@plt+0x7b0>
    1618:	sxtw	x0, w19
    161c:	bl	f40 <PyLong_FromLong@plt>
    1620:	ldp	x23, x24, [sp, #48]
    1624:	ldr	x25, [sp, #64]
    1628:	ldp	x29, x30, [sp]
    162c:	ldp	x19, x20, [sp, #16]
    1630:	ldp	x21, x22, [sp, #32]
    1634:	add	sp, sp, #0x4b0
    1638:	ret
    163c:	bl	f50 <PyErr_Clear@plt>
    1640:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1644:	mov	x2, x23
    1648:	add	x1, x1, #0x1f8
    164c:	mov	x0, x19
    1650:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1654:	cbz	w0, 16c0 <ioctl@plt+0x680>
    1658:	ldr	x19, [sp, #104]
    165c:	ldr	x1, [sp, #88]
    1660:	cmp	x19, #0x400
    1664:	b.gt	1878 <ioctl@plt+0x838>
    1668:	add	x20, sp, #0xa8
    166c:	mov	x2, x19
    1670:	mov	x0, x20
    1674:	bl	ea0 <memcpy@plt>
    1678:	strb	wzr, [x20, x19]
    167c:	bl	fe0 <PyEval_SaveThread@plt>
    1680:	mov	w1, w21
    1684:	mov	x2, x20
    1688:	mov	x24, x0
    168c:	mov	w0, w22
    1690:	bl	1040 <ioctl@plt>
    1694:	mov	w21, w0
    1698:	mov	x0, x24
    169c:	bl	ec0 <PyEval_RestoreThread@plt>
    16a0:	mov	x0, x23
    16a4:	tbnz	w21, #31, 1858 <ioctl@plt+0x818>
    16a8:	bl	ee0 <PyBuffer_Release@plt>
    16ac:	mov	x1, x19
    16b0:	mov	x0, x20
    16b4:	bl	f00 <PyBytes_FromStringAndSize@plt>
    16b8:	ldp	x23, x24, [sp, #48]
    16bc:	b	1628 <ioctl@plt+0x5e8>
    16c0:	bl	f50 <PyErr_Clear@plt>
    16c4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    16c8:	mov	x0, x19
    16cc:	add	x1, x1, #0x208
    16d0:	add	x2, sp, #0x54
    16d4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    16d8:	cbz	w0, 18a4 <ioctl@plt+0x864>
    16dc:	ldp	x23, x24, [sp, #48]
    16e0:	bl	fe0 <PyEval_SaveThread@plt>
    16e4:	ldr	w2, [sp, #84]
    16e8:	mov	w1, w21
    16ec:	mov	x20, x0
    16f0:	mov	w0, w22
    16f4:	bl	1040 <ioctl@plt>
    16f8:	mov	w19, w0
    16fc:	mov	x0, x20
    1700:	bl	ec0 <PyEval_RestoreThread@plt>
    1704:	tbnz	w19, #31, 1840 <ioctl@plt+0x800>
    1708:	sxtw	x0, w19
    170c:	bl	f40 <PyLong_FromLong@plt>
    1710:	ldp	x29, x30, [sp]
    1714:	ldp	x19, x20, [sp, #16]
    1718:	ldp	x21, x22, [sp, #32]
    171c:	add	sp, sp, #0x4b0
    1720:	ret
    1724:	b.gt	1810 <ioctl@plt+0x7d0>
    1728:	mov	x1, x25
    172c:	add	x19, sp, #0xa8
    1730:	mov	x2, x24
    1734:	mov	x0, x19
    1738:	bl	ea0 <memcpy@plt>
    173c:	strb	wzr, [x19, x24]
    1740:	bl	fe0 <PyEval_SaveThread@plt>
    1744:	mov	w1, w21
    1748:	mov	x2, x19
    174c:	mov	x21, x0
    1750:	mov	w0, w22
    1754:	bl	1040 <ioctl@plt>
    1758:	mov	w20, w0
    175c:	mov	x0, x21
    1760:	bl	ec0 <PyEval_RestoreThread@plt>
    1764:	mov	x0, x23
    1768:	bl	ee0 <PyBuffer_Release@plt>
    176c:	tbnz	w20, #31, 17f0 <ioctl@plt+0x7b0>
    1770:	mov	x1, x24
    1774:	mov	x0, x19
    1778:	bl	f00 <PyBytes_FromStringAndSize@plt>
    177c:	ldp	x29, x30, [sp]
    1780:	ldp	x19, x20, [sp, #16]
    1784:	ldp	x21, x22, [sp, #32]
    1788:	ldp	x23, x24, [sp, #48]
    178c:	ldr	x25, [sp, #64]
    1790:	add	sp, sp, #0x4b0
    1794:	ret
    1798:	add	x20, sp, #0xa8
    179c:	mov	x2, x24
    17a0:	mov	x1, x25
    17a4:	mov	x0, x20
    17a8:	bl	ea0 <memcpy@plt>
    17ac:	strb	wzr, [x20, x24]
    17b0:	bl	fe0 <PyEval_SaveThread@plt>
    17b4:	mov	x1, x21
    17b8:	mov	x2, x20
    17bc:	mov	x21, x0
    17c0:	mov	w0, w22
    17c4:	bl	1040 <ioctl@plt>
    17c8:	mov	w19, w0
    17cc:	mov	x0, x21
    17d0:	bl	ec0 <PyEval_RestoreThread@plt>
    17d4:	mov	x2, x24
    17d8:	mov	x1, x20
    17dc:	mov	x0, x25
    17e0:	bl	ea0 <memcpy@plt>
    17e4:	mov	x0, x23
    17e8:	bl	ee0 <PyBuffer_Release@plt>
    17ec:	tbz	w19, #31, 1618 <ioctl@plt+0x5d8>
    17f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    17f4:	ldr	x0, [x0, #4040]
    17f8:	ldr	x0, [x0]
    17fc:	bl	ed0 <PyErr_SetFromErrno@plt>
    1800:	mov	x0, #0x0                   	// #0
    1804:	ldp	x23, x24, [sp, #48]
    1808:	ldr	x25, [sp, #64]
    180c:	b	1628 <ioctl@plt+0x5e8>
    1810:	mov	x0, x23
    1814:	bl	ee0 <PyBuffer_Release@plt>
    1818:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    181c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1820:	add	x1, x1, #0x1d8
    1824:	ldr	x0, [x0, #4024]
    1828:	ldr	x0, [x0]
    182c:	bl	f10 <PyErr_SetString@plt>
    1830:	mov	x0, #0x0                   	// #0
    1834:	ldp	x23, x24, [sp, #48]
    1838:	ldr	x25, [sp, #64]
    183c:	b	1628 <ioctl@plt+0x5e8>
    1840:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1844:	ldr	x0, [x0, #4040]
    1848:	ldr	x0, [x0]
    184c:	bl	ed0 <PyErr_SetFromErrno@plt>
    1850:	mov	x0, #0x0                   	// #0
    1854:	b	1628 <ioctl@plt+0x5e8>
    1858:	bl	ee0 <PyBuffer_Release@plt>
    185c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1860:	ldr	x0, [x0, #4040]
    1864:	ldr	x0, [x0]
    1868:	bl	ed0 <PyErr_SetFromErrno@plt>
    186c:	mov	x0, #0x0                   	// #0
    1870:	ldp	x23, x24, [sp, #48]
    1874:	b	1628 <ioctl@plt+0x5e8>
    1878:	mov	x0, x23
    187c:	bl	ee0 <PyBuffer_Release@plt>
    1880:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1884:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1888:	add	x1, x1, #0x1d8
    188c:	ldr	x0, [x0, #4024]
    1890:	ldr	x0, [x0]
    1894:	bl	f10 <PyErr_SetString@plt>
    1898:	mov	x0, #0x0                   	// #0
    189c:	ldp	x23, x24, [sp, #48]
    18a0:	b	1628 <ioctl@plt+0x5e8>
    18a4:	mov	x0, #0x0                   	// #0
    18a8:	ldp	x23, x24, [sp, #48]
    18ac:	b	1628 <ioctl@plt+0x5e8>
    18b0:	bl	fe0 <PyEval_SaveThread@plt>
    18b4:	mov	x20, x0
    18b8:	mov	x2, x25
    18bc:	mov	x1, x21
    18c0:	mov	w0, w22
    18c4:	bl	1040 <ioctl@plt>
    18c8:	mov	w19, w0
    18cc:	mov	x0, x20
    18d0:	bl	ec0 <PyEval_RestoreThread@plt>
    18d4:	mov	x0, x23
    18d8:	bl	ee0 <PyBuffer_Release@plt>
    18dc:	tbz	w19, #31, 1618 <ioctl@plt+0x5d8>
    18e0:	b	17f0 <ioctl@plt+0x7b0>
    18e4:	nop
    18e8:	stp	x29, x30, [sp, #-48]!
    18ec:	sub	x0, x2, #0x2
    18f0:	cmp	x0, #0x2
    18f4:	mov	x29, sp
    18f8:	stp	x19, x20, [sp, #16]
    18fc:	mov	x19, x1
    1900:	stp	x21, x22, [sp, #32]
    1904:	mov	x22, x2
    1908:	b.ls	1928 <ioctl@plt+0x8e8>  // b.plast
    190c:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x340>
    1910:	mov	x1, x22
    1914:	add	x0, x0, #0x270
    1918:	mov	x3, #0x4                   	// #4
    191c:	mov	x2, #0x2                   	// #2
    1920:	bl	f80 <_PyArg_CheckPositional@plt>
    1924:	cbz	w0, 19c4 <ioctl@plt+0x984>
    1928:	ldr	x0, [x19]
    192c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1930:	mov	w20, w0
    1934:	tbnz	w0, #31, 19c4 <ioctl@plt+0x984>
    1938:	ldr	x0, [x19, #8]
    193c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11340>
    1940:	ldr	x1, [x1, #4008]
    1944:	ldr	x0, [x0, #8]
    1948:	cmp	x0, x1
    194c:	b.eq	19ac <ioctl@plt+0x96c>  // b.none
    1950:	bl	1010 <PyType_IsSubtype@plt>
    1954:	cbnz	w0, 19ac <ioctl@plt+0x96c>
    1958:	ldr	x0, [x19, #8]
    195c:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    1960:	mov	x21, x0
    1964:	cmn	w0, #0x1
    1968:	b.eq	1a04 <ioctl@plt+0x9c4>  // b.none
    196c:	cmp	x22, #0x2
    1970:	b.le	19e0 <ioctl@plt+0x9a0>
    1974:	cmp	x22, #0x3
    1978:	ldr	x22, [x19, #16]
    197c:	b.eq	19d8 <ioctl@plt+0x998>  // b.none
    1980:	ldr	x0, [x19, #24]
    1984:	bl	fc0 <PyObject_IsTrue@plt>
    1988:	mov	w3, w0
    198c:	tbnz	w0, #31, 19c4 <ioctl@plt+0x984>
    1990:	mov	x2, x22
    1994:	mov	w1, w21
    1998:	mov	w0, w20
    199c:	ldp	x19, x20, [sp, #16]
    19a0:	ldp	x21, x22, [sp, #32]
    19a4:	ldp	x29, x30, [sp], #48
    19a8:	b	1588 <ioctl@plt+0x548>
    19ac:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    19b0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    19b4:	add	x1, x1, #0x178
    19b8:	ldr	x0, [x0, #4032]
    19bc:	ldr	x0, [x0]
    19c0:	bl	f10 <PyErr_SetString@plt>
    19c4:	mov	x0, #0x0                   	// #0
    19c8:	ldp	x19, x20, [sp, #16]
    19cc:	ldp	x21, x22, [sp, #32]
    19d0:	ldp	x29, x30, [sp], #48
    19d4:	ret
    19d8:	mov	w3, #0x1                   	// #1
    19dc:	b	1990 <ioctl@plt+0x950>
    19e0:	mov	x22, #0x0                   	// #0
    19e4:	mov	w1, w21
    19e8:	mov	x2, x22
    19ec:	mov	w0, w20
    19f0:	ldp	x19, x20, [sp, #16]
    19f4:	mov	w3, #0x1                   	// #1
    19f8:	ldp	x21, x22, [sp, #32]
    19fc:	ldp	x29, x30, [sp], #48
    1a00:	b	1588 <ioctl@plt+0x548>
    1a04:	bl	f90 <PyErr_Occurred@plt>
    1a08:	cbz	x0, 196c <ioctl@plt+0x92c>
    1a0c:	b	19c4 <ioctl@plt+0x984>
    1a10:	sub	sp, sp, #0x460
    1a14:	stp	x29, x30, [sp]
    1a18:	mov	x29, sp
    1a1c:	stp	x19, x20, [sp, #16]
    1a20:	stp	x21, x22, [sp, #32]
    1a24:	mov	w21, w0
    1a28:	mov	w22, w1
    1a2c:	str	wzr, [sp, #76]
    1a30:	cbz	x2, 1afc <ioctl@plt+0xabc>
    1a34:	mov	x19, x2
    1a38:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1a3c:	add	x3, sp, #0x58
    1a40:	add	x1, x1, #0x278
    1a44:	add	x2, sp, #0x50
    1a48:	mov	x0, x19
    1a4c:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1a50:	cbz	w0, 1b64 <ioctl@plt+0xb24>
    1a54:	ldr	x2, [sp, #88]
    1a58:	cmp	x2, #0x400
    1a5c:	b.hi	1b9c <ioctl@plt+0xb5c>  // b.pmore
    1a60:	ldr	x1, [sp, #80]
    1a64:	str	x23, [sp, #48]
    1a68:	add	x23, sp, #0x60
    1a6c:	mov	x0, x23
    1a70:	bl	ea0 <memcpy@plt>
    1a74:	b	1a90 <ioctl@plt+0xa50>
    1a78:	bl	1020 <__errno_location@plt>
    1a7c:	ldr	w0, [x0]
    1a80:	cmp	w0, #0x4
    1a84:	b.ne	1bbc <ioctl@plt+0xb7c>  // b.any
    1a88:	bl	1000 <PyErr_CheckSignals@plt>
    1a8c:	cbnz	w0, 1b48 <ioctl@plt+0xb08>
    1a90:	bl	fe0 <PyEval_SaveThread@plt>
    1a94:	mov	x20, x0
    1a98:	mov	x2, x23
    1a9c:	mov	w1, w22
    1aa0:	mov	w0, w21
    1aa4:	bl	fd0 <fcntl64@plt>
    1aa8:	mov	w19, w0
    1aac:	mov	x0, x20
    1ab0:	bl	ec0 <PyEval_RestoreThread@plt>
    1ab4:	cmn	w19, #0x1
    1ab8:	b.eq	1a78 <ioctl@plt+0xa38>  // b.none
    1abc:	tbnz	w19, #31, 1bbc <ioctl@plt+0xb7c>
    1ac0:	ldr	x1, [sp, #88]
    1ac4:	mov	x0, x23
    1ac8:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1acc:	ldp	x29, x30, [sp]
    1ad0:	ldp	x19, x20, [sp, #16]
    1ad4:	ldp	x21, x22, [sp, #32]
    1ad8:	ldr	x23, [sp, #48]
    1adc:	add	sp, sp, #0x460
    1ae0:	ret
    1ae4:	bl	1020 <__errno_location@plt>
    1ae8:	ldr	w0, [x0]
    1aec:	cmp	w0, #0x4
    1af0:	b.ne	1b88 <ioctl@plt+0xb48>  // b.any
    1af4:	bl	1000 <PyErr_CheckSignals@plt>
    1af8:	cbnz	w0, 1b4c <ioctl@plt+0xb0c>
    1afc:	bl	fe0 <PyEval_SaveThread@plt>
    1b00:	mov	x20, x0
    1b04:	ldr	w2, [sp, #76]
    1b08:	mov	w1, w22
    1b0c:	mov	w0, w21
    1b10:	bl	fd0 <fcntl64@plt>
    1b14:	mov	w19, w0
    1b18:	mov	x0, x20
    1b1c:	bl	ec0 <PyEval_RestoreThread@plt>
    1b20:	cmn	w19, #0x1
    1b24:	b.eq	1ae4 <ioctl@plt+0xaa4>  // b.none
    1b28:	tbnz	w19, #31, 1b88 <ioctl@plt+0xb48>
    1b2c:	sxtw	x0, w19
    1b30:	bl	f40 <PyLong_FromLong@plt>
    1b34:	ldp	x29, x30, [sp]
    1b38:	ldp	x19, x20, [sp, #16]
    1b3c:	ldp	x21, x22, [sp, #32]
    1b40:	add	sp, sp, #0x460
    1b44:	ret
    1b48:	ldr	x23, [sp, #48]
    1b4c:	mov	x0, #0x0                   	// #0
    1b50:	ldp	x29, x30, [sp]
    1b54:	ldp	x19, x20, [sp, #16]
    1b58:	ldp	x21, x22, [sp, #32]
    1b5c:	add	sp, sp, #0x460
    1b60:	ret
    1b64:	bl	f50 <PyErr_Clear@plt>
    1b68:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1b6c:	mov	x0, x19
    1b70:	add	x1, x1, #0x2a0
    1b74:	add	x2, sp, #0x4c
    1b78:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1b7c:	cbnz	w0, 1afc <ioctl@plt+0xabc>
    1b80:	mov	x0, #0x0                   	// #0
    1b84:	b	1b50 <ioctl@plt+0xb10>
    1b88:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1b8c:	ldr	x0, [x0, #4040]
    1b90:	ldr	x0, [x0]
    1b94:	bl	ed0 <PyErr_SetFromErrno@plt>
    1b98:	b	1b34 <ioctl@plt+0xaf4>
    1b9c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1ba0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1ba4:	add	x1, x1, #0x280
    1ba8:	ldr	x0, [x0, #4024]
    1bac:	ldr	x0, [x0]
    1bb0:	bl	f10 <PyErr_SetString@plt>
    1bb4:	mov	x0, #0x0                   	// #0
    1bb8:	b	1b34 <ioctl@plt+0xaf4>
    1bbc:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1bc0:	ldr	x0, [x0, #4040]
    1bc4:	ldr	x0, [x0]
    1bc8:	bl	ed0 <PyErr_SetFromErrno@plt>
    1bcc:	ldr	x23, [sp, #48]
    1bd0:	b	1b34 <ioctl@plt+0xaf4>
    1bd4:	nop
    1bd8:	stp	x29, x30, [sp, #-64]!
    1bdc:	sub	x0, x2, #0x2
    1be0:	cmp	x0, #0x1
    1be4:	mov	x29, sp
    1be8:	stp	x19, x20, [sp, #16]
    1bec:	mov	x19, x1
    1bf0:	str	x21, [sp, #32]
    1bf4:	mov	x21, x2
    1bf8:	b.ls	1c18 <ioctl@plt+0xbd8>  // b.plast
    1bfc:	adrp	x0, 2000 <PyInit_fcntl@@Base+0x340>
    1c00:	mov	x1, x21
    1c04:	add	x0, x0, #0x308
    1c08:	mov	x3, #0x3                   	// #3
    1c0c:	mov	x2, #0x2                   	// #2
    1c10:	bl	f80 <_PyArg_CheckPositional@plt>
    1c14:	cbz	w0, 1c98 <ioctl@plt+0xc58>
    1c18:	ldr	x0, [x19]
    1c1c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1c20:	mov	w20, w0
    1c24:	tbnz	w0, #31, 1c98 <ioctl@plt+0xc58>
    1c28:	ldr	x0, [x19, #8]
    1c2c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11340>
    1c30:	ldr	x1, [x1, #4008]
    1c34:	ldr	x0, [x0, #8]
    1c38:	cmp	x0, x1
    1c3c:	b.eq	1c80 <ioctl@plt+0xc40>  // b.none
    1c40:	bl	1010 <PyType_IsSubtype@plt>
    1c44:	cbnz	w0, 1c80 <ioctl@plt+0xc40>
    1c48:	ldr	x0, [x19, #8]
    1c4c:	bl	1030 <_PyLong_AsInt@plt>
    1c50:	mov	w1, w0
    1c54:	cmn	w0, #0x1
    1c58:	b.eq	1cac <ioctl@plt+0xc6c>  // b.none
    1c5c:	cmp	x21, #0x2
    1c60:	mov	x2, #0x0                   	// #0
    1c64:	b.le	1c6c <ioctl@plt+0xc2c>
    1c68:	ldr	x2, [x19, #16]
    1c6c:	mov	w0, w20
    1c70:	ldp	x19, x20, [sp, #16]
    1c74:	ldr	x21, [sp, #32]
    1c78:	ldp	x29, x30, [sp], #64
    1c7c:	b	1a10 <ioctl@plt+0x9d0>
    1c80:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11340>
    1c84:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1c88:	add	x1, x1, #0x178
    1c8c:	ldr	x0, [x0, #4032]
    1c90:	ldr	x0, [x0]
    1c94:	bl	f10 <PyErr_SetString@plt>
    1c98:	mov	x0, #0x0                   	// #0
    1c9c:	ldp	x19, x20, [sp, #16]
    1ca0:	ldr	x21, [sp, #32]
    1ca4:	ldp	x29, x30, [sp], #64
    1ca8:	ret
    1cac:	str	w0, [sp, #60]
    1cb0:	bl	f90 <PyErr_Occurred@plt>
    1cb4:	ldr	w1, [sp, #60]
    1cb8:	cbz	x0, 1c5c <ioctl@plt+0xc1c>
    1cbc:	b	1c98 <ioctl@plt+0xc58>

0000000000001cc0 <PyInit_fcntl@@Base>:
    1cc0:	stp	x29, x30, [sp, #-32]!
    1cc4:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12340>
    1cc8:	mov	w1, #0x3f5                 	// #1013
    1ccc:	mov	x29, sp
    1cd0:	add	x0, x0, #0xe0
    1cd4:	str	x19, [sp, #16]
    1cd8:	bl	fa0 <PyModule_Create2@plt>
    1cdc:	cbz	x0, 2148 <PyInit_fcntl@@Base+0x488>
    1ce0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1ce4:	mov	x19, x0
    1ce8:	add	x1, x1, #0x310
    1cec:	mov	x2, #0x1                   	// #1
    1cf0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1cf4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1cf8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1cfc:	mov	x0, x19
    1d00:	add	x1, x1, #0x318
    1d04:	mov	x2, #0x2                   	// #2
    1d08:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d0c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1d10:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1d14:	mov	x0, x19
    1d18:	add	x1, x1, #0x320
    1d1c:	mov	x2, #0x4                   	// #4
    1d20:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d24:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1d28:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1d2c:	mov	x0, x19
    1d30:	add	x1, x1, #0x328
    1d34:	mov	x2, #0x8                   	// #8
    1d38:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d3c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1d40:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1d44:	mov	x0, x19
    1d48:	add	x1, x1, #0x330
    1d4c:	mov	x2, #0x20                  	// #32
    1d50:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d54:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1d58:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1d5c:	mov	x0, x19
    1d60:	add	x1, x1, #0x340
    1d64:	mov	x2, #0x40                  	// #64
    1d68:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d6c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1d70:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1d74:	mov	x0, x19
    1d78:	add	x1, x1, #0x350
    1d7c:	mov	x2, #0x80                  	// #128
    1d80:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d84:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1d88:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1d8c:	mov	x0, x19
    1d90:	add	x1, x1, #0x360
    1d94:	mov	x2, #0xc0                  	// #192
    1d98:	bl	eb0 <PyModule_AddIntConstant@plt>
    1d9c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1da0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1da4:	mov	x0, x19
    1da8:	add	x1, x1, #0x368
    1dac:	mov	x2, #0x0                   	// #0
    1db0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1db4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1db8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1dbc:	mov	x0, x19
    1dc0:	add	x1, x1, #0x370
    1dc4:	mov	x2, #0x406                 	// #1030
    1dc8:	bl	eb0 <PyModule_AddIntConstant@plt>
    1dcc:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1dd0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1dd4:	mov	x0, x19
    1dd8:	add	x1, x1, #0x380
    1ddc:	mov	x2, #0x1                   	// #1
    1de0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1de4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1de8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1dec:	mov	x0, x19
    1df0:	add	x1, x1, #0x388
    1df4:	mov	x2, #0x2                   	// #2
    1df8:	bl	eb0 <PyModule_AddIntConstant@plt>
    1dfc:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e00:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e04:	mov	x0, x19
    1e08:	add	x1, x1, #0x390
    1e0c:	mov	x2, #0x3                   	// #3
    1e10:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e14:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e18:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e1c:	mov	x0, x19
    1e20:	add	x1, x1, #0x398
    1e24:	mov	x2, #0x4                   	// #4
    1e28:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e2c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e30:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e34:	mov	x0, x19
    1e38:	add	x1, x1, #0x3a0
    1e3c:	mov	x2, #0x5                   	// #5
    1e40:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e44:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e48:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e4c:	mov	x0, x19
    1e50:	add	x1, x1, #0x3a8
    1e54:	mov	x2, #0x6                   	// #6
    1e58:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e5c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e60:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e64:	mov	x0, x19
    1e68:	add	x1, x1, #0x3b0
    1e6c:	mov	x2, #0x7                   	// #7
    1e70:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e74:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e78:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e7c:	mov	x0, x19
    1e80:	add	x1, x1, #0x3c0
    1e84:	mov	x2, #0x9                   	// #9
    1e88:	bl	eb0 <PyModule_AddIntConstant@plt>
    1e8c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1e90:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1e94:	mov	x0, x19
    1e98:	add	x1, x1, #0x3d0
    1e9c:	mov	x2, #0x8                   	// #8
    1ea0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ea4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1ea8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1eac:	mov	x0, x19
    1eb0:	add	x1, x1, #0x3e0
    1eb4:	mov	x2, #0xb                   	// #11
    1eb8:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ebc:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1ec0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1ec4:	mov	x0, x19
    1ec8:	add	x1, x1, #0x3f0
    1ecc:	mov	x2, #0xa                   	// #10
    1ed0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ed4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1ed8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1edc:	mov	x0, x19
    1ee0:	add	x1, x1, #0x400
    1ee4:	mov	x2, #0x0                   	// #0
    1ee8:	bl	eb0 <PyModule_AddIntConstant@plt>
    1eec:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1ef0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1ef4:	mov	x0, x19
    1ef8:	add	x1, x1, #0x408
    1efc:	mov	x2, #0x1                   	// #1
    1f00:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f04:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f08:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f0c:	mov	x0, x19
    1f10:	add	x1, x1, #0x410
    1f14:	mov	x2, #0x2                   	// #2
    1f18:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f1c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f20:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f24:	mov	x0, x19
    1f28:	add	x1, x1, #0x418
    1f2c:	mov	x2, #0x5                   	// #5
    1f30:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f34:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f38:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f3c:	mov	x0, x19
    1f40:	add	x1, x1, #0x428
    1f44:	mov	x2, #0x6                   	// #6
    1f48:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f4c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f50:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f54:	mov	x0, x19
    1f58:	add	x1, x1, #0x438
    1f5c:	mov	x2, #0x7                   	// #7
    1f60:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f64:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f68:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f6c:	mov	x0, x19
    1f70:	add	x1, x1, #0x448
    1f74:	mov	x2, #0x2000                	// #8192
    1f78:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f7c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f80:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f84:	mov	x0, x19
    1f88:	add	x1, x1, #0x450
    1f8c:	mov	x2, #0x400                 	// #1024
    1f90:	bl	eb0 <PyModule_AddIntConstant@plt>
    1f94:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1f98:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1f9c:	mov	x0, x19
    1fa0:	add	x1, x1, #0x460
    1fa4:	mov	x2, #0x401                 	// #1025
    1fa8:	bl	eb0 <PyModule_AddIntConstant@plt>
    1fac:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1fb0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1fb4:	mov	x0, x19
    1fb8:	add	x1, x1, #0x470
    1fbc:	mov	x2, #0x402                 	// #1026
    1fc0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1fc4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1fc8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1fcc:	mov	x0, x19
    1fd0:	add	x1, x1, #0x480
    1fd4:	mov	x2, #0x4                   	// #4
    1fd8:	bl	eb0 <PyModule_AddIntConstant@plt>
    1fdc:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1fe0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1fe4:	mov	x0, x19
    1fe8:	add	x1, x1, #0x488
    1fec:	mov	x2, #0x8                   	// #8
    1ff0:	bl	eb0 <PyModule_AddIntConstant@plt>
    1ff4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    1ff8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    1ffc:	mov	x0, x19
    2000:	add	x1, x1, #0x490
    2004:	mov	x2, #0x1                   	// #1
    2008:	bl	eb0 <PyModule_AddIntConstant@plt>
    200c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2010:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    2014:	mov	x0, x19
    2018:	add	x1, x1, #0x4a0
    201c:	mov	x2, #0x1                   	// #1
    2020:	bl	eb0 <PyModule_AddIntConstant@plt>
    2024:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2028:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    202c:	mov	x0, x19
    2030:	add	x1, x1, #0x4b0
    2034:	mov	x2, #0x2                   	// #2
    2038:	bl	eb0 <PyModule_AddIntConstant@plt>
    203c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2040:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    2044:	mov	x0, x19
    2048:	add	x1, x1, #0x4c0
    204c:	mov	x2, #0x4                   	// #4
    2050:	bl	eb0 <PyModule_AddIntConstant@plt>
    2054:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2058:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    205c:	mov	x0, x19
    2060:	add	x1, x1, #0x4d0
    2064:	mov	x2, #0x8                   	// #8
    2068:	bl	eb0 <PyModule_AddIntConstant@plt>
    206c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2070:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    2074:	mov	x0, x19
    2078:	add	x1, x1, #0x4e0
    207c:	mov	x2, #0x10                  	// #16
    2080:	bl	eb0 <PyModule_AddIntConstant@plt>
    2084:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2088:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    208c:	mov	x0, x19
    2090:	add	x1, x1, #0x4f0
    2094:	mov	x2, #0x20                  	// #32
    2098:	bl	eb0 <PyModule_AddIntConstant@plt>
    209c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    20a0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    20a4:	mov	x0, x19
    20a8:	add	x1, x1, #0x500
    20ac:	mov	x2, #0x80000000            	// #2147483648
    20b0:	bl	eb0 <PyModule_AddIntConstant@plt>
    20b4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    20b8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    20bc:	mov	x0, x19
    20c0:	add	x1, x1, #0x510
    20c4:	mov	x2, #0x409                 	// #1033
    20c8:	bl	eb0 <PyModule_AddIntConstant@plt>
    20cc:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    20d0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    20d4:	mov	x0, x19
    20d8:	add	x1, x1, #0x520
    20dc:	mov	x2, #0x40a                 	// #1034
    20e0:	bl	eb0 <PyModule_AddIntConstant@plt>
    20e4:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    20e8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    20ec:	mov	x0, x19
    20f0:	add	x1, x1, #0x530
    20f4:	mov	x2, #0x1                   	// #1
    20f8:	bl	eb0 <PyModule_AddIntConstant@plt>
    20fc:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2100:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    2104:	mov	x0, x19
    2108:	add	x1, x1, #0x540
    210c:	mov	x2, #0x2                   	// #2
    2110:	bl	eb0 <PyModule_AddIntConstant@plt>
    2114:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2118:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    211c:	mov	x0, x19
    2120:	add	x1, x1, #0x550
    2124:	mov	x2, #0x4                   	// #4
    2128:	bl	eb0 <PyModule_AddIntConstant@plt>
    212c:	cbnz	w0, 2148 <PyInit_fcntl@@Base+0x488>
    2130:	adrp	x1, 2000 <PyInit_fcntl@@Base+0x340>
    2134:	mov	x0, x19
    2138:	add	x1, x1, #0x560
    213c:	mov	x2, #0x8                   	// #8
    2140:	bl	eb0 <PyModule_AddIntConstant@plt>
    2144:	cbz	w0, 214c <PyInit_fcntl@@Base+0x48c>
    2148:	mov	x19, #0x0                   	// #0
    214c:	mov	x0, x19
    2150:	ldr	x19, [sp, #16]
    2154:	ldp	x29, x30, [sp], #32
    2158:	ret

Disassembly of section .fini:

000000000000215c <.fini>:
    215c:	stp	x29, x30, [sp, #-16]!
    2160:	mov	x29, sp
    2164:	ldp	x29, x30, [sp], #16
    2168:	ret
