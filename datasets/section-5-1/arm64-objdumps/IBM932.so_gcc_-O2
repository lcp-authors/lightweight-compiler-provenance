
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM932.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 1f000 <gconv@@Base+0x1e6d8>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 20000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x138>:
     760:	adrp	x0, 1f000 <gconv@@Base+0x1e6d8>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 20000 <gconv@@Base+0x1f6d8>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 1f000 <gconv@@Base+0x1e6d8>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 20000 <gconv@@Base+0x1f6d8>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 1f000 <gconv@@Base+0x1e6d8>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 20000 <gconv@@Base+0x1f6d8>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 1f000 <gconv@@Base+0x1e6d8>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 20000 <gconv@@Base+0x1f6d8>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	w1, w1, #0xff
     83c:	mov	w2, #0xfc                  	// #252
     840:	and	w3, w1, #0xffffffdf
     844:	mov	w0, #0xffffffff            	// #-1
     848:	cmp	w3, #0x80
     84c:	ccmp	w1, w2, #0x2, ne  // ne = any
     850:	b.hi	884 <__assert_fail@plt+0x134>  // b.pmore
     854:	adrp	x0, 1000 <gconv@@Base+0x6d8>
     858:	add	x0, x0, #0xd20
     85c:	ldrh	w0, [x0, w1, sxtw #1]
     860:	cmp	w0, #0x0
     864:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     868:	b.ne	888 <__assert_fail@plt+0x138>  // b.any
     86c:	cmp	w0, #0xa5
     870:	b.eq	890 <__assert_fail@plt+0x140>  // b.none
     874:	mov	w1, #0x203e                	// #8254
     878:	cmp	w0, w1
     87c:	mov	w1, #0x7e                  	// #126
     880:	csel	w0, w0, w1, ne  // ne = any
     884:	ret
     888:	mov	w0, #0xffffffff            	// #-1
     88c:	ret
     890:	mov	w0, #0x5c                  	// #92
     894:	ret

0000000000000898 <gconv_init@@Base>:
     898:	stp	x29, x30, [sp, #-32]!
     89c:	mov	x29, sp
     8a0:	stp	x19, x20, [sp, #16]
     8a4:	mov	x19, x0
     8a8:	adrp	x20, 1000 <gconv@@Base+0x6d8>
     8ac:	ldr	x0, [x0, #24]
     8b0:	add	x20, x20, #0xb70
     8b4:	mov	x1, x20
     8b8:	bl	730 <strcmp@plt>
     8bc:	cbnz	w0, 8f4 <gconv_init@@Base+0x5c>
     8c0:	mov	x2, #0x1                   	// #1
     8c4:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     8c8:	movk	x2, #0x2, lsl #32
     8cc:	add	x0, x0, #0x838
     8d0:	mov	x1, #0x400000004           	// #17179869188
     8d4:	str	x0, [x19, #48]
     8d8:	stp	x2, x1, [x19, #72]
     8dc:	str	xzr, [x19, #96]
     8e0:	mov	w0, #0x0                   	// #0
     8e4:	str	wzr, [x19, #88]
     8e8:	ldp	x19, x20, [sp, #16]
     8ec:	ldp	x29, x30, [sp], #32
     8f0:	ret
     8f4:	ldr	x0, [x19, #32]
     8f8:	mov	x1, x20
     8fc:	bl	730 <strcmp@plt>
     900:	cbnz	w0, 920 <gconv_init@@Base+0x88>
     904:	mov	x1, #0x1                   	// #1
     908:	mov	x0, #0xffffffffffffffff    	// #-1
     90c:	mov	x2, #0x400000004           	// #17179869188
     910:	movk	x1, #0x2, lsl #32
     914:	stp	x2, x1, [x19, #72]
     918:	str	x0, [x19, #96]
     91c:	b	8e0 <gconv_init@@Base+0x48>
     920:	mov	w0, #0x1                   	// #1
     924:	b	8e8 <gconv_init@@Base+0x50>

0000000000000928 <gconv@@Base>:
     928:	stp	x29, x30, [sp, #-224]!
     92c:	mov	x14, x0
     930:	mov	x10, x2
     934:	mov	x29, sp
     938:	stp	x21, x22, [sp, #32]
     93c:	mov	x21, x1
     940:	adrp	x1, 1f000 <gconv@@Base+0x1e6d8>
     944:	stp	x25, x26, [sp, #64]
     948:	mov	x22, x3
     94c:	ldr	w12, [x21, #16]
     950:	ldr	x1, [x1, #4056]
     954:	stp	x27, x28, [sp, #80]
     958:	mov	x13, x4
     95c:	ldr	x0, [x1]
     960:	str	x0, [sp, #216]
     964:	mov	x0, #0x0                   	// #0
     968:	add	x1, x14, #0x68
     96c:	add	x0, x21, #0x30
     970:	stp	x1, x0, [sp, #144]
     974:	mov	x26, x5
     978:	mov	w27, w7
     97c:	mov	x25, #0x0                   	// #0
     980:	tbnz	w12, #0, 9a0 <gconv@@Base+0x78>
     984:	ldr	x0, [x14, #104]
     988:	ldr	x25, [x14, #144]
     98c:	cbz	x0, 9a0 <gconv@@Base+0x78>
     990:	adrp	x0, 1f000 <gconv@@Base+0x1e6d8>
     994:	ldr	x0, [x0, #4040]
     998:	ldr	x0, [x0]
     99c:	eor	x25, x25, x0
     9a0:	cbnz	w6, 1294 <gconv@@Base+0x96c>
     9a4:	cmp	x13, #0x0
     9a8:	stp	x19, x20, [sp, #16]
     9ac:	csel	x0, x21, x13, eq  // eq = none
     9b0:	stp	x23, x24, [sp, #48]
     9b4:	add	x11, sp, #0xb0
     9b8:	cmp	x26, #0x0
     9bc:	ldr	x24, [x0]
     9c0:	str	xzr, [sp, #176]
     9c4:	csel	x11, x11, xzr, ne  // ne = any
     9c8:	ldr	x23, [x10]
     9cc:	ldr	x28, [x21, #8]
     9d0:	cbnz	w27, d44 <gconv@@Base+0x41c>
     9d4:	str	w27, [sp, #128]
     9d8:	mov	x27, x14
     9dc:	mov	x0, x23
     9e0:	mov	x23, x24
     9e4:	mov	x24, x0
     9e8:	str	x13, [sp, #120]
     9ec:	ldr	x0, [x27, #96]
     9f0:	str	x26, [sp, #136]
     9f4:	adrp	x19, 2000 <gconv@@Base+0x16d8>
     9f8:	mov	x26, x28
     9fc:	add	x19, x19, #0x2c0
     a00:	mov	x28, x11
     a04:	cbz	x0, b7c <gconv@@Base+0x254>
     a08:	stp	x24, x23, [sp, #192]
     a0c:	mov	x20, x23
     a10:	cmp	x22, x24
     a14:	b.eq	13bc <gconv@@Base+0xa94>  // b.none
     a18:	mov	x0, x24
     a1c:	add	x5, sp, #0xc8
     a20:	mov	w9, #0x4                   	// #4
     a24:	add	x1, x0, #0x4
     a28:	cmp	x22, x1
     a2c:	b.cc	d0c <gconv@@Base+0x3e4>  // b.lo, b.ul, b.last
     a30:	cmp	x26, x20
     a34:	b.ls	ce4 <gconv@@Base+0x3bc>  // b.plast
     a38:	ldr	w3, [x0]
     a3c:	mov	w0, #0xfffe                	// #65534
     a40:	cmp	w3, w0
     a44:	b.hi	d2c <gconv@@Base+0x404>  // b.pmore
     a48:	mov	w0, w3
     a4c:	cmp	w3, #0xff
     a50:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     a54:	b.ls	a94 <gconv@@Base+0x16c>  // b.plast
     a58:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     a5c:	add	x7, x4, #0xd20
     a60:	add	x7, x7, #0x3a8
     a64:	mov	w1, #0x203e                	// #8254
     a68:	b	a74 <gconv@@Base+0x14c>
     a6c:	ldrh	w1, [x2, #10]
     a70:	mov	x7, x2
     a74:	cmp	w3, w1
     a78:	add	x2, x7, #0x8
     a7c:	b.hi	a6c <gconv@@Base+0x144>  // b.pmore
     a80:	ldrh	w0, [x2]
     a84:	cmp	w3, w0
     a88:	b.cc	c6c <gconv@@Base+0x344>  // b.lo, b.ul, b.last
     a8c:	ldr	w0, [x7, #12]
     a90:	add	w0, w3, w0
     a94:	add	x4, x4, #0xd20
     a98:	cmp	w3, #0x0
     a9c:	add	x4, x4, #0x3f0
     aa0:	ldrb	w1, [x4, w0, uxtw]
     aa4:	ccmp	w1, #0x0, #0x0, ne  // ne = any
     aa8:	b.eq	c6c <gconv@@Base+0x344>  // b.none
     aac:	add	x0, x20, #0x1
     ab0:	cmp	x26, x0
     ab4:	b.cc	ce4 <gconv@@Base+0x3bc>  // b.lo, b.ul, b.last
     ab8:	str	x0, [sp, #200]
     abc:	cmp	w3, #0x5c
     ac0:	b.eq	c64 <gconv@@Base+0x33c>  // b.none
     ac4:	cmp	w3, #0x7e
     ac8:	b.eq	c64 <gconv@@Base+0x33c>  // b.none
     acc:	strb	w1, [x20]
     ad0:	ldp	x0, x20, [sp, #192]
     ad4:	add	x0, x0, #0x4
     ad8:	str	x0, [sp, #192]
     adc:	cmp	x22, x0
     ae0:	b.ne	a24 <gconv@@Base+0xfc>  // b.any
     ae4:	nop
     ae8:	str	x0, [x10]
     aec:	ldr	x0, [sp, #120]
     af0:	cbnz	x0, c28 <gconv@@Base+0x300>
     af4:	ldp	w1, w0, [x21, #16]
     af8:	add	w0, w0, #0x1
     afc:	str	w0, [x21, #20]
     b00:	tbnz	w1, #0, 103c <gconv@@Base+0x714>
     b04:	cmp	x23, x20
     b08:	b.cs	108c <gconv@@Base+0x764>  // b.hs, b.nlast
     b0c:	ldr	x1, [x21]
     b10:	mov	x0, x25
     b14:	str	x10, [sp, #104]
     b18:	str	w9, [sp, #112]
     b1c:	str	x1, [sp, #184]
     b20:	bl	740 <_dl_mcount_wrapper_check@plt>
     b24:	ldp	x5, x0, [sp, #136]
     b28:	mov	x3, x20
     b2c:	ldr	w7, [sp, #128]
     b30:	add	x2, sp, #0xb8
     b34:	ldr	x1, [sp, #152]
     b38:	mov	w6, #0x0                   	// #0
     b3c:	mov	x4, #0x0                   	// #0
     b40:	blr	x25
     b44:	mov	w7, w0
     b48:	ldr	w9, [sp, #112]
     b4c:	cmp	w0, #0x4
     b50:	ldr	x10, [sp, #104]
     b54:	b.eq	cfc <gconv@@Base+0x3d4>  // b.none
     b58:	ldr	x9, [sp, #184]
     b5c:	cmp	x9, x20
     b60:	b.ne	ed0 <gconv@@Base+0x5a8>  // b.any
     b64:	cbnz	w7, 13a4 <gconv@@Base+0xa7c>
     b68:	ldr	x0, [x27, #96]
     b6c:	ldr	w12, [x21, #16]
     b70:	ldr	x24, [x10]
     b74:	ldr	x23, [x21]
     b78:	cbnz	x0, a08 <gconv@@Base+0xe0>
     b7c:	cmp	x22, x24
     b80:	b.eq	1560 <gconv@@Base+0xc38>  // b.none
     b84:	add	x0, x23, #0x4
     b88:	cmp	x0, x26
     b8c:	b.hi	1278 <gconv@@Base+0x950>  // b.pmore
     b90:	adrp	x4, 1000 <gconv@@Base+0x6d8>
     b94:	add	x4, x4, #0xd20
     b98:	adrp	x6, b000 <gconv@@Base+0xa6d8>
     b9c:	add	x16, x4, #0x200
     ba0:	mov	x1, x24
     ba4:	add	x6, x6, #0x258
     ba8:	mov	x20, x23
     bac:	and	w3, w12, #0x2
     bb0:	mov	w9, #0x4                   	// #4
     bb4:	mov	w5, #0xfc                  	// #252
     bb8:	mov	w12, #0x203e                	// #8254
     bbc:	mov	w7, #0x7e                  	// #126
     bc0:	mov	w8, #0x81fc                	// #33276
     bc4:	ldrb	w2, [x1]
     bc8:	and	w11, w2, #0xffffffdf
     bcc:	cmp	w11, #0x80
     bd0:	ccmp	w2, w5, #0x2, ne  // ne = any
     bd4:	b.hi	cc4 <gconv@@Base+0x39c>  // b.pmore
     bd8:	mov	w11, w2
     bdc:	add	x13, x1, #0x1
     be0:	ldrh	w11, [x4, x11, lsl #1]
     be4:	cbz	w11, 1094 <gconv@@Base+0x76c>
     be8:	cmp	w11, #0xa5
     bec:	b.eq	d24 <gconv@@Base+0x3fc>  // b.none
     bf0:	cmp	w11, w12
     bf4:	csel	w11, w11, w7, ne  // ne = any
     bf8:	mov	x1, x13
     bfc:	str	w11, [x20]
     c00:	mov	x20, x0
     c04:	cmp	x22, x1
     c08:	b.eq	c1c <gconv@@Base+0x2f4>  // b.none
     c0c:	add	x0, x20, #0x4
     c10:	cmp	x26, x0
     c14:	b.cs	bc4 <gconv@@Base+0x29c>  // b.hs, b.nlast
     c18:	mov	w9, #0x5                   	// #5
     c1c:	str	x1, [x10]
     c20:	ldr	x0, [sp, #120]
     c24:	cbz	x0, af4 <gconv@@Base+0x1cc>
     c28:	ldp	x23, x24, [sp, #48]
     c2c:	str	x20, [x0]
     c30:	ldp	x19, x20, [sp, #16]
     c34:	adrp	x0, 1f000 <gconv@@Base+0x1e6d8>
     c38:	ldr	x0, [x0, #4056]
     c3c:	ldr	x1, [sp, #216]
     c40:	ldr	x0, [x0]
     c44:	eor	x0, x1, x0
     c48:	cbnz	x0, 1958 <gconv@@Base+0x1030>
     c4c:	mov	w0, w9
     c50:	ldp	x21, x22, [sp, #32]
     c54:	ldp	x25, x26, [sp, #64]
     c58:	ldp	x27, x28, [sp, #80]
     c5c:	ldp	x29, x30, [sp], #224
     c60:	ret
     c64:	strb	w3, [x20]
     c68:	b	ad0 <gconv@@Base+0x1a8>
     c6c:	and	w3, w3, #0xffff
     c70:	mov	w1, #0x23e6                	// #9190
     c74:	mov	w4, #0x0                   	// #0
     c78:	b	ca0 <gconv@@Base+0x378>
     c7c:	add	w7, w1, w4
     c80:	lsr	w2, w7, #1
     c84:	lsr	w7, w7, #1
     c88:	lsl	x2, x2, #2
     c8c:	add	x0, x19, x2
     c90:	ldrh	w2, [x19, x2]
     c94:	cmp	w2, w3
     c98:	b.ls	cf0 <gconv@@Base+0x3c8>  // b.plast
     c9c:	mov	w1, w7
     ca0:	cmp	w1, w4
     ca4:	b.hi	c7c <gconv@@Base+0x354>  // b.pmore
     ca8:	cbz	x28, 1554 <gconv@@Base+0xc2c>
     cac:	ldr	w0, [x21, #16]
     cb0:	tbnz	w0, #3, ff4 <gconv@@Base+0x6cc>
     cb4:	ldr	x0, [sp, #192]
     cb8:	tbnz	w12, #1, 1070 <gconv@@Base+0x748>
     cbc:	mov	w9, #0x6                   	// #6
     cc0:	b	ae8 <gconv@@Base+0x1c0>
     cc4:	cbz	x28, d18 <gconv@@Base+0x3f0>
     cc8:	cbz	w3, d18 <gconv@@Base+0x3f0>
     ccc:	ldr	x0, [x28]
     cd0:	add	x1, x1, #0x1
     cd4:	mov	w9, #0x6                   	// #6
     cd8:	add	x0, x0, #0x1
     cdc:	str	x0, [x28]
     ce0:	b	c04 <gconv@@Base+0x2dc>
     ce4:	mov	w9, #0x5                   	// #5
     ce8:	ldr	x0, [sp, #192]
     cec:	b	ae8 <gconv@@Base+0x1c0>
     cf0:	b.cs	12f0 <gconv@@Base+0x9c8>  // b.hs, b.nlast
     cf4:	add	w4, w7, #0x1
     cf8:	b	ca0 <gconv@@Base+0x378>
     cfc:	mov	w7, w9
     d00:	cmp	w9, #0x5
     d04:	b.ne	b64 <gconv@@Base+0x23c>  // b.any
     d08:	b	b68 <gconv@@Base+0x240>
     d0c:	mov	w9, #0x7                   	// #7
     d10:	ldr	x0, [sp, #192]
     d14:	b	ae8 <gconv@@Base+0x1c0>
     d18:	mov	w9, #0x6                   	// #6
     d1c:	str	x1, [x10]
     d20:	b	c20 <gconv@@Base+0x2f8>
     d24:	mov	w11, #0x5c                  	// #92
     d28:	b	bf8 <gconv@@Base+0x2d0>
     d2c:	mov	w0, #0x1c00                	// #7168
     d30:	cmp	w0, w3, lsr #7
     d34:	b.ne	ca8 <gconv@@Base+0x380>  // b.any
     d38:	mov	x0, x1
     d3c:	str	x1, [sp, #192]
     d40:	b	adc <gconv@@Base+0x1b4>
     d44:	ldr	x7, [x21, #32]
     d48:	ldr	w1, [x7]
     d4c:	ands	w0, w1, #0x7
     d50:	b.eq	9d4 <gconv@@Base+0xac>  // b.none
     d54:	cbnz	x13, 19cc <gconv@@Base+0x10a4>
     d58:	ldr	x2, [x14, #96]
     d5c:	mov	w4, w0
     d60:	cbz	x2, 10fc <gconv@@Base+0x7d4>
     d64:	stp	x23, x24, [sp, #192]
     d68:	cmp	w4, #0x4
     d6c:	b.hi	1948 <gconv@@Base+0x1020>  // b.pmore
     d70:	mov	w19, w4
     d74:	cbz	w4, 1548 <gconv@@Base+0xc20>
     d78:	add	x20, sp, #0xd0
     d7c:	add	x6, x7, #0x3
     d80:	mov	x0, #0x1                   	// #1
     d84:	nop
     d88:	add	x2, x20, x0
     d8c:	ldrb	w5, [x6, x0]
     d90:	cmp	x19, x0
     d94:	add	x0, x0, #0x1
     d98:	sturb	w5, [x2, #-1]
     d9c:	b.ne	d88 <gconv@@Base+0x460>  // b.any
     da0:	mov	x0, #0x4                   	// #4
     da4:	sub	x0, x0, x19
     da8:	add	x0, x23, x0
     dac:	cmp	x22, x0
     db0:	b.cc	1668 <gconv@@Base+0xd40>  // b.lo, b.ul, b.last
     db4:	add	x0, x23, #0x1
     db8:	add	x20, sp, #0xd0
     dbc:	cmp	x24, x28
     dc0:	b.cs	1400 <gconv@@Base+0xad8>  // b.hs, b.nlast
     dc4:	add	x19, x19, #0x1
     dc8:	str	x0, [sp, #192]
     dcc:	add	x2, x20, x19
     dd0:	cmp	x19, #0x3
     dd4:	ldurb	w3, [x0, #-1]
     dd8:	ccmp	x22, x0, #0x0, ls  // ls = plast
     ddc:	add	x0, x0, #0x1
     de0:	sturb	w3, [x2, #-1]
     de4:	b.hi	dc4 <gconv@@Base+0x49c>  // b.pmore
     de8:	ldr	w2, [sp, #208]
     dec:	mov	w0, #0xfffe                	// #65534
     df0:	str	x20, [sp, #192]
     df4:	cmp	w2, w0
     df8:	b.hi	1710 <gconv@@Base+0xde8>  // b.pmore
     dfc:	mov	w1, w2
     e00:	cmp	w2, #0xff
     e04:	adrp	x9, 1000 <gconv@@Base+0x6d8>
     e08:	b.ls	e48 <gconv@@Base+0x520>  // b.plast
     e0c:	adrp	x9, 1000 <gconv@@Base+0x6d8>
     e10:	add	x1, x9, #0xd20
     e14:	add	x1, x1, #0x3a8
     e18:	mov	w3, #0x203e                	// #8254
     e1c:	b	e28 <gconv@@Base+0x500>
     e20:	ldrh	w3, [x0, #10]
     e24:	mov	x1, x0
     e28:	cmp	w2, w3
     e2c:	add	x0, x1, #0x8
     e30:	b.hi	e20 <gconv@@Base+0x4f8>  // b.pmore
     e34:	ldrh	w0, [x0]
     e38:	cmp	w2, w0
     e3c:	b.cc	1594 <gconv@@Base+0xc6c>  // b.lo, b.ul, b.last
     e40:	ldr	w1, [x1, #12]
     e44:	add	w1, w2, w1
     e48:	add	x0, x9, #0xd20
     e4c:	add	x0, x0, #0x3f0
     e50:	ldrb	w1, [x0, w1, uxtw]
     e54:	cmp	w1, #0x0
     e58:	ccmp	w2, #0x0, #0x4, eq  // eq = none
     e5c:	b.ne	1594 <gconv@@Base+0xc6c>  // b.any
     e60:	add	x0, x24, #0x1
     e64:	cmp	x28, x0
     e68:	b.cc	1400 <gconv@@Base+0xad8>  // b.lo, b.ul, b.last
     e6c:	str	x0, [sp, #200]
     e70:	cmp	w2, #0x5c
     e74:	b.eq	1428 <gconv@@Base+0xb00>  // b.none
     e78:	cmp	w2, #0x7e
     e7c:	b.eq	1428 <gconv@@Base+0xb00>  // b.none
     e80:	strb	w1, [x24]
     e84:	ldr	x0, [sp, #192]
     e88:	add	x0, x0, #0x4
     e8c:	str	x0, [sp, #192]
     e90:	cmp	x0, x20
     e94:	b.eq	1604 <gconv@@Base+0xcdc>  // b.none
     e98:	ldr	w1, [x7]
     e9c:	sub	x20, x0, x20
     ea0:	and	w4, w1, #0x7
     ea4:	cmp	x4, x20
     ea8:	b.ge	1adc <gconv@@Base+0x11b4>  // b.tcont
     eac:	ldr	x23, [x10]
     eb0:	sub	x20, x20, x4
     eb4:	ldr	w12, [x21, #16]
     eb8:	and	w1, w1, #0xfffffff8
     ebc:	add	x23, x23, x20
     ec0:	str	x23, [x10]
     ec4:	ldr	x24, [sp, #200]
     ec8:	str	w1, [x7]
     ecc:	b	9d4 <gconv@@Base+0xac>
     ed0:	ldr	w20, [x21, #16]
     ed4:	str	x24, [x10]
     ed8:	ldr	x0, [x27, #96]
     edc:	cbz	x0, 11c0 <gconv@@Base+0x898>
     ee0:	stp	x24, x23, [sp, #192]
     ee4:	cmp	x22, x24
     ee8:	b.eq	1908 <gconv@@Base+0xfe0>  // b.none
     eec:	mov	w2, w20
     ef0:	mov	x0, x23
     ef4:	mov	x1, x24
     ef8:	mov	x20, x9
     efc:	add	x5, sp, #0xc8
     f00:	mov	x9, x26
     f04:	mov	x24, x10
     f08:	mov	w26, w7
     f0c:	mov	x7, x23
     f10:	mov	w23, w2
     f14:	mov	x4, #0x4                   	// #4
     f18:	add	x2, x1, #0x4
     f1c:	cmp	x22, x2
     f20:	b.cc	1514 <gconv@@Base+0xbec>  // b.lo, b.ul, b.last
     f24:	cmp	x20, x0
     f28:	b.ls	13c8 <gconv@@Base+0xaa0>  // b.plast
     f2c:	ldr	w3, [x1]
     f30:	mov	w1, #0xfffe                	// #65534
     f34:	cmp	w3, w1
     f38:	b.hi	1528 <gconv@@Base+0xc00>  // b.pmore
     f3c:	mov	w2, w3
     f40:	cmp	w3, #0xff
     f44:	adrp	x6, 1000 <gconv@@Base+0x6d8>
     f48:	b.ls	f88 <gconv@@Base+0x660>  // b.plast
     f4c:	adrp	x6, 1000 <gconv@@Base+0x6d8>
     f50:	add	x8, x6, #0xd20
     f54:	add	x8, x8, #0x3a8
     f58:	mov	w1, #0x203e                	// #8254
     f5c:	b	f68 <gconv@@Base+0x640>
     f60:	ldrh	w1, [x2, #10]
     f64:	mov	x8, x2
     f68:	cmp	w3, w1
     f6c:	add	x2, x8, #0x8
     f70:	b.hi	f60 <gconv@@Base+0x638>  // b.pmore
     f74:	ldrh	w1, [x2]
     f78:	cmp	w3, w1
     f7c:	b.cc	1324 <gconv@@Base+0x9fc>  // b.lo, b.ul, b.last
     f80:	ldr	w2, [x8, #12]
     f84:	add	w2, w3, w2
     f88:	add	x1, x6, #0xd20
     f8c:	cmp	w3, #0x0
     f90:	add	x1, x1, #0x3f0
     f94:	ldrb	w2, [x1, w2, uxtw]
     f98:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     f9c:	b.eq	1324 <gconv@@Base+0x9fc>  // b.none
     fa0:	add	x1, x0, #0x1
     fa4:	cmp	x20, x1
     fa8:	b.cc	13c8 <gconv@@Base+0xaa0>  // b.lo, b.ul, b.last
     fac:	str	x1, [sp, #200]
     fb0:	cmp	w3, #0x5c
     fb4:	b.eq	128c <gconv@@Base+0x964>  // b.none
     fb8:	cmp	w3, #0x7e
     fbc:	b.eq	128c <gconv@@Base+0x964>  // b.none
     fc0:	strb	w2, [x0]
     fc4:	ldp	x1, x0, [sp, #192]
     fc8:	add	x1, x1, #0x4
     fcc:	str	x1, [sp, #192]
     fd0:	cmp	x22, x1
     fd4:	b.ne	f18 <gconv@@Base+0x5f0>  // b.any
     fd8:	mov	x23, x7
     fdc:	mov	x10, x24
     fe0:	mov	w7, w26
     fe4:	mov	x26, x9
     fe8:	str	x22, [x24]
     fec:	ldr	x9, [sp, #184]
     ff0:	b	125c <gconv@@Base+0x934>
     ff4:	ldr	x2, [x10]
     ff8:	mov	x6, x28
     ffc:	mov	x4, x22
    1000:	add	x3, sp, #0xc0
    1004:	mov	x1, x21
    1008:	mov	x0, x27
    100c:	stp	x5, x10, [sp, #104]
    1010:	str	w12, [sp, #160]
    1014:	bl	700 <__gconv_transliterate@plt>
    1018:	ldr	w12, [sp, #160]
    101c:	mov	w9, w0
    1020:	cmp	w0, #0x6
    1024:	ldp	x5, x10, [sp, #104]
    1028:	b.eq	1270 <gconv@@Base+0x948>  // b.none
    102c:	cmp	w0, #0x5
    1030:	ldp	x0, x20, [sp, #192]
    1034:	b.ne	adc <gconv@@Base+0x1b4>  // b.any
    1038:	b	ae8 <gconv@@Base+0x1c0>
    103c:	ldr	x26, [sp, #136]
    1040:	ldr	x1, [sp, #176]
    1044:	ldr	x0, [x26]
    1048:	str	x20, [x21]
    104c:	ldr	w27, [sp, #128]
    1050:	add	x0, x0, x1
    1054:	str	x0, [x26]
    1058:	cmp	w27, #0x0
    105c:	ccmp	w9, #0x7, #0x0, ne  // ne = any
    1060:	b.eq	1610 <gconv@@Base+0xce8>  // b.none
    1064:	ldp	x19, x20, [sp, #16]
    1068:	ldp	x23, x24, [sp, #48]
    106c:	b	c34 <gconv@@Base+0x30c>
    1070:	ldr	x1, [x28]
    1074:	add	x0, x0, #0x4
    1078:	mov	w9, #0x6                   	// #6
    107c:	str	x0, [sp, #192]
    1080:	add	x1, x1, #0x1
    1084:	str	x1, [x28]
    1088:	b	adc <gconv@@Base+0x1b4>
    108c:	mov	w7, w9
    1090:	b	b64 <gconv@@Base+0x23c>
    1094:	cbz	w2, bf8 <gconv@@Base+0x2d0>
    1098:	cmp	x22, x13
    109c:	b.ls	191c <gconv@@Base+0xff4>  // b.plast
    10a0:	ldrb	w11, [x1, #1]
    10a4:	add	w2, w11, w2, lsl #8
    10a8:	cmp	w2, w8
    10ac:	b.ls	1508 <gconv@@Base+0xbe0>  // b.plast
    10b0:	mov	x13, x16
    10b4:	mov	w14, #0x82f1                	// #33521
    10b8:	b	10c4 <gconv@@Base+0x79c>
    10bc:	ldrh	w14, [x11, #10]
    10c0:	mov	x13, x11
    10c4:	cmp	w2, w14
    10c8:	add	x11, x13, #0x8
    10cc:	b.hi	10bc <gconv@@Base+0x794>  // b.pmore
    10d0:	ldrh	w13, [x13, #8]
    10d4:	cmp	w2, w13
    10d8:	b.cc	172c <gconv@@Base+0xe04>  // b.lo, b.ul, b.last
    10dc:	ldr	w11, [x11, #4]
    10e0:	add	w2, w2, w11
    10e4:	ldrh	w2, [x6, x2, lsl #1]
    10e8:	cbz	w2, 172c <gconv@@Base+0xe04>
    10ec:	add	x1, x1, #0x2
    10f0:	str	w2, [x20]
    10f4:	mov	x20, x0
    10f8:	b	c04 <gconv@@Base+0x2dc>
    10fc:	cmp	w0, #0x4
    1100:	b.hi	1928 <gconv@@Base+0x1000>  // b.pmore
    1104:	add	x6, x24, #0x4
    1108:	cbz	w0, 14b8 <gconv@@Base+0xb90>
    110c:	ldrb	w2, [x7, #4]
    1110:	tst	w1, #0x6
    1114:	strb	w2, [sp, #208]
    1118:	mov	x2, #0x1                   	// #1
    111c:	b.eq	112c <gconv@@Base+0x804>  // b.none
    1120:	ldrb	w3, [x7, #5]
    1124:	mov	x2, #0x2                   	// #2
    1128:	strb	w3, [sp, #209]
    112c:	cmp	x28, x6
    1130:	b.cc	1400 <gconv@@Base+0xad8>  // b.lo, b.ul, b.last
    1134:	add	x20, sp, #0xd0
    1138:	ldrb	w3, [x23]
    113c:	add	x15, x2, #0x1
    1140:	strb	w3, [x20, x2]
    1144:	ldrb	w5, [sp, #208]
    1148:	mov	w2, #0xfc                  	// #252
    114c:	and	w3, w5, #0xffffffdf
    1150:	cmp	w3, #0x80
    1154:	ccmp	w5, w2, #0x2, ne  // ne = any
    1158:	b.hi	1574 <gconv@@Base+0xc4c>  // b.pmore
    115c:	mov	w3, w5
    1160:	adrp	x9, 1000 <gconv@@Base+0x6d8>
    1164:	add	x2, x9, #0xd20
    1168:	ldrh	w3, [x2, x3, lsl #1]
    116c:	cbz	w3, 1840 <gconv@@Base+0xf18>
    1170:	cmp	w3, #0xa5
    1174:	b.eq	16a4 <gconv@@Base+0xd7c>  // b.none
    1178:	mov	w0, #0x203e                	// #8254
    117c:	cmp	w3, w0
    1180:	mov	w0, #0x7e                  	// #126
    1184:	csel	w3, w3, w0, ne  // ne = any
    1188:	str	w3, [x24]
    118c:	mov	x24, x6
    1190:	mov	x0, #0x1                   	// #1
    1194:	ldr	w1, [x7]
    1198:	and	w4, w1, #0x7
    119c:	cmp	x4, x0
    11a0:	b.ge	1964 <gconv@@Base+0x103c>  // b.tcont
    11a4:	sub	x0, x0, x4
    11a8:	ldr	w12, [x21, #16]
    11ac:	add	x23, x23, x0
    11b0:	str	x23, [x10]
    11b4:	and	w1, w1, #0xfffffff8
    11b8:	str	w1, [x7]
    11bc:	b	9d4 <gconv@@Base+0xac>
    11c0:	cmp	x22, x24
    11c4:	b.eq	1908 <gconv@@Base+0xfe0>  // b.none
    11c8:	add	x2, x23, #0x4
    11cc:	mov	x0, x23
    11d0:	cmp	x2, x9
    11d4:	mov	x4, #0x4                   	// #4
    11d8:	b.hi	18c8 <gconv@@Base+0xfa0>  // b.pmore
    11dc:	adrp	x5, 1000 <gconv@@Base+0x6d8>
    11e0:	adrp	x12, b000 <gconv@@Base+0xa6d8>
    11e4:	and	w20, w20, #0x2
    11e8:	add	x5, x5, #0xd20
    11ec:	add	x12, x12, #0x258
    11f0:	mov	w6, #0xfc                  	// #252
    11f4:	mov	w18, #0x203e                	// #8254
    11f8:	mov	w17, #0x7e                  	// #126
    11fc:	mov	w16, #0x81fc                	// #33276
    1200:	ldrb	w1, [x24]
    1204:	and	w3, w1, #0xffffffdf
    1208:	cmp	w3, #0x80
    120c:	ccmp	w1, w6, #0x2, ne  // ne = any
    1210:	b.hi	12e0 <gconv@@Base+0x9b8>  // b.pmore
    1214:	mov	w3, w1
    1218:	add	x8, x24, #0x1
    121c:	ldrh	w3, [x5, x3, lsl #1]
    1220:	cbz	w3, 16ac <gconv@@Base+0xd84>
    1224:	cmp	w3, #0xa5
    1228:	b.eq	1540 <gconv@@Base+0xc18>  // b.none
    122c:	cmp	w3, w18
    1230:	csel	w3, w3, w17, ne  // ne = any
    1234:	mov	x24, x8
    1238:	str	w3, [x0]
    123c:	mov	x0, x2
    1240:	cmp	x22, x24
    1244:	b.eq	1258 <gconv@@Base+0x930>  // b.none
    1248:	add	x2, x0, #0x4
    124c:	cmp	x9, x2
    1250:	b.cs	1200 <gconv@@Base+0x8d8>  // b.hs, b.nlast
    1254:	mov	x4, #0x5                   	// #5
    1258:	str	x24, [x10]
    125c:	cmp	x9, x0
    1260:	b.ne	1498 <gconv@@Base+0xb70>  // b.any
    1264:	cmp	x4, #0x5
    1268:	b.eq	13e8 <gconv@@Base+0xac0>  // b.none
    126c:	b	1384 <gconv@@Base+0xa5c>
    1270:	ldr	x20, [sp, #200]
    1274:	b	cb4 <gconv@@Base+0x38c>
    1278:	mov	x1, x24
    127c:	mov	x20, x23
    1280:	mov	w9, #0x5                   	// #5
    1284:	str	x1, [x10]
    1288:	b	c20 <gconv@@Base+0x2f8>
    128c:	strb	w3, [x0]
    1290:	b	fc4 <gconv@@Base+0x69c>
    1294:	cbnz	x13, 1984 <gconv@@Base+0x105c>
    1298:	ldr	x0, [x21, #32]
    129c:	mov	w9, #0x0                   	// #0
    12a0:	str	xzr, [x0]
    12a4:	ldr	w0, [x21, #16]
    12a8:	tbnz	w0, #0, c34 <gconv@@Base+0x30c>
    12ac:	mov	x0, x25
    12b0:	str	w6, [sp, #104]
    12b4:	bl	740 <_dl_mcount_wrapper_check@plt>
    12b8:	ldp	x0, x1, [sp, #144]
    12bc:	mov	w7, w27
    12c0:	ldr	w6, [sp, #104]
    12c4:	mov	x5, x26
    12c8:	mov	x4, #0x0                   	// #0
    12cc:	mov	x3, #0x0                   	// #0
    12d0:	mov	x2, #0x0                   	// #0
    12d4:	blr	x25
    12d8:	mov	w9, w0
    12dc:	b	c34 <gconv@@Base+0x30c>
    12e0:	cbz	x28, 12e8 <gconv@@Base+0x9c0>
    12e4:	cbnz	w20, 1410 <gconv@@Base+0xae8>
    12e8:	mov	x4, #0x6                   	// #6
    12ec:	b	1258 <gconv@@Base+0x930>
    12f0:	add	x1, x20, #0x2
    12f4:	ldrh	w2, [x0, #2]
    12f8:	cmp	x26, x1
    12fc:	b.cc	ce4 <gconv@@Base+0x3bc>  // b.lo, b.ul, b.last
    1300:	add	x0, x20, #0x1
    1304:	str	x0, [sp, #200]
    1308:	lsr	w0, w2, #8
    130c:	strb	w0, [x20]
    1310:	ldr	x0, [sp, #200]
    1314:	add	x1, x0, #0x1
    1318:	str	x1, [sp, #200]
    131c:	strb	w2, [x0]
    1320:	b	ad0 <gconv@@Base+0x1a8>
    1324:	and	w3, w3, #0xffff
    1328:	mov	w6, #0x0                   	// #0
    132c:	mov	w1, #0x23e6                	// #9190
    1330:	b	1358 <gconv@@Base+0xa30>
    1334:	add	w2, w1, w6
    1338:	lsr	w8, w2, #1
    133c:	lsr	w2, w2, #1
    1340:	lsl	x8, x8, #2
    1344:	add	x10, x19, x8
    1348:	ldrh	w8, [x19, x8]
    134c:	cmp	w8, w3
    1350:	b.ls	13b0 <gconv@@Base+0xa88>  // b.plast
    1354:	mov	w1, w2
    1358:	cmp	w1, w6
    135c:	b.hi	1334 <gconv@@Base+0xa0c>  // b.pmore
    1360:	cbz	x28, 1514 <gconv@@Base+0xbec>
    1364:	ldr	w1, [x21, #16]
    1368:	tbnz	w1, #3, 1430 <gconv@@Base+0xb08>
    136c:	ldr	x8, [sp, #192]
    1370:	tbnz	w23, #1, 14ec <gconv@@Base+0xbc4>
    1374:	ldr	x1, [sp, #184]
    1378:	str	x8, [x24]
    137c:	cmp	x0, x1
    1380:	b.ne	1498 <gconv@@Base+0xb70>  // b.any
    1384:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1388:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    138c:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1390:	add	x3, x3, #0xd18
    1394:	add	x1, x1, #0xb80
    1398:	add	x0, x0, #0xcb0
    139c:	mov	w2, #0x2eb                 	// #747
    13a0:	bl	750 <__assert_fail@plt>
    13a4:	ldr	w27, [sp, #128]
    13a8:	mov	w9, w7
    13ac:	b	1058 <gconv@@Base+0x730>
    13b0:	b.cs	18d4 <gconv@@Base+0xfac>  // b.hs, b.nlast
    13b4:	add	w6, w2, #0x1
    13b8:	b	1358 <gconv@@Base+0xa30>
    13bc:	mov	x0, x22
    13c0:	mov	w9, #0x4                   	// #4
    13c4:	b	ae8 <gconv@@Base+0x1c0>
    13c8:	ldp	x1, x2, [sp, #184]
    13cc:	str	x2, [x24]
    13d0:	mov	x23, x7
    13d4:	mov	x10, x24
    13d8:	mov	w7, w26
    13dc:	mov	x26, x9
    13e0:	cmp	x0, x1
    13e4:	b.ne	1498 <gconv@@Base+0xb70>  // b.any
    13e8:	cmp	x0, x23
    13ec:	b.ne	b64 <gconv@@Base+0x23c>  // b.any
    13f0:	ldr	w0, [x21, #20]
    13f4:	sub	w0, w0, #0x1
    13f8:	str	w0, [x21, #20]
    13fc:	b	b64 <gconv@@Base+0x23c>
    1400:	mov	w9, #0x5                   	// #5
    1404:	ldp	x19, x20, [sp, #16]
    1408:	ldp	x23, x24, [sp, #48]
    140c:	b	c34 <gconv@@Base+0x30c>
    1410:	ldr	x1, [x28]
    1414:	add	x24, x24, #0x1
    1418:	mov	x4, #0x6                   	// #6
    141c:	add	x1, x1, #0x1
    1420:	str	x1, [x28]
    1424:	b	1240 <gconv@@Base+0x918>
    1428:	strb	w2, [x24]
    142c:	b	e84 <gconv@@Base+0x55c>
    1430:	ldr	x2, [x24]
    1434:	mov	x4, x22
    1438:	mov	x6, x28
    143c:	add	x3, sp, #0xc0
    1440:	mov	x1, x21
    1444:	mov	x0, x27
    1448:	stp	x5, x7, [sp, #104]
    144c:	str	x9, [sp, #160]
    1450:	bl	700 <__gconv_transliterate@plt>
    1454:	sxtw	x4, w0
    1458:	cmp	w4, #0x6
    145c:	ldp	x5, x7, [sp, #104]
    1460:	ldr	x9, [sp, #160]
    1464:	b.eq	18c0 <gconv@@Base+0xf98>  // b.none
    1468:	cmp	w4, #0x5
    146c:	ldp	x1, x0, [sp, #192]
    1470:	b.ne	fd0 <gconv@@Base+0x6a8>  // b.any
    1474:	mov	x10, x24
    1478:	mov	x24, x1
    147c:	ldr	x1, [sp, #184]
    1480:	mov	x23, x7
    1484:	str	x24, [x10]
    1488:	mov	w7, w26
    148c:	cmp	x0, x1
    1490:	mov	x26, x9
    1494:	b.eq	13e8 <gconv@@Base+0xac0>  // b.none
    1498:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    149c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    14a0:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    14a4:	add	x3, x3, #0xd18
    14a8:	add	x1, x1, #0xb80
    14ac:	add	x0, x0, #0xc98
    14b0:	mov	w2, #0x2ea                 	// #746
    14b4:	bl	750 <__assert_fail@plt>
    14b8:	cmp	x28, x6
    14bc:	b.cc	1400 <gconv@@Base+0xad8>  // b.lo, b.ul, b.last
    14c0:	mov	x3, x23
    14c4:	add	x20, sp, #0xd0
    14c8:	mov	x2, #0x0                   	// #0
    14cc:	ldrb	w5, [x3], #1
    14d0:	add	x15, x2, #0x1
    14d4:	strb	w5, [x20, x2]
    14d8:	cmp	x15, #0x1
    14dc:	ccmp	x22, x3, #0x0, ls  // ls = plast
    14e0:	mov	x2, #0x1                   	// #1
    14e4:	b.hi	14cc <gconv@@Base+0xba4>  // b.pmore
    14e8:	b	1144 <gconv@@Base+0x81c>
    14ec:	ldr	x2, [x28]
    14f0:	add	x1, x8, #0x4
    14f4:	mov	x4, #0x6                   	// #6
    14f8:	str	x1, [sp, #192]
    14fc:	add	x2, x2, #0x1
    1500:	str	x2, [x28]
    1504:	b	fd0 <gconv@@Base+0x6a8>
    1508:	mov	x11, x16
    150c:	mov	w13, #0x8140                	// #33088
    1510:	b	10d4 <gconv@@Base+0x7ac>
    1514:	ldp	x1, x2, [sp, #184]
    1518:	str	x2, [x24]
    151c:	cmp	x0, x1
    1520:	b.eq	1384 <gconv@@Base+0xa5c>  // b.none
    1524:	b	1498 <gconv@@Base+0xb70>
    1528:	mov	w1, #0x1c00                	// #7168
    152c:	cmp	w1, w3, lsr #7
    1530:	b.ne	1360 <gconv@@Base+0xa38>  // b.any
    1534:	mov	x1, x2
    1538:	str	x2, [sp, #192]
    153c:	b	fd0 <gconv@@Base+0x6a8>
    1540:	mov	w3, #0x5c                  	// #92
    1544:	b	1234 <gconv@@Base+0x90c>
    1548:	mov	x0, #0x4                   	// #4
    154c:	mov	x19, #0x0                   	// #0
    1550:	b	da8 <gconv@@Base+0x480>
    1554:	mov	w9, #0x6                   	// #6
    1558:	ldr	x0, [sp, #192]
    155c:	b	ae8 <gconv@@Base+0x1c0>
    1560:	mov	x1, x22
    1564:	mov	x20, x23
    1568:	mov	w9, #0x4                   	// #4
    156c:	str	x1, [x10]
    1570:	b	c20 <gconv@@Base+0x2f8>
    1574:	mov	w9, #0x6                   	// #6
    1578:	cbz	x11, 1064 <gconv@@Base+0x73c>
    157c:	tbz	w12, #1, 1064 <gconv@@Base+0x73c>
    1580:	ldr	x2, [x11]
    1584:	mov	x0, #0x1                   	// #1
    1588:	add	x2, x2, x0
    158c:	str	x2, [x11]
    1590:	b	119c <gconv@@Base+0x874>
    1594:	adrp	x5, 2000 <gconv@@Base+0x16d8>
    1598:	and	w2, w2, #0xffff
    159c:	add	x5, x5, #0x2c0
    15a0:	mov	w3, #0x23e6                	// #9190
    15a4:	mov	w4, #0x0                   	// #0
    15a8:	b	15d0 <gconv@@Base+0xca8>
    15ac:	add	w0, w3, w4
    15b0:	lsr	w1, w0, #1
    15b4:	lsr	w0, w0, #1
    15b8:	lsl	x1, x1, #2
    15bc:	add	x6, x5, x1
    15c0:	ldrh	w1, [x5, x1]
    15c4:	cmp	w1, w2
    15c8:	b.ls	15f4 <gconv@@Base+0xccc>  // b.plast
    15cc:	mov	w3, w0
    15d0:	cmp	w3, w4
    15d4:	b.hi	15ac <gconv@@Base+0xc84>  // b.pmore
    15d8:	cbz	x11, 15e4 <gconv@@Base+0xcbc>
    15dc:	tbnz	w12, #3, 1770 <gconv@@Base+0xe48>
    15e0:	tbnz	w12, #1, 174c <gconv@@Base+0xe24>
    15e4:	mov	w9, #0x6                   	// #6
    15e8:	ldp	x19, x20, [sp, #16]
    15ec:	ldp	x23, x24, [sp, #48]
    15f0:	b	c34 <gconv@@Base+0x30c>
    15f4:	b.cs	1aec <gconv@@Base+0x11c4>  // b.hs, b.nlast
    15f8:	add	w4, w0, #0x1
    15fc:	b	15d0 <gconv@@Base+0xca8>
    1600:	cbnz	w9, 1064 <gconv@@Base+0x73c>
    1604:	ldr	w12, [x21, #16]
    1608:	ldr	x23, [x10]
    160c:	b	9d4 <gconv@@Base+0xac>
    1610:	ldr	x0, [x10]
    1614:	sub	x1, x22, x0
    1618:	cmp	x1, #0x3
    161c:	b.gt	19ac <gconv@@Base+0x1084>
    1620:	ldr	x2, [x21, #32]
    1624:	cmp	x0, x22
    1628:	add	x0, x0, #0x1
    162c:	add	x3, x2, #0x4
    1630:	b.cs	1914 <gconv@@Base+0xfec>  // b.hs, b.nlast
    1634:	str	x0, [x10]
    1638:	cmp	x22, x0
    163c:	add	x0, x0, #0x1
    1640:	ldurb	w4, [x0, #-2]
    1644:	strb	w4, [x3], #1
    1648:	b.ne	1634 <gconv@@Base+0xd0c>  // b.any
    164c:	ldr	w0, [x2]
    1650:	ldp	x19, x20, [sp, #16]
    1654:	and	w0, w0, #0xfffffff8
    1658:	orr	w0, w0, w1
    165c:	ldp	x23, x24, [sp, #48]
    1660:	str	w0, [x2]
    1664:	b	c34 <gconv@@Base+0x30c>
    1668:	str	x22, [x10]
    166c:	cmp	x23, x22
    1670:	b.cs	1694 <gconv@@Base+0xd6c>  // b.hs, b.nlast
    1674:	add	x7, x7, x19
    1678:	add	x23, x23, #0x1
    167c:	str	x23, [sp, #192]
    1680:	cmp	x22, x23
    1684:	add	x7, x7, #0x1
    1688:	ldurb	w0, [x23, #-1]
    168c:	strb	w0, [x7, #3]
    1690:	b.ne	1678 <gconv@@Base+0xd50>  // b.any
    1694:	mov	w9, #0x7                   	// #7
    1698:	ldp	x19, x20, [sp, #16]
    169c:	ldp	x23, x24, [sp, #48]
    16a0:	b	c34 <gconv@@Base+0x30c>
    16a4:	mov	w3, #0x5c                  	// #92
    16a8:	b	1188 <gconv@@Base+0x860>
    16ac:	cbz	w1, 1234 <gconv@@Base+0x90c>
    16b0:	cmp	x22, x8
    16b4:	b.ls	1b38 <gconv@@Base+0x1210>  // b.plast
    16b8:	ldrb	w3, [x24, #1]
    16bc:	add	w1, w3, w1, lsl #8
    16c0:	add	x3, x5, #0x200
    16c4:	cmp	w1, w16
    16c8:	b.ls	16e4 <gconv@@Base+0xdbc>  // b.plast
    16cc:	mov	w8, #0x82f1                	// #33521
    16d0:	b	16d8 <gconv@@Base+0xdb0>
    16d4:	ldrh	w8, [x3, #10]
    16d8:	add	x3, x3, #0x8
    16dc:	cmp	w1, w8
    16e0:	b.hi	16d4 <gconv@@Base+0xdac>  // b.pmore
    16e4:	ldrh	w8, [x3]
    16e8:	cmp	w1, w8
    16ec:	b.cc	1b40 <gconv@@Base+0x1218>  // b.lo, b.ul, b.last
    16f0:	ldr	w3, [x3, #4]
    16f4:	add	w1, w1, w3
    16f8:	ldrh	w1, [x12, x1, lsl #1]
    16fc:	cbz	w1, 1b40 <gconv@@Base+0x1218>
    1700:	add	x24, x24, #0x2
    1704:	str	w1, [x0]
    1708:	mov	x0, x2
    170c:	b	1240 <gconv@@Base+0x918>
    1710:	mov	w0, #0x1c00                	// #7168
    1714:	cmp	w0, w2, lsr #7
    1718:	b.ne	15d8 <gconv@@Base+0xcb0>  // b.any
    171c:	add	x0, x20, #0x4
    1720:	mov	x20, #0x4                   	// #4
    1724:	str	x0, [sp, #192]
    1728:	b	ea4 <gconv@@Base+0x57c>
    172c:	cbz	x28, d18 <gconv@@Base+0x3f0>
    1730:	cbz	w3, d18 <gconv@@Base+0x3f0>
    1734:	ldr	x0, [x28]
    1738:	add	x1, x1, #0x2
    173c:	mov	w9, #0x6                   	// #6
    1740:	add	x0, x0, #0x1
    1744:	str	x0, [x28]
    1748:	b	c04 <gconv@@Base+0x2dc>
    174c:	mov	x0, x20
    1750:	ldr	x1, [x11]
    1754:	add	x0, x0, #0x4
    1758:	str	x0, [sp, #192]
    175c:	add	x1, x1, #0x1
    1760:	str	x1, [x11]
    1764:	cmp	x0, x20
    1768:	b.ne	e98 <gconv@@Base+0x570>  // b.any
    176c:	b	15e4 <gconv@@Base+0xcbc>
    1770:	add	x4, x20, x19
    1774:	mov	x6, x11
    1778:	mov	x0, x14
    177c:	mov	x2, x23
    1780:	add	x5, sp, #0xc8
    1784:	add	x3, sp, #0xc0
    1788:	mov	x1, x21
    178c:	stp	x14, x11, [sp, #104]
    1790:	stp	x4, x7, [sp, #120]
    1794:	str	w12, [sp, #136]
    1798:	stp	x10, x13, [sp, #160]
    179c:	bl	700 <__gconv_transliterate@plt>
    17a0:	ldr	w12, [sp, #136]
    17a4:	mov	w9, w0
    17a8:	cmp	w0, #0x6
    17ac:	ldp	x14, x11, [sp, #104]
    17b0:	ldr	x7, [sp, #128]
    17b4:	ldp	x10, x13, [sp, #160]
    17b8:	ldr	x0, [sp, #192]
    17bc:	b.eq	1b20 <gconv@@Base+0x11f8>  // b.none
    17c0:	cmp	x0, x20
    17c4:	ldr	x4, [sp, #120]
    17c8:	b.ne	e98 <gconv@@Base+0x570>  // b.any
    17cc:	cmp	w9, #0x7
    17d0:	b.ne	1600 <gconv@@Base+0xcd8>  // b.any
    17d4:	add	x0, x20, #0x4
    17d8:	cmp	x4, x0
    17dc:	b.eq	1a0c <gconv@@Base+0x10e4>  // b.none
    17e0:	ldr	w0, [x7]
    17e4:	ldr	x1, [x10]
    17e8:	and	x2, x0, #0x7
    17ec:	sub	x2, x19, x2
    17f0:	and	w0, w0, #0xfffffff8
    17f4:	add	x1, x1, x2
    17f8:	str	x1, [x10]
    17fc:	cmp	x19, w0, sxtw
    1800:	b.le	19ec <gconv@@Base+0x10c4>
    1804:	cmp	x19, #0x4
    1808:	b.hi	1b28 <gconv@@Base+0x1200>  // b.pmore
    180c:	orr	w0, w0, w19
    1810:	str	w0, [x7]
    1814:	cmp	x4, x20
    1818:	b.ls	1694 <gconv@@Base+0xd6c>  // b.plast
    181c:	add	x20, x20, #0x1
    1820:	add	x7, x7, #0x4
    1824:	str	x20, [sp, #192]
    1828:	cmp	x4, x20
    182c:	add	x20, x20, #0x1
    1830:	ldurb	w0, [x20, #-2]
    1834:	strb	w0, [x7], #1
    1838:	b.ne	1824 <gconv@@Base+0xefc>  // b.any
    183c:	b	1694 <gconv@@Base+0xd6c>
    1840:	cbz	w5, 1188 <gconv@@Base+0x860>
    1844:	add	x3, x20, x15
    1848:	add	x9, x20, #0x1
    184c:	cmp	x3, x9
    1850:	b.ls	1a2c <gconv@@Base+0x1104>  // b.plast
    1854:	ldrb	w3, [sp, #209]
    1858:	mov	w0, #0x81fc                	// #33276
    185c:	add	w3, w3, w5, lsl #8
    1860:	cmp	w3, w0
    1864:	add	x0, x2, #0x200
    1868:	b.ls	1884 <gconv@@Base+0xf5c>  // b.plast
    186c:	mov	w2, #0x82f1                	// #33521
    1870:	b	1878 <gconv@@Base+0xf50>
    1874:	ldrh	w2, [x0, #10]
    1878:	add	x0, x0, #0x8
    187c:	cmp	w3, w2
    1880:	b.hi	1874 <gconv@@Base+0xf4c>  // b.pmore
    1884:	ldrh	w2, [x0]
    1888:	cmp	w3, w2
    188c:	b.cc	1a80 <gconv@@Base+0x1158>  // b.lo, b.ul, b.last
    1890:	ldr	w2, [x0, #4]
    1894:	adrp	x0, b000 <gconv@@Base+0xa6d8>
    1898:	add	x0, x0, #0x258
    189c:	add	w3, w3, w2
    18a0:	ldrh	w0, [x0, x3, lsl #1]
    18a4:	cbz	w0, 1a80 <gconv@@Base+0x1158>
    18a8:	str	w0, [x24]
    18ac:	mov	x24, x6
    18b0:	mov	x0, #0x2                   	// #2
    18b4:	ldr	w1, [x7]
    18b8:	and	w4, w1, #0x7
    18bc:	b	119c <gconv@@Base+0x874>
    18c0:	ldr	x0, [sp, #200]
    18c4:	b	136c <gconv@@Base+0xa44>
    18c8:	cmp	x9, x23
    18cc:	b.eq	13f0 <gconv@@Base+0xac8>  // b.none
    18d0:	b	1498 <gconv@@Base+0xb70>
    18d4:	add	x1, x0, #0x2
    18d8:	ldrh	w2, [x10, #2]
    18dc:	cmp	x20, x1
    18e0:	b.cc	13c8 <gconv@@Base+0xaa0>  // b.lo, b.ul, b.last
    18e4:	add	x1, x0, #0x1
    18e8:	str	x1, [sp, #200]
    18ec:	lsr	w1, w2, #8
    18f0:	strb	w1, [x0]
    18f4:	ldr	x0, [sp, #200]
    18f8:	add	x1, x0, #0x1
    18fc:	str	x1, [sp, #200]
    1900:	strb	w2, [x0]
    1904:	b	fc4 <gconv@@Base+0x69c>
    1908:	cmp	x9, x23
    190c:	b.eq	1384 <gconv@@Base+0xa5c>  // b.none
    1910:	b	1498 <gconv@@Base+0xb70>
    1914:	mov	w1, #0x0                   	// #0
    1918:	b	164c <gconv@@Base+0xd24>
    191c:	mov	w9, #0x7                   	// #7
    1920:	str	x1, [x10]
    1924:	b	c20 <gconv@@Base+0x2f8>
    1928:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    192c:	add	x3, x3, #0xd00
    1930:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1934:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1938:	add	x1, x1, #0xbb0
    193c:	add	x0, x0, #0xbc0
    1940:	mov	w2, #0x18b                 	// #395
    1944:	bl	750 <__assert_fail@plt>
    1948:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    194c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1950:	add	x3, x3, #0xce8
    1954:	b	1934 <gconv@@Base+0x100c>
    1958:	stp	x19, x20, [sp, #16]
    195c:	stp	x23, x24, [sp, #48]
    1960:	bl	710 <__stack_chk_fail@plt>
    1964:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1968:	add	x3, x3, #0xd00
    196c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1970:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1974:	add	x1, x1, #0xbb0
    1978:	add	x0, x0, #0xbf0
    197c:	mov	w2, #0x1c9                 	// #457
    1980:	bl	750 <__assert_fail@plt>
    1984:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1988:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    198c:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1990:	add	x3, x3, #0xd18
    1994:	add	x1, x1, #0xb80
    1998:	add	x0, x0, #0xb98
    199c:	mov	w2, #0x1a4                 	// #420
    19a0:	stp	x19, x20, [sp, #16]
    19a4:	stp	x23, x24, [sp, #48]
    19a8:	bl	750 <__assert_fail@plt>
    19ac:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    19b0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    19b4:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    19b8:	add	x3, x3, #0xd18
    19bc:	add	x1, x1, #0xb80
    19c0:	add	x0, x0, #0xcd0
    19c4:	mov	w2, #0x31e                 	// #798
    19c8:	bl	750 <__assert_fail@plt>
    19cc:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    19d0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    19d4:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    19d8:	add	x3, x3, #0xd18
    19dc:	add	x1, x1, #0xb80
    19e0:	add	x0, x0, #0xb98
    19e4:	mov	w2, #0x234                 	// #564
    19e8:	bl	750 <__assert_fail@plt>
    19ec:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    19f0:	add	x3, x3, #0xce8
    19f4:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    19f8:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    19fc:	add	x1, x1, #0xbb0
    1a00:	add	x0, x0, #0xc40
    1a04:	mov	w2, #0x1e5                 	// #485
    1a08:	bl	750 <__assert_fail@plt>
    1a0c:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1a10:	add	x3, x3, #0xce8
    1a14:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1a18:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1a1c:	add	x1, x1, #0xbb0
    1a20:	add	x0, x0, #0xc18
    1a24:	mov	w2, #0x1db                 	// #475
    1a28:	bl	750 <__assert_fail@plt>
    1a2c:	add	x2, x20, #0x2
    1a30:	cmp	x3, x2
    1a34:	b.eq	1acc <gconv@@Base+0x11a4>  // b.none
    1a38:	mov	w0, w0
    1a3c:	and	w1, w1, #0xfffffff8
    1a40:	sub	x0, x15, x0
    1a44:	add	x23, x23, x0
    1a48:	str	x23, [x10]
    1a4c:	cmp	x15, w1, sxtw
    1a50:	b.le	1abc <gconv@@Base+0x1194>
    1a54:	cmp	x15, #0x4
    1a58:	b.hi	1a9c <gconv@@Base+0x1174>  // b.pmore
    1a5c:	orr	w1, w1, w15
    1a60:	str	w1, [x7]
    1a64:	cmp	x3, x20
    1a68:	mov	w9, #0x7                   	// #7
    1a6c:	b.ls	1064 <gconv@@Base+0x73c>  // b.plast
    1a70:	strb	w5, [x7, #4]
    1a74:	ldp	x19, x20, [sp, #16]
    1a78:	ldp	x23, x24, [sp, #48]
    1a7c:	b	c34 <gconv@@Base+0x30c>
    1a80:	cbz	x11, 15e4 <gconv@@Base+0xcbc>
    1a84:	tbz	w12, #1, 15e4 <gconv@@Base+0xcbc>
    1a88:	ldr	x2, [x11]
    1a8c:	mov	x0, #0x2                   	// #2
    1a90:	add	x2, x2, #0x1
    1a94:	str	x2, [x11]
    1a98:	b	119c <gconv@@Base+0x874>
    1a9c:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1aa0:	add	x3, x3, #0xd00
    1aa4:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1aa8:	adrp	x0, 1000 <gconv@@Base+0x6d8>
    1aac:	add	x1, x1, #0xbb0
    1ab0:	add	x0, x0, #0xc68
    1ab4:	mov	w2, #0x1e6                 	// #486
    1ab8:	bl	750 <__assert_fail@plt>
    1abc:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1ac0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1ac4:	add	x3, x3, #0xd00
    1ac8:	b	19f8 <gconv@@Base+0x10d0>
    1acc:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1ad0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1ad4:	add	x3, x3, #0xd00
    1ad8:	b	1a18 <gconv@@Base+0x10f0>
    1adc:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1ae0:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1ae4:	add	x3, x3, #0xce8
    1ae8:	b	1970 <gconv@@Base+0x1048>
    1aec:	add	x0, x24, #0x2
    1af0:	ldrh	w1, [x6, #2]
    1af4:	cmp	x28, x0
    1af8:	b.cc	1400 <gconv@@Base+0xad8>  // b.lo, b.ul, b.last
    1afc:	add	x0, x24, #0x1
    1b00:	str	x0, [sp, #200]
    1b04:	lsr	w0, w1, #8
    1b08:	strb	w0, [x24]
    1b0c:	ldr	x0, [sp, #200]
    1b10:	add	x2, x0, #0x1
    1b14:	str	x2, [sp, #200]
    1b18:	strb	w1, [x0]
    1b1c:	b	e84 <gconv@@Base+0x55c>
    1b20:	tbz	w12, #1, 1764 <gconv@@Base+0xe3c>
    1b24:	b	1750 <gconv@@Base+0xe28>
    1b28:	adrp	x3, 1000 <gconv@@Base+0x6d8>
    1b2c:	adrp	x1, 1000 <gconv@@Base+0x6d8>
    1b30:	add	x3, x3, #0xce8
    1b34:	b	1aa8 <gconv@@Base+0x1180>
    1b38:	mov	x4, #0x7                   	// #7
    1b3c:	b	1258 <gconv@@Base+0x930>
    1b40:	cbz	x28, 12e8 <gconv@@Base+0x9c0>
    1b44:	cbz	w20, 12e8 <gconv@@Base+0x9c0>
    1b48:	ldr	x1, [x28]
    1b4c:	add	x24, x24, #0x2
    1b50:	mov	x4, #0x6                   	// #6
    1b54:	add	x1, x1, #0x1
    1b58:	str	x1, [x28]
    1b5c:	b	1240 <gconv@@Base+0x918>

Disassembly of section .fini:

0000000000001b60 <.fini>:
    1b60:	stp	x29, x30, [sp, #-16]!
    1b64:	mov	x29, sp
    1b68:	ldp	x29, x30, [sp], #16
    1b6c:	ret
