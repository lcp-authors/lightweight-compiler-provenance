
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001648 <.init>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	bl	1940 <PyThread_free_lock@plt+0x10>
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret

Disassembly of section .plt:

0000000000001660 <memcpy@plt-0x20>:
    1660:	stp	x16, x30, [sp, #-16]!
    1664:	adrp	x16, 13000 <PyInit__bz2@@Base+0x115ec>
    1668:	ldr	x17, [x16, #4088]
    166c:	add	x16, x16, #0xff8
    1670:	br	x17
    1674:	nop
    1678:	nop
    167c:	nop

0000000000001680 <memcpy@plt>:
    1680:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1684:	ldr	x17, [x16]
    1688:	add	x16, x16, #0x0
    168c:	br	x17

0000000000001690 <memmove@plt>:
    1690:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1694:	ldr	x17, [x16, #8]
    1698:	add	x16, x16, #0x8
    169c:	br	x17

00000000000016a0 <_PyBytes_Resize@plt>:
    16a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #16]
    16a8:	add	x16, x16, #0x10
    16ac:	br	x17

00000000000016b0 <PyEval_RestoreThread@plt>:
    16b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #24]
    16b8:	add	x16, x16, #0x18
    16bc:	br	x17

00000000000016c0 <PyMem_Free@plt>:
    16c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #32]
    16c8:	add	x16, x16, #0x20
    16cc:	br	x17

00000000000016d0 <PyBuffer_Release@plt>:
    16d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #40]
    16d8:	add	x16, x16, #0x28
    16dc:	br	x17

00000000000016e0 <__cxa_finalize@plt>:
    16e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #48]
    16e8:	add	x16, x16, #0x30
    16ec:	br	x17

00000000000016f0 <PyMem_RawMalloc@plt>:
    16f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #56]
    16f8:	add	x16, x16, #0x38
    16fc:	br	x17

0000000000001700 <PyBuffer_IsContiguous@plt>:
    1700:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #64]
    1708:	add	x16, x16, #0x40
    170c:	br	x17

0000000000001710 <PyBytes_FromStringAndSize@plt>:
    1710:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #72]
    1718:	add	x16, x16, #0x48
    171c:	br	x17

0000000000001720 <_Py_Dealloc@plt>:
    1720:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #80]
    1728:	add	x16, x16, #0x50
    172c:	br	x17

0000000000001730 <PyErr_NoMemory@plt>:
    1730:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #88]
    1738:	add	x16, x16, #0x58
    173c:	br	x17

0000000000001740 <PyThread_acquire_lock@plt>:
    1740:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #96]
    1748:	add	x16, x16, #0x60
    174c:	br	x17

0000000000001750 <_PyArg_UnpackKeywords@plt>:
    1750:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #104]
    1758:	add	x16, x16, #0x68
    175c:	br	x17

0000000000001760 <PyErr_SetString@plt>:
    1760:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #112]
    1768:	add	x16, x16, #0x70
    176c:	br	x17

0000000000001770 <BZ2_bzDecompressInit@plt>:
    1770:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #120]
    1778:	add	x16, x16, #0x78
    177c:	br	x17

0000000000001780 <BZ2_bzDecompressEnd@plt>:
    1780:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #128]
    1788:	add	x16, x16, #0x80
    178c:	br	x17

0000000000001790 <PyMem_Realloc@plt>:
    1790:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #136]
    1798:	add	x16, x16, #0x88
    179c:	br	x17

00000000000017a0 <PyErr_SetNone@plt>:
    17a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #144]
    17a8:	add	x16, x16, #0x90
    17ac:	br	x17

00000000000017b0 <BZ2_bzCompressInit@plt>:
    17b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #152]
    17b8:	add	x16, x16, #0x98
    17bc:	br	x17

00000000000017c0 <PyType_Ready@plt>:
    17c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #160]
    17c8:	add	x16, x16, #0xa0
    17cc:	br	x17

00000000000017d0 <PyLong_AsSsize_t@plt>:
    17d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #168]
    17d8:	add	x16, x16, #0xa8
    17dc:	br	x17

00000000000017e0 <_PyArg_BadArgument@plt>:
    17e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #176]
    17e8:	add	x16, x16, #0xb0
    17ec:	br	x17

00000000000017f0 <BZ2_bzCompressEnd@plt>:
    17f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #184]
    17f8:	add	x16, x16, #0xb8
    17fc:	br	x17

0000000000001800 <_PyArg_NoPositional@plt>:
    1800:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #192]
    1808:	add	x16, x16, #0xc0
    180c:	br	x17

0000000000001810 <__gmon_start__@plt>:
    1810:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #200]
    1818:	add	x16, x16, #0xc8
    181c:	br	x17

0000000000001820 <_PyArg_CheckPositional@plt>:
    1820:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #208]
    1828:	add	x16, x16, #0xd0
    182c:	br	x17

0000000000001830 <PyErr_Occurred@plt>:
    1830:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #216]
    1838:	add	x16, x16, #0xd8
    183c:	br	x17

0000000000001840 <PyModule_Create2@plt>:
    1840:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #224]
    1848:	add	x16, x16, #0xe0
    184c:	br	x17

0000000000001850 <BZ2_bzCompress@plt>:
    1850:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #232]
    1858:	add	x16, x16, #0xe8
    185c:	br	x17

0000000000001860 <PyMem_RawFree@plt>:
    1860:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #240]
    1868:	add	x16, x16, #0xf0
    186c:	br	x17

0000000000001870 <PyThread_allocate_lock@plt>:
    1870:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #248]
    1878:	add	x16, x16, #0xf8
    187c:	br	x17

0000000000001880 <BZ2_bzDecompress@plt>:
    1880:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #256]
    1888:	add	x16, x16, #0x100
    188c:	br	x17

0000000000001890 <PyThread_release_lock@plt>:
    1890:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #264]
    1898:	add	x16, x16, #0x108
    189c:	br	x17

00000000000018a0 <PyObject_GetBuffer@plt>:
    18a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #272]
    18a8:	add	x16, x16, #0x110
    18ac:	br	x17

00000000000018b0 <PyEval_SaveThread@plt>:
    18b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #280]
    18b8:	add	x16, x16, #0x118
    18bc:	br	x17

00000000000018c0 <PyModule_AddObject@plt>:
    18c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #288]
    18c8:	add	x16, x16, #0x120
    18cc:	br	x17

00000000000018d0 <PyType_IsSubtype@plt>:
    18d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #296]
    18d8:	add	x16, x16, #0x128
    18dc:	br	x17

00000000000018e0 <PyErr_Format@plt>:
    18e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #304]
    18e8:	add	x16, x16, #0x130
    18ec:	br	x17

00000000000018f0 <PyNumber_Index@plt>:
    18f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #312]
    18f8:	add	x16, x16, #0x138
    18fc:	br	x17

0000000000001900 <_PyArg_NoKeywords@plt>:
    1900:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #320]
    1908:	add	x16, x16, #0x140
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #328]
    1918:	add	x16, x16, #0x148
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #336]
    1928:	add	x16, x16, #0x150
    192c:	br	x17

0000000000001930 <PyThread_free_lock@plt>:
    1930:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #344]
    1938:	add	x16, x16, #0x158
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__bz2@@Base-0xd4>:
    1940:	adrp	x0, 13000 <PyInit__bz2@@Base+0x115ec>
    1944:	ldr	x0, [x0, #4040]
    1948:	cbz	x0, 1950 <PyThread_free_lock@plt+0x20>
    194c:	b	1810 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    195c:	add	x0, x0, #0x690
    1960:	adrp	x1, 14000 <PyInit__bz2@@Base+0x125ec>
    1964:	add	x1, x1, #0x690
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyThread_free_lock@plt+0x54>  // b.none
    1970:	adrp	x1, 13000 <PyInit__bz2@@Base+0x115ec>
    1974:	ldr	x1, [x1, #3976]
    1978:	cbz	x1, 1984 <PyThread_free_lock@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    198c:	add	x0, x0, #0x690
    1990:	adrp	x1, 14000 <PyInit__bz2@@Base+0x125ec>
    1994:	add	x1, x1, #0x690
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyThread_free_lock@plt+0x94>  // b.none
    19b0:	adrp	x2, 13000 <PyInit__bz2@@Base+0x115ec>
    19b4:	ldr	x2, [x2, #4064]
    19b8:	cbz	x2, 19c4 <PyThread_free_lock@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 14000 <PyInit__bz2@@Base+0x125ec>
    19d8:	ldrb	w0, [x19, #1680]
    19dc:	cbnz	w0, 1a04 <PyThread_free_lock@plt+0xd4>
    19e0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x115ec>
    19e4:	ldr	x0, [x0, #3992]
    19e8:	cbz	x0, 19f8 <PyThread_free_lock@plt+0xc8>
    19ec:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    19f0:	ldr	x0, [x0, #352]
    19f4:	bl	16e0 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyThread_free_lock@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #1680]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyThread_free_lock@plt+0x58>

0000000000001a14 <PyInit__bz2@@Base>:
    1a14:	stp	x29, x30, [sp, #-32]!
    1a18:	stp	x20, x19, [sp, #16]
    1a1c:	mov	x29, sp
    1a20:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    1a24:	add	x0, x0, #0x168
    1a28:	bl	17c0 <PyType_Ready@plt>
    1a2c:	tbnz	w0, #31, 1aa4 <PyInit__bz2@@Base+0x90>
    1a30:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    1a34:	add	x0, x0, #0x308
    1a38:	bl	17c0 <PyType_Ready@plt>
    1a3c:	tbnz	w0, #31, 1aa4 <PyInit__bz2@@Base+0x90>
    1a40:	adrp	x0, 14000 <PyInit__bz2@@Base+0x125ec>
    1a44:	add	x0, x0, #0x4a8
    1a48:	mov	w1, #0x3f5                 	// #1013
    1a4c:	bl	1840 <PyModule_Create2@plt>
    1a50:	mov	x19, x0
    1a54:	cbz	x0, 1aa8 <PyInit__bz2@@Base+0x94>
    1a58:	adrp	x20, 14000 <PyInit__bz2@@Base+0x125ec>
    1a5c:	add	x20, x20, #0x168
    1a60:	mov	x0, x20
    1a64:	bl	1ab8 <PyInit__bz2@@Base+0xa4>
    1a68:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1a6c:	add	x1, x1, #0x15f
    1a70:	mov	x0, x19
    1a74:	mov	x2, x20
    1a78:	bl	18c0 <PyModule_AddObject@plt>
    1a7c:	adrp	x20, 14000 <PyInit__bz2@@Base+0x125ec>
    1a80:	add	x20, x20, #0x308
    1a84:	mov	x0, x20
    1a88:	bl	1ab8 <PyInit__bz2@@Base+0xa4>
    1a8c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1a90:	add	x1, x1, #0x381
    1a94:	mov	x0, x19
    1a98:	mov	x2, x20
    1a9c:	bl	18c0 <PyModule_AddObject@plt>
    1aa0:	b	1aa8 <PyInit__bz2@@Base+0x94>
    1aa4:	mov	x19, xzr
    1aa8:	mov	x0, x19
    1aac:	ldp	x20, x19, [sp, #16]
    1ab0:	ldp	x29, x30, [sp], #32
    1ab4:	ret
    1ab8:	ldr	x8, [x0]
    1abc:	add	x8, x8, #0x1
    1ac0:	str	x8, [x0]
    1ac4:	ret
    1ac8:	stp	x29, x30, [sp, #-32]!
    1acc:	str	x19, [sp, #16]
    1ad0:	mov	x29, sp
    1ad4:	mov	x19, x0
    1ad8:	add	x0, x0, #0x10
    1adc:	bl	17f0 <BZ2_bzCompressEnd@plt>
    1ae0:	ldr	x0, [x19, #104]
    1ae4:	cbz	x0, 1aec <PyInit__bz2@@Base+0xd8>
    1ae8:	bl	1930 <PyThread_free_lock@plt>
    1aec:	ldr	x8, [x19, #8]
    1af0:	mov	x0, x19
    1af4:	ldr	x8, [x8, #320]
    1af8:	blr	x8
    1afc:	ldr	x19, [sp, #16]
    1b00:	ldp	x29, x30, [sp], #32
    1b04:	ret
    1b08:	stp	x29, x30, [sp, #-32]!
    1b0c:	stp	x20, x19, [sp, #16]
    1b10:	mov	x29, sp
    1b14:	mov	x20, x1
    1b18:	mov	x19, x0
    1b1c:	cbz	x2, 1b48 <PyInit__bz2@@Base+0x134>
    1b20:	ldr	x8, [x19, #8]
    1b24:	adrp	x9, 14000 <PyInit__bz2@@Base+0x125ec>
    1b28:	add	x9, x9, #0x168
    1b2c:	cmp	x8, x9
    1b30:	b.ne	1b48 <PyInit__bz2@@Base+0x134>  // b.any
    1b34:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    1b38:	add	x0, x0, #0x15f
    1b3c:	mov	x1, x2
    1b40:	bl	1900 <_PyArg_NoKeywords@plt>
    1b44:	cbz	w0, 1bc0 <PyInit__bz2@@Base+0x1ac>
    1b48:	ldr	x1, [x20, #16]
    1b4c:	cmp	x1, #0x2
    1b50:	b.cc	1b6c <PyInit__bz2@@Base+0x158>  // b.lo, b.ul, b.last
    1b54:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    1b58:	add	x0, x0, #0x15f
    1b5c:	mov	w3, #0x1                   	// #1
    1b60:	mov	x2, xzr
    1b64:	bl	1820 <_PyArg_CheckPositional@plt>
    1b68:	cbz	w0, 1bc0 <PyInit__bz2@@Base+0x1ac>
    1b6c:	ldr	x8, [x20, #16]
    1b70:	cmp	x8, #0x1
    1b74:	b.lt	1bc8 <PyInit__bz2@@Base+0x1b4>  // b.tstop
    1b78:	ldr	x8, [x20, #24]
    1b7c:	ldr	x0, [x8, #8]
    1b80:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1b84:	ldr	x8, [x8, #3984]
    1b88:	cmp	x0, x8
    1b8c:	b.eq	1ba0 <PyInit__bz2@@Base+0x18c>  // b.none
    1b90:	adrp	x1, 13000 <PyInit__bz2@@Base+0x115ec>
    1b94:	ldr	x1, [x1, #3984]
    1b98:	bl	18d0 <PyType_IsSubtype@plt>
    1b9c:	cbz	w0, 1bd0 <PyInit__bz2@@Base+0x1bc>
    1ba0:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1ba4:	ldr	x8, [x8, #4024]
    1ba8:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1bac:	add	x1, x1, #0x319
    1bb0:	ldr	x0, [x8]
    1bb4:	bl	1760 <PyErr_SetString@plt>
    1bb8:	mov	w1, #0xffffffff            	// #-1
    1bbc:	b	1bfc <PyInit__bz2@@Base+0x1e8>
    1bc0:	mov	w1, #0xffffffff            	// #-1
    1bc4:	b	1bfc <PyInit__bz2@@Base+0x1e8>
    1bc8:	mov	w1, #0x9                   	// #9
    1bcc:	b	1bf0 <PyInit__bz2@@Base+0x1dc>
    1bd0:	ldr	x0, [x20, #24]
    1bd4:	bl	1910 <_PyLong_AsInt@plt>
    1bd8:	mov	w1, w0
    1bdc:	cmn	w0, #0x1
    1be0:	b.ne	1bf0 <PyInit__bz2@@Base+0x1dc>  // b.any
    1be4:	bl	1830 <PyErr_Occurred@plt>
    1be8:	mov	w1, #0xffffffff            	// #-1
    1bec:	cbnz	x0, 1bfc <PyInit__bz2@@Base+0x1e8>
    1bf0:	mov	x0, x19
    1bf4:	bl	2174 <PyInit__bz2@@Base+0x760>
    1bf8:	mov	w1, w0
    1bfc:	ldp	x20, x19, [sp, #16]
    1c00:	mov	w0, w1
    1c04:	ldp	x29, x30, [sp], #32
    1c08:	ret
    1c0c:	sub	sp, sp, #0x70
    1c10:	stp	x29, x30, [sp, #80]
    1c14:	stp	x20, x19, [sp, #96]
    1c18:	add	x29, sp, #0x50
    1c1c:	mov	x19, x1
    1c20:	mov	x20, x0
    1c24:	movi	v0.2d, #0x0
    1c28:	mov	x1, sp
    1c2c:	mov	x0, x19
    1c30:	mov	w2, wzr
    1c34:	stp	q0, q0, [sp, #48]
    1c38:	stp	q0, q0, [sp, #16]
    1c3c:	str	q0, [sp]
    1c40:	bl	18a0 <PyObject_GetBuffer@plt>
    1c44:	cbz	w0, 1c70 <PyInit__bz2@@Base+0x25c>
    1c48:	mov	x19, xzr
    1c4c:	ldr	x8, [sp, #8]
    1c50:	cbz	x8, 1c5c <PyInit__bz2@@Base+0x248>
    1c54:	mov	x0, sp
    1c58:	bl	16d0 <PyBuffer_Release@plt>
    1c5c:	mov	x0, x19
    1c60:	ldp	x20, x19, [sp, #96]
    1c64:	ldp	x29, x30, [sp, #80]
    1c68:	add	sp, sp, #0x70
    1c6c:	ret
    1c70:	mov	x0, sp
    1c74:	mov	w1, #0x43                  	// #67
    1c78:	bl	1700 <PyBuffer_IsContiguous@plt>
    1c7c:	cbz	w0, 1c9c <PyInit__bz2@@Base+0x288>
    1c80:	mov	x1, sp
    1c84:	mov	x0, x20
    1c88:	bl	1cd4 <PyInit__bz2@@Base+0x2c0>
    1c8c:	mov	x19, x0
    1c90:	ldr	x8, [sp, #8]
    1c94:	cbnz	x8, 1c54 <PyInit__bz2@@Base+0x240>
    1c98:	b	1c5c <PyInit__bz2@@Base+0x248>
    1c9c:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    1ca0:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1ca4:	adrp	x2, 3000 <PyInit__bz2@@Base+0x15ec>
    1ca8:	add	x0, x0, #0x393
    1cac:	add	x1, x1, #0x173
    1cb0:	add	x2, x2, #0x17c
    1cb4:	mov	x3, x19
    1cb8:	bl	17e0 <_PyArg_BadArgument@plt>
    1cbc:	b	1c48 <PyInit__bz2@@Base+0x234>
    1cc0:	stp	x29, x30, [sp, #-16]!
    1cc4:	mov	x29, sp
    1cc8:	bl	20cc <PyInit__bz2@@Base+0x6b8>
    1ccc:	ldp	x29, x30, [sp], #16
    1cd0:	ret
    1cd4:	stp	x29, x30, [sp, #-48]!
    1cd8:	str	x21, [sp, #16]
    1cdc:	stp	x20, x19, [sp, #32]
    1ce0:	mov	x29, sp
    1ce4:	mov	x19, x0
    1ce8:	ldr	x0, [x0, #104]
    1cec:	mov	x20, x1
    1cf0:	mov	w1, wzr
    1cf4:	bl	1740 <PyThread_acquire_lock@plt>
    1cf8:	cbz	w0, 1d24 <PyInit__bz2@@Base+0x310>
    1cfc:	ldr	w8, [x19, #96]
    1d00:	cbz	w8, 1d4c <PyInit__bz2@@Base+0x338>
    1d04:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1d08:	ldr	x8, [x8, #4016]
    1d0c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1d10:	add	x1, x1, #0x18e
    1d14:	ldr	x0, [x8]
    1d18:	bl	1760 <PyErr_SetString@plt>
    1d1c:	mov	x20, xzr
    1d20:	b	1d64 <PyInit__bz2@@Base+0x350>
    1d24:	bl	18b0 <PyEval_SaveThread@plt>
    1d28:	ldr	x8, [x19, #104]
    1d2c:	mov	x21, x0
    1d30:	mov	w1, #0x1                   	// #1
    1d34:	mov	x0, x8
    1d38:	bl	1740 <PyThread_acquire_lock@plt>
    1d3c:	mov	x0, x21
    1d40:	bl	16b0 <PyEval_RestoreThread@plt>
    1d44:	ldr	w8, [x19, #96]
    1d48:	cbnz	w8, 1d04 <PyInit__bz2@@Base+0x2f0>
    1d4c:	ldr	x1, [x20]
    1d50:	ldr	x2, [x20, #16]
    1d54:	mov	x0, x19
    1d58:	mov	w3, wzr
    1d5c:	bl	1d80 <PyInit__bz2@@Base+0x36c>
    1d60:	mov	x20, x0
    1d64:	ldr	x0, [x19, #104]
    1d68:	bl	1890 <PyThread_release_lock@plt>
    1d6c:	mov	x0, x20
    1d70:	ldp	x20, x19, [sp, #32]
    1d74:	ldr	x21, [sp, #16]
    1d78:	ldp	x29, x30, [sp], #48
    1d7c:	ret
    1d80:	sub	sp, sp, #0x70
    1d84:	stp	x29, x30, [sp, #16]
    1d88:	stp	x28, x27, [sp, #32]
    1d8c:	stp	x26, x25, [sp, #48]
    1d90:	stp	x24, x23, [sp, #64]
    1d94:	stp	x22, x21, [sp, #80]
    1d98:	stp	x20, x19, [sp, #96]
    1d9c:	add	x29, sp, #0x10
    1da0:	mov	x24, x1
    1da4:	mov	x22, x0
    1da8:	mov	w1, #0x2000                	// #8192
    1dac:	mov	x0, xzr
    1db0:	mov	w20, w3
    1db4:	mov	x21, x2
    1db8:	mov	w25, #0x2000                	// #8192
    1dbc:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1dc0:	str	x0, [sp, #8]
    1dc4:	cbz	x0, 1f24 <PyInit__bz2@@Base+0x510>
    1dc8:	mov	x23, x22
    1dcc:	str	x24, [x23, #16]!
    1dd0:	str	wzr, [x23, #8]
    1dd4:	ldr	x8, [sp, #8]
    1dd8:	mov	x19, xzr
    1ddc:	mov	w26, #0xffffffff            	// #-1
    1de0:	mov	w27, #0x2                   	// #2
    1de4:	add	x8, x8, #0x20
    1de8:	str	w25, [x23, #32]
    1dec:	str	x8, [x23, #24]
    1df0:	b	1e04 <PyInit__bz2@@Base+0x3f0>
    1df4:	cmp	w24, #0x4
    1df8:	ccmp	w20, #0x2, #0x0, eq  // eq = none
    1dfc:	csel	w8, w27, wzr, eq  // eq = none
    1e00:	cbnz	w8, 1edc <PyInit__bz2@@Base+0x4c8>
    1e04:	cbz	x21, 1e20 <PyInit__bz2@@Base+0x40c>
    1e08:	ldr	w8, [x22, #24]
    1e0c:	cbnz	w8, 1e20 <PyInit__bz2@@Base+0x40c>
    1e10:	cmp	x21, x26
    1e14:	csel	x8, x21, x26, cc  // cc = lo, ul, last
    1e18:	sub	x21, x21, x8
    1e1c:	str	w8, [x22, #24]
    1e20:	cbnz	w20, 1e2c <PyInit__bz2@@Base+0x418>
    1e24:	ldr	w8, [x22, #24]
    1e28:	cbz	w8, 1ec8 <PyInit__bz2@@Base+0x4b4>
    1e2c:	ldr	w8, [x22, #48]
    1e30:	cbz	w8, 1e78 <PyInit__bz2@@Base+0x464>
    1e34:	bl	18b0 <PyEval_SaveThread@plt>
    1e38:	ldr	x28, [x22, #40]
    1e3c:	mov	x25, x0
    1e40:	mov	x0, x23
    1e44:	mov	w1, w20
    1e48:	bl	1850 <BZ2_bzCompress@plt>
    1e4c:	ldr	x8, [x22, #40]
    1e50:	mov	w24, w0
    1e54:	mov	x0, x25
    1e58:	sub	x8, x8, x28
    1e5c:	add	x19, x8, x19
    1e60:	bl	16b0 <PyEval_RestoreThread@plt>
    1e64:	mov	w0, w24
    1e68:	bl	1fa0 <PyInit__bz2@@Base+0x58c>
    1e6c:	cbz	w0, 1df4 <PyInit__bz2@@Base+0x3e0>
    1e70:	mov	w8, #0x4                   	// #4
    1e74:	b	1e00 <PyInit__bz2@@Base+0x3ec>
    1e78:	ldr	x8, [sp, #8]
    1e7c:	ldr	x8, [x8, #16]
    1e80:	subs	x9, x8, x19
    1e84:	b.ne	1eb0 <PyInit__bz2@@Base+0x49c>  // b.any
    1e88:	add	x0, sp, #0x8
    1e8c:	mov	x1, #0xffffffffffffffff    	// #-1
    1e90:	bl	1f44 <PyInit__bz2@@Base+0x530>
    1e94:	tbnz	w0, #31, 1ed0 <PyInit__bz2@@Base+0x4bc>
    1e98:	ldr	x8, [sp, #8]
    1e9c:	add	x9, x8, x19
    1ea0:	add	x9, x9, #0x20
    1ea4:	str	x9, [x22, #40]
    1ea8:	ldr	x8, [x8, #16]
    1eac:	sub	x9, x8, x19
    1eb0:	cmp	x9, x26
    1eb4:	mov	w8, wzr
    1eb8:	csel	x9, x9, x26, cc  // cc = lo, ul, last
    1ebc:	str	w9, [x22, #48]
    1ec0:	cbnz	w8, 1e00 <PyInit__bz2@@Base+0x3ec>
    1ec4:	b	1e34 <PyInit__bz2@@Base+0x420>
    1ec8:	mov	w8, #0x2                   	// #2
    1ecc:	b	1e00 <PyInit__bz2@@Base+0x3ec>
    1ed0:	mov	w8, #0x4                   	// #4
    1ed4:	cbnz	w8, 1e00 <PyInit__bz2@@Base+0x3ec>
    1ed8:	b	1e34 <PyInit__bz2@@Base+0x420>
    1edc:	cmp	w8, #0x4
    1ee0:	b.eq	1f14 <PyInit__bz2@@Base+0x500>  // b.none
    1ee4:	cmp	w8, #0x2
    1ee8:	b.ne	1f24 <PyInit__bz2@@Base+0x510>  // b.any
    1eec:	ldr	x8, [sp, #8]
    1ef0:	ldr	x8, [x8, #16]
    1ef4:	cmp	x19, x8
    1ef8:	b.eq	1f0c <PyInit__bz2@@Base+0x4f8>  // b.none
    1efc:	add	x0, sp, #0x8
    1f00:	mov	x1, x19
    1f04:	bl	16a0 <_PyBytes_Resize@plt>
    1f08:	tbnz	w0, #31, 1f14 <PyInit__bz2@@Base+0x500>
    1f0c:	ldr	x0, [sp, #8]
    1f10:	b	1f24 <PyInit__bz2@@Base+0x510>
    1f14:	ldr	x0, [sp, #8]
    1f18:	bl	2088 <PyInit__bz2@@Base+0x674>
    1f1c:	mov	x0, xzr
    1f20:	b	1f24 <PyInit__bz2@@Base+0x510>
    1f24:	ldp	x20, x19, [sp, #96]
    1f28:	ldp	x22, x21, [sp, #80]
    1f2c:	ldp	x24, x23, [sp, #64]
    1f30:	ldp	x26, x25, [sp, #48]
    1f34:	ldp	x28, x27, [sp, #32]
    1f38:	ldp	x29, x30, [sp, #16]
    1f3c:	add	sp, sp, #0x70
    1f40:	ret
    1f44:	stp	x29, x30, [sp, #-16]!
    1f48:	mov	x29, sp
    1f4c:	ldr	x8, [x0]
    1f50:	ldr	x8, [x8, #16]
    1f54:	add	x9, x8, x8, lsr #3
    1f58:	add	x9, x9, #0x6
    1f5c:	cmp	x9, x1
    1f60:	ccmp	x1, #0x0, #0x4, hi  // hi = pmore
    1f64:	csel	x1, x1, x9, gt
    1f68:	cmp	x1, x8
    1f6c:	b.ls	1f7c <PyInit__bz2@@Base+0x568>  // b.plast
    1f70:	bl	16a0 <_PyBytes_Resize@plt>
    1f74:	ldp	x29, x30, [sp], #16
    1f78:	ret
    1f7c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1f80:	ldr	x8, [x8, #4048]
    1f84:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1f88:	add	x1, x1, #0x1aa
    1f8c:	ldr	x0, [x8]
    1f90:	bl	1760 <PyErr_SetString@plt>
    1f94:	mov	w0, #0xffffffff            	// #-1
    1f98:	ldp	x29, x30, [sp], #16
    1f9c:	ret
    1fa0:	stp	x29, x30, [sp, #-16]!
    1fa4:	mov	x29, sp
    1fa8:	add	w8, w0, #0x9
    1fac:	mov	w2, w0
    1fb0:	cmp	w8, #0xd
    1fb4:	b.hi	2004 <PyInit__bz2@@Base+0x5f0>  // b.pmore
    1fb8:	adrp	x9, 2000 <PyInit__bz2@@Base+0x5ec>
    1fbc:	add	x9, x9, #0xa64
    1fc0:	adr	x10, 1fd4 <PyInit__bz2@@Base+0x5c0>
    1fc4:	ldrb	w11, [x9, x8]
    1fc8:	add	x10, x10, x11, lsl #2
    1fcc:	mov	w0, wzr
    1fd0:	br	x10
    1fd4:	ldp	x29, x30, [sp], #16
    1fd8:	ret
    1fdc:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1fe0:	ldr	x8, [x8, #4032]
    1fe4:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1fe8:	add	x1, x1, #0x232
    1fec:	b	2074 <PyInit__bz2@@Base+0x660>
    1ff0:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    1ff4:	ldr	x8, [x8, #3968]
    1ff8:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    1ffc:	add	x1, x1, #0x1d7
    2000:	b	2074 <PyInit__bz2@@Base+0x660>
    2004:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2008:	ldr	x8, [x8, #4032]
    200c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2010:	add	x1, x1, #0x2db
    2014:	ldr	x0, [x8]
    2018:	bl	18e0 <PyErr_Format@plt>
    201c:	b	207c <PyInit__bz2@@Base+0x668>
    2020:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2024:	ldr	x8, [x8, #4056]
    2028:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    202c:	add	x1, x1, #0x258
    2030:	b	2074 <PyInit__bz2@@Base+0x660>
    2034:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2038:	ldr	x8, [x8, #4032]
    203c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2040:	add	x1, x1, #0x246
    2044:	b	2074 <PyInit__bz2@@Base+0x660>
    2048:	bl	1730 <PyErr_NoMemory@plt>
    204c:	b	207c <PyInit__bz2@@Base+0x668>
    2050:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2054:	ldr	x8, [x8, #4016]
    2058:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    205c:	add	x1, x1, #0x1fb
    2060:	b	2074 <PyInit__bz2@@Base+0x660>
    2064:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2068:	ldr	x8, [x8, #4000]
    206c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2070:	add	x1, x1, #0x29c
    2074:	ldr	x0, [x8]
    2078:	bl	1760 <PyErr_SetString@plt>
    207c:	mov	w0, #0x1                   	// #1
    2080:	ldp	x29, x30, [sp], #16
    2084:	ret
    2088:	cbz	x0, 209c <PyInit__bz2@@Base+0x688>
    208c:	stp	x29, x30, [sp, #-16]!
    2090:	mov	x29, sp
    2094:	bl	20a0 <PyInit__bz2@@Base+0x68c>
    2098:	ldp	x29, x30, [sp], #16
    209c:	ret
    20a0:	stp	x29, x30, [sp, #-16]!
    20a4:	mov	x29, sp
    20a8:	ldr	x8, [x0]
    20ac:	subs	x8, x8, #0x1
    20b0:	str	x8, [x0]
    20b4:	b.eq	20c0 <PyInit__bz2@@Base+0x6ac>  // b.none
    20b8:	ldp	x29, x30, [sp], #16
    20bc:	ret
    20c0:	bl	1720 <_Py_Dealloc@plt>
    20c4:	ldp	x29, x30, [sp], #16
    20c8:	ret
    20cc:	stp	x29, x30, [sp, #-32]!
    20d0:	stp	x20, x19, [sp, #16]
    20d4:	mov	x29, sp
    20d8:	mov	x19, x0
    20dc:	ldr	x0, [x0, #104]
    20e0:	mov	w1, wzr
    20e4:	bl	1740 <PyThread_acquire_lock@plt>
    20e8:	cbz	w0, 2114 <PyInit__bz2@@Base+0x700>
    20ec:	ldr	w8, [x19, #96]
    20f0:	cbz	w8, 213c <PyInit__bz2@@Base+0x728>
    20f4:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    20f8:	ldr	x8, [x8, #4016]
    20fc:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2100:	add	x1, x1, #0x300
    2104:	ldr	x0, [x8]
    2108:	bl	1760 <PyErr_SetString@plt>
    210c:	mov	x20, xzr
    2110:	b	215c <PyInit__bz2@@Base+0x748>
    2114:	bl	18b0 <PyEval_SaveThread@plt>
    2118:	ldr	x8, [x19, #104]
    211c:	mov	x20, x0
    2120:	mov	w1, #0x1                   	// #1
    2124:	mov	x0, x8
    2128:	bl	1740 <PyThread_acquire_lock@plt>
    212c:	mov	x0, x20
    2130:	bl	16b0 <PyEval_RestoreThread@plt>
    2134:	ldr	w8, [x19, #96]
    2138:	cbnz	w8, 20f4 <PyInit__bz2@@Base+0x6e0>
    213c:	mov	w8, #0x1                   	// #1
    2140:	mov	w3, #0x2                   	// #2
    2144:	mov	x0, x19
    2148:	mov	x1, xzr
    214c:	mov	x2, xzr
    2150:	str	w8, [x19, #96]
    2154:	bl	1d80 <PyInit__bz2@@Base+0x36c>
    2158:	mov	x20, x0
    215c:	ldr	x0, [x19, #104]
    2160:	bl	1890 <PyThread_release_lock@plt>
    2164:	mov	x0, x20
    2168:	ldp	x20, x19, [sp, #16]
    216c:	ldp	x29, x30, [sp], #32
    2170:	ret
    2174:	stp	x29, x30, [sp, #-32]!
    2178:	stp	x20, x19, [sp, #16]
    217c:	mov	x29, sp
    2180:	sub	w8, w1, #0x1
    2184:	cmp	w8, #0x9
    2188:	b.cs	21e4 <PyInit__bz2@@Base+0x7d0>  // b.hs, b.nlast
    218c:	mov	w20, w1
    2190:	mov	x19, x0
    2194:	bl	1870 <PyThread_allocate_lock@plt>
    2198:	str	x0, [x19, #104]
    219c:	cbz	x0, 21f8 <PyInit__bz2@@Base+0x7e4>
    21a0:	adrp	x8, 2000 <PyInit__bz2@@Base+0x5ec>
    21a4:	adrp	x9, 2000 <PyInit__bz2@@Base+0x5ec>
    21a8:	add	x0, x19, #0x10
    21ac:	add	x8, x8, #0x220
    21b0:	add	x9, x9, #0x260
    21b4:	mov	w1, w20
    21b8:	mov	w2, wzr
    21bc:	mov	w3, wzr
    21c0:	str	x8, [x19, #72]
    21c4:	stp	x9, xzr, [x19, #80]
    21c8:	bl	17b0 <BZ2_bzCompressInit@plt>
    21cc:	bl	1fa0 <PyInit__bz2@@Base+0x58c>
    21d0:	cbz	w0, 2214 <PyInit__bz2@@Base+0x800>
    21d4:	ldr	x0, [x19, #104]
    21d8:	bl	1930 <PyThread_free_lock@plt>
    21dc:	str	xzr, [x19, #104]
    21e0:	b	2210 <PyInit__bz2@@Base+0x7fc>
    21e4:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    21e8:	ldr	x8, [x8, #4016]
    21ec:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    21f0:	add	x1, x1, #0x33e
    21f4:	b	2208 <PyInit__bz2@@Base+0x7f4>
    21f8:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    21fc:	ldr	x8, [x8, #4008]
    2200:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2204:	add	x1, x1, #0x364
    2208:	ldr	x0, [x8]
    220c:	bl	1760 <PyErr_SetString@plt>
    2210:	mov	w0, #0xffffffff            	// #-1
    2214:	ldp	x20, x19, [sp, #16]
    2218:	ldp	x29, x30, [sp], #32
    221c:	ret
    2220:	orr	w8, w2, w1
    2224:	tbnz	w8, #31, 2240 <PyInit__bz2@@Base+0x82c>
    2228:	cbz	w2, 2248 <PyInit__bz2@@Base+0x834>
    222c:	sxtw	x8, w2
    2230:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    2234:	udiv	x8, x9, x8
    2238:	cmp	x8, w1, sxtw
    223c:	b.cs	2248 <PyInit__bz2@@Base+0x834>  // b.hs, b.nlast
    2240:	mov	x0, xzr
    2244:	ret
    2248:	stp	x29, x30, [sp, #-16]!
    224c:	mov	x29, sp
    2250:	smull	x0, w2, w1
    2254:	bl	16f0 <PyMem_RawMalloc@plt>
    2258:	ldp	x29, x30, [sp], #16
    225c:	ret
    2260:	stp	x29, x30, [sp, #-16]!
    2264:	mov	x29, sp
    2268:	mov	x0, x1
    226c:	bl	1860 <PyMem_RawFree@plt>
    2270:	ldp	x29, x30, [sp], #16
    2274:	ret
    2278:	stp	x29, x30, [sp, #-32]!
    227c:	str	x19, [sp, #16]
    2280:	mov	x29, sp
    2284:	mov	x19, x0
    2288:	ldr	x0, [x0, #120]
    228c:	cbz	x0, 2294 <PyInit__bz2@@Base+0x880>
    2290:	bl	16c0 <PyMem_Free@plt>
    2294:	add	x0, x19, #0x10
    2298:	bl	1780 <BZ2_bzDecompressEnd@plt>
    229c:	ldr	x0, [x19, #104]
    22a0:	cbz	x0, 22ac <PyInit__bz2@@Base+0x898>
    22a4:	str	xzr, [x19, #104]
    22a8:	bl	20a0 <PyInit__bz2@@Base+0x68c>
    22ac:	ldr	x0, [x19, #144]
    22b0:	cbz	x0, 22b8 <PyInit__bz2@@Base+0x8a4>
    22b4:	bl	1930 <PyThread_free_lock@plt>
    22b8:	ldr	x8, [x19, #8]
    22bc:	mov	x0, x19
    22c0:	ldr	x8, [x8, #320]
    22c4:	blr	x8
    22c8:	ldr	x19, [sp, #16]
    22cc:	ldp	x29, x30, [sp], #32
    22d0:	ret
    22d4:	stp	x29, x30, [sp, #-48]!
    22d8:	str	x21, [sp, #16]
    22dc:	stp	x20, x19, [sp, #32]
    22e0:	mov	x29, sp
    22e4:	adrp	x21, 14000 <PyInit__bz2@@Base+0x125ec>
    22e8:	mov	x20, x2
    22ec:	mov	x19, x0
    22f0:	add	x21, x21, #0x308
    22f4:	cbz	x1, 2314 <PyInit__bz2@@Base+0x900>
    22f8:	ldr	x8, [x19, #8]
    22fc:	cmp	x8, x21
    2300:	b.ne	2314 <PyInit__bz2@@Base+0x900>  // b.any
    2304:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    2308:	add	x0, x0, #0x381
    230c:	bl	1800 <_PyArg_NoPositional@plt>
    2310:	cbz	w0, 2344 <PyInit__bz2@@Base+0x930>
    2314:	cbz	x20, 2338 <PyInit__bz2@@Base+0x924>
    2318:	ldr	x8, [x19, #8]
    231c:	cmp	x8, x21
    2320:	b.ne	2338 <PyInit__bz2@@Base+0x924>  // b.any
    2324:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    2328:	add	x0, x0, #0x381
    232c:	mov	x1, x20
    2330:	bl	1900 <_PyArg_NoKeywords@plt>
    2334:	cbz	w0, 2344 <PyInit__bz2@@Base+0x930>
    2338:	mov	x0, x19
    233c:	bl	2990 <PyInit__bz2@@Base+0xf7c>
    2340:	b	2348 <PyInit__bz2@@Base+0x934>
    2344:	mov	w0, #0xffffffff            	// #-1
    2348:	ldp	x20, x19, [sp, #32]
    234c:	ldr	x21, [sp, #16]
    2350:	ldp	x29, x30, [sp], #48
    2354:	ret
    2358:	sub	sp, sp, #0xa0
    235c:	stp	x29, x30, [sp, #112]
    2360:	stp	x22, x21, [sp, #128]
    2364:	stp	x20, x19, [sp, #144]
    2368:	add	x29, sp, #0x70
    236c:	mov	x21, x2
    2370:	mov	x20, x1
    2374:	mov	x19, x0
    2378:	cbz	x3, 2384 <PyInit__bz2@@Base+0x970>
    237c:	ldr	x22, [x3, #16]
    2380:	b	2388 <PyInit__bz2@@Base+0x974>
    2384:	mov	x22, xzr
    2388:	movi	v0.2d, #0x0
    238c:	stp	q0, q0, [sp, #64]
    2390:	stp	q0, q0, [sp, #32]
    2394:	str	q0, [sp, #16]
    2398:	cbz	x20, 23b4 <PyInit__bz2@@Base+0x9a0>
    239c:	sub	x8, x21, #0x1
    23a0:	cmp	x8, #0x1
    23a4:	b.hi	23b4 <PyInit__bz2@@Base+0x9a0>  // b.pmore
    23a8:	cbnz	x3, 23b4 <PyInit__bz2@@Base+0x9a0>
    23ac:	cbnz	x20, 23e8 <PyInit__bz2@@Base+0x9d4>
    23b0:	b	23fc <PyInit__bz2@@Base+0x9e8>
    23b4:	adrp	x4, 14000 <PyInit__bz2@@Base+0x125ec>
    23b8:	sub	x8, x29, #0x10
    23bc:	add	x4, x4, #0x650
    23c0:	mov	w5, #0x1                   	// #1
    23c4:	mov	w6, #0x2                   	// #2
    23c8:	mov	x0, x20
    23cc:	mov	x1, x21
    23d0:	mov	x2, xzr
    23d4:	mov	w7, wzr
    23d8:	str	x8, [sp]
    23dc:	bl	1750 <_PyArg_UnpackKeywords@plt>
    23e0:	mov	x20, x0
    23e4:	cbz	x20, 23fc <PyInit__bz2@@Base+0x9e8>
    23e8:	ldr	x0, [x20]
    23ec:	add	x1, sp, #0x10
    23f0:	mov	w2, wzr
    23f4:	bl	18a0 <PyObject_GetBuffer@plt>
    23f8:	cbz	w0, 2428 <PyInit__bz2@@Base+0xa14>
    23fc:	mov	x19, xzr
    2400:	ldr	x8, [sp, #24]
    2404:	cbz	x8, 2410 <PyInit__bz2@@Base+0x9fc>
    2408:	add	x0, sp, #0x10
    240c:	bl	16d0 <PyBuffer_Release@plt>
    2410:	mov	x0, x19
    2414:	ldp	x20, x19, [sp, #144]
    2418:	ldp	x22, x21, [sp, #128]
    241c:	ldp	x29, x30, [sp, #112]
    2420:	add	sp, sp, #0xa0
    2424:	ret
    2428:	add	x0, sp, #0x10
    242c:	mov	w1, #0x43                  	// #67
    2430:	bl	1700 <PyBuffer_IsContiguous@plt>
    2434:	cbz	w0, 2468 <PyInit__bz2@@Base+0xa54>
    2438:	add	x8, x22, x21
    243c:	cmp	x8, #0x1
    2440:	b.ne	248c <PyInit__bz2@@Base+0xa78>  // b.any
    2444:	mov	x20, #0xffffffffffffffff    	// #-1
    2448:	add	x1, sp, #0x10
    244c:	mov	x0, x19
    2450:	mov	x2, x20
    2454:	bl	2520 <PyInit__bz2@@Base+0xb0c>
    2458:	mov	x19, x0
    245c:	ldr	x8, [sp, #24]
    2460:	cbnz	x8, 2408 <PyInit__bz2@@Base+0x9f4>
    2464:	b	2410 <PyInit__bz2@@Base+0x9fc>
    2468:	ldr	x3, [x20]
    246c:	adrp	x0, 3000 <PyInit__bz2@@Base+0x15ec>
    2470:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2474:	adrp	x2, 3000 <PyInit__bz2@@Base+0x15ec>
    2478:	add	x0, x0, #0x391
    247c:	add	x1, x1, #0x3a7
    2480:	add	x2, x2, #0x17c
    2484:	bl	17e0 <_PyArg_BadArgument@plt>
    2488:	b	23fc <PyInit__bz2@@Base+0x9e8>
    248c:	ldr	x8, [x20, #8]
    2490:	ldr	x0, [x8, #8]
    2494:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2498:	ldr	x8, [x8, #3984]
    249c:	cmp	x0, x8
    24a0:	b.eq	24b4 <PyInit__bz2@@Base+0xaa0>  // b.none
    24a4:	adrp	x1, 13000 <PyInit__bz2@@Base+0x115ec>
    24a8:	ldr	x1, [x1, #3984]
    24ac:	bl	18d0 <PyType_IsSubtype@plt>
    24b0:	cbz	w0, 24d0 <PyInit__bz2@@Base+0xabc>
    24b4:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    24b8:	ldr	x8, [x8, #4024]
    24bc:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    24c0:	add	x1, x1, #0x319
    24c4:	ldr	x0, [x8]
    24c8:	bl	1760 <PyErr_SetString@plt>
    24cc:	b	23fc <PyInit__bz2@@Base+0x9e8>
    24d0:	ldr	x0, [x20, #8]
    24d4:	bl	18f0 <PyNumber_Index@plt>
    24d8:	cbz	x0, 24f4 <PyInit__bz2@@Base+0xae0>
    24dc:	mov	x21, x0
    24e0:	bl	17d0 <PyLong_AsSsize_t@plt>
    24e4:	mov	x20, x0
    24e8:	mov	x0, x21
    24ec:	bl	20a0 <PyInit__bz2@@Base+0x68c>
    24f0:	b	24f8 <PyInit__bz2@@Base+0xae4>
    24f4:	mov	x20, #0xffffffffffffffff    	// #-1
    24f8:	cmn	x20, #0x1
    24fc:	b.eq	2508 <PyInit__bz2@@Base+0xaf4>  // b.none
    2500:	mov	w8, #0x1                   	// #1
    2504:	b	2518 <PyInit__bz2@@Base+0xb04>
    2508:	bl	1830 <PyErr_Occurred@plt>
    250c:	cbz	x0, 2500 <PyInit__bz2@@Base+0xaec>
    2510:	mov	w8, wzr
    2514:	mov	x20, #0xffffffffffffffff    	// #-1
    2518:	cbz	w8, 23fc <PyInit__bz2@@Base+0x9e8>
    251c:	b	2448 <PyInit__bz2@@Base+0xa34>
    2520:	stp	x29, x30, [sp, #-48]!
    2524:	stp	x22, x21, [sp, #16]
    2528:	stp	x20, x19, [sp, #32]
    252c:	mov	x29, sp
    2530:	mov	x19, x0
    2534:	ldr	x0, [x0, #144]
    2538:	mov	x21, x1
    253c:	mov	w1, wzr
    2540:	mov	x20, x2
    2544:	bl	1740 <PyThread_acquire_lock@plt>
    2548:	cbz	w0, 2574 <PyInit__bz2@@Base+0xb60>
    254c:	ldrb	w8, [x19, #96]
    2550:	cbz	w8, 259c <PyInit__bz2@@Base+0xb88>
    2554:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2558:	ldr	x8, [x8, #4056]
    255c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2560:	add	x1, x1, #0x3b7
    2564:	ldr	x0, [x8]
    2568:	bl	1760 <PyErr_SetString@plt>
    256c:	mov	x20, xzr
    2570:	b	25b4 <PyInit__bz2@@Base+0xba0>
    2574:	bl	18b0 <PyEval_SaveThread@plt>
    2578:	ldr	x8, [x19, #144]
    257c:	mov	x22, x0
    2580:	mov	w1, #0x1                   	// #1
    2584:	mov	x0, x8
    2588:	bl	1740 <PyThread_acquire_lock@plt>
    258c:	mov	x0, x22
    2590:	bl	16b0 <PyEval_RestoreThread@plt>
    2594:	ldrb	w8, [x19, #96]
    2598:	cbnz	w8, 2554 <PyInit__bz2@@Base+0xb40>
    259c:	ldr	x1, [x21]
    25a0:	ldr	x2, [x21, #16]
    25a4:	mov	x0, x19
    25a8:	mov	x3, x20
    25ac:	bl	25d0 <PyInit__bz2@@Base+0xbbc>
    25b0:	mov	x20, x0
    25b4:	ldr	x0, [x19, #144]
    25b8:	bl	1890 <PyThread_release_lock@plt>
    25bc:	mov	x0, x20
    25c0:	ldp	x20, x19, [sp, #32]
    25c4:	ldp	x22, x21, [sp, #16]
    25c8:	ldp	x29, x30, [sp], #48
    25cc:	ret
    25d0:	stp	x29, x30, [sp, #-80]!
    25d4:	str	x25, [sp, #16]
    25d8:	stp	x24, x23, [sp, #32]
    25dc:	stp	x22, x21, [sp, #48]
    25e0:	stp	x20, x19, [sp, #64]
    25e4:	mov	x29, sp
    25e8:	ldr	x23, [x0, #16]
    25ec:	mov	x20, x3
    25f0:	mov	x21, x2
    25f4:	mov	x19, x0
    25f8:	mov	x22, x1
    25fc:	cbz	x23, 2658 <PyInit__bz2@@Base+0xc44>
    2600:	ldp	x24, x8, [x19, #120]
    2604:	ldr	x2, [x19, #136]
    2608:	add	x9, x24, x8
    260c:	add	x10, x23, x2
    2610:	sub	x11, x8, x2
    2614:	cmp	x11, x21
    2618:	sub	x9, x9, x10
    261c:	b.cs	2664 <PyInit__bz2@@Base+0xc50>  // b.hs, b.nlast
    2620:	add	x8, x8, x21
    2624:	sub	x25, x8, x9
    2628:	mov	x0, x24
    262c:	mov	x1, x25
    2630:	bl	1790 <PyMem_Realloc@plt>
    2634:	cbz	x0, 2684 <PyInit__bz2@@Base+0xc70>
    2638:	sub	x9, x23, x24
    263c:	mov	w8, wzr
    2640:	add	x9, x0, x9
    2644:	stp	x0, x25, [x19, #120]
    2648:	str	x9, [x19, #16]
    264c:	cbz	wzr, 269c <PyInit__bz2@@Base+0xc88>
    2650:	cbnz	w8, 26c8 <PyInit__bz2@@Base+0xcb4>
    2654:	b	26d0 <PyInit__bz2@@Base+0xcbc>
    2658:	str	x22, [x19, #16]
    265c:	str	x21, [x19, #136]
    2660:	b	26d4 <PyInit__bz2@@Base+0xcc0>
    2664:	cmp	x9, x21
    2668:	b.cs	269c <PyInit__bz2@@Base+0xc88>  // b.hs, b.nlast
    266c:	mov	x0, x24
    2670:	mov	x1, x23
    2674:	bl	1690 <memmove@plt>
    2678:	ldr	x8, [x19, #120]
    267c:	str	x8, [x19, #16]
    2680:	b	269c <PyInit__bz2@@Base+0xc88>
    2684:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2688:	ldr	x8, [x8, #4008]
    268c:	ldr	x0, [x8]
    2690:	bl	17a0 <PyErr_SetNone@plt>
    2694:	mov	w8, #0x1                   	// #1
    2698:	cbnz	w8, 2650 <PyInit__bz2@@Base+0xc3c>
    269c:	ldr	x8, [x19, #16]
    26a0:	ldr	x9, [x19, #136]
    26a4:	mov	x1, x22
    26a8:	mov	x2, x21
    26ac:	add	x0, x8, x9
    26b0:	bl	1680 <memcpy@plt>
    26b4:	ldr	x9, [x19, #136]
    26b8:	mov	w8, wzr
    26bc:	add	x9, x9, x21
    26c0:	str	x9, [x19, #136]
    26c4:	cbz	w8, 26d0 <PyInit__bz2@@Base+0xcbc>
    26c8:	mov	x20, xzr
    26cc:	b	272c <PyInit__bz2@@Base+0xd18>
    26d0:	mov	w23, #0x1                   	// #1
    26d4:	mov	x0, x19
    26d8:	mov	x1, x20
    26dc:	bl	27d4 <PyInit__bz2@@Base+0xdc0>
    26e0:	mov	x20, x0
    26e4:	cbz	x0, 2728 <PyInit__bz2@@Base+0xd14>
    26e8:	ldrb	w8, [x19, #96]
    26ec:	cbz	w8, 2748 <PyInit__bz2@@Base+0xd34>
    26f0:	ldr	x1, [x19, #136]
    26f4:	strb	wzr, [x19, #112]
    26f8:	cbz	x1, 272c <PyInit__bz2@@Base+0xd18>
    26fc:	ldr	x0, [x19, #16]
    2700:	ldr	x21, [x19, #104]
    2704:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2708:	str	x0, [x19, #104]
    270c:	mov	x0, x21
    2710:	bl	2088 <PyInit__bz2@@Base+0x674>
    2714:	ldr	x8, [x19, #104]
    2718:	cbnz	x8, 272c <PyInit__bz2@@Base+0xd18>
    271c:	mov	x0, x20
    2720:	bl	2088 <PyInit__bz2@@Base+0x674>
    2724:	b	26c8 <PyInit__bz2@@Base+0xcb4>
    2728:	str	xzr, [x19, #16]
    272c:	mov	x0, x20
    2730:	ldp	x20, x19, [sp, #64]
    2734:	ldp	x22, x21, [sp, #48]
    2738:	ldp	x24, x23, [sp, #32]
    273c:	ldr	x25, [sp, #16]
    2740:	ldp	x29, x30, [sp], #80
    2744:	ret
    2748:	ldr	x8, [x19, #136]
    274c:	cbz	x8, 27b0 <PyInit__bz2@@Base+0xd9c>
    2750:	strb	wzr, [x19, #112]
    2754:	cbnz	w23, 272c <PyInit__bz2@@Base+0xd18>
    2758:	ldr	x0, [x19, #120]
    275c:	cbz	x0, 2774 <PyInit__bz2@@Base+0xd60>
    2760:	ldr	x9, [x19, #128]
    2764:	cmp	x9, x8
    2768:	b.cs	2774 <PyInit__bz2@@Base+0xd60>  // b.hs, b.nlast
    276c:	bl	16c0 <PyMem_Free@plt>
    2770:	str	xzr, [x19, #120]
    2774:	ldr	x8, [x19, #120]
    2778:	cbnz	x8, 2794 <PyInit__bz2@@Base+0xd80>
    277c:	ldr	x0, [x19, #136]
    2780:	bl	1920 <PyMem_Malloc@plt>
    2784:	str	x0, [x19, #120]
    2788:	cbz	x0, 27c0 <PyInit__bz2@@Base+0xdac>
    278c:	ldr	x8, [x19, #136]
    2790:	str	x8, [x19, #128]
    2794:	ldr	x0, [x19, #120]
    2798:	ldr	x1, [x19, #16]
    279c:	ldr	x2, [x19, #136]
    27a0:	bl	1680 <memcpy@plt>
    27a4:	ldr	x8, [x19, #120]
    27a8:	str	x8, [x19, #16]
    27ac:	b	272c <PyInit__bz2@@Base+0xd18>
    27b0:	mov	w8, #0x1                   	// #1
    27b4:	str	xzr, [x19, #16]
    27b8:	strb	w8, [x19, #112]
    27bc:	b	272c <PyInit__bz2@@Base+0xd18>
    27c0:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    27c4:	ldr	x8, [x8, #4008]
    27c8:	ldr	x0, [x8]
    27cc:	bl	17a0 <PyErr_SetNone@plt>
    27d0:	b	271c <PyInit__bz2@@Base+0xd08>
    27d4:	sub	sp, sp, #0x60
    27d8:	stp	x29, x30, [sp, #16]
    27dc:	stp	x26, x25, [sp, #32]
    27e0:	stp	x24, x23, [sp, #48]
    27e4:	stp	x22, x21, [sp, #64]
    27e8:	stp	x20, x19, [sp, #80]
    27ec:	add	x29, sp, #0x10
    27f0:	cmp	x1, #0x2, lsl #12
    27f4:	mov	w8, #0x2000                	// #8192
    27f8:	mov	x19, x1
    27fc:	mov	x20, x0
    2800:	csel	x1, x1, x8, cc  // cc = lo, ul, last
    2804:	mov	x0, xzr
    2808:	bl	1710 <PyBytes_FromStringAndSize@plt>
    280c:	str	x0, [sp, #8]
    2810:	cbz	x0, 2974 <PyInit__bz2@@Base+0xf60>
    2814:	mov	x22, xzr
    2818:	add	x21, x20, #0x10
    281c:	add	x8, x0, #0x20
    2820:	mov	w25, #0xffffffff            	// #-1
    2824:	mov	w26, #0x1                   	// #1
    2828:	str	x8, [x20, #40]
    282c:	b	2838 <PyInit__bz2@@Base+0xe24>
    2830:	mov	w8, #0x4                   	// #4
    2834:	cbnz	w8, 2928 <PyInit__bz2@@Base+0xf14>
    2838:	ldr	x8, [sp, #8]
    283c:	ldr	x9, [x20, #136]
    2840:	ldr	x8, [x8, #16]
    2844:	sub	x8, x8, x22
    2848:	cmp	x8, x25
    284c:	csel	x8, x8, x25, cc  // cc = lo, ul, last
    2850:	cmp	x9, x25
    2854:	str	w8, [x20, #48]
    2858:	csel	x8, x9, x25, cc  // cc = lo, ul, last
    285c:	str	w8, [x20, #24]
    2860:	sub	x8, x9, x8
    2864:	str	x8, [x20, #136]
    2868:	bl	18b0 <PyEval_SaveThread@plt>
    286c:	mov	x24, x0
    2870:	mov	x0, x21
    2874:	bl	1880 <BZ2_bzDecompress@plt>
    2878:	ldr	x8, [x20, #40]
    287c:	ldr	x9, [sp, #8]
    2880:	ldr	w10, [x20, #24]
    2884:	ldr	x11, [x20, #136]
    2888:	mov	w23, w0
    288c:	sub	x8, x8, x9
    2890:	mov	x0, x24
    2894:	add	x9, x11, x10
    2898:	sub	x22, x8, #0x20
    289c:	str	x9, [x20, #136]
    28a0:	bl	16b0 <PyEval_RestoreThread@plt>
    28a4:	mov	w0, w23
    28a8:	bl	1fa0 <PyInit__bz2@@Base+0x58c>
    28ac:	cbnz	w0, 2830 <PyInit__bz2@@Base+0xe1c>
    28b0:	cmp	w23, #0x4
    28b4:	b.ne	28c4 <PyInit__bz2@@Base+0xeb0>  // b.any
    28b8:	strb	w26, [x20, #96]
    28bc:	mov	w8, #0x2                   	// #2
    28c0:	b	2834 <PyInit__bz2@@Base+0xe20>
    28c4:	ldr	x8, [x20, #136]
    28c8:	cbz	x8, 28e4 <PyInit__bz2@@Base+0xed0>
    28cc:	ldr	w8, [x20, #48]
    28d0:	cbz	w8, 28dc <PyInit__bz2@@Base+0xec8>
    28d4:	mov	w8, wzr
    28d8:	b	2834 <PyInit__bz2@@Base+0xe20>
    28dc:	cmp	x22, x19
    28e0:	b.ne	28ec <PyInit__bz2@@Base+0xed8>  // b.any
    28e4:	mov	w8, #0x2                   	// #2
    28e8:	b	2834 <PyInit__bz2@@Base+0xe20>
    28ec:	ldr	x8, [sp, #8]
    28f0:	ldr	x8, [x8, #16]
    28f4:	cmp	x22, x8
    28f8:	b.ne	2910 <PyInit__bz2@@Base+0xefc>  // b.any
    28fc:	add	x0, sp, #0x8
    2900:	mov	x1, x19
    2904:	bl	1f44 <PyInit__bz2@@Base+0x530>
    2908:	cmn	w0, #0x1
    290c:	b.eq	2830 <PyInit__bz2@@Base+0xe1c>  // b.none
    2910:	ldr	x9, [sp, #8]
    2914:	mov	w8, wzr
    2918:	add	x9, x9, x22
    291c:	add	x9, x9, #0x20
    2920:	str	x9, [x20, #40]
    2924:	b	2834 <PyInit__bz2@@Base+0xe20>
    2928:	cmp	w8, #0x4
    292c:	b.eq	2964 <PyInit__bz2@@Base+0xf50>  // b.none
    2930:	cmp	w8, #0x2
    2934:	b.ne	2974 <PyInit__bz2@@Base+0xf60>  // b.any
    2938:	ldr	x8, [sp, #8]
    293c:	ldr	x8, [x8, #16]
    2940:	cmp	x22, x8
    2944:	b.eq	295c <PyInit__bz2@@Base+0xf48>  // b.none
    2948:	add	x0, sp, #0x8
    294c:	mov	x1, x22
    2950:	bl	16a0 <_PyBytes_Resize@plt>
    2954:	cmn	w0, #0x1
    2958:	b.eq	2964 <PyInit__bz2@@Base+0xf50>  // b.none
    295c:	ldr	x0, [sp, #8]
    2960:	b	2974 <PyInit__bz2@@Base+0xf60>
    2964:	ldr	x0, [sp, #8]
    2968:	bl	2088 <PyInit__bz2@@Base+0x674>
    296c:	mov	x0, xzr
    2970:	b	2974 <PyInit__bz2@@Base+0xf60>
    2974:	ldp	x20, x19, [sp, #80]
    2978:	ldp	x22, x21, [sp, #64]
    297c:	ldp	x24, x23, [sp, #48]
    2980:	ldp	x26, x25, [sp, #32]
    2984:	ldp	x29, x30, [sp, #16]
    2988:	add	sp, sp, #0x60
    298c:	ret
    2990:	stp	x29, x30, [sp, #-48]!
    2994:	str	x21, [sp, #16]
    2998:	stp	x20, x19, [sp, #32]
    299c:	mov	x29, sp
    29a0:	mov	x19, x0
    29a4:	bl	1870 <PyThread_allocate_lock@plt>
    29a8:	cbz	x0, 2a28 <PyInit__bz2@@Base+0x1014>
    29ac:	mov	x20, x0
    29b0:	ldr	x0, [x19, #144]
    29b4:	cbz	x0, 29bc <PyInit__bz2@@Base+0xfa8>
    29b8:	bl	1930 <PyThread_free_lock@plt>
    29bc:	ldr	x21, [x19, #104]
    29c0:	mov	w8, #0x1                   	// #1
    29c4:	mov	x0, xzr
    29c8:	mov	x1, xzr
    29cc:	strb	w8, [x19, #112]
    29d0:	stp	xzr, x20, [x19, #136]
    29d4:	stp	xzr, xzr, [x19, #120]
    29d8:	bl	1710 <PyBytes_FromStringAndSize@plt>
    29dc:	str	x0, [x19, #104]
    29e0:	mov	x0, x21
    29e4:	bl	2088 <PyInit__bz2@@Base+0x674>
    29e8:	ldr	x8, [x19, #104]
    29ec:	cbz	x8, 2a08 <PyInit__bz2@@Base+0xff4>
    29f0:	add	x0, x19, #0x10
    29f4:	mov	w1, wzr
    29f8:	mov	w2, wzr
    29fc:	bl	1770 <BZ2_bzDecompressInit@plt>
    2a00:	bl	1fa0 <PyInit__bz2@@Base+0x58c>
    2a04:	cbz	w0, 2a44 <PyInit__bz2@@Base+0x1030>
    2a08:	ldr	x0, [x19, #104]
    2a0c:	cbz	x0, 2a18 <PyInit__bz2@@Base+0x1004>
    2a10:	str	xzr, [x19, #104]
    2a14:	bl	20a0 <PyInit__bz2@@Base+0x68c>
    2a18:	ldr	x0, [x19, #144]
    2a1c:	bl	1930 <PyThread_free_lock@plt>
    2a20:	str	xzr, [x19, #144]
    2a24:	b	2a40 <PyInit__bz2@@Base+0x102c>
    2a28:	adrp	x8, 13000 <PyInit__bz2@@Base+0x115ec>
    2a2c:	ldr	x8, [x8, #4008]
    2a30:	adrp	x1, 3000 <PyInit__bz2@@Base+0x15ec>
    2a34:	add	x1, x1, #0x364
    2a38:	ldr	x0, [x8]
    2a3c:	bl	1760 <PyErr_SetString@plt>
    2a40:	mov	w0, #0xffffffff            	// #-1
    2a44:	ldp	x20, x19, [sp, #32]
    2a48:	ldr	x21, [sp, #16]
    2a4c:	ldp	x29, x30, [sp], #48
    2a50:	ret

Disassembly of section .fini:

0000000000002a54 <.fini>:
    2a54:	stp	x29, x30, [sp, #-16]!
    2a58:	mov	x29, sp
    2a5c:	ldp	x29, x30, [sp], #16
    2a60:	ret
