
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sed_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402700 <.init>:
  402700:	stp	x29, x30, [sp, #-16]!
  402704:	mov	x29, sp
  402708:	bl	40333c <wcrtomb@plt+0x4bc>
  40270c:	ldp	x29, x30, [sp], #16
  402710:	ret

Disassembly of section .plt:

0000000000402720 <mbrtowc@plt-0x20>:
  402720:	stp	x16, x30, [sp, #-16]!
  402724:	adrp	x16, 431000 <_obstack_memory_used@@Base+0x20e54>
  402728:	ldr	x17, [x16, #4088]
  40272c:	add	x16, x16, #0xff8
  402730:	br	x17
  402734:	nop
  402738:	nop
  40273c:	nop

0000000000402740 <mbrtowc@plt>:
  402740:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16]
  402748:	add	x16, x16, #0x0
  40274c:	br	x17

0000000000402750 <memcpy@plt>:
  402750:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #8]
  402758:	add	x16, x16, #0x8
  40275c:	br	x17

0000000000402760 <memmove@plt>:
  402760:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #16]
  402768:	add	x16, x16, #0x10
  40276c:	br	x17

0000000000402770 <isalpha@plt>:
  402770:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #24]
  402778:	add	x16, x16, #0x18
  40277c:	br	x17

0000000000402780 <fwrite_unlocked@plt>:
  402780:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #32]
  402788:	add	x16, x16, #0x20
  40278c:	br	x17

0000000000402790 <strlen@plt>:
  402790:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #40]
  402798:	add	x16, x16, #0x28
  40279c:	br	x17

00000000004027a0 <fputs@plt>:
  4027a0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #48]
  4027a8:	add	x16, x16, #0x30
  4027ac:	br	x17

00000000004027b0 <__sprintf_chk@plt>:
  4027b0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #56]
  4027b8:	add	x16, x16, #0x38
  4027bc:	br	x17

00000000004027c0 <acl_set_fd@plt>:
  4027c0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #64]
  4027c8:	add	x16, x16, #0x40
  4027cc:	br	x17

00000000004027d0 <exit@plt>:
  4027d0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #72]
  4027d8:	add	x16, x16, #0x48
  4027dc:	br	x17

00000000004027e0 <error@plt>:
  4027e0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #80]
  4027e8:	add	x16, x16, #0x50
  4027ec:	br	x17

00000000004027f0 <acl_entries@plt>:
  4027f0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #88]
  4027f8:	add	x16, x16, #0x58
  4027fc:	br	x17

0000000000402800 <wctype@plt>:
  402800:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #96]
  402808:	add	x16, x16, #0x60
  40280c:	br	x17

0000000000402810 <readlink@plt>:
  402810:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #104]
  402818:	add	x16, x16, #0x68
  40281c:	br	x17

0000000000402820 <ferror_unlocked@plt>:
  402820:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #112]
  402828:	add	x16, x16, #0x70
  40282c:	br	x17

0000000000402830 <ftell@plt>:
  402830:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #120]
  402838:	add	x16, x16, #0x78
  40283c:	br	x17

0000000000402840 <__cxa_atexit@plt>:
  402840:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #128]
  402848:	add	x16, x16, #0x80
  40284c:	br	x17

0000000000402850 <qsort@plt>:
  402850:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #136]
  402858:	add	x16, x16, #0x88
  40285c:	br	x17

0000000000402860 <setvbuf@plt>:
  402860:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #144]
  402868:	add	x16, x16, #0x90
  40286c:	br	x17

0000000000402870 <isblank@plt>:
  402870:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #152]
  402878:	add	x16, x16, #0x98
  40287c:	br	x17

0000000000402880 <__fwriting@plt>:
  402880:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #160]
  402888:	add	x16, x16, #0xa0
  40288c:	br	x17

0000000000402890 <fileno@plt>:
  402890:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #168]
  402898:	add	x16, x16, #0xa8
  40289c:	br	x17

00000000004028a0 <putc_unlocked@plt>:
  4028a0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #176]
  4028a8:	add	x16, x16, #0xb0
  4028ac:	br	x17

00000000004028b0 <acl_delete_def_file@plt>:
  4028b0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #184]
  4028b8:	add	x16, x16, #0xb8
  4028bc:	br	x17

00000000004028c0 <fclose@plt>:
  4028c0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #192]
  4028c8:	add	x16, x16, #0xc0
  4028cc:	br	x17

00000000004028d0 <atoi@plt>:
  4028d0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #200]
  4028d8:	add	x16, x16, #0xc8
  4028dc:	br	x17

00000000004028e0 <wctob@plt>:
  4028e0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #208]
  4028e8:	add	x16, x16, #0xd0
  4028ec:	br	x17

00000000004028f0 <nl_langinfo@plt>:
  4028f0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #216]
  4028f8:	add	x16, x16, #0xd8
  4028fc:	br	x17

0000000000402900 <fopen@plt>:
  402900:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #224]
  402908:	add	x16, x16, #0xe0
  40290c:	br	x17

0000000000402910 <isspace@plt>:
  402910:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #232]
  402918:	add	x16, x16, #0xe8
  40291c:	br	x17

0000000000402920 <iswctype@plt>:
  402920:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #240]
  402928:	add	x16, x16, #0xf0
  40292c:	br	x17

0000000000402930 <malloc@plt>:
  402930:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #248]
  402938:	add	x16, x16, #0xf8
  40293c:	br	x17

0000000000402940 <toupper@plt>:
  402940:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #256]
  402948:	add	x16, x16, #0x100
  40294c:	br	x17

0000000000402950 <chmod@plt>:
  402950:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #264]
  402958:	add	x16, x16, #0x108
  40295c:	br	x17

0000000000402960 <getdelim@plt>:
  402960:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #272]
  402968:	add	x16, x16, #0x110
  40296c:	br	x17

0000000000402970 <islower@plt>:
  402970:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #280]
  402978:	add	x16, x16, #0x118
  40297c:	br	x17

0000000000402980 <isxdigit@plt>:
  402980:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #288]
  402988:	add	x16, x16, #0x120
  40298c:	br	x17

0000000000402990 <popen@plt>:
  402990:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #296]
  402998:	add	x16, x16, #0x128
  40299c:	br	x17

00000000004029a0 <strncmp@plt>:
  4029a0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #304]
  4029a8:	add	x16, x16, #0x130
  4029ac:	br	x17

00000000004029b0 <bindtextdomain@plt>:
  4029b0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #312]
  4029b8:	add	x16, x16, #0x138
  4029bc:	br	x17

00000000004029c0 <isdigit@plt>:
  4029c0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #320]
  4029c8:	add	x16, x16, #0x140
  4029cc:	br	x17

00000000004029d0 <__libc_start_main@plt>:
  4029d0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #328]
  4029d8:	add	x16, x16, #0x148
  4029dc:	br	x17

00000000004029e0 <strverscmp@plt>:
  4029e0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #336]
  4029e8:	add	x16, x16, #0x150
  4029ec:	br	x17

00000000004029f0 <__printf_chk@plt>:
  4029f0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #344]
  4029f8:	add	x16, x16, #0x158
  4029fc:	br	x17

0000000000402a00 <acl_get_tag_type@plt>:
  402a00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #352]
  402a08:	add	x16, x16, #0x160
  402a0c:	br	x17

0000000000402a10 <memset@plt>:
  402a10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #360]
  402a18:	add	x16, x16, #0x168
  402a1c:	br	x17

0000000000402a20 <fdopen@plt>:
  402a20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #368]
  402a28:	add	x16, x16, #0x170
  402a2c:	br	x17

0000000000402a30 <fchmod@plt>:
  402a30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #376]
  402a38:	add	x16, x16, #0x178
  402a3c:	br	x17

0000000000402a40 <putchar_unlocked@plt>:
  402a40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #384]
  402a48:	add	x16, x16, #0x180
  402a4c:	br	x17

0000000000402a50 <__vfprintf_chk@plt>:
  402a50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #392]
  402a58:	add	x16, x16, #0x188
  402a5c:	br	x17

0000000000402a60 <calloc@plt>:
  402a60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #400]
  402a68:	add	x16, x16, #0x190
  402a6c:	br	x17

0000000000402a70 <isupper@plt>:
  402a70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #408]
  402a78:	add	x16, x16, #0x198
  402a7c:	br	x17

0000000000402a80 <realloc@plt>:
  402a80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #416]
  402a88:	add	x16, x16, #0x1a0
  402a8c:	br	x17

0000000000402a90 <__ctype_toupper_loc@plt>:
  402a90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #424]
  402a98:	add	x16, x16, #0x1a8
  402a9c:	br	x17

0000000000402aa0 <acl_set_file@plt>:
  402aa0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #432]
  402aa8:	add	x16, x16, #0x1b0
  402aac:	br	x17

0000000000402ab0 <rewind@plt>:
  402ab0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #440]
  402ab8:	add	x16, x16, #0x1b8
  402abc:	br	x17

0000000000402ac0 <acl_from_mode@plt>:
  402ac0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #448]
  402ac8:	add	x16, x16, #0x1c0
  402acc:	br	x17

0000000000402ad0 <acl_get_fd@plt>:
  402ad0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #456]
  402ad8:	add	x16, x16, #0x1c8
  402adc:	br	x17

0000000000402ae0 <strdup@plt>:
  402ae0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #464]
  402ae8:	add	x16, x16, #0x1d0
  402aec:	br	x17

0000000000402af0 <getc_unlocked@plt>:
  402af0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #472]
  402af8:	add	x16, x16, #0x1d8
  402afc:	br	x17

0000000000402b00 <strerror@plt>:
  402b00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #480]
  402b08:	add	x16, x16, #0x1e0
  402b0c:	br	x17

0000000000402b10 <strrchr@plt>:
  402b10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #488]
  402b18:	add	x16, x16, #0x1e8
  402b1c:	br	x17

0000000000402b20 <__gmon_start__@plt>:
  402b20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #496]
  402b28:	add	x16, x16, #0x1f0
  402b2c:	br	x17

0000000000402b30 <btowc@plt>:
  402b30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #504]
  402b38:	add	x16, x16, #0x1f8
  402b3c:	br	x17

0000000000402b40 <abort@plt>:
  402b40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #512]
  402b48:	add	x16, x16, #0x200
  402b4c:	br	x17

0000000000402b50 <mkostemp@plt>:
  402b50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #520]
  402b58:	add	x16, x16, #0x208
  402b5c:	br	x17

0000000000402b60 <iscntrl@plt>:
  402b60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #528]
  402b68:	add	x16, x16, #0x210
  402b6c:	br	x17

0000000000402b70 <mbsinit@plt>:
  402b70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #536]
  402b78:	add	x16, x16, #0x218
  402b7c:	br	x17

0000000000402b80 <ispunct@plt>:
  402b80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #544]
  402b88:	add	x16, x16, #0x220
  402b8c:	br	x17

0000000000402b90 <puts@plt>:
  402b90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #552]
  402b98:	add	x16, x16, #0x228
  402b9c:	br	x17

0000000000402ba0 <fread_unlocked@plt>:
  402ba0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #560]
  402ba8:	add	x16, x16, #0x230
  402bac:	br	x17

0000000000402bb0 <memcmp@plt>:
  402bb0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #568]
  402bb8:	add	x16, x16, #0x238
  402bbc:	br	x17

0000000000402bc0 <textdomain@plt>:
  402bc0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #576]
  402bc8:	add	x16, x16, #0x240
  402bcc:	br	x17

0000000000402bd0 <getopt_long@plt>:
  402bd0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #584]
  402bd8:	add	x16, x16, #0x248
  402bdc:	br	x17

0000000000402be0 <__fprintf_chk@plt>:
  402be0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #592]
  402be8:	add	x16, x16, #0x250
  402bec:	br	x17

0000000000402bf0 <strcmp@plt>:
  402bf0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #600]
  402bf8:	add	x16, x16, #0x258
  402bfc:	br	x17

0000000000402c00 <__ctype_b_loc@plt>:
  402c00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #608]
  402c08:	add	x16, x16, #0x260
  402c0c:	br	x17

0000000000402c10 <acl_get_file@plt>:
  402c10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #616]
  402c18:	add	x16, x16, #0x268
  402c1c:	br	x17

0000000000402c20 <free@plt>:
  402c20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #624]
  402c28:	add	x16, x16, #0x270
  402c2c:	br	x17

0000000000402c30 <ungetc@plt>:
  402c30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #632]
  402c38:	add	x16, x16, #0x278
  402c3c:	br	x17

0000000000402c40 <__ctype_get_mb_cur_max@plt>:
  402c40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #640]
  402c48:	add	x16, x16, #0x280
  402c4c:	br	x17

0000000000402c50 <acl_get_entry@plt>:
  402c50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #648]
  402c58:	add	x16, x16, #0x288
  402c5c:	br	x17

0000000000402c60 <strchr@plt>:
  402c60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #656]
  402c68:	add	x16, x16, #0x290
  402c6c:	br	x17

0000000000402c70 <feof_unlocked@plt>:
  402c70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #664]
  402c78:	add	x16, x16, #0x298
  402c7c:	br	x17

0000000000402c80 <memrchr@plt>:
  402c80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #672]
  402c88:	add	x16, x16, #0x2a0
  402c8c:	br	x17

0000000000402c90 <rename@plt>:
  402c90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #680]
  402c98:	add	x16, x16, #0x2a8
  402c9c:	br	x17

0000000000402ca0 <fflush_unlocked@plt>:
  402ca0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #688]
  402ca8:	add	x16, x16, #0x2b0
  402cac:	br	x17

0000000000402cb0 <dcngettext@plt>:
  402cb0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #696]
  402cb8:	add	x16, x16, #0x2b8
  402cbc:	br	x17

0000000000402cc0 <strcpy@plt>:
  402cc0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #704]
  402cc8:	add	x16, x16, #0x2c0
  402ccc:	br	x17

0000000000402cd0 <clearerr_unlocked@plt>:
  402cd0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #712]
  402cd8:	add	x16, x16, #0x2c8
  402cdc:	br	x17

0000000000402ce0 <__lxstat@plt>:
  402ce0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #720]
  402ce8:	add	x16, x16, #0x2d0
  402cec:	br	x17

0000000000402cf0 <memchr@plt>:
  402cf0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #728]
  402cf8:	add	x16, x16, #0x2d8
  402cfc:	br	x17

0000000000402d00 <isatty@plt>:
  402d00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #736]
  402d08:	add	x16, x16, #0x2e0
  402d0c:	br	x17

0000000000402d10 <fputc_unlocked@plt>:
  402d10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #744]
  402d18:	add	x16, x16, #0x2e8
  402d1c:	br	x17

0000000000402d20 <isgraph@plt>:
  402d20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #752]
  402d28:	add	x16, x16, #0x2f0
  402d2c:	br	x17

0000000000402d30 <iswalnum@plt>:
  402d30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #760]
  402d38:	add	x16, x16, #0x2f8
  402d3c:	br	x17

0000000000402d40 <__fxstat@plt>:
  402d40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #768]
  402d48:	add	x16, x16, #0x300
  402d4c:	br	x17

0000000000402d50 <strstr@plt>:
  402d50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #776]
  402d58:	add	x16, x16, #0x308
  402d5c:	br	x17

0000000000402d60 <dcgettext@plt>:
  402d60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #784]
  402d68:	add	x16, x16, #0x310
  402d6c:	br	x17

0000000000402d70 <fputs_unlocked@plt>:
  402d70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #792]
  402d78:	add	x16, x16, #0x318
  402d7c:	br	x17

0000000000402d80 <strcoll@plt>:
  402d80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #800]
  402d88:	add	x16, x16, #0x320
  402d8c:	br	x17

0000000000402d90 <isalnum@plt>:
  402d90:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #808]
  402d98:	add	x16, x16, #0x328
  402d9c:	br	x17

0000000000402da0 <pclose@plt>:
  402da0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #816]
  402da8:	add	x16, x16, #0x330
  402dac:	br	x17

0000000000402db0 <towupper@plt>:
  402db0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #824]
  402db8:	add	x16, x16, #0x338
  402dbc:	br	x17

0000000000402dc0 <iswprint@plt>:
  402dc0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #832]
  402dc8:	add	x16, x16, #0x340
  402dcc:	br	x17

0000000000402dd0 <umask@plt>:
  402dd0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #840]
  402dd8:	add	x16, x16, #0x348
  402ddc:	br	x17

0000000000402de0 <__assert_fail@plt>:
  402de0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #848]
  402de8:	add	x16, x16, #0x350
  402dec:	br	x17

0000000000402df0 <__errno_location@plt>:
  402df0:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #856]
  402df8:	add	x16, x16, #0x358
  402dfc:	br	x17

0000000000402e00 <tolower@plt>:
  402e00:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #864]
  402e08:	add	x16, x16, #0x360
  402e0c:	br	x17

0000000000402e10 <getenv@plt>:
  402e10:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #872]
  402e18:	add	x16, x16, #0x368
  402e1c:	br	x17

0000000000402e20 <unlink@plt>:
  402e20:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #880]
  402e28:	add	x16, x16, #0x370
  402e2c:	br	x17

0000000000402e30 <fchown@plt>:
  402e30:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #888]
  402e38:	add	x16, x16, #0x378
  402e3c:	br	x17

0000000000402e40 <towlower@plt>:
  402e40:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #896]
  402e48:	add	x16, x16, #0x380
  402e4c:	br	x17

0000000000402e50 <isprint@plt>:
  402e50:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e54:	ldr	x17, [x16, #904]
  402e58:	add	x16, x16, #0x388
  402e5c:	br	x17

0000000000402e60 <setlocale@plt>:
  402e60:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e64:	ldr	x17, [x16, #912]
  402e68:	add	x16, x16, #0x390
  402e6c:	br	x17

0000000000402e70 <acl_free@plt>:
  402e70:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e74:	ldr	x17, [x16, #920]
  402e78:	add	x16, x16, #0x398
  402e7c:	br	x17

0000000000402e80 <wcrtomb@plt>:
  402e80:	adrp	x16, 432000 <mbrtowc@GLIBC_2.17>
  402e84:	ldr	x17, [x16, #928]
  402e88:	add	x16, x16, #0x3a0
  402e8c:	br	x17

Disassembly of section .text:

0000000000402e90 <_obstack_begin@@Base-0xd13c>:
  402e90:	sub	sp, sp, #0x80
  402e94:	stp	x29, x30, [sp, #32]
  402e98:	add	x29, sp, #0x20
  402e9c:	stp	x21, x22, [sp, #64]
  402ea0:	mov	x21, x1
  402ea4:	mov	w22, w0
  402ea8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  402eac:	add	x0, x0, #0x48
  402eb0:	stp	x19, x20, [sp, #48]
  402eb4:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0xbe54>
  402eb8:	add	x20, x20, #0xb3
  402ebc:	stp	x23, x24, [sp, #80]
  402ec0:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x21e54>
  402ec4:	stp	x25, x26, [sp, #96]
  402ec8:	str	x27, [sp, #112]
  402ecc:	bl	402e10 <getenv@plt>
  402ed0:	mov	x19, x0
  402ed4:	ldr	x0, [x21]
  402ed8:	bl	40e148 <wcrtomb@plt+0xb2c8>
  402edc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  402ee0:	add	x1, x1, #0x9f5
  402ee4:	mov	w0, #0x6                   	// #6
  402ee8:	bl	402e60 <setlocale@plt>
  402eec:	bl	407eac <wcrtomb@plt+0x502c>
  402ef0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  402ef4:	add	x0, x0, #0x8fc
  402ef8:	bl	40df30 <wcrtomb@plt+0xb0b0>
  402efc:	adrp	x0, 408000 <wcrtomb@plt+0x5180>
  402f00:	add	x0, x0, #0x564
  402f04:	bl	41aed0 <_obstack_memory_used@@Base+0xad24>
  402f08:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  402f0c:	add	x1, x1, #0x4d
  402f10:	mov	x0, x20
  402f14:	bl	4029b0 <bindtextdomain@plt>
  402f18:	mov	x0, x20
  402f1c:	bl	402bc0 <textdomain@plt>
  402f20:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  402f24:	add	x0, x0, #0x87f
  402f28:	bl	402e10 <getenv@plt>
  402f2c:	cmp	x0, #0x0
  402f30:	cset	w0, ne  // ne = any
  402f34:	str	w0, [x23, #2296]
  402f38:	cbz	x19, 402f5c <wcrtomb@plt+0xdc>
  402f3c:	mov	x0, x19
  402f40:	bl	4028d0 <atoi@plt>
  402f44:	sxtw	x0, w0
  402f48:	cmp	x0, #0x1
  402f4c:	b.ls	402f5c <wcrtomb@plt+0xdc>  // b.plast
  402f50:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  402f54:	sub	x0, x0, #0x1
  402f58:	str	x0, [x1, #1144]
  402f5c:	adrp	x25, 41c000 <_obstack_memory_used@@Base+0xbe54>
  402f60:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0xbe54>
  402f64:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  402f68:	add	x25, x25, #0x1e0
  402f6c:	add	x24, x24, #0xeb
  402f70:	add	x19, x19, #0x760
  402f74:	mov	w20, #0x1                   	// #1
  402f78:	b	402fe4 <wcrtomb@plt+0x164>
  402f7c:	cmp	w0, #0x7a
  402f80:	b.gt	402fc8 <wcrtomb@plt+0x148>
  402f84:	cmp	w0, #0x61
  402f88:	b.gt	402fa4 <wcrtomb@plt+0x124>
  402f8c:	cmp	w0, #0x45
  402f90:	b.eq	4031ac <wcrtomb@plt+0x32c>  // b.none
  402f94:	cmp	w0, #0x46
  402f98:	b.eq	4030f4 <wcrtomb@plt+0x274>  // b.none
  402f9c:	mov	w0, #0x1                   	// #1
  402fa0:	b	4032e8 <wcrtomb@plt+0x468>
  402fa4:	sub	w2, w0, #0x62
  402fa8:	cmp	w2, #0x18
  402fac:	b.hi	402f9c <wcrtomb@plt+0x11c>  // b.pmore
  402fb0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  402fb4:	add	x0, x0, #0x1a8
  402fb8:	ldrh	w0, [x0, w2, uxtw #1]
  402fbc:	adr	x1, 402fc8 <wcrtomb@plt+0x148>
  402fc0:	add	x0, x1, w0, sxth #2
  402fc4:	br	x0
  402fc8:	cmp	w0, #0x100
  402fcc:	b.eq	4031c0 <wcrtomb@plt+0x340>  // b.none
  402fd0:	cmp	w0, #0x101
  402fd4:	b.ne	402f9c <wcrtomb@plt+0x11c>  // b.any
  402fd8:	strb	w20, [x19, #45]
  402fdc:	b	402fe4 <wcrtomb@plt+0x164>
  402fe0:	strb	w20, [x19, #8]
  402fe4:	mov	x3, x25
  402fe8:	mov	x2, x24
  402fec:	mov	x1, x21
  402ff0:	mov	w0, w22
  402ff4:	mov	x4, #0x0                   	// #0
  402ff8:	bl	402bd0 <getopt_long@plt>
  402ffc:	cmn	w0, #0x1
  403000:	b.ne	402f7c <wcrtomb@plt+0xfc>  // b.any
  403004:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  403008:	add	x19, x19, #0x760
  40300c:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  403010:	ldr	x0, [x19, #16]
  403014:	cbnz	x0, 40304c <wcrtomb@plt+0x1cc>
  403018:	ldr	w0, [x20, #1312]
  40301c:	cmp	w0, w22
  403020:	b.ge	402f9c <wcrtomb@plt+0x11c>  // b.tcont
  403024:	add	w1, w0, #0x1
  403028:	str	w1, [x20, #1312]
  40302c:	ldr	x22, [x21, w0, sxtw #3]
  403030:	mov	x0, x22
  403034:	bl	402790 <strlen@plt>
  403038:	mov	x1, x22
  40303c:	mov	x2, x0
  403040:	mov	x0, #0x0                   	// #0
  403044:	bl	405254 <wcrtomb@plt+0x23d4>
  403048:	str	x0, [x19, #16]
  40304c:	ldr	x0, [x19, #16]
  403050:	bl	405354 <wcrtomb@plt+0x24d4>
  403054:	ldrb	w0, [x19, #45]
  403058:	cbz	w0, 403064 <wcrtomb@plt+0x1e4>
  40305c:	ldr	x0, [x19, #16]
  403060:	bl	405cd0 <wcrtomb@plt+0x2e50>
  403064:	ldr	x0, [x19, #16]
  403068:	ldrsw	x1, [x20, #1312]
  40306c:	add	x1, x21, x1, lsl #3
  403070:	bl	407ca4 <wcrtomb@plt+0x4e24>
  403074:	mov	w20, w0
  403078:	ldr	x0, [x19, #16]
  40307c:	bl	4054e0 <wcrtomb@plt+0x2660>
  403080:	mov	x0, #0x0                   	// #0
  403084:	bl	409058 <wcrtomb@plt+0x61d8>
  403088:	mov	w0, w20
  40308c:	ldp	x29, x30, [sp, #32]
  403090:	ldp	x19, x20, [sp, #48]
  403094:	ldp	x21, x22, [sp, #64]
  403098:	ldp	x23, x24, [sp, #80]
  40309c:	ldp	x25, x26, [sp, #96]
  4030a0:	ldr	x27, [sp, #112]
  4030a4:	add	sp, sp, #0x80
  4030a8:	ret
  4030ac:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4030b0:	ldr	x26, [x0, #1304]
  4030b4:	mov	x0, x26
  4030b8:	bl	402790 <strlen@plt>
  4030bc:	mov	x2, x0
  4030c0:	mov	x1, x26
  4030c4:	ldr	x0, [x19, #16]
  4030c8:	bl	405254 <wcrtomb@plt+0x23d4>
  4030cc:	str	x0, [x19, #16]
  4030d0:	b	402fe4 <wcrtomb@plt+0x164>
  4030d4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4030d8:	ldr	x1, [x0, #1304]
  4030dc:	ldr	x0, [x19, #16]
  4030e0:	bl	4052ac <wcrtomb@plt+0x242c>
  4030e4:	b	4030cc <wcrtomb@plt+0x24c>
  4030e8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4030ec:	strb	wzr, [x0, #1152]
  4030f0:	b	402fe4 <wcrtomb@plt+0x164>
  4030f4:	strb	w20, [x19, #24]
  4030f8:	b	402fe4 <wcrtomb@plt+0x164>
  4030fc:	adrp	x26, 432000 <_obstack_memory_used@@Base+0x21e54>
  403100:	strb	w20, [x19, #25]
  403104:	ldr	x27, [x26, #1304]
  403108:	cbnz	x27, 403120 <wcrtomb@plt+0x2a0>
  40310c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  403110:	add	x0, x0, #0x64f
  403114:	bl	40fdb0 <wcrtomb@plt+0xcf30>
  403118:	str	x0, [x19, #32]
  40311c:	b	402fe4 <wcrtomb@plt+0x164>
  403120:	mov	x0, x27
  403124:	mov	w1, #0x2a                  	// #42
  403128:	bl	402c60 <strchr@plt>
  40312c:	cbz	x0, 403138 <wcrtomb@plt+0x2b8>
  403130:	mov	x0, x27
  403134:	b	403114 <wcrtomb@plt+0x294>
  403138:	mov	x0, x27
  40313c:	bl	402790 <strlen@plt>
  403140:	add	x0, x0, #0x2
  403144:	bl	40fd78 <wcrtomb@plt+0xcef8>
  403148:	mov	w1, #0x2a                  	// #42
  40314c:	str	x0, [x19, #32]
  403150:	strb	w1, [x0], #1
  403154:	ldr	x1, [x26, #1304]
  403158:	bl	402cc0 <strcpy@plt>
  40315c:	b	402fe4 <wcrtomb@plt+0x164>
  403160:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  403164:	ldr	x0, [x0, #1304]
  403168:	bl	4028d0 <atoi@plt>
  40316c:	sxtw	x0, w0
  403170:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  403174:	str	x0, [x1, #1144]
  403178:	b	402fe4 <wcrtomb@plt+0x164>
  40317c:	mov	w0, #0x2                   	// #2
  403180:	str	w0, [x23, #2296]
  403184:	b	402fe4 <wcrtomb@plt+0x164>
  403188:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40318c:	add	x0, x0, #0x478
  403190:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403194:	add	x1, x1, #0x5f
  403198:	str	x1, [x0, #16]
  40319c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4031a0:	add	x1, x1, #0x62
  4031a4:	str	x1, [x0, #24]
  4031a8:	b	402fe4 <wcrtomb@plt+0x164>
  4031ac:	mov	w0, #0x1                   	// #1
  4031b0:	str	w0, [x19, #40]
  4031b4:	b	402fe4 <wcrtomb@plt+0x164>
  4031b8:	strb	w20, [x19, #25]
  4031bc:	b	402fe4 <wcrtomb@plt+0x164>
  4031c0:	strb	w20, [x19, #44]
  4031c4:	b	402fe4 <wcrtomb@plt+0x164>
  4031c8:	strb	w20, [x19, #46]
  4031cc:	b	402fe4 <wcrtomb@plt+0x164>
  4031d0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4031d4:	mov	w2, #0x5                   	// #5
  4031d8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4031dc:	add	x1, x1, #0x65
  4031e0:	ldr	x24, [x0, #1320]
  4031e4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4031e8:	ldr	x25, [x0, #1968]
  4031ec:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4031f0:	ldr	x26, [x0, #1176]
  4031f4:	mov	x0, #0x0                   	// #0
  4031f8:	bl	402d60 <dcgettext@plt>
  4031fc:	mov	x19, x0
  403200:	mov	w2, #0x5                   	// #5
  403204:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403208:	mov	x0, #0x0                   	// #0
  40320c:	add	x1, x1, #0x72
  403210:	bl	402d60 <dcgettext@plt>
  403214:	mov	x20, x0
  403218:	mov	w2, #0x5                   	// #5
  40321c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403220:	mov	x0, #0x0                   	// #0
  403224:	add	x1, x1, #0x7b
  403228:	bl	402d60 <dcgettext@plt>
  40322c:	mov	x21, x0
  403230:	mov	w2, #0x5                   	// #5
  403234:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403238:	mov	x0, #0x0                   	// #0
  40323c:	add	x1, x1, #0x87
  403240:	bl	402d60 <dcgettext@plt>
  403244:	mov	x22, x0
  403248:	mov	w2, #0x5                   	// #5
  40324c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403250:	mov	x0, #0x0                   	// #0
  403254:	add	x1, x1, #0x95
  403258:	bl	402d60 <dcgettext@plt>
  40325c:	mov	x23, x0
  403260:	mov	w2, #0x5                   	// #5
  403264:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403268:	mov	x0, #0x0                   	// #0
  40326c:	add	x1, x1, #0xa2
  403270:	bl	402d60 <dcgettext@plt>
  403274:	stp	x23, x0, [sp]
  403278:	mov	x7, x22
  40327c:	mov	x6, x21
  403280:	mov	x5, x20
  403284:	mov	x4, x19
  403288:	mov	x3, x26
  40328c:	mov	x1, x25
  403290:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  403294:	add	x2, x2, #0xaf
  403298:	str	xzr, [sp, #16]
  40329c:	mov	x0, x24
  4032a0:	bl	40faf8 <wcrtomb@plt+0xcc78>
  4032a4:	mov	w0, #0xa                   	// #10
  4032a8:	bl	402a40 <putchar_unlocked@plt>
  4032ac:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4032b0:	add	x1, x1, #0xb7
  4032b4:	mov	w2, #0x5                   	// #5
  4032b8:	mov	x0, #0x0                   	// #0
  4032bc:	bl	402d60 <dcgettext@plt>
  4032c0:	bl	402b90 <puts@plt>
  4032c4:	mov	w0, #0xa                   	// #10
  4032c8:	bl	402a40 <putchar_unlocked@plt>
  4032cc:	mov	w0, #0x0                   	// #0
  4032d0:	bl	408578 <wcrtomb@plt+0x56f8>
  4032d4:	mov	x0, #0x0                   	// #0
  4032d8:	bl	409058 <wcrtomb@plt+0x61d8>
  4032dc:	mov	w0, #0x0                   	// #0
  4032e0:	bl	4027d0 <exit@plt>
  4032e4:	mov	w0, #0x0                   	// #0
  4032e8:	bl	408608 <wcrtomb@plt+0x5788>
  4032ec:	mov	x29, #0x0                   	// #0
  4032f0:	mov	x30, #0x0                   	// #0
  4032f4:	mov	x5, x0
  4032f8:	ldr	x1, [sp]
  4032fc:	add	x2, sp, #0x8
  403300:	mov	x6, sp
  403304:	movz	x0, #0x0, lsl #48
  403308:	movk	x0, #0x0, lsl #32
  40330c:	movk	x0, #0x40, lsl #16
  403310:	movk	x0, #0x2e90
  403314:	movz	x3, #0x0, lsl #48
  403318:	movk	x3, #0x0, lsl #32
  40331c:	movk	x3, #0x41, lsl #16
  403320:	movk	x3, #0xae48
  403324:	movz	x4, #0x0, lsl #48
  403328:	movk	x4, #0x0, lsl #32
  40332c:	movk	x4, #0x41, lsl #16
  403330:	movk	x4, #0xaec8
  403334:	bl	4029d0 <__libc_start_main@plt>
  403338:	bl	402b40 <abort@plt>
  40333c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x20e54>
  403340:	ldr	x0, [x0, #4064]
  403344:	cbz	x0, 40334c <wcrtomb@plt+0x4cc>
  403348:	b	402b20 <__gmon_start__@plt>
  40334c:	ret
  403350:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  403354:	add	x1, x0, #0x508
  403358:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40335c:	add	x0, x0, #0x508
  403360:	cmp	x1, x0
  403364:	b.eq	403390 <wcrtomb@plt+0x510>  // b.none
  403368:	sub	sp, sp, #0x10
  40336c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  403370:	ldr	x1, [x1, #3864]
  403374:	str	x1, [sp, #8]
  403378:	cbz	x1, 403388 <wcrtomb@plt+0x508>
  40337c:	mov	x16, x1
  403380:	add	sp, sp, #0x10
  403384:	br	x16
  403388:	add	sp, sp, #0x10
  40338c:	ret
  403390:	ret
  403394:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  403398:	add	x1, x0, #0x508
  40339c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4033a0:	add	x0, x0, #0x508
  4033a4:	sub	x1, x1, x0
  4033a8:	mov	x2, #0x2                   	// #2
  4033ac:	asr	x1, x1, #3
  4033b0:	sdiv	x1, x1, x2
  4033b4:	cbz	x1, 4033e0 <wcrtomb@plt+0x560>
  4033b8:	sub	sp, sp, #0x10
  4033bc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4033c0:	ldr	x2, [x2, #3872]
  4033c4:	str	x2, [sp, #8]
  4033c8:	cbz	x2, 4033d8 <wcrtomb@plt+0x558>
  4033cc:	mov	x16, x2
  4033d0:	add	sp, sp, #0x10
  4033d4:	br	x16
  4033d8:	add	sp, sp, #0x10
  4033dc:	ret
  4033e0:	ret
  4033e4:	stp	x29, x30, [sp, #-32]!
  4033e8:	mov	x29, sp
  4033ec:	str	x19, [sp, #16]
  4033f0:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  4033f4:	ldrb	w0, [x19, #1344]
  4033f8:	cbnz	w0, 403408 <wcrtomb@plt+0x588>
  4033fc:	bl	403350 <wcrtomb@plt+0x4d0>
  403400:	mov	w0, #0x1                   	// #1
  403404:	strb	w0, [x19, #1344]
  403408:	ldr	x19, [sp, #16]
  40340c:	ldp	x29, x30, [sp], #32
  403410:	ret
  403414:	b	403394 <wcrtomb@plt+0x514>
  403418:	stp	x29, x30, [sp, #-48]!
  40341c:	mov	x29, sp
  403420:	stp	x19, x20, [sp, #16]
  403424:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  403428:	add	x19, x19, #0x548
  40342c:	stp	x21, x22, [sp, #32]
  403430:	mov	x22, x0
  403434:	mov	x21, x1
  403438:	ldp	x1, x0, [x19, #24]
  40343c:	mov	w20, w2
  403440:	sub	x0, x0, x1
  403444:	cmp	x0, #0x1f
  403448:	b.hi	403458 <wcrtomb@plt+0x5d8>  // b.pmore
  40344c:	mov	x0, x19
  403450:	mov	x1, #0x20                  	// #32
  403454:	bl	40fff8 <_obstack_newchunk@@Base>
  403458:	ldp	x0, x4, [x19, #16]
  40345c:	add	x4, x4, #0x20
  403460:	cmp	x4, x0
  403464:	b.ne	403474 <wcrtomb@plt+0x5f4>  // b.any
  403468:	ldrb	w1, [x19, #80]
  40346c:	orr	w1, w1, #0x2
  403470:	strb	w1, [x19, #80]
  403474:	ldr	x3, [x19, #48]
  403478:	ldr	x1, [x19, #32]
  40347c:	add	x4, x4, x3
  403480:	bic	x3, x4, x3
  403484:	ldr	x4, [x19, #8]
  403488:	sub	x2, x3, x4
  40348c:	sub	x4, x1, x4
  403490:	cmp	x2, x4
  403494:	csel	x3, x3, x1, ls  // ls = plast
  403498:	stp	x3, x3, [x19, #16]
  40349c:	mov	w1, #0xffffffff            	// #-1
  4034a0:	stp	x22, x21, [x0]
  4034a4:	stp	w1, w20, [x0, #16]
  4034a8:	ldp	x19, x20, [sp, #16]
  4034ac:	ldp	x21, x22, [sp, #32]
  4034b0:	ldp	x29, x30, [sp], #48
  4034b4:	ret
  4034b8:	stp	x29, x30, [sp, #-64]!
  4034bc:	mov	x29, sp
  4034c0:	stp	x19, x20, [sp, #16]
  4034c4:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  4034c8:	add	x19, x19, #0x548
  4034cc:	stp	x21, x22, [sp, #32]
  4034d0:	mov	x21, x0
  4034d4:	mov	x22, x2
  4034d8:	str	x23, [sp, #48]
  4034dc:	mov	x23, x1
  4034e0:	ldr	x1, [x19, #24]
  4034e4:	mov	x20, x3
  4034e8:	ldr	x0, [x19, #32]
  4034ec:	sub	x0, x0, x1
  4034f0:	cmp	x0, #0x2f
  4034f4:	b.hi	403504 <wcrtomb@plt+0x684>  // b.pmore
  4034f8:	mov	x0, x19
  4034fc:	mov	x1, #0x30                  	// #48
  403500:	bl	40fff8 <_obstack_newchunk@@Base>
  403504:	ldp	x0, x5, [x19, #16]
  403508:	add	x5, x5, #0x30
  40350c:	cmp	x5, x0
  403510:	b.ne	403520 <wcrtomb@plt+0x6a0>  // b.any
  403514:	ldrb	w1, [x19, #80]
  403518:	orr	w1, w1, #0x2
  40351c:	strb	w1, [x19, #80]
  403520:	ldr	x4, [x19, #48]
  403524:	ldr	x3, [x19, #8]
  403528:	add	x5, x5, x4
  40352c:	ldr	x1, [x19, #32]
  403530:	bic	x4, x5, x4
  403534:	sub	x2, x4, x3
  403538:	sub	x3, x1, x3
  40353c:	cmp	x2, x3
  403540:	csel	x4, x4, x1, ls  // ls = plast
  403544:	stp	x4, x4, [x19, #16]
  403548:	stp	x23, x22, [x0]
  40354c:	cbz	x20, 403560 <wcrtomb@plt+0x6e0>
  403550:	ldp	x2, x3, [x20]
  403554:	stp	x2, x3, [x0, #16]
  403558:	ldr	x1, [x20, #16]
  40355c:	str	x1, [x0, #32]
  403560:	ldp	x19, x20, [sp, #16]
  403564:	ldr	x23, [sp, #48]
  403568:	str	x21, [x0, #40]
  40356c:	ldp	x21, x22, [sp, #32]
  403570:	ldp	x29, x30, [sp], #64
  403574:	ret
  403578:	cmn	w0, #0x1
  40357c:	b.eq	4035e4 <wcrtomb@plt+0x764>  // b.none
  403580:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  403584:	cmp	w0, #0xa
  403588:	add	x1, x1, #0x548
  40358c:	b.ne	4035a0 <wcrtomb@plt+0x720>  // b.any
  403590:	ldr	x2, [x1, #96]
  403594:	cbz	x2, 4035a0 <wcrtomb@plt+0x720>
  403598:	sub	x2, x2, #0x1
  40359c:	str	x2, [x1, #96]
  4035a0:	ldr	x2, [x1, #120]
  4035a4:	add	x3, x1, #0x70
  4035a8:	cbz	x2, 4035e8 <wcrtomb@plt+0x768>
  4035ac:	ldr	x1, [x1, #112]
  4035b0:	cmp	x2, x1
  4035b4:	b.hi	4035d0 <wcrtomb@plt+0x750>  // b.pmore
  4035b8:	stp	x29, x30, [sp, #-16]!
  4035bc:	mov	w1, w0
  4035c0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4035c4:	mov	x29, sp
  4035c8:	add	x0, x0, #0xf28
  4035cc:	bl	408a48 <wcrtomb@plt+0x5bc8>
  4035d0:	sub	x1, x2, #0x1
  4035d4:	str	x1, [x3, #8]
  4035d8:	ldurb	w1, [x2, #-1]
  4035dc:	cmp	w1, w0
  4035e0:	b.ne	4035b8 <wcrtomb@plt+0x738>  // b.any
  4035e4:	ret
  4035e8:	ldr	x1, [x3, #24]
  4035ec:	b	402c30 <ungetc@plt>
  4035f0:	stp	x29, x30, [sp, #-32]!
  4035f4:	mov	x29, sp
  4035f8:	stp	x19, x20, [sp, #16]
  4035fc:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  403600:	add	x19, x19, #0x548
  403604:	add	x0, x19, #0x70
  403608:	ldr	x1, [x0, #8]
  40360c:	cbz	x1, 403650 <wcrtomb@plt+0x7d0>
  403610:	ldr	x2, [x0, #16]
  403614:	cmp	x1, x2
  403618:	b.cc	40362c <wcrtomb@plt+0x7ac>  // b.lo, b.ul, b.last
  40361c:	mov	w0, #0xffffffff            	// #-1
  403620:	ldp	x19, x20, [sp, #16]
  403624:	ldp	x29, x30, [sp], #32
  403628:	ret
  40362c:	add	x2, x1, #0x1
  403630:	str	x2, [x0, #8]
  403634:	ldrb	w0, [x1]
  403638:	cmp	w0, #0xa
  40363c:	b.ne	403620 <wcrtomb@plt+0x7a0>  // b.any
  403640:	ldr	x1, [x19, #96]
  403644:	add	x1, x1, #0x1
  403648:	str	x1, [x19, #96]
  40364c:	b	403620 <wcrtomb@plt+0x7a0>
  403650:	ldr	x20, [x0, #24]
  403654:	cbz	x20, 40361c <wcrtomb@plt+0x79c>
  403658:	mov	x0, x20
  40365c:	bl	402c70 <feof_unlocked@plt>
  403660:	cbnz	w0, 40361c <wcrtomb@plt+0x79c>
  403664:	mov	x0, x20
  403668:	bl	402af0 <getc_unlocked@plt>
  40366c:	b	403638 <wcrtomb@plt+0x7b8>
  403670:	stp	x29, x30, [sp, #-32]!
  403674:	mov	x29, sp
  403678:	str	x19, [sp, #16]
  40367c:	bl	4035f0 <wcrtomb@plt+0x770>
  403680:	mov	w19, w0
  403684:	bl	402c00 <__ctype_b_loc@plt>
  403688:	ldr	x0, [x0]
  40368c:	ldrh	w0, [x0, w19, sxtw #1]
  403690:	tbnz	w0, #0, 40367c <wcrtomb@plt+0x7fc>
  403694:	mov	w0, w19
  403698:	ldr	x19, [sp, #16]
  40369c:	ldp	x29, x30, [sp], #32
  4036a0:	ret
  4036a4:	stp	x29, x30, [sp, #-48]!
  4036a8:	mov	x29, sp
  4036ac:	stp	x19, x20, [sp, #16]
  4036b0:	sxtw	x19, w0
  4036b4:	mov	x20, #0x0                   	// #0
  4036b8:	stp	x21, x22, [sp, #32]
  4036bc:	bl	402c00 <__ctype_b_loc@plt>
  4036c0:	mov	x21, x0
  4036c4:	mov	x22, #0xa                   	// #10
  4036c8:	ldr	x0, [x21]
  4036cc:	ubfiz	x1, x19, #1, #8
  4036d0:	ldrh	w0, [x0, x1]
  4036d4:	tbnz	w0, #11, 4036f4 <wcrtomb@plt+0x874>
  4036d8:	mov	w0, w19
  4036dc:	bl	403578 <wcrtomb@plt+0x6f8>
  4036e0:	mov	x0, x20
  4036e4:	ldp	x19, x20, [sp, #16]
  4036e8:	ldp	x21, x22, [sp, #32]
  4036ec:	ldp	x29, x30, [sp], #48
  4036f0:	ret
  4036f4:	madd	x19, x20, x22, x19
  4036f8:	bl	4035f0 <wcrtomb@plt+0x770>
  4036fc:	sub	x20, x19, #0x30
  403700:	sxtw	x19, w0
  403704:	b	4036c8 <wcrtomb@plt+0x848>
  403708:	stp	x29, x30, [sp, #-48]!
  40370c:	mov	x29, sp
  403710:	stp	x19, x20, [sp, #16]
  403714:	str	x21, [sp, #32]
  403718:	bl	409394 <wcrtomb@plt+0x6514>
  40371c:	mov	x20, x0
  403720:	bl	403670 <wcrtomb@plt+0x7f0>
  403724:	mov	w19, w0
  403728:	mov	w21, #0x7d                  	// #125
  40372c:	cmp	w19, #0xa
  403730:	ccmn	w19, #0x1, #0x4, ne  // ne = any
  403734:	b.eq	40375c <wcrtomb@plt+0x8dc>  // b.none
  403738:	bl	402c00 <__ctype_b_loc@plt>
  40373c:	ldr	x0, [x0]
  403740:	ldrh	w0, [x0, w19, sxtw #1]
  403744:	tbnz	w0, #0, 40375c <wcrtomb@plt+0x8dc>
  403748:	cmp	w19, #0x3b
  40374c:	ccmp	w19, w21, #0x4, ne  // ne = any
  403750:	b.eq	40375c <wcrtomb@plt+0x8dc>  // b.none
  403754:	cmp	w19, #0x23
  403758:	b.ne	40379c <wcrtomb@plt+0x91c>  // b.any
  40375c:	mov	w0, w19
  403760:	bl	403578 <wcrtomb@plt+0x6f8>
  403764:	mov	w1, #0x0                   	// #0
  403768:	mov	x0, x20
  40376c:	bl	40944c <wcrtomb@plt+0x65cc>
  403770:	mov	x0, x20
  403774:	bl	4093d4 <wcrtomb@plt+0x6554>
  403778:	bl	40fdb0 <wcrtomb@plt+0xcf30>
  40377c:	mov	x19, x0
  403780:	mov	x0, x20
  403784:	bl	4094a4 <wcrtomb@plt+0x6624>
  403788:	mov	x0, x19
  40378c:	ldp	x19, x20, [sp, #16]
  403790:	ldr	x21, [sp, #32]
  403794:	ldp	x29, x30, [sp], #48
  403798:	ret
  40379c:	mov	w1, w19
  4037a0:	mov	x0, x20
  4037a4:	bl	40944c <wcrtomb@plt+0x65cc>
  4037a8:	bl	4035f0 <wcrtomb@plt+0x770>
  4037ac:	mov	w19, w0
  4037b0:	b	40372c <wcrtomb@plt+0x8ac>
  4037b4:	stp	x29, x30, [sp, #-64]!
  4037b8:	mov	w2, #0x5                   	// #5
  4037bc:	mov	x29, sp
  4037c0:	stp	x19, x20, [sp, #16]
  4037c4:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  4037c8:	add	x19, x19, #0x548
  4037cc:	mov	x20, x0
  4037d0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4037d4:	stp	x21, x22, [sp, #32]
  4037d8:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x21e54>
  4037dc:	ldr	x21, [x0, #1296]
  4037e0:	str	x23, [sp, #48]
  4037e4:	ldr	x0, [x19, #88]
  4037e8:	add	x23, x19, #0x58
  4037ec:	cbz	x0, 403828 <wcrtomb@plt+0x9a8>
  4037f0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4037f4:	mov	x0, #0x0                   	// #0
  4037f8:	add	x1, x1, #0xf55
  4037fc:	bl	402d60 <dcgettext@plt>
  403800:	ldr	x5, [x23, #8]
  403804:	mov	x6, x20
  403808:	ldr	x4, [x19, #88]
  40380c:	mov	x2, x0
  403810:	ldr	x3, [x22, #1968]
  403814:	mov	w1, #0x1                   	// #1
  403818:	mov	x0, x21
  40381c:	bl	402be0 <__fprintf_chk@plt>
  403820:	mov	w0, #0x1                   	// #1
  403824:	bl	4027d0 <exit@plt>
  403828:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  40382c:	mov	x0, #0x0                   	// #0
  403830:	add	x1, x1, #0xf6f
  403834:	bl	402d60 <dcgettext@plt>
  403838:	ldp	x1, x5, [x19, #112]
  40383c:	mov	x6, x20
  403840:	ldr	x4, [x23, #16]
  403844:	sub	x5, x5, x1
  403848:	b	40380c <wcrtomb@plt+0x98c>
  40384c:	stp	x29, x30, [sp, #-32]!
  403850:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  403854:	mov	x29, sp
  403858:	ldrb	w0, [x0, #1932]
  40385c:	str	x19, [sp, #16]
  403860:	cbz	w0, 403880 <wcrtomb@plt+0xa00>
  403864:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  403868:	add	x1, x1, #0xe4
  40386c:	add	x1, x1, #0x334
  403870:	mov	w2, #0x5                   	// #5
  403874:	mov	x0, #0x0                   	// #0
  403878:	bl	402d60 <dcgettext@plt>
  40387c:	bl	4037b4 <wcrtomb@plt+0x934>
  403880:	bl	409394 <wcrtomb@plt+0x6514>
  403884:	mov	x19, x0
  403888:	bl	403670 <wcrtomb@plt+0x7f0>
  40388c:	cmp	w0, #0xa
  403890:	mov	w1, w0
  403894:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  403898:	b.ne	4038b8 <wcrtomb@plt+0xa38>  // b.any
  40389c:	mov	x0, x19
  4038a0:	mov	w1, #0x0                   	// #0
  4038a4:	bl	40944c <wcrtomb@plt+0x65cc>
  4038a8:	mov	x0, x19
  4038ac:	ldr	x19, [sp, #16]
  4038b0:	ldp	x29, x30, [sp], #32
  4038b4:	ret
  4038b8:	mov	x0, x19
  4038bc:	bl	40944c <wcrtomb@plt+0x65cc>
  4038c0:	bl	4035f0 <wcrtomb@plt+0x770>
  4038c4:	b	40388c <wcrtomb@plt+0xa0c>
  4038c8:	stp	x29, x30, [sp, #-80]!
  4038cc:	mov	x29, sp
  4038d0:	stp	x19, x20, [sp, #16]
  4038d4:	stp	x21, x22, [sp, #32]
  4038d8:	mov	x21, x0
  4038dc:	stp	x23, x24, [sp, #48]
  4038e0:	mov	x23, x1
  4038e4:	mov	w24, w2
  4038e8:	str	x25, [sp, #64]
  4038ec:	bl	40384c <wcrtomb@plt+0x9cc>
  4038f0:	mov	x22, x0
  4038f4:	bl	4093d4 <wcrtomb@plt+0x6554>
  4038f8:	mov	x25, x0
  4038fc:	ldrb	w0, [x0]
  403900:	cbnz	w0, 403920 <wcrtomb@plt+0xaa0>
  403904:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  403908:	add	x1, x1, #0xe4
  40390c:	add	x1, x1, #0x35c
  403910:	mov	w2, #0x5                   	// #5
  403914:	mov	x0, #0x0                   	// #0
  403918:	bl	402d60 <dcgettext@plt>
  40391c:	bl	4037b4 <wcrtomb@plt+0x934>
  403920:	ldr	x19, [x21]
  403924:	cbnz	x19, 4039d8 <wcrtomb@plt+0xb58>
  403928:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40392c:	ldr	w0, [x0, #2296]
  403930:	cbz	w0, 4039f0 <wcrtomb@plt+0xb70>
  403934:	cbnz	x19, 4039cc <wcrtomb@plt+0xb4c>
  403938:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  40393c:	add	x20, x20, #0x548
  403940:	ldp	x1, x0, [x20, #24]
  403944:	sub	x0, x0, x1
  403948:	cmp	x0, #0x1f
  40394c:	b.hi	40395c <wcrtomb@plt+0xadc>  // b.pmore
  403950:	mov	x0, x20
  403954:	mov	x1, #0x20                  	// #32
  403958:	bl	40fff8 <_obstack_newchunk@@Base>
  40395c:	ldp	x19, x0, [x20, #16]
  403960:	add	x0, x0, #0x20
  403964:	cmp	x0, x19
  403968:	b.ne	403978 <wcrtomb@plt+0xaf8>  // b.any
  40396c:	ldrb	w1, [x20, #80]
  403970:	orr	w1, w1, #0x2
  403974:	strb	w1, [x20, #80]
  403978:	ldr	x3, [x20, #48]
  40397c:	ldr	x1, [x20, #32]
  403980:	add	x0, x0, x3
  403984:	bic	x3, x0, x3
  403988:	ldr	x0, [x20, #8]
  40398c:	sub	x2, x3, x0
  403990:	sub	x0, x1, x0
  403994:	cmp	x2, x0
  403998:	mov	x0, x25
  40399c:	csel	x3, x3, x1, ls  // ls = plast
  4039a0:	stp	x3, x3, [x20, #16]
  4039a4:	bl	40fdb0 <wcrtomb@plt+0xcf30>
  4039a8:	str	x0, [x19]
  4039ac:	mov	w2, w24
  4039b0:	mov	x1, x23
  4039b4:	bl	408ba8 <wcrtomb@plt+0x5d28>
  4039b8:	str	x0, [x19, #16]
  4039bc:	ldr	x0, [x21]
  4039c0:	strb	wzr, [x19, #8]
  4039c4:	str	x0, [x19, #24]
  4039c8:	str	x19, [x21]
  4039cc:	mov	x0, x22
  4039d0:	bl	4094a4 <wcrtomb@plt+0x6624>
  4039d4:	b	403a50 <wcrtomb@plt+0xbd0>
  4039d8:	ldr	x0, [x19]
  4039dc:	mov	x1, x25
  4039e0:	bl	402bf0 <strcmp@plt>
  4039e4:	cbz	w0, 403928 <wcrtomb@plt+0xaa8>
  4039e8:	ldr	x19, [x19, #24]
  4039ec:	b	403924 <wcrtomb@plt+0xaa4>
  4039f0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4039f4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4039f8:	add	x0, x0, #0x548
  4039fc:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  403a00:	ldr	x1, [x1, #1328]
  403a04:	add	x20, x20, #0x3b8
  403a08:	str	x1, [x0, #144]
  403a0c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  403a10:	ldr	x1, [x1, #1320]
  403a14:	str	x1, [x0, #152]
  403a18:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  403a1c:	ldr	x1, [x1, #1296]
  403a20:	str	x1, [x0, #160]
  403a24:	ldr	x0, [x20]
  403a28:	cbz	x0, 403934 <wcrtomb@plt+0xab4>
  403a2c:	mov	x1, x25
  403a30:	bl	402bf0 <strcmp@plt>
  403a34:	cbnz	w0, 403a6c <wcrtomb@plt+0xbec>
  403a38:	ldr	x0, [x20, #32]
  403a3c:	mov	x19, x20
  403a40:	ldr	x0, [x0]
  403a44:	str	x0, [x20, #16]
  403a48:	mov	x0, x22
  403a4c:	bl	4094a4 <wcrtomb@plt+0x6624>
  403a50:	mov	x0, x19
  403a54:	ldp	x19, x20, [sp, #16]
  403a58:	ldp	x21, x22, [sp, #32]
  403a5c:	ldp	x23, x24, [sp, #48]
  403a60:	ldr	x25, [sp, #64]
  403a64:	ldp	x29, x30, [sp], #80
  403a68:	ret
  403a6c:	add	x20, x20, #0x28
  403a70:	b	403a24 <wcrtomb@plt+0xba4>
  403a74:	stp	x29, x30, [sp, #-112]!
  403a78:	mov	x29, sp
  403a7c:	stp	x23, x24, [sp, #48]
  403a80:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x21e54>
  403a84:	stp	x19, x20, [sp, #16]
  403a88:	stp	x21, x22, [sp, #32]
  403a8c:	mov	w22, w1
  403a90:	ldr	w1, [x23, #2292]
  403a94:	stp	x25, x26, [sp, #64]
  403a98:	mov	w21, w0
  403a9c:	cmp	w1, #0x1
  403aa0:	str	x27, [sp, #80]
  403aa4:	str	xzr, [sp, #104]
  403aa8:	b.eq	403ac8 <wcrtomb@plt+0xc48>  // b.none
  403aac:	add	x1, sp, #0x68
  403ab0:	bl	407e0c <wcrtomb@plt+0x4f8c>
  403ab4:	cbz	w0, 403ac8 <wcrtomb@plt+0xc48>
  403ab8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  403abc:	add	x0, x0, #0xe4
  403ac0:	add	x0, x0, #0x260
  403ac4:	bl	4037b4 <wcrtomb@plt+0x934>
  403ac8:	str	xzr, [sp, #104]
  403acc:	bl	409394 <wcrtomb@plt+0x6514>
  403ad0:	mov	x20, x0
  403ad4:	mov	w26, #0x1                   	// #1
  403ad8:	bl	4035f0 <wcrtomb@plt+0x770>
  403adc:	mov	w19, w0
  403ae0:	cmn	w0, #0x1
  403ae4:	b.eq	403af8 <wcrtomb@plt+0xc78>  // b.none
  403ae8:	cmp	w0, #0xa
  403aec:	b.ne	403b08 <wcrtomb@plt+0xc88>  // b.any
  403af0:	mov	w0, #0xa                   	// #10
  403af4:	bl	403578 <wcrtomb@plt+0x6f8>
  403af8:	mov	x0, x20
  403afc:	mov	x20, #0x0                   	// #0
  403b00:	bl	4094a4 <wcrtomb@plt+0x6624>
  403b04:	b	403b20 <wcrtomb@plt+0xca0>
  403b08:	ldr	w1, [x23, #2292]
  403b0c:	add	x25, x23, #0x8f4
  403b10:	cmp	w1, #0x1
  403b14:	b.ne	403b40 <wcrtomb@plt+0xcc0>  // b.any
  403b18:	cmp	w21, w19
  403b1c:	b.ne	403b5c <wcrtomb@plt+0xcdc>  // b.any
  403b20:	mov	x0, x20
  403b24:	ldp	x19, x20, [sp, #16]
  403b28:	ldp	x21, x22, [sp, #32]
  403b2c:	ldp	x23, x24, [sp, #48]
  403b30:	ldp	x25, x26, [sp, #64]
  403b34:	ldr	x27, [sp, #80]
  403b38:	ldp	x29, x30, [sp], #112
  403b3c:	ret
  403b40:	add	x1, sp, #0x68
  403b44:	bl	407e0c <wcrtomb@plt+0x4f8c>
  403b48:	cbz	w0, 403b18 <wcrtomb@plt+0xc98>
  403b4c:	mov	w1, w19
  403b50:	mov	x0, x20
  403b54:	bl	40944c <wcrtomb@plt+0x65cc>
  403b58:	b	403ad8 <wcrtomb@plt+0xc58>
  403b5c:	cmp	w19, #0x5c
  403b60:	b.ne	403bb8 <wcrtomb@plt+0xd38>  // b.any
  403b64:	bl	4035f0 <wcrtomb@plt+0x770>
  403b68:	mov	w19, w0
  403b6c:	cmn	w0, #0x1
  403b70:	b.eq	403af8 <wcrtomb@plt+0xc78>  // b.none
  403b74:	cmp	w0, #0x6e
  403b78:	and	w0, w22, #0x1
  403b7c:	csel	w0, w0, wzr, eq  // eq = none
  403b80:	cbnz	w0, 403ce4 <wcrtomb@plt+0xe64>
  403b84:	cmp	w19, #0xa
  403b88:	b.eq	403b4c <wcrtomb@plt+0xccc>  // b.none
  403b8c:	cmp	w21, w19
  403b90:	b.ne	403ba8 <wcrtomb@plt+0xd28>  // b.any
  403b94:	cmp	w21, #0x26
  403b98:	eor	w0, w22, #0x1
  403b9c:	cset	w1, eq  // eq = none
  403ba0:	tst	w0, w1
  403ba4:	b.eq	403b4c <wcrtomb@plt+0xccc>  // b.none
  403ba8:	mov	x0, x20
  403bac:	mov	w1, #0x5c                  	// #92
  403bb0:	bl	40944c <wcrtomb@plt+0x65cc>
  403bb4:	b	403b4c <wcrtomb@plt+0xccc>
  403bb8:	cmp	w19, #0x5b
  403bbc:	and	w0, w22, #0x1
  403bc0:	csel	w0, w0, wzr, eq  // eq = none
  403bc4:	cbz	w0, 403b4c <wcrtomb@plt+0xccc>
  403bc8:	mov	w1, #0x5b                  	// #91
  403bcc:	mov	x0, x20
  403bd0:	bl	40944c <wcrtomb@plt+0x65cc>
  403bd4:	bl	4035f0 <wcrtomb@plt+0x770>
  403bd8:	mov	w19, w0
  403bdc:	cmp	w0, #0x5e
  403be0:	b.ne	403bf8 <wcrtomb@plt+0xd78>  // b.any
  403be4:	mov	w1, w0
  403be8:	mov	x0, x20
  403bec:	bl	40944c <wcrtomb@plt+0x65cc>
  403bf0:	bl	4035f0 <wcrtomb@plt+0x770>
  403bf4:	mov	w19, w0
  403bf8:	cmp	w19, #0x5d
  403bfc:	b.ne	403c14 <wcrtomb@plt+0xd94>  // b.any
  403c00:	mov	w1, w19
  403c04:	mov	x0, x20
  403c08:	bl	40944c <wcrtomb@plt+0x65cc>
  403c0c:	bl	4035f0 <wcrtomb@plt+0x770>
  403c10:	mov	w19, w0
  403c14:	mov	w27, #0x0                   	// #0
  403c18:	ldr	w0, [x25]
  403c1c:	cmp	w0, #0x1
  403c20:	b.eq	403cf4 <wcrtomb@plt+0xe74>  // b.none
  403c24:	add	x1, sp, #0x68
  403c28:	mov	w0, w19
  403c2c:	bl	407e0c <wcrtomb@plt+0x4f8c>
  403c30:	cmp	w19, #0x3d
  403c34:	b.eq	403c94 <wcrtomb@plt+0xe14>  // b.none
  403c38:	b.gt	403c6c <wcrtomb@plt+0xdec>
  403c3c:	cmp	w19, #0xa
  403c40:	b.eq	403af0 <wcrtomb@plt+0xc70>  // b.none
  403c44:	b.gt	403c54 <wcrtomb@plt+0xdd4>
  403c48:	cmn	w19, #0x1
  403c4c:	b.eq	403af8 <wcrtomb@plt+0xc78>  // b.none
  403c50:	b	403c64 <wcrtomb@plt+0xde4>
  403c54:	cmp	w19, #0x2e
  403c58:	b.eq	403c94 <wcrtomb@plt+0xe14>  // b.none
  403c5c:	cmp	w19, #0x3a
  403c60:	b.eq	403c94 <wcrtomb@plt+0xe14>  // b.none
  403c64:	and	w27, w27, #0xfffffffe
  403c68:	b	403cc0 <wcrtomb@plt+0xe40>
  403c6c:	cmp	w19, #0x5b
  403c70:	b.eq	403cb4 <wcrtomb@plt+0xe34>  // b.none
  403c74:	cmp	w19, #0x5d
  403c78:	b.ne	403c64 <wcrtomb@plt+0xde4>  // b.any
  403c7c:	cbnz	w0, 403cc0 <wcrtomb@plt+0xe40>
  403c80:	cmp	w27, #0x1
  403c84:	b.le	403cec <wcrtomb@plt+0xe6c>
  403c88:	cmp	w27, #0x3
  403c8c:	csel	w27, w27, wzr, ne  // ne = any
  403c90:	b	403c64 <wcrtomb@plt+0xde4>
  403c94:	cbnz	w0, 403cc0 <wcrtomb@plt+0xe40>
  403c98:	cmp	w27, #0x1
  403c9c:	b.eq	403cd8 <wcrtomb@plt+0xe58>  // b.none
  403ca0:	cmp	w27, #0x2
  403ca4:	ccmp	w19, w24, #0x0, eq  // eq = none
  403ca8:	b.ne	403c64 <wcrtomb@plt+0xde4>  // b.any
  403cac:	mov	w27, #0x3                   	// #3
  403cb0:	b	403cc0 <wcrtomb@plt+0xe40>
  403cb4:	cbnz	w0, 403cc0 <wcrtomb@plt+0xe40>
  403cb8:	cmp	w27, #0x0
  403cbc:	csel	w27, w27, w26, ne  // ne = any
  403cc0:	mov	w1, w19
  403cc4:	mov	x0, x20
  403cc8:	bl	40944c <wcrtomb@plt+0x65cc>
  403ccc:	bl	4035f0 <wcrtomb@plt+0x770>
  403cd0:	mov	w19, w0
  403cd4:	b	403c18 <wcrtomb@plt+0xd98>
  403cd8:	mov	w24, w19
  403cdc:	mov	w27, #0x2                   	// #2
  403ce0:	b	403cc0 <wcrtomb@plt+0xe40>
  403ce4:	mov	w19, #0xa                   	// #10
  403ce8:	b	403b4c <wcrtomb@plt+0xccc>
  403cec:	mov	w19, #0x5d                  	// #93
  403cf0:	b	403b4c <wcrtomb@plt+0xccc>
  403cf4:	cmp	w19, #0x3d
  403cf8:	b.eq	403c98 <wcrtomb@plt+0xe18>  // b.none
  403cfc:	b.gt	403d20 <wcrtomb@plt+0xea0>
  403d00:	cmp	w19, #0xa
  403d04:	b.eq	403af0 <wcrtomb@plt+0xc70>  // b.none
  403d08:	b.le	403c48 <wcrtomb@plt+0xdc8>
  403d0c:	cmp	w19, #0x2e
  403d10:	b.eq	403c98 <wcrtomb@plt+0xe18>  // b.none
  403d14:	cmp	w19, #0x3a
  403d18:	b.eq	403c98 <wcrtomb@plt+0xe18>  // b.none
  403d1c:	b	403c64 <wcrtomb@plt+0xde4>
  403d20:	cmp	w19, #0x5b
  403d24:	b.eq	403cb8 <wcrtomb@plt+0xe38>  // b.none
  403d28:	cmp	w19, #0x5d
  403d2c:	b.eq	403c80 <wcrtomb@plt+0xe00>  // b.none
  403d30:	b	403c64 <wcrtomb@plt+0xde4>
  403d34:	stp	x29, x30, [sp, #-64]!
  403d38:	cmp	w1, #0x2f
  403d3c:	mov	x29, sp
  403d40:	stp	x19, x20, [sp, #16]
  403d44:	mov	x19, x0
  403d48:	mov	w20, w1
  403d4c:	stp	x21, x22, [sp, #32]
  403d50:	cset	w21, eq  // eq = none
  403d54:	cmp	w1, #0x5c
  403d58:	str	x23, [sp, #48]
  403d5c:	csinc	w21, w21, wzr, ne  // ne = any
  403d60:	str	wzr, [x0]
  403d64:	str	xzr, [x0, #16]
  403d68:	mov	x0, #0xffffffffffffffff    	// #-1
  403d6c:	str	x0, [x19, #8]
  403d70:	str	xzr, [x19, #24]
  403d74:	cbz	w21, 403e2c <wcrtomb@plt+0xfac>
  403d78:	mov	w0, #0x1                   	// #1
  403d7c:	str	w0, [x19]
  403d80:	b.ne	403d8c <wcrtomb@plt+0xf0c>  // b.any
  403d84:	bl	4035f0 <wcrtomb@plt+0x770>
  403d88:	mov	w20, w0
  403d8c:	mov	w0, w20
  403d90:	mov	w1, #0x1                   	// #1
  403d94:	mov	w22, #0x0                   	// #0
  403d98:	bl	403a74 <wcrtomb@plt+0xbf4>
  403d9c:	mov	x20, x0
  403da0:	cbz	x0, 403e04 <wcrtomb@plt+0xf84>
  403da4:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x21e54>
  403da8:	add	x23, x23, #0x8f8
  403dac:	bl	403670 <wcrtomb@plt+0x7f0>
  403db0:	ldr	w1, [x23]
  403db4:	cmp	w1, #0x2
  403db8:	b.eq	403dcc <wcrtomb@plt+0xf4c>  // b.none
  403dbc:	cmp	w0, #0x49
  403dc0:	b.eq	403e1c <wcrtomb@plt+0xf9c>  // b.none
  403dc4:	cmp	w0, #0x4d
  403dc8:	b.eq	403e24 <wcrtomb@plt+0xfa4>  // b.none
  403dcc:	bl	403578 <wcrtomb@plt+0x6f8>
  403dd0:	mov	w1, w22
  403dd4:	mov	x0, x20
  403dd8:	mov	w2, #0x0                   	// #0
  403ddc:	bl	408120 <wcrtomb@plt+0x52a0>
  403de0:	str	x0, [x19, #24]
  403de4:	mov	x0, x20
  403de8:	bl	4094a4 <wcrtomb@plt+0x6624>
  403dec:	mov	w0, w21
  403df0:	ldp	x19, x20, [sp, #16]
  403df4:	ldp	x21, x22, [sp, #32]
  403df8:	ldr	x23, [sp, #48]
  403dfc:	ldp	x29, x30, [sp], #64
  403e00:	ret
  403e04:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  403e08:	add	x1, x1, #0xe4
  403e0c:	add	x1, x1, #0x133
  403e10:	mov	w2, #0x5                   	// #5
  403e14:	bl	402d60 <dcgettext@plt>
  403e18:	bl	4037b4 <wcrtomb@plt+0x934>
  403e1c:	orr	w22, w22, #0x2
  403e20:	b	403dac <wcrtomb@plt+0xf2c>
  403e24:	orr	w22, w22, #0x4
  403e28:	b	403dac <wcrtomb@plt+0xf2c>
  403e2c:	bl	402c00 <__ctype_b_loc@plt>
  403e30:	ldr	x0, [x0]
  403e34:	ubfiz	x1, x20, #1, #8
  403e38:	ldrh	w0, [x0, x1]
  403e3c:	tbz	w0, #11, 403e98 <wcrtomb@plt+0x1018>
  403e40:	mov	w0, w20
  403e44:	bl	4036a4 <wcrtomb@plt+0x824>
  403e48:	str	x0, [x19, #8]
  403e4c:	mov	w0, #0x2                   	// #2
  403e50:	str	w0, [x19]
  403e54:	bl	403670 <wcrtomb@plt+0x7f0>
  403e58:	cmp	w0, #0x7e
  403e5c:	b.ne	403e70 <wcrtomb@plt+0xff0>  // b.any
  403e60:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  403e64:	ldr	w1, [x1, #2296]
  403e68:	cmp	w1, #0x2
  403e6c:	b.ne	403e7c <wcrtomb@plt+0xffc>  // b.any
  403e70:	bl	403578 <wcrtomb@plt+0x6f8>
  403e74:	mov	w21, #0x1                   	// #1
  403e78:	b	403dec <wcrtomb@plt+0xf6c>
  403e7c:	bl	403670 <wcrtomb@plt+0x7f0>
  403e80:	bl	4036a4 <wcrtomb@plt+0x824>
  403e84:	cbz	x0, 403e74 <wcrtomb@plt+0xff4>
  403e88:	str	x0, [x19, #16]
  403e8c:	mov	w0, #0x3                   	// #3
  403e90:	str	w0, [x19]
  403e94:	b	403e74 <wcrtomb@plt+0xff4>
  403e98:	cmp	w20, #0x2b
  403e9c:	cset	w22, eq  // eq = none
  403ea0:	cmp	w20, #0x7e
  403ea4:	csinc	w22, w22, wzr, ne  // ne = any
  403ea8:	cbz	w22, 403eec <wcrtomb@plt+0x106c>
  403eac:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  403eb0:	ldr	w0, [x0, #2296]
  403eb4:	cmp	w0, #0x2
  403eb8:	b.eq	403eec <wcrtomb@plt+0x106c>  // b.none
  403ebc:	bl	403670 <wcrtomb@plt+0x7f0>
  403ec0:	bl	4036a4 <wcrtomb@plt+0x824>
  403ec4:	str	x0, [x19, #16]
  403ec8:	cbz	x0, 403e74 <wcrtomb@plt+0xff4>
  403ecc:	cmp	w20, #0x2b
  403ed0:	b.ne	403ee4 <wcrtomb@plt+0x1064>  // b.any
  403ed4:	mov	w0, #0x4                   	// #4
  403ed8:	mov	w21, w22
  403edc:	str	w0, [x19]
  403ee0:	b	403dec <wcrtomb@plt+0xf6c>
  403ee4:	mov	w0, #0x5                   	// #5
  403ee8:	b	403ed8 <wcrtomb@plt+0x1058>
  403eec:	cmp	w20, #0x24
  403ef0:	b.ne	403dec <wcrtomb@plt+0xf6c>  // b.any
  403ef4:	mov	w0, #0x6                   	// #6
  403ef8:	b	403e90 <wcrtomb@plt+0x1010>
  403efc:	stp	x29, x30, [sp, #-16]!
  403f00:	mov	x29, sp
  403f04:	bl	403670 <wcrtomb@plt+0x7f0>
  403f08:	cmp	w0, #0x7d
  403f0c:	mov	w2, #0x23                  	// #35
  403f10:	ccmp	w0, w2, #0x4, ne  // ne = any
  403f14:	b.ne	403f20 <wcrtomb@plt+0x10a0>  // b.any
  403f18:	ldp	x29, x30, [sp], #16
  403f1c:	b	403578 <wcrtomb@plt+0x6f8>
  403f20:	add	w1, w0, #0x1
  403f24:	cmp	w1, #0x3c
  403f28:	b.hi	403f3c <wcrtomb@plt+0x10bc>  // b.pmore
  403f2c:	mov	x0, #0x801                 	// #2049
  403f30:	movk	x0, #0x1000, lsl #48
  403f34:	lsr	x1, x0, x1
  403f38:	tbnz	w1, #0, 403f58 <wcrtomb@plt+0x10d8>
  403f3c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  403f40:	add	x1, x1, #0xe4
  403f44:	add	x1, x1, #0x65
  403f48:	mov	w2, #0x5                   	// #5
  403f4c:	mov	x0, #0x0                   	// #0
  403f50:	bl	402d60 <dcgettext@plt>
  403f54:	bl	4037b4 <wcrtomb@plt+0x934>
  403f58:	ldp	x29, x30, [sp], #16
  403f5c:	ret
  403f60:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  403f64:	add	x1, x1, #0xe4
  403f68:	stp	x29, x30, [sp, #-48]!
  403f6c:	add	x1, x1, #0x2d1
  403f70:	mov	w2, #0x5                   	// #5
  403f74:	mov	x29, sp
  403f78:	stp	x19, x20, [sp, #16]
  403f7c:	str	x21, [sp, #32]
  403f80:	and	w21, w0, #0xff
  403f84:	mov	x0, #0x0                   	// #0
  403f88:	bl	402d60 <dcgettext@plt>
  403f8c:	mov	x20, x0
  403f90:	bl	402790 <strlen@plt>
  403f94:	bl	40fc04 <wcrtomb@plt+0xcd84>
  403f98:	mov	x19, x0
  403f9c:	mov	w4, w21
  403fa0:	mov	x3, x20
  403fa4:	mov	x2, #0xffffffffffffffff    	// #-1
  403fa8:	mov	w1, #0x1                   	// #1
  403fac:	bl	4027b0 <__sprintf_chk@plt>
  403fb0:	mov	x0, x19
  403fb4:	bl	4037b4 <wcrtomb@plt+0x934>
  403fb8:	stp	x29, x30, [sp, #-112]!
  403fbc:	mov	x29, sp
  403fc0:	stp	x21, x22, [sp, #32]
  403fc4:	adrp	x22, 41b000 <_obstack_memory_used@@Base+0xae54>
  403fc8:	add	x22, x22, #0xe4
  403fcc:	mov	w21, w2
  403fd0:	add	x22, x22, #0x381
  403fd4:	stp	x19, x20, [sp, #16]
  403fd8:	mov	x20, x0
  403fdc:	mov	x19, x0
  403fe0:	stp	x23, x24, [sp, #48]
  403fe4:	mov	x23, #0x400000000000        	// #70368744177664
  403fe8:	movk	x23, #0x2400, lsl #48
  403fec:	stp	x25, x26, [sp, #64]
  403ff0:	add	x26, x0, x1
  403ff4:	mov	w25, #0x0                   	// #0
  403ff8:	str	x27, [sp, #80]
  403ffc:	mov	x27, x0
  404000:	str	xzr, [sp, #104]
  404004:	cmp	x27, x26
  404008:	b.cc	40402c <wcrtomb@plt+0x11ac>  // b.lo, b.ul, b.last
  40400c:	sub	x0, x19, x20
  404010:	ldp	x19, x20, [sp, #16]
  404014:	ldp	x21, x22, [sp, #32]
  404018:	ldp	x23, x24, [sp, #48]
  40401c:	ldp	x25, x26, [sp, #64]
  404020:	ldr	x27, [sp, #80]
  404024:	ldp	x29, x30, [sp], #112
  404028:	ret
  40402c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404030:	ldr	w0, [x0, #2292]
  404034:	cmp	w0, #0x1
  404038:	b.eq	404098 <wcrtomb@plt+0x1218>  // b.none
  40403c:	add	x3, sp, #0x68
  404040:	sub	x2, x26, x27
  404044:	mov	x1, x27
  404048:	mov	x0, #0x0                   	// #0
  40404c:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  404050:	cmp	w0, #0x1
  404054:	b.eq	404098 <wcrtomb@plt+0x1218>  // b.none
  404058:	add	w1, w0, #0x2
  40405c:	cmp	w1, #0x1
  404060:	b.ls	404090 <wcrtomb@plt+0x1210>  // b.plast
  404064:	cmp	w0, #0x0
  404068:	csinc	w3, w0, wzr, ne  // ne = any
  40406c:	sxtw	x24, w3
  404070:	mov	x0, x19
  404074:	mov	x2, x24
  404078:	add	x19, x19, x24
  40407c:	add	x24, x27, x24
  404080:	mov	x1, x27
  404084:	bl	402760 <memmove@plt>
  404088:	mov	x27, x24
  40408c:	b	404004 <wcrtomb@plt+0x1184>
  404090:	mov	w3, #0x1                   	// #1
  404094:	b	40406c <wcrtomb@plt+0x11ec>
  404098:	ldrb	w0, [x27]
  40409c:	cmp	w0, #0x5c
  4040a0:	b.ne	404234 <wcrtomb@plt+0x13b4>  // b.any
  4040a4:	add	x2, x27, #0x1
  4040a8:	cmp	x2, x26
  4040ac:	b.cs	404234 <wcrtomb@plt+0x13b4>  // b.hs, b.nlast
  4040b0:	cbnz	w25, 404234 <wcrtomb@plt+0x13b4>
  4040b4:	ldrb	w0, [x27, #1]
  4040b8:	cmp	w0, #0xa
  4040bc:	b.eq	404158 <wcrtomb@plt+0x12d8>  // b.none
  4040c0:	sub	w3, w0, #0x61
  4040c4:	and	w1, w3, #0xff
  4040c8:	cmp	w1, #0x17
  4040cc:	b.hi	404220 <wcrtomb@plt+0x13a0>  // b.pmore
  4040d0:	cmp	w3, #0x17
  4040d4:	b.hi	404220 <wcrtomb@plt+0x13a0>  // b.pmore
  4040d8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4040dc:	add	x1, x1, #0xfe8
  4040e0:	ldrb	w1, [x1, w3, uxtw]
  4040e4:	adr	x3, 4040f0 <wcrtomb@plt+0x1270>
  4040e8:	add	x1, x3, w1, sxtb #2
  4040ec:	br	x1
  4040f0:	mov	w4, #0xa                   	// #10
  4040f4:	add	x27, x27, #0x2
  4040f8:	mov	w5, #0x0                   	// #0
  4040fc:	mov	x24, x27
  404100:	mov	w6, #0x1                   	// #1
  404104:	cmp	w6, #0xff
  404108:	ccmp	x26, x24, #0x0, le
  40410c:	b.hi	404188 <wcrtomb@plt+0x1308>  // b.pmore
  404110:	cmp	x27, x24
  404114:	b.eq	40411c <wcrtomb@plt+0x129c>  // b.none
  404118:	and	w0, w5, #0xff
  40411c:	cmp	w21, #0x1
  404120:	b.ne	404138 <wcrtomb@plt+0x12b8>  // b.any
  404124:	cmp	w0, #0x26
  404128:	mov	w1, #0x5c                  	// #92
  40412c:	ccmp	w0, w1, #0x4, ne  // ne = any
  404130:	b.ne	404138 <wcrtomb@plt+0x12b8>  // b.any
  404134:	strb	w1, [x19], #1
  404138:	strb	w0, [x19], #1
  40413c:	b	404088 <wcrtomb@plt+0x1208>
  404140:	mov	w0, #0x7                   	// #7
  404144:	add	x24, x27, #0x2
  404148:	strb	w0, [x19], #1
  40414c:	b	404088 <wcrtomb@plt+0x1208>
  404150:	mov	w0, #0xc                   	// #12
  404154:	b	404144 <wcrtomb@plt+0x12c4>
  404158:	mov	w0, #0xa                   	// #10
  40415c:	b	404144 <wcrtomb@plt+0x12c4>
  404160:	mov	w0, #0xd                   	// #13
  404164:	b	404144 <wcrtomb@plt+0x12c4>
  404168:	mov	w0, #0x9                   	// #9
  40416c:	b	404144 <wcrtomb@plt+0x12c4>
  404170:	mov	w0, #0xb                   	// #11
  404174:	b	404144 <wcrtomb@plt+0x12c4>
  404178:	mov	w4, #0x10                  	// #16
  40417c:	b	4040f4 <wcrtomb@plt+0x1274>
  404180:	mov	w4, #0x8                   	// #8
  404184:	b	4040f4 <wcrtomb@plt+0x1274>
  404188:	ldrb	w3, [x24]
  40418c:	sub	w3, w3, #0x30
  404190:	and	w3, w3, #0xff
  404194:	cmp	w3, #0x36
  404198:	b.hi	404110 <wcrtomb@plt+0x1290>  // b.pmore
  40419c:	and	x3, x3, #0xff
  4041a0:	ldrsb	w1, [x22, x3]
  4041a4:	cmp	w1, w4
  4041a8:	b.cs	404110 <wcrtomb@plt+0x1290>  // b.hs, b.nlast
  4041ac:	madd	w5, w4, w5, w1
  4041b0:	add	x24, x24, #0x1
  4041b4:	mul	w6, w6, w4
  4041b8:	b	404104 <wcrtomb@plt+0x1284>
  4041bc:	add	x24, x27, #0x2
  4041c0:	cmp	x26, x24
  4041c4:	b.ls	404214 <wcrtomb@plt+0x1394>  // b.plast
  4041c8:	bl	402a90 <__ctype_toupper_loc@plt>
  4041cc:	ldrb	w1, [x27, #2]
  4041d0:	ldr	x0, [x0]
  4041d4:	ldr	w0, [x0, x1, lsl #2]
  4041d8:	eor	w0, w0, #0x40
  4041dc:	strb	w0, [x19], #1
  4041e0:	ldrb	w0, [x27, #2]
  4041e4:	cmp	w0, #0x5c
  4041e8:	b.ne	40420c <wcrtomb@plt+0x138c>  // b.any
  4041ec:	ldrb	w0, [x27, #3]
  4041f0:	add	x24, x27, #0x3
  4041f4:	cmp	w0, #0x5c
  4041f8:	b.eq	40420c <wcrtomb@plt+0x138c>  // b.none
  4041fc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  404200:	add	x0, x0, #0xe4
  404204:	add	x0, x0, #0x30c
  404208:	bl	4037b4 <wcrtomb@plt+0x934>
  40420c:	add	x24, x24, #0x1
  404210:	b	404088 <wcrtomb@plt+0x1208>
  404214:	cbz	w21, 404088 <wcrtomb@plt+0x1208>
  404218:	mov	w0, #0x5c                  	// #92
  40421c:	b	404138 <wcrtomb@plt+0x12b8>
  404220:	cbz	w21, 40422c <wcrtomb@plt+0x13ac>
  404224:	mov	w0, #0x5c                  	// #92
  404228:	strb	w0, [x19], #1
  40422c:	mov	x27, x2
  404230:	b	404264 <wcrtomb@plt+0x13e4>
  404234:	cmp	w21, #0x2
  404238:	b.ne	404264 <wcrtomb@plt+0x13e4>  // b.any
  40423c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  404240:	ldr	w1, [x1, #2296]
  404244:	cbz	w1, 404264 <wcrtomb@plt+0x13e4>
  404248:	cmp	w0, #0x5b
  40424c:	b.eq	40429c <wcrtomb@plt+0x141c>  // b.none
  404250:	b.hi	404270 <wcrtomb@plt+0x13f0>  // b.pmore
  404254:	cmp	w0, #0x3d
  404258:	b.hi	404264 <wcrtomb@plt+0x13e4>  // b.pmore
  40425c:	lsr	x1, x23, x0
  404260:	tbnz	w1, #0, 4042a8 <wcrtomb@plt+0x1428>
  404264:	mov	x24, x27
  404268:	ldrb	w0, [x24], #1
  40426c:	b	404138 <wcrtomb@plt+0x12b8>
  404270:	cmp	w0, #0x5d
  404274:	b.ne	404264 <wcrtomb@plt+0x13e4>  // b.any
  404278:	add	w0, w25, #0x1
  40427c:	cmp	w0, #0x1
  404280:	b.ls	4042c0 <wcrtomb@plt+0x1440>  // b.plast
  404284:	ldurb	w0, [x27, #-2]
  404288:	cmp	w25, w0
  40428c:	b.eq	404264 <wcrtomb@plt+0x13e4>  // b.none
  404290:	ldurb	w0, [x27, #-1]
  404294:	cmp	w25, w0
  404298:	b	4042a0 <wcrtomb@plt+0x1420>
  40429c:	cmp	w25, #0x0
  4042a0:	csinv	w25, w25, wzr, ne  // ne = any
  4042a4:	b	404264 <wcrtomb@plt+0x13e4>
  4042a8:	cmn	w25, #0x1
  4042ac:	b.ne	404264 <wcrtomb@plt+0x13e4>  // b.any
  4042b0:	ldurb	w1, [x27, #-1]
  4042b4:	cmp	w1, #0x5b
  4042b8:	csel	w25, w25, w0, ne  // ne = any
  4042bc:	b	404264 <wcrtomb@plt+0x13e4>
  4042c0:	mov	w25, #0x0                   	// #0
  4042c4:	b	404264 <wcrtomb@plt+0x13e4>
  4042c8:	stp	x29, x30, [sp, #-48]!
  4042cc:	mov	x29, sp
  4042d0:	stp	x19, x20, [sp, #16]
  4042d4:	mov	w19, w1
  4042d8:	stp	x21, x22, [sp, #32]
  4042dc:	mov	x21, x0
  4042e0:	cbz	x0, 404304 <wcrtomb@plt+0x1484>
  4042e4:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  4042e8:	add	x20, x20, #0x548
  4042ec:	ldr	x0, [x20, #168]
  4042f0:	cbz	x0, 4042f8 <wcrtomb@plt+0x1478>
  4042f4:	bl	4094a4 <wcrtomb@plt+0x6624>
  4042f8:	bl	409394 <wcrtomb@plt+0x6514>
  4042fc:	stp	xzr, xzr, [x21]
  404300:	stp	x0, x21, [x20, #168]
  404304:	cmn	w19, #0x1
  404308:	b.eq	4043a0 <wcrtomb@plt+0x1520>  // b.none
  40430c:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  404310:	cmp	w19, #0xa
  404314:	add	x20, x20, #0x548
  404318:	b.eq	404328 <wcrtomb@plt+0x14a8>  // b.none
  40431c:	ldr	x0, [x20, #168]
  404320:	mov	w1, w19
  404324:	bl	40944c <wcrtomb@plt+0x65cc>
  404328:	bl	4035f0 <wcrtomb@plt+0x770>
  40432c:	cmp	w0, #0xa
  404330:	mov	w19, w0
  404334:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  404338:	b.ne	4043b0 <wcrtomb@plt+0x1530>  // b.any
  40433c:	ldr	x0, [x20, #168]
  404340:	mov	w1, #0xa                   	// #10
  404344:	bl	40944c <wcrtomb@plt+0x65cc>
  404348:	cbnz	x21, 404350 <wcrtomb@plt+0x14d0>
  40434c:	ldr	x21, [x20, #176]
  404350:	ldr	x22, [x20, #168]
  404354:	mov	x0, x22
  404358:	bl	4093d4 <wcrtomb@plt+0x6554>
  40435c:	mov	x19, x0
  404360:	mov	x0, x22
  404364:	bl	4093dc <wcrtomb@plt+0x655c>
  404368:	mov	x1, x0
  40436c:	mov	w2, #0x0                   	// #0
  404370:	mov	x0, x19
  404374:	bl	403fb8 <wcrtomb@plt+0x1138>
  404378:	mov	x19, x0
  40437c:	ldr	x0, [x20, #168]
  404380:	str	x19, [x21, #8]
  404384:	bl	4093d4 <wcrtomb@plt+0x6554>
  404388:	mov	x1, x19
  40438c:	bl	40fd80 <wcrtomb@plt+0xcf00>
  404390:	str	x0, [x21]
  404394:	ldr	x0, [x20, #168]
  404398:	bl	4094a4 <wcrtomb@plt+0x6624>
  40439c:	str	xzr, [x20, #168]
  4043a0:	ldp	x19, x20, [sp, #16]
  4043a4:	ldp	x21, x22, [sp, #32]
  4043a8:	ldp	x29, x30, [sp], #48
  4043ac:	ret
  4043b0:	cmp	w19, #0x5c
  4043b4:	b.ne	40431c <wcrtomb@plt+0x149c>  // b.any
  4043b8:	bl	4035f0 <wcrtomb@plt+0x770>
  4043bc:	mov	w19, w0
  4043c0:	cmn	w0, #0x1
  4043c4:	b.eq	4043d8 <wcrtomb@plt+0x1558>  // b.none
  4043c8:	ldr	x0, [x20, #168]
  4043cc:	mov	w1, #0x5c                  	// #92
  4043d0:	bl	40944c <wcrtomb@plt+0x65cc>
  4043d4:	b	40431c <wcrtomb@plt+0x149c>
  4043d8:	ldp	x21, x22, [sp, #32]
  4043dc:	mov	w1, #0xa                   	// #10
  4043e0:	ldr	x0, [x20, #168]
  4043e4:	ldp	x19, x20, [sp, #16]
  4043e8:	ldp	x29, x30, [sp], #48
  4043ec:	b	40944c <wcrtomb@plt+0x65cc>
  4043f0:	stp	x29, x30, [sp, #-224]!
  4043f4:	mov	x29, sp
  4043f8:	stp	x19, x20, [sp, #16]
  4043fc:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  404400:	add	x19, x19, #0x548
  404404:	stp	x21, x22, [sp, #32]
  404408:	stp	x23, x24, [sp, #48]
  40440c:	stp	x25, x26, [sp, #64]
  404410:	stp	x27, x28, [sp, #80]
  404414:	cbnz	x0, 40452c <wcrtomb@plt+0x16ac>
  404418:	mov	x1, #0x18                  	// #24
  40441c:	mov	x0, #0x1                   	// #1
  404420:	bl	40fd44 <wcrtomb@plt+0xcec4>
  404424:	mov	x21, x0
  404428:	adrp	x4, 402000 <mbrtowc@plt-0x740>
  40442c:	adrp	x3, 40f000 <wcrtomb@plt+0xc180>
  404430:	add	x4, x4, #0xc20
  404434:	add	x3, x3, #0xd78
  404438:	stp	xzr, xzr, [x21]
  40443c:	mov	x0, x19
  404440:	mov	x2, #0x0                   	// #0
  404444:	str	xzr, [x21, #16]
  404448:	mov	x1, #0x0                   	// #0
  40444c:	bl	40ffcc <_obstack_begin@@Base>
  404450:	ldr	x0, [x19, #168]
  404454:	cbz	x0, 404464 <wcrtomb@plt+0x15e4>
  404458:	mov	w1, #0xa                   	// #10
  40445c:	mov	x0, #0x0                   	// #0
  404460:	bl	4042c8 <wcrtomb@plt+0x1448>
  404464:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  404468:	add	x0, x0, #0xd8
  40446c:	str	x0, [sp, #128]
  404470:	bl	4035f0 <wcrtomb@plt+0x770>
  404474:	mov	w22, w0
  404478:	cmp	w0, #0x3b
  40447c:	b.eq	404470 <wcrtomb@plt+0x15f0>  // b.none
  404480:	bl	402c00 <__ctype_b_loc@plt>
  404484:	mov	x25, x0
  404488:	ldr	x0, [x0]
  40448c:	ldrh	w0, [x0, w22, sxtw #1]
  404490:	tbnz	w0, #13, 404470 <wcrtomb@plt+0x15f0>
  404494:	cmn	w22, #0x1
  404498:	b.eq	4051fc <wcrtomb@plt+0x237c>  // b.none
  40449c:	ldp	x0, x1, [x21, #8]
  4044a0:	cmp	x1, x0
  4044a4:	b.ne	4044c0 <wcrtomb@plt+0x1640>  // b.any
  4044a8:	ldr	x0, [x21]
  4044ac:	add	x1, x1, #0x28
  4044b0:	str	x1, [x21, #8]
  4044b4:	mov	x2, #0x28                  	// #40
  4044b8:	bl	40fca8 <wcrtomb@plt+0xce28>
  4044bc:	str	x0, [x21]
  4044c0:	ldr	x26, [x21, #16]
  4044c4:	mov	x0, #0x28                  	// #40
  4044c8:	ldr	x27, [x21]
  4044cc:	mov	w1, w22
  4044d0:	mul	x26, x26, x0
  4044d4:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x21e54>
  4044d8:	add	x0, sp, #0xa0
  4044dc:	add	x24, x23, #0x8f8
  4044e0:	add	x20, x27, x26
  4044e4:	str	xzr, [x27, x26]
  4044e8:	str	xzr, [x20, #8]
  4044ec:	str	wzr, [x20, #16]
  4044f0:	strh	wzr, [x20, #20]
  4044f4:	bl	403d34 <wcrtomb@plt+0xeb4>
  4044f8:	tst	w0, #0xff
  4044fc:	b.eq	4045e4 <wcrtomb@plt+0x1764>  // b.none
  404500:	ldr	w0, [sp, #160]
  404504:	sub	w0, w0, #0x4
  404508:	cmp	w0, #0x1
  40450c:	b.hi	404534 <wcrtomb@plt+0x16b4>  // b.pmore
  404510:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404514:	add	x1, x1, #0xe4
  404518:	add	x1, x1, #0x1d
  40451c:	mov	w2, #0x5                   	// #5
  404520:	mov	x0, #0x0                   	// #0
  404524:	bl	402d60 <dcgettext@plt>
  404528:	bl	4037b4 <wcrtomb@plt+0x934>
  40452c:	mov	x21, x0
  404530:	b	404450 <wcrtomb@plt+0x15d0>
  404534:	mov	x1, #0x20                  	// #32
  404538:	add	x0, sp, #0xa0
  40453c:	bl	40fd80 <wcrtomb@plt+0xcf00>
  404540:	str	x0, [x27, x26]
  404544:	bl	403670 <wcrtomb@plt+0x7f0>
  404548:	mov	w22, w0
  40454c:	cmp	w0, #0x2c
  404550:	b.ne	404598 <wcrtomb@plt+0x1718>  // b.any
  404554:	bl	403670 <wcrtomb@plt+0x7f0>
  404558:	mov	w1, w0
  40455c:	add	x0, sp, #0xa0
  404560:	bl	403d34 <wcrtomb@plt+0xeb4>
  404564:	tst	w0, #0xff
  404568:	b.ne	404580 <wcrtomb@plt+0x1700>  // b.any
  40456c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404570:	add	x1, x1, #0xe4
  404574:	add	x1, x1, #0xe
  404578:	mov	w2, #0x5                   	// #5
  40457c:	b	404520 <wcrtomb@plt+0x16a0>
  404580:	mov	x1, #0x20                  	// #32
  404584:	add	x0, sp, #0xa0
  404588:	bl	40fd80 <wcrtomb@plt+0xcf00>
  40458c:	str	x0, [x20, #8]
  404590:	bl	403670 <wcrtomb@plt+0x7f0>
  404594:	mov	w22, w0
  404598:	ldr	x0, [x27, x26]
  40459c:	ldr	w1, [x0]
  4045a0:	cmp	w1, #0x2
  4045a4:	b.ne	4045e4 <wcrtomb@plt+0x1764>  // b.any
  4045a8:	ldr	x0, [x0, #8]
  4045ac:	cbnz	x0, 4045e4 <wcrtomb@plt+0x1764>
  4045b0:	ldr	x0, [x20, #8]
  4045b4:	cbz	x0, 4045d0 <wcrtomb@plt+0x1750>
  4045b8:	ldr	w0, [x0]
  4045bc:	cmp	w0, #0x1
  4045c0:	b.ne	4045d0 <wcrtomb@plt+0x1750>  // b.any
  4045c4:	ldr	w0, [x23, #2296]
  4045c8:	cmp	w0, #0x2
  4045cc:	b.ne	405228 <wcrtomb@plt+0x23a8>  // b.any
  4045d0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4045d4:	add	x1, x1, #0xe4
  4045d8:	add	x1, x1, #0x2b1
  4045dc:	mov	w2, #0x5                   	// #5
  4045e0:	b	404520 <wcrtomb@plt+0x16a0>
  4045e4:	cmp	w22, #0x21
  4045e8:	b.ne	404614 <wcrtomb@plt+0x1794>  // b.any
  4045ec:	mov	w0, #0x1                   	// #1
  4045f0:	strb	w0, [x20, #20]
  4045f4:	bl	403670 <wcrtomb@plt+0x7f0>
  4045f8:	mov	w22, w0
  4045fc:	cmp	w0, #0x21
  404600:	b.ne	404614 <wcrtomb@plt+0x1794>  // b.any
  404604:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404608:	mov	w2, #0x5                   	// #5
  40460c:	add	x1, x1, #0xe4
  404610:	b	404520 <wcrtomb@plt+0x16a0>
  404614:	ldr	w0, [x23, #2296]
  404618:	cmp	w0, #0x2
  40461c:	b.ne	404644 <wcrtomb@plt+0x17c4>  // b.any
  404620:	cmp	w22, #0x6c
  404624:	b.gt	4046b4 <wcrtomb@plt+0x1834>
  404628:	cmp	w22, #0x60
  40462c:	b.gt	404678 <wcrtomb@plt+0x17f8>
  404630:	cmp	w22, #0x3d
  404634:	b.eq	4046dc <wcrtomb@plt+0x185c>  // b.none
  404638:	sub	w1, w22, #0x46
  40463c:	cmp	w1, #0x11
  404640:	b.ls	40469c <wcrtomb@plt+0x181c>  // b.plast
  404644:	and	w0, w22, #0xff
  404648:	strb	w0, [x20, #21]
  40464c:	cmn	w22, #0x1
  404650:	b.eq	4051e8 <wcrtomb@plt+0x2368>  // b.none
  404654:	sub	w22, w22, #0x23
  404658:	cmp	w22, #0x5a
  40465c:	b.hi	4046d8 <wcrtomb@plt+0x1858>  // b.pmore
  404660:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404664:	add	x1, x1, #0x0
  404668:	ldrh	w1, [x1, w22, uxtw #1]
  40466c:	adr	x2, 404678 <wcrtomb@plt+0x17f8>
  404670:	add	x1, x2, w1, sxth #2
  404674:	br	x1
  404678:	sub	w1, w22, #0x61
  40467c:	cmp	w1, #0xb
  404680:	b.hi	404644 <wcrtomb@plt+0x17c4>  // b.pmore
  404684:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  404688:	add	x0, x0, #0xb8
  40468c:	ldrb	w0, [x0, w1, uxtw]
  404690:	adr	x1, 40469c <wcrtomb@plt+0x181c>
  404694:	add	x0, x1, w0, sxtb #2
  404698:	br	x0
  40469c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  4046a0:	add	x0, x0, #0xc4
  4046a4:	ldrb	w0, [x0, w1, uxtw]
  4046a8:	adr	x1, 4046b4 <wcrtomb@plt+0x1834>
  4046ac:	add	x0, x1, w0, sxtb #2
  4046b0:	br	x0
  4046b4:	cmp	w22, #0x72
  4046b8:	b.eq	4046dc <wcrtomb@plt+0x185c>  // b.none
  4046bc:	cmp	w22, #0x71
  4046c0:	b.le	404644 <wcrtomb@plt+0x17c4>
  4046c4:	cmp	w22, #0x76
  4046c8:	b.eq	4046d4 <wcrtomb@plt+0x1854>  // b.none
  4046cc:	cmp	w22, #0x7a
  4046d0:	b.ne	404644 <wcrtomb@plt+0x17c4>  // b.any
  4046d4:	mov	w0, w22
  4046d8:	bl	403f60 <wcrtomb@plt+0x10e0>
  4046dc:	ldr	x0, [x20, #8]
  4046e0:	cbz	x0, 404644 <wcrtomb@plt+0x17c4>
  4046e4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4046e8:	add	x1, x1, #0xe4
  4046ec:	add	x1, x1, #0x115
  4046f0:	mov	w2, #0x5                   	// #5
  4046f4:	b	404520 <wcrtomb@plt+0x16a0>
  4046f8:	ldr	x0, [x27, x26]
  4046fc:	cbz	x0, 404714 <wcrtomb@plt+0x1894>
  404700:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404704:	add	x1, x1, #0xe4
  404708:	add	x1, x1, #0xe1
  40470c:	mov	w2, #0x5                   	// #5
  404710:	b	404520 <wcrtomb@plt+0x16a0>
  404714:	bl	4035f0 <wcrtomb@plt+0x770>
  404718:	mov	w20, w0
  40471c:	cmp	w0, #0x6e
  404720:	b.ne	404760 <wcrtomb@plt+0x18e0>  // b.any
  404724:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404728:	ldrb	w0, [x0, #1112]
  40472c:	cbz	w0, 404760 <wcrtomb@plt+0x18e0>
  404730:	ldr	x0, [x19, #96]
  404734:	cmp	x0, #0x1
  404738:	b.hi	404760 <wcrtomb@plt+0x18e0>  // b.pmore
  40473c:	ldr	x1, [x19, #112]
  404740:	cbz	x1, 404778 <wcrtomb@plt+0x18f8>
  404744:	ldr	x2, [x19, #120]
  404748:	add	x0, x1, #0x2
  40474c:	cmp	x2, x0
  404750:	b.ne	404778 <wcrtomb@plt+0x18f8>  // b.any
  404754:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404758:	mov	w1, #0x1                   	// #1
  40475c:	strb	w1, [x0, #1896]
  404760:	cmp	w20, #0xa
  404764:	ccmn	w20, #0x1, #0x4, ne  // ne = any
  404768:	b.eq	404470 <wcrtomb@plt+0x15f0>  // b.none
  40476c:	bl	4035f0 <wcrtomb@plt+0x770>
  404770:	mov	w20, w0
  404774:	b	404760 <wcrtomb@plt+0x18e0>
  404778:	ldr	x0, [x19, #136]
  40477c:	cbz	x0, 404760 <wcrtomb@plt+0x18e0>
  404780:	cbnz	x1, 404760 <wcrtomb@plt+0x18e0>
  404784:	bl	402830 <ftell@plt>
  404788:	cmp	x0, #0x2
  40478c:	b.ne	404760 <wcrtomb@plt+0x18e0>  // b.any
  404790:	b	404754 <wcrtomb@plt+0x18d4>
  404794:	bl	403708 <wcrtomb@plt+0x888>
  404798:	ldrb	w1, [x0]
  40479c:	mov	x20, x0
  4047a0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4047a4:	cmp	w1, #0x0
  4047a8:	add	x0, x0, #0xf95
  4047ac:	csel	x0, x0, x20, eq  // eq = none
  4047b0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4047b4:	add	x1, x1, #0xf99
  4047b8:	bl	4029e0 <strverscmp@plt>
  4047bc:	cmp	w0, #0x0
  4047c0:	b.le	4047d8 <wcrtomb@plt+0x1958>
  4047c4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4047c8:	add	x1, x1, #0xe4
  4047cc:	add	x1, x1, #0x293
  4047d0:	mov	w2, #0x5                   	// #5
  4047d4:	b	404520 <wcrtomb@plt+0x16a0>
  4047d8:	mov	x0, x20
  4047dc:	bl	402c20 <free@plt>
  4047e0:	str	wzr, [x23, #2296]
  4047e4:	b	404470 <wcrtomb@plt+0x15f0>
  4047e8:	ldr	x1, [x21, #16]
  4047ec:	add	x3, x19, #0x58
  4047f0:	ldr	x0, [x19, #184]
  4047f4:	mov	x2, #0x0                   	// #0
  4047f8:	bl	4034b8 <wcrtomb@plt+0x638>
  4047fc:	str	x0, [x19, #184]
  404800:	ldrb	w0, [x20, #20]
  404804:	cmp	w0, #0x0
  404808:	cset	w0, eq  // eq = none
  40480c:	strb	w0, [x20, #20]
  404810:	ldr	x0, [x21, #16]
  404814:	add	x0, x0, #0x1
  404818:	str	x0, [x21, #16]
  40481c:	b	404470 <wcrtomb@plt+0x15f0>
  404820:	ldr	x0, [x19, #184]
  404824:	cbnz	x0, 40483c <wcrtomb@plt+0x19bc>
  404828:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40482c:	add	x1, x1, #0xe4
  404830:	add	x1, x1, #0x56
  404834:	mov	w2, #0x5                   	// #5
  404838:	b	404524 <wcrtomb@plt+0x16a4>
  40483c:	ldr	x0, [x27, x26]
  404840:	cbz	x0, 404858 <wcrtomb@plt+0x19d8>
  404844:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404848:	add	x1, x1, #0xe4
  40484c:	add	x1, x1, #0xa5
  404850:	mov	w2, #0x5                   	// #5
  404854:	b	404520 <wcrtomb@plt+0x16a0>
  404858:	bl	403efc <wcrtomb@plt+0x107c>
  40485c:	ldr	x0, [x19, #184]
  404860:	mov	x3, #0x28                  	// #40
  404864:	ldr	x2, [x21]
  404868:	ldr	x1, [x0]
  40486c:	ldr	x20, [x0, #40]
  404870:	madd	x1, x1, x3, x2
  404874:	ldr	x0, [x0, #8]
  404878:	ldr	x2, [x21, #16]
  40487c:	str	x2, [x1, #24]
  404880:	bl	402c20 <free@plt>
  404884:	str	x20, [x19, #184]
  404888:	b	404810 <wcrtomb@plt+0x1990>
  40488c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404890:	ldrb	w0, [x0, #1932]
  404894:	cbz	w0, 4048ac <wcrtomb@plt+0x1a2c>
  404898:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40489c:	add	x1, x1, #0xe4
  4048a0:	add	x1, x1, #0x334
  4048a4:	mov	w2, #0x5                   	// #5
  4048a8:	b	404520 <wcrtomb@plt+0x16a0>
  4048ac:	bl	403670 <wcrtomb@plt+0x7f0>
  4048b0:	cmp	w0, #0xa
  4048b4:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  4048b8:	b.ne	4048e4 <wcrtomb@plt+0x1a64>  // b.any
  4048bc:	str	xzr, [x20, #32]
  4048c0:	b	404810 <wcrtomb@plt+0x1990>
  4048c4:	bl	403670 <wcrtomb@plt+0x7f0>
  4048c8:	cmn	w0, #0x1
  4048cc:	b.ne	4048e4 <wcrtomb@plt+0x1a64>  // b.any
  4048d0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4048d4:	add	x1, x1, #0xe4
  4048d8:	add	x1, x1, #0x84
  4048dc:	mov	w2, #0x5                   	// #5
  4048e0:	b	404520 <wcrtomb@plt+0x16a0>
  4048e4:	cmp	w0, #0x5c
  4048e8:	b.ne	404900 <wcrtomb@plt+0x1a80>  // b.any
  4048ec:	bl	4035f0 <wcrtomb@plt+0x770>
  4048f0:	mov	w1, w0
  4048f4:	add	x0, x20, #0x18
  4048f8:	bl	4042c8 <wcrtomb@plt+0x1448>
  4048fc:	b	404810 <wcrtomb@plt+0x1990>
  404900:	ldr	w1, [x23, #2296]
  404904:	cmp	w1, #0x2
  404908:	b.eq	4048d0 <wcrtomb@plt+0x1a50>  // b.none
  40490c:	bl	403578 <wcrtomb@plt+0x6f8>
  404910:	mov	w1, #0xa                   	// #10
  404914:	b	4048f4 <wcrtomb@plt+0x1a74>
  404918:	ldr	x0, [x27, x26]
  40491c:	cbz	x0, 404934 <wcrtomb@plt+0x1ab4>
  404920:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404924:	add	x1, x1, #0xe4
  404928:	add	x1, x1, #0xc4
  40492c:	mov	w2, #0x5                   	// #5
  404930:	b	404520 <wcrtomb@plt+0x16a0>
  404934:	bl	403708 <wcrtomb@plt+0x888>
  404938:	mov	x22, x0
  40493c:	ldrb	w0, [x0]
  404940:	cbnz	w0, 404958 <wcrtomb@plt+0x1ad8>
  404944:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404948:	add	x1, x1, #0xe4
  40494c:	add	x1, x1, #0x2fa
  404950:	mov	w2, #0x5                   	// #5
  404954:	b	404520 <wcrtomb@plt+0x16a0>
  404958:	ldr	x1, [x21, #16]
  40495c:	mov	x2, x22
  404960:	ldr	x0, [x19, #192]
  404964:	mov	x3, #0x0                   	// #0
  404968:	bl	4034b8 <wcrtomb@plt+0x638>
  40496c:	str	x0, [x19, #192]
  404970:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404974:	ldrb	w0, [x0, #1933]
  404978:	cbz	w0, 404810 <wcrtomb@plt+0x1990>
  40497c:	mov	x0, x22
  404980:	bl	402ae0 <strdup@plt>
  404984:	str	x0, [x20, #24]
  404988:	b	404810 <wcrtomb@plt+0x1990>
  40498c:	ldr	x22, [x21, #16]
  404990:	ldr	x20, [x19, #200]
  404994:	bl	403708 <wcrtomb@plt+0x888>
  404998:	mov	x1, x22
  40499c:	mov	x2, x0
  4049a0:	mov	x3, #0x0                   	// #0
  4049a4:	mov	x0, x20
  4049a8:	bl	4034b8 <wcrtomb@plt+0x638>
  4049ac:	str	x0, [x19, #200]
  4049b0:	b	404810 <wcrtomb@plt+0x1990>
  4049b4:	ldr	x0, [x20, #8]
  4049b8:	cbnz	x0, 4046e4 <wcrtomb@plt+0x1864>
  4049bc:	bl	403670 <wcrtomb@plt+0x7f0>
  4049c0:	mov	w1, w0
  4049c4:	ldr	x3, [x25]
  4049c8:	ubfiz	x2, x1, #1, #8
  4049cc:	ldrh	w2, [x3, x2]
  4049d0:	tbz	w2, #11, 4049f0 <wcrtomb@plt+0x1b70>
  4049d4:	ldr	w2, [x23, #2296]
  4049d8:	cmp	w2, #0x2
  4049dc:	b.eq	4049f0 <wcrtomb@plt+0x1b70>  // b.none
  4049e0:	bl	4036a4 <wcrtomb@plt+0x824>
  4049e4:	str	w0, [x20, #24]
  4049e8:	bl	403efc <wcrtomb@plt+0x107c>
  4049ec:	b	404810 <wcrtomb@plt+0x1990>
  4049f0:	mov	w0, #0xffffffff            	// #-1
  4049f4:	str	w0, [x20, #24]
  4049f8:	mov	w0, w1
  4049fc:	bl	403578 <wcrtomb@plt+0x6f8>
  404a00:	b	4049e8 <wcrtomb@plt+0x1b68>
  404a04:	bl	40384c <wcrtomb@plt+0x9cc>
  404a08:	mov	x22, x0
  404a0c:	bl	4093d4 <wcrtomb@plt+0x6554>
  404a10:	ldrb	w1, [x0]
  404a14:	cbnz	w1, 404a2c <wcrtomb@plt+0x1bac>
  404a18:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404a1c:	add	x1, x1, #0xe4
  404a20:	add	x1, x1, #0x35c
  404a24:	mov	w2, #0x5                   	// #5
  404a28:	b	404520 <wcrtomb@plt+0x16a0>
  404a2c:	bl	40fdb0 <wcrtomb@plt+0xcf30>
  404a30:	str	x0, [x20, #24]
  404a34:	mov	x0, x22
  404a38:	bl	4094a4 <wcrtomb@plt+0x6624>
  404a3c:	b	404810 <wcrtomb@plt+0x1990>
  404a40:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404a44:	mov	w2, #0x0                   	// #0
  404a48:	ldr	x1, [x0, #1160]
  404a4c:	add	x0, x19, #0xd0
  404a50:	bl	4038c8 <wcrtomb@plt+0xa48>
  404a54:	b	404984 <wcrtomb@plt+0x1b04>
  404a58:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404a5c:	mov	w2, #0x1                   	// #1
  404a60:	ldr	x1, [x0, #1168]
  404a64:	add	x0, x19, #0xd8
  404a68:	b	404a50 <wcrtomb@plt+0x1bd0>
  404a6c:	bl	4035f0 <wcrtomb@plt+0x770>
  404a70:	mov	w23, w0
  404a74:	mov	w1, #0x1                   	// #1
  404a78:	bl	403a74 <wcrtomb@plt+0xbf4>
  404a7c:	str	x0, [sp, #96]
  404a80:	cbnz	x0, 404a98 <wcrtomb@plt+0x1c18>
  404a84:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404a88:	add	x1, x1, #0xe4
  404a8c:	add	x1, x1, #0x14e
  404a90:	mov	w2, #0x5                   	// #5
  404a94:	b	404524 <wcrtomb@plt+0x16a4>
  404a98:	mov	w0, w23
  404a9c:	mov	w1, #0x0                   	// #0
  404aa0:	bl	403a74 <wcrtomb@plt+0xbf4>
  404aa4:	mov	x26, x0
  404aa8:	cbz	x0, 404a84 <wcrtomb@plt+0x1c04>
  404aac:	ldp	x1, x0, [x19, #24]
  404ab0:	sub	x0, x0, x1
  404ab4:	cmp	x0, #0x27
  404ab8:	b.hi	404ac8 <wcrtomb@plt+0x1c48>  // b.pmore
  404abc:	mov	x0, x19
  404ac0:	mov	x1, #0x28                  	// #40
  404ac4:	bl	40fff8 <_obstack_newchunk@@Base>
  404ac8:	ldp	x23, x1, [x19, #16]
  404acc:	add	x1, x1, #0x28
  404ad0:	cmp	x1, x23
  404ad4:	b.ne	404ae4 <wcrtomb@plt+0x1c64>  // b.any
  404ad8:	ldrb	w0, [x19, #80]
  404adc:	orr	w0, w0, #0x2
  404ae0:	strb	w0, [x19, #80]
  404ae4:	ldr	x0, [x19, #48]
  404ae8:	add	x22, sp, #0xc0
  404aec:	ldr	x2, [x19, #32]
  404af0:	add	x1, x1, x0
  404af4:	bic	x0, x1, x0
  404af8:	ldr	x1, [x19, #8]
  404afc:	sub	x3, x0, x1
  404b00:	sub	x1, x2, x1
  404b04:	cmp	x3, x1
  404b08:	csel	x0, x0, x2, ls  // ls = plast
  404b0c:	stp	x0, x0, [x19, #16]
  404b10:	mov	x0, x26
  404b14:	str	x23, [x20, #24]
  404b18:	bl	4093d4 <wcrtomb@plt+0x6554>
  404b1c:	mov	x27, x0
  404b20:	mov	x0, x26
  404b24:	bl	4093dc <wcrtomb@plt+0x655c>
  404b28:	mov	x28, x0
  404b2c:	ldrb	w0, [x23, #32]
  404b30:	mov	x1, x28
  404b34:	and	w0, w0, #0xf
  404b38:	strb	w0, [x23, #32]
  404b3c:	mov	x0, x27
  404b40:	bl	40fd80 <wcrtomb@plt+0xcf00>
  404b44:	mov	x27, x0
  404b48:	mov	x1, x28
  404b4c:	mov	w2, #0x1                   	// #1
  404b50:	bl	403fb8 <wcrtomb@plt+0x1138>
  404b54:	add	x5, x27, x0
  404b58:	mov	x3, x27
  404b5c:	mov	w28, #0x0                   	// #0
  404b60:	mov	w2, #0x0                   	// #0
  404b64:	cmp	x5, x3
  404b68:	b.hi	404c00 <wcrtomb@plt+0x1d80>  // b.pmore
  404b6c:	cmp	x5, x27
  404b70:	b.ls	404b88 <wcrtomb@plt+0x1d08>  // b.plast
  404b74:	sub	x1, x5, x27
  404b78:	mov	x0, x27
  404b7c:	bl	403418 <wcrtomb@plt+0x598>
  404b80:	str	x0, [x22, #24]
  404b84:	mov	x22, x0
  404b88:	str	xzr, [x22, #24]
  404b8c:	mov	w25, #0x1                   	// #1
  404b90:	ldr	x0, [sp, #216]
  404b94:	str	x0, [x23, #8]
  404b98:	mov	x0, x26
  404b9c:	mov	w23, #0x0                   	// #0
  404ba0:	bl	4094a4 <wcrtomb@plt+0x6624>
  404ba4:	ldr	x26, [x20, #24]
  404ba8:	ldrb	w0, [x26, #32]
  404bac:	stp	xzr, xzr, [x26, #16]
  404bb0:	and	w0, w0, #0xfffffff0
  404bb4:	strb	w0, [x26, #32]
  404bb8:	bl	403670 <wcrtomb@plt+0x7f0>
  404bbc:	mov	w1, w0
  404bc0:	cmp	w0, #0x70
  404bc4:	b.gt	404da0 <wcrtomb@plt+0x1f20>
  404bc8:	cmp	w0, #0x64
  404bcc:	b.gt	404d4c <wcrtomb@plt+0x1ecc>
  404bd0:	cmp	w0, #0x39
  404bd4:	b.gt	404d88 <wcrtomb@plt+0x1f08>
  404bd8:	cmp	w0, #0x2f
  404bdc:	b.gt	404eac <wcrtomb@plt+0x202c>
  404be0:	cmp	w0, #0xd
  404be4:	b.eq	404ef4 <wcrtomb@plt+0x2074>  // b.none
  404be8:	b.gt	404d6c <wcrtomb@plt+0x1eec>
  404bec:	cmn	w0, #0x1
  404bf0:	b.eq	404e68 <wcrtomb@plt+0x1fe8>  // b.none
  404bf4:	cmp	w0, #0xa
  404bf8:	b.eq	404e68 <wcrtomb@plt+0x1fe8>  // b.none
  404bfc:	b	404d74 <wcrtomb@plt+0x1ef4>
  404c00:	mov	x6, x3
  404c04:	ldrb	w0, [x6], #1
  404c08:	cmp	w0, #0x5c
  404c0c:	b.ne	404d10 <wcrtomb@plt+0x1e90>  // b.any
  404c10:	sub	x1, x3, x27
  404c14:	mov	x0, x27
  404c18:	stp	x3, x5, [sp, #104]
  404c1c:	str	x6, [sp, #120]
  404c20:	bl	403418 <wcrtomb@plt+0x598>
  404c24:	ldp	x3, x5, [sp, #104]
  404c28:	str	x0, [x22, #24]
  404c2c:	ldr	x6, [sp, #120]
  404c30:	cmp	x5, x6
  404c34:	b.ne	404c48 <wcrtomb@plt+0x1dc8>  // b.any
  404c38:	ldr	x1, [x0, #8]
  404c3c:	add	x1, x1, #0x1
  404c40:	str	x1, [x0, #8]
  404c44:	b	404cb4 <wcrtomb@plt+0x1e34>
  404c48:	ldr	w1, [x24]
  404c4c:	cmp	w1, #0x2
  404c50:	ldrb	w1, [x3, #1]
  404c54:	b.ne	404c70 <wcrtomb@plt+0x1df0>  // b.any
  404c58:	ldr	x4, [x25]
  404c5c:	ubfiz	x2, x1, #1, #8
  404c60:	ldrh	w2, [x4, x2]
  404c64:	tbnz	w2, #11, 404c70 <wcrtomb@plt+0x1df0>
  404c68:	strb	w1, [x3]
  404c6c:	b	404c38 <wcrtomb@plt+0x1db8>
  404c70:	cmp	w1, #0x55
  404c74:	b.eq	404cfc <wcrtomb@plt+0x1e7c>  // b.none
  404c78:	b.hi	404ccc <wcrtomb@plt+0x1e4c>  // b.pmore
  404c7c:	cmp	w1, #0x45
  404c80:	b.eq	404d04 <wcrtomb@plt+0x1e84>  // b.none
  404c84:	b.hi	404cbc <wcrtomb@plt+0x1e3c>  // b.pmore
  404c88:	sub	w2, w1, #0x30
  404c8c:	and	w4, w2, #0xff
  404c90:	cmp	w4, #0x9
  404c94:	b.hi	404c68 <wcrtomb@plt+0x1de8>  // b.pmore
  404c98:	ldrb	w1, [x23, #32]
  404c9c:	str	w2, [x0, #16]
  404ca0:	ubfx	x4, x1, #4, #4
  404ca4:	cmp	w2, w4
  404ca8:	b.le	404cb4 <wcrtomb@plt+0x1e34>
  404cac:	bfi	w1, w2, #4, #4
  404cb0:	strb	w1, [x23, #32]
  404cb4:	mov	w2, w28
  404cb8:	b	404ce0 <wcrtomb@plt+0x1e60>
  404cbc:	cmp	w1, #0x4c
  404cc0:	b.ne	404c68 <wcrtomb@plt+0x1de8>  // b.any
  404cc4:	mov	w28, #0x2                   	// #2
  404cc8:	b	404cb4 <wcrtomb@plt+0x1e34>
  404ccc:	cmp	w1, #0x6c
  404cd0:	b.eq	404cf4 <wcrtomb@plt+0x1e74>  // b.none
  404cd4:	orr	w2, w28, #0x4
  404cd8:	cmp	w1, #0x75
  404cdc:	b.ne	404c68 <wcrtomb@plt+0x1de8>  // b.any
  404ce0:	add	x27, x3, #0x2
  404ce4:	mov	x22, x0
  404ce8:	mov	x3, x6
  404cec:	add	x3, x3, #0x1
  404cf0:	b	404b64 <wcrtomb@plt+0x1ce4>
  404cf4:	orr	w2, w28, #0x8
  404cf8:	b	404ce0 <wcrtomb@plt+0x1e60>
  404cfc:	mov	w28, #0x1                   	// #1
  404d00:	b	404cb4 <wcrtomb@plt+0x1e34>
  404d04:	mov	w28, #0x0                   	// #0
  404d08:	mov	w2, #0x0                   	// #0
  404d0c:	b	404ce0 <wcrtomb@plt+0x1e60>
  404d10:	cmp	w0, #0x26
  404d14:	b.ne	404cec <wcrtomb@plt+0x1e6c>  // b.any
  404d18:	sub	x1, x3, x27
  404d1c:	mov	x0, x27
  404d20:	stp	x3, x5, [sp, #104]
  404d24:	str	x6, [sp, #120]
  404d28:	bl	403418 <wcrtomb@plt+0x598>
  404d2c:	ldr	x6, [sp, #120]
  404d30:	str	x0, [x22, #24]
  404d34:	mov	w2, w28
  404d38:	mov	x22, x0
  404d3c:	mov	x27, x6
  404d40:	str	wzr, [x0, #16]
  404d44:	ldp	x3, x5, [sp, #104]
  404d48:	b	404cec <wcrtomb@plt+0x1e6c>
  404d4c:	sub	w1, w0, #0x65
  404d50:	cmp	w1, #0xb
  404d54:	b.hi	404d74 <wcrtomb@plt+0x1ef4>  // b.pmore
  404d58:	ldr	x0, [sp, #128]
  404d5c:	ldrb	w0, [x0, w1, uxtw]
  404d60:	adr	x1, 404d6c <wcrtomb@plt+0x1eec>
  404d64:	add	x0, x1, w0, sxtb #2
  404d68:	br	x0
  404d6c:	cmp	w0, #0x23
  404d70:	b.eq	404ee8 <wcrtomb@plt+0x2068>  // b.none
  404d74:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404d78:	add	x1, x1, #0xe4
  404d7c:	add	x1, x1, #0x180
  404d80:	mov	w2, #0x5                   	// #5
  404d84:	b	404520 <wcrtomb@plt+0x16a0>
  404d88:	cmp	w0, #0x49
  404d8c:	b.eq	404db0 <wcrtomb@plt+0x1f30>  // b.none
  404d90:	cmp	w0, #0x4d
  404d94:	b.eq	404dc4 <wcrtomb@plt+0x1f44>  // b.none
  404d98:	cmp	w0, #0x3b
  404d9c:	b	404bf8 <wcrtomb@plt+0x1d78>
  404da0:	cmp	w0, #0x77
  404da4:	b.eq	404e50 <wcrtomb@plt+0x1fd0>  // b.none
  404da8:	cmp	w0, #0x7d
  404dac:	b	404d70 <wcrtomb@plt+0x1ef0>
  404db0:	ldr	w0, [x24]
  404db4:	cmp	w0, #0x2
  404db8:	b.eq	404d74 <wcrtomb@plt+0x1ef4>  // b.none
  404dbc:	orr	w23, w23, #0x2
  404dc0:	b	404bb8 <wcrtomb@plt+0x1d38>
  404dc4:	ldr	w0, [x24]
  404dc8:	cmp	w0, #0x2
  404dcc:	b.eq	404d74 <wcrtomb@plt+0x1ef4>  // b.none
  404dd0:	orr	w23, w23, #0x4
  404dd4:	b	404bb8 <wcrtomb@plt+0x1d38>
  404dd8:	ldr	w0, [x24]
  404ddc:	cmp	w0, #0x2
  404de0:	b.eq	404d74 <wcrtomb@plt+0x1ef4>  // b.none
  404de4:	ldrb	w0, [x26, #32]
  404de8:	orr	w0, w0, #0x8
  404dec:	strb	w0, [x26, #32]
  404df0:	b	404bb8 <wcrtomb@plt+0x1d38>
  404df4:	ldrb	w0, [x26, #32]
  404df8:	tst	w0, #0x6
  404dfc:	b.eq	404e14 <wcrtomb@plt+0x1f94>  // b.none
  404e00:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404e04:	add	x1, x1, #0xe4
  404e08:	add	x1, x1, #0x196
  404e0c:	mov	w2, #0x5                   	// #5
  404e10:	b	404520 <wcrtomb@plt+0x16a0>
  404e14:	ubfx	x1, x0, #3, #1
  404e18:	ubfx	x2, x0, #1, #2
  404e1c:	lsl	w1, w25, w1
  404e20:	orr	w1, w1, w2
  404e24:	bfi	w0, w1, #1, #2
  404e28:	b	404dec <wcrtomb@plt+0x1f6c>
  404e2c:	ldrb	w0, [x26, #32]
  404e30:	tbz	w0, #0, 404e48 <wcrtomb@plt+0x1fc8>
  404e34:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404e38:	add	x1, x1, #0xe4
  404e3c:	add	x1, x1, #0x1ba
  404e40:	mov	w2, #0x5                   	// #5
  404e44:	b	404520 <wcrtomb@plt+0x16a0>
  404e48:	orr	w0, w0, #0x1
  404e4c:	b	404dec <wcrtomb@plt+0x1f6c>
  404e50:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404e54:	mov	w2, #0x1                   	// #1
  404e58:	ldr	x1, [x0, #1168]
  404e5c:	add	x0, x19, #0xd8
  404e60:	bl	4038c8 <wcrtomb@plt+0xa48>
  404e64:	str	x0, [x26, #24]
  404e68:	ldr	x24, [x20, #24]
  404e6c:	mov	w1, w23
  404e70:	ldr	x0, [sp, #96]
  404e74:	ldrb	w2, [x24, #32]
  404e78:	ubfx	x2, x2, #4, #4
  404e7c:	add	w2, w2, #0x1
  404e80:	bl	408120 <wcrtomb@plt+0x52a0>
  404e84:	str	x0, [x24]
  404e88:	ldr	x0, [sp, #96]
  404e8c:	bl	4094a4 <wcrtomb@plt+0x6624>
  404e90:	ldr	x0, [x20, #24]
  404e94:	ldrb	w0, [x0, #32]
  404e98:	tbz	w0, #3, 404810 <wcrtomb@plt+0x1990>
  404e9c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404ea0:	ldrb	w0, [x0, #1932]
  404ea4:	cbz	w0, 404810 <wcrtomb@plt+0x1990>
  404ea8:	b	404898 <wcrtomb@plt+0x1a18>
  404eac:	ldr	x1, [x26, #16]
  404eb0:	cbz	x1, 404ec8 <wcrtomb@plt+0x2048>
  404eb4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404eb8:	add	x1, x1, #0xe4
  404ebc:	add	x1, x1, #0x1de
  404ec0:	mov	w2, #0x5                   	// #5
  404ec4:	b	404520 <wcrtomb@plt+0x16a0>
  404ec8:	bl	4036a4 <wcrtomb@plt+0x824>
  404ecc:	str	x0, [x26, #16]
  404ed0:	cbnz	x0, 404bb8 <wcrtomb@plt+0x1d38>
  404ed4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404ed8:	add	x1, x1, #0xe4
  404edc:	add	x1, x1, #0x205
  404ee0:	mov	w2, #0x5                   	// #5
  404ee4:	b	404524 <wcrtomb@plt+0x16a4>
  404ee8:	mov	w0, w1
  404eec:	bl	403578 <wcrtomb@plt+0x6f8>
  404ef0:	b	404e68 <wcrtomb@plt+0x1fe8>
  404ef4:	bl	4035f0 <wcrtomb@plt+0x770>
  404ef8:	cmp	w0, #0xa
  404efc:	b	404bf8 <wcrtomb@plt+0x1d78>
  404f00:	bl	4035f0 <wcrtomb@plt+0x770>
  404f04:	mov	w23, w0
  404f08:	mov	w1, #0x0                   	// #0
  404f0c:	bl	403a74 <wcrtomb@plt+0xbf4>
  404f10:	mov	x26, x0
  404f14:	cbnz	x0, 404f2c <wcrtomb@plt+0x20ac>
  404f18:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  404f1c:	add	x1, x1, #0xe4
  404f20:	add	x1, x1, #0x167
  404f24:	mov	w2, #0x5                   	// #5
  404f28:	b	404524 <wcrtomb@plt+0x16a4>
  404f2c:	bl	4093d4 <wcrtomb@plt+0x6554>
  404f30:	mov	x22, x0
  404f34:	mov	x0, x26
  404f38:	bl	4093dc <wcrtomb@plt+0x655c>
  404f3c:	mov	w2, #0x0                   	// #0
  404f40:	mov	x1, x0
  404f44:	mov	x0, x22
  404f48:	bl	403fb8 <wcrtomb@plt+0x1138>
  404f4c:	mov	w1, #0x0                   	// #0
  404f50:	mov	x24, x0
  404f54:	mov	w0, w23
  404f58:	bl	403a74 <wcrtomb@plt+0xbf4>
  404f5c:	mov	x25, x0
  404f60:	cbz	x0, 404f18 <wcrtomb@plt+0x2098>
  404f64:	bl	4093d4 <wcrtomb@plt+0x6554>
  404f68:	str	x0, [sp, #104]
  404f6c:	mov	x0, x25
  404f70:	bl	4093dc <wcrtomb@plt+0x655c>
  404f74:	mov	x1, x0
  404f78:	mov	w2, #0x0                   	// #0
  404f7c:	ldr	x0, [sp, #104]
  404f80:	bl	403fb8 <wcrtomb@plt+0x1138>
  404f84:	mov	x23, x0
  404f88:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  404f8c:	add	x28, x0, #0x8f4
  404f90:	ldr	w0, [x0, #2292]
  404f94:	cmp	w0, #0x1
  404f98:	b.le	405140 <wcrtomb@plt+0x22c0>
  404f9c:	mov	x0, x24
  404fa0:	mov	x1, #0x8                   	// #8
  404fa4:	bl	40fd44 <wcrtomb@plt+0xcec4>
  404fa8:	mov	x27, #0x0                   	// #0
  404fac:	mov	x4, #0x0                   	// #0
  404fb0:	str	x0, [sp, #120]
  404fb4:	str	xzr, [sp, #192]
  404fb8:	cmp	x4, x24
  404fbc:	b.cc	405018 <wcrtomb@plt+0x2198>  // b.lo, b.ul, b.last
  404fc0:	lsl	x0, x27, #1
  404fc4:	mov	x1, #0x8                   	// #8
  404fc8:	add	x0, x0, #0x1
  404fcc:	mov	x24, #0x0                   	// #0
  404fd0:	str	xzr, [sp, #192]
  404fd4:	bl	40fd44 <wcrtomb@plt+0xcec4>
  404fd8:	str	x0, [x20, #24]
  404fdc:	mov	x20, #0x0                   	// #0
  404fe0:	str	x0, [sp, #96]
  404fe4:	str	x0, [sp, #112]
  404fe8:	cmp	x20, x27
  404fec:	b.ne	405064 <wcrtomb@plt+0x21e4>  // b.any
  404ff0:	ldr	x0, [sp, #112]
  404ff4:	lsl	x4, x20, #4
  404ff8:	cmp	x24, x23
  404ffc:	str	xzr, [x0, x4]
  405000:	b.ne	40506c <wcrtomb@plt+0x21ec>  // b.any
  405004:	bl	403efc <wcrtomb@plt+0x107c>
  405008:	mov	x0, x26
  40500c:	bl	4094a4 <wcrtomb@plt+0x6624>
  405010:	mov	x0, x25
  405014:	b	404a38 <wcrtomb@plt+0x1bb8>
  405018:	ldr	w0, [x28]
  40501c:	cmp	w0, #0x1
  405020:	b.eq	40504c <wcrtomb@plt+0x21cc>  // b.none
  405024:	add	x1, x22, x4
  405028:	sub	x2, x24, x4
  40502c:	add	x3, sp, #0xc0
  405030:	mov	x0, #0x0                   	// #0
  405034:	str	x4, [sp, #96]
  405038:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  40503c:	sub	x1, x0, #0x1
  405040:	cmn	x1, #0x4
  405044:	ldr	x4, [sp, #96]
  405048:	b.ls	405050 <wcrtomb@plt+0x21d0>  // b.plast
  40504c:	mov	x0, #0x1                   	// #1
  405050:	ldr	x1, [sp, #120]
  405054:	add	x4, x4, x0
  405058:	str	x0, [x1, x27, lsl #3]
  40505c:	add	x27, x27, #0x1
  405060:	b	404fb8 <wcrtomb@plt+0x2138>
  405064:	cmp	x24, x23
  405068:	b.cc	405080 <wcrtomb@plt+0x2200>  // b.lo, b.ul, b.last
  40506c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405070:	add	x1, x1, #0xe4
  405074:	add	x1, x1, #0x232
  405078:	mov	w2, #0x5                   	// #5
  40507c:	b	404520 <wcrtomb@plt+0x16a0>
  405080:	ldr	x0, [sp, #120]
  405084:	ldr	x2, [x0, x20, lsl #3]
  405088:	str	x2, [sp, #136]
  40508c:	add	x0, x2, #0x1
  405090:	bl	40fd78 <wcrtomb@plt+0xcef8>
  405094:	str	x0, [sp, #144]
  405098:	ldr	x1, [sp, #96]
  40509c:	ldr	x2, [sp, #136]
  4050a0:	str	x0, [x1]
  4050a4:	mov	x1, x22
  4050a8:	bl	402750 <memcpy@plt>
  4050ac:	ldp	x2, x3, [sp, #136]
  4050b0:	ldr	x0, [sp, #104]
  4050b4:	add	x1, x0, x24
  4050b8:	ldr	w0, [x28]
  4050bc:	strb	wzr, [x3, x2]
  4050c0:	add	x22, x22, x2
  4050c4:	cmp	w0, #0x1
  4050c8:	b.eq	4050f4 <wcrtomb@plt+0x2274>  // b.none
  4050cc:	sub	x2, x23, x24
  4050d0:	add	x3, sp, #0xc0
  4050d4:	mov	x0, #0x0                   	// #0
  4050d8:	str	x1, [sp, #136]
  4050dc:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  4050e0:	mov	x2, x0
  4050e4:	sub	x0, x0, #0x1
  4050e8:	cmn	x0, #0x4
  4050ec:	ldr	x1, [sp, #136]
  4050f0:	b.ls	4050f8 <wcrtomb@plt+0x2278>  // b.plast
  4050f4:	mov	x2, #0x1                   	// #1
  4050f8:	add	x0, x2, #0x1
  4050fc:	str	x2, [sp, #136]
  405100:	str	x1, [sp, #152]
  405104:	bl	40fd78 <wcrtomb@plt+0xcef8>
  405108:	ldr	x1, [sp, #96]
  40510c:	str	x0, [sp, #144]
  405110:	ldr	x2, [sp, #136]
  405114:	add	x20, x20, #0x1
  405118:	str	x0, [x1, #8]
  40511c:	ldr	x1, [sp, #152]
  405120:	bl	402750 <memcpy@plt>
  405124:	ldp	x2, x3, [sp, #136]
  405128:	ldr	x0, [sp, #96]
  40512c:	add	x0, x0, #0x10
  405130:	str	x0, [sp, #96]
  405134:	add	x24, x24, x2
  405138:	strb	wzr, [x3, x2]
  40513c:	b	404fe8 <wcrtomb@plt+0x2168>
  405140:	ldp	x1, x0, [x19, #24]
  405144:	sub	x0, x0, x1
  405148:	cmp	x0, #0xff
  40514c:	b.hi	40515c <wcrtomb@plt+0x22dc>  // b.pmore
  405150:	mov	x0, x19
  405154:	mov	x1, #0x100                 	// #256
  405158:	bl	40fff8 <_obstack_newchunk@@Base>
  40515c:	ldp	x2, x1, [x19, #16]
  405160:	add	x1, x1, #0x100
  405164:	cmp	x1, x2
  405168:	b.ne	405178 <wcrtomb@plt+0x22f8>  // b.any
  40516c:	ldrb	w0, [x19, #80]
  405170:	orr	w0, w0, #0x2
  405174:	strb	w0, [x19, #80]
  405178:	ldr	x0, [x19, #48]
  40517c:	ldr	x3, [x19, #32]
  405180:	add	x1, x1, x0
  405184:	bic	x0, x1, x0
  405188:	ldr	x1, [x19, #8]
  40518c:	sub	x4, x0, x1
  405190:	sub	x1, x3, x1
  405194:	cmp	x4, x1
  405198:	csel	x0, x0, x3, ls  // ls = plast
  40519c:	stp	x0, x0, [x19, #16]
  4051a0:	cmp	x24, x23
  4051a4:	b.ne	40506c <wcrtomb@plt+0x21ec>  // b.any
  4051a8:	mov	x0, #0x0                   	// #0
  4051ac:	strb	w0, [x2, x0]
  4051b0:	add	x0, x0, #0x1
  4051b4:	cmp	x0, #0x100
  4051b8:	b.ne	4051ac <wcrtomb@plt+0x232c>  // b.any
  4051bc:	mov	x0, #0x0                   	// #0
  4051c0:	cmp	x23, x0
  4051c4:	b.ne	4051d0 <wcrtomb@plt+0x2350>  // b.any
  4051c8:	str	x2, [x20, #24]
  4051cc:	b	405004 <wcrtomb@plt+0x2184>
  4051d0:	ldr	x1, [sp, #104]
  4051d4:	ldrb	w3, [x1, x0]
  4051d8:	ldrb	w1, [x22, x0]
  4051dc:	add	x0, x0, #0x1
  4051e0:	strb	w3, [x2, x1]
  4051e4:	b	4051c0 <wcrtomb@plt+0x2340>
  4051e8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4051ec:	add	x1, x1, #0xe4
  4051f0:	add	x1, x1, #0x105
  4051f4:	mov	w2, #0x5                   	// #5
  4051f8:	b	404520 <wcrtomb@plt+0x16a0>
  4051fc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405200:	ldr	w0, [x0, #2296]
  405204:	cmp	w0, #0x2
  405208:	b.ne	405234 <wcrtomb@plt+0x23b4>  // b.any
  40520c:	ldr	x0, [x19, #168]
  405210:	cbz	x0, 405234 <wcrtomb@plt+0x23b4>
  405214:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405218:	add	x1, x1, #0xe4
  40521c:	add	x1, x1, #0x2e7
  405220:	mov	w2, #0x5                   	// #5
  405224:	b	404520 <wcrtomb@plt+0x16a0>
  405228:	cmp	w22, #0x21
  40522c:	b.ne	404644 <wcrtomb@plt+0x17c4>  // b.any
  405230:	b	4045ec <wcrtomb@plt+0x176c>
  405234:	mov	x0, x21
  405238:	ldp	x19, x20, [sp, #16]
  40523c:	ldp	x21, x22, [sp, #32]
  405240:	ldp	x23, x24, [sp, #48]
  405244:	ldp	x25, x26, [sp, #64]
  405248:	ldp	x27, x28, [sp, #80]
  40524c:	ldp	x29, x30, [sp], #224
  405250:	ret
  405254:	stp	x29, x30, [sp, #-32]!
  405258:	mov	x29, sp
  40525c:	stp	x19, x20, [sp, #16]
  405260:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  405264:	add	x19, x19, #0x548
  405268:	stp	x1, x1, [x19, #112]
  40526c:	add	x1, x1, x2
  405270:	str	x1, [x19, #128]
  405274:	ldr	x1, [x19, #224]
  405278:	stp	xzr, xzr, [x19, #88]
  40527c:	add	x1, x1, #0x1
  405280:	str	x1, [x19, #104]
  405284:	str	xzr, [x19, #136]
  405288:	str	x1, [x19, #224]
  40528c:	bl	4043f0 <wcrtomb@plt+0x1570>
  405290:	stp	xzr, xzr, [x19, #112]
  405294:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  405298:	str	xzr, [x19, #128]
  40529c:	strb	wzr, [x1, #1112]
  4052a0:	ldp	x19, x20, [sp, #16]
  4052a4:	ldp	x29, x30, [sp], #32
  4052a8:	ret
  4052ac:	stp	x29, x30, [sp, #-48]!
  4052b0:	mov	x29, sp
  4052b4:	stp	x19, x20, [sp, #16]
  4052b8:	mov	x20, x1
  4052bc:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  4052c0:	add	x19, x19, #0x548
  4052c4:	stp	x21, x22, [sp, #32]
  4052c8:	mov	x21, x0
  4052cc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4052d0:	mov	x22, x0
  4052d4:	ldr	x1, [x0, #1328]
  4052d8:	str	x1, [x19, #136]
  4052dc:	ldrb	w1, [x20]
  4052e0:	cmp	w1, #0x2d
  4052e4:	b.ne	4052f0 <wcrtomb@plt+0x2470>  // b.any
  4052e8:	ldrb	w0, [x20, #1]
  4052ec:	cbz	w0, 405308 <wcrtomb@plt+0x2488>
  4052f0:	mov	x0, x20
  4052f4:	mov	w2, #0x1                   	// #1
  4052f8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4052fc:	add	x1, x1, #0xf9d
  405300:	bl	408ba8 <wcrtomb@plt+0x5d28>
  405304:	str	x0, [x19, #136]
  405308:	mov	x0, #0x1                   	// #1
  40530c:	stp	x20, x0, [x19, #88]
  405310:	mov	x0, x21
  405314:	str	xzr, [x19, #104]
  405318:	bl	4043f0 <wcrtomb@plt+0x1570>
  40531c:	ldr	x1, [x22, #1328]
  405320:	mov	x20, x0
  405324:	ldr	x0, [x19, #136]
  405328:	cmp	x0, x1
  40532c:	b.eq	405334 <wcrtomb@plt+0x24b4>  // b.none
  405330:	bl	409058 <wcrtomb@plt+0x61d8>
  405334:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405338:	str	xzr, [x19, #136]
  40533c:	ldp	x21, x22, [sp, #32]
  405340:	strb	wzr, [x0, #1112]
  405344:	mov	x0, x20
  405348:	ldp	x19, x20, [sp, #16]
  40534c:	ldp	x29, x30, [sp], #48
  405350:	ret
  405354:	stp	x29, x30, [sp, #-64]!
  405358:	mov	x29, sp
  40535c:	stp	x19, x20, [sp, #16]
  405360:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  405364:	add	x19, x19, #0x548
  405368:	stp	x21, x22, [sp, #32]
  40536c:	mov	x22, x0
  405370:	ldr	x0, [x19, #184]
  405374:	stp	x23, x24, [sp, #48]
  405378:	cbz	x0, 4053a8 <wcrtomb@plt+0x2528>
  40537c:	ldp	x2, x3, [x0, #16]
  405380:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405384:	add	x1, x1, #0xe4
  405388:	stp	x2, x3, [x19, #88]
  40538c:	add	x1, x1, #0x48
  405390:	mov	w2, #0x5                   	// #5
  405394:	ldr	x0, [x0, #32]
  405398:	str	x0, [x19, #104]
  40539c:	mov	x0, #0x0                   	// #0
  4053a0:	bl	402d60 <dcgettext@plt>
  4053a4:	bl	4037b4 <wcrtomb@plt+0x934>
  4053a8:	ldr	x21, [x19, #168]
  4053ac:	cbz	x21, 4053e8 <wcrtomb@plt+0x2568>
  4053b0:	mov	x0, x21
  4053b4:	bl	4093dc <wcrtomb@plt+0x655c>
  4053b8:	ldr	x23, [x19, #176]
  4053bc:	mov	x20, x0
  4053c0:	str	x0, [x23, #8]
  4053c4:	cbz	x0, 4053dc <wcrtomb@plt+0x255c>
  4053c8:	mov	x0, x21
  4053cc:	bl	4093d4 <wcrtomb@plt+0x6554>
  4053d0:	mov	x1, x20
  4053d4:	bl	40fd80 <wcrtomb@plt+0xcf00>
  4053d8:	str	x0, [x23]
  4053dc:	ldr	x0, [x19, #168]
  4053e0:	bl	4094a4 <wcrtomb@plt+0x6624>
  4053e4:	str	xzr, [x19, #168]
  4053e8:	ldr	x21, [x19, #200]
  4053ec:	mov	x24, #0x28                  	// #40
  4053f0:	ldr	x20, [x19, #192]
  4053f4:	cbz	x21, 405460 <wcrtomb@plt+0x25e0>
  4053f8:	ldr	x23, [x21, #8]
  4053fc:	b	405414 <wcrtomb@plt+0x2594>
  405400:	ldr	x0, [x20, #8]
  405404:	mov	x1, x23
  405408:	bl	402bf0 <strcmp@plt>
  40540c:	cbz	w0, 405494 <wcrtomb@plt+0x2614>
  405410:	ldr	x20, [x20, #40]
  405414:	cbnz	x20, 405400 <wcrtomb@plt+0x2580>
  405418:	ldrb	w0, [x23]
  40541c:	cbz	w0, 40543c <wcrtomb@plt+0x25bc>
  405420:	mov	w2, #0x5                   	// #5
  405424:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x9e54>
  405428:	mov	x0, #0x0                   	// #0
  40542c:	add	x1, x1, #0xfa0
  405430:	bl	402d60 <dcgettext@plt>
  405434:	ldr	x1, [x21, #8]
  405438:	bl	408a48 <wcrtomb@plt+0x5bc8>
  40543c:	ldr	x1, [x22]
  405440:	ldr	x0, [x21]
  405444:	madd	x0, x0, x24, x1
  405448:	ldr	x1, [x22, #16]
  40544c:	ldr	x21, [x21, #40]
  405450:	str	x1, [x0, #24]
  405454:	mov	x0, x23
  405458:	bl	402c20 <free@plt>
  40545c:	b	4053f0 <wcrtomb@plt+0x2570>
  405460:	str	xzr, [x19, #200]
  405464:	cbnz	x20, 405480 <wcrtomb@plt+0x2600>
  405468:	str	xzr, [x19, #192]
  40546c:	ldp	x19, x20, [sp, #16]
  405470:	ldp	x21, x22, [sp, #32]
  405474:	ldp	x23, x24, [sp, #48]
  405478:	ldp	x29, x30, [sp], #64
  40547c:	ret
  405480:	ldr	x0, [x20, #8]
  405484:	ldr	x21, [x20, #40]
  405488:	bl	402c20 <free@plt>
  40548c:	mov	x20, x21
  405490:	b	405464 <wcrtomb@plt+0x25e4>
  405494:	ldr	x1, [x22]
  405498:	ldr	x0, [x21]
  40549c:	madd	x0, x0, x24, x1
  4054a0:	ldr	x1, [x20]
  4054a4:	b	40544c <wcrtomb@plt+0x25cc>
  4054a8:	stp	x29, x30, [sp, #-32]!
  4054ac:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4054b0:	mov	x29, sp
  4054b4:	str	x19, [sp, #16]
  4054b8:	ldr	x19, [x0, #1560]
  4054bc:	cbnz	x19, 4054cc <wcrtomb@plt+0x264c>
  4054c0:	ldr	x19, [sp, #16]
  4054c4:	ldp	x29, x30, [sp], #32
  4054c8:	ret
  4054cc:	ldr	x0, [x19, #16]
  4054d0:	cbz	x0, 4054d8 <wcrtomb@plt+0x2658>
  4054d4:	bl	402ab0 <rewind@plt>
  4054d8:	ldr	x19, [x19, #24]
  4054dc:	b	4054bc <wcrtomb@plt+0x263c>
  4054e0:	stp	x29, x30, [sp, #-32]!
  4054e4:	mov	x29, sp
  4054e8:	stp	x19, x20, [sp, #16]
  4054ec:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  4054f0:	add	x19, x19, #0x548
  4054f4:	ldr	x20, [x19, #208]
  4054f8:	cbnz	x20, 405524 <wcrtomb@plt+0x26a4>
  4054fc:	ldr	x20, [x19, #216]
  405500:	cbnz	x20, 40553c <wcrtomb@plt+0x26bc>
  405504:	ldr	x20, [x19, #208]
  405508:	cbnz	x20, 405554 <wcrtomb@plt+0x26d4>
  40550c:	ldr	x20, [x19, #216]
  405510:	cbnz	x20, 405568 <wcrtomb@plt+0x26e8>
  405514:	stp	xzr, xzr, [x19, #208]
  405518:	ldp	x19, x20, [sp, #16]
  40551c:	ldp	x29, x30, [sp], #32
  405520:	ret
  405524:	ldr	x0, [x20]
  405528:	cbz	x0, 405534 <wcrtomb@plt+0x26b4>
  40552c:	bl	402c20 <free@plt>
  405530:	str	xzr, [x20]
  405534:	ldr	x20, [x20, #24]
  405538:	b	4054f8 <wcrtomb@plt+0x2678>
  40553c:	ldr	x0, [x20]
  405540:	cbz	x0, 40554c <wcrtomb@plt+0x26cc>
  405544:	bl	402c20 <free@plt>
  405548:	str	xzr, [x20]
  40554c:	ldr	x20, [x20, #24]
  405550:	b	405500 <wcrtomb@plt+0x2680>
  405554:	ldr	x0, [x20, #16]
  405558:	cbz	x0, 405560 <wcrtomb@plt+0x26e0>
  40555c:	bl	409058 <wcrtomb@plt+0x61d8>
  405560:	ldr	x20, [x20, #24]
  405564:	b	405508 <wcrtomb@plt+0x2688>
  405568:	ldr	x0, [x20, #16]
  40556c:	cbz	x0, 405574 <wcrtomb@plt+0x26f4>
  405570:	bl	409058 <wcrtomb@plt+0x61d8>
  405574:	ldr	x20, [x20, #24]
  405578:	b	405510 <wcrtomb@plt+0x2690>
  40557c:	cbz	x0, 405590 <wcrtomb@plt+0x2710>
  405580:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  405584:	ldr	x0, [x0]
  405588:	ldr	x1, [x1, #1320]
  40558c:	b	402d70 <fputs_unlocked@plt>
  405590:	ret
  405594:	stp	x29, x30, [sp, #-32]!
  405598:	mov	x29, sp
  40559c:	str	x19, [sp, #16]
  4055a0:	and	w19, w0, #0xff
  4055a4:	bl	402c00 <__ctype_b_loc@plt>
  4055a8:	ldr	x0, [x0]
  4055ac:	ubfiz	x1, x19, #1, #8
  4055b0:	ldrh	w0, [x0, x1]
  4055b4:	tbz	w0, #14, 4055c8 <wcrtomb@plt+0x2748>
  4055b8:	cmp	w19, #0x5c
  4055bc:	b.eq	4055c8 <wcrtomb@plt+0x2748>  // b.none
  4055c0:	mov	w0, w19
  4055c4:	b	40562c <wcrtomb@plt+0x27ac>
  4055c8:	mov	w0, #0x5c                  	// #92
  4055cc:	bl	402a40 <putchar_unlocked@plt>
  4055d0:	cmp	w19, #0xd
  4055d4:	b.hi	405604 <wcrtomb@plt+0x2784>  // b.pmore
  4055d8:	cmp	w19, #0x6
  4055dc:	b.ls	40560c <wcrtomb@plt+0x278c>  // b.plast
  4055e0:	sub	w1, w19, #0x7
  4055e4:	cmp	w1, #0x6
  4055e8:	b.hi	40560c <wcrtomb@plt+0x278c>  // b.pmore
  4055ec:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  4055f0:	add	x0, x0, #0x4e0
  4055f4:	ldrb	w0, [x0, w1, uxtw]
  4055f8:	adr	x1, 405604 <wcrtomb@plt+0x2784>
  4055fc:	add	x0, x1, w0, sxtb #2
  405600:	br	x0
  405604:	cmp	w19, #0x5c
  405608:	b.eq	4055c0 <wcrtomb@plt+0x2740>  // b.none
  40560c:	mov	w2, w19
  405610:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405614:	ldr	x19, [sp, #16]
  405618:	add	x1, x1, #0x49c
  40561c:	ldp	x29, x30, [sp], #32
  405620:	mov	w0, #0x1                   	// #1
  405624:	b	4029f0 <__printf_chk@plt>
  405628:	mov	w0, #0x61                  	// #97
  40562c:	ldr	x19, [sp, #16]
  405630:	ldp	x29, x30, [sp], #32
  405634:	b	402a40 <putchar_unlocked@plt>
  405638:	mov	w0, #0x66                  	// #102
  40563c:	b	40562c <wcrtomb@plt+0x27ac>
  405640:	mov	w0, #0x72                  	// #114
  405644:	b	40562c <wcrtomb@plt+0x27ac>
  405648:	mov	w0, #0x74                  	// #116
  40564c:	b	40562c <wcrtomb@plt+0x27ac>
  405650:	mov	w0, #0x76                  	// #118
  405654:	b	40562c <wcrtomb@plt+0x27ac>
  405658:	mov	w0, #0x6e                  	// #110
  40565c:	b	40562c <wcrtomb@plt+0x27ac>
  405660:	cbnz	x0, 405678 <wcrtomb@plt+0x27f8>
  405664:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405668:	ldr	x1, [x0, #1320]
  40566c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  405670:	add	x0, x0, #0x4a2
  405674:	b	402d70 <fputs_unlocked@plt>
  405678:	stp	x29, x30, [sp, #-48]!
  40567c:	mov	x29, sp
  405680:	stp	x19, x20, [sp, #16]
  405684:	mov	x19, x0
  405688:	mov	w0, #0x2f                  	// #47
  40568c:	stp	x21, x22, [sp, #32]
  405690:	bl	402a40 <putchar_unlocked@plt>
  405694:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0xae54>
  405698:	ldr	x20, [x19, #72]
  40569c:	add	x21, x21, #0x4a5
  4056a0:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x21e54>
  4056a4:	add	x20, x19, x20
  4056a8:	cmp	x19, x20
  4056ac:	b.ne	4056c4 <wcrtomb@plt+0x2844>  // b.any
  4056b0:	ldp	x19, x20, [sp, #16]
  4056b4:	mov	w0, #0x2f                  	// #47
  4056b8:	ldp	x21, x22, [sp, #32]
  4056bc:	ldp	x29, x30, [sp], #48
  4056c0:	b	402a40 <putchar_unlocked@plt>
  4056c4:	ldrb	w0, [x19, #90]
  4056c8:	cmp	w0, #0x2f
  4056cc:	b.ne	4056e4 <wcrtomb@plt+0x2864>  // b.any
  4056d0:	ldr	x1, [x22, #1320]
  4056d4:	mov	x0, x21
  4056d8:	bl	402d70 <fputs_unlocked@plt>
  4056dc:	add	x19, x19, #0x1
  4056e0:	b	4056a8 <wcrtomb@plt+0x2828>
  4056e4:	bl	405594 <wcrtomb@plt+0x2714>
  4056e8:	b	4056dc <wcrtomb@plt+0x285c>
  4056ec:	cbz	x0, 4057e4 <wcrtomb@plt+0x2964>
  4056f0:	stp	x29, x30, [sp, #-32]!
  4056f4:	mov	x29, sp
  4056f8:	ldr	w1, [x0]
  4056fc:	str	x19, [sp, #16]
  405700:	mov	x19, x0
  405704:	cmp	w1, #0x6
  405708:	b.hi	4057d8 <wcrtomb@plt+0x2958>  // b.pmore
  40570c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  405710:	add	x0, x0, #0x4e8
  405714:	ldrb	w0, [x0, w1, uxtw]
  405718:	adr	x1, 405724 <wcrtomb@plt+0x28a4>
  40571c:	add	x0, x1, w0, sxtb #2
  405720:	br	x0
  405724:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405728:	ldr	x19, [sp, #16]
  40572c:	ldp	x29, x30, [sp], #32
  405730:	ldr	x1, [x0, #1320]
  405734:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  405738:	add	x0, x0, #0x4a8
  40573c:	b	402d70 <fputs_unlocked@plt>
  405740:	ldr	x0, [x19, #24]
  405744:	bl	405660 <wcrtomb@plt+0x27e0>
  405748:	ldr	x19, [x19, #24]
  40574c:	cbz	x19, 4057d8 <wcrtomb@plt+0x2958>
  405750:	ldr	w0, [x19, #64]
  405754:	tbz	w0, #1, 405760 <wcrtomb@plt+0x28e0>
  405758:	mov	w0, #0x49                  	// #73
  40575c:	bl	402a40 <putchar_unlocked@plt>
  405760:	ldr	w0, [x19, #64]
  405764:	tbz	w0, #2, 4057d8 <wcrtomb@plt+0x2958>
  405768:	mov	w0, #0x4d                  	// #77
  40576c:	ldr	x19, [sp, #16]
  405770:	ldp	x29, x30, [sp], #32
  405774:	b	402a40 <putchar_unlocked@plt>
  405778:	ldr	x2, [x19, #8]
  40577c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405780:	add	x1, x1, #0x4bd
  405784:	ldr	x19, [sp, #16]
  405788:	mov	w0, #0x1                   	// #1
  40578c:	ldp	x29, x30, [sp], #32
  405790:	b	4029f0 <__printf_chk@plt>
  405794:	ldp	x2, x3, [x19, #8]
  405798:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40579c:	ldr	x19, [sp, #16]
  4057a0:	add	x1, x1, #0x4b4
  4057a4:	ldp	x29, x30, [sp], #32
  4057a8:	mov	w0, #0x1                   	// #1
  4057ac:	b	4029f0 <__printf_chk@plt>
  4057b0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4057b4:	add	x1, x1, #0x4bc
  4057b8:	ldr	x2, [x19, #16]
  4057bc:	b	405784 <wcrtomb@plt+0x2904>
  4057c0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4057c4:	add	x1, x1, #0x4b7
  4057c8:	ldr	x2, [x19, #16]
  4057cc:	b	405784 <wcrtomb@plt+0x2904>
  4057d0:	mov	w0, #0x24                  	// #36
  4057d4:	b	40576c <wcrtomb@plt+0x28ec>
  4057d8:	ldr	x19, [sp, #16]
  4057dc:	ldp	x29, x30, [sp], #32
  4057e0:	ret
  4057e4:	ret
  4057e8:	cbz	x0, 405ccc <wcrtomb@plt+0x2e4c>
  4057ec:	stp	x29, x30, [sp, #-80]!
  4057f0:	mov	x29, sp
  4057f4:	stp	x19, x20, [sp, #16]
  4057f8:	mov	x20, x0
  4057fc:	mov	x19, x1
  405800:	stp	x21, x22, [sp, #32]
  405804:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x21e54>
  405808:	stp	x23, x24, [sp, #48]
  40580c:	str	x25, [sp, #64]
  405810:	ldrb	w0, [x1, #21]
  405814:	cmp	w0, #0x7d
  405818:	b.ne	405828 <wcrtomb@plt+0x29a8>  // b.any
  40581c:	ldr	w0, [x22, #1584]
  405820:	sub	w0, w0, #0x1
  405824:	str	w0, [x22, #1584]
  405828:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0xae54>
  40582c:	add	x24, x22, #0x630
  405830:	add	x23, x23, #0x5c2
  405834:	mov	w21, #0x0                   	// #0
  405838:	adrp	x25, 432000 <_obstack_memory_used@@Base+0x21e54>
  40583c:	ldr	w0, [x24]
  405840:	cmp	w0, w21
  405844:	b.gt	4058d4 <wcrtomb@plt+0x2a54>
  405848:	ldr	x0, [x19]
  40584c:	bl	4056ec <wcrtomb@plt+0x286c>
  405850:	ldr	x0, [x19, #8]
  405854:	cbz	x0, 405860 <wcrtomb@plt+0x29e0>
  405858:	mov	w0, #0x2c                  	// #44
  40585c:	bl	402a40 <putchar_unlocked@plt>
  405860:	ldr	x0, [x19, #8]
  405864:	bl	4056ec <wcrtomb@plt+0x286c>
  405868:	ldrb	w1, [x19, #21]
  40586c:	ldrb	w0, [x19, #20]
  405870:	cmp	w1, #0x7b
  405874:	b.eq	4058e8 <wcrtomb@plt+0x2a68>  // b.none
  405878:	cmp	w0, #0x0
  40587c:	cset	w0, ne  // ne = any
  405880:	cbz	w0, 40588c <wcrtomb@plt+0x2a0c>
  405884:	mov	w0, #0x21                  	// #33
  405888:	bl	402a40 <putchar_unlocked@plt>
  40588c:	ldr	x0, [x19]
  405890:	cbnz	x0, 40589c <wcrtomb@plt+0x2a1c>
  405894:	ldr	x0, [x19, #8]
  405898:	cbz	x0, 4058a4 <wcrtomb@plt+0x2a24>
  40589c:	mov	w0, #0x20                  	// #32
  4058a0:	bl	402a40 <putchar_unlocked@plt>
  4058a4:	ldrb	w0, [x19, #21]
  4058a8:	bl	402a40 <putchar_unlocked@plt>
  4058ac:	ldrb	w0, [x19, #21]
  4058b0:	sub	w0, w0, #0x23
  4058b4:	cmp	w0, #0x5a
  4058b8:	b.hi	405cac <wcrtomb@plt+0x2e2c>  // b.pmore
  4058bc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4058c0:	add	x1, x1, #0x4f0
  4058c4:	ldrh	w0, [x1, w0, uxtw #1]
  4058c8:	adr	x1, 4058d4 <wcrtomb@plt+0x2a54>
  4058cc:	add	x0, x1, w0, sxth #2
  4058d0:	br	x0
  4058d4:	ldr	x1, [x25, #1320]
  4058d8:	mov	x0, x23
  4058dc:	add	w21, w21, #0x1
  4058e0:	bl	402d70 <fputs_unlocked@plt>
  4058e4:	b	40583c <wcrtomb@plt+0x29bc>
  4058e8:	cmp	w0, #0x0
  4058ec:	cset	w0, eq  // eq = none
  4058f0:	b	405880 <wcrtomb@plt+0x2a00>
  4058f4:	ldr	x2, [x19, #24]
  4058f8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4058fc:	add	x1, x1, #0x47b
  405900:	mov	w0, #0x1                   	// #1
  405904:	bl	4029f0 <__printf_chk@plt>
  405908:	mov	w0, #0xa                   	// #10
  40590c:	bl	402a40 <putchar_unlocked@plt>
  405910:	ldrb	w0, [x19, #21]
  405914:	cmp	w0, #0x7b
  405918:	b.ne	405928 <wcrtomb@plt+0x2aa8>  // b.any
  40591c:	ldr	w0, [x22, #1584]
  405920:	add	w0, w0, #0x1
  405924:	str	w0, [x22, #1584]
  405928:	ldp	x19, x20, [sp, #16]
  40592c:	ldp	x21, x22, [sp, #32]
  405930:	ldp	x23, x24, [sp, #48]
  405934:	ldr	x25, [sp, #64]
  405938:	ldp	x29, x30, [sp], #80
  40593c:	ret
  405940:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0xae54>
  405944:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405948:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  40594c:	add	x3, x3, #0x5a6
  405950:	add	x1, x1, #0x4c1
  405954:	add	x0, x0, #0xf97
  405958:	mov	w2, #0x123                 	// #291
  40595c:	bl	402de0 <__assert_fail@plt>
  405960:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  405964:	mov	w0, #0x5c                  	// #92
  405968:	ldr	x1, [x20, #1320]
  40596c:	bl	402d10 <fputc_unlocked@plt>
  405970:	ldr	x2, [x19, #32]
  405974:	cbz	x2, 405908 <wcrtomb@plt+0x2a88>
  405978:	ldr	x3, [x20, #1320]
  40597c:	mov	x1, #0x1                   	// #1
  405980:	ldr	x0, [x19, #24]
  405984:	bl	402780 <fwrite_unlocked@plt>
  405988:	b	405908 <wcrtomb@plt+0x2a88>
  40598c:	ldr	x1, [x20, #16]
  405990:	ldr	x0, [x19, #24]
  405994:	cmp	x0, x1
  405998:	b.cs	405908 <wcrtomb@plt+0x2a88>  // b.hs, b.nlast
  40599c:	ldr	x1, [x20]
  4059a0:	mov	x2, #0x28                  	// #40
  4059a4:	madd	x0, x0, x2, x1
  4059a8:	ldr	x2, [x0, #24]
  4059ac:	cbz	x2, 405908 <wcrtomb@plt+0x2a88>
  4059b0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4059b4:	add	x1, x1, #0x47a
  4059b8:	b	405900 <wcrtomb@plt+0x2a80>
  4059bc:	mov	w0, #0x20                  	// #32
  4059c0:	bl	402a40 <putchar_unlocked@plt>
  4059c4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4059c8:	ldr	x2, [x19, #32]
  4059cc:	ldr	x3, [x0, #1320]
  4059d0:	b	40597c <wcrtomb@plt+0x2afc>
  4059d4:	ldr	w2, [x19, #24]
  4059d8:	cmn	w2, #0x1
  4059dc:	b.eq	405908 <wcrtomb@plt+0x2a88>  // b.none
  4059e0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4059e4:	mov	w0, #0x1                   	// #1
  4059e8:	add	x1, x1, #0x846
  4059ec:	bl	4029f0 <__printf_chk@plt>
  4059f0:	b	405908 <wcrtomb@plt+0x2a88>
  4059f4:	mov	w0, #0x20                  	// #32
  4059f8:	bl	402a40 <putchar_unlocked@plt>
  4059fc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405a00:	ldr	x1, [x0, #1320]
  405a04:	ldr	x0, [x19, #24]
  405a08:	bl	402d70 <fputs_unlocked@plt>
  405a0c:	b	405908 <wcrtomb@plt+0x2a88>
  405a10:	mov	w0, #0x20                  	// #32
  405a14:	bl	402a40 <putchar_unlocked@plt>
  405a18:	ldr	x0, [x19, #24]
  405a1c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  405a20:	ldr	x1, [x1, #1320]
  405a24:	ldr	x0, [x0]
  405a28:	b	405a08 <wcrtomb@plt+0x2b88>
  405a2c:	ldr	x20, [x19, #24]
  405a30:	cbz	x20, 405908 <wcrtomb@plt+0x2a88>
  405a34:	ldr	x0, [x20]
  405a38:	bl	405660 <wcrtomb@plt+0x27e0>
  405a3c:	ldr	x21, [x20, #8]
  405a40:	cbnz	x21, 405abc <wcrtomb@plt+0x2c3c>
  405a44:	mov	w0, #0x2f                  	// #47
  405a48:	bl	402a40 <putchar_unlocked@plt>
  405a4c:	ldr	x21, [x20]
  405a50:	cbnz	x21, 405b84 <wcrtomb@plt+0x2d04>
  405a54:	ldrb	w0, [x20, #32]
  405a58:	tbz	w0, #0, 405a64 <wcrtomb@plt+0x2be4>
  405a5c:	mov	w0, #0x67                  	// #103
  405a60:	bl	402a40 <putchar_unlocked@plt>
  405a64:	ldrb	w0, [x20, #32]
  405a68:	tbz	w0, #3, 405a74 <wcrtomb@plt+0x2bf4>
  405a6c:	mov	w0, #0x65                  	// #101
  405a70:	bl	402a40 <putchar_unlocked@plt>
  405a74:	ldrb	w0, [x20, #32]
  405a78:	tst	w0, #0x6
  405a7c:	b.eq	405a88 <wcrtomb@plt+0x2c08>  // b.none
  405a80:	mov	w0, #0x70                  	// #112
  405a84:	bl	402a40 <putchar_unlocked@plt>
  405a88:	ldr	x2, [x20, #16]
  405a8c:	cbz	x2, 405aa0 <wcrtomb@plt+0x2c20>
  405a90:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405a94:	mov	w0, #0x1                   	// #1
  405a98:	add	x1, x1, #0x4bd
  405a9c:	bl	4029f0 <__printf_chk@plt>
  405aa0:	ldr	x0, [x20, #24]
  405aa4:	cbz	x0, 405908 <wcrtomb@plt+0x2a88>
  405aa8:	mov	w0, #0x77                  	// #119
  405aac:	bl	402a40 <putchar_unlocked@plt>
  405ab0:	ldr	x0, [x20, #24]
  405ab4:	bl	40557c <wcrtomb@plt+0x26fc>
  405ab8:	b	405908 <wcrtomb@plt+0x2a88>
  405abc:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0xae54>
  405ac0:	add	x23, x23, #0x4cd
  405ac4:	mov	w24, #0x0                   	// #0
  405ac8:	ldr	w0, [x21, #20]
  405acc:	cmp	w0, w24
  405ad0:	b.eq	405af0 <wcrtomb@plt+0x2c70>  // b.none
  405ad4:	mov	w0, #0x5c                  	// #92
  405ad8:	bl	402a40 <putchar_unlocked@plt>
  405adc:	ldr	w0, [x21, #20]
  405ae0:	cbnz	w0, 405b30 <wcrtomb@plt+0x2cb0>
  405ae4:	mov	w0, #0x45                  	// #69
  405ae8:	bl	402a40 <putchar_unlocked@plt>
  405aec:	ldr	w24, [x21, #20]
  405af0:	ldr	x2, [x21, #8]
  405af4:	cbz	x2, 405b0c <wcrtomb@plt+0x2c8c>
  405af8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405afc:	mov	x1, #0x1                   	// #1
  405b00:	ldr	x3, [x0, #1320]
  405b04:	ldr	x0, [x21]
  405b08:	bl	402780 <fwrite_unlocked@plt>
  405b0c:	ldr	w2, [x21, #16]
  405b10:	cmn	w2, #0x1
  405b14:	b.eq	405b24 <wcrtomb@plt+0x2ca4>  // b.none
  405b18:	cbnz	w2, 405b74 <wcrtomb@plt+0x2cf4>
  405b1c:	mov	w0, #0x26                  	// #38
  405b20:	bl	402a40 <putchar_unlocked@plt>
  405b24:	ldr	x21, [x21, #24]
  405b28:	cbnz	x21, 405ac8 <wcrtomb@plt+0x2c48>
  405b2c:	b	405a44 <wcrtomb@plt+0x2bc4>
  405b30:	cmp	w0, #0x1
  405b34:	b.ne	405b40 <wcrtomb@plt+0x2cc0>  // b.any
  405b38:	mov	w0, #0x55                  	// #85
  405b3c:	b	405ae8 <wcrtomb@plt+0x2c68>
  405b40:	cmp	w0, #0x2
  405b44:	b.ne	405b50 <wcrtomb@plt+0x2cd0>  // b.any
  405b48:	mov	w0, #0x4c                  	// #76
  405b4c:	b	405ae8 <wcrtomb@plt+0x2c68>
  405b50:	and	w0, w0, #0xc
  405b54:	cmp	w0, #0x4
  405b58:	b.ne	405b64 <wcrtomb@plt+0x2ce4>  // b.any
  405b5c:	mov	w0, #0x75                  	// #117
  405b60:	b	405ae8 <wcrtomb@plt+0x2c68>
  405b64:	cmp	w0, #0x8
  405b68:	b.ne	405aec <wcrtomb@plt+0x2c6c>  // b.any
  405b6c:	mov	w0, #0x6c                  	// #108
  405b70:	b	405ae8 <wcrtomb@plt+0x2c68>
  405b74:	mov	x1, x23
  405b78:	mov	w0, #0x1                   	// #1
  405b7c:	bl	4029f0 <__printf_chk@plt>
  405b80:	b	405b24 <wcrtomb@plt+0x2ca4>
  405b84:	ldr	w0, [x21, #64]
  405b88:	tbz	w0, #1, 405b94 <wcrtomb@plt+0x2d14>
  405b8c:	mov	w0, #0x69                  	// #105
  405b90:	bl	402a40 <putchar_unlocked@plt>
  405b94:	ldr	w0, [x21, #64]
  405b98:	tbz	w0, #2, 405a54 <wcrtomb@plt+0x2bd4>
  405b9c:	mov	w0, #0x6d                  	// #109
  405ba0:	bl	402a40 <putchar_unlocked@plt>
  405ba4:	b	405a54 <wcrtomb@plt+0x2bd4>
  405ba8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0xae54>
  405bac:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405bb0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  405bb4:	add	x3, x3, #0x5a6
  405bb8:	add	x1, x1, #0x4c1
  405bbc:	add	x0, x0, #0xf97
  405bc0:	mov	w2, #0x17e                 	// #382
  405bc4:	bl	402de0 <__assert_fail@plt>
  405bc8:	ldr	x0, [x19, #24]
  405bcc:	b	405ab4 <wcrtomb@plt+0x2c34>
  405bd0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405bd4:	ldr	w0, [x0, #2292]
  405bd8:	cmp	w0, #0x1
  405bdc:	mov	w0, #0x2f                  	// #47
  405be0:	b.le	405c50 <wcrtomb@plt+0x2dd0>
  405be4:	mov	w20, #0x0                   	// #0
  405be8:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x21e54>
  405bec:	bl	402a40 <putchar_unlocked@plt>
  405bf0:	ldr	x0, [x19, #24]
  405bf4:	ldr	x0, [x0, w20, uxtw #3]
  405bf8:	add	w20, w20, #0x2
  405bfc:	cbnz	x0, 405c2c <wcrtomb@plt+0x2dac>
  405c00:	mov	w0, #0x2f                  	// #47
  405c04:	bl	402a40 <putchar_unlocked@plt>
  405c08:	mov	w0, #0x0                   	// #0
  405c0c:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x21e54>
  405c10:	ldr	x2, [x19, #24]
  405c14:	add	w20, w0, #0x2
  405c18:	ldr	x1, [x2, w0, uxtw #3]
  405c1c:	cbnz	x1, 405c38 <wcrtomb@plt+0x2db8>
  405c20:	mov	w0, #0x2f                  	// #47
  405c24:	bl	402a40 <putchar_unlocked@plt>
  405c28:	b	405908 <wcrtomb@plt+0x2a88>
  405c2c:	ldr	x1, [x21, #1320]
  405c30:	bl	402d70 <fputs_unlocked@plt>
  405c34:	b	405bf0 <wcrtomb@plt+0x2d70>
  405c38:	add	w0, w0, #0x1
  405c3c:	ldr	x1, [x21, #1320]
  405c40:	ldr	x0, [x2, x0, lsl #3]
  405c44:	bl	402d70 <fputs_unlocked@plt>
  405c48:	mov	w0, w20
  405c4c:	b	405c10 <wcrtomb@plt+0x2d90>
  405c50:	mov	x20, #0x0                   	// #0
  405c54:	bl	402a40 <putchar_unlocked@plt>
  405c58:	ldr	x0, [x19, #24]
  405c5c:	ldrb	w0, [x0, x20]
  405c60:	cmp	w0, w20, uxtb
  405c64:	b.eq	405c70 <wcrtomb@plt+0x2df0>  // b.none
  405c68:	mov	w0, w20
  405c6c:	bl	402a40 <putchar_unlocked@plt>
  405c70:	add	x20, x20, #0x1
  405c74:	cmp	x20, #0x100
  405c78:	b.ne	405c58 <wcrtomb@plt+0x2dd8>  // b.any
  405c7c:	mov	x20, #0x0                   	// #0
  405c80:	mov	w0, #0x2f                  	// #47
  405c84:	bl	402a40 <putchar_unlocked@plt>
  405c88:	ldr	x0, [x19, #24]
  405c8c:	ldrb	w0, [x0, x20]
  405c90:	cmp	w0, w20, uxtb
  405c94:	b.eq	405c9c <wcrtomb@plt+0x2e1c>  // b.none
  405c98:	bl	402a40 <putchar_unlocked@plt>
  405c9c:	add	x20, x20, #0x1
  405ca0:	cmp	x20, #0x100
  405ca4:	b.ne	405c88 <wcrtomb@plt+0x2e08>  // b.any
  405ca8:	b	405c20 <wcrtomb@plt+0x2da0>
  405cac:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0xae54>
  405cb0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405cb4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  405cb8:	add	x3, x3, #0x5a6
  405cbc:	add	x1, x1, #0x4c1
  405cc0:	add	x0, x0, #0xf97
  405cc4:	mov	w2, #0x194                 	// #404
  405cc8:	bl	402de0 <__assert_fail@plt>
  405ccc:	ret
  405cd0:	cbz	x0, 405d40 <wcrtomb@plt+0x2ec0>
  405cd4:	stp	x29, x30, [sp, #-48]!
  405cd8:	mov	x29, sp
  405cdc:	stp	x19, x20, [sp, #16]
  405ce0:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  405ce4:	mov	x19, x0
  405ce8:	stp	x21, x22, [sp, #32]
  405cec:	mov	x21, #0x0                   	// #0
  405cf0:	mov	x22, #0x28                  	// #40
  405cf4:	mov	w0, #0x1                   	// #1
  405cf8:	str	w0, [x20, #1584]
  405cfc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  405d00:	add	x0, x0, #0x4d1
  405d04:	bl	402b90 <puts@plt>
  405d08:	ldr	x0, [x19, #16]
  405d0c:	cmp	x0, x21
  405d10:	b.hi	405d28 <wcrtomb@plt+0x2ea8>  // b.pmore
  405d14:	str	wzr, [x20, #1584]
  405d18:	ldp	x19, x20, [sp, #16]
  405d1c:	ldp	x21, x22, [sp, #32]
  405d20:	ldp	x29, x30, [sp], #48
  405d24:	ret
  405d28:	ldr	x1, [x19]
  405d2c:	mov	x0, x19
  405d30:	madd	x1, x21, x22, x1
  405d34:	add	x21, x21, #0x1
  405d38:	bl	4057e8 <wcrtomb@plt+0x2968>
  405d3c:	b	405d08 <wcrtomb@plt+0x2e88>
  405d40:	ret
  405d44:	mov	w0, #0x0                   	// #0
  405d48:	ret
  405d4c:	stp	x29, x30, [sp, #-48]!
  405d50:	mov	x29, sp
  405d54:	stp	x19, x20, [sp, #16]
  405d58:	ldr	x20, [x0, #8]
  405d5c:	str	x21, [sp, #32]
  405d60:	cbnz	x20, 405d68 <wcrtomb@plt+0x2ee8>
  405d64:	ldr	x20, [x0]
  405d68:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  405d6c:	add	x1, x1, #0x638
  405d70:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0xae54>
  405d74:	cmp	x0, x1
  405d78:	add	x2, x2, #0x5c5
  405d7c:	ldr	x21, [x0, #16]
  405d80:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405d84:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0xae54>
  405d88:	mov	x19, #0x0                   	// #0
  405d8c:	ldr	x1, [x0, #1320]
  405d90:	add	x0, x3, #0x5bb
  405d94:	csel	x0, x0, x2, eq  // eq = none
  405d98:	bl	402d70 <fputs_unlocked@plt>
  405d9c:	cmp	x21, x19
  405da0:	b.ne	405db8 <wcrtomb@plt+0x2f38>  // b.any
  405da4:	ldp	x19, x20, [sp, #16]
  405da8:	mov	w0, #0xa                   	// #10
  405dac:	ldr	x21, [sp, #32]
  405db0:	ldp	x29, x30, [sp], #48
  405db4:	b	402a40 <putchar_unlocked@plt>
  405db8:	ldrb	w0, [x20, x19]
  405dbc:	add	x19, x19, #0x1
  405dc0:	bl	405594 <wcrtomb@plt+0x2714>
  405dc4:	b	405d9c <wcrtomb@plt+0x2f1c>
  405dc8:	stp	x29, x30, [sp, #-48]!
  405dcc:	mov	x29, sp
  405dd0:	stp	x19, x20, [sp, #16]
  405dd4:	mov	x19, x0
  405dd8:	mov	x20, x1
  405ddc:	ldr	x1, [x0, #8]
  405de0:	ldr	x0, [x0]
  405de4:	ldr	x2, [x19, #24]
  405de8:	sub	x4, x1, x0
  405dec:	str	x21, [sp, #32]
  405df0:	lsl	x2, x2, #1
  405df4:	cmp	x2, w4, sxtw
  405df8:	b.cs	405e7c <wcrtomb@plt+0x2ffc>  // b.hs, b.nlast
  405dfc:	ldr	x2, [x19, #16]
  405e00:	bl	402760 <memmove@plt>
  405e04:	ldp	x1, x0, [x19]
  405e08:	str	x1, [x19, #8]
  405e0c:	ldr	x2, [x19, #24]
  405e10:	sub	x0, x0, x1
  405e14:	add	x0, x0, x2
  405e18:	str	x0, [x19, #24]
  405e1c:	cmp	x0, x20
  405e20:	b.hi	405e6c <wcrtomb@plt+0x2fec>  // b.pmore
  405e24:	mov	w3, #0x0                   	// #0
  405e28:	ldr	x0, [x19, #24]
  405e2c:	sxtw	x21, w3
  405e30:	mov	x2, #0x1                   	// #1
  405e34:	lsl	x0, x0, #1
  405e38:	cmp	x0, x20
  405e3c:	csel	x20, x20, x0, cc  // cc = lo, ul, last
  405e40:	mov	x0, #0x32                  	// #50
  405e44:	cmp	x20, #0x32
  405e48:	csel	x20, x0, x20, cc  // cc = lo, ul, last
  405e4c:	str	x20, [x19, #24]
  405e50:	ldr	x0, [x19]
  405e54:	add	x20, x20, #0x1
  405e58:	add	x1, x20, w3, sxtw
  405e5c:	bl	40fca8 <wcrtomb@plt+0xce28>
  405e60:	str	x0, [x19]
  405e64:	add	x0, x0, x21
  405e68:	str	x0, [x19, #8]
  405e6c:	ldp	x19, x20, [sp, #16]
  405e70:	ldr	x21, [sp, #32]
  405e74:	ldp	x29, x30, [sp], #48
  405e78:	ret
  405e7c:	mov	w3, w4
  405e80:	b	405e28 <wcrtomb@plt+0x2fa8>
  405e84:	stp	x29, x30, [sp, #-16]!
  405e88:	mov	x1, #0x28                  	// #40
  405e8c:	mov	x0, #0x1                   	// #1
  405e90:	mov	x29, sp
  405e94:	bl	40fd44 <wcrtomb@plt+0xcec4>
  405e98:	stp	xzr, xzr, [x0]
  405e9c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  405ea0:	add	x1, x1, #0x638
  405ea4:	stp	xzr, xzr, [x0, #16]
  405ea8:	strb	wzr, [x0, #32]
  405eac:	ldr	x2, [x1, #48]
  405eb0:	cbz	x2, 405ec4 <wcrtomb@plt+0x3044>
  405eb4:	str	x0, [x2, #24]
  405eb8:	str	x0, [x1, #48]
  405ebc:	ldp	x29, x30, [sp], #16
  405ec0:	ret
  405ec4:	str	x0, [x1, #56]
  405ec8:	b	405eb8 <wcrtomb@plt+0x3038>
  405ecc:	stp	x29, x30, [sp, #-48]!
  405ed0:	mov	x29, sp
  405ed4:	stp	x19, x20, [sp, #16]
  405ed8:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  405edc:	add	x20, x20, #0x638
  405ee0:	stp	x21, x22, [sp, #32]
  405ee4:	mov	x21, x0
  405ee8:	mov	x19, x1
  405eec:	str	x0, [x1, #48]
  405ef0:	str	xzr, [x20, #80]
  405ef4:	ldrb	w0, [x0]
  405ef8:	cmp	w0, #0x2d
  405efc:	b.ne	405f88 <wcrtomb@plt+0x3108>  // b.any
  405f00:	ldrb	w0, [x21, #1]
  405f04:	cbnz	w0, 405f88 <wcrtomb@plt+0x3108>
  405f08:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405f0c:	ldr	x0, [x0, #1920]
  405f10:	cbnz	x0, 405f88 <wcrtomb@plt+0x3108>
  405f14:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x21e54>
  405f18:	ldr	x0, [x21, #1328]
  405f1c:	bl	402cd0 <clearerr_unlocked@plt>
  405f20:	ldr	x0, [x21, #1328]
  405f24:	str	x0, [x19, #184]
  405f28:	adrp	x0, 406000 <wcrtomb@plt+0x3180>
  405f2c:	add	x0, x0, #0x678
  405f30:	str	x0, [x19, #32]
  405f34:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405f38:	ldr	x0, [x0, #1920]
  405f3c:	cbz	x0, 4060e4 <wcrtomb@plt+0x3264>
  405f40:	ldr	x0, [x19, #48]
  405f44:	bl	40fdb0 <wcrtomb@plt+0xcf30>
  405f48:	mov	x21, x0
  405f4c:	mov	w1, #0x2f                  	// #47
  405f50:	bl	402b10 <strrchr@plt>
  405f54:	cbz	x0, 406030 <wcrtomb@plt+0x31b0>
  405f58:	strb	wzr, [x0]
  405f5c:	ldr	x0, [x19, #184]
  405f60:	bl	402890 <fileno@plt>
  405f64:	bl	402d00 <isatty@plt>
  405f68:	cbz	w0, 406044 <wcrtomb@plt+0x31c4>
  405f6c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405f70:	add	x1, x1, #0x5e6
  405f74:	mov	w2, #0x5                   	// #5
  405f78:	mov	x0, #0x0                   	// #0
  405f7c:	bl	402d60 <dcgettext@plt>
  405f80:	ldr	x1, [x19, #48]
  405f84:	bl	408a48 <wcrtomb@plt+0x5bc8>
  405f88:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405f8c:	ldrb	w0, [x0, #1912]
  405f90:	cbz	w0, 405fa0 <wcrtomb@plt+0x3120>
  405f94:	mov	x0, x21
  405f98:	bl	4090f4 <wcrtomb@plt+0x6274>
  405f9c:	str	x0, [x19, #48]
  405fa0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405fa4:	mov	w2, #0x0                   	// #0
  405fa8:	ldr	x1, [x0, #1160]
  405fac:	mov	x0, x21
  405fb0:	bl	408ba8 <wcrtomb@plt+0x5d28>
  405fb4:	str	x0, [x19, #184]
  405fb8:	cbnz	x0, 405f28 <wcrtomb@plt+0x30a8>
  405fbc:	bl	402df0 <__errno_location@plt>
  405fc0:	ldr	w0, [x0]
  405fc4:	bl	402b00 <strerror@plt>
  405fc8:	mov	x20, x0
  405fcc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  405fd0:	mov	w2, #0x5                   	// #5
  405fd4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  405fd8:	add	x1, x1, #0x5cf
  405fdc:	ldr	x22, [x0, #1296]
  405fe0:	mov	x0, #0x0                   	// #0
  405fe4:	bl	402d60 <dcgettext@plt>
  405fe8:	mov	x2, x0
  405fec:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  405ff0:	mov	x5, x20
  405ff4:	mov	x4, x21
  405ff8:	mov	x0, x22
  405ffc:	ldr	x3, [x1, #1968]
  406000:	mov	w1, #0x1                   	// #1
  406004:	bl	402be0 <__fprintf_chk@plt>
  406008:	adrp	x0, 405000 <wcrtomb@plt+0x2180>
  40600c:	add	x0, x0, #0xd44
  406010:	str	x0, [x19, #32]
  406014:	ldr	x0, [x19, #8]
  406018:	add	x0, x0, #0x1
  40601c:	str	x0, [x19, #8]
  406020:	ldp	x19, x20, [sp, #16]
  406024:	ldp	x21, x22, [sp, #32]
  406028:	ldp	x29, x30, [sp], #48
  40602c:	ret
  406030:	mov	x0, x21
  406034:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  406038:	add	x1, x1, #0xe9
  40603c:	bl	402cc0 <strcpy@plt>
  406040:	b	405f5c <wcrtomb@plt+0x30dc>
  406044:	ldr	x0, [x19, #184]
  406048:	bl	402890 <fileno@plt>
  40604c:	add	x1, x19, #0x38
  406050:	bl	41aee0 <_obstack_memory_used@@Base+0xad34>
  406054:	ldr	w0, [x19, #72]
  406058:	and	w0, w0, #0xf000
  40605c:	cmp	w0, #0x8, lsl #12
  406060:	b.eq	406074 <wcrtomb@plt+0x31f4>  // b.none
  406064:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  406068:	mov	w2, #0x5                   	// #5
  40606c:	add	x1, x1, #0x606
  406070:	b	405f78 <wcrtomb@plt+0x30f8>
  406074:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406078:	mov	x1, x21
  40607c:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  406080:	add	x2, x2, #0xb3
  406084:	ldr	x3, [x0, #1168]
  406088:	add	x0, x19, #0x28
  40608c:	bl	408c94 <wcrtomb@plt+0x5e14>
  406090:	str	x0, [x20, #128]
  406094:	ldr	x0, [x19, #40]
  406098:	bl	4088b4 <wcrtomb@plt+0x5a34>
  40609c:	strb	wzr, [x20, #120]
  4060a0:	mov	x0, x21
  4060a4:	bl	402c20 <free@plt>
  4060a8:	ldr	x0, [x20, #128]
  4060ac:	cbnz	x0, 406020 <wcrtomb@plt+0x31a0>
  4060b0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4060b4:	add	x1, x1, #0x62b
  4060b8:	mov	w2, #0x5                   	// #5
  4060bc:	bl	402d60 <dcgettext@plt>
  4060c0:	mov	x20, x0
  4060c4:	bl	402df0 <__errno_location@plt>
  4060c8:	ldr	w0, [x0]
  4060cc:	ldr	x19, [x19, #40]
  4060d0:	bl	402b00 <strerror@plt>
  4060d4:	mov	x2, x0
  4060d8:	mov	x1, x19
  4060dc:	mov	x0, x20
  4060e0:	bl	408a48 <wcrtomb@plt+0x5bc8>
  4060e4:	ldr	x0, [x19, #184]
  4060e8:	cbz	x0, 406108 <wcrtomb@plt+0x3288>
  4060ec:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4060f0:	ldrb	w1, [x1, #1934]
  4060f4:	cbz	w1, 406108 <wcrtomb@plt+0x3288>
  4060f8:	mov	x3, #0x0                   	// #0
  4060fc:	mov	w2, #0x2                   	// #2
  406100:	mov	x1, #0x0                   	// #0
  406104:	bl	402860 <setvbuf@plt>
  406108:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40610c:	ldr	x0, [x0, #1320]
  406110:	str	x0, [x20, #128]
  406114:	b	406020 <wcrtomb@plt+0x31a0>
  406118:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  40611c:	ldrb	w1, [x1, #1934]
  406120:	cbz	w1, 406128 <wcrtomb@plt+0x32a8>
  406124:	b	408f80 <wcrtomb@plt+0x6100>
  406128:	ret
  40612c:	stp	x29, x30, [sp, #-80]!
  406130:	mov	x29, sp
  406134:	stp	x19, x20, [sp, #16]
  406138:	mov	x19, x0
  40613c:	adrp	x0, 405000 <wcrtomb@plt+0x2180>
  406140:	add	x0, x0, #0xd44
  406144:	stp	x21, x22, [sp, #32]
  406148:	stp	x23, x24, [sp, #48]
  40614c:	stp	x25, x26, [sp, #64]
  406150:	str	x0, [x19, #32]
  406154:	ldr	x0, [x19, #184]
  406158:	cbz	x0, 40628c <wcrtomb@plt+0x340c>
  40615c:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x21e54>
  406160:	ldr	x1, [x24, #1920]
  406164:	cbz	x1, 4062e0 <wcrtomb@plt+0x3460>
  406168:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  40616c:	add	x20, x20, #0x638
  406170:	ldr	x1, [x20, #128]
  406174:	cbz	x1, 4062e0 <wcrtomb@plt+0x3460>
  406178:	ldr	x22, [x19, #48]
  40617c:	bl	402890 <fileno@plt>
  406180:	mov	w23, w0
  406184:	ldr	x0, [x20, #128]
  406188:	bl	402890 <fileno@plt>
  40618c:	mov	w21, w0
  406190:	ldp	w1, w2, [x19, #80]
  406194:	bl	402e30 <fchown@plt>
  406198:	mov	w1, w0
  40619c:	cmn	w0, #0x1
  4061a0:	b.ne	4061b0 <wcrtomb@plt+0x3330>  // b.any
  4061a4:	ldr	w2, [x19, #84]
  4061a8:	mov	w0, w21
  4061ac:	bl	402e30 <fchown@plt>
  4061b0:	ldp	x2, x0, [x19, #40]
  4061b4:	mov	w1, w23
  4061b8:	ldr	w4, [x19, #72]
  4061bc:	mov	w3, w21
  4061c0:	bl	4094d0 <wcrtomb@plt+0x6650>
  4061c4:	ldr	x0, [x19, #184]
  4061c8:	bl	409058 <wcrtomb@plt+0x61d8>
  4061cc:	ldr	x0, [x20, #128]
  4061d0:	bl	409058 <wcrtomb@plt+0x61d8>
  4061d4:	ldr	x20, [x24, #1920]
  4061d8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4061dc:	add	x1, x1, #0x64f
  4061e0:	mov	x0, x20
  4061e4:	bl	402bf0 <strcmp@plt>
  4061e8:	cbz	w0, 40626c <wcrtomb@plt+0x33ec>
  4061ec:	mov	x0, x22
  4061f0:	bl	402790 <strlen@plt>
  4061f4:	sxtw	x23, w0
  4061f8:	mov	x0, x20
  4061fc:	sub	w25, w23, #0x1
  406200:	bl	402790 <strlen@plt>
  406204:	mov	w21, w0
  406208:	mov	x0, x20
  40620c:	mov	w1, #0x2a                  	// #42
  406210:	bl	402c60 <strchr@plt>
  406214:	mov	x20, x0
  406218:	cbnz	x0, 4062a4 <wcrtomb@plt+0x3424>
  40621c:	add	w21, w21, #0x1
  406220:	sxtw	x0, w21
  406224:	bl	40fc04 <wcrtomb@plt+0xcd84>
  406228:	ldr	x24, [x24, #1920]
  40622c:	mov	x21, x0
  406230:	mov	x20, x0
  406234:	mov	x0, x24
  406238:	mov	w1, #0x2a                  	// #42
  40623c:	bl	402c60 <strchr@plt>
  406240:	mov	x25, x0
  406244:	cbnz	x0, 4062b0 <wcrtomb@plt+0x3430>
  406248:	mov	x1, x24
  40624c:	mov	x0, x20
  406250:	bl	402cc0 <strcpy@plt>
  406254:	ldr	x2, [x19, #40]
  406258:	mov	x1, x21
  40625c:	mov	x0, x22
  406260:	bl	4092d8 <wcrtomb@plt+0x6458>
  406264:	mov	x0, x21
  406268:	bl	402c20 <free@plt>
  40626c:	ldr	x2, [x19, #40]
  406270:	mov	x1, x22
  406274:	mov	x0, x2
  406278:	bl	4092d8 <wcrtomb@plt+0x6458>
  40627c:	bl	4088c0 <wcrtomb@plt+0x5a40>
  406280:	ldr	x0, [x19, #40]
  406284:	bl	402c20 <free@plt>
  406288:	str	xzr, [x19, #184]
  40628c:	ldp	x19, x20, [sp, #16]
  406290:	ldp	x21, x22, [sp, #32]
  406294:	ldp	x23, x24, [sp, #48]
  406298:	ldp	x25, x26, [sp, #64]
  40629c:	ldp	x29, x30, [sp], #80
  4062a0:	ret
  4062a4:	add	w21, w21, w25
  4062a8:	add	x20, x20, #0x1
  4062ac:	b	406208 <wcrtomb@plt+0x3388>
  4062b0:	sub	x26, x25, x24
  4062b4:	mov	x1, x24
  4062b8:	mov	x2, x26
  4062bc:	mov	x0, x20
  4062c0:	add	x20, x20, x26
  4062c4:	bl	402750 <memcpy@plt>
  4062c8:	mov	x0, x20
  4062cc:	mov	x1, x22
  4062d0:	add	x20, x20, x23
  4062d4:	add	x24, x25, #0x1
  4062d8:	bl	402cc0 <strcpy@plt>
  4062dc:	b	406234 <wcrtomb@plt+0x33b4>
  4062e0:	bl	409058 <wcrtomb@plt+0x61d8>
  4062e4:	b	406288 <wcrtomb@plt+0x3408>
  4062e8:	stp	x29, x30, [sp, #-32]!
  4062ec:	mov	x29, sp
  4062f0:	str	x19, [sp, #16]
  4062f4:	mov	x19, x0
  4062f8:	mov	x0, x19
  4062fc:	bl	40612c <wcrtomb@plt+0x32ac>
  406300:	ldr	x1, [x19]
  406304:	ldr	x0, [x1]
  406308:	cbz	x0, 406348 <wcrtomb@plt+0x34c8>
  40630c:	add	x1, x1, #0x8
  406310:	str	x1, [x19]
  406314:	mov	x1, x19
  406318:	bl	405ecc <wcrtomb@plt+0x304c>
  40631c:	ldr	x0, [x19, #184]
  406320:	cbz	x0, 4062f8 <wcrtomb@plt+0x3478>
  406324:	bl	402af0 <getc_unlocked@plt>
  406328:	cmn	w0, #0x1
  40632c:	b.eq	4062f8 <wcrtomb@plt+0x3478>  // b.none
  406330:	ldr	x1, [x19, #184]
  406334:	bl	402c30 <ungetc@plt>
  406338:	mov	w0, #0x0                   	// #0
  40633c:	ldr	x19, [sp, #16]
  406340:	ldp	x29, x30, [sp], #32
  406344:	ret
  406348:	mov	w0, #0x1                   	// #1
  40634c:	b	40633c <wcrtomb@plt+0x34bc>
  406350:	stp	x29, x30, [sp, #-32]!
  406354:	mov	x29, sp
  406358:	str	x19, [sp, #16]
  40635c:	mov	x19, x0
  406360:	ldrb	w0, [x0, #8]
  406364:	cbz	w0, 406384 <wcrtomb@plt+0x3504>
  406368:	ldr	x3, [x19, #16]
  40636c:	mov	x2, #0x1                   	// #1
  406370:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406374:	mov	x1, x2
  406378:	add	x0, x0, #0x480
  40637c:	bl	408d8c <wcrtomb@plt+0x5f0c>
  406380:	strb	wzr, [x19, #8]
  406384:	ldr	x19, [sp, #16]
  406388:	ldp	x29, x30, [sp], #32
  40638c:	ret
  406390:	mov	x12, #0x2030                	// #8240
  406394:	sub	sp, sp, x12
  406398:	stp	x29, x30, [sp]
  40639c:	mov	x29, sp
  4063a0:	stp	x19, x20, [sp, #16]
  4063a4:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  4063a8:	add	x19, x19, #0x638
  4063ac:	add	x0, x19, #0x70
  4063b0:	stp	x21, x22, [sp, #32]
  4063b4:	bl	406350 <wcrtomb@plt+0x34d0>
  4063b8:	ldr	x20, [x19, #56]
  4063bc:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x21e54>
  4063c0:	cbnz	x20, 4063f0 <wcrtomb@plt+0x3570>
  4063c4:	ldr	x0, [x19, #128]
  4063c8:	bl	406118 <wcrtomb@plt+0x3298>
  4063cc:	ldr	x20, [x19, #56]
  4063d0:	cbnz	x20, 406464 <wcrtomb@plt+0x35e4>
  4063d4:	stp	xzr, xzr, [x19, #48]
  4063d8:	mov	x12, #0x2030                	// #8240
  4063dc:	ldp	x29, x30, [sp]
  4063e0:	ldp	x19, x20, [sp, #16]
  4063e4:	ldp	x21, x22, [sp, #32]
  4063e8:	add	sp, sp, x12
  4063ec:	ret
  4063f0:	ldr	x0, [x20, #8]
  4063f4:	cbz	x0, 406408 <wcrtomb@plt+0x3588>
  4063f8:	ldr	x2, [x20, #16]
  4063fc:	mov	x1, #0x1                   	// #1
  406400:	ldr	x3, [x19, #128]
  406404:	bl	408d8c <wcrtomb@plt+0x5f0c>
  406408:	ldr	x0, [x20]
  40640c:	cbz	x0, 406448 <wcrtomb@plt+0x35c8>
  406410:	ldr	x1, [x22, #1160]
  406414:	mov	w2, #0x0                   	// #0
  406418:	bl	408ba8 <wcrtomb@plt+0x5d28>
  40641c:	mov	x21, x0
  406420:	cbz	x0, 406448 <wcrtomb@plt+0x35c8>
  406424:	mov	x2, #0x2000                	// #8192
  406428:	mov	x3, x21
  40642c:	add	x0, sp, #0x30
  406430:	mov	x1, #0x1                   	// #1
  406434:	bl	408e34 <wcrtomb@plt+0x5fb4>
  406438:	mov	x2, x0
  40643c:	cbnz	x0, 406450 <wcrtomb@plt+0x35d0>
  406440:	mov	x0, x21
  406444:	bl	409058 <wcrtomb@plt+0x61d8>
  406448:	ldr	x20, [x20, #24]
  40644c:	b	4063c0 <wcrtomb@plt+0x3540>
  406450:	ldr	x3, [x19, #128]
  406454:	add	x0, sp, #0x30
  406458:	mov	x1, #0x1                   	// #1
  40645c:	bl	408d8c <wcrtomb@plt+0x5f0c>
  406460:	b	406424 <wcrtomb@plt+0x35a4>
  406464:	ldrb	w0, [x20, #32]
  406468:	cbz	w0, 406474 <wcrtomb@plt+0x35f4>
  40646c:	ldr	x0, [x20, #8]
  406470:	bl	402c20 <free@plt>
  406474:	ldr	x21, [x20, #24]
  406478:	mov	x0, x20
  40647c:	bl	402c20 <free@plt>
  406480:	mov	x20, x21
  406484:	b	4063d0 <wcrtomb@plt+0x3550>
  406488:	stp	x29, x30, [sp, #-64]!
  40648c:	mov	x29, sp
  406490:	stp	x19, x20, [sp, #16]
  406494:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  406498:	add	x20, x20, #0x638
  40649c:	mov	x19, x0
  4064a0:	stp	x21, x22, [sp, #32]
  4064a4:	mov	x22, x1
  4064a8:	ldr	x0, [x20, #56]
  4064ac:	stp	x23, x24, [sp, #48]
  4064b0:	mov	w21, w2
  4064b4:	cbz	x0, 4064bc <wcrtomb@plt+0x363c>
  4064b8:	bl	406390 <wcrtomb@plt+0x3510>
  4064bc:	strb	wzr, [x20, #144]
  4064c0:	cbnz	w21, 4064c8 <wcrtomb@plt+0x3648>
  4064c4:	str	xzr, [x20, #168]
  4064c8:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x21e54>
  4064cc:	add	x23, x23, #0x779
  4064d0:	mov	w0, #0x1                   	// #1
  4064d4:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x21e54>
  4064d8:	strb	w0, [x20, #184]
  4064dc:	ldr	x1, [x19, #32]
  4064e0:	mov	x0, x19
  4064e4:	blr	x1
  4064e8:	ands	w21, w0, #0xff
  4064ec:	b.eq	406514 <wcrtomb@plt+0x3694>  // b.none
  4064f0:	ldr	x0, [x19, #16]
  4064f4:	add	x0, x0, #0x1
  4064f8:	str	x0, [x19, #16]
  4064fc:	mov	w0, w21
  406500:	ldp	x19, x20, [sp, #16]
  406504:	ldp	x21, x22, [sp, #32]
  406508:	ldp	x23, x24, [sp, #48]
  40650c:	ldp	x29, x30, [sp], #64
  406510:	ret
  406514:	mov	x0, x19
  406518:	bl	40612c <wcrtomb@plt+0x32ac>
  40651c:	ldr	x0, [x19]
  406520:	ldr	x0, [x0]
  406524:	cbz	x0, 4064fc <wcrtomb@plt+0x367c>
  406528:	ldrb	w0, [x19, #24]
  40652c:	cbz	w0, 406564 <wcrtomb@plt+0x36e4>
  406530:	ldr	w1, [x22, #16]
  406534:	ldr	x0, [x22]
  406538:	str	xzr, [x19, #16]
  40653c:	str	xzr, [x20, #16]
  406540:	sub	w1, w1, #0x1
  406544:	cmn	w1, #0x1
  406548:	b.ne	406580 <wcrtomb@plt+0x3700>  // b.any
  40654c:	bl	4054a8 <wcrtomb@plt+0x2628>
  406550:	ldr	x0, [x24, #1920]
  406554:	cbz	x0, 40655c <wcrtomb@plt+0x36dc>
  406558:	strb	wzr, [x20, #120]
  40655c:	ldrb	w0, [x23]
  406560:	strb	w0, [x19, #24]
  406564:	ldr	x0, [x19]
  406568:	add	x1, x0, #0x8
  40656c:	ldr	x0, [x0]
  406570:	str	x1, [x19]
  406574:	mov	x1, x19
  406578:	bl	405ecc <wcrtomb@plt+0x304c>
  40657c:	b	4064dc <wcrtomb@plt+0x365c>
  406580:	ldr	x2, [x0]
  406584:	cbz	x2, 4065ac <wcrtomb@plt+0x372c>
  406588:	ldr	w3, [x2]
  40658c:	cmp	w3, #0x2
  406590:	b.ne	4065ac <wcrtomb@plt+0x372c>  // b.any
  406594:	ldr	x2, [x2, #8]
  406598:	cmp	x2, #0x0
  40659c:	cset	w2, eq  // eq = none
  4065a0:	add	x0, x0, #0x28
  4065a4:	stur	w2, [x0, #-24]
  4065a8:	b	406540 <wcrtomb@plt+0x36c0>
  4065ac:	mov	w2, #0x0                   	// #0
  4065b0:	b	4065a0 <wcrtomb@plt+0x3720>
  4065b4:	stp	x29, x30, [sp, #-48]!
  4065b8:	mov	x29, sp
  4065bc:	stp	x21, x22, [sp, #32]
  4065c0:	mov	x21, x1
  4065c4:	ldp	x22, x1, [x0, #16]
  4065c8:	stp	x19, x20, [sp, #16]
  4065cc:	mov	x19, x0
  4065d0:	mov	x20, x2
  4065d4:	add	x22, x2, x22
  4065d8:	cmp	x1, x22
  4065dc:	b.cs	4065e8 <wcrtomb@plt+0x3768>  // b.hs, b.nlast
  4065e0:	mov	x1, x22
  4065e4:	bl	405dc8 <wcrtomb@plt+0x2f48>
  4065e8:	ldp	x3, x0, [x19, #8]
  4065ec:	mov	x1, x21
  4065f0:	mov	x2, x20
  4065f4:	add	x0, x3, x0
  4065f8:	bl	402750 <memcpy@plt>
  4065fc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406600:	str	x22, [x19, #16]
  406604:	ldr	w1, [x0, #2292]
  406608:	cmp	w1, #0x1
  40660c:	b.le	406668 <wcrtomb@plt+0x37e8>
  406610:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  406614:	ldrb	w1, [x1, #2288]
  406618:	cbnz	w1, 406668 <wcrtomb@plt+0x37e8>
  40661c:	add	x22, x0, #0x8f4
  406620:	add	x19, x19, #0x24
  406624:	cbz	x20, 406668 <wcrtomb@plt+0x37e8>
  406628:	ldr	w0, [x22]
  40662c:	cmp	w0, #0x1
  406630:	b.eq	406654 <wcrtomb@plt+0x37d4>  // b.none
  406634:	mov	x3, x19
  406638:	mov	x2, x20
  40663c:	mov	x1, x21
  406640:	mov	x0, #0x0                   	// #0
  406644:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  406648:	cmn	x0, #0x3
  40664c:	b.ls	406664 <wcrtomb@plt+0x37e4>  // b.plast
  406650:	str	xzr, [x19]
  406654:	mov	x0, #0x1                   	// #1
  406658:	add	x21, x21, x0
  40665c:	sub	x20, x20, x0
  406660:	b	406624 <wcrtomb@plt+0x37a4>
  406664:	cbnz	x0, 406658 <wcrtomb@plt+0x37d8>
  406668:	ldp	x19, x20, [sp, #16]
  40666c:	ldp	x21, x22, [sp, #32]
  406670:	ldp	x29, x30, [sp], #48
  406674:	ret
  406678:	stp	x29, x30, [sp, #-32]!
  40667c:	mov	x29, sp
  406680:	stp	x19, x20, [sp, #16]
  406684:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  406688:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  40668c:	ldrb	w2, [x20, #1152]
  406690:	add	x19, x19, #0x638
  406694:	ldr	x3, [x0, #184]
  406698:	add	x1, x19, #0xc8
  40669c:	add	x0, x19, #0xd0
  4066a0:	bl	408edc <wcrtomb@plt+0x605c>
  4066a4:	cmp	x0, #0x0
  4066a8:	b.le	4066ec <wcrtomb@plt+0x386c>
  4066ac:	ldr	x1, [x19, #208]
  4066b0:	mov	x2, x0
  4066b4:	add	x0, x1, x0
  4066b8:	ldurb	w3, [x0, #-1]
  4066bc:	ldrb	w0, [x20, #1152]
  4066c0:	cmp	w3, w0
  4066c4:	b.ne	4066e4 <wcrtomb@plt+0x3864>  // b.any
  4066c8:	sub	x2, x2, #0x1
  4066cc:	add	x0, x19, #0x98
  4066d0:	bl	4065b4 <wcrtomb@plt+0x3734>
  4066d4:	mov	w0, #0x1                   	// #1
  4066d8:	ldp	x19, x20, [sp, #16]
  4066dc:	ldp	x29, x30, [sp], #32
  4066e0:	ret
  4066e4:	strb	wzr, [x19, #184]
  4066e8:	b	4066cc <wcrtomb@plt+0x384c>
  4066ec:	mov	w0, #0x0                   	// #0
  4066f0:	b	4066d8 <wcrtomb@plt+0x3858>
  4066f4:	cbz	x0, 406774 <wcrtomb@plt+0x38f4>
  4066f8:	stp	x29, x30, [sp, #-48]!
  4066fc:	mov	x29, sp
  406700:	stp	x19, x20, [sp, #16]
  406704:	mov	x20, x0
  406708:	mov	x19, x3
  40670c:	mov	x0, x3
  406710:	stp	x21, x22, [sp, #32]
  406714:	mov	x21, x1
  406718:	mov	w22, w2
  40671c:	bl	406350 <wcrtomb@plt+0x34d0>
  406720:	cbz	x21, 406738 <wcrtomb@plt+0x38b8>
  406724:	ldr	x3, [x19, #16]
  406728:	mov	x2, x21
  40672c:	mov	x0, x20
  406730:	mov	x1, #0x1                   	// #1
  406734:	bl	408d8c <wcrtomb@plt+0x5f0c>
  406738:	cbz	w22, 406768 <wcrtomb@plt+0x38e8>
  40673c:	ldr	x3, [x19, #16]
  406740:	mov	x2, #0x1                   	// #1
  406744:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406748:	mov	x1, x2
  40674c:	add	x0, x0, #0x480
  406750:	bl	408d8c <wcrtomb@plt+0x5f0c>
  406754:	ldr	x0, [x19, #16]
  406758:	ldp	x19, x20, [sp, #16]
  40675c:	ldp	x21, x22, [sp, #32]
  406760:	ldp	x29, x30, [sp], #48
  406764:	b	406118 <wcrtomb@plt+0x3298>
  406768:	mov	w0, #0x1                   	// #1
  40676c:	strb	w0, [x19, #8]
  406770:	b	406754 <wcrtomb@plt+0x38d4>
  406774:	ret
  406778:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  40677c:	ldr	x1, [x1, #1672]
  406780:	cbnz	x1, 406808 <wcrtomb@plt+0x3988>
  406784:	stp	x29, x30, [sp, #-32]!
  406788:	mov	x29, sp
  40678c:	ldr	x1, [x0, #184]
  406790:	str	x19, [sp, #16]
  406794:	mov	x19, x0
  406798:	cbnz	x1, 4067c0 <wcrtomb@plt+0x3940>
  40679c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4067a0:	ldrb	w1, [x1, #1913]
  4067a4:	cbnz	w1, 406800 <wcrtomb@plt+0x3980>
  4067a8:	bl	4062e8 <wcrtomb@plt+0x3468>
  4067ac:	and	w0, w0, #0xff
  4067b0:	and	w0, w0, #0x1
  4067b4:	ldr	x19, [sp, #16]
  4067b8:	ldp	x29, x30, [sp], #32
  4067bc:	ret
  4067c0:	mov	x0, x1
  4067c4:	bl	402c70 <feof_unlocked@plt>
  4067c8:	cbz	w0, 4067e0 <wcrtomb@plt+0x3960>
  4067cc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4067d0:	ldrb	w0, [x0, #1913]
  4067d4:	cbnz	w0, 406800 <wcrtomb@plt+0x3980>
  4067d8:	mov	x0, x19
  4067dc:	b	4067a8 <wcrtomb@plt+0x3928>
  4067e0:	ldr	x0, [x19, #184]
  4067e4:	bl	402af0 <getc_unlocked@plt>
  4067e8:	cmn	w0, #0x1
  4067ec:	b.eq	4067cc <wcrtomb@plt+0x394c>  // b.none
  4067f0:	ldr	x1, [x19, #184]
  4067f4:	bl	402c30 <ungetc@plt>
  4067f8:	mov	w0, #0x0                   	// #0
  4067fc:	b	4067b4 <wcrtomb@plt+0x3934>
  406800:	mov	w0, #0x1                   	// #1
  406804:	b	4067b0 <wcrtomb@plt+0x3930>
  406808:	mov	w0, #0x0                   	// #0
  40680c:	ret
  406810:	stp	x29, x30, [sp, #-16]!
  406814:	mov	x6, x0
  406818:	mov	x29, sp
  40681c:	ldr	w2, [x0]
  406820:	cmp	w2, #0x6
  406824:	b.hi	4068d4 <wcrtomb@plt+0x3a54>  // b.pmore
  406828:	mov	x0, x1
  40682c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  406830:	add	x1, x1, #0x754
  406834:	ldrb	w1, [x1, w2, uxtw]
  406838:	adr	x2, 406844 <wcrtomb@plt+0x39c4>
  40683c:	add	x1, x2, w1, sxtb #2
  406840:	br	x1
  406844:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406848:	add	x0, x0, #0x638
  40684c:	mov	w5, #0x0                   	// #0
  406850:	mov	x4, #0x0                   	// #0
  406854:	mov	x3, #0x0                   	// #0
  406858:	ldp	x1, x2, [x0, #160]
  40685c:	ldr	x0, [x6, #24]
  406860:	bl	4081d4 <wcrtomb@plt+0x5354>
  406864:	cmp	w0, #0x0
  406868:	cset	w0, ne  // ne = any
  40686c:	ldp	x29, x30, [sp], #16
  406870:	ret
  406874:	ldr	x1, [x6, #8]
  406878:	ldr	x0, [x0, #16]
  40687c:	cmp	x0, x1
  406880:	b.cc	4068a0 <wcrtomb@plt+0x3a20>  // b.lo, b.ul, b.last
  406884:	ldr	x2, [x6, #16]
  406888:	sub	x0, x0, x1
  40688c:	udiv	x1, x0, x2
  406890:	msub	x0, x1, x2, x0
  406894:	cmp	x0, #0x0
  406898:	cset	w0, eq  // eq = none
  40689c:	b	40686c <wcrtomb@plt+0x39ec>
  4068a0:	mov	w0, #0x0                   	// #0
  4068a4:	b	40686c <wcrtomb@plt+0x39ec>
  4068a8:	ldr	x1, [x6, #8]
  4068ac:	ldr	x0, [x0, #16]
  4068b0:	cmp	x1, x0
  4068b4:	cset	w0, ls  // ls = plast
  4068b8:	b	40686c <wcrtomb@plt+0x39ec>
  4068bc:	ldp	x29, x30, [sp], #16
  4068c0:	b	406778 <wcrtomb@plt+0x38f8>
  4068c4:	ldr	x1, [x6, #8]
  4068c8:	ldr	x0, [x0, #16]
  4068cc:	cmp	x1, x0
  4068d0:	b	406898 <wcrtomb@plt+0x3a18>
  4068d4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  4068d8:	add	x0, x0, #0x651
  4068dc:	bl	408a48 <wcrtomb@plt+0x5bc8>
  4068e0:	mov	w0, #0x1                   	// #1
  4068e4:	b	40686c <wcrtomb@plt+0x39ec>
  4068e8:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4068ec:	add	x1, x1, #0x638
  4068f0:	ldp	x6, x7, [x0]
  4068f4:	add	x2, x1, #0x98
  4068f8:	ldp	x8, x9, [x1, #152]
  4068fc:	stp	x6, x7, [x1, #152]
  406900:	ldr	w3, [x1, #184]
  406904:	ldp	x6, x7, [x0, #16]
  406908:	sub	sp, sp, #0x30
  40690c:	ldp	x4, x5, [x1, #168]
  406910:	stp	x6, x7, [x1, #168]
  406914:	ldr	w1, [x0, #32]
  406918:	str	w1, [x2, #32]
  40691c:	stp	x8, x9, [x0]
  406920:	stp	x4, x5, [x0, #16]
  406924:	str	w3, [x0, #32]
  406928:	add	sp, sp, #0x30
  40692c:	ret
  406930:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406934:	add	x0, x0, #0x638
  406938:	sub	sp, sp, #0x30
  40693c:	ldp	x8, x9, [x0, #216]
  406940:	ldp	x10, x11, [x0, #152]
  406944:	stp	x8, x9, [x0, #152]
  406948:	ldp	x8, x9, [x0, #232]
  40694c:	stp	x10, x11, [x0, #216]
  406950:	ldp	x6, x7, [x0, #168]
  406954:	stp	x8, x9, [x0, #168]
  406958:	ldp	x4, x5, [x0, #184]
  40695c:	stp	x6, x7, [x0, #232]
  406960:	ldp	x8, x9, [x0, #248]
  406964:	stp	x8, x9, [x0, #184]
  406968:	stp	x4, x5, [x0, #248]
  40696c:	add	sp, sp, #0x30
  406970:	ret
  406974:	stp	x29, x30, [sp, #-32]!
  406978:	mov	x2, #0x1                   	// #1
  40697c:	mov	x29, sp
  406980:	stp	x19, x20, [sp, #16]
  406984:	mov	x20, x0
  406988:	mov	x19, x1
  40698c:	mov	x0, x19
  406990:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  406994:	add	x1, x1, #0x480
  406998:	bl	4065b4 <wcrtomb@plt+0x3734>
  40699c:	ldp	x1, x2, [x20, #8]
  4069a0:	mov	x0, x19
  4069a4:	bl	4065b4 <wcrtomb@plt+0x3734>
  4069a8:	ldrb	w0, [x20, #32]
  4069ac:	strb	w0, [x19, #32]
  4069b0:	ldur	x0, [x20, #36]
  4069b4:	stur	x0, [x19, #36]
  4069b8:	ldp	x19, x20, [sp, #16]
  4069bc:	ldp	x29, x30, [sp], #32
  4069c0:	ret
  4069c4:	stp	x29, x30, [sp, #-32]!
  4069c8:	mov	x29, sp
  4069cc:	stp	x19, x20, [sp, #16]
  4069d0:	mov	x19, x1
  4069d4:	mov	x20, x0
  4069d8:	ldp	x0, x1, [x1]
  4069dc:	ldr	x2, [x19, #24]
  4069e0:	sub	x1, x1, x0
  4069e4:	add	x1, x1, x2
  4069e8:	ldr	x2, [x20, #16]
  4069ec:	str	x1, [x19, #24]
  4069f0:	cmp	x1, x2
  4069f4:	b.cs	406a28 <wcrtomb@plt+0x3ba8>  // b.hs, b.nlast
  4069f8:	lsl	x1, x1, #1
  4069fc:	cmp	x2, x1
  406a00:	csel	x1, x2, x1, hi  // hi = pmore
  406a04:	mov	x2, #0x32                  	// #50
  406a08:	cmp	x1, #0x32
  406a0c:	csel	x1, x2, x1, cc  // cc = lo, ul, last
  406a10:	str	x1, [x19, #24]
  406a14:	bl	402c20 <free@plt>
  406a18:	ldr	x0, [x19, #24]
  406a1c:	add	x0, x0, #0x1
  406a20:	bl	40fd78 <wcrtomb@plt+0xcef8>
  406a24:	str	x0, [x19]
  406a28:	ldr	x0, [x19]
  406a2c:	ldr	x1, [x20, #16]
  406a30:	stp	x0, x1, [x19, #8]
  406a34:	ldrb	w1, [x20, #32]
  406a38:	strb	w1, [x19, #32]
  406a3c:	ldp	x1, x2, [x20, #8]
  406a40:	bl	402750 <memcpy@plt>
  406a44:	ldur	x0, [x20, #36]
  406a48:	stur	x0, [x19, #36]
  406a4c:	ldp	x19, x20, [sp, #16]
  406a50:	ldp	x29, x30, [sp], #32
  406a54:	ret
  406a58:	stp	x29, x30, [sp, #-96]!
  406a5c:	mov	x29, sp
  406a60:	stp	x19, x20, [sp, #16]
  406a64:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  406a68:	mov	x20, x1
  406a6c:	stp	x21, x22, [sp, #32]
  406a70:	add	x19, x19, #0x638
  406a74:	mov	x21, x0
  406a78:	stp	x23, x24, [sp, #48]
  406a7c:	str	x25, [sp, #64]
  406a80:	cbnz	w2, 406aac <wcrtomb@plt+0x3c2c>
  406a84:	mov	x2, x20
  406a88:	mov	x1, x21
  406a8c:	add	x0, x19, #0xd8
  406a90:	bl	4065b4 <wcrtomb@plt+0x3734>
  406a94:	ldp	x19, x20, [sp, #16]
  406a98:	ldp	x21, x22, [sp, #32]
  406a9c:	ldp	x23, x24, [sp, #48]
  406aa0:	ldr	x25, [sp, #64]
  406aa4:	ldp	x29, x30, [sp], #96
  406aa8:	ret
  406aac:	add	x0, x19, #0xd8
  406ab0:	adrp	x23, 432000 <_obstack_memory_used@@Base+0x21e54>
  406ab4:	mov	w22, w2
  406ab8:	ldrsw	x1, [x23, #2292]
  406abc:	ldp	x3, x2, [x0, #16]
  406ac0:	mul	x1, x1, x20
  406ac4:	sub	x2, x2, x3
  406ac8:	cmp	x2, x1
  406acc:	b.cs	406ad8 <wcrtomb@plt+0x3c58>  // b.hs, b.nlast
  406ad0:	add	x1, x3, x1
  406ad4:	bl	405dc8 <wcrtomb@plt+0x2f48>
  406ad8:	add	x24, x23, #0x8f4
  406adc:	add	x25, x19, #0xfc
  406ae0:	ldur	x0, [x19, #252]
  406ae4:	str	x0, [sp, #88]
  406ae8:	cbz	x20, 406a94 <wcrtomb@plt+0x3c14>
  406aec:	ldr	w0, [x24]
  406af0:	cmp	w0, #0x1
  406af4:	b.ne	406b94 <wcrtomb@plt+0x3d14>  // b.any
  406af8:	ldrb	w0, [x21]
  406afc:	bl	402b30 <btowc@plt>
  406b00:	str	w0, [sp, #84]
  406b04:	mov	x0, #0x1                   	// #1
  406b08:	add	x21, x21, x0
  406b0c:	sub	x20, x20, x0
  406b10:	tst	w22, #0xc
  406b14:	ldr	w0, [sp, #84]
  406b18:	b.eq	406c18 <wcrtomb@plt+0x3d98>  // b.none
  406b1c:	tbz	w22, #2, 406be8 <wcrtomb@plt+0x3d68>
  406b20:	bl	402db0 <towupper@plt>
  406b24:	str	w0, [sp, #84]
  406b28:	ands	w22, w22, #0xfffffff3
  406b2c:	b.ne	406c24 <wcrtomb@plt+0x3da4>  // b.any
  406b30:	ldr	w1, [x23, #2292]
  406b34:	cmp	w1, #0x1
  406b38:	b.ne	406bf0 <wcrtomb@plt+0x3d70>  // b.any
  406b3c:	bl	4028e0 <wctob@plt>
  406b40:	ldp	x2, x1, [x19, #224]
  406b44:	strb	w0, [x2, x1]
  406b48:	mov	x1, #0x1                   	// #1
  406b4c:	ldr	x2, [x19, #232]
  406b50:	add	x0, x19, #0xd8
  406b54:	cmn	x1, #0x3
  406b58:	add	x2, x2, x1
  406b5c:	str	x2, [x0, #16]
  406b60:	b.ls	406c0c <wcrtomb@plt+0x3d8c>  // b.plast
  406b64:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406b68:	mov	w2, #0x5                   	// #5
  406b6c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  406b70:	add	x1, x1, #0x672
  406b74:	ldr	x19, [x0, #1296]
  406b78:	mov	x0, #0x0                   	// #0
  406b7c:	bl	402d60 <dcgettext@plt>
  406b80:	mov	x2, x0
  406b84:	mov	w1, #0x1                   	// #1
  406b88:	mov	x0, x19
  406b8c:	bl	402be0 <__fprintf_chk@plt>
  406b90:	bl	402b40 <abort@plt>
  406b94:	add	x3, sp, #0x58
  406b98:	mov	x2, x20
  406b9c:	mov	x1, x21
  406ba0:	add	x0, sp, #0x54
  406ba4:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  406ba8:	cmn	x0, #0x1
  406bac:	b.ne	406bd8 <wcrtomb@plt+0x3d58>  // b.any
  406bb0:	ands	w22, w22, #0xfffffff3
  406bb4:	b.eq	406a84 <wcrtomb@plt+0x3c04>  // b.none
  406bb8:	mov	x1, x21
  406bbc:	add	x0, x19, #0xd8
  406bc0:	mov	x2, #0x1                   	// #1
  406bc4:	add	x21, x21, #0x1
  406bc8:	bl	4065b4 <wcrtomb@plt+0x3734>
  406bcc:	sub	x20, x20, #0x1
  406bd0:	str	xzr, [x25]
  406bd4:	b	406ae8 <wcrtomb@plt+0x3c68>
  406bd8:	cmp	x0, #0x0
  406bdc:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  406be0:	b.ne	406b08 <wcrtomb@plt+0x3c88>  // b.any
  406be4:	b	406a84 <wcrtomb@plt+0x3c04>
  406be8:	bl	402e40 <towlower@plt>
  406bec:	b	406b24 <wcrtomb@plt+0x3ca4>
  406bf0:	ldp	x4, x3, [x19, #224]
  406bf4:	mov	w1, w0
  406bf8:	add	x2, x19, #0xfc
  406bfc:	add	x0, x4, x3
  406c00:	bl	402e80 <wcrtomb@plt>
  406c04:	mov	x1, x0
  406c08:	b	406b4c <wcrtomb@plt+0x3ccc>
  406c0c:	mov	x2, x20
  406c10:	mov	x1, x21
  406c14:	b	406a90 <wcrtomb@plt+0x3c10>
  406c18:	tbz	w22, #0, 406c60 <wcrtomb@plt+0x3de0>
  406c1c:	bl	402db0 <towupper@plt>
  406c20:	str	w0, [sp, #84]
  406c24:	ldr	w0, [x24]
  406c28:	ldr	w1, [sp, #84]
  406c2c:	cmp	w0, #0x1
  406c30:	b.ne	406c68 <wcrtomb@plt+0x3de8>  // b.any
  406c34:	mov	w0, w1
  406c38:	bl	4028e0 <wctob@plt>
  406c3c:	ldp	x2, x1, [x19, #224]
  406c40:	strb	w0, [x2, x1]
  406c44:	mov	x0, #0x1                   	// #1
  406c48:	ldr	x1, [x19, #232]
  406c4c:	cmn	x0, #0x3
  406c50:	add	x1, x1, x0
  406c54:	str	x1, [x19, #232]
  406c58:	b.ls	406ae8 <wcrtomb@plt+0x3c68>  // b.plast
  406c5c:	b	406b64 <wcrtomb@plt+0x3ce4>
  406c60:	bl	402e40 <towlower@plt>
  406c64:	b	406c20 <wcrtomb@plt+0x3da0>
  406c68:	ldp	x3, x0, [x19, #224]
  406c6c:	mov	x2, x25
  406c70:	add	x0, x3, x0
  406c74:	bl	402e80 <wcrtomb@plt>
  406c78:	b	406c48 <wcrtomb@plt+0x3dc8>
  406c7c:	stp	x29, x30, [sp, #-48]!
  406c80:	mov	x29, sp
  406c84:	stp	x19, x20, [sp, #16]
  406c88:	mov	x19, x0
  406c8c:	mov	x20, x1
  406c90:	add	x0, x2, #0x1
  406c94:	str	x21, [sp, #32]
  406c98:	mov	x21, x2
  406c9c:	bl	40fd78 <wcrtomb@plt+0xcef8>
  406ca0:	stp	x0, x0, [x19]
  406ca4:	mov	w0, #0x1                   	// #1
  406ca8:	stp	xzr, x21, [x19, #16]
  406cac:	strb	w0, [x19, #32]
  406cb0:	cbz	x20, 406ccc <wcrtomb@plt+0x3e4c>
  406cb4:	ldur	x0, [x20, #36]
  406cb8:	stur	x0, [x19, #36]
  406cbc:	ldp	x19, x20, [sp, #16]
  406cc0:	ldr	x21, [sp, #32]
  406cc4:	ldp	x29, x30, [sp], #48
  406cc8:	ret
  406ccc:	stur	xzr, [x19, #36]
  406cd0:	b	406cbc <wcrtomb@plt+0x3e3c>
  406cd4:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  406cd8:	add	x2, x2, #0x638
  406cdc:	mov	x1, x0
  406ce0:	add	x0, x2, #0xd8
  406ce4:	ldr	x3, [x0, #24]
  406ce8:	cbnz	x3, 406cf4 <wcrtomb@plt+0x3e74>
  406cec:	mov	x2, #0x32                  	// #50
  406cf0:	b	406c7c <wcrtomb@plt+0x3dfc>
  406cf4:	str	xzr, [x0, #16]
  406cf8:	cbz	x1, 406d08 <wcrtomb@plt+0x3e88>
  406cfc:	ldur	x1, [x1, #36]
  406d00:	stur	x1, [x0, #36]
  406d04:	ret
  406d08:	stur	xzr, [x2, #252]
  406d0c:	b	406d04 <wcrtomb@plt+0x3e84>
  406d10:	mov	x12, #0x10a0                	// #4256
  406d14:	sub	sp, sp, x12
  406d18:	stp	x29, x30, [sp]
  406d1c:	mov	x29, sp
  406d20:	stp	x19, x20, [sp, #16]
  406d24:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  406d28:	add	x19, x19, #0x638
  406d2c:	stp	x21, x22, [sp, #32]
  406d30:	mov	x21, x1
  406d34:	mov	x22, x0
  406d38:	ldr	x20, [x0]
  406d3c:	stp	x23, x24, [sp, #48]
  406d40:	add	x23, x19, #0xd8
  406d44:	ldr	x1, [x0, #16]
  406d48:	mov	x0, #0x28                  	// #40
  406d4c:	stp	x25, x26, [sp, #64]
  406d50:	madd	x0, x1, x0, x20
  406d54:	stp	x27, x28, [sp, #80]
  406d58:	str	x0, [sp, #112]
  406d5c:	ldr	x1, [sp, #112]
  406d60:	adrp	x24, 432000 <_obstack_memory_used@@Base+0x21e54>
  406d64:	mov	x25, x24
  406d68:	ldrb	w0, [x24, #1933]
  406d6c:	cmp	x20, x1
  406d70:	b.cc	406dac <wcrtomb@plt+0x3f2c>  // b.lo, b.ul, b.last
  406d74:	cbz	w0, 406d84 <wcrtomb@plt+0x3f04>
  406d78:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  406d7c:	add	x0, x0, #0x6aa
  406d80:	bl	402b90 <puts@plt>
  406d84:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406d88:	ldrb	w0, [x0, #1896]
  406d8c:	cbnz	w0, 406fa4 <wcrtomb@plt+0x4124>
  406d90:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406d94:	add	x0, x0, #0x638
  406d98:	add	x3, x0, #0x70
  406d9c:	ldrb	w2, [x0, #184]
  406da0:	ldr	x1, [x0, #168]
  406da4:	ldr	x0, [x0, #160]
  406da8:	b	407464 <wcrtomb@plt+0x45e4>
  406dac:	cbz	w0, 406dd0 <wcrtomb@plt+0x3f50>
  406db0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406db4:	ldr	x1, [x0, #1320]
  406db8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  406dbc:	add	x0, x0, #0x6a0
  406dc0:	bl	402d70 <fputs_unlocked@plt>
  406dc4:	mov	x1, x20
  406dc8:	mov	x0, x22
  406dcc:	bl	4057e8 <wcrtomb@plt+0x2968>
  406dd0:	ldr	x0, [x20]
  406dd4:	cbnz	x0, 406de0 <wcrtomb@plt+0x3f60>
  406dd8:	mov	w0, #0x1                   	// #1
  406ddc:	b	406e00 <wcrtomb@plt+0x3f80>
  406de0:	ldr	w1, [x20, #16]
  406de4:	cmp	w1, #0x1
  406de8:	b.eq	406f0c <wcrtomb@plt+0x408c>  // b.none
  406dec:	ldr	x2, [x20, #8]
  406df0:	cbnz	x2, 406e34 <wcrtomb@plt+0x3fb4>
  406df4:	mov	x1, x21
  406df8:	bl	406810 <wcrtomb@plt+0x3990>
  406dfc:	and	w0, w0, #0xff
  406e00:	ldrb	w1, [x20, #20]
  406e04:	cmp	w0, w1
  406e08:	b.eq	406f6c <wcrtomb@plt+0x40ec>  // b.none
  406e0c:	ldrb	w1, [x20, #21]
  406e10:	sub	w2, w1, #0x23
  406e14:	cmp	w2, #0x5a
  406e18:	b.hi	407c88 <wcrtomb@plt+0x4e08>  // b.pmore
  406e1c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  406e20:	add	x0, x0, #0x75c
  406e24:	ldrh	w0, [x0, w2, uxtw #1]
  406e28:	adr	x2, 406e34 <wcrtomb@plt+0x3fb4>
  406e2c:	add	x0, x2, w0, sxth #2
  406e30:	br	x0
  406e34:	ldr	w2, [x0]
  406e38:	cmp	w2, #0x2
  406e3c:	b.ne	406e94 <wcrtomb@plt+0x4014>  // b.any
  406e40:	cmp	w1, #0x2
  406e44:	b.ne	406e50 <wcrtomb@plt+0x3fd0>  // b.any
  406e48:	mov	w0, #0x0                   	// #0
  406e4c:	b	406e00 <wcrtomb@plt+0x3f80>
  406e50:	ldr	x0, [x0, #8]
  406e54:	ldr	x1, [x21, #16]
  406e58:	cmp	x1, x0
  406e5c:	b.cc	406e48 <wcrtomb@plt+0x3fc8>  // b.lo, b.ul, b.last
  406e60:	mov	w0, #0x1                   	// #1
  406e64:	str	w0, [x20, #16]
  406e68:	ldr	x0, [x20, #8]
  406e6c:	ldr	w1, [x0]
  406e70:	sub	w1, w1, #0x1
  406e74:	cmp	w1, #0x4
  406e78:	b.hi	406f0c <wcrtomb@plt+0x408c>  // b.pmore
  406e7c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0xae54>
  406e80:	add	x2, x2, #0x814
  406e84:	ldrb	w1, [x2, w1, uxtw]
  406e88:	adr	x2, 406e94 <wcrtomb@plt+0x4014>
  406e8c:	add	x1, x2, w1, sxtb #2
  406e90:	br	x1
  406e94:	mov	x1, x21
  406e98:	bl	406810 <wcrtomb@plt+0x3990>
  406e9c:	tst	w0, #0xff
  406ea0:	b.ne	406e60 <wcrtomb@plt+0x3fe0>  // b.any
  406ea4:	b	406e48 <wcrtomb@plt+0x3fc8>
  406ea8:	ldr	x0, [x0, #8]
  406eac:	ldr	x1, [x21, #16]
  406eb0:	cmp	x1, x0
  406eb4:	b.cs	406ec4 <wcrtomb@plt+0x4044>  // b.hs, b.nlast
  406eb8:	mov	w0, #0x1                   	// #1
  406ebc:	and	w0, w0, #0x1
  406ec0:	b	406e00 <wcrtomb@plt+0x3f80>
  406ec4:	mov	w0, #0x2                   	// #2
  406ec8:	str	w0, [x20, #16]
  406ecc:	b.eq	406eb8 <wcrtomb@plt+0x4038>  // b.none
  406ed0:	ldr	x0, [x20]
  406ed4:	mov	x1, x21
  406ed8:	bl	406810 <wcrtomb@plt+0x3990>
  406edc:	and	w0, w0, #0xff
  406ee0:	b	406ebc <wcrtomb@plt+0x403c>
  406ee4:	ldr	x2, [x0, #16]
  406ee8:	ldr	x1, [x21, #16]
  406eec:	add	x1, x1, x2
  406ef0:	str	x1, [x0, #8]
  406ef4:	b	406dd8 <wcrtomb@plt+0x3f58>
  406ef8:	ldr	x1, [x0, #16]
  406efc:	ldr	x2, [x21, #16]
  406f00:	udiv	x2, x2, x1
  406f04:	madd	x1, x2, x1, x1
  406f08:	b	406ef0 <wcrtomb@plt+0x4070>
  406f0c:	ldr	x0, [x20, #8]
  406f10:	ldr	w2, [x0]
  406f14:	cmp	w2, #0x2
  406f18:	b.ne	406f3c <wcrtomb@plt+0x40bc>  // b.any
  406f1c:	ldr	x0, [x0, #8]
  406f20:	ldr	x1, [x21, #16]
  406f24:	cmp	x1, x0
  406f28:	b.cc	406f30 <wcrtomb@plt+0x40b0>  // b.lo, b.ul, b.last
  406f2c:	str	w2, [x20, #16]
  406f30:	cmp	x1, x0
  406f34:	cset	w0, ls  // ls = plast
  406f38:	b	406e00 <wcrtomb@plt+0x3f80>
  406f3c:	mov	x1, x21
  406f40:	bl	406810 <wcrtomb@plt+0x3990>
  406f44:	ands	w0, w0, #0xff
  406f48:	b.eq	406dd8 <wcrtomb@plt+0x3f58>  // b.none
  406f4c:	mov	w1, #0x2                   	// #2
  406f50:	str	w1, [x20, #16]
  406f54:	b	406e00 <wcrtomb@plt+0x3f80>
  406f58:	bl	405e84 <wcrtomb@plt+0x3004>
  406f5c:	ldr	x1, [x20, #24]
  406f60:	str	x1, [x0, #8]
  406f64:	ldr	x1, [x20, #32]
  406f68:	str	x1, [x0, #16]
  406f6c:	add	x20, x20, #0x28
  406f70:	b	406d5c <wcrtomb@plt+0x3edc>
  406f74:	ldr	w0, [x20, #16]
  406f78:	cmp	w0, #0x1
  406f7c:	b.eq	406f9c <wcrtomb@plt+0x411c>  // b.none
  406f80:	ldp	x0, x1, [x20, #24]
  406f84:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x21e54>
  406f88:	add	x3, x3, #0x638
  406f8c:	mov	w2, #0x1                   	// #1
  406f90:	add	x3, x3, #0x70
  406f94:	sub	x1, x1, #0x1
  406f98:	bl	4066f4 <wcrtomb@plt+0x3874>
  406f9c:	ldrb	w0, [x25, #1933]
  406fa0:	cbnz	w0, 406fcc <wcrtomb@plt+0x414c>
  406fa4:	mov	w0, #0xffffffff            	// #-1
  406fa8:	mov	x12, #0x10a0                	// #4256
  406fac:	ldp	x29, x30, [sp]
  406fb0:	ldp	x19, x20, [sp, #16]
  406fb4:	ldp	x21, x22, [sp, #32]
  406fb8:	ldp	x23, x24, [sp, #48]
  406fbc:	ldp	x25, x26, [sp, #64]
  406fc0:	ldp	x27, x28, [sp, #80]
  406fc4:	add	sp, sp, x12
  406fc8:	ret
  406fcc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  406fd0:	add	x0, x0, #0x6aa
  406fd4:	bl	402b90 <puts@plt>
  406fd8:	b	406fa4 <wcrtomb@plt+0x4124>
  406fdc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  406fe0:	add	x25, x19, #0x98
  406fe4:	ldp	x20, x26, [x19, #160]
  406fe8:	ldrb	w1, [x0, #1152]
  406fec:	mov	x2, x26
  406ff0:	mov	x0, x20
  406ff4:	bl	402cf0 <memchr@plt>
  406ff8:	cbz	x0, 406fa4 <wcrtomb@plt+0x4124>
  406ffc:	add	x1, x0, #0x1
  407000:	ldr	x0, [x19, #176]
  407004:	sub	x20, x1, x20
  407008:	sub	x0, x0, x20
  40700c:	str	x0, [x19, #176]
  407010:	ldrb	w0, [x24, #1933]
  407014:	sub	x20, x26, x20
  407018:	stp	x1, x20, [x19, #160]
  40701c:	ldr	x20, [x22]
  407020:	cbz	w0, 406d5c <wcrtomb@plt+0x3edc>
  407024:	mov	x0, x25
  407028:	bl	405d4c <wcrtomb@plt+0x2ecc>
  40702c:	b	406d5c <wcrtomb@plt+0x3edc>
  407030:	ldr	x25, [x20, #32]
  407034:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0xbe54>
  407038:	mov	x0, #0x0                   	// #0
  40703c:	add	x24, x24, #0x5b2
  407040:	mov	w26, w25
  407044:	bl	406cd4 <wcrtomb@plt+0x3e54>
  407048:	cbnz	w25, 4070c4 <wcrtomb@plt+0x4244>
  40704c:	add	x27, x19, #0x98
  407050:	mov	x2, #0x1                   	// #1
  407054:	mov	x0, x27
  407058:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40705c:	add	x1, x1, #0x9f5
  407060:	bl	4065b4 <wcrtomb@plt+0x3734>
  407064:	ldr	x0, [x19, #160]
  407068:	mov	x1, x24
  40706c:	bl	402990 <popen@plt>
  407070:	mov	x24, x0
  407074:	cbz	x24, 4070ec <wcrtomb@plt+0x426c>
  407078:	add	x27, x19, #0xd8
  40707c:	mov	x0, x24
  407080:	bl	402c70 <feof_unlocked@plt>
  407084:	cbz	w0, 407104 <wcrtomb@plt+0x4284>
  407088:	mov	x0, x24
  40708c:	bl	402da0 <pclose@plt>
  407090:	cbnz	w25, 407c5c <wcrtomb@plt+0x4ddc>
  407094:	ldr	x0, [x19, #232]
  407098:	cbz	x0, 4070bc <wcrtomb@plt+0x423c>
  40709c:	ldr	x2, [x19, #224]
  4070a0:	sub	x0, x0, #0x1
  4070a4:	ldrb	w3, [x2, x0]
  4070a8:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  4070ac:	ldrb	w2, [x2, #1152]
  4070b0:	cmp	w3, w2
  4070b4:	b.ne	4070bc <wcrtomb@plt+0x423c>  // b.any
  4070b8:	str	x0, [x19, #232]
  4070bc:	bl	406930 <wcrtomb@plt+0x3ab0>
  4070c0:	b	406f6c <wcrtomb@plt+0x40ec>
  4070c4:	ldr	x0, [x20, #24]
  4070c8:	mov	x1, x24
  4070cc:	add	x0, x0, w25, sxtw
  4070d0:	sturb	wzr, [x0, #-1]
  4070d4:	ldr	x0, [x20, #24]
  4070d8:	bl	402990 <popen@plt>
  4070dc:	mov	x24, x0
  4070e0:	add	x0, x19, #0x70
  4070e4:	bl	406350 <wcrtomb@plt+0x34d0>
  4070e8:	b	407074 <wcrtomb@plt+0x41f4>
  4070ec:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4070f0:	add	x1, x1, #0x6b8
  4070f4:	mov	w2, #0x5                   	// #5
  4070f8:	mov	x0, #0x0                   	// #0
  4070fc:	bl	402d60 <dcgettext@plt>
  407100:	bl	408a48 <wcrtomb@plt+0x5bc8>
  407104:	mov	x2, #0x1000                	// #4096
  407108:	mov	x3, x24
  40710c:	add	x0, sp, #0xa0
  407110:	mov	x1, #0x1                   	// #1
  407114:	bl	402ba0 <fread_unlocked@plt>
  407118:	sxtw	x2, w0
  40711c:	cmp	w0, #0x0
  407120:	b.le	40707c <wcrtomb@plt+0x41fc>
  407124:	cbnz	w26, 407138 <wcrtomb@plt+0x42b8>
  407128:	add	x1, sp, #0xa0
  40712c:	mov	x0, x27
  407130:	bl	4065b4 <wcrtomb@plt+0x3734>
  407134:	b	40707c <wcrtomb@plt+0x41fc>
  407138:	ldr	x3, [x19, #128]
  40713c:	add	x0, sp, #0xa0
  407140:	mov	x1, #0x1                   	// #1
  407144:	bl	408d8c <wcrtomb@plt+0x5f0c>
  407148:	b	40707c <wcrtomb@plt+0x41fc>
  40714c:	add	x1, x19, #0x98
  407150:	mov	x0, x19
  407154:	bl	4069c4 <wcrtomb@plt+0x3b44>
  407158:	ldrb	w0, [x24, #1933]
  40715c:	cbz	w0, 406f6c <wcrtomb@plt+0x40ec>
  407160:	mov	x0, x19
  407164:	b	407180 <wcrtomb@plt+0x4300>
  407168:	add	x1, x19, #0x98
  40716c:	mov	x0, x19
  407170:	bl	406974 <wcrtomb@plt+0x3af4>
  407174:	ldrb	w0, [x24, #1933]
  407178:	cbz	w0, 406f6c <wcrtomb@plt+0x40ec>
  40717c:	add	x0, x19, #0x98
  407180:	bl	405d4c <wcrtomb@plt+0x2ecc>
  407184:	b	406f6c <wcrtomb@plt+0x40ec>
  407188:	mov	x1, x19
  40718c:	add	x0, x19, #0x98
  407190:	b	407154 <wcrtomb@plt+0x42d4>
  407194:	mov	x1, x19
  407198:	add	x0, x19, #0x98
  40719c:	bl	406974 <wcrtomb@plt+0x3af4>
  4071a0:	b	407158 <wcrtomb@plt+0x42d8>
  4071a4:	ldp	x0, x1, [x20, #24]
  4071a8:	add	x3, x19, #0x70
  4071ac:	mov	w2, #0x1                   	// #1
  4071b0:	sub	x1, x1, #0x1
  4071b4:	bl	4066f4 <wcrtomb@plt+0x3874>
  4071b8:	b	406f6c <wcrtomb@plt+0x40ec>
  4071bc:	ldr	w0, [x20, #24]
  4071c0:	str	w0, [sp, #96]
  4071c4:	mov	w0, w0
  4071c8:	cmn	w0, #0x1
  4071cc:	b.ne	4071dc <wcrtomb@plt+0x435c>  // b.any
  4071d0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4071d4:	ldr	w0, [x0, #1144]
  4071d8:	str	w0, [sp, #96]
  4071dc:	ldp	x1, x0, [x19, #160]
  4071e0:	str	x0, [sp, #120]
  4071e4:	add	x26, sp, #0xa0
  4071e8:	str	x1, [sp, #104]
  4071ec:	add	x0, x19, #0x70
  4071f0:	add	x28, x26, #0x1
  4071f4:	mov	x25, #0x0                   	// #0
  4071f8:	mov	x27, #0x0                   	// #0
  4071fc:	ldr	x24, [x0, #16]
  407200:	bl	406350 <wcrtomb@plt+0x34d0>
  407204:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  407208:	add	x0, x0, #0x49d
  40720c:	str	x0, [sp, #128]
  407210:	ldr	x0, [sp, #120]
  407214:	cmp	x0, x25
  407218:	b.ne	407258 <wcrtomb@plt+0x43d8>  // b.any
  40721c:	mov	x2, #0x1                   	// #1
  407220:	mov	x3, x24
  407224:	mov	x1, x2
  407228:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  40722c:	add	x0, x0, #0x6ce
  407230:	bl	408d8c <wcrtomb@plt+0x5f0c>
  407234:	mov	x2, #0x1                   	// #1
  407238:	mov	x3, x24
  40723c:	mov	x1, x2
  407240:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407244:	add	x0, x0, #0x480
  407248:	bl	408d8c <wcrtomb@plt+0x5f0c>
  40724c:	mov	x0, x24
  407250:	bl	406118 <wcrtomb@plt+0x3298>
  407254:	b	406f6c <wcrtomb@plt+0x40ec>
  407258:	ldr	x0, [sp, #104]
  40725c:	ldrb	w1, [x0, x25]
  407260:	str	w1, [sp, #136]
  407264:	tbnz	w1, #7, 40731c <wcrtomb@plt+0x449c>
  407268:	bl	402c00 <__ctype_b_loc@plt>
  40726c:	ldr	w1, [sp, #136]
  407270:	ldr	x0, [x0]
  407274:	ubfiz	x2, x1, #1, #8
  407278:	ldrh	w0, [x0, x2]
  40727c:	tbz	w0, #14, 40731c <wcrtomb@plt+0x449c>
  407280:	ldr	x0, [sp, #104]
  407284:	strb	w1, [sp, #160]
  407288:	ldrb	w0, [x0, x25]
  40728c:	cmp	w0, #0x5c
  407290:	b.ne	4073ac <wcrtomb@plt+0x452c>  // b.any
  407294:	strb	w0, [sp, #161]
  407298:	add	x0, x26, #0x2
  40729c:	ldr	w1, [sp, #96]
  4072a0:	sub	x4, x0, x26
  4072a4:	add	x0, x4, x27
  4072a8:	cmp	x0, w1, sxtw
  4072ac:	b.cc	4072f4 <wcrtomb@plt+0x4474>  // b.lo, b.ul, b.last
  4072b0:	cmp	w1, #0x0
  4072b4:	b.le	4072f4 <wcrtomb@plt+0x4474>
  4072b8:	mov	x2, #0x1                   	// #1
  4072bc:	mov	x3, x24
  4072c0:	mov	x1, x2
  4072c4:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  4072c8:	add	x0, x0, #0x6cc
  4072cc:	str	x4, [sp, #136]
  4072d0:	bl	408d8c <wcrtomb@plt+0x5f0c>
  4072d4:	mov	x27, #0x0                   	// #0
  4072d8:	mov	x2, #0x1                   	// #1
  4072dc:	mov	x3, x24
  4072e0:	mov	x1, x2
  4072e4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4072e8:	add	x0, x0, #0x480
  4072ec:	bl	408d8c <wcrtomb@plt+0x5f0c>
  4072f0:	ldr	x4, [sp, #136]
  4072f4:	mov	x2, x4
  4072f8:	mov	x3, x24
  4072fc:	mov	x0, x26
  407300:	mov	x1, #0x1                   	// #1
  407304:	str	x4, [sp, #136]
  407308:	bl	408d8c <wcrtomb@plt+0x5f0c>
  40730c:	add	x25, x25, #0x1
  407310:	ldr	x4, [sp, #136]
  407314:	add	x27, x27, x4
  407318:	b	407210 <wcrtomb@plt+0x4390>
  40731c:	mov	w0, #0x5c                  	// #92
  407320:	strb	w0, [sp, #160]
  407324:	ldr	x0, [sp, #104]
  407328:	ldrb	w4, [x0, x25]
  40732c:	sub	w1, w4, #0x7
  407330:	cmp	w1, #0x6
  407334:	b.hi	407388 <wcrtomb@plt+0x4508>  // b.pmore
  407338:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  40733c:	add	x0, x0, #0x81c
  407340:	ldrb	w0, [x0, w1, uxtw]
  407344:	adr	x1, 407350 <wcrtomb@plt+0x44d0>
  407348:	add	x0, x1, w0, sxtb #2
  40734c:	br	x0
  407350:	mov	w0, #0x61                  	// #97
  407354:	b	407294 <wcrtomb@plt+0x4414>
  407358:	mov	w0, #0x62                  	// #98
  40735c:	b	407294 <wcrtomb@plt+0x4414>
  407360:	mov	w0, #0x66                  	// #102
  407364:	b	407294 <wcrtomb@plt+0x4414>
  407368:	mov	w0, #0x6e                  	// #110
  40736c:	b	407294 <wcrtomb@plt+0x4414>
  407370:	mov	w0, #0x72                  	// #114
  407374:	b	407294 <wcrtomb@plt+0x4414>
  407378:	mov	w0, #0x74                  	// #116
  40737c:	b	407294 <wcrtomb@plt+0x4414>
  407380:	mov	w0, #0x76                  	// #118
  407384:	b	407294 <wcrtomb@plt+0x4414>
  407388:	ldr	x3, [sp, #128]
  40738c:	mov	x2, #0xb3                  	// #179
  407390:	mov	w1, #0x1                   	// #1
  407394:	mov	x0, x28
  407398:	bl	4027b0 <__sprintf_chk@plt>
  40739c:	mov	x0, x28
  4073a0:	bl	402790 <strlen@plt>
  4073a4:	add	x0, x28, x0
  4073a8:	b	40729c <wcrtomb@plt+0x441c>
  4073ac:	mov	x0, x28
  4073b0:	b	40729c <wcrtomb@plt+0x441c>
  4073b4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4073b8:	ldrb	w0, [x0, #1896]
  4073bc:	cbnz	w0, 4073d0 <wcrtomb@plt+0x4550>
  4073c0:	ldp	x0, x1, [x19, #160]
  4073c4:	add	x3, x19, #0x70
  4073c8:	ldrb	w2, [x19, #184]
  4073cc:	bl	4066f4 <wcrtomb@plt+0x3874>
  4073d0:	mov	x0, x21
  4073d4:	bl	406778 <wcrtomb@plt+0x38f8>
  4073d8:	tst	w0, #0xff
  4073dc:	b.ne	406f9c <wcrtomb@plt+0x411c>  // b.any
  4073e0:	mov	x1, x22
  4073e4:	mov	x0, x21
  4073e8:	mov	w2, #0x0                   	// #0
  4073ec:	bl	406488 <wcrtomb@plt+0x3608>
  4073f0:	tst	w0, #0xff
  4073f4:	b.ne	407174 <wcrtomb@plt+0x42f4>  // b.any
  4073f8:	b	406f9c <wcrtomb@plt+0x411c>
  4073fc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  407400:	add	x1, x1, #0x480
  407404:	mov	x2, #0x1                   	// #1
  407408:	add	x0, x19, #0x98
  40740c:	bl	4065b4 <wcrtomb@plt+0x3734>
  407410:	mov	x0, x21
  407414:	bl	406778 <wcrtomb@plt+0x38f8>
  407418:	tst	w0, #0xff
  40741c:	b.eq	40746c <wcrtomb@plt+0x45ec>  // b.none
  407420:	ldrb	w0, [x25, #1933]
  407424:	cbz	w0, 407434 <wcrtomb@plt+0x45b4>
  407428:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  40742c:	add	x0, x0, #0x6aa
  407430:	bl	402b90 <puts@plt>
  407434:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  407438:	ldr	x1, [x19, #168]
  40743c:	ldr	w2, [x2, #2296]
  407440:	sub	x1, x1, #0x1
  407444:	str	x1, [x19, #168]
  407448:	cbnz	w2, 406fa4 <wcrtomb@plt+0x4124>
  40744c:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  407450:	ldrb	w2, [x2, #1896]
  407454:	cbnz	w2, 406fa4 <wcrtomb@plt+0x4124>
  407458:	ldrb	w2, [x19, #184]
  40745c:	add	x3, x19, #0x70
  407460:	ldr	x0, [x19, #160]
  407464:	bl	4066f4 <wcrtomb@plt+0x3874>
  407468:	b	406fa4 <wcrtomb@plt+0x4124>
  40746c:	mov	x1, x22
  407470:	mov	x0, x21
  407474:	mov	w2, #0x1                   	// #1
  407478:	bl	406488 <wcrtomb@plt+0x3608>
  40747c:	tst	w0, #0xff
  407480:	b.ne	407174 <wcrtomb@plt+0x42f4>  // b.any
  407484:	b	407420 <wcrtomb@plt+0x45a0>
  407488:	add	x3, x19, #0x70
  40748c:	ldrb	w2, [x19, #184]
  407490:	ldp	x0, x1, [x19, #160]
  407494:	b	4071b4 <wcrtomb@plt+0x4334>
  407498:	add	x24, x19, #0x98
  40749c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4074a0:	ldrb	w1, [x0, #1152]
  4074a4:	ldp	x25, x26, [x24, #8]
  4074a8:	mov	x2, x26
  4074ac:	mov	x0, x25
  4074b0:	bl	402cf0 <memchr@plt>
  4074b4:	cbz	x0, 407c94 <wcrtomb@plt+0x4e14>
  4074b8:	sub	x26, x0, x25
  4074bc:	mov	w2, #0x1                   	// #1
  4074c0:	add	x3, x19, #0x70
  4074c4:	mov	x1, x26
  4074c8:	mov	x0, x25
  4074cc:	b	4071b4 <wcrtomb@plt+0x4334>
  4074d0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4074d4:	ldrb	w0, [x0, #1896]
  4074d8:	cbnz	w0, 4074f8 <wcrtomb@plt+0x4678>
  4074dc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4074e0:	add	x0, x0, #0x638
  4074e4:	add	x3, x0, #0x70
  4074e8:	ldrb	w2, [x0, #184]
  4074ec:	ldr	x1, [x0, #168]
  4074f0:	ldr	x0, [x0, #160]
  4074f4:	bl	4066f4 <wcrtomb@plt+0x3874>
  4074f8:	bl	406390 <wcrtomb@plt+0x3510>
  4074fc:	ldr	w0, [x20, #24]
  407500:	cmn	w0, #0x1
  407504:	b.ne	406fa8 <wcrtomb@plt+0x4128>  // b.any
  407508:	mov	w0, #0x0                   	// #0
  40750c:	b	406fa8 <wcrtomb@plt+0x4128>
  407510:	ldr	x0, [x20, #24]
  407514:	cbz	x0, 406f6c <wcrtomb@plt+0x40ec>
  407518:	bl	405e84 <wcrtomb@plt+0x3004>
  40751c:	ldr	x1, [x20, #24]
  407520:	str	x1, [x0]
  407524:	b	406f6c <wcrtomb@plt+0x40ec>
  407528:	ldr	x0, [x20, #24]
  40752c:	ldr	x0, [x0, #16]
  407530:	cbz	x0, 406f6c <wcrtomb@plt+0x40ec>
  407534:	bl	402c70 <feof_unlocked@plt>
  407538:	cbnz	w0, 406f6c <wcrtomb@plt+0x40ec>
  40753c:	str	xzr, [sp, #160]
  407540:	add	x1, sp, #0x98
  407544:	ldr	x0, [x20, #24]
  407548:	ldr	x3, [x0, #16]
  40754c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407550:	ldrb	w2, [x0, #1152]
  407554:	add	x0, sp, #0xa0
  407558:	bl	408edc <wcrtomb@plt+0x605c>
  40755c:	mov	x24, x0
  407560:	cmn	w0, #0x1
  407564:	b.eq	407584 <wcrtomb@plt+0x4704>  // b.none
  407568:	bl	405e84 <wcrtomb@plt+0x3004>
  40756c:	sxtw	x24, w24
  407570:	mov	w1, #0x1                   	// #1
  407574:	strb	w1, [x0, #32]
  407578:	ldr	x1, [sp, #160]
  40757c:	stp	x1, x24, [x0, #8]
  407580:	b	406f6c <wcrtomb@plt+0x40ec>
  407584:	ldr	x0, [sp, #160]
  407588:	bl	402c20 <free@plt>
  40758c:	b	406f6c <wcrtomb@plt+0x40ec>
  407590:	add	x26, x19, #0x98
  407594:	add	x27, x19, #0x108
  407598:	ldr	x25, [x20, #24]
  40759c:	mov	x0, x26
  4075a0:	bl	406cd4 <wcrtomb@plt+0x3e54>
  4075a4:	ldp	x1, x2, [x19, #160]
  4075a8:	mov	x4, x27
  4075ac:	ldrb	w5, [x25, #32]
  4075b0:	mov	x3, #0x0                   	// #0
  4075b4:	ldr	x0, [x25]
  4075b8:	ubfx	x5, x5, #4, #4
  4075bc:	add	w5, w5, #0x1
  4075c0:	bl	4081d4 <wcrtomb@plt+0x5354>
  4075c4:	cbz	w0, 407174 <wcrtomb@plt+0x42f4>
  4075c8:	ldrb	w0, [x24, #1933]
  4075cc:	cbnz	w0, 4076e4 <wcrtomb@plt+0x4864>
  4075d0:	ldr	x0, [x25, #8]
  4075d4:	cbz	x0, 4077a4 <wcrtomb@plt+0x4924>
  4075d8:	mov	x26, #0x0                   	// #0
  4075dc:	mov	x6, #0x0                   	// #0
  4075e0:	mov	x28, #0x0                   	// #0
  4075e4:	ldp	x1, x0, [x19, #272]
  4075e8:	ldr	x3, [x1]
  4075ec:	ldr	x27, [x0]
  4075f0:	cmp	x3, x28
  4075f4:	sub	x27, x27, x3
  4075f8:	b.ls	40761c <wcrtomb@plt+0x479c>  // b.plast
  4075fc:	ldr	x1, [x19, #160]
  407600:	sub	x2, x3, x28
  407604:	mov	x0, x23
  407608:	stp	x3, x6, [sp, #96]
  40760c:	add	x1, x1, x28
  407610:	bl	4065b4 <wcrtomb@plt+0x3734>
  407614:	ldp	x3, x6, [sp, #96]
  407618:	mov	x28, x3
  40761c:	cmp	x27, #0x0
  407620:	ccmp	x26, #0x0, #0x4, eq  // eq = none
  407624:	b.eq	407630 <wcrtomb@plt+0x47b0>  // b.none
  407628:	cmp	x3, x6
  40762c:	b.ls	407980 <wcrtomb@plt+0x4b00>  // b.plast
  407630:	ldr	x0, [x25, #16]
  407634:	add	x26, x26, #0x1
  407638:	cmp	x26, x0
  40763c:	b.cc	40797c <wcrtomb@plt+0x4afc>  // b.lo, b.ul, b.last
  407640:	ldr	x28, [x25, #8]
  407644:	mov	w0, #0x1                   	// #1
  407648:	strb	w0, [x19, #144]
  40764c:	mov	w0, #0x0                   	// #0
  407650:	cbnz	x28, 4078d4 <wcrtomb@plt+0x4a54>
  407654:	ldrb	w0, [x25, #32]
  407658:	and	w0, w0, #0x1
  40765c:	ldr	x1, [x19, #280]
  407660:	add	x4, x19, #0x108
  407664:	add	x28, x3, x27
  407668:	ldr	x2, [x19, #168]
  40766c:	ldr	x6, [x1]
  407670:	str	x6, [sp, #96]
  407674:	cbz	w0, 4076a4 <wcrtomb@plt+0x4824>
  407678:	cmp	x28, x2
  40767c:	b.hi	4076a4 <wcrtomb@plt+0x4824>  // b.pmore
  407680:	ldrb	w5, [x25, #32]
  407684:	mov	x3, x28
  407688:	ldr	x0, [x25]
  40768c:	ldr	x1, [x19, #160]
  407690:	ubfx	x5, x5, #4, #4
  407694:	add	w5, w5, #0x1
  407698:	bl	4081d4 <wcrtomb@plt+0x5354>
  40769c:	ldr	x6, [sp, #96]
  4076a0:	cbnz	w0, 4075e4 <wcrtomb@plt+0x4764>
  4076a4:	ldr	x2, [x19, #168]
  4076a8:	cmp	x2, x28
  4076ac:	b.ls	4076c4 <wcrtomb@plt+0x4844>  // b.plast
  4076b0:	ldr	x1, [x19, #160]
  4076b4:	sub	x2, x2, x28
  4076b8:	mov	x0, x23
  4076bc:	add	x1, x1, x28
  4076c0:	bl	4065b4 <wcrtomb@plt+0x3734>
  4076c4:	ldrb	w0, [x19, #184]
  4076c8:	strb	w0, [x23, #32]
  4076cc:	mov	x0, x23
  4076d0:	bl	4068e8 <wcrtomb@plt+0x3a68>
  4076d4:	ldr	x0, [x25, #16]
  4076d8:	cmp	x0, x26
  4076dc:	b.ls	4077f4 <wcrtomb@plt+0x4974>  // b.plast
  4076e0:	b	407174 <wcrtomb@plt+0x42f4>
  4076e4:	ldr	x0, [x19, #264]
  4076e8:	cbz	x0, 407708 <wcrtomb@plt+0x4888>
  4076ec:	ldr	x0, [x27, #8]
  4076f0:	ldr	x0, [x0]
  4076f4:	cmn	x0, #0x1
  4076f8:	b.eq	407708 <wcrtomb@plt+0x4888>  // b.none
  4076fc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  407700:	add	x0, x0, #0x6d0
  407704:	bl	402b90 <puts@plt>
  407708:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0xae54>
  40770c:	adrp	x27, 41b000 <_obstack_memory_used@@Base+0xae54>
  407710:	add	x26, x26, #0x6e8
  407714:	add	x27, x27, #0x6fc
  407718:	mov	x28, #0x0                   	// #0
  40771c:	b	40778c <wcrtomb@plt+0x490c>
  407720:	lsl	x6, x28, #3
  407724:	str	x5, [sp, #104]
  407728:	ldr	x3, [x2, x6]
  40772c:	cmn	x3, #0x1
  407730:	b.eq	4075d0 <wcrtomb@plt+0x4750>  // b.none
  407734:	ldr	w4, [x1, x6]
  407738:	mov	w2, w28
  40773c:	mov	x1, x26
  407740:	mov	w0, #0x1                   	// #1
  407744:	str	x6, [sp, #96]
  407748:	bl	4029f0 <__printf_chk@plt>
  40774c:	ldp	x6, x5, [sp, #96]
  407750:	ldp	x0, x1, [x5, #8]
  407754:	ldr	x0, [x0, x6]
  407758:	ldr	x1, [x1, x6]
  40775c:	cmp	x0, x1
  407760:	b.eq	407780 <wcrtomb@plt+0x4900>  // b.none
  407764:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  407768:	sub	x1, x1, x0
  40776c:	ldr	x4, [x19, #160]
  407770:	ldr	x3, [x2, #1320]
  407774:	add	x0, x4, x0
  407778:	mov	x2, #0x1                   	// #1
  40777c:	bl	402780 <fwrite_unlocked@plt>
  407780:	add	x28, x28, #0x1
  407784:	mov	x0, x27
  407788:	bl	402b90 <puts@plt>
  40778c:	add	x5, x19, #0x108
  407790:	ldr	x0, [x19, #264]
  407794:	ldp	x2, x1, [x5, #8]
  407798:	cmp	x28, x0
  40779c:	b.cc	407720 <wcrtomb@plt+0x48a0>  // b.lo, b.ul, b.last
  4077a0:	b	4075d0 <wcrtomb@plt+0x4750>
  4077a4:	ldr	x0, [x25, #16]
  4077a8:	cmp	x0, #0x1
  4077ac:	b.hi	4075d8 <wcrtomb@plt+0x4758>  // b.pmore
  4077b0:	ldp	x1, x4, [x19, #272]
  4077b4:	ldr	x3, [x1]
  4077b8:	ldr	x2, [x4]
  4077bc:	ldr	x1, [x19, #168]
  4077c0:	cbnz	x3, 4078bc <wcrtomb@plt+0x4a3c>
  4077c4:	ldrb	w5, [x25, #32]
  4077c8:	tbnz	w5, #0, 4078bc <wcrtomb@plt+0x4a3c>
  4077cc:	mov	w3, #0x1                   	// #1
  4077d0:	strb	w3, [x19, #144]
  4077d4:	ldr	x3, [x19, #160]
  4077d8:	sub	x1, x1, x2
  4077dc:	add	x3, x3, x2
  4077e0:	stp	x3, x1, [x19, #160]
  4077e4:	ldr	x2, [x4]
  4077e8:	ldr	x1, [x19, #176]
  4077ec:	sub	x1, x1, x2
  4077f0:	str	x1, [x19, #176]
  4077f4:	ldrb	w0, [x25, #32]
  4077f8:	tbz	w0, #1, 40780c <wcrtomb@plt+0x498c>
  4077fc:	ldp	x0, x1, [x19, #160]
  407800:	add	x3, x19, #0x70
  407804:	ldrb	w2, [x19, #184]
  407808:	bl	4066f4 <wcrtomb@plt+0x3874>
  40780c:	ldrb	w0, [x25, #32]
  407810:	tbz	w0, #3, 40788c <wcrtomb@plt+0x4a0c>
  407814:	add	x26, x19, #0x98
  407818:	mov	x0, #0x0                   	// #0
  40781c:	bl	406cd4 <wcrtomb@plt+0x3e54>
  407820:	mov	x0, x26
  407824:	mov	x2, #0x1                   	// #1
  407828:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40782c:	add	x1, x1, #0x9f5
  407830:	bl	4065b4 <wcrtomb@plt+0x3734>
  407834:	ldr	x0, [x19, #160]
  407838:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40783c:	add	x1, x1, #0x5b2
  407840:	bl	402990 <popen@plt>
  407844:	mov	x26, x0
  407848:	cbz	x0, 4079e4 <wcrtomb@plt+0x4b64>
  40784c:	mov	x0, x26
  407850:	bl	402c70 <feof_unlocked@plt>
  407854:	cbz	w0, 4079b4 <wcrtomb@plt+0x4b34>
  407858:	mov	x0, x26
  40785c:	bl	402da0 <pclose@plt>
  407860:	bl	406930 <wcrtomb@plt+0x3ab0>
  407864:	ldr	x0, [x19, #168]
  407868:	cbz	x0, 40788c <wcrtomb@plt+0x4a0c>
  40786c:	ldr	x2, [x19, #160]
  407870:	sub	x0, x0, #0x1
  407874:	ldrb	w3, [x2, x0]
  407878:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  40787c:	ldrb	w2, [x2, #1152]
  407880:	cmp	w3, w2
  407884:	b.ne	40788c <wcrtomb@plt+0x4a0c>  // b.any
  407888:	str	x0, [x19, #168]
  40788c:	ldrb	w0, [x25, #32]
  407890:	tbz	w0, #2, 4078a4 <wcrtomb@plt+0x4a24>
  407894:	ldp	x0, x1, [x19, #160]
  407898:	add	x3, x19, #0x70
  40789c:	ldrb	w2, [x19, #184]
  4078a0:	bl	4066f4 <wcrtomb@plt+0x3874>
  4078a4:	ldr	x3, [x25, #24]
  4078a8:	cbz	x3, 407174 <wcrtomb@plt+0x42f4>
  4078ac:	ldp	x0, x1, [x19, #160]
  4078b0:	ldrb	w2, [x19, #184]
  4078b4:	bl	4066f4 <wcrtomb@plt+0x3874>
  4078b8:	b	407174 <wcrtomb@plt+0x42f4>
  4078bc:	cmp	x1, x2
  4078c0:	b.ne	4075d8 <wcrtomb@plt+0x4758>  // b.any
  4078c4:	mov	w0, #0x1                   	// #1
  4078c8:	strb	w0, [x19, #144]
  4078cc:	str	x3, [x19, #168]
  4078d0:	b	4077f4 <wcrtomb@plt+0x4974>
  4078d4:	ldp	w4, w2, [x28, #16]
  4078d8:	tst	w2, #0xc
  4078dc:	b.ne	4078e4 <wcrtomb@plt+0x4a64>  // b.any
  4078e0:	orr	w2, w2, w0
  4078e4:	ldr	x1, [x28, #8]
  4078e8:	cbz	x1, 407910 <wcrtomb@plt+0x4a90>
  4078ec:	ldr	x0, [x28]
  4078f0:	str	w2, [sp, #96]
  4078f4:	str	x3, [sp, #104]
  4078f8:	str	w4, [sp, #120]
  4078fc:	bl	406a58 <wcrtomb@plt+0x3bd8>
  407900:	ldr	w2, [sp, #96]
  407904:	ldr	w4, [sp, #120]
  407908:	ldr	x3, [sp, #104]
  40790c:	and	w2, w2, #0xfffffff3
  407910:	tbnz	w4, #31, 407974 <wcrtomb@plt+0x4af4>
  407914:	ldr	x1, [x19, #264]
  407918:	sxtw	x0, w4
  40791c:	cmp	x1, w4, sxtw
  407920:	b.ls	407974 <wcrtomb@plt+0x4af4>  // b.plast
  407924:	ldp	x4, x1, [x19, #272]
  407928:	lsl	x0, x0, #3
  40792c:	ldr	x1, [x1, x0]
  407930:	ldr	x0, [x4, x0]
  407934:	cmp	x1, x0
  407938:	b.ne	407954 <wcrtomb@plt+0x4ad4>  // b.any
  40793c:	ldr	w0, [x28, #20]
  407940:	ands	w0, w0, #0xc
  407944:	b.eq	40794c <wcrtomb@plt+0x4acc>  // b.none
  407948:	and	w0, w2, #0xc
  40794c:	ldr	x28, [x28, #24]
  407950:	b	407650 <wcrtomb@plt+0x47d0>
  407954:	ldr	x4, [x19, #160]
  407958:	sub	x1, x1, x0
  40795c:	str	x3, [sp, #96]
  407960:	add	x0, x4, x0
  407964:	bl	406a58 <wcrtomb@plt+0x3bd8>
  407968:	mov	w0, #0x0                   	// #0
  40796c:	ldr	x3, [sp, #96]
  407970:	b	40794c <wcrtomb@plt+0x4acc>
  407974:	mov	w0, #0x0                   	// #0
  407978:	b	40794c <wcrtomb@plt+0x4acc>
  40797c:	cbnz	x27, 407990 <wcrtomb@plt+0x4b10>
  407980:	ldr	x0, [x19, #168]
  407984:	cmp	x0, x28
  407988:	b.ls	4076a4 <wcrtomb@plt+0x4824>  // b.plast
  40798c:	mov	x27, #0x1                   	// #1
  407990:	ldr	x1, [x19, #160]
  407994:	mov	x0, x23
  407998:	mov	x2, x27
  40799c:	str	x3, [sp, #96]
  4079a0:	add	x1, x1, x3
  4079a4:	bl	4065b4 <wcrtomb@plt+0x3734>
  4079a8:	mov	w0, #0x1                   	// #1
  4079ac:	ldr	x3, [sp, #96]
  4079b0:	b	40765c <wcrtomb@plt+0x47dc>
  4079b4:	mov	x3, x26
  4079b8:	add	x0, sp, #0xa0
  4079bc:	mov	x2, #0x1000                	// #4096
  4079c0:	mov	x1, #0x1                   	// #1
  4079c4:	bl	402ba0 <fread_unlocked@plt>
  4079c8:	cmp	w0, #0x0
  4079cc:	b.le	40784c <wcrtomb@plt+0x49cc>
  4079d0:	sxtw	x2, w0
  4079d4:	add	x1, sp, #0xa0
  4079d8:	mov	x0, x23
  4079dc:	bl	4065b4 <wcrtomb@plt+0x3734>
  4079e0:	b	40784c <wcrtomb@plt+0x49cc>
  4079e4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4079e8:	mov	w2, #0x5                   	// #5
  4079ec:	add	x1, x1, #0x6b8
  4079f0:	b	4070fc <wcrtomb@plt+0x427c>
  4079f4:	ldrb	w0, [x19, #144]
  4079f8:	cbz	w0, 406f6c <wcrtomb@plt+0x40ec>
  4079fc:	strb	wzr, [x19, #144]
  407a00:	ldr	x0, [x22]
  407a04:	mov	x1, #0x28                  	// #40
  407a08:	ldr	x20, [x20, #24]
  407a0c:	madd	x20, x20, x1, x0
  407a10:	b	406d5c <wcrtomb@plt+0x3edc>
  407a14:	ldrb	w0, [x19, #144]
  407a18:	cbz	w0, 407a00 <wcrtomb@plt+0x4b80>
  407a1c:	strb	wzr, [x19, #144]
  407a20:	b	406f6c <wcrtomb@plt+0x40ec>
  407a24:	ldr	x3, [x20, #24]
  407a28:	ldr	x0, [x3, #16]
  407a2c:	cbnz	x0, 40748c <wcrtomb@plt+0x460c>
  407a30:	b	406f6c <wcrtomb@plt+0x40ec>
  407a34:	ldr	x27, [x20, #24]
  407a38:	ldr	x0, [x27, #16]
  407a3c:	cbz	x0, 406f6c <wcrtomb@plt+0x40ec>
  407a40:	add	x24, x19, #0x98
  407a44:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407a48:	ldrb	w1, [x0, #1152]
  407a4c:	ldp	x25, x26, [x24, #8]
  407a50:	mov	x2, x26
  407a54:	mov	x0, x25
  407a58:	bl	402cf0 <memchr@plt>
  407a5c:	cbz	x0, 407c9c <wcrtomb@plt+0x4e1c>
  407a60:	sub	x26, x0, x25
  407a64:	mov	w2, #0x1                   	// #1
  407a68:	mov	x3, x27
  407a6c:	b	4074c4 <wcrtomb@plt+0x4644>
  407a70:	mov	x0, x19
  407a74:	bl	4068e8 <wcrtomb@plt+0x3a68>
  407a78:	ldrb	w0, [x24, #1933]
  407a7c:	cbz	w0, 406f6c <wcrtomb@plt+0x40ec>
  407a80:	add	x0, x19, #0x98
  407a84:	bl	405d4c <wcrtomb@plt+0x2ecc>
  407a88:	b	407160 <wcrtomb@plt+0x42e0>
  407a8c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407a90:	ldr	w0, [x0, #2292]
  407a94:	cmp	w0, #0x1
  407a98:	b.le	407c04 <wcrtomb@plt+0x4d84>
  407a9c:	mov	x28, #0x0                   	// #0
  407aa0:	ldr	x26, [x20, #24]
  407aa4:	str	xzr, [sp, #160]
  407aa8:	ldr	x2, [x19, #168]
  407aac:	add	x0, x19, #0x98
  407ab0:	cmp	x28, x2
  407ab4:	b.cs	407174 <wcrtomb@plt+0x42f4>  // b.hs, b.nlast
  407ab8:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  407abc:	add	x1, x1, #0x8f4
  407ac0:	ldr	w1, [x1]
  407ac4:	cmp	w1, #0x1
  407ac8:	b.eq	407af4 <wcrtomb@plt+0x4c74>  // b.none
  407acc:	ldr	x1, [x0, #8]
  407ad0:	add	x3, sp, #0xa0
  407ad4:	sub	x2, x2, x28
  407ad8:	mov	x0, #0x0                   	// #0
  407adc:	add	x1, x1, x28
  407ae0:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  407ae4:	mov	x27, x0
  407ae8:	sub	x0, x0, #0x1
  407aec:	cmn	x0, #0x4
  407af0:	b.ls	407af8 <wcrtomb@plt+0x4c78>  // b.plast
  407af4:	mov	x27, #0x1                   	// #1
  407af8:	ldr	x4, [x19, #160]
  407afc:	mov	w25, #0x0                   	// #0
  407b00:	add	x4, x4, x28
  407b04:	ldr	x1, [x26, w25, uxtw #3]
  407b08:	cbz	x1, 407be0 <wcrtomb@plt+0x4d60>
  407b0c:	mov	x0, x4
  407b10:	mov	x2, x27
  407b14:	str	x4, [sp, #96]
  407b18:	bl	4029a0 <strncmp@plt>
  407b1c:	add	w1, w25, #0x2
  407b20:	ldr	x4, [sp, #96]
  407b24:	cbnz	w0, 407bfc <wcrtomb@plt+0x4d7c>
  407b28:	add	w25, w25, #0x1
  407b2c:	lsl	x0, x25, #3
  407b30:	str	x0, [sp, #96]
  407b34:	ldr	x0, [x26, x0]
  407b38:	ldrb	w1, [x0]
  407b3c:	cbz	w1, 407be8 <wcrtomb@plt+0x4d68>
  407b40:	bl	402790 <strlen@plt>
  407b44:	mov	x25, x0
  407b48:	cmp	x27, x0
  407b4c:	b.cs	407bec <wcrtomb@plt+0x4d6c>  // b.hs, b.nlast
  407b50:	ldr	x1, [x19, #168]
  407b54:	sub	x2, x25, x27
  407b58:	add	x0, x19, #0x98
  407b5c:	add	x1, x1, #0x1
  407b60:	add	x1, x1, x2
  407b64:	ldr	x2, [x0, #24]
  407b68:	cmp	x1, x2
  407b6c:	b.ls	407b74 <wcrtomb@plt+0x4cf4>  // b.plast
  407b70:	bl	405dc8 <wcrtomb@plt+0x2f48>
  407b74:	ldp	x7, x2, [x19, #160]
  407b78:	add	x6, x19, #0x98
  407b7c:	sub	x5, x25, x27
  407b80:	add	x1, x28, x27
  407b84:	add	x0, x28, x25
  407b88:	str	x6, [sp, #104]
  407b8c:	str	x5, [sp, #120]
  407b90:	add	x2, x2, #0x1
  407b94:	add	x0, x7, x0
  407b98:	sub	x2, x2, x1
  407b9c:	add	x1, x7, x1
  407ba0:	bl	402760 <memmove@plt>
  407ba4:	ldr	x6, [sp, #104]
  407ba8:	ldr	x5, [sp, #120]
  407bac:	ldr	x0, [x6, #16]
  407bb0:	add	x0, x0, x5
  407bb4:	add	x5, x28, x5
  407bb8:	str	x0, [x6, #16]
  407bbc:	ldr	x1, [sp, #96]
  407bc0:	mov	x2, x25
  407bc4:	ldr	x0, [x19, #160]
  407bc8:	str	x5, [sp, #104]
  407bcc:	ldr	x1, [x26, x1]
  407bd0:	add	x0, x0, x28
  407bd4:	bl	402750 <memcpy@plt>
  407bd8:	ldr	x5, [sp, #104]
  407bdc:	mov	x28, x5
  407be0:	add	x28, x28, x27
  407be4:	b	407aa8 <wcrtomb@plt+0x4c28>
  407be8:	mov	x25, #0x1                   	// #1
  407bec:	cmp	x27, x25
  407bf0:	b.hi	407b74 <wcrtomb@plt+0x4cf4>  // b.pmore
  407bf4:	mov	x5, x28
  407bf8:	b	407bbc <wcrtomb@plt+0x4d3c>
  407bfc:	mov	w25, w1
  407c00:	b	407b04 <wcrtomb@plt+0x4c84>
  407c04:	ldp	x0, x1, [x19, #160]
  407c08:	add	x1, x0, x1
  407c0c:	cmp	x0, x1
  407c10:	b.cs	407174 <wcrtomb@plt+0x42f4>  // b.hs, b.nlast
  407c14:	ldrb	w2, [x0]
  407c18:	ldr	x3, [x20, #24]
  407c1c:	ldrb	w2, [x3, x2]
  407c20:	strb	w2, [x0], #1
  407c24:	b	407c0c <wcrtomb@plt+0x4d8c>
  407c28:	str	xzr, [x19, #168]
  407c2c:	b	407174 <wcrtomb@plt+0x42f4>
  407c30:	add	x24, x19, #0x70
  407c34:	mov	x0, x24
  407c38:	bl	406350 <wcrtomb@plt+0x34d0>
  407c3c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407c40:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0xae54>
  407c44:	ldr	x3, [x21, #16]
  407c48:	add	x2, x2, #0x6fe
  407c4c:	ldrb	w4, [x0, #1152]
  407c50:	ldr	x0, [x19, #128]
  407c54:	mov	w1, #0x1                   	// #1
  407c58:	bl	402be0 <__fprintf_chk@plt>
  407c5c:	ldr	x0, [x19, #128]
  407c60:	b	407250 <wcrtomb@plt+0x43d0>
  407c64:	add	x24, x19, #0x70
  407c68:	mov	x0, x24
  407c6c:	bl	406350 <wcrtomb@plt+0x34d0>
  407c70:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407c74:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0xae54>
  407c78:	add	x2, x2, #0x704
  407c7c:	ldrb	w4, [x0, #1152]
  407c80:	ldr	x3, [x21, #48]
  407c84:	b	407c50 <wcrtomb@plt+0x4dd0>
  407c88:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  407c8c:	add	x0, x0, #0x709
  407c90:	bl	408a48 <wcrtomb@plt+0x5bc8>
  407c94:	ldrb	w2, [x24, #32]
  407c98:	b	4074c0 <wcrtomb@plt+0x4640>
  407c9c:	ldrb	w2, [x24, #32]
  407ca0:	b	407a68 <wcrtomb@plt+0x4be8>
  407ca4:	stp	x29, x30, [sp, #-272]!
  407ca8:	mov	x2, #0x32                  	// #50
  407cac:	mov	x29, sp
  407cb0:	stp	x19, x20, [sp, #16]
  407cb4:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  407cb8:	add	x19, x19, #0x638
  407cbc:	mov	x20, x1
  407cc0:	mov	x1, #0x0                   	// #0
  407cc4:	stp	x21, x22, [sp, #32]
  407cc8:	mov	x21, x0
  407ccc:	add	x0, x19, #0x98
  407cd0:	str	x23, [sp, #48]
  407cd4:	bl	406c7c <wcrtomb@plt+0x3dfc>
  407cd8:	mov	x0, x19
  407cdc:	mov	x2, #0x0                   	// #0
  407ce0:	mov	x1, #0x0                   	// #0
  407ce4:	bl	406c7c <wcrtomb@plt+0x3dfc>
  407ce8:	add	x0, x19, #0x40
  407cec:	mov	x2, #0x0                   	// #0
  407cf0:	mov	x1, #0x0                   	// #0
  407cf4:	bl	406c7c <wcrtomb@plt+0x3dfc>
  407cf8:	mov	w0, #0x1                   	// #1
  407cfc:	strb	w0, [sp, #96]
  407d00:	cbz	x20, 407d54 <wcrtomb@plt+0x4ed4>
  407d04:	ldr	x0, [x20]
  407d08:	cbz	x0, 407d54 <wcrtomb@plt+0x4ed4>
  407d0c:	str	x20, [sp, #72]
  407d10:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x21e54>
  407d14:	adrp	x23, 41b000 <_obstack_memory_used@@Base+0xae54>
  407d18:	add	x22, x22, #0x78d
  407d1c:	add	x23, x23, #0x739
  407d20:	adrp	x0, 405000 <wcrtomb@plt+0x2180>
  407d24:	add	x0, x0, #0xd44
  407d28:	stp	xzr, xzr, [sp, #80]
  407d2c:	str	x0, [sp, #104]
  407d30:	str	xzr, [sp, #256]
  407d34:	mov	x1, x21
  407d38:	add	x0, sp, #0x48
  407d3c:	mov	w2, #0x0                   	// #0
  407d40:	bl	406488 <wcrtomb@plt+0x3608>
  407d44:	tst	w0, #0xff
  407d48:	b.ne	407d88 <wcrtomb@plt+0x4f08>  // b.any
  407d4c:	mov	w20, #0x0                   	// #0
  407d50:	b	407dcc <wcrtomb@plt+0x4f4c>
  407d54:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407d58:	ldr	x0, [x0, #1920]
  407d5c:	cbz	x0, 407d78 <wcrtomb@plt+0x4ef8>
  407d60:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  407d64:	add	x1, x1, #0x72a
  407d68:	mov	w2, #0x5                   	// #5
  407d6c:	mov	x0, #0x0                   	// #0
  407d70:	bl	402d60 <dcgettext@plt>
  407d74:	bl	408a48 <wcrtomb@plt+0x5bc8>
  407d78:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407d7c:	add	x0, x0, #0x460
  407d80:	str	x0, [sp, #72]
  407d84:	b	407d10 <wcrtomb@plt+0x4e90>
  407d88:	ldrb	w0, [x22]
  407d8c:	cbz	w0, 407db4 <wcrtomb@plt+0x4f34>
  407d90:	ldr	x0, [sp, #256]
  407d94:	cbnz	x0, 407df8 <wcrtomb@plt+0x4f78>
  407d98:	ldr	x2, [sp, #120]
  407d9c:	mov	x1, x23
  407da0:	ldr	x3, [sp, #88]
  407da4:	mov	w0, #0x1                   	// #1
  407da8:	bl	4029f0 <__printf_chk@plt>
  407dac:	add	x0, x19, #0x98
  407db0:	bl	405d4c <wcrtomb@plt+0x2ecc>
  407db4:	add	x1, sp, #0x48
  407db8:	mov	x0, x21
  407dbc:	bl	406d10 <wcrtomb@plt+0x3e90>
  407dc0:	mov	w20, w0
  407dc4:	cmn	w0, #0x1
  407dc8:	b.eq	407d34 <wcrtomb@plt+0x4eb4>  // b.none
  407dcc:	add	x0, sp, #0x48
  407dd0:	bl	40612c <wcrtomb@plt+0x32ac>
  407dd4:	ldr	x0, [sp, #80]
  407dd8:	ldp	x21, x22, [sp, #32]
  407ddc:	cmp	x0, #0x0
  407de0:	mov	w0, #0x2                   	// #2
  407de4:	csel	w0, w20, w0, eq  // eq = none
  407de8:	ldp	x19, x20, [sp, #16]
  407dec:	ldr	x23, [sp, #48]
  407df0:	ldp	x29, x30, [sp], #272
  407df4:	ret
  407df8:	bl	402890 <fileno@plt>
  407dfc:	cbnz	w0, 407d98 <wcrtomb@plt+0x4f18>
  407e00:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0xae54>
  407e04:	add	x2, x2, #0x724
  407e08:	b	407d9c <wcrtomb@plt+0x4f1c>
  407e0c:	stp	x29, x30, [sp, #-64]!
  407e10:	mov	x29, sp
  407e14:	stp	x19, x20, [sp, #16]
  407e18:	mov	x19, x1
  407e1c:	mov	w20, w0
  407e20:	str	x21, [sp, #32]
  407e24:	strb	w0, [sp, #63]
  407e28:	mov	x0, x1
  407e2c:	bl	402b70 <mbsinit@plt>
  407e30:	mov	w21, w0
  407e34:	add	x1, sp, #0x3f
  407e38:	mov	x3, x19
  407e3c:	mov	x2, #0x1                   	// #1
  407e40:	mov	x0, #0x0                   	// #0
  407e44:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  407e48:	add	w1, w0, #0x2
  407e4c:	cmp	w1, #0x3
  407e50:	b.hi	407e90 <wcrtomb@plt+0x5010>  // b.pmore
  407e54:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  407e58:	add	x0, x0, #0x850
  407e5c:	ldrb	w0, [x0, w1, uxtw]
  407e60:	adr	x1, 407e6c <wcrtomb@plt+0x4fec>
  407e64:	add	x0, x1, w0, sxtb #2
  407e68:	br	x0
  407e6c:	mov	w0, #0x0                   	// #0
  407e70:	str	xzr, [x19]
  407e74:	ldp	x19, x20, [sp, #16]
  407e78:	ldr	x21, [sp, #32]
  407e7c:	ldp	x29, x30, [sp], #64
  407e80:	ret
  407e84:	cmp	w21, #0x0
  407e88:	cset	w0, eq  // eq = none
  407e8c:	b	407e74 <wcrtomb@plt+0x4ff4>
  407e90:	mov	x2, x0
  407e94:	mov	w1, w20
  407e98:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  407e9c:	add	x0, x0, #0x823
  407ea0:	bl	408a48 <wcrtomb@plt+0x5bc8>
  407ea4:	mov	w0, #0x1                   	// #1
  407ea8:	b	407e74 <wcrtomb@plt+0x4ff4>
  407eac:	stp	x29, x30, [sp, #-16]!
  407eb0:	mov	x29, sp
  407eb4:	bl	40e11c <wcrtomb@plt+0xb29c>
  407eb8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  407ebc:	add	x1, x1, #0x84a
  407ec0:	bl	402bf0 <strcmp@plt>
  407ec4:	cmp	w0, #0x0
  407ec8:	cset	w1, eq  // eq = none
  407ecc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407ed0:	strb	w1, [x0, #2288]
  407ed4:	bl	402c40 <__ctype_get_mb_cur_max@plt>
  407ed8:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  407edc:	ldp	x29, x30, [sp], #16
  407ee0:	str	w0, [x1, #2292]
  407ee4:	ret
  407ee8:	stp	x29, x30, [sp, #-272]!
  407eec:	mov	x29, sp
  407ef0:	stp	x19, x20, [sp, #16]
  407ef4:	mov	x19, x0
  407ef8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  407efc:	stp	x21, x22, [sp, #32]
  407f00:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x21e54>
  407f04:	ldr	w0, [x0, #1928]
  407f08:	ldr	w2, [x21, #2296]
  407f0c:	mov	w22, w1
  407f10:	mov	w20, #0x2c6                 	// #710
  407f14:	ands	w1, w0, #0x1
  407f18:	mov	w0, #0xb2fc                	// #45820
  407f1c:	str	x23, [sp, #48]
  407f20:	movk	w20, #0x101, lsl #16
  407f24:	movk	w0, #0x3, lsl #16
  407f28:	csel	w0, w0, w20, ne  // ne = any
  407f2c:	cmp	w2, #0x1
  407f30:	and	w20, w0, #0xffffff7f
  407f34:	b.eq	407fd0 <wcrtomb@plt+0x5150>  // b.none
  407f38:	cmp	w2, #0x2
  407f3c:	b.eq	407fd8 <wcrtomb@plt+0x5158>  // b.none
  407f40:	mov	w1, #0xff7f                	// #65407
  407f44:	orr	w20, w20, #0x40000
  407f48:	movk	w1, #0xfffd, lsl #16
  407f4c:	and	w0, w0, w1
  407f50:	orr	w0, w0, #0x40000
  407f54:	cmp	w2, #0x0
  407f58:	csel	w20, w0, w20, eq  // eq = none
  407f5c:	ldr	w23, [x19, #64]
  407f60:	tbz	w23, #1, 407ff4 <wcrtomb@plt+0x5174>
  407f64:	orr	w20, w20, #0x400000
  407f68:	cmp	w22, #0x0
  407f6c:	cset	w0, eq  // eq = none
  407f70:	orr	w20, w20, w0, lsl #25
  407f74:	tbz	w23, #2, 407f80 <wcrtomb@plt+0x5100>
  407f78:	and	w20, w20, #0xffffffbf
  407f7c:	orr	w20, w20, #0x100
  407f80:	sxtw	x20, w20
  407f84:	add	x23, x19, #0x5a
  407f88:	mov	x0, x20
  407f8c:	bl	41a1a8 <_obstack_memory_used@@Base+0x9ffc>
  407f90:	ldr	x1, [x19, #72]
  407f94:	mov	x2, x19
  407f98:	mov	x0, x23
  407f9c:	bl	41a12c <_obstack_memory_used@@Base+0x9f80>
  407fa0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  407fa4:	ldrb	w2, [x1, #1152]
  407fa8:	cmp	w2, #0xa
  407fac:	b.ne	408004 <wcrtomb@plt+0x5184>  // b.any
  407fb0:	ldr	w1, [x19, #64]
  407fb4:	ubfx	x1, x1, #2, #1
  407fb8:	ldrb	w3, [x19, #56]
  407fbc:	str	xzr, [x19, #40]
  407fc0:	bfi	w3, w1, #7, #1
  407fc4:	strb	w3, [x19, #56]
  407fc8:	cbz	x0, 40800c <wcrtomb@plt+0x518c>
  407fcc:	bl	4037b4 <wcrtomb@plt+0x934>
  407fd0:	orr	w20, w20, #0x60000
  407fd4:	b	407f5c <wcrtomb@plt+0x50dc>
  407fd8:	mov	w2, #0x400                 	// #1024
  407fdc:	orr	w0, w20, #0xe0000
  407fe0:	cmp	w1, #0x0
  407fe4:	movk	w2, #0xe, lsl #16
  407fe8:	orr	w20, w20, w2
  407fec:	csel	w20, w20, w0, eq  // eq = none
  407ff0:	b	407f5c <wcrtomb@plt+0x50dc>
  407ff4:	mov	x0, #0x100                 	// #256
  407ff8:	bl	402930 <malloc@plt>
  407ffc:	str	x0, [x19, #32]
  408000:	b	407f68 <wcrtomb@plt+0x50e8>
  408004:	mov	w1, #0x0                   	// #0
  408008:	b	407fb8 <wcrtomb@plt+0x5138>
  40800c:	cbz	w22, 40805c <wcrtomb@plt+0x51dc>
  408010:	ldr	x0, [x19, #48]
  408014:	sub	w22, w22, #0x1
  408018:	cmp	x0, w22, sxtw
  40801c:	b.cs	40805c <wcrtomb@plt+0x51dc>  // b.hs, b.nlast
  408020:	ldr	w0, [x21, #2296]
  408024:	cbnz	w0, 40805c <wcrtomb@plt+0x51dc>
  408028:	mov	w2, #0x5                   	// #5
  40802c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408030:	mov	x0, #0x0                   	// #0
  408034:	add	x1, x1, #0x854
  408038:	bl	402d60 <dcgettext@plt>
  40803c:	mov	x3, x0
  408040:	mov	w4, w22
  408044:	add	x0, sp, #0x48
  408048:	mov	x2, #0xc8                  	// #200
  40804c:	mov	w1, #0x1                   	// #1
  408050:	bl	4027b0 <__sprintf_chk@plt>
  408054:	add	x0, sp, #0x48
  408058:	b	407fcc <wcrtomb@plt+0x514c>
  40805c:	cmp	w2, #0xa
  408060:	cset	w21, ne  // ne = any
  408064:	bl	40da54 <wcrtomb@plt+0xabd4>
  408068:	str	x0, [x19, #80]
  40806c:	lsl	w21, w21, #1
  408070:	mov	x2, x20
  408074:	mov	w3, w21
  408078:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  40807c:	add	x1, x1, #0x8fc
  408080:	bl	40dd40 <wcrtomb@plt+0xaec0>
  408084:	ldp	x1, x2, [x19, #72]
  408088:	mov	x0, x23
  40808c:	mov	w3, #0x1                   	// #1
  408090:	bl	40da5c <wcrtomb@plt+0xabdc>
  408094:	ldr	x0, [x19, #72]
  408098:	cmp	x0, #0x1
  40809c:	b.ne	4080b0 <wcrtomb@plt+0x5230>  // b.any
  4080a0:	ldrb	w1, [x19, #90]
  4080a4:	cmp	w1, #0x5e
  4080a8:	b.ne	4080c4 <wcrtomb@plt+0x5244>  // b.any
  4080ac:	strb	w0, [x19, #88]
  4080b0:	ldp	x19, x20, [sp, #16]
  4080b4:	ldp	x21, x22, [sp, #32]
  4080b8:	ldr	x23, [sp, #48]
  4080bc:	ldp	x29, x30, [sp], #272
  4080c0:	ret
  4080c4:	cmp	w1, #0x24
  4080c8:	b.ne	4080b0 <wcrtomb@plt+0x5230>  // b.any
  4080cc:	strb	w0, [x19, #89]
  4080d0:	b	4080b0 <wcrtomb@plt+0x5230>
  4080d4:	stp	x29, x30, [sp, #-16]!
  4080d8:	mov	x1, x0
  4080dc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4080e0:	mov	x29, sp
  4080e4:	add	x0, x0, #0x47b
  4080e8:	bl	408a48 <wcrtomb@plt+0x5bc8>
  4080ec:	stp	x29, x30, [sp, #-32]!
  4080f0:	mov	x29, sp
  4080f4:	str	x19, [sp, #16]
  4080f8:	mov	x19, x0
  4080fc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  408100:	add	x0, x0, #0x87f
  408104:	bl	402e10 <getenv@plt>
  408108:	cbnz	x0, 408114 <wcrtomb@plt+0x5294>
  40810c:	mov	x0, x19
  408110:	bl	4080d4 <wcrtomb@plt+0x5254>
  408114:	ldr	x19, [sp, #16]
  408118:	ldp	x29, x30, [sp], #32
  40811c:	ret
  408120:	stp	x29, x30, [sp, #-64]!
  408124:	mov	x29, sp
  408128:	stp	x19, x20, [sp, #16]
  40812c:	stp	x21, x22, [sp, #32]
  408130:	mov	w21, w1
  408134:	mov	w22, w2
  408138:	str	x23, [sp, #48]
  40813c:	mov	x23, x0
  408140:	bl	4093dc <wcrtomb@plt+0x655c>
  408144:	cbnz	x0, 40816c <wcrtomb@plt+0x52ec>
  408148:	cmp	w21, #0x0
  40814c:	mov	x19, #0x0                   	// #0
  408150:	b.le	4081bc <wcrtomb@plt+0x533c>
  408154:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408158:	add	x1, x1, #0x8bd
  40815c:	add	x1, x1, #0x1f
  408160:	mov	w2, #0x5                   	// #5
  408164:	bl	402d60 <dcgettext@plt>
  408168:	bl	4037b4 <wcrtomb@plt+0x934>
  40816c:	mov	x20, x0
  408170:	add	x0, x0, #0x5f
  408174:	bl	40fd78 <wcrtomb@plt+0xcef8>
  408178:	mov	x19, x0
  40817c:	mov	x0, x23
  408180:	str	w21, [x19, #64]
  408184:	add	x21, x19, #0x5a
  408188:	bl	4093d4 <wcrtomb@plt+0x6554>
  40818c:	mov	x1, x0
  408190:	mov	x2, x20
  408194:	mov	x0, x21
  408198:	bl	402750 <memcpy@plt>
  40819c:	mov	x1, x20
  4081a0:	mov	x0, x21
  4081a4:	mov	w2, #0x2                   	// #2
  4081a8:	bl	403fb8 <wcrtomb@plt+0x1138>
  4081ac:	str	x0, [x19, #72]
  4081b0:	mov	w1, w22
  4081b4:	mov	x0, x19
  4081b8:	bl	407ee8 <wcrtomb@plt+0x5068>
  4081bc:	mov	x0, x19
  4081c0:	ldp	x19, x20, [sp, #16]
  4081c4:	ldp	x21, x22, [sp, #32]
  4081c8:	ldr	x23, [sp, #48]
  4081cc:	ldp	x29, x30, [sp], #64
  4081d0:	ret
  4081d4:	stp	x29, x30, [sp, #-112]!
  4081d8:	mov	x29, sp
  4081dc:	stp	x19, x20, [sp, #16]
  4081e0:	mov	x19, x2
  4081e4:	stp	x21, x22, [sp, #32]
  4081e8:	mov	x21, x3
  4081ec:	stp	x23, x24, [sp, #48]
  4081f0:	mov	x23, x1
  4081f4:	mov	x24, x4
  4081f8:	stp	x25, x26, [sp, #64]
  4081fc:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  408200:	mov	w25, w5
  408204:	stp	x27, x28, [sp, #80]
  408208:	cbnz	x0, 408228 <wcrtomb@plt+0x53a8>
  40820c:	ldr	x20, [x1, #1880]
  408210:	cbnz	x20, 408230 <wcrtomb@plt+0x53b0>
  408214:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408218:	add	x1, x1, #0x8bd
  40821c:	mov	w2, #0x5                   	// #5
  408220:	bl	402d60 <dcgettext@plt>
  408224:	bl	4037b4 <wcrtomb@plt+0x934>
  408228:	mov	x20, x0
  40822c:	str	x0, [x1, #1880]
  408230:	mov	x0, #0x7ffffffe            	// #2147483646
  408234:	cmp	x19, x0
  408238:	b.ls	408254 <wcrtomb@plt+0x53d4>  // b.plast
  40823c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408240:	add	x1, x1, #0x88f
  408244:	mov	w2, #0x5                   	// #5
  408248:	mov	x0, #0x0                   	// #0
  40824c:	bl	402d60 <dcgettext@plt>
  408250:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408254:	ldrb	w0, [x20, #56]
  408258:	tbz	w0, #4, 40828c <wcrtomb@plt+0x540c>
  40825c:	cbz	w25, 40828c <wcrtomb@plt+0x540c>
  408260:	ldr	x0, [x20, #80]
  408264:	cbz	x0, 408278 <wcrtomb@plt+0x53f8>
  408268:	bl	40d18c <wcrtomb@plt+0xa30c>
  40826c:	ldr	x0, [x20, #80]
  408270:	bl	402c20 <free@plt>
  408274:	str	xzr, [x20, #80]
  408278:	mov	x0, x20
  40827c:	bl	41a7ac <_obstack_memory_used@@Base+0xa600>
  408280:	mov	w1, w25
  408284:	mov	x0, x20
  408288:	bl	407ee8 <wcrtomb@plt+0x5068>
  40828c:	ldrb	w0, [x20, #56]
  408290:	mov	w26, #0x1                   	// #1
  408294:	bfi	w0, w26, #1, #2
  408298:	strb	w0, [x20, #56]
  40829c:	ldrh	w0, [x20, #88]
  4082a0:	cbz	w0, 4083a8 <wcrtomb@plt+0x5528>
  4082a4:	ldrb	w0, [x20, #89]
  4082a8:	cbz	w0, 4082dc <wcrtomb@plt+0x545c>
  4082ac:	ldr	w0, [x20, #64]
  4082b0:	tbz	w0, #2, 4082d0 <wcrtomb@plt+0x5450>
  4082b4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4082b8:	sub	x2, x19, x21
  4082bc:	ldrb	w1, [x0, #1152]
  4082c0:	add	x0, x23, x21
  4082c4:	bl	402cf0 <memchr@plt>
  4082c8:	cbz	x0, 4082d0 <wcrtomb@plt+0x5450>
  4082cc:	sub	x19, x0, x23
  4082d0:	cbnz	w25, 408348 <wcrtomb@plt+0x54c8>
  4082d4:	mov	w0, #0x1                   	// #1
  4082d8:	b	4082ec <wcrtomb@plt+0x546c>
  4082dc:	cbz	x21, 408338 <wcrtomb@plt+0x54b8>
  4082e0:	ldr	w0, [x20, #64]
  4082e4:	tbnz	w0, #2, 408308 <wcrtomb@plt+0x5488>
  4082e8:	mov	w0, #0x0                   	// #0
  4082ec:	ldp	x19, x20, [sp, #16]
  4082f0:	ldp	x21, x22, [sp, #32]
  4082f4:	ldp	x23, x24, [sp, #48]
  4082f8:	ldp	x25, x26, [sp, #64]
  4082fc:	ldp	x27, x28, [sp, #80]
  408300:	ldp	x29, x30, [sp], #112
  408304:	ret
  408308:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40830c:	ldrb	w1, [x0, #1152]
  408310:	add	x0, x23, x21
  408314:	ldurb	w2, [x0, #-1]
  408318:	cmp	w2, w1
  40831c:	b.eq	408340 <wcrtomb@plt+0x54c0>  // b.none
  408320:	sub	x2, x19, x21
  408324:	bl	402cf0 <memchr@plt>
  408328:	cbz	x0, 4082e8 <wcrtomb@plt+0x5468>
  40832c:	sub	x22, x0, x23
  408330:	add	x19, x22, #0x1
  408334:	b	4082d0 <wcrtomb@plt+0x5450>
  408338:	mov	x19, #0x0                   	// #0
  40833c:	b	4082d0 <wcrtomb@plt+0x5450>
  408340:	mov	x19, x21
  408344:	b	4082d0 <wcrtomb@plt+0x5450>
  408348:	ldr	x0, [x24, #8]
  40834c:	cbnz	x0, 408378 <wcrtomb@plt+0x54f8>
  408350:	mov	x1, #0x8                   	// #8
  408354:	mov	x0, #0x1                   	// #1
  408358:	bl	40fd44 <wcrtomb@plt+0xcec4>
  40835c:	str	x0, [x24, #8]
  408360:	mov	x1, #0x8                   	// #8
  408364:	mov	x0, #0x1                   	// #1
  408368:	bl	40fd44 <wcrtomb@plt+0xcec4>
  40836c:	str	x0, [x24, #16]
  408370:	mov	x0, #0x1                   	// #1
  408374:	str	x0, [x24]
  408378:	ldp	x1, x2, [x24, #8]
  40837c:	str	x19, [x1]
  408380:	mov	x0, #0x1                   	// #1
  408384:	mov	x3, #0xffffffffffffffff    	// #-1
  408388:	str	x19, [x2]
  40838c:	ldr	x4, [x24]
  408390:	cmp	x4, x0
  408394:	b.ls	4082d4 <wcrtomb@plt+0x5454>  // b.plast
  408398:	str	x3, [x2, x0, lsl #3]
  40839c:	str	x3, [x1, x0, lsl #3]
  4083a0:	add	x0, x0, #0x1
  4083a4:	b	40838c <wcrtomb@plt+0x550c>
  4083a8:	cbnz	x21, 4084c0 <wcrtomb@plt+0x5640>
  4083ac:	ldr	x0, [x20, #80]
  4083b0:	bl	40d17c <wcrtomb@plt+0xa2fc>
  4083b4:	mov	x22, x0
  4083b8:	cbz	x0, 40855c <wcrtomb@plt+0x56dc>
  4083bc:	mov	w3, w26
  4083c0:	add	x2, x23, x19
  4083c4:	mov	x1, x23
  4083c8:	mov	x5, #0x0                   	// #0
  4083cc:	mov	x4, #0x0                   	// #0
  4083d0:	bl	40d170 <wcrtomb@plt+0xa2f0>
  4083d4:	cbz	x0, 4082e8 <wcrtomb@plt+0x5468>
  4083d8:	cbnz	w25, 4084c0 <wcrtomb@plt+0x5640>
  4083dc:	ldr	w0, [x20, #64]
  4083e0:	tbz	w0, #2, 4084ac <wcrtomb@plt+0x562c>
  4083e4:	ldr	x0, [x20, #80]
  4083e8:	add	x5, sp, #0x6f
  4083ec:	add	x2, x23, x19
  4083f0:	mov	x1, x23
  4083f4:	mov	x4, #0x0                   	// #0
  4083f8:	mov	w3, #0x1                   	// #1
  4083fc:	strb	wzr, [sp, #111]
  408400:	bl	40d170 <wcrtomb@plt+0xa2f0>
  408404:	cbz	x0, 4082e8 <wcrtomb@plt+0x5468>
  408408:	cbnz	w25, 4084c0 <wcrtomb@plt+0x5640>
  40840c:	ldr	w0, [x20, #64]
  408410:	tbz	w0, #2, 4084c0 <wcrtomb@plt+0x5640>
  408414:	ldrb	w0, [sp, #111]
  408418:	cbnz	w0, 4084c0 <wcrtomb@plt+0x5640>
  40841c:	b	4082d4 <wcrtomb@plt+0x5454>
  408420:	mov	x22, x23
  408424:	b	4084f4 <wcrtomb@plt+0x5674>
  408428:	ldr	x4, [x24, #8]
  40842c:	lsl	x2, x0, #3
  408430:	ldr	x3, [x4, x2]
  408434:	tbnz	x3, #63, 408440 <wcrtomb@plt+0x55c0>
  408438:	add	x3, x22, x3
  40843c:	str	x3, [x4, x2]
  408440:	ldr	x4, [x24, #16]
  408444:	ldr	x3, [x4, x2]
  408448:	tbnz	x3, #63, 408454 <wcrtomb@plt+0x55d4>
  40844c:	add	x3, x22, x3
  408450:	str	x3, [x4, x2]
  408454:	add	x0, x0, #0x1
  408458:	ldr	x2, [x24]
  40845c:	cmp	x2, x0
  408460:	b.hi	408428 <wcrtomb@plt+0x55a8>  // b.pmore
  408464:	b	408550 <wcrtomb@plt+0x56d0>
  408468:	mov	x0, #0x0                   	// #0
  40846c:	b	408458 <wcrtomb@plt+0x55d8>
  408470:	cmp	x19, x26
  408474:	b.eq	408550 <wcrtomb@plt+0x56d0>  // b.none
  408478:	add	x22, x26, #0x1
  40847c:	mov	x21, x22
  408480:	b	408508 <wcrtomb@plt+0x5688>
  408484:	cmp	w25, #0x0
  408488:	mov	x1, x23
  40848c:	csel	x5, x24, xzr, ne  // ne = any
  408490:	sub	x4, x19, x21
  408494:	mov	x3, x21
  408498:	mov	x2, x19
  40849c:	mov	x0, x20
  4084a0:	bl	41a8b0 <_obstack_memory_used@@Base+0xa704>
  4084a4:	mov	w1, w0
  4084a8:	b	408550 <wcrtomb@plt+0x56d0>
  4084ac:	cbnz	x22, 408484 <wcrtomb@plt+0x5604>
  4084b0:	ldr	x0, [x20, #80]
  4084b4:	bl	40d184 <wcrtomb@plt+0xa304>
  4084b8:	tst	w0, #0xff
  4084bc:	b.ne	4083e4 <wcrtomb@plt+0x5564>  // b.any
  4084c0:	ldr	w0, [x20, #64]
  4084c4:	tbz	w0, #2, 408484 <wcrtomb@plt+0x5604>
  4084c8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4084cc:	mov	x28, x0
  4084d0:	ldrb	w1, [x0, #1152]
  4084d4:	cmp	w1, #0xa
  4084d8:	b.eq	408484 <wcrtomb@plt+0x5604>  // b.none
  4084dc:	cbz	x21, 408420 <wcrtomb@plt+0x55a0>
  4084e0:	mov	x2, x21
  4084e4:	mov	x0, x23
  4084e8:	bl	402c80 <memrchr@plt>
  4084ec:	cmp	x0, #0x0
  4084f0:	csinc	x22, x23, x0, eq  // eq = none
  4084f4:	cmp	w25, #0x0
  4084f8:	add	x21, x23, x21
  4084fc:	csel	x27, x24, xzr, ne  // ne = any
  408500:	add	x19, x23, x19
  408504:	add	x28, x28, #0x480
  408508:	ldrb	w1, [x28]
  40850c:	sub	x2, x19, x22
  408510:	mov	x0, x22
  408514:	bl	402cf0 <memchr@plt>
  408518:	cmp	x0, #0x0
  40851c:	csel	x26, x0, x19, ne  // ne = any
  408520:	mov	x1, x22
  408524:	mov	x5, x27
  408528:	sub	x4, x26, x21
  40852c:	sub	x3, x21, x22
  408530:	sub	x2, x26, x22
  408534:	mov	x0, x20
  408538:	bl	41a8b0 <_obstack_memory_used@@Base+0xa704>
  40853c:	mov	w1, w0
  408540:	tbnz	w0, #31, 408470 <wcrtomb@plt+0x55f0>
  408544:	sub	x22, x22, x23
  408548:	add	w1, w22, w0
  40854c:	cbnz	w25, 408468 <wcrtomb@plt+0x55e8>
  408550:	mvn	w0, w1
  408554:	lsr	w0, w0, #31
  408558:	b	4082ec <wcrtomb@plt+0x546c>
  40855c:	cbz	w25, 4083dc <wcrtomb@plt+0x555c>
  408560:	b	4084b0 <wcrtomb@plt+0x5630>
  408564:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  408568:	ldr	x0, [x0, #1888]
  40856c:	cbz	x0, 408574 <wcrtomb@plt+0x56f4>
  408570:	b	402e20 <unlink@plt>
  408574:	ret
  408578:	stp	x29, x30, [sp, #-32]!
  40857c:	mov	w2, #0x5                   	// #5
  408580:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408584:	mov	x29, sp
  408588:	stp	x19, x20, [sp, #16]
  40858c:	mov	w20, w0
  408590:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  408594:	cmp	w20, #0x0
  408598:	add	x1, x1, #0x905
  40859c:	ldr	x19, [x0, #1296]
  4085a0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4085a4:	ldr	x0, [x0, #1320]
  4085a8:	csel	x19, x19, x0, ne  // ne = any
  4085ac:	mov	x0, #0x0                   	// #0
  4085b0:	bl	402d60 <dcgettext@plt>
  4085b4:	mov	x2, x0
  4085b8:	mov	w1, #0x1                   	// #1
  4085bc:	mov	x0, x19
  4085c0:	bl	402be0 <__fprintf_chk@plt>
  4085c4:	cbnz	w20, 4085fc <wcrtomb@plt+0x577c>
  4085c8:	mov	w2, #0x5                   	// #5
  4085cc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4085d0:	mov	x0, #0x0                   	// #0
  4085d4:	add	x1, x1, #0x97f
  4085d8:	bl	402d60 <dcgettext@plt>
  4085dc:	mov	x2, x0
  4085e0:	mov	x0, x19
  4085e4:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0xae54>
  4085e8:	ldp	x19, x20, [sp, #16]
  4085ec:	add	x3, x3, #0x99d
  4085f0:	ldp	x29, x30, [sp], #32
  4085f4:	mov	w1, #0x1                   	// #1
  4085f8:	b	402be0 <__fprintf_chk@plt>
  4085fc:	ldp	x19, x20, [sp, #16]
  408600:	ldp	x29, x30, [sp], #32
  408604:	ret
  408608:	stp	x29, x30, [sp, #-32]!
  40860c:	mov	w2, #0x5                   	// #5
  408610:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408614:	mov	x29, sp
  408618:	stp	x19, x20, [sp, #16]
  40861c:	mov	w20, w0
  408620:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  408624:	cmp	w20, #0x0
  408628:	add	x1, x1, #0x9ad
  40862c:	ldr	x19, [x0, #1296]
  408630:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  408634:	ldr	x0, [x0, #1320]
  408638:	csel	x19, x19, x0, ne  // ne = any
  40863c:	mov	x0, #0x0                   	// #0
  408640:	bl	402d60 <dcgettext@plt>
  408644:	mov	x2, x0
  408648:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  40864c:	mov	x0, x19
  408650:	ldr	x3, [x1, #1968]
  408654:	mov	w1, #0x1                   	// #1
  408658:	bl	402be0 <__fprintf_chk@plt>
  40865c:	mov	w2, #0x5                   	// #5
  408660:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408664:	mov	x0, #0x0                   	// #0
  408668:	add	x1, x1, #0x9f6
  40866c:	bl	402d60 <dcgettext@plt>
  408670:	mov	x2, x0
  408674:	mov	w1, #0x1                   	// #1
  408678:	mov	x0, x19
  40867c:	bl	402be0 <__fprintf_chk@plt>
  408680:	mov	w2, #0x5                   	// #5
  408684:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408688:	mov	x0, #0x0                   	// #0
  40868c:	add	x1, x1, #0xa4d
  408690:	bl	402d60 <dcgettext@plt>
  408694:	mov	x2, x0
  408698:	mov	w1, #0x1                   	// #1
  40869c:	mov	x0, x19
  4086a0:	bl	402be0 <__fprintf_chk@plt>
  4086a4:	mov	w2, #0x5                   	// #5
  4086a8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4086ac:	mov	x0, #0x0                   	// #0
  4086b0:	add	x1, x1, #0xa88
  4086b4:	bl	402d60 <dcgettext@plt>
  4086b8:	mov	x2, x0
  4086bc:	mov	w1, #0x1                   	// #1
  4086c0:	mov	x0, x19
  4086c4:	bl	402be0 <__fprintf_chk@plt>
  4086c8:	mov	w2, #0x5                   	// #5
  4086cc:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4086d0:	mov	x0, #0x0                   	// #0
  4086d4:	add	x1, x1, #0xae9
  4086d8:	bl	402d60 <dcgettext@plt>
  4086dc:	mov	x2, x0
  4086e0:	mov	w1, #0x1                   	// #1
  4086e4:	mov	x0, x19
  4086e8:	bl	402be0 <__fprintf_chk@plt>
  4086ec:	mov	w2, #0x5                   	// #5
  4086f0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4086f4:	mov	x0, #0x0                   	// #0
  4086f8:	add	x1, x1, #0xb5f
  4086fc:	bl	402d60 <dcgettext@plt>
  408700:	mov	x2, x0
  408704:	mov	w1, #0x1                   	// #1
  408708:	mov	x0, x19
  40870c:	bl	402be0 <__fprintf_chk@plt>
  408710:	mov	w2, #0x5                   	// #5
  408714:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408718:	mov	x0, #0x0                   	// #0
  40871c:	add	x1, x1, #0xbae
  408720:	bl	402d60 <dcgettext@plt>
  408724:	mov	x2, x0
  408728:	mov	w1, #0x1                   	// #1
  40872c:	mov	x0, x19
  408730:	bl	402be0 <__fprintf_chk@plt>
  408734:	mov	w2, #0x5                   	// #5
  408738:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40873c:	mov	x0, #0x0                   	// #0
  408740:	add	x1, x1, #0xc18
  408744:	bl	402d60 <dcgettext@plt>
  408748:	mov	x2, x0
  40874c:	mov	w1, #0x1                   	// #1
  408750:	mov	x0, x19
  408754:	bl	402be0 <__fprintf_chk@plt>
  408758:	mov	w2, #0x5                   	// #5
  40875c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408760:	mov	x0, #0x0                   	// #0
  408764:	add	x1, x1, #0xc7b
  408768:	bl	402d60 <dcgettext@plt>
  40876c:	mov	x2, x0
  408770:	mov	w1, #0x1                   	// #1
  408774:	mov	x0, x19
  408778:	bl	402be0 <__fprintf_chk@plt>
  40877c:	mov	w2, #0x5                   	// #5
  408780:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408784:	mov	x0, #0x0                   	// #0
  408788:	add	x1, x1, #0xcb3
  40878c:	bl	402d60 <dcgettext@plt>
  408790:	mov	x2, x0
  408794:	mov	w1, #0x1                   	// #1
  408798:	mov	x0, x19
  40879c:	bl	402be0 <__fprintf_chk@plt>
  4087a0:	mov	w2, #0x5                   	// #5
  4087a4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4087a8:	mov	x0, #0x0                   	// #0
  4087ac:	add	x1, x1, #0xd41
  4087b0:	bl	402d60 <dcgettext@plt>
  4087b4:	mov	x2, x0
  4087b8:	mov	w1, #0x1                   	// #1
  4087bc:	mov	x0, x19
  4087c0:	bl	402be0 <__fprintf_chk@plt>
  4087c4:	mov	w2, #0x5                   	// #5
  4087c8:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4087cc:	mov	x0, #0x0                   	// #0
  4087d0:	add	x1, x1, #0xdc1
  4087d4:	bl	402d60 <dcgettext@plt>
  4087d8:	mov	x2, x0
  4087dc:	mov	w1, #0x1                   	// #1
  4087e0:	mov	x0, x19
  4087e4:	bl	402be0 <__fprintf_chk@plt>
  4087e8:	mov	w2, #0x5                   	// #5
  4087ec:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  4087f0:	mov	x0, #0x0                   	// #0
  4087f4:	add	x1, x1, #0xe15
  4087f8:	bl	402d60 <dcgettext@plt>
  4087fc:	mov	x2, x0
  408800:	mov	w1, #0x1                   	// #1
  408804:	mov	x0, x19
  408808:	bl	402be0 <__fprintf_chk@plt>
  40880c:	mov	w2, #0x5                   	// #5
  408810:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408814:	mov	x0, #0x0                   	// #0
  408818:	add	x1, x1, #0xea5
  40881c:	bl	402d60 <dcgettext@plt>
  408820:	mov	x2, x0
  408824:	mov	w1, #0x1                   	// #1
  408828:	mov	x0, x19
  40882c:	bl	402be0 <__fprintf_chk@plt>
  408830:	mov	w2, #0x5                   	// #5
  408834:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408838:	mov	x0, #0x0                   	// #0
  40883c:	add	x1, x1, #0xeea
  408840:	bl	402d60 <dcgettext@plt>
  408844:	mov	x2, x0
  408848:	mov	w1, #0x1                   	// #1
  40884c:	mov	x0, x19
  408850:	bl	402be0 <__fprintf_chk@plt>
  408854:	mov	w2, #0x5                   	// #5
  408858:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  40885c:	mov	x0, #0x0                   	// #0
  408860:	add	x1, x1, #0xf17
  408864:	bl	402d60 <dcgettext@plt>
  408868:	mov	x2, x0
  40886c:	mov	w1, #0x1                   	// #1
  408870:	mov	x0, x19
  408874:	bl	402be0 <__fprintf_chk@plt>
  408878:	mov	w2, #0x5                   	// #5
  40887c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408880:	mov	x0, #0x0                   	// #0
  408884:	add	x1, x1, #0xf4d
  408888:	bl	402d60 <dcgettext@plt>
  40888c:	mov	x2, x0
  408890:	mov	w1, #0x1                   	// #1
  408894:	mov	x0, x19
  408898:	bl	402be0 <__fprintf_chk@plt>
  40889c:	mov	w0, w20
  4088a0:	bl	408578 <wcrtomb@plt+0x56f8>
  4088a4:	mov	x0, #0x0                   	// #0
  4088a8:	bl	409058 <wcrtomb@plt+0x61d8>
  4088ac:	mov	w0, w20
  4088b0:	bl	4027d0 <exit@plt>
  4088b4:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4088b8:	str	x0, [x1, #1888]
  4088bc:	ret
  4088c0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  4088c4:	str	xzr, [x0, #1888]
  4088c8:	ret
  4088cc:	stp	x29, x30, [sp, #-48]!
  4088d0:	mov	x29, sp
  4088d4:	stp	x19, x20, [sp, #16]
  4088d8:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  4088dc:	ldr	x19, [x20, #1936]
  4088e0:	stp	x21, x22, [sp, #32]
  4088e4:	mov	x21, x0
  4088e8:	mov	x22, x1
  4088ec:	cbnz	x19, 408910 <wcrtomb@plt+0x5a90>
  4088f0:	mov	x1, #0x20                  	// #32
  4088f4:	mov	x0, #0x1                   	// #1
  4088f8:	bl	40fd44 <wcrtomb@plt+0xcec4>
  4088fc:	mov	x19, x0
  408900:	ldr	x0, [x20, #1936]
  408904:	str	x19, [x20, #1936]
  408908:	str	x0, [x19, #16]
  40890c:	b	408924 <wcrtomb@plt+0x5aa4>
  408910:	ldr	x0, [x19]
  408914:	cmp	x0, x21
  408918:	b.ne	40894c <wcrtomb@plt+0x5acc>  // b.any
  40891c:	ldr	x0, [x19, #8]
  408920:	bl	402c20 <free@plt>
  408924:	mov	x0, x22
  408928:	bl	40fdb0 <wcrtomb@plt+0xcf30>
  40892c:	stp	x21, x0, [x19]
  408930:	ldrb	w0, [x19, #24]
  408934:	ldp	x21, x22, [sp, #32]
  408938:	and	w0, w0, #0xfffffffe
  40893c:	strb	w0, [x19, #24]
  408940:	ldp	x19, x20, [sp, #16]
  408944:	ldp	x29, x30, [sp], #48
  408948:	ret
  40894c:	ldr	x19, [x19, #16]
  408950:	b	4088ec <wcrtomb@plt+0x5a6c>
  408954:	stp	x29, x30, [sp, #-48]!
  408958:	mov	x29, sp
  40895c:	stp	x19, x20, [sp, #16]
  408960:	mov	x19, x0
  408964:	ldr	x0, [x0]
  408968:	str	x21, [sp, #32]
  40896c:	cmp	x0, x1
  408970:	b.cs	4089a0 <wcrtomb@plt+0x5b20>  // b.hs, b.nlast
  408974:	mov	x20, x1
  408978:	lsl	x21, x0, #1
  40897c:	cmp	x1, x0, lsl #1
  408980:	b.cc	4089b0 <wcrtomb@plt+0x5b30>  // b.lo, b.ul, b.last
  408984:	ldr	x0, [x19, #16]
  408988:	mov	x1, x20
  40898c:	mov	x21, x20
  408990:	mov	x2, #0x1                   	// #1
  408994:	bl	40fca8 <wcrtomb@plt+0xce28>
  408998:	str	x21, [x19]
  40899c:	str	x0, [x19, #16]
  4089a0:	ldp	x19, x20, [sp, #16]
  4089a4:	ldr	x21, [sp, #32]
  4089a8:	ldp	x29, x30, [sp], #48
  4089ac:	ret
  4089b0:	ldr	x0, [x19, #16]
  4089b4:	mov	x1, x21
  4089b8:	bl	402a80 <realloc@plt>
  4089bc:	cbnz	x0, 408998 <wcrtomb@plt+0x5b18>
  4089c0:	b	408984 <wcrtomb@plt+0x5b04>
  4089c4:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4089c8:	ldr	x1, [x1, #1936]
  4089cc:	cbnz	x1, 408a14 <wcrtomb@plt+0x5b94>
  4089d0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4089d4:	ldr	x1, [x1, #1328]
  4089d8:	cmp	x1, x0
  4089dc:	b.eq	408a30 <wcrtomb@plt+0x5bb0>  // b.none
  4089e0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4089e4:	ldr	x1, [x1, #1320]
  4089e8:	cmp	x0, x1
  4089ec:	b.eq	408a3c <wcrtomb@plt+0x5bbc>  // b.none
  4089f0:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  4089f4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x9e54>
  4089f8:	add	x2, x2, #0xfde
  4089fc:	ldr	x3, [x1, #1296]
  408a00:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408a04:	cmp	x0, x3
  408a08:	add	x0, x1, #0x440
  408a0c:	csel	x0, x0, x2, ne  // ne = any
  408a10:	b	408a24 <wcrtomb@plt+0x5ba4>
  408a14:	ldr	x2, [x1]
  408a18:	cmp	x2, x0
  408a1c:	b.ne	408a28 <wcrtomb@plt+0x5ba8>  // b.any
  408a20:	ldr	x0, [x1, #8]
  408a24:	ret
  408a28:	ldr	x1, [x1, #16]
  408a2c:	b	4089cc <wcrtomb@plt+0x5b4c>
  408a30:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  408a34:	add	x0, x0, #0xfc7
  408a38:	b	408a24 <wcrtomb@plt+0x5ba4>
  408a3c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x9e54>
  408a40:	add	x0, x0, #0xfd2
  408a44:	b	408a24 <wcrtomb@plt+0x5ba4>
  408a48:	stp	x29, x30, [sp, #-368]!
  408a4c:	mov	x29, sp
  408a50:	stp	x19, x20, [sp, #16]
  408a54:	mov	x20, x0
  408a58:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  408a5c:	stp	x21, x22, [sp, #32]
  408a60:	adrp	x21, 432000 <_obstack_memory_used@@Base+0x21e54>
  408a64:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  408a68:	stp	x3, x4, [sp, #328]
  408a6c:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408a70:	add	x19, x19, #0x790
  408a74:	ldr	x3, [x0, #1968]
  408a78:	stp	x23, x24, [sp, #48]
  408a7c:	add	x22, x22, #0x44f
  408a80:	ldr	x0, [x21, #1296]
  408a84:	str	x25, [sp, #64]
  408a88:	str	q0, [sp, #176]
  408a8c:	str	q1, [sp, #192]
  408a90:	str	q2, [sp, #208]
  408a94:	str	q3, [sp, #224]
  408a98:	str	q4, [sp, #240]
  408a9c:	str	q5, [sp, #256]
  408aa0:	str	q6, [sp, #272]
  408aa4:	str	q7, [sp, #288]
  408aa8:	stp	x1, x2, [sp, #312]
  408aac:	mov	w1, #0x1                   	// #1
  408ab0:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408ab4:	add	x2, x2, #0x44a
  408ab8:	stp	x5, x6, [sp, #344]
  408abc:	str	x7, [sp, #360]
  408ac0:	bl	402be0 <__fprintf_chk@plt>
  408ac4:	add	x0, sp, #0x170
  408ac8:	stp	x0, x0, [sp, #112]
  408acc:	add	x0, sp, #0x130
  408ad0:	str	x0, [sp, #128]
  408ad4:	mov	w0, #0xffffffc8            	// #-56
  408ad8:	str	w0, [sp, #136]
  408adc:	mov	w0, #0xffffff80            	// #-128
  408ae0:	str	w0, [sp, #140]
  408ae4:	ldp	x2, x3, [sp, #112]
  408ae8:	stp	x2, x3, [sp, #80]
  408aec:	ldp	x0, x1, [sp, #128]
  408af0:	stp	x0, x1, [sp, #96]
  408af4:	stp	x0, x1, [sp, #160]
  408af8:	mov	w1, #0x1                   	// #1
  408afc:	ldr	x0, [x21, #1296]
  408b00:	stp	x2, x3, [sp, #144]
  408b04:	add	x3, sp, #0x50
  408b08:	mov	x2, x20
  408b0c:	bl	402a50 <__vfprintf_chk@plt>
  408b10:	ldr	x1, [x21, #1296]
  408b14:	mov	w0, #0xa                   	// #10
  408b18:	bl	4028a0 <putc_unlocked@plt>
  408b1c:	ldr	x0, [x19]
  408b20:	cbnz	x0, 408b2c <wcrtomb@plt+0x5cac>
  408b24:	mov	w0, #0x4                   	// #4
  408b28:	bl	4027d0 <exit@plt>
  408b2c:	ldrb	w1, [x0, #24]
  408b30:	tbz	w1, #0, 408b98 <wcrtomb@plt+0x5d18>
  408b34:	ldr	x0, [x0]
  408b38:	bl	4028c0 <fclose@plt>
  408b3c:	bl	402df0 <__errno_location@plt>
  408b40:	mov	x20, x0
  408b44:	ldr	x24, [x19]
  408b48:	ldr	x0, [x24, #8]
  408b4c:	str	wzr, [x20]
  408b50:	bl	402e20 <unlink@plt>
  408b54:	ldr	w0, [x20]
  408b58:	cbz	w0, 408b98 <wcrtomb@plt+0x5d18>
  408b5c:	mov	x1, x22
  408b60:	mov	w2, #0x5                   	// #5
  408b64:	ldr	x25, [x21, #1296]
  408b68:	mov	x0, #0x0                   	// #0
  408b6c:	bl	402d60 <dcgettext@plt>
  408b70:	mov	x23, x0
  408b74:	ldr	w0, [x20]
  408b78:	ldr	x24, [x24, #8]
  408b7c:	bl	402b00 <strerror@plt>
  408b80:	mov	x4, x0
  408b84:	mov	x3, x24
  408b88:	mov	x2, x23
  408b8c:	mov	x0, x25
  408b90:	mov	w1, #0x1                   	// #1
  408b94:	bl	402be0 <__fprintf_chk@plt>
  408b98:	ldr	x0, [x19]
  408b9c:	ldr	x0, [x0, #16]
  408ba0:	str	x0, [x19]
  408ba4:	b	408b1c <wcrtomb@plt+0x5c9c>
  408ba8:	stp	x29, x30, [sp, #-48]!
  408bac:	mov	x29, sp
  408bb0:	stp	x19, x20, [sp, #16]
  408bb4:	mov	x20, x0
  408bb8:	str	x21, [sp, #32]
  408bbc:	mov	w21, w2
  408bc0:	bl	402900 <fopen@plt>
  408bc4:	mov	x19, x0
  408bc8:	cbnz	x0, 408c00 <wcrtomb@plt+0x5d80>
  408bcc:	cbz	w21, 408c08 <wcrtomb@plt+0x5d88>
  408bd0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408bd4:	add	x1, x1, #0x464
  408bd8:	mov	w2, #0x5                   	// #5
  408bdc:	bl	402d60 <dcgettext@plt>
  408be0:	mov	x19, x0
  408be4:	bl	402df0 <__errno_location@plt>
  408be8:	ldr	w0, [x0]
  408bec:	bl	402b00 <strerror@plt>
  408bf0:	mov	x2, x0
  408bf4:	mov	x1, x20
  408bf8:	mov	x0, x19
  408bfc:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408c00:	mov	x1, x20
  408c04:	bl	4088cc <wcrtomb@plt+0x5a4c>
  408c08:	mov	x0, x19
  408c0c:	ldp	x19, x20, [sp, #16]
  408c10:	ldr	x21, [sp, #32]
  408c14:	ldp	x29, x30, [sp], #48
  408c18:	ret
  408c1c:	stp	x29, x30, [sp, #-48]!
  408c20:	mov	x29, sp
  408c24:	stp	x19, x20, [sp, #16]
  408c28:	mov	x20, x1
  408c2c:	mov	x1, x2
  408c30:	str	x21, [sp, #32]
  408c34:	mov	w21, w3
  408c38:	bl	402a20 <fdopen@plt>
  408c3c:	mov	x19, x0
  408c40:	cbnz	x0, 408c78 <wcrtomb@plt+0x5df8>
  408c44:	cbz	w21, 408c80 <wcrtomb@plt+0x5e00>
  408c48:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408c4c:	add	x1, x1, #0x47e
  408c50:	mov	w2, #0x5                   	// #5
  408c54:	bl	402d60 <dcgettext@plt>
  408c58:	mov	x19, x0
  408c5c:	bl	402df0 <__errno_location@plt>
  408c60:	ldr	w0, [x0]
  408c64:	bl	402b00 <strerror@plt>
  408c68:	mov	x2, x0
  408c6c:	mov	x1, x20
  408c70:	mov	x0, x19
  408c74:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408c78:	mov	x1, x20
  408c7c:	bl	4088cc <wcrtomb@plt+0x5a4c>
  408c80:	mov	x0, x19
  408c84:	ldp	x19, x20, [sp, #16]
  408c88:	ldr	x21, [sp, #32]
  408c8c:	ldp	x29, x30, [sp], #48
  408c90:	ret
  408c94:	stp	x29, x30, [sp, #-64]!
  408c98:	mov	x29, sp
  408c9c:	stp	x19, x20, [sp, #16]
  408ca0:	mov	x20, x1
  408ca4:	stp	x21, x22, [sp, #32]
  408ca8:	mov	x21, x2
  408cac:	mov	x22, x3
  408cb0:	str	x23, [sp, #48]
  408cb4:	mov	x23, x0
  408cb8:	mov	x0, x1
  408cbc:	bl	402790 <strlen@plt>
  408cc0:	mov	x19, x0
  408cc4:	mov	x0, x21
  408cc8:	bl	402790 <strlen@plt>
  408ccc:	add	x0, x19, x0
  408cd0:	add	x0, x0, #0x8
  408cd4:	bl	40fc04 <wcrtomb@plt+0xcd84>
  408cd8:	mov	x5, x21
  408cdc:	mov	x4, x20
  408ce0:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408ce4:	add	x3, x3, #0x498
  408ce8:	mov	x2, #0xffffffffffffffff    	// #-1
  408cec:	mov	w1, #0x1                   	// #1
  408cf0:	mov	x19, x0
  408cf4:	bl	4027b0 <__sprintf_chk@plt>
  408cf8:	mov	w0, #0x3f                  	// #63
  408cfc:	bl	402dd0 <umask@plt>
  408d00:	mov	w1, #0x0                   	// #0
  408d04:	mov	w21, w0
  408d08:	mov	x0, x19
  408d0c:	bl	402b50 <mkostemp@plt>
  408d10:	mov	w20, w0
  408d14:	mov	w0, w21
  408d18:	bl	402dd0 <umask@plt>
  408d1c:	cmn	w20, #0x1
  408d20:	b.ne	408d58 <wcrtomb@plt+0x5ed8>  // b.any
  408d24:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  408d28:	add	x1, x1, #0x62b
  408d2c:	mov	w2, #0x5                   	// #5
  408d30:	mov	x0, #0x0                   	// #0
  408d34:	bl	402d60 <dcgettext@plt>
  408d38:	mov	x20, x0
  408d3c:	bl	402df0 <__errno_location@plt>
  408d40:	ldr	w0, [x0]
  408d44:	bl	402b00 <strerror@plt>
  408d48:	mov	x2, x0
  408d4c:	mov	x1, x19
  408d50:	mov	x0, x20
  408d54:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408d58:	str	x19, [x23]
  408d5c:	mov	x1, x22
  408d60:	mov	w0, w20
  408d64:	bl	402a20 <fdopen@plt>
  408d68:	mov	x20, x0
  408d6c:	mov	x1, x19
  408d70:	bl	4088cc <wcrtomb@plt+0x5a4c>
  408d74:	mov	x0, x20
  408d78:	ldp	x19, x20, [sp, #16]
  408d7c:	ldp	x21, x22, [sp, #32]
  408d80:	ldr	x23, [sp, #48]
  408d84:	ldp	x29, x30, [sp], #64
  408d88:	ret
  408d8c:	stp	x29, x30, [sp, #-48]!
  408d90:	mov	x29, sp
  408d94:	stp	x19, x20, [sp, #16]
  408d98:	mov	x19, x2
  408d9c:	mov	x20, x3
  408da0:	stp	x21, x22, [sp, #32]
  408da4:	mov	x22, x0
  408da8:	mov	x21, x1
  408dac:	mov	x0, x3
  408db0:	bl	402cd0 <clearerr_unlocked@plt>
  408db4:	cbz	x21, 408e24 <wcrtomb@plt+0x5fa4>
  408db8:	mov	x3, x20
  408dbc:	mov	x2, x19
  408dc0:	mov	x1, x21
  408dc4:	mov	x0, x22
  408dc8:	bl	402780 <fwrite_unlocked@plt>
  408dcc:	cmp	x0, x19
  408dd0:	b.eq	408e24 <wcrtomb@plt+0x5fa4>  // b.none
  408dd4:	mov	x3, x19
  408dd8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408ddc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408de0:	add	x2, x2, #0x4a4
  408de4:	add	x1, x1, #0x4c8
  408de8:	mov	w4, #0x5                   	// #5
  408dec:	mov	x0, #0x0                   	// #0
  408df0:	bl	402cb0 <dcngettext@plt>
  408df4:	mov	x21, x0
  408df8:	mov	x0, x20
  408dfc:	bl	4089c4 <wcrtomb@plt+0x5b44>
  408e00:	mov	x20, x0
  408e04:	bl	402df0 <__errno_location@plt>
  408e08:	ldr	w0, [x0]
  408e0c:	bl	402b00 <strerror@plt>
  408e10:	mov	x3, x0
  408e14:	mov	x2, x20
  408e18:	mov	x1, x19
  408e1c:	mov	x0, x21
  408e20:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408e24:	ldp	x19, x20, [sp, #16]
  408e28:	ldp	x21, x22, [sp, #32]
  408e2c:	ldp	x29, x30, [sp], #48
  408e30:	ret
  408e34:	stp	x29, x30, [sp, #-48]!
  408e38:	mov	x29, sp
  408e3c:	stp	x19, x20, [sp, #16]
  408e40:	mov	x19, x2
  408e44:	mov	x20, x3
  408e48:	stp	x21, x22, [sp, #32]
  408e4c:	mov	x22, x0
  408e50:	mov	x21, x1
  408e54:	mov	x0, x3
  408e58:	bl	402cd0 <clearerr_unlocked@plt>
  408e5c:	cbz	x21, 408ec8 <wcrtomb@plt+0x6048>
  408e60:	mov	x2, x19
  408e64:	mov	x3, x20
  408e68:	mov	x1, x21
  408e6c:	mov	x0, x22
  408e70:	bl	402ba0 <fread_unlocked@plt>
  408e74:	mov	x19, x0
  408e78:	cbnz	x0, 408ec8 <wcrtomb@plt+0x6048>
  408e7c:	mov	x0, x20
  408e80:	bl	402820 <ferror_unlocked@plt>
  408e84:	cbz	w0, 408ec8 <wcrtomb@plt+0x6048>
  408e88:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408e8c:	add	x1, x1, #0x4eb
  408e90:	mov	w2, #0x5                   	// #5
  408e94:	mov	x0, #0x0                   	// #0
  408e98:	bl	402d60 <dcgettext@plt>
  408e9c:	mov	x19, x0
  408ea0:	mov	x0, x20
  408ea4:	bl	4089c4 <wcrtomb@plt+0x5b44>
  408ea8:	mov	x20, x0
  408eac:	bl	402df0 <__errno_location@plt>
  408eb0:	ldr	w0, [x0]
  408eb4:	bl	402b00 <strerror@plt>
  408eb8:	mov	x2, x0
  408ebc:	mov	x1, x20
  408ec0:	mov	x0, x19
  408ec4:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408ec8:	mov	x0, x19
  408ecc:	ldp	x19, x20, [sp, #16]
  408ed0:	ldp	x21, x22, [sp, #32]
  408ed4:	ldp	x29, x30, [sp], #48
  408ed8:	ret
  408edc:	stp	x29, x30, [sp, #-48]!
  408ee0:	mov	x29, sp
  408ee4:	stp	x19, x20, [sp, #16]
  408ee8:	mov	x20, x0
  408eec:	mov	x19, x3
  408ef0:	mov	x0, x3
  408ef4:	stp	x21, x22, [sp, #32]
  408ef8:	mov	x21, x1
  408efc:	and	w22, w2, #0xff
  408f00:	bl	402820 <ferror_unlocked@plt>
  408f04:	cbnz	w0, 408f2c <wcrtomb@plt+0x60ac>
  408f08:	mov	x3, x19
  408f0c:	mov	w2, w22
  408f10:	mov	x1, x21
  408f14:	mov	x0, x20
  408f18:	bl	402960 <getdelim@plt>
  408f1c:	mov	x20, x0
  408f20:	mov	x0, x19
  408f24:	bl	402820 <ferror_unlocked@plt>
  408f28:	cbz	w0, 408f6c <wcrtomb@plt+0x60ec>
  408f2c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408f30:	add	x1, x1, #0x4eb
  408f34:	mov	w2, #0x5                   	// #5
  408f38:	mov	x0, #0x0                   	// #0
  408f3c:	bl	402d60 <dcgettext@plt>
  408f40:	mov	x20, x0
  408f44:	mov	x0, x19
  408f48:	bl	4089c4 <wcrtomb@plt+0x5b44>
  408f4c:	mov	x19, x0
  408f50:	bl	402df0 <__errno_location@plt>
  408f54:	ldr	w0, [x0]
  408f58:	bl	402b00 <strerror@plt>
  408f5c:	mov	x2, x0
  408f60:	mov	x1, x19
  408f64:	mov	x0, x20
  408f68:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408f6c:	mov	x0, x20
  408f70:	ldp	x19, x20, [sp, #16]
  408f74:	ldp	x21, x22, [sp, #32]
  408f78:	ldp	x29, x30, [sp], #48
  408f7c:	ret
  408f80:	stp	x29, x30, [sp, #-32]!
  408f84:	mov	x29, sp
  408f88:	str	x19, [sp, #16]
  408f8c:	mov	x19, x0
  408f90:	bl	402880 <__fwriting@plt>
  408f94:	cbz	w0, 408fe8 <wcrtomb@plt+0x6168>
  408f98:	mov	x0, x19
  408f9c:	bl	402cd0 <clearerr_unlocked@plt>
  408fa0:	mov	x0, x19
  408fa4:	bl	402ca0 <fflush_unlocked@plt>
  408fa8:	cmn	w0, #0x1
  408fac:	b.ne	408fe8 <wcrtomb@plt+0x6168>  // b.any
  408fb0:	bl	402df0 <__errno_location@plt>
  408fb4:	ldr	w4, [x0]
  408fb8:	cmp	w4, #0x9
  408fbc:	b.eq	408fe8 <wcrtomb@plt+0x6168>  // b.none
  408fc0:	mov	x0, x19
  408fc4:	bl	4089c4 <wcrtomb@plt+0x5b44>
  408fc8:	mov	x19, x0
  408fcc:	mov	w0, w4
  408fd0:	bl	402b00 <strerror@plt>
  408fd4:	mov	x2, x0
  408fd8:	mov	x1, x19
  408fdc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  408fe0:	add	x0, x0, #0x500
  408fe4:	bl	408a48 <wcrtomb@plt+0x5bc8>
  408fe8:	ldr	x19, [sp, #16]
  408fec:	ldp	x29, x30, [sp], #32
  408ff0:	ret
  408ff4:	stp	x29, x30, [sp, #-32]!
  408ff8:	mov	x29, sp
  408ffc:	str	x19, [sp, #16]
  409000:	mov	x19, x0
  409004:	bl	408f80 <wcrtomb@plt+0x6100>
  409008:	mov	x0, x19
  40900c:	bl	402cd0 <clearerr_unlocked@plt>
  409010:	mov	x0, x19
  409014:	bl	4028c0 <fclose@plt>
  409018:	cmn	w0, #0x1
  40901c:	b.ne	40904c <wcrtomb@plt+0x61cc>  // b.any
  409020:	mov	x0, x19
  409024:	bl	4089c4 <wcrtomb@plt+0x5b44>
  409028:	mov	x19, x0
  40902c:	bl	402df0 <__errno_location@plt>
  409030:	ldr	w0, [x0]
  409034:	bl	402b00 <strerror@plt>
  409038:	mov	x2, x0
  40903c:	mov	x1, x19
  409040:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  409044:	add	x0, x0, #0x516
  409048:	bl	408a48 <wcrtomb@plt+0x5bc8>
  40904c:	ldr	x19, [sp, #16]
  409050:	ldp	x29, x30, [sp], #32
  409054:	ret
  409058:	stp	x29, x30, [sp, #-80]!
  40905c:	mov	x29, sp
  409060:	stp	x19, x20, [sp, #16]
  409064:	mov	x20, x0
  409068:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40906c:	stp	x21, x22, [sp, #32]
  409070:	add	x22, sp, #0x30
  409074:	mov	x21, x0
  409078:	ldr	x1, [x0, #1936]
  40907c:	str	x1, [sp, #64]
  409080:	ldr	x19, [x22, #16]
  409084:	cbnz	x19, 4090ac <wcrtomb@plt+0x622c>
  409088:	ldr	x0, [sp, #64]
  40908c:	str	x0, [x21, #1936]
  409090:	cbnz	x20, 4090e4 <wcrtomb@plt+0x6264>
  409094:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  409098:	ldp	x19, x20, [sp, #16]
  40909c:	ldr	x0, [x0, #1320]
  4090a0:	ldp	x21, x22, [sp, #32]
  4090a4:	ldp	x29, x30, [sp], #80
  4090a8:	b	408ff4 <wcrtomb@plt+0x6174>
  4090ac:	ldr	x0, [x19]
  4090b0:	cbz	x20, 4090bc <wcrtomb@plt+0x623c>
  4090b4:	cmp	x20, x0
  4090b8:	b.ne	4090dc <wcrtomb@plt+0x625c>  // b.any
  4090bc:	bl	408ff4 <wcrtomb@plt+0x6174>
  4090c0:	ldr	x0, [x19, #16]
  4090c4:	str	x0, [x22, #16]
  4090c8:	ldr	x0, [x19, #8]
  4090cc:	bl	402c20 <free@plt>
  4090d0:	mov	x0, x19
  4090d4:	mov	x19, x22
  4090d8:	bl	402c20 <free@plt>
  4090dc:	mov	x22, x19
  4090e0:	b	409080 <wcrtomb@plt+0x6200>
  4090e4:	ldp	x19, x20, [sp, #16]
  4090e8:	ldp	x21, x22, [sp, #32]
  4090ec:	ldp	x29, x30, [sp], #80
  4090f0:	ret
  4090f4:	stp	x29, x30, [sp, #-208]!
  4090f8:	mov	x29, sp
  4090fc:	stp	x19, x20, [sp, #16]
  409100:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  409104:	add	x19, x19, #0x790
  409108:	mov	x20, x0
  40910c:	stp	x21, x22, [sp, #32]
  409110:	ldr	w0, [x19, #8]
  409114:	stp	x23, x24, [sp, #48]
  409118:	str	x25, [sp, #64]
  40911c:	cbnz	w0, 409140 <wcrtomb@plt+0x62c0>
  409120:	mov	x0, #0x1001                	// #4097
  409124:	bl	40fd78 <wcrtomb@plt+0xcef8>
  409128:	str	x0, [x19, #16]
  40912c:	mov	x0, #0x1001                	// #4097
  409130:	bl	40fd78 <wcrtomb@plt+0xcef8>
  409134:	str	x0, [x19, #24]
  409138:	mov	w0, #0x1001                	// #4097
  40913c:	str	w0, [x19, #8]
  409140:	mov	w24, #0xa000                	// #40960
  409144:	add	x1, sp, #0x50
  409148:	mov	x0, x20
  40914c:	bl	41aef0 <_obstack_memory_used@@Base+0xad44>
  409150:	cmp	w0, #0x0
  409154:	cbnz	w0, 4092c4 <wcrtomb@plt+0x6444>
  409158:	ldr	w0, [sp, #96]
  40915c:	and	w0, w0, w24
  409160:	cmp	w0, #0xa, lsl #12
  409164:	b.eq	409184 <wcrtomb@plt+0x6304>  // b.none
  409168:	mov	x0, x20
  40916c:	ldp	x19, x20, [sp, #16]
  409170:	ldp	x21, x22, [sp, #32]
  409174:	ldp	x23, x24, [sp, #48]
  409178:	ldr	x25, [sp, #64]
  40917c:	ldp	x29, x30, [sp], #208
  409180:	ret
  409184:	ldr	x0, [x19, #24]
  409188:	cmp	x0, x20
  40918c:	b.ne	4091a4 <wcrtomb@plt+0x6324>  // b.any
  409190:	ldr	x2, [x19, #16]
  409194:	mov	x1, x20
  409198:	mov	x0, x2
  40919c:	bl	402cc0 <strcpy@plt>
  4091a0:	mov	x20, x0
  4091a4:	ldr	w25, [x19, #8]
  4091a8:	mov	x0, x20
  4091ac:	ldr	x22, [x19, #24]
  4091b0:	sxtw	x2, w25
  4091b4:	mov	x1, x22
  4091b8:	bl	402810 <readlink@plt>
  4091bc:	mov	w23, w0
  4091c0:	cmp	w25, w0
  4091c4:	b.eq	409200 <wcrtomb@plt+0x6380>  // b.none
  4091c8:	tbz	w0, #31, 40922c <wcrtomb@plt+0x63ac>
  4091cc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4091d0:	add	x1, x1, #0x52c
  4091d4:	mov	w2, #0x5                   	// #5
  4091d8:	mov	x0, #0x0                   	// #0
  4091dc:	bl	402d60 <dcgettext@plt>
  4091e0:	mov	x19, x0
  4091e4:	bl	402df0 <__errno_location@plt>
  4091e8:	ldr	w0, [x0]
  4091ec:	bl	402b00 <strerror@plt>
  4091f0:	mov	x2, x0
  4091f4:	mov	x1, x20
  4091f8:	mov	x0, x19
  4091fc:	bl	408a48 <wcrtomb@plt+0x5bc8>
  409200:	ldr	x0, [x19, #16]
  409204:	lsl	w1, w25, #1
  409208:	str	w1, [x19, #8]
  40920c:	sxtw	x1, w1
  409210:	bl	40fc64 <wcrtomb@plt+0xcde4>
  409214:	str	x0, [x19, #16]
  409218:	ldrsw	x1, [x19, #8]
  40921c:	ldr	x0, [x19, #24]
  409220:	bl	40fc64 <wcrtomb@plt+0xcde4>
  409224:	str	x0, [x19, #24]
  409228:	b	4091a4 <wcrtomb@plt+0x6324>
  40922c:	strb	wzr, [x22, w0, sxtw]
  409230:	ldrb	w0, [x22]
  409234:	cmp	w0, #0x2f
  409238:	b.eq	4092bc <wcrtomb@plt+0x643c>  // b.none
  40923c:	mov	x0, x20
  409240:	mov	w1, #0x2f                  	// #47
  409244:	bl	402b10 <strrchr@plt>
  409248:	cbz	x0, 4092bc <wcrtomb@plt+0x643c>
  40924c:	sub	x21, x0, x20
  409250:	add	w21, w21, #0x1
  409254:	add	w1, w23, w21
  409258:	cmp	w25, w1
  40925c:	b.gt	409288 <wcrtomb@plt+0x6408>
  409260:	ldr	x0, [x19, #16]
  409264:	add	w1, w1, #0x1
  409268:	str	w1, [x19, #8]
  40926c:	sxtw	x1, w1
  409270:	bl	40fc64 <wcrtomb@plt+0xcde4>
  409274:	str	x0, [x19, #16]
  409278:	ldrsw	x1, [x19, #8]
  40927c:	ldr	x0, [x19, #24]
  409280:	bl	40fc64 <wcrtomb@plt+0xcde4>
  409284:	str	x0, [x19, #24]
  409288:	ldr	x22, [x19, #16]
  40928c:	sxtw	x21, w21
  409290:	cmp	x22, x20
  409294:	b.eq	4092a8 <wcrtomb@plt+0x6428>  // b.none
  409298:	mov	x2, x21
  40929c:	mov	x1, x20
  4092a0:	mov	x0, x22
  4092a4:	bl	402750 <memcpy@plt>
  4092a8:	ldr	x1, [x19, #24]
  4092ac:	add	w2, w23, #0x1
  4092b0:	add	x0, x22, x21
  4092b4:	sxtw	x2, w2
  4092b8:	bl	402750 <memcpy@plt>
  4092bc:	mov	x20, x22
  4092c0:	b	409144 <wcrtomb@plt+0x62c4>
  4092c4:	b.ge	409168 <wcrtomb@plt+0x62e8>  // b.tcont
  4092c8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4092cc:	mov	w2, #0x5                   	// #5
  4092d0:	add	x1, x1, #0x54b
  4092d4:	b	4091d8 <wcrtomb@plt+0x6358>
  4092d8:	stp	x29, x30, [sp, #-48]!
  4092dc:	mov	x29, sp
  4092e0:	stp	x19, x20, [sp, #16]
  4092e4:	mov	x20, x2
  4092e8:	stp	x21, x22, [sp, #32]
  4092ec:	mov	x21, x0
  4092f0:	bl	402c90 <rename@plt>
  4092f4:	cmn	w0, #0x1
  4092f8:	b.ne	409384 <wcrtomb@plt+0x6504>  // b.any
  4092fc:	bl	402df0 <__errno_location@plt>
  409300:	mov	x19, x0
  409304:	cbz	x20, 409354 <wcrtomb@plt+0x64d4>
  409308:	ldr	w22, [x19]
  40930c:	mov	x0, x20
  409310:	str	wzr, [x19]
  409314:	bl	402e20 <unlink@plt>
  409318:	ldr	w0, [x19]
  40931c:	cbz	w0, 409350 <wcrtomb@plt+0x64d0>
  409320:	mov	w2, #0x5                   	// #5
  409324:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  409328:	mov	x0, #0x0                   	// #0
  40932c:	add	x1, x1, #0x44f
  409330:	bl	402d60 <dcgettext@plt>
  409334:	mov	x21, x0
  409338:	ldr	w0, [x19]
  40933c:	bl	402b00 <strerror@plt>
  409340:	mov	x2, x0
  409344:	mov	x1, x20
  409348:	mov	x0, x21
  40934c:	bl	408a48 <wcrtomb@plt+0x5bc8>
  409350:	str	w22, [x19]
  409354:	mov	w2, #0x5                   	// #5
  409358:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40935c:	mov	x0, #0x0                   	// #0
  409360:	add	x1, x1, #0x55e
  409364:	bl	402d60 <dcgettext@plt>
  409368:	mov	x20, x0
  40936c:	ldr	w0, [x19]
  409370:	bl	402b00 <strerror@plt>
  409374:	mov	x2, x0
  409378:	mov	x1, x21
  40937c:	mov	x0, x20
  409380:	b	40934c <wcrtomb@plt+0x64cc>
  409384:	ldp	x19, x20, [sp, #16]
  409388:	ldp	x21, x22, [sp, #32]
  40938c:	ldp	x29, x30, [sp], #48
  409390:	ret
  409394:	stp	x29, x30, [sp, #-32]!
  409398:	mov	x1, #0x18                  	// #24
  40939c:	mov	x0, #0x1                   	// #1
  4093a0:	mov	x29, sp
  4093a4:	str	x19, [sp, #16]
  4093a8:	bl	40fd44 <wcrtomb@plt+0xcec4>
  4093ac:	mov	x19, x0
  4093b0:	mov	x0, #0x32                  	// #50
  4093b4:	bl	40fd78 <wcrtomb@plt+0xcef8>
  4093b8:	stp	xzr, x0, [x19, #8]
  4093bc:	mov	x0, #0x32                  	// #50
  4093c0:	str	x0, [x19]
  4093c4:	mov	x0, x19
  4093c8:	ldr	x19, [sp, #16]
  4093cc:	ldp	x29, x30, [sp], #32
  4093d0:	ret
  4093d4:	ldr	x0, [x0, #16]
  4093d8:	ret
  4093dc:	ldr	x0, [x0, #8]
  4093e0:	ret
  4093e4:	stp	x29, x30, [sp, #-48]!
  4093e8:	mov	x29, sp
  4093ec:	stp	x19, x20, [sp, #16]
  4093f0:	mov	x20, x2
  4093f4:	mov	x19, x0
  4093f8:	ldr	x2, [x0]
  4093fc:	str	x21, [sp, #32]
  409400:	mov	x21, x1
  409404:	ldr	x1, [x0, #8]
  409408:	sub	x2, x2, x1
  40940c:	cmp	x2, x20
  409410:	b.cs	40941c <wcrtomb@plt+0x659c>  // b.hs, b.nlast
  409414:	add	x1, x1, x20
  409418:	bl	408954 <wcrtomb@plt+0x5ad4>
  40941c:	ldp	x0, x3, [x19, #8]
  409420:	mov	x2, x20
  409424:	mov	x1, x21
  409428:	add	x0, x3, x0
  40942c:	bl	402750 <memcpy@plt>
  409430:	ldr	x2, [x19, #8]
  409434:	ldr	x21, [sp, #32]
  409438:	add	x2, x2, x20
  40943c:	str	x2, [x19, #8]
  409440:	ldp	x19, x20, [sp, #16]
  409444:	ldp	x29, x30, [sp], #48
  409448:	ret
  40944c:	cmn	w1, #0x1
  409450:	b.eq	40949c <wcrtomb@plt+0x661c>  // b.none
  409454:	stp	x29, x30, [sp, #-32]!
  409458:	mov	x29, sp
  40945c:	stp	x19, x20, [sp, #16]
  409460:	mov	w20, w1
  409464:	mov	x19, x0
  409468:	ldp	x1, x2, [x0]
  40946c:	cmp	x1, x2
  409470:	b.ne	40947c <wcrtomb@plt+0x65fc>  // b.any
  409474:	add	x1, x1, #0x1
  409478:	bl	408954 <wcrtomb@plt+0x5ad4>
  40947c:	ldp	x1, x2, [x19, #8]
  409480:	add	x0, x1, #0x1
  409484:	str	x0, [x19, #8]
  409488:	strb	w20, [x2, x1]
  40948c:	add	x0, x2, x1
  409490:	ldp	x19, x20, [sp, #16]
  409494:	ldp	x29, x30, [sp], #32
  409498:	ret
  40949c:	mov	x0, #0x0                   	// #0
  4094a0:	ret
  4094a4:	stp	x29, x30, [sp, #-32]!
  4094a8:	mov	x29, sp
  4094ac:	str	x19, [sp, #16]
  4094b0:	mov	x19, x0
  4094b4:	cbz	x0, 4094c0 <wcrtomb@plt+0x6640>
  4094b8:	ldr	x0, [x0, #16]
  4094bc:	bl	402c20 <free@plt>
  4094c0:	mov	x0, x19
  4094c4:	ldr	x19, [sp, #16]
  4094c8:	ldp	x29, x30, [sp], #32
  4094cc:	b	402c20 <free@plt>
  4094d0:	stp	x29, x30, [sp, #-48]!
  4094d4:	mov	x29, sp
  4094d8:	stp	x19, x20, [sp, #16]
  4094dc:	mov	x20, x0
  4094e0:	stp	x21, x22, [sp, #32]
  4094e4:	mov	x21, x2
  4094e8:	bl	40e1fc <wcrtomb@plt+0xb37c>
  4094ec:	mov	w19, w0
  4094f0:	cmn	w0, #0x2
  4094f4:	b.eq	409514 <wcrtomb@plt+0x6694>  // b.none
  4094f8:	cmn	w0, #0x1
  4094fc:	b.eq	409540 <wcrtomb@plt+0x66c0>  // b.none
  409500:	mov	w0, w19
  409504:	ldp	x19, x20, [sp, #16]
  409508:	ldp	x21, x22, [sp, #32]
  40950c:	ldp	x29, x30, [sp], #48
  409510:	ret
  409514:	bl	402df0 <__errno_location@plt>
  409518:	ldr	w21, [x0]
  40951c:	mov	x0, x20
  409520:	bl	40f700 <wcrtomb@plt+0xc880>
  409524:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  409528:	mov	x3, x0
  40952c:	add	x2, x2, #0x47b
  409530:	mov	w1, w21
  409534:	mov	w0, #0x0                   	// #0
  409538:	bl	4027e0 <error@plt>
  40953c:	b	409500 <wcrtomb@plt+0x6680>
  409540:	bl	402df0 <__errno_location@plt>
  409544:	ldr	w22, [x0]
  409548:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40954c:	add	x1, x1, #0x573
  409550:	mov	w2, #0x5                   	// #5
  409554:	mov	x0, #0x0                   	// #0
  409558:	bl	402d60 <dcgettext@plt>
  40955c:	mov	x20, x0
  409560:	mov	x0, x21
  409564:	bl	40f700 <wcrtomb@plt+0xc880>
  409568:	mov	x2, x20
  40956c:	mov	x3, x0
  409570:	mov	w1, w22
  409574:	b	409534 <wcrtomb@plt+0x66b4>
  409578:	and	w3, w2, #0x1
  40957c:	tbz	w2, #0, 409584 <wcrtomb@plt+0x6704>
  409580:	and	w3, w0, #0x7
  409584:	and	w4, w2, #0x2
  409588:	tbz	w2, #1, 409590 <wcrtomb@plt+0x6710>
  40958c:	ubfx	x4, x0, #3, #3
  409590:	orr	w3, w3, w4
  409594:	and	w4, w2, #0x4
  409598:	tbz	w2, #2, 4095a0 <wcrtomb@plt+0x6720>
  40959c:	ubfx	x4, x0, #6, #3
  4095a0:	orr	w3, w3, w4
  4095a4:	tst	w3, w1
  4095a8:	cset	w0, ne  // ne = any
  4095ac:	ret
  4095b0:	lsr	w2, w0, #6
  4095b4:	mov	x3, #0x1                   	// #1
  4095b8:	lsl	x3, x3, x0
  4095bc:	lsl	x2, x2, #3
  4095c0:	ldr	x0, [x1, x2]
  4095c4:	orr	x0, x0, x3
  4095c8:	str	x0, [x1, x2]
  4095cc:	ret
  4095d0:	stp	x29, x30, [sp, #-48]!
  4095d4:	mov	x29, sp
  4095d8:	stp	x21, x22, [sp, #32]
  4095dc:	mov	x21, x0
  4095e0:	ldr	x22, [x0, #144]
  4095e4:	stp	x19, x20, [sp, #16]
  4095e8:	mov	x20, #0x0                   	// #0
  4095ec:	add	x0, x22, x1, lsl #3
  4095f0:	ldur	x2, [x0, #-8]
  4095f4:	cmp	x2, #0x103
  4095f8:	b.gt	409610 <wcrtomb@plt+0x6790>
  4095fc:	cmp	x2, #0x100
  409600:	b.le	40961c <wcrtomb@plt+0x679c>
  409604:	sub	x1, x1, #0x1
  409608:	add	x20, x20, #0x1
  40960c:	b	4095ec <wcrtomb@plt+0x676c>
  409610:	sub	x2, x2, #0x105
  409614:	cmp	x2, #0x1
  409618:	b.ls	409630 <wcrtomb@plt+0x67b0>  // b.plast
  40961c:	add	x0, x20, #0x1
  409620:	ldp	x19, x20, [sp, #16]
  409624:	ldp	x21, x22, [sp, #32]
  409628:	ldp	x29, x30, [sp], #48
  40962c:	ret
  409630:	sub	x19, x1, #0x1
  409634:	mov	x0, x21
  409638:	mov	x1, x19
  40963c:	bl	4095d0 <wcrtomb@plt+0x6750>
  409640:	add	x2, x0, #0x1
  409644:	sub	x1, x19, x0
  409648:	add	x20, x20, x2
  40964c:	b	4095ec <wcrtomb@plt+0x676c>
  409650:	stp	x29, x30, [sp, #-32]!
  409654:	mov	x29, sp
  409658:	stp	x19, x20, [sp, #16]
  40965c:	mov	x19, x0
  409660:	mov	x20, x1
  409664:	mov	x0, x20
  409668:	mov	x1, #0x10                  	// #16
  40966c:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  409670:	stp	x0, xzr, [x19]
  409674:	str	x20, [x19, #16]
  409678:	ldp	x19, x20, [sp, #16]
  40967c:	ldp	x29, x30, [sp], #32
  409680:	ret
  409684:	ldr	x5, [x1, #8]
  409688:	mov	x6, #0x0                   	// #0
  40968c:	mov	x4, x5
  409690:	cmp	x6, x4
  409694:	b.lt	4096a0 <wcrtomb@plt+0x6820>  // b.tstop
  409698:	mov	w0, #0x0                   	// #0
  40969c:	b	409704 <wcrtomb@plt+0x6884>
  4096a0:	add	x2, x6, x4
  4096a4:	ldr	x7, [x1]
  4096a8:	asr	x2, x2, #1
  4096ac:	lsl	x8, x2, #4
  4096b0:	add	x3, x7, x2, lsl #4
  4096b4:	ldr	x7, [x7, x8]
  4096b8:	cmp	x7, x0
  4096bc:	b.ge	4096d0 <wcrtomb@plt+0x6850>  // b.tcont
  4096c0:	add	x6, x2, #0x1
  4096c4:	mov	x2, x4
  4096c8:	mov	x4, x2
  4096cc:	b	409690 <wcrtomb@plt+0x6810>
  4096d0:	b.ne	4096c8 <wcrtomb@plt+0x6848>  // b.any
  4096d4:	ldr	w0, [x3, #8]
  4096d8:	mov	x4, x2
  4096dc:	add	x4, x4, #0x1
  4096e0:	add	x3, x3, #0x10
  4096e4:	cmp	x4, x5
  4096e8:	b.lt	409708 <wcrtomb@plt+0x6888>  // b.tstop
  4096ec:	sub	x3, x5, #0x1
  4096f0:	cmp	x5, x2
  4096f4:	sub	x3, x3, x2
  4096f8:	csel	x3, x3, xzr, gt
  4096fc:	add	x2, x3, x2
  409700:	str	x2, [x1, #8]
  409704:	ret
  409708:	ldp	x6, x7, [x3]
  40970c:	stp	x6, x7, [x3, #-16]
  409710:	b	4096dc <wcrtomb@plt+0x685c>
  409714:	ldr	x2, [x0]
  409718:	ldr	x1, [x1]
  40971c:	cmp	x2, x1
  409720:	cset	w0, gt
  409724:	csinv	w0, w0, wzr, ge  // ge = tcont
  409728:	ret
  40972c:	mov	x0, x1
  409730:	mov	w1, #0x1                   	// #1
  409734:	strb	w1, [x5]
  409738:	ret
  40973c:	stp	xzr, xzr, [x0]
  409740:	stp	xzr, xzr, [x0, #16]
  409744:	ret
  409748:	stp	x29, x30, [sp, #-64]!
  40974c:	mov	x29, sp
  409750:	stp	x19, x20, [sp, #16]
  409754:	mov	x20, x0
  409758:	str	x21, [sp, #32]
  40975c:	ldrb	w0, [x1]
  409760:	add	x0, x3, x0, lsl #2
  409764:	ldr	w21, [x0, #1308]
  409768:	cmn	w21, #0x1
  40976c:	b.ne	4097a8 <wcrtomb@plt+0x6928>  // b.any
  409770:	mov	x19, x3
  409774:	add	x0, sp, #0x3c
  409778:	add	x3, x3, #0x110
  40977c:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  409780:	sub	x1, x0, #0x1
  409784:	cmn	x1, #0x4
  409788:	b.hi	4097a4 <wcrtomb@plt+0x6924>  // b.pmore
  40978c:	ldr	w1, [sp, #60]
  409790:	str	w1, [x20]
  409794:	ldp	x19, x20, [sp, #16]
  409798:	ldr	x21, [sp, #32]
  40979c:	ldp	x29, x30, [sp], #64
  4097a0:	ret
  4097a4:	str	xzr, [x19, #272]
  4097a8:	mov	w0, #0x1                   	// #1
  4097ac:	str	w21, [x20]
  4097b0:	b	409794 <wcrtomb@plt+0x6914>
  4097b4:	stp	x29, x30, [sp, #-32]!
  4097b8:	mov	x3, x0
  4097bc:	mov	x29, sp
  4097c0:	ldp	x1, x2, [x0, #32]
  4097c4:	str	x19, [sp, #16]
  4097c8:	mov	x19, x0
  4097cc:	add	x0, x0, #0x48
  4097d0:	bl	409748 <wcrtomb@plt+0x68c8>
  4097d4:	mov	w1, w0
  4097d8:	cmp	w0, #0x1
  4097dc:	ldr	x2, [x19, #32]
  4097e0:	b.ne	409808 <wcrtomb@plt+0x6988>  // b.any
  4097e4:	ldrb	w0, [x2]
  4097e8:	add	x2, x2, w1, sxtw
  4097ec:	str	x2, [x19, #32]
  4097f0:	ldr	x2, [x19, #40]
  4097f4:	sub	x1, x2, w1, sxtw
  4097f8:	str	x1, [x19, #40]
  4097fc:	ldr	x19, [sp, #16]
  409800:	ldp	x29, x30, [sp], #32
  409804:	ret
  409808:	mov	w0, #0xffffffff            	// #-1
  40980c:	b	4097e8 <wcrtomb@plt+0x6968>
  409810:	stp	x29, x30, [sp, #-32]!
  409814:	mov	x29, sp
  409818:	ldr	x6, [x1]
  40981c:	stp	x19, x20, [sp, #16]
  409820:	mov	x20, x1
  409824:	asr	x19, x6, #1
  409828:	adds	x19, x6, x19
  40982c:	b.vc	409834 <wcrtomb@plt+0x69b4>
  409830:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
  409834:	cmn	x3, #0x1
  409838:	b.eq	409844 <wcrtomb@plt+0x69c4>  // b.none
  40983c:	cmp	x19, x3
  409840:	csel	x19, x19, x3, le
  409844:	mul	x1, x19, x4
  409848:	smulh	x5, x19, x4
  40984c:	cmp	x5, x1, asr #63
  409850:	b.ne	409864 <wcrtomb@plt+0x69e4>  // b.any
  409854:	cmp	x1, #0x7f
  409858:	b.gt	409874 <wcrtomb@plt+0x69f4>
  40985c:	mov	x5, #0x80                  	// #128
  409860:	b	409868 <wcrtomb@plt+0x69e8>
  409864:	mov	x5, #0x7fffffffffffffff    	// #9223372036854775807
  409868:	udiv	x19, x5, x4
  40986c:	msub	x1, x19, x4, x5
  409870:	sub	x1, x5, x1
  409874:	cbnz	x0, 40987c <wcrtomb@plt+0x69fc>
  409878:	str	xzr, [x20]
  40987c:	sub	x5, x19, x6
  409880:	cmp	x5, x2
  409884:	b.ge	4098b8 <wcrtomb@plt+0x6a38>  // b.tcont
  409888:	adds	x6, x6, x2
  40988c:	mov	x19, x6
  409890:	b.vs	4098b4 <wcrtomb@plt+0x6a34>
  409894:	cmn	x3, #0x1
  409898:	b.eq	4098a4 <wcrtomb@plt+0x6a24>  // b.none
  40989c:	cmp	x6, x3
  4098a0:	b.gt	4098b4 <wcrtomb@plt+0x6a34>
  4098a4:	mul	x1, x6, x4
  4098a8:	smulh	x6, x6, x4
  4098ac:	cmp	x6, x1, asr #63
  4098b0:	b.eq	4098b8 <wcrtomb@plt+0x6a38>  // b.none
  4098b4:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  4098b8:	bl	40fc64 <wcrtomb@plt+0xcde4>
  4098bc:	str	x19, [x20]
  4098c0:	ldp	x19, x20, [sp, #16]
  4098c4:	ldp	x29, x30, [sp], #32
  4098c8:	ret
  4098cc:	stp	x29, x30, [sp, #-48]!
  4098d0:	mov	x29, sp
  4098d4:	stp	x19, x20, [sp, #16]
  4098d8:	mov	x19, x0
  4098dc:	mov	x20, x1
  4098e0:	ldr	x1, [x0, #160]
  4098e4:	ldr	x0, [x0, #152]
  4098e8:	str	x21, [sp, #32]
  4098ec:	and	w21, w2, #0xff
  4098f0:	cmp	x1, x0
  4098f4:	b.ne	409930 <wcrtomb@plt+0x6ab0>  // b.any
  4098f8:	ldr	x0, [x19, #144]
  4098fc:	add	x1, x19, #0xa0
  409900:	mov	x4, #0x8                   	// #8
  409904:	mov	x3, #0xffffffffffffffff    	// #-1
  409908:	mov	x2, #0x1                   	// #1
  40990c:	bl	409810 <wcrtomb@plt+0x6990>
  409910:	str	x0, [x19, #144]
  409914:	ldrb	w0, [x19, #1048]
  409918:	cbz	w0, 409944 <wcrtomb@plt+0x6ac4>
  40991c:	ldr	x1, [x19, #160]
  409920:	mov	x2, #0x1                   	// #1
  409924:	ldr	x0, [x19, #280]
  409928:	bl	40fca8 <wcrtomb@plt+0xce28>
  40992c:	str	x0, [x19, #280]
  409930:	ldrb	w0, [x19, #1048]
  409934:	cbz	w0, 409944 <wcrtomb@plt+0x6ac4>
  409938:	ldr	x0, [x19, #152]
  40993c:	ldr	x1, [x19, #280]
  409940:	strb	w21, [x1, x0]
  409944:	ldp	x1, x0, [x19, #144]
  409948:	cmp	x20, #0x106
  40994c:	add	x2, x0, #0x1
  409950:	str	x2, [x19, #152]
  409954:	str	x20, [x1, x0, lsl #3]
  409958:	ldr	x0, [x19, #136]
  40995c:	b.gt	4099a0 <wcrtomb@plt+0x6b20>
  409960:	cmp	x20, #0x104
  409964:	b.gt	4099bc <wcrtomb@plt+0x6b3c>
  409968:	cmp	x20, #0x100
  40996c:	b.eq	4099b4 <wcrtomb@plt+0x6b34>  // b.none
  409970:	sub	x20, x20, #0x101
  409974:	cmp	x20, #0x2
  409978:	b.hi	4099a8 <wcrtomb@plt+0x6b28>  // b.pmore
  40997c:	ldr	x0, [x19, #136]
  409980:	ldr	x1, [x19, #168]
  409984:	cmp	x0, x1
  409988:	b.le	409990 <wcrtomb@plt+0x6b10>
  40998c:	str	x0, [x19, #168]
  409990:	ldp	x19, x20, [sp, #16]
  409994:	ldr	x21, [sp, #32]
  409998:	ldp	x29, x30, [sp], #48
  40999c:	ret
  4099a0:	cmp	x20, #0x112
  4099a4:	b.eq	4099c8 <wcrtomb@plt+0x6b48>  // b.none
  4099a8:	ldr	x1, [x19, #176]
  4099ac:	add	x1, x1, #0x1
  4099b0:	str	x1, [x19, #176]
  4099b4:	add	x0, x0, #0x1
  4099b8:	b	4099c0 <wcrtomb@plt+0x6b40>
  4099bc:	sub	x0, x0, #0x1
  4099c0:	str	x0, [x19, #136]
  4099c4:	b	40997c <wcrtomb@plt+0x6afc>
  4099c8:	strb	wzr, [x19, #192]
  4099cc:	b	4099a8 <wcrtomb@plt+0x6b28>
  4099d0:	stp	x29, x30, [sp, #-64]!
  4099d4:	mov	x29, sp
  4099d8:	stp	x19, x20, [sp, #16]
  4099dc:	ldr	x2, [x0, #304]
  4099e0:	ldr	x20, [x0, #352]
  4099e4:	str	x21, [sp, #32]
  4099e8:	cmp	x2, x20
  4099ec:	b.le	409aa8 <wcrtomb@plt+0x6c28>
  4099f0:	mov	x19, x0
  4099f4:	ldr	x0, [x0, #368]
  4099f8:	cbz	x0, 409ab8 <wcrtomb@plt+0x6c38>
  4099fc:	sub	x0, x0, #0x10
  409a00:	add	x1, x20, #0x2
  409a04:	mov	x4, #0x8                   	// #8
  409a08:	mov	x3, #0xffffffffffffffff    	// #-1
  409a0c:	sub	x2, x2, x20
  409a10:	str	x1, [sp, #56]
  409a14:	add	x1, sp, #0x38
  409a18:	bl	409810 <wcrtomb@plt+0x6990>
  409a1c:	str	xzr, [x0, #8]
  409a20:	mov	x2, #0x8                   	// #8
  409a24:	ldr	x21, [sp, #56]
  409a28:	str	xzr, [x0], #16
  409a2c:	str	x0, [x19, #368]
  409a30:	sub	x21, x21, #0x2
  409a34:	ldr	x0, [x19, #376]
  409a38:	str	x21, [x19, #352]
  409a3c:	mov	x1, x21
  409a40:	bl	40fca8 <wcrtomb@plt+0xce28>
  409a44:	str	x0, [x19, #376]
  409a48:	ldr	x0, [x19, #384]
  409a4c:	mov	x1, x21
  409a50:	mov	x2, #0x1                   	// #1
  409a54:	bl	40fca8 <wcrtomb@plt+0xce28>
  409a58:	str	x0, [x19, #384]
  409a5c:	ldr	x0, [x19, #392]
  409a60:	mov	x1, x21
  409a64:	mov	x2, #0x8                   	// #8
  409a68:	bl	40fca8 <wcrtomb@plt+0xce28>
  409a6c:	str	x0, [x19, #392]
  409a70:	ldrb	w0, [x19, #1048]
  409a74:	cbz	w0, 409aa0 <wcrtomb@plt+0x6c20>
  409a78:	ldr	x0, [x19, #432]
  409a7c:	cbz	x0, 409a84 <wcrtomb@plt+0x6c04>
  409a80:	sub	x0, x0, #0x10
  409a84:	ldr	x1, [sp, #56]
  409a88:	mov	x2, #0x8                   	// #8
  409a8c:	bl	40fca8 <wcrtomb@plt+0xce28>
  409a90:	cbnz	x20, 409a98 <wcrtomb@plt+0x6c18>
  409a94:	stp	xzr, xzr, [x0]
  409a98:	add	x0, x0, #0x10
  409a9c:	str	x0, [x19, #432]
  409aa0:	cmp	x21, x20
  409aa4:	b.gt	409ac0 <wcrtomb@plt+0x6c40>
  409aa8:	ldp	x19, x20, [sp, #16]
  409aac:	ldr	x21, [sp, #32]
  409ab0:	ldp	x29, x30, [sp], #64
  409ab4:	ret
  409ab8:	mov	x1, #0x0                   	// #0
  409abc:	b	409a04 <wcrtomb@plt+0x6b84>
  409ac0:	ldr	x1, [x19, #368]
  409ac4:	lsl	x0, x20, #3
  409ac8:	str	xzr, [x1, x0]
  409acc:	ldr	x1, [x19, #376]
  409ad0:	str	xzr, [x1, x0]
  409ad4:	ldrb	w1, [x19, #1048]
  409ad8:	cbz	w1, 409ae4 <wcrtomb@plt+0x6c64>
  409adc:	ldr	x1, [x19, #432]
  409ae0:	str	xzr, [x1, x0]
  409ae4:	add	x20, x20, #0x1
  409ae8:	b	409aa0 <wcrtomb@plt+0x6c20>
  409aec:	stp	x29, x30, [sp, #-48]!
  409af0:	mov	x29, sp
  409af4:	stp	x19, x20, [sp, #16]
  409af8:	mov	w19, #0x0                   	// #0
  409afc:	str	x21, [sp, #32]
  409b00:	mov	x21, x1
  409b04:	bl	402940 <toupper@plt>
  409b08:	mov	w20, w0
  409b0c:	mov	w0, w19
  409b10:	bl	402940 <toupper@plt>
  409b14:	cmp	w20, w0
  409b18:	b.ne	409b28 <wcrtomb@plt+0x6ca8>  // b.any
  409b1c:	mov	x1, x21
  409b20:	mov	w0, w19
  409b24:	bl	4095b0 <wcrtomb@plt+0x6730>
  409b28:	add	w19, w19, #0x1
  409b2c:	cmp	w19, #0x100
  409b30:	b.ne	409b0c <wcrtomb@plt+0x6c8c>  // b.any
  409b34:	ldp	x19, x20, [sp, #16]
  409b38:	ldr	x21, [sp, #32]
  409b3c:	ldp	x29, x30, [sp], #48
  409b40:	ret
  409b44:	stp	x29, x30, [sp, #-96]!
  409b48:	mov	x29, sp
  409b4c:	stp	x21, x22, [sp, #32]
  409b50:	add	x22, sp, #0x50
  409b54:	add	x2, sp, #0x48
  409b58:	stp	x19, x20, [sp, #16]
  409b5c:	mov	x20, x0
  409b60:	mov	x0, x22
  409b64:	str	x23, [sp, #48]
  409b68:	str	xzr, [sp, #72]
  409b6c:	bl	402e80 <wcrtomb@plt>
  409b70:	cmn	x0, #0x1
  409b74:	b.eq	409bb8 <wcrtomb@plt+0x6d38>  // b.none
  409b78:	cmp	w0, #0x1
  409b7c:	ldrb	w1, [sp, #80]
  409b80:	mov	w2, #0x3                   	// #3
  409b84:	mov	w21, w0
  409b88:	csinc	w2, w2, wzr, eq  // eq = none
  409b8c:	sub	w23, w21, #0x1
  409b90:	mov	x19, #0x1                   	// #1
  409b94:	mov	x0, x20
  409b98:	bl	4098cc <wcrtomb@plt+0x6a4c>
  409b9c:	cmp	w21, w19
  409ba0:	b.gt	409bcc <wcrtomb@plt+0x6d4c>
  409ba4:	ldp	x19, x20, [sp, #16]
  409ba8:	ldp	x21, x22, [sp, #32]
  409bac:	ldr	x23, [sp, #48]
  409bb0:	ldp	x29, x30, [sp], #96
  409bb4:	ret
  409bb8:	mov	w21, #0x1                   	// #1
  409bbc:	mov	x1, #0x0                   	// #0
  409bc0:	mov	w2, #0x3                   	// #3
  409bc4:	strb	wzr, [sp, #80]
  409bc8:	b	409b8c <wcrtomb@plt+0x6d0c>
  409bcc:	cmp	w23, w19
  409bd0:	ldrb	w1, [x22, x19]
  409bd4:	cset	w2, eq  // eq = none
  409bd8:	mov	x0, x20
  409bdc:	add	x19, x19, #0x1
  409be0:	ubfiz	w2, w2, #1, #7
  409be4:	bl	4098cc <wcrtomb@plt+0x6a4c>
  409be8:	mov	x0, x20
  409bec:	mov	x1, #0x105                 	// #261
  409bf0:	bl	409bf8 <wcrtomb@plt+0x6d78>
  409bf4:	b	409b9c <wcrtomb@plt+0x6d1c>
  409bf8:	stp	x29, x30, [sp, #-48]!
  409bfc:	mov	x29, sp
  409c00:	stp	x19, x20, [sp, #16]
  409c04:	mov	x19, x0
  409c08:	stp	x21, x22, [sp, #32]
  409c0c:	ldrb	w22, [x19, #1048]
  409c10:	cbz	w22, 409c1c <wcrtomb@plt+0x6d9c>
  409c14:	cmp	x1, #0x113
  409c18:	b.eq	409c9c <wcrtomb@plt+0x6e1c>  // b.none
  409c1c:	mov	x0, x19
  409c20:	mov	w2, #0x3                   	// #3
  409c24:	ldp	x19, x20, [sp, #16]
  409c28:	ldp	x21, x22, [sp, #32]
  409c2c:	ldp	x29, x30, [sp], #48
  409c30:	b	4098cc <wcrtomb@plt+0x6a4c>
  409c34:	ldr	x0, [x19, #96]
  409c38:	ldr	w1, [x0, x20, lsl #2]
  409c3c:	mov	x0, x19
  409c40:	bl	409b44 <wcrtomb@plt+0x6cc4>
  409c44:	cbz	w21, 409c54 <wcrtomb@plt+0x6dd4>
  409c48:	mov	x0, x19
  409c4c:	mov	x1, #0x106                 	// #262
  409c50:	bl	409bf8 <wcrtomb@plt+0x6d78>
  409c54:	add	x20, x20, #0x1
  409c58:	mov	w21, w22
  409c5c:	ldr	x0, [x19, #104]
  409c60:	cmp	x0, x20
  409c64:	b.gt	409c34 <wcrtomb@plt+0x6db4>
  409c68:	ldr	x1, [x19, #80]
  409c6c:	str	xzr, [x19, #104]
  409c70:	cmn	x1, #0x1
  409c74:	b.eq	409c8c <wcrtomb@plt+0x6e0c>  // b.none
  409c78:	add	x1, x1, #0x114
  409c7c:	mov	x0, x19
  409c80:	bl	409bf8 <wcrtomb@plt+0x6d78>
  409c84:	mov	x1, #0x106                 	// #262
  409c88:	cbnz	w21, 409c0c <wcrtomb@plt+0x6d8c>
  409c8c:	ldp	x19, x20, [sp, #16]
  409c90:	ldp	x21, x22, [sp, #32]
  409c94:	ldp	x29, x30, [sp], #48
  409c98:	ret
  409c9c:	mov	x20, #0x0                   	// #0
  409ca0:	mov	w21, #0x0                   	// #0
  409ca4:	b	409c5c <wcrtomb@plt+0x6ddc>
  409ca8:	stp	x29, x30, [sp, #-48]!
  409cac:	mov	x29, sp
  409cb0:	stp	x21, x22, [sp, #32]
  409cb4:	mov	x21, x0
  409cb8:	mov	w22, w2
  409cbc:	stp	x19, x20, [sp, #16]
  409cc0:	mov	x20, x1
  409cc4:	mov	x19, x3
  409cc8:	ldr	x1, [x21, #8]
  409ccc:	ldr	x0, [x3, #16]
  409cd0:	sub	x0, x0, x1
  409cd4:	ldr	x1, [x20, #8]
  409cd8:	cmp	x0, x1
  409cdc:	b.ge	409d0c <wcrtomb@plt+0x6e8c>  // b.tcont
  409ce0:	ldr	x0, [x3]
  409ce4:	bl	402c20 <free@plt>
  409ce8:	mov	x1, x19
  409cec:	mov	x4, #0x10                  	// #16
  409cf0:	ldr	x2, [x20, #8]
  409cf4:	mov	x3, #0xffffffffffffffff    	// #-1
  409cf8:	ldr	x0, [x21, #8]
  409cfc:	str	x0, [x1, #16]!
  409d00:	mov	x0, #0x0                   	// #0
  409d04:	bl	409810 <wcrtomb@plt+0x6990>
  409d08:	str	x0, [x19]
  409d0c:	mov	x3, #0x0                   	// #0
  409d10:	mov	x2, #0x0                   	// #0
  409d14:	str	xzr, [x19, #8]
  409d18:	ldr	x1, [x21, #8]
  409d1c:	ldr	x0, [x20, #8]
  409d20:	cmp	x1, x2
  409d24:	b.gt	409d40 <wcrtomb@plt+0x6ec0>
  409d28:	cmp	x3, x0
  409d2c:	b.lt	409db8 <wcrtomb@plt+0x6f38>  // b.tstop
  409d30:	ldp	x19, x20, [sp, #16]
  409d34:	ldp	x21, x22, [sp, #32]
  409d38:	ldp	x29, x30, [sp], #48
  409d3c:	ret
  409d40:	cmp	x3, x0
  409d44:	lsl	x4, x2, #4
  409d48:	ldr	x5, [x21]
  409d4c:	b.ge	409db0 <wcrtomb@plt+0x6f30>  // b.tcont
  409d50:	ldr	x1, [x20]
  409d54:	lsl	x0, x3, #4
  409d58:	ldr	x7, [x5, x4]
  409d5c:	ldr	x0, [x1, x0]
  409d60:	add	x6, x1, x3, lsl #4
  409d64:	cmp	x7, x0
  409d68:	b.gt	409db8 <wcrtomb@plt+0x6f38>
  409d6c:	b.ne	409db0 <wcrtomb@plt+0x6f30>  // b.any
  409d70:	ldr	w0, [x6, #8]
  409d74:	add	x3, x3, #0x1
  409d78:	and	w0, w22, w0
  409d7c:	ldp	x6, x1, [x19]
  409d80:	add	x8, x5, x4
  409d84:	ldr	x4, [x5, x4]
  409d88:	add	x2, x2, #0x1
  409d8c:	lsl	x9, x1, #4
  409d90:	add	x7, x6, x1, lsl #4
  409d94:	add	x1, x1, #0x1
  409d98:	str	x4, [x6, x9]
  409d9c:	ldr	w4, [x8, #8]
  409da0:	str	x1, [x19, #8]
  409da4:	orr	w0, w4, w0
  409da8:	str	w0, [x7, #8]
  409dac:	b	409d18 <wcrtomb@plt+0x6e98>
  409db0:	mov	w0, #0x0                   	// #0
  409db4:	b	409d7c <wcrtomb@plt+0x6efc>
  409db8:	ldr	x5, [x20]
  409dbc:	lsl	x8, x3, #4
  409dc0:	add	x0, x5, x3, lsl #4
  409dc4:	ldr	w0, [x0, #8]
  409dc8:	ands	w1, w22, w0
  409dcc:	b.eq	409df0 <wcrtomb@plt+0x6f70>  // b.none
  409dd0:	ldp	x4, x0, [x19]
  409dd4:	ldr	x5, [x5, x8]
  409dd8:	lsl	x7, x0, #4
  409ddc:	add	x6, x4, x0, lsl #4
  409de0:	add	x0, x0, #0x1
  409de4:	str	x5, [x4, x7]
  409de8:	str	x0, [x19, #8]
  409dec:	str	w1, [x6, #8]
  409df0:	add	x3, x3, #0x1
  409df4:	b	409d18 <wcrtomb@plt+0x6e98>
  409df8:	stp	x29, x30, [sp, #-32]!
  409dfc:	mov	x29, sp
  409e00:	str	x19, [sp, #16]
  409e04:	mov	x19, x0
  409e08:	ldr	x0, [x19]
  409e0c:	cbnz	x0, 409e1c <wcrtomb@plt+0x6f9c>
  409e10:	ldr	x19, [sp, #16]
  409e14:	ldp	x29, x30, [sp], #32
  409e18:	ret
  409e1c:	add	x19, x19, #0x8
  409e20:	bl	402c20 <free@plt>
  409e24:	b	409e08 <wcrtomb@plt+0x6f88>
  409e28:	stp	x29, x30, [sp, #-32]!
  409e2c:	mov	x29, sp
  409e30:	str	x19, [sp, #16]
  409e34:	mov	x19, x0
  409e38:	ldr	x0, [x0]
  409e3c:	bl	409df8 <wcrtomb@plt+0x6f78>
  409e40:	ldr	x0, [x19]
  409e44:	bl	402c20 <free@plt>
  409e48:	ldr	x0, [x19, #8]
  409e4c:	bl	402c20 <free@plt>
  409e50:	ldr	x0, [x19, #16]
  409e54:	bl	402c20 <free@plt>
  409e58:	ldr	x0, [x19, #24]
  409e5c:	bl	402c20 <free@plt>
  409e60:	mov	x0, x19
  409e64:	ldr	x19, [sp, #16]
  409e68:	ldp	x29, x30, [sp], #32
  409e6c:	b	402c20 <free@plt>
  409e70:	stp	x29, x30, [sp, #-48]!
  409e74:	mov	x29, sp
  409e78:	stp	x19, x20, [sp, #16]
  409e7c:	mov	x19, x0
  409e80:	mov	x0, x1
  409e84:	stp	x21, x22, [sp, #32]
  409e88:	mov	x22, x1
  409e8c:	bl	402790 <strlen@plt>
  409e90:	cbz	x0, 409ec8 <wcrtomb@plt+0x7048>
  409e94:	mov	x20, x0
  409e98:	mov	x0, x19
  409e9c:	bl	402790 <strlen@plt>
  409ea0:	add	x1, x0, x20
  409ea4:	mov	x21, x0
  409ea8:	add	x1, x1, #0x1
  409eac:	mov	x0, x19
  409eb0:	bl	40fc64 <wcrtomb@plt+0xcde4>
  409eb4:	add	x2, x20, #0x1
  409eb8:	mov	x19, x0
  409ebc:	mov	x1, x22
  409ec0:	add	x0, x0, x21
  409ec4:	bl	402750 <memcpy@plt>
  409ec8:	mov	x0, x19
  409ecc:	ldp	x19, x20, [sp, #16]
  409ed0:	ldp	x21, x22, [sp, #32]
  409ed4:	ldp	x29, x30, [sp], #48
  409ed8:	ret
  409edc:	stp	x29, x30, [sp, #-32]!
  409ee0:	mov	x29, sp
  409ee4:	stp	x19, x20, [sp, #16]
  409ee8:	mov	x20, x0
  409eec:	mov	x19, x1
  409ef0:	ldr	x0, [x0, #8]
  409ef4:	ldr	x1, [x1, #16]
  409ef8:	cmp	x1, x0
  409efc:	b.ge	409f2c <wcrtomb@plt+0x70ac>  // b.tcont
  409f00:	ldr	x0, [x19]
  409f04:	bl	402c20 <free@plt>
  409f08:	mov	x1, x19
  409f0c:	mov	x4, #0x10                  	// #16
  409f10:	ldr	x2, [x20, #8]
  409f14:	mov	x3, #0xffffffffffffffff    	// #-1
  409f18:	ldr	x0, [x1, #16]!
  409f1c:	sub	x2, x2, x0
  409f20:	mov	x0, #0x0                   	// #0
  409f24:	bl	409810 <wcrtomb@plt+0x6990>
  409f28:	str	x0, [x19]
  409f2c:	ldr	x2, [x20, #8]
  409f30:	str	x2, [x19, #8]
  409f34:	cbz	x2, 409f50 <wcrtomb@plt+0x70d0>
  409f38:	ldr	x0, [x19]
  409f3c:	lsl	x2, x2, #4
  409f40:	ldr	x1, [x20]
  409f44:	ldp	x19, x20, [sp, #16]
  409f48:	ldp	x29, x30, [sp], #32
  409f4c:	b	402750 <memcpy@plt>
  409f50:	ldp	x19, x20, [sp, #16]
  409f54:	ldp	x29, x30, [sp], #32
  409f58:	ret
  409f5c:	stp	x29, x30, [sp, #-48]!
  409f60:	mov	x29, sp
  409f64:	stp	x19, x20, [sp, #16]
  409f68:	mov	x20, x1
  409f6c:	str	x21, [sp, #32]
  409f70:	mov	x21, x0
  409f74:	mov	x0, #0x30                  	// #48
  409f78:	bl	40fc04 <wcrtomb@plt+0xcd84>
  409f7c:	mov	x19, x0
  409f80:	mov	x0, #0x8                   	// #8
  409f84:	bl	40fd78 <wcrtomb@plt+0xcef8>
  409f88:	str	x0, [x19]
  409f8c:	mov	x0, x20
  409f90:	bl	40fd78 <wcrtomb@plt+0xcef8>
  409f94:	str	x0, [x19, #8]
  409f98:	mov	x0, x20
  409f9c:	bl	40fd78 <wcrtomb@plt+0xcef8>
  409fa0:	str	x0, [x19, #16]
  409fa4:	mov	x0, x20
  409fa8:	bl	40fd78 <wcrtomb@plt+0xcef8>
  409fac:	str	x0, [x19, #24]
  409fb0:	mov	x0, x19
  409fb4:	strh	wzr, [x19, #32]
  409fb8:	str	x21, [x19, #40]
  409fbc:	ldp	x19, x20, [sp, #16]
  409fc0:	ldr	x21, [sp, #32]
  409fc4:	ldp	x29, x30, [sp], #48
  409fc8:	ret
  409fcc:	stp	x29, x30, [sp, #-64]!
  409fd0:	mov	x29, sp
  409fd4:	stp	x19, x20, [sp, #16]
  409fd8:	mov	x20, x2
  409fdc:	mov	x19, x0
  409fe0:	add	x0, x2, #0x1
  409fe4:	stp	x21, x22, [sp, #32]
  409fe8:	mov	x21, x1
  409fec:	stp	x23, x24, [sp, #48]
  409ff0:	bl	40fc04 <wcrtomb@plt+0xcd84>
  409ff4:	mov	x2, x20
  409ff8:	mov	x1, x21
  409ffc:	bl	402750 <memcpy@plt>
  40a000:	mov	x21, x0
  40a004:	strb	wzr, [x0, x20]
  40a008:	mov	x20, #0x0                   	// #0
  40a00c:	ldr	x0, [x19, x20, lsl #3]
  40a010:	cbnz	x0, 40a04c <wcrtomb@plt+0x71cc>
  40a014:	mov	x22, #0x0                   	// #0
  40a018:	ldr	x23, [x19, x22, lsl #3]
  40a01c:	add	x24, x19, x22, lsl #3
  40a020:	cbnz	x23, 40a080 <wcrtomb@plt+0x7200>
  40a024:	add	x1, x20, #0x2
  40a028:	lsl	x20, x20, #3
  40a02c:	mov	x0, x19
  40a030:	mov	x2, #0x8                   	// #8
  40a034:	bl	40fca8 <wcrtomb@plt+0xce28>
  40a038:	mov	x19, x0
  40a03c:	str	x21, [x0, x20]
  40a040:	add	x20, x0, x20
  40a044:	str	xzr, [x20, #8]
  40a048:	b	40a060 <wcrtomb@plt+0x71e0>
  40a04c:	mov	x1, x21
  40a050:	bl	402d50 <strstr@plt>
  40a054:	cbz	x0, 40a078 <wcrtomb@plt+0x71f8>
  40a058:	mov	x0, x21
  40a05c:	bl	402c20 <free@plt>
  40a060:	mov	x0, x19
  40a064:	ldp	x19, x20, [sp, #16]
  40a068:	ldp	x21, x22, [sp, #32]
  40a06c:	ldp	x23, x24, [sp, #48]
  40a070:	ldp	x29, x30, [sp], #64
  40a074:	ret
  40a078:	add	x20, x20, #0x1
  40a07c:	b	40a00c <wcrtomb@plt+0x718c>
  40a080:	mov	x1, x23
  40a084:	mov	x0, x21
  40a088:	bl	402d50 <strstr@plt>
  40a08c:	cbnz	x0, 40a098 <wcrtomb@plt+0x7218>
  40a090:	add	x22, x22, #0x1
  40a094:	b	40a018 <wcrtomb@plt+0x7198>
  40a098:	sub	x20, x20, #0x1
  40a09c:	mov	x0, x23
  40a0a0:	bl	402c20 <free@plt>
  40a0a4:	lsl	x0, x20, #3
  40a0a8:	cmp	x22, x20
  40a0ac:	b.eq	40a024 <wcrtomb@plt+0x71a4>  // b.none
  40a0b0:	ldr	x1, [x19, x0]
  40a0b4:	str	x1, [x24]
  40a0b8:	str	xzr, [x19, x0]
  40a0bc:	b	40a018 <wcrtomb@plt+0x7198>
  40a0c0:	stp	x29, x30, [sp, #-48]!
  40a0c4:	mov	x29, sp
  40a0c8:	stp	x19, x20, [sp, #16]
  40a0cc:	mov	x20, x1
  40a0d0:	mov	x19, x0
  40a0d4:	str	x21, [sp, #32]
  40a0d8:	ldr	x21, [x20]
  40a0dc:	cbnz	x21, 40a0f4 <wcrtomb@plt+0x7274>
  40a0e0:	mov	x0, x19
  40a0e4:	ldp	x19, x20, [sp, #16]
  40a0e8:	ldr	x21, [sp, #32]
  40a0ec:	ldp	x29, x30, [sp], #48
  40a0f0:	ret
  40a0f4:	mov	x0, x21
  40a0f8:	bl	402790 <strlen@plt>
  40a0fc:	mov	x1, x21
  40a100:	mov	x2, x0
  40a104:	add	x20, x20, #0x8
  40a108:	mov	x0, x19
  40a10c:	bl	409fcc <wcrtomb@plt+0x714c>
  40a110:	mov	x19, x0
  40a114:	b	40a0d8 <wcrtomb@plt+0x7258>
  40a118:	ldr	x4, [x1, #8]
  40a11c:	mov	x3, x0
  40a120:	mov	x2, #0x0                   	// #0
  40a124:	mov	w0, #0x0                   	// #0
  40a128:	cmp	x2, x4
  40a12c:	b.lt	40a134 <wcrtomb@plt+0x72b4>  // b.tstop
  40a130:	ret
  40a134:	ldr	x6, [x1]
  40a138:	lsl	x5, x2, #4
  40a13c:	add	x2, x2, #0x1
  40a140:	ldr	x6, [x6, x5]
  40a144:	ldr	x5, [x3]
  40a148:	ldr	w5, [x5, x6, lsl #2]
  40a14c:	orr	w0, w0, w5
  40a150:	b	40a128 <wcrtomb@plt+0x72a8>
  40a154:	ldr	x1, [x0, #40]
  40a158:	cbnz	x1, 40a17c <wcrtomb@plt+0x72fc>
  40a15c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40a160:	add	x1, x1, #0x591
  40a164:	stp	x29, x30, [sp, #-16]!
  40a168:	mov	w2, #0x5                   	// #5
  40a16c:	mov	x0, #0x0                   	// #0
  40a170:	mov	x29, sp
  40a174:	bl	402d60 <dcgettext@plt>
  40a178:	bl	4080d4 <wcrtomb@plt+0x5254>
  40a17c:	b	4097b4 <wcrtomb@plt+0x6934>
  40a180:	mov	x5, x1
  40a184:	mov	x1, x2
  40a188:	ldr	x2, [x2]
  40a18c:	cmp	x2, x5
  40a190:	b.gt	40a19c <wcrtomb@plt+0x731c>
  40a194:	mov	x2, #0x1                   	// #1
  40a198:	b	409810 <wcrtomb@plt+0x6990>
  40a19c:	ret
  40a1a0:	stp	x29, x30, [sp, #-48]!
  40a1a4:	mov	x29, sp
  40a1a8:	stp	x19, x20, [sp, #16]
  40a1ac:	mov	x19, x0
  40a1b0:	mov	x20, #0x0                   	// #0
  40a1b4:	stp	x21, x22, [sp, #32]
  40a1b8:	mov	x21, x1
  40a1bc:	ldr	x1, [x0, #8]
  40a1c0:	ldr	x0, [x0]
  40a1c4:	lsl	x22, x20, #5
  40a1c8:	cmp	x1, x20
  40a1cc:	b.gt	40a210 <wcrtomb@plt+0x7390>
  40a1d0:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40a1d4:	add	x2, x19, #0x10
  40a1d8:	mov	x4, #0x20                  	// #32
  40a1dc:	movk	x3, #0x7fff, lsl #48
  40a1e0:	bl	40a180 <wcrtomb@plt+0x7300>
  40a1e4:	ldr	x1, [x19, #8]
  40a1e8:	ld1	{v0.16b, v1.16b}, [x21]
  40a1ec:	add	x1, x1, #0x1
  40a1f0:	stp	x0, x1, [x19]
  40a1f4:	add	x0, x0, x22
  40a1f8:	st1	{v0.16b, v1.16b}, [x0]
  40a1fc:	mov	x0, x20
  40a200:	ldp	x19, x20, [sp, #16]
  40a204:	ldp	x21, x22, [sp, #32]
  40a208:	ldp	x29, x30, [sp], #48
  40a20c:	ret
  40a210:	add	x22, x0, x22
  40a214:	mov	x2, #0x0                   	// #0
  40a218:	mov	x3, #0x0                   	// #0
  40a21c:	ldr	x4, [x21, x2]
  40a220:	ldr	x5, [x22, x2]
  40a224:	add	x2, x2, #0x8
  40a228:	cmp	x2, #0x20
  40a22c:	eor	x4, x4, x5
  40a230:	orr	x3, x3, x4
  40a234:	b.ne	40a21c <wcrtomb@plt+0x739c>  // b.any
  40a238:	cbz	x3, 40a1fc <wcrtomb@plt+0x737c>
  40a23c:	add	x20, x20, #0x1
  40a240:	b	40a1c4 <wcrtomb@plt+0x7344>
  40a244:	stp	x29, x30, [sp, #-64]!
  40a248:	mov	x29, sp
  40a24c:	stp	x21, x22, [sp, #32]
  40a250:	mov	x22, x1
  40a254:	ldr	x21, [x2, #8]
  40a258:	str	x23, [sp, #48]
  40a25c:	mov	x23, x0
  40a260:	stp	x19, x20, [sp, #16]
  40a264:	mov	x1, x21
  40a268:	ldr	x0, [x2]
  40a26c:	mov	x19, x2
  40a270:	mov	x20, #0x0                   	// #0
  40a274:	cmp	x20, x1
  40a278:	b.lt	40a2c4 <wcrtomb@plt+0x7444>  // b.tstop
  40a27c:	mov	x1, x21
  40a280:	mov	x4, #0x10                  	// #16
  40a284:	mov	x3, #0xffffffffffffffff    	// #-1
  40a288:	add	x2, x19, x4
  40a28c:	bl	40a180 <wcrtomb@plt+0x7300>
  40a290:	add	x1, x0, x21, lsl #4
  40a294:	str	x0, [x19]
  40a298:	sub	x1, x1, #0x10
  40a29c:	cmp	x20, x21
  40a2a0:	b.lt	40a314 <wcrtomb@plt+0x7494>  // b.tstop
  40a2a4:	lsl	x1, x20, #4
  40a2a8:	add	x20, x0, x20, lsl #4
  40a2ac:	str	x23, [x0, x1]
  40a2b0:	ldr	x0, [x19, #8]
  40a2b4:	str	x22, [x20, #8]
  40a2b8:	add	x0, x0, #0x1
  40a2bc:	str	x0, [x19, #8]
  40a2c0:	b	40a300 <wcrtomb@plt+0x7480>
  40a2c4:	add	x2, x20, x1
  40a2c8:	asr	x2, x2, #1
  40a2cc:	lsl	x4, x2, #4
  40a2d0:	add	x3, x0, x2, lsl #4
  40a2d4:	ldr	x4, [x0, x4]
  40a2d8:	cmp	x4, x23
  40a2dc:	b.ge	40a2f0 <wcrtomb@plt+0x7470>  // b.tcont
  40a2e0:	add	x20, x2, #0x1
  40a2e4:	mov	x2, x1
  40a2e8:	mov	x1, x2
  40a2ec:	b	40a274 <wcrtomb@plt+0x73f4>
  40a2f0:	b.ne	40a2e8 <wcrtomb@plt+0x7468>  // b.any
  40a2f4:	ldr	w1, [x3, #8]
  40a2f8:	orr	w22, w1, w22
  40a2fc:	str	w22, [x3, #8]
  40a300:	ldp	x19, x20, [sp, #16]
  40a304:	ldp	x21, x22, [sp, #32]
  40a308:	ldr	x23, [sp, #48]
  40a30c:	ldp	x29, x30, [sp], #64
  40a310:	ret
  40a314:	ldp	x2, x3, [x1]
  40a318:	sub	x21, x21, #0x1
  40a31c:	stp	x2, x3, [x1, #16]
  40a320:	b	40a298 <wcrtomb@plt+0x7418>
  40a324:	stp	x29, x30, [sp, #-48]!
  40a328:	mov	x4, #0x10                  	// #16
  40a32c:	mov	x3, #0xffffffffffffffff    	// #-1
  40a330:	mov	x29, sp
  40a334:	stp	x19, x20, [sp, #16]
  40a338:	mov	x19, x2
  40a33c:	mov	x20, x1
  40a340:	add	x2, x2, x4
  40a344:	ldr	x1, [x19, #8]
  40a348:	str	x21, [sp, #32]
  40a34c:	mov	x21, x0
  40a350:	ldr	x0, [x19]
  40a354:	bl	40a180 <wcrtomb@plt+0x7300>
  40a358:	ldr	x2, [x19, #8]
  40a35c:	add	x1, x2, #0x1
  40a360:	stp	x0, x1, [x19]
  40a364:	add	x2, x0, x2, lsl #4
  40a368:	stp	x21, x20, [x2]
  40a36c:	ldp	x19, x20, [sp, #16]
  40a370:	ldr	x21, [sp, #32]
  40a374:	ldp	x29, x30, [sp], #48
  40a378:	ret
  40a37c:	stp	x29, x30, [sp, #-80]!
  40a380:	mov	x29, sp
  40a384:	ldr	x6, [x1, #8]
  40a388:	stp	x19, x20, [sp, #16]
  40a38c:	mov	x20, x1
  40a390:	stp	x23, x24, [sp, #48]
  40a394:	mov	w24, w2
  40a398:	mov	x19, x0
  40a39c:	mov	x0, #0x0                   	// #0
  40a3a0:	stp	x21, x22, [sp, #32]
  40a3a4:	stp	x25, x26, [sp, #64]
  40a3a8:	mov	x25, #0x0                   	// #0
  40a3ac:	cmp	x6, x0
  40a3b0:	b.gt	40a470 <wcrtomb@plt+0x75f0>
  40a3b4:	ldp	x7, x10, [x19, #296]
  40a3b8:	mov	x22, #0x0                   	// #0
  40a3bc:	mov	x5, #0x50                  	// #80
  40a3c0:	mul	x21, x22, x5
  40a3c4:	cmp	x10, x22
  40a3c8:	b.gt	40a494 <wcrtomb@plt+0x7614>
  40a3cc:	mov	x5, #0x0                   	// #0
  40a3d0:	mov	x26, #0x0                   	// #0
  40a3d4:	mov	w23, #0x0                   	// #0
  40a3d8:	mov	w11, #0x1ff                 	// #511
  40a3dc:	cmp	x6, x5
  40a3e0:	b.gt	40a510 <wcrtomb@plt+0x7690>
  40a3e4:	mov	x1, x10
  40a3e8:	mov	x0, x7
  40a3ec:	mov	x4, #0x50                  	// #80
  40a3f0:	mov	x3, #0xffffffffffffffff    	// #-1
  40a3f4:	add	x2, x19, #0x138
  40a3f8:	bl	40a180 <wcrtomb@plt+0x7300>
  40a3fc:	ldr	x1, [x20, #8]
  40a400:	add	x2, x0, x21
  40a404:	str	x0, [x19, #296]
  40a408:	str	x25, [x0, x21]
  40a40c:	add	x0, x2, #0x8
  40a410:	bl	409650 <wcrtomb@plt+0x67d0>
  40a414:	ldr	x1, [x19, #296]
  40a418:	mov	x0, x20
  40a41c:	add	x1, x1, x21
  40a420:	add	x1, x1, #0x8
  40a424:	bl	409edc <wcrtomb@plt+0x705c>
  40a428:	ldr	x0, [x19, #296]
  40a42c:	mov	x1, #0xffffffffffffffff    	// #-1
  40a430:	add	x0, x0, x21
  40a434:	strb	w24, [x0, #32]
  40a438:	strh	w23, [x0, #34]
  40a43c:	stp	x26, xzr, [x0, #40]
  40a440:	str	xzr, [x0, #56]
  40a444:	str	x1, [x0, #72]
  40a448:	ldr	x0, [x19, #304]
  40a44c:	add	x0, x0, #0x1
  40a450:	str	x0, [x19, #304]
  40a454:	mov	x0, x22
  40a458:	ldp	x19, x20, [sp, #16]
  40a45c:	ldp	x21, x22, [sp, #32]
  40a460:	ldp	x23, x24, [sp, #48]
  40a464:	ldp	x25, x26, [sp, #64]
  40a468:	ldp	x29, x30, [sp], #80
  40a46c:	ret
  40a470:	ldr	x2, [x20]
  40a474:	lsl	x3, x0, #4
  40a478:	add	x1, x2, x0, lsl #4
  40a47c:	add	x0, x0, #0x1
  40a480:	ldr	x2, [x2, x3]
  40a484:	ldr	w1, [x1, #8]
  40a488:	add	x1, x1, x2
  40a48c:	eor	x25, x25, x1
  40a490:	b	40a3ac <wcrtomb@plt+0x752c>
  40a494:	ldr	x0, [x7, x21]
  40a498:	add	x1, x7, x21
  40a49c:	cmp	x0, x25
  40a4a0:	b.ne	40a4cc <wcrtomb@plt+0x764c>  // b.any
  40a4a4:	ldr	x0, [x1, #16]
  40a4a8:	cmp	x6, x0
  40a4ac:	b.ne	40a4cc <wcrtomb@plt+0x764c>  // b.any
  40a4b0:	ldrb	w0, [x1, #32]
  40a4b4:	cmp	w0, w24
  40a4b8:	b.ne	40a4cc <wcrtomb@plt+0x764c>  // b.any
  40a4bc:	mov	x0, #0x0                   	// #0
  40a4c0:	cmp	x6, x0
  40a4c4:	b.gt	40a4d4 <wcrtomb@plt+0x7654>
  40a4c8:	b.eq	40a454 <wcrtomb@plt+0x75d4>  // b.none
  40a4cc:	add	x22, x22, #0x1
  40a4d0:	b	40a3c0 <wcrtomb@plt+0x7540>
  40a4d4:	ldr	x4, [x20]
  40a4d8:	lsl	x2, x0, #4
  40a4dc:	ldr	x3, [x1, #8]
  40a4e0:	add	x9, x4, x0, lsl #4
  40a4e4:	add	x8, x3, x0, lsl #4
  40a4e8:	ldr	w9, [x9, #8]
  40a4ec:	ldr	w8, [x8, #8]
  40a4f0:	cmp	w9, w8
  40a4f4:	b.ne	40a4cc <wcrtomb@plt+0x764c>  // b.any
  40a4f8:	ldr	x4, [x4, x2]
  40a4fc:	ldr	x2, [x3, x2]
  40a500:	cmp	x4, x2
  40a504:	b.ne	40a4cc <wcrtomb@plt+0x764c>  // b.any
  40a508:	add	x0, x0, #0x1
  40a50c:	b	40a4c0 <wcrtomb@plt+0x7640>
  40a510:	ldr	x1, [x20]
  40a514:	lsl	x0, x5, #4
  40a518:	ldr	x8, [x1, x0]
  40a51c:	ldr	x0, [x19, #336]
  40a520:	ldr	w9, [x0, x8, lsl #2]
  40a524:	cbz	w9, 40a558 <wcrtomb@plt+0x76d8>
  40a528:	mov	w1, w24
  40a52c:	mov	w0, w9
  40a530:	mov	w2, #0x7                   	// #7
  40a534:	bl	409578 <wcrtomb@plt+0x66f8>
  40a538:	tst	w0, #0xff
  40a53c:	b.eq	40a544 <wcrtomb@plt+0x76c4>  // b.none
  40a540:	orr	w23, w23, w9
  40a544:	cbnz	x26, 40a550 <wcrtomb@plt+0x76d0>
  40a548:	ldr	x0, [x19, #144]
  40a54c:	ldr	x26, [x0, x8, lsl #3]
  40a550:	add	x5, x5, #0x1
  40a554:	b	40a3dc <wcrtomb@plt+0x755c>
  40a558:	ldr	x0, [x19, #144]
  40a55c:	ldr	x0, [x0, x8, lsl #3]
  40a560:	cmp	x0, #0x112
  40a564:	csel	w23, w23, w11, ne  // ne = any
  40a568:	b	40a550 <wcrtomb@plt+0x76d0>
  40a56c:	stp	x29, x30, [sp, #-48]!
  40a570:	mov	x29, sp
  40a574:	stp	x19, x20, [sp, #16]
  40a578:	mov	x20, x0
  40a57c:	ldrb	w0, [x0, #1048]
  40a580:	stp	x21, x22, [sp, #32]
  40a584:	mov	x19, x1
  40a588:	mov	x22, x2
  40a58c:	cbnz	w0, 40a5c0 <wcrtomb@plt+0x7740>
  40a590:	lsl	x19, x1, #3
  40a594:	mov	x21, #0x0                   	// #0
  40a598:	cmp	x21, x22
  40a59c:	b.ge	40a5d0 <wcrtomb@plt+0x7750>  // b.tcont
  40a5a0:	ldr	x0, [x20, #144]
  40a5a4:	mov	w2, #0x3                   	// #3
  40a5a8:	add	x21, x21, #0x1
  40a5ac:	ldr	x1, [x0, x19]
  40a5b0:	mov	x0, x20
  40a5b4:	add	x19, x19, #0x8
  40a5b8:	bl	4098cc <wcrtomb@plt+0x6a4c>
  40a5bc:	b	40a598 <wcrtomb@plt+0x7718>
  40a5c0:	mov	x21, x1
  40a5c4:	sub	x0, x21, x19
  40a5c8:	cmp	x0, x22
  40a5cc:	b.lt	40a5e0 <wcrtomb@plt+0x7760>  // b.tstop
  40a5d0:	ldp	x19, x20, [sp, #16]
  40a5d4:	ldp	x21, x22, [sp, #32]
  40a5d8:	ldp	x29, x30, [sp], #48
  40a5dc:	ret
  40a5e0:	ldr	x0, [x20, #144]
  40a5e4:	ldr	x1, [x20, #280]
  40a5e8:	ldrb	w2, [x1, x21]
  40a5ec:	ldr	x1, [x0, x21, lsl #3]
  40a5f0:	mov	x0, x20
  40a5f4:	add	x21, x21, #0x1
  40a5f8:	bl	4098cc <wcrtomb@plt+0x6a4c>
  40a5fc:	b	40a5c4 <wcrtomb@plt+0x7744>
  40a600:	stp	x29, x30, [sp, #-32]!
  40a604:	mov	x29, sp
  40a608:	stp	x19, x20, [sp, #16]
  40a60c:	mov	x19, x0
  40a610:	ldr	x0, [x0, #280]
  40a614:	bl	402c20 <free@plt>
  40a618:	ldr	x0, [x19, #96]
  40a61c:	bl	402c20 <free@plt>
  40a620:	ldr	x0, [x19, #408]
  40a624:	bl	402c20 <free@plt>
  40a628:	ldr	x0, [x19, #432]
  40a62c:	cbnz	x0, 40a668 <wcrtomb@plt+0x77e8>
  40a630:	ldp	x19, x20, [sp, #16]
  40a634:	ldp	x29, x30, [sp], #32
  40a638:	ret
  40a63c:	ldr	x0, [x0, x20, lsl #3]
  40a640:	add	x20, x20, #0x1
  40a644:	bl	402c20 <free@plt>
  40a648:	ldr	x1, [x19, #352]
  40a64c:	ldr	x0, [x19, #432]
  40a650:	cmp	x20, x1
  40a654:	b.lt	40a63c <wcrtomb@plt+0x77bc>  // b.tstop
  40a658:	ldp	x19, x20, [sp, #16]
  40a65c:	sub	x0, x0, #0x10
  40a660:	ldp	x29, x30, [sp], #32
  40a664:	b	402c20 <free@plt>
  40a668:	mov	x20, #0xffffffffffffffff    	// #-1
  40a66c:	b	40a648 <wcrtomb@plt+0x77c8>
  40a670:	stp	x29, x30, [sp, #-256]!
  40a674:	mov	x29, sp
  40a678:	stp	x19, x20, [sp, #16]
  40a67c:	mov	x19, x0
  40a680:	and	w20, w1, #0xff
  40a684:	ldr	x0, [x0, #176]
  40a688:	mov	x1, #0x20                  	// #32
  40a68c:	stp	x21, x22, [sp, #32]
  40a690:	stp	x23, x24, [sp, #48]
  40a694:	stp	x25, x26, [sp, #64]
  40a698:	adrp	x26, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40a69c:	mov	x25, #0x0                   	// #0
  40a6a0:	stp	x27, x28, [sp, #80]
  40a6a4:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40a6a8:	mov	x21, x0
  40a6ac:	ldr	x23, [x19, #176]
  40a6b0:	mov	x24, x0
  40a6b4:	mov	x1, #0x18                  	// #24
  40a6b8:	mov	x27, #0x1                   	// #1
  40a6bc:	add	x23, x0, x23, lsl #4
  40a6c0:	ldr	x0, [x19, #168]
  40a6c4:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40a6c8:	str	x0, [sp, #96]
  40a6cc:	mov	x1, #0x105                 	// #261
  40a6d0:	mov	x0, x19
  40a6d4:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40a6d8:	strb	w20, [x19, #328]
  40a6dc:	ldr	x1, [x19, #176]
  40a6e0:	add	x0, sp, #0xd0
  40a6e4:	bl	409650 <wcrtomb@plt+0x67d0>
  40a6e8:	ldr	x0, [x19, #152]
  40a6ec:	mov	x1, #0x18                  	// #24
  40a6f0:	bl	40fd44 <wcrtomb@plt+0xcec4>
  40a6f4:	str	x0, [x19, #320]
  40a6f8:	ldr	x20, [sp, #96]
  40a6fc:	add	x0, x26, #0x708
  40a700:	str	x0, [sp, #104]
  40a704:	ldr	x0, [x19, #152]
  40a708:	cmp	x0, x25
  40a70c:	b.gt	40a77c <wcrtomb@plt+0x78fc>
  40a710:	ldr	x1, [x19, #176]
  40a714:	add	x0, sp, #0xe8
  40a718:	adrp	x24, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40a71c:	mov	x20, #0x0                   	// #0
  40a720:	mov	x25, #0x18                  	// #24
  40a724:	bl	409650 <wcrtomb@plt+0x67d0>
  40a728:	add	x0, x24, #0x7b0
  40a72c:	str	x0, [sp, #104]
  40a730:	ldr	x0, [x19, #152]
  40a734:	cmp	x20, x0
  40a738:	b.lt	40a9c0 <wcrtomb@plt+0x7b40>  // b.tstop
  40a73c:	ldr	x0, [sp, #232]
  40a740:	bl	402c20 <free@plt>
  40a744:	ldr	x0, [x19, #152]
  40a748:	bl	40fd78 <wcrtomb@plt+0xcef8>
  40a74c:	mov	x20, x0
  40a750:	ldr	x8, [x19, #152]
  40a754:	mov	x0, #0x0                   	// #0
  40a758:	mov	x7, #0x18                  	// #24
  40a75c:	mov	w9, #0x8                   	// #8
  40a760:	cmp	x0, x8
  40a764:	b.ge	40aae8 <wcrtomb@plt+0x7c68>  // b.tcont
  40a768:	ldr	x3, [x19, #320]
  40a76c:	mov	x2, #0x0                   	// #0
  40a770:	madd	x3, x0, x7, x3
  40a774:	ldr	x6, [x3, #8]
  40a778:	b	40aab4 <wcrtomb@plt+0x7c34>
  40a77c:	ldr	x0, [x19, #144]
  40a780:	lsl	x22, x25, #3
  40a784:	ldr	x1, [x0, x22]
  40a788:	sub	x0, x1, #0x100
  40a78c:	cmp	x0, #0x6
  40a790:	b.hi	40a98c <wcrtomb@plt+0x7b0c>  // b.pmore
  40a794:	cmp	w0, #0x6
  40a798:	b.hi	40a98c <wcrtomb@plt+0x7b0c>  // b.pmore
  40a79c:	ldr	x2, [sp, #104]
  40a7a0:	ldrb	w0, [x2, w0, uxtw]
  40a7a4:	adr	x2, 40a7b0 <wcrtomb@plt+0x7930>
  40a7a8:	add	x0, x2, w0, sxtb #2
  40a7ac:	br	x0
  40a7b0:	mov	w0, #0x1                   	// #1
  40a7b4:	strb	w0, [x20]
  40a7b8:	stp	xzr, xzr, [x20, #8]
  40a7bc:	add	x20, x20, #0x18
  40a7c0:	add	x25, x25, #0x1
  40a7c4:	b	40a704 <wcrtomb@plt+0x7884>
  40a7c8:	ldp	x0, x7, [x20, #-16]
  40a7cc:	mov	x4, #0xfffffffffffffff0    	// #-16
  40a7d0:	mov	x5, #0x0                   	// #0
  40a7d4:	mov	x28, #0x18                  	// #24
  40a7d8:	madd	x26, x7, x4, x23
  40a7dc:	sub	x1, x24, x0, lsl #4
  40a7e0:	stp	x1, x0, [sp, #184]
  40a7e4:	cmp	x7, x5
  40a7e8:	b.gt	40a808 <wcrtomb@plt+0x7988>
  40a7ec:	ldr	x0, [x19, #144]
  40a7f0:	ldr	x0, [x0, x22]
  40a7f4:	cmp	x0, #0x103
  40a7f8:	b.eq	40a7c0 <wcrtomb@plt+0x7940>  // b.none
  40a7fc:	mov	w0, #0x1                   	// #1
  40a800:	sturb	w0, [x20, #-24]
  40a804:	b	40a7c0 <wcrtomb@plt+0x7940>
  40a808:	ldr	x1, [x26]
  40a80c:	add	x3, sp, #0xd0
  40a810:	ldr	x0, [x19, #320]
  40a814:	mov	w2, #0xffffffff            	// #-1
  40a818:	stp	x7, x5, [sp, #112]
  40a81c:	madd	x1, x1, x28, x0
  40a820:	add	x0, sp, #0xb8
  40a824:	bl	409ca8 <wcrtomb@plt+0x6e28>
  40a828:	ldr	x1, [x26], #16
  40a82c:	ldr	x0, [x19, #320]
  40a830:	madd	x1, x1, x28, x0
  40a834:	add	x0, sp, #0xd0
  40a838:	bl	409edc <wcrtomb@plt+0x705c>
  40a83c:	ldp	x7, x5, [sp, #112]
  40a840:	add	x5, x5, #0x1
  40a844:	b	40a7e4 <wcrtomb@plt+0x7964>
  40a848:	ldp	x6, x8, [x20, #-16]
  40a84c:	sub	x9, x20, #0x18
  40a850:	ldur	x4, [x20, #-32]
  40a854:	sub	x7, x20, #0x30
  40a858:	mov	x5, #0x0                   	// #0
  40a85c:	mov	x28, #0x18                  	// #24
  40a860:	lsl	x20, x8, #4
  40a864:	lsl	x11, x4, #4
  40a868:	add	x20, x20, x4, lsl #4
  40a86c:	sub	x22, x24, x6, lsl #4
  40a870:	sub	x20, x23, x20
  40a874:	stp	x22, x6, [sp, #184]
  40a878:	cmp	x4, x5
  40a87c:	b.gt	40a8bc <wcrtomb@plt+0x7a3c>
  40a880:	ldrb	w5, [x7]
  40a884:	cbz	w5, 40a898 <wcrtomb@plt+0x7a18>
  40a888:	ldr	x0, [x7, #8]
  40a88c:	mov	x22, x24
  40a890:	add	x0, x0, x6
  40a894:	str	x0, [x7, #8]
  40a898:	ldrb	w1, [x9]
  40a89c:	cbnz	w1, 40a91c <wcrtomb@plt+0x7a9c>
  40a8a0:	add	x4, x20, x11
  40a8a4:	mov	x0, #0x0                   	// #0
  40a8a8:	cmp	x8, x0
  40a8ac:	b.gt	40a940 <wcrtomb@plt+0x7ac0>
  40a8b0:	sub	x23, x23, x11
  40a8b4:	str	x8, [x7, #16]
  40a8b8:	b	40a924 <wcrtomb@plt+0x7aa4>
  40a8bc:	lsl	x12, x5, #4
  40a8c0:	add	x3, sp, #0xd0
  40a8c4:	ldr	x0, [x19, #320]
  40a8c8:	mov	w2, #0xffffffff            	// #-1
  40a8cc:	ldr	x1, [x20, x12]
  40a8d0:	stp	x12, x5, [sp, #112]
  40a8d4:	stp	x6, x8, [sp, #128]
  40a8d8:	madd	x1, x1, x28, x0
  40a8dc:	add	x0, sp, #0xb8
  40a8e0:	stp	x4, x11, [sp, #144]
  40a8e4:	stp	x9, x7, [sp, #160]
  40a8e8:	bl	409ca8 <wcrtomb@plt+0x6e28>
  40a8ec:	ldr	x12, [sp, #112]
  40a8f0:	ldr	x0, [x19, #320]
  40a8f4:	ldr	x1, [x20, x12]
  40a8f8:	madd	x1, x1, x28, x0
  40a8fc:	add	x0, sp, #0xd0
  40a900:	bl	409edc <wcrtomb@plt+0x705c>
  40a904:	ldp	x5, x6, [sp, #120]
  40a908:	ldp	x8, x4, [sp, #136]
  40a90c:	ldp	x11, x9, [sp, #152]
  40a910:	add	x5, x5, #0x1
  40a914:	ldr	x7, [sp, #168]
  40a918:	b	40a878 <wcrtomb@plt+0x79f8>
  40a91c:	add	x4, x8, x4
  40a920:	str	x4, [x7, #16]
  40a924:	cmp	w5, #0x0
  40a928:	mov	x20, x9
  40a92c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40a930:	mov	x24, x22
  40a934:	cset	w0, ne  // ne = any
  40a938:	strb	w0, [x7]
  40a93c:	b	40a7c0 <wcrtomb@plt+0x7940>
  40a940:	add	x6, x20, x0, lsl #4
  40a944:	add	x0, x0, #0x1
  40a948:	ldp	x2, x3, [x4], #16
  40a94c:	stp	x2, x3, [x6]
  40a950:	b	40a8a8 <wcrtomb@plt+0x7a28>
  40a954:	ldur	x0, [x20, #-40]
  40a958:	sub	x20, x20, #0x18
  40a95c:	ldr	x1, [x20, #8]
  40a960:	add	x0, x0, x1
  40a964:	stur	x0, [x20, #-16]
  40a968:	ldur	x0, [x20, #-8]
  40a96c:	ldr	x1, [x20, #16]
  40a970:	add	x0, x0, x1
  40a974:	ldrb	w1, [x20]
  40a978:	stur	x0, [x20, #-8]
  40a97c:	ldurb	w0, [x20, #-24]
  40a980:	orr	w0, w0, w1
  40a984:	sturb	w0, [x20, #-24]
  40a988:	b	40a7c0 <wcrtomb@plt+0x7940>
  40a98c:	cmp	x1, #0x112
  40a990:	str	x25, [x23]
  40a994:	cset	w0, eq  // eq = none
  40a998:	str	x25, [x24]
  40a99c:	strb	w0, [x20]
  40a9a0:	mov	w0, #0x1ff                 	// #511
  40a9a4:	str	w0, [x23, #8]
  40a9a8:	add	x24, x24, #0x10
  40a9ac:	add	x23, x23, #0x10
  40a9b0:	stur	w0, [x24, #-8]
  40a9b4:	stp	x27, x27, [x20, #8]
  40a9b8:	add	x20, x20, #0x18
  40a9bc:	b	40a7c0 <wcrtomb@plt+0x7940>
  40a9c0:	ldr	x1, [x19, #320]
  40a9c4:	mul	x26, x20, x25
  40a9c8:	add	x1, x1, x26
  40a9cc:	ldr	x0, [x1, #8]
  40a9d0:	cmp	x0, #0x0
  40a9d4:	b.gt	40a9e0 <wcrtomb@plt+0x7b60>
  40a9d8:	add	x20, x20, #0x1
  40a9dc:	b	40a730 <wcrtomb@plt+0x78b0>
  40a9e0:	ldr	x0, [x19, #144]
  40a9e4:	ldr	x0, [x0, x20, lsl #3]
  40a9e8:	sub	x2, x0, #0x100
  40a9ec:	cmp	x2, #0x12
  40a9f0:	b.hi	40a9d8 <wcrtomb@plt+0x7b58>  // b.pmore
  40a9f4:	cmp	x0, #0x112
  40a9f8:	b.eq	40a9d8 <wcrtomb@plt+0x7b58>  // b.none
  40a9fc:	cmp	x0, #0x10a
  40aa00:	b.eq	40a9d8 <wcrtomb@plt+0x7b58>  // b.none
  40aa04:	sub	x0, x0, #0x10c
  40aa08:	cmp	x0, #0x5
  40aa0c:	b.hi	40aa88 <wcrtomb@plt+0x7c08>  // b.pmore
  40aa10:	ldr	x2, [sp, #104]
  40aa14:	ldrh	w27, [x2, x0, lsl #1]
  40aa18:	mov	x23, #0x0                   	// #0
  40aa1c:	mov	x0, x20
  40aa20:	bl	409684 <wcrtomb@plt+0x6804>
  40aa24:	ldr	x0, [x19, #152]
  40aa28:	cmp	x23, x0
  40aa2c:	b.ge	40a9d8 <wcrtomb@plt+0x7b58>  // b.tcont
  40aa30:	cmp	x20, x23
  40aa34:	b.eq	40aa80 <wcrtomb@plt+0x7c00>  // b.none
  40aa38:	ldr	x28, [x19, #320]
  40aa3c:	madd	x24, x23, x25, x28
  40aa40:	ldr	x0, [x24, #8]
  40aa44:	cmp	x0, #0x0
  40aa48:	b.le	40aa80 <wcrtomb@plt+0x7c00>
  40aa4c:	mov	x1, x24
  40aa50:	mov	x0, x20
  40aa54:	bl	409684 <wcrtomb@plt+0x6804>
  40aa58:	ands	w22, w27, w0
  40aa5c:	b.eq	40aa80 <wcrtomb@plt+0x7c00>  // b.none
  40aa60:	add	x1, sp, #0xe8
  40aa64:	mov	x0, x24
  40aa68:	bl	409edc <wcrtomb@plt+0x705c>
  40aa6c:	mov	x3, x24
  40aa70:	mov	w2, w22
  40aa74:	add	x1, x28, x26
  40aa78:	add	x0, sp, #0xe8
  40aa7c:	bl	409ca8 <wcrtomb@plt+0x6e28>
  40aa80:	add	x23, x23, #0x1
  40aa84:	b	40aa24 <wcrtomb@plt+0x7ba4>
  40aa88:	mov	w27, #0x1ff                 	// #511
  40aa8c:	b	40aa18 <wcrtomb@plt+0x7b98>
  40aa90:	ldr	x4, [x3]
  40aa94:	lsl	x1, x2, #4
  40aa98:	ldr	x4, [x4, x1]
  40aa9c:	cmp	x4, x0
  40aaa0:	b.ne	40aac4 <wcrtomb@plt+0x7c44>  // b.any
  40aaa4:	ldrb	w1, [x20, x0]
  40aaa8:	orr	w1, w1, #0x1
  40aaac:	strb	w1, [x20, x0]
  40aab0:	add	x2, x2, #0x1
  40aab4:	cmp	x2, x6
  40aab8:	b.lt	40aa90 <wcrtomb@plt+0x7c10>  // b.tstop
  40aabc:	add	x0, x0, #0x1
  40aac0:	b	40a760 <wcrtomb@plt+0x78e0>
  40aac4:	ldrb	w1, [x20, x4]
  40aac8:	b.ge	40aad8 <wcrtomb@plt+0x7c58>  // b.tcont
  40aacc:	orr	w1, w1, #0x2
  40aad0:	strb	w1, [x20, x4]
  40aad4:	b	40aab0 <wcrtomb@plt+0x7c30>
  40aad8:	ands	w1, w1, #0x8
  40aadc:	orr	w5, w1, #0x4
  40aae0:	csel	w1, w9, w5, eq  // eq = none
  40aae4:	b	40aad0 <wcrtomb@plt+0x7c50>
  40aae8:	ldrb	w0, [x20]
  40aaec:	mov	x22, #0x0                   	// #0
  40aaf0:	ldr	x1, [x19, #176]
  40aaf4:	orr	w0, w0, #0x10
  40aaf8:	strb	w0, [x20]
  40aafc:	add	x0, sp, #0xe8
  40ab00:	bl	409650 <wcrtomb@plt+0x67d0>
  40ab04:	ldr	x0, [x19, #152]
  40ab08:	mov	x1, #0x4                   	// #4
  40ab0c:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ab10:	str	x0, [x19, #336]
  40ab14:	ldr	x0, [x19, #152]
  40ab18:	cmp	x22, x0
  40ab1c:	b.lt	40ad40 <wcrtomb@plt+0x7ec0>  // b.tstop
  40ab20:	mov	x1, #0x8                   	// #8
  40ab24:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ab28:	mov	x23, x0
  40ab2c:	mov	x2, #0xffffffffffffffff    	// #-1
  40ab30:	ldr	x1, [x19, #152]
  40ab34:	mov	x0, #0x1                   	// #1
  40ab38:	str	xzr, [x23]
  40ab3c:	cmp	x0, x1
  40ab40:	b.lt	40aebc <wcrtomb@plt+0x803c>  // b.tstop
  40ab44:	ldr	x0, [x19, #176]
  40ab48:	mov	x1, #0x8                   	// #8
  40ab4c:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ab50:	mov	x26, x0
  40ab54:	ldr	x0, [x19, #176]
  40ab58:	mov	x1, #0x18                  	// #24
  40ab5c:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ab60:	mov	x25, x0
  40ab64:	ldr	x0, [x19, #176]
  40ab68:	mov	x1, #0x4                   	// #4
  40ab6c:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ab70:	mov	x24, x0
  40ab74:	ldrb	w0, [x19, #1048]
  40ab78:	cbz	w0, 40aec8 <wcrtomb@plt+0x8048>
  40ab7c:	ldr	x0, [x19, #176]
  40ab80:	mov	x1, #0x1                   	// #1
  40ab84:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ab88:	mov	x28, x0
  40ab8c:	adrp	x27, 409000 <wcrtomb@plt+0x6180>
  40ab90:	add	x27, x27, #0x714
  40ab94:	mov	x5, #0x0                   	// #0
  40ab98:	mov	x22, #0x1                   	// #1
  40ab9c:	ldr	x1, [x19, #152]
  40aba0:	ldr	x0, [x19, #320]
  40aba4:	cmp	x5, x1
  40aba8:	b.lt	40aed0 <wcrtomb@plt+0x8050>  // b.tstop
  40abac:	mov	x1, #0x0                   	// #0
  40abb0:	mov	x7, #0x18                  	// #24
  40abb4:	ldr	x0, [x19, #144]
  40abb8:	ldr	x2, [x26, x1, lsl #3]
  40abbc:	ldr	x5, [x19, #320]
  40abc0:	str	x2, [x0, x1, lsl #3]
  40abc4:	mul	x0, x1, x7
  40abc8:	add	x5, x5, x0
  40abcc:	add	x0, x25, x0
  40abd0:	ldp	x2, x3, [x0]
  40abd4:	stp	x2, x3, [x5]
  40abd8:	ldr	w2, [x24, x1, lsl #2]
  40abdc:	ldr	x0, [x0, #16]
  40abe0:	str	x0, [x5, #16]
  40abe4:	ldr	x0, [x19, #336]
  40abe8:	str	w2, [x0, x1, lsl #2]
  40abec:	cbz	x28, 40abfc <wcrtomb@plt+0x7d7c>
  40abf0:	ldr	x0, [x19, #280]
  40abf4:	ldrb	w2, [x28, x1]
  40abf8:	strb	w2, [x0, x1]
  40abfc:	add	x1, x1, #0x1
  40ac00:	cmp	x1, x22
  40ac04:	b.ne	40abb4 <wcrtomb@plt+0x7d34>  // b.any
  40ac08:	str	x1, [x19, #152]
  40ac0c:	mov	x0, x26
  40ac10:	str	x1, [x19, #176]
  40ac14:	bl	402c20 <free@plt>
  40ac18:	mov	x0, x25
  40ac1c:	bl	402c20 <free@plt>
  40ac20:	mov	x0, x24
  40ac24:	bl	402c20 <free@plt>
  40ac28:	mov	x0, x28
  40ac2c:	bl	402c20 <free@plt>
  40ac30:	mov	x0, x23
  40ac34:	bl	402c20 <free@plt>
  40ac38:	ldr	x0, [sp, #232]
  40ac3c:	bl	402c20 <free@plt>
  40ac40:	mov	x0, x20
  40ac44:	bl	402c20 <free@plt>
  40ac48:	mov	x0, #0x1ff                 	// #511
  40ac4c:	mov	x20, #0x0                   	// #0
  40ac50:	bfxil	x20, x0, #0, #32
  40ac54:	mov	x1, #0x1                   	// #1
  40ac58:	add	x0, sp, #0xb8
  40ac5c:	bl	409650 <wcrtomb@plt+0x67d0>
  40ac60:	add	x2, sp, #0xb8
  40ac64:	mov	x1, x20
  40ac68:	mov	x0, #0x0                   	// #0
  40ac6c:	bl	40a324 <wcrtomb@plt+0x74a4>
  40ac70:	ldr	x0, [x19, #152]
  40ac74:	mov	x1, #0x4                   	// #4
  40ac78:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40ac7c:	str	x0, [x19, #344]
  40ac80:	ldr	x7, [x19, #152]
  40ac84:	mov	x1, #0x0                   	// #0
  40ac88:	mov	w3, #0x49                  	// #73
  40ac8c:	mov	w8, #0x4                   	// #4
  40ac90:	mov	x9, #0x18                  	// #24
  40ac94:	cmp	x7, x1
  40ac98:	b.gt	40afac <wcrtomb@plt+0x812c>
  40ac9c:	add	x1, sp, #0xb8
  40aca0:	add	x0, x19, #0x158
  40aca4:	bl	40a118 <wcrtomb@plt+0x7298>
  40aca8:	mov	w20, w0
  40acac:	tbz	w20, #2, 40acc0 <wcrtomb@plt+0x7e40>
  40acb0:	add	x1, sp, #0xb8
  40acb4:	mov	x0, x19
  40acb8:	mov	w2, #0x4                   	// #4
  40acbc:	bl	40a37c <wcrtomb@plt+0x74fc>
  40acc0:	add	x1, sp, #0xb8
  40acc4:	eor	w2, w20, #0x7
  40acc8:	mov	x0, x19
  40accc:	bl	40a37c <wcrtomb@plt+0x74fc>
  40acd0:	sxtw	x1, w0
  40acd4:	str	w0, [x19, #364]
  40acd8:	str	x1, [x19, #400]
  40acdc:	tbz	w20, #1, 40acf4 <wcrtomb@plt+0x7e74>
  40ace0:	add	x1, sp, #0xb8
  40ace4:	mov	x0, x19
  40ace8:	mov	w2, #0x2                   	// #2
  40acec:	bl	40a37c <wcrtomb@plt+0x74fc>
  40acf0:	str	w0, [x19, #364]
  40acf4:	ldr	w0, [x19, #364]
  40acf8:	str	wzr, [x19, #360]
  40acfc:	add	w0, w0, #0x1
  40ad00:	str	w0, [x19, #364]
  40ad04:	mov	x0, x21
  40ad08:	bl	402c20 <free@plt>
  40ad0c:	ldr	x0, [sp, #96]
  40ad10:	bl	402c20 <free@plt>
  40ad14:	ldr	x0, [sp, #208]
  40ad18:	bl	402c20 <free@plt>
  40ad1c:	ldr	x0, [sp, #184]
  40ad20:	bl	402c20 <free@plt>
  40ad24:	ldp	x19, x20, [sp, #16]
  40ad28:	ldp	x21, x22, [sp, #32]
  40ad2c:	ldp	x23, x24, [sp, #48]
  40ad30:	ldp	x25, x26, [sp, #64]
  40ad34:	ldp	x27, x28, [sp, #80]
  40ad38:	ldp	x29, x30, [sp], #256
  40ad3c:	ret
  40ad40:	ldrb	w0, [x20, x22]
  40ad44:	tbz	w0, #4, 40ad78 <wcrtomb@plt+0x7ef8>
  40ad48:	ldr	x0, [x19, #336]
  40ad4c:	lsl	x26, x22, #2
  40ad50:	ldr	x25, [x19, #320]
  40ad54:	mov	x23, #0x0                   	// #0
  40ad58:	str	wzr, [x0, x26]
  40ad5c:	mov	x0, #0x18                  	// #24
  40ad60:	mov	x27, #0x0                   	// #0
  40ad64:	madd	x24, x22, x0, x25
  40ad68:	ldr	x0, [x24, #8]
  40ad6c:	cmp	x23, x0
  40ad70:	b.lt	40ad80 <wcrtomb@plt+0x7f00>  // b.tstop
  40ad74:	str	x27, [x24, #8]
  40ad78:	add	x22, x22, #0x1
  40ad7c:	b	40ab14 <wcrtomb@plt+0x7c94>
  40ad80:	ldr	x3, [x24]
  40ad84:	lsl	x0, x23, #4
  40ad88:	add	x9, x3, x23, lsl #4
  40ad8c:	ldr	w7, [x9, #8]
  40ad90:	cbz	w7, 40adb4 <wcrtomb@plt+0x7f34>
  40ad94:	ldr	x0, [x3, x0]
  40ad98:	ldr	x10, [x19, #144]
  40ad9c:	ldr	x11, [x10, x0, lsl #3]
  40ada0:	tbz	x11, #63, 40adbc <wcrtomb@plt+0x7f3c>
  40ada4:	ldr	x1, [x19, #336]
  40ada8:	ldr	w0, [x1, x26]
  40adac:	orr	w7, w0, w7
  40adb0:	str	w7, [x1, x26]
  40adb4:	add	x23, x23, #0x1
  40adb8:	b	40ad68 <wcrtomb@plt+0x7ee8>
  40adbc:	ldrb	w1, [x20, x0]
  40adc0:	tst	w1, #0x6
  40adc4:	b.ne	40aea0 <wcrtomb@plt+0x8020>  // b.any
  40adc8:	add	x12, x3, #0x8
  40adcc:	mov	x2, #0x0                   	// #0
  40add0:	b	40ae98 <wcrtomb@plt+0x8018>
  40add4:	lsl	x6, x2, #4
  40add8:	ldr	w13, [x12, x6]
  40addc:	cmp	w7, w13
  40ade0:	b.ne	40ae94 <wcrtomb@plt+0x8014>  // b.any
  40ade4:	ldr	x28, [x3, x6]
  40ade8:	ldrb	w6, [x20, x28]
  40adec:	tst	w6, #0x6
  40adf0:	b.ne	40ae94 <wcrtomb@plt+0x8014>  // b.any
  40adf4:	ldr	x13, [x10, x28, lsl #3]
  40adf8:	cmp	x11, x13
  40adfc:	b.ne	40ae94 <wcrtomb@plt+0x8014>  // b.any
  40ae00:	eor	w6, w1, w6
  40ae04:	tbnz	w6, #0, 40ae94 <wcrtomb@plt+0x8014>
  40ae08:	mov	x2, #0x18                  	// #24
  40ae0c:	madd	x6, x0, x2, x25
  40ae10:	tbz	w1, #0, 40ae24 <wcrtomb@plt+0x7fa4>
  40ae14:	mov	x1, x6
  40ae18:	str	x6, [sp, #104]
  40ae1c:	bl	409684 <wcrtomb@plt+0x6804>
  40ae20:	ldr	x6, [sp, #104]
  40ae24:	mov	x0, #0x18                  	// #24
  40ae28:	madd	x28, x28, x0, x25
  40ae2c:	ldr	x0, [x6, #8]
  40ae30:	cmp	x0, #0x3
  40ae34:	b.le	40ae8c <wcrtomb@plt+0x800c>
  40ae38:	add	x3, sp, #0xe8
  40ae3c:	mov	w2, #0xffffffff            	// #-1
  40ae40:	mov	x1, x28
  40ae44:	mov	x0, x6
  40ae48:	bl	409ca8 <wcrtomb@plt+0x6e28>
  40ae4c:	mov	x1, x28
  40ae50:	add	x0, sp, #0xe8
  40ae54:	bl	409edc <wcrtomb@plt+0x705c>
  40ae58:	b	40adb4 <wcrtomb@plt+0x7f34>
  40ae5c:	ldr	x0, [x6]
  40ae60:	mov	x2, x28
  40ae64:	stp	x3, x6, [sp, #104]
  40ae68:	add	x0, x0, x3, lsl #4
  40ae6c:	ldp	x0, x1, [x0]
  40ae70:	bl	40a244 <wcrtomb@plt+0x73c4>
  40ae74:	ldp	x3, x6, [sp, #104]
  40ae78:	add	x3, x3, #0x1
  40ae7c:	ldr	x0, [x6, #8]
  40ae80:	cmp	x3, x0
  40ae84:	b.lt	40ae5c <wcrtomb@plt+0x7fdc>  // b.tstop
  40ae88:	b	40adb4 <wcrtomb@plt+0x7f34>
  40ae8c:	mov	x3, #0x0                   	// #0
  40ae90:	b	40ae7c <wcrtomb@plt+0x7ffc>
  40ae94:	add	x2, x2, #0x1
  40ae98:	cmp	x2, x27
  40ae9c:	b.ne	40add4 <wcrtomb@plt+0x7f54>  // b.any
  40aea0:	add	x3, x3, x27, lsl #4
  40aea4:	orr	w1, w1, #0x10
  40aea8:	ldp	x6, x7, [x9]
  40aeac:	add	x27, x27, #0x1
  40aeb0:	stp	x6, x7, [x3]
  40aeb4:	strb	w1, [x20, x0]
  40aeb8:	b	40adb4 <wcrtomb@plt+0x7f34>
  40aebc:	str	x2, [x23, x0, lsl #3]
  40aec0:	add	x0, x0, #0x1
  40aec4:	b	40ab3c <wcrtomb@plt+0x7cbc>
  40aec8:	mov	x28, #0x0                   	// #0
  40aecc:	b	40ab8c <wcrtomb@plt+0x7d0c>
  40aed0:	mov	x2, #0x18                  	// #24
  40aed4:	lsl	x3, x5, #3
  40aed8:	ldr	x1, [x23, x5, lsl #3]
  40aedc:	mul	x2, x5, x2
  40aee0:	cmn	x1, #0x1
  40aee4:	add	x8, x0, x2
  40aee8:	ldr	x0, [x0, x2]
  40aeec:	b.ne	40af14 <wcrtomb@plt+0x8094>  // b.any
  40aef0:	stp	x2, x5, [sp, #104]
  40aef4:	bl	402c20 <free@plt>
  40aef8:	ldp	x2, x5, [sp, #104]
  40aefc:	ldr	x0, [x19, #320]
  40af00:	add	x1, x0, x2
  40af04:	str	xzr, [x0, x2]
  40af08:	str	xzr, [x1, #8]
  40af0c:	add	x5, x5, #0x1
  40af10:	b	40ab9c <wcrtomb@plt+0x7d1c>
  40af14:	ldr	x2, [x19, #144]
  40af18:	ldr	x2, [x2, x3]
  40af1c:	str	x2, [x26, x1, lsl #3]
  40af20:	mov	x2, #0x18                  	// #24
  40af24:	madd	x7, x1, x2, x25
  40af28:	ldp	x2, x3, [x8]
  40af2c:	stp	x2, x3, [x7]
  40af30:	ldr	x2, [x8, #16]
  40af34:	str	x2, [x7, #16]
  40af38:	ldr	x2, [x19, #336]
  40af3c:	ldr	w2, [x2, x5, lsl #2]
  40af40:	str	w2, [x24, x1, lsl #2]
  40af44:	cbz	x28, 40af54 <wcrtomb@plt+0x80d4>
  40af48:	ldr	x2, [x19, #280]
  40af4c:	ldrb	w2, [x2, x5]
  40af50:	strb	w2, [x28, x1]
  40af54:	ldr	x1, [x8, #8]
  40af58:	mov	x3, #0x0                   	// #0
  40af5c:	cmp	x3, x1
  40af60:	b.lt	40af7c <wcrtomb@plt+0x80fc>  // b.tstop
  40af64:	mov	x3, x27
  40af68:	mov	x2, #0x10                  	// #16
  40af6c:	str	x5, [sp, #104]
  40af70:	bl	402850 <qsort@plt>
  40af74:	ldr	x5, [sp, #104]
  40af78:	b	40af0c <wcrtomb@plt+0x808c>
  40af7c:	lsl	x7, x3, #4
  40af80:	ldr	x2, [x0, x7]
  40af84:	lsl	x2, x2, #3
  40af88:	ldr	x8, [x23, x2]
  40af8c:	cmn	x8, #0x1
  40af90:	b.ne	40af9c <wcrtomb@plt+0x811c>  // b.any
  40af94:	str	x22, [x23, x2]
  40af98:	add	x22, x22, #0x1
  40af9c:	ldr	x2, [x23, x2]
  40afa0:	add	x3, x3, #0x1
  40afa4:	str	x2, [x0, x7]
  40afa8:	b	40af5c <wcrtomb@plt+0x80dc>
  40afac:	ldr	x5, [x19, #336]
  40afb0:	lsl	x4, x1, #2
  40afb4:	str	wzr, [x0, x1, lsl #2]
  40afb8:	ldr	w2, [x5, x4]
  40afbc:	eor	w2, w2, w2, asr #2
  40afc0:	ands	w2, w2, w3
  40afc4:	csel	w2, w2, w8, eq  // eq = none
  40afc8:	str	w2, [x0, x1, lsl #2]
  40afcc:	ldr	w4, [x5, x4]
  40afd0:	eor	w4, w4, w4, asr #1
  40afd4:	tst	w4, w3
  40afd8:	b.eq	40afe4 <wcrtomb@plt+0x8164>  // b.none
  40afdc:	orr	w2, w2, #0x2
  40afe0:	str	w2, [x0, x1, lsl #2]
  40afe4:	ldr	x4, [x19, #320]
  40afe8:	mov	x2, #0x0                   	// #0
  40afec:	madd	x4, x1, x9, x4
  40aff0:	ldr	x10, [x4, #8]
  40aff4:	cmp	x10, x2
  40aff8:	b.gt	40b004 <wcrtomb@plt+0x8184>
  40affc:	add	x1, x1, #0x1
  40b000:	b	40ac94 <wcrtomb@plt+0x7e14>
  40b004:	ldr	x5, [x4]
  40b008:	add	x5, x5, x2, lsl #4
  40b00c:	ldr	w6, [x5, #8]
  40b010:	eor	w6, w6, w6, asr #2
  40b014:	tst	w6, w3
  40b018:	b.eq	40b028 <wcrtomb@plt+0x81a8>  // b.none
  40b01c:	ldr	w6, [x0, x1, lsl #2]
  40b020:	orr	w6, w6, #0x4
  40b024:	str	w6, [x0, x1, lsl #2]
  40b028:	ldr	w5, [x5, #8]
  40b02c:	eor	w5, w5, w5, asr #1
  40b030:	tst	w5, w3
  40b034:	b.eq	40b044 <wcrtomb@plt+0x81c4>  // b.none
  40b038:	ldr	w5, [x0, x1, lsl #2]
  40b03c:	orr	w5, w5, #0x2
  40b040:	str	w5, [x0, x1, lsl #2]
  40b044:	add	x2, x2, #0x1
  40b048:	b	40aff4 <wcrtomb@plt+0x8174>
  40b04c:	stp	x29, x30, [sp, #-240]!
  40b050:	mov	x29, sp
  40b054:	stp	x19, x20, [sp, #16]
  40b058:	mov	x20, #0x50                  	// #80
  40b05c:	mul	x20, x0, x20
  40b060:	stp	x21, x22, [sp, #32]
  40b064:	mov	x21, x0
  40b068:	stp	x23, x24, [sp, #48]
  40b06c:	and	w23, w2, #0xff
  40b070:	stp	x27, x28, [sp, #80]
  40b074:	mov	x27, x1
  40b078:	ldp	x2, x0, [x1, #368]
  40b07c:	stp	x25, x26, [sp, #64]
  40b080:	ldr	x1, [x1, #296]
  40b084:	add	x1, x1, x20
  40b088:	ldrh	w1, [x1, #34]
  40b08c:	cmp	w1, #0x0
  40b090:	lsl	x1, x21, #3
  40b094:	csel	x0, x0, x2, ne  // ne = any
  40b098:	str	x1, [sp, #120]
  40b09c:	add	x24, x0, x21, lsl #3
  40b0a0:	ldr	x19, [x0, x1]
  40b0a4:	cbnz	x19, 40b0fc <wcrtomb@plt+0x827c>
  40b0a8:	ldr	w0, [x27, #360]
  40b0ac:	cmp	w0, #0x3ff
  40b0b0:	b.le	40b0c8 <wcrtomb@plt+0x8248>
  40b0b4:	ldrsw	x19, [x27, #364]
  40b0b8:	ldr	x0, [x27, #352]
  40b0bc:	cmp	x0, x19
  40b0c0:	b.gt	40b1c8 <wcrtomb@plt+0x8348>
  40b0c4:	str	wzr, [x27, #360]
  40b0c8:	ldr	w0, [x27, #360]
  40b0cc:	add	w0, w0, #0x1
  40b0d0:	str	w0, [x27, #360]
  40b0d4:	mov	x0, #0x800                 	// #2048
  40b0d8:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40b0dc:	mov	x19, x0
  40b0e0:	mov	x1, #0xfffffffffffffffe    	// #-2
  40b0e4:	mov	x0, #0x0                   	// #0
  40b0e8:	str	x19, [x24]
  40b0ec:	str	x1, [x19, x0, lsl #3]
  40b0f0:	add	x0, x0, #0x1
  40b0f4:	cmp	x0, #0x100
  40b0f8:	b.ne	40b0ec <wcrtomb@plt+0x826c>  // b.any
  40b0fc:	ldr	x0, [x27, #384]
  40b100:	mov	w2, #0x4                   	// #4
  40b104:	strb	wzr, [x0, x21]
  40b108:	ldr	x0, [x27, #296]
  40b10c:	add	x0, x0, x20
  40b110:	ldrb	w1, [x0, #32]
  40b114:	ldrh	w0, [x0, #34]
  40b118:	bl	409578 <wcrtomb@plt+0x66f8>
  40b11c:	tst	w0, #0xff
  40b120:	b.eq	40b134 <wcrtomb@plt+0x82b4>  // b.none
  40b124:	ldr	x1, [x27, #384]
  40b128:	ldrb	w0, [x1, x21]
  40b12c:	orr	w0, w0, #0x4
  40b130:	strb	w0, [x1, x21]
  40b134:	ldr	x0, [x27, #296]
  40b138:	mov	w2, #0x2                   	// #2
  40b13c:	add	x0, x0, x20
  40b140:	ldrb	w1, [x0, #32]
  40b144:	ldrh	w0, [x0, #34]
  40b148:	bl	409578 <wcrtomb@plt+0x66f8>
  40b14c:	tst	w0, #0xff
  40b150:	b.eq	40b164 <wcrtomb@plt+0x82e4>  // b.none
  40b154:	ldr	x1, [x27, #384]
  40b158:	ldrb	w0, [x1, x21]
  40b15c:	orr	w0, w0, #0x2
  40b160:	strb	w0, [x1, x21]
  40b164:	ldr	x0, [x27, #296]
  40b168:	mov	w2, #0x1                   	// #1
  40b16c:	add	x0, x0, x20
  40b170:	ldrb	w1, [x0, #32]
  40b174:	ldrh	w0, [x0, #34]
  40b178:	bl	409578 <wcrtomb@plt+0x66f8>
  40b17c:	tst	w0, #0xff
  40b180:	b.eq	40b194 <wcrtomb@plt+0x8314>  // b.none
  40b184:	ldr	x1, [x27, #384]
  40b188:	ldrb	w0, [x1, x21]
  40b18c:	orr	w0, w0, #0x1
  40b190:	strb	w0, [x1, x21]
  40b194:	ldr	x1, [x27, #176]
  40b198:	add	x0, sp, #0x80
  40b19c:	mov	x22, #0x0                   	// #0
  40b1a0:	mov	x25, #0x18                  	// #24
  40b1a4:	bl	409650 <wcrtomb@plt+0x67d0>
  40b1a8:	ldr	x0, [x27, #296]
  40b1ac:	add	x0, x0, x20
  40b1b0:	ldr	x0, [x0, #16]
  40b1b4:	cmp	x0, x22
  40b1b8:	b.le	40b244 <wcrtomb@plt+0x83c4>
  40b1bc:	lsl	x24, x22, #4
  40b1c0:	mov	x21, #0x0                   	// #0
  40b1c4:	b	40b214 <wcrtomb@plt+0x8394>
  40b1c8:	ldr	x0, [x27, #368]
  40b1cc:	lsl	x22, x19, #3
  40b1d0:	add	x19, x19, #0x1
  40b1d4:	ldr	x0, [x0, x22]
  40b1d8:	bl	402c20 <free@plt>
  40b1dc:	ldr	x0, [x27, #376]
  40b1e0:	ldr	x0, [x0, x22]
  40b1e4:	bl	402c20 <free@plt>
  40b1e8:	ldr	x0, [x27, #376]
  40b1ec:	str	xzr, [x0, x22]
  40b1f0:	ldr	x0, [x27, #368]
  40b1f4:	str	xzr, [x0, x22]
  40b1f8:	b	40b0b8 <wcrtomb@plt+0x8238>
  40b1fc:	ldr	x0, [x1, x0]
  40b200:	add	x2, sp, #0x80
  40b204:	add	x0, x0, x21, lsl #4
  40b208:	add	x21, x21, #0x1
  40b20c:	ldp	x0, x1, [x0]
  40b210:	bl	40a244 <wcrtomb@plt+0x73c4>
  40b214:	ldr	x0, [x27, #296]
  40b218:	ldr	x1, [x27, #320]
  40b21c:	add	x0, x0, x20
  40b220:	ldr	x0, [x0, #8]
  40b224:	ldr	x0, [x0, x24]
  40b228:	mul	x0, x0, x25
  40b22c:	add	x2, x1, x0
  40b230:	ldr	x2, [x2, #8]
  40b234:	cmp	x2, x21
  40b238:	b.gt	40b1fc <wcrtomb@plt+0x837c>
  40b23c:	add	x22, x22, #0x1
  40b240:	b	40b1a8 <wcrtomb@plt+0x8328>
  40b244:	ldr	x1, [x27, #176]
  40b248:	add	x0, sp, #0x98
  40b24c:	lsr	w25, w23, #6
  40b250:	add	x24, sp, #0xd0
  40b254:	and	w28, w23, #0x3f
  40b258:	mov	x26, #0x0                   	// #0
  40b25c:	bl	409650 <wcrtomb@plt+0x67d0>
  40b260:	mov	x0, #0xffffffffffffffff    	// #-1
  40b264:	stp	x0, x0, [sp, #176]
  40b268:	stp	x0, x0, [sp, #192]
  40b26c:	ldr	x0, [sp, #136]
  40b270:	cmp	x0, x26
  40b274:	b.gt	40b458 <wcrtomb@plt+0x85d8>
  40b278:	ldr	x1, [x27, #176]
  40b27c:	add	x0, sp, #0xd0
  40b280:	bl	409650 <wcrtomb@plt+0x67d0>
  40b284:	ldr	x1, [sp, #160]
  40b288:	ldrb	w0, [x27, #328]
  40b28c:	cmp	x1, #0x0
  40b290:	b.le	40b6ec <wcrtomb@plt+0x886c>
  40b294:	cbz	w0, 40b2ec <wcrtomb@plt+0x846c>
  40b298:	ldrb	w0, [x27, #1048]
  40b29c:	cbz	w0, 40b2c8 <wcrtomb@plt+0x8448>
  40b2a0:	ldr	x3, [sp, #152]
  40b2a4:	mov	x0, #0x0                   	// #0
  40b2a8:	ldr	x2, [x27, #280]
  40b2ac:	lsl	x5, x0, #4
  40b2b0:	add	x0, x0, #0x1
  40b2b4:	ldr	x5, [x3, x5]
  40b2b8:	ldrb	w5, [x2, x5]
  40b2bc:	tbz	w5, #0, 40b2ec <wcrtomb@plt+0x846c>
  40b2c0:	cmp	x1, x0
  40b2c4:	b.ne	40b2ac <wcrtomb@plt+0x842c>  // b.any
  40b2c8:	ldr	x0, [x27, #296]
  40b2cc:	add	x3, sp, #0xd0
  40b2d0:	mov	w2, #0xffffffff            	// #-1
  40b2d4:	add	x1, sp, #0x98
  40b2d8:	add	x0, x0, #0x8
  40b2dc:	bl	409ca8 <wcrtomb@plt+0x6e28>
  40b2e0:	add	x1, sp, #0x98
  40b2e4:	add	x0, sp, #0xd0
  40b2e8:	bl	409edc <wcrtomb@plt+0x705c>
  40b2ec:	add	x5, sp, #0xb0
  40b2f0:	add	x6, x27, #0x3f0
  40b2f4:	add	x7, x27, #0x3d0
  40b2f8:	mov	x0, #0x0                   	// #0
  40b2fc:	mov	w22, #0x0                   	// #0
  40b300:	ldr	x2, [x0, x5]
  40b304:	ldr	x1, [x6, x0]
  40b308:	tst	x2, x1
  40b30c:	b.eq	40b314 <wcrtomb@plt+0x8494>  // b.none
  40b310:	orr	w22, w22, #0x4
  40b314:	ldr	x3, [x7, x0]
  40b318:	tst	x2, x3
  40b31c:	b.eq	40b324 <wcrtomb@plt+0x84a4>  // b.none
  40b320:	orr	w22, w22, #0x2
  40b324:	orr	x1, x1, x3
  40b328:	bics	xzr, x2, x1
  40b32c:	b.eq	40b334 <wcrtomb@plt+0x84b4>  // b.none
  40b330:	orr	w22, w22, #0x1
  40b334:	add	x0, x0, #0x8
  40b338:	cmp	x0, #0x20
  40b33c:	b.ne	40b300 <wcrtomb@plt+0x8480>  // b.any
  40b340:	add	x1, sp, #0x98
  40b344:	add	x0, x27, #0x158
  40b348:	bl	40a118 <wcrtomb@plt+0x7298>
  40b34c:	mov	w20, w0
  40b350:	bics	wzr, w22, w0
  40b354:	b.eq	40b6d4 <wcrtomb@plt+0x8854>  // b.none
  40b358:	eor	w2, w0, #0x7
  40b35c:	add	x1, sp, #0x98
  40b360:	mov	x0, x27
  40b364:	bl	40a37c <wcrtomb@plt+0x74fc>
  40b368:	mov	x21, x0
  40b36c:	and	w20, w20, w22
  40b370:	tbz	w20, #2, 40b6dc <wcrtomb@plt+0x885c>
  40b374:	add	x1, sp, #0x98
  40b378:	mov	x0, x27
  40b37c:	mov	w2, #0x4                   	// #4
  40b380:	bl	40a37c <wcrtomb@plt+0x74fc>
  40b384:	mov	x22, x0
  40b388:	tbz	w20, #1, 40b6e4 <wcrtomb@plt+0x8864>
  40b38c:	add	x1, sp, #0x98
  40b390:	mov	x0, x27
  40b394:	mov	w2, #0x2                   	// #2
  40b398:	bl	40a37c <wcrtomb@plt+0x74fc>
  40b39c:	mov	x20, x0
  40b3a0:	mov	x0, x27
  40b3a4:	bl	4099d0 <wcrtomb@plt+0x6b50>
  40b3a8:	add	x24, sp, #0xb0
  40b3ac:	add	x2, x27, #0x1cc
  40b3b0:	mov	x1, #0x0                   	// #0
  40b3b4:	lsr	w0, w1, #6
  40b3b8:	ldr	x0, [x24, x0, lsl #3]
  40b3bc:	lsr	x0, x0, x1
  40b3c0:	tbz	w0, #0, 40b3dc <wcrtomb@plt+0x855c>
  40b3c4:	ldrb	w0, [x2, x1]
  40b3c8:	cmp	w0, #0x2
  40b3cc:	b.eq	40b718 <wcrtomb@plt+0x8898>  // b.none
  40b3d0:	cmp	w0, #0x4
  40b3d4:	csel	x0, x21, x22, ne  // ne = any
  40b3d8:	str	x0, [x19, x1, lsl #3]
  40b3dc:	add	x1, x1, #0x1
  40b3e0:	cmp	x1, #0x100
  40b3e4:	b.ne	40b3b4 <wcrtomb@plt+0x8534>  // b.any
  40b3e8:	ldr	x0, [sp, #152]
  40b3ec:	bl	402c20 <free@plt>
  40b3f0:	ldr	x0, [sp, #128]
  40b3f4:	bl	402c20 <free@plt>
  40b3f8:	ldr	x0, [sp, #208]
  40b3fc:	bl	402c20 <free@plt>
  40b400:	ldrb	w0, [x27, #459]
  40b404:	ubfx	x1, x0, #6, #2
  40b408:	ldr	x1, [x24, x1, lsl #3]
  40b40c:	lsr	x1, x1, x0
  40b410:	tbz	w1, #0, 40b434 <wcrtomb@plt+0x85b4>
  40b414:	ubfiz	x0, x0, #3, #8
  40b418:	ldr	x2, [sp, #120]
  40b41c:	ldr	x1, [x19, x0]
  40b420:	ldr	x0, [x27, #392]
  40b424:	str	x1, [x0, x2]
  40b428:	mov	x1, #0xffffffffffffffff    	// #-1
  40b42c:	ldrb	w0, [x27, #459]
  40b430:	str	x1, [x19, x0, lsl #3]
  40b434:	ubfiz	x23, x23, #3, #8
  40b438:	ldp	x21, x22, [sp, #32]
  40b43c:	ldr	x0, [x19, x23]
  40b440:	ldp	x19, x20, [sp, #16]
  40b444:	ldp	x23, x24, [sp, #48]
  40b448:	ldp	x25, x26, [sp, #64]
  40b44c:	ldp	x27, x28, [sp, #80]
  40b450:	ldp	x29, x30, [sp], #240
  40b454:	ret
  40b458:	ldr	x1, [sp, #128]
  40b45c:	lsl	x0, x26, #4
  40b460:	add	x2, x1, x26, lsl #4
  40b464:	ldp	x4, x5, [x2]
  40b468:	stp	x4, x5, [sp, #96]
  40b46c:	ldr	w21, [x2, #8]
  40b470:	ldr	x5, [x1, x0]
  40b474:	ldr	x0, [x27, #144]
  40b478:	lsl	x5, x5, #3
  40b47c:	ldr	x0, [x0, x5]
  40b480:	cmp	x0, #0xff
  40b484:	b.hi	40b4ec <wcrtomb@plt+0x866c>  // b.pmore
  40b488:	mov	x0, x24
  40b48c:	bl	40973c <wcrtomb@plt+0x68bc>
  40b490:	ldr	x0, [x27, #144]
  40b494:	mov	x1, x24
  40b498:	ldr	w0, [x0, x5]
  40b49c:	bl	4095b0 <wcrtomb@plt+0x6730>
  40b4a0:	ldr	x0, [x27, #144]
  40b4a4:	ldr	x0, [x0, x5]
  40b4a8:	cmp	x0, w23, uxtb
  40b4ac:	b.ne	40b51c <wcrtomb@plt+0x869c>  // b.any
  40b4b0:	cmp	w21, #0x1ff
  40b4b4:	b.ne	40b5b0 <wcrtomb@plt+0x8730>  // b.any
  40b4b8:	add	x1, sp, #0xb0
  40b4bc:	mov	x0, #0x0                   	// #0
  40b4c0:	ldr	x5, [x0, x24]
  40b4c4:	add	x0, x0, #0x8
  40b4c8:	ldr	x2, [x1]
  40b4cc:	cmp	x0, #0x20
  40b4d0:	and	x2, x2, x5
  40b4d4:	str	x2, [x1], #8
  40b4d8:	b.ne	40b4c0 <wcrtomb@plt+0x8640>  // b.any
  40b4dc:	ldp	x0, x1, [sp, #96]
  40b4e0:	add	x2, sp, #0x98
  40b4e4:	bl	40a324 <wcrtomb@plt+0x74a4>
  40b4e8:	b	40b66c <wcrtomb@plt+0x87ec>
  40b4ec:	cmp	x0, #0x113
  40b4f0:	b.le	40b52c <wcrtomb@plt+0x86ac>
  40b4f4:	ldr	x1, [x27]
  40b4f8:	add	x0, x1, x0, lsl #5
  40b4fc:	mov	x1, #0xffffffffffffdd80    	// #-8832
  40b500:	add	x0, x0, x1
  40b504:	ld1	{v0.16b, v1.16b}, [x0]
  40b508:	mov	w0, w25
  40b50c:	st1	{v0.16b, v1.16b}, [x24]
  40b510:	ldr	x0, [x24, x0, lsl #3]
  40b514:	lsr	x0, x0, x28
  40b518:	tbnz	w0, #0, 40b4b0 <wcrtomb@plt+0x8630>
  40b51c:	cmp	w21, #0x1ff
  40b520:	b.eq	40b6ac <wcrtomb@plt+0x882c>  // b.none
  40b524:	mov	w22, #0x0                   	// #0
  40b528:	b	40b5b4 <wcrtomb@plt+0x8734>
  40b52c:	cmp	x0, #0x10a
  40b530:	b.ne	40b66c <wcrtomb@plt+0x87ec>  // b.any
  40b534:	ldr	x1, [x27]
  40b538:	mov	w2, #0x1                   	// #1
  40b53c:	ldr	x0, [x27, #24]
  40b540:	ldr	x5, [x27, #296]
  40b544:	add	x0, x1, x0, lsl #5
  40b548:	add	x5, x5, x20
  40b54c:	ld1	{v0.16b, v1.16b}, [x0]
  40b550:	mov	w0, w25
  40b554:	st1	{v0.16b, v1.16b}, [x24]
  40b558:	ldrb	w1, [x5, #32]
  40b55c:	ldr	x22, [x24, x0, lsl #3]
  40b560:	mov	w0, w21
  40b564:	bl	409578 <wcrtomb@plt+0x66f8>
  40b568:	tst	w0, #0xff
  40b56c:	lsr	x22, x22, x28
  40b570:	and	w22, w22, #0x1
  40b574:	b.eq	40b5a0 <wcrtomb@plt+0x8720>  // b.none
  40b578:	ldr	x0, [x5, #56]
  40b57c:	cbnz	x0, 40b58c <wcrtomb@plt+0x870c>
  40b580:	add	x0, x5, #0x30
  40b584:	mov	x1, #0x1                   	// #1
  40b588:	bl	409650 <wcrtomb@plt+0x67d0>
  40b58c:	ldp	x0, x1, [sp, #96]
  40b590:	ldr	x2, [x27, #296]
  40b594:	add	x2, x2, x20
  40b598:	add	x2, x2, #0x30
  40b59c:	bl	40a244 <wcrtomb@plt+0x73c4>
  40b5a0:	cmp	w21, #0x1ff
  40b5a4:	b.ne	40b5b4 <wcrtomb@plt+0x8734>  // b.any
  40b5a8:	cbnz	w22, 40b4b8 <wcrtomb@plt+0x8638>
  40b5ac:	b	40b6ac <wcrtomb@plt+0x882c>
  40b5b0:	mov	w22, #0x1                   	// #1
  40b5b4:	ldr	x0, [x27, #296]
  40b5b8:	mov	w2, #0x4                   	// #4
  40b5bc:	add	x0, x0, x20
  40b5c0:	ldrb	w1, [x0, #32]
  40b5c4:	mov	w0, w21
  40b5c8:	bl	409578 <wcrtomb@plt+0x66f8>
  40b5cc:	tst	w0, #0xff
  40b5d0:	b.eq	40b674 <wcrtomb@plt+0x87f4>  // b.none
  40b5d4:	mov	w0, w21
  40b5d8:	mov	w2, #0x2                   	// #2
  40b5dc:	bl	409578 <wcrtomb@plt+0x66f8>
  40b5e0:	tst	w0, #0xff
  40b5e4:	b.ne	40b60c <wcrtomb@plt+0x878c>  // b.any
  40b5e8:	mov	x2, x24
  40b5ec:	add	x0, x27, #0x3d0
  40b5f0:	add	x6, x27, #0x3f0
  40b5f4:	ldr	x5, [x0], #8
  40b5f8:	ldr	x7, [x2]
  40b5fc:	cmp	x6, x0
  40b600:	bic	x5, x7, x5
  40b604:	str	x5, [x2], #8
  40b608:	b.ne	40b5f4 <wcrtomb@plt+0x8774>  // b.any
  40b60c:	mov	w0, w21
  40b610:	mov	w2, #0x1                   	// #1
  40b614:	bl	409578 <wcrtomb@plt+0x66f8>
  40b618:	tst	w0, #0xff
  40b61c:	b.ne	40b650 <wcrtomb@plt+0x87d0>  // b.any
  40b620:	mov	x1, x24
  40b624:	add	x0, x27, #0x3d0
  40b628:	add	x6, x27, #0x3f0
  40b62c:	ldr	x2, [x0]
  40b630:	add	x0, x0, #0x8
  40b634:	ldr	x5, [x0, #24]
  40b638:	cmp	x6, x0
  40b63c:	orr	x5, x2, x5
  40b640:	ldr	x2, [x1]
  40b644:	and	x2, x2, x5
  40b648:	str	x2, [x1], #8
  40b64c:	b.ne	40b62c <wcrtomb@plt+0x87ac>  // b.any
  40b650:	ldp	x0, x1, [x24]
  40b654:	ldr	x2, [x24, #24]
  40b658:	orr	x0, x0, x1
  40b65c:	ldr	x1, [x24, #16]
  40b660:	orr	x1, x1, x2
  40b664:	orr	x0, x0, x1
  40b668:	cbnz	x0, 40b69c <wcrtomb@plt+0x881c>
  40b66c:	add	x26, x26, #0x1
  40b670:	b	40b26c <wcrtomb@plt+0x83ec>
  40b674:	mov	x2, x24
  40b678:	add	x0, x27, #0x3f0
  40b67c:	add	x6, x27, #0x410
  40b680:	ldr	x5, [x0], #8
  40b684:	ldr	x7, [x2]
  40b688:	cmp	x6, x0
  40b68c:	bic	x5, x7, x5
  40b690:	str	x5, [x2], #8
  40b694:	b.ne	40b680 <wcrtomb@plt+0x8800>  // b.any
  40b698:	b	40b5d4 <wcrtomb@plt+0x8754>
  40b69c:	mov	w0, w25
  40b6a0:	ldr	x0, [x24, x0, lsl #3]
  40b6a4:	lsr	x0, x0, x28
  40b6a8:	tbnz	w0, #0, 40b5a8 <wcrtomb@plt+0x8728>
  40b6ac:	add	x1, sp, #0xb0
  40b6b0:	mov	x0, #0x0                   	// #0
  40b6b4:	ldr	x2, [x0, x24]
  40b6b8:	add	x0, x0, #0x8
  40b6bc:	ldr	x5, [x1]
  40b6c0:	cmp	x0, #0x20
  40b6c4:	bic	x2, x5, x2
  40b6c8:	str	x2, [x1], #8
  40b6cc:	b.ne	40b6b4 <wcrtomb@plt+0x8834>  // b.any
  40b6d0:	b	40b66c <wcrtomb@plt+0x87ec>
  40b6d4:	mov	x21, #0xffffffffffffffff    	// #-1
  40b6d8:	b	40b36c <wcrtomb@plt+0x84ec>
  40b6dc:	mov	x22, x21
  40b6e0:	b	40b388 <wcrtomb@plt+0x8508>
  40b6e4:	mov	x20, x21
  40b6e8:	b	40b3a0 <wcrtomb@plt+0x8520>
  40b6ec:	cbz	w0, 40b708 <wcrtomb@plt+0x8888>
  40b6f0:	ldr	w20, [x27, #364]
  40b6f4:	mov	x22, #0x0                   	// #0
  40b6f8:	ldr	x21, [x27, #400]
  40b6fc:	sub	w20, w20, #0x1
  40b700:	sxtw	x20, w20
  40b704:	b	40b3a8 <wcrtomb@plt+0x8528>
  40b708:	mov	x20, #0xffffffffffffffff    	// #-1
  40b70c:	mov	x22, x20
  40b710:	mov	x21, x20
  40b714:	b	40b3a8 <wcrtomb@plt+0x8528>
  40b718:	str	x20, [x19, x1, lsl #3]
  40b71c:	b	40b3dc <wcrtomb@plt+0x855c>
  40b720:	stp	x29, x30, [sp, #-96]!
  40b724:	mov	x29, sp
  40b728:	stp	x23, x24, [sp, #48]
  40b72c:	mov	x23, x2
  40b730:	mov	x2, x3
  40b734:	stp	x19, x20, [sp, #16]
  40b738:	mov	x20, x1
  40b73c:	mov	x19, x0
  40b740:	stp	x21, x22, [sp, #32]
  40b744:	mov	x21, x1
  40b748:	mov	x3, x0
  40b74c:	ldr	x1, [x23]
  40b750:	add	x0, sp, #0x5c
  40b754:	stp	x25, x26, [sp, #64]
  40b758:	mov	w25, #0x0                   	// #0
  40b75c:	sub	x2, x2, x1
  40b760:	bl	409748 <wcrtomb@plt+0x68c8>
  40b764:	mov	w24, w0
  40b768:	str	xzr, [x19, #416]
  40b76c:	cmp	w25, w24
  40b770:	ldr	x0, [x23]
  40b774:	b.ge	40b788 <wcrtomb@plt+0x8908>  // b.tcont
  40b778:	cbz	w25, 40b878 <wcrtomb@plt+0x89f8>
  40b77c:	ldrsw	x1, [x19, #364]
  40b780:	cmp	x1, x21
  40b784:	b.le	40b878 <wcrtomb@plt+0x89f8>
  40b788:	sub	w24, w24, w25
  40b78c:	add	x24, x0, w24, sxtw
  40b790:	ldr	w0, [sp, #92]
  40b794:	str	x24, [x23]
  40b798:	cmn	w0, #0x1
  40b79c:	b.eq	40b9cc <wcrtomb@plt+0x8b4c>  // b.none
  40b7a0:	mov	x1, #0x50                  	// #80
  40b7a4:	ldr	x0, [x19, #296]
  40b7a8:	mul	x20, x20, x1
  40b7ac:	add	x0, x0, x20
  40b7b0:	ldr	x0, [x0, #72]
  40b7b4:	tbz	x0, #63, 40b7dc <wcrtomb@plt+0x895c>
  40b7b8:	ldr	x0, [x19, #440]
  40b7bc:	cmp	x0, #0x3ff
  40b7c0:	b.gt	40b968 <wcrtomb@plt+0x8ae8>
  40b7c4:	ldr	x1, [x19, #440]
  40b7c8:	add	x0, x1, #0x1
  40b7cc:	str	x0, [x19, #440]
  40b7d0:	ldr	x0, [x19, #296]
  40b7d4:	add	x0, x0, x20
  40b7d8:	str	x1, [x0, #72]
  40b7dc:	ldr	x22, [x19, #432]
  40b7e0:	lsl	x23, x21, #3
  40b7e4:	ldr	x1, [x22, x23]
  40b7e8:	cbnz	x1, 40b980 <wcrtomb@plt+0x8b00>
  40b7ec:	mov	x0, #0x2000                	// #8192
  40b7f0:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40b7f4:	str	x0, [x22, x23]
  40b7f8:	mov	x2, #0xffffffffffffffff    	// #-1
  40b7fc:	ldr	x0, [x19, #432]
  40b800:	ldr	x1, [x0, x23]
  40b804:	mov	x0, #0x0                   	// #0
  40b808:	str	x2, [x1, x0, lsl #3]
  40b80c:	add	x0, x0, #0x1
  40b810:	cmp	x0, #0x400
  40b814:	b.ne	40b808 <wcrtomb@plt+0x8988>  // b.any
  40b818:	ldr	x2, [x19, #296]
  40b81c:	add	x22, x19, #0x198
  40b820:	cmn	x21, #0x1
  40b824:	add	x0, x2, x20
  40b828:	add	x0, x0, #0x30
  40b82c:	b.ne	40b9b0 <wcrtomb@plt+0x8b30>  // b.any
  40b830:	mov	x1, x22
  40b834:	bl	409edc <wcrtomb@plt+0x705c>
  40b838:	mov	x1, x22
  40b83c:	add	x0, x19, #0x158
  40b840:	bl	40a118 <wcrtomb@plt+0x7298>
  40b844:	eor	w2, w0, #0x7
  40b848:	mov	x0, x19
  40b84c:	bl	40a37c <wcrtomb@plt+0x74fc>
  40b850:	mov	x22, x0
  40b854:	mov	x0, x19
  40b858:	bl	4099d0 <wcrtomb@plt+0x6b50>
  40b85c:	ldr	x1, [x19, #296]
  40b860:	ldr	x0, [x19, #432]
  40b864:	add	x20, x1, x20
  40b868:	ldr	x0, [x0, x23]
  40b86c:	ldr	x1, [x20, #72]
  40b870:	str	x22, [x0, x1, lsl #3]
  40b874:	b	40b994 <wcrtomb@plt+0x8b14>
  40b878:	ldr	x1, [x19, #368]
  40b87c:	lsl	x26, x21, #3
  40b880:	ldr	x22, [x1, x26]
  40b884:	cbnz	x22, 40b8e0 <wcrtomb@plt+0x8a60>
  40b888:	ldr	x1, [x19, #376]
  40b88c:	ldr	x22, [x1, x26]
  40b890:	cbnz	x22, 40b8e0 <wcrtomb@plt+0x8a60>
  40b894:	ldrb	w2, [x0]
  40b898:	mov	x1, x19
  40b89c:	mov	x0, x21
  40b8a0:	bl	40b04c <wcrtomb@plt+0x81cc>
  40b8a4:	ldr	x0, [x19, #368]
  40b8a8:	ldr	x22, [x0, x26]
  40b8ac:	cbnz	x22, 40b8e0 <wcrtomb@plt+0x8a60>
  40b8b0:	ldr	x0, [x19, #376]
  40b8b4:	ldr	x22, [x0, x26]
  40b8b8:	cbnz	x22, 40b8e0 <wcrtomb@plt+0x8a60>
  40b8bc:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40b8c0:	add	x3, x3, #0x7b0
  40b8c4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40b8c8:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40b8cc:	add	x3, x3, #0xc
  40b8d0:	add	x1, x1, #0x59e
  40b8d4:	add	x0, x0, #0x6e2
  40b8d8:	mov	w2, #0xc93                 	// #3219
  40b8dc:	bl	402de0 <__assert_fail@plt>
  40b8e0:	ldr	x0, [x23]
  40b8e4:	ldrb	w2, [x0]
  40b8e8:	ldrb	w0, [x0]
  40b8ec:	ldr	x0, [x22, x0, lsl #3]
  40b8f0:	cmn	x0, #0x2
  40b8f4:	b.ne	40b904 <wcrtomb@plt+0x8a84>  // b.any
  40b8f8:	mov	x1, x19
  40b8fc:	mov	x0, x21
  40b900:	bl	40b04c <wcrtomb@plt+0x81cc>
  40b904:	ldr	x0, [x23]
  40b908:	add	w25, w25, #0x1
  40b90c:	add	x1, x0, #0x1
  40b910:	str	x1, [x23]
  40b914:	ldrb	w0, [x0]
  40b918:	ldr	x21, [x22, x0, lsl #3]
  40b91c:	b	40b76c <wcrtomb@plt+0x88ec>
  40b920:	lsl	x23, x22, #3
  40b924:	add	x22, x22, #0x1
  40b928:	ldr	x0, [x1, x23]
  40b92c:	bl	402c20 <free@plt>
  40b930:	ldr	x0, [x19, #432]
  40b934:	str	xzr, [x0, x23]
  40b938:	ldr	x0, [x19, #352]
  40b93c:	ldr	x1, [x19, #432]
  40b940:	cmp	x0, x22
  40b944:	b.gt	40b920 <wcrtomb@plt+0x8aa0>
  40b948:	ldp	x2, x1, [x19, #296]
  40b94c:	mov	x0, #0x0                   	// #0
  40b950:	mov	x3, #0x50                  	// #80
  40b954:	mov	x4, #0xffffffffffffffff    	// #-1
  40b958:	cmp	x1, x0
  40b95c:	b.gt	40b970 <wcrtomb@plt+0x8af0>
  40b960:	str	xzr, [x19, #440]
  40b964:	b	40b7c4 <wcrtomb@plt+0x8944>
  40b968:	mov	x22, #0xffffffffffffffff    	// #-1
  40b96c:	b	40b938 <wcrtomb@plt+0x8ab8>
  40b970:	madd	x5, x0, x3, x2
  40b974:	add	x0, x0, #0x1
  40b978:	str	x4, [x5, #72]
  40b97c:	b	40b958 <wcrtomb@plt+0x8ad8>
  40b980:	ldr	x0, [x19, #296]
  40b984:	add	x0, x0, x20
  40b988:	ldr	x0, [x0, #72]
  40b98c:	ldr	x22, [x1, x0, lsl #3]
  40b990:	tbnz	x22, #63, 40b818 <wcrtomb@plt+0x8998>
  40b994:	mov	x0, x22
  40b998:	ldp	x19, x20, [sp, #16]
  40b99c:	ldp	x21, x22, [sp, #32]
  40b9a0:	ldp	x23, x24, [sp, #48]
  40b9a4:	ldp	x25, x26, [sp, #64]
  40b9a8:	ldp	x29, x30, [sp], #96
  40b9ac:	ret
  40b9b0:	mov	x1, #0x50                  	// #80
  40b9b4:	mov	x3, x22
  40b9b8:	madd	x1, x21, x1, x2
  40b9bc:	mov	w2, #0xffffffff            	// #-1
  40b9c0:	add	x1, x1, #0x8
  40b9c4:	bl	409ca8 <wcrtomb@plt+0x6e28>
  40b9c8:	b	40b838 <wcrtomb@plt+0x89b8>
  40b9cc:	mov	x22, x21
  40b9d0:	b	40b994 <wcrtomb@plt+0x8b14>
  40b9d4:	stp	x29, x30, [sp, #-144]!
  40b9d8:	mov	x29, sp
  40b9dc:	stp	x27, x28, [sp, #80]
  40b9e0:	mov	x27, x0
  40b9e4:	and	w0, w3, #0xff
  40b9e8:	str	w0, [sp, #116]
  40b9ec:	mov	x28, x1
  40b9f0:	ldr	x0, [x27, #304]
  40b9f4:	stp	x19, x20, [sp, #16]
  40b9f8:	mov	x19, x2
  40b9fc:	stp	x21, x22, [sp, #32]
  40ba00:	cmp	x0, #0x3ff
  40ba04:	mov	x21, x4
  40ba08:	stp	x23, x24, [sp, #48]
  40ba0c:	and	w22, w5, #0xff
  40ba10:	stp	x25, x26, [sp, #64]
  40ba14:	b.le	40ba4c <wcrtomb@plt+0x8bcc>
  40ba18:	ldrsw	x20, [x27, #364]
  40ba1c:	mov	x24, #0x50                  	// #80
  40ba20:	ldr	x0, [x27, #304]
  40ba24:	cmp	x0, x20
  40ba28:	b.gt	40baec <wcrtomb@plt+0x8c6c>
  40ba2c:	ldrsw	x0, [x27, #364]
  40ba30:	str	x0, [x27, #304]
  40ba34:	ldr	x0, [x27, #368]
  40ba38:	cbnz	x0, 40bb5c <wcrtomb@plt+0x8cdc>
  40ba3c:	ldrb	w0, [x27, #1048]
  40ba40:	cbz	w0, 40ba4c <wcrtomb@plt+0x8bcc>
  40ba44:	ldr	x0, [x27, #432]
  40ba48:	cbnz	x0, 40bbac <wcrtomb@plt+0x8d2c>
  40ba4c:	ldr	x0, [x27, #352]
  40ba50:	cbnz	x0, 40ba5c <wcrtomb@plt+0x8bdc>
  40ba54:	mov	x0, x27
  40ba58:	bl	4099d0 <wcrtomb@plt+0x6b50>
  40ba5c:	ldrb	w0, [x27, #459]
  40ba60:	str	w0, [sp, #100]
  40ba64:	ldrb	w0, [x19]
  40ba68:	str	w0, [sp, #112]
  40ba6c:	ldrb	w0, [sp, #100]
  40ba70:	str	x28, [sp, #136]
  40ba74:	ldr	x20, [x27, #368]
  40ba78:	strb	w0, [x19]
  40ba7c:	cbz	w22, 40ba98 <wcrtomb@plt+0x8c18>
  40ba80:	ldr	x0, [x27, #424]
  40ba84:	str	xzr, [x27, #272]
  40ba88:	cbnz	x0, 40ba98 <wcrtomb@plt+0x8c18>
  40ba8c:	ldr	x1, [x27, #176]
  40ba90:	add	x0, x27, #0x198
  40ba94:	bl	409650 <wcrtomb@plt+0x67d0>
  40ba98:	ldr	w1, [sp, #100]
  40ba9c:	mov	x23, #0x0                   	// #0
  40baa0:	mov	x0, #0x0                   	// #0
  40baa4:	mov	x24, #0x0                   	// #0
  40baa8:	add	x1, x27, w1, sxtw
  40baac:	str	x1, [sp, #120]
  40bab0:	ldr	x25, [x20, x24, lsl #3]
  40bab4:	cbnz	x25, 40bbc8 <wcrtomb@plt+0x8d48>
  40bab8:	mov	x26, x24
  40babc:	mov	x24, x0
  40bac0:	ldr	x25, [sp, #136]
  40bac4:	tbz	x26, #63, 40bdd4 <wcrtomb@plt+0x8f54>
  40bac8:	cmn	x26, #0x2
  40bacc:	b.ne	40bd38 <wcrtomb@plt+0x8eb8>  // b.any
  40bad0:	ldurb	w2, [x25, #-1]
  40bad4:	mov	x1, x27
  40bad8:	mov	x0, x24
  40badc:	bl	40b04c <wcrtomb@plt+0x81cc>
  40bae0:	mov	x26, x0
  40bae4:	ldr	x20, [x27, #368]
  40bae8:	b	40bcd4 <wcrtomb@plt+0x8e54>
  40baec:	ldr	x0, [x27, #296]
  40baf0:	mul	x23, x20, x24
  40baf4:	add	x20, x20, #0x1
  40baf8:	add	x0, x0, x23
  40bafc:	ldr	x0, [x0, #8]
  40bb00:	bl	402c20 <free@plt>
  40bb04:	ldr	x0, [x27, #296]
  40bb08:	add	x0, x0, x23
  40bb0c:	ldr	x0, [x0, #48]
  40bb10:	bl	402c20 <free@plt>
  40bb14:	b	40ba20 <wcrtomb@plt+0x8ba0>
  40bb18:	ldr	x0, [x27, #368]
  40bb1c:	lsl	x23, x20, #3
  40bb20:	add	x20, x20, #0x1
  40bb24:	ldr	x0, [x0, x23]
  40bb28:	bl	402c20 <free@plt>
  40bb2c:	ldr	x0, [x27, #376]
  40bb30:	ldr	x0, [x0, x23]
  40bb34:	bl	402c20 <free@plt>
  40bb38:	ldr	x0, [x27, #376]
  40bb3c:	str	xzr, [x0, x23]
  40bb40:	ldr	x0, [x27, #368]
  40bb44:	str	xzr, [x0, x23]
  40bb48:	ldr	x0, [x27, #352]
  40bb4c:	cmp	x0, x20
  40bb50:	b.gt	40bb18 <wcrtomb@plt+0x8c98>
  40bb54:	str	wzr, [x27, #360]
  40bb58:	b	40ba3c <wcrtomb@plt+0x8bbc>
  40bb5c:	mov	x20, #0x0                   	// #0
  40bb60:	b	40bb48 <wcrtomb@plt+0x8cc8>
  40bb64:	ldr	x0, [x27, #432]
  40bb68:	lsl	x23, x20, #3
  40bb6c:	add	x20, x20, #0x1
  40bb70:	ldr	x0, [x0, x23]
  40bb74:	bl	402c20 <free@plt>
  40bb78:	ldr	x0, [x27, #432]
  40bb7c:	str	xzr, [x0, x23]
  40bb80:	ldr	x0, [x27, #352]
  40bb84:	cmp	x0, x20
  40bb88:	b.gt	40bb64 <wcrtomb@plt+0x8ce4>
  40bb8c:	ldrsw	x2, [x27, #364]
  40bb90:	mov	x0, #0x0                   	// #0
  40bb94:	mov	x3, #0x50                  	// #80
  40bb98:	mov	x4, #0xffffffffffffffff    	// #-1
  40bb9c:	cmp	x2, x0
  40bba0:	b.gt	40bbb4 <wcrtomb@plt+0x8d34>
  40bba4:	str	xzr, [x27, #440]
  40bba8:	b	40ba4c <wcrtomb@plt+0x8bcc>
  40bbac:	mov	x20, #0xffffffffffffffff    	// #-1
  40bbb0:	b	40bb80 <wcrtomb@plt+0x8d00>
  40bbb4:	ldr	x1, [x27, #296]
  40bbb8:	madd	x1, x0, x3, x1
  40bbbc:	add	x0, x0, #0x1
  40bbc0:	str	x4, [x1, #72]
  40bbc4:	b	40bb9c <wcrtomb@plt+0x8d1c>
  40bbc8:	ldrsw	x1, [x27, #364]
  40bbcc:	cmp	x1, x24
  40bbd0:	b.le	40bcdc <wcrtomb@plt+0x8e5c>
  40bbd4:	cbz	w22, 40bc10 <wcrtomb@plt+0x8d90>
  40bbd8:	ldr	x2, [x27, #296]
  40bbdc:	mov	x0, #0x50                  	// #80
  40bbe0:	madd	x0, x24, x0, x2
  40bbe4:	ldr	x0, [x0, #56]
  40bbe8:	cbz	x0, 40bc10 <wcrtomb@plt+0x8d90>
  40bbec:	ldr	x26, [sp, #136]
  40bbf0:	ldrb	w0, [x26]
  40bbf4:	add	x0, x27, x0
  40bbf8:	ldrb	w0, [x0, #716]
  40bbfc:	cbz	w0, 40bc84 <wcrtomb@plt+0x8e04>
  40bc00:	mov	x28, x26
  40bc04:	b	40bc8c <wcrtomb@plt+0x8e0c>
  40bc08:	add	x0, x0, #0x1
  40bc0c:	str	x0, [sp, #136]
  40bc10:	ldr	x0, [sp, #136]
  40bc14:	ldrb	w2, [x0]
  40bc18:	ldr	x2, [x25, x2, lsl #3]
  40bc1c:	cmp	x2, x24
  40bc20:	b.eq	40bc08 <wcrtomb@plt+0x8d88>  // b.none
  40bc24:	cbnz	w22, 40bbec <wcrtomb@plt+0x8d6c>
  40bc28:	ldr	x0, [sp, #136]
  40bc2c:	add	x2, x0, #0x1
  40bc30:	str	x2, [sp, #136]
  40bc34:	ldrb	w0, [x0]
  40bc38:	ldr	x26, [x25, x0, lsl #3]
  40bc3c:	ldr	x0, [x20, x26, lsl #3]
  40bc40:	cbz	x0, 40bac0 <wcrtomb@plt+0x8c40>
  40bc44:	cmp	x1, x24
  40bc48:	b.gt	40bd18 <wcrtomb@plt+0x8e98>
  40bc4c:	ldr	x1, [sp, #136]
  40bc50:	mov	x24, x26
  40bc54:	mov	x25, x28
  40bc58:	add	x2, x1, #0x1
  40bc5c:	str	x2, [sp, #136]
  40bc60:	ldrb	w1, [x1]
  40bc64:	ldr	x26, [x0, x1, lsl #3]
  40bc68:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bc6c:	sub	x2, x19, x28
  40bc70:	mov	x1, x28
  40bc74:	mov	x3, x27
  40bc78:	add	x0, sp, #0x84
  40bc7c:	bl	409748 <wcrtomb@plt+0x68c8>
  40bc80:	add	x28, x28, w0, sxtw
  40bc84:	cmp	x26, x28
  40bc88:	b.hi	40bc6c <wcrtomb@plt+0x8dec>  // b.pmore
  40bc8c:	str	x28, [sp, #136]
  40bc90:	ldr	x2, [x27, #296]
  40bc94:	mov	x1, #0x50                  	// #80
  40bc98:	ldr	x0, [sp, #136]
  40bc9c:	madd	x1, x24, x1, x2
  40bca0:	ldr	x1, [x1, #56]
  40bca4:	cbz	x1, 40bcc4 <wcrtomb@plt+0x8e44>
  40bca8:	ldrb	w1, [x0]
  40bcac:	add	x1, x27, x1, lsl #2
  40bcb0:	ldr	w1, [x1, #1308]
  40bcb4:	cmn	w1, #0x1
  40bcb8:	b.ne	40bcc4 <wcrtomb@plt+0x8e44>  // b.any
  40bcbc:	cmp	x19, x0
  40bcc0:	b.hi	40bce4 <wcrtomb@plt+0x8e64>  // b.pmore
  40bcc4:	add	x1, x0, #0x1
  40bcc8:	str	x1, [sp, #136]
  40bccc:	ldrb	w0, [x0]
  40bcd0:	ldr	x26, [x25, x0, lsl #3]
  40bcd4:	mov	x25, x28
  40bcd8:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bcdc:	cbnz	w22, 40bc90 <wcrtomb@plt+0x8e10>
  40bce0:	b	40bc28 <wcrtomb@plt+0x8da8>
  40bce4:	mov	x3, x19
  40bce8:	add	x2, sp, #0x88
  40bcec:	mov	x1, x24
  40bcf0:	mov	x0, x27
  40bcf4:	bl	40b720 <wcrtomb@plt+0x88a0>
  40bcf8:	mov	x26, x0
  40bcfc:	ldr	x25, [sp, #136]
  40bd00:	ldr	x20, [x27, #368]
  40bd04:	mov	x0, x24
  40bd08:	mov	x28, x25
  40bd0c:	mov	x24, x26
  40bd10:	b	40bab0 <wcrtomb@plt+0x8c30>
  40bd14:	str	x1, [sp, #136]
  40bd18:	ldr	x1, [sp, #136]
  40bd1c:	ldrb	w2, [x1], #1
  40bd20:	ldr	x2, [x0, x2, lsl #3]
  40bd24:	cmp	x2, x26
  40bd28:	b.eq	40bd14 <wcrtomb@plt+0x8e94>  // b.none
  40bd2c:	b	40bc4c <wcrtomb@plt+0x8dcc>
  40bd30:	mov	x26, #0x0                   	// #0
  40bd34:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bd38:	cmp	x19, x25
  40bd3c:	b.cc	40bd98 <wcrtomb@plt+0x8f18>  // b.lo, b.ul, b.last
  40bd40:	ldurb	w0, [x25, #-1]
  40bd44:	ldr	w1, [sp, #100]
  40bd48:	cmp	w0, w1
  40bd4c:	b.ne	40bd98 <wcrtomb@plt+0x8f18>  // b.any
  40bd50:	ldr	x0, [x27, #392]
  40bd54:	ldr	x26, [x0, x24, lsl #3]
  40bd58:	tbnz	x26, #63, 40bd98 <wcrtomb@plt+0x8f18>
  40bd5c:	ldr	w0, [sp, #116]
  40bd60:	add	x23, x23, #0x1
  40bd64:	cbnz	w0, 40bd04 <wcrtomb@plt+0x8e84>
  40bd68:	ldr	x0, [sp, #120]
  40bd6c:	ldrb	w0, [x0, #460]
  40bd70:	cmp	w0, #0x4
  40bd74:	b.eq	40bd30 <wcrtomb@plt+0x8eb0>  // b.none
  40bd78:	cmp	w0, #0x2
  40bd7c:	b.ne	40bd90 <wcrtomb@plt+0x8f10>  // b.any
  40bd80:	ldr	w4, [x27, #364]
  40bd84:	sub	w4, w4, #0x1
  40bd88:	sxtw	x26, w4
  40bd8c:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bd90:	ldr	x26, [x27, #400]
  40bd94:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bd98:	str	xzr, [sp, #136]
  40bd9c:	cbz	x21, 40bdac <wcrtomb@plt+0x8f2c>
  40bda0:	ldr	x0, [x21]
  40bda4:	add	x23, x0, x23
  40bda8:	str	x23, [x21]
  40bdac:	ldrb	w0, [sp, #112]
  40bdb0:	strb	w0, [x19]
  40bdb4:	ldr	x0, [sp, #136]
  40bdb8:	ldp	x19, x20, [sp, #16]
  40bdbc:	ldp	x21, x22, [sp, #32]
  40bdc0:	ldp	x23, x24, [sp, #48]
  40bdc4:	ldp	x25, x26, [sp, #64]
  40bdc8:	ldp	x27, x28, [sp, #80]
  40bdcc:	ldp	x29, x30, [sp], #144
  40bdd0:	ret
  40bdd4:	lsl	x0, x26, #3
  40bdd8:	str	x0, [sp, #104]
  40bddc:	ldr	x0, [x27, #376]
  40bde0:	lsl	x1, x26, #3
  40bde4:	ldrb	w2, [x25]
  40bde8:	ldr	x0, [x0, x1]
  40bdec:	cbz	x0, 40bf0c <wcrtomb@plt+0x908c>
  40bdf0:	ldr	x0, [x27, #384]
  40bdf4:	sxtw	x5, w2
  40bdf8:	add	x2, x27, w2, sxtw
  40bdfc:	ldrb	w0, [x0, x26]
  40be00:	ldrb	w1, [x2, #460]
  40be04:	and	w0, w0, w1
  40be08:	tst	w0, #0xff
  40be0c:	b.ne	40bd9c <wcrtomb@plt+0x8f1c>  // b.any
  40be10:	cmp	x19, x25
  40be14:	b.ne	40be3c <wcrtomb@plt+0x8fbc>  // b.any
  40be18:	ldr	x1, [x27, #296]
  40be1c:	mov	x0, #0x50                  	// #80
  40be20:	mov	w2, #0x4                   	// #4
  40be24:	madd	x0, x26, x0, x1
  40be28:	ldrb	w1, [x0, #32]
  40be2c:	ldrh	w0, [x0, #34]
  40be30:	bl	409578 <wcrtomb@plt+0x66f8>
  40be34:	tst	w0, #0xff
  40be38:	b.ne	40bd9c <wcrtomb@plt+0x8f1c>  // b.any
  40be3c:	cbz	w22, 40beb8 <wcrtomb@plt+0x9038>
  40be40:	ldrsw	x0, [x27, #364]
  40be44:	cmp	x0, x26
  40be48:	b.le	40be84 <wcrtomb@plt+0x9004>
  40be4c:	add	x5, x27, x5
  40be50:	ldrb	w0, [x5, #716]
  40be54:	cbz	w0, 40be78 <wcrtomb@plt+0x8ff8>
  40be58:	mov	x28, x25
  40be5c:	b	40be80 <wcrtomb@plt+0x9000>
  40be60:	sub	x2, x19, x28
  40be64:	mov	x1, x28
  40be68:	mov	x3, x27
  40be6c:	add	x0, sp, #0x84
  40be70:	bl	409748 <wcrtomb@plt+0x68c8>
  40be74:	add	x28, x28, w0, sxtw
  40be78:	cmp	x28, x25
  40be7c:	b.cc	40be60 <wcrtomb@plt+0x8fe0>  // b.lo, b.ul, b.last
  40be80:	str	x28, [sp, #136]
  40be84:	ldr	x1, [x27, #296]
  40be88:	mov	x0, #0x50                  	// #80
  40be8c:	madd	x0, x26, x0, x1
  40be90:	ldr	x0, [x0, #56]
  40be94:	cbz	x0, 40beb8 <wcrtomb@plt+0x9038>
  40be98:	ldr	x1, [sp, #136]
  40be9c:	ldrb	w0, [x1]
  40bea0:	add	x0, x27, x0, lsl #2
  40bea4:	ldr	w0, [x0, #1308]
  40bea8:	cmn	w0, #0x1
  40beac:	b.ne	40beb8 <wcrtomb@plt+0x9038>  // b.any
  40beb0:	cmp	x19, x1
  40beb4:	b.hi	40bee4 <wcrtomb@plt+0x9064>  // b.pmore
  40beb8:	ldr	x1, [sp, #104]
  40bebc:	mov	x24, x26
  40bec0:	ldr	x0, [x27, #376]
  40bec4:	mov	x25, x28
  40bec8:	ldr	x1, [x0, x1]
  40becc:	ldr	x0, [sp, #136]
  40bed0:	add	x2, x0, #0x1
  40bed4:	str	x2, [sp, #136]
  40bed8:	ldrb	w0, [x0]
  40bedc:	ldr	x26, [x1, x0, lsl #3]
  40bee0:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bee4:	mov	x1, x26
  40bee8:	mov	x3, x19
  40beec:	add	x2, sp, #0x88
  40bef0:	mov	x0, x27
  40bef4:	mov	x24, x26
  40bef8:	bl	40b720 <wcrtomb@plt+0x88a0>
  40befc:	mov	x26, x0
  40bf00:	ldr	x25, [sp, #136]
  40bf04:	ldr	x20, [x27, #368]
  40bf08:	b	40bd04 <wcrtomb@plt+0x8e84>
  40bf0c:	mov	x1, x27
  40bf10:	mov	x0, x26
  40bf14:	bl	40b04c <wcrtomb@plt+0x81cc>
  40bf18:	b	40bae4 <wcrtomb@plt+0x8c64>
  40bf1c:	mov	w5, #0x0                   	// #0
  40bf20:	b	40b9d4 <wcrtomb@plt+0x8b54>
  40bf24:	mov	w5, #0x1                   	// #1
  40bf28:	b	40b9d4 <wcrtomb@plt+0x8b54>
  40bf2c:	stp	x29, x30, [sp, #-304]!
  40bf30:	mov	x29, sp
  40bf34:	stp	x19, x20, [sp, #16]
  40bf38:	stp	x21, x22, [sp, #32]
  40bf3c:	stp	x23, x24, [sp, #48]
  40bf40:	stp	x25, x26, [sp, #64]
  40bf44:	mov	x26, x0
  40bf48:	stp	x27, x28, [sp, #80]
  40bf4c:	str	xzr, [x0, #104]
  40bf50:	add	x0, sp, #0x88
  40bf54:	bl	40973c <wcrtomb@plt+0x68bc>
  40bf58:	mov	x0, x26
  40bf5c:	bl	40a154 <wcrtomb@plt+0x72d4>
  40bf60:	mov	w25, w0
  40bf64:	cmp	w0, #0x5e
  40bf68:	b.ne	40c00c <wcrtomb@plt+0x918c>  // b.any
  40bf6c:	mov	x0, x26
  40bf70:	bl	40a154 <wcrtomb@plt+0x72d4>
  40bf74:	ldrb	w24, [x26, #1049]
  40bf78:	mov	w19, w0
  40bf7c:	cmp	w19, #0x3a
  40bf80:	ldr	w20, [x26, #72]
  40bf84:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40bf88:	cset	w22, eq  // eq = none
  40bf8c:	add	x0, x0, #0x7b0
  40bf90:	add	x23, sp, #0xa8
  40bf94:	str	x0, [sp, #104]
  40bf98:	add	x0, x0, #0x28
  40bf9c:	str	x0, [sp, #112]
  40bfa0:	and	w22, w22, #0xfffffffd
  40bfa4:	cmp	w19, #0x5b
  40bfa8:	b.ne	40c214 <wcrtomb@plt+0x9394>  // b.any
  40bfac:	mov	x0, x26
  40bfb0:	bl	40a154 <wcrtomb@plt+0x72d4>
  40bfb4:	ldr	w1, [x26, #72]
  40bfb8:	mov	w21, w0
  40bfbc:	cmp	w0, #0x3a
  40bfc0:	b.ne	40c018 <wcrtomb@plt+0x9198>  // b.any
  40bfc4:	ldr	x0, [x26, #448]
  40bfc8:	tbz	w0, #2, 40c2c0 <wcrtomb@plt+0x9440>
  40bfcc:	mov	w19, #0x0                   	// #0
  40bfd0:	mov	x0, x26
  40bfd4:	bl	40a154 <wcrtomb@plt+0x72d4>
  40bfd8:	ldr	x1, [x26, #40]
  40bfdc:	cbz	x1, 40c04c <wcrtomb@plt+0x91cc>
  40bfe0:	cmp	w21, w0
  40bfe4:	b.ne	40bff8 <wcrtomb@plt+0x9178>  // b.any
  40bfe8:	ldr	x1, [x26, #32]
  40bfec:	ldrb	w1, [x1]
  40bff0:	cmp	w1, #0x5d
  40bff4:	b.eq	40c04c <wcrtomb@plt+0x91cc>  // b.none
  40bff8:	cmp	w19, #0x1f
  40bffc:	b.gt	40c044 <wcrtomb@plt+0x91c4>
  40c000:	strb	w0, [x23, w19, sxtw]
  40c004:	add	w19, w19, #0x1
  40c008:	b	40bfd0 <wcrtomb@plt+0x9150>
  40c00c:	mov	w19, w0
  40c010:	mov	w24, #0x1                   	// #1
  40c014:	b	40bf7c <wcrtomb@plt+0x90fc>
  40c018:	cmp	w0, #0x2e
  40c01c:	mov	w0, #0x3d                  	// #61
  40c020:	ccmp	w21, w0, #0x4, ne  // ne = any
  40c024:	b.eq	40bfcc <wcrtomb@plt+0x914c>  // b.none
  40c028:	cmp	w21, #0x100
  40c02c:	b.eq	40c234 <wcrtomb@plt+0x93b4>  // b.none
  40c030:	cmp	w21, #0x2d
  40c034:	b.ne	40c2c0 <wcrtomb@plt+0x9440>  // b.any
  40c038:	mov	w28, w20
  40c03c:	mov	w27, w19
  40c040:	b	40c254 <wcrtomb@plt+0x93d4>
  40c044:	strb	wzr, [sp, #168]
  40c048:	b	40bfd0 <wcrtomb@plt+0x9150>
  40c04c:	mov	x0, x26
  40c050:	strb	wzr, [x23, w19, sxtw]
  40c054:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c058:	cmp	w21, #0x3a
  40c05c:	b.ne	40c20c <wcrtomb@plt+0x938c>  // b.any
  40c060:	ldrb	w0, [x26, #457]
  40c064:	cbz	w0, 40c0d4 <wcrtomb@plt+0x9254>
  40c068:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c06c:	mov	x0, x23
  40c070:	add	x1, x1, #0x5ae
  40c074:	bl	402bf0 <strcmp@plt>
  40c078:	cbz	w0, 40c0dc <wcrtomb@plt+0x925c>
  40c07c:	mov	x0, x23
  40c080:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c084:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c088:	add	x1, x1, #0x5b4
  40c08c:	add	x19, x19, #0x5a8
  40c090:	bl	402bf0 <strcmp@plt>
  40c094:	cmp	w0, #0x0
  40c098:	csel	x19, x19, x23, eq  // eq = none
  40c09c:	ldr	x0, [sp, #104]
  40c0a0:	mov	x2, #0x0                   	// #0
  40c0a4:	mov	x28, #0x18                  	// #24
  40c0a8:	add	x27, x0, #0x28
  40c0ac:	mul	x0, x2, x28
  40c0b0:	mov	w21, w2
  40c0b4:	ldr	x1, [x0, x27]
  40c0b8:	cbnz	x1, 40c0e8 <wcrtomb@plt+0x9268>
  40c0bc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c0c0:	add	x1, x1, #0x5ef
  40c0c4:	mov	w2, #0x5                   	// #5
  40c0c8:	mov	x0, #0x0                   	// #0
  40c0cc:	bl	402d60 <dcgettext@plt>
  40c0d0:	bl	4080d4 <wcrtomb@plt+0x5254>
  40c0d4:	mov	x19, x23
  40c0d8:	b	40c09c <wcrtomb@plt+0x921c>
  40c0dc:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c0e0:	add	x19, x19, #0x5a8
  40c0e4:	b	40c09c <wcrtomb@plt+0x921c>
  40c0e8:	mov	x0, x19
  40c0ec:	str	x2, [sp, #120]
  40c0f0:	bl	402bf0 <strcmp@plt>
  40c0f4:	mov	w20, w0
  40c0f8:	ldr	x2, [sp, #120]
  40c0fc:	add	x2, x2, #0x1
  40c100:	cbnz	w0, 40c0ac <wcrtomb@plt+0x922c>
  40c104:	ldrb	w1, [x26, #1048]
  40c108:	sxtw	x0, w21
  40c10c:	cbnz	w1, 40c14c <wcrtomb@plt+0x92cc>
  40c110:	ldr	x2, [sp, #112]
  40c114:	mov	x1, #0x18                  	// #24
  40c118:	madd	x0, x0, x1, x2
  40c11c:	ldr	x19, [x0, #8]
  40c120:	mov	w0, w20
  40c124:	blr	x19
  40c128:	cbz	w0, 40c138 <wcrtomb@plt+0x92b8>
  40c12c:	add	x1, sp, #0x88
  40c130:	mov	w0, w20
  40c134:	bl	4095b0 <wcrtomb@plt+0x6730>
  40c138:	add	w20, w20, #0x1
  40c13c:	cmp	w20, #0x100
  40c140:	b.ne	40c120 <wcrtomb@plt+0x92a0>  // b.any
  40c144:	mov	w21, w24
  40c148:	b	40c158 <wcrtomb@plt+0x92d8>
  40c14c:	madd	x28, x0, x28, x27
  40c150:	ldrb	w21, [x28, #16]
  40c154:	cbnz	w21, 40c110 <wcrtomb@plt+0x9290>
  40c158:	mov	x0, x26
  40c15c:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c160:	ldr	w20, [x26, #72]
  40c164:	orr	w22, w22, #0x8
  40c168:	mov	w19, w0
  40c16c:	mov	w24, w21
  40c170:	cmp	w19, #0x5d
  40c174:	b.ne	40bfa0 <wcrtomb@plt+0x9120>  // b.any
  40c178:	cmp	w22, #0x7
  40c17c:	b.ne	40c198 <wcrtomb@plt+0x9318>  // b.any
  40c180:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c184:	add	x1, x1, #0x5ba
  40c188:	mov	w2, #0x5                   	// #5
  40c18c:	mov	x0, #0x0                   	// #0
  40c190:	bl	402d60 <dcgettext@plt>
  40c194:	bl	4080ec <wcrtomb@plt+0x526c>
  40c198:	cbz	w24, 40c4d4 <wcrtomb@plt+0x9654>
  40c19c:	ldrb	w0, [x26, #1048]
  40c1a0:	cmp	w25, #0x5e
  40c1a4:	cbz	w0, 40c48c <wcrtomb@plt+0x960c>
  40c1a8:	b.eq	40c1b4 <wcrtomb@plt+0x9334>  // b.none
  40c1ac:	ldr	x0, [x26, #104]
  40c1b0:	cbz	x0, 40c4c0 <wcrtomb@plt+0x9640>
  40c1b4:	cmp	w25, #0x5e
  40c1b8:	cset	w0, eq  // eq = none
  40c1bc:	strb	w0, [x26, #88]
  40c1c0:	ldp	x0, x1, [sp, #136]
  40c1c4:	ldr	x2, [sp, #160]
  40c1c8:	orr	x0, x0, x1
  40c1cc:	ldr	x1, [sp, #152]
  40c1d0:	orr	x1, x1, x2
  40c1d4:	orr	x0, x0, x1
  40c1d8:	cbz	x0, 40c484 <wcrtomb@plt+0x9604>
  40c1dc:	add	x1, sp, #0x88
  40c1e0:	mov	x0, x26
  40c1e4:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40c1e8:	str	x0, [x26, #80]
  40c1ec:	mov	x0, #0x113                 	// #275
  40c1f0:	ldp	x19, x20, [sp, #16]
  40c1f4:	ldp	x21, x22, [sp, #32]
  40c1f8:	ldp	x23, x24, [sp, #48]
  40c1fc:	ldp	x25, x26, [sp, #64]
  40c200:	ldp	x27, x28, [sp, #80]
  40c204:	ldp	x29, x30, [sp], #304
  40c208:	ret
  40c20c:	mov	w21, #0x0                   	// #0
  40c210:	b	40c158 <wcrtomb@plt+0x92d8>
  40c214:	cmp	w19, #0x5c
  40c218:	b.ne	40c234 <wcrtomb@plt+0x93b4>  // b.any
  40c21c:	ldr	x0, [x26, #448]
  40c220:	tbz	w0, #0, 40c234 <wcrtomb@plt+0x93b4>
  40c224:	mov	x0, x26
  40c228:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c22c:	ldr	w20, [x26, #72]
  40c230:	mov	w19, w0
  40c234:	mov	x0, x26
  40c238:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c23c:	ldr	w1, [x26, #72]
  40c240:	mov	w21, w0
  40c244:	mov	w28, w20
  40c248:	mov	w27, w19
  40c24c:	cmp	w0, #0x2d
  40c250:	b.ne	40c2b0 <wcrtomb@plt+0x9430>  // b.any
  40c254:	mov	x0, x26
  40c258:	str	w1, [sp, #120]
  40c25c:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c260:	mov	w21, w0
  40c264:	ldr	w3, [x26, #72]
  40c268:	cmp	w0, #0x5b
  40c26c:	ldr	w1, [sp, #120]
  40c270:	b.ne	40c28c <wcrtomb@plt+0x940c>  // b.any
  40c274:	ldr	x0, [x26, #32]
  40c278:	ldrb	w0, [x0]
  40c27c:	cmp	w0, #0x2e
  40c280:	b.ne	40c2f8 <wcrtomb@plt+0x9478>  // b.any
  40c284:	mov	w24, #0x0                   	// #0
  40c288:	b	40c294 <wcrtomb@plt+0x9414>
  40c28c:	cmp	w0, #0x5d
  40c290:	b.ne	40c2d8 <wcrtomb@plt+0x9458>  // b.any
  40c294:	ldr	x0, [x26, #32]
  40c298:	mov	w21, #0x2d                  	// #45
  40c29c:	sub	x0, x0, #0x1
  40c2a0:	str	x0, [x26, #32]
  40c2a4:	ldr	x0, [x26, #40]
  40c2a8:	add	x0, x0, #0x1
  40c2ac:	str	x0, [x26, #40]
  40c2b0:	cmp	w27, #0x3a
  40c2b4:	b.eq	40c3a8 <wcrtomb@plt+0x9528>  // b.none
  40c2b8:	mov	w20, w28
  40c2bc:	mov	w19, w27
  40c2c0:	mov	w28, w20
  40c2c4:	mov	w27, w19
  40c2c8:	mov	w20, w1
  40c2cc:	mov	w19, w21
  40c2d0:	mov	w0, #0x4                   	// #4
  40c2d4:	b	40c3b4 <wcrtomb@plt+0x9534>
  40c2d8:	cmp	w0, #0x5c
  40c2dc:	b.ne	40c2f8 <wcrtomb@plt+0x9478>  // b.any
  40c2e0:	ldr	x0, [x26, #448]
  40c2e4:	tbz	w0, #0, 40c2f8 <wcrtomb@plt+0x9478>
  40c2e8:	mov	x0, x26
  40c2ec:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c2f0:	ldr	w3, [x26, #72]
  40c2f4:	mov	w21, w0
  40c2f8:	mov	x0, x26
  40c2fc:	str	w3, [sp, #120]
  40c300:	bl	40a154 <wcrtomb@plt+0x72d4>
  40c304:	orr	w22, w22, #0x8
  40c308:	ldr	w3, [sp, #120]
  40c30c:	mov	w19, w0
  40c310:	ldr	w20, [x26, #72]
  40c314:	cmp	w3, w28
  40c318:	ccmn	w28, #0x1, #0x4, eq  // eq = none
  40c31c:	b.ne	40c39c <wcrtomb@plt+0x951c>  // b.any
  40c320:	ldrb	w0, [x26, #1049]
  40c324:	cbnz	w0, 40c350 <wcrtomb@plt+0x94d0>
  40c328:	sub	w0, w27, #0x30
  40c32c:	and	w0, w0, #0xff
  40c330:	cmp	w0, #0x9
  40c334:	sub	w0, w21, #0x30
  40c338:	and	w0, w0, #0xff
  40c33c:	cset	w1, ls  // ls = plast
  40c340:	cmp	w0, #0x9
  40c344:	cset	w0, ls  // ls = plast
  40c348:	tst	w1, w0
  40c34c:	b.eq	40c47c <wcrtomb@plt+0x95fc>  // b.none
  40c350:	sbfiz	x28, x27, #1, #32
  40c354:	cmp	w21, w27
  40c358:	b.lt	40c170 <wcrtomb@plt+0x92f0>  // b.tstop
  40c35c:	ldrb	w0, [x26, #457]
  40c360:	cbz	w0, 40c38c <wcrtomb@plt+0x950c>
  40c364:	bl	402c00 <__ctype_b_loc@plt>
  40c368:	ldr	x0, [x0]
  40c36c:	ldrh	w0, [x0, x28]
  40c370:	tbz	w0, #10, 40c38c <wcrtomb@plt+0x950c>
  40c374:	add	x1, sp, #0x88
  40c378:	mov	w0, w27
  40c37c:	bl	409aec <wcrtomb@plt+0x6c6c>
  40c380:	add	w27, w27, #0x1
  40c384:	add	x28, x28, #0x2
  40c388:	b	40c354 <wcrtomb@plt+0x94d4>
  40c38c:	add	x1, sp, #0x88
  40c390:	mov	w0, w27
  40c394:	bl	4095b0 <wcrtomb@plt+0x6730>
  40c398:	b	40c380 <wcrtomb@plt+0x9500>
  40c39c:	mov	w1, w20
  40c3a0:	mov	w21, w0
  40c3a4:	b	40c2b0 <wcrtomb@plt+0x9430>
  40c3a8:	mov	w20, w1
  40c3ac:	mov	w19, w21
  40c3b0:	mov	w0, #0x2                   	// #2
  40c3b4:	orr	w22, w22, w0
  40c3b8:	ldrb	w0, [x26, #1048]
  40c3bc:	cbnz	w0, 40c3f8 <wcrtomb@plt+0x9578>
  40c3c0:	ldrb	w0, [x26, #457]
  40c3c4:	cbz	w0, 40c3e8 <wcrtomb@plt+0x9568>
  40c3c8:	bl	402c00 <__ctype_b_loc@plt>
  40c3cc:	ldr	x0, [x0]
  40c3d0:	ldrh	w0, [x0, w27, sxtw #1]
  40c3d4:	tbz	w0, #10, 40c3e8 <wcrtomb@plt+0x9568>
  40c3d8:	add	x1, sp, #0x88
  40c3dc:	mov	w0, w27
  40c3e0:	bl	409aec <wcrtomb@plt+0x6c6c>
  40c3e4:	b	40c170 <wcrtomb@plt+0x92f0>
  40c3e8:	add	x1, sp, #0x88
  40c3ec:	mov	w0, w27
  40c3f0:	bl	4095b0 <wcrtomb@plt+0x6730>
  40c3f4:	b	40c170 <wcrtomb@plt+0x92f0>
  40c3f8:	cmn	w28, #0x1
  40c3fc:	b.eq	40c47c <wcrtomb@plt+0x95fc>  // b.none
  40c400:	ldrb	w0, [x26, #457]
  40c404:	cbz	w0, 40c468 <wcrtomb@plt+0x95e8>
  40c408:	add	x1, x23, #0x4
  40c40c:	mov	w0, w28
  40c410:	bl	40e04c <wcrtomb@plt+0xb1cc>
  40c414:	add	w21, w0, #0x1
  40c418:	str	w28, [sp, #168]
  40c41c:	add	x28, x26, #0x70
  40c420:	mov	x27, #0x0                   	// #0
  40c424:	cmp	w21, w27
  40c428:	b.le	40c170 <wcrtomb@plt+0x92f0>
  40c42c:	ldr	w0, [x23, x27, lsl #2]
  40c430:	bl	4028e0 <wctob@plt>
  40c434:	tbz	w0, #31, 40c470 <wcrtomb@plt+0x95f0>
  40c438:	ldp	x0, x1, [x26, #96]
  40c43c:	mov	x2, x28
  40c440:	mov	x4, #0x4                   	// #4
  40c444:	mov	x3, #0xffffffffffffffff    	// #-1
  40c448:	bl	40a180 <wcrtomb@plt+0x7300>
  40c44c:	ldr	x1, [x26, #104]
  40c450:	add	x2, x1, #0x1
  40c454:	stp	x0, x2, [x26, #96]
  40c458:	ldr	w2, [x23, x27, lsl #2]
  40c45c:	str	w2, [x0, x1, lsl #2]
  40c460:	add	x27, x27, #0x1
  40c464:	b	40c424 <wcrtomb@plt+0x95a4>
  40c468:	mov	w21, #0x1                   	// #1
  40c46c:	b	40c418 <wcrtomb@plt+0x9598>
  40c470:	add	x1, sp, #0x88
  40c474:	bl	4095b0 <wcrtomb@plt+0x6730>
  40c478:	b	40c460 <wcrtomb@plt+0x95e0>
  40c47c:	mov	w24, #0x0                   	// #0
  40c480:	b	40c170 <wcrtomb@plt+0x92f0>
  40c484:	mov	x0, #0xffffffffffffffff    	// #-1
  40c488:	b	40c1e8 <wcrtomb@plt+0x9368>
  40c48c:	b.ne	40c4c0 <wcrtomb@plt+0x9640>  // b.any
  40c490:	add	x1, sp, #0x88
  40c494:	mov	w0, #0x4                   	// #4
  40c498:	ldr	x2, [x1]
  40c49c:	subs	w0, w0, #0x1
  40c4a0:	mvn	x2, x2
  40c4a4:	str	x2, [x1], #8
  40c4a8:	b.ne	40c498 <wcrtomb@plt+0x9618>  // b.any
  40c4ac:	ldr	x0, [x26, #448]
  40c4b0:	tbz	w0, #8, 40c4c0 <wcrtomb@plt+0x9640>
  40c4b4:	ldr	x0, [sp, #136]
  40c4b8:	and	x0, x0, #0xfffffffffffffbff
  40c4bc:	str	x0, [sp, #136]
  40c4c0:	add	x1, sp, #0x88
  40c4c4:	mov	x0, x26
  40c4c8:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40c4cc:	add	x0, x0, #0x114
  40c4d0:	b	40c1f0 <wcrtomb@plt+0x9370>
  40c4d4:	mov	x0, #0x112                 	// #274
  40c4d8:	b	40c1f0 <wcrtomb@plt+0x9370>
  40c4dc:	stp	x29, x30, [sp, #-96]!
  40c4e0:	mov	x29, sp
  40c4e4:	stp	x19, x20, [sp, #16]
  40c4e8:	mov	x19, x0
  40c4ec:	mov	w20, #0x0                   	// #0
  40c4f0:	stp	x21, x22, [sp, #32]
  40c4f4:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c4f8:	add	x22, x22, #0x750
  40c4fc:	str	x23, [sp, #48]
  40c500:	mov	w23, #0x2                   	// #2
  40c504:	ldr	x0, [x19, #40]
  40c508:	cbnz	x0, 40c520 <wcrtomb@plt+0x96a0>
  40c50c:	mov	x0, #0xffffffffffffffff    	// #-1
  40c510:	str	x0, [x19, #48]
  40c514:	b	40cb4c <wcrtomb@plt+0x9ccc>
  40c518:	mov	w23, w20
  40c51c:	b	40c504 <wcrtomb@plt+0x9684>
  40c520:	mov	x0, x19
  40c524:	bl	4097b4 <wcrtomb@plt+0x6934>
  40c528:	mov	w21, w0
  40c52c:	cmp	w0, #0x42
  40c530:	b.gt	40c57c <wcrtomb@plt+0x96fc>
  40c534:	cmp	w0, #0x23
  40c538:	b.gt	40c558 <wcrtomb@plt+0x96d8>
  40c53c:	cmp	w0, #0xa
  40c540:	b.eq	40c95c <wcrtomb@plt+0x9adc>  // b.none
  40c544:	ldrb	w0, [x19, #1048]
  40c548:	strb	wzr, [x19, #120]
  40c54c:	cbz	w0, 40cc08 <wcrtomb@plt+0x9d88>
  40c550:	mov	x0, #0x109                 	// #265
  40c554:	b	40c510 <wcrtomb@plt+0x9690>
  40c558:	sub	w1, w0, #0x24
  40c55c:	cmp	w1, #0x1e
  40c560:	b.hi	40c544 <wcrtomb@plt+0x96c4>  // b.pmore
  40c564:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c568:	add	x0, x0, #0x710
  40c56c:	ldrh	w0, [x0, w1, uxtw #1]
  40c570:	adr	x1, 40c57c <wcrtomb@plt+0x96fc>
  40c574:	add	x0, x1, w0, sxth #2
  40c578:	br	x0
  40c57c:	cmp	w0, #0x62
  40c580:	b.gt	40c5a8 <wcrtomb@plt+0x9728>
  40c584:	cmp	w0, #0x52
  40c588:	b.le	40c544 <wcrtomb@plt+0x96c4>
  40c58c:	sub	w0, w21, #0x53
  40c590:	cmp	w0, #0xf
  40c594:	b.hi	40c544 <wcrtomb@plt+0x96c4>  // b.pmore
  40c598:	ldrh	w0, [x22, w0, uxtw #1]
  40c59c:	adr	x1, 40c5a8 <wcrtomb@plt+0x9728>
  40c5a0:	add	x0, x1, w0, sxth #2
  40c5a4:	br	x0
  40c5a8:	sub	w1, w0, #0x73
  40c5ac:	cmp	w1, #0x9
  40c5b0:	b.hi	40c544 <wcrtomb@plt+0x96c4>  // b.pmore
  40c5b4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c5b8:	add	x0, x0, #0x770
  40c5bc:	ldrh	w0, [x0, w1, uxtw #1]
  40c5c0:	adr	x1, 40c5cc <wcrtomb@plt+0x974c>
  40c5c4:	add	x0, x1, w0, sxth #2
  40c5c8:	br	x0
  40c5cc:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c5d0:	ldr	x0, [x19, #40]
  40c5d4:	cbnz	x0, 40c5ec <wcrtomb@plt+0x976c>
  40c5d8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c5dc:	add	x1, x1, #0x607
  40c5e0:	mov	w2, #0x5                   	// #5
  40c5e4:	bl	402d60 <dcgettext@plt>
  40c5e8:	bl	4080d4 <wcrtomb@plt+0x5254>
  40c5ec:	mov	w20, #0x1                   	// #1
  40c5f0:	cmp	w23, w20
  40c5f4:	b.ne	40c518 <wcrtomb@plt+0x9698>  // b.any
  40c5f8:	bl	402b40 <abort@plt>
  40c5fc:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c600:	ldr	x0, [x19, #448]
  40c604:	tbnz	w0, #3, 40c620 <wcrtomb@plt+0x97a0>
  40c608:	ldr	x0, [x19, #48]
  40c60c:	cmn	x0, #0x1
  40c610:	b.eq	40c620 <wcrtomb@plt+0x97a0>  // b.none
  40c614:	sub	x0, x0, #0x106
  40c618:	cmp	x0, #0x1
  40c61c:	b.hi	40c544 <wcrtomb@plt+0x96c4>  // b.pmore
  40c620:	mov	x0, #0x10c                 	// #268
  40c624:	b	40c510 <wcrtomb@plt+0x9690>
  40c628:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c62c:	ldr	x2, [x19, #448]
  40c630:	tbnz	w2, #3, 40c6c8 <wcrtomb@plt+0x9848>
  40c634:	ldr	x1, [x19, #40]
  40c638:	cbz	x1, 40c6c8 <wcrtomb@plt+0x9848>
  40c63c:	lsr	x0, x2, #13
  40c640:	eor	x0, x0, #0x1
  40c644:	and	w3, w0, #0x1
  40c648:	and	x0, x0, #0x1
  40c64c:	cmp	x1, x0
  40c650:	b.le	40c674 <wcrtomb@plt+0x97f4>
  40c654:	ldr	x0, [x19, #32]
  40c658:	ldrb	w4, [x0]
  40c65c:	cmp	w4, #0x5c
  40c660:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40c664:	cset	x3, ne  // ne = any
  40c668:	ldrb	w0, [x0, x3]
  40c66c:	cmp	w0, #0x29
  40c670:	b.eq	40c6c8 <wcrtomb@plt+0x9848>  // b.none
  40c674:	lsr	x0, x2, #15
  40c678:	eor	x0, x0, #0x1
  40c67c:	and	w3, w0, #0x1
  40c680:	and	x0, x0, #0x1
  40c684:	cmp	x1, x0
  40c688:	b.le	40c6ac <wcrtomb@plt+0x982c>
  40c68c:	ldr	x0, [x19, #32]
  40c690:	ldrb	w4, [x0]
  40c694:	cmp	w4, #0x5c
  40c698:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40c69c:	cset	x3, ne  // ne = any
  40c6a0:	ldrb	w0, [x0, x3]
  40c6a4:	cmp	w0, #0x7c
  40c6a8:	b.eq	40c6c8 <wcrtomb@plt+0x9848>  // b.none
  40c6ac:	tbz	w2, #11, 40c544 <wcrtomb@plt+0x96c4>
  40c6b0:	cmp	x1, #0x0
  40c6b4:	b.le	40c544 <wcrtomb@plt+0x96c4>
  40c6b8:	ldr	x0, [x19, #32]
  40c6bc:	ldrb	w0, [x0]
  40c6c0:	cmp	w0, #0xa
  40c6c4:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c6c8:	mov	x0, #0x10d                 	// #269
  40c6cc:	b	40c510 <wcrtomb@plt+0x9690>
  40c6d0:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c6d4:	ldr	x0, [x19, #448]
  40c6d8:	tbnz	w0, #14, 40c544 <wcrtomb@plt+0x96c4>
  40c6dc:	mov	x0, #0x112                 	// #274
  40c6e0:	strb	wzr, [x19, #120]
  40c6e4:	b	40c510 <wcrtomb@plt+0x9690>
  40c6e8:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c6ec:	ldr	x0, [x19, #448]
  40c6f0:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40c6f4:	b	40c620 <wcrtomb@plt+0x97a0>
  40c6f8:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c6fc:	ldr	x0, [x19, #448]
  40c700:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40c704:	b	40c6c8 <wcrtomb@plt+0x9848>
  40c708:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c70c:	ldr	x0, [x19, #448]
  40c710:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40c714:	mov	x0, #0x10e                 	// #270
  40c718:	b	40c510 <wcrtomb@plt+0x9690>
  40c71c:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c720:	ldr	x0, [x19, #448]
  40c724:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40c728:	mov	x0, #0x10f                 	// #271
  40c72c:	b	40c510 <wcrtomb@plt+0x9690>
  40c730:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c734:	ldr	x0, [x19, #448]
  40c738:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40c73c:	mov	x0, #0x110                 	// #272
  40c740:	b	40c510 <wcrtomb@plt+0x9690>
  40c744:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c748:	ldr	x0, [x19, #448]
  40c74c:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40c750:	mov	x0, #0x111                 	// #273
  40c754:	b	40c510 <wcrtomb@plt+0x9690>
  40c758:	ldr	x0, [x19, #448]
  40c75c:	tbnz	w0, #10, 40c544 <wcrtomb@plt+0x96c4>
  40c760:	ubfx	w1, w0, #1, #1
  40c764:	cmp	w1, w20
  40c768:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c76c:	tbnz	w0, #4, 40c778 <wcrtomb@plt+0x98f8>
  40c770:	ldrb	w0, [x19, #120]
  40c774:	cbnz	w0, 40c544 <wcrtomb@plt+0x96c4>
  40c778:	mov	x0, #0x101                 	// #257
  40c77c:	b	40c510 <wcrtomb@plt+0x9690>
  40c780:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c784:	ldr	x0, [x19, #448]
  40c788:	tbnz	w0, #4, 40c794 <wcrtomb@plt+0x9914>
  40c78c:	ldrb	w0, [x19, #120]
  40c790:	cbnz	w0, 40c544 <wcrtomb@plt+0x96c4>
  40c794:	mov	x0, #0x102                 	// #258
  40c798:	b	40c510 <wcrtomb@plt+0x9690>
  40c79c:	ldr	x0, [x19, #448]
  40c7a0:	tbnz	w0, #10, 40c544 <wcrtomb@plt+0x96c4>
  40c7a4:	ubfx	w1, w0, #1, #1
  40c7a8:	cmp	w1, w20
  40c7ac:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c7b0:	tbnz	w0, #4, 40c7bc <wcrtomb@plt+0x993c>
  40c7b4:	ldrb	w0, [x19, #120]
  40c7b8:	cbnz	w0, 40c544 <wcrtomb@plt+0x96c4>
  40c7bc:	mov	x0, #0x103                 	// #259
  40c7c0:	b	40c510 <wcrtomb@plt+0x9690>
  40c7c4:	ldr	x4, [x19, #448]
  40c7c8:	tbz	w4, #9, 40c544 <wcrtomb@plt+0x96c4>
  40c7cc:	lsr	x0, x4, #12
  40c7d0:	eor	x0, x0, #0x1
  40c7d4:	and	w0, w0, #0x1
  40c7d8:	cmp	w0, w20
  40c7dc:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c7e0:	tbnz	w4, #4, 40c7ec <wcrtomb@plt+0x996c>
  40c7e4:	ldrb	w0, [x19, #120]
  40c7e8:	cbnz	w0, 40c544 <wcrtomb@plt+0x96c4>
  40c7ec:	ldp	x1, x2, [x19, #32]
  40c7f0:	mov	x0, #0xffffffffffffffff    	// #-1
  40c7f4:	mov	w8, #0xa                   	// #10
  40c7f8:	mov	w6, #0x8030                	// #32816
  40c7fc:	str	x0, [x19, #64]
  40c800:	add	x2, x1, x2
  40c804:	cmp	x1, x2
  40c808:	b.ne	40c844 <wcrtomb@plt+0x99c4>  // b.any
  40c80c:	tbnz	w4, #21, 40c544 <wcrtomb@plt+0x96c4>
  40c810:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c814:	add	x1, x1, #0x61b
  40c818:	mov	w2, #0x5                   	// #5
  40c81c:	mov	x0, #0x0                   	// #0
  40c820:	b	40c5e4 <wcrtomb@plt+0x9764>
  40c824:	tbnz	w0, #31, 40c838 <wcrtomb@plt+0x99b8>
  40c828:	madd	w0, w0, w8, w5
  40c82c:	cmp	w0, w6
  40c830:	csel	w0, w0, w6, le
  40c834:	sub	w3, w0, #0x30
  40c838:	add	x1, x1, #0x1
  40c83c:	str	w3, [x19, #64]
  40c840:	b	40c804 <wcrtomb@plt+0x9984>
  40c844:	ldrb	w5, [x1]
  40c848:	ldr	w0, [x19, #64]
  40c84c:	sub	w3, w5, #0x30
  40c850:	and	w7, w3, #0xff
  40c854:	cmp	w7, #0x9
  40c858:	b.ls	40c824 <wcrtomb@plt+0x99a4>  // b.plast
  40c85c:	cmp	w5, #0x2c
  40c860:	b.ne	40c8b4 <wcrtomb@plt+0x9a34>  // b.any
  40c864:	tbz	w0, #31, 40c86c <wcrtomb@plt+0x99ec>
  40c868:	str	wzr, [x19, #64]
  40c86c:	mov	w7, #0xa                   	// #10
  40c870:	mov	w6, #0x8030                	// #32816
  40c874:	add	x1, x1, #0x1
  40c878:	cmp	x2, x1
  40c87c:	b.eq	40c80c <wcrtomb@plt+0x998c>  // b.none
  40c880:	ldrb	w5, [x1]
  40c884:	sub	w0, w5, #0x30
  40c888:	and	w3, w0, #0xff
  40c88c:	cmp	w3, #0x9
  40c890:	b.hi	40c8b8 <wcrtomb@plt+0x9a38>  // b.pmore
  40c894:	ldr	w3, [x19, #68]
  40c898:	tbnz	w3, #31, 40c8ac <wcrtomb@plt+0x9a2c>
  40c89c:	madd	w0, w3, w7, w5
  40c8a0:	cmp	w0, w6
  40c8a4:	csel	w0, w0, w6, le
  40c8a8:	sub	w0, w0, #0x30
  40c8ac:	str	w0, [x19, #68]
  40c8b0:	b	40c874 <wcrtomb@plt+0x99f4>
  40c8b4:	str	w0, [x19, #68]
  40c8b8:	cbz	w20, 40c8d4 <wcrtomb@plt+0x9a54>
  40c8bc:	ldrb	w0, [x1]
  40c8c0:	cmp	w0, #0x5c
  40c8c4:	b.ne	40c80c <wcrtomb@plt+0x998c>  // b.any
  40c8c8:	add	x1, x1, #0x1
  40c8cc:	cmp	x2, x1
  40c8d0:	b.eq	40c80c <wcrtomb@plt+0x998c>  // b.none
  40c8d4:	ldrb	w0, [x1]
  40c8d8:	cmp	w0, #0x7d
  40c8dc:	b.ne	40c80c <wcrtomb@plt+0x998c>  // b.any
  40c8e0:	ldr	w3, [x19, #64]
  40c8e4:	tbnz	w3, #31, 40c80c <wcrtomb@plt+0x998c>
  40c8e8:	ldr	w0, [x19, #68]
  40c8ec:	tbnz	w0, #31, 40c914 <wcrtomb@plt+0x9a94>
  40c8f0:	cmp	w3, w0
  40c8f4:	b.gt	40c80c <wcrtomb@plt+0x998c>
  40c8f8:	mov	w3, #0x7fff                	// #32767
  40c8fc:	cmp	w0, w3
  40c900:	b.le	40c914 <wcrtomb@plt+0x9a94>
  40c904:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40c908:	mov	w2, #0x5                   	// #5
  40c90c:	add	x1, x1, #0x633
  40c910:	b	40c81c <wcrtomb@plt+0x999c>
  40c914:	add	x1, x1, #0x1
  40c918:	mov	x0, #0x104                 	// #260
  40c91c:	str	x1, [x19, #32]
  40c920:	sub	x1, x2, x1
  40c924:	str	x1, [x19, #40]
  40c928:	strb	wzr, [x19, #120]
  40c92c:	b	40c510 <wcrtomb@plt+0x9690>
  40c930:	ldr	x0, [x19, #448]
  40c934:	tbnz	w0, #10, 40c544 <wcrtomb@plt+0x96c4>
  40c938:	lsr	x0, x0, #15
  40c93c:	eor	x0, x0, #0x1
  40c940:	and	w0, w0, #0x1
  40c944:	cmp	w0, w20
  40c948:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c94c:	mov	w0, #0x1                   	// #1
  40c950:	strb	w0, [x19, #120]
  40c954:	mov	x0, #0x106                 	// #262
  40c958:	b	40c510 <wcrtomb@plt+0x9690>
  40c95c:	ldr	x0, [x19, #448]
  40c960:	tbnz	w0, #10, 40c544 <wcrtomb@plt+0x96c4>
  40c964:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c968:	tbnz	w0, #11, 40c94c <wcrtomb@plt+0x9acc>
  40c96c:	b	40c544 <wcrtomb@plt+0x96c4>
  40c970:	ldr	x0, [x19, #448]
  40c974:	lsr	x0, x0, #13
  40c978:	eor	x0, x0, #0x1
  40c97c:	and	w0, w0, #0x1
  40c980:	cmp	w0, w20
  40c984:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c988:	ldr	x0, [x19, #56]
  40c98c:	add	x0, x0, #0x1
  40c990:	str	x0, [x19, #56]
  40c994:	mov	w0, #0x1                   	// #1
  40c998:	strb	w0, [x19, #120]
  40c99c:	mov	x0, #0x107                 	// #263
  40c9a0:	b	40c510 <wcrtomb@plt+0x9690>
  40c9a4:	ldr	x1, [x19, #448]
  40c9a8:	lsr	x0, x1, #13
  40c9ac:	eor	x0, x0, #0x1
  40c9b0:	and	w0, w0, #0x1
  40c9b4:	cmp	w0, w20
  40c9b8:	b.ne	40c544 <wcrtomb@plt+0x96c4>  // b.any
  40c9bc:	ldr	x0, [x19, #56]
  40c9c0:	cbnz	x0, 40c9c8 <wcrtomb@plt+0x9b48>
  40c9c4:	tbnz	w1, #17, 40c544 <wcrtomb@plt+0x96c4>
  40c9c8:	sub	x0, x0, #0x1
  40c9cc:	str	x0, [x19, #56]
  40c9d0:	mov	x0, #0x108                 	// #264
  40c9d4:	strb	wzr, [x19, #120]
  40c9d8:	b	40c510 <wcrtomb@plt+0x9690>
  40c9dc:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40c9e0:	ldr	x0, [x19, #24]
  40c9e4:	tbz	x0, #63, 40ca28 <wcrtomb@plt+0x9ba8>
  40c9e8:	ldr	x2, [x19, #448]
  40c9ec:	mov	x1, #0xffffffffffffffff    	// #-1
  40c9f0:	mov	x0, #0xfffffffffffffbff    	// #-1025
  40c9f4:	stp	x1, x1, [sp, #80]
  40c9f8:	tst	x2, #0x40
  40c9fc:	csel	x0, x0, x1, eq  // eq = none
  40ca00:	stp	x0, x1, [sp, #64]
  40ca04:	tbz	w2, #7, 40ca10 <wcrtomb@plt+0x9b90>
  40ca08:	and	x0, x0, #0xfffffffffffffffe
  40ca0c:	str	x0, [sp, #64]
  40ca10:	ldrb	w0, [x19, #1048]
  40ca14:	cbnz	w0, 40ca40 <wcrtomb@plt+0x9bc0>
  40ca18:	add	x1, sp, #0x40
  40ca1c:	mov	x0, x19
  40ca20:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40ca24:	str	x0, [x19, #24]
  40ca28:	ldrb	w0, [x19, #1048]
  40ca2c:	strb	wzr, [x19, #120]
  40ca30:	cbnz	w0, 40ca80 <wcrtomb@plt+0x9c00>
  40ca34:	ldr	x0, [x19, #24]
  40ca38:	add	x0, x0, #0x114
  40ca3c:	b	40c510 <wcrtomb@plt+0x9690>
  40ca40:	add	x4, x19, #0x51c
  40ca44:	add	x2, sp, #0x40
  40ca48:	mov	x0, #0x0                   	// #0
  40ca4c:	mov	x5, #0x1                   	// #1
  40ca50:	ldr	w1, [x4, x0, lsl #2]
  40ca54:	cmn	w1, #0x1
  40ca58:	b.ne	40ca70 <wcrtomb@plt+0x9bf0>  // b.any
  40ca5c:	lsr	w3, w0, #6
  40ca60:	lsl	x1, x5, x0
  40ca64:	ldr	x6, [x2, x3, lsl #3]
  40ca68:	bic	x1, x6, x1
  40ca6c:	str	x1, [x2, x3, lsl #3]
  40ca70:	add	x0, x0, #0x1
  40ca74:	cmp	x0, #0x100
  40ca78:	b.ne	40ca50 <wcrtomb@plt+0x9bd0>  // b.any
  40ca7c:	b	40ca18 <wcrtomb@plt+0x9b98>
  40ca80:	mov	x0, #0x10a                 	// #266
  40ca84:	b	40c510 <wcrtomb@plt+0x9690>
  40ca88:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40ca8c:	ldr	x0, [x19, #448]
  40ca90:	and	x20, x0, #0x80000
  40ca94:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40ca98:	ldrb	w0, [x19, #1048]
  40ca9c:	cbnz	w0, 40cb10 <wcrtomb@plt+0x9c90>
  40caa0:	add	x0, sp, #0x40
  40caa4:	bl	40973c <wcrtomb@plt+0x68bc>
  40caa8:	bl	402c00 <__ctype_b_loc@plt>
  40caac:	mov	x4, x0
  40cab0:	ldr	x0, [x4]
  40cab4:	ldrh	w0, [x0, x20, lsl #1]
  40cab8:	tbz	w0, #13, 40cac8 <wcrtomb@plt+0x9c48>
  40cabc:	add	x1, sp, #0x40
  40cac0:	mov	w0, w20
  40cac4:	bl	4095b0 <wcrtomb@plt+0x6730>
  40cac8:	add	x20, x20, #0x1
  40cacc:	cmp	x20, #0x100
  40cad0:	b.ne	40cab0 <wcrtomb@plt+0x9c30>  // b.any
  40cad4:	cmp	w21, #0x53
  40cad8:	b.eq	40caf0 <wcrtomb@plt+0x9c70>  // b.none
  40cadc:	strb	wzr, [x19, #120]
  40cae0:	add	x1, sp, #0x40
  40cae4:	mov	x0, x19
  40cae8:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40caec:	b	40ca38 <wcrtomb@plt+0x9bb8>
  40caf0:	add	x1, sp, #0x40
  40caf4:	mov	w0, #0x4                   	// #4
  40caf8:	ldr	x2, [x1]
  40cafc:	subs	w0, w0, #0x1
  40cb00:	mvn	x2, x2
  40cb04:	str	x2, [x1], #8
  40cb08:	b.ne	40caf8 <wcrtomb@plt+0x9c78>  // b.any
  40cb0c:	b	40cadc <wcrtomb@plt+0x9c5c>
  40cb10:	cmp	w21, #0x73
  40cb14:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40cb18:	add	x0, x0, #0x64e
  40cb1c:	cset	x1, eq  // eq = none
  40cb20:	cinc	x0, x0, eq  // eq = none
  40cb24:	ldp	x21, x20, [x19, #32]
  40cb28:	str	x0, [x19, #32]
  40cb2c:	mov	x0, #0xb                   	// #11
  40cb30:	sub	x0, x0, x1
  40cb34:	str	x0, [x19, #40]
  40cb38:	mov	x0, x19
  40cb3c:	bl	40bf2c <wcrtomb@plt+0x90ac>
  40cb40:	stp	x21, x20, [x19, #32]
  40cb44:	str	x0, [x19, #48]
  40cb48:	strb	wzr, [x19, #120]
  40cb4c:	ldp	x19, x20, [sp, #16]
  40cb50:	ldp	x21, x22, [sp, #32]
  40cb54:	ldr	x23, [sp, #48]
  40cb58:	ldp	x29, x30, [sp], #96
  40cb5c:	ret
  40cb60:	cbz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40cb64:	ldr	x0, [x19, #448]
  40cb68:	and	x4, x0, #0x80000
  40cb6c:	tbnz	w0, #19, 40c544 <wcrtomb@plt+0x96c4>
  40cb70:	ldrb	w0, [x19, #1048]
  40cb74:	cbnz	w0, 40cbd0 <wcrtomb@plt+0x9d50>
  40cb78:	add	x0, sp, #0x40
  40cb7c:	bl	40973c <wcrtomb@plt+0x68bc>
  40cb80:	add	x5, x19, #0x1cc
  40cb84:	ldrb	w0, [x5, x4]
  40cb88:	cmp	w0, #0x2
  40cb8c:	b.ne	40cb9c <wcrtomb@plt+0x9d1c>  // b.any
  40cb90:	add	x1, sp, #0x40
  40cb94:	mov	w0, w4
  40cb98:	bl	4095b0 <wcrtomb@plt+0x6730>
  40cb9c:	add	x4, x4, #0x1
  40cba0:	cmp	x4, #0x100
  40cba4:	b.ne	40cb84 <wcrtomb@plt+0x9d04>  // b.any
  40cba8:	cmp	w21, #0x57
  40cbac:	b.ne	40cadc <wcrtomb@plt+0x9c5c>  // b.any
  40cbb0:	add	x1, sp, #0x40
  40cbb4:	mov	w0, #0x4                   	// #4
  40cbb8:	ldr	x2, [x1]
  40cbbc:	subs	w0, w0, #0x1
  40cbc0:	mvn	x2, x2
  40cbc4:	str	x2, [x1], #8
  40cbc8:	b.ne	40cbb8 <wcrtomb@plt+0x9d38>  // b.any
  40cbcc:	b	40cadc <wcrtomb@plt+0x9c5c>
  40cbd0:	cmp	w21, #0x77
  40cbd4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40cbd8:	add	x0, x0, #0x65a
  40cbdc:	cset	x1, eq  // eq = none
  40cbe0:	cinc	x0, x0, eq  // eq = none
  40cbe4:	ldp	x21, x20, [x19, #32]
  40cbe8:	str	x0, [x19, #32]
  40cbec:	mov	x0, #0xc                   	// #12
  40cbf0:	b	40cb30 <wcrtomb@plt+0x9cb0>
  40cbf4:	cbnz	w20, 40c544 <wcrtomb@plt+0x96c4>
  40cbf8:	strb	wzr, [x19, #120]
  40cbfc:	mov	x0, x19
  40cc00:	bl	40bf2c <wcrtomb@plt+0x90ac>
  40cc04:	b	40c510 <wcrtomb@plt+0x9690>
  40cc08:	ldrb	w0, [x19, #457]
  40cc0c:	sxtw	x20, w21
  40cc10:	cbz	w0, 40cc3c <wcrtomb@plt+0x9dbc>
  40cc14:	bl	402c00 <__ctype_b_loc@plt>
  40cc18:	ldr	x0, [x0]
  40cc1c:	ldrh	w0, [x0, x20, lsl #1]
  40cc20:	tbz	w0, #10, 40cc3c <wcrtomb@plt+0x9dbc>
  40cc24:	add	x0, sp, #0x40
  40cc28:	bl	40973c <wcrtomb@plt+0x68bc>
  40cc2c:	add	x1, sp, #0x40
  40cc30:	mov	w0, w21
  40cc34:	bl	409aec <wcrtomb@plt+0x6c6c>
  40cc38:	b	40cae0 <wcrtomb@plt+0x9c60>
  40cc3c:	mov	x0, x20
  40cc40:	b	40c510 <wcrtomb@plt+0x9690>
  40cc44:	stp	x29, x30, [sp, #-176]!
  40cc48:	mov	x2, #0x113                 	// #275
  40cc4c:	mov	x29, sp
  40cc50:	ldr	x1, [x0, #128]
  40cc54:	stp	x19, x20, [sp, #16]
  40cc58:	mov	x19, x0
  40cc5c:	stp	x21, x22, [sp, #32]
  40cc60:	cmp	x1, #0xff
  40cc64:	ccmp	x1, x2, #0x0, hi  // hi = pmore
  40cc68:	b.gt	40cc90 <wcrtomb@plt+0x9e10>
  40cc6c:	sub	x2, x1, #0x10b
  40cc70:	cmp	x2, #0x7
  40cc74:	b.ls	40cc88 <wcrtomb@plt+0x9e08>  // b.plast
  40cc78:	cmp	x1, #0x10a
  40cc7c:	b.eq	40cc98 <wcrtomb@plt+0x9e18>  // b.none
  40cc80:	cmp	x1, #0x113
  40cc84:	b.ne	40ce4c <wcrtomb@plt+0x9fcc>  // b.any
  40cc88:	mov	x0, x19
  40cc8c:	b	40ce64 <wcrtomb@plt+0x9fe4>
  40cc90:	cmp	x1, #0x10a
  40cc94:	b.ne	40cc88 <wcrtomb@plt+0x9e08>  // b.any
  40cc98:	ldrb	w0, [x19, #1050]
  40cc9c:	cbz	w0, 40cc88 <wcrtomb@plt+0x9e08>
  40cca0:	ldr	x0, [x19, #200]
  40cca4:	cbnz	x0, 40cd1c <wcrtomb@plt+0x9e9c>
  40cca8:	adrp	x20, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40ccac:	add	x20, x20, #0x7b0
  40ccb0:	add	x0, x20, #0x160
  40ccb4:	add	x1, sp, #0x30
  40ccb8:	ld1	{v0.16b, v1.16b}, [x0]
  40ccbc:	ldr	x0, [x19, #448]
  40ccc0:	st1	{v0.16b, v1.16b}, [x1]
  40ccc4:	tbnz	w0, #6, 40ccd0 <wcrtomb@plt+0x9e50>
  40ccc8:	mov	x2, #0xfffffffffffffbff    	// #-1025
  40cccc:	str	x2, [sp, #48]
  40ccd0:	tbz	w0, #7, 40cce0 <wcrtomb@plt+0x9e60>
  40ccd4:	ldr	x0, [sp, #48]
  40ccd8:	and	x0, x0, #0xfffffffffffffffe
  40ccdc:	str	x0, [sp, #48]
  40cce0:	mov	x22, x19
  40cce4:	add	x20, x20, #0x160
  40cce8:	mov	x0, x19
  40ccec:	mov	x21, #0x1                   	// #1
  40ccf0:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40ccf4:	add	x0, x0, #0x114
  40ccf8:	str	x0, [x22, #200]!
  40ccfc:	add	x1, x20, x21, lsl #5
  40cd00:	mov	x0, x19
  40cd04:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40cd08:	add	x0, x0, #0x114
  40cd0c:	str	x0, [x22, x21, lsl #3]
  40cd10:	add	x21, x21, #0x1
  40cd14:	cmp	x21, #0x9
  40cd18:	b.ne	40ccfc <wcrtomb@plt+0x9e7c>  // b.any
  40cd1c:	ldr	x1, [x19, #200]
  40cd20:	mov	x0, x19
  40cd24:	mov	w20, #0x3                   	// #3
  40cd28:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd2c:	ldr	x1, [x19, #208]
  40cd30:	mov	x0, x19
  40cd34:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd38:	mov	x0, x19
  40cd3c:	mov	x1, #0xe0                  	// #224
  40cd40:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd44:	ldr	x1, [x19, #224]
  40cd48:	mov	x0, x19
  40cd4c:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd50:	mov	x0, x19
  40cd54:	mov	x1, #0x105                 	// #261
  40cd58:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd5c:	mov	x0, x19
  40cd60:	mov	x1, #0x106                 	// #262
  40cd64:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd68:	mov	x0, x19
  40cd6c:	mov	x1, #0xed                  	// #237
  40cd70:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd74:	ldr	x1, [x19, #240]
  40cd78:	mov	x0, x19
  40cd7c:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd80:	mov	x0, x19
  40cd84:	mov	x1, #0x105                 	// #261
  40cd88:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd8c:	mov	x0, x19
  40cd90:	mov	x1, #0x106                 	// #262
  40cd94:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cd98:	ldr	x1, [x19, #232]
  40cd9c:	mov	x0, x19
  40cda0:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cda4:	mov	x0, x19
  40cda8:	mov	x1, #0xf0                  	// #240
  40cdac:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cdb0:	ldr	x1, [x19, #248]
  40cdb4:	mov	x0, x19
  40cdb8:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cdbc:	mov	x0, x19
  40cdc0:	mov	x1, #0x105                 	// #261
  40cdc4:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cdc8:	mov	x0, x19
  40cdcc:	mov	x1, #0x106                 	// #262
  40cdd0:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cdd4:	mov	x0, x19
  40cdd8:	mov	x1, #0xf4                  	// #244
  40cddc:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cde0:	ldr	x1, [x19, #264]
  40cde4:	mov	x0, x19
  40cde8:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cdec:	mov	x0, x19
  40cdf0:	mov	x1, #0x105                 	// #261
  40cdf4:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cdf8:	mov	x0, x19
  40cdfc:	mov	x1, #0x106                 	// #262
  40ce00:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ce04:	ldr	x1, [x19, #256]
  40ce08:	mov	x0, x19
  40ce0c:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ce10:	ldr	x1, [x19, #216]
  40ce14:	mov	x0, x19
  40ce18:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ce1c:	mov	x0, x19
  40ce20:	mov	x1, #0x105                 	// #261
  40ce24:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ce28:	mov	x0, x19
  40ce2c:	mov	x1, #0x106                 	// #262
  40ce30:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ce34:	subs	w20, w20, #0x1
  40ce38:	b.ne	40ce10 <wcrtomb@plt+0x9f90>  // b.any
  40ce3c:	mov	x0, x19
  40ce40:	bl	40c4dc <wcrtomb@plt+0x965c>
  40ce44:	str	x0, [x19, #128]
  40ce48:	b	40cefc <wcrtomb@plt+0xa07c>
  40ce4c:	cmp	x1, #0x109
  40ce50:	b.ne	40ceb8 <wcrtomb@plt+0xa038>  // b.any
  40ce54:	ldr	w1, [x0, #72]
  40ce58:	cmn	w1, #0x1
  40ce5c:	b.ne	40ce6c <wcrtomb@plt+0x9fec>  // b.any
  40ce60:	mov	x1, #0x112                 	// #274
  40ce64:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ce68:	b	40ce3c <wcrtomb@plt+0x9fbc>
  40ce6c:	bl	409b44 <wcrtomb@plt+0x6cc4>
  40ce70:	ldrb	w0, [x19, #457]
  40ce74:	cbz	w0, 40ce3c <wcrtomb@plt+0x9fbc>
  40ce78:	ldr	w0, [x19, #72]
  40ce7c:	add	x22, sp, #0x30
  40ce80:	mov	x1, x22
  40ce84:	mov	x20, #0x0                   	// #0
  40ce88:	bl	40e04c <wcrtomb@plt+0xb1cc>
  40ce8c:	mov	w21, w0
  40ce90:	cmp	w21, w20
  40ce94:	b.le	40ce3c <wcrtomb@plt+0x9fbc>
  40ce98:	ldr	w1, [x22, x20, lsl #2]
  40ce9c:	mov	x0, x19
  40cea0:	add	x20, x20, #0x1
  40cea4:	bl	409b44 <wcrtomb@plt+0x6cc4>
  40cea8:	mov	x0, x19
  40ceac:	mov	x1, #0x106                 	// #262
  40ceb0:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40ceb4:	b	40ce90 <wcrtomb@plt+0xa010>
  40ceb8:	cmp	x1, #0x107
  40cebc:	b.ne	40cef4 <wcrtomb@plt+0xa074>  // b.any
  40cec0:	bl	40c4dc <wcrtomb@plt+0x965c>
  40cec4:	str	x0, [x19, #128]
  40cec8:	mov	x0, x19
  40cecc:	bl	40d048 <wcrtomb@plt+0xa1c8>
  40ced0:	ldr	x0, [x19, #128]
  40ced4:	cmp	x0, #0x108
  40ced8:	b.eq	40ce3c <wcrtomb@plt+0x9fbc>  // b.none
  40cedc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40cee0:	add	x1, x1, #0x667
  40cee4:	mov	w2, #0x5                   	// #5
  40cee8:	mov	x0, #0x0                   	// #0
  40ceec:	bl	402d60 <dcgettext@plt>
  40cef0:	bl	4080d4 <wcrtomb@plt+0x5254>
  40cef4:	mov	x1, #0x100                 	// #256
  40cef8:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cefc:	ldr	x1, [x19, #128]
  40cf00:	sub	x0, x1, #0x101
  40cf04:	cmp	x0, #0x3
  40cf08:	b.ls	40cf1c <wcrtomb@plt+0xa09c>  // b.plast
  40cf0c:	ldp	x19, x20, [sp, #16]
  40cf10:	ldp	x21, x22, [sp, #32]
  40cf14:	ldp	x29, x30, [sp], #176
  40cf18:	ret
  40cf1c:	cmp	x1, #0x104
  40cf20:	b.ne	40cc88 <wcrtomb@plt+0x9e08>  // b.any
  40cf24:	ldr	x20, [x19, #152]
  40cf28:	mov	x0, x19
  40cf2c:	mov	x1, x20
  40cf30:	bl	4095d0 <wcrtomb@plt+0x6750>
  40cf34:	mov	x22, x0
  40cf38:	sub	x20, x20, x0
  40cf3c:	ldr	x0, [x19, #64]
  40cf40:	cbz	x0, 40cfdc <wcrtomb@plt+0xa15c>
  40cf44:	ldr	w0, [x19, #68]
  40cf48:	tbz	w0, #31, 40cf58 <wcrtomb@plt+0xa0d8>
  40cf4c:	mov	x0, x19
  40cf50:	mov	x1, #0x103                 	// #259
  40cf54:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cf58:	ldr	w0, [x19, #64]
  40cf5c:	cbnz	w0, 40cf6c <wcrtomb@plt+0xa0ec>
  40cf60:	mov	x0, x19
  40cf64:	mov	x1, #0x101                 	// #257
  40cf68:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cf6c:	mov	w21, #0x1                   	// #1
  40cf70:	ldr	w0, [x19, #64]
  40cf74:	cmp	w0, w21
  40cf78:	b.gt	40cfb8 <wcrtomb@plt+0xa138>
  40cf7c:	ldr	w0, [x19, #68]
  40cf80:	cmp	w0, w21
  40cf84:	b.le	40ce3c <wcrtomb@plt+0x9fbc>
  40cf88:	mov	x2, x22
  40cf8c:	mov	x1, x20
  40cf90:	mov	x0, x19
  40cf94:	bl	40a56c <wcrtomb@plt+0x76ec>
  40cf98:	mov	x0, x19
  40cf9c:	mov	x1, #0x101                 	// #257
  40cfa0:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cfa4:	add	w21, w21, #0x1
  40cfa8:	mov	x0, x19
  40cfac:	mov	x1, #0x105                 	// #261
  40cfb0:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cfb4:	b	40cf7c <wcrtomb@plt+0xa0fc>
  40cfb8:	mov	x2, x22
  40cfbc:	mov	x1, x20
  40cfc0:	mov	x0, x19
  40cfc4:	bl	40a56c <wcrtomb@plt+0x76ec>
  40cfc8:	mov	x0, x19
  40cfcc:	mov	x1, #0x105                 	// #261
  40cfd0:	add	w21, w21, #0x1
  40cfd4:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40cfd8:	b	40cf70 <wcrtomb@plt+0xa0f0>
  40cfdc:	str	x20, [x19, #152]
  40cfe0:	mov	x0, x19
  40cfe4:	bl	40c4dc <wcrtomb@plt+0x965c>
  40cfe8:	str	x0, [x19, #128]
  40cfec:	mov	x0, x19
  40cff0:	bl	40cc44 <wcrtomb@plt+0x9dc4>
  40cff4:	b	40cefc <wcrtomb@plt+0xa07c>
  40cff8:	stp	x29, x30, [sp, #-32]!
  40cffc:	mov	x29, sp
  40d000:	stp	x19, x20, [sp, #16]
  40d004:	mov	x20, #0x106                 	// #262
  40d008:	mov	x19, x0
  40d00c:	bl	40cc44 <wcrtomb@plt+0x9dc4>
  40d010:	ldr	x0, [x19, #128]
  40d014:	cmp	x0, #0x108
  40d018:	ccmp	x0, x20, #0x4, ne  // ne = any
  40d01c:	b.eq	40d024 <wcrtomb@plt+0xa1a4>  // b.none
  40d020:	tbz	x0, #63, 40d030 <wcrtomb@plt+0xa1b0>
  40d024:	ldp	x19, x20, [sp, #16]
  40d028:	ldp	x29, x30, [sp], #32
  40d02c:	ret
  40d030:	mov	x0, x19
  40d034:	bl	40cc44 <wcrtomb@plt+0x9dc4>
  40d038:	mov	x0, x19
  40d03c:	mov	x1, #0x105                 	// #261
  40d040:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40d044:	b	40d010 <wcrtomb@plt+0xa190>
  40d048:	stp	x29, x30, [sp, #-32]!
  40d04c:	mov	x29, sp
  40d050:	stp	x19, x20, [sp, #16]
  40d054:	mov	x19, x0
  40d058:	bl	40cff8 <wcrtomb@plt+0xa178>
  40d05c:	ldr	x20, [x19, #128]
  40d060:	cmp	x20, #0x106
  40d064:	b.eq	40d074 <wcrtomb@plt+0xa1f4>  // b.none
  40d068:	ldp	x19, x20, [sp, #16]
  40d06c:	ldp	x29, x30, [sp], #32
  40d070:	ret
  40d074:	mov	x0, x19
  40d078:	bl	40c4dc <wcrtomb@plt+0x965c>
  40d07c:	str	x0, [x19, #128]
  40d080:	mov	x0, x19
  40d084:	bl	40cff8 <wcrtomb@plt+0xa178>
  40d088:	mov	x1, x20
  40d08c:	mov	x0, x19
  40d090:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40d094:	b	40d05c <wcrtomb@plt+0xa1dc>
  40d098:	stp	x29, x30, [sp, #-32]!
  40d09c:	mov	x29, sp
  40d0a0:	str	x19, [sp, #16]
  40d0a4:	stp	x0, x1, [x2, #32]
  40d0a8:	mov	x0, #0xffffffffffffffff    	// #-1
  40d0ac:	str	x0, [x2, #48]
  40d0b0:	mov	w0, #0x1                   	// #1
  40d0b4:	strb	w0, [x2, #120]
  40d0b8:	ldrb	w0, [x2, #456]
  40d0bc:	cbnz	w0, 40d0d8 <wcrtomb@plt+0xa258>
  40d0c0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d0c4:	add	x1, x1, #0x674
  40d0c8:	mov	w2, #0x5                   	// #5
  40d0cc:	mov	x0, #0x0                   	// #0
  40d0d0:	bl	402d60 <dcgettext@plt>
  40d0d4:	bl	4080d4 <wcrtomb@plt+0x5254>
  40d0d8:	ldr	x0, [x2, #184]
  40d0dc:	mov	x19, x2
  40d0e0:	cbnz	x0, 40d0f0 <wcrtomb@plt+0xa270>
  40d0e4:	mov	x0, x2
  40d0e8:	mov	x1, #0x10b                 	// #267
  40d0ec:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40d0f0:	mov	x0, x19
  40d0f4:	bl	40c4dc <wcrtomb@plt+0x965c>
  40d0f8:	str	x0, [x19, #128]
  40d0fc:	ldr	x0, [x19, #168]
  40d100:	str	x0, [x19, #136]
  40d104:	mov	x0, x19
  40d108:	bl	40d048 <wcrtomb@plt+0xa1c8>
  40d10c:	ldr	x0, [x19, #128]
  40d110:	cmn	x0, #0x1
  40d114:	b.eq	40d128 <wcrtomb@plt+0xa2a8>  // b.none
  40d118:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d11c:	mov	w2, #0x5                   	// #5
  40d120:	add	x1, x1, #0x688
  40d124:	b	40d0cc <wcrtomb@plt+0xa24c>
  40d128:	ldr	x1, [x19, #184]
  40d12c:	mov	x0, x19
  40d130:	mvn	x1, x1
  40d134:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40d138:	mov	x0, x19
  40d13c:	mov	x1, #0x105                 	// #261
  40d140:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40d144:	ldr	x0, [x19, #184]
  40d148:	cbz	x0, 40d158 <wcrtomb@plt+0xa2d8>
  40d14c:	mov	x0, x19
  40d150:	mov	x1, #0x106                 	// #262
  40d154:	bl	409bf8 <wcrtomb@plt+0x6d78>
  40d158:	ldr	x0, [x19, #184]
  40d15c:	add	x0, x0, #0x1
  40d160:	str	x0, [x19, #184]
  40d164:	ldr	x19, [sp, #16]
  40d168:	ldp	x29, x30, [sp], #32
  40d16c:	ret
  40d170:	ldr	x6, [x0, #1040]
  40d174:	mov	x16, x6
  40d178:	br	x16
  40d17c:	ldr	x0, [x0, #288]
  40d180:	ret
  40d184:	ldrb	w0, [x0, #192]
  40d188:	ret
  40d18c:	stp	x29, x30, [sp, #-48]!
  40d190:	mov	x29, sp
  40d194:	stp	x19, x20, [sp, #16]
  40d198:	mov	x19, x0
  40d19c:	ldr	x0, [x0]
  40d1a0:	stp	x21, x22, [sp, #32]
  40d1a4:	bl	402c20 <free@plt>
  40d1a8:	ldr	x0, [x19, #144]
  40d1ac:	bl	402c20 <free@plt>
  40d1b0:	ldrb	w0, [x19, #1048]
  40d1b4:	cbz	w0, 40d1c0 <wcrtomb@plt+0xa340>
  40d1b8:	mov	x0, x19
  40d1bc:	bl	40a600 <wcrtomb@plt+0x7780>
  40d1c0:	ldr	x0, [x19, #336]
  40d1c4:	mov	x20, #0x0                   	// #0
  40d1c8:	mov	x22, #0x50                  	// #80
  40d1cc:	bl	402c20 <free@plt>
  40d1d0:	ldr	x0, [x19, #344]
  40d1d4:	bl	402c20 <free@plt>
  40d1d8:	ldp	x0, x1, [x19, #296]
  40d1dc:	cmp	x1, x20
  40d1e0:	b.gt	40d218 <wcrtomb@plt+0xa398>
  40d1e4:	bl	402c20 <free@plt>
  40d1e8:	ldr	x0, [x19, #320]
  40d1ec:	cbnz	x0, 40d268 <wcrtomb@plt+0xa3e8>
  40d1f0:	ldr	x0, [x19, #368]
  40d1f4:	cbnz	x0, 40d2c4 <wcrtomb@plt+0xa444>
  40d1f8:	ldr	x0, [x19, #288]
  40d1fc:	cbz	x0, 40d2cc <wcrtomb@plt+0xa44c>
  40d200:	bl	40d18c <wcrtomb@plt+0xa30c>
  40d204:	ldp	x21, x22, [sp, #32]
  40d208:	ldr	x0, [x19, #288]
  40d20c:	ldp	x19, x20, [sp, #16]
  40d210:	ldp	x29, x30, [sp], #48
  40d214:	b	402c20 <free@plt>
  40d218:	mul	x21, x20, x22
  40d21c:	add	x20, x20, #0x1
  40d220:	add	x0, x0, x21
  40d224:	ldr	x0, [x0, #8]
  40d228:	bl	402c20 <free@plt>
  40d22c:	ldr	x0, [x19, #296]
  40d230:	add	x0, x0, x21
  40d234:	ldr	x0, [x0, #48]
  40d238:	bl	402c20 <free@plt>
  40d23c:	b	40d1d8 <wcrtomb@plt+0xa358>
  40d240:	mul	x1, x20, x21
  40d244:	add	x20, x20, #0x1
  40d248:	ldr	x0, [x0, x1]
  40d24c:	bl	402c20 <free@plt>
  40d250:	ldr	x1, [x19, #152]
  40d254:	ldr	x0, [x19, #320]
  40d258:	cmp	x1, x20
  40d25c:	b.gt	40d240 <wcrtomb@plt+0xa3c0>
  40d260:	bl	402c20 <free@plt>
  40d264:	b	40d1f0 <wcrtomb@plt+0xa370>
  40d268:	mov	x20, #0x0                   	// #0
  40d26c:	mov	x21, #0x18                  	// #24
  40d270:	b	40d250 <wcrtomb@plt+0xa3d0>
  40d274:	lsl	x21, x20, #3
  40d278:	add	x20, x20, #0x1
  40d27c:	ldr	x0, [x0, x21]
  40d280:	bl	402c20 <free@plt>
  40d284:	ldr	x0, [x19, #376]
  40d288:	ldr	x0, [x0, x21]
  40d28c:	bl	402c20 <free@plt>
  40d290:	ldr	x1, [x19, #352]
  40d294:	ldr	x0, [x19, #368]
  40d298:	cmp	x1, x20
  40d29c:	b.gt	40d274 <wcrtomb@plt+0xa3f4>
  40d2a0:	sub	x0, x0, #0x10
  40d2a4:	bl	402c20 <free@plt>
  40d2a8:	ldr	x0, [x19, #376]
  40d2ac:	bl	402c20 <free@plt>
  40d2b0:	ldr	x0, [x19, #392]
  40d2b4:	bl	402c20 <free@plt>
  40d2b8:	ldr	x0, [x19, #384]
  40d2bc:	bl	402c20 <free@plt>
  40d2c0:	b	40d1f8 <wcrtomb@plt+0xa378>
  40d2c4:	mov	x20, #0x0                   	// #0
  40d2c8:	b	40d290 <wcrtomb@plt+0xa410>
  40d2cc:	ldp	x19, x20, [sp, #16]
  40d2d0:	ldp	x21, x22, [sp, #32]
  40d2d4:	ldp	x29, x30, [sp], #48
  40d2d8:	ret
  40d2dc:	stp	x29, x30, [sp, #-144]!
  40d2e0:	mov	x29, sp
  40d2e4:	stp	x21, x22, [sp, #32]
  40d2e8:	mov	x22, x0
  40d2ec:	ldrb	w21, [x0, #1048]
  40d2f0:	ldrb	w0, [x0, #457]
  40d2f4:	eor	w21, w21, #0x1
  40d2f8:	stp	x19, x20, [sp, #16]
  40d2fc:	and	w21, w21, w0
  40d300:	and	w21, w21, #0xff
  40d304:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d308:	mov	x19, #0x1                   	// #1
  40d30c:	add	x0, x0, #0x784
  40d310:	stp	x23, x24, [sp, #48]
  40d314:	stp	x25, x26, [sp, #64]
  40d318:	stp	x27, x28, [sp, #80]
  40d31c:	mov	x27, #0x0                   	// #0
  40d320:	stp	wzr, wzr, [sp, #96]
  40d324:	str	x0, [sp, #120]
  40d328:	ldr	x24, [x22, #152]
  40d32c:	add	x0, x19, #0x1
  40d330:	cmp	x0, x24
  40d334:	b.lt	40d350 <wcrtomb@plt+0xa4d0>  // b.tstop
  40d338:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0xae54>
  40d33c:	mov	w21, #0x0                   	// #0
  40d340:	add	x19, x19, #0x9f5
  40d344:	mov	w22, #0x0                   	// #0
  40d348:	mov	w23, #0x0                   	// #0
  40d34c:	b	40d768 <wcrtomb@plt+0xa8e8>
  40d350:	ldr	x25, [x22, #144]
  40d354:	lsl	x26, x19, #3
  40d358:	ldr	x20, [x25, x26]
  40d35c:	cmp	x20, #0x113
  40d360:	b.gt	40d924 <wcrtomb@plt+0xaaa4>
  40d364:	cmp	x20, #0xff
  40d368:	b.gt	40d444 <wcrtomb@plt+0xa5c4>
  40d36c:	cmn	x20, #0x1
  40d370:	b.eq	40d71c <wcrtomb@plt+0xa89c>  // b.none
  40d374:	cbz	x20, 40d338 <wcrtomb@plt+0xa4b8>
  40d378:	add	x26, x25, x26
  40d37c:	add	x23, x19, #0x2
  40d380:	ldr	x0, [x26, #8]
  40d384:	cmp	x0, #0x105
  40d388:	b.ne	40d39c <wcrtomb@plt+0xa51c>  // b.any
  40d38c:	sub	x24, x24, #0x1
  40d390:	add	x1, x25, #0x8
  40d394:	cmp	x24, x23
  40d398:	b.gt	40d9c0 <wcrtomb@plt+0xab40>
  40d39c:	sub	x1, x23, x19
  40d3a0:	mov	x0, x27
  40d3a4:	asr	x1, x1, #1
  40d3a8:	add	x1, x1, #0x1
  40d3ac:	bl	409f5c <wcrtomb@plt+0x70dc>
  40d3b0:	mov	x27, x0
  40d3b4:	cbz	w21, 40d9ec <wcrtomb@plt+0xab6c>
  40d3b8:	mov	w0, w20
  40d3bc:	bl	402940 <toupper@plt>
  40d3c0:	and	w20, w0, #0xff
  40d3c4:	ldr	x0, [x27, #16]
  40d3c8:	mov	x24, x19
  40d3cc:	strb	w20, [x0]
  40d3d0:	ldr	x0, [x27, #8]
  40d3d4:	strb	w20, [x0]
  40d3d8:	ldr	x0, [x27, #24]
  40d3dc:	strb	w20, [x0]
  40d3e0:	mov	x20, #0x1                   	// #1
  40d3e4:	add	x24, x24, #0x2
  40d3e8:	cmp	x24, x23
  40d3ec:	ldr	x25, [x27, #16]
  40d3f0:	b.lt	40d9f4 <wcrtomb@plt+0xab74>  // b.tstop
  40d3f4:	mvn	x0, x19
  40d3f8:	cmp	x19, x23
  40d3fc:	add	x0, x0, x23
  40d400:	lsr	x2, x0, #1
  40d404:	and	x0, x0, #0xfffffffffffffffe
  40d408:	csel	x0, x0, xzr, lt  // lt = tstop
  40d40c:	add	x20, x19, x0
  40d410:	mov	x0, #0x1                   	// #1
  40d414:	csinc	x2, x0, x2, ge  // ge = tcont
  40d418:	mov	x19, x20
  40d41c:	strb	wzr, [x25, x2]
  40d420:	ldr	x0, [x27, #8]
  40d424:	strb	wzr, [x0, x2]
  40d428:	ldr	x0, [x27, #24]
  40d42c:	strb	wzr, [x0, x2]
  40d430:	ldr	x0, [x27]
  40d434:	ldr	x1, [x27, #24]
  40d438:	bl	409fcc <wcrtomb@plt+0x714c>
  40d43c:	str	x0, [x27]
  40d440:	b	40d48c <wcrtomb@plt+0xa60c>
  40d444:	sub	x0, x20, #0x100
  40d448:	cmp	x0, #0x13
  40d44c:	b.hi	40d378 <wcrtomb@plt+0xa4f8>  // b.pmore
  40d450:	cmp	w0, #0x13
  40d454:	b.hi	40d378 <wcrtomb@plt+0xa4f8>  // b.pmore
  40d458:	ldr	x1, [sp, #120]
  40d45c:	ldrh	w0, [x1, w0, uxtw #1]
  40d460:	adr	x1, 40d46c <wcrtomb@plt+0xa5ec>
  40d464:	add	x0, x1, w0, sxth #2
  40d468:	br	x0
  40d46c:	mov	x0, x27
  40d470:	mov	x1, #0x2                   	// #2
  40d474:	bl	409f5c <wcrtomb@plt+0x70dc>
  40d478:	mov	x27, x0
  40d47c:	mov	w0, #0x1                   	// #1
  40d480:	strb	w0, [x27, #32]
  40d484:	mov	w0, #0x1                   	// #1
  40d488:	str	w0, [sp, #96]
  40d48c:	add	x19, x19, #0x1
  40d490:	b	40d328 <wcrtomb@plt+0xa4a8>
  40d494:	mov	x0, x27
  40d498:	mov	x1, #0x2                   	// #2
  40d49c:	bl	409f5c <wcrtomb@plt+0x70dc>
  40d4a0:	mov	x27, x0
  40d4a4:	mov	w0, #0x1                   	// #1
  40d4a8:	strb	w0, [x27, #33]
  40d4ac:	mov	w0, #0x1                   	// #1
  40d4b0:	str	w0, [sp, #100]
  40d4b4:	b	40d48c <wcrtomb@plt+0xa60c>
  40d4b8:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d4bc:	add	x3, x3, #0x7b0
  40d4c0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d4c4:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d4c8:	add	x3, x3, #0x280
  40d4cc:	add	x1, x1, #0x59e
  40d4d0:	add	x0, x0, #0x695
  40d4d4:	mov	w2, #0xff6                 	// #4086
  40d4d8:	bl	402de0 <__assert_fail@plt>
  40d4dc:	ldr	x0, [x27]
  40d4e0:	bl	409df8 <wcrtomb@plt+0x6f78>
  40d4e4:	ldr	x0, [x27]
  40d4e8:	str	xzr, [x0]
  40d4ec:	ldr	x0, [x27, #24]
  40d4f0:	strb	wzr, [x0]
  40d4f4:	ldr	x0, [x27, #16]
  40d4f8:	strb	wzr, [x0]
  40d4fc:	ldr	x0, [x27, #8]
  40d500:	strb	wzr, [x0]
  40d504:	strh	wzr, [x27, #32]
  40d508:	b	40d48c <wcrtomb@plt+0xa60c>
  40d50c:	ldr	x20, [x27, #40]
  40d510:	ldr	x1, [x27, #24]
  40d514:	ldr	x23, [x20, #24]
  40d518:	mov	x0, x23
  40d51c:	bl	402bf0 <strcmp@plt>
  40d520:	cbnz	w0, 40d5e8 <wcrtomb@plt+0xa768>
  40d524:	ldrb	w1, [x27, #32]
  40d528:	ldrb	w0, [x20, #32]
  40d52c:	and	w0, w0, w1
  40d530:	ldrb	w1, [x27, #33]
  40d534:	strb	w0, [x20, #32]
  40d538:	ldrb	w0, [x20, #33]
  40d53c:	and	w0, w0, w1
  40d540:	strb	w0, [x20, #33]
  40d544:	ldr	x2, [x20, #8]
  40d548:	mov	x0, #0x0                   	// #0
  40d54c:	ldrb	w1, [x2, x0]
  40d550:	add	x4, x2, x0
  40d554:	cbz	w1, 40d568 <wcrtomb@plt+0xa6e8>
  40d558:	ldr	x5, [x27, #8]
  40d55c:	ldrb	w5, [x5, x0]
  40d560:	cmp	w5, w1
  40d564:	b.eq	40d5f4 <wcrtomb@plt+0xa774>  // b.none
  40d568:	strb	wzr, [x4]
  40d56c:	ldr	x25, [x20, #16]
  40d570:	mov	x0, x25
  40d574:	bl	402790 <strlen@plt>
  40d578:	ldr	x24, [x27, #16]
  40d57c:	mov	x23, x0
  40d580:	add	x25, x25, x0
  40d584:	mov	x0, x24
  40d588:	bl	402790 <strlen@plt>
  40d58c:	cmp	x23, x0
  40d590:	add	x24, x24, x0
  40d594:	csel	x2, x23, x0, le
  40d598:	mov	x1, #0x0                   	// #0
  40d59c:	cmp	x2, x1
  40d5a0:	b.ne	40d5fc <wcrtomb@plt+0xa77c>  // b.any
  40d5a4:	sub	x23, x23, x1
  40d5a8:	mov	x0, #0x0                   	// #0
  40d5ac:	ldr	x4, [x20, #16]
  40d5b0:	cmp	x0, x1
  40d5b4:	add	x2, x4, x0
  40d5b8:	b.ne	40d614 <wcrtomb@plt+0xa794>  // b.any
  40d5bc:	strb	wzr, [x2]
  40d5c0:	ldr	x0, [x27]
  40d5c4:	str	x0, [sp, #112]
  40d5c8:	mov	x0, #0x8                   	// #8
  40d5cc:	ldr	x24, [x20]
  40d5d0:	bl	40fd78 <wcrtomb@plt+0xcef8>
  40d5d4:	mov	x23, x0
  40d5d8:	ldr	x0, [x24]
  40d5dc:	cbz	x0, 40d6ec <wcrtomb@plt+0xa86c>
  40d5e0:	ldr	x26, [sp, #112]
  40d5e4:	b	40d660 <wcrtomb@plt+0xa7e0>
  40d5e8:	strb	wzr, [x23]
  40d5ec:	strh	wzr, [x20, #32]
  40d5f0:	b	40d544 <wcrtomb@plt+0xa6c4>
  40d5f4:	add	x0, x0, #0x1
  40d5f8:	b	40d54c <wcrtomb@plt+0xa6cc>
  40d5fc:	ldrb	w4, [x25, #-1]!
  40d600:	ldrb	w0, [x24, #-1]!
  40d604:	cmp	w4, w0
  40d608:	b.ne	40d5a4 <wcrtomb@plt+0xa724>  // b.any
  40d60c:	add	x1, x1, #0x1
  40d610:	b	40d59c <wcrtomb@plt+0xa71c>
  40d614:	ldrb	w2, [x2, x23]
  40d618:	strb	w2, [x4, x0]
  40d61c:	add	x0, x0, #0x1
  40d620:	b	40d5ac <wcrtomb@plt+0xa72c>
  40d624:	mov	x0, #0x8                   	// #8
  40d628:	ldr	x25, [x24]
  40d62c:	bl	40fd78 <wcrtomb@plt+0xcef8>
  40d630:	mov	x28, x0
  40d634:	ldrb	w1, [x25]
  40d638:	cbnz	w1, 40d674 <wcrtomb@plt+0xa7f4>
  40d63c:	mov	x1, x28
  40d640:	add	x26, x26, #0x8
  40d644:	mov	x0, x23
  40d648:	bl	40a0c0 <wcrtomb@plt+0x7240>
  40d64c:	mov	x23, x0
  40d650:	mov	x0, x28
  40d654:	bl	409df8 <wcrtomb@plt+0x6f78>
  40d658:	mov	x0, x28
  40d65c:	bl	402c20 <free@plt>
  40d660:	ldr	x0, [x26]
  40d664:	str	x0, [sp, #104]
  40d668:	cbnz	x0, 40d624 <wcrtomb@plt+0xa7a4>
  40d66c:	add	x24, x24, #0x8
  40d670:	b	40d5d8 <wcrtomb@plt+0xa758>
  40d674:	ldr	x0, [sp, #104]
  40d678:	str	w1, [sp, #128]
  40d67c:	bl	402c60 <strchr@plt>
  40d680:	mov	x2, #0x0                   	// #0
  40d684:	ldr	w1, [sp, #128]
  40d688:	cbnz	x0, 40d6e4 <wcrtomb@plt+0xa864>
  40d68c:	cbz	x2, 40d6a0 <wcrtomb@plt+0xa820>
  40d690:	mov	x0, x28
  40d694:	mov	x1, x25
  40d698:	bl	409fcc <wcrtomb@plt+0x714c>
  40d69c:	mov	x28, x0
  40d6a0:	add	x25, x25, #0x1
  40d6a4:	b	40d634 <wcrtomb@plt+0xa7b4>
  40d6a8:	add	x5, x5, #0x1
  40d6ac:	ldrb	w6, [x25, x5]
  40d6b0:	cbz	w6, 40d6c0 <wcrtomb@plt+0xa840>
  40d6b4:	ldrb	w7, [x0, x5]
  40d6b8:	cmp	w7, w6
  40d6bc:	b.eq	40d6a8 <wcrtomb@plt+0xa828>  // b.none
  40d6c0:	cmp	x2, x5
  40d6c4:	add	x0, x0, #0x1
  40d6c8:	csel	x2, x2, x5, ge  // ge = tcont
  40d6cc:	str	x2, [sp, #128]
  40d6d0:	str	w1, [sp, #128]
  40d6d4:	str	x2, [sp, #136]
  40d6d8:	bl	402c60 <strchr@plt>
  40d6dc:	ldr	x2, [sp, #136]
  40d6e0:	b	40d684 <wcrtomb@plt+0xa804>
  40d6e4:	mov	x5, #0x1                   	// #1
  40d6e8:	b	40d6ac <wcrtomb@plt+0xa82c>
  40d6ec:	ldr	x0, [x20]
  40d6f0:	bl	409df8 <wcrtomb@plt+0x6f78>
  40d6f4:	ldr	x0, [x20]
  40d6f8:	bl	402c20 <free@plt>
  40d6fc:	str	x23, [x20]
  40d700:	mov	x0, x27
  40d704:	mov	x27, x20
  40d708:	bl	409e28 <wcrtomb@plt+0x6fa8>
  40d70c:	b	40d48c <wcrtomb@plt+0xa60c>
  40d710:	ldr	x0, [x27, #24]
  40d714:	strb	wzr, [x0]
  40d718:	b	40d48c <wcrtomb@plt+0xa60c>
  40d71c:	ldr	x0, [x27, #40]
  40d720:	cbnz	x0, 40d7c0 <wcrtomb@plt+0xa940>
  40d724:	ldr	x21, [x27]
  40d728:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0xae54>
  40d72c:	add	x19, x19, #0x9f5
  40d730:	ldr	x20, [x21]
  40d734:	cbnz	x20, 40d7e4 <wcrtomb@plt+0xa964>
  40d738:	ldr	x1, [x27, #24]
  40d73c:	mov	x0, x19
  40d740:	bl	402bf0 <strcmp@plt>
  40d744:	cbnz	w0, 40da24 <wcrtomb@plt+0xaba4>
  40d748:	ldr	w0, [sp, #96]
  40d74c:	ldrb	w22, [x27, #32]
  40d750:	ldrb	w21, [x27, #33]
  40d754:	cbz	w0, 40d75c <wcrtomb@plt+0xa8dc>
  40d758:	cbz	w22, 40da2c <wcrtomb@plt+0xabac>
  40d75c:	ldr	w0, [sp, #100]
  40d760:	cmp	w0, #0x0
  40d764:	csinc	w23, w21, wzr, ne  // ne = any
  40d768:	ldrb	w0, [x19]
  40d76c:	cbz	w0, 40da48 <wcrtomb@plt+0xabc8>
  40d770:	mov	x0, x19
  40d774:	bl	402790 <strlen@plt>
  40d778:	add	x0, x0, #0x4
  40d77c:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40d780:	strb	w23, [x0]
  40d784:	mov	x20, x0
  40d788:	strb	w22, [x0, #1]
  40d78c:	mov	x1, x19
  40d790:	strb	w21, [x0, #2]
  40d794:	add	x0, x0, #0x3
  40d798:	bl	402cc0 <strcpy@plt>
  40d79c:	cbnz	x27, 40da34 <wcrtomb@plt+0xabb4>
  40d7a0:	mov	x0, x20
  40d7a4:	ldp	x19, x20, [sp, #16]
  40d7a8:	ldp	x21, x22, [sp, #32]
  40d7ac:	ldp	x23, x24, [sp, #48]
  40d7b0:	ldp	x25, x26, [sp, #64]
  40d7b4:	ldp	x27, x28, [sp, #80]
  40d7b8:	ldp	x29, x30, [sp], #144
  40d7bc:	ret
  40d7c0:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d7c4:	add	x3, x3, #0x7b0
  40d7c8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d7cc:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40d7d0:	add	x3, x3, #0x280
  40d7d4:	add	x1, x1, #0x59e
  40d7d8:	add	x0, x0, #0x6c2
  40d7dc:	mov	w2, #0x1039                	// #4153
  40d7e0:	b	40d4d8 <wcrtomb@plt+0xa658>
  40d7e4:	mov	x0, x20
  40d7e8:	bl	402790 <strlen@plt>
  40d7ec:	mov	x22, x0
  40d7f0:	mov	x0, x19
  40d7f4:	bl	402790 <strlen@plt>
  40d7f8:	cmp	x22, x0
  40d7fc:	csel	x19, x19, x20, ls  // ls = plast
  40d800:	add	x21, x21, #0x8
  40d804:	b	40d730 <wcrtomb@plt+0xa8b0>
  40d808:	ldr	x24, [x27, #40]
  40d80c:	ldr	x1, [x27]
  40d810:	ldr	x0, [x24]
  40d814:	bl	40a0c0 <wcrtomb@plt+0x7240>
  40d818:	str	x0, [x24]
  40d81c:	ldr	x0, [x24, #16]
  40d820:	ldrb	w1, [x0]
  40d824:	cbz	w1, 40d890 <wcrtomb@plt+0xaa10>
  40d828:	ldr	x20, [x27, #8]
  40d82c:	ldrb	w1, [x20]
  40d830:	cbz	w1, 40d890 <wcrtomb@plt+0xaa10>
  40d834:	bl	402790 <strlen@plt>
  40d838:	mov	x23, x0
  40d83c:	mov	x0, x20
  40d840:	bl	402790 <strlen@plt>
  40d844:	add	x26, x23, x0
  40d848:	mov	x25, x0
  40d84c:	mov	x0, x26
  40d850:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40d854:	ldr	x1, [x24, #16]
  40d858:	mov	x20, x0
  40d85c:	mov	x2, x23
  40d860:	bl	402750 <memcpy@plt>
  40d864:	ldr	x1, [x27, #8]
  40d868:	mov	x2, x25
  40d86c:	add	x0, x20, x23
  40d870:	bl	402750 <memcpy@plt>
  40d874:	ldr	x0, [x24]
  40d878:	mov	x2, x26
  40d87c:	mov	x1, x20
  40d880:	bl	409fcc <wcrtomb@plt+0x714c>
  40d884:	str	x0, [x24]
  40d888:	mov	x0, x20
  40d88c:	bl	402c20 <free@plt>
  40d890:	ldr	x0, [x24, #24]
  40d894:	ldrb	w0, [x0]
  40d898:	cbz	w0, 40d8ac <wcrtomb@plt+0xaa2c>
  40d89c:	ldr	x0, [x24, #8]
  40d8a0:	ldr	x1, [x27, #8]
  40d8a4:	bl	409e70 <wcrtomb@plt+0x6ff0>
  40d8a8:	str	x0, [x24, #8]
  40d8ac:	ldr	x0, [x27, #24]
  40d8b0:	ldrb	w0, [x0]
  40d8b4:	cbnz	w0, 40d8c0 <wcrtomb@plt+0xaa40>
  40d8b8:	ldr	x0, [x24, #16]
  40d8bc:	strb	wzr, [x0]
  40d8c0:	ldr	x1, [x27, #16]
  40d8c4:	ldr	x0, [x24, #16]
  40d8c8:	bl	409e70 <wcrtomb@plt+0x6ff0>
  40d8cc:	str	x0, [x24, #16]
  40d8d0:	ldr	x0, [x24, #24]
  40d8d4:	ldrb	w1, [x0]
  40d8d8:	cbnz	w1, 40d8e4 <wcrtomb@plt+0xaa64>
  40d8dc:	ldrb	w1, [x24, #32]
  40d8e0:	cbz	w1, 40d918 <wcrtomb@plt+0xaa98>
  40d8e4:	ldr	x1, [x27, #24]
  40d8e8:	ldrb	w2, [x1]
  40d8ec:	cbnz	w2, 40d8f8 <wcrtomb@plt+0xaa78>
  40d8f0:	ldrb	w2, [x27, #33]
  40d8f4:	cbz	w2, 40d918 <wcrtomb@plt+0xaa98>
  40d8f8:	bl	409e70 <wcrtomb@plt+0x6ff0>
  40d8fc:	str	x0, [x24, #24]
  40d900:	ldrb	w0, [x27, #33]
  40d904:	strb	w0, [x24, #33]
  40d908:	mov	x0, x27
  40d90c:	mov	x27, x24
  40d910:	bl	409e28 <wcrtomb@plt+0x6fa8>
  40d914:	b	40d48c <wcrtomb@plt+0xa60c>
  40d918:	strb	wzr, [x0]
  40d91c:	strh	wzr, [x24, #32]
  40d920:	b	40d908 <wcrtomb@plt+0xaa88>
  40d924:	ldr	x28, [x22]
  40d928:	mov	x0, #0xffffffffffffdd80    	// #-8832
  40d92c:	add	x20, x0, x20, lsl #5
  40d930:	mov	w0, #0x0                   	// #0
  40d934:	add	x28, x28, x20
  40d938:	lsr	w2, w0, #6
  40d93c:	mov	w1, w0
  40d940:	sxtw	x20, w0
  40d944:	add	w0, w0, #0x1
  40d948:	ldr	x2, [x28, x2, lsl #3]
  40d94c:	lsr	x1, x2, x1
  40d950:	tbnz	w1, #0, 40d9b8 <wcrtomb@plt+0xab38>
  40d954:	cmp	w0, #0x100
  40d958:	b.ne	40d938 <wcrtomb@plt+0xaab8>  // b.any
  40d95c:	mov	x0, x27
  40d960:	mov	x1, #0x2                   	// #2
  40d964:	bl	409f5c <wcrtomb@plt+0x70dc>
  40d968:	mov	x27, x0
  40d96c:	b	40d48c <wcrtomb@plt+0xa60c>
  40d970:	lsr	w0, w23, #6
  40d974:	ldr	x0, [x28, x0, lsl #3]
  40d978:	lsr	x0, x0, x23
  40d97c:	tbz	w0, #0, 40d9a8 <wcrtomb@plt+0xab28>
  40d980:	cbz	w21, 40d95c <wcrtomb@plt+0xaadc>
  40d984:	mov	w0, w23
  40d988:	bl	402940 <toupper@plt>
  40d98c:	mov	w1, w0
  40d990:	mov	w0, w20
  40d994:	str	w1, [sp, #104]
  40d998:	bl	402940 <toupper@plt>
  40d99c:	ldr	w1, [sp, #104]
  40d9a0:	cmp	w1, w0
  40d9a4:	b.ne	40d95c <wcrtomb@plt+0xaadc>  // b.any
  40d9a8:	add	w23, w23, #0x1
  40d9ac:	cmp	w23, #0xff
  40d9b0:	b.le	40d970 <wcrtomb@plt+0xaaf0>
  40d9b4:	b	40d378 <wcrtomb@plt+0xa4f8>
  40d9b8:	mov	w23, w20
  40d9bc:	b	40d9a8 <wcrtomb@plt+0xab28>
  40d9c0:	cmp	x19, x23
  40d9c4:	b.eq	40d9d8 <wcrtomb@plt+0xab58>  // b.none
  40d9c8:	ldr	x0, [x25, x23, lsl #3]
  40d9cc:	sub	x0, x0, #0x1
  40d9d0:	cmp	x0, #0xfe
  40d9d4:	b.hi	40d39c <wcrtomb@plt+0xa51c>  // b.pmore
  40d9d8:	ldr	x0, [x1, x23, lsl #3]
  40d9dc:	cmp	x0, #0x105
  40d9e0:	b.ne	40d39c <wcrtomb@plt+0xa51c>  // b.any
  40d9e4:	add	x23, x23, #0x2
  40d9e8:	b	40d394 <wcrtomb@plt+0xa514>
  40d9ec:	and	w20, w20, #0xff
  40d9f0:	b	40d3c4 <wcrtomb@plt+0xa544>
  40d9f4:	ldr	x0, [x22, #144]
  40d9f8:	ldr	x0, [x0, x24, lsl #3]
  40d9fc:	cbz	w21, 40da04 <wcrtomb@plt+0xab84>
  40da00:	bl	402940 <toupper@plt>
  40da04:	and	w0, w0, #0xff
  40da08:	strb	w0, [x25, x20]
  40da0c:	ldr	x1, [x27, #8]
  40da10:	strb	w0, [x1, x20]
  40da14:	ldr	x1, [x27, #24]
  40da18:	strb	w0, [x1, x20]
  40da1c:	add	x20, x20, #0x1
  40da20:	b	40d3e4 <wcrtomb@plt+0xa564>
  40da24:	mov	w21, #0x0                   	// #0
  40da28:	mov	w22, #0x0                   	// #0
  40da2c:	mov	w23, #0x0                   	// #0
  40da30:	b	40d768 <wcrtomb@plt+0xa8e8>
  40da34:	ldr	x19, [x27, #40]
  40da38:	mov	x0, x27
  40da3c:	bl	409e28 <wcrtomb@plt+0x6fa8>
  40da40:	mov	x27, x19
  40da44:	b	40d79c <wcrtomb@plt+0xa91c>
  40da48:	mov	x20, #0x0                   	// #0
  40da4c:	b	40d79c <wcrtomb@plt+0xa91c>
  40da50:	b	402c20 <free@plt>
  40da54:	mov	x0, #0x920                 	// #2336
  40da58:	b	40fc04 <wcrtomb@plt+0xcd84>
  40da5c:	stp	x29, x30, [sp, #-128]!
  40da60:	mov	x29, sp
  40da64:	stp	x19, x20, [sp, #16]
  40da68:	mov	x19, x2
  40da6c:	stp	x21, x22, [sp, #32]
  40da70:	stp	x23, x24, [sp, #48]
  40da74:	and	w24, w3, #0xff
  40da78:	stp	x25, x26, [sp, #64]
  40da7c:	stp	x27, x28, [sp, #80]
  40da80:	cbz	x0, 40da88 <wcrtomb@plt+0xac08>
  40da84:	bl	40d098 <wcrtomb@plt+0xa218>
  40da88:	bl	40da54 <wcrtomb@plt+0xabd4>
  40da8c:	mov	x20, x0
  40da90:	mov	x2, #0x920                 	// #2336
  40da94:	mov	x1, x19
  40da98:	bl	402750 <memcpy@plt>
  40da9c:	adrp	x23, 40b000 <wcrtomb@plt+0x8180>
  40daa0:	ldr	x0, [x20, #16]
  40daa4:	add	x23, x23, #0xf1c
  40daa8:	mov	x1, #0x20                  	// #32
  40daac:	stp	xzr, xzr, [x20, #280]
  40dab0:	stp	xzr, xzr, [x20, #296]
  40dab4:	str	xzr, [x20, #320]
  40dab8:	stp	xzr, xzr, [x20, #336]
  40dabc:	str	xzr, [x20, #352]
  40dac0:	stp	xzr, xzr, [x20, #368]
  40dac4:	stp	xzr, xzr, [x20, #384]
  40dac8:	str	x23, [x20, #1040]
  40dacc:	strb	wzr, [x20, #1048]
  40dad0:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40dad4:	ldr	x2, [x19, #8]
  40dad8:	str	x0, [x20]
  40dadc:	cbz	x2, 40daec <wcrtomb@plt+0xac6c>
  40dae0:	ldr	x1, [x19]
  40dae4:	lsl	x2, x2, #5
  40dae8:	bl	402750 <memcpy@plt>
  40daec:	ldr	x0, [x19, #152]
  40daf0:	mov	x1, #0x10                  	// #16
  40daf4:	mov	x21, #0x0                   	// #0
  40daf8:	mov	x22, #0x0                   	// #0
  40dafc:	mov	w27, #0x0                   	// #0
  40db00:	mov	x25, #0xffffffffffffffff    	// #-1
  40db04:	bl	40fc34 <wcrtomb@plt+0xcdb4>
  40db08:	str	x0, [x20, #144]
  40db0c:	ldr	x0, [x19, #152]
  40db10:	mov	w2, #0x0                   	// #0
  40db14:	mov	x5, #0x100                 	// #256
  40db18:	lsl	x0, x0, #1
  40db1c:	str	x0, [x20, #160]
  40db20:	ldr	x0, [x19, #152]
  40db24:	cmp	x21, x0
  40db28:	b.lt	40db9c <wcrtomb@plt+0xad1c>  // b.tstop
  40db2c:	str	x22, [x20, #152]
  40db30:	cbz	w27, 40dc70 <wcrtomb@plt+0xadf0>
  40db34:	cbnz	w2, 40db40 <wcrtomb@plt+0xacc0>
  40db38:	ldrb	w0, [x19, #1048]
  40db3c:	cbz	w0, 40dc70 <wcrtomb@plt+0xadf0>
  40db40:	str	x20, [x19, #288]
  40db44:	ldr	x3, [x19, #152]
  40db48:	mov	x1, #0x0                   	// #0
  40db4c:	cmp	x1, x3
  40db50:	b.lt	40dc84 <wcrtomb@plt+0xae04>  // b.tstop
  40db54:	ldrb	w4, [x19, #1050]
  40db58:	cbnz	w4, 40dd34 <wcrtomb@plt+0xaeb4>
  40db5c:	mov	w1, w24
  40db60:	mov	x0, x19
  40db64:	bl	40a670 <wcrtomb@plt+0x77f0>
  40db68:	ldr	x0, [x19, #288]
  40db6c:	cbz	x0, 40db80 <wcrtomb@plt+0xad00>
  40db70:	mov	w1, #0x1                   	// #1
  40db74:	strb	w1, [x19, #192]
  40db78:	mov	w1, w24
  40db7c:	bl	40a670 <wcrtomb@plt+0x77f0>
  40db80:	ldp	x19, x20, [sp, #16]
  40db84:	ldp	x21, x22, [sp, #32]
  40db88:	ldp	x23, x24, [sp, #48]
  40db8c:	ldp	x25, x26, [sp, #64]
  40db90:	ldp	x27, x28, [sp, #80]
  40db94:	ldp	x29, x30, [sp], #128
  40db98:	ret
  40db9c:	ldr	x0, [x19, #144]
  40dba0:	lsl	x28, x21, #3
  40dba4:	add	x3, x22, #0x1
  40dba8:	lsl	x26, x22, #3
  40dbac:	ldr	x0, [x0, x28]
  40dbb0:	cmp	x0, #0x111
  40dbb4:	b.gt	40dbf0 <wcrtomb@plt+0xad70>
  40dbb8:	cmp	x0, #0x10d
  40dbbc:	b.gt	40dc5c <wcrtomb@plt+0xaddc>
  40dbc0:	cmp	x0, #0x10a
  40dbc4:	b.eq	40dbfc <wcrtomb@plt+0xad7c>  // b.none
  40dbc8:	ldr	x1, [x20, #144]
  40dbcc:	cmp	x0, #0xff
  40dbd0:	str	x0, [x1, x26]
  40dbd4:	cset	w1, ls  // ls = plast
  40dbd8:	cmp	x0, #0x113
  40dbdc:	cset	w0, gt
  40dbe0:	orr	w0, w1, w0
  40dbe4:	cmp	w0, #0x0
  40dbe8:	csel	w27, w27, w0, eq  // eq = none
  40dbec:	b	40dc50 <wcrtomb@plt+0xadd0>
  40dbf0:	sub	x1, x0, #0x112
  40dbf4:	cmp	x1, #0x1
  40dbf8:	b.hi	40dbc8 <wcrtomb@plt+0xad48>  // b.pmore
  40dbfc:	add	x1, sp, #0x60
  40dc00:	mov	x0, x20
  40dc04:	stp	x25, x25, [sp, #96]
  40dc08:	stp	x25, x25, [sp, #112]
  40dc0c:	bl	40a1a0 <wcrtomb@plt+0x7320>
  40dc10:	add	x0, x0, #0x114
  40dc14:	ldr	x1, [x20, #144]
  40dc18:	mov	x4, #0x102                 	// #258
  40dc1c:	add	x3, x22, #0x2
  40dc20:	mov	x5, #0x100                 	// #256
  40dc24:	str	x0, [x1, x26]
  40dc28:	add	x26, x1, x26
  40dc2c:	ldr	x0, [x19, #144]
  40dc30:	str	x4, [x26, #8]
  40dc34:	add	x0, x0, x28
  40dc38:	ldr	x0, [x0, #8]
  40dc3c:	sub	x0, x0, #0x101
  40dc40:	cmp	x0, #0x2
  40dc44:	b.hi	40dc4c <wcrtomb@plt+0xadcc>  // b.pmore
  40dc48:	add	x21, x21, #0x1
  40dc4c:	mov	w2, #0x1                   	// #1
  40dc50:	add	x21, x21, #0x1
  40dc54:	mov	x22, x3
  40dc58:	b	40db20 <wcrtomb@plt+0xaca0>
  40dc5c:	ldrb	w1, [x19, #1048]
  40dc60:	cbz	w1, 40dbc8 <wcrtomb@plt+0xad48>
  40dc64:	ldr	x0, [x20, #144]
  40dc68:	str	x5, [x0, x26]
  40dc6c:	b	40dc50 <wcrtomb@plt+0xadd0>
  40dc70:	mov	x0, x20
  40dc74:	bl	40d18c <wcrtomb@plt+0xa30c>
  40dc78:	mov	x0, x20
  40dc7c:	bl	402c20 <free@plt>
  40dc80:	b	40db44 <wcrtomb@plt+0xacc4>
  40dc84:	ldr	x0, [x19, #144]
  40dc88:	ldr	x0, [x0, x1, lsl #3]
  40dc8c:	cmp	x0, #0x111
  40dc90:	b.gt	40dcb4 <wcrtomb@plt+0xae34>
  40dc94:	cmp	x0, #0x10d
  40dc98:	b.le	40dcc0 <wcrtomb@plt+0xae40>
  40dc9c:	ldrb	w0, [x19, #1048]
  40dca0:	cbz	w0, 40dcc0 <wcrtomb@plt+0xae40>
  40dca4:	adrp	x0, 409000 <wcrtomb@plt+0x6180>
  40dca8:	add	x0, x0, #0x72c
  40dcac:	str	x0, [x19, #1040]
  40dcb0:	b	40db68 <wcrtomb@plt+0xace8>
  40dcb4:	sub	x0, x0, #0x112
  40dcb8:	cmp	x0, #0x1
  40dcbc:	b.ls	40dca4 <wcrtomb@plt+0xae24>  // b.plast
  40dcc0:	add	x1, x1, #0x1
  40dcc4:	b	40db4c <wcrtomb@plt+0xaccc>
  40dcc8:	ldr	x2, [x19, #144]
  40dccc:	ldr	x2, [x2, x0, lsl #3]
  40dcd0:	cmp	x2, #0x113
  40dcd4:	b.eq	40db5c <wcrtomb@plt+0xacdc>  // b.none
  40dcd8:	b.gt	40dcec <wcrtomb@plt+0xae6c>
  40dcdc:	cmp	x2, #0x10a
  40dce0:	b.eq	40dd30 <wcrtomb@plt+0xaeb0>  // b.none
  40dce4:	cmp	x2, #0x112
  40dce8:	csel	w1, w1, w4, ne  // ne = any
  40dcec:	add	x0, x0, #0x1
  40dcf0:	cmp	x3, x0
  40dcf4:	b.gt	40dcc8 <wcrtomb@plt+0xae48>
  40dcf8:	cbnz	w1, 40dd14 <wcrtomb@plt+0xae94>
  40dcfc:	ldr	x0, [x19, #288]
  40dd00:	cbz	x0, 40dd14 <wcrtomb@plt+0xae94>
  40dd04:	bl	40d18c <wcrtomb@plt+0xa30c>
  40dd08:	ldr	x0, [x19, #288]
  40dd0c:	bl	402c20 <free@plt>
  40dd10:	str	xzr, [x19, #288]
  40dd14:	mov	x0, x19
  40dd18:	bl	40a600 <wcrtomb@plt+0x7780>
  40dd1c:	mov	w0, #0x1                   	// #1
  40dd20:	strb	w0, [x19, #192]
  40dd24:	str	x23, [x19, #1040]
  40dd28:	strb	wzr, [x19, #1048]
  40dd2c:	b	40db5c <wcrtomb@plt+0xacdc>
  40dd30:	bl	402b40 <abort@plt>
  40dd34:	mov	x0, #0x0                   	// #0
  40dd38:	mov	w1, #0x0                   	// #0
  40dd3c:	b	40dcf0 <wcrtomb@plt+0xae70>
  40dd40:	stp	x29, x30, [sp, #-64]!
  40dd44:	mov	x29, sp
  40dd48:	stp	x23, x24, [sp, #48]
  40dd4c:	mov	x23, x1
  40dd50:	mov	w1, #0x0                   	// #0
  40dd54:	stp	x19, x20, [sp, #16]
  40dd58:	mov	x19, x0
  40dd5c:	mov	x20, x2
  40dd60:	mov	x2, #0x410                 	// #1040
  40dd64:	stp	x21, x22, [sp, #32]
  40dd68:	mov	w21, w3
  40dd6c:	bl	402a10 <memset@plt>
  40dd70:	ldrb	w22, [x23]
  40dd74:	adrp	x1, 40b000 <wcrtomb@plt+0x8180>
  40dd78:	adrp	x0, 40b000 <wcrtomb@plt+0x8180>
  40dd7c:	cmp	w22, #0x0
  40dd80:	add	x1, x1, #0xf1c
  40dd84:	add	x0, x0, #0xf24
  40dd88:	mov	x2, #0x504                 	// #1284
  40dd8c:	csel	x0, x0, x1, ne  // ne = any
  40dd90:	str	x0, [x19, #1040]
  40dd94:	mov	x1, x23
  40dd98:	add	x0, x19, #0x418
  40dd9c:	bl	402750 <memcpy@plt>
  40dda0:	eor	w22, w22, #0x1
  40dda4:	mov	x0, #0xffffffffffffffff    	// #-1
  40dda8:	str	x0, [x19, #24]
  40ddac:	mov	w0, #0x1                   	// #1
  40ddb0:	strb	w0, [x19, #456]
  40ddb4:	ubfx	w0, w20, #22, #1
  40ddb8:	tst	x21, #0x2
  40ddbc:	add	x24, x19, #0x51c
  40ddc0:	strb	w22, [x19, #192]
  40ddc4:	adrp	x22, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40ddc8:	add	x22, x22, #0x6cc
  40ddcc:	strb	w0, [x19, #457]
  40ddd0:	and	w0, w21, #0x1
  40ddd4:	str	x20, [x19, #448]
  40ddd8:	mov	x20, #0x0                   	// #0
  40dddc:	strb	w0, [x19, #458]
  40dde0:	mov	w0, #0xa                   	// #10
  40dde4:	csel	w0, wzr, w0, ne  // ne = any
  40dde8:	strb	w0, [x19, #459]
  40ddec:	ldrb	w0, [x19, #459]
  40ddf0:	mov	w23, w20
  40ddf4:	mov	w21, w20
  40ddf8:	cmp	w0, w20, uxtb
  40ddfc:	b.ne	40de08 <wcrtomb@plt+0xaf88>  // b.any
  40de00:	ldrb	w0, [x19, #458]
  40de04:	cbz	w0, 40de98 <wcrtomb@plt+0xb018>
  40de08:	ldr	w0, [x24, x20, lsl #2]
  40de0c:	cmn	w0, #0x1
  40de10:	b.eq	40de88 <wcrtomb@plt+0xb008>  // b.none
  40de14:	bl	402c00 <__ctype_b_loc@plt>
  40de18:	ldr	x0, [x0]
  40de1c:	ldrh	w0, [x0, x20, lsl #1]
  40de20:	tbnz	w0, #3, 40de90 <wcrtomb@plt+0xb010>
  40de24:	cmp	w20, #0x5f
  40de28:	cset	w0, eq  // eq = none
  40de2c:	add	w0, w0, #0x1
  40de30:	add	x2, x19, #0x1cc
  40de34:	and	w1, w0, #0xff
  40de38:	cmp	w0, #0x2
  40de3c:	strb	w1, [x2, x20]
  40de40:	b.eq	40dea0 <wcrtomb@plt+0xb020>  // b.none
  40de44:	cmp	w1, #0x4
  40de48:	b.eq	40deb0 <wcrtomb@plt+0xb030>  // b.none
  40de4c:	ldrb	w0, [x19, #1050]
  40de50:	cbz	w0, 40deb8 <wcrtomb@plt+0xb038>
  40de54:	and	w21, w21, #0xc0
  40de58:	cmp	w21, #0x80
  40de5c:	add	x1, x19, #0x2cc
  40de60:	cset	w0, ne  // ne = any
  40de64:	strb	w0, [x1, x20]
  40de68:	add	x20, x20, #0x1
  40de6c:	cmp	x20, #0x100
  40de70:	b.ne	40ddec <wcrtomb@plt+0xaf6c>  // b.any
  40de74:	ldp	x19, x20, [sp, #16]
  40de78:	ldp	x21, x22, [sp, #32]
  40de7c:	ldp	x23, x24, [sp, #48]
  40de80:	ldp	x29, x30, [sp], #64
  40de84:	ret
  40de88:	mov	w0, #0x0                   	// #0
  40de8c:	b	40de2c <wcrtomb@plt+0xafac>
  40de90:	mov	w0, #0x1                   	// #1
  40de94:	b	40de2c <wcrtomb@plt+0xafac>
  40de98:	mov	w0, #0x4                   	// #4
  40de9c:	b	40de30 <wcrtomb@plt+0xafb0>
  40dea0:	add	x1, x19, #0x3d0
  40dea4:	mov	w0, w23
  40dea8:	bl	4095b0 <wcrtomb@plt+0x6730>
  40deac:	b	40de4c <wcrtomb@plt+0xafcc>
  40deb0:	add	x1, x19, #0x3f0
  40deb4:	b	40dea4 <wcrtomb@plt+0xb024>
  40deb8:	mov	w1, w21
  40debc:	mov	x0, x22
  40dec0:	bl	402c60 <strchr@plt>
  40dec4:	cmp	x0, #0x0
  40dec8:	b	40de5c <wcrtomb@plt+0xafdc>
  40decc:	stp	x29, x30, [sp, #-32]!
  40ded0:	mov	x2, #0x1c0                 	// #448
  40ded4:	mov	x29, sp
  40ded8:	stp	x19, x20, [sp, #16]
  40dedc:	mov	x19, x0
  40dee0:	mov	x20, x1
  40dee4:	mov	w1, #0x0                   	// #0
  40dee8:	bl	402a10 <memset@plt>
  40deec:	mov	x0, #0xffffffffffffffff    	// #-1
  40def0:	str	x0, [x19, #24]
  40def4:	ldrb	w0, [x20, #192]
  40def8:	add	x1, x20, #0x1c0
  40defc:	strb	w0, [x19, #192]
  40df00:	mov	x2, #0x250                 	// #592
  40df04:	add	x0, x19, #0x1c0
  40df08:	bl	402750 <memcpy@plt>
  40df0c:	ldr	x0, [x20, #1040]
  40df10:	str	x0, [x19, #1040]
  40df14:	add	x1, x20, #0x418
  40df18:	add	x0, x19, #0x418
  40df1c:	mov	x2, #0x504                 	// #1284
  40df20:	bl	402750 <memcpy@plt>
  40df24:	ldp	x19, x20, [sp, #16]
  40df28:	ldp	x29, x30, [sp], #32
  40df2c:	ret
  40df30:	stp	x29, x30, [sp, #-96]!
  40df34:	mov	x29, sp
  40df38:	stp	x19, x20, [sp, #16]
  40df3c:	mov	x19, x0
  40df40:	stp	x21, x22, [sp, #32]
  40df44:	str	x23, [sp, #48]
  40df48:	bl	402c40 <__ctype_get_mb_cur_max@plt>
  40df4c:	cmp	x0, #0x1
  40df50:	cset	w1, hi  // hi = pmore
  40df54:	strb	w1, [x19]
  40df58:	b.hi	40df88 <wcrtomb@plt+0xb108>  // b.pmore
  40df5c:	mov	w20, #0x0                   	// #0
  40df60:	and	w0, w20, #0xff
  40df64:	strb	w0, [sp, #88]
  40df68:	add	w0, w0, #0x1
  40df6c:	add	x1, sp, #0x50
  40df70:	strb	w0, [sp, #80]
  40df74:	add	x0, sp, #0x58
  40df78:	strb	wzr, [sp, #81]
  40df7c:	strb	wzr, [sp, #89]
  40df80:	bl	402d80 <strcoll@plt>
  40df84:	tbnz	w0, #31, 40df90 <wcrtomb@plt+0xb110>
  40df88:	mov	w0, #0x0                   	// #0
  40df8c:	b	40dfa0 <wcrtomb@plt+0xb120>
  40df90:	add	w20, w20, #0x1
  40df94:	cmp	w20, #0xff
  40df98:	b.ne	40df60 <wcrtomb@plt+0xb0e0>  // b.any
  40df9c:	mov	w0, #0x1                   	// #1
  40dfa0:	strb	w0, [x19, #1]
  40dfa4:	add	x3, sp, #0x58
  40dfa8:	add	x0, sp, #0x50
  40dfac:	mov	x2, #0x2                   	// #2
  40dfb0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40dfb4:	add	x1, x1, #0xa38
  40dfb8:	str	xzr, [sp, #88]
  40dfbc:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  40dfc0:	cmp	x0, #0x2
  40dfc4:	b.ne	40e044 <wcrtomb@plt+0xb1c4>  // b.any
  40dfc8:	ldr	w0, [sp, #80]
  40dfcc:	cmp	w0, #0x100
  40dfd0:	cset	w0, eq  // eq = none
  40dfd4:	add	x22, x19, #0x3
  40dfd8:	strb	w0, [x19, #2]
  40dfdc:	add	x19, x19, #0x104
  40dfe0:	mov	x20, #0x0                   	// #0
  40dfe4:	mov	x23, #0x1                   	// #1
  40dfe8:	mov	w21, #0xffffffff            	// #-1
  40dfec:	add	x1, sp, #0x4f
  40dff0:	add	x3, sp, #0x58
  40dff4:	add	x0, sp, #0x50
  40dff8:	mov	x2, #0x1                   	// #1
  40dffc:	strb	w20, [sp, #79]
  40e000:	str	xzr, [sp, #88]
  40e004:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  40e008:	cmp	x0, #0x0
  40e00c:	csel	x1, x0, x23, ne  // ne = any
  40e010:	cmp	x0, #0x2
  40e014:	ldr	w0, [sp, #80]
  40e018:	strb	w1, [x22, x20]
  40e01c:	csel	w0, w0, w21, cc  // cc = lo, ul, last
  40e020:	str	w0, [x19, x20, lsl #2]
  40e024:	add	x20, x20, #0x1
  40e028:	cmp	x20, #0x100
  40e02c:	b.ne	40dfec <wcrtomb@plt+0xb16c>  // b.any
  40e030:	ldp	x19, x20, [sp, #16]
  40e034:	ldp	x21, x22, [sp, #32]
  40e038:	ldr	x23, [sp, #48]
  40e03c:	ldp	x29, x30, [sp], #96
  40e040:	ret
  40e044:	mov	w0, #0x0                   	// #0
  40e048:	b	40dfd4 <wcrtomb@plt+0xb154>
  40e04c:	stp	x29, x30, [sp, #-80]!
  40e050:	mov	x29, sp
  40e054:	stp	x19, x20, [sp, #16]
  40e058:	stp	x21, x22, [sp, #32]
  40e05c:	mov	w22, w0
  40e060:	stp	x23, x24, [sp, #48]
  40e064:	mov	x23, x1
  40e068:	stp	x25, x26, [sp, #64]
  40e06c:	bl	402db0 <towupper@plt>
  40e070:	mov	w20, w0
  40e074:	bl	402e40 <towlower@plt>
  40e078:	mov	w21, w0
  40e07c:	cmp	w22, w20
  40e080:	b.eq	40e114 <wcrtomb@plt+0xb294>  // b.none
  40e084:	mov	w19, #0x1                   	// #1
  40e088:	str	w20, [x23]
  40e08c:	cmp	w20, w21
  40e090:	ccmp	w22, w21, #0x4, ne  // ne = any
  40e094:	b.eq	40e0b0 <wcrtomb@plt+0xb230>  // b.none
  40e098:	mov	w0, w21
  40e09c:	bl	402db0 <towupper@plt>
  40e0a0:	cmp	w0, w20
  40e0a4:	b.ne	40e0b0 <wcrtomb@plt+0xb230>  // b.any
  40e0a8:	str	w21, [x23, w19, sxtw #2]
  40e0ac:	add	w19, w19, #0x1
  40e0b0:	adrp	x26, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e0b4:	add	x26, x26, #0xa3c
  40e0b8:	mov	x25, #0x0                   	// #0
  40e0bc:	ldrsh	w24, [x26, x25, lsl #1]
  40e0c0:	cmp	w21, w24
  40e0c4:	ccmp	w20, w24, #0x4, ne  // ne = any
  40e0c8:	b.eq	40e0ec <wcrtomb@plt+0xb26c>  // b.none
  40e0cc:	cmp	w22, w24
  40e0d0:	b.eq	40e0ec <wcrtomb@plt+0xb26c>  // b.none
  40e0d4:	mov	w0, w24
  40e0d8:	bl	402db0 <towupper@plt>
  40e0dc:	cmp	w0, w20
  40e0e0:	b.ne	40e0ec <wcrtomb@plt+0xb26c>  // b.any
  40e0e4:	str	w24, [x23, w19, sxtw #2]
  40e0e8:	add	w19, w19, #0x1
  40e0ec:	add	x25, x25, #0x1
  40e0f0:	cmp	x25, #0x13
  40e0f4:	b.ne	40e0bc <wcrtomb@plt+0xb23c>  // b.any
  40e0f8:	mov	w0, w19
  40e0fc:	ldp	x19, x20, [sp, #16]
  40e100:	ldp	x21, x22, [sp, #32]
  40e104:	ldp	x23, x24, [sp, #48]
  40e108:	ldp	x25, x26, [sp, #64]
  40e10c:	ldp	x29, x30, [sp], #80
  40e110:	ret
  40e114:	mov	w19, #0x0                   	// #0
  40e118:	b	40e08c <wcrtomb@plt+0xb20c>
  40e11c:	stp	x29, x30, [sp, #-16]!
  40e120:	mov	w0, #0xe                   	// #14
  40e124:	mov	x29, sp
  40e128:	bl	4028f0 <nl_langinfo@plt>
  40e12c:	cbz	x0, 40e138 <wcrtomb@plt+0xb2b8>
  40e130:	ldrb	w1, [x0]
  40e134:	cbnz	w1, 40e140 <wcrtomb@plt+0xb2c0>
  40e138:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e13c:	add	x0, x0, #0xa62
  40e140:	ldp	x29, x30, [sp], #16
  40e144:	ret
  40e148:	stp	x29, x30, [sp, #-48]!
  40e14c:	mov	x29, sp
  40e150:	stp	x19, x20, [sp, #16]
  40e154:	str	x21, [sp, #32]
  40e158:	cbnz	x0, 40e174 <wcrtomb@plt+0xb2f4>
  40e15c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40e160:	ldr	x1, [x0, #1296]
  40e164:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e168:	add	x0, x0, #0xa68
  40e16c:	bl	4027a0 <fputs@plt>
  40e170:	bl	402b40 <abort@plt>
  40e174:	mov	x19, x0
  40e178:	mov	w1, #0x2f                  	// #47
  40e17c:	bl	402b10 <strrchr@plt>
  40e180:	mov	x20, x0
  40e184:	cbz	x0, 40e1d4 <wcrtomb@plt+0xb354>
  40e188:	add	x21, x0, #0x1
  40e18c:	sub	x0, x21, x19
  40e190:	cmp	x0, #0x6
  40e194:	b.le	40e1d4 <wcrtomb@plt+0xb354>
  40e198:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e19c:	sub	x0, x20, #0x6
  40e1a0:	add	x1, x1, #0xaa0
  40e1a4:	mov	x2, #0x7                   	// #7
  40e1a8:	bl	4029a0 <strncmp@plt>
  40e1ac:	cbnz	w0, 40e1d4 <wcrtomb@plt+0xb354>
  40e1b0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e1b4:	mov	x0, x21
  40e1b8:	add	x1, x1, #0xaa8
  40e1bc:	mov	x2, #0x3                   	// #3
  40e1c0:	bl	4029a0 <strncmp@plt>
  40e1c4:	cbnz	w0, 40e1f4 <wcrtomb@plt+0xb374>
  40e1c8:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40e1cc:	add	x19, x20, #0x4
  40e1d0:	str	x19, [x0, #1336]
  40e1d4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40e1d8:	ldr	x21, [sp, #32]
  40e1dc:	str	x19, [x0, #1968]
  40e1e0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40e1e4:	str	x19, [x0, #1288]
  40e1e8:	ldp	x19, x20, [sp, #16]
  40e1ec:	ldp	x29, x30, [sp], #48
  40e1f0:	ret
  40e1f4:	mov	x19, x21
  40e1f8:	b	40e1d4 <wcrtomb@plt+0xb354>
  40e1fc:	stp	x29, x30, [sp, #-64]!
  40e200:	mov	x29, sp
  40e204:	stp	x19, x20, [sp, #16]
  40e208:	mov	x19, x2
  40e20c:	mov	w20, w3
  40e210:	mov	w2, w4
  40e214:	add	x3, sp, #0x20
  40e218:	bl	41aa20 <_obstack_memory_used@@Base+0xa874>
  40e21c:	cbnz	w0, 40e24c <wcrtomb@plt+0xb3cc>
  40e220:	mov	x1, x19
  40e224:	mov	w2, w20
  40e228:	add	x0, sp, #0x20
  40e22c:	bl	41abe0 <_obstack_memory_used@@Base+0xaa34>
  40e230:	mov	w19, w0
  40e234:	add	x0, sp, #0x20
  40e238:	bl	41a9e4 <_obstack_memory_used@@Base+0xa838>
  40e23c:	mov	w0, w19
  40e240:	ldp	x19, x20, [sp, #16]
  40e244:	ldp	x29, x30, [sp], #64
  40e248:	ret
  40e24c:	mov	w19, #0xfffffffe            	// #-2
  40e250:	b	40e23c <wcrtomb@plt+0xb3bc>
  40e254:	stp	xzr, xzr, [x8]
  40e258:	cmp	w0, #0xa
  40e25c:	stp	xzr, xzr, [x8, #16]
  40e260:	stp	xzr, xzr, [x8, #32]
  40e264:	str	xzr, [x8, #48]
  40e268:	b.ne	40e278 <wcrtomb@plt+0xb3f8>  // b.any
  40e26c:	stp	x29, x30, [sp, #-16]!
  40e270:	mov	x29, sp
  40e274:	bl	402b40 <abort@plt>
  40e278:	str	w0, [x8]
  40e27c:	ret
  40e280:	stp	x29, x30, [sp, #-48]!
  40e284:	mov	w2, #0x5                   	// #5
  40e288:	mov	x29, sp
  40e28c:	stp	x19, x20, [sp, #16]
  40e290:	mov	x20, x0
  40e294:	str	x21, [sp, #32]
  40e298:	mov	w21, w1
  40e29c:	mov	x1, x0
  40e2a0:	mov	x0, #0x0                   	// #0
  40e2a4:	bl	402d60 <dcgettext@plt>
  40e2a8:	mov	x19, x0
  40e2ac:	cmp	x20, x0
  40e2b0:	b.ne	40e324 <wcrtomb@plt+0xb4a4>  // b.any
  40e2b4:	bl	40e11c <wcrtomb@plt+0xb29c>
  40e2b8:	ldrb	w2, [x0]
  40e2bc:	and	w2, w2, #0xffffffdf
  40e2c0:	cmp	w2, #0x55
  40e2c4:	b.ne	40e338 <wcrtomb@plt+0xb4b8>  // b.any
  40e2c8:	ldrb	w1, [x0, #1]
  40e2cc:	and	w1, w1, #0xffffffdf
  40e2d0:	cmp	w1, #0x54
  40e2d4:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e2d8:	ldrb	w1, [x0, #2]
  40e2dc:	and	w1, w1, #0xffffffdf
  40e2e0:	cmp	w1, #0x46
  40e2e4:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e2e8:	ldrb	w1, [x0, #3]
  40e2ec:	cmp	w1, #0x2d
  40e2f0:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e2f4:	ldrb	w1, [x0, #4]
  40e2f8:	cmp	w1, #0x38
  40e2fc:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e300:	ldrb	w0, [x0, #5]
  40e304:	cbnz	w0, 40e3b0 <wcrtomb@plt+0xb530>
  40e308:	ldrb	w1, [x19]
  40e30c:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e310:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e314:	add	x0, x0, #0xaac
  40e318:	cmp	w1, #0x60
  40e31c:	add	x19, x19, #0xab7
  40e320:	csel	x19, x19, x0, eq  // eq = none
  40e324:	mov	x0, x19
  40e328:	ldp	x19, x20, [sp, #16]
  40e32c:	ldr	x21, [sp, #32]
  40e330:	ldp	x29, x30, [sp], #48
  40e334:	ret
  40e338:	cmp	w2, #0x47
  40e33c:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e340:	ldrb	w1, [x0, #1]
  40e344:	and	w1, w1, #0xffffffdf
  40e348:	cmp	w1, #0x42
  40e34c:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e350:	ldrb	w1, [x0, #2]
  40e354:	cmp	w1, #0x31
  40e358:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e35c:	ldrb	w1, [x0, #3]
  40e360:	cmp	w1, #0x38
  40e364:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e368:	ldrb	w1, [x0, #4]
  40e36c:	cmp	w1, #0x30
  40e370:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e374:	ldrb	w1, [x0, #5]
  40e378:	cmp	w1, #0x33
  40e37c:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e380:	ldrb	w1, [x0, #6]
  40e384:	cmp	w1, #0x30
  40e388:	b.ne	40e3b0 <wcrtomb@plt+0xb530>  // b.any
  40e38c:	ldrb	w0, [x0, #7]
  40e390:	cbnz	w0, 40e3b0 <wcrtomb@plt+0xb530>
  40e394:	ldrb	w1, [x19]
  40e398:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e39c:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e3a0:	add	x0, x0, #0xab0
  40e3a4:	cmp	w1, #0x60
  40e3a8:	add	x19, x19, #0xab3
  40e3ac:	b	40e320 <wcrtomb@plt+0xb4a0>
  40e3b0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  40e3b4:	adrp	x19, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e3b8:	cmp	w21, #0x9
  40e3bc:	add	x0, x0, #0x6fc
  40e3c0:	add	x19, x19, #0x6c0
  40e3c4:	b	40e320 <wcrtomb@plt+0xb4a0>
  40e3c8:	sub	sp, sp, #0xf0
  40e3cc:	stp	x29, x30, [sp, #16]
  40e3d0:	add	x29, sp, #0x10
  40e3d4:	stp	x19, x20, [sp, #32]
  40e3d8:	stp	x21, x22, [sp, #48]
  40e3dc:	mov	x21, x2
  40e3e0:	stp	x23, x24, [sp, #64]
  40e3e4:	mov	x24, x3
  40e3e8:	stp	x25, x26, [sp, #80]
  40e3ec:	mov	w25, w4
  40e3f0:	mov	x26, x0
  40e3f4:	stp	x27, x28, [sp, #96]
  40e3f8:	str	x1, [sp, #112]
  40e3fc:	str	w5, [sp, #120]
  40e400:	str	x7, [sp, #128]
  40e404:	str	x6, [sp, #152]
  40e408:	bl	402c40 <__ctype_get_mb_cur_max@plt>
  40e40c:	str	x0, [sp, #160]
  40e410:	cmp	w25, #0xa
  40e414:	ldr	x0, [sp, #120]
  40e418:	str	xzr, [sp, #136]
  40e41c:	ubfx	x28, x0, #1, #1
  40e420:	mov	w0, #0x1                   	// #1
  40e424:	str	w0, [sp, #148]
  40e428:	b.hi	40e624 <wcrtomb@plt+0xb7a4>  // b.pmore
  40e42c:	mov	w20, #0x0                   	// #0
  40e430:	mov	w23, #0x0                   	// #0
  40e434:	mov	w22, #0x0                   	// #0
  40e438:	mov	x10, #0x0                   	// #0
  40e43c:	mov	x6, #0x0                   	// #0
  40e440:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e444:	add	x0, x0, #0xb10
  40e448:	ldrb	w0, [x0, w25, uxtw]
  40e44c:	adr	x1, 40e458 <wcrtomb@plt+0xb5d8>
  40e450:	add	x0, x1, w0, sxtb #2
  40e454:	br	x0
  40e458:	ldr	x0, [sp, #112]
  40e45c:	mov	w28, #0x0                   	// #0
  40e460:	str	x0, [sp, #136]
  40e464:	b	40e440 <wcrtomb@plt+0xb5c0>
  40e468:	mov	w28, #0x0                   	// #0
  40e46c:	mov	x19, #0x0                   	// #0
  40e470:	b	40e490 <wcrtomb@plt+0xb610>
  40e474:	mov	w28, #0x1                   	// #1
  40e478:	adrp	x6, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e47c:	mov	w22, w28
  40e480:	add	x6, x6, #0x6c0
  40e484:	mov	x10, #0x1                   	// #1
  40e488:	mov	x19, #0x0                   	// #0
  40e48c:	mov	w25, #0x5                   	// #5
  40e490:	ldr	x0, [sp, #136]
  40e494:	mov	x13, #0x0                   	// #0
  40e498:	str	w20, [sp, #144]
  40e49c:	ldr	x27, [sp, #112]
  40e4a0:	str	x0, [sp, #112]
  40e4a4:	cmn	x24, #0x1
  40e4a8:	b.ne	40eec4 <wcrtomb@plt+0xc044>  // b.any
  40e4ac:	ldrb	w0, [x21, x13]
  40e4b0:	cmp	w0, #0x0
  40e4b4:	cset	w14, ne  // ne = any
  40e4b8:	cmp	w25, #0x2
  40e4bc:	cbnz	w14, 40e648 <wcrtomb@plt+0xb7c8>
  40e4c0:	cset	w0, eq  // eq = none
  40e4c4:	cmp	x19, #0x0
  40e4c8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40e4cc:	b.eq	40e4d4 <wcrtomb@plt+0xb654>  // b.none
  40e4d0:	cbnz	w28, 40e75c <wcrtomb@plt+0xb8dc>
  40e4d4:	eor	w5, w28, #0x1
  40e4d8:	ands	w0, w0, w5
  40e4dc:	b.eq	40ef28 <wcrtomb@plt+0xc0a8>  // b.none
  40e4e0:	ldr	w1, [sp, #144]
  40e4e4:	cbz	w1, 40eeec <wcrtomb@plt+0xc06c>
  40e4e8:	ldr	w0, [sp, #148]
  40e4ec:	cbz	w0, 40eecc <wcrtomb@plt+0xc04c>
  40e4f0:	ldr	w5, [sp, #120]
  40e4f4:	mov	x3, x24
  40e4f8:	ldr	x1, [sp, #112]
  40e4fc:	mov	x2, x21
  40e500:	ldr	x7, [sp, #128]
  40e504:	mov	w4, #0x5                   	// #5
  40e508:	ldr	x6, [sp, #152]
  40e50c:	ldr	x0, [sp, #240]
  40e510:	str	x0, [sp]
  40e514:	mov	x0, x26
  40e518:	bl	40e3c8 <wcrtomb@plt+0xb548>
  40e51c:	b	40ef08 <wcrtomb@plt+0xc088>
  40e520:	adrp	x6, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e524:	add	x6, x6, #0x6c0
  40e528:	cbnz	w28, 40e63c <wcrtomb@plt+0xb7bc>
  40e52c:	ldr	x0, [sp, #112]
  40e530:	cbz	x0, 40e53c <wcrtomb@plt+0xb6bc>
  40e534:	mov	w0, #0x22                  	// #34
  40e538:	strb	w0, [x26]
  40e53c:	mov	x10, #0x1                   	// #1
  40e540:	mov	w22, #0x1                   	// #1
  40e544:	mov	x19, x10
  40e548:	b	40e490 <wcrtomb@plt+0xb610>
  40e54c:	cmp	w25, #0xa
  40e550:	b.eq	40e57c <wcrtomb@plt+0xb6fc>  // b.none
  40e554:	mov	w1, w25
  40e558:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e55c:	add	x0, x0, #0xabb
  40e560:	bl	40e280 <wcrtomb@plt+0xb400>
  40e564:	mov	w1, w25
  40e568:	str	x0, [sp, #128]
  40e56c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0xae54>
  40e570:	add	x0, x0, #0x6fc
  40e574:	bl	40e280 <wcrtomb@plt+0xb400>
  40e578:	str	x0, [sp, #240]
  40e57c:	mov	x19, #0x0                   	// #0
  40e580:	cbnz	w28, 40e590 <wcrtomb@plt+0xb710>
  40e584:	ldr	x0, [sp, #128]
  40e588:	ldrb	w0, [x0, x19]
  40e58c:	cbnz	w0, 40e5a8 <wcrtomb@plt+0xb728>
  40e590:	ldr	x0, [sp, #240]
  40e594:	mov	w22, #0x1                   	// #1
  40e598:	bl	402790 <strlen@plt>
  40e59c:	mov	x10, x0
  40e5a0:	ldr	x6, [sp, #240]
  40e5a4:	b	40e490 <wcrtomb@plt+0xb610>
  40e5a8:	ldr	x1, [sp, #112]
  40e5ac:	cmp	x1, x19
  40e5b0:	b.ls	40e5b8 <wcrtomb@plt+0xb738>  // b.plast
  40e5b4:	strb	w0, [x26, x19]
  40e5b8:	add	x19, x19, #0x1
  40e5bc:	b	40e584 <wcrtomb@plt+0xb704>
  40e5c0:	cbnz	w28, 40e60c <wcrtomb@plt+0xb78c>
  40e5c4:	mov	w22, #0x1                   	// #1
  40e5c8:	ldr	x0, [sp, #112]
  40e5cc:	adrp	x6, 41b000 <_obstack_memory_used@@Base+0xae54>
  40e5d0:	add	x6, x6, #0x6fc
  40e5d4:	cbz	x0, 40e5e0 <wcrtomb@plt+0xb760>
  40e5d8:	mov	w0, #0x27                  	// #39
  40e5dc:	strb	w0, [x26]
  40e5e0:	mov	x10, #0x1                   	// #1
  40e5e4:	mov	w28, #0x0                   	// #0
  40e5e8:	mov	x19, x10
  40e5ec:	b	40e61c <wcrtomb@plt+0xb79c>
  40e5f0:	cbz	w28, 40e5c8 <wcrtomb@plt+0xb748>
  40e5f4:	adrp	x6, 41b000 <_obstack_memory_used@@Base+0xae54>
  40e5f8:	mov	x10, #0x1                   	// #1
  40e5fc:	add	x6, x6, #0x6fc
  40e600:	b	40e46c <wcrtomb@plt+0xb5ec>
  40e604:	mov	w28, #0x1                   	// #1
  40e608:	mov	w22, w28
  40e60c:	adrp	x6, 41b000 <_obstack_memory_used@@Base+0xae54>
  40e610:	add	x6, x6, #0x6fc
  40e614:	mov	x10, #0x1                   	// #1
  40e618:	mov	x19, #0x0                   	// #0
  40e61c:	mov	w25, #0x2                   	// #2
  40e620:	b	40e490 <wcrtomb@plt+0xb610>
  40e624:	bl	402b40 <abort@plt>
  40e628:	mov	w28, #0x0                   	// #0
  40e62c:	mov	w22, #0x1                   	// #1
  40e630:	b	40e46c <wcrtomb@plt+0xb5ec>
  40e634:	mov	w28, #0x1                   	// #1
  40e638:	b	40e60c <wcrtomb@plt+0xb78c>
  40e63c:	mov	w22, w28
  40e640:	mov	x10, #0x1                   	// #1
  40e644:	b	40e46c <wcrtomb@plt+0xb5ec>
  40e648:	add	x0, x21, x13
  40e64c:	str	x0, [sp, #136]
  40e650:	cset	w3, ne  // ne = any
  40e654:	ands	w3, w22, w3
  40e658:	b.eq	40e70c <wcrtomb@plt+0xb88c>  // b.none
  40e65c:	cbz	x10, 40e70c <wcrtomb@plt+0xb88c>
  40e660:	cmp	x10, #0x1
  40e664:	add	x20, x13, x10
  40e668:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  40e66c:	b.ne	40e69c <wcrtomb@plt+0xb81c>  // b.any
  40e670:	mov	x0, x21
  40e674:	stp	x13, x6, [sp, #168]
  40e678:	str	x10, [sp, #184]
  40e67c:	str	w3, [sp, #192]
  40e680:	str	w14, [sp, #200]
  40e684:	bl	402790 <strlen@plt>
  40e688:	ldp	x13, x6, [sp, #168]
  40e68c:	mov	x24, x0
  40e690:	ldr	w3, [sp, #192]
  40e694:	ldr	w14, [sp, #200]
  40e698:	ldr	x10, [sp, #184]
  40e69c:	cmp	x20, x24
  40e6a0:	b.hi	40e70c <wcrtomb@plt+0xb88c>  // b.pmore
  40e6a4:	ldr	x0, [sp, #136]
  40e6a8:	mov	x2, x10
  40e6ac:	mov	x1, x6
  40e6b0:	stp	x6, x10, [sp, #168]
  40e6b4:	str	x13, [sp, #184]
  40e6b8:	str	w3, [sp, #192]
  40e6bc:	str	w14, [sp, #200]
  40e6c0:	bl	402bb0 <memcmp@plt>
  40e6c4:	ldr	w3, [sp, #192]
  40e6c8:	ldr	w14, [sp, #200]
  40e6cc:	ldp	x6, x10, [sp, #168]
  40e6d0:	ldr	x13, [sp, #184]
  40e6d4:	cbnz	w0, 40e70c <wcrtomb@plt+0xb88c>
  40e6d8:	cbnz	w28, 40ef54 <wcrtomb@plt+0xc0d4>
  40e6dc:	mov	w18, w3
  40e6e0:	ldr	x0, [sp, #136]
  40e6e4:	ldrb	w7, [x0]
  40e6e8:	cmp	w7, #0x3f
  40e6ec:	b.ls	40e734 <wcrtomb@plt+0xb8b4>  // b.plast
  40e6f0:	cmp	w7, #0x5a
  40e6f4:	b.hi	40e7e8 <wcrtomb@plt+0xb968>  // b.pmore
  40e6f8:	cmp	w7, #0x40
  40e6fc:	b.eq	40e7f8 <wcrtomb@plt+0xb978>  // b.none
  40e700:	mov	w20, w14
  40e704:	mov	w3, #0x0                   	// #0
  40e708:	b	40ea4c <wcrtomb@plt+0xbbcc>
  40e70c:	mov	w18, #0x0                   	// #0
  40e710:	b	40e6e0 <wcrtomb@plt+0xb860>
  40e714:	cmp	w0, #0x23
  40e718:	b.hi	40e7f8 <wcrtomb@plt+0xb978>  // b.pmore
  40e71c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e720:	add	x1, x1, #0xb1c
  40e724:	ldrh	w0, [x1, w0, uxtw #1]
  40e728:	adr	x1, 40e734 <wcrtomb@plt+0xb8b4>
  40e72c:	add	x0, x1, w0, sxth #2
  40e730:	br	x0
  40e734:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e738:	add	x0, x0, #0xb64
  40e73c:	ldrh	w0, [x0, w7, uxtw #1]
  40e740:	adr	x1, 40e74c <wcrtomb@plt+0xb8cc>
  40e744:	add	x0, x1, w0, sxth #2
  40e748:	br	x0
  40e74c:	mov	w0, #0x72                  	// #114
  40e750:	cmp	w28, #0x0
  40e754:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40e758:	b.ne	40e768 <wcrtomb@plt+0xb8e8>  // b.any
  40e75c:	mov	w25, #0x2                   	// #2
  40e760:	b	40e9a4 <wcrtomb@plt+0xbb24>
  40e764:	mov	w0, #0x62                  	// #98
  40e768:	cbz	w22, 40e92c <wcrtomb@plt+0xbaac>
  40e76c:	mov	w7, w0
  40e770:	mov	w20, #0x0                   	// #0
  40e774:	cmp	w25, #0x2
  40e778:	cset	w0, eq  // eq = none
  40e77c:	cbnz	w28, 40e9a4 <wcrtomb@plt+0xbb24>
  40e780:	eor	w1, w23, #0x1
  40e784:	ands	w0, w0, w1
  40e788:	b.eq	40e7cc <wcrtomb@plt+0xb94c>  // b.none
  40e78c:	cmp	x27, x19
  40e790:	b.ls	40e79c <wcrtomb@plt+0xb91c>  // b.plast
  40e794:	mov	w1, #0x27                  	// #39
  40e798:	strb	w1, [x26, x19]
  40e79c:	add	x1, x19, #0x1
  40e7a0:	cmp	x27, x1
  40e7a4:	b.ls	40e7b0 <wcrtomb@plt+0xb930>  // b.plast
  40e7a8:	mov	w2, #0x24                  	// #36
  40e7ac:	strb	w2, [x26, x1]
  40e7b0:	add	x1, x19, #0x2
  40e7b4:	cmp	x27, x1
  40e7b8:	b.ls	40e7c4 <wcrtomb@plt+0xb944>  // b.plast
  40e7bc:	mov	w2, #0x27                  	// #39
  40e7c0:	strb	w2, [x26, x1]
  40e7c4:	add	x19, x19, #0x3
  40e7c8:	mov	w23, w0
  40e7cc:	cmp	x27, x19
  40e7d0:	b.ls	40e7dc <wcrtomb@plt+0xb95c>  // b.plast
  40e7d4:	mov	w0, #0x5c                  	// #92
  40e7d8:	strb	w0, [x26, x19]
  40e7dc:	add	x19, x19, #0x1
  40e7e0:	mov	w3, w14
  40e7e4:	b	40ea88 <wcrtomb@plt+0xbc08>
  40e7e8:	sub	w0, w7, #0x5b
  40e7ec:	and	w1, w0, #0xff
  40e7f0:	cmp	w1, #0x23
  40e7f4:	b.ls	40e714 <wcrtomb@plt+0xb894>  // b.plast
  40e7f8:	ldr	x0, [sp, #160]
  40e7fc:	cmp	x0, #0x1
  40e800:	b.ne	40ebf8 <wcrtomb@plt+0xbd78>  // b.any
  40e804:	str	x13, [sp, #136]
  40e808:	stp	x6, x10, [sp, #168]
  40e80c:	str	w7, [sp, #184]
  40e810:	str	w18, [sp, #192]
  40e814:	str	w14, [sp, #200]
  40e818:	bl	402c00 <__ctype_b_loc@plt>
  40e81c:	ldr	w7, [sp, #184]
  40e820:	ldr	x0, [x0]
  40e824:	ldp	x15, x6, [sp, #160]
  40e828:	ldrh	w20, [x0, w7, uxtw #1]
  40e82c:	ldr	w18, [sp, #192]
  40e830:	ldr	w14, [sp, #200]
  40e834:	ldr	x13, [sp, #136]
  40e838:	ubfx	x20, x20, #14, #1
  40e83c:	ldr	x10, [sp, #176]
  40e840:	eor	w3, w20, #0x1
  40e844:	and	w3, w22, w3
  40e848:	ands	w3, w3, #0xff
  40e84c:	b.eq	40ea4c <wcrtomb@plt+0xbbcc>  // b.none
  40e850:	mov	w20, #0x0                   	// #0
  40e854:	b	40ed68 <wcrtomb@plt+0xbee8>
  40e858:	cbz	w22, 40e924 <wcrtomb@plt+0xbaa4>
  40e85c:	cmp	w25, #0x2
  40e860:	cset	w0, eq  // eq = none
  40e864:	cbnz	w28, 40ef54 <wcrtomb@plt+0xc0d4>
  40e868:	eor	w1, w23, #0x1
  40e86c:	ands	w1, w0, w1
  40e870:	b.eq	40e91c <wcrtomb@plt+0xba9c>  // b.none
  40e874:	cmp	x27, x19
  40e878:	b.ls	40e884 <wcrtomb@plt+0xba04>  // b.plast
  40e87c:	mov	w0, #0x27                  	// #39
  40e880:	strb	w0, [x26, x19]
  40e884:	add	x0, x19, #0x1
  40e888:	cmp	x27, x0
  40e88c:	b.ls	40e898 <wcrtomb@plt+0xba18>  // b.plast
  40e890:	mov	w2, #0x24                  	// #36
  40e894:	strb	w2, [x26, x0]
  40e898:	add	x0, x19, #0x2
  40e89c:	cmp	x27, x0
  40e8a0:	b.ls	40e8ac <wcrtomb@plt+0xba2c>  // b.plast
  40e8a4:	mov	w2, #0x27                  	// #39
  40e8a8:	strb	w2, [x26, x0]
  40e8ac:	add	x0, x19, #0x3
  40e8b0:	mov	w23, w1
  40e8b4:	cmp	x27, x0
  40e8b8:	b.ls	40e8c4 <wcrtomb@plt+0xba44>  // b.plast
  40e8bc:	mov	w1, #0x5c                  	// #92
  40e8c0:	strb	w1, [x26, x0]
  40e8c4:	add	x19, x0, #0x1
  40e8c8:	cbz	w3, 40ee98 <wcrtomb@plt+0xc018>
  40e8cc:	add	x1, x13, #0x1
  40e8d0:	cmp	x1, x24
  40e8d4:	b.cs	40e914 <wcrtomb@plt+0xba94>  // b.hs, b.nlast
  40e8d8:	ldrb	w1, [x21, x1]
  40e8dc:	sub	w1, w1, #0x30
  40e8e0:	and	w1, w1, #0xff
  40e8e4:	cmp	w1, #0x9
  40e8e8:	b.hi	40e914 <wcrtomb@plt+0xba94>  // b.pmore
  40e8ec:	cmp	x27, x19
  40e8f0:	b.ls	40e8fc <wcrtomb@plt+0xba7c>  // b.plast
  40e8f4:	mov	w1, #0x30                  	// #48
  40e8f8:	strb	w1, [x26, x19]
  40e8fc:	add	x1, x0, #0x2
  40e900:	cmp	x27, x1
  40e904:	b.ls	40e910 <wcrtomb@plt+0xba90>  // b.plast
  40e908:	mov	w2, #0x30                  	// #48
  40e90c:	strb	w2, [x26, x1]
  40e910:	add	x19, x0, #0x3
  40e914:	mov	w20, #0x0                   	// #0
  40e918:	b	40eea0 <wcrtomb@plt+0xc020>
  40e91c:	mov	x0, x19
  40e920:	b	40e8b4 <wcrtomb@plt+0xba34>
  40e924:	ldr	x0, [sp, #120]
  40e928:	tbnz	w0, #0, 40eae0 <wcrtomb@plt+0xbc60>
  40e92c:	mov	w20, #0x0                   	// #0
  40e930:	b	40e704 <wcrtomb@plt+0xb884>
  40e934:	cmp	w25, #0x2
  40e938:	b.eq	40e9a0 <wcrtomb@plt+0xbb20>  // b.none
  40e93c:	cmp	w25, #0x5
  40e940:	b.ne	40e92c <wcrtomb@plt+0xbaac>  // b.any
  40e944:	ldr	x0, [sp, #120]
  40e948:	tbz	w0, #2, 40e92c <wcrtomb@plt+0xbaac>
  40e94c:	add	x1, x13, #0x2
  40e950:	cmp	x1, x24
  40e954:	b.cs	40e92c <wcrtomb@plt+0xbaac>  // b.hs, b.nlast
  40e958:	ldr	x0, [sp, #136]
  40e95c:	ldrb	w0, [x0, #1]
  40e960:	cmp	w0, #0x3f
  40e964:	b.ne	40e92c <wcrtomb@plt+0xbaac>  // b.any
  40e968:	ldrb	w7, [x21, x1]
  40e96c:	cmp	w7, #0x2f
  40e970:	b.hi	40e9dc <wcrtomb@plt+0xbb5c>  // b.pmore
  40e974:	cmp	w7, #0x20
  40e978:	b.ls	40eeb0 <wcrtomb@plt+0xc030>  // b.plast
  40e97c:	sub	w2, w7, #0x21
  40e980:	cmp	w2, #0xe
  40e984:	b.hi	40eea8 <wcrtomb@plt+0xc028>  // b.pmore
  40e988:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40e98c:	add	x0, x0, #0xbe4
  40e990:	ldrh	w0, [x0, w2, uxtw #1]
  40e994:	adr	x2, 40e9a0 <wcrtomb@plt+0xbb20>
  40e998:	add	x0, x2, w0, sxth #2
  40e99c:	br	x0
  40e9a0:	cbz	w28, 40e92c <wcrtomb@plt+0xbaac>
  40e9a4:	ldr	x0, [sp, #240]
  40e9a8:	cmp	w22, #0x0
  40e9ac:	str	x0, [sp]
  40e9b0:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40e9b4:	ldr	w0, [sp, #120]
  40e9b8:	mov	x3, x24
  40e9bc:	mov	x2, x21
  40e9c0:	mov	x1, x27
  40e9c4:	and	w5, w0, #0xfffffffd
  40e9c8:	mov	x6, #0x0                   	// #0
  40e9cc:	mov	w0, #0x4                   	// #4
  40e9d0:	csel	w4, w25, w0, ne  // ne = any
  40e9d4:	ldr	x7, [sp, #128]
  40e9d8:	b	40e514 <wcrtomb@plt+0xb694>
  40e9dc:	sub	w2, w7, #0x3c
  40e9e0:	and	w2, w2, #0xff
  40e9e4:	cmp	w2, #0x2
  40e9e8:	b.hi	40eeb0 <wcrtomb@plt+0xc030>  // b.pmore
  40e9ec:	cbnz	w28, 40e9a4 <wcrtomb@plt+0xbb24>
  40e9f0:	cmp	x27, x19
  40e9f4:	b.ls	40ea00 <wcrtomb@plt+0xbb80>  // b.plast
  40e9f8:	mov	w0, #0x3f                  	// #63
  40e9fc:	strb	w0, [x26, x19]
  40ea00:	add	x0, x19, #0x1
  40ea04:	cmp	x27, x0
  40ea08:	b.ls	40ea14 <wcrtomb@plt+0xbb94>  // b.plast
  40ea0c:	mov	w2, #0x22                  	// #34
  40ea10:	strb	w2, [x26, x0]
  40ea14:	add	x0, x19, #0x2
  40ea18:	cmp	x27, x0
  40ea1c:	b.ls	40ea28 <wcrtomb@plt+0xbba8>  // b.plast
  40ea20:	mov	w2, #0x22                  	// #34
  40ea24:	strb	w2, [x26, x0]
  40ea28:	add	x0, x19, #0x3
  40ea2c:	cmp	x27, x0
  40ea30:	b.ls	40ea3c <wcrtomb@plt+0xbbbc>  // b.plast
  40ea34:	mov	w2, #0x3f                  	// #63
  40ea38:	strb	w2, [x26, x0]
  40ea3c:	add	x19, x19, #0x4
  40ea40:	mov	x13, x1
  40ea44:	mov	w20, #0x0                   	// #0
  40ea48:	mov	w3, #0x0                   	// #0
  40ea4c:	cmp	w25, #0x2
  40ea50:	eor	w0, w22, #0x1
  40ea54:	cset	w1, eq  // eq = none
  40ea58:	orr	w0, w1, w0
  40ea5c:	tst	w0, #0xff
  40ea60:	b.eq	40ea68 <wcrtomb@plt+0xbbe8>  // b.none
  40ea64:	cbz	w28, 40ea84 <wcrtomb@plt+0xbc04>
  40ea68:	ldr	x0, [sp, #152]
  40ea6c:	cbz	x0, 40ea84 <wcrtomb@plt+0xbc04>
  40ea70:	ldr	x1, [sp, #152]
  40ea74:	ubfx	x0, x7, #5, #8
  40ea78:	ldr	w0, [x1, x0, lsl #2]
  40ea7c:	lsr	w0, w0, w7
  40ea80:	tbnz	w0, #0, 40e774 <wcrtomb@plt+0xb8f4>
  40ea84:	cbnz	w18, 40e774 <wcrtomb@plt+0xb8f4>
  40ea88:	eor	w3, w3, #0x1
  40ea8c:	tst	w23, w3
  40ea90:	b.eq	40eac0 <wcrtomb@plt+0xbc40>  // b.none
  40ea94:	cmp	x27, x19
  40ea98:	b.ls	40eaa4 <wcrtomb@plt+0xbc24>  // b.plast
  40ea9c:	mov	w0, #0x27                  	// #39
  40eaa0:	strb	w0, [x26, x19]
  40eaa4:	add	x0, x19, #0x1
  40eaa8:	cmp	x27, x0
  40eaac:	b.ls	40eab8 <wcrtomb@plt+0xbc38>  // b.plast
  40eab0:	mov	w1, #0x27                  	// #39
  40eab4:	strb	w1, [x26, x0]
  40eab8:	add	x19, x19, #0x2
  40eabc:	mov	w23, #0x0                   	// #0
  40eac0:	cmp	x27, x19
  40eac4:	b.ls	40eacc <wcrtomb@plt+0xbc4c>  // b.plast
  40eac8:	strb	w7, [x26, x19]
  40eacc:	ldr	w0, [sp, #148]
  40ead0:	cmp	w20, #0x0
  40ead4:	add	x19, x19, #0x1
  40ead8:	csel	w0, w0, wzr, ne  // ne = any
  40eadc:	str	w0, [sp, #148]
  40eae0:	add	x13, x13, #0x1
  40eae4:	b	40e4a4 <wcrtomb@plt+0xb624>
  40eae8:	mov	w0, #0x74                  	// #116
  40eaec:	b	40e750 <wcrtomb@plt+0xb8d0>
  40eaf0:	mov	w0, #0x76                  	// #118
  40eaf4:	b	40e768 <wcrtomb@plt+0xb8e8>
  40eaf8:	cmp	w25, #0x2
  40eafc:	b.ne	40eb10 <wcrtomb@plt+0xbc90>  // b.any
  40eb00:	cbnz	w28, 40e9a4 <wcrtomb@plt+0xbb24>
  40eb04:	mov	w20, #0x0                   	// #0
  40eb08:	mov	w3, #0x0                   	// #0
  40eb0c:	b	40ea88 <wcrtomb@plt+0xbc08>
  40eb10:	cmp	w22, #0x0
  40eb14:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  40eb18:	b.eq	40eb20 <wcrtomb@plt+0xbca0>  // b.none
  40eb1c:	cbnz	x10, 40eb04 <wcrtomb@plt+0xbc84>
  40eb20:	mov	w0, w7
  40eb24:	b	40e750 <wcrtomb@plt+0xb8d0>
  40eb28:	mov	w0, #0x6e                  	// #110
  40eb2c:	b	40e750 <wcrtomb@plt+0xb8d0>
  40eb30:	mov	w0, #0x61                  	// #97
  40eb34:	b	40e768 <wcrtomb@plt+0xb8e8>
  40eb38:	mov	w0, #0x66                  	// #102
  40eb3c:	b	40e768 <wcrtomb@plt+0xb8e8>
  40eb40:	cmn	x24, #0x1
  40eb44:	b.ne	40eb70 <wcrtomb@plt+0xbcf0>  // b.any
  40eb48:	ldrb	w0, [x21, #1]
  40eb4c:	cmp	w0, #0x0
  40eb50:	cset	w0, ne  // ne = any
  40eb54:	cbnz	w0, 40e92c <wcrtomb@plt+0xbaac>
  40eb58:	cbnz	x13, 40e92c <wcrtomb@plt+0xbaac>
  40eb5c:	mov	w20, w14
  40eb60:	cmp	w25, #0x2
  40eb64:	csel	w3, w28, wzr, eq  // eq = none
  40eb68:	cbz	w3, 40ea4c <wcrtomb@plt+0xbbcc>
  40eb6c:	b	40e75c <wcrtomb@plt+0xb8dc>
  40eb70:	cmp	x24, #0x1
  40eb74:	b	40eb50 <wcrtomb@plt+0xbcd0>
  40eb78:	mov	w20, #0x0                   	// #0
  40eb7c:	b	40eb60 <wcrtomb@plt+0xbce0>
  40eb80:	cmp	w25, #0x2
  40eb84:	b.ne	40eeb8 <wcrtomb@plt+0xc038>  // b.any
  40eb88:	cbnz	w28, 40e9a4 <wcrtomb@plt+0xbb24>
  40eb8c:	ldr	x0, [sp, #112]
  40eb90:	cmp	x27, #0x0
  40eb94:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  40eb98:	b.eq	40ebec <wcrtomb@plt+0xbd6c>  // b.none
  40eb9c:	cmp	x27, x19
  40eba0:	b.ls	40ebac <wcrtomb@plt+0xbd2c>  // b.plast
  40eba4:	mov	w0, #0x27                  	// #39
  40eba8:	strb	w0, [x26, x19]
  40ebac:	add	x0, x19, #0x1
  40ebb0:	cmp	x0, x27
  40ebb4:	b.cs	40ebc0 <wcrtomb@plt+0xbd40>  // b.hs, b.nlast
  40ebb8:	mov	w1, #0x5c                  	// #92
  40ebbc:	strb	w1, [x26, x0]
  40ebc0:	add	x0, x19, #0x2
  40ebc4:	cmp	x0, x27
  40ebc8:	b.cs	40ebd4 <wcrtomb@plt+0xbd54>  // b.hs, b.nlast
  40ebcc:	mov	w1, #0x27                  	// #39
  40ebd0:	strb	w1, [x26, x0]
  40ebd4:	add	x19, x19, #0x3
  40ebd8:	mov	w20, w14
  40ebdc:	mov	w3, #0x0                   	// #0
  40ebe0:	mov	w23, #0x0                   	// #0
  40ebe4:	str	w14, [sp, #144]
  40ebe8:	b	40ea4c <wcrtomb@plt+0xbbcc>
  40ebec:	str	x27, [sp, #112]
  40ebf0:	mov	x27, #0x0                   	// #0
  40ebf4:	b	40ebac <wcrtomb@plt+0xbd2c>
  40ebf8:	str	xzr, [sp, #232]
  40ebfc:	cmn	x24, #0x1
  40ec00:	b.ne	40ec38 <wcrtomb@plt+0xbdb8>  // b.any
  40ec04:	mov	x0, x21
  40ec08:	stp	x13, x6, [sp, #168]
  40ec0c:	str	x10, [sp, #184]
  40ec10:	str	w7, [sp, #192]
  40ec14:	str	w18, [sp, #200]
  40ec18:	str	w14, [sp, #208]
  40ec1c:	bl	402790 <strlen@plt>
  40ec20:	ldp	x13, x6, [sp, #168]
  40ec24:	mov	x24, x0
  40ec28:	ldr	w7, [sp, #192]
  40ec2c:	ldr	w18, [sp, #200]
  40ec30:	ldr	w14, [sp, #208]
  40ec34:	ldr	x10, [sp, #184]
  40ec38:	mov	w20, w14
  40ec3c:	mov	x15, #0x0                   	// #0
  40ec40:	add	x2, x13, x15
  40ec44:	add	x3, sp, #0xe8
  40ec48:	add	x1, x21, x2
  40ec4c:	add	x0, sp, #0xe4
  40ec50:	sub	x2, x24, x2
  40ec54:	stp	x1, x13, [sp, #168]
  40ec58:	stp	x15, x6, [sp, #184]
  40ec5c:	str	x10, [sp, #200]
  40ec60:	stp	w7, w18, [sp, #208]
  40ec64:	str	w14, [sp, #216]
  40ec68:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  40ec6c:	ldp	w7, w18, [sp, #208]
  40ec70:	mov	x3, x0
  40ec74:	ldr	w14, [sp, #216]
  40ec78:	ldp	x13, x15, [sp, #176]
  40ec7c:	ldp	x6, x10, [sp, #192]
  40ec80:	cbz	x0, 40ed60 <wcrtomb@plt+0xbee0>
  40ec84:	cmn	x0, #0x1
  40ec88:	b.eq	40ecb0 <wcrtomb@plt+0xbe30>  // b.none
  40ec8c:	cmn	x0, #0x2
  40ec90:	ldr	x1, [sp, #168]
  40ec94:	b.ne	40ecc0 <wcrtomb@plt+0xbe40>  // b.any
  40ec98:	add	x0, x13, x15
  40ec9c:	cmp	x24, x0
  40eca0:	b.ls	40ecb0 <wcrtomb@plt+0xbe30>  // b.plast
  40eca4:	ldr	x0, [sp, #136]
  40eca8:	ldrb	w0, [x0, x15]
  40ecac:	cbnz	w0, 40ecb8 <wcrtomb@plt+0xbe38>
  40ecb0:	mov	w20, #0x0                   	// #0
  40ecb4:	b	40ed60 <wcrtomb@plt+0xbee0>
  40ecb8:	add	x15, x15, #0x1
  40ecbc:	b	40ec98 <wcrtomb@plt+0xbe18>
  40ecc0:	cmp	w28, #0x0
  40ecc4:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40ecc8:	b.ne	40ed0c <wcrtomb@plt+0xbe8c>  // b.any
  40eccc:	mov	x0, #0x1                   	// #1
  40ecd0:	b	40ed04 <wcrtomb@plt+0xbe84>
  40ecd4:	ldrb	w2, [x1, x0]
  40ecd8:	sub	w2, w2, #0x5b
  40ecdc:	and	w2, w2, #0xff
  40ece0:	cmp	w2, #0x21
  40ece4:	b.hi	40ed00 <wcrtomb@plt+0xbe80>  // b.pmore
  40ece8:	mov	x4, #0x1                   	// #1
  40ecec:	lsl	x2, x4, x2
  40ecf0:	mov	x4, #0x2b                  	// #43
  40ecf4:	movk	x4, #0x2, lsl #32
  40ecf8:	tst	x2, x4
  40ecfc:	b.ne	40e75c <wcrtomb@plt+0xb8dc>  // b.any
  40ed00:	add	x0, x0, #0x1
  40ed04:	cmp	x0, x3
  40ed08:	b.ne	40ecd4 <wcrtomb@plt+0xbe54>  // b.any
  40ed0c:	ldr	w0, [sp, #228]
  40ed10:	stp	x15, x13, [sp, #168]
  40ed14:	stp	x6, x10, [sp, #184]
  40ed18:	str	w7, [sp, #200]
  40ed1c:	stp	w18, w14, [sp, #208]
  40ed20:	str	x3, [sp, #216]
  40ed24:	bl	402dc0 <iswprint@plt>
  40ed28:	ldr	x15, [sp, #168]
  40ed2c:	cmp	w0, #0x0
  40ed30:	ldr	x3, [sp, #216]
  40ed34:	csel	w20, w20, wzr, ne  // ne = any
  40ed38:	add	x0, sp, #0xe8
  40ed3c:	add	x15, x15, x3
  40ed40:	str	x15, [sp, #168]
  40ed44:	str	x15, [sp, #216]
  40ed48:	bl	402b70 <mbsinit@plt>
  40ed4c:	ldr	w7, [sp, #200]
  40ed50:	ldp	w18, w14, [sp, #208]
  40ed54:	ldp	x15, x13, [sp, #168]
  40ed58:	ldp	x6, x10, [sp, #184]
  40ed5c:	cbz	w0, 40ec40 <wcrtomb@plt+0xbdc0>
  40ed60:	cmp	x15, #0x1
  40ed64:	b.ls	40e840 <wcrtomb@plt+0xb9c0>  // b.plast
  40ed68:	eor	w0, w20, #0x1
  40ed6c:	add	x15, x13, x15
  40ed70:	and	w0, w22, w0
  40ed74:	mov	w3, #0x0                   	// #0
  40ed78:	and	w0, w0, #0xff
  40ed7c:	mov	w16, #0x5c                  	// #92
  40ed80:	mov	w1, #0x27                  	// #39
  40ed84:	mov	w17, #0x24                  	// #36
  40ed88:	cbz	w0, 40ee7c <wcrtomb@plt+0xbffc>
  40ed8c:	cmp	w25, #0x2
  40ed90:	cset	w3, eq  // eq = none
  40ed94:	cbnz	w28, 40ef54 <wcrtomb@plt+0xc0d4>
  40ed98:	eor	w2, w23, #0x1
  40ed9c:	ands	w2, w3, w2
  40eda0:	b.eq	40edd8 <wcrtomb@plt+0xbf58>  // b.none
  40eda4:	cmp	x27, x19
  40eda8:	b.ls	40edb0 <wcrtomb@plt+0xbf30>  // b.plast
  40edac:	strb	w1, [x26, x19]
  40edb0:	add	x3, x19, #0x1
  40edb4:	cmp	x27, x3
  40edb8:	b.ls	40edc0 <wcrtomb@plt+0xbf40>  // b.plast
  40edbc:	strb	w17, [x26, x3]
  40edc0:	add	x3, x19, #0x2
  40edc4:	cmp	x27, x3
  40edc8:	b.ls	40edd0 <wcrtomb@plt+0xbf50>  // b.plast
  40edcc:	strb	w1, [x26, x3]
  40edd0:	add	x19, x19, #0x3
  40edd4:	mov	w23, w2
  40edd8:	cmp	x27, x19
  40eddc:	b.ls	40ede4 <wcrtomb@plt+0xbf64>  // b.plast
  40ede0:	strb	w16, [x26, x19]
  40ede4:	add	x3, x19, #0x1
  40ede8:	cmp	x27, x3
  40edec:	b.ls	40edfc <wcrtomb@plt+0xbf7c>  // b.plast
  40edf0:	lsr	w2, w7, #6
  40edf4:	add	w2, w2, #0x30
  40edf8:	strb	w2, [x26, x3]
  40edfc:	add	x3, x19, #0x2
  40ee00:	cmp	x27, x3
  40ee04:	b.ls	40ee14 <wcrtomb@plt+0xbf94>  // b.plast
  40ee08:	ubfx	x2, x7, #3, #3
  40ee0c:	add	w2, w2, #0x30
  40ee10:	strb	w2, [x26, x3]
  40ee14:	and	w7, w7, #0x7
  40ee18:	add	x19, x19, #0x3
  40ee1c:	add	w7, w7, #0x30
  40ee20:	mov	w3, w0
  40ee24:	add	x2, x13, #0x1
  40ee28:	eor	w14, w3, #0x1
  40ee2c:	and	w14, w23, w14
  40ee30:	cmp	x2, x15
  40ee34:	b.cs	40ea88 <wcrtomb@plt+0xbc08>  // b.hs, b.nlast
  40ee38:	cbz	w14, 40ee60 <wcrtomb@plt+0xbfe0>
  40ee3c:	cmp	x27, x19
  40ee40:	b.ls	40ee48 <wcrtomb@plt+0xbfc8>  // b.plast
  40ee44:	strb	w1, [x26, x19]
  40ee48:	add	x13, x19, #0x1
  40ee4c:	cmp	x27, x13
  40ee50:	b.ls	40ee58 <wcrtomb@plt+0xbfd8>  // b.plast
  40ee54:	strb	w1, [x26, x13]
  40ee58:	add	x19, x19, #0x2
  40ee5c:	mov	w23, #0x0                   	// #0
  40ee60:	cmp	x27, x19
  40ee64:	b.ls	40ee6c <wcrtomb@plt+0xbfec>  // b.plast
  40ee68:	strb	w7, [x26, x19]
  40ee6c:	ldrb	w7, [x21, x2]
  40ee70:	add	x19, x19, #0x1
  40ee74:	mov	x13, x2
  40ee78:	b	40ed88 <wcrtomb@plt+0xbf08>
  40ee7c:	cbz	w18, 40ee24 <wcrtomb@plt+0xbfa4>
  40ee80:	cmp	x27, x19
  40ee84:	b.ls	40ee8c <wcrtomb@plt+0xc00c>  // b.plast
  40ee88:	strb	w16, [x26, x19]
  40ee8c:	add	x19, x19, #0x1
  40ee90:	mov	w18, #0x0                   	// #0
  40ee94:	b	40ee24 <wcrtomb@plt+0xbfa4>
  40ee98:	mov	w3, w22
  40ee9c:	mov	w20, #0x0                   	// #0
  40eea0:	mov	w7, #0x30                  	// #48
  40eea4:	b	40ea4c <wcrtomb@plt+0xbbcc>
  40eea8:	mov	w7, #0x3f                  	// #63
  40eeac:	b	40e92c <wcrtomb@plt+0xbaac>
  40eeb0:	mov	w7, w0
  40eeb4:	b	40e92c <wcrtomb@plt+0xbaac>
  40eeb8:	mov	w20, w14
  40eebc:	str	w14, [sp, #144]
  40eec0:	b	40e704 <wcrtomb@plt+0xb884>
  40eec4:	cmp	x24, x13
  40eec8:	b	40e4b4 <wcrtomb@plt+0xb634>
  40eecc:	ldr	x0, [sp, #112]
  40eed0:	cmp	x27, #0x0
  40eed4:	cset	w28, eq  // eq = none
  40eed8:	mov	w25, #0x2                   	// #2
  40eedc:	cmp	x0, #0x0
  40eee0:	csel	w20, w28, wzr, ne  // ne = any
  40eee4:	cbnz	w20, 40e458 <wcrtomb@plt+0xb5d8>
  40eee8:	ldr	w0, [sp, #144]
  40eeec:	cmp	x6, #0x0
  40eef0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40eef4:	mov	x0, x19
  40eef8:	b.ne	40ef4c <wcrtomb@plt+0xc0cc>  // b.any
  40eefc:	cmp	x27, x0
  40ef00:	b.ls	40ef08 <wcrtomb@plt+0xc088>  // b.plast
  40ef04:	strb	wzr, [x26, x0]
  40ef08:	ldp	x29, x30, [sp, #16]
  40ef0c:	ldp	x19, x20, [sp, #32]
  40ef10:	ldp	x21, x22, [sp, #48]
  40ef14:	ldp	x23, x24, [sp, #64]
  40ef18:	ldp	x25, x26, [sp, #80]
  40ef1c:	ldp	x27, x28, [sp, #96]
  40ef20:	add	sp, sp, #0xf0
  40ef24:	ret
  40ef28:	mov	w0, w5
  40ef2c:	b	40eeec <wcrtomb@plt+0xc06c>
  40ef30:	cmp	x27, x0
  40ef34:	b.ls	40ef3c <wcrtomb@plt+0xc0bc>  // b.plast
  40ef38:	strb	w1, [x26, x0]
  40ef3c:	add	x0, x0, #0x1
  40ef40:	ldrb	w1, [x6, x0]
  40ef44:	cbnz	w1, 40ef30 <wcrtomb@plt+0xc0b0>
  40ef48:	b	40eefc <wcrtomb@plt+0xc07c>
  40ef4c:	sub	x6, x6, x19
  40ef50:	b	40ef40 <wcrtomb@plt+0xc0c0>
  40ef54:	mov	w22, w28
  40ef58:	b	40e9a4 <wcrtomb@plt+0xbb24>
  40ef5c:	sub	sp, sp, #0x80
  40ef60:	stp	x29, x30, [sp, #16]
  40ef64:	add	x29, sp, #0x10
  40ef68:	stp	x19, x20, [sp, #32]
  40ef6c:	mov	w19, w0
  40ef70:	mov	x20, x3
  40ef74:	stp	x21, x22, [sp, #48]
  40ef78:	stp	x23, x24, [sp, #64]
  40ef7c:	mov	x24, x1
  40ef80:	stp	x25, x26, [sp, #80]
  40ef84:	mov	x25, x2
  40ef88:	stp	x27, x28, [sp, #96]
  40ef8c:	bl	402df0 <__errno_location@plt>
  40ef90:	mov	x23, x0
  40ef94:	ldr	w0, [x0]
  40ef98:	adrp	x27, 432000 <_obstack_memory_used@@Base+0x21e54>
  40ef9c:	str	w0, [sp, #116]
  40efa0:	ldr	x28, [x27, #1184]
  40efa4:	tbz	w19, #31, 40efac <wcrtomb@plt+0xc12c>
  40efa8:	bl	402b40 <abort@plt>
  40efac:	add	x22, x27, #0x4a0
  40efb0:	ldr	w0, [x22, #8]
  40efb4:	cmp	w0, w19
  40efb8:	b.gt	40f024 <wcrtomb@plt+0xc1a4>
  40efbc:	mov	w0, #0x7fffffff            	// #2147483647
  40efc0:	cmp	w19, w0
  40efc4:	b.ne	40efcc <wcrtomb@plt+0xc14c>  // b.any
  40efc8:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40efcc:	add	x2, x22, #0x10
  40efd0:	add	w26, w19, #0x1
  40efd4:	cmp	x28, x2
  40efd8:	str	x2, [sp, #120]
  40efdc:	csel	x0, x28, xzr, ne  // ne = any
  40efe0:	sbfiz	x1, x26, #4, #32
  40efe4:	bl	40fc64 <wcrtomb@plt+0xcde4>
  40efe8:	str	x0, [x27, #1184]
  40efec:	ldr	x2, [sp, #120]
  40eff0:	mov	x21, x0
  40eff4:	cmp	x28, x2
  40eff8:	b.ne	40f004 <wcrtomb@plt+0xc184>  // b.any
  40effc:	ldp	x0, x1, [x22, #16]
  40f000:	stp	x0, x1, [x21]
  40f004:	ldr	w0, [x22, #8]
  40f008:	mov	x28, x21
  40f00c:	mov	w1, #0x0                   	// #0
  40f010:	sub	w2, w26, w0
  40f014:	add	x0, x21, w0, sxtw #4
  40f018:	sbfiz	x2, x2, #4, #32
  40f01c:	bl	402a10 <memset@plt>
  40f020:	str	w26, [x22, #8]
  40f024:	sbfiz	x9, x19, #4, #32
  40f028:	add	x19, x28, w19, sxtw #4
  40f02c:	ldp	x7, x0, [x20, #40]
  40f030:	add	x27, x20, #0x8
  40f034:	ldp	w4, w26, [x20]
  40f038:	mov	x6, x27
  40f03c:	ldr	x22, [x28, x9]
  40f040:	orr	w26, w26, #0x1
  40f044:	ldr	x21, [x19, #8]
  40f048:	str	x0, [sp]
  40f04c:	mov	x3, x25
  40f050:	mov	x2, x24
  40f054:	mov	x1, x22
  40f058:	mov	w5, w26
  40f05c:	mov	x0, x21
  40f060:	str	x9, [sp, #120]
  40f064:	bl	40e3c8 <wcrtomb@plt+0xb548>
  40f068:	cmp	x22, x0
  40f06c:	b.hi	40f0c8 <wcrtomb@plt+0xc248>  // b.pmore
  40f070:	ldr	x9, [sp, #120]
  40f074:	add	x22, x0, #0x1
  40f078:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f07c:	add	x0, x0, #0x7b8
  40f080:	cmp	x21, x0
  40f084:	str	x22, [x28, x9]
  40f088:	b.eq	40f094 <wcrtomb@plt+0xc214>  // b.none
  40f08c:	mov	x0, x21
  40f090:	bl	402c20 <free@plt>
  40f094:	mov	x0, x22
  40f098:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40f09c:	ldp	x7, x1, [x20, #40]
  40f0a0:	mov	x21, x0
  40f0a4:	ldr	w4, [x20]
  40f0a8:	mov	x6, x27
  40f0ac:	str	x0, [x19, #8]
  40f0b0:	mov	w5, w26
  40f0b4:	str	x1, [sp]
  40f0b8:	mov	x3, x25
  40f0bc:	mov	x2, x24
  40f0c0:	mov	x1, x22
  40f0c4:	bl	40e3c8 <wcrtomb@plt+0xb548>
  40f0c8:	ldr	w0, [sp, #116]
  40f0cc:	ldp	x29, x30, [sp, #16]
  40f0d0:	ldp	x19, x20, [sp, #32]
  40f0d4:	ldp	x25, x26, [sp, #80]
  40f0d8:	ldp	x27, x28, [sp, #96]
  40f0dc:	str	w0, [x23]
  40f0e0:	mov	x0, x21
  40f0e4:	ldp	x21, x22, [sp, #48]
  40f0e8:	ldp	x23, x24, [sp, #64]
  40f0ec:	add	sp, sp, #0x80
  40f0f0:	ret
  40f0f4:	stp	x29, x30, [sp, #-48]!
  40f0f8:	mov	x29, sp
  40f0fc:	stp	x19, x20, [sp, #16]
  40f100:	mov	x19, x0
  40f104:	str	x21, [sp, #32]
  40f108:	bl	402df0 <__errno_location@plt>
  40f10c:	ldr	w21, [x0]
  40f110:	mov	x20, x0
  40f114:	cbnz	x19, 40f124 <wcrtomb@plt+0xc2a4>
  40f118:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f11c:	add	x19, x19, #0x7b8
  40f120:	add	x19, x19, #0x100
  40f124:	mov	x0, x19
  40f128:	mov	x1, #0x38                  	// #56
  40f12c:	bl	40fd80 <wcrtomb@plt+0xcf00>
  40f130:	str	w21, [x20]
  40f134:	ldp	x19, x20, [sp, #16]
  40f138:	ldr	x21, [sp, #32]
  40f13c:	ldp	x29, x30, [sp], #48
  40f140:	ret
  40f144:	cbnz	x0, 40f154 <wcrtomb@plt+0xc2d4>
  40f148:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f14c:	add	x0, x0, #0x7b8
  40f150:	add	x0, x0, #0x100
  40f154:	ldr	w0, [x0]
  40f158:	ret
  40f15c:	cbnz	x0, 40f16c <wcrtomb@plt+0xc2ec>
  40f160:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f164:	add	x0, x0, #0x7b8
  40f168:	add	x0, x0, #0x100
  40f16c:	str	w1, [x0]
  40f170:	ret
  40f174:	and	w1, w1, #0xff
  40f178:	cbnz	x0, 40f188 <wcrtomb@plt+0xc308>
  40f17c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f180:	add	x0, x0, #0x7b8
  40f184:	add	x0, x0, #0x100
  40f188:	ubfx	x4, x1, #5, #3
  40f18c:	add	x0, x0, #0x8
  40f190:	and	w3, w1, #0x1f
  40f194:	lsl	x4, x4, #2
  40f198:	ldr	w6, [x0, x4]
  40f19c:	lsr	w5, w6, w3
  40f1a0:	eor	w1, w5, w2
  40f1a4:	and	w1, w1, #0x1
  40f1a8:	lsl	w1, w1, w3
  40f1ac:	eor	w1, w1, w6
  40f1b0:	str	w1, [x0, x4]
  40f1b4:	and	w0, w5, #0x1
  40f1b8:	ret
  40f1bc:	mov	x2, x0
  40f1c0:	cbnz	x0, 40f1d0 <wcrtomb@plt+0xc350>
  40f1c4:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f1c8:	add	x2, x2, #0x7b8
  40f1cc:	add	x2, x2, #0x100
  40f1d0:	ldr	w0, [x2, #4]
  40f1d4:	str	w1, [x2, #4]
  40f1d8:	ret
  40f1dc:	cbnz	x0, 40f1ec <wcrtomb@plt+0xc36c>
  40f1e0:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f1e4:	add	x0, x0, #0x7b8
  40f1e8:	add	x0, x0, #0x100
  40f1ec:	mov	w3, #0xa                   	// #10
  40f1f0:	str	w3, [x0]
  40f1f4:	cmp	x1, #0x0
  40f1f8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40f1fc:	b.ne	40f20c <wcrtomb@plt+0xc38c>  // b.any
  40f200:	stp	x29, x30, [sp, #-16]!
  40f204:	mov	x29, sp
  40f208:	bl	402b40 <abort@plt>
  40f20c:	stp	x1, x2, [x0, #40]
  40f210:	ret
  40f214:	sub	sp, sp, #0x60
  40f218:	stp	x29, x30, [sp, #16]
  40f21c:	add	x29, sp, #0x10
  40f220:	stp	x19, x20, [sp, #32]
  40f224:	stp	x21, x22, [sp, #48]
  40f228:	mov	x21, x0
  40f22c:	mov	x22, x1
  40f230:	stp	x23, x24, [sp, #64]
  40f234:	mov	x23, x2
  40f238:	mov	x24, x3
  40f23c:	str	x25, [sp, #80]
  40f240:	cbnz	x4, 40f2a4 <wcrtomb@plt+0xc424>
  40f244:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f248:	add	x19, x19, #0x7b8
  40f24c:	add	x19, x19, #0x100
  40f250:	bl	402df0 <__errno_location@plt>
  40f254:	ldr	w25, [x0]
  40f258:	mov	x20, x0
  40f25c:	add	x6, x19, #0x8
  40f260:	ldr	x0, [x19, #48]
  40f264:	str	x0, [sp]
  40f268:	mov	x3, x24
  40f26c:	mov	x2, x23
  40f270:	ldp	w4, w5, [x19]
  40f274:	mov	x1, x22
  40f278:	ldr	x7, [x19, #40]
  40f27c:	mov	x0, x21
  40f280:	bl	40e3c8 <wcrtomb@plt+0xb548>
  40f284:	ldp	x29, x30, [sp, #16]
  40f288:	ldp	x21, x22, [sp, #48]
  40f28c:	ldp	x23, x24, [sp, #64]
  40f290:	str	w25, [x20]
  40f294:	ldp	x19, x20, [sp, #32]
  40f298:	ldr	x25, [sp, #80]
  40f29c:	add	sp, sp, #0x60
  40f2a0:	ret
  40f2a4:	mov	x19, x4
  40f2a8:	b	40f250 <wcrtomb@plt+0xc3d0>
  40f2ac:	sub	sp, sp, #0x80
  40f2b0:	stp	x29, x30, [sp, #16]
  40f2b4:	add	x29, sp, #0x10
  40f2b8:	stp	x19, x20, [sp, #32]
  40f2bc:	mov	x20, x2
  40f2c0:	stp	x21, x22, [sp, #48]
  40f2c4:	stp	x23, x24, [sp, #64]
  40f2c8:	mov	x23, x0
  40f2cc:	mov	x24, x1
  40f2d0:	stp	x25, x26, [sp, #80]
  40f2d4:	stp	x27, x28, [sp, #96]
  40f2d8:	cbnz	x3, 40f3a8 <wcrtomb@plt+0xc528>
  40f2dc:	adrp	x19, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f2e0:	add	x19, x19, #0x7b8
  40f2e4:	add	x19, x19, #0x100
  40f2e8:	bl	402df0 <__errno_location@plt>
  40f2ec:	ldr	w8, [x0]
  40f2f0:	mov	x22, x0
  40f2f4:	ldr	w5, [x19, #4]
  40f2f8:	ldr	x0, [x19, #48]
  40f2fc:	str	x0, [sp]
  40f300:	cmp	x20, #0x0
  40f304:	add	x28, x19, #0x8
  40f308:	cset	w25, eq  // eq = none
  40f30c:	ldr	w4, [x19]
  40f310:	ldr	x7, [x19, #40]
  40f314:	orr	w25, w25, w5
  40f318:	mov	x6, x28
  40f31c:	mov	x3, x24
  40f320:	mov	x2, x23
  40f324:	mov	w5, w25
  40f328:	mov	x1, #0x0                   	// #0
  40f32c:	mov	x0, #0x0                   	// #0
  40f330:	str	w8, [sp, #124]
  40f334:	bl	40e3c8 <wcrtomb@plt+0xb548>
  40f338:	add	x27, x0, #0x1
  40f33c:	mov	x21, x0
  40f340:	mov	x0, x27
  40f344:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40f348:	ldr	x1, [x19, #48]
  40f34c:	str	x1, [sp]
  40f350:	mov	x26, x0
  40f354:	mov	x6, x28
  40f358:	ldr	w4, [x19]
  40f35c:	mov	w5, w25
  40f360:	ldr	x7, [x19, #40]
  40f364:	mov	x3, x24
  40f368:	mov	x2, x23
  40f36c:	mov	x1, x27
  40f370:	bl	40e3c8 <wcrtomb@plt+0xb548>
  40f374:	ldr	w8, [sp, #124]
  40f378:	str	w8, [x22]
  40f37c:	cbz	x20, 40f384 <wcrtomb@plt+0xc504>
  40f380:	str	x21, [x20]
  40f384:	mov	x0, x26
  40f388:	ldp	x29, x30, [sp, #16]
  40f38c:	ldp	x19, x20, [sp, #32]
  40f390:	ldp	x21, x22, [sp, #48]
  40f394:	ldp	x23, x24, [sp, #64]
  40f398:	ldp	x25, x26, [sp, #80]
  40f39c:	ldp	x27, x28, [sp, #96]
  40f3a0:	add	sp, sp, #0x80
  40f3a4:	ret
  40f3a8:	mov	x19, x3
  40f3ac:	b	40f2e8 <wcrtomb@plt+0xc468>
  40f3b0:	mov	x3, x2
  40f3b4:	mov	x2, #0x0                   	// #0
  40f3b8:	b	40f2ac <wcrtomb@plt+0xc42c>
  40f3bc:	stp	x29, x30, [sp, #-64]!
  40f3c0:	mov	x29, sp
  40f3c4:	stp	x19, x20, [sp, #16]
  40f3c8:	adrp	x20, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f3cc:	add	x19, x20, #0x4a0
  40f3d0:	stp	x21, x22, [sp, #32]
  40f3d4:	mov	x22, #0x0                   	// #0
  40f3d8:	ldr	x21, [x20, #1184]
  40f3dc:	str	x23, [sp, #48]
  40f3e0:	add	x23, x21, #0x8
  40f3e4:	ldr	w0, [x19, #8]
  40f3e8:	add	x22, x22, #0x1
  40f3ec:	cmp	w0, w22
  40f3f0:	b.gt	40f448 <wcrtomb@plt+0xc5c8>
  40f3f4:	ldr	x0, [x21, #8]
  40f3f8:	adrp	x22, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f3fc:	add	x22, x22, #0x7b8
  40f400:	cmp	x0, x22
  40f404:	b.eq	40f414 <wcrtomb@plt+0xc594>  // b.none
  40f408:	bl	402c20 <free@plt>
  40f40c:	mov	x0, #0x100                 	// #256
  40f410:	stp	x0, x22, [x19, #16]
  40f414:	add	x22, x19, #0x10
  40f418:	cmp	x21, x22
  40f41c:	b.eq	40f42c <wcrtomb@plt+0xc5ac>  // b.none
  40f420:	mov	x0, x21
  40f424:	bl	402c20 <free@plt>
  40f428:	str	x22, [x20, #1184]
  40f42c:	mov	w0, #0x1                   	// #1
  40f430:	str	w0, [x19, #8]
  40f434:	ldp	x19, x20, [sp, #16]
  40f438:	ldp	x21, x22, [sp, #32]
  40f43c:	ldr	x23, [sp, #48]
  40f440:	ldp	x29, x30, [sp], #64
  40f444:	ret
  40f448:	lsl	x0, x22, #4
  40f44c:	ldr	x0, [x23, x0]
  40f450:	bl	402c20 <free@plt>
  40f454:	b	40f3e4 <wcrtomb@plt+0xc564>
  40f458:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f45c:	add	x3, x3, #0x7b8
  40f460:	add	x3, x3, #0x100
  40f464:	mov	x2, #0xffffffffffffffff    	// #-1
  40f468:	b	40ef5c <wcrtomb@plt+0xc0dc>
  40f46c:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f470:	add	x3, x3, #0x7b8
  40f474:	add	x3, x3, #0x100
  40f478:	b	40ef5c <wcrtomb@plt+0xc0dc>
  40f47c:	mov	x1, x0
  40f480:	mov	w0, #0x0                   	// #0
  40f484:	b	40f458 <wcrtomb@plt+0xc5d8>
  40f488:	mov	x2, x1
  40f48c:	mov	x1, x0
  40f490:	mov	w0, #0x0                   	// #0
  40f494:	b	40f46c <wcrtomb@plt+0xc5ec>
  40f498:	stp	x29, x30, [sp, #-96]!
  40f49c:	add	x8, sp, #0x28
  40f4a0:	mov	x29, sp
  40f4a4:	stp	x19, x20, [sp, #16]
  40f4a8:	mov	x20, x2
  40f4ac:	mov	w19, w0
  40f4b0:	mov	w0, w1
  40f4b4:	bl	40e254 <wcrtomb@plt+0xb3d4>
  40f4b8:	add	x3, sp, #0x28
  40f4bc:	mov	x1, x20
  40f4c0:	mov	w0, w19
  40f4c4:	mov	x2, #0xffffffffffffffff    	// #-1
  40f4c8:	bl	40ef5c <wcrtomb@plt+0xc0dc>
  40f4cc:	ldp	x19, x20, [sp, #16]
  40f4d0:	ldp	x29, x30, [sp], #96
  40f4d4:	ret
  40f4d8:	stp	x29, x30, [sp, #-112]!
  40f4dc:	add	x8, sp, #0x38
  40f4e0:	mov	x29, sp
  40f4e4:	stp	x19, x20, [sp, #16]
  40f4e8:	mov	x20, x2
  40f4ec:	mov	w19, w0
  40f4f0:	mov	w0, w1
  40f4f4:	str	x21, [sp, #32]
  40f4f8:	mov	x21, x3
  40f4fc:	bl	40e254 <wcrtomb@plt+0xb3d4>
  40f500:	add	x3, sp, #0x38
  40f504:	mov	x2, x21
  40f508:	mov	x1, x20
  40f50c:	mov	w0, w19
  40f510:	bl	40ef5c <wcrtomb@plt+0xc0dc>
  40f514:	ldp	x19, x20, [sp, #16]
  40f518:	ldr	x21, [sp, #32]
  40f51c:	ldp	x29, x30, [sp], #112
  40f520:	ret
  40f524:	mov	x2, x1
  40f528:	mov	w1, w0
  40f52c:	mov	w0, #0x0                   	// #0
  40f530:	b	40f498 <wcrtomb@plt+0xc618>
  40f534:	mov	x3, x2
  40f538:	mov	x2, x1
  40f53c:	mov	w1, w0
  40f540:	mov	w0, #0x0                   	// #0
  40f544:	b	40f4d8 <wcrtomb@plt+0xc658>
  40f548:	stp	x29, x30, [sp, #-112]!
  40f54c:	mov	x29, sp
  40f550:	stp	x19, x20, [sp, #16]
  40f554:	mov	x20, x1
  40f558:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f55c:	add	x1, x1, #0x7b8
  40f560:	mov	x19, x0
  40f564:	add	x1, x1, #0x100
  40f568:	str	x21, [sp, #32]
  40f56c:	and	w21, w2, #0xff
  40f570:	mov	x2, #0x38                  	// #56
  40f574:	add	x0, sp, x2
  40f578:	bl	402750 <memcpy@plt>
  40f57c:	mov	w1, w21
  40f580:	add	x0, sp, #0x38
  40f584:	mov	w2, #0x1                   	// #1
  40f588:	bl	40f174 <wcrtomb@plt+0xc2f4>
  40f58c:	add	x3, sp, #0x38
  40f590:	mov	x2, x20
  40f594:	mov	x1, x19
  40f598:	mov	w0, #0x0                   	// #0
  40f59c:	bl	40ef5c <wcrtomb@plt+0xc0dc>
  40f5a0:	ldp	x19, x20, [sp, #16]
  40f5a4:	ldr	x21, [sp, #32]
  40f5a8:	ldp	x29, x30, [sp], #112
  40f5ac:	ret
  40f5b0:	mov	w2, w1
  40f5b4:	mov	x1, #0xffffffffffffffff    	// #-1
  40f5b8:	b	40f548 <wcrtomb@plt+0xc6c8>
  40f5bc:	mov	w1, #0x3a                  	// #58
  40f5c0:	b	40f5b0 <wcrtomb@plt+0xc730>
  40f5c4:	mov	w2, #0x3a                  	// #58
  40f5c8:	b	40f548 <wcrtomb@plt+0xc6c8>
  40f5cc:	stp	x29, x30, [sp, #-160]!
  40f5d0:	add	x8, sp, #0x20
  40f5d4:	mov	x29, sp
  40f5d8:	stp	x19, x20, [sp, #16]
  40f5dc:	mov	x20, x2
  40f5e0:	mov	w19, w0
  40f5e4:	mov	w0, w1
  40f5e8:	bl	40e254 <wcrtomb@plt+0xb3d4>
  40f5ec:	add	x1, sp, #0x20
  40f5f0:	add	x0, sp, #0x68
  40f5f4:	mov	x2, #0x38                  	// #56
  40f5f8:	bl	402750 <memcpy@plt>
  40f5fc:	add	x0, sp, #0x68
  40f600:	mov	w2, #0x1                   	// #1
  40f604:	mov	w1, #0x3a                  	// #58
  40f608:	bl	40f174 <wcrtomb@plt+0xc2f4>
  40f60c:	add	x3, sp, #0x68
  40f610:	mov	x1, x20
  40f614:	mov	w0, w19
  40f618:	mov	x2, #0xffffffffffffffff    	// #-1
  40f61c:	bl	40ef5c <wcrtomb@plt+0xc0dc>
  40f620:	ldp	x19, x20, [sp, #16]
  40f624:	ldp	x29, x30, [sp], #160
  40f628:	ret
  40f62c:	stp	x29, x30, [sp, #-128]!
  40f630:	mov	x29, sp
  40f634:	stp	x21, x22, [sp, #32]
  40f638:	mov	x22, x1
  40f63c:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f640:	add	x1, x1, #0x7b8
  40f644:	mov	x21, x4
  40f648:	add	x1, x1, #0x100
  40f64c:	stp	x19, x20, [sp, #16]
  40f650:	mov	x20, x3
  40f654:	mov	w19, w0
  40f658:	add	x0, sp, #0x48
  40f65c:	str	x23, [sp, #48]
  40f660:	mov	x23, x2
  40f664:	mov	x2, #0x38                  	// #56
  40f668:	bl	402750 <memcpy@plt>
  40f66c:	mov	x2, x23
  40f670:	mov	x1, x22
  40f674:	add	x0, sp, #0x48
  40f678:	bl	40f1dc <wcrtomb@plt+0xc35c>
  40f67c:	add	x3, sp, #0x48
  40f680:	mov	x2, x21
  40f684:	mov	x1, x20
  40f688:	mov	w0, w19
  40f68c:	bl	40ef5c <wcrtomb@plt+0xc0dc>
  40f690:	ldp	x19, x20, [sp, #16]
  40f694:	ldp	x21, x22, [sp, #32]
  40f698:	ldr	x23, [sp, #48]
  40f69c:	ldp	x29, x30, [sp], #128
  40f6a0:	ret
  40f6a4:	mov	x4, #0xffffffffffffffff    	// #-1
  40f6a8:	b	40f62c <wcrtomb@plt+0xc7ac>
  40f6ac:	mov	x3, x2
  40f6b0:	mov	x2, x1
  40f6b4:	mov	x1, x0
  40f6b8:	mov	w0, #0x0                   	// #0
  40f6bc:	b	40f6a4 <wcrtomb@plt+0xc824>
  40f6c0:	mov	x4, x3
  40f6c4:	mov	x3, x2
  40f6c8:	mov	x2, x1
  40f6cc:	mov	x1, x0
  40f6d0:	mov	w0, #0x0                   	// #0
  40f6d4:	b	40f62c <wcrtomb@plt+0xc7ac>
  40f6d8:	adrp	x3, 432000 <_obstack_memory_used@@Base+0x21e54>
  40f6dc:	add	x3, x3, #0x4a0
  40f6e0:	add	x3, x3, #0x20
  40f6e4:	b	40ef5c <wcrtomb@plt+0xc0dc>
  40f6e8:	mov	x2, x1
  40f6ec:	mov	x1, x0
  40f6f0:	mov	w0, #0x0                   	// #0
  40f6f4:	b	40f6d8 <wcrtomb@plt+0xc858>
  40f6f8:	mov	x2, #0xffffffffffffffff    	// #-1
  40f6fc:	b	40f6d8 <wcrtomb@plt+0xc858>
  40f700:	mov	x1, x0
  40f704:	mov	w0, #0x0                   	// #0
  40f708:	b	40f6f8 <wcrtomb@plt+0xc878>
  40f70c:	sub	sp, sp, #0x50
  40f710:	stp	x29, x30, [sp, #32]
  40f714:	add	x29, sp, #0x20
  40f718:	stp	x19, x20, [sp, #48]
  40f71c:	mov	x20, x0
  40f720:	mov	x19, x4
  40f724:	str	x21, [sp, #64]
  40f728:	mov	x21, x5
  40f72c:	cbz	x1, 40f7e8 <wcrtomb@plt+0xc968>
  40f730:	mov	x5, x3
  40f734:	mov	x4, x2
  40f738:	mov	x3, x1
  40f73c:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f740:	mov	w1, #0x1                   	// #1
  40f744:	add	x2, x2, #0xc88
  40f748:	bl	402be0 <__fprintf_chk@plt>
  40f74c:	mov	w2, #0x5                   	// #5
  40f750:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f754:	mov	x0, #0x0                   	// #0
  40f758:	add	x1, x1, #0xc9b
  40f75c:	bl	402d60 <dcgettext@plt>
  40f760:	mov	x3, x0
  40f764:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f768:	add	x2, x2, #0xf8c
  40f76c:	mov	w4, #0x7e4                 	// #2020
  40f770:	mov	w1, #0x1                   	// #1
  40f774:	mov	x0, x20
  40f778:	bl	402be0 <__fprintf_chk@plt>
  40f77c:	mov	x1, x20
  40f780:	mov	w0, #0xa                   	// #10
  40f784:	bl	402d10 <fputc_unlocked@plt>
  40f788:	mov	w2, #0x5                   	// #5
  40f78c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f790:	mov	x0, #0x0                   	// #0
  40f794:	add	x1, x1, #0xc9f
  40f798:	bl	402d60 <dcgettext@plt>
  40f79c:	mov	x2, x0
  40f7a0:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f7a4:	add	x3, x3, #0xd4a
  40f7a8:	mov	w1, #0x1                   	// #1
  40f7ac:	mov	x0, x20
  40f7b0:	bl	402be0 <__fprintf_chk@plt>
  40f7b4:	mov	x1, x20
  40f7b8:	mov	w0, #0xa                   	// #10
  40f7bc:	bl	402d10 <fputc_unlocked@plt>
  40f7c0:	cmp	x21, #0x9
  40f7c4:	b.hi	40fa58 <wcrtomb@plt+0xcbd8>  // b.pmore
  40f7c8:	cmp	w21, #0x9
  40f7cc:	b.hi	40fa58 <wcrtomb@plt+0xcbd8>  // b.pmore
  40f7d0:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f7d4:	add	x0, x0, #0xf78
  40f7d8:	ldrh	w0, [x0, w21, uxtw #1]
  40f7dc:	adr	x1, 40f7e8 <wcrtomb@plt+0xc968>
  40f7e0:	add	x0, x1, w0, sxth #2
  40f7e4:	br	x0
  40f7e8:	mov	x4, x3
  40f7ec:	mov	w1, #0x1                   	// #1
  40f7f0:	mov	x3, x2
  40f7f4:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f7f8:	add	x2, x2, #0xc94
  40f7fc:	bl	402be0 <__fprintf_chk@plt>
  40f800:	b	40f74c <wcrtomb@plt+0xc8cc>
  40f804:	mov	w2, #0x5                   	// #5
  40f808:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f80c:	mov	x0, #0x0                   	// #0
  40f810:	add	x1, x1, #0xd6c
  40f814:	bl	402d60 <dcgettext@plt>
  40f818:	mov	x2, x0
  40f81c:	mov	x0, x20
  40f820:	mov	w1, #0x1                   	// #1
  40f824:	ldr	x3, [x19]
  40f828:	ldp	x29, x30, [sp, #32]
  40f82c:	ldp	x19, x20, [sp, #48]
  40f830:	ldr	x21, [sp, #64]
  40f834:	add	sp, sp, #0x50
  40f838:	b	402be0 <__fprintf_chk@plt>
  40f83c:	mov	w2, #0x5                   	// #5
  40f840:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f844:	mov	x0, #0x0                   	// #0
  40f848:	add	x1, x1, #0xd7c
  40f84c:	bl	402d60 <dcgettext@plt>
  40f850:	mov	x2, x0
  40f854:	mov	x0, x20
  40f858:	mov	w1, #0x1                   	// #1
  40f85c:	ldp	x3, x4, [x19]
  40f860:	ldp	x29, x30, [sp, #32]
  40f864:	ldp	x19, x20, [sp, #48]
  40f868:	ldr	x21, [sp, #64]
  40f86c:	add	sp, sp, #0x50
  40f870:	b	402be0 <__fprintf_chk@plt>
  40f874:	mov	w2, #0x5                   	// #5
  40f878:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f87c:	mov	x0, #0x0                   	// #0
  40f880:	add	x1, x1, #0xd93
  40f884:	bl	402d60 <dcgettext@plt>
  40f888:	mov	x2, x0
  40f88c:	mov	x0, x20
  40f890:	mov	w1, #0x1                   	// #1
  40f894:	ldp	x3, x4, [x19]
  40f898:	ldr	x5, [x19, #16]
  40f89c:	ldp	x29, x30, [sp, #32]
  40f8a0:	ldp	x19, x20, [sp, #48]
  40f8a4:	ldr	x21, [sp, #64]
  40f8a8:	add	sp, sp, #0x50
  40f8ac:	b	402be0 <__fprintf_chk@plt>
  40f8b0:	mov	w2, #0x5                   	// #5
  40f8b4:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f8b8:	mov	x0, #0x0                   	// #0
  40f8bc:	add	x1, x1, #0xdaf
  40f8c0:	bl	402d60 <dcgettext@plt>
  40f8c4:	mov	x2, x0
  40f8c8:	mov	x0, x20
  40f8cc:	mov	w1, #0x1                   	// #1
  40f8d0:	ldp	x3, x4, [x19]
  40f8d4:	ldp	x5, x6, [x19, #16]
  40f8d8:	ldp	x29, x30, [sp, #32]
  40f8dc:	ldp	x19, x20, [sp, #48]
  40f8e0:	ldr	x21, [sp, #64]
  40f8e4:	add	sp, sp, #0x50
  40f8e8:	b	402be0 <__fprintf_chk@plt>
  40f8ec:	mov	w2, #0x5                   	// #5
  40f8f0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f8f4:	mov	x0, #0x0                   	// #0
  40f8f8:	add	x1, x1, #0xdcf
  40f8fc:	bl	402d60 <dcgettext@plt>
  40f900:	mov	x2, x0
  40f904:	mov	x0, x20
  40f908:	mov	w1, #0x1                   	// #1
  40f90c:	ldp	x3, x4, [x19]
  40f910:	ldp	x5, x6, [x19, #16]
  40f914:	ldp	x29, x30, [sp, #32]
  40f918:	ldr	x7, [x19, #32]
  40f91c:	ldp	x19, x20, [sp, #48]
  40f920:	ldr	x21, [sp, #64]
  40f924:	add	sp, sp, #0x50
  40f928:	b	402be0 <__fprintf_chk@plt>
  40f92c:	mov	w2, #0x5                   	// #5
  40f930:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f934:	mov	x0, #0x0                   	// #0
  40f938:	add	x1, x1, #0xdf3
  40f93c:	bl	402d60 <dcgettext@plt>
  40f940:	mov	x2, x0
  40f944:	ldp	x3, x4, [x19]
  40f948:	mov	x0, x20
  40f94c:	ldp	x5, x6, [x19, #16]
  40f950:	ldp	x7, x1, [x19, #32]
  40f954:	str	x1, [sp]
  40f958:	mov	w1, #0x1                   	// #1
  40f95c:	bl	402be0 <__fprintf_chk@plt>
  40f960:	ldp	x29, x30, [sp, #32]
  40f964:	ldp	x19, x20, [sp, #48]
  40f968:	ldr	x21, [sp, #64]
  40f96c:	add	sp, sp, #0x50
  40f970:	ret
  40f974:	mov	w2, #0x5                   	// #5
  40f978:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f97c:	mov	x0, #0x0                   	// #0
  40f980:	add	x1, x1, #0xe1b
  40f984:	bl	402d60 <dcgettext@plt>
  40f988:	mov	x2, x0
  40f98c:	ldp	x3, x4, [x19]
  40f990:	mov	x0, x20
  40f994:	ldp	x5, x6, [x19, #16]
  40f998:	ldr	x1, [x19, #48]
  40f99c:	ldr	x7, [x19, #32]
  40f9a0:	str	x1, [sp, #8]
  40f9a4:	ldr	x1, [x19, #40]
  40f9a8:	str	x1, [sp]
  40f9ac:	mov	w1, #0x1                   	// #1
  40f9b0:	bl	402be0 <__fprintf_chk@plt>
  40f9b4:	b	40f960 <wcrtomb@plt+0xcae0>
  40f9b8:	mov	w2, #0x5                   	// #5
  40f9bc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40f9c0:	mov	x0, #0x0                   	// #0
  40f9c4:	add	x1, x1, #0xe47
  40f9c8:	bl	402d60 <dcgettext@plt>
  40f9cc:	mov	x2, x0
  40f9d0:	ldr	x1, [x19, #56]
  40f9d4:	mov	x0, x20
  40f9d8:	ldp	x3, x4, [x19]
  40f9dc:	ldp	x5, x6, [x19, #16]
  40f9e0:	ldr	x7, [x19, #32]
  40f9e4:	str	x1, [sp, #16]
  40f9e8:	ldr	x1, [x19, #48]
  40f9ec:	str	x1, [sp, #8]
  40f9f0:	ldr	x1, [x19, #40]
  40f9f4:	str	x1, [sp]
  40f9f8:	mov	w1, #0x1                   	// #1
  40f9fc:	bl	402be0 <__fprintf_chk@plt>
  40fa00:	b	40f960 <wcrtomb@plt+0xcae0>
  40fa04:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fa08:	add	x1, x1, #0xe77
  40fa0c:	mov	w2, #0x5                   	// #5
  40fa10:	mov	x0, #0x0                   	// #0
  40fa14:	bl	402d60 <dcgettext@plt>
  40fa18:	ldr	x1, [x19, #64]
  40fa1c:	mov	x2, x0
  40fa20:	ldp	x3, x4, [x19]
  40fa24:	mov	x0, x20
  40fa28:	ldp	x5, x6, [x19, #16]
  40fa2c:	ldr	x7, [x19, #32]
  40fa30:	str	x1, [sp, #24]
  40fa34:	ldr	x1, [x19, #56]
  40fa38:	str	x1, [sp, #16]
  40fa3c:	ldr	x1, [x19, #48]
  40fa40:	str	x1, [sp, #8]
  40fa44:	ldr	x1, [x19, #40]
  40fa48:	str	x1, [sp]
  40fa4c:	mov	w1, #0x1                   	// #1
  40fa50:	bl	402be0 <__fprintf_chk@plt>
  40fa54:	b	40f960 <wcrtomb@plt+0xcae0>
  40fa58:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fa5c:	mov	w2, #0x5                   	// #5
  40fa60:	add	x1, x1, #0xeab
  40fa64:	b	40fa10 <wcrtomb@plt+0xcb90>
  40fa68:	mov	x5, #0x0                   	// #0
  40fa6c:	ldr	x6, [x4, x5, lsl #3]
  40fa70:	cbnz	x6, 40fa78 <wcrtomb@plt+0xcbf8>
  40fa74:	b	40f70c <wcrtomb@plt+0xc88c>
  40fa78:	add	x5, x5, #0x1
  40fa7c:	b	40fa6c <wcrtomb@plt+0xcbec>
  40fa80:	stp	x29, x30, [sp, #-96]!
  40fa84:	mov	x5, #0x0                   	// #0
  40fa88:	mov	x29, sp
  40fa8c:	ldr	w7, [x4, #24]
  40fa90:	ldp	x6, x10, [x4]
  40fa94:	add	x4, sp, #0x10
  40fa98:	tbnz	w7, #31, 40facc <wcrtomb@plt+0xcc4c>
  40fa9c:	add	x9, x6, #0xf
  40faa0:	mov	x8, x6
  40faa4:	and	x6, x9, #0xfffffffffffffff8
  40faa8:	ldr	x8, [x8]
  40faac:	str	x8, [x4, x5, lsl #3]
  40fab0:	cbz	x8, 40fac0 <wcrtomb@plt+0xcc40>
  40fab4:	add	x5, x5, #0x1
  40fab8:	cmp	x5, #0xa
  40fabc:	b.ne	40fa98 <wcrtomb@plt+0xcc18>  // b.any
  40fac0:	bl	40f70c <wcrtomb@plt+0xc88c>
  40fac4:	ldp	x29, x30, [sp], #96
  40fac8:	ret
  40facc:	add	w9, w7, #0x8
  40fad0:	cmp	w9, #0x0
  40fad4:	b.le	40faec <wcrtomb@plt+0xcc6c>
  40fad8:	add	x11, x6, #0xf
  40fadc:	mov	x8, x6
  40fae0:	mov	w7, w9
  40fae4:	and	x6, x11, #0xfffffffffffffff8
  40fae8:	b	40faa8 <wcrtomb@plt+0xcc28>
  40faec:	add	x8, x10, w7, sxtw
  40faf0:	mov	w7, w9
  40faf4:	b	40faa8 <wcrtomb@plt+0xcc28>
  40faf8:	stp	x29, x30, [sp, #-240]!
  40fafc:	mov	x29, sp
  40fb00:	stp	x4, x5, [sp, #208]
  40fb04:	add	x4, sp, #0xf0
  40fb08:	stp	x4, x4, [sp, #48]
  40fb0c:	add	x4, sp, #0xd0
  40fb10:	str	x4, [sp, #64]
  40fb14:	mov	w4, #0xffffffe0            	// #-32
  40fb18:	str	w4, [sp, #72]
  40fb1c:	mov	w4, #0xffffff80            	// #-128
  40fb20:	str	w4, [sp, #76]
  40fb24:	ldp	x4, x5, [sp, #48]
  40fb28:	stp	x4, x5, [sp, #16]
  40fb2c:	ldp	x4, x5, [sp, #64]
  40fb30:	stp	x4, x5, [sp, #32]
  40fb34:	add	x4, sp, #0x10
  40fb38:	str	q0, [sp, #80]
  40fb3c:	str	q1, [sp, #96]
  40fb40:	str	q2, [sp, #112]
  40fb44:	str	q3, [sp, #128]
  40fb48:	str	q4, [sp, #144]
  40fb4c:	str	q5, [sp, #160]
  40fb50:	str	q6, [sp, #176]
  40fb54:	str	q7, [sp, #192]
  40fb58:	stp	x6, x7, [sp, #224]
  40fb5c:	bl	40fa80 <wcrtomb@plt+0xcc00>
  40fb60:	ldp	x29, x30, [sp], #240
  40fb64:	ret
  40fb68:	stp	x29, x30, [sp, #-16]!
  40fb6c:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40fb70:	mov	x29, sp
  40fb74:	ldr	x1, [x0, #1320]
  40fb78:	mov	w0, #0xa                   	// #10
  40fb7c:	bl	402d10 <fputc_unlocked@plt>
  40fb80:	mov	w2, #0x5                   	// #5
  40fb84:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fb88:	mov	x0, #0x0                   	// #0
  40fb8c:	add	x1, x1, #0xee7
  40fb90:	bl	402d60 <dcgettext@plt>
  40fb94:	mov	x1, x0
  40fb98:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0xae54>
  40fb9c:	mov	w0, #0x1                   	// #1
  40fba0:	add	x2, x2, #0x99d
  40fba4:	bl	4029f0 <__printf_chk@plt>
  40fba8:	mov	w2, #0x5                   	// #5
  40fbac:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fbb0:	mov	x0, #0x0                   	// #0
  40fbb4:	add	x1, x1, #0xefb
  40fbb8:	bl	402d60 <dcgettext@plt>
  40fbbc:	mov	x1, x0
  40fbc0:	adrp	x3, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fbc4:	add	x3, x3, #0xf0f
  40fbc8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fbcc:	mov	w0, #0x1                   	// #1
  40fbd0:	add	x2, x2, #0xaf
  40fbd4:	bl	4029f0 <__printf_chk@plt>
  40fbd8:	mov	w2, #0x5                   	// #5
  40fbdc:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fbe0:	mov	x0, #0x0                   	// #0
  40fbe4:	add	x1, x1, #0xf31
  40fbe8:	bl	402d60 <dcgettext@plt>
  40fbec:	mov	x1, x0
  40fbf0:	ldp	x29, x30, [sp], #16
  40fbf4:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fbf8:	mov	w0, #0x1                   	// #1
  40fbfc:	add	x2, x2, #0xf58
  40fc00:	b	4029f0 <__printf_chk@plt>
  40fc04:	stp	x29, x30, [sp, #-32]!
  40fc08:	mov	x29, sp
  40fc0c:	str	x19, [sp, #16]
  40fc10:	mov	x19, x0
  40fc14:	bl	402930 <malloc@plt>
  40fc18:	cmp	x0, #0x0
  40fc1c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40fc20:	b.eq	40fc28 <wcrtomb@plt+0xcda8>  // b.none
  40fc24:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40fc28:	ldr	x19, [sp, #16]
  40fc2c:	ldp	x29, x30, [sp], #32
  40fc30:	ret
  40fc34:	mov	x2, x0
  40fc38:	mul	x0, x0, x1
  40fc3c:	umulh	x2, x2, x1
  40fc40:	cmp	x2, #0x0
  40fc44:	cset	x1, ne  // ne = any
  40fc48:	tbnz	x0, #63, 40fc50 <wcrtomb@plt+0xcdd0>
  40fc4c:	cbz	x1, 40fc5c <wcrtomb@plt+0xcddc>
  40fc50:	stp	x29, x30, [sp, #-16]!
  40fc54:	mov	x29, sp
  40fc58:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40fc5c:	b	40fc04 <wcrtomb@plt+0xcd84>
  40fc60:	b	40fc04 <wcrtomb@plt+0xcd84>
  40fc64:	stp	x29, x30, [sp, #-32]!
  40fc68:	cmp	x1, #0x0
  40fc6c:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40fc70:	mov	x29, sp
  40fc74:	str	x19, [sp, #16]
  40fc78:	b.eq	40fc90 <wcrtomb@plt+0xce10>  // b.none
  40fc7c:	bl	402c20 <free@plt>
  40fc80:	mov	x0, #0x0                   	// #0
  40fc84:	ldr	x19, [sp, #16]
  40fc88:	ldp	x29, x30, [sp], #32
  40fc8c:	ret
  40fc90:	mov	x19, x1
  40fc94:	bl	402a80 <realloc@plt>
  40fc98:	cmp	x0, #0x0
  40fc9c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40fca0:	b.eq	40fc84 <wcrtomb@plt+0xce04>  // b.none
  40fca4:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40fca8:	mov	x3, x1
  40fcac:	mul	x1, x1, x2
  40fcb0:	umulh	x3, x3, x2
  40fcb4:	cmp	x3, #0x0
  40fcb8:	cset	x2, ne  // ne = any
  40fcbc:	tbnz	x1, #63, 40fcc4 <wcrtomb@plt+0xce44>
  40fcc0:	cbz	x2, 40fcd0 <wcrtomb@plt+0xce50>
  40fcc4:	stp	x29, x30, [sp, #-16]!
  40fcc8:	mov	x29, sp
  40fccc:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40fcd0:	b	40fc64 <wcrtomb@plt+0xcde4>
  40fcd4:	ldr	x3, [x1]
  40fcd8:	cbnz	x0, 40fd14 <wcrtomb@plt+0xce94>
  40fcdc:	cbnz	x3, 40fcf0 <wcrtomb@plt+0xce70>
  40fce0:	mov	x3, #0x80                  	// #128
  40fce4:	cmp	x2, #0x80
  40fce8:	udiv	x3, x3, x2
  40fcec:	cinc	x3, x3, hi  // hi = pmore
  40fcf0:	umulh	x5, x3, x2
  40fcf4:	mul	x4, x3, x2
  40fcf8:	cmp	x5, #0x0
  40fcfc:	cset	x5, ne  // ne = any
  40fd00:	tbnz	x4, #63, 40fd08 <wcrtomb@plt+0xce88>
  40fd04:	cbz	x5, 40fd30 <wcrtomb@plt+0xceb0>
  40fd08:	stp	x29, x30, [sp, #-16]!
  40fd0c:	mov	x29, sp
  40fd10:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40fd14:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  40fd18:	movk	x4, #0x5554
  40fd1c:	udiv	x4, x4, x2
  40fd20:	cmp	x4, x3
  40fd24:	b.ls	40fd08 <wcrtomb@plt+0xce88>  // b.plast
  40fd28:	add	x4, x3, #0x1
  40fd2c:	add	x3, x4, x3, lsr #1
  40fd30:	str	x3, [x1]
  40fd34:	mul	x1, x3, x2
  40fd38:	b	40fc64 <wcrtomb@plt+0xcde4>
  40fd3c:	mov	x2, #0x1                   	// #1
  40fd40:	b	40fcd4 <wcrtomb@plt+0xce54>
  40fd44:	umulh	x2, x0, x1
  40fd48:	stp	x29, x30, [sp, #-16]!
  40fd4c:	mul	x4, x0, x1
  40fd50:	cmp	x2, #0x0
  40fd54:	mov	x29, sp
  40fd58:	cset	x2, ne  // ne = any
  40fd5c:	tbnz	x4, #63, 40fd64 <wcrtomb@plt+0xcee4>
  40fd60:	cbz	x2, 40fd68 <wcrtomb@plt+0xcee8>
  40fd64:	bl	40fdd8 <wcrtomb@plt+0xcf58>
  40fd68:	bl	402a60 <calloc@plt>
  40fd6c:	cbz	x0, 40fd64 <wcrtomb@plt+0xcee4>
  40fd70:	ldp	x29, x30, [sp], #16
  40fd74:	ret
  40fd78:	mov	x1, #0x1                   	// #1
  40fd7c:	b	40fd44 <wcrtomb@plt+0xcec4>
  40fd80:	stp	x29, x30, [sp, #-32]!
  40fd84:	mov	x29, sp
  40fd88:	stp	x19, x20, [sp, #16]
  40fd8c:	mov	x19, x1
  40fd90:	mov	x20, x0
  40fd94:	mov	x0, x1
  40fd98:	bl	40fc04 <wcrtomb@plt+0xcd84>
  40fd9c:	mov	x2, x19
  40fda0:	mov	x1, x20
  40fda4:	ldp	x19, x20, [sp, #16]
  40fda8:	ldp	x29, x30, [sp], #32
  40fdac:	b	402750 <memcpy@plt>
  40fdb0:	stp	x29, x30, [sp, #-32]!
  40fdb4:	mov	x29, sp
  40fdb8:	str	x19, [sp, #16]
  40fdbc:	mov	x19, x0
  40fdc0:	bl	402790 <strlen@plt>
  40fdc4:	add	x1, x0, #0x1
  40fdc8:	mov	x0, x19
  40fdcc:	ldr	x19, [sp, #16]
  40fdd0:	ldp	x29, x30, [sp], #32
  40fdd4:	b	40fd80 <wcrtomb@plt+0xcf00>
  40fdd8:	stp	x29, x30, [sp, #-32]!
  40fddc:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40fde0:	mov	w2, #0x5                   	// #5
  40fde4:	mov	x29, sp
  40fde8:	str	x19, [sp, #16]
  40fdec:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fdf0:	ldr	w19, [x0, #1280]
  40fdf4:	add	x1, x1, #0xfbb
  40fdf8:	mov	x0, #0x0                   	// #0
  40fdfc:	bl	402d60 <dcgettext@plt>
  40fe00:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fe04:	mov	x3, x0
  40fe08:	add	x2, x2, #0x47b
  40fe0c:	mov	w0, w19
  40fe10:	mov	w1, #0x0                   	// #0
  40fe14:	bl	4027e0 <error@plt>
  40fe18:	bl	402b40 <abort@plt>
  40fe1c:	stp	x29, x30, [sp, #-64]!
  40fe20:	mov	x29, sp
  40fe24:	stp	x19, x20, [sp, #16]
  40fe28:	stp	x21, x22, [sp, #32]
  40fe2c:	mov	x21, x1
  40fe30:	mov	x22, x2
  40fe34:	cbnz	x0, 40fe8c <wcrtomb@plt+0xd00c>
  40fe38:	add	x19, sp, #0x3c
  40fe3c:	mov	x2, x22
  40fe40:	mov	x1, x21
  40fe44:	mov	x0, x19
  40fe48:	bl	402740 <mbrtowc@plt>
  40fe4c:	cmp	x22, #0x0
  40fe50:	mov	x20, x0
  40fe54:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  40fe58:	b.ls	40fe78 <wcrtomb@plt+0xcff8>  // b.plast
  40fe5c:	mov	w0, #0x0                   	// #0
  40fe60:	bl	41ad28 <_obstack_memory_used@@Base+0xab7c>
  40fe64:	tst	w0, #0xff
  40fe68:	b.ne	40fe78 <wcrtomb@plt+0xcff8>  // b.any
  40fe6c:	ldrb	w0, [x21]
  40fe70:	mov	x20, #0x1                   	// #1
  40fe74:	str	w0, [x19]
  40fe78:	mov	x0, x20
  40fe7c:	ldp	x19, x20, [sp, #16]
  40fe80:	ldp	x21, x22, [sp, #32]
  40fe84:	ldp	x29, x30, [sp], #64
  40fe88:	ret
  40fe8c:	mov	x19, x0
  40fe90:	b	40fe3c <wcrtomb@plt+0xcfbc>
  40fe94:	stp	x29, x30, [sp, #-32]!
  40fe98:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40fe9c:	mov	w2, #0x5                   	// #5
  40fea0:	mov	x29, sp
  40fea4:	str	x19, [sp, #16]
  40fea8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40feac:	ldr	x19, [x0, #1296]
  40feb0:	add	x1, x1, #0xfbb
  40feb4:	mov	x0, #0x0                   	// #0
  40feb8:	bl	402d60 <dcgettext@plt>
  40febc:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  40fec0:	mov	x3, x0
  40fec4:	add	x2, x2, #0xc90
  40fec8:	mov	x0, x19
  40fecc:	mov	w1, #0x1                   	// #1
  40fed0:	bl	402be0 <__fprintf_chk@plt>
  40fed4:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40fed8:	ldr	w0, [x0, #1280]
  40fedc:	bl	4027d0 <exit@plt>
  40fee0:	mov	x2, x0
  40fee4:	mov	x0, x1
  40fee8:	ldrb	w4, [x2, #80]
  40feec:	ldr	x3, [x2, #56]
  40fef0:	tbz	w4, #0, 40ff00 <wcrtomb@plt+0xd080>
  40fef4:	ldr	x0, [x2, #72]
  40fef8:	mov	x16, x3
  40fefc:	br	x16
  40ff00:	mov	x16, x3
  40ff04:	br	x16
  40ff08:	mov	x2, x0
  40ff0c:	mov	x0, x1
  40ff10:	ldrb	w4, [x2, #80]
  40ff14:	ldr	x3, [x2, #64]
  40ff18:	tbz	w4, #0, 40ff28 <wcrtomb@plt+0xd0a8>
  40ff1c:	ldr	x0, [x2, #72]
  40ff20:	mov	x16, x3
  40ff24:	br	x16
  40ff28:	mov	x16, x3
  40ff2c:	br	x16
  40ff30:	stp	x29, x30, [sp, #-48]!
  40ff34:	cmp	x2, #0x0
  40ff38:	mov	x29, sp
  40ff3c:	stp	x19, x20, [sp, #16]
  40ff40:	mov	x20, x2
  40ff44:	mov	x19, x0
  40ff48:	mov	x2, #0x10                  	// #16
  40ff4c:	csel	x20, x20, x2, ne  // ne = any
  40ff50:	cmp	x1, #0x0
  40ff54:	str	x21, [sp, #32]
  40ff58:	mov	x2, #0xfe0                 	// #4064
  40ff5c:	sub	x21, x20, #0x1
  40ff60:	csel	x1, x1, x2, ne  // ne = any
  40ff64:	str	x1, [x0]
  40ff68:	str	x21, [x0, #48]
  40ff6c:	bl	40fee0 <wcrtomb@plt+0xd060>
  40ff70:	str	x0, [x19, #8]
  40ff74:	cbnz	x0, 40ff84 <wcrtomb@plt+0xd104>
  40ff78:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  40ff7c:	ldr	x0, [x0, #1272]
  40ff80:	blr	x0
  40ff84:	add	x2, x0, #0x10
  40ff88:	neg	x20, x20
  40ff8c:	ldr	x1, [x19]
  40ff90:	add	x2, x2, x21
  40ff94:	and	x20, x2, x20
  40ff98:	ldr	x21, [sp, #32]
  40ff9c:	stp	x20, x20, [x19, #16]
  40ffa0:	add	x1, x0, x1
  40ffa4:	str	x1, [x0]
  40ffa8:	str	x1, [x19, #32]
  40ffac:	str	xzr, [x0, #8]
  40ffb0:	ldrb	w0, [x19, #80]
  40ffb4:	and	w0, w0, #0xfffffff9
  40ffb8:	strb	w0, [x19, #80]
  40ffbc:	mov	w0, #0x1                   	// #1
  40ffc0:	ldp	x19, x20, [sp, #16]
  40ffc4:	ldp	x29, x30, [sp], #48
  40ffc8:	ret

000000000040ffcc <_obstack_begin@@Base>:
  40ffcc:	stp	x3, x4, [x0, #56]
  40ffd0:	ldrb	w3, [x0, #80]
  40ffd4:	and	w3, w3, #0xfffffffe
  40ffd8:	strb	w3, [x0, #80]
  40ffdc:	b	40ff30 <wcrtomb@plt+0xd0b0>

000000000040ffe0 <_obstack_begin_1@@Base>:
  40ffe0:	stp	x3, x4, [x0, #56]
  40ffe4:	ldrb	w3, [x0, #80]
  40ffe8:	str	x5, [x0, #72]
  40ffec:	orr	w3, w3, #0x1
  40fff0:	strb	w3, [x0, #80]
  40fff4:	b	40ff30 <wcrtomb@plt+0xd0b0>

000000000040fff8 <_obstack_newchunk@@Base>:
  40fff8:	stp	x29, x30, [sp, #-64]!
  40fffc:	mov	x29, sp
  410000:	stp	x19, x20, [sp, #16]
  410004:	ldp	x2, x20, [x0, #16]
  410008:	stp	x21, x22, [sp, #32]
  41000c:	sub	x21, x20, x2
  410010:	ldr	x20, [x0, #48]
  410014:	adds	x1, x21, x1
  410018:	cset	x4, cs  // cs = hs, nlast
  41001c:	adds	x1, x20, x1
  410020:	lsr	x20, x21, #3
  410024:	add	x20, x20, #0x64
  410028:	cset	x3, cs  // cs = hs, nlast
  41002c:	add	x2, x20, x1
  410030:	ldr	x20, [x0]
  410034:	str	x23, [sp, #48]
  410038:	ldr	x23, [x0, #8]
  41003c:	cmp	x20, x1
  410040:	csel	x20, x20, x1, cs  // cs = hs, nlast
  410044:	cmp	x20, x2
  410048:	csel	x20, x20, x2, cs  // cs = hs, nlast
  41004c:	cmp	x4, #0x0
  410050:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  410054:	b.eq	410064 <_obstack_newchunk@@Base+0x6c>  // b.none
  410058:	adrp	x0, 432000 <_obstack_memory_used@@Base+0x21e54>
  41005c:	ldr	x0, [x0, #1272]
  410060:	blr	x0
  410064:	mov	x19, x0
  410068:	mov	x1, x20
  41006c:	bl	40fee0 <wcrtomb@plt+0xd060>
  410070:	mov	x22, x0
  410074:	cbz	x0, 410058 <_obstack_newchunk@@Base+0x60>
  410078:	mov	x2, x0
  41007c:	str	x0, [x19, #8]
  410080:	ldr	x1, [x19, #16]
  410084:	str	x23, [x0, #8]
  410088:	add	x20, x0, x20
  41008c:	str	x20, [x19, #32]
  410090:	str	x20, [x2], #16
  410094:	ldr	x20, [x19, #48]
  410098:	add	x2, x2, x20
  41009c:	bic	x20, x2, x20
  4100a0:	mov	x2, x21
  4100a4:	mov	x0, x20
  4100a8:	bl	402750 <memcpy@plt>
  4100ac:	ldrb	w0, [x19, #80]
  4100b0:	tbnz	w0, #1, 4100e4 <_obstack_newchunk@@Base+0xec>
  4100b4:	ldr	x0, [x19, #48]
  4100b8:	add	x1, x23, #0x10
  4100bc:	add	x1, x1, x0
  4100c0:	bic	x0, x1, x0
  4100c4:	ldr	x1, [x19, #16]
  4100c8:	cmp	x1, x0
  4100cc:	b.ne	4100e4 <_obstack_newchunk@@Base+0xec>  // b.any
  4100d0:	ldr	x0, [x23, #8]
  4100d4:	str	x0, [x22, #8]
  4100d8:	mov	x1, x23
  4100dc:	mov	x0, x19
  4100e0:	bl	40ff08 <wcrtomb@plt+0xd088>
  4100e4:	ldrb	w0, [x19, #80]
  4100e8:	ldr	x23, [sp, #48]
  4100ec:	and	w0, w0, #0xfffffffd
  4100f0:	str	x20, [x19, #16]
  4100f4:	add	x20, x20, x21
  4100f8:	strb	w0, [x19, #80]
  4100fc:	ldp	x21, x22, [sp, #32]
  410100:	str	x20, [x19, #24]
  410104:	ldp	x19, x20, [sp, #16]
  410108:	ldp	x29, x30, [sp], #64
  41010c:	ret

0000000000410110 <_obstack_allocated_p@@Base>:
  410110:	ldr	x0, [x0, #8]
  410114:	cbz	x0, 41012c <_obstack_allocated_p@@Base+0x1c>
  410118:	cmp	x0, x1
  41011c:	b.cs	410110 <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  410120:	ldr	x2, [x0]
  410124:	cmp	x2, x1
  410128:	b.cc	410110 <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  41012c:	cmp	x0, #0x0
  410130:	cset	w0, ne  // ne = any
  410134:	ret

0000000000410138 <_obstack_free@@Base>:
  410138:	stp	x29, x30, [sp, #-48]!
  41013c:	mov	x29, sp
  410140:	stp	x19, x20, [sp, #16]
  410144:	mov	x19, x0
  410148:	mov	x20, x1
  41014c:	ldr	x1, [x0, #8]
  410150:	str	x21, [sp, #32]
  410154:	cbz	x1, 4101a4 <_obstack_free@@Base+0x6c>
  410158:	cmp	x1, x20
  41015c:	b.cs	410184 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  410160:	ldr	x0, [x1]
  410164:	cmp	x0, x20
  410168:	b.cc	410184 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  41016c:	stp	x1, x20, [x19, #8]
  410170:	stp	x20, x0, [x19, #24]
  410174:	ldp	x19, x20, [sp, #16]
  410178:	ldr	x21, [sp, #32]
  41017c:	ldp	x29, x30, [sp], #48
  410180:	ret
  410184:	mov	x0, x19
  410188:	ldr	x21, [x1, #8]
  41018c:	bl	40ff08 <wcrtomb@plt+0xd088>
  410190:	ldrb	w0, [x19, #80]
  410194:	mov	x1, x21
  410198:	orr	w0, w0, #0x2
  41019c:	strb	w0, [x19, #80]
  4101a0:	b	410154 <_obstack_free@@Base+0x1c>
  4101a4:	cbz	x20, 410174 <_obstack_free@@Base+0x3c>
  4101a8:	bl	402b40 <abort@plt>

00000000004101ac <_obstack_memory_used@@Base>:
  4101ac:	ldr	x1, [x0, #8]
  4101b0:	mov	x0, #0x0                   	// #0
  4101b4:	cbnz	x1, 4101bc <_obstack_memory_used@@Base+0x10>
  4101b8:	ret
  4101bc:	ldr	x2, [x1]
  4101c0:	sub	x2, x2, x1
  4101c4:	add	x0, x0, x2
  4101c8:	ldr	x1, [x1, #8]
  4101cc:	b	4101b4 <_obstack_memory_used@@Base+0x8>
  4101d0:	asr	x2, x1, #6
  4101d4:	mov	x3, #0x1                   	// #1
  4101d8:	lsl	x3, x3, x1
  4101dc:	lsl	x2, x2, #3
  4101e0:	ldr	x1, [x0, x2]
  4101e4:	orr	x1, x1, x3
  4101e8:	str	x1, [x0, x2]
  4101ec:	ret
  4101f0:	mov	x1, #0x0                   	// #0
  4101f4:	ldr	x2, [x0, x1, lsl #3]
  4101f8:	mvn	x2, x2
  4101fc:	str	x2, [x0, x1, lsl #3]
  410200:	add	x1, x1, #0x1
  410204:	cmp	x1, #0x4
  410208:	b.ne	4101f4 <_obstack_memory_used@@Base+0x48>  // b.any
  41020c:	ret
  410210:	mov	x2, #0x0                   	// #0
  410214:	ldr	x3, [x0, x2]
  410218:	ldr	x4, [x1, x2]
  41021c:	orr	x3, x3, x4
  410220:	str	x3, [x0, x2]
  410224:	add	x2, x2, #0x8
  410228:	cmp	x2, #0x20
  41022c:	b.ne	410214 <_obstack_memory_used@@Base+0x68>  // b.any
  410230:	ret
  410234:	mov	x2, #0x0                   	// #0
  410238:	ldr	x3, [x0, x2]
  41023c:	ldr	x4, [x1, x2]
  410240:	and	x3, x3, x4
  410244:	str	x3, [x0, x2]
  410248:	add	x2, x2, #0x8
  41024c:	cmp	x2, #0x20
  410250:	b.ne	410238 <_obstack_memory_used@@Base+0x8c>  // b.any
  410254:	ret
  410258:	ldr	w2, [x0, #144]
  41025c:	cmp	w2, #0x1
  410260:	b.ne	410270 <_obstack_memory_used@@Base+0xc4>  // b.any
  410264:	ldr	x0, [x0, #8]
  410268:	ldrb	w0, [x0, x1]
  41026c:	ret
  410270:	ldr	x0, [x0, #16]
  410274:	ldr	w0, [x0, x1, lsl #2]
  410278:	b	41026c <_obstack_memory_used@@Base+0xc0>
  41027c:	ldr	x2, [x0, #64]
  410280:	ldr	x1, [x0, #88]
  410284:	cmp	x2, x1
  410288:	csel	x2, x2, x1, le
  41028c:	ldr	x1, [x0, #48]
  410290:	mov	x3, x1
  410294:	cmp	x3, x2
  410298:	b.lt	4102b0 <_obstack_memory_used@@Base+0x104>  // b.tstop
  41029c:	subs	x3, x2, x1
  4102a0:	csel	x3, x3, xzr, ge  // ge = tcont
  4102a4:	add	x1, x1, x3
  4102a8:	stp	x1, x1, [x0, #48]
  4102ac:	ret
  4102b0:	ldr	x4, [x0]
  4102b4:	ldr	x5, [x0, #40]
  4102b8:	add	x4, x4, x3
  4102bc:	ldrb	w4, [x4, x5]
  4102c0:	ldr	x5, [x0, #120]
  4102c4:	ldrb	w5, [x5, x4]
  4102c8:	ldr	x4, [x0, #8]
  4102cc:	strb	w5, [x4, x3]
  4102d0:	add	x3, x3, #0x1
  4102d4:	b	410294 <_obstack_memory_used@@Base+0xe8>
  4102d8:	cmp	x0, #0x0
  4102dc:	mov	x3, x0
  4102e0:	cset	w2, eq  // eq = none
  4102e4:	cmp	x1, #0x0
  4102e8:	csinc	w0, w2, wzr, ne  // ne = any
  4102ec:	cbnz	w0, 41032c <_obstack_memory_used@@Base+0x180>
  4102f0:	ldr	x4, [x1, #8]
  4102f4:	ldr	x2, [x3, #8]
  4102f8:	cmp	x2, x4
  4102fc:	b.ne	41030c <_obstack_memory_used@@Base+0x160>  // b.any
  410300:	subs	x2, x2, #0x1
  410304:	b.pl	410310 <_obstack_memory_used@@Base+0x164>  // b.nfrst
  410308:	mov	w0, #0x1                   	// #1
  41030c:	ret
  410310:	ldr	x6, [x1, #16]
  410314:	lsl	x4, x2, #3
  410318:	ldr	x5, [x3, #16]
  41031c:	ldr	x5, [x5, x4]
  410320:	ldr	x4, [x6, x4]
  410324:	cmp	x5, x4
  410328:	b	4102fc <_obstack_memory_used@@Base+0x150>
  41032c:	mov	w0, #0x0                   	// #0
  410330:	b	41030c <_obstack_memory_used@@Base+0x160>
  410334:	ldr	x2, [x0, #8]
  410338:	cmp	x2, #0x0
  41033c:	b.le	410388 <_obstack_memory_used@@Base+0x1dc>
  410340:	sub	x2, x2, #0x1
  410344:	ldr	x4, [x0, #16]
  410348:	mov	x0, #0x0                   	// #0
  41034c:	cmp	x0, x2
  410350:	b.cc	410364 <_obstack_memory_used@@Base+0x1b8>  // b.lo, b.ul, b.last
  410354:	ldr	x2, [x4, x0, lsl #3]
  410358:	cmp	x2, x1
  41035c:	csinc	x0, xzr, x0, ne  // ne = any
  410360:	ret
  410364:	add	x3, x0, x2
  410368:	lsr	x3, x3, #1
  41036c:	ldr	x5, [x4, x3, lsl #3]
  410370:	cmp	x5, x1
  410374:	b.ge	410380 <_obstack_memory_used@@Base+0x1d4>  // b.tcont
  410378:	add	x0, x3, #0x1
  41037c:	b	41034c <_obstack_memory_used@@Base+0x1a0>
  410380:	mov	x2, x3
  410384:	b	41034c <_obstack_memory_used@@Base+0x1a0>
  410388:	mov	x0, #0x0                   	// #0
  41038c:	b	410360 <_obstack_memory_used@@Base+0x1b4>
  410390:	ldr	x3, [x1, #72]
  410394:	ldr	x4, [x1, #104]
  410398:	cmp	x4, x3
  41039c:	b.gt	4103b0 <_obstack_memory_used@@Base+0x204>
  4103a0:	mov	w1, #0x2                   	// #2
  4103a4:	strb	w1, [x0, #8]
  4103a8:	mov	w0, #0x0                   	// #0
  4103ac:	ret
  4103b0:	ldr	x5, [x1, #8]
  4103b4:	ldr	w6, [x1, #144]
  4103b8:	ldrb	w4, [x5, x3]
  4103bc:	cmp	w6, #0x1
  4103c0:	strb	w4, [x0]
  4103c4:	b.le	4103ec <_obstack_memory_used@@Base+0x240>
  4103c8:	ldr	x6, [x1, #48]
  4103cc:	cmp	x3, x6
  4103d0:	b.eq	4103ec <_obstack_memory_used@@Base+0x240>  // b.none
  4103d4:	ldr	x6, [x1, #16]
  4103d8:	ldr	w6, [x6, x3, lsl #2]
  4103dc:	cmn	w6, #0x1
  4103e0:	b.ne	4103ec <_obstack_memory_used@@Base+0x240>  // b.any
  4103e4:	mov	w1, #0x1                   	// #1
  4103e8:	b	4104ac <_obstack_memory_used@@Base+0x300>
  4103ec:	cmp	w4, #0x5c
  4103f0:	b.ne	410418 <_obstack_memory_used@@Base+0x26c>  // b.any
  4103f4:	tbz	w2, #0, 4103e4 <_obstack_memory_used@@Base+0x238>
  4103f8:	ldr	x2, [x1, #88]
  4103fc:	add	x3, x3, #0x1
  410400:	cmp	x3, x2
  410404:	b.ge	4103e4 <_obstack_memory_used@@Base+0x238>  // b.tcont
  410408:	str	x3, [x1, #72]
  41040c:	ldrb	w1, [x5, x3]
  410410:	strb	w1, [x0]
  410414:	b	4103e4 <_obstack_memory_used@@Base+0x238>
  410418:	cmp	w4, #0x5b
  41041c:	b.ne	410490 <_obstack_memory_used@@Base+0x2e4>  // b.any
  410420:	ldr	x6, [x1, #88]
  410424:	add	x4, x3, #0x1
  410428:	cmp	x4, x6
  41042c:	b.ge	410478 <_obstack_memory_used@@Base+0x2cc>  // b.tcont
  410430:	add	x3, x5, x3
  410434:	ldrb	w1, [x3, #1]
  410438:	strb	w1, [x0]
  41043c:	cmp	w1, #0x3a
  410440:	b.eq	41046c <_obstack_memory_used@@Base+0x2c0>  // b.none
  410444:	cmp	w1, #0x3d
  410448:	b.eq	410464 <_obstack_memory_used@@Base+0x2b8>  // b.none
  41044c:	cmp	w1, #0x2e
  410450:	b.ne	410478 <_obstack_memory_used@@Base+0x2cc>  // b.any
  410454:	mov	w1, #0x1a                  	// #26
  410458:	strb	w1, [x0, #8]
  41045c:	mov	w0, #0x2                   	// #2
  410460:	b	4103ac <_obstack_memory_used@@Base+0x200>
  410464:	mov	w1, #0x1c                  	// #28
  410468:	b	410458 <_obstack_memory_used@@Base+0x2ac>
  41046c:	tbz	w2, #2, 410478 <_obstack_memory_used@@Base+0x2cc>
  410470:	mov	w1, #0x1e                  	// #30
  410474:	b	410458 <_obstack_memory_used@@Base+0x2ac>
  410478:	mov	w1, #0x1                   	// #1
  41047c:	strb	w1, [x0, #8]
  410480:	mov	w1, #0x5b                  	// #91
  410484:	strb	w1, [x0]
  410488:	mov	w0, #0x1                   	// #1
  41048c:	b	4103ac <_obstack_memory_used@@Base+0x200>
  410490:	cmp	w4, #0x5d
  410494:	b.eq	4104b4 <_obstack_memory_used@@Base+0x308>  // b.none
  410498:	cmp	w4, #0x5e
  41049c:	b.eq	4104bc <_obstack_memory_used@@Base+0x310>  // b.none
  4104a0:	cmp	w4, #0x2d
  4104a4:	b.ne	4103e4 <_obstack_memory_used@@Base+0x238>  // b.any
  4104a8:	mov	w1, #0x16                  	// #22
  4104ac:	strb	w1, [x0, #8]
  4104b0:	b	410488 <_obstack_memory_used@@Base+0x2dc>
  4104b4:	mov	w1, #0x15                  	// #21
  4104b8:	b	4104ac <_obstack_memory_used@@Base+0x300>
  4104bc:	mov	w1, #0x19                  	// #25
  4104c0:	b	4104ac <_obstack_memory_used@@Base+0x300>
  4104c4:	ldrb	w2, [x1, #48]
  4104c8:	cmp	w2, #0x11
  4104cc:	b.ne	4104e8 <_obstack_memory_used@@Base+0x33c>  // b.any
  4104d0:	ldr	x2, [x1, #40]
  4104d4:	cmp	x0, x2
  4104d8:	b.ne	4104e8 <_obstack_memory_used@@Base+0x33c>  // b.any
  4104dc:	ldrb	w0, [x1, #50]
  4104e0:	orr	w0, w0, #0x8
  4104e4:	strb	w0, [x1, #50]
  4104e8:	mov	w0, #0x0                   	// #0
  4104ec:	ret
  4104f0:	stp	x29, x30, [sp, #-144]!
  4104f4:	mov	x6, #0x28                  	// #40
  4104f8:	and	w10, w1, #0x1
  4104fc:	mov	x29, sp
  410500:	ldr	x8, [x0, #152]
  410504:	stp	x25, x26, [sp, #64]
  410508:	mov	x26, #0x1                   	// #1
  41050c:	stp	x27, x28, [sp, #80]
  410510:	mov	x28, #0x18                  	// #24
  410514:	lsl	x26, x26, x2
  410518:	ldr	x25, [x8, #48]
  41051c:	mvn	w7, w26
  410520:	mul	x6, x4, x6
  410524:	mov	x27, x3
  410528:	and	w7, w7, #0xffff
  41052c:	and	w9, w1, #0x2
  410530:	madd	x25, x3, x28, x25
  410534:	stp	x19, x20, [sp, #16]
  410538:	mov	w19, w1
  41053c:	stp	x21, x22, [sp, #32]
  410540:	mov	x22, x0
  410544:	mov	x21, x2
  410548:	stp	x23, x24, [sp, #48]
  41054c:	mov	x23, x4
  410550:	mov	x24, #0x0                   	// #0
  410554:	ldr	x0, [x25, #8]
  410558:	cmp	x0, x24
  41055c:	b.gt	410568 <_obstack_memory_used@@Base+0x3bc>
  410560:	asr	w0, w19, #1
  410564:	b	4105e8 <_obstack_memory_used@@Base+0x43c>
  410568:	ldr	x0, [x25, #16]
  41056c:	ldr	x5, [x0, x24, lsl #3]
  410570:	ldr	x0, [x8]
  410574:	lsl	x2, x5, #4
  410578:	add	x1, x0, x5, lsl #4
  41057c:	ldrb	w1, [x1, #8]
  410580:	cmp	w1, #0x8
  410584:	b.eq	410680 <_obstack_memory_used@@Base+0x4d4>  // b.none
  410588:	cmp	w1, #0x9
  41058c:	b.eq	410694 <_obstack_memory_used@@Base+0x4e8>  // b.none
  410590:	cmp	w1, #0x4
  410594:	b.ne	410678 <_obstack_memory_used@@Base+0x4cc>  // b.any
  410598:	cmn	x23, #0x1
  41059c:	b.eq	410678 <_obstack_memory_used@@Base+0x4cc>  // b.none
  4105a0:	ldr	x20, [x22, #216]
  4105a4:	mul	x11, x5, x28
  4105a8:	add	x20, x20, x6
  4105ac:	ldr	x0, [x20]
  4105b0:	cmp	x0, x5
  4105b4:	b.ne	41066c <_obstack_memory_used@@Base+0x4c0>  // b.any
  4105b8:	cmp	x21, #0x3f
  4105bc:	b.gt	4105cc <_obstack_memory_used@@Base+0x420>
  4105c0:	ldrh	w0, [x20, #34]
  4105c4:	tst	x0, x26
  4105c8:	b.eq	41066c <_obstack_memory_used@@Base+0x4c0>  // b.none
  4105cc:	ldr	x0, [x8, #40]
  4105d0:	add	x0, x0, x11
  4105d4:	ldr	x0, [x0, #16]
  4105d8:	ldr	x3, [x0]
  4105dc:	cmp	x27, x3
  4105e0:	b.ne	410604 <_obstack_memory_used@@Base+0x458>  // b.any
  4105e4:	sbfx	x0, x19, #0, #1
  4105e8:	ldp	x19, x20, [sp, #16]
  4105ec:	ldp	x21, x22, [sp, #32]
  4105f0:	ldp	x23, x24, [sp, #48]
  4105f4:	ldp	x25, x26, [sp, #64]
  4105f8:	ldp	x27, x28, [sp, #80]
  4105fc:	ldp	x29, x30, [sp], #144
  410600:	ret
  410604:	mov	x4, x23
  410608:	mov	x2, x21
  41060c:	mov	w1, w19
  410610:	mov	x0, x22
  410614:	stp	x6, x11, [sp, #96]
  410618:	str	w7, [sp, #116]
  41061c:	stp	x8, x5, [sp, #120]
  410620:	stp	w10, w9, [sp, #136]
  410624:	bl	4104f0 <_obstack_memory_used@@Base+0x344>
  410628:	ldr	w7, [sp, #116]
  41062c:	cmn	w0, #0x1
  410630:	ldp	w10, w9, [sp, #136]
  410634:	ldp	x6, x11, [sp, #96]
  410638:	ldp	x8, x5, [sp, #120]
  41063c:	b.ne	410648 <_obstack_memory_used@@Base+0x49c>  // b.any
  410640:	mov	w0, #0xffffffff            	// #-1
  410644:	b	4105e8 <_obstack_memory_used@@Base+0x43c>
  410648:	cbnz	w0, 410658 <_obstack_memory_used@@Base+0x4ac>
  41064c:	cbz	w9, 410658 <_obstack_memory_used@@Base+0x4ac>
  410650:	mov	w0, #0x0                   	// #0
  410654:	b	4105e8 <_obstack_memory_used@@Base+0x43c>
  410658:	cmp	x21, #0x3f
  41065c:	b.gt	41066c <_obstack_memory_used@@Base+0x4c0>
  410660:	ldrh	w0, [x20, #34]
  410664:	and	w0, w7, w0
  410668:	strh	w0, [x20, #34]
  41066c:	ldrb	w0, [x20, #32]
  410670:	add	x20, x20, #0x28
  410674:	cbnz	w0, 4105ac <_obstack_memory_used@@Base+0x400>
  410678:	add	x24, x24, #0x1
  41067c:	b	410554 <_obstack_memory_used@@Base+0x3a8>
  410680:	cbz	w10, 410678 <_obstack_memory_used@@Base+0x4cc>
  410684:	ldr	x0, [x0, x2]
  410688:	cmp	x0, x21
  41068c:	b.ne	410678 <_obstack_memory_used@@Base+0x4cc>  // b.any
  410690:	b	410640 <_obstack_memory_used@@Base+0x494>
  410694:	cbz	w9, 410678 <_obstack_memory_used@@Base+0x4cc>
  410698:	ldr	x0, [x0, x2]
  41069c:	cmp	x0, x21
  4106a0:	b.ne	410678 <_obstack_memory_used@@Base+0x4cc>  // b.any
  4106a4:	b	410650 <_obstack_memory_used@@Base+0x4a4>
  4106a8:	mov	x6, x4
  4106ac:	mov	x4, x5
  4106b0:	ldr	x5, [x0, #216]
  4106b4:	mov	x7, #0x28                  	// #40
  4106b8:	madd	x1, x1, x7, x5
  4106bc:	ldr	x7, [x1, #16]
  4106c0:	cmp	x7, x6
  4106c4:	b.gt	4106f0 <_obstack_memory_used@@Base+0x544>
  4106c8:	ldr	x5, [x1, #24]
  4106cc:	cmp	x5, x6
  4106d0:	b.lt	4106fc <_obstack_memory_used@@Base+0x550>  // b.tstop
  4106d4:	cmp	x7, x6
  4106d8:	cset	w7, eq  // eq = none
  4106dc:	cmp	x5, x6
  4106e0:	cset	w1, eq  // eq = none
  4106e4:	orr	w1, w7, w1, lsl #1
  4106e8:	cbz	w1, 4106f4 <_obstack_memory_used@@Base+0x548>
  4106ec:	b	4104f0 <_obstack_memory_used@@Base+0x344>
  4106f0:	mov	w1, #0xffffffff            	// #-1
  4106f4:	mov	w0, w1
  4106f8:	ret
  4106fc:	mov	w1, #0x1                   	// #1
  410700:	b	4106f4 <_obstack_memory_used@@Base+0x548>
  410704:	mov	x2, x0
  410708:	mov	x7, #0x28                  	// #40
  41070c:	mov	x0, #0x0                   	// #0
  410710:	ldr	x6, [x2, #200]
  410714:	mov	x4, x6
  410718:	cmp	x4, x0
  41071c:	b.gt	410744 <_obstack_memory_used@@Base+0x598>
  410720:	cmp	x6, x0
  410724:	b.le	410770 <_obstack_memory_used@@Base+0x5c4>
  410728:	ldr	x3, [x2, #216]
  41072c:	mov	x2, #0x28                  	// #40
  410730:	madd	x2, x0, x2, x3
  410734:	ldr	x2, [x2, #8]
  410738:	cmp	x2, x1
  41073c:	csinv	x0, x0, xzr, eq  // eq = none
  410740:	ret
  410744:	add	x3, x4, x0
  410748:	ldr	x5, [x2, #216]
  41074c:	asr	x3, x3, #1
  410750:	madd	x5, x3, x7, x5
  410754:	ldr	x5, [x5, #8]
  410758:	cmp	x5, x1
  41075c:	b.ge	410768 <_obstack_memory_used@@Base+0x5bc>  // b.tcont
  410760:	add	x0, x3, #0x1
  410764:	b	410718 <_obstack_memory_used@@Base+0x56c>
  410768:	mov	x4, x3
  41076c:	b	410718 <_obstack_memory_used@@Base+0x56c>
  410770:	mov	x0, #0xffffffffffffffff    	// #-1
  410774:	b	410740 <_obstack_memory_used@@Base+0x594>
  410778:	stp	x29, x30, [sp, #-96]!
  41077c:	mov	x12, x0
  410780:	mov	x13, x1
  410784:	mov	x18, x5
  410788:	mov	x15, x3
  41078c:	mov	x29, sp
  410790:	mov	x1, x3
  410794:	stp	x19, x20, [sp, #16]
  410798:	stp	x21, x22, [sp, #32]
  41079c:	mov	x22, x2
  4107a0:	stp	x23, x24, [sp, #48]
  4107a4:	mov	x23, x4
  4107a8:	stp	x25, x26, [sp, #64]
  4107ac:	ldr	x25, [x0, #152]
  4107b0:	str	x27, [sp, #80]
  4107b4:	bl	410704 <_obstack_memory_used@@Base+0x558>
  4107b8:	mov	x20, x0
  4107bc:	mov	x1, x18
  4107c0:	mov	x0, x12
  4107c4:	bl	410704 <_obstack_memory_used@@Base+0x558>
  4107c8:	mov	x21, x0
  4107cc:	mov	x14, #0x0                   	// #0
  4107d0:	mov	x27, #0x28                  	// #40
  4107d4:	ldr	x0, [x13, #8]
  4107d8:	cmp	x0, x14
  4107dc:	b.gt	410800 <_obstack_memory_used@@Base+0x654>
  4107e0:	mov	w0, #0x0                   	// #0
  4107e4:	ldp	x19, x20, [sp, #16]
  4107e8:	ldp	x21, x22, [sp, #32]
  4107ec:	ldp	x23, x24, [sp, #48]
  4107f0:	ldp	x25, x26, [sp, #64]
  4107f4:	ldr	x27, [sp, #80]
  4107f8:	ldp	x29, x30, [sp], #96
  4107fc:	ret
  410800:	ldr	x0, [x13, #16]
  410804:	lsl	x19, x14, #3
  410808:	ldr	x2, [x12, #216]
  41080c:	mov	x4, x15
  410810:	ldr	x1, [x0, x19]
  410814:	mov	x5, x20
  410818:	mov	x3, x22
  41081c:	mul	x0, x1, x27
  410820:	ldr	x0, [x2, x0]
  410824:	ldr	x2, [x25]
  410828:	lsl	x0, x0, #4
  41082c:	ldr	x26, [x2, x0]
  410830:	mov	x0, x12
  410834:	mov	x2, x26
  410838:	bl	4106a8 <_obstack_memory_used@@Base+0x4fc>
  41083c:	mov	w24, w0
  410840:	mov	x5, x21
  410844:	ldr	x0, [x13, #16]
  410848:	mov	x4, x18
  41084c:	mov	x3, x23
  410850:	mov	x2, x26
  410854:	ldr	x1, [x0, x19]
  410858:	mov	x0, x12
  41085c:	bl	4106a8 <_obstack_memory_used@@Base+0x4fc>
  410860:	cmp	w24, w0
  410864:	b.ne	410870 <_obstack_memory_used@@Base+0x6c4>  // b.any
  410868:	add	x14, x14, #0x1
  41086c:	b	4107d4 <_obstack_memory_used@@Base+0x628>
  410870:	mov	w0, #0x1                   	// #1
  410874:	b	4107e4 <_obstack_memory_used@@Base+0x638>
  410878:	stp	x29, x30, [sp, #-48]!
  41087c:	mov	x29, sp
  410880:	stp	x19, x20, [sp, #16]
  410884:	mov	x20, x1
  410888:	str	x21, [sp, #32]
  41088c:	mov	x21, x2
  410890:	mov	x19, x0
  410894:	ldr	x0, [x0, #8]
  410898:	cbnz	x0, 410890 <_obstack_memory_used@@Base+0x6e4>
  41089c:	ldr	x0, [x19, #16]
  4108a0:	cbnz	x0, 410890 <_obstack_memory_used@@Base+0x6e4>
  4108a4:	mov	x1, x19
  4108a8:	mov	x0, x21
  4108ac:	blr	x20
  4108b0:	cbnz	w0, 4108d4 <_obstack_memory_used@@Base+0x728>
  4108b4:	ldr	x1, [x19]
  4108b8:	cbz	x1, 4108d4 <_obstack_memory_used@@Base+0x728>
  4108bc:	ldr	x0, [x1, #16]
  4108c0:	cmp	x0, x19
  4108c4:	b.eq	4108cc <_obstack_memory_used@@Base+0x720>  // b.none
  4108c8:	cbnz	x0, 410890 <_obstack_memory_used@@Base+0x6e4>
  4108cc:	mov	x19, x1
  4108d0:	b	4108a4 <_obstack_memory_used@@Base+0x6f8>
  4108d4:	ldp	x19, x20, [sp, #16]
  4108d8:	ldr	x21, [sp, #32]
  4108dc:	ldp	x29, x30, [sp], #48
  4108e0:	ret
  4108e4:	stp	x29, x30, [sp, #-48]!
  4108e8:	mov	x29, sp
  4108ec:	stp	x19, x20, [sp, #16]
  4108f0:	mov	x19, x0
  4108f4:	mov	x20, x1
  4108f8:	str	x21, [sp, #32]
  4108fc:	mov	x21, x2
  410900:	mov	x1, x19
  410904:	mov	x0, x21
  410908:	blr	x20
  41090c:	cbnz	w0, 410948 <_obstack_memory_used@@Base+0x79c>
  410910:	ldr	x3, [x19, #8]
  410914:	cbnz	x3, 41092c <_obstack_memory_used@@Base+0x780>
  410918:	mov	x1, #0x0                   	// #0
  41091c:	ldr	x3, [x19, #16]
  410920:	cmp	x3, x1
  410924:	b.eq	410934 <_obstack_memory_used@@Base+0x788>  // b.none
  410928:	cbz	x3, 410934 <_obstack_memory_used@@Base+0x788>
  41092c:	mov	x19, x3
  410930:	b	410900 <_obstack_memory_used@@Base+0x754>
  410934:	ldr	x2, [x19]
  410938:	mov	x1, x19
  41093c:	cbz	x2, 410948 <_obstack_memory_used@@Base+0x79c>
  410940:	mov	x19, x2
  410944:	b	41091c <_obstack_memory_used@@Base+0x770>
  410948:	ldp	x19, x20, [sp, #16]
  41094c:	ldr	x21, [sp, #32]
  410950:	ldp	x29, x30, [sp], #48
  410954:	ret
  410958:	stp	x29, x30, [sp, #-32]!
  41095c:	mov	x29, sp
  410960:	stp	x19, x20, [sp, #16]
  410964:	mov	x19, x0
  410968:	ldr	w0, [x0, #144]
  41096c:	mov	x20, x1
  410970:	cmp	w0, #0x1
  410974:	b.le	4109c0 <_obstack_memory_used@@Base+0x814>
  410978:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41097c:	cmp	x1, x0
  410980:	b.ls	410994 <_obstack_memory_used@@Base+0x7e8>  // b.plast
  410984:	mov	w0, #0xc                   	// #12
  410988:	ldp	x19, x20, [sp, #16]
  41098c:	ldp	x29, x30, [sp], #32
  410990:	ret
  410994:	ldr	x0, [x19, #16]
  410998:	lsl	x1, x1, #2
  41099c:	bl	402a80 <realloc@plt>
  4109a0:	cbz	x0, 410984 <_obstack_memory_used@@Base+0x7d8>
  4109a4:	str	x0, [x19, #16]
  4109a8:	ldr	x0, [x19, #24]
  4109ac:	cbz	x0, 4109c0 <_obstack_memory_used@@Base+0x814>
  4109b0:	lsl	x1, x20, #3
  4109b4:	bl	402a80 <realloc@plt>
  4109b8:	cbz	x0, 410984 <_obstack_memory_used@@Base+0x7d8>
  4109bc:	str	x0, [x19, #24]
  4109c0:	ldrb	w0, [x19, #139]
  4109c4:	cbz	w0, 4109dc <_obstack_memory_used@@Base+0x830>
  4109c8:	ldr	x0, [x19, #8]
  4109cc:	mov	x1, x20
  4109d0:	bl	402a80 <realloc@plt>
  4109d4:	cbz	x0, 410984 <_obstack_memory_used@@Base+0x7d8>
  4109d8:	str	x0, [x19, #8]
  4109dc:	mov	w0, #0x0                   	// #0
  4109e0:	str	x20, [x19, #64]
  4109e4:	b	410988 <_obstack_memory_used@@Base+0x7dc>
  4109e8:	stp	x29, x30, [sp, #-32]!
  4109ec:	mov	x29, sp
  4109f0:	stp	x19, x20, [sp, #16]
  4109f4:	mov	x19, x0
  4109f8:	mov	x20, x1
  4109fc:	ldr	x0, [x0]
  410a00:	ldr	x1, [x19, #8]
  410a04:	cmp	x0, x1
  410a08:	b.ne	410a2c <_obstack_memory_used@@Base+0x880>  // b.any
  410a0c:	add	x0, x0, #0x1
  410a10:	lsl	x1, x0, #1
  410a14:	str	x1, [x19]
  410a18:	lsl	x1, x0, #4
  410a1c:	ldr	x0, [x19, #16]
  410a20:	bl	402a80 <realloc@plt>
  410a24:	cbz	x0, 410a4c <_obstack_memory_used@@Base+0x8a0>
  410a28:	str	x0, [x19, #16]
  410a2c:	ldp	x0, x1, [x19, #8]
  410a30:	add	x2, x0, #0x1
  410a34:	str	x2, [x19, #8]
  410a38:	str	x20, [x1, x0, lsl #3]
  410a3c:	mov	w0, #0x1                   	// #1
  410a40:	ldp	x19, x20, [sp, #16]
  410a44:	ldp	x29, x30, [sp], #32
  410a48:	ret
  410a4c:	mov	w0, #0x0                   	// #0
  410a50:	b	410a40 <_obstack_memory_used@@Base+0x894>
  410a54:	stp	x29, x30, [sp, #-32]!
  410a58:	mov	x29, sp
  410a5c:	stp	x19, x20, [sp, #16]
  410a60:	mov	x19, x0
  410a64:	mov	x0, #0x1                   	// #1
  410a68:	mov	x20, x1
  410a6c:	stp	x0, x0, [x19]
  410a70:	mov	x0, #0x8                   	// #8
  410a74:	bl	402930 <malloc@plt>
  410a78:	str	x0, [x19, #16]
  410a7c:	cbnz	x0, 410a94 <_obstack_memory_used@@Base+0x8e8>
  410a80:	mov	w0, #0xc                   	// #12
  410a84:	stp	xzr, xzr, [x19]
  410a88:	ldp	x19, x20, [sp, #16]
  410a8c:	ldp	x29, x30, [sp], #32
  410a90:	ret
  410a94:	str	x20, [x0]
  410a98:	mov	w0, #0x0                   	// #0
  410a9c:	b	410a88 <_obstack_memory_used@@Base+0x8dc>
  410aa0:	stp	x29, x30, [sp, #-32]!
  410aa4:	mov	x29, sp
  410aa8:	str	x19, [sp, #16]
  410aac:	mov	x19, x0
  410ab0:	lsl	x0, x1, #3
  410ab4:	stp	x1, xzr, [x19]
  410ab8:	bl	402930 <malloc@plt>
  410abc:	str	x0, [x19, #16]
  410ac0:	cmp	x0, #0x0
  410ac4:	mov	w0, #0xc                   	// #12
  410ac8:	csel	w0, w0, wzr, eq  // eq = none
  410acc:	ldr	x19, [sp, #16]
  410ad0:	ldp	x29, x30, [sp], #32
  410ad4:	ret
  410ad8:	stp	xzr, xzr, [x0]
  410adc:	stp	xzr, xzr, [x0, #16]
  410ae0:	ret
  410ae4:	stp	x29, x30, [sp, #-144]!
  410ae8:	mov	x29, sp
  410aec:	stp	x19, x20, [sp, #16]
  410af0:	mov	x19, x0
  410af4:	stp	x21, x22, [sp, #32]
  410af8:	add	x22, sp, #0x50
  410afc:	ldr	x21, [x19, #64]
  410b00:	stp	x23, x24, [sp, #48]
  410b04:	mov	w23, #0xffffffff            	// #-1
  410b08:	ldr	x0, [x0, #88]
  410b0c:	ldr	x20, [x19, #48]
  410b10:	cmp	x21, x0
  410b14:	csel	x21, x21, x0, le
  410b18:	cmp	x20, x21
  410b1c:	b.ge	410c30 <_obstack_memory_used@@Base+0xa84>  // b.tcont
  410b20:	ldr	x0, [x19, #120]
  410b24:	sub	x2, x21, x20
  410b28:	ldr	x24, [x19, #32]
  410b2c:	cbz	x0, 410b84 <_obstack_memory_used@@Base+0x9d8>
  410b30:	mov	x0, #0x0                   	// #0
  410b34:	ldr	w1, [x19, #144]
  410b38:	cmp	w1, w0
  410b3c:	b.le	410b48 <_obstack_memory_used@@Base+0x99c>
  410b40:	cmp	x2, x0
  410b44:	b.ne	410b50 <_obstack_memory_used@@Base+0x9a4>  // b.any
  410b48:	mov	x1, x22
  410b4c:	b	410b94 <_obstack_memory_used@@Base+0x9e8>
  410b50:	ldr	x1, [x19]
  410b54:	ldr	x3, [x19, #40]
  410b58:	add	x1, x1, x0
  410b5c:	add	x1, x1, x20
  410b60:	ldrb	w1, [x1, x3]
  410b64:	ldr	x3, [x19, #120]
  410b68:	ldrb	w3, [x3, x1]
  410b6c:	ldr	x1, [x19, #8]
  410b70:	add	x1, x1, x20
  410b74:	strb	w3, [x1, x0]
  410b78:	strb	w3, [x22, x0]
  410b7c:	add	x0, x0, #0x1
  410b80:	b	410b34 <_obstack_memory_used@@Base+0x988>
  410b84:	ldr	x1, [x19, #40]
  410b88:	add	x0, x20, x1
  410b8c:	ldr	x1, [x19]
  410b90:	add	x1, x1, x0
  410b94:	add	x3, x19, #0x20
  410b98:	add	x0, sp, #0x4c
  410b9c:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  410ba0:	sub	x1, x0, #0x1
  410ba4:	cmn	x1, #0x3
  410ba8:	b.hi	410bc4 <_obstack_memory_used@@Base+0xa18>  // b.pmore
  410bac:	cmn	x0, #0x2
  410bb0:	b.ne	410bf4 <_obstack_memory_used@@Base+0xa48>  // b.any
  410bb4:	ldr	x1, [x19, #64]
  410bb8:	ldr	x0, [x19, #88]
  410bbc:	cmp	x1, x0
  410bc0:	b.lt	410c2c <_obstack_memory_used@@Base+0xa80>  // b.tstop
  410bc4:	ldr	x0, [x19]
  410bc8:	ldr	x1, [x19, #40]
  410bcc:	add	x0, x0, x20
  410bd0:	ldrb	w0, [x0, x1]
  410bd4:	ldr	x1, [x19, #120]
  410bd8:	str	w0, [sp, #76]
  410bdc:	cbz	x1, 410bec <_obstack_memory_used@@Base+0xa40>
  410be0:	and	x0, x0, #0xff
  410be4:	ldrb	w0, [x1, x0]
  410be8:	str	w0, [sp, #76]
  410bec:	mov	x0, #0x1                   	// #1
  410bf0:	str	x24, [x19, #32]
  410bf4:	ldr	x3, [x19, #16]
  410bf8:	add	x2, x20, #0x1
  410bfc:	ldr	w1, [sp, #76]
  410c00:	add	x0, x20, x0
  410c04:	str	w1, [x3, x20, lsl #2]
  410c08:	mov	x1, x2
  410c0c:	cmp	x1, x0
  410c10:	b.lt	410c48 <_obstack_memory_used@@Base+0xa9c>  // b.tstop
  410c14:	mvn	x1, x20
  410c18:	cmp	x20, x0
  410c1c:	add	x1, x1, x0
  410c20:	csel	x1, x1, xzr, lt  // lt = tstop
  410c24:	add	x20, x1, x2
  410c28:	b	410b18 <_obstack_memory_used@@Base+0x96c>
  410c2c:	str	x24, [x19, #32]
  410c30:	ldp	x21, x22, [sp, #32]
  410c34:	ldp	x23, x24, [sp, #48]
  410c38:	stp	x20, x20, [x19, #48]
  410c3c:	ldp	x19, x20, [sp, #16]
  410c40:	ldp	x29, x30, [sp], #144
  410c44:	ret
  410c48:	str	w23, [x3, x1, lsl #2]
  410c4c:	add	x1, x1, #0x1
  410c50:	b	410c0c <_obstack_memory_used@@Base+0xa60>
  410c54:	stp	x29, x30, [sp, #-176]!
  410c58:	mov	x29, sp
  410c5c:	stp	x19, x20, [sp, #16]
  410c60:	mov	x19, x0
  410c64:	stp	x23, x24, [sp, #48]
  410c68:	ldr	x20, [x0, #48]
  410c6c:	stp	x21, x22, [sp, #32]
  410c70:	ldr	x24, [x19, #64]
  410c74:	stp	x25, x26, [sp, #64]
  410c78:	ldr	x0, [x0, #88]
  410c7c:	cmp	x24, x0
  410c80:	csel	x24, x24, x0, le
  410c84:	ldrb	w0, [x19, #138]
  410c88:	str	x27, [sp, #80]
  410c8c:	cbnz	w0, 410f14 <_obstack_memory_used@@Base+0xd68>
  410c90:	ldr	x0, [x19, #120]
  410c94:	cbnz	x0, 410f14 <_obstack_memory_used@@Base+0xd68>
  410c98:	ldrb	w0, [x19, #140]
  410c9c:	cbnz	w0, 410f14 <_obstack_memory_used@@Base+0xd68>
  410ca0:	mov	w23, #0xffffffff            	// #-1
  410ca4:	cmp	x20, x24
  410ca8:	b.ge	410f04 <_obstack_memory_used@@Base+0xd58>  // b.tcont
  410cac:	ldr	x26, [x19]
  410cb0:	add	x27, x19, #0x20
  410cb4:	ldr	x21, [x19, #40]
  410cb8:	mov	x25, x20
  410cbc:	add	x0, x26, x21
  410cc0:	ldrb	w22, [x0, x20]
  410cc4:	tbnz	w22, #7, 410d00 <_obstack_memory_used@@Base+0xb54>
  410cc8:	mov	x0, x27
  410ccc:	bl	402b70 <mbsinit@plt>
  410cd0:	cbz	w0, 410d00 <_obstack_memory_used@@Base+0xb54>
  410cd4:	bl	402a90 <__ctype_toupper_loc@plt>
  410cd8:	ubfiz	x22, x22, #2, #8
  410cdc:	ldr	x0, [x0]
  410ce0:	ldr	x1, [x19, #8]
  410ce4:	ldr	w0, [x0, x22]
  410ce8:	strb	w0, [x1, x20]
  410cec:	ldp	x1, x0, [x19, #8]
  410cf0:	ldrb	w1, [x1, x20]
  410cf4:	str	w1, [x0, x20, lsl #2]
  410cf8:	add	x20, x20, #0x1
  410cfc:	b	410ca4 <_obstack_memory_used@@Base+0xaf8>
  410d00:	add	x21, x21, x20
  410d04:	mov	x3, x27
  410d08:	ldr	x0, [x19, #32]
  410d0c:	add	x1, x26, x21
  410d10:	sub	x2, x24, x20
  410d14:	str	x0, [sp, #104]
  410d18:	add	x0, sp, #0x64
  410d1c:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  410d20:	mov	x21, x0
  410d24:	sub	x0, x0, #0x1
  410d28:	cmn	x0, #0x4
  410d2c:	b.hi	410eac <_obstack_memory_used@@Base+0xd00>  // b.pmore
  410d30:	ldr	w25, [sp, #100]
  410d34:	mov	w0, w25
  410d38:	bl	402db0 <towupper@plt>
  410d3c:	mov	w22, w0
  410d40:	cmp	w25, w0
  410d44:	b.eq	410e88 <_obstack_memory_used@@Base+0xcdc>  // b.none
  410d48:	mov	w1, w0
  410d4c:	add	x2, sp, #0x68
  410d50:	add	x0, sp, #0x70
  410d54:	bl	402e80 <wcrtomb@plt>
  410d58:	cmp	x21, x0
  410d5c:	b.ne	410da8 <_obstack_memory_used@@Base+0xbfc>  // b.any
  410d60:	ldr	x0, [x19, #8]
  410d64:	mov	x2, x21
  410d68:	add	x1, sp, #0x70
  410d6c:	add	x0, x0, x20
  410d70:	bl	402750 <memcpy@plt>
  410d74:	ldr	x2, [x19, #16]
  410d78:	add	x1, x20, #0x1
  410d7c:	add	x21, x21, x20
  410d80:	mov	x0, x1
  410d84:	str	w22, [x2, x20, lsl #2]
  410d88:	cmp	x0, x21
  410d8c:	b.lt	410ea0 <_obstack_memory_used@@Base+0xcf4>  // b.tstop
  410d90:	mvn	x0, x20
  410d94:	cmp	x20, x21
  410d98:	add	x0, x0, x21
  410d9c:	csel	x0, x0, xzr, lt  // lt = tstop
  410da0:	add	x20, x0, x1
  410da4:	b	410ca4 <_obstack_memory_used@@Base+0xaf8>
  410da8:	mov	x21, x20
  410dac:	ldr	x3, [x19, #120]
  410db0:	sub	x2, x24, x21
  410db4:	ldr	x0, [x19, #32]
  410db8:	str	x0, [sp, #104]
  410dbc:	cbz	x3, 410f4c <_obstack_memory_used@@Base+0xda0>
  410dc0:	ldr	w4, [x19, #144]
  410dc4:	add	x23, sp, #0x70
  410dc8:	mov	x0, #0x0                   	// #0
  410dcc:	cmp	w4, w0
  410dd0:	b.le	410ddc <_obstack_memory_used@@Base+0xc30>
  410dd4:	cmp	x0, x2
  410dd8:	b.lt	410f28 <_obstack_memory_used@@Base+0xd7c>  // b.tstop
  410ddc:	add	x3, x19, #0x20
  410de0:	mov	x1, x23
  410de4:	add	x0, sp, #0x64
  410de8:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  410dec:	sub	x26, x0, #0x1
  410df0:	mov	x22, x0
  410df4:	cmn	x26, #0x4
  410df8:	b.hi	4110c4 <_obstack_memory_used@@Base+0xf18>  // b.pmore
  410dfc:	ldr	w25, [sp, #100]
  410e00:	mov	w0, w25
  410e04:	bl	402db0 <towupper@plt>
  410e08:	mov	w27, w0
  410e0c:	cmp	w25, w0
  410e10:	b.eq	411084 <_obstack_memory_used@@Base+0xed8>  // b.none
  410e14:	mov	w1, w0
  410e18:	add	x2, sp, #0x68
  410e1c:	add	x0, sp, #0x70
  410e20:	bl	402e80 <wcrtomb@plt>
  410e24:	mov	x25, x0
  410e28:	cmp	x22, x0
  410e2c:	b.ne	410f60 <_obstack_memory_used@@Base+0xdb4>  // b.any
  410e30:	ldr	x0, [x19, #8]
  410e34:	mov	x2, x22
  410e38:	add	x1, sp, #0x70
  410e3c:	add	x0, x0, x21
  410e40:	bl	402750 <memcpy@plt>
  410e44:	ldrb	w0, [x19, #140]
  410e48:	cbnz	w0, 411094 <_obstack_memory_used@@Base+0xee8>
  410e4c:	ldr	x2, [x19, #16]
  410e50:	add	x0, x21, #0x1
  410e54:	add	x20, x20, x22
  410e58:	mov	x1, x0
  410e5c:	add	x22, x22, x21
  410e60:	mov	w3, #0xffffffff            	// #-1
  410e64:	str	w27, [x2, x21, lsl #2]
  410e68:	cmp	x1, x22
  410e6c:	b.lt	4110b8 <_obstack_memory_used@@Base+0xf0c>  // b.tstop
  410e70:	mvn	x1, x21
  410e74:	cmp	x21, x22
  410e78:	add	x1, x1, x22
  410e7c:	csel	x1, x1, xzr, lt  // lt = tstop
  410e80:	add	x21, x1, x0
  410e84:	b	410f1c <_obstack_memory_used@@Base+0xd70>
  410e88:	ldp	x3, x0, [x19]
  410e8c:	mov	x2, x21
  410e90:	ldr	x1, [x19, #40]
  410e94:	add	x1, x20, x1
  410e98:	add	x1, x3, x1
  410e9c:	b	410d6c <_obstack_memory_used@@Base+0xbc0>
  410ea0:	str	w23, [x2, x0, lsl #2]
  410ea4:	add	x0, x0, #0x1
  410ea8:	b	410d88 <_obstack_memory_used@@Base+0xbdc>
  410eac:	cmn	x0, #0x3
  410eb0:	b.ne	410ec4 <_obstack_memory_used@@Base+0xd18>  // b.any
  410eb4:	ldr	x1, [x19, #64]
  410eb8:	ldr	x0, [x19, #88]
  410ebc:	cmp	x1, x0
  410ec0:	b.lt	410efc <_obstack_memory_used@@Base+0xd50>  // b.tstop
  410ec4:	ldr	x0, [x19]
  410ec8:	cmn	x21, #0x1
  410ecc:	ldr	x1, [x19, #40]
  410ed0:	add	x0, x0, x20
  410ed4:	ldrb	w0, [x0, x1]
  410ed8:	ldr	x1, [x19, #8]
  410edc:	strb	w0, [x1, x20]
  410ee0:	add	x20, x20, #0x1
  410ee4:	ldr	x1, [x19, #16]
  410ee8:	str	w0, [x1, x25, lsl #2]
  410eec:	b.ne	410ca4 <_obstack_memory_used@@Base+0xaf8>  // b.any
  410ef0:	ldr	x0, [sp, #104]
  410ef4:	str	x0, [x19, #32]
  410ef8:	b	410ca4 <_obstack_memory_used@@Base+0xaf8>
  410efc:	ldr	x0, [sp, #104]
  410f00:	str	x0, [x19, #32]
  410f04:	str	x20, [x19, #48]
  410f08:	mov	w0, #0x0                   	// #0
  410f0c:	str	x20, [x19, #56]
  410f10:	b	410fa4 <_obstack_memory_used@@Base+0xdf8>
  410f14:	mov	x21, x20
  410f18:	ldr	x20, [x19, #56]
  410f1c:	cmp	x24, x21
  410f20:	b.gt	410dac <_obstack_memory_used@@Base+0xc00>
  410f24:	b	410f80 <_obstack_memory_used@@Base+0xdd4>
  410f28:	ldr	x1, [x19]
  410f2c:	ldr	x5, [x19, #40]
  410f30:	add	x1, x1, x20
  410f34:	add	x1, x1, x0
  410f38:	ldrb	w1, [x1, x5]
  410f3c:	ldrb	w1, [x3, x1]
  410f40:	strb	w1, [x23, x0]
  410f44:	add	x0, x0, #0x1
  410f48:	b	410dcc <_obstack_memory_used@@Base+0xc20>
  410f4c:	ldr	x23, [x19, #40]
  410f50:	add	x0, x20, x23
  410f54:	ldr	x23, [x19]
  410f58:	add	x23, x23, x0
  410f5c:	b	410ddc <_obstack_memory_used@@Base+0xc30>
  410f60:	cmn	x0, #0x1
  410f64:	b.eq	411084 <_obstack_memory_used@@Base+0xed8>  // b.none
  410f68:	add	x23, x0, x21
  410f6c:	ldr	x0, [x19, #64]
  410f70:	cmp	x23, x0
  410f74:	b.ls	410f88 <_obstack_memory_used@@Base+0xddc>  // b.plast
  410f78:	ldr	x0, [sp, #104]
  410f7c:	str	x0, [x19, #32]
  410f80:	str	x21, [x19, #48]
  410f84:	b	410f08 <_obstack_memory_used@@Base+0xd5c>
  410f88:	ldr	x1, [x19, #24]
  410f8c:	cbnz	x1, 410fc0 <_obstack_memory_used@@Base+0xe14>
  410f90:	lsl	x0, x0, #3
  410f94:	bl	402930 <malloc@plt>
  410f98:	str	x0, [x19, #24]
  410f9c:	cbnz	x0, 410fc0 <_obstack_memory_used@@Base+0xe14>
  410fa0:	mov	w0, #0xc                   	// #12
  410fa4:	ldp	x19, x20, [sp, #16]
  410fa8:	ldp	x21, x22, [sp, #32]
  410fac:	ldp	x23, x24, [sp, #48]
  410fb0:	ldp	x25, x26, [sp, #64]
  410fb4:	ldr	x27, [sp, #80]
  410fb8:	ldp	x29, x30, [sp], #176
  410fbc:	ret
  410fc0:	ldrb	w0, [x19, #140]
  410fc4:	cbz	w0, 411060 <_obstack_memory_used@@Base+0xeb4>
  410fc8:	ldr	x0, [x19, #8]
  410fcc:	mov	x2, x25
  410fd0:	add	x1, sp, #0x70
  410fd4:	add	x0, x0, x21
  410fd8:	bl	402750 <memcpy@plt>
  410fdc:	ldr	x0, [x19, #16]
  410fe0:	mov	w4, #0xffffffff            	// #-1
  410fe4:	add	x2, x0, x21, lsl #2
  410fe8:	str	w27, [x0, x21, lsl #2]
  410fec:	ldr	x0, [x19, #24]
  410ff0:	add	x3, x0, x21, lsl #3
  410ff4:	str	x20, [x0, x21, lsl #3]
  410ff8:	mov	x0, #0x1                   	// #1
  410ffc:	cmp	x0, x25
  411000:	b.cc	411068 <_obstack_memory_used@@Base+0xebc>  // b.lo, b.ul, b.last
  411004:	ldp	x24, x0, [x19, #88]
  411008:	sub	x25, x25, x22
  41100c:	add	x1, x25, x24
  411010:	str	x1, [x19, #88]
  411014:	cmp	x20, x0
  411018:	b.ge	411028 <_obstack_memory_used@@Base+0xe7c>  // b.tcont
  41101c:	ldr	x2, [x19, #104]
  411020:	add	x25, x2, x25
  411024:	str	x25, [x19, #104]
  411028:	ldr	x24, [x19, #64]
  41102c:	mov	x21, x23
  411030:	add	x20, x20, x22
  411034:	cmp	x24, x1
  411038:	csel	x24, x24, x1, le
  41103c:	b	410f1c <_obstack_memory_used@@Base+0xd70>
  411040:	ldr	x1, [x19, #24]
  411044:	str	x0, [x1, x0, lsl #3]
  411048:	add	x0, x0, #0x1
  41104c:	cmp	x0, x21
  411050:	b.ne	411040 <_obstack_memory_used@@Base+0xe94>  // b.any
  411054:	mov	w0, #0x1                   	// #1
  411058:	strb	w0, [x19, #140]
  41105c:	b	410fc8 <_obstack_memory_used@@Base+0xe1c>
  411060:	mov	x0, #0x0                   	// #0
  411064:	b	41104c <_obstack_memory_used@@Base+0xea0>
  411068:	cmp	x0, x22
  41106c:	csel	x1, x26, x0, cs  // cs = hs, nlast
  411070:	add	x1, x20, x1
  411074:	str	x1, [x3, x0, lsl #3]
  411078:	str	w4, [x2, x0, lsl #2]
  41107c:	add	x0, x0, #0x1
  411080:	b	410ffc <_obstack_memory_used@@Base+0xe50>
  411084:	mov	x2, x22
  411088:	mov	x1, x23
  41108c:	ldr	x0, [x19, #8]
  411090:	b	410e3c <_obstack_memory_used@@Base+0xc90>
  411094:	ldr	x1, [x19, #24]
  411098:	mov	x0, #0x0                   	// #0
  41109c:	add	x1, x1, x21, lsl #3
  4110a0:	add	x2, x20, x0
  4110a4:	str	x2, [x1, x0, lsl #3]
  4110a8:	add	x0, x0, #0x1
  4110ac:	cmp	x22, x0
  4110b0:	b.ne	4110a0 <_obstack_memory_used@@Base+0xef4>  // b.any
  4110b4:	b	410e4c <_obstack_memory_used@@Base+0xca0>
  4110b8:	str	w3, [x2, x1, lsl #2]
  4110bc:	add	x1, x1, #0x1
  4110c0:	b	410e68 <_obstack_memory_used@@Base+0xcbc>
  4110c4:	cmn	x26, #0x3
  4110c8:	b.ne	4110dc <_obstack_memory_used@@Base+0xf30>  // b.any
  4110cc:	ldr	x1, [x19, #64]
  4110d0:	ldr	x0, [x19, #88]
  4110d4:	cmp	x1, x0
  4110d8:	b.lt	410f78 <_obstack_memory_used@@Base+0xdcc>  // b.tstop
  4110dc:	ldr	x0, [x19]
  4110e0:	ldr	x1, [x19, #40]
  4110e4:	add	x0, x0, x20
  4110e8:	ldrb	w0, [x0, x1]
  4110ec:	ldr	x1, [x19, #120]
  4110f0:	cbz	x1, 4110fc <_obstack_memory_used@@Base+0xf50>
  4110f4:	and	x0, x0, #0xff
  4110f8:	ldrb	w0, [x1, x0]
  4110fc:	ldr	x1, [x19, #8]
  411100:	mov	x2, x21
  411104:	strb	w0, [x1, x21]
  411108:	ldrb	w1, [x19, #140]
  41110c:	cbz	w1, 411118 <_obstack_memory_used@@Base+0xf6c>
  411110:	ldr	x1, [x19, #24]
  411114:	str	x20, [x1, x21, lsl #3]
  411118:	ldr	x1, [x19, #16]
  41111c:	add	x20, x20, #0x1
  411120:	add	x21, x21, #0x1
  411124:	cmn	x22, #0x1
  411128:	str	w0, [x1, x2, lsl #2]
  41112c:	b.ne	410f1c <_obstack_memory_used@@Base+0xd70>  // b.any
  411130:	ldr	x0, [sp, #104]
  411134:	str	x0, [x19, #32]
  411138:	b	410f1c <_obstack_memory_used@@Base+0xd70>
  41113c:	stp	x29, x30, [sp, #-48]!
  411140:	mov	x29, sp
  411144:	stp	x19, x20, [sp, #16]
  411148:	mov	x19, x0
  41114c:	ldr	x0, [x0, #88]
  411150:	stp	x21, x22, [sp, #32]
  411154:	ldr	x20, [x19, #64]
  411158:	ldr	x22, [x19, #48]
  41115c:	cmp	x20, x0
  411160:	csel	x20, x20, x0, le
  411164:	mov	x21, x22
  411168:	cmp	x21, x20
  41116c:	b.lt	411190 <_obstack_memory_used@@Base+0xfe4>  // b.tstop
  411170:	subs	x0, x20, x22
  411174:	csel	x0, x0, xzr, ge  // ge = tcont
  411178:	add	x0, x0, x22
  41117c:	ldp	x21, x22, [sp, #32]
  411180:	stp	x0, x0, [x19, #48]
  411184:	ldp	x19, x20, [sp, #16]
  411188:	ldp	x29, x30, [sp], #48
  41118c:	ret
  411190:	ldr	x0, [x19]
  411194:	ldr	x1, [x19, #40]
  411198:	add	x0, x0, x21
  41119c:	ldrb	w0, [x0, x1]
  4111a0:	ldr	x1, [x19, #120]
  4111a4:	cbz	x1, 4111b0 <_obstack_memory_used@@Base+0x1004>
  4111a8:	and	x0, x0, #0xff
  4111ac:	ldrb	w0, [x1, x0]
  4111b0:	bl	402940 <toupper@plt>
  4111b4:	ldr	x1, [x19, #8]
  4111b8:	strb	w0, [x1, x21]
  4111bc:	add	x21, x21, #0x1
  4111c0:	b	411168 <_obstack_memory_used@@Base+0xfbc>
  4111c4:	stp	x29, x30, [sp, #-32]!
  4111c8:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
  4111cc:	mov	x29, sp
  4111d0:	ldr	x2, [x0, #64]
  4111d4:	stp	x19, x20, [sp, #16]
  4111d8:	cmp	x2, x3
  4111dc:	b.ls	4111f4 <_obstack_memory_used@@Base+0x1048>  // b.plast
  4111e0:	mov	w20, #0xc                   	// #12
  4111e4:	mov	w0, w20
  4111e8:	ldp	x19, x20, [sp, #16]
  4111ec:	ldp	x29, x30, [sp], #32
  4111f0:	ret
  4111f4:	ldr	x3, [x0, #88]
  4111f8:	lsl	x2, x2, #1
  4111fc:	mov	x19, x0
  411200:	cmp	x2, x3
  411204:	csel	x2, x2, x3, le
  411208:	sxtw	x3, w1
  41120c:	cmp	x2, w1, sxtw
  411210:	csel	x1, x2, x3, ge  // ge = tcont
  411214:	bl	410958 <_obstack_memory_used@@Base+0x7ac>
  411218:	mov	w20, w0
  41121c:	cbnz	w0, 4111e4 <_obstack_memory_used@@Base+0x1038>
  411220:	ldr	x0, [x19, #184]
  411224:	cbz	x0, 411240 <_obstack_memory_used@@Base+0x1094>
  411228:	ldr	x1, [x19, #64]
  41122c:	add	x1, x1, #0x1
  411230:	lsl	x1, x1, #3
  411234:	bl	402a80 <realloc@plt>
  411238:	cbz	x0, 4111e0 <_obstack_memory_used@@Base+0x1034>
  41123c:	str	x0, [x19, #184]
  411240:	ldrb	w1, [x19, #136]
  411244:	ldr	w0, [x19, #144]
  411248:	cmp	w0, #0x1
  41124c:	cbz	w1, 41126c <_obstack_memory_used@@Base+0x10c0>
  411250:	mov	x0, x19
  411254:	b.le	411264 <_obstack_memory_used@@Base+0x10b8>
  411258:	ldp	x19, x20, [sp, #16]
  41125c:	ldp	x29, x30, [sp], #32
  411260:	b	410c54 <_obstack_memory_used@@Base+0xaa8>
  411264:	bl	41113c <_obstack_memory_used@@Base+0xf90>
  411268:	b	4111e4 <_obstack_memory_used@@Base+0x1038>
  41126c:	b.le	41127c <_obstack_memory_used@@Base+0x10d0>
  411270:	mov	x0, x19
  411274:	bl	410ae4 <_obstack_memory_used@@Base+0x938>
  411278:	b	4111e4 <_obstack_memory_used@@Base+0x1038>
  41127c:	ldr	x0, [x19, #120]
  411280:	cbz	x0, 4111e4 <_obstack_memory_used@@Base+0x1038>
  411284:	mov	x0, x19
  411288:	bl	41027c <_obstack_memory_used@@Base+0xd0>
  41128c:	b	4111e4 <_obstack_memory_used@@Base+0x1038>
  411290:	stp	x29, x30, [sp, #-48]!
  411294:	mov	x29, sp
  411298:	stp	x19, x20, [sp, #16]
  41129c:	mov	x19, x0
  4112a0:	mov	x20, x1
  4112a4:	str	x21, [sp, #32]
  4112a8:	ldr	x21, [x0, #192]
  4112ac:	ldr	x0, [x0, #64]
  4112b0:	cmp	x0, x1
  4112b4:	b.gt	4112c4 <_obstack_memory_used@@Base+0x1118>
  4112b8:	ldr	x1, [x19, #88]
  4112bc:	cmp	x0, x1
  4112c0:	b.lt	4112ec <_obstack_memory_used@@Base+0x1140>  // b.tstop
  4112c4:	ldr	x0, [x19, #48]
  4112c8:	cmp	x0, x20
  4112cc:	b.le	4112e0 <_obstack_memory_used@@Base+0x1134>
  4112d0:	cmp	x21, x20
  4112d4:	b.lt	41130c <_obstack_memory_used@@Base+0x1160>  // b.tstop
  4112d8:	mov	w0, #0x0                   	// #0
  4112dc:	b	4112fc <_obstack_memory_used@@Base+0x1150>
  4112e0:	ldr	x1, [x19, #88]
  4112e4:	cmp	x0, x1
  4112e8:	b.ge	4112d0 <_obstack_memory_used@@Base+0x1124>  // b.tcont
  4112ec:	add	w1, w20, #0x1
  4112f0:	mov	x0, x19
  4112f4:	bl	4111c4 <_obstack_memory_used@@Base+0x1018>
  4112f8:	cbz	w0, 4112d0 <_obstack_memory_used@@Base+0x1124>
  4112fc:	ldp	x19, x20, [sp, #16]
  411300:	ldr	x21, [sp, #32]
  411304:	ldp	x29, x30, [sp], #48
  411308:	ret
  41130c:	ldr	x0, [x19, #184]
  411310:	sub	x2, x20, x21
  411314:	add	x21, x21, #0x1
  411318:	mov	w1, #0x0                   	// #0
  41131c:	lsl	x2, x2, #3
  411320:	add	x0, x0, x21, lsl #3
  411324:	bl	402a10 <memset@plt>
  411328:	str	x20, [x19, #192]
  41132c:	b	4112d8 <_obstack_memory_used@@Base+0x112c>
  411330:	stp	x29, x30, [sp, #-32]!
  411334:	mov	x29, sp
  411338:	str	x19, [sp, #16]
  41133c:	mov	x19, x0
  411340:	ldr	x0, [x0]
  411344:	bl	402c20 <free@plt>
  411348:	ldr	x0, [x19, #8]
  41134c:	bl	402c20 <free@plt>
  411350:	ldr	x0, [x19, #16]
  411354:	bl	402c20 <free@plt>
  411358:	ldr	x0, [x19, #24]
  41135c:	bl	402c20 <free@plt>
  411360:	mov	x0, x19
  411364:	ldr	x19, [sp, #16]
  411368:	ldp	x29, x30, [sp], #32
  41136c:	b	402c20 <free@plt>
  411370:	ldr	w1, [x0, #8]
  411374:	and	w1, w1, #0x7ffff
  411378:	and	w1, w1, #0xfffc00ff
  41137c:	cmp	w1, #0x6
  411380:	b.ne	41138c <_obstack_memory_used@@Base+0x11e0>  // b.any
  411384:	ldr	x0, [x0]
  411388:	b	411330 <_obstack_memory_used@@Base+0x1184>
  41138c:	cmp	w1, #0x3
  411390:	b.ne	41139c <_obstack_memory_used@@Base+0x11f0>  // b.any
  411394:	ldr	x0, [x0]
  411398:	b	402c20 <free@plt>
  41139c:	ret
  4113a0:	stp	x29, x30, [sp, #-16]!
  4113a4:	add	x0, x1, #0x28
  4113a8:	mov	x29, sp
  4113ac:	bl	411370 <_obstack_memory_used@@Base+0x11c4>
  4113b0:	mov	w0, #0x0                   	// #0
  4113b4:	ldp	x29, x30, [sp], #16
  4113b8:	ret
  4113bc:	stp	x29, x30, [sp, #-96]!
  4113c0:	mov	x29, sp
  4113c4:	stp	x19, x20, [sp, #16]
  4113c8:	mov	x19, x0
  4113cc:	ldp	x20, x0, [x0, #8]
  4113d0:	stp	x21, x22, [sp, #32]
  4113d4:	mov	x21, x2
  4113d8:	stp	x23, x24, [sp, #48]
  4113dc:	mov	x23, x1
  4113e0:	and	w24, w2, #0xff
  4113e4:	stp	x25, x26, [sp, #64]
  4113e8:	cmp	x0, x20
  4113ec:	str	x27, [sp, #80]
  4113f0:	b.cc	4114d0 <_obstack_memory_used@@Base+0x1324>  // b.lo, b.ul, b.last
  4113f4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4113f8:	lsl	x25, x20, #1
  4113fc:	movk	x0, #0xaaa, lsl #48
  411400:	cmp	x0, x20, lsl #1
  411404:	b.cs	411428 <_obstack_memory_used@@Base+0x127c>  // b.hs, b.nlast
  411408:	mov	x0, #0xffffffffffffffff    	// #-1
  41140c:	ldp	x19, x20, [sp, #16]
  411410:	ldp	x21, x22, [sp, #32]
  411414:	ldp	x23, x24, [sp, #48]
  411418:	ldp	x25, x26, [sp, #64]
  41141c:	ldr	x27, [sp, #80]
  411420:	ldp	x29, x30, [sp], #96
  411424:	ret
  411428:	ldr	x0, [x19]
  41142c:	lsl	x1, x20, #5
  411430:	bl	402a80 <realloc@plt>
  411434:	cbz	x0, 411408 <_obstack_memory_used@@Base+0x125c>
  411438:	str	x0, [x19]
  41143c:	lsl	x22, x20, #4
  411440:	ldr	x0, [x19, #24]
  411444:	mov	x1, x22
  411448:	bl	402a80 <realloc@plt>
  41144c:	mov	x27, x0
  411450:	ldr	x0, [x19, #32]
  411454:	mov	x1, x22
  411458:	bl	402a80 <realloc@plt>
  41145c:	mov	x26, x0
  411460:	mov	x1, #0x30                  	// #48
  411464:	ldr	x0, [x19, #40]
  411468:	mul	x20, x20, x1
  41146c:	mov	x1, x20
  411470:	bl	402a80 <realloc@plt>
  411474:	mov	x22, x0
  411478:	ldr	x0, [x19, #48]
  41147c:	mov	x1, x20
  411480:	bl	402a80 <realloc@plt>
  411484:	mov	x20, x0
  411488:	cmp	x27, #0x0
  41148c:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  411490:	b.eq	4114a0 <_obstack_memory_used@@Base+0x12f4>  // b.none
  411494:	cmp	x22, #0x0
  411498:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41149c:	b.ne	4114c4 <_obstack_memory_used@@Base+0x1318>  // b.any
  4114a0:	mov	x0, x27
  4114a4:	bl	402c20 <free@plt>
  4114a8:	mov	x0, x26
  4114ac:	bl	402c20 <free@plt>
  4114b0:	mov	x0, x22
  4114b4:	bl	402c20 <free@plt>
  4114b8:	mov	x0, x20
  4114bc:	bl	402c20 <free@plt>
  4114c0:	b	411408 <_obstack_memory_used@@Base+0x125c>
  4114c4:	str	x25, [x19, #8]
  4114c8:	stp	x27, x26, [x19, #24]
  4114cc:	stp	x22, x0, [x19, #40]
  4114d0:	cmp	w24, #0x5
  4114d4:	ldr	x1, [x19, #16]
  4114d8:	ldr	x2, [x19]
  4114dc:	lsl	x3, x1, #4
  4114e0:	add	x0, x2, x1, lsl #4
  4114e4:	str	x23, [x2, x3]
  4114e8:	str	x21, [x0, #8]
  4114ec:	and	w21, w21, #0xfffc00ff
  4114f0:	str	w21, [x0, #8]
  4114f4:	b.ne	411558 <_obstack_memory_used@@Base+0x13ac>  // b.any
  4114f8:	ldr	w2, [x19, #180]
  4114fc:	cmp	w2, #0x1
  411500:	cset	w3, gt
  411504:	ldrb	w2, [x0, #10]
  411508:	bfi	w2, w3, #4, #1
  41150c:	strb	w2, [x0, #10]
  411510:	mov	x2, #0xffffffffffffffff    	// #-1
  411514:	ldr	x0, [x19, #24]
  411518:	str	x2, [x0, x1, lsl #3]
  41151c:	mov	x2, #0x18                  	// #24
  411520:	ldr	x0, [x19, #40]
  411524:	ldr	x1, [x19, #16]
  411528:	madd	x1, x1, x2, x0
  41152c:	stp	xzr, xzr, [x1]
  411530:	str	xzr, [x1, #16]
  411534:	ldr	x0, [x19, #16]
  411538:	ldr	x1, [x19, #48]
  41153c:	madd	x0, x0, x2, x1
  411540:	stp	xzr, xzr, [x0]
  411544:	str	xzr, [x0, #16]
  411548:	ldr	x0, [x19, #16]
  41154c:	add	x1, x0, #0x1
  411550:	str	x1, [x19, #16]
  411554:	b	41140c <_obstack_memory_used@@Base+0x1260>
  411558:	cmp	w24, #0x6
  41155c:	cset	w3, eq  // eq = none
  411560:	b	411504 <_obstack_memory_used@@Base+0x1358>
  411564:	stp	x29, x30, [sp, #-48]!
  411568:	mov	x29, sp
  41156c:	stp	x19, x20, [sp, #16]
  411570:	mov	x20, x1
  411574:	mov	w19, w2
  411578:	stp	x21, x22, [sp, #32]
  41157c:	lsl	x22, x1, #4
  411580:	mov	x21, x0
  411584:	ldr	x1, [x0]
  411588:	add	x1, x1, x20, lsl #4
  41158c:	ldp	x1, x2, [x1]
  411590:	bl	4113bc <_obstack_memory_used@@Base+0x1210>
  411594:	cmn	x0, #0x1
  411598:	b.eq	4115e0 <_obstack_memory_used@@Base+0x1434>  // b.none
  41159c:	ldr	x2, [x21]
  4115a0:	and	w3, w19, #0x3ff
  4115a4:	add	x4, x2, x0, lsl #4
  4115a8:	add	x2, x2, x22
  4115ac:	ldr	w1, [x4, #8]
  4115b0:	bfi	w1, w3, #8, #10
  4115b4:	str	w1, [x4, #8]
  4115b8:	and	w1, w1, #0xfff800ff
  4115bc:	ldr	w2, [x2, #8]
  4115c0:	ubfx	x2, x2, #8, #10
  4115c4:	orr	w2, w2, w3
  4115c8:	lsl	w2, w2, #8
  4115cc:	orr	w2, w2, #0x40000
  4115d0:	orr	w2, w2, w1
  4115d4:	ldr	x1, [x21, #32]
  4115d8:	str	w2, [x4, #8]
  4115dc:	str	x20, [x1, x0, lsl #3]
  4115e0:	ldp	x19, x20, [sp, #16]
  4115e4:	ldp	x21, x22, [sp, #32]
  4115e8:	ldp	x29, x30, [sp], #48
  4115ec:	ret
  4115f0:	stp	x29, x30, [sp, #-32]!
  4115f4:	mov	x29, sp
  4115f8:	str	x19, [sp, #16]
  4115fc:	mov	x19, x0
  411600:	ldr	x0, [x0, #48]
  411604:	bl	402c20 <free@plt>
  411608:	ldr	x0, [x19, #72]
  41160c:	bl	402c20 <free@plt>
  411610:	ldr	x0, [x19, #80]
  411614:	add	x1, x19, #0x8
  411618:	cmp	x0, x1
  41161c:	b.eq	411630 <_obstack_memory_used@@Base+0x1484>  // b.none
  411620:	ldr	x0, [x0, #16]
  411624:	bl	402c20 <free@plt>
  411628:	ldr	x0, [x19, #80]
  41162c:	bl	402c20 <free@plt>
  411630:	ldr	x0, [x19, #24]
  411634:	bl	402c20 <free@plt>
  411638:	ldr	x0, [x19, #96]
  41163c:	bl	402c20 <free@plt>
  411640:	ldr	x0, [x19, #88]
  411644:	bl	402c20 <free@plt>
  411648:	mov	x0, x19
  41164c:	ldr	x19, [sp, #16]
  411650:	ldp	x29, x30, [sp], #32
  411654:	b	402c20 <free@plt>
  411658:	stp	x29, x30, [sp, #-32]!
  41165c:	mov	x29, sp
  411660:	str	x19, [sp, #16]
  411664:	mov	x19, x0
  411668:	ldr	x0, [x0, #16]
  41166c:	bl	402c20 <free@plt>
  411670:	ldr	x0, [x19, #24]
  411674:	bl	402c20 <free@plt>
  411678:	ldrb	w0, [x19, #139]
  41167c:	cbz	w0, 411690 <_obstack_memory_used@@Base+0x14e4>
  411680:	ldr	x0, [x19, #8]
  411684:	ldr	x19, [sp, #16]
  411688:	ldp	x29, x30, [sp], #32
  41168c:	b	402c20 <free@plt>
  411690:	ldr	x19, [sp, #16]
  411694:	ldp	x29, x30, [sp], #32
  411698:	ret
  41169c:	stp	x29, x30, [sp, #-64]!
  4116a0:	mov	x29, sp
  4116a4:	stp	x19, x20, [sp, #16]
  4116a8:	mov	x19, x0
  4116ac:	ldr	x0, [x0]
  4116b0:	stp	x21, x22, [sp, #32]
  4116b4:	str	x23, [sp, #48]
  4116b8:	cbnz	x0, 41175c <_obstack_memory_used@@Base+0x15b0>
  4116bc:	ldr	x0, [x19, #24]
  4116c0:	mov	x20, #0x0                   	// #0
  4116c4:	mov	x21, #0x18                  	// #24
  4116c8:	bl	402c20 <free@plt>
  4116cc:	ldr	x0, [x19, #16]
  4116d0:	cmp	x0, x20
  4116d4:	b.hi	411764 <_obstack_memory_used@@Base+0x15b8>  // b.pmore
  4116d8:	ldr	x0, [x19, #40]
  4116dc:	bl	402c20 <free@plt>
  4116e0:	ldr	x0, [x19, #48]
  4116e4:	bl	402c20 <free@plt>
  4116e8:	ldr	x0, [x19, #56]
  4116ec:	bl	402c20 <free@plt>
  4116f0:	ldr	x0, [x19]
  4116f4:	bl	402c20 <free@plt>
  4116f8:	ldr	x0, [x19, #64]
  4116fc:	cbnz	x0, 4117ec <_obstack_memory_used@@Base+0x1640>
  411700:	ldr	x0, [x19, #64]
  411704:	bl	402c20 <free@plt>
  411708:	ldr	x0, [x19, #120]
  41170c:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xce54>
  411710:	add	x1, x1, #0x90
  411714:	cmp	x0, x1
  411718:	b.ne	4117f8 <_obstack_memory_used@@Base+0x164c>  // b.any
  41171c:	ldr	x0, [x19, #224]
  411720:	bl	402c20 <free@plt>
  411724:	mov	x0, x19
  411728:	ldp	x19, x20, [sp, #16]
  41172c:	ldp	x21, x22, [sp, #32]
  411730:	ldr	x23, [sp, #48]
  411734:	ldp	x29, x30, [sp], #64
  411738:	b	402c20 <free@plt>
  41173c:	ldr	x0, [x19]
  411740:	add	x0, x0, x20, lsl #4
  411744:	add	x20, x20, #0x1
  411748:	bl	411370 <_obstack_memory_used@@Base+0x11c4>
  41174c:	ldr	x0, [x19, #16]
  411750:	cmp	x0, x20
  411754:	b.hi	41173c <_obstack_memory_used@@Base+0x1590>  // b.pmore
  411758:	b	4116bc <_obstack_memory_used@@Base+0x1510>
  41175c:	mov	x20, #0x0                   	// #0
  411760:	b	41174c <_obstack_memory_used@@Base+0x15a0>
  411764:	ldr	x0, [x19, #48]
  411768:	cbz	x0, 411778 <_obstack_memory_used@@Base+0x15cc>
  41176c:	madd	x0, x20, x21, x0
  411770:	ldr	x0, [x0, #16]
  411774:	bl	402c20 <free@plt>
  411778:	ldr	x0, [x19, #56]
  41177c:	cbz	x0, 41178c <_obstack_memory_used@@Base+0x15e0>
  411780:	madd	x0, x20, x21, x0
  411784:	ldr	x0, [x0, #16]
  411788:	bl	402c20 <free@plt>
  41178c:	ldr	x0, [x19, #40]
  411790:	cbz	x0, 4117a0 <_obstack_memory_used@@Base+0x15f4>
  411794:	madd	x0, x20, x21, x0
  411798:	ldr	x0, [x0, #16]
  41179c:	bl	402c20 <free@plt>
  4117a0:	add	x20, x20, #0x1
  4117a4:	b	4116cc <_obstack_memory_used@@Base+0x1520>
  4117a8:	madd	x21, x20, x23, x21
  4117ac:	mov	x22, #0x0                   	// #0
  4117b0:	ldr	x1, [x21]
  4117b4:	ldr	x0, [x21, #16]
  4117b8:	cmp	x1, x22
  4117bc:	b.gt	4117dc <_obstack_memory_used@@Base+0x1630>
  4117c0:	add	x20, x20, #0x1
  4117c4:	bl	402c20 <free@plt>
  4117c8:	ldr	x0, [x19, #136]
  4117cc:	ldr	x21, [x19, #64]
  4117d0:	cmp	x20, x0
  4117d4:	b.ls	4117a8 <_obstack_memory_used@@Base+0x15fc>  // b.plast
  4117d8:	b	411700 <_obstack_memory_used@@Base+0x1554>
  4117dc:	ldr	x0, [x0, x22, lsl #3]
  4117e0:	add	x22, x22, #0x1
  4117e4:	bl	4115f0 <_obstack_memory_used@@Base+0x1444>
  4117e8:	b	4117b0 <_obstack_memory_used@@Base+0x1604>
  4117ec:	mov	x20, #0x0                   	// #0
  4117f0:	mov	x23, #0x18                  	// #24
  4117f4:	b	4117c8 <_obstack_memory_used@@Base+0x161c>
  4117f8:	bl	402c20 <free@plt>
  4117fc:	b	41171c <_obstack_memory_used@@Base+0x1570>
  411800:	stp	x29, x30, [sp, #-64]!
  411804:	mov	x29, sp
  411808:	stp	x19, x20, [sp, #16]
  41180c:	mov	x19, x0
  411810:	stp	x21, x22, [sp, #32]
  411814:	mov	x21, #0x0                   	// #0
  411818:	str	x23, [sp, #48]
  41181c:	ldr	x0, [x19, #232]
  411820:	cmp	x0, x21
  411824:	b.gt	411844 <_obstack_memory_used@@Base+0x1698>
  411828:	ldp	x21, x22, [sp, #32]
  41182c:	ldr	x23, [sp, #48]
  411830:	str	xzr, [x19, #200]
  411834:	str	xzr, [x19, #232]
  411838:	ldp	x19, x20, [sp, #16]
  41183c:	ldp	x29, x30, [sp], #64
  411840:	ret
  411844:	ldr	x0, [x19, #248]
  411848:	mov	x22, #0x0                   	// #0
  41184c:	ldr	x20, [x0, x21, lsl #3]
  411850:	ldp	x1, x0, [x20, #32]
  411854:	cmp	x1, x22
  411858:	b.gt	411888 <_obstack_memory_used@@Base+0x16dc>
  41185c:	bl	402c20 <free@plt>
  411860:	ldr	x0, [x20, #16]
  411864:	cbz	x0, 411878 <_obstack_memory_used@@Base+0x16cc>
  411868:	ldr	x0, [x0, #16]
  41186c:	bl	402c20 <free@plt>
  411870:	ldr	x0, [x20, #16]
  411874:	bl	402c20 <free@plt>
  411878:	mov	x0, x20
  41187c:	add	x21, x21, #0x1
  411880:	bl	402c20 <free@plt>
  411884:	b	41181c <_obstack_memory_used@@Base+0x1670>
  411888:	ldr	x23, [x0, x22, lsl #3]
  41188c:	add	x22, x22, #0x1
  411890:	ldr	x0, [x23, #32]
  411894:	bl	402c20 <free@plt>
  411898:	mov	x0, x23
  41189c:	bl	402c20 <free@plt>
  4118a0:	b	411850 <_obstack_memory_used@@Base+0x16a4>
  4118a4:	mov	x2, x1
  4118a8:	ldr	x3, [x1, #56]
  4118ac:	ldrb	w1, [x1, #48]
  4118b0:	sub	w1, w1, #0x2
  4118b4:	cmp	w1, #0xe
  4118b8:	b.hi	4119cc <_obstack_memory_used@@Base+0x1820>  // b.pmore
  4118bc:	adrp	x4, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4118c0:	add	x4, x4, #0xfd0
  4118c4:	ldrb	w1, [x4, w1, uxtw]
  4118c8:	adr	x4, 4118d4 <_obstack_memory_used@@Base+0x1728>
  4118cc:	add	x1, x4, w1, sxtb #2
  4118d0:	br	x1
  4118d4:	stp	x29, x30, [sp, #-48]!
  4118d8:	mov	x29, sp
  4118dc:	ldrb	w1, [x0, #176]
  4118e0:	stp	x19, x20, [sp, #16]
  4118e4:	orr	w1, w1, #0x1
  4118e8:	stp	x21, x22, [sp, #32]
  4118ec:	strb	w1, [x0, #176]
  4118f0:	ldr	x1, [x2, #8]
  4118f4:	cbz	x1, 411940 <_obstack_memory_used@@Base+0x1794>
  4118f8:	ldr	x1, [x1, #24]
  4118fc:	ldr	x19, [x1, #56]
  411900:	ldr	x1, [x2, #16]
  411904:	cbz	x1, 411948 <_obstack_memory_used@@Base+0x179c>
  411908:	ldr	x1, [x1, #24]
  41190c:	mov	x22, #0x2                   	// #2
  411910:	ldr	x20, [x1, #56]
  411914:	mov	x1, #0x18                  	// #24
  411918:	ldr	x0, [x0, #40]
  41191c:	mul	x3, x3, x1
  411920:	add	x21, x0, x3
  411924:	str	x22, [x0, x3]
  411928:	mov	x0, #0x10                  	// #16
  41192c:	bl	402930 <malloc@plt>
  411930:	str	x0, [x21, #16]
  411934:	cbnz	x0, 411950 <_obstack_memory_used@@Base+0x17a4>
  411938:	mov	w0, #0xc                   	// #12
  41193c:	b	411968 <_obstack_memory_used@@Base+0x17bc>
  411940:	ldr	x1, [x2, #32]
  411944:	b	4118fc <_obstack_memory_used@@Base+0x1750>
  411948:	ldr	x1, [x2, #32]
  41194c:	b	41190c <_obstack_memory_used@@Base+0x1760>
  411950:	cmp	x19, x20
  411954:	b.ne	411978 <_obstack_memory_used@@Base+0x17cc>  // b.any
  411958:	mov	x1, #0x1                   	// #1
  41195c:	str	x1, [x21, #8]
  411960:	str	x19, [x0]
  411964:	mov	w0, #0x0                   	// #0
  411968:	ldp	x19, x20, [sp, #16]
  41196c:	ldp	x21, x22, [sp, #32]
  411970:	ldp	x29, x30, [sp], #48
  411974:	ret
  411978:	str	x22, [x21, #8]
  41197c:	b.ge	411988 <_obstack_memory_used@@Base+0x17dc>  // b.tcont
  411980:	stp	x19, x20, [x0]
  411984:	b	411964 <_obstack_memory_used@@Base+0x17b8>
  411988:	stp	x20, x19, [x0]
  41198c:	b	411964 <_obstack_memory_used@@Base+0x17b8>
  411990:	ldr	x1, [x2, #32]
  411994:	ldr	x0, [x0, #40]
  411998:	ldr	x1, [x1, #56]
  41199c:	mov	x2, #0x18                  	// #24
  4119a0:	madd	x0, x3, x2, x0
  4119a4:	b	410a54 <_obstack_memory_used@@Base+0x8a8>
  4119a8:	ldr	x1, [x2, #32]
  4119ac:	ldr	x4, [x0, #24]
  4119b0:	ldr	x1, [x1, #56]
  4119b4:	str	x1, [x4, x3, lsl #3]
  4119b8:	ldrb	w2, [x2, #48]
  4119bc:	cmp	w2, #0x4
  4119c0:	b.ne	4119dc <_obstack_memory_used@@Base+0x1830>  // b.any
  4119c4:	ldr	x0, [x0, #40]
  4119c8:	b	41199c <_obstack_memory_used@@Base+0x17f0>
  4119cc:	ldr	x1, [x2, #32]
  4119d0:	ldr	x0, [x0, #24]
  4119d4:	ldr	x1, [x1, #56]
  4119d8:	str	x1, [x0, x3, lsl #3]
  4119dc:	mov	w0, #0x0                   	// #0
  4119e0:	ret
  4119e4:	stp	x29, x30, [sp, #-96]!
  4119e8:	mov	x29, sp
  4119ec:	stp	x19, x20, [sp, #16]
  4119f0:	mov	x19, x0
  4119f4:	mov	x20, #0x0                   	// #0
  4119f8:	stp	x21, x22, [sp, #32]
  4119fc:	mov	x21, x1
  411a00:	stp	x23, x24, [sp, #48]
  411a04:	mov	x23, x2
  411a08:	stp	x25, x26, [sp, #64]
  411a0c:	ldr	x25, [x0, #152]
  411a10:	str	x27, [sp, #80]
  411a14:	ldr	x0, [x21, #8]
  411a18:	cmp	x0, x20
  411a1c:	b.gt	411a28 <_obstack_memory_used@@Base+0x187c>
  411a20:	mov	w0, #0x0                   	// #0
  411a24:	b	411a84 <_obstack_memory_used@@Base+0x18d8>
  411a28:	ldr	x0, [x21, #16]
  411a2c:	ldr	x24, [x0, x20, lsl #3]
  411a30:	ldr	x0, [x25]
  411a34:	lsl	x1, x24, #4
  411a38:	add	x2, x0, x24, lsl #4
  411a3c:	ldrb	w2, [x2, #8]
  411a40:	cmp	w2, #0x8
  411a44:	b.ne	411ad0 <_obstack_memory_used@@Base+0x1924>  // b.any
  411a48:	ldr	x1, [x0, x1]
  411a4c:	cmp	x1, #0x3f
  411a50:	b.gt	411ad0 <_obstack_memory_used@@Base+0x1924>
  411a54:	ldr	x0, [x25, #160]
  411a58:	lsr	x0, x0, x1
  411a5c:	tbz	w0, #0, 411ad0 <_obstack_memory_used@@Base+0x1924>
  411a60:	ldp	x2, x1, [x19, #232]
  411a64:	ldr	x0, [x19, #248]
  411a68:	cmp	x1, x2
  411a6c:	b.ne	411aa4 <_obstack_memory_used@@Base+0x18f8>  // b.any
  411a70:	lsl	x22, x1, #1
  411a74:	lsl	x1, x1, #4
  411a78:	bl	402a80 <realloc@plt>
  411a7c:	cbnz	x0, 411aa0 <_obstack_memory_used@@Base+0x18f4>
  411a80:	mov	w0, #0xc                   	// #12
  411a84:	ldp	x19, x20, [sp, #16]
  411a88:	ldp	x21, x22, [sp, #32]
  411a8c:	ldp	x23, x24, [sp, #48]
  411a90:	ldp	x25, x26, [sp, #64]
  411a94:	ldr	x27, [sp, #80]
  411a98:	ldp	x29, x30, [sp], #96
  411a9c:	ret
  411aa0:	stp	x22, x0, [x19, #240]
  411aa4:	mov	x1, #0x30                  	// #48
  411aa8:	ldr	x22, [x19, #232]
  411aac:	mov	x0, #0x1                   	// #1
  411ab0:	ldr	x27, [x19, #248]
  411ab4:	bl	402a60 <calloc@plt>
  411ab8:	lsl	x26, x22, #3
  411abc:	str	x0, [x27, x26]
  411ac0:	cbz	x0, 411a80 <_obstack_memory_used@@Base+0x18d4>
  411ac4:	add	x22, x22, #0x1
  411ac8:	stp	x23, x24, [x0]
  411acc:	str	x22, [x19, #232]
  411ad0:	add	x20, x20, #0x1
  411ad4:	b	411a14 <_obstack_memory_used@@Base+0x1868>
  411ad8:	stp	x29, x30, [sp, #-48]!
  411adc:	lsl	x2, x2, #4
  411ae0:	mov	x29, sp
  411ae4:	stp	x19, x20, [sp, #16]
  411ae8:	mov	x20, x0
  411aec:	mov	x0, x3
  411af0:	mov	x3, #0x30                  	// #48
  411af4:	ldr	x19, [x20]
  411af8:	sub	x19, x19, #0x1
  411afc:	str	x19, [x20]
  411b00:	str	x21, [sp, #32]
  411b04:	mov	x21, x4
  411b08:	ldr	x4, [x20, #16]
  411b0c:	mul	x19, x19, x3
  411b10:	add	x3, x4, x19
  411b14:	ldr	x4, [x4, x19]
  411b18:	str	x4, [x1]
  411b1c:	ldr	x1, [x3, #16]
  411b20:	bl	402750 <memcpy@plt>
  411b24:	ldr	x0, [x21, #16]
  411b28:	bl	402c20 <free@plt>
  411b2c:	ldr	x0, [x20, #16]
  411b30:	add	x0, x0, x19
  411b34:	ldr	x0, [x0, #16]
  411b38:	bl	402c20 <free@plt>
  411b3c:	ldr	x0, [x20, #16]
  411b40:	add	x19, x0, x19
  411b44:	ldp	x0, x1, [x19, #24]
  411b48:	stp	x0, x1, [x21]
  411b4c:	ldr	x0, [x19, #40]
  411b50:	str	x0, [x21, #16]
  411b54:	ldr	x0, [x19, #8]
  411b58:	ldp	x19, x20, [sp, #16]
  411b5c:	ldr	x21, [sp, #32]
  411b60:	ldp	x29, x30, [sp], #48
  411b64:	ret
  411b68:	stp	x29, x30, [sp, #-64]!
  411b6c:	mov	x29, sp
  411b70:	stp	x19, x20, [sp, #16]
  411b74:	mov	x20, x0
  411b78:	mov	x19, x1
  411b7c:	stp	x21, x22, [sp, #32]
  411b80:	mov	x22, x2
  411b84:	mov	x21, x4
  411b88:	stp	x23, x24, [sp, #48]
  411b8c:	mov	x24, x3
  411b90:	tbz	w5, #22, 411bc4 <_obstack_memory_used@@Base+0x1a18>
  411b94:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411b98:	mov	x0, x4
  411b9c:	add	x1, x1, #0x5ae
  411ba0:	bl	402bf0 <strcmp@plt>
  411ba4:	cbz	w0, 411bbc <_obstack_memory_used@@Base+0x1a10>
  411ba8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411bac:	mov	x0, x21
  411bb0:	add	x1, x1, #0x5b4
  411bb4:	bl	402bf0 <strcmp@plt>
  411bb8:	cbnz	w0, 411bc4 <_obstack_memory_used@@Base+0x1a18>
  411bbc:	adrp	x21, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411bc0:	add	x21, x21, #0x5a8
  411bc4:	ldr	x23, [x24]
  411bc8:	ldr	x0, [x22, #72]
  411bcc:	cmp	x23, x0
  411bd0:	b.ne	411bf4 <_obstack_memory_used@@Base+0x1a48>  // b.any
  411bd4:	ldr	x0, [x22, #24]
  411bd8:	lsl	x23, x23, #1
  411bdc:	add	x23, x23, #0x1
  411be0:	lsl	x1, x23, #3
  411be4:	bl	402a80 <realloc@plt>
  411be8:	cbz	x0, 412198 <_obstack_memory_used@@Base+0x1fec>
  411bec:	str	x0, [x22, #24]
  411bf0:	str	x23, [x24]
  411bf4:	ldr	x0, [x22, #72]
  411bf8:	ldr	x23, [x22, #24]
  411bfc:	add	x1, x0, #0x1
  411c00:	str	x1, [x22, #72]
  411c04:	lsl	x22, x0, #3
  411c08:	mov	x0, x21
  411c0c:	bl	402800 <wctype@plt>
  411c10:	str	x0, [x23, x22]
  411c14:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411c18:	mov	x0, x21
  411c1c:	add	x1, x1, #0x6e4
  411c20:	bl	402bf0 <strcmp@plt>
  411c24:	cbnz	w0, 411c9c <_obstack_memory_used@@Base+0x1af0>
  411c28:	bl	402c00 <__ctype_b_loc@plt>
  411c2c:	mov	x5, x0
  411c30:	mov	x4, #0x0                   	// #0
  411c34:	cbz	x20, 411c74 <_obstack_memory_used@@Base+0x1ac8>
  411c38:	ldr	x0, [x5]
  411c3c:	ldrh	w0, [x0, x4, lsl #1]
  411c40:	tbz	w0, #3, 411c50 <_obstack_memory_used@@Base+0x1aa4>
  411c44:	ldrb	w1, [x20, x4]
  411c48:	mov	x0, x19
  411c4c:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411c50:	add	x4, x4, #0x1
  411c54:	cmp	x4, #0x100
  411c58:	b.ne	411c38 <_obstack_memory_used@@Base+0x1a8c>  // b.any
  411c5c:	mov	w0, #0x0                   	// #0
  411c60:	ldp	x19, x20, [sp, #16]
  411c64:	ldp	x21, x22, [sp, #32]
  411c68:	ldp	x23, x24, [sp, #48]
  411c6c:	ldp	x29, x30, [sp], #64
  411c70:	ret
  411c74:	ldr	x0, [x5]
  411c78:	ldrh	w0, [x0, x4, lsl #1]
  411c7c:	tbz	w0, #3, 411c8c <_obstack_memory_used@@Base+0x1ae0>
  411c80:	mov	x1, x4
  411c84:	mov	x0, x19
  411c88:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411c8c:	add	x4, x4, #0x1
  411c90:	cmp	x4, #0x100
  411c94:	b.ne	411c74 <_obstack_memory_used@@Base+0x1ac8>  // b.any
  411c98:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411c9c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411ca0:	mov	x0, x21
  411ca4:	add	x1, x1, #0x6f6
  411ca8:	bl	402bf0 <strcmp@plt>
  411cac:	cbnz	w0, 411d10 <_obstack_memory_used@@Base+0x1b64>
  411cb0:	bl	402c00 <__ctype_b_loc@plt>
  411cb4:	mov	x5, x0
  411cb8:	mov	x4, #0x0                   	// #0
  411cbc:	cbz	x20, 411ce8 <_obstack_memory_used@@Base+0x1b3c>
  411cc0:	ldr	x0, [x5]
  411cc4:	ldrh	w0, [x0, x4, lsl #1]
  411cc8:	tbz	w0, #1, 411cd8 <_obstack_memory_used@@Base+0x1b2c>
  411ccc:	ldrb	w1, [x20, x4]
  411cd0:	mov	x0, x19
  411cd4:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411cd8:	add	x4, x4, #0x1
  411cdc:	cmp	x4, #0x100
  411ce0:	b.ne	411cc0 <_obstack_memory_used@@Base+0x1b14>  // b.any
  411ce4:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411ce8:	ldr	x0, [x5]
  411cec:	ldrh	w0, [x0, x4, lsl #1]
  411cf0:	tbz	w0, #1, 411d00 <_obstack_memory_used@@Base+0x1b54>
  411cf4:	mov	x1, x4
  411cf8:	mov	x0, x19
  411cfc:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411d00:	add	x4, x4, #0x1
  411d04:	cmp	x4, #0x100
  411d08:	b.ne	411ce8 <_obstack_memory_used@@Base+0x1b3c>  // b.any
  411d0c:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411d10:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411d14:	mov	x0, x21
  411d18:	add	x1, x1, #0x5b4
  411d1c:	bl	402bf0 <strcmp@plt>
  411d20:	cbnz	w0, 411d84 <_obstack_memory_used@@Base+0x1bd8>
  411d24:	bl	402c00 <__ctype_b_loc@plt>
  411d28:	mov	x5, x0
  411d2c:	mov	x4, #0x0                   	// #0
  411d30:	cbz	x20, 411d5c <_obstack_memory_used@@Base+0x1bb0>
  411d34:	ldr	x0, [x5]
  411d38:	ldrh	w0, [x0, x4, lsl #1]
  411d3c:	tbz	w0, #9, 411d4c <_obstack_memory_used@@Base+0x1ba0>
  411d40:	ldrb	w1, [x20, x4]
  411d44:	mov	x0, x19
  411d48:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411d4c:	add	x4, x4, #0x1
  411d50:	cmp	x4, #0x100
  411d54:	b.ne	411d34 <_obstack_memory_used@@Base+0x1b88>  // b.any
  411d58:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411d5c:	ldr	x0, [x5]
  411d60:	ldrh	w0, [x0, x4, lsl #1]
  411d64:	tbz	w0, #9, 411d74 <_obstack_memory_used@@Base+0x1bc8>
  411d68:	mov	x1, x4
  411d6c:	mov	x0, x19
  411d70:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411d74:	add	x4, x4, #0x1
  411d78:	cmp	x4, #0x100
  411d7c:	b.ne	411d5c <_obstack_memory_used@@Base+0x1bb0>  // b.any
  411d80:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411d84:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411d88:	mov	x0, x21
  411d8c:	add	x1, x1, #0x6d8
  411d90:	bl	402bf0 <strcmp@plt>
  411d94:	cbnz	w0, 411df8 <_obstack_memory_used@@Base+0x1c4c>
  411d98:	bl	402c00 <__ctype_b_loc@plt>
  411d9c:	mov	x5, x0
  411da0:	mov	x4, #0x0                   	// #0
  411da4:	cbz	x20, 411dd0 <_obstack_memory_used@@Base+0x1c24>
  411da8:	ldr	x0, [x5]
  411dac:	ldrh	w0, [x0, x4, lsl #1]
  411db0:	tbz	w0, #13, 411dc0 <_obstack_memory_used@@Base+0x1c14>
  411db4:	ldrb	w1, [x20, x4]
  411db8:	mov	x0, x19
  411dbc:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411dc0:	add	x4, x4, #0x1
  411dc4:	cmp	x4, #0x100
  411dc8:	b.ne	411da8 <_obstack_memory_used@@Base+0x1bfc>  // b.any
  411dcc:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411dd0:	ldr	x0, [x5]
  411dd4:	ldrh	w0, [x0, x4, lsl #1]
  411dd8:	tbz	w0, #13, 411de8 <_obstack_memory_used@@Base+0x1c3c>
  411ddc:	mov	x1, x4
  411de0:	mov	x0, x19
  411de4:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411de8:	add	x4, x4, #0x1
  411dec:	cmp	x4, #0x100
  411df0:	b.ne	411dd0 <_obstack_memory_used@@Base+0x1c24>  // b.any
  411df4:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411df8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411dfc:	mov	x0, x21
  411e00:	add	x1, x1, #0x5a8
  411e04:	bl	402bf0 <strcmp@plt>
  411e08:	cbnz	w0, 411e6c <_obstack_memory_used@@Base+0x1cc0>
  411e0c:	bl	402c00 <__ctype_b_loc@plt>
  411e10:	mov	x5, x0
  411e14:	mov	x4, #0x0                   	// #0
  411e18:	cbz	x20, 411e44 <_obstack_memory_used@@Base+0x1c98>
  411e1c:	ldr	x0, [x5]
  411e20:	ldrh	w0, [x0, x4, lsl #1]
  411e24:	tbz	w0, #10, 411e34 <_obstack_memory_used@@Base+0x1c88>
  411e28:	ldrb	w1, [x20, x4]
  411e2c:	mov	x0, x19
  411e30:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411e34:	add	x4, x4, #0x1
  411e38:	cmp	x4, #0x100
  411e3c:	b.ne	411e1c <_obstack_memory_used@@Base+0x1c70>  // b.any
  411e40:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411e44:	ldr	x0, [x5]
  411e48:	ldrh	w0, [x0, x4, lsl #1]
  411e4c:	tbz	w0, #10, 411e5c <_obstack_memory_used@@Base+0x1cb0>
  411e50:	mov	x1, x4
  411e54:	mov	x0, x19
  411e58:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411e5c:	add	x4, x4, #0x1
  411e60:	cmp	x4, #0x100
  411e64:	b.ne	411e44 <_obstack_memory_used@@Base+0x1c98>  // b.any
  411e68:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411e6c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411e70:	mov	x0, x21
  411e74:	add	x1, x1, #0x6d2
  411e78:	bl	402bf0 <strcmp@plt>
  411e7c:	cbnz	w0, 411ee0 <_obstack_memory_used@@Base+0x1d34>
  411e80:	bl	402c00 <__ctype_b_loc@plt>
  411e84:	mov	x5, x0
  411e88:	mov	x4, #0x0                   	// #0
  411e8c:	cbz	x20, 411eb8 <_obstack_memory_used@@Base+0x1d0c>
  411e90:	ldr	x0, [x5]
  411e94:	ldrh	w0, [x0, x4, lsl #1]
  411e98:	tbz	w0, #11, 411ea8 <_obstack_memory_used@@Base+0x1cfc>
  411e9c:	ldrb	w1, [x20, x4]
  411ea0:	mov	x0, x19
  411ea4:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411ea8:	add	x4, x4, #0x1
  411eac:	cmp	x4, #0x100
  411eb0:	b.ne	411e90 <_obstack_memory_used@@Base+0x1ce4>  // b.any
  411eb4:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411eb8:	ldr	x0, [x5]
  411ebc:	ldrh	w0, [x0, x4, lsl #1]
  411ec0:	tbz	w0, #11, 411ed0 <_obstack_memory_used@@Base+0x1d24>
  411ec4:	mov	x1, x4
  411ec8:	mov	x0, x19
  411ecc:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411ed0:	add	x4, x4, #0x1
  411ed4:	cmp	x4, #0x100
  411ed8:	b.ne	411eb8 <_obstack_memory_used@@Base+0x1d0c>  // b.any
  411edc:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411ee0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411ee4:	mov	x0, x21
  411ee8:	add	x1, x1, #0x6ea
  411eec:	bl	402bf0 <strcmp@plt>
  411ef0:	cbnz	w0, 411f54 <_obstack_memory_used@@Base+0x1da8>
  411ef4:	bl	402c00 <__ctype_b_loc@plt>
  411ef8:	mov	x5, x0
  411efc:	mov	x4, #0x0                   	// #0
  411f00:	cbz	x20, 411f2c <_obstack_memory_used@@Base+0x1d80>
  411f04:	ldr	x0, [x5]
  411f08:	ldrh	w0, [x0, x4, lsl #1]
  411f0c:	tbz	w0, #14, 411f1c <_obstack_memory_used@@Base+0x1d70>
  411f10:	ldrb	w1, [x20, x4]
  411f14:	mov	x0, x19
  411f18:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411f1c:	add	x4, x4, #0x1
  411f20:	cmp	x4, #0x100
  411f24:	b.ne	411f04 <_obstack_memory_used@@Base+0x1d58>  // b.any
  411f28:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411f2c:	ldr	x0, [x5]
  411f30:	ldrh	w0, [x0, x4, lsl #1]
  411f34:	tbz	w0, #14, 411f44 <_obstack_memory_used@@Base+0x1d98>
  411f38:	mov	x1, x4
  411f3c:	mov	x0, x19
  411f40:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411f44:	add	x4, x4, #0x1
  411f48:	cmp	x4, #0x100
  411f4c:	b.ne	411f2c <_obstack_memory_used@@Base+0x1d80>  // b.any
  411f50:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411f54:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411f58:	mov	x0, x21
  411f5c:	add	x1, x1, #0x5ae
  411f60:	bl	402bf0 <strcmp@plt>
  411f64:	cbnz	w0, 411fc8 <_obstack_memory_used@@Base+0x1e1c>
  411f68:	bl	402c00 <__ctype_b_loc@plt>
  411f6c:	mov	x5, x0
  411f70:	mov	x4, #0x0                   	// #0
  411f74:	cbz	x20, 411fa0 <_obstack_memory_used@@Base+0x1df4>
  411f78:	ldr	x0, [x5]
  411f7c:	ldrh	w0, [x0, x4, lsl #1]
  411f80:	tbz	w0, #8, 411f90 <_obstack_memory_used@@Base+0x1de4>
  411f84:	ldrb	w1, [x20, x4]
  411f88:	mov	x0, x19
  411f8c:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411f90:	add	x4, x4, #0x1
  411f94:	cmp	x4, #0x100
  411f98:	b.ne	411f78 <_obstack_memory_used@@Base+0x1dcc>  // b.any
  411f9c:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411fa0:	ldr	x0, [x5]
  411fa4:	ldrh	w0, [x0, x4, lsl #1]
  411fa8:	tbz	w0, #8, 411fb8 <_obstack_memory_used@@Base+0x1e0c>
  411fac:	mov	x1, x4
  411fb0:	mov	x0, x19
  411fb4:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  411fb8:	add	x4, x4, #0x1
  411fbc:	cmp	x4, #0x100
  411fc0:	b.ne	411fa0 <_obstack_memory_used@@Base+0x1df4>  // b.any
  411fc4:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  411fc8:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  411fcc:	mov	x0, x21
  411fd0:	add	x1, x1, #0x6fc
  411fd4:	bl	402bf0 <strcmp@plt>
  411fd8:	cbnz	w0, 41203c <_obstack_memory_used@@Base+0x1e90>
  411fdc:	bl	402c00 <__ctype_b_loc@plt>
  411fe0:	mov	x5, x0
  411fe4:	mov	x4, #0x0                   	// #0
  411fe8:	cbz	x20, 412014 <_obstack_memory_used@@Base+0x1e68>
  411fec:	ldr	x0, [x5]
  411ff0:	ldrh	w0, [x0, x4, lsl #1]
  411ff4:	tbz	w0, #0, 412004 <_obstack_memory_used@@Base+0x1e58>
  411ff8:	ldrb	w1, [x20, x4]
  411ffc:	mov	x0, x19
  412000:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  412004:	add	x4, x4, #0x1
  412008:	cmp	x4, #0x100
  41200c:	b.ne	411fec <_obstack_memory_used@@Base+0x1e40>  // b.any
  412010:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  412014:	ldr	x0, [x5]
  412018:	ldrh	w0, [x0, x4, lsl #1]
  41201c:	tbz	w0, #0, 41202c <_obstack_memory_used@@Base+0x1e80>
  412020:	mov	x1, x4
  412024:	mov	x0, x19
  412028:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  41202c:	add	x4, x4, #0x1
  412030:	cmp	x4, #0x100
  412034:	b.ne	412014 <_obstack_memory_used@@Base+0x1e68>  // b.any
  412038:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  41203c:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  412040:	mov	x0, x21
  412044:	add	x1, x1, #0x6f0
  412048:	bl	402bf0 <strcmp@plt>
  41204c:	cbnz	w0, 4120b0 <_obstack_memory_used@@Base+0x1f04>
  412050:	bl	402c00 <__ctype_b_loc@plt>
  412054:	mov	x5, x0
  412058:	mov	x4, #0x0                   	// #0
  41205c:	cbz	x20, 412088 <_obstack_memory_used@@Base+0x1edc>
  412060:	ldr	x0, [x5]
  412064:	ldrsh	w0, [x0, x4, lsl #1]
  412068:	tbz	w0, #31, 412078 <_obstack_memory_used@@Base+0x1ecc>
  41206c:	ldrb	w1, [x20, x4]
  412070:	mov	x0, x19
  412074:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  412078:	add	x4, x4, #0x1
  41207c:	cmp	x4, #0x100
  412080:	b.ne	412060 <_obstack_memory_used@@Base+0x1eb4>  // b.any
  412084:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  412088:	ldr	x0, [x5]
  41208c:	ldrsh	w0, [x0, x4, lsl #1]
  412090:	tbz	w0, #31, 4120a0 <_obstack_memory_used@@Base+0x1ef4>
  412094:	mov	x1, x4
  412098:	mov	x0, x19
  41209c:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  4120a0:	add	x4, x4, #0x1
  4120a4:	cmp	x4, #0x100
  4120a8:	b.ne	412088 <_obstack_memory_used@@Base+0x1edc>  // b.any
  4120ac:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  4120b0:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4120b4:	mov	x0, x21
  4120b8:	add	x1, x1, #0x6de
  4120bc:	bl	402bf0 <strcmp@plt>
  4120c0:	cbnz	w0, 412124 <_obstack_memory_used@@Base+0x1f78>
  4120c4:	bl	402c00 <__ctype_b_loc@plt>
  4120c8:	mov	x5, x0
  4120cc:	mov	x4, #0x0                   	// #0
  4120d0:	cbz	x20, 4120fc <_obstack_memory_used@@Base+0x1f50>
  4120d4:	ldr	x0, [x5]
  4120d8:	ldrh	w0, [x0, x4, lsl #1]
  4120dc:	tbz	w0, #2, 4120ec <_obstack_memory_used@@Base+0x1f40>
  4120e0:	ldrb	w1, [x20, x4]
  4120e4:	mov	x0, x19
  4120e8:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  4120ec:	add	x4, x4, #0x1
  4120f0:	cmp	x4, #0x100
  4120f4:	b.ne	4120d4 <_obstack_memory_used@@Base+0x1f28>  // b.any
  4120f8:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  4120fc:	ldr	x0, [x5]
  412100:	ldrh	w0, [x0, x4, lsl #1]
  412104:	tbz	w0, #2, 412114 <_obstack_memory_used@@Base+0x1f68>
  412108:	mov	x1, x4
  41210c:	mov	x0, x19
  412110:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  412114:	add	x4, x4, #0x1
  412118:	cmp	x4, #0x100
  41211c:	b.ne	4120fc <_obstack_memory_used@@Base+0x1f50>  // b.any
  412120:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  412124:	adrp	x1, 41c000 <_obstack_memory_used@@Base+0xbe54>
  412128:	mov	x0, x21
  41212c:	add	x1, x1, #0x6d1
  412130:	bl	402bf0 <strcmp@plt>
  412134:	cbnz	w0, 4121a0 <_obstack_memory_used@@Base+0x1ff4>
  412138:	bl	402c00 <__ctype_b_loc@plt>
  41213c:	mov	x5, x0
  412140:	mov	x4, #0x0                   	// #0
  412144:	cbz	x20, 412170 <_obstack_memory_used@@Base+0x1fc4>
  412148:	ldr	x0, [x5]
  41214c:	ldrh	w0, [x0, x4, lsl #1]
  412150:	tbz	w0, #12, 412160 <_obstack_memory_used@@Base+0x1fb4>
  412154:	ldrb	w1, [x20, x4]
  412158:	mov	x0, x19
  41215c:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  412160:	add	x4, x4, #0x1
  412164:	cmp	x4, #0x100
  412168:	b.ne	412148 <_obstack_memory_used@@Base+0x1f9c>  // b.any
  41216c:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  412170:	ldr	x0, [x5]
  412174:	ldrh	w0, [x0, x4, lsl #1]
  412178:	tbz	w0, #12, 412188 <_obstack_memory_used@@Base+0x1fdc>
  41217c:	mov	x1, x4
  412180:	mov	x0, x19
  412184:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  412188:	add	x4, x4, #0x1
  41218c:	cmp	x4, #0x100
  412190:	b.ne	412170 <_obstack_memory_used@@Base+0x1fc4>  // b.any
  412194:	b	411c5c <_obstack_memory_used@@Base+0x1ab0>
  412198:	mov	w0, #0xc                   	// #12
  41219c:	b	411c60 <_obstack_memory_used@@Base+0x1ab4>
  4121a0:	mov	w0, #0x4                   	// #4
  4121a4:	b	411c60 <_obstack_memory_used@@Base+0x1ab4>
  4121a8:	mov	x3, x0
  4121ac:	ldr	w0, [x0, #144]
  4121b0:	cmp	w0, #0x1
  4121b4:	b.eq	4121e0 <_obstack_memory_used@@Base+0x2034>  // b.none
  4121b8:	ldr	x4, [x3, #48]
  4121bc:	add	x2, x1, #0x1
  4121c0:	sub	w0, w2, w1
  4121c4:	cmp	x4, x2
  4121c8:	b.le	4121e0 <_obstack_memory_used@@Base+0x2034>
  4121cc:	ldr	x5, [x3, #16]
  4121d0:	ldr	w5, [x5, x2, lsl #2]
  4121d4:	add	x2, x2, #0x1
  4121d8:	cmn	w5, #0x1
  4121dc:	b.eq	4121c0 <_obstack_memory_used@@Base+0x2014>  // b.none
  4121e0:	ret
  4121e4:	mov	x7, x0
  4121e8:	stp	x29, x30, [sp, #-48]!
  4121ec:	mov	x0, x1
  4121f0:	mov	x29, sp
  4121f4:	ldr	x9, [x7]
  4121f8:	lsl	x10, x0, #4
  4121fc:	stp	x19, x20, [sp, #16]
  412200:	mov	x6, x2
  412204:	mov	x1, x3
  412208:	add	x0, x9, x0, lsl #4
  41220c:	stp	x21, x22, [sp, #32]
  412210:	ldrb	w8, [x0, #8]
  412214:	cmp	w8, #0x7
  412218:	b.ne	412328 <_obstack_memory_used@@Base+0x217c>  // b.any
  41221c:	ldr	x0, [x2, #8]
  412220:	add	x4, x0, x3
  412224:	ldrb	w0, [x0, x3]
  412228:	cmp	w0, #0xc1
  41222c:	b.ls	41236c <_obstack_memory_used@@Base+0x21c0>  // b.plast
  412230:	ldr	x5, [x6, #88]
  412234:	add	x2, x3, #0x1
  412238:	cmp	x2, x5
  41223c:	b.ge	41236c <_obstack_memory_used@@Base+0x21c0>  // b.tcont
  412240:	ldrb	w2, [x4, #1]
  412244:	cmp	w0, #0xdf
  412248:	b.hi	412274 <_obstack_memory_used@@Base+0x20c8>  // b.pmore
  41224c:	sub	w2, w2, #0x80
  412250:	and	w2, w2, #0xff
  412254:	cmp	w2, #0x3f
  412258:	b.hi	41236c <_obstack_memory_used@@Base+0x21c0>  // b.pmore
  41225c:	mov	w19, #0x2                   	// #2
  412260:	mov	w0, w19
  412264:	ldp	x19, x20, [sp, #16]
  412268:	ldp	x21, x22, [sp, #32]
  41226c:	ldp	x29, x30, [sp], #48
  412270:	ret
  412274:	cmp	w0, #0xef
  412278:	b.hi	4122c8 <_obstack_memory_used@@Base+0x211c>  // b.pmore
  41227c:	cmp	w0, #0xe0
  412280:	mov	w0, #0x9f                  	// #159
  412284:	ccmp	w2, w0, #0x2, eq  // eq = none
  412288:	b.ls	41236c <_obstack_memory_used@@Base+0x21c0>  // b.plast
  41228c:	mov	w19, #0x3                   	// #3
  412290:	add	x1, x1, w19, sxtw
  412294:	sxtw	x2, w19
  412298:	cmp	x5, x1
  41229c:	b.lt	41236c <_obstack_memory_used@@Base+0x21c0>  // b.tstop
  4122a0:	mov	x1, #0x1                   	// #1
  4122a4:	ldrb	w0, [x4, x1]
  4122a8:	sub	w0, w0, #0x80
  4122ac:	and	w0, w0, #0xff
  4122b0:	cmp	w0, #0x3f
  4122b4:	b.hi	41236c <_obstack_memory_used@@Base+0x21c0>  // b.pmore
  4122b8:	add	x1, x1, #0x1
  4122bc:	cmp	x2, x1
  4122c0:	b.gt	4122a4 <_obstack_memory_used@@Base+0x20f8>
  4122c4:	b	412260 <_obstack_memory_used@@Base+0x20b4>
  4122c8:	cmp	w0, #0xf7
  4122cc:	b.hi	4122e8 <_obstack_memory_used@@Base+0x213c>  // b.pmore
  4122d0:	cmp	w0, #0xf0
  4122d4:	mov	w0, #0x8f                  	// #143
  4122d8:	ccmp	w2, w0, #0x2, eq  // eq = none
  4122dc:	b.ls	41236c <_obstack_memory_used@@Base+0x21c0>  // b.plast
  4122e0:	mov	w19, #0x4                   	// #4
  4122e4:	b	412290 <_obstack_memory_used@@Base+0x20e4>
  4122e8:	cmp	w0, #0xfb
  4122ec:	b.hi	412308 <_obstack_memory_used@@Base+0x215c>  // b.pmore
  4122f0:	cmp	w0, #0xf8
  4122f4:	mov	w0, #0x87                  	// #135
  4122f8:	ccmp	w2, w0, #0x2, eq  // eq = none
  4122fc:	b.ls	41236c <_obstack_memory_used@@Base+0x21c0>  // b.plast
  412300:	mov	w19, #0x5                   	// #5
  412304:	b	412290 <_obstack_memory_used@@Base+0x20e4>
  412308:	cmp	w0, #0xfd
  41230c:	b.hi	41236c <_obstack_memory_used@@Base+0x21c0>  // b.pmore
  412310:	cmp	w0, #0xfc
  412314:	mov	w0, #0x83                  	// #131
  412318:	ccmp	w2, w0, #0x2, eq  // eq = none
  41231c:	b.ls	41236c <_obstack_memory_used@@Base+0x21c0>  // b.plast
  412320:	mov	w19, #0x6                   	// #6
  412324:	b	412290 <_obstack_memory_used@@Base+0x20e4>
  412328:	mov	x0, x2
  41232c:	bl	4121a8 <_obstack_memory_used@@Base+0x1ffc>
  412330:	mov	w19, w0
  412334:	cmp	w8, #0x5
  412338:	b.ne	412374 <_obstack_memory_used@@Base+0x21c8>  // b.any
  41233c:	cmp	w0, #0x1
  412340:	b.le	41236c <_obstack_memory_used@@Base+0x21c0>
  412344:	ldr	x0, [x7, #216]
  412348:	tbnz	w0, #6, 41235c <_obstack_memory_used@@Base+0x21b0>
  41234c:	ldr	x2, [x6, #8]
  412350:	ldrb	w2, [x2, x1]
  412354:	cmp	w2, #0xa
  412358:	b.eq	41236c <_obstack_memory_used@@Base+0x21c0>  // b.none
  41235c:	tbz	w0, #7, 412260 <_obstack_memory_used@@Base+0x20b4>
  412360:	ldr	x0, [x6, #8]
  412364:	ldrb	w0, [x0, x1]
  412368:	cbnz	w0, 412260 <_obstack_memory_used@@Base+0x20b4>
  41236c:	mov	w19, #0x0                   	// #0
  412370:	b	412260 <_obstack_memory_used@@Base+0x20b4>
  412374:	cmp	w0, #0x1
  412378:	b.le	41236c <_obstack_memory_used@@Base+0x21c0>
  41237c:	cmp	w8, #0x6
  412380:	b.ne	41236c <_obstack_memory_used@@Base+0x21c0>  // b.any
  412384:	ldr	x20, [x9, x10]
  412388:	ldr	x0, [x20, #64]
  41238c:	ldr	x3, [x20, #40]
  412390:	cbnz	x0, 4123a0 <_obstack_memory_used@@Base+0x21f4>
  412394:	ldr	x0, [x20, #72]
  412398:	cbnz	x0, 4123a0 <_obstack_memory_used@@Base+0x21f4>
  41239c:	cbz	x3, 412420 <_obstack_memory_used@@Base+0x2274>
  4123a0:	mov	x0, x6
  4123a4:	bl	410258 <_obstack_memory_used@@Base+0xac>
  4123a8:	mov	w21, w0
  4123ac:	mov	x0, #0x0                   	// #0
  4123b0:	cmp	x3, x0
  4123b4:	b.gt	4123ec <_obstack_memory_used@@Base+0x2240>
  4123b8:	mov	x22, #0x0                   	// #0
  4123bc:	ldr	x0, [x20, #72]
  4123c0:	cmp	x0, x22
  4123c4:	b.gt	412404 <_obstack_memory_used@@Base+0x2258>
  4123c8:	ldr	x2, [x20, #64]
  4123cc:	mov	x0, #0x0                   	// #0
  4123d0:	cmp	x2, x0
  4123d4:	b.gt	412428 <_obstack_memory_used@@Base+0x227c>
  4123d8:	mov	w0, #0x0                   	// #0
  4123dc:	ldrb	w1, [x20, #32]
  4123e0:	tbz	w1, #0, 41245c <_obstack_memory_used@@Base+0x22b0>
  4123e4:	cbz	w0, 412260 <_obstack_memory_used@@Base+0x20b4>
  4123e8:	b	41236c <_obstack_memory_used@@Base+0x21c0>
  4123ec:	ldr	x1, [x20]
  4123f0:	ldr	w1, [x1, x0, lsl #2]
  4123f4:	cmp	w1, w21
  4123f8:	b.eq	412454 <_obstack_memory_used@@Base+0x22a8>  // b.none
  4123fc:	add	x0, x0, #0x1
  412400:	b	4123b0 <_obstack_memory_used@@Base+0x2204>
  412404:	ldr	x0, [x20, #24]
  412408:	ldr	x1, [x0, x22, lsl #3]
  41240c:	mov	w0, w21
  412410:	bl	402920 <iswctype@plt>
  412414:	cbnz	w0, 412454 <_obstack_memory_used@@Base+0x22a8>
  412418:	add	x22, x22, #0x1
  41241c:	b	4123bc <_obstack_memory_used@@Base+0x2210>
  412420:	mov	w21, #0x0                   	// #0
  412424:	b	4123c8 <_obstack_memory_used@@Base+0x221c>
  412428:	ldr	x3, [x20, #8]
  41242c:	lsl	x1, x0, #2
  412430:	ldr	w3, [x3, x1]
  412434:	cmp	w21, w3
  412438:	b.cc	41244c <_obstack_memory_used@@Base+0x22a0>  // b.lo, b.ul, b.last
  41243c:	ldr	x3, [x20, #16]
  412440:	ldr	w1, [x3, x1]
  412444:	cmp	w21, w1
  412448:	b.ls	412454 <_obstack_memory_used@@Base+0x22a8>  // b.plast
  41244c:	add	x0, x0, #0x1
  412450:	b	4123d0 <_obstack_memory_used@@Base+0x2224>
  412454:	mov	w0, w19
  412458:	b	4123dc <_obstack_memory_used@@Base+0x2230>
  41245c:	mov	w19, w0
  412460:	b	412260 <_obstack_memory_used@@Base+0x20b4>
  412464:	tbnz	x1, #63, 412488 <_obstack_memory_used@@Base+0x22dc>
  412468:	ldr	x2, [x0, #8]
  41246c:	cmp	x2, x1
  412470:	b.le	412488 <_obstack_memory_used@@Base+0x22dc>
  412474:	sub	x2, x2, #0x1
  412478:	str	x2, [x0, #8]
  41247c:	ldr	x2, [x0, #8]
  412480:	cmp	x1, x2
  412484:	b.lt	41248c <_obstack_memory_used@@Base+0x22e0>  // b.tstop
  412488:	ret
  41248c:	add	x1, x1, #0x1
  412490:	ldr	x2, [x0, #16]
  412494:	lsl	x3, x1, #3
  412498:	ldr	x4, [x2, x3]
  41249c:	add	x2, x2, x3
  4124a0:	stur	x4, [x2, #-8]
  4124a4:	b	41247c <_obstack_memory_used@@Base+0x22d0>
  4124a8:	ldrb	w2, [x1, #48]
  4124ac:	cmp	w2, #0x4
  4124b0:	b.ne	4124e8 <_obstack_memory_used@@Base+0x233c>  // b.any
  4124b4:	ldr	x2, [x0, #224]
  4124b8:	cbz	x2, 4124e0 <_obstack_memory_used@@Base+0x2334>
  4124bc:	ldrsw	x3, [x1, #40]
  4124c0:	ldr	x2, [x2, x3, lsl #3]
  4124c4:	str	x2, [x1, #40]
  4124c8:	mov	w1, #0x1                   	// #1
  4124cc:	lsl	w1, w1, w2
  4124d0:	ldr	x2, [x0, #160]
  4124d4:	sxtw	x1, w1
  4124d8:	orr	x1, x2, x1
  4124dc:	str	x1, [x0, #160]
  4124e0:	mov	w0, #0x0                   	// #0
  4124e4:	ret
  4124e8:	cmp	w2, #0x11
  4124ec:	b.ne	4124e0 <_obstack_memory_used@@Base+0x2334>  // b.any
  4124f0:	ldr	x2, [x1, #8]
  4124f4:	cbz	x2, 4124e0 <_obstack_memory_used@@Base+0x2334>
  4124f8:	ldrb	w3, [x2, #48]
  4124fc:	cmp	w3, #0x11
  412500:	b.ne	4124e0 <_obstack_memory_used@@Base+0x2334>  // b.any
  412504:	ldr	x3, [x2, #40]
  412508:	ldr	x2, [x2, #8]
  41250c:	str	x2, [x1, #8]
  412510:	cbz	x2, 412518 <_obstack_memory_used@@Base+0x236c>
  412514:	str	x1, [x2]
  412518:	ldr	x1, [x1, #40]
  41251c:	cmp	x3, #0x3f
  412520:	ldr	x2, [x0, #224]
  412524:	ldr	x1, [x2, x1, lsl #3]
  412528:	str	x1, [x2, x3, lsl #3]
  41252c:	b.gt	4124e0 <_obstack_memory_used@@Base+0x2334>
  412530:	ldr	x2, [x0, #160]
  412534:	mov	x1, #0x1                   	// #1
  412538:	lsl	x1, x1, x3
  41253c:	bic	x1, x2, x1
  412540:	b	4124dc <_obstack_memory_used@@Base+0x2330>
  412544:	ldrb	w0, [x1, #48]
  412548:	ldr	x2, [x1, #8]
  41254c:	cmp	w0, #0xb
  412550:	b.eq	412574 <_obstack_memory_used@@Base+0x23c8>  // b.none
  412554:	cmp	w0, #0x10
  412558:	ldr	x0, [x1, #16]
  41255c:	b.eq	412580 <_obstack_memory_used@@Base+0x23d4>  // b.none
  412560:	cbz	x2, 41256c <_obstack_memory_used@@Base+0x23c0>
  412564:	ldr	x3, [x1, #32]
  412568:	str	x3, [x2, #32]
  41256c:	cbnz	x0, 412588 <_obstack_memory_used@@Base+0x23dc>
  412570:	b	412578 <_obstack_memory_used@@Base+0x23cc>
  412574:	str	x1, [x2, #32]
  412578:	mov	w0, #0x0                   	// #0
  41257c:	ret
  412580:	ldr	x3, [x0, #24]
  412584:	str	x3, [x2, #32]
  412588:	ldr	x1, [x1, #32]
  41258c:	str	x1, [x0, #32]
  412590:	b	412578 <_obstack_memory_used@@Base+0x23cc>
  412594:	cbnz	x1, 4125a0 <_obstack_memory_used@@Base+0x23f4>
  412598:	mov	w0, #0x0                   	// #0
  41259c:	ret
  4125a0:	stp	x29, x30, [sp, #-48]!
  4125a4:	mov	x29, sp
  4125a8:	stp	x19, x20, [sp, #16]
  4125ac:	mov	x20, x1
  4125b0:	ldr	x1, [x1, #8]
  4125b4:	str	x21, [sp, #32]
  4125b8:	cbz	x1, 4126cc <_obstack_memory_used@@Base+0x2520>
  4125bc:	mov	x19, x0
  4125c0:	ldp	x2, x0, [x0]
  4125c4:	add	x0, x0, x1, lsl #1
  4125c8:	cmp	x2, x0
  4125cc:	b.ge	4125f0 <_obstack_memory_used@@Base+0x2444>  // b.tcont
  4125d0:	ldr	x0, [x19, #16]
  4125d4:	add	x1, x1, x2
  4125d8:	lsl	x21, x1, #1
  4125dc:	lsl	x1, x1, #4
  4125e0:	bl	402a80 <realloc@plt>
  4125e4:	cbz	x0, 4126f8 <_obstack_memory_used@@Base+0x254c>
  4125e8:	str	x21, [x19]
  4125ec:	str	x0, [x19, #16]
  4125f0:	ldr	x0, [x19, #8]
  4125f4:	ldr	x2, [x20, #8]
  4125f8:	cbnz	x0, 412618 <_obstack_memory_used@@Base+0x246c>
  4125fc:	ldr	x1, [x20, #16]
  412600:	str	x2, [x19, #8]
  412604:	ldr	x0, [x19, #16]
  412608:	ldr	x2, [x20, #8]
  41260c:	lsl	x2, x2, #3
  412610:	bl	402750 <memcpy@plt>
  412614:	b	4126cc <_obstack_memory_used@@Base+0x2520>
  412618:	add	x21, x0, x2, lsl #1
  41261c:	sub	x2, x2, #0x1
  412620:	sub	x0, x0, #0x1
  412624:	b	412650 <_obstack_memory_used@@Base+0x24a4>
  412628:	ldr	x1, [x19, #16]
  41262c:	ldr	x3, [x20, #16]
  412630:	ldr	x4, [x1, x0, lsl #3]
  412634:	ldr	x3, [x3, x2, lsl #3]
  412638:	cmp	x4, x3
  41263c:	b.eq	41261c <_obstack_memory_used@@Base+0x2470>  // b.none
  412640:	b.ge	412620 <_obstack_memory_used@@Base+0x2474>  // b.tcont
  412644:	sub	x21, x21, #0x1
  412648:	sub	x2, x2, #0x1
  41264c:	str	x3, [x1, x21, lsl #3]
  412650:	cmp	x2, #0x0
  412654:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  412658:	b.ge	412628 <_obstack_memory_used@@Base+0x247c>  // b.tcont
  41265c:	tbnz	x2, #63, 41267c <_obstack_memory_used@@Base+0x24d0>
  412660:	ldr	x0, [x19, #16]
  412664:	add	x2, x2, #0x1
  412668:	ldr	x1, [x20, #16]
  41266c:	sub	x21, x21, x2
  412670:	lsl	x2, x2, #3
  412674:	add	x0, x0, x21, lsl #3
  412678:	bl	402750 <memcpy@plt>
  41267c:	ldr	x0, [x19, #8]
  412680:	ldr	x2, [x20, #8]
  412684:	add	x2, x0, x2, lsl #1
  412688:	sub	x4, x2, #0x1
  41268c:	subs	x2, x2, x21
  412690:	b.eq	4126cc <_obstack_memory_used@@Base+0x2520>  // b.none
  412694:	sub	x1, x0, #0x1
  412698:	add	x0, x0, x2
  41269c:	str	x0, [x19, #8]
  4126a0:	ldr	x0, [x19, #16]
  4126a4:	add	x3, x1, x2
  4126a8:	ldr	x6, [x0, x4, lsl #3]
  4126ac:	lsl	x3, x3, #3
  4126b0:	ldr	x5, [x0, x1, lsl #3]
  4126b4:	cmp	x6, x5
  4126b8:	b.le	4126e0 <_obstack_memory_used@@Base+0x2534>
  4126bc:	str	x6, [x0, x3]
  4126c0:	sub	x4, x4, #0x1
  4126c4:	subs	x2, x2, #0x1
  4126c8:	b.ne	4126a4 <_obstack_memory_used@@Base+0x24f8>  // b.any
  4126cc:	mov	w0, #0x0                   	// #0
  4126d0:	ldp	x19, x20, [sp, #16]
  4126d4:	ldr	x21, [sp, #32]
  4126d8:	ldp	x29, x30, [sp], #48
  4126dc:	ret
  4126e0:	str	x5, [x0, x3]
  4126e4:	subs	x1, x1, #0x1
  4126e8:	b.pl	4126a4 <_obstack_memory_used@@Base+0x24f8>  // b.nfrst
  4126ec:	lsl	x2, x2, #3
  4126f0:	add	x1, x0, x21, lsl #3
  4126f4:	b	412610 <_obstack_memory_used@@Base+0x2464>
  4126f8:	mov	w0, #0xc                   	// #12
  4126fc:	b	4126d0 <_obstack_memory_used@@Base+0x2524>
  412700:	stp	x29, x30, [sp, #-48]!
  412704:	mov	x29, sp
  412708:	stp	x19, x20, [sp, #16]
  41270c:	ldr	x20, [x1, #8]
  412710:	stp	x21, x22, [sp, #32]
  412714:	cbz	x20, 412828 <_obstack_memory_used@@Base+0x267c>
  412718:	mov	x19, x0
  41271c:	mov	x22, x2
  412720:	ldr	x0, [x2, #8]
  412724:	cbz	x0, 412828 <_obstack_memory_used@@Base+0x267c>
  412728:	add	x20, x20, x0
  41272c:	mov	x21, x1
  412730:	ldp	x1, x0, [x19]
  412734:	add	x0, x20, x0
  412738:	cmp	x0, x1
  41273c:	b.le	41275c <_obstack_memory_used@@Base+0x25b0>
  412740:	ldr	x0, [x19, #16]
  412744:	add	x20, x20, x1
  412748:	lsl	x1, x20, #3
  41274c:	bl	402a80 <realloc@plt>
  412750:	cbz	x0, 412864 <_obstack_memory_used@@Base+0x26b8>
  412754:	str	x20, [x19]
  412758:	str	x0, [x19, #16]
  41275c:	ldp	x0, x6, [x21, #8]
  412760:	ldp	x3, x7, [x22, #8]
  412764:	ldr	x5, [x19, #8]
  412768:	add	x4, x5, x0
  41276c:	sub	x0, x0, #0x1
  412770:	add	x4, x4, x3
  412774:	sub	x5, x5, #0x1
  412778:	sub	x3, x3, #0x1
  41277c:	ldr	x1, [x6, x0, lsl #3]
  412780:	ldr	x2, [x7, x3, lsl #3]
  412784:	cmp	x1, x2
  412788:	b.ne	412844 <_obstack_memory_used@@Base+0x2698>  // b.any
  41278c:	ldr	x2, [x19, #16]
  412790:	tbnz	x5, #63, 4127a4 <_obstack_memory_used@@Base+0x25f8>
  412794:	ldr	x8, [x2, x5, lsl #3]
  412798:	cmp	x1, x8
  41279c:	b.lt	41283c <_obstack_memory_used@@Base+0x2690>  // b.tstop
  4127a0:	b.eq	4127ac <_obstack_memory_used@@Base+0x2600>  // b.none
  4127a4:	sub	x4, x4, #0x1
  4127a8:	str	x1, [x2, x4, lsl #3]
  4127ac:	subs	x0, x0, #0x1
  4127b0:	b.mi	4127bc <_obstack_memory_used@@Base+0x2610>  // b.first
  4127b4:	subs	x3, x3, #0x1
  4127b8:	b.pl	41277c <_obstack_memory_used@@Base+0x25d0>  // b.nfrst
  4127bc:	ldr	x0, [x19, #8]
  4127c0:	ldr	x3, [x21, #8]
  4127c4:	sub	x1, x0, #0x1
  4127c8:	ldr	x2, [x22, #8]
  4127cc:	add	x3, x0, x3
  4127d0:	add	x2, x3, x2
  4127d4:	sub	x5, x2, #0x1
  4127d8:	sub	x2, x2, x4
  4127dc:	add	x0, x0, x2
  4127e0:	str	x0, [x19, #8]
  4127e4:	cmp	x2, #0x0
  4127e8:	ccmp	x1, #0x0, #0x1, gt
  4127ec:	ldr	x0, [x19, #16]
  4127f0:	b.lt	41281c <_obstack_memory_used@@Base+0x2670>  // b.tstop
  4127f4:	ldr	x7, [x0, x5, lsl #3]
  4127f8:	add	x3, x1, x2
  4127fc:	ldr	x6, [x0, x1, lsl #3]
  412800:	lsl	x3, x3, #3
  412804:	cmp	x7, x6
  412808:	b.le	412850 <_obstack_memory_used@@Base+0x26a4>
  41280c:	str	x7, [x0, x3]
  412810:	sub	x5, x5, #0x1
  412814:	subs	x2, x2, #0x1
  412818:	b.ne	4127f4 <_obstack_memory_used@@Base+0x2648>  // b.any
  41281c:	lsl	x2, x2, #3
  412820:	add	x1, x0, x4, lsl #3
  412824:	bl	402750 <memcpy@plt>
  412828:	mov	w0, #0x0                   	// #0
  41282c:	ldp	x19, x20, [sp, #16]
  412830:	ldp	x21, x22, [sp, #32]
  412834:	ldp	x29, x30, [sp], #48
  412838:	ret
  41283c:	sub	x5, x5, #0x1
  412840:	b	412790 <_obstack_memory_used@@Base+0x25e4>
  412844:	b.lt	4127b4 <_obstack_memory_used@@Base+0x2608>  // b.tstop
  412848:	subs	x0, x0, #0x1
  41284c:	b	4127b8 <_obstack_memory_used@@Base+0x260c>
  412850:	str	x6, [x0, x3]
  412854:	sub	x1, x1, #0x1
  412858:	cmn	x1, #0x1
  41285c:	b.ne	4127f4 <_obstack_memory_used@@Base+0x2648>  // b.any
  412860:	b	41281c <_obstack_memory_used@@Base+0x2670>
  412864:	mov	w0, #0xc                   	// #12
  412868:	b	41282c <_obstack_memory_used@@Base+0x2680>
  41286c:	stp	x29, x30, [sp, #-48]!
  412870:	mov	x29, sp
  412874:	stp	x19, x20, [sp, #16]
  412878:	mov	x19, x0
  41287c:	ldr	w0, [x0, #128]
  412880:	stp	x21, x22, [sp, #32]
  412884:	mov	x20, x2
  412888:	mov	x21, x1
  41288c:	mov	x22, x3
  412890:	cmp	w0, #0xf
  412894:	b.ne	4128b8 <_obstack_memory_used@@Base+0x270c>  // b.any
  412898:	mov	x0, #0x3c8                 	// #968
  41289c:	bl	402930 <malloc@plt>
  4128a0:	mov	x4, x0
  4128a4:	cbz	x0, 412918 <_obstack_memory_used@@Base+0x276c>
  4128a8:	ldr	x0, [x19, #112]
  4128ac:	str	x0, [x4]
  4128b0:	str	x4, [x19, #112]
  4128b4:	str	wzr, [x19, #128]
  4128b8:	ldr	w4, [x19, #128]
  4128bc:	ldr	x6, [x19, #112]
  4128c0:	add	w0, w4, #0x1
  4128c4:	sbfiz	x4, x4, #6, #32
  4128c8:	str	w0, [x19, #128]
  4128cc:	add	x5, x6, x4
  4128d0:	add	x0, x4, #0x8
  4128d4:	add	x4, x4, #0x20
  4128d8:	add	x0, x6, x0
  4128dc:	add	x4, x6, x4
  4128e0:	stp	xzr, x21, [x5, #8]
  4128e4:	str	x20, [x5, #24]
  4128e8:	ldp	x2, x3, [x22]
  4128ec:	stp	x2, x3, [x5, #48]
  4128f0:	ldrb	w1, [x4, #26]
  4128f4:	and	w1, w1, #0xfffffff3
  4128f8:	strb	w1, [x4, #26]
  4128fc:	mov	x1, #0xffffffffffffffff    	// #-1
  412900:	stp	xzr, xzr, [x5, #32]
  412904:	str	x1, [x5, #64]
  412908:	cbz	x21, 412910 <_obstack_memory_used@@Base+0x2764>
  41290c:	str	x0, [x21]
  412910:	cbz	x20, 412918 <_obstack_memory_used@@Base+0x276c>
  412914:	str	x0, [x20]
  412918:	ldp	x19, x20, [sp, #16]
  41291c:	ldp	x21, x22, [sp, #32]
  412920:	ldp	x29, x30, [sp], #48
  412924:	ret
  412928:	stp	x29, x30, [sp, #-64]!
  41292c:	mov	x29, sp
  412930:	stp	x19, x20, [sp, #16]
  412934:	mov	x19, x0
  412938:	ldr	x20, [x0]
  41293c:	stp	x21, x22, [sp, #32]
  412940:	mov	x22, x1
  412944:	add	x21, sp, #0x38
  412948:	add	x3, x19, #0x28
  41294c:	mov	x0, x22
  412950:	mov	x2, #0x0                   	// #0
  412954:	mov	x1, #0x0                   	// #0
  412958:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  41295c:	str	x0, [x21]
  412960:	cbz	x0, 4129a0 <_obstack_memory_used@@Base+0x27f4>
  412964:	str	x20, [x0]
  412968:	ldr	x20, [x21]
  41296c:	ldrb	w0, [x20, #50]
  412970:	orr	w0, w0, #0x4
  412974:	strb	w0, [x20, #50]
  412978:	ldr	x0, [x19, #8]
  41297c:	cbz	x0, 4129b4 <_obstack_memory_used@@Base+0x2808>
  412980:	add	x21, x20, #0x8
  412984:	mov	x19, x0
  412988:	b	412948 <_obstack_memory_used@@Base+0x279c>
  41298c:	ldr	x1, [x19]
  412990:	mov	x0, x19
  412994:	ldr	x20, [x20]
  412998:	cbnz	x1, 4129b0 <_obstack_memory_used@@Base+0x2804>
  41299c:	ldr	x0, [sp, #56]
  4129a0:	ldp	x19, x20, [sp, #16]
  4129a4:	ldp	x21, x22, [sp, #32]
  4129a8:	ldp	x29, x30, [sp], #64
  4129ac:	ret
  4129b0:	mov	x19, x1
  4129b4:	ldr	x2, [x19, #16]
  4129b8:	cmp	x2, x0
  4129bc:	b.eq	41298c <_obstack_memory_used@@Base+0x27e0>  // b.none
  4129c0:	cbz	x2, 41298c <_obstack_memory_used@@Base+0x27e0>
  4129c4:	add	x21, x20, #0x10
  4129c8:	mov	x0, x2
  4129cc:	b	412984 <_obstack_memory_used@@Base+0x27d8>
  4129d0:	stp	x29, x30, [sp, #-32]!
  4129d4:	mov	x29, sp
  4129d8:	stp	xzr, xzr, [sp, #16]
  4129dc:	strb	w3, [sp, #24]
  4129e0:	add	x3, sp, #0x10
  4129e4:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  4129e8:	ldp	x29, x30, [sp], #32
  4129ec:	ret
  4129f0:	stp	x29, x30, [sp, #-80]!
  4129f4:	mov	x29, sp
  4129f8:	stp	x23, x24, [sp, #48]
  4129fc:	mov	x24, x0
  412a00:	ldrb	w0, [x1, #56]
  412a04:	stp	x19, x20, [sp, #16]
  412a08:	stp	x21, x22, [sp, #32]
  412a0c:	mov	x22, x2
  412a10:	ldr	x19, [x2, #8]
  412a14:	str	x25, [sp, #64]
  412a18:	ldr	x25, [x1]
  412a1c:	tbz	w0, #4, 412a3c <_obstack_memory_used@@Base+0x2890>
  412a20:	cbz	x19, 412a3c <_obstack_memory_used@@Base+0x2890>
  412a24:	ldr	x1, [x2, #40]
  412a28:	cmp	x1, #0x3f
  412a2c:	b.gt	412ac4 <_obstack_memory_used@@Base+0x2918>
  412a30:	ldr	x0, [x25, #160]
  412a34:	lsr	x0, x0, x1
  412a38:	tbz	w0, #0, 412ac4 <_obstack_memory_used@@Base+0x2918>
  412a3c:	mov	w3, #0x8                   	// #8
  412a40:	mov	x2, #0x0                   	// #0
  412a44:	mov	x1, #0x0                   	// #0
  412a48:	mov	x0, x25
  412a4c:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  412a50:	mov	x21, x0
  412a54:	mov	w3, #0x9                   	// #9
  412a58:	mov	x0, x25
  412a5c:	mov	x2, #0x0                   	// #0
  412a60:	mov	x1, #0x0                   	// #0
  412a64:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  412a68:	mov	x20, x0
  412a6c:	cbz	x19, 412ae0 <_obstack_memory_used@@Base+0x2934>
  412a70:	mov	x2, x0
  412a74:	mov	x1, x19
  412a78:	mov	x0, x25
  412a7c:	mov	w3, #0x10                  	// #16
  412a80:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  412a84:	mov	x23, x0
  412a88:	mov	x2, x23
  412a8c:	mov	x1, x21
  412a90:	mov	x0, x25
  412a94:	mov	w3, #0x10                  	// #16
  412a98:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  412a9c:	cmp	x0, #0x0
  412aa0:	mov	x19, x0
  412aa4:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  412aa8:	b.eq	412ab8 <_obstack_memory_used@@Base+0x290c>  // b.none
  412aac:	cmp	x21, #0x0
  412ab0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  412ab4:	b.ne	412ae8 <_obstack_memory_used@@Base+0x293c>  // b.any
  412ab8:	mov	w0, #0xc                   	// #12
  412abc:	mov	x19, #0x0                   	// #0
  412ac0:	str	w0, [x24]
  412ac4:	mov	x0, x19
  412ac8:	ldp	x19, x20, [sp, #16]
  412acc:	ldp	x21, x22, [sp, #32]
  412ad0:	ldp	x23, x24, [sp, #48]
  412ad4:	ldr	x25, [sp, #64]
  412ad8:	ldp	x29, x30, [sp], #80
  412adc:	ret
  412ae0:	mov	x23, x0
  412ae4:	b	412a88 <_obstack_memory_used@@Base+0x28dc>
  412ae8:	ldr	x0, [x22, #40]
  412aec:	str	x0, [x20, #40]
  412af0:	str	x0, [x21, #40]
  412af4:	ldrb	w0, [x22, #50]
  412af8:	ldrb	w1, [x20, #50]
  412afc:	ubfx	x0, x0, #3, #1
  412b00:	bfi	w1, w0, #3, #1
  412b04:	strb	w1, [x20, #50]
  412b08:	ldrb	w1, [x21, #50]
  412b0c:	bfi	w1, w0, #3, #1
  412b10:	strb	w1, [x21, #50]
  412b14:	b	412ac4 <_obstack_memory_used@@Base+0x2918>
  412b18:	stp	x29, x30, [sp, #-48]!
  412b1c:	mov	x29, sp
  412b20:	ldr	x2, [x1, #8]
  412b24:	stp	x19, x20, [sp, #16]
  412b28:	mov	x20, x0
  412b2c:	str	wzr, [sp, #44]
  412b30:	mov	x19, x1
  412b34:	cbz	x2, 412b5c <_obstack_memory_used@@Base+0x29b0>
  412b38:	ldrb	w0, [x2, #48]
  412b3c:	cmp	w0, #0x11
  412b40:	b.ne	412b5c <_obstack_memory_used@@Base+0x29b0>  // b.any
  412b44:	mov	x1, x20
  412b48:	add	x0, sp, #0x2c
  412b4c:	bl	4129f0 <_obstack_memory_used@@Base+0x2844>
  412b50:	str	x0, [x19, #8]
  412b54:	cbz	x0, 412b5c <_obstack_memory_used@@Base+0x29b0>
  412b58:	str	x19, [x0]
  412b5c:	ldr	x2, [x19, #16]
  412b60:	cbz	x2, 412b88 <_obstack_memory_used@@Base+0x29dc>
  412b64:	ldrb	w0, [x2, #48]
  412b68:	cmp	w0, #0x11
  412b6c:	b.ne	412b88 <_obstack_memory_used@@Base+0x29dc>  // b.any
  412b70:	mov	x1, x20
  412b74:	add	x0, sp, #0x2c
  412b78:	bl	4129f0 <_obstack_memory_used@@Base+0x2844>
  412b7c:	str	x0, [x19, #16]
  412b80:	cbz	x0, 412b88 <_obstack_memory_used@@Base+0x29dc>
  412b84:	str	x19, [x0]
  412b88:	ldr	w0, [sp, #44]
  412b8c:	ldp	x19, x20, [sp, #16]
  412b90:	ldp	x29, x30, [sp], #48
  412b94:	ret
  412b98:	stp	x29, x30, [sp, #-112]!
  412b9c:	mov	x29, sp
  412ba0:	stp	x19, x20, [sp, #16]
  412ba4:	stp	x21, x22, [sp, #32]
  412ba8:	mov	x21, x0
  412bac:	mov	x22, x5
  412bb0:	mov	x0, #0x20                  	// #32
  412bb4:	stp	x23, x24, [sp, #48]
  412bb8:	mov	x24, x1
  412bbc:	mov	x23, x3
  412bc0:	mov	x1, #0x1                   	// #1
  412bc4:	stp	x25, x26, [sp, #64]
  412bc8:	mov	x25, x2
  412bcc:	and	w26, w4, #0xff
  412bd0:	str	xzr, [sp, #88]
  412bd4:	bl	402a60 <calloc@plt>
  412bd8:	mov	x19, x0
  412bdc:	cbnz	x0, 412c04 <_obstack_memory_used@@Base+0x2a58>
  412be0:	mov	w0, #0xc                   	// #12
  412be4:	str	w0, [x22]
  412be8:	mov	x0, x19
  412bec:	ldp	x19, x20, [sp, #16]
  412bf0:	ldp	x21, x22, [sp, #32]
  412bf4:	ldp	x23, x24, [sp, #48]
  412bf8:	ldp	x25, x26, [sp, #64]
  412bfc:	ldp	x29, x30, [sp], #112
  412c00:	ret
  412c04:	mov	x1, #0x1                   	// #1
  412c08:	mov	x0, #0x50                  	// #80
  412c0c:	bl	402a60 <calloc@plt>
  412c10:	mov	x20, x0
  412c14:	cbnz	x0, 412c2c <_obstack_memory_used@@Base+0x2a80>
  412c18:	mov	x0, x19
  412c1c:	bl	402c20 <free@plt>
  412c20:	mov	w0, #0xc                   	// #12
  412c24:	str	w0, [x22]
  412c28:	b	412c70 <_obstack_memory_used@@Base+0x2ac4>
  412c2c:	ldrb	w0, [x0, #32]
  412c30:	mov	x4, x25
  412c34:	add	x3, sp, #0x58
  412c38:	mov	x2, x20
  412c3c:	mov	x1, x19
  412c40:	mov	x5, #0x0                   	// #0
  412c44:	bfxil	w0, w26, #0, #1
  412c48:	strb	w0, [x20, #32]
  412c4c:	mov	x0, x24
  412c50:	bl	411b68 <_obstack_memory_used@@Base+0x19bc>
  412c54:	mov	w24, w0
  412c58:	cbz	w0, 412c88 <_obstack_memory_used@@Base+0x2adc>
  412c5c:	mov	x0, x19
  412c60:	bl	402c20 <free@plt>
  412c64:	mov	x0, x20
  412c68:	bl	411330 <_obstack_memory_used@@Base+0x1184>
  412c6c:	str	w24, [x22]
  412c70:	mov	x19, #0x0                   	// #0
  412c74:	b	412be8 <_obstack_memory_used@@Base+0x2a3c>
  412c78:	add	x23, x23, #0x1
  412c7c:	and	x1, x1, #0xff
  412c80:	mov	x0, x19
  412c84:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  412c88:	ldrb	w1, [x23]
  412c8c:	cbnz	w1, 412c78 <_obstack_memory_used@@Base+0x2acc>
  412c90:	cbz	w26, 412c9c <_obstack_memory_used@@Base+0x2af0>
  412c94:	mov	x0, x19
  412c98:	bl	4101f0 <_obstack_memory_used@@Base+0x44>
  412c9c:	ldr	w0, [x21, #180]
  412ca0:	cmp	w0, #0x1
  412ca4:	b.le	412cb4 <_obstack_memory_used@@Base+0x2b08>
  412ca8:	ldr	x1, [x21, #120]
  412cac:	mov	x0, x19
  412cb0:	bl	410234 <_obstack_memory_used@@Base+0x88>
  412cb4:	mov	w0, #0x3                   	// #3
  412cb8:	add	x3, sp, #0x60
  412cbc:	mov	x2, #0x0                   	// #0
  412cc0:	mov	x1, #0x0                   	// #0
  412cc4:	str	x19, [sp, #96]
  412cc8:	strb	w0, [sp, #104]
  412ccc:	mov	x0, x21
  412cd0:	stur	wzr, [sp, #105]
  412cd4:	sturh	wzr, [sp, #109]
  412cd8:	strb	wzr, [sp, #111]
  412cdc:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  412ce0:	mov	x23, x0
  412ce4:	cbz	x0, 412d50 <_obstack_memory_used@@Base+0x2ba4>
  412ce8:	ldr	w0, [x21, #180]
  412cec:	cmp	w0, #0x1
  412cf0:	b.le	412d40 <_obstack_memory_used@@Base+0x2b94>
  412cf4:	mov	w0, #0x6                   	// #6
  412cf8:	strb	w0, [sp, #104]
  412cfc:	ldrb	w0, [x21, #176]
  412d00:	mov	x2, #0x0                   	// #0
  412d04:	add	x3, sp, #0x60
  412d08:	mov	x1, #0x0                   	// #0
  412d0c:	orr	w0, w0, #0x2
  412d10:	strb	w0, [x21, #176]
  412d14:	mov	x0, x21
  412d18:	str	x20, [sp, #96]
  412d1c:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  412d20:	mov	x2, x0
  412d24:	cbz	x0, 412d50 <_obstack_memory_used@@Base+0x2ba4>
  412d28:	mov	x1, x23
  412d2c:	mov	x0, x21
  412d30:	mov	w3, #0xa                   	// #10
  412d34:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  412d38:	mov	x19, x0
  412d3c:	b	412be8 <_obstack_memory_used@@Base+0x2a3c>
  412d40:	mov	x0, x20
  412d44:	mov	x19, x23
  412d48:	bl	411330 <_obstack_memory_used@@Base+0x1184>
  412d4c:	b	412be8 <_obstack_memory_used@@Base+0x2a3c>
  412d50:	mov	x0, x19
  412d54:	bl	402c20 <free@plt>
  412d58:	mov	x0, x20
  412d5c:	bl	411330 <_obstack_memory_used@@Base+0x1184>
  412d60:	b	412c20 <_obstack_memory_used@@Base+0x2a74>
  412d64:	stp	x29, x30, [sp, #-32]!
  412d68:	mov	x29, sp
  412d6c:	ldr	x2, [x0]
  412d70:	stp	x19, x20, [sp, #16]
  412d74:	cbnz	x2, 412d90 <_obstack_memory_used@@Base+0x2be4>
  412d78:	bl	410a54 <_obstack_memory_used@@Base+0x8a8>
  412d7c:	cmp	w0, #0x0
  412d80:	cset	w0, eq  // eq = none
  412d84:	ldp	x19, x20, [sp, #16]
  412d88:	ldp	x29, x30, [sp], #32
  412d8c:	ret
  412d90:	mov	x19, x0
  412d94:	mov	x20, x1
  412d98:	ldp	x1, x0, [x0, #8]
  412d9c:	cbnz	x1, 412db8 <_obstack_memory_used@@Base+0x2c0c>
  412da0:	str	x20, [x0]
  412da4:	ldr	x0, [x19, #8]
  412da8:	add	x0, x0, #0x1
  412dac:	str	x0, [x19, #8]
  412db0:	mov	w0, #0x1                   	// #1
  412db4:	b	412d84 <_obstack_memory_used@@Base+0x2bd8>
  412db8:	cmp	x2, x1
  412dbc:	b.ne	412dd8 <_obstack_memory_used@@Base+0x2c2c>  // b.any
  412dc0:	lsl	x1, x2, #1
  412dc4:	str	x1, [x19]
  412dc8:	lsl	x1, x2, #4
  412dcc:	bl	402a80 <realloc@plt>
  412dd0:	cbz	x0, 412e38 <_obstack_memory_used@@Base+0x2c8c>
  412dd4:	str	x0, [x19, #16]
  412dd8:	ldp	x0, x2, [x19, #8]
  412ddc:	ldr	x1, [x2]
  412de0:	cmp	x20, x1
  412de4:	b.lt	412e2c <_obstack_memory_used@@Base+0x2c80>  // b.tstop
  412de8:	sub	x3, x2, #0x8
  412dec:	ldr	x1, [x3, x0, lsl #3]
  412df0:	cmp	x20, x1
  412df4:	b.ge	412e24 <_obstack_memory_used@@Base+0x2c78>  // b.tcont
  412df8:	str	x1, [x2, x0, lsl #3]
  412dfc:	sub	x0, x0, #0x1
  412e00:	b	412dec <_obstack_memory_used@@Base+0x2c40>
  412e04:	ldr	x4, [x3, x1, lsl #3]
  412e08:	str	x4, [x2, x1, lsl #3]
  412e0c:	sub	x1, x1, #0x1
  412e10:	cmp	x1, #0x0
  412e14:	b.gt	412e04 <_obstack_memory_used@@Base+0x2c58>
  412e18:	cmp	x0, #0x0
  412e1c:	csel	x1, x0, xzr, ge  // ge = tcont
  412e20:	sub	x0, x0, x1
  412e24:	str	x20, [x2, x0, lsl #3]
  412e28:	b	412da4 <_obstack_memory_used@@Base+0x2bf8>
  412e2c:	mov	x1, x0
  412e30:	sub	x3, x2, #0x8
  412e34:	b	412e10 <_obstack_memory_used@@Base+0x2c64>
  412e38:	mov	w0, #0x0                   	// #0
  412e3c:	b	412d84 <_obstack_memory_used@@Base+0x2bd8>
  412e40:	stp	x29, x30, [sp, #-64]!
  412e44:	mov	x29, sp
  412e48:	stp	x19, x20, [sp, #16]
  412e4c:	mov	x20, x1
  412e50:	mov	x19, x2
  412e54:	stp	x21, x22, [sp, #32]
  412e58:	mov	x21, x0
  412e5c:	mov	w22, w4
  412e60:	stp	x23, x24, [sp, #48]
  412e64:	mov	x23, x3
  412e68:	mov	x24, #0x18                  	// #24
  412e6c:	mov	x1, x19
  412e70:	mov	x0, x20
  412e74:	bl	410334 <_obstack_memory_used@@Base+0x188>
  412e78:	cbz	x0, 412e84 <_obstack_memory_used@@Base+0x2cd8>
  412e7c:	mov	w0, #0x0                   	// #0
  412e80:	b	412ec8 <_obstack_memory_used@@Base+0x2d1c>
  412e84:	ldr	x0, [x21]
  412e88:	lsl	x1, x19, #4
  412e8c:	add	x2, x0, x19, lsl #4
  412e90:	ldrb	w2, [x2, #8]
  412e94:	cmp	w2, w22
  412e98:	b.ne	412edc <_obstack_memory_used@@Base+0x2d30>  // b.any
  412e9c:	ldr	x0, [x0, x1]
  412ea0:	cmp	x0, x23
  412ea4:	b.ne	412edc <_obstack_memory_used@@Base+0x2d30>  // b.any
  412ea8:	cmp	w22, #0x9
  412eac:	b.ne	412e7c <_obstack_memory_used@@Base+0x2cd0>  // b.any
  412eb0:	mov	x1, x19
  412eb4:	mov	x0, x20
  412eb8:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  412ebc:	tst	w0, #0xff
  412ec0:	b.ne	412e7c <_obstack_memory_used@@Base+0x2cd0>  // b.any
  412ec4:	mov	w0, #0xc                   	// #12
  412ec8:	ldp	x19, x20, [sp, #16]
  412ecc:	ldp	x21, x22, [sp, #32]
  412ed0:	ldp	x23, x24, [sp, #48]
  412ed4:	ldp	x29, x30, [sp], #64
  412ed8:	ret
  412edc:	mov	x1, x19
  412ee0:	mov	x0, x20
  412ee4:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  412ee8:	tst	w0, #0xff
  412eec:	b.eq	412ec4 <_obstack_memory_used@@Base+0x2d18>  // b.none
  412ef0:	ldr	x0, [x21, #40]
  412ef4:	mul	x19, x19, x24
  412ef8:	add	x0, x0, x19
  412efc:	ldr	x1, [x0, #8]
  412f00:	cbz	x1, 412e7c <_obstack_memory_used@@Base+0x2cd0>
  412f04:	cmp	x1, #0x2
  412f08:	b.eq	412f20 <_obstack_memory_used@@Base+0x2d74>  // b.none
  412f0c:	ldr	x1, [x21, #40]
  412f10:	add	x19, x1, x19
  412f14:	ldr	x0, [x19, #16]
  412f18:	ldr	x19, [x0]
  412f1c:	b	412e6c <_obstack_memory_used@@Base+0x2cc0>
  412f20:	ldr	x0, [x0, #16]
  412f24:	mov	w4, w22
  412f28:	mov	x3, x23
  412f2c:	mov	x1, x20
  412f30:	ldr	x2, [x0, #8]
  412f34:	mov	x0, x21
  412f38:	bl	412e40 <_obstack_memory_used@@Base+0x2c94>
  412f3c:	cbz	w0, 412f0c <_obstack_memory_used@@Base+0x2d60>
  412f40:	b	412ec8 <_obstack_memory_used@@Base+0x2d1c>
  412f44:	stp	x29, x30, [sp, #-96]!
  412f48:	mov	x29, sp
  412f4c:	stp	x19, x20, [sp, #16]
  412f50:	mov	x20, x0
  412f54:	mov	x19, x2
  412f58:	stp	x21, x22, [sp, #32]
  412f5c:	mov	w22, w4
  412f60:	stp	x23, x24, [sp, #48]
  412f64:	mov	x24, x3
  412f68:	stp	x25, x26, [sp, #64]
  412f6c:	mov	x25, #0x18                  	// #24
  412f70:	str	x27, [sp, #80]
  412f74:	ldr	x3, [x20]
  412f78:	mov	x27, x19
  412f7c:	ldr	x0, [x20, #40]
  412f80:	add	x2, x3, x1, lsl #4
  412f84:	ldrb	w4, [x2, #8]
  412f88:	cmp	w4, #0x4
  412f8c:	b.ne	413010 <_obstack_memory_used@@Base+0x2e64>  // b.any
  412f90:	mul	x26, x19, x25
  412f94:	lsl	x21, x1, #3
  412f98:	ldr	x1, [x20, #24]
  412f9c:	add	x0, x0, x26
  412fa0:	mov	w2, w22
  412fa4:	ldr	x23, [x1, x21]
  412fa8:	str	xzr, [x0, #8]
  412fac:	mov	x0, x20
  412fb0:	mov	x1, x23
  412fb4:	bl	411564 <_obstack_memory_used@@Base+0x13b8>
  412fb8:	mov	x19, x0
  412fbc:	cmn	x0, #0x1
  412fc0:	b.ne	412fe4 <_obstack_memory_used@@Base+0x2e38>  // b.any
  412fc4:	mov	w0, #0xc                   	// #12
  412fc8:	ldp	x19, x20, [sp, #16]
  412fcc:	ldp	x21, x22, [sp, #32]
  412fd0:	ldp	x23, x24, [sp, #48]
  412fd4:	ldp	x25, x26, [sp, #64]
  412fd8:	ldr	x27, [sp, #80]
  412fdc:	ldp	x29, x30, [sp], #96
  412fe0:	ret
  412fe4:	ldr	x0, [x20, #24]
  412fe8:	ldr	x1, [x0, x21]
  412fec:	str	x1, [x0, x27, lsl #3]
  412ff0:	ldr	x0, [x20, #40]
  412ff4:	mov	x1, x19
  412ff8:	add	x0, x0, x26
  412ffc:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  413000:	tst	w0, #0xff
  413004:	b.eq	412fc4 <_obstack_memory_used@@Base+0x2e18>  // b.none
  413008:	mov	x1, x23
  41300c:	b	412f74 <_obstack_memory_used@@Base+0x2dc8>
  413010:	mul	x26, x1, x25
  413014:	add	x5, x0, x26
  413018:	ldr	x4, [x5, #8]
  41301c:	cbnz	x4, 413034 <_obstack_memory_used@@Base+0x2e88>
  413020:	ldr	x0, [x20, #24]
  413024:	ldr	x1, [x0, x1, lsl #3]
  413028:	str	x1, [x0, x19, lsl #3]
  41302c:	mov	w0, #0x0                   	// #0
  413030:	b	412fc8 <_obstack_memory_used@@Base+0x2e1c>
  413034:	mul	x21, x19, x25
  413038:	cmp	x4, #0x1
  41303c:	ldr	x5, [x5, #16]
  413040:	add	x0, x0, x21
  413044:	ldr	x23, [x5]
  413048:	str	xzr, [x0, #8]
  41304c:	b.ne	4130b0 <_obstack_memory_used@@Base+0x2f04>  // b.any
  413050:	cmp	x1, x24
  413054:	ccmp	x1, x19, #0x4, eq  // eq = none
  413058:	b.eq	413078 <_obstack_memory_used@@Base+0x2ecc>  // b.none
  41305c:	mov	x1, x23
  413060:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  413064:	mov	w1, w0
  413068:	mov	w0, #0x0                   	// #0
  41306c:	tst	w1, #0xff
  413070:	b.ne	412fc8 <_obstack_memory_used@@Base+0x2e1c>  // b.any
  413074:	b	412fc4 <_obstack_memory_used@@Base+0x2e18>
  413078:	ldr	w0, [x2, #8]
  41307c:	ubfx	x0, x0, #8, #10
  413080:	orr	w22, w22, w0
  413084:	mov	w2, w22
  413088:	mov	x1, x23
  41308c:	mov	x0, x20
  413090:	bl	411564 <_obstack_memory_used@@Base+0x13b8>
  413094:	mov	x19, x0
  413098:	cmn	x0, #0x1
  41309c:	b.eq	412fc4 <_obstack_memory_used@@Base+0x2e18>  // b.none
  4130a0:	mov	x1, x0
  4130a4:	ldr	x0, [x20, #40]
  4130a8:	add	x0, x0, x21
  4130ac:	b	412ffc <_obstack_memory_used@@Base+0x2e50>
  4130b0:	ldr	x1, [x20, #16]
  4130b4:	sub	x1, x1, #0x1
  4130b8:	add	x2, x3, x1, lsl #4
  4130bc:	ldrb	w4, [x2, #10]
  4130c0:	tbz	w4, #2, 4130cc <_obstack_memory_used@@Base+0x2f20>
  4130c4:	cmp	x1, #0x0
  4130c8:	b.gt	413130 <_obstack_memory_used@@Base+0x2f84>
  4130cc:	mov	w2, w22
  4130d0:	mov	x1, x23
  4130d4:	mov	x0, x20
  4130d8:	bl	411564 <_obstack_memory_used@@Base+0x13b8>
  4130dc:	mov	x19, x0
  4130e0:	cmn	x0, #0x1
  4130e4:	b.eq	412fc4 <_obstack_memory_used@@Base+0x2e18>  // b.none
  4130e8:	ldr	x0, [x20, #40]
  4130ec:	mov	x1, x19
  4130f0:	add	x0, x0, x21
  4130f4:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  4130f8:	tst	w0, #0xff
  4130fc:	b.eq	412fc4 <_obstack_memory_used@@Base+0x2e18>  // b.none
  413100:	mov	w4, w22
  413104:	mov	x3, x24
  413108:	mov	x2, x19
  41310c:	mov	x1, x23
  413110:	mov	x0, x20
  413114:	bl	412f44 <_obstack_memory_used@@Base+0x2d98>
  413118:	cbnz	w0, 412fc8 <_obstack_memory_used@@Base+0x2e1c>
  41311c:	ldr	x0, [x20, #40]
  413120:	add	x26, x0, x26
  413124:	ldr	x0, [x26, #16]
  413128:	ldr	x23, [x0, #8]
  41312c:	b	413084 <_obstack_memory_used@@Base+0x2ed8>
  413130:	ldr	x4, [x20, #32]
  413134:	ldr	x4, [x4, x1, lsl #3]
  413138:	cmp	x4, x23
  41313c:	b.ne	4130b4 <_obstack_memory_used@@Base+0x2f08>  // b.any
  413140:	ldr	w2, [x2, #8]
  413144:	ubfx	x2, x2, #8, #10
  413148:	cmp	w22, w2
  41314c:	b.ne	4130b4 <_obstack_memory_used@@Base+0x2f08>  // b.any
  413150:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  413154:	tst	w0, #0xff
  413158:	b.ne	41311c <_obstack_memory_used@@Base+0x2f70>  // b.any
  41315c:	b	412fc4 <_obstack_memory_used@@Base+0x2e18>
  413160:	stp	x29, x30, [sp, #-144]!
  413164:	mov	x29, sp
  413168:	stp	x21, x22, [sp, #32]
  41316c:	mov	x22, #0x18                  	// #24
  413170:	stp	x23, x24, [sp, #48]
  413174:	mov	x23, x0
  413178:	mul	x22, x2, x22
  41317c:	ldr	x0, [x1, #40]
  413180:	stp	x19, x20, [sp, #16]
  413184:	mov	x19, x1
  413188:	add	x0, x0, x22
  41318c:	mov	x20, x2
  413190:	stp	x25, x26, [sp, #64]
  413194:	and	w26, w3, #0xff
  413198:	ldr	x1, [x0, #8]
  41319c:	add	x0, sp, #0x60
  4131a0:	stp	x27, x28, [sp, #80]
  4131a4:	add	x1, x1, #0x1
  4131a8:	bl	410aa0 <_obstack_memory_used@@Base+0x8f4>
  4131ac:	mov	w21, w0
  4131b0:	cbnz	w0, 41322c <_obstack_memory_used@@Base+0x3080>
  4131b4:	ldr	x0, [x19, #48]
  4131b8:	mov	x1, #0xffffffffffffffff    	// #-1
  4131bc:	lsl	x24, x20, #4
  4131c0:	add	x0, x0, x22
  4131c4:	str	x1, [x0, #8]
  4131c8:	ldr	x1, [x19]
  4131cc:	add	x0, x1, x20, lsl #4
  4131d0:	ldr	w4, [x0, #8]
  4131d4:	tst	w4, #0x3ff00
  4131d8:	b.ne	41324c <_obstack_memory_used@@Base+0x30a0>  // b.any
  4131dc:	ldr	x0, [x19]
  4131e0:	add	x0, x0, x24
  4131e4:	mov	w24, #0x0                   	// #0
  4131e8:	ldrb	w0, [x0, #8]
  4131ec:	tbnz	w0, #3, 41332c <_obstack_memory_used@@Base+0x3180>
  4131f0:	mov	x1, x20
  4131f4:	add	x0, sp, #0x60
  4131f8:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  4131fc:	tst	w0, #0xff
  413200:	b.eq	41334c <_obstack_memory_used@@Base+0x31a0>  // b.none
  413204:	ldr	x0, [x19, #48]
  413208:	eor	w26, w26, #0x1
  41320c:	tst	w24, w26
  413210:	add	x22, x0, x22
  413214:	b.eq	413338 <_obstack_memory_used@@Base+0x318c>  // b.none
  413218:	str	xzr, [x22, #8]
  41321c:	ldp	x0, x1, [sp, #96]
  413220:	stp	x0, x1, [x23]
  413224:	ldr	x0, [sp, #112]
  413228:	str	x0, [x23, #16]
  41322c:	mov	w0, w21
  413230:	ldp	x19, x20, [sp, #16]
  413234:	ldp	x21, x22, [sp, #32]
  413238:	ldp	x23, x24, [sp, #48]
  41323c:	ldp	x25, x26, [sp, #64]
  413240:	ldp	x27, x28, [sp, #80]
  413244:	ldp	x29, x30, [sp], #144
  413248:	ret
  41324c:	ldr	x0, [x19, #40]
  413250:	add	x0, x0, x22
  413254:	ldr	x2, [x0, #8]
  413258:	cbz	x2, 4131dc <_obstack_memory_used@@Base+0x3030>
  41325c:	ldr	x0, [x0, #16]
  413260:	ldr	x0, [x0]
  413264:	add	x0, x1, x0, lsl #4
  413268:	ldrb	w0, [x0, #10]
  41326c:	tbnz	w0, #2, 4131dc <_obstack_memory_used@@Base+0x3030>
  413270:	ubfx	x4, x4, #8, #10
  413274:	mov	x3, x20
  413278:	mov	x2, x20
  41327c:	mov	x1, x20
  413280:	mov	x0, x19
  413284:	bl	412f44 <_obstack_memory_used@@Base+0x2d98>
  413288:	cbz	w0, 4131dc <_obstack_memory_used@@Base+0x3030>
  41328c:	mov	w21, w0
  413290:	b	41322c <_obstack_memory_used@@Base+0x3080>
  413294:	ldr	x0, [x0, #16]
  413298:	ldr	x2, [x0, x25, lsl #3]
  41329c:	ldr	x0, [x19, #48]
  4132a0:	mul	x27, x2, x28
  4132a4:	add	x0, x0, x27
  4132a8:	ldr	x1, [x0, #8]
  4132ac:	cmn	x1, #0x1
  4132b0:	b.ne	4132d4 <_obstack_memory_used@@Base+0x3128>  // b.any
  4132b4:	mov	w24, #0x1                   	// #1
  4132b8:	add	x25, x25, #0x1
  4132bc:	ldr	x0, [x19, #40]
  4132c0:	add	x0, x0, x22
  4132c4:	ldr	x1, [x0, #8]
  4132c8:	cmp	x1, x25
  4132cc:	b.gt	413294 <_obstack_memory_used@@Base+0x30e8>
  4132d0:	b	4131f0 <_obstack_memory_used@@Base+0x3044>
  4132d4:	cbnz	x1, 413318 <_obstack_memory_used@@Base+0x316c>
  4132d8:	mov	x1, x19
  4132dc:	add	x0, sp, #0x78
  4132e0:	mov	w3, #0x0                   	// #0
  4132e4:	bl	413160 <_obstack_memory_used@@Base+0x2fb4>
  4132e8:	cbnz	w0, 41328c <_obstack_memory_used@@Base+0x30e0>
  4132ec:	add	x1, sp, #0x78
  4132f0:	add	x0, sp, #0x60
  4132f4:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  4132f8:	cbnz	w0, 41328c <_obstack_memory_used@@Base+0x30e0>
  4132fc:	ldr	x0, [x19, #48]
  413300:	add	x27, x0, x27
  413304:	ldr	x0, [x27, #8]
  413308:	cbnz	x0, 4132b8 <_obstack_memory_used@@Base+0x310c>
  41330c:	ldr	x0, [sp, #136]
  413310:	bl	402c20 <free@plt>
  413314:	b	4132b4 <_obstack_memory_used@@Base+0x3108>
  413318:	ldp	x2, x3, [x0]
  41331c:	stp	x2, x3, [sp, #120]
  413320:	ldr	x0, [x0, #16]
  413324:	str	x0, [sp, #136]
  413328:	b	4132ec <_obstack_memory_used@@Base+0x3140>
  41332c:	mov	x25, #0x0                   	// #0
  413330:	mov	x28, #0x18                  	// #24
  413334:	b	4132bc <_obstack_memory_used@@Base+0x3110>
  413338:	ldp	x0, x1, [sp, #96]
  41333c:	stp	x0, x1, [x22]
  413340:	ldr	x0, [sp, #112]
  413344:	str	x0, [x22, #16]
  413348:	b	41321c <_obstack_memory_used@@Base+0x3070>
  41334c:	mov	w21, #0xc                   	// #12
  413350:	b	41322c <_obstack_memory_used@@Base+0x3080>
  413354:	stp	x29, x30, [sp, #-64]!
  413358:	mov	x29, sp
  41335c:	stp	x23, x24, [sp, #48]
  413360:	mov	x24, x1
  413364:	stp	x19, x20, [sp, #16]
  413368:	mov	x20, x1
  41336c:	mov	x19, x2
  413370:	ldr	x1, [x1, #16]
  413374:	stp	x21, x22, [sp, #32]
  413378:	mov	x22, x0
  41337c:	str	x2, [x24], #32
  413380:	mov	x0, x24
  413384:	bl	410aa0 <_obstack_memory_used@@Base+0x8f4>
  413388:	cbz	w0, 413440 <_obstack_memory_used@@Base+0x3294>
  41338c:	mov	w21, #0xc                   	// #12
  413390:	mov	w0, w21
  413394:	ldp	x19, x20, [sp, #16]
  413398:	ldp	x21, x22, [sp, #32]
  41339c:	ldp	x23, x24, [sp, #48]
  4133a0:	ldp	x29, x30, [sp], #64
  4133a4:	ret
  4133a8:	ldr	x0, [x20, #24]
  4133ac:	ldr	x1, [x0, x23, lsl #3]
  4133b0:	ldr	x0, [x22]
  4133b4:	add	x0, x0, x1, lsl #4
  4133b8:	ldrb	w0, [x0, #8]
  4133bc:	tbz	w0, #3, 41342c <_obstack_memory_used@@Base+0x3280>
  4133c0:	add	x23, x23, #0x1
  4133c4:	ldr	x0, [x20, #16]
  4133c8:	cmp	x0, x23
  4133cc:	b.gt	4133a8 <_obstack_memory_used@@Base+0x31fc>
  4133d0:	ldr	x2, [x22, #136]
  4133d4:	ldr	x23, [x22, #64]
  4133d8:	and	x19, x19, x2
  4133dc:	mov	x2, #0x18                  	// #24
  4133e0:	mul	x19, x19, x2
  4133e4:	add	x22, x23, x19
  4133e8:	ldr	x1, [x23, x19]
  4133ec:	ldr	x0, [x22, #8]
  4133f0:	cmp	x0, x1
  4133f4:	b.gt	413414 <_obstack_memory_used@@Base+0x3268>
  4133f8:	ldr	x0, [x22, #16]
  4133fc:	add	x1, x1, #0x1
  413400:	lsl	x24, x1, #1
  413404:	lsl	x1, x1, #4
  413408:	bl	402a80 <realloc@plt>
  41340c:	cbz	x0, 41338c <_obstack_memory_used@@Base+0x31e0>
  413410:	stp	x24, x0, [x22, #8]
  413414:	ldr	x0, [x23, x19]
  413418:	ldr	x1, [x22, #16]
  41341c:	add	x2, x0, #0x1
  413420:	str	x2, [x23, x19]
  413424:	str	x20, [x1, x0, lsl #3]
  413428:	b	413390 <_obstack_memory_used@@Base+0x31e4>
  41342c:	mov	x0, x24
  413430:	bl	4109e8 <_obstack_memory_used@@Base+0x83c>
  413434:	tst	w0, #0xff
  413438:	b.ne	4133c0 <_obstack_memory_used@@Base+0x3214>  // b.any
  41343c:	b	41338c <_obstack_memory_used@@Base+0x31e0>
  413440:	mov	w21, w0
  413444:	mov	x23, #0x0                   	// #0
  413448:	b	4133c4 <_obstack_memory_used@@Base+0x3218>
  41344c:	stp	x29, x30, [sp, #-48]!
  413450:	mov	x29, sp
  413454:	stp	x19, x20, [sp, #16]
  413458:	mov	x19, x0
  41345c:	ldr	x2, [x1, #8]
  413460:	str	x21, [sp, #32]
  413464:	str	x2, [x0, #8]
  413468:	cmp	x2, #0x0
  41346c:	b.le	4134b8 <_obstack_memory_used@@Base+0x330c>
  413470:	str	x2, [x19]
  413474:	lsl	x20, x2, #3
  413478:	mov	x21, x1
  41347c:	mov	x0, x20
  413480:	bl	402930 <malloc@plt>
  413484:	str	x0, [x19, #16]
  413488:	cbnz	x0, 4134a4 <_obstack_memory_used@@Base+0x32f8>
  41348c:	mov	w0, #0xc                   	// #12
  413490:	stp	xzr, xzr, [x19]
  413494:	ldp	x19, x20, [sp, #16]
  413498:	ldr	x21, [sp, #32]
  41349c:	ldp	x29, x30, [sp], #48
  4134a0:	ret
  4134a4:	ldr	x1, [x21, #16]
  4134a8:	mov	x2, x20
  4134ac:	bl	402750 <memcpy@plt>
  4134b0:	mov	w0, #0x0                   	// #0
  4134b4:	b	413494 <_obstack_memory_used@@Base+0x32e8>
  4134b8:	stp	xzr, xzr, [x0]
  4134bc:	str	xzr, [x0, #16]
  4134c0:	b	4134b0 <_obstack_memory_used@@Base+0x3304>
  4134c4:	stp	x29, x30, [sp, #-64]!
  4134c8:	mov	x29, sp
  4134cc:	stp	x19, x20, [sp, #16]
  4134d0:	mov	x19, x0
  4134d4:	stp	x21, x22, [sp, #32]
  4134d8:	mov	x21, x2
  4134dc:	str	x23, [sp, #48]
  4134e0:	cbz	x1, 413540 <_obstack_memory_used@@Base+0x3394>
  4134e4:	ldr	x22, [x1, #8]
  4134e8:	mov	x23, x1
  4134ec:	cmp	x22, #0x0
  4134f0:	b.le	413540 <_obstack_memory_used@@Base+0x3394>
  4134f4:	cbz	x2, 413524 <_obstack_memory_used@@Base+0x3378>
  4134f8:	ldr	x20, [x2, #8]
  4134fc:	cmp	x20, #0x0
  413500:	b.le	413524 <_obstack_memory_used@@Base+0x3378>
  413504:	add	x0, x22, x20
  413508:	str	x0, [x19]
  41350c:	lsl	x0, x0, #3
  413510:	bl	402930 <malloc@plt>
  413514:	str	x0, [x19, #16]
  413518:	cbnz	x0, 413578 <_obstack_memory_used@@Base+0x33cc>
  41351c:	mov	w0, #0xc                   	// #12
  413520:	b	413564 <_obstack_memory_used@@Base+0x33b8>
  413524:	mov	x1, x23
  413528:	mov	x0, x19
  41352c:	ldp	x19, x20, [sp, #16]
  413530:	ldp	x21, x22, [sp, #32]
  413534:	ldr	x23, [sp, #48]
  413538:	ldp	x29, x30, [sp], #64
  41353c:	b	41344c <_obstack_memory_used@@Base+0x32a0>
  413540:	cbz	x21, 413558 <_obstack_memory_used@@Base+0x33ac>
  413544:	ldr	x0, [x21, #8]
  413548:	cmp	x0, #0x0
  41354c:	b.le	413558 <_obstack_memory_used@@Base+0x33ac>
  413550:	mov	x1, x21
  413554:	b	413528 <_obstack_memory_used@@Base+0x337c>
  413558:	stp	xzr, xzr, [x19]
  41355c:	str	xzr, [x19, #16]
  413560:	mov	w0, #0x0                   	// #0
  413564:	ldp	x19, x20, [sp, #16]
  413568:	ldp	x21, x22, [sp, #32]
  41356c:	ldr	x23, [sp, #48]
  413570:	ldp	x29, x30, [sp], #64
  413574:	ret
  413578:	ldr	x5, [x23, #16]
  41357c:	mov	x3, #0x0                   	// #0
  413580:	mov	x4, #0x0                   	// #0
  413584:	ldr	x1, [x21, #16]
  413588:	mov	x21, #0x0                   	// #0
  41358c:	ldr	x7, [x5, x4, lsl #3]
  413590:	mov	x6, x21
  413594:	ldr	x8, [x1, x3, lsl #3]
  413598:	add	x21, x21, #0x1
  41359c:	mov	x2, x21
  4135a0:	cmp	x7, x8
  4135a4:	b.le	4135e0 <_obstack_memory_used@@Base+0x3434>
  4135a8:	add	x3, x3, #0x1
  4135ac:	str	x8, [x0, x6, lsl #3]
  4135b0:	cmp	x22, x4
  4135b4:	b.le	4135f4 <_obstack_memory_used@@Base+0x3448>
  4135b8:	cmp	x20, x3
  4135bc:	b.gt	41358c <_obstack_memory_used@@Base+0x33e0>
  4135c0:	sub	x22, x22, x4
  4135c4:	add	x1, x5, x4, lsl #3
  4135c8:	add	x0, x0, x21, lsl #3
  4135cc:	lsl	x2, x22, #3
  4135d0:	bl	402750 <memcpy@plt>
  4135d4:	add	x2, x21, x22
  4135d8:	str	x2, [x19, #8]
  4135dc:	b	413560 <_obstack_memory_used@@Base+0x33b4>
  4135e0:	cset	x8, eq  // eq = none
  4135e4:	add	x4, x4, #0x1
  4135e8:	add	x3, x3, x8
  4135ec:	str	x7, [x0, x6, lsl #3]
  4135f0:	b	4135b0 <_obstack_memory_used@@Base+0x3404>
  4135f4:	cmp	x20, x3
  4135f8:	b.le	4135d8 <_obstack_memory_used@@Base+0x342c>
  4135fc:	sub	x20, x20, x3
  413600:	add	x1, x1, x3, lsl #3
  413604:	add	x0, x0, x21, lsl #3
  413608:	lsl	x2, x20, #3
  41360c:	bl	402750 <memcpy@plt>
  413610:	add	x2, x21, x20
  413614:	b	4135d8 <_obstack_memory_used@@Base+0x342c>
  413618:	stp	x29, x30, [sp, #-112]!
  41361c:	mov	x29, sp
  413620:	stp	x21, x22, [sp, #32]
  413624:	mov	x21, x1
  413628:	ldr	x1, [x2, #8]
  41362c:	stp	x19, x20, [sp, #16]
  413630:	stp	x23, x24, [sp, #48]
  413634:	mov	x23, x0
  413638:	stp	x25, x26, [sp, #64]
  41363c:	stp	x27, x28, [sp, #80]
  413640:	cbnz	x1, 413650 <_obstack_memory_used@@Base+0x34a4>
  413644:	str	wzr, [x0]
  413648:	mov	x19, #0x0                   	// #0
  41364c:	b	413768 <_obstack_memory_used@@Base+0x35bc>
  413650:	mov	x27, x2
  413654:	mov	w20, w3
  413658:	add	x22, x1, w3, uxtw
  41365c:	mov	x0, #0x0                   	// #0
  413660:	cmp	x1, x0
  413664:	b.gt	4136cc <_obstack_memory_used@@Base+0x3520>
  413668:	ldr	x0, [x21, #136]
  41366c:	mov	x1, #0x18                  	// #24
  413670:	mov	x7, #0x0                   	// #0
  413674:	and	x0, x22, x0
  413678:	mul	x0, x0, x1
  41367c:	ldr	x1, [x21, #64]
  413680:	add	x9, x1, x0
  413684:	ldr	x8, [x1, x0]
  413688:	cmp	x8, x7
  41368c:	b.gt	4136e0 <_obstack_memory_used@@Base+0x3534>
  413690:	mov	x1, #0x1                   	// #1
  413694:	mov	x0, #0x70                  	// #112
  413698:	bl	402a60 <calloc@plt>
  41369c:	mov	x19, x0
  4136a0:	cbz	x0, 4136c0 <_obstack_memory_used@@Base+0x3514>
  4136a4:	add	x24, x0, #0x8
  4136a8:	mov	x1, x27
  4136ac:	mov	x0, x24
  4136b0:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  4136b4:	cbz	w0, 413720 <_obstack_memory_used@@Base+0x3574>
  4136b8:	mov	x0, x19
  4136bc:	bl	402c20 <free@plt>
  4136c0:	mov	w0, #0xc                   	// #12
  4136c4:	str	w0, [x23]
  4136c8:	b	413648 <_obstack_memory_used@@Base+0x349c>
  4136cc:	ldr	x2, [x27, #16]
  4136d0:	ldr	x2, [x2, x0, lsl #3]
  4136d4:	add	x0, x0, #0x1
  4136d8:	add	x22, x22, x2
  4136dc:	b	413660 <_obstack_memory_used@@Base+0x34b4>
  4136e0:	ldr	x0, [x9, #16]
  4136e4:	ldr	x19, [x0, x7, lsl #3]
  4136e8:	ldr	x0, [x19]
  4136ec:	cmp	x0, x22
  4136f0:	b.ne	413718 <_obstack_memory_used@@Base+0x356c>  // b.any
  4136f4:	ldrb	w0, [x19, #104]
  4136f8:	and	w0, w0, #0xf
  4136fc:	cmp	w0, w20
  413700:	b.ne	413718 <_obstack_memory_used@@Base+0x356c>  // b.any
  413704:	ldr	x0, [x19, #80]
  413708:	mov	x1, x27
  41370c:	bl	4102d8 <_obstack_memory_used@@Base+0x12c>
  413710:	tst	w0, #0xff
  413714:	b.ne	413768 <_obstack_memory_used@@Base+0x35bc>  // b.any
  413718:	add	x7, x7, #0x1
  41371c:	b	413688 <_obstack_memory_used@@Base+0x34dc>
  413720:	ldrb	w0, [x19, #104]
  413724:	and	w26, w20, #0x2
  413728:	mov	x5, #0x0                   	// #0
  41372c:	mov	x25, #0x0                   	// #0
  413730:	str	x24, [x19, #80]
  413734:	bfxil	w0, w20, #0, #4
  413738:	strb	w0, [x19, #104]
  41373c:	and	w0, w20, #0x4
  413740:	and	w20, w20, #0x1
  413744:	str	w0, [sp, #108]
  413748:	ldr	x0, [x27, #8]
  41374c:	cmp	x25, x0
  413750:	b.lt	413788 <_obstack_memory_used@@Base+0x35dc>  // b.tstop
  413754:	mov	x2, x22
  413758:	mov	x1, x19
  41375c:	mov	x0, x21
  413760:	bl	413354 <_obstack_memory_used@@Base+0x31a8>
  413764:	cbnz	w0, 4137f8 <_obstack_memory_used@@Base+0x364c>
  413768:	mov	x0, x19
  41376c:	ldp	x19, x20, [sp, #16]
  413770:	ldp	x21, x22, [sp, #32]
  413774:	ldp	x23, x24, [sp, #48]
  413778:	ldp	x25, x26, [sp, #64]
  41377c:	ldp	x27, x28, [sp, #80]
  413780:	ldp	x29, x30, [sp], #112
  413784:	ret
  413788:	ldr	x0, [x27, #16]
  41378c:	ldr	x1, [x21]
  413790:	ldr	x0, [x0, x25, lsl #3]
  413794:	add	x0, x1, x0, lsl #4
  413798:	ldr	w28, [x0, #8]
  41379c:	ldrb	w1, [x0, #8]
  4137a0:	ubfx	x28, x28, #8, #10
  4137a4:	cmp	w28, #0x0
  4137a8:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  4137ac:	b.eq	413868 <_obstack_memory_used@@Base+0x36bc>  // b.none
  4137b0:	ldrb	w3, [x19, #104]
  4137b4:	cmp	w1, #0x2
  4137b8:	ldrb	w0, [x0, #10]
  4137bc:	ubfx	x4, x3, #5, #1
  4137c0:	ubfx	x0, x0, #4, #1
  4137c4:	orr	w0, w4, w0
  4137c8:	bfi	w3, w0, #5, #1
  4137cc:	strb	w3, [x19, #104]
  4137d0:	b.ne	413804 <_obstack_memory_used@@Base+0x3658>  // b.any
  4137d4:	orr	w3, w3, #0x10
  4137d8:	strb	w3, [x19, #104]
  4137dc:	cbz	w28, 413868 <_obstack_memory_used@@Base+0x36bc>
  4137e0:	ldr	x0, [x19, #80]
  4137e4:	cmp	x24, x0
  4137e8:	b.ne	413834 <_obstack_memory_used@@Base+0x3688>  // b.any
  4137ec:	mov	x0, #0x18                  	// #24
  4137f0:	bl	402930 <malloc@plt>
  4137f4:	cbnz	x0, 413814 <_obstack_memory_used@@Base+0x3668>
  4137f8:	mov	x0, x19
  4137fc:	bl	4115f0 <_obstack_memory_used@@Base+0x1444>
  413800:	b	4136c0 <_obstack_memory_used@@Base+0x3514>
  413804:	cmp	w1, #0x4
  413808:	b.ne	4137dc <_obstack_memory_used@@Base+0x3630>  // b.any
  41380c:	orr	w3, w3, #0x40
  413810:	b	4137d8 <_obstack_memory_used@@Base+0x362c>
  413814:	str	x0, [x19, #80]
  413818:	mov	x1, x27
  41381c:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  413820:	cbnz	w0, 4137f8 <_obstack_memory_used@@Base+0x364c>
  413824:	ldrb	w0, [x19, #104]
  413828:	mov	x5, #0x0                   	// #0
  41382c:	orr	w0, w0, #0xffffff80
  413830:	strb	w0, [x19, #104]
  413834:	tbz	w28, #0, 41383c <_obstack_memory_used@@Base+0x3690>
  413838:	cbz	w20, 413858 <_obstack_memory_used@@Base+0x36ac>
  41383c:	tbz	w28, #1, 413844 <_obstack_memory_used@@Base+0x3698>
  413840:	cbnz	w20, 413858 <_obstack_memory_used@@Base+0x36ac>
  413844:	tbz	w28, #4, 41384c <_obstack_memory_used@@Base+0x36a0>
  413848:	cbz	w26, 413858 <_obstack_memory_used@@Base+0x36ac>
  41384c:	tbz	w28, #6, 413868 <_obstack_memory_used@@Base+0x36bc>
  413850:	ldr	w0, [sp, #108]
  413854:	cbnz	w0, 413868 <_obstack_memory_used@@Base+0x36bc>
  413858:	sub	x1, x25, x5
  41385c:	mov	x0, x24
  413860:	bl	412464 <_obstack_memory_used@@Base+0x22b8>
  413864:	add	x5, x5, #0x1
  413868:	add	x25, x25, #0x1
  41386c:	b	413748 <_obstack_memory_used@@Base+0x359c>
  413870:	stp	x29, x30, [sp, #-32]!
  413874:	mov	x29, sp
  413878:	stp	x19, x20, [sp, #16]
  41387c:	mov	x19, x1
  413880:	ldrb	w1, [x1, #48]
  413884:	cmp	w1, #0x10
  413888:	b.ne	4138a8 <_obstack_memory_used@@Base+0x36fc>  // b.any
  41388c:	ldr	x0, [x19, #8]
  413890:	ldr	x1, [x0, #24]
  413894:	ldr	x0, [x0, #56]
  413898:	str	x1, [x19, #24]
  41389c:	str	x0, [x19, #56]
  4138a0:	mov	w0, #0x0                   	// #0
  4138a4:	b	4138f0 <_obstack_memory_used@@Base+0x3744>
  4138a8:	ldp	x1, x2, [x19, #40]
  4138ac:	str	x19, [x19, #24]
  4138b0:	mov	x20, x0
  4138b4:	bl	4113bc <_obstack_memory_used@@Base+0x1210>
  4138b8:	str	x0, [x19, #56]
  4138bc:	cmn	x0, #0x1
  4138c0:	b.eq	4138ec <_obstack_memory_used@@Base+0x3740>  // b.none
  4138c4:	ldrb	w1, [x19, #48]
  4138c8:	cmp	w1, #0xc
  4138cc:	b.ne	4138a0 <_obstack_memory_used@@Base+0x36f4>  // b.any
  4138d0:	ldr	x1, [x20]
  4138d4:	ldr	w2, [x19, #40]
  4138d8:	add	x0, x1, x0, lsl #4
  4138dc:	ldr	w1, [x0, #8]
  4138e0:	bfi	w1, w2, #8, #10
  4138e4:	str	w1, [x0, #8]
  4138e8:	b	4138a0 <_obstack_memory_used@@Base+0x36f4>
  4138ec:	mov	w0, #0xc                   	// #12
  4138f0:	ldp	x19, x20, [sp, #16]
  4138f4:	ldp	x29, x30, [sp], #32
  4138f8:	ret
  4138fc:	stp	x29, x30, [sp, #-112]!
  413900:	mov	x29, sp
  413904:	stp	x19, x20, [sp, #16]
  413908:	mov	x20, x2
  41390c:	ldr	x19, [x0, #56]
  413910:	stp	x25, x26, [sp, #64]
  413914:	mov	x25, #0x18                  	// #24
  413918:	mov	x26, x3
  41391c:	stp	x21, x22, [sp, #32]
  413920:	madd	x19, x1, x25, x19
  413924:	mov	x21, x0
  413928:	stp	x23, x24, [sp, #48]
  41392c:	mov	x24, x1
  413930:	mov	x23, #0x0                   	// #0
  413934:	stp	xzr, xzr, [sp, #88]
  413938:	str	xzr, [sp, #104]
  41393c:	ldr	x0, [x19, #8]
  413940:	cmp	x0, x23
  413944:	b.gt	413968 <_obstack_memory_used@@Base+0x37bc>
  413948:	mov	x6, #0x0                   	// #0
  41394c:	ldr	x0, [x19, #8]
  413950:	cmp	x0, x6
  413954:	b.gt	413a38 <_obstack_memory_used@@Base+0x388c>
  413958:	ldr	x0, [sp, #104]
  41395c:	mov	w22, #0x0                   	// #0
  413960:	bl	402c20 <free@plt>
  413964:	b	413a0c <_obstack_memory_used@@Base+0x3860>
  413968:	ldr	x0, [x19, #16]
  41396c:	ldr	x2, [x0, x23, lsl #3]
  413970:	cmp	x24, x2
  413974:	b.eq	413a30 <_obstack_memory_used@@Base+0x3884>  // b.none
  413978:	ldr	x0, [x21]
  41397c:	add	x0, x0, x2, lsl #4
  413980:	ldrb	w0, [x0, #8]
  413984:	tbz	w0, #3, 413a30 <_obstack_memory_used@@Base+0x3884>
  413988:	ldr	x0, [x21, #40]
  41398c:	mul	x6, x2, x25
  413990:	add	x0, x0, x6
  413994:	ldr	x2, [x0, #16]
  413998:	ldr	x0, [x0, #8]
  41399c:	ldr	x1, [x2]
  4139a0:	cmp	x0, #0x1
  4139a4:	b.le	413a28 <_obstack_memory_used@@Base+0x387c>
  4139a8:	ldr	x7, [x2, #8]
  4139ac:	mov	x0, x19
  4139b0:	bl	410334 <_obstack_memory_used@@Base+0x188>
  4139b4:	cbnz	x0, 4139c4 <_obstack_memory_used@@Base+0x3818>
  4139b8:	mov	x0, x20
  4139bc:	bl	410334 <_obstack_memory_used@@Base+0x188>
  4139c0:	cbnz	x0, 4139e8 <_obstack_memory_used@@Base+0x383c>
  4139c4:	cmp	x7, #0x0
  4139c8:	b.le	413a30 <_obstack_memory_used@@Base+0x3884>
  4139cc:	mov	x1, x7
  4139d0:	mov	x0, x19
  4139d4:	bl	410334 <_obstack_memory_used@@Base+0x188>
  4139d8:	cbnz	x0, 413a30 <_obstack_memory_used@@Base+0x3884>
  4139dc:	mov	x0, x20
  4139e0:	bl	410334 <_obstack_memory_used@@Base+0x188>
  4139e4:	cbz	x0, 413a30 <_obstack_memory_used@@Base+0x3884>
  4139e8:	ldr	x2, [x21, #56]
  4139ec:	mov	x1, x26
  4139f0:	add	x0, sp, #0x58
  4139f4:	add	x2, x2, x6
  4139f8:	bl	412700 <_obstack_memory_used@@Base+0x2554>
  4139fc:	mov	w22, w0
  413a00:	cbz	w0, 413a30 <_obstack_memory_used@@Base+0x3884>
  413a04:	ldr	x0, [sp, #104]
  413a08:	bl	402c20 <free@plt>
  413a0c:	mov	w0, w22
  413a10:	ldp	x19, x20, [sp, #16]
  413a14:	ldp	x21, x22, [sp, #32]
  413a18:	ldp	x23, x24, [sp, #48]
  413a1c:	ldp	x25, x26, [sp, #64]
  413a20:	ldp	x29, x30, [sp], #112
  413a24:	ret
  413a28:	mov	x7, #0xffffffffffffffff    	// #-1
  413a2c:	b	4139ac <_obstack_memory_used@@Base+0x3800>
  413a30:	add	x23, x23, #0x1
  413a34:	b	41393c <_obstack_memory_used@@Base+0x3790>
  413a38:	ldr	x0, [x19, #16]
  413a3c:	ldr	x1, [x0, x6, lsl #3]
  413a40:	add	x0, sp, #0x58
  413a44:	bl	410334 <_obstack_memory_used@@Base+0x188>
  413a48:	cbnz	x0, 413a60 <_obstack_memory_used@@Base+0x38b4>
  413a4c:	mov	x0, x20
  413a50:	bl	410334 <_obstack_memory_used@@Base+0x188>
  413a54:	sub	x1, x0, #0x1
  413a58:	mov	x0, x20
  413a5c:	bl	412464 <_obstack_memory_used@@Base+0x22b8>
  413a60:	add	x6, x6, #0x1
  413a64:	b	41394c <_obstack_memory_used@@Base+0x37a0>
  413a68:	stp	x29, x30, [sp, #-400]!
  413a6c:	mov	x29, sp
  413a70:	stp	x19, x20, [sp, #16]
  413a74:	mov	x19, x2
  413a78:	ldr	x20, [x0]
  413a7c:	stp	x21, x22, [sp, #32]
  413a80:	mov	x21, x0
  413a84:	stp	x23, x24, [sp, #48]
  413a88:	ldr	w0, [x20, #180]
  413a8c:	stp	x25, x26, [sp, #64]
  413a90:	cmp	w0, #0x1
  413a94:	stp	x27, x28, [sp, #80]
  413a98:	mov	x27, x1
  413a9c:	b.ne	413bac <_obstack_memory_used@@Base+0x3a00>  // b.any
  413aa0:	ldr	x25, [x21, #24]
  413aa4:	ubfx	w25, w25, #22, #1
  413aa8:	add	x22, sp, #0x90
  413aac:	mov	x26, #0x0                   	// #0
  413ab0:	ldr	x0, [x27, #16]
  413ab4:	cmp	x0, x26
  413ab8:	b.le	413d88 <_obstack_memory_used@@Base+0x3bdc>
  413abc:	ldr	x0, [x27, #24]
  413ac0:	ldr	x2, [x20]
  413ac4:	ldr	x24, [x0, x26, lsl #3]
  413ac8:	add	x0, x2, x24, lsl #4
  413acc:	lsl	x28, x24, #4
  413ad0:	ldrb	w23, [x0, #8]
  413ad4:	cmp	w23, #0x1
  413ad8:	b.ne	413bc0 <_obstack_memory_used@@Base+0x3a14>  // b.any
  413adc:	ldrb	w0, [x2, x28]
  413ae0:	ldrb	w2, [x2, x28]
  413ae4:	strb	w23, [x19, x2]
  413ae8:	cbz	w25, 413af4 <_obstack_memory_used@@Base+0x3948>
  413aec:	bl	402e00 <tolower@plt>
  413af0:	strb	w23, [x19, w0, sxtw]
  413af4:	ldr	x0, [x21, #24]
  413af8:	tbz	w0, #22, 413ba4 <_obstack_memory_used@@Base+0x39f8>
  413afc:	ldr	w0, [x20, #180]
  413b00:	cmp	w0, #0x1
  413b04:	b.le	413ba4 <_obstack_memory_used@@Base+0x39f8>
  413b08:	ldr	x0, [x20]
  413b0c:	mov	w3, #0x1                   	// #1
  413b10:	add	x2, x22, #0x1
  413b14:	movk	w3, #0x20, lsl #16
  413b18:	ldrb	w0, [x0, x28]
  413b1c:	strb	w0, [sp, #144]
  413b20:	ldr	x0, [x20, #16]
  413b24:	add	x24, x24, #0x1
  413b28:	cmp	x0, x24
  413b2c:	b.ls	413b54 <_obstack_memory_used@@Base+0x39a8>  // b.plast
  413b30:	ldr	x1, [x20]
  413b34:	mov	w5, #0xff                  	// #255
  413b38:	movk	w5, #0x20, lsl #16
  413b3c:	lsl	x4, x24, #4
  413b40:	add	x0, x1, x24, lsl #4
  413b44:	ldr	w0, [x0, #8]
  413b48:	and	w0, w0, w5
  413b4c:	cmp	w0, w3
  413b50:	b.eq	413bb4 <_obstack_memory_used@@Base+0x3a08>  // b.none
  413b54:	sub	x23, x2, x22
  413b58:	add	x3, sp, #0x88
  413b5c:	mov	x2, x23
  413b60:	mov	x1, x22
  413b64:	add	x0, sp, #0x84
  413b68:	str	xzr, [sp, #136]
  413b6c:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  413b70:	cmp	x23, x0
  413b74:	b.ne	413ba4 <_obstack_memory_used@@Base+0x39f8>  // b.any
  413b78:	ldr	w0, [sp, #132]
  413b7c:	bl	402e40 <towlower@plt>
  413b80:	mov	w1, w0
  413b84:	add	x2, sp, #0x88
  413b88:	mov	x0, x22
  413b8c:	bl	402e80 <wcrtomb@plt>
  413b90:	cmn	x0, #0x1
  413b94:	b.eq	413ba4 <_obstack_memory_used@@Base+0x39f8>  // b.none
  413b98:	ldrb	w0, [sp, #144]
  413b9c:	mov	w1, #0x1                   	// #1
  413ba0:	strb	w1, [x19, x0]
  413ba4:	add	x26, x26, #0x1
  413ba8:	b	413ab0 <_obstack_memory_used@@Base+0x3904>
  413bac:	mov	w25, #0x0                   	// #0
  413bb0:	b	413aa8 <_obstack_memory_used@@Base+0x38fc>
  413bb4:	ldrb	w0, [x1, x4]
  413bb8:	strb	w0, [x2], #1
  413bbc:	b	413b20 <_obstack_memory_used@@Base+0x3974>
  413bc0:	cmp	w23, #0x3
  413bc4:	b.ne	413c30 <_obstack_memory_used@@Base+0x3a84>  // b.any
  413bc8:	mov	x23, #0x0                   	// #0
  413bcc:	mov	w3, #0x1                   	// #1
  413bd0:	ldr	x0, [x20]
  413bd4:	lsl	x2, x23, #3
  413bd8:	mov	w24, #0x0                   	// #0
  413bdc:	ldr	x0, [x0, x28]
  413be0:	ldr	x4, [x0, x23]
  413be4:	lsr	x0, x4, x24
  413be8:	tbz	w0, #0, 413c10 <_obstack_memory_used@@Base+0x3a64>
  413bec:	strb	w3, [x19, x2]
  413bf0:	cbz	w25, 413c10 <_obstack_memory_used@@Base+0x3a64>
  413bf4:	mov	w0, w2
  413bf8:	stp	x2, x4, [sp, #104]
  413bfc:	str	w3, [sp, #124]
  413c00:	bl	402e00 <tolower@plt>
  413c04:	ldp	x2, x4, [sp, #104]
  413c08:	ldr	w3, [sp, #124]
  413c0c:	strb	w3, [x19, w0, sxtw]
  413c10:	add	w24, w24, #0x1
  413c14:	add	x2, x2, #0x1
  413c18:	cmp	w24, #0x40
  413c1c:	b.ne	413be4 <_obstack_memory_used@@Base+0x3a38>  // b.any
  413c20:	add	x23, x23, #0x8
  413c24:	cmp	x23, #0x20
  413c28:	b.ne	413bd0 <_obstack_memory_used@@Base+0x3a24>  // b.any
  413c2c:	b	413ba4 <_obstack_memory_used@@Base+0x39f8>
  413c30:	cmp	w23, #0x6
  413c34:	b.ne	413d50 <_obstack_memory_used@@Base+0x3ba4>  // b.any
  413c38:	ldr	w0, [x20, #180]
  413c3c:	ldr	x24, [x2, x28]
  413c40:	cmp	w0, #0x1
  413c44:	b.le	413d44 <_obstack_memory_used@@Base+0x3b98>
  413c48:	ldr	x0, [x24, #72]
  413c4c:	cbnz	x0, 413c60 <_obstack_memory_used@@Base+0x3ab4>
  413c50:	ldrb	w0, [x24, #32]
  413c54:	tbnz	w0, #0, 413c60 <_obstack_memory_used@@Base+0x3ab4>
  413c58:	ldr	x28, [x24, #64]
  413c5c:	cbz	x28, 413d48 <_obstack_memory_used@@Base+0x3b9c>
  413c60:	mov	w23, #0x1                   	// #1
  413c64:	strb	wzr, [sp, #136]
  413c68:	mov	x3, x22
  413c6c:	add	x1, sp, #0x88
  413c70:	mov	x2, #0x1                   	// #1
  413c74:	mov	x0, #0x0                   	// #0
  413c78:	str	xzr, [x22]
  413c7c:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  413c80:	cmn	x0, #0x2
  413c84:	b.ne	413c90 <_obstack_memory_used@@Base+0x3ae4>  // b.any
  413c88:	ldrb	w0, [sp, #136]
  413c8c:	strb	w23, [x19, x0]
  413c90:	ldrb	w0, [sp, #136]
  413c94:	add	w0, w0, #0x1
  413c98:	and	w0, w0, #0xff
  413c9c:	strb	w0, [sp, #136]
  413ca0:	cbnz	w0, 413c68 <_obstack_memory_used@@Base+0x3abc>
  413ca4:	b	413ba4 <_obstack_memory_used@@Base+0x39f8>
  413ca8:	str	xzr, [sp, #136]
  413cac:	lsl	x0, x28, #2
  413cb0:	str	x0, [sp, #104]
  413cb4:	lsl	x1, x28, #2
  413cb8:	ldr	x0, [x24]
  413cbc:	add	x2, sp, #0x88
  413cc0:	ldr	w1, [x0, x1]
  413cc4:	mov	x0, x22
  413cc8:	bl	402e80 <wcrtomb@plt>
  413ccc:	cmn	x0, #0x1
  413cd0:	b.eq	413cec <_obstack_memory_used@@Base+0x3b40>  // b.none
  413cd4:	ldrb	w1, [sp, #144]
  413cd8:	ldrb	w0, [sp, #144]
  413cdc:	strb	w23, [x19, x1]
  413ce0:	cbz	w25, 413cec <_obstack_memory_used@@Base+0x3b40>
  413ce4:	bl	402e00 <tolower@plt>
  413ce8:	strb	w23, [x19, w0, sxtw]
  413cec:	ldr	x0, [x21, #24]
  413cf0:	tbz	w0, #22, 413d30 <_obstack_memory_used@@Base+0x3b84>
  413cf4:	ldr	w0, [x20, #180]
  413cf8:	cmp	w0, #0x1
  413cfc:	b.le	413d30 <_obstack_memory_used@@Base+0x3b84>
  413d00:	ldr	x0, [x24]
  413d04:	lsl	x1, x28, #2
  413d08:	ldr	w0, [x0, x1]
  413d0c:	bl	402e40 <towlower@plt>
  413d10:	mov	w1, w0
  413d14:	add	x2, sp, #0x88
  413d18:	mov	x0, x22
  413d1c:	bl	402e80 <wcrtomb@plt>
  413d20:	cmn	x0, #0x1
  413d24:	b.eq	413d30 <_obstack_memory_used@@Base+0x3b84>  // b.none
  413d28:	ldrb	w0, [sp, #144]
  413d2c:	strb	w23, [x19, x0]
  413d30:	add	x28, x28, #0x1
  413d34:	ldr	x0, [x24, #40]
  413d38:	cmp	x0, x28
  413d3c:	b.gt	413ca8 <_obstack_memory_used@@Base+0x3afc>
  413d40:	b	413ba4 <_obstack_memory_used@@Base+0x39f8>
  413d44:	mov	x28, #0x0                   	// #0
  413d48:	mov	w23, #0x1                   	// #1
  413d4c:	b	413d34 <_obstack_memory_used@@Base+0x3b88>
  413d50:	and	w0, w23, #0xfffffffd
  413d54:	cmp	w0, #0x5
  413d58:	b.eq	413d64 <_obstack_memory_used@@Base+0x3bb8>  // b.none
  413d5c:	cmp	w23, #0x2
  413d60:	b.ne	413ba4 <_obstack_memory_used@@Base+0x39f8>  // b.any
  413d64:	mov	x0, x19
  413d68:	mov	x2, #0x100                 	// #256
  413d6c:	mov	w1, #0x1                   	// #1
  413d70:	bl	402a10 <memset@plt>
  413d74:	cmp	w23, #0x2
  413d78:	b.ne	413d88 <_obstack_memory_used@@Base+0x3bdc>  // b.any
  413d7c:	ldrb	w0, [x21, #56]
  413d80:	orr	w0, w0, #0x1
  413d84:	strb	w0, [x21, #56]
  413d88:	ldp	x19, x20, [sp, #16]
  413d8c:	ldp	x21, x22, [sp, #32]
  413d90:	ldp	x23, x24, [sp, #48]
  413d94:	ldp	x25, x26, [sp, #64]
  413d98:	ldp	x27, x28, [sp, #80]
  413d9c:	ldp	x29, x30, [sp], #400
  413da0:	ret
  413da4:	cbnz	x0, 413dfc <_obstack_memory_used@@Base+0x3c50>
  413da8:	mov	w0, #0x0                   	// #0
  413dac:	ret
  413db0:	mul	x21, x20, x22
  413db4:	add	x20, x20, #0x1
  413db8:	add	x0, x0, x21
  413dbc:	ldr	x0, [x0, #40]
  413dc0:	bl	402c20 <free@plt>
  413dc4:	ldr	x0, [x19, #16]
  413dc8:	add	x0, x0, x21
  413dcc:	ldr	x0, [x0, #16]
  413dd0:	bl	402c20 <free@plt>
  413dd4:	ldr	x1, [x19]
  413dd8:	ldr	x0, [x19, #16]
  413ddc:	cmp	x20, x1
  413de0:	b.lt	413db0 <_obstack_memory_used@@Base+0x3c04>  // b.tstop
  413de4:	bl	402c20 <free@plt>
  413de8:	mov	w0, #0x0                   	// #0
  413dec:	ldp	x19, x20, [sp, #16]
  413df0:	ldp	x21, x22, [sp, #32]
  413df4:	ldp	x29, x30, [sp], #48
  413df8:	ret
  413dfc:	stp	x29, x30, [sp, #-48]!
  413e00:	mov	x29, sp
  413e04:	stp	x19, x20, [sp, #16]
  413e08:	mov	x19, x0
  413e0c:	mov	x20, #0x0                   	// #0
  413e10:	stp	x21, x22, [sp, #32]
  413e14:	mov	x22, #0x30                  	// #48
  413e18:	b	413dd4 <_obstack_memory_used@@Base+0x3c28>
  413e1c:	stp	x29, x30, [sp, #-32]!
  413e20:	mov	x7, x0
  413e24:	mov	x6, x1
  413e28:	mov	x29, sp
  413e2c:	mov	x0, x1
  413e30:	ldr	x1, [x1, #72]
  413e34:	mov	x9, x2
  413e38:	mov	w8, w3
  413e3c:	mov	x11, x4
  413e40:	and	w12, w5, #0xff
  413e44:	bl	4121a8 <_obstack_memory_used@@Base+0x1ffc>
  413e48:	cmp	w0, #0x1
  413e4c:	b.le	413e78 <_obstack_memory_used@@Base+0x3ccc>
  413e50:	mov	w10, w0
  413e54:	mov	w0, #0x1                   	// #1
  413e58:	str	w0, [x7]
  413e5c:	mov	x0, x6
  413e60:	bl	410258 <_obstack_memory_used@@Base+0xac>
  413e64:	str	w0, [x7, #8]
  413e68:	add	x10, x1, w10, sxtw
  413e6c:	str	x10, [x6, #72]
  413e70:	mov	w0, #0x0                   	// #0
  413e74:	b	413ea8 <_obstack_memory_used@@Base+0x3cfc>
  413e78:	ldrb	w0, [x9, #8]
  413e7c:	add	x1, x1, w8, sxtw
  413e80:	str	x1, [x6, #72]
  413e84:	and	w2, w0, #0xfffffffb
  413e88:	cmp	w2, #0x1a
  413e8c:	b.eq	413e98 <_obstack_memory_used@@Base+0x3cec>  // b.none
  413e90:	cmp	w0, #0x1c
  413e94:	b.ne	413fd4 <_obstack_memory_used@@Base+0x3e28>  // b.any
  413e98:	ldr	x0, [x6, #104]
  413e9c:	cmp	x1, x0
  413ea0:	b.lt	413eb0 <_obstack_memory_used@@Base+0x3d04>  // b.tstop
  413ea4:	mov	w0, #0x7                   	// #7
  413ea8:	ldp	x29, x30, [sp], #32
  413eac:	ret
  413eb0:	ldrb	w12, [x9]
  413eb4:	mov	x10, #0x0                   	// #0
  413eb8:	ldrb	w0, [x9, #8]
  413ebc:	mov	w11, w10
  413ec0:	ldr	x1, [x6, #72]
  413ec4:	cmp	w0, #0x1e
  413ec8:	b.ne	413ed4 <_obstack_memory_used@@Base+0x3d28>  // b.any
  413ecc:	ldrb	w0, [x6, #139]
  413ed0:	cbnz	w0, 413ee4 <_obstack_memory_used@@Base+0x3d38>
  413ed4:	add	x2, x1, #0x1
  413ed8:	str	x2, [x6, #72]
  413edc:	ldr	x0, [x6, #8]
  413ee0:	b	413f88 <_obstack_memory_used@@Base+0x3ddc>
  413ee4:	ldrb	w0, [x6, #140]
  413ee8:	cbz	w0, 413f74 <_obstack_memory_used@@Base+0x3dc8>
  413eec:	ldr	x0, [x6, #48]
  413ef0:	cmp	x0, x1
  413ef4:	b.eq	413f08 <_obstack_memory_used@@Base+0x3d5c>  // b.none
  413ef8:	ldr	x0, [x6, #16]
  413efc:	ldr	w0, [x0, x1, lsl #2]
  413f00:	cmn	w0, #0x1
  413f04:	b.eq	413ed4 <_obstack_memory_used@@Base+0x3d28>  // b.none
  413f08:	ldr	x2, [x6, #24]
  413f0c:	ldr	x0, [x6]
  413f10:	ldr	x3, [x2, x1, lsl #3]
  413f14:	ldr	x2, [x6, #40]
  413f18:	add	x0, x0, x3
  413f1c:	ldrb	w8, [x0, x2]
  413f20:	tbnz	w8, #7, 413ed4 <_obstack_memory_used@@Base+0x3d28>
  413f24:	mov	x0, x6
  413f28:	bl	4121a8 <_obstack_memory_used@@Base+0x1ffc>
  413f2c:	add	x1, x1, w0, sxtw
  413f30:	str	x1, [x6, #72]
  413f34:	ldr	x0, [x6, #72]
  413f38:	ldr	x1, [x6, #104]
  413f3c:	cmp	x1, x0
  413f40:	b.le	413ea4 <_obstack_memory_used@@Base+0x3cf8>
  413f44:	cmp	w12, w8
  413f48:	ldr	x1, [x7, #8]
  413f4c:	b.ne	413f60 <_obstack_memory_used@@Base+0x3db4>  // b.any
  413f50:	ldr	x2, [x6, #8]
  413f54:	ldrb	w2, [x2, x0]
  413f58:	cmp	w2, #0x5d
  413f5c:	b.eq	413f90 <_obstack_memory_used@@Base+0x3de4>  // b.none
  413f60:	strb	w8, [x1, x10]
  413f64:	add	x10, x10, #0x1
  413f68:	cmp	x10, #0x20
  413f6c:	b.ne	413eb8 <_obstack_memory_used@@Base+0x3d0c>  // b.any
  413f70:	b	413ea4 <_obstack_memory_used@@Base+0x3cf8>
  413f74:	ldr	x0, [x6]
  413f78:	add	x3, x1, #0x1
  413f7c:	ldr	x2, [x6, #40]
  413f80:	str	x3, [x6, #72]
  413f84:	add	x0, x0, x2
  413f88:	ldrb	w8, [x0, x1]
  413f8c:	b	413f34 <_obstack_memory_used@@Base+0x3d88>
  413f90:	add	x0, x0, #0x1
  413f94:	str	x0, [x6, #72]
  413f98:	strb	wzr, [x1, w11, sxtw]
  413f9c:	ldrb	w0, [x9, #8]
  413fa0:	cmp	w0, #0x1c
  413fa4:	b.eq	413fc4 <_obstack_memory_used@@Base+0x3e18>  // b.none
  413fa8:	cmp	w0, #0x1e
  413fac:	b.eq	413fcc <_obstack_memory_used@@Base+0x3e20>  // b.none
  413fb0:	cmp	w0, #0x1a
  413fb4:	b.ne	413e70 <_obstack_memory_used@@Base+0x3cc4>  // b.any
  413fb8:	mov	w0, #0x3                   	// #3
  413fbc:	str	w0, [x7]
  413fc0:	b	413e70 <_obstack_memory_used@@Base+0x3cc4>
  413fc4:	mov	w0, #0x2                   	// #2
  413fc8:	b	413fbc <_obstack_memory_used@@Base+0x3e10>
  413fcc:	mov	w0, #0x4                   	// #4
  413fd0:	b	413fbc <_obstack_memory_used@@Base+0x3e10>
  413fd4:	cmp	w0, #0x16
  413fd8:	b.ne	414004 <_obstack_memory_used@@Base+0x3e58>  // b.any
  413fdc:	cbnz	w12, 414004 <_obstack_memory_used@@Base+0x3e58>
  413fe0:	mov	x2, x11
  413fe4:	mov	x1, x6
  413fe8:	add	x0, sp, #0x10
  413fec:	bl	410390 <_obstack_memory_used@@Base+0x1e4>
  413ff0:	ldrb	w0, [sp, #24]
  413ff4:	cmp	w0, #0x15
  413ff8:	b.eq	414004 <_obstack_memory_used@@Base+0x3e58>  // b.none
  413ffc:	mov	w0, #0xb                   	// #11
  414000:	b	413ea8 <_obstack_memory_used@@Base+0x3cfc>
  414004:	ldrb	w0, [x9]
  414008:	str	wzr, [x7]
  41400c:	strb	w0, [x7, #8]
  414010:	b	413e70 <_obstack_memory_used@@Base+0x3cc4>
  414014:	stp	x29, x30, [sp, #-96]!
  414018:	mov	x29, sp
  41401c:	stp	x19, x20, [sp, #16]
  414020:	mov	x19, x0
  414024:	stp	x25, x26, [sp, #64]
  414028:	ldr	x25, [x1, #72]
  41402c:	stp	x21, x22, [sp, #32]
  414030:	ldr	x0, [x1, #104]
  414034:	stp	x23, x24, [sp, #48]
  414038:	cmp	x0, x25
  41403c:	b.gt	414064 <_obstack_memory_used@@Base+0x3eb8>
  414040:	mov	w0, #0x2                   	// #2
  414044:	strb	w0, [x19, #8]
  414048:	mov	w0, #0x0                   	// #0
  41404c:	ldp	x19, x20, [sp, #16]
  414050:	ldp	x21, x22, [sp, #32]
  414054:	ldp	x23, x24, [sp, #48]
  414058:	ldp	x25, x26, [sp, #64]
  41405c:	ldp	x29, x30, [sp], #96
  414060:	ret
  414064:	ldr	x26, [x1, #8]
  414068:	mov	x21, x1
  41406c:	ldrb	w0, [x19, #10]
  414070:	mov	x20, x2
  414074:	ldrb	w22, [x26, x25]
  414078:	and	w0, w0, #0xffffff9f
  41407c:	strb	w22, [x19]
  414080:	strb	w0, [x19, #10]
  414084:	ldr	w0, [x1, #144]
  414088:	cmp	w0, #0x1
  41408c:	b.le	4140d0 <_obstack_memory_used@@Base+0x3f24>
  414090:	ldr	x1, [x1, #48]
  414094:	cmp	x25, x1
  414098:	b.eq	4140d0 <_obstack_memory_used@@Base+0x3f24>  // b.none
  41409c:	ldr	x1, [x21, #16]
  4140a0:	ldr	w1, [x1, x25, lsl #2]
  4140a4:	cmn	w1, #0x1
  4140a8:	b.ne	4140d0 <_obstack_memory_used@@Base+0x3f24>  // b.any
  4140ac:	ldr	w0, [x19, #8]
  4140b0:	mov	w1, #0x1                   	// #1
  4140b4:	movk	w1, #0x20, lsl #16
  4140b8:	and	w0, w0, #0xffffff00
  4140bc:	and	w0, w0, #0xffdfffff
  4140c0:	orr	w0, w0, w1
  4140c4:	str	w0, [x19, #8]
  4140c8:	mov	w0, #0x1                   	// #1
  4140cc:	b	41404c <_obstack_memory_used@@Base+0x3ea0>
  4140d0:	cmp	w22, #0x5c
  4140d4:	b.ne	4143c0 <_obstack_memory_used@@Base+0x4214>  // b.any
  4140d8:	ldr	x2, [x21, #88]
  4140dc:	add	x1, x25, #0x1
  4140e0:	cmp	x1, x2
  4140e4:	b.lt	4140f4 <_obstack_memory_used@@Base+0x3f48>  // b.tstop
  4140e8:	mov	w0, #0x24                  	// #36
  4140ec:	strb	w0, [x19, #8]
  4140f0:	b	4140c8 <_obstack_memory_used@@Base+0x3f1c>
  4140f4:	ldrb	w2, [x21, #139]
  4140f8:	cbnz	w2, 414104 <_obstack_memory_used@@Base+0x3f58>
  4140fc:	ldrb	w22, [x26, x1]
  414100:	b	414168 <_obstack_memory_used@@Base+0x3fbc>
  414104:	cmp	w0, #0x1
  414108:	b.le	414140 <_obstack_memory_used@@Base+0x3f94>
  41410c:	ldr	x2, [x21, #16]
  414110:	lsl	x3, x1, #2
  414114:	ldr	w4, [x2, x3]
  414118:	cmn	w4, #0x1
  41411c:	b.eq	4140fc <_obstack_memory_used@@Base+0x3f50>  // b.none
  414120:	ldr	x4, [x21, #48]
  414124:	add	x25, x25, #0x2
  414128:	cmp	x4, x25
  41412c:	b.eq	414140 <_obstack_memory_used@@Base+0x3f94>  // b.none
  414130:	add	x2, x2, x3
  414134:	ldr	w2, [x2, #4]
  414138:	cmn	w2, #0x1
  41413c:	b.eq	4140fc <_obstack_memory_used@@Base+0x3f50>  // b.none
  414140:	ldrb	w3, [x21, #140]
  414144:	cbz	w3, 4141cc <_obstack_memory_used@@Base+0x4020>
  414148:	ldr	x2, [x21, #24]
  41414c:	ldr	x4, [x2, x1, lsl #3]
  414150:	ldr	x2, [x21]
  414154:	ldr	x5, [x21, #40]
  414158:	add	x2, x2, x4
  41415c:	ldrb	w22, [x2, x5]
  414160:	cbz	w3, 414168 <_obstack_memory_used@@Base+0x3fbc>
  414164:	tbnz	w22, #7, 4140fc <_obstack_memory_used@@Base+0x3f50>
  414168:	mov	w2, #0x1                   	// #1
  41416c:	strb	w22, [x19]
  414170:	strb	w2, [x19, #8]
  414174:	cmp	w0, #0x1
  414178:	ldrb	w23, [x19, #10]
  41417c:	b.le	4141d4 <_obstack_memory_used@@Base+0x4028>
  414180:	mov	x0, x21
  414184:	bl	410258 <_obstack_memory_used@@Base+0xac>
  414188:	mov	w21, w0
  41418c:	bl	402d30 <iswalnum@plt>
  414190:	cbnz	w0, 4141f0 <_obstack_memory_used@@Base+0x4044>
  414194:	cmp	w21, #0x5f
  414198:	cset	w1, eq  // eq = none
  41419c:	mov	w0, w23
  4141a0:	cmp	w22, #0x53
  4141a4:	bfi	w0, w1, #6, #1
  4141a8:	strb	w0, [x19, #10]
  4141ac:	b.eq	414310 <_obstack_memory_used@@Base+0x4164>  // b.none
  4141b0:	b.hi	41423c <_obstack_memory_used@@Base+0x4090>  // b.pmore
  4141b4:	sub	w1, w22, #0x27
  4141b8:	and	w0, w1, #0xff
  4141bc:	cmp	w0, #0x1b
  4141c0:	b.ls	41421c <_obstack_memory_used@@Base+0x4070>  // b.plast
  4141c4:	mov	w0, #0x2                   	// #2
  4141c8:	b	41404c <_obstack_memory_used@@Base+0x3ea0>
  4141cc:	mov	x4, x1
  4141d0:	b	414150 <_obstack_memory_used@@Base+0x3fa4>
  4141d4:	bl	402c00 <__ctype_b_loc@plt>
  4141d8:	ldr	x0, [x0]
  4141dc:	ubfiz	x1, x22, #1, #8
  4141e0:	ldrh	w0, [x0, x1]
  4141e4:	tbnz	w0, #3, 4141f0 <_obstack_memory_used@@Base+0x4044>
  4141e8:	cmp	w22, #0x5f
  4141ec:	b	414198 <_obstack_memory_used@@Base+0x3fec>
  4141f0:	mov	w1, #0x1                   	// #1
  4141f4:	b	41419c <_obstack_memory_used@@Base+0x3ff0>
  4141f8:	sub	w22, w22, #0x73
  4141fc:	cmp	w22, #0xa
  414200:	b.hi	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.pmore
  414204:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  414208:	add	x0, x0, #0xfe0
  41420c:	ldrb	w0, [x0, w22, uxtw]
  414210:	adr	x1, 41421c <_obstack_memory_used@@Base+0x4070>
  414214:	add	x0, x1, w0, sxtb #2
  414218:	br	x0
  41421c:	cmp	w1, #0x1b
  414220:	b.hi	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.pmore
  414224:	adrp	x0, 41c000 <_obstack_memory_used@@Base+0xbe54>
  414228:	add	x0, x0, #0xfec
  41422c:	ldrb	w0, [x0, w1, uxtw]
  414230:	adr	x1, 41423c <_obstack_memory_used@@Base+0x4090>
  414234:	add	x0, x1, w0, sxtb #2
  414238:	br	x0
  41423c:	cmp	w22, #0x7d
  414240:	b.hi	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.pmore
  414244:	cmp	w22, #0x72
  414248:	b.hi	4141f8 <_obstack_memory_used@@Base+0x404c>  // b.pmore
  41424c:	cmp	w22, #0x60
  414250:	b.eq	41431c <_obstack_memory_used@@Base+0x4170>  // b.none
  414254:	cmp	w22, #0x62
  414258:	b.eq	4142d0 <_obstack_memory_used@@Base+0x4124>  // b.none
  41425c:	cmp	w22, #0x57
  414260:	b.ne	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.any
  414264:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414268:	mov	w0, #0x21                  	// #33
  41426c:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  414270:	mov	x0, #0x8400                	// #33792
  414274:	tst	x20, x0
  414278:	b.ne	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.any
  41427c:	mov	w0, #0xa                   	// #10
  414280:	strb	w0, [x19, #8]
  414284:	b	4141c4 <_obstack_memory_used@@Base+0x4018>
  414288:	tbnz	w20, #14, 4141c4 <_obstack_memory_used@@Base+0x4018>
  41428c:	sub	w22, w22, #0x31
  414290:	mov	w0, #0x4                   	// #4
  414294:	strb	w0, [x19, #8]
  414298:	sxtw	x22, w22
  41429c:	str	x22, [x19]
  4142a0:	b	4141c4 <_obstack_memory_used@@Base+0x4018>
  4142a4:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  4142a8:	mov	w0, #0xc                   	// #12
  4142ac:	strb	w0, [x19, #8]
  4142b0:	mov	w0, #0x6                   	// #6
  4142b4:	str	w0, [x19]
  4142b8:	b	4141c4 <_obstack_memory_used@@Base+0x4018>
  4142bc:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  4142c0:	mov	w0, #0xc                   	// #12
  4142c4:	strb	w0, [x19, #8]
  4142c8:	mov	w0, #0x9                   	// #9
  4142cc:	b	4142b4 <_obstack_memory_used@@Base+0x4108>
  4142d0:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  4142d4:	mov	w0, #0xc                   	// #12
  4142d8:	strb	w0, [x19, #8]
  4142dc:	mov	w0, #0x100                 	// #256
  4142e0:	b	4142b4 <_obstack_memory_used@@Base+0x4108>
  4142e4:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  4142e8:	mov	w0, #0xc                   	// #12
  4142ec:	strb	w0, [x19, #8]
  4142f0:	mov	w0, #0x200                 	// #512
  4142f4:	b	4142b4 <_obstack_memory_used@@Base+0x4108>
  4142f8:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  4142fc:	mov	w0, #0x20                  	// #32
  414300:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  414304:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414308:	mov	w0, #0x22                  	// #34
  41430c:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  414310:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414314:	mov	w0, #0x23                  	// #35
  414318:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  41431c:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414320:	mov	w0, #0xc                   	// #12
  414324:	strb	w0, [x19, #8]
  414328:	mov	w0, #0x40                  	// #64
  41432c:	b	4142b4 <_obstack_memory_used@@Base+0x4108>
  414330:	tbnz	w20, #19, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414334:	mov	w0, #0xc                   	// #12
  414338:	strb	w0, [x19, #8]
  41433c:	mov	w0, #0x80                  	// #128
  414340:	b	4142b4 <_obstack_memory_used@@Base+0x4108>
  414344:	tbnz	w20, #13, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414348:	mov	w0, #0x8                   	// #8
  41434c:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  414350:	tbnz	w20, #13, 4141c4 <_obstack_memory_used@@Base+0x4018>
  414354:	mov	w0, #0x9                   	// #9
  414358:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  41435c:	mov	x0, #0x402                 	// #1026
  414360:	and	x0, x20, x0
  414364:	cmp	x0, #0x2
  414368:	b.ne	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.any
  41436c:	mov	w1, #0x12                  	// #18
  414370:	strb	w1, [x19, #8]
  414374:	b	41404c <_obstack_memory_used@@Base+0x3ea0>
  414378:	mov	x1, #0x402                 	// #1026
  41437c:	and	x0, x20, x1
  414380:	cmp	x0, #0x2
  414384:	b.ne	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.any
  414388:	mov	w1, #0x13                  	// #19
  41438c:	b	414370 <_obstack_memory_used@@Base+0x41c4>
  414390:	mov	x0, #0x1200                	// #4608
  414394:	and	x0, x20, x0
  414398:	cmp	x0, #0x200
  41439c:	b.ne	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.any
  4143a0:	mov	w0, #0x17                  	// #23
  4143a4:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  4143a8:	mov	x0, #0x1200                	// #4608
  4143ac:	and	x0, x20, x0
  4143b0:	cmp	x0, #0x200
  4143b4:	b.ne	4141c4 <_obstack_memory_used@@Base+0x4018>  // b.any
  4143b8:	mov	w0, #0x18                  	// #24
  4143bc:	b	414280 <_obstack_memory_used@@Base+0x40d4>
  4143c0:	mov	w1, #0x1                   	// #1
  4143c4:	strb	w1, [x19, #8]
  4143c8:	ldrb	w24, [x19, #10]
  4143cc:	cmp	w0, #0x1
  4143d0:	b.le	414424 <_obstack_memory_used@@Base+0x4278>
  4143d4:	mov	x1, x25
  4143d8:	mov	x0, x21
  4143dc:	bl	410258 <_obstack_memory_used@@Base+0xac>
  4143e0:	mov	w23, w0
  4143e4:	bl	402d30 <iswalnum@plt>
  4143e8:	cbnz	w0, 414440 <_obstack_memory_used@@Base+0x4294>
  4143ec:	cmp	w23, #0x5f
  4143f0:	cset	w2, eq  // eq = none
  4143f4:	mov	w0, w24
  4143f8:	cmp	w22, #0x2e
  4143fc:	bfi	w0, w2, #6, #1
  414400:	strb	w0, [x19, #10]
  414404:	b.hi	41446c <_obstack_memory_used@@Base+0x42c0>  // b.pmore
  414408:	cmp	w22, #0x23
  41440c:	b.hi	414448 <_obstack_memory_used@@Base+0x429c>  // b.pmore
  414410:	cmp	w22, #0xa
  414414:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  414418:	tbz	w20, #11, 4140c8 <_obstack_memory_used@@Base+0x3f1c>
  41441c:	mov	w0, #0xa                   	// #10
  414420:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  414424:	bl	402c00 <__ctype_b_loc@plt>
  414428:	ldr	x0, [x0]
  41442c:	ubfiz	x2, x22, #1, #8
  414430:	ldrh	w0, [x0, x2]
  414434:	tbnz	w0, #3, 414440 <_obstack_memory_used@@Base+0x4294>
  414438:	cmp	w22, #0x5f
  41443c:	b	4143f0 <_obstack_memory_used@@Base+0x4244>
  414440:	mov	w2, #0x1                   	// #1
  414444:	b	4143f4 <_obstack_memory_used@@Base+0x4248>
  414448:	sub	w22, w22, #0x24
  41444c:	cmp	w22, #0xa
  414450:	b.hi	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.pmore
  414454:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xce54>
  414458:	add	x0, x0, #0x8
  41445c:	ldrh	w0, [x0, w22, uxtw #1]
  414460:	adr	x1, 41446c <_obstack_memory_used@@Base+0x42c0>
  414464:	add	x0, x1, w0, sxth #2
  414468:	br	x0
  41446c:	cmp	w22, #0x7b
  414470:	b.eq	4144f8 <_obstack_memory_used@@Base+0x434c>  // b.none
  414474:	b.hi	4144a4 <_obstack_memory_used@@Base+0x42f8>  // b.pmore
  414478:	cmp	w22, #0x5b
  41447c:	b.eq	414524 <_obstack_memory_used@@Base+0x4378>  // b.none
  414480:	cmp	w22, #0x5e
  414484:	b.eq	414534 <_obstack_memory_used@@Base+0x4388>  // b.none
  414488:	cmp	w22, #0x3f
  41448c:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  414490:	mov	x0, #0x402                 	// #1026
  414494:	tst	x20, x0
  414498:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  41449c:	mov	w0, #0x13                  	// #19
  4144a0:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  4144a4:	cmp	w22, #0x7c
  4144a8:	b.eq	4144c8 <_obstack_memory_used@@Base+0x431c>  // b.none
  4144ac:	cmp	w22, #0x7d
  4144b0:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  4144b4:	mov	x0, #0x1200                	// #4608
  4144b8:	bics	xzr, x0, x20
  4144bc:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  4144c0:	mov	w0, #0x18                  	// #24
  4144c4:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  4144c8:	mov	x0, #0x8400                	// #33792
  4144cc:	and	x0, x20, x0
  4144d0:	cmp	x0, #0x8, lsl #12
  4144d4:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  4144d8:	b	41441c <_obstack_memory_used@@Base+0x4270>
  4144dc:	mov	w0, #0xb                   	// #11
  4144e0:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  4144e4:	mov	x0, #0x402                 	// #1026
  4144e8:	tst	x20, x0
  4144ec:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  4144f0:	mov	w0, #0x12                  	// #18
  4144f4:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  4144f8:	mov	x0, #0x1200                	// #4608
  4144fc:	bics	xzr, x0, x20
  414500:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  414504:	mov	w0, #0x17                  	// #23
  414508:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  41450c:	tbz	w20, #13, 4140c8 <_obstack_memory_used@@Base+0x3f1c>
  414510:	mov	w0, #0x8                   	// #8
  414514:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  414518:	tbz	w20, #13, 4140c8 <_obstack_memory_used@@Base+0x3f1c>
  41451c:	mov	w0, #0x9                   	// #9
  414520:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  414524:	mov	w0, #0x14                  	// #20
  414528:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  41452c:	mov	w0, #0x5                   	// #5
  414530:	b	4140ec <_obstack_memory_used@@Base+0x3f40>
  414534:	and	x0, x20, #0xfffff8
  414538:	and	x0, x0, #0xffffffffff80000f
  41453c:	cbnz	x0, 414558 <_obstack_memory_used@@Base+0x43ac>
  414540:	cbz	x25, 414558 <_obstack_memory_used@@Base+0x43ac>
  414544:	add	x1, x26, x25
  414548:	ldurb	w0, [x1, #-1]
  41454c:	tbz	w20, #11, 4140c8 <_obstack_memory_used@@Base+0x3f1c>
  414550:	cmp	w0, #0xa
  414554:	b.ne	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.any
  414558:	mov	w0, #0xc                   	// #12
  41455c:	strb	w0, [x19, #8]
  414560:	mov	w0, #0x10                  	// #16
  414564:	str	w0, [x19]
  414568:	b	4140c8 <_obstack_memory_used@@Base+0x3f1c>
  41456c:	tbnz	w20, #3, 4145b4 <_obstack_memory_used@@Base+0x4408>
  414570:	ldr	x0, [x21, #88]
  414574:	add	x1, x25, #0x1
  414578:	cmp	x1, x0
  41457c:	b.eq	4145b4 <_obstack_memory_used@@Base+0x4408>  // b.none
  414580:	str	x1, [x21, #72]
  414584:	mov	x2, x20
  414588:	add	x0, sp, #0x50
  41458c:	mov	x1, x21
  414590:	bl	414014 <_obstack_memory_used@@Base+0x3e68>
  414594:	ldr	x0, [x21, #72]
  414598:	sub	x0, x0, #0x1
  41459c:	str	x0, [x21, #72]
  4145a0:	ldrb	w0, [sp, #88]
  4145a4:	sub	w0, w0, #0x9
  4145a8:	and	w0, w0, #0xff
  4145ac:	cmp	w0, #0x1
  4145b0:	b.hi	4140c8 <_obstack_memory_used@@Base+0x3f1c>  // b.pmore
  4145b4:	mov	w0, #0xc                   	// #12
  4145b8:	strb	w0, [x19, #8]
  4145bc:	mov	w0, #0x20                  	// #32
  4145c0:	b	414564 <_obstack_memory_used@@Base+0x43b8>
  4145c4:	stp	x29, x30, [sp, #-32]!
  4145c8:	mov	x29, sp
  4145cc:	str	x19, [sp, #16]
  4145d0:	mov	x19, x1
  4145d4:	bl	414014 <_obstack_memory_used@@Base+0x3e68>
  4145d8:	ldr	x1, [x19, #72]
  4145dc:	add	x0, x1, w0, sxtw
  4145e0:	str	x0, [x19, #72]
  4145e4:	ldr	x19, [sp, #16]
  4145e8:	ldp	x29, x30, [sp], #32
  4145ec:	ret
  4145f0:	stp	x29, x30, [sp, #-64]!
  4145f4:	mov	x29, sp
  4145f8:	stp	x19, x20, [sp, #16]
  4145fc:	mov	x20, x1
  414600:	mov	x19, #0xffffffffffffffff    	// #-1
  414604:	stp	x21, x22, [sp, #32]
  414608:	mov	x21, x0
  41460c:	mov	x22, x2
  414610:	stp	x23, x24, [sp, #48]
  414614:	mov	x24, #0xa                   	// #10
  414618:	mov	x23, #0x8030                	// #32816
  41461c:	mov	x0, x20
  414620:	mov	x2, x22
  414624:	mov	x1, x21
  414628:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  41462c:	ldrb	w0, [x20, #8]
  414630:	ldrb	w3, [x20]
  414634:	cmp	w0, #0x2
  414638:	b.eq	41469c <_obstack_memory_used@@Base+0x44f0>  // b.none
  41463c:	cmp	w0, #0x18
  414640:	b.eq	4146a0 <_obstack_memory_used@@Base+0x44f4>  // b.none
  414644:	cmp	w3, #0x2c
  414648:	b.eq	4146a0 <_obstack_memory_used@@Base+0x44f4>  // b.none
  41464c:	cmp	w0, #0x1
  414650:	b.ne	41467c <_obstack_memory_used@@Base+0x44d0>  // b.any
  414654:	sub	w0, w3, #0x30
  414658:	and	w1, w0, #0xff
  41465c:	cmp	w1, #0x9
  414660:	b.hi	41467c <_obstack_memory_used@@Base+0x44d0>  // b.pmore
  414664:	cmn	x19, #0x2
  414668:	b.eq	41461c <_obstack_memory_used@@Base+0x4470>  // b.none
  41466c:	cmn	x19, #0x1
  414670:	b.ne	414684 <_obstack_memory_used@@Base+0x44d8>  // b.any
  414674:	sxtw	x19, w0
  414678:	b	41461c <_obstack_memory_used@@Base+0x4470>
  41467c:	mov	x19, #0xfffffffffffffffe    	// #-2
  414680:	b	41461c <_obstack_memory_used@@Base+0x4470>
  414684:	and	x3, x3, #0xff
  414688:	madd	x19, x19, x24, x3
  41468c:	cmp	x19, x23
  414690:	csel	x19, x19, x23, le
  414694:	sub	x19, x19, #0x30
  414698:	b	41461c <_obstack_memory_used@@Base+0x4470>
  41469c:	mov	x19, #0xfffffffffffffffe    	// #-2
  4146a0:	mov	x0, x19
  4146a4:	ldp	x19, x20, [sp, #16]
  4146a8:	ldp	x21, x22, [sp, #32]
  4146ac:	ldp	x23, x24, [sp, #48]
  4146b0:	ldp	x29, x30, [sp], #64
  4146b4:	ret
  4146b8:	stp	x29, x30, [sp, #-240]!
  4146bc:	mov	x29, sp
  4146c0:	stp	x19, x20, [sp, #16]
  4146c4:	stp	x21, x22, [sp, #32]
  4146c8:	mov	x21, x0
  4146cc:	mov	x0, #0x3800                	// #14336
  4146d0:	stp	x23, x24, [sp, #48]
  4146d4:	mov	x24, x1
  4146d8:	stp	x25, x26, [sp, #64]
  4146dc:	stp	x27, x28, [sp, #80]
  4146e0:	bl	402930 <malloc@plt>
  4146e4:	cbnz	x0, 4146f0 <_obstack_memory_used@@Base+0x4544>
  4146e8:	mov	w0, #0x0                   	// #0
  4146ec:	b	414758 <_obstack_memory_used@@Base+0x45ac>
  4146f0:	stp	xzr, xzr, [x24, #88]
  4146f4:	mov	x22, x0
  4146f8:	add	x19, sp, #0x90
  4146fc:	mov	x0, #0x1800                	// #6144
  414700:	add	x27, x24, #0x8
  414704:	add	x28, sp, #0xd0
  414708:	add	x26, x22, x0
  41470c:	mov	x20, #0x0                   	// #0
  414710:	mov	x0, x19
  414714:	bl	410ad8 <_obstack_memory_used@@Base+0x92c>
  414718:	str	xzr, [sp, #96]
  41471c:	ldr	x0, [x27, #8]
  414720:	ldr	x1, [sp, #96]
  414724:	cmp	x1, x0
  414728:	b.lt	414774 <_obstack_memory_used@@Base+0x45c8>  // b.tstop
  41472c:	cmp	x20, #0x0
  414730:	b.gt	414b6c <_obstack_memory_used@@Base+0x49c0>
  414734:	mov	x0, x22
  414738:	bl	402c20 <free@plt>
  41473c:	cbnz	x20, 4146e8 <_obstack_memory_used@@Base+0x453c>
  414740:	mov	x1, #0x100                 	// #256
  414744:	mov	x0, #0x8                   	// #8
  414748:	bl	402a60 <calloc@plt>
  41474c:	cmp	x0, #0x0
  414750:	str	x0, [x24, #88]
  414754:	cset	w0, ne  // ne = any
  414758:	ldp	x19, x20, [sp, #16]
  41475c:	ldp	x21, x22, [sp, #32]
  414760:	ldp	x23, x24, [sp, #48]
  414764:	ldp	x25, x26, [sp, #64]
  414768:	ldp	x27, x28, [sp, #80]
  41476c:	ldp	x29, x30, [sp], #240
  414770:	ret
  414774:	ldr	x0, [sp, #96]
  414778:	lsl	x0, x0, #3
  41477c:	str	x0, [sp, #104]
  414780:	ldr	x0, [x27, #16]
  414784:	ldr	x1, [sp, #104]
  414788:	ldr	x23, [x0, x1]
  41478c:	ldr	x0, [x21]
  414790:	lsl	x1, x23, #4
  414794:	add	x23, x0, x23, lsl #4
  414798:	ldr	w5, [x23, #8]
  41479c:	ldrb	w25, [x23, #8]
  4147a0:	ubfx	x5, x5, #8, #10
  4147a4:	cmp	w25, #0x1
  4147a8:	b.ne	4147f0 <_obstack_memory_used@@Base+0x4644>  // b.any
  4147ac:	ldrb	w1, [x0, x1]
  4147b0:	mov	x0, x19
  4147b4:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  4147b8:	cbz	w5, 414898 <_obstack_memory_used@@Base+0x46ec>
  4147bc:	tbz	w5, #5, 4147e0 <_obstack_memory_used@@Base+0x4634>
  4147c0:	ldr	x1, [sp, #144]
  4147c4:	mov	x0, x19
  4147c8:	ubfx	w1, w1, #10, #1
  4147cc:	bl	410ad8 <_obstack_memory_used@@Base+0x92c>
  4147d0:	cbz	w1, 414900 <_obstack_memory_used@@Base+0x4754>
  4147d4:	ldr	x0, [sp, #144]
  4147d8:	orr	x0, x0, #0x400
  4147dc:	str	x0, [sp, #144]
  4147e0:	tbz	w5, #7, 414890 <_obstack_memory_used@@Base+0x46e4>
  4147e4:	mov	x0, x19
  4147e8:	bl	410ad8 <_obstack_memory_used@@Base+0x92c>
  4147ec:	b	414900 <_obstack_memory_used@@Base+0x4754>
  4147f0:	cmp	w25, #0x3
  4147f4:	b.ne	414808 <_obstack_memory_used@@Base+0x465c>  // b.any
  4147f8:	ldr	x1, [x0, x1]
  4147fc:	mov	x0, x19
  414800:	bl	410210 <_obstack_memory_used@@Base+0x64>
  414804:	b	4147b8 <_obstack_memory_used@@Base+0x460c>
  414808:	cmp	w25, #0x5
  41480c:	b.ne	414864 <_obstack_memory_used@@Base+0x46b8>  // b.any
  414810:	ldr	w0, [x21, #180]
  414814:	cmp	w0, #0x1
  414818:	b.le	414850 <_obstack_memory_used@@Base+0x46a4>
  41481c:	ldr	x1, [x21, #120]
  414820:	mov	x0, x19
  414824:	bl	410210 <_obstack_memory_used@@Base+0x64>
  414828:	ldr	x1, [x21, #216]
  41482c:	tbnz	w1, #6, 41483c <_obstack_memory_used@@Base+0x4690>
  414830:	ldr	x0, [sp, #144]
  414834:	and	x0, x0, #0xfffffffffffffbff
  414838:	str	x0, [sp, #144]
  41483c:	tbz	w1, #7, 4147b8 <_obstack_memory_used@@Base+0x460c>
  414840:	ldr	x0, [sp, #144]
  414844:	and	x0, x0, #0xfffffffffffffffe
  414848:	str	x0, [sp, #144]
  41484c:	b	4147b8 <_obstack_memory_used@@Base+0x460c>
  414850:	mov	x0, #0xffffffffffffffff    	// #-1
  414854:	mov	x1, #0xffffffffffffffff    	// #-1
  414858:	stp	x0, x1, [x19]
  41485c:	stp	x0, x1, [x19, #16]
  414860:	b	414828 <_obstack_memory_used@@Base+0x467c>
  414864:	cmp	w25, #0x7
  414868:	b.ne	414900 <_obstack_memory_used@@Base+0x4754>  // b.any
  41486c:	mov	x0, #0xffffffffffffffff    	// #-1
  414870:	mov	x1, #0xffffffffffffffff    	// #-1
  414874:	stp	x0, x1, [x19]
  414878:	ldr	x0, [x21, #216]
  41487c:	tbnz	w0, #6, 414888 <_obstack_memory_used@@Base+0x46dc>
  414880:	mov	x1, #0xfffffffffffffbff    	// #-1025
  414884:	str	x1, [sp, #144]
  414888:	tbz	w0, #7, 4147b8 <_obstack_memory_used@@Base+0x460c>
  41488c:	b	414840 <_obstack_memory_used@@Base+0x4694>
  414890:	tbnz	w5, #2, 4148a4 <_obstack_memory_used@@Base+0x46f8>
  414894:	tbnz	w5, #3, 414940 <_obstack_memory_used@@Base+0x4794>
  414898:	mov	x3, x26
  41489c:	mov	x2, #0x0                   	// #0
  4148a0:	b	414af4 <_obstack_memory_used@@Base+0x4948>
  4148a4:	cmp	w25, #0x1
  4148a8:	b.ne	4148b4 <_obstack_memory_used@@Base+0x4708>  // b.any
  4148ac:	ldrb	w0, [x23, #10]
  4148b0:	tbz	w0, #6, 4147e4 <_obstack_memory_used@@Base+0x4638>
  4148b4:	ldr	w0, [x21, #180]
  4148b8:	add	x4, x21, #0xb8
  4148bc:	cmp	w0, #0x1
  4148c0:	b.le	414910 <_obstack_memory_used@@Base+0x4764>
  4148c4:	ldr	x7, [x21, #120]
  4148c8:	mov	x3, x19
  4148cc:	mov	x0, #0x0                   	// #0
  4148d0:	mov	x2, #0x0                   	// #0
  4148d4:	ldr	x1, [x7, x2, lsl #3]
  4148d8:	ldr	x6, [x4, x2, lsl #3]
  4148dc:	add	x2, x2, #0x1
  4148e0:	cmp	x2, #0x4
  4148e4:	orn	x1, x6, x1
  4148e8:	ldr	x6, [x3]
  4148ec:	and	x1, x1, x6
  4148f0:	str	x1, [x3], #8
  4148f4:	orr	x0, x0, x1
  4148f8:	b.ne	4148d4 <_obstack_memory_used@@Base+0x4728>  // b.any
  4148fc:	cbnz	x0, 414894 <_obstack_memory_used@@Base+0x46e8>
  414900:	ldr	x0, [sp, #96]
  414904:	add	x0, x0, #0x1
  414908:	str	x0, [sp, #96]
  41490c:	b	41471c <_obstack_memory_used@@Base+0x4570>
  414910:	mov	x3, x19
  414914:	mov	x0, #0x0                   	// #0
  414918:	mov	x1, #0x0                   	// #0
  41491c:	ldr	x2, [x4, x1, lsl #3]
  414920:	add	x1, x1, #0x1
  414924:	ldr	x6, [x3]
  414928:	cmp	x1, #0x4
  41492c:	and	x2, x2, x6
  414930:	str	x2, [x3], #8
  414934:	orr	x0, x0, x2
  414938:	b.ne	41491c <_obstack_memory_used@@Base+0x4770>  // b.any
  41493c:	b	4148fc <_obstack_memory_used@@Base+0x4750>
  414940:	cmp	w25, #0x1
  414944:	b.ne	414950 <_obstack_memory_used@@Base+0x47a4>  // b.any
  414948:	ldrb	w0, [x23, #10]
  41494c:	tbnz	w0, #6, 4147e4 <_obstack_memory_used@@Base+0x4638>
  414950:	ldr	w0, [x21, #180]
  414954:	add	x4, x21, #0xb8
  414958:	cmp	w0, #0x1
  41495c:	b.le	4149a0 <_obstack_memory_used@@Base+0x47f4>
  414960:	ldr	x6, [x21, #120]
  414964:	mov	x3, x19
  414968:	mov	x0, #0x0                   	// #0
  41496c:	mov	x2, #0x0                   	// #0
  414970:	ldr	x5, [x6, x2, lsl #3]
  414974:	ldr	x1, [x4, x2, lsl #3]
  414978:	add	x2, x2, #0x1
  41497c:	cmp	x2, #0x4
  414980:	and	x1, x1, x5
  414984:	ldr	x5, [x3]
  414988:	bic	x1, x5, x1
  41498c:	str	x1, [x3], #8
  414990:	orr	x0, x0, x1
  414994:	b.ne	414970 <_obstack_memory_used@@Base+0x47c4>  // b.any
  414998:	cbz	x0, 414900 <_obstack_memory_used@@Base+0x4754>
  41499c:	b	414898 <_obstack_memory_used@@Base+0x46ec>
  4149a0:	mov	x3, x19
  4149a4:	mov	x0, #0x0                   	// #0
  4149a8:	mov	x1, #0x0                   	// #0
  4149ac:	ldr	x2, [x4, x1, lsl #3]
  4149b0:	add	x1, x1, #0x1
  4149b4:	ldr	x5, [x3]
  4149b8:	cmp	x1, #0x4
  4149bc:	bic	x2, x5, x2
  4149c0:	str	x2, [x3], #8
  4149c4:	orr	x0, x0, x2
  4149c8:	b.ne	4149ac <_obstack_memory_used@@Base+0x4800>  // b.any
  4149cc:	b	414998 <_obstack_memory_used@@Base+0x47ec>
  4149d0:	lsl	x4, x2, #5
  4149d4:	cmp	w25, #0x1
  4149d8:	b.ne	4149f8 <_obstack_memory_used@@Base+0x484c>  // b.any
  4149dc:	ldrb	w0, [x23]
  4149e0:	ldrb	w1, [x23]
  4149e4:	asr	x0, x0, #6
  4149e8:	add	x0, x26, x0, lsl #3
  4149ec:	ldr	x0, [x0, x4]
  4149f0:	lsr	x0, x0, x1
  4149f4:	tbz	w0, #0, 414aec <_obstack_memory_used@@Base+0x4940>
  4149f8:	mov	x4, #0x0                   	// #0
  4149fc:	mov	x0, #0x0                   	// #0
  414a00:	ldr	x5, [x3, x0, lsl #3]
  414a04:	ldr	x1, [x19, x0, lsl #3]
  414a08:	and	x1, x1, x5
  414a0c:	add	x5, sp, #0xb0
  414a10:	orr	x4, x4, x1
  414a14:	str	x1, [x5, x0, lsl #3]
  414a18:	add	x0, x0, #0x1
  414a1c:	cmp	x0, #0x4
  414a20:	b.ne	414a00 <_obstack_memory_used@@Base+0x4854>  // b.any
  414a24:	cbz	x4, 414aec <_obstack_memory_used@@Base+0x4940>
  414a28:	mov	x5, x19
  414a2c:	mov	x6, #0x0                   	// #0
  414a30:	mov	x4, #0x0                   	// #0
  414a34:	mov	x0, #0x0                   	// #0
  414a38:	ldr	x1, [x3, x0, lsl #3]
  414a3c:	ldr	x7, [x5]
  414a40:	bic	x8, x1, x7
  414a44:	bic	x1, x7, x1
  414a48:	str	x8, [x28, x0, lsl #3]
  414a4c:	add	x0, x0, #0x1
  414a50:	str	x1, [x5], #8
  414a54:	orr	x4, x4, x8
  414a58:	orr	x6, x6, x1
  414a5c:	cmp	x0, #0x4
  414a60:	b.ne	414a38 <_obstack_memory_used@@Base+0x488c>  // b.any
  414a64:	mov	x0, #0x18                  	// #24
  414a68:	madd	x7, x2, x0, x22
  414a6c:	cbz	x4, 414abc <_obstack_memory_used@@Base+0x4910>
  414a70:	add	x0, x26, x20, lsl #5
  414a74:	stp	x7, x3, [sp, #112]
  414a78:	ldp	x4, x5, [x28]
  414a7c:	stp	x4, x5, [x0]
  414a80:	ldp	x4, x5, [x28, #16]
  414a84:	stp	x4, x5, [x0, #16]
  414a88:	ldp	x0, x1, [sp, #176]
  414a8c:	stp	x0, x1, [x3]
  414a90:	ldp	x0, x1, [sp, #192]
  414a94:	stp	x0, x1, [x3, #16]
  414a98:	mov	x1, x7
  414a9c:	stp	x2, x6, [sp, #128]
  414aa0:	mov	x0, #0x18                  	// #24
  414aa4:	madd	x0, x20, x0, x22
  414aa8:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  414aac:	cbnz	w0, 414b3c <_obstack_memory_used@@Base+0x4990>
  414ab0:	ldp	x7, x3, [sp, #112]
  414ab4:	add	x20, x20, #0x1
  414ab8:	ldp	x2, x6, [sp, #128]
  414abc:	stp	x2, x6, [sp, #112]
  414ac0:	ldr	x0, [x27, #16]
  414ac4:	str	x3, [sp, #128]
  414ac8:	ldr	x1, [sp, #104]
  414acc:	ldr	x1, [x0, x1]
  414ad0:	mov	x0, x7
  414ad4:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  414ad8:	tst	w0, #0xff
  414adc:	b.eq	414b3c <_obstack_memory_used@@Base+0x4990>  // b.none
  414ae0:	ldp	x2, x6, [sp, #112]
  414ae4:	ldr	x3, [sp, #128]
  414ae8:	cbz	x6, 414afc <_obstack_memory_used@@Base+0x4950>
  414aec:	add	x2, x2, #0x1
  414af0:	add	x3, x3, #0x20
  414af4:	cmp	x2, x20
  414af8:	b.lt	4149d0 <_obstack_memory_used@@Base+0x4824>  // b.tstop
  414afc:	cmp	x2, x20
  414b00:	b.ne	414900 <_obstack_memory_used@@Base+0x4754>  // b.any
  414b04:	add	x0, x26, x20, lsl #5
  414b08:	ldp	x2, x3, [x19]
  414b0c:	stp	x2, x3, [x0]
  414b10:	ldp	x2, x3, [x19, #16]
  414b14:	stp	x2, x3, [x0, #16]
  414b18:	ldr	x0, [x27, #16]
  414b1c:	ldr	x1, [sp, #104]
  414b20:	ldr	x1, [x0, x1]
  414b24:	mov	x0, #0x18                  	// #24
  414b28:	madd	x0, x20, x0, x22
  414b2c:	bl	410a54 <_obstack_memory_used@@Base+0x8a8>
  414b30:	cbnz	w0, 414b3c <_obstack_memory_used@@Base+0x4990>
  414b34:	add	x20, x20, #0x1
  414b38:	b	4147e4 <_obstack_memory_used@@Base+0x4638>
  414b3c:	add	x21, x22, #0x10
  414b40:	mov	x19, #0x0                   	// #0
  414b44:	mov	x23, #0x18                  	// #24
  414b48:	cmp	x19, x20
  414b4c:	b.ne	414b58 <_obstack_memory_used@@Base+0x49ac>  // b.any
  414b50:	mov	x20, #0xffffffffffffffff    	// #-1
  414b54:	b	414734 <_obstack_memory_used@@Base+0x4588>
  414b58:	mul	x0, x19, x23
  414b5c:	add	x19, x19, #0x1
  414b60:	ldr	x0, [x21, x0]
  414b64:	bl	402c20 <free@plt>
  414b68:	b	414b48 <_obstack_memory_used@@Base+0x499c>
  414b6c:	add	x1, x20, #0x1
  414b70:	add	x0, sp, #0xb0
  414b74:	bl	410aa0 <_obstack_memory_used@@Base+0x8f4>
  414b78:	str	w0, [sp, #144]
  414b7c:	cbnz	w0, 414b94 <_obstack_memory_used@@Base+0x49e8>
  414b80:	mov	x0, #0x18                  	// #24
  414b84:	mul	x0, x20, x0
  414b88:	bl	402930 <malloc@plt>
  414b8c:	mov	x23, x0
  414b90:	cbnz	x0, 414bcc <_obstack_memory_used@@Base+0x4a20>
  414b94:	ldr	x0, [sp, #192]
  414b98:	add	x21, x22, #0x10
  414b9c:	mov	x19, #0x0                   	// #0
  414ba0:	mov	x23, #0x18                  	// #24
  414ba4:	bl	402c20 <free@plt>
  414ba8:	mul	x0, x19, x23
  414bac:	add	x19, x19, #0x1
  414bb0:	ldr	x0, [x21, x0]
  414bb4:	bl	402c20 <free@plt>
  414bb8:	cmp	x19, x20
  414bbc:	b.ne	414ba8 <_obstack_memory_used@@Base+0x49fc>  // b.any
  414bc0:	mov	x0, x22
  414bc4:	bl	402c20 <free@plt>
  414bc8:	b	4146e8 <_obstack_memory_used@@Base+0x453c>
  414bcc:	add	x25, x0, x20, lsl #3
  414bd0:	add	x0, x0, x20, lsl #4
  414bd4:	add	x28, x22, #0x8
  414bd8:	str	x0, [sp, #104]
  414bdc:	add	x0, sp, #0xd0
  414be0:	bl	410ad8 <_obstack_memory_used@@Base+0x92c>
  414be4:	mov	x0, #0x18                  	// #24
  414be8:	mov	x27, #0x0                   	// #0
  414bec:	str	wzr, [sp, #96]
  414bf0:	str	x0, [sp, #112]
  414bf4:	mov	x2, #0x0                   	// #0
  414bf8:	str	xzr, [sp, #184]
  414bfc:	ldr	x0, [x28]
  414c00:	cmp	x0, x2
  414c04:	b.gt	414d7c <_obstack_memory_used@@Base+0x4bd0>
  414c08:	add	x2, sp, #0xb0
  414c0c:	mov	x1, x21
  414c10:	mov	x0, x19
  414c14:	mov	w3, #0x0                   	// #0
  414c18:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  414c1c:	str	x0, [x23, x27, lsl #3]
  414c20:	cbnz	x0, 414c2c <_obstack_memory_used@@Base+0x4a80>
  414c24:	ldr	w1, [sp, #144]
  414c28:	cbnz	w1, 414dc0 <_obstack_memory_used@@Base+0x4c14>
  414c2c:	ldrsb	w1, [x0, #104]
  414c30:	tbz	w1, #31, 414dcc <_obstack_memory_used@@Base+0x4c20>
  414c34:	add	x2, sp, #0xb0
  414c38:	mov	x1, x21
  414c3c:	mov	x0, x19
  414c40:	mov	w3, #0x1                   	// #1
  414c44:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  414c48:	str	x0, [x25, x27, lsl #3]
  414c4c:	cbnz	x0, 414c58 <_obstack_memory_used@@Base+0x4aac>
  414c50:	ldr	w1, [sp, #144]
  414c54:	cbnz	w1, 414dc0 <_obstack_memory_used@@Base+0x4c14>
  414c58:	ldr	x1, [x23, x27, lsl #3]
  414c5c:	cmp	x0, x1
  414c60:	b.eq	414c78 <_obstack_memory_used@@Base+0x4acc>  // b.none
  414c64:	ldr	w0, [x21, #180]
  414c68:	cmp	w0, #0x2
  414c6c:	ldr	w0, [sp, #96]
  414c70:	csinc	w0, w0, wzr, lt  // lt = tstop
  414c74:	str	w0, [sp, #96]
  414c78:	mov	x1, x21
  414c7c:	add	x2, sp, #0xb0
  414c80:	mov	x0, x19
  414c84:	mov	w3, #0x2                   	// #2
  414c88:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  414c8c:	ldr	x1, [sp, #104]
  414c90:	str	x0, [x1, x27, lsl #3]
  414c94:	cbnz	x0, 414ca0 <_obstack_memory_used@@Base+0x4af4>
  414c98:	ldr	w0, [sp, #144]
  414c9c:	cbnz	w0, 414dc0 <_obstack_memory_used@@Base+0x4c14>
  414ca0:	add	x1, x26, x27, lsl #5
  414ca4:	add	x0, sp, #0xd0
  414ca8:	add	x27, x27, #0x1
  414cac:	bl	410210 <_obstack_memory_used@@Base+0x64>
  414cb0:	add	x28, x28, #0x18
  414cb4:	cmp	x27, x20
  414cb8:	b.ne	414bf4 <_obstack_memory_used@@Base+0x4a48>  // b.any
  414cbc:	ldr	w0, [sp, #96]
  414cc0:	cbnz	w0, 414e34 <_obstack_memory_used@@Base+0x4c88>
  414cc4:	mov	x1, #0x100                 	// #256
  414cc8:	mov	x0, #0x8                   	// #8
  414ccc:	bl	402a60 <calloc@plt>
  414cd0:	str	x0, [x24, #88]
  414cd4:	cbz	x0, 414dc0 <_obstack_memory_used@@Base+0x4c14>
  414cd8:	add	x21, x21, #0xb8
  414cdc:	mov	x1, #0x0                   	// #0
  414ce0:	add	x2, sp, #0xd0
  414ce4:	lsl	x6, x1, #3
  414ce8:	mov	x5, #0x1                   	// #1
  414cec:	ldr	x3, [x2, x1]
  414cf0:	cbnz	x3, 414de0 <_obstack_memory_used@@Base+0x4c34>
  414cf4:	add	x1, x1, #0x8
  414cf8:	cmp	x1, #0x20
  414cfc:	b.ne	414ce0 <_obstack_memory_used@@Base+0x4b34>  // b.any
  414d00:	ldr	x1, [sp, #208]
  414d04:	tst	w1, #0x400
  414d08:	b.eq	414d38 <_obstack_memory_used@@Base+0x4b8c>  // b.none
  414d0c:	mov	x1, #0x0                   	// #0
  414d10:	lsl	x2, x1, #5
  414d14:	ldr	x2, [x26, x2]
  414d18:	tst	w2, #0x400
  414d1c:	b.eq	414eb8 <_obstack_memory_used@@Base+0x4d0c>  // b.none
  414d20:	ldr	x2, [sp, #104]
  414d24:	ldr	x1, [x2, x1, lsl #3]
  414d28:	str	x1, [x0, #80]
  414d2c:	ldr	w2, [sp, #96]
  414d30:	cbz	w2, 414d38 <_obstack_memory_used@@Base+0x4b8c>
  414d34:	str	x1, [x0, #2128]
  414d38:	mov	x0, x23
  414d3c:	bl	402c20 <free@plt>
  414d40:	ldr	x0, [sp, #192]
  414d44:	add	x23, x22, #0x10
  414d48:	mov	x19, #0x0                   	// #0
  414d4c:	mov	x21, #0x18                  	// #24
  414d50:	bl	402c20 <free@plt>
  414d54:	mul	x0, x19, x21
  414d58:	add	x19, x19, #0x1
  414d5c:	ldr	x0, [x23, x0]
  414d60:	bl	402c20 <free@plt>
  414d64:	cmp	x19, x20
  414d68:	b.ne	414d54 <_obstack_memory_used@@Base+0x4ba8>  // b.any
  414d6c:	mov	x0, x22
  414d70:	bl	402c20 <free@plt>
  414d74:	mov	w0, #0x1                   	// #1
  414d78:	b	414758 <_obstack_memory_used@@Base+0x45ac>
  414d7c:	ldr	x0, [x28, #8]
  414d80:	ldr	x1, [x0, x2, lsl #3]
  414d84:	ldr	x0, [x21, #24]
  414d88:	ldr	x0, [x0, x1, lsl #3]
  414d8c:	cmn	x0, #0x1
  414d90:	b.ne	414d9c <_obstack_memory_used@@Base+0x4bf0>  // b.any
  414d94:	add	x2, x2, #0x1
  414d98:	b	414bfc <_obstack_memory_used@@Base+0x4a50>
  414d9c:	str	x2, [sp, #120]
  414da0:	ldr	x1, [x21, #48]
  414da4:	ldr	x2, [sp, #112]
  414da8:	madd	x1, x0, x2, x1
  414dac:	add	x0, sp, #0xb0
  414db0:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  414db4:	str	w0, [sp, #144]
  414db8:	ldr	x2, [sp, #120]
  414dbc:	cbz	w0, 414d94 <_obstack_memory_used@@Base+0x4be8>
  414dc0:	mov	x0, x23
  414dc4:	bl	402c20 <free@plt>
  414dc8:	b	414b94 <_obstack_memory_used@@Base+0x49e8>
  414dcc:	ldr	x1, [sp, #104]
  414dd0:	str	x0, [x25, x27, lsl #3]
  414dd4:	ldr	x0, [x23, x27, lsl #3]
  414dd8:	str	x0, [x1, x27, lsl #3]
  414ddc:	b	414ca0 <_obstack_memory_used@@Base+0x4af4>
  414de0:	tbz	w3, #0, 414e14 <_obstack_memory_used@@Base+0x4c68>
  414de4:	add	x7, x22, x1
  414de8:	mov	x2, #0x0                   	// #0
  414dec:	ldr	x8, [x7, #6144]
  414df0:	add	x7, x7, #0x20
  414df4:	tst	x5, x8
  414df8:	b.eq	414e24 <_obstack_memory_used@@Base+0x4c78>  // b.none
  414dfc:	ldr	x7, [x21, x1]
  414e00:	lsl	x2, x2, #3
  414e04:	tst	x5, x7
  414e08:	b.eq	414e2c <_obstack_memory_used@@Base+0x4c80>  // b.none
  414e0c:	ldr	x2, [x25, x2]
  414e10:	str	x2, [x0, x6, lsl #3]
  414e14:	lsl	x5, x5, #1
  414e18:	lsr	x3, x3, #1
  414e1c:	add	x6, x6, #0x1
  414e20:	b	414cf0 <_obstack_memory_used@@Base+0x4b44>
  414e24:	add	x2, x2, #0x1
  414e28:	b	414dec <_obstack_memory_used@@Base+0x4c40>
  414e2c:	ldr	x2, [x23, x2]
  414e30:	b	414e10 <_obstack_memory_used@@Base+0x4c64>
  414e34:	mov	x1, #0x200                 	// #512
  414e38:	mov	x0, #0x8                   	// #8
  414e3c:	bl	402a60 <calloc@plt>
  414e40:	str	x0, [x24, #96]
  414e44:	cbz	x0, 414dc0 <_obstack_memory_used@@Base+0x4c14>
  414e48:	mov	x1, #0x0                   	// #0
  414e4c:	add	x2, sp, #0xd0
  414e50:	add	x5, x0, x1, lsl #6
  414e54:	mov	x6, #0x1                   	// #1
  414e58:	ldr	x3, [x2, x1]
  414e5c:	cbnz	x3, 414e70 <_obstack_memory_used@@Base+0x4cc4>
  414e60:	add	x1, x1, #0x8
  414e64:	cmp	x1, #0x20
  414e68:	b.ne	414e4c <_obstack_memory_used@@Base+0x4ca0>  // b.any
  414e6c:	b	414d00 <_obstack_memory_used@@Base+0x4b54>
  414e70:	tbz	w3, #0, 414ea0 <_obstack_memory_used@@Base+0x4cf4>
  414e74:	add	x7, x22, x1
  414e78:	mov	x2, #0x0                   	// #0
  414e7c:	ldr	x8, [x7, #6144]
  414e80:	add	x7, x7, #0x20
  414e84:	tst	x6, x8
  414e88:	b.eq	414eb0 <_obstack_memory_used@@Base+0x4d04>  // b.none
  414e8c:	lsl	x2, x2, #3
  414e90:	ldr	x7, [x23, x2]
  414e94:	str	x7, [x5]
  414e98:	ldr	x2, [x25, x2]
  414e9c:	str	x2, [x5, #2048]
  414ea0:	lsl	x6, x6, #1
  414ea4:	lsr	x3, x3, #1
  414ea8:	add	x5, x5, #0x8
  414eac:	b	414e5c <_obstack_memory_used@@Base+0x4cb0>
  414eb0:	add	x2, x2, #0x1
  414eb4:	b	414e7c <_obstack_memory_used@@Base+0x4cd0>
  414eb8:	add	x1, x1, #0x1
  414ebc:	cmp	x1, x20
  414ec0:	b.ne	414d10 <_obstack_memory_used@@Base+0x4b64>  // b.any
  414ec4:	b	414d38 <_obstack_memory_used@@Base+0x4b8c>
  414ec8:	stp	x29, x30, [sp, #-32]!
  414ecc:	mov	x29, sp
  414ed0:	stp	x19, x20, [sp, #16]
  414ed4:	mov	x19, x0
  414ed8:	tbz	x1, #63, 414eec <_obstack_memory_used@@Base+0x4d40>
  414edc:	ldr	w0, [x19, #112]
  414ee0:	ldp	x19, x20, [sp, #16]
  414ee4:	ldp	x29, x30, [sp], #32
  414ee8:	ret
  414eec:	ldr	x0, [x0, #88]
  414ef0:	cmp	x0, x1
  414ef4:	b.ne	414f0c <_obstack_memory_used@@Base+0x4d60>  // b.any
  414ef8:	tst	x2, #0x2
  414efc:	mov	w0, #0x8                   	// #8
  414f00:	mov	w1, #0xa                   	// #10
  414f04:	csel	w0, w0, w1, ne  // ne = any
  414f08:	b	414ee0 <_obstack_memory_used@@Base+0x4d34>
  414f0c:	ldr	w0, [x19, #144]
  414f10:	cmp	w0, #0x1
  414f14:	b.gt	414f90 <_obstack_memory_used@@Base+0x4de4>
  414f18:	ldr	x0, [x19, #8]
  414f1c:	ldrb	w2, [x0, x1]
  414f20:	ldrb	w0, [x0, x1]
  414f24:	ldr	x1, [x19, #128]
  414f28:	asr	x0, x0, #6
  414f2c:	ldr	x0, [x1, x0, lsl #3]
  414f30:	lsr	x0, x0, x2
  414f34:	tbnz	w0, #0, 414fa0 <_obstack_memory_used@@Base+0x4df4>
  414f38:	cmp	w2, #0xa
  414f3c:	b	414f78 <_obstack_memory_used@@Base+0x4dcc>
  414f40:	sub	x1, x1, #0x1
  414f44:	cmn	x1, #0x1
  414f48:	b.eq	414edc <_obstack_memory_used@@Base+0x4d30>  // b.none
  414f4c:	ldr	w20, [x0, x1, lsl #2]
  414f50:	cmn	w20, #0x1
  414f54:	b.eq	414f40 <_obstack_memory_used@@Base+0x4d94>  // b.none
  414f58:	ldrb	w0, [x19, #142]
  414f5c:	cbz	w0, 414f74 <_obstack_memory_used@@Base+0x4dc8>
  414f60:	mov	w0, w20
  414f64:	bl	402d30 <iswalnum@plt>
  414f68:	cbnz	w0, 414fa0 <_obstack_memory_used@@Base+0x4df4>
  414f6c:	cmp	w20, #0x5f
  414f70:	b.eq	414fa0 <_obstack_memory_used@@Base+0x4df4>  // b.none
  414f74:	cmp	w20, #0xa
  414f78:	b.ne	414f98 <_obstack_memory_used@@Base+0x4dec>  // b.any
  414f7c:	ldrb	w0, [x19, #141]
  414f80:	cmp	w0, #0x0
  414f84:	cset	w0, ne  // ne = any
  414f88:	lsl	w0, w0, #1
  414f8c:	b	414ee0 <_obstack_memory_used@@Base+0x4d34>
  414f90:	ldr	x0, [x19, #16]
  414f94:	b	414f4c <_obstack_memory_used@@Base+0x4da0>
  414f98:	mov	w0, #0x0                   	// #0
  414f9c:	b	414ee0 <_obstack_memory_used@@Base+0x4d34>
  414fa0:	mov	w0, #0x1                   	// #1
  414fa4:	b	414ee0 <_obstack_memory_used@@Base+0x4d34>
  414fa8:	stp	x29, x30, [sp, #-128]!
  414fac:	mov	x29, sp
  414fb0:	stp	x19, x20, [sp, #16]
  414fb4:	mov	x19, x0
  414fb8:	ldr	x20, [x0, #40]
  414fbc:	stp	x21, x22, [sp, #32]
  414fc0:	mov	x22, x1
  414fc4:	stp	x23, x24, [sp, #48]
  414fc8:	cmp	x20, x1
  414fcc:	stp	x25, x26, [sp, #64]
  414fd0:	mov	w25, w2
  414fd4:	stp	x27, x28, [sp, #80]
  414fd8:	b.gt	415128 <_obstack_memory_used@@Base+0x4f7c>
  414fdc:	sub	x20, x1, x20
  414fe0:	cbz	x20, 4150d0 <_obstack_memory_used@@Base+0x4f24>
  414fe4:	ldp	x23, x1, [x19, #48]
  414fe8:	ldrb	w0, [x19, #140]
  414fec:	cmp	x1, x20
  414ff0:	b.le	4152c4 <_obstack_memory_used@@Base+0x5118>
  414ff4:	cbz	w0, 415258 <_obstack_memory_used@@Base+0x50ac>
  414ff8:	ldr	x24, [x19, #24]
  414ffc:	mov	x0, x23
  415000:	mov	x1, #0x0                   	// #0
  415004:	mov	x3, #0x2                   	// #2
  415008:	add	x21, x1, x0
  41500c:	sdiv	x21, x21, x3
  415010:	ldr	x2, [x24, x21, lsl #3]
  415014:	cmp	x2, x20
  415018:	b.gt	415180 <_obstack_memory_used@@Base+0x4fd4>
  41501c:	b.ge	415038 <_obstack_memory_used@@Base+0x4e8c>  // b.tcont
  415020:	add	x1, x21, #0x1
  415024:	cmp	x1, x0
  415028:	b.lt	415008 <_obstack_memory_used@@Base+0x4e5c>  // b.tstop
  41502c:	cmp	x2, x20
  415030:	b.ge	415038 <_obstack_memory_used@@Base+0x4e8c>  // b.tcont
  415034:	add	x21, x21, #0x1
  415038:	mov	w2, w25
  41503c:	sub	x1, x21, #0x1
  415040:	mov	x0, x19
  415044:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  415048:	str	w0, [x19, #112]
  41504c:	cmp	x20, x23
  415050:	b.ge	4151a4 <_obstack_memory_used@@Base+0x4ff8>  // b.tcont
  415054:	cmp	x20, x21
  415058:	b.ne	4151a4 <_obstack_memory_used@@Base+0x4ff8>  // b.any
  41505c:	ldr	x0, [x24, x20, lsl #3]
  415060:	cmp	x0, x20
  415064:	b.ne	4151a4 <_obstack_memory_used@@Base+0x4ff8>  // b.any
  415068:	ldr	x0, [x19, #16]
  41506c:	sub	x2, x23, x20
  415070:	lsl	x2, x2, #2
  415074:	add	x1, x0, x20, lsl #2
  415078:	bl	402760 <memmove@plt>
  41507c:	ldr	x0, [x19, #8]
  415080:	ldr	x2, [x19, #48]
  415084:	add	x1, x0, x20
  415088:	sub	x2, x2, x20
  41508c:	bl	402760 <memmove@plt>
  415090:	ldr	x0, [x19, #48]
  415094:	lsl	x1, x20, #3
  415098:	sub	x0, x0, x20
  41509c:	str	x0, [x19, #48]
  4150a0:	ldr	x0, [x19, #56]
  4150a4:	sub	x0, x0, x20
  4150a8:	str	x0, [x19, #56]
  4150ac:	mov	x0, #0x0                   	// #0
  4150b0:	ldr	x2, [x19, #48]
  4150b4:	cmp	x2, x0
  4150b8:	b.gt	415188 <_obstack_memory_used@@Base+0x4fdc>
  4150bc:	ldrb	w0, [x19, #139]
  4150c0:	cbnz	w0, 4150d0 <_obstack_memory_used@@Base+0x4f24>
  4150c4:	ldr	x0, [x19, #8]
  4150c8:	add	x0, x0, x20
  4150cc:	str	x0, [x19, #8]
  4150d0:	ldr	x0, [x19, #88]
  4150d4:	str	x22, [x19, #40]
  4150d8:	ldr	x1, [x19, #104]
  4150dc:	sub	x0, x0, x20
  4150e0:	str	x0, [x19, #88]
  4150e4:	sub	x20, x1, x20
  4150e8:	ldr	w1, [x19, #144]
  4150ec:	str	x20, [x19, #104]
  4150f0:	cmp	w1, #0x1
  4150f4:	b.le	415564 <_obstack_memory_used@@Base+0x53b8>
  4150f8:	ldrb	w0, [x19, #136]
  4150fc:	cbz	w0, 415550 <_obstack_memory_used@@Base+0x53a4>
  415100:	mov	x0, x19
  415104:	bl	410c54 <_obstack_memory_used@@Base+0xaa8>
  415108:	cbz	w0, 415558 <_obstack_memory_used@@Base+0x53ac>
  41510c:	ldp	x19, x20, [sp, #16]
  415110:	ldp	x21, x22, [sp, #32]
  415114:	ldp	x23, x24, [sp, #48]
  415118:	ldp	x25, x26, [sp, #64]
  41511c:	ldp	x27, x28, [sp, #80]
  415120:	ldp	x29, x30, [sp], #128
  415124:	ret
  415128:	ldr	w0, [x0, #144]
  41512c:	cmp	w0, #0x1
  415130:	b.le	415138 <_obstack_memory_used@@Base+0x4f8c>
  415134:	str	xzr, [x19, #32]
  415138:	ldr	x0, [x19, #80]
  41513c:	str	x0, [x19, #88]
  415140:	ldr	x0, [x19, #96]
  415144:	tst	x25, #0x1
  415148:	mov	w1, #0x6                   	// #6
  41514c:	str	x0, [x19, #104]
  415150:	mov	w0, #0x4                   	// #4
  415154:	csel	w0, w0, w1, ne  // ne = any
  415158:	str	w0, [x19, #112]
  41515c:	ldrb	w0, [x19, #139]
  415160:	stp	xzr, xzr, [x19, #40]
  415164:	str	xzr, [x19, #56]
  415168:	strb	wzr, [x19, #140]
  41516c:	cbnz	w0, 415178 <_obstack_memory_used@@Base+0x4fcc>
  415170:	ldr	x0, [x19]
  415174:	str	x0, [x19, #8]
  415178:	mov	x20, x22
  41517c:	b	414fe0 <_obstack_memory_used@@Base+0x4e34>
  415180:	mov	x0, x21
  415184:	b	415024 <_obstack_memory_used@@Base+0x4e78>
  415188:	ldr	x3, [x19, #24]
  41518c:	ldr	x2, [x3, x1]
  415190:	add	x1, x1, #0x8
  415194:	sub	x2, x2, x20
  415198:	str	x2, [x3, x0, lsl #3]
  41519c:	add	x0, x0, #0x1
  4151a0:	b	4150b0 <_obstack_memory_used@@Base+0x4f04>
  4151a4:	ldr	x0, [x19, #80]
  4151a8:	sub	x1, x24, #0x8
  4151ac:	strb	wzr, [x19, #140]
  4151b0:	sub	x0, x0, x22
  4151b4:	add	x0, x0, x20
  4151b8:	str	x0, [x19, #88]
  4151bc:	ldr	x0, [x19, #96]
  4151c0:	sub	x0, x0, x22
  4151c4:	add	x0, x0, x20
  4151c8:	str	x0, [x19, #104]
  4151cc:	cmp	x21, #0x0
  4151d0:	b.le	4151e0 <_obstack_memory_used@@Base+0x5034>
  4151d4:	ldr	x0, [x1, x21, lsl #3]
  4151d8:	cmp	x0, x20
  4151dc:	b.eq	4151f8 <_obstack_memory_used@@Base+0x504c>  // b.none
  4151e0:	cmp	x21, x23
  4151e4:	b.lt	415200 <_obstack_memory_used@@Base+0x5054>  // b.tstop
  4151e8:	b.ne	415218 <_obstack_memory_used@@Base+0x506c>  // b.any
  4151ec:	str	xzr, [x19, #48]
  4151f0:	ldr	x0, [x19, #48]
  4151f4:	b	4152bc <_obstack_memory_used@@Base+0x5110>
  4151f8:	sub	x21, x21, #0x1
  4151fc:	b	4151cc <_obstack_memory_used@@Base+0x5020>
  415200:	ldr	x0, [x19, #16]
  415204:	ldr	w0, [x0, x21, lsl #2]
  415208:	cmn	w0, #0x1
  41520c:	b.ne	415218 <_obstack_memory_used@@Base+0x506c>  // b.any
  415210:	add	x21, x21, #0x1
  415214:	b	4151e0 <_obstack_memory_used@@Base+0x5034>
  415218:	ldr	x2, [x24, x21, lsl #3]
  41521c:	sub	x2, x2, x20
  415220:	str	x2, [x19, #48]
  415224:	cbz	x2, 4151f0 <_obstack_memory_used@@Base+0x5044>
  415228:	mov	x0, #0x0                   	// #0
  41522c:	mov	w1, #0xffffffff            	// #-1
  415230:	b	415240 <_obstack_memory_used@@Base+0x5094>
  415234:	ldr	x3, [x19, #16]
  415238:	str	w1, [x3, x0, lsl #2]
  41523c:	add	x0, x0, #0x1
  415240:	cmp	x2, x0
  415244:	b.gt	415234 <_obstack_memory_used@@Base+0x5088>
  415248:	ldr	x0, [x19, #8]
  41524c:	mov	w1, #0xff                  	// #255
  415250:	bl	402a10 <memset@plt>
  415254:	b	4151f0 <_obstack_memory_used@@Base+0x5044>
  415258:	mov	w2, w25
  41525c:	sub	x1, x20, #0x1
  415260:	mov	x0, x19
  415264:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  415268:	str	w0, [x19, #112]
  41526c:	ldr	w0, [x19, #144]
  415270:	cmp	w0, #0x1
  415274:	b.le	41528c <_obstack_memory_used@@Base+0x50e0>
  415278:	ldr	x0, [x19, #16]
  41527c:	sub	x2, x23, x20
  415280:	lsl	x2, x2, #2
  415284:	add	x1, x0, x20, lsl #2
  415288:	bl	402760 <memmove@plt>
  41528c:	ldrb	w0, [x19, #139]
  415290:	cbz	w0, 4152a8 <_obstack_memory_used@@Base+0x50fc>
  415294:	ldr	x0, [x19, #8]
  415298:	ldr	x2, [x19, #48]
  41529c:	add	x1, x0, x20
  4152a0:	sub	x2, x2, x20
  4152a4:	bl	402760 <memmove@plt>
  4152a8:	ldr	x0, [x19, #48]
  4152ac:	sub	x0, x0, x20
  4152b0:	str	x0, [x19, #48]
  4152b4:	ldr	x0, [x19, #56]
  4152b8:	sub	x0, x0, x20
  4152bc:	str	x0, [x19, #56]
  4152c0:	b	4150bc <_obstack_memory_used@@Base+0x4f10>
  4152c4:	cbz	w0, 4152ec <_obstack_memory_used@@Base+0x5140>
  4152c8:	ldr	x0, [x19, #80]
  4152cc:	strb	wzr, [x19, #140]
  4152d0:	sub	x0, x0, x22
  4152d4:	add	x0, x0, x20
  4152d8:	str	x0, [x19, #88]
  4152dc:	ldr	x0, [x19, #96]
  4152e0:	sub	x0, x0, x22
  4152e4:	add	x0, x0, x20
  4152e8:	str	x0, [x19, #104]
  4152ec:	ldr	w0, [x19, #144]
  4152f0:	str	xzr, [x19, #48]
  4152f4:	cmp	w0, #0x1
  4152f8:	ldr	x21, [x19, #40]
  4152fc:	b.le	4154e8 <_obstack_memory_used@@Base+0x533c>
  415300:	ldrb	w1, [x19, #137]
  415304:	cbz	w1, 4153b4 <_obstack_memory_used@@Base+0x5208>
  415308:	ldr	x1, [x19]
  41530c:	sub	x0, x20, w0, sxtw
  415310:	sub	x24, x20, #0x1
  415314:	add	x21, x1, x21
  415318:	add	x0, x21, x0
  41531c:	add	x24, x21, x24
  415320:	cmp	x1, x0
  415324:	csel	x0, x1, x0, cs  // cs = hs, nlast
  415328:	cmp	x24, x0
  41532c:	b.cc	4153b4 <_obstack_memory_used@@Base+0x5208>  // b.lo, b.ul, b.last
  415330:	ldrb	w1, [x24]
  415334:	and	w1, w1, #0xc0
  415338:	cmp	w1, #0x80
  41533c:	b.eq	415418 <_obstack_memory_used@@Base+0x526c>  // b.none
  415340:	ldr	x0, [x19, #88]
  415344:	mov	x1, x24
  415348:	ldr	x3, [x19, #120]
  41534c:	add	x0, x21, x0
  415350:	sub	x2, x0, x24
  415354:	cbz	x3, 415374 <_obstack_memory_used@@Base+0x51c8>
  415358:	cmp	x2, #0x6
  41535c:	mov	x0, #0x6                   	// #6
  415360:	csel	x0, x2, x0, le
  415364:	add	x1, sp, #0x70
  415368:	sxtw	x0, w0
  41536c:	sub	x0, x0, #0x1
  415370:	tbz	w0, #31, 415408 <_obstack_memory_used@@Base+0x525c>
  415374:	add	x21, x21, x20
  415378:	add	x3, sp, #0x78
  41537c:	sub	x24, x21, x24
  415380:	add	x0, sp, #0x6c
  415384:	str	xzr, [sp, #120]
  415388:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  41538c:	cmp	x24, x0
  415390:	b.hi	4153b4 <_obstack_memory_used@@Base+0x5208>  // b.pmore
  415394:	cmn	x0, #0x3
  415398:	b.hi	4153b4 <_obstack_memory_used@@Base+0x5208>  // b.pmore
  41539c:	sub	x0, x0, x24
  4153a0:	ldr	w24, [sp, #108]
  4153a4:	str	xzr, [x19, #32]
  4153a8:	str	x0, [x19, #48]
  4153ac:	cmn	w24, #0x1
  4153b0:	b.ne	415480 <_obstack_memory_used@@Base+0x52d4>  // b.any
  4153b4:	ldr	x21, [x19, #40]
  4153b8:	add	x27, x19, #0x20
  4153bc:	ldr	x0, [x19, #56]
  4153c0:	mov	w24, #0xffffffff            	// #-1
  4153c4:	add	x21, x21, x0
  4153c8:	cmp	x22, x21
  4153cc:	b.gt	415420 <_obstack_memory_used@@Base+0x5274>
  4153d0:	sub	x21, x21, x22
  4153d4:	str	x21, [x19, #48]
  4153d8:	cmn	w24, #0x1
  4153dc:	b.ne	415480 <_obstack_memory_used@@Base+0x52d4>  // b.any
  4153e0:	mov	w2, w25
  4153e4:	sub	x1, x23, #0x1
  4153e8:	mov	x0, x19
  4153ec:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  4153f0:	ldr	x2, [x19, #48]
  4153f4:	str	w0, [x19, #112]
  4153f8:	cbz	x2, 4151f0 <_obstack_memory_used@@Base+0x5044>
  4153fc:	mov	x0, #0x0                   	// #0
  415400:	mov	w1, #0xffffffff            	// #-1
  415404:	b	4154d4 <_obstack_memory_used@@Base+0x5328>
  415408:	ldrb	w4, [x24, x0]
  41540c:	ldrb	w4, [x3, x4]
  415410:	strb	w4, [x1, x0]
  415414:	b	41536c <_obstack_memory_used@@Base+0x51c0>
  415418:	sub	x24, x24, #0x1
  41541c:	b	415328 <_obstack_memory_used@@Base+0x517c>
  415420:	ldr	x1, [x19]
  415424:	mov	x3, x27
  415428:	ldr	x26, [x19, #80]
  41542c:	add	x1, x1, x21
  415430:	add	x0, sp, #0x78
  415434:	sub	x26, x26, x21
  415438:	mov	x2, x26
  41543c:	ldr	x28, [x19, #32]
  415440:	bl	40fe1c <wcrtomb@plt+0xcf9c>
  415444:	sub	x1, x0, #0x1
  415448:	ldr	w24, [sp, #120]
  41544c:	cmn	x1, #0x4
  415450:	b.ls	415470 <_obstack_memory_used@@Base+0x52c4>  // b.plast
  415454:	cmp	x0, #0x0
  415458:	ccmp	x26, #0x0, #0x4, ne  // ne = any
  41545c:	b.eq	415478 <_obstack_memory_used@@Base+0x52cc>  // b.none
  415460:	ldr	x0, [x19]
  415464:	ldrb	w24, [x0, x21]
  415468:	mov	x0, #0x1                   	// #1
  41546c:	str	x28, [x19, #32]
  415470:	add	x21, x21, x0
  415474:	b	4153c8 <_obstack_memory_used@@Base+0x521c>
  415478:	mov	w24, #0x0                   	// #0
  41547c:	b	415468 <_obstack_memory_used@@Base+0x52bc>
  415480:	ldrb	w0, [x19, #142]
  415484:	cbz	w0, 41549c <_obstack_memory_used@@Base+0x52f0>
  415488:	mov	w0, w24
  41548c:	bl	402d30 <iswalnum@plt>
  415490:	cbnz	w0, 4154b8 <_obstack_memory_used@@Base+0x530c>
  415494:	cmp	w24, #0x5f
  415498:	b.eq	4154b8 <_obstack_memory_used@@Base+0x530c>  // b.none
  41549c:	cmp	w24, #0xa
  4154a0:	b.ne	4154c0 <_obstack_memory_used@@Base+0x5314>  // b.any
  4154a4:	ldrb	w0, [x19, #141]
  4154a8:	cmp	w0, #0x0
  4154ac:	cset	w0, ne  // ne = any
  4154b0:	lsl	w0, w0, #1
  4154b4:	b	4153f0 <_obstack_memory_used@@Base+0x5244>
  4154b8:	mov	w0, #0x1                   	// #1
  4154bc:	b	4153f0 <_obstack_memory_used@@Base+0x5244>
  4154c0:	mov	w0, #0x0                   	// #0
  4154c4:	b	4153f0 <_obstack_memory_used@@Base+0x5244>
  4154c8:	ldr	x3, [x19, #16]
  4154cc:	str	w1, [x3, x0, lsl #2]
  4154d0:	add	x0, x0, #0x1
  4154d4:	cmp	x2, x0
  4154d8:	b.gt	4154c8 <_obstack_memory_used@@Base+0x531c>
  4154dc:	ldrb	w0, [x19, #139]
  4154e0:	cbz	w0, 4151f0 <_obstack_memory_used@@Base+0x5044>
  4154e4:	b	415248 <_obstack_memory_used@@Base+0x509c>
  4154e8:	ldr	x0, [x19]
  4154ec:	ldr	x1, [x19, #120]
  4154f0:	add	x0, x0, x20
  4154f4:	add	x21, x0, x21
  4154f8:	ldurb	w0, [x21, #-1]
  4154fc:	str	xzr, [x19, #56]
  415500:	cbz	x1, 41550c <_obstack_memory_used@@Base+0x5360>
  415504:	and	x0, x0, #0xff
  415508:	ldrb	w0, [x1, x0]
  41550c:	ldr	x2, [x19, #128]
  415510:	ubfx	x1, x0, #6, #2
  415514:	ldr	x1, [x2, x1, lsl #3]
  415518:	lsr	x1, x1, x0
  41551c:	tbnz	w1, #0, 415540 <_obstack_memory_used@@Base+0x5394>
  415520:	cmp	w0, #0xa
  415524:	b.ne	415548 <_obstack_memory_used@@Base+0x539c>  // b.any
  415528:	ldrb	w0, [x19, #141]
  41552c:	cmp	w0, #0x0
  415530:	cset	w0, ne  // ne = any
  415534:	lsl	w0, w0, #1
  415538:	str	w0, [x19, #112]
  41553c:	b	4150bc <_obstack_memory_used@@Base+0x4f10>
  415540:	mov	w0, #0x1                   	// #1
  415544:	b	415538 <_obstack_memory_used@@Base+0x538c>
  415548:	mov	w0, #0x0                   	// #0
  41554c:	b	415538 <_obstack_memory_used@@Base+0x538c>
  415550:	mov	x0, x19
  415554:	bl	410ae4 <_obstack_memory_used@@Base+0x938>
  415558:	mov	w0, #0x0                   	// #0
  41555c:	str	xzr, [x19, #72]
  415560:	b	41510c <_obstack_memory_used@@Base+0x4f60>
  415564:	ldrb	w1, [x19, #139]
  415568:	cbz	w1, 415594 <_obstack_memory_used@@Base+0x53e8>
  41556c:	ldrb	w0, [x19, #136]
  415570:	cbz	w0, 415580 <_obstack_memory_used@@Base+0x53d4>
  415574:	mov	x0, x19
  415578:	bl	41113c <_obstack_memory_used@@Base+0xf90>
  41557c:	b	415558 <_obstack_memory_used@@Base+0x53ac>
  415580:	ldr	x0, [x19, #120]
  415584:	cbz	x0, 415558 <_obstack_memory_used@@Base+0x53ac>
  415588:	mov	x0, x19
  41558c:	bl	41027c <_obstack_memory_used@@Base+0xd0>
  415590:	b	415558 <_obstack_memory_used@@Base+0x53ac>
  415594:	str	x0, [x19, #48]
  415598:	b	415558 <_obstack_memory_used@@Base+0x53ac>
  41559c:	stp	x29, x30, [sp, #-32]!
  4155a0:	mov	x29, sp
  4155a4:	stp	x19, x20, [sp, #16]
  4155a8:	mov	x20, x1
  4155ac:	mov	x1, x2
  4155b0:	ldr	w2, [x0, #160]
  4155b4:	mov	x19, x0
  4155b8:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  4155bc:	and	w6, w0, #0x8
  4155c0:	ldr	x5, [x20, #16]
  4155c4:	and	w7, w0, #0x2
  4155c8:	and	w2, w0, #0x1
  4155cc:	mov	x4, #0x0                   	// #0
  4155d0:	cmp	x5, x4
  4155d4:	b.gt	4155e8 <_obstack_memory_used@@Base+0x543c>
  4155d8:	mov	x0, #0x0                   	// #0
  4155dc:	ldp	x19, x20, [sp, #16]
  4155e0:	ldp	x29, x30, [sp], #32
  4155e4:	ret
  4155e8:	ldr	x0, [x20, #24]
  4155ec:	ldr	x1, [x19, #152]
  4155f0:	ldr	x0, [x0, x4, lsl #3]
  4155f4:	ldr	x1, [x1]
  4155f8:	add	x1, x1, x0, lsl #4
  4155fc:	ldr	w3, [x1, #8]
  415600:	ldrb	w1, [x1, #8]
  415604:	ubfx	x3, x3, #8, #10
  415608:	cmp	w1, #0x2
  41560c:	b.ne	415634 <_obstack_memory_used@@Base+0x5488>  // b.any
  415610:	cbz	w3, 4155dc <_obstack_memory_used@@Base+0x5430>
  415614:	tbz	w3, #2, 41561c <_obstack_memory_used@@Base+0x5470>
  415618:	cbz	w2, 415634 <_obstack_memory_used@@Base+0x5488>
  41561c:	tbz	w3, #3, 415624 <_obstack_memory_used@@Base+0x5478>
  415620:	cbnz	w2, 415634 <_obstack_memory_used@@Base+0x5488>
  415624:	tbz	w3, #5, 41562c <_obstack_memory_used@@Base+0x5480>
  415628:	cbz	w7, 415634 <_obstack_memory_used@@Base+0x5488>
  41562c:	tbz	w3, #7, 4155dc <_obstack_memory_used@@Base+0x5430>
  415630:	cbnz	w6, 4155dc <_obstack_memory_used@@Base+0x5430>
  415634:	add	x4, x4, #0x1
  415638:	b	4155d0 <_obstack_memory_used@@Base+0x5424>
  41563c:	stp	x29, x30, [sp, #-112]!
  415640:	mov	x29, sp
  415644:	stp	x19, x20, [sp, #16]
  415648:	mov	x19, x1
  41564c:	ldr	x1, [x1, #8]
  415650:	stp	x21, x22, [sp, #32]
  415654:	mov	x21, x0
  415658:	add	x0, sp, #0x58
  41565c:	stp	x23, x24, [sp, #48]
  415660:	mov	x23, x2
  415664:	mov	w24, w3
  415668:	stp	x25, x26, [sp, #64]
  41566c:	bl	410aa0 <_obstack_memory_used@@Base+0x8f4>
  415670:	mov	w20, w0
  415674:	cbnz	w0, 4156d8 <_obstack_memory_used@@Base+0x552c>
  415678:	mov	x22, #0x0                   	// #0
  41567c:	mov	x26, #0x18                  	// #24
  415680:	ldp	x1, x0, [x19, #8]
  415684:	cmp	x1, x22
  415688:	b.gt	4156a4 <_obstack_memory_used@@Base+0x54f8>
  41568c:	bl	402c20 <free@plt>
  415690:	ldp	x0, x1, [sp, #88]
  415694:	stp	x0, x1, [x19]
  415698:	ldr	x0, [sp, #104]
  41569c:	str	x0, [x19, #16]
  4156a0:	b	4156d8 <_obstack_memory_used@@Base+0x552c>
  4156a4:	ldr	x2, [x0, x22, lsl #3]
  4156a8:	mov	x0, #0x0                   	// #0
  4156ac:	ldr	x1, [x21, #48]
  4156b0:	madd	x1, x2, x26, x1
  4156b4:	ldr	x5, [x1, #8]
  4156b8:	cmp	x0, x5
  4156bc:	b.lt	4156f4 <_obstack_memory_used@@Base+0x5548>  // b.tstop
  4156c0:	add	x0, sp, #0x58
  4156c4:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  4156c8:	cbz	w0, 415748 <_obstack_memory_used@@Base+0x559c>
  4156cc:	mov	w20, w0
  4156d0:	ldr	x0, [sp, #104]
  4156d4:	bl	402c20 <free@plt>
  4156d8:	mov	w0, w20
  4156dc:	ldp	x19, x20, [sp, #16]
  4156e0:	ldp	x21, x22, [sp, #32]
  4156e4:	ldp	x23, x24, [sp, #48]
  4156e8:	ldp	x25, x26, [sp, #64]
  4156ec:	ldp	x29, x30, [sp], #112
  4156f0:	ret
  4156f4:	ldr	x3, [x1, #16]
  4156f8:	ldr	x4, [x21]
  4156fc:	ldr	x3, [x3, x0, lsl #3]
  415700:	add	x7, x4, x3, lsl #4
  415704:	lsl	x6, x3, #4
  415708:	ldrb	w7, [x7, #8]
  41570c:	cmp	w24, w7
  415710:	b.ne	415720 <_obstack_memory_used@@Base+0x5574>  // b.any
  415714:	ldr	x4, [x4, x6]
  415718:	cmp	x23, x4
  41571c:	b.eq	415728 <_obstack_memory_used@@Base+0x557c>  // b.none
  415720:	add	x0, x0, #0x1
  415724:	b	4156b8 <_obstack_memory_used@@Base+0x550c>
  415728:	cmn	x3, #0x1
  41572c:	b.eq	4156c0 <_obstack_memory_used@@Base+0x5514>  // b.none
  415730:	mov	w4, w24
  415734:	mov	x3, x23
  415738:	add	x1, sp, #0x58
  41573c:	mov	x0, x21
  415740:	bl	412e40 <_obstack_memory_used@@Base+0x2c94>
  415744:	b	4156c8 <_obstack_memory_used@@Base+0x551c>
  415748:	add	x22, x22, #0x1
  41574c:	b	415680 <_obstack_memory_used@@Base+0x54d4>
  415750:	mov	x4, x1
  415754:	mov	x1, x2
  415758:	ldr	x2, [x0, #8]
  41575c:	ldrb	w3, [x2, x1]
  415760:	ldrb	w2, [x4, #8]
  415764:	sub	w2, w2, #0x1
  415768:	cmp	w2, #0x6
  41576c:	b.hi	415824 <_obstack_memory_used@@Base+0x5678>  // b.pmore
  415770:	adrp	x5, 41d000 <_obstack_memory_used@@Base+0xce54>
  415774:	add	x5, x5, #0x20
  415778:	ldrb	w2, [x5, w2, uxtw]
  41577c:	adr	x5, 415788 <_obstack_memory_used@@Base+0x55dc>
  415780:	add	x2, x5, w2, sxtb #2
  415784:	br	x2
  415788:	ldrb	w2, [x4]
  41578c:	cmp	w2, w3
  415790:	b.ne	415824 <_obstack_memory_used@@Base+0x5678>  // b.any
  415794:	stp	x29, x30, [sp, #-32]!
  415798:	mov	x29, sp
  41579c:	str	x19, [sp, #16]
  4157a0:	ldr	w19, [x4, #8]
  4157a4:	tst	w19, #0x3ff00
  4157a8:	b.eq	415840 <_obstack_memory_used@@Base+0x5694>  // b.none
  4157ac:	ldr	w2, [x0, #160]
  4157b0:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  4157b4:	ubfx	x1, x19, #8, #10
  4157b8:	tbz	w19, #10, 4157c0 <_obstack_memory_used@@Base+0x5614>
  4157bc:	tbz	w0, #0, 415848 <_obstack_memory_used@@Base+0x569c>
  4157c0:	tbz	w1, #3, 4157c8 <_obstack_memory_used@@Base+0x561c>
  4157c4:	tbnz	w0, #0, 415848 <_obstack_memory_used@@Base+0x569c>
  4157c8:	tbz	w1, #5, 4157d0 <_obstack_memory_used@@Base+0x5624>
  4157cc:	tbz	w0, #1, 415848 <_obstack_memory_used@@Base+0x569c>
  4157d0:	ubfx	x0, x0, #3, #1
  4157d4:	tst	x1, #0x80
  4157d8:	csinc	w3, w0, wzr, ne  // ne = any
  4157dc:	mov	w0, w3
  4157e0:	ldr	x19, [sp, #16]
  4157e4:	ldp	x29, x30, [sp], #32
  4157e8:	ret
  4157ec:	ldr	x2, [x4]
  4157f0:	ubfx	x5, x3, #6, #2
  4157f4:	ldr	x2, [x2, x5, lsl #3]
  4157f8:	lsr	x2, x2, x3
  4157fc:	and	w3, w2, #0x1
  415800:	tbnz	w2, #0, 415794 <_obstack_memory_used@@Base+0x55e8>
  415804:	mov	w0, w3
  415808:	ret
  41580c:	tbnz	w3, #7, 415824 <_obstack_memory_used@@Base+0x5678>
  415810:	cmp	w3, #0xa
  415814:	b.ne	41582c <_obstack_memory_used@@Base+0x5680>  // b.any
  415818:	ldr	x2, [x0, #152]
  41581c:	ldr	x2, [x2, #216]
  415820:	tbnz	w2, #6, 415794 <_obstack_memory_used@@Base+0x55e8>
  415824:	mov	w3, #0x0                   	// #0
  415828:	b	415804 <_obstack_memory_used@@Base+0x5658>
  41582c:	cbnz	w3, 415794 <_obstack_memory_used@@Base+0x55e8>
  415830:	ldr	x2, [x0, #152]
  415834:	ldr	x2, [x2, #216]
  415838:	tbz	w2, #7, 415794 <_obstack_memory_used@@Base+0x55e8>
  41583c:	b	415824 <_obstack_memory_used@@Base+0x5678>
  415840:	mov	w3, #0x1                   	// #1
  415844:	b	4157dc <_obstack_memory_used@@Base+0x5630>
  415848:	mov	w3, #0x0                   	// #0
  41584c:	b	4157dc <_obstack_memory_used@@Base+0x5630>
  415850:	stp	x29, x30, [sp, #-192]!
  415854:	tst	w4, #0xff
  415858:	mov	x29, sp
  41585c:	ldr	x0, [x0]
  415860:	stp	x19, x20, [sp, #16]
  415864:	mov	x20, x3
  415868:	stp	x21, x22, [sp, #32]
  41586c:	mov	x22, x1
  415870:	stp	x23, x24, [sp, #48]
  415874:	mov	x23, x2
  415878:	stp	x25, x26, [sp, #64]
  41587c:	stp	x27, x28, [sp, #80]
  415880:	str	x0, [x29, #112]
  415884:	mov	x0, #0x2                   	// #2
  415888:	str	xzr, [x29, #168]
  41588c:	str	x0, [x29, #176]
  415890:	str	xzr, [x29, #184]
  415894:	b.eq	415a00 <_obstack_memory_used@@Base+0x5854>  // b.none
  415898:	mov	x0, #0x60                  	// #96
  41589c:	bl	402930 <malloc@plt>
  4158a0:	str	x0, [x29, #184]
  4158a4:	cbz	x0, 415a28 <_obstack_memory_used@@Base+0x587c>
  4158a8:	add	x19, x29, #0xa8
  4158ac:	ldr	x0, [x29, #112]
  4158b0:	stp	xzr, xzr, [x29, #144]
  4158b4:	lsl	x24, x23, #4
  4158b8:	str	xzr, [x29, #160]
  4158bc:	cmp	x24, #0xfbf
  4158c0:	ldr	x25, [x0, #144]
  4158c4:	b.hi	415a08 <_obstack_memory_used@@Base+0x585c>  // b.pmore
  4158c8:	sub	sp, sp, x24
  4158cc:	str	wzr, [x29, #124]
  4158d0:	mov	x21, sp
  4158d4:	mov	x2, x24
  4158d8:	mov	x1, x20
  4158dc:	mov	x0, x21
  4158e0:	bl	402750 <memcpy@plt>
  4158e4:	ldr	x0, [x20]
  4158e8:	str	x0, [x29, #136]
  4158ec:	ldr	x0, [x20, #8]
  4158f0:	ldr	x26, [x29, #136]
  4158f4:	cmp	x0, x26
  4158f8:	b.lt	415ab0 <_obstack_memory_used@@Base+0x5904>  // b.tstop
  4158fc:	ldr	x0, [x29, #112]
  415900:	lsl	x1, x25, #4
  415904:	ldr	x0, [x0]
  415908:	add	x2, x0, x25, lsl #4
  41590c:	ldrb	w4, [x2, #8]
  415910:	cmp	w4, #0x8
  415914:	b.ne	415a30 <_obstack_memory_used@@Base+0x5884>  // b.any
  415918:	ldr	x0, [x0, x1]
  41591c:	add	x0, x0, #0x1
  415920:	cmp	x23, x0
  415924:	b.le	41593c <_obstack_memory_used@@Base+0x5790>
  415928:	lsl	x1, x0, #4
  41592c:	add	x0, x20, x0, lsl #4
  415930:	str	x26, [x20, x1]
  415934:	mov	x1, #0xffffffffffffffff    	// #-1
  415938:	str	x1, [x0, #8]
  41593c:	ldr	x0, [x20, #8]
  415940:	cmp	x0, x26
  415944:	b.ne	415990 <_obstack_memory_used@@Base+0x57e4>  // b.any
  415948:	ldr	x0, [x22, #176]
  41594c:	cmp	x0, x25
  415950:	b.ne	415990 <_obstack_memory_used@@Base+0x57e4>  // b.any
  415954:	cbz	x19, 415af0 <_obstack_memory_used@@Base+0x5944>
  415958:	mov	x0, x20
  41595c:	mov	x1, #0x0                   	// #0
  415960:	ldr	x2, [x0]
  415964:	tbnz	x2, #63, 415aa0 <_obstack_memory_used@@Base+0x58f4>
  415968:	ldr	x2, [x0, #8]
  41596c:	cmn	x2, #0x1
  415970:	b.ne	415aa0 <_obstack_memory_used@@Base+0x58f4>  // b.any
  415974:	add	x4, x29, #0x90
  415978:	mov	x3, x20
  41597c:	mov	x2, x23
  415980:	add	x1, x29, #0x88
  415984:	mov	x0, x19
  415988:	bl	411ad8 <_obstack_memory_used@@Base+0x192c>
  41598c:	mov	x25, x0
  415990:	ldr	x26, [x22, #152]
  415994:	mov	x27, x25
  415998:	lsl	x28, x25, #4
  41599c:	ldr	x0, [x26]
  4159a0:	add	x2, x0, x25, lsl #4
  4159a4:	ldrb	w1, [x2, #8]
  4159a8:	tbz	w1, #3, 415bf0 <_obstack_memory_used@@Base+0x5a44>
  4159ac:	ldr	x1, [x29, #136]
  4159b0:	ldr	x0, [x22, #184]
  4159b4:	ldr	x28, [x26, #40]
  4159b8:	ldr	x27, [x0, x1, lsl #3]
  4159bc:	mov	x0, #0x18                  	// #24
  4159c0:	mov	x1, x25
  4159c4:	madd	x28, x25, x0, x28
  4159c8:	add	x27, x27, #0x8
  4159cc:	add	x0, x29, #0x90
  4159d0:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  4159d4:	tst	w0, #0xff
  4159d8:	b.eq	415bc8 <_obstack_memory_used@@Base+0x5a1c>  // b.none
  4159dc:	ldr	x7, [x28, #8]
  4159e0:	mov	x25, #0xffffffffffffffff    	// #-1
  4159e4:	mov	x6, #0x0                   	// #0
  4159e8:	cmp	x6, x7
  4159ec:	b.lt	415b10 <_obstack_memory_used@@Base+0x5964>  // b.tstop
  4159f0:	tbz	x25, #63, 4158ec <_obstack_memory_used@@Base+0x5740>
  4159f4:	cmn	x25, #0x2
  4159f8:	b.ne	415c30 <_obstack_memory_used@@Base+0x5a84>  // b.any
  4159fc:	b	415bc8 <_obstack_memory_used@@Base+0x5a1c>
  415a00:	mov	x19, #0x0                   	// #0
  415a04:	b	4158ac <_obstack_memory_used@@Base+0x5700>
  415a08:	mov	x0, x24
  415a0c:	bl	402930 <malloc@plt>
  415a10:	mov	x21, x0
  415a14:	mov	w0, #0x1                   	// #1
  415a18:	str	w0, [x29, #124]
  415a1c:	cbnz	x21, 4158d4 <_obstack_memory_used@@Base+0x5728>
  415a20:	mov	x0, x19
  415a24:	bl	413da4 <_obstack_memory_used@@Base+0x3bf8>
  415a28:	mov	w0, #0xc                   	// #12
  415a2c:	b	415ad0 <_obstack_memory_used@@Base+0x5924>
  415a30:	cmp	w4, #0x9
  415a34:	b.ne	41593c <_obstack_memory_used@@Base+0x5790>  // b.any
  415a38:	ldr	x0, [x0, x1]
  415a3c:	add	x0, x0, #0x1
  415a40:	cmp	x23, x0
  415a44:	b.le	41593c <_obstack_memory_used@@Base+0x5790>
  415a48:	lsl	x1, x0, #4
  415a4c:	add	x0, x20, x0, lsl #4
  415a50:	ldr	x4, [x20, x1]
  415a54:	cmp	x26, x4
  415a58:	b.le	415a74 <_obstack_memory_used@@Base+0x58c8>
  415a5c:	mov	x2, x24
  415a60:	mov	x1, x20
  415a64:	str	x26, [x0, #8]
  415a68:	mov	x0, x21
  415a6c:	bl	402750 <memcpy@plt>
  415a70:	b	41593c <_obstack_memory_used@@Base+0x5790>
  415a74:	ldrb	w2, [x2, #10]
  415a78:	tbz	w2, #3, 415a98 <_obstack_memory_used@@Base+0x58ec>
  415a7c:	ldr	x1, [x21, x1]
  415a80:	cmn	x1, #0x1
  415a84:	b.eq	415a98 <_obstack_memory_used@@Base+0x58ec>  // b.none
  415a88:	mov	x2, x24
  415a8c:	mov	x1, x21
  415a90:	mov	x0, x20
  415a94:	b	415a6c <_obstack_memory_used@@Base+0x58c0>
  415a98:	str	x26, [x0, #8]
  415a9c:	b	41593c <_obstack_memory_used@@Base+0x5790>
  415aa0:	add	x1, x1, #0x1
  415aa4:	add	x0, x0, #0x10
  415aa8:	cmp	x23, x1
  415aac:	b.ne	415960 <_obstack_memory_used@@Base+0x57b4>  // b.any
  415ab0:	ldr	x0, [x29, #160]
  415ab4:	bl	402c20 <free@plt>
  415ab8:	ldr	w0, [x29, #124]
  415abc:	cbz	w0, 415ac8 <_obstack_memory_used@@Base+0x591c>
  415ac0:	mov	x0, x21
  415ac4:	bl	402c20 <free@plt>
  415ac8:	mov	x0, x19
  415acc:	bl	413da4 <_obstack_memory_used@@Base+0x3bf8>
  415ad0:	mov	sp, x29
  415ad4:	ldp	x19, x20, [sp, #16]
  415ad8:	ldp	x21, x22, [sp, #32]
  415adc:	ldp	x23, x24, [sp, #48]
  415ae0:	ldp	x25, x26, [sp, #64]
  415ae4:	ldp	x27, x28, [sp, #80]
  415ae8:	ldp	x29, x30, [sp], #192
  415aec:	ret
  415af0:	ldr	x0, [x29, #160]
  415af4:	bl	402c20 <free@plt>
  415af8:	ldr	w0, [x29, #124]
  415afc:	cbz	w0, 415b08 <_obstack_memory_used@@Base+0x595c>
  415b00:	mov	x0, x21
  415b04:	bl	402c20 <free@plt>
  415b08:	mov	w0, #0x0                   	// #0
  415b0c:	b	415ad0 <_obstack_memory_used@@Base+0x5924>
  415b10:	ldr	x0, [x28, #16]
  415b14:	ldr	x26, [x0, x6, lsl #3]
  415b18:	mov	x0, x27
  415b1c:	mov	x1, x26
  415b20:	bl	410334 <_obstack_memory_used@@Base+0x188>
  415b24:	cbz	x0, 415be8 <_obstack_memory_used@@Base+0x5a3c>
  415b28:	cmn	x25, #0x1
  415b2c:	b.eq	415be4 <_obstack_memory_used@@Base+0x5a38>  // b.none
  415b30:	mov	x1, x25
  415b34:	add	x0, x29, #0x90
  415b38:	bl	410334 <_obstack_memory_used@@Base+0x188>
  415b3c:	cbnz	x0, 415d88 <_obstack_memory_used@@Base+0x5bdc>
  415b40:	cbz	x19, 4159f0 <_obstack_memory_used@@Base+0x5844>
  415b44:	ldp	x27, x1, [x19]
  415b48:	ldr	x2, [x29, #136]
  415b4c:	add	x0, x27, #0x1
  415b50:	str	x0, [x19]
  415b54:	cmp	x0, x1
  415b58:	b.ne	415b84 <_obstack_memory_used@@Base+0x59d8>  // b.any
  415b5c:	mov	x1, #0x60                  	// #96
  415b60:	str	x2, [x29, #104]
  415b64:	mul	x1, x0, x1
  415b68:	ldr	x0, [x19, #16]
  415b6c:	bl	402a80 <realloc@plt>
  415b70:	cbz	x0, 415bc8 <_obstack_memory_used@@Base+0x5a1c>
  415b74:	ldr	x1, [x19, #8]
  415b78:	ldr	x2, [x29, #104]
  415b7c:	lsl	x1, x1, #1
  415b80:	stp	x1, x0, [x19, #8]
  415b84:	mov	x0, #0x30                  	// #48
  415b88:	mul	x27, x27, x0
  415b8c:	ldr	x0, [x19, #16]
  415b90:	add	x28, x0, x27
  415b94:	str	x2, [x0, x27]
  415b98:	mov	x0, x24
  415b9c:	str	x26, [x28, #8]
  415ba0:	bl	402930 <malloc@plt>
  415ba4:	str	x0, [x28, #16]
  415ba8:	cbz	x0, 415bc8 <_obstack_memory_used@@Base+0x5a1c>
  415bac:	mov	x2, x24
  415bb0:	mov	x1, x20
  415bb4:	bl	402750 <memcpy@plt>
  415bb8:	add	x1, x29, #0x90
  415bbc:	add	x0, x28, #0x18
  415bc0:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  415bc4:	cbz	w0, 4159f0 <_obstack_memory_used@@Base+0x5844>
  415bc8:	ldr	x0, [x29, #160]
  415bcc:	bl	402c20 <free@plt>
  415bd0:	ldr	w0, [x29, #124]
  415bd4:	cbz	w0, 415a20 <_obstack_memory_used@@Base+0x5874>
  415bd8:	mov	x0, x21
  415bdc:	bl	402c20 <free@plt>
  415be0:	b	415a20 <_obstack_memory_used@@Base+0x5874>
  415be4:	mov	x25, x26
  415be8:	add	x6, x6, #0x1
  415bec:	b	4159e8 <_obstack_memory_used@@Base+0x583c>
  415bf0:	ldrb	w2, [x2, #10]
  415bf4:	tbz	w2, #4, 415c54 <_obstack_memory_used@@Base+0x5aa8>
  415bf8:	ldr	x3, [x29, #136]
  415bfc:	mov	x2, x22
  415c00:	mov	x1, x25
  415c04:	mov	x0, x26
  415c08:	bl	4121e4 <_obstack_memory_used@@Base+0x2038>
  415c0c:	sxtw	x2, w0
  415c10:	cbnz	w0, 415d38 <_obstack_memory_used@@Base+0x5b8c>
  415c14:	ldr	x2, [x29, #136]
  415c18:	mov	x0, x22
  415c1c:	ldr	x1, [x26]
  415c20:	add	x1, x1, x28
  415c24:	bl	415750 <_obstack_memory_used@@Base+0x55a4>
  415c28:	tst	w0, #0xff
  415c2c:	b.ne	415d34 <_obstack_memory_used@@Base+0x5b88>  // b.any
  415c30:	cbnz	x19, 415cc8 <_obstack_memory_used@@Base+0x5b1c>
  415c34:	ldr	x0, [x29, #160]
  415c38:	bl	402c20 <free@plt>
  415c3c:	ldr	w0, [x29, #124]
  415c40:	cbz	w0, 415c4c <_obstack_memory_used@@Base+0x5aa0>
  415c44:	mov	x0, x21
  415c48:	bl	402c20 <free@plt>
  415c4c:	mov	w0, #0x1                   	// #1
  415c50:	b	415ad0 <_obstack_memory_used@@Base+0x5924>
  415c54:	cmp	w1, #0x4
  415c58:	b.ne	415c14 <_obstack_memory_used@@Base+0x5a68>  // b.any
  415c5c:	ldr	x0, [x0, x28]
  415c60:	add	x0, x0, #0x1
  415c64:	cmp	x23, x0
  415c68:	b.le	415d90 <_obstack_memory_used@@Base+0x5be4>
  415c6c:	lsl	x2, x0, #4
  415c70:	add	x0, x20, x0, lsl #4
  415c74:	ldr	x1, [x0, #8]
  415c78:	ldr	x0, [x20, x2]
  415c7c:	sub	x2, x1, x0
  415c80:	cbz	x19, 415ce8 <_obstack_memory_used@@Base+0x5b3c>
  415c84:	cmn	x0, #0x1
  415c88:	b.eq	415cc8 <_obstack_memory_used@@Base+0x5b1c>  // b.none
  415c8c:	cmn	x1, #0x1
  415c90:	b.eq	415cc8 <_obstack_memory_used@@Base+0x5b1c>  // b.none
  415c94:	cbz	x2, 415cec <_obstack_memory_used@@Base+0x5b40>
  415c98:	ldr	x3, [x22, #48]
  415c9c:	ldr	x1, [x29, #136]
  415ca0:	ldr	x4, [x22, #8]
  415ca4:	sub	x3, x3, x1
  415ca8:	cmp	x2, x3
  415cac:	b.gt	415cc8 <_obstack_memory_used@@Base+0x5b1c>
  415cb0:	add	x1, x4, x1
  415cb4:	add	x0, x4, x0
  415cb8:	str	x2, [x29, #104]
  415cbc:	bl	402bb0 <memcmp@plt>
  415cc0:	ldr	x2, [x29, #104]
  415cc4:	cbz	w0, 415d38 <_obstack_memory_used@@Base+0x5b8c>
  415cc8:	add	x4, x29, #0x90
  415ccc:	mov	x3, x20
  415cd0:	mov	x2, x23
  415cd4:	add	x1, x29, #0x88
  415cd8:	mov	x0, x19
  415cdc:	bl	411ad8 <_obstack_memory_used@@Base+0x192c>
  415ce0:	mov	x25, x0
  415ce4:	b	4158ec <_obstack_memory_used@@Base+0x5740>
  415ce8:	cbnz	x2, 415d38 <_obstack_memory_used@@Base+0x5b8c>
  415cec:	mov	x1, x25
  415cf0:	add	x0, x29, #0x90
  415cf4:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  415cf8:	tst	w0, #0xff
  415cfc:	b.eq	415bc8 <_obstack_memory_used@@Base+0x5a1c>  // b.none
  415d00:	ldr	x0, [x26, #40]
  415d04:	mov	x1, #0x18                  	// #24
  415d08:	madd	x3, x25, x1, x0
  415d0c:	ldr	x1, [x29, #136]
  415d10:	ldr	x0, [x3, #16]
  415d14:	ldr	x25, [x0]
  415d18:	ldr	x0, [x22, #184]
  415d1c:	ldr	x0, [x0, x1, lsl #3]
  415d20:	mov	x1, x25
  415d24:	add	x0, x0, #0x8
  415d28:	bl	410334 <_obstack_memory_used@@Base+0x188>
  415d2c:	cbz	x0, 415c14 <_obstack_memory_used@@Base+0x5a68>
  415d30:	b	4159f0 <_obstack_memory_used@@Base+0x5844>
  415d34:	mov	x2, #0x0                   	// #0
  415d38:	ldr	x0, [x26, #24]
  415d3c:	cmp	x2, #0x0
  415d40:	ldr	x25, [x0, x27, lsl #3]
  415d44:	ldr	x0, [x29, #136]
  415d48:	add	x1, x2, x0
  415d4c:	csinc	x0, x1, x0, ne  // ne = any
  415d50:	str	x0, [x29, #136]
  415d54:	cbz	x19, 415d80 <_obstack_memory_used@@Base+0x5bd4>
  415d58:	ldr	x1, [x22, #168]
  415d5c:	cmp	x0, x1
  415d60:	b.gt	415cc8 <_obstack_memory_used@@Base+0x5b1c>
  415d64:	ldr	x1, [x22, #184]
  415d68:	ldr	x0, [x1, x0, lsl #3]
  415d6c:	cbz	x0, 415cc8 <_obstack_memory_used@@Base+0x5b1c>
  415d70:	mov	x1, x25
  415d74:	add	x0, x0, #0x8
  415d78:	bl	410334 <_obstack_memory_used@@Base+0x188>
  415d7c:	cbz	x0, 415cc8 <_obstack_memory_used@@Base+0x5b1c>
  415d80:	str	xzr, [x29, #152]
  415d84:	b	4159f0 <_obstack_memory_used@@Base+0x5844>
  415d88:	mov	x25, x26
  415d8c:	b	4159f0 <_obstack_memory_used@@Base+0x5844>
  415d90:	cbz	x19, 415cec <_obstack_memory_used@@Base+0x5b40>
  415d94:	b	415cc8 <_obstack_memory_used@@Base+0x5b1c>
  415d98:	stp	x29, x30, [sp, #-64]!
  415d9c:	mov	x29, sp
  415da0:	stp	x21, x22, [sp, #32]
  415da4:	mov	x21, x1
  415da8:	mov	x22, x0
  415dac:	ldr	x1, [x2, #8]
  415db0:	stp	x19, x20, [sp, #16]
  415db4:	stp	x23, x24, [sp, #48]
  415db8:	cbnz	x1, 415ddc <_obstack_memory_used@@Base+0x5c30>
  415dbc:	str	wzr, [x0]
  415dc0:	mov	x19, #0x0                   	// #0
  415dc4:	mov	x0, x19
  415dc8:	ldp	x19, x20, [sp, #16]
  415dcc:	ldp	x21, x22, [sp, #32]
  415dd0:	ldp	x23, x24, [sp, #48]
  415dd4:	ldp	x29, x30, [sp], #64
  415dd8:	ret
  415ddc:	mov	x20, x2
  415de0:	mov	x23, x1
  415de4:	mov	x0, #0x0                   	// #0
  415de8:	cmp	x1, x0
  415dec:	b.gt	415e54 <_obstack_memory_used@@Base+0x5ca8>
  415df0:	ldr	x0, [x21, #136]
  415df4:	mov	x1, #0x18                  	// #24
  415df8:	mov	x7, #0x0                   	// #0
  415dfc:	and	x0, x23, x0
  415e00:	mul	x0, x0, x1
  415e04:	ldr	x1, [x21, #64]
  415e08:	add	x9, x1, x0
  415e0c:	ldr	x8, [x1, x0]
  415e10:	cmp	x8, x7
  415e14:	b.gt	415e68 <_obstack_memory_used@@Base+0x5cbc>
  415e18:	mov	x1, #0x1                   	// #1
  415e1c:	mov	x0, #0x70                  	// #112
  415e20:	bl	402a60 <calloc@plt>
  415e24:	mov	x19, x0
  415e28:	cbz	x0, 415e48 <_obstack_memory_used@@Base+0x5c9c>
  415e2c:	add	x24, x0, #0x8
  415e30:	mov	x1, x20
  415e34:	mov	x0, x24
  415e38:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  415e3c:	cbz	w0, 415e98 <_obstack_memory_used@@Base+0x5cec>
  415e40:	mov	x0, x19
  415e44:	bl	402c20 <free@plt>
  415e48:	mov	w0, #0xc                   	// #12
  415e4c:	str	w0, [x22]
  415e50:	b	415dc0 <_obstack_memory_used@@Base+0x5c14>
  415e54:	ldr	x2, [x20, #16]
  415e58:	ldr	x2, [x2, x0, lsl #3]
  415e5c:	add	x0, x0, #0x1
  415e60:	add	x23, x23, x2
  415e64:	b	415de8 <_obstack_memory_used@@Base+0x5c3c>
  415e68:	ldr	x0, [x9, #16]
  415e6c:	ldr	x19, [x0, x7, lsl #3]
  415e70:	ldr	x0, [x19]
  415e74:	cmp	x0, x23
  415e78:	b.ne	415e90 <_obstack_memory_used@@Base+0x5ce4>  // b.any
  415e7c:	mov	x1, x20
  415e80:	add	x0, x19, #0x8
  415e84:	bl	4102d8 <_obstack_memory_used@@Base+0x12c>
  415e88:	tst	w0, #0xff
  415e8c:	b.ne	415dc4 <_obstack_memory_used@@Base+0x5c18>  // b.any
  415e90:	add	x7, x7, #0x1
  415e94:	b	415e10 <_obstack_memory_used@@Base+0x5c64>
  415e98:	ldr	x6, [x20, #8]
  415e9c:	mov	x0, #0x0                   	// #0
  415ea0:	str	x24, [x19, #80]
  415ea4:	cmp	x0, x6
  415ea8:	b.lt	415ecc <_obstack_memory_used@@Base+0x5d20>  // b.tstop
  415eac:	mov	x2, x23
  415eb0:	mov	x1, x19
  415eb4:	mov	x0, x21
  415eb8:	bl	413354 <_obstack_memory_used@@Base+0x31a8>
  415ebc:	cbz	w0, 415dc4 <_obstack_memory_used@@Base+0x5c18>
  415ec0:	mov	x0, x19
  415ec4:	bl	4115f0 <_obstack_memory_used@@Base+0x1444>
  415ec8:	b	415e48 <_obstack_memory_used@@Base+0x5c9c>
  415ecc:	ldr	x1, [x20, #16]
  415ed0:	ldr	x2, [x21]
  415ed4:	ldr	x1, [x1, x0, lsl #3]
  415ed8:	add	x1, x2, x1, lsl #4
  415edc:	ldrb	w2, [x1, #8]
  415ee0:	cmp	w2, #0x1
  415ee4:	b.ne	415ef4 <_obstack_memory_used@@Base+0x5d48>  // b.any
  415ee8:	ldr	w3, [x1, #8]
  415eec:	tst	w3, #0x3ff00
  415ef0:	b.eq	415f20 <_obstack_memory_used@@Base+0x5d74>  // b.none
  415ef4:	ldrb	w3, [x19, #104]
  415ef8:	cmp	w2, #0x2
  415efc:	ldrb	w5, [x1, #10]
  415f00:	ubfx	x4, x3, #5, #1
  415f04:	ubfx	x5, x5, #4, #1
  415f08:	orr	w4, w4, w5
  415f0c:	bfi	w3, w4, #5, #1
  415f10:	strb	w3, [x19, #104]
  415f14:	b.ne	415f28 <_obstack_memory_used@@Base+0x5d7c>  // b.any
  415f18:	orr	w3, w3, #0x10
  415f1c:	strb	w3, [x19, #104]
  415f20:	add	x0, x0, #0x1
  415f24:	b	415ea4 <_obstack_memory_used@@Base+0x5cf8>
  415f28:	cmp	w2, #0x4
  415f2c:	b.ne	415f38 <_obstack_memory_used@@Base+0x5d8c>  // b.any
  415f30:	orr	w3, w3, #0x40
  415f34:	b	415f1c <_obstack_memory_used@@Base+0x5d70>
  415f38:	cmp	w2, #0xc
  415f3c:	b.eq	415f4c <_obstack_memory_used@@Base+0x5da0>  // b.none
  415f40:	ldr	w1, [x1, #8]
  415f44:	tst	w1, #0x3ff00
  415f48:	b.eq	415f20 <_obstack_memory_used@@Base+0x5d74>  // b.none
  415f4c:	ldrb	w1, [x19, #104]
  415f50:	orr	w1, w1, #0xffffff80
  415f54:	strb	w1, [x19, #104]
  415f58:	b	415f20 <_obstack_memory_used@@Base+0x5d74>
  415f5c:	stp	x29, x30, [sp, #-96]!
  415f60:	mov	x29, sp
  415f64:	stp	x19, x20, [sp, #16]
  415f68:	mov	x20, x1
  415f6c:	mov	x19, #0x0                   	// #0
  415f70:	stp	x21, x22, [sp, #32]
  415f74:	mov	x22, x0
  415f78:	mov	x21, x3
  415f7c:	str	x23, [sp, #48]
  415f80:	mov	x23, x2
  415f84:	cmp	x19, x21
  415f88:	b.lt	415f94 <_obstack_memory_used@@Base+0x5de8>  // b.tstop
  415f8c:	mov	w0, #0x0                   	// #0
  415f90:	b	415fec <_obstack_memory_used@@Base+0x5e40>
  415f94:	ldr	x1, [x20, x19, lsl #3]
  415f98:	ldr	x2, [x23, x19, lsl #3]
  415f9c:	cbnz	x1, 415fac <_obstack_memory_used@@Base+0x5e00>
  415fa0:	str	x2, [x20, x19, lsl #3]
  415fa4:	add	x19, x19, #0x1
  415fa8:	b	415f84 <_obstack_memory_used@@Base+0x5dd8>
  415fac:	cbz	x2, 415fa4 <_obstack_memory_used@@Base+0x5df8>
  415fb0:	add	x2, x2, #0x8
  415fb4:	add	x1, x1, #0x8
  415fb8:	add	x0, sp, #0x48
  415fbc:	bl	4134c4 <_obstack_memory_used@@Base+0x3318>
  415fc0:	str	w0, [sp, #68]
  415fc4:	cbnz	w0, 415fec <_obstack_memory_used@@Base+0x5e40>
  415fc8:	add	x2, sp, #0x48
  415fcc:	mov	x1, x22
  415fd0:	add	x0, sp, #0x44
  415fd4:	bl	415d98 <_obstack_memory_used@@Base+0x5bec>
  415fd8:	str	x0, [x20, x19, lsl #3]
  415fdc:	ldr	x0, [sp, #88]
  415fe0:	bl	402c20 <free@plt>
  415fe4:	ldr	w0, [sp, #68]
  415fe8:	cbz	w0, 415fa4 <_obstack_memory_used@@Base+0x5df8>
  415fec:	ldp	x19, x20, [sp, #16]
  415ff0:	ldp	x21, x22, [sp, #32]
  415ff4:	ldr	x23, [sp, #48]
  415ff8:	ldp	x29, x30, [sp], #96
  415ffc:	ret
  416000:	stp	x29, x30, [sp, #-128]!
  416004:	mov	x29, sp
  416008:	stp	x19, x20, [sp, #16]
  41600c:	stp	x21, x22, [sp, #32]
  416010:	mov	x21, x0
  416014:	stp	x23, x24, [sp, #48]
  416018:	mov	x23, x1
  41601c:	mov	x24, x2
  416020:	mov	x1, x2
  416024:	stp	x25, x26, [sp, #64]
  416028:	mov	x26, x3
  41602c:	stp	x27, x28, [sp, #80]
  416030:	mov	w27, w4
  416034:	bl	410704 <_obstack_memory_used@@Base+0x558>
  416038:	cmn	x0, #0x1
  41603c:	b.ne	416060 <_obstack_memory_used@@Base+0x5eb4>  // b.any
  416040:	mov	w0, #0x0                   	// #0
  416044:	ldp	x19, x20, [sp, #16]
  416048:	ldp	x21, x22, [sp, #32]
  41604c:	ldp	x23, x24, [sp, #48]
  416050:	ldp	x25, x26, [sp, #64]
  416054:	ldp	x27, x28, [sp, #80]
  416058:	ldp	x29, x30, [sp], #128
  41605c:	ret
  416060:	mov	x22, #0x28                  	// #40
  416064:	ldr	x25, [x21, #152]
  416068:	mul	x22, x0, x22
  41606c:	ldr	x20, [x21, #216]
  416070:	add	x20, x20, x22
  416074:	ldr	x1, [x20]
  416078:	mov	x0, x23
  41607c:	bl	410334 <_obstack_memory_used@@Base+0x188>
  416080:	cbz	x0, 4161ac <_obstack_memory_used@@Base+0x6000>
  416084:	ldp	x0, x19, [x20, #16]
  416088:	add	x19, x24, x19
  41608c:	sub	x19, x19, x0
  416090:	cmp	x24, x19
  416094:	b.ne	416114 <_obstack_memory_used@@Base+0x5f68>  // b.any
  416098:	ldr	x0, [x25, #40]
  41609c:	mov	x2, #0x18                  	// #24
  4160a0:	madd	x1, x1, x2, x0
  4160a4:	ldr	x0, [x1, #16]
  4160a8:	ldr	x1, [x0]
  4160ac:	mov	x0, x23
  4160b0:	bl	410334 <_obstack_memory_used@@Base+0x188>
  4160b4:	cbnz	x0, 4161ac <_obstack_memory_used@@Base+0x6000>
  4160b8:	add	x0, sp, #0x68
  4160bc:	bl	410a54 <_obstack_memory_used@@Base+0x8a8>
  4160c0:	mov	w3, w27
  4160c4:	mov	x2, x26
  4160c8:	add	x1, sp, #0x68
  4160cc:	str	w0, [sp, #100]
  4160d0:	mov	x0, x25
  4160d4:	bl	41563c <_obstack_memory_used@@Base+0x5490>
  4160d8:	add	x1, sp, #0x68
  4160dc:	mov	w19, w0
  4160e0:	mov	x0, x23
  4160e4:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  4160e8:	mov	w20, w0
  4160ec:	ldr	x0, [sp, #120]
  4160f0:	bl	402c20 <free@plt>
  4160f4:	ldr	w0, [sp, #100]
  4160f8:	orr	w1, w19, w20
  4160fc:	orr	w1, w1, w0
  416100:	cbz	w1, 41606c <_obstack_memory_used@@Base+0x5ec0>
  416104:	cbnz	w0, 416044 <_obstack_memory_used@@Base+0x5e98>
  416108:	cmp	w19, #0x0
  41610c:	csel	w0, w19, w20, ne  // ne = any
  416110:	b	416044 <_obstack_memory_used@@Base+0x5e98>
  416114:	ldr	x0, [x25, #24]
  416118:	lsl	x19, x19, #3
  41611c:	ldr	x28, [x0, x1, lsl #3]
  416120:	ldr	x0, [x21, #184]
  416124:	ldr	x6, [x0, x19]
  416128:	cbz	x6, 4161d8 <_obstack_memory_used@@Base+0x602c>
  41612c:	add	x6, x6, #0x8
  416130:	mov	x1, x28
  416134:	mov	x0, x6
  416138:	bl	410334 <_obstack_memory_used@@Base+0x188>
  41613c:	cbnz	x0, 4161ac <_obstack_memory_used@@Base+0x6000>
  416140:	mov	x1, x6
  416144:	add	x0, sp, #0x68
  416148:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  41614c:	str	w0, [sp, #100]
  416150:	mov	x1, x28
  416154:	add	x0, sp, #0x68
  416158:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  41615c:	and	w0, w0, #0xff
  416160:	ldr	w1, [sp, #100]
  416164:	eor	w0, w0, #0x1
  416168:	cmp	w1, #0x0
  41616c:	cset	w1, ne  // ne = any
  416170:	orr	w0, w1, w0
  416174:	cbnz	w0, 4161bc <_obstack_memory_used@@Base+0x6010>
  416178:	ldr	x28, [x21, #184]
  41617c:	add	x2, sp, #0x68
  416180:	mov	x1, x25
  416184:	add	x0, sp, #0x64
  416188:	bl	415d98 <_obstack_memory_used@@Base+0x5bec>
  41618c:	str	x0, [x28, x19]
  416190:	ldr	x0, [sp, #120]
  416194:	bl	402c20 <free@plt>
  416198:	ldr	x0, [x21, #184]
  41619c:	ldr	x0, [x0, x19]
  4161a0:	cbnz	x0, 4161ac <_obstack_memory_used@@Base+0x6000>
  4161a4:	ldr	w0, [sp, #100]
  4161a8:	cbnz	w0, 416044 <_obstack_memory_used@@Base+0x5e98>
  4161ac:	ldrb	w0, [x20, #32]
  4161b0:	add	x20, x20, #0x28
  4161b4:	cbnz	w0, 416074 <_obstack_memory_used@@Base+0x5ec8>
  4161b8:	b	416040 <_obstack_memory_used@@Base+0x5e94>
  4161bc:	ldr	x0, [sp, #120]
  4161c0:	bl	402c20 <free@plt>
  4161c4:	ldr	w0, [sp, #100]
  4161c8:	mov	w1, #0xc                   	// #12
  4161cc:	cmp	w0, #0x0
  4161d0:	csel	w0, w0, w1, ne  // ne = any
  4161d4:	b	416044 <_obstack_memory_used@@Base+0x5e98>
  4161d8:	mov	x1, x28
  4161dc:	add	x0, sp, #0x68
  4161e0:	bl	410a54 <_obstack_memory_used@@Base+0x8a8>
  4161e4:	str	w0, [sp, #100]
  4161e8:	cbz	w0, 416178 <_obstack_memory_used@@Base+0x5fcc>
  4161ec:	b	416044 <_obstack_memory_used@@Base+0x5e98>
  4161f0:	stp	x29, x30, [sp, #-240]!
  4161f4:	mov	x29, sp
  4161f8:	stp	x23, x24, [sp, #48]
  4161fc:	mov	w23, w6
  416200:	ldr	x24, [x0, #152]
  416204:	stp	x21, x22, [sp, #32]
  416208:	mov	x22, x1
  41620c:	stp	x25, x26, [sp, #64]
  416210:	ldrsw	x21, [x0, #224]
  416214:	ldr	x25, [x1, #8]
  416218:	stp	x19, x20, [sp, #16]
  41621c:	mov	x19, x0
  416220:	ldr	x1, [x24]
  416224:	lsl	x0, x2, #4
  416228:	stp	x27, x28, [sp, #80]
  41622c:	add	x21, x21, x5
  416230:	mov	x20, x2
  416234:	str	x5, [sp, #120]
  416238:	mov	x27, x3
  41623c:	str	x4, [sp, #160]
  416240:	cmp	x21, x25
  416244:	ldr	x26, [x1, x0]
  416248:	str	wzr, [sp, #184]
  41624c:	b.lt	4162b8 <_obstack_memory_used@@Base+0x610c>  // b.tstop
  416250:	add	x21, x21, #0x1
  416254:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  416258:	sub	x0, x0, x25
  41625c:	cmp	x0, x21
  416260:	b.ge	416284 <_obstack_memory_used@@Base+0x60d8>  // b.tcont
  416264:	mov	w0, #0xc                   	// #12
  416268:	ldp	x19, x20, [sp, #16]
  41626c:	ldp	x21, x22, [sp, #32]
  416270:	ldp	x23, x24, [sp, #48]
  416274:	ldp	x25, x26, [sp, #64]
  416278:	ldp	x27, x28, [sp, #80]
  41627c:	ldp	x29, x30, [sp], #240
  416280:	ret
  416284:	add	x28, x25, x21
  416288:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41628c:	cmp	x28, x0
  416290:	b.hi	416264 <_obstack_memory_used@@Base+0x60b8>  // b.pmore
  416294:	ldr	x0, [x22, #16]
  416298:	lsl	x1, x28, #3
  41629c:	bl	402a80 <realloc@plt>
  4162a0:	cbz	x0, 416264 <_obstack_memory_used@@Base+0x60b8>
  4162a4:	stp	x28, x0, [x22, #8]
  4162a8:	lsl	x2, x21, #3
  4162ac:	add	x0, x0, x25, lsl #3
  4162b0:	mov	w1, #0x0                   	// #0
  4162b4:	bl	402a10 <memset@plt>
  4162b8:	ldr	x21, [x22]
  4162bc:	ldr	w2, [x19, #160]
  4162c0:	cmp	x21, #0x0
  4162c4:	ldr	x28, [x22, #16]
  4162c8:	csel	x21, x21, x27, ne  // ne = any
  4162cc:	ldr	x0, [x19, #184]
  4162d0:	str	x0, [sp, #144]
  4162d4:	str	x28, [x19, #184]
  4162d8:	sub	x1, x21, #0x1
  4162dc:	ldr	x0, [x19, #72]
  4162e0:	str	x21, [x19, #72]
  4162e4:	str	x0, [sp, #152]
  4162e8:	mov	x0, x19
  4162ec:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  4162f0:	mov	w25, w0
  4162f4:	cmp	x21, x27
  4162f8:	b.ne	416364 <_obstack_memory_used@@Base+0x61b8>  // b.any
  4162fc:	mov	x1, x20
  416300:	add	x0, sp, #0xc0
  416304:	bl	410a54 <_obstack_memory_used@@Base+0x8a8>
  416308:	str	w0, [sp, #184]
  41630c:	cbnz	w0, 416268 <_obstack_memory_used@@Base+0x60bc>
  416310:	mov	w3, w23
  416314:	mov	x2, x26
  416318:	add	x1, sp, #0xc0
  41631c:	mov	x0, x24
  416320:	bl	41563c <_obstack_memory_used@@Base+0x5490>
  416324:	str	w0, [sp, #184]
  416328:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  41632c:	ldr	x0, [sp, #200]
  416330:	cbnz	x0, 4163a8 <_obstack_memory_used@@Base+0x61fc>
  416334:	mov	w3, w25
  416338:	add	x2, sp, #0xc0
  41633c:	mov	x1, x24
  416340:	add	x0, sp, #0xb8
  416344:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  416348:	mov	x20, x0
  41634c:	cbnz	x0, 416358 <_obstack_memory_used@@Base+0x61ac>
  416350:	ldr	w0, [sp, #184]
  416354:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  416358:	ldr	x0, [x19, #184]
  41635c:	str	x20, [x0, x21, lsl #3]
  416360:	b	416390 <_obstack_memory_used@@Base+0x61e4>
  416364:	ldr	x20, [x28, x21, lsl #3]
  416368:	cbz	x20, 416398 <_obstack_memory_used@@Base+0x61ec>
  41636c:	ldrb	w0, [x20, #104]
  416370:	tbz	w0, #6, 416398 <_obstack_memory_used@@Base+0x61ec>
  416374:	add	x1, x20, #0x8
  416378:	add	x0, sp, #0xc0
  41637c:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  416380:	str	w0, [sp, #184]
  416384:	cbnz	w0, 416268 <_obstack_memory_used@@Base+0x60bc>
  416388:	ldrb	w0, [x20, #104]
  41638c:	tbnz	w0, #6, 41632c <_obstack_memory_used@@Base+0x6180>
  416390:	str	xzr, [sp, #104]
  416394:	b	416598 <_obstack_memory_used@@Base+0x63ec>
  416398:	stp	xzr, xzr, [sp, #192]
  41639c:	str	xzr, [sp, #208]
  4163a0:	cbnz	x20, 416388 <_obstack_memory_used@@Base+0x61dc>
  4163a4:	b	416390 <_obstack_memory_used@@Base+0x61e4>
  4163a8:	mov	w4, w23
  4163ac:	mov	x3, x26
  4163b0:	mov	x2, x21
  4163b4:	add	x1, sp, #0xc0
  4163b8:	mov	x0, x19
  4163bc:	bl	416000 <_obstack_memory_used@@Base+0x5e54>
  4163c0:	str	w0, [sp, #184]
  4163c4:	cbz	w0, 416334 <_obstack_memory_used@@Base+0x6188>
  4163c8:	ldr	x0, [sp, #208]
  4163cc:	bl	402c20 <free@plt>
  4163d0:	ldr	w0, [sp, #184]
  4163d4:	b	416268 <_obstack_memory_used@@Base+0x60bc>
  4163d8:	add	x0, x21, #0x1
  4163dc:	str	x0, [sp, #136]
  4163e0:	str	xzr, [sp, #200]
  4163e4:	lsl	x0, x0, #3
  4163e8:	str	x0, [sp, #128]
  4163ec:	ldr	x0, [x19, #184]
  4163f0:	ldr	x1, [sp, #128]
  4163f4:	ldr	x1, [x0, x1]
  4163f8:	cbz	x1, 416410 <_obstack_memory_used@@Base+0x6264>
  4163fc:	add	x1, x1, #0x8
  416400:	add	x0, sp, #0xc0
  416404:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  416408:	str	w0, [sp, #184]
  41640c:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  416410:	cbz	x20, 416504 <_obstack_memory_used@@Base+0x6358>
  416414:	ldr	x28, [x19, #152]
  416418:	mov	x27, #0x0                   	// #0
  41641c:	str	wzr, [sp, #188]
  416420:	stp	xzr, xzr, [sp, #216]
  416424:	str	xzr, [sp, #232]
  416428:	ldr	x1, [x20, #40]
  41642c:	add	x0, x20, #0x20
  416430:	cmp	x27, x1
  416434:	b.lt	416448 <_obstack_memory_used@@Base+0x629c>  // b.tstop
  416438:	ldr	x0, [sp, #232]
  41643c:	bl	402c20 <free@plt>
  416440:	str	wzr, [sp, #184]
  416444:	b	416504 <_obstack_memory_used@@Base+0x6358>
  416448:	ldr	x0, [x0, #16]
  41644c:	ldr	x25, [x0, x27, lsl #3]
  416450:	ldr	x0, [x28]
  416454:	lsl	x5, x25, #4
  416458:	add	x0, x0, x25, lsl #4
  41645c:	ldrb	w0, [x0, #10]
  416460:	tbnz	w0, #4, 416488 <_obstack_memory_used@@Base+0x62dc>
  416464:	ldr	x1, [x28]
  416468:	mov	x2, x21
  41646c:	mov	x0, x19
  416470:	add	x1, x1, x5
  416474:	bl	415750 <_obstack_memory_used@@Base+0x55a4>
  416478:	tst	w0, #0xff
  41647c:	b.ne	416654 <_obstack_memory_used@@Base+0x64a8>  // b.any
  416480:	add	x27, x27, #0x1
  416484:	b	416428 <_obstack_memory_used@@Base+0x627c>
  416488:	mov	x3, x21
  41648c:	mov	x2, x19
  416490:	mov	x1, x25
  416494:	mov	x0, x28
  416498:	str	x5, [sp, #112]
  41649c:	bl	4121e4 <_obstack_memory_used@@Base+0x2038>
  4164a0:	cmp	w0, #0x1
  4164a4:	ldr	x5, [sp, #112]
  4164a8:	b.le	41667c <_obstack_memory_used@@Base+0x64d0>
  4164ac:	add	x0, x21, w0, sxtw
  4164b0:	ldr	x1, [x28, #24]
  4164b4:	lsl	x0, x0, #3
  4164b8:	str	x0, [sp, #112]
  4164bc:	ldr	x0, [x19, #184]
  4164c0:	ldr	x2, [x1, x25, lsl #3]
  4164c4:	ldr	x1, [sp, #112]
  4164c8:	ldr	x1, [x0, x1]
  4164cc:	str	xzr, [sp, #224]
  4164d0:	cbz	x1, 4165fc <_obstack_memory_used@@Base+0x6450>
  4164d4:	add	x1, x1, #0x8
  4164d8:	add	x0, sp, #0xd8
  4164dc:	str	x2, [sp, #168]
  4164e0:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  4164e4:	str	w0, [sp, #188]
  4164e8:	ldr	x2, [sp, #168]
  4164ec:	cbz	w0, 4165fc <_obstack_memory_used@@Base+0x6450>
  4164f0:	ldr	x0, [sp, #232]
  4164f4:	bl	402c20 <free@plt>
  4164f8:	ldr	w0, [sp, #188]
  4164fc:	str	w0, [sp, #184]
  416500:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  416504:	ldr	x0, [sp, #200]
  416508:	cbz	x0, 416548 <_obstack_memory_used@@Base+0x639c>
  41650c:	mov	w3, w23
  416510:	mov	x2, x26
  416514:	add	x1, sp, #0xc0
  416518:	mov	x0, x24
  41651c:	bl	41563c <_obstack_memory_used@@Base+0x5490>
  416520:	str	w0, [sp, #184]
  416524:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  416528:	ldr	x2, [sp, #136]
  41652c:	mov	w4, w23
  416530:	mov	x3, x26
  416534:	add	x1, sp, #0xc0
  416538:	mov	x0, x19
  41653c:	bl	416000 <_obstack_memory_used@@Base+0x5e54>
  416540:	str	w0, [sp, #184]
  416544:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  416548:	ldr	w2, [x19, #160]
  41654c:	mov	x1, x21
  416550:	mov	x0, x19
  416554:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  416558:	mov	w3, w0
  41655c:	add	x2, sp, #0xc0
  416560:	mov	x1, x24
  416564:	add	x0, sp, #0xb8
  416568:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  41656c:	mov	x20, x0
  416570:	cbnz	x0, 41657c <_obstack_memory_used@@Base+0x63d0>
  416574:	ldr	w0, [sp, #184]
  416578:	cbnz	w0, 4163c8 <_obstack_memory_used@@Base+0x621c>
  41657c:	ldr	x0, [x19, #184]
  416580:	cmp	x20, #0x0
  416584:	ldp	x1, x21, [sp, #128]
  416588:	str	x20, [x0, x1]
  41658c:	ldr	x0, [sp, #104]
  416590:	csinc	x0, xzr, x0, ne  // ne = any
  416594:	str	x0, [sp, #104]
  416598:	ldr	x0, [sp, #120]
  41659c:	cmp	x21, x0
  4165a0:	b.ge	4165b4 <_obstack_memory_used@@Base+0x6408>  // b.tcont
  4165a4:	ldr	x1, [sp, #104]
  4165a8:	ldrsw	x0, [x19, #224]
  4165ac:	cmp	x0, x1
  4165b0:	b.ge	4163d8 <_obstack_memory_used@@Base+0x622c>  // b.tcont
  4165b4:	ldr	x0, [sp, #208]
  4165b8:	bl	402c20 <free@plt>
  4165bc:	ldr	x1, [sp, #120]
  4165c0:	ldr	x0, [x19, #184]
  4165c4:	ldr	x0, [x0, x1, lsl #3]
  4165c8:	cbz	x0, 4165d0 <_obstack_memory_used@@Base+0x6424>
  4165cc:	add	x0, x0, #0x8
  4165d0:	str	x21, [x22]
  4165d4:	ldr	x1, [sp, #144]
  4165d8:	str	x1, [x19, #184]
  4165dc:	ldr	x1, [sp, #152]
  4165e0:	str	x1, [x19, #72]
  4165e4:	cbz	x0, 416684 <_obstack_memory_used@@Base+0x64d8>
  4165e8:	ldr	x1, [sp, #160]
  4165ec:	bl	410334 <_obstack_memory_used@@Base+0x188>
  4165f0:	cmp	x0, #0x0
  4165f4:	cset	w0, eq  // eq = none
  4165f8:	b	416268 <_obstack_memory_used@@Base+0x60bc>
  4165fc:	mov	x1, x2
  416600:	add	x0, sp, #0xd8
  416604:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  416608:	tst	w0, #0xff
  41660c:	b.ne	416624 <_obstack_memory_used@@Base+0x6478>  // b.any
  416610:	ldr	x0, [sp, #232]
  416614:	bl	402c20 <free@plt>
  416618:	mov	w0, #0xc                   	// #12
  41661c:	str	w0, [sp, #184]
  416620:	b	4163c8 <_obstack_memory_used@@Base+0x621c>
  416624:	ldr	x3, [x19, #184]
  416628:	mov	x1, x28
  41662c:	add	x2, sp, #0xd8
  416630:	add	x0, sp, #0xbc
  416634:	str	x3, [sp, #168]
  416638:	bl	415d98 <_obstack_memory_used@@Base+0x5bec>
  41663c:	ldr	x1, [sp, #112]
  416640:	ldr	x3, [sp, #168]
  416644:	str	x0, [x3, x1]
  416648:	ldr	x0, [x19, #184]
  41664c:	ldr	x0, [x0, x1]
  416650:	cbz	x0, 416670 <_obstack_memory_used@@Base+0x64c4>
  416654:	ldr	x0, [x28, #24]
  416658:	ldr	x1, [x0, x25, lsl #3]
  41665c:	add	x0, sp, #0xc0
  416660:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  416664:	tst	w0, #0xff
  416668:	b.ne	416480 <_obstack_memory_used@@Base+0x62d4>  // b.any
  41666c:	b	416610 <_obstack_memory_used@@Base+0x6464>
  416670:	ldr	w0, [sp, #188]
  416674:	cbz	w0, 416654 <_obstack_memory_used@@Base+0x64a8>
  416678:	b	4164f0 <_obstack_memory_used@@Base+0x6344>
  41667c:	cbz	w0, 416464 <_obstack_memory_used@@Base+0x62b8>
  416680:	b	416654 <_obstack_memory_used@@Base+0x64a8>
  416684:	mov	w0, #0x1                   	// #1
  416688:	b	416268 <_obstack_memory_used@@Base+0x60bc>
  41668c:	stp	x29, x30, [sp, #-80]!
  416690:	mov	x5, x4
  416694:	mov	w6, #0x8                   	// #8
  416698:	mov	x29, sp
  41669c:	stp	x19, x20, [sp, #16]
  4166a0:	mov	x20, x4
  4166a4:	mov	x4, x3
  4166a8:	stp	x21, x22, [sp, #32]
  4166ac:	mov	x21, x2
  4166b0:	mov	x19, x0
  4166b4:	stp	x23, x24, [sp, #48]
  4166b8:	mov	x23, x1
  4166bc:	mov	x24, x3
  4166c0:	add	x1, x2, #0x10
  4166c4:	ldr	x3, [x2, #8]
  4166c8:	ldr	x2, [x2]
  4166cc:	str	x25, [sp, #64]
  4166d0:	bl	4161f0 <_obstack_memory_used@@Base+0x6044>
  4166d4:	cbnz	w0, 41670c <_obstack_memory_used@@Base+0x6560>
  4166d8:	ldp	x1, x0, [x19, #200]
  4166dc:	ldr	x25, [x23]
  4166e0:	ldr	x22, [x21, #8]
  4166e4:	cmp	x1, x0
  4166e8:	b.lt	41674c <_obstack_memory_used@@Base+0x65a0>  // b.tstop
  4166ec:	mov	x1, #0x50                  	// #80
  4166f0:	mul	x1, x0, x1
  4166f4:	ldr	x0, [x19, #216]
  4166f8:	bl	402a80 <realloc@plt>
  4166fc:	cbnz	x0, 416724 <_obstack_memory_used@@Base+0x6578>
  416700:	ldr	x0, [x19, #216]
  416704:	bl	402c20 <free@plt>
  416708:	mov	w0, #0xc                   	// #12
  41670c:	ldp	x19, x20, [sp, #16]
  416710:	ldp	x21, x22, [sp, #32]
  416714:	ldp	x23, x24, [sp, #48]
  416718:	ldr	x25, [sp, #64]
  41671c:	ldp	x29, x30, [sp], #80
  416720:	ret
  416724:	ldp	x4, x2, [x19, #200]
  416728:	mov	x3, #0x28                  	// #40
  41672c:	str	x0, [x19, #216]
  416730:	mov	w1, #0x0                   	// #0
  416734:	mul	x2, x2, x3
  416738:	madd	x0, x4, x3, x0
  41673c:	bl	402a10 <memset@plt>
  416740:	ldr	x0, [x19, #208]
  416744:	lsl	x0, x0, #1
  416748:	str	x0, [x19, #208]
  41674c:	ldr	x1, [x19, #200]
  416750:	mov	x2, #0x28                  	// #40
  416754:	ldr	x3, [x19, #216]
  416758:	cmp	x1, #0x0
  41675c:	mul	x2, x1, x2
  416760:	b.le	416780 <_obstack_memory_used@@Base+0x65d4>
  416764:	sub	x0, x2, #0x28
  416768:	add	x0, x3, x0
  41676c:	ldr	x4, [x0, #8]
  416770:	cmp	x20, x4
  416774:	b.ne	416780 <_obstack_memory_used@@Base+0x65d4>  // b.any
  416778:	mov	w4, #0x1                   	// #1
  41677c:	strb	w4, [x0, #32]
  416780:	add	x0, x3, x2
  416784:	cmp	x25, x22
  416788:	str	x24, [x3, x2]
  41678c:	csetm	w2, eq  // eq = none
  416790:	add	x1, x1, #0x1
  416794:	stp	x20, x25, [x0, #8]
  416798:	str	x22, [x0, #24]
  41679c:	strh	w2, [x0, #34]
  4167a0:	str	x1, [x19, #200]
  4167a4:	strb	wzr, [x0, #32]
  4167a8:	sub	x0, x22, x25
  4167ac:	ldrsw	x1, [x19, #224]
  4167b0:	cmp	x1, x0
  4167b4:	b.ge	4167c0 <_obstack_memory_used@@Base+0x6614>  // b.tcont
  4167b8:	sub	w22, w22, w25
  4167bc:	str	w22, [x19, #224]
  4167c0:	ldr	x5, [x21, #8]
  4167c4:	mov	x0, x19
  4167c8:	ldr	x1, [x23]
  4167cc:	add	x20, x20, x5
  4167d0:	ldp	x21, x22, [sp, #32]
  4167d4:	sub	x1, x20, x1
  4167d8:	ldp	x19, x20, [sp, #16]
  4167dc:	ldp	x23, x24, [sp, #48]
  4167e0:	ldr	x25, [sp, #64]
  4167e4:	ldp	x29, x30, [sp], #80
  4167e8:	b	411290 <_obstack_memory_used@@Base+0x10e4>
  4167ec:	stp	x29, x30, [sp, #-208]!
  4167f0:	mov	x29, sp
  4167f4:	stp	x19, x20, [sp, #16]
  4167f8:	ldr	x19, [x0, #72]
  4167fc:	stp	x21, x22, [sp, #32]
  416800:	stp	x23, x24, [sp, #48]
  416804:	mov	x23, x0
  416808:	stp	x25, x26, [sp, #64]
  41680c:	stp	x27, x28, [sp, #80]
  416810:	str	xzr, [sp, #96]
  416814:	str	x1, [sp, #160]
  416818:	ldr	x22, [x0, #152]
  41681c:	lsl	x0, x19, #3
  416820:	str	x0, [sp, #128]
  416824:	ldr	x0, [sp, #160]
  416828:	ldr	x1, [sp, #96]
  41682c:	ldr	x0, [x0, #8]
  416830:	cmp	x0, x1
  416834:	b.gt	416840 <_obstack_memory_used@@Base+0x6694>
  416838:	str	wzr, [sp, #180]
  41683c:	b	416a08 <_obstack_memory_used@@Base+0x685c>
  416840:	ldr	x0, [sp, #160]
  416844:	ldr	x1, [sp, #96]
  416848:	ldr	x0, [x0, #16]
  41684c:	ldr	x21, [x0, x1, lsl #3]
  416850:	ldr	x0, [x22]
  416854:	lsl	x20, x21, #4
  416858:	add	x0, x0, x21, lsl #4
  41685c:	ldrb	w1, [x0, #8]
  416860:	cmp	w1, #0x4
  416864:	b.eq	416878 <_obstack_memory_used@@Base+0x66cc>  // b.none
  416868:	ldr	x0, [sp, #96]
  41686c:	add	x0, x0, #0x1
  416870:	str	x0, [sp, #96]
  416874:	b	416824 <_obstack_memory_used@@Base+0x6678>
  416878:	ldr	w25, [x0, #8]
  41687c:	tst	w25, #0x3ff00
  416880:	b.eq	4168b8 <_obstack_memory_used@@Base+0x670c>  // b.none
  416884:	ldr	w2, [x23, #160]
  416888:	mov	x1, x19
  41688c:	mov	x0, x23
  416890:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  416894:	ubfx	x1, x25, #8, #10
  416898:	tbz	w25, #10, 4168a0 <_obstack_memory_used@@Base+0x66f4>
  41689c:	tbz	w0, #0, 416868 <_obstack_memory_used@@Base+0x66bc>
  4168a0:	tbz	w1, #3, 4168a8 <_obstack_memory_used@@Base+0x66fc>
  4168a4:	tbnz	w0, #0, 416868 <_obstack_memory_used@@Base+0x66bc>
  4168a8:	tbz	w1, #5, 4168b0 <_obstack_memory_used@@Base+0x6704>
  4168ac:	tbz	w0, #1, 416868 <_obstack_memory_used@@Base+0x66bc>
  4168b0:	tbz	w1, #7, 4168b8 <_obstack_memory_used@@Base+0x670c>
  4168b4:	tbz	w0, #3, 416868 <_obstack_memory_used@@Base+0x66bc>
  4168b8:	ldr	x0, [x23, #200]
  4168bc:	mov	x1, x19
  4168c0:	str	x0, [sp, #104]
  4168c4:	mov	x0, x23
  4168c8:	bl	410704 <_obstack_memory_used@@Base+0x558>
  4168cc:	cmn	x0, #0x1
  4168d0:	b.eq	416950 <_obstack_memory_used@@Base+0x67a4>  // b.none
  4168d4:	ldr	x1, [x23, #216]
  4168d8:	mov	x2, #0x28                  	// #40
  4168dc:	madd	x0, x0, x2, x1
  4168e0:	ldr	x1, [x0]
  4168e4:	cmp	x21, x1
  4168e8:	b.ne	416944 <_obstack_memory_used@@Base+0x6798>  // b.any
  4168ec:	lsl	x0, x21, #3
  4168f0:	str	wzr, [sp, #180]
  4168f4:	mov	x24, x0
  4168f8:	mov	x0, #0x18                  	// #24
  4168fc:	mul	x0, x21, x0
  416900:	mov	x25, x0
  416904:	ldr	x1, [sp, #104]
  416908:	ldr	x0, [x23, #200]
  41690c:	cmp	x0, x1
  416910:	b.le	416868 <_obstack_memory_used@@Base+0x66bc>
  416914:	ldr	x0, [sp, #104]
  416918:	mov	x1, #0x28                  	// #40
  41691c:	ldr	x2, [x23, #216]
  416920:	mul	x0, x0, x1
  416924:	add	x1, x2, x0
  416928:	ldr	x0, [x2, x0]
  41692c:	cmp	x0, x21
  416930:	b.eq	416c34 <_obstack_memory_used@@Base+0x6a88>  // b.none
  416934:	ldr	x0, [sp, #104]
  416938:	add	x0, x0, #0x1
  41693c:	str	x0, [sp, #104]
  416940:	b	416904 <_obstack_memory_used@@Base+0x6758>
  416944:	ldrb	w1, [x0, #32]
  416948:	add	x0, x0, #0x28
  41694c:	cbnz	w1, 4168e0 <_obstack_memory_used@@Base+0x6734>
  416950:	ldr	x28, [x23, #152]
  416954:	str	xzr, [sp, #112]
  416958:	ldr	x24, [x23, #8]
  41695c:	ldr	x0, [x28]
  416960:	ldr	x0, [x0, x20]
  416964:	str	x0, [sp, #136]
  416968:	ldr	x1, [sp, #112]
  41696c:	ldr	x0, [x23, #232]
  416970:	cmp	x1, x0
  416974:	b.ge	4168ec <_obstack_memory_used@@Base+0x6740>  // b.tcont
  416978:	ldr	x1, [sp, #112]
  41697c:	ldr	x0, [x23, #248]
  416980:	ldr	x26, [x0, x1, lsl #3]
  416984:	ldr	x1, [x28]
  416988:	ldr	x0, [x26, #8]
  41698c:	lsl	x0, x0, #4
  416990:	ldr	x0, [x1, x0]
  416994:	ldr	x1, [sp, #136]
  416998:	cmp	x1, x0
  41699c:	b.ne	416a8c <_obstack_memory_used@@Base+0x68e0>  // b.any
  4169a0:	ldr	x25, [x26]
  4169a4:	mov	x20, x19
  4169a8:	mov	x27, #0x0                   	// #0
  4169ac:	ldr	x0, [x26, #32]
  4169b0:	cmp	x27, x0
  4169b4:	b.ge	416a70 <_obstack_memory_used@@Base+0x68c4>  // b.tcont
  4169b8:	ldr	x0, [x26, #40]
  4169bc:	ldr	x0, [x0, x27, lsl #3]
  4169c0:	str	x0, [sp, #144]
  4169c4:	ldr	x0, [x0, #8]
  4169c8:	str	x0, [sp, #152]
  4169cc:	sub	x2, x0, x25
  4169d0:	add	x0, x2, x20
  4169d4:	str	x0, [sp, #120]
  4169d8:	cmp	x2, #0x0
  4169dc:	b.gt	416a28 <_obstack_memory_used@@Base+0x687c>
  4169e0:	ldr	x2, [sp, #144]
  4169e4:	mov	x4, x19
  4169e8:	mov	x3, x21
  4169ec:	mov	x1, x26
  4169f0:	mov	x0, x23
  4169f4:	bl	41668c <_obstack_memory_used@@Base+0x64e0>
  4169f8:	cmp	w0, #0x1
  4169fc:	ldr	x24, [x23, #8]
  416a00:	b.ls	416a9c <_obstack_memory_used@@Base+0x68f0>  // b.plast
  416a04:	str	w0, [sp, #180]
  416a08:	ldr	w0, [sp, #180]
  416a0c:	ldp	x19, x20, [sp, #16]
  416a10:	ldp	x21, x22, [sp, #32]
  416a14:	ldp	x23, x24, [sp, #48]
  416a18:	ldp	x25, x26, [sp, #64]
  416a1c:	ldp	x27, x28, [sp, #80]
  416a20:	ldp	x29, x30, [sp], #208
  416a24:	ret
  416a28:	ldr	x0, [x23, #48]
  416a2c:	add	x1, x2, x20
  416a30:	cmp	x0, x1
  416a34:	b.ge	416a60 <_obstack_memory_used@@Base+0x68b4>  // b.tcont
  416a38:	ldr	x0, [x23, #88]
  416a3c:	str	x2, [sp, #168]
  416a40:	ldr	x1, [sp, #120]
  416a44:	cmp	x0, x1
  416a48:	b.lt	416a70 <_obstack_memory_used@@Base+0x68c4>  // b.tstop
  416a4c:	mov	x0, x23
  416a50:	bl	411290 <_obstack_memory_used@@Base+0x10e4>
  416a54:	cbnz	w0, 416a04 <_obstack_memory_used@@Base+0x6858>
  416a58:	ldr	x24, [x23, #8]
  416a5c:	ldr	x2, [sp, #168]
  416a60:	add	x1, x24, x25
  416a64:	add	x0, x24, x20
  416a68:	bl	402bb0 <memcmp@plt>
  416a6c:	cbz	w0, 4169e0 <_obstack_memory_used@@Base+0x6834>
  416a70:	ldr	x0, [x26, #32]
  416a74:	cmp	x27, x0
  416a78:	b.lt	416a8c <_obstack_memory_used@@Base+0x68e0>  // b.tstop
  416a7c:	cbz	x27, 416a84 <_obstack_memory_used@@Base+0x68d8>
  416a80:	add	x25, x25, #0x1
  416a84:	cmp	x19, x25
  416a88:	b.ge	416aac <_obstack_memory_used@@Base+0x6900>  // b.tcont
  416a8c:	ldr	x0, [sp, #112]
  416a90:	add	x0, x0, #0x1
  416a94:	str	x0, [sp, #112]
  416a98:	b	416968 <_obstack_memory_used@@Base+0x67bc>
  416a9c:	add	x27, x27, #0x1
  416aa0:	ldr	x20, [sp, #120]
  416aa4:	ldr	x25, [sp, #152]
  416aa8:	b	4169ac <_obstack_memory_used@@Base+0x6800>
  416aac:	ldr	x0, [x26]
  416ab0:	sub	x0, x25, x0
  416ab4:	cmp	x0, #0x0
  416ab8:	b.le	416b04 <_obstack_memory_used@@Base+0x6958>
  416abc:	ldr	x0, [x23, #48]
  416ac0:	cmp	x0, x20
  416ac4:	b.gt	416ae8 <_obstack_memory_used@@Base+0x693c>
  416ac8:	ldr	x0, [x23, #88]
  416acc:	cmp	x20, x0
  416ad0:	b.ge	416a8c <_obstack_memory_used@@Base+0x68e0>  // b.tcont
  416ad4:	add	w1, w20, #0x1
  416ad8:	mov	x0, x23
  416adc:	bl	4111c4 <_obstack_memory_used@@Base+0x1018>
  416ae0:	cbnz	w0, 416a04 <_obstack_memory_used@@Base+0x6858>
  416ae4:	ldr	x24, [x23, #8]
  416ae8:	add	x0, x24, x25
  416aec:	ldrb	w2, [x24, x20]
  416af0:	add	x1, x20, #0x1
  416af4:	ldurb	w0, [x0, #-1]
  416af8:	cmp	w2, w0
  416afc:	b.ne	416a8c <_obstack_memory_used@@Base+0x68e0>  // b.any
  416b00:	mov	x20, x1
  416b04:	ldr	x0, [x23, #184]
  416b08:	ldr	x0, [x0, x25, lsl #3]
  416b0c:	cbz	x0, 416a80 <_obstack_memory_used@@Base+0x68d4>
  416b10:	ldr	x3, [x0, #16]
  416b14:	add	x0, x0, #0x8
  416b18:	mov	x1, #0x0                   	// #0
  416b1c:	cmp	x1, x3
  416b20:	b.ge	416a80 <_obstack_memory_used@@Base+0x68d4>  // b.tcont
  416b24:	ldr	x2, [x0, #16]
  416b28:	ldr	x27, [x2, x1, lsl #3]
  416b2c:	ldr	x2, [x28]
  416b30:	lsl	x4, x27, #4
  416b34:	add	x6, x2, x27, lsl #4
  416b38:	ldrb	w6, [x6, #8]
  416b3c:	cmp	w6, #0x9
  416b40:	b.ne	416b54 <_obstack_memory_used@@Base+0x69a8>  // b.any
  416b44:	ldr	x2, [x2, x4]
  416b48:	ldr	x4, [sp, #136]
  416b4c:	cmp	x4, x2
  416b50:	b.eq	416b5c <_obstack_memory_used@@Base+0x69b0>  // b.none
  416b54:	add	x1, x1, #0x1
  416b58:	b	416b1c <_obstack_memory_used@@Base+0x6970>
  416b5c:	cmn	x27, #0x1
  416b60:	b.eq	416a80 <_obstack_memory_used@@Base+0x68d4>  // b.none
  416b64:	ldr	x0, [x26, #16]
  416b68:	ldr	x3, [x26]
  416b6c:	cbz	x0, 416c0c <_obstack_memory_used@@Base+0x6a60>
  416b70:	ldp	x2, x1, [x26, #8]
  416b74:	mov	x5, x25
  416b78:	mov	x4, x27
  416b7c:	mov	x0, x23
  416b80:	mov	w6, #0x9                   	// #9
  416b84:	bl	4161f0 <_obstack_memory_used@@Base+0x6044>
  416b88:	cmp	w0, #0x1
  416b8c:	b.eq	416a80 <_obstack_memory_used@@Base+0x68d4>  // b.none
  416b90:	cbnz	w0, 416a04 <_obstack_memory_used@@Base+0x6858>
  416b94:	ldp	x0, x2, [x26, #24]
  416b98:	cmp	x2, x0
  416b9c:	b.ne	416bc0 <_obstack_memory_used@@Base+0x6a14>  // b.any
  416ba0:	ldr	x0, [x26, #40]
  416ba4:	lsl	x2, x2, #1
  416ba8:	add	x24, x2, #0x1
  416bac:	lsl	x1, x24, #3
  416bb0:	bl	402a80 <realloc@plt>
  416bb4:	cbz	x0, 416c2c <_obstack_memory_used@@Base+0x6a80>
  416bb8:	str	x24, [x26, #24]
  416bbc:	str	x0, [x26, #40]
  416bc0:	mov	x1, #0x28                  	// #40
  416bc4:	mov	x0, #0x1                   	// #1
  416bc8:	bl	402a60 <calloc@plt>
  416bcc:	mov	x2, x0
  416bd0:	cbz	x0, 416c2c <_obstack_memory_used@@Base+0x6a80>
  416bd4:	ldp	x0, x1, [x26, #32]
  416bd8:	mov	x4, x19
  416bdc:	mov	x3, x21
  416be0:	str	x2, [x1, x0, lsl #3]
  416be4:	add	x0, x0, #0x1
  416be8:	stp	x27, x25, [x2]
  416bec:	mov	x1, x26
  416bf0:	str	x0, [x26, #32]
  416bf4:	mov	x0, x23
  416bf8:	bl	41668c <_obstack_memory_used@@Base+0x64e0>
  416bfc:	cmp	w0, #0x1
  416c00:	ldr	x24, [x23, #8]
  416c04:	b.ls	416a80 <_obstack_memory_used@@Base+0x68d4>  // b.plast
  416c08:	b	416a04 <_obstack_memory_used@@Base+0x6858>
  416c0c:	sub	x1, x25, x3
  416c10:	mov	x0, #0x18                  	// #24
  416c14:	add	x1, x1, #0x1
  416c18:	str	x3, [sp, #120]
  416c1c:	bl	402a60 <calloc@plt>
  416c20:	str	x0, [x26, #16]
  416c24:	ldr	x3, [sp, #120]
  416c28:	cbnz	x0, 416b70 <_obstack_memory_used@@Base+0x69c4>
  416c2c:	mov	w0, #0xc                   	// #12
  416c30:	b	416a04 <_obstack_memory_used@@Base+0x6858>
  416c34:	ldr	x0, [x1, #8]
  416c38:	cmp	x0, x19
  416c3c:	b.ne	416934 <_obstack_memory_used@@Base+0x6788>  // b.any
  416c40:	ldr	x0, [x1, #24]
  416c44:	ldr	x1, [x1, #16]
  416c48:	ldr	x26, [x22, #48]
  416c4c:	subs	x28, x0, x1
  416c50:	b.ne	416d24 <_obstack_memory_used@@Base+0x6b78>  // b.any
  416c54:	ldr	x2, [x22, #40]
  416c58:	add	x2, x2, x25
  416c5c:	ldr	x2, [x2, #16]
  416c60:	ldr	x2, [x2]
  416c64:	mov	x3, #0x18                  	// #24
  416c68:	add	x20, x0, x19
  416c6c:	mov	x0, x23
  416c70:	madd	x26, x2, x3, x26
  416c74:	ldr	w2, [x23, #160]
  416c78:	sub	x20, x20, x1
  416c7c:	sub	x1, x20, #0x1
  416c80:	lsl	x20, x20, #3
  416c84:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  416c88:	mov	w3, w0
  416c8c:	ldr	x1, [sp, #128]
  416c90:	ldr	x4, [x23, #184]
  416c94:	ldr	x1, [x4, x1]
  416c98:	ldr	x0, [x4, x20]
  416c9c:	cbz	x1, 416d30 <_obstack_memory_used@@Base+0x6b84>
  416ca0:	ldr	x27, [x1, #16]
  416ca4:	cbnz	x0, 416d38 <_obstack_memory_used@@Base+0x6b8c>
  416ca8:	mov	x2, x26
  416cac:	mov	x1, x22
  416cb0:	add	x0, sp, #0xb4
  416cb4:	str	x4, [sp, #112]
  416cb8:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  416cbc:	ldr	x4, [sp, #112]
  416cc0:	str	x0, [x4, x20]
  416cc4:	ldr	x0, [x23, #184]
  416cc8:	ldr	x0, [x0, x20]
  416ccc:	cbnz	x0, 416cd8 <_obstack_memory_used@@Base+0x6b2c>
  416cd0:	ldr	w0, [sp, #180]
  416cd4:	cbnz	w0, 416a08 <_obstack_memory_used@@Base+0x685c>
  416cd8:	cbnz	x28, 416934 <_obstack_memory_used@@Base+0x6788>
  416cdc:	ldr	x1, [sp, #128]
  416ce0:	ldr	x0, [x23, #184]
  416ce4:	ldr	x0, [x0, x1]
  416ce8:	ldr	x0, [x0, #16]
  416cec:	cmp	x0, x27
  416cf0:	b.le	416934 <_obstack_memory_used@@Base+0x6788>
  416cf4:	mov	x2, x19
  416cf8:	mov	x1, x26
  416cfc:	mov	x0, x23
  416d00:	bl	4119e4 <_obstack_memory_used@@Base+0x1838>
  416d04:	str	w0, [sp, #180]
  416d08:	cbnz	w0, 416a08 <_obstack_memory_used@@Base+0x685c>
  416d0c:	mov	x1, x26
  416d10:	mov	x0, x23
  416d14:	bl	4167ec <_obstack_memory_used@@Base+0x6640>
  416d18:	str	w0, [sp, #180]
  416d1c:	cbz	w0, 416934 <_obstack_memory_used@@Base+0x6788>
  416d20:	b	416a08 <_obstack_memory_used@@Base+0x685c>
  416d24:	ldr	x2, [x22, #24]
  416d28:	ldr	x2, [x2, x24]
  416d2c:	b	416c64 <_obstack_memory_used@@Base+0x6ab8>
  416d30:	mov	x27, #0x0                   	// #0
  416d34:	b	416ca4 <_obstack_memory_used@@Base+0x6af8>
  416d38:	ldr	x1, [x0, #80]
  416d3c:	mov	x2, x26
  416d40:	add	x0, sp, #0xb8
  416d44:	str	w3, [sp, #112]
  416d48:	bl	4134c4 <_obstack_memory_used@@Base+0x3318>
  416d4c:	str	w0, [sp, #180]
  416d50:	ldr	w3, [sp, #112]
  416d54:	cbz	w0, 416d64 <_obstack_memory_used@@Base+0x6bb8>
  416d58:	ldr	x0, [sp, #200]
  416d5c:	bl	402c20 <free@plt>
  416d60:	b	416a08 <_obstack_memory_used@@Base+0x685c>
  416d64:	ldr	x4, [x23, #184]
  416d68:	add	x2, sp, #0xb8
  416d6c:	mov	x1, x22
  416d70:	add	x0, sp, #0xb4
  416d74:	str	x4, [sp, #112]
  416d78:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  416d7c:	ldr	x4, [sp, #112]
  416d80:	str	x0, [x4, x20]
  416d84:	ldr	x0, [sp, #200]
  416d88:	bl	402c20 <free@plt>
  416d8c:	b	416cc4 <_obstack_memory_used@@Base+0x6b18>
  416d90:	stp	x29, x30, [sp, #-112]!
  416d94:	mov	x29, sp
  416d98:	stp	x19, x20, [sp, #16]
  416d9c:	mov	x20, x1
  416da0:	mov	x19, x2
  416da4:	stp	x21, x22, [sp, #32]
  416da8:	mov	x21, x0
  416dac:	stp	x23, x24, [sp, #48]
  416db0:	stp	x25, x26, [sp, #64]
  416db4:	ldr	x23, [x1, #72]
  416db8:	ldr	x25, [x1, #152]
  416dbc:	ldp	x0, x1, [x1, #184]
  416dc0:	lsl	x22, x23, #3
  416dc4:	cmp	x1, x23
  416dc8:	b.ge	416e24 <_obstack_memory_used@@Base+0x6c78>  // b.tcont
  416dcc:	str	x2, [x0, x22]
  416dd0:	str	x23, [x20, #192]
  416dd4:	ldr	x0, [x25, #152]
  416dd8:	cbz	x0, 416e58 <_obstack_memory_used@@Base+0x6cac>
  416ddc:	cbz	x19, 416e54 <_obstack_memory_used@@Base+0x6ca8>
  416de0:	add	x24, x19, #0x8
  416de4:	mov	x2, x23
  416de8:	mov	x1, x24
  416dec:	mov	x0, x20
  416df0:	bl	4119e4 <_obstack_memory_used@@Base+0x1838>
  416df4:	str	w0, [x21]
  416df8:	cbnz	w0, 416e54 <_obstack_memory_used@@Base+0x6ca8>
  416dfc:	ldrb	w0, [x19, #104]
  416e00:	tbz	w0, #6, 416e58 <_obstack_memory_used@@Base+0x6cac>
  416e04:	mov	x1, x24
  416e08:	mov	x0, x20
  416e0c:	bl	4167ec <_obstack_memory_used@@Base+0x6640>
  416e10:	str	w0, [x21]
  416e14:	cbnz	w0, 416e54 <_obstack_memory_used@@Base+0x6ca8>
  416e18:	ldr	x0, [x20, #184]
  416e1c:	ldr	x19, [x0, x22]
  416e20:	b	416e58 <_obstack_memory_used@@Base+0x6cac>
  416e24:	ldr	x1, [x0, x22]
  416e28:	cbnz	x1, 416e34 <_obstack_memory_used@@Base+0x6c88>
  416e2c:	str	x2, [x0, x22]
  416e30:	b	416dd4 <_obstack_memory_used@@Base+0x6c28>
  416e34:	ldr	x2, [x1, #80]
  416e38:	cbz	x19, 416e74 <_obstack_memory_used@@Base+0x6cc8>
  416e3c:	ldr	x24, [x19, #80]
  416e40:	add	x0, sp, #0x58
  416e44:	mov	x1, x24
  416e48:	bl	4134c4 <_obstack_memory_used@@Base+0x3318>
  416e4c:	str	w0, [x21]
  416e50:	cbz	w0, 416e88 <_obstack_memory_used@@Base+0x6cdc>
  416e54:	mov	x19, #0x0                   	// #0
  416e58:	mov	x0, x19
  416e5c:	ldp	x19, x20, [sp, #16]
  416e60:	ldp	x21, x22, [sp, #32]
  416e64:	ldp	x23, x24, [sp, #48]
  416e68:	ldp	x25, x26, [sp, #64]
  416e6c:	ldp	x29, x30, [sp], #112
  416e70:	ret
  416e74:	ldp	x0, x1, [x2]
  416e78:	stp	x0, x1, [sp, #88]
  416e7c:	mov	x24, #0x0                   	// #0
  416e80:	ldr	x0, [x2, #16]
  416e84:	str	x0, [sp, #104]
  416e88:	ldr	w2, [x20, #160]
  416e8c:	mov	x0, x20
  416e90:	ldr	x1, [x20, #72]
  416e94:	sub	x1, x1, #0x1
  416e98:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  416e9c:	ldr	x26, [x20, #184]
  416ea0:	mov	w3, w0
  416ea4:	add	x2, sp, #0x58
  416ea8:	mov	x1, x25
  416eac:	mov	x0, x21
  416eb0:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  416eb4:	str	x0, [x26, x22]
  416eb8:	mov	x19, x0
  416ebc:	cbz	x24, 416dd4 <_obstack_memory_used@@Base+0x6c28>
  416ec0:	ldr	x0, [sp, #104]
  416ec4:	bl	402c20 <free@plt>
  416ec8:	b	416dd4 <_obstack_memory_used@@Base+0x6c28>
  416ecc:	stp	x29, x30, [sp, #-224]!
  416ed0:	mov	x29, sp
  416ed4:	stp	x19, x20, [sp, #16]
  416ed8:	mov	x20, x0
  416edc:	mov	x19, x1
  416ee0:	stp	x23, x24, [sp, #48]
  416ee4:	lsl	x24, x2, #3
  416ee8:	ldr	x23, [x0, #152]
  416eec:	stp	x21, x22, [sp, #32]
  416ef0:	mov	x21, x2
  416ef4:	ldr	x0, [x0, #184]
  416ef8:	stp	x25, x26, [sp, #64]
  416efc:	stp	x27, x28, [sp, #80]
  416f00:	mov	x28, x3
  416f04:	ldr	x22, [x0, x24]
  416f08:	str	wzr, [sp, #164]
  416f0c:	cbz	x22, 416f14 <_obstack_memory_used@@Base+0x6d68>
  416f10:	add	x22, x22, #0x8
  416f14:	ldr	x0, [x28, #8]
  416f18:	cbnz	x0, 416f58 <_obstack_memory_used@@Base+0x6dac>
  416f1c:	ldr	x0, [x19]
  416f20:	str	xzr, [x0, x24]
  416f24:	cbz	x22, 416f50 <_obstack_memory_used@@Base+0x6da4>
  416f28:	ldr	x0, [x20, #184]
  416f2c:	ldr	x0, [x0, x24]
  416f30:	ldrb	w0, [x0, #104]
  416f34:	tbz	w0, #6, 416f50 <_obstack_memory_used@@Base+0x6da4>
  416f38:	mov	x1, x21
  416f3c:	mov	x0, x20
  416f40:	bl	410704 <_obstack_memory_used@@Base+0x558>
  416f44:	str	x0, [sp, #104]
  416f48:	cmn	x0, #0x1
  416f4c:	b.ne	417228 <_obstack_memory_used@@Base+0x707c>  // b.any
  416f50:	mov	w1, #0x0                   	// #0
  416f54:	b	416f7c <_obstack_memory_used@@Base+0x6dd0>
  416f58:	cbnz	x22, 416f9c <_obstack_memory_used@@Base+0x6df0>
  416f5c:	ldr	x25, [x19]
  416f60:	mov	x1, x23
  416f64:	mov	x2, x28
  416f68:	add	x0, sp, #0xa4
  416f6c:	bl	415d98 <_obstack_memory_used@@Base+0x5bec>
  416f70:	ldr	w1, [sp, #164]
  416f74:	str	x0, [x25, x24]
  416f78:	cbz	w1, 416f24 <_obstack_memory_used@@Base+0x6d78>
  416f7c:	mov	w0, w1
  416f80:	ldp	x19, x20, [sp, #16]
  416f84:	ldp	x21, x22, [sp, #32]
  416f88:	ldp	x23, x24, [sp, #48]
  416f8c:	ldp	x25, x26, [sp, #64]
  416f90:	ldp	x27, x28, [sp, #80]
  416f94:	ldp	x29, x30, [sp], #224
  416f98:	ret
  416f9c:	mov	x2, x28
  416fa0:	mov	x1, x23
  416fa4:	add	x0, sp, #0xa8
  416fa8:	str	wzr, [sp, #168]
  416fac:	bl	415d98 <_obstack_memory_used@@Base+0x5bec>
  416fb0:	mov	x25, x0
  416fb4:	ldr	w0, [sp, #168]
  416fb8:	cbnz	w0, 416fd4 <_obstack_memory_used@@Base+0x6e28>
  416fbc:	ldr	x26, [x25, #56]!
  416fc0:	cbz	x26, 417008 <_obstack_memory_used@@Base+0x6e5c>
  416fc4:	mov	x2, x25
  416fc8:	mov	x1, x22
  416fcc:	mov	x0, x28
  416fd0:	bl	412700 <_obstack_memory_used@@Base+0x2554>
  416fd4:	str	w0, [sp, #164]
  416fd8:	cbnz	w0, 417454 <_obstack_memory_used@@Base+0x72a8>
  416fdc:	ldr	x0, [x19, #40]
  416fe0:	cbz	x0, 416f5c <_obstack_memory_used@@Base+0x6db0>
  416fe4:	ldr	x0, [x20, #216]
  416fe8:	mov	x25, #0x0                   	// #0
  416fec:	str	x0, [sp, #104]
  416ff0:	ldr	x1, [x19, #40]
  416ff4:	add	x0, x19, #0x20
  416ff8:	cmp	x25, x1
  416ffc:	b.lt	417064 <_obstack_memory_used@@Base+0x6eb8>  // b.tstop
  417000:	mov	w1, #0x0                   	// #0
  417004:	b	417144 <_obstack_memory_used@@Base+0x6f98>
  417008:	ldr	x1, [x28, #8]
  41700c:	mov	x0, x25
  417010:	bl	410aa0 <_obstack_memory_used@@Base+0x8f4>
  417014:	str	w0, [sp, #168]
  417018:	cbnz	w0, 417054 <_obstack_memory_used@@Base+0x6ea8>
  41701c:	mov	x27, #0x18                  	// #24
  417020:	ldr	x0, [x28, #8]
  417024:	cmp	x26, x0
  417028:	b.ge	416fc4 <_obstack_memory_used@@Base+0x6e18>  // b.tcont
  41702c:	ldr	x0, [x28, #16]
  417030:	ldr	x1, [x0, x26, lsl #3]
  417034:	ldr	x0, [x23, #56]
  417038:	madd	x1, x1, x27, x0
  41703c:	mov	x0, x25
  417040:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  417044:	str	w0, [sp, #168]
  417048:	cbnz	w0, 41705c <_obstack_memory_used@@Base+0x6eb0>
  41704c:	add	x26, x26, #0x1
  417050:	b	417020 <_obstack_memory_used@@Base+0x6e74>
  417054:	mov	w1, #0xc                   	// #12
  417058:	b	416f7c <_obstack_memory_used@@Base+0x6dd0>
  41705c:	mov	w0, #0xc                   	// #12
  417060:	b	416fd4 <_obstack_memory_used@@Base+0x6e28>
  417064:	ldr	x0, [x0, #16]
  417068:	mov	x1, #0x28                  	// #40
  41706c:	ldr	x0, [x0, x25, lsl #3]
  417070:	mul	x0, x0, x1
  417074:	ldr	x1, [sp, #104]
  417078:	add	x1, x1, x0
  41707c:	ldr	x2, [x1, #16]
  417080:	cmp	x21, x2
  417084:	b.gt	417090 <_obstack_memory_used@@Base+0x6ee4>
  417088:	add	x25, x25, #0x1
  41708c:	b	416ff0 <_obstack_memory_used@@Base+0x6e44>
  417090:	ldr	x2, [x1, #8]
  417094:	cmp	x21, x2
  417098:	b.gt	417088 <_obstack_memory_used@@Base+0x6edc>
  41709c:	ldr	x3, [sp, #104]
  4170a0:	ldr	x2, [x23]
  4170a4:	ldr	x0, [x3, x0]
  4170a8:	lsl	x0, x0, #4
  4170ac:	ldr	x7, [x2, x0]
  4170b0:	ldr	x0, [x1, #24]
  4170b4:	cmp	x21, x0
  4170b8:	b.ne	417220 <_obstack_memory_used@@Base+0x7074>  // b.any
  4170bc:	ldr	x9, [x28, #8]
  4170c0:	mov	x26, #0xffffffffffffffff    	// #-1
  4170c4:	mov	x1, x26
  4170c8:	mov	x0, #0x0                   	// #0
  4170cc:	cmp	x0, x9
  4170d0:	b.lt	4170e4 <_obstack_memory_used@@Base+0x6f38>  // b.tstop
  4170d4:	tbz	x1, #63, 41712c <_obstack_memory_used@@Base+0x6f80>
  4170d8:	tbnz	x26, #63, 417088 <_obstack_memory_used@@Base+0x6edc>
  4170dc:	mov	x27, #0x0                   	// #0
  4170e0:	b	4171a8 <_obstack_memory_used@@Base+0x6ffc>
  4170e4:	ldr	x3, [x28, #16]
  4170e8:	ldr	x3, [x3, x0, lsl #3]
  4170ec:	add	x8, x2, x3, lsl #4
  4170f0:	lsl	x5, x3, #4
  4170f4:	ldrb	w8, [x8, #8]
  4170f8:	cmp	w8, #0x8
  4170fc:	b.ne	417114 <_obstack_memory_used@@Base+0x6f68>  // b.any
  417100:	ldr	x5, [x2, x5]
  417104:	cmp	x7, x5
  417108:	csel	x1, x1, x3, ne  // ne = any
  41710c:	add	x0, x0, #0x1
  417110:	b	4170cc <_obstack_memory_used@@Base+0x6f20>
  417114:	cmp	w8, #0x9
  417118:	b.ne	41710c <_obstack_memory_used@@Base+0x6f60>  // b.any
  41711c:	ldr	x5, [x2, x5]
  417120:	cmp	x7, x5
  417124:	csel	x26, x26, x3, ne  // ne = any
  417128:	b	41710c <_obstack_memory_used@@Base+0x6f60>
  41712c:	mov	x3, x22
  417130:	mov	x2, x28
  417134:	mov	x0, x23
  417138:	bl	4138fc <_obstack_memory_used@@Base+0x3750>
  41713c:	mov	w1, w0
  417140:	cbz	w0, 4170d8 <_obstack_memory_used@@Base+0x6f2c>
  417144:	str	w1, [sp, #164]
  417148:	cbz	w1, 416f5c <_obstack_memory_used@@Base+0x6db0>
  41714c:	b	416f7c <_obstack_memory_used@@Base+0x6dd0>
  417150:	ldr	x0, [x28, #16]
  417154:	mov	x1, x26
  417158:	ldr	x7, [x0, x27, lsl #3]
  41715c:	mov	x0, #0x18                  	// #24
  417160:	mul	x8, x7, x0
  417164:	ldr	x0, [x23, #56]
  417168:	add	x0, x0, x8
  41716c:	bl	410334 <_obstack_memory_used@@Base+0x188>
  417170:	cbnz	x0, 4171a4 <_obstack_memory_used@@Base+0x6ff8>
  417174:	ldr	x0, [x23, #48]
  417178:	add	x0, x0, x8
  41717c:	bl	410334 <_obstack_memory_used@@Base+0x188>
  417180:	cbnz	x0, 4171a4 <_obstack_memory_used@@Base+0x6ff8>
  417184:	mov	x1, x7
  417188:	mov	x3, x22
  41718c:	mov	x2, x28
  417190:	mov	x0, x23
  417194:	bl	4138fc <_obstack_memory_used@@Base+0x3750>
  417198:	mov	w1, w0
  41719c:	cbnz	w0, 417144 <_obstack_memory_used@@Base+0x6f98>
  4171a0:	sub	x27, x27, #0x1
  4171a4:	add	x27, x27, #0x1
  4171a8:	ldr	x0, [x28, #8]
  4171ac:	cmp	x27, x0
  4171b0:	b.lt	417150 <_obstack_memory_used@@Base+0x6fa4>  // b.tstop
  4171b4:	b	417088 <_obstack_memory_used@@Base+0x6edc>
  4171b8:	ldr	x0, [x28, #16]
  4171bc:	ldr	x2, [x23]
  4171c0:	ldr	x1, [x0, x5, lsl #3]
  4171c4:	add	x0, x2, x1, lsl #4
  4171c8:	lsl	x3, x1, #4
  4171cc:	ldrb	w0, [x0, #8]
  4171d0:	sub	w0, w0, #0x8
  4171d4:	cmp	w0, #0x1
  4171d8:	b.ls	4171f0 <_obstack_memory_used@@Base+0x7044>  // b.plast
  4171dc:	add	x5, x5, #0x1
  4171e0:	ldr	x0, [x28, #8]
  4171e4:	cmp	x5, x0
  4171e8:	b.lt	4171b8 <_obstack_memory_used@@Base+0x700c>  // b.tstop
  4171ec:	b	417088 <_obstack_memory_used@@Base+0x6edc>
  4171f0:	ldr	x0, [x2, x3]
  4171f4:	cmp	x7, x0
  4171f8:	b.ne	4171dc <_obstack_memory_used@@Base+0x7030>  // b.any
  4171fc:	mov	x3, x22
  417200:	mov	x2, x28
  417204:	mov	x0, x23
  417208:	stp	x7, x5, [sp, #112]
  41720c:	bl	4138fc <_obstack_memory_used@@Base+0x3750>
  417210:	mov	w1, w0
  417214:	ldp	x7, x5, [sp, #112]
  417218:	cbz	w0, 4171dc <_obstack_memory_used@@Base+0x7030>
  41721c:	b	417144 <_obstack_memory_used@@Base+0x6f98>
  417220:	mov	x5, #0x0                   	// #0
  417224:	b	4171e0 <_obstack_memory_used@@Base+0x7034>
  417228:	ldr	x1, [sp, #104]
  41722c:	mov	x0, #0x28                  	// #40
  417230:	ldr	x27, [x20, #152]
  417234:	add	x28, sp, #0xc8
  417238:	mul	x0, x1, x0
  41723c:	mov	x26, #0x0                   	// #0
  417240:	str	x0, [sp, #120]
  417244:	add	x0, x19, #0x20
  417248:	str	x0, [sp, #112]
  41724c:	str	xzr, [sp, #168]
  417250:	ldr	x0, [x22, #8]
  417254:	cmp	x26, x0
  417258:	b.lt	417264 <_obstack_memory_used@@Base+0x70b8>  // b.tstop
  41725c:	mov	w1, #0x0                   	// #0
  417260:	b	41736c <_obstack_memory_used@@Base+0x71c0>
  417264:	ldr	x0, [x22, #16]
  417268:	ldr	x1, [x19, #16]
  41726c:	ldr	x23, [x0, x26, lsl #3]
  417270:	ldr	x0, [x27]
  417274:	cmp	x23, x1
  417278:	add	x0, x0, x23, lsl #4
  41727c:	ldrb	w0, [x0, #8]
  417280:	b.ne	417298 <_obstack_memory_used@@Base+0x70ec>  // b.any
  417284:	ldr	x1, [x19, #24]
  417288:	cmp	x21, x1
  41728c:	b.ne	417298 <_obstack_memory_used@@Base+0x70ec>  // b.any
  417290:	add	x26, x26, #0x1
  417294:	b	417250 <_obstack_memory_used@@Base+0x70a4>
  417298:	cmp	w0, #0x4
  41729c:	b.ne	417290 <_obstack_memory_used@@Base+0x70e4>  // b.any
  4172a0:	ldr	x0, [sp, #120]
  4172a4:	ldr	x6, [x20, #216]
  4172a8:	ldr	x25, [sp, #104]
  4172ac:	add	x6, x6, x0
  4172b0:	mov	x0, #0x18                  	// #24
  4172b4:	mul	x0, x23, x0
  4172b8:	str	x0, [sp, #136]
  4172bc:	lsl	x0, x23, #3
  4172c0:	str	x0, [sp, #128]
  4172c4:	add	x0, x21, #0x1
  4172c8:	str	x0, [sp, #152]
  4172cc:	ldr	x0, [x6]
  4172d0:	cmp	x23, x0
  4172d4:	b.ne	417420 <_obstack_memory_used@@Base+0x7274>  // b.any
  4172d8:	ldp	x1, x0, [x6, #16]
  4172dc:	sub	x0, x0, x1
  4172e0:	add	x7, x21, x0
  4172e4:	cbz	x0, 417388 <_obstack_memory_used@@Base+0x71dc>
  4172e8:	ldr	x0, [x27, #24]
  4172ec:	ldr	x1, [sp, #128]
  4172f0:	ldr	x1, [x0, x1]
  4172f4:	ldr	x0, [x19, #24]
  4172f8:	cmp	x7, x0
  4172fc:	b.gt	417420 <_obstack_memory_used@@Base+0x7274>
  417300:	ldr	x0, [x19]
  417304:	ldr	x0, [x0, x7, lsl #3]
  417308:	cbz	x0, 417420 <_obstack_memory_used@@Base+0x7274>
  41730c:	add	x0, x0, #0x8
  417310:	str	x6, [sp, #144]
  417314:	bl	410334 <_obstack_memory_used@@Base+0x188>
  417318:	ldr	x6, [sp, #144]
  41731c:	cbz	x0, 417420 <_obstack_memory_used@@Base+0x7274>
  417320:	mov	x4, x1
  417324:	mov	x5, x7
  417328:	ldr	x1, [sp, #112]
  41732c:	mov	x3, x21
  417330:	mov	x2, x23
  417334:	mov	x0, x20
  417338:	bl	410778 <_obstack_memory_used@@Base+0x5cc>
  41733c:	tst	w0, #0xff
  417340:	ldr	x6, [sp, #144]
  417344:	b.ne	417420 <_obstack_memory_used@@Base+0x7274>  // b.any
  417348:	ldr	x0, [sp, #168]
  41734c:	cbz	x0, 4173a0 <_obstack_memory_used@@Base+0x71f4>
  417350:	mov	x1, x25
  417354:	mov	x0, x28
  417358:	stp	x23, x21, [sp, #184]
  41735c:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  417360:	tst	w0, #0xff
  417364:	b.ne	4173c8 <_obstack_memory_used@@Base+0x721c>  // b.any
  417368:	mov	w1, #0xc                   	// #12
  41736c:	ldr	x0, [sp, #168]
  417370:	cbz	x0, 416f7c <_obstack_memory_used@@Base+0x6dd0>
  417374:	ldr	x0, [sp, #216]
  417378:	str	w1, [sp, #104]
  41737c:	bl	402c20 <free@plt>
  417380:	ldr	w1, [sp, #104]
  417384:	b	416f7c <_obstack_memory_used@@Base+0x6dd0>
  417388:	ldr	x0, [x27, #40]
  41738c:	ldr	x1, [sp, #136]
  417390:	add	x0, x0, x1
  417394:	ldr	x0, [x0, #16]
  417398:	ldr	x1, [x0]
  41739c:	b	4172f4 <_obstack_memory_used@@Base+0x7148>
  4173a0:	mov	x1, x19
  4173a4:	mov	x2, #0x38                  	// #56
  4173a8:	add	x0, sp, #0xa8
  4173ac:	bl	402750 <memcpy@plt>
  4173b0:	ldr	x1, [sp, #112]
  4173b4:	mov	x0, x28
  4173b8:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  4173bc:	mov	w1, w0
  4173c0:	cbz	w0, 417350 <_obstack_memory_used@@Base+0x71a4>
  4173c4:	b	41736c <_obstack_memory_used@@Base+0x71c0>
  4173c8:	ldr	x0, [sp, #168]
  4173cc:	add	x1, sp, #0xa8
  4173d0:	ldr	x0, [x0, x24]
  4173d4:	str	x0, [sp, #144]
  4173d8:	mov	x0, x20
  4173dc:	bl	41745c <_obstack_memory_used@@Base+0x72b0>
  4173e0:	mov	w1, w0
  4173e4:	cbnz	w0, 41736c <_obstack_memory_used@@Base+0x71c0>
  4173e8:	ldr	x1, [x19, #8]
  4173ec:	cbnz	x1, 417438 <_obstack_memory_used@@Base+0x728c>
  4173f0:	ldr	x0, [sp, #168]
  4173f4:	ldr	x1, [sp, #144]
  4173f8:	str	x1, [x0, x24]
  4173fc:	mov	x1, x25
  417400:	mov	x0, x28
  417404:	bl	410334 <_obstack_memory_used@@Base+0x188>
  417408:	sub	x1, x0, #0x1
  41740c:	mov	x0, x28
  417410:	bl	412464 <_obstack_memory_used@@Base+0x22b8>
  417414:	ldr	x0, [x20, #216]
  417418:	mov	x6, #0x28                  	// #40
  41741c:	madd	x6, x25, x6, x0
  417420:	ldrb	w0, [x6, #32]
  417424:	add	x25, x25, #0x1
  417428:	add	x1, x6, #0x28
  41742c:	cbz	w0, 417290 <_obstack_memory_used@@Base+0x70e4>
  417430:	mov	x6, x1
  417434:	b	4172cc <_obstack_memory_used@@Base+0x7120>
  417438:	ldr	x3, [sp, #152]
  41743c:	mov	x0, x27
  417440:	ldr	x2, [sp, #168]
  417444:	bl	415f5c <_obstack_memory_used@@Base+0x5db0>
  417448:	mov	w1, w0
  41744c:	cbz	w0, 4173f0 <_obstack_memory_used@@Base+0x7244>
  417450:	b	41736c <_obstack_memory_used@@Base+0x71c0>
  417454:	mov	w1, w0
  417458:	b	416f7c <_obstack_memory_used@@Base+0x6dd0>
  41745c:	stp	x29, x30, [sp, #-160]!
  417460:	mov	x29, sp
  417464:	stp	x19, x20, [sp, #16]
  417468:	mov	x19, x1
  41746c:	ldr	x20, [x1, #24]
  417470:	stp	x21, x22, [sp, #32]
  417474:	mov	x21, x0
  417478:	ldr	x1, [x1, #16]
  41747c:	add	x0, sp, #0x88
  417480:	stp	x23, x24, [sp, #48]
  417484:	stp	x25, x26, [sp, #64]
  417488:	stp	x27, x28, [sp, #80]
  41748c:	bl	410a54 <_obstack_memory_used@@Base+0x8a8>
  417490:	mov	w22, w0
  417494:	cbnz	w0, 4174fc <_obstack_memory_used@@Base+0x7350>
  417498:	add	x3, sp, #0x88
  41749c:	mov	x2, x20
  4174a0:	mov	x1, x19
  4174a4:	mov	x0, x21
  4174a8:	bl	416ecc <_obstack_memory_used@@Base+0x6d20>
  4174ac:	mov	w22, w0
  4174b0:	cbnz	w0, 4174f4 <_obstack_memory_used@@Base+0x7348>
  4174b4:	add	x0, x19, #0x20
  4174b8:	mov	w26, #0x0                   	// #0
  4174bc:	str	x0, [sp, #104]
  4174c0:	cmp	x20, #0x0
  4174c4:	b.le	4174f4 <_obstack_memory_used@@Base+0x7348>
  4174c8:	ldr	x0, [x19]
  4174cc:	lsl	x25, x20, #3
  4174d0:	ldr	x1, [x0, x25]
  4174d4:	cmp	x1, #0x0
  4174d8:	ldr	w1, [x21, #224]
  4174dc:	csinc	w26, wzr, w26, ne  // ne = any
  4174e0:	cmp	w1, w26
  4174e4:	b.ge	41751c <_obstack_memory_used@@Base+0x7370>  // b.tcont
  4174e8:	mov	x2, x25
  4174ec:	mov	w1, #0x0                   	// #0
  4174f0:	bl	402a10 <memset@plt>
  4174f4:	ldr	x0, [sp, #152]
  4174f8:	bl	402c20 <free@plt>
  4174fc:	mov	w0, w22
  417500:	ldp	x19, x20, [sp, #16]
  417504:	ldp	x21, x22, [sp, #32]
  417508:	ldp	x23, x24, [sp, #48]
  41750c:	ldp	x25, x26, [sp, #64]
  417510:	ldp	x27, x28, [sp, #80]
  417514:	ldp	x29, x30, [sp], #160
  417518:	ret
  41751c:	ldr	x0, [x21, #184]
  417520:	sub	x20, x20, #0x1
  417524:	add	x0, x0, x25
  417528:	ldur	x27, [x0, #-8]
  41752c:	str	xzr, [sp, #144]
  417530:	cbnz	x27, 417554 <_obstack_memory_used@@Base+0x73a8>
  417534:	add	x3, sp, #0x88
  417538:	mov	x2, x20
  41753c:	mov	x1, x19
  417540:	mov	x0, x21
  417544:	bl	416ecc <_obstack_memory_used@@Base+0x6d20>
  417548:	cbz	w0, 4174c0 <_obstack_memory_used@@Base+0x7314>
  41754c:	mov	w22, w0
  417550:	b	4174f4 <_obstack_memory_used@@Base+0x7348>
  417554:	ldr	x24, [x21, #152]
  417558:	mov	x23, #0x0                   	// #0
  41755c:	ldr	x1, [x27, #40]
  417560:	add	x0, x27, #0x20
  417564:	cmp	x23, x1
  417568:	b.ge	417534 <_obstack_memory_used@@Base+0x7388>  // b.tcont
  41756c:	ldr	x0, [x0, #16]
  417570:	ldr	x28, [x0, x23, lsl #3]
  417574:	lsl	x0, x28, #4
  417578:	str	x0, [sp, #112]
  41757c:	ldr	x0, [x24]
  417580:	add	x0, x0, x28, lsl #4
  417584:	ldrb	w0, [x0, #10]
  417588:	tbnz	w0, #4, 4175b4 <_obstack_memory_used@@Base+0x7408>
  41758c:	ldr	x1, [x24]
  417590:	lsl	x0, x28, #4
  417594:	mov	x2, x20
  417598:	add	x1, x1, x0
  41759c:	mov	x0, x21
  4175a0:	bl	415750 <_obstack_memory_used@@Base+0x55a4>
  4175a4:	tst	w0, #0xff
  4175a8:	b.ne	417640 <_obstack_memory_used@@Base+0x7494>  // b.any
  4175ac:	add	x23, x23, #0x1
  4175b0:	b	41755c <_obstack_memory_used@@Base+0x73b0>
  4175b4:	ldr	x7, [x19, #24]
  4175b8:	mov	x3, x20
  4175bc:	ldr	x5, [x21, #152]
  4175c0:	mov	x2, x21
  4175c4:	mov	x1, x28
  4175c8:	stp	x5, x7, [sp, #112]
  4175cc:	mov	x0, x5
  4175d0:	bl	4121e4 <_obstack_memory_used@@Base+0x2038>
  4175d4:	mov	w6, w0
  4175d8:	cmp	w0, #0x0
  4175dc:	b.le	417638 <_obstack_memory_used@@Base+0x748c>
  4175e0:	ldr	x7, [sp, #120]
  4175e4:	add	x0, x20, w0, sxtw
  4175e8:	cmp	x7, x0
  4175ec:	b.lt	417614 <_obstack_memory_used@@Base+0x7468>  // b.tstop
  4175f0:	ldr	x1, [x19]
  4175f4:	ldr	x0, [x1, x0, lsl #3]
  4175f8:	cbz	x0, 41758c <_obstack_memory_used@@Base+0x73e0>
  4175fc:	ldr	x5, [sp, #112]
  417600:	add	x0, x0, #0x8
  417604:	ldr	x1, [x5, #24]
  417608:	ldr	x1, [x1, x28, lsl #3]
  41760c:	bl	410334 <_obstack_memory_used@@Base+0x188>
  417610:	cbz	x0, 41758c <_obstack_memory_used@@Base+0x73e0>
  417614:	ldr	x0, [x19, #40]
  417618:	cbnz	x0, 417668 <_obstack_memory_used@@Base+0x74bc>
  41761c:	mov	x1, x28
  417620:	add	x0, sp, #0x88
  417624:	bl	412d64 <_obstack_memory_used@@Base+0x2bb8>
  417628:	tst	w0, #0xff
  41762c:	b.ne	4175ac <_obstack_memory_used@@Base+0x7400>  // b.any
  417630:	mov	w22, #0xc                   	// #12
  417634:	b	4174f4 <_obstack_memory_used@@Base+0x7348>
  417638:	b.eq	41758c <_obstack_memory_used@@Base+0x73e0>  // b.none
  41763c:	b	417614 <_obstack_memory_used@@Base+0x7468>
  417640:	ldr	x0, [x19]
  417644:	ldr	x0, [x0, x25]
  417648:	cbz	x0, 4175ac <_obstack_memory_used@@Base+0x7400>
  41764c:	ldr	x1, [x24, #24]
  417650:	add	x0, x0, #0x8
  417654:	ldr	x1, [x1, x28, lsl #3]
  417658:	bl	410334 <_obstack_memory_used@@Base+0x188>
  41765c:	cbz	x0, 4175ac <_obstack_memory_used@@Base+0x7400>
  417660:	mov	w6, #0x1                   	// #1
  417664:	b	417614 <_obstack_memory_used@@Base+0x7468>
  417668:	ldr	x0, [x24, #24]
  41766c:	mov	x5, x20
  417670:	ldr	x1, [sp, #104]
  417674:	mov	x4, x28
  417678:	ldr	x2, [x0, x28, lsl #3]
  41767c:	add	x3, x20, w6, sxtw
  417680:	mov	x0, x21
  417684:	bl	410778 <_obstack_memory_used@@Base+0x5cc>
  417688:	tst	w0, #0xff
  41768c:	b.eq	41761c <_obstack_memory_used@@Base+0x7470>  // b.none
  417690:	b	4175ac <_obstack_memory_used@@Base+0x7400>
  417694:	sub	sp, sp, #0x250
  417698:	stp	x29, x30, [sp]
  41769c:	mov	x29, sp
  4176a0:	stp	x23, x24, [sp, #48]
  4176a4:	mov	x24, x0
  4176a8:	ldr	w0, [sp, #592]
  4176ac:	mov	x23, x6
  4176b0:	stp	x19, x20, [sp, #16]
  4176b4:	mov	x20, x5
  4176b8:	stp	x21, x22, [sp, #32]
  4176bc:	mov	x21, x3
  4176c0:	stp	x25, x26, [sp, #64]
  4176c4:	mov	x26, x2
  4176c8:	mov	x2, #0x100                 	// #256
  4176cc:	stp	x27, x28, [sp, #80]
  4176d0:	mov	x27, x4
  4176d4:	str	x7, [sp, #112]
  4176d8:	str	x1, [sp, #128]
  4176dc:	mov	w1, #0x0                   	// #0
  4176e0:	str	w0, [sp, #184]
  4176e4:	add	x0, sp, #0x150
  4176e8:	ldr	x22, [x24]
  4176ec:	bl	402a10 <memset@plt>
  4176f0:	ldr	x25, [x24, #32]
  4176f4:	str	x22, [sp, #488]
  4176f8:	cbz	x25, 417714 <_obstack_memory_used@@Base+0x7568>
  4176fc:	ldrb	w0, [x24, #56]
  417700:	tbz	w0, #3, 417910 <_obstack_memory_used@@Base+0x7764>
  417704:	cmp	x21, x27
  417708:	b.eq	417910 <_obstack_memory_used@@Base+0x7764>  // b.none
  41770c:	tst	x0, #0x1
  417710:	csel	x25, x25, xzr, eq  // eq = none
  417714:	ldr	x1, [x24, #48]
  417718:	sub	x0, x23, #0x1
  41771c:	sub	x0, x0, x1
  417720:	cmp	x1, x23
  417724:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  417728:	str	x0, [sp, #208]
  41772c:	ldr	x0, [x24, #16]
  417730:	cbz	x0, 418530 <_obstack_memory_used@@Base+0x8384>
  417734:	ldr	x2, [x22, #72]
  417738:	cbz	x2, 418530 <_obstack_memory_used@@Base+0x8384>
  41773c:	ldr	x1, [x22, #80]
  417740:	cbz	x1, 418530 <_obstack_memory_used@@Base+0x8384>
  417744:	ldr	x0, [x22, #88]
  417748:	cbz	x0, 418530 <_obstack_memory_used@@Base+0x8384>
  41774c:	ldr	x3, [x22, #96]
  417750:	cbz	x3, 418530 <_obstack_memory_used@@Base+0x8384>
  417754:	ldr	x2, [x2, #16]
  417758:	cbnz	x2, 417788 <_obstack_memory_used@@Base+0x75dc>
  41775c:	ldr	x1, [x1, #16]
  417760:	cbnz	x1, 417788 <_obstack_memory_used@@Base+0x75dc>
  417764:	ldr	x0, [x0, #16]
  417768:	cbz	x0, 417774 <_obstack_memory_used@@Base+0x75c8>
  41776c:	ldrsb	w0, [x24, #56]
  417770:	tbnz	w0, #31, 417788 <_obstack_memory_used@@Base+0x75dc>
  417774:	cmp	x21, #0x0
  417778:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  41777c:	b.ne	418530 <_obstack_memory_used@@Base+0x8384>  // b.any
  417780:	mov	x27, #0x0                   	// #0
  417784:	mov	x21, #0x0                   	// #0
  417788:	ldr	x0, [sp, #208]
  41778c:	subs	x23, x23, x0
  417790:	b.ne	417918 <_obstack_memory_used@@Base+0x776c>  // b.any
  417794:	ldr	x0, [x22, #152]
  417798:	cmp	x0, #0x0
  41779c:	cset	w0, ne  // ne = any
  4177a0:	ldr	x1, [x22, #16]
  4177a4:	str	w0, [sp, #164]
  4177a8:	ldr	w2, [x22, #180]
  4177ac:	add	x1, x1, #0x1
  4177b0:	str	w2, [sp, #480]
  4177b4:	ldr	x0, [x24, #40]
  4177b8:	sxtw	x3, w2
  4177bc:	cmp	x1, w2, sxtw
  4177c0:	str	x0, [sp, #104]
  4177c4:	csel	x1, x1, x3, ge  // ge = tcont
  4177c8:	add	x3, x26, #0x1
  4177cc:	ldr	x0, [x24, #24]
  4177d0:	cmp	x1, x3
  4177d4:	csel	x1, x1, x3, le
  4177d8:	stp	x26, x26, [sp, #416]
  4177dc:	ldr	x3, [sp, #128]
  4177e0:	str	x3, [sp, #336]
  4177e4:	ldr	x3, [sp, #104]
  4177e8:	str	x3, [sp, #456]
  4177ec:	and	x3, x0, #0x400000
  4177f0:	ubfx	w0, w0, #22, #1
  4177f4:	strb	w0, [sp, #472]
  4177f8:	ldr	x0, [sp, #104]
  4177fc:	stp	x26, x26, [sp, #432]
  417800:	orr	x0, x0, x3
  417804:	cmp	x0, #0x0
  417808:	cset	w0, ne  // ne = any
  41780c:	strb	w0, [sp, #475]
  417810:	ldrb	w0, [x22, #176]
  417814:	ubfx	x2, x0, #2, #1
  417818:	ubfx	x0, x0, #3, #1
  41781c:	strb	w2, [sp, #473]
  417820:	strb	w0, [sp, #474]
  417824:	add	x0, sp, #0x150
  417828:	bl	410958 <_obstack_memory_used@@Base+0x7ac>
  41782c:	cbnz	w0, 418420 <_obstack_memory_used@@Base+0x8274>
  417830:	add	x0, x22, #0xb8
  417834:	str	x0, [sp, #464]
  417838:	ldrb	w0, [x22, #176]
  41783c:	ldrb	w1, [sp, #475]
  417840:	ldr	x2, [sp, #128]
  417844:	ubfx	x0, x0, #4, #1
  417848:	strb	w0, [sp, #478]
  41784c:	cmp	w1, #0x0
  417850:	ldr	x0, [sp, #344]
  417854:	csel	x0, x0, x2, ne  // ne = any
  417858:	str	x0, [sp, #344]
  41785c:	cbnz	w1, 417920 <_obstack_memory_used@@Base+0x7774>
  417860:	ldr	w0, [x22, #180]
  417864:	cmp	w0, #0x1
  417868:	csel	x0, x26, xzr, le
  41786c:	stp	x0, x0, [sp, #384]
  417870:	ldrb	w0, [x24, #56]
  417874:	ldr	x28, [x22, #152]
  417878:	stp	x20, x20, [sp, #432]
  41787c:	ubfx	x0, x0, #7, #1
  417880:	strb	w0, [sp, #477]
  417884:	ldr	w0, [sp, #184]
  417888:	lsl	x19, x28, #1
  41788c:	str	w0, [sp, #496]
  417890:	cmp	xzr, x28, lsl #1
  417894:	mov	x0, #0xffffffffffffffff    	// #-1
  417898:	str	x0, [sp, #504]
  41789c:	b.lt	417928 <_obstack_memory_used@@Base+0x777c>  // b.tstop
  4178a0:	mov	w0, #0x1                   	// #1
  4178a4:	str	x19, [sp, #544]
  4178a8:	str	w0, [sp, #560]
  4178ac:	cmp	x23, #0x1
  4178b0:	str	x19, [sp, #576]
  4178b4:	b.hi	41796c <_obstack_memory_used@@Base+0x77c0>  // b.pmore
  4178b8:	ldrb	w0, [x22, #176]
  4178bc:	tbnz	w0, #1, 41796c <_obstack_memory_used@@Base+0x77c0>
  4178c0:	ldr	x1, [sp, #184]
  4178c4:	mov	w0, #0x4                   	// #4
  4178c8:	str	x21, [sp, #272]
  4178cc:	tst	x1, #0x1
  4178d0:	mov	w1, #0x6                   	// #6
  4178d4:	csel	w1, w0, w1, ne  // ne = any
  4178d8:	cmp	x21, x27
  4178dc:	str	w1, [sp, #448]
  4178e0:	mov	w1, #0x1                   	// #1
  4178e4:	cneg	w1, w1, gt
  4178e8:	str	w1, [sp, #220]
  4178ec:	csel	x1, x21, x27, le
  4178f0:	str	x1, [sp, #192]
  4178f4:	csel	x1, x21, x27, ge  // ge = tcont
  4178f8:	str	x1, [sp, #120]
  4178fc:	ldr	w1, [x22, #180]
  417900:	str	w1, [sp, #216]
  417904:	cbnz	x25, 417994 <_obstack_memory_used@@Base+0x77e8>
  417908:	mov	w0, #0x8                   	// #8
  41790c:	b	4179d4 <_obstack_memory_used@@Base+0x7828>
  417910:	mov	x25, #0x0                   	// #0
  417914:	b	417714 <_obstack_memory_used@@Base+0x7568>
  417918:	mov	w0, #0x1                   	// #1
  41791c:	b	4177a0 <_obstack_memory_used@@Base+0x75f4>
  417920:	mov	x0, #0x0                   	// #0
  417924:	b	41786c <_obstack_memory_used@@Base+0x76c0>
  417928:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  41792c:	movk	x0, #0x666, lsl #48
  417930:	cmp	x19, x0
  417934:	b.le	417940 <_obstack_memory_used@@Base+0x7794>
  417938:	mov	w19, #0xc                   	// #12
  41793c:	b	417b10 <_obstack_memory_used@@Base+0x7964>
  417940:	mov	x0, #0x28                  	// #40
  417944:	mul	x0, x19, x0
  417948:	bl	402930 <malloc@plt>
  41794c:	mov	x20, x0
  417950:	lsl	x0, x28, #4
  417954:	str	x20, [sp, #552]
  417958:	bl	402930 <malloc@plt>
  41795c:	str	x0, [sp, #584]
  417960:	cbz	x20, 417938 <_obstack_memory_used@@Base+0x778c>
  417964:	cbnz	x0, 4178a0 <_obstack_memory_used@@Base+0x76f4>
  417968:	b	417938 <_obstack_memory_used@@Base+0x778c>
  41796c:	ldr	x0, [sp, #400]
  417970:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  417974:	cmp	x0, x1
  417978:	b.hi	417938 <_obstack_memory_used@@Base+0x778c>  // b.pmore
  41797c:	add	x0, x0, #0x1
  417980:	lsl	x0, x0, #3
  417984:	bl	402930 <malloc@plt>
  417988:	str	x0, [sp, #520]
  41798c:	cbnz	x0, 4178c0 <_obstack_memory_used@@Base+0x7714>
  417990:	b	417938 <_obstack_memory_used@@Base+0x778c>
  417994:	ldr	w1, [sp, #216]
  417998:	cmp	w1, #0x1
  41799c:	b.eq	4179b8 <_obstack_memory_used@@Base+0x780c>  // b.none
  4179a0:	ldr	x0, [x24, #24]
  4179a4:	tbnz	w0, #22, 417a9c <_obstack_memory_used@@Base+0x78f0>
  4179a8:	ldr	x0, [sp, #104]
  4179ac:	cmp	x0, #0x0
  4179b0:	cset	w0, eq  // eq = none
  4179b4:	lsl	w0, w0, #2
  4179b8:	ldr	x1, [sp, #104]
  4179bc:	cmp	x21, x27
  4179c0:	cset	w2, le
  4179c4:	cmp	x1, #0x0
  4179c8:	cset	w1, ne  // ne = any
  4179cc:	orr	w0, w1, w0
  4179d0:	orr	w0, w0, w2, lsl #1
  4179d4:	cmp	x21, x27
  4179d8:	str	w0, [sp, #232]
  4179dc:	add	x0, sp, #0x110
  4179e0:	csel	x0, x0, xzr, le
  4179e4:	str	x0, [sp, #224]
  4179e8:	cmp	x0, #0x0
  4179ec:	cset	w0, ne  // ne = any
  4179f0:	str	w0, [sp, #236]
  4179f4:	ldr	x1, [sp, #192]
  4179f8:	ldr	x0, [sp, #272]
  4179fc:	ldr	x2, [sp, #120]
  417a00:	cmp	x0, x1
  417a04:	cset	w1, lt  // lt = tstop
  417a08:	cmp	x0, x2
  417a0c:	cset	w2, gt
  417a10:	orr	w1, w1, w2
  417a14:	cbnz	w1, 417b0c <_obstack_memory_used@@Base+0x7960>
  417a18:	ldr	w1, [sp, #232]
  417a1c:	sub	w2, w1, #0x4
  417a20:	cmp	w2, #0x4
  417a24:	b.ls	417aa4 <_obstack_memory_used@@Base+0x78f8>  // b.plast
  417a28:	ldrsw	x21, [sp, #220]
  417a2c:	ldr	x20, [sp, #272]
  417a30:	ldr	x0, [sp, #376]
  417a34:	ldr	x1, [sp, #392]
  417a38:	sub	x0, x20, x0
  417a3c:	cmp	x1, x0
  417a40:	b.hi	417a64 <_obstack_memory_used@@Base+0x78b8>  // b.pmore
  417a44:	ldr	w2, [sp, #184]
  417a48:	mov	x1, x20
  417a4c:	add	x0, sp, #0x150
  417a50:	bl	414fa8 <_obstack_memory_used@@Base+0x4dfc>
  417a54:	mov	w19, w0
  417a58:	cbnz	w0, 417b10 <_obstack_memory_used@@Base+0x7964>
  417a5c:	ldr	x0, [sp, #376]
  417a60:	sub	x0, x20, x0
  417a64:	cmp	x20, x26
  417a68:	b.ge	417c24 <_obstack_memory_used@@Base+0x7a78>  // b.tcont
  417a6c:	ldr	x1, [sp, #344]
  417a70:	ldrb	w0, [x1, x0]
  417a74:	ldrb	w0, [x25, w0, sxtw]
  417a78:	cbnz	w0, 417c34 <_obstack_memory_used@@Base+0x7a88>
  417a7c:	ldr	x0, [sp, #192]
  417a80:	add	x20, x21, x20
  417a84:	str	x20, [sp, #272]
  417a88:	cmp	x20, x0
  417a8c:	ldr	x0, [sp, #120]
  417a90:	ccmp	x20, x0, #0x0, ge  // ge = tcont
  417a94:	b.le	417a2c <_obstack_memory_used@@Base+0x7880>
  417a98:	b	417b0c <_obstack_memory_used@@Base+0x7960>
  417a9c:	mov	w0, #0x0                   	// #0
  417aa0:	b	4179b8 <_obstack_memory_used@@Base+0x780c>
  417aa4:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xce54>
  417aa8:	add	x1, x1, #0x28
  417aac:	ldrb	w1, [x1, w2, uxtw]
  417ab0:	adr	x2, 417abc <_obstack_memory_used@@Base+0x7910>
  417ab4:	add	x1, x2, w1, sxtb #2
  417ab8:	br	x1
  417abc:	mov	w1, #0x0                   	// #0
  417ac0:	ldr	x3, [sp, #120]
  417ac4:	mov	x2, x0
  417ac8:	cmp	x3, x0
  417acc:	b.gt	417bbc <_obstack_memory_used@@Base+0x7a10>
  417ad0:	cbz	w1, 417ad8 <_obstack_memory_used@@Base+0x792c>
  417ad4:	str	x0, [sp, #272]
  417ad8:	ldr	x1, [sp, #120]
  417adc:	ldr	x0, [sp, #272]
  417ae0:	cmp	x0, x1
  417ae4:	b.ne	417c34 <_obstack_memory_used@@Base+0x7a88>  // b.any
  417ae8:	cmp	x1, x26
  417aec:	b.ge	417be4 <_obstack_memory_used@@Base+0x7a38>  // b.tcont
  417af0:	ldr	x0, [sp, #128]
  417af4:	ldrb	w0, [x0, x1]
  417af8:	ldr	x1, [sp, #104]
  417afc:	cbz	x1, 417b04 <_obstack_memory_used@@Base+0x7958>
  417b00:	ldrb	w0, [x1, x0]
  417b04:	ldrb	w0, [x25, x0]
  417b08:	cbnz	w0, 417c34 <_obstack_memory_used@@Base+0x7a88>
  417b0c:	mov	w19, #0x1                   	// #1
  417b10:	ldr	x0, [sp, #520]
  417b14:	bl	402c20 <free@plt>
  417b18:	ldr	x0, [x22, #152]
  417b1c:	cbz	x0, 417b38 <_obstack_memory_used@@Base+0x798c>
  417b20:	add	x0, sp, #0x150
  417b24:	bl	411800 <_obstack_memory_used@@Base+0x1654>
  417b28:	ldr	x0, [sp, #584]
  417b2c:	bl	402c20 <free@plt>
  417b30:	ldr	x0, [sp, #552]
  417b34:	bl	402c20 <free@plt>
  417b38:	add	x0, sp, #0x150
  417b3c:	bl	411658 <_obstack_memory_used@@Base+0x14ac>
  417b40:	mov	w0, w19
  417b44:	ldp	x29, x30, [sp]
  417b48:	ldp	x19, x20, [sp, #16]
  417b4c:	ldp	x21, x22, [sp, #32]
  417b50:	ldp	x23, x24, [sp, #48]
  417b54:	ldp	x25, x26, [sp, #64]
  417b58:	ldp	x27, x28, [sp, #80]
  417b5c:	add	sp, sp, #0x250
  417b60:	ret
  417b64:	mov	w1, #0x0                   	// #0
  417b68:	ldr	x3, [sp, #120]
  417b6c:	mov	x2, x0
  417b70:	cmp	x3, x0
  417b74:	b.le	417ad0 <_obstack_memory_used@@Base+0x7924>
  417b78:	ldr	x3, [sp, #128]
  417b7c:	ldrb	w3, [x3, x0]
  417b80:	add	x0, x0, #0x1
  417b84:	ldrb	w3, [x25, x3]
  417b88:	cbnz	w3, 417bd8 <_obstack_memory_used@@Base+0x7a2c>
  417b8c:	mov	w1, #0x1                   	// #1
  417b90:	b	417b68 <_obstack_memory_used@@Base+0x79bc>
  417b94:	mov	w2, #0x0                   	// #0
  417b98:	ldr	x1, [sp, #192]
  417b9c:	mov	x3, x0
  417ba0:	cmp	x0, x1
  417ba4:	b.ge	417bec <_obstack_memory_used@@Base+0x7a40>  // b.tcont
  417ba8:	cbz	w2, 417b0c <_obstack_memory_used@@Base+0x7960>
  417bac:	str	x0, [sp, #272]
  417bb0:	b	417b0c <_obstack_memory_used@@Base+0x7960>
  417bb4:	mov	w1, #0x1                   	// #1
  417bb8:	b	417ac0 <_obstack_memory_used@@Base+0x7914>
  417bbc:	ldr	x3, [sp, #128]
  417bc0:	ldr	x4, [sp, #104]
  417bc4:	ldrb	w3, [x3, x0]
  417bc8:	add	x0, x0, #0x1
  417bcc:	ldrb	w3, [x4, x3]
  417bd0:	ldrb	w3, [x25, x3]
  417bd4:	cbz	w3, 417bb4 <_obstack_memory_used@@Base+0x7a08>
  417bd8:	cbz	w1, 417ad8 <_obstack_memory_used@@Base+0x792c>
  417bdc:	str	x2, [sp, #272]
  417be0:	b	417ad8 <_obstack_memory_used@@Base+0x792c>
  417be4:	mov	x0, #0x0                   	// #0
  417be8:	b	417af8 <_obstack_memory_used@@Base+0x794c>
  417bec:	cmp	x0, x26
  417bf0:	b.ge	417c1c <_obstack_memory_used@@Base+0x7a70>  // b.tcont
  417bf4:	ldr	x1, [sp, #128]
  417bf8:	ldrb	w1, [x1, x0]
  417bfc:	ldr	x4, [sp, #104]
  417c00:	cbz	x4, 417c08 <_obstack_memory_used@@Base+0x7a5c>
  417c04:	ldrb	w1, [x4, x1]
  417c08:	ldrb	w1, [x25, x1]
  417c0c:	sub	x0, x0, #0x1
  417c10:	cbnz	w1, 417c2c <_obstack_memory_used@@Base+0x7a80>
  417c14:	mov	w2, #0x1                   	// #1
  417c18:	b	417b98 <_obstack_memory_used@@Base+0x79ec>
  417c1c:	mov	x1, #0x0                   	// #0
  417c20:	b	417bfc <_obstack_memory_used@@Base+0x7a50>
  417c24:	mov	w0, #0x0                   	// #0
  417c28:	b	417a74 <_obstack_memory_used@@Base+0x78c8>
  417c2c:	cbz	w2, 417c34 <_obstack_memory_used@@Base+0x7a88>
  417c30:	str	x3, [sp, #272]
  417c34:	ldr	w2, [sp, #184]
  417c38:	add	x0, sp, #0x150
  417c3c:	ldr	x1, [sp, #272]
  417c40:	bl	414fa8 <_obstack_memory_used@@Base+0x4dfc>
  417c44:	mov	w19, w0
  417c48:	cbnz	w0, 417b10 <_obstack_memory_used@@Base+0x7964>
  417c4c:	ldr	w0, [sp, #216]
  417c50:	cmp	w0, #0x1
  417c54:	b.eq	417c70 <_obstack_memory_used@@Base+0x7ac4>  // b.none
  417c58:	ldr	x0, [sp, #384]
  417c5c:	cbz	x0, 417c70 <_obstack_memory_used@@Base+0x7ac4>
  417c60:	ldr	x0, [sp, #352]
  417c64:	ldr	w0, [x0]
  417c68:	cmn	w0, #0x1
  417c6c:	b.eq	417d00 <_obstack_memory_used@@Base+0x7b54>  // b.none
  417c70:	ldr	x27, [sp, #488]
  417c74:	str	wzr, [sp, #264]
  417c78:	ldr	x20, [sp, #408]
  417c7c:	ldr	x21, [x27, #72]
  417c80:	ldrsb	w0, [x21, #104]
  417c84:	str	xzr, [sp, #528]
  417c88:	str	xzr, [sp, #536]
  417c8c:	str	wzr, [sp, #560]
  417c90:	tbz	w0, #31, 417cb4 <_obstack_memory_used@@Base+0x7b08>
  417c94:	ldr	w2, [sp, #496]
  417c98:	sub	x1, x20, #0x1
  417c9c:	add	x0, sp, #0x150
  417ca0:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  417ca4:	mov	w3, w0
  417ca8:	tbz	w3, #0, 417d14 <_obstack_memory_used@@Base+0x7b68>
  417cac:	ldr	x21, [x27, #80]
  417cb0:	cbz	x21, 417938 <_obstack_memory_used@@Base+0x778c>
  417cb4:	ldr	x0, [sp, #520]
  417cb8:	cbz	x0, 417db8 <_obstack_memory_used@@Base+0x7c0c>
  417cbc:	str	x21, [x0, x20, lsl #3]
  417cc0:	ldr	x0, [x27, #152]
  417cc4:	ldr	w1, [sp, #236]
  417cc8:	str	w1, [sp, #144]
  417ccc:	cbz	x0, 417d60 <_obstack_memory_used@@Base+0x7bb4>
  417cd0:	add	x27, x21, #0x8
  417cd4:	add	x0, sp, #0x150
  417cd8:	mov	x1, x27
  417cdc:	mov	x2, #0x0                   	// #0
  417ce0:	bl	4119e4 <_obstack_memory_used@@Base+0x1838>
  417ce4:	str	w0, [sp, #264]
  417ce8:	cbz	w0, 417d54 <_obstack_memory_used@@Base+0x7ba8>
  417cec:	sxtw	x20, w0
  417cf0:	cmn	x20, #0x1
  417cf4:	b.ne	4181a4 <_obstack_memory_used@@Base+0x7ff8>  // b.any
  417cf8:	add	x0, sp, #0x150
  417cfc:	bl	411800 <_obstack_memory_used@@Base+0x1654>
  417d00:	ldr	x0, [sp, #272]
  417d04:	ldr	w1, [sp, #220]
  417d08:	add	x0, x0, w1, sxtw
  417d0c:	str	x0, [sp, #272]
  417d10:	b	4179f4 <_obstack_memory_used@@Base+0x7848>
  417d14:	cbz	w0, 417cb4 <_obstack_memory_used@@Base+0x7b08>
  417d18:	and	w0, w0, #0x6
  417d1c:	cmp	w0, #0x6
  417d20:	b.ne	417d2c <_obstack_memory_used@@Base+0x7b80>  // b.any
  417d24:	ldr	x21, [x27, #96]
  417d28:	b	417cb0 <_obstack_memory_used@@Base+0x7b04>
  417d2c:	tbz	w3, #1, 417d38 <_obstack_memory_used@@Base+0x7b8c>
  417d30:	ldr	x21, [x27, #88]
  417d34:	b	417cb0 <_obstack_memory_used@@Base+0x7b04>
  417d38:	tbz	w3, #2, 417cb4 <_obstack_memory_used@@Base+0x7b08>
  417d3c:	ldr	x2, [x21, #80]
  417d40:	mov	x1, x27
  417d44:	add	x0, sp, #0x108
  417d48:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  417d4c:	mov	x21, x0
  417d50:	b	417cb0 <_obstack_memory_used@@Base+0x7b04>
  417d54:	ldrb	w0, [x21, #104]
  417d58:	tbnz	w0, #6, 417da0 <_obstack_memory_used@@Base+0x7bf4>
  417d5c:	str	wzr, [sp, #144]
  417d60:	ldrb	w0, [x21, #104]
  417d64:	tbz	w0, #4, 418064 <_obstack_memory_used@@Base+0x7eb8>
  417d68:	ldrsb	w0, [x21, #104]
  417d6c:	tbz	w0, #31, 417d88 <_obstack_memory_used@@Base+0x7bdc>
  417d70:	mov	x2, x20
  417d74:	mov	x1, x21
  417d78:	add	x0, sp, #0x150
  417d7c:	bl	41559c <_obstack_memory_used@@Base+0x53f0>
  417d80:	str	x0, [sp, #136]
  417d84:	cbz	x0, 41819c <_obstack_memory_used@@Base+0x7ff0>
  417d88:	ldr	w0, [sp, #164]
  417d8c:	cbz	w0, 417cf0 <_obstack_memory_used@@Base+0x7b44>
  417d90:	mov	x1, #0x1                   	// #1
  417d94:	mov	x0, x20
  417d98:	str	x1, [sp, #136]
  417d9c:	b	41806c <_obstack_memory_used@@Base+0x7ec0>
  417da0:	mov	x1, x27
  417da4:	add	x0, sp, #0x150
  417da8:	bl	4167ec <_obstack_memory_used@@Base+0x6640>
  417dac:	str	w0, [sp, #264]
  417db0:	cbz	w0, 417d5c <_obstack_memory_used@@Base+0x7bb0>
  417db4:	b	417cec <_obstack_memory_used@@Base+0x7b40>
  417db8:	ldr	w0, [sp, #236]
  417dbc:	str	w0, [sp, #144]
  417dc0:	b	417d60 <_obstack_memory_used@@Base+0x7bb4>
  417dc4:	ldr	x27, [sp, #488]
  417dc8:	str	xzr, [sp, #176]
  417dcc:	ldr	x0, [x21, #16]
  417dd0:	ldr	x1, [sp, #176]
  417dd4:	cmp	x1, x0
  417dd8:	b.lt	417de4 <_obstack_memory_used@@Base+0x7c38>  // b.tstop
  417ddc:	mov	w0, #0x0                   	// #0
  417de0:	b	417f58 <_obstack_memory_used@@Base+0x7dac>
  417de4:	ldr	x0, [x21, #24]
  417de8:	ldr	x1, [sp, #176]
  417dec:	ldr	x28, [x0, x1, lsl #3]
  417df0:	ldr	x0, [x27]
  417df4:	add	x0, x0, x28, lsl #4
  417df8:	ldrb	w1, [x0, #10]
  417dfc:	tbz	w1, #4, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417e00:	ldr	w4, [x0, #8]
  417e04:	str	w4, [sp, #248]
  417e08:	tst	w4, #0x3ff00
  417e0c:	ldr	x3, [sp, #408]
  417e10:	b.eq	417e54 <_obstack_memory_used@@Base+0x7ca8>  // b.none
  417e14:	ldr	w2, [sp, #496]
  417e18:	mov	x1, x3
  417e1c:	add	x0, sp, #0x150
  417e20:	str	x3, [sp, #240]
  417e24:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  417e28:	ldr	w4, [sp, #248]
  417e2c:	ldr	x3, [sp, #240]
  417e30:	ubfx	x2, x4, #8, #10
  417e34:	tbz	w4, #10, 417e3c <_obstack_memory_used@@Base+0x7c90>
  417e38:	tbz	w0, #0, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417e3c:	tbz	w2, #3, 417e44 <_obstack_memory_used@@Base+0x7c98>
  417e40:	tbnz	w0, #0, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417e44:	tbz	w2, #5, 417e4c <_obstack_memory_used@@Base+0x7ca0>
  417e48:	tbz	w0, #1, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417e4c:	tbz	w2, #7, 417e54 <_obstack_memory_used@@Base+0x7ca8>
  417e50:	tbz	w0, #3, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417e54:	add	x2, sp, #0x150
  417e58:	mov	x1, x28
  417e5c:	mov	x0, x27
  417e60:	bl	4121e4 <_obstack_memory_used@@Base+0x2038>
  417e64:	cbz	w0, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417e68:	ldr	x3, [sp, #408]
  417e6c:	ldr	w1, [sp, #560]
  417e70:	add	x3, x3, w0, sxtw
  417e74:	cmp	w1, w0
  417e78:	csel	w0, w1, w0, ge  // ge = tcont
  417e7c:	mov	x1, x3
  417e80:	str	x3, [sp, #240]
  417e84:	str	w0, [sp, #560]
  417e88:	add	x0, sp, #0x150
  417e8c:	bl	411290 <_obstack_memory_used@@Base+0x10e4>
  417e90:	str	w0, [sp, #268]
  417e94:	cbnz	w0, 417f58 <_obstack_memory_used@@Base+0x7dac>
  417e98:	ldr	x0, [x27, #24]
  417e9c:	mov	x1, #0x18                  	// #24
  417ea0:	ldr	x3, [sp, #240]
  417ea4:	ldr	x2, [x0, x28, lsl #3]
  417ea8:	ldr	x0, [x27, #48]
  417eac:	lsl	x28, x3, #3
  417eb0:	madd	x2, x2, x1, x0
  417eb4:	ldr	x0, [sp, #520]
  417eb8:	ldr	x4, [x0, x28]
  417ebc:	cbnz	x4, 417f3c <_obstack_memory_used@@Base+0x7d90>
  417ec0:	add	x5, sp, #0x200
  417ec4:	ldp	x0, x1, [x2]
  417ec8:	stp	x0, x1, [x5, #-232]
  417ecc:	ldr	x0, [x2, #16]
  417ed0:	str	x0, [sp, #296]
  417ed4:	ldr	w2, [sp, #496]
  417ed8:	sub	x1, x3, #0x1
  417edc:	add	x0, sp, #0x150
  417ee0:	str	x4, [sp, #248]
  417ee4:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  417ee8:	mov	w3, w0
  417eec:	ldr	x5, [sp, #520]
  417ef0:	add	x2, sp, #0x118
  417ef4:	mov	x1, x27
  417ef8:	add	x0, sp, #0x10c
  417efc:	str	x5, [sp, #240]
  417f00:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  417f04:	ldp	x5, x4, [sp, #240]
  417f08:	str	x0, [x5, x28]
  417f0c:	cbz	x4, 417f18 <_obstack_memory_used@@Base+0x7d6c>
  417f10:	ldr	x0, [sp, #296]
  417f14:	bl	402c20 <free@plt>
  417f18:	ldr	x0, [sp, #520]
  417f1c:	ldr	x0, [x0, x28]
  417f20:	cbnz	x0, 417f2c <_obstack_memory_used@@Base+0x7d80>
  417f24:	ldr	w0, [sp, #268]
  417f28:	cbnz	w0, 417f58 <_obstack_memory_used@@Base+0x7dac>
  417f2c:	ldr	x0, [sp, #176]
  417f30:	add	x0, x0, #0x1
  417f34:	str	x0, [sp, #176]
  417f38:	b	417dcc <_obstack_memory_used@@Base+0x7c20>
  417f3c:	ldr	x1, [x4, #80]
  417f40:	add	x0, sp, #0x118
  417f44:	stp	x4, x3, [sp, #240]
  417f48:	bl	4134c4 <_obstack_memory_used@@Base+0x3318>
  417f4c:	str	w0, [sp, #268]
  417f50:	ldp	x4, x3, [sp, #240]
  417f54:	cbz	w0, 417ed4 <_obstack_memory_used@@Base+0x7d28>
  417f58:	str	w0, [sp, #264]
  417f5c:	cbz	w0, 4180ec <_obstack_memory_used@@Base+0x7f40>
  417f60:	mov	x27, #0x0                   	// #0
  417f64:	b	418110 <_obstack_memory_used@@Base+0x7f64>
  417f68:	ldr	x27, [x21, #96]
  417f6c:	cbz	x27, 417fa4 <_obstack_memory_used@@Base+0x7df8>
  417f70:	ldr	w2, [sp, #496]
  417f74:	add	x0, sp, #0x150
  417f78:	ldr	x1, [sp, #408]
  417f7c:	sub	x1, x1, #0x1
  417f80:	bl	414ec8 <_obstack_memory_used@@Base+0x4d1c>
  417f84:	and	x1, x28, #0xff
  417f88:	tbz	w0, #0, 417f98 <_obstack_memory_used@@Base+0x7dec>
  417f8c:	add	x1, x1, #0x100
  417f90:	ldr	x27, [x27, x1, lsl #3]
  417f94:	b	418110 <_obstack_memory_used@@Base+0x7f64>
  417f98:	ubfiz	x28, x28, #3, #8
  417f9c:	ldr	x27, [x27, x28]
  417fa0:	b	418110 <_obstack_memory_used@@Base+0x7f64>
  417fa4:	ldr	x0, [sp, #488]
  417fa8:	mov	x1, x21
  417fac:	bl	4146b8 <_obstack_memory_used@@Base+0x450c>
  417fb0:	tst	w0, #0xff
  417fb4:	b.ne	418100 <_obstack_memory_used@@Base+0x7f54>  // b.any
  417fb8:	mov	w0, #0xc                   	// #12
  417fbc:	str	w0, [sp, #264]
  417fc0:	b	418110 <_obstack_memory_used@@Base+0x7f64>
  417fc4:	ldr	x2, [x3, x0, lsl #3]
  417fc8:	mov	w1, #0x1                   	// #1
  417fcc:	cbz	x2, 418164 <_obstack_memory_used@@Base+0x7fb8>
  417fd0:	add	x1, sp, #0x150
  417fd4:	mov	x2, #0x0                   	// #0
  417fd8:	str	x0, [sp, #408]
  417fdc:	add	x0, sp, #0x108
  417fe0:	bl	416d90 <_obstack_memory_used@@Base+0x6be4>
  417fe4:	mov	x27, x0
  417fe8:	ldr	w0, [sp, #264]
  417fec:	cbnz	w0, 41805c <_obstack_memory_used@@Base+0x7eb0>
  417ff0:	cbz	x27, 418154 <_obstack_memory_used@@Base+0x7fa8>
  417ff4:	ldr	w0, [sp, #144]
  417ff8:	cbz	w0, 418018 <_obstack_memory_used@@Base+0x7e6c>
  417ffc:	cmp	x21, x27
  418000:	csel	w0, w0, wzr, eq  // eq = none
  418004:	str	w0, [sp, #144]
  418008:	ldr	x0, [sp, #168]
  41800c:	ldr	x1, [sp, #200]
  418010:	csel	x0, x0, x1, eq  // eq = none
  418014:	str	x0, [sp, #200]
  418018:	ldrb	w0, [x27, #104]
  41801c:	tbz	w0, #4, 418054 <_obstack_memory_used@@Base+0x7ea8>
  418020:	ldr	x21, [sp, #408]
  418024:	tbz	w0, #7, 41803c <_obstack_memory_used@@Base+0x7e90>
  418028:	mov	x2, x21
  41802c:	mov	x1, x27
  418030:	add	x0, sp, #0x150
  418034:	bl	41559c <_obstack_memory_used@@Base+0x53f0>
  418038:	cbz	x0, 418054 <_obstack_memory_used@@Base+0x7ea8>
  41803c:	ldr	w0, [sp, #164]
  418040:	mov	x20, x21
  418044:	cbz	w0, 417cf0 <_obstack_memory_used@@Base+0x7b44>
  418048:	mov	x0, #0x1                   	// #1
  41804c:	str	x0, [sp, #136]
  418050:	str	xzr, [sp, #152]
  418054:	mov	x21, x27
  418058:	b	41807c <_obstack_memory_used@@Base+0x7ed0>
  41805c:	cbnz	x27, 417ff4 <_obstack_memory_used@@Base+0x7e48>
  418060:	b	41817c <_obstack_memory_used@@Base+0x7fd0>
  418064:	mov	x0, #0xffffffffffffffff    	// #-1
  418068:	str	xzr, [sp, #136]
  41806c:	str	x20, [sp, #200]
  418070:	mov	x20, x0
  418074:	ldr	x0, [sp, #224]
  418078:	str	x0, [sp, #152]
  41807c:	ldr	x0, [sp, #408]
  418080:	ldr	x1, [sp, #440]
  418084:	cmp	x0, x1
  418088:	b.ge	41817c <_obstack_memory_used@@Base+0x7fd0>  // b.tcont
  41808c:	add	x0, x0, #0x1
  418090:	str	x0, [sp, #168]
  418094:	ldr	x0, [sp, #400]
  418098:	ldr	x1, [sp, #168]
  41809c:	cmp	x1, x0
  4180a0:	b.lt	4180b0 <_obstack_memory_used@@Base+0x7f04>  // b.tstop
  4180a4:	ldr	x1, [sp, #424]
  4180a8:	cmp	x0, x1
  4180ac:	b.lt	4180cc <_obstack_memory_used@@Base+0x7f20>  // b.tstop
  4180b0:	ldr	x1, [sp, #168]
  4180b4:	ldr	x0, [sp, #384]
  4180b8:	cmp	x1, x0
  4180bc:	b.lt	4180e4 <_obstack_memory_used@@Base+0x7f38>  // b.tstop
  4180c0:	ldr	x1, [sp, #424]
  4180c4:	cmp	x0, x1
  4180c8:	b.ge	4180e4 <_obstack_memory_used@@Base+0x7f38>  // b.tcont
  4180cc:	ldr	w0, [sp, #168]
  4180d0:	add	w1, w0, #0x1
  4180d4:	add	x0, sp, #0x150
  4180d8:	bl	4111c4 <_obstack_memory_used@@Base+0x1018>
  4180dc:	str	w0, [sp, #264]
  4180e0:	cbnz	w0, 417938 <_obstack_memory_used@@Base+0x778c>
  4180e4:	ldrb	w0, [x21, #104]
  4180e8:	tbnz	w0, #5, 417dc4 <_obstack_memory_used@@Base+0x7c18>
  4180ec:	ldr	x0, [sp, #408]
  4180f0:	add	x1, x0, #0x1
  4180f4:	str	x1, [sp, #408]
  4180f8:	ldr	x1, [sp, #344]
  4180fc:	ldrb	w28, [x1, x0]
  418100:	ldr	x0, [x21, #88]
  418104:	cbz	x0, 417f68 <_obstack_memory_used@@Base+0x7dbc>
  418108:	ubfiz	x28, x28, #3, #8
  41810c:	ldr	x27, [x0, x28]
  418110:	ldr	x0, [sp, #520]
  418114:	cbz	x0, 41812c <_obstack_memory_used@@Base+0x7f80>
  418118:	mov	x2, x27
  41811c:	add	x1, sp, #0x150
  418120:	add	x0, sp, #0x108
  418124:	bl	416d90 <_obstack_memory_used@@Base+0x6be4>
  418128:	mov	x27, x0
  41812c:	cbnz	x27, 417ff4 <_obstack_memory_used@@Base+0x7e48>
  418130:	ldr	w1, [sp, #264]
  418134:	ldr	x0, [sp, #520]
  418138:	cbnz	w1, 417938 <_obstack_memory_used@@Base+0x778c>
  41813c:	cbz	x0, 41817c <_obstack_memory_used@@Base+0x7fd0>
  418140:	ldr	w0, [sp, #164]
  418144:	ldr	w1, [sp, #136]
  418148:	eor	w0, w0, #0x1
  41814c:	tst	w0, w1
  418150:	b.ne	41817c <_obstack_memory_used@@Base+0x7fd0>  // b.any
  418154:	ldr	x0, [sp, #408]
  418158:	mov	w1, #0x0                   	// #0
  41815c:	ldr	x3, [sp, #520]
  418160:	ldr	x4, [sp, #528]
  418164:	mov	x2, x0
  418168:	add	x0, x0, #0x1
  41816c:	cmp	x4, x0
  418170:	b.ge	417fc4 <_obstack_memory_used@@Base+0x7e18>  // b.tcont
  418174:	cbz	w1, 41817c <_obstack_memory_used@@Base+0x7fd0>
  418178:	str	x2, [sp, #408]
  41817c:	ldr	x0, [sp, #152]
  418180:	cbz	x0, 417cf0 <_obstack_memory_used@@Base+0x7b44>
  418184:	ldr	x0, [x0]
  418188:	ldr	x1, [sp, #200]
  41818c:	add	x0, x0, x1
  418190:	ldr	x1, [sp, #152]
  418194:	str	x0, [x1]
  418198:	b	417cf0 <_obstack_memory_used@@Base+0x7b44>
  41819c:	mov	x0, #0xffffffffffffffff    	// #-1
  4181a0:	b	41806c <_obstack_memory_used@@Base+0x7ec0>
  4181a4:	cmn	x20, #0x2
  4181a8:	b.eq	417938 <_obstack_memory_used@@Base+0x778c>  // b.none
  4181ac:	ldrb	w0, [x24, #56]
  4181b0:	str	x20, [sp, #504]
  4181b4:	and	w21, w0, #0x10
  4181b8:	tbnz	w0, #4, 4181c4 <_obstack_memory_used@@Base+0x8018>
  4181bc:	cmp	x23, #0x1
  4181c0:	b.hi	4181cc <_obstack_memory_used@@Base+0x8020>  // b.pmore
  4181c4:	ldr	x0, [x22, #152]
  4181c8:	cbz	x0, 418538 <_obstack_memory_used@@Base+0x838c>
  4181cc:	ldr	x0, [sp, #520]
  4181d0:	mov	x2, x20
  4181d4:	ldr	x1, [x0, x20, lsl #3]
  4181d8:	add	x0, sp, #0x150
  4181dc:	bl	41559c <_obstack_memory_used@@Base+0x53f0>
  4181e0:	str	x0, [sp, #512]
  4181e4:	cbz	w21, 41820c <_obstack_memory_used@@Base+0x8060>
  4181e8:	ldr	x0, [x22, #152]
  4181ec:	cbnz	x0, 41821c <_obstack_memory_used@@Base+0x8070>
  4181f0:	cbz	x23, 417b10 <_obstack_memory_used@@Base+0x7964>
  4181f4:	ldr	x0, [sp, #112]
  4181f8:	mov	x2, #0xffffffffffffffff    	// #-1
  4181fc:	add	x20, x0, #0x10
  418200:	mov	x0, #0x1                   	// #1
  418204:	mov	x1, x20
  418208:	b	4183c8 <_obstack_memory_used@@Base+0x821c>
  41820c:	cmp	x23, #0x1
  418210:	b.ls	4181e8 <_obstack_memory_used@@Base+0x803c>  // b.plast
  418214:	ldrb	w0, [x22, #176]
  418218:	tbz	w0, #0, 4181e8 <_obstack_memory_used@@Base+0x803c>
  41821c:	ldr	x0, [sp, #488]
  418220:	str	x0, [sp, #144]
  418224:	ldr	x0, [sp, #512]
  418228:	str	x0, [sp, #136]
  41822c:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  418230:	cmp	x20, x0
  418234:	b.hi	417938 <_obstack_memory_used@@Base+0x778c>  // b.pmore
  418238:	add	x1, x20, #0x1
  41823c:	lsl	x27, x1, #3
  418240:	mov	x0, x27
  418244:	bl	402930 <malloc@plt>
  418248:	mov	x21, x0
  41824c:	cbz	x0, 4183a8 <_obstack_memory_used@@Base+0x81fc>
  418250:	ldr	x0, [sp, #144]
  418254:	ldr	x0, [x0, #152]
  418258:	cbz	x0, 418328 <_obstack_memory_used@@Base+0x817c>
  41825c:	mov	x0, x27
  418260:	bl	402930 <malloc@plt>
  418264:	mov	x27, x0
  418268:	cbz	x0, 4183ac <_obstack_memory_used@@Base+0x8200>
  41826c:	add	x3, x20, #0x1
  418270:	mov	w1, #0x0                   	// #0
  418274:	mov	x0, x27
  418278:	str	x3, [sp, #152]
  41827c:	lsl	x2, x3, #3
  418280:	bl	402a10 <memset@plt>
  418284:	stp	x21, x27, [sp, #280]
  418288:	add	x1, sp, #0x118
  41828c:	ldr	x0, [sp, #136]
  418290:	stp	x0, x20, [sp, #296]
  418294:	add	x0, sp, #0x200
  418298:	stp	xzr, xzr, [x0, #-200]
  41829c:	add	x0, sp, #0x150
  4182a0:	str	xzr, [sp, #328]
  4182a4:	bl	41745c <_obstack_memory_used@@Base+0x72b0>
  4182a8:	mov	w28, w0
  4182ac:	ldr	x0, [sp, #328]
  4182b0:	bl	402c20 <free@plt>
  4182b4:	cbnz	w28, 418384 <_obstack_memory_used@@Base+0x81d8>
  4182b8:	ldr	x0, [x21]
  4182bc:	ldr	x3, [sp, #152]
  4182c0:	cbnz	x0, 418300 <_obstack_memory_used@@Base+0x8154>
  4182c4:	ldr	x0, [x27]
  4182c8:	cbnz	x0, 418300 <_obstack_memory_used@@Base+0x8154>
  4182cc:	ldr	x2, [sp, #520]
  4182d0:	sub	x20, x20, #0x1
  4182d4:	cmn	x20, #0x1
  4182d8:	b.eq	4183b4 <_obstack_memory_used@@Base+0x8208>  // b.none
  4182dc:	ldr	x1, [x2, x20, lsl #3]
  4182e0:	cbz	x1, 4182d0 <_obstack_memory_used@@Base+0x8124>
  4182e4:	ldrb	w0, [x1, #104]
  4182e8:	tbz	w0, #4, 4182d0 <_obstack_memory_used@@Base+0x8124>
  4182ec:	mov	x2, x20
  4182f0:	add	x0, sp, #0x150
  4182f4:	bl	41559c <_obstack_memory_used@@Base+0x53f0>
  4182f8:	str	x0, [sp, #136]
  4182fc:	b	41826c <_obstack_memory_used@@Base+0x80c0>
  418300:	ldr	x0, [sp, #144]
  418304:	mov	x2, x27
  418308:	mov	x1, x21
  41830c:	bl	415f5c <_obstack_memory_used@@Base+0x5db0>
  418310:	mov	w28, w0
  418314:	mov	x0, x27
  418318:	bl	402c20 <free@plt>
  41831c:	cbz	w28, 418364 <_obstack_memory_used@@Base+0x81b8>
  418320:	mov	x27, #0x0                   	// #0
  418324:	b	418384 <_obstack_memory_used@@Base+0x81d8>
  418328:	ldr	x0, [sp, #136]
  41832c:	stp	x0, x20, [sp, #296]
  418330:	add	x0, sp, #0x200
  418334:	stp	x21, xzr, [sp, #280]
  418338:	add	x1, sp, #0x118
  41833c:	stp	xzr, xzr, [x0, #-200]
  418340:	add	x0, sp, #0x150
  418344:	str	xzr, [sp, #328]
  418348:	bl	41745c <_obstack_memory_used@@Base+0x72b0>
  41834c:	mov	w28, w0
  418350:	ldr	x0, [sp, #328]
  418354:	bl	402c20 <free@plt>
  418358:	cbnz	w28, 418320 <_obstack_memory_used@@Base+0x8174>
  41835c:	ldr	x27, [x21]
  418360:	cbz	x27, 4183b4 <_obstack_memory_used@@Base+0x8208>
  418364:	ldr	x0, [sp, #520]
  418368:	mov	w28, #0x0                   	// #0
  41836c:	mov	x27, #0x0                   	// #0
  418370:	bl	402c20 <free@plt>
  418374:	str	x21, [sp, #520]
  418378:	ldr	x0, [sp, #136]
  41837c:	mov	x21, #0x0                   	// #0
  418380:	stp	x20, x0, [sp, #504]
  418384:	mov	x0, x21
  418388:	bl	402c20 <free@plt>
  41838c:	mov	x0, x27
  418390:	bl	402c20 <free@plt>
  418394:	cbz	w28, 4181f0 <_obstack_memory_used@@Base+0x8044>
  418398:	cmp	w28, #0x1
  41839c:	b.eq	417cf8 <_obstack_memory_used@@Base+0x7b4c>  // b.none
  4183a0:	mov	w19, w28
  4183a4:	b	417b10 <_obstack_memory_used@@Base+0x7964>
  4183a8:	mov	x27, #0x0                   	// #0
  4183ac:	mov	w28, #0xc                   	// #12
  4183b0:	b	418384 <_obstack_memory_used@@Base+0x81d8>
  4183b4:	mov	w28, #0x1                   	// #1
  4183b8:	b	418384 <_obstack_memory_used@@Base+0x81d8>
  4183bc:	add	x0, x0, #0x1
  4183c0:	str	x2, [x1, #8]
  4183c4:	str	x2, [x1], #16
  4183c8:	cmp	x0, x23
  4183cc:	b.ne	4183bc <_obstack_memory_used@@Base+0x8210>  // b.any
  4183d0:	ldr	x0, [sp, #112]
  4183d4:	ldr	x1, [sp, #112]
  4183d8:	str	xzr, [x0]
  4183dc:	ldr	x0, [sp, #504]
  4183e0:	str	x0, [x1, #8]
  4183e4:	ldrb	w0, [x24, #56]
  4183e8:	tbnz	w0, #4, 418440 <_obstack_memory_used@@Base+0x8294>
  4183ec:	cmp	x23, #0x1
  4183f0:	b.eq	418440 <_obstack_memory_used@@Base+0x8294>  // b.none
  4183f4:	ldrb	w0, [x22, #176]
  4183f8:	tbz	w0, #0, 418428 <_obstack_memory_used@@Base+0x827c>
  4183fc:	ldr	x0, [x22, #152]
  418400:	cmp	x0, #0x0
  418404:	cset	w4, gt
  418408:	ldr	x3, [sp, #112]
  41840c:	mov	x2, x23
  418410:	add	x1, sp, #0x150
  418414:	mov	x0, x24
  418418:	bl	415850 <_obstack_memory_used@@Base+0x56a4>
  41841c:	cbz	w0, 418440 <_obstack_memory_used@@Base+0x8294>
  418420:	mov	w19, w0
  418424:	b	417b10 <_obstack_memory_used@@Base+0x7964>
  418428:	mov	w4, #0x0                   	// #0
  41842c:	b	418408 <_obstack_memory_used@@Base+0x825c>
  418430:	mov	x2, x4
  418434:	b	418474 <_obstack_memory_used@@Base+0x82c8>
  418438:	mov	x2, x4
  41843c:	b	418488 <_obstack_memory_used@@Base+0x82dc>
  418440:	ldp	x6, x4, [sp, #384]
  418444:	mov	x1, #0x0                   	// #0
  418448:	ldrb	w7, [sp, #476]
  41844c:	ldr	x0, [sp, #112]
  418450:	ldr	x3, [sp, #272]
  418454:	ldr	x5, [sp, #360]
  418458:	ldr	x2, [x0]
  41845c:	cmn	x2, #0x1
  418460:	b.eq	4184a4 <_obstack_memory_used@@Base+0x82f8>  // b.none
  418464:	cbz	w7, 41848c <_obstack_memory_used@@Base+0x82e0>
  418468:	cmp	x2, x6
  41846c:	b.eq	418430 <_obstack_memory_used@@Base+0x8284>  // b.none
  418470:	ldr	x2, [x5, x2, lsl #3]
  418474:	str	x2, [x0]
  418478:	ldr	x2, [x0, #8]
  41847c:	cmp	x6, x2
  418480:	b.eq	418438 <_obstack_memory_used@@Base+0x828c>  // b.none
  418484:	ldr	x2, [x5, x2, lsl #3]
  418488:	str	x2, [x0, #8]
  41848c:	ldr	x2, [x0]
  418490:	add	x2, x2, x3
  418494:	str	x2, [x0]
  418498:	ldr	x2, [x0, #8]
  41849c:	add	x2, x2, x3
  4184a0:	str	x2, [x0, #8]
  4184a4:	add	x1, x1, #0x1
  4184a8:	add	x0, x0, #0x10
  4184ac:	cmp	x23, x1
  4184b0:	b.ne	418458 <_obstack_memory_used@@Base+0x82ac>  // b.any
  4184b4:	ldr	x0, [sp, #112]
  4184b8:	mov	x1, #0x0                   	// #0
  4184bc:	mov	x2, #0xffffffffffffffff    	// #-1
  4184c0:	add	x0, x0, x23, lsl #4
  4184c4:	ldr	x3, [sp, #208]
  4184c8:	cmp	x1, x3
  4184cc:	b.lt	418520 <_obstack_memory_used@@Base+0x8374>  // b.tstop
  4184d0:	ldr	x2, [x22, #224]
  4184d4:	cbz	x2, 417b10 <_obstack_memory_used@@Base+0x7964>
  4184d8:	sub	x23, x23, #0x1
  4184dc:	mov	x0, #0x0                   	// #0
  4184e0:	cmp	x0, x23
  4184e4:	b.eq	417b10 <_obstack_memory_used@@Base+0x7964>  // b.none
  4184e8:	ldr	x1, [x2, x0, lsl #3]
  4184ec:	cmp	x1, x0
  4184f0:	b.eq	418514 <_obstack_memory_used@@Base+0x8368>  // b.none
  4184f4:	ldr	x3, [sp, #112]
  4184f8:	add	x1, x3, x1, lsl #4
  4184fc:	ldr	x1, [x1, #16]
  418500:	str	x1, [x20]
  418504:	ldr	x1, [x2, x0, lsl #3]
  418508:	add	x1, x3, x1, lsl #4
  41850c:	ldr	x1, [x1, #24]
  418510:	str	x1, [x20, #8]
  418514:	add	x0, x0, #0x1
  418518:	add	x20, x20, #0x10
  41851c:	b	4184e0 <_obstack_memory_used@@Base+0x8334>
  418520:	add	x1, x1, #0x1
  418524:	stp	x2, x2, [x0]
  418528:	add	x0, x0, #0x10
  41852c:	b	4184c4 <_obstack_memory_used@@Base+0x8318>
  418530:	mov	w19, #0x1                   	// #1
  418534:	b	417b40 <_obstack_memory_used@@Base+0x7994>
  418538:	cbnz	w21, 4181f0 <_obstack_memory_used@@Base+0x8044>
  41853c:	cmp	x23, #0x1
  418540:	b.hi	418214 <_obstack_memory_used@@Base+0x8068>  // b.pmore
  418544:	b	4181f0 <_obstack_memory_used@@Base+0x8044>
  418548:	stp	x29, x30, [sp, #-288]!
  41854c:	mov	x29, sp
  418550:	stp	x19, x20, [sp, #16]
  418554:	mov	x19, x2
  418558:	stp	x21, x22, [sp, #32]
  41855c:	mov	x21, x0
  418560:	mov	x22, x5
  418564:	stp	x23, x24, [sp, #48]
  418568:	mov	x23, x3
  41856c:	mov	x24, x1
  418570:	stp	x25, x26, [sp, #64]
  418574:	adrp	x25, 41d000 <_obstack_memory_used@@Base+0xce54>
  418578:	mov	x26, x4
  41857c:	add	x25, x25, #0x30
  418580:	stp	x27, x28, [sp, #80]
  418584:	and	x27, x3, #0x1000000
  418588:	and	x28, x3, #0x20
  41858c:	and	x3, x3, #0x10
  418590:	ldrb	w0, [x19, #8]
  418594:	ldr	x20, [x24]
  418598:	sub	w1, w0, #0x1
  41859c:	cmp	w1, #0x23
  4185a0:	b.hi	419120 <_obstack_memory_used@@Base+0x8f74>  // b.pmore
  4185a4:	ldrh	w1, [x25, w1, uxtw #1]
  4185a8:	adr	x2, 4185b4 <_obstack_memory_used@@Base+0x8408>
  4185ac:	add	x1, x2, w1, sxth #2
  4185b0:	br	x1
  4185b4:	mov	x3, x19
  4185b8:	mov	x0, x20
  4185bc:	mov	x2, #0x0                   	// #0
  4185c0:	mov	x1, #0x0                   	// #0
  4185c4:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  4185c8:	mov	x26, x0
  4185cc:	cbnz	x0, 4185dc <_obstack_memory_used@@Base+0x8430>
  4185d0:	mov	w0, #0xc                   	// #12
  4185d4:	str	w0, [x22]
  4185d8:	b	4187d4 <_obstack_memory_used@@Base+0x8628>
  4185dc:	ldr	w0, [x20, #180]
  4185e0:	cmp	w0, #0x1
  4185e4:	b.gt	4186d4 <_obstack_memory_used@@Base+0x8528>
  4185e8:	mov	x0, x19
  4185ec:	mov	x2, x23
  4185f0:	mov	x1, x21
  4185f4:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  4185f8:	adrp	x0, 410000 <_obstack_newchunk@@Base+0x8>
  4185fc:	add	x0, x0, #0x4c4
  418600:	adrp	x27, 411000 <_obstack_memory_used@@Base+0xe54>
  418604:	str	x0, [sp, #96]
  418608:	add	x0, x27, #0x3a0
  41860c:	str	x0, [sp, #104]
  418610:	ldrb	w1, [x19, #8]
  418614:	cmp	w1, #0x12
  418618:	cset	w0, eq  // eq = none
  41861c:	cmp	w0, #0x0
  418620:	and	x5, x0, #0xff
  418624:	ccmp	w1, #0xb, #0x4, eq  // eq = none
  418628:	b.eq	418638 <_obstack_memory_used@@Base+0x848c>  // b.none
  41862c:	and	w0, w1, #0xfffffffb
  418630:	cmp	w0, #0x13
  418634:	b.ne	418fc4 <_obstack_memory_used@@Base+0x8e18>  // b.any
  418638:	cmp	w1, #0x17
  41863c:	ldp	x24, x25, [x19]
  418640:	ldr	x28, [x21, #72]
  418644:	b.ne	419228 <_obstack_memory_used@@Base+0x907c>  // b.any
  418648:	mov	x2, x23
  41864c:	mov	x1, x19
  418650:	mov	x0, x21
  418654:	bl	4145f0 <_obstack_memory_used@@Base+0x4444>
  418658:	mov	x5, x0
  41865c:	cmn	x0, #0x1
  418660:	b.ne	419128 <_obstack_memory_used@@Base+0x8f7c>  // b.any
  418664:	ldrb	w0, [x19, #8]
  418668:	cmp	w0, #0x1
  41866c:	b.ne	41867c <_obstack_memory_used@@Base+0x84d0>  // b.any
  418670:	ldrb	w0, [x19]
  418674:	cmp	w0, #0x2c
  418678:	b.eq	419138 <_obstack_memory_used@@Base+0x8f8c>  // b.none
  41867c:	mov	w0, #0xa                   	// #10
  418680:	str	w0, [x22]
  418684:	b	419268 <_obstack_memory_used@@Base+0x90bc>
  418688:	mov	x2, x23
  41868c:	mov	x1, x21
  418690:	mov	x0, x19
  418694:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  418698:	mov	x3, x19
  41869c:	mov	x2, #0x0                   	// #0
  4186a0:	mov	x1, #0x0                   	// #0
  4186a4:	mov	x0, x20
  4186a8:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  4186ac:	mov	x24, x0
  4186b0:	mov	x2, x0
  4186b4:	mov	x1, x26
  4186b8:	mov	x0, x20
  4186bc:	mov	w3, #0x10                  	// #16
  4186c0:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  4186c4:	mov	x26, x0
  4186c8:	cmp	x24, #0x0
  4186cc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4186d0:	b.eq	4185d0 <_obstack_memory_used@@Base+0x8424>  // b.none
  4186d4:	ldr	x0, [x21, #72]
  4186d8:	ldr	x1, [x21, #104]
  4186dc:	cmp	x1, x0
  4186e0:	b.le	4185e8 <_obstack_memory_used@@Base+0x843c>
  4186e4:	ldr	x1, [x21, #48]
  4186e8:	cmp	x0, x1
  4186ec:	b.eq	4185e8 <_obstack_memory_used@@Base+0x843c>  // b.none
  4186f0:	ldr	x1, [x21, #16]
  4186f4:	ldr	w0, [x1, x0, lsl #2]
  4186f8:	cmn	w0, #0x1
  4186fc:	b.eq	418688 <_obstack_memory_used@@Base+0x84dc>  // b.none
  418700:	b	4185e8 <_obstack_memory_used@@Base+0x843c>
  418704:	ldr	x25, [x24, #48]
  418708:	orr	x2, x23, #0x800000
  41870c:	mov	x1, x21
  418710:	add	x0, x25, #0x1
  418714:	str	x0, [x24, #48]
  418718:	mov	x0, x19
  41871c:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  418720:	ldrb	w0, [x19, #8]
  418724:	cmp	w0, #0x9
  418728:	b.eq	418784 <_obstack_memory_used@@Base+0x85d8>  // b.none
  41872c:	mov	x2, x19
  418730:	mov	x1, x24
  418734:	mov	x5, x22
  418738:	add	x4, x26, #0x1
  41873c:	mov	x3, x23
  418740:	mov	x0, x21
  418744:	bl	4195b8 <_obstack_memory_used@@Base+0x940c>
  418748:	mov	x1, x0
  41874c:	ldr	w2, [x22]
  418750:	cbnz	w2, 41877c <_obstack_memory_used@@Base+0x85d0>
  418754:	ldrb	w2, [x19, #8]
  418758:	cmp	w2, #0x9
  41875c:	b.eq	418788 <_obstack_memory_used@@Base+0x85dc>  // b.none
  418760:	cbz	x0, 418774 <_obstack_memory_used@@Base+0x85c8>
  418764:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe54>
  418768:	mov	x2, #0x0                   	// #0
  41876c:	add	x1, x1, #0x3a0
  418770:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  418774:	mov	w0, #0x8                   	// #8
  418778:	str	w0, [x22]
  41877c:	mov	x26, #0x0                   	// #0
  418780:	b	4187c8 <_obstack_memory_used@@Base+0x861c>
  418784:	mov	x1, #0x0                   	// #0
  418788:	cmp	x25, #0x8
  41878c:	b.hi	4187a8 <_obstack_memory_used@@Base+0x85fc>  // b.pmore
  418790:	mov	w0, #0x1                   	// #1
  418794:	ldr	x2, [x20, #168]
  418798:	lsl	w0, w0, w25
  41879c:	sxtw	x0, w0
  4187a0:	orr	x0, x2, x0
  4187a4:	str	x0, [x20, #168]
  4187a8:	mov	x0, x20
  4187ac:	mov	w3, #0x11                  	// #17
  4187b0:	mov	x2, #0x0                   	// #0
  4187b4:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  4187b8:	mov	x26, x0
  4187bc:	cbnz	x0, 4187dc <_obstack_memory_used@@Base+0x8630>
  4187c0:	mov	w0, #0xc                   	// #12
  4187c4:	str	w0, [x22]
  4187c8:	ldr	w0, [x22]
  4187cc:	cbz	w0, 4185e8 <_obstack_memory_used@@Base+0x843c>
  4187d0:	cbnz	x26, 4185e8 <_obstack_memory_used@@Base+0x843c>
  4187d4:	mov	x26, #0x0                   	// #0
  4187d8:	b	418fc4 <_obstack_memory_used@@Base+0x8e18>
  4187dc:	str	x25, [x0, #40]
  4187e0:	b	4187c8 <_obstack_memory_used@@Base+0x861c>
  4187e4:	mov	x1, #0x1                   	// #1
  4187e8:	mov	x0, #0x20                  	// #32
  4187ec:	str	xzr, [sp, #168]
  4187f0:	bl	402a60 <calloc@plt>
  4187f4:	mov	x1, #0x1                   	// #1
  4187f8:	mov	x25, x0
  4187fc:	mov	x0, #0x50                  	// #80
  418800:	bl	402a60 <calloc@plt>
  418804:	cmp	x25, #0x0
  418808:	mov	x24, x0
  41880c:	cset	w0, eq  // eq = none
  418810:	cmp	x24, #0x0
  418814:	csinc	w0, w0, wzr, ne  // ne = any
  418818:	cbz	w0, 418834 <_obstack_memory_used@@Base+0x8688>
  41881c:	mov	x0, x25
  418820:	bl	402c20 <free@plt>
  418824:	mov	x0, x24
  418828:	bl	402c20 <free@plt>
  41882c:	mov	w0, #0xc                   	// #12
  418830:	b	418778 <_obstack_memory_used@@Base+0x85cc>
  418834:	mov	x2, x23
  418838:	mov	x1, x21
  41883c:	mov	x0, x19
  418840:	bl	410390 <_obstack_memory_used@@Base+0x1e4>
  418844:	str	w0, [sp, #96]
  418848:	ldrb	w0, [x19, #8]
  41884c:	cmp	w0, #0x2
  418850:	b.ne	418860 <_obstack_memory_used@@Base+0x86b4>  // b.any
  418854:	mov	w0, #0x2                   	// #2
  418858:	str	w0, [x22]
  41885c:	b	4189c0 <_obstack_memory_used@@Base+0x8814>
  418860:	cmp	w0, #0x19
  418864:	b.ne	418948 <_obstack_memory_used@@Base+0x879c>  // b.any
  418868:	ldrb	w0, [x24, #32]
  41886c:	orr	w0, w0, #0x1
  418870:	strb	w0, [x24, #32]
  418874:	tbz	w23, #8, 418884 <_obstack_memory_used@@Base+0x86d8>
  418878:	mov	x0, x25
  41887c:	mov	x1, #0xa                   	// #10
  418880:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  418884:	ldr	x0, [x21, #72]
  418888:	mov	x2, x23
  41888c:	ldr	w1, [sp, #96]
  418890:	add	x0, x0, w1, sxtw
  418894:	str	x0, [x21, #72]
  418898:	mov	x1, x21
  41889c:	mov	x0, x19
  4188a0:	bl	410390 <_obstack_memory_used@@Base+0x1e4>
  4188a4:	str	w0, [sp, #96]
  4188a8:	ldrb	w0, [x19, #8]
  4188ac:	cmp	w0, #0x2
  4188b0:	b.eq	418854 <_obstack_memory_used@@Base+0x86a8>  // b.none
  4188b4:	mov	w0, #0x1                   	// #1
  4188b8:	str	w0, [sp, #152]
  4188bc:	ldrb	w0, [x19, #8]
  4188c0:	cmp	w0, #0x15
  4188c4:	b.ne	4188d0 <_obstack_memory_used@@Base+0x8724>  // b.any
  4188c8:	mov	w0, #0x1                   	// #1
  4188cc:	strb	w0, [x19, #8]
  4188d0:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xce54>
  4188d4:	mov	w5, #0x1                   	// #1
  4188d8:	add	x0, x0, #0x78
  4188dc:	stp	xzr, xzr, [sp, #104]
  4188e0:	str	x0, [sp, #128]
  4188e4:	ldr	w3, [sp, #96]
  4188e8:	mov	w13, #0x3                   	// #3
  4188ec:	add	x0, sp, #0xe0
  4188f0:	mov	x4, x23
  4188f4:	mov	x2, x19
  4188f8:	mov	x1, x21
  4188fc:	str	w13, [sp, #176]
  418900:	str	x0, [sp, #184]
  418904:	add	x0, sp, #0xb0
  418908:	bl	413e1c <_obstack_memory_used@@Base+0x3c70>
  41890c:	cbnz	w0, 418858 <_obstack_memory_used@@Base+0x86ac>
  418910:	mov	x2, x23
  418914:	mov	x1, x21
  418918:	mov	x0, x19
  41891c:	bl	410390 <_obstack_memory_used@@Base+0x1e4>
  418920:	str	w0, [sp, #96]
  418924:	ldr	w0, [sp, #176]
  418928:	cmp	w0, #0x4
  41892c:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  418930:	b.eq	4189f0 <_obstack_memory_used@@Base+0x8844>  // b.none
  418934:	ldrb	w0, [x19, #8]
  418938:	cmp	w0, #0x2
  41893c:	b.ne	418950 <_obstack_memory_used@@Base+0x87a4>  // b.any
  418940:	mov	w0, #0x7                   	// #7
  418944:	b	418858 <_obstack_memory_used@@Base+0x86ac>
  418948:	str	wzr, [sp, #152]
  41894c:	b	4188bc <_obstack_memory_used@@Base+0x8710>
  418950:	cmp	w0, #0x16
  418954:	b.ne	4189f0 <_obstack_memory_used@@Base+0x8844>  // b.any
  418958:	ldr	x0, [x21, #72]
  41895c:	mov	x2, x23
  418960:	ldr	w1, [sp, #96]
  418964:	add	x0, x0, w1, sxtw
  418968:	str	x0, [x21, #72]
  41896c:	mov	x1, x21
  418970:	add	x0, sp, #0xd0
  418974:	bl	410390 <_obstack_memory_used@@Base+0x1e4>
  418978:	mov	w3, w0
  41897c:	ldrb	w0, [sp, #216]
  418980:	cmp	w0, #0x2
  418984:	b.eq	418940 <_obstack_memory_used@@Base+0x8794>  // b.none
  418988:	cmp	w0, #0x15
  41898c:	b.eq	4189d4 <_obstack_memory_used@@Base+0x8828>  // b.none
  418990:	add	x0, sp, #0x100
  418994:	mov	x4, x23
  418998:	add	x2, sp, #0xd0
  41899c:	mov	x1, x21
  4189a0:	mov	w5, #0x1                   	// #1
  4189a4:	str	w13, [sp, #192]
  4189a8:	str	x0, [sp, #200]
  4189ac:	add	x0, sp, #0xc0
  4189b0:	bl	413e1c <_obstack_memory_used@@Base+0x3c70>
  4189b4:	mov	w27, w0
  4189b8:	cbz	w0, 418a10 <_obstack_memory_used@@Base+0x8864>
  4189bc:	str	w0, [x22]
  4189c0:	mov	x0, x25
  4189c4:	bl	402c20 <free@plt>
  4189c8:	mov	x0, x24
  4189cc:	bl	411330 <_obstack_memory_used@@Base+0x1184>
  4189d0:	b	41877c <_obstack_memory_used@@Base+0x85d0>
  4189d4:	ldr	w0, [sp, #96]
  4189d8:	ldr	x1, [x21, #72]
  4189dc:	neg	w0, w0
  4189e0:	add	x0, x1, w0, sxtw
  4189e4:	str	x0, [x21, #72]
  4189e8:	mov	w0, #0x1                   	// #1
  4189ec:	strb	w0, [x19, #8]
  4189f0:	ldr	w0, [sp, #176]
  4189f4:	cmp	w0, #0x4
  4189f8:	b.hi	418cf8 <_obstack_memory_used@@Base+0x8b4c>  // b.pmore
  4189fc:	ldr	x1, [sp, #128]
  418a00:	ldrh	w0, [x1, w0, uxtw #1]
  418a04:	adr	x1, 418a10 <_obstack_memory_used@@Base+0x8864>
  418a08:	add	x0, x1, w0, sxth #2
  418a0c:	br	x0
  418a10:	mov	x1, x21
  418a14:	mov	x2, x23
  418a18:	mov	x0, x19
  418a1c:	bl	410390 <_obstack_memory_used@@Base+0x1e4>
  418a20:	str	w0, [sp, #96]
  418a24:	ldr	w0, [x20, #180]
  418a28:	ldr	w1, [sp, #176]
  418a2c:	cmp	w0, #0x2
  418a30:	csel	x26, x24, xzr, ge  // ge = tcont
  418a34:	cmp	w1, #0x2
  418a38:	ccmp	w1, #0x4, #0x4, ne  // ne = any
  418a3c:	b.eq	418c64 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  418a40:	ldr	w4, [sp, #192]
  418a44:	cmp	w4, #0x2
  418a48:	b.eq	418c64 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  418a4c:	cmp	w4, #0x4
  418a50:	b.eq	418c64 <_obstack_memory_used@@Base+0x8ab8>  // b.none
  418a54:	cmp	w1, #0x3
  418a58:	cset	w0, eq  // eq = none
  418a5c:	str	w0, [sp, #120]
  418a60:	b.ne	418a8c <_obstack_memory_used@@Base+0x88e0>  // b.any
  418a64:	ldr	x0, [sp, #184]
  418a68:	str	w1, [sp, #136]
  418a6c:	str	w4, [sp, #144]
  418a70:	bl	402790 <strlen@plt>
  418a74:	cmp	x0, #0x1
  418a78:	ldr	w1, [sp, #136]
  418a7c:	ldr	w4, [sp, #144]
  418a80:	b.ls	419464 <_obstack_memory_used@@Base+0x92b8>  // b.plast
  418a84:	mov	w27, #0x3                   	// #3
  418a88:	b	418ba0 <_obstack_memory_used@@Base+0x89f4>
  418a8c:	cmp	w4, #0x3
  418a90:	b.ne	419470 <_obstack_memory_used@@Base+0x92c4>  // b.any
  418a94:	ldr	x0, [sp, #200]
  418a98:	str	w1, [sp, #136]
  418a9c:	str	w4, [sp, #144]
  418aa0:	bl	402790 <strlen@plt>
  418aa4:	cmp	x0, #0x1
  418aa8:	b.hi	418a84 <_obstack_memory_used@@Base+0x88d8>  // b.pmore
  418aac:	ldr	w1, [sp, #136]
  418ab0:	ldr	w4, [sp, #144]
  418ab4:	cbnz	w1, 418bc4 <_obstack_memory_used@@Base+0x8a18>
  418ab8:	ldrb	w28, [sp, #184]
  418abc:	cbnz	w4, 418be8 <_obstack_memory_used@@Base+0x8a3c>
  418ac0:	ldrb	w4, [sp, #200]
  418ac4:	ldr	w0, [sp, #120]
  418ac8:	cmp	w1, #0x0
  418acc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  418ad0:	b.eq	418bf8 <_obstack_memory_used@@Base+0x8a4c>  // b.none
  418ad4:	cbz	x26, 418aec <_obstack_memory_used@@Base+0x8940>
  418ad8:	mov	w0, w28
  418adc:	str	w4, [sp, #120]
  418ae0:	bl	402b30 <btowc@plt>
  418ae4:	mov	w28, w0
  418ae8:	ldr	w4, [sp, #120]
  418aec:	ldr	w0, [sp, #192]
  418af0:	cmp	w0, #0x0
  418af4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  418af8:	b.ne	418c00 <_obstack_memory_used@@Base+0x8a54>  // b.any
  418afc:	cbz	x26, 418b0c <_obstack_memory_used@@Base+0x8960>
  418b00:	mov	w0, w4
  418b04:	bl	402b30 <btowc@plt>
  418b08:	mov	w4, w0
  418b0c:	cmn	w28, #0x1
  418b10:	ccmn	w4, #0x1, #0x4, ne  // ne = any
  418b14:	b.eq	418a84 <_obstack_memory_used@@Base+0x88d8>  // b.none
  418b18:	tbz	w23, #16, 418b24 <_obstack_memory_used@@Base+0x8978>
  418b1c:	cmp	w28, w4
  418b20:	b.hi	418c64 <_obstack_memory_used@@Base+0x8ab8>  // b.pmore
  418b24:	cbz	x26, 418c30 <_obstack_memory_used@@Base+0x8a84>
  418b28:	ldr	x0, [x26, #64]
  418b2c:	ldr	x1, [sp, #112]
  418b30:	cmp	x0, x1
  418b34:	b.ne	418c10 <_obstack_memory_used@@Base+0x8a64>  // b.any
  418b38:	lsl	x6, x1, #1
  418b3c:	str	w4, [sp, #156]
  418b40:	ldr	x0, [x26, #8]
  418b44:	add	x6, x6, #0x1
  418b48:	lsl	x1, x6, #2
  418b4c:	stp	x1, x6, [sp, #136]
  418b50:	bl	402a80 <realloc@plt>
  418b54:	mov	x5, x0
  418b58:	str	x5, [sp, #120]
  418b5c:	ldr	x0, [x26, #16]
  418b60:	ldr	x1, [sp, #136]
  418b64:	bl	402a80 <realloc@plt>
  418b68:	mov	x1, x0
  418b6c:	ldr	x5, [sp, #120]
  418b70:	ldr	w4, [sp, #156]
  418b74:	cmp	x5, #0x0
  418b78:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  418b7c:	ldr	x6, [sp, #144]
  418b80:	b.ne	418c08 <_obstack_memory_used@@Base+0x8a5c>  // b.any
  418b84:	mov	x0, x5
  418b88:	str	x1, [sp, #120]
  418b8c:	bl	402c20 <free@plt>
  418b90:	mov	w27, #0xc                   	// #12
  418b94:	ldr	x1, [sp, #120]
  418b98:	mov	x0, x1
  418b9c:	bl	402c20 <free@plt>
  418ba0:	str	w27, [x22]
  418ba4:	cbnz	w27, 4189c0 <_obstack_memory_used@@Base+0x8814>
  418ba8:	ldrb	w0, [x19, #8]
  418bac:	cmp	w0, #0x2
  418bb0:	b.eq	418940 <_obstack_memory_used@@Base+0x8794>  // b.none
  418bb4:	cmp	w0, #0x15
  418bb8:	b.eq	418d20 <_obstack_memory_used@@Base+0x8b74>  // b.none
  418bbc:	mov	w5, #0x0                   	// #0
  418bc0:	b	4188e4 <_obstack_memory_used@@Base+0x8738>
  418bc4:	cmp	w1, #0x3
  418bc8:	b.ne	418bd8 <_obstack_memory_used@@Base+0x8a2c>  // b.any
  418bcc:	ldr	x0, [sp, #184]
  418bd0:	ldrb	w28, [x0]
  418bd4:	b	418abc <_obstack_memory_used@@Base+0x8910>
  418bd8:	mov	w28, #0x0                   	// #0
  418bdc:	ldr	x0, [sp, #200]
  418be0:	ldrb	w4, [x0]
  418be4:	b	418ac4 <_obstack_memory_used@@Base+0x8918>
  418be8:	cmp	w4, #0x3
  418bec:	b.eq	418bdc <_obstack_memory_used@@Base+0x8a30>  // b.none
  418bf0:	mov	w4, #0x0                   	// #0
  418bf4:	b	418ac4 <_obstack_memory_used@@Base+0x8918>
  418bf8:	ldr	w28, [sp, #184]
  418bfc:	b	418aec <_obstack_memory_used@@Base+0x8940>
  418c00:	ldr	w4, [sp, #200]
  418c04:	b	418b0c <_obstack_memory_used@@Base+0x8960>
  418c08:	stp	x5, x0, [x26, #8]
  418c0c:	str	x6, [sp, #112]
  418c10:	ldr	x0, [x26, #64]
  418c14:	ldr	x5, [x26, #8]
  418c18:	lsl	x1, x0, #2
  418c1c:	add	x0, x0, #0x1
  418c20:	str	w28, [x5, x1]
  418c24:	ldr	x5, [x26, #16]
  418c28:	str	x0, [x26, #64]
  418c2c:	str	w4, [x5, x1]
  418c30:	mov	x5, #0x0                   	// #0
  418c34:	cmp	w5, w28
  418c38:	ccmp	w5, w4, #0x2, cs  // cs = hs, nlast
  418c3c:	b.hi	418c54 <_obstack_memory_used@@Base+0x8aa8>  // b.pmore
  418c40:	mov	x1, x5
  418c44:	mov	x0, x25
  418c48:	str	w4, [sp, #120]
  418c4c:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  418c50:	ldr	w4, [sp, #120]
  418c54:	add	x5, x5, #0x1
  418c58:	cmp	x5, #0x100
  418c5c:	b.ne	418c34 <_obstack_memory_used@@Base+0x8a88>  // b.any
  418c60:	b	418ba0 <_obstack_memory_used@@Base+0x89f4>
  418c64:	mov	w27, #0xb                   	// #11
  418c68:	b	418ba0 <_obstack_memory_used@@Base+0x89f4>
  418c6c:	ldrb	w1, [sp, #184]
  418c70:	mov	x0, x25
  418c74:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  418c78:	b	418ba8 <_obstack_memory_used@@Base+0x89fc>
  418c7c:	ldr	x0, [x24, #40]
  418c80:	ldr	x1, [sp, #104]
  418c84:	cmp	x0, x1
  418c88:	b.ne	418cac <_obstack_memory_used@@Base+0x8b00>  // b.any
  418c8c:	lsl	x28, x1, #1
  418c90:	add	x0, x28, #0x1
  418c94:	str	x0, [sp, #104]
  418c98:	lsl	x1, x0, #2
  418c9c:	ldr	x0, [x24]
  418ca0:	bl	402a80 <realloc@plt>
  418ca4:	cbz	x0, 41945c <_obstack_memory_used@@Base+0x92b0>
  418ca8:	str	x0, [x24]
  418cac:	ldr	x0, [x24, #40]
  418cb0:	ldr	x1, [x24]
  418cb4:	add	x2, x0, #0x1
  418cb8:	str	x2, [x24, #40]
  418cbc:	ldr	w2, [sp, #184]
  418cc0:	str	w2, [x1, x0, lsl #2]
  418cc4:	b	418ba8 <_obstack_memory_used@@Base+0x89fc>
  418cc8:	ldr	x27, [sp, #184]
  418ccc:	mov	x0, x27
  418cd0:	bl	402790 <strlen@plt>
  418cd4:	cmp	x0, #0x1
  418cd8:	b.eq	418ce4 <_obstack_memory_used@@Base+0x8b38>  // b.none
  418cdc:	mov	w0, #0x3                   	// #3
  418ce0:	b	418858 <_obstack_memory_used@@Base+0x86ac>
  418ce4:	ldrb	w1, [x27]
  418ce8:	mov	x0, x25
  418cec:	bl	4101d0 <_obstack_memory_used@@Base+0x24>
  418cf0:	str	wzr, [x22]
  418cf4:	b	418ba8 <_obstack_memory_used@@Base+0x89fc>
  418cf8:	ldr	x0, [x21, #120]
  418cfc:	mov	x5, x23
  418d00:	ldr	x4, [sp, #184]
  418d04:	add	x3, sp, #0xa8
  418d08:	mov	x2, x24
  418d0c:	mov	x1, x25
  418d10:	bl	411b68 <_obstack_memory_used@@Base+0x19bc>
  418d14:	str	w0, [x22]
  418d18:	cbz	w0, 418ba8 <_obstack_memory_used@@Base+0x89fc>
  418d1c:	b	4189c0 <_obstack_memory_used@@Base+0x8814>
  418d20:	ldr	x0, [x21, #72]
  418d24:	ldr	w1, [sp, #96]
  418d28:	add	x0, x0, w1, sxtw
  418d2c:	str	x0, [x21, #72]
  418d30:	ldr	w0, [sp, #152]
  418d34:	cbz	w0, 418d40 <_obstack_memory_used@@Base+0x8b94>
  418d38:	mov	x0, x25
  418d3c:	bl	4101f0 <_obstack_memory_used@@Base+0x44>
  418d40:	ldr	w0, [x20, #180]
  418d44:	cmp	w0, #0x1
  418d48:	b.le	418d58 <_obstack_memory_used@@Base+0x8bac>
  418d4c:	ldr	x1, [x20, #120]
  418d50:	mov	x0, x25
  418d54:	bl	410234 <_obstack_memory_used@@Base+0x88>
  418d58:	ldr	x0, [x24, #40]
  418d5c:	cbnz	x0, 418d94 <_obstack_memory_used@@Base+0x8be8>
  418d60:	ldr	x0, [x24, #48]
  418d64:	cbnz	x0, 418d94 <_obstack_memory_used@@Base+0x8be8>
  418d68:	ldr	x0, [x24, #56]
  418d6c:	cbnz	x0, 418d94 <_obstack_memory_used@@Base+0x8be8>
  418d70:	ldr	x0, [x24, #64]
  418d74:	cbnz	x0, 418d94 <_obstack_memory_used@@Base+0x8be8>
  418d78:	ldr	w0, [x20, #180]
  418d7c:	cmp	w0, #0x1
  418d80:	b.le	418dec <_obstack_memory_used@@Base+0x8c40>
  418d84:	ldr	x0, [x24, #72]
  418d88:	cbnz	x0, 418d94 <_obstack_memory_used@@Base+0x8be8>
  418d8c:	ldrb	w0, [x24, #32]
  418d90:	tbz	w0, #0, 418dec <_obstack_memory_used@@Base+0x8c40>
  418d94:	ldrb	w0, [x20, #176]
  418d98:	add	x3, sp, #0x100
  418d9c:	mov	x2, #0x0                   	// #0
  418da0:	mov	x1, #0x0                   	// #0
  418da4:	orr	w0, w0, #0x2
  418da8:	strb	w0, [x20, #176]
  418dac:	mov	w0, #0x6                   	// #6
  418db0:	str	x24, [sp, #256]
  418db4:	strb	w0, [sp, #264]
  418db8:	mov	x0, x20
  418dbc:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  418dc0:	mov	x26, x0
  418dc4:	mov	x0, #0x0                   	// #0
  418dc8:	cbz	x26, 41945c <_obstack_memory_used@@Base+0x92b0>
  418dcc:	ldr	x1, [x25, x0, lsl #3]
  418dd0:	cbnz	x1, 41941c <_obstack_memory_used@@Base+0x9270>
  418dd4:	add	x0, x0, #0x1
  418dd8:	cmp	x0, #0x4
  418ddc:	b.ne	418dcc <_obstack_memory_used@@Base+0x8c20>  // b.any
  418de0:	mov	x0, x25
  418de4:	bl	402c20 <free@plt>
  418de8:	b	4187c8 <_obstack_memory_used@@Base+0x861c>
  418dec:	mov	x0, x24
  418df0:	bl	411330 <_obstack_memory_used@@Base+0x1184>
  418df4:	mov	w0, #0x3                   	// #3
  418df8:	add	x3, sp, #0x100
  418dfc:	mov	x2, #0x0                   	// #0
  418e00:	mov	x1, #0x0                   	// #0
  418e04:	str	x25, [sp, #256]
  418e08:	strb	w0, [sp, #264]
  418e0c:	mov	x0, x20
  418e10:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  418e14:	b	419454 <_obstack_memory_used@@Base+0x92a8>
  418e18:	ldr	x1, [x19]
  418e1c:	mov	w0, #0x1                   	// #1
  418e20:	lsl	w0, w0, w1
  418e24:	ldr	x1, [x20, #168]
  418e28:	sxtw	x0, w0
  418e2c:	tst	x0, x1
  418e30:	b.ne	418e3c <_obstack_memory_used@@Base+0x8c90>  // b.any
  418e34:	mov	w0, #0x6                   	// #6
  418e38:	b	4185d4 <_obstack_memory_used@@Base+0x8428>
  418e3c:	ldr	x1, [x20, #160]
  418e40:	mov	x3, x19
  418e44:	mov	x2, #0x0                   	// #0
  418e48:	orr	x0, x1, x0
  418e4c:	str	x0, [x20, #160]
  418e50:	mov	x1, #0x0                   	// #0
  418e54:	mov	x0, x20
  418e58:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  418e5c:	mov	x26, x0
  418e60:	cbz	x0, 4185d0 <_obstack_memory_used@@Base+0x8424>
  418e64:	ldr	x0, [x20, #152]
  418e68:	add	x0, x0, #0x1
  418e6c:	str	x0, [x20, #152]
  418e70:	ldrb	w0, [x20, #176]
  418e74:	orr	w0, w0, #0x2
  418e78:	strb	w0, [x20, #176]
  418e7c:	b	4185e8 <_obstack_memory_used@@Base+0x843c>
  418e80:	cbz	x27, 418e8c <_obstack_memory_used@@Base+0x8ce0>
  418e84:	mov	w0, #0xd                   	// #13
  418e88:	b	4185d4 <_obstack_memory_used@@Base+0x8428>
  418e8c:	cbnz	x28, 418e84 <_obstack_memory_used@@Base+0x8cd8>
  418e90:	str	x3, [sp, #96]
  418e94:	cbz	x3, 418eb0 <_obstack_memory_used@@Base+0x8d04>
  418e98:	mov	x2, x23
  418e9c:	mov	x1, x21
  418ea0:	mov	x0, x19
  418ea4:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  418ea8:	ldr	x3, [sp, #96]
  418eac:	b	418590 <_obstack_memory_used@@Base+0x83e4>
  418eb0:	cmp	w0, #0x9
  418eb4:	b.ne	418ec4 <_obstack_memory_used@@Base+0x8d18>  // b.any
  418eb8:	tbnz	w23, #17, 418ec4 <_obstack_memory_used@@Base+0x8d18>
  418ebc:	mov	w0, #0x10                  	// #16
  418ec0:	b	4185d4 <_obstack_memory_used@@Base+0x8428>
  418ec4:	mov	w0, #0x1                   	// #1
  418ec8:	strb	w0, [x19, #8]
  418ecc:	mov	x3, x19
  418ed0:	mov	x0, x20
  418ed4:	mov	x2, #0x0                   	// #0
  418ed8:	mov	x1, #0x0                   	// #0
  418edc:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  418ee0:	mov	x26, x0
  418ee4:	cbnz	x0, 4185e8 <_obstack_memory_used@@Base+0x843c>
  418ee8:	b	4185d0 <_obstack_memory_used@@Base+0x8424>
  418eec:	ldr	w1, [x19]
  418ef0:	mov	w0, #0x30f                 	// #783
  418ef4:	tst	w1, w0
  418ef8:	b.eq	418f30 <_obstack_memory_used@@Base+0x8d84>  // b.none
  418efc:	ldrb	w0, [x20, #176]
  418f00:	tbnz	w0, #4, 418f30 <_obstack_memory_used@@Base+0x8d84>
  418f04:	orr	w0, w0, #0x10
  418f08:	strb	w0, [x20, #176]
  418f0c:	mov	w1, w0
  418f10:	tbnz	w0, #3, 419030 <_obstack_memory_used@@Base+0x8e84>
  418f14:	mov	x0, #0x3ff000000000000     	// #287948901175001088
  418f18:	str	x0, [x20, #184]
  418f1c:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  418f20:	movk	x0, #0x87ff, lsl #16
  418f24:	str	x0, [x20, #192]
  418f28:	tbz	w1, #2, 419054 <_obstack_memory_used@@Base+0x8ea8>
  418f2c:	stp	xzr, xzr, [x20, #200]
  418f30:	ldr	w0, [x19]
  418f34:	mov	w1, #0x200                 	// #512
  418f38:	cmp	w0, #0x100
  418f3c:	ccmp	w0, w1, #0x4, ne  // ne = any
  418f40:	b.ne	419088 <_obstack_memory_used@@Base+0x8edc>  // b.any
  418f44:	cmp	w0, #0x100
  418f48:	b.ne	419060 <_obstack_memory_used@@Base+0x8eb4>  // b.any
  418f4c:	mov	w0, #0x6                   	// #6
  418f50:	str	w0, [x19]
  418f54:	mov	x3, x19
  418f58:	mov	x0, x20
  418f5c:	mov	x2, #0x0                   	// #0
  418f60:	mov	x1, #0x0                   	// #0
  418f64:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  418f68:	mov	x24, x0
  418f6c:	mov	w0, #0x9                   	// #9
  418f70:	str	w0, [x19]
  418f74:	mov	x3, x19
  418f78:	mov	x2, #0x0                   	// #0
  418f7c:	mov	x1, #0x0                   	// #0
  418f80:	mov	x0, x20
  418f84:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  418f88:	mov	x1, x24
  418f8c:	mov	x25, x0
  418f90:	mov	x2, x0
  418f94:	mov	w3, #0xa                   	// #10
  418f98:	mov	x0, x20
  418f9c:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  418fa0:	cmp	x24, #0x0
  418fa4:	mov	x26, x0
  418fa8:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  418fac:	b.eq	4185d0 <_obstack_memory_used@@Base+0x8424>  // b.none
  418fb0:	cbz	x26, 4185d0 <_obstack_memory_used@@Base+0x8424>
  418fb4:	mov	x2, x23
  418fb8:	mov	x1, x21
  418fbc:	mov	x0, x19
  418fc0:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  418fc4:	mov	x0, x26
  418fc8:	ldp	x19, x20, [sp, #16]
  418fcc:	ldp	x21, x22, [sp, #32]
  418fd0:	ldp	x23, x24, [sp, #48]
  418fd4:	ldp	x25, x26, [sp, #64]
  418fd8:	ldp	x27, x28, [sp, #80]
  418fdc:	ldp	x29, x30, [sp], #288
  418fe0:	ret
  418fe4:	ldrh	w4, [x7, x3, lsl #1]
  418fe8:	tbnz	w4, #3, 418ff4 <_obstack_memory_used@@Base+0x8e48>
  418fec:	cmp	w3, #0x5f
  418ff0:	b.ne	419004 <_obstack_memory_used@@Base+0x8e58>  // b.any
  418ff4:	ldr	x5, [x6, x0, lsl #3]
  418ff8:	lsl	x4, x8, x2
  418ffc:	orr	x4, x5, x4
  419000:	str	x4, [x6, x0, lsl #3]
  419004:	add	w2, w2, #0x1
  419008:	add	x3, x3, #0x1
  41900c:	cmp	w2, #0x40
  419010:	b.ne	418fe4 <_obstack_memory_used@@Base+0x8e38>  // b.any
  419014:	add	x0, x0, #0x1
  419018:	add	x1, x1, #0x40
  41901c:	cmp	w0, #0x3
  419020:	b.gt	418f30 <_obstack_memory_used@@Base+0x8d84>
  419024:	mov	x3, x1
  419028:	mov	w2, #0x0                   	// #0
  41902c:	b	418fe4 <_obstack_memory_used@@Base+0x8e38>
  419030:	mov	w25, #0x0                   	// #0
  419034:	mov	w24, #0x0                   	// #0
  419038:	bl	402c00 <__ctype_b_loc@plt>
  41903c:	sxtw	x1, w25
  419040:	add	x6, x20, #0xb8
  419044:	mov	x8, #0x1                   	// #1
  419048:	ldr	x7, [x0]
  41904c:	sxtw	x0, w24
  419050:	b	419024 <_obstack_memory_used@@Base+0x8e78>
  419054:	mov	w25, #0x80                  	// #128
  419058:	mov	w24, #0x2                   	// #2
  41905c:	b	419038 <_obstack_memory_used@@Base+0x8e8c>
  419060:	mov	w0, #0x5                   	// #5
  419064:	str	w0, [x19]
  419068:	mov	x3, x19
  41906c:	mov	x0, x20
  419070:	mov	x2, #0x0                   	// #0
  419074:	mov	x1, #0x0                   	// #0
  419078:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  41907c:	mov	x24, x0
  419080:	mov	w0, #0xa                   	// #10
  419084:	b	418f70 <_obstack_memory_used@@Base+0x8dc4>
  419088:	mov	x3, x19
  41908c:	mov	x0, x20
  419090:	mov	x2, #0x0                   	// #0
  419094:	mov	x1, #0x0                   	// #0
  419098:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  41909c:	mov	x26, x0
  4190a0:	b	418fb0 <_obstack_memory_used@@Base+0x8e04>
  4190a4:	mov	x3, x19
  4190a8:	mov	x0, x20
  4190ac:	mov	x2, #0x0                   	// #0
  4190b0:	mov	x1, #0x0                   	// #0
  4190b4:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  4190b8:	mov	x26, x0
  4190bc:	cbz	x0, 4185d0 <_obstack_memory_used@@Base+0x8424>
  4190c0:	ldr	w0, [x20, #180]
  4190c4:	cmp	w0, #0x1
  4190c8:	b.gt	418e70 <_obstack_memory_used@@Base+0x8cc4>
  4190cc:	b	4185e8 <_obstack_memory_used@@Base+0x843c>
  4190d0:	cmp	w0, #0x21
  4190d4:	adrp	x3, 41d000 <_obstack_memory_used@@Base+0xce54>
  4190d8:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  4190dc:	mov	x5, x22
  4190e0:	cset	w4, eq  // eq = none
  4190e4:	add	x3, x3, #0x2b8
  4190e8:	add	x2, x2, #0x6e4
  4190ec:	ldr	x1, [x21, #120]
  4190f0:	mov	x0, x20
  4190f4:	bl	412b98 <_obstack_memory_used@@Base+0x29ec>
  4190f8:	mov	x26, x0
  4190fc:	b	4187c8 <_obstack_memory_used@@Base+0x861c>
  419100:	cmp	w0, #0x23
  419104:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0xae54>
  419108:	adrp	x2, 41c000 <_obstack_memory_used@@Base+0xbe54>
  41910c:	mov	x5, x22
  419110:	cset	w4, eq  // eq = none
  419114:	add	x3, x3, #0x9f5
  419118:	add	x2, x2, #0x6d8
  41911c:	b	4190ec <_obstack_memory_used@@Base+0x8f40>
  419120:	mov	w0, #0x5                   	// #5
  419124:	b	4185d4 <_obstack_memory_used@@Base+0x8428>
  419128:	cmn	x0, #0x2
  41912c:	b.ne	41913c <_obstack_memory_used@@Base+0x8f90>  // b.any
  419130:	mov	x27, #0x0                   	// #0
  419134:	b	419178 <_obstack_memory_used@@Base+0x8fcc>
  419138:	mov	x5, #0x0                   	// #0
  41913c:	ldrb	w0, [x19, #8]
  419140:	cmp	w0, #0x18
  419144:	b.eq	41919c <_obstack_memory_used@@Base+0x8ff0>  // b.none
  419148:	cmp	w0, #0x1
  41914c:	b.ne	4191a4 <_obstack_memory_used@@Base+0x8ff8>  // b.any
  419150:	ldrb	w0, [x19]
  419154:	cmp	w0, #0x2c
  419158:	b.ne	4191a4 <_obstack_memory_used@@Base+0x8ff8>  // b.any
  41915c:	mov	x2, x23
  419160:	mov	x1, x19
  419164:	mov	x0, x21
  419168:	str	x5, [sp, #112]
  41916c:	bl	4145f0 <_obstack_memory_used@@Base+0x4444>
  419170:	mov	x27, x0
  419174:	ldr	x5, [sp, #112]
  419178:	cmn	x5, #0x2
  41917c:	ccmn	x27, #0x2, #0x4, ne  // ne = any
  419180:	b.ne	4191e8 <_obstack_memory_used@@Base+0x903c>  // b.any
  419184:	tbnz	w23, #21, 4191ac <_obstack_memory_used@@Base+0x9000>
  419188:	ldrb	w0, [x19, #8]
  41918c:	cmp	w0, #0x2
  419190:	b.ne	41867c <_obstack_memory_used@@Base+0x84d0>  // b.any
  419194:	mov	w0, #0x9                   	// #9
  419198:	b	418680 <_obstack_memory_used@@Base+0x84d4>
  41919c:	mov	x27, x5
  4191a0:	b	419178 <_obstack_memory_used@@Base+0x8fcc>
  4191a4:	mov	x27, #0xfffffffffffffffe    	// #-2
  4191a8:	b	419178 <_obstack_memory_used@@Base+0x8fcc>
  4191ac:	str	x28, [x21, #72]
  4191b0:	mov	w0, #0x1                   	// #1
  4191b4:	stp	x24, x25, [x19]
  4191b8:	mov	x24, x26
  4191bc:	strb	w0, [x19, #8]
  4191c0:	ldr	w0, [x22]
  4191c4:	cbz	w0, 4193e4 <_obstack_memory_used@@Base+0x9238>
  4191c8:	cbnz	x24, 4193e4 <_obstack_memory_used@@Base+0x9238>
  4191cc:	cbz	x26, 4187d4 <_obstack_memory_used@@Base+0x8628>
  4191d0:	mov	x0, x26
  4191d4:	mov	x2, #0x0                   	// #0
  4191d8:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe54>
  4191dc:	add	x1, x1, #0x3a0
  4191e0:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  4191e4:	b	4187d4 <_obstack_memory_used@@Base+0x8628>
  4191e8:	cmp	x5, x27
  4191ec:	ccmn	x27, #0x1, #0x4, gt
  4191f0:	b.ne	41867c <_obstack_memory_used@@Base+0x84d0>  // b.any
  4191f4:	ldrb	w0, [x19, #8]
  4191f8:	cmp	w0, #0x18
  4191fc:	b.ne	41867c <_obstack_memory_used@@Base+0x84d0>  // b.any
  419200:	cmn	x27, #0x1
  419204:	mov	x0, #0x7fff                	// #32767
  419208:	b.ne	419220 <_obstack_memory_used@@Base+0x9074>  // b.any
  41920c:	cmp	x5, x0
  419210:	cset	x0, gt
  419214:	cbz	x0, 419234 <_obstack_memory_used@@Base+0x9088>
  419218:	mov	w0, #0xf                   	// #15
  41921c:	b	418680 <_obstack_memory_used@@Base+0x84d4>
  419220:	cmp	x27, x0
  419224:	b	419210 <_obstack_memory_used@@Base+0x9064>
  419228:	cmp	w1, #0x13
  41922c:	mov	x6, #0xffffffffffffffff    	// #-1
  419230:	cneg	x27, x6, eq  // eq = none
  419234:	mov	x2, x23
  419238:	mov	x1, x21
  41923c:	mov	x0, x19
  419240:	str	x5, [sp, #112]
  419244:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  419248:	cbz	x26, 419268 <_obstack_memory_used@@Base+0x90bc>
  41924c:	ldr	x5, [sp, #112]
  419250:	orr	x0, x5, x27
  419254:	cbnz	x0, 419270 <_obstack_memory_used@@Base+0x90c4>
  419258:	ldr	x1, [sp, #104]
  41925c:	mov	x0, x26
  419260:	mov	x2, #0x0                   	// #0
  419264:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  419268:	mov	x24, #0x0                   	// #0
  41926c:	b	4191c0 <_obstack_memory_used@@Base+0x9014>
  419270:	cmp	x5, #0x0
  419274:	b.gt	419370 <_obstack_memory_used@@Base+0x91c4>
  419278:	mov	x28, x26
  41927c:	mov	x25, #0x0                   	// #0
  419280:	ldrb	w0, [x28, #48]
  419284:	cmp	w0, #0x11
  419288:	b.ne	4192a4 <_obstack_memory_used@@Base+0x90f8>  // b.any
  41928c:	ldr	x2, [x28, #40]
  419290:	mov	x0, x28
  419294:	ldr	x1, [sp, #96]
  419298:	str	x5, [sp, #112]
  41929c:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  4192a0:	ldr	x5, [sp, #112]
  4192a4:	cmn	x27, #0x1
  4192a8:	cset	w3, eq  // eq = none
  4192ac:	mov	x1, x28
  4192b0:	add	w3, w3, #0xa
  4192b4:	mov	x0, x20
  4192b8:	mov	x2, #0x0                   	// #0
  4192bc:	str	x5, [sp, #112]
  4192c0:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  4192c4:	mov	x24, x0
  4192c8:	cbz	x0, 4193dc <_obstack_memory_used@@Base+0x9230>
  4192cc:	ldr	x5, [sp, #112]
  4192d0:	add	x4, x5, #0x2
  4192d4:	cmp	x27, x4
  4192d8:	b.ge	419380 <_obstack_memory_used@@Base+0x91d4>  // b.tcont
  4192dc:	cbz	x25, 4191c0 <_obstack_memory_used@@Base+0x9014>
  4192e0:	mov	x2, x24
  4192e4:	mov	x1, x25
  4192e8:	mov	x0, x20
  4192ec:	mov	w3, #0x10                  	// #16
  4192f0:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  4192f4:	mov	x24, x0
  4192f8:	b	4191c0 <_obstack_memory_used@@Base+0x9014>
  4192fc:	mov	x1, x20
  419300:	mov	x0, x25
  419304:	str	x5, [sp, #112]
  419308:	bl	412928 <_obstack_memory_used@@Base+0x277c>
  41930c:	mov	x1, x24
  419310:	mov	x25, x0
  419314:	mov	x2, x0
  419318:	mov	w3, #0x10                  	// #16
  41931c:	mov	x0, x20
  419320:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  419324:	cmp	x25, #0x0
  419328:	mov	x24, x0
  41932c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  419330:	b.eq	4193dc <_obstack_memory_used@@Base+0x9230>  // b.none
  419334:	ldr	x5, [sp, #112]
  419338:	add	x28, x28, #0x1
  41933c:	cmp	x5, x28
  419340:	b.ge	4192fc <_obstack_memory_used@@Base+0x9150>  // b.tcont
  419344:	str	x5, [sp, #112]
  419348:	cmp	x5, x27
  41934c:	b.eq	4191c0 <_obstack_memory_used@@Base+0x9014>  // b.none
  419350:	mov	x1, x20
  419354:	mov	x0, x25
  419358:	bl	412928 <_obstack_memory_used@@Base+0x277c>
  41935c:	mov	x28, x0
  419360:	cbz	x0, 4193dc <_obstack_memory_used@@Base+0x9230>
  419364:	mov	x25, x24
  419368:	ldr	x5, [sp, #112]
  41936c:	b	419280 <_obstack_memory_used@@Base+0x90d4>
  419370:	mov	x24, x26
  419374:	mov	x25, x26
  419378:	mov	x28, #0x2                   	// #2
  41937c:	b	41933c <_obstack_memory_used@@Base+0x9190>
  419380:	mov	x1, x20
  419384:	mov	x0, x28
  419388:	str	x4, [sp, #112]
  41938c:	bl	412928 <_obstack_memory_used@@Base+0x277c>
  419390:	mov	x1, x24
  419394:	mov	x28, x0
  419398:	mov	x2, x0
  41939c:	mov	w3, #0x10                  	// #16
  4193a0:	mov	x0, x20
  4193a4:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  4193a8:	cmp	x28, #0x0
  4193ac:	mov	x1, x0
  4193b0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4193b4:	b.eq	4193dc <_obstack_memory_used@@Base+0x9230>  // b.none
  4193b8:	mov	x0, x20
  4193bc:	mov	w3, #0xa                   	// #10
  4193c0:	mov	x2, #0x0                   	// #0
  4193c4:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  4193c8:	mov	x24, x0
  4193cc:	cbz	x0, 4193dc <_obstack_memory_used@@Base+0x9230>
  4193d0:	ldr	x4, [sp, #112]
  4193d4:	add	x4, x4, #0x1
  4193d8:	b	4192d4 <_obstack_memory_used@@Base+0x9128>
  4193dc:	mov	w0, #0xc                   	// #12
  4193e0:	b	418680 <_obstack_memory_used@@Base+0x84d4>
  4193e4:	tbz	w23, #24, 419414 <_obstack_memory_used@@Base+0x9268>
  4193e8:	ldrb	w0, [x19, #8]
  4193ec:	cmp	w0, #0xb
  4193f0:	ccmp	w0, #0x17, #0x4, ne  // ne = any
  4193f4:	b.ne	419414 <_obstack_memory_used@@Base+0x9268>  // b.any
  4193f8:	cbz	x24, 418e84 <_obstack_memory_used@@Base+0x8cd8>
  4193fc:	mov	x0, x24
  419400:	mov	x2, #0x0                   	// #0
  419404:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe54>
  419408:	add	x1, x1, #0x3a0
  41940c:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  419410:	b	418e84 <_obstack_memory_used@@Base+0x8cd8>
  419414:	mov	x26, x24
  419418:	b	418610 <_obstack_memory_used@@Base+0x8464>
  41941c:	mov	w0, #0x3                   	// #3
  419420:	mov	x1, #0x0                   	// #0
  419424:	add	x3, sp, #0x100
  419428:	mov	x2, #0x0                   	// #0
  41942c:	str	x25, [sp, #256]
  419430:	strb	w0, [sp, #264]
  419434:	mov	x0, x20
  419438:	bl	41286c <_obstack_memory_used@@Base+0x26c0>
  41943c:	mov	x1, x0
  419440:	cbz	x0, 41945c <_obstack_memory_used@@Base+0x92b0>
  419444:	mov	x2, x26
  419448:	mov	x0, x20
  41944c:	mov	w3, #0xa                   	// #10
  419450:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  419454:	mov	x26, x0
  419458:	cbnz	x0, 4187c8 <_obstack_memory_used@@Base+0x861c>
  41945c:	mov	w0, #0xc                   	// #12
  419460:	b	418858 <_obstack_memory_used@@Base+0x86ac>
  419464:	cmp	w4, #0x3
  419468:	b.ne	418bcc <_obstack_memory_used@@Base+0x8a20>  // b.any
  41946c:	b	418a94 <_obstack_memory_used@@Base+0x88e8>
  419470:	cbz	w1, 418ab8 <_obstack_memory_used@@Base+0x890c>
  419474:	mov	w28, #0x0                   	// #0
  419478:	b	418abc <_obstack_memory_used@@Base+0x8910>
  41947c:	stp	x29, x30, [sp, #-96]!
  419480:	mov	x29, sp
  419484:	stp	x21, x22, [sp, #32]
  419488:	mov	x21, x5
  41948c:	mov	x22, x1
  419490:	stp	x19, x20, [sp, #16]
  419494:	stp	x23, x24, [sp, #48]
  419498:	mov	x23, x2
  41949c:	mov	x24, x4
  4194a0:	stp	x25, x26, [sp, #64]
  4194a4:	mov	x25, x0
  4194a8:	mov	x26, x3
  4194ac:	str	x27, [sp, #80]
  4194b0:	ldr	x27, [x1]
  4194b4:	bl	418548 <_obstack_memory_used@@Base+0x839c>
  4194b8:	mov	x19, x0
  4194bc:	ldr	w0, [x21]
  4194c0:	cbz	w0, 41954c <_obstack_memory_used@@Base+0x93a0>
  4194c4:	cbnz	x19, 41954c <_obstack_memory_used@@Base+0x93a0>
  4194c8:	mov	x19, #0x0                   	// #0
  4194cc:	mov	x0, x19
  4194d0:	ldp	x19, x20, [sp, #16]
  4194d4:	ldp	x21, x22, [sp, #32]
  4194d8:	ldp	x23, x24, [sp, #48]
  4194dc:	ldp	x25, x26, [sp, #64]
  4194e0:	ldr	x27, [sp, #80]
  4194e4:	ldp	x29, x30, [sp], #96
  4194e8:	ret
  4194ec:	cmp	x19, #0x0
  4194f0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  4194f4:	b.eq	419544 <_obstack_memory_used@@Base+0x9398>  // b.none
  4194f8:	mov	x2, x20
  4194fc:	mov	x1, x19
  419500:	mov	x0, x27
  419504:	mov	w3, #0x10                  	// #16
  419508:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  41950c:	cbnz	x0, 4195b0 <_obstack_memory_used@@Base+0x9404>
  419510:	adrp	x22, 411000 <_obstack_memory_used@@Base+0xe54>
  419514:	add	x22, x22, #0x3a0
  419518:	mov	x1, x22
  41951c:	mov	x2, #0x0                   	// #0
  419520:	mov	x0, x20
  419524:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  419528:	mov	x1, x22
  41952c:	mov	x0, x19
  419530:	mov	x2, #0x0                   	// #0
  419534:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  419538:	mov	w0, #0xc                   	// #12
  41953c:	str	w0, [x21]
  419540:	b	4194c8 <_obstack_memory_used@@Base+0x931c>
  419544:	cmp	x19, #0x0
  419548:	csel	x19, x19, x20, ne  // ne = any
  41954c:	ldrb	w0, [x23, #8]
  419550:	and	w1, w0, #0xfffffff7
  419554:	cmp	w1, #0x2
  419558:	b.eq	4194cc <_obstack_memory_used@@Base+0x9320>  // b.none
  41955c:	cbz	x24, 419568 <_obstack_memory_used@@Base+0x93bc>
  419560:	cmp	w0, #0x9
  419564:	b.eq	4194cc <_obstack_memory_used@@Base+0x9320>  // b.none
  419568:	mov	x5, x21
  41956c:	mov	x4, x24
  419570:	mov	x3, x26
  419574:	mov	x2, x23
  419578:	mov	x1, x22
  41957c:	mov	x0, x25
  419580:	bl	418548 <_obstack_memory_used@@Base+0x839c>
  419584:	mov	x20, x0
  419588:	ldr	w0, [x21]
  41958c:	cbz	w0, 4194ec <_obstack_memory_used@@Base+0x9340>
  419590:	cbnz	x20, 4194ec <_obstack_memory_used@@Base+0x9340>
  419594:	cbz	x19, 4194c8 <_obstack_memory_used@@Base+0x931c>
  419598:	mov	x0, x19
  41959c:	mov	x2, #0x0                   	// #0
  4195a0:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe54>
  4195a4:	add	x1, x1, #0x3a0
  4195a8:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  4195ac:	b	4194c8 <_obstack_memory_used@@Base+0x931c>
  4195b0:	mov	x19, x0
  4195b4:	b	41954c <_obstack_memory_used@@Base+0x93a0>
  4195b8:	stp	x29, x30, [sp, #-112]!
  4195bc:	mov	x29, sp
  4195c0:	stp	x21, x22, [sp, #32]
  4195c4:	mov	x22, x5
  4195c8:	ldr	x21, [x1]
  4195cc:	stp	x19, x20, [sp, #16]
  4195d0:	mov	x20, x2
  4195d4:	stp	x23, x24, [sp, #48]
  4195d8:	mov	x23, x0
  4195dc:	mov	x24, x1
  4195e0:	stp	x25, x26, [sp, #64]
  4195e4:	mov	x25, x3
  4195e8:	mov	x26, x4
  4195ec:	stp	x27, x28, [sp, #80]
  4195f0:	ldr	x27, [x21, #168]
  4195f4:	bl	41947c <_obstack_memory_used@@Base+0x92d0>
  4195f8:	mov	x19, x0
  4195fc:	ldr	w0, [x22]
  419600:	cbz	w0, 419664 <_obstack_memory_used@@Base+0x94b8>
  419604:	cbnz	x19, 419664 <_obstack_memory_used@@Base+0x94b8>
  419608:	mov	x19, #0x0                   	// #0
  41960c:	mov	x0, x19
  419610:	ldp	x19, x20, [sp, #16]
  419614:	ldp	x21, x22, [sp, #32]
  419618:	ldp	x23, x24, [sp, #48]
  41961c:	ldp	x25, x26, [sp, #64]
  419620:	ldp	x27, x28, [sp, #80]
  419624:	ldp	x29, x30, [sp], #112
  419628:	ret
  41962c:	ldr	x0, [x21, #168]
  419630:	orr	x0, x0, x6
  419634:	str	x0, [x21, #168]
  419638:	mov	x1, x19
  41963c:	mov	x0, x21
  419640:	mov	w3, #0xa                   	// #10
  419644:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  419648:	mov	x19, x0
  41964c:	cbnz	x0, 419668 <_obstack_memory_used@@Base+0x94bc>
  419650:	mov	w0, #0xc                   	// #12
  419654:	str	w0, [x22]
  419658:	b	41960c <_obstack_memory_used@@Base+0x9460>
  41965c:	mov	x2, #0x0                   	// #0
  419660:	b	419638 <_obstack_memory_used@@Base+0x948c>
  419664:	orr	x28, x25, #0x800000
  419668:	ldrb	w0, [x20, #8]
  41966c:	cmp	w0, #0xa
  419670:	b.ne	41960c <_obstack_memory_used@@Base+0x9460>  // b.any
  419674:	mov	x1, x23
  419678:	mov	x0, x20
  41967c:	mov	x2, x28
  419680:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  419684:	ldrb	w0, [x20, #8]
  419688:	and	w1, w0, #0xfffffff7
  41968c:	cmp	w1, #0x2
  419690:	b.eq	41965c <_obstack_memory_used@@Base+0x94b0>  // b.none
  419694:	cbz	x26, 4196a0 <_obstack_memory_used@@Base+0x94f4>
  419698:	cmp	w0, #0x9
  41969c:	b.eq	41965c <_obstack_memory_used@@Base+0x94b0>  // b.none
  4196a0:	ldr	x6, [x21, #168]
  4196a4:	str	x27, [x21, #168]
  4196a8:	mov	x2, x20
  4196ac:	mov	x5, x22
  4196b0:	mov	x4, x26
  4196b4:	mov	x3, x25
  4196b8:	mov	x1, x24
  4196bc:	mov	x0, x23
  4196c0:	str	x6, [sp, #104]
  4196c4:	bl	41947c <_obstack_memory_used@@Base+0x92d0>
  4196c8:	mov	x2, x0
  4196cc:	ldr	w0, [x22]
  4196d0:	ldr	x6, [sp, #104]
  4196d4:	cbz	w0, 41962c <_obstack_memory_used@@Base+0x9480>
  4196d8:	cbnz	x2, 41962c <_obstack_memory_used@@Base+0x9480>
  4196dc:	cbz	x19, 419608 <_obstack_memory_used@@Base+0x945c>
  4196e0:	mov	x0, x19
  4196e4:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe54>
  4196e8:	add	x1, x1, #0x3a0
  4196ec:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  4196f0:	b	419608 <_obstack_memory_used@@Base+0x945c>
  4196f4:	stp	x29, x30, [sp, #-304]!
  4196f8:	mov	x29, sp
  4196fc:	stp	x19, x20, [sp, #16]
  419700:	mov	x20, x0
  419704:	stp	x21, x22, [sp, #32]
  419708:	mov	x21, x2
  41970c:	mov	x22, x3
  419710:	stp	x23, x24, [sp, #48]
  419714:	mov	x24, x1
  419718:	mov	w1, #0xffffff90            	// #-112
  41971c:	stp	x25, x26, [sp, #64]
  419720:	stp	x27, x28, [sp, #80]
  419724:	str	xzr, [x0, #16]
  419728:	str	x3, [x0, #24]
  41972c:	str	xzr, [x0, #48]
  419730:	ldr	x19, [x0]
  419734:	str	wzr, [sp, #120]
  419738:	ldrb	w0, [x0, #56]
  41973c:	and	w0, w0, w1
  419740:	strb	w0, [x20, #56]
  419744:	ldr	x0, [x20, #8]
  419748:	cmp	x0, #0xe7
  41974c:	b.hi	41976c <_obstack_memory_used@@Base+0x95c0>  // b.pmore
  419750:	mov	x0, x19
  419754:	mov	x1, #0xe8                  	// #232
  419758:	bl	402a80 <realloc@plt>
  41975c:	mov	x19, x0
  419760:	cbz	x0, 41a124 <_obstack_memory_used@@Base+0x9f78>
  419764:	mov	x0, #0xe8                  	// #232
  419768:	stp	x19, x0, [x20]
  41976c:	mov	x2, #0xe8                  	// #232
  419770:	str	x2, [x20, #16]
  419774:	mov	x0, x19
  419778:	mov	w1, #0x0                   	// #0
  41977c:	bl	402a10 <memset@plt>
  419780:	mov	w0, #0xf                   	// #15
  419784:	str	w0, [x19, #128]
  419788:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  41978c:	movk	x0, #0x555, lsl #48
  419790:	cmp	x21, x0
  419794:	b.cs	41988c <_obstack_memory_used@@Base+0x96e0>  // b.hs, b.nlast
  419798:	add	x25, x21, #0x1
  41979c:	str	x25, [x19, #8]
  4197a0:	mov	x23, #0x1                   	// #1
  4197a4:	lsl	x0, x25, #4
  4197a8:	bl	402930 <malloc@plt>
  4197ac:	str	x0, [x19]
  4197b0:	cmp	x21, x23
  4197b4:	b.cc	4197c0 <_obstack_memory_used@@Base+0x9614>  // b.lo, b.ul, b.last
  4197b8:	lsl	x23, x23, #1
  4197bc:	b	4197b0 <_obstack_memory_used@@Base+0x9604>
  4197c0:	mov	x1, x23
  4197c4:	mov	x0, #0x18                  	// #24
  4197c8:	sub	x23, x23, #0x1
  4197cc:	bl	402a60 <calloc@plt>
  4197d0:	str	x0, [x19, #64]
  4197d4:	str	x23, [x19, #136]
  4197d8:	bl	402c40 <__ctype_get_mb_cur_max@plt>
  4197dc:	str	w0, [x19, #180]
  4197e0:	mov	w0, #0xe                   	// #14
  4197e4:	bl	4028f0 <nl_langinfo@plt>
  4197e8:	ldrb	w1, [x0]
  4197ec:	and	w1, w1, #0xffffffdf
  4197f0:	and	w1, w1, #0xff
  4197f4:	cmp	w1, #0x55
  4197f8:	b.ne	419854 <_obstack_memory_used@@Base+0x96a8>  // b.any
  4197fc:	ldrb	w1, [x0, #1]
  419800:	and	w1, w1, #0xffffffdf
  419804:	and	w1, w1, #0xff
  419808:	cmp	w1, #0x54
  41980c:	b.ne	419854 <_obstack_memory_used@@Base+0x96a8>  // b.any
  419810:	ldrb	w1, [x0, #2]
  419814:	and	w1, w1, #0xffffffdf
  419818:	and	w1, w1, #0xff
  41981c:	cmp	w1, #0x46
  419820:	b.ne	419854 <_obstack_memory_used@@Base+0x96a8>  // b.any
  419824:	ldrb	w1, [x0, #3]
  419828:	cmp	w1, #0x2d
  41982c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0xae54>
  419830:	cset	x2, eq  // eq = none
  419834:	add	x1, x1, #0x84e
  419838:	add	x2, x2, #0x3
  41983c:	add	x0, x0, x2
  419840:	bl	402bf0 <strcmp@plt>
  419844:	cbnz	w0, 419854 <_obstack_memory_used@@Base+0x96a8>
  419848:	ldrb	w0, [x19, #176]
  41984c:	orr	w0, w0, #0x4
  419850:	strb	w0, [x19, #176]
  419854:	ldrb	w0, [x19, #176]
  419858:	and	w1, w0, #0xfffffff7
  41985c:	strb	w1, [x19, #176]
  419860:	ldr	w1, [x19, #180]
  419864:	cmp	w1, #0x1
  419868:	b.le	41987c <_obstack_memory_used@@Base+0x96d0>
  41986c:	tbz	w0, #2, 4198a4 <_obstack_memory_used@@Base+0x96f8>
  419870:	adrp	x0, 41d000 <_obstack_memory_used@@Base+0xce54>
  419874:	add	x0, x0, #0x90
  419878:	str	x0, [x19, #120]
  41987c:	ldr	x0, [x19]
  419880:	cbz	x0, 41988c <_obstack_memory_used@@Base+0x96e0>
  419884:	ldr	x0, [x19, #64]
  419888:	cbnz	x0, 41992c <_obstack_memory_used@@Base+0x9780>
  41988c:	mov	w0, #0xc                   	// #12
  419890:	str	w0, [sp, #120]
  419894:	mov	x0, x19
  419898:	bl	41169c <_obstack_memory_used@@Base+0x14f0>
  41989c:	stp	xzr, xzr, [x20]
  4198a0:	b	419f24 <_obstack_memory_used@@Base+0x9d78>
  4198a4:	mov	x1, #0x1                   	// #1
  4198a8:	mov	x0, #0x20                  	// #32
  4198ac:	bl	402a60 <calloc@plt>
  4198b0:	str	x0, [x19, #120]
  4198b4:	cbz	x0, 41988c <_obstack_memory_used@@Base+0x96e0>
  4198b8:	mov	x27, #0x0                   	// #0
  4198bc:	mov	w26, #0x0                   	// #0
  4198c0:	mov	w23, #0x0                   	// #0
  4198c4:	add	w28, w26, w23
  4198c8:	mov	w0, w28
  4198cc:	bl	402b30 <btowc@plt>
  4198d0:	mov	x4, #0x1                   	// #1
  4198d4:	cmn	w0, #0x1
  4198d8:	b.eq	4198f0 <_obstack_memory_used@@Base+0x9744>  // b.none
  4198dc:	ldr	x3, [x19, #120]
  4198e0:	lsl	x1, x4, x23
  4198e4:	ldr	x2, [x3, x27]
  4198e8:	orr	x1, x2, x1
  4198ec:	str	x1, [x3, x27]
  4198f0:	tst	w28, #0xffffff80
  4198f4:	b.ne	41990c <_obstack_memory_used@@Base+0x9760>  // b.any
  4198f8:	cmp	w0, w28
  4198fc:	b.eq	41990c <_obstack_memory_used@@Base+0x9760>  // b.none
  419900:	ldrb	w0, [x19, #176]
  419904:	orr	w0, w0, #0x8
  419908:	strb	w0, [x19, #176]
  41990c:	add	w23, w23, #0x1
  419910:	cmp	w23, #0x40
  419914:	b.ne	4198c4 <_obstack_memory_used@@Base+0x9718>  // b.any
  419918:	add	w26, w26, #0x40
  41991c:	add	x27, x27, #0x8
  419920:	cmp	w26, #0x100
  419924:	b.ne	4198c0 <_obstack_memory_used@@Base+0x9714>  // b.any
  419928:	b	41987c <_obstack_memory_used@@Base+0x96d0>
  41992c:	ldr	x27, [x20, #40]
  419930:	and	x23, x22, #0x400000
  419934:	mov	w1, #0x0                   	// #0
  419938:	add	x0, sp, #0xa0
  41993c:	mov	x2, #0x90                  	// #144
  419940:	str	wzr, [sp, #120]
  419944:	bl	402a10 <memset@plt>
  419948:	orr	x26, x27, x23
  41994c:	cmp	x23, #0x0
  419950:	str	x24, [sp, #152]
  419954:	cset	w0, ne  // ne = any
  419958:	cmp	x26, #0x0
  41995c:	strb	w0, [sp, #288]
  419960:	cset	w0, ne  // ne = any
  419964:	strb	w0, [sp, #291]
  419968:	ldr	w0, [x19, #180]
  41996c:	str	w0, [sp, #296]
  419970:	ldrb	w0, [x19, #176]
  419974:	stp	x21, x21, [sp, #232]
  419978:	ubfx	x1, x0, #2, #1
  41997c:	ubfx	x0, x0, #3, #1
  419980:	stp	x21, x21, [sp, #248]
  419984:	str	x27, [sp, #272]
  419988:	strb	w1, [sp, #289]
  41998c:	strb	w0, [sp, #290]
  419990:	cbnz	x21, 4199f4 <_obstack_memory_used@@Base+0x9848>
  419994:	ldrb	w0, [sp, #291]
  419998:	cbnz	w0, 419a3c <_obstack_memory_used@@Base+0x9890>
  41999c:	ldr	w0, [x19, #180]
  4199a0:	str	x24, [sp, #160]
  4199a4:	cmp	w0, #0x1
  4199a8:	cbz	x23, 419af0 <_obstack_memory_used@@Base+0x9944>
  4199ac:	b.le	419a44 <_obstack_memory_used@@Base+0x9898>
  4199b0:	add	x0, sp, #0x98
  4199b4:	bl	410c54 <_obstack_memory_used@@Base+0xaa8>
  4199b8:	cbnz	w0, 419a04 <_obstack_memory_used@@Base+0x9858>
  4199bc:	ldr	x1, [sp, #208]
  4199c0:	cmp	x21, x1
  4199c4:	b.le	419a04 <_obstack_memory_used@@Base+0x9858>
  4199c8:	ldr	x3, [sp, #200]
  4199cc:	ldrsw	x2, [x19, #180]
  4199d0:	ldr	x1, [sp, #216]
  4199d4:	add	x2, x2, x3
  4199d8:	cmp	x1, x2
  4199dc:	b.gt	419a04 <_obstack_memory_used@@Base+0x9858>
  4199e0:	lsl	x1, x1, #1
  4199e4:	add	x0, sp, #0x98
  4199e8:	bl	410958 <_obstack_memory_used@@Base+0x7ac>
  4199ec:	cbz	w0, 4199b0 <_obstack_memory_used@@Base+0x9804>
  4199f0:	b	419a04 <_obstack_memory_used@@Base+0x9858>
  4199f4:	mov	x1, x25
  4199f8:	add	x0, sp, #0x98
  4199fc:	bl	410958 <_obstack_memory_used@@Base+0x7ac>
  419a00:	cbz	w0, 419994 <_obstack_memory_used@@Base+0x97e8>
  419a04:	str	w0, [sp, #120]
  419a08:	cbz	w0, 419a50 <_obstack_memory_used@@Base+0x98a4>
  419a0c:	ldr	x21, [x20]
  419a10:	ldr	x0, [x21, #112]
  419a14:	cbnz	x0, 419b1c <_obstack_memory_used@@Base+0x9970>
  419a18:	mov	w0, #0xf                   	// #15
  419a1c:	str	w0, [x21, #128]
  419a20:	ldr	x0, [x21, #32]
  419a24:	stp	xzr, xzr, [x21, #104]
  419a28:	bl	402c20 <free@plt>
  419a2c:	str	xzr, [x21, #32]
  419a30:	add	x0, sp, #0x98
  419a34:	bl	411658 <_obstack_memory_used@@Base+0x14ac>
  419a38:	b	419894 <_obstack_memory_used@@Base+0x96e8>
  419a3c:	ldr	x24, [sp, #160]
  419a40:	b	41999c <_obstack_memory_used@@Base+0x97f0>
  419a44:	add	x0, sp, #0x98
  419a48:	bl	41113c <_obstack_memory_used@@Base+0xf90>
  419a4c:	str	wzr, [sp, #120]
  419a50:	ldr	x24, [x20]
  419a54:	str	xzr, [x20, #48]
  419a58:	orr	x2, x22, #0x800000
  419a5c:	add	x1, sp, #0x98
  419a60:	add	x0, sp, #0x80
  419a64:	str	x22, [x24, #216]
  419a68:	bl	4145c4 <_obstack_memory_used@@Base+0x4418>
  419a6c:	mov	x3, x22
  419a70:	add	x5, sp, #0x78
  419a74:	add	x2, sp, #0x80
  419a78:	mov	x1, x20
  419a7c:	add	x0, sp, #0x98
  419a80:	mov	x4, #0x0                   	// #0
  419a84:	bl	4195b8 <_obstack_memory_used@@Base+0x940c>
  419a88:	mov	x22, x0
  419a8c:	ldr	w0, [sp, #120]
  419a90:	cbz	w0, 419a98 <_obstack_memory_used@@Base+0x98ec>
  419a94:	cbz	x22, 419ae8 <_obstack_memory_used@@Base+0x993c>
  419a98:	mov	x0, x24
  419a9c:	mov	w3, #0x2                   	// #2
  419aa0:	mov	x2, #0x0                   	// #0
  419aa4:	mov	x1, #0x0                   	// #0
  419aa8:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  419aac:	mov	x21, x0
  419ab0:	cbz	x22, 419ac8 <_obstack_memory_used@@Base+0x991c>
  419ab4:	mov	x2, x0
  419ab8:	mov	x1, x22
  419abc:	mov	x0, x24
  419ac0:	mov	w3, #0x10                  	// #16
  419ac4:	bl	4129d0 <_obstack_memory_used@@Base+0x2824>
  419ac8:	cmp	x21, #0x0
  419acc:	cset	w25, eq  // eq = none
  419ad0:	cmp	x0, #0x0
  419ad4:	csinc	w25, w25, wzr, ne  // ne = any
  419ad8:	ldr	x21, [x20]
  419adc:	cbz	w25, 419b2c <_obstack_memory_used@@Base+0x9980>
  419ae0:	mov	w0, #0xc                   	// #12
  419ae4:	str	w0, [sp, #120]
  419ae8:	str	xzr, [x19, #104]
  419aec:	b	419a0c <_obstack_memory_used@@Base+0x9860>
  419af0:	b.le	419b00 <_obstack_memory_used@@Base+0x9954>
  419af4:	add	x0, sp, #0x98
  419af8:	bl	410ae4 <_obstack_memory_used@@Base+0x938>
  419afc:	b	419a4c <_obstack_memory_used@@Base+0x98a0>
  419b00:	cbz	x26, 419b10 <_obstack_memory_used@@Base+0x9964>
  419b04:	add	x0, sp, #0x98
  419b08:	bl	41027c <_obstack_memory_used@@Base+0xd0>
  419b0c:	b	419a4c <_obstack_memory_used@@Base+0x98a0>
  419b10:	ldr	x0, [sp, #216]
  419b14:	stp	x0, x0, [sp, #200]
  419b18:	b	419a4c <_obstack_memory_used@@Base+0x98a0>
  419b1c:	ldr	x22, [x0]
  419b20:	bl	402c20 <free@plt>
  419b24:	mov	x0, x22
  419b28:	b	419a14 <_obstack_memory_used@@Base+0x9868>
  419b2c:	ldr	x22, [x21, #8]
  419b30:	str	x0, [x19, #104]
  419b34:	lsl	x24, x22, #3
  419b38:	mov	x0, x24
  419b3c:	bl	402930 <malloc@plt>
  419b40:	mov	x27, x0
  419b44:	str	x27, [x21, #24]
  419b48:	mov	x0, x24
  419b4c:	bl	402930 <malloc@plt>
  419b50:	mov	x26, x0
  419b54:	mov	x0, #0x18                  	// #24
  419b58:	str	x26, [x21, #32]
  419b5c:	mul	x22, x22, x0
  419b60:	mov	x0, x22
  419b64:	bl	402930 <malloc@plt>
  419b68:	mov	x24, x0
  419b6c:	str	x24, [x21, #40]
  419b70:	mov	x0, x22
  419b74:	bl	402930 <malloc@plt>
  419b78:	str	x0, [x21, #48]
  419b7c:	cbnz	x27, 419b8c <_obstack_memory_used@@Base+0x99e0>
  419b80:	mov	w0, #0xc                   	// #12
  419b84:	str	w0, [sp, #120]
  419b88:	b	419a0c <_obstack_memory_used@@Base+0x9860>
  419b8c:	cbz	x26, 419b80 <_obstack_memory_used@@Base+0x99d4>
  419b90:	cbz	x24, 419b80 <_obstack_memory_used@@Base+0x99d4>
  419b94:	cbz	x0, 419b80 <_obstack_memory_used@@Base+0x99d4>
  419b98:	ldr	x22, [x20, #48]
  419b9c:	lsl	x0, x22, #3
  419ba0:	bl	402930 <malloc@plt>
  419ba4:	str	x0, [x21, #224]
  419ba8:	cbz	x0, 419be8 <_obstack_memory_used@@Base+0x9a3c>
  419bac:	mov	x1, #0x0                   	// #0
  419bb0:	cmp	x22, x1
  419bb4:	b.ne	419cb0 <_obstack_memory_used@@Base+0x9b04>  // b.any
  419bb8:	ldr	x0, [x21, #104]
  419bbc:	mov	x2, x21
  419bc0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e54>
  419bc4:	add	x1, x1, #0x4a8
  419bc8:	bl	4108e4 <_obstack_memory_used@@Base+0x738>
  419bcc:	ldr	x1, [x20, #48]
  419bd0:	mov	x0, #0x0                   	// #0
  419bd4:	cmp	x0, x1
  419bd8:	b.ne	419cbc <_obstack_memory_used@@Base+0x9b10>  // b.any
  419bdc:	ldr	x0, [x21, #224]
  419be0:	bl	402c20 <free@plt>
  419be4:	str	xzr, [x21, #224]
  419be8:	ldr	x0, [x21, #104]
  419bec:	mov	x2, x20
  419bf0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e54>
  419bf4:	add	x1, x1, #0xb18
  419bf8:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  419bfc:	mov	w22, w0
  419c00:	cbnz	w0, 419ca4 <_obstack_memory_used@@Base+0x9af8>
  419c04:	ldr	x0, [x21, #104]
  419c08:	mov	x2, x21
  419c0c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x2e54>
  419c10:	add	x1, x1, #0x870
  419c14:	bl	410878 <_obstack_memory_used@@Base+0x6cc>
  419c18:	mov	w22, w0
  419c1c:	cbnz	w0, 419ca4 <_obstack_memory_used@@Base+0x9af8>
  419c20:	ldr	x0, [x21, #104]
  419c24:	mov	x2, x21
  419c28:	adrp	x1, 412000 <_obstack_memory_used@@Base+0x1e54>
  419c2c:	add	x1, x1, #0x544
  419c30:	bl	4108e4 <_obstack_memory_used@@Base+0x738>
  419c34:	ldr	x0, [x21, #104]
  419c38:	mov	x2, x21
  419c3c:	adrp	x1, 411000 <_obstack_memory_used@@Base+0xe54>
  419c40:	add	x1, x1, #0x8a4
  419c44:	bl	4108e4 <_obstack_memory_used@@Base+0x738>
  419c48:	mov	w22, w0
  419c4c:	cbnz	w0, 419ca4 <_obstack_memory_used@@Base+0x9af8>
  419c50:	mov	w27, #0x0                   	// #0
  419c54:	mov	x24, #0x0                   	// #0
  419c58:	mov	x26, #0x18                  	// #24
  419c5c:	ldr	x0, [x21, #16]
  419c60:	cmp	x0, x24
  419c64:	b.ne	419c74 <_obstack_memory_used@@Base+0x9ac8>  // b.any
  419c68:	cbz	w27, 419cf8 <_obstack_memory_used@@Base+0x9b4c>
  419c6c:	mov	w27, #0x0                   	// #0
  419c70:	mov	x24, #0x0                   	// #0
  419c74:	ldr	x0, [x21, #48]
  419c78:	mul	x28, x24, x26
  419c7c:	add	x0, x0, x28
  419c80:	ldr	x0, [x0, #8]
  419c84:	cbnz	x0, 419cf0 <_obstack_memory_used@@Base+0x9b44>
  419c88:	mov	x2, x24
  419c8c:	mov	x1, x21
  419c90:	add	x0, sp, #0x80
  419c94:	mov	w3, #0x1                   	// #1
  419c98:	bl	413160 <_obstack_memory_used@@Base+0x2fb4>
  419c9c:	cbz	w0, 419cd4 <_obstack_memory_used@@Base+0x9b28>
  419ca0:	mov	w22, w0
  419ca4:	str	w22, [sp, #120]
  419ca8:	cbz	w22, 419d0c <_obstack_memory_used@@Base+0x9b60>
  419cac:	b	419a0c <_obstack_memory_used@@Base+0x9860>
  419cb0:	str	x1, [x0, x1, lsl #3]
  419cb4:	add	x1, x1, #0x1
  419cb8:	b	419bb0 <_obstack_memory_used@@Base+0x9a04>
  419cbc:	ldr	x2, [x21, #224]
  419cc0:	ldr	x2, [x2, x0, lsl #3]
  419cc4:	cmp	x2, x0
  419cc8:	b.ne	419be8 <_obstack_memory_used@@Base+0x9a3c>  // b.any
  419ccc:	add	x0, x0, #0x1
  419cd0:	b	419bd4 <_obstack_memory_used@@Base+0x9a28>
  419cd4:	ldr	x0, [x21, #48]
  419cd8:	add	x0, x0, x28
  419cdc:	ldr	x0, [x0, #8]
  419ce0:	cbnz	x0, 419cf0 <_obstack_memory_used@@Base+0x9b44>
  419ce4:	ldr	x0, [sp, #144]
  419ce8:	mov	w27, #0x1                   	// #1
  419cec:	bl	402c20 <free@plt>
  419cf0:	add	x24, x24, #0x1
  419cf4:	b	419c5c <_obstack_memory_used@@Base+0x9ab0>
  419cf8:	ldrb	w0, [x20, #56]
  419cfc:	tbz	w0, #4, 419d80 <_obstack_memory_used@@Base+0x9bd4>
  419d00:	ldr	x0, [x21, #152]
  419d04:	cbnz	x0, 419d90 <_obstack_memory_used@@Base+0x9be4>
  419d08:	str	wzr, [sp, #120]
  419d0c:	ldrb	w0, [x19, #176]
  419d10:	tbz	w0, #2, 419e90 <_obstack_memory_used@@Base+0x9ce4>
  419d14:	cbnz	x23, 419e90 <_obstack_memory_used@@Base+0x9ce4>
  419d18:	ldr	x0, [x20, #40]
  419d1c:	cbnz	x0, 419e90 <_obstack_memory_used@@Base+0x9ce4>
  419d20:	ldr	x6, [x19, #16]
  419d24:	adrp	x4, 41d000 <_obstack_memory_used@@Base+0xce54>
  419d28:	mov	x7, #0x1                   	// #1
  419d2c:	mov	w8, #0x10001               	// #65537
  419d30:	add	x4, x4, #0x84
  419d34:	mov	w9, w7
  419d38:	mov	w1, #0x0                   	// #0
  419d3c:	mov	x2, #0x0                   	// #0
  419d40:	movk	x8, #0x1, lsl #48
  419d44:	cmp	x2, x6
  419d48:	b.ne	419e44 <_obstack_memory_used@@Base+0x9c98>  // b.any
  419d4c:	cmp	w25, #0x0
  419d50:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  419d54:	b.ne	419fd8 <_obstack_memory_used@@Base+0x9e2c>  // b.any
  419d58:	ldr	x3, [x19, #152]
  419d5c:	mov	w2, #0x1                   	// #1
  419d60:	ldrb	w0, [x19, #176]
  419d64:	cmp	x3, #0x0
  419d68:	str	w2, [x19, #180]
  419d6c:	and	w0, w0, #0xfffffffb
  419d70:	csel	w1, w1, w2, le
  419d74:	bfi	w0, w1, #1, #1
  419d78:	strb	w0, [x19, #176]
  419d7c:	b	419e90 <_obstack_memory_used@@Base+0x9ce4>
  419d80:	ldr	x0, [x20, #48]
  419d84:	cbz	x0, 419d00 <_obstack_memory_used@@Base+0x9b54>
  419d88:	ldrb	w0, [x21, #176]
  419d8c:	tbz	w0, #0, 419d00 <_obstack_memory_used@@Base+0x9b54>
  419d90:	mov	x26, #0x18                  	// #24
  419d94:	mul	x0, x24, x26
  419d98:	bl	402930 <malloc@plt>
  419d9c:	str	x0, [x21, #56]
  419da0:	cbz	x0, 419b80 <_obstack_memory_used@@Base+0x99d4>
  419da4:	mov	x0, #0x0                   	// #0
  419da8:	ldr	x1, [x21, #16]
  419dac:	cmp	x0, x1
  419db0:	b.cc	419df8 <_obstack_memory_used@@Base+0x9c4c>  // b.lo, b.ul, b.last
  419db4:	mov	x24, #0x0                   	// #0
  419db8:	mov	x27, #0x18                  	// #24
  419dbc:	ldr	x0, [x21, #16]
  419dc0:	cmp	x24, x0
  419dc4:	b.cs	419ca4 <_obstack_memory_used@@Base+0x9af8>  // b.hs, b.nlast
  419dc8:	ldr	x0, [x21, #48]
  419dcc:	mul	x28, x24, x27
  419dd0:	mov	x26, #0x0                   	// #0
  419dd4:	add	x0, x0, x28
  419dd8:	ldr	x2, [x0, #16]
  419ddc:	ldr	x0, [x21, #48]
  419de0:	add	x0, x0, x28
  419de4:	ldr	x0, [x0, #8]
  419de8:	cmp	x26, x0
  419dec:	b.lt	419e10 <_obstack_memory_used@@Base+0x9c64>  // b.tstop
  419df0:	add	x24, x24, #0x1
  419df4:	b	419dbc <_obstack_memory_used@@Base+0x9c10>
  419df8:	ldr	x1, [x21, #56]
  419dfc:	madd	x1, x0, x26, x1
  419e00:	add	x0, x0, #0x1
  419e04:	stp	xzr, xzr, [x1]
  419e08:	str	xzr, [x1, #16]
  419e0c:	b	419da8 <_obstack_memory_used@@Base+0x9bfc>
  419e10:	ldr	x3, [x2, x26, lsl #3]
  419e14:	mov	x1, x24
  419e18:	ldr	x0, [x21, #56]
  419e1c:	str	x2, [sp, #104]
  419e20:	madd	x0, x3, x27, x0
  419e24:	bl	4109e8 <_obstack_memory_used@@Base+0x83c>
  419e28:	tst	w0, #0xff
  419e2c:	b.eq	419e3c <_obstack_memory_used@@Base+0x9c90>  // b.none
  419e30:	add	x26, x26, #0x1
  419e34:	ldr	x2, [sp, #104]
  419e38:	b	419ddc <_obstack_memory_used@@Base+0x9c30>
  419e3c:	mov	w22, #0xc                   	// #12
  419e40:	b	419ca4 <_obstack_memory_used@@Base+0x9af8>
  419e44:	ldr	x0, [x19]
  419e48:	lsl	x5, x2, #4
  419e4c:	add	x3, x0, x2, lsl #4
  419e50:	ldrb	w3, [x3, #8]
  419e54:	sub	w3, w3, #0x1
  419e58:	cmp	w3, #0xb
  419e5c:	b.hi	419f88 <_obstack_memory_used@@Base+0x9ddc>  // b.pmore
  419e60:	ldrb	w3, [x4, w3, uxtw]
  419e64:	adr	x10, 419e70 <_obstack_memory_used@@Base+0x9cc4>
  419e68:	add	x3, x10, w3, sxtb #2
  419e6c:	br	x3
  419e70:	mov	w1, #0x1                   	// #1
  419e74:	add	x2, x2, #0x1
  419e78:	b	419d44 <_obstack_memory_used@@Base+0x9b98>
  419e7c:	ldr	x0, [x0, x5]
  419e80:	ldr	x3, [x0, #16]
  419e84:	cbnz	x3, 419e90 <_obstack_memory_used@@Base+0x9ce4>
  419e88:	ldr	x0, [x0, #24]
  419e8c:	cbz	x0, 419e74 <_obstack_memory_used@@Base+0x9cc8>
  419e90:	ldr	x0, [x19, #104]
  419e94:	mov	x22, #0x18                  	// #24
  419e98:	ldr	x1, [x19, #48]
  419e9c:	ldr	x0, [x0, #24]
  419ea0:	ldr	x0, [x0, #56]
  419ea4:	str	x0, [x19, #144]
  419ea8:	madd	x1, x0, x22, x1
  419eac:	add	x0, sp, #0x80
  419eb0:	bl	41344c <_obstack_memory_used@@Base+0x32a0>
  419eb4:	str	w0, [sp, #124]
  419eb8:	mov	w21, w0
  419ebc:	cbnz	w0, 419eec <_obstack_memory_used@@Base+0x9d40>
  419ec0:	ldr	x0, [x19, #152]
  419ec4:	cmp	x0, #0x0
  419ec8:	b.gt	41a088 <_obstack_memory_used@@Base+0x9edc>
  419ecc:	add	x2, sp, #0x80
  419ed0:	mov	x1, x19
  419ed4:	add	x0, sp, #0x7c
  419ed8:	mov	w3, #0x0                   	// #0
  419edc:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  419ee0:	str	x0, [x19, #72]
  419ee4:	cbnz	x0, 41a090 <_obstack_memory_used@@Base+0x9ee4>
  419ee8:	ldr	w21, [sp, #124]
  419eec:	str	w21, [sp, #120]
  419ef0:	ldr	x21, [x20]
  419ef4:	ldr	x0, [x21, #112]
  419ef8:	cbnz	x0, 41a114 <_obstack_memory_used@@Base+0x9f68>
  419efc:	mov	w0, #0xf                   	// #15
  419f00:	str	w0, [x21, #128]
  419f04:	ldr	x0, [x21, #32]
  419f08:	stp	xzr, xzr, [x21, #104]
  419f0c:	bl	402c20 <free@plt>
  419f10:	str	xzr, [x21, #32]
  419f14:	add	x0, sp, #0x98
  419f18:	bl	411658 <_obstack_memory_used@@Base+0x14ac>
  419f1c:	ldr	w0, [sp, #120]
  419f20:	cbnz	w0, 419894 <_obstack_memory_used@@Base+0x96e8>
  419f24:	ldr	w0, [sp, #120]
  419f28:	ldp	x19, x20, [sp, #16]
  419f2c:	ldp	x21, x22, [sp, #32]
  419f30:	ldp	x23, x24, [sp, #48]
  419f34:	ldp	x25, x26, [sp, #64]
  419f38:	ldp	x27, x28, [sp, #80]
  419f3c:	ldp	x29, x30, [sp], #304
  419f40:	ret
  419f44:	ldrsb	w0, [x0, x5]
  419f48:	cmp	w0, #0x0
  419f4c:	csel	w25, w25, w9, ge  // ge = tcont
  419f50:	b	419e74 <_obstack_memory_used@@Base+0x9cc8>
  419f54:	ldr	w0, [x0, x5]
  419f58:	cmp	w0, #0x40
  419f5c:	b.hi	419f7c <_obstack_memory_used@@Base+0x9dd0>  // b.pmore
  419f60:	cmp	w0, #0xf
  419f64:	b.ls	419e90 <_obstack_memory_used@@Base+0x9ce4>  // b.plast
  419f68:	sub	w0, w0, #0x10
  419f6c:	lsl	x0, x7, x0
  419f70:	tst	x0, x8
  419f74:	b.eq	419e90 <_obstack_memory_used@@Base+0x9ce4>  // b.none
  419f78:	b	419e74 <_obstack_memory_used@@Base+0x9cc8>
  419f7c:	cmp	w0, #0x80
  419f80:	b.eq	419e74 <_obstack_memory_used@@Base+0x9cc8>  // b.none
  419f84:	b	419e90 <_obstack_memory_used@@Base+0x9ce4>
  419f88:	bl	402b40 <abort@plt>
  419f8c:	ldr	x4, [x19]
  419f90:	lsl	x7, x0, #4
  419f94:	add	x2, x4, x0, lsl #4
  419f98:	ldrb	w3, [x2, #8]
  419f9c:	cmp	w3, #0x1
  419fa0:	b.ne	419fc8 <_obstack_memory_used@@Base+0x9e1c>  // b.any
  419fa4:	ldrsb	w3, [x4, x7]
  419fa8:	tbz	w3, #31, 419fb8 <_obstack_memory_used@@Base+0x9e0c>
  419fac:	ldrb	w3, [x2, #10]
  419fb0:	and	w3, w3, #0xffffffdf
  419fb4:	strb	w3, [x2, #10]
  419fb8:	add	x0, x0, #0x1
  419fbc:	cmp	x0, x6
  419fc0:	b.ne	419f8c <_obstack_memory_used@@Base+0x9de0>  // b.any
  419fc4:	b	419d58 <_obstack_memory_used@@Base+0x9bac>
  419fc8:	cmp	w3, #0x5
  419fcc:	b.ne	419fb8 <_obstack_memory_used@@Base+0x9e0c>  // b.any
  419fd0:	strb	w5, [x2, #8]
  419fd4:	b	419fb8 <_obstack_memory_used@@Base+0x9e0c>
  419fd8:	mov	x0, #0x0                   	// #0
  419fdc:	mov	w5, #0x7                   	// #7
  419fe0:	b	419fbc <_obstack_memory_used@@Base+0x9e10>
  419fe4:	ldr	x5, [sp, #144]
  419fe8:	ldr	x3, [x19]
  419fec:	ldr	x0, [x5, x6, lsl #3]
  419ff0:	add	x7, x3, x0, lsl #4
  419ff4:	ldrb	w1, [x7, #8]
  419ff8:	cmp	w1, #0x4
  419ffc:	b.ne	41a044 <_obstack_memory_used@@Base+0x9e98>  // b.any
  41a000:	mov	x1, #0x0                   	// #0
  41a004:	cmp	x1, x4
  41a008:	b.lt	41a058 <_obstack_memory_used@@Base+0x9eac>  // b.tstop
  41a00c:	b.eq	41a044 <_obstack_memory_used@@Base+0x9e98>  // b.none
  41a010:	ldr	x1, [x19, #40]
  41a014:	madd	x0, x0, x22, x1
  41a018:	ldr	x0, [x0, #16]
  41a01c:	ldr	x1, [x0]
  41a020:	add	x0, sp, #0x80
  41a024:	bl	410334 <_obstack_memory_used@@Base+0x188>
  41a028:	cbnz	x0, 41a044 <_obstack_memory_used@@Base+0x9e98>
  41a02c:	ldr	x0, [x19, #48]
  41a030:	madd	x1, x1, x22, x0
  41a034:	add	x0, sp, #0x80
  41a038:	bl	412594 <_obstack_memory_used@@Base+0x23e8>
  41a03c:	cbnz	w0, 41a10c <_obstack_memory_used@@Base+0x9f60>
  41a040:	mov	x6, #0x0                   	// #0
  41a044:	add	x6, x6, #0x1
  41a048:	ldr	x4, [sp, #136]
  41a04c:	cmp	x6, x4
  41a050:	b.lt	419fe4 <_obstack_memory_used@@Base+0x9e38>  // b.tstop
  41a054:	b	419ecc <_obstack_memory_used@@Base+0x9d20>
  41a058:	ldr	x2, [x5, x1, lsl #3]
  41a05c:	lsl	x8, x2, #4
  41a060:	add	x2, x3, x2, lsl #4
  41a064:	ldrb	w2, [x2, #8]
  41a068:	cmp	w2, #0x9
  41a06c:	b.ne	41a080 <_obstack_memory_used@@Base+0x9ed4>  // b.any
  41a070:	ldr	x8, [x3, x8]
  41a074:	ldr	x2, [x7]
  41a078:	cmp	x8, x2
  41a07c:	b.eq	41a010 <_obstack_memory_used@@Base+0x9e64>  // b.none
  41a080:	add	x1, x1, #0x1
  41a084:	b	41a004 <_obstack_memory_used@@Base+0x9e58>
  41a088:	mov	x6, #0x0                   	// #0
  41a08c:	b	41a048 <_obstack_memory_used@@Base+0x9e9c>
  41a090:	ldrsb	w1, [x0, #104]
  41a094:	tbz	w1, #31, 41a100 <_obstack_memory_used@@Base+0x9f54>
  41a098:	add	x2, sp, #0x80
  41a09c:	mov	x1, x19
  41a0a0:	mov	w3, #0x1                   	// #1
  41a0a4:	add	x0, sp, #0x7c
  41a0a8:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  41a0ac:	str	x0, [x19, #80]
  41a0b0:	add	x2, sp, #0x80
  41a0b4:	mov	x1, x19
  41a0b8:	mov	w3, #0x2                   	// #2
  41a0bc:	add	x0, sp, #0x7c
  41a0c0:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  41a0c4:	str	x0, [x19, #88]
  41a0c8:	mov	x1, x19
  41a0cc:	add	x2, sp, #0x80
  41a0d0:	add	x0, sp, #0x7c
  41a0d4:	mov	w3, #0x6                   	// #6
  41a0d8:	bl	413618 <_obstack_memory_used@@Base+0x346c>
  41a0dc:	str	x0, [x19, #96]
  41a0e0:	ldr	x1, [x19, #80]
  41a0e4:	cbz	x1, 419ee8 <_obstack_memory_used@@Base+0x9d3c>
  41a0e8:	ldr	x1, [x19, #88]
  41a0ec:	cbz	x1, 419ee8 <_obstack_memory_used@@Base+0x9d3c>
  41a0f0:	cbz	x0, 419ee8 <_obstack_memory_used@@Base+0x9d3c>
  41a0f4:	ldr	x0, [sp, #144]
  41a0f8:	bl	402c20 <free@plt>
  41a0fc:	b	419eec <_obstack_memory_used@@Base+0x9d40>
  41a100:	stp	x0, x0, [x19, #80]
  41a104:	str	x0, [x19, #96]
  41a108:	b	41a0f4 <_obstack_memory_used@@Base+0x9f48>
  41a10c:	mov	w21, w0
  41a110:	b	419eec <_obstack_memory_used@@Base+0x9d40>
  41a114:	ldr	x22, [x0]
  41a118:	bl	402c20 <free@plt>
  41a11c:	mov	x0, x22
  41a120:	b	419ef8 <_obstack_memory_used@@Base+0x9d4c>
  41a124:	mov	w0, #0xc                   	// #12
  41a128:	b	419f28 <_obstack_memory_used@@Base+0x9d7c>
  41a12c:	stp	x29, x30, [sp, #-16]!
  41a130:	mov	x5, x0
  41a134:	mov	x0, x2
  41a138:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  41a13c:	mov	x29, sp
  41a140:	mov	w6, #0x6f                  	// #111
  41a144:	ldr	x3, [x2, #3584]
  41a148:	ldrb	w2, [x0, #56]
  41a14c:	ubfx	w4, w3, #25, #1
  41a150:	and	w2, w2, w6
  41a154:	ubfiz	w4, w4, #4, #4
  41a158:	orr	w4, w4, #0xffffff80
  41a15c:	orr	w4, w4, w2
  41a160:	strb	w4, [x0, #56]
  41a164:	mov	x2, x1
  41a168:	mov	x1, x5
  41a16c:	bl	4196f4 <_obstack_memory_used@@Base+0x9548>
  41a170:	cbz	w0, 41a19c <_obstack_memory_used@@Base+0x9ff0>
  41a174:	adrp	x2, 41d000 <_obstack_memory_used@@Base+0xce54>
  41a178:	add	x2, x2, #0x90
  41a17c:	add	x1, x2, #0x20
  41a180:	add	x2, x2, #0x1a0
  41a184:	ldp	x29, x30, [sp], #16
  41a188:	ldr	x0, [x2, w0, sxtw #3]
  41a18c:	mov	w2, #0x5                   	// #5
  41a190:	add	x1, x1, x0
  41a194:	mov	x0, #0x0                   	// #0
  41a198:	b	402d60 <dcgettext@plt>
  41a19c:	mov	x0, #0x0                   	// #0
  41a1a0:	ldp	x29, x30, [sp], #16
  41a1a4:	ret
  41a1a8:	adrp	x1, 432000 <_obstack_memory_used@@Base+0x21e54>
  41a1ac:	mov	x2, x0
  41a1b0:	ldr	x0, [x1, #3584]
  41a1b4:	str	x2, [x1, #3584]
  41a1b8:	ret
  41a1bc:	stp	x29, x30, [sp, #-48]!
  41a1c0:	mov	x2, #0x100                 	// #256
  41a1c4:	mov	w1, #0x0                   	// #0
  41a1c8:	mov	x29, sp
  41a1cc:	stp	x19, x20, [sp, #16]
  41a1d0:	mov	x19, x0
  41a1d4:	ldr	x20, [x0]
  41a1d8:	str	x21, [sp, #32]
  41a1dc:	ldr	x21, [x0, #32]
  41a1e0:	mov	x0, x21
  41a1e4:	bl	402a10 <memset@plt>
  41a1e8:	ldr	x1, [x20, #72]
  41a1ec:	mov	x0, x19
  41a1f0:	mov	x2, x21
  41a1f4:	bl	413a68 <_obstack_memory_used@@Base+0x38bc>
  41a1f8:	ldp	x0, x1, [x20, #72]
  41a1fc:	cmp	x0, x1
  41a200:	b.eq	41a210 <_obstack_memory_used@@Base+0xa064>  // b.none
  41a204:	mov	x2, x21
  41a208:	mov	x0, x19
  41a20c:	bl	413a68 <_obstack_memory_used@@Base+0x38bc>
  41a210:	ldr	x0, [x20, #72]
  41a214:	ldr	x1, [x20, #88]
  41a218:	cmp	x0, x1
  41a21c:	b.eq	41a22c <_obstack_memory_used@@Base+0xa080>  // b.none
  41a220:	mov	x2, x21
  41a224:	mov	x0, x19
  41a228:	bl	413a68 <_obstack_memory_used@@Base+0x38bc>
  41a22c:	ldr	x0, [x20, #72]
  41a230:	ldr	x1, [x20, #96]
  41a234:	cmp	x0, x1
  41a238:	b.eq	41a248 <_obstack_memory_used@@Base+0xa09c>  // b.none
  41a23c:	mov	x2, x21
  41a240:	mov	x0, x19
  41a244:	bl	413a68 <_obstack_memory_used@@Base+0x38bc>
  41a248:	ldrb	w0, [x19, #56]
  41a24c:	ldr	x21, [sp, #32]
  41a250:	orr	w0, w0, #0x8
  41a254:	strb	w0, [x19, #56]
  41a258:	mov	w0, #0x0                   	// #0
  41a25c:	ldp	x19, x20, [sp, #16]
  41a260:	ldp	x29, x30, [sp], #48
  41a264:	ret
  41a268:	sub	sp, sp, #0x80
  41a26c:	cmp	x3, #0x0
  41a270:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  41a274:	stp	x29, x30, [sp, #16]
  41a278:	add	x29, sp, #0x10
  41a27c:	stp	x19, x20, [sp, #32]
  41a280:	stp	x21, x22, [sp, #48]
  41a284:	mov	x22, x0
  41a288:	and	w0, w7, #0xff
  41a28c:	stp	x23, x24, [sp, #64]
  41a290:	add	x21, x3, x4
  41a294:	stp	x25, x26, [sp, #80]
  41a298:	stp	x27, x28, [sp, #96]
  41a29c:	str	w0, [sp, #124]
  41a2a0:	b.gt	41a51c <_obstack_memory_used@@Base+0xa370>
  41a2a4:	mov	x26, x1
  41a2a8:	mov	x25, x2
  41a2ac:	mov	x23, x3
  41a2b0:	mov	x27, x5
  41a2b4:	mov	x19, x6
  41a2b8:	cmp	x21, x2
  41a2bc:	b.gt	41a33c <_obstack_memory_used@@Base+0xa190>
  41a2c0:	cmp	x4, #0x0
  41a2c4:	ccmp	x3, x21, #0x4, ge  // ge = tcont
  41a2c8:	b.gt	41a33c <_obstack_memory_used@@Base+0xa190>
  41a2cc:	tbnz	x21, #63, 41a344 <_obstack_memory_used@@Base+0xa198>
  41a2d0:	cmp	x4, #0x0
  41a2d4:	ccmp	x3, x21, #0x0, lt  // lt = tstop
  41a2d8:	csel	x21, x21, xzr, gt
  41a2dc:	ldrb	w0, [x22, #56]
  41a2e0:	cmp	x21, x23
  41a2e4:	ubfx	x28, x0, #5, #2
  41a2e8:	b.le	41a300 <_obstack_memory_used@@Base+0xa154>
  41a2ec:	ldr	x1, [x22, #32]
  41a2f0:	cbz	x1, 41a300 <_obstack_memory_used@@Base+0xa154>
  41a2f4:	tbnz	w0, #3, 41a300 <_obstack_memory_used@@Base+0xa154>
  41a2f8:	mov	x0, x22
  41a2fc:	bl	41a1bc <_obstack_memory_used@@Base+0xa010>
  41a300:	ldrb	w0, [x22, #56]
  41a304:	tbnz	w0, #4, 41a330 <_obstack_memory_used@@Base+0xa184>
  41a308:	cbz	x19, 41a3c4 <_obstack_memory_used@@Base+0xa218>
  41a30c:	and	w0, w0, #0x6
  41a310:	cmp	w0, #0x4
  41a314:	ldr	x1, [x22, #48]
  41a318:	b.ne	41a34c <_obstack_memory_used@@Base+0xa1a0>  // b.any
  41a31c:	ldr	x20, [x19]
  41a320:	cmp	x1, x20
  41a324:	b.cc	41a34c <_obstack_memory_used@@Base+0xa1a0>  // b.lo, b.ul, b.last
  41a328:	cmp	x20, #0x0
  41a32c:	b.gt	41a350 <_obstack_memory_used@@Base+0xa1a4>
  41a330:	mov	x20, #0x1                   	// #1
  41a334:	mov	x19, #0x0                   	// #0
  41a338:	b	41a350 <_obstack_memory_used@@Base+0xa1a4>
  41a33c:	mov	x21, x25
  41a340:	b	41a2dc <_obstack_memory_used@@Base+0xa130>
  41a344:	mov	x21, #0x0                   	// #0
  41a348:	b	41a2dc <_obstack_memory_used@@Base+0xa130>
  41a34c:	add	x20, x1, #0x1
  41a350:	lsl	x0, x20, #4
  41a354:	bl	402930 <malloc@plt>
  41a358:	mov	x24, x0
  41a35c:	cbz	x0, 41a524 <_obstack_memory_used@@Base+0xa378>
  41a360:	str	w28, [sp]
  41a364:	mov	x7, x0
  41a368:	mov	x6, x20
  41a36c:	mov	x5, x27
  41a370:	mov	x4, x21
  41a374:	mov	x3, x23
  41a378:	mov	x2, x25
  41a37c:	mov	x1, x26
  41a380:	mov	x0, x22
  41a384:	bl	417694 <_obstack_memory_used@@Base+0x74e8>
  41a388:	cbz	w0, 41a3cc <_obstack_memory_used@@Base+0xa220>
  41a38c:	cmp	w0, #0x1
  41a390:	b.eq	41a514 <_obstack_memory_used@@Base+0xa368>  // b.none
  41a394:	mov	x19, #0xfffffffffffffffe    	// #-2
  41a398:	mov	x0, x24
  41a39c:	bl	402c20 <free@plt>
  41a3a0:	mov	x0, x19
  41a3a4:	ldp	x29, x30, [sp, #16]
  41a3a8:	ldp	x19, x20, [sp, #32]
  41a3ac:	ldp	x21, x22, [sp, #48]
  41a3b0:	ldp	x23, x24, [sp, #64]
  41a3b4:	ldp	x25, x26, [sp, #80]
  41a3b8:	ldp	x27, x28, [sp, #96]
  41a3bc:	add	sp, sp, #0x80
  41a3c0:	ret
  41a3c4:	mov	x20, #0x1                   	// #1
  41a3c8:	b	41a350 <_obstack_memory_used@@Base+0xa1a4>
  41a3cc:	cbnz	x19, 41a3e8 <_obstack_memory_used@@Base+0xa23c>
  41a3d0:	ldr	w0, [sp, #124]
  41a3d4:	ldr	x19, [x24]
  41a3d8:	cbz	w0, 41a398 <_obstack_memory_used@@Base+0xa1ec>
  41a3dc:	ldr	x19, [x24, #8]
  41a3e0:	sub	x19, x19, x23
  41a3e4:	b	41a398 <_obstack_memory_used@@Base+0xa1ec>
  41a3e8:	ldrb	w21, [x22, #56]
  41a3ec:	add	x26, x20, #0x1
  41a3f0:	ubfx	x21, x21, #1, #2
  41a3f4:	cbnz	w21, 41a494 <_obstack_memory_used@@Base+0xa2e8>
  41a3f8:	lsl	x27, x26, #3
  41a3fc:	mov	x0, x27
  41a400:	bl	402930 <malloc@plt>
  41a404:	str	x0, [x19, #8]
  41a408:	mov	x21, x0
  41a40c:	cbnz	x0, 41a42c <_obstack_memory_used@@Base+0xa280>
  41a410:	mov	w21, #0x0                   	// #0
  41a414:	ldrb	w0, [x22, #56]
  41a418:	bfi	w0, w21, #1, #2
  41a41c:	strb	w0, [x22, #56]
  41a420:	tst	w0, #0x6
  41a424:	b.ne	41a3d0 <_obstack_memory_used@@Base+0xa224>  // b.any
  41a428:	b	41a394 <_obstack_memory_used@@Base+0xa1e8>
  41a42c:	mov	x0, x27
  41a430:	bl	402930 <malloc@plt>
  41a434:	str	x0, [x19, #16]
  41a438:	cbnz	x0, 41a448 <_obstack_memory_used@@Base+0xa29c>
  41a43c:	mov	x0, x21
  41a440:	bl	402c20 <free@plt>
  41a444:	b	41a410 <_obstack_memory_used@@Base+0xa264>
  41a448:	mov	w21, #0x1                   	// #1
  41a44c:	str	x26, [x19]
  41a450:	mov	x1, x24
  41a454:	mov	x0, #0x0                   	// #0
  41a458:	cmp	x20, x0
  41a45c:	b.gt	41a4ec <_obstack_memory_used@@Base+0xa340>
  41a460:	cmp	x20, #0x0
  41a464:	mov	x0, #0xffffffffffffffff    	// #-1
  41a468:	csel	x20, x20, xzr, ge  // ge = tcont
  41a46c:	ldr	x1, [x19]
  41a470:	cmp	x20, x1
  41a474:	b.cs	41a414 <_obstack_memory_used@@Base+0xa268>  // b.hs, b.nlast
  41a478:	ldr	x2, [x19, #16]
  41a47c:	lsl	x1, x20, #3
  41a480:	add	x20, x20, #0x1
  41a484:	str	x0, [x2, x1]
  41a488:	ldr	x2, [x19, #8]
  41a48c:	str	x0, [x2, x1]
  41a490:	b	41a46c <_obstack_memory_used@@Base+0xa2c0>
  41a494:	cmp	w21, #0x1
  41a498:	b.ne	41a4e4 <_obstack_memory_used@@Base+0xa338>  // b.any
  41a49c:	ldr	x0, [x19]
  41a4a0:	cmp	x0, x26
  41a4a4:	b.cs	41a450 <_obstack_memory_used@@Base+0xa2a4>  // b.hs, b.nlast
  41a4a8:	ldr	x0, [x19, #8]
  41a4ac:	lsl	x28, x26, #3
  41a4b0:	mov	x1, x28
  41a4b4:	bl	402a80 <realloc@plt>
  41a4b8:	mov	x27, x0
  41a4bc:	cbz	x0, 41a410 <_obstack_memory_used@@Base+0xa264>
  41a4c0:	ldr	x0, [x19, #16]
  41a4c4:	mov	x1, x28
  41a4c8:	bl	402a80 <realloc@plt>
  41a4cc:	cbnz	x0, 41a4d8 <_obstack_memory_used@@Base+0xa32c>
  41a4d0:	mov	x0, x27
  41a4d4:	b	41a440 <_obstack_memory_used@@Base+0xa294>
  41a4d8:	stp	x26, x27, [x19]
  41a4dc:	str	x0, [x19, #16]
  41a4e0:	b	41a450 <_obstack_memory_used@@Base+0xa2a4>
  41a4e4:	mov	w21, #0x2                   	// #2
  41a4e8:	b	41a450 <_obstack_memory_used@@Base+0xa2a4>
  41a4ec:	ldr	x3, [x19, #8]
  41a4f0:	lsl	x2, x0, #3
  41a4f4:	ldr	x4, [x1]
  41a4f8:	add	x0, x0, #0x1
  41a4fc:	str	x4, [x3, x2]
  41a500:	add	x1, x1, #0x10
  41a504:	ldr	x3, [x19, #16]
  41a508:	ldur	x4, [x1, #-8]
  41a50c:	str	x4, [x3, x2]
  41a510:	b	41a458 <_obstack_memory_used@@Base+0xa2ac>
  41a514:	mov	x19, #0xffffffffffffffff    	// #-1
  41a518:	b	41a398 <_obstack_memory_used@@Base+0xa1ec>
  41a51c:	mov	x19, #0xffffffffffffffff    	// #-1
  41a520:	b	41a3a0 <_obstack_memory_used@@Base+0xa1f4>
  41a524:	mov	x19, #0xfffffffffffffffe    	// #-2
  41a528:	b	41a3a0 <_obstack_memory_used@@Base+0xa1f4>
  41a52c:	stp	x29, x30, [sp, #-96]!
  41a530:	cmp	x2, #0x0
  41a534:	ccmp	x4, #0x0, #0x1, ge  // ge = tcont
  41a538:	mov	x29, sp
  41a53c:	stp	x19, x20, [sp, #16]
  41a540:	stp	x21, x22, [sp, #32]
  41a544:	stp	x23, x24, [sp, #48]
  41a548:	stp	x25, x26, [sp, #64]
  41a54c:	stp	x27, x28, [sp, #80]
  41a550:	b.ge	41a578 <_obstack_memory_used@@Base+0xa3cc>  // b.tcont
  41a554:	mov	x19, #0xfffffffffffffffe    	// #-2
  41a558:	mov	x0, x19
  41a55c:	ldp	x19, x20, [sp, #16]
  41a560:	ldp	x21, x22, [sp, #32]
  41a564:	ldp	x23, x24, [sp, #48]
  41a568:	ldp	x25, x26, [sp, #64]
  41a56c:	ldp	x27, x28, [sp, #80]
  41a570:	ldp	x29, x30, [sp], #96
  41a574:	ret
  41a578:	mov	x23, x0
  41a57c:	ldr	x0, [sp, #96]
  41a580:	tbnz	x0, #63, 41a554 <_obstack_memory_used@@Base+0xa3a8>
  41a584:	mov	x19, x2
  41a588:	mov	x21, x4
  41a58c:	adds	x27, x2, x4
  41a590:	b.vs	41a554 <_obstack_memory_used@@Base+0xa3a8>
  41a594:	mov	x28, x1
  41a598:	mov	x24, x5
  41a59c:	mov	x25, x6
  41a5a0:	mov	x26, x7
  41a5a4:	cbz	x4, 41a618 <_obstack_memory_used@@Base+0xa46c>
  41a5a8:	mov	x22, x3
  41a5ac:	cbz	x2, 41a614 <_obstack_memory_used@@Base+0xa468>
  41a5b0:	mov	x0, x27
  41a5b4:	bl	402930 <malloc@plt>
  41a5b8:	mov	x20, x0
  41a5bc:	cbz	x0, 41a554 <_obstack_memory_used@@Base+0xa3a8>
  41a5c0:	mov	x1, x28
  41a5c4:	mov	x28, x20
  41a5c8:	mov	x2, x19
  41a5cc:	bl	402750 <memcpy@plt>
  41a5d0:	mov	x2, x21
  41a5d4:	mov	x1, x22
  41a5d8:	add	x0, x20, x19
  41a5dc:	bl	402750 <memcpy@plt>
  41a5e0:	ldrb	w7, [sp, #104]
  41a5e4:	mov	x6, x26
  41a5e8:	ldr	x5, [sp, #96]
  41a5ec:	mov	x4, x25
  41a5f0:	mov	x3, x24
  41a5f4:	mov	x2, x27
  41a5f8:	mov	x1, x28
  41a5fc:	mov	x0, x23
  41a600:	bl	41a268 <_obstack_memory_used@@Base+0xa0bc>
  41a604:	mov	x19, x0
  41a608:	mov	x0, x20
  41a60c:	bl	402c20 <free@plt>
  41a610:	b	41a558 <_obstack_memory_used@@Base+0xa3ac>
  41a614:	mov	x28, x3
  41a618:	mov	x20, #0x0                   	// #0
  41a61c:	b	41a5e0 <_obstack_memory_used@@Base+0xa434>
  41a620:	stp	x29, x30, [sp, #-64]!
  41a624:	mov	x29, sp
  41a628:	stp	x19, x20, [sp, #16]
  41a62c:	mov	w20, w2
  41a630:	mov	x19, x0
  41a634:	tst	x20, #0x1
  41a638:	stp	x21, x22, [sp, #32]
  41a63c:	mov	x21, #0xb2fc                	// #45820
  41a640:	str	x23, [sp, #48]
  41a644:	mov	x23, #0x2c6                 	// #710
  41a648:	stp	xzr, xzr, [x0]
  41a64c:	mov	x22, x1
  41a650:	movk	x21, #0x3, lsl #16
  41a654:	str	xzr, [x0, #16]
  41a658:	movk	x23, #0x101, lsl #16
  41a65c:	mov	x0, #0x100                 	// #256
  41a660:	csel	x23, x21, x23, ne  // ne = any
  41a664:	bl	402930 <malloc@plt>
  41a668:	str	x0, [x19, #32]
  41a66c:	cbz	x0, 41a718 <_obstack_memory_used@@Base+0xa56c>
  41a670:	sbfiz	x21, x20, #21, #32
  41a674:	and	x21, x21, #0x400000
  41a678:	orr	x21, x21, x23
  41a67c:	tbz	w20, #2, 41a6fc <_obstack_memory_used@@Base+0xa550>
  41a680:	and	x21, x21, #0xffffffffffffffbf
  41a684:	mov	w0, #0x1                   	// #1
  41a688:	orr	x21, x21, #0x100
  41a68c:	ubfx	x20, x20, #3, #1
  41a690:	ubfiz	w0, w0, #7, #1
  41a694:	mov	w1, #0x6f                  	// #111
  41a698:	str	xzr, [x19, #40]
  41a69c:	orr	w20, w0, w20, lsl #4
  41a6a0:	ldrb	w0, [x19, #56]
  41a6a4:	and	w0, w0, w1
  41a6a8:	orr	w20, w20, w0
  41a6ac:	strb	w20, [x19, #56]
  41a6b0:	mov	x0, x22
  41a6b4:	bl	402790 <strlen@plt>
  41a6b8:	mov	x2, x0
  41a6bc:	mov	x3, x21
  41a6c0:	mov	x1, x22
  41a6c4:	mov	x0, x19
  41a6c8:	bl	4196f4 <_obstack_memory_used@@Base+0x9548>
  41a6cc:	mov	w20, w0
  41a6d0:	cmp	w0, #0x10
  41a6d4:	b.eq	41a704 <_obstack_memory_used@@Base+0xa558>  // b.none
  41a6d8:	cbnz	w0, 41a708 <_obstack_memory_used@@Base+0xa55c>
  41a6dc:	mov	x0, x19
  41a6e0:	bl	41a1bc <_obstack_memory_used@@Base+0xa010>
  41a6e4:	mov	w0, w20
  41a6e8:	ldp	x19, x20, [sp, #16]
  41a6ec:	ldp	x21, x22, [sp, #32]
  41a6f0:	ldr	x23, [sp, #48]
  41a6f4:	ldp	x29, x30, [sp], #64
  41a6f8:	ret
  41a6fc:	mov	w0, #0x0                   	// #0
  41a700:	b	41a68c <_obstack_memory_used@@Base+0xa4e0>
  41a704:	mov	w20, #0x8                   	// #8
  41a708:	ldr	x0, [x19, #32]
  41a70c:	bl	402c20 <free@plt>
  41a710:	str	xzr, [x19, #32]
  41a714:	b	41a6e4 <_obstack_memory_used@@Base+0xa538>
  41a718:	mov	w20, #0xc                   	// #12
  41a71c:	b	41a6e4 <_obstack_memory_used@@Base+0xa538>
  41a720:	stp	x29, x30, [sp, #-48]!
  41a724:	cmp	w0, #0x10
  41a728:	mov	x29, sp
  41a72c:	stp	x19, x20, [sp, #16]
  41a730:	stp	x21, x22, [sp, #32]
  41a734:	b.ls	41a73c <_obstack_memory_used@@Base+0xa590>  // b.plast
  41a738:	bl	402b40 <abort@plt>
  41a73c:	adrp	x4, 41d000 <_obstack_memory_used@@Base+0xce54>
  41a740:	add	x4, x4, #0x90
  41a744:	add	x1, x4, #0x20
  41a748:	add	x4, x4, #0x1a0
  41a74c:	mov	x21, x2
  41a750:	mov	w2, #0x5                   	// #5
  41a754:	mov	x20, x3
  41a758:	ldr	x0, [x4, w0, sxtw #3]
  41a75c:	add	x1, x1, x0
  41a760:	mov	x0, #0x0                   	// #0
  41a764:	bl	402d60 <dcgettext@plt>
  41a768:	mov	x22, x0
  41a76c:	bl	402790 <strlen@plt>
  41a770:	add	x19, x0, #0x1
  41a774:	cbz	x20, 41a798 <_obstack_memory_used@@Base+0xa5ec>
  41a778:	mov	x2, x19
  41a77c:	cmp	x19, x20
  41a780:	b.ls	41a78c <_obstack_memory_used@@Base+0xa5e0>  // b.plast
  41a784:	sub	x2, x20, #0x1
  41a788:	strb	wzr, [x21, x2]
  41a78c:	mov	x1, x22
  41a790:	mov	x0, x21
  41a794:	bl	402750 <memcpy@plt>
  41a798:	mov	x0, x19
  41a79c:	ldp	x19, x20, [sp, #16]
  41a7a0:	ldp	x21, x22, [sp, #32]
  41a7a4:	ldp	x29, x30, [sp], #48
  41a7a8:	ret
  41a7ac:	stp	x29, x30, [sp, #-32]!
  41a7b0:	mov	x29, sp
  41a7b4:	str	x19, [sp, #16]
  41a7b8:	mov	x19, x0
  41a7bc:	ldr	x0, [x0]
  41a7c0:	cbz	x0, 41a7c8 <_obstack_memory_used@@Base+0xa61c>
  41a7c4:	bl	41169c <_obstack_memory_used@@Base+0x14f0>
  41a7c8:	ldr	x0, [x19, #32]
  41a7cc:	stp	xzr, xzr, [x19]
  41a7d0:	bl	402c20 <free@plt>
  41a7d4:	str	xzr, [x19, #32]
  41a7d8:	ldr	x0, [x19, #40]
  41a7dc:	bl	402c20 <free@plt>
  41a7e0:	str	xzr, [x19, #40]
  41a7e4:	ldr	x19, [sp, #16]
  41a7e8:	ldp	x29, x30, [sp], #32
  41a7ec:	ret
  41a7f0:	tst	w4, #0xfffffff8
  41a7f4:	b.ne	41a894 <_obstack_memory_used@@Base+0xa6e8>  // b.any
  41a7f8:	sub	sp, sp, #0x50
  41a7fc:	stp	x29, x30, [sp, #16]
  41a800:	add	x29, sp, #0x10
  41a804:	stp	x19, x20, [sp, #32]
  41a808:	mov	x20, x0
  41a80c:	mov	w19, w4
  41a810:	stp	x21, x22, [sp, #48]
  41a814:	mov	x21, x1
  41a818:	mov	x22, x3
  41a81c:	str	x23, [sp, #64]
  41a820:	mov	x23, x2
  41a824:	tbz	w19, #2, 41a874 <_obstack_memory_used@@Base+0xa6c8>
  41a828:	ldp	x3, x5, [x3]
  41a82c:	ldrb	w0, [x20, #56]
  41a830:	str	w19, [sp]
  41a834:	tbz	w0, #4, 41a888 <_obstack_memory_used@@Base+0xa6dc>
  41a838:	mov	x7, #0x0                   	// #0
  41a83c:	mov	x6, #0x0                   	// #0
  41a840:	mov	x1, x21
  41a844:	mov	x4, x5
  41a848:	mov	x2, x5
  41a84c:	mov	x0, x20
  41a850:	bl	417694 <_obstack_memory_used@@Base+0x74e8>
  41a854:	cmp	w0, #0x0
  41a858:	cset	w0, ne  // ne = any
  41a85c:	ldp	x29, x30, [sp, #16]
  41a860:	ldp	x19, x20, [sp, #32]
  41a864:	ldp	x21, x22, [sp, #48]
  41a868:	ldr	x23, [sp, #64]
  41a86c:	add	sp, sp, #0x50
  41a870:	ret
  41a874:	mov	x0, x1
  41a878:	bl	402790 <strlen@plt>
  41a87c:	mov	x3, #0x0                   	// #0
  41a880:	mov	x5, x0
  41a884:	b	41a82c <_obstack_memory_used@@Base+0xa680>
  41a888:	mov	x7, x22
  41a88c:	mov	x6, x23
  41a890:	b	41a840 <_obstack_memory_used@@Base+0xa694>
  41a894:	mov	w0, #0x2                   	// #2
  41a898:	ret
  41a89c:	mov	x6, x4
  41a8a0:	mov	x5, x2
  41a8a4:	mov	w7, #0x1                   	// #1
  41a8a8:	mov	x4, #0x0                   	// #0
  41a8ac:	b	41a268 <_obstack_memory_used@@Base+0xa0bc>
  41a8b0:	mov	x6, x5
  41a8b4:	mov	w7, #0x0                   	// #0
  41a8b8:	mov	x5, x2
  41a8bc:	b	41a268 <_obstack_memory_used@@Base+0xa0bc>
  41a8c0:	sub	sp, sp, #0x20
  41a8c4:	mov	w8, #0x1                   	// #1
  41a8c8:	stp	x29, x30, [sp, #16]
  41a8cc:	add	x29, sp, #0x10
  41a8d0:	str	x7, [sp]
  41a8d4:	mov	x7, x6
  41a8d8:	strb	w8, [sp, #8]
  41a8dc:	mov	x6, #0x0                   	// #0
  41a8e0:	bl	41a52c <_obstack_memory_used@@Base+0xa380>
  41a8e4:	ldp	x29, x30, [sp, #16]
  41a8e8:	add	sp, sp, #0x20
  41a8ec:	ret
  41a8f0:	sub	sp, sp, #0x20
  41a8f4:	stp	x29, x30, [sp, #16]
  41a8f8:	add	x29, sp, #0x10
  41a8fc:	ldr	x8, [sp, #32]
  41a900:	str	x8, [sp]
  41a904:	strb	wzr, [sp, #8]
  41a908:	bl	41a52c <_obstack_memory_used@@Base+0xa380>
  41a90c:	ldp	x29, x30, [sp, #16]
  41a910:	add	sp, sp, #0x20
  41a914:	ret
  41a918:	ldrb	w5, [x0, #56]
  41a91c:	cbz	x2, 41a938 <_obstack_memory_used@@Base+0xa78c>
  41a920:	mov	w6, #0x1                   	// #1
  41a924:	bfi	w5, w6, #1, #2
  41a928:	strb	w5, [x0, #56]
  41a92c:	stp	x2, x3, [x1]
  41a930:	str	x4, [x1, #16]
  41a934:	ret
  41a938:	and	w5, w5, #0xfffffff9
  41a93c:	strb	w5, [x0, #56]
  41a940:	stp	xzr, xzr, [x1]
  41a944:	str	xzr, [x1, #16]
  41a948:	b	41a934 <_obstack_memory_used@@Base+0xa788>
  41a94c:	stp	x29, x30, [sp, #-48]!
  41a950:	mov	w1, #0x0                   	// #0
  41a954:	mov	x29, sp
  41a958:	stp	x19, x20, [sp, #16]
  41a95c:	mov	x20, #0x12                  	// #18
  41a960:	movk	x20, #0x1, lsl #32
  41a964:	mov	x19, x0
  41a968:	add	x2, sp, #0x28
  41a96c:	bl	402c50 <acl_get_entry@plt>
  41a970:	cmp	w0, #0x0
  41a974:	b.le	41a9b4 <_obstack_memory_used@@Base+0xa808>
  41a978:	ldr	x0, [sp, #40]
  41a97c:	add	x1, sp, #0x24
  41a980:	bl	402a00 <acl_get_tag_type@plt>
  41a984:	tbnz	w0, #31, 41a9b0 <_obstack_memory_used@@Base+0xa804>
  41a988:	ldr	w1, [sp, #36]
  41a98c:	cmp	w1, #0x20
  41a990:	b.hi	41a9c0 <_obstack_memory_used@@Base+0xa814>  // b.pmore
  41a994:	lsr	x1, x20, x1
  41a998:	tbz	w1, #0, 41a9c0 <_obstack_memory_used@@Base+0xa814>
  41a99c:	add	x2, sp, #0x28
  41a9a0:	mov	x0, x19
  41a9a4:	mov	w1, #0x1                   	// #1
  41a9a8:	bl	402c50 <acl_get_entry@plt>
  41a9ac:	b	41a970 <_obstack_memory_used@@Base+0xa7c4>
  41a9b0:	mov	w0, #0xffffffff            	// #-1
  41a9b4:	ldp	x19, x20, [sp, #16]
  41a9b8:	ldp	x29, x30, [sp], #48
  41a9bc:	ret
  41a9c0:	mov	w0, #0x1                   	// #1
  41a9c4:	b	41a9b4 <_obstack_memory_used@@Base+0xa808>
  41a9c8:	stp	x29, x30, [sp, #-16]!
  41a9cc:	mov	x29, sp
  41a9d0:	bl	4027f0 <acl_entries@plt>
  41a9d4:	cmp	w0, #0x0
  41a9d8:	cset	w0, gt
  41a9dc:	ldp	x29, x30, [sp], #16
  41a9e0:	ret
  41a9e4:	stp	x29, x30, [sp, #-32]!
  41a9e8:	mov	x29, sp
  41a9ec:	str	x19, [sp, #16]
  41a9f0:	mov	x19, x0
  41a9f4:	ldr	x0, [x0, #8]
  41a9f8:	cbz	x0, 41aa00 <_obstack_memory_used@@Base+0xa854>
  41a9fc:	bl	402e70 <acl_free@plt>
  41aa00:	ldr	x0, [x19, #16]
  41aa04:	cbz	x0, 41aa14 <_obstack_memory_used@@Base+0xa868>
  41aa08:	ldr	x19, [sp, #16]
  41aa0c:	ldp	x29, x30, [sp], #32
  41aa10:	b	402e70 <acl_free@plt>
  41aa14:	ldr	x19, [sp, #16]
  41aa18:	ldp	x29, x30, [sp], #32
  41aa1c:	ret
  41aa20:	stp	x29, x30, [sp, #-48]!
  41aa24:	cmn	w1, #0x1
  41aa28:	mov	x29, sp
  41aa2c:	stp	xzr, xzr, [x3]
  41aa30:	str	w2, [x3]
  41aa34:	stp	x19, x20, [sp, #16]
  41aa38:	mov	w20, w2
  41aa3c:	mov	x19, x3
  41aa40:	stp	xzr, xzr, [x3, #16]
  41aa44:	str	x21, [sp, #32]
  41aa48:	mov	x21, x0
  41aa4c:	b.eq	41aa88 <_obstack_memory_used@@Base+0xa8dc>  // b.none
  41aa50:	mov	w0, w1
  41aa54:	bl	402ad0 <acl_get_fd@plt>
  41aa58:	str	x0, [x19, #8]
  41aa5c:	ldr	x0, [x19, #8]
  41aa60:	cbnz	x0, 41aa94 <_obstack_memory_used@@Base+0xa8e8>
  41aa64:	bl	402df0 <__errno_location@plt>
  41aa68:	ldr	w0, [x0]
  41aa6c:	bl	41ae14 <_obstack_memory_used@@Base+0xac68>
  41aa70:	and	w0, w0, #0xff
  41aa74:	neg	w0, w0
  41aa78:	ldp	x19, x20, [sp, #16]
  41aa7c:	ldr	x21, [sp, #32]
  41aa80:	ldp	x29, x30, [sp], #48
  41aa84:	ret
  41aa88:	mov	w1, #0x8000                	// #32768
  41aa8c:	bl	402c10 <acl_get_file@plt>
  41aa90:	b	41aa58 <_obstack_memory_used@@Base+0xa8ac>
  41aa94:	and	w1, w20, #0xf000
  41aa98:	cmp	w1, #0x4, lsl #12
  41aa9c:	b.ne	41aab8 <_obstack_memory_used@@Base+0xa90c>  // b.any
  41aaa0:	mov	x0, x21
  41aaa4:	bl	402c10 <acl_get_file@plt>
  41aaa8:	cmp	x0, #0x0
  41aaac:	str	x0, [x19, #16]
  41aab0:	csetm	w0, eq  // eq = none
  41aab4:	b	41aa78 <_obstack_memory_used@@Base+0xa8cc>
  41aab8:	mov	w0, #0x0                   	// #0
  41aabc:	b	41aa78 <_obstack_memory_used@@Base+0xa8cc>
  41aac0:	stp	x29, x30, [sp, #-64]!
  41aac4:	mov	x29, sp
  41aac8:	stp	x21, x22, [sp, #32]
  41aacc:	mov	x21, x1
  41aad0:	ldr	x1, [x0, #8]
  41aad4:	stp	x19, x20, [sp, #16]
  41aad8:	mov	x20, x0
  41aadc:	str	x23, [sp, #48]
  41aae0:	cbz	x1, 41ab30 <_obstack_memory_used@@Base+0xa984>
  41aae4:	mov	w0, w2
  41aae8:	mov	w22, w3
  41aaec:	mov	x23, x4
  41aaf0:	cmn	w2, #0x1
  41aaf4:	b.eq	41ab4c <_obstack_memory_used@@Base+0xa9a0>  // b.none
  41aaf8:	bl	4027c0 <acl_set_fd@plt>
  41aafc:	mov	w19, w0
  41ab00:	cbz	w0, 41ab60 <_obstack_memory_used@@Base+0xa9b4>
  41ab04:	bl	402df0 <__errno_location@plt>
  41ab08:	ldr	w0, [x0]
  41ab0c:	bl	41ae14 <_obstack_memory_used@@Base+0xac68>
  41ab10:	tst	w0, #0xff
  41ab14:	b.ne	41ab34 <_obstack_memory_used@@Base+0xa988>  // b.any
  41ab18:	mov	w0, #0x1                   	// #1
  41ab1c:	strb	w0, [x20, #24]
  41ab20:	cbnz	w22, 41ab30 <_obstack_memory_used@@Base+0xa984>
  41ab24:	ldr	x0, [x20, #8]
  41ab28:	bl	41a94c <_obstack_memory_used@@Base+0xa7a0>
  41ab2c:	cbnz	w0, 41ab34 <_obstack_memory_used@@Base+0xa988>
  41ab30:	mov	w19, #0x0                   	// #0
  41ab34:	mov	w0, w19
  41ab38:	ldp	x19, x20, [sp, #16]
  41ab3c:	ldp	x21, x22, [sp, #32]
  41ab40:	ldr	x23, [sp, #48]
  41ab44:	ldp	x29, x30, [sp], #64
  41ab48:	ret
  41ab4c:	mov	x2, x1
  41ab50:	mov	x0, x21
  41ab54:	mov	w1, #0x8000                	// #32768
  41ab58:	bl	402aa0 <acl_set_file@plt>
  41ab5c:	b	41aafc <_obstack_memory_used@@Base+0xa950>
  41ab60:	ldr	w19, [x20]
  41ab64:	mov	w0, #0x1                   	// #1
  41ab68:	strb	w0, [x23]
  41ab6c:	and	w19, w19, #0xf000
  41ab70:	cmp	w19, #0x4, lsl #12
  41ab74:	b.ne	41ab30 <_obstack_memory_used@@Base+0xa984>  // b.any
  41ab78:	cbnz	w22, 41abac <_obstack_memory_used@@Base+0xaa00>
  41ab7c:	ldr	x0, [x20, #16]
  41ab80:	cbz	x0, 41abac <_obstack_memory_used@@Base+0xaa00>
  41ab84:	bl	41a9c8 <_obstack_memory_used@@Base+0xa81c>
  41ab88:	cbz	w0, 41abac <_obstack_memory_used@@Base+0xaa00>
  41ab8c:	mov	w1, w19
  41ab90:	mov	x0, x21
  41ab94:	ldr	x2, [x20, #16]
  41ab98:	ldp	x19, x20, [sp, #16]
  41ab9c:	ldp	x21, x22, [sp, #32]
  41aba0:	ldr	x23, [sp, #48]
  41aba4:	ldp	x29, x30, [sp], #64
  41aba8:	b	402aa0 <acl_set_file@plt>
  41abac:	mov	x0, x21
  41abb0:	ldp	x19, x20, [sp, #16]
  41abb4:	ldp	x21, x22, [sp, #32]
  41abb8:	ldr	x23, [sp, #48]
  41abbc:	ldp	x29, x30, [sp], #64
  41abc0:	b	4028b0 <acl_delete_def_file@plt>
  41abc4:	mov	w3, w1
  41abc8:	mov	w1, w2
  41abcc:	cmn	w3, #0x1
  41abd0:	b.eq	41abdc <_obstack_memory_used@@Base+0xaa30>  // b.none
  41abd4:	mov	w0, w3
  41abd8:	b	402a30 <fchmod@plt>
  41abdc:	b	402950 <chmod@plt>
  41abe0:	stp	x29, x30, [sp, #-80]!
  41abe4:	mov	x29, sp
  41abe8:	stp	x19, x20, [sp, #16]
  41abec:	mov	x19, x0
  41abf0:	mov	x20, x1
  41abf4:	stp	x21, x22, [sp, #32]
  41abf8:	mov	w21, w2
  41abfc:	ldr	w2, [x0]
  41ac00:	stp	x23, x24, [sp, #48]
  41ac04:	ands	w23, w2, #0xe00
  41ac08:	strb	wzr, [sp, #79]
  41ac0c:	b.ne	41acc0 <_obstack_memory_used@@Base+0xab14>  // b.any
  41ac10:	ldrb	w0, [x19, #24]
  41ac14:	cbnz	w0, 41ace8 <_obstack_memory_used@@Base+0xab3c>
  41ac18:	add	x4, sp, #0x4f
  41ac1c:	mov	w2, w21
  41ac20:	mov	x1, x20
  41ac24:	mov	x0, x19
  41ac28:	mov	w3, #0x0                   	// #0
  41ac2c:	bl	41aac0 <_obstack_memory_used@@Base+0xa914>
  41ac30:	ldrb	w24, [sp, #79]
  41ac34:	cbnz	w24, 41acd4 <_obstack_memory_used@@Base+0xab28>
  41ac38:	cbz	w0, 41acf0 <_obstack_memory_used@@Base+0xab44>
  41ac3c:	bl	402df0 <__errno_location@plt>
  41ac40:	ldr	w22, [x0]
  41ac44:	ldrb	w0, [x19, #24]
  41ac48:	cbnz	w0, 41acf8 <_obstack_memory_used@@Base+0xab4c>
  41ac4c:	ldr	x0, [x19, #8]
  41ac50:	cbz	x0, 41ac58 <_obstack_memory_used@@Base+0xaaac>
  41ac54:	bl	402e70 <acl_free@plt>
  41ac58:	ldr	w0, [x19]
  41ac5c:	bl	402ac0 <acl_from_mode@plt>
  41ac60:	str	x0, [x19, #8]
  41ac64:	cbz	x0, 41ad00 <_obstack_memory_used@@Base+0xab54>
  41ac68:	add	x4, sp, #0x4f
  41ac6c:	mov	w2, w21
  41ac70:	mov	x1, x20
  41ac74:	mov	x0, x19
  41ac78:	mov	w3, #0x1                   	// #1
  41ac7c:	bl	41aac0 <_obstack_memory_used@@Base+0xa914>
  41ac80:	ldrb	w1, [sp, #79]
  41ac84:	cbnz	w1, 41ad20 <_obstack_memory_used@@Base+0xab74>
  41ac88:	cbnz	w22, 41ad08 <_obstack_memory_used@@Base+0xab5c>
  41ac8c:	cbnz	w23, 41acd4 <_obstack_memory_used@@Base+0xab28>
  41ac90:	mov	w22, #0x0                   	// #0
  41ac94:	cbz	w0, 41aca0 <_obstack_memory_used@@Base+0xaaf4>
  41ac98:	bl	402df0 <__errno_location@plt>
  41ac9c:	ldr	w22, [x0]
  41aca0:	ldr	w2, [x19]
  41aca4:	mov	w1, w21
  41aca8:	mov	x0, x20
  41acac:	bl	41abc4 <_obstack_memory_used@@Base+0xaa18>
  41acb0:	cbz	w22, 41acd4 <_obstack_memory_used@@Base+0xab28>
  41acb4:	bl	402df0 <__errno_location@plt>
  41acb8:	str	w22, [x0]
  41acbc:	b	41acd0 <_obstack_memory_used@@Base+0xab24>
  41acc0:	mov	w1, w21
  41acc4:	mov	x0, x20
  41acc8:	bl	41abc4 <_obstack_memory_used@@Base+0xaa18>
  41accc:	cbz	w0, 41ac10 <_obstack_memory_used@@Base+0xaa64>
  41acd0:	mov	w0, #0xffffffff            	// #-1
  41acd4:	ldp	x19, x20, [sp, #16]
  41acd8:	ldp	x21, x22, [sp, #32]
  41acdc:	ldp	x23, x24, [sp, #48]
  41ace0:	ldp	x29, x30, [sp], #80
  41ace4:	ret
  41ace8:	mov	w0, #0x0                   	// #0
  41acec:	b	41ac30 <_obstack_memory_used@@Base+0xaa84>
  41acf0:	mov	w22, #0x0                   	// #0
  41acf4:	b	41ac44 <_obstack_memory_used@@Base+0xaa98>
  41acf8:	mov	w0, #0x0                   	// #0
  41acfc:	b	41ac80 <_obstack_memory_used@@Base+0xaad4>
  41ad00:	mov	w0, #0xffffffff            	// #-1
  41ad04:	b	41ac80 <_obstack_memory_used@@Base+0xaad4>
  41ad08:	mov	w24, #0x1                   	// #1
  41ad0c:	bl	402df0 <__errno_location@plt>
  41ad10:	str	w22, [x0]
  41ad14:	cbz	w24, 41acd0 <_obstack_memory_used@@Base+0xab24>
  41ad18:	cbnz	w23, 41acd0 <_obstack_memory_used@@Base+0xab24>
  41ad1c:	b	41ac98 <_obstack_memory_used@@Base+0xaaec>
  41ad20:	cbnz	w22, 41ad0c <_obstack_memory_used@@Base+0xab60>
  41ad24:	b	41acd4 <_obstack_memory_used@@Base+0xab28>
  41ad28:	stp	x29, x30, [sp, #-288]!
  41ad2c:	mov	x2, #0x101                 	// #257
  41ad30:	mov	x29, sp
  41ad34:	add	x1, sp, #0x18
  41ad38:	bl	41ad80 <_obstack_memory_used@@Base+0xabd4>
  41ad3c:	cbnz	w0, 41ad78 <_obstack_memory_used@@Base+0xabcc>
  41ad40:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xce54>
  41ad44:	add	x0, sp, #0x18
  41ad48:	add	x1, x1, #0x2ba
  41ad4c:	bl	402bf0 <strcmp@plt>
  41ad50:	cbz	w0, 41ad6c <_obstack_memory_used@@Base+0xabc0>
  41ad54:	add	x0, sp, #0x18
  41ad58:	adrp	x1, 41d000 <_obstack_memory_used@@Base+0xce54>
  41ad5c:	add	x1, x1, #0x2bc
  41ad60:	bl	402bf0 <strcmp@plt>
  41ad64:	cmp	w0, #0x0
  41ad68:	cset	w0, ne  // ne = any
  41ad6c:	and	w0, w0, #0x1
  41ad70:	ldp	x29, x30, [sp], #288
  41ad74:	ret
  41ad78:	mov	w0, #0x0                   	// #0
  41ad7c:	b	41ad70 <_obstack_memory_used@@Base+0xabc4>
  41ad80:	stp	x29, x30, [sp, #-48]!
  41ad84:	mov	x29, sp
  41ad88:	stp	x19, x20, [sp, #16]
  41ad8c:	mov	x20, x1
  41ad90:	mov	x19, x2
  41ad94:	mov	x1, #0x0                   	// #0
  41ad98:	str	x21, [sp, #32]
  41ad9c:	bl	402e60 <setlocale@plt>
  41ada0:	cbnz	x0, 41adb4 <_obstack_memory_used@@Base+0xac08>
  41ada4:	cbz	x19, 41adac <_obstack_memory_used@@Base+0xac00>
  41ada8:	strb	wzr, [x20]
  41adac:	mov	w0, #0x16                  	// #22
  41adb0:	b	41add8 <_obstack_memory_used@@Base+0xac2c>
  41adb4:	mov	x21, x0
  41adb8:	bl	402790 <strlen@plt>
  41adbc:	cmp	x19, x0
  41adc0:	b.ls	41ade8 <_obstack_memory_used@@Base+0xac3c>  // b.plast
  41adc4:	add	x2, x0, #0x1
  41adc8:	mov	x1, x21
  41adcc:	mov	x0, x20
  41add0:	bl	402750 <memcpy@plt>
  41add4:	mov	w0, #0x0                   	// #0
  41add8:	ldp	x19, x20, [sp, #16]
  41addc:	ldr	x21, [sp, #32]
  41ade0:	ldp	x29, x30, [sp], #48
  41ade4:	ret
  41ade8:	cbz	x19, 41ae04 <_obstack_memory_used@@Base+0xac58>
  41adec:	sub	x19, x19, #0x1
  41adf0:	mov	x1, x21
  41adf4:	mov	x2, x19
  41adf8:	mov	x0, x20
  41adfc:	bl	402750 <memcpy@plt>
  41ae00:	strb	wzr, [x20, x19]
  41ae04:	mov	w0, #0x22                  	// #34
  41ae08:	b	41add8 <_obstack_memory_used@@Base+0xac2c>
  41ae0c:	mov	x1, #0x0                   	// #0
  41ae10:	b	402e60 <setlocale@plt>
  41ae14:	cmp	w0, #0x26
  41ae18:	b.eq	41ae3c <_obstack_memory_used@@Base+0xac90>  // b.none
  41ae1c:	b.gt	41ae34 <_obstack_memory_used@@Base+0xac88>
  41ae20:	cmp	w0, #0x10
  41ae24:	b.eq	41ae3c <_obstack_memory_used@@Base+0xac90>  // b.none
  41ae28:	cmp	w0, #0x16
  41ae2c:	cset	w0, ne  // ne = any
  41ae30:	ret
  41ae34:	cmp	w0, #0x5f
  41ae38:	b	41ae2c <_obstack_memory_used@@Base+0xac80>
  41ae3c:	mov	w0, #0x0                   	// #0
  41ae40:	b	41ae30 <_obstack_memory_used@@Base+0xac84>
  41ae44:	nop
  41ae48:	stp	x29, x30, [sp, #-64]!
  41ae4c:	mov	x29, sp
  41ae50:	stp	x19, x20, [sp, #16]
  41ae54:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x20e54>
  41ae58:	add	x20, x20, #0xde0
  41ae5c:	stp	x21, x22, [sp, #32]
  41ae60:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x20e54>
  41ae64:	add	x21, x21, #0xdd8
  41ae68:	sub	x20, x20, x21
  41ae6c:	mov	w22, w0
  41ae70:	stp	x23, x24, [sp, #48]
  41ae74:	mov	x23, x1
  41ae78:	mov	x24, x2
  41ae7c:	bl	402700 <mbrtowc@plt-0x40>
  41ae80:	cmp	xzr, x20, asr #3
  41ae84:	b.eq	41aeb0 <_obstack_memory_used@@Base+0xad04>  // b.none
  41ae88:	asr	x20, x20, #3
  41ae8c:	mov	x19, #0x0                   	// #0
  41ae90:	ldr	x3, [x21, x19, lsl #3]
  41ae94:	mov	x2, x24
  41ae98:	add	x19, x19, #0x1
  41ae9c:	mov	x1, x23
  41aea0:	mov	w0, w22
  41aea4:	blr	x3
  41aea8:	cmp	x20, x19
  41aeac:	b.ne	41ae90 <_obstack_memory_used@@Base+0xace4>  // b.any
  41aeb0:	ldp	x19, x20, [sp, #16]
  41aeb4:	ldp	x21, x22, [sp, #32]
  41aeb8:	ldp	x23, x24, [sp, #48]
  41aebc:	ldp	x29, x30, [sp], #64
  41aec0:	ret
  41aec4:	nop
  41aec8:	ret
  41aecc:	nop
  41aed0:	adrp	x2, 432000 <_obstack_memory_used@@Base+0x21e54>
  41aed4:	mov	x1, #0x0                   	// #0
  41aed8:	ldr	x2, [x2, #944]
  41aedc:	b	402840 <__cxa_atexit@plt>
  41aee0:	mov	x2, x1
  41aee4:	mov	w1, w0
  41aee8:	mov	w0, #0x0                   	// #0
  41aeec:	b	402d40 <__fxstat@plt>
  41aef0:	mov	x2, x1
  41aef4:	mov	x1, x0
  41aef8:	mov	w0, #0x0                   	// #0
  41aefc:	b	402ce0 <__lxstat@plt>

Disassembly of section .fini:

000000000041af00 <.fini>:
  41af00:	stp	x29, x30, [sp, #-16]!
  41af04:	mov	x29, sp
  41af08:	ldp	x29, x30, [sp], #16
  41af0c:	ret
