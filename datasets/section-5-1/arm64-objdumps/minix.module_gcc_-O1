
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_minix_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <grub_get_indir>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	and	x1, x1, #0xffff
  28:	ldrh	w5, [x0, #10]
  2c:	add	w5, w5, #0x1
  30:	add	x4, sp, #0x1e
  34:	mov	x3, #0x2                   	// #2
  38:	ubfiz	x2, x2, #1, #16
  3c:	lsl	x1, x1, x5
  40:	ldr	x0, [x0, #64]
  44:	bl	0 <grub_disk_read>
  48:	ldrh	w0, [sp, #30]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

0000000000000054 <grub_minix_read_file>:
  54:	stp	x29, x30, [sp, #-144]!
  58:	mov	x29, sp
  5c:	stp	x19, x20, [sp, #16]
  60:	mov	x19, x0
  64:	str	x1, [sp, #104]
  68:	str	x4, [sp, #120]
  6c:	ldr	w0, [x0, #24]
  70:	cmp	x0, x3
  74:	b.cc	11c <grub_minix_read_file+0xc8>  // b.lo, b.ul, b.last
  78:	stp	x23, x24, [sp, #48]
  7c:	stp	x27, x28, [sp, #80]
  80:	mov	x27, x2
  84:	mov	x23, x5
  88:	ldr	x4, [sp, #120]
  8c:	add	x2, x3, x4
  90:	sub	x1, x0, x3
  94:	cmp	x0, x2
  98:	csel	x0, x1, x4, cc  // cc = lo, ul, last
  9c:	mov	x1, x0
  a0:	str	x0, [sp, #120]
  a4:	mov	x0, #0x0                   	// #0
  a8:	cbz	x1, 2cc <grub_minix_read_file+0x278>
  ac:	add	x4, x1, x3
  b0:	ldr	x2, [x19, #80]
  b4:	sub	x0, x4, #0x1
  b8:	ubfx	x0, x0, #9, #32
  bc:	udiv	x0, x0, x2
  c0:	str	w0, [sp, #112]
  c4:	and	x3, x3, #0xffffffff
  c8:	lsl	x2, x2, #9
  cc:	udiv	x1, x3, x2
  d0:	str	w1, [sp, #116]
  d4:	msub	x2, x1, x2, x3
  d8:	str	x2, [sp, #128]
  dc:	add	w2, w0, #0x1
  e0:	cmp	w2, w1
  e4:	b.ls	28c <grub_minix_read_file+0x238>  // b.plast
  e8:	stp	x21, x22, [sp, #32]
  ec:	stp	x25, x26, [sp, #64]
  f0:	add	x22, x1, #0x11
  f4:	add	x22, x19, x22, lsl #1
  f8:	sub	w20, w1, #0x7
  fc:	sub	w25, w0, w1
 100:	add	x25, x25, x1
 104:	add	x0, x19, #0x24
 108:	add	x25, x0, x25, lsl #1
 10c:	adrp	x26, 0 <grub_minix_close>
 110:	and	x0, x4, #0xffffffff
 114:	str	x0, [sp, #136]
 118:	b	1f8 <grub_minix_read_file+0x1a4>
 11c:	adrp	x0, 0 <grub_minix_close>
 120:	ldr	x1, [x0]
 124:	mov	w0, #0xb                   	// #11
 128:	bl	0 <grub_error>
 12c:	mov	x0, #0xffffffffffffffff    	// #-1
 130:	b	2d4 <grub_minix_read_file+0x280>
 134:	ldrh	w1, [x22]
 138:	b	168 <grub_minix_read_file+0x114>
 13c:	mov	w2, w20
 140:	ldrh	w1, [x19, #48]
 144:	mov	x0, x19
 148:	bl	1c <grub_get_indir>
 14c:	and	w1, w0, #0xffff
 150:	b	168 <grub_minix_read_file+0x114>
 154:	adrp	x0, 0 <grub_minix_close>
 158:	ldr	x1, [x0]
 15c:	mov	w0, #0xb                   	// #11
 160:	bl	0 <grub_error>
 164:	mov	w1, #0x0                   	// #0
 168:	ldr	x0, [x26]
 16c:	ldr	w0, [x0]
 170:	cbnz	w0, 29c <grub_minix_read_file+0x248>
 174:	ldr	w0, [sp, #112]
 178:	lsl	x3, x21, #9
 17c:	cmp	w0, w24
 180:	b.eq	254 <grub_minix_read_file+0x200>  // b.none
 184:	mov	x28, #0x0                   	// #0
 188:	ldr	w0, [sp, #116]
 18c:	cmp	w0, w24
 190:	b.eq	274 <grub_minix_read_file+0x220>  // b.none
 194:	ldr	x0, [x19, #64]
 198:	ldr	x2, [sp, #104]
 19c:	str	x2, [x0, #48]
 1a0:	ldr	x0, [x19, #64]
 1a4:	str	x27, [x0, #56]
 1a8:	and	x1, x1, #0xffff
 1ac:	ldrh	w0, [x19, #10]
 1b0:	add	w0, w0, #0x1
 1b4:	mov	x4, x23
 1b8:	mov	x2, x28
 1bc:	lsl	x1, x1, x0
 1c0:	ldr	x0, [x19, #64]
 1c4:	bl	0 <grub_disk_read>
 1c8:	ldr	x0, [x19, #64]
 1cc:	str	xzr, [x0, #48]
 1d0:	ldr	x0, [x26]
 1d4:	ldr	w0, [x0]
 1d8:	cbnz	w0, 2b4 <grub_minix_read_file+0x260>
 1dc:	ldr	x5, [x19, #80]
 1e0:	add	x23, x23, x5, lsl #9
 1e4:	sub	x23, x23, x28
 1e8:	add	x22, x22, #0x2
 1ec:	add	w20, w20, #0x1
 1f0:	cmp	x22, x25
 1f4:	b.eq	284 <grub_minix_read_file+0x230>  // b.none
 1f8:	ldr	x21, [x19, #80]
 1fc:	adds	w24, w20, #0x7
 200:	b.cs	134 <grub_minix_read_file+0xe0>  // b.hs, b.nlast
 204:	ldr	w2, [x19, #52]
 208:	cmp	w2, w20
 20c:	b.hi	13c <grub_minix_read_file+0xe8>  // b.pmore
 210:	sub	w28, w20, w2
 214:	sub	w0, w20, w2
 218:	umull	x1, w2, w2
 21c:	cmp	x0, x1
 220:	b.cs	154 <grub_minix_read_file+0x100>  // b.hs, b.nlast
 224:	udiv	w2, w28, w2
 228:	ldrh	w1, [x19, #50]
 22c:	mov	x0, x19
 230:	bl	1c <grub_get_indir>
 234:	ldr	w3, [x19, #52]
 238:	udiv	w2, w28, w3
 23c:	msub	w2, w2, w3, w28
 240:	mov	w1, w0
 244:	mov	x0, x19
 248:	bl	1c <grub_get_indir>
 24c:	and	w1, w0, #0xffff
 250:	b	168 <grub_minix_read_file+0x114>
 254:	ldr	x0, [x19, #80]
 258:	lsl	x0, x0, #9
 25c:	ldr	x2, [sp, #136]
 260:	udiv	x3, x2, x0
 264:	msub	x3, x3, x0, x2
 268:	cmp	x3, #0x0
 26c:	csel	x3, x3, x0, ne  // ne = any
 270:	b	184 <grub_minix_read_file+0x130>
 274:	ldr	x0, [sp, #128]
 278:	sub	x3, x3, x0
 27c:	mov	x28, x0
 280:	b	194 <grub_minix_read_file+0x140>
 284:	ldp	x21, x22, [sp, #32]
 288:	ldp	x25, x26, [sp, #64]
 28c:	ldr	x0, [sp, #120]
 290:	ldp	x23, x24, [sp, #48]
 294:	ldp	x27, x28, [sp, #80]
 298:	b	2d4 <grub_minix_read_file+0x280>
 29c:	mov	x0, #0xffffffffffffffff    	// #-1
 2a0:	ldp	x21, x22, [sp, #32]
 2a4:	ldp	x23, x24, [sp, #48]
 2a8:	ldp	x25, x26, [sp, #64]
 2ac:	ldp	x27, x28, [sp, #80]
 2b0:	b	2d4 <grub_minix_read_file+0x280>
 2b4:	mov	x0, #0xffffffffffffffff    	// #-1
 2b8:	ldp	x21, x22, [sp, #32]
 2bc:	ldp	x23, x24, [sp, #48]
 2c0:	ldp	x25, x26, [sp, #64]
 2c4:	ldp	x27, x28, [sp, #80]
 2c8:	b	2d4 <grub_minix_read_file+0x280>
 2cc:	ldp	x23, x24, [sp, #48]
 2d0:	ldp	x27, x28, [sp, #80]
 2d4:	ldp	x19, x20, [sp, #16]
 2d8:	ldp	x29, x30, [sp], #144
 2dc:	ret
	...

00000000000002f8 <grub_minix_read>:
 2f8:	stp	x29, x30, [sp, #-16]!
 2fc:	mov	x29, sp
 300:	mov	x5, x1
 304:	mov	x4, x2
 308:	ldr	x3, [x0, #24]
 30c:	ldr	x2, [x0, #96]
 310:	ldr	x1, [x0, #88]
 314:	ldr	x0, [x0, #80]
 318:	bl	54 <grub_minix_read_file>
 31c:	ldp	x29, x30, [sp], #16
 320:	ret

0000000000000324 <grub_minix_read_inode>:
 324:	stp	x29, x30, [sp, #-16]!
 328:	mov	x29, sp
 32c:	and	w1, w1, #0xffff
 330:	strh	w1, [x0, #56]
 334:	sub	w2, w1, #0x1
 338:	ldrh	w5, [x0, #4]
 33c:	ldrh	w1, [x0, #6]
 340:	add	w5, w5, w1
 344:	add	w5, w5, #0x2
 348:	and	x5, x5, #0xffff
 34c:	ldrh	w1, [x0, #10]
 350:	add	w1, w1, #0x1
 354:	lsl	x5, x5, x1
 358:	ubfx	x1, x2, #4, #12
 35c:	add	x4, x0, #0x14
 360:	mov	x3, #0x20                  	// #32
 364:	ubfiz	x2, x2, #5, #4
 368:	add	x1, x5, x1
 36c:	ldr	x0, [x0, #64]
 370:	bl	0 <grub_disk_read>
 374:	mov	w0, #0x0                   	// #0
 378:	ldp	x29, x30, [sp], #16
 37c:	ret

0000000000000380 <grub_minix_mount>:
 380:	stp	x29, x30, [sp, #-32]!
 384:	mov	x29, sp
 388:	stp	x19, x20, [sp, #16]
 38c:	mov	x20, x0
 390:	mov	x0, #0x58                  	// #88
 394:	bl	0 <grub_malloc>
 398:	mov	x19, x0
 39c:	cbz	x0, 418 <grub_minix_mount+0x98>
 3a0:	mov	x4, x0
 3a4:	mov	x3, #0x14                  	// #20
 3a8:	mov	x2, #0x0                   	// #0
 3ac:	mov	x1, #0x2                   	// #2
 3b0:	mov	x0, x20
 3b4:	bl	0 <grub_disk_read>
 3b8:	adrp	x0, 0 <grub_minix_close>
 3bc:	ldr	x0, [x0]
 3c0:	ldr	w0, [x0]
 3c4:	cbnz	w0, 434 <grub_minix_mount+0xb4>
 3c8:	ldrh	w0, [x19, #16]
 3cc:	mov	w1, #0x137f                	// #4991
 3d0:	cmp	w0, w1
 3d4:	b.eq	428 <grub_minix_mount+0xa8>  // b.none
 3d8:	mov	w1, #0x138f                	// #5007
 3dc:	cmp	w0, w1
 3e0:	b.ne	434 <grub_minix_mount+0xb4>  // b.any
 3e4:	mov	w0, #0x1e                  	// #30
 3e8:	str	w0, [x19, #72]
 3ec:	ldrh	w1, [x19, #10]
 3f0:	cmp	w1, #0x13
 3f4:	b.hi	434 <grub_minix_mount+0xb4>  // b.pmore
 3f8:	str	x20, [x19, #64]
 3fc:	str	wzr, [x19, #60]
 400:	mov	x0, #0x2                   	// #2
 404:	str	x0, [x19, #80]
 408:	add	w1, w1, #0x9
 40c:	lsl	x0, x0, x1
 410:	lsr	x0, x0, #1
 414:	str	w0, [x19, #52]
 418:	mov	x0, x19
 41c:	ldp	x19, x20, [sp, #16]
 420:	ldp	x29, x30, [sp], #32
 424:	ret
 428:	mov	w0, #0xe                   	// #14
 42c:	str	w0, [x19, #72]
 430:	b	3ec <grub_minix_mount+0x6c>
 434:	mov	x0, x19
 438:	bl	0 <grub_free>
 43c:	adrp	x0, 0 <grub_minix_close>
 440:	ldr	x1, [x0]
 444:	mov	w0, #0x9                   	// #9
 448:	bl	0 <grub_error>
 44c:	mov	x19, #0x0                   	// #0
 450:	b	418 <grub_minix_mount+0x98>
 454:	nop
	...

0000000000000468 <grub_minix_find_file>:
 468:	stp	x29, x30, [sp, #-160]!
 46c:	mov	x29, sp
 470:	stp	x19, x20, [sp, #16]
 474:	stp	x21, x22, [sp, #32]
 478:	stp	x23, x24, [sp, #48]
 47c:	stp	x25, x26, [sp, #64]
 480:	stp	x27, x28, [sp, #80]
 484:	mov	x19, x0
 488:	str	x1, [sp, #104]
 48c:	mov	x21, x1
 490:	mov	x27, #0x2                   	// #2
 494:	add	x25, sp, #0x80
 498:	mov	x23, x25
 49c:	mov	w28, #0xffffa000            	// #-24576
 4a0:	ldrb	w0, [x21]
 4a4:	cmp	w0, #0x2f
 4a8:	b.ne	4b8 <grub_minix_find_file+0x50>  // b.any
 4ac:	ldrb	w0, [x21, #1]!
 4b0:	cmp	w0, #0x2f
 4b4:	b.eq	4ac <grub_minix_find_file+0x44>  // b.none
 4b8:	cbz	w0, 6b0 <grub_minix_find_file+0x248>
 4bc:	ldrh	w0, [x19, #20]
 4c0:	tbz	w0, #14, 4fc <grub_minix_find_file+0x94>
 4c4:	ldrb	w0, [x21]
 4c8:	cmp	w0, #0x2f
 4cc:	mov	x24, x21
 4d0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 4d4:	b.eq	4e8 <grub_minix_find_file+0x80>  // b.none
 4d8:	ldrb	w0, [x24, #1]!
 4dc:	cmp	w0, #0x2f
 4e0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 4e4:	b.ne	4d8 <grub_minix_find_file+0x70>  // b.any
 4e8:	ldr	w0, [x19, #24]
 4ec:	cbz	w0, 510 <grub_minix_find_file+0xa8>
 4f0:	mov	w20, #0x0                   	// #0
 4f4:	sub	x26, x24, x21
 4f8:	b	614 <grub_minix_find_file+0x1ac>
 4fc:	adrp	x0, 0 <grub_minix_close>
 500:	ldr	x1, [x0]
 504:	mov	w0, #0x4                   	// #4
 508:	bl	0 <grub_error>
 50c:	b	530 <grub_minix_find_file+0xc8>
 510:	ldr	x2, [sp, #104]
 514:	adrp	x0, 0 <grub_minix_close>
 518:	ldr	x1, [x0]
 51c:	mov	w0, #0x5                   	// #5
 520:	bl	0 <grub_error>
 524:	adrp	x0, 0 <grub_minix_close>
 528:	ldr	x0, [x0]
 52c:	ldr	w0, [x0]
 530:	ldp	x19, x20, [sp, #16]
 534:	ldp	x21, x22, [sp, #32]
 538:	ldp	x23, x24, [sp, #48]
 53c:	ldp	x25, x26, [sp, #64]
 540:	ldp	x27, x28, [sp, #80]
 544:	ldp	x29, x30, [sp], #160
 548:	ret
 54c:	adrp	x0, 0 <grub_minix_close>
 550:	ldr	x0, [x0]
 554:	ldr	w0, [x0]
 558:	b	530 <grub_minix_find_file+0xc8>
 55c:	adrp	x0, 0 <grub_minix_close>
 560:	ldr	x0, [x0]
 564:	ldr	w0, [x0]
 568:	b	530 <grub_minix_find_file+0xc8>
 56c:	ldr	w22, [x19, #24]
 570:	ldr	w0, [x19, #60]
 574:	add	w0, w0, #0x1
 578:	str	w0, [x19, #60]
 57c:	cmp	w0, #0x8
 580:	b.gt	5e4 <grub_minix_find_file+0x17c>
 584:	mov	w26, w22
 588:	add	x0, x26, #0x1
 58c:	bl	0 <grub_malloc>
 590:	mov	x21, x0
 594:	cbz	x0, 5f4 <grub_minix_find_file+0x18c>
 598:	mov	x5, x0
 59c:	mov	x4, x26
 5a0:	mov	x3, #0x0                   	// #0
 5a4:	mov	x2, #0x0                   	// #0
 5a8:	mov	x1, #0x0                   	// #0
 5ac:	mov	x0, x19
 5b0:	bl	54 <grub_minix_read_file>
 5b4:	tbnz	x0, #63, 5f4 <grub_minix_find_file+0x18c>
 5b8:	strb	wzr, [x21, w22, uxtw]
 5bc:	ldrb	w0, [x21]
 5c0:	cmp	w0, #0x2f
 5c4:	csinc	w1, w20, wzr, ne  // ne = any
 5c8:	mov	x0, x19
 5cc:	bl	324 <grub_minix_read_inode>
 5d0:	cbnz	w0, 5f4 <grub_minix_find_file+0x18c>
 5d4:	mov	x1, x21
 5d8:	mov	x0, x19
 5dc:	bl	468 <grub_minix_find_file>
 5e0:	b	5f4 <grub_minix_find_file+0x18c>
 5e4:	adrp	x0, 0 <grub_minix_close>
 5e8:	ldr	x1, [x0]
 5ec:	mov	w0, #0x19                  	// #25
 5f0:	bl	0 <grub_error>
 5f4:	adrp	x0, 0 <grub_minix_close>
 5f8:	ldr	x0, [x0]
 5fc:	ldr	w0, [x0]
 600:	cbz	w0, 6a8 <grub_minix_find_file+0x240>
 604:	b	530 <grub_minix_find_file+0xc8>
 608:	ldr	w0, [x19, #24]
 60c:	cmp	w0, w20
 610:	b.ls	510 <grub_minix_find_file+0xa8>  // b.plast
 614:	mov	w22, w20
 618:	add	x5, sp, #0x7e
 61c:	mov	x4, x27
 620:	mov	x3, x22
 624:	mov	x2, #0x0                   	// #0
 628:	mov	x1, #0x0                   	// #0
 62c:	mov	x0, x19
 630:	bl	54 <grub_minix_read_file>
 634:	tbnz	x0, #63, 54c <grub_minix_find_file+0xe4>
 638:	mov	x5, x23
 63c:	ldrsw	x4, [x19, #72]
 640:	add	x3, x22, #0x2
 644:	mov	x2, #0x0                   	// #0
 648:	mov	x1, #0x0                   	// #0
 64c:	mov	x0, x19
 650:	bl	54 <grub_minix_read_file>
 654:	tbnz	x0, #63, 55c <grub_minix_find_file+0xf4>
 658:	ldr	w0, [x19, #72]
 65c:	add	w1, w0, #0x2
 660:	add	w20, w20, w1
 664:	strb	wzr, [x25, w0, sxtw]
 668:	mov	x2, x26
 66c:	mov	x1, x23
 670:	mov	x0, x21
 674:	bl	0 <grub_strncmp>
 678:	cbnz	w0, 608 <grub_minix_find_file+0x1a0>
 67c:	ldrb	w0, [x25, x26]
 680:	cbnz	w0, 608 <grub_minix_find_file+0x1a0>
 684:	ldrh	w20, [x19, #56]
 688:	ldrh	w1, [sp, #126]
 68c:	mov	x0, x19
 690:	bl	324 <grub_minix_read_inode>
 694:	ldrh	w0, [x19, #20]
 698:	and	w0, w0, w28
 69c:	and	w0, w0, #0xffff
 6a0:	cmp	w0, #0xa, lsl #12
 6a4:	b.eq	56c <grub_minix_find_file+0x104>  // b.none
 6a8:	mov	x21, x24
 6ac:	b	4a0 <grub_minix_find_file+0x38>
 6b0:	mov	w0, #0x0                   	// #0
 6b4:	b	530 <grub_minix_find_file+0xc8>
	...

00000000000006d8 <grub_minix_open>:
 6d8:	stp	x29, x30, [sp, #-48]!
 6dc:	mov	x29, sp
 6e0:	stp	x19, x20, [sp, #16]
 6e4:	str	x21, [sp, #32]
 6e8:	mov	x21, x0
 6ec:	mov	x20, x1
 6f0:	ldr	x0, [x0, #8]
 6f4:	ldr	x0, [x0]
 6f8:	bl	380 <grub_minix_mount>
 6fc:	cbz	x0, 75c <grub_minix_open+0x84>
 700:	mov	x19, x0
 704:	mov	w1, #0x1                   	// #1
 708:	bl	324 <grub_minix_read_inode>
 70c:	adrp	x0, 0 <grub_minix_close>
 710:	ldr	x0, [x0]
 714:	ldr	w0, [x0]
 718:	cbnz	w0, 76c <grub_minix_open+0x94>
 71c:	cbz	x20, 72c <grub_minix_open+0x54>
 720:	ldrb	w0, [x20]
 724:	cmp	w0, #0x2f
 728:	b.eq	784 <grub_minix_open+0xac>  // b.none
 72c:	mov	x2, x20
 730:	adrp	x0, 0 <grub_minix_close>
 734:	ldr	x1, [x0]
 738:	mov	w0, #0x7                   	// #7
 73c:	bl	0 <grub_error>
 740:	adrp	x0, 0 <grub_minix_close>
 744:	ldr	x0, [x0]
 748:	ldr	w0, [x0]
 74c:	ldp	x19, x20, [sp, #16]
 750:	ldr	x21, [sp, #32]
 754:	ldp	x29, x30, [sp], #48
 758:	ret
 75c:	adrp	x0, 0 <grub_minix_close>
 760:	ldr	x0, [x0]
 764:	ldr	w0, [x0]
 768:	b	74c <grub_minix_open+0x74>
 76c:	mov	x0, x19
 770:	bl	0 <grub_free>
 774:	adrp	x0, 0 <grub_minix_close>
 778:	ldr	x0, [x0]
 77c:	ldr	w0, [x0]
 780:	b	74c <grub_minix_open+0x74>
 784:	mov	x1, x20
 788:	mov	x0, x19
 78c:	bl	468 <grub_minix_find_file>
 790:	adrp	x0, 0 <grub_minix_close>
 794:	ldr	x0, [x0]
 798:	ldr	w0, [x0]
 79c:	cbnz	w0, 7b0 <grub_minix_open+0xd8>
 7a0:	str	x19, [x21, #80]
 7a4:	ldr	w1, [x19, #24]
 7a8:	str	x1, [x21, #64]
 7ac:	b	74c <grub_minix_open+0x74>
 7b0:	mov	x0, x19
 7b4:	bl	0 <grub_free>
 7b8:	adrp	x0, 0 <grub_minix_close>
 7bc:	ldr	x0, [x0]
 7c0:	ldr	w0, [x0]
 7c4:	b	74c <grub_minix_open+0x74>
	...

00000000000007d8 <grub_minix_dir>:
 7d8:	stp	x29, x30, [sp, #-160]!
 7dc:	mov	x29, sp
 7e0:	stp	x19, x20, [sp, #16]
 7e4:	stp	x23, x24, [sp, #48]
 7e8:	mov	x20, x1
 7ec:	mov	x23, x2
 7f0:	mov	x24, x3
 7f4:	ldr	x0, [x0]
 7f8:	bl	380 <grub_minix_mount>
 7fc:	cbz	x0, 840 <grub_minix_dir+0x68>
 800:	mov	x19, x0
 804:	mov	w1, #0x1                   	// #1
 808:	bl	324 <grub_minix_read_inode>
 80c:	adrp	x0, 0 <grub_minix_close>
 810:	ldr	x0, [x0]
 814:	ldr	w0, [x0]
 818:	cbz	w0, 850 <grub_minix_dir+0x78>
 81c:	mov	x0, x19
 820:	bl	0 <grub_free>
 824:	adrp	x0, 0 <grub_minix_close>
 828:	ldr	x0, [x0]
 82c:	ldr	w0, [x0]
 830:	ldp	x19, x20, [sp, #16]
 834:	ldp	x23, x24, [sp, #48]
 838:	ldp	x29, x30, [sp], #160
 83c:	ret
 840:	adrp	x0, 0 <grub_minix_close>
 844:	ldr	x0, [x0]
 848:	ldr	w0, [x0]
 84c:	b	830 <grub_minix_dir+0x58>
 850:	mov	x1, x20
 854:	mov	x0, x19
 858:	bl	468 <grub_minix_find_file>
 85c:	adrp	x0, 0 <grub_minix_close>
 860:	ldr	x0, [x0]
 864:	ldr	w20, [x0]
 868:	cbnz	w20, 81c <grub_minix_dir+0x44>
 86c:	ldrh	w0, [x19, #20]
 870:	tbz	w0, #14, 898 <grub_minix_dir+0xc0>
 874:	ldr	w0, [x19, #24]
 878:	cbz	w0, 81c <grub_minix_dir+0x44>
 87c:	stp	x21, x22, [sp, #32]
 880:	stp	x25, x26, [sp, #64]
 884:	str	x27, [sp, #80]
 888:	mov	x26, #0x10                  	// #16
 88c:	mov	x25, #0x2                   	// #2
 890:	add	x22, sp, #0x80
 894:	b	944 <grub_minix_dir+0x16c>
 898:	adrp	x0, 0 <grub_minix_close>
 89c:	ldr	x1, [x0]
 8a0:	mov	w0, #0x4                   	// #4
 8a4:	bl	0 <grub_error>
 8a8:	b	81c <grub_minix_dir+0x44>
 8ac:	adrp	x0, 0 <grub_minix_close>
 8b0:	ldr	x0, [x0]
 8b4:	ldr	w0, [x0]
 8b8:	ldp	x21, x22, [sp, #32]
 8bc:	ldp	x25, x26, [sp, #64]
 8c0:	ldr	x27, [sp, #80]
 8c4:	b	830 <grub_minix_dir+0x58>
 8c8:	adrp	x0, 0 <grub_minix_close>
 8cc:	ldr	x0, [x0]
 8d0:	ldr	w0, [x0]
 8d4:	ldp	x21, x22, [sp, #32]
 8d8:	ldp	x25, x26, [sp, #64]
 8dc:	ldr	x27, [sp, #80]
 8e0:	b	830 <grub_minix_dir+0x58>
 8e4:	mov	x0, x19
 8e8:	bl	324 <grub_minix_read_inode>
 8ec:	ldrh	w1, [x19, #20]
 8f0:	ubfx	x1, x1, #14, #1
 8f4:	ldrb	w0, [sp, #112]
 8f8:	bfxil	w0, w1, #0, #1
 8fc:	orr	w0, w0, #0x2
 900:	strb	w0, [sp, #112]
 904:	ldr	w0, [x19, #28]
 908:	str	w0, [sp, #116]
 90c:	mov	x2, x24
 910:	add	x1, sp, #0x70
 914:	mov	x0, x22
 918:	blr	x23
 91c:	cbnz	w0, 9c8 <grub_minix_dir+0x1f0>
 920:	mov	w1, w27
 924:	mov	x0, x19
 928:	bl	324 <grub_minix_read_inode>
 92c:	ldr	w0, [x19, #72]
 930:	add	w0, w0, #0x2
 934:	add	w20, w20, w0
 938:	ldr	w0, [x19, #24]
 93c:	cmp	w20, w0
 940:	b.cs	9b8 <grub_minix_dir+0x1e0>  // b.hs, b.nlast
 944:	ldrh	w27, [x19, #56]
 948:	mov	x2, x26
 94c:	mov	w1, #0x0                   	// #0
 950:	add	x0, sp, #0x70
 954:	bl	0 <grub_memset>
 958:	mov	w21, w20
 95c:	add	x5, sp, #0x6e
 960:	mov	x4, x25
 964:	mov	x3, x21
 968:	mov	x2, #0x0                   	// #0
 96c:	mov	x1, #0x0                   	// #0
 970:	mov	x0, x19
 974:	bl	54 <grub_minix_read_file>
 978:	tbnz	x0, #63, 8ac <grub_minix_dir+0xd4>
 97c:	mov	x5, x22
 980:	ldrsw	x4, [x19, #72]
 984:	add	x3, x21, #0x2
 988:	mov	x2, #0x0                   	// #0
 98c:	mov	x1, #0x0                   	// #0
 990:	mov	x0, x19
 994:	bl	54 <grub_minix_read_file>
 998:	tbnz	x0, #63, 8c8 <grub_minix_dir+0xf0>
 99c:	ldr	w0, [x19, #72]
 9a0:	strb	wzr, [x22, w0, sxtw]
 9a4:	ldrh	w1, [sp, #110]
 9a8:	cbnz	w1, 8e4 <grub_minix_dir+0x10c>
 9ac:	add	w0, w0, #0x2
 9b0:	add	w20, w20, w0
 9b4:	b	938 <grub_minix_dir+0x160>
 9b8:	ldp	x21, x22, [sp, #32]
 9bc:	ldp	x25, x26, [sp, #64]
 9c0:	ldr	x27, [sp, #80]
 9c4:	b	81c <grub_minix_dir+0x44>
 9c8:	ldp	x21, x22, [sp, #32]
 9cc:	ldp	x25, x26, [sp, #64]
 9d0:	ldr	x27, [sp, #80]
 9d4:	b	81c <grub_minix_dir+0x44>
	...

00000000000009e8 <grub_mod_init>:
 9e8:	stp	x29, x30, [sp, #-16]!
 9ec:	mov	x29, sp
 9f0:	adrp	x0, 0 <grub_minix_close>
 9f4:	ldr	x1, [x0]
 9f8:	adrp	x0, 0 <grub_minix_close>
 9fc:	ldr	x0, [x0]
 a00:	bl	0 <grub_list_push>
 a04:	ldp	x29, x30, [sp], #16
 a08:	ret
 a0c:	nop
	...

0000000000000a20 <grub_mod_fini>:
 a20:	stp	x29, x30, [sp, #-16]!
 a24:	mov	x29, sp
 a28:	adrp	x0, 0 <grub_minix_close>
 a2c:	ldr	x0, [x0]
 a30:	bl	0 <grub_list_remove>
 a34:	ldp	x29, x30, [sp], #16
 a38:	ret
 a3c:	nop
	...
