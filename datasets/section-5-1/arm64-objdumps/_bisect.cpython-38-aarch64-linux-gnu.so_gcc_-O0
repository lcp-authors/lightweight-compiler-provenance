
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 12000 <PyInit__bisect@@Base+0x10ac4>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 13000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 13000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 13000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 13000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 13000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 13000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 13000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 13000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 13000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 13000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 13000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 13000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0x90c>:
     c30:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	stp	x29, x30, [sp, #-32]!
     c48:	mov	x29, sp
     c4c:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     c50:	add	x0, x0, #0x228
     c54:	str	x0, [sp, #24]
     c58:	ldr	x0, [sp, #24]
     c5c:	str	x0, [sp, #24]
     c60:	ldr	x1, [sp, #24]
     c64:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     c68:	add	x0, x0, #0x228
     c6c:	cmp	x1, x0
     c70:	b.eq	ca8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x88>  // b.none
     c74:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
     c78:	ldr	x0, [x0, #4016]
     c7c:	str	x0, [sp, #16]
     c80:	ldr	x0, [sp, #16]
     c84:	str	x0, [sp, #16]
     c88:	ldr	x0, [sp, #16]
     c8c:	cmp	x0, #0x0
     c90:	b.eq	cac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x8c>  // b.none
     c94:	ldr	x1, [sp, #16]
     c98:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     c9c:	add	x0, x0, #0x228
     ca0:	blr	x1
     ca4:	b	cac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x8c>
     ca8:	nop
     cac:	ldp	x29, x30, [sp], #32
     cb0:	ret
     cb4:	stp	x29, x30, [sp, #-48]!
     cb8:	mov	x29, sp
     cbc:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     cc0:	add	x0, x0, #0x228
     cc4:	str	x0, [sp, #40]
     cc8:	ldr	x0, [sp, #40]
     ccc:	str	x0, [sp, #40]
     cd0:	ldr	x1, [sp, #40]
     cd4:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     cd8:	add	x0, x0, #0x228
     cdc:	sub	x0, x1, x0
     ce0:	asr	x0, x0, #3
     ce4:	lsr	x1, x0, #63
     ce8:	add	x0, x1, x0
     cec:	asr	x0, x0, #1
     cf0:	str	x0, [sp, #32]
     cf4:	ldr	x0, [sp, #32]
     cf8:	cmp	x0, #0x0
     cfc:	b.eq	d38 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x118>  // b.none
     d00:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
     d04:	ldr	x0, [x0, #4056]
     d08:	str	x0, [sp, #24]
     d0c:	ldr	x0, [sp, #24]
     d10:	str	x0, [sp, #24]
     d14:	ldr	x0, [sp, #24]
     d18:	cmp	x0, #0x0
     d1c:	b.eq	d3c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x11c>  // b.none
     d20:	ldr	x2, [sp, #24]
     d24:	ldr	x1, [sp, #32]
     d28:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     d2c:	add	x0, x0, #0x228
     d30:	blr	x2
     d34:	b	d3c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x11c>
     d38:	nop
     d3c:	ldp	x29, x30, [sp], #48
     d40:	ret
     d44:	stp	x29, x30, [sp, #-16]!
     d48:	mov	x29, sp
     d4c:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     d50:	add	x0, x0, #0x228
     d54:	ldrb	w0, [x0]
     d58:	and	x0, x0, #0xff
     d5c:	cmp	x0, #0x0
     d60:	b.ne	d9c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x17c>  // b.any
     d64:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
     d68:	ldr	x0, [x0, #4024]
     d6c:	cmp	x0, #0x0
     d70:	b.eq	d84 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x164>  // b.none
     d74:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     d78:	add	x0, x0, #0x60
     d7c:	ldr	x0, [x0]
     d80:	bl	b80 <__cxa_finalize@plt>
     d84:	bl	c44 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x24>
     d88:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     d8c:	add	x0, x0, #0x228
     d90:	mov	w1, #0x1                   	// #1
     d94:	strb	w1, [x0]
     d98:	b	da0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x180>
     d9c:	nop
     da0:	ldp	x29, x30, [sp], #16
     da4:	ret
     da8:	stp	x29, x30, [sp, #-16]!
     dac:	mov	x29, sp
     db0:	bl	cb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x94>
     db4:	nop
     db8:	ldp	x29, x30, [sp], #16
     dbc:	ret
     dc0:	sub	sp, sp, #0x10
     dc4:	str	x0, [sp, #8]
     dc8:	ldr	x0, [sp, #8]
     dcc:	ldr	x0, [x0]
     dd0:	add	x1, x0, #0x1
     dd4:	ldr	x0, [sp, #8]
     dd8:	str	x1, [x0]
     ddc:	nop
     de0:	add	sp, sp, #0x10
     de4:	ret
     de8:	stp	x29, x30, [sp, #-48]!
     dec:	mov	x29, sp
     df0:	str	x0, [sp, #40]
     df4:	str	w1, [sp, #36]
     df8:	str	x2, [sp, #24]
     dfc:	ldr	x0, [sp, #24]
     e00:	ldr	x0, [x0]
     e04:	sub	x1, x0, #0x1
     e08:	ldr	x0, [sp, #24]
     e0c:	str	x1, [x0]
     e10:	ldr	x0, [sp, #24]
     e14:	ldr	x0, [x0]
     e18:	cmp	x0, #0x0
     e1c:	b.ne	e28 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x208>  // b.any
     e20:	ldr	x0, [sp, #24]
     e24:	bl	b90 <_Py_Dealloc@plt>
     e28:	nop
     e2c:	ldp	x29, x30, [sp], #48
     e30:	ret
     e34:	stp	x29, x30, [sp, #-80]!
     e38:	mov	x29, sp
     e3c:	str	x0, [sp, #40]
     e40:	str	x1, [sp, #32]
     e44:	str	x2, [sp, #24]
     e48:	str	x3, [sp, #16]
     e4c:	ldr	x0, [sp, #24]
     e50:	cmp	x0, #0x0
     e54:	b.ge	e7c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x25c>  // b.tcont
     e58:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
     e5c:	ldr	x0, [x0, #4032]
     e60:	ldr	x2, [x0]
     e64:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     e68:	add	x1, x0, #0x578
     e6c:	mov	x0, x2
     e70:	bl	ba0 <PyErr_SetString@plt>
     e74:	mov	x0, #0xffffffffffffffff    	// #-1
     e78:	b	f54 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x334>
     e7c:	ldr	x0, [sp, #16]
     e80:	cmn	x0, #0x1
     e84:	b.ne	f40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x320>  // b.any
     e88:	ldr	x0, [sp, #40]
     e8c:	bl	be0 <PySequence_Size@plt>
     e90:	str	x0, [sp, #16]
     e94:	ldr	x0, [sp, #16]
     e98:	cmp	x0, #0x0
     e9c:	b.ge	f40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x320>  // b.tcont
     ea0:	mov	x0, #0xffffffffffffffff    	// #-1
     ea4:	b	f54 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x334>
     ea8:	ldr	x1, [sp, #24]
     eac:	ldr	x0, [sp, #16]
     eb0:	add	x0, x1, x0
     eb4:	lsr	x0, x0, #1
     eb8:	str	x0, [sp, #72]
     ebc:	ldr	x1, [sp, #72]
     ec0:	ldr	x0, [sp, #40]
     ec4:	bl	bb0 <PySequence_GetItem@plt>
     ec8:	str	x0, [sp, #64]
     ecc:	ldr	x0, [sp, #64]
     ed0:	cmp	x0, #0x0
     ed4:	b.ne	ee0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2c0>  // b.any
     ed8:	mov	x0, #0xffffffffffffffff    	// #-1
     edc:	b	f54 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x334>
     ee0:	mov	w2, #0x0                   	// #0
     ee4:	ldr	x1, [sp, #64]
     ee8:	ldr	x0, [sp, #32]
     eec:	bl	bd0 <PyObject_RichCompareBool@plt>
     ef0:	str	w0, [sp, #60]
     ef4:	ldr	x2, [sp, #64]
     ef8:	mov	w1, #0x24                  	// #36
     efc:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     f00:	add	x0, x0, #0x590
     f04:	bl	de8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c8>
     f08:	ldr	w0, [sp, #60]
     f0c:	cmp	w0, #0x0
     f10:	b.ge	f1c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2fc>  // b.tcont
     f14:	mov	x0, #0xffffffffffffffff    	// #-1
     f18:	b	f54 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x334>
     f1c:	ldr	w0, [sp, #60]
     f20:	cmp	w0, #0x0
     f24:	b.eq	f34 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x314>  // b.none
     f28:	ldr	x0, [sp, #72]
     f2c:	str	x0, [sp, #16]
     f30:	b	f40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x320>
     f34:	ldr	x0, [sp, #72]
     f38:	add	x0, x0, #0x1
     f3c:	str	x0, [sp, #24]
     f40:	ldr	x1, [sp, #24]
     f44:	ldr	x0, [sp, #16]
     f48:	cmp	x1, x0
     f4c:	b.lt	ea8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x288>  // b.tstop
     f50:	ldr	x0, [sp, #24]
     f54:	ldp	x29, x30, [sp], #80
     f58:	ret
     f5c:	stp	x29, x30, [sp, #-96]!
     f60:	mov	x29, sp
     f64:	str	x0, [sp, #40]
     f68:	str	x1, [sp, #32]
     f6c:	str	x2, [sp, #24]
     f70:	str	xzr, [sp, #64]
     f74:	mov	x0, #0xffffffffffffffff    	// #-1
     f78:	str	x0, [sp, #56]
     f7c:	ldr	x0, [sp, #24]
     f80:	cmp	x0, #0x0
     f84:	b.ne	fb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x394>  // b.any
     f88:	ldr	x0, [sp, #32]
     f8c:	ldr	x0, [x0, #16]
     f90:	cmp	x0, #0x2
     f94:	b.ne	fb4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x394>  // b.any
     f98:	ldr	x0, [sp, #32]
     f9c:	ldr	x0, [x0, #24]
     fa0:	str	x0, [sp, #80]
     fa4:	ldr	x0, [sp, #32]
     fa8:	ldr	x0, [x0, #32]
     fac:	str	x0, [sp, #72]
     fb0:	b	1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     fb4:	add	x3, sp, #0x38
     fb8:	add	x2, sp, #0x40
     fbc:	add	x1, sp, #0x48
     fc0:	add	x0, sp, #0x50
     fc4:	mov	x7, x3
     fc8:	mov	x6, x2
     fcc:	mov	x5, x1
     fd0:	mov	x4, x0
     fd4:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
     fd8:	add	x3, x0, #0x188
     fdc:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     fe0:	add	x2, x0, #0x5c0
     fe4:	ldr	x1, [sp, #24]
     fe8:	ldr	x0, [sp, #32]
     fec:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     ff0:	cmp	w0, #0x0
     ff4:	b.ne	1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>  // b.any
     ff8:	mov	x0, #0x0                   	// #0
     ffc:	b	1034 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x414>
    1000:	ldr	x0, [sp, #80]
    1004:	ldr	x1, [sp, #72]
    1008:	ldr	x2, [sp, #64]
    100c:	ldr	x3, [sp, #56]
    1010:	bl	e34 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x214>
    1014:	str	x0, [sp, #88]
    1018:	ldr	x0, [sp, #88]
    101c:	cmp	x0, #0x0
    1020:	b.ge	102c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x40c>  // b.tcont
    1024:	mov	x0, #0x0                   	// #0
    1028:	b	1034 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x414>
    102c:	ldr	x0, [sp, #88]
    1030:	bl	bc0 <PyLong_FromSsize_t@plt>
    1034:	ldp	x29, x30, [sp], #96
    1038:	ret
    103c:	stp	x29, x30, [sp, #-96]!
    1040:	mov	x29, sp
    1044:	str	x0, [sp, #40]
    1048:	str	x1, [sp, #32]
    104c:	str	x2, [sp, #24]
    1050:	str	xzr, [sp, #56]
    1054:	mov	x0, #0xffffffffffffffff    	// #-1
    1058:	str	x0, [sp, #48]
    105c:	ldr	x0, [sp, #24]
    1060:	cmp	x0, #0x0
    1064:	b.ne	1094 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x474>  // b.any
    1068:	ldr	x0, [sp, #32]
    106c:	ldr	x0, [x0, #16]
    1070:	cmp	x0, #0x2
    1074:	b.ne	1094 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x474>  // b.any
    1078:	ldr	x0, [sp, #32]
    107c:	ldr	x0, [x0, #24]
    1080:	str	x0, [sp, #72]
    1084:	ldr	x0, [sp, #32]
    1088:	ldr	x0, [x0, #32]
    108c:	str	x0, [sp, #64]
    1090:	b	10e0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4c0>
    1094:	add	x3, sp, #0x30
    1098:	add	x2, sp, #0x38
    109c:	add	x1, sp, #0x40
    10a0:	add	x0, sp, #0x48
    10a4:	mov	x7, x3
    10a8:	mov	x6, x2
    10ac:	mov	x5, x1
    10b0:	mov	x4, x0
    10b4:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
    10b8:	add	x3, x0, #0x1b0
    10bc:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    10c0:	add	x2, x0, #0x760
    10c4:	ldr	x1, [sp, #24]
    10c8:	ldr	x0, [sp, #32]
    10cc:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    10d0:	cmp	w0, #0x0
    10d4:	b.ne	10e0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4c0>  // b.any
    10d8:	mov	x0, #0x0                   	// #0
    10dc:	b	11b0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x590>
    10e0:	ldr	x0, [sp, #72]
    10e4:	ldr	x1, [sp, #64]
    10e8:	ldr	x2, [sp, #56]
    10ec:	ldr	x3, [sp, #48]
    10f0:	bl	e34 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x214>
    10f4:	str	x0, [sp, #88]
    10f8:	ldr	x0, [sp, #88]
    10fc:	cmp	x0, #0x0
    1100:	b.ge	110c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4ec>  // b.tcont
    1104:	mov	x0, #0x0                   	// #0
    1108:	b	11b0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x590>
    110c:	ldr	x0, [sp, #72]
    1110:	ldr	x1, [x0, #8]
    1114:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    1118:	ldr	x0, [x0, #4064]
    111c:	cmp	x1, x0
    1120:	b.ne	1148 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x528>  // b.any
    1124:	ldr	x0, [sp, #72]
    1128:	ldr	x1, [sp, #64]
    112c:	mov	x2, x1
    1130:	ldr	x1, [sp, #88]
    1134:	bl	b70 <PyList_Insert@plt>
    1138:	cmp	w0, #0x0
    113c:	b.ge	119c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x57c>  // b.tcont
    1140:	mov	x0, #0x0                   	// #0
    1144:	b	11b0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x590>
    1148:	ldr	x5, [sp, #72]
    114c:	ldr	x0, [sp, #64]
    1150:	mov	x4, x0
    1154:	ldr	x3, [sp, #88]
    1158:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    115c:	add	x2, x0, #0x778
    1160:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
    1164:	add	x1, x0, #0x68
    1168:	mov	x0, x5
    116c:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    1170:	str	x0, [sp, #80]
    1174:	ldr	x0, [sp, #80]
    1178:	cmp	x0, #0x0
    117c:	b.ne	1188 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x568>  // b.any
    1180:	mov	x0, #0x0                   	// #0
    1184:	b	11b0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x590>
    1188:	ldr	x2, [sp, #80]
    118c:	mov	w1, #0x70                  	// #112
    1190:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1194:	add	x0, x0, #0x590
    1198:	bl	de8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c8>
    119c:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    11a0:	ldr	x0, [x0, #4048]
    11a4:	bl	dc0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1a0>
    11a8:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    11ac:	ldr	x0, [x0, #4048]
    11b0:	ldp	x29, x30, [sp], #96
    11b4:	ret
    11b8:	stp	x29, x30, [sp, #-80]!
    11bc:	mov	x29, sp
    11c0:	str	x0, [sp, #40]
    11c4:	str	x1, [sp, #32]
    11c8:	str	x2, [sp, #24]
    11cc:	str	x3, [sp, #16]
    11d0:	ldr	x0, [sp, #24]
    11d4:	cmp	x0, #0x0
    11d8:	b.ge	1200 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5e0>  // b.tcont
    11dc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    11e0:	ldr	x0, [x0, #4032]
    11e4:	ldr	x2, [x0]
    11e8:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    11ec:	add	x1, x0, #0x578
    11f0:	mov	x0, x2
    11f4:	bl	ba0 <PyErr_SetString@plt>
    11f8:	mov	x0, #0xffffffffffffffff    	// #-1
    11fc:	b	12d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6b8>
    1200:	ldr	x0, [sp, #16]
    1204:	cmn	x0, #0x1
    1208:	b.ne	12c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6a4>  // b.any
    120c:	ldr	x0, [sp, #40]
    1210:	bl	be0 <PySequence_Size@plt>
    1214:	str	x0, [sp, #16]
    1218:	ldr	x0, [sp, #16]
    121c:	cmp	x0, #0x0
    1220:	b.ge	12c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6a4>  // b.tcont
    1224:	mov	x0, #0xffffffffffffffff    	// #-1
    1228:	b	12d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6b8>
    122c:	ldr	x1, [sp, #24]
    1230:	ldr	x0, [sp, #16]
    1234:	add	x0, x1, x0
    1238:	lsr	x0, x0, #1
    123c:	str	x0, [sp, #72]
    1240:	ldr	x1, [sp, #72]
    1244:	ldr	x0, [sp, #40]
    1248:	bl	bb0 <PySequence_GetItem@plt>
    124c:	str	x0, [sp, #64]
    1250:	ldr	x0, [sp, #64]
    1254:	cmp	x0, #0x0
    1258:	b.ne	1264 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x644>  // b.any
    125c:	mov	x0, #0xffffffffffffffff    	// #-1
    1260:	b	12d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6b8>
    1264:	mov	w2, #0x0                   	// #0
    1268:	ldr	x1, [sp, #32]
    126c:	ldr	x0, [sp, #64]
    1270:	bl	bd0 <PyObject_RichCompareBool@plt>
    1274:	str	w0, [sp, #60]
    1278:	ldr	x2, [sp, #64]
    127c:	mov	w1, #0x99                  	// #153
    1280:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1284:	add	x0, x0, #0x590
    1288:	bl	de8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c8>
    128c:	ldr	w0, [sp, #60]
    1290:	cmp	w0, #0x0
    1294:	b.ge	12a0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x680>  // b.tcont
    1298:	mov	x0, #0xffffffffffffffff    	// #-1
    129c:	b	12d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6b8>
    12a0:	ldr	w0, [sp, #60]
    12a4:	cmp	w0, #0x0
    12a8:	b.eq	12bc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x69c>  // b.none
    12ac:	ldr	x0, [sp, #72]
    12b0:	add	x0, x0, #0x1
    12b4:	str	x0, [sp, #24]
    12b8:	b	12c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6a4>
    12bc:	ldr	x0, [sp, #72]
    12c0:	str	x0, [sp, #16]
    12c4:	ldr	x1, [sp, #24]
    12c8:	ldr	x0, [sp, #16]
    12cc:	cmp	x1, x0
    12d0:	b.lt	122c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x60c>  // b.tstop
    12d4:	ldr	x0, [sp, #24]
    12d8:	ldp	x29, x30, [sp], #80
    12dc:	ret
    12e0:	stp	x29, x30, [sp, #-96]!
    12e4:	mov	x29, sp
    12e8:	str	x0, [sp, #40]
    12ec:	str	x1, [sp, #32]
    12f0:	str	x2, [sp, #24]
    12f4:	str	xzr, [sp, #64]
    12f8:	mov	x0, #0xffffffffffffffff    	// #-1
    12fc:	str	x0, [sp, #56]
    1300:	ldr	x0, [sp, #24]
    1304:	cmp	x0, #0x0
    1308:	b.ne	1338 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x718>  // b.any
    130c:	ldr	x0, [sp, #32]
    1310:	ldr	x0, [x0, #16]
    1314:	cmp	x0, #0x2
    1318:	b.ne	1338 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x718>  // b.any
    131c:	ldr	x0, [sp, #32]
    1320:	ldr	x0, [x0, #24]
    1324:	str	x0, [sp, #80]
    1328:	ldr	x0, [sp, #32]
    132c:	ldr	x0, [x0, #32]
    1330:	str	x0, [sp, #72]
    1334:	b	1384 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x764>
    1338:	add	x3, sp, #0x38
    133c:	add	x2, sp, #0x40
    1340:	add	x1, sp, #0x48
    1344:	add	x0, sp, #0x50
    1348:	mov	x7, x3
    134c:	mov	x6, x2
    1350:	mov	x5, x1
    1354:	mov	x4, x0
    1358:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
    135c:	add	x3, x0, #0x1d8
    1360:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1364:	add	x2, x0, #0x880
    1368:	ldr	x1, [sp, #24]
    136c:	ldr	x0, [sp, #32]
    1370:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    1374:	cmp	w0, #0x0
    1378:	b.ne	1384 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x764>  // b.any
    137c:	mov	x0, #0x0                   	// #0
    1380:	b	13b8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x798>
    1384:	ldr	x0, [sp, #80]
    1388:	ldr	x1, [sp, #72]
    138c:	ldr	x2, [sp, #64]
    1390:	ldr	x3, [sp, #56]
    1394:	bl	11b8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x598>
    1398:	str	x0, [sp, #88]
    139c:	ldr	x0, [sp, #88]
    13a0:	cmp	x0, #0x0
    13a4:	b.ge	13b0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x790>  // b.tcont
    13a8:	mov	x0, #0x0                   	// #0
    13ac:	b	13b8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x798>
    13b0:	ldr	x0, [sp, #88]
    13b4:	bl	bc0 <PyLong_FromSsize_t@plt>
    13b8:	ldp	x29, x30, [sp], #96
    13bc:	ret
    13c0:	stp	x29, x30, [sp, #-96]!
    13c4:	mov	x29, sp
    13c8:	str	x0, [sp, #40]
    13cc:	str	x1, [sp, #32]
    13d0:	str	x2, [sp, #24]
    13d4:	str	xzr, [sp, #56]
    13d8:	mov	x0, #0xffffffffffffffff    	// #-1
    13dc:	str	x0, [sp, #48]
    13e0:	ldr	x0, [sp, #24]
    13e4:	cmp	x0, #0x0
    13e8:	b.ne	1418 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7f8>  // b.any
    13ec:	ldr	x0, [sp, #32]
    13f0:	ldr	x0, [x0, #16]
    13f4:	cmp	x0, #0x2
    13f8:	b.ne	1418 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7f8>  // b.any
    13fc:	ldr	x0, [sp, #32]
    1400:	ldr	x0, [x0, #24]
    1404:	str	x0, [sp, #72]
    1408:	ldr	x0, [sp, #32]
    140c:	ldr	x0, [x0, #32]
    1410:	str	x0, [sp, #64]
    1414:	b	1464 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x844>
    1418:	add	x3, sp, #0x30
    141c:	add	x2, sp, #0x38
    1420:	add	x1, sp, #0x40
    1424:	add	x0, sp, #0x48
    1428:	mov	x7, x3
    142c:	mov	x6, x2
    1430:	mov	x5, x1
    1434:	mov	x4, x0
    1438:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
    143c:	add	x3, x0, #0x200
    1440:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1444:	add	x2, x0, #0xa20
    1448:	ldr	x1, [sp, #24]
    144c:	ldr	x0, [sp, #32]
    1450:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    1454:	cmp	w0, #0x0
    1458:	b.ne	1464 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x844>  // b.any
    145c:	mov	x0, #0x0                   	// #0
    1460:	b	1534 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x914>
    1464:	ldr	x0, [sp, #72]
    1468:	ldr	x1, [sp, #64]
    146c:	ldr	x2, [sp, #56]
    1470:	ldr	x3, [sp, #48]
    1474:	bl	11b8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x598>
    1478:	str	x0, [sp, #88]
    147c:	ldr	x0, [sp, #88]
    1480:	cmp	x0, #0x0
    1484:	b.ge	1490 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x870>  // b.tcont
    1488:	mov	x0, #0x0                   	// #0
    148c:	b	1534 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x914>
    1490:	ldr	x0, [sp, #72]
    1494:	ldr	x1, [x0, #8]
    1498:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    149c:	ldr	x0, [x0, #4064]
    14a0:	cmp	x1, x0
    14a4:	b.ne	14cc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x8ac>  // b.any
    14a8:	ldr	x0, [sp, #72]
    14ac:	ldr	x1, [sp, #64]
    14b0:	mov	x2, x1
    14b4:	ldr	x1, [sp, #88]
    14b8:	bl	b70 <PyList_Insert@plt>
    14bc:	cmp	w0, #0x0
    14c0:	b.ge	1520 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x900>  // b.tcont
    14c4:	mov	x0, #0x0                   	// #0
    14c8:	b	1534 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x914>
    14cc:	ldr	x5, [sp, #72]
    14d0:	ldr	x0, [sp, #64]
    14d4:	mov	x4, x0
    14d8:	ldr	x3, [sp, #88]
    14dc:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    14e0:	add	x2, x0, #0x778
    14e4:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
    14e8:	add	x1, x0, #0x68
    14ec:	mov	x0, x5
    14f0:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    14f4:	str	x0, [sp, #80]
    14f8:	ldr	x0, [sp, #80]
    14fc:	cmp	x0, #0x0
    1500:	b.ne	150c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x8ec>  // b.any
    1504:	mov	x0, #0x0                   	// #0
    1508:	b	1534 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x914>
    150c:	ldr	x2, [sp, #80]
    1510:	mov	w1, #0xe3                  	// #227
    1514:	adrp	x0, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1518:	add	x0, x0, #0x590
    151c:	bl	de8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1c8>
    1520:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    1524:	ldr	x0, [x0, #4048]
    1528:	bl	dc0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1a0>
    152c:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10ac4>
    1530:	ldr	x0, [x0, #4048]
    1534:	ldp	x29, x30, [sp], #96
    1538:	ret

000000000000153c <PyInit__bisect@@Base>:
    153c:	stp	x29, x30, [sp, #-16]!
    1540:	mov	x29, sp
    1544:	mov	w1, #0x3f5                 	// #1013
    1548:	adrp	x0, 13000 <PyInit__bisect@@Base+0x11ac4>
    154c:	add	x0, x0, #0x120
    1550:	bl	c00 <PyModule_Create2@plt>
    1554:	ldp	x29, x30, [sp], #16
    1558:	ret

Disassembly of section .fini:

000000000000155c <.fini>:
    155c:	stp	x29, x30, [sp, #-16]!
    1560:	mov	x29, sp
    1564:	ldp	x29, x30, [sp], #16
    1568:	ret
