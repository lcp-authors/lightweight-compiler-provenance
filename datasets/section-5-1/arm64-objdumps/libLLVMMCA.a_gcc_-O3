In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCA.a_gcc_-O3:

CodeEmitter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>:
   0:	stp	x29, x30, [sp, #-304]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #368]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	cmp	x0, w1, uxtw
  20:	stp	x25, x26, [sp, #64]
  24:	b.ls	184 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x184>  // b.plast
  28:	mov	w24, w1
  2c:	ldr	x23, [x19, #360]
  30:	lsl	x21, x24, #3
  34:	add	x26, x23, x21
  38:	ldr	w0, [x26, #4]
  3c:	cbnz	w0, 154 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x154>
  40:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  44:	add	x25, sp, #0x50
  48:	add	x2, x25, #0x10
  4c:	str	x2, [sp, #80]
  50:	ldr	d0, [x0]
  54:	ldr	x0, [x19, #352]
  58:	str	d0, [sp, #88]
  5c:	cmp	x24, x0
  60:	ldr	x0, [x19, #344]
  64:	b.cs	1a4 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x1a4>  // b.hs, b.nlast
  68:	mov	w2, #0xa0                  	// #160
  6c:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
  70:	add	x20, sp, #0x90
  74:	umull	x1, w1, w2
  78:	ldr	d1, [x3]
  7c:	add	x2, x20, #0x20
  80:	add	x22, x0, x1
  84:	ldr	d0, [x0, x1]
  88:	ldr	x1, [x22, #8]
  8c:	str	d1, [sp, #168]
  90:	ldr	w0, [x22, #24]
  94:	stp	x1, x2, [sp, #152]
  98:	str	d0, [sp, #144]
  9c:	cbnz	w0, 174 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x174>
  a0:	ldp	x2, x0, [x19]
  a4:	mov	x1, x22
  a8:	ldr	x3, [x0]
  ac:	ldr	x3, [x3, #128]
  b0:	blr	x3
  b4:	tst	w0, #0xff
  b8:	b.eq	d4 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xd4>  // b.none
  bc:	ldp	x2, x0, [x19]
  c0:	mov	x1, x22
  c4:	mov	x3, x20
  c8:	ldr	x4, [x0]
  cc:	ldr	x4, [x4, #152]
  d0:	blr	x4
  d4:	ldr	x0, [x19, #16]
  d8:	add	x2, x19, #0x128
  dc:	ldr	w6, [x19, #32]
  e0:	mov	x1, x20
  e4:	ldr	x4, [x19]
  e8:	mov	x3, x25
  ec:	ldr	x5, [x0]
  f0:	str	w6, [x23, x21]
  f4:	add	x20, x20, #0x20
  f8:	ldr	x5, [x5, #32]
  fc:	blr	x5
 100:	ldr	w1, [x19, #32]
 104:	ldr	w2, [x23, x21]
 108:	ldr	x0, [sp, #160]
 10c:	sub	w1, w1, w2
 110:	str	w1, [x26, #4]
 114:	cmp	x0, x20
 118:	ldr	x19, [x23, x24, lsl #3]
 11c:	b.eq	124 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x124>  // b.none
 120:	bl	0 <free>
 124:	ldr	x0, [sp, #80]
 128:	add	x3, x25, #0x10
 12c:	cmp	x0, x3
 130:	b.eq	138 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0x138>  // b.none
 134:	bl	0 <free>
 138:	mov	x0, x19
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x21, x22, [sp, #32]
 144:	ldp	x23, x24, [sp, #48]
 148:	ldp	x25, x26, [sp, #64]
 14c:	ldp	x29, x30, [sp], #304
 150:	ret
 154:	ldr	x19, [x23, x24, lsl #3]
 158:	ldp	x21, x22, [sp, #32]
 15c:	mov	x0, x19
 160:	ldp	x19, x20, [sp, #16]
 164:	ldp	x23, x24, [sp, #48]
 168:	ldp	x25, x26, [sp, #64]
 16c:	ldp	x29, x30, [sp], #304
 170:	ret
 174:	add	x1, x22, #0x10
 178:	add	x0, x20, #0x10
 17c:	bl	0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 180:	b	a0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj+0xa0>
 184:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 188:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 18c:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 190:	add	x3, x3, #0x0
 194:	add	x1, x1, #0x0
 198:	add	x0, x0, #0x0
 19c:	mov	w2, #0x95                  	// #149
 1a0:	bl	0 <__assert_fail>
 1a4:	adrp	x3, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 1a8:	adrp	x1, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 1ac:	adrp	x0, 0 <_ZN4llvm3mca11CodeEmitter23getOrCreateEncodingInfoEj>
 1b0:	add	x3, x3, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x0, x0, #0x0
 1bc:	mov	w2, #0xfa                  	// #250
 1c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #4
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #4
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #4
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #4
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	mov	x2, x22
 10c:	mov	x3, #0x10                  	// #16
 110:	add	x1, x0, x3
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9MCOperandEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Context.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x21, x1
  10:	mov	x22, x8
  14:	ldr	x1, [x0, #56]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x19, x2
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x26, x0
  28:	mov	x0, #0x38                  	// #56
  2c:	ldr	x20, [x1, #152]
  30:	stp	x23, x24, [sp, #48]
  34:	add	x23, sp, #0x88
  38:	stp	x27, x28, [sp, #80]
  3c:	bl	0 <_Znwm>
  40:	mov	x1, x20
  44:	mov	x27, x0
  48:	bl	0 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>
  4c:	ldr	x24, [x26, #48]
  50:	mov	x0, #0x98                  	// #152
  54:	ldr	w25, [x21, #12]
  58:	bl	0 <_Znwm>
  5c:	mov	x2, x24
  60:	mov	x1, x20
  64:	mov	w3, w25
  68:	str	x0, [sp, #104]
  6c:	bl	0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>
  70:	ldrb	w28, [x21, #24]
  74:	ldp	w24, w25, [x21, #16]
  78:	mov	x0, #0x50                  	// #80
  7c:	bl	0 <_Znwm>
  80:	mov	w4, w28
  84:	mov	w3, w25
  88:	mov	x1, x20
  8c:	mov	x25, x0
  90:	mov	w2, w24
  94:	bl	0 <_ZN4llvm3mca10LSUnitBaseC2ERKNS_12MCSchedModelEjjb>
  98:	adrp	x2, 0 <_ZTVN4llvm3mca6LSUnitE>
  9c:	mov	x0, #0x90                  	// #144
  a0:	stur	xzr, [x25, #68]
  a4:	ldr	x2, [x2]
  a8:	str	wzr, [x25, #76]
  ac:	add	x2, x2, #0x10
  b0:	str	x2, [x25]
  b4:	bl	0 <_Znwm>
  b8:	mov	x28, x0
  bc:	mov	x0, #0x168                 	// #360
  c0:	bl	0 <_Znwm>
  c4:	mov	x1, x20
  c8:	mov	x20, x0
  cc:	bl	0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>
  d0:	stp	xzr, x20, [x28, #16]
  d4:	adrp	x1, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
  d8:	stp	xzr, xzr, [x28, #32]
  dc:	mov	x0, x28
  e0:	ldr	x1, [x1]
  e4:	stp	xzr, xzr, [x28, #48]
  e8:	add	x1, x1, #0x10
  ec:	stp	x1, x25, [x28]
  f0:	mov	x1, x23
  f4:	stp	xzr, xzr, [x28, #64]
  f8:	stp	xzr, xzr, [x28, #80]
  fc:	stp	xzr, xzr, [x28, #96]
 100:	stp	xzr, xzr, [x28, #112]
 104:	str	xzr, [x28, #128]
 108:	str	wzr, [x28, #136]
 10c:	strb	wzr, [x28, #140]
 110:	str	xzr, [sp, #136]
 114:	bl	0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>
 118:	ldr	x0, [sp, #136]
 11c:	cbz	x0, 12c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x12c>
 120:	ldr	x1, [x0]
 124:	ldr	x1, [x1, #8]
 128:	blr	x1
 12c:	mov	x0, #0xf0                  	// #240
 130:	bl	0 <_Znwm>
 134:	adrp	x4, 0 <_ZTVN4llvm3mca10EntryStageE>
 138:	mov	x24, x0
 13c:	add	x0, x0, #0x18
 140:	ldr	w3, [x21, #8]
 144:	ldr	x4, [x4]
 148:	str	xzr, [x24, #8]
 14c:	ldp	x5, x20, [x26, #48]
 150:	str	wzr, [x24, #24]
 154:	str	xzr, [x24, #32]
 158:	add	x2, x24, #0x60
 15c:	add	x4, x4, #0x10
 160:	stp	x0, x0, [x0, #16]
 164:	mov	x1, #0x1000000000          	// #68719476736
 168:	str	xzr, [x0, #32]
 16c:	mov	x0, #0x78                  	// #120
 170:	str	x4, [x24]
 174:	str	wzr, [x24, #64]
 178:	stp	xzr, x2, [x24, #72]
 17c:	str	x1, [x24, #88]
 180:	str	x19, [x24, #224]
 184:	str	wzr, [x24, #232]
 188:	str	x5, [sp, #112]
 18c:	str	w3, [sp, #124]
 190:	bl	0 <_Znwm>
 194:	ldr	x5, [sp, #112]
 198:	mov	x1, x20
 19c:	ldr	w3, [sp, #124]
 1a0:	mov	x4, x27
 1a4:	mov	x2, x5
 1a8:	str	x0, [sp, #112]
 1ac:	ldr	x5, [sp, #104]
 1b0:	bl	0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 1b4:	ldrb	w19, [x21, #25]
 1b8:	mov	x0, #0x58                  	// #88
 1bc:	bl	0 <_Znwm>
 1c0:	adrp	x2, 0 <_ZTVN4llvm3mca12ExecuteStageE>
 1c4:	mov	x20, x0
 1c8:	add	x1, x0, #0x18
 1cc:	mov	x0, #0x58                  	// #88
 1d0:	ldr	x2, [x2]
 1d4:	str	xzr, [x20, #8]
 1d8:	str	wzr, [x20, #24]
 1dc:	str	xzr, [x20, #32]
 1e0:	add	x2, x2, #0x10
 1e4:	stp	x1, x1, [x1, #16]
 1e8:	str	xzr, [x1, #32]
 1ec:	str	x2, [x20]
 1f0:	stp	x28, xzr, [x20, #64]
 1f4:	strb	w19, [x20, #80]
 1f8:	bl	0 <_Znwm>
 1fc:	mov	x19, x0
 200:	adrp	x3, 0 <_ZTVN4llvm3mca11RetireStageE>
 204:	add	x1, x0, #0x18
 208:	ldp	w2, w0, [x26, #8]
 20c:	str	xzr, [x19, #8]
 210:	ldr	x3, [x3]
 214:	str	wzr, [x19, #24]
 218:	str	xzr, [x19, #32]
 21c:	cmp	w2, w0
 220:	stp	x1, x1, [x1, #16]
 224:	add	x3, x3, #0x10
 228:	str	xzr, [x1, #32]
 22c:	ldr	x1, [sp, #104]
 230:	str	x3, [x19]
 234:	stp	x27, x1, [x19, #64]
 238:	str	x25, [x19, #80]
 23c:	b.cs	418 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x418>  // b.hs, b.nlast
 240:	ldr	x4, [x26]
 244:	mov	w3, w2
 248:	add	x5, x3, #0x1
 24c:	mov	w1, w0
 250:	cmp	x5, w0, uxtw
 254:	str	x27, [x4, x3, lsl #3]
 258:	b.hi	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.pmore
 25c:	add	w2, w2, #0x1
 260:	str	w2, [x26, #8]
 264:	cmp	w0, w2
 268:	b.ls	42c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x42c>  // b.plast
 26c:	ldr	x4, [x26]
 270:	mov	w3, w2
 274:	add	x5, x3, #0x1
 278:	cmp	x5, x1
 27c:	ldr	x5, [sp, #104]
 280:	str	x5, [x4, x3, lsl #3]
 284:	b.hi	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.pmore
 288:	add	w2, w2, #0x1
 28c:	str	w2, [x26, #8]
 290:	cmp	w0, w2
 294:	b.ls	444 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x444>  // b.plast
 298:	ldr	x4, [x26]
 29c:	mov	w3, w2
 2a0:	add	x5, x3, #0x1
 2a4:	cmp	x1, x5
 2a8:	str	x25, [x4, x3, lsl #3]
 2ac:	b.cc	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.lo, b.ul, b.last
 2b0:	add	w2, w2, #0x1
 2b4:	str	w2, [x26, #8]
 2b8:	cmp	w0, w2
 2bc:	b.ls	45c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x45c>  // b.plast
 2c0:	ldr	x3, [x26]
 2c4:	mov	w0, w2
 2c8:	add	x4, x0, #0x1
 2cc:	cmp	x4, x1
 2d0:	str	x28, [x3, x0, lsl #3]
 2d4:	b.hi	470 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x470>  // b.pmore
 2d8:	add	w2, w2, #0x1
 2dc:	str	w2, [x26, #8]
 2e0:	mov	x0, #0x88                  	// #136
 2e4:	bl	0 <_Znwm>
 2e8:	add	x3, x0, #0x58
 2ec:	add	x5, x0, #0x10
 2f0:	mov	x4, #0x800000000           	// #34359738368
 2f4:	stp	x5, x4, [x0]
 2f8:	mov	x1, x23
 2fc:	str	wzr, [x0, #88]
 300:	str	xzr, [x0, #96]
 304:	stp	x3, x3, [x3, #16]
 308:	str	xzr, [x3, #32]
 30c:	str	x0, [x22]
 310:	str	wzr, [x0, #128]
 314:	str	x24, [sp, #136]
 318:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 31c:	ldr	x0, [sp, #136]
 320:	cbz	x0, 330 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x330>
 324:	ldr	x1, [x0]
 328:	ldr	x1, [x1, #8]
 32c:	blr	x1
 330:	ldr	w26, [x21]
 334:	ldr	x25, [x22]
 338:	cbnz	w26, 3cc <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3cc>
 33c:	ldr	x2, [sp, #112]
 340:	mov	x0, x25
 344:	mov	x1, x23
 348:	str	x2, [sp, #136]
 34c:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 350:	ldr	x0, [sp, #136]
 354:	cbz	x0, 364 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x364>
 358:	ldr	x1, [x0]
 35c:	ldr	x1, [x1, #8]
 360:	blr	x1
 364:	ldr	x0, [x22]
 368:	mov	x1, x23
 36c:	str	x20, [sp, #136]
 370:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 374:	ldr	x0, [sp, #136]
 378:	cbz	x0, 388 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x388>
 37c:	ldr	x1, [x0]
 380:	ldr	x1, [x1, #8]
 384:	blr	x1
 388:	ldr	x0, [x22]
 38c:	mov	x1, x23
 390:	str	x19, [sp, #136]
 394:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 398:	ldr	x0, [sp, #136]
 39c:	cbz	x0, 3ac <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x3ac>
 3a0:	ldr	x1, [x0]
 3a4:	ldr	x1, [x1, #8]
 3a8:	blr	x1
 3ac:	mov	x0, x22
 3b0:	ldp	x19, x20, [sp, #16]
 3b4:	ldp	x21, x22, [sp, #32]
 3b8:	ldp	x23, x24, [sp, #48]
 3bc:	ldp	x25, x26, [sp, #64]
 3c0:	ldp	x27, x28, [sp, #80]
 3c4:	ldp	x29, x30, [sp], #144
 3c8:	ret
 3cc:	ldr	w21, [x21, #4]
 3d0:	mov	x0, #0xe8                  	// #232
 3d4:	bl	0 <_Znwm>
 3d8:	mov	w2, w21
 3dc:	mov	w3, #0x1                   	// #1
 3e0:	mov	x21, x0
 3e4:	mov	w1, w26
 3e8:	bl	0 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>
 3ec:	str	x21, [sp, #136]
 3f0:	mov	x0, x25
 3f4:	mov	x1, x23
 3f8:	bl	0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>
 3fc:	ldr	x0, [sp, #136]
 400:	cbz	x0, 410 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x410>
 404:	ldr	x1, [x0]
 408:	ldr	x1, [x1, #8]
 40c:	blr	x1
 410:	ldr	x25, [x22]
 414:	b	33c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x33c>
 418:	mov	x0, x26
 41c:	mov	x1, #0x0                   	// #0
 420:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 424:	ldp	w2, w0, [x26, #8]
 428:	b	240 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x240>
 42c:	mov	x0, x26
 430:	mov	x1, #0x0                   	// #0
 434:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 438:	ldp	w2, w0, [x26, #8]
 43c:	mov	w1, w0
 440:	b	26c <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x26c>
 444:	mov	x0, x26
 448:	mov	x1, #0x0                   	// #0
 44c:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 450:	ldp	w2, w0, [x26, #8]
 454:	mov	w1, w0
 458:	b	298 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x298>
 45c:	mov	x1, #0x0                   	// #0
 460:	mov	x0, x26
 464:	bl	0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 468:	ldp	w2, w1, [x26, #8]
 46c:	b	2c0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE+0x2c0>
 470:	adrp	x3, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 474:	adrp	x1, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 478:	adrp	x0, 0 <_ZN4llvm3mca7Context21createDefaultPipelineERKNS0_15PipelineOptionsERNS0_9SourceMgrE>
 47c:	add	x3, x3, #0x0
 480:	add	x1, x1, #0x0
 484:	add	x0, x0, #0x0
 488:	mov	w2, #0x43                  	// #67
 48c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	str	x21, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	str	x1, [x20], #208
  28:	ldrb	w0, [x20, #8]
  2c:	tbz	w0, #0, 10c <_ZN4llvm3mca15ResourceManagerD1Ev+0x10c>
  30:	ldr	x0, [x19, #160]
  34:	add	x1, x19, #0xb0
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm3mca15ResourceManagerD1Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19, #80]
  48:	add	x1, x19, #0x60
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca15ResourceManagerD1Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x0, [x19, #56]
  5c:	cbz	x0, 64 <_ZN4llvm3mca15ResourceManagerD1Ev+0x64>
  60:	bl	0 <_ZdlPv>
  64:	ldp	x20, x21, [x19, #32]
  68:	cmp	x20, x21
  6c:	b.eq	94 <_ZN4llvm3mca15ResourceManagerD1Ev+0x94>  // b.none
  70:	ldr	x0, [x20]
  74:	cbz	x0, e8 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe8>
  78:	ldr	x1, [x0]
  7c:	add	x20, x20, #0x8
  80:	ldr	x1, [x1, #8]
  84:	blr	x1
  88:	cmp	x21, x20
  8c:	b.ne	70 <_ZN4llvm3mca15ResourceManagerD1Ev+0x70>  // b.any
  90:	ldr	x21, [x19, #32]
  94:	cbz	x21, a0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xa0>
  98:	mov	x0, x21
  9c:	bl	0 <_ZdlPv>
  a0:	ldp	x20, x21, [x19, #8]
  a4:	cmp	x20, x21
  a8:	b.eq	d0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xd0>  // b.none
  ac:	nop
  b0:	ldr	x0, [x20]
  b4:	add	x20, x20, #0x8
  b8:	cbz	x0, fc <_ZN4llvm3mca15ResourceManagerD1Ev+0xfc>
  bc:	mov	x1, #0x30                  	// #48
  c0:	bl	0 <_ZdlPvm>
  c4:	cmp	x21, x20
  c8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>  // b.any
  cc:	ldr	x21, [x19, #8]
  d0:	cbz	x21, 148 <_ZN4llvm3mca15ResourceManagerD1Ev+0x148>
  d4:	mov	x0, x21
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #48
  e4:	b	0 <_ZdlPv>
  e8:	add	x20, x20, #0x8
  ec:	cmp	x21, x20
  f0:	b.ne	70 <_ZN4llvm3mca15ResourceManagerD1Ev+0x70>  // b.any
  f4:	ldr	x21, [x19, #32]
  f8:	b	94 <_ZN4llvm3mca15ResourceManagerD1Ev+0x94>
  fc:	cmp	x21, x20
 100:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>  // b.any
 104:	ldr	x21, [x19, #8]
 108:	b	d0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xd0>
 10c:	ldr	w2, [x19, #232]
 110:	mov	w1, #0x18                  	// #24
 114:	ldr	x0, [x19, #224]
 118:	umull	x1, w2, w1
 11c:	bl	0 <_ZdlPvm>
 120:	ldrb	w0, [x20, #8]
 124:	tbz	w0, #0, 30 <_ZN4llvm3mca15ResourceManagerD1Ev+0x30>
 128:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 12c:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 130:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 134:	add	x3, x3, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x0, x0, #0x0
 140:	mov	w2, #0x45b                 	// #1115
 144:	bl	0 <__assert_fail>
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldr	x21, [sp, #32]
 150:	ldp	x29, x30, [sp], #48
 154:	ret

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	str	x21, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	str	x1, [x20], #208
  28:	ldrb	w0, [x20, #8]
  2c:	tbz	w0, #0, 118 <_ZN4llvm3mca15ResourceManagerD0Ev+0x118>
  30:	ldr	x0, [x19, #160]
  34:	add	x1, x19, #0xb0
  38:	cmp	x0, x1
  3c:	b.eq	44 <_ZN4llvm3mca15ResourceManagerD0Ev+0x44>  // b.none
  40:	bl	0 <free>
  44:	ldr	x0, [x19, #80]
  48:	add	x1, x19, #0x60
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca15ResourceManagerD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x0, [x19, #56]
  5c:	cbz	x0, 64 <_ZN4llvm3mca15ResourceManagerD0Ev+0x64>
  60:	bl	0 <_ZdlPv>
  64:	ldp	x20, x21, [x19, #32]
  68:	cmp	x20, x21
  6c:	b.eq	94 <_ZN4llvm3mca15ResourceManagerD0Ev+0x94>  // b.none
  70:	ldr	x0, [x20]
  74:	cbz	x0, f4 <_ZN4llvm3mca15ResourceManagerD0Ev+0xf4>
  78:	ldr	x1, [x0]
  7c:	add	x20, x20, #0x8
  80:	ldr	x1, [x1, #8]
  84:	blr	x1
  88:	cmp	x21, x20
  8c:	b.ne	70 <_ZN4llvm3mca15ResourceManagerD0Ev+0x70>  // b.any
  90:	ldr	x21, [x19, #32]
  94:	cbz	x21, a0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xa0>
  98:	mov	x0, x21
  9c:	bl	0 <_ZdlPv>
  a0:	ldp	x20, x21, [x19, #8]
  a4:	cmp	x20, x21
  a8:	b.eq	d0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xd0>  // b.none
  ac:	nop
  b0:	ldr	x0, [x20]
  b4:	add	x20, x20, #0x8
  b8:	cbz	x0, 108 <_ZN4llvm3mca15ResourceManagerD0Ev+0x108>
  bc:	mov	x1, #0x30                  	// #48
  c0:	bl	0 <_ZdlPvm>
  c4:	cmp	x21, x20
  c8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>  // b.any
  cc:	ldr	x21, [x19, #8]
  d0:	cbz	x21, dc <_ZN4llvm3mca15ResourceManagerD0Ev+0xdc>
  d4:	mov	x0, x21
  d8:	bl	0 <_ZdlPv>
  dc:	mov	x0, x19
  e0:	mov	x1, #0x168                 	// #360
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldr	x21, [sp, #32]
  ec:	ldp	x29, x30, [sp], #48
  f0:	b	0 <_ZdlPvm>
  f4:	add	x20, x20, #0x8
  f8:	cmp	x21, x20
  fc:	b.ne	70 <_ZN4llvm3mca15ResourceManagerD0Ev+0x70>  // b.any
 100:	ldr	x21, [x19, #32]
 104:	b	94 <_ZN4llvm3mca15ResourceManagerD0Ev+0x94>
 108:	cmp	x21, x20
 10c:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>  // b.any
 110:	ldr	x21, [x19, #8]
 114:	b	d0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xd0>
 118:	ldr	w2, [x19, #232]
 11c:	mov	w1, #0x18                  	// #24
 120:	ldr	x0, [x19, #224]
 124:	umull	x1, w2, w1
 128:	bl	0 <_ZdlPvm>
 12c:	ldrb	w0, [x20, #8]
 130:	tbz	w0, #0, 30 <_ZN4llvm3mca15ResourceManagerD0Ev+0x30>
 134:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 138:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 13c:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 140:	add	x3, x3, #0x0
 144:	add	x1, x1, #0x0
 148:	add	x0, x0, #0x0
 14c:	mov	w2, #0x45b                 	// #1115
 150:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca9SchedulerD0Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #104]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD0Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD0Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x20, [x19, #24]
  54:	cbz	x20, 14c <_ZN4llvm3mca9SchedulerD0Ev+0x14c>
  58:	ldr	x1, [x20]
  5c:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  60:	add	x0, x0, #0x0
  64:	ldr	x1, [x1, #8]
  68:	cmp	x1, x0
  6c:	b.ne	1dc <_ZN4llvm3mca9SchedulerD0Ev+0x1dc>  // b.any
  70:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD0Ev>
  74:	stp	x21, x22, [sp, #32]
  78:	mov	x21, x20
  7c:	ldr	x0, [x0]
  80:	add	x0, x0, #0x10
  84:	str	x0, [x21], #208
  88:	ldrb	w0, [x21, #8]
  8c:	tbz	w0, #0, 1a0 <_ZN4llvm3mca9SchedulerD0Ev+0x1a0>
  90:	ldr	x0, [x20, #160]
  94:	add	x1, x20, #0xb0
  98:	cmp	x0, x1
  9c:	b.eq	a4 <_ZN4llvm3mca9SchedulerD0Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x20, #80]
  a8:	add	x1, x20, #0x60
  ac:	cmp	x0, x1
  b0:	b.eq	b8 <_ZN4llvm3mca9SchedulerD0Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x20, #56]
  bc:	cbz	x0, c4 <_ZN4llvm3mca9SchedulerD0Ev+0xc4>
  c0:	bl	0 <_ZdlPv>
  c4:	ldp	x21, x22, [x20, #32]
  c8:	cmp	x21, x22
  cc:	b.eq	f4 <_ZN4llvm3mca9SchedulerD0Ev+0xf4>  // b.none
  d0:	ldr	x0, [x21]
  d4:	cbz	x0, 17c <_ZN4llvm3mca9SchedulerD0Ev+0x17c>
  d8:	ldr	x1, [x0]
  dc:	add	x21, x21, #0x8
  e0:	ldr	x1, [x1, #8]
  e4:	blr	x1
  e8:	cmp	x22, x21
  ec:	b.ne	d0 <_ZN4llvm3mca9SchedulerD0Ev+0xd0>  // b.any
  f0:	ldr	x22, [x20, #32]
  f4:	cbz	x22, 100 <_ZN4llvm3mca9SchedulerD0Ev+0x100>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x21, x22, [x20, #8]
 104:	cmp	x21, x22
 108:	b.eq	130 <_ZN4llvm3mca9SchedulerD0Ev+0x130>  // b.none
 10c:	nop
 110:	ldr	x0, [x21]
 114:	add	x21, x21, #0x8
 118:	cbz	x0, 190 <_ZN4llvm3mca9SchedulerD0Ev+0x190>
 11c:	mov	x1, #0x30                  	// #48
 120:	bl	0 <_ZdlPvm>
 124:	cmp	x22, x21
 128:	b.ne	110 <_ZN4llvm3mca9SchedulerD0Ev+0x110>  // b.any
 12c:	ldr	x22, [x20, #8]
 130:	cbz	x22, 13c <_ZN4llvm3mca9SchedulerD0Ev+0x13c>
 134:	mov	x0, x22
 138:	bl	0 <_ZdlPv>
 13c:	mov	x0, x20
 140:	mov	x1, #0x168                 	// #360
 144:	bl	0 <_ZdlPvm>
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldr	x0, [x19, #16]
 150:	cbz	x0, 160 <_ZN4llvm3mca9SchedulerD0Ev+0x160>
 154:	ldr	x1, [x0]
 158:	ldr	x1, [x1, #8]
 15c:	blr	x1
 160:	mov	x0, x19
 164:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
 168:	mov	x0, x19
 16c:	mov	x1, #0x90                  	// #144
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x29, x30, [sp], #48
 178:	b	0 <_ZdlPvm>
 17c:	add	x21, x21, #0x8
 180:	cmp	x22, x21
 184:	b.ne	d0 <_ZN4llvm3mca9SchedulerD0Ev+0xd0>  // b.any
 188:	ldr	x22, [x20, #32]
 18c:	b	f4 <_ZN4llvm3mca9SchedulerD0Ev+0xf4>
 190:	cmp	x22, x21
 194:	b.ne	110 <_ZN4llvm3mca9SchedulerD0Ev+0x110>  // b.any
 198:	ldr	x22, [x20, #8]
 19c:	b	130 <_ZN4llvm3mca9SchedulerD0Ev+0x130>
 1a0:	ldr	w2, [x20, #232]
 1a4:	mov	w1, #0x18                  	// #24
 1a8:	ldr	x0, [x20, #224]
 1ac:	umull	x1, w2, w1
 1b0:	bl	0 <_ZdlPvm>
 1b4:	ldrb	w0, [x21, #8]
 1b8:	tbz	w0, #0, 90 <_ZN4llvm3mca9SchedulerD0Ev+0x90>
 1bc:	adrp	x3, 0 <_ZN4llvm3mca9SchedulerD0Ev>
 1c0:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD0Ev>
 1c4:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD0Ev>
 1c8:	add	x3, x3, #0x0
 1cc:	add	x1, x1, #0x0
 1d0:	add	x0, x0, #0x0
 1d4:	mov	w2, #0x45b                 	// #1115
 1d8:	bl	0 <__assert_fail>
 1dc:	mov	x0, x20
 1e0:	blr	x1
 1e4:	b	14c <_ZN4llvm3mca9SchedulerD0Ev+0x14c>

Disassembly of section .text._ZN4llvm3mca9SchedulerD2Ev:

0000000000000000 <_ZN4llvm3mca9SchedulerD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #104]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca9SchedulerD1Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #80]
  30:	cbz	x0, 38 <_ZN4llvm3mca9SchedulerD1Ev+0x38>
  34:	bl	0 <_ZdlPv>
  38:	ldr	x0, [x19, #56]
  3c:	cbz	x0, 44 <_ZN4llvm3mca9SchedulerD1Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #32]
  48:	cbz	x0, 50 <_ZN4llvm3mca9SchedulerD1Ev+0x50>
  4c:	bl	0 <_ZdlPv>
  50:	ldr	x20, [x19, #24]
  54:	cbz	x20, 14c <_ZN4llvm3mca9SchedulerD1Ev+0x14c>
  58:	ldr	x1, [x20]
  5c:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD1Ev>
  60:	add	x0, x0, #0x0
  64:	ldr	x1, [x1, #8]
  68:	cmp	x1, x0
  6c:	b.ne	1d0 <_ZN4llvm3mca9SchedulerD1Ev+0x1d0>  // b.any
  70:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD1Ev>
  74:	stp	x21, x22, [sp, #32]
  78:	mov	x21, x20
  7c:	ldr	x0, [x0]
  80:	add	x0, x0, #0x10
  84:	str	x0, [x21], #208
  88:	ldrb	w0, [x21, #8]
  8c:	tbz	w0, #0, 194 <_ZN4llvm3mca9SchedulerD1Ev+0x194>
  90:	ldr	x0, [x20, #160]
  94:	add	x1, x20, #0xb0
  98:	cmp	x0, x1
  9c:	b.eq	a4 <_ZN4llvm3mca9SchedulerD1Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x20, #80]
  a8:	add	x1, x20, #0x60
  ac:	cmp	x0, x1
  b0:	b.eq	b8 <_ZN4llvm3mca9SchedulerD1Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x20, #56]
  bc:	cbz	x0, c4 <_ZN4llvm3mca9SchedulerD1Ev+0xc4>
  c0:	bl	0 <_ZdlPv>
  c4:	ldp	x21, x22, [x20, #32]
  c8:	cmp	x21, x22
  cc:	b.eq	f4 <_ZN4llvm3mca9SchedulerD1Ev+0xf4>  // b.none
  d0:	ldr	x0, [x21]
  d4:	cbz	x0, 170 <_ZN4llvm3mca9SchedulerD1Ev+0x170>
  d8:	ldr	x1, [x0]
  dc:	add	x21, x21, #0x8
  e0:	ldr	x1, [x1, #8]
  e4:	blr	x1
  e8:	cmp	x22, x21
  ec:	b.ne	d0 <_ZN4llvm3mca9SchedulerD1Ev+0xd0>  // b.any
  f0:	ldr	x22, [x20, #32]
  f4:	cbz	x22, 100 <_ZN4llvm3mca9SchedulerD1Ev+0x100>
  f8:	mov	x0, x22
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x21, x22, [x20, #8]
 104:	cmp	x21, x22
 108:	b.eq	130 <_ZN4llvm3mca9SchedulerD1Ev+0x130>  // b.none
 10c:	nop
 110:	ldr	x0, [x21]
 114:	add	x21, x21, #0x8
 118:	cbz	x0, 184 <_ZN4llvm3mca9SchedulerD1Ev+0x184>
 11c:	mov	x1, #0x30                  	// #48
 120:	bl	0 <_ZdlPvm>
 124:	cmp	x22, x21
 128:	b.ne	110 <_ZN4llvm3mca9SchedulerD1Ev+0x110>  // b.any
 12c:	ldr	x22, [x20, #8]
 130:	cbz	x22, 13c <_ZN4llvm3mca9SchedulerD1Ev+0x13c>
 134:	mov	x0, x22
 138:	bl	0 <_ZdlPv>
 13c:	mov	x0, x20
 140:	mov	x1, #0x168                 	// #360
 144:	bl	0 <_ZdlPvm>
 148:	ldp	x21, x22, [sp, #32]
 14c:	ldr	x0, [x19, #16]
 150:	cbz	x0, 160 <_ZN4llvm3mca9SchedulerD1Ev+0x160>
 154:	ldr	x1, [x0]
 158:	ldr	x1, [x1, #8]
 15c:	blr	x1
 160:	mov	x0, x19
 164:	ldp	x19, x20, [sp, #16]
 168:	ldp	x29, x30, [sp], #48
 16c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
 170:	add	x21, x21, #0x8
 174:	cmp	x22, x21
 178:	b.ne	d0 <_ZN4llvm3mca9SchedulerD1Ev+0xd0>  // b.any
 17c:	ldr	x22, [x20, #32]
 180:	b	f4 <_ZN4llvm3mca9SchedulerD1Ev+0xf4>
 184:	cmp	x22, x21
 188:	b.ne	110 <_ZN4llvm3mca9SchedulerD1Ev+0x110>  // b.any
 18c:	ldr	x22, [x20, #8]
 190:	b	130 <_ZN4llvm3mca9SchedulerD1Ev+0x130>
 194:	ldr	w2, [x20, #232]
 198:	mov	w1, #0x18                  	// #24
 19c:	ldr	x0, [x20, #224]
 1a0:	umull	x1, w2, w1
 1a4:	bl	0 <_ZdlPvm>
 1a8:	ldrb	w0, [x21, #8]
 1ac:	tbz	w0, #0, 90 <_ZN4llvm3mca9SchedulerD1Ev+0x90>
 1b0:	adrp	x3, 0 <_ZN4llvm3mca9SchedulerD1Ev>
 1b4:	adrp	x1, 0 <_ZN4llvm3mca9SchedulerD1Ev>
 1b8:	adrp	x0, 0 <_ZN4llvm3mca9SchedulerD1Ev>
 1bc:	add	x3, x3, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x0, x0, #0x0
 1c8:	mov	w2, #0x45b                 	// #1115
 1cc:	bl	0 <__assert_fail>
 1d0:	mov	x0, x20
 1d4:	blr	x1
 1d8:	b	14c <_ZN4llvm3mca9SchedulerD1Ev+0x14c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	cmp	x1, x0
  20:	str	x1, [sp, #72]
  24:	b.hi	1a0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x1a0>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #88]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x19
  58:	csel	x1, x2, x19, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	170 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x170>  // b.pmore
  64:	mov	w22, w1
  68:	lsl	x0, x1, #3
  6c:	str	x1, [sp, #80]
  70:	bl	0 <malloc>
  74:	mov	x21, x0
  78:	cbz	x0, 188 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x188>
  7c:	ldr	w4, [x20, #8]
  80:	ldr	x2, [x20]
  84:	lsl	x4, x4, #3
  88:	add	x19, x2, x4
  8c:	cmp	x2, x19
  90:	b.eq	138 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x138>  // b.none
  94:	sub	x3, x19, x2
  98:	add	x1, x2, #0xf
  9c:	sub	x3, x3, #0x8
  a0:	str	x23, [sp, #48]
  a4:	cmp	x3, #0x30
  a8:	sub	x1, x1, x21
  ac:	mov	x0, x2
  b0:	lsr	x3, x3, #3
  b4:	ccmp	x1, #0x1e, #0x0, hi  // hi = pmore
  b8:	b.ls	1b4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x1b4>  // b.plast
  bc:	add	x3, x3, #0x1
  c0:	mov	x1, #0x0                   	// #0
  c4:	movi	v1.4s, #0x0
  c8:	lsr	x0, x3, #1
  cc:	lsl	x0, x0, #4
  d0:	ldr	q0, [x2, x1]
  d4:	str	q1, [x2, x1]
  d8:	str	q0, [x21, x1]
  dc:	add	x1, x1, #0x10
  e0:	cmp	x0, x1
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xd0>  // b.any
  e8:	and	x0, x3, #0xfffffffffffffffe
  ec:	tbz	w3, #0, fc <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xfc>
  f0:	ldr	x1, [x2, x0, lsl #3]
  f4:	str	xzr, [x2, x0, lsl #3]
  f8:	str	x1, [x21, x0, lsl #3]
  fc:	ldr	x23, [x20]
 100:	add	x19, x23, x4
 104:	cmp	x23, x19
 108:	b.eq	1d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x1d0>  // b.none
 10c:	nop
 110:	ldr	x1, [x19, #-8]!
 114:	mov	x0, x1
 118:	cbz	x1, 164 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x164>
 11c:	ldr	x1, [x1]
 120:	ldr	x1, [x1, #8]
 124:	blr	x1
 128:	cmp	x19, x23
 12c:	b.ne	110 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x110>  // b.any
 130:	ldr	x19, [x20]
 134:	ldr	x23, [sp, #48]
 138:	add	x0, x20, #0x10
 13c:	cmp	x19, x0
 140:	b.eq	14c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x14c>  // b.none
 144:	mov	x0, x19
 148:	bl	0 <free>
 14c:	str	x21, [x20]
 150:	str	w22, [x20, #12]
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x21, x22, [sp, #32]
 15c:	ldp	x29, x30, [sp], #96
 160:	ret
 164:	cmp	x19, x23
 168:	b.ne	110 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x110>  // b.any
 16c:	b	130 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x130>
 170:	mov	x0, #0x7fffffff8           	// #34359738360
 174:	mov	w22, #0xffffffff            	// #-1
 178:	str	x3, [sp, #80]
 17c:	bl	0 <malloc>
 180:	mov	x21, x0
 184:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x7c>
 188:	mov	x21, #0x0                   	// #0
 18c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
 190:	mov	w1, #0x1                   	// #1
 194:	add	x0, x0, #0x0
 198:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 19c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x7c>
 1a0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm>
 1a4:	mov	w1, #0x1                   	// #1
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 1b0:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x28>
 1b4:	mov	x1, x21
 1b8:	ldr	x2, [x0]
 1bc:	str	xzr, [x0], #8
 1c0:	str	x2, [x1], #8
 1c4:	cmp	x19, x0
 1c8:	b.ne	1b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x1b8>  // b.any
 1cc:	b	fc <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0xfc>
 1d0:	ldr	x23, [sp, #48]
 1d4:	b	138 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca12HardwareUnitESt14default_deleteIS3_EELb0EE4growEm+0x138>

HWEventListener.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca15HWEventListener6anchorEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD2Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD1Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListenerD0Ev:

0000000000000000 <_ZN4llvm3mca15HWEventListenerD0Ev>:
   0:	mov	x1, #0x8                   	// #8
   4:	b	0 <_ZdlPvm>

HardwareUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12HardwareUnitD1Ev>:
   0:	ret
   4:	nop

0000000000000008 <_ZN4llvm3mca12HardwareUnitD0Ev>:
   8:	stp	x29, x30, [sp, #-32]!
   c:	mov	x29, sp
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	bl	0 <_ZN4llvm3mca12HardwareUnitD1Ev>
  1c:	mov	x0, x19
  20:	mov	x1, #0x8                   	// #8
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZdlPvm>

LSUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>:
       0:	mov	x2, x0
       4:	ldr	x0, [x1, #8]
       8:	ldr	x1, [x0]
       c:	ldrb	w0, [x1, #324]
      10:	cbz	w0, 30 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x30>
      14:	ldr	w3, [x2, #8]
      18:	cbz	w3, 30 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x30>
      1c:	ldr	w4, [x2, #16]
      20:	mov	w0, #0x1                   	// #1
      24:	cmp	w4, w3
      28:	b.eq	54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>  // b.none
      2c:	nop
      30:	ldrb	w1, [x1, #325]
      34:	mov	w0, #0x0                   	// #0
      38:	cbz	w1, 54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>
      3c:	ldr	w0, [x2, #12]
      40:	cbz	w0, 54 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE+0x54>
      44:	ldr	w1, [x2, #20]
      48:	cmp	w0, w1
      4c:	cset	w0, eq  // eq = none
      50:	lsl	w0, w0, #1
      54:	ret

0000000000000058 <_ZN4llvm3mca10LSUnitBase10cycleEventEv>:
      58:	ldr	w2, [x0, #48]
      5c:	ldr	x1, [x0, #40]
      60:	ldr	w3, [x0, #56]
      64:	add	x3, x1, x3, lsl #4
      68:	cbnz	w2, cc <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x74>
      6c:	mov	x1, x3
      70:	cmp	x1, x3
      74:	b.eq	c8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x70>  // b.none
      78:	ldr	x0, [x1, #8]
      7c:	ldp	w4, w2, [x0]
      80:	ldr	w5, [x0, #8]
      84:	add	w2, w2, w5
      88:	cmp	w4, w2
      8c:	b.ls	a0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x48>  // b.plast
      90:	ldr	w2, [x0, #80]
      94:	cbz	w2, a0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x48>
      98:	sub	w2, w2, #0x1
      9c:	str	w2, [x0, #80]
      a0:	add	x1, x1, #0x10
      a4:	cmp	x1, x3
      a8:	b.hi	f4 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x9c>  // b.pmore
      ac:	b.eq	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.none
      b0:	ldr	w0, [x1]
      b4:	cmn	w0, #0x3
      b8:	b.ls	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.plast
      bc:	add	x1, x1, #0x10
      c0:	cmp	x1, x3
      c4:	b.ne	b0 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x58>  // b.any
      c8:	ret
      cc:	cmp	x1, x3
      d0:	b.hi	f4 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x9c>  // b.pmore
      d4:	b.eq	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.none
      d8:	ldr	w0, [x1]
      dc:	cmn	w0, #0x3
      e0:	b.ls	70 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x18>  // b.plast
      e4:	add	x1, x1, #0x10
      e8:	cmp	x1, x3
      ec:	b.ne	d8 <_ZN4llvm3mca10LSUnitBase10cycleEventEv+0x80>  // b.any
      f0:	ret
      f4:	stp	x29, x30, [sp, #-16]!
      f8:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
      fc:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     100:	mov	x29, sp
     104:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     108:	add	x3, x3, #0x0
     10c:	add	x1, x1, #0x0
     110:	add	x0, x0, #0x0
     114:	mov	w2, #0x4e0                 	// #1248
     118:	bl	0 <__assert_fail>
     11c:	nop

0000000000000120 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>:
     120:	stp	x29, x30, [sp, #-48]!
     124:	mov	x29, sp
     128:	ldr	w2, [x0, #56]
     12c:	stp	x19, x20, [sp, #16]
     130:	mov	x20, x0
     134:	ldr	x0, [x0, #40]
     138:	str	x21, [sp, #32]
     13c:	cbz	w2, 288 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x168>
     140:	ldr	x1, [x1, #8]
     144:	ldr	w4, [x1, #796]
     148:	cmn	w4, #0x3
     14c:	b.hi	310 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1f0>  // b.pmore
     150:	mov	w1, #0x25                  	// #37
     154:	sub	w5, w2, #0x1
     158:	mul	w1, w4, w1
     15c:	and	w3, w1, w5
     160:	and	w1, w1, w5
     164:	lsl	x3, x3, #4
     168:	add	x21, x0, x3
     16c:	ldr	w3, [x0, x3]
     170:	cmp	w4, w3
     174:	b.ne	27c <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x15c>  // b.any
     178:	ubfiz	x2, x2, #4, #32
     17c:	add	x2, x0, x2
     180:	cmp	x21, x2
     184:	b.eq	288 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x168>  // b.none
     188:	ldr	x19, [x21, #8]
     18c:	ldr	w1, [x19]
     190:	ldr	w0, [x19, #8]
     194:	cmp	w1, w0
     198:	b.ne	2f0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1d0>  // b.any
     19c:	ldr	w2, [x19, #12]
     1a0:	ldr	w1, [x19, #20]
     1a4:	cmp	w2, w1
     1a8:	b.eq	2f0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1d0>  // b.none
     1ac:	ldr	w0, [x19, #16]
     1b0:	add	w1, w1, #0x1
     1b4:	cmp	w2, w1
     1b8:	sub	w0, w0, #0x1
     1bc:	stp	w0, w1, [x19, #16]
     1c0:	b.ne	224 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x104>  // b.any
     1c4:	ldr	x0, [x19, #24]
     1c8:	ldr	w5, [x19, #32]
     1cc:	add	x5, x0, x5, lsl #3
     1d0:	cmp	x0, x5
     1d4:	b.eq	234 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x114>  // b.none
     1d8:	mov	x3, x0
     1dc:	nop
     1e0:	ldr	x1, [x3]
     1e4:	ldr	w4, [x1]
     1e8:	ldr	w2, [x1, #8]
     1ec:	cmp	w4, w2
     1f0:	b.eq	2d0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x1b0>  // b.none
     1f4:	ldr	w4, [x1, #4]
     1f8:	add	w2, w2, #0x1
     1fc:	str	w2, [x1, #8]
     200:	add	x3, x3, #0x8
     204:	sub	w2, w4, #0x1
     208:	str	w2, [x1, #4]
     20c:	cmp	x5, x3
     210:	b.ne	1e0 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0xc0>  // b.any
     214:	ldr	w2, [x19, #12]
     218:	ldr	w1, [x19, #20]
     21c:	cmp	w2, w1
     220:	b.eq	234 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x114>  // b.none
     224:	ldp	x19, x20, [sp, #16]
     228:	ldr	x21, [sp, #32]
     22c:	ldp	x29, x30, [sp], #48
     230:	ret
     234:	add	x1, x19, #0x28
     238:	cmp	x0, x1
     23c:	b.eq	244 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x124>  // b.none
     240:	bl	0 <free>
     244:	mov	x0, x19
     248:	mov	x1, #0x68                  	// #104
     24c:	bl	0 <_ZdlPvm>
     250:	mov	w0, #0xfffffffe            	// #-2
     254:	str	w0, [x21]
     258:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     25c:	ldr	d0, [x20, #48]
     260:	ldr	d1, [x0]
     264:	ldr	x21, [sp, #32]
     268:	add	v0.2s, v0.2s, v1.2s
     26c:	str	d0, [x20, #48]
     270:	ldp	x19, x20, [sp, #16]
     274:	ldp	x29, x30, [sp], #48
     278:	ret
     27c:	mov	w6, #0x1                   	// #1
     280:	cmn	w3, #0x1
     284:	b.ne	2a8 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x188>  // b.any
     288:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     28c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     290:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     294:	add	x3, x3, #0x0
     298:	add	x1, x1, #0x0
     29c:	add	x0, x0, #0x0
     2a0:	mov	w2, #0xa5                  	// #165
     2a4:	bl	0 <__assert_fail>
     2a8:	add	w1, w1, w6
     2ac:	add	w6, w6, #0x1
     2b0:	and	w3, w5, w1
     2b4:	and	w1, w5, w1
     2b8:	lsl	x3, x3, #4
     2bc:	add	x21, x0, x3
     2c0:	ldr	w3, [x0, x3]
     2c4:	cmp	w4, w3
     2c8:	b.eq	178 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x58>  // b.none
     2cc:	b	280 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE+0x160>
     2d0:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2d4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2d8:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2dc:	add	x3, x3, #0x0
     2e0:	add	x1, x1, #0x0
     2e4:	add	x0, x0, #0x0
     2e8:	mov	w2, #0x73                  	// #115
     2ec:	bl	0 <__assert_fail>
     2f0:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2f4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2f8:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     2fc:	add	x3, x3, #0x0
     300:	add	x1, x1, #0x0
     304:	add	x0, x0, #0x0
     308:	mov	w2, #0x8f                  	// #143
     30c:	bl	0 <__assert_fail>
     310:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     314:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     318:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     31c:	add	x3, x3, #0x0
     320:	add	x1, x1, #0x0
     324:	add	x0, x0, #0x0
     328:	mov	w2, #0x250                 	// #592
     32c:	bl	0 <__assert_fail>

0000000000000330 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE>:
     330:	stp	x29, x30, [sp, #-32]!
     334:	mov	x29, sp
     338:	stp	x19, x20, [sp, #16]
     33c:	mov	x19, x0
     340:	ldr	x20, [x1, #8]
     344:	ldr	x0, [x20]
     348:	ldrb	w2, [x0, #324]
     34c:	cbnz	w2, 358 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x28>
     350:	ldrb	w0, [x0, #325]
     354:	cbz	w0, 390 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x60>
     358:	mov	x0, x19
     35c:	bl	120 <_ZN4llvm3mca10LSUnitBase21onInstructionExecutedERKNS0_7InstRefE>
     360:	ldr	w0, [x20, #796]
     364:	cbnz	w0, 39c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x6c>
     368:	ldr	w1, [x19, #68]
     36c:	cmp	w1, w0
     370:	b.eq	3f4 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xc4>  // b.none
     374:	ldr	w1, [x19, #76]
     378:	cmp	w1, w0
     37c:	b.ne	384 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x54>  // b.any
     380:	str	wzr, [x19, #76]
     384:	ldr	w1, [x19, #72]
     388:	cmp	w1, w0
     38c:	b.eq	3fc <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xcc>  // b.none
     390:	ldp	x19, x20, [sp, #16]
     394:	ldp	x29, x30, [sp], #32
     398:	ret
     39c:	ldr	w1, [x19, #56]
     3a0:	ldr	x2, [x19, #40]
     3a4:	cbz	w1, 368 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x38>
     3a8:	cmn	w0, #0x3
     3ac:	b.hi	444 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x114>  // b.pmore
     3b0:	mov	w3, #0x25                  	// #37
     3b4:	sub	w5, w1, #0x1
     3b8:	mul	w3, w0, w3
     3bc:	and	w4, w3, w5
     3c0:	and	w3, w3, w5
     3c4:	lsl	x4, x4, #4
     3c8:	add	x6, x2, x4
     3cc:	ldr	w4, [x2, x4]
     3d0:	cmp	w0, w4
     3d4:	b.ne	40c <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xdc>  // b.any
     3d8:	ubfiz	x1, x1, #4, #32
     3dc:	add	x1, x2, x1
     3e0:	cmp	x6, x1
     3e4:	b.eq	368 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x38>  // b.none
     3e8:	ldp	x19, x20, [sp, #16]
     3ec:	ldp	x29, x30, [sp], #32
     3f0:	ret
     3f4:	str	wzr, [x19, #68]
     3f8:	b	374 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x44>
     3fc:	str	wzr, [x19, #72]
     400:	ldp	x19, x20, [sp, #16]
     404:	ldp	x29, x30, [sp], #32
     408:	ret
     40c:	mov	w6, #0x1                   	// #1
     410:	cmn	w4, #0x1
     414:	b.eq	368 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0x38>  // b.none
     418:	add	w3, w6, w3
     41c:	add	w7, w6, #0x1
     420:	and	w4, w5, w3
     424:	and	w3, w5, w3
     428:	lsl	x4, x4, #4
     42c:	add	x6, x2, x4
     430:	ldr	w4, [x2, x4]
     434:	cmp	w0, w4
     438:	b.eq	3d8 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xa8>  // b.none
     43c:	mov	w6, w7
     440:	b	410 <_ZN4llvm3mca6LSUnit21onInstructionExecutedERKNS0_7InstRefE+0xe0>
     444:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     448:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     44c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     450:	add	x3, x3, #0x0
     454:	add	x1, x1, #0x0
     458:	add	x0, x0, #0x0
     45c:	mov	w2, #0x250                 	// #592
     460:	bl	0 <__assert_fail>
     464:	nop

0000000000000468 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE>:
     468:	stp	x29, x30, [sp, #-48]!
     46c:	mov	x29, sp
     470:	stp	x19, x20, [sp, #16]
     474:	mov	x19, x0
     478:	ldr	x0, [x1, #8]
     47c:	stp	x21, x22, [sp, #32]
     480:	ldr	x0, [x0]
     484:	ldrb	w2, [x0, #324]
     488:	ldrb	w20, [x0, #325]
     48c:	cmp	w2, #0x0
     490:	ccmp	w20, #0x0, #0x0, eq  // eq = none
     494:	b.eq	6a4 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x23c>  // b.none
     498:	adrp	x21, 0 <_ZN4llvm9DebugFlagE>
     49c:	mov	x22, x1
     4a0:	ldr	x0, [x21]
     4a4:	ldrb	w0, [x0]
     4a8:	cbnz	w2, 4cc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x64>
     4ac:	ldr	w1, [x19, #20]
     4b0:	sub	w1, w1, #0x1
     4b4:	str	w1, [x19, #20]
     4b8:	cbnz	w0, 598 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x130>
     4bc:	ldp	x19, x20, [sp, #16]
     4c0:	ldp	x21, x22, [sp, #32]
     4c4:	ldp	x29, x30, [sp], #48
     4c8:	ret
     4cc:	ldr	w1, [x19, #16]
     4d0:	sub	w1, w1, #0x1
     4d4:	str	w1, [x19, #16]
     4d8:	cbnz	w0, 4ec <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x84>
     4dc:	cbz	w20, 4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     4e0:	ldr	x21, [x21]
     4e4:	ldrb	w0, [x21]
     4e8:	b	4ac <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x44>
     4ec:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     4f0:	add	x0, x0, #0x0
     4f4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     4f8:	tst	w0, #0xff
     4fc:	b.eq	4dc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x74>  // b.none
     500:	bl	0 <_ZN4llvm4dbgsEv>
     504:	mov	x2, x0
     508:	ldp	x1, x3, [x0, #16]
     50c:	sub	x1, x1, x3
     510:	cmp	x1, #0x19
     514:	b.ls	658 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1f0>  // b.plast
     518:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     51c:	add	x4, x4, #0x0
     520:	ldp	x0, x1, [x4]
     524:	stp	x0, x1, [x3]
     528:	ldrh	w0, [x4, #24]
     52c:	ldr	x1, [x4, #16]
     530:	str	x1, [x3, #16]
     534:	strh	w0, [x3, #24]
     538:	ldr	x0, [x2, #24]
     53c:	add	x0, x0, #0x1a
     540:	str	x0, [x2, #24]
     544:	ldr	w1, [x22]
     548:	mov	x0, x2
     54c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     550:	mov	x1, x0
     554:	ldp	x2, x3, [x0, #16]
     558:	sub	x2, x2, x3
     55c:	cmp	x2, #0x26
     560:	b.ls	670 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x208>  // b.plast
     564:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     568:	add	x0, x0, #0x0
     56c:	ldp	x4, x5, [x0, #16]
     570:	stp	x4, x5, [x3, #16]
     574:	ldp	x4, x5, [x0]
     578:	stp	x4, x5, [x3]
     57c:	ldur	x0, [x0, #31]
     580:	stur	x0, [x3, #31]
     584:	ldr	x0, [x1, #24]
     588:	add	x0, x0, #0x27
     58c:	str	x0, [x1, #24]
     590:	cbz	w20, 4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     594:	b	4e0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x78>
     598:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     59c:	add	x0, x0, #0x0
     5a0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     5a4:	tst	w0, #0xff
     5a8:	b.eq	4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>  // b.none
     5ac:	bl	0 <_ZN4llvm4dbgsEv>
     5b0:	mov	x2, x0
     5b4:	ldp	x1, x3, [x0, #16]
     5b8:	sub	x1, x1, x3
     5bc:	cmp	x1, #0x19
     5c0:	b.ls	640 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x1d8>  // b.plast
     5c4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     5c8:	add	x0, x0, #0x0
     5cc:	ldrh	w1, [x0, #24]
     5d0:	ldp	x4, x5, [x0]
     5d4:	stp	x4, x5, [x3]
     5d8:	ldr	x0, [x0, #16]
     5dc:	str	x0, [x3, #16]
     5e0:	strh	w1, [x3, #24]
     5e4:	ldr	x0, [x2, #24]
     5e8:	add	x0, x0, #0x1a
     5ec:	str	x0, [x2, #24]
     5f0:	ldr	w1, [x22]
     5f4:	mov	x0, x2
     5f8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5fc:	mov	x1, x0
     600:	ldp	x2, x3, [x0, #16]
     604:	sub	x2, x2, x3
     608:	cmp	x2, #0x27
     60c:	b.ls	688 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x220>  // b.plast
     610:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     614:	add	x0, x0, #0x0
     618:	ldp	x4, x5, [x0]
     61c:	stp	x4, x5, [x3]
     620:	ldp	x4, x5, [x0, #16]
     624:	stp	x4, x5, [x3, #16]
     628:	ldr	x0, [x0, #32]
     62c:	str	x0, [x3, #32]
     630:	ldr	x0, [x1, #24]
     634:	add	x0, x0, #0x28
     638:	str	x0, [x1, #24]
     63c:	b	4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     640:	mov	x2, #0x1a                  	// #26
     644:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     648:	add	x1, x1, #0x0
     64c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     650:	mov	x2, x0
     654:	b	5f0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x188>
     658:	mov	x2, #0x1a                  	// #26
     65c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     660:	add	x1, x1, #0x0
     664:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     668:	mov	x2, x0
     66c:	b	544 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0xdc>
     670:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     674:	mov	x2, #0x27                  	// #39
     678:	add	x1, x1, #0x0
     67c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     680:	cbz	w20, 4bc <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x54>
     684:	b	4e0 <_ZN4llvm3mca10LSUnitBase20onInstructionRetiredERKNS0_7InstRefE+0x78>
     688:	ldp	x19, x20, [sp, #16]
     68c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     690:	ldp	x21, x22, [sp, #32]
     694:	add	x1, x1, #0x0
     698:	ldp	x29, x30, [sp], #48
     69c:	mov	x2, #0x28                  	// #40
     6a0:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6a4:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     6a8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     6ac:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     6b0:	add	x3, x3, #0x0
     6b4:	add	x1, x1, #0x0
     6b8:	add	x0, x0, #0x0
     6bc:	mov	w2, #0xaf                  	// #175
     6c0:	bl	0 <__assert_fail>
     6c4:	nop

00000000000006c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE>:
     6c8:	stp	x29, x30, [sp, #-112]!
     6cc:	mov	x29, sp
     6d0:	stp	x19, x20, [sp, #16]
     6d4:	mov	x19, x0
     6d8:	ldr	x0, [x1, #8]
     6dc:	stp	x21, x22, [sp, #32]
     6e0:	stp	x23, x24, [sp, #48]
     6e4:	ldr	x22, [x0]
     6e8:	stp	x25, x26, [sp, #64]
     6ec:	ldrb	w0, [x22, #324]
     6f0:	ldrb	w21, [x22, #326]
     6f4:	ldrb	w1, [x22, #325]
     6f8:	cbnz	w0, 874 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1ac>
     6fc:	cbz	w1, e28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x760>
     700:	ldr	w1, [x19, #20]
     704:	mov	x0, #0x68                  	// #104
     708:	add	w1, w1, #0x1
     70c:	str	w1, [x19, #20]
     710:	bl	0 <_Znwm>
     714:	mov	x20, x0
     718:	ldr	w25, [x19, #56]
     71c:	add	x1, x0, #0x28
     720:	mov	x0, #0x400000000           	// #17179869184
     724:	ldr	w23, [x19, #64]
     728:	stp	xzr, xzr, [x20]
     72c:	stp	xzr, x1, [x20, #16]
     730:	str	x0, [x20, #32]
     734:	str	wzr, [x20, #72]
     738:	strh	wzr, [x20, #76]
     73c:	str	wzr, [x20, #80]
     740:	str	wzr, [x20, #88]
     744:	str	xzr, [x20, #96]
     748:	ldr	x24, [x19, #40]
     74c:	cbz	w25, 18dc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1214>
     750:	stp	x27, x28, [sp, #80]
     754:	cmn	w23, #0x3
     758:	b.hi	e50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x788>  // b.pmore
     75c:	mov	w2, #0x25                  	// #37
     760:	sub	w1, w25, #0x1
     764:	mov	x4, #0x0                   	// #0
     768:	mul	w26, w23, w2
     76c:	and	w0, w26, w1
     770:	and	w3, w26, w1
     774:	lsl	x0, x0, #4
     778:	add	x2, x24, x0
     77c:	ldr	w27, [x24, x0]
     780:	mov	w0, #0x1                   	// #1
     784:	cmp	w23, w27
     788:	b.ne	cc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5f8>  // b.any
     78c:	mov	x0, x20
     790:	mov	x1, #0x68                  	// #104
     794:	bl	0 <_ZdlPvm>
     798:	ldp	x27, x28, [sp, #80]
     79c:	ldr	w20, [x19, #64]
     7a0:	add	w0, w20, #0x1
     7a4:	str	w0, [x19, #64]
     7a8:	cbz	w20, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     7ac:	ldr	w0, [x19, #56]
     7b0:	ldr	x2, [x19, #40]
     7b4:	cbz	w0, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     7b8:	cmn	w20, #0x3
     7bc:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     7c0:	mov	w1, #0x25                  	// #37
     7c4:	sub	w3, w0, #0x1
     7c8:	mul	w1, w20, w1
     7cc:	and	w4, w1, w3
     7d0:	and	w1, w1, w3
     7d4:	lsl	x4, x4, #4
     7d8:	add	x5, x2, x4
     7dc:	ldr	w4, [x2, x4]
     7e0:	cmp	w20, w4
     7e4:	b.ne	1c58 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1590>  // b.any
     7e8:	ubfiz	x0, x0, #4, #32
     7ec:	add	x4, x2, x0
     7f0:	cmp	x5, x4
     7f4:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     7f8:	mov	w0, #0x25                  	// #37
     7fc:	mul	w0, w20, w0
     800:	and	w1, w0, w3
     804:	and	w0, w0, w3
     808:	lsl	x1, x1, #4
     80c:	add	x5, x2, x1
     810:	ldr	w1, [x2, x1]
     814:	cmp	w20, w1
     818:	b.ne	1820 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1158>  // b.any
     81c:	ldr	x24, [x5, #8]
     820:	ldr	w0, [x24, #32]
     824:	cbnz	w0, 1fac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18e4>
     828:	ldr	w0, [x24, #12]
     82c:	add	w0, w0, #0x1
     830:	str	w0, [x24, #12]
     834:	ldp	w1, w0, [x19, #68]
     838:	cmp	w1, w0
     83c:	csel	w23, w1, w0, cs  // cs = hs, nlast
     840:	cbnz	w23, f3c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x874>
     844:	ldr	w1, [x19, #76]
     848:	cbnz	w1, fc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8f8>
     84c:	ldrb	w0, [x22, #324]
     850:	str	w20, [x19, #76]
     854:	cbnz	w0, a08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
     858:	mov	w0, w20
     85c:	ldp	x19, x20, [sp, #16]
     860:	ldp	x21, x22, [sp, #32]
     864:	ldp	x23, x24, [sp, #48]
     868:	ldp	x25, x26, [sp, #64]
     86c:	ldp	x29, x30, [sp], #112
     870:	ret
     874:	ldr	w0, [x19, #16]
     878:	add	w0, w0, #0x1
     87c:	str	w0, [x19, #16]
     880:	cbnz	w1, 700 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x38>
     884:	ldr	w0, [x19, #68]
     888:	cmp	w0, #0x0
     88c:	ccmp	w21, #0x0, #0x0, ne  // ne = any
     890:	b.ne	8ac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>  // b.any
     894:	ldr	w1, [x19, #76]
     898:	cmp	w0, w1
     89c:	b.ls	8ac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1e4>  // b.plast
     8a0:	ldr	w1, [x19, #72]
     8a4:	cmp	w0, w1
     8a8:	b.hi	b38 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x470>  // b.pmore
     8ac:	mov	x0, #0x68                  	// #104
     8b0:	bl	0 <_Znwm>
     8b4:	mov	x20, x0
     8b8:	ldr	w25, [x19, #56]
     8bc:	add	x1, x20, #0x28
     8c0:	mov	x0, #0x400000000           	// #17179869184
     8c4:	ldr	w22, [x19, #64]
     8c8:	stp	xzr, xzr, [x20]
     8cc:	stp	xzr, x1, [x20, #16]
     8d0:	str	x0, [x20, #32]
     8d4:	str	wzr, [x20, #72]
     8d8:	strh	wzr, [x20, #76]
     8dc:	str	wzr, [x20, #80]
     8e0:	str	wzr, [x20, #88]
     8e4:	str	xzr, [x20, #96]
     8e8:	ldr	x24, [x19, #40]
     8ec:	cbz	w25, 1240 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xb78>
     8f0:	cmn	w22, #0x3
     8f4:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     8f8:	mov	w2, #0x25                  	// #37
     8fc:	sub	w1, w25, #0x1
     900:	mov	x4, #0x0                   	// #0
     904:	mul	w26, w22, w2
     908:	and	w0, w26, w1
     90c:	and	w3, w26, w1
     910:	lsl	x0, x0, #4
     914:	add	x2, x24, x0
     918:	ldr	w23, [x24, x0]
     91c:	mov	w0, #0x1                   	// #1
     920:	cmp	w23, w22
     924:	b.ne	c18 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x550>  // b.any
     928:	mov	x0, x20
     92c:	mov	x1, #0x68                  	// #104
     930:	bl	0 <_ZdlPvm>
     934:	ldr	w20, [x19, #64]
     938:	add	w0, w20, #0x1
     93c:	str	w0, [x19, #64]
     940:	cbnz	w20, 968 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2a0>
     944:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     948:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     94c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     950:	add	x3, x3, #0x0
     954:	add	x1, x1, #0x0
     958:	add	x0, x0, #0x0
     95c:	mov	w2, #0x11c                 	// #284
     960:	stp	x27, x28, [sp, #80]
     964:	bl	0 <__assert_fail>
     968:	ldr	w0, [x19, #56]
     96c:	ldr	x5, [x19, #40]
     970:	cbz	w0, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     974:	cmn	w20, #0x3
     978:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     97c:	mov	w1, #0x25                  	// #37
     980:	sub	w2, w0, #0x1
     984:	mul	w1, w20, w1
     988:	and	w3, w1, w2
     98c:	and	w1, w1, w2
     990:	lsl	x3, x3, #4
     994:	add	x4, x5, x3
     998:	ldr	w3, [x5, x3]
     99c:	cmp	w20, w3
     9a0:	b.ne	17d4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x110c>  // b.any
     9a4:	ubfiz	x0, x0, #4, #32
     9a8:	add	x3, x5, x0
     9ac:	cmp	x4, x3
     9b0:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     9b4:	mov	w0, #0x25                  	// #37
     9b8:	mul	w0, w20, w0
     9bc:	and	w1, w0, w2
     9c0:	and	w0, w0, w2
     9c4:	lsl	x1, x1, #4
     9c8:	add	x4, x5, x1
     9cc:	ldr	w1, [x5, x1]
     9d0:	cmp	w20, w1
     9d4:	b.ne	1040 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x978>  // b.any
     9d8:	ldr	x23, [x4, #8]
     9dc:	ldr	w0, [x23, #32]
     9e0:	cbnz	w0, 1fac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18e4>
     9e4:	ldr	w0, [x23, #12]
     9e8:	ldrb	w1, [x19, #24]
     9ec:	add	w0, w0, #0x1
     9f0:	str	w0, [x23, #12]
     9f4:	cbnz	w1, a00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x338>
     9f8:	ldr	w0, [x19, #76]
     9fc:	cbnz	w0, 1090 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x9c8>
     a00:	ldr	w0, [x19, #72]
     a04:	cbnz	w0, a30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x368>
     a08:	str	w20, [x19, #68]
     a0c:	cbz	w21, a14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x34c>
     a10:	str	w20, [x19, #72]
     a14:	mov	w0, w20
     a18:	ldp	x19, x20, [sp, #16]
     a1c:	ldp	x21, x22, [sp, #32]
     a20:	ldp	x23, x24, [sp, #48]
     a24:	ldp	x25, x26, [sp, #64]
     a28:	ldp	x29, x30, [sp], #112
     a2c:	ret
     a30:	ldr	w1, [x19, #56]
     a34:	ldr	x5, [x19, #40]
     a38:	cbz	w1, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     a3c:	cmn	w0, #0x3
     a40:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     a44:	mov	w2, #0x25                  	// #37
     a48:	sub	w6, w1, #0x1
     a4c:	mul	w2, w0, w2
     a50:	and	w3, w2, w6
     a54:	and	w2, w2, w6
     a58:	lsl	x3, x3, #4
     a5c:	add	x4, x5, x3
     a60:	ldr	w3, [x5, x3]
     a64:	cmp	w0, w3
     a68:	b.ne	1bf4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x152c>  // b.any
     a6c:	ubfiz	x1, x1, #4, #32
     a70:	add	x3, x5, x1
     a74:	cmp	x4, x3
     a78:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     a7c:	mov	w1, #0x25                  	// #37
     a80:	mul	w1, w0, w1
     a84:	and	w2, w1, w6
     a88:	and	w1, w1, w6
     a8c:	lsl	x2, x2, #4
     a90:	add	x4, x5, x2
     a94:	ldr	w2, [x5, x2]
     a98:	cmp	w0, w2
     a9c:	b.ne	180c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1144>  // b.any
     aa0:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     aa4:	ldr	x22, [x4, #8]
     aa8:	ldr	x0, [x0]
     aac:	ldrb	w0, [x0]
     ab0:	cbnz	w0, e70 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x7a8>
     ab4:	ldr	w0, [x23]
     ab8:	add	w0, w0, #0x1
     abc:	str	w0, [x23]
     ac0:	ldr	w1, [x22, #12]
     ac4:	ldr	w3, [x22, #20]
     ac8:	cmp	w1, w3
     acc:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
     ad0:	ldr	w2, [x22, #16]
     ad4:	cbz	w2, ae4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x41c>
     ad8:	sub	w1, w1, w3
     adc:	cmp	w2, w1
     ae0:	b.eq	1054 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x98c>  // b.none
     ae4:	ldp	w0, w1, [x22, #32]
     ae8:	cmp	w0, w1
     aec:	b.cs	177c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x10b4>  // b.hs, b.nlast
     af0:	ldr	x3, [x22, #24]
     af4:	mov	w2, w0
     af8:	add	x4, x2, #0x1
     afc:	cmp	x4, w1, uxtw
     b00:	str	x23, [x3, x2, lsl #3]
     b04:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
     b08:	add	w0, w0, #0x1
     b0c:	str	w0, [x22, #32]
     b10:	cbnz	w0, a08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x340>
     b14:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     b18:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     b1c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     b20:	add	x3, x3, #0x0
     b24:	add	x1, x1, #0x0
     b28:	add	x0, x0, #0x0
     b2c:	mov	w2, #0xa7                  	// #167
     b30:	stp	x27, x28, [sp, #80]
     b34:	bl	0 <__assert_fail>
     b38:	ldr	w1, [x19, #56]
     b3c:	ldr	x3, [x19, #40]
     b40:	cbz	w1, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
     b44:	cmn	w0, #0x3
     b48:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
     b4c:	mov	w2, #0x25                  	// #37
     b50:	sub	w4, w1, #0x1
     b54:	mul	w2, w0, w2
     b58:	and	w5, w2, w4
     b5c:	and	w2, w2, w4
     b60:	lsl	x5, x5, #4
     b64:	add	x7, x3, x5
     b68:	ldr	w5, [x3, x5]
     b6c:	cmp	w0, w5
     b70:	b.ne	1cd4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x160c>  // b.any
     b74:	ubfiz	x1, x1, #4, #32
     b78:	add	x6, x3, x1
     b7c:	cmp	x6, x7
     b80:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
     b84:	mov	w1, #0x25                  	// #37
     b88:	mul	w1, w0, w1
     b8c:	and	w2, w1, w4
     b90:	and	w1, w1, w4
     b94:	lsl	x2, x2, #4
     b98:	add	x5, x3, x2
     b9c:	ldr	w2, [x3, x2]
     ba0:	cmp	w0, w2
     ba4:	b.ne	1834 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x116c>  // b.any
     ba8:	ldr	x0, [x5, #8]
     bac:	ldr	w1, [x0, #32]
     bb0:	cbnz	w1, 1fac <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18e4>
     bb4:	ldr	w1, [x0, #12]
     bb8:	ldp	x21, x22, [sp, #32]
     bbc:	add	w1, w1, #0x1
     bc0:	str	w1, [x0, #12]
     bc4:	ldp	x23, x24, [sp, #48]
     bc8:	ldr	w20, [x19, #68]
     bcc:	ldp	x25, x26, [sp, #64]
     bd0:	mov	w0, w20
     bd4:	ldp	x19, x20, [sp, #16]
     bd8:	ldp	x29, x30, [sp], #112
     bdc:	ret
     be0:	add	w3, w0, w3
     be4:	cmp	x4, #0x0
     be8:	and	w5, w1, w3
     bec:	ccmn	w23, #0x2, #0x0, eq  // eq = none
     bf0:	csel	x2, x2, x4, eq  // eq = none
     bf4:	add	w0, w0, #0x1
     bf8:	lsl	x4, x5, #4
     bfc:	and	w3, w1, w3
     c00:	add	x5, x24, x4
     c04:	ldr	w23, [x24, x4]
     c08:	cmp	w22, w23
     c0c:	b.eq	928 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x260>  // b.none
     c10:	mov	x4, x2
     c14:	mov	x2, x5
     c18:	cmn	w23, #0x1
     c1c:	b.ne	be0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x518>  // b.any
     c20:	ldr	x3, [x19, #32]
     c24:	lsl	w0, w25, #1
     c28:	ldr	w5, [x19, #48]
     c2c:	cmp	x4, #0x0
     c30:	add	x3, x3, #0x1
     c34:	str	x3, [x19, #32]
     c38:	add	w5, w5, #0x1
     c3c:	add	w3, w0, w25
     c40:	csel	x4, x4, x2, ne  // ne = any
     c44:	cmp	w3, w5, lsl #2
     c48:	b.ls	1250 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xb88>  // b.plast
     c4c:	ldr	w0, [x19, #52]
     c50:	sub	w0, w25, w0
     c54:	sub	w0, w0, w5
     c58:	cmp	w0, w25, lsr #3
     c5c:	b.ls	1388 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xcc0>  // b.plast
     c60:	str	w5, [x19, #48]
     c64:	ldr	w0, [x4]
     c68:	cmn	w0, #0x1
     c6c:	b.eq	c7c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5b4>  // b.none
     c70:	ldr	w0, [x19, #52]
     c74:	sub	w0, w0, #0x1
     c78:	str	w0, [x19, #52]
     c7c:	str	w22, [x4]
     c80:	str	x20, [x4, #8]
     c84:	b	934 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x26c>
     c88:	add	w3, w3, w0
     c8c:	cmp	x4, #0x0
     c90:	and	w5, w1, w3
     c94:	ccmn	w27, #0x2, #0x0, eq  // eq = none
     c98:	csel	x2, x2, x4, eq  // eq = none
     c9c:	add	w0, w0, #0x1
     ca0:	lsl	x4, x5, #4
     ca4:	and	w3, w1, w3
     ca8:	add	x5, x24, x4
     cac:	ldr	w27, [x24, x4]
     cb0:	cmp	w23, w27
     cb4:	b.eq	78c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc4>  // b.none
     cb8:	mov	x4, x2
     cbc:	mov	x2, x5
     cc0:	cmn	w27, #0x1
     cc4:	b.ne	c88 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x5c0>  // b.any
     cc8:	ldr	x3, [x19, #32]
     ccc:	lsl	w0, w25, #1
     cd0:	ldr	w5, [x19, #48]
     cd4:	cmp	x4, #0x0
     cd8:	add	x3, x3, #0x1
     cdc:	str	x3, [x19, #32]
     ce0:	add	w5, w5, #0x1
     ce4:	add	w3, w0, w25
     ce8:	csel	x4, x4, x2, ne  // ne = any
     cec:	cmp	w3, w5, lsl #2
     cf0:	b.ls	2140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a78>  // b.plast
     cf4:	ldr	w0, [x19, #52]
     cf8:	sub	w0, w25, w0
     cfc:	sub	w0, w0, w5
     d00:	cmp	w0, w25, lsr #3
     d04:	b.ls	d34 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x66c>  // b.plast
     d08:	ldp	x27, x28, [sp, #80]
     d0c:	str	w5, [x19, #48]
     d10:	ldr	w0, [x4]
     d14:	cmn	w0, #0x1
     d18:	b.eq	d28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x660>  // b.none
     d1c:	ldr	w0, [x19, #52]
     d20:	sub	w0, w0, #0x1
     d24:	str	w0, [x19, #52]
     d28:	str	w23, [x4]
     d2c:	str	x20, [x4, #8]
     d30:	b	79c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd4>
     d34:	mov	w2, w1
     d38:	lsr	w0, w1, #1
     d3c:	orr	x0, x0, x2
     d40:	mov	w1, #0x40                  	// #64
     d44:	orr	x0, x0, x0, lsr #2
     d48:	orr	x0, x0, x0, lsr #4
     d4c:	orr	x0, x0, x0, lsr #8
     d50:	orr	x0, x0, x0, lsr #16
     d54:	add	x0, x0, #0x1
     d58:	cmp	w0, w1
     d5c:	csel	w0, w0, w1, cs  // cs = hs, nlast
     d60:	str	w0, [x19, #56]
     d64:	ubfiz	x0, x0, #4, #32
     d68:	bl	0 <_Znwm>
     d6c:	ldr	w1, [x19, #56]
     d70:	str	x0, [x19, #40]
     d74:	str	xzr, [x19, #48]
     d78:	sub	w2, w1, #0x1
     d7c:	and	w2, w2, w1
     d80:	cbz	x24, 1e64 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x179c>
     d84:	ubfiz	x3, x25, #4, #32
     d88:	str	x3, [sp, #104]
     d8c:	add	x28, x24, x3
     d90:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
     d94:	ubfiz	x1, x1, #4, #32
     d98:	mov	w3, w27
     d9c:	add	x1, x0, x1
     da0:	cmp	x0, x1
     da4:	b.eq	db4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6ec>  // b.none
     da8:	str	w3, [x0], #16
     dac:	cmp	x1, x0
     db0:	b.ne	da8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6e0>  // b.any
     db4:	mov	x25, x24
     db8:	mov	w27, #0x25                  	// #37
     dbc:	b	dcc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x704>
     dc0:	add	x25, x25, #0x10
     dc4:	cmp	x28, x25
     dc8:	b.eq	1adc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1414>  // b.none
     dcc:	ldr	w0, [x25]
     dd0:	cmn	w0, #0x3
     dd4:	b.hi	dc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6f8>  // b.pmore
     dd8:	ldr	w1, [x19, #56]
     ddc:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
     de0:	mul	w2, w0, w27
     de4:	sub	w1, w1, #0x1
     de8:	ldr	x4, [x19, #40]
     dec:	and	w3, w2, w1
     df0:	and	w2, w2, w1
     df4:	lsl	x3, x3, #4
     df8:	add	x6, x4, x3
     dfc:	ldr	w3, [x4, x3]
     e00:	cmp	w0, w3
     e04:	b.ne	1d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1640>  // b.any
     e08:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e0c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e10:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e14:	add	x3, x3, #0x0
     e18:	add	x1, x1, #0x0
     e1c:	add	x0, x0, #0x0
     e20:	mov	w2, #0x17a                 	// #378
     e24:	bl	0 <__assert_fail>
     e28:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e2c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e30:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e34:	add	x3, x3, #0x0
     e38:	add	x1, x1, #0x0
     e3c:	add	x0, x0, #0x0
     e40:	mov	w2, #0x48                  	// #72
     e44:	stp	x27, x28, [sp, #80]
     e48:	bl	0 <__assert_fail>
     e4c:	stp	x27, x28, [sp, #80]
     e50:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e54:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e58:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e5c:	add	x3, x3, #0x0
     e60:	add	x1, x1, #0x0
     e64:	add	x0, x0, #0x0
     e68:	mov	w2, #0x250                 	// #592
     e6c:	bl	0 <__assert_fail>
     e70:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     e74:	add	x0, x0, #0x0
     e78:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     e7c:	tst	w0, #0xff
     e80:	b.eq	ab4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3ec>  // b.none
     e84:	bl	0 <_ZN4llvm4dbgsEv>
     e88:	mov	x2, x0
     e8c:	ldp	x1, x3, [x0, #16]
     e90:	sub	x1, x1, x3
     e94:	cmp	x1, #0x15
     e98:	b.ls	1ac4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13fc>  // b.plast
     e9c:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     ea0:	add	x4, x4, #0x0
     ea4:	ldp	x0, x1, [x4]
     ea8:	stp	x0, x1, [x3]
     eac:	ldur	x0, [x4, #14]
     eb0:	stur	x0, [x3, #14]
     eb4:	ldr	x0, [x2, #24]
     eb8:	add	x0, x0, #0x16
     ebc:	str	x0, [x2, #24]
     ec0:	ldr	w1, [x19, #72]
     ec4:	mov	x0, x2
     ec8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ecc:	mov	x1, x0
     ed0:	ldp	x2, x3, [x0, #16]
     ed4:	sub	x2, x2, x3
     ed8:	cmp	x2, #0x6
     edc:	b.ls	1a98 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13d0>  // b.plast
     ee0:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     ee4:	add	x0, x0, #0x0
     ee8:	ldr	w2, [x0]
     eec:	ldur	w0, [x0, #3]
     ef0:	str	w2, [x3]
     ef4:	stur	w0, [x3, #3]
     ef8:	ldr	x0, [x1, #24]
     efc:	add	x0, x0, #0x7
     f00:	str	x0, [x1, #24]
     f04:	mov	x0, x1
     f08:	mov	w1, w20
     f0c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f10:	mov	x1, x0
     f14:	ldp	x2, x3, [x0, #16]
     f18:	sub	x2, x2, x3
     f1c:	cmp	x2, #0x1
     f20:	b.ls	1ab0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13e8>  // b.plast
     f24:	mov	w0, #0xa29                 	// #2601
     f28:	strh	w0, [x3]
     f2c:	ldr	x0, [x1, #24]
     f30:	add	x0, x0, #0x2
     f34:	str	x0, [x1, #24]
     f38:	b	ab4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3ec>
     f3c:	mov	w1, w23
     f40:	mov	x0, x19
     f44:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     f48:	mov	x25, x0
     f4c:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
     f50:	ldr	x1, [x1]
     f54:	ldrb	w1, [x1]
     f58:	cbnz	w1, 15e4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xf1c>
     f5c:	ldr	w1, [x24]
     f60:	add	w1, w1, #0x1
     f64:	str	w1, [x24]
     f68:	ldr	w2, [x25, #12]
     f6c:	ldr	w4, [x25, #20]
     f70:	cmp	w2, w4
     f74:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
     f78:	ldr	w3, [x25, #16]
     f7c:	cbz	w3, f8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c4>
     f80:	sub	w2, w2, w4
     f84:	cmp	w3, w2
     f88:	b.eq	1884 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x11bc>  // b.none
     f8c:	ldp	w1, w2, [x25, #32]
     f90:	cmp	w1, w2
     f94:	b.cs	1b50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1488>  // b.hs, b.nlast
     f98:	ldr	x4, [x25, #24]
     f9c:	mov	w3, w1
     fa0:	add	x5, x3, #0x1
     fa4:	cmp	x5, w2, uxtw
     fa8:	str	x24, [x4, x3, lsl #3]
     fac:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
     fb0:	add	w1, w1, #0x1
     fb4:	str	w1, [x25, #32]
     fb8:	cbnz	w1, 844 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17c>
     fbc:	b	b14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x44c>
     fc0:	mov	x0, x19
     fc4:	bl	0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
     fc8:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
     fcc:	mov	x23, x0
     fd0:	ldr	x1, [x1]
     fd4:	ldrb	w1, [x1]
     fd8:	cbnz	w1, 16b0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xfe8>
     fdc:	ldr	w1, [x24]
     fe0:	add	w1, w1, #0x1
     fe4:	str	w1, [x24]
     fe8:	ldr	w2, [x23, #12]
     fec:	ldr	w4, [x23, #20]
     ff0:	cmp	w2, w4
     ff4:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
     ff8:	ldr	w3, [x23, #16]
     ffc:	cbz	w3, 100c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x944>
    1000:	sub	w2, w2, w4
    1004:	cmp	w3, w2
    1008:	b.eq	1848 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1180>  // b.none
    100c:	ldp	w1, w2, [x23, #32]
    1010:	cmp	w1, w2
    1014:	b.cs	1b6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14a4>  // b.hs, b.nlast
    1018:	ldr	x4, [x23, #24]
    101c:	mov	w3, w1
    1020:	add	x5, x3, #0x1
    1024:	cmp	x5, w2, uxtw
    1028:	str	x24, [x4, x3, lsl #3]
    102c:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
    1030:	add	w1, w1, #0x1
    1034:	str	w1, [x23, #32]
    1038:	cbnz	w1, 84c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x184>
    103c:	b	b14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x44c>
    1040:	mov	w4, #0x1                   	// #1
    1044:	cmn	w1, #0x1
    1048:	b.ne	1c2c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1564>  // b.any
    104c:	mov	x4, x3
    1050:	b	9d8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x310>
    1054:	ldr	w1, [x23, #8]
    1058:	cmp	w0, w1
    105c:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    1060:	ldr	w0, [x23, #4]
    1064:	ldr	x2, [x22, #96]
    1068:	add	w0, w0, #0x1
    106c:	str	w0, [x23, #4]
    1070:	ldr	w1, [x23, #80]
    1074:	ldr	w0, [x2, #788]
    1078:	cmp	w0, w1
    107c:	b.ls	ae4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x41c>  // b.plast
    1080:	ldr	w1, [x22, #88]
    1084:	str	w1, [x23, #72]
    1088:	str	w0, [x23, #80]
    108c:	b	ae4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x41c>
    1090:	ldr	w1, [x19, #56]
    1094:	cbz	w1, 944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>
    1098:	cmn	w0, #0x3
    109c:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
    10a0:	mov	w2, #0x25                  	// #37
    10a4:	sub	w6, w1, #0x1
    10a8:	mul	w2, w0, w2
    10ac:	and	w3, w2, w6
    10b0:	and	w2, w2, w6
    10b4:	lsl	x3, x3, #4
    10b8:	add	x4, x5, x3
    10bc:	ldr	w3, [x5, x3]
    10c0:	cmp	w0, w3
    10c4:	b.ne	1df8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1730>  // b.any
    10c8:	ubfiz	x1, x1, #4, #32
    10cc:	add	x3, x5, x1
    10d0:	cmp	x4, x3
    10d4:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    10d8:	mov	w1, #0x25                  	// #37
    10dc:	mul	w1, w0, w1
    10e0:	and	w2, w1, w6
    10e4:	and	w1, w1, w6
    10e8:	lsl	x2, x2, #4
    10ec:	add	x4, x5, x2
    10f0:	ldr	w2, [x5, x2]
    10f4:	cmp	w0, w2
    10f8:	b.ne	1b3c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1474>  // b.any
    10fc:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    1100:	ldr	x22, [x4, #8]
    1104:	ldr	x0, [x0]
    1108:	ldrb	w0, [x0]
    110c:	cbnz	w0, 1174 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xaac>
    1110:	ldr	w0, [x23]
    1114:	add	w0, w0, #0x1
    1118:	str	w0, [x23]
    111c:	ldr	w1, [x22, #12]
    1120:	ldr	w3, [x22, #20]
    1124:	cmp	w1, w3
    1128:	b.eq	205c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1994>  // b.none
    112c:	ldr	w2, [x22, #16]
    1130:	cbz	w2, 1140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa78>
    1134:	sub	w1, w1, w3
    1138:	cmp	w2, w1
    113c:	b.eq	1798 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x10d0>  // b.none
    1140:	ldp	w0, w1, [x22, #32]
    1144:	cmp	w0, w1
    1148:	b.cs	18c0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x11f8>  // b.hs, b.nlast
    114c:	ldr	x3, [x22, #24]
    1150:	mov	w2, w0
    1154:	add	x4, x2, #0x1
    1158:	cmp	x4, w1, uxtw
    115c:	str	x23, [x3, x2, lsl #3]
    1160:	b.hi	2038 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1970>  // b.pmore
    1164:	add	w0, w0, #0x1
    1168:	str	w0, [x22, #32]
    116c:	cbnz	w0, a00 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x338>
    1170:	b	b14 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x44c>
    1174:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1178:	add	x0, x0, #0x0
    117c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1180:	tst	w0, #0xff
    1184:	b.eq	1110 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa48>  // b.none
    1188:	bl	0 <_ZN4llvm4dbgsEv>
    118c:	mov	x2, x0
    1190:	ldp	x1, x3, [x0, #16]
    1194:	sub	x1, x1, x3
    1198:	cmp	x1, #0x15
    119c:	b.ls	1cbc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15f4>  // b.plast
    11a0:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    11a4:	add	x4, x4, #0x0
    11a8:	ldp	x0, x1, [x4]
    11ac:	stp	x0, x1, [x3]
    11b0:	ldur	x0, [x4, #14]
    11b4:	stur	x0, [x3, #14]
    11b8:	ldr	x0, [x2, #24]
    11bc:	add	x0, x0, #0x16
    11c0:	str	x0, [x2, #24]
    11c4:	ldr	w1, [x19, #76]
    11c8:	mov	x0, x2
    11cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    11d0:	mov	x1, x0
    11d4:	ldp	x2, x3, [x0, #16]
    11d8:	sub	x2, x2, x3
    11dc:	cmp	x2, #0x6
    11e0:	b.ls	1ca4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15dc>  // b.plast
    11e4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    11e8:	add	x0, x0, #0x0
    11ec:	ldr	w2, [x0]
    11f0:	ldur	w0, [x0, #3]
    11f4:	str	w2, [x3]
    11f8:	stur	w0, [x3, #3]
    11fc:	ldr	x0, [x1, #24]
    1200:	add	x0, x0, #0x7
    1204:	str	x0, [x1, #24]
    1208:	mov	x0, x1
    120c:	mov	w1, w20
    1210:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1214:	mov	x1, x0
    1218:	ldp	x2, x3, [x0, #16]
    121c:	sub	x2, x2, x3
    1220:	cmp	x2, #0x1
    1224:	b.ls	1c90 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x15c8>  // b.plast
    1228:	mov	w0, #0xa29                 	// #2601
    122c:	strh	w0, [x3]
    1230:	ldr	x0, [x1, #24]
    1234:	add	x0, x0, #0x2
    1238:	str	x0, [x1, #24]
    123c:	b	1110 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa48>
    1240:	ldr	x1, [x19, #32]
    1244:	mov	w0, #0x0                   	// #0
    1248:	add	x1, x1, #0x1
    124c:	str	x1, [x19, #32]
    1250:	sub	w0, w0, #0x1
    1254:	mov	w1, #0x40                  	// #64
    1258:	orr	x0, x0, x0, lsr #1
    125c:	orr	x0, x0, x0, lsr #2
    1260:	orr	x0, x0, x0, lsr #4
    1264:	orr	x0, x0, x0, lsr #8
    1268:	orr	x0, x0, x0, lsr #16
    126c:	add	x0, x0, #0x1
    1270:	cmp	w0, w1
    1274:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1278:	str	w0, [x19, #56]
    127c:	ubfiz	x0, x0, #4, #32
    1280:	bl	0 <_Znwm>
    1284:	ldr	w1, [x19, #56]
    1288:	str	x0, [x19, #40]
    128c:	sub	w2, w1, #0x1
    1290:	and	w2, w2, w1
    1294:	cbz	x24, 1b88 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14c0>
    1298:	stp	x27, x28, [sp, #80]
    129c:	ubfiz	x25, x25, #4, #32
    12a0:	add	x27, x24, x25
    12a4:	str	xzr, [x19, #48]
    12a8:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    12ac:	ubfiz	x1, x1, #4, #32
    12b0:	mov	w2, #0xffffffff            	// #-1
    12b4:	add	x1, x0, x1
    12b8:	cmp	x0, x1
    12bc:	b.eq	12cc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc04>  // b.none
    12c0:	str	w2, [x0], #16
    12c4:	cmp	x1, x0
    12c8:	b.ne	12c0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xbf8>  // b.any
    12cc:	cmp	x24, x27
    12d0:	mov	x23, x24
    12d4:	mov	w26, #0x25                  	// #37
    12d8:	b.ne	12ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc24>  // b.any
    12dc:	b	14c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe00>
    12e0:	add	x23, x23, #0x10
    12e4:	cmp	x27, x23
    12e8:	b.eq	14c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe00>  // b.none
    12ec:	ldr	w0, [x23]
    12f0:	cmn	w0, #0x3
    12f4:	b.hi	12e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc18>  // b.pmore
    12f8:	ldr	w1, [x19, #56]
    12fc:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
    1300:	mul	w2, w0, w26
    1304:	sub	w1, w1, #0x1
    1308:	ldr	x4, [x19, #40]
    130c:	and	w3, w2, w1
    1310:	and	w2, w2, w1
    1314:	lsl	x3, x3, #4
    1318:	add	x5, x4, x3
    131c:	ldr	w3, [x4, x3]
    1320:	cmp	w0, w3
    1324:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1328:	mov	w7, #0x1                   	// #1
    132c:	mov	x6, #0x0                   	// #0
    1330:	cmn	w3, #0x1
    1334:	b.ne	1eec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1824>  // b.any
    1338:	cmp	x6, #0x0
    133c:	csel	x6, x6, x5, ne  // ne = any
    1340:	ldr	x1, [x23, #8]
    1344:	str	w0, [x6]
    1348:	ldr	w0, [x19, #48]
    134c:	str	xzr, [x23, #8]
    1350:	str	x1, [x6, #8]
    1354:	add	w0, w0, #0x1
    1358:	ldr	x28, [x23, #8]
    135c:	str	w0, [x19, #48]
    1360:	cbz	x28, 12e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc18>
    1364:	ldr	x0, [x28, #24]
    1368:	add	x1, x28, #0x28
    136c:	cmp	x0, x1
    1370:	b.eq	1378 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xcb0>  // b.none
    1374:	bl	0 <free>
    1378:	mov	x0, x28
    137c:	mov	x1, #0x68                  	// #104
    1380:	bl	0 <_ZdlPvm>
    1384:	b	12e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc18>
    1388:	mov	w2, w1
    138c:	lsr	w0, w1, #1
    1390:	orr	x0, x0, x2
    1394:	mov	w1, #0x40                  	// #64
    1398:	orr	x0, x0, x0, lsr #2
    139c:	orr	x0, x0, x0, lsr #4
    13a0:	orr	x0, x0, x0, lsr #8
    13a4:	orr	x0, x0, x0, lsr #16
    13a8:	add	x0, x0, #0x1
    13ac:	cmp	w0, w1
    13b0:	csel	w0, w0, w1, cs  // cs = hs, nlast
    13b4:	str	w0, [x19, #56]
    13b8:	ubfiz	x0, x0, #4, #32
    13bc:	bl	0 <_Znwm>
    13c0:	ldr	w1, [x19, #56]
    13c4:	str	x0, [x19, #40]
    13c8:	sub	w2, w1, #0x1
    13cc:	and	w2, w2, w1
    13d0:	cbz	x24, 1bbc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14f4>
    13d4:	stp	x27, x28, [sp, #80]
    13d8:	ubfiz	x25, x25, #4, #32
    13dc:	add	x28, x24, x25
    13e0:	str	xzr, [x19, #48]
    13e4:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    13e8:	ubfiz	x1, x1, #4, #32
    13ec:	mov	w3, w23
    13f0:	add	x1, x0, x1
    13f4:	cmp	x0, x1
    13f8:	b.eq	140c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd44>  // b.none
    13fc:	nop
    1400:	str	w3, [x0], #16
    1404:	cmp	x1, x0
    1408:	b.ne	1400 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd38>  // b.any
    140c:	mov	x23, x24
    1410:	mov	w27, #0x25                  	// #37
    1414:	b	1424 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd5c>
    1418:	add	x23, x23, #0x10
    141c:	cmp	x28, x23
    1420:	b.eq	155c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe94>  // b.none
    1424:	ldr	w0, [x23]
    1428:	cmn	w0, #0x3
    142c:	b.hi	1418 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd50>  // b.pmore
    1430:	ldr	w1, [x19, #56]
    1434:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
    1438:	mul	w2, w0, w27
    143c:	sub	w1, w1, #0x1
    1440:	ldr	x4, [x19, #40]
    1444:	and	w3, w2, w1
    1448:	and	w2, w2, w1
    144c:	lsl	x3, x3, #4
    1450:	add	x5, x4, x3
    1454:	ldr	w3, [x4, x3]
    1458:	cmp	w0, w3
    145c:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1460:	mov	w7, #0x1                   	// #1
    1464:	mov	x6, #0x0                   	// #0
    1468:	cmn	w3, #0x1
    146c:	b.ne	1f20 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1858>  // b.any
    1470:	cmp	x6, #0x0
    1474:	csel	x6, x6, x5, ne  // ne = any
    1478:	ldr	x1, [x23, #8]
    147c:	str	w0, [x6]
    1480:	ldr	w0, [x19, #48]
    1484:	str	xzr, [x23, #8]
    1488:	str	x1, [x6, #8]
    148c:	add	w0, w0, #0x1
    1490:	ldr	x1, [x23, #8]
    1494:	str	w0, [x19, #48]
    1498:	cbz	x1, 1418 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd50>
    149c:	ldr	x0, [x1, #24]
    14a0:	add	x2, x1, #0x28
    14a4:	cmp	x0, x2
    14a8:	b.eq	14b8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xdf0>  // b.none
    14ac:	str	x1, [sp, #96]
    14b0:	bl	0 <free>
    14b4:	ldr	x1, [sp, #96]
    14b8:	mov	x0, x1
    14bc:	mov	x1, #0x68                  	// #104
    14c0:	bl	0 <_ZdlPvm>
    14c4:	b	1418 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xd50>
    14c8:	mov	x1, x25
    14cc:	mov	x0, x24
    14d0:	bl	0 <_ZdlPvm>
    14d4:	ldp	x27, x28, [sp, #80]
    14d8:	ldr	w1, [x19, #56]
    14dc:	ldr	x0, [x19, #40]
    14e0:	cbz	w1, 1538 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe70>
    14e4:	cmn	w22, #0x3
    14e8:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
    14ec:	mov	w2, #0x25                  	// #37
    14f0:	sub	w1, w1, #0x1
    14f4:	ldr	w5, [x19, #48]
    14f8:	mul	w2, w22, w2
    14fc:	add	w5, w5, #0x1
    1500:	and	w3, w2, w1
    1504:	and	w2, w2, w1
    1508:	lsl	x3, x3, #4
    150c:	add	x4, x0, x3
    1510:	ldr	w3, [x0, x3]
    1514:	cmp	w22, w3
    1518:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    151c:	mov	w7, #0x1                   	// #1
    1520:	mov	x6, #0x0                   	// #0
    1524:	cmn	w3, #0x1
    1528:	b.ne	2080 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x19b8>  // b.any
    152c:	cmp	x6, #0x0
    1530:	csel	x4, x4, x6, eq  // eq = none
    1534:	b	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>
    1538:	stp	x27, x28, [sp, #80]
    153c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1540:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1544:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1548:	add	x3, x3, #0x0
    154c:	add	x1, x1, #0x0
    1550:	add	x0, x0, #0x0
    1554:	mov	w2, #0x22f                 	// #559
    1558:	bl	0 <__assert_fail>
    155c:	mov	x1, x25
    1560:	mov	x0, x24
    1564:	bl	0 <_ZdlPvm>
    1568:	ldp	x27, x28, [sp, #80]
    156c:	ldr	w1, [x19, #56]
    1570:	ldr	x0, [x19, #40]
    1574:	cbz	w1, 1538 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe70>
    1578:	sub	w1, w1, #0x1
    157c:	ldr	w5, [x19, #48]
    1580:	and	w3, w26, w1
    1584:	and	w2, w26, w1
    1588:	add	w5, w5, #0x1
    158c:	lsl	x3, x3, #4
    1590:	add	x4, x0, x3
    1594:	ldr	w3, [x0, x3]
    1598:	cmp	w3, w22
    159c:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    15a0:	mov	w7, #0x1                   	// #1
    15a4:	mov	x6, #0x0                   	// #0
    15a8:	cmn	w3, #0x1
    15ac:	b.eq	152c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe64>  // b.none
    15b0:	add	w2, w7, w2
    15b4:	cmp	x6, #0x0
    15b8:	and	w8, w1, w2
    15bc:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    15c0:	csel	x6, x6, x4, ne  // ne = any
    15c4:	add	w7, w7, #0x1
    15c8:	lsl	x3, x8, #4
    15cc:	and	w2, w1, w2
    15d0:	add	x4, x0, x8, lsl #4
    15d4:	ldr	w3, [x0, x3]
    15d8:	cmp	w22, w3
    15dc:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    15e0:	b	15a8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xee0>
    15e4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    15e8:	add	x0, x0, #0x0
    15ec:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    15f0:	tst	w0, #0xff
    15f4:	b.eq	f5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x894>  // b.none
    15f8:	bl	0 <_ZN4llvm4dbgsEv>
    15fc:	mov	x2, x0
    1600:	ldp	x1, x3, [x0, #16]
    1604:	sub	x1, x1, x3
    1608:	cmp	x1, #0x15
    160c:	b.ls	1dcc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1704>  // b.plast
    1610:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1614:	add	x4, x4, #0x0
    1618:	ldp	x0, x1, [x4]
    161c:	stp	x0, x1, [x3]
    1620:	ldur	x0, [x4, #14]
    1624:	stur	x0, [x3, #14]
    1628:	ldr	x0, [x2, #24]
    162c:	add	x0, x0, #0x16
    1630:	str	x0, [x2, #24]
    1634:	mov	w1, w23
    1638:	mov	x0, x2
    163c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1640:	mov	x1, x0
    1644:	ldp	x2, x3, [x0, #16]
    1648:	sub	x2, x2, x3
    164c:	cmp	x2, #0x6
    1650:	b.ls	1db4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16ec>  // b.plast
    1654:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1658:	add	x0, x0, #0x0
    165c:	ldr	w2, [x0]
    1660:	ldur	w0, [x0, #3]
    1664:	str	w2, [x3]
    1668:	stur	w0, [x3, #3]
    166c:	ldr	x0, [x1, #24]
    1670:	add	x0, x0, #0x7
    1674:	str	x0, [x1, #24]
    1678:	mov	x0, x1
    167c:	mov	w1, w20
    1680:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1684:	mov	x1, x0
    1688:	ldp	x2, x3, [x0, #16]
    168c:	sub	x2, x2, x3
    1690:	cmp	x2, #0x1
    1694:	b.ls	1de4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x171c>  // b.plast
    1698:	mov	w0, #0xa29                 	// #2601
    169c:	strh	w0, [x3]
    16a0:	ldr	x0, [x1, #24]
    16a4:	add	x0, x0, #0x2
    16a8:	str	x0, [x1, #24]
    16ac:	b	f5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x894>
    16b0:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    16b4:	add	x0, x0, #0x0
    16b8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    16bc:	tst	w0, #0xff
    16c0:	b.eq	fdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x914>  // b.none
    16c4:	bl	0 <_ZN4llvm4dbgsEv>
    16c8:	mov	x2, x0
    16cc:	ldp	x1, x3, [x0, #16]
    16d0:	sub	x1, x1, x3
    16d4:	cmp	x1, #0x15
    16d8:	b.ls	1d9c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16d4>  // b.plast
    16dc:	adrp	x4, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    16e0:	add	x4, x4, #0x0
    16e4:	ldp	x0, x1, [x4]
    16e8:	stp	x0, x1, [x3]
    16ec:	ldur	x0, [x4, #14]
    16f0:	stur	x0, [x3, #14]
    16f4:	ldr	x0, [x2, #24]
    16f8:	add	x0, x0, #0x16
    16fc:	str	x0, [x2, #24]
    1700:	ldr	w1, [x19, #76]
    1704:	mov	x0, x2
    1708:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    170c:	mov	x1, x0
    1710:	ldp	x2, x3, [x0, #16]
    1714:	sub	x2, x2, x3
    1718:	cmp	x2, #0x6
    171c:	b.ls	1d84 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16bc>  // b.plast
    1720:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1724:	add	x0, x0, #0x0
    1728:	ldr	w2, [x0]
    172c:	ldur	w0, [x0, #3]
    1730:	str	w2, [x3]
    1734:	stur	w0, [x3, #3]
    1738:	ldr	x0, [x1, #24]
    173c:	add	x0, x0, #0x7
    1740:	str	x0, [x1, #24]
    1744:	mov	x0, x1
    1748:	mov	w1, w20
    174c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1750:	mov	x1, x0
    1754:	ldp	x2, x3, [x0, #16]
    1758:	sub	x2, x2, x3
    175c:	cmp	x2, #0x1
    1760:	b.ls	1d70 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x16a8>  // b.plast
    1764:	mov	w0, #0xa29                 	// #2601
    1768:	strh	w0, [x3]
    176c:	ldr	x0, [x1, #24]
    1770:	add	x0, x0, #0x2
    1774:	str	x0, [x1, #24]
    1778:	b	fdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x914>
    177c:	add	x1, x22, #0x28
    1780:	add	x0, x22, #0x18
    1784:	mov	x3, #0x8                   	// #8
    1788:	mov	x2, #0x0                   	// #0
    178c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1790:	ldp	w0, w1, [x22, #32]
    1794:	b	af0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x428>
    1798:	ldr	w1, [x23, #8]
    179c:	cmp	w0, w1
    17a0:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    17a4:	ldr	w0, [x23, #4]
    17a8:	ldr	x2, [x22, #96]
    17ac:	add	w0, w0, #0x1
    17b0:	str	w0, [x23, #4]
    17b4:	ldr	w1, [x23, #80]
    17b8:	ldr	w0, [x2, #788]
    17bc:	cmp	w0, w1
    17c0:	b.ls	1140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa78>  // b.plast
    17c4:	ldr	w1, [x22, #88]
    17c8:	str	w1, [x23, #72]
    17cc:	str	w0, [x23, #80]
    17d0:	b	1140 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa78>
    17d4:	mov	w4, #0x1                   	// #1
    17d8:	cmn	w3, #0x1
    17dc:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    17e0:	add	w1, w4, w1
    17e4:	add	w6, w4, #0x1
    17e8:	and	w3, w2, w1
    17ec:	and	w1, w2, w1
    17f0:	lsl	x3, x3, #4
    17f4:	add	x4, x5, x3
    17f8:	ldr	w3, [x5, x3]
    17fc:	cmp	w20, w3
    1800:	b.eq	9a4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x2dc>  // b.none
    1804:	mov	w4, w6
    1808:	b	17d8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1110>
    180c:	mov	w4, #0x1                   	// #1
    1810:	cmn	w2, #0x1
    1814:	b.ne	1e94 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17cc>  // b.any
    1818:	mov	x4, x3
    181c:	b	aa0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3d8>
    1820:	mov	w5, #0x1                   	// #1
    1824:	cmn	w1, #0x1
    1828:	b.ne	1ec0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17f8>  // b.any
    182c:	mov	x5, x4
    1830:	b	81c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x154>
    1834:	mov	w5, #0x1                   	// #1
    1838:	cmn	w2, #0x1
    183c:	b.ne	1f54 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x188c>  // b.any
    1840:	mov	x5, x6
    1844:	b	ba8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4e0>
    1848:	ldr	w0, [x24, #8]
    184c:	cmp	w1, w0
    1850:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    1854:	ldr	w0, [x24, #4]
    1858:	ldr	x2, [x23, #96]
    185c:	add	w0, w0, #0x1
    1860:	str	w0, [x24, #4]
    1864:	ldr	w1, [x24, #80]
    1868:	ldr	w0, [x2, #788]
    186c:	cmp	w0, w1
    1870:	b.ls	100c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x944>  // b.plast
    1874:	ldr	w1, [x23, #88]
    1878:	str	w1, [x24, #72]
    187c:	str	w0, [x24, #80]
    1880:	b	100c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x944>
    1884:	ldr	w0, [x24, #8]
    1888:	cmp	w1, w0
    188c:	b.eq	2148 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a80>  // b.none
    1890:	ldr	w0, [x24, #4]
    1894:	ldr	x2, [x25, #96]
    1898:	add	w0, w0, #0x1
    189c:	str	w0, [x24, #4]
    18a0:	ldr	w1, [x24, #80]
    18a4:	ldr	w0, [x2, #788]
    18a8:	cmp	w0, w1
    18ac:	b.ls	f8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c4>  // b.plast
    18b0:	ldr	w1, [x25, #88]
    18b4:	str	w1, [x24, #72]
    18b8:	str	w0, [x24, #80]
    18bc:	b	f8c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8c4>
    18c0:	add	x1, x22, #0x28
    18c4:	add	x0, x22, #0x18
    18c8:	mov	x3, #0x8                   	// #8
    18cc:	mov	x2, #0x0                   	// #0
    18d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    18d4:	ldp	w0, w1, [x22, #32]
    18d8:	b	114c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa84>
    18dc:	ldr	x1, [x19, #32]
    18e0:	mov	w0, #0x0                   	// #0
    18e4:	add	x1, x1, #0x1
    18e8:	str	x1, [x19, #32]
    18ec:	sub	w0, w0, #0x1
    18f0:	mov	w1, #0x40                  	// #64
    18f4:	orr	x0, x0, x0, lsr #1
    18f8:	orr	x0, x0, x0, lsr #2
    18fc:	orr	x0, x0, x0, lsr #4
    1900:	orr	x0, x0, x0, lsr #8
    1904:	orr	x0, x0, x0, lsr #16
    1908:	add	x0, x0, #0x1
    190c:	cmp	w0, w1
    1910:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1914:	str	w0, [x19, #56]
    1918:	ubfiz	x0, x0, #4, #32
    191c:	bl	0 <_Znwm>
    1920:	ldr	w1, [x19, #56]
    1924:	str	x0, [x19, #40]
    1928:	sub	w2, w1, #0x1
    192c:	and	w2, w2, w1
    1930:	cbz	x24, 1e30 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1768>
    1934:	stp	x27, x28, [sp, #80]
    1938:	ubfiz	x3, x25, #4, #32
    193c:	add	x28, x24, x3
    1940:	str	xzr, [x19, #48]
    1944:	str	x3, [sp, #96]
    1948:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    194c:	ubfiz	x1, x1, #4, #32
    1950:	mov	w2, #0xffffffff            	// #-1
    1954:	add	x1, x0, x1
    1958:	cmp	x0, x1
    195c:	b.eq	196c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12a4>  // b.none
    1960:	str	w2, [x0], #16
    1964:	cmp	x1, x0
    1968:	b.ne	1960 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1298>  // b.any
    196c:	cmp	x24, x28
    1970:	mov	x25, x24
    1974:	mov	w26, #0x25                  	// #37
    1978:	b.ne	198c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12c4>  // b.any
    197c:	b	1a28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1360>
    1980:	add	x25, x25, #0x10
    1984:	cmp	x28, x25
    1988:	b.eq	1a28 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1360>  // b.none
    198c:	ldr	w0, [x25]
    1990:	cmn	w0, #0x3
    1994:	b.hi	1980 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12b8>  // b.pmore
    1998:	ldr	w1, [x19, #56]
    199c:	cbz	w1, 216c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1aa4>
    19a0:	mul	w2, w0, w26
    19a4:	sub	w1, w1, #0x1
    19a8:	ldr	x4, [x19, #40]
    19ac:	and	w3, w2, w1
    19b0:	and	w2, w2, w1
    19b4:	lsl	x3, x3, #4
    19b8:	add	x6, x4, x3
    19bc:	ldr	w3, [x4, x3]
    19c0:	cmp	w0, w3
    19c4:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    19c8:	mov	w8, #0x1                   	// #1
    19cc:	mov	x7, #0x0                   	// #0
    19d0:	cmn	w3, #0x1
    19d4:	b.ne	2004 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x193c>  // b.any
    19d8:	cmp	x7, #0x0
    19dc:	csel	x7, x7, x6, ne  // ne = any
    19e0:	ldr	x1, [x25, #8]
    19e4:	str	w0, [x7]
    19e8:	ldr	w0, [x19, #48]
    19ec:	str	xzr, [x25, #8]
    19f0:	str	x1, [x7, #8]
    19f4:	add	w0, w0, #0x1
    19f8:	ldr	x27, [x25, #8]
    19fc:	str	w0, [x19, #48]
    1a00:	cbz	x27, 1980 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12b8>
    1a04:	ldr	x0, [x27, #24]
    1a08:	add	x1, x27, #0x28
    1a0c:	cmp	x0, x1
    1a10:	b.eq	1a18 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1350>  // b.none
    1a14:	bl	0 <free>
    1a18:	mov	x0, x27
    1a1c:	mov	x1, #0x68                  	// #104
    1a20:	bl	0 <_ZdlPvm>
    1a24:	b	1980 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x12b8>
    1a28:	ldr	x1, [sp, #96]
    1a2c:	mov	x0, x24
    1a30:	bl	0 <_ZdlPvm>
    1a34:	ldp	x27, x28, [sp, #80]
    1a38:	ldr	w1, [x19, #56]
    1a3c:	ldr	x0, [x19, #40]
    1a40:	cbz	w1, 1538 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe70>
    1a44:	cmn	w23, #0x3
    1a48:	b.hi	e4c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x784>  // b.pmore
    1a4c:	mov	w2, #0x25                  	// #37
    1a50:	sub	w1, w1, #0x1
    1a54:	ldr	w5, [x19, #48]
    1a58:	mul	w2, w23, w2
    1a5c:	add	w5, w5, #0x1
    1a60:	and	w3, w2, w1
    1a64:	and	w2, w2, w1
    1a68:	lsl	x3, x3, #4
    1a6c:	add	x4, x0, x3
    1a70:	ldr	w3, [x0, x3]
    1a74:	cmp	w23, w3
    1a78:	b.eq	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>  // b.none
    1a7c:	mov	w7, #0x1                   	// #1
    1a80:	mov	x6, #0x0                   	// #0
    1a84:	cmn	w3, #0x1
    1a88:	b.ne	20e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a20>  // b.any
    1a8c:	cmp	x6, #0x0
    1a90:	csel	x4, x4, x6, eq  // eq = none
    1a94:	b	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>
    1a98:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1a9c:	add	x1, x1, #0x0
    1aa0:	mov	x2, #0x7                   	// #7
    1aa4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1aa8:	mov	x1, x0
    1aac:	b	f04 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x83c>
    1ab0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1ab4:	mov	x2, #0x2                   	// #2
    1ab8:	add	x1, x1, #0x0
    1abc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ac0:	b	ab4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3ec>
    1ac4:	mov	x2, #0x16                  	// #22
    1ac8:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1acc:	add	x1, x1, #0x0
    1ad0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ad4:	mov	x2, x0
    1ad8:	b	ec0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x7f8>
    1adc:	ldr	x1, [sp, #104]
    1ae0:	mov	x0, x24
    1ae4:	bl	0 <_ZdlPvm>
    1ae8:	ldr	w1, [x19, #56]
    1aec:	ldr	x0, [x19, #40]
    1af0:	cbz	w1, 153c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe74>
    1af4:	sub	w1, w1, #0x1
    1af8:	ldr	w5, [x19, #48]
    1afc:	and	w3, w26, w1
    1b00:	and	w2, w26, w1
    1b04:	add	w5, w5, #0x1
    1b08:	lsl	x3, x3, #4
    1b0c:	add	x4, x0, x3
    1b10:	ldr	w3, [x0, x3]
    1b14:	cmp	w23, w3
    1b18:	b.eq	d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x640>  // b.none
    1b1c:	mov	w7, #0x1                   	// #1
    1b20:	mov	x6, #0x0                   	// #0
    1b24:	cmn	w3, #0x1
    1b28:	b.ne	20b4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x19ec>  // b.any
    1b2c:	cmp	x6, #0x0
    1b30:	csel	x4, x4, x6, eq  // eq = none
    1b34:	ldp	x27, x28, [sp, #80]
    1b38:	b	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>
    1b3c:	mov	w4, #0x1                   	// #1
    1b40:	cmn	w2, #0x1
    1b44:	b.ne	1f80 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x18b8>  // b.any
    1b48:	mov	x4, x3
    1b4c:	b	10fc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa34>
    1b50:	add	x1, x25, #0x28
    1b54:	mov	x2, #0x0                   	// #0
    1b58:	add	x0, x25, #0x18
    1b5c:	mov	x3, #0x8                   	// #8
    1b60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1b64:	ldp	w1, w2, [x25, #32]
    1b68:	b	f98 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x8d0>
    1b6c:	add	x1, x23, #0x28
    1b70:	mov	x2, #0x0                   	// #0
    1b74:	add	x0, x23, #0x18
    1b78:	mov	x3, #0x8                   	// #8
    1b7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1b80:	ldp	w1, w2, [x23, #32]
    1b84:	b	1018 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x950>
    1b88:	str	xzr, [x19, #48]
    1b8c:	cbnz	w2, 211c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a54>
    1b90:	ubfiz	x2, x1, #4, #32
    1b94:	add	x2, x0, x2
    1b98:	cmp	x0, x2
    1b9c:	b.eq	14e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe18>  // b.none
    1ba0:	mov	x1, x0
    1ba4:	mov	w3, #0xffffffff            	// #-1
    1ba8:	str	w3, [x1], #16
    1bac:	cmp	x2, x1
    1bb0:	b.ne	1ba8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x14e0>  // b.any
    1bb4:	ldr	w1, [x19, #56]
    1bb8:	b	14e0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe18>
    1bbc:	str	xzr, [x19, #48]
    1bc0:	cbnz	w2, 211c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a54>
    1bc4:	ubfiz	x2, x1, #4, #32
    1bc8:	add	x2, x0, x2
    1bcc:	cmp	x0, x2
    1bd0:	b.eq	1574 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xeac>  // b.none
    1bd4:	mov	w3, w23
    1bd8:	mov	x1, x0
    1bdc:	nop
    1be0:	str	w3, [x1], #16
    1be4:	cmp	x2, x1
    1be8:	b.ne	1be0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1518>  // b.any
    1bec:	ldr	w1, [x19, #56]
    1bf0:	b	1574 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xeac>
    1bf4:	mov	w4, #0x1                   	// #1
    1bf8:	cmn	w3, #0x1
    1bfc:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1c00:	add	w2, w4, w2
    1c04:	add	w7, w4, #0x1
    1c08:	and	w4, w6, w2
    1c0c:	and	w2, w6, w2
    1c10:	lsl	x3, x4, #4
    1c14:	add	x4, x5, x4, lsl #4
    1c18:	ldr	w3, [x5, x3]
    1c1c:	cmp	w0, w3
    1c20:	b.eq	a6c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3a4>  // b.none
    1c24:	mov	w4, w7
    1c28:	b	1bf8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1530>
    1c2c:	add	w0, w4, w0
    1c30:	add	w6, w4, #0x1
    1c34:	and	w1, w2, w0
    1c38:	and	w0, w2, w0
    1c3c:	lsl	x1, x1, #4
    1c40:	add	x4, x5, x1
    1c44:	ldr	w1, [x5, x1]
    1c48:	cmp	w20, w1
    1c4c:	b.eq	9d8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x310>  // b.none
    1c50:	mov	w4, w6
    1c54:	b	1044 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x97c>
    1c58:	mov	w5, #0x1                   	// #1
    1c5c:	cmn	w4, #0x1
    1c60:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1c64:	add	w1, w1, w5
    1c68:	add	w6, w5, #0x1
    1c6c:	and	w5, w3, w1
    1c70:	and	w1, w3, w1
    1c74:	lsl	x4, x5, #4
    1c78:	add	x5, x2, x5, lsl #4
    1c7c:	ldr	w4, [x2, x4]
    1c80:	cmp	w20, w4
    1c84:	b.eq	7e8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x120>  // b.none
    1c88:	mov	w5, w6
    1c8c:	b	1c5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1594>
    1c90:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1c94:	mov	x2, #0x2                   	// #2
    1c98:	add	x1, x1, #0x0
    1c9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ca0:	b	1110 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa48>
    1ca4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1ca8:	add	x1, x1, #0x0
    1cac:	mov	x2, #0x7                   	// #7
    1cb0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1cb4:	mov	x1, x0
    1cb8:	b	1208 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xb40>
    1cbc:	mov	x2, #0x16                  	// #22
    1cc0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1cc4:	add	x1, x1, #0x0
    1cc8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ccc:	mov	x2, x0
    1cd0:	b	11c4 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xafc>
    1cd4:	mov	w6, #0x1                   	// #1
    1cd8:	cmn	w5, #0x1
    1cdc:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1ce0:	add	w2, w6, w2
    1ce4:	add	w6, w6, #0x1
    1ce8:	and	w7, w4, w2
    1cec:	and	w2, w4, w2
    1cf0:	lsl	x5, x7, #4
    1cf4:	add	x7, x3, x7, lsl #4
    1cf8:	ldr	w5, [x3, x5]
    1cfc:	cmp	w0, w5
    1d00:	b.eq	b74 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4ac>  // b.none
    1d04:	b	1cd8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1610>
    1d08:	mov	w8, #0x1                   	// #1
    1d0c:	mov	x7, #0x0                   	// #0
    1d10:	cmn	w3, #0x1
    1d14:	b.ne	1fd0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1908>  // b.any
    1d18:	cmp	x7, #0x0
    1d1c:	csel	x7, x7, x6, ne  // ne = any
    1d20:	ldr	x1, [x25, #8]
    1d24:	str	w0, [x7]
    1d28:	ldr	w0, [x19, #48]
    1d2c:	str	xzr, [x25, #8]
    1d30:	str	x1, [x7, #8]
    1d34:	add	w0, w0, #0x1
    1d38:	ldr	x1, [x25, #8]
    1d3c:	str	w0, [x19, #48]
    1d40:	cbz	x1, dc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6f8>
    1d44:	ldr	x0, [x1, #24]
    1d48:	add	x2, x1, #0x28
    1d4c:	cmp	x0, x2
    1d50:	b.eq	1d60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1698>  // b.none
    1d54:	str	x1, [sp, #96]
    1d58:	bl	0 <free>
    1d5c:	ldr	x1, [sp, #96]
    1d60:	mov	x0, x1
    1d64:	mov	x1, #0x68                  	// #104
    1d68:	bl	0 <_ZdlPvm>
    1d6c:	b	dc0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x6f8>
    1d70:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1d74:	mov	x2, #0x2                   	// #2
    1d78:	add	x1, x1, #0x0
    1d7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d80:	b	fdc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x914>
    1d84:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1d88:	add	x1, x1, #0x0
    1d8c:	mov	x2, #0x7                   	// #7
    1d90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d94:	mov	x1, x0
    1d98:	b	1744 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x107c>
    1d9c:	mov	x2, #0x16                  	// #22
    1da0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1da4:	add	x1, x1, #0x0
    1da8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1dac:	mov	x2, x0
    1db0:	b	1700 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1038>
    1db4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1db8:	add	x1, x1, #0x0
    1dbc:	mov	x2, #0x7                   	// #7
    1dc0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1dc4:	mov	x1, x0
    1dc8:	b	1678 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xfb0>
    1dcc:	mov	x2, #0x16                  	// #22
    1dd0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1dd4:	add	x1, x1, #0x0
    1dd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ddc:	mov	x2, x0
    1de0:	b	1634 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xf6c>
    1de4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1de8:	mov	x2, #0x2                   	// #2
    1dec:	add	x1, x1, #0x0
    1df0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1df4:	b	f5c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x894>
    1df8:	mov	w4, #0x1                   	// #1
    1dfc:	cmn	w3, #0x1
    1e00:	b.eq	944 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x27c>  // b.none
    1e04:	add	w2, w4, w2
    1e08:	add	w7, w4, #0x1
    1e0c:	and	w4, w6, w2
    1e10:	and	w2, w6, w2
    1e14:	lsl	x3, x4, #4
    1e18:	add	x4, x5, x4, lsl #4
    1e1c:	ldr	w3, [x5, x3]
    1e20:	cmp	w0, w3
    1e24:	b.eq	10c8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa00>  // b.none
    1e28:	mov	w4, w7
    1e2c:	b	1dfc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1734>
    1e30:	str	xzr, [x19, #48]
    1e34:	cbnz	w2, 211c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a54>
    1e38:	ubfiz	x2, x1, #4, #32
    1e3c:	add	x2, x0, x2
    1e40:	cmp	x0, x2
    1e44:	b.eq	1a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1378>  // b.none
    1e48:	mov	x1, x0
    1e4c:	mov	w3, #0xffffffff            	// #-1
    1e50:	str	w3, [x1], #16
    1e54:	cmp	x2, x1
    1e58:	b.ne	1e50 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1788>  // b.any
    1e5c:	ldr	w1, [x19, #56]
    1e60:	b	1a40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1378>
    1e64:	cbnz	w2, 2120 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1a58>
    1e68:	ubfiz	x2, x1, #4, #32
    1e6c:	add	x2, x0, x2
    1e70:	cmp	x0, x2
    1e74:	b.eq	1af0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1428>  // b.none
    1e78:	mov	w3, w27
    1e7c:	mov	x1, x0
    1e80:	str	w3, [x1], #16
    1e84:	cmp	x2, x1
    1e88:	b.ne	1e80 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x17b8>  // b.any
    1e8c:	ldr	w1, [x19, #56]
    1e90:	b	1af0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1428>
    1e94:	add	w1, w4, w1
    1e98:	add	w7, w4, #0x1
    1e9c:	and	w2, w6, w1
    1ea0:	and	w1, w6, w1
    1ea4:	lsl	x2, x2, #4
    1ea8:	add	x4, x5, x2
    1eac:	ldr	w2, [x5, x2]
    1eb0:	cmp	w0, w2
    1eb4:	b.eq	aa0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x3d8>  // b.none
    1eb8:	mov	w4, w7
    1ebc:	b	1810 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1148>
    1ec0:	add	w0, w5, w0
    1ec4:	add	w6, w5, #0x1
    1ec8:	and	w1, w3, w0
    1ecc:	and	w0, w3, w0
    1ed0:	lsl	x1, x1, #4
    1ed4:	add	x5, x2, x1
    1ed8:	ldr	w1, [x2, x1]
    1edc:	cmp	w20, w1
    1ee0:	b.eq	81c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x154>  // b.none
    1ee4:	mov	w5, w6
    1ee8:	b	1824 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x115c>
    1eec:	add	w2, w2, w7
    1ef0:	cmp	x6, #0x0
    1ef4:	and	w8, w1, w2
    1ef8:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    1efc:	csel	x6, x6, x5, ne  // ne = any
    1f00:	add	w7, w7, #0x1
    1f04:	lsl	x3, x8, #4
    1f08:	and	w2, w1, w2
    1f0c:	add	x5, x4, x8, lsl #4
    1f10:	ldr	w3, [x4, x3]
    1f14:	cmp	w0, w3
    1f18:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1f1c:	b	1330 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xc68>
    1f20:	add	w2, w7, w2
    1f24:	cmp	x6, #0x0
    1f28:	and	w8, w1, w2
    1f2c:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    1f30:	csel	x6, x6, x5, ne  // ne = any
    1f34:	add	w7, w7, #0x1
    1f38:	lsl	x3, x8, #4
    1f3c:	and	w2, w1, w2
    1f40:	add	x5, x4, x8, lsl #4
    1f44:	ldr	w3, [x4, x3]
    1f48:	cmp	w0, w3
    1f4c:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    1f50:	b	1468 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xda0>
    1f54:	add	w1, w5, w1
    1f58:	add	w7, w5, #0x1
    1f5c:	and	w5, w4, w1
    1f60:	and	w1, w4, w1
    1f64:	lsl	x2, x5, #4
    1f68:	add	x5, x3, x5, lsl #4
    1f6c:	ldr	w2, [x3, x2]
    1f70:	cmp	w0, w2
    1f74:	b.eq	ba8 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x4e0>  // b.none
    1f78:	mov	w5, w7
    1f7c:	b	1838 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1170>
    1f80:	add	w1, w4, w1
    1f84:	add	w7, w4, #0x1
    1f88:	and	w4, w6, w1
    1f8c:	and	w1, w6, w1
    1f90:	lsl	x2, x4, #4
    1f94:	add	x4, x5, x4, lsl #4
    1f98:	ldr	w2, [x5, x2]
    1f9c:	cmp	w0, w2
    1fa0:	b.eq	10fc <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xa34>  // b.none
    1fa4:	mov	w4, w7
    1fa8:	b	1b40 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1478>
    1fac:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1fb0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1fb4:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    1fb8:	add	x3, x3, #0x0
    1fbc:	add	x1, x1, #0x0
    1fc0:	add	x0, x0, #0x0
    1fc4:	mov	w2, #0x9c                  	// #156
    1fc8:	stp	x27, x28, [sp, #80]
    1fcc:	bl	0 <__assert_fail>
    1fd0:	add	w2, w8, w2
    1fd4:	cmp	x7, #0x0
    1fd8:	and	w9, w1, w2
    1fdc:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    1fe0:	csel	x7, x7, x6, ne  // ne = any
    1fe4:	add	w8, w8, #0x1
    1fe8:	lsl	x3, x9, #4
    1fec:	and	w2, w1, w2
    1ff0:	add	x6, x4, x9, lsl #4
    1ff4:	ldr	w3, [x4, x3]
    1ff8:	cmp	w0, w3
    1ffc:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    2000:	b	1d10 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1648>
    2004:	add	w2, w2, w8
    2008:	cmp	x7, #0x0
    200c:	and	w9, w1, w2
    2010:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    2014:	csel	x7, x7, x6, ne  // ne = any
    2018:	add	w8, w8, #0x1
    201c:	lsl	x3, x9, #4
    2020:	and	w2, w1, w2
    2024:	add	x6, x4, x9, lsl #4
    2028:	ldr	w3, [x4, x3]
    202c:	cmp	w0, w3
    2030:	b.eq	e08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x740>  // b.none
    2034:	b	19d0 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1308>
    2038:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    203c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2040:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2044:	add	x3, x3, #0x0
    2048:	add	x1, x1, #0x0
    204c:	add	x0, x0, #0x0
    2050:	mov	w2, #0x43                  	// #67
    2054:	stp	x27, x28, [sp, #80]
    2058:	bl	0 <__assert_fail>
    205c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2060:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2064:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2068:	add	x3, x3, #0x0
    206c:	add	x1, x1, #0x0
    2070:	add	x0, x0, #0x0
    2074:	mov	w2, #0x52                  	// #82
    2078:	stp	x27, x28, [sp, #80]
    207c:	bl	0 <__assert_fail>
    2080:	add	w2, w2, w7
    2084:	cmp	x6, #0x0
    2088:	and	w8, w1, w2
    208c:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    2090:	csel	x6, x6, x4, ne  // ne = any
    2094:	add	w7, w7, #0x1
    2098:	lsl	x3, x8, #4
    209c:	and	w2, w1, w2
    20a0:	add	x4, x0, x8, lsl #4
    20a4:	ldr	w3, [x0, x3]
    20a8:	cmp	w22, w3
    20ac:	b.eq	c60 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x598>  // b.none
    20b0:	b	1524 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0xe5c>
    20b4:	add	w2, w7, w2
    20b8:	cmp	x6, #0x0
    20bc:	and	w8, w1, w2
    20c0:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    20c4:	csel	x6, x6, x4, ne  // ne = any
    20c8:	add	w7, w7, #0x1
    20cc:	lsl	x3, x8, #4
    20d0:	and	w2, w1, w2
    20d4:	add	x4, x0, x8, lsl #4
    20d8:	ldr	w3, [x0, x3]
    20dc:	cmp	w23, w3
    20e0:	b.eq	d08 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x640>  // b.none
    20e4:	b	1b24 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x145c>
    20e8:	add	w2, w7, w2
    20ec:	cmp	x6, #0x0
    20f0:	and	w8, w1, w2
    20f4:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    20f8:	csel	x6, x6, x4, ne  // ne = any
    20fc:	add	w7, w7, #0x1
    2100:	lsl	x3, x8, #4
    2104:	and	w2, w1, w2
    2108:	add	x4, x0, x8, lsl #4
    210c:	ldr	w3, [x0, x3]
    2110:	cmp	w23, w3
    2114:	b.eq	d0c <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x644>  // b.none
    2118:	b	1a84 <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x13bc>
    211c:	stp	x27, x28, [sp, #80]
    2120:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2124:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2128:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    212c:	add	x3, x3, #0x0
    2130:	add	x1, x1, #0x0
    2134:	add	x0, x0, #0x0
    2138:	mov	w2, #0x15b                 	// #347
    213c:	bl	0 <__assert_fail>
    2140:	ldp	x27, x28, [sp, #80]
    2144:	b	18ec <_ZN4llvm3mca6LSUnit8dispatchERKNS0_7InstRefE+0x1224>
    2148:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    214c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2150:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2154:	add	x3, x3, #0x0
    2158:	add	x1, x1, #0x0
    215c:	add	x0, x0, #0x0
    2160:	mov	w2, #0x68                  	// #104
    2164:	stp	x27, x28, [sp, #80]
    2168:	bl	0 <__assert_fail>
    216c:	mov	x0, #0x0                   	// #0
    2170:	str	wzr, [x0]
    2174:	brk	#0x3e8

0000000000002178 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb>:
    2178:	adrp	x5, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    217c:	mov	w7, #0x1                   	// #1
    2180:	ldr	x6, [x1, #64]
    2184:	stp	w2, w3, [x0, #8]
    2188:	ldr	x5, [x5]
    218c:	str	xzr, [x0, #16]
    2190:	strb	w4, [x0, #24]
    2194:	add	x5, x5, #0x10
    2198:	str	x5, [x0]
    219c:	stp	xzr, xzr, [x0, #32]
    21a0:	str	xzr, [x0, #48]
    21a4:	str	wzr, [x0, #56]
    21a8:	str	w7, [x0, #64]
    21ac:	cbz	x6, 21d8 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x60>
    21b0:	stp	x29, x30, [sp, #-16]!
    21b4:	mov	x29, sp
    21b8:	cbnz	w2, 21c4 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x4c>
    21bc:	ldr	w2, [x6, #36]
    21c0:	cbnz	w2, 21dc <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x64>
    21c4:	cbnz	w3, 21d0 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x58>
    21c8:	ldr	w2, [x6, #40]
    21cc:	cbnz	w2, 2214 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x9c>
    21d0:	ldp	x29, x30, [sp], #16
    21d4:	ret
    21d8:	ret
    21dc:	ldr	x4, [x1, #40]
    21e0:	cbz	x4, 224c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xd4>
    21e4:	ldr	w4, [x1, #48]
    21e8:	cmp	w2, w4
    21ec:	b.cs	226c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xf4>  // b.hs, b.nlast
    21f0:	ldr	x4, [x1, #32]
    21f4:	ubfiz	x2, x2, #5, #32
    21f8:	add	x2, x4, x2
    21fc:	ldr	w2, [x2, #16]
    2200:	cmp	w2, #0x0
    2204:	csel	w2, w2, wzr, ge  // ge = tcont
    2208:	str	w2, [x0, #8]
    220c:	cbnz	w3, 21d0 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x58>
    2210:	b	21c8 <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0x50>
    2214:	ldr	x3, [x1, #40]
    2218:	cbz	x3, 224c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xd4>
    221c:	ldr	w3, [x1, #48]
    2220:	cmp	w2, w3
    2224:	b.cs	226c <_ZN4llvm3mca10LSUnitBaseC1ERKNS_12MCSchedModelEjjb+0xf4>  // b.hs, b.nlast
    2228:	ldr	x1, [x1, #32]
    222c:	ubfiz	x2, x2, #5, #32
    2230:	add	x2, x1, x2
    2234:	ldr	w1, [x2, #16]
    2238:	cmp	w1, #0x0
    223c:	csel	w1, w1, wzr, ge  // ge = tcont
    2240:	str	w1, [x0, #12]
    2244:	ldp	x29, x30, [sp], #16
    2248:	ret
    224c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2250:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2254:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2258:	add	x3, x3, #0x0
    225c:	add	x1, x1, #0x0
    2260:	add	x0, x0, #0x0
    2264:	mov	w2, #0x154                 	// #340
    2268:	bl	0 <__assert_fail>
    226c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2270:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2274:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2278:	add	x3, x3, #0x0
    227c:	add	x1, x1, #0x0
    2280:	add	x0, x0, #0x0
    2284:	mov	w2, #0x156                 	// #342
    2288:	bl	0 <__assert_fail>
    228c:	nop

0000000000002290 <_ZN4llvm3mca10LSUnitBaseD1Ev>:
    2290:	stp	x29, x30, [sp, #-48]!
    2294:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2298:	mov	x29, sp
    229c:	ldr	x1, [x1]
    22a0:	stp	x19, x20, [sp, #16]
    22a4:	mov	x20, x0
    22a8:	ldr	w0, [x0, #56]
    22ac:	add	x1, x1, #0x10
    22b0:	str	x1, [x20]
    22b4:	ubfiz	x1, x0, #4, #32
    22b8:	ldr	x19, [x20, #40]
    22bc:	cbz	w0, 2328 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x98>
    22c0:	stp	x21, x22, [sp, #32]
    22c4:	add	x21, x19, x1
    22c8:	b	22d8 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x48>
    22cc:	add	x19, x19, #0x10
    22d0:	cmp	x21, x19
    22d4:	b.eq	2318 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x88>  // b.none
    22d8:	ldr	w0, [x19]
    22dc:	cmn	w0, #0x3
    22e0:	b.hi	22cc <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>  // b.pmore
    22e4:	ldr	x22, [x19, #8]
    22e8:	add	x1, x22, #0x28
    22ec:	cbz	x22, 22cc <_ZN4llvm3mca10LSUnitBaseD1Ev+0x3c>
    22f0:	ldr	x0, [x22, #24]
    22f4:	cmp	x0, x1
    22f8:	b.eq	2300 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x70>  // b.none
    22fc:	bl	0 <free>
    2300:	mov	x0, x22
    2304:	add	x19, x19, #0x10
    2308:	mov	x1, #0x68                  	// #104
    230c:	bl	0 <_ZdlPvm>
    2310:	cmp	x21, x19
    2314:	b.ne	22d8 <_ZN4llvm3mca10LSUnitBaseD1Ev+0x48>  // b.any
    2318:	ldr	w1, [x20, #56]
    231c:	ldp	x21, x22, [sp, #32]
    2320:	ldr	x19, [x20, #40]
    2324:	lsl	x1, x1, #4
    2328:	mov	x0, x19
    232c:	bl	0 <_ZdlPvm>
    2330:	mov	x0, x20
    2334:	ldp	x19, x20, [sp, #16]
    2338:	ldp	x29, x30, [sp], #48
    233c:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

0000000000002340 <_ZN4llvm3mca10LSUnitBaseD0Ev>:
    2340:	stp	x29, x30, [sp, #-32]!
    2344:	mov	x29, sp
    2348:	str	x19, [sp, #16]
    234c:	mov	x19, x0
    2350:	bl	2290 <_ZN4llvm3mca10LSUnitBaseD1Ev>
    2354:	mov	x0, x19
    2358:	mov	x1, #0x48                  	// #72
    235c:	ldr	x19, [sp, #16]
    2360:	ldp	x29, x30, [sp], #32
    2364:	b	0 <_ZdlPvm>

0000000000002368 <_ZNK4llvm3mca10LSUnitBase4dumpEv>:
    2368:	stp	x29, x30, [sp, #-80]!
    236c:	mov	x29, sp
    2370:	stp	x19, x20, [sp, #16]
    2374:	stp	x21, x22, [sp, #32]
    2378:	mov	x22, x0
    237c:	stp	x23, x24, [sp, #48]
    2380:	str	x25, [sp, #64]
    2384:	bl	0 <_ZN4llvm4dbgsEv>
    2388:	ldp	x1, x3, [x0, #16]
    238c:	sub	x1, x1, x3
    2390:	cmp	x1, #0x12
    2394:	b.ls	29cc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x664>  // b.plast
    2398:	mov	x2, x0
    239c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    23a0:	add	x0, x0, #0x0
    23a4:	ldp	x4, x5, [x0]
    23a8:	stp	x4, x5, [x3]
    23ac:	ldur	w0, [x0, #15]
    23b0:	stur	w0, [x3, #15]
    23b4:	ldr	x0, [x2, #24]
    23b8:	ldr	w1, [x22, #8]
    23bc:	add	x0, x0, #0x13
    23c0:	str	x0, [x2, #24]
    23c4:	mov	x0, x2
    23c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    23cc:	mov	x1, x0
    23d0:	ldp	x3, x2, [x0, #16]
    23d4:	cmp	x2, x3
    23d8:	b.cs	29fc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x694>  // b.hs, b.nlast
    23dc:	add	x0, x2, #0x1
    23e0:	str	x0, [x1, #24]
    23e4:	mov	w0, #0xa                   	// #10
    23e8:	strb	w0, [x2]
    23ec:	bl	0 <_ZN4llvm4dbgsEv>
    23f0:	mov	x2, x0
    23f4:	ldp	x1, x3, [x0, #16]
    23f8:	sub	x1, x1, x3
    23fc:	cmp	x1, #0x12
    2400:	b.ls	2a1c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x6b4>  // b.plast
    2404:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2408:	add	x0, x0, #0x0
    240c:	ldp	x4, x5, [x0]
    2410:	stp	x4, x5, [x3]
    2414:	ldur	w0, [x0, #15]
    2418:	stur	w0, [x3, #15]
    241c:	ldr	x0, [x2, #24]
    2420:	ldr	w1, [x22, #12]
    2424:	add	x0, x0, #0x13
    2428:	str	x0, [x2, #24]
    242c:	mov	x0, x2
    2430:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2434:	mov	x1, x0
    2438:	ldp	x3, x2, [x0, #16]
    243c:	cmp	x2, x3
    2440:	b.cs	2a4c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x6e4>  // b.hs, b.nlast
    2444:	add	x0, x2, #0x1
    2448:	str	x0, [x1, #24]
    244c:	mov	w0, #0xa                   	// #10
    2450:	strb	w0, [x2]
    2454:	bl	0 <_ZN4llvm4dbgsEv>
    2458:	mov	x2, x0
    245c:	ldp	x1, x3, [x0, #16]
    2460:	sub	x1, x1, x3
    2464:	cmp	x1, #0x18
    2468:	b.ls	2a6c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x704>  // b.plast
    246c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2470:	add	x0, x0, #0x0
    2474:	ldrb	w1, [x0, #24]
    2478:	ldp	x4, x5, [x0]
    247c:	stp	x4, x5, [x3]
    2480:	ldr	x0, [x0, #16]
    2484:	str	x0, [x3, #16]
    2488:	strb	w1, [x3, #24]
    248c:	ldr	x0, [x2, #24]
    2490:	ldr	w1, [x22, #16]
    2494:	add	x0, x0, #0x19
    2498:	str	x0, [x2, #24]
    249c:	mov	x0, x2
    24a0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    24a4:	mov	x1, x0
    24a8:	ldp	x3, x2, [x0, #16]
    24ac:	cmp	x2, x3
    24b0:	b.cs	2a9c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x734>  // b.hs, b.nlast
    24b4:	add	x0, x2, #0x1
    24b8:	str	x0, [x1, #24]
    24bc:	mov	w0, #0xa                   	// #10
    24c0:	strb	w0, [x2]
    24c4:	bl	0 <_ZN4llvm4dbgsEv>
    24c8:	mov	x2, x0
    24cc:	ldp	x1, x3, [x0, #16]
    24d0:	sub	x1, x1, x3
    24d4:	cmp	x1, #0x18
    24d8:	b.ls	2abc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x754>  // b.plast
    24dc:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    24e0:	add	x0, x0, #0x0
    24e4:	ldrb	w1, [x0, #24]
    24e8:	ldp	x4, x5, [x0]
    24ec:	stp	x4, x5, [x3]
    24f0:	ldr	x0, [x0, #16]
    24f4:	str	x0, [x3, #16]
    24f8:	strb	w1, [x3, #24]
    24fc:	ldr	x0, [x2, #24]
    2500:	ldr	w1, [x22, #20]
    2504:	add	x0, x0, #0x19
    2508:	str	x0, [x2, #24]
    250c:	mov	x0, x2
    2510:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2514:	mov	x1, x0
    2518:	ldp	x3, x2, [x0, #16]
    251c:	cmp	x3, x2
    2520:	b.ls	2aec <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x784>  // b.plast
    2524:	add	x0, x2, #0x1
    2528:	str	x0, [x1, #24]
    252c:	mov	w0, #0xa                   	// #10
    2530:	strb	w0, [x2]
    2534:	bl	0 <_ZN4llvm4dbgsEv>
    2538:	mov	x1, x0
    253c:	ldp	x3, x2, [x0, #16]
    2540:	cmp	x3, x2
    2544:	b.eq	2b08 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7a0>  // b.none
    2548:	mov	w0, #0xa                   	// #10
    254c:	strb	w0, [x2]
    2550:	ldr	x0, [x1, #24]
    2554:	add	x0, x0, #0x1
    2558:	str	x0, [x1, #24]
    255c:	ldp	x23, x19, [x22, #32]
    2560:	ldr	w0, [x22, #48]
    2564:	ldr	w21, [x22, #56]
    2568:	add	x21, x19, x21, lsl #4
    256c:	cbnz	w0, 29a8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x640>
    2570:	mov	x19, x21
    2574:	adrp	x25, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2578:	adrp	x24, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    257c:	add	x25, x25, #0x0
    2580:	add	x24, x24, #0x0
    2584:	nop
    2588:	cbz	x19, 27f4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x48c>
    258c:	cbz	x21, 2598 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x230>
    2590:	cmp	x19, x21
    2594:	b.eq	27f8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x490>  // b.none
    2598:	ldr	x20, [x19, #8]
    259c:	bl	0 <_ZN4llvm4dbgsEv>
    25a0:	ldp	x1, x3, [x0, #16]
    25a4:	mov	x2, x0
    25a8:	sub	x1, x1, x3
    25ac:	cmp	x1, #0xf
    25b0:	b.ls	2810 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4a8>  // b.plast
    25b4:	ldp	x0, x1, [x25]
    25b8:	stp	x0, x1, [x3]
    25bc:	ldr	x0, [x2, #24]
    25c0:	ldr	w1, [x19]
    25c4:	add	x0, x0, #0x10
    25c8:	str	x0, [x2, #24]
    25cc:	mov	x0, x2
    25d0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    25d4:	mov	x2, x0
    25d8:	ldp	x1, x3, [x0, #16]
    25dc:	sub	x1, x1, x3
    25e0:	cmp	x1, #0x2
    25e4:	b.ls	2840 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4d8>  // b.plast
    25e8:	ldrh	w1, [x24]
    25ec:	ldrb	w0, [x24, #2]
    25f0:	strh	w1, [x3]
    25f4:	strb	w0, [x3, #2]
    25f8:	ldr	x1, [x2, #24]
    25fc:	ldr	x0, [x2, #16]
    2600:	add	x1, x1, #0x3
    2604:	str	x1, [x2, #24]
    2608:	sub	x0, x0, x1
    260c:	cmp	x0, #0xa
    2610:	b.ls	2864 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x4fc>  // b.plast
    2614:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2618:	add	x0, x0, #0x0
    261c:	ldr	x3, [x0]
    2620:	str	x3, [x1]
    2624:	ldur	w0, [x0, #7]
    2628:	stur	w0, [x1, #7]
    262c:	ldr	x0, [x2, #24]
    2630:	ldr	w1, [x20]
    2634:	add	x0, x0, #0xb
    2638:	str	x0, [x2, #24]
    263c:	mov	x0, x2
    2640:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2644:	mov	x2, x0
    2648:	ldp	x1, x3, [x0, #16]
    264c:	sub	x1, x1, x3
    2650:	cmp	x1, #0xc
    2654:	b.ls	289c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x534>  // b.plast
    2658:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    265c:	add	x0, x0, #0x0
    2660:	ldr	x1, [x0]
    2664:	str	x1, [x3]
    2668:	ldur	x0, [x0, #5]
    266c:	stur	x0, [x3, #5]
    2670:	ldr	x0, [x2, #24]
    2674:	ldr	w1, [x20, #4]
    2678:	add	x0, x0, #0xd
    267c:	str	x0, [x2, #24]
    2680:	mov	x0, x2
    2684:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2688:	mov	x2, x0
    268c:	ldp	x1, x3, [x0, #16]
    2690:	sub	x1, x1, x3
    2694:	cmp	x1, #0xe
    2698:	b.ls	28d0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x568>  // b.plast
    269c:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    26a0:	add	x0, x0, #0x0
    26a4:	ldr	x1, [x0]
    26a8:	str	x1, [x3]
    26ac:	ldur	x0, [x0, #7]
    26b0:	stur	x0, [x3, #7]
    26b4:	ldr	x0, [x2, #24]
    26b8:	ldr	w1, [x20, #8]
    26bc:	add	x0, x0, #0xf
    26c0:	str	x0, [x2, #24]
    26c4:	mov	x0, x2
    26c8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    26cc:	mov	x2, x0
    26d0:	ldp	x1, x3, [x0, #16]
    26d4:	sub	x1, x1, x3
    26d8:	cmp	x1, #0x9
    26dc:	b.ls	2904 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x59c>  // b.plast
    26e0:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    26e4:	add	x0, x0, #0x0
    26e8:	ldr	x1, [x0]
    26ec:	str	x1, [x3]
    26f0:	ldrh	w0, [x0, #8]
    26f4:	strh	w0, [x3, #8]
    26f8:	ldr	x0, [x2, #24]
    26fc:	ldr	w1, [x20, #12]
    2700:	add	x0, x0, #0xa
    2704:	str	x0, [x2, #24]
    2708:	mov	x0, x2
    270c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2710:	mov	x2, x0
    2714:	ldp	x1, x3, [x0, #16]
    2718:	sub	x1, x1, x3
    271c:	cmp	x1, #0xc
    2720:	b.ls	2938 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x5d0>  // b.plast
    2724:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2728:	add	x0, x0, #0x0
    272c:	ldr	x1, [x0]
    2730:	str	x1, [x3]
    2734:	ldur	x0, [x0, #5]
    2738:	stur	x0, [x3, #5]
    273c:	ldr	x0, [x2, #24]
    2740:	ldr	w1, [x20, #16]
    2744:	add	x0, x0, #0xd
    2748:	str	x0, [x2, #24]
    274c:	mov	x0, x2
    2750:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2754:	mov	x2, x0
    2758:	ldp	x1, x3, [x0, #16]
    275c:	sub	x1, x1, x3
    2760:	cmp	x1, #0xe
    2764:	b.ls	296c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x604>  // b.plast
    2768:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    276c:	add	x0, x0, #0x0
    2770:	ldr	x1, [x0]
    2774:	str	x1, [x3]
    2778:	ldur	x0, [x0, #7]
    277c:	stur	x0, [x3, #7]
    2780:	ldr	x0, [x2, #24]
    2784:	ldr	w1, [x20, #20]
    2788:	add	x0, x0, #0xf
    278c:	str	x0, [x2, #24]
    2790:	mov	x0, x2
    2794:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2798:	mov	x1, x0
    279c:	ldp	x3, x2, [x0, #16]
    27a0:	cmp	x2, x3
    27a4:	b.cs	299c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x634>  // b.hs, b.nlast
    27a8:	add	x0, x2, #0x1
    27ac:	str	x0, [x1, #24]
    27b0:	mov	w0, #0xa                   	// #10
    27b4:	strb	w0, [x2]
    27b8:	ldr	x0, [x22, #32]
    27bc:	cmp	x0, x23
    27c0:	b.ne	2b3c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7d4>  // b.any
    27c4:	add	x19, x19, #0x10
    27c8:	cmp	x19, x21
    27cc:	b.hi	2b1c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7b4>  // b.pmore
    27d0:	b.eq	2588 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x220>  // b.none
    27d4:	nop
    27d8:	ldr	w0, [x19]
    27dc:	cmn	w0, #0x3
    27e0:	b.ls	2588 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x220>  // b.plast
    27e4:	add	x19, x19, #0x10
    27e8:	cmp	x19, x21
    27ec:	b.ne	27d8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x470>  // b.any
    27f0:	cbnz	x19, 258c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x224>
    27f4:	cbnz	x21, 2590 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x228>
    27f8:	ldp	x19, x20, [sp, #16]
    27fc:	ldp	x21, x22, [sp, #32]
    2800:	ldp	x23, x24, [sp, #48]
    2804:	ldr	x25, [sp, #64]
    2808:	ldp	x29, x30, [sp], #80
    280c:	ret
    2810:	mov	x1, x25
    2814:	mov	x2, #0x10                  	// #16
    2818:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    281c:	mov	x2, x0
    2820:	ldr	w1, [x19]
    2824:	mov	x0, x2
    2828:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    282c:	mov	x2, x0
    2830:	ldp	x1, x3, [x0, #16]
    2834:	sub	x1, x1, x3
    2838:	cmp	x1, #0x2
    283c:	b.hi	25e8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x280>  // b.pmore
    2840:	mov	x2, #0x3                   	// #3
    2844:	mov	x1, x24
    2848:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    284c:	mov	x2, x0
    2850:	ldr	x1, [x0, #24]
    2854:	ldr	x0, [x2, #16]
    2858:	sub	x0, x0, x1
    285c:	cmp	x0, #0xa
    2860:	b.hi	2614 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2ac>  // b.pmore
    2864:	mov	x0, x2
    2868:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    286c:	mov	x2, #0xb                   	// #11
    2870:	add	x1, x1, #0x0
    2874:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2878:	mov	x2, x0
    287c:	ldr	w1, [x20]
    2880:	mov	x0, x2
    2884:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2888:	mov	x2, x0
    288c:	ldp	x1, x3, [x0, #16]
    2890:	sub	x1, x1, x3
    2894:	cmp	x1, #0xc
    2898:	b.hi	2658 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x2f0>  // b.pmore
    289c:	mov	x2, #0xd                   	// #13
    28a0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    28a4:	add	x1, x1, #0x0
    28a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    28ac:	ldr	w1, [x20, #4]
    28b0:	mov	x2, x0
    28b4:	mov	x0, x2
    28b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    28bc:	mov	x2, x0
    28c0:	ldp	x1, x3, [x0, #16]
    28c4:	sub	x1, x1, x3
    28c8:	cmp	x1, #0xe
    28cc:	b.hi	269c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x334>  // b.pmore
    28d0:	mov	x2, #0xf                   	// #15
    28d4:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    28d8:	add	x1, x1, #0x0
    28dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    28e0:	ldr	w1, [x20, #8]
    28e4:	mov	x2, x0
    28e8:	mov	x0, x2
    28ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    28f0:	mov	x2, x0
    28f4:	ldp	x1, x3, [x0, #16]
    28f8:	sub	x1, x1, x3
    28fc:	cmp	x1, #0x9
    2900:	b.hi	26e0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x378>  // b.pmore
    2904:	mov	x2, #0xa                   	// #10
    2908:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    290c:	add	x1, x1, #0x0
    2910:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2914:	ldr	w1, [x20, #12]
    2918:	mov	x2, x0
    291c:	mov	x0, x2
    2920:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2924:	mov	x2, x0
    2928:	ldp	x1, x3, [x0, #16]
    292c:	sub	x1, x1, x3
    2930:	cmp	x1, #0xc
    2934:	b.hi	2724 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x3bc>  // b.pmore
    2938:	mov	x2, #0xd                   	// #13
    293c:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2940:	add	x1, x1, #0x0
    2944:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2948:	ldr	w1, [x20, #16]
    294c:	mov	x2, x0
    2950:	mov	x0, x2
    2954:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2958:	mov	x2, x0
    295c:	ldp	x1, x3, [x0, #16]
    2960:	sub	x1, x1, x3
    2964:	cmp	x1, #0xe
    2968:	b.hi	2768 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x400>  // b.pmore
    296c:	mov	x2, #0xf                   	// #15
    2970:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2974:	add	x1, x1, #0x0
    2978:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    297c:	ldr	w1, [x20, #20]
    2980:	mov	x2, x0
    2984:	mov	x0, x2
    2988:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    298c:	mov	x1, x0
    2990:	ldp	x3, x2, [x0, #16]
    2994:	cmp	x2, x3
    2998:	b.cc	27a8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x440>  // b.lo, b.ul, b.last
    299c:	mov	w1, #0xa                   	// #10
    29a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    29a4:	b	27b8 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x450>
    29a8:	cmp	x19, x21
    29ac:	b.hi	2b1c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x7b4>  // b.pmore
    29b0:	b.eq	2574 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x20c>  // b.none
    29b4:	ldr	w0, [x19]
    29b8:	cmn	w0, #0x3
    29bc:	b.ls	2574 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x20c>  // b.plast
    29c0:	add	x19, x19, #0x10
    29c4:	cmp	x19, x21
    29c8:	b	29b0 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x648>
    29cc:	mov	x2, #0x13                  	// #19
    29d0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    29d4:	add	x1, x1, #0x0
    29d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    29dc:	ldr	w1, [x22, #8]
    29e0:	mov	x2, x0
    29e4:	mov	x0, x2
    29e8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    29ec:	mov	x1, x0
    29f0:	ldp	x3, x2, [x0, #16]
    29f4:	cmp	x2, x3
    29f8:	b.cc	23dc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x74>  // b.lo, b.ul, b.last
    29fc:	mov	w1, #0xa                   	// #10
    2a00:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2a04:	bl	0 <_ZN4llvm4dbgsEv>
    2a08:	mov	x2, x0
    2a0c:	ldp	x1, x3, [x0, #16]
    2a10:	sub	x1, x1, x3
    2a14:	cmp	x1, #0x12
    2a18:	b.hi	2404 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x9c>  // b.pmore
    2a1c:	mov	x2, #0x13                  	// #19
    2a20:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2a24:	add	x1, x1, #0x0
    2a28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a2c:	ldr	w1, [x22, #12]
    2a30:	mov	x2, x0
    2a34:	mov	x0, x2
    2a38:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2a3c:	mov	x1, x0
    2a40:	ldp	x3, x2, [x0, #16]
    2a44:	cmp	x2, x3
    2a48:	b.cc	2444 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0xdc>  // b.lo, b.ul, b.last
    2a4c:	mov	w1, #0xa                   	// #10
    2a50:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2a54:	bl	0 <_ZN4llvm4dbgsEv>
    2a58:	mov	x2, x0
    2a5c:	ldp	x1, x3, [x0, #16]
    2a60:	sub	x1, x1, x3
    2a64:	cmp	x1, #0x18
    2a68:	b.hi	246c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x104>  // b.pmore
    2a6c:	mov	x2, #0x19                  	// #25
    2a70:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2a74:	add	x1, x1, #0x0
    2a78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2a7c:	ldr	w1, [x22, #16]
    2a80:	mov	x2, x0
    2a84:	mov	x0, x2
    2a88:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2a8c:	mov	x1, x0
    2a90:	ldp	x3, x2, [x0, #16]
    2a94:	cmp	x2, x3
    2a98:	b.cc	24b4 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x14c>  // b.lo, b.ul, b.last
    2a9c:	mov	w1, #0xa                   	// #10
    2aa0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2aa4:	bl	0 <_ZN4llvm4dbgsEv>
    2aa8:	mov	x2, x0
    2aac:	ldp	x1, x3, [x0, #16]
    2ab0:	sub	x1, x1, x3
    2ab4:	cmp	x1, #0x18
    2ab8:	b.hi	24dc <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x174>  // b.pmore
    2abc:	mov	x2, #0x19                  	// #25
    2ac0:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2ac4:	add	x1, x1, #0x0
    2ac8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2acc:	ldr	w1, [x22, #20]
    2ad0:	mov	x2, x0
    2ad4:	mov	x0, x2
    2ad8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2adc:	mov	x1, x0
    2ae0:	ldp	x3, x2, [x0, #16]
    2ae4:	cmp	x3, x2
    2ae8:	b.hi	2524 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1bc>  // b.pmore
    2aec:	mov	w1, #0xa                   	// #10
    2af0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2af4:	bl	0 <_ZN4llvm4dbgsEv>
    2af8:	mov	x1, x0
    2afc:	ldp	x3, x2, [x0, #16]
    2b00:	cmp	x3, x2
    2b04:	b.ne	2548 <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1e0>  // b.any
    2b08:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b0c:	mov	x2, #0x1                   	// #1
    2b10:	add	x1, x1, #0x0
    2b14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2b18:	b	255c <_ZNK4llvm3mca10LSUnitBase4dumpEv+0x1f4>
    2b1c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b20:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b24:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b28:	add	x3, x3, #0x0
    2b2c:	add	x1, x1, #0x0
    2b30:	add	x0, x0, #0x0
    2b34:	mov	w2, #0x4e0                 	// #1248
    2b38:	bl	0 <__assert_fail>
    2b3c:	adrp	x3, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b40:	adrp	x1, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b44:	adrp	x0, 0 <_ZNK4llvm3mca6LSUnit11isAvailableERKNS0_7InstRefE>
    2b48:	add	x3, x3, #0x0
    2b4c:	add	x1, x1, #0x0
    2b50:	add	x0, x0, #0x0
    2b54:	mov	w2, #0x4cf                 	// #1231
    2b58:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	w21, [x0, #56]
  1c:	ldr	x0, [x1, #8]
  20:	stp	x23, x24, [sp, #48]
  24:	stp	x25, x26, [sp, #64]
  28:	ldr	w22, [x0, #796]
  2c:	ldr	x25, [x19, #40]
  30:	cbz	w21, 220 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x220>
  34:	cmn	w22, #0x3
  38:	b.hi	6d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6d0>  // b.pmore
  3c:	mov	w23, #0x25                  	// #37
  40:	sub	w1, w21, #0x1
  44:	mul	w23, w22, w23
  48:	and	w0, w23, w1
  4c:	and	w4, w23, w1
  50:	lsl	x0, x0, #4
  54:	add	x3, x25, x0
  58:	ldr	w24, [x25, x0]
  5c:	cmp	w22, w24
  60:	b.ne	1a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1a4>  // b.any
  64:	ldr	x0, [x3, #8]
  68:	ldr	w2, [x0, #16]
  6c:	cbnz	w2, d4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd4>
  70:	ldr	x4, [x0, #96]
  74:	add	w2, w2, #0x1
  78:	ldr	x1, [x20, #8]
  7c:	str	w2, [x0, #16]
  80:	cbz	x4, 10c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x10c>
  84:	ldr	w3, [x1, #788]
  88:	ldr	w5, [x4, #788]
  8c:	cmp	w5, w3
  90:	b.ge	a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xa4>  // b.tcont
  94:	ldr	w3, [x20]
  98:	mov	x4, x1
  9c:	str	w3, [x0, #88]
  a0:	str	x1, [x0, #96]
  a4:	cbz	w2, bc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xbc>
  a8:	ldr	w1, [x0, #12]
  ac:	ldr	w3, [x0, #20]
  b0:	sub	w1, w1, w3
  b4:	cmp	w2, w1
  b8:	b.eq	124 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x124>  // b.none
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldp	x23, x24, [sp, #48]
  c8:	ldp	x25, x26, [sp, #64]
  cc:	ldp	x29, x30, [sp], #96
  d0:	ret
  d4:	ldr	w1, [x0, #12]
  d8:	ldr	w3, [x0, #20]
  dc:	sub	w1, w1, w3
  e0:	cmp	w2, w1
  e4:	b.ne	70 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x70>  // b.any
  e8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  ec:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  f0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  f4:	add	x3, x3, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x0, x0, #0x0
 100:	mov	w2, #0x79                  	// #121
 104:	stp	x27, x28, [sp, #80]
 108:	bl	0 <__assert_fail>
 10c:	ldr	w3, [x20]
 110:	mov	x4, x1
 114:	str	w3, [x0, #88]
 118:	str	x1, [x0, #96]
 11c:	cbz	w2, bc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xbc>
 120:	b	a8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xa8>
 124:	ldr	x2, [x0, #24]
 128:	ldr	w6, [x0, #32]
 12c:	add	x6, x2, x6, lsl #3
 130:	cmp	x2, x6
 134:	b.eq	bc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xbc>  // b.none
 138:	stp	x27, x28, [sp, #80]
 13c:	nop
 140:	ldr	x1, [x2]
 144:	ldr	w5, [x1]
 148:	ldr	w3, [x1, #8]
 14c:	cmp	w5, w3
 150:	b.eq	6f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6f4>  // b.none
 154:	ldr	w3, [x1, #4]
 158:	ldr	w5, [x1, #80]
 15c:	add	w3, w3, #0x1
 160:	str	w3, [x1, #4]
 164:	ldr	w3, [x4, #788]
 168:	cmp	w3, w5
 16c:	b.ls	17c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x17c>  // b.plast
 170:	ldr	w5, [x0, #88]
 174:	str	w5, [x1, #72]
 178:	str	w3, [x1, #80]
 17c:	add	x2, x2, #0x8
 180:	cmp	x6, x2
 184:	b.ne	140 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x140>  // b.any
 188:	ldp	x19, x20, [sp, #16]
 18c:	ldp	x21, x22, [sp, #32]
 190:	ldp	x23, x24, [sp, #48]
 194:	ldp	x25, x26, [sp, #64]
 198:	ldp	x27, x28, [sp, #80]
 19c:	ldp	x29, x30, [sp], #96
 1a0:	ret
 1a4:	mov	w0, #0x1                   	// #1
 1a8:	mov	x2, #0x0                   	// #0
 1ac:	cmn	w24, #0x1
 1b0:	b.ne	614 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x614>  // b.any
 1b4:	ldr	x4, [x19, #32]
 1b8:	lsl	w0, w21, #1
 1bc:	ldr	w5, [x19, #48]
 1c0:	cmp	x2, #0x0
 1c4:	add	x4, x4, #0x1
 1c8:	str	x4, [x19, #32]
 1cc:	add	w5, w5, #0x1
 1d0:	add	w4, w0, w21
 1d4:	csel	x2, x2, x3, ne  // ne = any
 1d8:	cmp	w4, w5, lsl #2
 1dc:	b.ls	230 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x230>  // b.plast
 1e0:	ldr	w0, [x19, #52]
 1e4:	sub	w0, w21, w0
 1e8:	sub	w0, w0, w5
 1ec:	cmp	w0, w21, lsr #3
 1f0:	b.ls	32c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x32c>  // b.plast
 1f4:	str	w5, [x19, #48]
 1f8:	ldr	w0, [x2]
 1fc:	cmn	w0, #0x1
 200:	b.eq	210 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x210>  // b.none
 204:	ldr	w0, [x19, #52]
 208:	sub	w0, w0, #0x1
 20c:	str	w0, [x19, #52]
 210:	mov	x0, #0x0                   	// #0
 214:	str	w22, [x2]
 218:	str	xzr, [x2, #8]
 21c:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 220:	ldr	x1, [x19, #32]
 224:	mov	w0, #0x0                   	// #0
 228:	add	x1, x1, #0x1
 22c:	str	x1, [x19, #32]
 230:	sub	w0, w0, #0x1
 234:	mov	w1, #0x40                  	// #64
 238:	orr	x0, x0, x0, lsr #1
 23c:	orr	x0, x0, x0, lsr #2
 240:	orr	x0, x0, x0, lsr #4
 244:	orr	x0, x0, x0, lsr #8
 248:	orr	x0, x0, x0, lsr #16
 24c:	add	x0, x0, #0x1
 250:	cmp	w0, w1
 254:	csel	w0, w0, w1, cs  // cs = hs, nlast
 258:	str	w0, [x19, #56]
 25c:	ubfiz	x0, x0, #4, #32
 260:	bl	0 <_Znwm>
 264:	ldr	w1, [x19, #56]
 268:	str	x0, [x19, #40]
 26c:	str	xzr, [x19, #48]
 270:	sub	w2, w1, #0x1
 274:	and	w2, w2, w1
 278:	cbz	x25, 5b4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5b4>
 27c:	ubfiz	x21, x21, #4, #32
 280:	add	x26, x25, x21
 284:	cbnz	w2, 77c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x77c>
 288:	ubfiz	x1, x1, #4, #32
 28c:	mov	w2, #0xffffffff            	// #-1
 290:	add	x1, x0, x1
 294:	cmp	x0, x1
 298:	b.eq	2ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ac>  // b.none
 29c:	nop
 2a0:	str	w2, [x0], #16
 2a4:	cmp	x1, x0
 2a8:	b.ne	2a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2a0>  // b.any
 2ac:	cmp	x25, x26
 2b0:	mov	x23, x25
 2b4:	mov	w24, #0x25                  	// #37
 2b8:	b.ne	2cc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2cc>  // b.any
 2bc:	b	460 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x460>
 2c0:	add	x23, x23, #0x10
 2c4:	cmp	x26, x23
 2c8:	b.eq	460 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x460>  // b.none
 2cc:	ldr	w0, [x23]
 2d0:	cmn	w0, #0x3
 2d4:	b.hi	2c0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2c0>  // b.pmore
 2d8:	ldr	w1, [x19, #56]
 2dc:	stp	x27, x28, [sp, #80]
 2e0:	cbz	w1, 7a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x7a0>
 2e4:	mul	w2, w0, w24
 2e8:	sub	w1, w1, #0x1
 2ec:	ldr	x4, [x19, #40]
 2f0:	and	w3, w2, w1
 2f4:	and	w2, w2, w1
 2f8:	lsl	x3, x3, #4
 2fc:	add	x5, x4, x3
 300:	ldr	w3, [x4, x3]
 304:	cmp	w0, w3
 308:	b.ne	550 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x550>  // b.any
 30c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 310:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 314:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 318:	add	x3, x3, #0x0
 31c:	add	x1, x1, #0x0
 320:	add	x0, x0, #0x0
 324:	mov	w2, #0x17a                 	// #378
 328:	bl	0 <__assert_fail>
 32c:	mov	w2, w1
 330:	lsr	w0, w1, #1
 334:	orr	x0, x0, x2
 338:	mov	w1, #0x40                  	// #64
 33c:	orr	x0, x0, x0, lsr #2
 340:	orr	x0, x0, x0, lsr #4
 344:	orr	x0, x0, x0, lsr #8
 348:	orr	x0, x0, x0, lsr #16
 34c:	add	x0, x0, #0x1
 350:	cmp	w0, w1
 354:	csel	w0, w0, w1, cs  // cs = hs, nlast
 358:	str	w0, [x19, #56]
 35c:	ubfiz	x0, x0, #4, #32
 360:	bl	0 <_Znwm>
 364:	ldr	w1, [x19, #56]
 368:	str	x0, [x19, #40]
 36c:	sub	w2, w1, #0x1
 370:	and	w2, w2, w1
 374:	cbz	x25, 5e4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5e4>
 378:	stp	x27, x28, [sp, #80]
 37c:	ubfiz	x21, x21, #4, #32
 380:	add	x27, x25, x21
 384:	str	xzr, [x19, #48]
 388:	cbnz	w2, 780 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x780>
 38c:	ubfiz	x1, x1, #4, #32
 390:	add	x1, x0, x1
 394:	cmp	x0, x1
 398:	b.eq	3ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3ac>  // b.none
 39c:	nop
 3a0:	str	w24, [x0], #16
 3a4:	cmp	x1, x0
 3a8:	b.ne	3a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3a0>  // b.any
 3ac:	mov	x24, x25
 3b0:	mov	w26, #0x25                  	// #37
 3b4:	b	3c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3c4>
 3b8:	add	x24, x24, #0x10
 3bc:	cmp	x27, x24
 3c0:	b.eq	4cc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4cc>  // b.none
 3c4:	ldr	w0, [x24]
 3c8:	cmn	w0, #0x3
 3cc:	b.hi	3b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3b8>  // b.pmore
 3d0:	ldr	w1, [x19, #56]
 3d4:	cbz	w1, 7a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x7a0>
 3d8:	mul	w2, w0, w26
 3dc:	sub	w1, w1, #0x1
 3e0:	ldr	x4, [x19, #40]
 3e4:	and	w3, w2, w1
 3e8:	and	w2, w2, w1
 3ec:	lsl	x3, x3, #4
 3f0:	add	x5, x4, x3
 3f4:	ldr	w3, [x4, x3]
 3f8:	cmp	w0, w3
 3fc:	b.eq	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.none
 400:	mov	w7, #0x1                   	// #1
 404:	mov	x6, #0x0                   	// #0
 408:	cmn	w3, #0x1
 40c:	b.ne	688 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x688>  // b.any
 410:	cmp	x6, #0x0
 414:	csel	x6, x6, x5, ne  // ne = any
 418:	ldr	x1, [x24, #8]
 41c:	str	w0, [x6]
 420:	ldr	w0, [x19, #48]
 424:	str	xzr, [x24, #8]
 428:	str	x1, [x6, #8]
 42c:	add	w0, w0, #0x1
 430:	ldr	x28, [x24, #8]
 434:	str	w0, [x19, #48]
 438:	cbz	x28, 3b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3b8>
 43c:	ldr	x0, [x28, #24]
 440:	add	x1, x28, #0x28
 444:	cmp	x0, x1
 448:	b.eq	450 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x450>  // b.none
 44c:	bl	0 <free>
 450:	mov	x0, x28
 454:	mov	x1, #0x68                  	// #104
 458:	bl	0 <_ZdlPvm>
 45c:	b	3b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3b8>
 460:	mov	x1, x21
 464:	mov	x0, x25
 468:	bl	0 <_ZdlPvm>
 46c:	ldr	w1, [x19, #56]
 470:	ldr	x0, [x19, #40]
 474:	cbz	w1, 52c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x52c>
 478:	cmn	w22, #0x3
 47c:	b.hi	6d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6d0>  // b.pmore
 480:	mov	w2, #0x25                  	// #37
 484:	sub	w1, w1, #0x1
 488:	ldr	w5, [x19, #48]
 48c:	mul	w2, w22, w2
 490:	add	w5, w5, #0x1
 494:	and	w4, w2, w1
 498:	and	w3, w2, w1
 49c:	lsl	x4, x4, #4
 4a0:	add	x2, x0, x4
 4a4:	ldr	w4, [x0, x4]
 4a8:	cmp	w22, w4
 4ac:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 4b0:	mov	w7, #0x1                   	// #1
 4b4:	mov	x6, #0x0                   	// #0
 4b8:	cmn	w4, #0x1
 4bc:	b.ne	714 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x714>  // b.any
 4c0:	cmp	x6, #0x0
 4c4:	csel	x2, x2, x6, eq  // eq = none
 4c8:	b	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>
 4cc:	mov	x1, x21
 4d0:	mov	x0, x25
 4d4:	bl	0 <_ZdlPvm>
 4d8:	ldp	x27, x28, [sp, #80]
 4dc:	ldr	w1, [x19, #56]
 4e0:	ldr	x0, [x19, #40]
 4e4:	cbz	w1, 52c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x52c>
 4e8:	sub	w1, w1, #0x1
 4ec:	ldr	w5, [x19, #48]
 4f0:	and	w3, w23, w1
 4f4:	and	w23, w23, w1
 4f8:	add	w5, w5, #0x1
 4fc:	lsl	x3, x3, #4
 500:	add	x2, x0, x3
 504:	ldr	w3, [x0, x3]
 508:	cmp	w22, w3
 50c:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 510:	mov	w6, #0x1                   	// #1
 514:	mov	x4, #0x0                   	// #0
 518:	cmn	w3, #0x1
 51c:	b.ne	748 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x748>  // b.any
 520:	cmp	x4, #0x0
 524:	csel	x2, x2, x4, eq  // eq = none
 528:	b	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>
 52c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 530:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 534:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 538:	add	x3, x3, #0x0
 53c:	add	x1, x1, #0x0
 540:	add	x0, x0, #0x0
 544:	mov	w2, #0x22f                 	// #559
 548:	stp	x27, x28, [sp, #80]
 54c:	bl	0 <__assert_fail>
 550:	mov	w7, #0x1                   	// #1
 554:	mov	x6, #0x0                   	// #0
 558:	cmn	w3, #0x1
 55c:	b.ne	64c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x64c>  // b.any
 560:	cmp	x6, #0x0
 564:	csel	x6, x6, x5, ne  // ne = any
 568:	ldr	x1, [x23, #8]
 56c:	str	w0, [x6]
 570:	ldr	w0, [x19, #48]
 574:	str	xzr, [x23, #8]
 578:	str	x1, [x6, #8]
 57c:	add	w0, w0, #0x1
 580:	ldr	x27, [x23, #8]
 584:	str	w0, [x19, #48]
 588:	cbz	x27, 5ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5ac>
 58c:	ldr	x0, [x27, #24]
 590:	add	x1, x27, #0x28
 594:	cmp	x0, x1
 598:	b.eq	5a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5a0>  // b.none
 59c:	bl	0 <free>
 5a0:	mov	x0, x27
 5a4:	mov	x1, #0x68                  	// #104
 5a8:	bl	0 <_ZdlPvm>
 5ac:	ldp	x27, x28, [sp, #80]
 5b0:	b	2c0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2c0>
 5b4:	cbnz	w2, 77c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x77c>
 5b8:	ubfiz	x2, x1, #4, #32
 5bc:	add	x2, x0, x2
 5c0:	cmp	x0, x2
 5c4:	b.eq	474 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x474>  // b.none
 5c8:	mov	x1, x0
 5cc:	mov	w3, #0xffffffff            	// #-1
 5d0:	str	w3, [x1], #16
 5d4:	cmp	x2, x1
 5d8:	b.ne	5d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5d0>  // b.any
 5dc:	ldr	w1, [x19, #56]
 5e0:	b	474 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x474>
 5e4:	str	xzr, [x19, #48]
 5e8:	cbnz	w2, 77c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x77c>
 5ec:	ubfiz	x2, x1, #4, #32
 5f0:	add	x2, x0, x2
 5f4:	cmp	x0, x2
 5f8:	b.eq	4e4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4e4>  // b.none
 5fc:	mov	x1, x0
 600:	str	w24, [x1], #16
 604:	cmp	x2, x1
 608:	b.ne	600 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x600>  // b.any
 60c:	ldr	w1, [x19, #56]
 610:	b	4e4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4e4>
 614:	add	w4, w0, w4
 618:	cmp	x2, #0x0
 61c:	and	w5, w1, w4
 620:	ccmn	w24, #0x2, #0x0, eq  // eq = none
 624:	csel	x3, x3, x2, eq  // eq = none
 628:	add	w0, w0, #0x1
 62c:	lsl	x2, x5, #4
 630:	and	w4, w1, w4
 634:	add	x5, x25, x2
 638:	ldr	w24, [x25, x2]
 63c:	cmp	w22, w24
 640:	b.ne	6c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6c4>  // b.any
 644:	ldr	x0, [x5, #8]
 648:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 64c:	add	w2, w2, w7
 650:	cmp	x6, #0x0
 654:	and	w8, w1, w2
 658:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 65c:	csel	x5, x5, x6, eq  // eq = none
 660:	add	w7, w7, #0x1
 664:	lsl	x3, x8, #4
 668:	and	w2, w1, w2
 66c:	add	x8, x4, x3
 670:	ldr	w3, [x4, x3]
 674:	cmp	w0, w3
 678:	b.eq	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.none
 67c:	mov	x6, x5
 680:	mov	x5, x8
 684:	b	558 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x558>
 688:	add	w2, w2, w7
 68c:	cmp	x6, #0x0
 690:	and	w8, w1, w2
 694:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 698:	csel	x5, x5, x6, eq  // eq = none
 69c:	add	w7, w7, #0x1
 6a0:	lsl	x3, x8, #4
 6a4:	and	w2, w1, w2
 6a8:	add	x8, x4, x3
 6ac:	ldr	w3, [x4, x3]
 6b0:	cmp	w0, w3
 6b4:	b.eq	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.none
 6b8:	mov	x6, x5
 6bc:	mov	x5, x8
 6c0:	b	408 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x408>
 6c4:	mov	x2, x3
 6c8:	mov	x3, x5
 6cc:	b	1ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1ac>
 6d0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6d4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6d8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6dc:	add	x3, x3, #0x0
 6e0:	add	x1, x1, #0x0
 6e4:	add	x0, x0, #0x0
 6e8:	mov	w2, #0x250                 	// #592
 6ec:	stp	x27, x28, [sp, #80]
 6f0:	bl	0 <__assert_fail>
 6f4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6f8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6fc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 700:	add	x3, x3, #0x0
 704:	add	x1, x1, #0x0
 708:	add	x0, x0, #0x0
 70c:	mov	w2, #0x68                  	// #104
 710:	bl	0 <__assert_fail>
 714:	add	w3, w3, w7
 718:	cmp	x6, #0x0
 71c:	and	w8, w1, w3
 720:	ccmn	w4, #0x2, #0x0, eq  // eq = none
 724:	csel	x6, x6, x2, ne  // ne = any
 728:	add	w7, w7, #0x1
 72c:	lsl	x4, x8, #4
 730:	and	w3, w1, w3
 734:	add	x2, x0, x8, lsl #4
 738:	ldr	w4, [x0, x4]
 73c:	cmp	w22, w4
 740:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 744:	b	4b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4b8>
 748:	add	w23, w23, w6
 74c:	cmp	x4, #0x0
 750:	and	w7, w1, w23
 754:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 758:	csel	x4, x4, x2, ne  // ne = any
 75c:	add	w6, w6, #0x1
 760:	lsl	x3, x7, #4
 764:	and	w23, w1, w23
 768:	add	x2, x0, x7, lsl #4
 76c:	ldr	w3, [x0, x3]
 770:	cmp	w22, w3
 774:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 778:	b	518 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x518>
 77c:	stp	x27, x28, [sp, #80]
 780:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 784:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 788:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 78c:	add	x3, x3, #0x0
 790:	add	x1, x1, #0x0
 794:	add	x0, x0, #0x0
 798:	mov	w2, #0x15b                 	// #347
 79c:	bl	0 <__assert_fail>
 7a0:	mov	x0, #0x0                   	// #0
 7a4:	str	wzr, [x0]
 7a8:	brk	#0x3e8

Disassembly of section .text._ZN4llvm3mca10LSUnitBase8getGroupEj:

0000000000000000 <_ZN4llvm3mca10LSUnitBase8getGroupEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	w1, 2c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x2c>
   c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  10:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  14:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
  18:	add	x3, x3, #0x0
  1c:	add	x1, x1, #0x0
  20:	add	x0, x0, #0x0
  24:	mov	w2, #0x11c                 	// #284
  28:	bl	0 <__assert_fail>
  2c:	ldr	w2, [x0, #56]
  30:	ldr	x3, [x0, #40]
  34:	cbz	w2, c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc>
  38:	cmn	w1, #0x3
  3c:	b.hi	11c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x11c>  // b.pmore
  40:	mov	w0, #0x25                  	// #37
  44:	sub	w4, w2, #0x1
  48:	mul	w0, w1, w0
  4c:	and	w5, w0, w4
  50:	and	w0, w0, w4
  54:	lsl	x5, x5, #4
  58:	add	x7, x3, x5
  5c:	ldr	w5, [x3, x5]
  60:	cmp	w5, w1
  64:	b.ne	bc <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xbc>  // b.any
  68:	ubfiz	x2, x2, #4, #32
  6c:	add	x6, x3, x2
  70:	cmp	x6, x7
  74:	b.eq	c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc>  // b.none
  78:	mov	w0, #0x25                  	// #37
  7c:	mul	w0, w1, w0
  80:	and	w2, w0, w4
  84:	and	w0, w0, w4
  88:	lsl	x2, x2, #4
  8c:	add	x5, x3, x2
  90:	ldr	w2, [x3, x2]
  94:	cmp	w2, w1
  98:	b.ne	a8 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xa8>  // b.any
  9c:	ldp	x29, x30, [sp], #16
  a0:	ldr	x0, [x5, #8]
  a4:	ret
  a8:	mov	w5, #0x1                   	// #1
  ac:	cmn	w2, #0x1
  b0:	b.ne	f0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xf0>  // b.any
  b4:	mov	x5, x6
  b8:	b	9c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x9c>
  bc:	mov	w6, #0x1                   	// #1
  c0:	cmn	w5, #0x1
  c4:	b.eq	c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc>  // b.none
  c8:	add	w0, w0, w6
  cc:	add	w6, w6, #0x1
  d0:	and	w5, w4, w0
  d4:	and	w0, w4, w0
  d8:	lsl	x5, x5, #4
  dc:	add	x7, x3, x5
  e0:	ldr	w5, [x3, x5]
  e4:	cmp	w5, w1
  e8:	b.eq	68 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x68>  // b.none
  ec:	b	c0 <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xc0>
  f0:	add	w0, w5, w0
  f4:	add	w7, w5, #0x1
  f8:	and	w2, w4, w0
  fc:	and	w0, w4, w0
 100:	lsl	x2, x2, #4
 104:	add	x5, x3, x2
 108:	ldr	w2, [x3, x2]
 10c:	cmp	w2, w1
 110:	b.eq	9c <_ZN4llvm3mca10LSUnitBase8getGroupEj+0x9c>  // b.none
 114:	mov	w5, w7
 118:	b	ac <_ZN4llvm3mca10LSUnitBase8getGroupEj+0xac>
 11c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 120:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 124:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase8getGroupEj>
 128:	add	x3, x3, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x250                 	// #592
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca6LSUnitD2Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca6LSUnitD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	2290 <_ZN4llvm3mca10LSUnitBaseD1Ev>

Disassembly of section .text._ZN4llvm3mca6LSUnitD0Ev:

0000000000000000 <_ZN4llvm3mca6LSUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca6LSUnitD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	2290 <_ZN4llvm3mca10LSUnitBaseD1Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x50                  	// #80
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

RegisterFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>:
       0:	sub	x12, x2, #0x1
       4:	and	x15, x2, #0x1
       8:	add	x12, x12, x12, lsr #63
       c:	cmp	x1, x12, asr #1
      10:	asr	x12, x12, #1
      14:	b.ge	d8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xd8>  // b.tcont
      18:	mov	x5, x1
      1c:	nop
      20:	add	x8, x5, #0x1
      24:	lsl	x10, x5, #4
      28:	add	x14, x0, x10
      2c:	lsl	x9, x8, #5
      30:	lsl	x5, x8, #1
      34:	add	x6, x0, x9
      38:	ldur	x11, [x6, #-8]
      3c:	ldr	x8, [x6, #8]
      40:	cmp	x8, x11
      44:	b.cs	128 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x128>  // b.hs, b.nlast
      48:	sub	x5, x5, #0x1
      4c:	cmp	x5, x12
      50:	lsl	x7, x5, #4
      54:	add	x6, x0, x7
      58:	ldr	w8, [x0, x7]
      5c:	ldr	x7, [x6, #8]
      60:	str	w8, [x0, x10]
      64:	str	x7, [x14, #8]
      68:	b.lt	20 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x20>  // b.tstop
      6c:	cbz	x15, e8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xe8>
      70:	sub	x7, x5, #0x1
      74:	cmp	x5, x1
      78:	add	x7, x7, x7, lsr #63
      7c:	asr	x7, x7, #1
      80:	b.gt	a0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xa0>
      84:	b	cc <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xcc>
      88:	ldr	w10, [x0, x10]
      8c:	cmp	x1, x7
      90:	str	w10, [x0, x9]
      94:	mov	x7, x2
      98:	str	x8, [x6, #8]
      9c:	b.ge	144 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x144>  // b.tcont
      a0:	lsl	x10, x7, #4
      a4:	sub	x2, x7, #0x1
      a8:	add	x11, x0, x10
      ac:	lsl	x9, x5, #4
      b0:	add	x2, x2, x2, lsr #63
      b4:	add	x6, x0, x9
      b8:	mov	x5, x7
      bc:	ldr	x8, [x11, #8]
      c0:	asr	x2, x2, #1
      c4:	cmp	x8, x4
      c8:	b.cc	88 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x88>  // b.lo, b.ul, b.last
      cc:	str	w3, [x6]
      d0:	str	x4, [x6, #8]
      d4:	ret
      d8:	add	x6, x0, x1, lsl #4
      dc:	cbnz	x15, cc <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xcc>
      e0:	mov	x5, x1
      e4:	nop
      e8:	sub	x2, x2, #0x2
      ec:	add	x2, x2, x2, lsr #63
      f0:	cmp	x5, x2, asr #1
      f4:	b.ne	70 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x70>  // b.any
      f8:	add	x5, x5, #0x1
      fc:	lsl	x2, x5, #5
     100:	lsl	x5, x5, #1
     104:	sub	x2, x2, #0x10
     108:	sub	x5, x5, #0x1
     10c:	add	x8, x0, x2
     110:	ldr	w7, [x0, x2]
     114:	ldr	x2, [x8, #8]
     118:	str	w7, [x6]
     11c:	str	x2, [x6, #8]
     120:	add	x6, x0, x5, lsl #4
     124:	b	70 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x70>
     128:	ldr	w9, [x0, x9]
     12c:	cmp	x5, x12
     130:	str	w9, [x0, x10]
     134:	str	x8, [x14, #8]
     138:	b.lt	20 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x20>  // b.tstop
     13c:	cbnz	x15, 70 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0x70>
     140:	b	e8 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0+0xe8>
     144:	mov	x6, x11
     148:	str	w3, [x6]
     14c:	str	x4, [x6, #8]
     150:	ret
     154:	nop

0000000000000158 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>:
     158:	stp	x29, x30, [sp, #-64]!
     15c:	mov	x29, sp
     160:	stp	x19, x20, [sp, #16]
     164:	mov	x19, x0
     168:	sub	x0, x1, x0
     16c:	cmp	x0, #0x100
     170:	b.le	344 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1ec>
     174:	stp	x21, x22, [sp, #32]
     178:	add	x22, x19, #0x10
     17c:	stp	x23, x24, [sp, #48]
     180:	mov	x23, x2
     184:	mov	w24, w3
     188:	cbz	x2, 2bc <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x164>
     18c:	asr	x0, x0, #5
     190:	ldr	w8, [x19]
     194:	ldr	x5, [x19, #24]
     198:	lsl	x0, x0, #4
     19c:	add	x7, x19, x0
     1a0:	sub	x23, x23, #0x1
     1a4:	ldur	x6, [x1, #-8]
     1a8:	ldr	x2, [x7, #8]
     1ac:	ldr	x4, [x19, #8]
     1b0:	cmp	x5, x2
     1b4:	b.cs	248 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xf0>  // b.hs, b.nlast
     1b8:	cmp	x2, x6
     1bc:	b.cc	29c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x144>  // b.lo, b.ul, b.last
     1c0:	cmp	x5, x6
     1c4:	b.cc	258 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x100>  // b.lo, b.ul, b.last
     1c8:	str	x5, [x19, #8]
     1cc:	str	x4, [x19, #24]
     1d0:	ldr	w0, [x19, #16]
     1d4:	ldur	x4, [x1, #-8]
     1d8:	str	w0, [x19]
     1dc:	str	w8, [x19, #16]
     1e0:	mov	x20, x22
     1e4:	mov	x0, x1
     1e8:	ldr	x2, [x20, #8]
     1ec:	mov	x21, x20
     1f0:	cmp	x2, x5
     1f4:	b.cc	240 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xe8>  // b.lo, b.ul, b.last
     1f8:	sub	x0, x0, #0x10
     1fc:	cmp	x4, x5
     200:	b.ls	218 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xc0>  // b.plast
     204:	nop
     208:	ldur	x4, [x0, #-8]
     20c:	sub	x0, x0, #0x10
     210:	cmp	x4, x5
     214:	b.hi	208 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0xb0>  // b.pmore
     218:	cmp	x0, x20
     21c:	b.ls	274 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x11c>  // b.plast
     220:	ldr	w5, [x0]
     224:	str	x4, [x20, #8]
     228:	ldr	w4, [x20]
     22c:	str	w5, [x20]
     230:	str	x2, [x0, #8]
     234:	str	w4, [x0]
     238:	ldur	x4, [x0, #-8]
     23c:	ldr	x5, [x19, #8]
     240:	add	x20, x20, #0x10
     244:	b	1e8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x90>
     248:	cmp	x5, x6
     24c:	b.cc	1c8 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x70>  // b.lo, b.ul, b.last
     250:	cmp	x2, x6
     254:	b.cs	29c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x144>  // b.hs, b.nlast
     258:	ldur	w0, [x1, #-16]
     25c:	str	w0, [x19]
     260:	str	x6, [x19, #8]
     264:	stur	x4, [x1, #-8]
     268:	stur	w8, [x1, #-16]
     26c:	ldr	x5, [x19, #8]
     270:	b	1e0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x88>
     274:	mov	x0, x20
     278:	mov	w3, w24
     27c:	mov	x2, x23
     280:	bl	158 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>
     284:	sub	x0, x20, x19
     288:	cmp	x0, #0x100
     28c:	b.le	33c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1e4>
     290:	cbz	x23, 2c0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x168>
     294:	mov	x1, x20
     298:	b	18c <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x34>
     29c:	ldr	w3, [x19, x0]
     2a0:	str	w3, [x19]
     2a4:	str	x2, [x19, #8]
     2a8:	str	w8, [x19, x0]
     2ac:	str	x4, [x7, #8]
     2b0:	ldur	x4, [x1, #-8]
     2b4:	ldr	x5, [x19, #8]
     2b8:	b	1e0 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x88>
     2bc:	mov	x21, x1
     2c0:	asr	x13, x0, #4
     2c4:	mov	x0, x19
     2c8:	sub	x1, x13, #0x2
     2cc:	mov	x2, x13
     2d0:	asr	x1, x1, #1
     2d4:	lsl	x3, x1, #4
     2d8:	add	x4, x19, x3
     2dc:	mov	x18, x4
     2e0:	ldr	w3, [x19, x3]
     2e4:	ldr	x4, [x4, #8]
     2e8:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     2ec:	ldur	x4, [x18, #-8]
     2f0:	sub	x1, x1, #0x1
     2f4:	ldr	w3, [x18, #-16]!
     2f8:	mov	x2, x13
     2fc:	mov	x0, x19
     300:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     304:	cbnz	x1, 2ec <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x194>
     308:	ldr	w3, [x21, #-16]!
     30c:	mov	x0, x19
     310:	ldr	w5, [x19]
     314:	mov	x1, #0x0                   	// #0
     318:	sub	x13, x21, x19
     31c:	ldr	x2, [x19, #8]
     320:	str	w5, [x21]
     324:	ldr	x4, [x21, #8]
     328:	str	x2, [x21, #8]
     32c:	asr	x2, x13, #4
     330:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     334:	cmp	x13, #0x10
     338:	b.gt	308 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_+0x1b0>
     33c:	ldp	x21, x22, [sp, #32]
     340:	ldp	x23, x24, [sp, #48]
     344:	ldp	x19, x20, [sp, #16]
     348:	ldp	x29, x30, [sp], #64
     34c:	ret

0000000000000350 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>:
     350:	cmp	x0, x1
     354:	b.eq	3c4 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x74>  // b.none
     358:	add	x7, x0, #0x10
     35c:	nop
     360:	cmp	x1, x7
     364:	b.eq	3c4 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x74>  // b.none
     368:	ldr	x6, [x7, #8]
     36c:	mov	x3, x7
     370:	ldr	x2, [x0, #8]
     374:	ldr	w8, [x7], #16
     378:	cmp	x6, x2
     37c:	b.cs	3c8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x78>  // b.hs, b.nlast
     380:	sub	x3, x3, x0
     384:	mov	x2, x7
     388:	cmp	x3, #0x0
     38c:	asr	x3, x3, #4
     390:	b.le	3b4 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x64>
     394:	nop
     398:	ldur	w5, [x2, #-32]
     39c:	sub	x2, x2, #0x10
     3a0:	ldur	x4, [x2, #-8]
     3a4:	str	w5, [x2]
     3a8:	str	x4, [x2, #8]
     3ac:	subs	x3, x3, #0x1
     3b0:	b.ne	398 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x48>  // b.any
     3b4:	str	w8, [x0]
     3b8:	cmp	x1, x7
     3bc:	str	x6, [x0, #8]
     3c0:	b.ne	368 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x18>  // b.any
     3c4:	ret
     3c8:	ldur	x4, [x7, #-24]
     3cc:	sub	x2, x7, #0x20
     3d0:	cmp	x6, x4
     3d4:	b.cs	3f8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0xa8>  // b.hs, b.nlast
     3d8:	ldr	w5, [x2]
     3dc:	mov	x3, x2
     3e0:	sub	x2, x2, #0x10
     3e4:	str	w5, [x2, #32]
     3e8:	str	x4, [x2, #40]
     3ec:	ldr	x4, [x2, #8]
     3f0:	cmp	x6, x4
     3f4:	b.cc	3d8 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x88>  // b.lo, b.ul, b.last
     3f8:	str	w8, [x3]
     3fc:	str	x6, [x3, #8]
     400:	b	360 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0+0x10>
     404:	nop

0000000000000408 <_ZN4llvm3mca12RegisterFile10cycleStartEv>:
     408:	ldr	x1, [x0, #16]
     40c:	mov	w2, #0x14                  	// #20
     410:	ldr	w0, [x0, #24]
     414:	umaddl	x0, w0, w2, x1
     418:	cmp	x1, x0
     41c:	b.eq	430 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x28>  // b.none
     420:	str	wzr, [x1, #12]
     424:	add	x1, x1, #0x14
     428:	cmp	x1, x0
     42c:	b.ne	420 <_ZN4llvm3mca12RegisterFile10cycleStartEv+0x18>  // b.any
     430:	ret
     434:	nop

0000000000000438 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>:
     438:	stp	x29, x30, [sp, #-112]!
     43c:	mov	x29, sp
     440:	stp	x21, x22, [sp, #32]
     444:	mov	x21, x1
     448:	stp	x25, x26, [sp, #64]
     44c:	ldp	w25, w1, [x0, #24]
     450:	stp	x19, x20, [sp, #16]
     454:	mov	x20, x0
     458:	stp	x23, x24, [sp, #48]
     45c:	mov	x19, x3
     460:	mov	x24, x2
     464:	mov	w0, w25
     468:	cmp	w25, w1
     46c:	b.cs	7a4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x36c>  // b.hs, b.nlast
     470:	mov	w1, #0x14                  	// #20
     474:	ldrh	w5, [x21, #8]
     478:	ldr	x2, [x20, #16]
     47c:	umull	x0, w0, w1
     480:	ldrh	w4, [x21, #14]
     484:	add	x1, x2, x0
     488:	ldrb	w3, [x21, #16]
     48c:	str	w5, [x2, x0]
     490:	stp	wzr, w4, [x1, #4]
     494:	str	wzr, [x1, #12]
     498:	strb	w3, [x1, #16]
     49c:	ldp	w0, w2, [x20, #24]
     4a0:	mov	w1, w0
     4a4:	add	x1, x1, #0x1
     4a8:	cmp	x1, x2
     4ac:	b.hi	7e4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3ac>  // b.pmore
     4b0:	add	w0, w0, #0x1
     4b4:	str	w0, [x20, #24]
     4b8:	cbz	w0, 7c0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x388>
     4bc:	cbz	x19, 654 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x21c>
     4c0:	add	x19, x19, x19, lsl #1
     4c4:	add	x19, x24, x19, lsl #2
     4c8:	cmp	x19, x24
     4cc:	b.eq	654 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x21c>  // b.none
     4d0:	ldr	x10, [x20, #8]
     4d4:	stp	x27, x28, [sp, #80]
     4d8:	ldr	w1, [x10, #32]
     4dc:	ldr	w0, [x24]
     4e0:	cmp	w0, w1
     4e4:	b.cs	848 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x410>  // b.hs, b.nlast
     4e8:	ldr	x1, [x10, #24]
     4ec:	ubfiz	x0, x0, #5, #32
     4f0:	add	x2, x1, x0
     4f4:	ldr	x23, [x1, x0]
     4f8:	ldrh	w26, [x2, #20]
     4fc:	add	x26, x23, x26, lsl #1
     500:	cmp	x23, x26
     504:	b.eq	644 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x20c>  // b.none
     508:	ldrh	w22, [x23]
     50c:	ldr	x21, [x20, #112]
     510:	ubfiz	x0, x22, #5, #16
     514:	add	x21, x21, x0
     518:	ldr	w0, [x21, #16]
     51c:	cmp	w0, #0x0
     520:	ccmp	w0, w25, #0x4, ne  // ne = any
     524:	b.ne	66c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x234>  // b.any
     528:	ldr	w0, [x24, #4]
     52c:	ldr	x11, [x10]
     530:	ldr	x8, [x10, #48]
     534:	stp	w25, w0, [x21, #16]
     538:	ldrb	w0, [x24, #8]
     53c:	strh	w22, [x21, #24]
     540:	strb	w0, [x21, #28]
     544:	ldr	w0, [x10, #8]
     548:	cmp	w0, w22
     54c:	b.ls	828 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3f0>  // b.plast
     550:	mov	w9, #0x18                  	// #24
     554:	umaddl	x0, w22, w9, x11
     558:	ldr	w0, [x0, #4]
     55c:	lsl	x0, x0, #1
     560:	adds	x1, x8, x0
     564:	b.eq	808 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3d0>  // b.none
     568:	ldrh	w0, [x8, x0]
     56c:	add	x1, x1, #0x2
     570:	cmp	w0, #0x0
     574:	add	w0, w22, w0
     578:	csel	x1, x1, xzr, ne  // ne = any
     57c:	and	w3, w0, #0xffff
     580:	mov	x7, x1
     584:	nop
     588:	cbz	x7, 638 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x200>
     58c:	ldr	x4, [x20, #112]
     590:	ubfiz	x0, x3, #5, #16
     594:	add	x4, x4, x0
     598:	ldr	w0, [x4, #16]
     59c:	cbnz	w0, 5b4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x17c>
     5a0:	ldrh	w6, [x4, #24]
     5a4:	cbnz	w6, 5d0 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x198>
     5a8:	ldr	d0, [x21, #16]
     5ac:	strh	w22, [x4, #24]
     5b0:	str	d0, [x4, #16]
     5b4:	ldrh	w0, [x7], #2
     5b8:	mov	x1, #0x0                   	// #0
     5bc:	add	w3, w3, w0
     5c0:	and	w3, w3, #0xffff
     5c4:	cbnz	w0, 588 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x150>
     5c8:	mov	x7, x1
     5cc:	b	588 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x150>
     5d0:	ldr	w0, [x10, #8]
     5d4:	cmp	w3, w0
     5d8:	b.cs	828 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3f0>  // b.hs, b.nlast
     5dc:	umaddl	x0, w3, w9, x11
     5e0:	ldr	w0, [x0, #8]
     5e4:	lsl	x0, x0, #1
     5e8:	adds	x5, x8, x0
     5ec:	b.eq	808 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3d0>  // b.none
     5f0:	ldrh	w0, [x8, x0]
     5f4:	add	x5, x5, #0x2
     5f8:	cmp	w0, #0x0
     5fc:	add	w0, w3, w0
     600:	csel	x5, x5, xzr, ne  // ne = any
     604:	and	w0, w0, #0xffff
     608:	mov	x1, x5
     60c:	nop
     610:	cbz	x1, 5b4 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x17c>
     614:	cmp	w6, w0
     618:	b.eq	5a8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x170>  // b.none
     61c:	ldrh	w2, [x1], #2
     620:	mov	x5, #0x0                   	// #0
     624:	add	w0, w0, w2
     628:	and	w0, w0, #0xffff
     62c:	cbnz	w2, 610 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1d8>
     630:	mov	x1, x5
     634:	b	610 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x1d8>
     638:	add	x23, x23, #0x2
     63c:	cmp	x26, x23
     640:	b.ne	508 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xd0>  // b.any
     644:	add	x24, x24, #0xc
     648:	cmp	x19, x24
     64c:	b.ne	4d8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xa0>  // b.any
     650:	ldp	x27, x28, [sp, #80]
     654:	ldp	x19, x20, [sp, #16]
     658:	ldp	x21, x22, [sp, #32]
     65c:	ldp	x23, x24, [sp, #48]
     660:	ldp	x25, x26, [sp, #64]
     664:	ldp	x29, x30, [sp], #112
     668:	ret
     66c:	bl	0 <_ZN4llvm4errsEv>
     670:	mov	x27, x0
     674:	ldp	x1, x2, [x0, #16]
     678:	sub	x1, x1, x2
     67c:	cmp	x1, #0x11
     680:	b.ls	78c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x354>  // b.plast
     684:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     688:	add	x3, x3, #0x0
     68c:	ldp	x0, x1, [x3]
     690:	stp	x0, x1, [x2]
     694:	ldrh	w0, [x3, #16]
     698:	strh	w0, [x2, #16]
     69c:	ldr	x0, [x27, #24]
     6a0:	add	x0, x0, #0x12
     6a4:	str	x0, [x27, #24]
     6a8:	ldr	x0, [x20, #8]
     6ac:	ldr	w1, [x0, #8]
     6b0:	ldr	x2, [x0]
     6b4:	cmp	w1, w22
     6b8:	ldr	x0, [x0, #64]
     6bc:	b.ls	828 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x3f0>  // b.plast
     6c0:	mov	w1, #0x18                  	// #24
     6c4:	umull	x1, w22, w1
     6c8:	ldr	w28, [x2, x1]
     6cc:	adds	x28, x0, x28
     6d0:	b.eq	760 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x328>  // b.none
     6d4:	mov	x0, x28
     6d8:	bl	0 <strlen>
     6dc:	mov	x2, x0
     6e0:	ldp	x3, x0, [x27, #16]
     6e4:	sub	x3, x3, x0
     6e8:	cmp	x2, x3
     6ec:	b.hi	750 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x318>  // b.pmore
     6f0:	cbz	x2, 714 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2dc>
     6f4:	mov	x1, x28
     6f8:	str	x2, [sp, #104]
     6fc:	bl	0 <memcpy>
     700:	ldp	x3, x0, [x27, #16]
     704:	ldr	x2, [sp, #104]
     708:	add	x0, x0, x2
     70c:	str	x0, [x27, #24]
     710:	sub	x3, x3, x0
     714:	cmp	x3, #0x23
     718:	b.ls	770 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x338>  // b.plast
     71c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     720:	add	x1, x1, #0x0
     724:	ldp	x2, x3, [x1]
     728:	stp	x2, x3, [x0]
     72c:	ldr	w4, [x1, #32]
     730:	ldp	x2, x3, [x1, #16]
     734:	stp	x2, x3, [x0, #16]
     738:	str	w4, [x0, #32]
     73c:	ldr	x0, [x27, #24]
     740:	ldr	x10, [x20, #8]
     744:	add	x0, x0, #0x24
     748:	str	x0, [x27, #24]
     74c:	b	528 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xf0>
     750:	mov	x0, x27
     754:	mov	x1, x28
     758:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     75c:	mov	x27, x0
     760:	ldp	x3, x0, [x27, #16]
     764:	sub	x3, x3, x0
     768:	cmp	x3, #0x23
     76c:	b.hi	71c <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x2e4>  // b.pmore
     770:	mov	x0, x27
     774:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     778:	mov	x2, #0x24                  	// #36
     77c:	add	x1, x1, #0x0
     780:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     784:	ldr	x10, [x20, #8]
     788:	b	528 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0xf0>
     78c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     790:	mov	x2, #0x12                  	// #18
     794:	add	x1, x1, #0x0
     798:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     79c:	mov	x27, x0
     7a0:	b	6a8 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x270>
     7a4:	add	x0, x20, #0x10
     7a8:	add	x1, x20, #0x20
     7ac:	mov	x3, #0x14                  	// #20
     7b0:	mov	x2, #0x0                   	// #0
     7b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     7b8:	ldr	w0, [x20, #24]
     7bc:	b	470 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE+0x38>
     7c0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7c4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7c8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7cc:	add	x3, x3, #0x0
     7d0:	add	x1, x1, #0x0
     7d4:	add	x0, x0, #0x0
     7d8:	mov	w2, #0xa7                  	// #167
     7dc:	stp	x27, x28, [sp, #80]
     7e0:	bl	0 <__assert_fail>
     7e4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7e8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7ec:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     7f0:	add	x3, x3, #0x0
     7f4:	add	x1, x1, #0x0
     7f8:	add	x0, x0, #0x0
     7fc:	mov	w2, #0x43                  	// #67
     800:	stp	x27, x28, [sp, #80]
     804:	bl	0 <__assert_fail>
     808:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     80c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     810:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     814:	add	x3, x3, #0x0
     818:	add	x1, x1, #0x0
     81c:	add	x0, x0, #0x0
     820:	mov	w2, #0xd1                  	// #209
     824:	bl	0 <__assert_fail>
     828:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     82c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     830:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     834:	add	x3, x3, #0x0
     838:	add	x1, x1, #0x0
     83c:	add	x0, x0, #0x0
     840:	mov	w2, #0x1b8                 	// #440
     844:	bl	0 <__assert_fail>
     848:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     84c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     850:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     854:	add	x3, x3, #0x0
     858:	add	x1, x1, #0x0
     85c:	add	x0, x0, #0x0
     860:	mov	w2, #0x219                 	// #537
     864:	bl	0 <__assert_fail>

0000000000000868 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>:
     868:	stp	x29, x30, [sp, #-64]!
     86c:	mov	x29, sp
     870:	stp	x21, x22, [sp, #32]
     874:	mov	x21, x0
     878:	ldr	w0, [x0, #24]
     87c:	stp	x19, x20, [sp, #16]
     880:	mov	x19, x1
     884:	ldr	w1, [x21, #28]
     888:	mov	w20, w2
     88c:	cmp	w0, w1
     890:	b.cs	950 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xe8>  // b.hs, b.nlast
     894:	mov	w1, #0x14                  	// #20
     898:	ldr	x2, [x21, #16]
     89c:	umull	x0, w0, w1
     8a0:	add	x1, x2, x0
     8a4:	str	w20, [x2, x0]
     8a8:	stur	xzr, [x1, #4]
     8ac:	str	wzr, [x1, #12]
     8b0:	strb	wzr, [x1, #16]
     8b4:	ldp	w0, w2, [x21, #24]
     8b8:	mov	w1, w0
     8bc:	add	x1, x1, #0x1
     8c0:	cmp	x1, x2
     8c4:	b.hi	9b0 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x148>  // b.pmore
     8c8:	add	w0, w0, #0x1
     8cc:	str	w0, [x21, #24]
     8d0:	cbz	w0, 98c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x124>
     8d4:	ldr	x20, [x19, #64]
     8d8:	cbz	x20, 940 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xd8>
     8dc:	ldr	w22, [x20, #16]
     8e0:	cmp	w22, #0x1
     8e4:	b.ls	940 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xd8>  // b.plast
     8e8:	sub	w22, w22, #0x2
     8ec:	mov	w1, #0x18                  	// #24
     8f0:	mov	x0, #0x30                  	// #48
     8f4:	mov	x19, #0x18                  	// #24
     8f8:	str	x23, [sp, #48]
     8fc:	mov	w23, #0xc                   	// #12
     900:	umaddl	x22, w22, w1, x0
     904:	nop
     908:	ldr	x1, [x20, #8]
     90c:	add	x1, x1, x19
     910:	ldrh	w2, [x1, #8]
     914:	cbz	w2, 96c <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x104>
     918:	ldrh	w4, [x1, #12]
     91c:	add	x19, x19, #0x18
     920:	ldr	x2, [x20, #24]
     924:	mov	x0, x21
     928:	ldrh	w3, [x1, #10]
     92c:	umaddl	x2, w4, w23, x2
     930:	bl	438 <_ZN4llvm3mca12RegisterFile15addRegisterFileERKNS_18MCRegisterFileDescENS_8ArrayRefINS_19MCRegisterCostEntryEEE>
     934:	cmp	x22, x19
     938:	b.ne	908 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0xa0>  // b.any
     93c:	ldr	x23, [sp, #48]
     940:	ldp	x19, x20, [sp, #16]
     944:	ldp	x21, x22, [sp, #32]
     948:	ldp	x29, x30, [sp], #64
     94c:	ret
     950:	add	x0, x21, #0x10
     954:	add	x1, x21, #0x20
     958:	mov	x3, #0x14                  	// #20
     95c:	mov	x2, #0x0                   	// #0
     960:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     964:	ldr	w0, [x21, #24]
     968:	b	894 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj+0x2c>
     96c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     970:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     974:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     978:	add	x3, x3, #0x0
     97c:	add	x1, x1, #0x0
     980:	add	x0, x0, #0x0
     984:	mov	w2, #0x32                  	// #50
     988:	bl	0 <__assert_fail>
     98c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     990:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     994:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     998:	add	x3, x3, #0x0
     99c:	add	x1, x1, #0x0
     9a0:	add	x0, x0, #0x0
     9a4:	mov	w2, #0xa7                  	// #167
     9a8:	str	x23, [sp, #48]
     9ac:	bl	0 <__assert_fail>
     9b0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9b4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9b8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9bc:	add	x3, x3, #0x0
     9c0:	add	x1, x1, #0x0
     9c4:	add	x0, x0, #0x0
     9c8:	mov	w2, #0x43                  	// #67
     9cc:	str	x23, [sp, #48]
     9d0:	bl	0 <__assert_fail>
     9d4:	nop

00000000000009d8 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj>:
     9d8:	stp	x29, x30, [sp, #-80]!
     9dc:	adrp	x4, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     9e0:	mov	x29, sp
     9e4:	stp	x19, x20, [sp, #16]
     9e8:	mov	x19, x0
     9ec:	ldr	x4, [x4]
     9f0:	stp	x21, x22, [sp, #32]
     9f4:	mov	x21, x2
     9f8:	mov	x22, x0
     9fc:	mov	x0, #0x400000000           	// #17179869184
     a00:	stp	x23, x24, [sp, #48]
     a04:	add	x2, x19, #0x20
     a08:	add	x4, x4, #0x10
     a0c:	str	x25, [sp, #64]
     a10:	stp	x2, x0, [x19, #16]
     a14:	adrp	x0, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
     a18:	stp	x4, x21, [x19]
     a1c:	ldr	w2, [x21, #8]
     a20:	ldr	x0, [x0]
     a24:	stp	xzr, xzr, [x22, #112]!
     a28:	str	xzr, [x22, #16]
     a2c:	ldr	w25, [x0]
     a30:	cbz	w2, ad8 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x100>
     a34:	mov	w4, w2
     a38:	mov	x23, x1
     a3c:	mov	w24, w3
     a40:	lsl	x20, x4, #5
     a44:	mov	x0, x20
     a48:	bl	0 <_Znwm>
     a4c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     a50:	str	x0, [x19, #112]
     a54:	add	x4, x0, x20
     a58:	str	x4, [x22, #16]
     a5c:	ldr	d0, [x1]
     a60:	str	w25, [x0]
     a64:	add	x0, x0, #0x20
     a68:	stur	xzr, [x0, #-24]
     a6c:	sturh	wzr, [x0, #-8]
     a70:	sturh	wzr, [x0, #-6]
     a74:	sturb	wzr, [x0, #-4]
     a78:	stur	d0, [x0, #-16]
     a7c:	cmp	x4, x0
     a80:	b.ne	a60 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x88>  // b.any
     a84:	add	x0, x19, #0x88
     a88:	ldr	w1, [x21, #8]
     a8c:	str	x4, [x19, #120]
     a90:	str	w1, [x0, #8]
     a94:	cbz	w1, ae0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0x108>
     a98:	cmp	w1, #0x40
     a9c:	b.ls	ad0 <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xf8>  // b.plast
     aa0:	mov	w2, #0x0                   	// #0
     aa4:	mov	x1, #0x0                   	// #0
     aa8:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
     aac:	mov	w2, w24
     ab0:	mov	x1, x23
     ab4:	mov	x0, x19
     ab8:	ldp	x19, x20, [sp, #16]
     abc:	ldp	x21, x22, [sp, #32]
     ac0:	ldp	x23, x24, [sp, #48]
     ac4:	ldr	x25, [sp, #64]
     ac8:	ldp	x29, x30, [sp], #80
     acc:	b	868 <_ZN4llvm3mca12RegisterFile10initializeERKNS_12MCSchedModelEj>
     ad0:	str	xzr, [x19, #136]
     ad4:	b	aac <_ZN4llvm3mca12RegisterFileC1ERKNS_12MCSchedModelERKNS_14MCRegisterInfoEj+0xd4>
     ad8:	str	xzr, [x19, #120]
     adc:	str	wzr, [x19, #144]
     ae0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ae4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ae8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     aec:	add	x3, x3, #0x0
     af0:	add	x1, x1, #0x0
     af4:	add	x0, x0, #0x0
     af8:	mov	w2, #0x117                 	// #279
     afc:	bl	0 <__assert_fail>

0000000000000b00 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     b00:	stp	x29, x30, [sp, #-16]!
     b04:	mov	x29, sp
     b08:	ldp	w4, w1, [x1]
     b0c:	ldr	w5, [x0, #24]
     b10:	cbz	w4, b74 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x74>
     b14:	cmp	w4, w5
     b18:	mov	w5, w4
     b1c:	b.cs	ba0 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>  // b.hs, b.nlast
     b20:	ldr	x6, [x0, #16]
     b24:	mov	w7, #0x14                  	// #20
     b28:	cmp	x3, x5
     b2c:	umaddl	x4, w4, w7, x6
     b30:	ldr	w3, [x4, #4]
     b34:	add	w3, w3, w1
     b38:	str	w3, [x4, #4]
     b3c:	b.ls	bc0 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>  // b.plast
     b40:	ldr	w3, [x2, x5, lsl #2]
     b44:	add	w3, w3, w1
     b48:	str	w3, [x2, x5, lsl #2]
     b4c:	ldr	w0, [x0, #24]
     b50:	cbz	w0, ba0 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     b54:	ldr	w0, [x6, #4]
     b58:	add	w0, w0, w1
     b5c:	str	w0, [x6, #4]
     b60:	ldr	w0, [x2]
     b64:	add	w1, w0, w1
     b68:	str	w1, [x2]
     b6c:	ldp	x29, x30, [sp], #16
     b70:	ret
     b74:	cbz	w5, ba0 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     b78:	ldr	x4, [x0, #16]
     b7c:	ldr	w0, [x4, #4]
     b80:	add	w0, w0, w1
     b84:	str	w0, [x4, #4]
     b88:	cbz	x3, bc0 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>
     b8c:	ldr	w0, [x2]
     b90:	add	w1, w0, w1
     b94:	str	w1, [x2]
     b98:	ldp	x29, x30, [sp], #16
     b9c:	ret
     ba0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ba4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ba8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bac:	add	x3, x3, #0x0
     bb0:	add	x1, x1, #0x0
     bb4:	add	x0, x0, #0x0
     bb8:	mov	w2, #0x95                  	// #149
     bbc:	bl	0 <__assert_fail>
     bc0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bc4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bc8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     bcc:	add	x3, x3, #0x0
     bd0:	add	x1, x1, #0x0
     bd4:	add	x0, x0, #0x0
     bd8:	mov	w2, #0x1ab                 	// #427
     bdc:	bl	0 <__assert_fail>

0000000000000be0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>:
     be0:	stp	x29, x30, [sp, #-16]!
     be4:	mov	x29, sp
     be8:	ldp	w4, w1, [x1]
     bec:	ldr	w5, [x0, #24]
     bf0:	cbz	w4, c54 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0x74>
     bf4:	cmp	w4, w5
     bf8:	mov	w5, w4
     bfc:	b.cs	c80 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>  // b.hs, b.nlast
     c00:	ldr	x6, [x0, #16]
     c04:	mov	w7, #0x14                  	// #20
     c08:	cmp	x3, x5
     c0c:	umaddl	x4, w4, w7, x6
     c10:	ldr	w3, [x4, #4]
     c14:	sub	w3, w3, w1
     c18:	str	w3, [x4, #4]
     c1c:	b.ls	ca0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>  // b.plast
     c20:	ldr	w3, [x2, x5, lsl #2]
     c24:	add	w3, w3, w1
     c28:	str	w3, [x2, x5, lsl #2]
     c2c:	ldr	w0, [x0, #24]
     c30:	cbz	w0, c80 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     c34:	ldr	w0, [x6, #4]
     c38:	sub	w0, w0, w1
     c3c:	str	w0, [x6, #4]
     c40:	ldr	w0, [x2]
     c44:	add	w1, w0, w1
     c48:	str	w1, [x2]
     c4c:	ldp	x29, x30, [sp], #16
     c50:	ret
     c54:	cbz	w5, c80 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xa0>
     c58:	ldr	x4, [x0, #16]
     c5c:	ldr	w0, [x4, #4]
     c60:	sub	w0, w0, w1
     c64:	str	w0, [x4, #4]
     c68:	cbz	x3, ca0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE+0xc0>
     c6c:	ldr	w0, [x2]
     c70:	add	w1, w0, w1
     c74:	str	w1, [x2]
     c78:	ldp	x29, x30, [sp], #16
     c7c:	ret
     c80:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c84:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c88:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     c8c:	add	x3, x3, #0x0
     c90:	add	x1, x1, #0x0
     c94:	add	x0, x0, #0x0
     c98:	mov	w2, #0x95                  	// #149
     c9c:	bl	0 <__assert_fail>
     ca0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ca4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     ca8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     cac:	add	x3, x3, #0x0
     cb0:	add	x1, x1, #0x0
     cb4:	add	x0, x0, #0x0
     cb8:	mov	w2, #0x1ab                 	// #427
     cbc:	bl	0 <__assert_fail>

0000000000000cc0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>:
     cc0:	stp	x29, x30, [sp, #-112]!
     cc4:	mov	x29, sp
     cc8:	stp	x21, x22, [sp, #32]
     ccc:	ldrh	w21, [x2, #12]
     cd0:	stp	x19, x20, [sp, #16]
     cd4:	stp	x23, x24, [sp, #48]
     cd8:	stp	x25, x26, [sp, #64]
     cdc:	stp	x27, x28, [sp, #80]
     ce0:	str	x4, [sp, #104]
     ce4:	cbz	w21, 14e0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x820>
     ce8:	mov	x24, x0
     cec:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     cf0:	mov	x23, x2
     cf4:	mov	x28, x1
     cf8:	ldr	x0, [x0]
     cfc:	mov	x22, x3
     d00:	mov	w25, w1
     d04:	ldrb	w0, [x0]
     d08:	cbnz	w0, f44 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x284>
     d0c:	and	x19, x21, #0xffff
     d10:	ldr	x1, [x24, #112]
     d14:	ldrb	w27, [x23, #21]
     d18:	ldrb	w26, [x23, #22]
     d1c:	add	x0, x1, x19, lsl #5
     d20:	cmp	w27, #0x0
     d24:	ccmp	w26, #0x0, #0x0, eq  // eq = none
     d28:	ldrb	w4, [x23, #20]
     d2c:	cset	w7, eq  // eq = none
     d30:	ldrh	w19, [x0, #24]
     d34:	ldr	w0, [x0, #16]
     d38:	str	w0, [x23, #16]
     d3c:	cmp	w19, #0x0
     d40:	ccmp	w19, w21, #0x4, ne  // ne = any
     d44:	b.ne	1334 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x674>  // b.any
     d48:	mov	w19, w21
     d4c:	cbnz	w4, d58 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x98>
     d50:	mov	w19, w21
     d54:	ldrh	w21, [x23, #12]
     d58:	ldr	w0, [x24, #144]
     d5c:	add	x20, x24, #0x88
     d60:	cmp	w21, w0
     d64:	cbz	w27, e54 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x194>
     d68:	b.cs	1440 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x780>  // b.hs, b.nlast
     d6c:	mov	x1, #0x1                   	// #1
     d70:	cmp	w0, #0x40
     d74:	lsl	x1, x1, x21
     d78:	ldr	x2, [x24, #136]
     d7c:	b.hi	1370 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6b0>  // b.pmore
     d80:	orr	x1, x2, x1
     d84:	str	x1, [x24, #136]
     d88:	ldr	x8, [x24, #8]
     d8c:	ldr	w1, [x8, #8]
     d90:	ldr	x9, [x8]
     d94:	cmp	w21, w1
     d98:	ldr	x2, [x8, #48]
     d9c:	b.cs	1480 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7c0>  // b.hs, b.nlast
     da0:	mov	w1, #0x18                  	// #24
     da4:	umaddl	x1, w21, w1, x9
     da8:	ldr	w1, [x1, #4]
     dac:	lsl	x1, x1, #1
     db0:	adds	x3, x2, x1
     db4:	b.eq	14a0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7e0>  // b.none
     db8:	ldrh	w1, [x2, x1]
     dbc:	add	x3, x3, #0x2
     dc0:	mov	x11, #0x1                   	// #1
     dc4:	cmp	w1, #0x0
     dc8:	add	w5, w21, w1
     dcc:	csel	x3, x3, xzr, ne  // ne = any
     dd0:	and	w5, w5, #0xffff
     dd4:	cmp	w0, #0x40
     dd8:	b.ls	e20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x160>  // b.plast
     ddc:	nop
     de0:	cbz	x3, 1040 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x380>
     de4:	cmp	w5, w0
     de8:	b.cs	1440 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x780>  // b.hs, b.nlast
     dec:	ldr	x10, [x20]
     df0:	ubfx	x12, x5, #6, #10
     df4:	ldrh	w6, [x3], #2
     df8:	lsl	x13, x11, x5
     dfc:	ldr	x1, [x10, x12, lsl #3]
     e00:	add	w5, w6, w5
     e04:	and	w5, w5, #0xffff
     e08:	orr	x1, x1, x13
     e0c:	str	x1, [x10, x12, lsl #3]
     e10:	cbnz	w6, de0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x120>
     e14:	mov	x3, #0x0                   	// #0
     e18:	cmp	w0, #0x40
     e1c:	b.hi	de0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x120>  // b.pmore
     e20:	cbz	x3, 1040 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x380>
     e24:	cmp	w5, w0
     e28:	b.cs	1440 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x780>  // b.hs, b.nlast
     e2c:	ldr	x1, [x20]
     e30:	lsl	x10, x11, x5
     e34:	ldrh	w6, [x3], #2
     e38:	orr	x1, x1, x10
     e3c:	str	x1, [x20]
     e40:	add	w5, w6, w5
     e44:	and	w5, w5, #0xffff
     e48:	cbnz	w6, e20 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x160>
     e4c:	mov	x3, #0x0                   	// #0
     e50:	b	e18 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x158>
     e54:	b.cs	1460 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7a0>  // b.hs, b.nlast
     e58:	mov	x1, #0x1                   	// #1
     e5c:	cmp	w0, #0x40
     e60:	lsl	x1, x1, x21
     e64:	mvn	x1, x1
     e68:	ldr	x2, [x24, #136]
     e6c:	b.hi	1384 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6c4>  // b.pmore
     e70:	and	x1, x2, x1
     e74:	str	x1, [x24, #136]
     e78:	ldr	x8, [x24, #8]
     e7c:	ldr	w1, [x8, #8]
     e80:	ldr	x9, [x8]
     e84:	cmp	w21, w1
     e88:	ldr	x2, [x8, #48]
     e8c:	b.cs	1480 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7c0>  // b.hs, b.nlast
     e90:	mov	w1, #0x18                  	// #24
     e94:	umaddl	x1, w21, w1, x9
     e98:	ldr	w1, [x1, #4]
     e9c:	lsl	x1, x1, #1
     ea0:	adds	x6, x2, x1
     ea4:	b.eq	14a0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7e0>  // b.none
     ea8:	ldrh	w1, [x2, x1]
     eac:	add	x6, x6, #0x2
     eb0:	mov	x10, #0x1                   	// #1
     eb4:	cmp	w1, #0x0
     eb8:	add	w5, w21, w1
     ebc:	csel	x6, x6, xzr, ne  // ne = any
     ec0:	and	w5, w5, #0xffff
     ec4:	cmp	w0, #0x40
     ec8:	b.ls	f10 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x250>  // b.plast
     ecc:	nop
     ed0:	cbz	x6, 1040 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x380>
     ed4:	cmp	w0, w5
     ed8:	b.ls	1460 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7a0>  // b.plast
     edc:	ldr	x11, [x20]
     ee0:	ubfx	x12, x5, #6, #10
     ee4:	ldrh	w3, [x6], #2
     ee8:	lsl	x1, x10, x5
     eec:	ldr	x13, [x11, x12, lsl #3]
     ef0:	add	w5, w5, w3
     ef4:	and	w5, w5, #0xffff
     ef8:	bic	x1, x13, x1
     efc:	str	x1, [x11, x12, lsl #3]
     f00:	cbnz	w3, ed0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x210>
     f04:	mov	x6, #0x0                   	// #0
     f08:	cmp	w0, #0x40
     f0c:	b.hi	ed0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x210>  // b.pmore
     f10:	cbz	x6, 1040 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x380>
     f14:	cmp	w5, w0
     f18:	b.cs	1460 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7a0>  // b.hs, b.nlast
     f1c:	ldr	x11, [x20]
     f20:	lsl	x1, x10, x5
     f24:	ldrh	w3, [x6], #2
     f28:	bic	x1, x11, x1
     f2c:	str	x1, [x20]
     f30:	add	w5, w5, w3
     f34:	and	w5, w5, #0xffff
     f38:	cbnz	w3, f10 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x250>
     f3c:	mov	x6, #0x0                   	// #0
     f40:	b	f08 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x248>
     f44:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     f48:	add	x0, x0, #0x0
     f4c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     f50:	tst	w0, #0xff
     f54:	b.eq	d0c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4c>  // b.none
     f58:	bl	0 <_ZN4llvm4dbgsEv>
     f5c:	mov	x1, x0
     f60:	ldp	x2, x4, [x0, #16]
     f64:	sub	x2, x2, x4
     f68:	cmp	x2, #0x20
     f6c:	b.ls	1410 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x750>  // b.plast
     f70:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
     f74:	add	x0, x0, #0x0
     f78:	ldp	x2, x3, [x0]
     f7c:	stp	x2, x3, [x4]
     f80:	ldrb	w6, [x0, #32]
     f84:	ldp	x2, x3, [x0, #16]
     f88:	stp	x2, x3, [x4, #16]
     f8c:	strb	w6, [x4, #32]
     f90:	ldr	x0, [x1, #24]
     f94:	add	x0, x0, #0x21
     f98:	str	x0, [x1, #24]
     f9c:	mov	x0, x1
     fa0:	mov	w1, w28
     fa4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     fa8:	mov	x20, x0
     fac:	ldp	x1, x2, [x0, #16]
     fb0:	sub	x1, x1, x2
     fb4:	cmp	x1, #0x1
     fb8:	b.ls	13f8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x738>  // b.plast
     fbc:	mov	w0, #0x202c                	// #8236
     fc0:	strh	w0, [x2]
     fc4:	ldr	x0, [x20, #24]
     fc8:	add	x0, x0, #0x2
     fcc:	str	x0, [x20, #24]
     fd0:	ldr	x0, [x24, #8]
     fd4:	ldr	w1, [x0, #8]
     fd8:	ldr	x2, [x0]
     fdc:	cmp	w21, w1
     fe0:	ldr	x0, [x0, #64]
     fe4:	b.cs	1480 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7c0>  // b.hs, b.nlast
     fe8:	mov	w1, #0x18                  	// #24
     fec:	and	x19, x21, #0xffff
     ff0:	umull	x1, w21, w1
     ff4:	ldr	w26, [x2, x1]
     ff8:	adds	x26, x0, x26
     ffc:	b.eq	13d0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x710>  // b.none
    1000:	mov	x0, x26
    1004:	bl	0 <strlen>
    1008:	mov	x27, x0
    100c:	ldp	x3, x0, [x20, #16]
    1010:	sub	x3, x3, x0
    1014:	cmp	x27, x3
    1018:	b.hi	13bc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6fc>  // b.pmore
    101c:	cbz	x27, 13d8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x718>
    1020:	mov	x1, x26
    1024:	mov	x2, x27
    1028:	bl	0 <memcpy>
    102c:	ldp	x3, x1, [x20, #16]
    1030:	add	x0, x1, x27
    1034:	str	x0, [x20, #24]
    1038:	sub	x3, x3, x0
    103c:	b	13d8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x718>
    1040:	cbz	w26, 11c0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x500>
    1044:	cbz	w4, 1270 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b0>
    1048:	ldr	x1, [x24, #8]
    104c:	ldr	w0, [x1, #8]
    1050:	ldr	x2, [x1]
    1054:	cmp	w19, w0
    1058:	ldr	x1, [x1, #48]
    105c:	b.cs	1480 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7c0>  // b.hs, b.nlast
    1060:	mov	w0, #0x18                  	// #24
    1064:	umaddl	x0, w19, w0, x2
    1068:	ldr	w0, [x0, #8]
    106c:	lsl	x0, x0, #1
    1070:	adds	x3, x1, x0
    1074:	b.eq	14a0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7e0>  // b.none
    1078:	ldrh	w0, [x1, x0]
    107c:	add	x3, x3, #0x2
    1080:	mov	x5, #0x1                   	// #1
    1084:	add	w1, w0, w19
    1088:	cmp	w0, #0x0
    108c:	and	w1, w1, #0xffff
    1090:	csel	x3, x3, xzr, ne  // ne = any
    1094:	cbnz	w27, 1100 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x440>
    1098:	cbnz	w26, 1174 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4b4>
    109c:	cbz	x3, 1270 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b0>
    10a0:	ldr	x4, [x24, #112]
    10a4:	ubfiz	x0, x1, #5, #16
    10a8:	ldr	w6, [x20, #8]
    10ac:	add	x2, x4, x0
    10b0:	str	w25, [x4, x0]
    10b4:	cmp	w6, w1
    10b8:	str	x23, [x2, #8]
    10bc:	strh	wzr, [x2, #26]
    10c0:	b.ls	1460 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7a0>  // b.plast
    10c4:	lsl	x0, x5, x1
    10c8:	cmp	w6, #0x40
    10cc:	mvn	x2, x0
    10d0:	ldr	x0, [x20]
    10d4:	b.ls	1314 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x654>  // b.plast
    10d8:	ubfx	x7, x1, #6, #10
    10dc:	ldrh	w6, [x3], #2
    10e0:	add	w1, w1, w6
    10e4:	ldr	x4, [x0, x7, lsl #3]
    10e8:	and	w1, w1, #0xffff
    10ec:	and	x2, x4, x2
    10f0:	str	x2, [x0, x7, lsl #3]
    10f4:	cbnz	w6, 109c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3dc>
    10f8:	mov	x3, #0x0                   	// #0
    10fc:	cbz	w27, 1098 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3d8>
    1100:	cbnz	w26, 12a4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5e4>
    1104:	cbz	x3, 1270 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b0>
    1108:	ldr	x4, [x24, #112]
    110c:	ubfiz	x0, x1, #5, #16
    1110:	ldr	w6, [x20, #8]
    1114:	add	x2, x4, x0
    1118:	str	w25, [x4, x0]
    111c:	cmp	w6, w1
    1120:	str	x23, [x2, #8]
    1124:	strh	wzr, [x2, #26]
    1128:	b.ls	1440 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x780>  // b.plast
    112c:	cmp	w6, #0x40
    1130:	lsl	x7, x5, x1
    1134:	ldr	x2, [x20]
    1138:	b.hi	12ec <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x62c>  // b.pmore
    113c:	ldrh	w0, [x3], #2
    1140:	orr	x2, x2, x7
    1144:	str	x2, [x20]
    1148:	add	w1, w1, w0
    114c:	and	w1, w1, #0xffff
    1150:	cbnz	w0, 1104 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
    1154:	mov	x3, #0x0                   	// #0
    1158:	b	10fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x43c>
    115c:	ldrh	w4, [x3], #2
    1160:	and	x0, x0, x2
    1164:	str	x0, [x20]
    1168:	add	w1, w1, w4
    116c:	and	w1, w1, #0xffff
    1170:	cbz	w4, 10f8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x438>
    1174:	cbz	x3, 1270 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b0>
    1178:	ldr	w0, [x20, #8]
    117c:	cmp	w0, w1
    1180:	b.ls	1460 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7a0>  // b.plast
    1184:	cmp	w0, #0x40
    1188:	lsl	x0, x5, x1
    118c:	mvn	x2, x0
    1190:	ldr	x0, [x20]
    1194:	b.ls	115c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x49c>  // b.plast
    1198:	ubfx	x7, x1, #6, #10
    119c:	ldrh	w6, [x3], #2
    11a0:	add	w1, w6, w1
    11a4:	ldr	x4, [x0, x7, lsl #3]
    11a8:	and	w1, w1, #0xffff
    11ac:	and	x2, x4, x2
    11b0:	str	x2, [x0, x7, lsl #3]
    11b4:	cbnz	w6, 1174 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x4b4>
    11b8:	mov	x3, #0x0                   	// #0
    11bc:	b	10fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x43c>
    11c0:	ldr	x6, [x24, #112]
    11c4:	ubfiz	x0, x19, #5, #32
    11c8:	add	x1, x6, x0
    11cc:	str	w28, [x6, x0]
    11d0:	ldr	w0, [x8, #8]
    11d4:	str	x23, [x1, #8]
    11d8:	strh	wzr, [x1, #26]
    11dc:	cmp	w19, w0
    11e0:	b.cs	1480 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7c0>  // b.hs, b.nlast
    11e4:	mov	w0, #0x18                  	// #24
    11e8:	umaddl	x9, w19, w0, x9
    11ec:	ldr	w0, [x9, #4]
    11f0:	lsl	x0, x0, #1
    11f4:	adds	x8, x2, x0
    11f8:	b.eq	14a0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x7e0>  // b.none
    11fc:	ldrh	w5, [x2, x0]
    1200:	add	x8, x8, #0x2
    1204:	cmp	w5, #0x0
    1208:	add	w5, w5, w19
    120c:	and	w5, w5, #0xffff
    1210:	csel	x8, x8, xzr, ne  // ne = any
    1214:	nop
    1218:	mov	x2, x8
    121c:	cbz	x2, 1250 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x590>
    1220:	ubfiz	x0, x5, #5, #16
    1224:	mov	x8, #0x0                   	// #0
    1228:	add	x3, x6, x0
    122c:	str	w25, [x6, x0]
    1230:	strh	wzr, [x3, #26]
    1234:	str	x23, [x3, #8]
    1238:	ldrh	w3, [x2], #2
    123c:	add	w0, w3, w5
    1240:	and	w0, w0, #0xffff
    1244:	cbz	w3, 1218 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x558>
    1248:	mov	w5, w0
    124c:	cbnz	x2, 1220 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x560>
    1250:	cbz	w7, 1044 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x384>
    1254:	ldr	x3, [sp, #104]
    1258:	mov	x2, x22
    125c:	add	x1, x1, #0x10
    1260:	mov	x0, x24
    1264:	bl	b00 <_ZN4llvm3mca12RegisterFile16allocatePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
    1268:	ldrb	w4, [x23, #20]
    126c:	cbnz	w4, 1048 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x388>
    1270:	ldp	x19, x20, [sp, #16]
    1274:	ldp	x21, x22, [sp, #32]
    1278:	ldp	x23, x24, [sp, #48]
    127c:	ldp	x25, x26, [sp, #64]
    1280:	ldp	x27, x28, [sp, #80]
    1284:	ldp	x29, x30, [sp], #112
    1288:	ret
    128c:	ldrh	w2, [x3], #2
    1290:	orr	x0, x0, x4
    1294:	str	x0, [x20]
    1298:	add	w1, w2, w1
    129c:	and	w1, w1, #0xffff
    12a0:	cbz	w2, 10f8 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x438>
    12a4:	cbz	x3, 1270 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5b0>
    12a8:	ldr	w0, [x20, #8]
    12ac:	cmp	w1, w0
    12b0:	b.cs	1440 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x780>  // b.hs, b.nlast
    12b4:	cmp	w0, #0x40
    12b8:	lsl	x4, x5, x1
    12bc:	ldr	x0, [x20]
    12c0:	b.ls	128c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5cc>  // b.plast
    12c4:	ubfx	x7, x1, #6, #10
    12c8:	ldrh	w6, [x3], #2
    12cc:	add	w1, w6, w1
    12d0:	ldr	x2, [x0, x7, lsl #3]
    12d4:	and	w1, w1, #0xffff
    12d8:	orr	x4, x2, x4
    12dc:	str	x4, [x0, x7, lsl #3]
    12e0:	cbnz	w6, 12a4 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x5e4>
    12e4:	mov	x3, #0x0                   	// #0
    12e8:	b	10fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x43c>
    12ec:	ubfx	x6, x1, #6, #10
    12f0:	ldrh	w4, [x3], #2
    12f4:	add	w1, w1, w4
    12f8:	ldr	x0, [x2, x6, lsl #3]
    12fc:	and	w1, w1, #0xffff
    1300:	orr	x0, x0, x7
    1304:	str	x0, [x2, x6, lsl #3]
    1308:	cbnz	w4, 1104 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x444>
    130c:	mov	x3, #0x0                   	// #0
    1310:	b	10fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x43c>
    1314:	ldrh	w4, [x3], #2
    1318:	and	x0, x0, x2
    131c:	str	x0, [x20]
    1320:	add	w1, w4, w1
    1324:	and	w1, w1, #0xffff
    1328:	cbnz	w4, 109c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x3dc>
    132c:	mov	x3, #0x0                   	// #0
    1330:	b	10fc <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x43c>
    1334:	cbnz	w4, 1398 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6d8>
    1338:	ubfiz	x2, x19, #5, #16
    133c:	add	x0, x1, x2
    1340:	ldr	x0, [x0, #8]
    1344:	cbz	x0, 13b0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6f0>
    1348:	ldr	w1, [x1, x2]
    134c:	cmp	w28, w1
    1350:	b.eq	13b0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x6f0>  // b.none
    1354:	cbnz	w26, 14c0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x800>
    1358:	mov	x2, x23
    135c:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPS1_>
    1360:	ldrb	w4, [x23, #20]
    1364:	mov	w21, w19
    1368:	mov	w7, #0x0                   	// #0
    136c:	b	d48 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x88>
    1370:	lsr	w6, w21, #6
    1374:	ldr	x3, [x2, x6, lsl #3]
    1378:	orr	x1, x3, x1
    137c:	str	x1, [x2, x6, lsl #3]
    1380:	b	d88 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xc8>
    1384:	lsr	w6, w21, #6
    1388:	ldr	x3, [x2, x6, lsl #3]
    138c:	and	x1, x3, x1
    1390:	str	x1, [x2, x6, lsl #3]
    1394:	b	e78 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x1b8>
    1398:	ldr	w0, [x24, #144]
    139c:	mov	w21, w19
    13a0:	add	x20, x24, #0x88
    13a4:	cmp	w21, w0
    13a8:	cbz	w27, e54 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x194>
    13ac:	b	d68 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0xa8>
    13b0:	mov	w21, w19
    13b4:	mov	w7, #0x0                   	// #0
    13b8:	b	d50 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x90>
    13bc:	mov	x0, x20
    13c0:	mov	x2, x27
    13c4:	mov	x1, x26
    13c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    13cc:	mov	x20, x0
    13d0:	ldp	x3, x0, [x20, #16]
    13d4:	sub	x3, x3, x0
    13d8:	cmp	x3, #0x1
    13dc:	b.ls	1428 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x768>  // b.plast
    13e0:	mov	w1, #0xa5d                 	// #2653
    13e4:	strh	w1, [x0]
    13e8:	ldr	x0, [x20, #24]
    13ec:	add	x0, x0, #0x2
    13f0:	str	x0, [x20, #24]
    13f4:	b	d10 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x50>
    13f8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    13fc:	mov	x2, #0x2                   	// #2
    1400:	add	x1, x1, #0x0
    1404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1408:	mov	x20, x0
    140c:	b	fd0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x310>
    1410:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1414:	add	x1, x1, #0x0
    1418:	mov	x2, #0x21                  	// #33
    141c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1420:	mov	x1, x0
    1424:	b	f9c <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x2dc>
    1428:	mov	x0, x20
    142c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1430:	mov	x2, #0x2                   	// #2
    1434:	add	x1, x1, #0x0
    1438:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    143c:	b	d10 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE+0x50>
    1440:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1444:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1448:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    144c:	add	x3, x3, #0x0
    1450:	add	x1, x1, #0x0
    1454:	add	x0, x0, #0x0
    1458:	mov	w2, #0x59d                 	// #1437
    145c:	bl	0 <__assert_fail>
    1460:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1464:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1468:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    146c:	add	x3, x3, #0x0
    1470:	add	x1, x1, #0x0
    1474:	add	x0, x0, #0x0
    1478:	mov	w2, #0x5e7                 	// #1511
    147c:	bl	0 <__assert_fail>
    1480:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1484:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1488:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    148c:	add	x3, x3, #0x0
    1490:	add	x1, x1, #0x0
    1494:	add	x0, x0, #0x0
    1498:	mov	w2, #0x1b8                 	// #440
    149c:	bl	0 <__assert_fail>
    14a0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14a4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14a8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14ac:	add	x3, x3, #0x0
    14b0:	add	x1, x1, #0x0
    14b4:	add	x0, x0, #0x0
    14b8:	mov	w2, #0xd1                  	// #209
    14bc:	bl	0 <__assert_fail>
    14c0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14c4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14c8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14cc:	add	x3, x3, #0x0
    14d0:	add	x1, x1, #0x0
    14d4:	add	x0, x0, #0x0
    14d8:	mov	w2, #0xbe                  	// #190
    14dc:	bl	0 <__assert_fail>
    14e0:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14e4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14e8:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    14ec:	add	x3, x3, #0x0
    14f0:	add	x1, x1, #0x0
    14f4:	add	x0, x0, #0x0
    14f8:	mov	w2, #0x97                  	// #151
    14fc:	bl	0 <__assert_fail>

0000000000001500 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>:
    1500:	stp	x29, x30, [sp, #-64]!
    1504:	mov	x29, sp
    1508:	stp	x21, x22, [sp, #32]
    150c:	mov	x22, x0
    1510:	ldrb	w0, [x1, #22]
    1514:	cbnz	w0, 1668 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x168>
    1518:	stp	x19, x20, [sp, #16]
    151c:	mov	x20, x1
    1520:	ldrh	w19, [x1, #12]
    1524:	str	x23, [sp, #48]
    1528:	cbz	w19, 16d4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1d4>
    152c:	ldr	w0, [x1, #8]
    1530:	cmn	w0, #0x200
    1534:	b.eq	1754 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x254>  // b.none
    1538:	cmp	w0, #0x0
    153c:	b.gt	1734 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x234>
    1540:	ldr	x4, [x22, #112]
    1544:	ubfiz	x23, x19, #5, #16
    1548:	and	x21, x19, #0xffff
    154c:	add	x1, x4, x23
    1550:	ldrh	w0, [x1, #24]
    1554:	cmp	w0, #0x0
    1558:	ccmp	w0, w19, #0x4, ne  // ne = any
    155c:	b.ne	1674 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x174>  // b.any
    1560:	ldrb	w0, [x20, #21]
    1564:	cbnz	w0, 157c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x7c>
    1568:	add	x1, x1, #0x10
    156c:	mov	x0, x22
    1570:	bl	be0 <_ZN4llvm3mca12RegisterFile12freePhysRegsERKNS1_20RegisterRenamingInfoENS_15MutableArrayRefIjEE>
    1574:	ldr	x4, [x22, #112]
    1578:	add	x1, x4, x23
    157c:	ldr	x0, [x1, #8]
    1580:	cmp	x20, x0
    1584:	b.eq	1698 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x198>  // b.none
    1588:	ldr	x0, [x22, #8]
    158c:	ldr	w2, [x0, #8]
    1590:	ldr	x1, [x0]
    1594:	cmp	w19, w2
    1598:	ldr	x5, [x0, #48]
    159c:	b.cs	16f4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1f4>  // b.hs, b.nlast
    15a0:	add	x21, x21, x21, lsl #1
    15a4:	add	x21, x1, x21, lsl #3
    15a8:	ldr	w0, [x21, #4]
    15ac:	lsl	x0, x0, #1
    15b0:	adds	x2, x5, x0
    15b4:	b.eq	1714 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x214>  // b.none
    15b8:	ldrh	w0, [x5, x0]
    15bc:	add	x2, x2, #0x2
    15c0:	cmp	w0, #0x0
    15c4:	add	w0, w19, w0
    15c8:	and	w0, w0, #0xffff
    15cc:	csel	x2, x2, xzr, ne  // ne = any
    15d0:	cbz	x2, 1600 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x100>
    15d4:	ubfiz	x3, x0, #5, #16
    15d8:	add	x3, x4, x3
    15dc:	ldr	x1, [x3, #8]
    15e0:	cmp	x20, x1
    15e4:	ldrh	w1, [x2], #2
    15e8:	b.eq	16a0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1a0>  // b.none
    15ec:	add	w0, w1, w0
    15f0:	and	w0, w0, #0xffff
    15f4:	cbnz	w1, 15d0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xd0>
    15f8:	mov	x2, #0x0                   	// #0
    15fc:	cbnz	x2, 15d4 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xd4>
    1600:	ldrb	w0, [x20, #20]
    1604:	cbz	w0, 1660 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x160>
    1608:	ldr	w0, [x21, #8]
    160c:	lsl	x0, x0, #1
    1610:	adds	x2, x5, x0
    1614:	b.eq	1714 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x214>  // b.none
    1618:	ldrh	w1, [x5, x0]
    161c:	add	x2, x2, #0x2
    1620:	add	w0, w19, w1
    1624:	cmp	w1, #0x0
    1628:	and	w0, w0, #0xffff
    162c:	csel	x2, x2, xzr, ne  // ne = any
    1630:	cbz	x2, 1660 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x160>
    1634:	ubfiz	x1, x0, #5, #16
    1638:	add	x1, x4, x1
    163c:	ldr	x3, [x1, #8]
    1640:	cmp	x20, x3
    1644:	b.eq	16b8 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x1b8>  // b.none
    1648:	ldrh	w1, [x2], #2
    164c:	add	w0, w1, w0
    1650:	and	w0, w0, #0xffff
    1654:	cbnz	w1, 1630 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x130>
    1658:	mov	x2, #0x0                   	// #0
    165c:	cbnz	x2, 1634 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x134>
    1660:	ldp	x19, x20, [sp, #16]
    1664:	ldr	x23, [sp, #48]
    1668:	ldp	x21, x22, [sp, #32]
    166c:	ldp	x29, x30, [sp], #64
    1670:	ret
    1674:	ldrb	w5, [x20, #20]
    1678:	ubfiz	x23, x0, #5, #16
    167c:	add	x1, x4, x23
    1680:	and	x21, x0, #0xffff
    1684:	mov	w19, w0
    1688:	cbnz	w5, 1560 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x60>
    168c:	ldr	x0, [x1, #8]
    1690:	cmp	x20, x0
    1694:	b.ne	1588 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>  // b.any
    1698:	str	xzr, [x1, #8]
    169c:	b	1588 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x88>
    16a0:	str	xzr, [x3, #8]
    16a4:	add	w0, w0, w1
    16a8:	and	w0, w0, #0xffff
    16ac:	cbnz	w1, 15d0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xd0>
    16b0:	mov	x2, #0x0                   	// #0
    16b4:	b	15fc <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0xfc>
    16b8:	ldrh	w3, [x2], #2
    16bc:	str	xzr, [x1, #8]
    16c0:	add	w0, w3, w0
    16c4:	and	w0, w0, #0xffff
    16c8:	cbnz	w3, 1630 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x130>
    16cc:	mov	x2, #0x0                   	// #0
    16d0:	b	165c <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE+0x15c>
    16d4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16d8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16dc:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16e0:	add	x3, x3, #0x0
    16e4:	add	x1, x1, #0x0
    16e8:	add	x0, x0, #0x0
    16ec:	mov	w2, #0xfc                  	// #252
    16f0:	bl	0 <__assert_fail>
    16f4:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16f8:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    16fc:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1700:	add	x3, x3, #0x0
    1704:	add	x1, x1, #0x0
    1708:	add	x0, x0, #0x0
    170c:	mov	w2, #0x1b8                 	// #440
    1710:	bl	0 <__assert_fail>
    1714:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1718:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    171c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1720:	add	x3, x3, #0x0
    1724:	add	x1, x1, #0x0
    1728:	add	x0, x0, #0x0
    172c:	mov	w2, #0xd1                  	// #209
    1730:	bl	0 <__assert_fail>
    1734:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1738:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    173c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1740:	add	x3, x3, #0x0
    1744:	add	x1, x1, #0x0
    1748:	add	x0, x0, #0x0
    174c:	mov	w2, #0xff                  	// #255
    1750:	bl	0 <__assert_fail>
    1754:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1758:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    175c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1760:	add	x3, x3, #0x0
    1764:	add	x1, x1, #0x0
    1768:	add	x0, x0, #0x0
    176c:	mov	w2, #0xfd                  	// #253
    1770:	bl	0 <__assert_fail>
    1774:	nop

0000000000001778 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>:
    1778:	ldrh	w8, [x2, #8]
    177c:	mov	x3, x0
    1780:	ldrh	w5, [x1, #12]
    1784:	ldr	x9, [x0, #112]
    1788:	ubfiz	x10, x8, #5, #16
    178c:	ubfiz	x4, x5, #5, #16
    1790:	add	x10, x9, x10
    1794:	add	x4, x9, x4
    1798:	ldr	w6, [x10, #16]
    179c:	ldr	w0, [x4, #16]
    17a0:	cmp	w0, w6
    17a4:	b.ne	18fc <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x184>  // b.any
    17a8:	ldrh	w7, [x4, #24]
    17ac:	and	x12, x5, #0xffff
    17b0:	cmp	w7, #0x0
    17b4:	ccmp	w7, w5, #0x4, ne  // ne = any
    17b8:	b.ne	1910 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x198>  // b.any
    17bc:	stp	x29, x30, [sp, #-16]!
    17c0:	mov	x29, sp
    17c4:	ldr	w0, [x3, #24]
    17c8:	cmp	x0, w6, uxtw
    17cc:	b.ls	19d8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x260>  // b.plast
    17d0:	ldr	x11, [x3, #16]
    17d4:	mov	w0, #0x14                  	// #20
    17d8:	umaddl	x11, w6, w0, x11
    17dc:	ldr	w0, [x11, #8]
    17e0:	cbz	w0, 17f0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x78>
    17e4:	ldr	w6, [x11, #12]
    17e8:	cmp	w0, w6
    17ec:	b.eq	1950 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1d8>  // b.none
    17f0:	ldr	w0, [x3, #144]
    17f4:	cmp	w8, w0
    17f8:	b.cs	1958 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1e0>  // b.hs, b.nlast
    17fc:	mov	x6, #0x1                   	// #1
    1800:	cmp	w0, #0x40
    1804:	lsl	x6, x6, x8
    1808:	ldr	x0, [x3, #136]
    180c:	b.hi	1904 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x18c>  // b.pmore
    1810:	ands	x13, x6, x0
    1814:	ldrb	w6, [x11, #16]
    1818:	cset	w0, ne  // ne = any
    181c:	eor	w6, w6, #0x1
    1820:	orr	w0, w0, w6
    1824:	ands	w0, w0, #0xff
    1828:	b.eq	18f4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x17c>  // b.none
    182c:	ldrh	w6, [x10, #24]
    1830:	cbz	w6, 1840 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xc8>
    1834:	ubfiz	x10, x6, #5, #16
    1838:	mov	w8, w6
    183c:	add	x10, x9, x10
    1840:	cbnz	w7, 192c <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1b4>
    1844:	ldr	x6, [x3, #8]
    1848:	ldrh	w3, [x10, #26]
    184c:	cmp	w3, #0x0
    1850:	ldr	w7, [x6, #8]
    1854:	csel	w8, w8, w3, eq  // eq = none
    1858:	strh	w8, [x4, #26]
    185c:	cmp	w5, w7
    1860:	ldr	x7, [x6]
    1864:	ldr	x4, [x6, #48]
    1868:	b.cs	1978 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x200>  // b.hs, b.nlast
    186c:	add	x3, x12, x12, lsl #1
    1870:	add	x3, x7, x3, lsl #3
    1874:	ldr	w3, [x3, #4]
    1878:	lsl	x3, x3, #1
    187c:	adds	x7, x4, x3
    1880:	b.eq	1998 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x220>  // b.none
    1884:	ldrh	w3, [x4, x3]
    1888:	add	x7, x7, #0x2
    188c:	add	w5, w5, w3
    1890:	cmp	w3, #0x0
    1894:	and	w5, w5, #0xffff
    1898:	csel	x7, x7, xzr, ne  // ne = any
    189c:	nop
    18a0:	mov	x4, x7
    18a4:	cbz	x4, 18d0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x158>
    18a8:	ubfiz	x3, x5, #5, #16
    18ac:	mov	x7, #0x0                   	// #0
    18b0:	add	x3, x9, x3
    18b4:	strh	w8, [x3, #26]
    18b8:	ldrh	w6, [x4], #2
    18bc:	add	w3, w6, w5
    18c0:	and	w3, w3, #0xffff
    18c4:	cbz	w6, 18a0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x128>
    18c8:	mov	w5, w3
    18cc:	cbnz	x4, 18a8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x130>
    18d0:	cbnz	x13, 1940 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1c8>
    18d4:	ldr	w2, [x1, #64]
    18d8:	cbnz	w2, 19b8 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x240>
    18dc:	str	wzr, [x1, #8]
    18e0:	mov	w2, #0x1                   	// #1
    18e4:	strb	w2, [x1, #22]
    18e8:	ldr	w1, [x11, #12]
    18ec:	add	w1, w1, #0x1
    18f0:	str	w1, [x11, #12]
    18f4:	ldp	x29, x30, [sp], #16
    18f8:	ret
    18fc:	mov	w0, #0x0                   	// #0
    1900:	ret
    1904:	lsr	w13, w8, #6
    1908:	ldr	x0, [x0, x13, lsl #3]
    190c:	b	1810 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x98>
    1910:	ubfiz	x0, x7, #5, #16
    1914:	add	x0, x9, x0
    1918:	ldrb	w0, [x0, #28]
    191c:	cbz	w0, 1928 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x1b0>
    1920:	ldrb	w0, [x1, #20]
    1924:	cbnz	w0, 17bc <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x44>
    1928:	ret
    192c:	ubfiz	x4, x7, #5, #16
    1930:	and	x12, x7, #0xffff
    1934:	add	x4, x9, x4
    1938:	mov	w5, w7
    193c:	b	1844 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0xcc>
    1940:	mov	w3, #0x1                   	// #1
    1944:	strb	w3, [x1, #21]
    1948:	strb	w3, [x2, #41]
    194c:	b	18d4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x15c>
    1950:	mov	w0, #0x0                   	// #0
    1954:	b	18f4 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE+0x17c>
    1958:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    195c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1960:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1964:	add	x3, x3, #0x0
    1968:	add	x1, x1, #0x0
    196c:	add	x0, x0, #0x0
    1970:	mov	w2, #0x472                 	// #1138
    1974:	bl	0 <__assert_fail>
    1978:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    197c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1980:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1984:	add	x3, x3, #0x0
    1988:	add	x1, x1, #0x0
    198c:	add	x0, x0, #0x0
    1990:	mov	w2, #0x1b8                 	// #440
    1994:	bl	0 <__assert_fail>
    1998:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    199c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19a0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19a4:	add	x3, x3, #0x0
    19a8:	add	x1, x1, #0x0
    19ac:	add	x0, x0, #0x0
    19b0:	mov	w2, #0xd1                  	// #209
    19b4:	bl	0 <__assert_fail>
    19b8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19bc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19c0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19c4:	add	x3, x3, #0x0
    19c8:	add	x1, x1, #0x0
    19cc:	add	x0, x0, #0x0
    19d0:	mov	w2, #0xcf                  	// #207
    19d4:	bl	0 <__assert_fail>
    19d8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19dc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19e0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    19e4:	add	x3, x3, #0x0
    19e8:	add	x1, x1, #0x0
    19ec:	add	x0, x0, #0x0
    19f0:	mov	w2, #0x95                  	// #149
    19f4:	bl	0 <__assert_fail>

00000000000019f8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>:
    19f8:	stp	x29, x30, [sp, #-144]!
    19fc:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1a00:	mov	x29, sp
    1a04:	stp	x23, x24, [sp, #48]
    1a08:	mov	x24, x0
    1a0c:	ldr	d0, [x3]
    1a10:	add	x0, sp, #0x70
    1a14:	add	x4, sp, #0x80
    1a18:	ldr	w23, [x24, #24]
    1a1c:	stp	x19, x20, [sp, #16]
    1a20:	mov	x19, x1
    1a24:	cmp	w23, #0x4
    1a28:	stp	x21, x22, [sp, #32]
    1a2c:	mov	x21, x2
    1a30:	mov	w22, w23
    1a34:	stp	x0, x4, [sp, #104]
    1a38:	str	d0, [sp, #120]
    1a3c:	b.hi	1c34 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x23c>  // b.pmore
    1a40:	stp	x25, x26, [sp, #64]
    1a44:	lsl	x2, x22, #2
    1a48:	str	w23, [sp, #120]
    1a4c:	add	x0, x4, x2
    1a50:	cmp	x4, x0
    1a54:	b.eq	1a68 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x70>  // b.none
    1a58:	mov	x0, x4
    1a5c:	mov	w1, #0x0                   	// #0
    1a60:	bl	0 <memset>
    1a64:	mov	x4, x0
    1a68:	add	x6, x19, x21, lsl #1
    1a6c:	cmp	x19, x6
    1a70:	b.eq	1ad4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xdc>  // b.none
    1a74:	ldr	x7, [x24, #112]
    1a78:	mov	x3, x19
    1a7c:	nop
    1a80:	ldrh	w1, [x3]
    1a84:	ldr	w5, [sp, #120]
    1a88:	add	x1, x7, x1, lsl #5
    1a8c:	ldr	w2, [x1, #16]
    1a90:	cbz	w2, 1ab4 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0xbc>
    1a94:	cmp	w2, w5
    1a98:	mov	w2, w2
    1a9c:	b.cs	1c64 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x26c>  // b.hs, b.nlast
    1aa0:	ldr	w5, [x1, #20]
    1aa4:	ldr	w0, [x4, x2, lsl #2]
    1aa8:	add	w0, w0, w5
    1aac:	str	w0, [x4, x2, lsl #2]
    1ab0:	ldr	w5, [sp, #120]
    1ab4:	cbz	w5, 1c64 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x26c>
    1ab8:	ldr	w1, [x1, #20]
    1abc:	add	x3, x3, #0x2
    1ac0:	ldr	w2, [x4]
    1ac4:	cmp	x6, x3
    1ac8:	add	w1, w2, w1
    1acc:	str	w1, [x4]
    1ad0:	b.ne	1a80 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x88>  // b.any
    1ad4:	ldr	w26, [x24, #24]
    1ad8:	cbz	w26, 1c5c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x264>
    1adc:	stp	x27, x28, [sp, #80]
    1ae0:	adrp	x28, 0 <_ZN4llvm9DebugFlagE>
    1ae4:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1ae8:	ldr	x28, [x28]
    1aec:	add	x23, x23, #0x0
    1af0:	mov	x21, #0x0                   	// #0
    1af4:	mov	x19, #0x0                   	// #0
    1af8:	mov	w25, #0x0                   	// #0
    1afc:	mov	w27, #0x1                   	// #1
    1b00:	ldr	w0, [sp, #120]
    1b04:	mov	w22, w19
    1b08:	cmp	x0, x19
    1b0c:	b.ls	1c68 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x270>  // b.plast
    1b10:	ldr	x0, [sp, #112]
    1b14:	ldr	w1, [x0, x19, lsl #2]
    1b18:	cbz	w1, 1b64 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x16c>
    1b1c:	ldr	w0, [x24, #24]
    1b20:	cmp	x0, x19
    1b24:	b.ls	1c88 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x290>  // b.plast
    1b28:	ldr	x0, [x24, #16]
    1b2c:	add	x20, x0, x21
    1b30:	ldr	w2, [x0, x21]
    1b34:	cbz	w2, 1b64 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x16c>
    1b38:	cmp	w2, w1
    1b3c:	b.cs	1b4c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x154>  // b.hs, b.nlast
    1b40:	ldrb	w0, [x28]
    1b44:	cbnz	w0, 1bb0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1b8>
    1b48:	mov	w1, w2
    1b4c:	ldr	w0, [x20, #4]
    1b50:	lsl	w22, w27, w22
    1b54:	orr	w22, w25, w22
    1b58:	add	w1, w1, w0
    1b5c:	cmp	w1, w2
    1b60:	csel	w25, w22, w25, hi  // hi = pmore
    1b64:	add	x19, x19, #0x1
    1b68:	add	x21, x21, #0x14
    1b6c:	cmp	w26, w19
    1b70:	b.hi	1b00 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x108>  // b.pmore
    1b74:	ldp	x27, x28, [sp, #80]
    1b78:	ldr	x4, [sp, #112]
    1b7c:	ldr	x0, [sp, #104]
    1b80:	add	x20, x0, #0x10
    1b84:	cmp	x4, x20
    1b88:	b.eq	1b94 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x19c>  // b.none
    1b8c:	mov	x0, x4
    1b90:	bl	0 <free>
    1b94:	mov	w0, w25
    1b98:	ldp	x19, x20, [sp, #16]
    1b9c:	ldp	x21, x22, [sp, #32]
    1ba0:	ldp	x23, x24, [sp, #48]
    1ba4:	ldp	x25, x26, [sp, #64]
    1ba8:	ldp	x29, x30, [sp], #144
    1bac:	ret
    1bb0:	mov	x0, x23
    1bb4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1bb8:	tst	w0, #0xff
    1bbc:	b.ne	1bc8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x1d0>  // b.any
    1bc0:	ldr	w2, [x20]
    1bc4:	b	1b48 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x150>
    1bc8:	bl	0 <_ZN4llvm4dbgsEv>
    1bcc:	mov	x1, x0
    1bd0:	ldp	x2, x5, [x0, #16]
    1bd4:	sub	x2, x2, x5
    1bd8:	cmp	x2, #0x2a
    1bdc:	b.ls	1c1c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x224>  // b.plast
    1be0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1be4:	add	x0, x0, #0x0
    1be8:	ldr	x2, [x0, #32]
    1bec:	str	x2, [x5, #32]
    1bf0:	ldp	x2, x3, [x0]
    1bf4:	stp	x2, x3, [x5]
    1bf8:	ldur	w6, [x0, #39]
    1bfc:	ldp	x2, x3, [x0, #16]
    1c00:	stp	x2, x3, [x5, #16]
    1c04:	stur	w6, [x5, #39]
    1c08:	ldr	x0, [x1, #24]
    1c0c:	ldr	w2, [x20]
    1c10:	add	x0, x0, #0x2b
    1c14:	str	x0, [x1, #24]
    1c18:	b	1b48 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x150>
    1c1c:	mov	x2, #0x2b                  	// #43
    1c20:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c24:	add	x1, x1, #0x0
    1c28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c2c:	ldr	w2, [x20]
    1c30:	b	1b48 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x150>
    1c34:	mov	x1, x4
    1c38:	mov	x2, x22
    1c3c:	mov	x3, #0x4                   	// #4
    1c40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1c44:	ldr	w0, [sp, #124]
    1c48:	stp	x25, x26, [sp, #64]
    1c4c:	cmp	x22, x0
    1c50:	b.hi	1ca8 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x2b0>  // b.pmore
    1c54:	ldr	x4, [sp, #112]
    1c58:	b	1a44 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x4c>
    1c5c:	mov	w25, #0x0                   	// #0
    1c60:	b	1b7c <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE+0x184>
    1c64:	stp	x27, x28, [sp, #80]
    1c68:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c6c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c70:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c74:	add	x3, x3, #0x0
    1c78:	add	x1, x1, #0x0
    1c7c:	add	x0, x0, #0x0
    1c80:	mov	w2, #0x95                  	// #149
    1c84:	bl	0 <__assert_fail>
    1c88:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c8c:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c90:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1c94:	add	x3, x3, #0x0
    1c98:	add	x1, x1, #0x0
    1c9c:	add	x0, x0, #0x0
    1ca0:	mov	w2, #0x99                  	// #153
    1ca4:	bl	0 <__assert_fail>
    1ca8:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1cac:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1cb0:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1cb4:	add	x3, x3, #0x0
    1cb8:	add	x1, x1, #0x0
    1cbc:	add	x0, x0, #0x0
    1cc0:	mov	w2, #0x43                  	// #67
    1cc4:	stp	x27, x28, [sp, #80]
    1cc8:	bl	0 <__assert_fail>
    1ccc:	nop

0000000000001cd0 <_ZNK4llvm3mca12RegisterFile4dumpEv>:
    1cd0:	stp	x29, x30, [sp, #-112]!
    1cd4:	mov	x29, sp
    1cd8:	stp	x19, x20, [sp, #16]
    1cdc:	mov	x20, x0
    1ce0:	ldr	x0, [x0, #8]
    1ce4:	stp	x23, x24, [sp, #48]
    1ce8:	stp	x21, x22, [sp, #32]
    1cec:	ldr	w23, [x0, #8]
    1cf0:	stp	x25, x26, [sp, #64]
    1cf4:	cbz	w23, 1f88 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2b8>
    1cf8:	adrp	x26, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1cfc:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1d00:	add	x0, x26, #0x0
    1d04:	add	x25, x25, #0x0
    1d08:	mov	x19, #0x0                   	// #0
    1d0c:	mov	x24, #0x1                   	// #1
    1d10:	stp	x27, x28, [sp, #80]
    1d14:	str	x0, [sp, #96]
    1d18:	b	1d28 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x58>
    1d1c:	add	x19, x19, #0x1
    1d20:	cmp	w23, w19
    1d24:	b.ls	1f84 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2b4>  // b.plast
    1d28:	ldr	w0, [x20, #144]
    1d2c:	mov	w21, w19
    1d30:	cmp	w0, w19
    1d34:	b.ls	2224 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x554>  // b.plast
    1d38:	cmp	w0, #0x40
    1d3c:	lsl	x22, x24, x19
    1d40:	ldr	x0, [x20, #136]
    1d44:	b.ls	1d50 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x80>  // b.plast
    1d48:	lsr	w1, w19, #6
    1d4c:	ldr	x0, [x0, x1, lsl #3]
    1d50:	tst	x22, x0
    1d54:	b.eq	1d1c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>  // b.none
    1d58:	ldr	x28, [x20, #112]
    1d5c:	bl	0 <_ZN4llvm4dbgsEv>
    1d60:	ldr	x1, [x20, #8]
    1d64:	mov	x27, x0
    1d68:	ldr	w0, [x1, #8]
    1d6c:	ldr	x2, [x1]
    1d70:	cmp	w0, w21
    1d74:	ldr	x1, [x1, #64]
    1d78:	b.ls	2244 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x574>  // b.plast
    1d7c:	add	x0, x19, x19, lsl #1
    1d80:	lsl	x0, x0, #3
    1d84:	ldr	w0, [x2, x0]
    1d88:	adds	x26, x1, x0
    1d8c:	b.eq	20e8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x418>  // b.none
    1d90:	mov	x0, x26
    1d94:	bl	0 <strlen>
    1d98:	mov	x2, x0
    1d9c:	ldp	x3, x0, [x27, #16]
    1da0:	sub	x3, x3, x0
    1da4:	cmp	x2, x3
    1da8:	b.hi	20d8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x408>  // b.pmore
    1dac:	cbz	x2, 1dd0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x100>
    1db0:	mov	x1, x26
    1db4:	str	x2, [sp, #104]
    1db8:	bl	0 <memcpy>
    1dbc:	ldp	x3, x1, [x27, #16]
    1dc0:	ldr	x2, [sp, #104]
    1dc4:	add	x0, x1, x2
    1dc8:	str	x0, [x27, #24]
    1dcc:	sub	x3, x3, x0
    1dd0:	cmp	x3, #0x1
    1dd4:	b.ls	20f8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x428>  // b.plast
    1dd8:	mov	w1, #0x202c                	// #8236
    1ddc:	strh	w1, [x0]
    1de0:	mov	x1, x19
    1de4:	ldr	x0, [x27, #24]
    1de8:	add	x0, x0, #0x2
    1dec:	str	x0, [x27, #24]
    1df0:	mov	x0, x27
    1df4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1df8:	mov	x1, x0
    1dfc:	ldp	x2, x3, [x0, #16]
    1e00:	sub	x2, x2, x3
    1e04:	cmp	x2, #0x5
    1e08:	b.ls	2130 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x460>  // b.plast
    1e0c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1e10:	add	x0, x0, #0x0
    1e14:	ldr	w2, [x0]
    1e18:	ldrh	w0, [x0, #4]
    1e1c:	str	w2, [x3]
    1e20:	strh	w0, [x3, #4]
    1e24:	ldr	x0, [x1, #24]
    1e28:	add	x0, x0, #0x6
    1e2c:	str	x0, [x1, #24]
    1e30:	add	x28, x28, x19, lsl #5
    1e34:	mov	x0, x1
    1e38:	ldr	w1, [x28, #16]
    1e3c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1e40:	mov	x2, x0
    1e44:	ldp	x1, x3, [x0, #16]
    1e48:	sub	x1, x1, x3
    1e4c:	cmp	x1, #0x6
    1e50:	b.ls	21e8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x518>  // b.plast
    1e54:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1e58:	add	x0, x0, #0x0
    1e5c:	ldr	w1, [x0]
    1e60:	ldur	w0, [x0, #3]
    1e64:	str	w1, [x3]
    1e68:	stur	w0, [x3, #3]
    1e6c:	ldr	x0, [x2, #24]
    1e70:	add	x0, x0, #0x7
    1e74:	str	x0, [x2, #24]
    1e78:	ldr	w1, [x28, #20]
    1e7c:	mov	x0, x2
    1e80:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1e84:	mov	x2, x0
    1e88:	ldp	x1, x3, [x0, #16]
    1e8c:	sub	x1, x1, x3
    1e90:	cmp	x1, #0xa
    1e94:	b.ls	21d0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x500>  // b.plast
    1e98:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1e9c:	add	x0, x0, #0x0
    1ea0:	ldr	x1, [x0]
    1ea4:	str	x1, [x3]
    1ea8:	ldur	w0, [x0, #7]
    1eac:	stur	w0, [x3, #7]
    1eb0:	ldr	x0, [x2, #24]
    1eb4:	add	x0, x0, #0xb
    1eb8:	str	x0, [x2, #24]
    1ebc:	ldrh	w1, [x28, #24]
    1ec0:	mov	x0, x2
    1ec4:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1ec8:	mov	x1, x0
    1ecc:	ldp	x2, x3, [x0, #16]
    1ed0:	sub	x2, x2, x3
    1ed4:	cmp	x2, #0x8
    1ed8:	b.ls	21a0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4d0>  // b.plast
    1edc:	ldr	x0, [x25]
    1ee0:	str	x0, [x3]
    1ee4:	ldrb	w0, [x25, #8]
    1ee8:	strb	w0, [x3, #8]
    1eec:	ldr	x0, [x1, #24]
    1ef0:	add	x0, x0, #0x9
    1ef4:	str	x0, [x1, #24]
    1ef8:	ldr	w0, [x20, #144]
    1efc:	cmp	w0, w21
    1f00:	b.ls	2224 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x554>  // b.plast
    1f04:	cmp	w0, #0x40
    1f08:	ldr	x0, [x20, #136]
    1f0c:	b.ls	1f18 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x248>  // b.plast
    1f10:	lsr	w21, w21, #6
    1f14:	ldr	x0, [x0, x21, lsl #3]
    1f18:	tst	x22, x0
    1f1c:	mov	x0, x1
    1f20:	cset	x1, ne  // ne = any
    1f24:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1f28:	mov	x1, x0
    1f2c:	ldp	x3, x2, [x0, #16]
    1f30:	cmp	x3, x2
    1f34:	b.eq	21c0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4f0>  // b.none
    1f38:	mov	w0, #0x2c                  	// #44
    1f3c:	strb	w0, [x2]
    1f40:	ldr	x0, [x1, #24]
    1f44:	add	x0, x0, #0x1
    1f48:	str	x0, [x1, #24]
    1f4c:	mov	x0, x28
    1f50:	bl	0 <_ZNK4llvm3mca8WriteRef4dumpEv>
    1f54:	bl	0 <_ZN4llvm4dbgsEv>
    1f58:	mov	x1, x0
    1f5c:	ldp	x3, x2, [x0, #16]
    1f60:	cmp	x3, x2
    1f64:	b.ls	21b4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4e4>  // b.plast
    1f68:	add	x0, x2, #0x1
    1f6c:	str	x0, [x1, #24]
    1f70:	mov	w0, #0xa                   	// #10
    1f74:	strb	w0, [x2]
    1f78:	add	x19, x19, #0x1
    1f7c:	cmp	w23, w19
    1f80:	b.hi	1d28 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x58>  // b.pmore
    1f84:	ldp	x27, x28, [sp, #80]
    1f88:	ldr	w24, [x20, #24]
    1f8c:	cbz	w24, 2160 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x490>
    1f90:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1f94:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1f98:	adrp	x22, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    1f9c:	add	x25, x25, #0x0
    1fa0:	add	x23, x23, #0x0
    1fa4:	add	x22, x22, #0x0
    1fa8:	mov	x21, #0x0                   	// #0
    1fac:	mov	x19, #0x0                   	// #0
    1fb0:	b	20ac <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3dc>
    1fb4:	ldr	x0, [x25]
    1fb8:	str	x0, [x3]
    1fbc:	ldur	x0, [x25, #7]
    1fc0:	stur	x0, [x3, #7]
    1fc4:	ldr	x0, [x1, #24]
    1fc8:	add	x0, x0, #0xf
    1fcc:	str	x0, [x1, #24]
    1fd0:	mov	x0, x1
    1fd4:	mov	x1, x19
    1fd8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1fdc:	ldr	w0, [x20, #24]
    1fe0:	cmp	w0, w19
    1fe4:	b.ls	2200 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x530>  // b.plast
    1fe8:	ldr	x26, [x20, #16]
    1fec:	bl	0 <_ZN4llvm4dbgsEv>
    1ff0:	ldp	x1, x3, [x0, #16]
    1ff4:	add	x26, x26, x21
    1ff8:	mov	x2, x0
    1ffc:	sub	x1, x1, x3
    2000:	cmp	x1, #0x18
    2004:	b.ls	218c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4bc>  // b.plast
    2008:	ldp	x0, x1, [x23]
    200c:	stp	x0, x1, [x3]
    2010:	ldrb	w0, [x23, #24]
    2014:	ldr	x1, [x23, #16]
    2018:	str	x1, [x3, #16]
    201c:	strb	w0, [x3, #24]
    2020:	ldr	x0, [x2, #24]
    2024:	add	x0, x0, #0x19
    2028:	str	x0, [x2, #24]
    202c:	ldr	w1, [x26]
    2030:	mov	x0, x2
    2034:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2038:	mov	x2, x0
    203c:	ldp	x1, x3, [x0, #16]
    2040:	sub	x1, x1, x3
    2044:	cmp	x1, #0x18
    2048:	b.ls	2178 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4a8>  // b.plast
    204c:	ldp	x0, x1, [x22]
    2050:	stp	x0, x1, [x3]
    2054:	ldrb	w0, [x22, #24]
    2058:	ldr	x1, [x22, #16]
    205c:	str	x1, [x3, #16]
    2060:	strb	w0, [x3, #24]
    2064:	ldr	x0, [x2, #24]
    2068:	add	x0, x0, #0x19
    206c:	str	x0, [x2, #24]
    2070:	ldr	w1, [x26, #4]
    2074:	mov	x0, x2
    2078:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    207c:	mov	x1, x0
    2080:	ldp	x3, x2, [x0, #16]
    2084:	cmp	x2, x3
    2088:	b.cs	2148 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x478>  // b.hs, b.nlast
    208c:	add	x0, x2, #0x1
    2090:	str	x0, [x1, #24]
    2094:	mov	w0, #0xa                   	// #10
    2098:	strb	w0, [x2]
    209c:	add	x19, x19, #0x1
    20a0:	add	x21, x21, #0x14
    20a4:	cmp	w24, w19
    20a8:	b.ls	2160 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x490>  // b.plast
    20ac:	bl	0 <_ZN4llvm4dbgsEv>
    20b0:	mov	x1, x0
    20b4:	ldp	x2, x3, [x0, #16]
    20b8:	sub	x2, x2, x3
    20bc:	cmp	x2, #0xe
    20c0:	b.hi	1fb4 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x2e4>  // b.pmore
    20c4:	mov	x1, x25
    20c8:	mov	x2, #0xf                   	// #15
    20cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    20d0:	mov	x1, x0
    20d4:	b	1fd0 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x300>
    20d8:	mov	x0, x27
    20dc:	mov	x1, x26
    20e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    20e4:	mov	x27, x0
    20e8:	ldp	x3, x0, [x27, #16]
    20ec:	sub	x3, x3, x0
    20f0:	cmp	x3, #0x1
    20f4:	b.hi	1dd8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x108>  // b.pmore
    20f8:	mov	x2, #0x2                   	// #2
    20fc:	mov	x0, x27
    2100:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2104:	add	x1, x1, #0x0
    2108:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    210c:	mov	x27, x0
    2110:	mov	x1, x19
    2114:	mov	x0, x27
    2118:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    211c:	mov	x1, x0
    2120:	ldp	x2, x3, [x0, #16]
    2124:	sub	x2, x2, x3
    2128:	cmp	x2, #0x5
    212c:	b.hi	1e0c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x13c>  // b.pmore
    2130:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2134:	add	x1, x1, #0x0
    2138:	mov	x2, #0x6                   	// #6
    213c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2140:	mov	x1, x0
    2144:	b	1e30 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x160>
    2148:	add	x19, x19, #0x1
    214c:	mov	w1, #0xa                   	// #10
    2150:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    2154:	add	x21, x21, #0x14
    2158:	cmp	w24, w19
    215c:	b.hi	20ac <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3dc>  // b.pmore
    2160:	ldp	x19, x20, [sp, #16]
    2164:	ldp	x21, x22, [sp, #32]
    2168:	ldp	x23, x24, [sp, #48]
    216c:	ldp	x25, x26, [sp, #64]
    2170:	ldp	x29, x30, [sp], #112
    2174:	ret
    2178:	mov	x2, #0x19                  	// #25
    217c:	mov	x1, x22
    2180:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2184:	mov	x2, x0
    2188:	b	2070 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x3a0>
    218c:	mov	x2, #0x19                  	// #25
    2190:	mov	x1, x23
    2194:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2198:	mov	x2, x0
    219c:	b	202c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x35c>
    21a0:	mov	x1, x25
    21a4:	mov	x2, #0x9                   	// #9
    21a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21ac:	mov	x1, x0
    21b0:	b	1ef8 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x228>
    21b4:	mov	w1, #0xa                   	// #10
    21b8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    21bc:	b	1d1c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x4c>
    21c0:	ldr	x1, [sp, #96]
    21c4:	mov	x2, #0x1                   	// #1
    21c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21cc:	b	1f4c <_ZNK4llvm3mca12RegisterFile4dumpEv+0x27c>
    21d0:	mov	x2, #0xb                   	// #11
    21d4:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    21d8:	add	x1, x1, #0x0
    21dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21e0:	mov	x2, x0
    21e4:	b	1ebc <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1ec>
    21e8:	mov	x2, #0x7                   	// #7
    21ec:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    21f0:	add	x1, x1, #0x0
    21f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    21f8:	mov	x2, x0
    21fc:	b	1e78 <_ZNK4llvm3mca12RegisterFile4dumpEv+0x1a8>
    2200:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2204:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2208:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    220c:	add	x3, x3, #0x0
    2210:	add	x1, x1, #0x0
    2214:	add	x0, x0, #0x0
    2218:	mov	w2, #0x99                  	// #153
    221c:	stp	x27, x28, [sp, #80]
    2220:	bl	0 <__assert_fail>
    2224:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2228:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    222c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2230:	add	x3, x3, #0x0
    2234:	add	x1, x1, #0x0
    2238:	add	x0, x0, #0x0
    223c:	mov	w2, #0x472                 	// #1138
    2240:	bl	0 <__assert_fail>
    2244:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2248:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    224c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2250:	add	x3, x3, #0x0
    2254:	add	x1, x1, #0x0
    2258:	add	x0, x0, #0x0
    225c:	mov	w2, #0x1b8                 	// #440
    2260:	bl	0 <__assert_fail>
    2264:	nop

0000000000002268 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>:
    2268:	stp	x29, x30, [sp, #-96]!
    226c:	mov	x29, sp
    2270:	stp	x19, x20, [sp, #16]
    2274:	ldrh	w19, [x1, #8]
    2278:	stp	x21, x22, [sp, #32]
    227c:	stp	x23, x24, [sp, #48]
    2280:	cbz	w19, 2a54 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7ec>
    2284:	mov	x24, x0
    2288:	and	x22, x19, #0xffff
    228c:	ldp	x1, x0, [x0, #112]
    2290:	sub	x0, x0, x1
    2294:	asr	x0, x0, #5
    2298:	cmp	x0, w19, uxth
    229c:	b.ls	2a54 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7ec>  // b.plast
    22a0:	adrp	x20, 0 <_ZN4llvm9DebugFlagE>
    22a4:	stp	x25, x26, [sp, #64]
    22a8:	mov	x23, x2
    22ac:	ldr	x0, [x20]
    22b0:	ldrb	w0, [x0]
    22b4:	cbnz	w0, 27b4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x54c>
    22b8:	ubfiz	x21, x19, #5, #16
    22bc:	add	x21, x1, x21
    22c0:	ldrh	w0, [x21, #26]
    22c4:	cbnz	w0, 2444 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1dc>
    22c8:	ldr	x0, [x21, #8]
    22cc:	cbz	x0, 2324 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xbc>
    22d0:	adrp	x0, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    22d4:	ldr	w1, [x21]
    22d8:	ldr	x0, [x0]
    22dc:	ldr	w0, [x0]
    22e0:	cmp	w0, w1
    22e4:	b.eq	2324 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0xbc>  // b.none
    22e8:	ldp	w0, w1, [x23, #8]
    22ec:	cmp	w0, w1
    22f0:	b.cs	29b4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x74c>  // b.hs, b.nlast
    22f4:	ldr	x1, [x23]
    22f8:	ubfiz	x0, x0, #4, #32
    22fc:	ldp	x2, x3, [x21]
    2300:	add	x0, x1, x0
    2304:	stp	x2, x3, [x0]
    2308:	ldp	w0, w2, [x23, #8]
    230c:	mov	w1, w0
    2310:	add	x1, x1, #0x1
    2314:	cmp	x1, x2
    2318:	b.hi	27dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x574>  // b.pmore
    231c:	add	w0, w0, #0x1
    2320:	str	w0, [x23, #8]
    2324:	ldr	x0, [x24, #8]
    2328:	ldr	w1, [x0, #8]
    232c:	ldr	x2, [x0]
    2330:	cmp	w19, w1
    2334:	ldr	x1, [x0, #48]
    2338:	b.cs	2a1c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7b4>  // b.hs, b.nlast
    233c:	add	x22, x22, x22, lsl #1
    2340:	add	x22, x2, x22, lsl #3
    2344:	ldr	w0, [x22, #4]
    2348:	lsl	x0, x0, #1
    234c:	adds	x2, x1, x0
    2350:	b.eq	2a7c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x814>  // b.none
    2354:	ldrh	w0, [x1, x0]
    2358:	adrp	x25, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    235c:	add	x2, x2, #0x2
    2360:	ldr	w1, [x23, #8]
    2364:	cmp	w0, #0x0
    2368:	add	w19, w19, w0
    236c:	csel	x2, x2, xzr, ne  // ne = any
    2370:	and	w19, w19, #0xffff
    2374:	ldr	x25, [x25]
    2378:	mov	x22, x2
    237c:	nop
    2380:	cbz	x22, 2400 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x198>
    2384:	ldr	x4, [x24, #112]
    2388:	ubfiz	x3, x19, #5, #16
    238c:	add	x21, x4, x3
    2390:	ldr	x2, [x21, #8]
    2394:	cbz	x2, 23e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x17c>
    2398:	ldr	w2, [x4, x3]
    239c:	ldr	w0, [x25]
    23a0:	cmp	w2, w0
    23a4:	b.eq	23e4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x17c>  // b.none
    23a8:	ldr	w0, [x23, #12]
    23ac:	cmp	w0, w1
    23b0:	b.ls	2430 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1c8>  // b.plast
    23b4:	ldr	x0, [x23]
    23b8:	ubfiz	x1, x1, #4, #32
    23bc:	ldp	x2, x3, [x21]
    23c0:	add	x1, x0, x1
    23c4:	stp	x2, x3, [x1]
    23c8:	ldp	w1, w0, [x23, #8]
    23cc:	mov	w2, w1
    23d0:	add	x2, x2, #0x1
    23d4:	cmp	x2, x0
    23d8:	b.hi	27dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x574>  // b.pmore
    23dc:	add	w1, w1, #0x1
    23e0:	str	w1, [x23, #8]
    23e4:	ldrh	w3, [x22], #2
    23e8:	mov	x2, #0x0                   	// #0
    23ec:	add	w19, w19, w3
    23f0:	and	w19, w19, #0xffff
    23f4:	cbnz	w3, 2380 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x118>
    23f8:	mov	x22, x2
    23fc:	b	2380 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x118>
    2400:	cmp	w1, #0x1
    2404:	mov	w1, w1
    2408:	b.hi	2458 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1f0>  // b.pmore
    240c:	ldr	x20, [x20]
    2410:	ldrb	w0, [x20]
    2414:	cbnz	w0, 2638 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3d0>
    2418:	ldp	x19, x20, [sp, #16]
    241c:	ldp	x21, x22, [sp, #32]
    2420:	ldp	x23, x24, [sp, #48]
    2424:	ldp	x25, x26, [sp, #64]
    2428:	ldp	x29, x30, [sp], #96
    242c:	ret
    2430:	mov	x1, #0x0                   	// #0
    2434:	mov	x0, x23
    2438:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    243c:	ldr	w1, [x23, #8]
    2440:	b	23b4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x14c>
    2444:	ubfiz	x21, x0, #5, #16
    2448:	and	x22, x0, #0xffff
    244c:	add	x21, x1, x21
    2450:	mov	w19, w0
    2454:	b	22c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x60>
    2458:	lsl	x19, x1, #4
    245c:	mov	w2, #0x3f                  	// #63
    2460:	ldr	x22, [x23]
    2464:	asr	x1, x19, #4
    2468:	clz	x1, x1
    246c:	mov	w3, #0x0                   	// #0
    2470:	sub	w2, w2, w1
    2474:	add	x21, x22, x19
    2478:	mov	x1, x21
    247c:	mov	x0, x22
    2480:	sbfiz	x2, x2, #1, #32
    2484:	bl	158 <_ZSt16__introsort_loopIPN4llvm3mca8WriteRefElN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_T1_>
    2488:	cmp	x19, #0x100
    248c:	b.ls	2954 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6ec>  // b.plast
    2490:	add	x1, x22, #0x100
    2494:	mov	x0, x22
    2498:	bl	350 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>
    249c:	cmp	x21, x1
    24a0:	b.eq	24f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x28c>  // b.none
    24a4:	nop
    24a8:	ldur	x0, [x1, #-8]
    24ac:	sub	x3, x1, #0x10
    24b0:	ldr	x4, [x1, #8]
    24b4:	ldr	w6, [x1]
    24b8:	cmp	x4, x0
    24bc:	b.cs	2964 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6fc>  // b.hs, b.nlast
    24c0:	ldr	w2, [x3]
    24c4:	mov	x5, x3
    24c8:	sub	x3, x3, #0x10
    24cc:	str	w2, [x3, #32]
    24d0:	str	x0, [x3, #40]
    24d4:	ldr	x0, [x3, #8]
    24d8:	cmp	x4, x0
    24dc:	b.cc	24c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x258>  // b.lo, b.ul, b.last
    24e0:	str	w6, [x5]
    24e4:	add	x1, x1, #0x10
    24e8:	str	x4, [x5, #8]
    24ec:	cmp	x21, x1
    24f0:	b.ne	24a8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x240>  // b.any
    24f4:	ldr	x6, [x23]
    24f8:	ldr	w5, [x23, #8]
    24fc:	add	x4, x6, x5, lsl #4
    2500:	cmp	x6, x4
    2504:	b.eq	296c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x704>  // b.none
    2508:	add	x0, x6, #0x10
    250c:	mov	x19, #0x1                   	// #1
    2510:	cmp	x4, x0
    2514:	mov	x21, x19
    2518:	mov	x22, #0x10                  	// #16
    251c:	b.eq	25d0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x368>  // b.none
    2520:	ldr	w3, [x6]
    2524:	b	2534 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2cc>
    2528:	add	x0, x0, #0x10
    252c:	cmp	x4, x0
    2530:	b.eq	25c4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x35c>  // b.none
    2534:	mov	x1, x0
    2538:	mov	w2, w3
    253c:	ldr	w3, [x1], #-16
    2540:	cmp	w3, w2
    2544:	b.ne	2528 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2c0>  // b.any
    2548:	ldur	x8, [x0, #-8]
    254c:	ldr	x7, [x0, #8]
    2550:	cmp	x8, x7
    2554:	b.ne	2528 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x2c0>  // b.any
    2558:	cmp	x4, x1
    255c:	b.eq	2a40 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7d8>  // b.none
    2560:	add	x0, x0, #0x10
    2564:	cmp	x4, x0
    2568:	b.ne	258c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x324>  // b.any
    256c:	b	25c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x358>
    2570:	str	w3, [x1, #16]
    2574:	add	x0, x0, #0x10
    2578:	str	x5, [x1, #24]
    257c:	cmp	x4, x0
    2580:	add	x1, x1, #0x10
    2584:	b.eq	25b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x350>  // b.none
    2588:	ldr	w2, [x1]
    258c:	ldr	w3, [x0]
    2590:	ldr	x5, [x0, #8]
    2594:	cmp	w3, w2
    2598:	b.ne	2570 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x308>  // b.any
    259c:	ldr	x2, [x1, #8]
    25a0:	cmp	x2, x5
    25a4:	b.ne	2570 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x308>  // b.any
    25a8:	add	x0, x0, #0x10
    25ac:	cmp	x4, x0
    25b0:	b.ne	2588 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x320>  // b.any
    25b4:	nop
    25b8:	ldr	w5, [x23, #8]
    25bc:	ldr	x6, [x23]
    25c0:	add	x0, x1, #0x10
    25c4:	sub	x22, x0, x6
    25c8:	asr	x21, x22, #4
    25cc:	mov	x19, x21
    25d0:	cmp	x5, x19
    25d4:	b.hi	27d0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x568>  // b.pmore
    25d8:	cmp	x19, x5
    25dc:	b.ls	240c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1a4>  // b.plast
    25e0:	ldr	w1, [x23, #12]
    25e4:	cmp	x19, x1
    25e8:	b.hi	29f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x78c>  // b.pmore
    25ec:	add	x2, x6, x5, lsl #4
    25f0:	cmp	x2, x0
    25f4:	b.eq	2628 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3c0>  // b.none
    25f8:	adrp	x1, 0 <_ZN4llvm3mca8WriteRef11INVALID_IIDE>
    25fc:	ldr	x1, [x1]
    2600:	ldr	w1, [x1]
    2604:	nop
    2608:	str	w1, [x2]
    260c:	add	x2, x2, #0x10
    2610:	stur	xzr, [x2, #-8]
    2614:	cmp	x2, x0
    2618:	b.ne	2608 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3a0>  // b.any
    261c:	ldr	w0, [x23, #12]
    2620:	cmp	x19, x0
    2624:	b.hi	27dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x574>  // b.pmore
    2628:	str	w21, [x23, #8]
    262c:	ldr	x20, [x20]
    2630:	ldrb	w0, [x20]
    2634:	cbz	w0, 2418 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b0>
    2638:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    263c:	add	x0, x0, #0x0
    2640:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2644:	tst	w0, #0xff
    2648:	b.eq	2418 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b0>  // b.none
    264c:	ldr	x20, [x23]
    2650:	ldr	w21, [x23, #8]
    2654:	add	x21, x20, x21, lsl #4
    2658:	cmp	x20, x21
    265c:	b.eq	2418 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1b0>  // b.none
    2660:	adrp	x23, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2664:	adrp	x22, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2668:	adrp	x25, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    266c:	add	x23, x23, #0x0
    2670:	add	x22, x22, #0x0
    2674:	add	x25, x25, #0x0
    2678:	str	x27, [sp, #80]
    267c:	nop
    2680:	ldr	x26, [x20, #8]
    2684:	bl	0 <_ZN4llvm4dbgsEv>
    2688:	ldp	x1, x2, [x0, #16]
    268c:	mov	x19, x0
    2690:	sub	x1, x1, x2
    2694:	cmp	x1, #0x27
    2698:	b.ls	2940 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6d8>  // b.plast
    269c:	ldp	x0, x1, [x23]
    26a0:	stp	x0, x1, [x2]
    26a4:	ldp	x0, x1, [x23, #16]
    26a8:	stp	x0, x1, [x2, #16]
    26ac:	ldr	x0, [x23, #32]
    26b0:	str	x0, [x2, #32]
    26b4:	ldr	x0, [x19, #24]
    26b8:	add	x0, x0, #0x28
    26bc:	str	x0, [x19, #24]
    26c0:	ldr	x1, [x24, #8]
    26c4:	ldrh	w0, [x26, #12]
    26c8:	ldr	w3, [x1, #8]
    26cc:	ldr	x2, [x1]
    26d0:	cmp	w0, w3
    26d4:	ldr	x1, [x1, #64]
    26d8:	b.cs	2a20 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7b8>  // b.hs, b.nlast
    26dc:	mov	w3, #0x18                  	// #24
    26e0:	umull	x0, w0, w3
    26e4:	ldr	w26, [x2, x0]
    26e8:	adds	x26, x1, x26
    26ec:	b.eq	28c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x660>  // b.none
    26f0:	mov	x0, x26
    26f4:	bl	0 <strlen>
    26f8:	mov	x27, x0
    26fc:	ldp	x3, x0, [x19, #16]
    2700:	sub	x3, x3, x0
    2704:	cmp	x27, x3
    2708:	b.hi	28b4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x64c>  // b.pmore
    270c:	cbz	x27, 272c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4c4>
    2710:	mov	x1, x26
    2714:	mov	x2, x27
    2718:	bl	0 <memcpy>
    271c:	ldp	x3, x1, [x19, #16]
    2720:	add	x0, x1, x27
    2724:	str	x0, [x19, #24]
    2728:	sub	x3, x3, x0
    272c:	cmp	x3, #0x19
    2730:	b.ls	28d8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x670>  // b.plast
    2734:	ldp	x2, x3, [x22]
    2738:	stp	x2, x3, [x0]
    273c:	ldrh	w1, [x22, #24]
    2740:	ldr	x2, [x22, #16]
    2744:	str	x2, [x0, #16]
    2748:	strh	w1, [x0, #24]
    274c:	ldr	x0, [x19, #24]
    2750:	ldr	w1, [x20]
    2754:	add	x0, x0, #0x1a
    2758:	str	x0, [x19, #24]
    275c:	mov	x0, x19
    2760:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2764:	mov	x1, x0
    2768:	ldp	x2, x3, [x0, #16]
    276c:	sub	x2, x2, x3
    2770:	cmp	x2, #0x1
    2774:	b.ls	290c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x6a4>  // b.plast
    2778:	mov	w0, #0xa29                 	// #2601
    277c:	strh	w0, [x3]
    2780:	add	x20, x20, #0x10
    2784:	ldr	x0, [x1, #24]
    2788:	cmp	x21, x20
    278c:	add	x0, x0, #0x2
    2790:	str	x0, [x1, #24]
    2794:	b.ne	2680 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x418>  // b.any
    2798:	ldp	x19, x20, [sp, #16]
    279c:	ldp	x21, x22, [sp, #32]
    27a0:	ldp	x23, x24, [sp, #48]
    27a4:	ldp	x25, x26, [sp, #64]
    27a8:	ldr	x27, [sp, #80]
    27ac:	ldp	x29, x30, [sp], #96
    27b0:	ret
    27b4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27b8:	add	x0, x0, #0x0
    27bc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    27c0:	tst	w0, #0xff
    27c4:	b.ne	2800 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x598>  // b.any
    27c8:	ldr	x1, [x24, #112]
    27cc:	b	22b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x50>
    27d0:	ldr	w0, [x23, #12]
    27d4:	cmp	x0, x19
    27d8:	b.cs	2628 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3c0>  // b.hs, b.nlast
    27dc:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27e0:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27e4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    27e8:	add	x3, x3, #0x0
    27ec:	add	x1, x1, #0x0
    27f0:	add	x0, x0, #0x0
    27f4:	mov	w2, #0x43                  	// #67
    27f8:	str	x27, [sp, #80]
    27fc:	bl	0 <__assert_fail>
    2800:	bl	0 <_ZN4llvm4dbgsEv>
    2804:	mov	x21, x0
    2808:	ldp	x1, x2, [x0, #16]
    280c:	sub	x1, x1, x2
    2810:	cmp	x1, #0x2c
    2814:	b.ls	29dc <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x774>  // b.plast
    2818:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    281c:	add	x3, x3, #0x0
    2820:	ldr	x0, [x3, #32]
    2824:	str	x0, [x2, #32]
    2828:	ldp	x0, x1, [x3]
    282c:	stp	x0, x1, [x2]
    2830:	ldp	x0, x1, [x3, #16]
    2834:	stp	x0, x1, [x2, #16]
    2838:	ldur	x0, [x3, #37]
    283c:	stur	x0, [x2, #37]
    2840:	ldr	x0, [x21, #24]
    2844:	add	x0, x0, #0x2d
    2848:	str	x0, [x21, #24]
    284c:	ldr	x0, [x24, #8]
    2850:	ldr	w1, [x0, #8]
    2854:	ldr	x2, [x0]
    2858:	cmp	w19, w1
    285c:	ldr	x0, [x0, #64]
    2860:	b.cs	2a1c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x7b4>  // b.hs, b.nlast
    2864:	mov	w1, #0x18                  	// #24
    2868:	umull	x1, w19, w1
    286c:	ldr	w25, [x2, x1]
    2870:	adds	x25, x0, x25
    2874:	b.eq	2990 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x728>  // b.none
    2878:	mov	x0, x25
    287c:	bl	0 <strlen>
    2880:	mov	x26, x0
    2884:	ldp	x1, x0, [x21, #16]
    2888:	sub	x2, x1, x0
    288c:	cmp	x26, x2
    2890:	b.hi	297c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x714>  // b.pmore
    2894:	cbz	x26, 2994 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x72c>
    2898:	mov	x1, x25
    289c:	mov	x2, x26
    28a0:	bl	0 <memcpy>
    28a4:	ldp	x1, x0, [x21, #16]
    28a8:	add	x0, x0, x26
    28ac:	str	x0, [x21, #24]
    28b0:	b	2994 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x72c>
    28b4:	mov	x0, x19
    28b8:	mov	x2, x27
    28bc:	mov	x1, x26
    28c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    28c4:	mov	x19, x0
    28c8:	ldp	x3, x0, [x19, #16]
    28cc:	sub	x3, x3, x0
    28d0:	cmp	x3, #0x19
    28d4:	b.hi	2734 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x4cc>  // b.pmore
    28d8:	mov	x2, #0x1a                  	// #26
    28dc:	mov	x0, x19
    28e0:	mov	x1, x22
    28e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    28e8:	ldr	w1, [x20]
    28ec:	mov	x19, x0
    28f0:	mov	x0, x19
    28f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    28f8:	mov	x1, x0
    28fc:	ldp	x2, x3, [x0, #16]
    2900:	sub	x2, x2, x3
    2904:	cmp	x2, #0x1
    2908:	b.hi	2778 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x510>  // b.pmore
    290c:	add	x20, x20, #0x10
    2910:	mov	x1, x25
    2914:	mov	x2, #0x2                   	// #2
    2918:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    291c:	cmp	x21, x20
    2920:	b.eq	2798 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x530>  // b.none
    2924:	ldr	x26, [x20, #8]
    2928:	bl	0 <_ZN4llvm4dbgsEv>
    292c:	ldp	x1, x2, [x0, #16]
    2930:	mov	x19, x0
    2934:	sub	x1, x1, x2
    2938:	cmp	x1, #0x27
    293c:	b.hi	269c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x434>  // b.pmore
    2940:	mov	x1, x23
    2944:	mov	x2, #0x28                  	// #40
    2948:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    294c:	mov	x19, x0
    2950:	b	26c0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x458>
    2954:	mov	x1, x21
    2958:	mov	x0, x22
    295c:	bl	350 <_ZSt16__insertion_sortIPN4llvm3mca8WriteRefEN9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_SI_T0_.isra.0>
    2960:	b	24f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x28c>
    2964:	mov	x5, x1
    2968:	b	24e0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x278>
    296c:	mov	x21, #0x0                   	// #0
    2970:	cbz	x5, 240c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x1a4>
    2974:	str	w21, [x23, #8]
    2978:	b	262c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3c4>
    297c:	mov	x0, x21
    2980:	mov	x2, x26
    2984:	mov	x1, x25
    2988:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    298c:	mov	x21, x0
    2990:	ldp	x1, x0, [x21, #16]
    2994:	cmp	x1, x0
    2998:	b.ls	29c8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x760>  // b.plast
    299c:	add	x1, x0, #0x1
    29a0:	str	x1, [x21, #24]
    29a4:	mov	w1, #0xa                   	// #10
    29a8:	strb	w1, [x0]
    29ac:	ldr	x1, [x24, #112]
    29b0:	b	22b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x50>
    29b4:	mov	x0, x23
    29b8:	mov	x1, #0x0                   	// #0
    29bc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    29c0:	ldr	w0, [x23, #8]
    29c4:	b	22f4 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x8c>
    29c8:	mov	w1, #0xa                   	// #10
    29cc:	mov	x0, x21
    29d0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    29d4:	ldr	x1, [x24, #112]
    29d8:	b	22b8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x50>
    29dc:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    29e0:	mov	x2, #0x2d                  	// #45
    29e4:	add	x1, x1, #0x0
    29e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    29ec:	mov	x21, x0
    29f0:	b	284c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x5e4>
    29f4:	mov	x1, x19
    29f8:	mov	x0, x23
    29fc:	bl	0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a00:	ldr	x1, [x23]
    2a04:	ldr	w2, [x23, #8]
    2a08:	add	x0, x1, x22
    2a0c:	add	x2, x1, x2, lsl #4
    2a10:	cmp	x2, x0
    2a14:	b.ne	25f8 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x390>  // b.any
    2a18:	b	261c <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x3b4>
    2a1c:	str	x27, [sp, #80]
    2a20:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a24:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a28:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a2c:	add	x3, x3, #0x0
    2a30:	add	x1, x1, #0x0
    2a34:	add	x0, x0, #0x0
    2a38:	mov	w2, #0x1b8                 	// #440
    2a3c:	bl	0 <__assert_fail>
    2a40:	sub	x22, x4, x6
    2a44:	mov	x0, x4
    2a48:	asr	x21, x22, #4
    2a4c:	mov	x19, x21
    2a50:	b	25d0 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE+0x368>
    2a54:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a58:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a5c:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a60:	add	x3, x3, #0x0
    2a64:	add	x1, x1, #0x0
    2a68:	add	x0, x0, #0x0
    2a6c:	mov	w2, #0x167                 	// #359
    2a70:	stp	x25, x26, [sp, #64]
    2a74:	str	x27, [sp, #80]
    2a78:	bl	0 <__assert_fail>
    2a7c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a80:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a84:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2a88:	add	x3, x3, #0x0
    2a8c:	add	x1, x1, #0x0
    2a90:	add	x0, x0, #0x0
    2a94:	mov	w2, #0xd1                  	// #209
    2a98:	str	x27, [sp, #80]
    2a9c:	bl	0 <__assert_fail>

0000000000002aa0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>:
    2aa0:	stp	x29, x30, [sp, #-160]!
    2aa4:	mov	x29, sp
    2aa8:	stp	x25, x26, [sp, #64]
    2aac:	mov	x26, x2
    2ab0:	ldrh	w2, [x1, #8]
    2ab4:	ldrb	w3, [x1, #42]
    2ab8:	stp	x23, x24, [sp, #48]
    2abc:	mov	x23, x1
    2ac0:	ubfiz	x4, x2, #5, #16
    2ac4:	ldr	x1, [x0, #112]
    2ac8:	add	x1, x1, x4
    2acc:	ldr	w1, [x1, #16]
    2ad0:	str	w1, [x23, #12]
    2ad4:	cbz	w3, 2ae8 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x48>
    2ad8:	ldp	x23, x24, [sp, #48]
    2adc:	ldp	x25, x26, [sp, #64]
    2ae0:	ldp	x29, x30, [sp], #160
    2ae4:	ret
    2ae8:	ldr	w3, [x0, #144]
    2aec:	stp	x19, x20, [sp, #16]
    2af0:	cmp	w2, w3
    2af4:	stp	x21, x22, [sp, #32]
    2af8:	b.cs	2c6c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1cc>  // b.hs, b.nlast
    2afc:	mov	x1, #0x1                   	// #1
    2b00:	cmp	w3, #0x40
    2b04:	lsl	x1, x1, x2
    2b08:	ldr	x3, [x0, #136]
    2b0c:	b.hi	2c48 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1a8>  // b.pmore
    2b10:	mov	x2, x3
    2b14:	tst	x1, x2
    2b18:	b.eq	2b24 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x84>  // b.none
    2b1c:	mov	w1, #0x1                   	// #1
    2b20:	strb	w1, [x23, #41]
    2b24:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2b28:	add	x21, sp, #0x50
    2b2c:	add	x3, x21, #0x10
    2b30:	mov	x2, x21
    2b34:	ldr	d0, [x1]
    2b38:	mov	x1, x23
    2b3c:	str	x3, [sp, #80]
    2b40:	str	d0, [sp, #88]
    2b44:	bl	2268 <_ZNK4llvm3mca12RegisterFile13collectWritesERKNS0_9ReadStateERNS_15SmallVectorImplINS0_8WriteRefEEE>
    2b48:	ldr	x0, [x26, #152]
    2b4c:	ldr	w1, [sp, #88]
    2b50:	ldr	x20, [x23]
    2b54:	cmp	w1, #0x0
    2b58:	ldr	x2, [x0, #40]
    2b5c:	cset	w3, eq  // eq = none
    2b60:	str	w1, [x23, #16]
    2b64:	strb	w3, [x23, #40]
    2b68:	ldr	w24, [x20, #12]
    2b6c:	cbz	x2, 2c8c <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1ec>
    2b70:	ldr	w0, [x0, #52]
    2b74:	cmp	w24, w0
    2b78:	b.cs	2cac <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x20c>  // b.hs, b.nlast
    2b7c:	ldr	x0, [sp, #80]
    2b80:	ubfiz	x1, x1, #4, #32
    2b84:	mov	w3, #0x18                  	// #24
    2b88:	add	x19, x0, x1
    2b8c:	umaddl	x24, w24, w3, x2
    2b90:	cmp	x19, x0
    2b94:	b.eq	2c18 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x178>  // b.none
    2b98:	mov	x22, x0
    2b9c:	mov	w25, #0xc                   	// #12
    2ba0:	ldr	x0, [x22, #8]
    2ba4:	ldrh	w3, [x24, #18]
    2ba8:	ldr	x4, [x26, #144]
    2bac:	ldrh	w5, [x24, #20]
    2bb0:	ldr	x1, [x0]
    2bb4:	umaddl	x3, w3, w25, x4
    2bb8:	ldr	w6, [x20, #4]
    2bbc:	umaddl	x5, w5, w25, x3
    2bc0:	ldr	w7, [x1, #12]
    2bc4:	cmp	x3, x5
    2bc8:	b.ne	2bdc <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x13c>  // b.any
    2bcc:	b	2c40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1a0>
    2bd0:	add	x3, x3, #0xc
    2bd4:	cmp	x5, x3
    2bd8:	b.eq	2c40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1a0>  // b.none
    2bdc:	ldr	w4, [x3]
    2be0:	cmp	w6, w4
    2be4:	b.hi	2bd0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x130>  // b.pmore
    2be8:	b.cc	2c40 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1a0>  // b.lo, b.ul, b.last
    2bec:	ldr	w4, [x3, #4]
    2bf0:	cmp	w4, #0x0
    2bf4:	ccmp	w4, w7, #0x4, ne  // ne = any
    2bf8:	b.ne	2bd0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x130>  // b.any
    2bfc:	ldr	w3, [x3, #8]
    2c00:	ldr	w1, [x22], #16
    2c04:	mov	x2, x23
    2c08:	bl	0 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>
    2c0c:	cmp	x19, x22
    2c10:	b.ne	2ba0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x100>  // b.any
    2c14:	ldr	x0, [sp, #80]
    2c18:	add	x21, x21, #0x10
    2c1c:	cmp	x0, x21
    2c20:	b.eq	2c54 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x1b4>  // b.none
    2c24:	bl	0 <free>
    2c28:	ldp	x19, x20, [sp, #16]
    2c2c:	ldp	x21, x22, [sp, #32]
    2c30:	ldp	x23, x24, [sp, #48]
    2c34:	ldp	x25, x26, [sp, #64]
    2c38:	ldp	x29, x30, [sp], #160
    2c3c:	ret
    2c40:	mov	w3, #0x0                   	// #0
    2c44:	b	2c00 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x160>
    2c48:	ubfx	x2, x2, #6, #10
    2c4c:	ldr	x2, [x3, x2, lsl #3]
    2c50:	b	2b14 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE+0x74>
    2c54:	ldp	x19, x20, [sp, #16]
    2c58:	ldp	x21, x22, [sp, #32]
    2c5c:	ldp	x23, x24, [sp, #48]
    2c60:	ldp	x25, x26, [sp, #64]
    2c64:	ldp	x29, x30, [sp], #160
    2c68:	ret
    2c6c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2c70:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2c74:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2c78:	add	x3, x3, #0x0
    2c7c:	add	x1, x1, #0x0
    2c80:	add	x0, x0, #0x0
    2c84:	mov	w2, #0x472                 	// #1138
    2c88:	bl	0 <__assert_fail>
    2c8c:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2c90:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2c94:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2c98:	add	x3, x3, #0x0
    2c9c:	add	x1, x1, #0x0
    2ca0:	add	x0, x0, #0x0
    2ca4:	mov	w2, #0x15b                 	// #347
    2ca8:	bl	0 <__assert_fail>
    2cac:	adrp	x3, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2cb0:	adrp	x1, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2cb4:	adrp	x0, 0 <_ZSt13__adjust_heapIPN4llvm3mca8WriteRefElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNKS1_12RegisterFile13collectWritesERKNS1_9ReadStateERNS0_15SmallVectorImplIS2_EEEUlRKS2_SF_E_EEEvT_T0_SJ_T1_T2_.isra.0>
    2cb8:	add	x3, x3, #0x0
    2cbc:	add	x1, x1, #0x0
    2cc0:	add	x0, x0, #0x0
    2cc4:	mov	w2, #0x15d                 	// #349
    2cc8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD2Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #144]
  1c:	add	x1, x1, #0x10
  20:	cmp	w0, #0x40
  24:	str	x1, [x19]
  28:	b.ls	38 <_ZN4llvm3mca12RegisterFileD1Ev+0x38>  // b.plast
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD1Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD1Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x1, x19, #0x20
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD1Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	ldr	x19, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca12RegisterFileD0Ev:

0000000000000000 <_ZN4llvm3mca12RegisterFileD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca12RegisterFileD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	w0, [x0, #144]
  1c:	add	x1, x1, #0x10
  20:	cmp	w0, #0x40
  24:	str	x1, [x19]
  28:	b.ls	38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>  // b.plast
  2c:	ldr	x0, [x19, #136]
  30:	cbz	x0, 38 <_ZN4llvm3mca12RegisterFileD0Ev+0x38>
  34:	bl	0 <_ZdaPv>
  38:	ldr	x0, [x19, #112]
  3c:	cbz	x0, 44 <_ZN4llvm3mca12RegisterFileD0Ev+0x44>
  40:	bl	0 <_ZdlPv>
  44:	ldr	x0, [x19, #16]
  48:	add	x1, x19, #0x20
  4c:	cmp	x0, x1
  50:	b.eq	58 <_ZN4llvm3mca12RegisterFileD0Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  60:	mov	x0, x19
  64:	mov	x1, #0x98                  	// #152
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w4, [x1]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x3, [x1, #-8]
  a4:	str	w4, [x2]
  a8:	str	x3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca8WriteRefELb0EE4growEm+0x28>

ResourceManager.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>:
       0:	ldr	x2, [x0, #16]
       4:	cmp	x2, x1
       8:	b.cc	2c <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x2c>  // b.lo, b.ul, b.last
       c:	bic	x1, x2, x1
      10:	str	x1, [x0, #16]
      14:	cbnz	x1, 28 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm+0x28>
      18:	ldr	x1, [x0, #8]
      1c:	ldr	x2, [x0, #24]
      20:	eor	x1, x1, x2
      24:	stp	x1, xzr, [x0, #16]
      28:	ret
      2c:	ldr	x2, [x0, #24]
      30:	orr	x1, x2, x1
      34:	str	x1, [x0, #24]
      38:	ret
      3c:	nop

0000000000000040 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm>:
      40:	ldr	x3, [x0, #16]
      44:	mov	x2, x0
      48:	ands	x0, x3, x1
      4c:	b.ne	94 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x54>  // b.any
      50:	ldr	x4, [x2, #8]
      54:	ldr	x3, [x2, #24]
      58:	str	xzr, [x2, #24]
      5c:	eor	x3, x4, x3
      60:	ands	x0, x1, x3
      64:	b.ne	94 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x54>  // b.any
      68:	str	x4, [x2, #16]
      6c:	ands	x1, x1, x4
      70:	b.eq	b4 <_ZN4llvm3mca23DefaultResourceStrategy6selectEm+0x74>  // b.none
      74:	clz	x1, x1
      78:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
      7c:	lsr	x0, x0, x1
      80:	sub	x1, x0, #0x1
      84:	orr	x1, x1, x0
      88:	and	x4, x1, x4
      8c:	str	x4, [x2, #16]
      90:	ret
      94:	clz	x0, x0
      98:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
      9c:	lsr	x0, x1, x0
      a0:	sub	x1, x0, #0x1
      a4:	orr	x1, x1, x0
      a8:	and	x3, x1, x3
      ac:	str	x3, [x2, #16]
      b0:	ret
      b4:	stp	x29, x30, [sp, #-16]!
      b8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      bc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      c0:	mov	x29, sp
      c4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      c8:	add	x3, x3, #0x0
      cc:	add	x1, x1, #0x0
      d0:	add	x0, x0, #0x0
      d4:	mov	w2, #0x64                  	// #100
      d8:	bl	0 <__assert_fail>
      dc:	nop

00000000000000e0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE15allocateBucketsEj.isra.0.part.0>:
      e0:	stp	x29, x30, [sp, #-16]!
      e4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      e8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      ec:	mov	x29, sp
      f0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
      f4:	add	x3, x3, #0x0
      f8:	add	x1, x1, #0x0
      fc:	add	x0, x0, #0x0
     100:	mov	w2, #0x47d                 	// #1149
     104:	bl	0 <__assert_fail>

0000000000000108 <_ZN4llvm3mca15ResourceManager15releaseResourceEm.part.0>:
     108:	stp	x29, x30, [sp, #-16]!
     10c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     110:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     114:	mov	x29, sp
     118:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     11c:	add	x3, x3, #0x0
     120:	add	x1, x1, #0x0
     124:	add	x0, x0, #0x0
     128:	mov	w2, #0x64                  	// #100
     12c:	bl	0 <__assert_fail>

0000000000000130 <_ZN4llvm3mca16ResourceStrategyD1Ev>:
     130:	ret
     134:	nop

0000000000000138 <_ZN4llvm3mca16ResourceStrategyD0Ev>:
     138:	stp	x29, x30, [sp, #-32]!
     13c:	mov	x29, sp
     140:	str	x19, [sp, #16]
     144:	mov	x19, x0
     148:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
     14c:	mov	x0, x19
     150:	mov	x1, #0x8                   	// #8
     154:	ldr	x19, [sp, #16]
     158:	ldp	x29, x30, [sp], #32
     15c:	b	0 <_ZdlPvm>

0000000000000160 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>:
     160:	fmov	d1, x3
     164:	str	w2, [x0]
     168:	ldr	w3, [x1, #16]
     16c:	cnt	v0.8b, v1.8b
     170:	str	d1, [x0, #8]
     174:	str	w3, [x0, #32]
     178:	addv	b0, v0.8b
     17c:	umov	w2, v0.b[0]
     180:	cmp	w2, #0x1
     184:	cset	w4, hi  // hi = pmore
     188:	strb	w4, [x0, #41]
     18c:	b.le	1c8 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x68>
     190:	fmov	x1, d1
     194:	cbz	x1, 1f4 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm+0x94>
     198:	clz	x2, x1
     19c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
     1a0:	cmn	w3, #0x1
     1a4:	strb	wzr, [x0, #40]
     1a8:	lsr	x1, x1, x2
     1ac:	fmov	x2, d1
     1b0:	csel	w3, w3, wzr, ne  // ne = any
     1b4:	str	w3, [x0, #36]
     1b8:	eor	x1, x1, x2
     1bc:	str	x1, [x0, #16]
     1c0:	str	x1, [x0, #24]
     1c4:	ret
     1c8:	ldr	w2, [x1, #8]
     1cc:	cmn	w3, #0x1
     1d0:	mov	x1, #0x1                   	// #1
     1d4:	csel	w3, w3, wzr, ne  // ne = any
     1d8:	str	w3, [x0, #36]
     1dc:	lsl	x1, x1, x2
     1e0:	sub	x1, x1, #0x1
     1e4:	str	x1, [x0, #16]
     1e8:	str	x1, [x0, #24]
     1ec:	strb	wzr, [x0, #40]
     1f0:	ret
     1f4:	stp	x29, x30, [sp, #-16]!
     1f8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     1fc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     200:	mov	x29, sp
     204:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     208:	add	x3, x3, #0x0
     20c:	add	x1, x1, #0x0
     210:	add	x0, x0, #0x0
     214:	mov	w2, #0x64                  	// #100
     218:	bl	0 <__assert_fail>
     21c:	nop

0000000000000220 <_ZNK4llvm3mca13ResourceState7isReadyEj>:
     220:	mov	x2, x0
     224:	ldrb	w0, [x0, #40]
     228:	cbz	w0, 238 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x18>
     22c:	ldr	w3, [x2, #32]
     230:	mov	w0, #0x0                   	// #0
     234:	cbnz	w3, 250 <_ZNK4llvm3mca13ResourceState7isReadyEj+0x30>
     238:	ldr	d0, [x2, #24]
     23c:	cnt	v0.8b, v0.8b
     240:	addv	b0, v0.8b
     244:	umov	w0, v0.b[0]
     248:	cmp	w1, w0
     24c:	cset	w0, ls  // ls = plast
     250:	ret
     254:	nop

0000000000000258 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>:
     258:	ldr	w1, [x0, #32]
     25c:	cmp	w1, #0x0
     260:	cbnz	w1, 278 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x20>
     264:	ldrb	w0, [x0, #40]
     268:	cmp	w0, #0x0
     26c:	cset	w0, ne  // ne = any
     270:	lsl	w0, w0, #1
     274:	ret
     278:	b.le	28c <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv+0x34>
     27c:	ldr	w0, [x0, #36]
     280:	cmp	w0, #0x0
     284:	cset	w0, eq  // eq = none
     288:	ret
     28c:	mov	w0, #0x0                   	// #0
     290:	ret
     294:	nop

0000000000000298 <_ZNK4llvm3mca13ResourceState4dumpEv>:
     298:	stp	x29, x30, [sp, #-112]!
     29c:	mov	x29, sp
     2a0:	str	x19, [sp, #16]
     2a4:	mov	x19, x0
     2a8:	bl	0 <_ZN4llvm4dbgsEv>
     2ac:	ldp	x2, x3, [x0, #16]
     2b0:	sub	x2, x2, x3
     2b4:	cmp	x2, #0x4
     2b8:	b.ls	4c4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x22c>  // b.plast
     2bc:	mov	x1, x0
     2c0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     2c4:	add	x0, x0, #0x0
     2c8:	ldr	w2, [x0]
     2cc:	ldrb	w0, [x0, #4]
     2d0:	str	w2, [x3]
     2d4:	strb	w0, [x3, #4]
     2d8:	ldr	x0, [x1, #24]
     2dc:	add	x0, x0, #0x5
     2e0:	str	x0, [x1, #24]
     2e4:	ldr	x4, [x19, #8]
     2e8:	mov	w2, #0x1                   	// #1
     2ec:	mov	w3, #0x10                  	// #16
     2f0:	mov	x0, x1
     2f4:	add	x1, sp, #0x28
     2f8:	stp	x4, xzr, [sp, #40]
     2fc:	str	w3, [sp, #56]
     300:	strh	w2, [sp, #60]
     304:	strb	w2, [sp, #62]
     308:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     30c:	ldp	x2, x3, [x0, #16]
     310:	mov	x1, x0
     314:	sub	x2, x2, x3
     318:	cmp	x2, #0x8
     31c:	b.ls	550 <_ZNK4llvm3mca13ResourceState4dumpEv+0x2b8>  // b.plast
     320:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     324:	add	x0, x0, #0x0
     328:	ldr	x2, [x0]
     32c:	str	x2, [x3]
     330:	ldrb	w0, [x0, #8]
     334:	strb	w0, [x3, #8]
     338:	ldr	x0, [x1, #24]
     33c:	add	x0, x0, #0x9
     340:	str	x0, [x1, #24]
     344:	ldr	x4, [x19, #16]
     348:	mov	w2, #0x1                   	// #1
     34c:	mov	w3, #0x10                  	// #16
     350:	mov	x0, x1
     354:	add	x1, sp, #0x40
     358:	stp	x4, xzr, [sp, #64]
     35c:	str	w3, [sp, #80]
     360:	strh	w2, [sp, #84]
     364:	strb	w2, [sp, #86]
     368:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     36c:	ldp	x2, x3, [x0, #16]
     370:	mov	x1, x0
     374:	sub	x2, x2, x3
     378:	cmp	x2, #0x9
     37c:	b.ls	538 <_ZNK4llvm3mca13ResourceState4dumpEv+0x2a0>  // b.plast
     380:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     384:	add	x0, x0, #0x0
     388:	ldr	x2, [x0]
     38c:	str	x2, [x3]
     390:	ldrh	w0, [x0, #8]
     394:	strh	w0, [x3, #8]
     398:	ldr	x0, [x1, #24]
     39c:	add	x0, x0, #0xa
     3a0:	str	x0, [x1, #24]
     3a4:	ldr	x4, [x19, #24]
     3a8:	mov	w2, #0x1                   	// #1
     3ac:	mov	w3, #0x10                  	// #16
     3b0:	mov	x0, x1
     3b4:	add	x1, sp, #0x58
     3b8:	stp	x4, xzr, [sp, #88]
     3bc:	str	w3, [sp, #104]
     3c0:	strh	w2, [sp, #108]
     3c4:	strb	w2, [sp, #110]
     3c8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     3cc:	ldp	x1, x3, [x0, #16]
     3d0:	mov	x2, x0
     3d4:	sub	x1, x1, x3
     3d8:	cmp	x1, #0xc
     3dc:	b.ls	520 <_ZNK4llvm3mca13ResourceState4dumpEv+0x288>  // b.plast
     3e0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     3e4:	add	x0, x0, #0x0
     3e8:	ldr	x1, [x0]
     3ec:	str	x1, [x3]
     3f0:	ldur	x0, [x0, #5]
     3f4:	stur	x0, [x3, #5]
     3f8:	ldr	x0, [x2, #24]
     3fc:	add	x0, x0, #0xd
     400:	str	x0, [x2, #24]
     404:	ldrsw	x1, [x19, #32]
     408:	mov	x0, x2
     40c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     410:	mov	x2, x0
     414:	ldp	x1, x3, [x0, #16]
     418:	sub	x1, x1, x3
     41c:	cmp	x1, #0x10
     420:	b.ls	508 <_ZNK4llvm3mca13ResourceState4dumpEv+0x270>  // b.plast
     424:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     428:	add	x0, x0, #0x0
     42c:	ldp	x4, x5, [x0]
     430:	stp	x4, x5, [x3]
     434:	ldrb	w0, [x0, #16]
     438:	strb	w0, [x3, #16]
     43c:	ldr	x0, [x2, #24]
     440:	add	x0, x0, #0x11
     444:	str	x0, [x2, #24]
     448:	ldr	w1, [x19, #36]
     44c:	mov	x0, x2
     450:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     454:	mov	x2, x0
     458:	ldp	x1, x3, [x0, #16]
     45c:	sub	x1, x1, x3
     460:	cmp	x1, #0xa
     464:	b.ls	4f0 <_ZNK4llvm3mca13ResourceState4dumpEv+0x258>  // b.plast
     468:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     46c:	add	x0, x0, #0x0
     470:	ldr	x1, [x0]
     474:	str	x1, [x3]
     478:	ldur	w0, [x0, #7]
     47c:	stur	w0, [x3, #7]
     480:	ldr	x0, [x2, #24]
     484:	add	x0, x0, #0xb
     488:	str	x0, [x2, #24]
     48c:	ldrb	w1, [x19, #40]
     490:	mov	x0, x2
     494:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     498:	mov	x1, x0
     49c:	ldp	x3, x2, [x0, #16]
     4a0:	cmp	x2, x3
     4a4:	b.cs	4dc <_ZNK4llvm3mca13ResourceState4dumpEv+0x244>  // b.hs, b.nlast
     4a8:	add	x0, x2, #0x1
     4ac:	str	x0, [x1, #24]
     4b0:	mov	w0, #0xa                   	// #10
     4b4:	strb	w0, [x2]
     4b8:	ldr	x19, [sp, #16]
     4bc:	ldp	x29, x30, [sp], #112
     4c0:	ret
     4c4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4c8:	add	x1, x1, #0x0
     4cc:	mov	x2, #0x5                   	// #5
     4d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4d4:	mov	x1, x0
     4d8:	b	2e4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x4c>
     4dc:	mov	w1, #0xa                   	// #10
     4e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     4e4:	ldr	x19, [sp, #16]
     4e8:	ldp	x29, x30, [sp], #112
     4ec:	ret
     4f0:	mov	x2, #0xb                   	// #11
     4f4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     4f8:	add	x1, x1, #0x0
     4fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     500:	mov	x2, x0
     504:	b	48c <_ZNK4llvm3mca13ResourceState4dumpEv+0x1f4>
     508:	mov	x2, #0x11                  	// #17
     50c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     510:	add	x1, x1, #0x0
     514:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     518:	mov	x2, x0
     51c:	b	448 <_ZNK4llvm3mca13ResourceState4dumpEv+0x1b0>
     520:	mov	x2, #0xd                   	// #13
     524:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     528:	add	x1, x1, #0x0
     52c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     530:	mov	x2, x0
     534:	b	404 <_ZNK4llvm3mca13ResourceState4dumpEv+0x16c>
     538:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     53c:	add	x1, x1, #0x0
     540:	mov	x2, #0xa                   	// #10
     544:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     548:	mov	x1, x0
     54c:	b	3a4 <_ZNK4llvm3mca13ResourceState4dumpEv+0x10c>
     550:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     554:	add	x1, x1, #0x0
     558:	mov	x2, #0x9                   	// #9
     55c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     560:	mov	x1, x0
     564:	b	344 <_ZNK4llvm3mca13ResourceState4dumpEv+0xac>

0000000000000568 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE>:
     568:	stp	x29, x30, [sp, #-112]!
     56c:	adrp	x2, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     570:	mov	x29, sp
     574:	stp	x21, x22, [sp, #32]
     578:	mov	x21, x0
     57c:	stp	x27, x28, [sp, #80]
     580:	mov	x28, x1
     584:	ldr	x1, [x2]
     588:	stp	x19, x20, [sp, #16]
     58c:	mov	x19, x0
     590:	stp	x23, x24, [sp, #48]
     594:	add	x1, x1, #0x10
     598:	ldr	w0, [x28, #48]
     59c:	str	x1, [x21], #8
     5a0:	str	xzr, [x19, #8]
     5a4:	sub	w22, w0, #0x1
     5a8:	stp	xzr, xzr, [x21, #8]
     5ac:	ubfiz	x20, x22, #3, #32
     5b0:	cbz	w22, b0c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5a4>
     5b4:	mov	x0, x20
     5b8:	bl	0 <_Znwm>
     5bc:	str	x0, [x19, #8]
     5c0:	add	x20, x0, x20
     5c4:	str	x20, [x21, #16]
     5c8:	sub	x1, x22, #0x1
     5cc:	mov	x2, x0
     5d0:	cmp	x1, #0x2
     5d4:	b.ls	b54 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5ec>  // b.plast
     5d8:	movi	v0.4s, #0x0
     5dc:	lsr	x1, x22, #1
     5e0:	add	x1, x0, x1, lsl #4
     5e4:	nop
     5e8:	str	q0, [x0], #16
     5ec:	cmp	x1, x0
     5f0:	b.ne	5e8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x80>  // b.any
     5f4:	and	x0, x22, #0xfffffffffffffffe
     5f8:	and	x1, x22, #0x1
     5fc:	cmp	x22, x0
     600:	add	x2, x2, x0, lsl #3
     604:	b.eq	624 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xbc>  // b.none
     608:	str	xzr, [x2]
     60c:	cmp	x1, #0x1
     610:	b.eq	624 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xbc>  // b.none
     614:	str	xzr, [x2, #8]
     618:	cmp	x1, #0x2
     61c:	b.eq	624 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xbc>  // b.none
     620:	str	xzr, [x2, #16]
     624:	movi	v0.4s, #0x0
     628:	mov	x22, x19
     62c:	ldr	w0, [x28, #48]
     630:	str	x20, [x19, #16]
     634:	sub	w21, w0, #0x1
     638:	str	q0, [x22, #32]!
     63c:	ubfiz	x20, x21, #3, #32
     640:	str	xzr, [x22, #16]
     644:	cbz	w21, b1c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5b4>
     648:	mov	x0, x20
     64c:	bl	0 <_Znwm>
     650:	str	x0, [x19, #32]
     654:	add	x20, x0, x20
     658:	str	x20, [x22, #16]
     65c:	sub	x1, x21, #0x1
     660:	mov	x2, x0
     664:	cmp	x1, #0x2
     668:	b.ls	b5c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5f4>  // b.plast
     66c:	movi	v0.4s, #0x0
     670:	lsr	x1, x21, #1
     674:	add	x1, x0, x1, lsl #4
     678:	str	q0, [x0], #16
     67c:	cmp	x1, x0
     680:	b.ne	678 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x110>  // b.any
     684:	and	x0, x21, #0xfffffffffffffffe
     688:	and	x1, x21, #0x1
     68c:	cmp	x21, x0
     690:	add	x0, x2, x0, lsl #3
     694:	b.eq	6b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x14c>  // b.none
     698:	str	xzr, [x0]
     69c:	cmp	x1, #0x1
     6a0:	b.eq	6b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x14c>  // b.none
     6a4:	str	xzr, [x0, #8]
     6a8:	cmp	x1, #0x2
     6ac:	b.eq	6b4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x14c>  // b.none
     6b0:	str	xzr, [x0, #16]
     6b4:	mov	x23, x19
     6b8:	ldr	w0, [x28, #48]
     6bc:	add	x21, x2, x21, lsl #3
     6c0:	str	x21, [x19, #40]
     6c4:	sub	w0, w0, #0x1
     6c8:	stp	xzr, xzr, [x23, #56]!
     6cc:	ubfiz	x20, x0, #3, #32
     6d0:	str	xzr, [x23, #16]
     6d4:	cbz	w0, b2c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5c4>
     6d8:	mov	x0, x20
     6dc:	bl	0 <_Znwm>
     6e0:	str	x0, [x19, #56]
     6e4:	mov	x2, x20
     6e8:	add	x20, x0, x20
     6ec:	str	x20, [x23, #16]
     6f0:	mov	w1, #0x0                   	// #0
     6f4:	bl	0 <memset>
     6f8:	ldr	w21, [x28, #48]
     6fc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     700:	add	x1, x19, #0x60
     704:	str	x20, [x19, #64]
     708:	cmp	w21, #0x8
     70c:	ldr	d0, [x0]
     710:	mov	w20, w21
     714:	str	x1, [x19, #80]
     718:	str	d0, [x19, #88]
     71c:	b.hi	ac8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x560>  // b.pmore
     720:	ldr	x0, [x19, #80]
     724:	str	w21, [x19, #88]
     728:	add	x2, x0, x20, lsl #3
     72c:	cmp	x0, x2
     730:	b.eq	740 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1d8>  // b.none
     734:	sub	x2, x2, x0
     738:	mov	w1, #0x0                   	// #0
     73c:	bl	0 <memset>
     740:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     744:	ldr	w21, [x28, #48]
     748:	add	x1, x19, #0xb0
     74c:	str	x1, [x19, #160]
     750:	ldr	d0, [x0]
     754:	sub	w20, w21, #0x1
     758:	mov	x21, x20
     75c:	cmp	w20, #0x8
     760:	mov	x0, #0x8                   	// #8
     764:	str	d0, [x19, #168]
     768:	b.hi	ab0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x548>  // b.pmore
     76c:	cmp	x20, x0
     770:	b.hi	ae4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x57c>  // b.pmore
     774:	ldr	x0, [x19, #160]
     778:	str	w21, [x19, #168]
     77c:	add	x2, x0, x20, lsl #2
     780:	cmp	x0, x2
     784:	b.eq	794 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x22c>  // b.none
     788:	sub	x2, x2, x0
     78c:	mov	w1, #0x0                   	// #0
     790:	bl	0 <memset>
     794:	mov	x0, #0x1                   	// #1
     798:	stp	xzr, x0, [x19, #208]
     79c:	cbnz	x0, aa4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x53c>
     7a0:	ldr	w1, [x19, #232]
     7a4:	sub	w0, w1, #0x1
     7a8:	tst	w0, w1
     7ac:	b.ne	b64 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x5fc>  // b.any
     7b0:	mov	w2, #0x18                  	// #24
     7b4:	ldr	x0, [x19, #224]
     7b8:	umull	x1, w1, w2
     7bc:	mvni	v0.4s, #0x0
     7c0:	add	x1, x0, x1
     7c4:	cmp	x0, x1
     7c8:	b.eq	7dc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x274>  // b.none
     7cc:	nop
     7d0:	str	q0, [x0], #24
     7d4:	cmp	x1, x0
     7d8:	b.ne	7d0 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x268>  // b.any
     7dc:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     7e0:	ldr	w2, [x19, #88]
     7e4:	ldr	x1, [x19, #80]
     7e8:	str	xzr, [x19, #320]
     7ec:	ldr	q0, [x0]
     7f0:	str	xzr, [x19, #352]
     7f4:	mov	x0, x28
     7f8:	str	q0, [x19, #336]
     7fc:	bl	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     800:	ldr	w3, [x28, #48]
     804:	cmp	w3, #0x1
     808:	b.ls	a84 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x51c>  // b.plast
     80c:	mov	x2, #0x1                   	// #1
     810:	mov	w4, #0x3f                  	// #63
     814:	stp	x25, x26, [sp, #64]
     818:	str	d8, [sp, #96]
     81c:	nop
     820:	ldr	w0, [x19, #88]
     824:	cmp	x0, x2
     828:	b.ls	b8c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x624>  // b.plast
     82c:	ldr	x0, [x19, #80]
     830:	ldr	x0, [x0, x2, lsl #3]
     834:	cbz	x0, a5c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4f4>
     838:	ldr	w1, [x19, #168]
     83c:	clz	x0, x0
     840:	sub	w0, w4, w0
     844:	cmp	x0, x1
     848:	b.cs	bac <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x644>  // b.hs, b.nlast
     84c:	ldr	x1, [x19, #160]
     850:	str	w2, [x1, x0, lsl #2]
     854:	add	x2, x2, #0x1
     858:	cmp	w3, w2
     85c:	b.hi	820 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x2b8>  // b.pmore
     860:	ldr	w22, [x28, #48]
     864:	cmp	w22, #0x1
     868:	b.ls	a7c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x514>  // b.plast
     86c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     870:	adrp	x24, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     874:	mov	x20, #0x1                   	// #1
     878:	add	x24, x24, #0x0
     87c:	ldr	x23, [x0]
     880:	add	x23, x23, #0x10
     884:	b	8b8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x350>
     888:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     88c:	ldr	x1, [x0]
     890:	mov	x0, x26
     894:	add	x1, x1, #0x10
     898:	str	x1, [x26]
     89c:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
     8a0:	mov	x0, x26
     8a4:	mov	x1, #0x20                  	// #32
     8a8:	bl	0 <_ZdlPvm>
     8ac:	add	x20, x20, #0x1
     8b0:	cmp	w22, w20
     8b4:	b.ls	9ac <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x444>  // b.plast
     8b8:	ldr	w0, [x19, #88]
     8bc:	cmp	x20, x0
     8c0:	b.cs	b8c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x624>  // b.hs, b.nlast
     8c4:	ldr	x0, [x19, #80]
     8c8:	ldr	x26, [x0, x20, lsl #3]
     8cc:	cbz	x26, a5c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4f4>
     8d0:	ldr	x0, [x28, #40]
     8d4:	clz	x21, x26
     8d8:	mov	w2, #0x3f                  	// #63
     8dc:	sub	w21, w2, w21
     8e0:	ldr	x25, [x19, #8]
     8e4:	cbz	x0, bdc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x674>
     8e8:	ldr	w0, [x28, #48]
     8ec:	cmp	w20, w0
     8f0:	b.cs	bbc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x654>  // b.hs, b.nlast
     8f4:	ldr	x27, [x28, #32]
     8f8:	mov	x0, #0x30                  	// #48
     8fc:	bl	0 <_Znwm>
     900:	mov	x3, x26
     904:	mov	w2, w20
     908:	add	x27, x27, x20, lsl #5
     90c:	mov	x26, x0
     910:	mov	x1, x27
     914:	bl	160 <_ZN4llvm3mca13ResourceStateC1ERKNS_18MCProcResourceDescEjm>
     918:	ldr	x0, [x25, x21, lsl #3]
     91c:	str	x26, [x25, x21, lsl #3]
     920:	cbz	x0, 92c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3c4>
     924:	mov	x1, #0x30                  	// #48
     928:	bl	0 <_ZdlPvm>
     92c:	ldr	x0, [x19, #8]
     930:	ldr	x27, [x19, #32]
     934:	ldr	x1, [x0, x21, lsl #3]
     938:	ldrb	w0, [x1, #41]
     93c:	cbnz	w0, 95c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x3f4>
     940:	ldr	d0, [x1, #16]
     944:	mov	x2, #0x0                   	// #0
     948:	cnt	v0.8b, v0.8b
     94c:	addv	b0, v0.8b
     950:	umov	w0, v0.b[0]
     954:	cmp	w0, #0x1
     958:	b.le	97c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x414>
     95c:	ldr	d8, [x1, #24]
     960:	mov	x0, #0x20                  	// #32
     964:	bl	0 <_Znwm>
     968:	mov	x2, x0
     96c:	dup	v0.2d, v8.d[0]
     970:	str	x23, [x0]
     974:	str	xzr, [x0, #24]
     978:	stur	q0, [x0, #8]
     97c:	ldr	x26, [x27, x21, lsl #3]
     980:	str	x2, [x27, x21, lsl #3]
     984:	cbz	x26, 8ac <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x344>
     988:	ldr	x0, [x26]
     98c:	ldr	x1, [x0, #8]
     990:	cmp	x1, x24
     994:	b.eq	888 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x320>  // b.none
     998:	mov	x0, x26
     99c:	add	x20, x20, #0x1
     9a0:	blr	x1
     9a4:	cmp	w22, w20
     9a8:	b.hi	8b8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x350>  // b.pmore
     9ac:	ldr	w8, [x28, #48]
     9b0:	cmp	w8, #0x1
     9b4:	b.ls	a7c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x514>  // b.plast
     9b8:	mov	x7, #0x1                   	// #1
     9bc:	ldr	w9, [x19, #88]
     9c0:	mov	x10, x7
     9c4:	mov	w0, #0x3f                  	// #63
     9c8:	b	9e4 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x47c>
     9cc:	ldr	x2, [x19, #320]
     9d0:	orr	x1, x2, x1
     9d4:	str	x1, [x19, #320]
     9d8:	add	x7, x7, #0x1
     9dc:	cmp	w8, w7
     9e0:	b.ls	a7c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x514>  // b.plast
     9e4:	cmp	x9, x7
     9e8:	b.ls	b8c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x624>  // b.plast
     9ec:	ldr	x1, [x19, #80]
     9f0:	ldr	x1, [x1, x7, lsl #3]
     9f4:	cbz	x1, a5c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4f4>
     9f8:	clz	x4, x1
     9fc:	ldr	x2, [x19, #8]
     a00:	sub	w3, w0, w4
     a04:	sub	w4, w0, w4
     a08:	ldr	x2, [x2, x3, lsl #3]
     a0c:	ldrb	w2, [x2, #41]
     a10:	cbz	w2, 9cc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x464>
     a14:	lsl	x4, x10, x4
     a18:	subs	x2, x1, x4
     a1c:	b.eq	9d8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x470>  // b.none
     a20:	sub	x1, x4, x1
     a24:	ands	x1, x1, x2
     a28:	b.eq	a5c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4f4>  // b.none
     a2c:	ldr	x5, [x19, #56]
     a30:	clz	x3, x1
     a34:	sub	w3, w0, w3
     a38:	cmp	x1, x2
     a3c:	eor	x2, x2, x1
     a40:	ldr	x1, [x5, x3, lsl #3]
     a44:	orr	x1, x1, x4
     a48:	str	x1, [x5, x3, lsl #3]
     a4c:	b.eq	9d8 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x470>  // b.none
     a50:	neg	x1, x2
     a54:	ands	x1, x1, x2
     a58:	b.ne	a30 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x4c8>  // b.any
     a5c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a60:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a64:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     a68:	add	x3, x3, #0x0
     a6c:	add	x1, x1, #0x0
     a70:	add	x0, x0, #0x0
     a74:	mov	w2, #0x64                  	// #100
     a78:	bl	0 <__assert_fail>
     a7c:	ldp	x25, x26, [sp, #64]
     a80:	ldr	d8, [sp, #96]
     a84:	ldr	x0, [x19, #320]
     a88:	ldp	x21, x22, [sp, #32]
     a8c:	ldp	x23, x24, [sp, #48]
     a90:	ldp	x27, x28, [sp, #80]
     a94:	str	x0, [x19, #328]
     a98:	ldp	x19, x20, [sp, #16]
     a9c:	ldp	x29, x30, [sp], #112
     aa0:	ret
     aa4:	add	x0, x19, #0xe0
     aa8:	mov	x1, #0x60                  	// #96
     aac:	b	7bc <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x254>
     ab0:	add	x0, x19, #0xa0
     ab4:	mov	x2, x20
     ab8:	mov	x3, #0x4                   	// #4
     abc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ac0:	ldr	w0, [x19, #172]
     ac4:	b	76c <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x204>
     ac8:	add	x0, x19, #0x50
     acc:	mov	x2, x20
     ad0:	mov	x3, #0x8                   	// #8
     ad4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     ad8:	ldr	w0, [x19, #92]
     adc:	cmp	x20, x0
     ae0:	b.ls	720 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1b8>  // b.plast
     ae4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     ae8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     aec:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     af0:	add	x3, x3, #0x0
     af4:	add	x1, x1, #0x0
     af8:	add	x0, x0, #0x0
     afc:	mov	w2, #0x43                  	// #67
     b00:	stp	x25, x26, [sp, #64]
     b04:	str	d8, [sp, #96]
     b08:	bl	0 <__assert_fail>
     b0c:	mov	x22, x19
     b10:	str	x20, [x21, #16]
     b14:	str	xzr, [x19, #16]
     b18:	stp	xzr, xzr, [x22, #32]!
     b1c:	mov	x23, x19
     b20:	str	x20, [x22, #16]
     b24:	str	xzr, [x19, #40]
     b28:	stp	xzr, xzr, [x23, #56]!
     b2c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b30:	str	x20, [x23, #16]
     b34:	mov	w21, #0x1                   	// #1
     b38:	ldr	d0, [x0]
     b3c:	mov	x20, #0x1                   	// #1
     b40:	add	x0, x19, #0x60
     b44:	str	xzr, [x19, #64]
     b48:	str	x0, [x19, #80]
     b4c:	str	d0, [x19, #88]
     b50:	b	720 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x1b8>
     b54:	mov	x1, x22
     b58:	b	608 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0xa0>
     b5c:	mov	x1, x21
     b60:	b	698 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x130>
     b64:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b68:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b6c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b70:	add	x3, x3, #0x0
     b74:	add	x1, x1, #0x0
     b78:	add	x0, x0, #0x0
     b7c:	mov	w2, #0x15b                 	// #347
     b80:	stp	x25, x26, [sp, #64]
     b84:	str	d8, [sp, #96]
     b88:	bl	0 <__assert_fail>
     b8c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b90:	add	x3, x3, #0x0
     b94:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b98:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     b9c:	add	x1, x1, #0x0
     ba0:	add	x0, x0, #0x0
     ba4:	mov	w2, #0x95                  	// #149
     ba8:	bl	0 <__assert_fail>
     bac:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bb0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bb4:	add	x3, x3, #0x0
     bb8:	b	b98 <_ZN4llvm3mca15ResourceManagerC1ERKNS_12MCSchedModelE+0x630>
     bbc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bc0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bc4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     bc8:	add	x3, x3, #0x0
     bcc:	add	x1, x1, #0x0
     bd0:	add	x0, x0, #0x0
     bd4:	mov	w2, #0x156                 	// #342
     bd8:	bl	0 <__assert_fail>
     bdc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     be0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     be4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     be8:	add	x3, x3, #0x0
     bec:	add	x1, x1, #0x0
     bf0:	add	x0, x0, #0x0
     bf4:	mov	w2, #0x154                 	// #340
     bf8:	bl	0 <__assert_fail>
     bfc:	nop

0000000000000c00 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm>:
     c00:	stp	x29, x30, [sp, #-32]!
     c04:	mov	x29, sp
     c08:	str	x19, [sp, #16]
     c0c:	cbz	x2, ccc <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xcc>
     c10:	ldp	x5, x4, [x0, #8]
     c14:	mov	w3, #0x3f                  	// #63
     c18:	clz	x2, x2
     c1c:	sub	w2, w3, w2
     c20:	sub	x3, x4, x5
     c24:	cmp	x2, x3, asr #3
     c28:	b.cs	cac <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xac>  // b.hs, b.nlast
     c2c:	ldr	x3, [x1]
     c30:	cbz	x3, cec <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0xec>
     c34:	ldr	x0, [x0, #32]
     c38:	str	xzr, [x1]
     c3c:	ldr	x19, [x0, x2, lsl #3]
     c40:	str	x3, [x0, x2, lsl #3]
     c44:	cbz	x19, c8c <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x8c>
     c48:	ldr	x1, [x19]
     c4c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c50:	add	x0, x0, #0x0
     c54:	ldr	x1, [x1, #8]
     c58:	cmp	x1, x0
     c5c:	b.ne	c98 <_ZN4llvm3mca15ResourceManager21setCustomStrategyImplESt10unique_ptrINS0_16ResourceStrategyESt14default_deleteIS3_EEm+0x98>  // b.any
     c60:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     c64:	mov	x0, x19
     c68:	ldr	x1, [x1]
     c6c:	add	x1, x1, #0x10
     c70:	str	x1, [x19]
     c74:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
     c78:	mov	x0, x19
     c7c:	mov	x1, #0x20                  	// #32
     c80:	ldr	x19, [sp, #16]
     c84:	ldp	x29, x30, [sp], #32
     c88:	b	0 <_ZdlPvm>
     c8c:	ldr	x19, [sp, #16]
     c90:	ldp	x29, x30, [sp], #32
     c94:	ret
     c98:	mov	x0, x19
     c9c:	mov	x16, x1
     ca0:	ldr	x19, [sp, #16]
     ca4:	ldp	x29, x30, [sp], #32
     ca8:	br	x16
     cac:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cb0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cb4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cb8:	add	x3, x3, #0x0
     cbc:	add	x1, x1, #0x0
     cc0:	add	x0, x0, #0x0
     cc4:	mov	w2, #0xa1                  	// #161
     cc8:	bl	0 <__assert_fail>
     ccc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cd0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cd4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cd8:	add	x3, x3, #0x0
     cdc:	add	x1, x1, #0x0
     ce0:	add	x0, x0, #0x0
     ce4:	mov	w2, #0x64                  	// #100
     ce8:	bl	0 <__assert_fail>
     cec:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cf0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cf4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     cf8:	add	x3, x3, #0x0
     cfc:	add	x1, x1, #0x0
     d00:	add	x0, x0, #0x0
     d04:	mov	w2, #0xa2                  	// #162
     d08:	bl	0 <__assert_fail>
     d0c:	nop

0000000000000d10 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>:
     d10:	stp	x29, x30, [sp, #-16]!
     d14:	mov	x29, sp
     d18:	cbz	x1, d44 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x34>
     d1c:	ldr	w3, [x0, #168]
     d20:	clz	x1, x1
     d24:	mov	w2, #0x3f                  	// #63
     d28:	sub	w1, w2, w1
     d2c:	cmp	x1, x3
     d30:	b.cs	d64 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm+0x54>  // b.hs, b.nlast
     d34:	ldr	x0, [x0, #160]
     d38:	ldp	x29, x30, [sp], #16
     d3c:	ldr	w0, [x0, x1, lsl #2]
     d40:	ret
     d44:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d48:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d4c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d50:	add	x3, x3, #0x0
     d54:	add	x1, x1, #0x0
     d58:	add	x0, x0, #0x0
     d5c:	mov	w2, #0x64                  	// #100
     d60:	bl	0 <__assert_fail>
     d64:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d68:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d6c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     d70:	add	x3, x3, #0x0
     d74:	add	x1, x1, #0x0
     d78:	add	x0, x0, #0x0
     d7c:	mov	w2, #0x99                  	// #153
     d80:	bl	0 <__assert_fail>
     d84:	nop

0000000000000d88 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm>:
     d88:	cbz	x1, dc4 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x3c>
     d8c:	clz	x1, x1
     d90:	mov	w2, #0x3f                  	// #63
     d94:	ldr	x3, [x0, #8]
     d98:	sub	w1, w2, w1
     d9c:	mov	w0, #0x1                   	// #1
     da0:	ldr	x1, [x3, x1, lsl #3]
     da4:	ldrb	w2, [x1, #41]
     da8:	cbz	w2, db0 <_ZNK4llvm3mca15ResourceManager11getNumUnitsEm+0x28>
     dac:	ret
     db0:	ldr	d0, [x1, #16]
     db4:	cnt	v0.8b, v0.8b
     db8:	addv	b0, v0.8b
     dbc:	umov	w0, v0.b[0]
     dc0:	ret
     dc4:	stp	x29, x30, [sp, #-16]!
     dc8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     dcc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     dd0:	mov	x29, sp
     dd4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     dd8:	add	x3, x3, #0x0
     ddc:	add	x1, x1, #0x0
     de0:	add	x0, x0, #0x0
     de4:	mov	w2, #0x64                  	// #100
     de8:	bl	0 <__assert_fail>
     dec:	nop

0000000000000df0 <_ZN4llvm3mca15ResourceManager10selectPipeEm>:
     df0:	stp	x29, x30, [sp, #-80]!
     df4:	mov	x29, sp
     df8:	stp	x19, x20, [sp, #16]
     dfc:	adrp	x20, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     e00:	add	x20, x20, #0x0
     e04:	stp	x23, x24, [sp, #48]
     e08:	mov	x24, x1
     e0c:	str	x25, [sp, #64]
     e10:	mov	x25, x0
     e14:	stp	x21, x22, [sp, #32]
     e18:	mov	w21, #0x3f                  	// #63
     e1c:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
     e20:	cbz	x24, f4c <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x15c>
     e24:	ldp	x0, x2, [x25, #8]
     e28:	clz	x19, x24
     e2c:	sub	w19, w21, w19
     e30:	sub	x2, x2, x0
     e34:	cmp	x19, x2, asr #3
     e38:	b.cs	f8c <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x19c>  // b.hs, b.nlast
     e3c:	ldr	x23, [x0, x19, lsl #3]
     e40:	mov	w1, #0x1                   	// #1
     e44:	mov	x0, x23
     e48:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
     e4c:	tst	w0, #0xff
     e50:	b.eq	f6c <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x17c>  // b.none
     e54:	ldrb	w3, [x23, #41]
     e58:	cbnz	w3, e74 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x84>
     e5c:	ldr	d0, [x23, #16]
     e60:	cnt	v0.8b, v0.8b
     e64:	addv	b0, v0.8b
     e68:	umov	w2, v0.b[0]
     e6c:	cmp	w2, #0x1
     e70:	b.eq	f28 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x138>  // b.none
     e74:	ldr	x0, [x25, #32]
     e78:	ldr	x1, [x23, #24]
     e7c:	ldr	x0, [x0, x19, lsl #3]
     e80:	ldr	x2, [x0]
     e84:	ldr	x2, [x2, #16]
     e88:	cmp	x2, x20
     e8c:	b.ne	f18 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x128>  // b.any
     e90:	ldr	x4, [x0, #16]
     e94:	ands	x2, x1, x4
     e98:	b.ne	ee0 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xf0>  // b.any
     e9c:	ldr	x5, [x0, #8]
     ea0:	ldr	x4, [x0, #24]
     ea4:	str	xzr, [x0, #24]
     ea8:	eor	x4, x5, x4
     eac:	ands	x2, x1, x4
     eb0:	b.ne	ee0 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xf0>  // b.any
     eb4:	ands	x1, x1, x5
     eb8:	b.eq	f48 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x158>  // b.none
     ebc:	clz	x1, x1
     ec0:	lsr	x1, x22, x1
     ec4:	sub	x2, x1, #0x1
     ec8:	orr	x2, x2, x1
     ecc:	and	x5, x2, x5
     ed0:	str	x5, [x0, #16]
     ed4:	cbz	w3, efc <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x10c>
     ed8:	mov	x24, x1
     edc:	b	e20 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0x30>
     ee0:	clz	x1, x2
     ee4:	lsr	x1, x22, x1
     ee8:	sub	x2, x1, #0x1
     eec:	orr	x2, x2, x1
     ef0:	and	x4, x2, x4
     ef4:	str	x4, [x0, #16]
     ef8:	cbnz	w3, ed8 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xe8>
     efc:	mov	x0, x24
     f00:	ldp	x19, x20, [sp, #16]
     f04:	ldp	x21, x22, [sp, #32]
     f08:	ldp	x23, x24, [sp, #48]
     f0c:	ldr	x25, [sp, #64]
     f10:	ldp	x29, x30, [sp], #80
     f14:	ret
     f18:	blr	x2
     f1c:	mov	x1, x0
     f20:	ldrb	w3, [x23, #41]
     f24:	b	ed4 <_ZN4llvm3mca15ResourceManager10selectPipeEm+0xe4>
     f28:	mov	x0, x24
     f2c:	ldp	x19, x20, [sp, #16]
     f30:	ldr	x1, [x23, #24]
     f34:	ldp	x21, x22, [sp, #32]
     f38:	ldp	x23, x24, [sp, #48]
     f3c:	ldr	x25, [sp, #64]
     f40:	ldp	x29, x30, [sp], #80
     f44:	ret
     f48:	str	x5, [x0, #16]
     f4c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f50:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f54:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f58:	add	x3, x3, #0x0
     f5c:	add	x1, x1, #0x0
     f60:	add	x0, x0, #0x0
     f64:	mov	w2, #0x64                  	// #100
     f68:	bl	0 <__assert_fail>
     f6c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f70:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f74:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f78:	add	x3, x3, #0x0
     f7c:	add	x1, x1, #0x0
     f80:	add	x0, x0, #0x0
     f84:	mov	w2, #0xb5                  	// #181
     f88:	bl	0 <__assert_fail>
     f8c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f90:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f94:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
     f98:	add	x3, x3, #0x0
     f9c:	add	x1, x1, #0x0
     fa0:	add	x0, x0, #0x0
     fa4:	mov	w2, #0xb3                  	// #179
     fa8:	bl	0 <__assert_fail>
     fac:	nop

0000000000000fb0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>:
     fb0:	stp	x29, x30, [sp, #-48]!
     fb4:	mov	x29, sp
     fb8:	stp	x21, x22, [sp, #32]
     fbc:	mov	x22, x0
     fc0:	ldr	x0, [x1]
     fc4:	stp	x19, x20, [sp, #16]
     fc8:	cbz	x0, 10fc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x14c>
     fcc:	clz	x0, x0
     fd0:	mov	w21, #0x3f                  	// #63
     fd4:	ldr	x2, [x22, #8]
     fd8:	sub	w21, w21, w0
     fdc:	mov	x20, x1
     fe0:	ldr	x1, [x1, #8]
     fe4:	ldr	x19, [x2, x21, lsl #3]
     fe8:	ldr	x0, [x19, #24]
     fec:	tst	x1, x0
     ff0:	b.eq	10dc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
     ff4:	ldrb	w2, [x19, #41]
     ff8:	eor	x0, x1, x0
     ffc:	str	x0, [x19, #24]
    1000:	cbz	w2, 10ac <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xfc>
    1004:	mov	x0, x19
    1008:	mov	w1, #0x1                   	// #1
    100c:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
    1010:	tst	w0, #0xff
    1014:	b.ne	109c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xec>  // b.any
    1018:	ldr	x2, [x20]
    101c:	ldr	x0, [x22, #328]
    1020:	ldr	x1, [x22, #56]
    1024:	eor	x0, x0, x2
    1028:	str	x0, [x22, #328]
    102c:	ldr	x19, [x1, x21, lsl #3]
    1030:	cbz	x19, 109c <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xec>
    1034:	neg	x2, x19
    1038:	mov	w21, #0x3f                  	// #63
    103c:	ands	x2, x2, x19
    1040:	b.ne	1054 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0xa4>  // b.any
    1044:	b	10fc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x14c>
    1048:	neg	x2, x19
    104c:	ands	x2, x2, x19
    1050:	b.eq	10fc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x14c>  // b.none
    1054:	clz	x2, x2
    1058:	ldr	x0, [x22, #8]
    105c:	sub	w2, w21, w2
    1060:	ldr	x1, [x20]
    1064:	ldr	x4, [x0, x2, lsl #3]
    1068:	ldr	x3, [x4, #24]
    106c:	tst	x1, x3
    1070:	b.eq	10dc <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x12c>  // b.none
    1074:	ldr	x0, [x22, #32]
    1078:	eor	x3, x1, x3
    107c:	ldr	x0, [x0, x2, lsl #3]
    1080:	ldr	x2, [x0]
    1084:	ldr	x2, [x2, #24]
    1088:	str	x3, [x4, #24]
    108c:	blr	x2
    1090:	sub	x1, x19, #0x1
    1094:	ands	x19, x19, x1
    1098:	b.ne	1048 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x98>  // b.any
    109c:	ldp	x19, x20, [sp, #16]
    10a0:	ldp	x21, x22, [sp, #32]
    10a4:	ldp	x29, x30, [sp], #48
    10a8:	ret
    10ac:	ldr	d0, [x19, #16]
    10b0:	cnt	v0.8b, v0.8b
    10b4:	addv	b0, v0.8b
    10b8:	umov	w0, v0.b[0]
    10bc:	cmp	w0, #0x1
    10c0:	b.le	1004 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x54>
    10c4:	ldr	x0, [x22, #32]
    10c8:	ldr	x0, [x0, x21, lsl #3]
    10cc:	ldr	x2, [x0]
    10d0:	ldr	x2, [x2, #24]
    10d4:	blr	x2
    10d8:	b	1004 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE+0x54>
    10dc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10e0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10e4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    10e8:	add	x3, x3, #0x0
    10ec:	add	x1, x1, #0x0
    10f0:	add	x0, x0, #0x0
    10f4:	mov	w2, #0xf1                  	// #241
    10f8:	bl	0 <__assert_fail>
    10fc:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1100:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1104:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1108:	add	x3, x3, #0x0
    110c:	add	x1, x1, #0x0
    1110:	add	x0, x0, #0x0
    1114:	mov	w2, #0x64                  	// #100
    1118:	bl	0 <__assert_fail>
    111c:	nop

0000000000001120 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>:
    1120:	stp	x29, x30, [sp, #-64]!
    1124:	mov	x29, sp
    1128:	ldr	x2, [x1]
    112c:	stp	x19, x20, [sp, #16]
    1130:	stp	x21, x22, [sp, #32]
    1134:	str	x23, [sp, #48]
    1138:	cbz	x2, 1208 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xe8>
    113c:	clz	x2, x2
    1140:	mov	x21, x0
    1144:	ldr	x0, [x0, #8]
    1148:	mov	w19, #0x3f                  	// #63
    114c:	sub	w20, w19, w2
    1150:	mov	x22, x1
    1154:	mov	w1, #0x1                   	// #1
    1158:	ldr	x23, [x0, x20, lsl #3]
    115c:	mov	x0, x23
    1160:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
    1164:	ldr	x1, [x22, #8]
    1168:	and	w0, w0, #0xff
    116c:	ldr	x2, [x23, #24]
    1170:	tst	x1, x2
    1174:	b.ne	1228 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x108>  // b.any
    1178:	eor	x1, x1, x2
    117c:	str	x1, [x23, #24]
    1180:	cbnz	w0, 11f4 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd4>
    1184:	ldr	x2, [x22]
    1188:	ldr	x0, [x21, #328]
    118c:	ldr	x1, [x21, #56]
    1190:	eor	x0, x0, x2
    1194:	str	x0, [x21, #328]
    1198:	ldr	x3, [x1, x20, lsl #3]
    119c:	cbz	x3, 11f4 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xd4>
    11a0:	neg	x2, x3
    11a4:	ands	x0, x2, x3
    11a8:	b.eq	1208 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xe8>  // b.none
    11ac:	mov	w4, w19
    11b0:	ldr	x2, [x22]
    11b4:	ldr	x5, [x21, #8]
    11b8:	b	11c8 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xa8>
    11bc:	neg	x0, x3
    11c0:	ands	x0, x0, x3
    11c4:	b.eq	1208 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0xe8>  // b.none
    11c8:	clz	x0, x0
    11cc:	sub	w0, w4, w0
    11d0:	ldr	x1, [x5, x0, lsl #3]
    11d4:	ldr	x0, [x1, #24]
    11d8:	tst	x2, x0
    11dc:	b.ne	1228 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x108>  // b.any
    11e0:	eor	x0, x2, x0
    11e4:	str	x0, [x1, #24]
    11e8:	sub	x0, x3, #0x1
    11ec:	ands	x3, x3, x0
    11f0:	b.ne	11bc <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE+0x9c>  // b.any
    11f4:	ldp	x19, x20, [sp, #16]
    11f8:	ldp	x21, x22, [sp, #32]
    11fc:	ldr	x23, [sp, #48]
    1200:	ldp	x29, x30, [sp], #64
    1204:	ret
    1208:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    120c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1210:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1214:	add	x3, x3, #0x0
    1218:	add	x1, x1, #0x0
    121c:	add	x0, x0, #0x0
    1220:	mov	w2, #0x64                  	// #100
    1224:	bl	0 <__assert_fail>
    1228:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    122c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1230:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1234:	add	x3, x3, #0x0
    1238:	add	x1, x1, #0x0
    123c:	add	x0, x0, #0x0
    1240:	mov	w2, #0xf6                  	// #246
    1244:	bl	0 <__assert_fail>

0000000000001248 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>:
    1248:	ldr	x2, [x0, #352]
    124c:	tst	x1, x2
    1250:	b.ne	1264 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm+0x1c>  // b.any
    1254:	ldr	x0, [x0, #344]
    1258:	bics	xzr, x1, x0
    125c:	cset	w0, ne  // ne = any
    1260:	ret
    1264:	mov	w0, #0x2                   	// #2
    1268:	ret
    126c:	nop

0000000000001270 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>:
    1270:	cbz	x1, 1338 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xc8>
    1274:	stp	x29, x30, [sp, #-64]!
    1278:	mov	x29, sp
    127c:	stp	x19, x20, [sp, #16]
    1280:	neg	x19, x1
    1284:	mov	x20, x1
    1288:	stp	x21, x22, [sp, #32]
    128c:	ands	x19, x19, x1
    1290:	mov	w22, #0x3f                  	// #63
    1294:	stp	x23, x24, [sp, #48]
    1298:	mov	x23, x0
    129c:	b.ne	12dc <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x6c>  // b.any
    12a0:	b	135c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xec>
    12a4:	ldr	w1, [x21, #36]
    12a8:	sub	w1, w1, #0x1
    12ac:	str	w1, [x21, #36]
    12b0:	cmp	w1, w0
    12b4:	b.hi	137c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x10c>  // b.pmore
    12b8:	cbnz	w1, 12c8 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x58>
    12bc:	ldr	x0, [x23, #344]
    12c0:	eor	x0, x0, x19
    12c4:	str	x0, [x23, #344]
    12c8:	cmp	x24, x19
    12cc:	b.eq	1324 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xb4>  // b.none
    12d0:	neg	x19, x20
    12d4:	ands	x19, x19, x20
    12d8:	b.eq	135c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xec>  // b.none
    12dc:	clz	x1, x19
    12e0:	mov	x24, x20
    12e4:	ldr	x0, [x23, #8]
    12e8:	sub	w1, w22, w1
    12ec:	eor	x20, x20, x19
    12f0:	ldr	x21, [x0, x1, lsl #3]
    12f4:	mov	x0, x21
    12f8:	bl	258 <_ZNK4llvm3mca13ResourceState17isBufferAvailableEv>
    12fc:	cbnz	w0, 133c <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0xcc>
    1300:	ldr	w0, [x21, #32]
    1304:	cmp	w0, #0x0
    1308:	b.gt	12a4 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x34>
    130c:	b.ne	12c8 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x58>  // b.any
    1310:	ldr	x0, [x23, #352]
    1314:	cmp	x24, x19
    1318:	eor	x0, x0, x19
    131c:	str	x0, [x23, #352]
    1320:	b.ne	12d0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm+0x60>  // b.any
    1324:	ldp	x19, x20, [sp, #16]
    1328:	ldp	x21, x22, [sp, #32]
    132c:	ldp	x23, x24, [sp, #48]
    1330:	ldp	x29, x30, [sp], #64
    1334:	ret
    1338:	ret
    133c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1340:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1344:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1348:	add	x3, x3, #0x0
    134c:	add	x1, x1, #0x0
    1350:	add	x0, x0, #0x0
    1354:	mov	w2, #0x102                 	// #258
    1358:	bl	0 <__assert_fail>
    135c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1360:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1364:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1368:	add	x3, x3, #0x0
    136c:	add	x1, x1, #0x0
    1370:	add	x0, x0, #0x0
    1374:	mov	w2, #0x64                  	// #100
    1378:	bl	0 <__assert_fail>
    137c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1380:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1384:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1388:	add	x3, x3, #0x0
    138c:	add	x1, x1, #0x0
    1390:	add	x0, x0, #0x0
    1394:	mov	w2, #0x112                 	// #274
    1398:	bl	0 <__assert_fail>
    139c:	nop

00000000000013a0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>:
    13a0:	ldr	x2, [x0, #344]
    13a4:	orr	x2, x2, x1
    13a8:	str	x2, [x0, #344]
    13ac:	cbz	x1, 1420 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x80>
    13b0:	stp	x29, x30, [sp, #-16]!
    13b4:	neg	x2, x1
    13b8:	ands	x2, x2, x1
    13bc:	mov	x29, sp
    13c0:	b.eq	1424 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>  // b.none
    13c4:	mov	w6, #0x3f                  	// #63
    13c8:	ldr	x7, [x0, #8]
    13cc:	b	13dc <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x3c>
    13d0:	neg	x2, x1
    13d4:	ands	x2, x2, x1
    13d8:	b.eq	1424 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x84>  // b.none
    13dc:	clz	x0, x2
    13e0:	mov	x5, x1
    13e4:	sub	w0, w6, w0
    13e8:	eor	x1, x1, x2
    13ec:	ldr	x3, [x7, x0, lsl #3]
    13f0:	ldr	w4, [x3, #32]
    13f4:	cmp	w4, #0x0
    13f8:	b.le	1410 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x70>
    13fc:	ldr	w0, [x3, #36]
    1400:	add	w0, w0, #0x1
    1404:	str	w0, [x3, #36]
    1408:	cmp	w0, w4
    140c:	b.hi	1444 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0xa4>  // b.pmore
    1410:	cmp	x5, x2
    1414:	b.ne	13d0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm+0x30>  // b.any
    1418:	ldp	x29, x30, [sp], #16
    141c:	ret
    1420:	ret
    1424:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1428:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    142c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1430:	add	x3, x3, #0x0
    1434:	add	x1, x1, #0x0
    1438:	add	x0, x0, #0x0
    143c:	mov	w2, #0x64                  	// #100
    1440:	bl	0 <__assert_fail>
    1444:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1448:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    144c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1450:	add	x3, x3, #0x0
    1454:	add	x1, x1, #0x0
    1458:	add	x0, x0, #0x0
    145c:	mov	w2, #0x11d                 	// #285
    1460:	bl	0 <__assert_fail>
    1464:	nop

0000000000001468 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>:
    1468:	stp	x29, x30, [sp, #-64]!
    146c:	mov	w2, #0x18                  	// #24
    1470:	mov	x29, sp
    1474:	stp	x21, x22, [sp, #32]
    1478:	mov	w22, #0x3f                  	// #63
    147c:	ldr	w21, [x1, #184]
    1480:	stp	x23, x24, [sp, #48]
    1484:	mov	x24, x0
    1488:	mov	x23, x1
    148c:	ldr	x0, [x1, #176]
    1490:	stp	x19, x20, [sp, #16]
    1494:	mov	x20, #0x0                   	// #0
    1498:	mov	x19, x0
    149c:	umaddl	x21, w21, w2, x0
    14a0:	cmp	x21, x0
    14a4:	b.eq	14fc <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x94>  // b.none
    14a8:	ldrb	w2, [x19, #16]
    14ac:	mov	w1, #0x0                   	// #0
    14b0:	cbnz	w2, 14b8 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x50>
    14b4:	ldr	w1, [x19, #20]
    14b8:	ldr	x2, [x19]
    14bc:	cbz	x2, 151c <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xb4>
    14c0:	clz	x2, x2
    14c4:	ldr	x3, [x24, #8]
    14c8:	sub	w2, w22, w2
    14cc:	ldr	x0, [x3, x2, lsl #3]
    14d0:	bl	220 <_ZNK4llvm3mca13ResourceState7isReadyEj>
    14d4:	tst	w0, #0xff
    14d8:	b.ne	14e4 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x7c>  // b.any
    14dc:	ldr	x0, [x19]
    14e0:	orr	x20, x20, x0
    14e4:	add	x19, x19, #0x18
    14e8:	cmp	x21, x19
    14ec:	b.ne	14a8 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0x40>  // b.any
    14f0:	ldr	x0, [x24, #320]
    14f4:	ands	x0, x20, x0
    14f8:	b.ne	1508 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE+0xa0>  // b.any
    14fc:	ldr	x20, [x23, #304]
    1500:	ldr	x0, [x24, #336]
    1504:	and	x0, x20, x0
    1508:	ldp	x19, x20, [sp, #16]
    150c:	ldp	x21, x22, [sp, #32]
    1510:	ldp	x23, x24, [sp, #48]
    1514:	ldp	x29, x30, [sp], #64
    1518:	ret
    151c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1520:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1524:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1528:	add	x3, x3, #0x0
    152c:	add	x1, x1, #0x0
    1530:	add	x0, x0, #0x0
    1534:	mov	w2, #0x64                  	// #100
    1538:	bl	0 <__assert_fail>
    153c:	nop

0000000000001540 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>:
    1540:	stp	x29, x30, [sp, #-16]!
    1544:	mov	x29, sp
    1548:	cbz	x1, 15b8 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x78>
    154c:	clz	x1, x1
    1550:	mov	w2, #0x3f                  	// #63
    1554:	ldr	x3, [x0, #8]
    1558:	sub	w4, w2, w1
    155c:	sub	w1, w2, w1
    1560:	ldr	x3, [x3, x4, lsl #3]
    1564:	ldrb	w2, [x3, #41]
    1568:	cbz	w2, 1598 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x58>
    156c:	ldrb	w2, [x3, #40]
    1570:	cbnz	w2, 1598 <_ZN4llvm3mca15ResourceManager15reserveResourceEm+0x58>
    1574:	ldr	x4, [x0, #336]
    1578:	mov	x2, #0x1                   	// #1
    157c:	mov	w5, #0x1                   	// #1
    1580:	strb	w5, [x3, #40]
    1584:	lsl	x1, x2, x1
    1588:	eor	x1, x4, x1
    158c:	str	x1, [x0, #336]
    1590:	ldp	x29, x30, [sp], #16
    1594:	ret
    1598:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    159c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    15a0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    15a4:	add	x3, x3, #0x0
    15a8:	add	x1, x1, #0x0
    15ac:	add	x0, x0, #0x0
    15b0:	mov	w2, #0x15a                 	// #346
    15b4:	bl	0 <__assert_fail>
    15b8:	bl	108 <_ZN4llvm3mca15ResourceManager15releaseResourceEm.part.0>
    15bc:	nop

00000000000015c0 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>:
    15c0:	cbz	x1, 161c <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x5c>
    15c4:	clz	x1, x1
    15c8:	mov	w2, #0x3f                  	// #63
    15cc:	ldr	x3, [x0, #8]
    15d0:	sub	w4, w2, w1
    15d4:	sub	w1, w2, w1
    15d8:	ldr	x2, [x3, x4, lsl #3]
    15dc:	ldrb	w3, [x2, #41]
    15e0:	strb	wzr, [x2, #40]
    15e4:	cbz	w3, 15fc <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x3c>
    15e8:	ldr	x3, [x0, #336]
    15ec:	mov	x4, #0x1                   	// #1
    15f0:	lsl	x4, x4, x1
    15f4:	eor	x3, x3, x4
    15f8:	str	x3, [x0, #336]
    15fc:	ldr	w2, [x2, #32]
    1600:	cbnz	w2, 1618 <_ZN4llvm3mca15ResourceManager15releaseResourceEm+0x58>
    1604:	ldr	x3, [x0, #352]
    1608:	mov	x2, #0x1                   	// #1
    160c:	lsl	x1, x2, x1
    1610:	eor	x1, x3, x1
    1614:	str	x1, [x0, #352]
    1618:	ret
    161c:	stp	x29, x30, [sp, #-16]!
    1620:	mov	x29, sp
    1624:	bl	108 <_ZN4llvm3mca15ResourceManager15releaseResourceEm.part.0>

0000000000001628 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>:
    1628:	stp	x29, x30, [sp, #-144]!
    162c:	mov	x29, sp
    1630:	stp	x19, x20, [sp, #16]
    1634:	add	x20, x0, #0xd0
    1638:	stp	x21, x22, [sp, #32]
    163c:	stp	x23, x24, [sp, #48]
    1640:	stp	x25, x26, [sp, #64]
    1644:	mov	x26, x1
    1648:	mov	x25, x0
    164c:	stp	x27, x28, [sp, #80]
    1650:	ldr	w1, [x20, #8]
    1654:	ldrb	w0, [x20, #8]
    1658:	cmp	wzr, w1, lsr #1
    165c:	and	w0, w0, #0x1
    1660:	b.eq	1a84 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x45c>  // b.none
    1664:	cbnz	w0, 17cc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1a4>
    1668:	ldr	w4, [x25, #232]
    166c:	mov	w1, #0x18                  	// #24
    1670:	ldr	x19, [x25, #224]
    1674:	umull	x4, w4, w1
    1678:	add	x24, x19, x4
    167c:	cmp	x24, x19
    1680:	ldr	x28, [x25, #208]
    1684:	b.cc	1ae4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4bc>  // b.lo, b.ul, b.last
    1688:	b.eq	1adc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4b4>  // b.none
    168c:	ldr	x1, [x19]
    1690:	cmn	x1, #0x1
    1694:	b.eq	17fc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1d4>  // b.none
    1698:	cmn	x1, #0x2
    169c:	b.eq	17d8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1b0>  // b.none
    16a0:	cbz	w0, 1810 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1e8>
    16a4:	add	x3, x25, #0xe0
    16a8:	mov	x0, #0x60                  	// #96
    16ac:	add	x27, x3, x0
    16b0:	adrp	x22, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    16b4:	mov	x23, #0xffffffff            	// #4294967295
    16b8:	add	x0, x22, #0x0
    16bc:	str	x0, [sp, #112]
    16c0:	cbz	x19, 17c0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x198>
    16c4:	ldr	x2, [x25, #208]
    16c8:	cmp	x2, x28
    16cc:	b.ne	1b44 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x51c>  // b.any
    16d0:	cbz	x27, 16e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xbc>
    16d4:	cmp	x2, x28
    16d8:	b.ne	1b24 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4fc>  // b.any
    16dc:	cmp	x27, x19
    16e0:	b.eq	1924 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2fc>  // b.none
    16e4:	ldr	w2, [x19, #16]
    16e8:	cbnz	w2, 1824 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1fc>
    16ec:	ldr	d1, [x19]
    16f0:	cnt	v0.8b, v1.8b
    16f4:	addv	b0, v0.8b
    16f8:	umov	w0, v0.b[0]
    16fc:	cmp	w0, #0x1
    1700:	b.eq	1834 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x20c>  // b.none
    1704:	fmov	x1, d1
    1708:	mov	x0, x25
    170c:	bl	15c0 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    1710:	ldp	w21, w0, [x26, #8]
    1714:	cmp	w21, w0
    1718:	b.cs	185c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x234>  // b.hs, b.nlast
    171c:	ldr	x2, [x26]
    1720:	mov	w22, w0
    1724:	mov	w1, w21
    1728:	ubfiz	x7, x21, #4, #32
    172c:	add	x2, x2, x7
    1730:	add	x1, x1, #0x1
    1734:	ldp	x6, x7, [x19]
    1738:	cmp	x1, x22
    173c:	stp	x6, x7, [x2]
    1740:	b.hi	1b64 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x53c>  // b.pmore
    1744:	ldr	x2, [x25, #208]
    1748:	add	w21, w21, #0x1
    174c:	str	w21, [x26, #8]
    1750:	cmp	x2, x28
    1754:	b.ne	1b04 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4dc>  // b.any
    1758:	add	x19, x19, #0x18
    175c:	cmp	x24, x19
    1760:	b.cc	1ae4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4bc>  // b.lo, b.ul, b.last
    1764:	b.eq	16c0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.none
    1768:	mov	x2, x19
    176c:	mov	x19, x2
    1770:	ldr	x0, [x2]
    1774:	cmn	x0, #0x1
    1778:	b.eq	17b0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x188>  // b.none
    177c:	cmn	x0, #0x2
    1780:	b.ne	16c0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.any
    1784:	ldr	x0, [x2, #8]
    1788:	cmn	x0, #0x2
    178c:	b.ne	16c0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.any
    1790:	add	x2, x2, #0x18
    1794:	cmp	x24, x2
    1798:	mov	x19, x2
    179c:	b.eq	16c0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x98>  // b.none
    17a0:	ldr	x0, [x2]
    17a4:	mov	x19, x2
    17a8:	cmn	x0, #0x1
    17ac:	b.ne	177c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x154>  // b.any
    17b0:	ldr	x0, [x2, #8]
    17b4:	cmn	x0, #0x1
    17b8:	b.eq	1790 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x168>  // b.none
    17bc:	cbnz	x19, 16c4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x9c>
    17c0:	cbz	x27, 1924 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2fc>
    17c4:	ldr	x2, [x25, #208]
    17c8:	b	16d4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xac>
    17cc:	add	x19, x25, #0xe0
    17d0:	mov	x4, #0x60                  	// #96
    17d4:	b	1678 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x50>
    17d8:	ldr	x1, [x19, #8]
    17dc:	cmn	x1, #0x2
    17e0:	b.ne	16a0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>  // b.any
    17e4:	add	x19, x19, #0x18
    17e8:	cmp	x24, x19
    17ec:	b.eq	16a0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>  // b.none
    17f0:	ldr	x1, [x19]
    17f4:	cmn	x1, #0x1
    17f8:	b.ne	1698 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x70>  // b.any
    17fc:	ldr	x1, [x19, #8]
    1800:	cmn	x1, #0x1
    1804:	b.eq	17e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x1bc>  // b.none
    1808:	cbnz	w0, 16a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x7c>
    180c:	nop
    1810:	ldr	w0, [x25, #232]
    1814:	mov	w1, #0x18                  	// #24
    1818:	ldr	x3, [x25, #224]
    181c:	umull	x0, w0, w1
    1820:	b	16ac <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x84>
    1824:	sub	w2, w2, #0x1
    1828:	str	w2, [x19, #16]
    182c:	cbnz	w2, 1758 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x130>
    1830:	b	16ec <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xc4>
    1834:	mov	x1, x19
    1838:	mov	x0, x25
    183c:	bl	1120 <_ZN4llvm3mca15ResourceManager7releaseERKSt4pairImmE>
    1840:	ldr	d1, [x19]
    1844:	mov	x0, x25
    1848:	fmov	x1, d1
    184c:	bl	15c0 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    1850:	ldp	w21, w0, [x26, #8]
    1854:	cmp	w21, w0
    1858:	b.cc	171c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0xf4>  // b.lo, b.ul, b.last
    185c:	mov	w2, w0
    1860:	add	x2, x2, #0x2
    1864:	orr	x2, x2, x2, lsr #1
    1868:	orr	x2, x2, x2, lsr #2
    186c:	orr	x2, x2, x2, lsr #4
    1870:	orr	x2, x2, x2, lsr #8
    1874:	orr	x0, x2, x2, lsr #16
    1878:	orr	x2, x0, x2, lsr #32
    187c:	add	x2, x2, #0x1
    1880:	cmp	x2, x23
    1884:	b.hi	1aa8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x480>  // b.pmore
    1888:	lsl	x0, x2, #4
    188c:	mov	x22, x2
    1890:	str	w2, [sp, #108]
    1894:	str	x2, [sp, #136]
    1898:	bl	0 <malloc>
    189c:	mov	x2, x0
    18a0:	cbz	x0, 1b84 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x55c>
    18a4:	ldr	x0, [x26]
    18a8:	ubfiz	x7, x21, #4, #32
    18ac:	mov	w1, w21
    18b0:	add	x6, x0, x7
    18b4:	cmp	x0, x6
    18b8:	b.eq	18f0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2c8>  // b.none
    18bc:	mov	x3, #0xfffffffffffffff0    	// #-16
    18c0:	sub	x9, x3, x0
    18c4:	add	x9, x6, x9
    18c8:	mov	x5, #0x0                   	// #0
    18cc:	mov	x6, #0x0                   	// #0
    18d0:	lsr	x9, x9, #4
    18d4:	add	x9, x9, #0x1
    18d8:	ldr	q0, [x0, x5]
    18dc:	add	x6, x6, #0x1
    18e0:	cmp	x9, x6
    18e4:	str	q0, [x2, x5]
    18e8:	add	x5, x5, #0x10
    18ec:	b.hi	18d8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2b0>  // b.pmore
    18f0:	add	x5, x26, #0x10
    18f4:	cmp	x0, x5
    18f8:	b.eq	1914 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x2ec>  // b.none
    18fc:	str	x2, [sp, #120]
    1900:	bl	0 <free>
    1904:	ldr	w21, [x26, #8]
    1908:	ldr	x2, [sp, #120]
    190c:	mov	w1, w21
    1910:	ubfiz	x7, x21, #4, #32
    1914:	ldr	w0, [sp, #108]
    1918:	str	x2, [x26]
    191c:	str	w0, [x26, #12]
    1920:	b	172c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x104>
    1924:	ldr	x0, [x26]
    1928:	ldr	w6, [x26, #8]
    192c:	mov	x2, x0
    1930:	add	x6, x0, x6, lsl #4
    1934:	cmp	x0, x6
    1938:	b.eq	19fc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3d4>  // b.none
    193c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1940:	add	x9, x25, #0xe0
    1944:	mov	w7, #0x25                  	// #37
    1948:	mov	w8, #0x18                  	// #24
    194c:	ldr	q0, [x0]
    1950:	ldrb	w0, [x20, #8]
    1954:	tbz	w0, #0, 19e4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3bc>
    1958:	mov	x5, x9
    195c:	mov	w1, #0x4                   	// #4
    1960:	ldp	x4, x10, [x2]
    1964:	cmn	x4, #0x1
    1968:	b.eq	1a18 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3f0>  // b.none
    196c:	cmn	x4, #0x2
    1970:	b.eq	1a40 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x418>  // b.none
    1974:	sub	w3, w1, #0x1
    1978:	mul	w0, w7, w4
    197c:	mul	w1, w7, w10
    1980:	mov	w11, #0x1                   	// #1
    1984:	orr	x0, x1, x0, lsl #32
    1988:	sub	x0, x0, #0x1
    198c:	sub	x1, x0, x1, lsl #32
    1990:	eor	x1, x1, x1, lsr #22
    1994:	sub	x0, x1, #0x1
    1998:	sub	x1, x0, x1, lsl #13
    199c:	eor	x1, x1, x1, lsr #8
    19a0:	add	x1, x1, x1, lsl #3
    19a4:	eor	x1, x1, x1, lsr #15
    19a8:	sub	x0, x1, #0x1
    19ac:	sub	x1, x0, x1, lsl #27
    19b0:	eor	x1, x1, x1, lsr #31
    19b4:	and	w1, w3, w1
    19b8:	umull	x0, w1, w8
    19bc:	add	x12, x5, x0
    19c0:	ldr	x0, [x5, x0]
    19c4:	cmp	x4, x0
    19c8:	b.eq	1a4c <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x424>  // b.none
    19cc:	cmn	x0, #0x1
    19d0:	b.eq	1acc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x4a4>  // b.none
    19d4:	add	w1, w1, w11
    19d8:	add	w11, w11, #0x1
    19dc:	and	w1, w3, w1
    19e0:	b	19b8 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x390>
    19e4:	ldr	w1, [x25, #232]
    19e8:	ldr	x5, [x25, #224]
    19ec:	cbnz	w1, 1960 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x338>
    19f0:	add	x2, x2, #0x10
    19f4:	cmp	x6, x2
    19f8:	b.ne	1950 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x328>  // b.any
    19fc:	ldp	x19, x20, [sp, #16]
    1a00:	ldp	x21, x22, [sp, #32]
    1a04:	ldp	x23, x24, [sp, #48]
    1a08:	ldp	x25, x26, [sp, #64]
    1a0c:	ldp	x27, x28, [sp, #80]
    1a10:	ldp	x29, x30, [sp], #144
    1a14:	ret
    1a18:	cmn	x10, #0x1
    1a1c:	b.ne	1974 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x34c>  // b.any
    1a20:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a24:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a28:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1a2c:	add	x3, x3, #0x0
    1a30:	add	x1, x1, #0x0
    1a34:	add	x0, x0, #0x0
    1a38:	mov	w2, #0x250                 	// #592
    1a3c:	bl	0 <__assert_fail>
    1a40:	cmn	x10, #0x2
    1a44:	b.ne	1974 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x34c>  // b.any
    1a48:	b	1a20 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3f8>
    1a4c:	ldr	x13, [x12, #8]
    1a50:	cmp	x13, x10
    1a54:	b.ne	19cc <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3a4>  // b.any
    1a58:	str	q0, [x12]
    1a5c:	ldr	w0, [x20, #8]
    1a60:	lsr	w3, w0, #1
    1a64:	sub	w1, w3, #0x1
    1a68:	cbz	w3, 1ba0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x578>
    1a6c:	bfi	w0, w1, #1, #31
    1a70:	str	w0, [x20, #8]
    1a74:	ldr	w0, [x25, #220]
    1a78:	add	w0, w0, #0x1
    1a7c:	str	w0, [x25, #220]
    1a80:	b	19f0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3c8>
    1a84:	cbnz	w0, 1ac0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x498>
    1a88:	ldr	w1, [x25, #232]
    1a8c:	mov	w2, #0x18                  	// #24
    1a90:	ldr	x19, [x25, #224]
    1a94:	umull	x1, w1, w2
    1a98:	add	x19, x19, x1
    1a9c:	mov	x24, x19
    1aa0:	ldr	x28, [x25, #208]
    1aa4:	b	16a0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>
    1aa8:	mov	w0, #0xffffffff            	// #-1
    1aac:	mov	x22, #0xffffffff            	// #4294967295
    1ab0:	mov	x2, x22
    1ab4:	str	w0, [sp, #108]
    1ab8:	mov	x0, #0xffffffff0           	// #68719476720
    1abc:	b	1894 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x26c>
    1ac0:	add	x19, x25, #0xe0
    1ac4:	mov	x1, #0x60                  	// #96
    1ac8:	b	1a98 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x470>
    1acc:	ldr	x0, [x12, #8]
    1ad0:	cmn	x0, #0x1
    1ad4:	b.ne	19d4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3ac>  // b.any
    1ad8:	b	19f0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x3c8>
    1adc:	mov	x24, x19
    1ae0:	b	16a0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x78>
    1ae4:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1ae8:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1aec:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1af0:	add	x3, x3, #0x0
    1af4:	add	x1, x1, #0x0
    1af8:	add	x0, x0, #0x0
    1afc:	mov	w2, #0x4e0                 	// #1248
    1b00:	bl	0 <__assert_fail>
    1b04:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b08:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b0c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b10:	add	x3, x3, #0x0
    1b14:	add	x1, x1, #0x0
    1b18:	add	x0, x0, #0x0
    1b1c:	mov	w2, #0x4cf                 	// #1231
    1b20:	bl	0 <__assert_fail>
    1b24:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b28:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b2c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b30:	add	x3, x3, #0x0
    1b34:	add	x1, x1, #0x0
    1b38:	add	x0, x0, #0x0
    1b3c:	mov	w2, #0x4c8                 	// #1224
    1b40:	bl	0 <__assert_fail>
    1b44:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b48:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b4c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b50:	add	x3, x3, #0x0
    1b54:	add	x1, x1, #0x0
    1b58:	add	x0, x0, #0x0
    1b5c:	mov	w2, #0x4c7                 	// #1223
    1b60:	bl	0 <__assert_fail>
    1b64:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b68:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b6c:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1b70:	add	x3, x3, #0x0
    1b74:	add	x1, x1, #0x0
    1b78:	add	x0, x0, #0x0
    1b7c:	mov	w2, #0x43                  	// #67
    1b80:	bl	0 <__assert_fail>
    1b84:	ldr	x0, [sp, #112]
    1b88:	mov	w1, #0x1                   	// #1
    1b8c:	str	x2, [sp, #120]
    1b90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1b94:	ldr	w21, [x26, #8]
    1b98:	ldr	x2, [sp, #120]
    1b9c:	b	18a4 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE+0x27c>
    1ba0:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1ba4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1ba8:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1bac:	add	x3, x3, #0x0
    1bb0:	add	x1, x1, #0x0
    1bb4:	add	x0, x0, #0x0
    1bb8:	mov	w2, #0x441                 	// #1089
    1bbc:	bl	0 <__assert_fail>

0000000000001bc0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
    1bc0:	stp	x29, x30, [sp, #-176]!
    1bc4:	mov	w3, #0x18                  	// #24
    1bc8:	mov	x29, sp
    1bcc:	stp	x19, x20, [sp, #16]
    1bd0:	ldr	w20, [x1, #184]
    1bd4:	stp	x25, x26, [sp, #64]
    1bd8:	mov	x25, x0
    1bdc:	ldr	x0, [x1, #176]
    1be0:	umaddl	x20, w20, w3, x0
    1be4:	cmp	x20, x0
    1be8:	b.eq	1d40 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x180>  // b.none
    1bec:	mov	x19, x2
    1bf0:	add	x26, x25, #0xd0
    1bf4:	stp	x21, x22, [sp, #32]
    1bf8:	adrp	x21, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1bfc:	add	x22, sp, #0x80
    1c00:	add	x21, x21, #0x0
    1c04:	stp	x23, x24, [sp, #48]
    1c08:	mov	w23, #0xffffffe8            	// #-24
    1c0c:	mov	x24, x0
    1c10:	movk	x23, #0x17, lsl #32
    1c14:	stp	x27, x28, [sp, #80]
    1c18:	ldp	w0, w1, [x24, #8]
    1c1c:	cmp	w0, w1
    1c20:	b.eq	1fe4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x424>  // b.none
    1c24:	cbnz	w0, 2578 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9b8>
    1c28:	ldrb	w0, [x24, #16]
    1c2c:	ldr	x1, [x24]
    1c30:	cbz	w0, 1dd8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x218>
    1c34:	fmov	d0, x1
    1c38:	cnt	v0.8b, v0.8b
    1c3c:	addv	b0, v0.8b
    1c40:	umov	w0, v0.b[0]
    1c44:	cmp	w0, #0x1
    1c48:	b.le	2598 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9d8>
    1c4c:	mov	x0, x25
    1c50:	bl	1540 <_ZN4llvm3mca15ResourceManager15reserveResourceEm>
    1c54:	ldrb	w0, [x26, #8]
    1c58:	ldp	w1, w28, [x24, #8]
    1c5c:	and	w4, w0, #0x1
    1c60:	ldr	x27, [x24]
    1c64:	sub	w28, w28, w1
    1c68:	tbz	w0, #0, 1c9c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xdc>
    1c6c:	add	x3, x25, #0xe0
    1c70:	mov	w1, #0x4                   	// #4
    1c74:	cmn	x27, #0x3
    1c78:	b.ls	1d50 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x190>  // b.plast
    1c7c:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1c80:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1c84:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1c88:	add	x3, x3, #0x0
    1c8c:	add	x1, x1, #0x0
    1c90:	add	x0, x0, #0x0
    1c94:	mov	w2, #0x250                 	// #592
    1c98:	bl	0 <__assert_fail>
    1c9c:	ldr	w1, [x25, #232]
    1ca0:	ldr	x3, [x25, #224]
    1ca4:	cbnz	w1, 1c74 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xb4>
    1ca8:	ldr	x0, [x25, #208]
    1cac:	mov	x2, #0x0                   	// #0
    1cb0:	add	x0, x0, #0x1
    1cb4:	str	x0, [x25, #208]
    1cb8:	ldr	w0, [x26, #8]
    1cbc:	lsr	w0, w0, #1
    1cc0:	add	w3, w0, #0x1
    1cc4:	add	w5, w1, w1, lsl #1
    1cc8:	cmp	w5, w3, lsl #2
    1ccc:	b.ls	2120 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x560>  // b.plast
    1cd0:	ldr	w0, [x25, #220]
    1cd4:	sub	w0, w1, w0
    1cd8:	sub	w0, w0, w3
    1cdc:	cmp	w0, w1, lsr #3
    1ce0:	b.ls	21c8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x608>  // b.plast
    1ce4:	cbz	x2, 2278 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6b8>
    1ce8:	ldr	w0, [x26, #8]
    1cec:	lsr	w1, w0, #1
    1cf0:	adds	w1, w1, #0x1
    1cf4:	b.mi	25f8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa38>  // b.first
    1cf8:	bfi	w0, w1, #1, #31
    1cfc:	str	w0, [x26, #8]
    1d00:	ldr	x0, [x2]
    1d04:	cmn	x0, #0x1
    1d08:	b.eq	2000 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x440>  // b.none
    1d0c:	ldr	w0, [x25, #220]
    1d10:	sub	w0, w0, #0x1
    1d14:	str	w0, [x25, #220]
    1d18:	dup	v0.2d, x27
    1d1c:	str	wzr, [x2, #16]
    1d20:	str	q0, [x2]
    1d24:	str	w28, [x2, #16]
    1d28:	add	x24, x24, #0x18
    1d2c:	cmp	x20, x24
    1d30:	b.ne	1c18 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x58>  // b.any
    1d34:	ldp	x21, x22, [sp, #32]
    1d38:	ldp	x23, x24, [sp, #48]
    1d3c:	ldp	x27, x28, [sp, #80]
    1d40:	ldp	x19, x20, [sp, #16]
    1d44:	ldp	x25, x26, [sp, #64]
    1d48:	ldp	x29, x30, [sp], #176
    1d4c:	ret
    1d50:	mov	w2, #0x25                  	// #37
    1d54:	sub	w0, w1, #0x1
    1d58:	mov	w6, #0x1                   	// #1
    1d5c:	mov	x5, #0x0                   	// #0
    1d60:	mul	w1, w2, w27
    1d64:	mov	w7, #0x18                  	// #24
    1d68:	orr	x2, x1, x1, lsl #32
    1d6c:	sub	x2, x2, #0x1
    1d70:	sub	x1, x2, x1, lsl #32
    1d74:	eor	x1, x1, x1, lsr #22
    1d78:	sub	x2, x1, #0x1
    1d7c:	sub	x1, x2, x1, lsl #13
    1d80:	eor	x1, x1, x1, lsr #8
    1d84:	add	x1, x1, x1, lsl #3
    1d88:	eor	x1, x1, x1, lsr #15
    1d8c:	sub	x2, x1, #0x1
    1d90:	sub	x1, x2, x1, lsl #27
    1d94:	eor	x1, x1, x1, lsr #31
    1d98:	and	w1, w0, w1
    1d9c:	umull	x8, w1, w7
    1da0:	add	x2, x3, x8
    1da4:	ldr	x8, [x3, x8]
    1da8:	cmp	x27, x8
    1dac:	b.eq	1fcc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x40c>  // b.none
    1db0:	cmn	x8, #0x1
    1db4:	b.ne	2550 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x990>  // b.any
    1db8:	ldr	x8, [x2, #8]
    1dbc:	cmn	x8, #0x1
    1dc0:	b.eq	249c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x8dc>  // b.none
    1dc4:	nop
    1dc8:	add	w1, w1, w6
    1dcc:	add	w6, w6, #0x1
    1dd0:	and	w1, w0, w1
    1dd4:	b	1d9c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1dc>
    1dd8:	mov	x0, x25
    1ddc:	bl	df0 <_ZN4llvm3mca15ResourceManager10selectPipeEm>
    1de0:	mov	x2, x0
    1de4:	mov	x3, x1
    1de8:	mov	x0, x25
    1dec:	mov	x1, x22
    1df0:	stp	x2, x3, [sp, #128]
    1df4:	bl	fb0 <_ZN4llvm3mca15ResourceManager3useERKSt4pairImmE>
    1df8:	ldrb	w0, [x26, #8]
    1dfc:	ldp	w1, w27, [x24, #8]
    1e00:	and	w7, w0, #0x1
    1e04:	sub	w27, w27, w1
    1e08:	tbz	w0, #0, 1ebc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2fc>
    1e0c:	add	x4, x25, #0xe0
    1e10:	mov	w1, #0x4                   	// #4
    1e14:	ldp	x3, x5, [sp, #128]
    1e18:	cmn	x3, #0x1
    1e1c:	b.eq	2010 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x450>  // b.none
    1e20:	cmn	x3, #0x2
    1e24:	b.eq	1ff4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x434>  // b.none
    1e28:	mov	w2, #0x25                  	// #37
    1e2c:	sub	w0, w1, #0x1
    1e30:	mov	w9, #0x1                   	// #1
    1e34:	mov	x8, #0x0                   	// #0
    1e38:	mul	w1, w2, w5
    1e3c:	mov	w6, #0x18                  	// #24
    1e40:	mul	w10, w2, w3
    1e44:	orr	x2, x1, x10, lsl #32
    1e48:	sub	x2, x2, #0x1
    1e4c:	sub	x1, x2, x1, lsl #32
    1e50:	eor	x1, x1, x1, lsr #22
    1e54:	sub	x2, x1, #0x1
    1e58:	sub	x1, x2, x1, lsl #13
    1e5c:	eor	x1, x1, x1, lsr #8
    1e60:	add	x1, x1, x1, lsl #3
    1e64:	eor	x1, x1, x1, lsr #15
    1e68:	sub	x2, x1, #0x1
    1e6c:	sub	x1, x2, x1, lsl #27
    1e70:	eor	x1, x1, x1, lsr #31
    1e74:	and	w1, w0, w1
    1e78:	umull	x10, w1, w6
    1e7c:	add	x2, x4, x10
    1e80:	ldr	x10, [x4, x10]
    1e84:	cmp	x3, x10
    1e88:	b.eq	201c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x45c>  // b.none
    1e8c:	cmn	x10, #0x1
    1e90:	b.eq	2440 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x880>  // b.none
    1e94:	cmn	x10, #0x2
    1e98:	b.ne	1eac <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2ec>  // b.any
    1e9c:	ldr	x10, [x2, #8]
    1ea0:	cmp	x8, #0x0
    1ea4:	ccmn	x10, #0x2, #0x0, eq  // eq = none
    1ea8:	csel	x8, x8, x2, ne  // ne = any
    1eac:	add	w1, w1, w9
    1eb0:	add	w9, w9, #0x1
    1eb4:	and	w1, w0, w1
    1eb8:	b	1e78 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2b8>
    1ebc:	ldr	w1, [x25, #232]
    1ec0:	ldr	x4, [x25, #224]
    1ec4:	cbnz	w1, 1e14 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x254>
    1ec8:	ldr	x0, [x25, #208]
    1ecc:	mov	x2, #0x0                   	// #0
    1ed0:	add	x0, x0, #0x1
    1ed4:	str	x0, [x25, #208]
    1ed8:	ldr	w0, [x26, #8]
    1edc:	lsr	w0, w0, #1
    1ee0:	add	w3, w0, #0x1
    1ee4:	add	w4, w1, w1, lsl #1
    1ee8:	cmp	w4, w3, lsl #2
    1eec:	b.ls	22a8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6e8>  // b.plast
    1ef0:	ldr	w0, [x25, #220]
    1ef4:	sub	w0, w1, w0
    1ef8:	sub	w0, w0, w3
    1efc:	cmp	w0, w1, lsr #3
    1f00:	b.ls	2370 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7b0>  // b.plast
    1f04:	cbz	x2, 2278 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6b8>
    1f08:	ldr	w0, [x26, #8]
    1f0c:	lsr	w1, w0, #1
    1f10:	adds	w1, w1, #0x1
    1f14:	b.mi	25f8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa38>  // b.first
    1f18:	bfi	w0, w1, #1, #31
    1f1c:	str	w0, [x26, #8]
    1f20:	ldr	x0, [x2]
    1f24:	cmn	x0, #0x1
    1f28:	b.eq	2110 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x550>  // b.none
    1f2c:	ldr	w0, [x25, #220]
    1f30:	sub	w0, w0, #0x1
    1f34:	str	w0, [x25, #220]
    1f38:	ldr	q0, [sp, #128]
    1f3c:	str	wzr, [x2, #16]
    1f40:	str	w27, [x2, #16]
    1f44:	str	q0, [x2]
    1f48:	ldp	x0, x1, [sp, #128]
    1f4c:	stp	x0, x1, [sp, #152]
    1f50:	ldp	w2, w4, [x24, #8]
    1f54:	ldp	w1, w0, [x19, #8]
    1f58:	sub	w4, w4, w2
    1f5c:	cmp	w1, w0
    1f60:	b.cs	2050 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x490>  // b.hs, b.nlast
    1f64:	mov	w0, #0x18                  	// #24
    1f68:	ldr	x27, [x19]
    1f6c:	umull	x1, w1, w0
    1f70:	add	x0, x27, x1
    1f74:	mov	w1, #0x1                   	// #1
    1f78:	stp	w4, w1, [sp, #168]
    1f7c:	ldp	x2, x3, [sp, #152]
    1f80:	stp	x2, x3, [x0]
    1f84:	ldr	x1, [sp, #168]
    1f88:	str	x1, [x0, #16]
    1f8c:	ldp	w0, w2, [x19, #8]
    1f90:	mov	w1, w0
    1f94:	add	x1, x1, #0x1
    1f98:	cmp	x1, x2
    1f9c:	b.hi	25d8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa18>  // b.pmore
    1fa0:	add	w0, w0, #0x1
    1fa4:	str	w0, [x19, #8]
    1fa8:	cbnz	w0, 1d28 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x168>
    1fac:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1fb0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1fb4:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    1fb8:	add	x3, x3, #0x0
    1fbc:	add	x1, x1, #0x0
    1fc0:	add	x0, x0, #0x0
    1fc4:	mov	w2, #0xa7                  	// #167
    1fc8:	bl	0 <__assert_fail>
    1fcc:	ldr	x8, [x2, #8]
    1fd0:	cmp	x27, x8
    1fd4:	b.ne	1dc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x208>  // b.any
    1fd8:	ldr	w0, [x2, #16]
    1fdc:	add	w28, w28, w0
    1fe0:	b	1d24 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x164>
    1fe4:	ldr	x1, [x24]
    1fe8:	mov	x0, x25
    1fec:	bl	15c0 <_ZN4llvm3mca15ResourceManager15releaseResourceEm>
    1ff0:	b	1d28 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x168>
    1ff4:	cmn	x5, #0x2
    1ff8:	b.ne	1e28 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
    1ffc:	b	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    2000:	ldr	x0, [x2, #8]
    2004:	cmn	x0, #0x1
    2008:	b.ne	1d0c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x14c>  // b.any
    200c:	b	1d18 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x158>
    2010:	cmn	x5, #0x1
    2014:	b.ne	1e28 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
    2018:	b	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    201c:	ldr	x11, [x2, #8]
    2020:	cmp	x11, x5
    2024:	b.ne	1e8c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2cc>  // b.any
    2028:	ldr	w0, [x2, #16]
    202c:	add	w27, w27, w0
    2030:	str	w27, [x2, #16]
    2034:	ldp	x0, x1, [sp, #128]
    2038:	stp	x0, x1, [sp, #152]
    203c:	ldp	w2, w4, [x24, #8]
    2040:	ldp	w1, w0, [x19, #8]
    2044:	sub	w4, w4, w2
    2048:	cmp	w1, w0
    204c:	b.cc	1f64 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3a4>  // b.lo, b.ul, b.last
    2050:	mov	w0, w0
    2054:	stp	w4, w1, [sp, #104]
    2058:	add	x0, x0, #0x2
    205c:	mov	x2, #0xffffffff            	// #4294967295
    2060:	orr	x0, x0, x0, lsr #1
    2064:	orr	x0, x0, x0, lsr #2
    2068:	orr	x0, x0, x0, lsr #4
    206c:	orr	x0, x0, x0, lsr #8
    2070:	orr	x28, x0, x0, lsr #16
    2074:	orr	x28, x28, x0, lsr #32
    2078:	add	x28, x28, #0x1
    207c:	str	x28, [sp, #120]
    2080:	cmp	x28, x2
    2084:	b.hi	24e0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x920>  // b.pmore
    2088:	add	x0, x28, x28, lsl #1
    208c:	lsl	x0, x0, #3
    2090:	bl	0 <malloc>
    2094:	ldp	w4, w1, [sp, #104]
    2098:	mov	x27, x0
    209c:	cbz	x0, 25b8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9f8>
    20a0:	mov	w2, #0x18                  	// #24
    20a4:	mov	x6, x27
    20a8:	ldr	x0, [x19]
    20ac:	umull	x1, w1, w2
    20b0:	add	x7, x0, x1
    20b4:	mov	x5, x0
    20b8:	cmp	x0, x7
    20bc:	b.eq	20e0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x520>  // b.none
    20c0:	ldp	x2, x3, [x5]
    20c4:	stp	x2, x3, [x6]
    20c8:	add	x5, x5, #0x18
    20cc:	ldur	x2, [x5, #-8]
    20d0:	str	x2, [x6, #16]
    20d4:	cmp	x7, x5
    20d8:	add	x6, x6, #0x18
    20dc:	b.ne	20c0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x500>  // b.any
    20e0:	add	x2, x19, #0x10
    20e4:	cmp	x0, x2
    20e8:	b.eq	2104 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x544>  // b.none
    20ec:	str	w4, [sp, #104]
    20f0:	bl	0 <free>
    20f4:	ldr	w1, [x19, #8]
    20f8:	mov	w0, #0x18                  	// #24
    20fc:	ldr	w4, [sp, #104]
    2100:	umull	x1, w1, w0
    2104:	str	x27, [x19]
    2108:	str	w28, [x19, #12]
    210c:	b	1f70 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3b0>
    2110:	ldr	x0, [x2, #8]
    2114:	cmn	x0, #0x1
    2118:	b.ne	1f2c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x36c>  // b.any
    211c:	b	1f38 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x378>
    2120:	mov	x0, x26
    2124:	lsl	w1, w1, #1
    2128:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    212c:	ldrb	w0, [x26, #8]
    2130:	tbz	w0, #0, 226c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6ac>
    2134:	add	x4, x25, #0xe0
    2138:	mov	w1, #0x4                   	// #4
    213c:	cmn	x27, #0x3
    2140:	b.hi	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>  // b.pmore
    2144:	mov	w0, #0x25                  	// #37
    2148:	sub	w3, w1, #0x1
    214c:	mov	w6, #0x1                   	// #1
    2150:	mov	x5, #0x0                   	// #0
    2154:	mul	w0, w0, w27
    2158:	mov	w7, #0x18                  	// #24
    215c:	orr	x1, x0, x0, lsl #32
    2160:	sub	x1, x1, #0x1
    2164:	sub	x0, x1, x0, lsl #32
    2168:	eor	x0, x0, x0, lsr #22
    216c:	sub	x1, x0, #0x1
    2170:	sub	x0, x1, x0, lsl #13
    2174:	eor	x0, x0, x0, lsr #8
    2178:	add	x0, x0, x0, lsl #3
    217c:	eor	x0, x0, x0, lsr #15
    2180:	sub	x1, x0, #0x1
    2184:	sub	x0, x1, x0, lsl #27
    2188:	eor	x0, x0, x0, lsr #31
    218c:	and	w0, w3, w0
    2190:	umull	x1, w0, w7
    2194:	add	x2, x4, x1
    2198:	ldr	x1, [x4, x1]
    219c:	cmp	x27, x1
    21a0:	b.eq	248c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x8cc>  // b.none
    21a4:	cmn	x1, #0x1
    21a8:	b.ne	2630 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa70>  // b.any
    21ac:	ldr	x1, [x2, #8]
    21b0:	cmn	x1, #0x1
    21b4:	b.eq	256c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9ac>  // b.none
    21b8:	add	w0, w0, w6
    21bc:	add	w6, w6, #0x1
    21c0:	and	w0, w3, w0
    21c4:	b	2190 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x5d0>
    21c8:	mov	x0, x26
    21cc:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    21d0:	ldrb	w0, [x26, #8]
    21d4:	tbz	w0, #0, 2298 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6d8>
    21d8:	add	x4, x25, #0xe0
    21dc:	mov	w1, #0x4                   	// #4
    21e0:	cmn	x27, #0x3
    21e4:	b.hi	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>  // b.pmore
    21e8:	mov	w0, #0x25                  	// #37
    21ec:	sub	w3, w1, #0x1
    21f0:	mov	w6, #0x1                   	// #1
    21f4:	mov	x5, #0x0                   	// #0
    21f8:	mul	w0, w0, w27
    21fc:	mov	w7, #0x18                  	// #24
    2200:	orr	x1, x0, x0, lsl #32
    2204:	sub	x1, x1, #0x1
    2208:	sub	x0, x1, x0, lsl #32
    220c:	eor	x0, x0, x0, lsr #22
    2210:	sub	x1, x0, #0x1
    2214:	sub	x0, x1, x0, lsl #13
    2218:	eor	x0, x0, x0, lsr #8
    221c:	add	x0, x0, x0, lsl #3
    2220:	eor	x0, x0, x0, lsr #15
    2224:	sub	x1, x0, #0x1
    2228:	sub	x0, x1, x0, lsl #27
    222c:	eor	x0, x0, x0, lsr #31
    2230:	and	w0, w3, w0
    2234:	umull	x1, w0, w7
    2238:	add	x2, x4, x1
    223c:	ldr	x1, [x4, x1]
    2240:	cmp	x27, x1
    2244:	b.eq	24d0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x910>  // b.none
    2248:	cmn	x1, #0x1
    224c:	b.ne	265c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa9c>  // b.any
    2250:	ldr	x1, [x2, #8]
    2254:	cmn	x1, #0x1
    2258:	b.eq	256c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9ac>  // b.none
    225c:	add	w0, w0, w6
    2260:	add	w6, w6, #0x1
    2264:	and	w0, w3, w0
    2268:	b	2234 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x674>
    226c:	ldr	w1, [x25, #232]
    2270:	ldr	x4, [x25, #224]
    2274:	cbnz	w1, 213c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x57c>
    2278:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    227c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2280:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2284:	add	x3, x3, #0x0
    2288:	add	x1, x1, #0x0
    228c:	add	x0, x0, #0x0
    2290:	mov	w2, #0x22f                 	// #559
    2294:	bl	0 <__assert_fail>
    2298:	ldr	w1, [x25, #232]
    229c:	ldr	x4, [x25, #224]
    22a0:	cbnz	w1, 21e0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x620>
    22a4:	b	2278 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6b8>
    22a8:	mov	x0, x26
    22ac:	lsl	w1, w1, #1
    22b0:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    22b4:	ldrb	w0, [x26, #8]
    22b8:	tbnz	w0, #0, 2434 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x874>
    22bc:	ldr	w1, [x25, #232]
    22c0:	ldr	x7, [x25, #224]
    22c4:	cbz	w1, 2278 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6b8>
    22c8:	ldp	x5, x4, [sp, #128]
    22cc:	cmn	x5, #0x1
    22d0:	b.eq	2500 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x940>  // b.none
    22d4:	cmn	x5, #0x2
    22d8:	b.eq	250c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x94c>  // b.none
    22dc:	mov	w0, #0x25                  	// #37
    22e0:	sub	w1, w1, #0x1
    22e4:	mov	w6, #0x1                   	// #1
    22e8:	mov	x3, #0x0                   	// #0
    22ec:	mul	w2, w0, w5
    22f0:	mov	w8, #0x18                  	// #24
    22f4:	mul	w0, w0, w4
    22f8:	orr	x2, x0, x2, lsl #32
    22fc:	sub	x2, x2, #0x1
    2300:	sub	x0, x2, x0, lsl #32
    2304:	eor	x0, x0, x0, lsr #22
    2308:	sub	x2, x0, #0x1
    230c:	sub	x0, x2, x0, lsl #13
    2310:	eor	x0, x0, x0, lsr #8
    2314:	add	x0, x0, x0, lsl #3
    2318:	eor	x0, x0, x0, lsr #15
    231c:	sub	x2, x0, #0x1
    2320:	sub	x0, x2, x0, lsl #27
    2324:	eor	x0, x0, x0, lsr #31
    2328:	and	w0, w1, w0
    232c:	umull	x9, w0, w8
    2330:	add	x2, x7, x9
    2334:	ldr	x9, [x7, x9]
    2338:	cmp	x5, x9
    233c:	b.eq	2518 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x958>  // b.none
    2340:	cmn	x9, #0x1
    2344:	b.eq	2618 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa58>  // b.none
    2348:	cmn	x9, #0x2
    234c:	b.ne	2360 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7a0>  // b.any
    2350:	ldr	x9, [x2, #8]
    2354:	cmp	x3, #0x0
    2358:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    235c:	csel	x3, x3, x2, ne  // ne = any
    2360:	add	w0, w0, w6
    2364:	add	w6, w6, #0x1
    2368:	and	w0, w1, w0
    236c:	b	232c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x76c>
    2370:	mov	x0, x26
    2374:	bl	0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2378:	ldrb	w0, [x26, #8]
    237c:	tbnz	w0, #0, 2480 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x8c0>
    2380:	ldr	w1, [x25, #232]
    2384:	ldr	x7, [x25, #224]
    2388:	cbz	w1, 2278 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x6b8>
    238c:	ldp	x5, x4, [sp, #128]
    2390:	cmn	x5, #0x1
    2394:	b.eq	2534 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x974>  // b.none
    2398:	cmn	x5, #0x2
    239c:	b.eq	2528 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x968>  // b.none
    23a0:	mov	w0, #0x25                  	// #37
    23a4:	sub	w1, w1, #0x1
    23a8:	mov	w6, #0x1                   	// #1
    23ac:	mov	x3, #0x0                   	// #0
    23b0:	mul	w2, w0, w5
    23b4:	mov	w8, #0x18                  	// #24
    23b8:	mul	w0, w0, w4
    23bc:	orr	x2, x0, x2, lsl #32
    23c0:	sub	x2, x2, #0x1
    23c4:	sub	x0, x2, x0, lsl #32
    23c8:	eor	x0, x0, x0, lsr #22
    23cc:	sub	x2, x0, #0x1
    23d0:	sub	x0, x2, x0, lsl #13
    23d4:	eor	x0, x0, x0, lsr #8
    23d8:	add	x0, x0, x0, lsl #3
    23dc:	eor	x0, x0, x0, lsr #15
    23e0:	sub	x2, x0, #0x1
    23e4:	sub	x0, x2, x0, lsl #27
    23e8:	eor	x0, x0, x0, lsr #31
    23ec:	and	w0, w1, w0
    23f0:	umull	x9, w0, w8
    23f4:	add	x2, x7, x9
    23f8:	ldr	x9, [x7, x9]
    23fc:	cmp	x5, x9
    2400:	b.eq	2540 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x980>  // b.none
    2404:	cmn	x9, #0x1
    2408:	b.eq	264c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa8c>  // b.none
    240c:	cmn	x9, #0x2
    2410:	b.ne	2424 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x864>  // b.any
    2414:	ldr	x9, [x2, #8]
    2418:	cmp	x3, #0x0
    241c:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    2420:	csel	x3, x3, x2, ne  // ne = any
    2424:	add	w0, w0, w6
    2428:	add	w6, w6, #0x1
    242c:	and	w0, w1, w0
    2430:	b	23f0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x830>
    2434:	add	x7, x25, #0xe0
    2438:	mov	w1, #0x4                   	// #4
    243c:	b	22c8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x708>
    2440:	ldr	x10, [x2, #8]
    2444:	cmn	x10, #0x1
    2448:	b.ne	1eac <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2ec>  // b.any
    244c:	ldr	x0, [x25, #208]
    2450:	cmp	x8, #0x0
    2454:	csel	x2, x2, x8, eq  // eq = none
    2458:	mov	w4, #0xc                   	// #12
    245c:	add	x0, x0, #0x1
    2460:	str	x0, [x25, #208]
    2464:	mov	w1, #0x4                   	// #4
    2468:	ldr	w0, [x26, #8]
    246c:	lsr	w0, w0, #1
    2470:	add	w3, w0, #0x1
    2474:	cbnz	w7, 1ee8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x328>
    2478:	ldr	w1, [x25, #232]
    247c:	b	1ee4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x324>
    2480:	add	x7, x25, #0xe0
    2484:	mov	w1, #0x4                   	// #4
    2488:	b	238c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7cc>
    248c:	ldr	x1, [x2, #8]
    2490:	cmp	x27, x1
    2494:	b.ne	21b8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x5f8>  // b.any
    2498:	b	1ce8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x128>
    249c:	ldr	x0, [x25, #208]
    24a0:	cmp	x5, #0x0
    24a4:	csel	x2, x2, x5, eq  // eq = none
    24a8:	mov	w1, #0x4                   	// #4
    24ac:	add	x0, x0, #0x1
    24b0:	str	x0, [x25, #208]
    24b4:	mov	w5, #0xc                   	// #12
    24b8:	ldr	w0, [x26, #8]
    24bc:	lsr	w0, w0, #1
    24c0:	add	w3, w0, #0x1
    24c4:	cbnz	w4, 1cc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x108>
    24c8:	ldr	w1, [x25, #232]
    24cc:	b	1cc4 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x104>
    24d0:	ldr	x1, [x2, #8]
    24d4:	cmp	x27, x1
    24d8:	b.ne	225c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x69c>  // b.any
    24dc:	b	1ce8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x128>
    24e0:	mov	x0, x23
    24e4:	bl	0 <malloc>
    24e8:	ldr	w4, [sp, #104]
    24ec:	mov	x27, x0
    24f0:	mov	w28, #0xffffffff            	// #-1
    24f4:	cbz	x0, 25b8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x9f8>
    24f8:	ldr	w1, [sp, #108]
    24fc:	b	20a0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x4e0>
    2500:	cmn	x4, #0x1
    2504:	b.ne	22dc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x71c>  // b.any
    2508:	b	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    250c:	cmn	x4, #0x2
    2510:	b.ne	22dc <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x71c>  // b.any
    2514:	b	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    2518:	ldr	x10, [x2, #8]
    251c:	cmp	x10, x4
    2520:	b.ne	2340 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x780>  // b.any
    2524:	b	1f08 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x348>
    2528:	cmn	x4, #0x2
    252c:	b.ne	23a0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7e0>  // b.any
    2530:	b	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    2534:	cmn	x4, #0x1
    2538:	b.ne	23a0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7e0>  // b.any
    253c:	b	1c7c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xbc>
    2540:	ldr	x10, [x2, #8]
    2544:	cmp	x10, x4
    2548:	b.ne	2404 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x844>  // b.any
    254c:	b	1f08 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x348>
    2550:	cmn	x8, #0x2
    2554:	b.ne	1dc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x208>  // b.any
    2558:	ldr	x8, [x2, #8]
    255c:	cmp	x5, #0x0
    2560:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    2564:	csel	x5, x5, x2, ne  // ne = any
    2568:	b	1dc8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x208>
    256c:	cmp	x5, #0x0
    2570:	csel	x2, x2, x5, eq  // eq = none
    2574:	b	1ce8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x128>
    2578:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    257c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2580:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2584:	add	x3, x3, #0x0
    2588:	add	x1, x1, #0x0
    258c:	add	x0, x0, #0x0
    2590:	mov	w2, #0x133                 	// #307
    2594:	bl	0 <__assert_fail>
    2598:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    259c:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    25a0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    25a4:	add	x3, x3, #0x0
    25a8:	add	x1, x1, #0x0
    25ac:	add	x0, x0, #0x0
    25b0:	mov	w2, #0x13b                 	// #315
    25b4:	bl	0 <__assert_fail>
    25b8:	mov	w1, #0x1                   	// #1
    25bc:	mov	x0, x21
    25c0:	str	w4, [sp, #104]
    25c4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    25c8:	ldr	w1, [x19, #8]
    25cc:	mov	x27, #0x0                   	// #0
    25d0:	ldr	w4, [sp, #104]
    25d4:	b	20a0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x4e0>
    25d8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    25dc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    25e0:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    25e4:	add	x3, x3, #0x0
    25e8:	add	x1, x1, #0x0
    25ec:	add	x0, x0, #0x0
    25f0:	mov	w2, #0x43                  	// #67
    25f4:	bl	0 <__assert_fail>
    25f8:	adrp	x3, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    25fc:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2600:	adrp	x0, 0 <_ZN4llvm3mca23DefaultResourceStrategy4usedEm>
    2604:	add	x3, x3, #0x0
    2608:	add	x1, x1, #0x0
    260c:	add	x0, x0, #0x0
    2610:	mov	w2, #0x441                 	// #1089
    2614:	bl	0 <__assert_fail>
    2618:	ldr	x9, [x2, #8]
    261c:	cmn	x9, #0x1
    2620:	b.ne	2360 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x7a0>  // b.any
    2624:	cmp	x3, #0x0
    2628:	csel	x2, x2, x3, eq  // eq = none
    262c:	b	1f08 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x348>
    2630:	cmn	x1, #0x2
    2634:	b.ne	21b8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x5f8>  // b.any
    2638:	ldr	x1, [x2, #8]
    263c:	cmp	x5, #0x0
    2640:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    2644:	csel	x5, x5, x2, ne  // ne = any
    2648:	b	21b8 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x5f8>
    264c:	ldr	x9, [x2, #8]
    2650:	cmn	x9, #0x1
    2654:	b.ne	2424 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x864>  // b.any
    2658:	b	2624 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xa64>
    265c:	cmn	x1, #0x2
    2660:	b.ne	225c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x69c>  // b.any
    2664:	ldr	x1, [x2, #8]
    2668:	cmp	x5, #0x0
    266c:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    2670:	csel	x5, x5, x2, ne  // ne = any
    2674:	b	225c <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x69c>

Disassembly of section .text._ZN4llvm3mca16ResourceStrategy4usedEm:

0000000000000000 <_ZN4llvm3mca16ResourceStrategy4usedEm>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD2Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategyD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>

Disassembly of section .text._ZN4llvm3mca23DefaultResourceStrategyD0Ev:

0000000000000000 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca23DefaultResourceStrategyD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	130 <_ZN4llvm3mca16ResourceStrategyD1Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x20                  	// #32
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD2Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	stp	x23, x24, [sp, #48]
  28:	str	x1, [x20], #208
  2c:	ldrb	w0, [x20, #8]
  30:	tbz	w0, #0, 14c <_ZN4llvm3mca15ResourceManagerD1Ev+0x14c>
  34:	ldr	x0, [x19, #160]
  38:	add	x1, x19, #0xb0
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca15ResourceManagerD1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #80]
  4c:	add	x1, x19, #0x60
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm3mca15ResourceManagerD1Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	ldr	x0, [x19, #56]
  60:	cbz	x0, 68 <_ZN4llvm3mca15ResourceManagerD1Ev+0x68>
  64:	bl	0 <_ZdlPv>
  68:	ldp	x21, x23, [x19, #32]
  6c:	cmp	x21, x23
  70:	b.eq	e4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe4>  // b.none
  74:	adrp	x22, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  78:	adrp	x24, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
  7c:	add	x24, x24, #0x0
  80:	ldr	x22, [x22]
  84:	add	x22, x22, #0x10
  88:	b	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>
  8c:	str	x22, [x20]
  90:	mov	x0, x20
  94:	bl	130 <_ZN4llvm3mca15ResourceManagerD1Ev+0x130>
  98:	mov	x0, x20
  9c:	mov	x1, #0x20                  	// #32
  a0:	bl	0 <_ZdlPvm>
  a4:	add	x21, x21, #0x8
  a8:	cmp	x23, x21
  ac:	b.eq	e0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xe0>  // b.none
  b0:	ldr	x20, [x21]
  b4:	cbz	x20, a4 <_ZN4llvm3mca15ResourceManagerD1Ev+0xa4>
  b8:	ldr	x0, [x20]
  bc:	ldr	x1, [x0, #8]
  c0:	cmp	x1, x24
  c4:	b.eq	8c <_ZN4llvm3mca15ResourceManagerD1Ev+0x8c>  // b.none
  c8:	mov	x0, x20
  cc:	add	x21, x21, #0x8
  d0:	blr	x1
  d4:	cmp	x23, x21
  d8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xb0>  // b.any
  dc:	nop
  e0:	ldr	x23, [x19, #32]
  e4:	cbz	x23, f0 <_ZN4llvm3mca15ResourceManagerD1Ev+0xf0>
  e8:	mov	x0, x23
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x20, x21, [x19, #8]
  f4:	cmp	x20, x21
  f8:	b.eq	120 <_ZN4llvm3mca15ResourceManagerD1Ev+0x120>  // b.none
  fc:	nop
 100:	ldr	x0, [x20]
 104:	add	x20, x20, #0x8
 108:	cbz	x0, 13c <_ZN4llvm3mca15ResourceManagerD1Ev+0x13c>
 10c:	mov	x1, #0x30                  	// #48
 110:	bl	0 <_ZdlPvm>
 114:	cmp	x21, x20
 118:	b.ne	100 <_ZN4llvm3mca15ResourceManagerD1Ev+0x100>  // b.any
 11c:	ldr	x21, [x19, #8]
 120:	cbz	x21, 188 <_ZN4llvm3mca15ResourceManagerD1Ev+0x188>
 124:	mov	x0, x21
 128:	ldp	x19, x20, [sp, #16]
 12c:	ldp	x21, x22, [sp, #32]
 130:	ldp	x23, x24, [sp, #48]
 134:	ldp	x29, x30, [sp], #64
 138:	b	0 <_ZdlPv>
 13c:	cmp	x21, x20
 140:	b.ne	100 <_ZN4llvm3mca15ResourceManagerD1Ev+0x100>  // b.any
 144:	ldr	x21, [x19, #8]
 148:	b	120 <_ZN4llvm3mca15ResourceManagerD1Ev+0x120>
 14c:	ldr	w2, [x19, #232]
 150:	mov	w1, #0x18                  	// #24
 154:	ldr	x0, [x19, #224]
 158:	umull	x1, w2, w1
 15c:	bl	0 <_ZdlPvm>
 160:	ldrb	w0, [x20, #8]
 164:	tbz	w0, #0, 34 <_ZN4llvm3mca15ResourceManagerD1Ev+0x34>
 168:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 16c:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 170:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD1Ev>
 174:	add	x3, x3, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x0, x0, #0x0
 180:	mov	w2, #0x45b                 	// #1115
 184:	bl	0 <__assert_fail>
 188:	ldp	x19, x20, [sp, #16]
 18c:	ldp	x21, x22, [sp, #32]
 190:	ldp	x23, x24, [sp, #48]
 194:	ldp	x29, x30, [sp], #64
 198:	ret

Disassembly of section .text._ZN4llvm3mca15ResourceManagerD0Ev:

0000000000000000 <_ZN4llvm3mca15ResourceManagerD0Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x20, x0
  18:	stp	x21, x22, [sp, #32]
  1c:	add	x1, x1, #0x10
  20:	mov	x19, x0
  24:	stp	x23, x24, [sp, #48]
  28:	str	x1, [x20], #208
  2c:	ldrb	w0, [x20, #8]
  30:	tbz	w0, #0, 158 <_ZN4llvm3mca15ResourceManagerD0Ev+0x158>
  34:	ldr	x0, [x19, #160]
  38:	add	x1, x19, #0xb0
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca15ResourceManagerD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	ldr	x0, [x19, #80]
  4c:	add	x1, x19, #0x60
  50:	cmp	x0, x1
  54:	b.eq	5c <_ZN4llvm3mca15ResourceManagerD0Ev+0x5c>  // b.none
  58:	bl	0 <free>
  5c:	ldr	x0, [x19, #56]
  60:	cbz	x0, 68 <_ZN4llvm3mca15ResourceManagerD0Ev+0x68>
  64:	bl	0 <_ZdlPv>
  68:	ldp	x21, x23, [x19, #32]
  6c:	cmp	x21, x23
  70:	b.eq	e4 <_ZN4llvm3mca15ResourceManagerD0Ev+0xe4>  // b.none
  74:	adrp	x22, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  78:	adrp	x24, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
  7c:	add	x24, x24, #0x0
  80:	ldr	x22, [x22]
  84:	add	x22, x22, #0x10
  88:	b	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>
  8c:	str	x22, [x20]
  90:	mov	x0, x20
  94:	bl	130 <_ZN4llvm3mca15ResourceManagerD0Ev+0x130>
  98:	mov	x0, x20
  9c:	mov	x1, #0x20                  	// #32
  a0:	bl	0 <_ZdlPvm>
  a4:	add	x21, x21, #0x8
  a8:	cmp	x23, x21
  ac:	b.eq	e0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xe0>  // b.none
  b0:	ldr	x20, [x21]
  b4:	cbz	x20, a4 <_ZN4llvm3mca15ResourceManagerD0Ev+0xa4>
  b8:	ldr	x0, [x20]
  bc:	ldr	x1, [x0, #8]
  c0:	cmp	x1, x24
  c4:	b.eq	8c <_ZN4llvm3mca15ResourceManagerD0Ev+0x8c>  // b.none
  c8:	mov	x0, x20
  cc:	add	x21, x21, #0x8
  d0:	blr	x1
  d4:	cmp	x23, x21
  d8:	b.ne	b0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xb0>  // b.any
  dc:	nop
  e0:	ldr	x23, [x19, #32]
  e4:	cbz	x23, f0 <_ZN4llvm3mca15ResourceManagerD0Ev+0xf0>
  e8:	mov	x0, x23
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x20, x21, [x19, #8]
  f4:	cmp	x20, x21
  f8:	b.eq	120 <_ZN4llvm3mca15ResourceManagerD0Ev+0x120>  // b.none
  fc:	nop
 100:	ldr	x0, [x20]
 104:	add	x20, x20, #0x8
 108:	cbz	x0, 148 <_ZN4llvm3mca15ResourceManagerD0Ev+0x148>
 10c:	mov	x1, #0x30                  	// #48
 110:	bl	0 <_ZdlPvm>
 114:	cmp	x21, x20
 118:	b.ne	100 <_ZN4llvm3mca15ResourceManagerD0Ev+0x100>  // b.any
 11c:	ldr	x21, [x19, #8]
 120:	cbz	x21, 12c <_ZN4llvm3mca15ResourceManagerD0Ev+0x12c>
 124:	mov	x0, x21
 128:	bl	0 <_ZdlPv>
 12c:	mov	x0, x19
 130:	mov	x1, #0x168                 	// #360
 134:	ldp	x19, x20, [sp, #16]
 138:	ldp	x21, x22, [sp, #32]
 13c:	ldp	x23, x24, [sp, #48]
 140:	ldp	x29, x30, [sp], #64
 144:	b	0 <_ZdlPvm>
 148:	cmp	x21, x20
 14c:	b.ne	100 <_ZN4llvm3mca15ResourceManagerD0Ev+0x100>  // b.any
 150:	ldr	x21, [x19, #8]
 154:	b	120 <_ZN4llvm3mca15ResourceManagerD0Ev+0x120>
 158:	ldr	w2, [x19, #232]
 15c:	mov	w1, #0x18                  	// #24
 160:	ldr	x0, [x19, #224]
 164:	umull	x1, w2, w1
 168:	bl	0 <_ZdlPvm>
 16c:	ldrb	w0, [x20, #8]
 170:	tbz	w0, #0, 34 <_ZN4llvm3mca15ResourceManagerD0Ev+0x34>
 174:	adrp	x3, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 178:	adrp	x1, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 17c:	adrp	x0, 0 <_ZN4llvm3mca15ResourceManagerD0Ev>
 180:	add	x3, x3, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x0, x0, #0x0
 18c:	mov	w2, #0x45b                 	// #1115
 190:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	cmp	w1, #0x4
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	w22, w1
  1c:	ldrb	w0, [x0, #8]
  20:	and	w1, w0, #0x1
  24:	b.ls	98 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x98>  // b.plast
  28:	sub	w0, w22, #0x1
  2c:	orr	x0, x0, x0, lsr #1
  30:	orr	x0, x0, x0, lsr #2
  34:	orr	x0, x0, x0, lsr #4
  38:	orr	x0, x0, x0, lsr #8
  3c:	orr	x0, x0, x0, lsr #16
  40:	add	x0, x0, #0x1
  44:	cmp	w0, #0x40
  48:	mov	w22, w0
  4c:	b.hi	630 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x630>  // b.pmore
  50:	cbnz	w1, 664 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x664>
  54:	ldr	w21, [x19, #24]
  58:	mov	x0, #0x600                 	// #1536
  5c:	ldr	x20, [x19, #16]
  60:	mov	w22, #0x40                  	// #64
  64:	bl	0 <_Znwm>
  68:	str	x0, [x19, #16]
  6c:	ldr	x0, [x19, #8]
  70:	mov	w3, #0x18                  	// #24
  74:	str	w22, [x19, #24]
  78:	umull	x1, w21, w3
  7c:	and	x0, x0, #0x1
  80:	str	x0, [x19, #8]
  84:	add	x6, x20, x1
  88:	cbz	x0, c8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xc8>
  8c:	add	x0, x19, #0x10
  90:	mov	x2, #0x60                  	// #96
  94:	b	e0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe0>
  98:	cbnz	w1, 29c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x29c>
  9c:	orr	w0, w0, #0x1
  a0:	strb	w0, [x19, #8]
  a4:	ldr	w21, [x19, #24]
  a8:	mov	w3, #0x18                  	// #24
  ac:	ldr	x0, [x19, #8]
  b0:	ldr	x20, [x19, #16]
  b4:	umull	x1, w21, w3
  b8:	and	x0, x0, #0x1
  bc:	str	x0, [x19, #8]
  c0:	add	x6, x20, x1
  c4:	cbnz	x0, 8c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x8c>
  c8:	ldr	w2, [x19, #24]
  cc:	sub	w0, w2, #0x1
  d0:	tst	w0, w2
  d4:	b.ne	6d4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x6d4>  // b.any
  d8:	umull	x2, w2, w3
  dc:	ldr	x0, [x19, #16]
  e0:	add	x2, x0, x2
  e4:	mvni	v0.4s, #0x0
  e8:	cmp	x0, x2
  ec:	b.eq	fc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xfc>  // b.none
  f0:	str	q0, [x0], #24
  f4:	cmp	x2, x0
  f8:	b.ne	f0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf0>  // b.any
  fc:	cmp	x6, x20
 100:	mov	x0, x20
 104:	add	x10, x19, #0x10
 108:	mov	w8, #0x25                  	// #37
 10c:	mov	w9, #0x18                  	// #24
 110:	b.eq	218 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x218>  // b.none
 114:	str	x23, [sp, #48]
 118:	ldr	x3, [x0]
 11c:	cmn	x3, #0x1
 120:	b.eq	1f8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1f8>  // b.none
 124:	cmn	x3, #0x2
 128:	b.eq	22c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x22c>  // b.none
 12c:	ldrb	w2, [x19, #8]
 130:	tbz	w2, #0, 1e0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1e0>
 134:	mov	x7, x10
 138:	mov	w2, #0x4                   	// #4
 13c:	cmn	x3, #0x1
 140:	ldr	x11, [x0, #8]
 144:	b.eq	23c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x23c>  // b.none
 148:	cmn	x3, #0x2
 14c:	b.eq	264 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x264>  // b.none
 150:	sub	w5, w2, #0x1
 154:	mul	w4, w8, w3
 158:	mul	w2, w8, w11
 15c:	mov	w13, #0x1                   	// #1
 160:	mov	x12, #0x0                   	// #0
 164:	orr	x4, x2, x4, lsl #32
 168:	sub	x4, x4, #0x1
 16c:	sub	x2, x4, x2, lsl #32
 170:	eor	x2, x2, x2, lsr #22
 174:	sub	x4, x2, #0x1
 178:	sub	x2, x4, x2, lsl #13
 17c:	eor	x2, x2, x2, lsr #8
 180:	add	x2, x2, x2, lsl #3
 184:	eor	x2, x2, x2, lsr #15
 188:	sub	x4, x2, #0x1
 18c:	sub	x2, x4, x2, lsl #27
 190:	eor	x2, x2, x2, lsr #31
 194:	and	w2, w5, w2
 198:	umull	x4, w2, w9
 19c:	add	x14, x7, x4
 1a0:	ldr	x4, [x7, x4]
 1a4:	cmp	x3, x4
 1a8:	b.eq	270 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x270>  // b.none
 1ac:	cmn	x4, #0x1
 1b0:	b.eq	728 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x728>  // b.none
 1b4:	cmn	x4, #0x2
 1b8:	b.ne	1d0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1d0>  // b.any
 1bc:	ldr	x4, [x14, #8]
 1c0:	cmp	x12, #0x0
 1c4:	ccmn	x4, #0x2, #0x0, eq  // eq = none
 1c8:	csel	x12, x12, x14, ne  // ne = any
 1cc:	nop
 1d0:	add	w2, w2, w13
 1d4:	add	w13, w13, #0x1
 1d8:	and	w2, w5, w2
 1dc:	b	198 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x198>
 1e0:	ldr	w2, [x19, #24]
 1e4:	ldr	x7, [x19, #16]
 1e8:	cbnz	w2, 13c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x13c>
 1ec:	mov	x0, #0x0                   	// #0
 1f0:	str	xzr, [x0]
 1f4:	brk	#0x3e8
 1f8:	ldr	x2, [x0, #8]
 1fc:	cmn	x2, #0x1
 200:	b.ne	12c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x12c>  // b.any
 204:	nop
 208:	add	x0, x0, #0x18
 20c:	cmp	x6, x0
 210:	b.ne	118 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x118>  // b.any
 214:	ldr	x23, [sp, #48]
 218:	mov	x0, x20
 21c:	ldp	x19, x20, [sp, #16]
 220:	ldp	x21, x22, [sp, #32]
 224:	ldp	x29, x30, [sp], #160
 228:	b	0 <_ZdlPvm>
 22c:	ldr	x2, [x0, #8]
 230:	cmn	x2, #0x2
 234:	b.ne	12c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x12c>  // b.any
 238:	b	208 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x208>
 23c:	cmn	x11, #0x1
 240:	b.ne	150 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x150>  // b.any
 244:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 248:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 24c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 250:	add	x3, x3, #0x0
 254:	add	x1, x1, #0x0
 258:	add	x0, x0, #0x0
 25c:	mov	w2, #0x250                 	// #592
 260:	bl	0 <__assert_fail>
 264:	cmn	x11, #0x2
 268:	b.ne	150 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x150>  // b.any
 26c:	b	244 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x244>
 270:	ldr	x15, [x14, #8]
 274:	cmp	x15, x11
 278:	b.ne	1ac <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1ac>  // b.any
 27c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 280:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 284:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 288:	add	x3, x3, #0x0
 28c:	add	x1, x1, #0x0
 290:	add	x0, x0, #0x0
 294:	mov	w2, #0x17a                 	// #378
 298:	bl	0 <__assert_fail>
 29c:	add	x20, x19, #0x10
 2a0:	add	x2, x19, #0x70
 2a4:	str	x23, [sp, #48]
 2a8:	ldr	x0, [x20]
 2ac:	cmn	x0, #0x1
 2b0:	b.eq	64c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x64c>  // b.none
 2b4:	cmn	x0, #0x2
 2b8:	b.eq	678 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x678>  // b.none
 2bc:	add	x23, sp, #0x40
 2c0:	ldr	w3, [x20, #16]
 2c4:	add	x21, x23, #0x18
 2c8:	str	w3, [sp, #80]
 2cc:	ldp	x0, x1, [x20]
 2d0:	stp	x0, x1, [sp, #64]
 2d4:	add	x0, x20, #0x18
 2d8:	cmp	x2, x0
 2dc:	b.eq	414 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x414>  // b.none
 2e0:	ldr	x0, [x20, #24]
 2e4:	cmn	x0, #0x1
 2e8:	b.eq	6b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x6b4>  // b.none
 2ec:	cmn	x0, #0x2
 2f0:	b.eq	688 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x688>  // b.none
 2f4:	sub	x0, x21, x23
 2f8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 2fc:	movk	x1, #0xaaab
 300:	asr	x0, x0, #3
 304:	mul	x0, x0, x1
 308:	cmp	x0, #0x3
 30c:	b.hi	7b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x7b4>  // b.pmore
 310:	ldp	x0, x1, [x20, #24]
 314:	stp	x0, x1, [x21]
 318:	ldr	w0, [x20, #40]
 31c:	add	x21, x21, #0x18
 320:	stur	w0, [x21, #-8]
 324:	add	x0, x20, #0x30
 328:	cmp	x2, x0
 32c:	b.eq	414 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x414>  // b.none
 330:	ldr	x0, [x20, #48]
 334:	cmn	x0, #0x1
 338:	b.eq	698 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x698>  // b.none
 33c:	cmn	x0, #0x2
 340:	b.eq	6c4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x6c4>  // b.none
 344:	sub	x0, x21, x23
 348:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 34c:	movk	x1, #0xaaab
 350:	asr	x0, x0, #3
 354:	mul	x0, x0, x1
 358:	cmp	x0, #0x3
 35c:	b.hi	7b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x7b4>  // b.pmore
 360:	ldp	x0, x1, [x20, #48]
 364:	stp	x0, x1, [x21]
 368:	ldr	w0, [x20, #64]
 36c:	add	x21, x21, #0x18
 370:	stur	w0, [x21, #-8]
 374:	add	x0, x20, #0x48
 378:	cmp	x2, x0
 37c:	b.eq	414 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x414>  // b.none
 380:	ldr	x0, [x20, #72]
 384:	cmn	x0, #0x1
 388:	b.eq	6f8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x6f8>  // b.none
 38c:	cmn	x0, #0x2
 390:	b.eq	708 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x708>  // b.none
 394:	sub	x0, x21, x23
 398:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 39c:	movk	x1, #0xaaab
 3a0:	asr	x0, x0, #3
 3a4:	mul	x0, x0, x1
 3a8:	cmp	x0, #0x3
 3ac:	b.hi	7b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x7b4>  // b.pmore
 3b0:	ldp	x0, x1, [x20, #72]
 3b4:	stp	x0, x1, [x21]
 3b8:	ldr	w0, [x20, #88]
 3bc:	add	x21, x21, #0x18
 3c0:	stur	w0, [x21, #-8]
 3c4:	add	x0, x20, #0x60
 3c8:	cmp	x2, x0
 3cc:	b.eq	414 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x414>  // b.none
 3d0:	ldr	x0, [x20, #96]
 3d4:	cmn	x0, #0x1
 3d8:	b.eq	718 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x718>  // b.none
 3dc:	cmn	x0, #0x2
 3e0:	b.eq	76c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x76c>  // b.none
 3e4:	sub	x0, x21, x23
 3e8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 3ec:	movk	x1, #0xaaab
 3f0:	asr	x0, x0, #3
 3f4:	mul	x0, x0, x1
 3f8:	cmp	x0, #0x3
 3fc:	b.hi	7b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x7b4>  // b.pmore
 400:	ldp	x0, x1, [x20, #96]
 404:	stp	x0, x1, [x21]
 408:	ldr	w0, [x20, #112]
 40c:	add	x21, x21, #0x18
 410:	stur	w0, [x21, #-8]
 414:	cmp	w22, #0x4
 418:	b.ls	43c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x43c>  // b.plast
 41c:	mov	w0, #0x18                  	// #24
 420:	ldrb	w1, [x19, #8]
 424:	umull	x0, w22, w0
 428:	and	w1, w1, #0xfffffffe
 42c:	strb	w1, [x19, #8]
 430:	bl	0 <_Znwm>
 434:	str	x0, [x19, #16]
 438:	str	w22, [x19, #24]
 43c:	ldr	x0, [x19, #8]
 440:	and	x0, x0, #0x1
 444:	str	x0, [x19, #8]
 448:	cbnz	x0, 6a8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x6a8>
 44c:	ldr	w1, [x19, #24]
 450:	sub	w0, w1, #0x1
 454:	tst	w0, w1
 458:	b.ne	6d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x6d8>  // b.any
 45c:	mov	w2, #0x18                  	// #24
 460:	ldr	x0, [x19, #16]
 464:	umull	x1, w1, w2
 468:	mvni	v0.4s, #0x0
 46c:	add	x1, x0, x1
 470:	cmp	x0, x1
 474:	b.eq	484 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x484>  // b.none
 478:	str	q0, [x0], #24
 47c:	cmp	x1, x0
 480:	b.ne	478 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x478>  // b.any
 484:	mov	x0, x23
 488:	cmp	x21, x23
 48c:	mov	w6, #0x25                  	// #37
 490:	mov	w7, #0x18                  	// #24
 494:	b.eq	5b0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5b0>  // b.none
 498:	ldr	x3, [x0]
 49c:	cmn	x3, #0x1
 4a0:	b.eq	548 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x548>  // b.none
 4a4:	cmn	x3, #0x2
 4a8:	b.eq	5c4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5c4>  // b.none
 4ac:	ldrb	w1, [x19, #8]
 4b0:	tbz	w1, #0, 5ec <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5ec>
 4b4:	ldr	x5, [x0, #8]
 4b8:	mov	x8, x20
 4bc:	mov	w4, #0x3                   	// #3
 4c0:	mul	w1, w6, w5
 4c4:	mov	w10, #0x1                   	// #1
 4c8:	mul	w2, w6, w3
 4cc:	mov	x9, #0x0                   	// #0
 4d0:	orr	x2, x1, x2, lsl #32
 4d4:	sub	x2, x2, #0x1
 4d8:	sub	x1, x2, x1, lsl #32
 4dc:	eor	x1, x1, x1, lsr #22
 4e0:	sub	x2, x1, #0x1
 4e4:	sub	x1, x2, x1, lsl #13
 4e8:	eor	x1, x1, x1, lsr #8
 4ec:	add	x1, x1, x1, lsl #3
 4f0:	eor	x1, x1, x1, lsr #15
 4f4:	sub	x2, x1, #0x1
 4f8:	sub	x1, x2, x1, lsl #27
 4fc:	eor	x1, x1, x1, lsr #31
 500:	and	w1, w4, w1
 504:	umull	x2, w1, w7
 508:	add	x11, x8, x2
 50c:	ldr	x2, [x8, x2]
 510:	cmp	x3, x2
 514:	b.eq	604 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x604>  // b.none
 518:	cmn	x2, #0x1
 51c:	b.eq	56c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x56c>  // b.none
 520:	cmn	x2, #0x2
 524:	b.ne	538 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x538>  // b.any
 528:	ldr	x2, [x11, #8]
 52c:	cmp	x9, #0x0
 530:	ccmn	x2, #0x2, #0x0, eq  // eq = none
 534:	csel	x9, x9, x11, ne  // ne = any
 538:	add	w1, w1, w10
 53c:	add	w10, w10, #0x1
 540:	and	w1, w1, w4
 544:	b	504 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x504>
 548:	ldr	x5, [x0, #8]
 54c:	cmn	x5, #0x1
 550:	b.eq	5a4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5a4>  // b.none
 554:	ldrb	w1, [x19, #8]
 558:	tbz	w1, #0, 5d8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5d8>
 55c:	mov	w4, #0x4                   	// #4
 560:	mov	x8, x20
 564:	sub	w4, w4, #0x1
 568:	b	4c0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4c0>
 56c:	ldr	x2, [x11, #8]
 570:	cmn	x2, #0x1
 574:	b.ne	538 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x538>  // b.any
 578:	cmp	x9, #0x0
 57c:	ldr	w1, [x0, #16]
 580:	csel	x9, x9, x11, ne  // ne = any
 584:	stp	x3, x5, [x9]
 588:	str	w1, [x9, #16]
 58c:	ldr	w1, [x19, #8]
 590:	lsr	w2, w1, #1
 594:	adds	w2, w2, #0x1
 598:	b.mi	794 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x794>  // b.first
 59c:	bfi	w1, w2, #1, #31
 5a0:	str	w1, [x19, #8]
 5a4:	add	x0, x0, #0x18
 5a8:	cmp	x0, x21
 5ac:	b.ne	498 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x498>  // b.any
 5b0:	ldp	x19, x20, [sp, #16]
 5b4:	ldp	x21, x22, [sp, #32]
 5b8:	ldr	x23, [sp, #48]
 5bc:	ldp	x29, x30, [sp], #160
 5c0:	ret
 5c4:	ldr	x5, [x0, #8]
 5c8:	cmn	x5, #0x2
 5cc:	b.eq	5a4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x5a4>  // b.none
 5d0:	ldrb	w1, [x19, #8]
 5d4:	tbnz	w1, #0, 55c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x55c>
 5d8:	ldr	w4, [x19, #24]
 5dc:	cbz	w4, 1ec <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1ec>
 5e0:	sub	w4, w4, #0x1
 5e4:	ldr	x8, [x19, #16]
 5e8:	b	4c0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4c0>
 5ec:	ldr	w4, [x19, #24]
 5f0:	cbz	w4, 1ec <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1ec>
 5f4:	sub	w4, w4, #0x1
 5f8:	ldr	x5, [x0, #8]
 5fc:	ldr	x8, [x19, #16]
 600:	b	4c0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x4c0>
 604:	ldr	x12, [x11, #8]
 608:	cmp	x12, x5
 60c:	b.ne	518 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x518>  // b.any
 610:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 614:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 618:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 61c:	add	x3, x3, #0x0
 620:	add	x1, x1, #0x0
 624:	add	x0, x0, #0x0
 628:	mov	w2, #0x17a                 	// #378
 62c:	bl	0 <__assert_fail>
 630:	add	x20, x19, #0x10
 634:	add	x2, x19, #0x70
 638:	cbz	w1, 77c <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x77c>
 63c:	ldr	x0, [x20]
 640:	str	x23, [sp, #48]
 644:	cmn	x0, #0x1
 648:	b.ne	2b4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2b4>  // b.any
 64c:	ldr	x0, [x20, #8]
 650:	cmn	x0, #0x1
 654:	b.ne	2bc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2bc>  // b.any
 658:	add	x23, sp, #0x40
 65c:	mov	x21, x23
 660:	b	2d4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2d4>
 664:	add	x20, x19, #0x10
 668:	add	x2, x19, #0x70
 66c:	mov	w22, #0x40                  	// #64
 670:	str	x23, [sp, #48]
 674:	b	2a8 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2a8>
 678:	ldr	x0, [x20, #8]
 67c:	cmn	x0, #0x2
 680:	b.ne	2bc <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2bc>  // b.any
 684:	b	658 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x658>
 688:	ldr	x0, [x20, #32]
 68c:	cmn	x0, #0x2
 690:	b.ne	2f4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2f4>  // b.any
 694:	b	324 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x324>
 698:	ldr	x0, [x20, #56]
 69c:	cmn	x0, #0x1
 6a0:	b.ne	344 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x344>  // b.any
 6a4:	b	374 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x374>
 6a8:	mov	x0, x20
 6ac:	mov	x1, #0x60                  	// #96
 6b0:	b	468 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x468>
 6b4:	ldr	x0, [x20, #32]
 6b8:	cmn	x0, #0x1
 6bc:	b.ne	2f4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x2f4>  // b.any
 6c0:	b	324 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x324>
 6c4:	ldr	x0, [x20, #56]
 6c8:	cmn	x0, #0x2
 6cc:	b.ne	344 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x344>  // b.any
 6d0:	b	374 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x374>
 6d4:	str	x23, [sp, #48]
 6d8:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 6dc:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 6e0:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 6e4:	add	x3, x3, #0x0
 6e8:	add	x1, x1, #0x0
 6ec:	add	x0, x0, #0x0
 6f0:	mov	w2, #0x15b                 	// #347
 6f4:	bl	0 <__assert_fail>
 6f8:	ldr	x0, [x20, #80]
 6fc:	cmn	x0, #0x1
 700:	b.ne	394 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x394>  // b.any
 704:	b	3c4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3c4>
 708:	ldr	x0, [x20, #80]
 70c:	cmn	x0, #0x2
 710:	b.ne	394 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x394>  // b.any
 714:	b	3c4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3c4>
 718:	ldr	x0, [x20, #104]
 71c:	cmn	x0, #0x1
 720:	b.ne	3e4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3e4>  // b.any
 724:	b	414 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x414>
 728:	ldr	x4, [x14, #8]
 72c:	cmn	x4, #0x1
 730:	b.ne	1d0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x1d0>  // b.any
 734:	cmp	x12, #0x0
 738:	ldr	w2, [x0, #16]
 73c:	csel	x12, x12, x14, ne  // ne = any
 740:	str	x3, [x12]
 744:	ldr	x3, [x0, #8]
 748:	str	x3, [x12, #8]
 74c:	str	w2, [x12, #16]
 750:	ldr	w2, [x19, #8]
 754:	lsr	w3, w2, #1
 758:	adds	w3, w3, #0x1
 75c:	b.mi	794 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x794>  // b.first
 760:	bfi	w2, w3, #1, #31
 764:	str	w2, [x19, #8]
 768:	b	208 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x208>
 76c:	ldr	x0, [x20, #104]
 770:	cmn	x0, #0x2
 774:	b.ne	3e4 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x3e4>  // b.any
 778:	b	414 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x414>
 77c:	ubfiz	x2, x0, #1, #32
 780:	ldr	w21, [x19, #24]
 784:	add	x2, x2, w0, uxtw
 788:	ldr	x20, [x19, #16]
 78c:	lsl	x0, x2, #3
 790:	b	64 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x64>
 794:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 798:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 79c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 7a0:	add	x3, x3, #0x0
 7a4:	add	x1, x1, #0x0
 7a8:	add	x0, x0, #0x0
 7ac:	mov	w2, #0x441                 	// #1089
 7b0:	bl	0 <__assert_fail>
 7b4:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 7b8:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 7bc:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapISt4pairImmEjLj4ENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 7c0:	add	x3, x3, #0x0
 7c4:	add	x1, x1, #0x0
 7c8:	add	x0, x0, #0x0
 7cc:	mov	w2, #0x401                 	// #1025
 7d0:	bl	0 <__assert_fail>

RetireControlUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>:
   0:	ldr	x8, [x1, #8]
   4:	mov	x3, x0
   8:	ldr	w0, [x0, #16]
   c:	ldr	x2, [x8]
  10:	ldr	w5, [x3, #20]
  14:	ldr	w2, [x2, #316]
  18:	cmp	w2, w0
  1c:	csel	w2, w2, w0, ls  // ls = plast
  20:	cmp	w2, #0x0
  24:	csinc	w2, w2, wzr, ne  // ne = any
  28:	cmp	w5, w2
  2c:	b.cc	88 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE+0x88>  // b.lo, b.ul, b.last
  30:	ldp	x7, x4, [x3, #32]
  34:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  38:	ldr	w0, [x3, #8]
  3c:	movk	x6, #0xaaab
  40:	ldr	w10, [x1]
  44:	mov	w11, #0x18                  	// #24
  48:	add	w9, w2, w0
  4c:	sub	w5, w5, w2
  50:	sub	x4, x4, x7
  54:	asr	x1, x4, #3
  58:	umull	x4, w0, w11
  5c:	mul	x1, x1, x6
  60:	add	x6, x7, x4
  64:	str	w10, [x7, x4]
  68:	str	x8, [x6, #8]
  6c:	udiv	x4, x9, x1
  70:	str	w2, [x6, #16]
  74:	strb	wzr, [x6, #20]
  78:	str	w5, [x3, #20]
  7c:	msub	x1, x4, x1, x9
  80:	str	w1, [x3, #8]
  84:	ret
  88:	stp	x29, x30, [sp, #-16]!
  8c:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  90:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  94:	mov	x29, sp
  98:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  9c:	add	x3, x3, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x0, x0, #0x0
  a8:	mov	w2, #0x2c                  	// #44
  ac:	bl	0 <__assert_fail>

00000000000000b0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>:
  b0:	ldr	w1, [x0, #12]
  b4:	mov	w2, #0x18                  	// #24
  b8:	ldr	x0, [x0, #32]
  bc:	umaddl	x0, w1, w2, x0
  c0:	ldr	x1, [x0, #8]
  c4:	cbz	x1, cc <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv+0x1c>
  c8:	ret
  cc:	stp	x29, x30, [sp, #-16]!
  d0:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  d4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  d8:	mov	x29, sp
  dc:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
  e0:	add	x3, x3, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x0, x0, #0x0
  ec:	mov	w2, #0x3b                  	// #59
  f0:	bl	0 <__assert_fail>
  f4:	nop

00000000000000f8 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>:
  f8:	stp	x29, x30, [sp, #-32]!
  fc:	mov	x29, sp
 100:	str	x19, [sp, #16]
 104:	mov	x19, x0
 108:	bl	b0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 10c:	ldr	w3, [x0, #16]
 110:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 114:	ldp	x1, x2, [x19, #32]
 118:	movk	x4, #0xaaab
 11c:	ldr	w0, [x19, #12]
 120:	cmp	w3, #0x0
 124:	ldr	x19, [sp, #16]
 128:	ldp	x29, x30, [sp], #32
 12c:	sub	x1, x2, x1
 130:	csinc	w2, w3, wzr, ne  // ne = any
 134:	asr	x1, x1, #3
 138:	add	w2, w2, w0
 13c:	mul	x1, x1, x4
 140:	udiv	x0, x2, x1
 144:	msub	w0, w0, w1, w2
 148:	ret
 14c:	nop

0000000000000150 <_ZNK4llvm3mca17RetireControlUnit13peekNextTokenEv>:
 150:	stp	x29, x30, [sp, #-32]!
 154:	mov	x29, sp
 158:	str	x19, [sp, #16]
 15c:	mov	x19, x0
 160:	bl	f8 <_ZNK4llvm3mca17RetireControlUnit18computeNextSlotIdxEv>
 164:	mov	w2, #0x18                  	// #24
 168:	ldr	x1, [x19, #32]
 16c:	ldr	x19, [sp, #16]
 170:	umaddl	x0, w0, w2, x1
 174:	ldp	x29, x30, [sp], #32
 178:	ret
 17c:	nop

0000000000000180 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>:
 180:	ldr	w8, [x0, #12]
 184:	mov	w3, #0x18                  	// #24
 188:	ldr	x5, [x0, #32]
 18c:	umull	x3, w8, w3
 190:	add	x2, x5, x3
 194:	ldr	x4, [x2, #8]
 198:	ldr	w1, [x4, #784]
 19c:	cmp	w1, #0x5
 1a0:	b.ne	200 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv+0x80>  // b.any
 1a4:	ldr	x1, [x0, #40]
 1a8:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 1ac:	ldr	w7, [x2, #16]
 1b0:	movk	x9, #0xaaab
 1b4:	sub	x1, x1, x5
 1b8:	ldr	w6, [x0, #20]
 1bc:	cmp	w7, #0x0
 1c0:	mov	w10, #0x6                   	// #6
 1c4:	asr	x1, x1, #3
 1c8:	str	w10, [x4, #784]
 1cc:	csinc	w4, w7, wzr, ne  // ne = any
 1d0:	add	w6, w6, w7
 1d4:	add	w4, w4, w8
 1d8:	str	w6, [x0, #20]
 1dc:	mul	x1, x1, x9
 1e0:	udiv	x6, x4, x1
 1e4:	msub	x1, x6, x1, x4
 1e8:	str	w1, [x0, #12]
 1ec:	str	wzr, [x5, x3]
 1f0:	str	xzr, [x2, #8]
 1f4:	str	wzr, [x2, #16]
 1f8:	strb	wzr, [x2, #20]
 1fc:	ret
 200:	stp	x29, x30, [sp, #-16]!
 204:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 208:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 20c:	mov	x29, sp
 210:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 214:	add	x3, x3, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x0, x0, #0x0
 220:	mov	w2, #0x21c                 	// #540
 224:	bl	0 <__assert_fail>

0000000000000228 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>:
 228:	stp	x29, x30, [sp, #-16]!
 22c:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 230:	movk	x3, #0xaaab
 234:	mov	x29, sp
 238:	ldp	x2, x0, [x0, #32]
 23c:	sub	x0, x0, x2
 240:	asr	x0, x0, #3
 244:	mul	x0, x0, x3
 248:	cmp	x0, w1, uxtw
 24c:	b.ls	278 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x50>  // b.plast
 250:	mov	w0, #0x18                  	// #24
 254:	umaddl	x1, w1, w0, x2
 258:	ldr	x0, [x1, #8]
 25c:	cbz	x0, 2b8 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x90>
 260:	ldrb	w0, [x1, #20]
 264:	cbnz	w0, 298 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj+0x70>
 268:	mov	w0, #0x1                   	// #1
 26c:	strb	w0, [x1, #20]
 270:	ldp	x29, x30, [sp], #16
 274:	ret
 278:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 27c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 280:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 284:	add	x3, x3, #0x0
 288:	add	x1, x1, #0x0
 28c:	add	x0, x0, #0x0
 290:	mov	w2, #0x56                  	// #86
 294:	bl	0 <__assert_fail>
 298:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 29c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2a0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2a4:	add	x3, x3, #0x0
 2a8:	add	x1, x1, #0x0
 2ac:	add	x0, x0, #0x0
 2b0:	mov	w2, #0x58                  	// #88
 2b4:	bl	0 <__assert_fail>
 2b8:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2bc:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2c0:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 2c4:	add	x3, x3, #0x0
 2c8:	add	x1, x1, #0x0
 2cc:	add	x0, x0, #0x0
 2d0:	mov	w2, #0x57                  	// #87
 2d4:	bl	0 <__assert_fail>

00000000000002d8 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>:
 2d8:	stp	x29, x30, [sp, #-32]!
 2dc:	mov	x29, sp
 2e0:	str	x19, [sp, #16]
 2e4:	mov	x19, x0
 2e8:	bl	0 <_ZN4llvm4dbgsEv>
 2ec:	ldp	x1, x3, [x0, #16]
 2f0:	sub	x1, x1, x3
 2f4:	cmp	x1, #0x21
 2f8:	b.ls	3c0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xe8>  // b.plast
 2fc:	mov	x2, x0
 300:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 304:	add	x0, x0, #0x0
 308:	ldp	x4, x5, [x0]
 30c:	stp	x4, x5, [x3]
 310:	ldrh	w1, [x0, #32]
 314:	ldp	x4, x5, [x0, #16]
 318:	stp	x4, x5, [x3, #16]
 31c:	strh	w1, [x3, #32]
 320:	ldr	x0, [x2, #24]
 324:	ldr	w1, [x19, #16]
 328:	add	x0, x0, #0x22
 32c:	str	x0, [x2, #24]
 330:	mov	x0, x2
 334:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 338:	mov	x2, x0
 33c:	ldp	x1, x3, [x0, #16]
 340:	sub	x1, x1, x3
 344:	cmp	x1, #0x17
 348:	b.ls	3f4 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x11c>  // b.plast
 34c:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 350:	add	x0, x0, #0x0
 354:	ldp	x4, x5, [x0]
 358:	stp	x4, x5, [x3]
 35c:	ldr	x0, [x0, #16]
 360:	str	x0, [x3, #16]
 364:	ldr	x0, [x2, #24]
 368:	ldr	w1, [x19, #20]
 36c:	add	x0, x0, #0x18
 370:	str	x0, [x2, #24]
 374:	mov	x0, x2
 378:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 37c:	mov	x1, x0
 380:	ldp	x2, x3, [x0, #16]
 384:	sub	x2, x2, x3
 388:	cmp	x2, #0x2
 38c:	b.ls	428 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x150>  // b.plast
 390:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 394:	add	x0, x0, #0x0
 398:	ldrh	w2, [x0]
 39c:	ldrb	w0, [x0, #2]
 3a0:	strh	w2, [x3]
 3a4:	strb	w0, [x3, #2]
 3a8:	ldr	x0, [x1, #24]
 3ac:	ldr	x19, [sp, #16]
 3b0:	add	x0, x0, #0x3
 3b4:	str	x0, [x1, #24]
 3b8:	ldp	x29, x30, [sp], #32
 3bc:	ret
 3c0:	mov	x2, #0x22                  	// #34
 3c4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 3c8:	add	x1, x1, #0x0
 3cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3d0:	ldr	w1, [x19, #16]
 3d4:	mov	x2, x0
 3d8:	mov	x0, x2
 3dc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 3e0:	mov	x2, x0
 3e4:	ldp	x1, x3, [x0, #16]
 3e8:	sub	x1, x1, x3
 3ec:	cmp	x1, #0x17
 3f0:	b.hi	34c <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0x74>  // b.pmore
 3f4:	mov	x2, #0x18                  	// #24
 3f8:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 3fc:	add	x1, x1, #0x0
 400:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 404:	ldr	w1, [x19, #20]
 408:	mov	x2, x0
 40c:	mov	x0, x2
 410:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 414:	mov	x1, x0
 418:	ldp	x2, x3, [x0, #16]
 41c:	sub	x2, x2, x3
 420:	cmp	x2, #0x2
 424:	b.hi	390 <_ZNK4llvm3mca17RetireControlUnit4dumpEv+0xb8>  // b.pmore
 428:	ldr	x19, [sp, #16]
 42c:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 430:	ldp	x29, x30, [sp], #32
 434:	add	x1, x1, #0x0
 438:	mov	x2, #0x3                   	// #3
 43c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

0000000000000440 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE>:
 440:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 444:	str	wzr, [x0, #24]
 448:	mov	x2, x0
 44c:	ldr	x4, [x3]
 450:	ldr	w3, [x1, #4]
 454:	add	x4, x4, #0x10
 458:	stp	x4, xzr, [x0]
 45c:	stp	w3, w3, [x0, #16]
 460:	ldr	x1, [x1, #64]
 464:	stp	xzr, xzr, [x0, #32]!
 468:	str	xzr, [x0, #16]
 46c:	cbz	x1, 480 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x40>
 470:	ldr	w4, [x1]
 474:	cbnz	w4, 498 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x58>
 478:	ldr	w1, [x1, #4]
 47c:	str	w1, [x2, #24]
 480:	str	w3, [x2, #16]
 484:	cbz	w3, 4ac <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x6c>
 488:	cmp	wzr, w3, lsl #1
 48c:	lsl	w3, w3, #1
 490:	b.ne	4a4 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x64>  // b.any
 494:	ret
 498:	mov	w3, w4
 49c:	str	w4, [x2, #20]
 4a0:	b	478 <_ZN4llvm3mca17RetireControlUnitC1ERKNS_12MCSchedModelE+0x38>
 4a4:	mov	w1, w3
 4a8:	b	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4ac:	stp	x29, x30, [sp, #-16]!
 4b0:	adrp	x3, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4b4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4b8:	mov	x29, sp
 4bc:	adrp	x0, 0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 4c0:	add	x3, x3, #0x0
 4c4:	add	x1, x1, #0x0
 4c8:	add	x0, x0, #0x0
 4cc:	mov	w2, #0x24                  	// #36
 4d0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD2Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #32]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD1Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm3mca12HardwareUnitD2Ev>

Disassembly of section .text._ZN4llvm3mca17RetireControlUnitD0Ev:

0000000000000000 <_ZN4llvm3mca17RetireControlUnitD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17RetireControlUnitD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #32]
  1c:	add	x1, x1, #0x10
  20:	str	x1, [x19]
  24:	cbz	x0, 2c <_ZN4llvm3mca17RetireControlUnitD0Ev+0x2c>
  28:	bl	0 <_ZdlPv>
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm3mca12HardwareUnitD2Ev>
  34:	mov	x0, x19
  38:	mov	x1, #0x38                  	// #56
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>:
   0:	cbz	x1, 98 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x98>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x3, #0x5555555555555555    	// #6148914691236517205
   c:	movk	x3, #0x555, lsl #48
  10:	mov	x29, sp
  14:	ldp	x2, x4, [x0]
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x21, x0
  20:	ldr	x0, [x0, #16]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x20, x1
  2c:	sub	x19, x4, x2
  30:	sub	x0, x0, x4
  34:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  38:	asr	x22, x19, #3
  3c:	asr	x0, x0, #3
  40:	movk	x1, #0xaaab
  44:	mul	x0, x0, x1
  48:	mul	x22, x22, x1
  4c:	cmp	x0, x20
  50:	sub	x1, x3, x22
  54:	b.cc	9c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x9c>  // b.lo, b.ul, b.last
  58:	mov	x2, x4
  5c:	mov	x3, x20
  60:	str	wzr, [x2]
  64:	subs	x3, x3, #0x1
  68:	str	xzr, [x2, #8]
  6c:	add	x2, x2, #0x18
  70:	stur	wzr, [x2, #-8]
  74:	sturb	wzr, [x2, #-4]
  78:	b.ne	60 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x60>  // b.any
  7c:	add	x20, x20, x20, lsl #1
  80:	add	x4, x4, x20, lsl #3
  84:	str	x4, [x21, #8]
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldp	x21, x22, [sp, #32]
  90:	ldp	x29, x30, [sp], #64
  94:	ret
  98:	ret
  9c:	stp	x23, x24, [sp, #48]
  a0:	cmp	x1, x20
  a4:	b.cc	15c <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x15c>  // b.lo, b.ul, b.last
  a8:	cmp	x22, x20
  ac:	csel	x23, x22, x20, cs  // cs = hs, nlast
  b0:	add	x23, x22, x23
  b4:	cmp	x23, x3
  b8:	csel	x23, x23, x3, ls  // ls = plast
  bc:	add	x23, x23, x23, lsl #1
  c0:	lsl	x23, x23, #3
  c4:	mov	x0, x23
  c8:	bl	0 <_Znwm>
  cc:	mov	x1, x20
  d0:	mov	x24, x0
  d4:	add	x2, x0, x19
  d8:	str	wzr, [x2]
  dc:	subs	x1, x1, #0x1
  e0:	str	xzr, [x2, #8]
  e4:	add	x2, x2, #0x18
  e8:	stur	wzr, [x2, #-8]
  ec:	sturb	wzr, [x2, #-4]
  f0:	b.ne	d8 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0xd8>  // b.any
  f4:	ldp	x0, x6, [x21]
  f8:	mov	x2, x24
  fc:	mov	x1, x0
 100:	cmp	x0, x6
 104:	b.eq	128 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x128>  // b.none
 108:	ldp	x4, x5, [x1]
 10c:	stp	x4, x5, [x2]
 110:	add	x1, x1, #0x18
 114:	ldur	x3, [x1, #-8]
 118:	str	x3, [x2, #16]
 11c:	cmp	x6, x1
 120:	add	x2, x2, #0x18
 124:	b.ne	108 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x108>  // b.any
 128:	cbz	x0, 130 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm+0x130>
 12c:	bl	0 <_ZdlPv>
 130:	add	x20, x22, x20
 134:	add	x23, x24, x23
 138:	str	x23, [x21, #16]
 13c:	add	x20, x20, x20, lsl #1
 140:	add	x20, x24, x20, lsl #3
 144:	stp	x24, x20, [x21]
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldp	x21, x22, [sp, #32]
 150:	ldp	x23, x24, [sp, #48]
 154:	ldp	x29, x30, [sp], #64
 158:	ret
 15c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca17RetireControlUnit7RUTokenESaIS3_EE17_M_default_appendEm>
 160:	add	x0, x0, #0x0
 164:	bl	0 <_ZSt20__throw_length_errorPKc>

Scheduler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17SchedulerStrategyD1Ev>:
       0:	ret
       4:	nop

0000000000000008 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>:
       8:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
       c:	ldr	x1, [x1]
      10:	add	x1, x1, #0x10
      14:	str	x1, [x0]
      18:	b	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
      1c:	nop

0000000000000020 <_ZN4llvm3mca24DefaultSchedulerStrategyD0Ev>:
      20:	stp	x29, x30, [sp, #-32]!
      24:	mov	x29, sp
      28:	str	x19, [sp, #16]
      2c:	mov	x19, x0
      30:	bl	8 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>
      34:	mov	x0, x19
      38:	mov	x1, #0x8                   	// #8
      3c:	ldr	x19, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	b	0 <_ZdlPvm>

0000000000000048 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE>:
      48:	stp	x29, x30, [sp, #-32]!
      4c:	mov	x29, sp
      50:	stp	x19, x20, [sp, #16]
      54:	mov	x19, x0
      58:	ldr	x0, [x1]
      5c:	cbz	x0, b0 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x68>
      60:	str	xzr, [x1]
      64:	ldr	x20, [x19, #16]
      68:	str	x0, [x19, #16]
      6c:	cbz	x20, a4 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x5c>
      70:	ldr	x1, [x20]
      74:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
      78:	add	x0, x0, #0x0
      7c:	ldr	x1, [x1, #8]
      80:	cmp	x1, x0
      84:	mov	x0, x20
      88:	b.ne	cc <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x84>  // b.any
      8c:	bl	8 <_ZN4llvm3mca24DefaultSchedulerStrategyD1Ev>
      90:	mov	x0, x20
      94:	mov	x1, #0x8                   	// #8
      98:	ldp	x19, x20, [sp, #16]
      9c:	ldp	x29, x30, [sp], #32
      a0:	b	0 <_ZdlPvm>
      a4:	ldp	x19, x20, [sp, #16]
      a8:	ldp	x29, x30, [sp], #32
      ac:	ret
      b0:	mov	x0, #0x8                   	// #8
      b4:	bl	0 <_Znwm>
      b8:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
      bc:	ldr	x1, [x1]
      c0:	add	x1, x1, #0x10
      c4:	str	x1, [x0]
      c8:	b	64 <_ZN4llvm3mca9Scheduler18initializeStrategyESt10unique_ptrINS0_17SchedulerStrategyESt14default_deleteIS3_EE+0x1c>
      cc:	ldp	x19, x20, [sp, #16]
      d0:	mov	x16, x1
      d4:	ldp	x29, x30, [sp], #32
      d8:	br	x16
      dc:	nop

00000000000000e0 <_ZN4llvm3mca17SchedulerStrategyD0Ev>:
      e0:	stp	x29, x30, [sp, #-32]!
      e4:	mov	x29, sp
      e8:	str	x19, [sp, #16]
      ec:	mov	x19, x0
      f0:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
      f4:	mov	x0, x19
      f8:	mov	x1, #0x8                   	// #8
      fc:	ldr	x19, [sp, #16]
     100:	ldp	x29, x30, [sp], #32
     104:	b	0 <_ZdlPvm>

0000000000000108 <_ZNK4llvm3mca9Scheduler4dumpEv>:
     108:	stp	x29, x30, [sp, #-32]!
     10c:	mov	x29, sp
     110:	stp	x19, x20, [sp, #16]
     114:	mov	x19, x0
     118:	bl	0 <_ZN4llvm4dbgsEv>
     11c:	ldp	x2, x3, [x0, #16]
     120:	sub	x2, x2, x3
     124:	cmp	x2, #0x1d
     128:	b.ls	2a4 <_ZNK4llvm3mca9Scheduler4dumpEv+0x19c>  // b.plast
     12c:	mov	x1, x0
     130:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     134:	add	x0, x0, #0x0
     138:	ldr	x2, [x0, #16]
     13c:	str	x2, [x3, #16]
     140:	ldp	x4, x5, [x0]
     144:	stp	x4, x5, [x3]
     148:	ldur	x0, [x0, #22]
     14c:	stur	x0, [x3, #22]
     150:	ldr	x0, [x1, #24]
     154:	add	x0, x0, #0x1e
     158:	str	x0, [x1, #24]
     15c:	mov	x0, x1
     160:	ldp	x2, x1, [x19, #32]
     164:	sub	x1, x1, x2
     168:	asr	x1, x1, #4
     16c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     170:	ldp	x3, x2, [x0, #16]
     174:	mov	x1, x0
     178:	cmp	x2, x3
     17c:	b.cs	304 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1fc>  // b.hs, b.nlast
     180:	add	x0, x2, #0x1
     184:	str	x0, [x1, #24]
     188:	mov	w0, #0xa                   	// #10
     18c:	strb	w0, [x2]
     190:	bl	0 <_ZN4llvm4dbgsEv>
     194:	mov	x1, x0
     198:	ldp	x2, x3, [x0, #16]
     19c:	sub	x2, x2, x3
     1a0:	cmp	x2, #0x1e
     1a4:	b.ls	2ec <_ZNK4llvm3mca9Scheduler4dumpEv+0x1e4>  // b.plast
     1a8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     1ac:	add	x0, x0, #0x0
     1b0:	ldr	x2, [x0, #16]
     1b4:	str	x2, [x3, #16]
     1b8:	ldp	x4, x5, [x0]
     1bc:	stp	x4, x5, [x3]
     1c0:	ldur	x0, [x0, #23]
     1c4:	stur	x0, [x3, #23]
     1c8:	ldr	x0, [x1, #24]
     1cc:	add	x0, x0, #0x1f
     1d0:	str	x0, [x1, #24]
     1d4:	mov	x0, x1
     1d8:	ldp	x2, x1, [x19, #80]
     1dc:	sub	x1, x1, x2
     1e0:	asr	x1, x1, #4
     1e4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     1e8:	ldp	x3, x2, [x0, #16]
     1ec:	mov	x1, x0
     1f0:	cmp	x2, x3
     1f4:	b.cs	2e0 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1d8>  // b.hs, b.nlast
     1f8:	add	x0, x2, #0x1
     1fc:	str	x0, [x1, #24]
     200:	mov	w0, #0xa                   	// #10
     204:	strb	w0, [x2]
     208:	bl	0 <_ZN4llvm4dbgsEv>
     20c:	mov	x1, x0
     210:	ldp	x2, x3, [x0, #16]
     214:	sub	x2, x2, x3
     218:	cmp	x2, #0x1f
     21c:	b.ls	2c8 <_ZNK4llvm3mca9Scheduler4dumpEv+0x1c0>  // b.plast
     220:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     224:	add	x0, x0, #0x0
     228:	ldp	x4, x5, [x0]
     22c:	stp	x4, x5, [x3]
     230:	ldp	x4, x5, [x0, #16]
     234:	stp	x4, x5, [x3, #16]
     238:	ldr	x0, [x1, #24]
     23c:	add	x0, x0, #0x20
     240:	str	x0, [x1, #24]
     244:	mov	x0, x1
     248:	ldp	x2, x1, [x19, #104]
     24c:	sub	x1, x1, x2
     250:	asr	x1, x1, #4
     254:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     258:	ldp	x3, x2, [x0, #16]
     25c:	mov	x1, x0
     260:	cmp	x2, x3
     264:	b.cs	2bc <_ZNK4llvm3mca9Scheduler4dumpEv+0x1b4>  // b.hs, b.nlast
     268:	add	x0, x2, #0x1
     26c:	str	x0, [x1, #24]
     270:	mov	w0, #0xa                   	// #10
     274:	strb	w0, [x2]
     278:	ldr	x0, [x19, #24]
     27c:	ldp	x19, x20, [x0, #8]
     280:	cmp	x20, x19
     284:	b.eq	298 <_ZNK4llvm3mca9Scheduler4dumpEv+0x190>  // b.none
     288:	ldr	x0, [x19], #8
     28c:	bl	0 <_ZNK4llvm3mca13ResourceState4dumpEv>
     290:	cmp	x20, x19
     294:	b.ne	288 <_ZNK4llvm3mca9Scheduler4dumpEv+0x180>  // b.any
     298:	ldp	x19, x20, [sp, #16]
     29c:	ldp	x29, x30, [sp], #32
     2a0:	ret
     2a4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     2a8:	add	x1, x1, #0x0
     2ac:	mov	x2, #0x1e                  	// #30
     2b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2b4:	mov	x1, x0
     2b8:	b	15c <_ZNK4llvm3mca9Scheduler4dumpEv+0x54>
     2bc:	mov	w1, #0xa                   	// #10
     2c0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2c4:	b	278 <_ZNK4llvm3mca9Scheduler4dumpEv+0x170>
     2c8:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     2cc:	add	x1, x1, #0x0
     2d0:	mov	x2, #0x20                  	// #32
     2d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2d8:	mov	x1, x0
     2dc:	b	244 <_ZNK4llvm3mca9Scheduler4dumpEv+0x13c>
     2e0:	mov	w1, #0xa                   	// #10
     2e4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     2e8:	b	208 <_ZNK4llvm3mca9Scheduler4dumpEv+0x100>
     2ec:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     2f0:	add	x1, x1, #0x0
     2f4:	mov	x2, #0x1f                  	// #31
     2f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2fc:	mov	x1, x0
     300:	b	1d4 <_ZNK4llvm3mca9Scheduler4dumpEv+0xcc>
     304:	mov	w1, #0xa                   	// #10
     308:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     30c:	b	190 <_ZNK4llvm3mca9Scheduler4dumpEv+0x88>

0000000000000310 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>:
     310:	stp	x29, x30, [sp, #-32]!
     314:	mov	x29, sp
     318:	stp	x19, x20, [sp, #16]
     31c:	mov	x20, x1
     320:	mov	x19, x0
     324:	ldr	x1, [x1, #8]
     328:	ldr	x0, [x0, #24]
     32c:	ldr	x1, [x1, #800]
     330:	bl	0 <_ZNK4llvm3mca15ResourceManager15canBeDispatchedEm>
     334:	cmp	w0, #0x0
     338:	cset	w1, ne  // ne = any
     33c:	strb	w1, [x19, #140]
     340:	cmp	w0, #0x1
     344:	b.eq	394 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x84>  // b.none
     348:	cmp	w0, #0x2
     34c:	b.eq	384 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x74>  // b.none
     350:	ldr	x0, [x19, #8]
     354:	mov	x1, x20
     358:	ldr	x2, [x0]
     35c:	ldr	x2, [x2, #16]
     360:	blr	x2
     364:	cmp	w0, #0x0
     368:	cset	w1, ne  // ne = any
     36c:	strb	w1, [x19, #140]
     370:	cmp	w0, #0x2
     374:	b.hi	3a4 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE+0x94>  // b.pmore
     378:	ldp	x19, x20, [sp, #16]
     37c:	ldp	x29, x30, [sp], #32
     380:	ret
     384:	mov	w0, #0x4                   	// #4
     388:	ldp	x19, x20, [sp, #16]
     38c:	ldp	x29, x30, [sp], #32
     390:	ret
     394:	mov	w0, #0x3                   	// #3
     398:	ldp	x19, x20, [sp, #16]
     39c:	ldp	x29, x30, [sp], #32
     3a0:	ret
     3a4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     3a8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     3ac:	add	x1, x1, #0x0
     3b0:	add	x0, x0, #0x0
     3b4:	mov	w2, #0x43                  	// #67
     3b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     3bc:	nop

00000000000003c0 <_ZN4llvm3mca9Scheduler6selectEv>:
     3c0:	stp	x29, x30, [sp, #-96]!
     3c4:	mov	x29, sp
     3c8:	ldp	x2, x1, [x0, #80]
     3cc:	stp	x19, x20, [sp, #16]
     3d0:	mov	x20, x0
     3d4:	stp	x25, x26, [sp, #64]
     3d8:	str	x27, [sp, #80]
     3dc:	sub	x0, x1, x2
     3e0:	asr	x25, x0, #4
     3e4:	cbz	w25, 5e0 <_ZN4llvm3mca9Scheduler6selectEv+0x220>
     3e8:	stp	x23, x24, [sp, #48]
     3ec:	adrp	x23, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     3f0:	mov	w24, w25
     3f4:	add	x23, x23, #0x0
     3f8:	mov	x19, #0x0                   	// #0
     3fc:	stp	x21, x22, [sp, #32]
     400:	mov	w21, #0x88                  	// #136
     404:	nop
     408:	asr	x0, x0, #4
     40c:	mov	w22, w19
     410:	cmp	x0, w25, uxtw
     414:	add	x26, x2, x19, lsl #4
     418:	mov	w27, w25
     41c:	b.eq	4d4 <_ZN4llvm3mca9Scheduler6selectEv+0x114>  // b.none
     420:	ldr	x0, [x20, #16]
     424:	add	x2, x2, x27, lsl #4
     428:	ldr	x1, [x0]
     42c:	ldr	x3, [x1, #16]
     430:	cmp	x3, x23
     434:	b.ne	5a4 <_ZN4llvm3mca9Scheduler6selectEv+0x1e4>  // b.any
     438:	ldr	x0, [x26, #8]
     43c:	ldr	w7, [x26]
     440:	ldr	w5, [x0, #24]
     444:	ldr	x3, [x0, #16]
     448:	umaddl	x5, w5, w21, x3
     44c:	cmp	x3, x5
     450:	b.eq	5bc <_ZN4llvm3mca9Scheduler6selectEv+0x1fc>  // b.none
     454:	mov	w0, #0x0                   	// #0
     458:	ldr	x1, [x3, #32]
     45c:	add	x3, x3, #0x88
     460:	ldur	w4, [x3, #-72]
     464:	cmp	x1, #0x0
     468:	cinc	w4, w4, ne  // ne = any
     46c:	cmp	x5, x3
     470:	add	w0, w0, w4
     474:	b.ne	458 <_ZN4llvm3mca9Scheduler6selectEv+0x98>  // b.any
     478:	sub	w3, w7, w0
     47c:	ldr	x0, [x2, #8]
     480:	ldr	w6, [x2]
     484:	ldr	w5, [x0, #24]
     488:	ldr	x2, [x0, #16]
     48c:	umaddl	x5, w5, w21, x2
     490:	cmp	x2, x5
     494:	b.eq	5b4 <_ZN4llvm3mca9Scheduler6selectEv+0x1f4>  // b.none
     498:	mov	w0, #0x0                   	// #0
     49c:	nop
     4a0:	ldr	x1, [x2, #32]
     4a4:	add	x2, x2, #0x88
     4a8:	ldur	w4, [x2, #-72]
     4ac:	cmp	x1, #0x0
     4b0:	cinc	w4, w4, ne  // ne = any
     4b4:	cmp	x5, x2
     4b8:	add	w0, w0, w4
     4bc:	b.ne	4a0 <_ZN4llvm3mca9Scheduler6selectEv+0xe0>  // b.any
     4c0:	sub	w0, w6, w0
     4c4:	cmp	w3, w0
     4c8:	b.eq	598 <_ZN4llvm3mca9Scheduler6selectEv+0x1d8>  // b.none
     4cc:	cset	w0, lt  // lt = tstop
     4d0:	cbz	w0, 4f0 <_ZN4llvm3mca9Scheduler6selectEv+0x130>
     4d4:	ldr	x26, [x26, #8]
     4d8:	ldr	x0, [x20, #24]
     4dc:	ldr	x1, [x26]
     4e0:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
     4e4:	cbnz	x0, 508 <_ZN4llvm3mca9Scheduler6selectEv+0x148>
     4e8:	mov	w25, w22
     4ec:	mov	x27, x19
     4f0:	add	x19, x19, #0x1
     4f4:	cmp	w24, w19
     4f8:	ldp	x2, x1, [x20, #80]
     4fc:	b.eq	528 <_ZN4llvm3mca9Scheduler6selectEv+0x168>  // b.none
     500:	sub	x0, x1, x2
     504:	b	408 <_ZN4llvm3mca9Scheduler6selectEv+0x48>
     508:	str	x0, [x26, #832]
     50c:	add	x19, x19, #0x1
     510:	cmp	w24, w19
     514:	ldr	x1, [x20, #128]
     518:	orr	x0, x1, x0
     51c:	str	x0, [x20, #128]
     520:	ldp	x2, x1, [x20, #80]
     524:	b.ne	500 <_ZN4llvm3mca9Scheduler6selectEv+0x140>  // b.any
     528:	ldp	x21, x22, [sp, #32]
     52c:	sub	x3, x1, x2
     530:	ldp	x23, x24, [sp, #48]
     534:	asr	x25, x3, #4
     538:	cmp	x25, x27
     53c:	b.eq	5c4 <_ZN4llvm3mca9Scheduler6selectEv+0x204>  // b.none
     540:	sub	x4, x3, #0x10
     544:	lsl	x27, x27, #4
     548:	add	x8, x2, x27
     54c:	add	x5, x2, x4
     550:	sub	x3, x1, #0x10
     554:	mov	x0, #0x0                   	// #0
     558:	ldr	w1, [x2, x4]
     55c:	ldr	w7, [x2, x27]
     560:	ldr	x6, [x8, #8]
     564:	str	w1, [x2, x27]
     568:	ldr	x1, [x5, #8]
     56c:	str	x1, [x8, #8]
     570:	str	w7, [x2, x4]
     574:	bfxil	x0, x7, #0, #32
     578:	str	x6, [x5, #8]
     57c:	mov	x1, x6
     580:	str	x3, [x20, #88]
     584:	ldp	x19, x20, [sp, #16]
     588:	ldp	x25, x26, [sp, #64]
     58c:	ldr	x27, [sp, #80]
     590:	ldp	x29, x30, [sp], #96
     594:	ret
     598:	cmp	w7, w6
     59c:	cset	w0, cc  // cc = lo, ul, last
     5a0:	b	4d0 <_ZN4llvm3mca9Scheduler6selectEv+0x110>
     5a4:	mov	x1, x26
     5a8:	blr	x3
     5ac:	and	w0, w0, #0xff
     5b0:	b	4d0 <_ZN4llvm3mca9Scheduler6selectEv+0x110>
     5b4:	mov	w0, w6
     5b8:	b	4c4 <_ZN4llvm3mca9Scheduler6selectEv+0x104>
     5bc:	mov	w3, w7
     5c0:	b	47c <_ZN4llvm3mca9Scheduler6selectEv+0xbc>
     5c4:	mov	x0, #0x0                   	// #0
     5c8:	mov	x1, #0x0                   	// #0
     5cc:	ldp	x19, x20, [sp, #16]
     5d0:	ldp	x25, x26, [sp, #64]
     5d4:	ldr	x27, [sp, #80]
     5d8:	ldp	x29, x30, [sp], #96
     5dc:	ret
     5e0:	mov	x3, x0
     5e4:	mov	x27, #0x0                   	// #0
     5e8:	b	538 <_ZN4llvm3mca9Scheduler6selectEv+0x178>
     5ec:	nop

00000000000005f0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>:
     5f0:	ldr	x0, [x1, #8]
     5f4:	ldr	x1, [x0]
     5f8:	ldr	w0, [x1, #312]
     5fc:	cbnz	w0, 610 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
     600:	ldr	w2, [x1, #184]
     604:	mov	w0, #0x1                   	// #1
     608:	cbnz	w2, 610 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE+0x20>
     60c:	ret
     610:	ldrb	w0, [x1, #329]
     614:	ret

0000000000000618 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>:
     618:	stp	x29, x30, [sp, #-112]!
     61c:	mov	x29, sp
     620:	stp	x19, x20, [sp, #16]
     624:	mov	x20, x1
     628:	ldr	x19, [x1, #8]
     62c:	stp	x21, x22, [sp, #32]
     630:	mov	x21, x0
     634:	ldr	x0, [x0, #24]
     638:	ldr	x1, [x19]
     63c:	bl	0 <_ZN4llvm3mca15ResourceManager16issueInstructionERKNS0_9InstrDescERNS_15SmallVectorImplISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
     640:	ldr	w1, [x20]
     644:	mov	x0, x19
     648:	bl	0 <_ZN4llvm3mca11Instruction7executeEj>
     64c:	mov	x0, x19
     650:	bl	0 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>
     654:	ldr	x0, [x19]
     658:	ldrb	w1, [x0, #324]
     65c:	cbnz	w1, 668 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x50>
     660:	ldrb	w0, [x0, #325]
     664:	cbz	w0, 7f0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1d8>
     668:	ldr	x22, [x21, #8]
     66c:	stp	x23, x24, [sp, #48]
     670:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     674:	stp	x25, x26, [sp, #64]
     678:	add	x0, x0, #0x0
     67c:	ldr	x1, [x22]
     680:	stp	x27, x28, [sp, #80]
     684:	ldr	x2, [x1, #48]
     688:	cmp	x2, x0
     68c:	b.ne	8e4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2cc>  // b.any
     690:	ldr	w23, [x22, #56]
     694:	ldr	x0, [x20, #8]
     698:	ldr	x26, [x22, #40]
     69c:	ldr	w24, [x0, #796]
     6a0:	cbz	w23, 91c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x304>
     6a4:	cmn	w24, #0x3
     6a8:	b.hi	e50 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x838>  // b.pmore
     6ac:	mov	w25, #0x25                  	// #37
     6b0:	sub	w1, w23, #0x1
     6b4:	mul	w25, w24, w25
     6b8:	and	w0, w25, w1
     6bc:	and	w3, w25, w1
     6c0:	lsl	x0, x0, #4
     6c4:	add	x4, x26, x0
     6c8:	ldr	w27, [x26, x0]
     6cc:	cmp	w24, w27
     6d0:	b.ne	a4c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x434>  // b.any
     6d4:	ldr	x1, [x4, #8]
     6d8:	ldr	w0, [x1, #16]
     6dc:	cbz	w0, 6f4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xdc>
     6e0:	ldr	w2, [x1, #12]
     6e4:	ldr	w3, [x1, #20]
     6e8:	sub	w2, w2, w3
     6ec:	cmp	w0, w2
     6f0:	b.eq	84c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x234>  // b.none
     6f4:	ldr	x4, [x1, #96]
     6f8:	add	w0, w0, #0x1
     6fc:	ldr	x2, [x20, #8]
     700:	str	w0, [x1, #16]
     704:	cbz	x4, 8f4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2dc>
     708:	ldr	w3, [x2, #788]
     70c:	ldr	w5, [x4, #788]
     710:	cmp	w5, w3
     714:	b.lt	838 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x220>  // b.tstop
     718:	cbz	w0, 730 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>
     71c:	ldr	w2, [x1, #12]
     720:	ldr	w3, [x1, #20]
     724:	sub	w2, w2, w3
     728:	cmp	w0, w2
     72c:	b.eq	86c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x254>  // b.none
     730:	ldr	w2, [x19, #796]
     734:	cbnz	w2, 758 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x140>
     738:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     73c:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     740:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     744:	add	x3, x3, #0x0
     748:	add	x1, x1, #0x0
     74c:	add	x0, x0, #0x0
     750:	mov	w2, #0x11c                 	// #284
     754:	bl	0 <__assert_fail>
     758:	ldr	x1, [x21, #8]
     75c:	ldr	w0, [x1, #56]
     760:	ldr	x3, [x1, #40]
     764:	cbz	w0, 738 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x120>
     768:	cmn	w2, #0x3
     76c:	b.hi	e50 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x838>  // b.pmore
     770:	mov	w1, #0x25                  	// #37
     774:	sub	w4, w0, #0x1
     778:	mul	w1, w2, w1
     77c:	and	w5, w1, w4
     780:	and	w1, w1, w4
     784:	lsl	x5, x5, #4
     788:	add	x7, x3, x5
     78c:	ldr	w5, [x3, x5]
     790:	cmp	w2, w5
     794:	b.ne	ce8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6d0>  // b.any
     798:	ubfiz	x0, x0, #4, #32
     79c:	add	x6, x3, x0
     7a0:	cmp	x6, x7
     7a4:	b.eq	738 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x120>  // b.none
     7a8:	mov	w0, #0x25                  	// #37
     7ac:	mul	w0, w2, w0
     7b0:	and	w1, w0, w4
     7b4:	and	w0, w0, w4
     7b8:	lsl	x1, x1, #4
     7bc:	add	x5, x3, x1
     7c0:	ldr	w1, [x3, x1]
     7c4:	cmp	w2, w1
     7c8:	b.ne	908 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2f0>  // b.any
     7cc:	ldr	x1, [x5, #8]
     7d0:	add	x0, x19, #0x334
     7d4:	ldp	x23, x24, [sp, #48]
     7d8:	ldr	x2, [x1, #72]
     7dc:	ldp	x25, x26, [sp, #64]
     7e0:	ldp	x27, x28, [sp, #80]
     7e4:	str	x2, [x0]
     7e8:	ldr	w1, [x1, #80]
     7ec:	str	w1, [x19, #828]
     7f0:	ldr	w0, [x19, #784]
     7f4:	cmp	w0, #0x4
     7f8:	b.eq	8cc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2b4>  // b.none
     7fc:	cmp	w0, #0x5
     800:	b.eq	814 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1fc>  // b.none
     804:	ldp	x19, x20, [sp, #16]
     808:	ldp	x21, x22, [sp, #32]
     80c:	ldp	x29, x30, [sp], #112
     810:	ret
     814:	ldr	x0, [x21, #8]
     818:	mov	x1, x20
     81c:	ldp	x19, x20, [sp, #16]
     820:	ldr	x2, [x0]
     824:	ldp	x21, x22, [sp, #32]
     828:	ldr	x2, [x2, #32]
     82c:	ldp	x29, x30, [sp], #112
     830:	mov	x16, x2
     834:	br	x16
     838:	ldr	w3, [x20]
     83c:	mov	x4, x2
     840:	str	w3, [x1, #88]
     844:	str	x2, [x1, #96]
     848:	b	718 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x100>
     84c:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     850:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     854:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     858:	add	x3, x3, #0x0
     85c:	add	x1, x1, #0x0
     860:	add	x0, x0, #0x0
     864:	mov	w2, #0x79                  	// #121
     868:	bl	0 <__assert_fail>
     86c:	ldr	x2, [x1, #24]
     870:	ldr	w6, [x1, #32]
     874:	add	x6, x2, x6, lsl #3
     878:	cmp	x2, x6
     87c:	b.eq	730 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>  // b.none
     880:	ldr	x0, [x2]
     884:	ldr	w5, [x0]
     888:	ldr	w3, [x0, #8]
     88c:	cmp	w5, w3
     890:	b.eq	eb0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x898>  // b.none
     894:	ldr	w3, [x0, #4]
     898:	ldr	w5, [x0, #80]
     89c:	add	w3, w3, #0x1
     8a0:	str	w3, [x0, #4]
     8a4:	ldr	w3, [x4, #788]
     8a8:	cmp	w3, w5
     8ac:	b.ls	8bc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2a4>  // b.plast
     8b0:	ldr	w5, [x1, #88]
     8b4:	str	w5, [x0, #72]
     8b8:	str	w3, [x0, #80]
     8bc:	add	x2, x2, #0x8
     8c0:	cmp	x6, x2
     8c4:	b.ne	880 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x268>  // b.any
     8c8:	b	730 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>
     8cc:	mov	x1, x20
     8d0:	add	x0, x21, #0x68
     8d4:	ldp	x19, x20, [sp, #16]
     8d8:	ldp	x21, x22, [sp, #32]
     8dc:	ldp	x29, x30, [sp], #112
     8e0:	b	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     8e4:	mov	x0, x22
     8e8:	mov	x1, x20
     8ec:	blr	x2
     8f0:	b	730 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x118>
     8f4:	ldr	w3, [x20]
     8f8:	mov	x4, x2
     8fc:	str	w3, [x1, #88]
     900:	str	x2, [x1, #96]
     904:	b	718 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x100>
     908:	mov	w5, #0x1                   	// #1
     90c:	cmn	w1, #0x1
     910:	b.ne	a20 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x408>  // b.any
     914:	mov	x5, x6
     918:	b	7cc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1b4>
     91c:	ldr	x1, [x22, #32]
     920:	mov	w0, #0x0                   	// #0
     924:	add	x1, x1, #0x1
     928:	str	x1, [x22, #32]
     92c:	sub	w0, w0, #0x1
     930:	mov	w1, #0x40                  	// #64
     934:	orr	x0, x0, x0, lsr #1
     938:	orr	x0, x0, x0, lsr #2
     93c:	orr	x0, x0, x0, lsr #4
     940:	orr	x0, x0, x0, lsr #8
     944:	orr	x0, x0, x0, lsr #16
     948:	add	x0, x0, #0x1
     94c:	cmp	w0, w1
     950:	csel	w0, w0, w1, cs  // cs = hs, nlast
     954:	str	w0, [x22, #56]
     958:	ubfiz	x0, x0, #4, #32
     95c:	bl	0 <_Znwm>
     960:	ldr	w1, [x22, #56]
     964:	str	x0, [x22, #40]
     968:	str	xzr, [x22, #48]
     96c:	sub	w2, w1, #0x1
     970:	and	w2, w2, w1
     974:	cbz	x26, d84 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x76c>
     978:	ubfiz	x23, x23, #4, #32
     97c:	add	x28, x26, x23
     980:	cbnz	w2, f38 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x920>
     984:	ubfiz	x1, x1, #4, #32
     988:	mov	w2, #0xffffffff            	// #-1
     98c:	add	x1, x0, x1
     990:	cmp	x0, x1
     994:	b.eq	9a4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x38c>  // b.none
     998:	str	w2, [x0], #16
     99c:	cmp	x1, x0
     9a0:	b.ne	998 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x380>  // b.any
     9a4:	cmp	x26, x28
     9a8:	mov	x25, x26
     9ac:	mov	w27, #0x25                  	// #37
     9b0:	b.ne	9c4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3ac>  // b.any
     9b4:	b	c00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5e8>
     9b8:	add	x25, x25, #0x10
     9bc:	cmp	x28, x25
     9c0:	b.eq	c00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5e8>  // b.none
     9c4:	ldr	w0, [x25]
     9c8:	cmn	w0, #0x3
     9cc:	b.hi	9b8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3a0>  // b.pmore
     9d0:	ldr	w1, [x22, #56]
     9d4:	cbz	w1, f58 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x940>
     9d8:	mul	w2, w0, w27
     9dc:	sub	w1, w1, #0x1
     9e0:	ldr	x4, [x22, #40]
     9e4:	and	w3, w2, w1
     9e8:	and	w2, w2, w1
     9ec:	lsl	x3, x3, #4
     9f0:	add	x5, x4, x3
     9f4:	ldr	w3, [x4, x3]
     9f8:	cmp	w0, w3
     9fc:	b.ne	d1c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x704>  // b.any
     a00:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     a04:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     a08:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     a0c:	add	x3, x3, #0x0
     a10:	add	x1, x1, #0x0
     a14:	add	x0, x0, #0x0
     a18:	mov	w2, #0x17a                 	// #378
     a1c:	bl	0 <__assert_fail>
     a20:	add	w0, w5, w0
     a24:	add	w7, w5, #0x1
     a28:	and	w1, w4, w0
     a2c:	and	w0, w4, w0
     a30:	lsl	x1, x1, #4
     a34:	add	x5, x3, x1
     a38:	ldr	w1, [x3, x1]
     a3c:	cmp	w2, w1
     a40:	b.eq	7cc <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x1b4>  // b.none
     a44:	mov	w5, w7
     a48:	b	90c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x2f4>
     a4c:	mov	w0, #0x1                   	// #1
     a50:	mov	x2, #0x0                   	// #0
     a54:	cmn	w27, #0x1
     a58:	b.ne	de4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x7cc>  // b.any
     a5c:	ldr	x5, [x22, #32]
     a60:	lsl	w0, w23, #1
     a64:	ldr	w3, [x22, #48]
     a68:	cmp	x2, #0x0
     a6c:	add	x5, x5, #0x1
     a70:	str	x5, [x22, #32]
     a74:	add	w3, w3, #0x1
     a78:	add	w5, w0, w23
     a7c:	csel	x2, x2, x4, ne  // ne = any
     a80:	cmp	w5, w3, lsl #2
     a84:	b.ls	92c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x314>  // b.plast
     a88:	ldr	w0, [x22, #52]
     a8c:	sub	w0, w23, w0
     a90:	sub	w0, w0, w3
     a94:	cmp	w0, w23, lsr #3
     a98:	b.ls	ac8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x4b0>  // b.plast
     a9c:	str	w3, [x22, #48]
     aa0:	ldr	w0, [x2]
     aa4:	cmn	w0, #0x1
     aa8:	b.eq	ab8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x4a0>  // b.none
     aac:	ldr	w0, [x22, #52]
     ab0:	sub	w0, w0, #0x1
     ab4:	str	w0, [x22, #52]
     ab8:	mov	x1, #0x0                   	// #0
     abc:	str	w24, [x2]
     ac0:	str	xzr, [x2, #8]
     ac4:	b	6d8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc0>
     ac8:	mov	w2, w1
     acc:	lsr	w0, w1, #1
     ad0:	orr	x0, x0, x2
     ad4:	mov	w1, #0x40                  	// #64
     ad8:	orr	x0, x0, x0, lsr #2
     adc:	orr	x0, x0, x0, lsr #4
     ae0:	orr	x0, x0, x0, lsr #8
     ae4:	orr	x0, x0, x0, lsr #16
     ae8:	add	x0, x0, #0x1
     aec:	cmp	w0, w1
     af0:	csel	w0, w0, w1, cs  // cs = hs, nlast
     af4:	str	w0, [x22, #56]
     af8:	ubfiz	x0, x0, #4, #32
     afc:	bl	0 <_Znwm>
     b00:	ldr	w1, [x22, #56]
     b04:	str	x0, [x22, #40]
     b08:	str	xzr, [x22, #48]
     b0c:	sub	w2, w1, #0x1
     b10:	and	w2, w2, w1
     b14:	cbz	x26, db4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x79c>
     b18:	ubfiz	x3, x23, #4, #32
     b1c:	str	x3, [sp, #104]
     b20:	add	x23, x26, x3
     b24:	cbnz	w2, f38 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x920>
     b28:	ubfiz	x1, x1, #4, #32
     b2c:	add	x1, x0, x1
     b30:	cmp	x0, x1
     b34:	b.eq	b44 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x52c>  // b.none
     b38:	str	w27, [x0], #16
     b3c:	cmp	x1, x0
     b40:	b.ne	b38 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x520>  // b.any
     b44:	mov	x27, x26
     b48:	mov	w28, #0x25                  	// #37
     b4c:	b	b5c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x544>
     b50:	add	x27, x27, #0x10
     b54:	cmp	x23, x27
     b58:	b.eq	c6c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x654>  // b.none
     b5c:	ldr	w0, [x27]
     b60:	cmn	w0, #0x3
     b64:	b.hi	b50 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x538>  // b.pmore
     b68:	ldr	w1, [x22, #56]
     b6c:	cbz	w1, f58 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x940>
     b70:	mul	w2, w0, w28
     b74:	sub	w1, w1, #0x1
     b78:	ldr	x5, [x22, #40]
     b7c:	and	w4, w2, w1
     b80:	and	w2, w2, w1
     b84:	lsl	x4, x4, #4
     b88:	add	x6, x5, x4
     b8c:	ldr	w4, [x5, x4]
     b90:	cmp	w0, w4
     b94:	b.eq	a00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3e8>  // b.none
     b98:	mov	w8, #0x1                   	// #1
     b9c:	mov	x7, #0x0                   	// #0
     ba0:	cmn	w4, #0x1
     ba4:	b.ne	e70 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x858>  // b.any
     ba8:	cmp	x7, #0x0
     bac:	csel	x7, x7, x6, ne  // ne = any
     bb0:	ldr	x1, [x27, #8]
     bb4:	str	w0, [x7]
     bb8:	ldr	w0, [x22, #48]
     bbc:	str	xzr, [x27, #8]
     bc0:	str	x1, [x7, #8]
     bc4:	add	w0, w0, #0x1
     bc8:	ldr	x1, [x27, #8]
     bcc:	str	w0, [x22, #48]
     bd0:	cbz	x1, b50 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x538>
     bd4:	ldr	x0, [x1, #24]
     bd8:	add	x2, x1, #0x28
     bdc:	cmp	x0, x2
     be0:	b.eq	bf0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5d8>  // b.none
     be4:	str	x1, [sp, #96]
     be8:	bl	0 <free>
     bec:	ldr	x1, [sp, #96]
     bf0:	mov	x0, x1
     bf4:	mov	x1, #0x68                  	// #104
     bf8:	bl	0 <_ZdlPvm>
     bfc:	b	b50 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x538>
     c00:	mov	x1, x23
     c04:	mov	x0, x26
     c08:	bl	0 <_ZdlPvm>
     c0c:	ldr	w1, [x22, #56]
     c10:	ldr	x0, [x22, #40]
     c14:	cbz	w1, cc8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6b0>
     c18:	cmn	w24, #0x3
     c1c:	b.hi	e50 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x838>  // b.pmore
     c20:	mov	w2, #0x25                  	// #37
     c24:	sub	w1, w1, #0x1
     c28:	ldr	w3, [x22, #48]
     c2c:	mul	w2, w24, w2
     c30:	add	w3, w3, #0x1
     c34:	and	w5, w2, w1
     c38:	and	w4, w2, w1
     c3c:	lsl	x5, x5, #4
     c40:	add	x2, x0, x5
     c44:	ldr	w5, [x0, x5]
     c48:	cmp	w24, w5
     c4c:	b.eq	a9c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x484>  // b.none
     c50:	mov	w7, #0x1                   	// #1
     c54:	mov	x6, #0x0                   	// #0
     c58:	cmn	w5, #0x1
     c5c:	b.ne	ed0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x8b8>  // b.any
     c60:	cmp	x6, #0x0
     c64:	csel	x2, x2, x6, eq  // eq = none
     c68:	b	a9c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x484>
     c6c:	ldr	x1, [sp, #104]
     c70:	mov	x0, x26
     c74:	bl	0 <_ZdlPvm>
     c78:	ldr	w1, [x22, #56]
     c7c:	ldr	x0, [x22, #40]
     c80:	cbz	w1, cc8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6b0>
     c84:	sub	w1, w1, #0x1
     c88:	ldr	w3, [x22, #48]
     c8c:	and	w4, w25, w1
     c90:	and	w25, w25, w1
     c94:	add	w3, w3, #0x1
     c98:	lsl	x4, x4, #4
     c9c:	add	x2, x0, x4
     ca0:	ldr	w4, [x0, x4]
     ca4:	cmp	w24, w4
     ca8:	b.eq	a9c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x484>  // b.none
     cac:	mov	w6, #0x1                   	// #1
     cb0:	mov	x5, #0x0                   	// #0
     cb4:	cmn	w4, #0x1
     cb8:	b.ne	f04 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x8ec>  // b.any
     cbc:	cmp	x5, #0x0
     cc0:	csel	x2, x2, x5, eq  // eq = none
     cc4:	b	a9c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x484>
     cc8:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     ccc:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     cd0:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     cd4:	add	x3, x3, #0x0
     cd8:	add	x1, x1, #0x0
     cdc:	add	x0, x0, #0x0
     ce0:	mov	w2, #0x22f                 	// #559
     ce4:	bl	0 <__assert_fail>
     ce8:	mov	w6, #0x1                   	// #1
     cec:	cmn	w5, #0x1
     cf0:	b.eq	738 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x120>  // b.none
     cf4:	add	w1, w1, w6
     cf8:	add	w6, w6, #0x1
     cfc:	and	w5, w4, w1
     d00:	and	w1, w4, w1
     d04:	lsl	x5, x5, #4
     d08:	add	x7, x3, x5
     d0c:	ldr	w5, [x3, x5]
     d10:	cmp	w2, w5
     d14:	b.eq	798 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x180>  // b.none
     d18:	b	cec <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x6d4>
     d1c:	mov	w7, #0x1                   	// #1
     d20:	mov	x6, #0x0                   	// #0
     d24:	cmn	w3, #0x1
     d28:	b.ne	e1c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x804>  // b.any
     d2c:	cmp	x6, #0x0
     d30:	csel	x6, x6, x5, ne  // ne = any
     d34:	ldr	x1, [x25, #8]
     d38:	str	w0, [x6]
     d3c:	ldr	w0, [x22, #48]
     d40:	str	xzr, [x25, #8]
     d44:	str	x1, [x6, #8]
     d48:	add	w0, w0, #0x1
     d4c:	ldr	x1, [x25, #8]
     d50:	str	w0, [x22, #48]
     d54:	cbz	x1, 9b8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3a0>
     d58:	ldr	x0, [x1, #24]
     d5c:	add	x2, x1, #0x28
     d60:	cmp	x0, x2
     d64:	b.eq	d74 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x75c>  // b.none
     d68:	str	x1, [sp, #96]
     d6c:	bl	0 <free>
     d70:	ldr	x1, [sp, #96]
     d74:	mov	x0, x1
     d78:	mov	x1, #0x68                  	// #104
     d7c:	bl	0 <_ZdlPvm>
     d80:	b	9b8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3a0>
     d84:	cbnz	w2, f38 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x920>
     d88:	ubfiz	x2, x1, #4, #32
     d8c:	add	x2, x0, x2
     d90:	cmp	x0, x2
     d94:	b.eq	c14 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5fc>  // b.none
     d98:	mov	x1, x0
     d9c:	mov	w3, #0xffffffff            	// #-1
     da0:	str	w3, [x1], #16
     da4:	cmp	x2, x1
     da8:	b.ne	da0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x788>  // b.any
     dac:	ldr	w1, [x22, #56]
     db0:	b	c14 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x5fc>
     db4:	cbnz	w2, f38 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x920>
     db8:	ubfiz	x2, x1, #4, #32
     dbc:	add	x2, x0, x2
     dc0:	cmp	x0, x2
     dc4:	b.eq	c80 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x668>  // b.none
     dc8:	mov	x1, x0
     dcc:	nop
     dd0:	str	w27, [x1], #16
     dd4:	cmp	x2, x1
     dd8:	b.ne	dd0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x7b8>  // b.any
     ddc:	ldr	w1, [x22, #56]
     de0:	b	c80 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x668>
     de4:	add	w3, w3, w0
     de8:	cmp	x2, #0x0
     dec:	and	w5, w1, w3
     df0:	ccmn	w27, #0x2, #0x0, eq  // eq = none
     df4:	csel	x4, x4, x2, eq  // eq = none
     df8:	add	w0, w0, #0x1
     dfc:	lsl	x2, x5, #4
     e00:	and	w3, w1, w3
     e04:	add	x5, x26, x2
     e08:	ldr	w27, [x26, x2]
     e0c:	cmp	w24, w27
     e10:	b.ne	ea4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x88c>  // b.any
     e14:	ldr	x1, [x5, #8]
     e18:	b	6d8 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0xc0>
     e1c:	add	w2, w7, w2
     e20:	cmp	x6, #0x0
     e24:	and	w8, w1, w2
     e28:	ccmn	w3, #0x2, #0x0, eq  // eq = none
     e2c:	csel	x6, x6, x5, ne  // ne = any
     e30:	add	w7, w7, #0x1
     e34:	lsl	x3, x8, #4
     e38:	and	w2, w1, w2
     e3c:	add	x5, x4, x8, lsl #4
     e40:	ldr	w3, [x4, x3]
     e44:	cmp	w0, w3
     e48:	b.eq	a00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3e8>  // b.none
     e4c:	b	d24 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x70c>
     e50:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     e54:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     e58:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     e5c:	add	x3, x3, #0x0
     e60:	add	x1, x1, #0x0
     e64:	add	x0, x0, #0x0
     e68:	mov	w2, #0x250                 	// #592
     e6c:	bl	0 <__assert_fail>
     e70:	add	w2, w2, w8
     e74:	cmp	x7, #0x0
     e78:	and	w9, w1, w2
     e7c:	ccmn	w4, #0x2, #0x0, eq  // eq = none
     e80:	csel	x7, x7, x6, ne  // ne = any
     e84:	add	w8, w8, #0x1
     e88:	lsl	x4, x9, #4
     e8c:	and	w2, w1, w2
     e90:	add	x6, x5, x9, lsl #4
     e94:	ldr	w4, [x5, x4]
     e98:	cmp	w0, w4
     e9c:	b.eq	a00 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x3e8>  // b.none
     ea0:	b	ba0 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x588>
     ea4:	mov	x2, x4
     ea8:	mov	x4, x5
     eac:	b	a54 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x43c>
     eb0:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     eb4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     eb8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     ebc:	add	x3, x3, #0x0
     ec0:	add	x1, x1, #0x0
     ec4:	add	x0, x0, #0x0
     ec8:	mov	w2, #0x68                  	// #104
     ecc:	bl	0 <__assert_fail>
     ed0:	add	w4, w4, w7
     ed4:	cmp	x6, #0x0
     ed8:	and	w8, w1, w4
     edc:	ccmn	w5, #0x2, #0x0, eq  // eq = none
     ee0:	csel	x6, x6, x2, ne  // ne = any
     ee4:	add	w7, w7, #0x1
     ee8:	lsl	x5, x8, #4
     eec:	and	w4, w1, w4
     ef0:	add	x2, x0, x8, lsl #4
     ef4:	ldr	w5, [x0, x5]
     ef8:	cmp	w24, w5
     efc:	b.eq	a9c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x484>  // b.none
     f00:	b	c58 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x640>
     f04:	add	w25, w6, w25
     f08:	cmp	x5, #0x0
     f0c:	and	w7, w1, w25
     f10:	ccmn	w4, #0x2, #0x0, eq  // eq = none
     f14:	csel	x5, x5, x2, ne  // ne = any
     f18:	add	w6, w6, #0x1
     f1c:	lsl	x4, x7, #4
     f20:	and	w25, w1, w25
     f24:	add	x2, x0, x7, lsl #4
     f28:	ldr	w4, [x0, x4]
     f2c:	cmp	w24, w4
     f30:	b.eq	a9c <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x484>  // b.none
     f34:	b	cb4 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE+0x69c>
     f38:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     f3c:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     f40:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
     f44:	add	x3, x3, #0x0
     f48:	add	x1, x1, #0x0
     f4c:	add	x0, x0, #0x0
     f50:	mov	w2, #0x15b                 	// #347
     f54:	bl	0 <__assert_fail>
     f58:	mov	x0, #0x0                   	// #0
     f5c:	str	wzr, [x0]
     f60:	brk	#0x3e8
     f64:	nop

0000000000000f68 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>:
     f68:	stp	x29, x30, [sp, #-64]!
     f6c:	mov	x29, sp
     f70:	stp	x19, x20, [sp, #16]
     f74:	mov	x20, x1
     f78:	ldr	w1, [x1, #8]
     f7c:	stp	x21, x22, [sp, #32]
     f80:	mov	x21, x0
     f84:	ldp	x19, x22, [x0, #80]
     f88:	ldr	w0, [x20, #12]
     f8c:	str	x23, [sp, #48]
     f90:	sub	x0, x0, x1
     f94:	sub	x2, x22, x19
     f98:	cmp	x0, x2, asr #4
     f9c:	asr	x23, x2, #4
     fa0:	b.cc	1008 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0xa0>  // b.lo, b.ul, b.last
     fa4:	ldr	x0, [x20]
     fa8:	cmp	x22, x19
     fac:	add	x0, x0, x1, lsl #4
     fb0:	b.eq	fdc <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0x74>  // b.none
     fb4:	mov	x2, x19
     fb8:	ldr	w3, [x2]
     fbc:	add	x2, x2, #0x10
     fc0:	ldur	x1, [x2, #-8]
     fc4:	str	w3, [x0]
     fc8:	str	x1, [x0, #8]
     fcc:	cmp	x22, x2
     fd0:	add	x0, x0, #0x10
     fd4:	b.ne	fb8 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0x50>  // b.any
     fd8:	ldr	w1, [x20, #8]
     fdc:	ldr	w0, [x20, #12]
     fe0:	add	x1, x1, x23
     fe4:	cmp	x1, x0
     fe8:	b.hi	101c <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>  // b.pmore
     fec:	ldr	x23, [sp, #48]
     ff0:	ldr	x0, [x21, #128]
     ff4:	ldp	x21, x22, [sp, #32]
     ff8:	str	w1, [x20, #8]
     ffc:	ldp	x19, x20, [sp, #16]
    1000:	ldp	x29, x30, [sp], #64
    1004:	ret
    1008:	add	x1, x1, x23
    100c:	mov	x0, x20
    1010:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1014:	ldr	w1, [x20, #8]
    1018:	b	fa4 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE+0x3c>
    101c:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1020:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1024:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1028:	add	x3, x3, #0x0
    102c:	add	x1, x1, #0x0
    1030:	add	x0, x0, #0x0
    1034:	mov	w2, #0x43                  	// #67
    1038:	bl	0 <__assert_fail>
    103c:	nop

0000000000001040 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>:
    1040:	stp	x29, x30, [sp, #-80]!
    1044:	mov	x29, sp
    1048:	stp	x21, x22, [sp, #32]
    104c:	mov	x21, x0
    1050:	ldr	w22, [x0, #136]
    1054:	ldr	x0, [x0, #64]
    1058:	stp	x19, x20, [sp, #16]
    105c:	ldr	x19, [x21, #56]
    1060:	sub	x22, x0, x22, lsl #4
    1064:	cmp	x19, x22
    1068:	b.eq	1204 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1c4>  // b.none
    106c:	stp	x23, x24, [sp, #48]
    1070:	mov	x24, x1
    1074:	mov	x23, x2
    1078:	str	x25, [sp, #64]
    107c:	mov	w25, #0x25                  	// #37
    1080:	ldr	x20, [x19, #8]
    1084:	ldr	x0, [x21, #24]
    1088:	ldr	x1, [x20]
    108c:	bl	0 <_ZNK4llvm3mca15ResourceManager17checkAvailabilityERKNS0_9InstrDescE>
    1090:	cbnz	x0, 11f0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1b0>
    1094:	ldr	x0, [x20]
    1098:	ldrb	w1, [x0, #324]
    109c:	cbnz	w1, 10a8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x68>
    10a0:	ldrb	w0, [x0, #325]
    10a4:	cbz	w0, 11a0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x160>
    10a8:	ldr	x0, [x19, #8]
    10ac:	ldr	w4, [x0, #796]
    10b0:	cbnz	w4, 10d4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x94>
    10b4:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    10b8:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    10bc:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    10c0:	add	x3, x3, #0x0
    10c4:	add	x1, x1, #0x0
    10c8:	add	x0, x0, #0x0
    10cc:	mov	w2, #0x117                 	// #279
    10d0:	bl	0 <__assert_fail>
    10d4:	ldr	x1, [x21, #8]
    10d8:	ldr	w0, [x1, #56]
    10dc:	ldr	x1, [x1, #40]
    10e0:	cbz	w0, 10b4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x74>
    10e4:	cmn	w4, #0x3
    10e8:	b.hi	12d0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x290>  // b.pmore
    10ec:	mul	w3, w4, w25
    10f0:	sub	w2, w0, #0x1
    10f4:	and	w5, w3, w2
    10f8:	and	w3, w3, w2
    10fc:	lsl	x5, x5, #4
    1100:	add	x7, x1, x5
    1104:	ldr	w5, [x1, x5]
    1108:	cmp	w4, w5
    110c:	b.ne	1250 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x210>  // b.any
    1110:	ubfiz	x0, x0, #4, #32
    1114:	add	x6, x1, x0
    1118:	cmp	x7, x6
    111c:	b.eq	10b4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x74>  // b.none
    1120:	mul	w0, w4, w25
    1124:	and	w3, w0, w2
    1128:	and	w0, w0, w2
    112c:	lsl	x3, x3, #4
    1130:	add	x5, x1, x3
    1134:	ldr	w3, [x1, x3]
    1138:	cmp	w4, w3
    113c:	b.ne	1214 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1d4>  // b.any
    1140:	ldr	x1, [x5, #8]
    1144:	ldr	w0, [x1, #4]
    1148:	cbz	w0, 11a0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x160>
    114c:	ldr	w2, [x1, #8]
    1150:	ldr	w1, [x1]
    1154:	add	w0, w0, w2
    1158:	cmp	w0, w1
    115c:	b.ne	11a0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x160>  // b.any
    1160:	ldp	w0, w1, [x23, #8]
    1164:	cmp	w0, w1
    1168:	b.cs	1228 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1e8>  // b.hs, b.nlast
    116c:	ldr	x1, [x23]
    1170:	ubfiz	x0, x0, #4, #32
    1174:	ldp	x2, x3, [x19]
    1178:	add	x0, x1, x0
    117c:	stp	x2, x3, [x0]
    1180:	ldp	w0, w2, [x23, #8]
    1184:	mov	w1, w0
    1188:	add	x1, x1, #0x1
    118c:	cmp	x1, x2
    1190:	b.hi	12f0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x2b0>  // b.pmore
    1194:	add	w0, w0, #0x1
    1198:	str	w0, [x23, #8]
    119c:	cbz	w0, 1284 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x244>
    11a0:	ldr	w0, [x20, #784]
    11a4:	cmp	w0, #0x2
    11a8:	b.ne	11f0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1b0>  // b.any
    11ac:	ldp	w0, w1, [x24, #8]
    11b0:	cmp	w0, w1
    11b4:	b.cs	123c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1fc>  // b.hs, b.nlast
    11b8:	ldr	x1, [x24]
    11bc:	ubfiz	x0, x0, #4, #32
    11c0:	ldp	x2, x3, [x19]
    11c4:	add	x0, x1, x0
    11c8:	stp	x2, x3, [x0]
    11cc:	ldp	w0, w2, [x24, #8]
    11d0:	mov	w1, w0
    11d4:	add	x1, x1, #0x1
    11d8:	cmp	x1, x2
    11dc:	b.hi	12f0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x2b0>  // b.pmore
    11e0:	add	w0, w0, #0x1
    11e4:	str	w0, [x24, #8]
    11e8:	cbz	w0, 1284 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x244>
    11ec:	nop
    11f0:	add	x19, x19, #0x10
    11f4:	cmp	x22, x19
    11f8:	b.ne	1080 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x40>  // b.any
    11fc:	ldp	x23, x24, [sp, #48]
    1200:	ldr	x25, [sp, #64]
    1204:	ldp	x19, x20, [sp, #16]
    1208:	ldp	x21, x22, [sp, #32]
    120c:	ldp	x29, x30, [sp], #80
    1210:	ret
    1214:	mov	w5, #0x1                   	// #1
    1218:	cmn	w3, #0x1
    121c:	b.ne	12a4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x264>  // b.any
    1220:	mov	x5, x6
    1224:	b	1140 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x100>
    1228:	mov	x0, x23
    122c:	mov	x1, #0x0                   	// #0
    1230:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1234:	ldr	w0, [x23, #8]
    1238:	b	116c <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x12c>
    123c:	mov	x0, x24
    1240:	mov	x1, #0x0                   	// #0
    1244:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1248:	ldr	w0, [x24, #8]
    124c:	b	11b8 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x178>
    1250:	mov	w6, #0x1                   	// #1
    1254:	cmn	w5, #0x1
    1258:	b.eq	10b4 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x74>  // b.none
    125c:	add	w3, w6, w3
    1260:	add	w6, w6, #0x1
    1264:	and	w5, w2, w3
    1268:	and	w3, w2, w3
    126c:	lsl	x5, x5, #4
    1270:	add	x7, x1, x5
    1274:	ldr	w5, [x1, x5]
    1278:	cmp	w4, w5
    127c:	b.eq	1110 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0xd0>  // b.none
    1280:	b	1254 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x214>
    1284:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1288:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    128c:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1290:	add	x3, x3, #0x0
    1294:	add	x1, x1, #0x0
    1298:	add	x0, x0, #0x0
    129c:	mov	w2, #0xa7                  	// #167
    12a0:	bl	0 <__assert_fail>
    12a4:	add	w0, w0, w5
    12a8:	add	w7, w5, #0x1
    12ac:	and	w3, w2, w0
    12b0:	and	w0, w2, w0
    12b4:	lsl	x3, x3, #4
    12b8:	add	x5, x1, x3
    12bc:	ldr	w3, [x1, x3]
    12c0:	cmp	w4, w3
    12c4:	b.eq	1140 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x100>  // b.none
    12c8:	mov	w5, w7
    12cc:	b	1218 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_+0x1d8>
    12d0:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    12d4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    12d8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    12dc:	add	x3, x3, #0x0
    12e0:	add	x1, x1, #0x0
    12e4:	add	x0, x0, #0x0
    12e8:	mov	w2, #0x250                 	// #592
    12ec:	bl	0 <__assert_fail>
    12f0:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    12f4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    12f8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    12fc:	add	x3, x3, #0x0
    1300:	add	x1, x1, #0x0
    1304:	add	x0, x0, #0x0
    1308:	mov	w2, #0x43                  	// #67
    130c:	bl	0 <__assert_fail>

0000000000001310 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
    1310:	stp	x29, x30, [sp, #-96]!
    1314:	mov	x29, sp
    1318:	stp	x19, x20, [sp, #16]
    131c:	stp	x21, x22, [sp, #32]
    1320:	ldp	x19, x22, [x0, #32]
    1324:	cmp	x19, x22
    1328:	b.eq	16dc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3cc>  // b.none
    132c:	stp	x23, x24, [sp, #48]
    1330:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    1334:	mov	x23, x0
    1338:	ldr	x24, [x24]
    133c:	mov	x20, x1
    1340:	mov	w21, #0x0                   	// #0
    1344:	stp	x25, x26, [sp, #64]
    1348:	adrp	x26, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    134c:	mov	w25, #0x25                  	// #37
    1350:	add	x26, x26, #0x0
    1354:	str	x27, [sp, #80]
    1358:	b	13ec <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>
    135c:	ldrb	w0, [x0, #325]
    1360:	cbnz	w0, 140c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xfc>
    1364:	ldrb	w0, [x24]
    1368:	cbnz	w0, 1438 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x128>
    136c:	ldp	w0, w1, [x20, #8]
    1370:	cmp	w0, w1
    1374:	b.cs	14c8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>  // b.hs, b.nlast
    1378:	ldr	x1, [x20]
    137c:	ubfiz	x0, x0, #4, #32
    1380:	ldp	x2, x3, [x19]
    1384:	add	x0, x1, x0
    1388:	stp	x2, x3, [x0]
    138c:	ldp	w0, w2, [x20, #8]
    1390:	mov	w1, w0
    1394:	add	x1, x1, #0x1
    1398:	cmp	x1, x2
    139c:	b.hi	1750 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x440>  // b.pmore
    13a0:	add	w0, w0, #0x1
    13a4:	str	w0, [x20, #8]
    13a8:	cbz	w0, 1730 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x420>
    13ac:	add	w21, w21, #0x1
    13b0:	mov	x1, x19
    13b4:	add	x0, x23, #0x38
    13b8:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    13bc:	ubfiz	x2, x21, #4, #32
    13c0:	ldr	w0, [x19]
    13c4:	sub	x2, x22, x2
    13c8:	cmp	x22, x19
    13cc:	ldr	w3, [x2]
    13d0:	str	xzr, [x19, #8]
    13d4:	ldr	x1, [x2, #8]
    13d8:	str	w3, [x19]
    13dc:	str	x1, [x19, #8]
    13e0:	str	w0, [x2]
    13e4:	str	xzr, [x2, #8]
    13e8:	b.eq	1570 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x260>  // b.none
    13ec:	ldr	x27, [x19, #8]
    13f0:	cbz	x27, 1570 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x260>
    13f4:	ldr	w0, [x27, #784]
    13f8:	cmp	w0, #0x1
    13fc:	b.eq	15d0 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2c0>  // b.none
    1400:	ldr	x0, [x27]
    1404:	ldrb	w1, [x0, #324]
    1408:	cbz	w1, 135c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x4c>
    140c:	ldr	x0, [x19, #8]
    1410:	ldr	w1, [x0, #796]
    1414:	cbnz	w1, 14dc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1cc>
    1418:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    141c:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1420:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1424:	add	x3, x3, #0x0
    1428:	add	x1, x1, #0x0
    142c:	add	x0, x0, #0x0
    1430:	mov	w2, #0x117                 	// #279
    1434:	bl	0 <__assert_fail>
    1438:	mov	x0, x26
    143c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1440:	tst	w0, #0xff
    1444:	b.eq	136c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>  // b.none
    1448:	bl	0 <_ZN4llvm4dbgsEv>
    144c:	mov	x27, x0
    1450:	ldp	x1, x2, [x0, #16]
    1454:	sub	x1, x1, x2
    1458:	cmp	x1, #0x19
    145c:	b.ls	161c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x30c>  // b.plast
    1460:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1464:	add	x3, x3, #0x0
    1468:	ldp	x0, x1, [x3]
    146c:	stp	x0, x1, [x2]
    1470:	ldrh	w0, [x3, #24]
    1474:	ldr	x1, [x3, #16]
    1478:	str	x1, [x2, #16]
    147c:	strh	w0, [x2, #24]
    1480:	ldr	x0, [x27, #24]
    1484:	ldr	w1, [x19]
    1488:	add	x0, x0, #0x1a
    148c:	str	x0, [x27, #24]
    1490:	mov	x0, x27
    1494:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1498:	ldp	x0, x1, [x27, #16]
    149c:	sub	x0, x0, x1
    14a0:	cmp	x0, #0x1d
    14a4:	b.hi	164c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x33c>  // b.pmore
    14a8:	mov	x0, x27
    14ac:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    14b0:	mov	x2, #0x1e                  	// #30
    14b4:	add	x1, x1, #0x0
    14b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    14bc:	ldp	w0, w1, [x20, #8]
    14c0:	cmp	w0, w1
    14c4:	b.cc	1378 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>  // b.lo, b.ul, b.last
    14c8:	mov	x0, x20
    14cc:	mov	x1, #0x0                   	// #0
    14d0:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    14d4:	ldr	w0, [x20, #8]
    14d8:	b	1378 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>
    14dc:	ldr	x2, [x23, #8]
    14e0:	ldr	w0, [x2, #56]
    14e4:	ldr	x3, [x2, #40]
    14e8:	cbz	w0, 1418 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>
    14ec:	cmn	w1, #0x3
    14f0:	b.hi	1710 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x400>  // b.pmore
    14f4:	mul	w2, w1, w25
    14f8:	sub	w4, w0, #0x1
    14fc:	and	w5, w2, w4
    1500:	and	w2, w2, w4
    1504:	lsl	x5, x5, #4
    1508:	add	x7, x3, x5
    150c:	ldr	w5, [x3, x5]
    1510:	cmp	w1, w5
    1514:	b.ne	16a8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x398>  // b.any
    1518:	ubfiz	x0, x0, #4, #32
    151c:	add	x6, x3, x0
    1520:	cmp	x7, x6
    1524:	b.eq	1418 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>  // b.none
    1528:	mul	w2, w1, w25
    152c:	and	w0, w2, w4
    1530:	and	w2, w2, w4
    1534:	lsl	x0, x0, #4
    1538:	add	x5, x3, x0
    153c:	ldr	w0, [x3, x0]
    1540:	cmp	w1, w0
    1544:	b.ne	15e8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2d8>  // b.any
    1548:	ldr	x1, [x5, #8]
    154c:	ldp	w0, w2, [x1, #4]
    1550:	ldr	w1, [x1]
    1554:	add	w0, w0, w2
    1558:	cmp	w1, w0
    155c:	b.ls	1364 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.plast
    1560:	add	x19, x19, #0x10
    1564:	cmp	x22, x19
    1568:	b.ne	13ec <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>  // b.any
    156c:	nop
    1570:	ldp	x4, x3, [x23, #32]
    1574:	mov	w1, w21
    1578:	sub	x0, x3, x4
    157c:	asr	x0, x0, #4
    1580:	subs	x2, x0, x1
    1584:	cmp	x0, x1
    1588:	cset	x5, cc  // cc = lo, ul, last
    158c:	cmp	w21, #0x0
    1590:	cset	w19, ne  // ne = any
    1594:	cbnz	x5, 167c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x36c>
    1598:	cmp	x2, x0
    159c:	b.cs	15fc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ec>  // b.hs, b.nlast
    15a0:	add	x2, x4, x2, lsl #4
    15a4:	cmp	x3, x2
    15a8:	b.eq	15fc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ec>  // b.none
    15ac:	ldp	x25, x26, [sp, #64]
    15b0:	ldr	x27, [sp, #80]
    15b4:	str	x2, [x23, #40]
    15b8:	ldp	x23, x24, [sp, #48]
    15bc:	mov	w0, w19
    15c0:	ldp	x19, x20, [sp, #16]
    15c4:	ldp	x21, x22, [sp, #32]
    15c8:	ldp	x29, x30, [sp], #96
    15cc:	ret
    15d0:	mov	x0, x27
    15d4:	bl	0 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
    15d8:	tst	w0, #0xff
    15dc:	b.ne	1400 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xf0>  // b.any
    15e0:	add	x19, x19, #0x10
    15e4:	b	1564 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x254>
    15e8:	mov	w5, #0x1                   	// #1
    15ec:	cmn	w0, #0x1
    15f0:	b.ne	16e4 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3d4>  // b.any
    15f4:	mov	x5, x6
    15f8:	b	1548 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x238>
    15fc:	mov	w0, w19
    1600:	ldp	x19, x20, [sp, #16]
    1604:	ldp	x21, x22, [sp, #32]
    1608:	ldp	x23, x24, [sp, #48]
    160c:	ldp	x25, x26, [sp, #64]
    1610:	ldr	x27, [sp, #80]
    1614:	ldp	x29, x30, [sp], #96
    1618:	ret
    161c:	mov	x2, #0x1a                  	// #26
    1620:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1624:	add	x1, x1, #0x0
    1628:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    162c:	ldr	w1, [x19]
    1630:	mov	x27, x0
    1634:	mov	x0, x27
    1638:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    163c:	ldp	x0, x1, [x27, #16]
    1640:	sub	x0, x0, x1
    1644:	cmp	x0, #0x1d
    1648:	b.ls	14a8 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x198>  // b.plast
    164c:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1650:	add	x0, x0, #0x0
    1654:	ldr	x2, [x0, #16]
    1658:	str	x2, [x1, #16]
    165c:	ldp	x2, x3, [x0]
    1660:	stp	x2, x3, [x1]
    1664:	ldur	x0, [x0, #22]
    1668:	stur	x0, [x1, #22]
    166c:	ldr	x0, [x27, #24]
    1670:	add	x0, x0, #0x1e
    1674:	str	x0, [x27, #24]
    1678:	b	136c <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>
    167c:	add	x0, x23, #0x20
    1680:	neg	x1, x1
    1684:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1688:	mov	w0, w19
    168c:	ldp	x19, x20, [sp, #16]
    1690:	ldp	x21, x22, [sp, #32]
    1694:	ldp	x23, x24, [sp, #48]
    1698:	ldp	x25, x26, [sp, #64]
    169c:	ldr	x27, [sp, #80]
    16a0:	ldp	x29, x30, [sp], #96
    16a4:	ret
    16a8:	mov	w6, #0x1                   	// #1
    16ac:	cmn	w5, #0x1
    16b0:	b.eq	1418 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x108>  // b.none
    16b4:	add	w2, w2, w6
    16b8:	add	w6, w6, #0x1
    16bc:	and	w5, w4, w2
    16c0:	and	w2, w4, w2
    16c4:	lsl	x5, x5, #4
    16c8:	add	x7, x3, x5
    16cc:	ldr	w5, [x3, x5]
    16d0:	cmp	w1, w5
    16d4:	b.eq	1518 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x208>  // b.none
    16d8:	b	16ac <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x39c>
    16dc:	mov	w19, #0x0                   	// #0
    16e0:	b	15bc <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2ac>
    16e4:	add	w2, w5, w2
    16e8:	add	w7, w5, #0x1
    16ec:	and	w0, w4, w2
    16f0:	and	w2, w4, w2
    16f4:	lsl	x0, x0, #4
    16f8:	add	x5, x3, x0
    16fc:	ldr	w0, [x3, x0]
    1700:	cmp	w1, w0
    1704:	b.eq	1548 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x238>  // b.none
    1708:	mov	w5, w7
    170c:	b	15ec <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2dc>
    1710:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1714:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1718:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    171c:	add	x3, x3, #0x0
    1720:	add	x1, x1, #0x0
    1724:	add	x0, x0, #0x0
    1728:	mov	w2, #0x250                 	// #592
    172c:	bl	0 <__assert_fail>
    1730:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1734:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1738:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    173c:	add	x3, x3, #0x0
    1740:	add	x1, x1, #0x0
    1744:	add	x0, x0, #0x0
    1748:	mov	w2, #0xa7                  	// #167
    174c:	bl	0 <__assert_fail>
    1750:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1754:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1758:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    175c:	add	x3, x3, #0x0
    1760:	add	x1, x1, #0x0
    1764:	add	x0, x0, #0x0
    1768:	mov	w2, #0x43                  	// #67
    176c:	bl	0 <__assert_fail>

0000000000001770 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>:
    1770:	stp	x29, x30, [sp, #-96]!
    1774:	mov	x29, sp
    1778:	stp	x19, x20, [sp, #16]
    177c:	stp	x25, x26, [sp, #64]
    1780:	ldp	x19, x26, [x0, #104]
    1784:	cmp	x19, x26
    1788:	b.eq	18c8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x158>  // b.none
    178c:	stp	x21, x22, [sp, #32]
    1790:	adrp	x22, 0 <_ZN4llvm9DebugFlagE>
    1794:	mov	x21, x0
    1798:	ldr	x22, [x22]
    179c:	mov	x20, x1
    17a0:	stp	x23, x24, [sp, #48]
    17a4:	adrp	x23, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    17a8:	add	x23, x23, #0x0
    17ac:	mov	x25, #0x0                   	// #0
    17b0:	adrp	x24, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    17b4:	nop
    17b8:	ldr	x1, [x19, #8]
    17bc:	cbz	x1, 17e0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x70>
    17c0:	ldr	w0, [x1, #784]
    17c4:	cmp	w0, #0x5
    17c8:	b.eq	18d8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x168>  // b.none
    17cc:	ldrb	w0, [x22]
    17d0:	cbnz	w0, 1824 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0xb4>
    17d4:	add	x19, x19, #0x10
    17d8:	cmp	x19, x26
    17dc:	b.ne	17b8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x48>  // b.any
    17e0:	ldp	x3, x2, [x21, #104]
    17e4:	sub	x0, x2, x3
    17e8:	asr	x0, x0, #4
    17ec:	subs	x1, x0, x25
    17f0:	b.cc	1a00 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x290>  // b.lo, b.ul, b.last
    17f4:	cmp	x1, x0
    17f8:	b.cs	18c0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x150>  // b.hs, b.nlast
    17fc:	add	x1, x3, x1, lsl #4
    1800:	cmp	x2, x1
    1804:	b.eq	18c0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x150>  // b.none
    1808:	ldp	x23, x24, [sp, #48]
    180c:	str	x1, [x21, #112]
    1810:	ldp	x19, x20, [sp, #16]
    1814:	ldp	x21, x22, [sp, #32]
    1818:	ldp	x25, x26, [sp, #64]
    181c:	ldp	x29, x30, [sp], #96
    1820:	ret
    1824:	mov	x0, x23
    1828:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    182c:	tst	w0, #0xff
    1830:	b.eq	17d4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x64>  // b.none
    1834:	str	x27, [sp, #80]
    1838:	bl	0 <_ZN4llvm4dbgsEv>
    183c:	ldp	x1, x2, [x0, #16]
    1840:	mov	x27, x0
    1844:	sub	x1, x1, x2
    1848:	cmp	x1, #0x19
    184c:	b.ls	1970 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x200>  // b.plast
    1850:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1854:	add	x3, x3, #0x0
    1858:	ldp	x0, x1, [x3]
    185c:	stp	x0, x1, [x2]
    1860:	ldrh	w0, [x3, #24]
    1864:	ldr	x1, [x3, #16]
    1868:	str	x1, [x2, #16]
    186c:	strh	w0, [x2, #24]
    1870:	ldr	x0, [x27, #24]
    1874:	ldr	w1, [x19]
    1878:	add	x0, x0, #0x1a
    187c:	str	x0, [x27, #24]
    1880:	mov	x0, x27
    1884:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1888:	ldp	x0, x2, [x27, #16]
    188c:	sub	x0, x0, x2
    1890:	cmp	x0, #0x14
    1894:	b.ls	19a0 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x230>  // b.plast
    1898:	add	x3, x24, #0x0
    189c:	ldp	x0, x1, [x3]
    18a0:	stp	x0, x1, [x2]
    18a4:	ldur	x0, [x3, #13]
    18a8:	stur	x0, [x2, #13]
    18ac:	ldr	x0, [x27, #24]
    18b0:	add	x0, x0, #0x15
    18b4:	str	x0, [x27, #24]
    18b8:	ldr	x27, [sp, #80]
    18bc:	b	17d4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x64>
    18c0:	ldp	x21, x22, [sp, #32]
    18c4:	ldp	x23, x24, [sp, #48]
    18c8:	ldp	x19, x20, [sp, #16]
    18cc:	ldp	x25, x26, [sp, #64]
    18d0:	ldp	x29, x30, [sp], #96
    18d4:	ret
    18d8:	ldr	x0, [x21, #8]
    18dc:	mov	x1, x19
    18e0:	ldr	x2, [x0]
    18e4:	ldr	x2, [x2, #32]
    18e8:	blr	x2
    18ec:	ldp	w0, w1, [x20, #8]
    18f0:	cmp	w0, w1
    18f4:	b.cs	195c <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1ec>  // b.hs, b.nlast
    18f8:	ldr	x1, [x20]
    18fc:	ubfiz	x0, x0, #4, #32
    1900:	ldp	x2, x3, [x19]
    1904:	add	x0, x1, x0
    1908:	stp	x2, x3, [x0]
    190c:	ldp	w1, w2, [x20, #8]
    1910:	mov	w0, w1
    1914:	add	x0, x0, #0x1
    1918:	cmp	x0, x2
    191c:	b.hi	19b8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x248>  // b.pmore
    1920:	add	w1, w1, #0x1
    1924:	str	w1, [x20, #8]
    1928:	cbz	w1, 19dc <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x26c>
    192c:	add	w25, w25, #0x1
    1930:	ldr	w0, [x19]
    1934:	ubfiz	x2, x25, #4, #32
    1938:	sub	x2, x26, x2
    193c:	ldr	w3, [x2]
    1940:	str	xzr, [x19, #8]
    1944:	ldr	x1, [x2, #8]
    1948:	str	w3, [x19]
    194c:	str	x1, [x19, #8]
    1950:	str	w0, [x2]
    1954:	str	xzr, [x2, #8]
    1958:	b	17d8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>
    195c:	mov	x0, x20
    1960:	mov	x1, #0x0                   	// #0
    1964:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1968:	ldr	w0, [x20, #8]
    196c:	b	18f8 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x188>
    1970:	mov	x2, #0x1a                  	// #26
    1974:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1978:	add	x1, x1, #0x0
    197c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1980:	ldr	w1, [x19]
    1984:	mov	x27, x0
    1988:	mov	x0, x27
    198c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1990:	ldp	x0, x2, [x27, #16]
    1994:	sub	x0, x0, x2
    1998:	cmp	x0, #0x14
    199c:	b.hi	1898 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x128>  // b.pmore
    19a0:	mov	x0, x27
    19a4:	add	x1, x24, #0x0
    19a8:	mov	x2, #0x15                  	// #21
    19ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    19b0:	ldr	x27, [sp, #80]
    19b4:	b	17d4 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE+0x64>
    19b8:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    19bc:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    19c0:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    19c4:	add	x3, x3, #0x0
    19c8:	add	x1, x1, #0x0
    19cc:	add	x0, x0, #0x0
    19d0:	mov	w2, #0x43                  	// #67
    19d4:	str	x27, [sp, #80]
    19d8:	bl	0 <__assert_fail>
    19dc:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    19e0:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    19e4:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    19e8:	add	x3, x3, #0x0
    19ec:	add	x1, x1, #0x0
    19f0:	add	x0, x0, #0x0
    19f4:	mov	w2, #0xa7                  	// #167
    19f8:	str	x27, [sp, #80]
    19fc:	bl	0 <__assert_fail>
    1a00:	neg	x1, x25
    1a04:	add	x0, x21, #0x68
    1a08:	ldp	x19, x20, [sp, #16]
    1a0c:	ldp	x21, x22, [sp, #32]
    1a10:	ldp	x23, x24, [sp, #48]
    1a14:	ldp	x25, x26, [sp, #64]
    1a18:	ldp	x29, x30, [sp], #96
    1a1c:	b	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>

0000000000001a20 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>:
    1a20:	stp	x29, x30, [sp, #-96]!
    1a24:	mov	x29, sp
    1a28:	stp	x19, x20, [sp, #16]
    1a2c:	stp	x21, x22, [sp, #32]
    1a30:	ldp	x19, x22, [x0, #56]
    1a34:	cmp	x19, x22
    1a38:	b.eq	1dc8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3a8>  // b.none
    1a3c:	stp	x25, x26, [sp, #64]
    1a40:	adrp	x25, 0 <_ZN4llvm9DebugFlagE>
    1a44:	adrp	x26, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1a48:	ldr	x25, [x25]
    1a4c:	add	x26, x26, #0x0
    1a50:	mov	w21, #0x0                   	// #0
    1a54:	stp	x23, x24, [sp, #48]
    1a58:	mov	x23, x0
    1a5c:	mov	w24, #0x25                  	// #37
    1a60:	str	x27, [sp, #80]
    1a64:	mov	x27, x1
    1a68:	b	1afc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>
    1a6c:	ldrb	w0, [x0, #325]
    1a70:	cbnz	w0, 1b2c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x10c>
    1a74:	ldrb	w0, [x25]
    1a78:	cbnz	w0, 1c44 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x224>
    1a7c:	ldp	w0, w1, [x27, #8]
    1a80:	cmp	w0, w1
    1a84:	b.cs	1cf0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2d0>  // b.hs, b.nlast
    1a88:	ldr	x1, [x27]
    1a8c:	ubfiz	x0, x0, #4, #32
    1a90:	ldp	x2, x3, [x19]
    1a94:	add	x0, x1, x0
    1a98:	stp	x2, x3, [x0]
    1a9c:	ldp	w0, w2, [x27, #8]
    1aa0:	mov	w1, w0
    1aa4:	add	x1, x1, #0x1
    1aa8:	cmp	x1, x2
    1aac:	b.hi	1e1c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3fc>  // b.pmore
    1ab0:	add	w0, w0, #0x1
    1ab4:	str	w0, [x27, #8]
    1ab8:	cbz	w0, 1e3c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x41c>
    1abc:	add	w21, w21, #0x1
    1ac0:	mov	x1, x19
    1ac4:	add	x0, x23, #0x50
    1ac8:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1acc:	ubfiz	x2, x21, #4, #32
    1ad0:	ldr	w0, [x19]
    1ad4:	sub	x2, x22, x2
    1ad8:	cmp	x19, x22
    1adc:	ldr	w3, [x2]
    1ae0:	str	xzr, [x19, #8]
    1ae4:	ldr	x1, [x2, #8]
    1ae8:	str	w3, [x19]
    1aec:	str	x1, [x19, #8]
    1af0:	str	w0, [x2]
    1af4:	str	xzr, [x2, #8]
    1af8:	b.eq	1be4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>  // b.none
    1afc:	ldr	x20, [x19, #8]
    1b00:	cbz	x20, 1be4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1c4>
    1b04:	ldr	w0, [x20, #784]
    1b08:	cmp	w0, #0x3
    1b0c:	b.eq	1b20 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x100>  // b.none
    1b10:	mov	x0, x20
    1b14:	bl	0 <_ZN4llvm3mca11Instruction13updatePendingEv>
    1b18:	tst	w0, #0xff
    1b1c:	b.eq	1bd8 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1b8>  // b.none
    1b20:	ldr	x0, [x20]
    1b24:	ldrb	w1, [x0, #324]
    1b28:	cbz	w1, 1a6c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x4c>
    1b2c:	ldr	x0, [x19, #8]
    1b30:	ldr	w1, [x0, #796]
    1b34:	cbnz	w1, 1b58 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x138>
    1b38:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1b3c:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1b40:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1b44:	add	x3, x3, #0x0
    1b48:	add	x1, x1, #0x0
    1b4c:	add	x0, x0, #0x0
    1b50:	mov	w2, #0x117                 	// #279
    1b54:	bl	0 <__assert_fail>
    1b58:	ldr	x2, [x23, #8]
    1b5c:	ldr	w0, [x2, #56]
    1b60:	ldr	x3, [x2, #40]
    1b64:	cbz	w0, 1b38 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x118>
    1b68:	cmn	w1, #0x3
    1b6c:	b.hi	1dfc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3dc>  // b.pmore
    1b70:	mul	w2, w1, w24
    1b74:	sub	w4, w0, #0x1
    1b78:	and	w5, w2, w4
    1b7c:	and	w2, w2, w4
    1b80:	lsl	x5, x5, #4
    1b84:	add	x7, x3, x5
    1b88:	ldr	w5, [x3, x5]
    1b8c:	cmp	w1, w5
    1b90:	b.ne	1d94 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x374>  // b.any
    1b94:	ubfiz	x0, x0, #4, #32
    1b98:	add	x6, x3, x0
    1b9c:	cmp	x7, x6
    1ba0:	b.eq	1b38 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x118>  // b.none
    1ba4:	mul	w2, w1, w24
    1ba8:	and	w0, w2, w4
    1bac:	and	w2, w2, w4
    1bb0:	lsl	x0, x0, #4
    1bb4:	add	x5, x3, x0
    1bb8:	ldr	w0, [x3, x0]
    1bbc:	cmp	w1, w0
    1bc0:	b.ne	1d04 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e4>  // b.any
    1bc4:	ldr	x0, [x5, #8]
    1bc8:	ldr	w1, [x0]
    1bcc:	ldr	w0, [x0, #8]
    1bd0:	cmp	w1, w0
    1bd4:	b.eq	1a74 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x54>  // b.none
    1bd8:	add	x19, x19, #0x10
    1bdc:	cmp	x19, x22
    1be0:	b.ne	1afc <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0xdc>  // b.any
    1be4:	ldp	x4, x3, [x23, #56]
    1be8:	mov	w1, w21
    1bec:	sub	x0, x3, x4
    1bf0:	asr	x0, x0, #4
    1bf4:	subs	x2, x0, x1
    1bf8:	cmp	x0, x1
    1bfc:	cset	x5, cc  // cc = lo, ul, last
    1c00:	cmp	w21, #0x0
    1c04:	cset	w19, ne  // ne = any
    1c08:	cbnz	x5, 1d38 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x318>
    1c0c:	cmp	x2, x0
    1c10:	b.cs	1d18 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2f8>  // b.hs, b.nlast
    1c14:	add	x2, x4, x2, lsl #4
    1c18:	cmp	x3, x2
    1c1c:	b.eq	1d18 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2f8>  // b.none
    1c20:	ldp	x25, x26, [sp, #64]
    1c24:	ldr	x27, [sp, #80]
    1c28:	str	x2, [x23, #64]
    1c2c:	ldp	x23, x24, [sp, #48]
    1c30:	mov	w0, w19
    1c34:	ldp	x19, x20, [sp, #16]
    1c38:	ldp	x21, x22, [sp, #32]
    1c3c:	ldp	x29, x30, [sp], #96
    1c40:	ret
    1c44:	mov	x0, x26
    1c48:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1c4c:	tst	w0, #0xff
    1c50:	b.eq	1a7c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>  // b.none
    1c54:	bl	0 <_ZN4llvm4dbgsEv>
    1c58:	mov	x20, x0
    1c5c:	ldp	x1, x2, [x0, #16]
    1c60:	sub	x1, x1, x2
    1c64:	cmp	x1, #0x19
    1c68:	b.ls	1d7c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x35c>  // b.plast
    1c6c:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1c70:	add	x3, x3, #0x0
    1c74:	ldp	x0, x1, [x3]
    1c78:	stp	x0, x1, [x2]
    1c7c:	ldrh	w0, [x3, #24]
    1c80:	ldr	x1, [x3, #16]
    1c84:	str	x1, [x2, #16]
    1c88:	strh	w0, [x2, #24]
    1c8c:	ldr	x0, [x20, #24]
    1c90:	add	x0, x0, #0x1a
    1c94:	str	x0, [x20, #24]
    1c98:	ldr	w1, [x19]
    1c9c:	mov	x0, x20
    1ca0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1ca4:	ldp	x0, x1, [x20, #16]
    1ca8:	sub	x0, x0, x1
    1cac:	cmp	x0, #0x1b
    1cb0:	b.ls	1d64 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x344>  // b.plast
    1cb4:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1cb8:	add	x0, x0, #0x0
    1cbc:	ldp	x2, x3, [x0]
    1cc0:	stp	x2, x3, [x1]
    1cc4:	ldr	w2, [x0, #24]
    1cc8:	ldr	x0, [x0, #16]
    1ccc:	str	x0, [x1, #16]
    1cd0:	str	w2, [x1, #24]
    1cd4:	ldr	x0, [x20, #24]
    1cd8:	add	x0, x0, #0x1c
    1cdc:	str	x0, [x20, #24]
    1ce0:	ldp	w0, w1, [x27, #8]
    1ce4:	cmp	w0, w1
    1ce8:	b.cc	1a88 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>  // b.lo, b.ul, b.last
    1cec:	nop
    1cf0:	mov	x0, x27
    1cf4:	mov	x1, #0x0                   	// #0
    1cf8:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1cfc:	ldr	w0, [x27, #8]
    1d00:	b	1a88 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x68>
    1d04:	mov	w5, #0x1                   	// #1
    1d08:	cmn	w0, #0x1
    1d0c:	b.ne	1dd0 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x3b0>  // b.any
    1d10:	mov	x5, x6
    1d14:	b	1bc4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1a4>
    1d18:	mov	w0, w19
    1d1c:	ldp	x19, x20, [sp, #16]
    1d20:	ldp	x21, x22, [sp, #32]
    1d24:	ldp	x23, x24, [sp, #48]
    1d28:	ldp	x25, x26, [sp, #64]
    1d2c:	ldr	x27, [sp, #80]
    1d30:	ldp	x29, x30, [sp], #96
    1d34:	ret
    1d38:	add	x0, x23, #0x38
    1d3c:	neg	x1, x1
    1d40:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1d44:	mov	w0, w19
    1d48:	ldp	x19, x20, [sp, #16]
    1d4c:	ldp	x21, x22, [sp, #32]
    1d50:	ldp	x23, x24, [sp, #48]
    1d54:	ldp	x25, x26, [sp, #64]
    1d58:	ldr	x27, [sp, #80]
    1d5c:	ldp	x29, x30, [sp], #96
    1d60:	ret
    1d64:	mov	x0, x20
    1d68:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1d6c:	mov	x2, #0x1c                  	// #28
    1d70:	add	x1, x1, #0x0
    1d74:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d78:	b	1a7c <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x5c>
    1d7c:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1d80:	mov	x2, #0x1a                  	// #26
    1d84:	add	x1, x1, #0x0
    1d88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1d8c:	mov	x20, x0
    1d90:	b	1c98 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x278>
    1d94:	mov	w6, #0x1                   	// #1
    1d98:	cmn	w5, #0x1
    1d9c:	b.eq	1b38 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x118>  // b.none
    1da0:	add	w2, w2, w6
    1da4:	add	w6, w6, #0x1
    1da8:	and	w5, w4, w2
    1dac:	and	w2, w4, w2
    1db0:	lsl	x5, x5, #4
    1db4:	add	x7, x3, x5
    1db8:	ldr	w5, [x3, x5]
    1dbc:	cmp	w1, w5
    1dc0:	b.eq	1b94 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x174>  // b.none
    1dc4:	b	1d98 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x378>
    1dc8:	mov	w19, #0x0                   	// #0
    1dcc:	b	1c30 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x210>
    1dd0:	add	w2, w5, w2
    1dd4:	add	w7, w5, #0x1
    1dd8:	and	w0, w4, w2
    1ddc:	and	w2, w4, w2
    1de0:	lsl	x0, x0, #4
    1de4:	add	x5, x3, x0
    1de8:	ldr	w0, [x3, x0]
    1dec:	cmp	w1, w0
    1df0:	b.eq	1bc4 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x1a4>  // b.none
    1df4:	mov	w5, w7
    1df8:	b	1d08 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE+0x2e8>
    1dfc:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e00:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e04:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e08:	add	x3, x3, #0x0
    1e0c:	add	x1, x1, #0x0
    1e10:	add	x0, x0, #0x0
    1e14:	mov	w2, #0x250                 	// #592
    1e18:	bl	0 <__assert_fail>
    1e1c:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e20:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e24:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e28:	add	x3, x3, #0x0
    1e2c:	add	x1, x1, #0x0
    1e30:	add	x0, x0, #0x0
    1e34:	mov	w2, #0x43                  	// #67
    1e38:	bl	0 <__assert_fail>
    1e3c:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e40:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e44:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1e48:	add	x3, x3, #0x0
    1e4c:	add	x1, x1, #0x0
    1e50:	add	x0, x0, #0x0
    1e54:	mov	w2, #0xa7                  	// #167
    1e58:	bl	0 <__assert_fail>
    1e5c:	nop

0000000000001e60 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>:
    1e60:	stp	x29, x30, [sp, #-64]!
    1e64:	mov	x29, sp
    1e68:	stp	x19, x20, [sp, #16]
    1e6c:	mov	x20, x0
    1e70:	mov	x19, x1
    1e74:	ldr	x0, [x0, #8]
    1e78:	stp	x21, x22, [sp, #32]
    1e7c:	mov	x22, x4
    1e80:	stp	x23, x24, [sp, #48]
    1e84:	mov	x24, x2
    1e88:	mov	x23, x3
    1e8c:	ldr	x1, [x0]
    1e90:	ldr	x1, [x1, #56]
    1e94:	blr	x1
    1e98:	ldr	x0, [x20, #24]
    1e9c:	mov	x1, x19
    1ea0:	bl	0 <_ZN4llvm3mca15ResourceManager10cycleEventERNS_15SmallVectorImplISt4pairImmEEE>
    1ea4:	ldp	x19, x21, [x20, #104]
    1ea8:	cmp	x19, x21
    1eac:	b.eq	1ec4 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x64>  // b.none
    1eb0:	ldr	x0, [x19, #8]
    1eb4:	add	x19, x19, #0x10
    1eb8:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1ebc:	cmp	x21, x19
    1ec0:	b.ne	1eb0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x50>  // b.any
    1ec4:	mov	x1, x24
    1ec8:	mov	x0, x20
    1ecc:	bl	1770 <_ZN4llvm3mca9Scheduler15updateIssuedSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1ed0:	ldp	x19, x21, [x20, #56]
    1ed4:	cmp	x21, x19
    1ed8:	b.eq	1ef4 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x94>  // b.none
    1edc:	nop
    1ee0:	ldr	x0, [x19, #8]
    1ee4:	add	x19, x19, #0x10
    1ee8:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1eec:	cmp	x21, x19
    1ef0:	b.ne	1ee0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0x80>  // b.any
    1ef4:	ldp	x19, x21, [x20, #32]
    1ef8:	cmp	x21, x19
    1efc:	b.eq	1f14 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xb4>  // b.none
    1f00:	ldr	x0, [x19, #8]
    1f04:	add	x19, x19, #0x10
    1f08:	bl	0 <_ZN4llvm3mca11Instruction10cycleEventEv>
    1f0c:	cmp	x21, x19
    1f10:	b.ne	1f00 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_+0xa0>  // b.any
    1f14:	mov	x1, x23
    1f18:	mov	x0, x20
    1f1c:	bl	1310 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1f20:	mov	x1, x22
    1f24:	mov	x0, x20
    1f28:	bl	1a20 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
    1f2c:	ldp	x21, x22, [sp, #32]
    1f30:	ldp	x23, x24, [sp, #48]
    1f34:	str	xzr, [x20, #128]
    1f38:	str	wzr, [x20, #136]
    1f3c:	ldp	x19, x20, [sp, #16]
    1f40:	ldp	x29, x30, [sp], #64
    1f44:	ret

0000000000001f48 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>:
    1f48:	stp	x29, x30, [sp, #-48]!
    1f4c:	mov	x29, sp
    1f50:	stp	x19, x20, [sp, #16]
    1f54:	mov	x19, x0
    1f58:	ldr	x20, [x1, #8]
    1f5c:	ldr	x0, [x0, #24]
    1f60:	str	x21, [sp, #32]
    1f64:	mov	x21, x1
    1f68:	ldr	x1, [x20, #800]
    1f6c:	bl	0 <_ZN4llvm3mca15ResourceManager14reserveBuffersEm>
    1f70:	ldr	x0, [x20]
    1f74:	ldrb	w2, [x0, #324]
    1f78:	cbnz	w2, 1f84 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3c>
    1f7c:	ldrb	w0, [x0, #325]
    1f80:	cbz	w0, 1fe0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x98>
    1f84:	ldr	x0, [x19, #8]
    1f88:	mov	x1, x21
    1f8c:	ldr	x2, [x0]
    1f90:	ldr	x2, [x2, #24]
    1f94:	blr	x2
    1f98:	str	w0, [x20, #796]
    1f9c:	ldr	w4, [x20, #784]
    1fa0:	cmp	w4, #0x1
    1fa4:	b.eq	205c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.none
    1fa8:	ldr	x8, [x20]
    1fac:	ldrb	w7, [x8, #324]
    1fb0:	cbz	w7, 20a8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x160>
    1fb4:	ldr	x0, [x21, #8]
    1fb8:	ldr	w0, [x0, #796]
    1fbc:	cbnz	w0, 20bc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x174>
    1fc0:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1fc4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1fc8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    1fcc:	add	x3, x3, #0x0
    1fd0:	add	x1, x1, #0x0
    1fd4:	add	x0, x0, #0x0
    1fd8:	mov	w2, #0x117                 	// #279
    1fdc:	bl	0 <__assert_fail>
    1fe0:	ldr	w4, [x20, #784]
    1fe4:	cmp	w4, #0x1
    1fe8:	b.eq	205c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.none
    1fec:	cmp	w4, #0x2
    1ff0:	b.eq	2260 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x318>  // b.none
    1ff4:	cmp	w4, #0x3
    1ff8:	b.ne	2240 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f8>  // b.any
    1ffc:	mov	x1, x21
    2000:	mov	x0, x19
    2004:	bl	5f0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
    2008:	ands	w0, w0, #0xff
    200c:	b.ne	2098 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x150>  // b.any
    2010:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    2014:	ldr	x0, [x0]
    2018:	ldrb	w0, [x0]
    201c:	cbnz	w0, 23f8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x4b0>
    2020:	add	x19, x19, #0x50
    2024:	ldp	x1, x0, [x19, #8]
    2028:	cmp	x1, x0
    202c:	b.eq	24f8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5b0>  // b.none
    2030:	ldr	w3, [x21]
    2034:	add	x2, x1, #0x10
    2038:	ldr	x0, [x21, #8]
    203c:	str	w3, [x1]
    2040:	str	x0, [x1, #8]
    2044:	mov	w0, #0x1                   	// #1
    2048:	str	x2, [x19, #8]
    204c:	ldp	x19, x20, [sp, #16]
    2050:	ldr	x21, [sp, #32]
    2054:	ldp	x29, x30, [sp], #48
    2058:	ret
    205c:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    2060:	ldr	x0, [x0]
    2064:	ldrb	w0, [x0]
    2068:	cbnz	w0, 22b8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x370>
    206c:	add	x19, x19, #0x20
    2070:	ldp	x1, x0, [x19, #8]
    2074:	cmp	x1, x0
    2078:	b.eq	23e4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x49c>  // b.none
    207c:	ldr	w3, [x21]
    2080:	add	x2, x1, #0x10
    2084:	ldr	x0, [x21, #8]
    2088:	str	w3, [x1]
    208c:	str	x0, [x1, #8]
    2090:	mov	w0, #0x0                   	// #0
    2094:	str	x2, [x19, #8]
    2098:	ldp	x19, x20, [sp, #16]
    209c:	ldr	x21, [sp, #32]
    20a0:	ldp	x29, x30, [sp], #48
    20a4:	ret
    20a8:	ldrb	w0, [x8, #325]
    20ac:	cbz	w0, 1fec <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xa4>
    20b0:	ldr	x0, [x21, #8]
    20b4:	ldr	w0, [x0, #796]
    20b8:	cbz	w0, 1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>
    20bc:	ldr	x1, [x19, #8]
    20c0:	ldr	w10, [x1, #56]
    20c4:	ldr	x3, [x1, #40]
    20c8:	cbz	w10, 1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>
    20cc:	cmn	w0, #0x3
    20d0:	b.hi	26b0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x768>  // b.pmore
    20d4:	mov	w1, #0x25                  	// #37
    20d8:	sub	w5, w10, #0x1
    20dc:	mul	w1, w0, w1
    20e0:	and	w2, w1, w5
    20e4:	and	w1, w1, w5
    20e8:	lsl	x2, x2, #4
    20ec:	add	x6, x3, x2
    20f0:	ldr	w2, [x3, x2]
    20f4:	cmp	w0, w2
    20f8:	b.ne	2550 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x608>  // b.any
    20fc:	ubfiz	x9, x10, #4, #32
    2100:	mov	w10, w10
    2104:	add	x9, x3, x9
    2108:	cmp	x9, x6
    210c:	b.eq	1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    2110:	mov	w2, #0x25                  	// #37
    2114:	mul	w2, w0, w2
    2118:	and	w6, w2, w5
    211c:	and	w2, w2, w5
    2120:	lsl	x6, x6, #4
    2124:	add	x1, x3, x6
    2128:	ldr	w6, [x3, x6]
    212c:	cmp	w0, w6
    2130:	b.ne	2498 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x550>  // b.any
    2134:	ldr	x6, [x1, #8]
    2138:	ldp	w1, w2, [x6]
    213c:	ldr	w9, [x6, #8]
    2140:	add	w2, w2, w9
    2144:	cmp	w1, w2
    2148:	b.hi	205c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x114>  // b.pmore
    214c:	cmp	w4, #0x2
    2150:	b.eq	2260 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x318>  // b.none
    2154:	cbz	w7, 23d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x490>
    2158:	mov	w1, #0x25                  	// #37
    215c:	mul	w1, w0, w1
    2160:	and	w2, w1, w5
    2164:	and	w1, w1, w5
    2168:	lsl	x2, x2, #4
    216c:	add	x6, x3, x2
    2170:	ldr	w2, [x3, x2]
    2174:	cmp	w0, w2
    2178:	b.ne	25b8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x670>  // b.any
    217c:	add	x9, x3, x10, lsl #4
    2180:	cmp	x9, x6
    2184:	b.eq	1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    2188:	mov	w1, #0x25                  	// #37
    218c:	mul	w1, w0, w1
    2190:	and	w2, w1, w5
    2194:	and	w1, w1, w5
    2198:	lsl	x2, x2, #4
    219c:	add	x6, x3, x2
    21a0:	ldr	w2, [x3, x2]
    21a4:	cmp	w0, w2
    21a8:	b.ne	24e4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x59c>  // b.any
    21ac:	ldr	x2, [x6, #8]
    21b0:	ldr	w1, [x2, #4]
    21b4:	cbz	w1, 21cc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x284>
    21b8:	ldr	w6, [x2, #8]
    21bc:	ldr	w2, [x2]
    21c0:	add	w1, w1, w6
    21c4:	cmp	w1, w2
    21c8:	b.eq	2260 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x318>  // b.none
    21cc:	cmp	w4, #0x3
    21d0:	b.ne	2240 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2f8>  // b.any
    21d4:	cbz	w7, 248c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x544>
    21d8:	mov	w1, #0x25                  	// #37
    21dc:	mul	w1, w0, w1
    21e0:	and	w2, w1, w5
    21e4:	and	w1, w1, w5
    21e8:	lsl	x2, x2, #4
    21ec:	add	x4, x3, x2
    21f0:	ldr	w2, [x3, x2]
    21f4:	cmp	w0, w2
    21f8:	b.ne	2620 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6d8>  // b.any
    21fc:	add	x10, x3, x10, lsl #4
    2200:	cmp	x4, x10
    2204:	b.eq	1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    2208:	mov	w1, #0x25                  	// #37
    220c:	mul	w1, w0, w1
    2210:	and	w2, w1, w5
    2214:	and	w1, w1, w5
    2218:	lsl	x2, x2, #4
    221c:	add	x4, x3, x2
    2220:	ldr	w2, [x3, x2]
    2224:	cmp	w0, w2
    2228:	b.ne	250c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c4>  // b.any
    222c:	ldr	x0, [x4, #8]
    2230:	ldr	w1, [x0]
    2234:	ldr	w0, [x0, #8]
    2238:	cmp	w1, w0
    223c:	b.eq	1ffc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xb4>  // b.none
    2240:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2244:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2248:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    224c:	add	x3, x3, #0x0
    2250:	add	x1, x1, #0x0
    2254:	add	x0, x0, #0x0
    2258:	mov	w2, #0x142                 	// #322
    225c:	bl	0 <__assert_fail>
    2260:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    2264:	ldr	x0, [x0]
    2268:	ldrb	w0, [x0]
    226c:	cbnz	w0, 2344 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3fc>
    2270:	add	x0, x19, #0x38
    2274:	ldp	x1, x2, [x0, #8]
    2278:	cmp	x1, x2
    227c:	b.eq	24d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x590>  // b.none
    2280:	ldr	w4, [x21]
    2284:	add	x2, x1, #0x10
    2288:	ldr	x3, [x21, #8]
    228c:	str	w4, [x1]
    2290:	str	x3, [x1, #8]
    2294:	str	x2, [x0, #8]
    2298:	ldr	w1, [x19, #136]
    229c:	mov	w0, #0x0                   	// #0
    22a0:	ldr	x21, [sp, #32]
    22a4:	add	w1, w1, #0x1
    22a8:	str	w1, [x19, #136]
    22ac:	ldp	x19, x20, [sp, #16]
    22b0:	ldp	x29, x30, [sp], #48
    22b4:	ret
    22b8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    22bc:	add	x0, x0, #0x0
    22c0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    22c4:	tst	w0, #0xff
    22c8:	b.eq	206c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x124>  // b.none
    22cc:	bl	0 <_ZN4llvm4dbgsEv>
    22d0:	mov	x20, x0
    22d4:	ldp	x1, x2, [x0, #16]
    22d8:	sub	x1, x1, x2
    22dc:	cmp	x1, #0x13
    22e0:	b.ls	2538 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5f0>  // b.plast
    22e4:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    22e8:	add	x0, x0, #0x0
    22ec:	ldp	x4, x5, [x0]
    22f0:	stp	x4, x5, [x2]
    22f4:	ldr	w0, [x0, #16]
    22f8:	str	w0, [x2, #16]
    22fc:	ldr	x0, [x20, #24]
    2300:	add	x0, x0, #0x14
    2304:	str	x0, [x20, #24]
    2308:	ldr	w1, [x21]
    230c:	mov	x0, x20
    2310:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2314:	ldp	x0, x1, [x20, #16]
    2318:	sub	x0, x0, x1
    231c:	cmp	x0, #0xf
    2320:	b.ls	2520 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5d8>  // b.plast
    2324:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2328:	add	x0, x0, #0x0
    232c:	ldp	x2, x3, [x0]
    2330:	stp	x2, x3, [x1]
    2334:	ldr	x0, [x20, #24]
    2338:	add	x0, x0, #0x10
    233c:	str	x0, [x20, #24]
    2340:	b	206c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x124>
    2344:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2348:	add	x0, x0, #0x0
    234c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2350:	tst	w0, #0xff
    2354:	b.eq	2270 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x328>  // b.none
    2358:	bl	0 <_ZN4llvm4dbgsEv>
    235c:	mov	x20, x0
    2360:	ldp	x1, x2, [x0, #16]
    2364:	sub	x1, x1, x2
    2368:	cmp	x1, #0x13
    236c:	b.ls	25a0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x658>  // b.plast
    2370:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2374:	add	x0, x0, #0x0
    2378:	ldp	x4, x5, [x0]
    237c:	stp	x4, x5, [x2]
    2380:	ldr	w0, [x0, #16]
    2384:	str	w0, [x2, #16]
    2388:	ldr	x0, [x20, #24]
    238c:	add	x0, x0, #0x14
    2390:	str	x0, [x20, #24]
    2394:	ldr	w1, [x21]
    2398:	mov	x0, x20
    239c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    23a0:	ldp	x0, x1, [x20, #16]
    23a4:	sub	x0, x0, x1
    23a8:	cmp	x0, #0x12
    23ac:	b.ls	2588 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x640>  // b.plast
    23b0:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    23b4:	add	x0, x0, #0x0
    23b8:	ldp	x2, x3, [x0]
    23bc:	stp	x2, x3, [x1]
    23c0:	ldur	w0, [x0, #15]
    23c4:	stur	w0, [x1, #15]
    23c8:	ldr	x0, [x20, #24]
    23cc:	add	x0, x0, #0x13
    23d0:	str	x0, [x20, #24]
    23d4:	b	2270 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x328>
    23d8:	ldrb	w1, [x8, #325]
    23dc:	cbnz	w1, 2158 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x210>
    23e0:	b	1ff4 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xac>
    23e4:	mov	x0, x19
    23e8:	mov	x2, x21
    23ec:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    23f0:	mov	w0, #0x0                   	// #0
    23f4:	b	2098 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x150>
    23f8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    23fc:	add	x0, x0, #0x0
    2400:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    2404:	tst	w0, #0xff
    2408:	b.eq	2020 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd8>  // b.none
    240c:	bl	0 <_ZN4llvm4dbgsEv>
    2410:	mov	x20, x0
    2414:	ldp	x1, x2, [x0, #16]
    2418:	sub	x1, x1, x2
    241c:	cmp	x1, #0x13
    2420:	b.ls	2608 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6c0>  // b.plast
    2424:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2428:	add	x0, x0, #0x0
    242c:	ldp	x4, x5, [x0]
    2430:	stp	x4, x5, [x2]
    2434:	ldr	w0, [x0, #16]
    2438:	str	w0, [x2, #16]
    243c:	ldr	x0, [x20, #24]
    2440:	add	x0, x0, #0x14
    2444:	str	x0, [x20, #24]
    2448:	ldr	w1, [x21]
    244c:	mov	x0, x20
    2450:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2454:	ldp	x0, x1, [x20, #16]
    2458:	sub	x0, x0, x1
    245c:	cmp	x0, #0x10
    2460:	b.ls	25f0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6a8>  // b.plast
    2464:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2468:	add	x0, x0, #0x0
    246c:	ldp	x2, x3, [x0]
    2470:	stp	x2, x3, [x1]
    2474:	ldrb	w0, [x0, #16]
    2478:	strb	w0, [x1, #16]
    247c:	ldr	x0, [x20, #24]
    2480:	add	x0, x0, #0x11
    2484:	str	x0, [x20, #24]
    2488:	b	2020 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd8>
    248c:	ldrb	w1, [x8, #325]
    2490:	cbnz	w1, 21d8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x290>
    2494:	b	1ffc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xb4>
    2498:	mov	w1, #0x1                   	// #1
    249c:	cmn	w6, #0x1
    24a0:	b.ne	24ac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x564>  // b.any
    24a4:	mov	x1, x9
    24a8:	b	2134 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>
    24ac:	add	w2, w2, w1
    24b0:	add	w11, w1, #0x1
    24b4:	and	w6, w5, w2
    24b8:	and	w2, w5, w2
    24bc:	lsl	x6, x6, #4
    24c0:	add	x1, x3, x6
    24c4:	ldr	w6, [x3, x6]
    24c8:	cmp	w0, w6
    24cc:	b.eq	2134 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1ec>  // b.none
    24d0:	mov	w1, w11
    24d4:	b	249c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x554>
    24d8:	mov	x2, x21
    24dc:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    24e0:	b	2298 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x350>
    24e4:	mov	w6, #0x1                   	// #1
    24e8:	cmn	w2, #0x1
    24ec:	b.ne	2658 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x710>  // b.any
    24f0:	mov	x6, x9
    24f4:	b	21ac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x264>
    24f8:	mov	x0, x19
    24fc:	mov	x2, x21
    2500:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2504:	mov	w0, #0x1                   	// #1
    2508:	b	2098 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x150>
    250c:	mov	w4, #0x1                   	// #1
    2510:	cmn	w2, #0x1
    2514:	b.ne	2684 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x73c>  // b.any
    2518:	mov	x4, x10
    251c:	b	222c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2e4>
    2520:	mov	x0, x20
    2524:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2528:	mov	x2, #0x10                  	// #16
    252c:	add	x1, x1, #0x0
    2530:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2534:	b	206c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x124>
    2538:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    253c:	mov	x2, #0x14                  	// #20
    2540:	add	x1, x1, #0x0
    2544:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2548:	mov	x20, x0
    254c:	b	2308 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x3c0>
    2550:	mov	w6, #0x1                   	// #1
    2554:	cmn	w2, #0x1
    2558:	b.eq	1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    255c:	add	w1, w6, w1
    2560:	add	w9, w6, #0x1
    2564:	and	w2, w5, w1
    2568:	and	w1, w5, w1
    256c:	lsl	x2, x2, #4
    2570:	add	x6, x3, x2
    2574:	ldr	w2, [x3, x2]
    2578:	cmp	w0, w2
    257c:	b.eq	20fc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x1b4>  // b.none
    2580:	mov	w6, w9
    2584:	b	2554 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x60c>
    2588:	mov	x0, x20
    258c:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2590:	mov	x2, #0x13                  	// #19
    2594:	add	x1, x1, #0x0
    2598:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    259c:	b	2270 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x328>
    25a0:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    25a4:	mov	x2, #0x14                  	// #20
    25a8:	add	x1, x1, #0x0
    25ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    25b0:	mov	x20, x0
    25b4:	b	2394 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x44c>
    25b8:	mov	w6, #0x1                   	// #1
    25bc:	cmn	w2, #0x1
    25c0:	b.eq	1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    25c4:	add	w1, w1, w6
    25c8:	add	w9, w6, #0x1
    25cc:	and	w6, w5, w1
    25d0:	and	w1, w5, w1
    25d4:	lsl	x2, x6, #4
    25d8:	add	x6, x3, x6, lsl #4
    25dc:	ldr	w2, [x3, x2]
    25e0:	cmp	w0, w2
    25e4:	b.eq	217c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x234>  // b.none
    25e8:	mov	w6, w9
    25ec:	b	25bc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x674>
    25f0:	mov	x0, x20
    25f4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    25f8:	mov	x2, #0x11                  	// #17
    25fc:	add	x1, x1, #0x0
    2600:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2604:	b	2020 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0xd8>
    2608:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    260c:	mov	x2, #0x14                  	// #20
    2610:	add	x1, x1, #0x0
    2614:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2618:	mov	x20, x0
    261c:	b	2448 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x500>
    2620:	mov	w4, #0x1                   	// #1
    2624:	cmn	w2, #0x1
    2628:	b.eq	1fc0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x78>  // b.none
    262c:	add	w1, w4, w1
    2630:	add	w6, w4, #0x1
    2634:	and	w4, w5, w1
    2638:	and	w1, w5, w1
    263c:	lsl	x2, x4, #4
    2640:	add	x4, x3, x4, lsl #4
    2644:	ldr	w2, [x3, x2]
    2648:	cmp	w0, w2
    264c:	b.eq	21fc <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2b4>  // b.none
    2650:	mov	w4, w6
    2654:	b	2624 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x6dc>
    2658:	add	w1, w6, w1
    265c:	add	w11, w6, #0x1
    2660:	and	w2, w5, w1
    2664:	and	w1, w5, w1
    2668:	lsl	x2, x2, #4
    266c:	add	x6, x3, x2
    2670:	ldr	w2, [x3, x2]
    2674:	cmp	w0, w2
    2678:	b.eq	21ac <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x264>  // b.none
    267c:	mov	w6, w11
    2680:	b	24e8 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5a0>
    2684:	add	w1, w4, w1
    2688:	add	w6, w4, #0x1
    268c:	and	w2, w5, w1
    2690:	and	w1, w5, w1
    2694:	lsl	x2, x2, #4
    2698:	add	x4, x3, x2
    269c:	ldr	w2, [x3, x2]
    26a0:	cmp	w0, w2
    26a4:	b.eq	222c <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x2e4>  // b.none
    26a8:	mov	w4, w6
    26ac:	b	2510 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE+0x5c8>
    26b0:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    26b4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    26b8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    26bc:	add	x3, x3, #0x0
    26c0:	add	x1, x1, #0x0
    26c4:	add	x0, x0, #0x0
    26c8:	mov	w2, #0x250                 	// #592
    26cc:	bl	0 <__assert_fail>

00000000000026d0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>:
    26d0:	stp	x29, x30, [sp, #-80]!
    26d4:	mov	w5, #0x88                  	// #136
    26d8:	mov	x29, sp
    26dc:	stp	x19, x20, [sp, #16]
    26e0:	mov	x20, x0
    26e4:	ldr	x19, [x1, #8]
    26e8:	stp	x21, x22, [sp, #32]
    26ec:	mov	x21, x1
    26f0:	stp	x23, x24, [sp, #48]
    26f4:	mov	x23, x2
    26f8:	ldr	w22, [x19, #24]
    26fc:	ldr	x0, [x19, #16]
    2700:	mov	w2, #0x0                   	// #0
    2704:	mov	x24, x3
    2708:	mov	w3, #0x0                   	// #0
    270c:	stp	x25, x26, [sp, #64]
    2710:	mov	x25, x4
    2714:	umaddl	x22, w22, w5, x0
    2718:	mov	x1, x22
    271c:	bl	0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2720:	ldr	x1, [x19]
    2724:	mov	x26, x0
    2728:	ldrb	w2, [x1, #324]
    272c:	cbnz	w2, 2774 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xa4>
    2730:	ldrb	w0, [x1, #325]
    2734:	cbnz	w0, 2774 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xa4>
    2738:	ldr	x0, [x20, #24]
    273c:	ldr	x1, [x19, #800]
    2740:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
    2744:	mov	x2, x23
    2748:	mov	x1, x21
    274c:	mov	x0, x20
    2750:	bl	618 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
    2754:	cmp	x22, x26
    2758:	b.ne	2848 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x178>  // b.any
    275c:	ldp	x19, x20, [sp, #16]
    2760:	ldp	x21, x22, [sp, #32]
    2764:	ldp	x23, x24, [sp, #48]
    2768:	ldp	x25, x26, [sp, #64]
    276c:	ldp	x29, x30, [sp], #80
    2770:	ret
    2774:	ldr	w3, [x19, #796]
    2778:	cbnz	w3, 279c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xcc>
    277c:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2780:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2784:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    2788:	add	x3, x3, #0x0
    278c:	add	x1, x1, #0x0
    2790:	add	x0, x0, #0x0
    2794:	mov	w2, #0x117                 	// #279
    2798:	bl	0 <__assert_fail>
    279c:	ldr	x0, [x20, #8]
    27a0:	ldr	w1, [x0, #56]
    27a4:	ldr	x4, [x0, #40]
    27a8:	cbz	w1, 277c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xac>
    27ac:	cmn	w3, #0x3
    27b0:	b.hi	28f0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x220>  // b.pmore
    27b4:	mov	w2, #0x25                  	// #37
    27b8:	sub	w0, w1, #0x1
    27bc:	mul	w2, w3, w2
    27c0:	and	w5, w2, w0
    27c4:	and	w2, w2, w0
    27c8:	lsl	x5, x5, #4
    27cc:	add	x7, x4, x5
    27d0:	ldr	w5, [x4, x5]
    27d4:	cmp	w3, w5
    27d8:	b.ne	28bc <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1ec>  // b.any
    27dc:	ubfiz	x1, x1, #4, #32
    27e0:	add	x6, x4, x1
    27e4:	cmp	x6, x7
    27e8:	b.eq	277c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xac>  // b.none
    27ec:	mov	w1, #0x25                  	// #37
    27f0:	mul	w1, w3, w1
    27f4:	and	w2, w1, w0
    27f8:	and	w1, w1, w0
    27fc:	lsl	x2, x2, #4
    2800:	add	x5, x4, x2
    2804:	ldr	w2, [x4, x2]
    2808:	cmp	w3, w2
    280c:	b.ne	287c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1ac>  // b.any
    2810:	ldr	x2, [x5, #8]
    2814:	ldr	x0, [x20, #24]
    2818:	ldr	w4, [x2, #12]
    281c:	ldr	w3, [x2, #20]
    2820:	ldr	x1, [x19, #800]
    2824:	cmp	w4, w3
    2828:	b.eq	2740 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x70>  // b.none
    282c:	ldr	w2, [x2, #32]
    2830:	cbz	w2, 2740 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x70>
    2834:	bl	0 <_ZN4llvm3mca15ResourceManager14releaseBuffersEm>
    2838:	mov	x2, x23
    283c:	mov	x1, x21
    2840:	mov	x0, x20
    2844:	bl	618 <_ZN4llvm3mca9Scheduler20issueInstructionImplERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEE>
    2848:	mov	x1, x24
    284c:	mov	x0, x20
    2850:	bl	1310 <_ZN4llvm3mca9Scheduler19promoteToPendingSetERNS_15SmallVectorImplINS0_7InstRefEEE>
    2854:	tst	w0, #0xff
    2858:	b.eq	275c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x8c>  // b.none
    285c:	mov	x1, x25
    2860:	mov	x0, x20
    2864:	ldp	x19, x20, [sp, #16]
    2868:	ldp	x21, x22, [sp, #32]
    286c:	ldp	x23, x24, [sp, #48]
    2870:	ldp	x25, x26, [sp, #64]
    2874:	ldp	x29, x30, [sp], #80
    2878:	b	1a20 <_ZN4llvm3mca9Scheduler17promoteToReadySetERNS_15SmallVectorImplINS0_7InstRefEEE>
    287c:	mov	w5, #0x1                   	// #1
    2880:	cmn	w2, #0x1
    2884:	b.ne	2890 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1c0>  // b.any
    2888:	mov	x5, x6
    288c:	b	2810 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x140>
    2890:	add	w1, w5, w1
    2894:	add	w7, w5, #0x1
    2898:	and	w2, w0, w1
    289c:	and	w1, w0, w1
    28a0:	lsl	x2, x2, #4
    28a4:	add	x5, x4, x2
    28a8:	ldr	w2, [x4, x2]
    28ac:	cmp	w3, w2
    28b0:	b.eq	2810 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x140>  // b.none
    28b4:	mov	w5, w7
    28b8:	b	2880 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1b0>
    28bc:	mov	w6, #0x1                   	// #1
    28c0:	cmn	w5, #0x1
    28c4:	b.eq	277c <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0xac>  // b.none
    28c8:	add	w2, w2, w6
    28cc:	add	w6, w6, #0x1
    28d0:	and	w5, w0, w2
    28d4:	and	w2, w0, w2
    28d8:	lsl	x5, x5, #4
    28dc:	add	x7, x4, x5
    28e0:	ldr	w5, [x4, x5]
    28e4:	cmp	w3, w5
    28e8:	b.eq	27dc <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x10c>  // b.none
    28ec:	b	28c0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_+0x1f0>
    28f0:	adrp	x3, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    28f4:	adrp	x1, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    28f8:	adrp	x0, 0 <_ZN4llvm3mca17SchedulerStrategyD1Ev>
    28fc:	add	x3, x3, #0x0
    2900:	add	x1, x1, #0x0
    2904:	add	x0, x0, #0x0
    2908:	mov	w2, #0x250                 	// #592
    290c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_:

0000000000000000 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_>:
   0:	ldr	x3, [x1, #8]
   4:	mov	w4, #0x88                  	// #136
   8:	ldr	w6, [x1]
   c:	ldr	w5, [x3, #24]
  10:	ldr	x0, [x3, #16]
  14:	umaddl	x5, w5, w4, x0
  18:	cmp	x0, x5
  1c:	b.eq	ac <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xac>  // b.none
  20:	mov	w3, #0x0                   	// #0
  24:	nop
  28:	ldr	x4, [x0, #32]
  2c:	add	x0, x0, #0x88
  30:	ldur	w1, [x0, #-72]
  34:	cmp	x4, #0x0
  38:	cinc	w1, w1, ne  // ne = any
  3c:	cmp	x5, x0
  40:	add	w3, w3, w1
  44:	b.ne	28 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x28>  // b.any
  48:	ldr	x1, [x2, #8]
  4c:	mov	w4, #0x88                  	// #136
  50:	ldr	w7, [x2]
  54:	sub	w3, w6, w3
  58:	ldr	w5, [x1, #24]
  5c:	ldr	x0, [x1, #16]
  60:	umaddl	x5, w5, w4, x0
  64:	cmp	x0, x5
  68:	b.eq	d0 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xd0>  // b.none
  6c:	mov	w2, #0x0                   	// #0
  70:	ldr	x4, [x0, #32]
  74:	add	x0, x0, #0x88
  78:	ldur	w1, [x0, #-72]
  7c:	cmp	x4, #0x0
  80:	cinc	w1, w1, ne  // ne = any
  84:	cmp	x5, x0
  88:	add	w2, w2, w1
  8c:	b.ne	70 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x70>  // b.any
  90:	sub	w2, w7, w2
  94:	cmp	w7, w6
  98:	cset	w0, hi  // hi = pmore
  9c:	cmp	w2, w3
  a0:	b.eq	a8 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0xa8>  // b.none
  a4:	cset	w0, gt
  a8:	ret
  ac:	ldr	x1, [x2, #8]
  b0:	mov	w4, #0x88                  	// #136
  b4:	ldr	w7, [x2]
  b8:	mov	w3, w6
  bc:	ldr	w5, [x1, #24]
  c0:	ldr	x0, [x1, #16]
  c4:	umaddl	x5, w5, w4, x0
  c8:	cmp	x0, x5
  cc:	b.ne	6c <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x6c>  // b.any
  d0:	mov	w2, w7
  d4:	b	94 <_ZNK4llvm3mca24DefaultSchedulerStrategy7compareERKNS0_7InstRefES4_+0x94>

Disassembly of section .text._ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE:

0000000000000000 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	w21, [x0, #56]
  1c:	ldr	x0, [x1, #8]
  20:	stp	x23, x24, [sp, #48]
  24:	stp	x25, x26, [sp, #64]
  28:	ldr	w22, [x0, #796]
  2c:	ldr	x25, [x19, #40]
  30:	cbz	w21, 220 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x220>
  34:	cmn	w22, #0x3
  38:	b.hi	6d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6d0>  // b.pmore
  3c:	mov	w23, #0x25                  	// #37
  40:	sub	w1, w21, #0x1
  44:	mul	w23, w22, w23
  48:	and	w0, w23, w1
  4c:	and	w4, w23, w1
  50:	lsl	x0, x0, #4
  54:	add	x3, x25, x0
  58:	ldr	w24, [x25, x0]
  5c:	cmp	w22, w24
  60:	b.ne	1a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1a4>  // b.any
  64:	ldr	x0, [x3, #8]
  68:	ldr	w2, [x0, #16]
  6c:	cbnz	w2, d4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xd4>
  70:	ldr	x4, [x0, #96]
  74:	add	w2, w2, #0x1
  78:	ldr	x1, [x20, #8]
  7c:	str	w2, [x0, #16]
  80:	cbz	x4, 10c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x10c>
  84:	ldr	w3, [x1, #788]
  88:	ldr	w5, [x4, #788]
  8c:	cmp	w5, w3
  90:	b.ge	a4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xa4>  // b.tcont
  94:	ldr	w3, [x20]
  98:	mov	x4, x1
  9c:	str	w3, [x0, #88]
  a0:	str	x1, [x0, #96]
  a4:	cbz	w2, bc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xbc>
  a8:	ldr	w1, [x0, #12]
  ac:	ldr	w3, [x0, #20]
  b0:	sub	w1, w1, w3
  b4:	cmp	w2, w1
  b8:	b.eq	124 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x124>  // b.none
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldp	x23, x24, [sp, #48]
  c8:	ldp	x25, x26, [sp, #64]
  cc:	ldp	x29, x30, [sp], #96
  d0:	ret
  d4:	ldr	w1, [x0, #12]
  d8:	ldr	w3, [x0, #20]
  dc:	sub	w1, w1, w3
  e0:	cmp	w2, w1
  e4:	b.ne	70 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x70>  // b.any
  e8:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  ec:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  f0:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
  f4:	add	x3, x3, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x0, x0, #0x0
 100:	mov	w2, #0x79                  	// #121
 104:	stp	x27, x28, [sp, #80]
 108:	bl	0 <__assert_fail>
 10c:	ldr	w3, [x20]
 110:	mov	x4, x1
 114:	str	w3, [x0, #88]
 118:	str	x1, [x0, #96]
 11c:	cbz	w2, bc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xbc>
 120:	b	a8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xa8>
 124:	ldr	x2, [x0, #24]
 128:	ldr	w6, [x0, #32]
 12c:	add	x6, x2, x6, lsl #3
 130:	cmp	x2, x6
 134:	b.eq	bc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0xbc>  // b.none
 138:	stp	x27, x28, [sp, #80]
 13c:	nop
 140:	ldr	x1, [x2]
 144:	ldr	w5, [x1]
 148:	ldr	w3, [x1, #8]
 14c:	cmp	w5, w3
 150:	b.eq	6f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6f4>  // b.none
 154:	ldr	w3, [x1, #4]
 158:	ldr	w5, [x1, #80]
 15c:	add	w3, w3, #0x1
 160:	str	w3, [x1, #4]
 164:	ldr	w3, [x4, #788]
 168:	cmp	w3, w5
 16c:	b.ls	17c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x17c>  // b.plast
 170:	ldr	w5, [x0, #88]
 174:	str	w5, [x1, #72]
 178:	str	w3, [x1, #80]
 17c:	add	x2, x2, #0x8
 180:	cmp	x6, x2
 184:	b.ne	140 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x140>  // b.any
 188:	ldp	x19, x20, [sp, #16]
 18c:	ldp	x21, x22, [sp, #32]
 190:	ldp	x23, x24, [sp, #48]
 194:	ldp	x25, x26, [sp, #64]
 198:	ldp	x27, x28, [sp, #80]
 19c:	ldp	x29, x30, [sp], #96
 1a0:	ret
 1a4:	mov	w0, #0x1                   	// #1
 1a8:	mov	x2, #0x0                   	// #0
 1ac:	cmn	w24, #0x1
 1b0:	b.ne	614 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x614>  // b.any
 1b4:	ldr	x4, [x19, #32]
 1b8:	lsl	w0, w21, #1
 1bc:	ldr	w5, [x19, #48]
 1c0:	cmp	x2, #0x0
 1c4:	add	x4, x4, #0x1
 1c8:	str	x4, [x19, #32]
 1cc:	add	w5, w5, #0x1
 1d0:	add	w4, w0, w21
 1d4:	csel	x2, x2, x3, ne  // ne = any
 1d8:	cmp	w4, w5, lsl #2
 1dc:	b.ls	230 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x230>  // b.plast
 1e0:	ldr	w0, [x19, #52]
 1e4:	sub	w0, w21, w0
 1e8:	sub	w0, w0, w5
 1ec:	cmp	w0, w21, lsr #3
 1f0:	b.ls	32c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x32c>  // b.plast
 1f4:	str	w5, [x19, #48]
 1f8:	ldr	w0, [x2]
 1fc:	cmn	w0, #0x1
 200:	b.eq	210 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x210>  // b.none
 204:	ldr	w0, [x19, #52]
 208:	sub	w0, w0, #0x1
 20c:	str	w0, [x19, #52]
 210:	mov	x0, #0x0                   	// #0
 214:	str	w22, [x2]
 218:	str	xzr, [x2, #8]
 21c:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 220:	ldr	x1, [x19, #32]
 224:	mov	w0, #0x0                   	// #0
 228:	add	x1, x1, #0x1
 22c:	str	x1, [x19, #32]
 230:	sub	w0, w0, #0x1
 234:	mov	w1, #0x40                  	// #64
 238:	orr	x0, x0, x0, lsr #1
 23c:	orr	x0, x0, x0, lsr #2
 240:	orr	x0, x0, x0, lsr #4
 244:	orr	x0, x0, x0, lsr #8
 248:	orr	x0, x0, x0, lsr #16
 24c:	add	x0, x0, #0x1
 250:	cmp	w0, w1
 254:	csel	w0, w0, w1, cs  // cs = hs, nlast
 258:	str	w0, [x19, #56]
 25c:	ubfiz	x0, x0, #4, #32
 260:	bl	0 <_Znwm>
 264:	ldr	w1, [x19, #56]
 268:	str	x0, [x19, #40]
 26c:	str	xzr, [x19, #48]
 270:	sub	w2, w1, #0x1
 274:	and	w2, w2, w1
 278:	cbz	x25, 5b4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5b4>
 27c:	ubfiz	x21, x21, #4, #32
 280:	add	x26, x25, x21
 284:	cbnz	w2, 77c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x77c>
 288:	ubfiz	x1, x1, #4, #32
 28c:	mov	w2, #0xffffffff            	// #-1
 290:	add	x1, x0, x1
 294:	cmp	x0, x1
 298:	b.eq	2ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2ac>  // b.none
 29c:	nop
 2a0:	str	w2, [x0], #16
 2a4:	cmp	x1, x0
 2a8:	b.ne	2a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2a0>  // b.any
 2ac:	cmp	x25, x26
 2b0:	mov	x23, x25
 2b4:	mov	w24, #0x25                  	// #37
 2b8:	b.ne	2cc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2cc>  // b.any
 2bc:	b	460 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x460>
 2c0:	add	x23, x23, #0x10
 2c4:	cmp	x26, x23
 2c8:	b.eq	460 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x460>  // b.none
 2cc:	ldr	w0, [x23]
 2d0:	cmn	w0, #0x3
 2d4:	b.hi	2c0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2c0>  // b.pmore
 2d8:	ldr	w1, [x19, #56]
 2dc:	stp	x27, x28, [sp, #80]
 2e0:	cbz	w1, 7a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x7a0>
 2e4:	mul	w2, w0, w24
 2e8:	sub	w1, w1, #0x1
 2ec:	ldr	x4, [x19, #40]
 2f0:	and	w3, w2, w1
 2f4:	and	w2, w2, w1
 2f8:	lsl	x3, x3, #4
 2fc:	add	x5, x4, x3
 300:	ldr	w3, [x4, x3]
 304:	cmp	w0, w3
 308:	b.ne	550 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x550>  // b.any
 30c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 310:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 314:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 318:	add	x3, x3, #0x0
 31c:	add	x1, x1, #0x0
 320:	add	x0, x0, #0x0
 324:	mov	w2, #0x17a                 	// #378
 328:	bl	0 <__assert_fail>
 32c:	mov	w2, w1
 330:	lsr	w0, w1, #1
 334:	orr	x0, x0, x2
 338:	mov	w1, #0x40                  	// #64
 33c:	orr	x0, x0, x0, lsr #2
 340:	orr	x0, x0, x0, lsr #4
 344:	orr	x0, x0, x0, lsr #8
 348:	orr	x0, x0, x0, lsr #16
 34c:	add	x0, x0, #0x1
 350:	cmp	w0, w1
 354:	csel	w0, w0, w1, cs  // cs = hs, nlast
 358:	str	w0, [x19, #56]
 35c:	ubfiz	x0, x0, #4, #32
 360:	bl	0 <_Znwm>
 364:	ldr	w1, [x19, #56]
 368:	str	x0, [x19, #40]
 36c:	sub	w2, w1, #0x1
 370:	and	w2, w2, w1
 374:	cbz	x25, 5e4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5e4>
 378:	stp	x27, x28, [sp, #80]
 37c:	ubfiz	x21, x21, #4, #32
 380:	add	x27, x25, x21
 384:	str	xzr, [x19, #48]
 388:	cbnz	w2, 780 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x780>
 38c:	ubfiz	x1, x1, #4, #32
 390:	add	x1, x0, x1
 394:	cmp	x0, x1
 398:	b.eq	3ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3ac>  // b.none
 39c:	nop
 3a0:	str	w24, [x0], #16
 3a4:	cmp	x1, x0
 3a8:	b.ne	3a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3a0>  // b.any
 3ac:	mov	x24, x25
 3b0:	mov	w26, #0x25                  	// #37
 3b4:	b	3c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3c4>
 3b8:	add	x24, x24, #0x10
 3bc:	cmp	x27, x24
 3c0:	b.eq	4cc <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4cc>  // b.none
 3c4:	ldr	w0, [x24]
 3c8:	cmn	w0, #0x3
 3cc:	b.hi	3b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3b8>  // b.pmore
 3d0:	ldr	w1, [x19, #56]
 3d4:	cbz	w1, 7a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x7a0>
 3d8:	mul	w2, w0, w26
 3dc:	sub	w1, w1, #0x1
 3e0:	ldr	x4, [x19, #40]
 3e4:	and	w3, w2, w1
 3e8:	and	w2, w2, w1
 3ec:	lsl	x3, x3, #4
 3f0:	add	x5, x4, x3
 3f4:	ldr	w3, [x4, x3]
 3f8:	cmp	w0, w3
 3fc:	b.eq	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.none
 400:	mov	w7, #0x1                   	// #1
 404:	mov	x6, #0x0                   	// #0
 408:	cmn	w3, #0x1
 40c:	b.ne	688 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x688>  // b.any
 410:	cmp	x6, #0x0
 414:	csel	x6, x6, x5, ne  // ne = any
 418:	ldr	x1, [x24, #8]
 41c:	str	w0, [x6]
 420:	ldr	w0, [x19, #48]
 424:	str	xzr, [x24, #8]
 428:	str	x1, [x6, #8]
 42c:	add	w0, w0, #0x1
 430:	ldr	x28, [x24, #8]
 434:	str	w0, [x19, #48]
 438:	cbz	x28, 3b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3b8>
 43c:	ldr	x0, [x28, #24]
 440:	add	x1, x28, #0x28
 444:	cmp	x0, x1
 448:	b.eq	450 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x450>  // b.none
 44c:	bl	0 <free>
 450:	mov	x0, x28
 454:	mov	x1, #0x68                  	// #104
 458:	bl	0 <_ZdlPvm>
 45c:	b	3b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x3b8>
 460:	mov	x1, x21
 464:	mov	x0, x25
 468:	bl	0 <_ZdlPvm>
 46c:	ldr	w1, [x19, #56]
 470:	ldr	x0, [x19, #40]
 474:	cbz	w1, 52c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x52c>
 478:	cmn	w22, #0x3
 47c:	b.hi	6d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6d0>  // b.pmore
 480:	mov	w2, #0x25                  	// #37
 484:	sub	w1, w1, #0x1
 488:	ldr	w5, [x19, #48]
 48c:	mul	w2, w22, w2
 490:	add	w5, w5, #0x1
 494:	and	w4, w2, w1
 498:	and	w3, w2, w1
 49c:	lsl	x4, x4, #4
 4a0:	add	x2, x0, x4
 4a4:	ldr	w4, [x0, x4]
 4a8:	cmp	w22, w4
 4ac:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 4b0:	mov	w7, #0x1                   	// #1
 4b4:	mov	x6, #0x0                   	// #0
 4b8:	cmn	w4, #0x1
 4bc:	b.ne	714 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x714>  // b.any
 4c0:	cmp	x6, #0x0
 4c4:	csel	x2, x2, x6, eq  // eq = none
 4c8:	b	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>
 4cc:	mov	x1, x21
 4d0:	mov	x0, x25
 4d4:	bl	0 <_ZdlPvm>
 4d8:	ldp	x27, x28, [sp, #80]
 4dc:	ldr	w1, [x19, #56]
 4e0:	ldr	x0, [x19, #40]
 4e4:	cbz	w1, 52c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x52c>
 4e8:	sub	w1, w1, #0x1
 4ec:	ldr	w5, [x19, #48]
 4f0:	and	w3, w23, w1
 4f4:	and	w23, w23, w1
 4f8:	add	w5, w5, #0x1
 4fc:	lsl	x3, x3, #4
 500:	add	x2, x0, x3
 504:	ldr	w3, [x0, x3]
 508:	cmp	w22, w3
 50c:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 510:	mov	w6, #0x1                   	// #1
 514:	mov	x4, #0x0                   	// #0
 518:	cmn	w3, #0x1
 51c:	b.ne	748 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x748>  // b.any
 520:	cmp	x4, #0x0
 524:	csel	x2, x2, x4, eq  // eq = none
 528:	b	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>
 52c:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 530:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 534:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 538:	add	x3, x3, #0x0
 53c:	add	x1, x1, #0x0
 540:	add	x0, x0, #0x0
 544:	mov	w2, #0x22f                 	// #559
 548:	stp	x27, x28, [sp, #80]
 54c:	bl	0 <__assert_fail>
 550:	mov	w7, #0x1                   	// #1
 554:	mov	x6, #0x0                   	// #0
 558:	cmn	w3, #0x1
 55c:	b.ne	64c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x64c>  // b.any
 560:	cmp	x6, #0x0
 564:	csel	x6, x6, x5, ne  // ne = any
 568:	ldr	x1, [x23, #8]
 56c:	str	w0, [x6]
 570:	ldr	w0, [x19, #48]
 574:	str	xzr, [x23, #8]
 578:	str	x1, [x6, #8]
 57c:	add	w0, w0, #0x1
 580:	ldr	x27, [x23, #8]
 584:	str	w0, [x19, #48]
 588:	cbz	x27, 5ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5ac>
 58c:	ldr	x0, [x27, #24]
 590:	add	x1, x27, #0x28
 594:	cmp	x0, x1
 598:	b.eq	5a0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5a0>  // b.none
 59c:	bl	0 <free>
 5a0:	mov	x0, x27
 5a4:	mov	x1, #0x68                  	// #104
 5a8:	bl	0 <_ZdlPvm>
 5ac:	ldp	x27, x28, [sp, #80]
 5b0:	b	2c0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x2c0>
 5b4:	cbnz	w2, 77c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x77c>
 5b8:	ubfiz	x2, x1, #4, #32
 5bc:	add	x2, x0, x2
 5c0:	cmp	x0, x2
 5c4:	b.eq	474 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x474>  // b.none
 5c8:	mov	x1, x0
 5cc:	mov	w3, #0xffffffff            	// #-1
 5d0:	str	w3, [x1], #16
 5d4:	cmp	x2, x1
 5d8:	b.ne	5d0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x5d0>  // b.any
 5dc:	ldr	w1, [x19, #56]
 5e0:	b	474 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x474>
 5e4:	str	xzr, [x19, #48]
 5e8:	cbnz	w2, 77c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x77c>
 5ec:	ubfiz	x2, x1, #4, #32
 5f0:	add	x2, x0, x2
 5f4:	cmp	x0, x2
 5f8:	b.eq	4e4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4e4>  // b.none
 5fc:	mov	x1, x0
 600:	str	w24, [x1], #16
 604:	cmp	x2, x1
 608:	b.ne	600 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x600>  // b.any
 60c:	ldr	w1, [x19, #56]
 610:	b	4e4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4e4>
 614:	add	w4, w0, w4
 618:	cmp	x2, #0x0
 61c:	and	w5, w1, w4
 620:	ccmn	w24, #0x2, #0x0, eq  // eq = none
 624:	csel	x3, x3, x2, eq  // eq = none
 628:	add	w0, w0, #0x1
 62c:	lsl	x2, x5, #4
 630:	and	w4, w1, w4
 634:	add	x5, x25, x2
 638:	ldr	w24, [x25, x2]
 63c:	cmp	w22, w24
 640:	b.ne	6c4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x6c4>  // b.any
 644:	ldr	x0, [x5, #8]
 648:	b	68 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x68>
 64c:	add	w2, w7, w2
 650:	cmp	x6, #0x0
 654:	and	w8, w1, w2
 658:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 65c:	csel	x5, x5, x6, eq  // eq = none
 660:	add	w7, w7, #0x1
 664:	lsl	x3, x8, #4
 668:	and	w2, w1, w2
 66c:	add	x8, x4, x3
 670:	ldr	w3, [x4, x3]
 674:	cmp	w0, w3
 678:	b.eq	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.none
 67c:	mov	x6, x5
 680:	mov	x5, x8
 684:	b	558 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x558>
 688:	add	w2, w2, w7
 68c:	cmp	x6, #0x0
 690:	and	w8, w1, w2
 694:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 698:	csel	x5, x5, x6, eq  // eq = none
 69c:	add	w7, w7, #0x1
 6a0:	lsl	x3, x8, #4
 6a4:	and	w2, w1, w2
 6a8:	add	x8, x4, x3
 6ac:	ldr	w3, [x4, x3]
 6b0:	cmp	w0, w3
 6b4:	b.eq	30c <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x30c>  // b.none
 6b8:	mov	x6, x5
 6bc:	mov	x5, x8
 6c0:	b	408 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x408>
 6c4:	mov	x2, x3
 6c8:	mov	x3, x5
 6cc:	b	1ac <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1ac>
 6d0:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6d4:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6d8:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6dc:	add	x3, x3, #0x0
 6e0:	add	x1, x1, #0x0
 6e4:	add	x0, x0, #0x0
 6e8:	mov	w2, #0x250                 	// #592
 6ec:	stp	x27, x28, [sp, #80]
 6f0:	bl	0 <__assert_fail>
 6f4:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6f8:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 6fc:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 700:	add	x3, x3, #0x0
 704:	add	x1, x1, #0x0
 708:	add	x0, x0, #0x0
 70c:	mov	w2, #0x68                  	// #104
 710:	bl	0 <__assert_fail>
 714:	add	w3, w3, w7
 718:	cmp	x6, #0x0
 71c:	and	w8, w1, w3
 720:	ccmn	w4, #0x2, #0x0, eq  // eq = none
 724:	csel	x6, x6, x2, ne  // ne = any
 728:	add	w7, w7, #0x1
 72c:	lsl	x4, x8, #4
 730:	and	w3, w1, w3
 734:	add	x2, x0, x8, lsl #4
 738:	ldr	w4, [x0, x4]
 73c:	cmp	w22, w4
 740:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 744:	b	4b8 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x4b8>
 748:	add	w23, w23, w6
 74c:	cmp	x4, #0x0
 750:	and	w7, w1, w23
 754:	ccmn	w3, #0x2, #0x0, eq  // eq = none
 758:	csel	x4, x4, x2, ne  // ne = any
 75c:	add	w6, w6, #0x1
 760:	lsl	x3, x7, #4
 764:	and	w23, w1, w23
 768:	add	x2, x0, x7, lsl #4
 76c:	ldr	w3, [x0, x3]
 770:	cmp	w22, w3
 774:	b.eq	1f4 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x1f4>  // b.none
 778:	b	518 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE+0x518>
 77c:	stp	x27, x28, [sp, #80]
 780:	adrp	x3, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 784:	adrp	x1, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 788:	adrp	x0, 0 <_ZN4llvm3mca10LSUnitBase19onInstructionIssuedERKNS0_7InstRefE>
 78c:	add	x3, x3, #0x0
 790:	add	x1, x1, #0x0
 794:	add	x0, x0, #0x0
 798:	mov	w2, #0x15b                 	// #347
 79c:	bl	0 <__assert_fail>
 7a0:	mov	x0, #0x0                   	// #0
 7a4:	str	wzr, [x0]
 7a8:	brk	#0x3e8

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldp	x19, x0, [x0, #8]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	cmp	x19, x0
  20:	b.eq	4c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x4c>  // b.none
  24:	ldr	w2, [x1]
  28:	add	x0, x19, #0x10
  2c:	ldr	x1, [x1, #8]
  30:	str	w2, [x19]
  34:	str	x1, [x19, #8]
  38:	str	x0, [x20, #8]
  3c:	ldp	x19, x20, [sp, #16]
  40:	ldp	x21, x22, [sp, #32]
  44:	ldp	x29, x30, [sp], #80
  48:	ret
  4c:	stp	x23, x24, [sp, #48]
  50:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  54:	ldr	x23, [x20]
  58:	stp	x25, x26, [sp, #64]
  5c:	sub	x24, x19, x23
  60:	asr	x0, x24, #4
  64:	cmp	x1, x24, asr #4
  68:	b.eq	12c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x12c>  // b.none
  6c:	cbz	x0, 124 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x124>
  70:	cmp	x0, x0, lsl #1
  74:	mov	x25, #0x7ffffffffffffff0    	// #9223372036854775792
  78:	lsl	x0, x0, #1
  7c:	b.ls	110 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x110>  // b.plast
  80:	mov	x0, x25
  84:	bl	0 <_Znwm>
  88:	mov	x22, x0
  8c:	add	x25, x0, x25
  90:	add	x26, x0, #0x10
  94:	add	x0, x22, x24
  98:	ldr	w1, [x21]
  9c:	str	w1, [x22, x24]
  a0:	cmp	x19, x23
  a4:	ldr	x1, [x21, #8]
  a8:	str	x1, [x0, #8]
  ac:	b.eq	e4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xe4>  // b.none
  b0:	mov	x2, x22
  b4:	mov	x1, x23
  b8:	ldr	w4, [x1]
  bc:	add	x1, x1, #0x10
  c0:	ldur	x3, [x1, #-8]
  c4:	str	w4, [x2]
  c8:	str	x3, [x2, #8]
  cc:	cmp	x19, x1
  d0:	add	x2, x2, #0x10
  d4:	b.ne	b8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xb8>  // b.any
  d8:	sub	x19, x19, x23
  dc:	add	x19, x19, #0x10
  e0:	add	x26, x22, x19
  e4:	cbz	x23, f0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0xf0>
  e8:	mov	x0, x23
  ec:	bl	0 <_ZdlPv>
  f0:	ldp	x23, x24, [sp, #48]
  f4:	stp	x22, x26, [x20]
  f8:	str	x25, [x20, #16]
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x25, x26, [sp, #64]
 108:	ldp	x29, x30, [sp], #80
 10c:	ret
 110:	cbnz	x0, 138 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x138>
 114:	mov	x26, #0x10                  	// #16
 118:	mov	x25, #0x0                   	// #0
 11c:	mov	x22, #0x0                   	// #0
 120:	b	94 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x94>
 124:	mov	x25, #0x10                  	// #16
 128:	b	80 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x80>
 12c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_>
 130:	add	x0, x0, #0x0
 134:	bl	0 <_ZSt20__throw_length_errorPKc>
 138:	cmp	x0, x1
 13c:	csel	x0, x0, x1, ls  // ls = plast
 140:	lsl	x25, x0, #4
 144:	b	80 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE12emplace_backIJRS2_EEEvDpOT_+0x80>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w4, [x1]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x3, [x1, #-8]
  a4:	str	w4, [x2]
  a8:	str	x3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x28>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>:
   0:	cbz	x1, 74 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x74>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	ldp	x2, x0, [x0]
  1c:	stp	x19, x20, [sp, #16]
  20:	mov	x20, x1
  24:	ldr	x1, [x21, #16]
  28:	sub	x19, x0, x2
  2c:	sub	x1, x1, x0
  30:	asr	x22, x19, #4
  34:	cmp	x20, x1, asr #4
  38:	sub	x2, x3, x22
  3c:	b.hi	78 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x78>  // b.pmore
  40:	mov	x2, x0
  44:	mov	x3, x20
  48:	str	wzr, [x2]
  4c:	subs	x3, x3, #0x1
  50:	str	xzr, [x2, #8]
  54:	add	x2, x2, #0x10
  58:	b.ne	48 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x48>  // b.any
  5c:	add	x20, x0, x20, lsl #4
  60:	str	x20, [x21, #8]
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x21, x22, [sp, #32]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	ret
  78:	stp	x23, x24, [sp, #48]
  7c:	cmp	x2, x20
  80:	b.cc	128 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x128>  // b.lo, b.ul, b.last
  84:	cmp	x22, x20
  88:	csel	x23, x22, x20, cs  // cs = hs, nlast
  8c:	add	x23, x22, x23
  90:	cmp	x23, x3
  94:	csel	x23, x23, x3, ls  // ls = plast
  98:	lsl	x23, x23, #4
  9c:	mov	x0, x23
  a0:	bl	0 <_Znwm>
  a4:	mov	x1, x20
  a8:	mov	x24, x0
  ac:	add	x2, x0, x19
  b0:	str	wzr, [x2]
  b4:	subs	x1, x1, #0x1
  b8:	str	xzr, [x2, #8]
  bc:	add	x2, x2, #0x10
  c0:	b.ne	b0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xb0>  // b.any
  c4:	ldp	x0, x5, [x21]
  c8:	mov	x1, x24
  cc:	mov	x2, x0
  d0:	cmp	x0, x5
  d4:	b.eq	f8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xf8>  // b.none
  d8:	ldr	w4, [x2]
  dc:	add	x2, x2, #0x10
  e0:	ldur	x3, [x2, #-8]
  e4:	str	w4, [x1]
  e8:	str	x3, [x1, #8]
  ec:	cmp	x5, x2
  f0:	add	x1, x1, #0x10
  f4:	b.ne	d8 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0xd8>  // b.any
  f8:	cbz	x0, 100 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm+0x100>
  fc:	bl	0 <_ZdlPv>
 100:	add	x20, x22, x20
 104:	add	x23, x24, x23
 108:	str	x23, [x21, #16]
 10c:	add	x20, x24, x20, lsl #4
 110:	stp	x24, x20, [x21]
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x23, x24, [sp, #48]
 120:	ldp	x29, x30, [sp], #64
 124:	ret
 128:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_default_appendEm>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x23, x24, [sp, #48]
  18:	ldp	x24, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x25, x26, [sp, #64]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x24
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	150 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  34:	mov	x23, x0
  38:	mov	x25, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x24
  44:	cbz	x0, 138 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x138>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x26, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	124 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x124>  // b.plast
  58:	mov	x0, x26
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x26, x0, x26
  68:	add	x21, x0, #0x10
  6c:	add	x0, x22, x27
  70:	ldr	w1, [x25]
  74:	str	w1, [x22, x27]
  78:	cmp	x19, x24
  7c:	ldr	x1, [x25, #8]
  80:	str	x1, [x0, #8]
  84:	b.eq	bc <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xbc>  // b.none
  88:	mov	x3, x22
  8c:	mov	x2, x24
  90:	ldr	w4, [x2]
  94:	add	x2, x2, #0x10
  98:	ldur	x1, [x2, #-8]
  9c:	str	w4, [x3]
  a0:	str	x1, [x3, #8]
  a4:	cmp	x19, x2
  a8:	add	x3, x3, #0x10
  ac:	b.ne	90 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x90>  // b.any
  b0:	sub	x21, x19, x24
  b4:	add	x21, x21, #0x10
  b8:	add	x21, x22, x21
  bc:	cmp	x19, x20
  c0:	b.eq	f4 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf4>  // b.none
  c4:	mov	x2, x19
  c8:	mov	x3, x21
  cc:	nop
  d0:	ldr	x1, [x2, #8]
  d4:	str	x1, [x3, #8]
  d8:	ldr	w1, [x2], #16
  dc:	add	x3, x3, #0x10
  e0:	stur	w1, [x3, #-16]
  e4:	cmp	x2, x20
  e8:	b.ne	d0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>  // b.any
  ec:	sub	x2, x2, x19
  f0:	add	x21, x21, x2
  f4:	cbz	x24, 100 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x100>
  f8:	mov	x0, x24
  fc:	bl	0 <_ZdlPv>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldr	x27, [sp, #80]
 108:	stp	x22, x21, [x23]
 10c:	str	x26, [x23, #16]
 110:	ldp	x21, x22, [sp, #32]
 114:	ldp	x23, x24, [sp, #48]
 118:	ldp	x25, x26, [sp, #64]
 11c:	ldp	x29, x30, [sp], #96
 120:	ret
 124:	cbnz	x0, 140 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>
 128:	mov	x21, #0x10                  	// #16
 12c:	mov	x26, #0x0                   	// #0
 130:	mov	x22, #0x0                   	// #0
 134:	b	6c <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x6c>
 138:	mov	x26, #0x10                  	// #16
 13c:	b	58 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 140:	cmp	x0, x3
 144:	csel	x0, x0, x3, ls  // ls = plast
 148:	lsl	x26, x0, #4
 14c:	b	58 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x58>
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm3mca7InstRefESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag>:
   0:	mov	x2, x0
   4:	sub	x0, x1, x0
   8:	mov	x3, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
   c:	asr	x0, x0, #3
  10:	movk	x3, #0xf0f1
  14:	mul	x0, x0, x3
  18:	cmp	xzr, x0, asr #2
  1c:	asr	x4, x0, #2
  20:	b.ge	a8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xa8>  // b.tcont
  24:	add	x4, x4, x4, lsl #4
  28:	add	x4, x2, x4, lsl #5
  2c:	b	78 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x78>
  30:	ldr	x3, [x2, #168]
  34:	ldr	w0, [x2, #200]
  38:	cmp	x3, #0x0
  3c:	cinc	w0, w0, ne  // ne = any
  40:	cbnz	w0, 11c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x11c>
  44:	ldr	x3, [x2, #304]
  48:	ldr	w0, [x2, #336]
  4c:	cmp	x3, #0x0
  50:	cinc	w0, w0, ne  // ne = any
  54:	cbnz	w0, 124 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x124>
  58:	ldr	x3, [x2, #440]
  5c:	ldr	w0, [x2, #472]
  60:	cmp	x3, #0x0
  64:	cinc	w0, w0, ne  // ne = any
  68:	cbnz	w0, 12c <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x12c>
  6c:	add	x2, x2, #0x220
  70:	cmp	x2, x4
  74:	b.eq	94 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x94>  // b.none
  78:	ldr	x3, [x2, #32]
  7c:	ldr	w0, [x2, #64]
  80:	cmp	x3, #0x0
  84:	cinc	w0, w0, ne  // ne = any
  88:	cbz	w0, 30 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x30>
  8c:	mov	x0, x2
  90:	ret
  94:	sub	x0, x1, x2
  98:	mov	x3, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  9c:	movk	x3, #0xf0f1
  a0:	asr	x0, x0, #3
  a4:	mul	x0, x0, x3
  a8:	cmp	x0, #0x2
  ac:	b.eq	e4 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xe4>  // b.none
  b0:	cmp	x0, #0x3
  b4:	b.eq	c8 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0xc8>  // b.none
  b8:	cmp	x0, #0x1
  bc:	b.eq	100 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x100>  // b.none
  c0:	mov	x0, x1
  c4:	ret
  c8:	ldr	x4, [x2, #32]
  cc:	mov	x0, x2
  d0:	ldr	w3, [x2, #64]
  d4:	cmp	x4, #0x0
  d8:	cinc	w3, w3, ne  // ne = any
  dc:	cbnz	w3, 90 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x90>
  e0:	add	x2, x2, #0x88
  e4:	ldr	x4, [x2, #32]
  e8:	mov	x0, x2
  ec:	ldr	w3, [x2, #64]
  f0:	cmp	x4, #0x0
  f4:	cinc	w3, w3, ne  // ne = any
  f8:	cbnz	w3, 90 <_ZSt9__find_ifIPKN4llvm3mca10WriteStateEN9__gnu_cxx5__ops10_Iter_predIZNKS1_15InstructionBase17hasDependentUsersEvEUlRS3_E_EEET_SC_SC_T0_St26random_access_iterator_tag+0x90>
  fc:	add	x2, x2, #0x88
 100:	ldr	x3, [x2, #32]
 104:	ldr	w0, [x2, #64]
 108:	cmp	x3, #0x0
 10c:	cinc	w0, w0, ne  // ne = any
 110:	cmp	w0, #0x0
 114:	csel	x0, x1, x2, eq  // eq = none
 118:	ret
 11c:	add	x0, x2, #0x88
 120:	ret
 124:	add	x0, x2, #0x110
 128:	ret
 12c:	add	x0, x2, #0x198
 130:	ret

InstrBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x2d                  	// #45
      24:	bl	0 <__assert_fail>

0000000000000028 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>:
      28:	sub	x15, x2, #0x1
      2c:	sub	sp, sp, #0x20
      30:	and	x16, x2, #0x1
      34:	add	x15, x15, x15, lsr #63
      38:	ldr	x13, [x3]
      3c:	cmp	x1, x15, asr #1
      40:	b.ge	180 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x158>  // b.tcont
      44:	asr	x15, x15, #1
      48:	mov	x6, x1
      4c:	nop
      50:	add	x5, x6, #0x1
      54:	add	x11, x6, x6, lsl #1
      58:	lsl	x9, x5, #1
      5c:	add	x14, x0, x11, lsl #3
      60:	sub	x4, x9, #0x1
      64:	add	x5, x9, x5, lsl #2
      68:	add	x6, x4, x4, lsl #1
      6c:	add	x12, x0, x5, lsl #3
      70:	ldr	x10, [x0, x5, lsl #3]
      74:	fmov	d0, x10
      78:	ldr	x5, [x0, x6, lsl #3]
      7c:	fmov	d1, x5
      80:	cnt	v0.8b, v0.8b
      84:	add	x8, x0, x6, lsl #3
      88:	cnt	v1.8b, v1.8b
      8c:	addv	b0, v0.8b
      90:	addv	b1, v1.8b
      94:	umov	w6, v0.b[0]
      98:	umov	w7, v1.b[0]
      9c:	cmp	w7, w6
      a0:	b.hi	bc <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x94>  // b.pmore
      a4:	ccmp	x5, x10, #0x0, eq  // eq = none
      a8:	cset	w6, hi  // hi = pmore
      ac:	csel	x5, x5, x10, hi  // hi = pmore
      b0:	cmp	w6, #0x0
      b4:	csel	x8, x8, x12, ne  // ne = any
      b8:	csel	x4, x4, x9, ne  // ne = any
      bc:	str	x5, [x0, x11, lsl #3]
      c0:	mov	x6, x4
      c4:	ldp	x10, x11, [x8, #8]
      c8:	stp	x10, x11, [x14, #8]
      cc:	cmp	x15, x4
      d0:	b.gt	50 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x28>
      d4:	cbz	x16, 190 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x168>
      d8:	sub	x2, x4, #0x1
      dc:	cmp	x4, x1
      e0:	ldp	x6, x7, [x3]
      e4:	add	x2, x2, x2, lsr #63
      e8:	ldr	x5, [x3, #16]
      ec:	stp	x6, x7, [sp, #8]
      f0:	asr	x3, x2, #1
      f4:	str	x5, [sp, #24]
      f8:	b.le	16c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x144>
      fc:	fmov	d0, x13
     100:	cnt	v0.8b, v0.8b
     104:	addv	b0, v0.8b
     108:	umov	w6, v0.b[0]
     10c:	add	x5, x3, x3, lsl #1
     110:	sub	x2, x3, #0x1
     114:	add	x7, x4, x4, lsl #1
     118:	add	x8, x0, x5, lsl #3
     11c:	add	x2, x2, x2, lsr #63
     120:	ldr	d1, [x0, x5, lsl #3]
     124:	add	x9, x0, x7, lsl #3
     128:	asr	x2, x2, #1
     12c:	cnt	v0.8b, v1.8b
     130:	addv	b0, v0.8b
     134:	umov	w5, v0.b[0]
     138:	cmp	w5, w6
     13c:	b.cc	150 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x128>  // b.lo, b.ul, b.last
     140:	fmov	x10, d1
     144:	cmp	x10, x13
     148:	ccmp	w5, w6, #0x0, cc  // cc = lo, ul, last
     14c:	b.ne	1cc <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x1a4>  // b.any
     150:	str	d1, [x0, x7, lsl #3]
     154:	cmp	x1, x3
     158:	ldp	x4, x5, [x8, #8]
     15c:	stp	x4, x5, [x9, #8]
     160:	mov	x4, x3
     164:	mov	x3, x2
     168:	b.lt	10c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xe4>  // b.tstop
     16c:	ldp	x0, x1, [sp, #16]
     170:	str	x13, [x8]
     174:	stp	x0, x1, [x8, #8]
     178:	add	sp, sp, #0x20
     17c:	ret
     180:	add	x8, x1, x1, lsl #1
     184:	mov	x4, x1
     188:	add	x8, x0, x8, lsl #3
     18c:	cbnz	x16, 1e4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x1bc>
     190:	sub	x2, x2, #0x2
     194:	add	x2, x2, x2, lsr #63
     198:	cmp	x4, x2, asr #1
     19c:	b.ne	d8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xb0>  // b.any
     1a0:	lsl	x4, x4, #1
     1a4:	add	x4, x4, #0x1
     1a8:	add	x2, x4, x4, lsl #1
     1ac:	lsl	x2, x2, #3
     1b0:	add	x5, x0, x2
     1b4:	ldr	x2, [x0, x2]
     1b8:	ldp	x6, x7, [x5, #8]
     1bc:	str	x2, [x8]
     1c0:	stp	x6, x7, [x8, #8]
     1c4:	mov	x8, x5
     1c8:	b	d8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0xb0>
     1cc:	mov	x8, x9
     1d0:	ldp	x0, x1, [sp, #16]
     1d4:	str	x13, [x8]
     1d8:	stp	x0, x1, [x8, #8]
     1dc:	add	sp, sp, #0x20
     1e0:	ret
     1e4:	ldp	x0, x1, [x3]
     1e8:	stp	x0, x1, [sp, #8]
     1ec:	ldr	x0, [x3, #16]
     1f0:	str	x0, [sp, #24]
     1f4:	b	16c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0+0x144>

00000000000001f8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>:
     1f8:	stp	x29, x30, [sp, #-144]!
     1fc:	mov	x29, sp
     200:	stp	x19, x20, [sp, #16]
     204:	mov	x19, x0
     208:	sub	x0, x1, x0
     20c:	cmp	x0, #0x180
     210:	b.le	568 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x370>
     214:	stp	x21, x22, [sp, #32]
     218:	stp	x23, x24, [sp, #48]
     21c:	stp	x25, x26, [sp, #64]
     220:	mov	x25, x2
     224:	cbz	x2, 484 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x28c>
     228:	mov	x22, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     22c:	mov	x7, x1
     230:	mov	w26, w3
     234:	add	x23, x19, #0x18
     238:	add	x21, x19, #0x8
     23c:	movk	x22, #0xaaab
     240:	sub	x4, x7, x19
     244:	ldrb	w9, [x19, #16]
     248:	ldr	x8, [x19, #24]
     24c:	asr	x4, x4, #3
     250:	fmov	d0, x8
     254:	ldr	w12, [x19, #20]
     258:	ldur	d2, [x7, #-24]
     25c:	mul	x4, x4, x22
     260:	cnt	v0.8b, v0.8b
     264:	sub	x25, x25, #0x1
     268:	ldp	w10, w11, [x19, #8]
     26c:	add	x4, x4, x4, lsr #63
     270:	and	x0, x4, #0xfffffffffffffffe
     274:	cnt	v1.8b, v2.8b
     278:	add	x4, x0, x4, asr #1
     27c:	addv	b0, v0.8b
     280:	ldr	x13, [x19]
     284:	add	x3, x19, x4, lsl #3
     288:	ldr	x2, [x19, x4, lsl #3]
     28c:	umov	w5, v0.b[0]
     290:	fmov	d0, x2
     294:	addv	b1, v1.8b
     298:	cnt	v0.8b, v0.8b
     29c:	umov	w1, v1.b[0]
     2a0:	mov	w0, w5
     2a4:	addv	b0, v0.8b
     2a8:	umov	w6, v0.b[0]
     2ac:	cmp	w5, w6
     2b0:	b.cc	320 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x128>  // b.lo, b.ul, b.last
     2b4:	cmp	x8, x2
     2b8:	ccmp	w5, w6, #0x0, cc  // cc = lo, ul, last
     2bc:	b.eq	320 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x128>  // b.none
     2c0:	cmp	w5, w1
     2c4:	b.cc	464 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x26c>  // b.lo, b.ul, b.last
     2c8:	fmov	x14, d2
     2cc:	cmp	x8, x14
     2d0:	ccmp	w5, w1, #0x0, cc  // cc = lo, ul, last
     2d4:	b.eq	464 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x26c>  // b.none
     2d8:	cmp	w6, w1
     2dc:	b.cc	34c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x154>  // b.lo, b.ul, b.last
     2e0:	cmp	x2, x14
     2e4:	ccmp	w6, w1, #0x0, cc  // cc = lo, ul, last
     2e8:	b.eq	34c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x154>  // b.none
     2ec:	ldp	x0, x1, [x3, #8]
     2f0:	str	x2, [x19]
     2f4:	str	x13, [x19, x4, lsl #3]
     2f8:	stp	x0, x1, [x21]
     2fc:	ldr	x8, [x19]
     300:	fmov	d0, x8
     304:	stp	w10, w11, [x3, #8]
     308:	cnt	v0.8b, v0.8b
     30c:	strb	w9, [x3, #16]
     310:	str	w12, [x3, #20]
     314:	addv	b0, v0.8b
     318:	umov	w0, v0.b[0]
     31c:	b	37c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x184>
     320:	cmp	w6, w1
     324:	b.cc	2ec <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0xf4>  // b.lo, b.ul, b.last
     328:	fmov	x14, d2
     32c:	cmp	x2, x14
     330:	ccmp	w6, w1, #0x0, cc  // cc = lo, ul, last
     334:	b.eq	2ec <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0xf4>  // b.none
     338:	cmp	w5, w1
     33c:	b.cc	34c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x154>  // b.lo, b.ul, b.last
     340:	cmp	x8, x14
     344:	ccmp	w5, w1, #0x0, cc  // cc = lo, ul, last
     348:	b.ne	464 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x26c>  // b.any
     34c:	ldp	x0, x1, [x7, #-16]
     350:	str	d2, [x19]
     354:	stur	x13, [x7, #-24]
     358:	stp	x0, x1, [x21]
     35c:	ldr	x8, [x19]
     360:	fmov	d0, x8
     364:	stp	w10, w11, [x7, #-16]
     368:	cnt	v0.8b, v0.8b
     36c:	sturb	w9, [x7, #-8]
     370:	stur	w12, [x7, #-4]
     374:	addv	b0, v0.8b
     378:	umov	w0, v0.b[0]
     37c:	mov	x20, x23
     380:	mov	x4, x7
     384:	nop
     388:	ldr	x1, [x20]
     38c:	fmov	d0, x1
     390:	mov	x24, x20
     394:	cnt	v0.8b, v0.8b
     398:	addv	b0, v0.8b
     39c:	umov	w5, v0.b[0]
     3a0:	cmp	w5, w0
     3a4:	b.cc	430 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x238>  // b.lo, b.ul, b.last
     3a8:	cmp	x1, x8
     3ac:	ccmp	w5, w0, #0x0, cc  // cc = lo, ul, last
     3b0:	b.eq	430 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x238>  // b.none
     3b4:	sub	x6, x4, #0x18
     3b8:	ldr	x2, [x6]
     3bc:	fmov	d0, x2
     3c0:	mov	x4, x6
     3c4:	cnt	v0.8b, v0.8b
     3c8:	addv	b0, v0.8b
     3cc:	umov	w5, v0.b[0]
     3d0:	cmp	w0, w5
     3d4:	b.cc	3e4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1ec>  // b.lo, b.ul, b.last
     3d8:	cmp	x2, x8
     3dc:	ccmp	w0, w5, #0x0, hi  // hi = pmore
     3e0:	b.ne	3ec <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1f4>  // b.any
     3e4:	sub	x6, x6, #0x18
     3e8:	b	3b8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x1c0>
     3ec:	cmp	x20, x6
     3f0:	b.cs	438 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x240>  // b.hs, b.nlast
     3f4:	str	x2, [x20]
     3f8:	ldrb	w3, [x20, #16]
     3fc:	ldp	w6, w5, [x20, #8]
     400:	ldr	w2, [x20, #20]
     404:	str	x1, [x4]
     408:	ldp	x0, x1, [x4, #8]
     40c:	ldr	x8, [x19]
     410:	fmov	d0, x8
     414:	stp	x0, x1, [x20, #8]
     418:	cnt	v0.8b, v0.8b
     41c:	stp	w6, w5, [x4, #8]
     420:	strb	w3, [x4, #16]
     424:	str	w2, [x4, #20]
     428:	addv	b0, v0.8b
     42c:	umov	w0, v0.b[0]
     430:	add	x20, x20, #0x18
     434:	b	388 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x190>
     438:	mov	x0, x20
     43c:	mov	x1, x7
     440:	mov	w3, w26
     444:	mov	x2, x25
     448:	bl	1f8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>
     44c:	sub	x0, x20, x19
     450:	cmp	x0, #0x180
     454:	b.le	55c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x364>
     458:	cbz	x25, 48c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x294>
     45c:	mov	x7, x20
     460:	b	240 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x48>
     464:	str	x8, [x19]
     468:	str	x13, [x19, #24]
     46c:	ldp	x2, x3, [x19, #32]
     470:	stp	x2, x3, [x21]
     474:	stp	w10, w11, [x19, #32]
     478:	strb	w9, [x19, #40]
     47c:	str	w12, [x19, #44]
     480:	b	37c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x184>
     484:	mov	x24, x1
     488:	add	x21, x19, #0x8
     48c:	asr	x0, x0, #3
     490:	mov	x18, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     494:	movk	x18, #0xaaab
     498:	add	x23, sp, #0x78
     49c:	add	x20, sp, #0x50
     4a0:	mul	x18, x0, x18
     4a4:	sub	x25, x18, #0x2
     4a8:	and	x22, x25, #0xfffffffffffffffe
     4ac:	asr	x25, x25, #1
     4b0:	add	x22, x22, x25
     4b4:	add	x22, x19, x22, lsl #3
     4b8:	b	4c0 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x2c8>
     4bc:	sub	x25, x25, #0x1
     4c0:	ldp	x6, x7, [x22]
     4c4:	stp	x6, x7, [x23]
     4c8:	mov	x3, x20
     4cc:	ldr	x4, [x22, #16]
     4d0:	stp	x6, x7, [x20]
     4d4:	mov	x2, x18
     4d8:	str	x4, [x23, #16]
     4dc:	mov	x1, x25
     4e0:	str	x4, [x20, #16]
     4e4:	mov	x0, x19
     4e8:	sub	x22, x22, #0x18
     4ec:	bl	28 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>
     4f0:	cbnz	x25, 4bc <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x2c4>
     4f4:	sub	x18, x24, #0x18
     4f8:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     4fc:	sub	x24, x24, #0x10
     500:	movk	x25, #0xaaab
     504:	nop
     508:	sub	x22, x18, x19
     50c:	sub	x18, x18, #0x18
     510:	ldr	x0, [x19]
     514:	asr	x2, x22, #3
     518:	ldp	x4, x5, [x21]
     51c:	mov	x3, x20
     520:	ldp	x8, x9, [x18, #24]
     524:	str	x0, [x18, #24]
     528:	stp	x8, x9, [x23]
     52c:	mul	x2, x2, x25
     530:	mov	x0, x19
     534:	ldr	x6, [x18, #40]
     538:	stp	x4, x5, [x24]
     53c:	mov	x1, #0x0                   	// #0
     540:	stp	x8, x9, [x20]
     544:	sub	x24, x24, #0x18
     548:	str	x6, [x23, #16]
     54c:	str	x6, [x20, #16]
     550:	bl	28 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElS6_NS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_T0_ST_T1_T2_.isra.0>
     554:	cmp	x22, #0x18
     558:	b.gt	508 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_+0x310>
     55c:	ldp	x21, x22, [sp, #32]
     560:	ldp	x23, x24, [sp, #48]
     564:	ldp	x25, x26, [sp, #64]
     568:	ldp	x19, x20, [sp, #16]
     56c:	ldp	x29, x30, [sp], #144
     570:	ret
     574:	nop

0000000000000578 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>:
     578:	cmp	x0, x1
     57c:	b.eq	6d4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x15c>  // b.none
     580:	add	x3, x0, #0x18
     584:	cmp	x1, x3
     588:	b.eq	6d4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x15c>  // b.none
     58c:	sub	sp, sp, #0x20
     590:	add	x12, x0, #0x8
     594:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     598:	mov	x7, x12
     59c:	mov	x5, x0
     5a0:	add	x6, x0, #0x20
     5a4:	add	x11, sp, #0x8
     5a8:	movk	x13, #0xaaab
     5ac:	nop
     5b0:	ldr	d2, [x0]
     5b4:	ldr	x14, [x3]
     5b8:	fmov	d0, x14
     5bc:	cnt	v1.8b, v2.8b
     5c0:	cnt	v0.8b, v0.8b
     5c4:	addv	b1, v1.8b
     5c8:	addv	b0, v0.8b
     5cc:	umov	w4, v1.b[0]
     5d0:	umov	w2, v0.b[0]
     5d4:	mov	w16, w2
     5d8:	cmp	w2, w4
     5dc:	b.cc	674 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xfc>  // b.lo, b.ul, b.last
     5e0:	fmov	x2, d2
     5e4:	ccmp	x14, x2, #0x2, eq  // eq = none
     5e8:	b.cc	674 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xfc>  // b.lo, b.ul, b.last
     5ec:	ldp	x8, x9, [x3]
     5f0:	mov	x2, #0x0                   	// #0
     5f4:	ldr	x4, [x3, #16]
     5f8:	stp	x8, x9, [x11]
     5fc:	str	x4, [x11, #16]
     600:	ldr	d1, [x5, x2]
     604:	add	x8, x7, x2
     608:	add	x10, x6, x2
     60c:	add	x15, x3, x2
     610:	cnt	v0.8b, v1.8b
     614:	addv	b0, v0.8b
     618:	umov	w4, v0.b[0]
     61c:	cmp	w16, w4
     620:	b.cc	630 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xb8>  // b.lo, b.ul, b.last
     624:	fmov	x4, d1
     628:	ccmp	x14, x4, #0x2, eq  // eq = none
     62c:	b.cs	644 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xcc>  // b.hs, b.nlast
     630:	str	d1, [x3, x2]
     634:	sub	x2, x2, #0x18
     638:	ldp	x8, x9, [x8]
     63c:	stp	x8, x9, [x10]
     640:	b	600 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x88>
     644:	add	x16, x5, #0x30
     648:	str	x14, [x15]
     64c:	ldp	x8, x9, [sp, #16]
     650:	stp	x8, x9, [x15, #8]
     654:	add	x3, x3, #0x18
     658:	add	x5, x5, #0x18
     65c:	add	x7, x7, #0x18
     660:	add	x6, x6, #0x18
     664:	cmp	x1, x16
     668:	b.ne	5b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x38>  // b.any
     66c:	add	sp, sp, #0x20
     670:	ret
     674:	sub	x2, x3, x0
     678:	add	x16, x5, #0x30
     67c:	ldp	x8, x9, [x3]
     680:	asr	x4, x2, #3
     684:	ldr	x10, [x3, #16]
     688:	stp	x8, x9, [x11]
     68c:	cmp	x2, #0x0
     690:	str	x10, [x11, #16]
     694:	mul	x4, x4, x13
     698:	mov	x2, #0x0                   	// #0
     69c:	b.le	6c4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x14c>
     6a0:	add	x8, x7, x2
     6a4:	add	x10, x6, x2
     6a8:	ldr	x9, [x5, x2]
     6ac:	str	x9, [x3, x2]
     6b0:	ldp	x8, x9, [x8]
     6b4:	stp	x8, x9, [x10]
     6b8:	subs	x4, x4, #0x1
     6bc:	sub	x2, x2, #0x18
     6c0:	b.ne	6a0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0x128>  // b.any
     6c4:	str	x14, [x0]
     6c8:	ldp	x8, x9, [sp, #16]
     6cc:	stp	x8, x9, [x12]
     6d0:	b	654 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0+0xdc>
     6d4:	ret

00000000000006d8 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE>:
     6d8:	stp	x29, x30, [sp, #-64]!
     6dc:	mov	w5, #0x101                 	// #257
     6e0:	mov	x29, sp
     6e4:	stp	x19, x20, [sp, #16]
     6e8:	mov	x19, x0
     6ec:	add	x20, x0, #0x30
     6f0:	stp	x21, x22, [sp, #32]
     6f4:	mov	x0, #0x800000000           	// #34359738368
     6f8:	stp	x20, x0, [x19, #32]
     6fc:	ldr	x0, [x1, #152]
     700:	str	xzr, [x19, #128]
     704:	str	wzr, [x19, #136]
     708:	str	xzr, [x19, #160]
     70c:	str	wzr, [x19, #168]
     710:	str	x1, [x19]
     714:	ldr	w21, [x0, #48]
     718:	stp	x2, x3, [x19, #8]
     71c:	mov	w22, w21
     720:	str	x4, [x19, #24]
     724:	stp	xzr, xzr, [x19, #112]
     728:	stp	xzr, xzr, [x19, #144]
     72c:	strh	w5, [x19, #176]
     730:	cbz	w21, 770 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x98>
     734:	str	x23, [sp, #48]
     738:	cmp	x22, #0x8
     73c:	b.hi	788 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xb0>  // b.pmore
     740:	add	x2, x20, x22, lsl #3
     744:	mov	x0, x20
     748:	mov	x23, #0x8                   	// #8
     74c:	sub	x2, x2, x0
     750:	mov	w1, #0x0                   	// #0
     754:	bl	0 <memset>
     758:	cmp	x22, x23
     75c:	b.hi	7b8 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0xe0>  // b.pmore
     760:	ldr	x0, [x19]
     764:	ldr	x23, [sp, #48]
     768:	ldr	x0, [x0, #152]
     76c:	str	w21, [x19, #40]
     770:	mov	x1, x20
     774:	mov	x2, x22
     778:	ldp	x19, x20, [sp, #16]
     77c:	ldp	x21, x22, [sp, #32]
     780:	ldp	x29, x30, [sp], #64
     784:	b	0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>
     788:	mov	x1, x20
     78c:	mov	x2, x22
     790:	add	x0, x19, #0x20
     794:	mov	x3, #0x8                   	// #8
     798:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     79c:	ldp	w0, w23, [x19, #40]
     7a0:	ldr	x20, [x19, #32]
     7a4:	add	x0, x20, x0, lsl #3
     7a8:	add	x2, x20, x22, lsl #3
     7ac:	cmp	x0, x2
     7b0:	b.ne	74c <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x74>  // b.any
     7b4:	b	758 <_ZN4llvm3mca12InstrBuilderC1ERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoERKNS_14MCRegisterInfoEPKNS_15MCInstrAnalysisE+0x80>
     7b8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     7bc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     7c0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     7c4:	add	x3, x3, #0x0
     7c8:	add	x1, x1, #0x0
     7cc:	add	x0, x0, #0x0
     7d0:	mov	w2, #0x43                  	// #67
     7d4:	bl	0 <__assert_fail>

00000000000007d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>:
     7d8:	stp	x29, x30, [sp, #-144]!
     7dc:	mov	x29, sp
     7e0:	stp	x25, x26, [sp, #64]
     7e4:	mov	x25, x1
     7e8:	ldr	x1, [x0, #8]
     7ec:	stp	x19, x20, [sp, #16]
     7f0:	mov	x19, x2
     7f4:	stp	x21, x22, [sp, #32]
     7f8:	stp	x23, x24, [sp, #48]
     7fc:	stp	x27, x28, [sp, #80]
     800:	str	x0, [sp, #96]
     804:	ldr	w0, [x2]
     808:	ldr	w2, [x1, #24]
     80c:	ldr	x22, [x1]
     810:	cmp	w0, w2
     814:	b.cs	14d4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xcfc>  // b.hs, b.nlast
     818:	ldr	x1, [sp, #96]
     81c:	ubfiz	x0, x0, #6, #32
     820:	add	x22, x22, x0
     824:	ldr	x1, [x1]
     828:	ldr	x0, [x1, #152]
     82c:	ldr	x20, [x0, #40]
     830:	cbz	x20, 14b4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xcdc>
     834:	ldr	w0, [x0, #52]
     838:	cmp	w3, w0
     83c:	b.cs	14d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd00>  // b.hs, b.nlast
     840:	ldr	x1, [x22, #32]
     844:	mov	w0, #0x18                  	// #24
     848:	ldrb	w27, [x22, #4]
     84c:	umaddl	x20, w3, w0, x20
     850:	cbz	x1, 1244 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa6c>
     854:	ldrh	w0, [x1]
     858:	cbz	w0, 1244 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa6c>
     85c:	mov	w4, #0x0                   	// #0
     860:	add	w4, w4, #0x1
     864:	ldrh	w0, [x1, w4, uxtw #1]
     868:	cbnz	w0, 860 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x88>
     86c:	add	w0, w27, w4
     870:	str	w0, [sp, #136]
     874:	ldr	x0, [x22, #8]
     878:	ldrh	w1, [x22, #2]
     87c:	ldr	w3, [sp, #136]
     880:	ldr	w6, [x19, #24]
     884:	ubfx	w0, w0, #2, #1
     888:	ldr	w2, [x25, #8]
     88c:	add	w0, w3, w0
     890:	sub	w3, w6, w1
     894:	str	w3, [sp, #140]
     898:	add	w26, w0, w3
     89c:	mov	w1, w2
     8a0:	ldrh	w21, [x20, #16]
     8a4:	add	w24, w0, w3
     8a8:	cmp	x26, x1
     8ac:	b.cs	108c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8b4>  // b.hs, b.nlast
     8b0:	ldr	w0, [x25, #12]
     8b4:	cmp	x26, x0
     8b8:	b.hi	1518 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd40>  // b.pmore
     8bc:	str	w24, [x25, #8]
     8c0:	ldr	w6, [x19, #24]
     8c4:	cmp	w27, #0x0
     8c8:	ccmp	w6, #0x0, #0x4, ne  // ne = any
     8cc:	b.eq	adc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x304>  // b.none
     8d0:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     8d4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     8d8:	mov	w28, #0x0                   	// #0
     8dc:	add	x0, x0, #0x0
     8e0:	ldr	x23, [x23]
     8e4:	mov	w26, #0x0                   	// #0
     8e8:	str	x0, [sp, #128]
     8ec:	b	954 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x17c>
     8f0:	ldrh	w1, [x20, #16]
     8f4:	ldrh	w0, [x20, #14]
     8f8:	cmp	w1, w26
     8fc:	ldr	x1, [sp, #96]
     900:	ldr	x1, [x1]
     904:	b.ls	1474 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc9c>  // b.plast
     908:	add	w0, w0, w26
     90c:	ldr	x1, [x1, #136]
     910:	lsl	x0, x0, #2
     914:	add	x2, x1, x0
     918:	ldrsh	w0, [x1, x0]
     91c:	tbz	w0, #31, 924 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x14c>
     920:	ldr	w0, [x25, #312]
     924:	ldrh	w1, [x2, #2]
     928:	str	w0, [x24, #4]
     92c:	ldrb	w0, [x23]
     930:	str	w1, [x24, #12]
     934:	strb	wzr, [x24, #16]
     938:	cbnz	w0, 9a8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x1d0>
     93c:	ldr	w6, [x19, #24]
     940:	add	w26, w26, #0x1
     944:	add	w28, w28, #0x1
     948:	cmp	w26, w27
     94c:	ccmp	w28, w6, #0x2, cc  // cc = lo, ul, last
     950:	b.cs	ae0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x308>  // b.hs, b.nlast
     954:	ldr	x1, [x19, #16]
     958:	ubfiz	x0, x28, #4, #32
     95c:	ldrb	w0, [x1, x0]
     960:	cmp	w0, #0x1
     964:	b.ne	944 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x16c>  // b.any
     968:	ldr	w0, [x25, #8]
     96c:	cmp	x0, w26, uxtw
     970:	b.ls	13d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     974:	mov	w0, #0x14                  	// #20
     978:	cmp	w21, w26
     97c:	ldr	x9, [x25]
     980:	umull	x8, w26, w0
     984:	add	x24, x9, x8
     988:	str	w28, [x9, x8]
     98c:	b.hi	8f0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x118>  // b.pmore
     990:	ldr	w0, [x25, #312]
     994:	str	w0, [x24, #4]
     998:	ldrb	w0, [x23]
     99c:	str	wzr, [x24, #12]
     9a0:	strb	wzr, [x24, #16]
     9a4:	cbz	w0, 93c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>
     9a8:	ldr	x0, [sp, #128]
     9ac:	str	w4, [sp, #104]
     9b0:	stp	x8, x9, [sp, #112]
     9b4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     9b8:	tst	w0, #0xff
     9bc:	ldr	w4, [sp, #104]
     9c0:	b.eq	93c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>  // b.none
     9c4:	str	w4, [sp, #104]
     9c8:	bl	0 <_ZN4llvm4dbgsEv>
     9cc:	ldp	x1, x12, [x0, #16]
     9d0:	mov	x2, x0
     9d4:	ldr	w4, [sp, #104]
     9d8:	ldp	x8, x9, [sp, #112]
     9dc:	sub	x1, x1, x12
     9e0:	cmp	x1, #0x10
     9e4:	b.ls	1198 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9c0>  // b.plast
     9e8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     9ec:	add	x0, x0, #0x0
     9f0:	ldp	x10, x11, [x0]
     9f4:	stp	x10, x11, [x12]
     9f8:	ldrb	w0, [x0, #16]
     9fc:	strb	w0, [x12, #16]
     a00:	ldr	x0, [x2, #24]
     a04:	add	x0, x0, #0x11
     a08:	str	x0, [x2, #24]
     a0c:	ldrsw	x1, [x9, x8]
     a10:	mov	x0, x2
     a14:	str	w4, [sp, #104]
     a18:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     a1c:	mov	x2, x0
     a20:	ldp	x1, x8, [x0, #16]
     a24:	ldr	w4, [sp, #104]
     a28:	sub	x1, x1, x8
     a2c:	cmp	x1, #0x9
     a30:	b.ls	1178 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9a0>  // b.plast
     a34:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     a38:	add	x0, x0, #0x0
     a3c:	ldr	x1, [x0]
     a40:	str	x1, [x8]
     a44:	ldrh	w0, [x0, #8]
     a48:	strh	w0, [x8, #8]
     a4c:	ldr	x0, [x2, #24]
     a50:	add	x0, x0, #0xa
     a54:	str	x0, [x2, #24]
     a58:	ldr	w1, [x24, #4]
     a5c:	mov	x0, x2
     a60:	str	w4, [sp, #104]
     a64:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a68:	mov	x2, x0
     a6c:	ldp	x1, x10, [x0, #16]
     a70:	ldr	w4, [sp, #104]
     a74:	sub	x1, x1, x10
     a78:	cmp	x1, #0x11
     a7c:	b.ls	1158 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x980>  // b.plast
     a80:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     a84:	add	x0, x0, #0x0
     a88:	ldp	x8, x9, [x0]
     a8c:	stp	x8, x9, [x10]
     a90:	ldrh	w0, [x0, #16]
     a94:	strh	w0, [x10, #16]
     a98:	ldr	x0, [x2, #24]
     a9c:	add	x0, x0, #0x12
     aa0:	str	x0, [x2, #24]
     aa4:	ldr	w1, [x24, #12]
     aa8:	mov	x0, x2
     aac:	str	w4, [sp, #104]
     ab0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ab4:	mov	x1, x0
     ab8:	ldp	x6, x2, [x0, #16]
     abc:	ldr	w4, [sp, #104]
     ac0:	cmp	x2, x6
     ac4:	b.cs	1144 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x96c>  // b.hs, b.nlast
     ac8:	add	x0, x2, #0x1
     acc:	str	x0, [x1, #24]
     ad0:	mov	w0, #0xa                   	// #10
     ad4:	strb	w0, [x2]
     ad8:	b	93c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>
     adc:	mov	w26, #0x0                   	// #0
     ae0:	cmp	w26, w27
     ae4:	b.ne	14f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd20>  // b.any
     ae8:	add	w24, w27, w4
     aec:	mov	x26, #0x0                   	// #0
     af0:	cbz	w4, d78 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5a0>
     af4:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     af8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     afc:	add	x0, x0, #0x0
     b00:	str	x0, [sp, #120]
     b04:	ldr	x23, [x23]
     b08:	b	b6c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x394>
     b0c:	ldrh	w2, [x20, #16]
     b10:	ldrh	w0, [x20, #14]
     b14:	cmp	w2, w27
     b18:	ldr	x2, [sp, #96]
     b1c:	ldr	x2, [x2]
     b20:	b.ls	1474 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc9c>  // b.plast
     b24:	add	w0, w0, w27
     b28:	ldr	x2, [x2, #136]
     b2c:	lsl	x0, x0, #2
     b30:	add	x9, x2, x0
     b34:	ldrsh	w0, [x2, x0]
     b38:	tbz	w0, #31, b40 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x368>
     b3c:	ldr	w0, [x25, #312]
     b40:	ldrh	w2, [x9, #2]
     b44:	str	w0, [x28, #4]
     b48:	str	w2, [x28, #12]
     b4c:	strb	wzr, [x28, #16]
     b50:	cbz	w1, 1434 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc5c>
     b54:	ldrb	w0, [x23]
     b58:	cbnz	w0, bb4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x3dc>
     b5c:	add	w27, w27, #0x1
     b60:	add	x26, x26, #0x1
     b64:	cmp	w27, w24
     b68:	b.eq	d78 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5a0>  // b.none
     b6c:	ldr	w0, [x25, #8]
     b70:	cmp	x0, w27, uxtw
     b74:	b.ls	13d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     b78:	mov	w0, #0x14                  	// #20
     b7c:	mvn	w1, w26
     b80:	ldr	x8, [x25]
     b84:	umull	x7, w27, w0
     b88:	ldr	x0, [x22, #32]
     b8c:	add	x28, x8, x7
     b90:	cmp	w21, w27
     b94:	str	w1, [x8, x7]
     b98:	ldrh	w1, [x0, x26, lsl #1]
     b9c:	strh	w1, [x28, #8]
     ba0:	b.hi	b0c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x334>  // b.pmore
     ba4:	ldr	w0, [x25, #312]
     ba8:	str	w0, [x28, #4]
     bac:	str	wzr, [x28, #12]
     bb0:	b	b4c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x374>
     bb4:	ldr	x0, [sp, #120]
     bb8:	stp	x7, x8, [sp, #104]
     bbc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     bc0:	tst	w0, #0xff
     bc4:	b.eq	b5c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x384>  // b.none
     bc8:	bl	0 <_ZN4llvm4dbgsEv>
     bcc:	mov	x1, x0
     bd0:	ldp	x2, x9, [x0, #16]
     bd4:	ldp	x7, x8, [sp, #104]
     bd8:	sub	x2, x2, x9
     bdc:	cmp	x2, #0x10
     be0:	b.ls	1058 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x880>  // b.plast
     be4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     be8:	add	x0, x0, #0x0
     bec:	ldp	x10, x11, [x0]
     bf0:	stp	x10, x11, [x9]
     bf4:	ldrb	w0, [x0, #16]
     bf8:	strb	w0, [x9, #16]
     bfc:	ldr	x0, [x1, #24]
     c00:	add	x0, x0, #0x11
     c04:	str	x0, [x1, #24]
     c08:	ldr	w2, [x8, x7]
     c0c:	mov	x0, x1
     c10:	mvn	w1, w2
     c14:	sxtw	x1, w1
     c18:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     c1c:	ldp	x1, x2, [x0, #16]
     c20:	mov	x7, x0
     c24:	sub	x1, x1, x2
     c28:	cmp	x1, #0x9
     c2c:	b.ls	1074 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x89c>  // b.plast
     c30:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     c34:	add	x0, x0, #0x0
     c38:	ldr	x1, [x0]
     c3c:	str	x1, [x2]
     c40:	ldrh	w0, [x0, #8]
     c44:	strh	w0, [x2, #8]
     c48:	ldr	x0, [x7, #24]
     c4c:	add	x0, x0, #0xa
     c50:	str	x0, [x7, #24]
     c54:	ldr	x0, [sp, #96]
     c58:	ldr	x1, [x0, #16]
     c5c:	ldrh	w0, [x28, #8]
     c60:	ldr	w8, [x1, #8]
     c64:	ldr	x2, [x1]
     c68:	cmp	w0, w8
     c6c:	ldr	x1, [x1, #64]
     c70:	b.cs	1494 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xcbc>  // b.hs, b.nlast
     c74:	mov	w8, #0x18                  	// #24
     c78:	umull	x0, w0, w8
     c7c:	ldr	w0, [x2, x0]
     c80:	adds	x1, x1, x0
     c84:	b.eq	fd4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7fc>  // b.none
     c88:	mov	x0, x1
     c8c:	stp	x1, x7, [sp, #104]
     c90:	bl	0 <strlen>
     c94:	ldp	x1, x7, [sp, #104]
     c98:	mov	x2, x0
     c9c:	ldp	x8, x0, [x7, #16]
     ca0:	sub	x8, x8, x0
     ca4:	cmp	x2, x8
     ca8:	b.hi	fc8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7f0>  // b.pmore
     cac:	cbz	x2, ccc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4f4>
     cb0:	stp	x2, x7, [sp, #104]
     cb4:	bl	0 <memcpy>
     cb8:	ldp	x2, x7, [sp, #104]
     cbc:	ldp	x8, x1, [x7, #16]
     cc0:	add	x0, x1, x2
     cc4:	str	x0, [x7, #24]
     cc8:	sub	x8, x8, x0
     ccc:	cmp	x8, #0x9
     cd0:	b.ls	fe4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x80c>  // b.plast
     cd4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     cd8:	add	x1, x1, #0x0
     cdc:	ldr	x2, [x1]
     ce0:	str	x2, [x0]
     ce4:	ldrh	w1, [x1, #8]
     ce8:	strh	w1, [x0, #8]
     cec:	ldr	x0, [x7, #24]
     cf0:	ldr	w1, [x28, #4]
     cf4:	add	x0, x0, #0xa
     cf8:	str	x0, [x7, #24]
     cfc:	mov	x0, x7
     d00:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d04:	mov	x2, x0
     d08:	ldp	x1, x7, [x0, #16]
     d0c:	sub	x1, x1, x7
     d10:	cmp	x1, #0x11
     d14:	b.ls	101c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x844>  // b.plast
     d18:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     d1c:	add	x0, x0, #0x0
     d20:	ldp	x8, x9, [x0]
     d24:	stp	x8, x9, [x7]
     d28:	ldrh	w0, [x0, #16]
     d2c:	strh	w0, [x7, #16]
     d30:	ldr	x0, [x2, #24]
     d34:	ldr	w1, [x28, #12]
     d38:	add	x0, x0, #0x12
     d3c:	str	x0, [x2, #24]
     d40:	mov	x0, x2
     d44:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d48:	mov	x1, x0
     d4c:	ldp	x3, x2, [x0, #16]
     d50:	cmp	x2, x3
     d54:	b.cs	104c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x874>  // b.hs, b.nlast
     d58:	add	x0, x2, #0x1
     d5c:	str	x0, [x1, #24]
     d60:	mov	w0, #0xa                   	// #10
     d64:	strb	w0, [x2]
     d68:	add	w27, w27, #0x1
     d6c:	add	x26, x26, #0x1
     d70:	cmp	w27, w24
     d74:	b.ne	b6c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x394>  // b.any
     d78:	ldr	x0, [x22, #8]
     d7c:	tbz	w0, #2, dd0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>
     d80:	ldr	w0, [x25, #8]
     d84:	ldr	w1, [sp, #136]
     d88:	cmp	x0, w1, uxtw
     d8c:	b.ls	13d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     d90:	mov	w20, #0x14                  	// #20
     d94:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     d98:	ldr	x23, [x25]
     d9c:	umull	x20, w1, w20
     da0:	ldr	x0, [x0]
     da4:	add	x21, x23, x20
     da8:	ldrh	w1, [x22, #2]
     dac:	mov	w2, #0x1                   	// #1
     db0:	sub	w1, w1, #0x1
     db4:	ldrb	w0, [x0]
     db8:	str	w1, [x23, x20]
     dbc:	ldr	w1, [x25, #312]
     dc0:	str	w1, [x21, #4]
     dc4:	str	wzr, [x21, #12]
     dc8:	strb	w2, [x21, #16]
     dcc:	cbnz	w0, 1250 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa78>
     dd0:	ldr	w0, [sp, #140]
     dd4:	cbz	w0, fac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>
     dd8:	ldr	x0, [x22, #8]
     ddc:	ldr	w1, [sp, #136]
     de0:	ldrh	w20, [x22, #2]
     de4:	ubfx	w21, w0, #2, #1
     de8:	add	w21, w21, w1
     dec:	tbnz	w0, #19, 10d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x900>
     df0:	ldr	w0, [sp, #140]
     df4:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
     df8:	mov	w24, #0x14                  	// #20
     dfc:	add	w27, w0, w20
     e00:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     e04:	ldr	x23, [x23]
     e08:	add	x0, x0, #0x0
     e0c:	str	x0, [sp, #96]
     e10:	b	e20 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x648>
     e14:	add	w20, w20, #0x1
     e18:	cmp	w20, w27
     e1c:	b.eq	f88 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7b0>  // b.none
     e20:	ldr	w1, [x19, #24]
     e24:	mov	w0, w20
     e28:	cmp	x1, w20, uxtw
     e2c:	b.ls	1454 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc7c>  // b.plast
     e30:	ldr	x1, [x19, #16]
     e34:	lsl	x0, x0, #4
     e38:	ldrb	w0, [x1, x0]
     e3c:	cmp	w0, #0x1
     e40:	b.ne	e14 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>  // b.any
     e44:	ldr	w0, [x25, #8]
     e48:	cmp	x0, w21, uxtw
     e4c:	b.ls	13d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc00>  // b.plast
     e50:	umull	x26, w21, w24
     e54:	ldrb	w0, [x23]
     e58:	ldr	x28, [x25]
     e5c:	add	w21, w21, #0x1
     e60:	add	x22, x28, x26
     e64:	str	w20, [x28, x26]
     e68:	ldr	w1, [x25, #312]
     e6c:	str	w1, [x22, #4]
     e70:	str	wzr, [x22, #12]
     e74:	strb	wzr, [x22, #16]
     e78:	cbz	w0, e14 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>
     e7c:	ldr	x0, [sp, #96]
     e80:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     e84:	tst	w0, #0xff
     e88:	b.eq	e14 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>  // b.none
     e8c:	bl	0 <_ZN4llvm4dbgsEv>
     e90:	mov	x4, x0
     e94:	ldp	x1, x6, [x0, #16]
     e98:	sub	x1, x1, x6
     e9c:	cmp	x1, #0x10
     ea0:	b.ls	122c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa54>  // b.plast
     ea4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     ea8:	add	x0, x0, #0x0
     eac:	ldp	x2, x3, [x0]
     eb0:	stp	x2, x3, [x6]
     eb4:	ldrb	w0, [x0, #16]
     eb8:	strb	w0, [x6, #16]
     ebc:	ldr	x0, [x4, #24]
     ec0:	add	x0, x0, #0x11
     ec4:	str	x0, [x4, #24]
     ec8:	ldrsw	x1, [x28, x26]
     ecc:	mov	x0, x4
     ed0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     ed4:	mov	x2, x0
     ed8:	ldp	x1, x3, [x0, #16]
     edc:	sub	x1, x1, x3
     ee0:	cmp	x1, #0x9
     ee4:	b.ls	11bc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9e4>  // b.plast
     ee8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     eec:	add	x0, x0, #0x0
     ef0:	ldr	x1, [x0]
     ef4:	str	x1, [x3]
     ef8:	ldrh	w0, [x0, #8]
     efc:	strh	w0, [x3, #8]
     f00:	ldr	x0, [x2, #24]
     f04:	ldr	w1, [x22, #4]
     f08:	add	x0, x0, #0xa
     f0c:	str	x0, [x2, #24]
     f10:	mov	x0, x2
     f14:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f18:	mov	x4, x0
     f1c:	ldp	x1, x6, [x0, #16]
     f20:	sub	x1, x1, x6
     f24:	cmp	x1, #0x11
     f28:	b.ls	11f0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa18>  // b.plast
     f2c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     f30:	add	x0, x0, #0x0
     f34:	ldp	x2, x3, [x0]
     f38:	stp	x2, x3, [x6]
     f3c:	ldrh	w0, [x0, #16]
     f40:	strh	w0, [x6, #16]
     f44:	ldr	x0, [x4, #24]
     f48:	ldr	w1, [x22, #12]
     f4c:	add	x0, x0, #0x12
     f50:	str	x0, [x4, #24]
     f54:	mov	x0, x4
     f58:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f5c:	mov	x1, x0
     f60:	ldp	x3, x2, [x0, #16]
     f64:	cmp	x2, x3
     f68:	b.cs	1220 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xa48>  // b.hs, b.nlast
     f6c:	add	x0, x2, #0x1
     f70:	str	x0, [x1, #24]
     f74:	mov	w0, #0xa                   	// #10
     f78:	strb	w0, [x2]
     f7c:	add	w20, w20, #0x1
     f80:	cmp	w20, w27
     f84:	b.ne	e20 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x648>  // b.any
     f88:	ldr	w0, [x25, #8]
     f8c:	mov	w22, w21
     f90:	mov	w1, w0
     f94:	cmp	x22, x1
     f98:	b.cs	10e8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x910>  // b.hs, b.nlast
     f9c:	ldr	w0, [x25, #12]
     fa0:	cmp	x22, x0
     fa4:	b.hi	1518 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd40>  // b.pmore
     fa8:	str	w21, [x25, #8]
     fac:	ldp	x19, x20, [sp, #16]
     fb0:	ldp	x21, x22, [sp, #32]
     fb4:	ldp	x23, x24, [sp, #48]
     fb8:	ldp	x25, x26, [sp, #64]
     fbc:	ldp	x27, x28, [sp, #80]
     fc0:	ldp	x29, x30, [sp], #144
     fc4:	ret
     fc8:	mov	x0, x7
     fcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fd0:	mov	x7, x0
     fd4:	ldp	x8, x0, [x7, #16]
     fd8:	sub	x8, x8, x0
     fdc:	cmp	x8, #0x9
     fe0:	b.hi	cd4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x4fc>  // b.pmore
     fe4:	mov	x2, #0xa                   	// #10
     fe8:	mov	x0, x7
     fec:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
     ff0:	add	x1, x1, #0x0
     ff4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ff8:	mov	x7, x0
     ffc:	ldr	w1, [x28, #4]
    1000:	mov	x0, x7
    1004:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1008:	mov	x2, x0
    100c:	ldp	x1, x7, [x0, #16]
    1010:	sub	x1, x1, x7
    1014:	cmp	x1, #0x11
    1018:	b.hi	d18 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x540>  // b.pmore
    101c:	mov	x2, #0x12                  	// #18
    1020:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1024:	add	x1, x1, #0x0
    1028:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    102c:	ldr	w1, [x28, #12]
    1030:	mov	x2, x0
    1034:	mov	x0, x2
    1038:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    103c:	mov	x1, x0
    1040:	ldp	x3, x2, [x0, #16]
    1044:	cmp	x2, x3
    1048:	b.cc	d58 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x580>  // b.lo, b.ul, b.last
    104c:	mov	w1, #0xa                   	// #10
    1050:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1054:	b	b5c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x384>
    1058:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    105c:	mov	x2, #0x11                  	// #17
    1060:	add	x1, x1, #0x0
    1064:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1068:	mov	x1, x0
    106c:	ldp	x7, x8, [sp, #104]
    1070:	b	c08 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x430>
    1074:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1078:	mov	x2, #0xa                   	// #10
    107c:	add	x1, x1, #0x0
    1080:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1084:	mov	x7, x0
    1088:	b	c54 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x47c>
    108c:	b.ls	8c4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xec>  // b.plast
    1090:	ldr	w0, [x25, #12]
    1094:	mov	w23, #0x14                  	// #20
    1098:	cmp	x26, x0
    109c:	umull	x28, w24, w23
    10a0:	b.hi	1358 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb80>  // b.pmore
    10a4:	ldr	x0, [x25]
    10a8:	add	x1, x0, x28
    10ac:	umaddl	x0, w2, w23, x0
    10b0:	cmp	x1, x0
    10b4:	b.eq	8bc <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xe4>  // b.none
    10b8:	stp	wzr, wzr, [x0]
    10bc:	add	x0, x0, #0x14
    10c0:	sturh	wzr, [x0, #-12]
    10c4:	stur	wzr, [x0, #-8]
    10c8:	sturb	wzr, [x0, #-4]
    10cc:	cmp	x0, x1
    10d0:	b.ne	10b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8e0>  // b.any
    10d4:	b	8b0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd8>
    10d8:	mov	x1, #0x840000              	// #8650752
    10dc:	tst	x0, x1
    10e0:	b.ne	df0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x618>  // b.any
    10e4:	b	f88 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7b0>
    10e8:	b.ls	fac <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>  // b.plast
    10ec:	ldr	w1, [x25, #12]
    10f0:	mov	w19, #0x14                  	// #20
    10f4:	cmp	x22, x1
    10f8:	umull	x20, w21, w19
    10fc:	b.hi	1390 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xbb8>  // b.pmore
    1100:	ldr	x2, [x25]
    1104:	add	x1, x2, x20
    1108:	umaddl	x0, w0, w19, x2
    110c:	cmp	x0, x1
    1110:	b.eq	fa8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d0>  // b.none
    1114:	nop
    1118:	stp	wzr, wzr, [x0]
    111c:	add	x0, x0, #0x14
    1120:	sturh	wzr, [x0, #-12]
    1124:	stur	wzr, [x0, #-8]
    1128:	sturb	wzr, [x0, #-4]
    112c:	cmp	x1, x0
    1130:	b.ne	1118 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x940>  // b.any
    1134:	ldr	w0, [x25, #12]
    1138:	cmp	x22, x0
    113c:	b.ls	fa8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7d0>  // b.plast
    1140:	b	1518 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd40>
    1144:	mov	w1, #0xa                   	// #10
    1148:	str	w4, [sp, #104]
    114c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1150:	ldr	w4, [sp, #104]
    1154:	b	93c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x164>
    1158:	mov	x2, #0x12                  	// #18
    115c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1160:	add	x1, x1, #0x0
    1164:	str	w4, [sp, #104]
    1168:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    116c:	mov	x2, x0
    1170:	ldr	w4, [sp, #104]
    1174:	b	aa4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x2cc>
    1178:	mov	x2, #0xa                   	// #10
    117c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1180:	add	x1, x1, #0x0
    1184:	str	w4, [sp, #104]
    1188:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    118c:	mov	x2, x0
    1190:	ldr	w4, [sp, #104]
    1194:	b	a58 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x280>
    1198:	mov	x2, #0x11                  	// #17
    119c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    11a0:	add	x1, x1, #0x0
    11a4:	str	w4, [sp, #104]
    11a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11ac:	mov	x2, x0
    11b0:	ldr	w4, [sp, #104]
    11b4:	ldp	x8, x9, [sp, #112]
    11b8:	b	a0c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x234>
    11bc:	mov	x2, #0xa                   	// #10
    11c0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    11c4:	add	x1, x1, #0x0
    11c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    11cc:	ldr	w1, [x22, #4]
    11d0:	mov	x2, x0
    11d4:	mov	x0, x2
    11d8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    11dc:	mov	x4, x0
    11e0:	ldp	x1, x6, [x0, #16]
    11e4:	sub	x1, x1, x6
    11e8:	cmp	x1, #0x11
    11ec:	b.hi	f2c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x754>  // b.pmore
    11f0:	mov	x2, #0x12                  	// #18
    11f4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    11f8:	add	x1, x1, #0x0
    11fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1200:	ldr	w1, [x22, #12]
    1204:	mov	x4, x0
    1208:	mov	x0, x4
    120c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1210:	mov	x1, x0
    1214:	ldp	x3, x2, [x0, #16]
    1218:	cmp	x2, x3
    121c:	b.cc	f6c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x794>  // b.lo, b.ul, b.last
    1220:	mov	w1, #0xa                   	// #10
    1224:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1228:	b	e14 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x63c>
    122c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1230:	mov	x2, #0x11                  	// #17
    1234:	add	x1, x1, #0x0
    1238:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    123c:	mov	x4, x0
    1240:	b	ec8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x6f0>
    1244:	mov	w4, #0x0                   	// #0
    1248:	str	w27, [sp, #136]
    124c:	b	874 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x9c>
    1250:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1254:	add	x0, x0, #0x0
    1258:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    125c:	tst	w0, #0xff
    1260:	b.eq	dd0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>  // b.none
    1264:	bl	0 <_ZN4llvm4dbgsEv>
    1268:	mov	x2, x0
    126c:	ldp	x1, x4, [x0, #16]
    1270:	sub	x1, x1, x4
    1274:	cmp	x1, #0x10
    1278:	b.ls	13c0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xbe8>  // b.plast
    127c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1280:	add	x3, x3, #0x0
    1284:	ldp	x0, x1, [x3]
    1288:	stp	x0, x1, [x4]
    128c:	ldrb	w0, [x3, #16]
    1290:	strb	w0, [x4, #16]
    1294:	ldr	x0, [x2, #24]
    1298:	add	x0, x0, #0x11
    129c:	str	x0, [x2, #24]
    12a0:	ldrsw	x1, [x23, x20]
    12a4:	mov	x0, x2
    12a8:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    12ac:	mov	x2, x0
    12b0:	ldp	x3, x1, [x0, #16]
    12b4:	sub	x3, x3, x1
    12b8:	cmp	x3, #0x9
    12bc:	b.ls	1410 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc38>  // b.plast
    12c0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    12c4:	add	x0, x0, #0x0
    12c8:	ldr	x3, [x0]
    12cc:	str	x3, [x1]
    12d0:	ldrh	w0, [x0, #8]
    12d4:	strh	w0, [x1, #8]
    12d8:	ldr	x0, [x2, #24]
    12dc:	add	x0, x0, #0xa
    12e0:	str	x0, [x2, #24]
    12e4:	ldr	w1, [x21, #4]
    12e8:	mov	x0, x2
    12ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    12f0:	mov	x2, x0
    12f4:	ldp	x3, x1, [x0, #16]
    12f8:	sub	x3, x3, x1
    12fc:	cmp	x3, #0x11
    1300:	b.ls	13f8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc20>  // b.plast
    1304:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1308:	add	x0, x0, #0x0
    130c:	ldp	x6, x7, [x0]
    1310:	stp	x6, x7, [x1]
    1314:	ldrh	w0, [x0, #16]
    1318:	strh	w0, [x1, #16]
    131c:	ldr	x0, [x2, #24]
    1320:	add	x0, x0, #0x12
    1324:	str	x0, [x2, #24]
    1328:	ldr	w1, [x21, #12]
    132c:	mov	x0, x2
    1330:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1334:	mov	x1, x0
    1338:	ldp	x3, x2, [x0, #16]
    133c:	cmp	x2, x3
    1340:	b.cs	1428 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xc50>  // b.hs, b.nlast
    1344:	add	x0, x2, #0x1
    1348:	str	x0, [x1, #24]
    134c:	mov	w0, #0xa                   	// #10
    1350:	strb	w0, [x2]
    1354:	b	dd0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>
    1358:	mov	x2, x26
    135c:	add	x1, x25, #0x10
    1360:	mov	x0, x25
    1364:	mov	x3, #0x14                  	// #20
    1368:	str	w4, [sp, #104]
    136c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1370:	ldr	w2, [x25, #8]
    1374:	ldr	x0, [x25]
    1378:	ldr	w4, [sp, #104]
    137c:	add	x1, x0, x28
    1380:	umaddl	x0, w2, w23, x0
    1384:	cmp	x0, x1
    1388:	b.ne	10b8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x8e0>  // b.any
    138c:	b	8b0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xd8>
    1390:	mov	x2, x22
    1394:	add	x1, x25, #0x10
    1398:	mov	x0, x25
    139c:	mov	x3, #0x14                  	// #20
    13a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13a4:	ldr	w2, [x25, #8]
    13a8:	ldr	x0, [x25]
    13ac:	add	x1, x0, x20
    13b0:	umaddl	x0, w2, w19, x0
    13b4:	cmp	x0, x1
    13b8:	b.ne	1118 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x940>  // b.any
    13bc:	b	f9c <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x7c4>
    13c0:	mov	x2, #0x11                  	// #17
    13c4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    13c8:	add	x1, x1, #0x0
    13cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    13d0:	mov	x2, x0
    13d4:	b	12a0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xac8>
    13d8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    13dc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    13e0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    13e4:	add	x3, x3, #0x0
    13e8:	add	x1, x1, #0x0
    13ec:	add	x0, x0, #0x0
    13f0:	mov	w2, #0x95                  	// #149
    13f4:	bl	0 <__assert_fail>
    13f8:	mov	x2, #0x12                  	// #18
    13fc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1400:	add	x1, x1, #0x0
    1404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1408:	mov	x2, x0
    140c:	b	1328 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb50>
    1410:	mov	x2, #0xa                   	// #10
    1414:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1418:	add	x1, x1, #0x0
    141c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1420:	mov	x2, x0
    1424:	b	12e4 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0xb0c>
    1428:	mov	w1, #0xa                   	// #10
    142c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1430:	b	dd0 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj+0x5f8>
    1434:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1438:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    143c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1440:	add	x3, x3, #0x0
    1444:	add	x1, x1, #0x0
    1448:	add	x0, x0, #0x0
    144c:	mov	w2, #0x166                 	// #358
    1450:	bl	0 <__assert_fail>
    1454:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1458:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    145c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1460:	add	x3, x3, #0x0
    1464:	add	x1, x1, #0x0
    1468:	add	x0, x0, #0x0
    146c:	mov	w2, #0x99                  	// #153
    1470:	bl	0 <__assert_fail>
    1474:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1478:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    147c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1480:	add	x3, x3, #0x0
    1484:	add	x1, x1, #0x0
    1488:	add	x0, x0, #0x0
    148c:	mov	w2, #0xab                  	// #171
    1490:	bl	0 <__assert_fail>
    1494:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1498:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    149c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14a0:	add	x3, x3, #0x0
    14a4:	add	x1, x1, #0x0
    14a8:	add	x0, x0, #0x0
    14ac:	mov	w2, #0x1b8                 	// #440
    14b0:	bl	0 <__assert_fail>
    14b4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14b8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14bc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14c0:	add	x3, x3, #0x0
    14c4:	add	x1, x1, #0x0
    14c8:	add	x0, x0, #0x0
    14cc:	mov	w2, #0x15b                 	// #347
    14d0:	bl	0 <__assert_fail>
    14d4:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14d8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14dc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14e0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14e4:	add	x3, x3, #0x0
    14e8:	add	x1, x1, #0x0
    14ec:	add	x0, x0, #0x0
    14f0:	mov	w2, #0x15d                 	// #349
    14f4:	bl	0 <__assert_fail>
    14f8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    14fc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1500:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1504:	add	x3, x3, #0x0
    1508:	add	x1, x1, #0x0
    150c:	add	x0, x0, #0x0
    1510:	mov	w2, #0x151                 	// #337
    1514:	bl	0 <__assert_fail>
    1518:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    151c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1520:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1524:	add	x3, x3, #0x0
    1528:	add	x1, x1, #0x0
    152c:	add	x0, x0, #0x0
    1530:	mov	w2, #0x43                  	// #67
    1534:	bl	0 <__assert_fail>

0000000000001538 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>:
    1538:	stp	x29, x30, [sp, #-160]!
    153c:	mov	x29, sp
    1540:	stp	x25, x26, [sp, #64]
    1544:	mov	x25, x1
    1548:	ldr	x1, [x0, #8]
    154c:	stp	x19, x20, [sp, #16]
    1550:	stp	x21, x22, [sp, #32]
    1554:	mov	x22, x2
    1558:	stp	x23, x24, [sp, #48]
    155c:	stp	x27, x28, [sp, #80]
    1560:	str	x0, [sp, #136]
    1564:	ldr	w0, [x2]
    1568:	ldr	w2, [x1, #24]
    156c:	ldr	x23, [x1]
    1570:	cmp	w0, w2
    1574:	b.cs	1d9c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x864>  // b.hs, b.nlast
    1578:	ubfiz	x0, x0, #6, #32
    157c:	mov	w20, w3
    1580:	add	x23, x23, x0
    1584:	ldr	x1, [x23, #24]
    1588:	ldrh	w2, [x23, #2]
    158c:	ldrb	w26, [x23, #4]
    1590:	sub	w19, w2, w26
    1594:	cbz	x1, 1d0c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7d4>
    1598:	ldrh	w0, [x1]
    159c:	mov	w21, #0x0                   	// #0
    15a0:	cbz	w0, 15b4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7c>
    15a4:	nop
    15a8:	add	w21, w21, #0x1
    15ac:	ldrh	w0, [x1, w21, uxtw #1]
    15b0:	cbnz	w0, 15a8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x70>
    15b4:	ldr	x1, [x23, #8]
    15b8:	add	x0, x25, #0x60
    15bc:	ldr	w3, [x22, #24]
    15c0:	str	x0, [sp, #152]
    15c4:	ubfx	w1, w1, #2, #1
    15c8:	sub	w2, w3, w2
    15cc:	sub	w19, w19, w1
    15d0:	ldr	w0, [x25, #104]
    15d4:	add	w1, w19, w21
    15d8:	stp	w2, w1, [sp, #144]
    15dc:	add	w24, w1, w2
    15e0:	add	w28, w1, w2
    15e4:	cmp	x24, x0
    15e8:	b.cs	1bd8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6a0>  // b.hs, b.nlast
    15ec:	ldr	w0, [x25, #108]
    15f0:	cmp	x24, x0
    15f4:	b.hi	1d5c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x824>  // b.pmore
    15f8:	str	w28, [x25, #104]
    15fc:	ldrb	w26, [x23, #4]
    1600:	mov	w27, #0x0                   	// #0
    1604:	mov	w28, #0x0                   	// #0
    1608:	cbz	w19, 1d14 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7dc>
    160c:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    1610:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1614:	add	x0, x0, #0x0
    1618:	str	x0, [sp, #128]
    161c:	ldr	x0, [x24]
    1620:	str	x0, [sp, #104]
    1624:	b	1638 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x100>
    1628:	add	w27, w27, #0x1
    162c:	add	w26, w26, #0x1
    1630:	cmp	w19, w27
    1634:	b.eq	1768 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x230>  // b.none
    1638:	ldr	w1, [x22, #24]
    163c:	mov	w0, w26
    1640:	cmp	x1, w26, uxtw
    1644:	b.ls	1d1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7e4>  // b.plast
    1648:	ldr	x1, [x22, #16]
    164c:	lsl	x0, x0, #4
    1650:	ldrb	w0, [x1, x0]
    1654:	cmp	w0, #0x1
    1658:	b.ne	1628 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>  // b.any
    165c:	ldr	w0, [x25, #104]
    1660:	mov	w6, w28
    1664:	cmp	x0, w28, uxtw
    1668:	b.ls	1d3c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x804>  // b.plast
    166c:	ldr	x10, [x25, #96]
    1670:	lsl	x6, x6, #4
    1674:	ldr	x0, [sp, #104]
    1678:	add	x24, x10, x6
    167c:	add	w28, w28, #0x1
    1680:	ldrb	w0, [x0]
    1684:	str	w26, [x10, x6]
    1688:	str	w27, [x24, #4]
    168c:	str	w20, [x24, #12]
    1690:	cbz	w0, 1628 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>
    1694:	ldr	x0, [sp, #128]
    1698:	stp	x6, x10, [sp, #112]
    169c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    16a0:	tst	w0, #0xff
    16a4:	b.eq	1628 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>  // b.none
    16a8:	bl	0 <_ZN4llvm4dbgsEv>
    16ac:	mov	x2, x0
    16b0:	ldp	x1, x11, [x0, #16]
    16b4:	ldp	x6, x10, [sp, #112]
    16b8:	sub	x1, x1, x11
    16bc:	cmp	x1, #0x10
    16c0:	b.ls	1c50 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x718>  // b.plast
    16c4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    16c8:	add	x0, x0, #0x0
    16cc:	ldp	x12, x13, [x0]
    16d0:	stp	x12, x13, [x11]
    16d4:	ldrb	w0, [x0, #16]
    16d8:	strb	w0, [x11, #16]
    16dc:	ldr	x0, [x2, #24]
    16e0:	add	x0, x0, #0x11
    16e4:	str	x0, [x2, #24]
    16e8:	ldrsw	x1, [x10, x6]
    16ec:	mov	x0, x2
    16f0:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    16f4:	mov	x2, x0
    16f8:	ldp	x1, x6, [x0, #16]
    16fc:	sub	x1, x1, x6
    1700:	cmp	x1, #0xa
    1704:	b.ls	1c38 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x700>  // b.plast
    1708:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    170c:	add	x0, x0, #0x0
    1710:	ldr	x1, [x0]
    1714:	str	x1, [x6]
    1718:	ldur	w0, [x0, #7]
    171c:	stur	w0, [x6, #7]
    1720:	ldr	x0, [x2, #24]
    1724:	add	x0, x0, #0xb
    1728:	str	x0, [x2, #24]
    172c:	ldr	w1, [x24, #4]
    1730:	mov	x0, x2
    1734:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1738:	mov	x1, x0
    173c:	ldp	x6, x2, [x0, #16]
    1740:	cmp	x2, x6
    1744:	b.cs	1c2c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6f4>  // b.hs, b.nlast
    1748:	add	x0, x2, #0x1
    174c:	str	x0, [x1, #24]
    1750:	mov	w0, #0xa                   	// #10
    1754:	strb	w0, [x2]
    1758:	add	w27, w27, #0x1
    175c:	add	w26, w26, #0x1
    1760:	cmp	w19, w27
    1764:	b.ne	1638 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x100>  // b.any
    1768:	mov	x27, #0x0                   	// #0
    176c:	cbz	w21, 1958 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x420>
    1770:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
    1774:	adrp	x26, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1778:	add	x0, x26, #0x0
    177c:	str	x0, [sp, #120]
    1780:	ldr	x24, [x24]
    1784:	b	1794 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x25c>
    1788:	add	x27, x27, #0x1
    178c:	cmp	w21, w27
    1790:	b.ls	1958 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x420>  // b.plast
    1794:	ldr	w0, [x25, #104]
    1798:	add	w6, w28, w27
    179c:	cmp	x6, x0
    17a0:	b.cs	1d3c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x804>  // b.hs, b.nlast
    17a4:	ldr	x9, [x25, #96]
    17a8:	lsl	x6, x6, #4
    17ac:	ldr	x2, [x23, #24]
    17b0:	add	x26, x9, x6
    17b4:	ldrb	w1, [x24]
    17b8:	mvn	w0, w27
    17bc:	ldrh	w2, [x2, x27, lsl #1]
    17c0:	str	w0, [x9, x6]
    17c4:	add	w0, w19, w27
    17c8:	str	w0, [x26, #4]
    17cc:	strh	w2, [x26, #8]
    17d0:	str	w20, [x26, #12]
    17d4:	cbz	w1, 1788 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>
    17d8:	ldr	x0, [sp, #120]
    17dc:	stp	x6, x9, [sp, #104]
    17e0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    17e4:	tst	w0, #0xff
    17e8:	b.eq	1788 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>  // b.none
    17ec:	bl	0 <_ZN4llvm4dbgsEv>
    17f0:	mov	x1, x0
    17f4:	ldp	x2, x12, [x0, #16]
    17f8:	ldp	x6, x9, [sp, #104]
    17fc:	sub	x2, x2, x12
    1800:	cmp	x2, #0x10
    1804:	b.ls	1b8c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x654>  // b.plast
    1808:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    180c:	add	x0, x0, #0x0
    1810:	ldp	x10, x11, [x0]
    1814:	stp	x10, x11, [x12]
    1818:	ldrb	w0, [x0, #16]
    181c:	strb	w0, [x12, #16]
    1820:	ldr	x0, [x1, #24]
    1824:	add	x0, x0, #0x11
    1828:	str	x0, [x1, #24]
    182c:	ldr	w2, [x9, x6]
    1830:	mov	x0, x1
    1834:	mvn	w1, w2
    1838:	sxtw	x1, w1
    183c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1840:	ldp	x1, x6, [x0, #16]
    1844:	mov	x2, x0
    1848:	sub	x1, x1, x6
    184c:	cmp	x1, #0xa
    1850:	b.ls	1bc0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x688>  // b.plast
    1854:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1858:	add	x0, x0, #0x0
    185c:	ldr	x1, [x0]
    1860:	str	x1, [x6]
    1864:	ldur	w0, [x0, #7]
    1868:	stur	w0, [x6, #7]
    186c:	ldr	x0, [x2, #24]
    1870:	add	x0, x0, #0xb
    1874:	str	x0, [x2, #24]
    1878:	ldr	w1, [x26, #4]
    187c:	mov	x0, x2
    1880:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1884:	mov	x6, x0
    1888:	ldp	x1, x2, [x0, #16]
    188c:	sub	x1, x1, x2
    1890:	cmp	x1, #0xc
    1894:	b.ls	1ba8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x670>  // b.plast
    1898:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    189c:	add	x0, x0, #0x0
    18a0:	ldr	x1, [x0]
    18a4:	str	x1, [x2]
    18a8:	ldur	x0, [x0, #5]
    18ac:	stur	x0, [x2, #5]
    18b0:	ldr	x0, [x6, #24]
    18b4:	add	x0, x0, #0xd
    18b8:	str	x0, [x6, #24]
    18bc:	ldr	x0, [sp, #136]
    18c0:	ldr	x1, [x0, #16]
    18c4:	ldrh	w0, [x26, #8]
    18c8:	ldr	w8, [x1, #8]
    18cc:	ldr	x2, [x1]
    18d0:	cmp	w0, w8
    18d4:	ldr	x1, [x1, #64]
    18d8:	b.cs	1d7c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x844>  // b.hs, b.nlast
    18dc:	mov	w3, #0x18                  	// #24
    18e0:	umull	x0, w0, w3
    18e4:	ldr	w0, [x2, x0]
    18e8:	adds	x1, x1, x0
    18ec:	b.eq	1b70 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x638>  // b.none
    18f0:	mov	x0, x1
    18f4:	stp	x1, x6, [sp, #104]
    18f8:	bl	0 <strlen>
    18fc:	ldp	x1, x6, [sp, #104]
    1900:	mov	x2, x0
    1904:	ldp	x8, x0, [x6, #16]
    1908:	sub	x9, x8, x0
    190c:	cmp	x2, x9
    1910:	b.hi	1b64 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x62c>  // b.pmore
    1914:	cbz	x2, 1930 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x3f8>
    1918:	stp	x2, x6, [sp, #104]
    191c:	bl	0 <memcpy>
    1920:	ldp	x2, x6, [sp, #104]
    1924:	ldp	x8, x1, [x6, #16]
    1928:	add	x0, x1, x2
    192c:	str	x0, [x6, #24]
    1930:	cmp	x0, x8
    1934:	b.cs	1b7c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x644>  // b.hs, b.nlast
    1938:	add	x1, x0, #0x1
    193c:	str	x1, [x6, #24]
    1940:	mov	w1, #0xa                   	// #10
    1944:	strb	w1, [x0]
    1948:	add	x27, x27, #0x1
    194c:	cmp	w21, w27
    1950:	b.hi	1794 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x25c>  // b.pmore
    1954:	nop
    1958:	ldr	x0, [x23, #8]
    195c:	add	w21, w21, w28
    1960:	tbnz	w0, #18, 1c1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6e4>
    1964:	mov	w0, #0x0                   	// #0
    1968:	ldr	w1, [sp, #144]
    196c:	ldrh	w19, [x23, #2]
    1970:	cmp	w1, #0x0
    1974:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1978:	b.ne	1ae8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5b0>  // b.any
    197c:	ldr	w0, [sp, #148]
    1980:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    1984:	mov	w26, #0x0                   	// #0
    1988:	sub	w24, w0, w19
    198c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1990:	ldr	x23, [x23]
    1994:	add	x0, x0, #0x0
    1998:	str	x0, [sp, #112]
    199c:	b	19b4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x47c>
    19a0:	ldr	w0, [sp, #144]
    19a4:	add	w26, w26, #0x1
    19a8:	add	w19, w19, #0x1
    19ac:	cmp	w0, w26
    19b0:	b.ls	1ae8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5b0>  // b.plast
    19b4:	ldr	w1, [x22, #24]
    19b8:	mov	w0, w19
    19bc:	cmp	x1, w19, uxtw
    19c0:	b.ls	1d1c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7e4>  // b.plast
    19c4:	ldr	x1, [x22, #16]
    19c8:	lsl	x0, x0, #4
    19cc:	ldrb	w0, [x1, x0]
    19d0:	cmp	w0, #0x1
    19d4:	b.ne	19a0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>  // b.any
    19d8:	ldr	w0, [x25, #104]
    19dc:	mov	w27, w21
    19e0:	cmp	x0, w21, uxtw
    19e4:	b.ls	1d3c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x804>  // b.plast
    19e8:	ldr	x3, [x25, #96]
    19ec:	lsl	x27, x27, #4
    19f0:	ldrb	w1, [x23]
    19f4:	add	w0, w24, w19
    19f8:	add	x28, x3, x27
    19fc:	add	w21, w21, #0x1
    1a00:	str	w19, [x3, x27]
    1a04:	str	w0, [x28, #4]
    1a08:	str	w20, [x28, #12]
    1a0c:	cbz	w1, 19a0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>
    1a10:	ldr	x0, [sp, #112]
    1a14:	str	x3, [sp, #104]
    1a18:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    1a1c:	tst	w0, #0xff
    1a20:	b.eq	19a0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>  // b.none
    1a24:	bl	0 <_ZN4llvm4dbgsEv>
    1a28:	mov	x2, x0
    1a2c:	ldp	x1, x4, [x0, #16]
    1a30:	ldr	x3, [sp, #104]
    1a34:	sub	x1, x1, x4
    1a38:	cmp	x1, #0x10
    1a3c:	b.ls	1c90 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x758>  // b.plast
    1a40:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1a44:	add	x0, x0, #0x0
    1a48:	ldp	x8, x9, [x0]
    1a4c:	stp	x8, x9, [x4]
    1a50:	ldrb	w0, [x0, #16]
    1a54:	strb	w0, [x4, #16]
    1a58:	ldr	x0, [x2, #24]
    1a5c:	add	x0, x0, #0x11
    1a60:	str	x0, [x2, #24]
    1a64:	ldrsw	x1, [x3, x27]
    1a68:	mov	x0, x2
    1a6c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    1a70:	mov	x2, x0
    1a74:	ldp	x1, x3, [x0, #16]
    1a78:	sub	x1, x1, x3
    1a7c:	cmp	x1, #0xa
    1a80:	b.ls	1c78 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x740>  // b.plast
    1a84:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1a88:	add	x0, x0, #0x0
    1a8c:	ldr	x1, [x0]
    1a90:	str	x1, [x3]
    1a94:	ldur	w0, [x0, #7]
    1a98:	stur	w0, [x3, #7]
    1a9c:	ldr	x0, [x2, #24]
    1aa0:	add	x0, x0, #0xb
    1aa4:	str	x0, [x2, #24]
    1aa8:	ldr	w1, [x28, #4]
    1aac:	mov	x0, x2
    1ab0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    1ab4:	mov	x1, x0
    1ab8:	ldp	x3, x2, [x0, #16]
    1abc:	cmp	x2, x3
    1ac0:	b.cs	1c6c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x734>  // b.hs, b.nlast
    1ac4:	add	x0, x2, #0x1
    1ac8:	str	x0, [x1, #24]
    1acc:	mov	w0, #0xa                   	// #10
    1ad0:	strb	w0, [x2]
    1ad4:	ldr	w0, [sp, #144]
    1ad8:	add	w26, w26, #0x1
    1adc:	add	w19, w19, #0x1
    1ae0:	cmp	w0, w26
    1ae4:	b.hi	19b4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x47c>  // b.pmore
    1ae8:	ldr	w0, [x25, #104]
    1aec:	mov	w19, w21
    1af0:	cmp	x19, x0
    1af4:	b.cc	1b38 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x600>  // b.lo, b.ul, b.last
    1af8:	b.ls	1b48 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x610>  // b.plast
    1afc:	ldr	w1, [x25, #108]
    1b00:	lsl	x20, x19, #4
    1b04:	cmp	x19, x1
    1b08:	b.hi	1cdc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7a4>  // b.pmore
    1b0c:	ldr	x2, [x25, #96]
    1b10:	add	x1, x2, x20
    1b14:	add	x0, x2, x0, lsl #4
    1b18:	cmp	x0, x1
    1b1c:	b.eq	1b44 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x60c>  // b.none
    1b20:	stp	wzr, wzr, [x0]
    1b24:	add	x0, x0, #0x10
    1b28:	sturh	wzr, [x0, #-8]
    1b2c:	stur	wzr, [x0, #-4]
    1b30:	cmp	x0, x1
    1b34:	b.ne	1b20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5e8>  // b.any
    1b38:	ldr	w0, [x25, #108]
    1b3c:	cmp	x19, x0
    1b40:	b.hi	1d5c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x824>  // b.pmore
    1b44:	str	w21, [x25, #104]
    1b48:	ldp	x19, x20, [sp, #16]
    1b4c:	ldp	x21, x22, [sp, #32]
    1b50:	ldp	x23, x24, [sp, #48]
    1b54:	ldp	x25, x26, [sp, #64]
    1b58:	ldp	x27, x28, [sp, #80]
    1b5c:	ldp	x29, x30, [sp], #160
    1b60:	ret
    1b64:	mov	x0, x6
    1b68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b6c:	mov	x6, x0
    1b70:	ldp	x8, x0, [x6, #16]
    1b74:	cmp	x0, x8
    1b78:	b.cc	1938 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x400>  // b.lo, b.ul, b.last
    1b7c:	mov	x0, x6
    1b80:	mov	w1, #0xa                   	// #10
    1b84:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1b88:	b	1788 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x250>
    1b8c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1b90:	mov	x2, #0x11                  	// #17
    1b94:	add	x1, x1, #0x0
    1b98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1b9c:	mov	x1, x0
    1ba0:	ldp	x6, x9, [sp, #104]
    1ba4:	b	182c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x2f4>
    1ba8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1bac:	mov	x2, #0xd                   	// #13
    1bb0:	add	x1, x1, #0x0
    1bb4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bb8:	mov	x6, x0
    1bbc:	b	18bc <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x384>
    1bc0:	mov	x2, #0xb                   	// #11
    1bc4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1bc8:	add	x1, x1, #0x0
    1bcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1bd0:	mov	x2, x0
    1bd4:	b	1878 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x340>
    1bd8:	b.ls	1600 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc8>  // b.plast
    1bdc:	ldr	w1, [x25, #108]
    1be0:	lsl	x26, x24, #4
    1be4:	cmp	x24, x1
    1be8:	b.hi	1cac <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x774>  // b.pmore
    1bec:	ldr	x2, [x25, #96]
    1bf0:	add	x1, x2, x26
    1bf4:	add	x0, x2, x0, lsl #4
    1bf8:	cmp	x1, x0
    1bfc:	b.eq	15f8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xc0>  // b.none
    1c00:	stp	wzr, wzr, [x0]
    1c04:	add	x0, x0, #0x10
    1c08:	sturh	wzr, [x0, #-8]
    1c0c:	stur	wzr, [x0, #-4]
    1c10:	cmp	x0, x1
    1c14:	b.ne	1c00 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6c8>  // b.any
    1c18:	b	15ec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xb4>
    1c1c:	mov	x1, #0x880000              	// #8912896
    1c20:	tst	x0, x1
    1c24:	cset	w0, eq  // eq = none
    1c28:	b	1968 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x430>
    1c2c:	mov	w1, #0xa                   	// #10
    1c30:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1c34:	b	1628 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xf0>
    1c38:	mov	x2, #0xb                   	// #11
    1c3c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c40:	add	x1, x1, #0x0
    1c44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c48:	mov	x2, x0
    1c4c:	b	172c <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1f4>
    1c50:	mov	x2, #0x11                  	// #17
    1c54:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c58:	add	x1, x1, #0x0
    1c5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c60:	mov	x2, x0
    1c64:	ldp	x6, x10, [sp, #112]
    1c68:	b	16e8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x1b0>
    1c6c:	mov	w1, #0xa                   	// #10
    1c70:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    1c74:	b	19a0 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x468>
    1c78:	mov	x2, #0xb                   	// #11
    1c7c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c80:	add	x1, x1, #0x0
    1c84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1c88:	mov	x2, x0
    1c8c:	b	1aa8 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x570>
    1c90:	mov	x2, #0x11                  	// #17
    1c94:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1c98:	add	x1, x1, #0x0
    1c9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1ca0:	mov	x2, x0
    1ca4:	ldr	x3, [sp, #104]
    1ca8:	b	1a64 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x52c>
    1cac:	mov	x2, x24
    1cb0:	add	x1, x25, #0x70
    1cb4:	add	x0, x25, #0x60
    1cb8:	mov	x3, #0x10                  	// #16
    1cbc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1cc0:	ldr	x2, [x25, #96]
    1cc4:	ldr	w0, [x25, #104]
    1cc8:	add	x1, x2, x26
    1ccc:	add	x0, x2, x0, lsl #4
    1cd0:	cmp	x0, x1
    1cd4:	b.ne	1c00 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x6c8>  // b.any
    1cd8:	b	15ec <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0xb4>
    1cdc:	ldr	x0, [sp, #152]
    1ce0:	mov	x2, x19
    1ce4:	add	x1, x25, #0x70
    1ce8:	mov	x3, #0x10                  	// #16
    1cec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1cf0:	ldr	x2, [x25, #96]
    1cf4:	ldr	w0, [x25, #104]
    1cf8:	add	x1, x2, x20
    1cfc:	add	x0, x2, x0, lsl #4
    1d00:	cmp	x0, x1
    1d04:	b.ne	1b20 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x5e8>  // b.any
    1d08:	b	1b38 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x600>
    1d0c:	mov	w21, #0x0                   	// #0
    1d10:	b	15b4 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x7c>
    1d14:	mov	w28, w19
    1d18:	b	1768 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj+0x230>
    1d1c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d20:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d24:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d28:	add	x3, x3, #0x0
    1d2c:	add	x1, x1, #0x0
    1d30:	add	x0, x0, #0x0
    1d34:	mov	w2, #0x99                  	// #153
    1d38:	bl	0 <__assert_fail>
    1d3c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d40:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d44:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d48:	add	x3, x3, #0x0
    1d4c:	add	x1, x1, #0x0
    1d50:	add	x0, x0, #0x0
    1d54:	mov	w2, #0x95                  	// #149
    1d58:	bl	0 <__assert_fail>
    1d5c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d60:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d64:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d68:	add	x3, x3, #0x0
    1d6c:	add	x1, x1, #0x0
    1d70:	add	x0, x0, #0x0
    1d74:	mov	w2, #0x43                  	// #67
    1d78:	bl	0 <__assert_fail>
    1d7c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d80:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d84:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1d88:	add	x3, x3, #0x0
    1d8c:	add	x1, x1, #0x0
    1d90:	add	x0, x0, #0x0
    1d94:	mov	w2, #0x1b8                 	// #440
    1d98:	bl	0 <__assert_fail>
    1d9c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>

0000000000001da0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>:
    1da0:	stp	x29, x30, [sp, #-112]!
    1da4:	mov	x29, sp
    1da8:	ldr	w0, [x1, #316]
    1dac:	stp	x19, x20, [sp, #16]
    1db0:	mov	x19, x8
    1db4:	cbnz	w0, 1ea8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x108>
    1db8:	ldrb	w0, [x1, #324]
    1dbc:	stp	x21, x22, [sp, #32]
    1dc0:	mov	x21, x2
    1dc4:	cbz	w0, 1e78 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xd8>
    1dc8:	adrp	x20, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1dcc:	add	x20, x20, #0x0
    1dd0:	mov	x22, #0x6d                  	// #109
    1dd4:	str	x23, [sp, #48]
    1dd8:	add	x0, sp, #0x50
    1ddc:	add	x1, sp, #0x48
    1de0:	add	x23, x0, #0x10
    1de4:	mov	x2, #0x0                   	// #0
    1de8:	stp	x22, x23, [sp, #72]
    1dec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1df0:	mov	x2, x22
    1df4:	ldr	x3, [sp, #72]
    1df8:	mov	x1, x20
    1dfc:	str	x0, [sp, #80]
    1e00:	str	x3, [sp, #96]
    1e04:	bl	0 <memcpy>
    1e08:	ldp	x1, x2, [sp, #72]
    1e0c:	str	x1, [sp, #88]
    1e10:	mov	x0, #0x30                  	// #48
    1e14:	strb	wzr, [x2, x1]
    1e18:	bl	0 <_Znwm>
    1e1c:	mov	x3, x0
    1e20:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e24:	ldr	x2, [sp, #80]
    1e28:	ldr	x1, [x1]
    1e2c:	cmp	x2, x23
    1e30:	add	x1, x1, #0x10
    1e34:	str	x1, [x3], #24
    1e38:	str	x3, [x0, #8]
    1e3c:	b.eq	1ed4 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x134>  // b.none
    1e40:	ldr	x1, [sp, #96]
    1e44:	str	x2, [x0, #8]
    1e48:	str	x1, [x0, #24]
    1e4c:	ldr	x1, [sp, #88]
    1e50:	orr	x2, x0, #0x1
    1e54:	ldr	x23, [sp, #48]
    1e58:	str	x1, [x0, #16]
    1e5c:	str	x21, [x0, #40]
    1e60:	mov	x0, x19
    1e64:	ldp	x21, x22, [sp, #32]
    1e68:	str	x2, [x19]
    1e6c:	ldp	x19, x20, [sp, #16]
    1e70:	ldp	x29, x30, [sp], #112
    1e74:	ret
    1e78:	ldrb	w0, [x1, #325]
    1e7c:	cbnz	w0, 1ec0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x120>
    1e80:	ldr	w2, [x1, #184]
    1e84:	ldr	x0, [x1, #288]
    1e88:	cmp	w2, #0x0
    1e8c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
    1e90:	b.eq	1ee0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x140>  // b.none
    1e94:	adrp	x20, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1e98:	mov	x22, #0x65                  	// #101
    1e9c:	add	x20, x20, #0x0
    1ea0:	str	x23, [sp, #48]
    1ea4:	b	1dd8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x38>
    1ea8:	mov	x0, #0x1                   	// #1
    1eac:	str	x0, [x8]
    1eb0:	mov	x0, x19
    1eb4:	ldp	x19, x20, [sp, #16]
    1eb8:	ldp	x29, x30, [sp], #112
    1ebc:	ret
    1ec0:	adrp	x20, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    1ec4:	mov	x22, #0x6d                  	// #109
    1ec8:	add	x20, x20, #0x0
    1ecc:	str	x23, [sp, #48]
    1ed0:	b	1dd8 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0x38>
    1ed4:	ldp	x2, x3, [sp, #96]
    1ed8:	stp	x2, x3, [x0, #24]
    1edc:	b	1e4c <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE+0xac>
    1ee0:	mov	x0, #0x1                   	// #1
    1ee4:	ldp	x21, x22, [sp, #32]
    1ee8:	str	x0, [x19]
    1eec:	mov	x0, x19
    1ef0:	ldp	x19, x20, [sp, #16]
    1ef4:	ldp	x29, x30, [sp], #112
    1ef8:	ret
    1efc:	nop

0000000000001f00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE>:
    1f00:	stp	x29, x30, [sp, #-304]!
    1f04:	mov	x29, sp
    1f08:	stp	x19, x20, [sp, #16]
    1f0c:	ldr	x19, [x2, #152]
    1f10:	stp	x21, x22, [sp, #32]
    1f14:	stp	x23, x24, [sp, #48]
    1f18:	ldr	w22, [x19, #48]
    1f1c:	stp	x25, x26, [sp, #64]
    1f20:	stp	x27, x28, [sp, #80]
    1f24:	str	x0, [sp, #112]
    1f28:	str	w22, [sp, #216]
    1f2c:	stp	xzr, xzr, [sp, #224]
    1f30:	str	xzr, [sp, #240]
    1f34:	stp	xzr, xzr, [sp, #280]
    1f38:	str	wzr, [sp, #296]
    1f3c:	cbz	w22, 3c30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d30>
    1f40:	mov	x25, x2
    1f44:	mov	x23, x1
    1f48:	mov	x28, x3
    1f4c:	cmp	w22, #0x40
    1f50:	b.ls	2514 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x614>  // b.plast
    1f54:	add	x0, sp, #0xd0
    1f58:	mov	w2, #0x0                   	// #0
    1f5c:	mov	x1, #0x0                   	// #0
    1f60:	str	x4, [sp, #96]
    1f64:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    1f68:	ldr	x4, [sp, #96]
    1f6c:	ldrh	w26, [x23, #12]
    1f70:	cbz	w26, 3cd0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1dd0>
    1f74:	mov	x27, #0x0                   	// #0
    1f78:	add	x21, sp, #0xf8
    1f7c:	str	w22, [sp, #128]
    1f80:	mov	x22, x27
    1f84:	mov	x27, x19
    1f88:	mov	x19, x4
    1f8c:	add	x0, sp, #0xe0
    1f90:	mov	w20, #0x1                   	// #1
    1f94:	mov	w24, #0x0                   	// #0
    1f98:	str	x0, [sp, #120]
    1f9c:	nop
    1fa0:	ldrh	w0, [x23, #10]
    1fa4:	ldr	x2, [x27, #40]
    1fa8:	add	x0, x0, x22
    1fac:	ldr	x1, [x25, #128]
    1fb0:	lsl	x0, x0, #2
    1fb4:	add	x6, x1, x0
    1fb8:	ldrh	w0, [x1, x0]
    1fbc:	cbz	x2, 3858 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1958>
    1fc0:	ldr	w1, [x27, #48]
    1fc4:	cmp	w0, w1
    1fc8:	b.cs	3838 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1938>  // b.hs, b.nlast
    1fcc:	ldrh	w2, [x6, #2]
    1fd0:	ubfiz	x5, x0, #5, #16
    1fd4:	ldr	x8, [x27, #32]
    1fd8:	and	x1, x0, #0xffff
    1fdc:	add	x7, x8, x5
    1fe0:	cbz	w2, 2534 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x634>
    1fe4:	cmp	x19, x1
    1fe8:	b.ls	3818 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1918>  // b.plast
    1fec:	ldr	w1, [x7, #16]
    1ff0:	ldr	x5, [x28, x0, lsl #3]
    1ff4:	tbnz	w1, #31, 252c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x62c>
    1ff8:	cbz	x5, 3984 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a84>
    1ffc:	ldr	w9, [sp, #216]
    2000:	clz	x8, x5
    2004:	mov	w0, #0x3f                  	// #63
    2008:	sub	w0, w0, w8
    200c:	cmp	w0, w9
    2010:	b.cs	39a4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1aa4>  // b.hs, b.nlast
    2014:	mov	x8, #0x1                   	// #1
    2018:	cmp	w9, #0x40
    201c:	lsl	x0, x8, x0
    2020:	ldr	x8, [sp, #208]
    2024:	b.hi	251c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x61c>  // b.pmore
    2028:	orr	x0, x8, x0
    202c:	str	x0, [sp, #208]
    2030:	cmp	w1, #0x0
    2034:	cset	w8, eq  // eq = none
    2038:	cmp	w1, #0x1
    203c:	cset	w0, le
    2040:	orr	w24, w24, w8
    2044:	and	w20, w20, w0
    2048:	ldp	x1, x0, [sp, #232]
    204c:	str	x5, [sp, #248]
    2050:	str	wzr, [sp, #256]
    2054:	str	w2, [sp, #260]
    2058:	strb	wzr, [sp, #264]
    205c:	cmp	x1, x0
    2060:	mov	w0, #0x1                   	// #1
    2064:	str	w0, [sp, #268]
    2068:	b.eq	26e8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x7e8>  // b.none
    206c:	ldp	x8, x9, [x21]
    2070:	stp	x8, x9, [x1]
    2074:	add	x2, x1, #0x18
    2078:	ldr	x0, [x21, #16]
    207c:	str	x0, [x1, #16]
    2080:	str	x2, [sp, #232]
    2084:	ldr	w0, [x7, #12]
    2088:	cbz	w0, 20ec <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ec>
    208c:	cmp	x19, w0, uxtw
    2090:	mov	w0, w0
    2094:	b.ls	3818 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1918>  // b.plast
    2098:	ldr	w1, [sp, #296]
    209c:	mov	w10, #0x0                   	// #0
    20a0:	ldr	x2, [x28, x0, lsl #3]
    20a4:	ldr	x7, [sp, #280]
    20a8:	cbz	w1, 2e3c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf3c>
    20ac:	cmn	x2, #0x3
    20b0:	b.hi	3ba0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ca0>  // b.pmore
    20b4:	mov	w0, #0x25                  	// #37
    20b8:	sub	w5, w1, #0x1
    20bc:	mul	w8, w2, w0
    20c0:	and	w9, w8, w5
    20c4:	and	w10, w8, w5
    20c8:	lsl	x9, x9, #4
    20cc:	add	x0, x7, x9
    20d0:	ldr	x9, [x7, x9]
    20d4:	cmp	x2, x9
    20d8:	b.ne	24a4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x5a4>  // b.any
    20dc:	ldr	w5, [x0, #8]
    20e0:	ldrh	w1, [x6, #2]
    20e4:	add	w1, w1, w5
    20e8:	str	w1, [x0, #8]
    20ec:	add	x22, x22, #0x1
    20f0:	cmp	w26, w22
    20f4:	b.hi	1fa0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa0>  // b.pmore
    20f8:	ldr	w22, [sp, #128]
    20fc:	mov	x4, x19
    2100:	and	w20, w20, w24
    2104:	mov	x19, x27
    2108:	ldp	x24, x21, [sp, #224]
    210c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2110:	ldr	x1, [sp, #112]
    2114:	movk	x0, #0xaaab
    2118:	strb	w20, [x1, #329]
    211c:	subs	x20, x21, x24
    2120:	asr	x1, x20, #3
    2124:	mul	x1, x1, x0
    2128:	mov	x0, x1
    212c:	b.eq	225c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x35c>  // b.none
    2130:	clz	x1, x1
    2134:	mov	w2, #0x3f                  	// #63
    2138:	sub	w2, w2, w1
    213c:	mov	x0, x24
    2140:	mov	x1, x21
    2144:	mov	w3, #0x0                   	// #0
    2148:	sbfiz	x2, x2, #1, #32
    214c:	str	x4, [sp, #96]
    2150:	bl	1f8 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEElNS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_T1_>
    2154:	cmp	x20, #0x180
    2158:	ldr	x4, [sp, #96]
    215c:	b.le	3284 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1384>
    2160:	add	x1, x24, #0x180
    2164:	mov	x0, x24
    2168:	bl	578 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>
    216c:	cmp	x21, x1
    2170:	ldr	x4, [sp, #96]
    2174:	b.eq	2244 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x344>  // b.none
    2178:	add	x9, x24, #0x170
    217c:	add	x6, x24, #0x168
    2180:	mov	x3, x1
    2184:	add	x24, x24, #0x188
    2188:	add	x20, sp, #0xf8
    218c:	mov	x10, x9
    2190:	ldp	x0, x1, [x3]
    2194:	stp	x0, x1, [x20]
    2198:	ldr	x1, [x3, #16]
    219c:	str	x1, [x20, #16]
    21a0:	mov	x0, #0x0                   	// #0
    21a4:	add	x5, x3, x0
    21a8:	ldr	x7, [x3]
    21ac:	fmov	d0, x7
    21b0:	ldr	d1, [x6, x0]
    21b4:	cnt	v0.8b, v0.8b
    21b8:	addv	b0, v0.8b
    21bc:	umov	w2, v0.b[0]
    21c0:	cnt	v0.8b, v1.8b
    21c4:	addv	b0, v0.8b
    21c8:	umov	w1, v0.b[0]
    21cc:	cmp	w2, w1
    21d0:	b.cc	21e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x2e0>  // b.lo, b.ul, b.last
    21d4:	fmov	x1, d1
    21d8:	ccmp	x7, x1, #0x2, eq  // eq = none
    21dc:	b.cs	2220 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x320>  // b.hs, b.nlast
    21e0:	add	x1, x10, x0
    21e4:	add	x5, x24, x0
    21e8:	str	d1, [x3, x0]
    21ec:	sub	x0, x0, #0x18
    21f0:	ldp	x8, x9, [x1]
    21f4:	stp	x8, x9, [x5]
    21f8:	add	x5, x3, x0
    21fc:	ldr	d1, [x6, x0]
    2200:	cnt	v0.8b, v1.8b
    2204:	addv	b0, v0.8b
    2208:	umov	w1, v0.b[0]
    220c:	cmp	w2, w1
    2210:	b.cc	21e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x2e0>  // b.lo, b.ul, b.last
    2214:	fmov	x1, d1
    2218:	ccmp	x7, x1, #0x2, eq  // eq = none
    221c:	b.cc	21e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x2e0>  // b.lo, b.ul, b.last
    2220:	ldp	x0, x1, [sp, #256]
    2224:	str	x7, [x5]
    2228:	stp	x0, x1, [x5, #8]
    222c:	add	x3, x3, #0x18
    2230:	cmp	x21, x3
    2234:	add	x6, x6, #0x18
    2238:	add	x10, x10, #0x18
    223c:	add	x24, x24, #0x18
    2240:	b.ne	2190 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x290>  // b.any
    2244:	ldp	x24, x0, [sp, #224]
    2248:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    224c:	movk	x1, #0xaaab
    2250:	sub	x0, x0, x24
    2254:	asr	x0, x0, #3
    2258:	mul	x0, x0, x1
    225c:	mov	w9, w0
    2260:	cbz	w0, 39c4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ac4>
    2264:	mov	w27, #0x1                   	// #1
    2268:	sub	w1, w27, #0x1
    226c:	mov	w2, #0x18                  	// #24
    2270:	sub	w0, w0, #0x1
    2274:	str	w0, [sp, #104]
    2278:	mov	x0, x24
    227c:	umull	x1, w1, w2
    2280:	str	x4, [sp, #144]
    2284:	str	xzr, [sp, #96]
    2288:	mov	x6, #0x0                   	// #0
    228c:	add	x25, x0, x1
    2290:	str	w22, [sp, #120]
    2294:	stp	x19, x28, [sp, #128]
    2298:	mov	w24, w9
    229c:	mov	x28, x6
    22a0:	ldp	w3, w4, [x25, #8]
    22a4:	mov	w18, #0x25                  	// #37
    22a8:	ldr	x19, [sp, #112]
    22ac:	cmp	w4, w3
    22b0:	b.ne	2314 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x414>  // b.any
    22b4:	nop
    22b8:	ldr	x2, [x0, x1]
    22bc:	fmov	d0, x2
    22c0:	cnt	v0.8b, v0.8b
    22c4:	addv	b0, v0.8b
    22c8:	umov	w1, v0.b[0]
    22cc:	cmp	w1, #0x1
    22d0:	b.le	3cd8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1dd8>
    22d4:	clz	x3, x2
    22d8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    22dc:	cmp	x2, #0x0
    22e0:	lsr	x1, x1, x3
    22e4:	orr	x1, x28, x1
    22e8:	csel	x28, x1, x28, ne  // ne = any
    22ec:	cmp	w24, w27
    22f0:	b.ls	27f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8f0>  // b.plast
    22f4:	add	w27, w27, #0x1
    22f8:	sub	w1, w27, #0x1
    22fc:	mov	w2, #0x18                  	// #24
    2300:	umull	x1, w1, w2
    2304:	add	x25, x0, x1
    2308:	ldp	w3, w4, [x25, #8]
    230c:	cmp	w4, w3
    2310:	b.eq	22b8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x3b8>  // b.none
    2314:	ldp	w21, w0, [x19, #184]
    2318:	cmp	w21, w0
    231c:	b.cs	2fcc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10cc>  // b.hs, b.nlast
    2320:	umull	x21, w21, w2
    2324:	ldr	x23, [x19, #176]
    2328:	add	x2, x23, x21
    232c:	ldp	x0, x1, [x25]
    2330:	stp	x0, x1, [x2]
    2334:	ldr	x0, [x25, #16]
    2338:	str	x0, [x2, #16]
    233c:	ldp	w0, w2, [x19, #184]
    2340:	mov	w1, w0
    2344:	add	x1, x1, #0x1
    2348:	cmp	x1, x2
    234c:	b.hi	3aa0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ba0>  // b.pmore
    2350:	add	w0, w0, #0x1
    2354:	str	w0, [x19, #184]
    2358:	cbz	w0, 3c50 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d50>
    235c:	ldr	x26, [x25]
    2360:	fmov	d0, x26
    2364:	cnt	v0.8b, v0.8b
    2368:	addv	b0, v0.8b
    236c:	umov	w1, v0.b[0]
    2370:	cmp	w1, #0x1
    2374:	b.eq	2a6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb6c>  // b.none
    2378:	cbz	x26, 2390 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x490>
    237c:	clz	x2, x26
    2380:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    2384:	lsr	x1, x1, x2
    2388:	eor	x26, x26, x1
    238c:	orr	x28, x28, x1
    2390:	cmp	w24, w27
    2394:	b.ls	2a80 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb80>  // b.plast
    2398:	ldr	w0, [sp, #104]
    239c:	mov	w1, w27
    23a0:	add	x1, x1, #0x1
    23a4:	mov	w20, #0x18                  	// #24
    23a8:	sub	w0, w0, w27
    23ac:	mov	w2, w27
    23b0:	add	x0, x0, x1
    23b4:	umull	x20, w27, w20
    23b8:	mov	x3, x19
    23bc:	mov	w27, w24
    23c0:	add	x22, x0, x0, lsl #1
    23c4:	mov	x24, x25
    23c8:	ldr	x0, [sp, #224]
    23cc:	lsl	x22, x22, #3
    23d0:	b	23e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x4e0>
    23d4:	add	x20, x20, #0x18
    23d8:	cmp	x20, x22
    23dc:	b.eq	2490 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x590>  // b.none
    23e0:	ldr	x1, [x0, x20]
    23e4:	add	x21, x0, x20
    23e8:	bics	xzr, x26, x1
    23ec:	b.ne	23d4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x4d4>  // b.any
    23f0:	ldr	w25, [sp, #296]
    23f4:	mov	w0, #0x0                   	// #0
    23f8:	ldp	w23, w6, [x24, #8]
    23fc:	ldr	x7, [sp, #280]
    2400:	sub	w19, w6, w23
    2404:	cbz	w25, 2b00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc00>
    2408:	ldr	x1, [x24]
    240c:	cmn	x1, #0x3
    2410:	b.hi	3ba0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ca0>  // b.pmore
    2414:	mul	w0, w1, w18
    2418:	sub	w5, w25, #0x1
    241c:	and	w4, w0, w5
    2420:	and	w0, w0, w5
    2424:	lsl	x4, x4, #4
    2428:	add	x9, x7, x4
    242c:	ldr	x8, [x7, x4]
    2430:	cmp	x1, x8
    2434:	b.ne	2a94 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb94>  // b.any
    2438:	ldr	w0, [x9, #8]
    243c:	sub	w19, w19, w0
    2440:	ldr	w1, [x21, #12]
    2444:	add	w0, w1, w0
    2448:	cmp	w1, w19
    244c:	b.cc	3c70 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d70>  // b.lo, b.ul, b.last
    2450:	ldr	d0, [x21]
    2454:	sub	w23, w23, w6
    2458:	add	w0, w23, w0
    245c:	str	w0, [x21, #12]
    2460:	ldr	x0, [sp, #224]
    2464:	cnt	v0.8b, v0.8b
    2468:	addv	b0, v0.8b
    246c:	umov	w1, v0.b[0]
    2470:	cmp	w1, #0x1
    2474:	b.le	23d4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x4d4>
    2478:	ldr	w1, [x21, #20]
    247c:	add	x20, x20, #0x18
    2480:	cmp	x20, x22
    2484:	add	w1, w1, #0x1
    2488:	str	w1, [x21, #20]
    248c:	b.ne	23e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x4e0>  // b.any
    2490:	mov	w24, w27
    2494:	mov	w27, w2
    2498:	mov	x19, x3
    249c:	add	w27, w27, #0x1
    24a0:	b	22f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x3f8>
    24a4:	mov	w3, w10
    24a8:	mov	w12, #0x1                   	// #1
    24ac:	mov	x11, #0x0                   	// #0
    24b0:	cmn	x9, #0x1
    24b4:	b.ne	3944 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a44>  // b.any
    24b8:	ldr	w12, [sp, #288]
    24bc:	lsl	w10, w1, #1
    24c0:	cmp	x11, #0x0
    24c4:	add	w13, w10, w1
    24c8:	add	w12, w12, #0x1
    24cc:	csel	x0, x0, x11, eq  // eq = none
    24d0:	cmp	w13, w12, lsl #2
    24d4:	b.ls	2e3c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf3c>  // b.plast
    24d8:	ldr	w10, [sp, #292]
    24dc:	sub	w11, w1, w10
    24e0:	sub	w11, w11, w12
    24e4:	cmp	w11, w1, lsr #3
    24e8:	b.ls	3084 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1184>  // b.plast
    24ec:	ldr	x1, [x0]
    24f0:	str	w12, [sp, #288]
    24f4:	cmn	x1, #0x1
    24f8:	b.eq	2504 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x604>  // b.none
    24fc:	sub	w10, w10, #0x1
    2500:	str	w10, [sp, #292]
    2504:	mov	w5, #0x0                   	// #0
    2508:	str	x2, [x0]
    250c:	str	wzr, [x0, #8]
    2510:	b	20e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1e0>
    2514:	str	xzr, [sp, #208]
    2518:	b	1f6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6c>
    251c:	ldr	x9, [x8]
    2520:	orr	x0, x9, x0
    2524:	str	x0, [x8]
    2528:	b	2030 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x130>
    252c:	mov	w20, #0x0                   	// #0
    2530:	b	2048 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x148>
    2534:	stp	x5, x8, [sp, #96]
    2538:	bl	0 <_ZN4llvm9WithColor7warningEv>
    253c:	mov	x6, x0
    2540:	ldp	x1, x2, [x0, #16]
    2544:	ldp	x5, x8, [sp, #96]
    2548:	sub	x1, x1, x2
    254c:	cmp	x1, #0x3b
    2550:	b.ls	27bc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8bc>  // b.plast
    2554:	adrp	x7, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2558:	add	x7, x7, #0x0
    255c:	ldp	x0, x1, [x7]
    2560:	stp	x0, x1, [x2]
    2564:	ldr	w9, [x7, #56]
    2568:	ldp	x0, x1, [x7, #16]
    256c:	stp	x0, x1, [x2, #16]
    2570:	ldp	x0, x1, [x7, #32]
    2574:	stp	x0, x1, [x2, #32]
    2578:	ldr	x0, [x7, #48]
    257c:	str	x0, [x2, #48]
    2580:	str	w9, [x2, #56]
    2584:	ldr	x0, [x6, #24]
    2588:	add	x0, x0, #0x3c
    258c:	str	x0, [x6, #24]
    2590:	ldr	x1, [x8, x5]
    2594:	cbz	x1, 270c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x80c>
    2598:	mov	x0, x1
    259c:	stp	x1, x6, [sp, #96]
    25a0:	bl	0 <strlen>
    25a4:	ldp	x1, x6, [sp, #96]
    25a8:	mov	x2, x0
    25ac:	ldp	x5, x0, [x6, #16]
    25b0:	sub	x7, x5, x0
    25b4:	cmp	x2, x7
    25b8:	b.hi	2700 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x800>  // b.pmore
    25bc:	cbz	x2, 25d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6d8>
    25c0:	stp	x2, x6, [sp, #96]
    25c4:	bl	0 <memcpy>
    25c8:	ldp	x2, x6, [sp, #96]
    25cc:	ldp	x5, x0, [x6, #16]
    25d0:	add	x0, x0, x2
    25d4:	str	x0, [x6, #24]
    25d8:	cmp	x5, x0
    25dc:	b.eq	2718 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x818>  // b.none
    25e0:	mov	w1, #0xa                   	// #10
    25e4:	strb	w1, [x0]
    25e8:	ldr	x0, [x6, #24]
    25ec:	add	x0, x0, #0x1
    25f0:	str	x0, [x6, #24]
    25f4:	bl	0 <_ZN4llvm9WithColor4noteEv>
    25f8:	mov	x5, x0
    25fc:	ldp	x1, x2, [x0, #16]
    2600:	sub	x1, x1, x2
    2604:	cmp	x1, #0x19
    2608:	b.ls	2744 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x844>  // b.plast
    260c:	adrp	x6, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2610:	add	x6, x6, #0x0
    2614:	ldp	x0, x1, [x6]
    2618:	stp	x0, x1, [x2]
    261c:	ldrh	w0, [x6, #24]
    2620:	ldr	x1, [x6, #16]
    2624:	str	x1, [x2, #16]
    2628:	strh	w0, [x2, #24]
    262c:	ldr	x0, [x5, #24]
    2630:	ldr	x1, [x23]
    2634:	add	x0, x0, #0x1a
    2638:	str	x0, [x5, #24]
    263c:	cbz	x1, 2760 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x860>
    2640:	mov	x0, x1
    2644:	stp	x1, x5, [sp, #96]
    2648:	bl	0 <strlen>
    264c:	ldp	x1, x5, [sp, #96]
    2650:	mov	x2, x0
    2654:	ldp	x6, x0, [x5, #16]
    2658:	sub	x6, x6, x0
    265c:	cmp	x2, x6
    2660:	b.hi	27d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8d8>  // b.pmore
    2664:	cbz	x2, 2684 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x784>
    2668:	stp	x2, x5, [sp, #96]
    266c:	bl	0 <memcpy>
    2670:	ldp	x2, x5, [sp, #96]
    2674:	ldp	x6, x0, [x5, #16]
    2678:	add	x0, x0, x2
    267c:	str	x0, [x5, #24]
    2680:	sub	x6, x6, x0
    2684:	cmp	x6, #0xe
    2688:	b.ls	2770 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x870>  // b.plast
    268c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2690:	add	x1, x1, #0x0
    2694:	ldr	x2, [x1]
    2698:	str	x2, [x0]
    269c:	ldur	x1, [x1, #7]
    26a0:	stur	x1, [x0, #7]
    26a4:	mov	x1, x22
    26a8:	ldr	x0, [x5, #24]
    26ac:	add	x0, x0, #0xf
    26b0:	str	x0, [x5, #24]
    26b4:	mov	x0, x5
    26b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    26bc:	mov	x1, x0
    26c0:	ldp	x2, x5, [x0, #16]
    26c4:	sub	x2, x2, x5
    26c8:	cmp	x2, #0x1
    26cc:	b.ls	27a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x8a8>  // b.plast
    26d0:	mov	w0, #0xa29                 	// #2601
    26d4:	strh	w0, [x5]
    26d8:	ldr	x0, [x1, #24]
    26dc:	add	x0, x0, #0x2
    26e0:	str	x0, [x1, #24]
    26e4:	b	20ec <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ec>
    26e8:	ldr	x0, [sp, #120]
    26ec:	mov	x2, x21
    26f0:	stp	x6, x7, [sp, #96]
    26f4:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    26f8:	ldp	x6, x7, [sp, #96]
    26fc:	b	2084 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x184>
    2700:	mov	x0, x6
    2704:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2708:	mov	x6, x0
    270c:	ldp	x5, x0, [x6, #16]
    2710:	cmp	x5, x0
    2714:	b.ne	25e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x6e0>  // b.any
    2718:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    271c:	add	x1, x1, #0x0
    2720:	mov	x2, #0x1                   	// #1
    2724:	mov	x0, x6
    2728:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    272c:	bl	0 <_ZN4llvm9WithColor4noteEv>
    2730:	mov	x5, x0
    2734:	ldp	x1, x2, [x0, #16]
    2738:	sub	x1, x1, x2
    273c:	cmp	x1, #0x19
    2740:	b.hi	260c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x70c>  // b.pmore
    2744:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2748:	mov	x2, #0x1a                  	// #26
    274c:	add	x1, x1, #0x0
    2750:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2754:	ldr	x1, [x23]
    2758:	mov	x5, x0
    275c:	cbnz	x1, 2640 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x740>
    2760:	ldp	x6, x0, [x5, #16]
    2764:	sub	x6, x6, x0
    2768:	cmp	x6, #0xe
    276c:	b.hi	268c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x78c>  // b.pmore
    2770:	mov	x2, #0xf                   	// #15
    2774:	mov	x0, x5
    2778:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    277c:	add	x1, x1, #0x0
    2780:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    2784:	mov	x5, x0
    2788:	mov	x0, x5
    278c:	mov	x1, x22
    2790:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    2794:	mov	x1, x0
    2798:	ldp	x2, x5, [x0, #16]
    279c:	sub	x2, x2, x5
    27a0:	cmp	x2, #0x1
    27a4:	b.hi	26d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x7d0>  // b.pmore
    27a8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    27ac:	mov	x2, #0x2                   	// #2
    27b0:	add	x1, x1, #0x0
    27b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    27b8:	b	20ec <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ec>
    27bc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    27c0:	mov	x2, #0x3c                  	// #60
    27c4:	add	x1, x1, #0x0
    27c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    27cc:	mov	x6, x0
    27d0:	ldp	x5, x8, [sp, #96]
    27d4:	b	2590 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x690>
    27d8:	mov	x0, x5
    27dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    27e0:	mov	x5, x0
    27e4:	ldp	x6, x0, [x5, #16]
    27e8:	sub	x6, x6, x0
    27ec:	b	2768 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x868>
    27f0:	ldr	x0, [sp, #112]
    27f4:	mov	x6, x28
    27f8:	ldp	x19, x28, [sp, #128]
    27fc:	ldr	w22, [sp, #120]
    2800:	ldr	x4, [sp, #144]
    2804:	ldr	x23, [x0, #176]
    2808:	ldr	w0, [x0, #184]
    280c:	mov	w1, #0x18                  	// #24
    2810:	mov	x2, x23
    2814:	mov	w5, #0x1                   	// #1
    2818:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
    281c:	umaddl	x0, w0, w1, x23
    2820:	cmp	x0, x23
    2824:	b.eq	287c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x97c>  // b.none
    2828:	ldr	x7, [sp, #96]
    282c:	nop
    2830:	ldr	d1, [x2]
    2834:	cnt	v0.8b, v1.8b
    2838:	addv	b0, v0.8b
    283c:	umov	w1, v0.b[0]
    2840:	cmp	w1, #0x1
    2844:	b.le	2870 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x970>
    2848:	ldrb	w1, [x2, #16]
    284c:	cbnz	w1, 2870 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x970>
    2850:	fmov	x1, d1
    2854:	cbz	x1, 2e34 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf34>
    2858:	fmov	x8, d1
    285c:	clz	x1, x1
    2860:	lsr	x1, x3, x1
    2864:	eor	x1, x1, x8
    2868:	bics	xzr, x1, x7
    286c:	b.eq	2e34 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf34>  // b.none
    2870:	add	x2, x2, #0x18
    2874:	cmp	x0, x2
    2878:	b.ne	2830 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x930>  // b.any
    287c:	ldr	w24, [sp, #296]
    2880:	ldr	w0, [sp, #288]
    2884:	ldr	x21, [sp, #280]
    2888:	lsl	x24, x24, #4
    288c:	add	x5, x21, x24
    2890:	cbnz	w0, 3228 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1328>
    2894:	mov	x1, x5
    2898:	mov	w9, #0x3f                  	// #63
    289c:	mov	x8, #0x1                   	// #1
    28a0:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
    28a4:	nop
    28a8:	cmp	x1, x5
    28ac:	b.eq	2970 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa70>  // b.none
    28b0:	cmp	w22, #0x1
    28b4:	b.ls	2948 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa48>  // b.plast
    28b8:	ldr	x0, [x19, #40]
    28bc:	ldr	w11, [sp, #216]
    28c0:	cbz	x0, 3858 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1958>
    28c4:	ldr	w10, [x19, #48]
    28c8:	cmp	w11, #0x40
    28cc:	mov	x0, #0x1                   	// #1
    28d0:	b.ls	2a2c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb2c>  // b.plast
    28d4:	b	28e4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9e4>
    28d8:	add	x0, x0, #0x1
    28dc:	cmp	w22, w0
    28e0:	b.ls	2948 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa48>  // b.plast
    28e4:	cmp	w10, w0
    28e8:	b.ls	3838 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1938>  // b.plast
    28ec:	ldr	x2, [x19, #32]
    28f0:	add	x2, x2, x0, lsl #5
    28f4:	ldr	w2, [x2, #16]
    28f8:	cmn	w2, #0x1
    28fc:	b.eq	28d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9d8>  // b.none
    2900:	cmp	x4, x0
    2904:	b.ls	3818 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1918>  // b.plast
    2908:	ldr	x2, [x28, x0, lsl #3]
    290c:	ldr	x3, [x1]
    2910:	cmp	x3, x2
    2914:	b.eq	28d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9d8>  // b.none
    2918:	bics	xzr, x3, x2
    291c:	b.ne	28d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9d8>  // b.any
    2920:	cbz	x2, 3984 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a84>
    2924:	ldr	x11, [sp, #208]
    2928:	clz	x2, x2
    292c:	add	x0, x0, #0x1
    2930:	lsr	x2, x7, x2
    2934:	cmp	w22, w0
    2938:	ldr	x3, [x11]
    293c:	orr	x2, x3, x2
    2940:	str	x2, [x11]
    2944:	b.hi	28e4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9e4>  // b.pmore
    2948:	add	x1, x1, #0x10
    294c:	cmp	x1, x5
    2950:	b.hi	3cb0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1db0>  // b.pmore
    2954:	b.eq	28a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9a8>  // b.none
    2958:	ldr	x0, [x1]
    295c:	cmn	x0, #0x3
    2960:	b.ls	28a8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x9a8>  // b.plast
    2964:	add	x1, x1, #0x10
    2968:	cmp	x1, x5
    296c:	b.ne	2958 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa58>  // b.any
    2970:	ldr	w19, [sp, #216]
    2974:	cmp	w19, #0x40
    2978:	b.ls	32d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x13d8>  // b.plast
    297c:	add	x0, sp, #0xd0
    2980:	str	x6, [sp, #104]
    2984:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    2988:	sub	w19, w19, w0
    298c:	cmp	w19, #0x40
    2990:	ldr	x6, [sp, #104]
    2994:	b.hi	3a80 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b80>  // b.pmore
    2998:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
    299c:	ldr	x0, [sp, #208]
    29a0:	ldr	x3, [sp, #112]
    29a4:	ldr	x1, [x1]
    29a8:	ldr	x2, [x0]
    29ac:	str	x2, [x3, #288]
    29b0:	mov	x2, x3
    29b4:	ldrb	w1, [x1]
    29b8:	ldr	x3, [sp, #96]
    29bc:	stp	x3, x6, [x2, #296]
    29c0:	cbnz	w1, 32fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x13fc>
    29c4:	bl	0 <_ZdaPv>
    29c8:	mov	x0, x21
    29cc:	mov	x1, x24
    29d0:	bl	0 <_ZdlPvm>
    29d4:	ldr	x0, [sp, #224]
    29d8:	cbz	x0, 29e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xae0>
    29dc:	bl	0 <_ZdlPv>
    29e0:	ldp	x19, x20, [sp, #16]
    29e4:	ldp	x21, x22, [sp, #32]
    29e8:	ldp	x23, x24, [sp, #48]
    29ec:	ldp	x25, x26, [sp, #64]
    29f0:	ldp	x27, x28, [sp, #80]
    29f4:	ldp	x29, x30, [sp], #304
    29f8:	ret
    29fc:	cbz	x2, 3984 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a84>
    2a00:	clz	x2, x2
    2a04:	sub	w2, w9, w2
    2a08:	cmp	w2, w11
    2a0c:	b.cs	39a4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1aa4>  // b.hs, b.nlast
    2a10:	ldr	x3, [sp, #208]
    2a14:	lsl	x2, x8, x2
    2a18:	orr	x2, x3, x2
    2a1c:	str	x2, [sp, #208]
    2a20:	add	x0, x0, #0x1
    2a24:	cmp	w22, w0
    2a28:	b.ls	2948 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xa48>  // b.plast
    2a2c:	cmp	w10, w0
    2a30:	b.ls	3838 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1938>  // b.plast
    2a34:	ldr	x2, [x19, #32]
    2a38:	add	x2, x2, x0, lsl #5
    2a3c:	ldr	w2, [x2, #16]
    2a40:	cmn	w2, #0x1
    2a44:	b.eq	2a20 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb20>  // b.none
    2a48:	cmp	x4, x0
    2a4c:	b.ls	3818 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1918>  // b.plast
    2a50:	ldr	x2, [x28, x0, lsl #3]
    2a54:	ldr	x3, [x1]
    2a58:	cmp	x3, x2
    2a5c:	b.eq	2a20 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb20>  // b.none
    2a60:	bics	xzr, x3, x2
    2a64:	b.ne	2a20 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb20>  // b.any
    2a68:	b	29fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xafc>
    2a6c:	ldr	x1, [sp, #96]
    2a70:	cmp	w24, w27
    2a74:	orr	x1, x1, x26
    2a78:	str	x1, [sp, #96]
    2a7c:	b.hi	2398 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x498>  // b.pmore
    2a80:	mov	x6, x28
    2a84:	ldr	w22, [sp, #120]
    2a88:	ldp	x19, x28, [sp, #128]
    2a8c:	ldr	x4, [sp, #144]
    2a90:	b	280c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x90c>
    2a94:	mov	w10, #0x1                   	// #1
    2a98:	mov	x4, #0x0                   	// #0
    2a9c:	cmn	x8, #0x1
    2aa0:	b.ne	3878 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1978>  // b.any
    2aa4:	ldr	w10, [sp, #288]
    2aa8:	lsl	w0, w25, #1
    2aac:	cmp	x4, #0x0
    2ab0:	add	w11, w0, w25
    2ab4:	add	w10, w10, #0x1
    2ab8:	csel	x4, x4, x9, ne  // ne = any
    2abc:	cmp	w11, w10, lsl #2
    2ac0:	b.ls	2b00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc00>  // b.plast
    2ac4:	ldr	w0, [sp, #292]
    2ac8:	sub	w9, w25, w0
    2acc:	sub	w9, w9, w10
    2ad0:	cmp	w9, w25, lsr #3
    2ad4:	b.ls	2c10 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xd10>  // b.plast
    2ad8:	ldr	x5, [x4]
    2adc:	str	w10, [sp, #288]
    2ae0:	cmn	x5, #0x1
    2ae4:	b.eq	2af0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbf0>  // b.none
    2ae8:	sub	w0, w0, #0x1
    2aec:	str	w0, [sp, #292]
    2af0:	mov	w0, #0x0                   	// #0
    2af4:	str	x1, [x4]
    2af8:	str	wzr, [x4, #8]
    2afc:	b	2440 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x540>
    2b00:	sub	w0, w0, #0x1
    2b04:	mov	w1, #0x40                  	// #64
    2b08:	str	x7, [sp, #176]
    2b0c:	orr	x0, x0, x0, lsr #1
    2b10:	str	w2, [sp, #184]
    2b14:	str	x3, [sp, #192]
    2b18:	orr	x0, x0, x0, lsr #2
    2b1c:	orr	x0, x0, x0, lsr #4
    2b20:	orr	x0, x0, x0, lsr #8
    2b24:	orr	x0, x0, x0, lsr #16
    2b28:	add	x5, x0, #0x1
    2b2c:	cmp	w5, w1
    2b30:	csel	w5, w5, w1, cs  // cs = hs, nlast
    2b34:	str	w5, [sp, #160]
    2b38:	sub	w9, w5, #0x1
    2b3c:	stp	w9, w6, [sp, #168]
    2b40:	ubfiz	x4, x5, #4, #32
    2b44:	str	x4, [sp, #152]
    2b48:	mov	x0, x4
    2b4c:	str	w5, [sp, #296]
    2b50:	bl	0 <_Znwm>
    2b54:	str	x0, [sp, #280]
    2b58:	ldr	x7, [sp, #176]
    2b5c:	str	xzr, [sp, #288]
    2b60:	ldp	w9, w6, [sp, #168]
    2b64:	mov	x11, x0
    2b68:	ldr	w5, [sp, #160]
    2b6c:	mov	w18, #0x25                  	// #37
    2b70:	ldr	w2, [sp, #184]
    2b74:	and	w5, w5, w9
    2b78:	ldr	x4, [sp, #152]
    2b7c:	ldr	x3, [sp, #192]
    2b80:	cbz	x7, 37fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x18fc>
    2b84:	ubfiz	x1, x25, #4, #32
    2b88:	add	x8, x7, x1
    2b8c:	cbnz	w5, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    2b90:	add	x4, x0, x4
    2b94:	mov	x10, #0xffffffffffffffff    	// #-1
    2b98:	str	x10, [x0], #16
    2b9c:	cmp	x4, x0
    2ba0:	b.ne	2b98 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xc98>  // b.any
    2ba4:	cmp	x7, x8
    2ba8:	mov	x0, x7
    2bac:	mov	w10, #0x0                   	// #0
    2bb0:	b.ne	2bc4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcc4>  // b.any
    2bb4:	b	2dc8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xec8>
    2bb8:	add	x0, x0, #0x10
    2bbc:	cmp	x8, x0
    2bc0:	b.eq	2dc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xec0>  // b.none
    2bc4:	ldr	x4, [x0]
    2bc8:	cmn	x4, #0x3
    2bcc:	b.hi	2bb8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcb8>  // b.pmore
    2bd0:	mul	w10, w4, w18
    2bd4:	and	w12, w10, w9
    2bd8:	and	w10, w10, w9
    2bdc:	lsl	x12, x12, #4
    2be0:	add	x14, x11, x12
    2be4:	ldr	x12, [x11, x12]
    2be8:	cmp	x4, x12
    2bec:	b.ne	3254 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1354>  // b.any
    2bf0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2bf4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2bf8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    2bfc:	add	x3, x3, #0x0
    2c00:	add	x1, x1, #0x0
    2c04:	add	x0, x0, #0x0
    2c08:	mov	w2, #0x17a                 	// #378
    2c0c:	bl	0 <__assert_fail>
    2c10:	mov	w1, w5
    2c14:	lsr	w0, w5, #1
    2c18:	orr	x0, x0, x1
    2c1c:	mov	w1, #0x40                  	// #64
    2c20:	stp	x8, x7, [sp, #176]
    2c24:	orr	x0, x0, x0, lsr #2
    2c28:	str	w2, [sp, #192]
    2c2c:	orr	x0, x0, x0, lsr #4
    2c30:	str	x3, [sp, #200]
    2c34:	orr	x0, x0, x0, lsr #8
    2c38:	orr	x0, x0, x0, lsr #16
    2c3c:	add	x4, x0, #0x1
    2c40:	cmp	w4, w1
    2c44:	csel	w4, w4, w1, cs  // cs = hs, nlast
    2c48:	str	w4, [sp, #160]
    2c4c:	sub	w9, w4, #0x1
    2c50:	stp	w9, w6, [sp, #168]
    2c54:	ubfiz	x5, x4, #4, #32
    2c58:	str	x5, [sp, #152]
    2c5c:	mov	x0, x5
    2c60:	str	w4, [sp, #296]
    2c64:	bl	0 <_Znwm>
    2c68:	str	x0, [sp, #280]
    2c6c:	ldp	x8, x7, [sp, #176]
    2c70:	str	xzr, [sp, #288]
    2c74:	ldp	w9, w6, [sp, #168]
    2c78:	mov	x11, x0
    2c7c:	ldr	w4, [sp, #160]
    2c80:	mov	w18, #0x25                  	// #37
    2c84:	ldr	w2, [sp, #192]
    2c88:	and	w4, w4, w9
    2c8c:	ldr	x5, [sp, #152]
    2c90:	ldr	x3, [sp, #200]
    2c94:	cbz	x7, 38e8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19e8>
    2c98:	ubfiz	x1, x25, #4, #32
    2c9c:	add	x10, x7, x1
    2ca0:	cbnz	w4, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    2ca4:	add	x5, x0, x5
    2ca8:	str	x8, [x0], #16
    2cac:	cmp	x5, x0
    2cb0:	b.ne	2ca8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xda8>  // b.any
    2cb4:	mov	x0, x7
    2cb8:	mov	w8, #0x0                   	// #0
    2cbc:	b	2ccc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xdcc>
    2cc0:	add	x0, x0, #0x10
    2cc4:	cmp	x10, x0
    2cc8:	b.eq	2d30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe30>  // b.none
    2ccc:	ldr	x5, [x0]
    2cd0:	cmn	x5, #0x3
    2cd4:	b.hi	2cc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xdc0>  // b.pmore
    2cd8:	mul	w8, w5, w18
    2cdc:	and	w12, w8, w9
    2ce0:	and	w8, w8, w9
    2ce4:	lsl	x12, x12, #4
    2ce8:	add	x14, x11, x12
    2cec:	ldr	x12, [x11, x12]
    2cf0:	cmp	x12, x5
    2cf4:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    2cf8:	mov	w15, #0x1                   	// #1
    2cfc:	mov	x13, #0x0                   	// #0
    2d00:	cmn	x12, #0x1
    2d04:	b.ne	3b6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1c6c>  // b.any
    2d08:	cmp	x13, #0x0
    2d0c:	ldr	w12, [x0, #8]
    2d10:	csel	x13, x13, x14, ne  // ne = any
    2d14:	add	x0, x0, #0x10
    2d18:	add	w4, w4, #0x1
    2d1c:	cmp	x10, x0
    2d20:	mov	w8, #0x1                   	// #1
    2d24:	str	x5, [x13]
    2d28:	str	w12, [x13, #8]
    2d2c:	b.ne	2ccc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xdcc>  // b.any
    2d30:	cbz	w8, 2d38 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe38>
    2d34:	str	w4, [sp, #288]
    2d38:	mov	x0, x7
    2d3c:	str	w6, [sp, #152]
    2d40:	str	x11, [sp, #160]
    2d44:	stp	w9, w2, [sp, #168]
    2d48:	str	x3, [sp, #176]
    2d4c:	bl	0 <_ZdlPvm>
    2d50:	ldr	w6, [sp, #152]
    2d54:	mov	w18, #0x25                  	// #37
    2d58:	ldp	w9, w2, [sp, #168]
    2d5c:	ldr	x11, [sp, #160]
    2d60:	ldr	x3, [sp, #176]
    2d64:	ldr	x0, [x24]
    2d68:	cmn	x0, #0x3
    2d6c:	b.hi	3ba0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ca0>  // b.pmore
    2d70:	mul	w5, w0, w18
    2d74:	ldr	w10, [sp, #288]
    2d78:	and	w1, w5, w9
    2d7c:	add	w10, w10, #0x1
    2d80:	and	w5, w5, w9
    2d84:	lsl	x1, x1, #4
    2d88:	add	x4, x11, x1
    2d8c:	ldr	x1, [x11, x1]
    2d90:	cmp	x0, x1
    2d94:	b.eq	2e28 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf28>  // b.none
    2d98:	mov	w8, #0x1                   	// #1
    2d9c:	mov	x7, #0x0                   	// #0
    2da0:	cmn	x1, #0x1
    2da4:	b.ne	3bcc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ccc>  // b.any
    2da8:	cbz	x7, 3978 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a78>
    2dac:	mov	x1, x0
    2db0:	mov	x4, x7
    2db4:	mov	w0, #0x0                   	// #0
    2db8:	ldr	x5, [x7]
    2dbc:	b	2adc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbdc>
    2dc0:	cbz	w10, 2dc8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xec8>
    2dc4:	str	w5, [sp, #288]
    2dc8:	mov	x0, x7
    2dcc:	str	w6, [sp, #152]
    2dd0:	str	x11, [sp, #160]
    2dd4:	stp	w9, w2, [sp, #168]
    2dd8:	str	x3, [sp, #176]
    2ddc:	bl	0 <_ZdlPvm>
    2de0:	ldr	w6, [sp, #152]
    2de4:	mov	w18, #0x25                  	// #37
    2de8:	ldp	w9, w2, [sp, #168]
    2dec:	ldr	x11, [sp, #160]
    2df0:	ldr	x3, [sp, #176]
    2df4:	ldr	x0, [x24]
    2df8:	cmn	x0, #0x3
    2dfc:	b.hi	3ba0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ca0>  // b.pmore
    2e00:	mul	w5, w0, w18
    2e04:	ldr	w10, [sp, #288]
    2e08:	and	w1, w5, w9
    2e0c:	add	w10, w10, #0x1
    2e10:	and	w5, w5, w9
    2e14:	lsl	x1, x1, #4
    2e18:	add	x4, x11, x1
    2e1c:	ldr	x1, [x11, x1]
    2e20:	cmp	x0, x1
    2e24:	b.ne	3900 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a00>  // b.any
    2e28:	mov	w0, #0x0                   	// #0
    2e2c:	str	w10, [sp, #288]
    2e30:	b	2ae8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbe8>
    2e34:	strb	w5, [x2, #16]
    2e38:	b	2870 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x970>
    2e3c:	sub	w0, w10, #0x1
    2e40:	mov	w8, #0x40                  	// #64
    2e44:	stp	x2, x6, [sp, #144]
    2e48:	orr	x0, x0, x0, lsr #1
    2e4c:	str	x7, [sp, #160]
    2e50:	orr	x0, x0, x0, lsr #2
    2e54:	str	w1, [sp, #168]
    2e58:	orr	x0, x0, x0, lsr #4
    2e5c:	orr	x0, x0, x0, lsr #8
    2e60:	orr	x0, x0, x0, lsr #16
    2e64:	add	x5, x0, #0x1
    2e68:	cmp	w5, w8
    2e6c:	csel	w5, w5, w8, cs  // cs = hs, nlast
    2e70:	str	w5, [sp, #104]
    2e74:	sub	w10, w5, #0x1
    2e78:	str	w10, [sp, #136]
    2e7c:	ubfiz	x8, x5, #4, #32
    2e80:	str	x8, [sp, #96]
    2e84:	mov	x0, x8
    2e88:	str	w5, [sp, #296]
    2e8c:	bl	0 <_Znwm>
    2e90:	str	x0, [sp, #280]
    2e94:	ldr	x7, [sp, #160]
    2e98:	str	xzr, [sp, #288]
    2e9c:	ldr	w5, [sp, #104]
    2ea0:	mov	x9, x0
    2ea4:	ldr	w10, [sp, #136]
    2ea8:	ldr	w1, [sp, #168]
    2eac:	and	w5, w10, w5
    2eb0:	ldr	x8, [sp, #96]
    2eb4:	ldp	x2, x6, [sp, #144]
    2eb8:	cbz	x7, 38b4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19b4>
    2ebc:	ubfiz	x1, x1, #4, #32
    2ec0:	add	x11, x7, x1
    2ec4:	cbnz	w5, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    2ec8:	add	x8, x0, x8
    2ecc:	mov	x12, #0xffffffffffffffff    	// #-1
    2ed0:	str	x12, [x0], #16
    2ed4:	cmp	x8, x0
    2ed8:	b.ne	2ed0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xfd0>  // b.any
    2edc:	cmp	x7, x11
    2ee0:	mov	x0, x7
    2ee4:	mov	w12, #0x0                   	// #0
    2ee8:	b.ne	2efc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xffc>  // b.any
    2eec:	b	2f6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x106c>
    2ef0:	add	x0, x0, #0x10
    2ef4:	cmp	x11, x0
    2ef8:	b.eq	2f64 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1064>  // b.none
    2efc:	ldr	x3, [x0]
    2f00:	cmn	x3, #0x3
    2f04:	b.hi	2ef0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xff0>  // b.pmore
    2f08:	mov	w4, #0x25                  	// #37
    2f0c:	mul	w4, w3, w4
    2f10:	and	w8, w4, w10
    2f14:	and	w4, w4, w10
    2f18:	lsl	x8, x8, #4
    2f1c:	add	x13, x9, x8
    2f20:	ldr	x8, [x9, x8]
    2f24:	cmp	x3, x8
    2f28:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    2f2c:	mov	w14, #0x1                   	// #1
    2f30:	mov	x12, #0x0                   	// #0
    2f34:	cmn	x8, #0x1
    2f38:	b.ne	3afc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1bfc>  // b.any
    2f3c:	cmp	x12, #0x0
    2f40:	ldr	w4, [x0, #8]
    2f44:	csel	x13, x13, x12, eq  // eq = none
    2f48:	add	x0, x0, #0x10
    2f4c:	add	w5, w5, #0x1
    2f50:	cmp	x11, x0
    2f54:	mov	w12, #0x1                   	// #1
    2f58:	str	x3, [x13]
    2f5c:	str	w4, [x13, #8]
    2f60:	b.ne	2efc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xffc>  // b.any
    2f64:	cbz	w12, 2f6c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x106c>
    2f68:	str	w5, [sp, #288]
    2f6c:	mov	x0, x7
    2f70:	stp	x2, x6, [sp, #96]
    2f74:	str	w10, [sp, #136]
    2f78:	str	x9, [sp, #144]
    2f7c:	bl	0 <_ZdlPvm>
    2f80:	ldp	x2, x6, [sp, #96]
    2f84:	ldr	w10, [sp, #136]
    2f88:	ldr	x9, [sp, #144]
    2f8c:	cmn	x2, #0x3
    2f90:	b.hi	3ba0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ca0>  // b.pmore
    2f94:	mov	w0, #0x25                  	// #37
    2f98:	ldr	w12, [sp, #288]
    2f9c:	mul	w1, w2, w0
    2fa0:	add	w12, w12, #0x1
    2fa4:	and	w5, w1, w10
    2fa8:	and	w1, w1, w10
    2fac:	lsl	x5, x5, #4
    2fb0:	add	x0, x9, x5
    2fb4:	ldr	x8, [x9, x5]
    2fb8:	cmp	x2, x8
    2fbc:	b.ne	39dc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1adc>  // b.any
    2fc0:	mov	w10, #0x0                   	// #0
    2fc4:	str	w12, [sp, #288]
    2fc8:	b	24fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x5fc>
    2fcc:	mov	w0, w0
    2fd0:	mov	x1, #0xffffffff            	// #4294967295
    2fd4:	add	x0, x0, #0x2
    2fd8:	orr	x0, x0, x0, lsr #1
    2fdc:	orr	x0, x0, x0, lsr #2
    2fe0:	orr	x0, x0, x0, lsr #4
    2fe4:	orr	x0, x0, x0, lsr #8
    2fe8:	orr	x20, x0, x0, lsr #16
    2fec:	orr	x20, x20, x0, lsr #32
    2ff0:	add	x20, x20, #0x1
    2ff4:	str	x20, [sp, #248]
    2ff8:	cmp	x20, x1
    2ffc:	b.hi	329c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x139c>  // b.pmore
    3000:	add	x0, x20, x20, lsl #1
    3004:	lsl	x0, x0, #3
    3008:	bl	0 <malloc>
    300c:	mov	w18, #0x25                  	// #37
    3010:	mov	x23, x0
    3014:	cbz	x0, 32b8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x13b8>
    3018:	mov	w1, #0x18                  	// #24
    301c:	mov	x2, x23
    3020:	ldr	x0, [x19, #176]
    3024:	umull	x21, w21, w1
    3028:	add	x8, x0, x21
    302c:	mov	x1, x0
    3030:	cmp	x0, x8
    3034:	b.eq	3058 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1158>  // b.none
    3038:	ldp	x4, x5, [x1]
    303c:	stp	x4, x5, [x2]
    3040:	add	x1, x1, #0x18
    3044:	ldur	x3, [x1, #-8]
    3048:	str	x3, [x2, #16]
    304c:	cmp	x8, x1
    3050:	add	x2, x2, #0x18
    3054:	b.ne	3038 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1138>  // b.any
    3058:	add	x1, x19, #0xc0
    305c:	cmp	x0, x1
    3060:	b.eq	3078 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1178>  // b.none
    3064:	bl	0 <free>
    3068:	ldr	w21, [x19, #184]
    306c:	mov	w2, #0x18                  	// #24
    3070:	mov	w18, #0x25                  	// #37
    3074:	umull	x21, w21, w2
    3078:	str	x23, [x19, #176]
    307c:	str	w20, [x19, #188]
    3080:	b	2328 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x428>
    3084:	mov	w10, w5
    3088:	lsr	w0, w5, #1
    308c:	orr	x0, x0, x10
    3090:	mov	w10, #0x40                  	// #64
    3094:	stp	x2, x6, [sp, #144]
    3098:	orr	x0, x0, x0, lsr #2
    309c:	str	x7, [sp, #160]
    30a0:	orr	x0, x0, x0, lsr #4
    30a4:	stp	w1, w8, [sp, #168]
    30a8:	str	x9, [sp, #176]
    30ac:	orr	x0, x0, x0, lsr #8
    30b0:	orr	x0, x0, x0, lsr #16
    30b4:	add	x5, x0, #0x1
    30b8:	cmp	w5, w10
    30bc:	csel	w5, w5, w10, cs  // cs = hs, nlast
    30c0:	str	w5, [sp, #104]
    30c4:	sub	w10, w5, #0x1
    30c8:	str	w10, [sp, #136]
    30cc:	ubfiz	x13, x5, #4, #32
    30d0:	str	x13, [sp, #96]
    30d4:	mov	x0, x13
    30d8:	str	w5, [sp, #296]
    30dc:	bl	0 <_Znwm>
    30e0:	str	x0, [sp, #280]
    30e4:	ldr	x7, [sp, #160]
    30e8:	str	xzr, [sp, #288]
    30ec:	ldr	w5, [sp, #104]
    30f0:	mov	x11, x0
    30f4:	ldr	w10, [sp, #136]
    30f8:	ldp	w1, w8, [sp, #168]
    30fc:	and	w5, w5, w10
    3100:	ldr	x13, [sp, #96]
    3104:	ldp	x2, x6, [sp, #144]
    3108:	ldr	x9, [sp, #176]
    310c:	cbz	x7, 38d0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19d0>
    3110:	ubfiz	x1, x1, #4, #32
    3114:	add	x12, x7, x1
    3118:	cbnz	w5, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    311c:	add	x13, x0, x13
    3120:	str	x9, [x0], #16
    3124:	cmp	x13, x0
    3128:	b.ne	3120 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1220>  // b.any
    312c:	mov	x0, x7
    3130:	mov	w13, #0x0                   	// #0
    3134:	b	3144 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1244>
    3138:	add	x0, x0, #0x10
    313c:	cmp	x12, x0
    3140:	b.eq	31ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x12ac>  // b.none
    3144:	ldr	x3, [x0]
    3148:	cmn	x3, #0x3
    314c:	b.hi	3138 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1238>  // b.pmore
    3150:	mov	w4, #0x25                  	// #37
    3154:	mul	w4, w3, w4
    3158:	and	w9, w4, w10
    315c:	and	w4, w4, w10
    3160:	lsl	x9, x9, #4
    3164:	add	x14, x11, x9
    3168:	ldr	x9, [x11, x9]
    316c:	cmp	x9, x3
    3170:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    3174:	mov	w15, #0x1                   	// #1
    3178:	mov	x13, #0x0                   	// #0
    317c:	cmn	x9, #0x1
    3180:	b.ne	3a4c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b4c>  // b.any
    3184:	cmp	x13, #0x0
    3188:	ldr	w4, [x0, #8]
    318c:	csel	x14, x14, x13, eq  // eq = none
    3190:	add	x0, x0, #0x10
    3194:	add	w5, w5, #0x1
    3198:	cmp	x12, x0
    319c:	mov	w13, #0x1                   	// #1
    31a0:	str	x3, [x14]
    31a4:	str	w4, [x14, #8]
    31a8:	b.ne	3144 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1244>  // b.any
    31ac:	cbz	w13, 31b4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x12b4>
    31b0:	str	w5, [sp, #288]
    31b4:	mov	x0, x7
    31b8:	stp	x2, x6, [sp, #96]
    31bc:	str	w10, [sp, #136]
    31c0:	str	w8, [sp, #144]
    31c4:	str	x11, [sp, #152]
    31c8:	bl	0 <_ZdlPvm>
    31cc:	ldp	x2, x6, [sp, #96]
    31d0:	ldr	w10, [sp, #136]
    31d4:	ldr	w8, [sp, #144]
    31d8:	ldr	x11, [sp, #152]
    31dc:	and	w1, w10, w8
    31e0:	ldr	w12, [sp, #288]
    31e4:	and	w8, w10, w8
    31e8:	lsl	x1, x1, #4
    31ec:	mov	w3, w8
    31f0:	add	x0, x11, x1
    31f4:	add	w12, w12, #0x1
    31f8:	mov	w5, #0x1                   	// #1
    31fc:	ldr	x7, [x11, x1]
    3200:	mov	x1, #0x0                   	// #0
    3204:	cmp	x2, x7
    3208:	b.eq	2fc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10c0>  // b.none
    320c:	cmn	x7, #0x1
    3210:	b.ne	3b38 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1c38>  // b.any
    3214:	cbz	x1, 3b30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1c30>
    3218:	mov	x0, x1
    321c:	mov	w10, #0x0                   	// #0
    3220:	ldr	x1, [x1]
    3224:	b	24f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x5f0>
    3228:	cmp	x21, x5
    322c:	b.hi	3cb0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1db0>  // b.pmore
    3230:	mov	x1, x21
    3234:	b.eq	2898 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x998>  // b.none
    3238:	ldr	x0, [x1]
    323c:	cmn	x0, #0x3
    3240:	b.ls	2898 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x998>  // b.plast
    3244:	add	x1, x1, #0x10
    3248:	cmp	x1, x5
    324c:	b.ne	3238 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1338>  // b.any
    3250:	b	2898 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x998>
    3254:	mov	w15, #0x1                   	// #1
    3258:	mov	x13, #0x0                   	// #0
    325c:	cmn	x12, #0x1
    3260:	b.ne	3ac0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1bc0>  // b.any
    3264:	cmp	x13, #0x0
    3268:	ldr	w12, [x0, #8]
    326c:	csel	x13, x13, x14, ne  // ne = any
    3270:	add	w5, w5, #0x1
    3274:	mov	w10, #0x1                   	// #1
    3278:	str	x4, [x13]
    327c:	str	w12, [x13, #8]
    3280:	b	2bb8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcb8>
    3284:	mov	x1, x21
    3288:	mov	x0, x24
    328c:	str	x4, [sp, #96]
    3290:	bl	578 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairImN4llvm3mca13ResourceUsageEESt6vectorIS6_SaIS6_EEEENS0_5__ops15_Iter_comp_iterIZNS4_L23initializeUsedResourcesERNS4_9InstrDescERKNS3_16MCSchedClassDescERKNS3_15MCSubtargetInfoENS3_8ArrayRefImEEEUlRKS6_SP_E_EEEvT_SS_T0_.isra.0>
    3294:	ldr	x4, [sp, #96]
    3298:	b	2244 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x344>
    329c:	mov	w0, #0xffffffe8            	// #-24
    32a0:	mov	w20, #0xffffffff            	// #-1
    32a4:	movk	x0, #0x17, lsl #32
    32a8:	bl	0 <malloc>
    32ac:	mov	w18, #0x25                  	// #37
    32b0:	mov	x23, x0
    32b4:	cbnz	x0, 3018 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1118>
    32b8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    32bc:	mov	w1, #0x1                   	// #1
    32c0:	add	x0, x0, #0x0
    32c4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    32c8:	mov	x23, #0x0                   	// #0
    32cc:	ldr	w21, [x19, #184]
    32d0:	mov	w18, #0x25                  	// #37
    32d4:	b	3018 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1118>
    32d8:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
    32dc:	ldr	x2, [sp, #112]
    32e0:	ldr	x0, [x0]
    32e4:	ldr	x1, [sp, #96]
    32e8:	stp	x1, x6, [x2, #296]
    32ec:	ldrb	w0, [x0]
    32f0:	ldr	x1, [sp, #208]
    32f4:	str	x1, [x2, #288]
    32f8:	cbz	w0, 29c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xac8>
    32fc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3300:	add	x0, x0, #0x0
    3304:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    3308:	tst	w0, #0xff
    330c:	b.eq	36f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x17f8>  // b.none
    3310:	ldr	x1, [sp, #112]
    3314:	mov	w0, #0x18                  	// #24
    3318:	ldr	w23, [x1, #184]
    331c:	ldr	x19, [x1, #176]
    3320:	umaddl	x23, w23, w0, x19
    3324:	cmp	x19, x23
    3328:	b.eq	3af4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1bf4>  // b.none
    332c:	adrp	x25, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3330:	adrp	x22, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3334:	add	x25, x25, #0x0
    3338:	add	x22, x22, #0x0
    333c:	add	x20, sp, #0xf8
    3340:	adrp	x28, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3344:	adrp	x27, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3348:	adrp	x26, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    334c:	bl	0 <_ZN4llvm4dbgsEv>
    3350:	mov	x1, x0
    3354:	ldp	x2, x3, [x0, #16]
    3358:	sub	x2, x2, x3
    335c:	cmp	x2, #0xf
    3360:	b.ls	3770 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1870>  // b.plast
    3364:	ldp	x4, x5, [x25]
    3368:	stp	x4, x5, [x3]
    336c:	ldr	x0, [x0, #24]
    3370:	add	x0, x0, #0x10
    3374:	str	x0, [x1, #24]
    3378:	ldr	x3, [x19]
    337c:	mov	w2, #0x1                   	// #1
    3380:	stp	x3, xzr, [sp, #248]
    3384:	mov	w3, #0x10                  	// #16
    3388:	mov	x0, x1
    338c:	mov	x1, x20
    3390:	str	w3, [sp, #264]
    3394:	strh	w2, [sp, #268]
    3398:	strb	w2, [sp, #270]
    339c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    33a0:	ldp	x1, x3, [x0, #16]
    33a4:	mov	x2, x0
    33a8:	sub	x1, x1, x3
    33ac:	cmp	x1, #0x1
    33b0:	b.ls	37e4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x18e4>  // b.plast
    33b4:	mov	w0, #0x202c                	// #8236
    33b8:	strh	w0, [x3]
    33bc:	ldr	x0, [x2, #24]
    33c0:	add	x0, x0, #0x2
    33c4:	str	x0, [x2, #24]
    33c8:	ldr	x1, [x2, #16]
    33cc:	sub	x1, x1, x0
    33d0:	cmp	x1, #0x8
    33d4:	b.ls	37cc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x18cc>  // b.plast
    33d8:	add	x1, x28, #0x0
    33dc:	ldr	x3, [x1]
    33e0:	str	x3, [x0]
    33e4:	ldrb	w1, [x1, #8]
    33e8:	strb	w1, [x0, #8]
    33ec:	ldr	x0, [x2, #24]
    33f0:	add	x0, x0, #0x9
    33f4:	str	x0, [x2, #24]
    33f8:	ldrb	w1, [x19, #16]
    33fc:	mov	x0, x2
    3400:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    3404:	mov	x2, x0
    3408:	ldp	x1, x3, [x0, #16]
    340c:	sub	x1, x1, x3
    3410:	cmp	x1, #0x1
    3414:	b.ls	37b4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x18b4>  // b.plast
    3418:	mov	w0, #0x202c                	// #8236
    341c:	strh	w0, [x3]
    3420:	ldr	x0, [x2, #24]
    3424:	add	x0, x0, #0x2
    3428:	str	x0, [x2, #24]
    342c:	ldr	x1, [x2, #16]
    3430:	sub	x1, x1, x0
    3434:	cmp	x1, #0x6
    3438:	b.ls	379c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x189c>  // b.plast
    343c:	add	x1, x27, #0x0
    3440:	ldr	w3, [x1]
    3444:	ldur	w1, [x1, #3]
    3448:	str	w3, [x0]
    344c:	stur	w1, [x0, #3]
    3450:	ldr	x0, [x2, #24]
    3454:	add	x0, x0, #0x7
    3458:	str	x0, [x2, #24]
    345c:	ldr	w1, [x19, #20]
    3460:	mov	x0, x2
    3464:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3468:	mov	x2, x0
    346c:	ldp	x1, x3, [x0, #16]
    3470:	sub	x1, x1, x3
    3474:	cmp	x1, #0x1
    3478:	b.ls	3784 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1884>  // b.plast
    347c:	mov	w0, #0x202c                	// #8236
    3480:	strh	w0, [x3]
    3484:	ldr	x0, [x2, #24]
    3488:	add	x0, x0, #0x2
    348c:	str	x0, [x2, #24]
    3490:	ldr	x1, [x2, #16]
    3494:	sub	x1, x1, x0
    3498:	cmp	x1, #0x2
    349c:	b.ls	3710 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1810>  // b.plast
    34a0:	add	x1, x26, #0x0
    34a4:	ldrh	w3, [x1]
    34a8:	ldrb	w1, [x1, #2]
    34ac:	strh	w3, [x0]
    34b0:	strb	w1, [x0, #2]
    34b4:	ldr	x0, [x2, #24]
    34b8:	add	x0, x0, #0x3
    34bc:	str	x0, [x2, #24]
    34c0:	mov	x0, x2
    34c4:	ldp	w1, w2, [x19, #8]
    34c8:	sub	w1, w2, w1
    34cc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    34d0:	mov	x1, x0
    34d4:	ldp	x3, x2, [x0, #16]
    34d8:	cmp	x2, x3
    34dc:	b.cs	3744 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1844>  // b.hs, b.nlast
    34e0:	add	x0, x2, #0x1
    34e4:	str	x0, [x1, #24]
    34e8:	mov	w0, #0xa                   	// #10
    34ec:	strb	w0, [x2]
    34f0:	add	x19, x19, #0x18
    34f4:	cmp	x23, x19
    34f8:	b.ne	334c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x144c>  // b.any
    34fc:	ldr	x0, [sp, #112]
    3500:	ldr	x19, [x0, #288]
    3504:	cbz	x19, 35e8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x16e8>
    3508:	bl	0 <_ZN4llvm4dbgsEv>
    350c:	neg	x22, x19
    3510:	ldp	x3, x2, [x0, #16]
    3514:	adrp	x23, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3518:	and	x22, x22, x19
    351c:	add	x23, x23, #0x0
    3520:	mov	x1, x0
    3524:	mov	w27, #0x10                  	// #16
    3528:	mov	w25, #0x1                   	// #1
    352c:	mov	w26, #0xa                   	// #10
    3530:	sub	x3, x3, x2
    3534:	cmp	x3, #0xd
    3538:	b.ls	35c0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x16c0>  // b.plast
    353c:	ldr	x0, [x23]
    3540:	str	x0, [x2]
    3544:	ldur	x0, [x23, #6]
    3548:	stur	x0, [x2, #6]
    354c:	ldr	x0, [x1, #24]
    3550:	add	x0, x0, #0xe
    3554:	str	x0, [x1, #24]
    3558:	mov	x0, x1
    355c:	mov	x1, x20
    3560:	stp	x22, xzr, [sp, #248]
    3564:	str	w27, [sp, #264]
    3568:	strh	w25, [sp, #268]
    356c:	strb	w25, [sp, #270]
    3570:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    3574:	ldp	x3, x2, [x0, #16]
    3578:	mov	x1, x0
    357c:	cmp	x2, x3
    3580:	b.cs	35d4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x16d4>  // b.hs, b.nlast
    3584:	add	x0, x2, #0x1
    3588:	str	x0, [x1, #24]
    358c:	strb	w26, [x2]
    3590:	cmp	x22, x19
    3594:	eor	x22, x22, x19
    3598:	b.eq	35e8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x16e8>  // b.none
    359c:	bl	0 <_ZN4llvm4dbgsEv>
    35a0:	mov	x19, x22
    35a4:	ldp	x3, x2, [x0, #16]
    35a8:	neg	x22, x19
    35ac:	and	x22, x22, x19
    35b0:	mov	x1, x0
    35b4:	sub	x3, x3, x2
    35b8:	cmp	x3, #0xd
    35bc:	b.hi	353c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x163c>  // b.pmore
    35c0:	mov	x1, x23
    35c4:	mov	x2, #0xe                   	// #14
    35c8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    35cc:	mov	x1, x0
    35d0:	b	3558 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1658>
    35d4:	mov	w1, #0xa                   	// #10
    35d8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    35dc:	cmp	x22, x19
    35e0:	eor	x22, x22, x19
    35e4:	b.ne	359c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x169c>  // b.any
    35e8:	bl	0 <_ZN4llvm4dbgsEv>
    35ec:	mov	x1, x0
    35f0:	ldp	x3, x2, [x0, #16]
    35f4:	sub	x3, x3, x2
    35f8:	cmp	x3, #0xd
    35fc:	b.ls	3a00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b00>  // b.plast
    3600:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3604:	add	x0, x0, #0x0
    3608:	ldr	x3, [x0]
    360c:	str	x3, [x2]
    3610:	ldur	x0, [x0, #6]
    3614:	stur	x0, [x2, #6]
    3618:	ldr	x0, [x1, #24]
    361c:	add	x0, x0, #0xe
    3620:	str	x0, [x1, #24]
    3624:	ldr	x0, [sp, #112]
    3628:	mov	w2, #0x1                   	// #1
    362c:	mov	w3, #0x10                  	// #16
    3630:	str	w3, [sp, #264]
    3634:	strh	w2, [sp, #268]
    3638:	ldr	x4, [x0, #296]
    363c:	mov	x0, x1
    3640:	mov	x1, x20
    3644:	stp	x4, xzr, [sp, #248]
    3648:	strb	w2, [sp, #270]
    364c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    3650:	ldp	x3, x2, [x0, #16]
    3654:	mov	x1, x0
    3658:	cmp	x2, x3
    365c:	b.cs	3c24 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d24>  // b.hs, b.nlast
    3660:	add	x0, x2, #0x1
    3664:	str	x0, [x1, #24]
    3668:	mov	w0, #0xa                   	// #10
    366c:	strb	w0, [x2]
    3670:	bl	0 <_ZN4llvm4dbgsEv>
    3674:	mov	x2, x0
    3678:	ldp	x3, x1, [x0, #16]
    367c:	sub	x3, x3, x1
    3680:	cmp	x3, #0xd
    3684:	b.ls	3c0c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d0c>  // b.plast
    3688:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    368c:	add	x0, x0, #0x0
    3690:	ldr	x3, [x0]
    3694:	str	x3, [x1]
    3698:	ldur	x0, [x0, #6]
    369c:	stur	x0, [x1, #6]
    36a0:	ldr	x0, [x2, #24]
    36a4:	add	x0, x0, #0xe
    36a8:	str	x0, [x2, #24]
    36ac:	ldr	x0, [sp, #112]
    36b0:	mov	w3, #0x10                  	// #16
    36b4:	mov	x1, x20
    36b8:	str	w3, [sp, #264]
    36bc:	ldr	x4, [x0, #304]
    36c0:	mov	x0, x2
    36c4:	mov	w2, #0x1                   	// #1
    36c8:	stp	x4, xzr, [sp, #248]
    36cc:	strh	w2, [sp, #268]
    36d0:	strb	w2, [sp, #270]
    36d4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
    36d8:	ldp	x3, x2, [x0, #16]
    36dc:	mov	x1, x0
    36e0:	cmp	x2, x3
    36e4:	b.cs	3c00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d00>  // b.hs, b.nlast
    36e8:	add	x0, x2, #0x1
    36ec:	str	x0, [x1, #24]
    36f0:	mov	w0, #0xa                   	// #10
    36f4:	strb	w0, [x2]
    36f8:	ldr	w0, [sp, #216]
    36fc:	cmp	w0, #0x40
    3700:	b.ls	29c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xac8>  // b.plast
    3704:	ldr	x0, [sp, #208]
    3708:	cbz	x0, 29c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xac8>
    370c:	b	29c4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xac4>
    3710:	mov	x0, x2
    3714:	mov	x2, #0x3                   	// #3
    3718:	add	x1, x26, #0x0
    371c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3720:	mov	x2, x0
    3724:	mov	x0, x2
    3728:	ldp	w1, w2, [x19, #8]
    372c:	sub	w1, w2, w1
    3730:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3734:	mov	x1, x0
    3738:	ldp	x3, x2, [x0, #16]
    373c:	cmp	x2, x3
    3740:	b.cc	34e0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15e0>  // b.lo, b.ul, b.last
    3744:	add	x19, x19, #0x18
    3748:	mov	w1, #0xa                   	// #10
    374c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3750:	cmp	x23, x19
    3754:	b.eq	34fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15fc>  // b.none
    3758:	bl	0 <_ZN4llvm4dbgsEv>
    375c:	mov	x1, x0
    3760:	ldp	x2, x3, [x0, #16]
    3764:	sub	x2, x2, x3
    3768:	cmp	x2, #0xf
    376c:	b.hi	3364 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1464>  // b.pmore
    3770:	mov	x1, x25
    3774:	mov	x2, #0x10                  	// #16
    3778:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    377c:	mov	x1, x0
    3780:	b	3378 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1478>
    3784:	mov	x2, #0x2                   	// #2
    3788:	mov	x1, x22
    378c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3790:	mov	x2, x0
    3794:	ldr	x0, [x0, #24]
    3798:	b	3490 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1590>
    379c:	mov	x0, x2
    37a0:	mov	x2, #0x7                   	// #7
    37a4:	add	x1, x27, #0x0
    37a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    37ac:	mov	x2, x0
    37b0:	b	345c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x155c>
    37b4:	mov	x2, #0x2                   	// #2
    37b8:	mov	x1, x22
    37bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    37c0:	mov	x2, x0
    37c4:	ldr	x0, [x0, #24]
    37c8:	b	342c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x152c>
    37cc:	mov	x0, x2
    37d0:	mov	x2, #0x9                   	// #9
    37d4:	add	x1, x28, #0x0
    37d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    37dc:	mov	x2, x0
    37e0:	b	33f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x14f8>
    37e4:	mov	x2, #0x2                   	// #2
    37e8:	mov	x1, x22
    37ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    37f0:	mov	x2, x0
    37f4:	ldr	x0, [x0, #24]
    37f8:	b	33c8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x14c8>
    37fc:	cbnz	w5, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    3800:	add	x4, x0, x4
    3804:	mov	x1, #0xffffffffffffffff    	// #-1
    3808:	str	x1, [x0], #16
    380c:	cmp	x4, x0
    3810:	b.ne	3808 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1908>  // b.any
    3814:	b	2df4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xef4>
    3818:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    381c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3820:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3824:	add	x3, x3, #0x0
    3828:	add	x1, x1, #0x0
    382c:	add	x0, x0, #0x0
    3830:	mov	w2, #0xfa                  	// #250
    3834:	bl	0 <__assert_fail>
    3838:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    383c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3840:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3844:	add	x3, x3, #0x0
    3848:	add	x1, x1, #0x0
    384c:	add	x0, x0, #0x0
    3850:	mov	w2, #0x156                 	// #342
    3854:	bl	0 <__assert_fail>
    3858:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    385c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3860:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3864:	add	x3, x3, #0x0
    3868:	add	x1, x1, #0x0
    386c:	add	x0, x0, #0x0
    3870:	mov	w2, #0x154                 	// #340
    3874:	bl	0 <__assert_fail>
    3878:	add	w0, w0, w10
    387c:	cmp	x4, #0x0
    3880:	and	w11, w5, w0
    3884:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    3888:	csel	x9, x9, x4, eq  // eq = none
    388c:	add	w10, w10, #0x1
    3890:	lsl	x4, x11, #4
    3894:	and	w0, w5, w0
    3898:	add	x11, x7, x4
    389c:	ldr	x8, [x7, x4]
    38a0:	cmp	x1, x8
    38a4:	b.ne	3bc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1cc0>  // b.any
    38a8:	ldr	w0, [x11, #8]
    38ac:	sub	w19, w19, w0
    38b0:	b	2440 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x540>
    38b4:	cbnz	w5, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    38b8:	add	x8, x0, x8
    38bc:	mov	x1, #0xffffffffffffffff    	// #-1
    38c0:	str	x1, [x0], #16
    38c4:	cmp	x8, x0
    38c8:	b.ne	38c0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19c0>  // b.any
    38cc:	b	2f8c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x108c>
    38d0:	cbnz	w5, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    38d4:	add	x13, x0, x13
    38d8:	str	x9, [x0], #16
    38dc:	cmp	x13, x0
    38e0:	b.ne	38d8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19d8>  // b.any
    38e4:	b	31dc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x12dc>
    38e8:	cbnz	w4, 3c90 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1d90>
    38ec:	add	x5, x0, x5
    38f0:	str	x8, [x0], #16
    38f4:	cmp	x5, x0
    38f8:	b.ne	38f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x19f0>  // b.any
    38fc:	b	2d64 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe64>
    3900:	mov	w8, #0x1                   	// #1
    3904:	mov	x7, #0x0                   	// #0
    3908:	cmn	x1, #0x1
    390c:	b.eq	2da8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xea8>  // b.none
    3910:	add	w5, w5, w8
    3914:	cmp	x7, #0x0
    3918:	and	w12, w5, w9
    391c:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    3920:	csel	x7, x7, x4, ne  // ne = any
    3924:	add	w8, w8, #0x1
    3928:	lsl	x1, x12, #4
    392c:	and	w5, w5, w9
    3930:	add	x4, x11, x1
    3934:	ldr	x1, [x11, x1]
    3938:	cmp	x0, x1
    393c:	b.eq	2e28 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf28>  // b.none
    3940:	b	3908 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1a08>
    3944:	add	w3, w12, w3
    3948:	cmp	x11, #0x0
    394c:	and	w4, w5, w3
    3950:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    3954:	csel	x11, x11, x0, ne  // ne = any
    3958:	add	w12, w12, #0x1
    395c:	lsl	x4, x4, #4
    3960:	and	w3, w5, w3
    3964:	add	x0, x7, x4
    3968:	ldr	x9, [x7, x4]
    396c:	cmp	x2, x9
    3970:	b.eq	20dc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1dc>  // b.none
    3974:	b	24b0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x5b0>
    3978:	mov	x1, x0
    397c:	str	w10, [sp, #288]
    3980:	b	2af0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xbf0>
    3984:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3988:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    398c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3990:	add	x3, x3, #0x0
    3994:	add	x1, x1, #0x0
    3998:	add	x0, x0, #0x0
    399c:	mov	w2, #0x64                  	// #100
    39a0:	bl	0 <__assert_fail>
    39a4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    39a8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    39ac:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    39b0:	add	x3, x3, #0x0
    39b4:	add	x1, x1, #0x0
    39b8:	add	x0, x0, #0x0
    39bc:	mov	w2, #0x59d                 	// #1437
    39c0:	bl	0 <__assert_fail>
    39c4:	ldr	x0, [sp, #112]
    39c8:	mov	x6, #0x0                   	// #0
    39cc:	str	xzr, [sp, #96]
    39d0:	ldr	x23, [x0, #176]
    39d4:	ldr	w0, [x0, #184]
    39d8:	b	280c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x90c>
    39dc:	mov	w7, #0x1                   	// #1
    39e0:	mov	x5, #0x0                   	// #0
    39e4:	cmn	x8, #0x1
    39e8:	b.ne	3a18 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1b18>  // b.any
    39ec:	cbz	x5, 3b30 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1c30>
    39f0:	mov	x0, x5
    39f4:	mov	w10, #0x0                   	// #0
    39f8:	ldr	x1, [x5]
    39fc:	b	24f0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x5f0>
    3a00:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3a04:	add	x1, x1, #0x0
    3a08:	mov	x2, #0xe                   	// #14
    3a0c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3a10:	mov	x1, x0
    3a14:	b	3624 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1724>
    3a18:	add	w1, w7, w1
    3a1c:	cmp	x5, #0x0
    3a20:	and	w3, w10, w1
    3a24:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    3a28:	csel	x5, x5, x0, ne  // ne = any
    3a2c:	add	w7, w7, #0x1
    3a30:	lsl	x3, x3, #4
    3a34:	and	w1, w10, w1
    3a38:	add	x0, x9, x3
    3a3c:	ldr	x8, [x9, x3]
    3a40:	cmp	x2, x8
    3a44:	b.eq	2fc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10c0>  // b.none
    3a48:	b	39e4 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1ae4>
    3a4c:	add	w4, w4, w15
    3a50:	cmp	x13, #0x0
    3a54:	and	w16, w10, w4
    3a58:	ccmn	x9, #0x2, #0x0, eq  // eq = none
    3a5c:	csel	x13, x13, x14, ne  // ne = any
    3a60:	add	w15, w15, #0x1
    3a64:	lsl	x9, x16, #4
    3a68:	and	w4, w10, w4
    3a6c:	add	x14, x11, x9
    3a70:	ldr	x9, [x11, x9]
    3a74:	cmp	x3, x9
    3a78:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    3a7c:	b	317c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x127c>
    3a80:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3a84:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3a88:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3a8c:	add	x3, x3, #0x0
    3a90:	add	x1, x1, #0x0
    3a94:	add	x0, x0, #0x0
    3a98:	mov	w2, #0x657                 	// #1623
    3a9c:	bl	0 <__assert_fail>
    3aa0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3aa4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3aa8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3aac:	add	x3, x3, #0x0
    3ab0:	add	x1, x1, #0x0
    3ab4:	add	x0, x0, #0x0
    3ab8:	mov	w2, #0x43                  	// #67
    3abc:	bl	0 <__assert_fail>
    3ac0:	add	w10, w10, w15
    3ac4:	cmp	x13, #0x0
    3ac8:	and	w16, w10, w9
    3acc:	ccmn	x12, #0x2, #0x0, eq  // eq = none
    3ad0:	csel	x13, x13, x14, ne  // ne = any
    3ad4:	add	w15, w15, #0x1
    3ad8:	lsl	x12, x16, #4
    3adc:	and	w10, w10, w9
    3ae0:	add	x14, x11, x12
    3ae4:	ldr	x12, [x11, x12]
    3ae8:	cmp	x4, x12
    3aec:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    3af0:	b	325c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x135c>
    3af4:	add	x20, sp, #0xf8
    3af8:	b	34fc <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x15fc>
    3afc:	add	w4, w4, w14
    3b00:	cmp	x12, #0x0
    3b04:	and	w15, w10, w4
    3b08:	ccmn	x8, #0x2, #0x0, eq  // eq = none
    3b0c:	csel	x12, x12, x13, ne  // ne = any
    3b10:	add	w14, w14, #0x1
    3b14:	lsl	x8, x15, #4
    3b18:	and	w4, w10, w4
    3b1c:	add	x13, x9, x8
    3b20:	ldr	x8, [x9, x8]
    3b24:	cmp	x3, x8
    3b28:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    3b2c:	b	2f34 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1034>
    3b30:	str	w12, [sp, #288]
    3b34:	b	2504 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x604>
    3b38:	add	w3, w5, w3
    3b3c:	cmp	x1, #0x0
    3b40:	and	w4, w10, w3
    3b44:	ccmn	x7, #0x2, #0x0, eq  // eq = none
    3b48:	csel	x1, x1, x0, ne  // ne = any
    3b4c:	add	w5, w5, #0x1
    3b50:	lsl	x4, x4, #4
    3b54:	and	w3, w10, w3
    3b58:	add	x0, x11, x4
    3b5c:	ldr	x7, [x11, x4]
    3b60:	cmp	x2, x7
    3b64:	b.eq	2fc0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x10c0>  // b.none
    3b68:	b	320c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x130c>
    3b6c:	add	w8, w15, w8
    3b70:	cmp	x13, #0x0
    3b74:	and	w16, w8, w9
    3b78:	ccmn	x12, #0x2, #0x0, eq  // eq = none
    3b7c:	csel	x13, x13, x14, ne  // ne = any
    3b80:	add	w15, w15, #0x1
    3b84:	lsl	x12, x16, #4
    3b88:	and	w8, w8, w9
    3b8c:	add	x14, x11, x12
    3b90:	ldr	x12, [x11, x12]
    3b94:	cmp	x5, x12
    3b98:	b.eq	2bf0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xcf0>  // b.none
    3b9c:	b	2d00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xe00>
    3ba0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ba4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ba8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3bac:	add	x3, x3, #0x0
    3bb0:	add	x1, x1, #0x0
    3bb4:	add	x0, x0, #0x0
    3bb8:	mov	w2, #0x250                 	// #592
    3bbc:	bl	0 <__assert_fail>
    3bc0:	mov	x4, x9
    3bc4:	mov	x9, x11
    3bc8:	b	2a9c <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xb9c>
    3bcc:	add	w5, w8, w5
    3bd0:	cmp	x7, #0x0
    3bd4:	and	w12, w5, w9
    3bd8:	ccmn	x1, #0x2, #0x0, eq  // eq = none
    3bdc:	csel	x7, x7, x4, ne  // ne = any
    3be0:	add	w8, w8, #0x1
    3be4:	lsl	x1, x12, #4
    3be8:	and	w5, w5, w9
    3bec:	add	x4, x11, x1
    3bf0:	ldr	x1, [x11, x1]
    3bf4:	cmp	x0, x1
    3bf8:	b.eq	2e28 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xf28>  // b.none
    3bfc:	b	2da0 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0xea0>
    3c00:	mov	w1, #0xa                   	// #10
    3c04:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3c08:	b	36f8 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x17f8>
    3c0c:	mov	x2, #0xe                   	// #14
    3c10:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c14:	add	x1, x1, #0x0
    3c18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3c1c:	mov	x2, x0
    3c20:	b	36ac <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x17ac>
    3c24:	mov	w1, #0xa                   	// #10
    3c28:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3c2c:	b	3670 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x1770>
    3c30:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c34:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c38:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c3c:	add	x3, x3, #0x0
    3c40:	add	x1, x1, #0x0
    3c44:	add	x0, x0, #0x0
    3c48:	mov	w2, #0x117                 	// #279
    3c4c:	bl	0 <__assert_fail>
    3c50:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c54:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c58:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c5c:	add	x3, x3, #0x0
    3c60:	add	x1, x1, #0x0
    3c64:	add	x0, x0, #0x0
    3c68:	mov	w2, #0xa7                  	// #167
    3c6c:	bl	0 <__assert_fail>
    3c70:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c74:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c78:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c7c:	add	x3, x3, #0x0
    3c80:	add	x1, x1, #0x0
    3c84:	add	x0, x0, #0x0
    3c88:	mov	w2, #0x141                 	// #321
    3c8c:	bl	0 <__assert_fail>
    3c90:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c94:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c98:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3c9c:	add	x3, x3, #0x0
    3ca0:	add	x1, x1, #0x0
    3ca4:	add	x0, x0, #0x0
    3ca8:	mov	w2, #0x15b                 	// #347
    3cac:	bl	0 <__assert_fail>
    3cb0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3cb4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3cb8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3cbc:	add	x3, x3, #0x0
    3cc0:	add	x1, x1, #0x0
    3cc4:	add	x0, x0, #0x0
    3cc8:	mov	w2, #0x4e0                 	// #1248
    3ccc:	bl	0 <__assert_fail>
    3cd0:	mov	w20, #0x0                   	// #0
    3cd4:	b	2108 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE+0x208>
    3cd8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3cdc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ce0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ce4:	add	x3, x3, #0x0
    3ce8:	add	x1, x1, #0x0
    3cec:	add	x0, x0, #0x0
    3cf0:	mov	w2, #0x75                  	// #117
    3cf4:	bl	0 <__assert_fail>

0000000000003cf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>:
    3cf8:	stp	x29, x30, [sp, #-224]!
    3cfc:	mov	x29, sp
    3d00:	stp	x23, x24, [sp, #48]
    3d04:	mov	x24, x0
    3d08:	ldr	x0, [x0]
    3d0c:	stp	x19, x20, [sp, #16]
    3d10:	mov	x19, x1
    3d14:	stp	x21, x22, [sp, #32]
    3d18:	ldr	x23, [x0, #152]
    3d1c:	stp	x25, x26, [sp, #64]
    3d20:	stp	x27, x28, [sp, #80]
    3d24:	ldr	x1, [x23, #40]
    3d28:	str	x8, [sp, #104]
    3d2c:	cbz	x1, 5af0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1df8>
    3d30:	ldr	x0, [x24, #8]
    3d34:	ldrh	w6, [x19]
    3d38:	ldr	w3, [x0, #24]
    3d3c:	ldr	x2, [x0]
    3d40:	cmp	w6, w3
    3d44:	b.cs	5b10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e18>  // b.hs, b.nlast
    3d48:	ubfiz	x20, x6, #6, #16
    3d4c:	ldr	w0, [x23, #52]
    3d50:	add	x20, x2, x20
    3d54:	mov	w2, w6
    3d58:	str	x2, [sp, #128]
    3d5c:	ldrh	w21, [x20, #6]
    3d60:	cmp	w21, w0
    3d64:	b.cs	3ee8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f0>  // b.hs, b.nlast
    3d68:	mov	w25, #0x18                  	// #24
    3d6c:	mov	w0, #0x3ffe                	// #16382
    3d70:	and	x4, x21, #0xffff
    3d74:	umaddl	x28, w21, w25, x1
    3d78:	ldrh	w22, [x28, #8]
    3d7c:	and	w22, w22, #0x3fff
    3d80:	cmp	w22, w0
    3d84:	b.ne	3f08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x210>  // b.any
    3d88:	ldr	w3, [x23, #28]
    3d8c:	cbz	w21, 3dcc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd4>
    3d90:	adrp	x26, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3d94:	mov	w27, w22
    3d98:	add	x26, x26, #0x0
    3d9c:	nop
    3da0:	umaddl	x28, w21, w25, x1
    3da4:	mov	w4, w21
    3da8:	ldrh	w1, [x28, #8]
    3dac:	and	w1, w1, #0x3fff
    3db0:	cmp	w1, w27
    3db4:	b.ne	3f08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x210>  // b.any
    3db8:	ldr	x0, [x24]
    3dbc:	ldr	x1, [x0]
    3dc0:	ldr	x4, [x1, #16]
    3dc4:	cmp	x4, x26
    3dc8:	b.ne	3eb0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b8>  // b.any
    3dcc:	mov	x3, #0x35                  	// #53
    3dd0:	add	x0, sp, #0xc0
    3dd4:	add	x20, x0, #0x10
    3dd8:	add	x1, sp, #0xa0
    3ddc:	mov	x2, #0x0                   	// #0
    3de0:	str	x3, [sp, #160]
    3de4:	str	x20, [sp, #192]
    3de8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    3dec:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3df0:	add	x3, x3, #0x0
    3df4:	mov	x2, x0
    3df8:	str	x2, [sp, #192]
    3dfc:	ldr	x0, [sp, #160]
    3e00:	str	x0, [sp, #208]
    3e04:	ldp	x4, x5, [x3, #32]
    3e08:	stp	x4, x5, [x2, #32]
    3e0c:	mov	x0, #0x30                  	// #48
    3e10:	ldp	x4, x5, [x3]
    3e14:	stp	x4, x5, [x2]
    3e18:	ldp	x4, x5, [x3, #16]
    3e1c:	stp	x4, x5, [x2, #16]
    3e20:	ldur	x1, [x3, #45]
    3e24:	stur	x1, [x2, #45]
    3e28:	ldr	x1, [sp, #160]
    3e2c:	str	x1, [sp, #200]
    3e30:	ldr	x2, [sp, #192]
    3e34:	strb	wzr, [x2, x1]
    3e38:	bl	0 <_Znwm>
    3e3c:	mov	x2, x0
    3e40:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3e44:	ldr	x3, [sp, #192]
    3e48:	ldr	x1, [x1]
    3e4c:	cmp	x3, x20
    3e50:	add	x1, x1, #0x10
    3e54:	str	x1, [x2], #24
    3e58:	str	x2, [x0, #8]
    3e5c:	b.eq	49b4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcbc>  // b.none
    3e60:	ldr	x1, [sp, #208]
    3e64:	str	x3, [x0, #8]
    3e68:	str	x1, [x0, #24]
    3e6c:	ldr	x4, [sp, #104]
    3e70:	str	x19, [x0, #40]
    3e74:	ldr	x3, [sp, #200]
    3e78:	str	x3, [x0, #16]
    3e7c:	ldrb	w1, [x4, #8]
    3e80:	ands	x2, x0, #0xfffffffffffffffe
    3e84:	orr	w1, w1, #0x3
    3e88:	strb	w1, [x4, #8]
    3e8c:	b.ne	4978 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc80>  // b.any
    3e90:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3e94:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3e98:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3e9c:	add	x3, x3, #0x0
    3ea0:	add	x1, x1, #0x0
    3ea4:	add	x0, x0, #0x0
    3ea8:	mov	w2, #0x1ce                 	// #462
    3eac:	bl	0 <__assert_fail>
    3eb0:	str	w3, [sp, #112]
    3eb4:	mov	w1, w21
    3eb8:	str	w6, [sp, #120]
    3ebc:	mov	x2, x19
    3ec0:	blr	x4
    3ec4:	mov	w21, w0
    3ec8:	ldr	w3, [sp, #112]
    3ecc:	ldr	w6, [sp, #120]
    3ed0:	cbz	w0, 3dcc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd4>
    3ed4:	ldr	x1, [x23, #40]
    3ed8:	cbz	x1, 5910 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c18>
    3edc:	ldr	w0, [x23, #52]
    3ee0:	cmp	w21, w0
    3ee4:	b.cc	3da0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa8>  // b.lo, b.ul, b.last
    3ee8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3eec:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ef0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3ef4:	add	x3, x3, #0x0
    3ef8:	add	x1, x1, #0x0
    3efc:	add	x0, x0, #0x0
    3f00:	mov	w2, #0x15d                 	// #349
    3f04:	bl	0 <__assert_fail>
    3f08:	ldrh	w0, [x28, #8]
    3f0c:	mvn	x0, x0
    3f10:	tst	x0, #0x3fff
    3f14:	b.eq	4890 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb98>  // b.none
    3f18:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
    3f1c:	ldr	x0, [x23]
    3f20:	ldrb	w0, [x0]
    3f24:	cbnz	w0, 4244 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x54c>
    3f28:	mov	x0, #0x150                 	// #336
    3f2c:	bl	0 <_Znwm>
    3f30:	mov	x2, #0x150                 	// #336
    3f34:	mov	x26, x0
    3f38:	mov	w1, #0x0                   	// #0
    3f3c:	bl	0 <memset>
    3f40:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    3f44:	ldrh	w1, [x28, #8]
    3f48:	add	x2, x26, #0x10
    3f4c:	add	x3, x26, #0x70
    3f50:	ldr	d0, [x0]
    3f54:	and	w1, w1, #0x3fff
    3f58:	ldr	x0, [x20, #8]
    3f5c:	add	x25, x26, #0xc0
    3f60:	str	x2, [x26]
    3f64:	str	x3, [x26, #96]
    3f68:	stp	x2, x3, [sp, #112]
    3f6c:	str	x25, [x26, #176]
    3f70:	str	w1, [x26, #316]
    3f74:	str	w21, [x26, #320]
    3f78:	str	d0, [x26, #8]
    3f7c:	str	d0, [x26, #104]
    3f80:	str	d0, [x26, #184]
    3f84:	tbz	w0, #6, 3f90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x298>
    3f88:	ldrb	w1, [x24, #176]
    3f8c:	cbnz	w1, 45f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x900>
    3f90:	tbz	w0, #4, 3f9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2a4>
    3f94:	ldrb	w1, [x24, #177]
    3f98:	cbnz	w1, 4530 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x838>
    3f9c:	ldrb	w11, [x28, #9]
    3fa0:	ubfx	w13, w0, #18, #1
    3fa4:	ldr	w4, [x24, #40]
    3fa8:	ubfx	w12, w0, #19, #1
    3fac:	mov	x10, x11
    3fb0:	ubfx	w8, w0, #23, #1
    3fb4:	ldr	x2, [x24]
    3fb8:	ubfx	x11, x11, #6, #1
    3fbc:	ldr	x3, [x24, #32]
    3fc0:	ubfx	x10, x10, #7, #1
    3fc4:	strb	w13, [x26, #324]
    3fc8:	mov	x0, x26
    3fcc:	strb	w12, [x26, #325]
    3fd0:	mov	x1, x28
    3fd4:	strb	w8, [x26, #326]
    3fd8:	strb	w11, [x26, #327]
    3fdc:	strb	w10, [x26, #328]
    3fe0:	bl	1f00 <_ZN4llvm3mcaL23initializeUsedResourcesERNS0_9InstrDescERKNS_16MCSchedClassDescERKNS_15MCSubtargetInfoENS_8ArrayRefImEE>
    3fe4:	ldr	x0, [x20, #8]
    3fe8:	tbz	w0, #6, 4224 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x52c>
    3fec:	mov	w0, #0x64                  	// #100
    3ff0:	str	w0, [x26, #312]
    3ff4:	ldrb	w3, [x20, #4]
    3ff8:	ldr	w4, [x19, #24]
    3ffc:	cmp	w3, #0x0
    4000:	ccmp	w4, #0x0, #0x4, ne  // ne = any
    4004:	b.eq	4d40 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1048>  // b.none
    4008:	mov	x2, #0x0                   	// #0
    400c:	mov	w1, #0x0                   	// #0
    4010:	ldr	x7, [x19, #16]
    4014:	b	401c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x324>
    4018:	mov	w2, w1
    401c:	lsl	x2, x2, #4
    4020:	add	w1, w1, #0x1
    4024:	ldrb	w0, [x7, x2]
    4028:	cmp	w0, #0x1
    402c:	cset	w0, eq  // eq = none
    4030:	subs	w3, w3, w0
    4034:	ccmp	w4, w1, #0x0, ne  // ne = any
    4038:	b.hi	4018 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x320>  // b.pmore
    403c:	cbnz	w3, 4460 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x768>
    4040:	ldr	x0, [x20, #8]
    4044:	tbz	w0, #2, 4300 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x608>
    4048:	ldrh	w0, [x20, #2]
    404c:	sub	w0, w0, #0x1
    4050:	cmp	x0, w4, uxtw
    4054:	b.cs	5ef4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21fc>  // b.hs, b.nlast
    4058:	cmp	w4, w1
    405c:	lsl	x0, x0, #4
    4060:	ldr	x1, [x19, #16]
    4064:	b.eq	4074 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x37c>  // b.none
    4068:	ldrb	w0, [x1, x0]
    406c:	cmp	w0, #0x1
    4070:	b.eq	4300 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x608>  // b.none
    4074:	add	x28, sp, #0xa0
    4078:	mov	x3, #0x64                  	// #100
    407c:	add	x4, x28, #0x10
    4080:	add	x27, sp, #0xc0
    4084:	mov	x1, x27
    4088:	mov	x2, #0x0                   	// #0
    408c:	mov	x0, x28
    4090:	str	x4, [sp, #160]
    4094:	str	x3, [sp, #192]
    4098:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    409c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    40a0:	add	x1, x1, #0x0
    40a4:	ldr	x2, [sp, #192]
    40a8:	str	x0, [sp, #160]
    40ac:	str	x2, [sp, #176]
    40b0:	add	x4, x27, #0x10
    40b4:	ldp	x2, x3, [x1]
    40b8:	stp	x2, x3, [x0]
    40bc:	ldr	w7, [x1, #96]
    40c0:	ldp	x2, x3, [x1, #16]
    40c4:	stp	x2, x3, [x0, #16]
    40c8:	ldp	x2, x3, [x1, #32]
    40cc:	stp	x2, x3, [x0, #32]
    40d0:	ldp	x2, x3, [x1, #48]
    40d4:	stp	x2, x3, [x0, #48]
    40d8:	ldp	x2, x3, [x1, #64]
    40dc:	stp	x2, x3, [x0, #64]
    40e0:	ldp	x2, x3, [x1, #80]
    40e4:	stp	x2, x3, [x0, #80]
    40e8:	str	w7, [x0, #96]
    40ec:	ldr	x1, [sp, #160]
    40f0:	ldr	x0, [sp, #192]
    40f4:	str	x0, [sp, #168]
    40f8:	strb	wzr, [x1, x0]
    40fc:	str	x4, [sp, #192]
    4100:	ldp	x7, x3, [sp, #160]
    4104:	cmn	x7, x3
    4108:	ccmp	x7, #0x0, #0x0, ne  // ne = any
    410c:	b.eq	5ee8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21f0>  // b.none
    4110:	str	x3, [sp, #152]
    4114:	cmp	x3, #0xf
    4118:	b.hi	4848 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb50>  // b.pmore
    411c:	cmp	x3, #0x1
    4120:	b.ne	499c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xca4>  // b.any
    4124:	ldrb	w1, [x7]
    4128:	mov	x0, x4
    412c:	strb	w1, [sp, #208]
    4130:	str	x3, [sp, #200]
    4134:	strb	wzr, [x0, x3]
    4138:	mov	x0, #0x30                  	// #48
    413c:	bl	0 <_Znwm>
    4140:	mov	x1, x0
    4144:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4148:	add	x3, x27, #0x10
    414c:	ldr	x4, [sp, #192]
    4150:	ldr	x2, [x2]
    4154:	cmp	x4, x3
    4158:	add	x2, x2, #0x10
    415c:	str	x2, [x0], #24
    4160:	str	x0, [x1, #8]
    4164:	b.eq	49a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcb0>  // b.none
    4168:	ldr	x0, [sp, #208]
    416c:	str	x4, [x1, #8]
    4170:	str	x0, [x1, #24]
    4174:	ldr	x0, [sp, #160]
    4178:	orr	x3, x1, #0x1
    417c:	ldr	x2, [sp, #200]
    4180:	str	x2, [x1, #16]
    4184:	str	x19, [x1, #40]
    4188:	add	x28, x28, #0x10
    418c:	str	x3, [sp, #192]
    4190:	cmp	x0, x28
    4194:	and	x1, x1, #0xfffffffffffffffe
    4198:	b.eq	41a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4b0>  // b.none
    419c:	bl	0 <_ZdlPv>
    41a0:	ldr	x1, [sp, #192]
    41a4:	and	x1, x1, #0xfffffffffffffffe
    41a8:	cbz	x1, 4304 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x60c>
    41ac:	ldr	x2, [sp, #104]
    41b0:	ldrb	w0, [x2, #8]
    41b4:	str	x1, [x2]
    41b8:	orr	w0, w0, #0x3
    41bc:	strb	w0, [x2, #8]
    41c0:	ldr	x0, [x26, #176]
    41c4:	cmp	x25, x0
    41c8:	b.eq	41d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4d8>  // b.none
    41cc:	bl	0 <free>
    41d0:	ldr	x0, [x26, #96]
    41d4:	ldr	x1, [sp, #120]
    41d8:	cmp	x1, x0
    41dc:	b.eq	41e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4ec>  // b.none
    41e0:	bl	0 <free>
    41e4:	ldr	x0, [x26]
    41e8:	ldr	x1, [sp, #112]
    41ec:	cmp	x1, x0
    41f0:	b.eq	41f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x500>  // b.none
    41f4:	bl	0 <free>
    41f8:	mov	x0, x26
    41fc:	mov	x1, #0x150                 	// #336
    4200:	bl	0 <_ZdlPvm>
    4204:	ldp	x19, x20, [sp, #16]
    4208:	ldp	x21, x22, [sp, #32]
    420c:	ldp	x23, x24, [sp, #48]
    4210:	ldp	x25, x26, [sp, #64]
    4214:	ldp	x27, x28, [sp, #80]
    4218:	ldr	x0, [sp, #104]
    421c:	ldp	x29, x30, [sp], #224
    4220:	ret
    4224:	ldr	x0, [x24]
    4228:	mov	x1, x28
    422c:	bl	0 <_ZN4llvm12MCSchedModel19computeInstrLatencyERKNS_15MCSubtargetInfoERKNS_16MCSchedClassDescE>
    4230:	cmp	w0, #0x0
    4234:	mov	w1, #0x64                  	// #100
    4238:	csel	w0, w0, w1, ge  // ge = tcont
    423c:	str	w0, [x26, #312]
    4240:	b	3ff4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2fc>
    4244:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4248:	str	w6, [sp, #112]
    424c:	str	x4, [sp, #120]
    4250:	str	x0, [sp, #136]
    4254:	add	x0, x0, #0x0
    4258:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    425c:	tst	w0, #0xff
    4260:	ldr	w6, [sp, #112]
    4264:	ldr	x4, [sp, #120]
    4268:	b.ne	4780 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa88>  // b.any
    426c:	ldr	x0, [x23]
    4270:	str	x4, [sp, #112]
    4274:	ldrb	w0, [x0]
    4278:	cbz	w0, 3f28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230>
    427c:	ldr	x0, [sp, #136]
    4280:	add	x0, x0, #0x0
    4284:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    4288:	tst	w0, #0xff
    428c:	b.eq	3f28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230>  // b.none
    4290:	bl	0 <_ZN4llvm4dbgsEv>
    4294:	mov	x2, x0
    4298:	ldp	x1, x3, [x0, #16]
    429c:	ldr	x4, [sp, #112]
    42a0:	sub	x1, x1, x3
    42a4:	cmp	x1, #0xe
    42a8:	b.ls	4ab4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdbc>  // b.plast
    42ac:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    42b0:	add	x0, x0, #0x0
    42b4:	ldr	x1, [x0]
    42b8:	str	x1, [x3]
    42bc:	ldur	x0, [x0, #7]
    42c0:	stur	x0, [x3, #7]
    42c4:	ldr	x0, [x2, #24]
    42c8:	add	x0, x0, #0xf
    42cc:	str	x0, [x2, #24]
    42d0:	mov	x1, x4
    42d4:	mov	x0, x2
    42d8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    42dc:	mov	x1, x0
    42e0:	ldp	x3, x2, [x0, #16]
    42e4:	cmp	x3, x2
    42e8:	b.ls	4e44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x114c>  // b.plast
    42ec:	add	x0, x2, #0x1
    42f0:	str	x0, [x1, #24]
    42f4:	mov	w0, #0xa                   	// #10
    42f8:	strb	w0, [x2]
    42fc:	b	3f28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230>
    4300:	add	x27, sp, #0xc0
    4304:	mov	w3, w21
    4308:	mov	x2, x19
    430c:	mov	x1, x26
    4310:	mov	x0, x24
    4314:	bl	7d8 <_ZN4llvm3mca12InstrBuilder14populateWritesERNS0_9InstrDescERKNS_6MCInstEj>
    4318:	mov	x0, x24
    431c:	mov	w3, w21
    4320:	mov	x2, x19
    4324:	mov	x1, x26
    4328:	bl	1538 <_ZN4llvm3mca12InstrBuilder13populateReadsERNS0_9InstrDescERKNS_6MCInstEj>
    432c:	ldr	x0, [x23]
    4330:	ldrb	w0, [x0]
    4334:	cbnz	w0, 46dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9e4>
    4338:	mov	x0, x24
    433c:	mov	x8, x27
    4340:	mov	x2, x19
    4344:	mov	x1, x26
    4348:	bl	1da0 <_ZNK4llvm3mca12InstrBuilder15verifyInstrDescERKNS0_9InstrDescERKNS_6MCInstE>
    434c:	ldr	x0, [sp, #192]
    4350:	ands	x0, x0, #0xfffffffffffffffe
    4354:	b.ne	4518 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x820>  // b.any
    4358:	ldr	x1, [x20, #8]
    435c:	mov	w0, #0x3ffe                	// #16382
    4360:	tst	x1, #0x2
    4364:	ccmp	w22, w0, #0x4, eq  // eq = none
    4368:	b.eq	49cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcd4>  // b.none
    436c:	ldr	w1, [x24, #136]
    4370:	ldr	w22, [x19]
    4374:	mov	w20, w1
    4378:	and	w27, w22, #0xffff
    437c:	ldr	x23, [x24, #120]
    4380:	cbz	w1, 52cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15d4>
    4384:	mov	w0, #0xfffd                	// #65533
    4388:	cmp	w27, w0
    438c:	b.hi	5cc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fd0>  // b.pmore
    4390:	and	w28, w22, #0xffff
    4394:	mov	w2, #0x25                  	// #37
    4398:	sub	w0, w1, #0x1
    439c:	mul	w28, w28, w2
    43a0:	and	w3, w28, w0
    43a4:	ubfiz	x2, x3, #4, #22
    43a8:	add	x4, x23, x2
    43ac:	ldrh	w5, [x23, x2]
    43b0:	cmp	w27, w5
    43b4:	b.ne	50c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13d0>  // b.any
    43b8:	ldr	x20, [x4, #8]
    43bc:	str	x26, [x4, #8]
    43c0:	cbz	x20, 4f08 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1210>
    43c4:	ldr	x0, [x20, #176]
    43c8:	add	x1, x20, #0xc0
    43cc:	cmp	x0, x1
    43d0:	b.eq	43d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6e0>  // b.none
    43d4:	bl	0 <free>
    43d8:	ldr	x0, [x20, #96]
    43dc:	add	x1, x20, #0x70
    43e0:	cmp	x0, x1
    43e4:	b.eq	43ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6f4>  // b.none
    43e8:	bl	0 <free>
    43ec:	mov	x1, x20
    43f0:	ldr	x0, [x1], #16
    43f4:	cmp	x0, x1
    43f8:	b.eq	4400 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x708>  // b.none
    43fc:	bl	0 <free>
    4400:	mov	x1, #0x150                 	// #336
    4404:	mov	x0, x20
    4408:	bl	0 <_ZdlPvm>
    440c:	ldr	w1, [x24, #136]
    4410:	ldr	x23, [x24, #120]
    4414:	mov	w21, w1
    4418:	ldr	w19, [x19]
    441c:	and	w22, w19, #0xffff
    4420:	cbz	w1, 55ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18b4>
    4424:	mov	w0, #0xfffd                	// #65533
    4428:	cmp	w22, w0
    442c:	b.hi	5cc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fd0>  // b.pmore
    4430:	and	w20, w19, #0xffff
    4434:	mov	w2, #0x25                  	// #37
    4438:	sub	w0, w1, #0x1
    443c:	mul	w20, w20, w2
    4440:	and	w3, w20, w0
    4444:	ubfiz	x2, x3, #4, #22
    4448:	add	x5, x23, x2
    444c:	ldrh	w4, [x23, x2]
    4450:	cmp	w4, w22
    4454:	b.ne	4b6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe74>  // b.any
    4458:	ldr	x1, [x5, #8]
    445c:	b	4a98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xda0>
    4460:	mov	x3, #0x2b                  	// #43
    4464:	add	x27, sp, #0xc0
    4468:	add	x28, x27, #0x10
    446c:	add	x1, sp, #0xa0
    4470:	mov	x2, #0x0                   	// #0
    4474:	mov	x0, x27
    4478:	str	x3, [sp, #160]
    447c:	str	x28, [sp, #192]
    4480:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    4484:	adrp	x4, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4488:	add	x4, x4, #0x0
    448c:	mov	x1, x0
    4490:	str	x1, [sp, #192]
    4494:	ldr	x0, [sp, #160]
    4498:	str	x0, [sp, #208]
    449c:	ldr	x2, [x4, #32]
    44a0:	str	x2, [x1, #32]
    44a4:	ldp	x2, x3, [x4]
    44a8:	stp	x2, x3, [x1]
    44ac:	ldur	w7, [x4, #39]
    44b0:	ldp	x2, x3, [x4, #16]
    44b4:	stp	x2, x3, [x1, #16]
    44b8:	mov	x0, #0x30                  	// #48
    44bc:	stur	w7, [x1, #39]
    44c0:	ldr	x1, [sp, #160]
    44c4:	str	x1, [sp, #200]
    44c8:	ldr	x2, [sp, #192]
    44cc:	strb	wzr, [x2, x1]
    44d0:	bl	0 <_Znwm>
    44d4:	mov	x2, x0
    44d8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    44dc:	ldr	x3, [sp, #192]
    44e0:	ldr	x1, [x1]
    44e4:	cmp	x3, x28
    44e8:	add	x1, x1, #0x10
    44ec:	str	x1, [x2], #24
    44f0:	str	x2, [x0, #8]
    44f4:	b.eq	4884 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb8c>  // b.none
    44f8:	ldr	x1, [sp, #208]
    44fc:	str	x3, [x0, #8]
    4500:	str	x1, [x0, #24]
    4504:	ldr	x2, [sp, #200]
    4508:	and	x1, x0, #0xfffffffffffffffe
    450c:	str	x2, [x0, #16]
    4510:	str	x19, [x0, #40]
    4514:	b	41a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4b0>
    4518:	ldr	x2, [sp, #104]
    451c:	ldrb	w1, [x2, #8]
    4520:	str	x0, [x2]
    4524:	orr	w0, w1, #0x3
    4528:	strb	w0, [x2, #8]
    452c:	b	41c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x4c8>
    4530:	bl	0 <_ZN4llvm9WithColor7warningEv>
    4534:	mov	x1, x0
    4538:	ldp	x2, x4, [x0, #16]
    453c:	sub	x2, x2, x4
    4540:	cmp	x2, #0x26
    4544:	b.ls	4dbc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10c4>  // b.plast
    4548:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    454c:	add	x0, x0, #0x0
    4550:	ldp	x2, x3, [x0, #16]
    4554:	stp	x2, x3, [x4, #16]
    4558:	ldp	x2, x3, [x0]
    455c:	stp	x2, x3, [x4]
    4560:	ldur	x0, [x0, #31]
    4564:	stur	x0, [x4, #31]
    4568:	ldr	x4, [x1, #24]
    456c:	add	x4, x4, #0x27
    4570:	str	x4, [x1, #24]
    4574:	ldr	x0, [x1, #16]
    4578:	sub	x0, x0, x4
    457c:	cmp	x0, #0x13
    4580:	b.ls	4d8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1094>  // b.plast
    4584:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4588:	add	x0, x0, #0x0
    458c:	ldp	x2, x3, [x0]
    4590:	stp	x2, x3, [x4]
    4594:	ldr	w0, [x0, #16]
    4598:	str	w0, [x4, #16]
    459c:	ldr	x0, [x1, #24]
    45a0:	add	x0, x0, #0x14
    45a4:	str	x0, [x1, #24]
    45a8:	bl	0 <_ZN4llvm9WithColor4noteEv>
    45ac:	mov	x1, x0
    45b0:	ldp	x2, x4, [x0, #16]
    45b4:	sub	x2, x2, x4
    45b8:	cmp	x2, #0x24
    45bc:	b.ls	4d48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1050>  // b.plast
    45c0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    45c4:	add	x0, x0, #0x0
    45c8:	ldp	x2, x3, [x0, #16]
    45cc:	stp	x2, x3, [x4, #16]
    45d0:	ldp	x2, x3, [x0]
    45d4:	stp	x2, x3, [x4]
    45d8:	ldur	x0, [x0, #29]
    45dc:	stur	x0, [x4, #29]
    45e0:	ldr	x0, [x1, #24]
    45e4:	add	x0, x0, #0x25
    45e8:	str	x0, [x1, #24]
    45ec:	ldr	x0, [x20, #8]
    45f0:	strb	wzr, [x24, #177]
    45f4:	b	3f9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2a4>
    45f8:	bl	0 <_ZN4llvm9WithColor7warningEv>
    45fc:	mov	x1, x0
    4600:	ldp	x2, x4, [x0, #16]
    4604:	sub	x2, x2, x4
    4608:	cmp	x2, #0x2c
    460c:	b.ls	4d78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1080>  // b.plast
    4610:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4614:	add	x0, x0, #0x0
    4618:	ldr	x2, [x0, #32]
    461c:	str	x2, [x4, #32]
    4620:	ldp	x2, x3, [x0]
    4624:	stp	x2, x3, [x4]
    4628:	ldp	x2, x3, [x0, #16]
    462c:	stp	x2, x3, [x4, #16]
    4630:	ldur	x0, [x0, #37]
    4634:	stur	x0, [x4, #37]
    4638:	ldr	x0, [x1, #24]
    463c:	add	x0, x0, #0x2d
    4640:	str	x0, [x1, #24]
    4644:	bl	0 <_ZN4llvm9WithColor4noteEv>
    4648:	mov	x3, x0
    464c:	ldp	x1, x2, [x0, #16]
    4650:	sub	x1, x1, x2
    4654:	cmp	x1, #0x2c
    4658:	b.ls	4d5c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1064>  // b.plast
    465c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4660:	add	x0, x0, #0x0
    4664:	ldp	x10, x11, [x0]
    4668:	stp	x10, x11, [x2]
    466c:	ldr	x1, [x0, #32]
    4670:	str	x1, [x2, #32]
    4674:	ldp	x10, x11, [x0, #16]
    4678:	stp	x10, x11, [x2, #16]
    467c:	ldur	x0, [x0, #37]
    4680:	stur	x0, [x2, #37]
    4684:	ldr	x2, [x3, #24]
    4688:	add	x2, x2, #0x2d
    468c:	str	x2, [x3, #24]
    4690:	ldr	x1, [x3, #16]
    4694:	sub	x1, x1, x2
    4698:	cmp	x1, #0x1a
    469c:	b.ls	4da4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10ac>  // b.plast
    46a0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    46a4:	add	x0, x0, #0x0
    46a8:	ldr	x1, [x0, #16]
    46ac:	str	x1, [x2, #16]
    46b0:	ldp	x10, x11, [x0]
    46b4:	stp	x10, x11, [x2]
    46b8:	ldur	w0, [x0, #23]
    46bc:	stur	w0, [x2, #23]
    46c0:	ldr	x0, [x3, #24]
    46c4:	add	x0, x0, #0x1b
    46c8:	str	x0, [x3, #24]
    46cc:	ldr	x0, [x20, #8]
    46d0:	strb	wzr, [x24, #176]
    46d4:	tbz	w0, #4, 3f9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2a4>
    46d8:	b	3f94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x29c>
    46dc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    46e0:	str	x0, [sp, #136]
    46e4:	add	x0, x0, #0x0
    46e8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    46ec:	tst	w0, #0xff
    46f0:	b.ne	4dd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x10e0>  // b.any
    46f4:	ldr	x23, [x23]
    46f8:	ldrb	w0, [x23]
    46fc:	cbz	w0, 4338 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x640>
    4700:	ldr	x0, [sp, #136]
    4704:	add	x0, x0, #0x0
    4708:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
    470c:	tst	w0, #0xff
    4710:	b.eq	4338 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x640>  // b.none
    4714:	bl	0 <_ZN4llvm4dbgsEv>
    4718:	mov	x2, x0
    471c:	ldp	x1, x3, [x0, #16]
    4720:	sub	x1, x1, x3
    4724:	cmp	x1, #0xd
    4728:	b.ls	4e9c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11a4>  // b.plast
    472c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4730:	add	x0, x0, #0x0
    4734:	ldr	x1, [x0]
    4738:	str	x1, [x3]
    473c:	ldur	x0, [x0, #6]
    4740:	stur	x0, [x3, #6]
    4744:	ldr	x0, [x2, #24]
    4748:	add	x0, x0, #0xe
    474c:	str	x0, [x2, #24]
    4750:	ldr	w1, [x26, #316]
    4754:	mov	x0, x2
    4758:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    475c:	mov	x1, x0
    4760:	ldp	x3, x2, [x0, #16]
    4764:	cmp	x2, x3
    4768:	b.cs	4e90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1198>  // b.hs, b.nlast
    476c:	add	x0, x2, #0x1
    4770:	str	x0, [x1, #24]
    4774:	mov	w0, #0xa                   	// #10
    4778:	strb	w0, [x2]
    477c:	b	4338 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x640>
    4780:	str	w6, [sp, #112]
    4784:	bl	0 <_ZN4llvm4dbgsEv>
    4788:	ldp	x1, x2, [x0, #16]
    478c:	mov	x26, x0
    4790:	ldr	w6, [sp, #112]
    4794:	ldr	x4, [sp, #120]
    4798:	sub	x1, x1, x2
    479c:	cmp	x1, #0xf
    47a0:	b.ls	4ad0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdd8>  // b.plast
    47a4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    47a8:	add	x0, x0, #0x0
    47ac:	ldp	x0, x1, [x0]
    47b0:	stp	x0, x1, [x2]
    47b4:	ldr	x0, [x26, #24]
    47b8:	add	x0, x0, #0x10
    47bc:	str	x0, [x26, #24]
    47c0:	ldr	x1, [x24, #8]
    47c4:	ldr	w0, [x1, #24]
    47c8:	cmp	w6, w0
    47cc:	b.cs	5f68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2270>  // b.hs, b.nlast
    47d0:	ldp	x0, x1, [x1, #8]
    47d4:	ldr	x2, [sp, #128]
    47d8:	ldr	w0, [x0, x2, lsl #2]
    47dc:	adds	x27, x1, x0
    47e0:	b.eq	4e88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1190>  // b.none
    47e4:	mov	x0, x27
    47e8:	str	x4, [sp, #112]
    47ec:	bl	0 <strlen>
    47f0:	mov	x25, x0
    47f4:	ldp	x2, x0, [x26, #16]
    47f8:	ldr	x4, [sp, #112]
    47fc:	sub	x1, x2, x0
    4800:	cmp	x1, x25
    4804:	b.cc	4e50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1158>  // b.lo, b.ul, b.last
    4808:	cbz	x25, 482c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb34>
    480c:	mov	x1, x27
    4810:	mov	x2, x25
    4814:	str	x4, [sp, #112]
    4818:	bl	0 <memcpy>
    481c:	ldp	x2, x1, [x26, #16]
    4820:	ldr	x4, [sp, #112]
    4824:	add	x0, x1, x25
    4828:	str	x0, [x26, #24]
    482c:	cmp	x2, x0
    4830:	b.ls	4e70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1178>  // b.plast
    4834:	add	x1, x0, #0x1
    4838:	str	x1, [x26, #24]
    483c:	mov	w1, #0xa                   	// #10
    4840:	strb	w1, [x0]
    4844:	b	426c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x574>
    4848:	add	x1, sp, #0x98
    484c:	mov	x0, x27
    4850:	mov	x2, #0x0                   	// #0
    4854:	stp	x7, x3, [sp, #128]
    4858:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    485c:	ldp	x7, x3, [sp, #128]
    4860:	str	x0, [sp, #192]
    4864:	ldr	x1, [sp, #152]
    4868:	str	x1, [sp, #208]
    486c:	mov	x2, x3
    4870:	mov	x1, x7
    4874:	bl	0 <memcpy>
    4878:	ldr	x3, [sp, #152]
    487c:	ldr	x0, [sp, #192]
    4880:	b	4130 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x438>
    4884:	ldp	x2, x3, [sp, #208]
    4888:	stp	x2, x3, [x0, #24]
    488c:	b	4504 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x80c>
    4890:	mov	x3, #0x40                  	// #64
    4894:	add	x0, sp, #0xc0
    4898:	add	x20, x0, #0x10
    489c:	add	x1, sp, #0xa0
    48a0:	mov	x2, #0x0                   	// #0
    48a4:	str	x3, [sp, #160]
    48a8:	str	x20, [sp, #192]
    48ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    48b0:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    48b4:	add	x2, x2, #0x0
    48b8:	mov	x1, x0
    48bc:	str	x1, [sp, #192]
    48c0:	ldr	x0, [sp, #160]
    48c4:	str	x0, [sp, #208]
    48c8:	ldp	x4, x5, [x2]
    48cc:	stp	x4, x5, [x1]
    48d0:	mov	x0, #0x30                  	// #48
    48d4:	ldp	x4, x5, [x2, #16]
    48d8:	stp	x4, x5, [x1, #16]
    48dc:	ldp	x4, x5, [x2, #32]
    48e0:	stp	x4, x5, [x1, #32]
    48e4:	ldp	x2, x3, [x2, #48]
    48e8:	stp	x2, x3, [x1, #48]
    48ec:	ldr	x1, [sp, #160]
    48f0:	str	x1, [sp, #200]
    48f4:	ldr	x2, [sp, #192]
    48f8:	strb	wzr, [x2, x1]
    48fc:	bl	0 <_Znwm>
    4900:	mov	x2, x0
    4904:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4908:	ldr	x3, [sp, #192]
    490c:	ldr	x1, [x1]
    4910:	cmp	x3, x20
    4914:	add	x1, x1, #0x10
    4918:	str	x1, [x2], #24
    491c:	str	x2, [x0, #8]
    4920:	b.eq	49c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xcc8>  // b.none
    4924:	ldr	x1, [sp, #208]
    4928:	str	x3, [x0, #8]
    492c:	str	x1, [x0, #24]
    4930:	ldr	x4, [sp, #104]
    4934:	str	x19, [x0, #40]
    4938:	ldr	x3, [sp, #200]
    493c:	str	x3, [x0, #16]
    4940:	ldrb	w1, [x4, #8]
    4944:	ands	x2, x0, #0xfffffffffffffffe
    4948:	orr	w1, w1, #0x3
    494c:	strb	w1, [x4, #8]
    4950:	b.eq	3e90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x198>  // b.none
    4954:	str	x2, [x4]
    4958:	ldp	x19, x20, [sp, #16]
    495c:	ldp	x21, x22, [sp, #32]
    4960:	ldp	x23, x24, [sp, #48]
    4964:	ldp	x25, x26, [sp, #64]
    4968:	ldp	x27, x28, [sp, #80]
    496c:	ldr	x0, [sp, #104]
    4970:	ldp	x29, x30, [sp], #224
    4974:	ret
    4978:	str	x2, [x4]
    497c:	ldp	x19, x20, [sp, #16]
    4980:	ldp	x21, x22, [sp, #32]
    4984:	ldp	x23, x24, [sp, #48]
    4988:	ldp	x25, x26, [sp, #64]
    498c:	ldp	x27, x28, [sp, #80]
    4990:	ldr	x0, [sp, #104]
    4994:	ldp	x29, x30, [sp], #224
    4998:	ret
    499c:	mov	x0, x4
    49a0:	cbz	x3, 4130 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x438>
    49a4:	b	486c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb74>
    49a8:	ldp	x2, x3, [sp, #208]
    49ac:	stp	x2, x3, [x1, #24]
    49b0:	b	4174 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x47c>
    49b4:	ldp	x2, x3, [sp, #208]
    49b8:	stp	x2, x3, [x0, #24]
    49bc:	b	3e6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x174>
    49c0:	ldp	x2, x3, [sp, #208]
    49c4:	stp	x2, x3, [x0, #24]
    49c8:	b	4930 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xc38>
    49cc:	ldr	w1, [x24, #168]
    49d0:	add	x27, x24, #0x90
    49d4:	ldr	x20, [x24, #152]
    49d8:	mov	w21, w1
    49dc:	cbz	w1, 5440 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1748>
    49e0:	cmn	x19, #0x8
    49e4:	ccmn	x19, #0x10, #0x4, ne  // ne = any
    49e8:	b.eq	4ee8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11f0>  // b.none
    49ec:	lsr	w22, w19, #4
    49f0:	lsr	w23, w19, #9
    49f4:	eor	w25, w22, w23
    49f8:	sub	w5, w1, #0x1
    49fc:	and	w2, w25, w5
    4a00:	lsl	w0, w2, #4
    4a04:	add	x3, x20, x0
    4a08:	ldr	x4, [x20, x0]
    4a0c:	cmp	x19, x4
    4a10:	b.ne	4f18 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1220>  // b.any
    4a14:	ldr	x25, [x3, #8]
    4a18:	str	x26, [x3, #8]
    4a1c:	cbz	x25, 4ed8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11e0>
    4a20:	ldr	x0, [x25, #176]
    4a24:	add	x1, x25, #0xc0
    4a28:	cmp	x0, x1
    4a2c:	b.eq	4a34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd3c>  // b.none
    4a30:	bl	0 <free>
    4a34:	ldr	x0, [x25, #96]
    4a38:	add	x1, x25, #0x70
    4a3c:	cmp	x0, x1
    4a40:	b.eq	4a48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd50>  // b.none
    4a44:	bl	0 <free>
    4a48:	mov	x1, x25
    4a4c:	ldr	x0, [x1], #16
    4a50:	cmp	x0, x1
    4a54:	b.eq	4a5c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd64>  // b.none
    4a58:	bl	0 <free>
    4a5c:	mov	x0, x25
    4a60:	mov	x1, #0x150                 	// #336
    4a64:	bl	0 <_ZdlPvm>
    4a68:	ldr	w25, [x24, #168]
    4a6c:	ldr	x20, [x24, #152]
    4a70:	cbz	w25, 4f90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1298>
    4a74:	eor	w26, w22, w23
    4a78:	sub	w4, w25, #0x1
    4a7c:	and	w1, w26, w4
    4a80:	lsl	w0, w1, #4
    4a84:	add	x3, x20, x0
    4a88:	ldr	x2, [x20, x0]
    4a8c:	cmp	x19, x2
    4a90:	b.ne	4af4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xdfc>  // b.any
    4a94:	ldr	x1, [x3, #8]
    4a98:	ldr	x2, [sp, #104]
    4a9c:	ldrb	w0, [x2, #8]
    4aa0:	str	x1, [x2]
    4aa4:	and	w0, w0, #0xfffffffc
    4aa8:	orr	w0, w0, #0x2
    4aac:	strb	w0, [x2, #8]
    4ab0:	b	4204 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x50c>
    4ab4:	mov	x2, #0xf                   	// #15
    4ab8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4abc:	add	x1, x1, #0x0
    4ac0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4ac4:	mov	x2, x0
    4ac8:	ldr	x4, [sp, #112]
    4acc:	b	42d0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x5d8>
    4ad0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ad4:	mov	x2, #0x10                  	// #16
    4ad8:	add	x1, x1, #0x0
    4adc:	str	w6, [sp, #112]
    4ae0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4ae4:	mov	x26, x0
    4ae8:	ldr	w6, [sp, #112]
    4aec:	ldr	x4, [sp, #120]
    4af0:	b	47c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xac8>
    4af4:	mov	w5, #0x1                   	// #1
    4af8:	mov	x0, #0x0                   	// #0
    4afc:	cmn	x2, #0x8
    4b00:	b.ne	5ba8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1eb0>  // b.any
    4b04:	ldr	x4, [x24, #144]
    4b08:	lsl	w1, w25, #1
    4b0c:	ldr	w2, [x24, #160]
    4b10:	cmp	x0, #0x0
    4b14:	add	x4, x4, #0x1
    4b18:	str	x4, [x24, #144]
    4b1c:	add	w2, w2, #0x1
    4b20:	add	w4, w1, w25
    4b24:	csel	x0, x0, x3, ne  // ne = any
    4b28:	cmp	w4, w2, lsl #2
    4b2c:	b.ls	4fa4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x12ac>  // b.plast
    4b30:	ldr	w1, [x24, #164]
    4b34:	sub	w1, w25, w1
    4b38:	sub	w1, w1, w2
    4b3c:	cmp	w1, w25, lsr #3
    4b40:	b.ls	4ce4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfec>  // b.plast
    4b44:	ldr	x1, [x0]
    4b48:	str	w2, [x24, #160]
    4b4c:	cmn	x1, #0x8
    4b50:	b.eq	4b60 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe68>  // b.none
    4b54:	ldr	w1, [x24, #164]
    4b58:	sub	w1, w1, #0x1
    4b5c:	str	w1, [x24, #164]
    4b60:	mov	x1, #0x0                   	// #0
    4b64:	stp	x19, xzr, [x0]
    4b68:	b	4a98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xda0>
    4b6c:	mov	w6, #0x1                   	// #1
    4b70:	mov	x2, #0x0                   	// #0
    4b74:	mov	w10, #0xffff                	// #65535
    4b78:	mov	w8, #0xfffe                	// #65534
    4b7c:	cmp	w4, w10
    4b80:	b.ne	5b14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e1c>  // b.any
    4b84:	ldr	x6, [x24, #112]
    4b88:	lsl	w3, w1, #1
    4b8c:	ldr	w4, [x24, #128]
    4b90:	cmp	x2, #0x0
    4b94:	add	x6, x6, #0x1
    4b98:	str	x6, [x24, #112]
    4b9c:	add	w4, w4, #0x1
    4ba0:	add	w6, w3, w1
    4ba4:	csel	x2, x2, x5, ne  // ne = any
    4ba8:	cmp	w6, w4, lsl #2
    4bac:	b.ls	55bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18c4>  // b.plast
    4bb0:	ldr	w3, [x24, #132]
    4bb4:	sub	w3, w1, w3
    4bb8:	sub	w3, w3, w4
    4bbc:	cmp	w3, w1, lsr #3
    4bc0:	b.ls	4bf4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xefc>  // b.plast
    4bc4:	ldrh	w0, [x2]
    4bc8:	str	w4, [x24, #128]
    4bcc:	mov	w1, #0xffff                	// #65535
    4bd0:	cmp	w0, w1
    4bd4:	b.eq	4be4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xeec>  // b.none
    4bd8:	ldr	w0, [x24, #132]
    4bdc:	sub	w0, w0, #0x1
    4be0:	str	w0, [x24, #132]
    4be4:	mov	x1, #0x0                   	// #0
    4be8:	strh	w22, [x2]
    4bec:	str	xzr, [x2, #8]
    4bf0:	b	4a98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xda0>
    4bf4:	mov	w1, w0
    4bf8:	lsr	w0, w0, #1
    4bfc:	orr	x0, x0, x1
    4c00:	mov	w1, #0x40                  	// #64
    4c04:	orr	x0, x0, x0, lsr #2
    4c08:	orr	x0, x0, x0, lsr #4
    4c0c:	orr	x0, x0, x0, lsr #8
    4c10:	orr	x0, x0, x0, lsr #16
    4c14:	add	x0, x0, #0x1
    4c18:	cmp	w0, w1
    4c1c:	csel	w0, w0, w1, cs  // cs = hs, nlast
    4c20:	str	w0, [x24, #136]
    4c24:	ubfiz	x0, x0, #4, #32
    4c28:	bl	0 <_Znwm>
    4c2c:	ldr	w1, [x24, #136]
    4c30:	str	x0, [x24, #120]
    4c34:	str	xzr, [x24, #128]
    4c38:	sub	w2, w1, #0x1
    4c3c:	and	w2, w2, w1
    4c40:	cbz	x23, 5ac8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1dd0>
    4c44:	ubfiz	x21, x21, #4, #32
    4c48:	add	x19, x23, x21
    4c4c:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    4c50:	ubfiz	x1, x1, #4, #32
    4c54:	mov	w2, #0xffffffff            	// #-1
    4c58:	add	x1, x0, x1
    4c5c:	cmp	x0, x1
    4c60:	b.eq	4c70 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf78>  // b.none
    4c64:	strh	w2, [x0], #16
    4c68:	cmp	x1, x0
    4c6c:	b.ne	4c64 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf6c>  // b.any
    4c70:	mov	x28, x23
    4c74:	mov	w25, #0xfffd                	// #65533
    4c78:	mov	w27, #0x25                  	// #37
    4c7c:	b	4c8c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf94>
    4c80:	add	x28, x28, #0x10
    4c84:	cmp	x19, x28
    4c88:	b.eq	58ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bb4>  // b.none
    4c8c:	ldrh	w0, [x28]
    4c90:	cmp	w0, w25
    4c94:	b.hi	4c80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf88>  // b.pmore
    4c98:	ldr	w2, [x24, #136]
    4c9c:	cbz	w2, 608c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2394>
    4ca0:	mul	w1, w0, w27
    4ca4:	sub	w2, w2, #0x1
    4ca8:	ldr	x7, [x24, #120]
    4cac:	and	w1, w1, w2
    4cb0:	ubfiz	x4, x1, #4, #22
    4cb4:	add	x3, x7, x4
    4cb8:	ldrh	w6, [x7, x4]
    4cbc:	cmp	w6, w0
    4cc0:	b.ne	5c04 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f0c>  // b.any
    4cc4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4cc8:	add	x3, x3, #0x0
    4ccc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4cd0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4cd4:	add	x1, x1, #0x0
    4cd8:	add	x0, x0, #0x0
    4cdc:	mov	w2, #0x17a                 	// #378
    4ce0:	bl	0 <__assert_fail>
    4ce4:	mov	w1, w25
    4ce8:	mov	x0, x27
    4cec:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4cf0:	ldr	w4, [x24, #168]
    4cf4:	cbz	w4, 52ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15b4>
    4cf8:	sub	w4, w4, #0x1
    4cfc:	ldr	w2, [x24, #160]
    4d00:	and	w26, w26, w4
    4d04:	ldr	x6, [x24, #152]
    4d08:	lsl	w1, w26, #4
    4d0c:	add	w2, w2, #0x1
    4d10:	add	x0, x6, x1
    4d14:	ldr	x1, [x6, x1]
    4d18:	cmp	x19, x1
    4d1c:	b.eq	4b48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe50>  // b.none
    4d20:	mov	w5, #0x1                   	// #1
    4d24:	mov	x3, #0x0                   	// #0
    4d28:	cmn	x1, #0x8
    4d2c:	b.ne	5eb4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x21bc>  // b.any
    4d30:	cbz	x3, 4b44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe4c>
    4d34:	mov	x0, x3
    4d38:	ldr	x1, [x3]
    4d3c:	b	4b48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe50>
    4d40:	mov	w1, #0x0                   	// #0
    4d44:	b	403c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x344>
    4d48:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4d4c:	mov	x2, #0x25                  	// #37
    4d50:	add	x1, x1, #0x0
    4d54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4d58:	b	45ec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8f4>
    4d5c:	mov	x2, #0x2d                  	// #45
    4d60:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4d64:	add	x1, x1, #0x0
    4d68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4d6c:	mov	x3, x0
    4d70:	ldr	x2, [x0, #24]
    4d74:	b	4690 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x998>
    4d78:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4d7c:	mov	x2, #0x2d                  	// #45
    4d80:	add	x1, x1, #0x0
    4d84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4d88:	b	4644 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x94c>
    4d8c:	mov	x0, x1
    4d90:	mov	x2, #0x14                  	// #20
    4d94:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4d98:	add	x1, x1, #0x0
    4d9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4da0:	b	45a8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x8b0>
    4da4:	mov	x0, x3
    4da8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4dac:	mov	x2, #0x1b                  	// #27
    4db0:	add	x1, x1, #0x0
    4db4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4db8:	b	46cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9d4>
    4dbc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4dc0:	add	x1, x1, #0x0
    4dc4:	mov	x2, #0x27                  	// #39
    4dc8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4dcc:	mov	x1, x0
    4dd0:	ldr	x4, [x0, #24]
    4dd4:	b	4574 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x87c>
    4dd8:	bl	0 <_ZN4llvm4dbgsEv>
    4ddc:	mov	x2, x0
    4de0:	ldp	x1, x3, [x0, #16]
    4de4:	sub	x1, x1, x3
    4de8:	cmp	x1, #0xc
    4dec:	b.ls	4ec0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11c8>  // b.plast
    4df0:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4df4:	add	x0, x0, #0x0
    4df8:	ldr	x1, [x0]
    4dfc:	str	x1, [x3]
    4e00:	ldur	x0, [x0, #5]
    4e04:	stur	x0, [x3, #5]
    4e08:	ldr	x0, [x2, #24]
    4e0c:	add	x0, x0, #0xd
    4e10:	str	x0, [x2, #24]
    4e14:	ldr	w1, [x26, #312]
    4e18:	mov	x0, x2
    4e1c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    4e20:	mov	x1, x0
    4e24:	ldp	x3, x2, [x0, #16]
    4e28:	cmp	x2, x3
    4e2c:	b.cs	4eb4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11bc>  // b.hs, b.nlast
    4e30:	add	x0, x2, #0x1
    4e34:	str	x0, [x1, #24]
    4e38:	mov	w0, #0xa                   	// #10
    4e3c:	strb	w0, [x2]
    4e40:	b	46f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9fc>
    4e44:	mov	w1, #0xa                   	// #10
    4e48:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4e4c:	b	3f28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x230>
    4e50:	mov	x2, x25
    4e54:	mov	x0, x26
    4e58:	mov	x1, x27
    4e5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4e60:	mov	x26, x0
    4e64:	ldp	x2, x0, [x0, #16]
    4e68:	ldr	x4, [sp, #112]
    4e6c:	b	482c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb34>
    4e70:	mov	x0, x26
    4e74:	mov	w1, #0xa                   	// #10
    4e78:	str	x4, [sp, #112]
    4e7c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4e80:	ldr	x4, [sp, #112]
    4e84:	b	426c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x574>
    4e88:	ldp	x2, x0, [x26, #16]
    4e8c:	b	482c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xb34>
    4e90:	mov	w1, #0xa                   	// #10
    4e94:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4e98:	b	4338 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x640>
    4e9c:	mov	x2, #0xe                   	// #14
    4ea0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ea4:	add	x1, x1, #0x0
    4ea8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4eac:	mov	x2, x0
    4eb0:	b	4750 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xa58>
    4eb4:	mov	w1, #0xa                   	// #10
    4eb8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    4ebc:	b	46f4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x9fc>
    4ec0:	mov	x2, #0xd                   	// #13
    4ec4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ec8:	add	x1, x1, #0x0
    4ecc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    4ed0:	mov	x2, x0
    4ed4:	b	4e14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x111c>
    4ed8:	mov	w25, w1
    4edc:	cmn	x19, #0x10
    4ee0:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    4ee4:	b.ne	4a74 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd7c>  // b.any
    4ee8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4eec:	add	x3, x3, #0x0
    4ef0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ef4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    4ef8:	add	x1, x1, #0x0
    4efc:	add	x0, x0, #0x0
    4f00:	mov	w2, #0x250                 	// #592
    4f04:	bl	0 <__assert_fail>
    4f08:	mov	w19, w22
    4f0c:	mov	w21, w1
    4f10:	and	w22, w22, #0xffff
    4f14:	b	4430 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x738>
    4f18:	mov	w7, #0x1                   	// #1
    4f1c:	mov	x0, #0x0                   	// #0
    4f20:	cmn	x4, #0x8
    4f24:	b.ne	5b4c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e54>  // b.any
    4f28:	ldr	x5, [x24, #144]
    4f2c:	lsl	w2, w1, #1
    4f30:	ldr	w4, [x24, #160]
    4f34:	cmp	x0, #0x0
    4f38:	add	x5, x5, #0x1
    4f3c:	str	x5, [x24, #144]
    4f40:	add	w4, w4, #0x1
    4f44:	add	w5, w2, w1
    4f48:	csel	x0, x0, x3, ne  // ne = any
    4f4c:	cmp	w5, w4, lsl #2
    4f50:	b.ls	5450 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1758>  // b.plast
    4f54:	ldr	w2, [x24, #164]
    4f58:	sub	w2, w1, w2
    4f5c:	sub	w2, w2, w4
    4f60:	cmp	w2, w1, lsr #3
    4f64:	b.ls	5088 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1390>  // b.plast
    4f68:	ldr	x2, [x0]
    4f6c:	str	w4, [x24, #160]
    4f70:	cmn	x2, #0x8
    4f74:	b.eq	4f84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x128c>  // b.none
    4f78:	ldr	w2, [x24, #164]
    4f7c:	sub	w2, w2, #0x1
    4f80:	str	w2, [x24, #164]
    4f84:	stp	x19, x26, [x0]
    4f88:	mov	w25, w1
    4f8c:	cbnz	w1, 4edc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11e4>
    4f90:	ldr	x0, [x24, #144]
    4f94:	mov	w25, #0x0                   	// #0
    4f98:	mov	w1, #0x0                   	// #0
    4f9c:	add	x0, x0, #0x1
    4fa0:	str	x0, [x24, #144]
    4fa4:	sub	w0, w1, #0x1
    4fa8:	mov	w1, #0x40                  	// #64
    4fac:	orr	x0, x0, x0, lsr #1
    4fb0:	orr	x0, x0, x0, lsr #2
    4fb4:	orr	x0, x0, x0, lsr #4
    4fb8:	orr	x0, x0, x0, lsr #8
    4fbc:	orr	x0, x0, x0, lsr #16
    4fc0:	add	x0, x0, #0x1
    4fc4:	cmp	w0, w1
    4fc8:	csel	w0, w0, w1, cs  // cs = hs, nlast
    4fcc:	str	w0, [x24, #168]
    4fd0:	ubfiz	x0, x0, #4, #32
    4fd4:	bl	0 <_Znwm>
    4fd8:	ldr	w1, [x24, #168]
    4fdc:	str	x0, [x24, #152]
    4fe0:	str	xzr, [x24, #160]
    4fe4:	sub	w2, w1, #0x1
    4fe8:	and	w2, w2, w1
    4fec:	cbz	x20, 5a1c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d24>
    4ff0:	ubfiz	x25, x25, #4, #32
    4ff4:	add	x26, x20, x25
    4ff8:	cbnz	w2, 602c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2334>
    4ffc:	ubfiz	x1, x1, #4, #32
    5000:	mov	x2, #0xfffffffffffffff8    	// #-8
    5004:	add	x1, x0, x1
    5008:	cmp	x0, x1
    500c:	b.eq	501c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1324>  // b.none
    5010:	str	x2, [x0], #16
    5014:	cmp	x1, x0
    5018:	b.ne	5010 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1318>  // b.any
    501c:	cmp	x26, x20
    5020:	mov	x21, x20
    5024:	b.ne	5038 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1340>  // b.any
    5028:	b	57fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b04>
    502c:	add	x21, x21, #0x10
    5030:	cmp	x26, x21
    5034:	b.eq	57fc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b04>  // b.none
    5038:	ldr	x0, [x21]
    503c:	cmn	x0, #0x10
    5040:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    5044:	b.eq	502c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>  // b.none
    5048:	ldr	w2, [x24, #168]
    504c:	cbz	w2, 6098 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23a0>
    5050:	lsr	w1, w0, #9
    5054:	sub	w2, w2, #0x1
    5058:	eor	w1, w1, w0, lsr #4
    505c:	and	w1, w1, w2
    5060:	ldr	x7, [x24, #152]
    5064:	lsl	w4, w1, #4
    5068:	add	x3, x7, x4
    506c:	ldr	x6, [x7, x4]
    5070:	cmp	x0, x6
    5074:	b.ne	5994 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c9c>  // b.any
    5078:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    507c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5080:	add	x3, x3, #0x0
    5084:	b	4cd0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfd8>
    5088:	mov	x0, x27
    508c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5090:	ldr	w1, [x24, #168]
    5094:	cbz	w1, 52ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15b4>
    5098:	sub	w7, w1, #0x1
    509c:	ldr	w4, [x24, #160]
    50a0:	and	w25, w25, w7
    50a4:	ldr	x20, [x24, #152]
    50a8:	lsl	w2, w25, #4
    50ac:	add	w4, w4, #0x1
    50b0:	add	x0, x20, x2
    50b4:	ldr	x5, [x20, x2]
    50b8:	cmp	x19, x5
    50bc:	b.ne	5f48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2250>  // b.any
    50c0:	str	w4, [x24, #160]
    50c4:	b	4f78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1280>
    50c8:	mov	w7, #0x1                   	// #1
    50cc:	mov	x2, #0x0                   	// #0
    50d0:	mov	w11, #0xffff                	// #65535
    50d4:	mov	w10, #0xfffe                	// #65534
    50d8:	cmp	w5, w11
    50dc:	b.ne	5a94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d9c>  // b.any
    50e0:	ldr	x7, [x24, #112]
    50e4:	lsl	w3, w1, #1
    50e8:	ldr	w5, [x24, #128]
    50ec:	cmp	x2, #0x0
    50f0:	add	x7, x7, #0x1
    50f4:	str	x7, [x24, #112]
    50f8:	add	w5, w5, #0x1
    50fc:	add	w7, w3, w1
    5100:	csel	x2, x2, x4, ne  // ne = any
    5104:	cmp	w7, w5, lsl #2
    5108:	b.ls	52dc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15e4>  // b.plast
    510c:	ldr	w3, [x24, #132]
    5110:	sub	w3, w1, w3
    5114:	sub	w3, w3, w5
    5118:	cmp	w3, w1, lsr #3
    511c:	b.ls	514c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1454>  // b.plast
    5120:	ldrh	w0, [x2]
    5124:	str	w5, [x24, #128]
    5128:	mov	w3, #0xffff                	// #65535
    512c:	cmp	w0, w3
    5130:	b.eq	5140 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1448>  // b.none
    5134:	ldr	w0, [x24, #132]
    5138:	sub	w0, w0, #0x1
    513c:	str	w0, [x24, #132]
    5140:	strh	w27, [x2]
    5144:	str	x26, [x2, #8]
    5148:	b	4414 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x71c>
    514c:	mov	w1, w0
    5150:	lsr	w0, w0, #1
    5154:	orr	x0, x0, x1
    5158:	mov	w1, #0x40                  	// #64
    515c:	orr	x0, x0, x0, lsr #2
    5160:	orr	x0, x0, x0, lsr #4
    5164:	orr	x0, x0, x0, lsr #8
    5168:	orr	x0, x0, x0, lsr #16
    516c:	add	x0, x0, #0x1
    5170:	cmp	w0, w1
    5174:	csel	w0, w0, w1, cs  // cs = hs, nlast
    5178:	str	w0, [x24, #136]
    517c:	ubfiz	x0, x0, #4, #32
    5180:	bl	0 <_Znwm>
    5184:	ldr	w1, [x24, #136]
    5188:	str	x0, [x24, #120]
    518c:	str	xzr, [x24, #128]
    5190:	sub	w2, w1, #0x1
    5194:	and	w2, w2, w1
    5198:	cbz	x23, 5a44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d4c>
    519c:	ubfiz	x3, x20, #4, #32
    51a0:	str	x3, [sp, #112]
    51a4:	add	x22, x23, x3
    51a8:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    51ac:	ubfiz	x1, x1, #4, #32
    51b0:	mov	w2, #0xffffffff            	// #-1
    51b4:	add	x1, x0, x1
    51b8:	cmp	x0, x1
    51bc:	b.eq	51cc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14d4>  // b.none
    51c0:	strh	w2, [x0], #16
    51c4:	cmp	x1, x0
    51c8:	b.ne	51c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14c8>  // b.any
    51cc:	mov	x25, x23
    51d0:	mov	w21, #0xfffd                	// #65533
    51d4:	b	51e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14ec>
    51d8:	add	x25, x25, #0x10
    51dc:	cmp	x22, x25
    51e0:	b.eq	5930 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c38>  // b.none
    51e4:	ldrh	w0, [x25]
    51e8:	cmp	w0, w21
    51ec:	b.hi	51d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e0>  // b.pmore
    51f0:	ldr	w3, [x24, #136]
    51f4:	cbz	w3, 608c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2394>
    51f8:	mov	w1, #0x25                  	// #37
    51fc:	sub	w3, w3, #0x1
    5200:	ldr	x10, [x24, #120]
    5204:	mul	w1, w0, w1
    5208:	and	w1, w1, w3
    520c:	ubfiz	x5, x1, #4, #22
    5210:	add	x4, x10, x5
    5214:	ldrh	w8, [x10, x5]
    5218:	cmp	w0, w8
    521c:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    5220:	mov	w7, #0x1                   	// #1
    5224:	mov	x5, #0x0                   	// #0
    5228:	mov	w12, #0xffff                	// #65535
    522c:	cmp	w8, w12
    5230:	b.ne	5e7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2184>  // b.any
    5234:	cmp	x5, #0x0
    5238:	ldr	w1, [x24, #128]
    523c:	csel	x4, x4, x5, eq  // eq = none
    5240:	ldr	x3, [x25, #8]
    5244:	add	w1, w1, #0x1
    5248:	strh	w0, [x4]
    524c:	str	xzr, [x25, #8]
    5250:	str	x3, [x4, #8]
    5254:	ldr	x20, [x25, #8]
    5258:	str	w1, [x24, #128]
    525c:	cbz	x20, 51d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e0>
    5260:	ldr	x0, [x20, #176]
    5264:	add	x3, x20, #0xc0
    5268:	cmp	x0, x3
    526c:	b.eq	5274 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x157c>  // b.none
    5270:	bl	0 <free>
    5274:	ldr	x0, [x20, #96]
    5278:	add	x3, x20, #0x70
    527c:	cmp	x0, x3
    5280:	b.eq	5288 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1590>  // b.none
    5284:	bl	0 <free>
    5288:	mov	x3, x20
    528c:	ldr	x0, [x3], #16
    5290:	cmp	x0, x3
    5294:	b.eq	529c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15a4>  // b.none
    5298:	bl	0 <free>
    529c:	mov	x0, x20
    52a0:	mov	x1, #0x150                 	// #336
    52a4:	bl	0 <_ZdlPvm>
    52a8:	b	51d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x14e0>
    52ac:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    52b0:	add	x3, x3, #0x0
    52b4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    52b8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    52bc:	add	x1, x1, #0x0
    52c0:	add	x0, x0, #0x0
    52c4:	mov	w2, #0x22f                 	// #559
    52c8:	bl	0 <__assert_fail>
    52cc:	ldr	x0, [x24, #112]
    52d0:	mov	w3, #0x0                   	// #0
    52d4:	add	x0, x0, #0x1
    52d8:	str	x0, [x24, #112]
    52dc:	sub	w0, w3, #0x1
    52e0:	mov	w1, #0x40                  	// #64
    52e4:	orr	x0, x0, x0, lsr #1
    52e8:	orr	x0, x0, x0, lsr #2
    52ec:	orr	x0, x0, x0, lsr #4
    52f0:	orr	x0, x0, x0, lsr #8
    52f4:	orr	x0, x0, x0, lsr #16
    52f8:	add	x0, x0, #0x1
    52fc:	cmp	w0, w1
    5300:	csel	w0, w0, w1, cs  // cs = hs, nlast
    5304:	str	w0, [x24, #136]
    5308:	ubfiz	x0, x0, #4, #32
    530c:	bl	0 <_Znwm>
    5310:	ldr	w1, [x24, #136]
    5314:	str	x0, [x24, #120]
    5318:	str	xzr, [x24, #128]
    531c:	sub	w2, w1, #0x1
    5320:	and	w2, w2, w1
    5324:	cbz	x23, 5a6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d74>
    5328:	ubfiz	x3, x20, #4, #32
    532c:	str	x3, [sp, #112]
    5330:	add	x21, x23, x3
    5334:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    5338:	ubfiz	x1, x1, #4, #32
    533c:	mov	w2, #0xffffffff            	// #-1
    5340:	add	x1, x0, x1
    5344:	cmp	x0, x1
    5348:	b.eq	5358 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1660>  // b.none
    534c:	strh	w2, [x0], #16
    5350:	cmp	x1, x0
    5354:	b.ne	534c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1654>  // b.any
    5358:	cmp	x23, x21
    535c:	mov	x28, x23
    5360:	mov	w25, #0xfffd                	// #65533
    5364:	b.ne	5378 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1680>  // b.any
    5368:	b	5850 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b58>
    536c:	add	x28, x28, #0x10
    5370:	cmp	x21, x28
    5374:	b.eq	5850 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b58>  // b.none
    5378:	ldrh	w0, [x28]
    537c:	cmp	w0, w25
    5380:	b.hi	536c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1674>  // b.pmore
    5384:	ldr	w2, [x24, #136]
    5388:	cbz	w2, 608c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2394>
    538c:	mov	w1, #0x25                  	// #37
    5390:	sub	w2, w2, #0x1
    5394:	ldr	x10, [x24, #120]
    5398:	mul	w1, w0, w1
    539c:	and	w1, w1, w2
    53a0:	ubfiz	x5, x1, #4, #22
    53a4:	add	x4, x10, x5
    53a8:	ldrh	w8, [x10, x5]
    53ac:	cmp	w8, w0
    53b0:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    53b4:	mov	w7, #0x1                   	// #1
    53b8:	mov	x5, #0x0                   	// #0
    53bc:	mov	w12, #0xffff                	// #65535
    53c0:	cmp	w8, w12
    53c4:	b.ne	5e0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2114>  // b.any
    53c8:	cmp	x5, #0x0
    53cc:	ldr	w1, [x24, #128]
    53d0:	csel	x4, x4, x5, eq  // eq = none
    53d4:	ldr	x2, [x28, #8]
    53d8:	add	w1, w1, #0x1
    53dc:	strh	w0, [x4]
    53e0:	str	xzr, [x28, #8]
    53e4:	str	x2, [x4, #8]
    53e8:	ldr	x20, [x28, #8]
    53ec:	str	w1, [x24, #128]
    53f0:	cbz	x20, 536c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1674>
    53f4:	ldr	x0, [x20, #176]
    53f8:	add	x2, x20, #0xc0
    53fc:	cmp	x0, x2
    5400:	b.eq	5408 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1710>  // b.none
    5404:	bl	0 <free>
    5408:	ldr	x0, [x20, #96]
    540c:	add	x2, x20, #0x70
    5410:	cmp	x0, x2
    5414:	b.eq	541c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1724>  // b.none
    5418:	bl	0 <free>
    541c:	mov	x2, x20
    5420:	ldr	x0, [x2], #16
    5424:	cmp	x0, x2
    5428:	b.eq	5430 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1738>  // b.none
    542c:	bl	0 <free>
    5430:	mov	x0, x20
    5434:	mov	x1, #0x150                 	// #336
    5438:	bl	0 <_ZdlPvm>
    543c:	b	536c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1674>
    5440:	ldr	x0, [x24, #144]
    5444:	mov	w2, #0x0                   	// #0
    5448:	add	x0, x0, #0x1
    544c:	str	x0, [x24, #144]
    5450:	sub	w0, w2, #0x1
    5454:	mov	w1, #0x40                  	// #64
    5458:	orr	x0, x0, x0, lsr #1
    545c:	orr	x0, x0, x0, lsr #2
    5460:	orr	x0, x0, x0, lsr #4
    5464:	orr	x0, x0, x0, lsr #8
    5468:	orr	x0, x0, x0, lsr #16
    546c:	add	x0, x0, #0x1
    5470:	cmp	w0, w1
    5474:	csel	w0, w0, w1, cs  // cs = hs, nlast
    5478:	str	w0, [x24, #168]
    547c:	ubfiz	x0, x0, #4, #32
    5480:	bl	0 <_Znwm>
    5484:	ldr	w1, [x24, #168]
    5488:	str	x0, [x24, #152]
    548c:	str	xzr, [x24, #160]
    5490:	sub	w2, w1, #0x1
    5494:	and	w2, w2, w1
    5498:	cbz	x20, 5b80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1e88>
    549c:	ubfiz	x21, x21, #4, #32
    54a0:	add	x25, x20, x21
    54a4:	cbnz	w2, 602c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2334>
    54a8:	ubfiz	x1, x1, #4, #32
    54ac:	mov	x2, #0xfffffffffffffff8    	// #-8
    54b0:	add	x1, x0, x1
    54b4:	cmp	x0, x1
    54b8:	b.eq	54c8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17d0>  // b.none
    54bc:	str	x2, [x0], #16
    54c0:	cmp	x1, x0
    54c4:	b.ne	54bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17c4>  // b.any
    54c8:	cmp	x20, x25
    54cc:	mov	x22, x20
    54d0:	b.ne	54e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17ec>  // b.any
    54d4:	b	5788 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a90>
    54d8:	add	x22, x22, #0x10
    54dc:	cmp	x25, x22
    54e0:	b.eq	5788 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a90>  // b.none
    54e4:	ldr	x0, [x22]
    54e8:	cmn	x0, #0x8
    54ec:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    54f0:	b.eq	54d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17e0>  // b.none
    54f4:	ldr	w2, [x24, #168]
    54f8:	cbz	w2, 6098 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x23a0>
    54fc:	lsr	w1, w0, #9
    5500:	sub	w2, w2, #0x1
    5504:	eor	w1, w1, w0, lsr #4
    5508:	and	w1, w1, w2
    550c:	ldr	x8, [x24, #152]
    5510:	lsl	w4, w1, #4
    5514:	add	x3, x8, x4
    5518:	ldr	x7, [x8, x4]
    551c:	cmp	x7, x0
    5520:	b.eq	5078 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1380>  // b.none
    5524:	mov	w5, #0x1                   	// #1
    5528:	mov	x4, #0x0                   	// #0
    552c:	cmn	x7, #0x8
    5530:	b.ne	5f14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x221c>  // b.any
    5534:	cmp	x4, #0x0
    5538:	ldr	w1, [x24, #160]
    553c:	csel	x3, x3, x4, eq  // eq = none
    5540:	ldr	x2, [x22, #8]
    5544:	add	w1, w1, #0x1
    5548:	str	x0, [x3]
    554c:	str	xzr, [x22, #8]
    5550:	str	x2, [x3, #8]
    5554:	ldr	x23, [x22, #8]
    5558:	str	w1, [x24, #160]
    555c:	cbz	x23, 54d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17e0>
    5560:	ldr	x0, [x23, #176]
    5564:	add	x1, x23, #0xc0
    5568:	cmp	x0, x1
    556c:	b.eq	5574 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x187c>  // b.none
    5570:	bl	0 <free>
    5574:	ldr	x0, [x23, #96]
    5578:	add	x1, x23, #0x70
    557c:	cmp	x0, x1
    5580:	b.eq	5588 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1890>  // b.none
    5584:	bl	0 <free>
    5588:	mov	x1, x23
    558c:	ldr	x0, [x1], #16
    5590:	cmp	x0, x1
    5594:	b.eq	559c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x18a4>  // b.none
    5598:	bl	0 <free>
    559c:	mov	x0, x23
    55a0:	mov	x1, #0x150                 	// #336
    55a4:	bl	0 <_ZdlPvm>
    55a8:	b	54d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x17e0>
    55ac:	ldr	x0, [x24, #112]
    55b0:	mov	w3, #0x0                   	// #0
    55b4:	add	x0, x0, #0x1
    55b8:	str	x0, [x24, #112]
    55bc:	sub	w0, w3, #0x1
    55c0:	mov	w1, #0x40                  	// #64
    55c4:	orr	x0, x0, x0, lsr #1
    55c8:	orr	x0, x0, x0, lsr #2
    55cc:	orr	x0, x0, x0, lsr #4
    55d0:	orr	x0, x0, x0, lsr #8
    55d4:	orr	x0, x0, x0, lsr #16
    55d8:	add	x0, x0, #0x1
    55dc:	cmp	w0, w1
    55e0:	csel	w0, w0, w1, cs  // cs = hs, nlast
    55e4:	str	w0, [x24, #136]
    55e8:	ubfiz	x0, x0, #4, #32
    55ec:	bl	0 <_Znwm>
    55f0:	ldr	w1, [x24, #136]
    55f4:	str	x0, [x24, #120]
    55f8:	str	xzr, [x24, #128]
    55fc:	sub	w2, w1, #0x1
    5600:	and	w2, w2, w1
    5604:	cbz	x23, 5bdc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ee4>
    5608:	ubfiz	x21, x21, #4, #32
    560c:	add	x28, x23, x21
    5610:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    5614:	ubfiz	x1, x1, #4, #32
    5618:	mov	w2, #0xffffffff            	// #-1
    561c:	add	x1, x0, x1
    5620:	cmp	x0, x1
    5624:	b.eq	5634 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x193c>  // b.none
    5628:	strh	w2, [x0], #16
    562c:	cmp	x1, x0
    5630:	b.ne	5628 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1930>  // b.any
    5634:	cmp	x28, x23
    5638:	mov	x20, x23
    563c:	mov	w25, #0xfffd                	// #65533
    5640:	mov	w27, #0x25                  	// #37
    5644:	b.ne	5658 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1960>  // b.any
    5648:	b	571c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a24>
    564c:	add	x20, x20, #0x10
    5650:	cmp	x28, x20
    5654:	b.eq	571c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a24>  // b.none
    5658:	ldrh	w0, [x20]
    565c:	cmp	w0, w25
    5660:	b.hi	564c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1954>  // b.pmore
    5664:	ldr	w2, [x24, #136]
    5668:	cbz	w2, 608c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2394>
    566c:	mul	w1, w0, w27
    5670:	sub	w2, w2, #0x1
    5674:	ldr	x7, [x24, #120]
    5678:	and	w1, w1, w2
    567c:	ubfiz	x4, x1, #4, #22
    5680:	add	x3, x7, x4
    5684:	ldrh	w6, [x7, x4]
    5688:	cmp	w0, w6
    568c:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    5690:	mov	w5, #0x1                   	// #1
    5694:	mov	x4, #0x0                   	// #0
    5698:	mov	w10, #0xffff                	// #65535
    569c:	cmp	w6, w10
    56a0:	b.ne	5c90 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f98>  // b.any
    56a4:	cmp	x4, #0x0
    56a8:	ldr	w1, [x24, #128]
    56ac:	csel	x3, x3, x4, eq  // eq = none
    56b0:	ldr	x2, [x20, #8]
    56b4:	add	w1, w1, #0x1
    56b8:	strh	w0, [x3]
    56bc:	str	xzr, [x20, #8]
    56c0:	str	x2, [x3, #8]
    56c4:	ldr	x26, [x20, #8]
    56c8:	str	w1, [x24, #128]
    56cc:	cbz	x26, 564c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1954>
    56d0:	ldr	x0, [x26, #176]
    56d4:	add	x2, x26, #0xc0
    56d8:	cmp	x0, x2
    56dc:	b.eq	56e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19ec>  // b.none
    56e0:	bl	0 <free>
    56e4:	ldr	x0, [x26, #96]
    56e8:	add	x2, x26, #0x70
    56ec:	cmp	x0, x2
    56f0:	b.eq	56f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a00>  // b.none
    56f4:	bl	0 <free>
    56f8:	mov	x2, x26
    56fc:	ldr	x0, [x2], #16
    5700:	cmp	x0, x2
    5704:	b.eq	570c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a14>  // b.none
    5708:	bl	0 <free>
    570c:	mov	x0, x26
    5710:	mov	x1, #0x150                 	// #336
    5714:	bl	0 <_ZdlPvm>
    5718:	b	564c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1954>
    571c:	mov	x1, x21
    5720:	mov	x0, x23
    5724:	bl	0 <_ZdlPvm>
    5728:	ldr	w1, [x24, #136]
    572c:	cbz	w1, 5778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a80>
    5730:	mov	w0, #0xfffd                	// #65533
    5734:	cmp	w22, w0
    5738:	b.hi	5cc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fd0>  // b.pmore
    573c:	and	w0, w19, #0xffff
    5740:	mov	w2, #0x25                  	// #37
    5744:	sub	w1, w1, #0x1
    5748:	ldr	w4, [x24, #128]
    574c:	ldr	x7, [x24, #120]
    5750:	mul	w0, w0, w2
    5754:	add	w4, w4, #0x1
    5758:	and	w0, w0, w1
    575c:	ubfiz	x3, x0, #4, #22
    5760:	add	x2, x7, x3
    5764:	ldrh	w6, [x7, x3]
    5768:	cmp	w6, w22
    576c:	b.ne	5d48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2050>  // b.any
    5770:	str	w4, [x24, #128]
    5774:	b	4bd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xee0>
    5778:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    577c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5780:	add	x3, x3, #0x0
    5784:	b	52b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15c0>
    5788:	mov	x1, x21
    578c:	mov	x0, x20
    5790:	bl	0 <_ZdlPvm>
    5794:	ldr	w1, [x24, #168]
    5798:	cbz	w1, 52ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15b4>
    579c:	cmn	x19, #0x10
    57a0:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    57a4:	b.eq	4ee8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11f0>  // b.none
    57a8:	lsr	w22, w19, #4
    57ac:	lsr	w23, w19, #9
    57b0:	eor	w2, w22, w23
    57b4:	sub	w8, w1, #0x1
    57b8:	and	w2, w2, w8
    57bc:	ldr	w4, [x24, #160]
    57c0:	ldr	x20, [x24, #152]
    57c4:	lsl	w3, w2, #4
    57c8:	add	w4, w4, #0x1
    57cc:	add	x0, x20, x3
    57d0:	ldr	x7, [x20, x3]
    57d4:	cmp	x19, x7
    57d8:	b.eq	50c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13c8>  // b.none
    57dc:	mov	w5, #0x1                   	// #1
    57e0:	mov	x3, #0x0                   	// #0
    57e4:	cmn	x7, #0x8
    57e8:	b.ne	5f88 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2290>  // b.any
    57ec:	cbz	x3, 4f68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1270>
    57f0:	mov	x0, x3
    57f4:	ldr	x2, [x3]
    57f8:	b	4f6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1274>
    57fc:	mov	x1, x25
    5800:	mov	x0, x20
    5804:	bl	0 <_ZdlPvm>
    5808:	ldr	w1, [x24, #168]
    580c:	cbz	w1, 52ac <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x15b4>
    5810:	cmn	x19, #0x10
    5814:	ccmn	x19, #0x8, #0x4, ne  // ne = any
    5818:	b.eq	4ee8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11f0>  // b.none
    581c:	sub	w1, w1, #0x1
    5820:	eor	w3, w22, w23
    5824:	and	w3, w3, w1
    5828:	ldr	w2, [x24, #160]
    582c:	ldr	x7, [x24, #152]
    5830:	lsl	w4, w3, #4
    5834:	add	w2, w2, #0x1
    5838:	add	x0, x7, x4
    583c:	ldr	x6, [x7, x4]
    5840:	cmp	x19, x6
    5844:	b.ne	5dec <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20f4>  // b.any
    5848:	str	w2, [x24, #160]
    584c:	b	4b54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe5c>
    5850:	ldr	x1, [sp, #112]
    5854:	mov	x0, x23
    5858:	bl	0 <_ZdlPvm>
    585c:	ldr	w1, [x24, #136]
    5860:	cbz	w1, 5778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a80>
    5864:	mov	w0, #0xfffd                	// #65533
    5868:	cmp	w27, w0
    586c:	b.hi	5cc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fd0>  // b.pmore
    5870:	and	w0, w22, #0xffff
    5874:	mov	w2, #0x25                  	// #37
    5878:	sub	w8, w1, #0x1
    587c:	ldr	w5, [x24, #128]
    5880:	ldr	x23, [x24, #120]
    5884:	mul	w0, w0, w2
    5888:	add	w5, w5, #0x1
    588c:	and	w0, w0, w8
    5890:	ubfiz	x3, x0, #4, #22
    5894:	add	x2, x23, x3
    5898:	ldrh	w7, [x23, x3]
    589c:	cmp	w27, w7
    58a0:	b.ne	603c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2344>  // b.any
    58a4:	str	w5, [x24, #128]
    58a8:	b	5134 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x143c>
    58ac:	mov	x1, x21
    58b0:	mov	x0, x23
    58b4:	bl	0 <_ZdlPvm>
    58b8:	ldr	w1, [x24, #136]
    58bc:	cbz	w1, 5778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a80>
    58c0:	sub	w1, w1, #0x1
    58c4:	ldr	w4, [x24, #128]
    58c8:	and	w20, w20, w1
    58cc:	ldr	x6, [x24, #120]
    58d0:	ubfiz	x0, x20, #4, #22
    58d4:	add	w4, w4, #0x1
    58d8:	add	x2, x6, x0
    58dc:	ldrh	w0, [x6, x0]
    58e0:	cmp	w0, w22
    58e4:	b.eq	4bc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xed0>  // b.none
    58e8:	mov	w5, #0x1                   	// #1
    58ec:	mov	x3, #0x0                   	// #0
    58f0:	mov	w10, #0xffff                	// #65535
    58f4:	mov	w8, #0xfffe                	// #65534
    58f8:	cmp	w0, w10
    58fc:	b.ne	5db8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20c0>  // b.any
    5900:	cbz	x3, 4bc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xecc>
    5904:	ldrh	w0, [x3]
    5908:	mov	x2, x3
    590c:	b	4bc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xed0>
    5910:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5914:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5918:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    591c:	add	x3, x3, #0x0
    5920:	add	x1, x1, #0x0
    5924:	add	x0, x0, #0x0
    5928:	mov	w2, #0x15b                 	// #347
    592c:	bl	0 <__assert_fail>
    5930:	ldr	x1, [sp, #112]
    5934:	mov	x0, x23
    5938:	bl	0 <_ZdlPvm>
    593c:	ldr	w1, [x24, #136]
    5940:	cbz	w1, 5778 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a80>
    5944:	sub	w7, w1, #0x1
    5948:	ldr	w5, [x24, #128]
    594c:	and	w28, w28, w7
    5950:	ldr	x23, [x24, #120]
    5954:	ubfiz	x0, x28, #4, #22
    5958:	add	w5, w5, #0x1
    595c:	add	x2, x23, x0
    5960:	ldrh	w4, [x23, x0]
    5964:	cmp	w27, w4
    5968:	b.eq	58a4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bac>  // b.none
    596c:	mov	w0, #0x1                   	// #1
    5970:	mov	x3, #0x0                   	// #0
    5974:	mov	w11, #0xffff                	// #65535
    5978:	mov	w10, #0xfffe                	// #65534
    597c:	cmp	w4, w11
    5980:	b.ne	5d10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2018>  // b.any
    5984:	cbz	x3, 5120 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1428>
    5988:	ldrh	w0, [x3]
    598c:	mov	x2, x3
    5990:	b	5124 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x142c>
    5994:	mov	w5, #0x1                   	// #1
    5998:	mov	x4, #0x0                   	// #0
    599c:	cmn	x6, #0x8
    59a0:	b.ne	5ff8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2300>  // b.any
    59a4:	cmp	x4, #0x0
    59a8:	ldr	w1, [x24, #160]
    59ac:	csel	x3, x3, x4, eq  // eq = none
    59b0:	ldr	x2, [x21, #8]
    59b4:	add	w1, w1, #0x1
    59b8:	str	x0, [x3]
    59bc:	str	xzr, [x21, #8]
    59c0:	str	x2, [x3, #8]
    59c4:	ldr	x27, [x21, #8]
    59c8:	str	w1, [x24, #160]
    59cc:	cbz	x27, 502c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>
    59d0:	ldr	x0, [x27, #176]
    59d4:	add	x1, x27, #0xc0
    59d8:	cmp	x0, x1
    59dc:	b.eq	59e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1cec>  // b.none
    59e0:	bl	0 <free>
    59e4:	ldr	x0, [x27, #96]
    59e8:	add	x1, x27, #0x70
    59ec:	cmp	x0, x1
    59f0:	b.eq	59f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d00>  // b.none
    59f4:	bl	0 <free>
    59f8:	mov	x1, x27
    59fc:	ldr	x0, [x1], #16
    5a00:	cmp	x0, x1
    5a04:	b.eq	5a0c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d14>  // b.none
    5a08:	bl	0 <free>
    5a0c:	mov	x0, x27
    5a10:	mov	x1, #0x150                 	// #336
    5a14:	bl	0 <_ZdlPvm>
    5a18:	b	502c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1334>
    5a1c:	cbnz	w2, 602c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2334>
    5a20:	ubfiz	x2, x1, #4, #32
    5a24:	mov	x3, #0xfffffffffffffff8    	// #-8
    5a28:	add	x2, x0, x2
    5a2c:	cmp	x0, x2
    5a30:	b.eq	580c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b14>  // b.none
    5a34:	str	x3, [x0], #16
    5a38:	cmp	x2, x0
    5a3c:	b.ne	5a34 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d3c>  // b.any
    5a40:	b	580c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b14>
    5a44:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    5a48:	ubfiz	x2, x1, #4, #32
    5a4c:	mov	w3, #0xffffffff            	// #-1
    5a50:	add	x2, x0, x2
    5a54:	cmp	x0, x2
    5a58:	b.eq	5940 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c48>  // b.none
    5a5c:	strh	w3, [x0], #16
    5a60:	cmp	x2, x0
    5a64:	b.ne	5a5c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d64>  // b.any
    5a68:	b	5940 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c48>
    5a6c:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    5a70:	ubfiz	x2, x1, #4, #32
    5a74:	mov	w3, #0xffffffff            	// #-1
    5a78:	add	x2, x0, x2
    5a7c:	cmp	x0, x2
    5a80:	b.eq	5860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b68>  // b.none
    5a84:	strh	w3, [x0], #16
    5a88:	cmp	x2, x0
    5a8c:	b.ne	5a84 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1d8c>  // b.any
    5a90:	b	5860 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1b68>
    5a94:	add	w3, w3, w7
    5a98:	cmp	x2, #0x0
    5a9c:	and	w8, w0, w3
    5aa0:	ccmp	w5, w10, #0x0, eq  // eq = none
    5aa4:	csel	x2, x2, x4, ne  // ne = any
    5aa8:	add	w7, w7, #0x1
    5aac:	lsl	x5, x8, #4
    5ab0:	and	w3, w0, w3
    5ab4:	add	x4, x23, x8, lsl #4
    5ab8:	ldrh	w5, [x23, x5]
    5abc:	cmp	w27, w5
    5ac0:	b.eq	43b8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x6c0>  // b.none
    5ac4:	b	50d8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x13e0>
    5ac8:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    5acc:	ubfiz	x2, x1, #4, #32
    5ad0:	mov	w3, #0xffffffff            	// #-1
    5ad4:	add	x2, x0, x2
    5ad8:	cmp	x0, x2
    5adc:	b.eq	58bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bc4>  // b.none
    5ae0:	strh	w3, [x0], #16
    5ae4:	cmp	x2, x0
    5ae8:	b.ne	5ae0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1de8>  // b.any
    5aec:	b	58bc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1bc4>
    5af0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5af4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5af8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5afc:	add	x3, x3, #0x0
    5b00:	add	x1, x1, #0x0
    5b04:	add	x0, x0, #0x0
    5b08:	mov	w2, #0x1fe                 	// #510
    5b0c:	bl	0 <__assert_fail>
    5b10:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5b14:	add	w3, w3, w6
    5b18:	cmp	x2, #0x0
    5b1c:	and	w7, w0, w3
    5b20:	ccmp	w4, w8, #0x0, eq  // eq = none
    5b24:	csel	x2, x2, x5, ne  // ne = any
    5b28:	add	w6, w6, #0x1
    5b2c:	lsl	x4, x7, #4
    5b30:	and	w3, w0, w3
    5b34:	add	x5, x23, x7, lsl #4
    5b38:	ldrh	w4, [x23, x4]
    5b3c:	cmp	w4, w22
    5b40:	b.ne	4b7c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe84>  // b.any
    5b44:	ldr	x1, [x5, #8]
    5b48:	b	4a98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xda0>
    5b4c:	add	w2, w7, w2
    5b50:	cmp	x0, #0x0
    5b54:	and	w8, w5, w2
    5b58:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    5b5c:	csel	x0, x0, x3, ne  // ne = any
    5b60:	add	w7, w7, #0x1
    5b64:	lsl	x4, x8, #4
    5b68:	and	w2, w5, w2
    5b6c:	add	x3, x20, x8, lsl #4
    5b70:	ldr	x4, [x20, x4]
    5b74:	cmp	x19, x4
    5b78:	b.eq	4a14 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd1c>  // b.none
    5b7c:	b	4f20 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1228>
    5b80:	cbnz	w2, 602c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2334>
    5b84:	ubfiz	x2, x1, #4, #32
    5b88:	mov	x3, #0xfffffffffffffff8    	// #-8
    5b8c:	add	x2, x0, x2
    5b90:	cmp	x0, x2
    5b94:	b.eq	5798 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aa0>  // b.none
    5b98:	str	x3, [x0], #16
    5b9c:	cmp	x2, x0
    5ba0:	b.ne	5b98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ea0>  // b.any
    5ba4:	b	5798 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aa0>
    5ba8:	add	w1, w1, w5
    5bac:	cmp	x0, #0x0
    5bb0:	and	w6, w4, w1
    5bb4:	ccmn	x2, #0x10, #0x0, eq  // eq = none
    5bb8:	csel	x0, x0, x3, ne  // ne = any
    5bbc:	add	w5, w5, #0x1
    5bc0:	lsl	x2, x6, #4
    5bc4:	and	w1, w4, w1
    5bc8:	add	x3, x20, x6, lsl #4
    5bcc:	ldr	x2, [x20, x2]
    5bd0:	cmp	x19, x2
    5bd4:	b.eq	4a94 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xd9c>  // b.none
    5bd8:	b	4afc <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe04>
    5bdc:	cbnz	w2, 5d98 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20a0>
    5be0:	ubfiz	x2, x1, #4, #32
    5be4:	mov	w3, #0xffffffff            	// #-1
    5be8:	add	x2, x0, x2
    5bec:	cmp	x0, x2
    5bf0:	b.eq	572c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a34>  // b.none
    5bf4:	strh	w3, [x0], #16
    5bf8:	cmp	x2, x0
    5bfc:	b.ne	5bf4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1efc>  // b.any
    5c00:	b	572c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1a34>
    5c04:	mov	w5, #0x1                   	// #1
    5c08:	mov	x4, #0x0                   	// #0
    5c0c:	mov	w10, #0xffff                	// #65535
    5c10:	cmp	w6, w10
    5c14:	b.ne	5cd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1fe0>  // b.any
    5c18:	cmp	x4, #0x0
    5c1c:	ldr	w1, [x24, #128]
    5c20:	csel	x3, x3, x4, eq  // eq = none
    5c24:	ldr	x2, [x28, #8]
    5c28:	add	w1, w1, #0x1
    5c2c:	strh	w0, [x3]
    5c30:	str	xzr, [x28, #8]
    5c34:	str	x2, [x3, #8]
    5c38:	ldr	x26, [x28, #8]
    5c3c:	str	w1, [x24, #128]
    5c40:	cbz	x26, 4c80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf88>
    5c44:	ldr	x0, [x26, #176]
    5c48:	add	x2, x26, #0xc0
    5c4c:	cmp	x0, x2
    5c50:	b.eq	5c58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f60>  // b.none
    5c54:	bl	0 <free>
    5c58:	ldr	x0, [x26, #96]
    5c5c:	add	x2, x26, #0x70
    5c60:	cmp	x0, x2
    5c64:	b.eq	5c6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f74>  // b.none
    5c68:	bl	0 <free>
    5c6c:	mov	x2, x26
    5c70:	ldr	x0, [x2], #16
    5c74:	cmp	x0, x2
    5c78:	b.eq	5c80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f88>  // b.none
    5c7c:	bl	0 <free>
    5c80:	mov	x0, x26
    5c84:	mov	x1, #0x150                 	// #336
    5c88:	bl	0 <_ZdlPvm>
    5c8c:	b	4c80 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xf88>
    5c90:	add	w1, w1, w5
    5c94:	cmp	x4, #0x0
    5c98:	and	w8, w2, w1
    5c9c:	mov	w9, #0xfffe                	// #65534
    5ca0:	ccmp	w6, w9, #0x0, eq  // eq = none
    5ca4:	add	w5, w5, #0x1
    5ca8:	lsl	x6, x8, #4
    5cac:	csel	x4, x4, x3, ne  // ne = any
    5cb0:	and	w1, w2, w1
    5cb4:	add	x3, x7, x8, lsl #4
    5cb8:	ldrh	w6, [x7, x6]
    5cbc:	cmp	w0, w6
    5cc0:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    5cc4:	b	569c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x19a4>
    5cc8:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ccc:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5cd0:	add	x3, x3, #0x0
    5cd4:	b	4ef4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x11fc>
    5cd8:	add	w1, w5, w1
    5cdc:	cmp	x4, #0x0
    5ce0:	and	w8, w2, w1
    5ce4:	mov	w9, #0xfffe                	// #65534
    5ce8:	ccmp	w6, w9, #0x0, eq  // eq = none
    5cec:	add	w5, w5, #0x1
    5cf0:	lsl	x6, x8, #4
    5cf4:	csel	x4, x4, x3, ne  // ne = any
    5cf8:	and	w1, w2, w1
    5cfc:	add	x3, x7, x8, lsl #4
    5d00:	ldrh	w6, [x7, x6]
    5d04:	cmp	w0, w6
    5d08:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    5d0c:	b	5c10 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1f18>
    5d10:	add	w28, w0, w28
    5d14:	cmp	x3, #0x0
    5d18:	and	w8, w7, w28
    5d1c:	ccmp	w4, w10, #0x0, eq  // eq = none
    5d20:	csel	x3, x3, x2, ne  // ne = any
    5d24:	add	w0, w0, #0x1
    5d28:	lsl	x4, x8, #4
    5d2c:	and	w28, w7, w28
    5d30:	add	x2, x23, x8, lsl #4
    5d34:	ldrh	w4, [x23, x4]
    5d38:	cmp	w27, w4
    5d3c:	b.ne	597c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c84>  // b.any
    5d40:	str	w5, [x24, #128]
    5d44:	b	5134 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x143c>
    5d48:	mov	w5, #0x1                   	// #1
    5d4c:	mov	x3, #0x0                   	// #0
    5d50:	mov	w11, #0xffff                	// #65535
    5d54:	mov	w10, #0xfffe                	// #65534
    5d58:	cmp	w6, w11
    5d5c:	b.eq	5900 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c08>  // b.none
    5d60:	add	w0, w5, w0
    5d64:	cmp	x3, #0x0
    5d68:	and	w8, w1, w0
    5d6c:	ccmp	w6, w10, #0x0, eq  // eq = none
    5d70:	csel	x3, x3, x2, ne  // ne = any
    5d74:	add	w5, w5, #0x1
    5d78:	lsl	x6, x8, #4
    5d7c:	and	w0, w1, w0
    5d80:	add	x2, x7, x8, lsl #4
    5d84:	ldrh	w6, [x7, x6]
    5d88:	cmp	w6, w22
    5d8c:	b.ne	5d58 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2060>  // b.any
    5d90:	str	w4, [x24, #128]
    5d94:	b	4bd8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xee0>
    5d98:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5d9c:	add	x3, x3, #0x0
    5da0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5da4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5da8:	add	x1, x1, #0x0
    5dac:	add	x0, x0, #0x0
    5db0:	mov	w2, #0x15b                 	// #347
    5db4:	bl	0 <__assert_fail>
    5db8:	add	w20, w5, w20
    5dbc:	cmp	x3, #0x0
    5dc0:	and	w7, w1, w20
    5dc4:	ccmp	w0, w8, #0x0, eq  // eq = none
    5dc8:	csel	x3, x3, x2, ne  // ne = any
    5dcc:	add	w5, w5, #0x1
    5dd0:	lsl	x0, x7, #4
    5dd4:	and	w20, w1, w20
    5dd8:	add	x2, x6, x7, lsl #4
    5ddc:	ldrh	w0, [x6, x0]
    5de0:	cmp	w0, w22
    5de4:	b.eq	4bc8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xed0>  // b.none
    5de8:	b	58f8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c00>
    5dec:	mov	w5, #0x1                   	// #1
    5df0:	mov	x4, #0x0                   	// #0
    5df4:	cmn	x6, #0x8
    5df8:	b.ne	5e44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x214c>  // b.any
    5dfc:	cbz	x4, 4b44 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe4c>
    5e00:	mov	x0, x4
    5e04:	ldr	x1, [x4]
    5e08:	b	4b48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe50>
    5e0c:	add	w1, w7, w1
    5e10:	cmp	x5, #0x0
    5e14:	and	w11, w2, w1
    5e18:	mov	w3, #0xfffe                	// #65534
    5e1c:	ccmp	w8, w3, #0x0, eq  // eq = none
    5e20:	add	w7, w7, #0x1
    5e24:	lsl	x8, x11, #4
    5e28:	csel	x5, x5, x4, ne  // ne = any
    5e2c:	and	w1, w2, w1
    5e30:	add	x4, x10, x11, lsl #4
    5e34:	ldrh	w8, [x10, x8]
    5e38:	cmp	w0, w8
    5e3c:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    5e40:	b	53c0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x16c8>
    5e44:	add	w3, w5, w3
    5e48:	cmp	x4, #0x0
    5e4c:	and	w8, w1, w3
    5e50:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    5e54:	csel	x4, x4, x0, ne  // ne = any
    5e58:	add	w5, w5, #0x1
    5e5c:	lsl	x6, x8, #4
    5e60:	and	w3, w1, w3
    5e64:	add	x0, x7, x8, lsl #4
    5e68:	ldr	x6, [x7, x6]
    5e6c:	cmp	x19, x6
    5e70:	b.ne	5df4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20fc>  // b.any
    5e74:	str	w2, [x24, #160]
    5e78:	b	4b54 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe5c>
    5e7c:	add	w1, w1, w7
    5e80:	cmp	x5, #0x0
    5e84:	and	w11, w3, w1
    5e88:	mov	w2, #0xfffe                	// #65534
    5e8c:	ccmp	w8, w2, #0x0, eq  // eq = none
    5e90:	add	w7, w7, #0x1
    5e94:	lsl	x8, x11, #4
    5e98:	csel	x5, x5, x4, ne  // ne = any
    5e9c:	and	w1, w3, w1
    5ea0:	add	x4, x10, x11, lsl #4
    5ea4:	ldrh	w8, [x10, x8]
    5ea8:	cmp	w0, w8
    5eac:	b.eq	4cc4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xfcc>  // b.none
    5eb0:	b	522c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1534>
    5eb4:	add	w26, w26, w5
    5eb8:	cmp	x3, #0x0
    5ebc:	and	w7, w4, w26
    5ec0:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    5ec4:	csel	x3, x3, x0, ne  // ne = any
    5ec8:	add	w5, w5, #0x1
    5ecc:	lsl	x1, x7, #4
    5ed0:	and	w26, w4, w26
    5ed4:	add	x0, x6, x7, lsl #4
    5ed8:	ldr	x1, [x6, x1]
    5edc:	cmp	x19, x1
    5ee0:	b.eq	4b48 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0xe50>  // b.none
    5ee4:	b	4d28 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1030>
    5ee8:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5eec:	add	x0, x0, #0x0
    5ef0:	bl	0 <_ZSt19__throw_logic_errorPKc>
    5ef4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5ef8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5efc:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5f00:	add	x3, x3, #0x0
    5f04:	add	x1, x1, #0x0
    5f08:	add	x0, x0, #0x0
    5f0c:	mov	w2, #0x99                  	// #153
    5f10:	bl	0 <__assert_fail>
    5f14:	add	w1, w1, w5
    5f18:	cmp	x4, #0x0
    5f1c:	and	w10, w2, w1
    5f20:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    5f24:	csel	x4, x4, x3, ne  // ne = any
    5f28:	add	w5, w5, #0x1
    5f2c:	lsl	x7, x10, #4
    5f30:	and	w1, w2, w1
    5f34:	add	x3, x8, x10, lsl #4
    5f38:	ldr	x7, [x8, x7]
    5f3c:	cmp	x0, x7
    5f40:	b.eq	5078 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1380>  // b.none
    5f44:	b	552c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1834>
    5f48:	mov	w3, #0x1                   	// #1
    5f4c:	mov	x2, #0x0                   	// #0
    5f50:	cmn	x5, #0x8
    5f54:	b.ne	5fc0 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x22c8>  // b.any
    5f58:	cbz	x2, 4f68 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1270>
    5f5c:	mov	x0, x2
    5f60:	ldr	x2, [x2]
    5f64:	b	4f6c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1274>
    5f68:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5f6c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5f70:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    5f74:	add	x3, x3, #0x0
    5f78:	add	x1, x1, #0x0
    5f7c:	add	x0, x0, #0x0
    5f80:	mov	w2, #0x33                  	// #51
    5f84:	bl	0 <__assert_fail>
    5f88:	add	w2, w2, w5
    5f8c:	cmp	x3, #0x0
    5f90:	and	w10, w8, w2
    5f94:	ccmn	x7, #0x10, #0x0, eq  // eq = none
    5f98:	csel	x3, x3, x0, ne  // ne = any
    5f9c:	add	w5, w5, #0x1
    5fa0:	lsl	x7, x10, #4
    5fa4:	and	w2, w8, w2
    5fa8:	add	x0, x20, x10, lsl #4
    5fac:	ldr	x7, [x20, x7]
    5fb0:	cmp	x19, x7
    5fb4:	b.ne	57e4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1aec>  // b.any
    5fb8:	str	w4, [x24, #160]
    5fbc:	b	4f78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1280>
    5fc0:	add	w25, w3, w25
    5fc4:	cmp	x2, #0x0
    5fc8:	and	w8, w7, w25
    5fcc:	ccmn	x5, #0x10, #0x0, eq  // eq = none
    5fd0:	csel	x2, x2, x0, ne  // ne = any
    5fd4:	add	w3, w3, #0x1
    5fd8:	lsl	x5, x8, #4
    5fdc:	and	w25, w7, w25
    5fe0:	add	x0, x20, x8, lsl #4
    5fe4:	ldr	x5, [x20, x5]
    5fe8:	cmp	x19, x5
    5fec:	b.ne	5f50 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2258>  // b.any
    5ff0:	str	w4, [x24, #160]
    5ff4:	b	4f78 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1280>
    5ff8:	add	w1, w1, w5
    5ffc:	cmp	x4, #0x0
    6000:	and	w8, w2, w1
    6004:	ccmn	x6, #0x10, #0x0, eq  // eq = none
    6008:	csel	x4, x4, x3, ne  // ne = any
    600c:	add	w5, w5, #0x1
    6010:	lsl	x6, x8, #4
    6014:	and	w1, w2, w1
    6018:	add	x3, x7, x8, lsl #4
    601c:	ldr	x6, [x7, x6]
    6020:	cmp	x0, x6
    6024:	b.eq	5078 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1380>  // b.none
    6028:	b	599c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1ca4>
    602c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6030:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6034:	add	x3, x3, #0x0
    6038:	b	5da4 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x20ac>
    603c:	mov	w4, #0x1                   	// #1
    6040:	mov	x3, #0x0                   	// #0
    6044:	mov	w12, #0xffff                	// #65535
    6048:	mov	w11, #0xfffe                	// #65534
    604c:	cmp	w7, w12
    6050:	b.eq	5984 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x1c8c>  // b.none
    6054:	add	w0, w0, w4
    6058:	cmp	x3, #0x0
    605c:	and	w10, w8, w0
    6060:	ccmp	w7, w11, #0x0, eq  // eq = none
    6064:	csel	x3, x3, x2, ne  // ne = any
    6068:	add	w4, w4, #0x1
    606c:	lsl	x7, x10, #4
    6070:	and	w0, w8, w0
    6074:	add	x2, x23, x10, lsl #4
    6078:	ldrh	w7, [x23, x7]
    607c:	cmp	w27, w7
    6080:	b.ne	604c <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x2354>  // b.any
    6084:	str	w5, [x24, #128]
    6088:	b	5134 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE+0x143c>
    608c:	mov	x0, #0x0                   	// #0
    6090:	strh	wzr, [x0]
    6094:	brk	#0x3e8
    6098:	mov	x1, #0x0                   	// #0
    609c:	str	x0, [x1]
    60a0:	brk	#0x3e8
    60a4:	nop

00000000000060a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>:
    60a8:	stp	x29, x30, [sp, #-96]!
    60ac:	mov	x29, sp
    60b0:	stp	x19, x20, [sp, #16]
    60b4:	mov	x19, x0
    60b8:	ldr	w0, [x0, #136]
    60bc:	stp	x21, x22, [sp, #32]
    60c0:	mov	x20, x1
    60c4:	ldr	w1, [x1]
    60c8:	stp	x23, x24, [sp, #48]
    60cc:	mov	x24, x8
    60d0:	ldr	x22, [x19, #120]
    60d4:	cbz	w0, 61a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xf8>
    60d8:	mov	w2, #0xfffd                	// #65533
    60dc:	and	w23, w1, #0xffff
    60e0:	cmp	w2, w1, uxth
    60e4:	b.cc	6ce0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc38>  // b.lo, b.ul, b.last
    60e8:	and	w21, w1, #0xffff
    60ec:	mov	w1, #0x25                  	// #37
    60f0:	sub	w2, w0, #0x1
    60f4:	mul	w1, w21, w1
    60f8:	and	w1, w1, w2
    60fc:	ubfiz	x3, x1, #4, #22
    6100:	add	x4, x22, x3
    6104:	ldrh	w3, [x22, x3]
    6108:	cmp	w23, w3
    610c:	b.ne	625c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1b4>  // b.any
    6110:	stp	x25, x26, [sp, #64]
    6114:	stp	x27, x28, [sp, #80]
    6118:	ubfiz	x28, x0, #4, #32
    611c:	add	x25, x22, x28
    6120:	cmp	x25, x4
    6124:	ldr	x6, [x19, #112]
    6128:	b.eq	6194 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xec>  // b.none
    612c:	cbz	w0, 6444 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x39c>
    6130:	mov	w1, #0xfffd                	// #65533
    6134:	cmp	w23, w1
    6138:	b.hi	6d94 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcec>  // b.pmore
    613c:	mov	w20, #0x25                  	// #37
    6140:	mul	w20, w21, w20
    6144:	and	w4, w20, w2
    6148:	ubfiz	x1, x4, #4, #22
    614c:	add	x5, x22, x1
    6150:	ldrh	w1, [x22, x1]
    6154:	cmp	w23, w1
    6158:	b.ne	63c0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x318>  // b.any
    615c:	ldr	x1, [x5, #8]
    6160:	ldrb	w0, [x24, #8]
    6164:	and	w0, w0, #0xfffffffc
    6168:	orr	w0, w0, #0x2
    616c:	strb	w0, [x24, #8]
    6170:	mov	x0, x24
    6174:	ldp	x25, x26, [sp, #64]
    6178:	ldp	x27, x28, [sp, #80]
    617c:	str	x1, [x24]
    6180:	ldp	x19, x20, [sp, #16]
    6184:	ldp	x21, x22, [sp, #32]
    6188:	ldp	x23, x24, [sp, #48]
    618c:	ldp	x29, x30, [sp], #96
    6190:	ret
    6194:	ldp	x25, x26, [sp, #64]
    6198:	ldp	x27, x28, [sp, #80]
    619c:	nop
    61a0:	ldr	w0, [x19, #168]
    61a4:	ldr	x21, [x19, #152]
    61a8:	cbz	w0, 6234 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x18c>
    61ac:	cmn	x20, #0x10
    61b0:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    61b4:	b.eq	6d08 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc60>  // b.none
    61b8:	lsr	w22, w20, #4
    61bc:	lsr	w23, w20, #9
    61c0:	eor	w1, w22, w23
    61c4:	sub	w2, w0, #0x1
    61c8:	and	w1, w1, w2
    61cc:	lsl	w3, w1, #4
    61d0:	add	x4, x21, x3
    61d4:	ldr	x3, [x21, x3]
    61d8:	cmp	x20, x3
    61dc:	b.ne	6388 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2e0>  // b.any
    61e0:	stp	x25, x26, [sp, #64]
    61e4:	ubfiz	x26, x0, #4, #32
    61e8:	add	x25, x21, x26
    61ec:	cmp	x25, x4
    61f0:	ldr	x5, [x19, #144]
    61f4:	b.eq	6230 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x188>  // b.none
    61f8:	stp	x27, x28, [sp, #80]
    61fc:	cbz	w0, 6298 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1f0>
    6200:	cmn	x20, #0x10
    6204:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    6208:	b.eq	6d10 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc68>  // b.none
    620c:	eor	w27, w22, w23
    6210:	and	w3, w27, w2
    6214:	lsl	w1, w3, #4
    6218:	add	x4, x21, x1
    621c:	ldr	x28, [x21, x1]
    6220:	cmp	x20, x28
    6224:	b.ne	6760 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6b8>  // b.any
    6228:	ldr	x1, [x4, #8]
    622c:	b	6160 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6230:	ldp	x25, x26, [sp, #64]
    6234:	mov	x1, x20
    6238:	mov	x0, x19
    623c:	mov	x8, x24
    6240:	bl	3cf8 <_ZN4llvm3mca12InstrBuilder19createInstrDescImplERKNS_6MCInstE>
    6244:	mov	x0, x24
    6248:	ldp	x19, x20, [sp, #16]
    624c:	ldp	x21, x22, [sp, #32]
    6250:	ldp	x23, x24, [sp, #48]
    6254:	ldp	x29, x30, [sp], #96
    6258:	ret
    625c:	mov	w4, #0x1                   	// #1
    6260:	mov	w5, #0xffff                	// #65535
    6264:	cmp	w3, w5
    6268:	b.eq	61a0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xf8>  // b.none
    626c:	add	w1, w4, w1
    6270:	add	w6, w4, #0x1
    6274:	and	w3, w2, w1
    6278:	and	w1, w2, w1
    627c:	lsl	x3, x3, #4
    6280:	add	x4, x22, x3
    6284:	ldrh	w3, [x22, x3]
    6288:	cmp	w23, w3
    628c:	b.eq	6110 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x68>  // b.none
    6290:	mov	w4, w6
    6294:	b	6264 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1bc>
    6298:	add	x5, x5, #0x1
    629c:	mov	w3, #0x0                   	// #0
    62a0:	str	x5, [x19, #144]
    62a4:	sub	w0, w3, #0x1
    62a8:	mov	w1, #0x40                  	// #64
    62ac:	orr	x0, x0, x0, lsr #1
    62b0:	orr	x0, x0, x0, lsr #2
    62b4:	orr	x0, x0, x0, lsr #4
    62b8:	orr	x0, x0, x0, lsr #8
    62bc:	orr	x0, x0, x0, lsr #16
    62c0:	add	x0, x0, #0x1
    62c4:	cmp	w0, w1
    62c8:	csel	w0, w0, w1, cs  // cs = hs, nlast
    62cc:	str	w0, [x19, #168]
    62d0:	ubfiz	x0, x0, #4, #32
    62d4:	bl	0 <_Znwm>
    62d8:	ldr	w1, [x19, #168]
    62dc:	str	x0, [x19, #152]
    62e0:	str	xzr, [x19, #160]
    62e4:	sub	w2, w1, #0x1
    62e8:	and	w2, w2, w1
    62ec:	cbz	x21, 6bd0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb28>
    62f0:	cbnz	w2, 6e90 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xde8>
    62f4:	ubfiz	x1, x1, #4, #32
    62f8:	mov	x2, #0xfffffffffffffff8    	// #-8
    62fc:	add	x1, x0, x1
    6300:	cmp	x0, x1
    6304:	b.eq	6314 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x26c>  // b.none
    6308:	str	x2, [x0], #16
    630c:	cmp	x1, x0
    6310:	b.ne	6308 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x260>  // b.any
    6314:	mov	x27, x21
    6318:	b	6328 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x280>
    631c:	add	x27, x27, #0x10
    6320:	cmp	x27, x25
    6324:	b.eq	6948 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8a0>  // b.none
    6328:	ldr	x0, [x27]
    632c:	cmn	x0, #0x8
    6330:	ccmn	x0, #0x10, #0x4, ne  // ne = any
    6334:	b.eq	631c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>  // b.none
    6338:	ldr	w2, [x19, #168]
    633c:	cbz	w2, 6ec0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe18>
    6340:	lsr	w1, w0, #9
    6344:	sub	w2, w2, #0x1
    6348:	eor	w1, w1, w0, lsr #4
    634c:	and	w1, w1, w2
    6350:	ldr	x3, [x19, #152]
    6354:	lsl	w4, w1, #4
    6358:	add	x5, x3, x4
    635c:	ldr	x4, [x3, x4]
    6360:	cmp	x4, x0
    6364:	b.ne	6ae0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa38>  // b.any
    6368:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    636c:	add	x3, x3, #0x0
    6370:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6374:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6378:	add	x1, x1, #0x0
    637c:	add	x0, x0, #0x0
    6380:	mov	w2, #0x17a                 	// #378
    6384:	bl	0 <__assert_fail>
    6388:	mov	w4, #0x1                   	// #1
    638c:	cmn	x3, #0x8
    6390:	b.eq	6234 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x18c>  // b.none
    6394:	add	w1, w4, w1
    6398:	add	w5, w4, #0x1
    639c:	and	w3, w2, w1
    63a0:	and	w1, w2, w1
    63a4:	lsl	x3, x3, #4
    63a8:	add	x4, x21, x3
    63ac:	ldr	x3, [x21, x3]
    63b0:	cmp	x20, x3
    63b4:	b.eq	61e0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x138>  // b.none
    63b8:	mov	w4, w5
    63bc:	b	638c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2e4>
    63c0:	mov	w8, #0x1                   	// #1
    63c4:	mov	x3, #0x0                   	// #0
    63c8:	mov	w7, #0xffff                	// #65535
    63cc:	mov	w9, #0xfffe                	// #65534
    63d0:	cmp	w1, w7
    63d4:	b.ne	6b98 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xaf0>  // b.any
    63d8:	ldr	w4, [x19, #128]
    63dc:	add	x6, x6, #0x1
    63e0:	lsl	w1, w0, #1
    63e4:	str	x6, [x19, #112]
    63e8:	add	w6, w4, #0x1
    63ec:	cmp	x3, #0x0
    63f0:	add	w4, w1, w0
    63f4:	csel	x3, x3, x5, ne  // ne = any
    63f8:	cmp	w4, w6, lsl #2
    63fc:	b.ls	6450 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x3a8>  // b.plast
    6400:	ldr	w1, [x19, #132]
    6404:	sub	w1, w0, w1
    6408:	sub	w1, w1, w6
    640c:	cmp	w1, w0, lsr #3
    6410:	b.ls	6528 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x480>  // b.plast
    6414:	ldrh	w1, [x3]
    6418:	str	w6, [x19, #128]
    641c:	mov	w0, #0xffff                	// #65535
    6420:	cmp	w1, w0
    6424:	b.eq	6434 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x38c>  // b.none
    6428:	ldr	w0, [x19, #132]
    642c:	sub	w0, w0, #0x1
    6430:	str	w0, [x19, #132]
    6434:	mov	x1, #0x0                   	// #0
    6438:	strh	w23, [x3]
    643c:	str	xzr, [x3, #8]
    6440:	b	6160 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6444:	add	x6, x6, #0x1
    6448:	mov	w1, #0x0                   	// #0
    644c:	str	x6, [x19, #112]
    6450:	sub	w0, w1, #0x1
    6454:	mov	w1, #0x40                  	// #64
    6458:	orr	x0, x0, x0, lsr #1
    645c:	orr	x0, x0, x0, lsr #2
    6460:	orr	x0, x0, x0, lsr #4
    6464:	orr	x0, x0, x0, lsr #8
    6468:	orr	x0, x0, x0, lsr #16
    646c:	add	x0, x0, #0x1
    6470:	cmp	w0, w1
    6474:	csel	w0, w0, w1, cs  // cs = hs, nlast
    6478:	str	w0, [x19, #136]
    647c:	ubfiz	x0, x0, #4, #32
    6480:	bl	0 <_Znwm>
    6484:	ldr	w1, [x19, #136]
    6488:	str	x0, [x19, #120]
    648c:	str	xzr, [x19, #128]
    6490:	sub	w2, w1, #0x1
    6494:	and	w2, w2, w1
    6498:	cbz	x22, 6ab4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa0c>
    649c:	cbnz	w2, 6eb0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe08>
    64a0:	ubfiz	x1, x1, #4, #32
    64a4:	mov	w2, #0xffffffff            	// #-1
    64a8:	add	x1, x0, x1
    64ac:	cmp	x0, x1
    64b0:	b.eq	64c4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x41c>  // b.none
    64b4:	nop
    64b8:	strh	w2, [x0], #16
    64bc:	cmp	x1, x0
    64c0:	b.ne	64b8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x410>  // b.any
    64c4:	mov	x20, x22
    64c8:	mov	w27, #0xfffd                	// #65533
    64cc:	b	64dc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x434>
    64d0:	add	x20, x20, #0x10
    64d4:	cmp	x20, x25
    64d8:	b.eq	667c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5d4>  // b.none
    64dc:	ldrh	w0, [x20]
    64e0:	cmp	w0, w27
    64e4:	b.hi	64d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x428>  // b.pmore
    64e8:	ldr	w1, [x19, #136]
    64ec:	cbz	w1, 6ecc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe24>
    64f0:	mov	w2, #0x25                  	// #37
    64f4:	sub	w1, w1, #0x1
    64f8:	ldr	x4, [x19, #120]
    64fc:	mul	w2, w0, w2
    6500:	and	w2, w2, w1
    6504:	ubfiz	x5, x2, #4, #22
    6508:	add	x6, x4, x5
    650c:	ldrh	w5, [x4, x5]
    6510:	cmp	w5, w0
    6514:	b.ne	6a28 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x980>  // b.any
    6518:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    651c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6520:	add	x3, x3, #0x0
    6524:	b	6374 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2cc>
    6528:	mov	w1, w2
    652c:	lsr	w0, w2, #1
    6530:	orr	x0, x0, x1
    6534:	mov	w1, #0x40                  	// #64
    6538:	orr	x0, x0, x0, lsr #2
    653c:	orr	x0, x0, x0, lsr #4
    6540:	orr	x0, x0, x0, lsr #8
    6544:	orr	x0, x0, x0, lsr #16
    6548:	add	x0, x0, #0x1
    654c:	cmp	w0, w1
    6550:	csel	w0, w0, w1, cs  // cs = hs, nlast
    6554:	str	w0, [x19, #136]
    6558:	ubfiz	x0, x0, #4, #32
    655c:	bl	0 <_Znwm>
    6560:	ldr	w1, [x19, #136]
    6564:	str	x0, [x19, #120]
    6568:	str	xzr, [x19, #128]
    656c:	sub	w2, w1, #0x1
    6570:	and	w2, w2, w1
    6574:	cbz	x22, 6b68 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xac0>
    6578:	cbnz	w2, 6eb0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe08>
    657c:	ubfiz	x1, x1, #4, #32
    6580:	mov	w2, #0xffffffff            	// #-1
    6584:	add	x1, x0, x1
    6588:	cmp	x0, x1
    658c:	b.eq	659c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4f4>  // b.none
    6590:	strh	w2, [x0], #16
    6594:	cmp	x1, x0
    6598:	b.ne	6590 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x4e8>  // b.any
    659c:	mov	x21, x22
    65a0:	mov	w27, #0xfffd                	// #65533
    65a4:	b	65b4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x50c>
    65a8:	add	x21, x21, #0x10
    65ac:	cmp	x21, x25
    65b0:	b.eq	66fc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x654>  // b.none
    65b4:	ldrh	w0, [x21]
    65b8:	cmp	w0, w27
    65bc:	b.hi	65a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x500>  // b.pmore
    65c0:	ldr	w2, [x19, #136]
    65c4:	cbz	w2, 6ecc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe24>
    65c8:	mov	w1, #0x25                  	// #37
    65cc:	sub	w2, w2, #0x1
    65d0:	ldr	x4, [x19, #120]
    65d4:	mul	w1, w0, w1
    65d8:	and	w1, w1, w2
    65dc:	ubfiz	x5, x1, #4, #22
    65e0:	add	x6, x4, x5
    65e4:	ldrh	w5, [x4, x5]
    65e8:	cmp	w0, w5
    65ec:	b.eq	6518 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x470>  // b.none
    65f0:	mov	w9, #0x1                   	// #1
    65f4:	mov	x7, #0x0                   	// #0
    65f8:	mov	w8, #0xffff                	// #65535
    65fc:	cmp	w5, w8
    6600:	b.ne	6ca8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc00>  // b.any
    6604:	cmp	x7, #0x0
    6608:	ldr	w1, [x19, #128]
    660c:	csel	x7, x7, x6, ne  // ne = any
    6610:	ldr	x2, [x21, #8]
    6614:	add	w1, w1, #0x1
    6618:	strh	w0, [x7]
    661c:	str	xzr, [x21, #8]
    6620:	str	x2, [x7, #8]
    6624:	ldr	x26, [x21, #8]
    6628:	str	w1, [x19, #128]
    662c:	cbz	x26, 65a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x500>
    6630:	ldr	x0, [x26, #176]
    6634:	add	x2, x26, #0xc0
    6638:	cmp	x0, x2
    663c:	b.eq	6644 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x59c>  // b.none
    6640:	bl	0 <free>
    6644:	ldr	x0, [x26, #96]
    6648:	add	x2, x26, #0x70
    664c:	cmp	x0, x2
    6650:	b.eq	6658 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5b0>  // b.none
    6654:	bl	0 <free>
    6658:	mov	x2, x26
    665c:	ldr	x0, [x2], #16
    6660:	cmp	x0, x2
    6664:	b.eq	666c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5c4>  // b.none
    6668:	bl	0 <free>
    666c:	mov	x0, x26
    6670:	mov	x1, #0x150                 	// #336
    6674:	bl	0 <_ZdlPvm>
    6678:	b	65a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x500>
    667c:	mov	x1, x28
    6680:	mov	x0, x22
    6684:	bl	0 <_ZdlPvm>
    6688:	ldr	w1, [x19, #136]
    668c:	ldr	x0, [x19, #120]
    6690:	cbz	w1, 6928 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x880>
    6694:	mov	w2, #0xfffd                	// #65533
    6698:	cmp	w23, w2
    669c:	b.hi	6d94 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcec>  // b.pmore
    66a0:	mov	w2, #0x25                  	// #37
    66a4:	sub	w1, w1, #0x1
    66a8:	ldr	w4, [x19, #128]
    66ac:	mul	w2, w21, w2
    66b0:	add	w6, w4, #0x1
    66b4:	and	w2, w2, w1
    66b8:	ubfiz	x5, x2, #4, #22
    66bc:	add	x3, x0, x5
    66c0:	ldrh	w4, [x0, x5]
    66c4:	cmp	w23, w4
    66c8:	b.ne	66d4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x62c>  // b.any
    66cc:	str	w6, [x19, #128]
    66d0:	b	6428 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x380>
    66d4:	mov	w7, #0x1                   	// #1
    66d8:	mov	x5, #0x0                   	// #0
    66dc:	mov	w10, #0xffff                	// #65535
    66e0:	mov	w9, #0xfffe                	// #65534
    66e4:	cmp	w4, w10
    66e8:	b.ne	6da4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcfc>  // b.any
    66ec:	cbz	x5, 6c68 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xbc0>
    66f0:	ldrh	w1, [x5]
    66f4:	mov	x3, x5
    66f8:	b	6418 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x370>
    66fc:	mov	x1, x28
    6700:	mov	x0, x22
    6704:	bl	0 <_ZdlPvm>
    6708:	ldr	w1, [x19, #136]
    670c:	ldr	x0, [x19, #120]
    6710:	cbz	w1, 6928 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x880>
    6714:	sub	w1, w1, #0x1
    6718:	ldr	w4, [x19, #128]
    671c:	and	w20, w20, w1
    6720:	add	w6, w4, #0x1
    6724:	ubfiz	x2, x20, #4, #22
    6728:	add	x3, x0, x2
    672c:	ldrh	w2, [x0, x2]
    6730:	cmp	w23, w2
    6734:	b.eq	66cc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x624>  // b.none
    6738:	mov	w5, #0x1                   	// #1
    673c:	mov	x4, #0x0                   	// #0
    6740:	mov	w9, #0xffff                	// #65535
    6744:	mov	w8, #0xfffe                	// #65534
    6748:	cmp	w2, w9
    674c:	b.ne	6e20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd78>  // b.any
    6750:	cbz	x4, 6c68 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xbc0>
    6754:	ldrh	w1, [x4]
    6758:	mov	x3, x4
    675c:	b	6418 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x370>
    6760:	mov	w1, #0x1                   	// #1
    6764:	mov	x6, #0x0                   	// #0
    6768:	cmn	x28, #0x8
    676c:	b.ne	6c30 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb88>  // b.any
    6770:	ldr	w1, [x19, #160]
    6774:	add	x5, x5, #0x1
    6778:	lsl	w3, w0, #1
    677c:	str	x5, [x19, #144]
    6780:	add	w5, w1, #0x1
    6784:	cmp	x6, #0x0
    6788:	add	w1, w3, w0
    678c:	csel	x6, x6, x4, ne  // ne = any
    6790:	cmp	w1, w5, lsl #2
    6794:	b.ls	62a4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x1fc>  // b.plast
    6798:	ldr	w1, [x19, #164]
    679c:	sub	w1, w0, w1
    67a0:	sub	w1, w1, w5
    67a4:	cmp	w1, w0, lsr #3
    67a8:	b.ls	67d4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x72c>  // b.plast
    67ac:	ldr	x0, [x6]
    67b0:	str	w5, [x19, #160]
    67b4:	cmn	x0, #0x8
    67b8:	b.eq	67c8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x720>  // b.none
    67bc:	ldr	w0, [x19, #164]
    67c0:	sub	w0, w0, #0x1
    67c4:	str	w0, [x19, #164]
    67c8:	mov	x1, #0x0                   	// #0
    67cc:	stp	x20, xzr, [x6]
    67d0:	b	6160 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    67d4:	mov	w1, w2
    67d8:	lsr	w0, w2, #1
    67dc:	orr	x0, x0, x1
    67e0:	mov	w1, #0x40                  	// #64
    67e4:	orr	x0, x0, x0, lsr #2
    67e8:	orr	x0, x0, x0, lsr #4
    67ec:	orr	x0, x0, x0, lsr #8
    67f0:	orr	x0, x0, x0, lsr #16
    67f4:	add	x0, x0, #0x1
    67f8:	cmp	w0, w1
    67fc:	csel	w0, w0, w1, cs  // cs = hs, nlast
    6800:	str	w0, [x19, #168]
    6804:	ubfiz	x0, x0, #4, #32
    6808:	bl	0 <_Znwm>
    680c:	ldr	w2, [x19, #168]
    6810:	str	x0, [x19, #152]
    6814:	str	xzr, [x19, #160]
    6818:	sub	w1, w2, #0x1
    681c:	and	w1, w1, w2
    6820:	cbz	x21, 6c00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb58>
    6824:	cbnz	w1, 6e90 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xde8>
    6828:	ubfiz	x2, x2, #4, #32
    682c:	mov	x1, x28
    6830:	add	x2, x0, x2
    6834:	cmp	x0, x2
    6838:	b.eq	684c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7a4>  // b.none
    683c:	nop
    6840:	str	x1, [x0], #16
    6844:	cmp	x2, x0
    6848:	b.ne	6840 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x798>  // b.any
    684c:	mov	x22, x21
    6850:	b	6860 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7b8>
    6854:	add	x22, x22, #0x10
    6858:	cmp	x22, x25
    685c:	b.eq	69bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x914>  // b.none
    6860:	ldr	x0, [x22]
    6864:	cmn	x0, #0x10
    6868:	ccmn	x0, #0x8, #0x4, ne  // ne = any
    686c:	b.eq	6854 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7ac>  // b.none
    6870:	ldr	w2, [x19, #168]
    6874:	cbz	w2, 6ec0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe18>
    6878:	lsr	w1, w0, #9
    687c:	sub	w2, w2, #0x1
    6880:	eor	w1, w1, w0, lsr #4
    6884:	and	w1, w1, w2
    6888:	ldr	x3, [x19, #152]
    688c:	lsl	w4, w1, #4
    6890:	add	x5, x3, x4
    6894:	ldr	x4, [x3, x4]
    6898:	cmp	x4, x0
    689c:	b.eq	6368 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2c0>  // b.none
    68a0:	mov	w7, #0x1                   	// #1
    68a4:	mov	x6, #0x0                   	// #0
    68a8:	cmn	x4, #0x8
    68ac:	b.ne	6d54 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xcac>  // b.any
    68b0:	cmp	x6, #0x0
    68b4:	ldr	w1, [x19, #160]
    68b8:	csel	x6, x6, x5, ne  // ne = any
    68bc:	ldr	x2, [x22, #8]
    68c0:	add	w1, w1, #0x1
    68c4:	str	x0, [x6]
    68c8:	str	xzr, [x22, #8]
    68cc:	str	x2, [x6, #8]
    68d0:	ldr	x23, [x22, #8]
    68d4:	str	w1, [x19, #160]
    68d8:	cbz	x23, 6854 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7ac>
    68dc:	ldr	x0, [x23, #176]
    68e0:	add	x1, x23, #0xc0
    68e4:	cmp	x0, x1
    68e8:	b.eq	68f0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x848>  // b.none
    68ec:	bl	0 <free>
    68f0:	ldr	x0, [x23, #96]
    68f4:	add	x1, x23, #0x70
    68f8:	cmp	x0, x1
    68fc:	b.eq	6904 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x85c>  // b.none
    6900:	bl	0 <free>
    6904:	mov	x1, x23
    6908:	ldr	x0, [x1], #16
    690c:	cmp	x0, x1
    6910:	b.eq	6918 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x870>  // b.none
    6914:	bl	0 <free>
    6918:	mov	x0, x23
    691c:	mov	x1, #0x150                 	// #336
    6920:	bl	0 <_ZdlPvm>
    6924:	b	6854 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x7ac>
    6928:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    692c:	add	x3, x3, #0x0
    6930:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6934:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6938:	add	x1, x1, #0x0
    693c:	add	x0, x0, #0x0
    6940:	mov	w2, #0x22f                 	// #559
    6944:	bl	0 <__assert_fail>
    6948:	mov	x1, x26
    694c:	mov	x0, x21
    6950:	bl	0 <_ZdlPvm>
    6954:	ldr	w1, [x19, #168]
    6958:	ldr	x0, [x19, #152]
    695c:	cbz	w1, 6a18 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x970>
    6960:	cmn	x20, #0x10
    6964:	ccmn	x20, #0x8, #0x4, ne  // ne = any
    6968:	b.eq	6d10 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc68>  // b.none
    696c:	sub	w1, w1, #0x1
    6970:	eor	w2, w22, w23
    6974:	and	w2, w2, w1
    6978:	ldr	w5, [x19, #160]
    697c:	lsl	w3, w2, #4
    6980:	add	w5, w5, #0x1
    6984:	add	x6, x0, x3
    6988:	ldr	x3, [x0, x3]
    698c:	cmp	x20, x3
    6990:	b.ne	699c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8f4>  // b.any
    6994:	str	w5, [x19, #160]
    6998:	b	67bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x714>
    699c:	mov	w7, #0x1                   	// #1
    69a0:	mov	x4, #0x0                   	// #0
    69a4:	cmn	x3, #0x8
    69a8:	b.ne	6e58 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdb0>  // b.any
    69ac:	cbz	x4, 67ac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x704>
    69b0:	mov	x6, x4
    69b4:	ldr	x0, [x4]
    69b8:	b	67b0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x708>
    69bc:	mov	x0, x21
    69c0:	mov	x1, x26
    69c4:	bl	0 <_ZdlPvm>
    69c8:	ldr	w2, [x19, #168]
    69cc:	ldr	x0, [x19, #152]
    69d0:	cbz	w2, 6a18 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x970>
    69d4:	sub	w2, w2, #0x1
    69d8:	ldr	w1, [x19, #160]
    69dc:	and	w27, w27, w2
    69e0:	add	w5, w1, #0x1
    69e4:	lsl	w1, w27, #4
    69e8:	add	x6, x0, x1
    69ec:	ldr	x1, [x0, x1]
    69f0:	cmp	x20, x1
    69f4:	b.eq	6994 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8ec>  // b.none
    69f8:	mov	w4, #0x1                   	// #1
    69fc:	mov	x3, #0x0                   	// #0
    6a00:	cmn	x1, #0x8
    6a04:	b.ne	6de8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd40>  // b.any
    6a08:	cbz	x3, 67ac <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x704>
    6a0c:	mov	x6, x3
    6a10:	ldr	x0, [x3]
    6a14:	b	67b0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x708>
    6a18:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6a1c:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6a20:	add	x3, x3, #0x0
    6a24:	b	6934 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x88c>
    6a28:	mov	w9, #0x1                   	// #1
    6a2c:	mov	x7, #0x0                   	// #0
    6a30:	mov	w8, #0xffff                	// #65535
    6a34:	cmp	w5, w8
    6a38:	b.ne	6c70 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xbc8>  // b.any
    6a3c:	cmp	x7, #0x0
    6a40:	ldr	w1, [x19, #128]
    6a44:	csel	x7, x7, x6, ne  // ne = any
    6a48:	ldr	x2, [x20, #8]
    6a4c:	add	w1, w1, #0x1
    6a50:	strh	w0, [x7]
    6a54:	str	xzr, [x20, #8]
    6a58:	str	x2, [x7, #8]
    6a5c:	ldr	x26, [x20, #8]
    6a60:	str	w1, [x19, #128]
    6a64:	cbz	x26, 64d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x428>
    6a68:	ldr	x0, [x26, #176]
    6a6c:	add	x2, x26, #0xc0
    6a70:	cmp	x0, x2
    6a74:	b.eq	6a7c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9d4>  // b.none
    6a78:	bl	0 <free>
    6a7c:	ldr	x0, [x26, #96]
    6a80:	add	x2, x26, #0x70
    6a84:	cmp	x0, x2
    6a88:	b.eq	6a90 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9e8>  // b.none
    6a8c:	bl	0 <free>
    6a90:	mov	x2, x26
    6a94:	ldr	x0, [x2], #16
    6a98:	cmp	x0, x2
    6a9c:	b.eq	6aa4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x9fc>  // b.none
    6aa0:	bl	0 <free>
    6aa4:	mov	x0, x26
    6aa8:	mov	x1, #0x150                 	// #336
    6aac:	bl	0 <_ZdlPvm>
    6ab0:	b	64d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x428>
    6ab4:	cbnz	w2, 6eb0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe08>
    6ab8:	ubfiz	x3, x1, #4, #32
    6abc:	add	x3, x0, x3
    6ac0:	cmp	x0, x3
    6ac4:	b.eq	6690 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5e8>  // b.none
    6ac8:	mov	x2, x0
    6acc:	mov	w4, #0xffffffff            	// #-1
    6ad0:	strh	w4, [x2], #16
    6ad4:	cmp	x3, x2
    6ad8:	b.ne	6ad0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa28>  // b.any
    6adc:	b	6690 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x5e8>
    6ae0:	mov	w7, #0x1                   	// #1
    6ae4:	mov	x6, #0x0                   	// #0
    6ae8:	cmn	x4, #0x8
    6aec:	b.ne	6d20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc78>  // b.any
    6af0:	cmp	x6, #0x0
    6af4:	ldr	w1, [x19, #160]
    6af8:	csel	x6, x6, x5, ne  // ne = any
    6afc:	ldr	x2, [x27, #8]
    6b00:	add	w1, w1, #0x1
    6b04:	str	x0, [x6]
    6b08:	str	xzr, [x27, #8]
    6b0c:	str	x2, [x6, #8]
    6b10:	ldr	x28, [x27, #8]
    6b14:	str	w1, [x19, #160]
    6b18:	cbz	x28, 631c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>
    6b1c:	ldr	x0, [x28, #176]
    6b20:	add	x1, x28, #0xc0
    6b24:	cmp	x0, x1
    6b28:	b.eq	6b30 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa88>  // b.none
    6b2c:	bl	0 <free>
    6b30:	ldr	x0, [x28, #96]
    6b34:	add	x1, x28, #0x70
    6b38:	cmp	x0, x1
    6b3c:	b.eq	6b44 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa9c>  // b.none
    6b40:	bl	0 <free>
    6b44:	mov	x1, x28
    6b48:	ldr	x0, [x1], #16
    6b4c:	cmp	x0, x1
    6b50:	b.eq	6b58 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xab0>  // b.none
    6b54:	bl	0 <free>
    6b58:	mov	x0, x28
    6b5c:	mov	x1, #0x150                 	// #336
    6b60:	bl	0 <_ZdlPvm>
    6b64:	b	631c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x274>
    6b68:	cbnz	w2, 6eb0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xe08>
    6b6c:	ubfiz	x3, x1, #4, #32
    6b70:	add	x3, x0, x3
    6b74:	cmp	x0, x3
    6b78:	b.eq	6710 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x668>  // b.none
    6b7c:	mov	x2, x0
    6b80:	mov	w4, #0xffffffff            	// #-1
    6b84:	nop
    6b88:	strh	w4, [x2], #16
    6b8c:	cmp	x3, x2
    6b90:	b.ne	6b88 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xae0>  // b.any
    6b94:	b	6710 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x668>
    6b98:	add	w4, w8, w4
    6b9c:	cmp	x3, #0x0
    6ba0:	and	w10, w2, w4
    6ba4:	ccmp	w1, w9, #0x0, eq  // eq = none
    6ba8:	csel	x5, x5, x3, eq  // eq = none
    6bac:	add	w8, w8, #0x1
    6bb0:	lsl	x1, x10, #4
    6bb4:	and	w4, w2, w4
    6bb8:	add	x10, x22, x1
    6bbc:	ldrh	w1, [x22, x1]
    6bc0:	cmp	w23, w1
    6bc4:	b.ne	6d88 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xce0>  // b.any
    6bc8:	ldr	x1, [x10, #8]
    6bcc:	b	6160 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6bd0:	cbnz	w2, 6e90 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xde8>
    6bd4:	ubfiz	x3, x1, #4, #32
    6bd8:	add	x3, x0, x3
    6bdc:	cmp	x0, x3
    6be0:	b.eq	695c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8b4>  // b.none
    6be4:	mov	x2, x0
    6be8:	mov	x4, #0xfffffffffffffff8    	// #-8
    6bec:	nop
    6bf0:	str	x4, [x2], #16
    6bf4:	cmp	x3, x2
    6bf8:	b.ne	6bf0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb48>  // b.any
    6bfc:	b	695c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8b4>
    6c00:	cbnz	w1, 6e90 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xde8>
    6c04:	ubfiz	x4, x2, #4, #32
    6c08:	add	x4, x0, x4
    6c0c:	cmp	x0, x4
    6c10:	b.eq	69d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x928>  // b.none
    6c14:	mov	x1, x28
    6c18:	mov	x3, x0
    6c1c:	nop
    6c20:	str	x1, [x3], #16
    6c24:	cmp	x4, x3
    6c28:	b.ne	6c20 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb78>  // b.any
    6c2c:	b	69d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x928>
    6c30:	add	w3, w1, w3
    6c34:	cmp	x6, #0x0
    6c38:	and	w7, w2, w3
    6c3c:	ccmn	x28, #0x10, #0x0, eq  // eq = none
    6c40:	csel	x4, x4, x6, eq  // eq = none
    6c44:	add	w1, w1, #0x1
    6c48:	lsl	x6, x7, #4
    6c4c:	and	w3, w2, w3
    6c50:	add	x7, x21, x6
    6c54:	ldr	x28, [x21, x6]
    6c58:	cmp	x20, x28
    6c5c:	b.ne	6ddc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xd34>  // b.any
    6c60:	ldr	x1, [x7, #8]
    6c64:	b	6160 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xb8>
    6c68:	str	w6, [x19, #128]
    6c6c:	b	6434 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x38c>
    6c70:	add	w2, w2, w9
    6c74:	cmp	x7, #0x0
    6c78:	and	w10, w1, w2
    6c7c:	mov	w3, #0xfffe                	// #65534
    6c80:	ccmp	w5, w3, #0x0, eq  // eq = none
    6c84:	add	w9, w9, #0x1
    6c88:	lsl	x5, x10, #4
    6c8c:	csel	x7, x7, x6, ne  // ne = any
    6c90:	and	w2, w1, w2
    6c94:	add	x6, x4, x10, lsl #4
    6c98:	ldrh	w5, [x4, x5]
    6c9c:	cmp	w0, w5
    6ca0:	b.eq	6518 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x470>  // b.none
    6ca4:	b	6a34 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x98c>
    6ca8:	add	w1, w1, w9
    6cac:	cmp	x7, #0x0
    6cb0:	and	w10, w2, w1
    6cb4:	mov	w3, #0xfffe                	// #65534
    6cb8:	ccmp	w5, w3, #0x0, eq  // eq = none
    6cbc:	add	w9, w9, #0x1
    6cc0:	lsl	x5, x10, #4
    6cc4:	csel	x7, x7, x6, ne  // ne = any
    6cc8:	and	w1, w2, w1
    6ccc:	add	x6, x4, x10, lsl #4
    6cd0:	ldrh	w5, [x4, x5]
    6cd4:	cmp	w0, w5
    6cd8:	b.eq	6518 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x470>  // b.none
    6cdc:	b	65fc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x554>
    6ce0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6ce4:	add	x3, x3, #0x0
    6ce8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6cec:	stp	x25, x26, [sp, #64]
    6cf0:	stp	x27, x28, [sp, #80]
    6cf4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6cf8:	add	x1, x1, #0x0
    6cfc:	add	x0, x0, #0x0
    6d00:	mov	w2, #0x250                 	// #592
    6d04:	bl	0 <__assert_fail>
    6d08:	stp	x25, x26, [sp, #64]
    6d0c:	stp	x27, x28, [sp, #80]
    6d10:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d14:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d18:	add	x3, x3, #0x0
    6d1c:	b	6cf4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc4c>
    6d20:	add	w1, w1, w7
    6d24:	cmp	x6, #0x0
    6d28:	and	w8, w2, w1
    6d2c:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    6d30:	csel	x6, x6, x5, ne  // ne = any
    6d34:	add	w7, w7, #0x1
    6d38:	lsl	x4, x8, #4
    6d3c:	and	w1, w2, w1
    6d40:	add	x5, x3, x8, lsl #4
    6d44:	ldr	x4, [x3, x4]
    6d48:	cmp	x0, x4
    6d4c:	b.eq	6368 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2c0>  // b.none
    6d50:	b	6ae8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xa40>
    6d54:	add	w1, w7, w1
    6d58:	cmp	x6, #0x0
    6d5c:	and	w8, w2, w1
    6d60:	ccmn	x4, #0x10, #0x0, eq  // eq = none
    6d64:	csel	x6, x6, x5, ne  // ne = any
    6d68:	add	w7, w7, #0x1
    6d6c:	lsl	x4, x8, #4
    6d70:	and	w1, w2, w1
    6d74:	add	x5, x3, x8, lsl #4
    6d78:	ldr	x4, [x3, x4]
    6d7c:	cmp	x0, x4
    6d80:	b.eq	6368 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x2c0>  // b.none
    6d84:	b	68a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x800>
    6d88:	mov	x3, x5
    6d8c:	mov	x5, x10
    6d90:	b	63d0 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x328>
    6d94:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d98:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6d9c:	add	x3, x3, #0x0
    6da0:	b	6cf4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xc4c>
    6da4:	add	w2, w2, w7
    6da8:	cmp	x5, #0x0
    6dac:	and	w8, w1, w2
    6db0:	ccmp	w4, w9, #0x0, eq  // eq = none
    6db4:	csel	x5, x5, x3, ne  // ne = any
    6db8:	add	w7, w7, #0x1
    6dbc:	lsl	x4, x8, #4
    6dc0:	and	w2, w1, w2
    6dc4:	add	x3, x0, x8, lsl #4
    6dc8:	ldrh	w4, [x0, x4]
    6dcc:	cmp	w23, w4
    6dd0:	b.ne	66e4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x63c>  // b.any
    6dd4:	str	w6, [x19, #128]
    6dd8:	b	6428 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x380>
    6ddc:	mov	x6, x4
    6de0:	mov	x4, x7
    6de4:	b	6768 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6c0>
    6de8:	add	w27, w4, w27
    6dec:	cmp	x3, #0x0
    6df0:	and	w7, w2, w27
    6df4:	ccmn	x1, #0x10, #0x0, eq  // eq = none
    6df8:	csel	x3, x3, x6, ne  // ne = any
    6dfc:	add	w4, w4, #0x1
    6e00:	lsl	x1, x7, #4
    6e04:	and	w27, w2, w27
    6e08:	add	x6, x0, x7, lsl #4
    6e0c:	ldr	x1, [x0, x1]
    6e10:	cmp	x20, x1
    6e14:	b.ne	6a00 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x958>  // b.any
    6e18:	str	w5, [x19, #160]
    6e1c:	b	67bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x714>
    6e20:	add	w20, w5, w20
    6e24:	cmp	x4, #0x0
    6e28:	and	w7, w1, w20
    6e2c:	ccmp	w2, w8, #0x0, eq  // eq = none
    6e30:	csel	x4, x4, x3, ne  // ne = any
    6e34:	add	w5, w5, #0x1
    6e38:	lsl	x2, x7, #4
    6e3c:	and	w20, w1, w20
    6e40:	add	x3, x0, x7, lsl #4
    6e44:	ldrh	w2, [x0, x2]
    6e48:	cmp	w23, w2
    6e4c:	b.ne	6748 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x6a0>  // b.any
    6e50:	str	w6, [x19, #128]
    6e54:	b	6428 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x380>
    6e58:	add	w2, w7, w2
    6e5c:	cmp	x4, #0x0
    6e60:	and	w8, w1, w2
    6e64:	ccmn	x3, #0x10, #0x0, eq  // eq = none
    6e68:	csel	x4, x4, x6, ne  // ne = any
    6e6c:	add	w7, w7, #0x1
    6e70:	lsl	x3, x8, #4
    6e74:	and	w2, w1, w2
    6e78:	add	x6, x0, x8, lsl #4
    6e7c:	ldr	x3, [x0, x3]
    6e80:	cmp	x20, x3
    6e84:	b.ne	69a4 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x8fc>  // b.any
    6e88:	str	w5, [x19, #160]
    6e8c:	b	67bc <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0x714>
    6e90:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6e94:	add	x3, x3, #0x0
    6e98:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6e9c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6ea0:	add	x1, x1, #0x0
    6ea4:	add	x0, x0, #0x0
    6ea8:	mov	w2, #0x15b                 	// #347
    6eac:	bl	0 <__assert_fail>
    6eb0:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6eb4:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6eb8:	add	x3, x3, #0x0
    6ebc:	b	6e9c <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE+0xdf4>
    6ec0:	mov	x1, #0x0                   	// #0
    6ec4:	str	x0, [x1]
    6ec8:	brk	#0x3e8
    6ecc:	mov	x0, #0x0                   	// #0
    6ed0:	strh	wzr, [x0]
    6ed4:	brk	#0x3e8

0000000000006ed8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE>:
    6ed8:	stp	x29, x30, [sp, #-240]!
    6edc:	add	x2, sp, #0xc0
    6ee0:	mov	x29, sp
    6ee4:	stp	x19, x20, [sp, #16]
    6ee8:	mov	x19, x8
    6eec:	mov	x8, x2
    6ef0:	stp	x23, x24, [sp, #48]
    6ef4:	mov	x24, x1
    6ef8:	stp	x0, x2, [sp, #136]
    6efc:	bl	60a8 <_ZN4llvm3mca12InstrBuilder20getOrCreateInstrDescERKNS_6MCInstE>
    6f00:	ldrb	w0, [sp, #200]
    6f04:	and	w20, w0, #0x1
    6f08:	bfi	w0, w20, #1, #1
    6f0c:	strb	w0, [sp, #200]
    6f10:	cbz	w20, 6f58 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x80>
    6f14:	ldrb	w2, [x19, #8]
    6f18:	and	w0, w0, #0xfffffffd
    6f1c:	ldr	x1, [sp, #192]
    6f20:	orr	w2, w2, #0x3
    6f24:	strb	w2, [x19, #8]
    6f28:	str	xzr, [sp, #192]
    6f2c:	ands	x1, x1, #0xfffffffffffffffe
    6f30:	strb	w0, [sp, #200]
    6f34:	b.eq	76a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7cc>  // b.none
    6f38:	ldr	x0, [sp, #144]
    6f3c:	str	x1, [x19]
    6f40:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6f44:	mov	x0, x19
    6f48:	ldp	x19, x20, [sp, #16]
    6f4c:	ldp	x23, x24, [sp, #48]
    6f50:	ldp	x29, x30, [sp], #240
    6f54:	ret
    6f58:	mov	x0, #0x350                 	// #848
    6f5c:	stp	x21, x22, [sp, #32]
    6f60:	stp	x25, x26, [sp, #64]
    6f64:	stp	x27, x28, [sp, #80]
    6f68:	str	d8, [sp, #96]
    6f6c:	str	wzr, [sp, #120]
    6f70:	ldr	x23, [sp, #192]
    6f74:	bl	0 <_Znwm>
    6f78:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6f7c:	mov	x25, x0
    6f80:	ldr	x5, [sp, #136]
    6f84:	add	x7, x0, #0x200
    6f88:	ldr	d0, [x1]
    6f8c:	add	x4, x0, #0x250
    6f90:	strb	wzr, [x0, #8]
    6f94:	add	x1, x0, #0x20
    6f98:	str	x23, [x25]
    6f9c:	mov	x2, #0xfffffe0000000000    	// #-2199023255552
    6fa0:	str	x1, [x25, #16]
    6fa4:	mov	w3, #0x1                   	// #1
    6fa8:	str	d0, [x25, #24]
    6fac:	ldr	x0, [x5, #24]
    6fb0:	str	x4, [x7, #64]
    6fb4:	stp	x1, x4, [sp, #160]
    6fb8:	ldr	x1, [x23, #288]
    6fbc:	str	xzr, [sp, #208]
    6fc0:	str	w3, [sp, #216]
    6fc4:	str	x2, [x25, #784]
    6fc8:	str	xzr, [x25, #792]
    6fcc:	str	x1, [x25, #800]
    6fd0:	str	wzr, [x25, #808]
    6fd4:	strh	wzr, [x25, #812]
    6fd8:	str	xzr, [x25, #816]
    6fdc:	strh	wzr, [x25, #824]
    6fe0:	str	wzr, [x25, #828]
    6fe4:	str	xzr, [x25, #832]
    6fe8:	strb	wzr, [x25, #840]
    6fec:	str	d0, [x25, #584]
    6ff0:	cbz	x0, 7078 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1a0>
    6ff4:	ldr	x3, [x5]
    6ff8:	adrp	x22, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    6ffc:	ldr	x1, [x0]
    7000:	add	x2, x22, #0x0
    7004:	ldr	x3, [x3, #152]
    7008:	ldr	x8, [x1, #80]
    700c:	ldr	w26, [x3, #28]
    7010:	cmp	x8, x2
    7014:	b.ne	7670 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x798>  // b.any
    7018:	ldr	x8, [x1, #88]
    701c:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7020:	add	x2, x2, #0x0
    7024:	cmp	x8, x2
    7028:	b.ne	72b4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3dc>  // b.any
    702c:	ldr	x8, [x1, #80]
    7030:	str	wzr, [sp, #120]
    7034:	add	x22, x22, #0x0
    7038:	cmp	x8, x22
    703c:	b.ne	72b4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3dc>  // b.any
    7040:	ldr	x8, [x1, #96]
    7044:	adrp	x2, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7048:	add	x1, x2, #0x0
    704c:	cmp	x8, x1
    7050:	b.eq	7078 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1a0>  // b.none
    7054:	str	x7, [sp, #128]
    7058:	mov	w2, w26
    705c:	mov	x1, x24
    7060:	blr	x8
    7064:	tst	w0, #0xff
    7068:	ldr	x7, [sp, #128]
    706c:	b.eq	7078 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1a0>  // b.none
    7070:	mov	w0, #0x1                   	// #1
    7074:	strb	w0, [x25, #8]
    7078:	ldr	x0, [x23, #96]
    707c:	ldr	w28, [x23, #104]
    7080:	mov	x26, x0
    7084:	add	x28, x0, x28, lsl #4
    7088:	cmp	x28, x0
    708c:	b.eq	71a4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2cc>  // b.none
    7090:	movi	v8.2s, #0x0
    7094:	add	x0, sp, #0xd0
    7098:	mov	w10, #0x30                  	// #48
    709c:	mov	w9, #0xfffffe00            	// #-512
    70a0:	mov	w22, #0x1                   	// #1
    70a4:	str	x0, [sp, #152]
    70a8:	ldr	w2, [x26]
    70ac:	tbnz	w2, #31, 7230 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x358>
    70b0:	ldr	w0, [x24, #24]
    70b4:	cmp	w2, w0
    70b8:	b.cs	76fc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x824>  // b.hs, b.nlast
    70bc:	ldr	x0, [x24, #16]
    70c0:	sbfiz	x2, x2, #4, #32
    70c4:	add	x1, x0, x2
    70c8:	ldrb	w0, [x0, x2]
    70cc:	cmp	w0, #0x1
    70d0:	b.ne	7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>  // b.any
    70d4:	ldrh	w21, [x1, #8]
    70d8:	cbz	w21, 7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>
    70dc:	ldr	w0, [x25, #584]
    70e0:	ldr	w1, [x25, #588]
    70e4:	cmp	w0, w1
    70e8:	b.cs	7274 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x39c>  // b.hs, b.nlast
    70ec:	ldr	x2, [x25, #576]
    70f0:	umull	x1, w0, w10
    70f4:	add	x0, x2, x1
    70f8:	str	x26, [x2, x1]
    70fc:	str	w9, [x0, #20]
    7100:	str	wzr, [x0, #36]
    7104:	stur	d8, [x0, #12]
    7108:	str	d8, [x0, #24]
    710c:	ldr	w1, [x25, #584]
    7110:	ldr	w2, [x25, #588]
    7114:	mov	w27, w1
    7118:	strh	w21, [x0, #8]
    711c:	strh	wzr, [x0, #32]
    7120:	add	x27, x27, #0x1
    7124:	strh	w22, [x0, #40]
    7128:	cmp	x27, x2
    712c:	strb	wzr, [x0, #42]
    7130:	b.hi	76dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x804>  // b.pmore
    7134:	add	w0, w1, #0x1
    7138:	str	w0, [x7, #72]
    713c:	cbz	w0, 777c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x8a4>
    7140:	cbz	w20, 7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>
    7144:	ldr	w21, [sp, #216]
    7148:	cmp	w21, #0x40
    714c:	b.ls	7264 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x38c>  // b.plast
    7150:	ldr	x0, [sp, #152]
    7154:	str	x7, [sp, #128]
    7158:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    715c:	cmp	w0, w21
    7160:	ldr	x7, [sp, #128]
    7164:	cset	w2, eq  // eq = none
    7168:	mov	w9, #0xfffffe00            	// #-512
    716c:	mov	w10, #0x30                  	// #48
    7170:	add	x27, x27, x27, lsl #1
    7174:	ldr	x0, [x25, #576]
    7178:	lsl	x27, x27, #4
    717c:	sub	x27, x27, #0x30
    7180:	add	x27, x0, x27
    7184:	cbz	w2, 7238 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x360>
    7188:	ldr	w0, [x26]
    718c:	tbnz	w0, #31, 7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>
    7190:	mov	w0, #0x1                   	// #1
    7194:	strb	w0, [x27, #42]
    7198:	add	x26, x26, #0x10
    719c:	cmp	x28, x26
    71a0:	b.ne	70a8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x1d0>  // b.any
    71a4:	ldr	w0, [x23, #8]
    71a8:	cbnz	w0, 72e8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x410>
    71ac:	ldrb	w0, [x19, #8]
    71b0:	str	x25, [x19]
    71b4:	and	w0, w0, #0xfffffffc
    71b8:	orr	w0, w0, #0x2
    71bc:	strb	w0, [x19, #8]
    71c0:	ldr	w0, [sp, #216]
    71c4:	cmp	w0, #0x40
    71c8:	b.ls	7204 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x32c>  // b.plast
    71cc:	ldr	x0, [sp, #208]
    71d0:	cbz	x0, 7204 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x32c>
    71d4:	bl	0 <_ZdaPv>
    71d8:	ldr	x0, [sp, #144]
    71dc:	ldr	d8, [sp, #96]
    71e0:	ldp	x21, x22, [sp, #32]
    71e4:	ldp	x25, x26, [sp, #64]
    71e8:	ldp	x27, x28, [sp, #80]
    71ec:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    71f0:	mov	x0, x19
    71f4:	ldp	x19, x20, [sp, #16]
    71f8:	ldp	x23, x24, [sp, #48]
    71fc:	ldp	x29, x30, [sp], #240
    7200:	ret
    7204:	ldr	x0, [sp, #144]
    7208:	ldr	d8, [sp, #96]
    720c:	ldp	x21, x22, [sp, #32]
    7210:	ldp	x25, x26, [sp, #64]
    7214:	ldp	x27, x28, [sp, #80]
    7218:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    721c:	mov	x0, x19
    7220:	ldp	x19, x20, [sp, #16]
    7224:	ldp	x23, x24, [sp, #48]
    7228:	ldp	x29, x30, [sp], #240
    722c:	ret
    7230:	ldrh	w21, [x26, #8]
    7234:	b	70d8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x200>
    7238:	ldr	w0, [x26, #4]
    723c:	cmp	w0, w21
    7240:	b.cs	7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>  // b.hs, b.nlast
    7244:	mov	x2, #0x1                   	// #1
    7248:	cmp	w21, #0x40
    724c:	lsl	x1, x2, x0
    7250:	ldr	x2, [sp, #208]
    7254:	b.hi	72a0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x3c8>  // b.pmore
    7258:	tst	x1, x2
    725c:	b.eq	7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>  // b.none
    7260:	b	7190 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2b8>
    7264:	ldr	x0, [sp, #208]
    7268:	cmp	x0, #0x0
    726c:	cset	w2, eq  // eq = none
    7270:	b	7170 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x298>
    7274:	ldr	x1, [sp, #168]
    7278:	add	x0, x25, #0x240
    727c:	mov	x3, #0x30                  	// #48
    7280:	mov	x2, #0x0                   	// #0
    7284:	str	x7, [sp, #128]
    7288:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    728c:	ldr	w0, [x25, #584]
    7290:	mov	w9, #0xfffffe00            	// #-512
    7294:	mov	w10, #0x30                  	// #48
    7298:	ldr	x7, [sp, #128]
    729c:	b	70ec <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x214>
    72a0:	lsr	w0, w0, #6
    72a4:	ldr	x2, [x2, x0, lsl #3]
    72a8:	tst	x1, x2
    72ac:	b.eq	7198 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2c0>  // b.none
    72b0:	b	7190 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2b8>
    72b4:	str	x7, [sp, #120]
    72b8:	mov	x1, x24
    72bc:	mov	w3, w26
    72c0:	add	x2, sp, #0xd0
    72c4:	blr	x8
    72c8:	and	w5, w0, #0xff
    72cc:	ldr	x0, [sp, #136]
    72d0:	mov	w20, w5
    72d4:	ldr	x7, [sp, #120]
    72d8:	ldr	x0, [x0, #24]
    72dc:	ldr	x1, [x0]
    72e0:	str	wzr, [sp, #120]
    72e4:	b	7040 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x168>
    72e8:	str	w0, [sp, #232]
    72ec:	cmp	w0, #0x40
    72f0:	b.hi	765c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x784>  // b.pmore
    72f4:	str	xzr, [sp, #224]
    72f8:	ldr	x1, [sp, #136]
    72fc:	ldr	x0, [x1, #24]
    7300:	cbz	x0, 731c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x444>
    7304:	ldr	x2, [x0]
    7308:	add	x3, sp, #0xe0
    730c:	ldr	x1, [x1, #16]
    7310:	ldr	x5, [x2, #72]
    7314:	mov	x2, x24
    7318:	blr	x5
    731c:	ldr	w20, [x23, #8]
    7320:	mov	w1, #0x14                  	// #20
    7324:	ldr	x0, [x23]
    7328:	mov	w26, #0x0                   	// #0
    732c:	mov	x27, x0
    7330:	umaddl	x20, w20, w1, x0
    7334:	cmp	x0, x20
    7338:	b.eq	762c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x754>  // b.none
    733c:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7340:	add	x0, x0, #0x0
    7344:	str	x0, [sp, #168]
    7348:	b	7410 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x538>
    734c:	cbz	w23, 7400 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x528>
    7350:	ldr	w0, [sp, #232]
    7354:	cmp	w0, w26
    7358:	b.ls	773c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x864>  // b.plast
    735c:	cmp	w0, #0x40
    7360:	mov	x0, #0x1                   	// #1
    7364:	lsl	x1, x0, x26
    7368:	ldr	x0, [sp, #224]
    736c:	b.ls	7378 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4a0>  // b.plast
    7370:	lsr	w2, w26, #6
    7374:	ldr	x0, [x0, x2, lsl #3]
    7378:	tst	x1, x0
    737c:	ldp	w3, w0, [x25, #24]
    7380:	cset	w28, ne  // ne = any
    7384:	cmp	w3, w0
    7388:	b.cs	7478 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5a0>  // b.hs, b.nlast
    738c:	ldr	x21, [x25, #16]
    7390:	mov	w0, #0x88                  	// #136
    7394:	mov	w1, #0xfffffe00            	// #-512
    7398:	ldrb	w4, [sp, #120]
    739c:	umull	x3, w3, w0
    73a0:	mov	x0, #0x400000000           	// #17179869184
    73a4:	add	x2, x21, x3
    73a8:	add	x5, x2, #0x48
    73ac:	str	x27, [x21, x3]
    73b0:	str	w1, [x2, #8]
    73b4:	str	wzr, [x2, #16]
    73b8:	str	xzr, [x2, #40]
    73bc:	str	wzr, [x2, #52]
    73c0:	str	x0, [x2, #64]
    73c4:	strh	w23, [x2, #12]
    73c8:	ldp	w0, w3, [x25, #24]
    73cc:	strb	w28, [x2, #20]
    73d0:	strb	w4, [x2, #21]
    73d4:	mov	w1, w0
    73d8:	strb	wzr, [x2, #22]
    73dc:	stp	xzr, xzr, [x2, #24]
    73e0:	add	x1, x1, #0x1
    73e4:	cmp	x1, x3
    73e8:	strh	wzr, [x2, #48]
    73ec:	str	x5, [x2, #56]
    73f0:	b.hi	76dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x804>  // b.pmore
    73f4:	add	w0, w0, #0x1
    73f8:	str	w0, [x25, #24]
    73fc:	cbz	w0, 771c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x844>
    7400:	add	x27, x27, #0x14
    7404:	add	w26, w26, #0x1
    7408:	cmp	x20, x27
    740c:	b.eq	762c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x754>  // b.none
    7410:	ldr	w0, [x27]
    7414:	tbnz	w0, #31, 7470 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x598>
    7418:	ldr	w2, [x24, #24]
    741c:	sxtw	x1, w0
    7420:	cmp	x2, w0, sxtw
    7424:	b.ls	76fc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x824>  // b.plast
    7428:	ldr	x2, [x24, #16]
    742c:	lsl	x0, x1, #4
    7430:	add	x1, x2, x0
    7434:	ldrb	w0, [x2, x0]
    7438:	cmp	w0, #0x1
    743c:	b.ne	775c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x884>  // b.any
    7440:	ldrh	w23, [x1, #8]
    7444:	ldrb	w0, [x27, #16]
    7448:	cbnz	w0, 734c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x474>
    744c:	cbnz	w23, 7350 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x478>
    7450:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7454:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7458:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    745c:	add	x3, x3, #0x0
    7460:	add	x1, x1, #0x0
    7464:	add	x0, x0, #0x0
    7468:	mov	w2, #0x2bb                 	// #699
    746c:	bl	0 <__assert_fail>
    7470:	ldrh	w23, [x27, #8]
    7474:	b	7444 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x56c>
    7478:	mov	w1, w0
    747c:	mov	x0, #0xffffffff            	// #4294967295
    7480:	add	x1, x1, #0x2
    7484:	orr	x1, x1, x1, lsr #1
    7488:	orr	x1, x1, x1, lsr #2
    748c:	orr	x1, x1, x1, lsr #4
    7490:	orr	x1, x1, x1, lsr #8
    7494:	orr	x2, x1, x1, lsr #16
    7498:	orr	x1, x2, x1, lsr #32
    749c:	add	x1, x1, #0x1
    74a0:	cmp	x1, x0
    74a4:	b.hi	7614 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x73c>  // b.pmore
    74a8:	add	x0, x1, x1, lsl #4
    74ac:	str	w1, [sp, #152]
    74b0:	lsl	x0, x0, #3
    74b4:	str	w3, [sp, #128]
    74b8:	str	x1, [sp, #184]
    74bc:	bl	0 <malloc>
    74c0:	ldr	w3, [sp, #128]
    74c4:	mov	x21, x0
    74c8:	cbz	x0, 778c <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x8b4>
    74cc:	ldr	x0, [x25, #16]
    74d0:	mov	w1, #0x88                  	// #136
    74d4:	umaddl	x22, w3, w1, x0
    74d8:	cmp	x0, x22
    74dc:	b.eq	75dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x704>  // b.none
    74e0:	mov	x3, x0
    74e4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    74e8:	mov	x2, x21
    74ec:	ldr	d8, [x0]
    74f0:	b	7504 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x62c>
    74f4:	add	x3, x3, #0x88
    74f8:	add	x2, x2, #0x88
    74fc:	cmp	x22, x3
    7500:	b.eq	7594 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6bc>  // b.none
    7504:	ldr	w1, [x3, #8]
    7508:	add	x0, x2, #0x48
    750c:	ldrb	w13, [x3, #20]
    7510:	ldrh	w14, [x3, #12]
    7514:	ldr	x12, [x3]
    7518:	ldur	q0, [x3, #24]
    751c:	str	w1, [x2, #8]
    7520:	ldr	w1, [x3, #16]
    7524:	strb	w13, [x2, #20]
    7528:	str	w1, [x2, #16]
    752c:	ldrb	w1, [x3, #21]
    7530:	strb	w1, [x2, #21]
    7534:	ldr	w13, [x3, #40]
    7538:	ldrb	w1, [x3, #22]
    753c:	strh	w14, [x2, #12]
    7540:	str	w13, [x2, #40]
    7544:	str	x12, [x2]
    7548:	ldur	x12, [x3, #44]
    754c:	stur	x12, [x2, #44]
    7550:	strb	w1, [x2, #22]
    7554:	ldr	w1, [x3, #52]
    7558:	str	w1, [x2, #52]
    755c:	str	d8, [x2, #64]
    7560:	ldr	w1, [x3, #64]
    7564:	str	x0, [x2, #56]
    7568:	stur	q0, [x2, #24]
    756c:	cbz	w1, 74f4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x61c>
    7570:	add	x1, x3, #0x38
    7574:	add	x0, x2, #0x38
    7578:	stp	x2, x3, [sp, #128]
    757c:	bl	0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7580:	ldp	x2, x3, [sp, #128]
    7584:	add	x3, x3, #0x88
    7588:	add	x2, x2, #0x88
    758c:	cmp	x22, x3
    7590:	b.ne	7504 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x62c>  // b.any
    7594:	ldr	w5, [x25, #24]
    7598:	mov	w0, #0x88                  	// #136
    759c:	ldr	x2, [x25, #16]
    75a0:	umaddl	x22, w5, w0, x2
    75a4:	cmp	x2, x22
    75a8:	b.eq	75dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x704>  // b.none
    75ac:	nop
    75b0:	ldur	x0, [x22, #-80]
    75b4:	sub	x22, x22, #0x88
    75b8:	add	x1, x22, #0x48
    75bc:	cmp	x0, x1
    75c0:	b.eq	7604 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x72c>  // b.none
    75c4:	str	x2, [sp, #128]
    75c8:	bl	0 <free>
    75cc:	ldr	x2, [sp, #128]
    75d0:	cmp	x2, x22
    75d4:	b.ne	75b0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6d8>  // b.any
    75d8:	ldr	x22, [x25, #16]
    75dc:	ldr	x0, [sp, #160]
    75e0:	cmp	x22, x0
    75e4:	b.eq	75f0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x718>  // b.none
    75e8:	mov	x0, x22
    75ec:	bl	0 <free>
    75f0:	ldr	w0, [sp, #152]
    75f4:	ldr	w3, [x25, #24]
    75f8:	str	x21, [x25, #16]
    75fc:	str	w0, [x25, #28]
    7600:	b	7390 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x4b8>
    7604:	cmp	x2, x22
    7608:	b.ne	75b0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x6d8>  // b.any
    760c:	ldr	x22, [x25, #16]
    7610:	b	75dc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x704>
    7614:	mov	x1, x0
    7618:	mov	w0, #0xffffff78            	// #-136
    761c:	mov	w2, #0xffffffff            	// #-1
    7620:	movk	x0, #0x87, lsl #32
    7624:	str	w2, [sp, #152]
    7628:	b	74b4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5dc>
    762c:	ldrb	w0, [x19, #8]
    7630:	ldr	w1, [sp, #232]
    7634:	and	w0, w0, #0xfffffffc
    7638:	str	x25, [x19]
    763c:	orr	w0, w0, #0x2
    7640:	strb	w0, [x19, #8]
    7644:	cmp	w1, #0x40
    7648:	b.ls	71c0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2e8>  // b.plast
    764c:	ldr	x0, [sp, #224]
    7650:	cbz	x0, 71c0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2e8>
    7654:	bl	0 <_ZdaPv>
    7658:	b	71c0 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x2e8>
    765c:	add	x0, sp, #0xe0
    7660:	mov	w2, #0x0                   	// #0
    7664:	mov	x1, #0x0                   	// #0
    7668:	bl	0 <_ZN4llvm5APInt12initSlowCaseEmb>
    766c:	b	72f8 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x420>
    7670:	str	x7, [sp, #128]
    7674:	mov	x1, x24
    7678:	mov	w3, w26
    767c:	add	x2, sp, #0xd0
    7680:	blr	x8
    7684:	ands	w1, w0, #0xff
    7688:	ldp	x7, x0, [sp, #128]
    768c:	str	w1, [sp, #120]
    7690:	ldr	x0, [x0, #24]
    7694:	b.eq	76d4 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x7fc>  // b.none
    7698:	mov	w20, w1
    769c:	ldr	x1, [x0]
    76a0:	b	7040 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x168>
    76a4:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    76a8:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    76ac:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    76b0:	add	x3, x3, #0x0
    76b4:	add	x1, x1, #0x0
    76b8:	add	x0, x0, #0x0
    76bc:	mov	w2, #0x1ce                 	// #462
    76c0:	stp	x21, x22, [sp, #32]
    76c4:	stp	x25, x26, [sp, #64]
    76c8:	stp	x27, x28, [sp, #80]
    76cc:	str	d8, [sp, #96]
    76d0:	bl	0 <__assert_fail>
    76d4:	ldr	x1, [x0]
    76d8:	b	7018 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x140>
    76dc:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    76e0:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    76e4:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    76e8:	add	x3, x3, #0x0
    76ec:	add	x1, x1, #0x0
    76f0:	add	x0, x0, #0x0
    76f4:	mov	w2, #0x43                  	// #67
    76f8:	bl	0 <__assert_fail>
    76fc:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7700:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7704:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7708:	add	x3, x3, #0x0
    770c:	add	x1, x1, #0x0
    7710:	add	x0, x0, #0x0
    7714:	mov	w2, #0x99                  	// #153
    7718:	bl	0 <__assert_fail>
    771c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7720:	add	x3, x3, #0x0
    7724:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7728:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    772c:	add	x1, x1, #0x0
    7730:	add	x0, x0, #0x0
    7734:	mov	w2, #0xa7                  	// #167
    7738:	bl	0 <__assert_fail>
    773c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7740:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7744:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7748:	add	x3, x3, #0x0
    774c:	add	x1, x1, #0x0
    7750:	add	x0, x0, #0x0
    7754:	mov	w2, #0x472                 	// #1138
    7758:	bl	0 <__assert_fail>
    775c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7760:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7764:	adrp	x0, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7768:	add	x3, x3, #0x0
    776c:	add	x1, x1, #0x0
    7770:	add	x0, x0, #0x0
    7774:	mov	w2, #0x41                  	// #65
    7778:	bl	0 <__assert_fail>
    777c:	adrp	x3, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7780:	adrp	x1, 0 <_ZNK4llvm11MCInstrInfo3getEj.isra.0.part.0>
    7784:	add	x3, x3, #0x0
    7788:	b	7728 <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x850>
    778c:	ldr	x0, [sp, #168]
    7790:	mov	w1, #0x1                   	// #1
    7794:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    7798:	ldr	w3, [x25, #24]
    779c:	b	74cc <_ZN4llvm3mca12InstrBuilder17createInstructionERKNS_6MCInstE+0x5f4>

Disassembly of section .text._ZNK4llvm15MCInstrAnalysis11isZeroIdiomERKNS_6MCInstERNS_5APIntEj:

0000000000000000 <_ZNK4llvm15MCInstrAnalysis11isZeroIdiomERKNS_6MCInstERNS_5APIntEj>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm15MCInstrAnalysis25isOptimizableRegisterMoveERKNS_6MCInstEj:

0000000000000000 <_ZNK4llvm15MCInstrAnalysis25isOptimizableRegisterMoveERKNS_6MCInstEj>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo24resolveVariantSchedClassEjPKNS_6MCInstEj:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo24resolveVariantSchedClassEjPKNS_6MCInstEj>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x2, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   4:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoINS_3mca16InstructionErrorINS_6MCInstEEENS_13ErrorInfoBaseEE3isAEPKv>
   8:	ldr	x2, [x2]
   c:	ldr	x0, [x0]
  10:	cmp	x1, x2
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	cset	w0, eq  // eq = none
  1c:	ret

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE3logERNS_11raw_ostreamE>:
   0:	mov	x2, x0
   4:	mov	x0, x1
   8:	ldp	x1, x2, [x2, #8]
   c:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv:

0000000000000000 <_ZNK4llvm3mca16InstructionErrorINS_6MCInstEE18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED2Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev>:
   0:	adrp	x2, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev>
   4:	mov	x1, x0
   8:	add	x3, x0, #0x18
   c:	ldr	x2, [x2]
  10:	ldr	x0, [x0, #8]
  14:	add	x2, x2, #0x10
  18:	str	x2, [x1]
  1c:	cmp	x0, x3
  20:	b.eq	28 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED1Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev:

0000000000000000 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev>
   8:	add	x2, x0, #0x18
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #8]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca16InstructionErrorINS_6MCInstEED0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x19
  38:	mov	x1, #0x30                  	// #48
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj:

0000000000000000 <_ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj>:
   0:	ldr	x5, [x0]
   4:	adrp	x4, 0 <_ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj>
   8:	add	x4, x4, #0x0
   c:	ldr	x5, [x5, #80]
  10:	cmp	x5, x4
  14:	b.ne	20 <_ZNK4llvm15MCInstrAnalysis20isDependencyBreakingERKNS_6MCInstERNS_5APIntEj+0x20>  // b.any
  18:	mov	w0, #0x0                   	// #0
  1c:	ret
  20:	mov	x16, x5
  24:	br	x16

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
   8:	mov	w3, #0x1                   	// #1
   c:	mov	x29, sp
  10:	ldr	x2, [x0]
  14:	strb	wzr, [sp, #96]
  18:	ldr	x1, [x1]
  1c:	stp	x21, x22, [sp, #32]
  20:	add	x21, sp, #0x50
  24:	ldr	x2, [x2, #16]
  28:	add	x4, x21, #0x10
  2c:	add	x1, x1, #0x10
  30:	stp	x19, x20, [sp, #16]
  34:	mov	x19, x8
  38:	str	x23, [sp, #48]
  3c:	add	x23, sp, #0x70
  40:	stp	x4, xzr, [sp, #80]
  44:	stp	x1, xzr, [sp, #112]
  48:	mov	x1, x23
  4c:	stp	xzr, xzr, [sp, #128]
  50:	str	w3, [sp, #144]
  54:	str	x21, [sp, #152]
  58:	blr	x2
  5c:	ldr	x0, [sp, #120]
  60:	ldr	x1, [sp, #136]
  64:	cmp	x1, x0
  68:	b.eq	74 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x74>  // b.none
  6c:	mov	x0, x23
  70:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  74:	ldr	x1, [sp, #152]
  78:	add	x0, x19, #0x10
  7c:	ldr	x20, [x1, #8]
  80:	str	x0, [x19]
  84:	ldr	x22, [x1]
  88:	cmn	x22, x20
  8c:	ccmp	x22, #0x0, #0x0, ne  // ne = any
  90:	b.eq	128 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x128>  // b.none
  94:	str	x20, [sp, #72]
  98:	cmp	x20, #0xf
  9c:	b.hi	f4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf4>  // b.pmore
  a0:	cmp	x20, #0x1
  a4:	b.ne	ec <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xec>  // b.any
  a8:	ldrb	w1, [x22]
  ac:	strb	w1, [x19, #16]
  b0:	str	x20, [x19, #8]
  b4:	add	x21, x21, #0x10
  b8:	strb	wzr, [x0, x20]
  bc:	mov	x0, x23
  c0:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  c4:	ldr	x0, [sp, #80]
  c8:	cmp	x0, x21
  cc:	b.eq	d4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xd4>  // b.none
  d0:	bl	0 <_ZdlPv>
  d4:	mov	x0, x19
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #160
  e8:	ret
  ec:	cbz	x20, b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
  f0:	b	110 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x110>
  f4:	add	x1, sp, #0x48
  f8:	mov	x0, x19
  fc:	mov	x2, #0x0                   	// #0
 100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 104:	ldr	x1, [sp, #72]
 108:	str	x0, [x19]
 10c:	str	x1, [x19, #16]
 110:	mov	x2, x20
 114:	mov	x1, x22
 118:	bl	0 <memcpy>
 11c:	ldr	x0, [x19]
 120:	ldr	x20, [sp, #72]
 124:	b	b0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb0>
 128:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   8:	movk	x3, #0xaaab
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	stp	x23, x24, [sp, #48]
  1c:	ldp	x24, x21, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	stp	x25, x26, [sp, #64]
  28:	mov	x25, x1
  2c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  30:	str	x27, [sp, #80]
  34:	movk	x1, #0x555, lsl #48
  38:	sub	x0, x21, x24
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	198 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x198>  // b.none
  4c:	mov	x26, x2
  50:	sub	x27, x25, x24
  54:	cbz	x0, 17c <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x17c>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x20, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	168 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x168>  // b.plast
  68:	mov	x0, x20
  6c:	bl	0 <_Znwm>
  70:	mov	x23, x0
  74:	add	x20, x0, x20
  78:	add	x19, x0, #0x18
  7c:	add	x0, x23, x27
  80:	cmp	x25, x24
  84:	ldp	x2, x3, [x26]
  88:	ldr	x1, [x26, #16]
  8c:	stp	x2, x3, [x0]
  90:	str	x1, [x0, #16]
  94:	b.eq	f0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xf0>  // b.none
  98:	mov	x3, x23
  9c:	mov	x2, x24
  a0:	ldp	x4, x5, [x2]
  a4:	stp	x4, x5, [x3]
  a8:	add	x2, x2, #0x18
  ac:	ldur	x4, [x2, #-8]
  b0:	str	x4, [x3, #16]
  b4:	cmp	x25, x2
  b8:	add	x3, x3, #0x18
  bc:	b.ne	a0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0xa0>  // b.any
  c0:	sub	x19, x25, #0x18
  c4:	mov	x0, #0xaaab                	// #43691
  c8:	sub	x19, x19, x24
  cc:	movk	x0, #0xaaaa, lsl #16
  d0:	movk	x0, #0xaaaa, lsl #32
  d4:	lsr	x19, x19, #3
  d8:	movk	x0, #0xaaa, lsl #48
  dc:	mul	x19, x19, x0
  e0:	and	x19, x19, #0x1fffffffffffffff
  e4:	add	x19, x19, #0x2
  e8:	add	x19, x19, x19, lsl #1
  ec:	add	x19, x23, x19, lsl #3
  f0:	cmp	x25, x21
  f4:	b.eq	138 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x138>  // b.none
  f8:	sub	x21, x21, x25
  fc:	mov	x3, #0xaaab                	// #43691
 100:	sub	x21, x21, #0x18
 104:	movk	x3, #0xaaaa, lsl #16
 108:	movk	x3, #0xaaaa, lsl #32
 10c:	mov	x0, x19
 110:	lsr	x2, x21, #3
 114:	movk	x3, #0xaaa, lsl #48
 118:	mov	x1, x25
 11c:	mul	x2, x2, x3
 120:	and	x2, x2, #0x1fffffffffffffff
 124:	add	x2, x2, #0x1
 128:	add	x2, x2, x2, lsl #1
 12c:	lsl	x2, x2, #3
 130:	add	x19, x19, x2
 134:	bl	0 <memcpy>
 138:	cbz	x24, 144 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x144>
 13c:	mov	x0, x24
 140:	bl	0 <_ZdlPv>
 144:	ldp	x25, x26, [sp, #64]
 148:	ldr	x27, [sp, #80]
 14c:	stp	x23, x19, [x22]
 150:	str	x20, [x22, #16]
 154:	ldp	x19, x20, [sp, #16]
 158:	ldp	x21, x22, [sp, #32]
 15c:	ldp	x23, x24, [sp, #48]
 160:	ldp	x29, x30, [sp], #96
 164:	ret
 168:	cbnz	x0, 184 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x184>
 16c:	mov	x19, #0x18                  	// #24
 170:	mov	x20, #0x0                   	// #0
 174:	mov	x23, #0x0                   	// #0
 178:	b	7c <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x7c>
 17c:	mov	x20, #0x18                  	// #24
 180:	b	68 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x68>
 184:	cmp	x0, x1
 188:	mov	x20, #0x18                  	// #24
 18c:	csel	x0, x0, x1, ls  // ls = plast
 190:	mul	x20, x0, x20
 194:	b	68 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_+0x68>
 198:	adrp	x0, 0 <_ZNSt6vectorISt4pairImN4llvm3mca13ResourceUsageEESaIS4_EE17_M_realloc_insertIJS4_EEEvN9__gnu_cxx17__normal_iteratorIPS4_S6_EEDpOT_>
 19c:	add	x0, x0, #0x0
 1a0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIRKNS_3mca9InstrDescEE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedIRKNS_3mca9InstrDescEED1Ev>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>:
   0:	sub	w1, w1, #0x1
   4:	stp	x29, x30, [sp, #-64]!
   8:	orr	x2, x1, x1, lsr #1
   c:	mov	x29, sp
  10:	orr	x2, x2, x2, lsr #2
  14:	stp	x19, x20, [sp, #16]
  18:	mov	x19, x0
  1c:	orr	x2, x2, x2, lsr #4
  20:	mov	w0, #0x40                  	// #64
  24:	stp	x21, x22, [sp, #32]
  28:	orr	x2, x2, x2, lsr #8
  2c:	ldr	w20, [x19, #24]
  30:	orr	x2, x2, x2, lsr #16
  34:	add	x2, x2, #0x1
  38:	cmp	w2, w0
  3c:	csel	w0, w2, w0, cs  // cs = hs, nlast
  40:	str	w0, [x19, #24]
  44:	ldr	x21, [x19, #8]
  48:	ubfiz	x0, x0, #4, #32
  4c:	bl	0 <_Znwm>
  50:	str	x0, [x19, #8]
  54:	ldr	w1, [x19, #24]
  58:	sub	w2, w1, #0x1
  5c:	and	w2, w2, w1
  60:	cbz	x21, 1bc <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1bc>
  64:	stp	x23, x24, [sp, #48]
  68:	ubfiz	x20, x20, #4, #32
  6c:	add	x22, x21, x20
  70:	str	xzr, [x19, #16]
  74:	cbnz	w2, 234 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x234>
  78:	ubfiz	x1, x1, #4, #32
  7c:	mov	x2, #0xfffffffffffffff8    	// #-8
  80:	add	x1, x0, x1
  84:	cmp	x0, x1
  88:	b.eq	9c <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x9c>  // b.none
  8c:	nop
  90:	str	x2, [x0], #16
  94:	cmp	x1, x0
  98:	b.ne	90 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x90>  // b.any
  9c:	cmp	x22, x21
  a0:	mov	x23, x21
  a4:	b.ne	b8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xb8>  // b.any
  a8:	b	118 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x118>
  ac:	add	x23, x23, #0x10
  b0:	cmp	x22, x23
  b4:	b.eq	118 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x118>  // b.none
  b8:	ldr	x1, [x23]
  bc:	cmn	x1, #0x10
  c0:	ccmn	x1, #0x8, #0x4, ne  // ne = any
  c4:	b.eq	ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xac>  // b.none
  c8:	ldr	w2, [x19, #24]
  cc:	cbz	w2, 254 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x254>
  d0:	lsr	w0, w1, #9
  d4:	sub	w2, w2, #0x1
  d8:	eor	w0, w0, w1, lsr #4
  dc:	and	w0, w0, w2
  e0:	ldr	x3, [x19, #8]
  e4:	lsl	w4, w0, #4
  e8:	add	x6, x3, x4
  ec:	ldr	x4, [x3, x4]
  f0:	cmp	x1, x4
  f4:	b.ne	134 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x134>  // b.any
  f8:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
  fc:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 100:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 104:	add	x3, x3, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x0, x0, #0x0
 110:	mov	w2, #0x17a                 	// #378
 114:	bl	0 <__assert_fail>
 118:	mov	x1, x20
 11c:	mov	x0, x21
 120:	ldp	x19, x20, [sp, #16]
 124:	ldp	x21, x22, [sp, #32]
 128:	ldp	x23, x24, [sp, #48]
 12c:	ldp	x29, x30, [sp], #64
 130:	b	0 <_ZdlPvm>
 134:	mov	w7, #0x1                   	// #1
 138:	mov	x5, #0x0                   	// #0
 13c:	cmn	x4, #0x8
 140:	b.ne	1f4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1f4>  // b.any
 144:	cmp	x5, #0x0
 148:	ldr	w0, [x19, #16]
 14c:	csel	x5, x5, x6, ne  // ne = any
 150:	ldr	x2, [x23, #8]
 154:	add	w0, w0, #0x1
 158:	str	x1, [x5]
 15c:	str	xzr, [x23, #8]
 160:	str	x2, [x5, #8]
 164:	ldr	x24, [x23, #8]
 168:	str	w0, [x19, #16]
 16c:	cbz	x24, ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xac>
 170:	ldr	x0, [x24, #176]
 174:	add	x1, x24, #0xc0
 178:	cmp	x0, x1
 17c:	b.eq	184 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x184>  // b.none
 180:	bl	0 <free>
 184:	ldr	x0, [x24, #96]
 188:	add	x1, x24, #0x70
 18c:	cmp	x0, x1
 190:	b.eq	198 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x198>  // b.none
 194:	bl	0 <free>
 198:	mov	x1, x24
 19c:	ldr	x0, [x1], #16
 1a0:	cmp	x0, x1
 1a4:	b.eq	1ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1ac>  // b.none
 1a8:	bl	0 <free>
 1ac:	mov	x0, x24
 1b0:	mov	x1, #0x150                 	// #336
 1b4:	bl	0 <_ZdlPvm>
 1b8:	b	ac <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xac>
 1bc:	str	xzr, [x19, #16]
 1c0:	cbnz	w2, 230 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x230>
 1c4:	ubfiz	x1, x1, #4, #32
 1c8:	mov	x2, #0xfffffffffffffff8    	// #-8
 1cc:	add	x1, x0, x1
 1d0:	cmp	x0, x1
 1d4:	b.eq	1e4 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1e4>  // b.none
 1d8:	str	x2, [x0], #16
 1dc:	cmp	x1, x0
 1e0:	b.ne	1d8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x1d8>  // b.any
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x29, x30, [sp], #64
 1f0:	ret
 1f4:	add	w0, w0, w7
 1f8:	cmp	x5, #0x0
 1fc:	and	w8, w2, w0
 200:	ccmn	x4, #0x10, #0x0, eq  // eq = none
 204:	csel	x6, x6, x5, eq  // eq = none
 208:	add	w7, w7, #0x1
 20c:	lsl	x4, x8, #4
 210:	and	w0, w2, w0
 214:	add	x8, x3, x4
 218:	ldr	x4, [x3, x4]
 21c:	cmp	x1, x4
 220:	b.eq	f8 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0xf8>  // b.none
 224:	mov	x5, x6
 228:	mov	x6, x8
 22c:	b	13c <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj+0x13c>
 230:	stp	x23, x24, [sp, #48]
 234:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 238:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 23c:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_6MCInstESt10unique_ptrIKNS_3mca9InstrDescESt14default_deleteIS7_EENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_SA_EEE4growEj>
 240:	add	x3, x3, #0x0
 244:	add	x1, x1, #0x0
 248:	add	x0, x0, #0x0
 24c:	mov	w2, #0x15b                 	// #347
 250:	bl	0 <__assert_fail>
 254:	mov	x0, #0x0                   	// #0
 258:	str	x1, [x0]
 25c:	brk	#0x3e8

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w3, [x1, #8]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x4, [x1, #-16]
  a4:	str	x4, [x2]
  a8:	str	w3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x7c>  // b.none
  18:	ldr	w4, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x4, w21, uxtw
  30:	b.cc	8c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x8c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 74 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x74>
  38:	ldr	x2, [x1]
  3c:	ldr	x0, [x0]
  40:	add	x1, x2, x22, lsl #4
  44:	nop
  48:	ldr	w3, [x2, #8]
  4c:	add	x2, x2, #0x10
  50:	ldur	x4, [x2, #-16]
  54:	str	x4, [x0]
  58:	str	w3, [x0, #8]
  5c:	cmp	x2, x1
  60:	add	x0, x0, #0x10
  64:	b.ne	48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>  // b.any
  68:	ldr	w0, [x19, #12]
  6c:	cmp	x22, x0
  70:	b.hi	150 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x150>  // b.pmore
  74:	str	w21, [x19, #8]
  78:	ldp	x21, x22, [sp, #32]
  7c:	mov	x0, x19
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	ldr	w1, [x0, #12]
  90:	cmp	x22, x1
  94:	b.hi	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>  // b.pmore
  98:	ldr	x3, [x0]
  9c:	ldr	x2, [x20]
  a0:	cbz	x4, f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf4>
  a4:	lsl	x4, x4, #4
  a8:	add	x5, x2, x4
  ac:	nop
  b0:	ldr	w0, [x2, #8]
  b4:	add	x2, x2, #0x10
  b8:	ldur	x1, [x2, #-16]
  bc:	str	x1, [x3]
  c0:	str	w0, [x3, #8]
  c4:	cmp	x2, x5
  c8:	add	x3, x3, #0x10
  cc:	b.ne	b0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xb0>  // b.any
  d0:	ldr	x0, [x20]
  d4:	ldr	w5, [x20, #8]
  d8:	ldr	x3, [x19]
  dc:	add	x2, x0, x4
  e0:	add	x5, x0, x5, lsl #4
  e4:	add	x3, x3, x4
  e8:	cmp	x2, x5
  ec:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
  f0:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
  f4:	add	x5, x2, x22, lsl #4
  f8:	ldr	w0, [x2, #8]
  fc:	add	x2, x2, #0x10
 100:	ldur	x4, [x2, #-16]
 104:	str	x4, [x3]
 108:	str	w0, [x3, #8]
 10c:	cmp	x2, x5
 110:	add	x3, x3, #0x10
 114:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 118:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 11c:	str	wzr, [x0, #8]
 120:	mov	x1, x22
 124:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 128:	ldr	x0, [x20]
 12c:	mov	x4, #0x0                   	// #0
 130:	ldr	w5, [x20, #8]
 134:	ldr	x3, [x19]
 138:	add	x2, x0, x4
 13c:	add	x5, x0, x5, lsl #4
 140:	add	x3, x3, x4
 144:	cmp	x2, x5
 148:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 14c:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 150:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 154:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 158:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 15c:	add	x3, x3, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x0, x0, #0x0
 168:	mov	w2, #0x43                  	// #67
 16c:	bl	0 <__assert_fail>

Instruction.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>:
       0:	str	xzr, [x0, #24]
       4:	stp	w3, w1, [x0, #40]
       8:	strh	w2, [x0, #48]
       c:	str	w3, [x0, #52]
      10:	ret
      14:	nop

0000000000000018 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>:
      18:	stp	x29, x30, [sp, #-16]!
      1c:	mov	x29, sp
      20:	ldr	w4, [x0, #16]
      24:	cbz	w4, 98 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x80>
      28:	ldr	w5, [x0, #20]
      2c:	cmn	w5, #0x200
      30:	b.ne	78 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x60>  // b.any
      34:	ldr	w5, [x0, #24]
      38:	sub	w4, w4, #0x1
      3c:	str	w4, [x0, #16]
      40:	cmp	w5, w3
      44:	b.cs	5c <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x44>  // b.hs, b.nlast
      48:	mov	w5, w3
      4c:	and	w2, w2, #0xffff
      50:	stp	w3, w1, [x0, #24]
      54:	strh	w2, [x0, #32]
      58:	str	w3, [x0, #36]
      5c:	cbnz	w4, 70 <_ZN4llvm3mca9ReadState15writeStartEventEjtj+0x58>
      60:	cmp	w5, #0x0
      64:	str	w5, [x0, #20]
      68:	cset	w1, eq  // eq = none
      6c:	strb	w1, [x0, #40]
      70:	ldp	x29, x30, [sp], #16
      74:	ret
      78:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      7c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      80:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      84:	add	x3, x3, #0x0
      88:	add	x1, x1, #0x0
      8c:	add	x0, x0, #0x0
      90:	mov	w2, #0x20                  	// #32
      94:	bl	0 <__assert_fail>
      98:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      9c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
      a4:	add	x3, x3, #0x0
      a8:	add	x1, x1, #0x0
      ac:	add	x0, x0, #0x0
      b0:	mov	w2, #0x1f                  	// #31
      b4:	bl	0 <__assert_fail>

00000000000000b8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>:
      b8:	stp	x29, x30, [sp, #-48]!
      bc:	mov	x29, sp
      c0:	stp	x19, x20, [sp, #16]
      c4:	mov	x20, x0
      c8:	ldr	w0, [x0, #8]
      cc:	stp	x21, x22, [sp, #32]
      d0:	cmn	w0, #0x200
      d4:	b.ne	15c <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0xa4>  // b.any
      d8:	ldr	x0, [x20]
      dc:	mov	w22, w1
      e0:	ldr	x19, [x20, #56]
      e4:	ldr	w21, [x20, #64]
      e8:	ldr	w3, [x0, #4]
      ec:	str	w3, [x20, #8]
      f0:	add	x21, x19, x21, lsl #4
      f4:	cmp	x19, x21
      f8:	b.ne	104 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x4c>  // b.any
      fc:	b	128 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x70>
     100:	ldr	w3, [x20, #8]
     104:	ldr	w4, [x19, #8]
     108:	mov	w1, w22
     10c:	ldrh	w2, [x20, #12]
     110:	ldr	x0, [x19], #16
     114:	subs	w3, w3, w4
     118:	csel	w3, w3, wzr, pl  // pl = nfrst
     11c:	bl	18 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
     120:	cmp	x21, x19
     124:	b.ne	100 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x48>  // b.any
     128:	ldr	x0, [x20, #32]
     12c:	cbz	x0, 14c <_ZN4llvm3mca10WriteState19onInstructionIssuedEj+0x94>
     130:	ldrh	w2, [x20, #12]
     134:	mov	w1, w22
     138:	ldr	w3, [x20, #8]
     13c:	ldp	x19, x20, [sp, #16]
     140:	ldp	x21, x22, [sp, #32]
     144:	ldp	x29, x30, [sp], #48
     148:	b	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     14c:	ldp	x19, x20, [sp, #16]
     150:	ldp	x21, x22, [sp, #32]
     154:	ldp	x29, x30, [sp], #48
     158:	ret
     15c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     160:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     164:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     168:	add	x3, x3, #0x0
     16c:	add	x1, x1, #0x0
     170:	add	x0, x0, #0x0
     174:	mov	w2, #0x36                  	// #54
     178:	bl	0 <__assert_fail>
     17c:	nop

0000000000000180 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi>:
     180:	stp	x29, x30, [sp, #-96]!
     184:	mov	x29, sp
     188:	stp	x19, x20, [sp, #16]
     18c:	mov	x19, x0
     190:	ldr	w0, [x0, #8]
     194:	stp	x21, x22, [sp, #32]
     198:	mov	x21, x2
     19c:	cmn	w0, #0x200
     1a0:	b.eq	1c4 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x44>  // b.none
     1a4:	ldrh	w2, [x19, #12]
     1a8:	subs	w3, w0, w3
     1ac:	mov	x0, x21
     1b0:	csel	w3, w3, wzr, pl  // pl = nfrst
     1b4:	ldp	x19, x20, [sp, #16]
     1b8:	ldp	x21, x22, [sp, #32]
     1bc:	ldp	x29, x30, [sp], #96
     1c0:	b	18 <_ZN4llvm3mca9ReadState15writeStartEventEjtj>
     1c4:	ldp	w20, w0, [x19, #64]
     1c8:	cmp	w20, w0
     1cc:	b.cs	214 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x94>  // b.hs, b.nlast
     1d0:	ldr	x22, [x19, #56]
     1d4:	ubfiz	x1, x20, #4, #32
     1d8:	add	x0, x22, x1
     1dc:	str	x21, [x22, x1]
     1e0:	str	w3, [x0, #8]
     1e4:	ldp	w0, w2, [x19, #64]
     1e8:	mov	w1, w0
     1ec:	add	x1, x1, #0x1
     1f0:	cmp	x1, x2
     1f4:	b.hi	2e8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x168>  // b.pmore
     1f8:	add	w0, w0, #0x1
     1fc:	str	w0, [x19, #64]
     200:	cbz	w0, 30c <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x18c>
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x21, x22, [sp, #32]
     20c:	ldp	x29, x30, [sp], #96
     210:	ret
     214:	mov	w1, w0
     218:	str	x23, [sp, #48]
     21c:	add	x1, x1, #0x2
     220:	mov	x0, #0xffffffff            	// #4294967295
     224:	orr	x1, x1, x1, lsr #1
     228:	orr	x1, x1, x1, lsr #2
     22c:	orr	x1, x1, x1, lsr #4
     230:	orr	x1, x1, x1, lsr #8
     234:	orr	x2, x1, x1, lsr #16
     238:	orr	x1, x2, x1, lsr #32
     23c:	add	x1, x1, #0x1
     240:	cmp	x1, x0
     244:	b.hi	2d8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x158>  // b.pmore
     248:	lsl	x0, x1, #4
     24c:	mov	w23, w1
     250:	str	w3, [sp, #76]
     254:	str	x1, [sp, #88]
     258:	bl	0 <malloc>
     25c:	ldr	w3, [sp, #76]
     260:	mov	x22, x0
     264:	cbz	x0, 330 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x1b0>
     268:	ldr	x0, [x19, #56]
     26c:	ubfiz	x1, x20, #4, #32
     270:	mov	x4, x22
     274:	add	x7, x0, x1
     278:	mov	x2, x0
     27c:	cmp	x0, x7
     280:	b.eq	2a8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x128>  // b.none
     284:	nop
     288:	ldr	w5, [x2, #8]
     28c:	add	x2, x2, #0x10
     290:	ldur	x6, [x2, #-16]
     294:	str	x6, [x4]
     298:	str	w5, [x4, #8]
     29c:	cmp	x7, x2
     2a0:	add	x4, x4, #0x10
     2a4:	b.ne	288 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x108>  // b.any
     2a8:	add	x2, x19, #0x48
     2ac:	cmp	x0, x2
     2b0:	b.eq	2c8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x148>  // b.none
     2b4:	str	w3, [sp, #76]
     2b8:	bl	0 <free>
     2bc:	ldr	w1, [x19, #64]
     2c0:	ldr	w3, [sp, #76]
     2c4:	lsl	x1, x1, #4
     2c8:	str	x22, [x19, #56]
     2cc:	str	w23, [x19, #68]
     2d0:	ldr	x23, [sp, #48]
     2d4:	b	1d8 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0x58>
     2d8:	mov	x1, x0
     2dc:	mov	w23, #0xffffffff            	// #-1
     2e0:	mov	x0, #0xffffffff0           	// #68719476720
     2e4:	b	250 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xd0>
     2e8:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2ec:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2f0:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     2f4:	add	x3, x3, #0x0
     2f8:	add	x1, x1, #0x0
     2fc:	add	x0, x0, #0x0
     300:	mov	w2, #0x43                  	// #67
     304:	str	x23, [sp, #48]
     308:	bl	0 <__assert_fail>
     30c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     310:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     314:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     318:	add	x3, x3, #0x0
     31c:	add	x1, x1, #0x0
     320:	add	x0, x0, #0x0
     324:	mov	w2, #0xa7                  	// #167
     328:	str	x23, [sp, #48]
     32c:	bl	0 <__assert_fail>
     330:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     334:	mov	w1, #0x1                   	// #1
     338:	add	x0, x0, #0x0
     33c:	str	w3, [sp, #76]
     340:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     344:	ldr	w20, [x19, #64]
     348:	ldr	w3, [sp, #76]
     34c:	b	268 <_ZN4llvm3mca10WriteState7addUserEjPNS0_9ReadStateEi+0xe8>

0000000000000350 <_ZN4llvm3mca10WriteState7addUserEjPS1_>:
     350:	mov	x4, x0
     354:	mov	x0, x2
     358:	ldr	w3, [x4, #8]
     35c:	cmn	w3, #0x200
     360:	b.eq	374 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x24>  // b.none
     364:	ldrh	w2, [x4, #12]
     368:	cmp	w3, #0x0
     36c:	csel	w3, w3, wzr, ge  // ge = tcont
     370:	b	0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     374:	ldr	x1, [x4, #32]
     378:	cbnz	x1, 388 <_ZN4llvm3mca10WriteState7addUserEjPS1_+0x38>
     37c:	str	x2, [x4, #32]
     380:	str	x4, [x2, #24]
     384:	ret
     388:	stp	x29, x30, [sp, #-16]!
     38c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     390:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     394:	mov	x29, sp
     398:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     39c:	add	x3, x3, #0x0
     3a0:	add	x1, x1, #0x0
     3a4:	add	x0, x0, #0x0
     3a8:	mov	w2, #0x5a                  	// #90
     3ac:	bl	0 <__assert_fail>

00000000000003b0 <_ZN4llvm3mca10WriteState10cycleEventEv>:
     3b0:	ldr	w1, [x0, #8]
     3b4:	cmn	w1, #0x200
     3b8:	b.eq	3c4 <_ZN4llvm3mca10WriteState10cycleEventEv+0x14>  // b.none
     3bc:	sub	w1, w1, #0x1
     3c0:	str	w1, [x0, #8]
     3c4:	ldr	w1, [x0, #40]
     3c8:	cbz	w1, 3d4 <_ZN4llvm3mca10WriteState10cycleEventEv+0x24>
     3cc:	sub	w1, w1, #0x1
     3d0:	str	w1, [x0, #40]
     3d4:	ret

00000000000003d8 <_ZN4llvm3mca9ReadState10cycleEventEv>:
     3d8:	ldr	w1, [x0, #16]
     3dc:	cbz	w1, 3e8 <_ZN4llvm3mca9ReadState10cycleEventEv+0x10>
     3e0:	ldr	w1, [x0, #24]
     3e4:	cbnz	w1, 410 <_ZN4llvm3mca9ReadState10cycleEventEv+0x38>
     3e8:	ldr	w1, [x0, #20]
     3ec:	add	w2, w1, #0x200
     3f0:	tst	w2, #0xfffffdff
     3f4:	b.ne	3fc <_ZN4llvm3mca9ReadState10cycleEventEv+0x24>  // b.any
     3f8:	ret
     3fc:	subs	w1, w1, #0x1
     400:	str	w1, [x0, #20]
     404:	cset	w1, eq  // eq = none
     408:	strb	w1, [x0, #40]
     40c:	ret
     410:	sub	w1, w1, #0x1
     414:	str	w1, [x0, #24]
     418:	ret
     41c:	nop

0000000000000420 <_ZNK4llvm3mca10WriteState4dumpEv>:
     420:	stp	x29, x30, [sp, #-32]!
     424:	mov	x29, sp
     428:	str	x19, [sp, #16]
     42c:	mov	x19, x0
     430:	bl	0 <_ZN4llvm4dbgsEv>
     434:	ldp	x2, x3, [x0, #16]
     438:	sub	x2, x2, x3
     43c:	cmp	x2, #0x7
     440:	b.ls	578 <_ZNK4llvm3mca10WriteState4dumpEv+0x158>  // b.plast
     444:	mov	x1, x0
     448:	mov	x0, #0x207b                	// #8315
     44c:	movk	x0, #0x704f, lsl #16
     450:	movk	x0, #0x6449, lsl #32
     454:	movk	x0, #0x3d78, lsl #48
     458:	str	x0, [x3]
     45c:	ldr	x0, [x1, #24]
     460:	add	x0, x0, #0x8
     464:	str	x0, [x1, #24]
     468:	ldr	x2, [x19]
     46c:	mov	x0, x1
     470:	ldrsw	x1, [x2]
     474:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     478:	mov	x1, x0
     47c:	ldp	x2, x3, [x0, #16]
     480:	sub	x2, x2, x3
     484:	cmp	x2, #0x5
     488:	b.ls	5d8 <_ZNK4llvm3mca10WriteState4dumpEv+0x1b8>  // b.plast
     48c:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     490:	add	x0, x0, #0x0
     494:	ldr	w2, [x0]
     498:	ldrh	w0, [x0, #4]
     49c:	str	w2, [x3]
     4a0:	strh	w0, [x3, #4]
     4a4:	ldr	x0, [x1, #24]
     4a8:	add	x0, x0, #0x6
     4ac:	str	x0, [x1, #24]
     4b0:	ldr	x2, [x19]
     4b4:	mov	x0, x1
     4b8:	ldr	w1, [x2, #4]
     4bc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4c0:	mov	x2, x0
     4c4:	ldp	x1, x3, [x0, #16]
     4c8:	sub	x1, x1, x3
     4cc:	cmp	x1, #0x7
     4d0:	b.ls	5c0 <_ZNK4llvm3mca10WriteState4dumpEv+0x1a0>  // b.plast
     4d4:	mov	x0, #0x202c                	// #8236
     4d8:	movk	x0, #0x6552, lsl #16
     4dc:	movk	x0, #0x4967, lsl #32
     4e0:	movk	x0, #0x2044, lsl #48
     4e4:	str	x0, [x3]
     4e8:	ldr	x0, [x2, #24]
     4ec:	add	x0, x0, #0x8
     4f0:	str	x0, [x2, #24]
     4f4:	ldrh	w1, [x19, #12]
     4f8:	mov	x0, x2
     4fc:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     500:	mov	x2, x0
     504:	ldp	x1, x3, [x0, #16]
     508:	sub	x1, x1, x3
     50c:	cmp	x1, #0xd
     510:	b.ls	5a8 <_ZNK4llvm3mca10WriteState4dumpEv+0x188>  // b.plast
     514:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     518:	add	x0, x0, #0x0
     51c:	ldr	x1, [x0]
     520:	str	x1, [x3]
     524:	ldur	x0, [x0, #6]
     528:	stur	x0, [x3, #6]
     52c:	ldr	x0, [x2, #24]
     530:	add	x0, x0, #0xe
     534:	str	x0, [x2, #24]
     538:	ldrsw	x1, [x19, #8]
     53c:	mov	x0, x2
     540:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
     544:	mov	x1, x0
     548:	ldp	x2, x3, [x0, #16]
     54c:	sub	x2, x2, x3
     550:	cmp	x2, #0x1
     554:	b.ls	590 <_ZNK4llvm3mca10WriteState4dumpEv+0x170>  // b.plast
     558:	mov	w0, #0x7d20                	// #32032
     55c:	strh	w0, [x3]
     560:	ldr	x0, [x1, #24]
     564:	ldr	x19, [sp, #16]
     568:	add	x0, x0, #0x2
     56c:	str	x0, [x1, #24]
     570:	ldp	x29, x30, [sp], #32
     574:	ret
     578:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     57c:	add	x1, x1, #0x0
     580:	mov	x2, #0x8                   	// #8
     584:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     588:	mov	x1, x0
     58c:	b	468 <_ZNK4llvm3mca10WriteState4dumpEv+0x48>
     590:	ldr	x19, [sp, #16]
     594:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     598:	ldp	x29, x30, [sp], #32
     59c:	add	x1, x1, #0x0
     5a0:	mov	x2, #0x2                   	// #2
     5a4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5a8:	mov	x2, #0xe                   	// #14
     5ac:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5b0:	add	x1, x1, #0x0
     5b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5b8:	mov	x2, x0
     5bc:	b	538 <_ZNK4llvm3mca10WriteState4dumpEv+0x118>
     5c0:	mov	x2, #0x8                   	// #8
     5c4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5c8:	add	x1, x1, #0x0
     5cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5d0:	mov	x2, x0
     5d4:	b	4f4 <_ZNK4llvm3mca10WriteState4dumpEv+0xd4>
     5d8:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     5dc:	add	x1, x1, #0x0
     5e0:	mov	x2, #0x6                   	// #6
     5e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5e8:	mov	x1, x0
     5ec:	b	4b0 <_ZNK4llvm3mca10WriteState4dumpEv+0x90>

00000000000005f0 <_ZNK4llvm3mca8WriteRef4dumpEv>:
     5f0:	stp	x29, x30, [sp, #-32]!
     5f4:	mov	x29, sp
     5f8:	str	x19, [sp, #16]
     5fc:	mov	x19, x0
     600:	bl	0 <_ZN4llvm4dbgsEv>
     604:	ldp	x1, x3, [x0, #16]
     608:	sub	x1, x1, x3
     60c:	cmp	x1, #0x3
     610:	b.ls	6d0 <_ZNK4llvm3mca8WriteRef4dumpEv+0xe0>  // b.plast
     614:	mov	x2, x0
     618:	mov	w0, #0x4949                	// #18761
     61c:	movk	w0, #0x3d44, lsl #16
     620:	str	w0, [x3]
     624:	ldr	x0, [x2, #24]
     628:	add	x0, x0, #0x4
     62c:	str	x0, [x2, #24]
     630:	ldr	w1, [x19]
     634:	mov	x0, x2
     638:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     63c:	mov	x1, x0
     640:	ldp	x3, x2, [x0, #16]
     644:	cmp	x2, x3
     648:	b.cs	6c4 <_ZNK4llvm3mca8WriteRef4dumpEv+0xd4>  // b.hs, b.nlast
     64c:	add	x0, x2, #0x1
     650:	str	x0, [x1, #24]
     654:	mov	w0, #0x20                  	// #32
     658:	strb	w0, [x2]
     65c:	ldr	x0, [x19, #8]
     660:	ldr	w1, [x19]
     664:	cmp	x0, #0x0
     668:	ccmn	w1, #0x1, #0x4, ne  // ne = any
     66c:	b.ne	6b8 <_ZNK4llvm3mca8WriteRef4dumpEv+0xc8>  // b.any
     670:	bl	0 <_ZN4llvm4dbgsEv>
     674:	mov	x1, x0
     678:	ldp	x2, x3, [x0, #16]
     67c:	sub	x2, x2, x3
     680:	cmp	x2, #0x5
     684:	b.ls	6e8 <_ZNK4llvm3mca8WriteRef4dumpEv+0xf8>  // b.plast
     688:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     68c:	add	x0, x0, #0x0
     690:	ldr	w2, [x0]
     694:	ldrh	w0, [x0, #4]
     698:	str	w2, [x3]
     69c:	strh	w0, [x3, #4]
     6a0:	ldr	x0, [x1, #24]
     6a4:	ldr	x19, [sp, #16]
     6a8:	add	x0, x0, #0x6
     6ac:	str	x0, [x1, #24]
     6b0:	ldp	x29, x30, [sp], #32
     6b4:	ret
     6b8:	ldr	x19, [sp, #16]
     6bc:	ldp	x29, x30, [sp], #32
     6c0:	b	420 <_ZNK4llvm3mca10WriteState4dumpEv>
     6c4:	mov	w1, #0x20                  	// #32
     6c8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     6cc:	b	65c <_ZNK4llvm3mca8WriteRef4dumpEv+0x6c>
     6d0:	mov	x2, #0x4                   	// #4
     6d4:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     6d8:	add	x1, x1, #0x0
     6dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     6e0:	mov	x2, x0
     6e4:	b	630 <_ZNK4llvm3mca8WriteRef4dumpEv+0x40>
     6e8:	ldr	x19, [sp, #16]
     6ec:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     6f0:	ldp	x29, x30, [sp], #32
     6f4:	add	x1, x1, #0x0
     6f8:	mov	x2, #0x6                   	// #6
     6fc:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

0000000000000700 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv>:
     700:	mov	x4, x0
     704:	add	x0, x0, #0x328
     708:	ldr	w1, [x4, #816]
     70c:	cbnz	w1, 78c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x8c>
     710:	ldr	w3, [x4, #24]
     714:	mov	w2, #0x88                  	// #136
     718:	ldr	x1, [x4, #16]
     71c:	umaddl	x3, w3, w2, x1
     720:	cmp	x3, x1
     724:	b.eq	74c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x4c>  // b.none
     728:	ldr	w2, [x1, #52]
     72c:	cbz	w2, 740 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x40>
     730:	ldur	x2, [x1, #44]
     734:	str	x2, [x0]
     738:	ldr	w2, [x1, #52]
     73c:	str	w2, [x0, #8]
     740:	add	x1, x1, #0x88
     744:	cmp	x3, x1
     748:	b.ne	728 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x28>  // b.any
     74c:	ldr	w3, [x4, #584]
     750:	mov	w2, #0x30                  	// #48
     754:	ldr	x1, [x4, #576]
     758:	umaddl	x3, w3, w2, x1
     75c:	cmp	x1, x3
     760:	b.eq	78c <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x8c>  // b.none
     764:	nop
     768:	ldr	w2, [x1, #36]
     76c:	cbz	w2, 780 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x80>
     770:	ldur	x2, [x1, #28]
     774:	str	x2, [x0]
     778:	ldr	w2, [x1, #36]
     77c:	str	w2, [x0, #8]
     780:	add	x1, x1, #0x30
     784:	cmp	x1, x3
     788:	b.ne	768 <_ZN4llvm3mca11Instruction21computeCriticalRegDepEv+0x68>  // b.any
     78c:	ret

0000000000000790 <_ZN4llvm3mca11Instruction7executeEj>:
     790:	stp	x29, x30, [sp, #-48]!
     794:	mov	x29, sp
     798:	stp	x19, x20, [sp, #16]
     79c:	stp	x21, x22, [sp, #32]
     7a0:	mov	x22, x0
     7a4:	ldr	w0, [x0, #784]
     7a8:	cmp	w0, #0x3
     7ac:	b.ne	818 <_ZN4llvm3mca11Instruction7executeEj+0x88>  // b.any
     7b0:	ldr	x0, [x22]
     7b4:	mov	w21, w1
     7b8:	ldr	w20, [x22, #24]
     7bc:	mov	w1, #0x88                  	// #136
     7c0:	ldr	x19, [x22, #16]
     7c4:	mov	w2, #0x4                   	// #4
     7c8:	ldr	w0, [x0, #312]
     7cc:	str	w2, [x22, #784]
     7d0:	umaddl	x20, w20, w1, x19
     7d4:	str	w0, [x22, #788]
     7d8:	cmp	x19, x20
     7dc:	b.eq	7fc <_ZN4llvm3mca11Instruction7executeEj+0x6c>  // b.none
     7e0:	mov	x0, x19
     7e4:	mov	w1, w21
     7e8:	add	x19, x19, #0x88
     7ec:	bl	b8 <_ZN4llvm3mca10WriteState19onInstructionIssuedEj>
     7f0:	cmp	x20, x19
     7f4:	b.ne	7e0 <_ZN4llvm3mca11Instruction7executeEj+0x50>  // b.any
     7f8:	ldr	w0, [x22, #788]
     7fc:	cbnz	w0, 808 <_ZN4llvm3mca11Instruction7executeEj+0x78>
     800:	mov	w0, #0x5                   	// #5
     804:	str	w0, [x22, #784]
     808:	ldp	x19, x20, [sp, #16]
     80c:	ldp	x21, x22, [sp, #32]
     810:	ldp	x29, x30, [sp], #48
     814:	ret
     818:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     81c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     820:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     824:	add	x3, x3, #0x0
     828:	add	x1, x1, #0x0
     82c:	add	x0, x0, #0x0
     830:	mov	w2, #0xa9                  	// #169
     834:	bl	0 <__assert_fail>

0000000000000838 <_ZN4llvm3mca11Instruction13forceExecutedEv>:
     838:	ldr	w1, [x0, #784]
     83c:	cmp	w1, #0x3
     840:	b.ne	850 <_ZN4llvm3mca11Instruction13forceExecutedEv+0x18>  // b.any
     844:	mov	x1, #0x5                   	// #5
     848:	str	x1, [x0, #784]
     84c:	ret
     850:	stp	x29, x30, [sp, #-16]!
     854:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     858:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     85c:	mov	x29, sp
     860:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     864:	add	x3, x3, #0x0
     868:	add	x1, x1, #0x0
     86c:	add	x0, x0, #0x0
     870:	mov	w2, #0xb8                  	// #184
     874:	bl	0 <__assert_fail>

0000000000000878 <_ZN4llvm3mca11Instruction13updatePendingEv>:
     878:	mov	x3, x0
     87c:	ldr	w0, [x0, #784]
     880:	cmp	w0, #0x2
     884:	b.ne	b24 <_ZN4llvm3mca11Instruction13updatePendingEv+0x2ac>  // b.any
     888:	ldr	w2, [x3, #584]
     88c:	mov	w4, #0x30                  	// #48
     890:	ldr	x1, [x3, #576]
     894:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     898:	movk	x0, #0xaaab
     89c:	umull	x2, w2, w4
     8a0:	add	x4, x1, x2
     8a4:	asr	x2, x2, #4
     8a8:	mul	x2, x2, x0
     8ac:	cmp	xzr, x2, asr #2
     8b0:	asr	x0, x2, #2
     8b4:	b.eq	914 <_ZN4llvm3mca11Instruction13updatePendingEv+0x9c>  // b.none
     8b8:	add	x0, x0, x0, lsl #1
     8bc:	add	x0, x1, x0, lsl #6
     8c0:	b	8e8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x70>
     8c4:	ldrb	w2, [x1, #88]
     8c8:	cbz	w2, a88 <_ZN4llvm3mca11Instruction13updatePendingEv+0x210>
     8cc:	ldrb	w2, [x1, #136]
     8d0:	cbz	w2, a9c <_ZN4llvm3mca11Instruction13updatePendingEv+0x224>
     8d4:	ldrb	w2, [x1, #184]
     8d8:	cbz	w2, ab0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x238>
     8dc:	add	x1, x1, #0xc0
     8e0:	cmp	x1, x0
     8e4:	b.eq	900 <_ZN4llvm3mca11Instruction13updatePendingEv+0x88>  // b.none
     8e8:	ldrb	w2, [x1, #40]
     8ec:	cbnz	w2, 8c4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x4c>
     8f0:	cmp	x4, x1
     8f4:	mov	w0, #0x0                   	// #0
     8f8:	b.eq	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>  // b.none
     8fc:	ret
     900:	sub	x2, x4, x1
     904:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     908:	movk	x0, #0xaaab
     90c:	asr	x2, x2, #4
     910:	mul	x2, x2, x0
     914:	cmp	x2, #0x2
     918:	b.eq	9c4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x14c>  // b.none
     91c:	cmp	x2, #0x3
     920:	b.eq	9b8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x140>  // b.none
     924:	cmp	x2, #0x1
     928:	b.eq	9d0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x158>  // b.none
     92c:	ldr	w0, [x3, #24]
     930:	mov	w4, #0x88                  	// #136
     934:	ldr	x1, [x3, #16]
     938:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     93c:	movk	x2, #0xf0f1
     940:	umull	x0, w0, w4
     944:	add	x4, x1, x0
     948:	asr	x0, x0, #3
     94c:	mul	x0, x0, x2
     950:	cmp	xzr, x0, asr #2
     954:	asr	x2, x0, #2
     958:	b.eq	a4c <_ZN4llvm3mca11Instruction13updatePendingEv+0x1d4>  // b.none
     95c:	add	x2, x2, x2, lsl #4
     960:	add	x2, x1, x2, lsl #5
     964:	ldr	x0, [x1, #24]
     968:	cbz	x0, 988 <_ZN4llvm3mca11Instruction13updatePendingEv+0x110>
     96c:	cmp	x4, x1
     970:	mov	w0, #0x0                   	// #0
     974:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     978:	mov	w1, #0x3                   	// #3
     97c:	mov	w0, #0x1                   	// #1
     980:	str	w1, [x3, #784]
     984:	ret
     988:	ldr	w0, [x1, #40]
     98c:	cbnz	w0, 9a4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x12c>
     990:	ldr	x0, [x1, #160]
     994:	add	x5, x1, #0x88
     998:	cbz	x0, 9dc <_ZN4llvm3mca11Instruction13updatePendingEv+0x164>
     99c:	mov	x1, x5
     9a0:	b	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     9a4:	ldr	x5, [x1]
     9a8:	ldr	w5, [x5, #4]
     9ac:	cmp	w0, w5
     9b0:	b.cs	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>  // b.hs, b.nlast
     9b4:	b	990 <_ZN4llvm3mca11Instruction13updatePendingEv+0x118>
     9b8:	ldrb	w0, [x1, #40]
     9bc:	cbz	w0, 8f0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
     9c0:	add	x1, x1, #0x30
     9c4:	ldrb	w0, [x1, #40]
     9c8:	cbz	w0, 8f0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
     9cc:	add	x1, x1, #0x30
     9d0:	ldrb	w0, [x1, #40]
     9d4:	cbnz	w0, 92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     9d8:	b	8f0 <_ZN4llvm3mca11Instruction13updatePendingEv+0x78>
     9dc:	ldr	w0, [x1, #176]
     9e0:	cbnz	w0, ac4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x24c>
     9e4:	ldr	x0, [x1, #296]
     9e8:	add	x5, x1, #0x110
     9ec:	cbnz	x0, 99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>
     9f0:	ldr	w0, [x1, #312]
     9f4:	cbz	w0, a08 <_ZN4llvm3mca11Instruction13updatePendingEv+0x190>
     9f8:	ldr	x6, [x1, #272]
     9fc:	ldr	w6, [x6, #4]
     a00:	cmp	w0, w6
     a04:	b.cs	99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>  // b.hs, b.nlast
     a08:	ldr	x0, [x1, #432]
     a0c:	add	x5, x1, #0x198
     a10:	cbnz	x0, 99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>
     a14:	ldr	w0, [x1, #448]
     a18:	cbz	w0, a2c <_ZN4llvm3mca11Instruction13updatePendingEv+0x1b4>
     a1c:	ldr	x6, [x1, #408]
     a20:	ldr	w6, [x6, #4]
     a24:	cmp	w0, w6
     a28:	b.cs	99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>  // b.hs, b.nlast
     a2c:	add	x1, x1, #0x220
     a30:	cmp	x1, x2
     a34:	b.ne	964 <_ZN4llvm3mca11Instruction13updatePendingEv+0xec>  // b.any
     a38:	sub	x0, x4, x1
     a3c:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     a40:	movk	x2, #0xf0f1
     a44:	asr	x0, x0, #3
     a48:	mul	x0, x0, x2
     a4c:	cmp	x0, #0x2
     a50:	b.eq	afc <_ZN4llvm3mca11Instruction13updatePendingEv+0x284>  // b.none
     a54:	cmp	x0, #0x3
     a58:	b.eq	ad8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x260>  // b.none
     a5c:	cmp	x0, #0x1
     a60:	b.ne	978 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>  // b.any
     a64:	ldr	x0, [x1, #24]
     a68:	cbnz	x0, 96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     a6c:	ldr	w0, [x1, #40]
     a70:	cbz	w0, 978 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>
     a74:	ldr	x2, [x1]
     a78:	ldr	w2, [x2, #4]
     a7c:	cmp	w0, w2
     a80:	b.cc	978 <_ZN4llvm3mca11Instruction13updatePendingEv+0x100>  // b.lo, b.ul, b.last
     a84:	b	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     a88:	add	x1, x1, #0x30
     a8c:	mov	w0, #0x0                   	// #0
     a90:	cmp	x4, x1
     a94:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     a98:	b	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     a9c:	add	x1, x1, #0x60
     aa0:	mov	w0, #0x0                   	// #0
     aa4:	cmp	x4, x1
     aa8:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     aac:	b	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     ab0:	add	x1, x1, #0x90
     ab4:	mov	w0, #0x0                   	// #0
     ab8:	cmp	x4, x1
     abc:	b.ne	8fc <_ZN4llvm3mca11Instruction13updatePendingEv+0x84>  // b.any
     ac0:	b	92c <_ZN4llvm3mca11Instruction13updatePendingEv+0xb4>
     ac4:	ldr	x6, [x1, #136]
     ac8:	ldr	w6, [x6, #4]
     acc:	cmp	w0, w6
     ad0:	b.cs	99c <_ZN4llvm3mca11Instruction13updatePendingEv+0x124>  // b.hs, b.nlast
     ad4:	b	9e4 <_ZN4llvm3mca11Instruction13updatePendingEv+0x16c>
     ad8:	ldr	x0, [x1, #24]
     adc:	cbnz	x0, 96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     ae0:	ldr	w0, [x1, #40]
     ae4:	cbz	w0, af8 <_ZN4llvm3mca11Instruction13updatePendingEv+0x280>
     ae8:	ldr	x2, [x1]
     aec:	ldr	w2, [x2, #4]
     af0:	cmp	w0, w2
     af4:	b.cs	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>  // b.hs, b.nlast
     af8:	add	x1, x1, #0x88
     afc:	ldr	x0, [x1, #24]
     b00:	cbnz	x0, 96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>
     b04:	ldr	w0, [x1, #40]
     b08:	cbz	w0, b1c <_ZN4llvm3mca11Instruction13updatePendingEv+0x2a4>
     b0c:	ldr	x2, [x1]
     b10:	ldr	w2, [x2, #4]
     b14:	cmp	w0, w2
     b18:	b.cs	96c <_ZN4llvm3mca11Instruction13updatePendingEv+0xf4>  // b.hs, b.nlast
     b1c:	add	x1, x1, #0x88
     b20:	b	a64 <_ZN4llvm3mca11Instruction13updatePendingEv+0x1ec>
     b24:	stp	x29, x30, [sp, #-16]!
     b28:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     b2c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     b30:	mov	x29, sp
     b34:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     b38:	add	x3, x3, #0x0
     b3c:	add	x1, x1, #0x0
     b40:	add	x0, x0, #0x0
     b44:	mov	w2, #0xbe                  	// #190
     b48:	bl	0 <__assert_fail>
     b4c:	nop

0000000000000b50 <_ZN4llvm3mca11Instruction16updateDispatchedEv>:
     b50:	mov	x3, x0
     b54:	ldr	w0, [x0, #784]
     b58:	cmp	w0, #0x1
     b5c:	b.ne	e08 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x2b8>  // b.any
     b60:	ldr	w2, [x3, #584]
     b64:	mov	w4, #0x30                  	// #48
     b68:	ldr	x1, [x3, #576]
     b6c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     b70:	movk	x0, #0xaaab
     b74:	umull	x2, w2, w4
     b78:	add	x5, x1, x2
     b7c:	asr	x2, x2, #4
     b80:	mul	x2, x2, x0
     b84:	cmp	xzr, x2, asr #2
     b88:	asr	x0, x2, #2
     b8c:	b.eq	c48 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xf8>  // b.none
     b90:	add	x0, x0, x0, lsl #1
     b94:	add	x0, x1, x0, lsl #6
     b98:	ldr	w4, [x1, #20]
     b9c:	ldrb	w2, [x1, #42]
     ba0:	cmp	w4, #0x0
     ba4:	eor	w2, w2, #0x1
     ba8:	cset	w4, gt
     bac:	tst	w4, w2
     bb0:	b.ne	bbc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x6c>  // b.any
     bb4:	ldrb	w2, [x1, #40]
     bb8:	cbz	w2, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     bbc:	ldr	w4, [x1, #68]
     bc0:	ldrb	w2, [x1, #90]
     bc4:	cmp	w4, #0x0
     bc8:	eor	w2, w2, #0x1
     bcc:	cset	w4, gt
     bd0:	tst	w4, w2
     bd4:	b.ne	be0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x90>  // b.any
     bd8:	ldrb	w2, [x1, #88]
     bdc:	cbz	w2, d00 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b0>
     be0:	ldr	w4, [x1, #116]
     be4:	ldrb	w2, [x1, #138]
     be8:	cmp	w4, #0x0
     bec:	eor	w2, w2, #0x1
     bf0:	cset	w4, gt
     bf4:	tst	w4, w2
     bf8:	b.ne	c04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xb4>  // b.any
     bfc:	ldrb	w2, [x1, #136]
     c00:	cbz	w2, d50 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x200>
     c04:	ldr	w4, [x1, #164]
     c08:	ldrb	w2, [x1, #186]
     c0c:	cmp	w4, #0x0
     c10:	eor	w2, w2, #0x1
     c14:	cset	w4, gt
     c18:	tst	w4, w2
     c1c:	b.ne	c28 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0xd8>  // b.any
     c20:	ldrb	w2, [x1, #184]
     c24:	cbz	w2, d64 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x214>
     c28:	add	x1, x1, #0xc0
     c2c:	cmp	x0, x1
     c30:	b.ne	b98 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x48>  // b.any
     c34:	sub	x2, x5, x1
     c38:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     c3c:	movk	x0, #0xaaab
     c40:	asr	x2, x2, #4
     c44:	mul	x2, x2, x0
     c48:	cmp	x2, #0x2
     c4c:	b.eq	ddc <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x28c>  // b.none
     c50:	cmp	x2, #0x3
     c54:	b.eq	db4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x264>  // b.none
     c58:	cmp	x2, #0x1
     c5c:	b.ne	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>  // b.any
     c60:	ldr	w2, [x1, #20]
     c64:	ldrb	w0, [x1, #42]
     c68:	cmp	w2, #0x0
     c6c:	eor	w0, w0, #0x1
     c70:	cset	w2, gt
     c74:	tst	w2, w0
     c78:	b.ne	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>  // b.any
     c7c:	ldrb	w0, [x1, #40]
     c80:	cbz	w0, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     c84:	nop
     c88:	ldr	w0, [x3, #24]
     c8c:	mov	w4, #0x88                  	// #136
     c90:	ldr	x1, [x3, #16]
     c94:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     c98:	movk	x2, #0xf0f1
     c9c:	umull	x0, w0, w4
     ca0:	add	x4, x1, x0
     ca4:	asr	x0, x0, #3
     ca8:	mul	x0, x0, x2
     cac:	cmp	xzr, x0, asr #2
     cb0:	asr	x2, x0, #2
     cb4:	b.eq	d28 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1d8>  // b.none
     cb8:	add	x2, x2, x2, lsl #4
     cbc:	add	x0, x1, x2, lsl #5
     cc0:	b	ce8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x198>
     cc4:	ldr	x2, [x1, #160]
     cc8:	cbnz	x2, d78 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x228>
     ccc:	ldr	x2, [x1, #296]
     cd0:	cbnz	x2, d80 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x230>
     cd4:	ldr	x2, [x1, #432]
     cd8:	cbnz	x2, d88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x238>
     cdc:	add	x1, x1, #0x220
     ce0:	cmp	x0, x1
     ce4:	b.eq	d14 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1c4>  // b.none
     ce8:	ldr	x2, [x1, #24]
     cec:	cbz	x2, cc4 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x174>
     cf0:	cmp	x4, x1
     cf4:	mov	w0, #0x0                   	// #0
     cf8:	b.eq	d40 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1f0>  // b.none
     cfc:	ret
     d00:	add	x1, x1, #0x30
     d04:	cmp	x5, x1
     d08:	mov	w0, #0x0                   	// #0
     d0c:	b.eq	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>  // b.none
     d10:	ret
     d14:	sub	x0, x4, x1
     d18:	mov	x2, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
     d1c:	movk	x2, #0xf0f1
     d20:	asr	x0, x0, #3
     d24:	mul	x0, x0, x2
     d28:	cmp	x0, #0x2
     d2c:	b.eq	d9c <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x24c>  // b.none
     d30:	cmp	x0, #0x3
     d34:	b.eq	d90 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x240>  // b.none
     d38:	cmp	x0, #0x1
     d3c:	b.eq	da8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x258>  // b.none
     d40:	mov	w1, #0x2                   	// #2
     d44:	mov	w0, #0x1                   	// #1
     d48:	str	w1, [x3, #784]
     d4c:	ret
     d50:	add	x1, x1, #0x60
     d54:	mov	w0, #0x0                   	// #0
     d58:	cmp	x5, x1
     d5c:	b.ne	d10 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1c0>  // b.any
     d60:	b	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>
     d64:	add	x1, x1, #0x90
     d68:	mov	w0, #0x0                   	// #0
     d6c:	cmp	x5, x1
     d70:	b.ne	d10 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1c0>  // b.any
     d74:	b	c88 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x138>
     d78:	add	x1, x1, #0x88
     d7c:	b	cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d80:	add	x1, x1, #0x110
     d84:	b	cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d88:	add	x1, x1, #0x198
     d8c:	b	cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d90:	ldr	x0, [x1, #24]
     d94:	cbnz	x0, cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     d98:	add	x1, x1, #0x88
     d9c:	ldr	x0, [x1, #24]
     da0:	cbnz	x0, cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     da4:	add	x1, x1, #0x88
     da8:	ldr	x0, [x1, #24]
     dac:	cbnz	x0, cf0 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1a0>
     db0:	b	d40 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1f0>
     db4:	ldr	w2, [x1, #20]
     db8:	ldrb	w0, [x1, #42]
     dbc:	cmp	w2, #0x0
     dc0:	eor	w0, w0, #0x1
     dc4:	cset	w2, gt
     dc8:	tst	w2, w0
     dcc:	b.ne	dd8 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x288>  // b.any
     dd0:	ldrb	w0, [x1, #40]
     dd4:	cbz	w0, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     dd8:	add	x1, x1, #0x30
     ddc:	ldr	w2, [x1, #20]
     de0:	ldrb	w0, [x1, #42]
     de4:	cmp	w2, #0x0
     de8:	eor	w0, w0, #0x1
     dec:	cset	w2, gt
     df0:	tst	w2, w0
     df4:	b.ne	e00 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x2b0>  // b.any
     df8:	ldrb	w0, [x1, #40]
     dfc:	cbz	w0, d04 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x1b4>
     e00:	add	x1, x1, #0x30
     e04:	b	c60 <_ZN4llvm3mca11Instruction16updateDispatchedEv+0x110>
     e08:	stp	x29, x30, [sp, #-16]!
     e0c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e10:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e14:	mov	x29, sp
     e18:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e1c:	add	x3, x3, #0x0
     e20:	add	x1, x1, #0x0
     e24:	add	x0, x0, #0x0
     e28:	mov	w2, #0xcc                  	// #204
     e2c:	bl	0 <__assert_fail>

0000000000000e30 <_ZN4llvm3mca11Instruction8dispatchEj>:
     e30:	stp	x29, x30, [sp, #-32]!
     e34:	mov	x29, sp
     e38:	ldr	w2, [x0, #784]
     e3c:	str	x19, [sp, #16]
     e40:	cbnz	w2, e7c <_ZN4llvm3mca11Instruction8dispatchEj+0x4c>
     e44:	mov	w2, #0x1                   	// #1
     e48:	str	w2, [x0, #784]
     e4c:	str	w1, [x0, #792]
     e50:	mov	x19, x0
     e54:	bl	b50 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     e58:	tst	w0, #0xff
     e5c:	b.ne	e6c <_ZN4llvm3mca11Instruction8dispatchEj+0x3c>  // b.any
     e60:	ldr	x19, [sp, #16]
     e64:	ldp	x29, x30, [sp], #32
     e68:	ret
     e6c:	mov	x0, x19
     e70:	ldr	x19, [sp, #16]
     e74:	ldp	x29, x30, [sp], #32
     e78:	b	878 <_ZN4llvm3mca11Instruction13updatePendingEv>
     e7c:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e80:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e84:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
     e88:	add	x3, x3, #0x0
     e8c:	add	x1, x1, #0x0
     e90:	add	x0, x0, #0x0
     e94:	mov	w2, #0x9f                  	// #159
     e98:	bl	0 <__assert_fail>
     e9c:	nop

0000000000000ea0 <_ZN4llvm3mca11Instruction6updateEv>:
     ea0:	stp	x29, x30, [sp, #-32]!
     ea4:	mov	x29, sp
     ea8:	ldr	w1, [x0, #784]
     eac:	str	x19, [sp, #16]
     eb0:	mov	x19, x0
     eb4:	cmp	w1, #0x1
     eb8:	b.eq	ed0 <_ZN4llvm3mca11Instruction6updateEv+0x30>  // b.none
     ebc:	cmp	w1, #0x2
     ec0:	b.eq	ee0 <_ZN4llvm3mca11Instruction6updateEv+0x40>  // b.none
     ec4:	ldr	x19, [sp, #16]
     ec8:	ldp	x29, x30, [sp], #32
     ecc:	ret
     ed0:	bl	b50 <_ZN4llvm3mca11Instruction16updateDispatchedEv>
     ed4:	ldr	w1, [x19, #784]
     ed8:	cmp	w1, #0x2
     edc:	b.ne	ec4 <_ZN4llvm3mca11Instruction6updateEv+0x24>  // b.any
     ee0:	mov	x0, x19
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	b	878 <_ZN4llvm3mca11Instruction13updatePendingEv>

0000000000000ef0 <_ZN4llvm3mca11Instruction10cycleEventEv>:
     ef0:	stp	x29, x30, [sp, #-48]!
     ef4:	mov	x29, sp
     ef8:	stp	x19, x20, [sp, #16]
     efc:	mov	x20, x0
     f00:	ldr	w0, [x0, #784]
     f04:	cmp	w0, #0x3
     f08:	b.eq	f78 <_ZN4llvm3mca11Instruction10cycleEventEv+0x88>  // b.none
     f0c:	str	x21, [sp, #32]
     f10:	sub	w1, w0, #0x1
     f14:	cmp	w1, #0x1
     f18:	b.ls	f84 <_ZN4llvm3mca11Instruction10cycleEventEv+0x94>  // b.plast
     f1c:	cmp	w0, #0x4
     f20:	b.ne	1008 <_ZN4llvm3mca11Instruction10cycleEventEv+0x118>  // b.any
     f24:	ldr	w0, [x20, #788]
     f28:	cbz	w0, 1028 <_ZN4llvm3mca11Instruction10cycleEventEv+0x138>
     f2c:	ldr	w21, [x20, #24]
     f30:	mov	w1, #0x88                  	// #136
     f34:	ldr	x19, [x20, #16]
     f38:	umaddl	x21, w21, w1, x19
     f3c:	cmp	x19, x21
     f40:	b.eq	f60 <_ZN4llvm3mca11Instruction10cycleEventEv+0x70>  // b.none
     f44:	nop
     f48:	mov	x0, x19
     f4c:	add	x19, x19, #0x88
     f50:	bl	3b0 <_ZN4llvm3mca10WriteState10cycleEventEv>
     f54:	cmp	x21, x19
     f58:	b.ne	f48 <_ZN4llvm3mca11Instruction10cycleEventEv+0x58>  // b.any
     f5c:	ldr	w0, [x20, #788]
     f60:	sub	w0, w0, #0x1
     f64:	str	w0, [x20, #788]
     f68:	cbnz	w0, ff8 <_ZN4llvm3mca11Instruction10cycleEventEv+0x108>
     f6c:	mov	w0, #0x5                   	// #5
     f70:	ldr	x21, [sp, #32]
     f74:	str	w0, [x20, #784]
     f78:	ldp	x19, x20, [sp, #16]
     f7c:	ldp	x29, x30, [sp], #48
     f80:	ret
     f84:	ldr	w21, [x20, #584]
     f88:	mov	w1, #0x30                  	// #48
     f8c:	ldr	x0, [x20, #576]
     f90:	mov	x19, x0
     f94:	umaddl	x21, w21, w1, x0
     f98:	cmp	x21, x0
     f9c:	b.eq	fb4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xc4>  // b.none
     fa0:	mov	x0, x19
     fa4:	add	x19, x19, #0x30
     fa8:	bl	3d8 <_ZN4llvm3mca9ReadState10cycleEventEv>
     fac:	cmp	x21, x19
     fb0:	b.ne	fa0 <_ZN4llvm3mca11Instruction10cycleEventEv+0xb0>  // b.any
     fb4:	ldr	w21, [x20, #24]
     fb8:	mov	w0, #0x88                  	// #136
     fbc:	ldr	x19, [x20, #16]
     fc0:	umaddl	x21, w21, w0, x19
     fc4:	cmp	x19, x21
     fc8:	b.eq	fe4 <_ZN4llvm3mca11Instruction10cycleEventEv+0xf4>  // b.none
     fcc:	nop
     fd0:	mov	x0, x19
     fd4:	add	x19, x19, #0x88
     fd8:	bl	3b0 <_ZN4llvm3mca10WriteState10cycleEventEv>
     fdc:	cmp	x21, x19
     fe0:	b.ne	fd0 <_ZN4llvm3mca11Instruction10cycleEventEv+0xe0>  // b.any
     fe4:	mov	x0, x20
     fe8:	ldp	x19, x20, [sp, #16]
     fec:	ldr	x21, [sp, #32]
     ff0:	ldp	x29, x30, [sp], #48
     ff4:	b	ea0 <_ZN4llvm3mca11Instruction6updateEv>
     ff8:	ldp	x19, x20, [sp, #16]
     ffc:	ldr	x21, [sp, #32]
    1000:	ldp	x29, x30, [sp], #48
    1004:	ret
    1008:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    100c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1010:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1014:	add	x3, x3, #0x0
    1018:	add	x1, x1, #0x0
    101c:	add	x0, x0, #0x0
    1020:	mov	w2, #0xf2                  	// #242
    1024:	bl	0 <__assert_fail>
    1028:	adrp	x3, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    102c:	adrp	x1, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1030:	adrp	x0, 0 <_ZN4llvm3mca10WriteState15writeStartEventEjtj>
    1034:	add	x3, x3, #0x0
    1038:	add	x1, x1, #0x0
    103c:	add	x0, x0, #0x0
    1040:	mov	w2, #0xf3                  	// #243
    1044:	bl	0 <__assert_fail>

Pipeline.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	ldr	w1, [x0, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	ldr	x19, [x0]
  14:	lsl	x0, x1, #3
  18:	str	x21, [sp, #32]
  1c:	cmp	xzr, x0, asr #5
  20:	add	x21, x19, x0
  24:	b.eq	188 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x188>  // b.none
  28:	asr	x0, x0, #5
  2c:	add	x20, x19, x0, lsl #5
  30:	b	88 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x88>
  34:	ldr	x0, [x19, #8]
  38:	ldr	x1, [x0]
  3c:	ldr	x1, [x1, #24]
  40:	blr	x1
  44:	tst	w0, #0xff
  48:	b.ne	b8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xb8>  // b.any
  4c:	ldr	x0, [x19, #16]
  50:	ldr	x1, [x0]
  54:	ldr	x1, [x1, #24]
  58:	blr	x1
  5c:	tst	w0, #0xff
  60:	b.ne	d4 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xd4>  // b.any
  64:	ldr	x0, [x19, #24]
  68:	ldr	x1, [x0]
  6c:	ldr	x1, [x1, #24]
  70:	blr	x1
  74:	tst	w0, #0xff
  78:	b.ne	f0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xf0>  // b.any
  7c:	add	x19, x19, #0x20
  80:	cmp	x20, x19
  84:	b.eq	10c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x10c>  // b.none
  88:	ldr	x0, [x19]
  8c:	ldr	x1, [x0]
  90:	ldr	x1, [x1, #24]
  94:	blr	x1
  98:	tst	w0, #0xff
  9c:	b.eq	34 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x34>  // b.none
  a0:	cmp	x21, x19
  a4:	cset	w0, ne  // ne = any
  a8:	ldp	x19, x20, [sp, #16]
  ac:	ldr	x21, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	add	x19, x19, #0x8
  bc:	cmp	x21, x19
  c0:	cset	w0, ne  // ne = any
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldr	x21, [sp, #32]
  cc:	ldp	x29, x30, [sp], #48
  d0:	ret
  d4:	add	x19, x19, #0x10
  d8:	cmp	x21, x19
  dc:	cset	w0, ne  // ne = any
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldr	x21, [sp, #32]
  e8:	ldp	x29, x30, [sp], #48
  ec:	ret
  f0:	add	x19, x19, #0x18
  f4:	cmp	x21, x19
  f8:	cset	w0, ne  // ne = any
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldr	x21, [sp, #32]
 104:	ldp	x29, x30, [sp], #48
 108:	ret
 10c:	sub	x1, x21, x19
 110:	asr	x1, x1, #3
 114:	cmp	x1, #0x2
 118:	b.eq	168 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x168>  // b.none
 11c:	cmp	x1, #0x3
 120:	b.eq	14c <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x14c>  // b.none
 124:	cmp	x1, #0x1
 128:	mov	w0, #0x0                   	// #0
 12c:	b.ne	a8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa8>  // b.any
 130:	ldr	x0, [x19]
 134:	ldr	x1, [x0]
 138:	ldr	x1, [x1, #24]
 13c:	blr	x1
 140:	ands	w0, w0, #0xff
 144:	b.eq	a8 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa8>  // b.none
 148:	b	a0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa0>
 14c:	ldr	x0, [x19]
 150:	ldr	x1, [x0]
 154:	ldr	x1, [x1, #24]
 158:	blr	x1
 15c:	tst	w0, #0xff
 160:	b.ne	a0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa0>  // b.any
 164:	add	x19, x19, #0x8
 168:	ldr	x0, [x19]
 16c:	ldr	x1, [x0]
 170:	ldr	x1, [x1, #24]
 174:	blr	x1
 178:	tst	w0, #0xff
 17c:	b.ne	a0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0xa0>  // b.any
 180:	add	x19, x19, #0x8
 184:	b	130 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x130>
 188:	asr	x1, x0, #3
 18c:	b	114 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv+0x114>

0000000000000190 <_ZN4llvm3mca8Pipeline8runCycleEv>:
 190:	stp	x29, x30, [sp, #-128]!
 194:	mov	x2, #0x1                   	// #1
 198:	mov	x29, sp
 19c:	stp	x19, x20, [sp, #16]
 1a0:	mov	x19, x8
 1a4:	stp	x21, x22, [sp, #32]
 1a8:	mov	x21, x0
 1ac:	ldr	w0, [x0, #8]
 1b0:	stp	x23, x24, [sp, #48]
 1b4:	str	x25, [sp, #64]
 1b8:	str	x2, [x8]
 1bc:	ldr	x23, [x21]
 1c0:	add	x20, x23, w0, uxtw #3
 1c4:	cmp	x23, x20
 1c8:	b.eq	1f0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x60>  // b.none
 1cc:	adrp	x22, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 1d0:	mov	x24, x2
 1d4:	add	x25, sp, #0x58
 1d8:	add	x22, x22, #0x0
 1dc:	ands	x2, x2, #0xfffffffffffffffe
 1e0:	b.eq	2a8 <_ZN4llvm3mca8Pipeline8runCycleEv+0x118>  // b.none
 1e4:	ldr	w0, [x21, #8]
 1e8:	orr	x2, x2, #0x1
 1ec:	str	x2, [x19]
 1f0:	str	wzr, [sp, #112]
 1f4:	str	xzr, [sp, #120]
 1f8:	cbz	w0, 38c <_ZN4llvm3mca8Pipeline8runCycleEv+0x1fc>
 1fc:	ldr	x0, [x21]
 200:	adrp	x22, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 204:	add	x24, sp, #0x70
 208:	add	x22, x22, #0x0
 20c:	add	x23, sp, #0x60
 210:	ldr	x20, [x0]
 214:	ands	x2, x2, #0xfffffffffffffffe
 218:	b.eq	308 <_ZN4llvm3mca8Pipeline8runCycleEv+0x178>  // b.none
 21c:	orr	x2, x2, #0x1
 220:	str	x2, [x19]
 224:	ldr	x1, [x21]
 228:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 22c:	ldr	w22, [x21, #8]
 230:	mov	x20, x1
 234:	add	x22, x1, x22, lsl #3
 238:	cmp	x1, x22
 23c:	b.eq	28c <_ZN4llvm3mca8Pipeline8runCycleEv+0xfc>  // b.none
 240:	add	x21, x0, #0x0
 244:	add	x24, sp, #0x68
 248:	mov	x23, #0x1                   	// #1
 24c:	ldr	x0, [x20]
 250:	ldr	x1, [x0]
 254:	ldr	x1, [x1, #40]
 258:	cmp	x1, x21
 25c:	b.ne	380 <_ZN4llvm3mca8Pipeline8runCycleEv+0x1f0>  // b.any
 260:	str	x23, [sp, #104]
 264:	ldr	x1, [x19]
 268:	tbnz	w1, #0, 300 <_ZN4llvm3mca8Pipeline8runCycleEv+0x170>
 26c:	tst	x1, #0xfffffffffffffffe
 270:	b.ne	300 <_ZN4llvm3mca8Pipeline8runCycleEv+0x170>  // b.any
 274:	ldr	x0, [sp, #104]
 278:	orr	x0, x0, x1
 27c:	orr	x1, x0, #0x1
 280:	str	x1, [x19]
 284:	tst	x0, #0xfffffffffffffffe
 288:	b.eq	36c <_ZN4llvm3mca8Pipeline8runCycleEv+0x1dc>  // b.none
 28c:	mov	x0, x19
 290:	ldp	x19, x20, [sp, #16]
 294:	ldp	x21, x22, [sp, #32]
 298:	ldp	x23, x24, [sp, #48]
 29c:	ldr	x25, [sp, #64]
 2a0:	ldp	x29, x30, [sp], #128
 2a4:	ret
 2a8:	ldur	x0, [x20, #-8]
 2ac:	ldr	x1, [x0]
 2b0:	ldr	x1, [x1, #32]
 2b4:	str	xzr, [x19]
 2b8:	cmp	x1, x22
 2bc:	b.ne	2e8 <_ZN4llvm3mca8Pipeline8runCycleEv+0x158>  // b.any
 2c0:	str	x24, [sp, #88]
 2c4:	ldr	x0, [sp, #88]
 2c8:	sub	x20, x20, #0x8
 2cc:	cmp	x23, x20
 2d0:	orr	x2, x0, x2
 2d4:	orr	x2, x2, #0x1
 2d8:	str	x2, [x19]
 2dc:	b.ne	1dc <_ZN4llvm3mca8Pipeline8runCycleEv+0x4c>  // b.any
 2e0:	ldr	w0, [x21, #8]
 2e4:	b	1f0 <_ZN4llvm3mca8Pipeline8runCycleEv+0x60>
 2e8:	mov	x8, x25
 2ec:	blr	x1
 2f0:	ldr	x2, [x19]
 2f4:	tbnz	w2, #0, 300 <_ZN4llvm3mca8Pipeline8runCycleEv+0x170>
 2f8:	tst	x2, #0xfffffffffffffffe
 2fc:	b.eq	2c4 <_ZN4llvm3mca8Pipeline8runCycleEv+0x134>  // b.none
 300:	mov	x0, x19
 304:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 308:	ldr	x0, [x20]
 30c:	ldr	x2, [x0, #16]
 310:	str	xzr, [x19]
 314:	cmp	x2, x22
 318:	b.ne	350 <_ZN4llvm3mca8Pipeline8runCycleEv+0x1c0>  // b.any
 31c:	ldr	x2, [x0, #48]
 320:	mov	x8, x23
 324:	mov	x0, x20
 328:	mov	x1, x24
 32c:	blr	x2
 330:	ldr	x0, [x19]
 334:	tbnz	w0, #0, 300 <_ZN4llvm3mca8Pipeline8runCycleEv+0x170>
 338:	tst	x0, #0xfffffffffffffffe
 33c:	b.ne	300 <_ZN4llvm3mca8Pipeline8runCycleEv+0x170>  // b.any
 340:	ldr	x2, [sp, #96]
 344:	orr	x2, x2, x0
 348:	orr	x2, x2, #0x1
 34c:	b	214 <_ZN4llvm3mca8Pipeline8runCycleEv+0x84>
 350:	mov	x1, x24
 354:	mov	x0, x20
 358:	blr	x2
 35c:	tst	w0, #0xff
 360:	b.eq	224 <_ZN4llvm3mca8Pipeline8runCycleEv+0x94>  // b.none
 364:	ldr	x0, [x20]
 368:	b	31c <_ZN4llvm3mca8Pipeline8runCycleEv+0x18c>
 36c:	str	xzr, [x19]
 370:	add	x20, x20, #0x8
 374:	cmp	x22, x20
 378:	b.ne	24c <_ZN4llvm3mca8Pipeline8runCycleEv+0xbc>  // b.any
 37c:	b	28c <_ZN4llvm3mca8Pipeline8runCycleEv+0xfc>
 380:	mov	x8, x24
 384:	blr	x1
 388:	b	264 <_ZN4llvm3mca8Pipeline8runCycleEv+0xd4>
 38c:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 390:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 394:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 398:	add	x3, x3, #0x0
 39c:	add	x1, x1, #0x0
 3a0:	add	x0, x0, #0x0
 3a4:	mov	w2, #0x95                  	// #149
 3a8:	bl	0 <__assert_fail>
 3ac:	nop

00000000000003b0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE>:
 3b0:	stp	x29, x30, [sp, #-96]!
 3b4:	mov	x29, sp
 3b8:	stp	x19, x20, [sp, #16]
 3bc:	mov	x19, x0
 3c0:	ldr	x0, [x1]
 3c4:	stp	x21, x22, [sp, #32]
 3c8:	cbz	x0, 5d4 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x224>
 3cc:	ldr	w20, [x19, #8]
 3d0:	mov	x21, x1
 3d4:	cbnz	w20, 428 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x78>
 3d8:	stp	x23, x24, [sp, #48]
 3dc:	ldr	w0, [x19, #12]
 3e0:	cmp	w20, w0
 3e4:	mov	w24, w0
 3e8:	b.cs	44c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x9c>  // b.hs, b.nlast
 3ec:	ldr	x22, [x19]
 3f0:	mov	w1, w20
 3f4:	ldr	x0, [x21]
 3f8:	str	xzr, [x21]
 3fc:	str	x0, [x22, x1, lsl #3]
 400:	add	x1, x1, #0x1
 404:	cmp	x1, x24
 408:	b.hi	5b0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x200>  // b.pmore
 40c:	add	w20, w20, #0x1
 410:	ldp	x21, x22, [sp, #32]
 414:	ldp	x23, x24, [sp, #48]
 418:	str	w20, [x19, #8]
 41c:	ldp	x19, x20, [sp, #16]
 420:	ldp	x29, x30, [sp], #96
 424:	ret
 428:	mov	x1, #0xfffffffffffffff8    	// #-8
 42c:	ldr	x2, [x19]
 430:	add	x1, x1, w20, uxtw #3
 434:	ldr	x1, [x2, x1]
 438:	ldr	x2, [x1, #8]
 43c:	stp	x23, x24, [sp, #48]
 440:	cbnz	x2, 5fc <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x24c>
 444:	str	x0, [x1, #8]
 448:	b	3dc <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x2c>
 44c:	add	x1, x24, #0x2
 450:	stp	x25, x26, [sp, #64]
 454:	mov	x0, #0xffffffff            	// #4294967295
 458:	orr	x1, x1, x1, lsr #1
 45c:	orr	x1, x1, x1, lsr #2
 460:	orr	x1, x1, x1, lsr #4
 464:	orr	x1, x1, x1, lsr #8
 468:	orr	x1, x1, x1, lsr #16
 46c:	orr	x1, x1, x1, lsr #32
 470:	add	x1, x1, #0x1
 474:	cmp	x1, x0
 478:	b.hi	57c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1cc>  // b.pmore
 47c:	lsl	x0, x1, #3
 480:	mov	w25, w1
 484:	mov	x24, x1
 488:	str	x1, [sp, #88]
 48c:	bl	0 <malloc>
 490:	mov	x22, x0
 494:	cbz	x0, 620 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x270>
 498:	ldr	x1, [x19]
 49c:	ubfiz	x20, x20, #3, #32
 4a0:	add	x23, x1, x20
 4a4:	cmp	x1, x23
 4a8:	b.eq	548 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x198>  // b.none
 4ac:	sub	x2, x23, x1
 4b0:	add	x3, x22, #0xf
 4b4:	sub	x2, x2, #0x8
 4b8:	sub	x3, x3, x1
 4bc:	cmp	x2, #0x30
 4c0:	mov	x0, x1
 4c4:	lsr	x2, x2, #3
 4c8:	ccmp	x3, #0x1e, #0x0, hi  // hi = pmore
 4cc:	b.ls	590 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1e0>  // b.plast
 4d0:	add	x2, x2, #0x1
 4d4:	mov	x0, #0x0                   	// #0
 4d8:	movi	v1.4s, #0x0
 4dc:	lsr	x3, x2, #1
 4e0:	lsl	x3, x3, #4
 4e4:	nop
 4e8:	ldr	q0, [x1, x0]
 4ec:	str	q1, [x1, x0]
 4f0:	str	q0, [x22, x0]
 4f4:	add	x0, x0, #0x10
 4f8:	cmp	x3, x0
 4fc:	b.ne	4e8 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x138>  // b.any
 500:	and	x0, x2, #0xfffffffffffffffe
 504:	tbz	w2, #0, 514 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x164>
 508:	ldr	x2, [x1, x0, lsl #3]
 50c:	str	xzr, [x1, x0, lsl #3]
 510:	str	x2, [x22, x0, lsl #3]
 514:	ldr	x26, [x19]
 518:	add	x23, x26, x20
 51c:	cmp	x26, x23
 520:	b.eq	548 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x198>  // b.none
 524:	nop
 528:	ldr	x0, [x23, #-8]!
 52c:	cbz	x0, 570 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1c0>
 530:	ldr	x1, [x0]
 534:	ldr	x1, [x1, #8]
 538:	blr	x1
 53c:	cmp	x26, x23
 540:	b.ne	528 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x178>  // b.any
 544:	ldr	x23, [x19]
 548:	add	x0, x19, #0x10
 54c:	cmp	x23, x0
 550:	b.eq	55c <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1ac>  // b.none
 554:	mov	x0, x23
 558:	bl	0 <free>
 55c:	ldr	w20, [x19, #8]
 560:	str	x22, [x19]
 564:	str	w25, [x19, #12]
 568:	ldp	x25, x26, [sp, #64]
 56c:	b	3f0 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x40>
 570:	cmp	x26, x23
 574:	b.ne	528 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x178>  // b.any
 578:	b	544 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x194>
 57c:	mov	x24, x0
 580:	mov	x1, x0
 584:	mov	w25, #0xffffffff            	// #-1
 588:	mov	x0, #0x7fffffff8           	// #34359738360
 58c:	b	488 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xd8>
 590:	mov	x1, x22
 594:	nop
 598:	ldr	x2, [x0]
 59c:	str	xzr, [x0], #8
 5a0:	str	x2, [x1], #8
 5a4:	cmp	x23, x0
 5a8:	b.ne	598 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x1e8>  // b.any
 5ac:	b	514 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0x164>
 5b0:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5b4:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5b8:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5bc:	add	x3, x3, #0x0
 5c0:	add	x1, x1, #0x0
 5c4:	add	x0, x0, #0x0
 5c8:	mov	w2, #0x43                  	// #67
 5cc:	stp	x25, x26, [sp, #64]
 5d0:	bl	0 <__assert_fail>
 5d4:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5d8:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5dc:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 5e0:	add	x3, x3, #0x0
 5e4:	add	x1, x1, #0x0
 5e8:	add	x0, x0, #0x0
 5ec:	mov	w2, #0x4c                  	// #76
 5f0:	stp	x23, x24, [sp, #48]
 5f4:	stp	x25, x26, [sp, #64]
 5f8:	bl	0 <__assert_fail>
 5fc:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 600:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 604:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 608:	add	x3, x3, #0x0
 60c:	add	x1, x1, #0x0
 610:	add	x0, x0, #0x0
 614:	mov	w2, #0x3a                  	// #58
 618:	stp	x25, x26, [sp, #64]
 61c:	bl	0 <__assert_fail>
 620:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 624:	mov	w1, #0x1                   	// #1
 628:	add	x0, x0, #0x0
 62c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 630:	ldr	w20, [x19, #8]
 634:	b	498 <_ZN4llvm3mca8Pipeline11appendStageESt10unique_ptrINS0_5StageESt14default_deleteIS3_EE+0xe8>

0000000000000638 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>:
 638:	stp	x29, x30, [sp, #-48]!
 63c:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 640:	mov	x29, sp
 644:	ldr	x1, [x1]
 648:	stp	x19, x20, [sp, #16]
 64c:	mov	x20, x0
 650:	ldrb	w0, [x1]
 654:	cbnz	w0, 6d0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x98>
 658:	ldr	x19, [x20, #104]
 65c:	add	x20, x20, #0x58
 660:	cmp	x20, x19
 664:	b.eq	6a4 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x6c>  // b.none
 668:	str	x21, [sp, #32]
 66c:	adrp	x21, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 670:	add	x21, x21, #0x0
 674:	nop
 678:	ldr	x2, [x19, #32]
 67c:	mov	x0, x19
 680:	ldr	x1, [x2]
 684:	ldr	x1, [x1]
 688:	cmp	x1, x21
 68c:	b.ne	6b0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x78>  // b.any
 690:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 694:	mov	x19, x0
 698:	cmp	x20, x0
 69c:	b.ne	678 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x40>  // b.any
 6a0:	ldr	x21, [sp, #32]
 6a4:	ldp	x19, x20, [sp, #16]
 6a8:	ldp	x29, x30, [sp], #48
 6ac:	ret
 6b0:	mov	x0, x2
 6b4:	blr	x1
 6b8:	mov	x0, x19
 6bc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 6c0:	mov	x19, x0
 6c4:	cmp	x20, x0
 6c8:	b.ne	678 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x40>  // b.any
 6cc:	b	6a0 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x68>
 6d0:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 6d4:	add	x0, x0, #0x0
 6d8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 6dc:	tst	w0, #0xff
 6e0:	b.eq	658 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x20>  // b.none
 6e4:	bl	0 <_ZN4llvm4dbgsEv>
 6e8:	mov	x2, x0
 6ec:	ldp	x1, x3, [x0, #16]
 6f0:	sub	x1, x1, x3
 6f4:	cmp	x1, #0x11
 6f8:	b.ls	750 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x118>  // b.plast
 6fc:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 700:	add	x0, x0, #0x0
 704:	ldp	x4, x5, [x0]
 708:	stp	x4, x5, [x3]
 70c:	ldrh	w0, [x0, #16]
 710:	strh	w0, [x3, #16]
 714:	ldr	x0, [x2, #24]
 718:	add	x0, x0, #0x12
 71c:	str	x0, [x2, #24]
 720:	ldr	w1, [x20, #128]
 724:	mov	x0, x2
 728:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 72c:	mov	x1, x0
 730:	ldp	x3, x2, [x0, #16]
 734:	cmp	x3, x2
 738:	b.ls	768 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x130>  // b.plast
 73c:	add	x0, x2, #0x1
 740:	str	x0, [x1, #24]
 744:	mov	w0, #0xa                   	// #10
 748:	strb	w0, [x2]
 74c:	b	658 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x20>
 750:	mov	x2, #0x12                  	// #18
 754:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 758:	add	x1, x1, #0x0
 75c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 760:	mov	x2, x0
 764:	b	720 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0xe8>
 768:	mov	w1, #0xa                   	// #10
 76c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 770:	b	658 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv+0x20>
 774:	nop

0000000000000778 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>:
 778:	stp	x29, x30, [sp, #-48]!
 77c:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
 780:	mov	x29, sp
 784:	ldr	x1, [x1]
 788:	stp	x19, x20, [sp, #16]
 78c:	mov	x20, x0
 790:	ldrb	w0, [x1]
 794:	cbnz	w0, 810 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x98>
 798:	ldr	x19, [x20, #104]
 79c:	add	x20, x20, #0x58
 7a0:	cmp	x20, x19
 7a4:	b.eq	7e4 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x6c>  // b.none
 7a8:	str	x21, [sp, #32]
 7ac:	adrp	x21, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 7b0:	add	x21, x21, #0x0
 7b4:	nop
 7b8:	ldr	x2, [x19, #32]
 7bc:	mov	x0, x19
 7c0:	ldr	x1, [x2]
 7c4:	ldr	x1, [x1, #8]
 7c8:	cmp	x1, x21
 7cc:	b.ne	7f0 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x78>  // b.any
 7d0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 7d4:	mov	x19, x0
 7d8:	cmp	x20, x0
 7dc:	b.ne	7b8 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x40>  // b.any
 7e0:	ldr	x21, [sp, #32]
 7e4:	ldp	x19, x20, [sp, #16]
 7e8:	ldp	x29, x30, [sp], #48
 7ec:	ret
 7f0:	mov	x0, x2
 7f4:	blr	x1
 7f8:	mov	x0, x19
 7fc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 800:	mov	x19, x0
 804:	cmp	x20, x0
 808:	b.ne	7b8 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x40>  // b.any
 80c:	b	7e0 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x68>
 810:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 814:	add	x0, x0, #0x0
 818:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 81c:	tst	w0, #0xff
 820:	b.eq	798 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x20>  // b.none
 824:	bl	0 <_ZN4llvm4dbgsEv>
 828:	mov	x2, x0
 82c:	ldp	x1, x3, [x0, #16]
 830:	sub	x1, x1, x3
 834:	cmp	x1, #0xe
 838:	b.ls	894 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x11c>  // b.plast
 83c:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 840:	add	x0, x0, #0x0
 844:	ldr	x1, [x0]
 848:	str	x1, [x3]
 84c:	ldur	x0, [x0, #7]
 850:	stur	x0, [x3, #7]
 854:	ldr	x0, [x2, #24]
 858:	add	x0, x0, #0xf
 85c:	str	x0, [x2, #24]
 860:	ldr	w1, [x20, #128]
 864:	mov	x0, x2
 868:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 86c:	mov	x1, x0
 870:	ldp	x3, x2, [x0, #16]
 874:	cmp	x3, x2
 878:	b.eq	8ac <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x134>  // b.none
 87c:	mov	w0, #0xa                   	// #10
 880:	strb	w0, [x2]
 884:	ldr	x0, [x1, #24]
 888:	add	x0, x0, #0x1
 88c:	str	x0, [x1, #24]
 890:	b	798 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x20>
 894:	mov	x2, #0xf                   	// #15
 898:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 89c:	add	x1, x1, #0x0
 8a0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 8a4:	mov	x2, x0
 8a8:	b	860 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0xe8>
 8ac:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 8b0:	mov	x2, #0x1                   	// #1
 8b4:	add	x1, x1, #0x0
 8b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 8bc:	b	798 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv+0x20>

00000000000008c0 <_ZN4llvm3mca8Pipeline3runEv>:
 8c0:	stp	x29, x30, [sp, #-64]!
 8c4:	mov	x29, sp
 8c8:	stp	x19, x20, [sp, #16]
 8cc:	mov	x19, x0
 8d0:	ldr	w0, [x0, #8]
 8d4:	str	x21, [sp, #32]
 8d8:	cbz	w0, 978 <_ZN4llvm3mca8Pipeline3runEv+0xb8>
 8dc:	mov	x20, x8
 8e0:	add	x21, sp, #0x38
 8e4:	mov	x0, x19
 8e8:	bl	638 <_ZN4llvm3mca8Pipeline16notifyCycleBeginEv>
 8ec:	mov	x0, x19
 8f0:	mov	x8, x21
 8f4:	bl	190 <_ZN4llvm3mca8Pipeline8runCycleEv>
 8f8:	ldr	x0, [sp, #56]
 8fc:	ands	x0, x0, #0xfffffffffffffffe
 900:	b.eq	928 <_ZN4llvm3mca8Pipeline3runEv+0x68>  // b.none
 904:	ldrb	w1, [x20, #8]
 908:	str	x0, [x20]
 90c:	orr	w0, w1, #0x3
 910:	strb	w0, [x20, #8]
 914:	mov	x0, x20
 918:	ldp	x19, x20, [sp, #16]
 91c:	ldr	x21, [sp, #32]
 920:	ldp	x29, x30, [sp], #64
 924:	ret
 928:	mov	x0, x19
 92c:	bl	778 <_ZN4llvm3mca8Pipeline14notifyCycleEndEv>
 930:	ldr	w1, [x19, #128]
 934:	mov	x0, x19
 938:	add	w1, w1, #0x1
 93c:	str	w1, [x19, #128]
 940:	bl	0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 944:	tst	w0, #0xff
 948:	b.ne	8e4 <_ZN4llvm3mca8Pipeline3runEv+0x24>  // b.any
 94c:	ldrb	w0, [x20, #8]
 950:	ldr	w1, [x19, #128]
 954:	and	w0, w0, #0xfffffffc
 958:	str	w1, [x20]
 95c:	orr	w0, w0, #0x2
 960:	strb	w0, [x20, #8]
 964:	mov	x0, x20
 968:	ldp	x19, x20, [sp, #16]
 96c:	ldr	x21, [sp, #32]
 970:	ldp	x29, x30, [sp], #64
 974:	ret
 978:	adrp	x3, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 97c:	adrp	x1, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 980:	adrp	x0, 0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 984:	add	x3, x3, #0x0
 988:	add	x1, x1, #0x0
 98c:	add	x0, x0, #0x0
 990:	mov	w2, #0x26                  	// #38
 994:	bl	0 <__assert_fail>

0000000000000998 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE>:
 998:	stp	x29, x30, [sp, #-48]!
 99c:	mov	x29, sp
 9a0:	stp	x19, x20, [sp, #16]
 9a4:	mov	x20, x0
 9a8:	str	x1, [sp, #40]
 9ac:	cbz	x1, 9bc <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x24>
 9b0:	add	x1, sp, #0x28
 9b4:	add	x0, x0, #0x50
 9b8:	bl	0 <_ZN4llvm3mca8Pipeline16hasWorkToProcessEv>
 9bc:	ldr	x19, [x20]
 9c0:	ldr	w20, [x20, #8]
 9c4:	add	x20, x19, x20, lsl #3
 9c8:	cmp	x19, x20
 9cc:	b.eq	9e4 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x4c>  // b.none
 9d0:	ldr	x0, [x19], #8
 9d4:	ldr	x1, [sp, #40]
 9d8:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
 9dc:	cmp	x20, x19
 9e0:	b.ne	9d0 <_ZN4llvm3mca8Pipeline16addEventListenerEPNS0_15HWEventListenerE+0x38>  // b.any
 9e4:	ldp	x19, x20, [sp, #16]
 9e8:	ldp	x29, x30, [sp], #48
 9ec:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener12onCycleBeginEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener12onCycleBeginEv>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener10onCycleEndEv:

0000000000000000 <_ZN4llvm3mca15HWEventListener10onCycleEndEv>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x1
  1c:	stp	x23, x24, [sp, #48]
  20:	add	x23, x0, #0x8
  24:	cbz	x19, 128 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x128>
  28:	ldr	x21, [x1]
  2c:	mov	w1, #0x1                   	// #1
  30:	ldr	x2, [x19, #32]
  34:	cmp	x21, x2
  38:	b.cs	5c <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x5c>  // b.hs, b.nlast
  3c:	nop
  40:	ldr	x0, [x19, #16]
  44:	cbz	x0, 68 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x68>
  48:	mov	x19, x0
  4c:	mov	w1, #0x1                   	// #1
  50:	ldr	x2, [x19, #32]
  54:	cmp	x21, x2
  58:	b.cc	40 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x40>  // b.lo, b.ul, b.last
  5c:	ldr	x0, [x19, #24]
  60:	mov	w1, #0x0                   	// #0
  64:	cbnz	x0, 48 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x48>
  68:	cbnz	w1, d8 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xd8>
  6c:	cmp	x21, x2
  70:	b.ls	fc <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xfc>  // b.plast
  74:	cmp	x23, x19
  78:	mov	w24, #0x1                   	// #1
  7c:	b.ne	118 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x118>  // b.any
  80:	mov	x0, #0x28                  	// #40
  84:	bl	0 <_Znwm>
  88:	mov	x21, x0
  8c:	mov	x3, x23
  90:	ldr	x4, [x22]
  94:	mov	x2, x19
  98:	str	x4, [x21, #32]
  9c:	mov	w0, w24
  a0:	mov	x1, x21
  a4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  a8:	ldr	x2, [x20, #40]
  ac:	mov	x3, #0x1                   	// #1
  b0:	mov	x1, #0x0                   	// #0
  b4:	mov	x0, x21
  b8:	add	x2, x2, x3
  bc:	str	x2, [x20, #40]
  c0:	bfxil	x1, x3, #0, #8
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x23, x24, [sp, #48]
  d0:	ldp	x29, x30, [sp], #64
  d4:	ret
  d8:	ldr	x0, [x20, #24]
  dc:	cmp	x19, x0
  e0:	b.eq	74 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x74>  // b.none
  e4:	mov	x0, x19
  e8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  ec:	ldr	x1, [x0, #32]
  f0:	cmp	x21, x1
  f4:	b.hi	74 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x74>  // b.pmore
  f8:	mov	x19, x0
  fc:	mov	x0, x19
 100:	mov	x1, #0x0                   	// #0
 104:	ldp	x19, x20, [sp, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	ldp	x23, x24, [sp, #48]
 110:	ldp	x29, x30, [sp], #64
 114:	ret
 118:	ldr	x0, [x19, #32]
 11c:	cmp	x21, x0
 120:	cset	w24, cc  // cc = lo, ul, last
 124:	b	80 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x80>
 128:	ldr	x0, [x0, #24]
 12c:	mov	x19, x23
 130:	cmp	x23, x0
 134:	b.eq	140 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x140>  // b.none
 138:	ldr	x21, [x1]
 13c:	b	e4 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0xe4>
 140:	mov	w24, #0x1                   	// #1
 144:	b	80 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE16_M_insert_uniqueIRKS3_EESt4pairISt17_Rb_tree_iteratorIS3_EbEOT_+0x80>

DispatchStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>:
   0:	adrp	x6, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
   4:	add	x2, x0, #0x18
   8:	str	xzr, [x0, #8]
   c:	ldr	x6, [x6]
  10:	str	wzr, [x0, #24]
  14:	str	xzr, [x0, #32]
  18:	stp	x2, x2, [x2, #16]
  1c:	add	x6, x6, #0x10
  20:	str	xzr, [x2, #32]
  24:	str	x6, [x0]
  28:	stp	w3, w3, [x0, #64]
  2c:	str	wzr, [x0, #72]
  30:	str	wzr, [x0, #80]
  34:	stp	xzr, x1, [x0, #88]
  38:	stp	x4, x5, [x0, #104]
  3c:	cbnz	w3, 4c <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE+0x4c>
  40:	ldr	x1, [x1, #152]
  44:	ldr	w1, [x1]
  48:	str	w1, [x0, #64]
  4c:	ret

0000000000000050 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>:
  50:	stp	x29, x30, [sp, #-112]!
  54:	adrp	x5, 0 <_ZN4llvm9DebugFlagE>
  58:	mov	x29, sp
  5c:	ldr	x5, [x5]
  60:	stp	x19, x20, [sp, #16]
  64:	mov	x20, x0
  68:	stp	x21, x22, [sp, #32]
  6c:	mov	x21, x1
  70:	ldrb	w0, [x5]
  74:	stp	x23, x24, [sp, #48]
  78:	mov	w22, w4
  7c:	mov	x24, x2
  80:	mov	x23, x3
  84:	cbnz	w0, 128 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xd8>
  88:	ldr	x19, [x20, #40]
  8c:	mov	w0, #0x6                   	// #6
  90:	str	w0, [sp, #72]
  94:	add	x20, x20, #0x18
  98:	stp	x21, x24, [sp, #80]
  9c:	cmp	x19, x20
  a0:	str	x23, [sp, #96]
  a4:	str	w22, [sp, #104]
  a8:	b.eq	e0 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x90>  // b.none
  ac:	adrp	x21, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
  b0:	add	x22, sp, #0x48
  b4:	add	x21, x21, #0x0
  b8:	ldr	x3, [x19, #32]
  bc:	mov	x0, x19
  c0:	ldr	x1, [x3]
  c4:	ldr	x2, [x1, #16]
  c8:	cmp	x2, x21
  cc:	b.ne	f4 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0xa4>  // b.any
  d0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  d4:	mov	x19, x0
  d8:	cmp	x20, x0
  dc:	b.ne	b8 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x68>  // b.any
  e0:	ldp	x19, x20, [sp, #16]
  e4:	ldp	x21, x22, [sp, #32]
  e8:	ldp	x23, x24, [sp, #48]
  ec:	ldp	x29, x30, [sp], #112
  f0:	ret
  f4:	mov	x1, x22
  f8:	mov	x0, x3
  fc:	blr	x2
 100:	mov	x0, x19
 104:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 108:	mov	x19, x0
 10c:	cmp	x20, x0
 110:	b.ne	b8 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x68>  // b.any
 114:	ldp	x19, x20, [sp, #16]
 118:	ldp	x21, x22, [sp, #32]
 11c:	ldp	x23, x24, [sp, #48]
 120:	ldp	x29, x30, [sp], #112
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 134:	tst	w0, #0xff
 138:	b.eq	88 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x38>  // b.none
 13c:	bl	0 <_ZN4llvm4dbgsEv>
 140:	mov	x19, x0
 144:	ldp	x1, x2, [x0, #16]
 148:	sub	x1, x1, x2
 14c:	cmp	x1, #0x1c
 150:	b.ls	1ac <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x15c>  // b.plast
 154:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 158:	add	x3, x3, #0x0
 15c:	ldr	x0, [x3, #16]
 160:	str	x0, [x2, #16]
 164:	ldp	x0, x1, [x3]
 168:	stp	x0, x1, [x2]
 16c:	ldur	x0, [x3, #21]
 170:	stur	x0, [x2, #21]
 174:	ldr	x0, [x19, #24]
 178:	add	x0, x0, #0x1d
 17c:	str	x0, [x19, #24]
 180:	ldr	w1, [x21]
 184:	mov	x0, x19
 188:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 18c:	ldp	x1, x0, [x19, #16]
 190:	cmp	x0, x1
 194:	b.cs	1c4 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x174>  // b.hs, b.nlast
 198:	add	x1, x0, #0x1
 19c:	str	x1, [x19, #24]
 1a0:	mov	w1, #0xa                   	// #10
 1a4:	strb	w1, [x0]
 1a8:	b	88 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x38>
 1ac:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 1b0:	mov	x2, #0x1d                  	// #29
 1b4:	add	x1, x1, #0x0
 1b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 1bc:	mov	x19, x0
 1c0:	b	180 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x130>
 1c4:	mov	x0, x19
 1c8:	mov	w1, #0xa                   	// #10
 1cc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 1d0:	b	88 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj+0x38>
 1d4:	nop

00000000000001d8 <_ZN4llvm3mca13DispatchStage10cycleStartEv>:
 1d8:	stp	x29, x30, [sp, #-128]!
 1dc:	mov	x29, sp
 1e0:	stp	x19, x20, [sp, #16]
 1e4:	mov	x19, x0
 1e8:	ldr	x0, [x0, #112]
 1ec:	stp	x21, x22, [sp, #32]
 1f0:	mov	x21, x8
 1f4:	bl	0 <_ZN4llvm3mca12RegisterFile10cycleStartEv>
 1f8:	ldr	w22, [x19, #72]
 1fc:	cbz	w22, 2f0 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x118>
 200:	ldr	w0, [x19, #64]
 204:	stp	x23, x24, [sp, #48]
 208:	cmp	w22, w0
 20c:	str	x25, [sp, #64]
 210:	b.cc	2e4 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x10c>  // b.lo, b.ul, b.last
 214:	sub	w1, w22, w0
 218:	mov	w22, w0
 21c:	mov	w2, #0x0                   	// #0
 220:	ldr	x0, [x19, #88]
 224:	stp	w2, w1, [x19, #68]
 228:	cbz	x0, 358 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x180>
 22c:	ldr	x0, [x19, #112]
 230:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 234:	add	x23, sp, #0x50
 238:	ldr	d0, [x1]
 23c:	add	x3, x23, #0x10
 240:	ldr	w24, [x0, #24]
 244:	str	x3, [sp, #80]
 248:	mov	w20, w24
 24c:	str	d0, [sp, #88]
 250:	cmp	x20, #0x8
 254:	mov	x25, x20
 258:	b.hi	330 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x158>  // b.pmore
 25c:	lsl	x2, x20, #2
 260:	str	w24, [sp, #88]
 264:	add	x0, x3, x2
 268:	cmp	x3, x0
 26c:	b.eq	284 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xac>  // b.none
 270:	mov	x0, x3
 274:	mov	w1, #0x0                   	// #0
 278:	bl	0 <memset>
 27c:	ldr	w25, [sp, #88]
 280:	mov	x3, x0
 284:	mov	x2, x3
 288:	mov	x0, x19
 28c:	mov	w4, w22
 290:	mov	x3, x25
 294:	add	x1, x19, #0x50
 298:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 29c:	ldr	w0, [x19, #72]
 2a0:	cbnz	w0, 2ac <_ZN4llvm3mca13DispatchStage10cycleStartEv+0xd4>
 2a4:	str	wzr, [x19, #80]
 2a8:	str	xzr, [x19, #88]
 2ac:	ldr	x0, [sp, #80]
 2b0:	mov	x1, #0x1                   	// #1
 2b4:	str	x1, [x21]
 2b8:	add	x23, x23, #0x10
 2bc:	cmp	x0, x23
 2c0:	b.eq	314 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x13c>  // b.none
 2c4:	bl	0 <free>
 2c8:	mov	x0, x21
 2cc:	ldp	x19, x20, [sp, #16]
 2d0:	ldp	x21, x22, [sp, #32]
 2d4:	ldp	x23, x24, [sp, #48]
 2d8:	ldr	x25, [sp, #64]
 2dc:	ldp	x29, x30, [sp], #128
 2e0:	ret
 2e4:	sub	w2, w0, w22
 2e8:	mov	w1, #0x0                   	// #0
 2ec:	b	220 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x48>
 2f0:	ldr	w1, [x19, #64]
 2f4:	mov	x0, #0x1                   	// #1
 2f8:	str	w1, [x19, #68]
 2fc:	str	x0, [x21]
 300:	mov	x0, x21
 304:	ldp	x19, x20, [sp, #16]
 308:	ldp	x21, x22, [sp, #32]
 30c:	ldp	x29, x30, [sp], #128
 310:	ret
 314:	mov	x0, x21
 318:	ldp	x19, x20, [sp, #16]
 31c:	ldp	x21, x22, [sp, #32]
 320:	ldp	x23, x24, [sp, #48]
 324:	ldr	x25, [sp, #64]
 328:	ldp	x29, x30, [sp], #128
 32c:	ret
 330:	mov	x1, x3
 334:	mov	x0, x23
 338:	mov	x2, x20
 33c:	mov	x3, #0x4                   	// #4
 340:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 344:	ldr	w0, [sp, #92]
 348:	cmp	x20, x0
 34c:	b.hi	378 <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x1a0>  // b.pmore
 350:	ldr	x3, [sp, #80]
 354:	b	25c <_ZN4llvm3mca13DispatchStage10cycleStartEv+0x84>
 358:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 35c:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 360:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 364:	add	x3, x3, #0x0
 368:	add	x1, x1, #0x0
 36c:	add	x0, x0, #0x0
 370:	mov	w2, #0x95                  	// #149
 374:	bl	0 <__assert_fail>
 378:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 37c:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 380:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 384:	add	x3, x3, #0x0
 388:	add	x1, x1, #0x0
 38c:	add	x0, x0, #0x0
 390:	mov	w2, #0x43                  	// #67
 394:	bl	0 <__assert_fail>

0000000000000398 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>:
 398:	stp	x29, x30, [sp, #-128]!
 39c:	mov	w3, #0x88                  	// #136
 3a0:	mov	x29, sp
 3a4:	stp	x21, x22, [sp, #32]
 3a8:	mov	x22, x1
 3ac:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 3b0:	stp	x19, x20, [sp, #16]
 3b4:	add	x21, sp, #0x68
 3b8:	ldr	d0, [x1]
 3bc:	ldr	x2, [x22, #8]
 3c0:	stp	x23, x24, [sp, #48]
 3c4:	add	x1, x21, #0x10
 3c8:	str	x1, [sp, #104]
 3cc:	mov	x20, x0
 3d0:	ldr	w24, [x2, #24]
 3d4:	ldr	x19, [x2, #16]
 3d8:	str	d0, [sp, #112]
 3dc:	umaddl	x24, w24, w3, x19
 3e0:	cmp	x24, x19
 3e4:	b.eq	524 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x18c>  // b.none
 3e8:	ldrh	w23, [x19, #12]
 3ec:	add	x19, x19, #0x88
 3f0:	str	x25, [sp, #64]
 3f4:	mov	x25, x1
 3f8:	mov	w4, #0x4                   	// #4
 3fc:	mov	w2, #0x0                   	// #0
 400:	mov	x0, #0x4                   	// #4
 404:	nop
 408:	mov	w3, w2
 40c:	strh	w23, [x1, w2, uxtw #1]
 410:	add	x3, x3, #0x1
 414:	cmp	x3, x0
 418:	b.hi	52c <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x194>  // b.pmore
 41c:	add	w2, w2, #0x1
 420:	str	w2, [sp, #112]
 424:	cbz	w2, 54c <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x1b4>
 428:	cmp	x24, x19
 42c:	b.eq	46c <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xd4>  // b.none
 430:	ldrh	w23, [x19, #12]
 434:	cmp	w2, w4
 438:	b.cs	444 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xac>  // b.hs, b.nlast
 43c:	add	x19, x19, #0x88
 440:	b	408 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x70>
 444:	mov	x1, x25
 448:	mov	x0, x21
 44c:	mov	x2, #0x0                   	// #0
 450:	mov	x3, #0x2                   	// #2
 454:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 458:	add	x19, x19, #0x88
 45c:	ldp	w2, w4, [sp, #112]
 460:	ldr	x1, [sp, #104]
 464:	mov	w0, w4
 468:	b	408 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x70>
 46c:	ldr	x25, [sp, #64]
 470:	mov	w23, #0x1                   	// #1
 474:	ldr	x0, [x20, #112]
 478:	bl	0 <_ZNK4llvm3mca12RegisterFile11isAvailableENS_8ArrayRefItEE>
 47c:	cbnz	w0, 4ac <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x114>
 480:	ldr	x0, [sp, #104]
 484:	add	x21, x21, #0x10
 488:	cmp	x0, x21
 48c:	b.eq	494 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xfc>  // b.none
 490:	bl	0 <free>
 494:	mov	w0, w23
 498:	ldp	x19, x20, [sp, #16]
 49c:	ldp	x21, x22, [sp, #32]
 4a0:	ldp	x23, x24, [sp, #48]
 4a4:	ldp	x29, x30, [sp], #128
 4a8:	ret
 4ac:	ldr	x19, [x20, #40]
 4b0:	str	w23, [sp, #88]
 4b4:	str	x22, [sp, #96]
 4b8:	add	x20, x20, #0x18
 4bc:	adrp	x22, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 4c0:	cmp	x19, x20
 4c4:	add	x23, sp, #0x58
 4c8:	add	x22, x22, #0x0
 4cc:	b.eq	4f8 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x160>  // b.none
 4d0:	ldr	x0, [x19, #32]
 4d4:	ldr	x1, [x0]
 4d8:	ldr	x2, [x1, #24]
 4dc:	cmp	x2, x22
 4e0:	b.ne	500 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x168>  // b.any
 4e4:	mov	x0, x19
 4e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 4ec:	mov	x19, x0
 4f0:	cmp	x20, x0
 4f4:	b.ne	4d0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x138>  // b.any
 4f8:	mov	w23, #0x0                   	// #0
 4fc:	b	480 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xe8>
 500:	mov	x1, x23
 504:	blr	x2
 508:	mov	x0, x19
 50c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 510:	mov	x19, x0
 514:	cmp	x0, x20
 518:	b.ne	4d0 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0x138>  // b.any
 51c:	mov	w23, #0x0                   	// #0
 520:	b	480 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xe8>
 524:	mov	x2, #0x0                   	// #0
 528:	b	470 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE+0xd8>
 52c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 530:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 534:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 538:	add	x3, x3, #0x0
 53c:	add	x1, x1, #0x0
 540:	add	x0, x0, #0x0
 544:	mov	w2, #0x43                  	// #67
 548:	bl	0 <__assert_fail>
 54c:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 550:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 554:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 558:	add	x3, x3, #0x0
 55c:	add	x1, x1, #0x0
 560:	add	x0, x0, #0x0
 564:	mov	w2, #0xa7                  	// #167
 568:	bl	0 <__assert_fail>
 56c:	nop

0000000000000570 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>:
 570:	ldr	x4, [x1, #8]
 574:	mov	w3, #0x1                   	// #1
 578:	ldr	x2, [x0, #104]
 57c:	ldr	x6, [x4]
 580:	ldr	w5, [x2, #20]
 584:	ldr	w4, [x2, #16]
 588:	ldr	w2, [x6, #316]
 58c:	cmp	w2, w4
 590:	csel	w2, w2, w4, ls  // ls = plast
 594:	cmp	w2, #0x0
 598:	csel	w2, w2, w3, ne  // ne = any
 59c:	cmp	w2, w5
 5a0:	b.hi	5ac <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x3c>  // b.pmore
 5a4:	mov	w0, w3
 5a8:	ret
 5ac:	stp	x29, x30, [sp, #-64]!
 5b0:	mov	w2, #0x2                   	// #2
 5b4:	mov	x29, sp
 5b8:	stp	x19, x20, [sp, #16]
 5bc:	add	x20, x0, #0x18
 5c0:	ldr	x19, [x0, #40]
 5c4:	str	w2, [sp, #48]
 5c8:	str	x1, [sp, #56]
 5cc:	cmp	x19, x20
 5d0:	b.eq	614 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0xa4>  // b.none
 5d4:	stp	x21, x22, [sp, #32]
 5d8:	adrp	x21, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 5dc:	add	x22, sp, #0x30
 5e0:	add	x21, x21, #0x0
 5e4:	nop
 5e8:	ldr	x3, [x19, #32]
 5ec:	mov	x0, x19
 5f0:	ldr	x1, [x3]
 5f4:	ldr	x2, [x1, #24]
 5f8:	cmp	x2, x21
 5fc:	b.ne	624 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0xb4>  // b.any
 600:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 604:	mov	x19, x0
 608:	cmp	x20, x0
 60c:	b.ne	5e8 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x78>  // b.any
 610:	ldp	x21, x22, [sp, #32]
 614:	mov	w0, #0x0                   	// #0
 618:	ldp	x19, x20, [sp, #16]
 61c:	ldp	x29, x30, [sp], #64
 620:	ret
 624:	mov	x1, x22
 628:	mov	x0, x3
 62c:	blr	x2
 630:	mov	x0, x19
 634:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 638:	mov	x19, x0
 63c:	cmp	x20, x0
 640:	b.ne	5e8 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0x78>  // b.any
 644:	b	610 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE+0xa0>

0000000000000648 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>:
 648:	stp	x29, x30, [sp, #-48]!
 64c:	mov	x29, sp
 650:	stp	x19, x20, [sp, #16]
 654:	mov	x19, x0
 658:	mov	x20, x1
 65c:	str	x21, [sp, #32]
 660:	bl	570 <_ZNK4llvm3mca13DispatchStage8checkRCUERKNS0_7InstRefE>
 664:	mov	x1, x20
 668:	and	w21, w0, #0xff
 66c:	mov	x0, x19
 670:	bl	398 <_ZNK4llvm3mca13DispatchStage8checkPRFERKNS0_7InstRefE>
 674:	ldr	x2, [x19, #8]
 678:	cbz	x2, 6b4 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE+0x6c>
 67c:	ldr	x3, [x2]
 680:	and	w19, w0, #0xff
 684:	mov	x0, x2
 688:	mov	x1, x20
 68c:	ldr	x2, [x3, #16]
 690:	blr	x2
 694:	cmp	w21, #0x0
 698:	ccmp	w19, #0x0, #0x4, ne  // ne = any
 69c:	cset	w1, ne  // ne = any
 6a0:	and	w0, w1, w0
 6a4:	ldp	x19, x20, [sp, #16]
 6a8:	ldr	x21, [sp, #32]
 6ac:	ldp	x29, x30, [sp], #48
 6b0:	ret
 6b4:	mov	w0, #0x0                   	// #0
 6b8:	ldp	x19, x20, [sp, #16]
 6bc:	ldr	x21, [sp, #32]
 6c0:	ldp	x29, x30, [sp], #48
 6c4:	ret

00000000000006c8 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE>:
 6c8:	ldr	x4, [x1, #8]
 6cc:	ldp	w3, w5, [x0, #64]
 6d0:	ldr	x4, [x4]
 6d4:	ldr	w2, [x4, #316]
 6d8:	cmp	w2, w3
 6dc:	csel	w2, w2, w3, ls  // ls = plast
 6e0:	cmp	w5, w2
 6e4:	b.cc	700 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x38>  // b.lo, b.ul, b.last
 6e8:	cmp	w5, w3
 6ec:	ldrb	w2, [x4, #327]
 6f0:	cset	w3, ne  // ne = any
 6f4:	tst	w3, w2
 6f8:	b.ne	700 <_ZNK4llvm3mca13DispatchStage11isAvailableERKNS0_7InstRefE+0x38>  // b.any
 6fc:	b	648 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 700:	mov	w0, #0x0                   	// #0
 704:	ret

0000000000000708 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>:
 708:	stp	x29, x30, [sp, #-128]!
 70c:	mov	x29, sp
 710:	stp	x19, x20, [sp, #16]
 714:	mov	x20, x0
 718:	ldr	w0, [x0, #72]
 71c:	stp	x21, x22, [sp, #32]
 720:	stp	x23, x24, [sp, #48]
 724:	stp	x25, x26, [sp, #64]
 728:	stp	x1, x2, [sp, #80]
 72c:	cbnz	w0, a24 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x31c>
 730:	ldr	x22, [sp, #88]
 734:	mov	x24, x8
 738:	ldp	w0, w1, [x20, #64]
 73c:	ldr	x2, [x22]
 740:	ldr	w23, [x2, #316]
 744:	cmp	w0, w23
 748:	b.cc	910 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x208>  // b.lo, b.ul, b.last
 74c:	cmp	w23, w1
 750:	b.hi	a44 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x33c>  // b.pmore
 754:	sub	w1, w1, w23
 758:	str	w1, [x20, #68]
 75c:	ldrb	w0, [x2, #328]
 760:	cbz	w0, 768 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x60>
 764:	str	wzr, [x20, #68]
 768:	ldrb	w0, [x22, #8]
 76c:	cbz	w0, 930 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x228>
 770:	ldr	w0, [x22, #24]
 774:	cmp	w0, #0x1
 778:	b.ne	a64 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x35c>  // b.any
 77c:	ldr	w19, [x22, #584]
 780:	cmp	w19, #0x1
 784:	b.ne	a84 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x37c>  // b.any
 788:	ldr	x1, [x22, #16]
 78c:	ldr	x0, [x20, #112]
 790:	ldr	x2, [x22, #576]
 794:	bl	0 <_ZN4llvm3mca12RegisterFile16tryEliminateMoveERNS0_10WriteStateERNS0_9ReadStateE>
 798:	tst	w0, #0xff
 79c:	b.eq	930 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x228>  // b.none
 7a0:	strb	w19, [x22, #840]
 7a4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 7a8:	add	x25, sp, #0x60
 7ac:	ldr	x0, [x20, #112]
 7b0:	add	x3, x25, #0x10
 7b4:	ldr	d0, [x1]
 7b8:	str	x3, [sp, #96]
 7bc:	ldr	w26, [x0, #24]
 7c0:	str	d0, [sp, #104]
 7c4:	cmp	w26, #0x4
 7c8:	mov	w19, w26
 7cc:	b.hi	990 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x288>  // b.pmore
 7d0:	lsl	x2, x19, #2
 7d4:	str	w26, [sp, #104]
 7d8:	add	x0, x3, x2
 7dc:	cmp	x3, x0
 7e0:	b.eq	7f4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xec>  // b.none
 7e4:	mov	x0, x3
 7e8:	mov	w1, #0x0                   	// #0
 7ec:	bl	0 <memset>
 7f0:	mov	x3, x0
 7f4:	ldr	w26, [x22, #24]
 7f8:	mov	w0, #0x88                  	// #136
 7fc:	ldr	x19, [x22, #16]
 800:	umaddl	x26, w26, w0, x19
 804:	cmp	x19, x26
 808:	b.ne	814 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x10c>  // b.any
 80c:	b	83c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x134>
 810:	ldr	x3, [sp, #96]
 814:	mov	x2, x19
 818:	ldr	w1, [sp, #80]
 81c:	add	x19, x19, #0x88
 820:	ldr	w4, [sp, #104]
 824:	ldr	x0, [x20, #112]
 828:	bfxil	x21, x1, #0, #32
 82c:	mov	x1, x21
 830:	bl	0 <_ZN4llvm3mca12RegisterFile16addRegisterWriteENS0_8WriteRefENS_15MutableArrayRefIjEE>
 834:	cmp	x26, x19
 838:	b.ne	810 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x108>  // b.any
 83c:	ldr	x0, [x20, #104]
 840:	add	x19, sp, #0x50
 844:	mov	x1, x19
 848:	bl	0 <_ZN4llvm3mca17RetireControlUnit8dispatchERKNS0_7InstRefE>
 84c:	mov	w1, w0
 850:	mov	x0, x22
 854:	bl	0 <_ZN4llvm3mca11Instruction8dispatchEj>
 858:	ldr	w4, [x20, #64]
 85c:	mov	x0, x20
 860:	ldr	w3, [sp, #104]
 864:	mov	x1, x19
 868:	ldr	x2, [sp, #96]
 86c:	cmp	w4, w23
 870:	csel	w4, w4, w23, ls  // ls = plast
 874:	bl	50 <_ZNK4llvm3mca13DispatchStage27notifyInstructionDispatchedERKNS0_7InstRefENS_8ArrayRefIjEEj>
 878:	ldr	x0, [x20, #8]
 87c:	cbz	x0, 970 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x268>
 880:	ldr	x2, [x0]
 884:	mov	x1, x19
 888:	ldr	x2, [x2, #16]
 88c:	blr	x2
 890:	tst	w0, #0xff
 894:	b.eq	970 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x268>  // b.none
 898:	ldr	x20, [x20, #8]
 89c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 8a0:	add	x0, x0, #0x0
 8a4:	ldr	x1, [x20]
 8a8:	ldr	x2, [x1, #48]
 8ac:	mov	x1, x19
 8b0:	cmp	x2, x0
 8b4:	mov	x0, x20
 8b8:	b.ne	9b8 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2b0>  // b.any
 8bc:	bl	648 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 8c0:	tst	w0, #0xff
 8c4:	b.eq	9c4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2bc>  // b.none
 8c8:	ldp	x2, x3, [sp, #80]
 8cc:	mov	x0, x20
 8d0:	mov	x8, x24
 8d4:	mov	x1, x2
 8d8:	mov	x2, x3
 8dc:	bl	708 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 8e0:	ldr	x0, [sp, #96]
 8e4:	add	x25, x25, #0x10
 8e8:	cmp	x0, x25
 8ec:	b.eq	8f4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1ec>  // b.none
 8f0:	bl	0 <free>
 8f4:	mov	x0, x24
 8f8:	ldp	x19, x20, [sp, #16]
 8fc:	ldp	x21, x22, [sp, #32]
 900:	ldp	x23, x24, [sp, #48]
 904:	ldp	x25, x26, [sp, #64]
 908:	ldp	x29, x30, [sp], #128
 90c:	ret
 910:	cmp	w0, w1
 914:	b.ne	9e4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2dc>  // b.any
 918:	ldr	w1, [sp, #80]
 91c:	sub	w0, w23, w0
 920:	stp	wzr, w0, [x20, #68]
 924:	str	w1, [x20, #80]
 928:	str	x22, [x20, #88]
 92c:	b	75c <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x54>
 930:	ldrb	w0, [x22, #840]
 934:	cbnz	w0, 7a4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x9c>
 938:	ldr	w25, [x22, #584]
 93c:	mov	w0, #0x30                  	// #48
 940:	ldr	x19, [x22, #576]
 944:	umaddl	x25, w25, w0, x19
 948:	cmp	x19, x25
 94c:	b.eq	7a4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x9c>  // b.none
 950:	ldr	x2, [x20, #96]
 954:	mov	x1, x19
 958:	ldr	x0, [x20, #112]
 95c:	add	x19, x19, #0x30
 960:	bl	0 <_ZNK4llvm3mca12RegisterFile15addRegisterReadERNS0_9ReadStateERKNS_15MCSubtargetInfoE>
 964:	cmp	x25, x19
 968:	b.ne	950 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x248>  // b.any
 96c:	b	7a4 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x9c>
 970:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 974:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 978:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 97c:	add	x3, x3, #0x0
 980:	add	x1, x1, #0x0
 984:	add	x0, x0, #0x0
 988:	mov	w2, #0x47                  	// #71
 98c:	bl	0 <__assert_fail>
 990:	mov	x1, x3
 994:	mov	x0, x25
 998:	mov	x2, x19
 99c:	mov	x3, #0x4                   	// #4
 9a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 9a4:	ldr	w0, [sp, #108]
 9a8:	cmp	x19, x0
 9ac:	b.hi	a04 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x2fc>  // b.pmore
 9b0:	ldr	x3, [sp, #96]
 9b4:	b	7d0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0xc8>
 9b8:	mov	x8, x24
 9bc:	blr	x2
 9c0:	b	8e0 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE+0x1d8>
 9c4:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9c8:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9cc:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9d0:	add	x3, x3, #0x0
 9d4:	add	x1, x1, #0x0
 9d8:	add	x0, x0, #0x0
 9dc:	mov	w2, #0xb0                  	// #176
 9e0:	bl	0 <__assert_fail>
 9e4:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9e8:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9ec:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 9f0:	add	x3, x3, #0x0
 9f4:	add	x1, x1, #0x0
 9f8:	add	x0, x0, #0x0
 9fc:	mov	w2, #0x54                  	// #84
 a00:	bl	0 <__assert_fail>
 a04:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a08:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a0c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a10:	add	x3, x3, #0x0
 a14:	add	x1, x1, #0x0
 a18:	add	x0, x0, #0x0
 a1c:	mov	w2, #0x43                  	// #67
 a20:	bl	0 <__assert_fail>
 a24:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a28:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a2c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a30:	add	x3, x3, #0x0
 a34:	add	x1, x1, #0x0
 a38:	add	x0, x0, #0x0
 a3c:	mov	w2, #0x4f                  	// #79
 a40:	bl	0 <__assert_fail>
 a44:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a48:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a4c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a50:	add	x3, x3, #0x0
 a54:	add	x1, x1, #0x0
 a58:	add	x0, x0, #0x0
 a5c:	mov	w2, #0x59                  	// #89
 a60:	bl	0 <__assert_fail>
 a64:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a68:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a6c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a70:	add	x3, x3, #0x0
 a74:	add	x1, x1, #0x0
 a78:	add	x0, x0, #0x0
 a7c:	mov	w2, #0x63                  	// #99
 a80:	bl	0 <__assert_fail>
 a84:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a88:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a8c:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 a90:	add	x3, x3, #0x0
 a94:	add	x1, x1, #0x0
 a98:	add	x0, x0, #0x0
 a9c:	mov	w2, #0x64                  	// #100
 aa0:	bl	0 <__assert_fail>
 aa4:	nop

0000000000000aa8 <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE>:
 aa8:	stp	x29, x30, [sp, #-48]!
 aac:	mov	x29, sp
 ab0:	stp	x19, x20, [sp, #16]
 ab4:	mov	x19, x8
 ab8:	mov	x20, x0
 abc:	str	x21, [sp, #32]
 ac0:	mov	x21, x1
 ac4:	bl	648 <_ZNK4llvm3mca13DispatchStage11canDispatchERKNS0_7InstRefE>
 ac8:	tst	w0, #0xff
 acc:	b.eq	afc <_ZN4llvm3mca13DispatchStage7executeERNS0_7InstRefE+0x54>  // b.none
 ad0:	ldp	x2, x3, [x21]
 ad4:	mov	x0, x20
 ad8:	mov	x8, x19
 adc:	mov	x1, x2
 ae0:	mov	x2, x3
 ae4:	bl	708 <_ZN4llvm3mca13DispatchStage8dispatchENS0_7InstRefE>
 ae8:	mov	x0, x19
 aec:	ldp	x19, x20, [sp, #16]
 af0:	ldr	x21, [sp, #32]
 af4:	ldp	x29, x30, [sp], #48
 af8:	ret
 afc:	adrp	x3, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b00:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b04:	adrp	x0, 0 <_ZN4llvm3mca13DispatchStageC1ERKNS_15MCSubtargetInfoERKNS_14MCRegisterInfoEjRNS0_17RetireControlUnitERNS0_12RegisterFileE>
 b08:	add	x3, x3, #0x0
 b0c:	add	x1, x1, #0x0
 b10:	add	x0, x0, #0x0
 b14:	mov	w2, #0xb0                  	// #176
 b18:	bl	0 <__assert_fail>
 b1c:	nop

0000000000000b20 <_ZNK4llvm3mca13DispatchStage4dumpEv>:
 b20:	stp	x29, x30, [sp, #-32]!
 b24:	mov	x29, sp
 b28:	str	x19, [sp, #16]
 b2c:	mov	x19, x0
 b30:	ldr	x0, [x0, #112]
 b34:	bl	0 <_ZNK4llvm3mca12RegisterFile4dumpEv>
 b38:	ldr	x0, [x19, #104]
 b3c:	ldr	x19, [sp, #16]
 b40:	ldp	x29, x30, [sp], #32
 b44:	b	0 <_ZNK4llvm3mca17RetireControlUnit4dumpEv>

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca13DispatchStage17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca13DispatchStageD2Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca13DispatchStageD0Ev:

0000000000000000 <_ZN4llvm3mca13DispatchStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca13DispatchStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x78                  	// #120
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

EntryStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>:
   0:	ldr	x0, [x0, #72]
   4:	cmp	x0, #0x0
   8:	cset	w0, ne  // ne = any
   c:	ret

0000000000000010 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE>:
  10:	mov	x1, x0
  14:	ldr	x0, [x0, #72]
  18:	cbz	x0, 38 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x28>
  1c:	ldr	x0, [x1, #8]
  20:	cbz	x0, 38 <_ZNK4llvm3mca10EntryStage11isAvailableERKNS0_7InstRefE+0x28>
  24:	ldr	x2, [x0]
  28:	add	x1, x1, #0x40
  2c:	ldr	x2, [x2, #16]
  30:	mov	x16, x2
  34:	br	x16
  38:	mov	w0, #0x0                   	// #0
  3c:	ret

0000000000000040 <_ZN4llvm3mca10EntryStage8cycleEndEv>:
  40:	stp	x29, x30, [sp, #-96]!
  44:	mov	x29, sp
  48:	ldr	w2, [x0, #88]
  4c:	stp	x19, x20, [sp, #16]
  50:	ldr	w19, [x0, #232]
  54:	stp	x21, x22, [sp, #32]
  58:	stp	x23, x24, [sp, #48]
  5c:	cmp	x19, w2, uxtw
  60:	b.cs	384 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x344>  // b.hs, b.nlast
  64:	mov	x22, x0
  68:	mov	w20, w2
  6c:	lsl	x19, x19, #3
  70:	mov	x24, x8
  74:	lsl	x20, x20, #3
  78:	ldr	x23, [x22, #80]
  7c:	sub	x1, x20, x19
  80:	mov	x0, x20
  84:	cmp	xzr, x1, asr #5
  88:	asr	x3, x1, #3
  8c:	add	x19, x23, x19
  90:	asr	x1, x1, #5
  94:	add	x20, x23, x20
  98:	b.ge	2f8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2b8>  // b.tcont
  9c:	add	x1, x19, x1, lsl #5
  a0:	b	e0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xa0>
  a4:	ldr	x3, [x19, #8]
  a8:	ldr	w3, [x3, #784]
  ac:	cmp	w3, #0x6
  b0:	b.ne	358 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x318>  // b.any
  b4:	ldr	x3, [x19, #16]
  b8:	ldr	w3, [x3, #784]
  bc:	cmp	w3, #0x6
  c0:	b.ne	364 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x324>  // b.any
  c4:	ldr	x3, [x19, #24]
  c8:	ldr	w3, [x3, #784]
  cc:	cmp	w3, #0x6
  d0:	b.ne	370 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x330>  // b.any
  d4:	add	x19, x19, #0x20
  d8:	cmp	x1, x19
  dc:	b.eq	2f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2b0>  // b.none
  e0:	ldr	x3, [x19]
  e4:	ldr	w3, [x3, #784]
  e8:	cmp	w3, #0x6
  ec:	b.eq	a4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x64>  // b.none
  f0:	sub	x0, x19, x23
  f4:	asr	x0, x0, #3
  f8:	str	w0, [x22, #232]
  fc:	lsl	w0, w0, #1
 100:	cmp	w0, w2
 104:	b.cs	128 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xe8>  // b.hs, b.nlast
 108:	mov	x1, #0x1                   	// #1
 10c:	mov	x0, x24
 110:	ldp	x19, x20, [sp, #16]
 114:	ldp	x21, x22, [sp, #32]
 118:	str	x1, [x24]
 11c:	ldp	x23, x24, [sp, #48]
 120:	ldp	x29, x30, [sp], #96
 124:	ret
 128:	stp	x25, x26, [sp, #64]
 12c:	cmp	x23, x19
 130:	b.hi	3ac <_ZN4llvm3mca10EntryStage8cycleEndEv+0x36c>  // b.pmore
 134:	cmp	x20, x19
 138:	b.cc	3d0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x390>  // b.lo, b.ul, b.last
 13c:	sub	x25, x20, x19
 140:	cmp	x25, #0x0
 144:	asr	x26, x25, #3
 148:	b.le	214 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x1d4>
 14c:	stp	x27, x28, [sp, #80]
 150:	mov	x28, #0x0                   	// #0
 154:	nop
 158:	ldr	x0, [x19, x28, lsl #3]
 15c:	str	xzr, [x19, x28, lsl #3]
 160:	ldr	x21, [x23, x28, lsl #3]
 164:	str	x0, [x23, x28, lsl #3]
 168:	cbz	x21, 1dc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x19c>
 16c:	ldr	x0, [x21, #576]
 170:	add	x1, x21, #0x250
 174:	cmp	x0, x1
 178:	b.eq	180 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x140>  // b.none
 17c:	bl	0 <free>
 180:	ldr	w20, [x21, #24]
 184:	mov	w0, #0x88                  	// #136
 188:	ldr	x27, [x21, #16]
 18c:	umaddl	x20, w20, w0, x27
 190:	cmp	x27, x20
 194:	b.eq	1bc <_ZN4llvm3mca10EntryStage8cycleEndEv+0x17c>  // b.none
 198:	ldur	x0, [x20, #-80]
 19c:	sub	x20, x20, #0x88
 1a0:	add	x2, x20, #0x48
 1a4:	cmp	x0, x2
 1a8:	b.eq	2e4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2a4>  // b.none
 1ac:	bl	0 <free>
 1b0:	cmp	x27, x20
 1b4:	b.ne	198 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x158>  // b.any
 1b8:	ldr	x20, [x21, #16]
 1bc:	add	x0, x21, #0x20
 1c0:	cmp	x20, x0
 1c4:	b.eq	1d0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x190>  // b.none
 1c8:	mov	x0, x20
 1cc:	bl	0 <free>
 1d0:	mov	x0, x21
 1d4:	mov	x1, #0x350                 	// #848
 1d8:	bl	0 <_ZdlPvm>
 1dc:	add	x28, x28, #0x1
 1e0:	sub	x0, x26, x28
 1e4:	cmp	x0, #0x0
 1e8:	b.gt	158 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x118>
 1ec:	ldr	x0, [x22, #80]
 1f0:	cmp	x25, #0x0
 1f4:	ldr	w20, [x22, #88]
 1f8:	mov	x1, #0x8                   	// #8
 1fc:	csel	x25, x25, x1, gt
 200:	add	x23, x23, x25
 204:	add	x20, x0, x20, lsl #3
 208:	cmp	x20, x23
 20c:	b.eq	378 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x338>  // b.none
 210:	ldp	x27, x28, [sp, #80]
 214:	mov	w26, #0x88                  	// #136
 218:	ldr	x21, [x20, #-8]!
 21c:	cbz	x21, 28c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x24c>
 220:	ldr	x0, [x21, #576]
 224:	add	x1, x21, #0x250
 228:	cmp	x0, x1
 22c:	b.eq	234 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x1f4>  // b.none
 230:	bl	0 <free>
 234:	ldr	w19, [x21, #24]
 238:	ldr	x25, [x21, #16]
 23c:	umaddl	x19, w19, w26, x25
 240:	cmp	x25, x19
 244:	b.eq	26c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x22c>  // b.none
 248:	ldur	x0, [x19, #-80]
 24c:	sub	x19, x19, #0x88
 250:	add	x1, x19, #0x48
 254:	cmp	x0, x1
 258:	b.eq	2d8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x298>  // b.none
 25c:	bl	0 <free>
 260:	cmp	x25, x19
 264:	b.ne	248 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x208>  // b.any
 268:	ldr	x19, [x21, #16]
 26c:	add	x0, x21, #0x20
 270:	cmp	x19, x0
 274:	b.eq	280 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x240>  // b.none
 278:	mov	x0, x19
 27c:	bl	0 <free>
 280:	mov	x0, x21
 284:	mov	x1, #0x350                 	// #848
 288:	bl	0 <_ZdlPvm>
 28c:	cmp	x23, x20
 290:	b.ne	218 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x1d8>  // b.any
 294:	ldr	x0, [x22, #80]
 298:	sub	x20, x20, x0
 29c:	ldr	w1, [x22, #92]
 2a0:	asr	x0, x20, #3
 2a4:	cmp	x1, x20, asr #3
 2a8:	b.cc	3f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x3b4>  // b.lo, b.ul, b.last
 2ac:	ldp	x25, x26, [sp, #64]
 2b0:	str	w0, [x22, #88]
 2b4:	str	wzr, [x22, #232]
 2b8:	mov	x1, #0x1                   	// #1
 2bc:	ldp	x19, x20, [sp, #16]
 2c0:	mov	x0, x24
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	str	x1, [x24]
 2cc:	ldp	x23, x24, [sp, #48]
 2d0:	ldp	x29, x30, [sp], #96
 2d4:	ret
 2d8:	cmp	x25, x19
 2dc:	b.ne	248 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x208>  // b.any
 2e0:	b	268 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x228>
 2e4:	cmp	x27, x20
 2e8:	b.ne	198 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x158>  // b.any
 2ec:	b	1b8 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x178>
 2f0:	sub	x3, x20, x19
 2f4:	asr	x3, x3, #3
 2f8:	cmp	x3, #0x2
 2fc:	b.eq	32c <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2ec>  // b.none
 300:	cmp	x3, #0x3
 304:	b.eq	318 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x2d8>  // b.none
 308:	cmp	x3, #0x1
 30c:	b.eq	340 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x300>  // b.none
 310:	mov	x19, x20
 314:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 318:	ldr	x1, [x19]
 31c:	ldr	w1, [x1, #784]
 320:	cmp	w1, #0x6
 324:	b.ne	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>  // b.any
 328:	add	x19, x19, #0x8
 32c:	ldr	x1, [x19]
 330:	ldr	w1, [x1, #784]
 334:	cmp	w1, #0x6
 338:	b.ne	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>  // b.any
 33c:	add	x19, x19, #0x8
 340:	ldr	x1, [x19]
 344:	ldr	w1, [x1, #784]
 348:	cmp	w1, #0x6
 34c:	b.ne	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>  // b.any
 350:	mov	x19, x20
 354:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 358:	add	x19, x19, #0x8
 35c:	sub	x0, x19, x23
 360:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 364:	add	x19, x19, #0x10
 368:	sub	x0, x19, x23
 36c:	b	f4 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb4>
 370:	add	x19, x19, #0x18
 374:	b	f0 <_ZN4llvm3mca10EntryStage8cycleEndEv+0xb0>
 378:	mov	x20, x23
 37c:	ldp	x27, x28, [sp, #80]
 380:	b	298 <_ZN4llvm3mca10EntryStage8cycleEndEv+0x258>
 384:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 388:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 38c:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 390:	add	x3, x3, #0x0
 394:	add	x1, x1, #0x0
 398:	add	x0, x0, #0x0
 39c:	mov	w2, #0x95                  	// #149
 3a0:	stp	x25, x26, [sp, #64]
 3a4:	stp	x27, x28, [sp, #80]
 3a8:	bl	0 <__assert_fail>
 3ac:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3b0:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3b4:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3b8:	add	x3, x3, #0x0
 3bc:	add	x1, x1, #0x0
 3c0:	add	x0, x0, #0x0
 3c4:	mov	w2, #0x1c7                 	// #455
 3c8:	stp	x27, x28, [sp, #80]
 3cc:	bl	0 <__assert_fail>
 3d0:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3d4:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3d8:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3dc:	add	x3, x3, #0x0
 3e0:	add	x1, x1, #0x0
 3e4:	add	x0, x0, #0x0
 3e8:	mov	w2, #0x1c8                 	// #456
 3ec:	stp	x27, x28, [sp, #80]
 3f0:	bl	0 <__assert_fail>
 3f4:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3f8:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 3fc:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 400:	add	x3, x3, #0x0
 404:	add	x1, x1, #0x0
 408:	add	x0, x0, #0x0
 40c:	mov	w2, #0x43                  	// #67
 410:	stp	x27, x28, [sp, #80]
 414:	bl	0 <__assert_fail>

0000000000000418 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>:
 418:	stp	x29, x30, [sp, #-48]!
 41c:	mov	x29, sp
 420:	stp	x19, x20, [sp, #16]
 424:	mov	x20, x0
 428:	ldr	x0, [x0, #72]
 42c:	stp	x21, x22, [sp, #32]
 430:	cbnz	x0, 5b8 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1a0>
 434:	ldr	x1, [x20, #224]
 438:	ldp	w22, w0, [x1, #16]
 43c:	ldr	x2, [x1, #8]
 440:	mov	w3, w22
 444:	mul	x0, x0, x2
 448:	cmp	x0, w22, uxtw
 44c:	b.hi	460 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x48>  // b.pmore
 450:	ldp	x19, x20, [sp, #16]
 454:	ldp	x21, x22, [sp, #32]
 458:	ldp	x29, x30, [sp], #48
 45c:	ret
 460:	udiv	x4, x3, x2
 464:	mov	x0, #0x350                 	// #848
 468:	ldr	x1, [x1]
 46c:	msub	x2, x4, x2, x3
 470:	ldr	x21, [x1, x2, lsl #3]
 474:	bl	0 <_Znwm>
 478:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 47c:	mov	x19, x0
 480:	ldr	d0, [x1]
 484:	add	x1, x0, #0x20
 488:	ldrb	w2, [x21, #8]
 48c:	ldr	x3, [x21]
 490:	str	d0, [x0, #24]
 494:	ldr	w0, [x21, #24]
 498:	str	x3, [x19]
 49c:	strb	w2, [x19, #8]
 4a0:	str	x1, [x19, #16]
 4a4:	cbnz	w0, 56c <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x154>
 4a8:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 4ac:	ldr	d0, [x0]
 4b0:	add	x0, x19, #0x250
 4b4:	str	x0, [x19, #576]
 4b8:	str	d0, [x19, #584]
 4bc:	ldr	w0, [x21, #584]
 4c0:	cbnz	w0, 594 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x17c>
 4c4:	add	x1, x21, #0x334
 4c8:	ldr	d0, [x21, #792]
 4cc:	add	x0, x19, #0x334
 4d0:	ldr	w2, [x21, #816]
 4d4:	ldr	x3, [x21, #784]
 4d8:	str	x3, [x19, #784]
 4dc:	ldr	x4, [x21, #800]
 4e0:	str	d0, [x19, #792]
 4e4:	ldr	x3, [x21, #808]
 4e8:	str	x4, [x19, #800]
 4ec:	str	x3, [x19, #808]
 4f0:	str	w2, [x19, #816]
 4f4:	ldr	x2, [x1]
 4f8:	str	x2, [x0]
 4fc:	ldr	x0, [x21, #832]
 500:	str	x0, [x19, #832]
 504:	ldr	w1, [x21, #828]
 508:	ldrb	w0, [x21, #840]
 50c:	str	w1, [x19, #828]
 510:	strb	w0, [x19, #840]
 514:	ldp	w0, w1, [x20, #88]
 518:	str	w22, [x20, #64]
 51c:	str	x19, [x20, #72]
 520:	cmp	w0, w1
 524:	b.cs	5a4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x18c>  // b.hs, b.nlast
 528:	ldr	x3, [x20, #80]
 52c:	mov	w2, w0
 530:	add	x4, x2, #0x1
 534:	cmp	x4, w1, uxtw
 538:	str	x19, [x3, x2, lsl #3]
 53c:	b.hi	5d8 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1c0>  // b.pmore
 540:	add	w0, w0, #0x1
 544:	str	w0, [x20, #88]
 548:	cbz	w0, 5f8 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x1e0>
 54c:	ldr	x1, [x20, #224]
 550:	ldp	x19, x20, [sp, #16]
 554:	ldr	w0, [x1, #16]
 558:	ldp	x21, x22, [sp, #32]
 55c:	add	w0, w0, #0x1
 560:	str	w0, [x1, #16]
 564:	ldp	x29, x30, [sp], #48
 568:	ret
 56c:	add	x1, x21, #0x10
 570:	add	x0, x19, #0x10
 574:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 578:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 57c:	ldr	d0, [x0]
 580:	add	x0, x19, #0x250
 584:	str	x0, [x19, #576]
 588:	str	d0, [x19, #584]
 58c:	ldr	w0, [x21, #584]
 590:	cbz	w0, 4c4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xac>
 594:	add	x1, x21, #0x240
 598:	add	x0, x19, #0x240
 59c:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5a0:	b	4c4 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0xac>
 5a4:	add	x0, x20, #0x50
 5a8:	mov	x1, #0x0                   	// #0
 5ac:	bl	0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5b0:	ldp	w0, w1, [x20, #88]
 5b4:	b	528 <_ZN4llvm3mca10EntryStage18getNextInstructionEv+0x110>
 5b8:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5bc:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5c0:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5c4:	add	x3, x3, #0x0
 5c8:	add	x1, x1, #0x0
 5cc:	add	x0, x0, #0x0
 5d0:	mov	w2, #0x20                  	// #32
 5d4:	bl	0 <__assert_fail>
 5d8:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5dc:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5e0:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5e4:	add	x3, x3, #0x0
 5e8:	add	x1, x1, #0x0
 5ec:	add	x0, x0, #0x0
 5f0:	mov	w2, #0x43                  	// #67
 5f4:	bl	0 <__assert_fail>
 5f8:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 5fc:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 600:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 604:	add	x3, x3, #0x0
 608:	add	x1, x1, #0x0
 60c:	add	x0, x0, #0x0
 610:	mov	w2, #0xa7                  	// #167
 614:	bl	0 <__assert_fail>

0000000000000618 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE>:
 618:	stp	x29, x30, [sp, #-64]!
 61c:	mov	x29, sp
 620:	stp	x19, x20, [sp, #16]
 624:	mov	x19, x0
 628:	ldr	x0, [x0, #72]
 62c:	str	x21, [sp, #32]
 630:	cbz	x0, 6e4 <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xcc>
 634:	ldr	x0, [x19, #8]
 638:	cbz	x0, 69c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x84>
 63c:	ldr	x2, [x0]
 640:	add	x21, x19, #0x40
 644:	mov	x20, x8
 648:	mov	x1, x21
 64c:	ldr	x2, [x2, #16]
 650:	blr	x2
 654:	tst	w0, #0xff
 658:	b.eq	69c <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0x84>  // b.none
 65c:	ldr	x0, [x19, #8]
 660:	mov	x1, x21
 664:	add	x8, sp, #0x38
 668:	ldr	x2, [x0]
 66c:	ldr	x2, [x2, #48]
 670:	blr	x2
 674:	ldr	x0, [sp, #56]
 678:	ands	x0, x0, #0xfffffffffffffffe
 67c:	b.eq	6bc <_ZN4llvm3mca10EntryStage7executeERNS0_7InstRefE+0xa4>  // b.none
 680:	orr	x0, x0, #0x1
 684:	str	x0, [x20]
 688:	mov	x0, x20
 68c:	ldp	x19, x20, [sp, #16]
 690:	ldr	x21, [sp, #32]
 694:	ldp	x29, x30, [sp], #64
 698:	ret
 69c:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6a0:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6a4:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6a8:	add	x3, x3, #0x0
 6ac:	add	x1, x1, #0x0
 6b0:	add	x0, x0, #0x0
 6b4:	mov	w2, #0x47                  	// #71
 6b8:	bl	0 <__assert_fail>
 6bc:	str	xzr, [x19, #72]
 6c0:	mov	x0, x19
 6c4:	bl	418 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 6c8:	mov	x0, #0x1                   	// #1
 6cc:	str	x0, [x20]
 6d0:	mov	x0, x20
 6d4:	ldp	x19, x20, [sp, #16]
 6d8:	ldr	x21, [sp, #32]
 6dc:	ldp	x29, x30, [sp], #64
 6e0:	ret
 6e4:	adrp	x3, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6e8:	adrp	x1, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6ec:	adrp	x0, 0 <_ZNK4llvm3mca10EntryStage17hasWorkToCompleteEv>
 6f0:	add	x3, x3, #0x0
 6f4:	add	x1, x1, #0x0
 6f8:	add	x0, x0, #0x0
 6fc:	mov	w2, #0x2b                  	// #43
 700:	bl	0 <__assert_fail>
 704:	nop

0000000000000708 <_ZN4llvm3mca10EntryStage10cycleStartEv>:
 708:	stp	x29, x30, [sp, #-32]!
 70c:	mov	x29, sp
 710:	ldr	x1, [x0, #72]
 714:	str	x19, [sp, #16]
 718:	mov	x19, x8
 71c:	cbz	x1, 738 <_ZN4llvm3mca10EntryStage10cycleStartEv+0x30>
 720:	mov	x1, #0x1                   	// #1
 724:	str	x1, [x19]
 728:	mov	x0, x19
 72c:	ldr	x19, [sp, #16]
 730:	ldp	x29, x30, [sp], #32
 734:	ret
 738:	bl	418 <_ZN4llvm3mca10EntryStage18getNextInstructionEv>
 73c:	mov	x1, #0x1                   	// #1
 740:	str	x1, [x19]
 744:	mov	x0, x19
 748:	ldr	x19, [sp, #16]
 74c:	ldp	x29, x30, [sp], #32
 750:	ret

Disassembly of section .text._ZN4llvm3mca10EntryStageD0Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD0Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	adrp	x1, 0 <_ZN4llvm3mca10EntryStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x23, x24, [sp, #48]
  14:	ldr	x24, [x0, #80]
  18:	stp	x21, x22, [sp, #32]
  1c:	ldr	w21, [x0, #88]
  20:	stp	x19, x20, [sp, #16]
  24:	add	x1, x1, #0x10
  28:	mov	x20, x0
  2c:	str	x1, [x0]
  30:	add	x21, x24, x21, lsl #3
  34:	cmp	x24, x21
  38:	b.eq	cc <_ZN4llvm3mca10EntryStageD0Ev+0xcc>  // b.none
  3c:	str	x25, [sp, #64]
  40:	mov	w25, #0x88                  	// #136
  44:	nop
  48:	ldr	x22, [x21, #-8]!
  4c:	cbz	x22, bc <_ZN4llvm3mca10EntryStageD0Ev+0xbc>
  50:	ldr	x0, [x22, #576]
  54:	add	x1, x22, #0x250
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm3mca10EntryStageD0Ev+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	w19, [x22, #24]
  68:	ldr	x23, [x22, #16]
  6c:	umaddl	x19, w19, w25, x23
  70:	cmp	x23, x19
  74:	b.eq	9c <_ZN4llvm3mca10EntryStageD0Ev+0x9c>  // b.none
  78:	ldur	x0, [x19, #-80]
  7c:	sub	x19, x19, #0x88
  80:	add	x1, x19, #0x48
  84:	cmp	x0, x1
  88:	b.eq	104 <_ZN4llvm3mca10EntryStageD0Ev+0x104>  // b.none
  8c:	bl	0 <free>
  90:	cmp	x23, x19
  94:	b.ne	78 <_ZN4llvm3mca10EntryStageD0Ev+0x78>  // b.any
  98:	ldr	x19, [x22, #16]
  9c:	add	x0, x22, #0x20
  a0:	cmp	x19, x0
  a4:	b.eq	b0 <_ZN4llvm3mca10EntryStageD0Ev+0xb0>  // b.none
  a8:	mov	x0, x19
  ac:	bl	0 <free>
  b0:	mov	x0, x22
  b4:	mov	x1, #0x350                 	// #848
  b8:	bl	0 <_ZdlPvm>
  bc:	cmp	x24, x21
  c0:	b.ne	48 <_ZN4llvm3mca10EntryStageD0Ev+0x48>  // b.any
  c4:	ldr	x25, [sp, #64]
  c8:	ldr	x21, [x20, #80]
  cc:	add	x0, x20, #0x60
  d0:	cmp	x21, x0
  d4:	b.eq	e0 <_ZN4llvm3mca10EntryStageD0Ev+0xe0>  // b.none
  d8:	mov	x0, x21
  dc:	bl	0 <free>
  e0:	mov	x0, x20
  e4:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  e8:	mov	x0, x20
  ec:	mov	x1, #0xf0                  	// #240
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldp	x23, x24, [sp, #48]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	0 <_ZdlPvm>
 104:	cmp	x23, x19
 108:	b.ne	78 <_ZN4llvm3mca10EntryStageD0Ev+0x78>  // b.any
 10c:	b	98 <_ZN4llvm3mca10EntryStageD0Ev+0x98>

Disassembly of section .text._ZN4llvm3mca10EntryStageD2Ev:

0000000000000000 <_ZN4llvm3mca10EntryStageD1Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	adrp	x1, 0 <_ZN4llvm3mca10EntryStageD1Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	stp	x23, x24, [sp, #48]
  14:	ldr	x24, [x0, #80]
  18:	stp	x19, x20, [sp, #16]
  1c:	ldr	w20, [x0, #88]
  20:	stp	x21, x22, [sp, #32]
  24:	add	x1, x1, #0x10
  28:	mov	x22, x0
  2c:	str	x1, [x0]
  30:	add	x20, x24, x20, lsl #3
  34:	cmp	x24, x20
  38:	b.eq	cc <_ZN4llvm3mca10EntryStageD1Ev+0xcc>  // b.none
  3c:	str	x25, [sp, #64]
  40:	mov	w25, #0x88                  	// #136
  44:	nop
  48:	ldr	x21, [x20, #-8]!
  4c:	cbz	x21, bc <_ZN4llvm3mca10EntryStageD1Ev+0xbc>
  50:	ldr	x0, [x21, #576]
  54:	add	x1, x21, #0x250
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZN4llvm3mca10EntryStageD1Ev+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	w19, [x21, #24]
  68:	ldr	x23, [x21, #16]
  6c:	umaddl	x19, w19, w25, x23
  70:	cmp	x23, x19
  74:	b.eq	9c <_ZN4llvm3mca10EntryStageD1Ev+0x9c>  // b.none
  78:	ldur	x0, [x19, #-80]
  7c:	sub	x19, x19, #0x88
  80:	add	x1, x19, #0x48
  84:	cmp	x0, x1
  88:	b.eq	f8 <_ZN4llvm3mca10EntryStageD1Ev+0xf8>  // b.none
  8c:	bl	0 <free>
  90:	cmp	x23, x19
  94:	b.ne	78 <_ZN4llvm3mca10EntryStageD1Ev+0x78>  // b.any
  98:	ldr	x19, [x21, #16]
  9c:	add	x0, x21, #0x20
  a0:	cmp	x19, x0
  a4:	b.eq	b0 <_ZN4llvm3mca10EntryStageD1Ev+0xb0>  // b.none
  a8:	mov	x0, x19
  ac:	bl	0 <free>
  b0:	mov	x0, x21
  b4:	mov	x1, #0x350                 	// #848
  b8:	bl	0 <_ZdlPvm>
  bc:	cmp	x24, x20
  c0:	b.ne	48 <_ZN4llvm3mca10EntryStageD1Ev+0x48>  // b.any
  c4:	ldr	x25, [sp, #64]
  c8:	ldr	x20, [x22, #80]
  cc:	add	x0, x22, #0x60
  d0:	cmp	x20, x0
  d4:	b.eq	e0 <_ZN4llvm3mca10EntryStageD1Ev+0xe0>  // b.none
  d8:	mov	x0, x20
  dc:	bl	0 <free>
  e0:	mov	x0, x22
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x23, x24, [sp, #48]
  f0:	ldp	x29, x30, [sp], #80
  f4:	b	0 <_ZN4llvm3mca5StageD2Ev>
  f8:	cmp	x23, x19
  fc:	b.ne	78 <_ZN4llvm3mca10EntryStageD1Ev+0x78>  // b.any
 100:	b	98 <_ZN4llvm3mca10EntryStageD1Ev+0x98>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x24, x0
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	str	x27, [sp, #80]
  24:	cmp	x1, x0
  28:	str	x1, [sp, #104]
  2c:	b.hi	20c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x20c>  // b.pmore
  30:	ldr	w0, [x24, #12]
  34:	mov	x2, #0xffffffff            	// #4294967295
  38:	str	x2, [sp, #120]
  3c:	add	x0, x0, #0x2
  40:	orr	x0, x0, x0, lsr #1
  44:	orr	x0, x0, x0, lsr #2
  48:	orr	x0, x0, x0, lsr #4
  4c:	orr	x0, x0, x0, lsr #8
  50:	orr	x1, x0, x0, lsr #16
  54:	orr	x0, x1, x0, lsr #32
  58:	add	x0, x0, #0x1
  5c:	cmp	x0, x19
  60:	csel	x1, x0, x19, cs  // cs = hs, nlast
  64:	cmp	x1, x2
  68:	b.hi	1dc <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1dc>  // b.pmore
  6c:	mov	w27, w1
  70:	lsl	x0, x1, #3
  74:	str	x1, [sp, #112]
  78:	bl	0 <malloc>
  7c:	mov	x23, x0
  80:	cbz	x0, 1f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1f4>
  84:	ldr	w4, [x24, #8]
  88:	ldr	x1, [x24]
  8c:	lsl	x4, x4, #3
  90:	add	x21, x1, x4
  94:	cmp	x1, x21
  98:	b.eq	19c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x19c>  // b.none
  9c:	sub	x2, x21, x1
  a0:	add	x3, x1, #0xf
  a4:	sub	x2, x2, #0x8
  a8:	stp	x25, x26, [sp, #64]
  ac:	cmp	x2, #0x30
  b0:	sub	x3, x3, x23
  b4:	mov	x0, x1
  b8:	lsr	x2, x2, #3
  bc:	ccmp	x3, #0x1e, #0x0, hi  // hi = pmore
  c0:	b.ls	220 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x220>  // b.plast
  c4:	add	x2, x2, #0x1
  c8:	mov	x0, #0x0                   	// #0
  cc:	movi	v1.4s, #0x0
  d0:	lsr	x3, x2, #1
  d4:	lsl	x3, x3, #4
  d8:	ldr	q0, [x1, x0]
  dc:	str	q1, [x1, x0]
  e0:	str	q0, [x23, x0]
  e4:	add	x0, x0, #0x10
  e8:	cmp	x3, x0
  ec:	b.ne	d8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0xd8>  // b.any
  f0:	and	x0, x2, #0xfffffffffffffffe
  f4:	tbz	w2, #0, 104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x104>
  f8:	ldr	x2, [x1, x0, lsl #3]
  fc:	str	xzr, [x1, x0, lsl #3]
 100:	str	x2, [x23, x0, lsl #3]
 104:	ldr	x25, [x24]
 108:	add	x21, x25, x4
 10c:	cmp	x25, x21
 110:	b.eq	240 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x240>  // b.none
 114:	mov	w26, #0x88                  	// #136
 118:	ldr	x20, [x21, #-8]!
 11c:	cbz	x20, 18c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x18c>
 120:	ldr	x0, [x20, #576]
 124:	add	x1, x20, #0x250
 128:	cmp	x0, x1
 12c:	b.eq	134 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x134>  // b.none
 130:	bl	0 <free>
 134:	ldr	w19, [x20, #24]
 138:	ldr	x22, [x20, #16]
 13c:	umaddl	x19, w19, w26, x22
 140:	cmp	x22, x19
 144:	b.eq	16c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x16c>  // b.none
 148:	ldur	x0, [x19, #-80]
 14c:	sub	x19, x19, #0x88
 150:	add	x1, x19, #0x48
 154:	cmp	x0, x1
 158:	b.eq	1d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1d0>  // b.none
 15c:	bl	0 <free>
 160:	cmp	x22, x19
 164:	b.ne	148 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x148>  // b.any
 168:	ldr	x19, [x20, #16]
 16c:	add	x0, x20, #0x20
 170:	cmp	x19, x0
 174:	b.eq	180 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x180>  // b.none
 178:	mov	x0, x19
 17c:	bl	0 <free>
 180:	mov	x0, x20
 184:	mov	x1, #0x350                 	// #848
 188:	bl	0 <_ZdlPvm>
 18c:	cmp	x21, x25
 190:	b.ne	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x118>  // b.any
 194:	ldp	x25, x26, [sp, #64]
 198:	ldr	x21, [x24]
 19c:	add	x0, x24, #0x10
 1a0:	cmp	x21, x0
 1a4:	b.eq	1b0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x1b0>  // b.none
 1a8:	mov	x0, x21
 1ac:	bl	0 <free>
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	str	x23, [x24]
 1bc:	str	w27, [x24, #12]
 1c0:	ldp	x23, x24, [sp, #48]
 1c4:	ldr	x27, [sp, #80]
 1c8:	ldp	x29, x30, [sp], #128
 1cc:	ret
 1d0:	cmp	x22, x19
 1d4:	b.ne	148 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x148>  // b.any
 1d8:	b	168 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x168>
 1dc:	mov	x0, #0x7fffffff8           	// #34359738360
 1e0:	mov	w27, #0xffffffff            	// #-1
 1e4:	str	x2, [sp, #112]
 1e8:	bl	0 <malloc>
 1ec:	mov	x23, x0
 1f0:	cbnz	x0, 84 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x84>
 1f4:	mov	x23, #0x0                   	// #0
 1f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
 1fc:	mov	w1, #0x1                   	// #1
 200:	add	x0, x0, #0x0
 204:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 208:	b	84 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x84>
 20c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm>
 210:	mov	w1, #0x1                   	// #1
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 21c:	b	30 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x30>
 220:	mov	x1, x23
 224:	nop
 228:	ldr	x2, [x0]
 22c:	str	xzr, [x0], #8
 230:	str	x2, [x1], #8
 234:	cmp	x21, x0
 238:	b.ne	228 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x228>  // b.any
 23c:	b	104 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x104>
 240:	ldp	x25, x26, [sp, #64]
 244:	b	19c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_3mca11InstructionESt14default_deleteIS3_EELb0EE4growEm+0x19c>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x6c>  // b.none
  18:	mov	x20, x1
  1c:	ldr	w1, [x0, #8]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	w3, w1
  28:	ldr	w22, [x20, #8]
  2c:	str	x23, [sp, #48]
  30:	cmp	w22, w1
  34:	mov	w23, w22
  38:	b.hi	7c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x7c>  // b.pmore
  3c:	cbz	x23, 60 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x60>
  40:	mov	w2, #0x30                  	// #48
  44:	ldr	x0, [x0]
  48:	umull	x2, w22, w2
  4c:	ldr	x1, [x20]
  50:	bl	0 <memmove>
  54:	ldr	w0, [x19, #12]
  58:	cmp	x23, x0
  5c:	b.hi	11c <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x11c>  // b.pmore
  60:	ldr	x23, [sp, #48]
  64:	str	w22, [x19, #8]
  68:	ldp	x21, x22, [sp, #32]
  6c:	mov	x0, x19
  70:	ldp	x19, x20, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	ldr	w2, [x0, #12]
  80:	cmp	x23, x2
  84:	b.hi	f4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xf4>  // b.pmore
  88:	mov	w2, #0x30                  	// #48
  8c:	ldr	x0, [x0]
  90:	umull	x21, w1, w2
  94:	ldr	x4, [x20]
  98:	cbz	x3, d0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xd0>
  9c:	mov	x2, x21
  a0:	mov	x1, x4
  a4:	bl	0 <memmove>
  a8:	ldr	w2, [x20, #8]
  ac:	ldr	x0, [x19]
  b0:	ldr	x3, [x20]
  b4:	add	x2, x2, x2, lsl #1
  b8:	add	x1, x3, x21
  bc:	lsl	x2, x2, #4
  c0:	add	x3, x3, x2
  c4:	cmp	x1, x3
  c8:	b.ne	e4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xe4>  // b.any
  cc:	b	54 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x54>
  d0:	umull	x2, w22, w2
  d4:	add	x1, x4, x21
  d8:	add	x4, x4, x2
  dc:	cmp	x1, x4
  e0:	b.eq	60 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x60>  // b.none
  e4:	sub	x2, x2, x21
  e8:	add	x0, x0, x21
  ec:	bl	0 <memcpy>
  f0:	b	54 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0x54>
  f4:	str	wzr, [x0, #8]
  f8:	mov	x2, x23
  fc:	add	x1, x0, #0x10
 100:	mov	x3, #0x30                  	// #48
 104:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 108:	mov	x21, #0x0                   	// #0
 10c:	ldr	w2, [x20, #8]
 110:	ldr	x0, [x19]
 114:	ldr	x3, [x20]
 118:	b	b4 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_+0xb4>
 11c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 120:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 124:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca9ReadStateEEaSERKS3_>
 128:	add	x3, x3, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w3, [x1, #8]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x4, [x1, #-16]
  a4:	str	x4, [x2]
  a8:	str	w3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_3mca9ReadStateEiELb0EE4growEm+0x28>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	7c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x7c>  // b.none
  18:	ldr	w4, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x4, w21, uxtw
  30:	b.cc	8c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x8c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 74 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x74>
  38:	ldr	x2, [x1]
  3c:	ldr	x0, [x0]
  40:	add	x1, x2, x22, lsl #4
  44:	nop
  48:	ldr	w3, [x2, #8]
  4c:	add	x2, x2, #0x10
  50:	ldur	x4, [x2, #-16]
  54:	str	x4, [x0]
  58:	str	w3, [x0, #8]
  5c:	cmp	x2, x1
  60:	add	x0, x0, #0x10
  64:	b.ne	48 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x48>  // b.any
  68:	ldr	w0, [x19, #12]
  6c:	cmp	x22, x0
  70:	b.hi	150 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x150>  // b.pmore
  74:	str	w21, [x19, #8]
  78:	ldp	x21, x22, [sp, #32]
  7c:	mov	x0, x19
  80:	ldp	x19, x20, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret
  8c:	ldr	w1, [x0, #12]
  90:	cmp	x22, x1
  94:	b.hi	11c <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x11c>  // b.pmore
  98:	ldr	x3, [x0]
  9c:	ldr	x2, [x20]
  a0:	cbz	x4, f4 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf4>
  a4:	lsl	x4, x4, #4
  a8:	add	x5, x2, x4
  ac:	nop
  b0:	ldr	w0, [x2, #8]
  b4:	add	x2, x2, #0x10
  b8:	ldur	x1, [x2, #-16]
  bc:	str	x1, [x3]
  c0:	str	w0, [x3, #8]
  c4:	cmp	x2, x5
  c8:	add	x3, x3, #0x10
  cc:	b.ne	b0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xb0>  // b.any
  d0:	ldr	x0, [x20]
  d4:	ldr	w5, [x20, #8]
  d8:	ldr	x3, [x19]
  dc:	add	x2, x0, x4
  e0:	add	x5, x0, x5, lsl #4
  e4:	add	x3, x3, x4
  e8:	cmp	x2, x5
  ec:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
  f0:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
  f4:	add	x5, x2, x22, lsl #4
  f8:	ldr	w0, [x2, #8]
  fc:	add	x2, x2, #0x10
 100:	ldur	x4, [x2, #-16]
 104:	str	x4, [x3]
 108:	str	w0, [x3, #8]
 10c:	cmp	x2, x5
 110:	add	x3, x3, #0x10
 114:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 118:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 11c:	str	wzr, [x0, #8]
 120:	mov	x1, x22
 124:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 128:	ldr	x0, [x20]
 12c:	mov	x4, #0x0                   	// #0
 130:	ldr	w5, [x20, #8]
 134:	ldr	x3, [x19]
 138:	add	x2, x0, x4
 13c:	add	x5, x0, x5, lsl #4
 140:	add	x3, x3, x4
 144:	cmp	x2, x5
 148:	b.ne	f8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0xf8>  // b.any
 14c:	b	68 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_+0x68>
 150:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 154:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 158:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_3mca9ReadStateEiEEaSERKS6_>
 15c:	add	x3, x3, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x0, x0, #0x0
 168:	mov	w2, #0x43                  	// #67
 16c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x0
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	stp	x23, x24, [sp, #48]
  20:	cmp	x1, x0
  24:	str	x1, [sp, #88]
  28:	b.hi	200 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x200>  // b.pmore
  2c:	ldr	w0, [x22, #12]
  30:	mov	x2, #0xffffffff            	// #4294967295
  34:	str	x2, [sp, #104]
  38:	add	x0, x0, #0x2
  3c:	orr	x0, x0, x0, lsr #1
  40:	orr	x0, x0, x0, lsr #2
  44:	orr	x0, x0, x0, lsr #4
  48:	orr	x0, x0, x0, lsr #8
  4c:	orr	x1, x0, x0, lsr #16
  50:	orr	x0, x1, x0, lsr #32
  54:	add	x0, x0, #0x1
  58:	cmp	x0, x19
  5c:	csel	x1, x0, x19, cs  // cs = hs, nlast
  60:	cmp	x1, x2
  64:	b.hi	1cc <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1cc>  // b.pmore
  68:	add	x0, x1, x1, lsl #4
  6c:	mov	w24, w1
  70:	str	x1, [sp, #96]
  74:	lsl	x0, x0, #3
  78:	bl	0 <malloc>
  7c:	mov	x23, x0
  80:	cbz	x0, 1e8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1e8>
  84:	ldr	w21, [x22, #8]
  88:	mov	w0, #0x88                  	// #136
  8c:	ldr	x20, [x22]
  90:	umaddl	x21, w21, w0, x20
  94:	cmp	x20, x21
  98:	b.eq	188 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x188>  // b.none
  9c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
  a0:	mov	x19, x23
  a4:	str	d8, [sp, #64]
  a8:	ldr	d8, [x0]
  ac:	b	c0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc0>
  b0:	add	x20, x20, #0x88
  b4:	add	x19, x19, #0x88
  b8:	cmp	x21, x20
  bc:	b.eq	148 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x148>  // b.none
  c0:	ldr	w0, [x20, #8]
  c4:	add	x1, x19, #0x48
  c8:	ldrb	w3, [x20, #20]
  cc:	ldrh	w4, [x20, #12]
  d0:	ldr	x2, [x20]
  d4:	ldur	q0, [x20, #24]
  d8:	str	w0, [x19, #8]
  dc:	ldr	w0, [x20, #16]
  e0:	strb	w3, [x19, #20]
  e4:	str	w0, [x19, #16]
  e8:	ldrb	w0, [x20, #21]
  ec:	strb	w0, [x19, #21]
  f0:	ldr	w3, [x20, #40]
  f4:	ldrb	w0, [x20, #22]
  f8:	strh	w4, [x19, #12]
  fc:	str	w3, [x19, #40]
 100:	str	x2, [x19]
 104:	ldur	x2, [x20, #44]
 108:	stur	x2, [x19, #44]
 10c:	strb	w0, [x19, #22]
 110:	ldr	w0, [x20, #52]
 114:	str	w0, [x19, #52]
 118:	str	d8, [x19, #64]
 11c:	ldr	w0, [x20, #64]
 120:	str	x1, [x19, #56]
 124:	stur	q0, [x19, #24]
 128:	cbz	w0, b0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xb0>
 12c:	add	x1, x20, #0x38
 130:	add	x0, x19, #0x38
 134:	add	x20, x20, #0x88
 138:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 13c:	add	x19, x19, #0x88
 140:	cmp	x21, x20
 144:	b.ne	c0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0xc0>  // b.any
 148:	ldr	w21, [x22, #8]
 14c:	mov	w0, #0x88                  	// #136
 150:	ldr	x19, [x22]
 154:	umaddl	x21, w21, w0, x19
 158:	cmp	x19, x21
 15c:	b.eq	214 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x214>  // b.none
 160:	ldur	x0, [x21, #-80]
 164:	sub	x21, x21, #0x88
 168:	add	x1, x21, #0x48
 16c:	cmp	x0, x1
 170:	b.eq	1b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x1b8>  // b.none
 174:	bl	0 <free>
 178:	cmp	x21, x19
 17c:	b.ne	160 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x160>  // b.any
 180:	ldr	x21, [x22]
 184:	ldr	d8, [sp, #64]
 188:	add	x0, x22, #0x10
 18c:	cmp	x21, x0
 190:	b.eq	19c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x19c>  // b.none
 194:	mov	x0, x21
 198:	bl	0 <free>
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	str	x23, [x22]
 1a4:	str	w24, [x22, #12]
 1a8:	ldp	x21, x22, [sp, #32]
 1ac:	ldp	x23, x24, [sp, #48]
 1b0:	ldp	x29, x30, [sp], #112
 1b4:	ret
 1b8:	cmp	x21, x19
 1bc:	b.ne	160 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x160>  // b.any
 1c0:	ldr	x21, [x22]
 1c4:	ldr	d8, [sp, #64]
 1c8:	b	188 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x188>
 1cc:	mov	w0, #0xffffff78            	// #-136
 1d0:	mov	w24, #0xffffffff            	// #-1
 1d4:	movk	x0, #0x87, lsl #32
 1d8:	str	x2, [sp, #96]
 1dc:	bl	0 <malloc>
 1e0:	mov	x23, x0
 1e4:	cbnz	x0, 84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x84>
 1e8:	mov	x23, #0x0                   	// #0
 1ec:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 1f0:	mov	w1, #0x1                   	// #1
 1f4:	add	x0, x0, #0x0
 1f8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 1fc:	b	84 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x84>
 200:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm>
 204:	mov	w1, #0x1                   	// #1
 208:	add	x0, x0, #0x0
 20c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 210:	b	2c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x2c>
 214:	ldr	d8, [sp, #64]
 218:	b	188 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca10WriteStateELb0EE4growEm+0x188>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	b.eq	180 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x180>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	ldr	w22, [x1, #8]
  20:	stp	x19, x20, [sp, #16]
  24:	mov	w0, w2
  28:	cmp	w22, w2
  2c:	stp	x23, x24, [sp, #48]
  30:	mov	w23, w22
  34:	stp	x25, x26, [sp, #64]
  38:	mov	x26, x1
  3c:	ldr	x19, [x21]
  40:	b.ls	190 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x190>  // b.plast
  44:	ldr	w1, [x21, #12]
  48:	cmp	x23, x1
  4c:	b.ls	29c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x29c>  // b.plast
  50:	mov	w20, #0x88                  	// #136
  54:	umaddl	x20, w2, w20, x19
  58:	cmp	x19, x20
  5c:	b.eq	80 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x80>  // b.none
  60:	ldur	x0, [x20, #-80]
  64:	sub	x20, x20, #0x88
  68:	add	x1, x20, #0x48
  6c:	cmp	x0, x1
  70:	b.eq	58 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x58>  // b.none
  74:	bl	0 <free>
  78:	cmp	x19, x20
  7c:	b.ne	60 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x60>  // b.any
  80:	str	wzr, [x21, #8]
  84:	mov	x1, x23
  88:	mov	x0, x21
  8c:	mov	x25, #0x0                   	// #0
  90:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  94:	ldr	w24, [x26, #8]
  98:	mov	w1, #0x88                  	// #136
  9c:	ldr	x0, [x26]
  a0:	ldr	x19, [x21]
  a4:	add	x20, x0, x25
  a8:	umaddl	x24, w24, w1, x0
  ac:	add	x19, x19, x25
  b0:	cmp	x20, x24
  b4:	b.eq	164 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x164>  // b.none
  b8:	str	d8, [sp, #80]
  bc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
  c0:	ldr	d8, [x0]
  c4:	b	d8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xd8>
  c8:	add	x20, x20, #0x88
  cc:	add	x19, x19, #0x88
  d0:	cmp	x20, x24
  d4:	b.eq	160 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x160>  // b.none
  d8:	ldr	w1, [x20, #8]
  dc:	add	x0, x19, #0x48
  e0:	ldrb	w3, [x20, #20]
  e4:	ldrh	w4, [x20, #12]
  e8:	ldr	x2, [x20]
  ec:	ldur	q0, [x20, #24]
  f0:	str	w1, [x19, #8]
  f4:	ldr	w1, [x20, #16]
  f8:	strb	w3, [x19, #20]
  fc:	str	w1, [x19, #16]
 100:	ldrb	w1, [x20, #21]
 104:	strb	w1, [x19, #21]
 108:	ldr	w3, [x20, #40]
 10c:	ldrb	w1, [x20, #22]
 110:	strh	w4, [x19, #12]
 114:	str	w3, [x19, #40]
 118:	str	x2, [x19]
 11c:	ldur	x2, [x20, #44]
 120:	stur	x2, [x19, #44]
 124:	strb	w1, [x19, #22]
 128:	ldr	w1, [x20, #52]
 12c:	str	w1, [x19, #52]
 130:	str	d8, [x19, #64]
 134:	ldr	w1, [x20, #64]
 138:	str	x0, [x19, #56]
 13c:	stur	q0, [x19, #24]
 140:	cbz	w1, c8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xc8>
 144:	add	x1, x20, #0x38
 148:	add	x0, x19, #0x38
 14c:	add	x20, x20, #0x88
 150:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 154:	add	x19, x19, #0x88
 158:	cmp	x20, x24
 15c:	b.ne	d8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xd8>  // b.any
 160:	ldr	d8, [sp, #80]
 164:	ldr	w0, [x21, #12]
 168:	cmp	x23, x0
 16c:	b.hi	348 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x348>  // b.pmore
 170:	ldp	x19, x20, [sp, #16]
 174:	ldp	x23, x24, [sp, #48]
 178:	ldp	x25, x26, [sp, #64]
 17c:	str	w22, [x21, #8]
 180:	mov	x0, x21
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x29, x30, [sp], #96
 18c:	ret
 190:	cbz	x23, 288 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x288>
 194:	mov	w25, #0x88                  	// #136
 198:	add	x24, x19, #0x38
 19c:	ldr	x20, [x1]
 1a0:	umull	x25, w22, w25
 1a4:	add	x20, x20, #0x38
 1a8:	add	x26, x20, x25
 1ac:	nop
 1b0:	ldur	w0, [x20, #-48]
 1b4:	mov	x1, x20
 1b8:	ldurb	w5, [x20, #-36]
 1bc:	add	x20, x20, #0x88
 1c0:	ldurh	w2, [x20, #-180]
 1c4:	ldur	x4, [x20, #-192]
 1c8:	stur	w0, [x24, #-48]
 1cc:	mov	x0, x24
 1d0:	add	x24, x24, #0x88
 1d4:	ldur	w3, [x20, #-176]
 1d8:	sturb	w5, [x24, #-172]
 1dc:	stur	w3, [x24, #-176]
 1e0:	ldurb	w3, [x20, #-171]
 1e4:	sturb	w3, [x24, #-171]
 1e8:	ldur	x3, [x20, #-168]
 1ec:	ldur	w5, [x20, #-152]
 1f0:	sturh	w2, [x24, #-180]
 1f4:	ldurb	w2, [x20, #-170]
 1f8:	stur	x3, [x24, #-168]
 1fc:	ldur	x3, [x20, #-160]
 200:	stur	w5, [x24, #-152]
 204:	stur	x4, [x24, #-192]
 208:	ldur	x4, [x20, #-148]
 20c:	stur	x4, [x24, #-148]
 210:	sturb	w2, [x24, #-170]
 214:	ldur	w2, [x20, #-140]
 218:	stur	x3, [x24, #-160]
 21c:	stur	w2, [x24, #-140]
 220:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 224:	cmp	x26, x20
 228:	b.ne	1b0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x1b0>  // b.any
 22c:	ldr	w20, [x21, #8]
 230:	mov	w1, #0x88                  	// #136
 234:	ldr	x0, [x21]
 238:	add	x19, x19, x25
 23c:	umaddl	x20, w20, w1, x0
 240:	cmp	x19, x20
 244:	b.eq	164 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x164>  // b.none
 248:	ldur	x0, [x20, #-80]
 24c:	sub	x20, x20, #0x88
 250:	add	x1, x20, #0x48
 254:	cmp	x0, x1
 258:	b.eq	27c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x27c>  // b.none
 25c:	bl	0 <free>
 260:	cmp	x20, x19
 264:	b.eq	164 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x164>  // b.none
 268:	ldur	x0, [x20, #-80]
 26c:	sub	x20, x20, #0x88
 270:	add	x1, x20, #0x48
 274:	cmp	x0, x1
 278:	b.ne	25c <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x25c>  // b.any
 27c:	cmp	x20, x19
 280:	b.ne	248 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x248>  // b.any
 284:	b	164 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x164>
 288:	mov	w20, #0x88                  	// #136
 28c:	umaddl	x20, w2, w20, x19
 290:	cmp	x19, x20
 294:	b.ne	248 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x248>  // b.any
 298:	b	170 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x170>
 29c:	ldr	x20, [x26]
 2a0:	cbz	x0, 338 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x338>
 2a4:	mov	w25, #0x88                  	// #136
 2a8:	add	x19, x19, #0x38
 2ac:	add	x24, x20, #0x38
 2b0:	umull	x25, w2, w25
 2b4:	add	x20, x19, x25
 2b8:	ldur	w0, [x24, #-48]
 2bc:	mov	x1, x24
 2c0:	ldurb	w5, [x24, #-36]
 2c4:	add	x24, x24, #0x88
 2c8:	ldurh	w2, [x24, #-180]
 2cc:	ldur	x4, [x24, #-192]
 2d0:	stur	w0, [x19, #-48]
 2d4:	mov	x0, x19
 2d8:	add	x19, x19, #0x88
 2dc:	ldur	w3, [x24, #-176]
 2e0:	sturb	w5, [x19, #-172]
 2e4:	stur	w3, [x19, #-176]
 2e8:	ldurb	w3, [x24, #-171]
 2ec:	sturb	w3, [x19, #-171]
 2f0:	ldur	x3, [x24, #-168]
 2f4:	ldur	w5, [x24, #-152]
 2f8:	sturh	w2, [x19, #-180]
 2fc:	ldurb	w2, [x24, #-170]
 300:	stur	x3, [x19, #-168]
 304:	ldur	x3, [x24, #-160]
 308:	stur	w5, [x19, #-152]
 30c:	stur	x4, [x19, #-192]
 310:	ldur	x4, [x24, #-148]
 314:	stur	x4, [x19, #-148]
 318:	sturb	w2, [x19, #-170]
 31c:	ldur	w2, [x24, #-140]
 320:	stur	x3, [x19, #-160]
 324:	stur	w2, [x19, #-140]
 328:	bl	0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 32c:	cmp	x19, x20
 330:	b.ne	2b8 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x2b8>  // b.any
 334:	b	94 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0x94>
 338:	mov	w24, #0x88                  	// #136
 33c:	str	d8, [sp, #80]
 340:	umaddl	x24, w22, w24, x20
 344:	b	bc <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_+0xbc>
 348:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 34c:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 350:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_3mca10WriteStateEEaSERKS3_>
 354:	add	x3, x3, #0x0
 358:	add	x1, x1, #0x0
 35c:	add	x0, x0, #0x0
 360:	mov	w2, #0x43                  	// #67
 364:	str	d8, [sp, #80]
 368:	bl	0 <__assert_fail>

ExecuteStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>:
       0:	sub	sp, sp, #0x230
       4:	stp	x29, x30, [sp]
       8:	mov	x29, sp
       c:	stp	x19, x20, [sp, #16]
      10:	mov	x19, x0
      14:	ldrb	w0, [x0, #80]
      18:	stp	x21, x22, [sp, #32]
      1c:	mov	x21, x8
      20:	cbz	w0, 2e0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2e0>
      24:	ldr	x0, [x19, #64]
      28:	ldrb	w1, [x0, #140]
      2c:	cbnz	w1, 3c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x3c>
      30:	ldp	w2, w1, [x19, #72]
      34:	cmp	w2, w1
      38:	b.ls	2e0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2e0>  // b.plast
      3c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
      40:	stp	x23, x24, [sp, #48]
      44:	add	x23, sp, #0x80
      48:	ldr	d0, [x1]
      4c:	add	x2, x23, #0x10
      50:	mov	x1, x23
      54:	add	x22, sp, #0x1a0
      58:	stp	x25, x26, [sp, #64]
      5c:	str	x2, [sp, #128]
      60:	str	d0, [sp, #136]
      64:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeResourcePressureERNS_15SmallVectorImplINS0_7InstRefEEE>
      68:	mov	x25, x0
      6c:	cbnz	x0, 238 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x238>
      70:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
      74:	add	x24, sp, #0x110
      78:	ldr	x0, [x19, #64]
      7c:	add	x4, x24, #0x10
      80:	ldr	d0, [x1]
      84:	add	x3, x22, #0x10
      88:	mov	x1, x24
      8c:	mov	x2, x22
      90:	str	x4, [sp, #272]
      94:	str	d0, [sp, #280]
      98:	str	x3, [sp, #416]
      9c:	str	d0, [sp, #424]
      a0:	bl	0 <_ZN4llvm3mca9Scheduler23analyzeDataDependenciesERNS_15SmallVectorImplINS0_7InstRefEEES5_>
      a4:	ldr	w0, [sp, #280]
      a8:	cbz	w0, 124 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x124>
      ac:	adrp	x1, 0 <_ZN4llvm9DebugFlagE>
      b0:	ldr	x1, [x1]
      b4:	ldrb	w1, [x1]
      b8:	str	x27, [sp, #80]
      bc:	cbnz	w1, 400 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x400>
      c0:	ldr	x20, [x19, #40]
      c4:	mov	w0, w0
      c8:	ldr	x1, [sp, #272]
      cc:	mov	w2, #0x2                   	// #2
      d0:	str	w2, [sp, #96]
      d4:	add	x26, x19, #0x18
      d8:	stp	x1, x0, [sp, #104]
      dc:	adrp	x25, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
      e0:	add	x27, sp, #0x60
      e4:	str	xzr, [sp, #120]
      e8:	add	x25, x25, #0x0
      ec:	cmp	x20, x26
      f0:	b.eq	120 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x120>  // b.none
      f4:	nop
      f8:	ldr	x3, [x20, #32]
      fc:	mov	x0, x20
     100:	ldr	x1, [x3]
     104:	ldr	x2, [x1, #32]
     108:	cmp	x2, x25
     10c:	b.ne	300 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x300>  // b.any
     110:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     114:	mov	x20, x0
     118:	cmp	x26, x0
     11c:	b.ne	f8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf8>  // b.any
     120:	ldr	x27, [sp, #80]
     124:	ldr	w1, [sp, #424]
     128:	cbnz	w1, 190 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x190>
     12c:	ldr	x0, [sp, #416]
     130:	mov	x1, #0x1                   	// #1
     134:	str	x1, [x21]
     138:	add	x22, x22, #0x10
     13c:	cmp	x0, x22
     140:	b.eq	148 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x148>  // b.none
     144:	bl	0 <free>
     148:	ldr	x0, [sp, #272]
     14c:	add	x24, x24, #0x10
     150:	cmp	x0, x24
     154:	b.eq	15c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x15c>  // b.none
     158:	bl	0 <free>
     15c:	ldr	x0, [sp, #128]
     160:	add	x23, x23, #0x10
     164:	cmp	x0, x23
     168:	b.eq	328 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x328>  // b.none
     16c:	bl	0 <free>
     170:	mov	x0, x21
     174:	ldp	x29, x30, [sp]
     178:	ldp	x19, x20, [sp, #16]
     17c:	ldp	x21, x22, [sp, #32]
     180:	ldp	x23, x24, [sp, #48]
     184:	ldp	x25, x26, [sp, #64]
     188:	add	sp, sp, #0x230
     18c:	ret
     190:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     194:	ldr	x0, [x0]
     198:	ldrb	w0, [x0]
     19c:	cbnz	w0, 41c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x41c>
     1a0:	ldr	x20, [x19, #40]
     1a4:	mov	w1, w1
     1a8:	ldr	x0, [sp, #416]
     1ac:	mov	w2, #0x3                   	// #3
     1b0:	str	w2, [sp, #96]
     1b4:	add	x19, x19, #0x18
     1b8:	stp	x0, x1, [sp, #104]
     1bc:	cmp	x20, x19
     1c0:	str	xzr, [sp, #120]
     1c4:	b.eq	130 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x130>  // b.none
     1c8:	adrp	x25, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     1cc:	add	x26, sp, #0x60
     1d0:	add	x25, x25, #0x0
     1d4:	ldr	x3, [x20, #32]
     1d8:	mov	x0, x20
     1dc:	ldr	x1, [x3]
     1e0:	ldr	x2, [x1, #32]
     1e4:	cmp	x2, x25
     1e8:	b.ne	214 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x214>  // b.any
     1ec:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     1f0:	mov	x20, x0
     1f4:	cmp	x19, x0
     1f8:	b.eq	12c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x12c>  // b.none
     1fc:	ldr	x3, [x20, #32]
     200:	mov	x0, x20
     204:	ldr	x1, [x3]
     208:	ldr	x2, [x1, #32]
     20c:	cmp	x2, x25
     210:	b.eq	1ec <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1ec>  // b.none
     214:	mov	x1, x26
     218:	mov	x0, x3
     21c:	blr	x2
     220:	mov	x0, x20
     224:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     228:	mov	x20, x0
     22c:	cmp	x0, x19
     230:	b.ne	1d4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1d4>  // b.any
     234:	b	12c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x12c>
     238:	adrp	x0, 0 <_ZN4llvm9DebugFlagE>
     23c:	add	x22, sp, #0x1a0
     240:	ldr	x0, [x0]
     244:	ldrb	w0, [x0]
     248:	cbnz	w0, 348 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x348>
     24c:	ldr	w0, [sp, #136]
     250:	mov	w2, #0x1                   	// #1
     254:	ldr	x20, [x19, #40]
     258:	str	w2, [sp, #416]
     25c:	ldr	x1, [sp, #128]
     260:	stp	x1, x0, [sp, #424]
     264:	add	x24, x19, #0x18
     268:	str	x25, [sp, #440]
     26c:	cmp	x20, x24
     270:	adrp	x25, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     274:	add	x25, x25, #0x0
     278:	b.eq	70 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x70>  // b.none
     27c:	ldr	x3, [x20, #32]
     280:	mov	x0, x20
     284:	ldr	x1, [x3]
     288:	ldr	x2, [x1, #32]
     28c:	cmp	x2, x25
     290:	b.ne	2bc <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x2bc>  // b.any
     294:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     298:	mov	x20, x0
     29c:	cmp	x24, x0
     2a0:	b.eq	70 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x70>  // b.none
     2a4:	ldr	x3, [x20, #32]
     2a8:	mov	x0, x20
     2ac:	ldr	x1, [x3]
     2b0:	ldr	x2, [x1, #32]
     2b4:	cmp	x2, x25
     2b8:	b.eq	294 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x294>  // b.none
     2bc:	mov	x1, x22
     2c0:	mov	x0, x3
     2c4:	blr	x2
     2c8:	mov	x0, x20
     2cc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     2d0:	mov	x20, x0
     2d4:	cmp	x0, x24
     2d8:	b.ne	27c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x27c>  // b.any
     2dc:	b	70 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x70>
     2e0:	mov	x0, #0x1                   	// #1
     2e4:	str	x0, [x21]
     2e8:	mov	x0, x21
     2ec:	ldp	x29, x30, [sp]
     2f0:	ldp	x19, x20, [sp, #16]
     2f4:	ldp	x21, x22, [sp, #32]
     2f8:	add	sp, sp, #0x230
     2fc:	ret
     300:	mov	x1, x27
     304:	mov	x0, x3
     308:	blr	x2
     30c:	mov	x0, x20
     310:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     314:	mov	x20, x0
     318:	cmp	x0, x26
     31c:	b.ne	f8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xf8>  // b.any
     320:	ldr	x27, [sp, #80]
     324:	b	124 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x124>
     328:	mov	x0, x21
     32c:	ldp	x29, x30, [sp]
     330:	ldp	x19, x20, [sp, #16]
     334:	ldp	x21, x22, [sp, #32]
     338:	ldp	x23, x24, [sp, #48]
     33c:	ldp	x25, x26, [sp, #64]
     340:	add	sp, sp, #0x230
     344:	ret
     348:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     34c:	add	x22, sp, #0x1a0
     350:	add	x0, x0, #0x0
     354:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     358:	tst	w0, #0xff
     35c:	b.eq	24c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x24c>  // b.none
     360:	bl	0 <_ZN4llvm4dbgsEv>
     364:	mov	x1, x0
     368:	ldp	x2, x3, [x0, #16]
     36c:	sub	x2, x2, x3
     370:	cmp	x2, #0x45
     374:	b.ls	51c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x51c>  // b.plast
     378:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     37c:	add	x0, x0, #0x0
     380:	ldp	x4, x5, [x0, #48]
     384:	stp	x4, x5, [x3, #48]
     388:	ldp	x4, x5, [x0]
     38c:	stp	x4, x5, [x3]
     390:	ldp	x4, x5, [x0, #16]
     394:	stp	x4, x5, [x3, #16]
     398:	ldp	x4, x5, [x0, #32]
     39c:	stp	x4, x5, [x3, #32]
     3a0:	ldur	x0, [x0, #62]
     3a4:	stur	x0, [x3, #62]
     3a8:	ldr	x0, [x1, #24]
     3ac:	add	x0, x0, #0x46
     3b0:	str	x0, [x1, #24]
     3b4:	mov	w2, #0x1                   	// #1
     3b8:	mov	w3, #0x10                  	// #16
     3bc:	add	x22, sp, #0x1a0
     3c0:	mov	x0, x1
     3c4:	mov	x1, x22
     3c8:	stp	x25, xzr, [sp, #416]
     3cc:	str	w3, [sp, #432]
     3d0:	strh	w2, [sp, #436]
     3d4:	strb	w2, [sp, #438]
     3d8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
     3dc:	ldp	x3, x2, [x0, #16]
     3e0:	mov	x1, x0
     3e4:	cmp	x2, x3
     3e8:	b.cs	510 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x510>  // b.hs, b.nlast
     3ec:	add	x0, x2, #0x1
     3f0:	str	x0, [x1, #24]
     3f4:	mov	w0, #0xa                   	// #10
     3f8:	strb	w0, [x2]
     3fc:	b	24c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x24c>
     400:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     404:	add	x0, x0, #0x0
     408:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     40c:	tst	w0, #0xff
     410:	b.ne	48c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x48c>  // b.any
     414:	ldr	w0, [sp, #280]
     418:	b	c0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xc0>
     41c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     420:	add	x0, x0, #0x0
     424:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     428:	tst	w0, #0xff
     42c:	b.ne	438 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x438>  // b.any
     430:	ldr	w1, [sp, #424]
     434:	b	1a0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a0>
     438:	bl	0 <_ZN4llvm4dbgsEv>
     43c:	mov	x1, x0
     440:	ldp	x2, x3, [x0, #16]
     444:	sub	x2, x2, x3
     448:	cmp	x2, #0x31
     44c:	b.ls	4e0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x4e0>  // b.plast
     450:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     454:	add	x0, x0, #0x0
     458:	ldp	x4, x5, [x0]
     45c:	stp	x4, x5, [x3]
     460:	ldrh	w2, [x0, #48]
     464:	ldp	x4, x5, [x0, #16]
     468:	stp	x4, x5, [x3, #16]
     46c:	ldp	x4, x5, [x0, #32]
     470:	stp	x4, x5, [x3, #32]
     474:	strh	w2, [x3, #48]
     478:	ldr	x0, [x1, #24]
     47c:	add	x0, x0, #0x32
     480:	str	x0, [x1, #24]
     484:	ldr	w1, [sp, #424]
     488:	b	1a0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a0>
     48c:	bl	0 <_ZN4llvm4dbgsEv>
     490:	mov	x1, x0
     494:	ldp	x2, x3, [x0, #16]
     498:	sub	x2, x2, x3
     49c:	cmp	x2, #0x33
     4a0:	b.ls	4f8 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x4f8>  // b.plast
     4a4:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4a8:	add	x0, x0, #0x0
     4ac:	ldp	x4, x5, [x0]
     4b0:	stp	x4, x5, [x3]
     4b4:	ldr	w2, [x0, #48]
     4b8:	ldp	x4, x5, [x0, #16]
     4bc:	stp	x4, x5, [x3, #16]
     4c0:	ldp	x4, x5, [x0, #32]
     4c4:	stp	x4, x5, [x3, #32]
     4c8:	str	w2, [x3, #48]
     4cc:	ldr	x0, [x1, #24]
     4d0:	add	x0, x0, #0x34
     4d4:	str	x0, [x1, #24]
     4d8:	ldr	w0, [sp, #280]
     4dc:	b	c0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xc0>
     4e0:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4e4:	mov	x2, #0x32                  	// #50
     4e8:	add	x1, x1, #0x0
     4ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4f0:	ldr	w1, [sp, #424]
     4f4:	b	1a0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x1a0>
     4f8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     4fc:	mov	x2, #0x34                  	// #52
     500:	add	x1, x1, #0x0
     504:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     508:	ldr	w0, [sp, #280]
     50c:	b	c0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0xc0>
     510:	mov	w1, #0xa                   	// #10
     514:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     518:	b	24c <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x24c>
     51c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     520:	add	x1, x1, #0x0
     524:	mov	x2, #0x46                  	// #70
     528:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     52c:	mov	x1, x0
     530:	b	3b4 <_ZN4llvm3mca12ExecuteStage8cycleEndEv+0x3b4>
     534:	nop

0000000000000538 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>:
     538:	cmp	w0, #0x4
     53c:	b.hi	550 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE+0x18>  // b.pmore
     540:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     544:	add	x1, x1, #0x0
     548:	ldr	w0, [x1, w0, uxtw #2]
     54c:	ret
     550:	stp	x29, x30, [sp, #-16]!
     554:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     558:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     55c:	mov	x29, sp
     560:	add	x1, x1, #0x0
     564:	add	x0, x0, #0x0
     568:	mov	w2, #0x28                  	// #40
     56c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000570 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>:
     570:	stp	x29, x30, [sp, #-64]!
     574:	mov	x29, sp
     578:	stp	x19, x20, [sp, #16]
     57c:	mov	x20, x0
     580:	ldr	x0, [x0, #64]
     584:	stp	x21, x22, [sp, #32]
     588:	mov	x21, x1
     58c:	bl	0 <_ZN4llvm3mca9Scheduler11isAvailableERKNS0_7InstRefE>
     590:	cbnz	w0, 5a8 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x38>
     594:	mov	w0, #0x1                   	// #1
     598:	ldp	x19, x20, [sp, #16]
     59c:	ldp	x21, x22, [sp, #32]
     5a0:	ldp	x29, x30, [sp], #64
     5a4:	ret
     5a8:	bl	538 <_ZN4llvm3mca18toHWStallEventTypeENS0_9Scheduler6StatusE>
     5ac:	str	w0, [sp, #48]
     5b0:	ldr	x19, [x20, #40]
     5b4:	str	x21, [sp, #56]
     5b8:	add	x20, x20, #0x18
     5bc:	cmp	x19, x20
     5c0:	b.eq	5f8 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x88>  // b.none
     5c4:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     5c8:	add	x22, sp, #0x30
     5cc:	add	x21, x21, #0x0
     5d0:	ldr	x3, [x19, #32]
     5d4:	mov	x0, x19
     5d8:	ldr	x1, [x3]
     5dc:	ldr	x2, [x1, #24]
     5e0:	cmp	x2, x21
     5e4:	b.ne	60c <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x9c>  // b.any
     5e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     5ec:	mov	x19, x0
     5f0:	cmp	x20, x0
     5f4:	b.ne	5d0 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x60>  // b.any
     5f8:	mov	w0, #0x0                   	// #0
     5fc:	ldp	x19, x20, [sp, #16]
     600:	ldp	x21, x22, [sp, #32]
     604:	ldp	x29, x30, [sp], #64
     608:	ret
     60c:	mov	x1, x22
     610:	mov	x0, x3
     614:	blr	x2
     618:	mov	x0, x19
     61c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     620:	mov	x19, x0
     624:	cmp	x20, x0
     628:	b.ne	5d0 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x60>  // b.any
     62c:	mov	w0, #0x0                   	// #0
     630:	b	5fc <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE+0x8c>
     634:	nop

0000000000000638 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>:
     638:	stp	x29, x30, [sp, #-64]!
     63c:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     640:	mov	x29, sp
     644:	ldr	x2, [x2]
     648:	stp	x19, x20, [sp, #16]
     64c:	mov	x20, x0
     650:	stp	x21, x22, [sp, #32]
     654:	mov	x21, x1
     658:	ldrb	w0, [x2]
     65c:	cbnz	w0, 6f0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0xb8>
     660:	ldr	x19, [x20, #40]
     664:	mov	w0, #0x5                   	// #5
     668:	str	w0, [sp, #48]
     66c:	add	x20, x20, #0x18
     670:	str	x21, [sp, #56]
     674:	cmp	x19, x20
     678:	b.eq	6b0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x78>  // b.none
     67c:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     680:	add	x22, sp, #0x30
     684:	add	x21, x21, #0x0
     688:	ldr	x3, [x19, #32]
     68c:	mov	x0, x19
     690:	ldr	x1, [x3]
     694:	ldr	x2, [x1, #16]
     698:	cmp	x2, x21
     69c:	b.ne	6c0 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x88>  // b.any
     6a0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     6a4:	mov	x19, x0
     6a8:	cmp	x20, x0
     6ac:	b.ne	688 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x50>  // b.any
     6b0:	ldp	x19, x20, [sp, #16]
     6b4:	ldp	x21, x22, [sp, #32]
     6b8:	ldp	x29, x30, [sp], #64
     6bc:	ret
     6c0:	mov	x1, x22
     6c4:	mov	x0, x3
     6c8:	blr	x2
     6cc:	mov	x0, x19
     6d0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     6d4:	mov	x19, x0
     6d8:	cmp	x20, x0
     6dc:	b.ne	688 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x50>  // b.any
     6e0:	ldp	x19, x20, [sp, #16]
     6e4:	ldp	x21, x22, [sp, #32]
     6e8:	ldp	x29, x30, [sp], #64
     6ec:	ret
     6f0:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     6f4:	add	x0, x0, #0x0
     6f8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     6fc:	tst	w0, #0xff
     700:	b.eq	660 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x28>  // b.none
     704:	bl	0 <_ZN4llvm4dbgsEv>
     708:	mov	x19, x0
     70c:	ldp	x1, x2, [x0, #16]
     710:	sub	x1, x1, x2
     714:	cmp	x1, #0x1a
     718:	b.ls	774 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x13c>  // b.plast
     71c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     720:	add	x0, x0, #0x0
     724:	ldr	x1, [x0, #16]
     728:	str	x1, [x2, #16]
     72c:	ldp	x4, x5, [x0]
     730:	stp	x4, x5, [x2]
     734:	ldur	w0, [x0, #23]
     738:	stur	w0, [x2, #23]
     73c:	ldr	x0, [x19, #24]
     740:	add	x0, x0, #0x1b
     744:	str	x0, [x19, #24]
     748:	ldr	w1, [x21]
     74c:	mov	x0, x19
     750:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     754:	ldp	x1, x0, [x19, #16]
     758:	cmp	x0, x1
     75c:	b.cs	78c <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x154>  // b.hs, b.nlast
     760:	add	x1, x0, #0x1
     764:	str	x1, [x19, #24]
     768:	mov	w1, #0xa                   	// #10
     76c:	strb	w1, [x0]
     770:	b	660 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x28>
     774:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     778:	mov	x2, #0x1b                  	// #27
     77c:	add	x1, x1, #0x0
     780:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     784:	mov	x19, x0
     788:	b	748 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x110>
     78c:	mov	x0, x19
     790:	mov	w1, #0xa                   	// #10
     794:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     798:	b	660 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE+0x28>
     79c:	nop

00000000000007a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>:
     7a0:	stp	x29, x30, [sp, #-64]!
     7a4:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     7a8:	mov	x29, sp
     7ac:	ldr	x2, [x2]
     7b0:	stp	x19, x20, [sp, #16]
     7b4:	mov	x20, x0
     7b8:	stp	x21, x22, [sp, #32]
     7bc:	mov	x21, x1
     7c0:	ldrb	w0, [x2]
     7c4:	cbnz	w0, 858 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0xb8>
     7c8:	ldr	x19, [x20, #40]
     7cc:	mov	w0, #0x2                   	// #2
     7d0:	str	w0, [sp, #48]
     7d4:	add	x20, x20, #0x18
     7d8:	str	x21, [sp, #56]
     7dc:	cmp	x19, x20
     7e0:	b.eq	818 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x78>  // b.none
     7e4:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     7e8:	add	x22, sp, #0x30
     7ec:	add	x21, x21, #0x0
     7f0:	ldr	x3, [x19, #32]
     7f4:	mov	x0, x19
     7f8:	ldr	x1, [x3]
     7fc:	ldr	x2, [x1, #16]
     800:	cmp	x2, x21
     804:	b.ne	828 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x88>  // b.any
     808:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     80c:	mov	x19, x0
     810:	cmp	x20, x0
     814:	b.ne	7f0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x50>  // b.any
     818:	ldp	x19, x20, [sp, #16]
     81c:	ldp	x21, x22, [sp, #32]
     820:	ldp	x29, x30, [sp], #64
     824:	ret
     828:	mov	x1, x22
     82c:	mov	x0, x3
     830:	blr	x2
     834:	mov	x0, x19
     838:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     83c:	mov	x19, x0
     840:	cmp	x20, x0
     844:	b.ne	7f0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x50>  // b.any
     848:	ldp	x19, x20, [sp, #16]
     84c:	ldp	x21, x22, [sp, #32]
     850:	ldp	x29, x30, [sp], #64
     854:	ret
     858:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     85c:	add	x0, x0, #0x0
     860:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     864:	tst	w0, #0xff
     868:	b.eq	7c8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x28>  // b.none
     86c:	bl	0 <_ZN4llvm4dbgsEv>
     870:	mov	x19, x0
     874:	ldp	x1, x2, [x0, #16]
     878:	sub	x1, x1, x2
     87c:	cmp	x1, #0x19
     880:	b.ls	8dc <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x13c>  // b.plast
     884:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     888:	add	x0, x0, #0x0
     88c:	ldrh	w1, [x0, #24]
     890:	ldp	x4, x5, [x0]
     894:	stp	x4, x5, [x2]
     898:	ldr	x0, [x0, #16]
     89c:	str	x0, [x2, #16]
     8a0:	strh	w1, [x2, #24]
     8a4:	ldr	x0, [x19, #24]
     8a8:	add	x0, x0, #0x1a
     8ac:	str	x0, [x19, #24]
     8b0:	ldr	w1, [x21]
     8b4:	mov	x0, x19
     8b8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     8bc:	ldp	x1, x0, [x19, #16]
     8c0:	cmp	x0, x1
     8c4:	b.cs	8f4 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x154>  // b.hs, b.nlast
     8c8:	add	x1, x0, #0x1
     8cc:	str	x1, [x19, #24]
     8d0:	mov	w1, #0xa                   	// #10
     8d4:	strb	w1, [x0]
     8d8:	b	7c8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x28>
     8dc:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     8e0:	mov	x2, #0x1a                  	// #26
     8e4:	add	x1, x1, #0x0
     8e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8ec:	mov	x19, x0
     8f0:	b	8b0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x110>
     8f4:	mov	x0, x19
     8f8:	mov	w1, #0xa                   	// #10
     8fc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     900:	b	7c8 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE+0x28>
     904:	nop

0000000000000908 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>:
     908:	stp	x29, x30, [sp, #-64]!
     90c:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     910:	mov	x29, sp
     914:	ldr	x2, [x2]
     918:	stp	x19, x20, [sp, #16]
     91c:	mov	x20, x0
     920:	stp	x21, x22, [sp, #32]
     924:	mov	x21, x1
     928:	ldrb	w0, [x2]
     92c:	cbnz	w0, 9c0 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0xb8>
     930:	ldr	x19, [x20, #40]
     934:	mov	w0, #0x3                   	// #3
     938:	str	w0, [sp, #48]
     93c:	add	x20, x20, #0x18
     940:	str	x21, [sp, #56]
     944:	cmp	x19, x20
     948:	b.eq	980 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x78>  // b.none
     94c:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     950:	add	x22, sp, #0x30
     954:	add	x21, x21, #0x0
     958:	ldr	x3, [x19, #32]
     95c:	mov	x0, x19
     960:	ldr	x1, [x3]
     964:	ldr	x2, [x1, #16]
     968:	cmp	x2, x21
     96c:	b.ne	990 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x88>  // b.any
     970:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     974:	mov	x19, x0
     978:	cmp	x20, x0
     97c:	b.ne	958 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x50>  // b.any
     980:	ldp	x19, x20, [sp, #16]
     984:	ldp	x21, x22, [sp, #32]
     988:	ldp	x29, x30, [sp], #64
     98c:	ret
     990:	mov	x1, x22
     994:	mov	x0, x3
     998:	blr	x2
     99c:	mov	x0, x19
     9a0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     9a4:	mov	x19, x0
     9a8:	cmp	x20, x0
     9ac:	b.ne	958 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x50>  // b.any
     9b0:	ldp	x19, x20, [sp, #16]
     9b4:	ldp	x21, x22, [sp, #32]
     9b8:	ldp	x29, x30, [sp], #64
     9bc:	ret
     9c0:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     9c4:	add	x0, x0, #0x0
     9c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     9cc:	tst	w0, #0xff
     9d0:	b.eq	930 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x28>  // b.none
     9d4:	bl	0 <_ZN4llvm4dbgsEv>
     9d8:	mov	x19, x0
     9dc:	ldp	x1, x2, [x0, #16]
     9e0:	sub	x1, x1, x2
     9e4:	cmp	x1, #0x17
     9e8:	b.ls	a3c <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x134>  // b.plast
     9ec:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     9f0:	add	x0, x0, #0x0
     9f4:	ldp	x4, x5, [x0]
     9f8:	stp	x4, x5, [x2]
     9fc:	ldr	x0, [x0, #16]
     a00:	str	x0, [x2, #16]
     a04:	ldr	x0, [x19, #24]
     a08:	add	x0, x0, #0x18
     a0c:	str	x0, [x19, #24]
     a10:	ldr	w1, [x21]
     a14:	mov	x0, x19
     a18:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     a1c:	ldp	x1, x0, [x19, #16]
     a20:	cmp	x0, x1
     a24:	b.cs	a54 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x14c>  // b.hs, b.nlast
     a28:	add	x1, x0, #0x1
     a2c:	str	x1, [x19, #24]
     a30:	mov	w1, #0xa                   	// #10
     a34:	strb	w1, [x0]
     a38:	b	930 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x28>
     a3c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     a40:	mov	x2, #0x18                  	// #24
     a44:	add	x1, x1, #0x0
     a48:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a4c:	mov	x19, x0
     a50:	b	a10 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x108>
     a54:	mov	x0, x19
     a58:	mov	w1, #0xa                   	// #10
     a5c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     a60:	b	930 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE+0x28>
     a64:	nop

0000000000000a68 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>:
     a68:	stp	x29, x30, [sp, #-48]!
     a6c:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
     a70:	mov	x29, sp
     a74:	ldr	x2, [x2]
     a78:	stp	x19, x20, [sp, #16]
     a7c:	mov	x20, x0
     a80:	stp	x21, x22, [sp, #32]
     a84:	mov	x22, x1
     a88:	ldrb	w0, [x2]
     a8c:	cbnz	w0, b10 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0xa8>
     a90:	ldr	x19, [x20, #40]
     a94:	add	x20, x20, #0x18
     a98:	cmp	x20, x19
     a9c:	b.eq	ad0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x68>  // b.none
     aa0:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     aa4:	add	x21, x21, #0x0
     aa8:	ldr	x3, [x19, #32]
     aac:	mov	x0, x19
     ab0:	ldr	x2, [x3]
     ab4:	ldr	x2, [x2, #40]
     ab8:	cmp	x2, x21
     abc:	b.ne	ae0 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x78>  // b.any
     ac0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     ac4:	mov	x19, x0
     ac8:	cmp	x20, x0
     acc:	b.ne	aa8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x40>  // b.any
     ad0:	ldp	x19, x20, [sp, #16]
     ad4:	ldp	x21, x22, [sp, #32]
     ad8:	ldp	x29, x30, [sp], #48
     adc:	ret
     ae0:	mov	x1, x22
     ae4:	mov	x0, x3
     ae8:	blr	x2
     aec:	mov	x0, x19
     af0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     af4:	mov	x19, x0
     af8:	cmp	x20, x0
     afc:	b.ne	aa8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x40>  // b.any
     b00:	ldp	x19, x20, [sp, #16]
     b04:	ldp	x21, x22, [sp, #32]
     b08:	ldp	x29, x30, [sp], #48
     b0c:	ret
     b10:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     b14:	add	x0, x0, #0x0
     b18:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     b1c:	tst	w0, #0xff
     b20:	b.eq	a90 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x28>  // b.none
     b24:	bl	0 <_ZN4llvm4dbgsEv>
     b28:	mov	x2, x0
     b2c:	ldp	x1, x3, [x0, #16]
     b30:	sub	x1, x1, x3
     b34:	cmp	x1, #0x18
     b38:	b.ls	bcc <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x164>  // b.plast
     b3c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     b40:	add	x0, x0, #0x0
     b44:	ldrb	w1, [x0, #24]
     b48:	ldp	x4, x5, [x0]
     b4c:	stp	x4, x5, [x3]
     b50:	ldr	x0, [x0, #16]
     b54:	str	x0, [x3, #16]
     b58:	strb	w1, [x3, #24]
     b5c:	ldr	x0, [x2, #24]
     b60:	add	x0, x0, #0x19
     b64:	str	x0, [x2, #24]
     b68:	ldr	x1, [x22]
     b6c:	mov	x0, x2
     b70:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b74:	mov	x2, x0
     b78:	ldp	x3, x1, [x0, #16]
     b7c:	cmp	x3, x1
     b80:	b.ls	bf8 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x190>  // b.plast
     b84:	add	x0, x1, #0x1
     b88:	str	x0, [x2, #24]
     b8c:	mov	w0, #0x2e                  	// #46
     b90:	strb	w0, [x1]
     b94:	ldr	x1, [x22, #8]
     b98:	mov	x0, x2
     b9c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ba0:	mov	x1, x0
     ba4:	ldp	x2, x3, [x0, #16]
     ba8:	sub	x2, x2, x3
     bac:	cmp	x2, #0x1
     bb0:	b.ls	be4 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x17c>  // b.plast
     bb4:	mov	w0, #0xa5d                 	// #2653
     bb8:	strh	w0, [x3]
     bbc:	ldr	x0, [x1, #24]
     bc0:	add	x0, x0, #0x2
     bc4:	str	x0, [x1, #24]
     bc8:	b	a90 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x28>
     bcc:	mov	x2, #0x19                  	// #25
     bd0:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     bd4:	add	x1, x1, #0x0
     bd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     bdc:	mov	x2, x0
     be0:	b	b68 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x100>
     be4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     be8:	mov	x2, #0x2                   	// #2
     bec:	add	x1, x1, #0x0
     bf0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     bf4:	b	a90 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x28>
     bf8:	mov	w1, #0x2e                  	// #46
     bfc:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     c00:	mov	x2, x0
     c04:	b	b94 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE+0x12c>

0000000000000c08 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>:
     c08:	stp	x29, x30, [sp, #-128]!
     c0c:	adrp	x4, 0 <_ZN4llvm9DebugFlagE>
     c10:	mov	x29, sp
     c14:	ldr	x4, [x4]
     c18:	stp	x19, x20, [sp, #16]
     c1c:	mov	x20, x0
     c20:	stp	x21, x22, [sp, #32]
     c24:	mov	x21, x2
     c28:	ldrb	w0, [x4]
     c2c:	stp	x23, x24, [sp, #48]
     c30:	mov	x22, x3
     c34:	mov	x23, x1
     c38:	cbnz	w0, cf8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xf0>
     c3c:	add	x24, x22, x22, lsl #1
     c40:	add	x24, x21, x24, lsl #3
     c44:	cmp	x21, x24
     c48:	b.eq	c70 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x68>  // b.none
     c4c:	mov	x19, x21
     c50:	ldr	x0, [x20, #64]
     c54:	ldr	x1, [x19]
     c58:	ldr	x0, [x0, #24]
     c5c:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
     c60:	mov	w0, w0
     c64:	str	x0, [x19], #24
     c68:	cmp	x24, x19
     c6c:	b.ne	c50 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x48>  // b.any
     c70:	ldr	x19, [x20, #40]
     c74:	mov	w0, #0x4                   	// #4
     c78:	str	w0, [sp, #96]
     c7c:	add	x20, x20, #0x18
     c80:	stp	x23, x21, [sp, #104]
     c84:	cmp	x19, x20
     c88:	adrp	x21, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     c8c:	str	x22, [sp, #120]
     c90:	add	x21, x21, #0x0
     c94:	add	x22, sp, #0x60
     c98:	b.ne	cb4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xac>  // b.any
     c9c:	b	ce4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xdc>
     ca0:	mov	x0, x19
     ca4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     ca8:	mov	x19, x0
     cac:	cmp	x20, x0
     cb0:	b.eq	ce4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xdc>  // b.none
     cb4:	ldr	x0, [x19, #32]
     cb8:	ldr	x1, [x0]
     cbc:	ldr	x2, [x1, #16]
     cc0:	cmp	x2, x21
     cc4:	b.eq	ca0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x98>  // b.none
     cc8:	mov	x1, x22
     ccc:	blr	x2
     cd0:	mov	x0, x19
     cd4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     cd8:	mov	x19, x0
     cdc:	cmp	x20, x0
     ce0:	b.ne	cb4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0xac>  // b.any
     ce4:	ldp	x19, x20, [sp, #16]
     ce8:	ldp	x21, x22, [sp, #32]
     cec:	ldp	x23, x24, [sp, #48]
     cf0:	ldp	x29, x30, [sp], #128
     cf4:	ret
     cf8:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     cfc:	add	x0, x0, #0x0
     d00:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
     d04:	tst	w0, #0xff
     d08:	b.eq	c3c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x34>  // b.none
     d0c:	stp	x25, x26, [sp, #64]
     d10:	bl	0 <_ZN4llvm4dbgsEv>
     d14:	mov	x19, x0
     d18:	ldp	x1, x2, [x0, #16]
     d1c:	sub	x1, x1, x2
     d20:	cmp	x1, #0x18
     d24:	b.ls	f94 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x38c>  // b.plast
     d28:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     d2c:	add	x0, x0, #0x0
     d30:	ldrb	w1, [x0, #24]
     d34:	ldp	x4, x5, [x0]
     d38:	stp	x4, x5, [x2]
     d3c:	ldr	x0, [x0, #16]
     d40:	str	x0, [x2, #16]
     d44:	strb	w1, [x2, #24]
     d48:	ldr	x0, [x19, #24]
     d4c:	add	x0, x0, #0x19
     d50:	str	x0, [x19, #24]
     d54:	ldr	w1, [x23]
     d58:	mov	x0, x19
     d5c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d60:	ldp	x1, x0, [x19, #16]
     d64:	cmp	x0, x1
     d68:	b.cs	fac <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3a4>  // b.hs, b.nlast
     d6c:	add	x1, x0, #0x1
     d70:	str	x1, [x19, #24]
     d74:	mov	w1, #0xa                   	// #10
     d78:	strb	w1, [x0]
     d7c:	add	x25, x22, x22, lsl #1
     d80:	mov	x19, x21
     d84:	add	x25, x21, x25, lsl #3
     d88:	cmp	x21, x25
     d8c:	b.eq	fbc <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3b4>  // b.none
     d90:	stp	x27, x28, [sp, #80]
     d94:	mov	x28, #0x7963                	// #31075
     d98:	movk	x28, #0x6c63, lsl #16
     d9c:	movk	x28, #0x7365, lsl #32
     da0:	adrp	x27, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     da4:	adrp	x26, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     da8:	add	x27, x27, #0x0
     dac:	add	x26, x26, #0x0
     db0:	movk	x28, #0x203a, lsl #48
     db4:	b	ea0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x298>
     db8:	ldp	x0, x1, [x27]
     dbc:	stp	x0, x1, [x3]
     dc0:	ldr	w0, [x27, #16]
     dc4:	str	w0, [x3, #16]
     dc8:	ldr	x0, [x2, #24]
     dcc:	ldr	x1, [x19]
     dd0:	add	x0, x0, #0x14
     dd4:	str	x0, [x2, #24]
     dd8:	mov	x0, x2
     ddc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     de0:	mov	x2, x0
     de4:	ldp	x3, x1, [x0, #16]
     de8:	cmp	x1, x3
     dec:	b.cs	ef0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x2e8>  // b.hs, b.nlast
     df0:	add	x0, x1, #0x1
     df4:	str	x0, [x2, #24]
     df8:	mov	w0, #0x2e                  	// #46
     dfc:	strb	w0, [x1]
     e00:	mov	x0, x2
     e04:	ldr	x1, [x19, #8]
     e08:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     e0c:	mov	x1, x0
     e10:	ldp	x2, x3, [x0, #16]
     e14:	sub	x2, x2, x3
     e18:	cmp	x2, #0x2
     e1c:	b.ls	f1c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x314>  // b.plast
     e20:	ldrh	w2, [x26]
     e24:	ldrb	w0, [x26, #2]
     e28:	strh	w2, [x3]
     e2c:	strb	w0, [x3, #2]
     e30:	ldr	x0, [x1, #24]
     e34:	add	x0, x0, #0x3
     e38:	str	x0, [x1, #24]
     e3c:	bl	0 <_ZN4llvm4dbgsEv>
     e40:	mov	x2, x0
     e44:	ldp	x1, x3, [x0, #16]
     e48:	sub	x1, x1, x3
     e4c:	cmp	x1, #0x7
     e50:	b.ls	f40 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x338>  // b.plast
     e54:	str	x28, [x3]
     e58:	ldr	x0, [x0, #24]
     e5c:	ldr	w1, [x19, #16]
     e60:	add	x0, x0, #0x8
     e64:	str	x0, [x2, #24]
     e68:	mov	x0, x2
     e6c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     e70:	mov	x1, x0
     e74:	ldp	x3, x2, [x0, #16]
     e78:	cmp	x2, x3
     e7c:	b.cs	f70 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x368>  // b.hs, b.nlast
     e80:	add	x0, x2, #0x1
     e84:	str	x0, [x1, #24]
     e88:	mov	w0, #0xa                   	// #10
     e8c:	strb	w0, [x2]
     e90:	add	x19, x19, #0x18
     e94:	cmp	x25, x19
     e98:	mov	x24, x19
     e9c:	b.eq	f88 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x380>  // b.none
     ea0:	ldr	w0, [x19, #20]
     ea4:	cmp	w0, #0x1
     ea8:	b.ne	fc4 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x3bc>  // b.any
     eac:	bl	0 <_ZN4llvm4dbgsEv>
     eb0:	mov	x2, x0
     eb4:	ldp	x1, x3, [x0, #16]
     eb8:	sub	x1, x1, x3
     ebc:	cmp	x1, #0x13
     ec0:	b.hi	db8 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1b0>  // b.pmore
     ec4:	mov	x1, x27
     ec8:	mov	x2, #0x14                  	// #20
     ecc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ed0:	mov	x2, x0
     ed4:	ldr	x1, [x19]
     ed8:	mov	x0, x2
     edc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     ee0:	mov	x2, x0
     ee4:	ldp	x3, x1, [x0, #16]
     ee8:	cmp	x1, x3
     eec:	b.cc	df0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x1e8>  // b.lo, b.ul, b.last
     ef0:	mov	w1, #0x2e                  	// #46
     ef4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     ef8:	ldr	x1, [x19, #8]
     efc:	mov	x2, x0
     f00:	mov	x0, x2
     f04:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f08:	mov	x1, x0
     f0c:	ldp	x2, x3, [x0, #16]
     f10:	sub	x2, x2, x3
     f14:	cmp	x2, #0x2
     f18:	b.hi	e20 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x218>  // b.pmore
     f1c:	mov	x1, x26
     f20:	mov	x2, #0x3                   	// #3
     f24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f28:	bl	0 <_ZN4llvm4dbgsEv>
     f2c:	mov	x2, x0
     f30:	ldp	x1, x3, [x0, #16]
     f34:	sub	x1, x1, x3
     f38:	cmp	x1, #0x7
     f3c:	b.hi	e54 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x24c>  // b.pmore
     f40:	mov	x2, #0x8                   	// #8
     f44:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     f48:	add	x1, x1, #0x0
     f4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     f50:	ldr	w1, [x19, #16]
     f54:	mov	x2, x0
     f58:	mov	x0, x2
     f5c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     f60:	mov	x1, x0
     f64:	ldp	x3, x2, [x0, #16]
     f68:	cmp	x2, x3
     f6c:	b.cc	e80 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x278>  // b.lo, b.ul, b.last
     f70:	add	x19, x19, #0x18
     f74:	mov	w1, #0xa                   	// #10
     f78:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     f7c:	mov	x24, x19
     f80:	cmp	x25, x19
     f84:	b.ne	ea0 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x298>  // b.any
     f88:	ldp	x25, x26, [sp, #64]
     f8c:	ldp	x27, x28, [sp, #80]
     f90:	b	c4c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x44>
     f94:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     f98:	mov	x2, #0x19                  	// #25
     f9c:	add	x1, x1, #0x0
     fa0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fa4:	mov	x19, x0
     fa8:	b	d54 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x14c>
     fac:	mov	x0, x19
     fb0:	mov	w1, #0xa                   	// #10
     fb4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     fb8:	b	d7c <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x174>
     fbc:	ldp	x25, x26, [sp, #64]
     fc0:	b	c70 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE+0x68>
     fc4:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     fc8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     fcc:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
     fd0:	add	x3, x3, #0x0
     fd4:	add	x1, x1, #0x0
     fd8:	add	x0, x0, #0x0
     fdc:	mov	w2, #0x102                 	// #258
     fe0:	bl	0 <__assert_fail>
     fe4:	nop

0000000000000fe8 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>:
     fe8:	stp	x29, x30, [sp, #-48]!
     fec:	mov	x29, sp
     ff0:	ldr	x2, [x1, #8]
     ff4:	stp	x19, x20, [sp, #16]
     ff8:	ldrb	w3, [x2, #840]
     ffc:	str	x21, [sp, #32]
    1000:	cbz	w3, 1114 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x12c>
    1004:	ldr	w3, [x2, #784]
    1008:	cmp	w3, #0x3
    100c:	b.ne	10f4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0x10c>  // b.any
    1010:	ldr	x2, [x2]
    1014:	ldrb	w3, [x2, #324]
    1018:	cbnz	w3, 10d4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xec>
    101c:	ldrb	w2, [x2, #325]
    1020:	cbnz	w2, 10d4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xec>
    1024:	mov	x19, x1
    1028:	mov	x21, x8
    102c:	mov	x20, x0
    1030:	bl	7a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    1034:	mov	x1, x19
    1038:	mov	x0, x20
    103c:	bl	908 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    1040:	mov	x1, x19
    1044:	mov	x2, #0x0                   	// #0
    1048:	mov	x3, #0x0                   	// #0
    104c:	mov	x0, x20
    1050:	bl	c08 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
    1054:	ldr	x0, [x19, #8]
    1058:	bl	0 <_ZN4llvm3mca11Instruction13forceExecutedEv>
    105c:	mov	x0, x20
    1060:	mov	x1, x19
    1064:	bl	638 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    1068:	ldr	x0, [x20, #8]
    106c:	cbz	x0, 10b4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xcc>
    1070:	ldr	x2, [x0]
    1074:	mov	x1, x19
    1078:	ldr	x2, [x2, #16]
    107c:	blr	x2
    1080:	tst	w0, #0xff
    1084:	b.eq	10b4 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE+0xcc>  // b.none
    1088:	ldr	x0, [x20, #8]
    108c:	mov	x1, x19
    1090:	mov	x8, x21
    1094:	ldr	x2, [x0]
    1098:	ldr	x2, [x2, #48]
    109c:	blr	x2
    10a0:	mov	x0, x21
    10a4:	ldp	x19, x20, [sp, #16]
    10a8:	ldr	x21, [sp, #32]
    10ac:	ldp	x29, x30, [sp], #48
    10b0:	ret
    10b4:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10b8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10bc:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10c0:	add	x3, x3, #0x0
    10c4:	add	x1, x1, #0x0
    10c8:	add	x0, x0, #0x0
    10cc:	mov	w2, #0x47                  	// #71
    10d0:	bl	0 <__assert_fail>
    10d4:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10d8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10dc:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10e0:	add	x3, x3, #0x0
    10e4:	add	x1, x1, #0x0
    10e8:	add	x0, x0, #0x0
    10ec:	mov	w2, #0xa9                  	// #169
    10f0:	bl	0 <__assert_fail>
    10f4:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10f8:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    10fc:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1100:	add	x3, x3, #0x0
    1104:	add	x1, x1, #0x0
    1108:	add	x0, x0, #0x0
    110c:	mov	w2, #0xa4                  	// #164
    1110:	bl	0 <__assert_fail>
    1114:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1118:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    111c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1120:	add	x3, x3, #0x0
    1124:	add	x1, x1, #0x0
    1128:	add	x0, x0, #0x0
    112c:	mov	w2, #0xa3                  	// #163
    1130:	bl	0 <__assert_fail>
    1134:	nop

0000000000001138 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>:
    1138:	stp	x29, x30, [sp, #-112]!
    113c:	mov	x29, sp
    1140:	stp	x23, x24, [sp, #48]
    1144:	mov	x23, x0
    1148:	ldr	x0, [x1, #8]
    114c:	stp	x19, x20, [sp, #16]
    1150:	ldr	x0, [x0]
    1154:	ldr	x20, [x0, #288]
    1158:	cbnz	x20, 116c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x34>
    115c:	ldp	x19, x20, [sp, #16]
    1160:	ldp	x23, x24, [sp, #48]
    1164:	ldp	x29, x30, [sp], #112
    1168:	ret
    116c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1170:	stp	x21, x22, [sp, #32]
    1174:	add	x22, sp, #0x50
    1178:	ldr	d0, [x0]
    117c:	mov	x21, x1
    1180:	add	x1, x22, #0x10
    1184:	stp	x25, x26, [sp, #64]
    1188:	and	w24, w2, #0xff
    118c:	str	d0, [sp, #88]
    1190:	fmov	d0, x20
    1194:	str	x1, [sp, #80]
    1198:	mov	x3, #0x4                   	// #4
    119c:	cnt	v0.8b, v0.8b
    11a0:	addv	b0, v0.8b
    11a4:	umov	w19, v0.b[0]
    11a8:	cmp	w19, #0x4
    11ac:	sxtw	x19, w19
    11b0:	b.gt	1360 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x228>
    11b4:	cmp	x19, x3
    11b8:	b.hi	1394 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x25c>  // b.pmore
    11bc:	ldr	x26, [sp, #80]
    11c0:	lsl	x2, x19, #2
    11c4:	mov	w1, #0x0                   	// #0
    11c8:	str	w19, [sp, #88]
    11cc:	mov	x0, x26
    11d0:	bl	0 <memset>
    11d4:	ldr	w25, [sp, #88]
    11d8:	cbz	w25, 1224 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xec>
    11dc:	mov	w0, w25
    11e0:	mov	x19, #0x0                   	// #0
    11e4:	b	11ec <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xb4>
    11e8:	ldr	w0, [sp, #88]
    11ec:	neg	x1, x20
    11f0:	cmp	x19, w0, uxtw
    11f4:	and	x1, x1, x20
    11f8:	ldr	x0, [x23, #64]
    11fc:	b.cs	1374 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x23c>  // b.hs, b.nlast
    1200:	ldr	x0, [x0, #24]
    1204:	eor	x20, x20, x1
    1208:	ldr	x26, [sp, #80]
    120c:	bl	0 <_ZNK4llvm3mca15ResourceManager19resolveResourceMaskEm>
    1210:	str	w0, [x26, x19, lsl #2]
    1214:	add	x19, x19, #0x1
    1218:	cmp	w25, w19
    121c:	b.hi	11e8 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0xb0>  // b.pmore
    1220:	ldr	x26, [sp, #80]
    1224:	add	x20, x23, #0x18
    1228:	ldr	x19, [x23, #40]
    122c:	cmp	x20, x19
    1230:	cbnz	w24, 12e4 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1ac>
    1234:	b.eq	1270 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x138>  // b.none
    1238:	ldr	w24, [sp, #88]
    123c:	adrp	x23, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1240:	add	x23, x23, #0x0
    1244:	nop
    1248:	ldr	x0, [x19, #32]
    124c:	ldr	x1, [x0]
    1250:	ldr	x4, [x1, #56]
    1254:	cmp	x4, x23
    1258:	b.ne	129c <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x164>  // b.any
    125c:	mov	x0, x19
    1260:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1264:	mov	x19, x0
    1268:	cmp	x0, x20
    126c:	b.ne	1248 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x110>  // b.any
    1270:	add	x22, x22, #0x10
    1274:	cmp	x26, x22
    1278:	b.eq	12cc <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x194>  // b.none
    127c:	mov	x0, x26
    1280:	bl	0 <free>
    1284:	ldp	x19, x20, [sp, #16]
    1288:	ldp	x21, x22, [sp, #32]
    128c:	ldp	x23, x24, [sp, #48]
    1290:	ldp	x25, x26, [sp, #64]
    1294:	ldp	x29, x30, [sp], #112
    1298:	ret
    129c:	mov	x2, x26
    12a0:	mov	x3, x24
    12a4:	mov	x1, x21
    12a8:	blr	x4
    12ac:	mov	x0, x19
    12b0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    12b4:	mov	x19, x0
    12b8:	cmp	x0, x20
    12bc:	ldr	x26, [sp, #80]
    12c0:	b.eq	1270 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x138>  // b.none
    12c4:	ldr	w24, [sp, #88]
    12c8:	b	1248 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x110>
    12cc:	ldp	x19, x20, [sp, #16]
    12d0:	ldp	x21, x22, [sp, #32]
    12d4:	ldp	x23, x24, [sp, #48]
    12d8:	ldp	x25, x26, [sp, #64]
    12dc:	ldp	x29, x30, [sp], #112
    12e0:	ret
    12e4:	b.eq	1270 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x138>  // b.none
    12e8:	ldr	w24, [sp, #88]
    12ec:	adrp	x23, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    12f0:	add	x23, x23, #0x0
    12f4:	ldr	x0, [x19, #32]
    12f8:	ldr	x1, [x0]
    12fc:	ldr	x4, [x1, #48]
    1300:	cmp	x4, x23
    1304:	b.ne	1330 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1f8>  // b.any
    1308:	mov	x0, x19
    130c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1310:	mov	x19, x0
    1314:	cmp	x0, x20
    1318:	b.eq	1270 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x138>  // b.none
    131c:	ldr	x0, [x19, #32]
    1320:	ldr	x1, [x0]
    1324:	ldr	x4, [x1, #48]
    1328:	cmp	x4, x23
    132c:	b.eq	1308 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1d0>  // b.none
    1330:	mov	x2, x26
    1334:	mov	x3, x24
    1338:	mov	x1, x21
    133c:	blr	x4
    1340:	mov	x0, x19
    1344:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    1348:	mov	x19, x0
    134c:	cmp	x0, x20
    1350:	ldr	x26, [sp, #80]
    1354:	b.eq	1270 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x138>  // b.none
    1358:	ldr	w24, [sp, #88]
    135c:	b	12f4 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x1bc>
    1360:	mov	x2, x19
    1364:	mov	x0, x22
    1368:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    136c:	ldr	w3, [sp, #92]
    1370:	b	11b4 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb+0x7c>
    1374:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1378:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    137c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1380:	add	x3, x3, #0x0
    1384:	add	x1, x1, #0x0
    1388:	add	x0, x0, #0x0
    138c:	mov	w2, #0x95                  	// #149
    1390:	bl	0 <__assert_fail>
    1394:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1398:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    139c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    13a0:	add	x3, x3, #0x0
    13a4:	add	x1, x1, #0x0
    13a8:	add	x0, x0, #0x0
    13ac:	mov	w2, #0x43                  	// #67
    13b0:	bl	0 <__assert_fail>
    13b4:	nop

00000000000013b8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>:
    13b8:	stp	x29, x30, [sp, #-368]!
    13bc:	mov	x29, sp
    13c0:	stp	x19, x20, [sp, #16]
    13c4:	mov	x20, x0
    13c8:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    13cc:	stp	x21, x22, [sp, #32]
    13d0:	add	x22, sp, #0x100
    13d4:	ldr	d0, [x0]
    13d8:	stp	x23, x24, [sp, #48]
    13dc:	add	x23, sp, #0x60
    13e0:	add	x24, sp, #0xb0
    13e4:	ldr	x0, [x20, #64]
    13e8:	mov	x19, x1
    13ec:	add	x5, x22, #0x10
    13f0:	add	x7, x23, #0x10
    13f4:	add	x6, x24, #0x10
    13f8:	mov	x4, x24
    13fc:	mov	x3, x23
    1400:	mov	x2, x22
    1404:	str	x25, [sp, #64]
    1408:	mov	x25, x8
    140c:	str	x7, [sp, #96]
    1410:	str	d0, [sp, #104]
    1414:	str	x6, [sp, #176]
    1418:	str	d0, [sp, #184]
    141c:	str	x5, [sp, #256]
    1420:	str	d0, [sp, #264]
    1424:	bl	0 <_ZN4llvm3mca9Scheduler16issueInstructionERNS0_7InstRefERNS_15SmallVectorImplISt4pairIS5_ImmENS0_14ResourceCyclesEEEERNS4_IS2_EESC_>
    1428:	ldr	x21, [x19, #8]
    142c:	mov	x1, x19
    1430:	ldr	w3, [x20, #76]
    1434:	mov	x0, x20
    1438:	mov	w2, #0x0                   	// #0
    143c:	ldr	x4, [x21]
    1440:	ldr	w4, [x4, #316]
    1444:	add	w3, w3, w4
    1448:	str	w3, [x20, #76]
    144c:	bl	1138 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
    1450:	ldr	w3, [sp, #264]
    1454:	mov	x0, x20
    1458:	ldr	x2, [sp, #256]
    145c:	mov	x1, x19
    1460:	bl	c08 <_ZNK4llvm3mca12ExecuteStage23notifyInstructionIssuedERKNS0_7InstRefENS_15MutableArrayRefISt4pairIS6_ImmENS0_14ResourceCyclesEEEE>
    1464:	ldr	w0, [x21, #784]
    1468:	cmp	w0, #0x5
    146c:	b.eq	1534 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x17c>  // b.none
    1470:	ldr	x0, [sp, #96]
    1474:	ldr	w21, [sp, #104]
    1478:	mov	x19, x0
    147c:	add	x21, x0, x21, lsl #4
    1480:	cmp	x0, x21
    1484:	b.eq	14a0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xe8>  // b.none
    1488:	mov	x1, x19
    148c:	mov	x0, x20
    1490:	add	x19, x19, #0x10
    1494:	bl	7a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    1498:	cmp	x21, x19
    149c:	b.ne	1488 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xd0>  // b.any
    14a0:	ldr	x19, [sp, #176]
    14a4:	ldr	w21, [sp, #184]
    14a8:	add	x21, x19, x21, lsl #4
    14ac:	cmp	x19, x21
    14b0:	b.eq	14d4 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x11c>  // b.none
    14b4:	nop
    14b8:	mov	x1, x19
    14bc:	mov	x0, x20
    14c0:	add	x19, x19, #0x10
    14c4:	bl	908 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    14c8:	cmp	x21, x19
    14cc:	b.ne	14b8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x100>  // b.any
    14d0:	ldr	x21, [sp, #176]
    14d4:	mov	x0, #0x1                   	// #1
    14d8:	str	x0, [x25]
    14dc:	add	x24, x24, #0x10
    14e0:	cmp	x21, x24
    14e4:	b.eq	14f0 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x138>  // b.none
    14e8:	mov	x0, x21
    14ec:	bl	0 <free>
    14f0:	ldr	x0, [sp, #96]
    14f4:	add	x23, x23, #0x10
    14f8:	cmp	x0, x23
    14fc:	b.eq	1504 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x14c>  // b.none
    1500:	bl	0 <free>
    1504:	ldr	x0, [sp, #256]
    1508:	add	x22, x22, #0x10
    150c:	cmp	x0, x22
    1510:	b.eq	1518 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x160>  // b.none
    1514:	bl	0 <free>
    1518:	mov	x0, x25
    151c:	ldp	x19, x20, [sp, #16]
    1520:	ldp	x21, x22, [sp, #32]
    1524:	ldp	x23, x24, [sp, #48]
    1528:	ldr	x25, [sp, #64]
    152c:	ldp	x29, x30, [sp], #368
    1530:	ret
    1534:	mov	x0, x20
    1538:	mov	x1, x19
    153c:	bl	638 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    1540:	ldr	x0, [x20, #8]
    1544:	cbz	x0, 1594 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1dc>
    1548:	ldr	x2, [x0]
    154c:	mov	x1, x19
    1550:	ldr	x2, [x2, #16]
    1554:	blr	x2
    1558:	tst	w0, #0xff
    155c:	b.eq	1594 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x1dc>  // b.none
    1560:	ldr	x0, [x20, #8]
    1564:	mov	x1, x19
    1568:	add	x8, sp, #0x58
    156c:	ldr	x2, [x0]
    1570:	ldr	x2, [x2, #48]
    1574:	blr	x2
    1578:	ldr	x0, [sp, #88]
    157c:	ands	x0, x0, #0xfffffffffffffffe
    1580:	b.eq	1470 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0xb8>  // b.none
    1584:	orr	x0, x0, #0x1
    1588:	str	x0, [x25]
    158c:	ldr	x21, [sp, #176]
    1590:	b	14dc <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE+0x124>
    1594:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1598:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    159c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    15a0:	add	x3, x3, #0x0
    15a4:	add	x1, x1, #0x0
    15a8:	add	x0, x0, #0x0
    15ac:	mov	w2, #0x47                  	// #71
    15b0:	bl	0 <__assert_fail>
    15b4:	nop

00000000000015b8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>:
    15b8:	stp	x29, x30, [sp, #-80]!
    15bc:	mov	x29, sp
    15c0:	stp	x19, x20, [sp, #16]
    15c4:	mov	x19, x0
    15c8:	mov	x20, x8
    15cc:	ldr	x0, [x0, #64]
    15d0:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
    15d4:	stp	x0, x1, [sp, #64]
    15d8:	ldr	x0, [sp, #72]
    15dc:	cbz	x0, 163c <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x84>
    15e0:	stp	x21, x22, [sp, #32]
    15e4:	add	x22, sp, #0x40
    15e8:	add	x21, sp, #0x38
    15ec:	mov	x1, x22
    15f0:	mov	x8, x21
    15f4:	mov	x0, x19
    15f8:	bl	13b8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
    15fc:	ldr	x1, [sp, #56]
    1600:	ands	x1, x1, #0xfffffffffffffffe
    1604:	b.eq	1624 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x6c>  // b.none
    1608:	orr	x1, x1, #0x1
    160c:	mov	x0, x20
    1610:	ldp	x21, x22, [sp, #32]
    1614:	str	x1, [x20]
    1618:	ldp	x19, x20, [sp, #16]
    161c:	ldp	x29, x30, [sp], #80
    1620:	ret
    1624:	ldr	x0, [x19, #64]
    1628:	bl	0 <_ZN4llvm3mca9Scheduler6selectEv>
    162c:	str	w0, [sp, #64]
    1630:	str	x1, [sp, #72]
    1634:	cbnz	x1, 15ec <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv+0x34>
    1638:	ldp	x21, x22, [sp, #32]
    163c:	mov	x0, #0x1                   	// #1
    1640:	str	x0, [x20]
    1644:	mov	x0, x20
    1648:	ldp	x19, x20, [sp, #16]
    164c:	ldp	x29, x30, [sp], #80
    1650:	ret
    1654:	nop

0000000000001658 <_ZN4llvm3mca12ExecuteStage10cycleStartEv>:
    1658:	stp	x29, x30, [sp, #-496]!
    165c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1660:	mov	x29, sp
    1664:	stp	x19, x20, [sp, #16]
    1668:	mov	x20, x0
    166c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1670:	stp	x23, x24, [sp, #48]
    1674:	add	x23, sp, #0x160
    1678:	ldr	d0, [x0]
    167c:	add	x24, sp, #0x70
    1680:	stp	x25, x26, [sp, #64]
    1684:	add	x25, sp, #0xc0
    1688:	add	x26, sp, #0x110
    168c:	ldr	d1, [x1]
    1690:	ldr	x0, [x20, #64]
    1694:	add	x5, x23, #0x10
    1698:	add	x7, x25, #0x10
    169c:	add	x6, x26, #0x10
    16a0:	stp	x21, x22, [sp, #32]
    16a4:	mov	x22, x8
    16a8:	add	x8, x24, #0x10
    16ac:	mov	x4, x26
    16b0:	mov	x3, x25
    16b4:	mov	x2, x24
    16b8:	mov	x1, x23
    16bc:	str	x8, [sp, #112]
    16c0:	str	d0, [sp, #120]
    16c4:	str	x7, [sp, #192]
    16c8:	str	d0, [sp, #200]
    16cc:	str	x6, [sp, #272]
    16d0:	str	d0, [sp, #280]
    16d4:	str	x5, [sp, #352]
    16d8:	str	d1, [sp, #360]
    16dc:	bl	0 <_ZN4llvm3mca9Scheduler10cycleEventERNS_15SmallVectorImplISt4pairImmEEERNS2_INS0_7InstRefEEES9_S9_>
    16e0:	ldr	x0, [sp, #352]
    16e4:	str	xzr, [x20, #72]
    16e8:	ldr	w21, [sp, #360]
    16ec:	mov	x19, x0
    16f0:	add	x21, x0, x21, lsl #4
    16f4:	cmp	x21, x0
    16f8:	b.eq	1718 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xc0>  // b.none
    16fc:	nop
    1700:	mov	x1, x19
    1704:	mov	x0, x20
    1708:	add	x19, x19, #0x10
    170c:	bl	a68 <_ZNK4llvm3mca12ExecuteStage23notifyResourceAvailableERKSt4pairImmE>
    1710:	cmp	x21, x19
    1714:	b.ne	1700 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xa8>  // b.any
    1718:	ldr	x19, [sp, #112]
    171c:	ldr	w21, [sp, #120]
    1720:	add	x21, x19, x21, lsl #4
    1724:	cmp	x19, x21
    1728:	b.eq	182c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1d4>  // b.none
    172c:	str	x27, [sp, #80]
    1730:	add	x27, sp, #0x68
    1734:	mov	x0, x20
    1738:	mov	x1, x19
    173c:	bl	638 <_ZNK4llvm3mca12ExecuteStage25notifyInstructionExecutedERKNS0_7InstRefE>
    1740:	ldr	x0, [x20, #8]
    1744:	cbz	x0, 17fc <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1a4>
    1748:	ldr	x2, [x0]
    174c:	mov	x1, x19
    1750:	ldr	x2, [x2, #16]
    1754:	blr	x2
    1758:	tst	w0, #0xff
    175c:	b.eq	17fc <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1a4>  // b.none
    1760:	ldr	x0, [x20, #8]
    1764:	mov	x8, x27
    1768:	mov	x1, x19
    176c:	ldr	x2, [x0]
    1770:	ldr	x2, [x2, #48]
    1774:	blr	x2
    1778:	ldr	x0, [sp, #104]
    177c:	ands	x0, x0, #0xfffffffffffffffe
    1780:	b.eq	181c <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1c4>  // b.none
    1784:	orr	x0, x0, #0x1
    1788:	ldr	x27, [sp, #80]
    178c:	str	x0, [x22]
    1790:	ldr	x0, [sp, #272]
    1794:	add	x26, x26, #0x10
    1798:	cmp	x0, x26
    179c:	b.eq	17a4 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x14c>  // b.none
    17a0:	bl	0 <free>
    17a4:	ldr	x0, [sp, #192]
    17a8:	add	x25, x25, #0x10
    17ac:	cmp	x0, x25
    17b0:	b.eq	17b8 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x160>  // b.none
    17b4:	bl	0 <free>
    17b8:	ldr	x0, [sp, #112]
    17bc:	add	x24, x24, #0x10
    17c0:	cmp	x0, x24
    17c4:	b.eq	17cc <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x174>  // b.none
    17c8:	bl	0 <free>
    17cc:	ldr	x0, [sp, #352]
    17d0:	add	x23, x23, #0x10
    17d4:	cmp	x0, x23
    17d8:	b.eq	17e0 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x188>  // b.none
    17dc:	bl	0 <free>
    17e0:	mov	x0, x22
    17e4:	ldp	x19, x20, [sp, #16]
    17e8:	ldp	x21, x22, [sp, #32]
    17ec:	ldp	x23, x24, [sp, #48]
    17f0:	ldp	x25, x26, [sp, #64]
    17f4:	ldp	x29, x30, [sp], #496
    17f8:	ret
    17fc:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1800:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1804:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1808:	add	x3, x3, #0x0
    180c:	add	x1, x1, #0x0
    1810:	add	x0, x0, #0x0
    1814:	mov	w2, #0x47                  	// #71
    1818:	bl	0 <__assert_fail>
    181c:	add	x19, x19, #0x10
    1820:	cmp	x21, x19
    1824:	b.ne	1734 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0xdc>  // b.any
    1828:	ldr	x27, [sp, #80]
    182c:	ldr	x19, [sp, #192]
    1830:	ldr	w21, [sp, #200]
    1834:	add	x21, x19, x21, lsl #4
    1838:	cmp	x19, x21
    183c:	b.eq	1858 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x200>  // b.none
    1840:	mov	x1, x19
    1844:	mov	x0, x20
    1848:	add	x19, x19, #0x10
    184c:	bl	7a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    1850:	cmp	x21, x19
    1854:	b.ne	1840 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x1e8>  // b.any
    1858:	ldr	x19, [sp, #272]
    185c:	ldr	w21, [sp, #280]
    1860:	add	x21, x19, x21, lsl #4
    1864:	cmp	x19, x21
    1868:	b.eq	1888 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x230>  // b.none
    186c:	nop
    1870:	mov	x1, x19
    1874:	mov	x0, x20
    1878:	add	x19, x19, #0x10
    187c:	bl	908 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    1880:	cmp	x21, x19
    1884:	b.ne	1870 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x218>  // b.any
    1888:	mov	x0, x20
    188c:	mov	x8, x22
    1890:	bl	15b8 <_ZN4llvm3mca12ExecuteStage22issueReadyInstructionsEv>
    1894:	b	1790 <_ZN4llvm3mca12ExecuteStage10cycleStartEv+0x138>

0000000000001898 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE>:
    1898:	stp	x29, x30, [sp, #-64]!
    189c:	mov	x29, sp
    18a0:	stp	x19, x20, [sp, #16]
    18a4:	mov	x20, x1
    18a8:	stp	x21, x22, [sp, #32]
    18ac:	mov	x22, x8
    18b0:	mov	x21, x0
    18b4:	bl	570 <_ZNK4llvm3mca12ExecuteStage11isAvailableERKNS0_7InstRefE>
    18b8:	tst	w0, #0xff
    18bc:	b.eq	1a08 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x170>  // b.none
    18c0:	ldr	x19, [x21, #64]
    18c4:	mov	x2, x20
    18c8:	mov	w3, #0x0                   	// #0
    18cc:	ldp	x0, x1, [x19, #32]
    18d0:	bl	0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    18d4:	ldr	x1, [x19, #40]
    18d8:	cmp	x1, x0
    18dc:	b.ne	1a50 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x1b8>  // b.any
    18e0:	ldp	x0, x1, [x19, #80]
    18e4:	mov	x2, x20
    18e8:	mov	w3, #0x0                   	// #0
    18ec:	bl	0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    18f0:	ldr	x1, [x19, #88]
    18f4:	cmp	x1, x0
    18f8:	b.ne	1a2c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x194>  // b.any
    18fc:	ldp	x0, x1, [x19, #104]
    1900:	mov	x2, x20
    1904:	mov	w3, #0x0                   	// #0
    1908:	bl	0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    190c:	ldr	x1, [x19, #112]
    1910:	cmp	x1, x0
    1914:	b.ne	1a74 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x1dc>  // b.any
    1918:	ldr	x0, [x20, #8]
    191c:	ldrb	w0, [x0, #840]
    1920:	cbnz	w0, 1990 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xf8>
    1924:	ldr	x0, [x21, #64]
    1928:	mov	x1, x20
    192c:	str	x23, [sp, #48]
    1930:	bl	0 <_ZN4llvm3mca9Scheduler8dispatchERNS0_7InstRefE>
    1934:	and	w19, w0, #0xff
    1938:	ldr	x23, [x20, #8]
    193c:	mov	x1, x20
    1940:	ldr	w3, [x21, #72]
    1944:	mov	x0, x21
    1948:	mov	w2, #0x1                   	// #1
    194c:	ldr	x4, [x23]
    1950:	ldr	w4, [x4, #316]
    1954:	add	w3, w3, w4
    1958:	str	w3, [x21, #72]
    195c:	bl	1138 <_ZNK4llvm3mca12ExecuteStage31notifyReservedOrReleasedBuffersERKNS0_7InstRefEb>
    1960:	cbnz	w19, 19b4 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x11c>
    1964:	ldr	w0, [x23, #784]
    1968:	cmp	w0, #0x2
    196c:	b.eq	19f8 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0x160>  // b.none
    1970:	mov	x0, #0x1                   	// #1
    1974:	ldr	x23, [sp, #48]
    1978:	str	x0, [x22]
    197c:	mov	x0, x22
    1980:	ldp	x19, x20, [sp, #16]
    1984:	ldp	x21, x22, [sp, #32]
    1988:	ldp	x29, x30, [sp], #64
    198c:	ret
    1990:	mov	x1, x20
    1994:	mov	x0, x21
    1998:	mov	x8, x22
    199c:	bl	fe8 <_ZN4llvm3mca12ExecuteStage27handleInstructionEliminatedERNS0_7InstRefE>
    19a0:	mov	x0, x22
    19a4:	ldp	x19, x20, [sp, #16]
    19a8:	ldp	x21, x22, [sp, #32]
    19ac:	ldp	x29, x30, [sp], #64
    19b0:	ret
    19b4:	mov	x1, x20
    19b8:	mov	x0, x21
    19bc:	bl	7a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    19c0:	mov	x1, x20
    19c4:	mov	x0, x21
    19c8:	bl	908 <_ZNK4llvm3mca12ExecuteStage22notifyInstructionReadyERKNS0_7InstRefE>
    19cc:	ldr	x0, [x21, #64]
    19d0:	mov	x1, x20
    19d4:	bl	0 <_ZNK4llvm3mca9Scheduler20mustIssueImmediatelyERKNS0_7InstRefE>
    19d8:	tst	w0, #0xff
    19dc:	b.eq	1970 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xd8>  // b.none
    19e0:	mov	x1, x20
    19e4:	mov	x0, x21
    19e8:	mov	x8, x22
    19ec:	bl	13b8 <_ZN4llvm3mca12ExecuteStage16issueInstructionERNS0_7InstRefE>
    19f0:	ldr	x23, [sp, #48]
    19f4:	b	197c <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xe4>
    19f8:	mov	x1, x20
    19fc:	mov	x0, x21
    1a00:	bl	7a0 <_ZNK4llvm3mca12ExecuteStage24notifyInstructionPendingERKNS0_7InstRefE>
    1a04:	b	1970 <_ZN4llvm3mca12ExecuteStage7executeERNS0_7InstRefE+0xd8>
    1a08:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a0c:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a10:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a14:	add	x3, x3, #0x0
    1a18:	add	x1, x1, #0x0
    1a1c:	add	x0, x0, #0x0
    1a20:	mov	w2, #0xbb                  	// #187
    1a24:	str	x23, [sp, #48]
    1a28:	bl	0 <__assert_fail>
    1a2c:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a30:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a34:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a38:	add	x3, x3, #0x0
    1a3c:	add	x1, x1, #0x0
    1a40:	add	x0, x0, #0x0
    1a44:	mov	w2, #0x10f                 	// #271
    1a48:	str	x23, [sp, #48]
    1a4c:	bl	0 <__assert_fail>
    1a50:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a54:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a58:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a5c:	add	x3, x3, #0x0
    1a60:	add	x1, x1, #0x0
    1a64:	add	x0, x0, #0x0
    1a68:	mov	w2, #0x10e                 	// #270
    1a6c:	str	x23, [sp, #48]
    1a70:	bl	0 <__assert_fail>
    1a74:	adrp	x3, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a78:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a7c:	adrp	x0, 0 <_ZN4llvm3mca12ExecuteStage8cycleEndEv>
    1a80:	add	x3, x3, #0x0
    1a84:	add	x1, x1, #0x0
    1a88:	add	x0, x0, #0x0
    1a8c:	mov	w2, #0x110                 	// #272
    1a90:	str	x23, [sp, #48]
    1a94:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_12HWStallEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_15HWPressureEventE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE:

0000000000000000 <_ZN4llvm3mca15HWEventListener19onResourceAvailableERKSt4pairImmE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReservedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE:

0000000000000000 <_ZN4llvm3mca15HWEventListener17onReleasedBuffersERKNS0_7InstRefENS_8ArrayRefIjEE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca12ExecuteStage17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD2Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca12ExecuteStageD0Ev:

0000000000000000 <_ZN4llvm3mca12ExecuteStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca12ExecuteStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x58                  	// #88
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag>:
   0:	mov	x3, x0
   4:	sub	x0, x1, x0
   8:	cmp	xzr, x0, asr #6
   c:	asr	x5, x0, #4
  10:	asr	x4, x0, #6
  14:	b.ge	64 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x64>  // b.tcont
  18:	ldr	w0, [x2]
  1c:	add	x4, x3, x4, lsl #6
  20:	ldr	w5, [x3]
  24:	cmp	w0, w5
  28:	b.eq	84 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x84>  // b.none
  2c:	ldr	w5, [x3, #16]
  30:	cmp	w0, w5
  34:	b.eq	9c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x9c>  // b.none
  38:	ldr	w5, [x3, #32]
  3c:	cmp	w0, w5
  40:	b.eq	b4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xb4>  // b.none
  44:	ldr	w5, [x3, #48]
  48:	cmp	w0, w5
  4c:	b.eq	cc <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xcc>  // b.none
  50:	add	x3, x3, #0x40
  54:	cmp	x4, x3
  58:	b.ne	20 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x20>  // b.any
  5c:	sub	x5, x1, x3
  60:	asr	x5, x5, #4
  64:	cmp	x5, #0x2
  68:	b.eq	124 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x124>  // b.none
  6c:	cmp	x5, #0x3
  70:	b.eq	10c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x10c>  // b.none
  74:	cmp	x5, #0x1
  78:	b.eq	e4 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe4>  // b.none
  7c:	mov	x0, x1
  80:	ret
  84:	ldr	x5, [x2, #8]
  88:	ldr	x6, [x3, #8]
  8c:	cmp	x6, x5
  90:	b.ne	2c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x2c>  // b.any
  94:	mov	x0, x3
  98:	ret
  9c:	ldr	x5, [x2, #8]
  a0:	ldr	x6, [x3, #24]
  a4:	cmp	x6, x5
  a8:	b.ne	38 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x38>  // b.any
  ac:	add	x0, x3, #0x10
  b0:	ret
  b4:	ldr	x5, [x2, #8]
  b8:	ldr	x6, [x3, #40]
  bc:	cmp	x6, x5
  c0:	b.ne	44 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x44>  // b.any
  c4:	add	x0, x3, #0x20
  c8:	ret
  cc:	ldr	x5, [x2, #8]
  d0:	ldr	x6, [x3, #56]
  d4:	cmp	x6, x5
  d8:	b.ne	50 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x50>  // b.any
  dc:	add	x0, x3, #0x30
  e0:	ret
  e4:	ldr	w4, [x2]
  e8:	ldr	w0, [x3]
  ec:	cmp	w0, w4
  f0:	b.ne	7c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x7c>  // b.any
  f4:	ldr	x0, [x2, #8]
  f8:	ldr	x2, [x3, #8]
  fc:	cmp	x2, x0
 100:	b.eq	94 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x94>  // b.none
 104:	mov	x0, x1
 108:	b	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>
 10c:	ldr	w4, [x2]
 110:	ldr	w0, [x3]
 114:	cmp	w0, w4
 118:	b.eq	158 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x158>  // b.none
 11c:	add	x3, x3, #0x10
 120:	b	128 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x128>
 124:	ldr	w4, [x2]
 128:	ldr	w0, [x3]
 12c:	cmp	w0, w4
 130:	b.eq	13c <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x13c>  // b.none
 134:	add	x3, x3, #0x10
 138:	b	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>
 13c:	ldr	x5, [x2, #8]
 140:	mov	x0, x3
 144:	ldr	x6, [x3, #8]
 148:	cmp	x6, x5
 14c:	b.eq	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>  // b.none
 150:	add	x3, x3, #0x10
 154:	b	e8 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0xe8>
 158:	ldr	x5, [x2, #8]
 15c:	mov	x0, x3
 160:	ldr	x6, [x3, #8]
 164:	cmp	x6, x5
 168:	b.eq	80 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x80>  // b.none
 16c:	add	x3, x3, #0x10
 170:	b	128 <_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKN4llvm3mca7InstRefESt6vectorIS4_SaIS4_EEEENS0_5__ops16_Iter_equals_valIS5_EEET_SE_SE_T0_St26random_access_iterator_tag+0x128>

InstructionTables.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	w6, #0x18                  	// #24
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	ldr	x0, [x1, #8]
  18:	stp	x21, x22, [sp, #32]
  1c:	stp	x23, x24, [sp, #48]
  20:	ldr	x0, [x0]
  24:	str	x1, [sp, #168]
  28:	ldr	x22, [x0, #176]
  2c:	str	wzr, [x19, #80]
  30:	ldr	w23, [x0, #184]
  34:	umaddl	x0, w23, w6, x22
  38:	stp	x0, x8, [sp, #152]
  3c:	cmp	x0, x22
  40:	b.eq	3fc <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3fc>  // b.none
  44:	mov	w24, w6
  48:	add	x0, x19, #0x48
  4c:	stp	x25, x26, [sp, #64]
  50:	mov	w25, #0x1                   	// #1
  54:	stp	x27, x28, [sp, #80]
  58:	stp	x22, x0, [sp, #136]
  5c:	nop
  60:	ldr	x0, [sp, #136]
  64:	ldp	w4, w5, [x0, #8]
  68:	cmp	w5, w4
  6c:	b.eq	278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>  // b.none
  70:	mov	x1, x0
  74:	ldr	w0, [x19, #192]
  78:	ldr	x9, [x19, #184]
  7c:	lsl	x0, x0, #3
  80:	add	x10, x9, x0
  84:	cmp	xzr, x0, asr #5
  88:	asr	x8, x0, #3
  8c:	asr	x0, x0, #5
  90:	ldr	x1, [x1]
  94:	b.eq	3f0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3f0>  // b.none
  98:	add	x3, x9, x0, lsl #5
  9c:	mov	x0, x9
  a0:	b	d4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xd4>
  a4:	ldr	x2, [x0, #8]
  a8:	cmp	x1, x2
  ac:	b.eq	34c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x34c>  // b.none
  b0:	ldr	x2, [x0, #16]
  b4:	cmp	x1, x2
  b8:	b.eq	33c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x33c>  // b.none
  bc:	ldr	x2, [x0, #24]
  c0:	cmp	x1, x2
  c4:	b.eq	394 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x394>  // b.none
  c8:	add	x0, x0, #0x20
  cc:	cmp	x3, x0
  d0:	b.eq	35c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x35c>  // b.none
  d4:	ldr	x2, [x0]
  d8:	cmp	x1, x2
  dc:	b.ne	a4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xa4>  // b.any
  e0:	sub	x0, x0, x9
  e4:	asr	x8, x0, #3
  e8:	ldr	x0, [x19, #64]
  ec:	ldr	x1, [x0, #40]
  f0:	cbz	x1, 444 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x444>
  f4:	ldr	w1, [x0, #48]
  f8:	cmp	w8, w1
  fc:	b.cs	464 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x464>  // b.hs, b.nlast
 100:	ldr	x9, [x0, #32]
 104:	ubfiz	x2, x8, #5, #32
 108:	sub	w26, w5, w4
 10c:	and	x21, x8, #0xffffffff
 110:	add	x9, x9, x2
 114:	ldr	x2, [x9, #24]
 118:	ldr	w22, [x9, #8]
 11c:	cbz	x2, 218 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x218>
 120:	cbz	w22, 278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>
 124:	sub	w21, w22, #0x1
 128:	ldr	w28, [x2]
 12c:	add	x21, x21, #0x1
 130:	mov	x23, #0x4                   	// #4
 134:	lsl	x2, x21, #2
 138:	str	x2, [sp, #128]
 13c:	nop
 140:	cmp	w28, w1
 144:	b.cs	464 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x464>  // b.hs, b.nlast
 148:	ldr	x2, [x0, #32]
 14c:	ubfiz	x0, x28, #5, #32
 150:	mov	w28, w28
 154:	add	x2, x2, x0
 158:	ldr	w21, [x2, #8]
 15c:	cbz	w21, 1c8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1c8>
 160:	ldp	w1, w10, [x19, #80]
 164:	mov	w27, w21
 168:	mov	w20, #0x0                   	// #0
 16c:	b	174 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x174>
 170:	ldr	w27, [x2, #8]
 174:	mul	w27, w22, w27
 178:	cmp	w1, w10
 17c:	lsl	w11, w25, w20
 180:	b.cs	1f4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x1f4>  // b.hs, b.nlast
 184:	ldr	x10, [x19, #72]
 188:	umull	x1, w1, w24
 18c:	add	x0, x10, x1
 190:	str	x28, [x10, x1]
 194:	str	x11, [x0, #8]
 198:	stp	w26, w27, [x0, #16]
 19c:	ldp	w1, w10, [x19, #80]
 1a0:	mov	w0, w1
 1a4:	add	x0, x0, #0x1
 1a8:	cmp	x0, w10, uxtw
 1ac:	b.hi	424 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x424>  // b.pmore
 1b0:	add	w1, w1, #0x1
 1b4:	str	w1, [x19, #80]
 1b8:	cbz	w1, 404 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x404>
 1bc:	add	w20, w20, #0x1
 1c0:	cmp	w21, w20
 1c4:	b.ne	170 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x170>  // b.any
 1c8:	ldr	x0, [sp, #128]
 1cc:	cmp	x0, x23
 1d0:	b.eq	278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>  // b.none
 1d4:	ldr	x0, [x19, #64]
 1d8:	ldr	x2, [x9, #24]
 1dc:	ldr	x1, [x0, #40]
 1e0:	ldr	w28, [x2, x23]
 1e4:	add	x23, x23, #0x4
 1e8:	cbz	x1, 444 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x444>
 1ec:	ldr	w1, [x0, #48]
 1f0:	b	140 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x140>
 1f4:	ldr	x0, [sp, #144]
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	stp	x11, x9, [sp, #104]
 200:	str	x2, [sp, #120]
 204:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 208:	ldr	w1, [x19, #80]
 20c:	ldp	x11, x9, [sp, #104]
 210:	ldr	x2, [sp, #120]
 214:	b	184 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x184>
 218:	cbz	w22, 278 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x278>
 21c:	ldp	w0, w2, [x19, #80]
 220:	mov	w20, #0x0                   	// #0
 224:	nop
 228:	cmp	w0, w2
 22c:	lsl	w27, w25, w20
 230:	b.cs	3a4 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3a4>  // b.hs, b.nlast
 234:	ldr	x2, [x19, #72]
 238:	umull	x0, w0, w24
 23c:	add	x1, x2, x0
 240:	str	x21, [x2, x0]
 244:	str	x27, [x1, #8]
 248:	stp	w26, w22, [x1, #16]
 24c:	ldp	w0, w2, [x19, #80]
 250:	mov	w1, w0
 254:	add	x1, x1, #0x1
 258:	cmp	x1, w2, uxtw
 25c:	b.hi	424 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x424>  // b.pmore
 260:	add	w0, w0, #0x1
 264:	str	w0, [x19, #80]
 268:	cbz	w0, 404 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x404>
 26c:	add	w20, w20, #0x1
 270:	cmp	w22, w20
 274:	b.ne	228 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x228>  // b.any
 278:	ldr	x0, [sp, #136]
 27c:	ldr	x1, [sp, #152]
 280:	add	x0, x0, #0x18
 284:	str	x0, [sp, #136]
 288:	cmp	x1, x0
 28c:	b.ne	60 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x60>  // b.any
 290:	ldp	x25, x26, [sp, #64]
 294:	ldp	x27, x28, [sp, #80]
 298:	ldr	w0, [x19, #80]
 29c:	mov	w2, #0x4                   	// #4
 2a0:	str	w2, [sp, #176]
 2a4:	ldr	x20, [x19, #40]
 2a8:	add	x19, x19, #0x18
 2ac:	ldr	x1, [x19, #48]
 2b0:	stp	x1, x0, [sp, #192]
 2b4:	adrp	x21, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 2b8:	ldr	x2, [sp, #168]
 2bc:	str	x2, [sp, #184]
 2c0:	add	x22, sp, #0xb0
 2c4:	add	x21, x21, #0x0
 2c8:	cmp	x20, x19
 2cc:	b.eq	2f8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2f8>  // b.none
 2d0:	ldr	x0, [x20, #32]
 2d4:	ldr	x1, [x0]
 2d8:	ldr	x2, [x1, #16]
 2dc:	cmp	x2, x21
 2e0:	b.ne	31c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x31c>  // b.any
 2e4:	mov	x0, x20
 2e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 2ec:	mov	x20, x0
 2f0:	cmp	x19, x0
 2f4:	b.ne	2d0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2d0>  // b.any
 2f8:	ldr	x1, [sp, #160]
 2fc:	mov	x0, #0x1                   	// #1
 300:	ldp	x19, x20, [sp, #16]
 304:	ldp	x21, x22, [sp, #32]
 308:	ldp	x23, x24, [sp, #48]
 30c:	str	x0, [x1]
 310:	mov	x0, x1
 314:	ldp	x29, x30, [sp], #208
 318:	ret
 31c:	mov	x1, x22
 320:	blr	x2
 324:	mov	x0, x20
 328:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 32c:	mov	x20, x0
 330:	cmp	x0, x19
 334:	b.ne	2d0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2d0>  // b.any
 338:	b	2f8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x2f8>
 33c:	add	x0, x0, #0x10
 340:	sub	x0, x0, x9
 344:	asr	x8, x0, #3
 348:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 34c:	add	x0, x0, #0x8
 350:	sub	x0, x0, x9
 354:	asr	x8, x0, #3
 358:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 35c:	sub	x2, x10, x0
 360:	asr	x2, x2, #3
 364:	cmp	x2, #0x2
 368:	b.eq	3c8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3c8>  // b.none
 36c:	cmp	x2, #0x3
 370:	b.eq	3b8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x3b8>  // b.none
 374:	cmp	x2, #0x1
 378:	b.ne	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>  // b.any
 37c:	ldr	x2, [x0]
 380:	sub	x0, x0, x9
 384:	cmp	x1, x2
 388:	asr	x0, x0, #3
 38c:	csel	x8, x0, x8, eq  // eq = none
 390:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 394:	add	x0, x0, #0x18
 398:	sub	x0, x0, x9
 39c:	asr	x8, x0, #3
 3a0:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 3a4:	ldr	x0, [sp, #144]
 3a8:	mov	x1, #0x0                   	// #0
 3ac:	bl	0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 3b0:	ldr	w0, [x19, #80]
 3b4:	b	234 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x234>
 3b8:	ldr	x2, [x0]
 3bc:	cmp	x1, x2
 3c0:	b.eq	e0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe0>  // b.none
 3c4:	add	x0, x0, #0x8
 3c8:	ldr	x2, [x0]
 3cc:	cmp	x1, x2
 3d0:	b.eq	e0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe0>  // b.none
 3d4:	add	x0, x0, #0x8
 3d8:	ldr	x2, [x0]
 3dc:	sub	x0, x0, x9
 3e0:	cmp	x1, x2
 3e4:	asr	x0, x0, #3
 3e8:	csel	x8, x0, x8, eq  // eq = none
 3ec:	b	e8 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0xe8>
 3f0:	mov	x2, x8
 3f4:	mov	x0, x9
 3f8:	b	364 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x364>
 3fc:	mov	x0, #0x0                   	// #0
 400:	b	29c <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE+0x29c>
 404:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 408:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 40c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 410:	add	x3, x3, #0x0
 414:	add	x1, x1, #0x0
 418:	add	x0, x0, #0x0
 41c:	mov	w2, #0xa7                  	// #167
 420:	bl	0 <__assert_fail>
 424:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 428:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 42c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 430:	add	x3, x3, #0x0
 434:	add	x1, x1, #0x0
 438:	add	x0, x0, #0x0
 43c:	mov	w2, #0x43                  	// #67
 440:	bl	0 <__assert_fail>
 444:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 448:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 44c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 450:	add	x3, x3, #0x0
 454:	add	x1, x1, #0x0
 458:	add	x0, x0, #0x0
 45c:	mov	w2, #0x154                 	// #340
 460:	bl	0 <__assert_fail>
 464:	adrp	x3, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 468:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 46c:	adrp	x0, 0 <_ZN4llvm3mca17InstructionTables7executeERNS0_7InstRefE>
 470:	add	x3, x3, #0x0
 474:	add	x1, x1, #0x0
 478:	add	x0, x0, #0x0
 47c:	mov	w2, #0x156                 	// #342
 480:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17InstructionTables17hasWorkToCompleteEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD2Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTablesD1Ev>
   8:	add	x2, x0, #0xc8
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #184]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x1, x19, #0x58
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD1Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca17InstructionTablesD0Ev:

0000000000000000 <_ZN4llvm3mca17InstructionTablesD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17InstructionTablesD0Ev>
   8:	add	x2, x0, #0xc8
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #184]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17InstructionTablesD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #72]
  38:	add	x1, x19, #0x58
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm3mca17InstructionTablesD0Ev+0x48>  // b.none
  44:	bl	0 <free>
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  50:	mov	x0, x19
  54:	mov	x1, #0x108                 	// #264
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	mov	x19, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	118 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x118>  // b.pmore
  28:	ldr	w2, [x20, #12]
  2c:	mov	x0, #0xffffffff            	// #4294967295
  30:	add	x2, x2, #0x2
  34:	orr	x2, x2, x2, lsr #1
  38:	orr	x2, x2, x2, lsr #2
  3c:	orr	x2, x2, x2, lsr #4
  40:	orr	x2, x2, x2, lsr #8
  44:	orr	x1, x2, x2, lsr #16
  48:	orr	x2, x1, x2, lsr #32
  4c:	add	x2, x2, #0x1
  50:	str	x2, [sp, #72]
  54:	cmp	x19, x2
  58:	csel	x2, x19, x2, cs  // cs = hs, nlast
  5c:	cmp	x2, x0
  60:	b.hi	e8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xe8>  // b.pmore
  64:	add	x0, x2, x2, lsl #1
  68:	mov	w19, w2
  6c:	lsl	x0, x0, #3
  70:	bl	0 <malloc>
  74:	mov	x21, x0
  78:	cbz	x0, 100 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x100>
  7c:	ldr	w6, [x20, #8]
  80:	mov	w3, #0x18                  	// #24
  84:	ldr	x0, [x20]
  88:	mov	x2, x21
  8c:	mov	x1, x0
  90:	umaddl	x6, w6, w3, x0
  94:	cmp	x0, x6
  98:	b.eq	c0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xc0>  // b.none
  9c:	nop
  a0:	ldp	x4, x5, [x1]
  a4:	stp	x4, x5, [x2]
  a8:	add	x1, x1, #0x18
  ac:	ldur	x3, [x1, #-8]
  b0:	str	x3, [x2, #16]
  b4:	cmp	x6, x1
  b8:	add	x2, x2, #0x18
  bc:	b.ne	a0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xa0>  // b.any
  c0:	add	x1, x20, #0x10
  c4:	cmp	x0, x1
  c8:	b.eq	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0xd0>  // b.none
  cc:	bl	0 <free>
  d0:	str	x21, [x20]
  d4:	str	w19, [x20, #12]
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldr	x21, [sp, #32]
  e0:	ldp	x29, x30, [sp], #80
  e4:	ret
  e8:	mov	w0, #0xffffffe8            	// #-24
  ec:	mov	w19, #0xffffffff            	// #-1
  f0:	movk	x0, #0x17, lsl #32
  f4:	bl	0 <malloc>
  f8:	mov	x21, x0
  fc:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x7c>
 100:	mov	x21, #0x0                   	// #0
 104:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
 108:	mov	w1, #0x1                   	// #1
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 114:	b	7c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x7c>
 118:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm>
 11c:	mov	w1, #0x1                   	// #1
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 128:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIS1_ImmENS_3mca14ResourceCyclesEELb0EE4growEm+0x28>

MicroOpQueueStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>:
   0:	ldr	w4, [x0, #72]
   4:	mov	x2, x0
   8:	ldr	w3, [x0, #208]
   c:	cmp	x3, x4
  10:	b.cs	8c <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE+0x8c>  // b.hs, b.nlast
  14:	ldr	x4, [x2, #64]
  18:	lsl	x3, x3, #4
  1c:	ldr	w7, [x1]
  20:	mov	x0, x8
  24:	add	x5, x4, x3
  28:	mov	x8, #0x1                   	// #1
  2c:	ldr	x6, [x1, #8]
  30:	str	w7, [x4, x3]
  34:	ldr	w3, [x2, #208]
  38:	ldr	w4, [x2, #224]
  3c:	str	x6, [x5, #8]
  40:	ldr	w5, [x2, #72]
  44:	ldr	x1, [x1, #8]
  48:	mov	w7, w5
  4c:	ldr	w6, [x2, #220]
  50:	ldr	x1, [x1]
  54:	add	w6, w6, #0x1
  58:	ldr	w1, [x1, #316]
  5c:	cmp	w1, w5
  60:	csel	w1, w1, w5, ls  // ls = plast
  64:	cmp	w1, #0x0
  68:	csinc	w1, w1, wzr, ne  // ne = any
  6c:	add	w3, w1, w3
  70:	sub	w1, w4, w1
  74:	stp	w6, w1, [x2, #220]
  78:	udiv	x1, x3, x7
  7c:	msub	x3, x1, x7, x3
  80:	str	w3, [x2, #208]
  84:	str	x8, [x0]
  88:	ret
  8c:	stp	x29, x30, [sp, #-16]!
  90:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
  94:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
  98:	mov	x29, sp
  9c:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
  a0:	add	x3, x3, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x0, x0, #0x0
  ac:	mov	w2, #0x95                  	// #149
  b0:	bl	0 <__assert_fail>
  b4:	nop

00000000000000b8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>:
  b8:	stp	x29, x30, [sp, #-96]!
  bc:	mov	x29, sp
  c0:	stp	x19, x20, [sp, #16]
  c4:	mov	x19, x0
  c8:	ldr	w0, [x0, #212]
  cc:	ldr	w1, [x19, #72]
  d0:	cmp	x0, x1
  d4:	b.cs	240 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x188>  // b.hs, b.nlast
  d8:	ldr	x1, [x19, #64]
  dc:	mov	x20, x8
  e0:	add	x0, x1, x0, lsl #4
  e4:	ldp	x0, x1, [x0]
  e8:	stp	x0, x1, [sp, #80]
  ec:	ldr	x0, [sp, #88]
  f0:	cbz	x0, 130 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x78>
  f4:	stp	x21, x22, [sp, #32]
  f8:	add	x21, sp, #0x50
  fc:	add	x22, sp, #0x48
 100:	str	x23, [sp, #48]
 104:	mov	w23, #0x1                   	// #1
 108:	ldr	x0, [x19, #8]
 10c:	cbz	x0, 128 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x70>
 110:	ldr	x2, [x0]
 114:	mov	x1, x21
 118:	ldr	x2, [x2, #16]
 11c:	blr	x2
 120:	tst	w0, #0xff
 124:	b.ne	148 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x90>  // b.any
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldr	x23, [sp, #48]
 130:	mov	x0, #0x1                   	// #1
 134:	str	x0, [x20]
 138:	mov	x0, x20
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	ldr	x0, [x19, #8]
 14c:	cbz	x0, 1a0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xe8>
 150:	ldr	x2, [x0]
 154:	mov	x1, x21
 158:	ldr	x2, [x2, #16]
 15c:	blr	x2
 160:	tst	w0, #0xff
 164:	b.eq	1a0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0xe8>  // b.none
 168:	ldr	x0, [x19, #8]
 16c:	mov	x8, x22
 170:	mov	x1, x21
 174:	ldr	x2, [x0]
 178:	ldr	x2, [x2, #48]
 17c:	blr	x2
 180:	ldr	x0, [sp, #72]
 184:	ands	x0, x0, #0xfffffffffffffffe
 188:	b.eq	1c0 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x108>  // b.none
 18c:	orr	x0, x0, #0x1
 190:	ldp	x21, x22, [sp, #32]
 194:	ldr	x23, [sp, #48]
 198:	str	x0, [x20]
 19c:	b	138 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x80>
 1a0:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 1a4:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 1a8:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 1ac:	add	x3, x3, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x0, x0, #0x0
 1b8:	mov	w2, #0x47                  	// #71
 1bc:	bl	0 <__assert_fail>
 1c0:	ldr	w2, [x19, #72]
 1c4:	ldr	w1, [x19, #212]
 1c8:	mov	w5, w2
 1cc:	mov	w4, w1
 1d0:	cmp	w2, w1
 1d4:	b.ls	248 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x190>  // b.plast
 1d8:	ldr	x0, [x19, #64]
 1dc:	ldr	w3, [x19, #224]
 1e0:	add	x4, x0, x4, lsl #4
 1e4:	str	xzr, [x4, #8]
 1e8:	ldr	x0, [sp, #88]
 1ec:	ldr	x4, [x19, #64]
 1f0:	ldr	x0, [x0]
 1f4:	ldr	w0, [x0, #316]
 1f8:	cmp	w0, w2
 1fc:	csel	w0, w0, w2, ls  // ls = plast
 200:	cmp	w0, #0x0
 204:	csel	w0, w0, w23, ne  // ne = any
 208:	add	w1, w1, w0
 20c:	add	w0, w3, w0
 210:	str	w0, [x19, #224]
 214:	udiv	x0, x1, x5
 218:	msub	x0, x0, x5, x1
 21c:	str	w0, [x19, #212]
 220:	lsl	x0, x0, #4
 224:	add	x2, x4, x0
 228:	ldr	w1, [x4, x0]
 22c:	ldr	x0, [x2, #8]
 230:	str	w1, [sp, #80]
 234:	str	x0, [sp, #88]
 238:	cbnz	x0, 108 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x50>
 23c:	b	128 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv+0x70>
 240:	stp	x21, x22, [sp, #32]
 244:	str	x23, [sp, #48]
 248:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 24c:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 250:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 254:	add	x3, x3, #0x0
 258:	add	x1, x1, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w2, #0x95                  	// #149
 264:	bl	0 <__assert_fail>

0000000000000268 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv>:
 268:	stp	x29, x30, [sp, #-32]!
 26c:	mov	x29, sp
 270:	ldrb	w2, [x0, #228]
 274:	str	x19, [sp, #16]
 278:	mov	x19, x8
 27c:	str	wzr, [x0, #220]
 280:	cbnz	w2, 298 <_ZN4llvm3mca17MicroOpQueueStage10cycleStartEv+0x30>
 284:	bl	b8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 288:	mov	x0, x19
 28c:	ldr	x19, [sp, #16]
 290:	ldp	x29, x30, [sp], #32
 294:	ret
 298:	mov	x0, #0x1                   	// #1
 29c:	str	x0, [x8]
 2a0:	mov	x0, x19
 2a4:	ldr	x19, [sp, #16]
 2a8:	ldp	x29, x30, [sp], #32
 2ac:	ret

00000000000002b0 <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv>:
 2b0:	stp	x29, x30, [sp, #-32]!
 2b4:	mov	x29, sp
 2b8:	ldrb	w1, [x0, #228]
 2bc:	str	x19, [sp, #16]
 2c0:	mov	x19, x8
 2c4:	cbz	w1, 2dc <_ZN4llvm3mca17MicroOpQueueStage8cycleEndEv+0x2c>
 2c8:	bl	b8 <_ZN4llvm3mca17MicroOpQueueStage16moveInstructionsEv>
 2cc:	mov	x0, x19
 2d0:	ldr	x19, [sp, #16]
 2d4:	ldp	x29, x30, [sp], #32
 2d8:	ret
 2dc:	mov	x0, #0x1                   	// #1
 2e0:	str	x0, [x8]
 2e4:	mov	x0, x19
 2e8:	ldr	x19, [sp, #16]
 2ec:	ldp	x29, x30, [sp], #32
 2f0:	ret
 2f4:	nop

00000000000002f8 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb>:
 2f8:	stp	x29, x30, [sp, #-48]!
 2fc:	adrp	x5, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 300:	cmp	w1, #0x0
 304:	mov	x29, sp
 308:	stp	x19, x20, [sp, #16]
 30c:	mov	x19, x0
 310:	add	x0, x0, #0x18
 314:	mov	x4, x19
 318:	str	x21, [sp, #32]
 31c:	ldr	x5, [x5]
 320:	str	xzr, [x19, #8]
 324:	str	wzr, [x19, #24]
 328:	csinc	w20, w1, wzr, ne  // ne = any
 32c:	str	xzr, [x19, #32]
 330:	add	x5, x5, #0x10
 334:	stp	x0, x0, [x0, #16]
 338:	cmp	w1, #0x8
 33c:	mov	w21, w20
 340:	str	xzr, [x0, #32]
 344:	mov	x0, #0x800000000           	// #34359738368
 348:	str	x5, [x4], #80
 34c:	str	xzr, [x19, #208]
 350:	stp	x4, x0, [x19, #64]
 354:	mov	x0, x4
 358:	stp	w2, wzr, [x19, #216]
 35c:	strb	w3, [x19, #228]
 360:	b.hi	3a8 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xb0>  // b.pmore
 364:	add	x4, x4, x21, lsl #4
 368:	cmp	x4, x0
 36c:	b.eq	384 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x8c>  // b.none
 370:	str	wzr, [x0]
 374:	add	x0, x0, #0x10
 378:	stur	xzr, [x0, #-8]
 37c:	cmp	x4, x0
 380:	b.ne	370 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x78>  // b.any
 384:	ldr	w0, [x19, #76]
 388:	cmp	x21, x0
 38c:	b.hi	3c4 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0xcc>  // b.pmore
 390:	ldr	x21, [sp, #32]
 394:	str	w20, [x19, #72]
 398:	str	w20, [x19, #224]
 39c:	ldp	x19, x20, [sp, #16]
 3a0:	ldp	x29, x30, [sp], #48
 3a4:	ret
 3a8:	add	x0, x19, #0x40
 3ac:	mov	x1, x21
 3b0:	bl	0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3b4:	ldr	x4, [x19, #64]
 3b8:	ldr	w0, [x19, #72]
 3bc:	add	x0, x4, x0, lsl #4
 3c0:	b	364 <_ZN4llvm3mca17MicroOpQueueStageC1Ejjb+0x6c>
 3c4:	adrp	x3, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3c8:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3cc:	adrp	x0, 0 <_ZN4llvm3mca17MicroOpQueueStage7executeERNS0_7InstRefE>
 3d0:	add	x3, x3, #0x0
 3d4:	add	x1, x1, #0x0
 3d8:	add	x0, x0, #0x0
 3dc:	mov	w2, #0x43                  	// #67
 3e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE>:
   0:	ldr	w3, [x0, #216]
   4:	mov	x2, x0
   8:	cbz	w3, 1c <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x1c>
   c:	ldr	w4, [x2, #220]
  10:	mov	w0, #0x0                   	// #0
  14:	cmp	w3, w4
  18:	b.eq	48 <_ZNK4llvm3mca17MicroOpQueueStage11isAvailableERKNS0_7InstRefE+0x48>  // b.none
  1c:	ldr	x0, [x1, #8]
  20:	ldr	w1, [x2, #72]
  24:	ldr	w2, [x2, #224]
  28:	ldr	x0, [x0]
  2c:	ldr	w0, [x0, #316]
  30:	cmp	w0, w1
  34:	csel	w0, w0, w1, ls  // ls = plast
  38:	cmp	w0, #0x0
  3c:	csinc	w0, w0, wzr, ne  // ne = any
  40:	cmp	w2, w0
  44:	cset	w0, cs  // cs = hs, nlast
  48:	ret

Disassembly of section .text._ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca17MicroOpQueueStage17hasWorkToCompleteEv>:
   0:	ldr	w1, [x0, #72]
   4:	ldr	w0, [x0, #224]
   8:	cmp	w0, w1
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD2Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStageD1Ev>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD1Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca17MicroOpQueueStageD0Ev:

0000000000000000 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca17MicroOpQueueStageD0Ev>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm3mca17MicroOpQueueStageD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	mov	x0, x19
  38:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  3c:	mov	x0, x19
  40:	mov	x1, #0xe8                  	// #232
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	str	x21, [sp, #32]
  18:	mov	x0, #0xffffffff            	// #4294967295
  1c:	str	x1, [sp, #56]
  20:	cmp	x1, x0
  24:	b.hi	110 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x110>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	mov	x3, #0xffffffff            	// #4294967295
  30:	str	x3, [sp, #72]
  34:	add	x2, x2, #0x2
  38:	orr	x2, x2, x2, lsr #1
  3c:	orr	x2, x2, x2, lsr #2
  40:	orr	x2, x2, x2, lsr #4
  44:	orr	x2, x2, x2, lsr #8
  48:	orr	x1, x2, x2, lsr #16
  4c:	orr	x2, x1, x2, lsr #32
  50:	add	x2, x2, #0x1
  54:	cmp	x2, x20
  58:	csel	x1, x2, x20, cs  // cs = hs, nlast
  5c:	cmp	x1, x3
  60:	b.hi	e0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xe0>  // b.pmore
  64:	mov	w21, w1
  68:	lsl	x0, x1, #4
  6c:	str	x1, [sp, #64]
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbz	x0, f8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xf8>
  7c:	ldr	x0, [x19]
  80:	mov	x2, x20
  84:	ldr	w5, [x19, #8]
  88:	mov	x1, x0
  8c:	add	x5, x0, x5, lsl #4
  90:	cmp	x0, x5
  94:	b.eq	b8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xb8>  // b.none
  98:	ldr	w4, [x1]
  9c:	add	x1, x1, #0x10
  a0:	ldur	x3, [x1, #-8]
  a4:	str	w4, [x2]
  a8:	str	x3, [x2, #8]
  ac:	cmp	x5, x1
  b0:	add	x2, x2, #0x10
  b4:	b.ne	98 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x98>  // b.any
  b8:	add	x1, x19, #0x10
  bc:	cmp	x0, x1
  c0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0xc8>  // b.none
  c4:	bl	0 <free>
  c8:	str	x20, [x19]
  cc:	str	w21, [x19, #12]
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldr	x21, [sp, #32]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	mov	x0, #0xffffffff0           	// #68719476720
  e4:	mov	w21, #0xffffffff            	// #-1
  e8:	str	x3, [sp, #64]
  ec:	bl	0 <malloc>
  f0:	mov	x20, x0
  f4:	cbnz	x0, 7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
  f8:	mov	x20, #0x0                   	// #0
  fc:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 100:	mov	w1, #0x1                   	// #1
 104:	add	x0, x0, #0x0
 108:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 10c:	b	7c <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x7c>
 110:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm>
 114:	mov	w1, #0x1                   	// #1
 118:	add	x0, x0, #0x0
 11c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 120:	b	28 <_ZN4llvm23SmallVectorTemplateBaseINS_3mca7InstRefELb0EE4growEm+0x28>

RetireStage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x1, [x1, #8]
   c:	ldr	x0, [x0, #64]
  10:	ldr	w1, [x1, #792]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x8
  1c:	bl	0 <_ZN4llvm3mca17RetireControlUnit21onInstructionExecutedEj>
  20:	mov	x1, #0x1                   	// #1
  24:	str	x1, [x19]
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

0000000000000038 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>:
  38:	stp	x29, x30, [sp, #-128]!
  3c:	adrp	x2, 0 <_ZN4llvm9DebugFlagE>
  40:	mov	x29, sp
  44:	ldr	x2, [x2]
  48:	stp	x21, x22, [sp, #32]
  4c:	mov	x21, x0
  50:	stp	x19, x20, [sp, #16]
  54:	ldrb	w0, [x2]
  58:	str	x23, [sp, #48]
  5c:	mov	x23, x1
  60:	cbnz	w0, 1f4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x1bc>
  64:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
  68:	add	x20, sp, #0x40
  6c:	ldr	x0, [x21, #72]
  70:	add	x4, x20, #0x10
  74:	ldr	d0, [x1]
  78:	str	x4, [sp, #64]
  7c:	ldr	w22, [x0, #24]
  80:	str	d0, [sp, #72]
  84:	cmp	w22, #0x4
  88:	mov	w19, w22
  8c:	b.hi	1cc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x194>  // b.pmore
  90:	lsl	x2, x19, #2
  94:	str	w22, [sp, #72]
  98:	add	x0, x4, x2
  9c:	cmp	x4, x0
  a0:	b.eq	b4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x7c>  // b.none
  a4:	mov	x0, x4
  a8:	mov	w1, #0x0                   	// #0
  ac:	bl	0 <memset>
  b0:	mov	x4, x0
  b4:	ldr	x22, [x23, #8]
  b8:	ldr	x0, [x22]
  bc:	ldrb	w1, [x0, #324]
  c0:	cbz	w1, 1c0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x188>
  c4:	ldr	x0, [x21, #80]
  c8:	mov	x1, x23
  cc:	ldr	x2, [x0]
  d0:	ldr	x2, [x2, #40]
  d4:	blr	x2
  d8:	ldr	x4, [sp, #64]
  dc:	mov	w0, #0x88                  	// #136
  e0:	ldr	x19, [x22, #16]
  e4:	ldr	w22, [x22, #24]
  e8:	umaddl	x22, w22, w0, x19
  ec:	cmp	x22, x19
  f0:	b.eq	11c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xe4>  // b.none
  f4:	nop
  f8:	ldr	w3, [sp, #72]
  fc:	mov	x2, x4
 100:	ldr	x0, [x21, #72]
 104:	mov	x1, x19
 108:	add	x19, x19, #0x88
 10c:	bl	0 <_ZN4llvm3mca12RegisterFile19removeRegisterWriteERKNS0_10WriteStateENS_15MutableArrayRefIjEE>
 110:	cmp	x22, x19
 114:	ldr	x4, [sp, #64]
 118:	b.ne	f8 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xc0>  // b.any
 11c:	ldr	w0, [sp, #72]
 120:	mov	w1, #0x1                   	// #1
 124:	ldr	x19, [x21, #40]
 128:	str	w1, [sp, #96]
 12c:	stp	x23, x4, [sp, #104]
 130:	add	x21, x21, #0x18
 134:	cmp	x19, x21
 138:	str	x0, [sp, #120]
 13c:	b.eq	198 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x160>  // b.none
 140:	adrp	x22, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 144:	add	x23, sp, #0x60
 148:	add	x22, x22, #0x0
 14c:	b	164 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x12c>
 150:	mov	x0, x19
 154:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 158:	mov	x19, x0
 15c:	cmp	x21, x0
 160:	b.eq	194 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x15c>  // b.none
 164:	ldr	x0, [x19, #32]
 168:	ldr	x1, [x0]
 16c:	ldr	x2, [x1, #16]
 170:	cmp	x2, x22
 174:	b.eq	150 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x118>  // b.none
 178:	mov	x1, x23
 17c:	blr	x2
 180:	mov	x0, x19
 184:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 188:	mov	x19, x0
 18c:	cmp	x21, x0
 190:	b.ne	164 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x12c>  // b.any
 194:	ldr	x4, [sp, #64]
 198:	add	x20, x20, #0x10
 19c:	cmp	x4, x20
 1a0:	b.eq	1ac <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x174>  // b.none
 1a4:	mov	x0, x4
 1a8:	bl	0 <free>
 1ac:	ldp	x19, x20, [sp, #16]
 1b0:	ldp	x21, x22, [sp, #32]
 1b4:	ldr	x23, [sp, #48]
 1b8:	ldp	x29, x30, [sp], #128
 1bc:	ret
 1c0:	ldrb	w0, [x0, #325]
 1c4:	cbz	w0, dc <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0xa4>
 1c8:	b	c4 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x8c>
 1cc:	mov	x0, x20
 1d0:	mov	x1, x4
 1d4:	mov	x2, x19
 1d8:	mov	x3, #0x4                   	// #4
 1dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1e0:	ldr	w0, [sp, #76]
 1e4:	cmp	x19, x0
 1e8:	b.hi	2a0 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x268>  // b.pmore
 1ec:	ldr	x4, [sp, #64]
 1f0:	b	90 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x58>
 1f4:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 1f8:	add	x0, x0, #0x0
 1fc:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 200:	tst	w0, #0xff
 204:	b.eq	64 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x2c>  // b.none
 208:	bl	0 <_ZN4llvm4dbgsEv>
 20c:	mov	x19, x0
 210:	ldp	x1, x2, [x0, #16]
 214:	sub	x1, x1, x2
 218:	cmp	x1, #0x19
 21c:	b.ls	278 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x240>  // b.plast
 220:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 224:	add	x0, x0, #0x0
 228:	ldrh	w1, [x0, #24]
 22c:	ldp	x4, x5, [x0]
 230:	stp	x4, x5, [x2]
 234:	ldr	x0, [x0, #16]
 238:	str	x0, [x2, #16]
 23c:	strh	w1, [x2, #24]
 240:	ldr	x0, [x19, #24]
 244:	add	x0, x0, #0x1a
 248:	str	x0, [x19, #24]
 24c:	ldr	w1, [x23]
 250:	mov	x0, x19
 254:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
 258:	ldp	x1, x0, [x19, #16]
 25c:	cmp	x1, x0
 260:	b.ls	290 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x258>  // b.plast
 264:	add	x1, x0, #0x1
 268:	str	x1, [x19, #24]
 26c:	mov	w1, #0xa                   	// #10
 270:	strb	w1, [x0]
 274:	b	64 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x2c>
 278:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 27c:	mov	x2, #0x1a                  	// #26
 280:	add	x1, x1, #0x0
 284:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 288:	mov	x19, x0
 28c:	b	24c <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x214>
 290:	mov	x0, x19
 294:	mov	w1, #0xa                   	// #10
 298:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 29c:	b	64 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE+0x2c>
 2a0:	adrp	x3, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 2a4:	adrp	x1, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 2a8:	adrp	x0, 0 <_ZN4llvm3mca11RetireStage7executeERNS0_7InstRefE>
 2ac:	add	x3, x3, #0x0
 2b0:	add	x1, x1, #0x0
 2b4:	add	x0, x0, #0x0
 2b8:	mov	w2, #0x43                  	// #67
 2bc:	bl	0 <__assert_fail>

00000000000002c0 <_ZN4llvm3mca11RetireStage10cycleStartEv>:
 2c0:	stp	x29, x30, [sp, #-64]!
 2c4:	mov	x29, sp
 2c8:	stp	x19, x20, [sp, #16]
 2cc:	mov	x19, x0
 2d0:	ldr	x0, [x0, #64]
 2d4:	ldp	w2, w1, [x0, #16]
 2d8:	str	x23, [sp, #48]
 2dc:	mov	x23, x8
 2e0:	cmp	w2, w1
 2e4:	b.eq	360 <_ZN4llvm3mca11RetireStage10cycleStartEv+0xa0>  // b.none
 2e8:	stp	x21, x22, [sp, #32]
 2ec:	mov	w20, #0x0                   	// #0
 2f0:	ldr	w21, [x0, #24]
 2f4:	cmp	w21, #0x0
 2f8:	cset	w22, ne  // ne = any
 2fc:	b	328 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x68>
 300:	bl	38 <_ZNK4llvm3mca11RetireStage24notifyInstructionRetiredERKNS0_7InstRefE>
 304:	ldr	x0, [x19, #64]
 308:	bl	0 <_ZN4llvm3mca17RetireControlUnit19consumeCurrentTokenEv>
 30c:	ldr	x0, [x19, #64]
 310:	ldp	w2, w1, [x0, #16]
 314:	cmp	w2, w1
 318:	b.eq	340 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x80>  // b.none
 31c:	cmp	w22, #0x0
 320:	ccmp	w20, w21, #0x0, ne  // ne = any
 324:	b.eq	340 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x80>  // b.none
 328:	bl	0 <_ZNK4llvm3mca17RetireControlUnit15getCurrentTokenEv>
 32c:	mov	x1, x0
 330:	add	w20, w20, #0x1
 334:	mov	x0, x19
 338:	ldrb	w2, [x1, #20]
 33c:	cbnz	w2, 300 <_ZN4llvm3mca11RetireStage10cycleStartEv+0x40>
 340:	mov	x0, #0x1                   	// #1
 344:	ldp	x21, x22, [sp, #32]
 348:	str	x0, [x23]
 34c:	mov	x0, x23
 350:	ldp	x19, x20, [sp, #16]
 354:	ldr	x23, [sp, #48]
 358:	ldp	x29, x30, [sp], #64
 35c:	ret
 360:	mov	x0, #0x1                   	// #1
 364:	str	x0, [x8]
 368:	mov	x0, x23
 36c:	ldp	x19, x20, [sp, #16]
 370:	ldr	x23, [sp, #48]
 374:	ldp	x29, x30, [sp], #64
 378:	ret

Disassembly of section .text._ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE:

0000000000000000 <_ZN4llvm3mca15HWEventListener7onEventERKNS0_18HWInstructionEventE>:
   0:	ret

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv:

0000000000000000 <_ZNK4llvm3mca11RetireStage17hasWorkToCompleteEv>:
   0:	ldr	x0, [x0, #64]
   4:	ldp	w1, w0, [x0, #16]
   8:	cmp	w1, w0
   c:	cset	w0, ne  // ne = any
  10:	ret

Disassembly of section .text._ZN4llvm3mca11RetireStageD2Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm3mca11RetireStageD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	b	0 <_ZN4llvm3mca5StageD2Ev>

Disassembly of section .text._ZN4llvm3mca11RetireStageD0Ev:

0000000000000000 <_ZN4llvm3mca11RetireStageD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZN4llvm3mca11RetireStageD0Ev>
   8:	mov	x29, sp
   c:	ldr	x1, [x1]
  10:	str	x19, [sp, #16]
  14:	mov	x19, x0
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN4llvm3mca5StageD2Ev>
  24:	mov	x0, x19
  28:	mov	x1, #0x58                  	// #88
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Stage.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	ldr	x19, [x0, #32]
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x21, x1
  1c:	str	x23, [sp, #48]
  20:	add	x22, x0, #0x18
  24:	cbz	x19, fc <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xfc>
  28:	ldr	x2, [x19, #32]
  2c:	mov	w1, #0x1                   	// #1
  30:	cmp	x2, x21
  34:	b.ls	54 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x54>  // b.plast
  38:	ldr	x0, [x19, #16]
  3c:	cbz	x0, 60 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x60>
  40:	mov	x19, x0
  44:	mov	w1, #0x1                   	// #1
  48:	ldr	x2, [x19, #32]
  4c:	cmp	x2, x21
  50:	b.hi	38 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x38>  // b.pmore
  54:	ldr	x0, [x19, #24]
  58:	mov	w1, #0x0                   	// #0
  5c:	cbnz	x0, 40 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x40>
  60:	cbnz	w1, b8 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xb8>
  64:	cmp	x2, x21
  68:	b.cs	a4 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xa4>  // b.hs, b.nlast
  6c:	cmp	x22, x19
  70:	mov	w23, #0x1                   	// #1
  74:	b.ne	ec <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xec>  // b.any
  78:	mov	x0, #0x28                  	// #40
  7c:	bl	0 <_Znwm>
  80:	mov	x1, x0
  84:	mov	x3, x22
  88:	mov	w0, w23
  8c:	mov	x2, x19
  90:	str	x21, [x1, #32]
  94:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  98:	ldr	x0, [x20, #56]
  9c:	add	x0, x0, #0x1
  a0:	str	x0, [x20, #56]
  a4:	ldp	x19, x20, [sp, #16]
  a8:	ldp	x21, x22, [sp, #32]
  ac:	ldr	x23, [sp, #48]
  b0:	ldp	x29, x30, [sp], #64
  b4:	ret
  b8:	ldr	x0, [x20, #40]
  bc:	cmp	x0, x19
  c0:	b.eq	6c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x6c>  // b.none
  c4:	mov	x0, x19
  c8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  cc:	ldr	x0, [x0, #32]
  d0:	cmp	x21, x0
  d4:	b.hi	6c <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x6c>  // b.pmore
  d8:	ldp	x19, x20, [sp, #16]
  dc:	ldp	x21, x22, [sp, #32]
  e0:	ldr	x23, [sp, #48]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	ldr	x0, [x19, #32]
  f0:	cmp	x21, x0
  f4:	cset	w23, cc  // cc = lo, ul, last
  f8:	b	78 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x78>
  fc:	ldr	x0, [x0, #40]
 100:	mov	x19, x22
 104:	cmp	x22, x0
 108:	b.ne	c4 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0xc4>  // b.any
 10c:	mov	w23, #0x1                   	// #1
 110:	b	78 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE+0x78>
 114:	nop

0000000000000118 <_ZN4llvm3mca5StageD1Ev>:
 118:	stp	x29, x30, [sp, #-32]!
 11c:	adrp	x1, 0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
 120:	mov	x29, sp
 124:	ldr	x1, [x1]
 128:	stp	x19, x20, [sp, #16]
 12c:	mov	x19, x0
 130:	ldr	x20, [x0, #32]
 134:	add	x1, x1, #0x10
 138:	str	x1, [x19], #16
 13c:	cbz	x20, 15c <_ZN4llvm3mca5StageD1Ev+0x44>
 140:	ldr	x1, [x20, #24]
 144:	mov	x0, x19
 148:	bl	0 <_ZN4llvm3mca5Stage11addListenerEPNS0_15HWEventListenerE>
 14c:	mov	x0, x20
 150:	ldr	x20, [x20, #16]
 154:	bl	0 <_ZdlPv>
 158:	cbnz	x20, 140 <_ZN4llvm3mca5StageD1Ev+0x28>
 15c:	ldp	x19, x20, [sp, #16]
 160:	ldp	x29, x30, [sp], #32
 164:	ret

0000000000000168 <_ZN4llvm3mca5StageD0Ev>:
 168:	stp	x29, x30, [sp, #-32]!
 16c:	mov	x29, sp
 170:	str	x19, [sp, #16]
 174:	mov	x19, x0
 178:	bl	118 <_ZN4llvm3mca5StageD1Ev>
 17c:	mov	x0, x19
 180:	mov	x1, #0x40                  	// #64
 184:	ldr	x19, [sp, #16]
 188:	ldp	x29, x30, [sp], #32
 18c:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE:

0000000000000000 <_ZNK4llvm3mca5Stage11isAvailableERKNS0_7InstRefE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3mca5Stage10cycleStartEv:

0000000000000000 <_ZN4llvm3mca5Stage10cycleStartEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZN4llvm3mca5Stage8cycleEndEv:

0000000000000000 <_ZN4llvm3mca5Stage8cycleEndEv>:
   0:	mov	x1, #0x1                   	// #1
   4:	mov	x0, x8
   8:	str	x1, [x8]
   c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
   0:	cbz	x1, 40 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x40>
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	ldr	x1, [x19, #24]
  1c:	mov	x0, x20
  20:	bl	0 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
  24:	mov	x0, x19
  28:	ldr	x19, [x19, #16]
  2c:	bl	0 <_ZdlPv>
  30:	cbnz	x19, 18 <_ZNSt8_Rb_treeIPN4llvm3mca15HWEventListenerES3_St9_IdentityIS3_ESt4lessIS3_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x18>
  34:	ldp	x19, x20, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ret

Support.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3mca14ResourceCyclespLERKS1_>:
   0:	ldp	w6, w5, [x0]
   4:	ldp	w7, w4, [x1]
   8:	cmp	w5, w4
   c:	b.eq	58 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x58>  // b.none
  10:	mov	w3, w5
  14:	mov	w2, w4
  18:	cbnz	w4, 24 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x24>
  1c:	b	64 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x64>
  20:	mov	x2, x1
  24:	udiv	x1, x3, x2
  28:	msub	x1, x1, x2, x3
  2c:	mov	x3, x2
  30:	cbnz	x1, 20 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x20>
  34:	mul	w1, w5, w4
  38:	udiv	w2, w1, w2
  3c:	udiv	w4, w2, w4
  40:	str	w2, [x0, #4]
  44:	udiv	w2, w2, w5
  48:	mul	w4, w4, w7
  4c:	madd	w4, w2, w6, w4
  50:	str	w4, [x0]
  54:	ret
  58:	add	w4, w6, w7
  5c:	str	w4, [x0]
  60:	ret
  64:	mov	w2, w5
  68:	b	34 <_ZN4llvm3mca14ResourceCyclespLERKS1_+0x34>
  6c:	nop

0000000000000070 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE>:
  70:	stp	x29, x30, [sp, #-160]!
  74:	mov	x29, sp
  78:	stp	x21, x22, [sp, #32]
  7c:	ldr	w22, [x0, #48]
  80:	stp	x19, x20, [sp, #16]
  84:	stp	x23, x24, [sp, #48]
  88:	cmp	x2, w22, uxtw
  8c:	b.ne	528 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x4b8>  // b.any
  90:	stp	x27, x28, [sp, #80]
  94:	mov	x20, x2
  98:	cbz	x2, 4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>
  9c:	str	xzr, [x1]
  a0:	mov	x27, x0
  a4:	mov	x19, x1
  a8:	cmp	w22, #0x1
  ac:	b.ls	404 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x394>  // b.plast
  b0:	ldr	x9, [x0, #40]
  b4:	cbz	x9, 504 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x494>
  b8:	mov	x0, #0x1                   	// #1
  bc:	mov	w7, #0x0                   	// #0
  c0:	mov	x2, x0
  c4:	ldr	x6, [x27, #32]
  c8:	b	d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x68>
  cc:	add	x0, x0, #0x1
  d0:	cmp	w22, w0
  d4:	b.ls	104 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x94>  // b.plast
  d8:	add	x1, x6, x0, lsl #5
  dc:	ldr	x1, [x1, #24]
  e0:	cbnz	x1, cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x5c>
  e4:	cmp	x20, x0
  e8:	b.ls	4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>  // b.plast
  ec:	lsl	x1, x2, x7
  f0:	str	x1, [x19, x0, lsl #3]
  f4:	add	x0, x0, #0x1
  f8:	add	w7, w7, #0x1
  fc:	cmp	w22, w0
 100:	b.hi	d8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x68>  // b.pmore
 104:	mov	x3, #0x1                   	// #1
 108:	add	x6, x6, #0x28
 10c:	mov	x10, x3
 110:	ldr	x4, [x6, #16]
 114:	cbz	x4, 160 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xf0>
 118:	cmp	x20, x3
 11c:	b.ls	4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>  // b.plast
 120:	ldr	w5, [x6]
 124:	lsl	x1, x10, x7
 128:	str	x1, [x19, x3, lsl #3]
 12c:	mov	x0, #0x0                   	// #0
 130:	cbz	w5, 15c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xec>
 134:	nop
 138:	ldr	w2, [x4, x0, lsl #2]
 13c:	cmp	x2, x20
 140:	b.cs	4a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x438>  // b.hs, b.nlast
 144:	ldr	x2, [x19, x2, lsl #3]
 148:	add	x0, x0, #0x1
 14c:	cmp	w5, w0
 150:	orr	x1, x1, x2
 154:	str	x1, [x19, x3, lsl #3]
 158:	b.hi	138 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xc8>  // b.pmore
 15c:	add	w7, w7, #0x1
 160:	add	x3, x3, #0x1
 164:	add	x6, x6, #0x20
 168:	cmp	w22, w3
 16c:	b.hi	110 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0xa0>  // b.pmore
 170:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 174:	ldr	x0, [x23]
 178:	ldrb	w0, [x0]
 17c:	cbnz	w0, 414 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3a4>
 180:	stp	x25, x26, [sp, #64]
 184:	adrp	x24, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 188:	ldr	x23, [x23]
 18c:	add	x24, x24, #0x0
 190:	add	x28, sp, #0x70
 194:	add	x0, sp, #0x88
 198:	mov	x21, #0x0                   	// #0
 19c:	str	x0, [sp, #96]
 1a0:	cbz	x9, 508 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x498>
 1a4:	ldr	w0, [x27, #48]
 1a8:	cmp	w0, w21
 1ac:	b.ls	550 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x4e0>  // b.plast
 1b0:	ldrb	w0, [x23]
 1b4:	cbnz	w0, 1cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x15c>
 1b8:	add	x21, x21, #0x1
 1bc:	cmp	w22, w21
 1c0:	b.ls	35c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2ec>  // b.plast
 1c4:	ldr	x9, [x27, #40]
 1c8:	b	1a0 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x130>
 1cc:	mov	x0, x24
 1d0:	ldr	x25, [x27, #32]
 1d4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 1d8:	tst	w0, #0xff
 1dc:	b.eq	1b8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x148>  // b.none
 1e0:	bl	0 <_ZN4llvm4dbgsEv>
 1e4:	mov	x1, x0
 1e8:	ldp	x3, x2, [x0, #16]
 1ec:	cmp	x2, x3
 1f0:	b.cs	3bc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x34c>  // b.hs, b.nlast
 1f4:	add	x0, x2, #0x1
 1f8:	str	x0, [x1, #24]
 1fc:	mov	w0, #0x5b                  	// #91
 200:	strb	w0, [x2]
 204:	mov	w2, #0x2                   	// #2
 208:	mov	x0, x1
 20c:	mov	x1, x28
 210:	stp	xzr, x21, [sp, #112]
 214:	str	w2, [sp, #128]
 218:	strh	wzr, [sp, #132]
 21c:	strb	wzr, [sp, #134]
 220:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 224:	ldp	x2, x3, [x0, #16]
 228:	mov	x1, x0
 22c:	sub	x2, x2, x3
 230:	cmp	x2, #0x1
 234:	b.ls	3e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x378>  // b.plast
 238:	mov	w0, #0x205d                	// #8285
 23c:	strh	w0, [x3]
 240:	ldr	x2, [x1, #24]
 244:	add	x2, x2, #0x2
 248:	str	x2, [x1, #24]
 24c:	ldr	x0, [x1, #16]
 250:	sub	x0, x0, x2
 254:	cmp	x0, #0x2
 258:	b.ls	3cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x35c>  // b.plast
 25c:	adrp	x26, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 260:	add	x0, x26, #0x0
 264:	ldrh	w3, [x0]
 268:	ldrb	w0, [x0, #2]
 26c:	strh	w3, [x2]
 270:	strb	w0, [x2, #2]
 274:	ldr	x0, [x1, #24]
 278:	add	x0, x0, #0x3
 27c:	str	x0, [x1, #24]
 280:	cmp	x21, x20
 284:	b.cs	4ac <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x43c>  // b.hs, b.nlast
 288:	mov	x0, x1
 28c:	mov	w2, #0x1                   	// #1
 290:	ldr	x4, [x19, x21, lsl #3]
 294:	mov	w3, #0x10                  	// #16
 298:	ldr	x1, [sp, #96]
 29c:	stp	x4, xzr, [sp, #136]
 2a0:	str	w3, [sp, #152]
 2a4:	strh	w2, [sp, #156]
 2a8:	strb	w2, [sp, #158]
 2ac:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_15FormattedNumberE>
 2b0:	ldp	x1, x2, [x0, #16]
 2b4:	mov	x3, x0
 2b8:	sub	x1, x1, x2
 2bc:	cmp	x1, #0x2
 2c0:	b.ls	3a8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x338>  // b.plast
 2c4:	add	x26, x26, #0x0
 2c8:	ldrb	w0, [x26, #2]
 2cc:	ldrh	w1, [x26]
 2d0:	strh	w1, [x2]
 2d4:	strb	w0, [x2, #2]
 2d8:	ldr	x0, [x3, #24]
 2dc:	add	x0, x0, #0x3
 2e0:	str	x0, [x3, #24]
 2e4:	lsl	x0, x21, #5
 2e8:	ldr	x26, [x25, x0]
 2ec:	cbz	x26, 38c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x31c>
 2f0:	mov	x0, x26
 2f4:	str	x3, [sp, #104]
 2f8:	bl	0 <strlen>
 2fc:	mov	x25, x0
 300:	ldr	x3, [sp, #104]
 304:	ldp	x2, x0, [x3, #16]
 308:	sub	x1, x2, x0
 30c:	cmp	x25, x1
 310:	b.hi	378 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x308>  // b.pmore
 314:	cbz	x25, 338 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2c8>
 318:	mov	x2, x25
 31c:	mov	x1, x26
 320:	str	x3, [sp, #104]
 324:	bl	0 <memcpy>
 328:	ldr	x3, [sp, #104]
 32c:	ldp	x2, x0, [x3, #16]
 330:	add	x0, x0, x25
 334:	str	x0, [x3, #24]
 338:	cmp	x0, x2
 33c:	b.cs	398 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x328>  // b.hs, b.nlast
 340:	add	x1, x0, #0x1
 344:	str	x1, [x3, #24]
 348:	mov	w1, #0xa                   	// #10
 34c:	strb	w1, [x0]
 350:	add	x21, x21, #0x1
 354:	cmp	w22, w21
 358:	b.hi	1c4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x154>  // b.pmore
 35c:	ldp	x25, x26, [sp, #64]
 360:	ldp	x19, x20, [sp, #16]
 364:	ldp	x21, x22, [sp, #32]
 368:	ldp	x23, x24, [sp, #48]
 36c:	ldp	x27, x28, [sp, #80]
 370:	ldp	x29, x30, [sp], #160
 374:	ret
 378:	mov	x0, x3
 37c:	mov	x2, x25
 380:	mov	x1, x26
 384:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 388:	mov	x3, x0
 38c:	ldp	x2, x0, [x3, #16]
 390:	cmp	x0, x2
 394:	b.cc	340 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2d0>  // b.lo, b.ul, b.last
 398:	mov	x0, x3
 39c:	mov	w1, #0xa                   	// #10
 3a0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3a4:	b	1b8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x148>
 3a8:	add	x1, x26, #0x0
 3ac:	mov	x2, #0x3                   	// #3
 3b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3b4:	mov	x3, x0
 3b8:	b	2e4 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x274>
 3bc:	mov	w1, #0x5b                  	// #91
 3c0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3c4:	mov	x1, x0
 3c8:	b	204 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x194>
 3cc:	mov	x0, x1
 3d0:	adrp	x26, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3d4:	add	x1, x26, #0x0
 3d8:	mov	x2, #0x3                   	// #3
 3dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3e0:	mov	x1, x0
 3e4:	b	280 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x210>
 3e8:	mov	x2, #0x2                   	// #2
 3ec:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 3f0:	add	x1, x1, #0x0
 3f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 3f8:	mov	x1, x0
 3fc:	ldr	x2, [x0, #24]
 400:	b	24c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x1dc>
 404:	adrp	x23, 0 <_ZN4llvm9DebugFlagE>
 408:	ldr	x0, [x23]
 40c:	ldrb	w0, [x0]
 410:	cbz	w0, 42c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3bc>
 414:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 418:	add	x0, x0, #0x0
 41c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
 420:	tst	w0, #0xff
 424:	b.ne	43c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3cc>  // b.any
 428:	ldr	w22, [x27, #48]
 42c:	cbz	w22, 360 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x2f0>
 430:	stp	x25, x26, [sp, #64]
 434:	ldr	x9, [x27, #40]
 438:	b	184 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x114>
 43c:	bl	0 <_ZN4llvm4dbgsEv>
 440:	mov	x1, x0
 444:	ldp	x2, x4, [x0, #16]
 448:	sub	x2, x2, x4
 44c:	cmp	x2, #0x19
 450:	b.ls	4cc <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x45c>  // b.plast
 454:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 458:	add	x0, x0, #0x0
 45c:	ldp	x2, x3, [x0]
 460:	stp	x2, x3, [x4]
 464:	ldrh	w2, [x0, #24]
 468:	ldr	x0, [x0, #16]
 46c:	str	x0, [x4, #16]
 470:	strh	w2, [x4, #24]
 474:	ldr	x0, [x1, #24]
 478:	add	x0, x0, #0x1a
 47c:	str	x0, [x1, #24]
 480:	ldr	x2, [x1, #16]
 484:	cmp	x0, x2
 488:	b.eq	4e8 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x478>  // b.none
 48c:	mov	w2, #0xa                   	// #10
 490:	strb	w2, [x0]
 494:	ldr	x0, [x1, #24]
 498:	ldr	w22, [x27, #48]
 49c:	add	x0, x0, #0x1
 4a0:	str	x0, [x1, #24]
 4a4:	b	42c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3bc>
 4a8:	stp	x25, x26, [sp, #64]
 4ac:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b4:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4b8:	add	x3, x3, #0x0
 4bc:	add	x1, x1, #0x0
 4c0:	add	x0, x0, #0x0
 4c4:	mov	w2, #0x1ab                 	// #427
 4c8:	bl	0 <__assert_fail>
 4cc:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4d0:	add	x1, x1, #0x0
 4d4:	mov	x2, #0x1a                  	// #26
 4d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4dc:	mov	x1, x0
 4e0:	ldr	x0, [x0, #24]
 4e4:	b	480 <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x410>
 4e8:	mov	x0, x1
 4ec:	mov	x2, #0x1                   	// #1
 4f0:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 4f4:	add	x1, x1, #0x0
 4f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 4fc:	ldr	w22, [x27, #48]
 500:	b	42c <_ZN4llvm3mca24computeProcResourceMasksERKNS_12MCSchedModelENS_15MutableArrayRefImEE+0x3bc>
 504:	stp	x25, x26, [sp, #64]
 508:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 50c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 510:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 514:	add	x3, x3, #0x0
 518:	add	x1, x1, #0x0
 51c:	add	x0, x0, #0x0
 520:	mov	w2, #0x154                 	// #340
 524:	bl	0 <__assert_fail>
 528:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 52c:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 530:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 534:	add	x3, x3, #0x0
 538:	add	x1, x1, #0x0
 53c:	add	x0, x0, #0x0
 540:	mov	w2, #0x2b                  	// #43
 544:	stp	x25, x26, [sp, #64]
 548:	stp	x27, x28, [sp, #80]
 54c:	bl	0 <__assert_fail>
 550:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 554:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 558:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 55c:	add	x3, x3, #0x0
 560:	add	x1, x1, #0x0
 564:	add	x0, x0, #0x0
 568:	mov	w2, #0x156                 	// #342
 56c:	bl	0 <__assert_fail>

0000000000000570 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE>:
 570:	ucvtf	d1, w1
 574:	ucvtf	d0, w2
 578:	ldr	w6, [x0, #48]
 57c:	fdiv	d0, d0, d1
 580:	cbz	w6, 5dc <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x6c>
 584:	stp	x29, x30, [sp, #-16]!
 588:	mov	x1, #0x0                   	// #0
 58c:	mov	x29, sp
 590:	cmp	x4, x1
 594:	b.eq	5e0 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x70>  // b.none
 598:	ldr	w2, [x3, x1, lsl #2]
 59c:	cbz	w2, 5c8 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x58>
 5a0:	ldr	x5, [x0, #40]
 5a4:	cbz	x5, 600 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x90>
 5a8:	ldr	x5, [x0, #32]
 5ac:	ucvtf	d1, w2
 5b0:	add	x2, x5, x1, lsl #5
 5b4:	ldr	w2, [x2, #8]
 5b8:	ucvtf	d2, w2
 5bc:	fdiv	d1, d1, d2
 5c0:	fcmp	d1, d0
 5c4:	fcsel	d0, d0, d1, le
 5c8:	add	x1, x1, #0x1
 5cc:	cmp	w6, w1
 5d0:	b.hi	590 <_ZN4llvm3mca23computeBlockRThroughputERKNS_12MCSchedModelEjjNS_8ArrayRefIjEE+0x20>  // b.pmore
 5d4:	ldp	x29, x30, [sp], #16
 5d8:	ret
 5dc:	ret
 5e0:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5e4:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5e8:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 5ec:	add	x3, x3, #0x0
 5f0:	add	x1, x1, #0x0
 5f4:	add	x0, x0, #0x0
 5f8:	mov	w2, #0xfa                  	// #250
 5fc:	bl	0 <__assert_fail>
 600:	adrp	x3, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 604:	adrp	x1, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 608:	adrp	x0, 0 <_ZN4llvm3mca14ResourceCyclespLERKS1_>
 60c:	add	x3, x3, #0x0
 610:	add	x1, x1, #0x0
 614:	add	x0, x0, #0x0
 618:	mov	w2, #0x154                 	// #340
 61c:	bl	0 <__assert_fail>
