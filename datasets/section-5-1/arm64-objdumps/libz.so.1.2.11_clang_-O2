
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000022f0 <.init>:
    22f0:	stp	x29, x30, [sp, #-16]!
    22f4:	mov	x29, sp
    22f8:	bl	25b0 <adler32_z@plt+0x10>
    22fc:	ldp	x29, x30, [sp], #16
    2300:	ret

Disassembly of section .plt:

0000000000002310 <memcpy@plt-0x20>:
    2310:	stp	x16, x30, [sp, #-16]!
    2314:	adrp	x16, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    2318:	ldr	x17, [x16, #4088]
    231c:	add	x16, x16, #0xff8
    2320:	br	x17
    2324:	nop
    2328:	nop
    232c:	nop

0000000000002330 <memcpy@plt>:
    2330:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16]
    2338:	add	x16, x16, #0x0
    233c:	br	x17

0000000000002340 <crc32_z@plt>:
    2340:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #8]
    2348:	add	x16, x16, #0x8
    234c:	br	x17

0000000000002350 <gzvprintf@plt>:
    2350:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #16]
    2358:	add	x16, x16, #0x10
    235c:	br	x17

0000000000002360 <gzseek64@plt>:
    2360:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #24]
    2368:	add	x16, x16, #0x18
    236c:	br	x17

0000000000002370 <strlen@plt>:
    2370:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #32]
    2378:	add	x16, x16, #0x20
    237c:	br	x17

0000000000002380 <inflate@plt>:
    2380:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #40]
    2388:	add	x16, x16, #0x28
    238c:	br	x17

0000000000002390 <gzclose_r@plt>:
    2390:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #48]
    2398:	add	x16, x16, #0x30
    239c:	br	x17

00000000000023a0 <__cxa_finalize@plt>:
    23a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #56]
    23a8:	add	x16, x16, #0x38
    23ac:	br	x17

00000000000023b0 <crc32@plt>:
    23b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #64]
    23b8:	add	x16, x16, #0x40
    23bc:	br	x17

00000000000023c0 <snprintf@plt>:
    23c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #72]
    23c8:	add	x16, x16, #0x48
    23cc:	br	x17

00000000000023d0 <malloc@plt>:
    23d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #80]
    23d8:	add	x16, x16, #0x50
    23dc:	br	x17

00000000000023e0 <open@plt>:
    23e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #88]
    23e8:	add	x16, x16, #0x58
    23ec:	br	x17

00000000000023f0 <deflateReset@plt>:
    23f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #96]
    23f8:	add	x16, x16, #0x60
    23fc:	br	x17

0000000000002400 <deflate@plt>:
    2400:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #104]
    2408:	add	x16, x16, #0x68
    240c:	br	x17

0000000000002410 <memset@plt>:
    2410:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #112]
    2418:	add	x16, x16, #0x70
    241c:	br	x17

0000000000002420 <lseek64@plt>:
    2420:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #120]
    2428:	add	x16, x16, #0x78
    242c:	br	x17

0000000000002430 <deflateInit2_@plt>:
    2430:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #128]
    2438:	add	x16, x16, #0x80
    243c:	br	x17

0000000000002440 <deflateParams@plt>:
    2440:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #136]
    2448:	add	x16, x16, #0x88
    244c:	br	x17

0000000000002450 <deflateInit_@plt>:
    2450:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #144]
    2458:	add	x16, x16, #0x90
    245c:	br	x17

0000000000002460 <strerror@plt>:
    2460:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #152]
    2468:	add	x16, x16, #0x98
    246c:	br	x17

0000000000002470 <close@plt>:
    2470:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #160]
    2478:	add	x16, x16, #0xa0
    247c:	br	x17

0000000000002480 <__gmon_start__@plt>:
    2480:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #168]
    2488:	add	x16, x16, #0xa8
    248c:	br	x17

0000000000002490 <write@plt>:
    2490:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #176]
    2498:	add	x16, x16, #0xb0
    249c:	br	x17

00000000000024a0 <uncompress2@plt>:
    24a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #184]
    24a8:	add	x16, x16, #0xb8
    24ac:	br	x17

00000000000024b0 <inflateEnd@plt>:
    24b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #192]
    24b8:	add	x16, x16, #0xc0
    24bc:	br	x17

00000000000024c0 <adler32@plt>:
    24c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #200]
    24c8:	add	x16, x16, #0xc8
    24cc:	br	x17

00000000000024d0 <free@plt>:
    24d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #208]
    24d8:	add	x16, x16, #0xd0
    24dc:	br	x17

00000000000024e0 <gzclose_w@plt>:
    24e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #216]
    24e8:	add	x16, x16, #0xd8
    24ec:	br	x17

00000000000024f0 <deflateEnd@plt>:
    24f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #224]
    24f8:	add	x16, x16, #0xe0
    24fc:	br	x17

0000000000002500 <inflateInit_@plt>:
    2500:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #232]
    2508:	add	x16, x16, #0xe8
    250c:	br	x17

0000000000002510 <compress2@plt>:
    2510:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #240]
    2518:	add	x16, x16, #0xf0
    251c:	br	x17

0000000000002520 <read@plt>:
    2520:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #248]
    2528:	add	x16, x16, #0xf8
    252c:	br	x17

0000000000002530 <memchr@plt>:
    2530:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #256]
    2538:	add	x16, x16, #0x100
    253c:	br	x17

0000000000002540 <inflateInit2_@plt>:
    2540:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #264]
    2548:	add	x16, x16, #0x108
    254c:	br	x17

0000000000002550 <inflateReset@plt>:
    2550:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #272]
    2558:	add	x16, x16, #0x110
    255c:	br	x17

0000000000002560 <vsnprintf@plt>:
    2560:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #280]
    2568:	add	x16, x16, #0x118
    256c:	br	x17

0000000000002570 <deflateResetKeep@plt>:
    2570:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #288]
    2578:	add	x16, x16, #0x120
    257c:	br	x17

0000000000002580 <inflateReset2@plt>:
    2580:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #296]
    2588:	add	x16, x16, #0x128
    258c:	br	x17

0000000000002590 <__errno_location@plt>:
    2590:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #304]
    2598:	add	x16, x16, #0x130
    259c:	br	x17

00000000000025a0 <adler32_z@plt>:
    25a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #312]
    25a8:	add	x16, x16, #0x138
    25ac:	br	x17

Disassembly of section .text:

00000000000025b0 <adler32_z@@ZLIB_1.2.9-0xd4>:
    25b0:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    25b4:	ldr	x0, [x0, #4048]
    25b8:	cbz	x0, 25c0 <adler32_z@plt+0x20>
    25bc:	b	2480 <__gmon_start__@plt>
    25c0:	ret
    25c4:	nop
    25c8:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x155d0>
    25cc:	add	x0, x0, #0x148
    25d0:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x155d0>
    25d4:	add	x1, x1, #0x148
    25d8:	cmp	x1, x0
    25dc:	b.eq	25f4 <adler32_z@plt+0x54>  // b.none
    25e0:	adrp	x1, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    25e4:	ldr	x1, [x1, #4032]
    25e8:	cbz	x1, 25f4 <adler32_z@plt+0x54>
    25ec:	mov	x16, x1
    25f0:	br	x16
    25f4:	ret
    25f8:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x155d0>
    25fc:	add	x0, x0, #0x148
    2600:	adrp	x1, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x155d0>
    2604:	add	x1, x1, #0x148
    2608:	sub	x1, x1, x0
    260c:	lsr	x2, x1, #63
    2610:	add	x1, x2, x1, asr #3
    2614:	cmp	xzr, x1, asr #1
    2618:	asr	x1, x1, #1
    261c:	b.eq	2634 <adler32_z@plt+0x94>  // b.none
    2620:	adrp	x2, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    2624:	ldr	x2, [x2, #4064]
    2628:	cbz	x2, 2634 <adler32_z@plt+0x94>
    262c:	mov	x16, x2
    2630:	br	x16
    2634:	ret
    2638:	stp	x29, x30, [sp, #-32]!
    263c:	mov	x29, sp
    2640:	str	x19, [sp, #16]
    2644:	adrp	x19, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x155d0>
    2648:	ldrb	w0, [x19, #328]
    264c:	cbnz	w0, 2674 <adler32_z@plt+0xd4>
    2650:	adrp	x0, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    2654:	ldr	x0, [x0, #4040]
    2658:	cbz	x0, 2668 <adler32_z@plt+0xc8>
    265c:	adrp	x0, 25000 <gzclose_w@@ZLIB_1.2.3.5+0x155d0>
    2660:	ldr	x0, [x0, #320]
    2664:	bl	23a0 <__cxa_finalize@plt>
    2668:	bl	25c8 <adler32_z@plt+0x28>
    266c:	mov	w0, #0x1                   	// #1
    2670:	strb	w0, [x19, #328]
    2674:	ldr	x19, [sp, #16]
    2678:	ldp	x29, x30, [sp], #32
    267c:	ret
    2680:	b	25f8 <adler32_z@plt+0x58>

0000000000002684 <adler32_z@@ZLIB_1.2.9>:
    2684:	ubfx	x8, x0, #16, #16
    2688:	cmp	x2, #0x1
    268c:	and	x9, x0, #0xffff
    2690:	b.ne	26d4 <adler32_z@@ZLIB_1.2.9+0x50>  // b.any
    2694:	ldrb	w10, [x1]
    2698:	mov	x11, #0xffffffffffff000f    	// #-65521
    269c:	mov	w12, #0xfff0                	// #65520
    26a0:	mov	x13, #0xffffffffffff0000    	// #-65536
    26a4:	add	x9, x9, x10
    26a8:	add	x10, x9, x11
    26ac:	cmp	x9, x12
    26b0:	csel	x9, x10, x9, hi  // hi = pmore
    26b4:	add	x8, x9, x8
    26b8:	movk	x13, #0xf, lsl #16
    26bc:	lsl	x10, x8, #16
    26c0:	add	x11, x10, x13
    26c4:	cmp	x8, x12
    26c8:	csel	x8, x11, x10, hi  // hi = pmore
    26cc:	orr	x0, x8, x9
    26d0:	ret
    26d4:	cbz	x1, 2734 <adler32_z@@ZLIB_1.2.9+0xb0>
    26d8:	cmp	x2, #0x10
    26dc:	b.cs	273c <adler32_z@@ZLIB_1.2.9+0xb8>  // b.hs, b.nlast
    26e0:	cbz	x2, 26f8 <adler32_z@@ZLIB_1.2.9+0x74>
    26e4:	ldrb	w10, [x1], #1
    26e8:	subs	x2, x2, #0x1
    26ec:	add	x9, x9, x10
    26f0:	add	x8, x9, x8
    26f4:	b.ne	26e4 <adler32_z@@ZLIB_1.2.9+0x60>  // b.any
    26f8:	mov	x12, #0xc5cd                	// #50637
    26fc:	movk	x12, #0xd2f, lsl #16
    2700:	movk	x12, #0xe1, lsl #32
    2704:	mov	x10, #0xffffffffffff000f    	// #-65521
    2708:	mov	w11, #0xfff0                	// #65520
    270c:	movk	x12, #0xf, lsl #48
    2710:	add	x10, x9, x10
    2714:	cmp	x9, x11
    2718:	umulh	x11, x8, x12
    271c:	csel	x9, x10, x9, hi  // hi = pmore
    2720:	sub	x10, x8, x11
    2724:	add	x10, x11, x10, lsr #1
    2728:	lsr	x10, x10, #15
    272c:	mov	w11, #0xfff1                	// #65521
    2730:	b	29b8 <adler32_z@@ZLIB_1.2.9+0x334>
    2734:	mov	w0, #0x1                   	// #1
    2738:	ret
    273c:	lsr	x10, x2, #4
    2740:	cmp	x10, #0x15b
    2744:	b.cc	2880 <adler32_z@@ZLIB_1.2.9+0x1fc>  // b.lo, b.ul, b.last
    2748:	mov	x12, #0xc5cd                	// #50637
    274c:	movk	x12, #0xd2f, lsl #16
    2750:	movk	x12, #0xe1, lsl #32
    2754:	mov	x10, #0xffffffffffffea50    	// #-5552
    2758:	mov	w11, #0x15b0                	// #5552
    275c:	movk	x12, #0xf, lsl #48
    2760:	mov	w13, #0xfff1                	// #65521
    2764:	add	x2, x2, x10
    2768:	mov	w14, #0xfffffea5            	// #-347
    276c:	mov	x15, x1
    2770:	ldrb	w16, [x15]
    2774:	ldrb	w17, [x15, #1]
    2778:	adds	w14, w14, #0x1
    277c:	add	x9, x9, x16
    2780:	ldrb	w16, [x15, #2]
    2784:	add	x8, x9, x8
    2788:	add	x9, x9, x17
    278c:	ldrb	w17, [x15, #3]
    2790:	add	x8, x8, x9
    2794:	add	x9, x9, x16
    2798:	ldrb	w16, [x15, #4]
    279c:	add	x8, x8, x9
    27a0:	add	x9, x9, x17
    27a4:	ldrb	w17, [x15, #5]
    27a8:	add	x8, x8, x9
    27ac:	add	x9, x9, x16
    27b0:	ldrb	w16, [x15, #6]
    27b4:	add	x8, x8, x9
    27b8:	add	x9, x9, x17
    27bc:	ldrb	w17, [x15, #7]
    27c0:	add	x8, x8, x9
    27c4:	add	x9, x9, x16
    27c8:	ldrb	w16, [x15, #8]
    27cc:	add	x8, x8, x9
    27d0:	add	x9, x9, x17
    27d4:	ldrb	w17, [x15, #9]
    27d8:	add	x8, x8, x9
    27dc:	add	x9, x9, x16
    27e0:	ldrb	w16, [x15, #10]
    27e4:	add	x8, x8, x9
    27e8:	add	x9, x9, x17
    27ec:	ldrb	w17, [x15, #11]
    27f0:	add	x8, x8, x9
    27f4:	add	x9, x9, x16
    27f8:	ldrb	w16, [x15, #12]
    27fc:	add	x8, x8, x9
    2800:	add	x9, x9, x17
    2804:	ldrb	w17, [x15, #13]
    2808:	add	x8, x8, x9
    280c:	add	x9, x9, x16
    2810:	ldrb	w16, [x15, #14]
    2814:	add	x8, x8, x9
    2818:	add	x9, x9, x17
    281c:	ldrb	w17, [x15, #15]
    2820:	add	x8, x8, x9
    2824:	add	x9, x9, x16
    2828:	add	x8, x8, x9
    282c:	add	x9, x9, x17
    2830:	add	x8, x8, x9
    2834:	add	x15, x15, #0x10
    2838:	b.cc	2770 <adler32_z@@ZLIB_1.2.9+0xec>  // b.lo, b.ul, b.last
    283c:	umulh	x14, x9, x12
    2840:	umulh	x15, x8, x12
    2844:	sub	x17, x9, x14
    2848:	sub	x18, x8, x15
    284c:	add	x14, x14, x17, lsr #1
    2850:	add	x15, x15, x18, lsr #1
    2854:	lsr	x16, x2, #4
    2858:	lsr	x14, x14, #15
    285c:	lsr	x15, x15, #15
    2860:	add	x1, x1, x11
    2864:	cmp	x16, #0x15a
    2868:	msub	x9, x14, x13, x9
    286c:	msub	x8, x15, x13, x8
    2870:	b.hi	2764 <adler32_z@@ZLIB_1.2.9+0xe0>  // b.pmore
    2874:	cbz	x2, 29bc <adler32_z@@ZLIB_1.2.9+0x338>
    2878:	cmp	x2, #0x10
    287c:	b.cc	296c <adler32_z@@ZLIB_1.2.9+0x2e8>  // b.lo, b.ul, b.last
    2880:	sub	x11, x2, #0x10
    2884:	and	x12, x11, #0xfffffffffffffff0
    2888:	add	x10, x12, #0x10
    288c:	mov	x13, x1
    2890:	ldrb	w14, [x13]
    2894:	ldrb	w15, [x13, #1]
    2898:	sub	x2, x2, #0x10
    289c:	cmp	x2, #0xf
    28a0:	add	x9, x9, x14
    28a4:	ldrb	w14, [x13, #2]
    28a8:	add	x8, x9, x8
    28ac:	add	x9, x9, x15
    28b0:	ldrb	w15, [x13, #3]
    28b4:	add	x8, x8, x9
    28b8:	add	x9, x9, x14
    28bc:	ldrb	w14, [x13, #4]
    28c0:	add	x8, x8, x9
    28c4:	add	x9, x9, x15
    28c8:	ldrb	w15, [x13, #5]
    28cc:	add	x8, x8, x9
    28d0:	add	x9, x9, x14
    28d4:	ldrb	w14, [x13, #6]
    28d8:	add	x8, x8, x9
    28dc:	add	x9, x9, x15
    28e0:	ldrb	w15, [x13, #7]
    28e4:	add	x8, x8, x9
    28e8:	add	x9, x9, x14
    28ec:	ldrb	w14, [x13, #8]
    28f0:	add	x8, x8, x9
    28f4:	add	x9, x9, x15
    28f8:	ldrb	w15, [x13, #9]
    28fc:	add	x8, x8, x9
    2900:	add	x9, x9, x14
    2904:	ldrb	w14, [x13, #10]
    2908:	add	x8, x8, x9
    290c:	add	x9, x9, x15
    2910:	ldrb	w15, [x13, #11]
    2914:	add	x8, x8, x9
    2918:	add	x9, x9, x14
    291c:	ldrb	w14, [x13, #12]
    2920:	add	x8, x8, x9
    2924:	add	x9, x9, x15
    2928:	ldrb	w15, [x13, #13]
    292c:	add	x8, x8, x9
    2930:	add	x9, x9, x14
    2934:	ldrb	w14, [x13, #14]
    2938:	add	x8, x8, x9
    293c:	add	x9, x9, x15
    2940:	add	x8, x8, x9
    2944:	add	x9, x9, x14
    2948:	ldrb	w14, [x13, #15]
    294c:	add	x8, x8, x9
    2950:	add	x13, x13, #0x10
    2954:	add	x9, x9, x14
    2958:	add	x8, x8, x9
    295c:	b.hi	2890 <adler32_z@@ZLIB_1.2.9+0x20c>  // b.pmore
    2960:	subs	x2, x11, x12
    2964:	b.eq	2980 <adler32_z@@ZLIB_1.2.9+0x2fc>  // b.none
    2968:	add	x1, x1, x10
    296c:	ldrb	w10, [x1], #1
    2970:	subs	x2, x2, #0x1
    2974:	add	x9, x9, x10
    2978:	add	x8, x9, x8
    297c:	b.ne	296c <adler32_z@@ZLIB_1.2.9+0x2e8>  // b.any
    2980:	mov	x10, #0xc5cd                	// #50637
    2984:	movk	x10, #0xd2f, lsl #16
    2988:	movk	x10, #0xe1, lsl #32
    298c:	movk	x10, #0xf, lsl #48
    2990:	umulh	x12, x9, x10
    2994:	umulh	x10, x8, x10
    2998:	sub	x13, x9, x12
    299c:	sub	x14, x8, x10
    29a0:	add	x12, x12, x13, lsr #1
    29a4:	mov	w11, #0xfff1                	// #65521
    29a8:	add	x10, x10, x14, lsr #1
    29ac:	lsr	x12, x12, #15
    29b0:	lsr	x10, x10, #15
    29b4:	msub	x9, x12, x11, x9
    29b8:	msub	x8, x10, x11, x8
    29bc:	orr	x0, x9, x8, lsl #16
    29c0:	ret

00000000000029c4 <adler32@@Base>:
    29c4:	mov	w2, w2
    29c8:	b	25a0 <adler32_z@plt>

00000000000029cc <adler32_combine@@ZLIB_1.2.2>:
    29cc:	tbnz	x2, #63, 2a88 <adler32_combine@@ZLIB_1.2.2+0xbc>
    29d0:	mov	x8, #0xc5cd                	// #50637
    29d4:	movk	x8, #0xd2f, lsl #16
    29d8:	movk	x8, #0xe1, lsl #32
    29dc:	movk	x8, #0xf, lsl #48
    29e0:	and	x10, x0, #0xffff
    29e4:	ubfx	x12, x0, #16, #16
    29e8:	lsr	x13, x1, #16
    29ec:	umulh	x8, x2, x8
    29f0:	mov	w11, #0xfff0                	// #65520
    29f4:	add	x14, x10, w1, uxth
    29f8:	add	x12, x12, w13, uxth
    29fc:	sub	x13, x2, x8
    2a00:	add	x8, x8, x13, lsr #1
    2a04:	add	x13, x14, x11
    2a08:	mov	w9, #0xfff1                	// #65521
    2a0c:	sub	x14, x14, #0x1
    2a10:	cmp	x13, x11
    2a14:	lsr	x8, x8, #15
    2a18:	csel	x13, x14, x13, hi  // hi = pmore
    2a1c:	mov	w14, #0x8071                	// #32881
    2a20:	msub	x8, x8, x9, x2
    2a24:	movk	w14, #0x8007, lsl #16
    2a28:	mul	x10, x8, x10
    2a2c:	mul	x14, x10, x14
    2a30:	mov	x15, #0xffffffffffff000f    	// #-65521
    2a34:	lsr	x14, x14, #47
    2a38:	sub	x8, x12, x8
    2a3c:	add	x12, x13, x15
    2a40:	cmp	x13, x11
    2a44:	msub	w10, w14, w9, w10
    2a48:	csel	x12, x12, x13, hi  // hi = pmore
    2a4c:	mov	w13, #0xffe1                	// #65505
    2a50:	add	x8, x8, x10
    2a54:	movk	w13, #0x1, lsl #16
    2a58:	add	x9, x8, x9
    2a5c:	add	x8, x8, x15
    2a60:	cmp	x9, x13
    2a64:	mov	x14, #0xffffffffffff0000    	// #-65536
    2a68:	csel	x8, x8, x9, hi  // hi = pmore
    2a6c:	movk	x14, #0xf, lsl #16
    2a70:	lsl	x9, x8, #16
    2a74:	add	x10, x9, x14
    2a78:	cmp	x8, x11
    2a7c:	csel	x8, x10, x9, hi  // hi = pmore
    2a80:	orr	x0, x8, x12
    2a84:	ret
    2a88:	mov	w0, #0xffffffff            	// #-1
    2a8c:	ret

0000000000002a90 <adler32_combine64@@ZLIB_1.2.3.3>:
    2a90:	tbnz	x2, #63, 2b4c <adler32_combine64@@ZLIB_1.2.3.3+0xbc>
    2a94:	mov	x8, #0xc5cd                	// #50637
    2a98:	movk	x8, #0xd2f, lsl #16
    2a9c:	movk	x8, #0xe1, lsl #32
    2aa0:	movk	x8, #0xf, lsl #48
    2aa4:	and	x10, x0, #0xffff
    2aa8:	ubfx	x12, x0, #16, #16
    2aac:	lsr	x13, x1, #16
    2ab0:	umulh	x8, x2, x8
    2ab4:	mov	w11, #0xfff0                	// #65520
    2ab8:	add	x14, x10, w1, uxth
    2abc:	add	x12, x12, w13, uxth
    2ac0:	sub	x13, x2, x8
    2ac4:	add	x8, x8, x13, lsr #1
    2ac8:	add	x13, x14, x11
    2acc:	mov	w9, #0xfff1                	// #65521
    2ad0:	sub	x14, x14, #0x1
    2ad4:	cmp	x13, x11
    2ad8:	lsr	x8, x8, #15
    2adc:	csel	x13, x14, x13, hi  // hi = pmore
    2ae0:	mov	w14, #0x8071                	// #32881
    2ae4:	msub	x8, x8, x9, x2
    2ae8:	movk	w14, #0x8007, lsl #16
    2aec:	mul	x10, x8, x10
    2af0:	mul	x14, x10, x14
    2af4:	mov	x15, #0xffffffffffff000f    	// #-65521
    2af8:	lsr	x14, x14, #47
    2afc:	sub	x8, x12, x8
    2b00:	add	x12, x13, x15
    2b04:	cmp	x13, x11
    2b08:	msub	w10, w14, w9, w10
    2b0c:	csel	x12, x12, x13, hi  // hi = pmore
    2b10:	mov	w13, #0xffe1                	// #65505
    2b14:	add	x8, x8, x10
    2b18:	movk	w13, #0x1, lsl #16
    2b1c:	add	x9, x8, x9
    2b20:	add	x8, x8, x15
    2b24:	cmp	x9, x13
    2b28:	mov	x14, #0xffffffffffff0000    	// #-65536
    2b2c:	csel	x8, x8, x9, hi  // hi = pmore
    2b30:	movk	x14, #0xf, lsl #16
    2b34:	lsl	x9, x8, #16
    2b38:	add	x10, x9, x14
    2b3c:	cmp	x8, x11
    2b40:	csel	x8, x10, x9, hi  // hi = pmore
    2b44:	orr	x0, x8, x12
    2b48:	ret
    2b4c:	mov	w0, #0xffffffff            	// #-1
    2b50:	ret

0000000000002b54 <get_crc_table@@Base>:
    2b54:	adrp	x0, f000 <gzwrite@@Base+0x1ac>
    2b58:	add	x0, x0, #0xca0
    2b5c:	ret

0000000000002b60 <crc32_z@@ZLIB_1.2.9>:
    2b60:	cbz	x1, 2bd0 <crc32_z@@ZLIB_1.2.9+0x70>
    2b64:	adrp	x8, f000 <gzwrite@@Base+0x1ac>
    2b68:	mvn	w9, w0
    2b6c:	add	x8, x8, #0xca0
    2b70:	cbz	x2, 2b98 <crc32_z@@ZLIB_1.2.9+0x38>
    2b74:	and	x10, x1, #0x3
    2b78:	cbz	x10, 2b98 <crc32_z@@ZLIB_1.2.9+0x38>
    2b7c:	ldrb	w10, [x1], #1
    2b80:	and	w11, w9, #0xff
    2b84:	subs	x2, x2, #0x1
    2b88:	eor	w10, w11, w10
    2b8c:	ldr	w10, [x8, w10, uxtw #2]
    2b90:	eor	w9, w10, w9, lsr #8
    2b94:	b.ne	2b74 <crc32_z@@ZLIB_1.2.9+0x14>  // b.any
    2b98:	subs	x10, x2, #0x20
    2b9c:	b.cs	2bd8 <crc32_z@@ZLIB_1.2.9+0x78>  // b.hs, b.nlast
    2ba0:	subs	x10, x2, #0x4
    2ba4:	b.cs	2da0 <crc32_z@@ZLIB_1.2.9+0x240>  // b.hs, b.nlast
    2ba8:	cbz	x2, 2bc8 <crc32_z@@ZLIB_1.2.9+0x68>
    2bac:	ldrb	w10, [x1], #1
    2bb0:	and	w11, w9, #0xff
    2bb4:	subs	x2, x2, #0x1
    2bb8:	eor	w10, w11, w10
    2bbc:	ldr	w10, [x8, w10, uxtw #2]
    2bc0:	eor	w9, w10, w9, lsr #8
    2bc4:	b.ne	2bac <crc32_z@@ZLIB_1.2.9+0x4c>  // b.any
    2bc8:	mvn	w0, w9
    2bcc:	ret
    2bd0:	mov	x0, xzr
    2bd4:	ret
    2bd8:	and	x12, x10, #0xffffffffffffffe0
    2bdc:	add	x11, x12, x1
    2be0:	add	x11, x11, #0x20
    2be4:	ldp	w16, w17, [x1]
    2be8:	add	x13, x8, #0xc00
    2bec:	add	x14, x8, #0x800
    2bf0:	add	x15, x8, #0x400
    2bf4:	eor	w9, w16, w9
    2bf8:	and	w16, w9, #0xff
    2bfc:	ubfx	w18, w9, #8, #8
    2c00:	ubfx	w0, w9, #16, #8
    2c04:	ldr	w16, [x13, w16, uxtw #2]
    2c08:	ldr	w18, [x14, w18, uxtw #2]
    2c0c:	lsr	w9, w9, #24
    2c10:	ldr	w0, [x15, w0, uxtw #2]
    2c14:	ldr	w9, [x8, w9, uxtw #2]
    2c18:	eor	w16, w18, w16
    2c1c:	sub	x2, x2, #0x20
    2c20:	eor	w16, w16, w0
    2c24:	eor	w9, w16, w9
    2c28:	eor	w9, w9, w17
    2c2c:	and	w16, w9, #0xff
    2c30:	ubfx	w17, w9, #8, #8
    2c34:	ldr	w16, [x13, w16, uxtw #2]
    2c38:	ldr	w17, [x14, w17, uxtw #2]
    2c3c:	ubfx	w18, w9, #16, #8
    2c40:	lsr	w9, w9, #24
    2c44:	ldr	w18, [x15, w18, uxtw #2]
    2c48:	ldr	w9, [x8, w9, uxtw #2]
    2c4c:	eor	w16, w17, w16
    2c50:	ldp	w17, w0, [x1, #8]
    2c54:	eor	w16, w16, w18
    2c58:	eor	w9, w16, w9
    2c5c:	cmp	x2, #0x1f
    2c60:	eor	w9, w9, w17
    2c64:	and	w16, w9, #0xff
    2c68:	ubfx	w17, w9, #8, #8
    2c6c:	ubfx	w18, w9, #16, #8
    2c70:	ldr	w16, [x13, w16, uxtw #2]
    2c74:	ldr	w17, [x14, w17, uxtw #2]
    2c78:	lsr	w9, w9, #24
    2c7c:	ldr	w18, [x15, w18, uxtw #2]
    2c80:	ldr	w9, [x8, w9, uxtw #2]
    2c84:	eor	w16, w17, w16
    2c88:	eor	w16, w16, w18
    2c8c:	eor	w9, w16, w9
    2c90:	eor	w9, w9, w0
    2c94:	and	w16, w9, #0xff
    2c98:	ubfx	w17, w9, #8, #8
    2c9c:	ldr	w16, [x13, w16, uxtw #2]
    2ca0:	ldr	w17, [x14, w17, uxtw #2]
    2ca4:	ubfx	w18, w9, #16, #8
    2ca8:	lsr	w9, w9, #24
    2cac:	ldr	w18, [x15, w18, uxtw #2]
    2cb0:	ldr	w9, [x8, w9, uxtw #2]
    2cb4:	eor	w16, w17, w16
    2cb8:	ldp	w17, w0, [x1, #16]
    2cbc:	eor	w16, w16, w18
    2cc0:	eor	w9, w16, w9
    2cc4:	eor	w9, w9, w17
    2cc8:	and	w16, w9, #0xff
    2ccc:	ubfx	w17, w9, #8, #8
    2cd0:	ubfx	w18, w9, #16, #8
    2cd4:	ldr	w16, [x13, w16, uxtw #2]
    2cd8:	ldr	w17, [x14, w17, uxtw #2]
    2cdc:	lsr	w9, w9, #24
    2ce0:	ldr	w18, [x15, w18, uxtw #2]
    2ce4:	ldr	w9, [x8, w9, uxtw #2]
    2ce8:	eor	w16, w17, w16
    2cec:	eor	w16, w16, w18
    2cf0:	eor	w9, w16, w9
    2cf4:	eor	w9, w9, w0
    2cf8:	and	w16, w9, #0xff
    2cfc:	ubfx	w17, w9, #8, #8
    2d00:	ldr	w16, [x13, w16, uxtw #2]
    2d04:	ldr	w17, [x14, w17, uxtw #2]
    2d08:	ubfx	w18, w9, #16, #8
    2d0c:	lsr	w9, w9, #24
    2d10:	ldr	w18, [x15, w18, uxtw #2]
    2d14:	ldr	w9, [x8, w9, uxtw #2]
    2d18:	eor	w16, w17, w16
    2d1c:	ldp	w17, w0, [x1, #24]
    2d20:	eor	w16, w16, w18
    2d24:	eor	w9, w16, w9
    2d28:	add	x1, x1, #0x20
    2d2c:	eor	w9, w9, w17
    2d30:	and	w16, w9, #0xff
    2d34:	ubfx	w17, w9, #8, #8
    2d38:	ubfx	w18, w9, #16, #8
    2d3c:	ldr	w16, [x13, w16, uxtw #2]
    2d40:	ldr	w17, [x14, w17, uxtw #2]
    2d44:	ldr	w18, [x15, w18, uxtw #2]
    2d48:	lsr	w9, w9, #24
    2d4c:	ldr	w9, [x8, w9, uxtw #2]
    2d50:	eor	w16, w17, w16
    2d54:	eor	w16, w16, w18
    2d58:	eor	w9, w16, w9
    2d5c:	eor	w9, w9, w0
    2d60:	and	w16, w9, #0xff
    2d64:	ubfx	w17, w9, #8, #8
    2d68:	ldr	w13, [x13, w16, uxtw #2]
    2d6c:	ubfx	w16, w9, #16, #8
    2d70:	ldr	w14, [x14, w17, uxtw #2]
    2d74:	lsr	w9, w9, #24
    2d78:	ldr	w15, [x15, w16, uxtw #2]
    2d7c:	ldr	w9, [x8, w9, uxtw #2]
    2d80:	eor	w13, w14, w13
    2d84:	eor	w13, w13, w15
    2d88:	eor	w9, w13, w9
    2d8c:	b.hi	2be4 <crc32_z@@ZLIB_1.2.9+0x84>  // b.pmore
    2d90:	sub	x2, x10, x12
    2d94:	mov	x1, x11
    2d98:	subs	x10, x2, #0x4
    2d9c:	b.cc	2ba8 <crc32_z@@ZLIB_1.2.9+0x48>  // b.lo, b.ul, b.last
    2da0:	lsr	x11, x10, #2
    2da4:	mov	x12, x1
    2da8:	ldr	w13, [x12], #4
    2dac:	sub	x2, x2, #0x4
    2db0:	cmp	x2, #0x3
    2db4:	eor	w9, w13, w9
    2db8:	and	w13, w9, #0xff
    2dbc:	ubfx	w14, w9, #8, #8
    2dc0:	add	x13, x8, w13, uxtw #2
    2dc4:	add	x14, x8, w14, uxtw #2
    2dc8:	ldr	w13, [x13, #3072]
    2dcc:	ldr	w14, [x14, #2048]
    2dd0:	eor	w13, w14, w13
    2dd4:	ubfx	w14, w9, #16, #8
    2dd8:	add	x14, x8, w14, uxtw #2
    2ddc:	ldr	w14, [x14, #1024]
    2de0:	lsr	w9, w9, #24
    2de4:	ldr	w9, [x8, w9, uxtw #2]
    2de8:	eor	w13, w13, w14
    2dec:	eor	w9, w13, w9
    2df0:	b.hi	2da8 <crc32_z@@ZLIB_1.2.9+0x248>  // b.pmore
    2df4:	add	x11, x1, x11, lsl #2
    2df8:	add	x1, x11, #0x4
    2dfc:	and	x2, x10, #0x3
    2e00:	cbnz	x2, 2bac <crc32_z@@ZLIB_1.2.9+0x4c>
    2e04:	b	2bc8 <crc32_z@@ZLIB_1.2.9+0x68>

0000000000002e08 <crc32@@Base>:
    2e08:	mov	w2, w2
    2e0c:	b	2340 <crc32_z@plt>

0000000000002e10 <crc32_combine@@ZLIB_1.2.2>:
    2e10:	b	2e14 <crc32_combine@@ZLIB_1.2.2+0x4>
    2e14:	str	x29, [sp, #-16]!
    2e18:	sub	sp, sp, #0x200
    2e1c:	cmp	x2, #0x1
    2e20:	b.lt	30a0 <crc32_combine@@ZLIB_1.2.2+0x290>  // b.tstop
    2e24:	adrp	x9, f000 <gzwrite@@Base+0x1ac>
    2e28:	adrp	x10, f000 <gzwrite@@Base+0x1ac>
    2e2c:	ldr	q0, [x9, #2976]
    2e30:	ldr	q1, [x10, #2992]
    2e34:	adrp	x11, f000 <gzwrite@@Base+0x1ac>
    2e38:	adrp	x9, f000 <gzwrite@@Base+0x1ac>
    2e3c:	ldr	q2, [x11, #3008]
    2e40:	adrp	x11, f000 <gzwrite@@Base+0x1ac>
    2e44:	ldr	q3, [x9, #3024]
    2e48:	adrp	x9, f000 <gzwrite@@Base+0x1ac>
    2e4c:	ldr	q5, [x11, #3056]
    2e50:	adrp	x11, f000 <gzwrite@@Base+0x1ac>
    2e54:	ldr	q6, [x9, #3072]
    2e58:	adrp	x9, f000 <gzwrite@@Base+0x1ac>
    2e5c:	adrp	x10, f000 <gzwrite@@Base+0x1ac>
    2e60:	ldr	q16, [x11, #3104]
    2e64:	stp	q0, q1, [sp]
    2e68:	ldr	q0, [x9, #3120]
    2e6c:	ldr	q4, [x10, #3040]
    2e70:	adrp	x10, f000 <gzwrite@@Base+0x1ac>
    2e74:	ldr	q7, [x10, #3088]
    2e78:	adrp	x10, f000 <gzwrite@@Base+0x1ac>
    2e7c:	adrp	x11, f000 <gzwrite@@Base+0x1ac>
    2e80:	adrp	x9, f000 <gzwrite@@Base+0x1ac>
    2e84:	ldr	q1, [x10, #3136]
    2e88:	adrp	x10, f000 <gzwrite@@Base+0x1ac>
    2e8c:	stp	q2, q3, [sp, #32]
    2e90:	ldr	q2, [x11, #3152]
    2e94:	ldr	q3, [x9, #3168]
    2e98:	stp	q16, q0, [sp, #128]
    2e9c:	ldr	q0, [x10, #3184]
    2ea0:	adrp	x11, f000 <gzwrite@@Base+0x1ac>
    2ea4:	adrp	x9, f000 <gzwrite@@Base+0x1ac>
    2ea8:	stp	q1, q2, [sp, #160]
    2eac:	ldr	q1, [x11, #3200]
    2eb0:	stp	q3, q0, [sp, #192]
    2eb4:	ldr	q0, [x9, #3216]
    2eb8:	mov	w11, #0x8320                	// #33568
    2ebc:	mov	x8, xzr
    2ec0:	movk	w11, #0xedb8, lsl #16
    2ec4:	add	x9, sp, #0x100
    2ec8:	mov	x10, sp
    2ecc:	stp	q4, q5, [sp, #64]
    2ed0:	stp	q6, q7, [sp, #96]
    2ed4:	stp	q1, q0, [sp, #224]
    2ed8:	mov	x12, xzr
    2edc:	cbz	x11, 2f04 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2ee0:	mov	x13, sp
    2ee4:	b	2ef4 <crc32_combine@@ZLIB_1.2.2+0xe4>
    2ee8:	lsr	x11, x11, #1
    2eec:	add	x13, x13, #0x8
    2ef0:	cbz	x11, 2f04 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2ef4:	tbz	w11, #0, 2ee8 <crc32_combine@@ZLIB_1.2.2+0xd8>
    2ef8:	ldr	x14, [x13]
    2efc:	eor	x12, x14, x12
    2f00:	b	2ee8 <crc32_combine@@ZLIB_1.2.2+0xd8>
    2f04:	str	x12, [x9, x8, lsl #3]
    2f08:	add	x8, x8, #0x1
    2f0c:	cmp	x8, #0x20
    2f10:	b.eq	2f24 <crc32_combine@@ZLIB_1.2.2+0x114>  // b.none
    2f14:	ldr	x11, [x10, x8, lsl #3]
    2f18:	mov	x12, xzr
    2f1c:	cbnz	x11, 2ee0 <crc32_combine@@ZLIB_1.2.2+0xd0>
    2f20:	b	2f04 <crc32_combine@@ZLIB_1.2.2+0xf4>
    2f24:	mov	x8, xzr
    2f28:	add	x9, sp, #0x100
    2f2c:	mov	x10, sp
    2f30:	b	2f48 <crc32_combine@@ZLIB_1.2.2+0x138>
    2f34:	mov	x11, xzr
    2f38:	str	x11, [x10, x8, lsl #3]
    2f3c:	add	x8, x8, #0x1
    2f40:	cmp	x8, #0x20
    2f44:	b.eq	2f78 <crc32_combine@@ZLIB_1.2.2+0x168>  // b.none
    2f48:	ldr	x12, [x9, x8, lsl #3]
    2f4c:	cbz	x12, 2f34 <crc32_combine@@ZLIB_1.2.2+0x124>
    2f50:	mov	x11, xzr
    2f54:	add	x13, sp, #0x100
    2f58:	b	2f68 <crc32_combine@@ZLIB_1.2.2+0x158>
    2f5c:	lsr	x12, x12, #1
    2f60:	add	x13, x13, #0x8
    2f64:	cbz	x12, 2f38 <crc32_combine@@ZLIB_1.2.2+0x128>
    2f68:	tbz	w12, #0, 2f5c <crc32_combine@@ZLIB_1.2.2+0x14c>
    2f6c:	ldr	x14, [x13]
    2f70:	eor	x11, x14, x11
    2f74:	b	2f5c <crc32_combine@@ZLIB_1.2.2+0x14c>
    2f78:	mov	x8, sp
    2f7c:	add	x9, sp, #0x100
    2f80:	b	2f90 <crc32_combine@@ZLIB_1.2.2+0x180>
    2f84:	mov	x0, x10
    2f88:	asr	x2, x2, #2
    2f8c:	cbz	x2, 309c <crc32_combine@@ZLIB_1.2.2+0x28c>
    2f90:	mov	x10, xzr
    2f94:	b	2fac <crc32_combine@@ZLIB_1.2.2+0x19c>
    2f98:	mov	x11, xzr
    2f9c:	str	x11, [x9, x10, lsl #3]
    2fa0:	add	x10, x10, #0x1
    2fa4:	cmp	x10, #0x20
    2fa8:	b.eq	2fdc <crc32_combine@@ZLIB_1.2.2+0x1cc>  // b.none
    2fac:	ldr	x12, [x8, x10, lsl #3]
    2fb0:	cbz	x12, 2f98 <crc32_combine@@ZLIB_1.2.2+0x188>
    2fb4:	mov	x11, xzr
    2fb8:	mov	x13, sp
    2fbc:	b	2fcc <crc32_combine@@ZLIB_1.2.2+0x1bc>
    2fc0:	lsr	x12, x12, #1
    2fc4:	add	x13, x13, #0x8
    2fc8:	cbz	x12, 2f9c <crc32_combine@@ZLIB_1.2.2+0x18c>
    2fcc:	tbz	w12, #0, 2fc0 <crc32_combine@@ZLIB_1.2.2+0x1b0>
    2fd0:	ldr	x14, [x13]
    2fd4:	eor	x11, x14, x11
    2fd8:	b	2fc0 <crc32_combine@@ZLIB_1.2.2+0x1b0>
    2fdc:	tbnz	w2, #0, 2fe8 <crc32_combine@@ZLIB_1.2.2+0x1d8>
    2fe0:	mov	x10, x0
    2fe4:	b	2ff0 <crc32_combine@@ZLIB_1.2.2+0x1e0>
    2fe8:	mov	x10, xzr
    2fec:	cbnz	x0, 3074 <crc32_combine@@ZLIB_1.2.2+0x264>
    2ff0:	cmp	x2, #0x2
    2ff4:	b.cc	3098 <crc32_combine@@ZLIB_1.2.2+0x288>  // b.lo, b.ul, b.last
    2ff8:	mov	x11, xzr
    2ffc:	b	3014 <crc32_combine@@ZLIB_1.2.2+0x204>
    3000:	mov	x12, xzr
    3004:	str	x12, [x8, x11, lsl #3]
    3008:	add	x11, x11, #0x1
    300c:	cmp	x11, #0x20
    3010:	b.eq	3044 <crc32_combine@@ZLIB_1.2.2+0x234>  // b.none
    3014:	ldr	x13, [x9, x11, lsl #3]
    3018:	cbz	x13, 3000 <crc32_combine@@ZLIB_1.2.2+0x1f0>
    301c:	mov	x12, xzr
    3020:	add	x14, sp, #0x100
    3024:	b	3034 <crc32_combine@@ZLIB_1.2.2+0x224>
    3028:	lsr	x13, x13, #1
    302c:	add	x14, x14, #0x8
    3030:	cbz	x13, 3004 <crc32_combine@@ZLIB_1.2.2+0x1f4>
    3034:	tbz	w13, #0, 3028 <crc32_combine@@ZLIB_1.2.2+0x218>
    3038:	ldr	x15, [x14]
    303c:	eor	x12, x15, x12
    3040:	b	3028 <crc32_combine@@ZLIB_1.2.2+0x218>
    3044:	tbz	w2, #1, 2f84 <crc32_combine@@ZLIB_1.2.2+0x174>
    3048:	mov	x0, xzr
    304c:	cbz	x10, 2f88 <crc32_combine@@ZLIB_1.2.2+0x178>
    3050:	mov	x11, sp
    3054:	b	3064 <crc32_combine@@ZLIB_1.2.2+0x254>
    3058:	lsr	x10, x10, #1
    305c:	add	x11, x11, #0x8
    3060:	cbz	x10, 2f88 <crc32_combine@@ZLIB_1.2.2+0x178>
    3064:	tbz	w10, #0, 3058 <crc32_combine@@ZLIB_1.2.2+0x248>
    3068:	ldr	x12, [x11]
    306c:	eor	x0, x12, x0
    3070:	b	3058 <crc32_combine@@ZLIB_1.2.2+0x248>
    3074:	add	x11, sp, #0x100
    3078:	b	3088 <crc32_combine@@ZLIB_1.2.2+0x278>
    307c:	lsr	x0, x0, #1
    3080:	add	x11, x11, #0x8
    3084:	cbz	x0, 2ff0 <crc32_combine@@ZLIB_1.2.2+0x1e0>
    3088:	tbz	w0, #0, 307c <crc32_combine@@ZLIB_1.2.2+0x26c>
    308c:	ldr	x12, [x11]
    3090:	eor	x10, x12, x10
    3094:	b	307c <crc32_combine@@ZLIB_1.2.2+0x26c>
    3098:	mov	x0, x10
    309c:	eor	x0, x0, x1
    30a0:	add	sp, sp, #0x200
    30a4:	ldr	x29, [sp], #16
    30a8:	ret

00000000000030ac <crc32_combine64@@ZLIB_1.2.3.3>:
    30ac:	b	2e14 <crc32_combine@@ZLIB_1.2.2+0x4>

00000000000030b0 <deflateInit_@@Base>:
    30b0:	mov	w7, w3
    30b4:	mov	x6, x2
    30b8:	mov	w2, #0x8                   	// #8
    30bc:	mov	w3, #0xf                   	// #15
    30c0:	mov	w4, #0x8                   	// #8
    30c4:	mov	w5, wzr
    30c8:	b	2430 <deflateInit2_@plt>

00000000000030cc <deflateInit2_@@Base>:
    30cc:	stp	x29, x30, [sp, #-80]!
    30d0:	stp	x26, x25, [sp, #16]
    30d4:	stp	x24, x23, [sp, #32]
    30d8:	stp	x22, x21, [sp, #48]
    30dc:	stp	x20, x19, [sp, #64]
    30e0:	mov	x29, sp
    30e4:	cbz	x6, 314c <deflateInit2_@@Base+0x80>
    30e8:	mov	x19, x0
    30ec:	cmp	w7, #0x70
    30f0:	mov	w0, #0xfffffffa            	// #-6
    30f4:	b.ne	33ac <deflateInit2_@@Base+0x2e0>  // b.any
    30f8:	ldrb	w8, [x6]
    30fc:	cmp	w8, #0x31
    3100:	b.ne	33ac <deflateInit2_@@Base+0x2e0>  // b.any
    3104:	cbz	x19, 31c8 <deflateInit2_@@Base+0xfc>
    3108:	ldr	x8, [x19, #64]
    310c:	mov	w20, w5
    3110:	mov	w21, w4
    3114:	str	xzr, [x19, #48]
    3118:	cbz	x8, 3154 <deflateInit2_@@Base+0x88>
    311c:	ldr	x9, [x19, #72]
    3120:	cbz	x9, 316c <deflateInit2_@@Base+0xa0>
    3124:	cmn	w1, #0x1
    3128:	mov	w9, #0x6                   	// #6
    312c:	csel	w23, w9, w1, eq  // eq = none
    3130:	tbnz	w3, #31, 317c <deflateInit2_@@Base+0xb0>
    3134:	sub	w9, w3, #0x10
    3138:	cmp	w3, #0xf
    313c:	mov	w10, #0x1                   	// #1
    3140:	csel	w9, w9, w3, gt
    3144:	cinc	w25, w10, gt
    3148:	b	3184 <deflateInit2_@@Base+0xb8>
    314c:	mov	w0, #0xfffffffa            	// #-6
    3150:	b	33ac <deflateInit2_@@Base+0x2e0>
    3154:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    3158:	add	x8, x8, #0x4b4
    315c:	str	x8, [x19, #64]
    3160:	str	xzr, [x19, #80]
    3164:	ldr	x9, [x19, #72]
    3168:	cbnz	x9, 3124 <deflateInit2_@@Base+0x58>
    316c:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    3170:	add	x9, x9, #0x4bc
    3174:	str	x9, [x19, #72]
    3178:	b	3124 <deflateInit2_@@Base+0x58>
    317c:	mov	w25, wzr
    3180:	neg	w9, w3
    3184:	cmp	w20, #0x4
    3188:	mov	w0, #0xfffffffe            	// #-2
    318c:	b.hi	33ac <deflateInit2_@@Base+0x2e0>  // b.pmore
    3190:	cmp	w23, #0x9
    3194:	b.hi	33ac <deflateInit2_@@Base+0x2e0>  // b.pmore
    3198:	cmp	w2, #0x8
    319c:	b.ne	33ac <deflateInit2_@@Base+0x2e0>  // b.any
    31a0:	sub	w10, w21, #0x1
    31a4:	cmp	w10, #0x8
    31a8:	b.hi	33ac <deflateInit2_@@Base+0x2e0>  // b.pmore
    31ac:	and	w10, w9, #0xfffffff8
    31b0:	cmp	w10, #0x8
    31b4:	b.ne	33ac <deflateInit2_@@Base+0x2e0>  // b.any
    31b8:	cmp	w9, #0x8
    31bc:	b.ne	31d0 <deflateInit2_@@Base+0x104>  // b.any
    31c0:	cmp	w25, #0x1
    31c4:	b.eq	31d0 <deflateInit2_@@Base+0x104>  // b.none
    31c8:	mov	w0, #0xfffffffe            	// #-2
    31cc:	b	33ac <deflateInit2_@@Base+0x2e0>
    31d0:	ldr	x0, [x19, #80]
    31d4:	cmp	w9, #0x8
    31d8:	mov	w10, #0x9                   	// #9
    31dc:	mov	w1, #0x1                   	// #1
    31e0:	mov	w2, #0x1740                	// #5952
    31e4:	csel	w26, w10, w9, eq  // eq = none
    31e8:	mov	w24, #0x1                   	// #1
    31ec:	blr	x8
    31f0:	cbz	x0, 33a8 <deflateInit2_@@Base+0x2dc>
    31f4:	mov	w8, #0x2a                  	// #42
    31f8:	lsl	w1, w24, w26
    31fc:	str	x0, [x19, #56]
    3200:	str	w8, [x0, #8]
    3204:	sub	w8, w1, #0x1
    3208:	add	w10, w21, #0x9
    320c:	stp	w26, w8, [x0, #84]
    3210:	mov	w8, #0xaaab                	// #43691
    3214:	add	w9, w21, #0x7
    3218:	movk	w8, #0xaaaa, lsl #16
    321c:	and	w10, w10, #0xff
    3220:	umull	x8, w10, w8
    3224:	lsl	w10, w24, w9
    3228:	stp	w10, w9, [x0, #132]
    322c:	sub	w9, w10, #0x1
    3230:	lsr	x8, x8, #33
    3234:	str	x19, [x0]
    3238:	str	w25, [x0, #48]
    323c:	str	xzr, [x0, #56]
    3240:	str	w1, [x0, #80]
    3244:	stp	w9, w8, [x0, #140]
    3248:	mov	x22, x0
    324c:	ldr	x8, [x19, #64]
    3250:	ldr	x0, [x19, #80]
    3254:	mov	w2, #0x2                   	// #2
    3258:	blr	x8
    325c:	str	x0, [x22, #96]
    3260:	ldr	x8, [x19, #64]
    3264:	ldr	x0, [x19, #80]
    3268:	ldr	w1, [x22, #80]
    326c:	mov	w2, #0x2                   	// #2
    3270:	blr	x8
    3274:	str	x0, [x22, #112]
    3278:	ldr	x8, [x19, #64]
    327c:	ldr	x0, [x19, #80]
    3280:	ldr	w1, [x22, #132]
    3284:	mov	w2, #0x2                   	// #2
    3288:	blr	x8
    328c:	add	w8, w21, #0x6
    3290:	lsl	w1, w24, w8
    3294:	str	x0, [x22, #120]
    3298:	str	xzr, [x22, #5944]
    329c:	str	w1, [x22, #5896]
    32a0:	ldr	x8, [x19, #64]
    32a4:	ldr	x0, [x19, #80]
    32a8:	mov	w2, #0x4                   	// #4
    32ac:	blr	x8
    32b0:	ldr	w8, [x22, #5896]
    32b4:	ldr	x9, [x22, #96]
    32b8:	lsl	x10, x8, #2
    32bc:	stp	x0, x10, [x22, #16]
    32c0:	cbz	x9, 3388 <deflateInit2_@@Base+0x2bc>
    32c4:	ldr	x9, [x22, #112]
    32c8:	cbz	x9, 3388 <deflateInit2_@@Base+0x2bc>
    32cc:	cbz	x0, 3388 <deflateInit2_@@Base+0x2bc>
    32d0:	ldr	x9, [x22, #120]
    32d4:	cbz	x9, 3388 <deflateInit2_@@Base+0x2bc>
    32d8:	and	w9, w8, #0xfffffffe
    32dc:	add	x8, x8, x8, lsl #1
    32e0:	mov	w10, #0x8                   	// #8
    32e4:	add	x9, x0, x9
    32e8:	add	x8, x0, x8
    32ec:	mov	x0, x19
    32f0:	stp	w23, w20, [x22, #196]
    32f4:	str	x9, [x22, #5904]
    32f8:	str	x8, [x22, #5888]
    32fc:	strb	w10, [x22, #72]
    3300:	bl	2570 <deflateResetKeep@plt>
    3304:	cbnz	w0, 33ac <deflateInit2_@@Base+0x2e0>
    3308:	ldr	x19, [x19, #56]
    330c:	mov	w1, wzr
    3310:	ldr	w9, [x19, #132]
    3314:	ldr	w8, [x19, #80]
    3318:	ldr	x0, [x19, #120]
    331c:	sub	w9, w9, #0x1
    3320:	lsl	x8, x8, #1
    3324:	lsl	x2, x9, #1
    3328:	str	x8, [x19, #104]
    332c:	strh	wzr, [x0, x2]
    3330:	bl	2410 <memset@plt>
    3334:	ldrsw	x8, [x19, #196]
    3338:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    333c:	add	x9, x9, #0xc68
    3340:	adrp	x10, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    3344:	ldr	d0, [x10, #3232]
    3348:	mov	w10, #0x2                   	// #2
    334c:	add	x8, x9, x8, lsl #4
    3350:	str	w10, [x19, #160]
    3354:	ldrh	w9, [x8]
    3358:	ldrh	w10, [x8, #4]
    335c:	mov	w0, wzr
    3360:	str	xzr, [x19, #152]
    3364:	str	wzr, [x19, #5932]
    3368:	stp	w9, w10, [x19, #204]
    336c:	ldrh	w9, [x8, #2]
    3370:	ldrh	w8, [x8, #6]
    3374:	str	xzr, [x19, #168]
    3378:	stur	d0, [x19, #180]
    337c:	str	wzr, [x19, #128]
    3380:	stp	w8, w9, [x19, #188]
    3384:	b	33ac <deflateInit2_@@Base+0x2e0>
    3388:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    338c:	ldr	x8, [x8, #4056]
    3390:	mov	w9, #0x29a                 	// #666
    3394:	mov	x0, x19
    3398:	str	w9, [x22, #8]
    339c:	ldr	x8, [x8, #48]
    33a0:	str	x8, [x19, #48]
    33a4:	bl	24f0 <deflateEnd@plt>
    33a8:	mov	w0, #0xfffffffc            	// #-4
    33ac:	ldp	x20, x19, [sp, #64]
    33b0:	ldp	x22, x21, [sp, #48]
    33b4:	ldp	x24, x23, [sp, #32]
    33b8:	ldp	x26, x25, [sp, #16]
    33bc:	ldp	x29, x30, [sp], #80
    33c0:	ret

00000000000033c4 <deflateEnd@@Base>:
    33c4:	stp	x29, x30, [sp, #-32]!
    33c8:	stp	x20, x19, [sp, #16]
    33cc:	mov	x29, sp
    33d0:	cbz	x0, 33fc <deflateEnd@@Base+0x38>
    33d4:	ldr	x8, [x0, #64]
    33d8:	mov	x19, x0
    33dc:	cbz	x8, 33fc <deflateEnd@@Base+0x38>
    33e0:	ldr	x9, [x19, #72]
    33e4:	cbz	x9, 33fc <deflateEnd@@Base+0x38>
    33e8:	ldr	x1, [x19, #56]
    33ec:	cbz	x1, 33fc <deflateEnd@@Base+0x38>
    33f0:	ldr	x8, [x1]
    33f4:	cmp	x8, x19
    33f8:	b.eq	340c <deflateEnd@@Base+0x48>  // b.none
    33fc:	mov	w0, #0xfffffffe            	// #-2
    3400:	ldp	x20, x19, [sp, #16]
    3404:	ldp	x29, x30, [sp], #32
    3408:	ret
    340c:	ldr	w20, [x1, #8]
    3410:	sub	w8, w20, #0x39
    3414:	cmp	w8, #0x38
    3418:	b.hi	34b8 <deflateEnd@@Base+0xf4>  // b.pmore
    341c:	mov	w10, #0x1                   	// #1
    3420:	lsl	x8, x10, x8
    3424:	mov	x10, #0x1001                	// #4097
    3428:	movk	x10, #0x1, lsl #16
    342c:	movk	x10, #0x4004, lsl #32
    3430:	movk	x10, #0x100, lsl #48
    3434:	tst	x8, x10
    3438:	b.eq	34b8 <deflateEnd@@Base+0xf4>  // b.none
    343c:	ldr	x8, [x1, #16]
    3440:	cbz	x8, 3454 <deflateEnd@@Base+0x90>
    3444:	ldr	x0, [x19, #80]
    3448:	mov	x1, x8
    344c:	blr	x9
    3450:	ldr	x1, [x19, #56]
    3454:	ldr	x8, [x1, #120]
    3458:	cbz	x8, 346c <deflateEnd@@Base+0xa8>
    345c:	ldp	x9, x0, [x19, #72]
    3460:	mov	x1, x8
    3464:	blr	x9
    3468:	ldr	x1, [x19, #56]
    346c:	ldr	x8, [x1, #112]
    3470:	cbz	x8, 3484 <deflateEnd@@Base+0xc0>
    3474:	ldp	x9, x0, [x19, #72]
    3478:	mov	x1, x8
    347c:	blr	x9
    3480:	ldr	x1, [x19, #56]
    3484:	ldr	x8, [x1, #96]
    3488:	cbz	x8, 349c <deflateEnd@@Base+0xd8>
    348c:	ldp	x9, x0, [x19, #72]
    3490:	mov	x1, x8
    3494:	blr	x9
    3498:	ldr	x1, [x19, #56]
    349c:	ldp	x8, x0, [x19, #72]
    34a0:	blr	x8
    34a4:	cmp	w20, #0x71
    34a8:	mov	w8, #0xfffffffd            	// #-3
    34ac:	csel	w0, w8, wzr, eq  // eq = none
    34b0:	str	xzr, [x19, #56]
    34b4:	b	3400 <deflateEnd@@Base+0x3c>
    34b8:	cmp	w20, #0x29a
    34bc:	b.eq	343c <deflateEnd@@Base+0x78>  // b.none
    34c0:	cmp	w20, #0x2a
    34c4:	b.ne	33fc <deflateEnd@@Base+0x38>  // b.any
    34c8:	b	343c <deflateEnd@@Base+0x78>

00000000000034cc <deflateReset@@Base>:
    34cc:	stp	x29, x30, [sp, #-32]!
    34d0:	stp	x20, x19, [sp, #16]
    34d4:	mov	x29, sp
    34d8:	mov	x20, x0
    34dc:	bl	2570 <deflateResetKeep@plt>
    34e0:	mov	w19, w0
    34e4:	cbnz	w0, 3560 <deflateReset@@Base+0x94>
    34e8:	ldr	x20, [x20, #56]
    34ec:	mov	w1, wzr
    34f0:	ldr	w9, [x20, #132]
    34f4:	ldr	w8, [x20, #80]
    34f8:	ldr	x0, [x20, #120]
    34fc:	sub	w9, w9, #0x1
    3500:	lsl	x8, x8, #1
    3504:	lsl	x2, x9, #1
    3508:	str	x8, [x20, #104]
    350c:	strh	wzr, [x0, x2]
    3510:	bl	2410 <memset@plt>
    3514:	ldrsw	x8, [x20, #196]
    3518:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    351c:	add	x9, x9, #0xc68
    3520:	adrp	x10, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    3524:	ldr	d0, [x10, #3232]
    3528:	mov	w10, #0x2                   	// #2
    352c:	add	x8, x9, x8, lsl #4
    3530:	str	w10, [x20, #160]
    3534:	ldrh	w9, [x8]
    3538:	ldrh	w10, [x8, #4]
    353c:	str	xzr, [x20, #152]
    3540:	str	wzr, [x20, #5932]
    3544:	str	xzr, [x20, #168]
    3548:	stp	w9, w10, [x20, #204]
    354c:	ldrh	w9, [x8, #2]
    3550:	ldrh	w8, [x8, #6]
    3554:	stur	d0, [x20, #180]
    3558:	str	wzr, [x20, #128]
    355c:	stp	w8, w9, [x20, #188]
    3560:	mov	w0, w19
    3564:	ldp	x20, x19, [sp, #16]
    3568:	ldp	x29, x30, [sp], #32
    356c:	ret

0000000000003570 <deflateSetDictionary@@Base>:
    3570:	stp	x29, x30, [sp, #-80]!
    3574:	str	x25, [sp, #16]
    3578:	stp	x24, x23, [sp, #32]
    357c:	stp	x22, x21, [sp, #48]
    3580:	stp	x20, x19, [sp, #64]
    3584:	mov	x29, sp
    3588:	cbz	x0, 35b4 <deflateSetDictionary@@Base+0x44>
    358c:	ldr	x8, [x0, #64]
    3590:	mov	x19, x0
    3594:	cbz	x8, 35b4 <deflateSetDictionary@@Base+0x44>
    3598:	ldr	x8, [x19, #72]
    359c:	cbz	x8, 35b4 <deflateSetDictionary@@Base+0x44>
    35a0:	ldr	x20, [x19, #56]
    35a4:	cbz	x20, 35b4 <deflateSetDictionary@@Base+0x44>
    35a8:	ldr	x8, [x20]
    35ac:	cmp	x8, x19
    35b0:	b.eq	35d0 <deflateSetDictionary@@Base+0x60>  // b.none
    35b4:	mov	w0, #0xfffffffe            	// #-2
    35b8:	ldp	x20, x19, [sp, #64]
    35bc:	ldp	x22, x21, [sp, #48]
    35c0:	ldp	x24, x23, [sp, #32]
    35c4:	ldr	x25, [sp, #16]
    35c8:	ldp	x29, x30, [sp], #80
    35cc:	ret
    35d0:	ldr	w8, [x20, #8]
    35d4:	mov	w22, w2
    35d8:	mov	x21, x1
    35dc:	sub	w9, w8, #0x39
    35e0:	cmp	w9, #0x38
    35e4:	b.hi	3770 <deflateSetDictionary@@Base+0x200>  // b.pmore
    35e8:	mov	w10, #0x1                   	// #1
    35ec:	lsl	x9, x10, x9
    35f0:	mov	x10, #0x1001                	// #4097
    35f4:	movk	x10, #0x1, lsl #16
    35f8:	movk	x10, #0x4004, lsl #32
    35fc:	movk	x10, #0x100, lsl #48
    3600:	tst	x9, x10
    3604:	b.eq	3770 <deflateSetDictionary@@Base+0x200>  // b.none
    3608:	cbz	x21, 35b4 <deflateSetDictionary@@Base+0x44>
    360c:	ldr	w23, [x20, #48]
    3610:	cmp	w23, #0x2
    3614:	b.eq	35b4 <deflateSetDictionary@@Base+0x44>  // b.none
    3618:	cmp	w8, #0x2a
    361c:	b.eq	3628 <deflateSetDictionary@@Base+0xb8>  // b.none
    3620:	cmp	w23, #0x1
    3624:	b.eq	35b4 <deflateSetDictionary@@Base+0x44>  // b.none
    3628:	ldr	w8, [x20, #180]
    362c:	cbnz	w8, 35b4 <deflateSetDictionary@@Base+0x44>
    3630:	cmp	w23, #0x1
    3634:	b.ne	364c <deflateSetDictionary@@Base+0xdc>  // b.any
    3638:	ldr	x0, [x19, #96]
    363c:	mov	x1, x21
    3640:	mov	w2, w22
    3644:	bl	24c0 <adler32@plt>
    3648:	str	x0, [x19, #96]
    364c:	ldr	w8, [x20, #80]
    3650:	str	wzr, [x20, #48]
    3654:	cmp	w8, w22
    3658:	b.hi	3698 <deflateSetDictionary@@Base+0x128>  // b.pmore
    365c:	cbnz	w23, 368c <deflateSetDictionary@@Base+0x11c>
    3660:	ldr	w8, [x20, #132]
    3664:	ldr	x0, [x20, #120]
    3668:	mov	w1, wzr
    366c:	sub	w8, w8, #0x1
    3670:	lsl	x2, x8, #1
    3674:	strh	wzr, [x0, x2]
    3678:	bl	2410 <memset@plt>
    367c:	ldr	w8, [x20, #80]
    3680:	str	wzr, [x20, #172]
    3684:	str	xzr, [x20, #152]
    3688:	str	wzr, [x20, #5932]
    368c:	sub	w9, w22, w8
    3690:	add	x21, x21, x9
    3694:	mov	w22, w8
    3698:	ldr	w24, [x19, #8]
    369c:	ldr	x25, [x19]
    36a0:	mov	x0, x20
    36a4:	str	w22, [x19, #8]
    36a8:	str	x21, [x19]
    36ac:	bl	3784 <deflateSetDictionary@@Base+0x214>
    36b0:	ldr	w9, [x20, #180]
    36b4:	ldr	w8, [x20, #172]
    36b8:	cmp	w9, #0x3
    36bc:	b.cc	3738 <deflateSetDictionary@@Base+0x1c8>  // b.lo, b.ul, b.last
    36c0:	mov	w21, #0x2                   	// #2
    36c4:	ldr	x10, [x20, #96]
    36c8:	ldp	w12, w11, [x20, #140]
    36cc:	ldp	x14, x13, [x20, #112]
    36d0:	ldr	w15, [x20, #88]
    36d4:	ldr	w16, [x20, #128]
    36d8:	sub	w9, w9, #0x2
    36dc:	add	w17, w8, #0x2
    36e0:	ldrb	w17, [x10, w17, uxtw]
    36e4:	lsl	w16, w16, w11
    36e8:	mov	w0, w8
    36ec:	and	x0, x15, x0
    36f0:	eor	w16, w16, w17
    36f4:	and	x16, x16, x12
    36f8:	str	w16, [x20, #128]
    36fc:	lsl	x17, x16, #1
    3700:	ldrh	w18, [x13, x17]
    3704:	subs	w9, w9, #0x1
    3708:	strh	w18, [x14, x0, lsl #1]
    370c:	strh	w8, [x13, x17]
    3710:	add	w8, w8, #0x1
    3714:	b.ne	36dc <deflateSetDictionary@@Base+0x16c>  // b.any
    3718:	mov	x0, x20
    371c:	str	w8, [x20, #172]
    3720:	str	w21, [x20, #180]
    3724:	bl	3784 <deflateSetDictionary@@Base+0x214>
    3728:	ldr	w9, [x20, #180]
    372c:	ldr	w8, [x20, #172]
    3730:	cmp	w9, #0x2
    3734:	b.hi	36c4 <deflateSetDictionary@@Base+0x154>  // b.pmore
    3738:	add	w8, w8, w9
    373c:	str	w9, [x20, #5932]
    3740:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    3744:	ldr	d0, [x9, #3232]
    3748:	mov	w0, wzr
    374c:	mov	w10, #0x2                   	// #2
    3750:	str	x8, [x20, #152]
    3754:	str	w10, [x20, #160]
    3758:	stp	wzr, w8, [x20, #168]
    375c:	stur	d0, [x20, #180]
    3760:	str	x25, [x19]
    3764:	str	w24, [x19, #8]
    3768:	str	w23, [x20, #48]
    376c:	b	35b8 <deflateSetDictionary@@Base+0x48>
    3770:	cmp	w8, #0x29a
    3774:	b.eq	3608 <deflateSetDictionary@@Base+0x98>  // b.none
    3778:	cmp	w8, #0x2a
    377c:	b.ne	35b4 <deflateSetDictionary@@Base+0x44>  // b.any
    3780:	b	3608 <deflateSetDictionary@@Base+0x98>
    3784:	str	d8, [sp, #-80]!
    3788:	stp	x29, x30, [sp, #8]
    378c:	stp	x24, x23, [sp, #32]
    3790:	stp	x22, x21, [sp, #48]
    3794:	stp	x20, x19, [sp, #64]
    3798:	ldr	w23, [x0, #80]
    379c:	ldr	w8, [x0, #180]
    37a0:	mov	x19, x0
    37a4:	str	x25, [sp, #24]
    37a8:	sub	w24, w23, #0x106
    37ac:	dup	v8.2s, w23
    37b0:	mov	w10, w23
    37b4:	mov	x29, sp
    37b8:	ldr	w11, [x19, #104]
    37bc:	ldr	w9, [x19, #172]
    37c0:	add	w10, w24, w10
    37c4:	sub	w8, w11, w8
    37c8:	cmp	w9, w10
    37cc:	sub	w20, w8, w9
    37d0:	b.cc	3910 <deflateSetDictionary@@Base+0x3a0>  // b.lo, b.ul, b.last
    37d4:	ldr	x0, [x19, #96]
    37d8:	sub	w2, w23, w20
    37dc:	add	x1, x0, x23
    37e0:	bl	2330 <memcpy@plt>
    37e4:	ldur	d0, [x19, #172]
    37e8:	ldr	x10, [x19, #152]
    37ec:	ldr	w9, [x19, #132]
    37f0:	ldr	x11, [x19, #120]
    37f4:	ldr	w8, [x19, #80]
    37f8:	sub	v0.2s, v0.2s, v8.2s
    37fc:	sub	x12, x10, x23
    3800:	subs	w10, w9, #0x1
    3804:	add	x13, x11, x9, lsl #1
    3808:	stur	d0, [x19, #172]
    380c:	str	x12, [x19, #152]
    3810:	b.eq	3864 <deflateSetDictionary@@Base+0x2f4>  // b.none
    3814:	add	x11, x10, #0x1
    3818:	and	x12, x11, #0x1fffffffe
    381c:	sub	x10, x13, x12, lsl #1
    3820:	sub	w9, w9, w12
    3824:	sub	x13, x13, #0x2
    3828:	mov	x14, x12
    382c:	ldrh	w15, [x13]
    3830:	ldurh	w16, [x13, #-2]
    3834:	subs	w15, w15, w8
    3838:	csel	w15, wzr, w15, cc  // cc = lo, ul, last
    383c:	subs	w16, w16, w8
    3840:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    3844:	strh	w15, [x13]
    3848:	subs	x14, x14, #0x2
    384c:	sturh	w16, [x13, #-2]
    3850:	sub	x13, x13, #0x4
    3854:	b.ne	382c <deflateSetDictionary@@Base+0x2bc>  // b.any
    3858:	cmp	x11, x12
    385c:	b.ne	3868 <deflateSetDictionary@@Base+0x2f8>  // b.any
    3860:	b	3884 <deflateSetDictionary@@Base+0x314>
    3864:	mov	x10, x13
    3868:	sub	x10, x10, #0x2
    386c:	ldrh	w11, [x10]
    3870:	subs	w11, w11, w8
    3874:	csel	w11, wzr, w11, cc  // cc = lo, ul, last
    3878:	subs	w9, w9, #0x1
    387c:	strh	w11, [x10], #-2
    3880:	b.ne	386c <deflateSetDictionary@@Base+0x2fc>  // b.any
    3884:	ldr	x10, [x19, #112]
    3888:	subs	w9, w8, #0x1
    388c:	add	x13, x10, x8, lsl #1
    3890:	b.eq	38e4 <deflateSetDictionary@@Base+0x374>  // b.none
    3894:	add	x11, x9, #0x1
    3898:	and	x12, x11, #0x1fffffffe
    389c:	sub	x10, x13, x12, lsl #1
    38a0:	sub	w9, w8, w12
    38a4:	sub	x13, x13, #0x2
    38a8:	mov	x14, x12
    38ac:	ldrh	w15, [x13]
    38b0:	ldurh	w16, [x13, #-2]
    38b4:	subs	w15, w15, w8
    38b8:	csel	w15, wzr, w15, cc  // cc = lo, ul, last
    38bc:	subs	w16, w16, w8
    38c0:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    38c4:	strh	w15, [x13]
    38c8:	subs	x14, x14, #0x2
    38cc:	sturh	w16, [x13, #-2]
    38d0:	sub	x13, x13, #0x4
    38d4:	b.ne	38ac <deflateSetDictionary@@Base+0x33c>  // b.any
    38d8:	cmp	x11, x12
    38dc:	b.ne	38ec <deflateSetDictionary@@Base+0x37c>  // b.any
    38e0:	b	3908 <deflateSetDictionary@@Base+0x398>
    38e4:	mov	x10, x13
    38e8:	mov	w9, w8
    38ec:	sub	x10, x10, #0x2
    38f0:	ldrh	w11, [x10]
    38f4:	subs	w11, w11, w8
    38f8:	csel	w11, wzr, w11, cc  // cc = lo, ul, last
    38fc:	subs	w9, w9, #0x1
    3900:	strh	w11, [x10], #-2
    3904:	b.ne	38f0 <deflateSetDictionary@@Base+0x380>  // b.any
    3908:	add	w20, w20, w23
    390c:	fmov	w9, s0
    3910:	ldr	x25, [x19]
    3914:	ldr	w10, [x25, #8]
    3918:	cbz	w10, 3a68 <deflateSetDictionary@@Base+0x4f8>
    391c:	ldr	w8, [x19, #180]
    3920:	cmp	w10, w20
    3924:	csel	w20, w20, w10, hi  // hi = pmore
    3928:	cbz	w20, 39b0 <deflateSetDictionary@@Base+0x440>
    392c:	ldr	x11, [x19, #96]
    3930:	ldr	x1, [x25]
    3934:	mov	w21, w20
    3938:	sub	w10, w10, w20
    393c:	add	x9, x11, w9, uxtw
    3940:	add	x22, x9, x8
    3944:	mov	x0, x22
    3948:	mov	x2, x21
    394c:	str	w10, [x25, #8]
    3950:	bl	2330 <memcpy@plt>
    3954:	ldr	x8, [x25, #56]
    3958:	ldr	w8, [x8, #48]
    395c:	cmp	w8, #0x2
    3960:	b.eq	3980 <deflateSetDictionary@@Base+0x410>  // b.none
    3964:	cmp	w8, #0x1
    3968:	b.ne	3994 <deflateSetDictionary@@Base+0x424>  // b.any
    396c:	ldr	x0, [x25, #96]
    3970:	mov	x1, x22
    3974:	mov	w2, w20
    3978:	bl	24c0 <adler32@plt>
    397c:	b	3990 <deflateSetDictionary@@Base+0x420>
    3980:	ldr	x0, [x25, #96]
    3984:	mov	x1, x22
    3988:	mov	w2, w20
    398c:	bl	23b0 <crc32@plt>
    3990:	str	x0, [x25, #96]
    3994:	ldr	x8, [x25]
    3998:	ldr	x9, [x25, #16]
    399c:	add	x8, x8, x21
    39a0:	add	x9, x9, x21
    39a4:	str	x8, [x25]
    39a8:	str	x9, [x25, #16]
    39ac:	ldr	w8, [x19, #180]
    39b0:	ldr	w9, [x19, #5932]
    39b4:	add	w8, w8, w20
    39b8:	str	w8, [x19, #180]
    39bc:	add	w10, w9, w8
    39c0:	cmp	w10, #0x3
    39c4:	b.cc	3a4c <deflateSetDictionary@@Base+0x4dc>  // b.lo, b.ul, b.last
    39c8:	ldr	w11, [x19, #172]
    39cc:	ldr	x10, [x19, #96]
    39d0:	sub	w11, w11, w9
    39d4:	ldrb	w14, [x10, w11, uxtw]
    39d8:	add	w13, w11, #0x1
    39dc:	str	w14, [x19, #128]
    39e0:	ldrb	w15, [x10, w13, uxtw]
    39e4:	ldp	w13, w12, [x19, #140]
    39e8:	lsl	w14, w14, w12
    39ec:	eor	w14, w14, w15
    39f0:	and	w14, w14, w13
    39f4:	str	w14, [x19, #128]
    39f8:	cbz	w9, 3a4c <deflateSetDictionary@@Base+0x4dc>
    39fc:	add	w15, w11, #0x2
    3a00:	ldrb	w15, [x10, w15, uxtw]
    3a04:	lsl	w14, w14, w12
    3a08:	ldp	x17, x16, [x19, #112]
    3a0c:	ldr	w18, [x19, #88]
    3a10:	eor	w14, w14, w15
    3a14:	and	x14, x14, x13
    3a18:	str	w14, [x19, #128]
    3a1c:	lsl	x15, x14, #1
    3a20:	sub	w9, w9, #0x1
    3a24:	ldrh	w1, [x16, x15]
    3a28:	add	w0, w8, w9
    3a2c:	cmp	w0, #0x2
    3a30:	mov	w0, w11
    3a34:	and	x18, x18, x0
    3a38:	strh	w1, [x17, x18, lsl #1]
    3a3c:	strh	w11, [x16, x15]
    3a40:	add	w11, w11, #0x1
    3a44:	str	w9, [x19, #5932]
    3a48:	b.hi	39f8 <deflateSetDictionary@@Base+0x488>  // b.pmore
    3a4c:	cmp	w8, #0x105
    3a50:	b.hi	3a68 <deflateSetDictionary@@Base+0x4f8>  // b.pmore
    3a54:	ldr	x9, [x19]
    3a58:	ldr	w9, [x9, #8]
    3a5c:	cbz	w9, 3a68 <deflateSetDictionary@@Base+0x4f8>
    3a60:	ldr	w10, [x19, #80]
    3a64:	b	37b8 <deflateSetDictionary@@Base+0x248>
    3a68:	ldr	x8, [x19, #5944]
    3a6c:	ldr	x10, [x19, #104]
    3a70:	subs	x9, x10, x8
    3a74:	b.ls	3aec <deflateSetDictionary@@Base+0x57c>  // b.plast
    3a78:	ldr	w11, [x19, #172]
    3a7c:	ldr	w12, [x19, #180]
    3a80:	add	x21, x12, x11
    3a84:	cmp	x8, x21
    3a88:	b.cs	3ab8 <deflateSetDictionary@@Base+0x548>  // b.hs, b.nlast
    3a8c:	ldr	x9, [x19, #96]
    3a90:	sub	x8, x10, x21
    3a94:	cmp	x8, #0x102
    3a98:	mov	w10, #0x102                 	// #258
    3a9c:	csel	x20, x8, x10, cc  // cc = lo, ul, last
    3aa0:	add	x0, x9, x21
    3aa4:	mov	w1, wzr
    3aa8:	mov	x2, x20
    3aac:	bl	2410 <memset@plt>
    3ab0:	add	x8, x20, x21
    3ab4:	b	3ae8 <deflateSetDictionary@@Base+0x578>
    3ab8:	add	x10, x21, #0x102
    3abc:	subs	x10, x10, x8
    3ac0:	b.ls	3aec <deflateSetDictionary@@Base+0x57c>  // b.plast
    3ac4:	ldr	x11, [x19, #96]
    3ac8:	cmp	x10, x9
    3acc:	csel	x20, x9, x10, hi  // hi = pmore
    3ad0:	and	x2, x20, #0xffffffff
    3ad4:	add	x0, x11, x8
    3ad8:	mov	w1, wzr
    3adc:	bl	2410 <memset@plt>
    3ae0:	ldr	x8, [x19, #5944]
    3ae4:	add	x8, x8, x20
    3ae8:	str	x8, [x19, #5944]
    3aec:	ldp	x20, x19, [sp, #64]
    3af0:	ldp	x22, x21, [sp, #48]
    3af4:	ldp	x24, x23, [sp, #32]
    3af8:	ldr	x25, [sp, #24]
    3afc:	ldp	x29, x30, [sp, #8]
    3b00:	ldr	d8, [sp], #80
    3b04:	ret

0000000000003b08 <deflateGetDictionary@@ZLIB_1.2.9>:
    3b08:	stp	x29, x30, [sp, #-32]!
    3b0c:	stp	x20, x19, [sp, #16]
    3b10:	mov	x29, sp
    3b14:	cbz	x0, 3b3c <deflateGetDictionary@@ZLIB_1.2.9+0x34>
    3b18:	ldr	x8, [x0, #64]
    3b1c:	cbz	x8, 3b3c <deflateGetDictionary@@ZLIB_1.2.9+0x34>
    3b20:	ldr	x8, [x0, #72]
    3b24:	cbz	x8, 3b3c <deflateGetDictionary@@ZLIB_1.2.9+0x34>
    3b28:	ldr	x8, [x0, #56]
    3b2c:	cbz	x8, 3b3c <deflateGetDictionary@@ZLIB_1.2.9+0x34>
    3b30:	ldr	x9, [x8]
    3b34:	cmp	x9, x0
    3b38:	b.eq	3b4c <deflateGetDictionary@@ZLIB_1.2.9+0x44>  // b.none
    3b3c:	mov	w0, #0xfffffffe            	// #-2
    3b40:	ldp	x20, x19, [sp, #16]
    3b44:	ldp	x29, x30, [sp], #32
    3b48:	ret
    3b4c:	ldr	w9, [x8, #8]
    3b50:	mov	x19, x2
    3b54:	sub	w10, w9, #0x39
    3b58:	cmp	w10, #0x38
    3b5c:	b.hi	3bd0 <deflateGetDictionary@@ZLIB_1.2.9+0xc8>  // b.pmore
    3b60:	mov	w11, #0x1                   	// #1
    3b64:	lsl	x10, x11, x10
    3b68:	mov	x11, #0x1001                	// #4097
    3b6c:	movk	x11, #0x1, lsl #16
    3b70:	movk	x11, #0x4004, lsl #32
    3b74:	movk	x11, #0x100, lsl #48
    3b78:	tst	x10, x11
    3b7c:	b.eq	3bd0 <deflateGetDictionary@@ZLIB_1.2.9+0xc8>  // b.none
    3b80:	ldr	w9, [x8, #172]
    3b84:	ldr	w10, [x8, #180]
    3b88:	ldr	w11, [x8, #80]
    3b8c:	add	w12, w10, w9
    3b90:	cmp	w12, w11
    3b94:	csel	w20, w11, w12, hi  // hi = pmore
    3b98:	cbz	x1, 3bc0 <deflateGetDictionary@@ZLIB_1.2.9+0xb8>
    3b9c:	cbz	w20, 3bc0 <deflateGetDictionary@@ZLIB_1.2.9+0xb8>
    3ba0:	ldr	x8, [x8, #96]
    3ba4:	mov	w2, w20
    3ba8:	mov	x0, x1
    3bac:	add	x8, x8, x9
    3bb0:	add	x8, x8, x10
    3bb4:	sub	x8, x8, x2
    3bb8:	mov	x1, x8
    3bbc:	bl	2330 <memcpy@plt>
    3bc0:	mov	w0, wzr
    3bc4:	cbz	x19, 3b40 <deflateGetDictionary@@ZLIB_1.2.9+0x38>
    3bc8:	str	w20, [x19]
    3bcc:	b	3b40 <deflateGetDictionary@@ZLIB_1.2.9+0x38>
    3bd0:	cmp	w9, #0x29a
    3bd4:	b.eq	3b80 <deflateGetDictionary@@ZLIB_1.2.9+0x78>  // b.none
    3bd8:	cmp	w9, #0x2a
    3bdc:	b.ne	3b3c <deflateGetDictionary@@ZLIB_1.2.9+0x34>  // b.any
    3be0:	b	3b80 <deflateGetDictionary@@ZLIB_1.2.9+0x78>

0000000000003be4 <deflateResetKeep@@ZLIB_1.2.5.2>:
    3be4:	stp	x29, x30, [sp, #-32]!
    3be8:	stp	x20, x19, [sp, #16]
    3bec:	mov	x29, sp
    3bf0:	cbz	x0, 3c1c <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3bf4:	ldr	x8, [x0, #64]
    3bf8:	mov	x19, x0
    3bfc:	cbz	x8, 3c1c <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c00:	ldr	x8, [x19, #72]
    3c04:	cbz	x8, 3c1c <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c08:	ldr	x20, [x19, #56]
    3c0c:	cbz	x20, 3c1c <deflateResetKeep@@ZLIB_1.2.5.2+0x38>
    3c10:	ldr	x8, [x20]
    3c14:	cmp	x8, x19
    3c18:	b.eq	3c2c <deflateResetKeep@@ZLIB_1.2.5.2+0x48>  // b.none
    3c1c:	mov	w0, #0xfffffffe            	// #-2
    3c20:	ldp	x20, x19, [sp, #16]
    3c24:	ldp	x29, x30, [sp], #32
    3c28:	ret
    3c2c:	ldr	w8, [x20, #8]
    3c30:	sub	w9, w8, #0x39
    3c34:	cmp	w9, #0x38
    3c38:	b.hi	3cd8 <deflateResetKeep@@ZLIB_1.2.5.2+0xf4>  // b.pmore
    3c3c:	mov	w10, #0x1                   	// #1
    3c40:	lsl	x9, x10, x9
    3c44:	mov	x10, #0x1001                	// #4097
    3c48:	movk	x10, #0x1, lsl #16
    3c4c:	movk	x10, #0x4004, lsl #32
    3c50:	movk	x10, #0x100, lsl #48
    3c54:	tst	x9, x10
    3c58:	b.eq	3cd8 <deflateResetKeep@@ZLIB_1.2.5.2+0xf4>  // b.none
    3c5c:	mov	w8, #0x2                   	// #2
    3c60:	str	xzr, [x19, #16]
    3c64:	stp	xzr, xzr, [x19, #40]
    3c68:	str	w8, [x19, #88]
    3c6c:	ldr	x9, [x20, #16]
    3c70:	ldr	w8, [x20, #48]
    3c74:	stp	x9, xzr, [x20, #32]
    3c78:	tbz	w8, #31, 3c84 <deflateResetKeep@@ZLIB_1.2.5.2+0xa0>
    3c7c:	neg	w8, w8
    3c80:	str	w8, [x20, #48]
    3c84:	cmp	w8, #0x0
    3c88:	mov	w9, #0x2a                  	// #42
    3c8c:	mov	w10, #0x71                  	// #113
    3c90:	csel	w9, w10, w9, eq  // eq = none
    3c94:	cmp	w8, #0x2
    3c98:	mov	w8, #0x39                  	// #57
    3c9c:	csel	w8, w8, w9, eq  // eq = none
    3ca0:	mov	x0, xzr
    3ca4:	mov	x1, xzr
    3ca8:	mov	w2, wzr
    3cac:	str	w8, [x20, #8]
    3cb0:	b.ne	3cbc <deflateResetKeep@@ZLIB_1.2.5.2+0xd8>  // b.any
    3cb4:	bl	23b0 <crc32@plt>
    3cb8:	b	3cc0 <deflateResetKeep@@ZLIB_1.2.5.2+0xdc>
    3cbc:	bl	24c0 <adler32@plt>
    3cc0:	str	x0, [x19, #96]
    3cc4:	mov	x0, x20
    3cc8:	str	wzr, [x20, #76]
    3ccc:	bl	b694 <inflateCodesUsed@@ZLIB_1.2.9+0x668>
    3cd0:	mov	w0, wzr
    3cd4:	b	3c20 <deflateResetKeep@@ZLIB_1.2.5.2+0x3c>
    3cd8:	cmp	w8, #0x29a
    3cdc:	b.eq	3c5c <deflateResetKeep@@ZLIB_1.2.5.2+0x78>  // b.none
    3ce0:	cmp	w8, #0x2a
    3ce4:	b.ne	3c1c <deflateResetKeep@@ZLIB_1.2.5.2+0x38>  // b.any
    3ce8:	b	3c5c <deflateResetKeep@@ZLIB_1.2.5.2+0x78>

0000000000003cec <deflateSetHeader@@ZLIB_1.2.2>:
    3cec:	cbz	x0, 3d6c <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3cf0:	ldr	x8, [x0, #64]
    3cf4:	cbz	x8, 3d6c <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3cf8:	ldr	x8, [x0, #72]
    3cfc:	cbz	x8, 3d6c <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3d00:	ldr	x8, [x0, #56]
    3d04:	cbz	x8, 3d6c <deflateSetHeader@@ZLIB_1.2.2+0x80>
    3d08:	ldr	x9, [x8]
    3d0c:	cmp	x9, x0
    3d10:	b.ne	3d6c <deflateSetHeader@@ZLIB_1.2.2+0x80>  // b.any
    3d14:	ldr	w9, [x8, #8]
    3d18:	sub	w10, w9, #0x39
    3d1c:	cmp	w10, #0x38
    3d20:	b.hi	3d5c <deflateSetHeader@@ZLIB_1.2.2+0x70>  // b.pmore
    3d24:	mov	w11, #0x1                   	// #1
    3d28:	lsl	x10, x11, x10
    3d2c:	mov	x11, #0x1001                	// #4097
    3d30:	movk	x11, #0x1, lsl #16
    3d34:	movk	x11, #0x4004, lsl #32
    3d38:	movk	x11, #0x100, lsl #48
    3d3c:	tst	x10, x11
    3d40:	b.eq	3d5c <deflateSetHeader@@ZLIB_1.2.2+0x70>  // b.none
    3d44:	ldr	w9, [x8, #48]
    3d48:	cmp	w9, #0x2
    3d4c:	b.ne	3d6c <deflateSetHeader@@ZLIB_1.2.2+0x80>  // b.any
    3d50:	mov	w0, wzr
    3d54:	str	x1, [x8, #56]
    3d58:	ret
    3d5c:	cmp	w9, #0x29a
    3d60:	b.eq	3d44 <deflateSetHeader@@ZLIB_1.2.2+0x58>  // b.none
    3d64:	cmp	w9, #0x2a
    3d68:	b.eq	3d44 <deflateSetHeader@@ZLIB_1.2.2+0x58>  // b.none
    3d6c:	mov	w0, #0xfffffffe            	// #-2
    3d70:	ret

0000000000003d74 <deflatePending@@ZLIB_1.2.5.1>:
    3d74:	cbz	x0, 3d9c <deflatePending@@ZLIB_1.2.5.1+0x28>
    3d78:	ldr	x8, [x0, #64]
    3d7c:	cbz	x8, 3d9c <deflatePending@@ZLIB_1.2.5.1+0x28>
    3d80:	ldr	x8, [x0, #72]
    3d84:	cbz	x8, 3d9c <deflatePending@@ZLIB_1.2.5.1+0x28>
    3d88:	ldr	x8, [x0, #56]
    3d8c:	cbz	x8, 3d9c <deflatePending@@ZLIB_1.2.5.1+0x28>
    3d90:	ldr	x9, [x8]
    3d94:	cmp	x9, x0
    3d98:	b.eq	3da4 <deflatePending@@ZLIB_1.2.5.1+0x30>  // b.none
    3d9c:	mov	w0, #0xfffffffe            	// #-2
    3da0:	ret
    3da4:	ldr	w9, [x8, #8]
    3da8:	sub	w10, w9, #0x39
    3dac:	cmp	w10, #0x38
    3db0:	b.hi	3df4 <deflatePending@@ZLIB_1.2.5.1+0x80>  // b.pmore
    3db4:	mov	w11, #0x1                   	// #1
    3db8:	lsl	x10, x11, x10
    3dbc:	mov	x11, #0x1001                	// #4097
    3dc0:	movk	x11, #0x1, lsl #16
    3dc4:	movk	x11, #0x4004, lsl #32
    3dc8:	movk	x11, #0x100, lsl #48
    3dcc:	tst	x10, x11
    3dd0:	b.eq	3df4 <deflatePending@@ZLIB_1.2.5.1+0x80>  // b.none
    3dd4:	cbz	x1, 3de0 <deflatePending@@ZLIB_1.2.5.1+0x6c>
    3dd8:	ldr	x9, [x8, #40]
    3ddc:	str	w9, [x1]
    3de0:	mov	w0, wzr
    3de4:	cbz	x2, 3df0 <deflatePending@@ZLIB_1.2.5.1+0x7c>
    3de8:	ldr	w8, [x8, #5940]
    3dec:	str	w8, [x2]
    3df0:	ret
    3df4:	cmp	w9, #0x29a
    3df8:	b.eq	3dd4 <deflatePending@@ZLIB_1.2.5.1+0x60>  // b.none
    3dfc:	cmp	w9, #0x2a
    3e00:	b.ne	3d9c <deflatePending@@ZLIB_1.2.5.1+0x28>  // b.any
    3e04:	b	3dd4 <deflatePending@@ZLIB_1.2.5.1+0x60>

0000000000003e08 <deflatePrime@@ZLIB_1.2.0.8>:
    3e08:	stp	x29, x30, [sp, #-64]!
    3e0c:	stp	x24, x23, [sp, #16]
    3e10:	stp	x22, x21, [sp, #32]
    3e14:	stp	x20, x19, [sp, #48]
    3e18:	mov	x29, sp
    3e1c:	cbz	x0, 3e44 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e20:	ldr	x8, [x0, #64]
    3e24:	cbz	x8, 3e44 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e28:	ldr	x8, [x0, #72]
    3e2c:	cbz	x8, 3e44 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e30:	ldr	x21, [x0, #56]
    3e34:	cbz	x21, 3e44 <deflatePrime@@ZLIB_1.2.0.8+0x3c>
    3e38:	ldr	x8, [x21]
    3e3c:	cmp	x8, x0
    3e40:	b.eq	3e5c <deflatePrime@@ZLIB_1.2.0.8+0x54>  // b.none
    3e44:	mov	w0, #0xfffffffe            	// #-2
    3e48:	ldp	x20, x19, [sp, #48]
    3e4c:	ldp	x22, x21, [sp, #32]
    3e50:	ldp	x24, x23, [sp, #16]
    3e54:	ldp	x29, x30, [sp], #64
    3e58:	ret
    3e5c:	ldr	w8, [x21, #8]
    3e60:	mov	w19, w2
    3e64:	mov	w20, w1
    3e68:	sub	w9, w8, #0x39
    3e6c:	cmp	w9, #0x38
    3e70:	b.hi	3f04 <deflatePrime@@ZLIB_1.2.0.8+0xfc>  // b.pmore
    3e74:	mov	w10, #0x1                   	// #1
    3e78:	lsl	x9, x10, x9
    3e7c:	mov	x10, #0x1001                	// #4097
    3e80:	movk	x10, #0x1, lsl #16
    3e84:	movk	x10, #0x4004, lsl #32
    3e88:	movk	x10, #0x100, lsl #48
    3e8c:	tst	x9, x10
    3e90:	b.eq	3f04 <deflatePrime@@ZLIB_1.2.0.8+0xfc>  // b.none
    3e94:	ldr	x8, [x21, #32]
    3e98:	ldr	x9, [x21, #5904]
    3e9c:	add	x8, x8, #0x2
    3ea0:	cmp	x9, x8
    3ea4:	b.cs	3eb0 <deflatePrime@@ZLIB_1.2.0.8+0xa8>  // b.hs, b.nlast
    3ea8:	mov	w0, #0xfffffffb            	// #-5
    3eac:	b	3e48 <deflatePrime@@ZLIB_1.2.0.8+0x40>
    3eb0:	mov	w22, #0x10                  	// #16
    3eb4:	mov	w23, #0xffffffff            	// #-1
    3eb8:	ldr	w8, [x21, #5940]
    3ebc:	ldrh	w9, [x21, #5936]
    3ec0:	mov	x0, x21
    3ec4:	sub	w10, w22, w8
    3ec8:	cmp	w10, w20
    3ecc:	csel	w24, w20, w10, gt
    3ed0:	lsl	w10, w23, w24
    3ed4:	bic	w10, w19, w10
    3ed8:	add	w11, w24, w8
    3edc:	lsl	w8, w10, w8
    3ee0:	orr	w8, w9, w8
    3ee4:	strh	w8, [x21, #5936]
    3ee8:	str	w11, [x21, #5940]
    3eec:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    3ef0:	mov	w0, wzr
    3ef4:	subs	w20, w20, w24
    3ef8:	asr	w19, w19, w24
    3efc:	b.ne	3eb8 <deflatePrime@@ZLIB_1.2.0.8+0xb0>  // b.any
    3f00:	b	3e48 <deflatePrime@@ZLIB_1.2.0.8+0x40>
    3f04:	cmp	w8, #0x29a
    3f08:	b.eq	3e94 <deflatePrime@@ZLIB_1.2.0.8+0x8c>  // b.none
    3f0c:	cmp	w8, #0x2a
    3f10:	b.ne	3e44 <deflatePrime@@ZLIB_1.2.0.8+0x3c>  // b.any
    3f14:	b	3e94 <deflatePrime@@ZLIB_1.2.0.8+0x8c>

0000000000003f18 <deflateParams@@Base>:
    3f18:	stp	x29, x30, [sp, #-48]!
    3f1c:	stp	x22, x21, [sp, #16]
    3f20:	stp	x20, x19, [sp, #32]
    3f24:	mov	x29, sp
    3f28:	cbz	x0, 3f54 <deflateParams@@Base+0x3c>
    3f2c:	ldr	x8, [x0, #64]
    3f30:	mov	x20, x0
    3f34:	cbz	x8, 3f54 <deflateParams@@Base+0x3c>
    3f38:	ldr	x8, [x20, #72]
    3f3c:	cbz	x8, 3f54 <deflateParams@@Base+0x3c>
    3f40:	ldr	x21, [x20, #56]
    3f44:	cbz	x21, 3f54 <deflateParams@@Base+0x3c>
    3f48:	ldr	x8, [x21]
    3f4c:	cmp	x8, x20
    3f50:	b.eq	3f68 <deflateParams@@Base+0x50>  // b.none
    3f54:	mov	w0, #0xfffffffe            	// #-2
    3f58:	ldp	x20, x19, [sp, #32]
    3f5c:	ldp	x22, x21, [sp, #16]
    3f60:	ldp	x29, x30, [sp], #48
    3f64:	ret
    3f68:	ldr	w8, [x21, #8]
    3f6c:	mov	w19, w2
    3f70:	sub	w9, w8, #0x39
    3f74:	cmp	w9, #0x38
    3f78:	b.hi	4098 <deflateParams@@Base+0x180>  // b.pmore
    3f7c:	mov	w10, #0x1                   	// #1
    3f80:	lsl	x9, x10, x9
    3f84:	mov	x10, #0x1001                	// #4097
    3f88:	movk	x10, #0x1, lsl #16
    3f8c:	movk	x10, #0x4004, lsl #32
    3f90:	movk	x10, #0x100, lsl #48
    3f94:	tst	x9, x10
    3f98:	b.eq	4098 <deflateParams@@Base+0x180>  // b.none
    3f9c:	cmn	w1, #0x1
    3fa0:	mov	w8, #0x6                   	// #6
    3fa4:	csel	w22, w8, w1, eq  // eq = none
    3fa8:	cmp	w19, #0x4
    3fac:	mov	w0, #0xfffffffe            	// #-2
    3fb0:	b.hi	3f58 <deflateParams@@Base+0x40>  // b.pmore
    3fb4:	cmp	w22, #0x9
    3fb8:	b.hi	3f58 <deflateParams@@Base+0x40>  // b.pmore
    3fbc:	ldr	w8, [x21, #200]
    3fc0:	cmp	w8, w19
    3fc4:	b.ne	3fec <deflateParams@@Base+0xd4>  // b.any
    3fc8:	ldrsw	x8, [x21, #196]
    3fcc:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    3fd0:	add	x9, x9, #0xc68
    3fd4:	add	x10, x9, w22, uxtw #4
    3fd8:	add	x8, x9, x8, lsl #4
    3fdc:	ldr	x8, [x8, #8]
    3fe0:	ldr	x9, [x10, #8]
    3fe4:	cmp	x8, x9
    3fe8:	b.eq	4010 <deflateParams@@Base+0xf8>  // b.none
    3fec:	ldr	x8, [x21, #5944]
    3ff0:	cbz	x8, 4010 <deflateParams@@Base+0xf8>
    3ff4:	mov	w1, #0x5                   	// #5
    3ff8:	mov	x0, x20
    3ffc:	bl	2400 <deflate@plt>
    4000:	cmn	w0, #0x2
    4004:	b.eq	3f58 <deflateParams@@Base+0x40>  // b.none
    4008:	ldr	w8, [x20, #32]
    400c:	cbz	w8, 40ac <deflateParams@@Base+0x194>
    4010:	ldr	w8, [x21, #196]
    4014:	cmp	w8, w22
    4018:	b.eq	41a4 <deflateParams@@Base+0x28c>  // b.none
    401c:	cbnz	w8, 417c <deflateParams@@Base+0x264>
    4020:	ldr	w8, [x21, #5928]
    4024:	cbz	w8, 417c <deflateParams@@Base+0x264>
    4028:	cmp	w8, #0x1
    402c:	b.ne	40b4 <deflateParams@@Base+0x19c>  // b.any
    4030:	ldr	w10, [x21, #132]
    4034:	ldr	x0, [x21, #120]
    4038:	ldr	w9, [x21, #80]
    403c:	subs	w8, w10, #0x1
    4040:	add	x14, x0, x10, lsl #1
    4044:	b.eq	40c8 <deflateParams@@Base+0x1b0>  // b.none
    4048:	add	x12, x8, #0x1
    404c:	and	x13, x12, #0x1fffffffe
    4050:	sub	x11, x14, x13, lsl #1
    4054:	sub	w10, w10, w13
    4058:	sub	x14, x14, #0x2
    405c:	mov	x15, x13
    4060:	ldrh	w16, [x14]
    4064:	ldurh	w17, [x14, #-2]
    4068:	subs	w16, w16, w9
    406c:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    4070:	subs	w17, w17, w9
    4074:	csel	w17, wzr, w17, cc  // cc = lo, ul, last
    4078:	strh	w16, [x14]
    407c:	subs	x15, x15, #0x2
    4080:	sturh	w17, [x14, #-2]
    4084:	sub	x14, x14, #0x4
    4088:	b.ne	4060 <deflateParams@@Base+0x148>  // b.any
    408c:	cmp	x12, x13
    4090:	b.ne	40cc <deflateParams@@Base+0x1b4>  // b.any
    4094:	b	40e8 <deflateParams@@Base+0x1d0>
    4098:	cmp	w8, #0x29a
    409c:	b.eq	3f9c <deflateParams@@Base+0x84>  // b.none
    40a0:	cmp	w8, #0x2a
    40a4:	b.ne	3f54 <deflateParams@@Base+0x3c>  // b.any
    40a8:	b	3f9c <deflateParams@@Base+0x84>
    40ac:	mov	w0, #0xfffffffb            	// #-5
    40b0:	b	3f58 <deflateParams@@Base+0x40>
    40b4:	ldr	w8, [x21, #132]
    40b8:	ldr	x0, [x21, #120]
    40bc:	sub	w8, w8, #0x1
    40c0:	strh	wzr, [x0, w8, uxtw #1]
    40c4:	b	416c <deflateParams@@Base+0x254>
    40c8:	mov	x11, x14
    40cc:	sub	x11, x11, #0x2
    40d0:	ldrh	w12, [x11]
    40d4:	subs	w12, w12, w9
    40d8:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    40dc:	subs	w10, w10, #0x1
    40e0:	strh	w12, [x11], #-2
    40e4:	b.ne	40d0 <deflateParams@@Base+0x1b8>  // b.any
    40e8:	ldr	x11, [x21, #112]
    40ec:	subs	w10, w9, #0x1
    40f0:	add	x14, x11, x9, lsl #1
    40f4:	b.eq	4148 <deflateParams@@Base+0x230>  // b.none
    40f8:	add	x12, x10, #0x1
    40fc:	and	x13, x12, #0x1fffffffe
    4100:	sub	x11, x14, x13, lsl #1
    4104:	sub	w10, w9, w13
    4108:	sub	x14, x14, #0x2
    410c:	mov	x15, x13
    4110:	ldrh	w16, [x14]
    4114:	ldurh	w17, [x14, #-2]
    4118:	subs	w16, w16, w9
    411c:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    4120:	subs	w17, w17, w9
    4124:	csel	w17, wzr, w17, cc  // cc = lo, ul, last
    4128:	strh	w16, [x14]
    412c:	subs	x15, x15, #0x2
    4130:	sturh	w17, [x14, #-2]
    4134:	sub	x14, x14, #0x4
    4138:	b.ne	4110 <deflateParams@@Base+0x1f8>  // b.any
    413c:	cmp	x12, x13
    4140:	b.ne	4150 <deflateParams@@Base+0x238>  // b.any
    4144:	b	416c <deflateParams@@Base+0x254>
    4148:	mov	x11, x14
    414c:	mov	w10, w9
    4150:	sub	x11, x11, #0x2
    4154:	ldrh	w12, [x11]
    4158:	subs	w12, w12, w9
    415c:	csel	w12, wzr, w12, cc  // cc = lo, ul, last
    4160:	subs	w10, w10, #0x1
    4164:	strh	w12, [x11], #-2
    4168:	b.ne	4154 <deflateParams@@Base+0x23c>  // b.any
    416c:	lsl	x2, x8, #1
    4170:	mov	w1, wzr
    4174:	bl	2410 <memset@plt>
    4178:	str	wzr, [x21, #5928]
    417c:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    4180:	add	x8, x8, #0xc68
    4184:	add	x8, x8, w22, sxtw #4
    4188:	ldrh	w9, [x8]
    418c:	ldrh	w10, [x8, #4]
    4190:	ldrh	w11, [x8, #2]
    4194:	ldrh	w8, [x8, #6]
    4198:	str	w22, [x21, #196]
    419c:	stp	w9, w10, [x21, #204]
    41a0:	stp	w8, w11, [x21, #188]
    41a4:	mov	w0, wzr
    41a8:	str	w19, [x21, #200]
    41ac:	b	3f58 <deflateParams@@Base+0x40>

00000000000041b0 <deflate@@Base>:
    41b0:	stp	x29, x30, [sp, #-96]!
    41b4:	stp	x28, x27, [sp, #16]
    41b8:	stp	x26, x25, [sp, #32]
    41bc:	stp	x24, x23, [sp, #48]
    41c0:	stp	x22, x21, [sp, #64]
    41c4:	stp	x20, x19, [sp, #80]
    41c8:	mov	x29, sp
    41cc:	cbz	x0, 4234 <deflate@@Base+0x84>
    41d0:	ldr	x8, [x0, #64]
    41d4:	mov	x20, x0
    41d8:	cbz	x8, 4234 <deflate@@Base+0x84>
    41dc:	ldr	x8, [x20, #72]
    41e0:	cbz	x8, 4234 <deflate@@Base+0x84>
    41e4:	ldr	x19, [x20, #56]
    41e8:	cbz	x19, 4234 <deflate@@Base+0x84>
    41ec:	ldr	x8, [x19]
    41f0:	cmp	x8, x20
    41f4:	b.ne	4234 <deflate@@Base+0x84>  // b.any
    41f8:	ldr	w9, [x19, #8]
    41fc:	mov	w21, w1
    4200:	sub	w8, w9, #0x39
    4204:	cmp	w8, #0x38
    4208:	b.hi	4294 <deflate@@Base+0xe4>  // b.pmore
    420c:	mov	w10, #0x1                   	// #1
    4210:	lsl	x8, x10, x8
    4214:	mov	x10, #0x1001                	// #4097
    4218:	movk	x10, #0x1, lsl #16
    421c:	movk	x10, #0x4004, lsl #32
    4220:	movk	x10, #0x100, lsl #48
    4224:	tst	x8, x10
    4228:	b.eq	4294 <deflate@@Base+0xe4>  // b.none
    422c:	cmp	w21, #0x5
    4230:	b.ls	4254 <deflate@@Base+0xa4>  // b.plast
    4234:	mov	w0, #0xfffffffe            	// #-2
    4238:	ldp	x20, x19, [sp, #80]
    423c:	ldp	x22, x21, [sp, #64]
    4240:	ldp	x24, x23, [sp, #48]
    4244:	ldp	x26, x25, [sp, #32]
    4248:	ldp	x28, x27, [sp, #16]
    424c:	ldp	x29, x30, [sp], #96
    4250:	ret
    4254:	ldr	x8, [x20, #24]
    4258:	cbz	x8, 427c <deflate@@Base+0xcc>
    425c:	ldr	w8, [x20, #8]
    4260:	cbz	w8, 426c <deflate@@Base+0xbc>
    4264:	ldr	x10, [x20]
    4268:	cbz	x10, 427c <deflate@@Base+0xcc>
    426c:	cmp	w21, #0x4
    4270:	b.eq	42a8 <deflate@@Base+0xf8>  // b.none
    4274:	cmp	w9, #0x29a
    4278:	b.ne	42a8 <deflate@@Base+0xf8>  // b.any
    427c:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    4280:	ldr	x8, [x8, #4056]
    4284:	mov	w0, #0xfffffffe            	// #-2
    4288:	ldr	x8, [x8, #32]
    428c:	str	x8, [x20, #48]
    4290:	b	4238 <deflate@@Base+0x88>
    4294:	cmp	w9, #0x29a
    4298:	b.eq	422c <deflate@@Base+0x7c>  // b.none
    429c:	cmp	w9, #0x2a
    42a0:	b.ne	4234 <deflate@@Base+0x84>  // b.any
    42a4:	b	422c <deflate@@Base+0x7c>
    42a8:	ldr	w10, [x20, #32]
    42ac:	cbz	w10, 469c <deflate@@Base+0x4ec>
    42b0:	ldr	x11, [x19, #40]
    42b4:	ldr	w10, [x19, #76]
    42b8:	str	w21, [x19, #76]
    42bc:	cbz	x11, 4344 <deflate@@Base+0x194>
    42c0:	mov	x0, x19
    42c4:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    42c8:	ldr	x8, [x19, #40]
    42cc:	ldr	w9, [x20, #32]
    42d0:	cmp	w9, w8
    42d4:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    42d8:	cbz	w23, 4338 <deflate@@Base+0x188>
    42dc:	ldr	x0, [x20, #24]
    42e0:	ldr	x1, [x19, #32]
    42e4:	mov	w22, w23
    42e8:	mov	x2, x22
    42ec:	bl	2330 <memcpy@plt>
    42f0:	ldr	x8, [x20, #24]
    42f4:	add	x8, x8, x22
    42f8:	str	x8, [x20, #24]
    42fc:	ldr	x8, [x19, #32]
    4300:	add	x8, x8, x22
    4304:	str	x8, [x19, #32]
    4308:	ldr	x8, [x20, #40]
    430c:	ldr	w9, [x20, #32]
    4310:	add	x8, x8, x22
    4314:	sub	w9, w9, w23
    4318:	str	x8, [x20, #40]
    431c:	str	w9, [x20, #32]
    4320:	ldr	x8, [x19, #40]
    4324:	subs	x8, x8, x22
    4328:	str	x8, [x19, #40]
    432c:	b.ne	4338 <deflate@@Base+0x188>  // b.any
    4330:	ldr	x10, [x19, #16]
    4334:	str	x10, [x19, #32]
    4338:	cbz	w9, 582c <deflate@@Base+0x167c>
    433c:	ldr	w9, [x19, #8]
    4340:	b	434c <deflate@@Base+0x19c>
    4344:	cbz	w8, 4664 <deflate@@Base+0x4b4>
    4348:	mov	x8, xzr
    434c:	cmp	w9, #0x2a
    4350:	b.eq	4368 <deflate@@Base+0x1b8>  // b.none
    4354:	cmp	w9, #0x29a
    4358:	b.ne	4508 <deflate@@Base+0x358>  // b.any
    435c:	ldr	w8, [x20, #8]
    4360:	cbnz	w8, 469c <deflate@@Base+0x4ec>
    4364:	b	4e84 <deflate@@Base+0xcd4>
    4368:	ldr	w9, [x19, #200]
    436c:	ldr	w10, [x19, #84]
    4370:	mov	w11, #0xffff8800            	// #-30720
    4374:	cmp	w9, #0x1
    4378:	add	w9, w11, w10, lsl #12
    437c:	b.gt	438c <deflate@@Base+0x1dc>
    4380:	ldr	w10, [x19, #196]
    4384:	cmp	w10, #0x2
    4388:	b.ge	472c <deflate@@Base+0x57c>  // b.tcont
    438c:	mov	w10, wzr
    4390:	orr	w9, w10, w9
    4394:	ldr	w10, [x19, #172]
    4398:	add	x12, x8, #0x1
    439c:	mov	w11, #0x1085                	// #4229
    43a0:	str	x12, [x19, #40]
    43a4:	ldr	x12, [x19, #16]
    43a8:	cmp	w10, #0x0
    43ac:	orr	w10, w9, #0x20
    43b0:	movk	w11, #0x842, lsl #16
    43b4:	csel	w9, w9, w10, eq  // eq = none
    43b8:	umull	x10, w9, w11
    43bc:	lsr	w11, w9, #8
    43c0:	lsr	x10, x10, #32
    43c4:	strb	w11, [x12, x8]
    43c8:	sub	w8, w9, w10
    43cc:	add	w8, w10, w8, lsr #1
    43d0:	ldr	x12, [x19, #40]
    43d4:	lsr	w8, w8, #4
    43d8:	ldr	x11, [x19, #16]
    43dc:	sub	w8, w8, w8, lsl #5
    43e0:	add	w8, w9, w8
    43e4:	orr	w8, w8, w9
    43e8:	add	x10, x12, #0x1
    43ec:	eor	w8, w8, #0x1f
    43f0:	str	x10, [x19, #40]
    43f4:	strb	w8, [x11, x12]
    43f8:	ldr	w8, [x19, #172]
    43fc:	cbz	w8, 4464 <deflate@@Base+0x2b4>
    4400:	ldr	x8, [x20, #96]
    4404:	ldr	x9, [x19, #40]
    4408:	ldr	x10, [x19, #16]
    440c:	lsr	x11, x8, #24
    4410:	add	x12, x9, #0x1
    4414:	str	x12, [x19, #40]
    4418:	strb	w11, [x10, x9]
    441c:	ldr	x9, [x19, #40]
    4420:	ldr	x10, [x19, #16]
    4424:	lsr	x8, x8, #16
    4428:	add	x11, x9, #0x1
    442c:	str	x11, [x19, #40]
    4430:	strb	w8, [x10, x9]
    4434:	ldr	x8, [x20, #96]
    4438:	ldr	x9, [x19, #40]
    443c:	ldr	x10, [x19, #16]
    4440:	ubfx	x11, x8, #8, #24
    4444:	add	x12, x9, #0x1
    4448:	str	x12, [x19, #40]
    444c:	strb	w11, [x10, x9]
    4450:	ldr	x9, [x19, #40]
    4454:	ldr	x10, [x19, #16]
    4458:	add	x11, x9, #0x1
    445c:	str	x11, [x19, #40]
    4460:	strb	w8, [x10, x9]
    4464:	mov	x0, xzr
    4468:	mov	x1, xzr
    446c:	mov	w2, wzr
    4470:	bl	24c0 <adler32@plt>
    4474:	mov	w8, #0x71                  	// #113
    4478:	str	x0, [x20, #96]
    447c:	str	w8, [x19, #8]
    4480:	ldr	x22, [x20, #56]
    4484:	mov	x0, x22
    4488:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    448c:	ldr	w8, [x22, #40]
    4490:	ldr	w9, [x20, #32]
    4494:	cmp	w9, w8
    4498:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    449c:	cbz	w24, 44fc <deflate@@Base+0x34c>
    44a0:	ldr	x0, [x20, #24]
    44a4:	ldr	x1, [x22, #32]
    44a8:	mov	w23, w24
    44ac:	mov	x2, x23
    44b0:	bl	2330 <memcpy@plt>
    44b4:	ldr	x8, [x20, #24]
    44b8:	add	x8, x8, x23
    44bc:	str	x8, [x20, #24]
    44c0:	ldr	x8, [x22, #32]
    44c4:	add	x8, x8, x23
    44c8:	str	x8, [x22, #32]
    44cc:	ldr	x8, [x20, #40]
    44d0:	ldr	w9, [x20, #32]
    44d4:	add	x8, x8, x23
    44d8:	sub	w9, w9, w24
    44dc:	str	x8, [x20, #40]
    44e0:	str	w9, [x20, #32]
    44e4:	ldr	x8, [x22, #40]
    44e8:	subs	x8, x8, x23
    44ec:	str	x8, [x22, #40]
    44f0:	b.ne	44fc <deflate@@Base+0x34c>  // b.any
    44f4:	ldr	x8, [x22, #16]
    44f8:	str	x8, [x22, #32]
    44fc:	ldr	x8, [x19, #40]
    4500:	cbnz	x8, 582c <deflate@@Base+0x167c>
    4504:	ldr	w9, [x19, #8]
    4508:	cmp	w9, #0x39
    450c:	b.ne	48c4 <deflate@@Base+0x714>  // b.any
    4510:	mov	x0, xzr
    4514:	mov	x1, xzr
    4518:	mov	w2, wzr
    451c:	bl	23b0 <crc32@plt>
    4520:	str	x0, [x20, #96]
    4524:	ldr	x8, [x19, #40]
    4528:	ldr	x9, [x19, #16]
    452c:	add	x10, x8, #0x1
    4530:	str	x10, [x19, #40]
    4534:	mov	w10, #0x1f                  	// #31
    4538:	strb	w10, [x9, x8]
    453c:	ldr	x8, [x19, #40]
    4540:	ldr	x9, [x19, #16]
    4544:	add	x10, x8, #0x1
    4548:	str	x10, [x19, #40]
    454c:	mov	w10, #0x8b                  	// #139
    4550:	strb	w10, [x9, x8]
    4554:	ldr	x8, [x19, #40]
    4558:	ldr	x9, [x19, #16]
    455c:	add	x10, x8, #0x1
    4560:	str	x10, [x19, #40]
    4564:	mov	w10, #0x8                   	// #8
    4568:	strb	w10, [x9, x8]
    456c:	ldr	x8, [x19, #56]
    4570:	cbz	x8, 46b4 <deflate@@Base+0x504>
    4574:	ldr	w9, [x8]
    4578:	ldr	w10, [x8, #68]
    457c:	ldr	x13, [x19, #40]
    4580:	ldr	x11, [x8, #24]
    4584:	ldr	x12, [x8, #40]
    4588:	ldr	x8, [x8, #56]
    458c:	cmp	w9, #0x0
    4590:	cset	w9, ne  // ne = any
    4594:	cmp	w10, #0x0
    4598:	add	x10, x13, #0x1
    459c:	str	x10, [x19, #40]
    45a0:	cset	w10, ne  // ne = any
    45a4:	cmp	x11, #0x0
    45a8:	bfi	w9, w10, #1, #1
    45ac:	cset	w10, ne  // ne = any
    45b0:	cmp	x12, #0x0
    45b4:	bfi	w9, w10, #2, #1
    45b8:	cset	w10, ne  // ne = any
    45bc:	cmp	x8, #0x0
    45c0:	ldr	x8, [x19, #16]
    45c4:	bfi	w9, w10, #3, #1
    45c8:	cset	w10, ne  // ne = any
    45cc:	bfi	w9, w10, #4, #1
    45d0:	strb	w9, [x8, x13]
    45d4:	ldr	x8, [x19, #56]
    45d8:	ldr	x9, [x19, #40]
    45dc:	ldr	x10, [x19, #16]
    45e0:	ldr	x8, [x8, #8]
    45e4:	add	x11, x9, #0x1
    45e8:	str	x11, [x19, #40]
    45ec:	strb	w8, [x10, x9]
    45f0:	ldr	x8, [x19, #56]
    45f4:	ldr	x9, [x19, #40]
    45f8:	ldr	x10, [x19, #16]
    45fc:	ldr	x8, [x8, #8]
    4600:	add	x11, x9, #0x1
    4604:	str	x11, [x19, #40]
    4608:	lsr	x8, x8, #8
    460c:	strb	w8, [x10, x9]
    4610:	ldr	x8, [x19, #56]
    4614:	ldr	x9, [x19, #40]
    4618:	ldr	x10, [x19, #16]
    461c:	ldr	x8, [x8, #8]
    4620:	add	x11, x9, #0x1
    4624:	str	x11, [x19, #40]
    4628:	lsr	x8, x8, #16
    462c:	strb	w8, [x10, x9]
    4630:	ldr	x8, [x19, #56]
    4634:	ldr	x9, [x19, #40]
    4638:	ldr	x10, [x19, #16]
    463c:	ldr	x8, [x8, #8]
    4640:	add	x11, x9, #0x1
    4644:	str	x11, [x19, #40]
    4648:	lsr	x8, x8, #24
    464c:	strb	w8, [x10, x9]
    4650:	ldr	w8, [x19, #196]
    4654:	cmp	w8, #0x9
    4658:	b.ne	473c <deflate@@Base+0x58c>  // b.any
    465c:	mov	w8, #0x2                   	// #2
    4660:	b	4750 <deflate@@Base+0x5a0>
    4664:	cmp	w21, #0x4
    4668:	mov	w8, #0x9                   	// #9
    466c:	csel	w11, w8, wzr, gt
    4670:	cmp	w10, #0x4
    4674:	csel	w12, w8, wzr, gt
    4678:	cmp	w21, #0x4
    467c:	mov	x8, xzr
    4680:	b.eq	434c <deflate@@Base+0x19c>  // b.none
    4684:	lsl	w13, w21, #1
    4688:	lsl	w10, w10, #1
    468c:	sub	w11, w13, w11
    4690:	sub	w10, w10, w12
    4694:	cmp	w11, w10
    4698:	b.gt	434c <deflate@@Base+0x19c>
    469c:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    46a0:	ldr	x8, [x8, #4056]
    46a4:	mov	w0, #0xfffffffb            	// #-5
    46a8:	ldr	x8, [x8, #56]
    46ac:	str	x8, [x20, #48]
    46b0:	b	4238 <deflate@@Base+0x88>
    46b4:	ldr	x8, [x19, #40]
    46b8:	ldr	x9, [x19, #16]
    46bc:	add	x10, x8, #0x1
    46c0:	str	x10, [x19, #40]
    46c4:	strb	wzr, [x9, x8]
    46c8:	ldr	x8, [x19, #40]
    46cc:	ldr	x9, [x19, #16]
    46d0:	add	x10, x8, #0x1
    46d4:	str	x10, [x19, #40]
    46d8:	strb	wzr, [x9, x8]
    46dc:	ldr	x8, [x19, #40]
    46e0:	ldr	x9, [x19, #16]
    46e4:	add	x10, x8, #0x1
    46e8:	str	x10, [x19, #40]
    46ec:	strb	wzr, [x9, x8]
    46f0:	ldr	x8, [x19, #40]
    46f4:	ldr	x9, [x19, #16]
    46f8:	add	x10, x8, #0x1
    46fc:	str	x10, [x19, #40]
    4700:	strb	wzr, [x9, x8]
    4704:	ldr	x8, [x19, #40]
    4708:	ldr	x9, [x19, #16]
    470c:	add	x10, x8, #0x1
    4710:	str	x10, [x19, #40]
    4714:	strb	wzr, [x9, x8]
    4718:	ldr	w8, [x19, #196]
    471c:	cmp	w8, #0x9
    4720:	b.ne	47f4 <deflate@@Base+0x644>  // b.any
    4724:	mov	w8, #0x2                   	// #2
    4728:	b	4808 <deflate@@Base+0x658>
    472c:	cmp	w10, #0x6
    4730:	b.ge	4a14 <deflate@@Base+0x864>  // b.tcont
    4734:	mov	w10, #0x40                  	// #64
    4738:	b	4390 <deflate@@Base+0x1e0>
    473c:	ldr	w9, [x19, #200]
    4740:	cmp	w9, #0x1
    4744:	ccmp	w8, #0x2, #0x8, le
    4748:	mov	w8, #0x4                   	// #4
    474c:	csel	w8, w8, wzr, lt  // lt = tstop
    4750:	ldr	x9, [x19, #40]
    4754:	ldr	x10, [x19, #16]
    4758:	add	x11, x9, #0x1
    475c:	str	x11, [x19, #40]
    4760:	strb	w8, [x10, x9]
    4764:	ldr	x8, [x19, #56]
    4768:	ldr	x9, [x19, #40]
    476c:	ldr	x10, [x19, #16]
    4770:	ldr	w8, [x8, #20]
    4774:	add	x11, x9, #0x1
    4778:	str	x11, [x19, #40]
    477c:	strb	w8, [x10, x9]
    4780:	ldr	x8, [x19, #56]
    4784:	ldr	x9, [x8, #24]
    4788:	cbz	x9, 47c8 <deflate@@Base+0x618>
    478c:	ldr	x9, [x19, #40]
    4790:	ldr	w8, [x8, #32]
    4794:	ldr	x10, [x19, #16]
    4798:	add	x11, x9, #0x1
    479c:	str	x11, [x19, #40]
    47a0:	strb	w8, [x10, x9]
    47a4:	ldr	x8, [x19, #56]
    47a8:	ldr	x9, [x19, #40]
    47ac:	ldr	x10, [x19, #16]
    47b0:	ldr	w8, [x8, #32]
    47b4:	add	x11, x9, #0x1
    47b8:	str	x11, [x19, #40]
    47bc:	lsr	w8, w8, #8
    47c0:	strb	w8, [x10, x9]
    47c4:	ldr	x8, [x19, #56]
    47c8:	ldr	w8, [x8, #68]
    47cc:	cbz	w8, 47e4 <deflate@@Base+0x634>
    47d0:	ldr	x0, [x20, #96]
    47d4:	ldr	x1, [x19, #16]
    47d8:	ldr	w2, [x19, #40]
    47dc:	bl	23b0 <crc32@plt>
    47e0:	str	x0, [x20, #96]
    47e4:	mov	w8, #0x45                  	// #69
    47e8:	str	xzr, [x19, #64]
    47ec:	str	w8, [x19, #8]
    47f0:	b	48e8 <deflate@@Base+0x738>
    47f4:	ldr	w9, [x19, #200]
    47f8:	cmp	w9, #0x1
    47fc:	ccmp	w8, #0x2, #0x8, le
    4800:	mov	w8, #0x4                   	// #4
    4804:	csel	w8, w8, wzr, lt  // lt = tstop
    4808:	ldr	x9, [x19, #40]
    480c:	ldr	x10, [x19, #16]
    4810:	add	x11, x9, #0x1
    4814:	str	x11, [x19, #40]
    4818:	strb	w8, [x10, x9]
    481c:	ldr	x8, [x19, #40]
    4820:	ldr	x10, [x19, #16]
    4824:	mov	w9, #0x3                   	// #3
    4828:	mov	w11, #0x71                  	// #113
    482c:	add	x12, x8, #0x1
    4830:	str	x12, [x19, #40]
    4834:	strb	w9, [x10, x8]
    4838:	str	w11, [x19, #8]
    483c:	ldr	x22, [x20, #56]
    4840:	mov	x0, x22
    4844:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    4848:	ldr	w8, [x22, #40]
    484c:	ldr	w9, [x20, #32]
    4850:	cmp	w9, w8
    4854:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4858:	cbz	w24, 48b8 <deflate@@Base+0x708>
    485c:	ldr	x0, [x20, #24]
    4860:	ldr	x1, [x22, #32]
    4864:	mov	w23, w24
    4868:	mov	x2, x23
    486c:	bl	2330 <memcpy@plt>
    4870:	ldr	x8, [x20, #24]
    4874:	add	x8, x8, x23
    4878:	str	x8, [x20, #24]
    487c:	ldr	x8, [x22, #32]
    4880:	add	x8, x8, x23
    4884:	str	x8, [x22, #32]
    4888:	ldr	x8, [x20, #40]
    488c:	ldr	w9, [x20, #32]
    4890:	add	x8, x8, x23
    4894:	sub	w9, w9, w24
    4898:	str	x8, [x20, #40]
    489c:	str	w9, [x20, #32]
    48a0:	ldr	x8, [x22, #40]
    48a4:	subs	x8, x8, x23
    48a8:	str	x8, [x22, #40]
    48ac:	b.ne	48b8 <deflate@@Base+0x708>  // b.any
    48b0:	ldr	x8, [x22, #16]
    48b4:	str	x8, [x22, #32]
    48b8:	ldr	x8, [x19, #40]
    48bc:	cbnz	x8, 582c <deflate@@Base+0x167c>
    48c0:	ldr	w9, [x19, #8]
    48c4:	sub	w8, w9, #0x45
    48c8:	cmp	w8, #0x22
    48cc:	b.hi	4e7c <deflate@@Base+0xccc>  // b.pmore
    48d0:	adrp	x9, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    48d4:	add	x9, x9, #0xca8
    48d8:	adr	x10, 48e8 <deflate@@Base+0x738>
    48dc:	ldrh	w11, [x9, x8, lsl #1]
    48e0:	add	x10, x10, x11, lsl #2
    48e4:	br	x10
    48e8:	ldr	x9, [x19, #56]
    48ec:	ldr	x8, [x9, #24]
    48f0:	cbz	x8, 4a84 <deflate@@Base+0x8d4>
    48f4:	ldrh	w11, [x9, #32]
    48f8:	ldr	x9, [x19, #64]
    48fc:	ldr	x24, [x19, #40]
    4900:	ldr	x10, [x19, #24]
    4904:	sub	w22, w11, w9
    4908:	add	x11, x24, x22
    490c:	cmp	x11, x10
    4910:	b.ls	4a34 <deflate@@Base+0x884>  // b.plast
    4914:	ldr	x11, [x19, #16]
    4918:	sub	x25, x10, x24
    491c:	and	x23, x25, #0xffffffff
    4920:	add	x1, x8, x9
    4924:	add	x0, x11, x24
    4928:	mov	x2, x23
    492c:	bl	2330 <memcpy@plt>
    4930:	ldr	x8, [x19, #24]
    4934:	cmp	x8, x24
    4938:	str	x8, [x19, #40]
    493c:	b.ls	4964 <deflate@@Base+0x7b4>  // b.plast
    4940:	ldr	x9, [x19, #56]
    4944:	ldr	w9, [x9, #68]
    4948:	cbz	w9, 4964 <deflate@@Base+0x7b4>
    494c:	ldr	x9, [x19, #16]
    4950:	ldr	x0, [x20, #96]
    4954:	sub	w2, w8, w24
    4958:	add	x1, x9, x24
    495c:	bl	23b0 <crc32@plt>
    4960:	str	x0, [x20, #96]
    4964:	ldr	x8, [x19, #64]
    4968:	add	x8, x8, x23
    496c:	str	x8, [x19, #64]
    4970:	ldr	x23, [x20, #56]
    4974:	mov	x0, x23
    4978:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    497c:	ldr	w8, [x23, #40]
    4980:	ldr	w9, [x20, #32]
    4984:	cmp	w9, w8
    4988:	csel	w26, w9, w8, cc  // cc = lo, ul, last
    498c:	cbz	w26, 49ec <deflate@@Base+0x83c>
    4990:	ldr	x0, [x20, #24]
    4994:	ldr	x1, [x23, #32]
    4998:	mov	w24, w26
    499c:	mov	x2, x24
    49a0:	bl	2330 <memcpy@plt>
    49a4:	ldr	x8, [x20, #24]
    49a8:	add	x8, x8, x24
    49ac:	str	x8, [x20, #24]
    49b0:	ldr	x8, [x23, #32]
    49b4:	add	x8, x8, x24
    49b8:	str	x8, [x23, #32]
    49bc:	ldr	x8, [x20, #40]
    49c0:	ldr	w9, [x20, #32]
    49c4:	add	x8, x8, x24
    49c8:	sub	w9, w9, w26
    49cc:	str	x8, [x20, #40]
    49d0:	str	w9, [x20, #32]
    49d4:	ldr	x8, [x23, #40]
    49d8:	subs	x8, x8, x24
    49dc:	str	x8, [x23, #40]
    49e0:	b.ne	49ec <deflate@@Base+0x83c>  // b.any
    49e4:	ldr	x8, [x23, #16]
    49e8:	str	x8, [x23, #32]
    49ec:	ldr	x8, [x19, #40]
    49f0:	cbnz	x8, 582c <deflate@@Base+0x167c>
    49f4:	ldr	x10, [x19, #24]
    49f8:	sub	w22, w22, w25
    49fc:	cmp	x10, w22, uxtw
    4a00:	b.cs	4a24 <deflate@@Base+0x874>  // b.hs, b.nlast
    4a04:	ldp	x8, x9, [x19, #56]
    4a08:	mov	x24, xzr
    4a0c:	ldr	x8, [x8, #24]
    4a10:	b	4914 <deflate@@Base+0x764>
    4a14:	mov	w10, #0xc0                  	// #192
    4a18:	mov	w11, #0x80                  	// #128
    4a1c:	csel	w10, w11, w10, eq  // eq = none
    4a20:	b	4390 <deflate@@Base+0x1e0>
    4a24:	ldp	x8, x9, [x19, #56]
    4a28:	mov	x24, xzr
    4a2c:	mov	w22, w22
    4a30:	ldr	x8, [x8, #24]
    4a34:	ldr	x10, [x19, #16]
    4a38:	add	x1, x8, x9
    4a3c:	mov	x2, x22
    4a40:	add	x0, x10, x24
    4a44:	bl	2330 <memcpy@plt>
    4a48:	ldr	x8, [x19, #40]
    4a4c:	add	x8, x8, x22
    4a50:	cmp	x8, x24
    4a54:	str	x8, [x19, #40]
    4a58:	b.ls	4a80 <deflate@@Base+0x8d0>  // b.plast
    4a5c:	ldr	x9, [x19, #56]
    4a60:	ldr	w9, [x9, #68]
    4a64:	cbz	w9, 4a80 <deflate@@Base+0x8d0>
    4a68:	ldr	x9, [x19, #16]
    4a6c:	ldr	x0, [x20, #96]
    4a70:	sub	w2, w8, w24
    4a74:	add	x1, x9, x24
    4a78:	bl	23b0 <crc32@plt>
    4a7c:	str	x0, [x20, #96]
    4a80:	str	xzr, [x19, #64]
    4a84:	mov	w8, #0x49                  	// #73
    4a88:	str	w8, [x19, #8]
    4a8c:	ldr	x8, [x19, #56]
    4a90:	ldr	x8, [x8, #40]
    4a94:	cbz	x8, 4bc4 <deflate@@Base+0xa14>
    4a98:	ldr	x9, [x19, #40]
    4a9c:	mov	x8, x9
    4aa0:	ldr	x10, [x19, #24]
    4aa4:	cmp	x9, x10
    4aa8:	b.ne	4b60 <deflate@@Base+0x9b0>  // b.any
    4aac:	cmp	x9, x8
    4ab0:	b.ls	4ad8 <deflate@@Base+0x928>  // b.plast
    4ab4:	ldr	x10, [x19, #56]
    4ab8:	ldr	w10, [x10, #68]
    4abc:	cbz	w10, 4ad8 <deflate@@Base+0x928>
    4ac0:	ldr	x10, [x19, #16]
    4ac4:	ldr	x0, [x20, #96]
    4ac8:	sub	w2, w9, w8
    4acc:	add	x1, x10, x8
    4ad0:	bl	23b0 <crc32@plt>
    4ad4:	str	x0, [x20, #96]
    4ad8:	ldr	x22, [x20, #56]
    4adc:	mov	x0, x22
    4ae0:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    4ae4:	ldr	w8, [x22, #40]
    4ae8:	ldr	w9, [x20, #32]
    4aec:	cmp	w9, w8
    4af0:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4af4:	cbz	w24, 4b54 <deflate@@Base+0x9a4>
    4af8:	ldr	x0, [x20, #24]
    4afc:	ldr	x1, [x22, #32]
    4b00:	mov	w23, w24
    4b04:	mov	x2, x23
    4b08:	bl	2330 <memcpy@plt>
    4b0c:	ldr	x8, [x20, #24]
    4b10:	add	x8, x8, x23
    4b14:	str	x8, [x20, #24]
    4b18:	ldr	x8, [x22, #32]
    4b1c:	add	x8, x8, x23
    4b20:	str	x8, [x22, #32]
    4b24:	ldr	x8, [x20, #40]
    4b28:	ldr	w9, [x20, #32]
    4b2c:	add	x8, x8, x23
    4b30:	sub	w9, w9, w24
    4b34:	str	x8, [x20, #40]
    4b38:	str	w9, [x20, #32]
    4b3c:	ldr	x8, [x22, #40]
    4b40:	subs	x8, x8, x23
    4b44:	str	x8, [x22, #40]
    4b48:	b.ne	4b54 <deflate@@Base+0x9a4>  // b.any
    4b4c:	ldr	x8, [x22, #16]
    4b50:	str	x8, [x22, #32]
    4b54:	ldr	x8, [x19, #40]
    4b58:	cbnz	x8, 582c <deflate@@Base+0x167c>
    4b5c:	mov	x9, xzr
    4b60:	ldp	x10, x11, [x19, #56]
    4b64:	ldr	x10, [x10, #40]
    4b68:	add	x12, x11, #0x1
    4b6c:	str	x12, [x19, #64]
    4b70:	add	x12, x9, #0x1
    4b74:	ldrb	w10, [x10, x11]
    4b78:	ldr	x11, [x19, #16]
    4b7c:	str	x12, [x19, #40]
    4b80:	strb	w10, [x11, x9]
    4b84:	cbz	w10, 4b90 <deflate@@Base+0x9e0>
    4b88:	ldr	x9, [x19, #40]
    4b8c:	b	4aa0 <deflate@@Base+0x8f0>
    4b90:	ldr	x9, [x19, #56]
    4b94:	ldr	w9, [x9, #68]
    4b98:	cbz	w9, 4bc0 <deflate@@Base+0xa10>
    4b9c:	ldr	x9, [x19, #40]
    4ba0:	cmp	x9, x8
    4ba4:	b.ls	4bc0 <deflate@@Base+0xa10>  // b.plast
    4ba8:	ldr	x10, [x19, #16]
    4bac:	ldr	x0, [x20, #96]
    4bb0:	sub	w2, w9, w8
    4bb4:	add	x1, x10, x8
    4bb8:	bl	23b0 <crc32@plt>
    4bbc:	str	x0, [x20, #96]
    4bc0:	str	xzr, [x19, #64]
    4bc4:	mov	w8, #0x5b                  	// #91
    4bc8:	str	w8, [x19, #8]
    4bcc:	ldr	x8, [x19, #56]
    4bd0:	ldr	x8, [x8, #56]
    4bd4:	cbz	x8, 4d00 <deflate@@Base+0xb50>
    4bd8:	ldr	x9, [x19, #40]
    4bdc:	mov	x8, x9
    4be0:	ldr	x10, [x19, #24]
    4be4:	cmp	x9, x10
    4be8:	b.ne	4ca0 <deflate@@Base+0xaf0>  // b.any
    4bec:	cmp	x9, x8
    4bf0:	b.ls	4c18 <deflate@@Base+0xa68>  // b.plast
    4bf4:	ldr	x10, [x19, #56]
    4bf8:	ldr	w10, [x10, #68]
    4bfc:	cbz	w10, 4c18 <deflate@@Base+0xa68>
    4c00:	ldr	x10, [x19, #16]
    4c04:	ldr	x0, [x20, #96]
    4c08:	sub	w2, w9, w8
    4c0c:	add	x1, x10, x8
    4c10:	bl	23b0 <crc32@plt>
    4c14:	str	x0, [x20, #96]
    4c18:	ldr	x22, [x20, #56]
    4c1c:	mov	x0, x22
    4c20:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    4c24:	ldr	w8, [x22, #40]
    4c28:	ldr	w9, [x20, #32]
    4c2c:	cmp	w9, w8
    4c30:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4c34:	cbz	w24, 4c94 <deflate@@Base+0xae4>
    4c38:	ldr	x0, [x20, #24]
    4c3c:	ldr	x1, [x22, #32]
    4c40:	mov	w23, w24
    4c44:	mov	x2, x23
    4c48:	bl	2330 <memcpy@plt>
    4c4c:	ldr	x8, [x20, #24]
    4c50:	add	x8, x8, x23
    4c54:	str	x8, [x20, #24]
    4c58:	ldr	x8, [x22, #32]
    4c5c:	add	x8, x8, x23
    4c60:	str	x8, [x22, #32]
    4c64:	ldr	x8, [x20, #40]
    4c68:	ldr	w9, [x20, #32]
    4c6c:	add	x8, x8, x23
    4c70:	sub	w9, w9, w24
    4c74:	str	x8, [x20, #40]
    4c78:	str	w9, [x20, #32]
    4c7c:	ldr	x8, [x22, #40]
    4c80:	subs	x8, x8, x23
    4c84:	str	x8, [x22, #40]
    4c88:	b.ne	4c94 <deflate@@Base+0xae4>  // b.any
    4c8c:	ldr	x8, [x22, #16]
    4c90:	str	x8, [x22, #32]
    4c94:	ldr	x8, [x19, #40]
    4c98:	cbnz	x8, 582c <deflate@@Base+0x167c>
    4c9c:	mov	x9, xzr
    4ca0:	ldp	x10, x11, [x19, #56]
    4ca4:	ldr	x10, [x10, #56]
    4ca8:	add	x12, x11, #0x1
    4cac:	str	x12, [x19, #64]
    4cb0:	add	x12, x9, #0x1
    4cb4:	ldrb	w10, [x10, x11]
    4cb8:	ldr	x11, [x19, #16]
    4cbc:	str	x12, [x19, #40]
    4cc0:	strb	w10, [x11, x9]
    4cc4:	cbz	w10, 4cd0 <deflate@@Base+0xb20>
    4cc8:	ldr	x9, [x19, #40]
    4ccc:	b	4be0 <deflate@@Base+0xa30>
    4cd0:	ldr	x9, [x19, #56]
    4cd4:	ldr	w9, [x9, #68]
    4cd8:	cbz	w9, 4d00 <deflate@@Base+0xb50>
    4cdc:	ldr	x9, [x19, #40]
    4ce0:	cmp	x9, x8
    4ce4:	b.ls	4d00 <deflate@@Base+0xb50>  // b.plast
    4ce8:	ldr	x10, [x19, #16]
    4cec:	ldr	x0, [x20, #96]
    4cf0:	sub	w2, w9, w8
    4cf4:	add	x1, x10, x8
    4cf8:	bl	23b0 <crc32@plt>
    4cfc:	str	x0, [x20, #96]
    4d00:	mov	w8, #0x67                  	// #103
    4d04:	str	w8, [x19, #8]
    4d08:	ldr	x8, [x19, #56]
    4d0c:	ldr	w8, [x8, #68]
    4d10:	cbz	w8, 4df0 <deflate@@Base+0xc40>
    4d14:	ldr	x8, [x19, #40]
    4d18:	ldr	x9, [x19, #24]
    4d1c:	add	x10, x8, #0x2
    4d20:	cmp	x10, x9
    4d24:	b.ls	4dac <deflate@@Base+0xbfc>  // b.plast
    4d28:	ldr	x22, [x20, #56]
    4d2c:	mov	x0, x22
    4d30:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    4d34:	ldr	w8, [x22, #40]
    4d38:	ldr	w9, [x20, #32]
    4d3c:	cmp	w9, w8
    4d40:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4d44:	cbz	w24, 4da4 <deflate@@Base+0xbf4>
    4d48:	ldr	x0, [x20, #24]
    4d4c:	ldr	x1, [x22, #32]
    4d50:	mov	w23, w24
    4d54:	mov	x2, x23
    4d58:	bl	2330 <memcpy@plt>
    4d5c:	ldr	x8, [x20, #24]
    4d60:	add	x8, x8, x23
    4d64:	str	x8, [x20, #24]
    4d68:	ldr	x8, [x22, #32]
    4d6c:	add	x8, x8, x23
    4d70:	str	x8, [x22, #32]
    4d74:	ldr	x8, [x20, #40]
    4d78:	ldr	w9, [x20, #32]
    4d7c:	add	x8, x8, x23
    4d80:	sub	w9, w9, w24
    4d84:	str	x8, [x20, #40]
    4d88:	str	w9, [x20, #32]
    4d8c:	ldr	x8, [x22, #40]
    4d90:	subs	x8, x8, x23
    4d94:	str	x8, [x22, #40]
    4d98:	b.ne	4da4 <deflate@@Base+0xbf4>  // b.any
    4d9c:	ldr	x8, [x22, #16]
    4da0:	str	x8, [x22, #32]
    4da4:	ldr	x8, [x19, #40]
    4da8:	cbnz	x8, 582c <deflate@@Base+0x167c>
    4dac:	ldr	x9, [x20, #96]
    4db0:	ldr	x10, [x19, #16]
    4db4:	add	x11, x8, #0x1
    4db8:	str	x11, [x19, #40]
    4dbc:	mov	x0, xzr
    4dc0:	strb	w9, [x10, x8]
    4dc4:	ldr	x8, [x20, #96]
    4dc8:	ldr	x9, [x19, #40]
    4dcc:	ldr	x10, [x19, #16]
    4dd0:	mov	x1, xzr
    4dd4:	lsr	x8, x8, #8
    4dd8:	add	x11, x9, #0x1
    4ddc:	mov	w2, wzr
    4de0:	str	x11, [x19, #40]
    4de4:	strb	w8, [x10, x9]
    4de8:	bl	23b0 <crc32@plt>
    4dec:	str	x0, [x20, #96]
    4df0:	mov	w8, #0x71                  	// #113
    4df4:	str	w8, [x19, #8]
    4df8:	ldr	x22, [x20, #56]
    4dfc:	mov	x0, x22
    4e00:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    4e04:	ldr	w8, [x22, #40]
    4e08:	ldr	w9, [x20, #32]
    4e0c:	cmp	w9, w8
    4e10:	csel	w24, w9, w8, cc  // cc = lo, ul, last
    4e14:	cbz	w24, 4e74 <deflate@@Base+0xcc4>
    4e18:	ldr	x0, [x20, #24]
    4e1c:	ldr	x1, [x22, #32]
    4e20:	mov	w23, w24
    4e24:	mov	x2, x23
    4e28:	bl	2330 <memcpy@plt>
    4e2c:	ldr	x8, [x20, #24]
    4e30:	add	x8, x8, x23
    4e34:	str	x8, [x20, #24]
    4e38:	ldr	x8, [x22, #32]
    4e3c:	add	x8, x8, x23
    4e40:	str	x8, [x22, #32]
    4e44:	ldr	x8, [x20, #40]
    4e48:	ldr	w9, [x20, #32]
    4e4c:	add	x8, x8, x23
    4e50:	sub	w9, w9, w24
    4e54:	str	x8, [x20, #40]
    4e58:	str	w9, [x20, #32]
    4e5c:	ldr	x8, [x22, #40]
    4e60:	subs	x8, x8, x23
    4e64:	str	x8, [x22, #40]
    4e68:	b.ne	4e74 <deflate@@Base+0xcc4>  // b.any
    4e6c:	ldr	x8, [x22, #16]
    4e70:	str	x8, [x22, #32]
    4e74:	ldr	x8, [x19, #40]
    4e78:	cbnz	x8, 582c <deflate@@Base+0x167c>
    4e7c:	ldr	w8, [x20, #8]
    4e80:	cbnz	w8, 4e8c <deflate@@Base+0xcdc>
    4e84:	ldr	w8, [x19, #180]
    4e88:	cbz	w8, 5058 <deflate@@Base+0xea8>
    4e8c:	ldrsw	x8, [x19, #196]
    4e90:	cbz	w8, 500c <deflate@@Base+0xe5c>
    4e94:	ldr	w9, [x19, #200]
    4e98:	cmp	w9, #0x3
    4e9c:	b.eq	506c <deflate@@Base+0xebc>  // b.none
    4ea0:	cmp	w9, #0x2
    4ea4:	b.eq	4ed4 <deflate@@Base+0xd24>  // b.none
    4ea8:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    4eac:	add	x9, x9, #0xc68
    4eb0:	add	x8, x9, x8, lsl #4
    4eb4:	ldr	x8, [x8, #8]
    4eb8:	mov	x0, x19
    4ebc:	mov	w1, w21
    4ec0:	blr	x8
    4ec4:	b	5018 <deflate@@Base+0xe68>
    4ec8:	ldr	x8, [x19]
    4ecc:	ldr	w8, [x8, #32]
    4ed0:	cbz	w8, 581c <deflate@@Base+0x166c>
    4ed4:	ldr	w8, [x19, #180]
    4ed8:	cbnz	w8, 4eec <deflate@@Base+0xd3c>
    4edc:	mov	x0, x19
    4ee0:	bl	3784 <deflateSetDictionary@@Base+0x214>
    4ee4:	ldr	w8, [x19, #180]
    4ee8:	cbz	w8, 5394 <deflate@@Base+0x11e4>
    4eec:	ldr	x8, [x19, #96]
    4ef0:	ldr	w9, [x19, #172]
    4ef4:	ldr	x10, [x19, #5904]
    4ef8:	ldr	w11, [x19, #5900]
    4efc:	str	wzr, [x19, #160]
    4f00:	ldrb	w8, [x8, x9]
    4f04:	strh	wzr, [x10, x11, lsl #1]
    4f08:	ldr	x9, [x19, #5888]
    4f0c:	add	w10, w11, #0x1
    4f10:	str	w10, [x19, #5900]
    4f14:	add	x10, x19, x8, lsl #2
    4f18:	strb	w8, [x9, x11]
    4f1c:	ldrh	w8, [x10, #212]
    4f20:	add	w8, w8, #0x1
    4f24:	strh	w8, [x10, #212]
    4f28:	ldr	w8, [x19, #5896]
    4f2c:	ldr	w9, [x19, #180]
    4f30:	ldr	w10, [x19, #172]
    4f34:	ldr	w11, [x19, #5900]
    4f38:	sub	w12, w8, #0x1
    4f3c:	sub	w9, w9, #0x1
    4f40:	add	w8, w10, #0x1
    4f44:	cmp	w11, w12
    4f48:	str	w9, [x19, #180]
    4f4c:	str	w8, [x19, #172]
    4f50:	b.ne	4ed4 <deflate@@Base+0xd24>  // b.any
    4f54:	ldr	x9, [x19, #152]
    4f58:	tbnz	x9, #63, 4f68 <deflate@@Base+0xdb8>
    4f5c:	ldr	x10, [x19, #96]
    4f60:	add	x1, x10, w9, uxtw
    4f64:	b	4f6c <deflate@@Base+0xdbc>
    4f68:	mov	x1, xzr
    4f6c:	mov	w8, w8
    4f70:	sub	x2, x8, x9
    4f74:	mov	x0, x19
    4f78:	mov	w3, wzr
    4f7c:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    4f80:	ldr	w8, [x19, #172]
    4f84:	ldr	x24, [x19]
    4f88:	str	x8, [x19, #152]
    4f8c:	ldr	x22, [x24, #56]
    4f90:	mov	x0, x22
    4f94:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    4f98:	ldr	w8, [x22, #40]
    4f9c:	ldr	w9, [x24, #32]
    4fa0:	cmp	w9, w8
    4fa4:	csel	w25, w9, w8, cc  // cc = lo, ul, last
    4fa8:	cbz	w25, 4ec8 <deflate@@Base+0xd18>
    4fac:	ldr	x0, [x24, #24]
    4fb0:	ldr	x1, [x22, #32]
    4fb4:	mov	w23, w25
    4fb8:	mov	x2, x23
    4fbc:	bl	2330 <memcpy@plt>
    4fc0:	ldr	x8, [x24, #24]
    4fc4:	add	x8, x8, x23
    4fc8:	str	x8, [x24, #24]
    4fcc:	ldr	x8, [x22, #32]
    4fd0:	add	x8, x8, x23
    4fd4:	str	x8, [x22, #32]
    4fd8:	ldr	x8, [x24, #40]
    4fdc:	ldr	w9, [x24, #32]
    4fe0:	add	x8, x8, x23
    4fe4:	sub	w9, w9, w25
    4fe8:	str	x8, [x24, #40]
    4fec:	str	w9, [x24, #32]
    4ff0:	ldr	x8, [x22, #40]
    4ff4:	subs	x8, x8, x23
    4ff8:	str	x8, [x22, #40]
    4ffc:	b.ne	4ec8 <deflate@@Base+0xd18>  // b.any
    5000:	ldr	x8, [x22, #16]
    5004:	str	x8, [x22, #32]
    5008:	b	4ec8 <deflate@@Base+0xd18>
    500c:	mov	x0, x19
    5010:	mov	w1, w21
    5014:	bl	5a20 <deflateBound@@ZLIB_1.2.0+0x160>
    5018:	orr	w8, w0, #0x1
    501c:	cmp	w8, #0x3
    5020:	b.ne	502c <deflate@@Base+0xe7c>  // b.any
    5024:	mov	w8, #0x29a                 	// #666
    5028:	str	w8, [x19, #8]
    502c:	tst	w0, #0xfffffffd
    5030:	b.eq	581c <deflate@@Base+0x166c>  // b.none
    5034:	cmp	w0, #0x1
    5038:	b.ne	547c <deflate@@Base+0x12cc>  // b.any
    503c:	cmp	w21, #0x5
    5040:	b.eq	53fc <deflate@@Base+0x124c>  // b.none
    5044:	mov	x0, x19
    5048:	cmp	w21, #0x1
    504c:	b.ne	53b4 <deflate@@Base+0x1204>  // b.any
    5050:	bl	b9d8 <inflateCodesUsed@@ZLIB_1.2.9+0x9ac>
    5054:	b	53fc <deflate@@Base+0x124c>
    5058:	cbz	w21, 547c <deflate@@Base+0x12cc>
    505c:	ldr	w8, [x19, #8]
    5060:	cmp	w8, #0x29a
    5064:	b.ne	4e8c <deflate@@Base+0xcdc>  // b.any
    5068:	b	547c <deflate@@Base+0x12cc>
    506c:	adrp	x25, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    5070:	mov	w24, #0x1                   	// #1
    5074:	add	x25, x25, #0x418
    5078:	adrp	x26, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    507c:	b	508c <deflate@@Base+0xedc>
    5080:	ldr	x8, [x19]
    5084:	ldr	w8, [x8, #32]
    5088:	cbz	w8, 581c <deflate@@Base+0x166c>
    508c:	ldr	w8, [x19, #180]
    5090:	cmp	w8, #0x103
    5094:	b.cs	50c8 <deflate@@Base+0xf18>  // b.hs, b.nlast
    5098:	mov	x0, x19
    509c:	bl	3784 <deflateSetDictionary@@Base+0x214>
    50a0:	ldr	w8, [x19, #180]
    50a4:	cbnz	w21, 50b0 <deflate@@Base+0xf00>
    50a8:	cmp	w8, #0x103
    50ac:	b.cc	581c <deflate@@Base+0x166c>  // b.lo, b.ul, b.last
    50b0:	cbz	w8, 5674 <deflate@@Base+0x14c4>
    50b4:	cmp	w8, #0x2
    50b8:	str	wzr, [x19, #160]
    50bc:	b.hi	50cc <deflate@@Base+0xf1c>  // b.pmore
    50c0:	ldr	w9, [x19, #172]
    50c4:	b	527c <deflate@@Base+0x10cc>
    50c8:	str	wzr, [x19, #160]
    50cc:	ldr	w9, [x19, #172]
    50d0:	cbz	w9, 527c <deflate@@Base+0x10cc>
    50d4:	ldr	x10, [x19, #96]
    50d8:	add	x11, x10, x9
    50dc:	ldurb	w12, [x11, #-1]
    50e0:	ldrb	w10, [x11]
    50e4:	cmp	w12, w10
    50e8:	b.ne	527c <deflate@@Base+0x10cc>  // b.any
    50ec:	ldrb	w10, [x11, #1]
    50f0:	cmp	w12, w10
    50f4:	b.ne	527c <deflate@@Base+0x10cc>  // b.any
    50f8:	ldrb	w10, [x11, #2]
    50fc:	cmp	w12, w10
    5100:	b.ne	527c <deflate@@Base+0x10cc>  // b.any
    5104:	mov	x13, xzr
    5108:	add	x10, x11, #0x102
    510c:	add	x14, x11, x13
    5110:	ldrb	w15, [x14, #3]
    5114:	cmp	w12, w15
    5118:	b.ne	5198 <deflate@@Base+0xfe8>  // b.any
    511c:	ldrb	w14, [x14, #4]
    5120:	cmp	w12, w14
    5124:	b.ne	51a0 <deflate@@Base+0xff0>  // b.any
    5128:	add	x14, x11, x13
    512c:	ldrb	w15, [x14, #5]
    5130:	cmp	w12, w15
    5134:	b.ne	51ac <deflate@@Base+0xffc>  // b.any
    5138:	ldrb	w14, [x14, #6]
    513c:	cmp	w12, w14
    5140:	b.ne	51b4 <deflate@@Base+0x1004>  // b.any
    5144:	add	x14, x11, x13
    5148:	ldrb	w15, [x14, #7]
    514c:	cmp	w12, w15
    5150:	b.ne	51c0 <deflate@@Base+0x1010>  // b.any
    5154:	ldrb	w14, [x14, #8]
    5158:	cmp	w12, w14
    515c:	b.ne	51c8 <deflate@@Base+0x1018>  // b.any
    5160:	add	x14, x11, x13
    5164:	ldrb	w15, [x14, #9]
    5168:	cmp	w12, w15
    516c:	b.ne	51d4 <deflate@@Base+0x1024>  // b.any
    5170:	add	x15, x13, #0x2
    5174:	cmp	x15, #0xf9
    5178:	add	x13, x13, #0x8
    517c:	b.hi	518c <deflate@@Base+0xfdc>  // b.pmore
    5180:	ldrb	w14, [x14, #10]
    5184:	cmp	w12, w14
    5188:	b.eq	510c <deflate@@Base+0xf5c>  // b.none
    518c:	add	x11, x11, x13
    5190:	add	x11, x11, #0x2
    5194:	b	51d8 <deflate@@Base+0x1028>
    5198:	add	x11, x14, #0x3
    519c:	b	51d8 <deflate@@Base+0x1028>
    51a0:	add	x11, x11, x13
    51a4:	add	x11, x11, #0x4
    51a8:	b	51d8 <deflate@@Base+0x1028>
    51ac:	add	x11, x14, #0x5
    51b0:	b	51d8 <deflate@@Base+0x1028>
    51b4:	add	x11, x11, x13
    51b8:	add	x11, x11, #0x6
    51bc:	b	51d8 <deflate@@Base+0x1028>
    51c0:	add	x11, x14, #0x7
    51c4:	b	51d8 <deflate@@Base+0x1028>
    51c8:	add	x11, x11, x13
    51cc:	add	x11, x11, #0x8
    51d0:	b	51d8 <deflate@@Base+0x1028>
    51d4:	add	x11, x14, #0x9
    51d8:	sub	w10, w11, w10
    51dc:	add	w10, w10, #0x102
    51e0:	cmp	w10, w8
    51e4:	csel	w10, w8, w10, hi  // hi = pmore
    51e8:	subs	w8, w10, #0x3
    51ec:	str	w10, [x19, #160]
    51f0:	b.cc	527c <deflate@@Base+0x10cc>  // b.lo, b.ul, b.last
    51f4:	ldr	x9, [x19, #5904]
    51f8:	ldr	w10, [x19, #5900]
    51fc:	strh	w24, [x9, x10, lsl #1]
    5200:	add	w9, w10, #0x1
    5204:	ldr	x11, [x19, #5888]
    5208:	str	w9, [x19, #5900]
    520c:	and	x9, x8, #0xff
    5210:	ldrb	w9, [x25, x9]
    5214:	strb	w8, [x11, x10]
    5218:	mov	w8, #0x400                 	// #1024
    521c:	ldrb	w10, [x26, #536]
    5220:	bfi	x8, x9, #2, #8
    5224:	add	x8, x8, x19
    5228:	ldrh	w9, [x8, #216]
    522c:	add	x10, x19, x10, lsl #2
    5230:	add	w9, w9, #0x1
    5234:	strh	w9, [x8, #216]
    5238:	ldrh	w8, [x10, #2504]
    523c:	add	w8, w8, #0x1
    5240:	strh	w8, [x10, #2504]
    5244:	ldr	w8, [x19, #160]
    5248:	ldr	w9, [x19, #180]
    524c:	ldr	w10, [x19, #172]
    5250:	ldr	w11, [x19, #5896]
    5254:	str	wzr, [x19, #160]
    5258:	sub	w9, w9, w8
    525c:	add	w8, w10, w8
    5260:	ldr	w10, [x19, #5900]
    5264:	sub	w11, w11, #0x1
    5268:	str	w9, [x19, #180]
    526c:	str	w8, [x19, #172]
    5270:	cmp	w10, w11
    5274:	b.ne	508c <deflate@@Base+0xedc>  // b.any
    5278:	b	52dc <deflate@@Base+0x112c>
    527c:	ldr	x8, [x19, #96]
    5280:	ldr	x10, [x19, #5904]
    5284:	ldr	w11, [x19, #5900]
    5288:	ldrb	w8, [x8, w9, uxtw]
    528c:	strh	wzr, [x10, x11, lsl #1]
    5290:	ldr	x9, [x19, #5888]
    5294:	add	w10, w11, #0x1
    5298:	str	w10, [x19, #5900]
    529c:	add	x10, x19, x8, lsl #2
    52a0:	strb	w8, [x9, x11]
    52a4:	ldrh	w8, [x10, #212]
    52a8:	add	w8, w8, #0x1
    52ac:	strh	w8, [x10, #212]
    52b0:	ldr	w8, [x19, #5896]
    52b4:	ldr	w9, [x19, #180]
    52b8:	ldr	w10, [x19, #172]
    52bc:	ldr	w11, [x19, #5900]
    52c0:	sub	w12, w8, #0x1
    52c4:	sub	w9, w9, #0x1
    52c8:	add	w8, w10, #0x1
    52cc:	cmp	w11, w12
    52d0:	str	w9, [x19, #180]
    52d4:	str	w8, [x19, #172]
    52d8:	b.ne	508c <deflate@@Base+0xedc>  // b.any
    52dc:	ldr	x9, [x19, #152]
    52e0:	tbnz	x9, #63, 52f0 <deflate@@Base+0x1140>
    52e4:	ldr	x10, [x19, #96]
    52e8:	add	x1, x10, w9, uxtw
    52ec:	b	52f4 <deflate@@Base+0x1144>
    52f0:	mov	x1, xzr
    52f4:	mov	w8, w8
    52f8:	sub	x2, x8, x9
    52fc:	mov	x0, x19
    5300:	mov	w3, wzr
    5304:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    5308:	ldr	w8, [x19, #172]
    530c:	ldr	x27, [x19]
    5310:	str	x8, [x19, #152]
    5314:	ldr	x22, [x27, #56]
    5318:	mov	x0, x22
    531c:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    5320:	ldr	w8, [x22, #40]
    5324:	ldr	w9, [x27, #32]
    5328:	cmp	w9, w8
    532c:	csel	w28, w9, w8, cc  // cc = lo, ul, last
    5330:	cbz	w28, 5080 <deflate@@Base+0xed0>
    5334:	ldr	x0, [x27, #24]
    5338:	ldr	x1, [x22, #32]
    533c:	mov	w23, w28
    5340:	mov	x2, x23
    5344:	bl	2330 <memcpy@plt>
    5348:	ldr	x8, [x27, #24]
    534c:	add	x8, x8, x23
    5350:	str	x8, [x27, #24]
    5354:	ldr	x8, [x22, #32]
    5358:	add	x8, x8, x23
    535c:	str	x8, [x22, #32]
    5360:	ldr	x8, [x27, #40]
    5364:	ldr	w9, [x27, #32]
    5368:	add	x8, x8, x23
    536c:	sub	w9, w9, w28
    5370:	str	x8, [x27, #40]
    5374:	str	w9, [x27, #32]
    5378:	ldr	x8, [x22, #40]
    537c:	subs	x8, x8, x23
    5380:	str	x8, [x22, #40]
    5384:	b.ne	5080 <deflate@@Base+0xed0>  // b.any
    5388:	ldr	x8, [x22, #16]
    538c:	str	x8, [x22, #32]
    5390:	b	5080 <deflate@@Base+0xed0>
    5394:	cbz	w21, 581c <deflate@@Base+0x166c>
    5398:	cmp	w21, #0x4
    539c:	str	wzr, [x19, #5932]
    53a0:	b.ne	5760 <deflate@@Base+0x15b0>  // b.any
    53a4:	ldr	x8, [x19, #152]
    53a8:	tbz	x8, #63, 5688 <deflate@@Base+0x14d8>
    53ac:	mov	x1, xzr
    53b0:	b	5690 <deflate@@Base+0x14e0>
    53b4:	mov	x1, xzr
    53b8:	mov	x2, xzr
    53bc:	mov	w3, wzr
    53c0:	bl	b7dc <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    53c4:	cmp	w21, #0x3
    53c8:	b.ne	53fc <deflate@@Base+0x124c>  // b.any
    53cc:	ldr	w8, [x19, #132]
    53d0:	ldr	x0, [x19, #120]
    53d4:	mov	w1, wzr
    53d8:	sub	w8, w8, #0x1
    53dc:	lsl	x2, x8, #1
    53e0:	strh	wzr, [x0, x2]
    53e4:	bl	2410 <memset@plt>
    53e8:	ldr	w8, [x19, #180]
    53ec:	cbnz	w8, 53fc <deflate@@Base+0x124c>
    53f0:	str	wzr, [x19, #172]
    53f4:	str	xzr, [x19, #152]
    53f8:	str	wzr, [x19, #5932]
    53fc:	ldr	x22, [x20, #56]
    5400:	mov	x0, x22
    5404:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    5408:	ldr	w9, [x22, #40]
    540c:	ldr	w8, [x20, #32]
    5410:	cmp	w8, w9
    5414:	csel	w24, w8, w9, cc  // cc = lo, ul, last
    5418:	cbz	w24, 5478 <deflate@@Base+0x12c8>
    541c:	ldr	x0, [x20, #24]
    5420:	ldr	x1, [x22, #32]
    5424:	mov	w23, w24
    5428:	mov	x2, x23
    542c:	bl	2330 <memcpy@plt>
    5430:	ldr	x8, [x20, #24]
    5434:	add	x8, x8, x23
    5438:	str	x8, [x20, #24]
    543c:	ldr	x8, [x22, #32]
    5440:	add	x8, x8, x23
    5444:	str	x8, [x22, #32]
    5448:	ldr	x8, [x20, #40]
    544c:	ldr	w9, [x20, #32]
    5450:	add	x10, x8, x23
    5454:	sub	w8, w9, w24
    5458:	str	x10, [x20, #40]
    545c:	str	w8, [x20, #32]
    5460:	ldr	x9, [x22, #40]
    5464:	subs	x9, x9, x23
    5468:	str	x9, [x22, #40]
    546c:	b.ne	5478 <deflate@@Base+0x12c8>  // b.any
    5470:	ldr	x9, [x22, #16]
    5474:	str	x9, [x22, #32]
    5478:	cbz	w8, 582c <deflate@@Base+0x167c>
    547c:	cmp	w21, #0x4
    5480:	b.ne	5824 <deflate@@Base+0x1674>  // b.any
    5484:	ldr	w9, [x19, #48]
    5488:	cmp	w9, #0x1
    548c:	b.lt	5568 <deflate@@Base+0x13b8>  // b.tstop
    5490:	ldr	x8, [x20, #96]
    5494:	cmp	w9, #0x2
    5498:	b.ne	5570 <deflate@@Base+0x13c0>  // b.any
    549c:	ldr	x9, [x19, #40]
    54a0:	ldr	x10, [x19, #16]
    54a4:	add	x11, x9, #0x1
    54a8:	str	x11, [x19, #40]
    54ac:	strb	w8, [x10, x9]
    54b0:	ldr	x8, [x20, #96]
    54b4:	ldr	x9, [x19, #40]
    54b8:	ldr	x10, [x19, #16]
    54bc:	lsr	x8, x8, #8
    54c0:	add	x11, x9, #0x1
    54c4:	str	x11, [x19, #40]
    54c8:	strb	w8, [x10, x9]
    54cc:	ldr	x8, [x20, #96]
    54d0:	ldr	x9, [x19, #40]
    54d4:	ldr	x10, [x19, #16]
    54d8:	lsr	x8, x8, #16
    54dc:	add	x11, x9, #0x1
    54e0:	str	x11, [x19, #40]
    54e4:	strb	w8, [x10, x9]
    54e8:	ldr	x8, [x20, #96]
    54ec:	ldr	x9, [x19, #40]
    54f0:	ldr	x10, [x19, #16]
    54f4:	lsr	x8, x8, #24
    54f8:	add	x11, x9, #0x1
    54fc:	str	x11, [x19, #40]
    5500:	strb	w8, [x10, x9]
    5504:	ldr	x8, [x19, #40]
    5508:	ldr	x9, [x20, #16]
    550c:	ldr	x10, [x19, #16]
    5510:	add	x11, x8, #0x1
    5514:	str	x11, [x19, #40]
    5518:	strb	w9, [x10, x8]
    551c:	ldr	x8, [x20, #16]
    5520:	ldr	x9, [x19, #40]
    5524:	ldr	x10, [x19, #16]
    5528:	lsr	x8, x8, #8
    552c:	add	x11, x9, #0x1
    5530:	str	x11, [x19, #40]
    5534:	strb	w8, [x10, x9]
    5538:	ldr	x8, [x20, #16]
    553c:	ldr	x9, [x19, #40]
    5540:	ldr	x10, [x19, #16]
    5544:	lsr	x8, x8, #16
    5548:	add	x11, x9, #0x1
    554c:	str	x11, [x19, #40]
    5550:	strb	w8, [x10, x9]
    5554:	ldr	x8, [x20, #16]
    5558:	ldr	x9, [x19, #40]
    555c:	ldr	x10, [x19, #16]
    5560:	lsr	x8, x8, #24
    5564:	b	55c4 <deflate@@Base+0x1414>
    5568:	mov	w0, #0x1                   	// #1
    556c:	b	4238 <deflate@@Base+0x88>
    5570:	ldr	x9, [x19, #40]
    5574:	ldr	x10, [x19, #16]
    5578:	lsr	x11, x8, #24
    557c:	lsr	x8, x8, #16
    5580:	add	x12, x9, #0x1
    5584:	str	x12, [x19, #40]
    5588:	strb	w11, [x10, x9]
    558c:	ldr	x9, [x19, #40]
    5590:	ldr	x10, [x19, #16]
    5594:	add	x11, x9, #0x1
    5598:	str	x11, [x19, #40]
    559c:	strb	w8, [x10, x9]
    55a0:	ldr	x8, [x20, #96]
    55a4:	ldr	x9, [x19, #40]
    55a8:	ldr	x10, [x19, #16]
    55ac:	ubfx	x11, x8, #8, #24
    55b0:	add	x12, x9, #0x1
    55b4:	str	x12, [x19, #40]
    55b8:	strb	w11, [x10, x9]
    55bc:	ldr	x9, [x19, #40]
    55c0:	ldr	x10, [x19, #16]
    55c4:	add	x11, x9, #0x1
    55c8:	add	x9, x10, x9
    55cc:	str	x11, [x19, #40]
    55d0:	strb	w8, [x9]
    55d4:	ldr	x21, [x20, #56]
    55d8:	mov	x0, x21
    55dc:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    55e0:	ldr	w8, [x21, #40]
    55e4:	ldr	w9, [x20, #32]
    55e8:	cmp	w9, w8
    55ec:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    55f0:	cbz	w23, 5650 <deflate@@Base+0x14a0>
    55f4:	ldr	x0, [x20, #24]
    55f8:	ldr	x1, [x21, #32]
    55fc:	mov	w22, w23
    5600:	mov	x2, x22
    5604:	bl	2330 <memcpy@plt>
    5608:	ldr	x8, [x20, #24]
    560c:	add	x8, x8, x22
    5610:	str	x8, [x20, #24]
    5614:	ldr	x8, [x21, #32]
    5618:	add	x8, x8, x22
    561c:	str	x8, [x21, #32]
    5620:	ldr	x8, [x20, #40]
    5624:	ldr	w9, [x20, #32]
    5628:	add	x8, x8, x22
    562c:	sub	w9, w9, w23
    5630:	str	x8, [x20, #40]
    5634:	str	w9, [x20, #32]
    5638:	ldr	x8, [x21, #40]
    563c:	subs	x8, x8, x22
    5640:	str	x8, [x21, #40]
    5644:	b.ne	5650 <deflate@@Base+0x14a0>  // b.any
    5648:	ldr	x8, [x21, #16]
    564c:	str	x8, [x21, #32]
    5650:	ldr	w8, [x19, #48]
    5654:	cmp	w8, #0x1
    5658:	b.lt	5664 <deflate@@Base+0x14b4>  // b.tstop
    565c:	neg	w8, w8
    5660:	str	w8, [x19, #48]
    5664:	ldr	x8, [x19, #40]
    5668:	cmp	x8, #0x0
    566c:	cset	w0, eq  // eq = none
    5670:	b	4238 <deflate@@Base+0x88>
    5674:	cmp	w21, #0x4
    5678:	str	wzr, [x19, #5932]
    567c:	b.ne	5744 <deflate@@Base+0x1594>  // b.any
    5680:	ldr	x8, [x19, #152]
    5684:	tbnz	x8, #63, 53ac <deflate@@Base+0x11fc>
    5688:	ldr	x9, [x19, #96]
    568c:	add	x1, x9, w8, uxtw
    5690:	ldr	w9, [x19, #172]
    5694:	mov	w3, #0x1                   	// #1
    5698:	mov	x0, x19
    569c:	sub	x2, x9, x8
    56a0:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    56a4:	ldr	w8, [x19, #172]
    56a8:	ldr	x24, [x19]
    56ac:	str	x8, [x19, #152]
    56b0:	ldr	x22, [x24, #56]
    56b4:	mov	x0, x22
    56b8:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    56bc:	ldr	w8, [x22, #40]
    56c0:	ldr	w9, [x24, #32]
    56c4:	cmp	w9, w8
    56c8:	csel	w25, w9, w8, cc  // cc = lo, ul, last
    56cc:	cbz	w25, 572c <deflate@@Base+0x157c>
    56d0:	ldr	x0, [x24, #24]
    56d4:	ldr	x1, [x22, #32]
    56d8:	mov	w23, w25
    56dc:	mov	x2, x23
    56e0:	bl	2330 <memcpy@plt>
    56e4:	ldr	x8, [x24, #24]
    56e8:	add	x8, x8, x23
    56ec:	str	x8, [x24, #24]
    56f0:	ldr	x8, [x22, #32]
    56f4:	add	x8, x8, x23
    56f8:	str	x8, [x22, #32]
    56fc:	ldr	x8, [x24, #40]
    5700:	ldr	w9, [x24, #32]
    5704:	add	x8, x8, x23
    5708:	sub	w9, w9, w25
    570c:	str	x8, [x24, #40]
    5710:	str	w9, [x24, #32]
    5714:	ldr	x8, [x22, #40]
    5718:	subs	x8, x8, x23
    571c:	str	x8, [x22, #40]
    5720:	b.ne	572c <deflate@@Base+0x157c>  // b.any
    5724:	ldr	x8, [x22, #16]
    5728:	str	x8, [x22, #32]
    572c:	ldr	x8, [x19]
    5730:	ldr	w8, [x8, #32]
    5734:	cmp	w8, #0x0
    5738:	mov	w8, #0x2                   	// #2
    573c:	cinc	w0, w8, ne  // ne = any
    5740:	b	5018 <deflate@@Base+0xe68>
    5744:	ldr	w8, [x19, #5900]
    5748:	cbz	w8, 503c <deflate@@Base+0xe8c>
    574c:	ldr	x8, [x19, #152]
    5750:	tbnz	x8, #63, 5770 <deflate@@Base+0x15c0>
    5754:	ldr	x9, [x19, #96]
    5758:	add	x1, x9, w8, uxtw
    575c:	b	5774 <deflate@@Base+0x15c4>
    5760:	ldr	w8, [x19, #5900]
    5764:	cbz	w8, 503c <deflate@@Base+0xe8c>
    5768:	ldr	x8, [x19, #152]
    576c:	tbz	x8, #63, 5754 <deflate@@Base+0x15a4>
    5770:	mov	x1, xzr
    5774:	ldr	w9, [x19, #172]
    5778:	mov	x0, x19
    577c:	mov	w3, wzr
    5780:	sub	x2, x9, x8
    5784:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    5788:	ldr	w8, [x19, #172]
    578c:	ldr	x24, [x19]
    5790:	str	x8, [x19, #152]
    5794:	ldr	x22, [x24, #56]
    5798:	mov	x0, x22
    579c:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    57a0:	ldr	w8, [x22, #40]
    57a4:	ldr	w9, [x24, #32]
    57a8:	cmp	w9, w8
    57ac:	csel	w25, w9, w8, cc  // cc = lo, ul, last
    57b0:	cbz	w25, 5810 <deflate@@Base+0x1660>
    57b4:	ldr	x0, [x24, #24]
    57b8:	ldr	x1, [x22, #32]
    57bc:	mov	w23, w25
    57c0:	mov	x2, x23
    57c4:	bl	2330 <memcpy@plt>
    57c8:	ldr	x8, [x24, #24]
    57cc:	add	x8, x8, x23
    57d0:	str	x8, [x24, #24]
    57d4:	ldr	x8, [x22, #32]
    57d8:	add	x8, x8, x23
    57dc:	str	x8, [x22, #32]
    57e0:	ldr	x8, [x24, #40]
    57e4:	ldr	w9, [x24, #32]
    57e8:	add	x8, x8, x23
    57ec:	sub	w9, w9, w25
    57f0:	str	x8, [x24, #40]
    57f4:	str	w9, [x24, #32]
    57f8:	ldr	x8, [x22, #40]
    57fc:	subs	x8, x8, x23
    5800:	str	x8, [x22, #40]
    5804:	b.ne	5810 <deflate@@Base+0x1660>  // b.any
    5808:	ldr	x8, [x22, #16]
    580c:	str	x8, [x22, #32]
    5810:	ldr	x8, [x19]
    5814:	ldr	w8, [x8, #32]
    5818:	cbnz	w8, 503c <deflate@@Base+0xe8c>
    581c:	ldr	w8, [x20, #32]
    5820:	cbz	w8, 582c <deflate@@Base+0x167c>
    5824:	mov	w0, wzr
    5828:	b	4238 <deflate@@Base+0x88>
    582c:	mov	w8, #0xffffffff            	// #-1
    5830:	mov	w0, wzr
    5834:	str	w8, [x19, #76]
    5838:	b	4238 <deflate@@Base+0x88>

000000000000583c <deflateTune@@ZLIB_1.2.2.3>:
    583c:	cbz	x0, 5864 <deflateTune@@ZLIB_1.2.2.3+0x28>
    5840:	ldr	x8, [x0, #64]
    5844:	cbz	x8, 5864 <deflateTune@@ZLIB_1.2.2.3+0x28>
    5848:	ldr	x8, [x0, #72]
    584c:	cbz	x8, 5864 <deflateTune@@ZLIB_1.2.2.3+0x28>
    5850:	ldr	x8, [x0, #56]
    5854:	cbz	x8, 5864 <deflateTune@@ZLIB_1.2.2.3+0x28>
    5858:	ldr	x9, [x8]
    585c:	cmp	x9, x0
    5860:	b.eq	586c <deflateTune@@ZLIB_1.2.2.3+0x30>  // b.none
    5864:	mov	w0, #0xfffffffe            	// #-2
    5868:	ret
    586c:	ldr	w9, [x8, #8]
    5870:	sub	w10, w9, #0x39
    5874:	cmp	w10, #0x38
    5878:	b.hi	58ac <deflateTune@@ZLIB_1.2.2.3+0x70>  // b.pmore
    587c:	mov	w11, #0x1                   	// #1
    5880:	lsl	x10, x11, x10
    5884:	mov	x11, #0x1001                	// #4097
    5888:	movk	x11, #0x1, lsl #16
    588c:	movk	x11, #0x4004, lsl #32
    5890:	movk	x11, #0x100, lsl #48
    5894:	tst	x10, x11
    5898:	b.eq	58ac <deflateTune@@ZLIB_1.2.2.3+0x70>  // b.none
    589c:	mov	w0, wzr
    58a0:	stp	w1, w3, [x8, #204]
    58a4:	stp	w4, w2, [x8, #188]
    58a8:	ret
    58ac:	cmp	w9, #0x29a
    58b0:	b.eq	589c <deflateTune@@ZLIB_1.2.2.3+0x60>  // b.none
    58b4:	cmp	w9, #0x2a
    58b8:	b.ne	5864 <deflateTune@@ZLIB_1.2.2.3+0x28>  // b.any
    58bc:	b	589c <deflateTune@@ZLIB_1.2.2.3+0x60>

00000000000058c0 <deflateBound@@ZLIB_1.2.0>:
    58c0:	add	x8, x1, #0x7
    58c4:	add	x9, x1, x8, lsr #3
    58c8:	add	x10, x1, #0x3f
    58cc:	add	x9, x9, x10, lsr #6
    58d0:	cbz	x0, 58f8 <deflateBound@@ZLIB_1.2.0+0x38>
    58d4:	ldr	x10, [x0, #64]
    58d8:	cbz	x10, 58f8 <deflateBound@@ZLIB_1.2.0+0x38>
    58dc:	ldr	x10, [x0, #72]
    58e0:	cbz	x10, 58f8 <deflateBound@@ZLIB_1.2.0+0x38>
    58e4:	ldr	x10, [x0, #56]
    58e8:	cbz	x10, 58f8 <deflateBound@@ZLIB_1.2.0+0x38>
    58ec:	ldr	x11, [x10]
    58f0:	cmp	x11, x0
    58f4:	b.eq	5900 <deflateBound@@ZLIB_1.2.0+0x40>  // b.none
    58f8:	add	x0, x9, #0xb
    58fc:	ret
    5900:	ldr	w11, [x10, #8]
    5904:	sub	w12, w11, #0x39
    5908:	cmp	w12, #0x38
    590c:	b.hi	5960 <deflateBound@@ZLIB_1.2.0+0xa0>  // b.pmore
    5910:	mov	w13, #0x1                   	// #1
    5914:	lsl	x12, x13, x12
    5918:	mov	x13, #0x1001                	// #4097
    591c:	movk	x13, #0x1, lsl #16
    5920:	movk	x13, #0x4004, lsl #32
    5924:	movk	x13, #0x100, lsl #48
    5928:	tst	x12, x13
    592c:	b.eq	5960 <deflateBound@@ZLIB_1.2.0+0xa0>  // b.none
    5930:	ldr	w11, [x10, #48]
    5934:	cbz	w11, 5974 <deflateBound@@ZLIB_1.2.0+0xb4>
    5938:	cmp	w11, #0x2
    593c:	b.eq	597c <deflateBound@@ZLIB_1.2.0+0xbc>  // b.none
    5940:	cmp	w11, #0x1
    5944:	b.ne	599c <deflateBound@@ZLIB_1.2.0+0xdc>  // b.any
    5948:	ldr	w11, [x10, #172]
    594c:	mov	w12, #0xa                   	// #10
    5950:	cmp	w11, #0x0
    5954:	mov	w11, #0x6                   	// #6
    5958:	csel	x11, x11, x12, eq  // eq = none
    595c:	b	59e8 <deflateBound@@ZLIB_1.2.0+0x128>
    5960:	cmp	w11, #0x2a
    5964:	b.eq	5930 <deflateBound@@ZLIB_1.2.0+0x70>  // b.none
    5968:	cmp	w11, #0x29a
    596c:	b.ne	58f8 <deflateBound@@ZLIB_1.2.0+0x38>  // b.any
    5970:	b	5930 <deflateBound@@ZLIB_1.2.0+0x70>
    5974:	mov	x11, xzr
    5978:	b	59e8 <deflateBound@@ZLIB_1.2.0+0x128>
    597c:	ldr	x11, [x10, #56]
    5980:	cbz	x11, 59a4 <deflateBound@@ZLIB_1.2.0+0xe4>
    5984:	ldr	x12, [x11, #24]
    5988:	cbz	x12, 59ac <deflateBound@@ZLIB_1.2.0+0xec>
    598c:	ldr	w12, [x11, #32]
    5990:	add	w12, w12, #0x2
    5994:	add	x12, x12, #0x12
    5998:	b	59b0 <deflateBound@@ZLIB_1.2.0+0xf0>
    599c:	mov	w11, #0x6                   	// #6
    59a0:	b	59e8 <deflateBound@@ZLIB_1.2.0+0x128>
    59a4:	mov	w11, #0x12                  	// #18
    59a8:	b	59e8 <deflateBound@@ZLIB_1.2.0+0x128>
    59ac:	mov	w12, #0x12                  	// #18
    59b0:	ldr	x13, [x11, #40]
    59b4:	cbz	x13, 59c4 <deflateBound@@ZLIB_1.2.0+0x104>
    59b8:	ldrb	w14, [x13], #1
    59bc:	add	x12, x12, #0x1
    59c0:	cbnz	w14, 59b8 <deflateBound@@ZLIB_1.2.0+0xf8>
    59c4:	ldr	x13, [x11, #56]
    59c8:	cbz	x13, 59d8 <deflateBound@@ZLIB_1.2.0+0x118>
    59cc:	ldrb	w14, [x13], #1
    59d0:	add	x12, x12, #0x1
    59d4:	cbnz	w14, 59cc <deflateBound@@ZLIB_1.2.0+0x10c>
    59d8:	ldr	w11, [x11, #68]
    59dc:	add	x13, x12, #0x2
    59e0:	cmp	w11, #0x0
    59e4:	csel	x11, x12, x13, eq  // eq = none
    59e8:	ldr	w12, [x10, #84]
    59ec:	cmp	w12, #0xf
    59f0:	b.ne	5a14 <deflateBound@@ZLIB_1.2.0+0x154>  // b.any
    59f4:	ldr	w10, [x10, #136]
    59f8:	cmp	w10, #0xf
    59fc:	b.ne	5a14 <deflateBound@@ZLIB_1.2.0+0x154>  // b.any
    5a00:	add	x8, x8, x1, lsr #12
    5a04:	add	x8, x8, x1, lsr #14
    5a08:	add	x8, x8, x1, lsr #25
    5a0c:	add	x0, x8, x11
    5a10:	ret
    5a14:	add	x8, x9, #0x5
    5a18:	add	x0, x8, x11
    5a1c:	ret
    5a20:	sub	sp, sp, #0x70
    5a24:	stp	x29, x30, [sp, #16]
    5a28:	stp	x28, x27, [sp, #32]
    5a2c:	stp	x26, x25, [sp, #48]
    5a30:	stp	x24, x23, [sp, #64]
    5a34:	stp	x22, x21, [sp, #80]
    5a38:	stp	x20, x19, [sp, #96]
    5a3c:	ldr	x8, [x0]
    5a40:	ldr	x9, [x0, #24]
    5a44:	ldr	w10, [x0, #80]
    5a48:	add	x29, sp, #0x10
    5a4c:	ldr	w11, [x8, #8]
    5a50:	sub	x9, x9, #0x5
    5a54:	cmp	x9, x10
    5a58:	mov	w20, w1
    5a5c:	mov	x19, x0
    5a60:	csel	w26, w10, w9, hi  // hi = pmore
    5a64:	stur	w11, [x29, #-4]
    5a68:	b	5acc <deflateBound@@ZLIB_1.2.0+0x20c>
    5a6c:	ldr	x0, [x25, #96]
    5a70:	mov	x1, x22
    5a74:	mov	w2, w24
    5a78:	bl	23b0 <crc32@plt>
    5a7c:	str	x0, [x25, #96]
    5a80:	ldr	x8, [x25]
    5a84:	ldr	x9, [x25, #16]
    5a88:	add	x8, x8, x23
    5a8c:	add	x9, x9, x23
    5a90:	str	x8, [x25]
    5a94:	str	x9, [x25, #16]
    5a98:	ldr	x25, [x19]
    5a9c:	ldr	x22, [x25, #24]
    5aa0:	ldr	w9, [x25, #32]
    5aa4:	ldr	x10, [x25, #40]
    5aa8:	mov	w8, w28
    5aac:	add	x11, x22, x8
    5ab0:	sub	w9, w9, w28
    5ab4:	add	x8, x10, x8
    5ab8:	str	x11, [x25, #24]
    5abc:	str	w9, [x25, #32]
    5ac0:	str	x8, [x25, #40]
    5ac4:	ldr	x8, [x19]
    5ac8:	cbnz	w21, 5d10 <deflateBound@@ZLIB_1.2.0+0x450>
    5acc:	ldr	w9, [x19, #5940]
    5ad0:	ldr	w10, [x8, #32]
    5ad4:	add	w9, w9, #0x2a
    5ad8:	asr	w9, w9, #3
    5adc:	subs	w10, w10, w9
    5ae0:	b.cc	5d08 <deflateBound@@ZLIB_1.2.0+0x448>  // b.lo, b.ul, b.last
    5ae4:	ldr	w9, [x19, #172]
    5ae8:	ldr	w11, [x19, #152]
    5aec:	ldr	w12, [x8, #8]
    5af0:	sub	w24, w9, w11
    5af4:	add	x11, x24, x12
    5af8:	add	w9, w24, w12
    5afc:	mov	w12, #0xffff                	// #65535
    5b00:	cmp	x11, x12
    5b04:	csel	w11, w9, w12, cc  // cc = lo, ul, last
    5b08:	cmp	w11, w10
    5b0c:	csel	w28, w10, w11, hi  // hi = pmore
    5b10:	cmp	w28, w26
    5b14:	b.cs	5b40 <deflateBound@@ZLIB_1.2.0+0x280>  // b.hs, b.nlast
    5b18:	cmp	w20, #0x4
    5b1c:	cset	w10, ne  // ne = any
    5b20:	cmp	w28, #0x0
    5b24:	cset	w11, eq  // eq = none
    5b28:	cmp	w28, w9
    5b2c:	mov	w22, wzr
    5b30:	b.ne	5d14 <deflateBound@@ZLIB_1.2.0+0x454>  // b.any
    5b34:	cbz	w20, 5d14 <deflateBound@@ZLIB_1.2.0+0x454>
    5b38:	and	w10, w10, w11
    5b3c:	cbnz	w10, 5d14 <deflateBound@@ZLIB_1.2.0+0x454>
    5b40:	cmp	w20, #0x4
    5b44:	cset	w8, eq  // eq = none
    5b48:	cmp	w28, w9
    5b4c:	cset	w9, eq  // eq = none
    5b50:	and	w21, w8, w9
    5b54:	mov	x0, x19
    5b58:	mov	x1, xzr
    5b5c:	mov	x2, xzr
    5b60:	mov	w3, w21
    5b64:	mov	w27, w20
    5b68:	bl	b7dc <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    5b6c:	ldr	x8, [x19, #16]
    5b70:	ldr	x9, [x19, #40]
    5b74:	lsr	w10, w28, #8
    5b78:	add	x8, x9, x8
    5b7c:	sturb	w28, [x8, #-4]
    5b80:	ldr	x8, [x19, #16]
    5b84:	ldr	x9, [x19, #40]
    5b88:	add	x8, x9, x8
    5b8c:	sturb	w10, [x8, #-3]
    5b90:	ldr	x8, [x19, #16]
    5b94:	ldr	x9, [x19, #40]
    5b98:	mvn	w10, w28
    5b9c:	add	x8, x9, x8
    5ba0:	sturb	w10, [x8, #-2]
    5ba4:	ldr	x8, [x19, #16]
    5ba8:	ldr	x9, [x19, #40]
    5bac:	lsr	w10, w10, #8
    5bb0:	add	x8, x9, x8
    5bb4:	sturb	w10, [x8, #-1]
    5bb8:	ldr	x25, [x19]
    5bbc:	ldr	x22, [x25, #56]
    5bc0:	mov	x0, x22
    5bc4:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    5bc8:	ldr	w8, [x22, #40]
    5bcc:	ldr	w9, [x25, #32]
    5bd0:	cmp	w9, w8
    5bd4:	csel	w20, w9, w8, cc  // cc = lo, ul, last
    5bd8:	cbz	w20, 5c30 <deflateBound@@ZLIB_1.2.0+0x370>
    5bdc:	ldr	x0, [x25, #24]
    5be0:	ldr	x1, [x22, #32]
    5be4:	mov	w23, w20
    5be8:	mov	x2, x23
    5bec:	bl	2330 <memcpy@plt>
    5bf0:	ldr	x8, [x25, #24]
    5bf4:	add	x8, x8, x23
    5bf8:	str	x8, [x25, #24]
    5bfc:	ldr	x8, [x22, #32]
    5c00:	add	x8, x8, x23
    5c04:	str	x8, [x22, #32]
    5c08:	ldr	x8, [x25, #40]
    5c0c:	ldr	w9, [x25, #32]
    5c10:	add	x8, x8, x23
    5c14:	sub	w9, w9, w20
    5c18:	str	x8, [x25, #40]
    5c1c:	str	w9, [x25, #32]
    5c20:	ldr	x8, [x22, #40]
    5c24:	subs	x8, x8, x23
    5c28:	str	x8, [x22, #40]
    5c2c:	b.eq	5cf8 <deflateBound@@ZLIB_1.2.0+0x438>  // b.none
    5c30:	cbz	w24, 5c90 <deflateBound@@ZLIB_1.2.0+0x3d0>
    5c34:	ldr	x8, [x19]
    5c38:	ldr	x9, [x19, #96]
    5c3c:	ldr	x10, [x19, #152]
    5c40:	cmp	w24, w28
    5c44:	ldr	x0, [x8, #24]
    5c48:	csel	w22, w28, w24, hi  // hi = pmore
    5c4c:	add	x1, x9, x10
    5c50:	mov	x2, x22
    5c54:	bl	2330 <memcpy@plt>
    5c58:	ldr	x8, [x19]
    5c5c:	sub	w28, w28, w22
    5c60:	ldr	x9, [x8, #24]
    5c64:	ldr	w10, [x8, #32]
    5c68:	ldr	x11, [x8, #40]
    5c6c:	add	x9, x9, x22
    5c70:	sub	w10, w10, w22
    5c74:	add	x11, x11, x22
    5c78:	str	x9, [x8, #24]
    5c7c:	str	w10, [x8, #32]
    5c80:	str	x11, [x8, #40]
    5c84:	ldr	x8, [x19, #152]
    5c88:	add	x8, x8, x22
    5c8c:	str	x8, [x19, #152]
    5c90:	mov	w20, w27
    5c94:	cbz	w28, 5ac4 <deflateBound@@ZLIB_1.2.0+0x204>
    5c98:	ldr	x25, [x19]
    5c9c:	ldr	w8, [x25, #8]
    5ca0:	ldr	x22, [x25, #24]
    5ca4:	cmp	w8, w28
    5ca8:	csel	w24, w28, w8, hi  // hi = pmore
    5cac:	cbz	w24, 5aa0 <deflateBound@@ZLIB_1.2.0+0x1e0>
    5cb0:	ldr	x1, [x25]
    5cb4:	mov	w23, w24
    5cb8:	sub	w8, w8, w24
    5cbc:	mov	x0, x22
    5cc0:	mov	x2, x23
    5cc4:	str	w8, [x25, #8]
    5cc8:	bl	2330 <memcpy@plt>
    5ccc:	ldr	x8, [x25, #56]
    5cd0:	ldr	w8, [x8, #48]
    5cd4:	cmp	w8, #0x2
    5cd8:	b.eq	5a6c <deflateBound@@ZLIB_1.2.0+0x1ac>  // b.none
    5cdc:	cmp	w8, #0x1
    5ce0:	b.ne	5a80 <deflateBound@@ZLIB_1.2.0+0x1c0>  // b.any
    5ce4:	ldr	x0, [x25, #96]
    5ce8:	mov	x1, x22
    5cec:	mov	w2, w24
    5cf0:	bl	24c0 <adler32@plt>
    5cf4:	b	5a7c <deflateBound@@ZLIB_1.2.0+0x1bc>
    5cf8:	ldr	x8, [x22, #16]
    5cfc:	str	x8, [x22, #32]
    5d00:	cbnz	w24, 5c34 <deflateBound@@ZLIB_1.2.0+0x374>
    5d04:	b	5c90 <deflateBound@@ZLIB_1.2.0+0x3d0>
    5d08:	mov	w22, wzr
    5d0c:	b	5d14 <deflateBound@@ZLIB_1.2.0+0x454>
    5d10:	mov	w22, #0x1                   	// #1
    5d14:	ldr	w9, [x8, #8]
    5d18:	ldur	w10, [x29, #-4]
    5d1c:	subs	w23, w10, w9
    5d20:	b.eq	5da8 <deflateBound@@ZLIB_1.2.0+0x4e8>  // b.none
    5d24:	ldr	w2, [x19, #80]
    5d28:	cmp	w23, w2
    5d2c:	b.cs	5db4 <deflateBound@@ZLIB_1.2.0+0x4f4>  // b.hs, b.nlast
    5d30:	ldr	x9, [x19, #104]
    5d34:	ldr	w8, [x19, #172]
    5d38:	mov	w21, w23
    5d3c:	sub	x9, x9, x8
    5d40:	cmp	x9, x21
    5d44:	b.hi	5d74 <deflateBound@@ZLIB_1.2.0+0x4b4>  // b.pmore
    5d48:	ldr	x0, [x19, #96]
    5d4c:	sub	w8, w8, w2
    5d50:	str	w8, [x19, #172]
    5d54:	add	x1, x0, x2
    5d58:	mov	x2, x8
    5d5c:	bl	2330 <memcpy@plt>
    5d60:	ldr	w8, [x19, #5928]
    5d64:	cmp	w8, #0x1
    5d68:	b.hi	5d74 <deflateBound@@ZLIB_1.2.0+0x4b4>  // b.pmore
    5d6c:	add	w8, w8, #0x1
    5d70:	str	w8, [x19, #5928]
    5d74:	ldr	x8, [x19]
    5d78:	ldr	x9, [x19, #96]
    5d7c:	ldr	w10, [x19, #172]
    5d80:	mov	x2, x21
    5d84:	ldr	x8, [x8]
    5d88:	add	x0, x9, x10
    5d8c:	sub	x1, x8, x21
    5d90:	bl	2330 <memcpy@plt>
    5d94:	ldr	w8, [x19, #172]
    5d98:	ldr	w9, [x19, #80]
    5d9c:	add	w8, w8, w23
    5da0:	str	w8, [x19, #172]
    5da4:	b	5dd8 <deflateBound@@ZLIB_1.2.0+0x518>
    5da8:	ldr	w10, [x19, #172]
    5dac:	mov	w8, w10
    5db0:	b	5df8 <deflateBound@@ZLIB_1.2.0+0x538>
    5db4:	mov	w9, #0x2                   	// #2
    5db8:	str	w9, [x19, #5928]
    5dbc:	ldr	x8, [x8]
    5dc0:	ldr	x0, [x19, #96]
    5dc4:	sub	x1, x8, x2
    5dc8:	bl	2330 <memcpy@plt>
    5dcc:	ldr	w9, [x19, #80]
    5dd0:	str	w9, [x19, #172]
    5dd4:	mov	w8, w9
    5dd8:	ldr	w11, [x19, #5932]
    5ddc:	mov	w10, w8
    5de0:	str	x10, [x19, #152]
    5de4:	sub	w9, w9, w11
    5de8:	cmp	w23, w9
    5dec:	csel	w9, w9, w23, hi  // hi = pmore
    5df0:	add	w9, w9, w11
    5df4:	str	w9, [x19, #5932]
    5df8:	ldr	x9, [x19, #5944]
    5dfc:	cmp	x9, x10
    5e00:	b.cs	5e08 <deflateBound@@ZLIB_1.2.0+0x548>  // b.hs, b.nlast
    5e04:	str	x10, [x19, #5944]
    5e08:	cbz	w22, 5e30 <deflateBound@@ZLIB_1.2.0+0x570>
    5e0c:	mov	w0, #0x3                   	// #3
    5e10:	ldp	x20, x19, [sp, #96]
    5e14:	ldp	x22, x21, [sp, #80]
    5e18:	ldp	x24, x23, [sp, #64]
    5e1c:	ldp	x26, x25, [sp, #48]
    5e20:	ldp	x28, x27, [sp, #32]
    5e24:	ldp	x29, x30, [sp, #16]
    5e28:	add	sp, sp, #0x70
    5e2c:	ret
    5e30:	ldr	x24, [x19]
    5e34:	tst	w20, #0xfffffffb
    5e38:	ldr	w9, [x24, #8]
    5e3c:	b.eq	5e58 <deflateBound@@ZLIB_1.2.0+0x598>  // b.none
    5e40:	cbnz	w9, 5e58 <deflateBound@@ZLIB_1.2.0+0x598>
    5e44:	ldr	x9, [x19, #152]
    5e48:	cmp	x9, x10
    5e4c:	b.ne	5ebc <deflateBound@@ZLIB_1.2.0+0x5fc>  // b.any
    5e50:	mov	w0, #0x1                   	// #1
    5e54:	b	5e10 <deflateBound@@ZLIB_1.2.0+0x550>
    5e58:	ldr	w10, [x19, #104]
    5e5c:	mvn	w11, w8
    5e60:	add	w21, w10, w11
    5e64:	cmp	w9, w21
    5e68:	b.ls	5ecc <deflateBound@@ZLIB_1.2.0+0x60c>  // b.plast
    5e6c:	ldr	x11, [x19, #152]
    5e70:	ldr	w10, [x19, #80]
    5e74:	subs	x11, x11, x10
    5e78:	b.lt	5ecc <deflateBound@@ZLIB_1.2.0+0x60c>  // b.tstop
    5e7c:	ldr	x0, [x19, #96]
    5e80:	sub	w2, w8, w10
    5e84:	str	x11, [x19, #152]
    5e88:	str	w2, [x19, #172]
    5e8c:	add	x1, x0, x10
    5e90:	bl	2330 <memcpy@plt>
    5e94:	ldr	w8, [x19, #5928]
    5e98:	cmp	w8, #0x1
    5e9c:	b.hi	5ea8 <deflateBound@@ZLIB_1.2.0+0x5e8>  // b.pmore
    5ea0:	add	w8, w8, #0x1
    5ea4:	str	w8, [x19, #5928]
    5ea8:	ldr	x24, [x19]
    5eac:	ldr	w8, [x19, #80]
    5eb0:	ldr	w9, [x24, #8]
    5eb4:	add	w21, w8, w21
    5eb8:	b	5ecc <deflateBound@@ZLIB_1.2.0+0x60c>
    5ebc:	ldr	w10, [x19, #104]
    5ec0:	mvn	w8, w8
    5ec4:	mov	w9, wzr
    5ec8:	add	w21, w10, w8
    5ecc:	cmp	w21, w9
    5ed0:	csel	w21, w9, w21, hi  // hi = pmore
    5ed4:	cbz	w21, 5f2c <deflateBound@@ZLIB_1.2.0+0x66c>
    5ed8:	ldr	x8, [x19, #96]
    5edc:	ldr	w10, [x19, #172]
    5ee0:	ldr	x1, [x24]
    5ee4:	mov	w22, w21
    5ee8:	sub	w9, w9, w21
    5eec:	add	x23, x8, x10
    5ef0:	mov	x0, x23
    5ef4:	mov	x2, x22
    5ef8:	str	w9, [x24, #8]
    5efc:	bl	2330 <memcpy@plt>
    5f00:	ldr	x8, [x24, #56]
    5f04:	ldr	w8, [x8, #48]
    5f08:	cmp	w8, #0x2
    5f0c:	b.eq	5f34 <deflateBound@@ZLIB_1.2.0+0x674>  // b.none
    5f10:	cmp	w8, #0x1
    5f14:	b.ne	5f48 <deflateBound@@ZLIB_1.2.0+0x688>  // b.any
    5f18:	ldr	x0, [x24, #96]
    5f1c:	mov	x1, x23
    5f20:	mov	w2, w21
    5f24:	bl	24c0 <adler32@plt>
    5f28:	b	5f44 <deflateBound@@ZLIB_1.2.0+0x684>
    5f2c:	ldr	w8, [x19, #172]
    5f30:	b	5f6c <deflateBound@@ZLIB_1.2.0+0x6ac>
    5f34:	ldr	x0, [x24, #96]
    5f38:	mov	x1, x23
    5f3c:	mov	w2, w21
    5f40:	bl	23b0 <crc32@plt>
    5f44:	str	x0, [x24, #96]
    5f48:	ldr	x8, [x24]
    5f4c:	ldr	x9, [x24, #16]
    5f50:	add	x8, x8, x22
    5f54:	add	x9, x9, x22
    5f58:	str	x8, [x24]
    5f5c:	str	x9, [x24, #16]
    5f60:	ldr	w8, [x19, #172]
    5f64:	add	w8, w8, w21
    5f68:	str	w8, [x19, #172]
    5f6c:	ldr	x9, [x19, #5944]
    5f70:	mov	w10, w8
    5f74:	cmp	x9, x10
    5f78:	b.cs	5f80 <deflateBound@@ZLIB_1.2.0+0x6c0>  // b.hs, b.nlast
    5f7c:	str	x10, [x19, #5944]
    5f80:	ldr	w9, [x19, #5940]
    5f84:	ldr	x11, [x19, #24]
    5f88:	ldr	w13, [x19, #80]
    5f8c:	mov	w12, #0xffff                	// #65535
    5f90:	add	w9, w9, #0x2a
    5f94:	asr	w9, w9, #3
    5f98:	ldr	x8, [x19, #152]
    5f9c:	sub	x9, x11, x9
    5fa0:	cmp	x9, x12
    5fa4:	csel	w9, w9, w12, cc  // cc = lo, ul, last
    5fa8:	cmp	w13, w9
    5fac:	csel	w11, w13, w9, cc  // cc = lo, ul, last
    5fb0:	sub	w10, w10, w8
    5fb4:	cmp	w10, w11
    5fb8:	b.cs	5ff4 <deflateBound@@ZLIB_1.2.0+0x734>  // b.hs, b.nlast
    5fbc:	cmp	w20, #0x4
    5fc0:	cset	w11, eq  // eq = none
    5fc4:	cmp	w10, #0x0
    5fc8:	mov	w0, wzr
    5fcc:	cset	w12, ne  // ne = any
    5fd0:	cbz	w20, 5e10 <deflateBound@@ZLIB_1.2.0+0x550>
    5fd4:	orr	w11, w11, w12
    5fd8:	cbz	w11, 5e10 <deflateBound@@ZLIB_1.2.0+0x550>
    5fdc:	cmp	w10, w9
    5fe0:	mov	w0, wzr
    5fe4:	b.hi	5e10 <deflateBound@@ZLIB_1.2.0+0x550>  // b.pmore
    5fe8:	ldr	x11, [x19]
    5fec:	ldr	w11, [x11, #8]
    5ff0:	cbnz	w11, 5e10 <deflateBound@@ZLIB_1.2.0+0x550>
    5ff4:	cmp	w10, w9
    5ff8:	csel	w11, w9, w10, hi  // hi = pmore
    5ffc:	cmp	w20, #0x4
    6000:	b.ne	6024 <deflateBound@@ZLIB_1.2.0+0x764>  // b.any
    6004:	ldr	x12, [x19]
    6008:	ldr	w12, [x12, #8]
    600c:	cmp	w12, #0x0
    6010:	cset	w12, eq  // eq = none
    6014:	cmp	w10, w9
    6018:	cset	w9, ls  // ls = plast
    601c:	and	w20, w9, w12
    6020:	b	6028 <deflateBound@@ZLIB_1.2.0+0x768>
    6024:	mov	w20, wzr
    6028:	ldr	x9, [x19, #96]
    602c:	mov	w21, w11
    6030:	mov	x0, x19
    6034:	mov	x2, x21
    6038:	add	x1, x9, x8
    603c:	mov	w3, w20
    6040:	bl	b7dc <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    6044:	ldr	x8, [x19, #152]
    6048:	ldr	x22, [x19]
    604c:	add	x8, x8, x21
    6050:	str	x8, [x19, #152]
    6054:	ldr	x19, [x22, #56]
    6058:	mov	x0, x19
    605c:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    6060:	ldr	w8, [x19, #40]
    6064:	ldr	w9, [x22, #32]
    6068:	cmp	w9, w8
    606c:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6070:	cbz	w23, 60c8 <deflateBound@@ZLIB_1.2.0+0x808>
    6074:	ldr	x0, [x22, #24]
    6078:	ldr	x1, [x19, #32]
    607c:	mov	w21, w23
    6080:	mov	x2, x21
    6084:	bl	2330 <memcpy@plt>
    6088:	ldr	x8, [x22, #24]
    608c:	add	x8, x8, x21
    6090:	str	x8, [x22, #24]
    6094:	ldr	x8, [x19, #32]
    6098:	add	x8, x8, x21
    609c:	str	x8, [x19, #32]
    60a0:	ldr	x8, [x22, #40]
    60a4:	ldr	w9, [x22, #32]
    60a8:	add	x8, x8, x21
    60ac:	sub	w9, w9, w23
    60b0:	str	x8, [x22, #40]
    60b4:	str	w9, [x22, #32]
    60b8:	ldr	x8, [x19, #40]
    60bc:	subs	x8, x8, x21
    60c0:	str	x8, [x19, #40]
    60c4:	b.eq	60d4 <deflateBound@@ZLIB_1.2.0+0x814>  // b.none
    60c8:	cbz	w20, 60e0 <deflateBound@@ZLIB_1.2.0+0x820>
    60cc:	mov	w0, #0x2                   	// #2
    60d0:	b	5e10 <deflateBound@@ZLIB_1.2.0+0x550>
    60d4:	ldr	x8, [x19, #16]
    60d8:	str	x8, [x19, #32]
    60dc:	tbnz	w20, #0, 60cc <deflateBound@@ZLIB_1.2.0+0x80c>
    60e0:	mov	w0, wzr
    60e4:	b	5e10 <deflateBound@@ZLIB_1.2.0+0x550>

00000000000060e8 <deflateCopy@@Base>:
    60e8:	stp	x29, x30, [sp, #-48]!
    60ec:	stp	x22, x21, [sp, #16]
    60f0:	stp	x20, x19, [sp, #32]
    60f4:	mov	x29, sp
    60f8:	cbz	x1, 6120 <deflateCopy@@Base+0x38>
    60fc:	ldr	x8, [x1, #64]
    6100:	cbz	x8, 6120 <deflateCopy@@Base+0x38>
    6104:	ldr	x8, [x1, #72]
    6108:	cbz	x8, 6120 <deflateCopy@@Base+0x38>
    610c:	ldr	x19, [x1, #56]
    6110:	cbz	x19, 6120 <deflateCopy@@Base+0x38>
    6114:	ldr	x8, [x19]
    6118:	cmp	x8, x1
    611c:	b.eq	6134 <deflateCopy@@Base+0x4c>  // b.none
    6120:	mov	w0, #0xfffffffe            	// #-2
    6124:	ldp	x20, x19, [sp, #32]
    6128:	ldp	x22, x21, [sp, #16]
    612c:	ldp	x29, x30, [sp], #48
    6130:	ret
    6134:	ldr	w8, [x19, #8]
    6138:	mov	x20, x0
    613c:	sub	w9, w8, #0x39
    6140:	cmp	w9, #0x38
    6144:	b.hi	62e0 <deflateCopy@@Base+0x1f8>  // b.pmore
    6148:	mov	w10, #0x1                   	// #1
    614c:	lsl	x9, x10, x9
    6150:	mov	x10, #0x1001                	// #4097
    6154:	movk	x10, #0x1, lsl #16
    6158:	movk	x10, #0x4004, lsl #32
    615c:	movk	x10, #0x100, lsl #48
    6160:	tst	x9, x10
    6164:	b.eq	62e0 <deflateCopy@@Base+0x1f8>  // b.none
    6168:	cbz	x20, 6120 <deflateCopy@@Base+0x38>
    616c:	ldp	q0, q1, [x1, #64]
    6170:	ldr	q2, [x1, #48]
    6174:	ldr	q3, [x1, #96]
    6178:	mov	w2, #0x1740                	// #5952
    617c:	stp	q0, q1, [x20, #64]
    6180:	ldp	q0, q1, [x1]
    6184:	ldr	q4, [x1, #32]
    6188:	ldr	x8, [x20, #64]
    618c:	ldr	x0, [x20, #80]
    6190:	mov	w1, #0x1                   	// #1
    6194:	str	q3, [x20, #96]
    6198:	stp	q0, q1, [x20]
    619c:	stp	q4, q2, [x20, #32]
    61a0:	blr	x8
    61a4:	cbz	x0, 62fc <deflateCopy@@Base+0x214>
    61a8:	mov	w2, #0x1740                	// #5952
    61ac:	mov	x1, x19
    61b0:	mov	x21, x0
    61b4:	str	x0, [x20, #56]
    61b8:	bl	2330 <memcpy@plt>
    61bc:	str	x20, [x21]
    61c0:	ldr	x8, [x20, #64]
    61c4:	ldr	x0, [x20, #80]
    61c8:	ldr	w1, [x21, #80]
    61cc:	mov	w2, #0x2                   	// #2
    61d0:	blr	x8
    61d4:	str	x0, [x21, #96]
    61d8:	ldr	x8, [x20, #64]
    61dc:	ldr	x0, [x20, #80]
    61e0:	ldr	w1, [x21, #80]
    61e4:	mov	w2, #0x2                   	// #2
    61e8:	blr	x8
    61ec:	str	x0, [x21, #112]
    61f0:	ldr	x8, [x20, #64]
    61f4:	ldr	x0, [x20, #80]
    61f8:	ldr	w1, [x21, #132]
    61fc:	mov	w2, #0x2                   	// #2
    6200:	blr	x8
    6204:	str	x0, [x21, #120]
    6208:	ldr	x8, [x20, #64]
    620c:	ldr	x0, [x20, #80]
    6210:	ldr	w1, [x21, #5896]
    6214:	mov	w2, #0x4                   	// #4
    6218:	blr	x8
    621c:	ldr	x8, [x21, #96]
    6220:	str	x0, [x21, #16]
    6224:	cbz	x8, 62f4 <deflateCopy@@Base+0x20c>
    6228:	ldr	x9, [x21, #112]
    622c:	cbz	x9, 62f4 <deflateCopy@@Base+0x20c>
    6230:	mov	x22, x0
    6234:	cbz	x0, 62f4 <deflateCopy@@Base+0x20c>
    6238:	ldr	x9, [x21, #120]
    623c:	cbz	x9, 62f4 <deflateCopy@@Base+0x20c>
    6240:	ldr	w9, [x21, #80]
    6244:	ldr	x1, [x19, #96]
    6248:	mov	x0, x8
    624c:	lsl	w2, w9, #1
    6250:	bl	2330 <memcpy@plt>
    6254:	ldr	w8, [x21, #80]
    6258:	ldr	x0, [x21, #112]
    625c:	ldr	x1, [x19, #112]
    6260:	lsl	x2, x8, #1
    6264:	bl	2330 <memcpy@plt>
    6268:	ldr	w8, [x21, #132]
    626c:	ldr	x0, [x21, #120]
    6270:	ldr	x1, [x19, #120]
    6274:	lsl	x2, x8, #1
    6278:	bl	2330 <memcpy@plt>
    627c:	ldr	x0, [x21, #16]
    6280:	ldr	x1, [x19, #16]
    6284:	ldr	w2, [x21, #24]
    6288:	bl	2330 <memcpy@plt>
    628c:	add	x11, x21, #0xd4
    6290:	ldr	x8, [x19, #32]
    6294:	ldr	x9, [x19, #16]
    6298:	str	x11, [x21, #2904]
    629c:	add	x11, x21, #0x9c8
    62a0:	ldr	w10, [x21, #5896]
    62a4:	str	x11, [x21, #2928]
    62a8:	ldr	x11, [x21, #16]
    62ac:	sub	x8, x8, x9
    62b0:	and	x9, x10, #0xfffffffe
    62b4:	add	x10, x10, x10, lsl #1
    62b8:	add	x8, x11, x8
    62bc:	mov	w0, wzr
    62c0:	add	x9, x22, x9
    62c4:	add	x10, x11, x10
    62c8:	str	x8, [x21, #32]
    62cc:	add	x8, x21, #0xabc
    62d0:	str	x9, [x21, #5904]
    62d4:	str	x10, [x21, #5888]
    62d8:	str	x8, [x21, #2952]
    62dc:	b	6124 <deflateCopy@@Base+0x3c>
    62e0:	cmp	w8, #0x29a
    62e4:	b.eq	6168 <deflateCopy@@Base+0x80>  // b.none
    62e8:	cmp	w8, #0x2a
    62ec:	b.ne	6120 <deflateCopy@@Base+0x38>  // b.any
    62f0:	b	6168 <deflateCopy@@Base+0x80>
    62f4:	mov	x0, x20
    62f8:	bl	24f0 <deflateEnd@plt>
    62fc:	mov	w0, #0xfffffffc            	// #-4
    6300:	b	6124 <deflateCopy@@Base+0x3c>
    6304:	stp	x29, x30, [sp, #-80]!
    6308:	stp	x24, x23, [sp, #32]
    630c:	adrp	x23, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    6310:	adrp	x24, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    6314:	stp	x20, x19, [sp, #64]
    6318:	mov	w20, w1
    631c:	mov	x19, x0
    6320:	add	x23, x23, #0x418
    6324:	add	x24, x24, #0x218
    6328:	stp	x26, x25, [sp, #16]
    632c:	stp	x22, x21, [sp, #48]
    6330:	mov	x29, sp
    6334:	b	6344 <deflateCopy@@Base+0x25c>
    6338:	ldr	x8, [x19]
    633c:	ldr	w8, [x8, #32]
    6340:	cbz	w8, 6828 <deflateCopy@@Base+0x740>
    6344:	ldr	w8, [x19, #180]
    6348:	cmp	w8, #0x105
    634c:	b.hi	6374 <deflateCopy@@Base+0x28c>  // b.pmore
    6350:	mov	x0, x19
    6354:	bl	3784 <deflateSetDictionary@@Base+0x214>
    6358:	ldr	w8, [x19, #180]
    635c:	cbnz	w20, 6368 <deflateCopy@@Base+0x280>
    6360:	cmp	w8, #0x106
    6364:	b.cc	6828 <deflateCopy@@Base+0x740>  // b.lo, b.ul, b.last
    6368:	cbz	w8, 6678 <deflateCopy@@Base+0x590>
    636c:	cmp	w8, #0x3
    6370:	b.cc	63d0 <deflateCopy@@Base+0x2e8>  // b.lo, b.ul, b.last
    6374:	ldr	w8, [x19, #172]
    6378:	ldr	x10, [x19, #96]
    637c:	ldr	w9, [x19, #128]
    6380:	ldp	w12, w11, [x19, #140]
    6384:	add	w13, w8, #0x2
    6388:	ldrb	w10, [x10, w13, uxtw]
    638c:	lsl	w9, w9, w11
    6390:	ldp	x13, x11, [x19, #112]
    6394:	eor	w9, w9, w10
    6398:	and	x9, x9, x12
    639c:	ldr	w10, [x19, #88]
    63a0:	str	w9, [x19, #128]
    63a4:	lsl	x9, x9, #1
    63a8:	ldrh	w1, [x11, x9]
    63ac:	and	x10, x10, x8
    63b0:	strh	w1, [x13, x10, lsl #1]
    63b4:	strh	w8, [x11, x9]
    63b8:	cbz	w1, 63d0 <deflateCopy@@Base+0x2e8>
    63bc:	ldr	w9, [x19, #80]
    63c0:	sub	w8, w8, w1
    63c4:	sub	w9, w9, #0x106
    63c8:	cmp	w8, w9
    63cc:	b.ls	6544 <deflateCopy@@Base+0x45c>  // b.plast
    63d0:	ldr	w0, [x19, #160]
    63d4:	subs	w8, w0, #0x3
    63d8:	b.cc	6558 <deflateCopy@@Base+0x470>  // b.lo, b.ul, b.last
    63dc:	ldp	w9, w10, [x19, #172]
    63e0:	ldr	x11, [x19, #5904]
    63e4:	ldr	w12, [x19, #5900]
    63e8:	and	x13, x8, #0xff
    63ec:	ldrb	w13, [x23, x13]
    63f0:	sub	w9, w9, w10
    63f4:	mov	w10, #0x400                 	// #1024
    63f8:	strh	w9, [x11, x12, lsl #1]
    63fc:	add	w11, w12, #0x1
    6400:	sub	w9, w9, #0x1
    6404:	str	w11, [x19, #5900]
    6408:	bfi	x10, x13, #2, #8
    640c:	ldr	x11, [x19, #5888]
    6410:	and	w13, w9, #0xffff
    6414:	cmp	w13, #0x100
    6418:	ubfx	w13, w9, #7, #9
    641c:	add	w13, w13, #0x100
    6420:	csel	w9, w9, w13, cc  // cc = lo, ul, last
    6424:	add	x10, x10, x19
    6428:	and	x9, x9, #0xffff
    642c:	strb	w8, [x11, x12]
    6430:	ldrb	w8, [x24, x9]
    6434:	ldrh	w9, [x10, #216]
    6438:	add	x8, x19, x8, lsl #2
    643c:	add	w9, w9, #0x1
    6440:	strh	w9, [x10, #216]
    6444:	ldrh	w9, [x8, #2504]
    6448:	add	w9, w9, #0x1
    644c:	strh	w9, [x8, #2504]
    6450:	ldr	w8, [x19, #5896]
    6454:	ldr	w9, [x19, #160]
    6458:	ldr	w10, [x19, #180]
    645c:	ldr	w11, [x19, #5900]
    6460:	sub	w8, w8, #0x1
    6464:	sub	w10, w10, w9
    6468:	cmp	w11, w8
    646c:	cset	w8, eq  // eq = none
    6470:	cmp	w10, #0x3
    6474:	str	w10, [x19, #180]
    6478:	b.cc	6504 <deflateCopy@@Base+0x41c>  // b.lo, b.ul, b.last
    647c:	ldr	w10, [x19, #192]
    6480:	cmp	w9, w10
    6484:	b.hi	6504 <deflateCopy@@Base+0x41c>  // b.pmore
    6488:	ldr	w18, [x19, #172]
    648c:	ldr	x10, [x19, #96]
    6490:	ldp	w12, w11, [x19, #140]
    6494:	ldp	x14, x13, [x19, #112]
    6498:	ldr	w15, [x19, #88]
    649c:	ldr	w17, [x19, #128]
    64a0:	sub	w16, w9, #0x1
    64a4:	str	w16, [x19, #160]
    64a8:	sub	w16, w9, #0x2
    64ac:	add	w9, w18, #0x1
    64b0:	str	w9, [x19, #172]
    64b4:	add	w18, w9, #0x2
    64b8:	ldrb	w18, [x10, w18, uxtw]
    64bc:	lsl	w17, w17, w11
    64c0:	mov	w1, w9
    64c4:	and	x1, x15, x1
    64c8:	eor	w17, w17, w18
    64cc:	and	x17, x17, x12
    64d0:	str	w17, [x19, #128]
    64d4:	lsl	x18, x17, #1
    64d8:	ldrh	w0, [x13, x18]
    64dc:	strh	w0, [x14, x1, lsl #1]
    64e0:	strh	w9, [x13, x18]
    64e4:	str	w16, [x19, #160]
    64e8:	sub	w16, w16, #0x1
    64ec:	cmn	w16, #0x1
    64f0:	add	w9, w9, #0x1
    64f4:	b.ne	64b0 <deflateCopy@@Base+0x3c8>  // b.any
    64f8:	str	w9, [x19, #172]
    64fc:	cbz	w8, 6344 <deflateCopy@@Base+0x25c>
    6500:	b	65c0 <deflateCopy@@Base+0x4d8>
    6504:	ldr	w10, [x19, #172]
    6508:	ldr	x11, [x19, #96]
    650c:	str	wzr, [x19, #160]
    6510:	add	w9, w10, w9
    6514:	str	w9, [x19, #172]
    6518:	ldrb	w10, [x11, w9, uxtw]
    651c:	add	w12, w9, #0x1
    6520:	str	w10, [x19, #128]
    6524:	ldrb	w11, [x11, w12, uxtw]
    6528:	ldp	w12, w13, [x19, #140]
    652c:	lsl	w10, w10, w13
    6530:	eor	w10, w10, w11
    6534:	and	w10, w10, w12
    6538:	str	w10, [x19, #128]
    653c:	cbz	w8, 6344 <deflateCopy@@Base+0x25c>
    6540:	b	65c0 <deflateCopy@@Base+0x4d8>
    6544:	mov	x0, x19
    6548:	bl	6f18 <deflateCopy@@Base+0xe30>
    654c:	str	w0, [x19, #160]
    6550:	subs	w8, w0, #0x3
    6554:	b.cs	63dc <deflateCopy@@Base+0x2f4>  // b.hs, b.nlast
    6558:	ldr	x8, [x19, #96]
    655c:	ldr	w9, [x19, #172]
    6560:	ldr	x10, [x19, #5904]
    6564:	ldr	w11, [x19, #5900]
    6568:	ldrb	w8, [x8, x9]
    656c:	strh	wzr, [x10, x11, lsl #1]
    6570:	ldr	x9, [x19, #5888]
    6574:	add	w10, w11, #0x1
    6578:	str	w10, [x19, #5900]
    657c:	add	x10, x19, x8, lsl #2
    6580:	strb	w8, [x9, x11]
    6584:	ldrh	w8, [x10, #212]
    6588:	add	w8, w8, #0x1
    658c:	strh	w8, [x10, #212]
    6590:	ldr	w8, [x19, #5896]
    6594:	ldr	w11, [x19, #5900]
    6598:	ldr	w9, [x19, #180]
    659c:	ldr	w10, [x19, #172]
    65a0:	sub	w8, w8, #0x1
    65a4:	cmp	w11, w8
    65a8:	sub	w12, w9, #0x1
    65ac:	add	w9, w10, #0x1
    65b0:	cset	w8, eq  // eq = none
    65b4:	str	w12, [x19, #180]
    65b8:	str	w9, [x19, #172]
    65bc:	cbz	w8, 6344 <deflateCopy@@Base+0x25c>
    65c0:	ldr	x8, [x19, #152]
    65c4:	tbnz	x8, #63, 65d4 <deflateCopy@@Base+0x4ec>
    65c8:	ldr	x10, [x19, #96]
    65cc:	add	x1, x10, w8, uxtw
    65d0:	b	65d8 <deflateCopy@@Base+0x4f0>
    65d4:	mov	x1, xzr
    65d8:	mov	w9, w9
    65dc:	sub	x2, x9, x8
    65e0:	mov	x0, x19
    65e4:	mov	w3, wzr
    65e8:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    65ec:	ldr	w8, [x19, #172]
    65f0:	ldr	x25, [x19]
    65f4:	str	x8, [x19, #152]
    65f8:	ldr	x21, [x25, #56]
    65fc:	mov	x0, x21
    6600:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    6604:	ldr	w8, [x21, #40]
    6608:	ldr	w9, [x25, #32]
    660c:	cmp	w9, w8
    6610:	csel	w26, w9, w8, cc  // cc = lo, ul, last
    6614:	cbz	w26, 6338 <deflateCopy@@Base+0x250>
    6618:	ldr	x0, [x25, #24]
    661c:	ldr	x1, [x21, #32]
    6620:	mov	w22, w26
    6624:	mov	x2, x22
    6628:	bl	2330 <memcpy@plt>
    662c:	ldr	x8, [x25, #24]
    6630:	add	x8, x8, x22
    6634:	str	x8, [x25, #24]
    6638:	ldr	x8, [x21, #32]
    663c:	add	x8, x8, x22
    6640:	str	x8, [x21, #32]
    6644:	ldr	x8, [x25, #40]
    6648:	ldr	w9, [x25, #32]
    664c:	add	x8, x8, x22
    6650:	sub	w9, w9, w26
    6654:	str	x8, [x25, #40]
    6658:	str	w9, [x25, #32]
    665c:	ldr	x8, [x21, #40]
    6660:	subs	x8, x8, x22
    6664:	str	x8, [x21, #40]
    6668:	b.ne	6338 <deflateCopy@@Base+0x250>  // b.any
    666c:	ldr	x8, [x21, #16]
    6670:	str	x8, [x21, #32]
    6674:	b	6338 <deflateCopy@@Base+0x250>
    6678:	ldr	w8, [x19, #172]
    667c:	mov	w9, #0x2                   	// #2
    6680:	cmp	w8, #0x2
    6684:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    6688:	cmp	w20, #0x4
    668c:	str	w9, [x19, #5932]
    6690:	b.ne	66a8 <deflateCopy@@Base+0x5c0>  // b.any
    6694:	ldr	x9, [x19, #152]
    6698:	tbnz	x9, #63, 66c4 <deflateCopy@@Base+0x5dc>
    669c:	ldr	x10, [x19, #96]
    66a0:	add	x1, x10, w9, uxtw
    66a4:	b	66c8 <deflateCopy@@Base+0x5e0>
    66a8:	ldr	w9, [x19, #5900]
    66ac:	cbz	w9, 6820 <deflateCopy@@Base+0x738>
    66b0:	ldr	x9, [x19, #152]
    66b4:	tbnz	x9, #63, 6778 <deflateCopy@@Base+0x690>
    66b8:	ldr	x10, [x19, #96]
    66bc:	add	x1, x10, w9, uxtw
    66c0:	b	677c <deflateCopy@@Base+0x694>
    66c4:	mov	x1, xzr
    66c8:	sub	x2, x8, x9
    66cc:	mov	w3, #0x1                   	// #1
    66d0:	mov	x0, x19
    66d4:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    66d8:	ldr	w8, [x19, #172]
    66dc:	ldr	x22, [x19]
    66e0:	str	x8, [x19, #152]
    66e4:	ldr	x20, [x22, #56]
    66e8:	mov	x0, x20
    66ec:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    66f0:	ldr	w8, [x20, #40]
    66f4:	ldr	w9, [x22, #32]
    66f8:	cmp	w9, w8
    66fc:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6700:	cbz	w23, 6760 <deflateCopy@@Base+0x678>
    6704:	ldr	x0, [x22, #24]
    6708:	ldr	x1, [x20, #32]
    670c:	mov	w21, w23
    6710:	mov	x2, x21
    6714:	bl	2330 <memcpy@plt>
    6718:	ldr	x8, [x22, #24]
    671c:	add	x8, x8, x21
    6720:	str	x8, [x22, #24]
    6724:	ldr	x8, [x20, #32]
    6728:	add	x8, x8, x21
    672c:	str	x8, [x20, #32]
    6730:	ldr	x8, [x22, #40]
    6734:	ldr	w9, [x22, #32]
    6738:	add	x8, x8, x21
    673c:	sub	w9, w9, w23
    6740:	str	x8, [x22, #40]
    6744:	str	w9, [x22, #32]
    6748:	ldr	x8, [x20, #40]
    674c:	subs	x8, x8, x21
    6750:	str	x8, [x20, #40]
    6754:	b.ne	6760 <deflateCopy@@Base+0x678>  // b.any
    6758:	ldr	x8, [x20, #16]
    675c:	str	x8, [x20, #32]
    6760:	ldr	x8, [x19]
    6764:	ldr	w8, [x8, #32]
    6768:	cmp	w8, #0x0
    676c:	mov	w8, #0x2                   	// #2
    6770:	cinc	w0, w8, ne  // ne = any
    6774:	b	682c <deflateCopy@@Base+0x744>
    6778:	mov	x1, xzr
    677c:	sub	x2, x8, x9
    6780:	mov	x0, x19
    6784:	mov	w3, wzr
    6788:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    678c:	ldr	w8, [x19, #172]
    6790:	ldr	x22, [x19]
    6794:	str	x8, [x19, #152]
    6798:	ldr	x20, [x22, #56]
    679c:	mov	x0, x20
    67a0:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    67a4:	ldr	w8, [x20, #40]
    67a8:	ldr	w9, [x22, #32]
    67ac:	cmp	w9, w8
    67b0:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    67b4:	cbz	w23, 6814 <deflateCopy@@Base+0x72c>
    67b8:	ldr	x0, [x22, #24]
    67bc:	ldr	x1, [x20, #32]
    67c0:	mov	w21, w23
    67c4:	mov	x2, x21
    67c8:	bl	2330 <memcpy@plt>
    67cc:	ldr	x8, [x22, #24]
    67d0:	add	x8, x8, x21
    67d4:	str	x8, [x22, #24]
    67d8:	ldr	x8, [x20, #32]
    67dc:	add	x8, x8, x21
    67e0:	str	x8, [x20, #32]
    67e4:	ldr	x8, [x22, #40]
    67e8:	ldr	w9, [x22, #32]
    67ec:	add	x8, x8, x21
    67f0:	sub	w9, w9, w23
    67f4:	str	x8, [x22, #40]
    67f8:	str	w9, [x22, #32]
    67fc:	ldr	x8, [x20, #40]
    6800:	subs	x8, x8, x21
    6804:	str	x8, [x20, #40]
    6808:	b.ne	6814 <deflateCopy@@Base+0x72c>  // b.any
    680c:	ldr	x8, [x20, #16]
    6810:	str	x8, [x20, #32]
    6814:	ldr	x8, [x19]
    6818:	ldr	w8, [x8, #32]
    681c:	cbz	w8, 6828 <deflateCopy@@Base+0x740>
    6820:	mov	w0, #0x1                   	// #1
    6824:	b	682c <deflateCopy@@Base+0x744>
    6828:	mov	w0, wzr
    682c:	ldp	x20, x19, [sp, #64]
    6830:	ldp	x22, x21, [sp, #48]
    6834:	ldp	x24, x23, [sp, #32]
    6838:	ldp	x26, x25, [sp, #16]
    683c:	ldp	x29, x30, [sp], #80
    6840:	ret
    6844:	stp	x29, x30, [sp, #-96]!
    6848:	stp	x26, x25, [sp, #32]
    684c:	stp	x24, x23, [sp, #48]
    6850:	adrp	x24, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    6854:	adrp	x25, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    6858:	stp	x20, x19, [sp, #80]
    685c:	mov	w20, w1
    6860:	mov	x19, x0
    6864:	mov	w23, #0x1                   	// #1
    6868:	add	x24, x24, #0x418
    686c:	add	x25, x25, #0x218
    6870:	mov	w26, #0x2                   	// #2
    6874:	stp	x28, x27, [sp, #16]
    6878:	stp	x22, x21, [sp, #64]
    687c:	mov	x29, sp
    6880:	b	68a8 <deflateCopy@@Base+0x7c0>
    6884:	ldr	w8, [x19, #172]
    6888:	ldr	w9, [x19, #180]
    688c:	ldr	x10, [x19]
    6890:	add	w8, w8, #0x1
    6894:	sub	w9, w9, #0x1
    6898:	str	w8, [x19, #172]
    689c:	str	w9, [x19, #180]
    68a0:	ldr	w8, [x10, #32]
    68a4:	cbz	w8, 6ef8 <deflateCopy@@Base+0xe10>
    68a8:	ldr	w8, [x19, #180]
    68ac:	cmp	w8, #0x105
    68b0:	b.hi	68d8 <deflateCopy@@Base+0x7f0>  // b.pmore
    68b4:	mov	x0, x19
    68b8:	bl	3784 <deflateSetDictionary@@Base+0x214>
    68bc:	ldr	w8, [x19, #180]
    68c0:	cbnz	w20, 68cc <deflateCopy@@Base+0x7e4>
    68c4:	cmp	w8, #0x106
    68c8:	b.cc	6ef8 <deflateCopy@@Base+0xe10>  // b.lo, b.ul, b.last
    68cc:	cbz	w8, 6d00 <deflateCopy@@Base+0xc18>
    68d0:	cmp	w8, #0x2
    68d4:	b.ls	696c <deflateCopy@@Base+0x884>  // b.plast
    68d8:	ldr	w9, [x19, #172]
    68dc:	ldr	x10, [x19, #96]
    68e0:	ldr	w8, [x19, #128]
    68e4:	ldp	w12, w11, [x19, #140]
    68e8:	add	w13, w9, #0x2
    68ec:	ldrb	w10, [x10, w13, uxtw]
    68f0:	mov	w0, #0x2                   	// #2
    68f4:	lsl	w8, w8, w11
    68f8:	ldp	x13, x11, [x19, #112]
    68fc:	eor	w8, w8, w10
    6900:	and	x8, x8, x12
    6904:	ldr	w10, [x19, #88]
    6908:	str	w8, [x19, #128]
    690c:	lsl	x8, x8, #1
    6910:	ldrh	w1, [x11, x8]
    6914:	and	x10, x10, x9
    6918:	strh	w1, [x13, x10, lsl #1]
    691c:	strh	w9, [x11, x8]
    6920:	ldr	w8, [x19, #160]
    6924:	ldr	w9, [x19, #176]
    6928:	str	w8, [x19, #184]
    692c:	stp	w0, w9, [x19, #160]
    6930:	cbz	w1, 6980 <deflateCopy@@Base+0x898>
    6934:	ldr	w9, [x19, #192]
    6938:	cmp	w8, w9
    693c:	b.cs	6958 <deflateCopy@@Base+0x870>  // b.hs, b.nlast
    6940:	ldr	w8, [x19, #172]
    6944:	ldr	w9, [x19, #80]
    6948:	sub	w8, w8, w1
    694c:	sub	w9, w9, #0x106
    6950:	cmp	w8, w9
    6954:	b.ls	6b60 <deflateCopy@@Base+0xa78>  // b.plast
    6958:	mov	w0, #0x2                   	// #2
    695c:	ldr	w8, [x19, #184]
    6960:	subs	w9, w8, #0x3
    6964:	b.cs	6988 <deflateCopy@@Base+0x8a0>  // b.hs, b.nlast
    6968:	b	6ab4 <deflateCopy@@Base+0x9cc>
    696c:	ldr	w8, [x19, #160]
    6970:	ldr	w9, [x19, #176]
    6974:	mov	w0, #0x2                   	// #2
    6978:	str	w8, [x19, #184]
    697c:	stp	w0, w9, [x19, #160]
    6980:	subs	w9, w8, #0x3
    6984:	b.cc	6ab4 <deflateCopy@@Base+0x9cc>  // b.lo, b.ul, b.last
    6988:	cmp	w0, w8
    698c:	b.hi	6ab4 <deflateCopy@@Base+0x9cc>  // b.pmore
    6990:	ldr	w11, [x19, #164]
    6994:	ldr	w8, [x19, #172]
    6998:	ldr	x12, [x19, #5904]
    699c:	ldr	w13, [x19, #5900]
    69a0:	mvn	w11, w11
    69a4:	add	w11, w11, w8
    69a8:	ldr	w10, [x19, #180]
    69ac:	strh	w11, [x12, x13, lsl #1]
    69b0:	and	x14, x9, #0xff
    69b4:	ldr	x12, [x19, #5888]
    69b8:	ldrb	w14, [x24, x14]
    69bc:	add	w15, w13, #0x1
    69c0:	sub	w11, w11, #0x1
    69c4:	str	w15, [x19, #5900]
    69c8:	strb	w9, [x12, x13]
    69cc:	mov	w9, #0x400                 	// #1024
    69d0:	and	w12, w11, #0xffff
    69d4:	ubfx	w13, w11, #7, #9
    69d8:	bfi	x9, x14, #2, #8
    69dc:	add	w13, w13, #0x100
    69e0:	cmp	w12, #0x100
    69e4:	add	x9, x9, x19
    69e8:	csel	w11, w11, w13, cc  // cc = lo, ul, last
    69ec:	and	x11, x11, #0xffff
    69f0:	ldrh	w12, [x9, #216]
    69f4:	ldrb	w11, [x25, x11]
    69f8:	add	w8, w8, w10
    69fc:	add	w12, w12, #0x1
    6a00:	add	x11, x19, x11, lsl #2
    6a04:	strh	w12, [x9, #216]
    6a08:	ldrh	w12, [x11, #2504]
    6a0c:	sub	w9, w8, #0x3
    6a10:	add	w8, w12, #0x1
    6a14:	strh	w8, [x11, #2504]
    6a18:	ldp	w12, w8, [x19, #180]
    6a1c:	ldr	w11, [x19, #5896]
    6a20:	ldr	w10, [x19, #5900]
    6a24:	sub	w13, w8, #0x2
    6a28:	str	w13, [x19, #184]
    6a2c:	ldr	w13, [x19, #172]
    6a30:	sub	w14, w12, w8
    6a34:	sub	w12, w8, #0x3
    6a38:	add	w8, w14, #0x1
    6a3c:	sub	w11, w11, #0x1
    6a40:	str	w8, [x19, #180]
    6a44:	add	w8, w13, #0x1
    6a48:	b	6a60 <deflateCopy@@Base+0x978>
    6a4c:	str	w12, [x19, #184]
    6a50:	sub	w12, w12, #0x1
    6a54:	cmn	w12, #0x1
    6a58:	add	w8, w8, #0x1
    6a5c:	b.eq	6b20 <deflateCopy@@Base+0xa38>  // b.none
    6a60:	cmp	w8, w9
    6a64:	str	w8, [x19, #172]
    6a68:	b.hi	6a4c <deflateCopy@@Base+0x964>  // b.pmore
    6a6c:	ldr	x14, [x19, #96]
    6a70:	ldr	w13, [x19, #128]
    6a74:	add	w15, w8, #0x2
    6a78:	ldp	w17, w16, [x19, #140]
    6a7c:	ldrb	w14, [x14, w15, uxtw]
    6a80:	ldp	x18, x15, [x19, #112]
    6a84:	lsl	w13, w13, w16
    6a88:	eor	w13, w13, w14
    6a8c:	and	x13, x13, x17
    6a90:	ldr	w16, [x19, #88]
    6a94:	str	w13, [x19, #128]
    6a98:	lsl	x13, x13, #1
    6a9c:	ldrh	w14, [x15, x13]
    6aa0:	mov	w17, w8
    6aa4:	and	x16, x16, x17
    6aa8:	strh	w14, [x18, x16, lsl #1]
    6aac:	strh	w8, [x15, x13]
    6ab0:	b	6a4c <deflateCopy@@Base+0x964>
    6ab4:	ldr	w8, [x19, #168]
    6ab8:	cbz	w8, 6b44 <deflateCopy@@Base+0xa5c>
    6abc:	ldr	w9, [x19, #172]
    6ac0:	ldr	x8, [x19, #96]
    6ac4:	ldr	x10, [x19, #5904]
    6ac8:	ldr	w11, [x19, #5900]
    6acc:	sub	w9, w9, #0x1
    6ad0:	ldrb	w8, [x8, w9, uxtw]
    6ad4:	strh	wzr, [x10, x11, lsl #1]
    6ad8:	ldr	x9, [x19, #5888]
    6adc:	add	w10, w11, #0x1
    6ae0:	str	w10, [x19, #5900]
    6ae4:	strb	w8, [x9, x11]
    6ae8:	add	x8, x19, x8, lsl #2
    6aec:	ldrh	w9, [x8, #212]
    6af0:	add	w9, w9, #0x1
    6af4:	strh	w9, [x8, #212]
    6af8:	ldr	w8, [x19, #5896]
    6afc:	ldr	w9, [x19, #5900]
    6b00:	sub	w8, w8, #0x1
    6b04:	cmp	w9, w8
    6b08:	b.ne	6884 <deflateCopy@@Base+0x79c>  // b.any
    6b0c:	ldr	x8, [x19, #152]
    6b10:	tbnz	x8, #63, 6c3c <deflateCopy@@Base+0xb54>
    6b14:	ldr	x9, [x19, #96]
    6b18:	add	x1, x9, w8, uxtw
    6b1c:	b	6c40 <deflateCopy@@Base+0xb58>
    6b20:	cmp	w10, w11
    6b24:	str	w26, [x19, #160]
    6b28:	stp	wzr, w8, [x19, #168]
    6b2c:	b.ne	68a8 <deflateCopy@@Base+0x7c0>  // b.any
    6b30:	ldr	x9, [x19, #152]
    6b34:	tbnz	x9, #63, 6b8c <deflateCopy@@Base+0xaa4>
    6b38:	ldr	x10, [x19, #96]
    6b3c:	add	x1, x10, w9, uxtw
    6b40:	b	6b90 <deflateCopy@@Base+0xaa8>
    6b44:	ldr	w8, [x19, #172]
    6b48:	ldr	w9, [x19, #180]
    6b4c:	add	w8, w8, #0x1
    6b50:	sub	w9, w9, #0x1
    6b54:	stp	w23, w8, [x19, #168]
    6b58:	str	w9, [x19, #180]
    6b5c:	b	68a8 <deflateCopy@@Base+0x7c0>
    6b60:	mov	x0, x19
    6b64:	bl	6f18 <deflateCopy@@Base+0xe30>
    6b68:	cmp	w0, #0x5
    6b6c:	str	w0, [x19, #160]
    6b70:	b.hi	695c <deflateCopy@@Base+0x874>  // b.pmore
    6b74:	ldr	w8, [x19, #200]
    6b78:	cmp	w8, #0x1
    6b7c:	b.ne	6ce0 <deflateCopy@@Base+0xbf8>  // b.any
    6b80:	mov	w0, #0x2                   	// #2
    6b84:	str	w0, [x19, #160]
    6b88:	b	695c <deflateCopy@@Base+0x874>
    6b8c:	mov	x1, xzr
    6b90:	mov	w8, w8
    6b94:	sub	x2, x8, x9
    6b98:	mov	x0, x19
    6b9c:	mov	w3, wzr
    6ba0:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    6ba4:	ldr	w8, [x19, #172]
    6ba8:	ldr	x27, [x19]
    6bac:	str	x8, [x19, #152]
    6bb0:	ldr	x21, [x27, #56]
    6bb4:	mov	x0, x21
    6bb8:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    6bbc:	ldr	w8, [x21, #40]
    6bc0:	ldr	w9, [x27, #32]
    6bc4:	cmp	w9, w8
    6bc8:	csel	w28, w9, w8, cc  // cc = lo, ul, last
    6bcc:	cbz	w28, 6c2c <deflateCopy@@Base+0xb44>
    6bd0:	ldr	x0, [x27, #24]
    6bd4:	ldr	x1, [x21, #32]
    6bd8:	mov	w22, w28
    6bdc:	mov	x2, x22
    6be0:	bl	2330 <memcpy@plt>
    6be4:	ldr	x8, [x27, #24]
    6be8:	add	x8, x8, x22
    6bec:	str	x8, [x27, #24]
    6bf0:	ldr	x8, [x21, #32]
    6bf4:	add	x8, x8, x22
    6bf8:	str	x8, [x21, #32]
    6bfc:	ldr	x8, [x27, #40]
    6c00:	ldr	w9, [x27, #32]
    6c04:	add	x8, x8, x22
    6c08:	sub	w9, w9, w28
    6c0c:	str	x8, [x27, #40]
    6c10:	str	w9, [x27, #32]
    6c14:	ldr	x8, [x21, #40]
    6c18:	subs	x8, x8, x22
    6c1c:	str	x8, [x21, #40]
    6c20:	b.ne	6c2c <deflateCopy@@Base+0xb44>  // b.any
    6c24:	ldr	x8, [x21, #16]
    6c28:	str	x8, [x21, #32]
    6c2c:	ldr	x8, [x19]
    6c30:	ldr	w8, [x8, #32]
    6c34:	cbnz	w8, 68a8 <deflateCopy@@Base+0x7c0>
    6c38:	b	6ef8 <deflateCopy@@Base+0xe10>
    6c3c:	mov	x1, xzr
    6c40:	ldr	w9, [x19, #172]
    6c44:	mov	x0, x19
    6c48:	mov	w3, wzr
    6c4c:	sub	x2, x9, x8
    6c50:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    6c54:	ldr	w8, [x19, #172]
    6c58:	ldr	x27, [x19]
    6c5c:	str	x8, [x19, #152]
    6c60:	ldr	x21, [x27, #56]
    6c64:	mov	x0, x21
    6c68:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    6c6c:	ldr	w8, [x21, #40]
    6c70:	ldr	w9, [x27, #32]
    6c74:	cmp	w9, w8
    6c78:	csel	w28, w9, w8, cc  // cc = lo, ul, last
    6c7c:	cbz	w28, 6884 <deflateCopy@@Base+0x79c>
    6c80:	ldr	x0, [x27, #24]
    6c84:	ldr	x1, [x21, #32]
    6c88:	mov	w22, w28
    6c8c:	mov	x2, x22
    6c90:	bl	2330 <memcpy@plt>
    6c94:	ldr	x8, [x27, #24]
    6c98:	add	x8, x8, x22
    6c9c:	str	x8, [x27, #24]
    6ca0:	ldr	x8, [x21, #32]
    6ca4:	add	x8, x8, x22
    6ca8:	str	x8, [x21, #32]
    6cac:	ldr	x8, [x27, #40]
    6cb0:	ldr	w9, [x27, #32]
    6cb4:	add	x8, x8, x22
    6cb8:	sub	w9, w9, w28
    6cbc:	str	x8, [x27, #40]
    6cc0:	str	w9, [x27, #32]
    6cc4:	ldr	x8, [x21, #40]
    6cc8:	subs	x8, x8, x22
    6ccc:	str	x8, [x21, #40]
    6cd0:	b.ne	6884 <deflateCopy@@Base+0x79c>  // b.any
    6cd4:	ldr	x8, [x21, #16]
    6cd8:	str	x8, [x21, #32]
    6cdc:	b	6884 <deflateCopy@@Base+0x79c>
    6ce0:	cmp	w0, #0x3
    6ce4:	b.ne	695c <deflateCopy@@Base+0x874>  // b.any
    6ce8:	ldp	w8, w9, [x19, #172]
    6cec:	sub	w8, w8, w9
    6cf0:	cmp	w8, #0x1, lsl #12
    6cf4:	b.hi	6b80 <deflateCopy@@Base+0xa98>  // b.pmore
    6cf8:	mov	w0, #0x3                   	// #3
    6cfc:	b	695c <deflateCopy@@Base+0x874>
    6d00:	ldr	w8, [x19, #168]
    6d04:	cbz	w8, 6d48 <deflateCopy@@Base+0xc60>
    6d08:	ldr	w9, [x19, #172]
    6d0c:	ldr	x8, [x19, #96]
    6d10:	ldr	x10, [x19, #5904]
    6d14:	ldr	w11, [x19, #5900]
    6d18:	sub	w9, w9, #0x1
    6d1c:	ldrb	w8, [x8, w9, uxtw]
    6d20:	strh	wzr, [x10, x11, lsl #1]
    6d24:	ldr	x9, [x19, #5888]
    6d28:	add	w10, w11, #0x1
    6d2c:	str	w10, [x19, #5900]
    6d30:	add	x10, x19, x8, lsl #2
    6d34:	strb	w8, [x9, x11]
    6d38:	ldrh	w8, [x10, #212]
    6d3c:	add	w8, w8, #0x1
    6d40:	strh	w8, [x10, #212]
    6d44:	str	wzr, [x19, #168]
    6d48:	ldr	w8, [x19, #172]
    6d4c:	mov	w9, #0x2                   	// #2
    6d50:	cmp	w8, #0x2
    6d54:	csel	w9, w8, w9, cc  // cc = lo, ul, last
    6d58:	cmp	w20, #0x4
    6d5c:	str	w9, [x19, #5932]
    6d60:	b.ne	6d78 <deflateCopy@@Base+0xc90>  // b.any
    6d64:	ldr	x9, [x19, #152]
    6d68:	tbnz	x9, #63, 6d94 <deflateCopy@@Base+0xcac>
    6d6c:	ldr	x10, [x19, #96]
    6d70:	add	x1, x10, w9, uxtw
    6d74:	b	6d98 <deflateCopy@@Base+0xcb0>
    6d78:	ldr	w9, [x19, #5900]
    6d7c:	cbz	w9, 6ef0 <deflateCopy@@Base+0xe08>
    6d80:	ldr	x9, [x19, #152]
    6d84:	tbnz	x9, #63, 6e48 <deflateCopy@@Base+0xd60>
    6d88:	ldr	x10, [x19, #96]
    6d8c:	add	x1, x10, w9, uxtw
    6d90:	b	6e4c <deflateCopy@@Base+0xd64>
    6d94:	mov	x1, xzr
    6d98:	sub	x2, x8, x9
    6d9c:	mov	w3, #0x1                   	// #1
    6da0:	mov	x0, x19
    6da4:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    6da8:	ldr	w8, [x19, #172]
    6dac:	ldr	x22, [x19]
    6db0:	str	x8, [x19, #152]
    6db4:	ldr	x20, [x22, #56]
    6db8:	mov	x0, x20
    6dbc:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    6dc0:	ldr	w8, [x20, #40]
    6dc4:	ldr	w9, [x22, #32]
    6dc8:	cmp	w9, w8
    6dcc:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6dd0:	cbz	w23, 6e30 <deflateCopy@@Base+0xd48>
    6dd4:	ldr	x0, [x22, #24]
    6dd8:	ldr	x1, [x20, #32]
    6ddc:	mov	w21, w23
    6de0:	mov	x2, x21
    6de4:	bl	2330 <memcpy@plt>
    6de8:	ldr	x8, [x22, #24]
    6dec:	add	x8, x8, x21
    6df0:	str	x8, [x22, #24]
    6df4:	ldr	x8, [x20, #32]
    6df8:	add	x8, x8, x21
    6dfc:	str	x8, [x20, #32]
    6e00:	ldr	x8, [x22, #40]
    6e04:	ldr	w9, [x22, #32]
    6e08:	add	x8, x8, x21
    6e0c:	sub	w9, w9, w23
    6e10:	str	x8, [x22, #40]
    6e14:	str	w9, [x22, #32]
    6e18:	ldr	x8, [x20, #40]
    6e1c:	subs	x8, x8, x21
    6e20:	str	x8, [x20, #40]
    6e24:	b.ne	6e30 <deflateCopy@@Base+0xd48>  // b.any
    6e28:	ldr	x8, [x20, #16]
    6e2c:	str	x8, [x20, #32]
    6e30:	ldr	x8, [x19]
    6e34:	ldr	w8, [x8, #32]
    6e38:	cmp	w8, #0x0
    6e3c:	mov	w8, #0x2                   	// #2
    6e40:	cinc	w0, w8, ne  // ne = any
    6e44:	b	6efc <deflateCopy@@Base+0xe14>
    6e48:	mov	x1, xzr
    6e4c:	sub	x2, x8, x9
    6e50:	mov	x0, x19
    6e54:	mov	w3, wzr
    6e58:	bl	bb2c <inflateCodesUsed@@ZLIB_1.2.9+0xb00>
    6e5c:	ldr	w8, [x19, #172]
    6e60:	ldr	x22, [x19]
    6e64:	str	x8, [x19, #152]
    6e68:	ldr	x20, [x22, #56]
    6e6c:	mov	x0, x20
    6e70:	bl	b948 <inflateCodesUsed@@ZLIB_1.2.9+0x91c>
    6e74:	ldr	w8, [x20, #40]
    6e78:	ldr	w9, [x22, #32]
    6e7c:	cmp	w9, w8
    6e80:	csel	w23, w9, w8, cc  // cc = lo, ul, last
    6e84:	cbz	w23, 6ee4 <deflateCopy@@Base+0xdfc>
    6e88:	ldr	x0, [x22, #24]
    6e8c:	ldr	x1, [x20, #32]
    6e90:	mov	w21, w23
    6e94:	mov	x2, x21
    6e98:	bl	2330 <memcpy@plt>
    6e9c:	ldr	x8, [x22, #24]
    6ea0:	add	x8, x8, x21
    6ea4:	str	x8, [x22, #24]
    6ea8:	ldr	x8, [x20, #32]
    6eac:	add	x8, x8, x21
    6eb0:	str	x8, [x20, #32]
    6eb4:	ldr	x8, [x22, #40]
    6eb8:	ldr	w9, [x22, #32]
    6ebc:	add	x8, x8, x21
    6ec0:	sub	w9, w9, w23
    6ec4:	str	x8, [x22, #40]
    6ec8:	str	w9, [x22, #32]
    6ecc:	ldr	x8, [x20, #40]
    6ed0:	subs	x8, x8, x21
    6ed4:	str	x8, [x20, #40]
    6ed8:	b.ne	6ee4 <deflateCopy@@Base+0xdfc>  // b.any
    6edc:	ldr	x8, [x20, #16]
    6ee0:	str	x8, [x20, #32]
    6ee4:	ldr	x8, [x19]
    6ee8:	ldr	w8, [x8, #32]
    6eec:	cbz	w8, 6ef8 <deflateCopy@@Base+0xe10>
    6ef0:	mov	w0, #0x1                   	// #1
    6ef4:	b	6efc <deflateCopy@@Base+0xe14>
    6ef8:	mov	w0, wzr
    6efc:	ldp	x20, x19, [sp, #80]
    6f00:	ldp	x22, x21, [sp, #64]
    6f04:	ldp	x24, x23, [sp, #48]
    6f08:	ldp	x26, x25, [sp, #32]
    6f0c:	ldp	x28, x27, [sp, #16]
    6f10:	ldp	x29, x30, [sp], #96
    6f14:	ret
    6f18:	stp	x22, x21, [sp, #-32]!
    6f1c:	stp	x20, x19, [sp, #16]
    6f20:	ldr	x8, [x0, #96]
    6f24:	ldr	w15, [x0, #172]
    6f28:	ldr	w14, [x0, #80]
    6f2c:	ldp	w12, w17, [x0, #184]
    6f30:	ldp	w2, w18, [x0, #204]
    6f34:	sxtw	x12, w12
    6f38:	ldr	w11, [x0, #180]
    6f3c:	add	x13, x8, x15
    6f40:	sub	w16, w14, #0x106
    6f44:	add	x5, x13, x12
    6f48:	ldr	x9, [x0, #112]
    6f4c:	ldr	w10, [x0, #88]
    6f50:	subs	w16, w15, w16
    6f54:	ldurb	w4, [x5, #-1]
    6f58:	ldrb	w5, [x5]
    6f5c:	lsr	w3, w17, #2
    6f60:	csel	w16, wzr, w16, cc  // cc = lo, ul, last
    6f64:	cmp	w12, w2
    6f68:	csel	w17, w17, w3, cc  // cc = lo, ul, last
    6f6c:	cmp	w18, w11
    6f70:	add	x14, x8, #0x5
    6f74:	add	x15, x13, #0x102
    6f78:	csel	w18, w11, w18, hi  // hi = pmore
    6f7c:	mov	w2, #0x102                 	// #258
    6f80:	mov	x3, #0x10100000000         	// #1103806595072
    6f84:	mov	w6, w1
    6f88:	add	x7, x8, x6
    6f8c:	sxtw	x19, w12
    6f90:	ldrb	w20, [x7, x19]
    6f94:	cmp	w20, w5, uxtb
    6f98:	b.ne	7104 <deflateCopy@@Base+0x101c>  // b.any
    6f9c:	add	x19, x19, x7
    6fa0:	ldurb	w19, [x19, #-1]
    6fa4:	cmp	w19, w4, uxtb
    6fa8:	b.ne	7104 <deflateCopy@@Base+0x101c>  // b.any
    6fac:	ldrb	w19, [x7]
    6fb0:	ldrb	w20, [x13]
    6fb4:	cmp	w19, w20
    6fb8:	b.ne	7104 <deflateCopy@@Base+0x101c>  // b.any
    6fbc:	ldrb	w7, [x7, #1]
    6fc0:	ldrb	w19, [x13, #1]
    6fc4:	cmp	w7, w19
    6fc8:	b.ne	7104 <deflateCopy@@Base+0x101c>  // b.any
    6fcc:	mov	x7, xzr
    6fd0:	add	x6, x14, x6
    6fd4:	add	x19, x13, x7
    6fd8:	add	x20, x6, x7
    6fdc:	ldrb	w21, [x19, #3]
    6fe0:	ldurb	w22, [x20, #-2]
    6fe4:	cmp	w21, w22
    6fe8:	b.ne	7094 <deflateCopy@@Base+0xfac>  // b.any
    6fec:	ldrb	w19, [x19, #4]
    6ff0:	ldurb	w20, [x20, #-1]
    6ff4:	cmp	w19, w20
    6ff8:	b.ne	709c <deflateCopy@@Base+0xfb4>  // b.any
    6ffc:	add	x19, x13, x7
    7000:	ldrb	w20, [x19, #5]
    7004:	ldrb	w21, [x6, x7]
    7008:	cmp	w20, w21
    700c:	b.ne	70a8 <deflateCopy@@Base+0xfc0>  // b.any
    7010:	add	x20, x6, x7
    7014:	ldrb	w19, [x19, #6]
    7018:	ldrb	w21, [x20, #1]
    701c:	cmp	w19, w21
    7020:	b.ne	70b0 <deflateCopy@@Base+0xfc8>  // b.any
    7024:	add	x19, x13, x7
    7028:	ldrb	w21, [x19, #7]
    702c:	ldrb	w20, [x20, #2]
    7030:	cmp	w21, w20
    7034:	b.ne	70bc <deflateCopy@@Base+0xfd4>  // b.any
    7038:	add	x20, x6, x7
    703c:	ldrb	w19, [x19, #8]
    7040:	ldrb	w21, [x20, #3]
    7044:	cmp	w19, w21
    7048:	b.ne	70c4 <deflateCopy@@Base+0xfdc>  // b.any
    704c:	add	x19, x13, x7
    7050:	ldrb	w21, [x19, #9]
    7054:	ldrb	w20, [x20, #4]
    7058:	cmp	w21, w20
    705c:	b.ne	70d0 <deflateCopy@@Base+0xfe8>  // b.any
    7060:	add	x20, x7, #0x2
    7064:	cmp	x20, #0xf9
    7068:	add	x20, x7, #0x8
    706c:	b.hi	7088 <deflateCopy@@Base+0xfa0>  // b.pmore
    7070:	add	x7, x6, x7
    7074:	ldrb	w19, [x19, #10]
    7078:	ldrb	w7, [x7, #5]
    707c:	cmp	w19, w7
    7080:	mov	x7, x20
    7084:	b.eq	6fd4 <deflateCopy@@Base+0xeec>  // b.none
    7088:	add	x6, x13, x20
    708c:	add	x6, x6, #0x2
    7090:	b	70d4 <deflateCopy@@Base+0xfec>
    7094:	add	x6, x19, #0x3
    7098:	b	70d4 <deflateCopy@@Base+0xfec>
    709c:	add	x6, x13, x7
    70a0:	add	x6, x6, #0x4
    70a4:	b	70d4 <deflateCopy@@Base+0xfec>
    70a8:	add	x6, x19, #0x5
    70ac:	b	70d4 <deflateCopy@@Base+0xfec>
    70b0:	add	x6, x13, x7
    70b4:	add	x6, x6, #0x6
    70b8:	b	70d4 <deflateCopy@@Base+0xfec>
    70bc:	add	x6, x19, #0x7
    70c0:	b	70d4 <deflateCopy@@Base+0xfec>
    70c4:	add	x6, x13, x7
    70c8:	add	x6, x6, #0x8
    70cc:	b	70d4 <deflateCopy@@Base+0xfec>
    70d0:	add	x6, x19, #0x9
    70d4:	sub	x7, x15, x6
    70d8:	sub	x6, x2, w7, sxtw
    70dc:	cmp	w6, w12
    70e0:	b.le	7104 <deflateCopy@@Base+0x101c>
    70e4:	cmp	w6, w18
    70e8:	str	w1, [x0, #176]
    70ec:	b.ge	7130 <deflateCopy@@Base+0x1048>  // b.tcont
    70f0:	sub	x12, x3, x7, lsl #32
    70f4:	asr	x12, x12, #32
    70f8:	ldrb	w4, [x13, x12]
    70fc:	ldrb	w5, [x13, x6]
    7100:	mov	w12, w6
    7104:	and	x1, x1, x10
    7108:	ldrh	w1, [x9, x1, lsl #1]
    710c:	cmp	w16, w1
    7110:	b.cs	711c <deflateCopy@@Base+0x1034>  // b.hs, b.nlast
    7114:	subs	w17, w17, #0x1
    7118:	b.ne	6f84 <deflateCopy@@Base+0xe9c>  // b.any
    711c:	ldp	x20, x19, [sp, #16]
    7120:	cmp	w12, w11
    7124:	csel	w0, w11, w12, hi  // hi = pmore
    7128:	ldp	x22, x21, [sp], #32
    712c:	ret
    7130:	mov	w12, w6
    7134:	b	711c <deflateCopy@@Base+0x1034>

0000000000007138 <inflateBackInit_@@ZLIB_1.2.0>:
    7138:	stp	x29, x30, [sp, #-48]!
    713c:	stp	x22, x21, [sp, #16]
    7140:	stp	x20, x19, [sp, #32]
    7144:	mov	x29, sp
    7148:	cbz	x3, 71d8 <inflateBackInit_@@ZLIB_1.2.0+0xa0>
    714c:	mov	x21, x0
    7150:	cmp	w4, #0x70
    7154:	mov	w0, #0xfffffffa            	// #-6
    7158:	b.ne	71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>  // b.any
    715c:	ldrb	w8, [x3]
    7160:	cmp	w8, #0x31
    7164:	b.ne	71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>  // b.any
    7168:	and	w8, w1, #0xfffffff8
    716c:	mov	w19, w1
    7170:	cmp	w8, #0x8
    7174:	mov	w0, #0xfffffffe            	// #-2
    7178:	b.ne	71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>  // b.any
    717c:	cbz	x21, 71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    7180:	mov	x20, x2
    7184:	cbz	x2, 71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    7188:	ldr	x8, [x21, #64]
    718c:	str	xzr, [x21, #48]
    7190:	cbz	x8, 71ec <inflateBackInit_@@ZLIB_1.2.0+0xb4>
    7194:	ldr	x9, [x21, #72]
    7198:	cbz	x9, 7204 <inflateBackInit_@@ZLIB_1.2.0+0xcc>
    719c:	ldr	x0, [x21, #80]
    71a0:	mov	w1, #0x1                   	// #1
    71a4:	mov	w2, #0x1bf8                	// #7160
    71a8:	mov	w22, #0x1                   	// #1
    71ac:	blr	x8
    71b0:	cbz	x0, 7214 <inflateBackInit_@@ZLIB_1.2.0+0xdc>
    71b4:	mov	x8, x0
    71b8:	mov	w0, wzr
    71bc:	mov	w9, #0x8000                	// #32768
    71c0:	lsl	w10, w22, w19
    71c4:	str	x8, [x21, #56]
    71c8:	stp	xzr, x20, [x8, #64]
    71cc:	str	w9, [x8, #28]
    71d0:	stp	w19, w10, [x8, #56]
    71d4:	b	71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>
    71d8:	mov	w0, #0xfffffffa            	// #-6
    71dc:	ldp	x20, x19, [sp, #32]
    71e0:	ldp	x22, x21, [sp, #16]
    71e4:	ldp	x29, x30, [sp], #48
    71e8:	ret
    71ec:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    71f0:	add	x8, x8, #0x4b4
    71f4:	str	x8, [x21, #64]
    71f8:	str	xzr, [x21, #80]
    71fc:	ldr	x9, [x21, #72]
    7200:	cbnz	x9, 719c <inflateBackInit_@@ZLIB_1.2.0+0x64>
    7204:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    7208:	add	x9, x9, #0x4bc
    720c:	str	x9, [x21, #72]
    7210:	b	719c <inflateBackInit_@@ZLIB_1.2.0+0x64>
    7214:	mov	w0, #0xfffffffc            	// #-4
    7218:	b	71dc <inflateBackInit_@@ZLIB_1.2.0+0xa4>

000000000000721c <inflateBack@@ZLIB_1.2.0>:
    721c:	sub	sp, sp, #0xc0
    7220:	stp	x29, x30, [sp, #96]
    7224:	add	x29, sp, #0x50
    7228:	str	d8, [sp, #80]
    722c:	stp	x28, x27, [sp, #112]
    7230:	stp	x26, x25, [sp, #128]
    7234:	stp	x24, x23, [sp, #144]
    7238:	stp	x22, x21, [sp, #160]
    723c:	stp	x20, x19, [sp, #176]
    7240:	stur	x2, [x29, #-8]
    7244:	cbz	x0, 7288 <inflateBack@@ZLIB_1.2.0+0x6c>
    7248:	ldr	x28, [x0, #56]
    724c:	mov	x23, x0
    7250:	cbz	x28, 7288 <inflateBack@@ZLIB_1.2.0+0x6c>
    7254:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    7258:	ldr	d0, [x8, #3384]
    725c:	str	xzr, [x23, #48]
    7260:	str	wzr, [x28, #64]
    7264:	mov	x24, x1
    7268:	str	d0, [x28, #8]
    726c:	ldr	x8, [x23]
    7270:	stur	x3, [x29, #-32]
    7274:	str	x4, [sp, #40]
    7278:	str	x8, [x29, #8]
    727c:	cbz	x8, 7290 <inflateBack@@ZLIB_1.2.0+0x74>
    7280:	ldr	w20, [x23, #8]
    7284:	b	7294 <inflateBack@@ZLIB_1.2.0+0x78>
    7288:	mov	w0, #0xfffffffe            	// #-2
    728c:	b	811c <inflateBack@@ZLIB_1.2.0+0xf00>
    7290:	mov	w20, wzr
    7294:	add	x8, x28, #0x558
    7298:	str	x8, [sp, #32]
    729c:	add	x8, x28, #0x78
    72a0:	str	x8, [sp, #24]
    72a4:	add	x8, x28, #0x98
    72a8:	str	x8, [sp, #16]
    72ac:	add	x8, x28, #0x318
    72b0:	stur	x8, [x29, #-24]
    72b4:	add	x8, x28, #0x7c
    72b8:	str	x8, [sp, #8]
    72bc:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    72c0:	ldr	x25, [x28, #72]
    72c4:	ldr	w26, [x28, #60]
    72c8:	ldr	d8, [x8, #3392]
    72cc:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    72d0:	mov	x22, xzr
    72d4:	mov	w21, wzr
    72d8:	add	x19, x28, #0x90
    72dc:	add	x27, x27, #0xd72
    72e0:	mov	w8, #0x3f3f                	// #16191
    72e4:	stur	x19, [x29, #-16]
    72e8:	mov	w9, #0xffffc0c1            	// #-16191
    72ec:	add	w8, w8, w9
    72f0:	cmp	w8, #0x12
    72f4:	b.hi	8140 <inflateBack@@ZLIB_1.2.0+0xf24>  // b.pmore
    72f8:	adrp	x11, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    72fc:	add	x11, x11, #0xd48
    7300:	adr	x9, 7314 <inflateBack@@ZLIB_1.2.0+0xf8>
    7304:	ldrh	w10, [x11, x8, lsl #1]
    7308:	add	x9, x9, x10, lsl #2
    730c:	mov	w0, #0xfffffffd            	// #-3
    7310:	br	x9
    7314:	ldr	w8, [x28, #12]
    7318:	cbz	w8, 73ec <inflateBack@@ZLIB_1.2.0+0x1d0>
    731c:	and	w8, w21, #0x7
    7320:	and	w21, w21, #0xfffffff8
    7324:	lsr	x22, x22, x8
    7328:	mov	w8, #0x3f50                	// #16208
    732c:	b	767c <inflateBack@@ZLIB_1.2.0+0x460>
    7330:	and	w8, w21, #0x7
    7334:	and	w21, w21, #0xfffffff8
    7338:	cmp	w21, #0x1f
    733c:	lsr	x22, x22, x8
    7340:	b.hi	7480 <inflateBack@@ZLIB_1.2.0+0x264>  // b.pmore
    7344:	mov	w19, w21
    7348:	b	7378 <inflateBack@@ZLIB_1.2.0+0x15c>
    734c:	ldr	x8, [x29, #8]
    7350:	add	x21, x19, #0x8
    7354:	sub	w20, w20, #0x1
    7358:	cmp	x19, #0x18
    735c:	add	x9, x8, #0x1
    7360:	str	x9, [x29, #8]
    7364:	ldrb	w8, [x8]
    7368:	lsl	x8, x8, x19
    736c:	add	x22, x8, x22
    7370:	mov	x19, x21
    7374:	b.cs	747c <inflateBack@@ZLIB_1.2.0+0x260>  // b.hs, b.nlast
    7378:	cbnz	w20, 734c <inflateBack@@ZLIB_1.2.0+0x130>
    737c:	ldur	x0, [x29, #-8]
    7380:	add	x1, x29, #0x8
    7384:	blr	x24
    7388:	mov	w20, w0
    738c:	cbnz	w0, 734c <inflateBack@@ZLIB_1.2.0+0x130>
    7390:	b	8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    7394:	cmp	w21, #0xd
    7398:	b.hi	7548 <inflateBack@@ZLIB_1.2.0+0x32c>  // b.pmore
    739c:	mov	w19, w21
    73a0:	b	73d0 <inflateBack@@ZLIB_1.2.0+0x1b4>
    73a4:	ldr	x8, [x29, #8]
    73a8:	add	x21, x19, #0x8
    73ac:	sub	w20, w20, #0x1
    73b0:	cmp	x19, #0x6
    73b4:	add	x9, x8, #0x1
    73b8:	str	x9, [x29, #8]
    73bc:	ldrb	w8, [x8]
    73c0:	lsl	x8, x8, x19
    73c4:	add	x22, x8, x22
    73c8:	mov	x19, x21
    73cc:	b.cs	7544 <inflateBack@@ZLIB_1.2.0+0x328>  // b.hs, b.nlast
    73d0:	cbnz	w20, 73a4 <inflateBack@@ZLIB_1.2.0+0x188>
    73d4:	ldur	x0, [x29, #-8]
    73d8:	add	x1, x29, #0x8
    73dc:	blr	x24
    73e0:	mov	w20, w0
    73e4:	cbnz	w0, 73a4 <inflateBack@@ZLIB_1.2.0+0x188>
    73e8:	b	8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    73ec:	cmp	w21, #0x2
    73f0:	b.hi	7430 <inflateBack@@ZLIB_1.2.0+0x214>  // b.pmore
    73f4:	cbnz	w20, 740c <inflateBack@@ZLIB_1.2.0+0x1f0>
    73f8:	ldur	x0, [x29, #-8]
    73fc:	add	x1, x29, #0x8
    7400:	blr	x24
    7404:	mov	w20, w0
    7408:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    740c:	ldr	x8, [x29, #8]
    7410:	sub	w20, w20, #0x1
    7414:	add	x9, x8, #0x1
    7418:	str	x9, [x29, #8]
    741c:	ldrb	w8, [x8]
    7420:	mov	w9, w21
    7424:	add	w21, w21, #0x8
    7428:	lsl	x8, x8, x9
    742c:	add	x22, x8, x22
    7430:	adrp	x11, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    7434:	and	w8, w22, #0x1
    7438:	ubfx	w9, w22, #1, #2
    743c:	add	x11, x11, #0xd6e
    7440:	str	w8, [x28, #12]
    7444:	adr	x10, 7458 <inflateBack@@ZLIB_1.2.0+0x23c>
    7448:	ldrb	w8, [x11, x9]
    744c:	add	x10, x10, x8, lsl #2
    7450:	mov	w8, #0x3f41                	// #16193
    7454:	br	x10
    7458:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    745c:	add	x8, x8, #0xd98
    7460:	str	x8, [x28, #104]
    7464:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7468:	add	x8, x8, #0x598
    746c:	str	x8, [x28, #112]
    7470:	str	d8, [x28, #120]
    7474:	mov	w8, #0x3f48                	// #16200
    7478:	b	7710 <inflateBack@@ZLIB_1.2.0+0x4f4>
    747c:	ldur	x19, [x29, #-16]
    7480:	lsr	x8, x22, #16
    7484:	eor	x8, x8, #0xffff
    7488:	cmp	x8, w22, uxth
    748c:	b.ne	7538 <inflateBack@@ZLIB_1.2.0+0x31c>  // b.any
    7490:	ands	w19, w22, #0xffff
    7494:	str	w19, [x28, #92]
    7498:	b.eq	7688 <inflateBack@@ZLIB_1.2.0+0x46c>  // b.none
    749c:	ldur	x21, [x29, #-32]
    74a0:	ldr	x22, [sp, #40]
    74a4:	b	74f8 <inflateBack@@ZLIB_1.2.0+0x2dc>
    74a8:	cmp	w19, w20
    74ac:	ldr	x1, [x29, #8]
    74b0:	csel	w8, w20, w19, hi  // hi = pmore
    74b4:	cmp	w8, w26
    74b8:	csel	w27, w26, w8, hi  // hi = pmore
    74bc:	mov	x0, x25
    74c0:	mov	x2, x27
    74c4:	bl	2330 <memcpy@plt>
    74c8:	ldr	x8, [x29, #8]
    74cc:	sub	w20, w20, w27
    74d0:	sub	w26, w26, w27
    74d4:	add	x25, x25, x27
    74d8:	add	x8, x8, x27
    74dc:	str	x8, [x29, #8]
    74e0:	ldr	w8, [x28, #92]
    74e4:	subs	w19, w8, w27
    74e8:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    74ec:	add	x27, x27, #0xd72
    74f0:	str	w19, [x28, #92]
    74f4:	b.eq	7688 <inflateBack@@ZLIB_1.2.0+0x46c>  // b.none
    74f8:	cbnz	w20, 7510 <inflateBack@@ZLIB_1.2.0+0x2f4>
    74fc:	ldur	x0, [x29, #-8]
    7500:	add	x1, x29, #0x8
    7504:	blr	x24
    7508:	mov	w20, w0
    750c:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    7510:	cbnz	w26, 74a8 <inflateBack@@ZLIB_1.2.0+0x28c>
    7514:	ldr	w26, [x28, #60]
    7518:	ldr	x25, [x28, #72]
    751c:	mov	x0, x22
    7520:	mov	w2, w26
    7524:	mov	x1, x25
    7528:	str	w26, [x28, #64]
    752c:	blr	x21
    7530:	cbz	w0, 74a8 <inflateBack@@ZLIB_1.2.0+0x28c>
    7534:	b	810c <inflateBack@@ZLIB_1.2.0+0xef0>
    7538:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    753c:	add	x8, x8, #0x62b
    7540:	b	7674 <inflateBack@@ZLIB_1.2.0+0x458>
    7544:	ldur	x19, [x29, #-16]
    7548:	and	w10, w22, #0x1f
    754c:	ubfx	w9, w22, #5, #5
    7550:	ubfx	w8, w22, #10, #4
    7554:	lsr	x22, x22, #14
    7558:	add	w11, w10, #0x101
    755c:	add	w12, w9, #0x1
    7560:	add	w8, w8, #0x4
    7564:	cmp	w10, #0x1d
    7568:	sub	w21, w21, #0xe
    756c:	stp	w11, w12, [x28, #132]
    7570:	str	w8, [x28, #128]
    7574:	b.hi	7608 <inflateBack@@ZLIB_1.2.0+0x3ec>  // b.pmore
    7578:	cmp	w9, #0x1e
    757c:	b.cs	7608 <inflateBack@@ZLIB_1.2.0+0x3ec>  // b.hs, b.nlast
    7580:	mov	w9, wzr
    7584:	str	wzr, [x28, #140]
    7588:	b	75dc <inflateBack@@ZLIB_1.2.0+0x3c0>
    758c:	ldr	x10, [x29, #8]
    7590:	sub	w20, w20, #0x1
    7594:	add	x11, x10, #0x1
    7598:	str	x11, [x29, #8]
    759c:	ldrb	w10, [x10]
    75a0:	mov	w11, w21
    75a4:	add	w21, w21, #0x8
    75a8:	lsl	x10, x10, x11
    75ac:	add	x22, x10, x22
    75b0:	add	w10, w9, #0x1
    75b4:	ldrh	w9, [x27, w9, uxtw #1]
    75b8:	and	w11, w22, #0x7
    75bc:	lsr	x22, x22, #3
    75c0:	str	w10, [x28, #140]
    75c4:	add	x9, x28, x9, lsl #1
    75c8:	cmp	w10, w8
    75cc:	strh	w11, [x9, #152]
    75d0:	sub	w21, w21, #0x3
    75d4:	mov	w9, w10
    75d8:	b.cs	7614 <inflateBack@@ZLIB_1.2.0+0x3f8>  // b.hs, b.nlast
    75dc:	cmp	w21, #0x2
    75e0:	b.hi	75b0 <inflateBack@@ZLIB_1.2.0+0x394>  // b.pmore
    75e4:	cbnz	w20, 758c <inflateBack@@ZLIB_1.2.0+0x370>
    75e8:	ldur	x0, [x29, #-8]
    75ec:	add	x1, x29, #0x8
    75f0:	blr	x24
    75f4:	mov	w20, w0
    75f8:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    75fc:	ldr	w9, [x28, #140]
    7600:	ldr	w8, [x28, #128]
    7604:	b	758c <inflateBack@@ZLIB_1.2.0+0x370>
    7608:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    760c:	add	x8, x8, #0x648
    7610:	b	7674 <inflateBack@@ZLIB_1.2.0+0x458>
    7614:	cmp	w10, #0x12
    7618:	b.hi	763c <inflateBack@@ZLIB_1.2.0+0x420>  // b.pmore
    761c:	mov	w8, w10
    7620:	ldrh	w9, [x27, x8, lsl #1]
    7624:	cmp	x8, #0x12
    7628:	add	x8, x8, #0x1
    762c:	add	x9, x28, x9, lsl #1
    7630:	strh	wzr, [x9, #152]
    7634:	b.cc	7620 <inflateBack@@ZLIB_1.2.0+0x404>  // b.lo, b.ul, b.last
    7638:	str	w8, [x28, #140]
    763c:	ldp	x4, x8, [sp, #24]
    7640:	ldr	x1, [sp, #16]
    7644:	ldur	x5, [x29, #-24]
    7648:	mov	w2, #0x13                  	// #19
    764c:	str	x8, [x28, #144]
    7650:	str	x8, [x28, #104]
    7654:	mov	w8, #0x7                   	// #7
    7658:	mov	w0, wzr
    765c:	mov	x3, x19
    7660:	str	w8, [x28, #120]
    7664:	bl	b084 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    7668:	cbz	w0, 7694 <inflateBack@@ZLIB_1.2.0+0x478>
    766c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7670:	add	x8, x8, #0x66c
    7674:	str	x8, [x23, #48]
    7678:	mov	w8, #0x3f51                	// #16209
    767c:	str	w8, [x28, #8]
    7680:	ldr	w8, [x28, #8]
    7684:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    7688:	mov	x22, xzr
    768c:	mov	w21, wzr
    7690:	b	7ce4 <inflateBack@@ZLIB_1.2.0+0xac8>
    7694:	ldp	w2, w8, [x28, #132]
    7698:	str	wzr, [x28, #140]
    769c:	cmn	w8, w2
    76a0:	b.ne	7724 <inflateBack@@ZLIB_1.2.0+0x508>  // b.any
    76a4:	ldur	x5, [x29, #-24]
    76a8:	ldr	w8, [x28, #8]
    76ac:	mov	w9, #0x3f51                	// #16209
    76b0:	cmp	w8, w9
    76b4:	b.eq	7680 <inflateBack@@ZLIB_1.2.0+0x464>  // b.none
    76b8:	ldrh	w8, [x28, #664]
    76bc:	cbz	w8, 7a80 <inflateBack@@ZLIB_1.2.0+0x864>
    76c0:	ldp	x4, x8, [sp, #24]
    76c4:	ldr	x1, [sp, #16]
    76c8:	mov	w0, #0x1                   	// #1
    76cc:	mov	x3, x19
    76d0:	str	x8, [x28, #144]
    76d4:	str	x8, [x28, #104]
    76d8:	mov	w8, #0x9                   	// #9
    76dc:	str	w8, [x28, #120]
    76e0:	mov	x27, x5
    76e4:	bl	b084 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    76e8:	cbz	w0, 7a8c <inflateBack@@ZLIB_1.2.0+0x870>
    76ec:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    76f0:	add	x8, x8, #0x6c4
    76f4:	b	7fe4 <inflateBack@@ZLIB_1.2.0+0xdc8>
    76f8:	mov	w8, #0x3f44                	// #16196
    76fc:	b	7710 <inflateBack@@ZLIB_1.2.0+0x4f4>
    7700:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7704:	add	x8, x8, #0x618
    7708:	str	x8, [x23, #48]
    770c:	mov	w8, #0x3f51                	// #16209
    7710:	str	w8, [x28, #8]
    7714:	lsr	x22, x22, #3
    7718:	sub	w21, w21, #0x3
    771c:	mov	w8, w8
    7720:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    7724:	str	x23, [sp]
    7728:	b	7760 <inflateBack@@ZLIB_1.2.0+0x544>
    772c:	ldr	w9, [x28, #140]
    7730:	lsr	x22, x22, x27
    7734:	sub	w21, w21, w27
    7738:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    773c:	add	w11, w9, #0x1
    7740:	add	x9, x28, x9, lsl #1
    7744:	str	w11, [x28, #140]
    7748:	strh	w8, [x9, #152]
    774c:	ldp	w2, w8, [x28, #132]
    7750:	add	x27, x27, #0xd72
    7754:	add	w9, w8, w2
    7758:	cmp	w11, w9
    775c:	b.cs	76a8 <inflateBack@@ZLIB_1.2.0+0x48c>  // b.hs, b.nlast
    7760:	ldr	w9, [x28, #120]
    7764:	ldr	x8, [x28, #104]
    7768:	mov	w10, #0xffffffff            	// #-1
    776c:	lsl	w10, w10, w9
    7770:	bic	w10, w22, w10
    7774:	add	x10, x8, w10, uxtw #2
    7778:	ldrb	w27, [x10, #1]
    777c:	cmp	w21, w27
    7780:	b.cs	77ec <inflateBack@@ZLIB_1.2.0+0x5d0>  // b.hs, b.nlast
    7784:	mov	w21, w21
    7788:	b	77c8 <inflateBack@@ZLIB_1.2.0+0x5ac>
    778c:	ldr	x10, [x29, #8]
    7790:	sub	w20, w20, #0x1
    7794:	add	x11, x10, #0x1
    7798:	str	x11, [x29, #8]
    779c:	ldrb	w10, [x10]
    77a0:	lsl	x10, x10, x21
    77a4:	add	x22, x10, x22
    77a8:	mov	w10, #0xffffffff            	// #-1
    77ac:	lsl	w10, w10, w9
    77b0:	bic	w10, w22, w10
    77b4:	add	x10, x8, w10, uxtw #2
    77b8:	ldrb	w27, [x10, #1]
    77bc:	add	x21, x21, #0x8
    77c0:	cmp	x21, x27
    77c4:	b.cs	77ec <inflateBack@@ZLIB_1.2.0+0x5d0>  // b.hs, b.nlast
    77c8:	cbnz	w20, 778c <inflateBack@@ZLIB_1.2.0+0x570>
    77cc:	ldur	x0, [x29, #-8]
    77d0:	add	x1, x29, #0x8
    77d4:	blr	x24
    77d8:	mov	w20, w0
    77dc:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    77e0:	ldr	x8, [x28, #104]
    77e4:	ldr	w9, [x28, #120]
    77e8:	b	778c <inflateBack@@ZLIB_1.2.0+0x570>
    77ec:	add	x8, x10, #0x2
    77f0:	ldrh	w8, [x8]
    77f4:	ldur	x5, [x29, #-24]
    77f8:	cmp	w8, #0xf
    77fc:	b.ls	772c <inflateBack@@ZLIB_1.2.0+0x510>  // b.plast
    7800:	cmp	w8, #0x10
    7804:	b.eq	787c <inflateBack@@ZLIB_1.2.0+0x660>  // b.none
    7808:	cmp	w8, #0x11
    780c:	b.ne	78e8 <inflateBack@@ZLIB_1.2.0+0x6cc>  // b.any
    7810:	add	w19, w27, #0x3
    7814:	cmp	w21, w19
    7818:	b.cs	7958 <inflateBack@@ZLIB_1.2.0+0x73c>  // b.hs, b.nlast
    781c:	mvn	w8, w21
    7820:	add	w8, w19, w8
    7824:	add	w8, w8, #0x8
    7828:	and	w8, w8, #0xfffffff8
    782c:	mov	w23, w21
    7830:	add	w21, w8, w21
    7834:	b	7860 <inflateBack@@ZLIB_1.2.0+0x644>
    7838:	ldr	x8, [x29, #8]
    783c:	sub	w20, w20, #0x1
    7840:	add	x9, x8, #0x1
    7844:	str	x9, [x29, #8]
    7848:	ldrb	w8, [x8]
    784c:	lsl	x8, x8, x23
    7850:	add	x23, x23, #0x8
    7854:	cmp	x23, x19
    7858:	add	x22, x8, x22
    785c:	b.cs	7954 <inflateBack@@ZLIB_1.2.0+0x738>  // b.hs, b.nlast
    7860:	cbnz	w20, 7838 <inflateBack@@ZLIB_1.2.0+0x61c>
    7864:	ldur	x0, [x29, #-8]
    7868:	add	x1, x29, #0x8
    786c:	blr	x24
    7870:	mov	w20, w0
    7874:	cbnz	w0, 7838 <inflateBack@@ZLIB_1.2.0+0x61c>
    7878:	b	8104 <inflateBack@@ZLIB_1.2.0+0xee8>
    787c:	add	w19, w27, #0x2
    7880:	cmp	w21, w19
    7884:	b.cs	7980 <inflateBack@@ZLIB_1.2.0+0x764>  // b.hs, b.nlast
    7888:	mvn	w8, w21
    788c:	add	w8, w19, w8
    7890:	add	w8, w8, #0x8
    7894:	and	w8, w8, #0xfffffff8
    7898:	mov	w23, w21
    789c:	add	w21, w8, w21
    78a0:	b	78cc <inflateBack@@ZLIB_1.2.0+0x6b0>
    78a4:	ldr	x8, [x29, #8]
    78a8:	sub	w20, w20, #0x1
    78ac:	add	x9, x8, #0x1
    78b0:	str	x9, [x29, #8]
    78b4:	ldrb	w8, [x8]
    78b8:	lsl	x8, x8, x23
    78bc:	add	x23, x23, #0x8
    78c0:	cmp	x23, x19
    78c4:	add	x22, x8, x22
    78c8:	b.cs	797c <inflateBack@@ZLIB_1.2.0+0x760>  // b.hs, b.nlast
    78cc:	cbnz	w20, 78a4 <inflateBack@@ZLIB_1.2.0+0x688>
    78d0:	ldur	x0, [x29, #-8]
    78d4:	add	x1, x29, #0x8
    78d8:	blr	x24
    78dc:	mov	w20, w0
    78e0:	cbnz	w0, 78a4 <inflateBack@@ZLIB_1.2.0+0x688>
    78e4:	b	8104 <inflateBack@@ZLIB_1.2.0+0xee8>
    78e8:	add	w19, w27, #0x7
    78ec:	cmp	w21, w19
    78f0:	b.cs	79b8 <inflateBack@@ZLIB_1.2.0+0x79c>  // b.hs, b.nlast
    78f4:	mvn	w8, w21
    78f8:	add	w8, w19, w8
    78fc:	add	w8, w8, #0x8
    7900:	and	w8, w8, #0xfffffff8
    7904:	mov	w23, w21
    7908:	add	w21, w8, w21
    790c:	b	7938 <inflateBack@@ZLIB_1.2.0+0x71c>
    7910:	ldr	x8, [x29, #8]
    7914:	sub	w20, w20, #0x1
    7918:	add	x9, x8, #0x1
    791c:	str	x9, [x29, #8]
    7920:	ldrb	w8, [x8]
    7924:	lsl	x8, x8, x23
    7928:	add	x23, x23, #0x8
    792c:	cmp	x23, x19
    7930:	add	x22, x8, x22
    7934:	b.cs	79b4 <inflateBack@@ZLIB_1.2.0+0x798>  // b.hs, b.nlast
    7938:	cbnz	w20, 7910 <inflateBack@@ZLIB_1.2.0+0x6f4>
    793c:	ldur	x0, [x29, #-8]
    7940:	add	x1, x29, #0x8
    7944:	blr	x24
    7948:	mov	w20, w0
    794c:	cbnz	w0, 7910 <inflateBack@@ZLIB_1.2.0+0x6f4>
    7950:	b	8104 <inflateBack@@ZLIB_1.2.0+0xee8>
    7954:	ldr	x23, [sp]
    7958:	ldur	x19, [x29, #-16]
    795c:	lsr	x9, x22, x27
    7960:	sub	w11, w21, w27
    7964:	and	w10, w9, #0x7
    7968:	mov	w8, wzr
    796c:	lsr	x22, x9, #3
    7970:	add	w10, w10, #0x3
    7974:	sub	w21, w11, #0x3
    7978:	b	79d8 <inflateBack@@ZLIB_1.2.0+0x7bc>
    797c:	ldr	x23, [sp]
    7980:	ldr	w8, [x28, #140]
    7984:	ldur	x19, [x29, #-16]
    7988:	lsr	x22, x22, x27
    798c:	sub	w21, w21, w27
    7990:	cbz	w8, 80f8 <inflateBack@@ZLIB_1.2.0+0xedc>
    7994:	sub	w8, w8, #0x1
    7998:	add	x8, x28, w8, uxtw #1
    799c:	ldrh	w8, [x8, #152]
    79a0:	and	w9, w22, #0x3
    79a4:	add	w10, w9, #0x3
    79a8:	lsr	x22, x22, #2
    79ac:	sub	w21, w21, #0x2
    79b0:	b	79d8 <inflateBack@@ZLIB_1.2.0+0x7bc>
    79b4:	ldr	x23, [sp]
    79b8:	ldur	x19, [x29, #-16]
    79bc:	lsr	x9, x22, x27
    79c0:	sub	w11, w21, w27
    79c4:	and	w10, w9, #0x7f
    79c8:	mov	w8, wzr
    79cc:	lsr	x22, x9, #7
    79d0:	add	w10, w10, #0xb
    79d4:	sub	w21, w11, #0x7
    79d8:	ldp	w9, w13, [x28, #136]
    79dc:	ldr	w2, [x28, #132]
    79e0:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    79e4:	add	x27, x27, #0xd72
    79e8:	add	w11, w13, w10
    79ec:	add	w9, w9, w2
    79f0:	cmp	w11, w9
    79f4:	b.hi	7acc <inflateBack@@ZLIB_1.2.0+0x8b0>  // b.pmore
    79f8:	cmp	w10, #0xf
    79fc:	b.ls	7a10 <inflateBack@@ZLIB_1.2.0+0x7f4>  // b.plast
    7a00:	sub	w11, w10, #0x1
    7a04:	mvn	w12, w13
    7a08:	cmp	w11, w12
    7a0c:	b.ls	7a48 <inflateBack@@ZLIB_1.2.0+0x82c>  // b.plast
    7a10:	mov	w11, w13
    7a14:	mov	w12, w10
    7a18:	mov	w10, w11
    7a1c:	add	w11, w10, #0x1
    7a20:	add	x10, x28, w10, uxtw #1
    7a24:	subs	w12, w12, #0x1
    7a28:	strh	w8, [x10, #152]
    7a2c:	mov	w10, w11
    7a30:	b.ne	7a1c <inflateBack@@ZLIB_1.2.0+0x800>  // b.any
    7a34:	ldur	x5, [x29, #-24]
    7a38:	str	w11, [x28, #140]
    7a3c:	cmp	w11, w9
    7a40:	b.cc	7760 <inflateBack@@ZLIB_1.2.0+0x544>  // b.lo, b.ul, b.last
    7a44:	b	76a8 <inflateBack@@ZLIB_1.2.0+0x48c>
    7a48:	and	w14, w10, #0xf0
    7a4c:	and	w12, w10, #0xf
    7a50:	add	w11, w13, w14
    7a54:	dup	v0.8h, w8
    7a58:	mov	w15, w14
    7a5c:	add	x16, x28, w13, uxtw #1
    7a60:	subs	w15, w15, #0x10
    7a64:	add	w13, w13, #0x10
    7a68:	stur	q0, [x16, #152]
    7a6c:	stur	q0, [x16, #168]
    7a70:	b.ne	7a5c <inflateBack@@ZLIB_1.2.0+0x840>  // b.any
    7a74:	cmp	w10, w14
    7a78:	b.ne	7a18 <inflateBack@@ZLIB_1.2.0+0x7fc>  // b.any
    7a7c:	b	7a34 <inflateBack@@ZLIB_1.2.0+0x818>
    7a80:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7a84:	add	x8, x8, #0x69f
    7a88:	b	7674 <inflateBack@@ZLIB_1.2.0+0x458>
    7a8c:	ldr	x8, [x28, #144]
    7a90:	ldp	w9, w2, [x28, #132]
    7a94:	ldr	x4, [sp, #8]
    7a98:	mov	w10, #0x6                   	// #6
    7a9c:	str	x8, [x28, #112]
    7aa0:	add	x8, x28, x9, lsl #1
    7aa4:	add	x1, x8, #0x98
    7aa8:	mov	w0, #0x2                   	// #2
    7aac:	mov	x3, x19
    7ab0:	mov	x5, x27
    7ab4:	str	w10, [x28, #124]
    7ab8:	bl	b084 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    7abc:	cbz	w0, 7ad8 <inflateBack@@ZLIB_1.2.0+0x8bc>
    7ac0:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7ac4:	add	x8, x8, #0x6e0
    7ac8:	b	7fe4 <inflateBack@@ZLIB_1.2.0+0xdc8>
    7acc:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7ad0:	add	x8, x8, #0x685
    7ad4:	b	7674 <inflateBack@@ZLIB_1.2.0+0x458>
    7ad8:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    7adc:	mov	w8, #0x3f48                	// #16200
    7ae0:	add	x27, x27, #0xd72
    7ae4:	str	w8, [x28, #8]
    7ae8:	cmp	w26, #0x102
    7aec:	b.cc	7b54 <inflateBack@@ZLIB_1.2.0+0x938>  // b.lo, b.ul, b.last
    7af0:	cmp	w20, #0x5
    7af4:	b.ls	7b54 <inflateBack@@ZLIB_1.2.0+0x938>  // b.plast
    7af8:	str	x25, [x23, #24]
    7afc:	str	w26, [x23, #32]
    7b00:	ldr	x8, [x29, #8]
    7b04:	str	w20, [x23, #8]
    7b08:	str	x8, [x23]
    7b0c:	ldp	w1, w8, [x28, #60]
    7b10:	str	x22, [x28, #80]
    7b14:	str	w21, [x28, #88]
    7b18:	cmp	w8, w1
    7b1c:	b.cs	7b28 <inflateBack@@ZLIB_1.2.0+0x90c>  // b.hs, b.nlast
    7b20:	sub	w8, w1, w26
    7b24:	str	w8, [x28, #64]
    7b28:	mov	x0, x23
    7b2c:	bl	81c4 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    7b30:	ldr	x8, [x23]
    7b34:	ldr	x25, [x23, #24]
    7b38:	ldr	w26, [x23, #32]
    7b3c:	str	x8, [x29, #8]
    7b40:	ldr	w20, [x23, #8]
    7b44:	ldr	x22, [x28, #80]
    7b48:	ldr	w21, [x28, #88]
    7b4c:	ldr	w8, [x28, #8]
    7b50:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    7b54:	ldr	w9, [x28, #120]
    7b58:	ldr	x8, [x28, #104]
    7b5c:	mov	w19, #0xffffffff            	// #-1
    7b60:	lsl	w10, w19, w9
    7b64:	bic	w10, w22, w10
    7b68:	add	x10, x8, w10, uxtw #2
    7b6c:	ldrb	w27, [x10, #1]
    7b70:	cmp	w21, w27
    7b74:	b.cs	7bdc <inflateBack@@ZLIB_1.2.0+0x9c0>  // b.hs, b.nlast
    7b78:	mov	w21, w21
    7b7c:	b	7bb8 <inflateBack@@ZLIB_1.2.0+0x99c>
    7b80:	ldr	x10, [x29, #8]
    7b84:	sub	w20, w20, #0x1
    7b88:	add	x11, x10, #0x1
    7b8c:	str	x11, [x29, #8]
    7b90:	ldrb	w10, [x10]
    7b94:	lsl	x10, x10, x21
    7b98:	add	x22, x10, x22
    7b9c:	lsl	w10, w19, w9
    7ba0:	bic	w10, w22, w10
    7ba4:	add	x10, x8, w10, uxtw #2
    7ba8:	ldrb	w27, [x10, #1]
    7bac:	add	x21, x21, #0x8
    7bb0:	cmp	x21, x27
    7bb4:	b.cs	7bdc <inflateBack@@ZLIB_1.2.0+0x9c0>  // b.hs, b.nlast
    7bb8:	cbnz	w20, 7b80 <inflateBack@@ZLIB_1.2.0+0x964>
    7bbc:	ldur	x0, [x29, #-8]
    7bc0:	add	x1, x29, #0x8
    7bc4:	blr	x24
    7bc8:	mov	w20, w0
    7bcc:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    7bd0:	ldr	x8, [x28, #104]
    7bd4:	ldr	w9, [x28, #120]
    7bd8:	b	7b80 <inflateBack@@ZLIB_1.2.0+0x964>
    7bdc:	add	x11, x10, #0x2
    7be0:	ldrb	w9, [x10]
    7be4:	ldrh	w19, [x11]
    7be8:	cbz	w9, 7cac <inflateBack@@ZLIB_1.2.0+0xa90>
    7bec:	and	w10, w9, #0xf0
    7bf0:	cbnz	w10, 7cac <inflateBack@@ZLIB_1.2.0+0xa90>
    7bf4:	add	w9, w27, w9
    7bf8:	mov	w10, #0xffffffff            	// #-1
    7bfc:	lsl	w11, w10, w9
    7c00:	bic	w9, w22, w11
    7c04:	lsr	w9, w9, w27
    7c08:	add	w9, w9, w19
    7c0c:	add	x10, x8, w9, uxtw #2
    7c10:	ldrb	w10, [x10, #1]
    7c14:	add	w12, w27, w10
    7c18:	cmp	w12, w21
    7c1c:	b.ls	7c94 <inflateBack@@ZLIB_1.2.0+0xa78>  // b.plast
    7c20:	str	x23, [sp]
    7c24:	mvn	w23, w11
    7c28:	b	7c6c <inflateBack@@ZLIB_1.2.0+0xa50>
    7c2c:	ldr	x9, [x29, #8]
    7c30:	sub	w20, w20, #0x1
    7c34:	add	x10, x9, #0x1
    7c38:	str	x10, [x29, #8]
    7c3c:	ldrb	w9, [x9]
    7c40:	lsl	x9, x9, x21
    7c44:	add	x22, x9, x22
    7c48:	and	w9, w22, w23
    7c4c:	lsr	w9, w9, w27
    7c50:	add	w9, w9, w19
    7c54:	add	x10, x8, w9, uxtw #2
    7c58:	ldrb	w10, [x10, #1]
    7c5c:	add	w21, w21, #0x8
    7c60:	add	w11, w27, w10
    7c64:	cmp	w11, w21
    7c68:	b.ls	7c8c <inflateBack@@ZLIB_1.2.0+0xa70>  // b.plast
    7c6c:	cbnz	w20, 7c2c <inflateBack@@ZLIB_1.2.0+0xa10>
    7c70:	ldur	x0, [x29, #-8]
    7c74:	add	x1, x29, #0x8
    7c78:	blr	x24
    7c7c:	mov	w20, w0
    7c80:	cbz	w0, 8104 <inflateBack@@ZLIB_1.2.0+0xee8>
    7c84:	ldr	x8, [x28, #104]
    7c88:	b	7c2c <inflateBack@@ZLIB_1.2.0+0xa10>
    7c8c:	ldr	x23, [sp]
    7c90:	mov	w9, w9
    7c94:	add	x8, x8, x9, lsl #2
    7c98:	ldrh	w19, [x8, #2]
    7c9c:	ldrb	w9, [x8]
    7ca0:	lsr	x22, x22, x27
    7ca4:	sub	w21, w21, w27
    7ca8:	mov	w27, w10
    7cac:	lsr	x22, x22, x27
    7cb0:	sub	w21, w21, w27
    7cb4:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    7cb8:	add	x27, x27, #0xd72
    7cbc:	str	w19, [x28, #92]
    7cc0:	cbz	w9, 7d34 <inflateBack@@ZLIB_1.2.0+0xb18>
    7cc4:	tbnz	w9, #5, 7ce4 <inflateBack@@ZLIB_1.2.0+0xac8>
    7cc8:	tbnz	w9, #6, 7d70 <inflateBack@@ZLIB_1.2.0+0xb54>
    7ccc:	ands	w8, w9, #0xf
    7cd0:	str	w8, [x28, #100]
    7cd4:	b.eq	7d90 <inflateBack@@ZLIB_1.2.0+0xb74>  // b.none
    7cd8:	cmp	w21, w8
    7cdc:	b.cc	7d18 <inflateBack@@ZLIB_1.2.0+0xafc>  // b.lo, b.ul, b.last
    7ce0:	b	7d9c <inflateBack@@ZLIB_1.2.0+0xb80>
    7ce4:	mov	w8, #0x3f3f                	// #16191
    7ce8:	b	7d80 <inflateBack@@ZLIB_1.2.0+0xb64>
    7cec:	ldr	w8, [x28, #100]
    7cf0:	ldr	x9, [x29, #8]
    7cf4:	sub	w20, w20, #0x1
    7cf8:	add	x10, x9, #0x1
    7cfc:	str	x10, [x29, #8]
    7d00:	ldrb	w9, [x9]
    7d04:	lsl	x9, x9, x21
    7d08:	add	w21, w21, #0x8
    7d0c:	cmp	w21, w8
    7d10:	add	x22, x9, x22
    7d14:	b.cs	7d98 <inflateBack@@ZLIB_1.2.0+0xb7c>  // b.hs, b.nlast
    7d18:	cbnz	w20, 7cf0 <inflateBack@@ZLIB_1.2.0+0xad4>
    7d1c:	ldur	x0, [x29, #-8]
    7d20:	add	x1, x29, #0x8
    7d24:	blr	x24
    7d28:	mov	w20, w0
    7d2c:	cbnz	w0, 7cec <inflateBack@@ZLIB_1.2.0+0xad0>
    7d30:	b	8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    7d34:	cbnz	w26, 7d60 <inflateBack@@ZLIB_1.2.0+0xb44>
    7d38:	ldr	w26, [x28, #60]
    7d3c:	ldr	x25, [x28, #72]
    7d40:	ldr	x0, [sp, #40]
    7d44:	ldur	x8, [x29, #-32]
    7d48:	mov	w2, w26
    7d4c:	mov	x1, x25
    7d50:	str	w26, [x28, #64]
    7d54:	blr	x8
    7d58:	cbnz	w0, 810c <inflateBack@@ZLIB_1.2.0+0xef0>
    7d5c:	ldr	w19, [x28, #92]
    7d60:	strb	w19, [x25], #1
    7d64:	sub	w26, w26, #0x1
    7d68:	mov	w8, #0x3f48                	// #16200
    7d6c:	b	7d80 <inflateBack@@ZLIB_1.2.0+0xb64>
    7d70:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7d74:	add	x8, x8, #0x6f6
    7d78:	str	x8, [x23, #48]
    7d7c:	mov	w8, #0x3f51                	// #16209
    7d80:	str	w8, [x28, #8]
    7d84:	ldur	x19, [x29, #-16]
    7d88:	mov	w8, w8
    7d8c:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    7d90:	mov	w10, #0xffffffff            	// #-1
    7d94:	b	7db8 <inflateBack@@ZLIB_1.2.0+0xb9c>
    7d98:	ldr	w19, [x28, #92]
    7d9c:	mov	w10, #0xffffffff            	// #-1
    7da0:	lsl	w9, w10, w8
    7da4:	bic	w9, w22, w9
    7da8:	lsr	x22, x22, x8
    7dac:	add	w9, w19, w9
    7db0:	sub	w21, w21, w8
    7db4:	str	w9, [x28, #92]
    7db8:	ldr	w9, [x28, #124]
    7dbc:	ldr	x8, [x28, #112]
    7dc0:	lsl	w10, w10, w9
    7dc4:	bic	w10, w22, w10
    7dc8:	add	x10, x8, w10, uxtw #2
    7dcc:	ldrb	w19, [x10, #1]
    7dd0:	cmp	w21, w19
    7dd4:	b.cs	7e40 <inflateBack@@ZLIB_1.2.0+0xc24>  // b.hs, b.nlast
    7dd8:	mov	w21, w21
    7ddc:	b	7e18 <inflateBack@@ZLIB_1.2.0+0xbfc>
    7de0:	ldr	x10, [x29, #8]
    7de4:	sub	w20, w20, #0x1
    7de8:	add	x11, x10, #0x1
    7dec:	str	x11, [x29, #8]
    7df0:	ldrb	w10, [x10]
    7df4:	lsl	x10, x10, x21
    7df8:	add	x22, x10, x22
    7dfc:	lsl	w10, w19, w9
    7e00:	bic	w10, w22, w10
    7e04:	add	x10, x8, w10, uxtw #2
    7e08:	ldrb	w19, [x10, #1]
    7e0c:	add	x21, x21, #0x8
    7e10:	cmp	x21, x19
    7e14:	b.cs	7e40 <inflateBack@@ZLIB_1.2.0+0xc24>  // b.hs, b.nlast
    7e18:	mov	w19, #0xffffffff            	// #-1
    7e1c:	cbnz	w20, 7de0 <inflateBack@@ZLIB_1.2.0+0xbc4>
    7e20:	ldur	x0, [x29, #-8]
    7e24:	add	x1, x29, #0x8
    7e28:	blr	x24
    7e2c:	mov	w20, w0
    7e30:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    7e34:	ldr	x8, [x28, #112]
    7e38:	ldr	w9, [x28, #124]
    7e3c:	b	7de0 <inflateBack@@ZLIB_1.2.0+0xbc4>
    7e40:	add	x9, x10, #0x2
    7e44:	ldrb	w10, [x10]
    7e48:	ldrh	w27, [x9]
    7e4c:	tst	w10, #0xf0
    7e50:	b.ne	7f0c <inflateBack@@ZLIB_1.2.0+0xcf0>  // b.any
    7e54:	add	w9, w19, w10
    7e58:	mov	w10, #0xffffffff            	// #-1
    7e5c:	lsl	w11, w10, w9
    7e60:	bic	w9, w22, w11
    7e64:	lsr	w9, w9, w19
    7e68:	add	w10, w9, w27
    7e6c:	add	x9, x8, w10, uxtw #2
    7e70:	ldrb	w9, [x9, #1]
    7e74:	add	w12, w19, w9
    7e78:	cmp	w12, w21
    7e7c:	b.ls	7ef4 <inflateBack@@ZLIB_1.2.0+0xcd8>  // b.plast
    7e80:	str	x23, [sp]
    7e84:	mvn	w23, w11
    7e88:	b	7ed0 <inflateBack@@ZLIB_1.2.0+0xcb4>
    7e8c:	ldr	x8, [x28, #112]
    7e90:	ldr	x9, [x29, #8]
    7e94:	sub	w20, w20, #0x1
    7e98:	add	x10, x9, #0x1
    7e9c:	str	x10, [x29, #8]
    7ea0:	ldrb	w9, [x9]
    7ea4:	lsl	x9, x9, x21
    7ea8:	add	x22, x9, x22
    7eac:	and	w9, w22, w23
    7eb0:	lsr	w9, w9, w19
    7eb4:	add	w10, w9, w27
    7eb8:	add	x9, x8, w10, uxtw #2
    7ebc:	ldrb	w9, [x9, #1]
    7ec0:	add	w21, w21, #0x8
    7ec4:	add	w11, w19, w9
    7ec8:	cmp	w11, w21
    7ecc:	b.ls	7eec <inflateBack@@ZLIB_1.2.0+0xcd0>  // b.plast
    7ed0:	cbnz	w20, 7e90 <inflateBack@@ZLIB_1.2.0+0xc74>
    7ed4:	ldur	x0, [x29, #-8]
    7ed8:	add	x1, x29, #0x8
    7edc:	blr	x24
    7ee0:	mov	w20, w0
    7ee4:	cbnz	w0, 7e8c <inflateBack@@ZLIB_1.2.0+0xc70>
    7ee8:	b	8104 <inflateBack@@ZLIB_1.2.0+0xee8>
    7eec:	ldr	x23, [sp]
    7ef0:	mov	w10, w10
    7ef4:	add	x8, x8, x10, lsl #2
    7ef8:	ldrh	w27, [x8, #2]
    7efc:	ldrb	w10, [x8]
    7f00:	lsr	x22, x22, x19
    7f04:	sub	w21, w21, w19
    7f08:	mov	w19, w9
    7f0c:	lsr	x22, x22, x19
    7f10:	sub	w21, w21, w19
    7f14:	tbnz	w10, #6, 7f7c <inflateBack@@ZLIB_1.2.0+0xd60>
    7f18:	ands	w8, w10, #0xf
    7f1c:	stp	w27, w8, [x28, #96]
    7f20:	ldur	x19, [x29, #-16]
    7f24:	b.eq	7fc4 <inflateBack@@ZLIB_1.2.0+0xda8>  // b.none
    7f28:	cmp	w21, w8
    7f2c:	b.cc	7f5c <inflateBack@@ZLIB_1.2.0+0xd40>  // b.lo, b.ul, b.last
    7f30:	b	7fa8 <inflateBack@@ZLIB_1.2.0+0xd8c>
    7f34:	ldr	x9, [x29, #8]
    7f38:	sub	w20, w20, #0x1
    7f3c:	add	x10, x9, #0x1
    7f40:	str	x10, [x29, #8]
    7f44:	ldrb	w9, [x9]
    7f48:	lsl	x9, x9, x21
    7f4c:	add	w21, w21, #0x8
    7f50:	cmp	w21, w8
    7f54:	add	x22, x9, x22
    7f58:	b.cs	7fa4 <inflateBack@@ZLIB_1.2.0+0xd88>  // b.hs, b.nlast
    7f5c:	cbnz	w20, 7f34 <inflateBack@@ZLIB_1.2.0+0xd18>
    7f60:	ldur	x0, [x29, #-8]
    7f64:	add	x1, x29, #0x8
    7f68:	blr	x24
    7f6c:	mov	w20, w0
    7f70:	cbz	w0, 8108 <inflateBack@@ZLIB_1.2.0+0xeec>
    7f74:	ldr	w8, [x28, #100]
    7f78:	b	7f34 <inflateBack@@ZLIB_1.2.0+0xd18>
    7f7c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7f80:	ldur	x19, [x29, #-16]
    7f84:	add	x8, x8, #0x712
    7f88:	str	x8, [x23, #48]
    7f8c:	mov	w8, #0x3f51                	// #16209
    7f90:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    7f94:	str	w8, [x28, #8]
    7f98:	add	x27, x27, #0xd72
    7f9c:	mov	w8, w8
    7fa0:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    7fa4:	ldr	w27, [x28, #96]
    7fa8:	mov	w9, #0xffffffff            	// #-1
    7fac:	lsl	w9, w9, w8
    7fb0:	bic	w9, w22, w9
    7fb4:	lsr	x22, x22, x8
    7fb8:	add	w27, w27, w9
    7fbc:	sub	w21, w21, w8
    7fc0:	str	w27, [x28, #96]
    7fc4:	ldp	w8, w9, [x28, #60]
    7fc8:	cmp	w9, w8
    7fcc:	csel	w9, w26, wzr, cc  // cc = lo, ul, last
    7fd0:	sub	w8, w8, w9
    7fd4:	cmp	w27, w8
    7fd8:	b.ls	800c <inflateBack@@ZLIB_1.2.0+0xdf0>  // b.plast
    7fdc:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    7fe0:	add	x8, x8, #0x728
    7fe4:	str	x8, [x23, #48]
    7fe8:	mov	w8, #0x3f51                	// #16209
    7fec:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    7ff0:	str	w8, [x28, #8]
    7ff4:	add	x27, x27, #0xd72
    7ff8:	mov	w8, w8
    7ffc:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    8000:	ldr	w9, [x28, #92]
    8004:	sub	w26, w26, w8
    8008:	cbz	w9, 80e8 <inflateBack@@ZLIB_1.2.0+0xecc>
    800c:	mov	x27, x25
    8010:	cbnz	w26, 8038 <inflateBack@@ZLIB_1.2.0+0xe1c>
    8014:	ldr	w26, [x28, #60]
    8018:	ldr	x27, [x28, #72]
    801c:	ldr	x0, [sp, #40]
    8020:	ldur	x8, [x29, #-32]
    8024:	mov	w2, w26
    8028:	mov	x1, x27
    802c:	str	w26, [x28, #64]
    8030:	blr	x8
    8034:	cbnz	w0, 810c <inflateBack@@ZLIB_1.2.0+0xef0>
    8038:	ldr	w8, [x28, #60]
    803c:	ldp	w10, w9, [x28, #92]
    8040:	sub	w8, w8, w9
    8044:	cmp	w26, w8
    8048:	csel	w12, w8, wzr, hi  // hi = pmore
    804c:	csneg	x11, x8, x9, hi  // hi = pmore
    8050:	sub	w8, w26, w12
    8054:	cmp	w8, w10
    8058:	csel	w8, w10, w8, hi  // hi = pmore
    805c:	sub	w12, w10, w8
    8060:	sub	w10, w8, #0x1
    8064:	add	x9, x27, x11
    8068:	cmp	w10, #0x1f
    806c:	str	w12, [x28, #92]
    8070:	b.cc	8094 <inflateBack@@ZLIB_1.2.0+0xe78>  // b.lo, b.ul, b.last
    8074:	add	x12, x27, #0x1
    8078:	add	x13, x11, x10
    807c:	add	x13, x12, x13
    8080:	cmp	x27, x13
    8084:	b.cs	80b0 <inflateBack@@ZLIB_1.2.0+0xe94>  // b.hs, b.nlast
    8088:	add	x12, x12, x10
    808c:	cmp	x9, x12
    8090:	b.cs	80b0 <inflateBack@@ZLIB_1.2.0+0xe94>  // b.hs, b.nlast
    8094:	mov	x25, x27
    8098:	mov	w10, w8
    809c:	ldrb	w11, [x9], #1
    80a0:	subs	w10, w10, #0x1
    80a4:	strb	w11, [x25], #1
    80a8:	b.ne	809c <inflateBack@@ZLIB_1.2.0+0xe80>  // b.any
    80ac:	b	8000 <inflateBack@@ZLIB_1.2.0+0xde4>
    80b0:	add	x12, x10, #0x1
    80b4:	and	x13, x12, #0x1ffffffe0
    80b8:	add	x25, x27, x13
    80bc:	sub	w10, w8, w13
    80c0:	add	x9, x9, x13
    80c4:	mov	x14, x13
    80c8:	add	x15, x27, x11
    80cc:	ldp	q0, q1, [x15]
    80d0:	subs	x14, x14, #0x20
    80d4:	stp	q0, q1, [x27], #32
    80d8:	b.ne	80c8 <inflateBack@@ZLIB_1.2.0+0xeac>  // b.any
    80dc:	cmp	x12, x13
    80e0:	b.ne	809c <inflateBack@@ZLIB_1.2.0+0xe80>  // b.any
    80e4:	b	8000 <inflateBack@@ZLIB_1.2.0+0xde4>
    80e8:	ldr	w8, [x28, #8]
    80ec:	adrp	x27, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    80f0:	add	x27, x27, #0xd72
    80f4:	b	72e8 <inflateBack@@ZLIB_1.2.0+0xcc>
    80f8:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    80fc:	add	x8, x8, #0x685
    8100:	b	7fe4 <inflateBack@@ZLIB_1.2.0+0xdc8>
    8104:	ldr	x23, [sp]
    8108:	str	xzr, [x29, #8]
    810c:	mov	w0, #0xfffffffb            	// #-5
    8110:	ldr	x8, [x29, #8]
    8114:	str	w20, [x23, #8]
    8118:	str	x8, [x23]
    811c:	ldp	x20, x19, [sp, #176]
    8120:	ldp	x22, x21, [sp, #160]
    8124:	ldp	x24, x23, [sp, #144]
    8128:	ldp	x26, x25, [sp, #128]
    812c:	ldp	x28, x27, [sp, #112]
    8130:	ldp	x29, x30, [sp, #96]
    8134:	ldr	d8, [sp, #80]
    8138:	add	sp, sp, #0xc0
    813c:	ret
    8140:	mov	w0, #0xfffffffe            	// #-2
    8144:	b	8110 <inflateBack@@ZLIB_1.2.0+0xef4>
    8148:	ldr	w8, [x28, #60]
    814c:	subs	w2, w8, w26
    8150:	b.ls	8174 <inflateBack@@ZLIB_1.2.0+0xf58>  // b.plast
    8154:	ldr	x1, [x28, #72]
    8158:	ldr	x0, [sp, #40]
    815c:	ldur	x8, [x29, #-32]
    8160:	blr	x8
    8164:	cmp	w0, #0x0
    8168:	mov	w8, #0xfffffffb            	// #-5
    816c:	csinc	w0, w8, wzr, ne  // ne = any
    8170:	b	8110 <inflateBack@@ZLIB_1.2.0+0xef4>
    8174:	mov	w0, #0x1                   	// #1
    8178:	b	8110 <inflateBack@@ZLIB_1.2.0+0xef4>

000000000000817c <inflateBackEnd@@ZLIB_1.2.0>:
    817c:	stp	x29, x30, [sp, #-32]!
    8180:	str	x19, [sp, #16]
    8184:	mov	x29, sp
    8188:	cbz	x0, 81b4 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    818c:	ldr	x1, [x0, #56]
    8190:	mov	x19, x0
    8194:	cbz	x1, 81b4 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    8198:	ldr	x8, [x19, #72]
    819c:	cbz	x8, 81b4 <inflateBackEnd@@ZLIB_1.2.0+0x38>
    81a0:	ldr	x0, [x19, #80]
    81a4:	blr	x8
    81a8:	mov	w0, wzr
    81ac:	str	xzr, [x19, #56]
    81b0:	b	81b8 <inflateBackEnd@@ZLIB_1.2.0+0x3c>
    81b4:	mov	w0, #0xfffffffe            	// #-2
    81b8:	ldr	x19, [sp, #16]
    81bc:	ldp	x29, x30, [sp], #32
    81c0:	ret
    81c4:	sub	sp, sp, #0xa0
    81c8:	stp	x29, x30, [sp, #64]
    81cc:	stp	x28, x27, [sp, #80]
    81d0:	stp	x26, x25, [sp, #96]
    81d4:	stp	x24, x23, [sp, #112]
    81d8:	stp	x22, x21, [sp, #128]
    81dc:	stp	x20, x19, [sp, #144]
    81e0:	ldr	x8, [x0, #56]
    81e4:	ldr	w11, [x0, #32]
    81e8:	ldr	w10, [x0, #8]
    81ec:	ldr	x30, [x0, #24]
    81f0:	ldp	w17, w18, [x8, #60]
    81f4:	sub	w15, w1, w11
    81f8:	ldr	w1, [x8, #68]
    81fc:	ldp	w2, w7, [x8, #120]
    8200:	sub	w12, w10, #0x5
    8204:	ldp	x28, x10, [x8, #72]
    8208:	sub	x5, x30, x15
    820c:	mov	w14, #0xffffffff            	// #-1
    8210:	sub	w15, w5, #0x1
    8214:	ldr	x9, [x0]
    8218:	ldp	x3, x4, [x8, #104]
    821c:	str	w15, [sp, #60]
    8220:	lsl	w15, w14, w2
    8224:	add	w2, w1, w17
    8228:	str	w2, [sp, #56]
    822c:	add	x2, x28, #0x1
    8230:	str	x2, [sp, #48]
    8234:	sub	w20, w1, #0x1
    8238:	mvn	w2, w1
    823c:	sub	w16, w11, #0x101
    8240:	mvn	w22, w15
    8244:	add	x24, x20, #0x1
    8248:	add	w15, w2, w5
    824c:	add	x11, x9, x12
    8250:	add	x12, x30, x16
    8254:	lsl	w16, w14, w7
    8258:	add	x7, x28, #0x10
    825c:	str	w15, [sp, #44]
    8260:	add	x15, x28, x24
    8264:	and	x27, x24, #0x1ffffffe0
    8268:	ldr	w13, [x8, #88]
    826c:	stp	x15, x7, [sp, #24]
    8270:	sub	w15, w1, w27
    8274:	str	w15, [sp, #20]
    8278:	add	x15, x28, x27
    827c:	adrp	x6, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8280:	str	x15, [sp, #8]
    8284:	adrp	x15, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8288:	add	x6, x6, #0x712
    828c:	mvn	w23, w16
    8290:	add	x15, x15, #0x728
    8294:	cmp	w13, #0xe
    8298:	b.hi	82c0 <inflateBackEnd@@ZLIB_1.2.0+0x144>  // b.pmore
    829c:	ldrb	w16, [x9]
    82a0:	ldrb	w2, [x9, #1]
    82a4:	add	w7, w13, #0x8
    82a8:	add	x9, x9, #0x2
    82ac:	lsl	x16, x16, x13
    82b0:	lsl	x2, x2, x7
    82b4:	add	x10, x16, x10
    82b8:	add	x10, x10, x2
    82bc:	add	w13, w13, #0x10
    82c0:	and	x16, x10, x22
    82c4:	add	x16, x3, x16, lsl #2
    82c8:	ldrb	w7, [x16, #1]
    82cc:	ldrb	w2, [x16]
    82d0:	ldrh	w16, [x16, #2]
    82d4:	lsr	x10, x10, x7
    82d8:	sub	w13, w13, w7
    82dc:	cbz	w2, 8300 <inflateBackEnd@@ZLIB_1.2.0+0x184>
    82e0:	and	w7, w2, #0xff
    82e4:	tbnz	w2, #4, 8318 <inflateBackEnd@@ZLIB_1.2.0+0x19c>
    82e8:	tbnz	w7, #6, 8840 <inflateBackEnd@@ZLIB_1.2.0+0x6c4>
    82ec:	lsl	w2, w14, w7
    82f0:	mvn	w2, w2
    82f4:	and	x2, x10, x2
    82f8:	add	x16, x2, w16, uxth
    82fc:	b	82c4 <inflateBackEnd@@ZLIB_1.2.0+0x148>
    8300:	strb	w16, [x30], #1
    8304:	cmp	x30, x12
    8308:	b.cs	8868 <inflateBackEnd@@ZLIB_1.2.0+0x6ec>  // b.hs, b.nlast
    830c:	cmp	x9, x11
    8310:	b.cc	8294 <inflateBackEnd@@ZLIB_1.2.0+0x118>  // b.lo, b.ul, b.last
    8314:	b	8868 <inflateBackEnd@@ZLIB_1.2.0+0x6ec>
    8318:	ands	w2, w7, #0xf
    831c:	and	w16, w16, #0xffff
    8320:	b.eq	8350 <inflateBackEnd@@ZLIB_1.2.0+0x1d4>  // b.none
    8324:	cmp	w13, w2
    8328:	b.cs	833c <inflateBackEnd@@ZLIB_1.2.0+0x1c0>  // b.hs, b.nlast
    832c:	ldrb	w7, [x9], #1
    8330:	lsl	x7, x7, x13
    8334:	add	x10, x7, x10
    8338:	add	w13, w13, #0x8
    833c:	lsl	w7, w14, w2
    8340:	bic	w7, w10, w7
    8344:	lsr	x10, x10, x2
    8348:	add	w16, w7, w16
    834c:	sub	w13, w13, w2
    8350:	cmp	w13, #0xe
    8354:	b.hi	837c <inflateBackEnd@@ZLIB_1.2.0+0x200>  // b.pmore
    8358:	ldrb	w2, [x9]
    835c:	ldrb	w7, [x9, #1]
    8360:	add	w19, w13, #0x8
    8364:	add	x9, x9, #0x2
    8368:	lsl	x2, x2, x13
    836c:	lsl	x7, x7, x19
    8370:	add	x10, x2, x10
    8374:	add	x10, x10, x7
    8378:	add	w13, w13, #0x10
    837c:	and	x2, x10, x23
    8380:	add	x7, x4, x2, lsl #2
    8384:	ldrb	w19, [x7, #1]
    8388:	ldrb	w2, [x7]
    838c:	ldrh	w25, [x7, #2]
    8390:	lsr	x10, x10, x19
    8394:	sub	w13, w13, w19
    8398:	tbnz	w2, #4, 83b4 <inflateBackEnd@@ZLIB_1.2.0+0x238>
    839c:	tbnz	w2, #6, 8858 <inflateBackEnd@@ZLIB_1.2.0+0x6dc>
    83a0:	lsl	w2, w14, w2
    83a4:	mvn	w2, w2
    83a8:	and	x2, x10, x2
    83ac:	add	x2, x2, w25, uxth
    83b0:	b	8380 <inflateBackEnd@@ZLIB_1.2.0+0x204>
    83b4:	and	w2, w2, #0xf
    83b8:	cmp	w13, w2
    83bc:	b.cs	83f4 <inflateBackEnd@@ZLIB_1.2.0+0x278>  // b.hs, b.nlast
    83c0:	mov	x7, x9
    83c4:	ldrb	w19, [x7], #1
    83c8:	add	w21, w13, #0x8
    83cc:	cmp	w21, w2
    83d0:	lsl	x19, x19, x13
    83d4:	add	x10, x19, x10
    83d8:	b.cs	83fc <inflateBackEnd@@ZLIB_1.2.0+0x280>  // b.hs, b.nlast
    83dc:	ldrb	w7, [x9, #1]
    83e0:	add	x9, x9, #0x2
    83e4:	lsl	x7, x7, x21
    83e8:	add	x10, x7, x10
    83ec:	add	w21, w13, #0x10
    83f0:	b	8400 <inflateBackEnd@@ZLIB_1.2.0+0x284>
    83f4:	mov	w21, w13
    83f8:	b	8400 <inflateBackEnd@@ZLIB_1.2.0+0x284>
    83fc:	mov	x9, x7
    8400:	lsl	w13, w14, w2
    8404:	bic	w19, w10, w13
    8408:	add	w26, w19, w25
    840c:	sub	w13, w30, w5
    8410:	lsr	x10, x10, x2
    8414:	subs	w29, w26, w13
    8418:	sub	w13, w21, w2
    841c:	b.ls	8474 <inflateBackEnd@@ZLIB_1.2.0+0x2f8>  // b.plast
    8420:	cmp	w29, w18
    8424:	b.ls	8430 <inflateBackEnd@@ZLIB_1.2.0+0x2b4>  // b.plast
    8428:	ldr	w2, [x8, #7144]
    842c:	cbnz	w2, 885c <inflateBackEnd@@ZLIB_1.2.0+0x6e0>
    8430:	cbz	w1, 84f4 <inflateBackEnd@@ZLIB_1.2.0+0x378>
    8434:	subs	w21, w1, w29
    8438:	b.cs	8524 <inflateBackEnd@@ZLIB_1.2.0+0x3a8>  // b.hs, b.nlast
    843c:	ldr	w2, [sp, #56]
    8440:	sub	w21, w29, w1
    8444:	sub	w7, w2, w29
    8448:	subs	w29, w16, w21
    844c:	add	x2, x28, x7
    8450:	b.ls	878c <inflateBackEnd@@ZLIB_1.2.0+0x610>  // b.plast
    8454:	ldr	w16, [sp, #44]
    8458:	add	w16, w16, w19
    845c:	add	w19, w16, w25
    8460:	sub	w16, w19, w30
    8464:	cmp	w16, #0x1f
    8468:	b.cs	85a8 <inflateBackEnd@@ZLIB_1.2.0+0x42c>  // b.hs, b.nlast
    846c:	mov	x25, x30
    8470:	b	86c0 <inflateBackEnd@@ZLIB_1.2.0+0x544>
    8474:	mov	w7, w26
    8478:	neg	x19, x7
    847c:	sub	x7, x30, x7
    8480:	mov	x2, xzr
    8484:	add	x7, x7, #0x1
    8488:	mov	w21, w16
    848c:	add	x25, x7, x2
    8490:	ldurb	w26, [x25, #-1]
    8494:	add	x29, x30, x2
    8498:	sub	w21, w21, #0x3
    849c:	cmp	w21, #0x2
    84a0:	strb	w26, [x29]
    84a4:	ldrb	w26, [x25]
    84a8:	add	x2, x2, #0x3
    84ac:	strb	w26, [x29, #1]
    84b0:	ldrb	w25, [x25, #1]
    84b4:	strb	w25, [x29, #2]
    84b8:	b.hi	848c <inflateBackEnd@@ZLIB_1.2.0+0x310>  // b.pmore
    84bc:	cmp	w16, w2
    84c0:	add	x7, x30, x2
    84c4:	b.eq	87e8 <inflateBackEnd@@ZLIB_1.2.0+0x66c>  // b.none
    84c8:	add	x21, x30, x19
    84cc:	add	x21, x21, x2
    84d0:	add	x21, x21, #0x1
    84d4:	ldurb	w21, [x21, #-1]
    84d8:	mov	w16, w16
    84dc:	sub	x16, x16, #0x1
    84e0:	cmp	w16, w2
    84e4:	strb	w21, [x7]
    84e8:	b.ne	8554 <inflateBackEnd@@ZLIB_1.2.0+0x3d8>  // b.any
    84ec:	add	x30, x7, #0x1
    84f0:	b	8304 <inflateBackEnd@@ZLIB_1.2.0+0x188>
    84f4:	sub	w7, w17, w29
    84f8:	subs	w21, w16, w29
    84fc:	add	x2, x28, x7
    8500:	b.ls	878c <inflateBackEnd@@ZLIB_1.2.0+0x610>  // b.plast
    8504:	ldr	w16, [sp, #60]
    8508:	add	w16, w16, w19
    850c:	add	w19, w16, w25
    8510:	sub	w16, w19, w30
    8514:	cmp	w16, #0x1f
    8518:	b.cs	8570 <inflateBackEnd@@ZLIB_1.2.0+0x3f4>  // b.hs, b.nlast
    851c:	mov	x16, x30
    8520:	b	8658 <inflateBackEnd@@ZLIB_1.2.0+0x4dc>
    8524:	subs	w7, w16, w29
    8528:	add	x2, x28, x21
    852c:	b.ls	878c <inflateBackEnd@@ZLIB_1.2.0+0x610>  // b.plast
    8530:	ldr	w16, [sp, #60]
    8534:	str	w7, [sp, #4]
    8538:	add	w16, w16, w19
    853c:	add	w7, w16, w25
    8540:	sub	w16, w7, w30
    8544:	cmp	w16, #0x1f
    8548:	b.cs	85e0 <inflateBackEnd@@ZLIB_1.2.0+0x464>  // b.hs, b.nlast
    854c:	mov	x16, x30
    8550:	b	8770 <inflateBackEnd@@ZLIB_1.2.0+0x5f4>
    8554:	add	x16, x30, x19
    8558:	add	x16, x16, x2
    855c:	ldrb	w16, [x16, #1]
    8560:	add	x2, x30, x2
    8564:	add	x30, x2, #0x2
    8568:	strb	w16, [x7, #1]
    856c:	b	8304 <inflateBackEnd@@ZLIB_1.2.0+0x188>
    8570:	str	w21, [sp, #4]
    8574:	ldr	x21, [sp, #48]
    8578:	sub	w19, w19, w30
    857c:	add	x25, x7, x19
    8580:	add	x25, x21, x25
    8584:	cmp	x30, x25
    8588:	b.cs	8610 <inflateBackEnd@@ZLIB_1.2.0+0x494>  // b.hs, b.nlast
    858c:	add	x19, x30, x19
    8590:	add	x19, x19, #0x1
    8594:	cmp	x2, x19
    8598:	b.cs	8610 <inflateBackEnd@@ZLIB_1.2.0+0x494>  // b.hs, b.nlast
    859c:	ldr	w21, [sp, #4]
    85a0:	mov	x16, x30
    85a4:	b	8658 <inflateBackEnd@@ZLIB_1.2.0+0x4dc>
    85a8:	str	w29, [sp, #4]
    85ac:	ldr	x29, [sp, #48]
    85b0:	sub	w19, w19, w30
    85b4:	add	x25, x7, x19
    85b8:	add	x25, x29, x25
    85bc:	cmp	x30, x25
    85c0:	b.cs	8678 <inflateBackEnd@@ZLIB_1.2.0+0x4fc>  // b.hs, b.nlast
    85c4:	add	x19, x30, x19
    85c8:	add	x19, x19, #0x1
    85cc:	cmp	x2, x19
    85d0:	b.cs	8678 <inflateBackEnd@@ZLIB_1.2.0+0x4fc>  // b.hs, b.nlast
    85d4:	ldr	w29, [sp, #4]
    85d8:	mov	x25, x30
    85dc:	b	86c0 <inflateBackEnd@@ZLIB_1.2.0+0x544>
    85e0:	ldr	x25, [sp, #48]
    85e4:	sub	w7, w7, w30
    85e8:	add	x19, x21, x7
    85ec:	add	x19, x25, x19
    85f0:	cmp	x30, x19
    85f4:	b.cs	872c <inflateBackEnd@@ZLIB_1.2.0+0x5b0>  // b.hs, b.nlast
    85f8:	add	x7, x30, x7
    85fc:	add	x7, x7, #0x1
    8600:	cmp	x2, x7
    8604:	b.cs	872c <inflateBackEnd@@ZLIB_1.2.0+0x5b0>  // b.hs, b.nlast
    8608:	mov	x16, x30
    860c:	b	8770 <inflateBackEnd@@ZLIB_1.2.0+0x5f4>
    8610:	add	x21, x16, #0x1
    8614:	ldr	x16, [sp, #32]
    8618:	and	x19, x21, #0x1ffffffe0
    861c:	sub	w29, w29, w19
    8620:	add	x2, x2, x19
    8624:	add	x25, x16, x7
    8628:	add	x16, x30, x19
    862c:	add	x30, x30, #0x10
    8630:	mov	x7, x19
    8634:	ldp	q0, q1, [x25, #-16]
    8638:	add	x25, x25, #0x20
    863c:	subs	x7, x7, #0x20
    8640:	stp	q0, q1, [x30, #-16]
    8644:	add	x30, x30, #0x20
    8648:	b.ne	8634 <inflateBackEnd@@ZLIB_1.2.0+0x4b8>  // b.any
    864c:	cmp	x21, x19
    8650:	ldr	w21, [sp, #4]
    8654:	b.eq	8668 <inflateBackEnd@@ZLIB_1.2.0+0x4ec>  // b.none
    8658:	ldrb	w7, [x2], #1
    865c:	subs	w29, w29, #0x1
    8660:	strb	w7, [x16], #1
    8664:	b.ne	8658 <inflateBackEnd@@ZLIB_1.2.0+0x4dc>  // b.any
    8668:	sub	x2, x16, w26, uxtw
    866c:	mov	x30, x16
    8670:	mov	w16, w21
    8674:	b	878c <inflateBackEnd@@ZLIB_1.2.0+0x610>
    8678:	add	x29, x16, #0x1
    867c:	ldr	x16, [sp, #32]
    8680:	add	x19, x16, x7
    8684:	and	x16, x29, #0x1ffffffe0
    8688:	add	x25, x30, x16
    868c:	sub	w21, w21, w16
    8690:	add	x2, x2, x16
    8694:	add	x30, x30, #0x10
    8698:	mov	x7, x16
    869c:	ldp	q0, q1, [x19, #-16]
    86a0:	add	x19, x19, #0x20
    86a4:	subs	x7, x7, #0x20
    86a8:	stp	q0, q1, [x30, #-16]
    86ac:	add	x30, x30, #0x20
    86b0:	b.ne	869c <inflateBackEnd@@ZLIB_1.2.0+0x520>  // b.any
    86b4:	cmp	x29, x16
    86b8:	ldr	w29, [sp, #4]
    86bc:	b.eq	86d0 <inflateBackEnd@@ZLIB_1.2.0+0x554>  // b.none
    86c0:	ldrb	w16, [x2], #1
    86c4:	subs	w21, w21, #0x1
    86c8:	strb	w16, [x25], #1
    86cc:	b.ne	86c0 <inflateBackEnd@@ZLIB_1.2.0+0x544>  // b.any
    86d0:	subs	w16, w29, w1
    86d4:	b.ls	871c <inflateBackEnd@@ZLIB_1.2.0+0x5a0>  // b.plast
    86d8:	cmp	w20, #0x1f
    86dc:	b.cc	86f8 <inflateBackEnd@@ZLIB_1.2.0+0x57c>  // b.lo, b.ul, b.last
    86e0:	ldr	x2, [sp, #24]
    86e4:	cmp	x25, x2
    86e8:	b.cs	8804 <inflateBackEnd@@ZLIB_1.2.0+0x688>  // b.hs, b.nlast
    86ec:	add	x2, x25, x24
    86f0:	cmp	x28, x2
    86f4:	b.cs	8804 <inflateBackEnd@@ZLIB_1.2.0+0x688>  // b.hs, b.nlast
    86f8:	mov	x30, x25
    86fc:	mov	w2, w1
    8700:	mov	x7, x28
    8704:	ldrb	w19, [x7], #1
    8708:	subs	w2, w2, #0x1
    870c:	strb	w19, [x30], #1
    8710:	b.ne	8704 <inflateBackEnd@@ZLIB_1.2.0+0x588>  // b.any
    8714:	sub	x2, x30, w26, uxtw
    8718:	b	878c <inflateBackEnd@@ZLIB_1.2.0+0x610>
    871c:	mov	x30, x25
    8720:	mov	w16, w29
    8724:	mov	x2, x28
    8728:	b	878c <inflateBackEnd@@ZLIB_1.2.0+0x610>
    872c:	add	x7, x16, #0x1
    8730:	ldr	x16, [sp, #32]
    8734:	and	x19, x7, #0x1ffffffe0
    8738:	sub	w29, w29, w19
    873c:	add	x2, x2, x19
    8740:	add	x21, x16, x21
    8744:	add	x16, x30, x19
    8748:	add	x25, x30, #0x10
    874c:	mov	x30, x19
    8750:	ldp	q0, q1, [x21, #-16]
    8754:	add	x21, x21, #0x20
    8758:	subs	x30, x30, #0x20
    875c:	stp	q0, q1, [x25, #-16]
    8760:	add	x25, x25, #0x20
    8764:	b.ne	8750 <inflateBackEnd@@ZLIB_1.2.0+0x5d4>  // b.any
    8768:	cmp	x7, x19
    876c:	b.eq	8780 <inflateBackEnd@@ZLIB_1.2.0+0x604>  // b.none
    8770:	ldrb	w7, [x2], #1
    8774:	subs	w29, w29, #0x1
    8778:	strb	w7, [x16], #1
    877c:	b.ne	8770 <inflateBackEnd@@ZLIB_1.2.0+0x5f4>  // b.any
    8780:	sub	x2, x16, w26, uxtw
    8784:	mov	x30, x16
    8788:	ldr	w16, [sp, #4]
    878c:	cmp	w16, #0x3
    8790:	b.cc	87d0 <inflateBackEnd@@ZLIB_1.2.0+0x654>  // b.lo, b.ul, b.last
    8794:	ldrb	w7, [x2]
    8798:	add	x19, x30, #0x3
    879c:	sub	w16, w16, #0x3
    87a0:	cmp	w16, #0x2
    87a4:	strb	w7, [x30]
    87a8:	ldrb	w7, [x2, #1]
    87ac:	strb	w7, [x30, #1]
    87b0:	add	x7, x2, #0x3
    87b4:	ldrb	w2, [x2, #2]
    87b8:	strb	w2, [x30, #2]
    87bc:	mov	x2, x7
    87c0:	mov	x30, x19
    87c4:	b.hi	8794 <inflateBackEnd@@ZLIB_1.2.0+0x618>  // b.pmore
    87c8:	mov	x30, x19
    87cc:	mov	x2, x7
    87d0:	cbz	w16, 8304 <inflateBackEnd@@ZLIB_1.2.0+0x188>
    87d4:	ldrb	w19, [x2]
    87d8:	mov	x7, x30
    87dc:	cmp	w16, #0x1
    87e0:	strb	w19, [x7], #1
    87e4:	b.ne	87f0 <inflateBackEnd@@ZLIB_1.2.0+0x674>  // b.any
    87e8:	mov	x30, x7
    87ec:	b	8304 <inflateBackEnd@@ZLIB_1.2.0+0x188>
    87f0:	ldrb	w16, [x2, #1]
    87f4:	add	x2, x30, #0x2
    87f8:	strb	w16, [x30, #1]
    87fc:	mov	x30, x2
    8800:	b	8304 <inflateBackEnd@@ZLIB_1.2.0+0x188>
    8804:	ldr	x19, [sp, #32]
    8808:	add	x30, x25, x27
    880c:	add	x2, x25, #0x10
    8810:	mov	x7, x27
    8814:	ldp	q0, q1, [x19, #-16]
    8818:	add	x19, x19, #0x20
    881c:	subs	x7, x7, #0x20
    8820:	stp	q0, q1, [x2, #-16]
    8824:	add	x2, x2, #0x20
    8828:	b.ne	8814 <inflateBackEnd@@ZLIB_1.2.0+0x698>  // b.any
    882c:	ldr	w2, [sp, #20]
    8830:	ldr	x7, [sp, #8]
    8834:	cmp	x24, x27
    8838:	b.ne	8704 <inflateBackEnd@@ZLIB_1.2.0+0x588>  // b.any
    883c:	b	8714 <inflateBackEnd@@ZLIB_1.2.0+0x598>
    8840:	tbnz	w7, #5, 8850 <inflateBackEnd@@ZLIB_1.2.0+0x6d4>
    8844:	adrp	x15, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8848:	add	x15, x15, #0x6f6
    884c:	b	885c <inflateBackEnd@@ZLIB_1.2.0+0x6e0>
    8850:	mov	w14, #0x3f3f                	// #16191
    8854:	b	8864 <inflateBackEnd@@ZLIB_1.2.0+0x6e8>
    8858:	mov	x15, x6
    885c:	mov	w14, #0x3f51                	// #16209
    8860:	str	x15, [x0, #48]
    8864:	str	w14, [x8, #8]
    8868:	lsr	w14, w13, #3
    886c:	and	w13, w13, #0x7
    8870:	mov	w15, #0xffffffff            	// #-1
    8874:	sub	x9, x9, x14
    8878:	lsl	w14, w15, w13
    887c:	sub	w12, w12, w30
    8880:	mvn	w14, w14
    8884:	str	x9, [x0]
    8888:	sub	w9, w11, w9
    888c:	add	w12, w12, #0x101
    8890:	and	x10, x10, x14
    8894:	add	w9, w9, #0x5
    8898:	str	x30, [x0, #24]
    889c:	str	w12, [x0, #32]
    88a0:	str	w9, [x0, #8]
    88a4:	str	x10, [x8, #80]
    88a8:	str	w13, [x8, #88]
    88ac:	ldp	x20, x19, [sp, #144]
    88b0:	ldp	x22, x21, [sp, #128]
    88b4:	ldp	x24, x23, [sp, #112]
    88b8:	ldp	x26, x25, [sp, #96]
    88bc:	ldp	x28, x27, [sp, #80]
    88c0:	ldp	x29, x30, [sp, #64]
    88c4:	add	sp, sp, #0xa0
    88c8:	ret

00000000000088cc <inflateResetKeep@@ZLIB_1.2.5.2>:
    88cc:	cbz	x0, 8968 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    88d0:	ldr	x8, [x0, #64]
    88d4:	cbz	x8, 8968 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    88d8:	ldr	x8, [x0, #72]
    88dc:	cbz	x8, 8968 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    88e0:	ldr	x8, [x0, #56]
    88e4:	cbz	x8, 8968 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>
    88e8:	ldr	x9, [x8]
    88ec:	cmp	x9, x0
    88f0:	b.ne	8968 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>  // b.any
    88f4:	ldr	w9, [x8, #8]
    88f8:	mov	w10, #0xffffc0cc            	// #-16180
    88fc:	add	w9, w9, w10
    8900:	cmp	w9, #0x1f
    8904:	b.hi	8968 <inflateResetKeep@@ZLIB_1.2.5.2+0x9c>  // b.pmore
    8908:	str	xzr, [x8, #40]
    890c:	str	xzr, [x0, #16]
    8910:	stp	xzr, xzr, [x0, #40]
    8914:	ldr	w9, [x8, #16]
    8918:	cbz	w9, 8924 <inflateResetKeep@@ZLIB_1.2.5.2+0x58>
    891c:	and	x9, x9, #0x1
    8920:	str	x9, [x0, #96]
    8924:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8928:	ldr	d0, [x9, #1864]
    892c:	mov	w9, #0x8000                	// #32768
    8930:	str	w9, [x8, #28]
    8934:	add	x9, x8, #0x558
    8938:	str	x9, [x8, #144]
    893c:	stp	x9, x9, [x8, #104]
    8940:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8944:	str	d0, [x8, #8]
    8948:	ldr	d0, [x9, #1872]
    894c:	mov	w0, wzr
    8950:	str	wzr, [x8, #20]
    8954:	str	xzr, [x8, #48]
    8958:	str	xzr, [x8, #80]
    895c:	str	wzr, [x8, #88]
    8960:	str	d0, [x8, #7144]
    8964:	ret
    8968:	mov	w0, #0xfffffffe            	// #-2
    896c:	ret

0000000000008970 <inflateReset@@Base>:
    8970:	cbz	x0, 8a14 <inflateReset@@Base+0xa4>
    8974:	ldr	x8, [x0, #64]
    8978:	cbz	x8, 8a14 <inflateReset@@Base+0xa4>
    897c:	ldr	x8, [x0, #72]
    8980:	cbz	x8, 8a14 <inflateReset@@Base+0xa4>
    8984:	ldr	x8, [x0, #56]
    8988:	cbz	x8, 8a14 <inflateReset@@Base+0xa4>
    898c:	ldr	x9, [x8]
    8990:	cmp	x9, x0
    8994:	b.ne	8a14 <inflateReset@@Base+0xa4>  // b.any
    8998:	ldr	w9, [x8, #8]
    899c:	mov	w10, #0xffffc0cc            	// #-16180
    89a0:	add	w9, w9, w10
    89a4:	cmp	w9, #0x1f
    89a8:	b.hi	8a14 <inflateReset@@Base+0xa4>  // b.pmore
    89ac:	str	xzr, [x8, #64]
    89b0:	str	wzr, [x8, #60]
    89b4:	str	xzr, [x8, #40]
    89b8:	str	xzr, [x0, #16]
    89bc:	stp	xzr, xzr, [x0, #40]
    89c0:	ldr	w9, [x8, #16]
    89c4:	cbz	w9, 89d0 <inflateReset@@Base+0x60>
    89c8:	and	x9, x9, #0x1
    89cc:	str	x9, [x0, #96]
    89d0:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    89d4:	ldr	d0, [x9, #1864]
    89d8:	mov	w9, #0x8000                	// #32768
    89dc:	str	w9, [x8, #28]
    89e0:	add	x9, x8, #0x558
    89e4:	str	x9, [x8, #144]
    89e8:	stp	x9, x9, [x8, #104]
    89ec:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    89f0:	str	d0, [x8, #8]
    89f4:	ldr	d0, [x9, #1872]
    89f8:	mov	w0, wzr
    89fc:	str	wzr, [x8, #20]
    8a00:	str	xzr, [x8, #48]
    8a04:	str	xzr, [x8, #80]
    8a08:	str	wzr, [x8, #88]
    8a0c:	str	d0, [x8, #7144]
    8a10:	ret
    8a14:	mov	w0, #0xfffffffe            	// #-2
    8a18:	ret

0000000000008a1c <inflateReset2@@ZLIB_1.2.3.4>:
    8a1c:	stp	x29, x30, [sp, #-48]!
    8a20:	stp	x22, x21, [sp, #16]
    8a24:	stp	x20, x19, [sp, #32]
    8a28:	mov	x29, sp
    8a2c:	cbz	x0, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8a30:	ldr	x8, [x0, #64]
    8a34:	mov	x19, x0
    8a38:	cbz	x8, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8a3c:	ldr	x8, [x19, #72]
    8a40:	cbz	x8, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8a44:	ldr	x20, [x19, #56]
    8a48:	cbz	x20, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8a4c:	ldr	x9, [x20]
    8a50:	cmp	x9, x19
    8a54:	b.ne	8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>  // b.any
    8a58:	ldr	w9, [x20, #8]
    8a5c:	mov	w10, #0xffffc0cc            	// #-16180
    8a60:	add	w9, w9, w10
    8a64:	cmp	w9, #0x1f
    8a68:	b.hi	8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>  // b.pmore
    8a6c:	tbnz	w1, #31, 8a88 <inflateReset2@@ZLIB_1.2.3.4+0x6c>
    8a70:	lsr	w9, w1, #4
    8a74:	and	w10, w1, #0xf
    8a78:	cmp	w1, #0x30
    8a7c:	add	w22, w9, #0x5
    8a80:	csel	w21, w10, w1, lt  // lt = tstop
    8a84:	b	8a90 <inflateReset2@@ZLIB_1.2.3.4+0x74>
    8a88:	mov	w22, wzr
    8a8c:	neg	w21, w1
    8a90:	cbz	w21, 8aa0 <inflateReset2@@ZLIB_1.2.3.4+0x84>
    8a94:	and	w9, w21, #0xfffffff8
    8a98:	cmp	w9, #0x8
    8a9c:	b.ne	8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>  // b.any
    8aa0:	ldr	x1, [x20, #72]
    8aa4:	cbz	x1, 8ab4 <inflateReset2@@ZLIB_1.2.3.4+0x98>
    8aa8:	ldr	w9, [x20, #56]
    8aac:	cmp	w9, w21
    8ab0:	b.ne	8ac0 <inflateReset2@@ZLIB_1.2.3.4+0xa4>  // b.any
    8ab4:	str	w22, [x20, #16]
    8ab8:	str	w21, [x20, #56]
    8abc:	b	8adc <inflateReset2@@ZLIB_1.2.3.4+0xc0>
    8ac0:	ldr	x0, [x19, #80]
    8ac4:	blr	x8
    8ac8:	str	xzr, [x20, #72]
    8acc:	ldr	x8, [x19, #64]
    8ad0:	str	w22, [x20, #16]
    8ad4:	str	w21, [x20, #56]
    8ad8:	cbz	x8, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8adc:	ldr	x8, [x19, #72]
    8ae0:	cbz	x8, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8ae4:	ldr	x8, [x19, #56]
    8ae8:	cbz	x8, 8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>
    8aec:	ldr	x9, [x8]
    8af0:	cmp	x9, x19
    8af4:	b.ne	8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>  // b.any
    8af8:	ldr	w9, [x8, #8]
    8afc:	mov	w10, #0xffffc0cc            	// #-16180
    8b00:	add	w9, w9, w10
    8b04:	cmp	w9, #0x1f
    8b08:	b.hi	8b74 <inflateReset2@@ZLIB_1.2.3.4+0x158>  // b.pmore
    8b0c:	str	xzr, [x8, #64]
    8b10:	str	wzr, [x8, #60]
    8b14:	str	xzr, [x8, #40]
    8b18:	str	xzr, [x19, #16]
    8b1c:	stp	xzr, xzr, [x19, #40]
    8b20:	ldr	w9, [x8, #16]
    8b24:	cbz	w9, 8b30 <inflateReset2@@ZLIB_1.2.3.4+0x114>
    8b28:	and	x9, x9, #0x1
    8b2c:	str	x9, [x19, #96]
    8b30:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8b34:	ldr	d0, [x9, #1864]
    8b38:	mov	w9, #0x8000                	// #32768
    8b3c:	str	w9, [x8, #28]
    8b40:	add	x9, x8, #0x558
    8b44:	str	x9, [x8, #144]
    8b48:	stp	x9, x9, [x8, #104]
    8b4c:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8b50:	str	d0, [x8, #8]
    8b54:	ldr	d0, [x9, #1872]
    8b58:	mov	w0, wzr
    8b5c:	str	wzr, [x8, #20]
    8b60:	str	xzr, [x8, #48]
    8b64:	str	xzr, [x8, #80]
    8b68:	str	wzr, [x8, #88]
    8b6c:	str	d0, [x8, #7144]
    8b70:	b	8b78 <inflateReset2@@ZLIB_1.2.3.4+0x15c>
    8b74:	mov	w0, #0xfffffffe            	// #-2
    8b78:	ldp	x20, x19, [sp, #32]
    8b7c:	ldp	x22, x21, [sp, #16]
    8b80:	ldp	x29, x30, [sp], #48
    8b84:	ret

0000000000008b88 <inflateInit2_@@Base>:
    8b88:	stp	x29, x30, [sp, #-48]!
    8b8c:	stp	x22, x21, [sp, #16]
    8b90:	stp	x20, x19, [sp, #32]
    8b94:	mov	x29, sp
    8b98:	cbz	x2, 8c28 <inflateInit2_@@Base+0xa0>
    8b9c:	cmp	w3, #0x70
    8ba0:	mov	w21, #0xfffffffa            	// #-6
    8ba4:	b.ne	8c64 <inflateInit2_@@Base+0xdc>  // b.any
    8ba8:	ldrb	w8, [x2]
    8bac:	cmp	w8, #0x31
    8bb0:	b.ne	8c64 <inflateInit2_@@Base+0xdc>  // b.any
    8bb4:	mov	x19, x0
    8bb8:	cbz	x0, 8c30 <inflateInit2_@@Base+0xa8>
    8bbc:	ldr	x8, [x19, #64]
    8bc0:	mov	w20, w1
    8bc4:	str	xzr, [x19, #48]
    8bc8:	cbz	x8, 8c38 <inflateInit2_@@Base+0xb0>
    8bcc:	ldr	x9, [x19, #72]
    8bd0:	cbz	x9, 8c50 <inflateInit2_@@Base+0xc8>
    8bd4:	ldr	x0, [x19, #80]
    8bd8:	mov	w1, #0x1                   	// #1
    8bdc:	mov	w2, #0x1bf8                	// #7160
    8be0:	blr	x8
    8be4:	cbz	x0, 8c60 <inflateInit2_@@Base+0xd8>
    8be8:	mov	w8, #0x3f34                	// #16180
    8bec:	mov	x22, x0
    8bf0:	str	x0, [x19, #56]
    8bf4:	str	x19, [x0]
    8bf8:	str	xzr, [x0, #72]
    8bfc:	str	w8, [x0, #8]
    8c00:	mov	x0, x19
    8c04:	mov	w1, w20
    8c08:	bl	2580 <inflateReset2@plt>
    8c0c:	mov	w21, w0
    8c10:	cbz	w0, 8c64 <inflateInit2_@@Base+0xdc>
    8c14:	ldp	x8, x0, [x19, #72]
    8c18:	mov	x1, x22
    8c1c:	blr	x8
    8c20:	str	xzr, [x19, #56]
    8c24:	b	8c64 <inflateInit2_@@Base+0xdc>
    8c28:	mov	w21, #0xfffffffa            	// #-6
    8c2c:	b	8c64 <inflateInit2_@@Base+0xdc>
    8c30:	mov	w21, #0xfffffffe            	// #-2
    8c34:	b	8c64 <inflateInit2_@@Base+0xdc>
    8c38:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    8c3c:	add	x8, x8, #0x4b4
    8c40:	str	x8, [x19, #64]
    8c44:	str	xzr, [x19, #80]
    8c48:	ldr	x9, [x19, #72]
    8c4c:	cbnz	x9, 8bd4 <inflateInit2_@@Base+0x4c>
    8c50:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    8c54:	add	x9, x9, #0x4bc
    8c58:	str	x9, [x19, #72]
    8c5c:	b	8bd4 <inflateInit2_@@Base+0x4c>
    8c60:	mov	w21, #0xfffffffc            	// #-4
    8c64:	mov	w0, w21
    8c68:	ldp	x20, x19, [sp, #32]
    8c6c:	ldp	x22, x21, [sp, #16]
    8c70:	ldp	x29, x30, [sp], #48
    8c74:	ret

0000000000008c78 <inflateInit_@@Base>:
    8c78:	stp	x29, x30, [sp, #-48]!
    8c7c:	str	x21, [sp, #16]
    8c80:	stp	x20, x19, [sp, #32]
    8c84:	mov	x29, sp
    8c88:	cbz	x1, 8d14 <inflateInit_@@Base+0x9c>
    8c8c:	cmp	w2, #0x70
    8c90:	mov	w20, #0xfffffffa            	// #-6
    8c94:	b.ne	8d50 <inflateInit_@@Base+0xd8>  // b.any
    8c98:	ldrb	w8, [x1]
    8c9c:	cmp	w8, #0x31
    8ca0:	b.ne	8d50 <inflateInit_@@Base+0xd8>  // b.any
    8ca4:	mov	x19, x0
    8ca8:	cbz	x0, 8d1c <inflateInit_@@Base+0xa4>
    8cac:	ldr	x8, [x19, #64]
    8cb0:	str	xzr, [x19, #48]
    8cb4:	cbz	x8, 8d24 <inflateInit_@@Base+0xac>
    8cb8:	ldr	x9, [x19, #72]
    8cbc:	cbz	x9, 8d3c <inflateInit_@@Base+0xc4>
    8cc0:	ldr	x0, [x19, #80]
    8cc4:	mov	w1, #0x1                   	// #1
    8cc8:	mov	w2, #0x1bf8                	// #7160
    8ccc:	blr	x8
    8cd0:	cbz	x0, 8d4c <inflateInit_@@Base+0xd4>
    8cd4:	mov	w8, #0x3f34                	// #16180
    8cd8:	mov	x21, x0
    8cdc:	str	x0, [x19, #56]
    8ce0:	str	x19, [x0]
    8ce4:	str	xzr, [x0, #72]
    8ce8:	str	w8, [x0, #8]
    8cec:	mov	w1, #0xf                   	// #15
    8cf0:	mov	x0, x19
    8cf4:	bl	2580 <inflateReset2@plt>
    8cf8:	mov	w20, w0
    8cfc:	cbz	w0, 8d50 <inflateInit_@@Base+0xd8>
    8d00:	ldp	x8, x0, [x19, #72]
    8d04:	mov	x1, x21
    8d08:	blr	x8
    8d0c:	str	xzr, [x19, #56]
    8d10:	b	8d50 <inflateInit_@@Base+0xd8>
    8d14:	mov	w20, #0xfffffffa            	// #-6
    8d18:	b	8d50 <inflateInit_@@Base+0xd8>
    8d1c:	mov	w20, #0xfffffffe            	// #-2
    8d20:	b	8d50 <inflateInit_@@Base+0xd8>
    8d24:	adrp	x8, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    8d28:	add	x8, x8, #0x4b4
    8d2c:	str	x8, [x19, #64]
    8d30:	str	xzr, [x19, #80]
    8d34:	ldr	x9, [x19, #72]
    8d38:	cbnz	x9, 8cc0 <inflateInit_@@Base+0x48>
    8d3c:	adrp	x9, d000 <inflateCodesUsed@@ZLIB_1.2.9+0x1fd4>
    8d40:	add	x9, x9, #0x4bc
    8d44:	str	x9, [x19, #72]
    8d48:	b	8cc0 <inflateInit_@@Base+0x48>
    8d4c:	mov	w20, #0xfffffffc            	// #-4
    8d50:	mov	w0, w20
    8d54:	ldp	x20, x19, [sp, #32]
    8d58:	ldr	x21, [sp, #16]
    8d5c:	ldp	x29, x30, [sp], #48
    8d60:	ret

0000000000008d64 <inflatePrime@@ZLIB_1.2.2.4>:
    8d64:	cbz	x0, 8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8d68:	ldr	x8, [x0, #64]
    8d6c:	cbz	x8, 8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8d70:	ldr	x8, [x0, #72]
    8d74:	cbz	x8, 8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8d78:	ldr	x8, [x0, #56]
    8d7c:	cbz	x8, 8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8d80:	ldr	x9, [x8]
    8d84:	cmp	x9, x0
    8d88:	b.ne	8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>  // b.any
    8d8c:	ldr	w9, [x8, #8]
    8d90:	mov	w10, #0xffffc0cc            	// #-16180
    8d94:	add	w9, w9, w10
    8d98:	cmp	w9, #0x1f
    8d9c:	b.hi	8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>  // b.pmore
    8da0:	tbnz	w1, #31, 8dc4 <inflatePrime@@ZLIB_1.2.2.4+0x60>
    8da4:	cmp	w1, #0x10
    8da8:	b.gt	8dbc <inflatePrime@@ZLIB_1.2.2.4+0x58>
    8dac:	ldr	w10, [x8, #88]
    8db0:	add	w9, w10, w1
    8db4:	cmp	w9, #0x20
    8db8:	b.ls	8dd4 <inflatePrime@@ZLIB_1.2.2.4+0x70>  // b.plast
    8dbc:	mov	w0, #0xfffffffe            	// #-2
    8dc0:	ret
    8dc4:	mov	w0, wzr
    8dc8:	str	xzr, [x8, #80]
    8dcc:	str	wzr, [x8, #88]
    8dd0:	ret
    8dd4:	mov	x11, #0xffffffffffffffff    	// #-1
    8dd8:	ldr	x12, [x8, #80]
    8ddc:	lsl	x11, x11, x1
    8de0:	bic	w11, w2, w11
    8de4:	lsl	w10, w11, w10
    8de8:	mov	w0, wzr
    8dec:	add	x10, x12, x10
    8df0:	str	x10, [x8, #80]
    8df4:	str	w9, [x8, #88]
    8df8:	ret

0000000000008dfc <inflate@@Base>:
    8dfc:	sub	sp, sp, #0xd0
    8e00:	stp	x29, x30, [sp, #112]
    8e04:	stp	x28, x27, [sp, #128]
    8e08:	stp	x26, x25, [sp, #144]
    8e0c:	stp	x24, x23, [sp, #160]
    8e10:	stp	x22, x21, [sp, #176]
    8e14:	stp	x20, x19, [sp, #192]
    8e18:	add	x29, sp, #0x70
    8e1c:	cbz	x0, a4f4 <inflate@@Base+0x16f8>
    8e20:	ldr	x8, [x0, #64]
    8e24:	mov	x19, x0
    8e28:	cbz	x8, a4f4 <inflate@@Base+0x16f8>
    8e2c:	ldr	x8, [x19, #72]
    8e30:	cbz	x8, a4f4 <inflate@@Base+0x16f8>
    8e34:	ldr	x27, [x19, #56]
    8e38:	cbz	x27, a4f4 <inflate@@Base+0x16f8>
    8e3c:	ldr	x8, [x27]
    8e40:	cmp	x8, x19
    8e44:	b.ne	a4f4 <inflate@@Base+0x16f8>  // b.any
    8e48:	mov	x23, x27
    8e4c:	ldr	w8, [x23, #8]!
    8e50:	mov	w9, #0xffffc0cc            	// #-16180
    8e54:	add	w9, w8, w9
    8e58:	cmp	w9, #0x1f
    8e5c:	b.hi	a4f4 <inflate@@Base+0x16f8>  // b.pmore
    8e60:	ldr	x28, [x19, #24]
    8e64:	cbz	x28, a4f4 <inflate@@Base+0x16f8>
    8e68:	ldr	x22, [x19]
    8e6c:	mov	w20, w1
    8e70:	cbz	x22, a4ec <inflate@@Base+0x16f0>
    8e74:	mov	w9, #0x3f3f                	// #16191
    8e78:	cmp	w8, w9
    8e7c:	b.ne	8e88 <inflate@@Base+0x8c>  // b.any
    8e80:	mov	w8, #0x3f40                	// #16192
    8e84:	str	w8, [x23]
    8e88:	add	x9, x27, #0x20
    8e8c:	stur	x9, [x29, #-16]
    8e90:	add	x9, x27, #0x558
    8e94:	str	x9, [sp, #40]
    8e98:	add	x9, x27, #0x90
    8e9c:	ldr	w10, [x19, #8]
    8ea0:	str	x9, [sp, #56]
    8ea4:	add	x9, x27, #0x78
    8ea8:	ldr	w0, [x19, #32]
    8eac:	ldr	x25, [x27, #80]
    8eb0:	ldr	w21, [x27, #88]
    8eb4:	str	x9, [sp, #32]
    8eb8:	add	x9, x27, #0x98
    8ebc:	str	x9, [sp, #24]
    8ec0:	add	x9, x27, #0x318
    8ec4:	str	x9, [sp, #48]
    8ec8:	add	x9, x27, #0x7c
    8ecc:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8ed0:	str	x9, [sp, #8]
    8ed4:	sub	w9, w20, #0x5
    8ed8:	mov	w1, #0xffffc0cc            	// #-16180
    8edc:	add	x3, x3, #0x758
    8ee0:	mov	w24, w10
    8ee4:	stur	wzr, [x29, #-24]
    8ee8:	stur	w9, [x29, #-44]
    8eec:	stur	w10, [x29, #-28]
    8ef0:	stur	w0, [x29, #-20]
    8ef4:	add	w8, w8, w1
    8ef8:	cmp	w8, #0x1e
    8efc:	b.hi	a4f4 <inflate@@Base+0x16f8>  // b.pmore
    8f00:	adr	x9, 8f1c <inflate@@Base+0x120>
    8f04:	ldrh	w10, [x3, x8, lsl #1]
    8f08:	add	x9, x9, x10, lsl #2
    8f0c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    8f10:	mov	w26, #0x1                   	// #1
    8f14:	add	x8, x8, #0x79e
    8f18:	br	x9
    8f1c:	ldr	w8, [x27, #16]
    8f20:	cbz	w8, 974c <inflate@@Base+0x950>
    8f24:	cmp	w21, #0xf
    8f28:	b.hi	8f54 <inflate@@Base+0x158>  // b.pmore
    8f2c:	mov	w9, w21
    8f30:	cbz	w24, a52c <inflate@@Base+0x1730>
    8f34:	ldrb	w10, [x22], #1
    8f38:	add	x21, x9, #0x8
    8f3c:	sub	w24, w24, #0x1
    8f40:	cmp	x9, #0x8
    8f44:	lsl	x10, x10, x9
    8f48:	add	x25, x10, x25
    8f4c:	mov	x9, x21
    8f50:	b.cc	8f30 <inflate@@Base+0x134>  // b.lo, b.ul, b.last
    8f54:	tbz	w8, #1, 97f4 <inflate@@Base+0x9f8>
    8f58:	mov	w9, #0x8b1f                	// #35615
    8f5c:	cmp	x25, x9
    8f60:	b.ne	97f4 <inflate@@Base+0x9f8>  // b.any
    8f64:	ldr	w8, [x27, #56]
    8f68:	str	w0, [sp, #4]
    8f6c:	cbnz	w8, 8f78 <inflate@@Base+0x17c>
    8f70:	mov	w8, #0xf                   	// #15
    8f74:	str	w8, [x27, #56]
    8f78:	mov	x0, xzr
    8f7c:	mov	x1, xzr
    8f80:	mov	w2, wzr
    8f84:	bl	23b0 <crc32@plt>
    8f88:	ldur	x26, [x29, #-16]
    8f8c:	mov	w8, #0x8b1f                	// #35615
    8f90:	sub	x1, x29, #0x4
    8f94:	mov	w2, #0x2                   	// #2
    8f98:	str	x0, [x26]
    8f9c:	sturh	w8, [x29, #-4]
    8fa0:	bl	23b0 <crc32@plt>
    8fa4:	str	x0, [x26]
    8fa8:	ldr	w0, [sp, #4]
    8fac:	mov	w8, #0x3f35                	// #16181
    8fb0:	mov	x25, xzr
    8fb4:	mov	w21, wzr
    8fb8:	str	w8, [x23]
    8fbc:	b	9d9c <inflate@@Base+0xfa0>
    8fc0:	cmp	w21, #0xf
    8fc4:	b.hi	8ff0 <inflate@@Base+0x1f4>  // b.pmore
    8fc8:	mov	w8, w21
    8fcc:	cbz	w24, a538 <inflate@@Base+0x173c>
    8fd0:	ldrb	w9, [x22], #1
    8fd4:	add	x21, x8, #0x8
    8fd8:	sub	w24, w24, #0x1
    8fdc:	cmp	x8, #0x8
    8fe0:	lsl	x9, x9, x8
    8fe4:	add	x25, x9, x25
    8fe8:	mov	x8, x21
    8fec:	b.cc	8fcc <inflate@@Base+0x1d0>  // b.lo, b.ul, b.last
    8ff0:	and	w8, w25, #0xff
    8ff4:	cmp	w8, #0x8
    8ff8:	str	w25, [x27, #24]
    8ffc:	b.ne	9754 <inflate@@Base+0x958>  // b.any
    9000:	tst	w25, #0xe000
    9004:	b.eq	989c <inflate@@Base+0xaa0>  // b.none
    9008:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    900c:	add	x8, x8, #0x8a
    9010:	b	a418 <inflate@@Base+0x161c>
    9014:	cmp	w21, #0x1f
    9018:	b.ls	98f8 <inflate@@Base+0xafc>  // b.plast
    901c:	b	991c <inflate@@Base+0xb20>
    9020:	cmp	w21, #0xf
    9024:	b.ls	9978 <inflate@@Base+0xb7c>  // b.plast
    9028:	b	999c <inflate@@Base+0xba0>
    902c:	cmp	w21, #0x1f
    9030:	b.hi	9058 <inflate@@Base+0x25c>  // b.pmore
    9034:	mov	w21, w21
    9038:	cbz	w24, a53c <inflate@@Base+0x1740>
    903c:	ldrb	w8, [x22], #1
    9040:	sub	w24, w24, #0x1
    9044:	cmp	x21, #0x18
    9048:	lsl	x8, x8, x21
    904c:	add	x21, x21, #0x8
    9050:	add	x25, x8, x25
    9054:	b.cc	9038 <inflate@@Base+0x23c>  // b.lo, b.ul, b.last
    9058:	lsr	x8, x25, #8
    905c:	lsl	w9, w25, #8
    9060:	and	x8, x8, #0xff00
    9064:	and	x9, x9, #0xff0000
    9068:	bfxil	x8, x25, #24, #8
    906c:	orr	x8, x8, x9
    9070:	ldur	x9, [x29, #-16]
    9074:	lsl	w10, w25, #24
    9078:	mov	w21, wzr
    907c:	mov	w11, #0x3f3e                	// #16190
    9080:	orr	x8, x8, x10
    9084:	mov	x25, xzr
    9088:	str	x8, [x9]
    908c:	str	x8, [x19, #96]
    9090:	str	w11, [x23]
    9094:	ldr	w8, [x27, #20]
    9098:	cbz	w8, a6b0 <inflate@@Base+0x18b4>
    909c:	mov	w26, w0
    90a0:	mov	x0, xzr
    90a4:	mov	x1, xzr
    90a8:	mov	w2, wzr
    90ac:	bl	24c0 <adler32@plt>
    90b0:	ldur	x8, [x29, #-16]
    90b4:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    90b8:	mov	w1, #0xffffc0cc            	// #-16180
    90bc:	add	x3, x3, #0x758
    90c0:	str	x0, [x8]
    90c4:	str	x0, [x19, #96]
    90c8:	mov	w0, w26
    90cc:	mov	w8, #0x3f3f                	// #16191
    90d0:	str	w8, [x23]
    90d4:	ldur	w8, [x29, #-44]
    90d8:	cmp	w8, #0x2
    90dc:	b.cc	a53c <inflate@@Base+0x1740>  // b.lo, b.ul, b.last
    90e0:	ldr	w8, [x27, #12]
    90e4:	cbz	w8, 9104 <inflate@@Base+0x308>
    90e8:	and	w8, w21, #0x7
    90ec:	mov	w9, #0x3f4e                	// #16206
    90f0:	and	w21, w21, #0xfffffff8
    90f4:	lsr	x25, x25, x8
    90f8:	str	w9, [x23]
    90fc:	mov	w8, w9
    9100:	b	8ef4 <inflate@@Base+0xf8>
    9104:	cmp	w21, #0x2
    9108:	b.hi	9128 <inflate@@Base+0x32c>  // b.pmore
    910c:	cbz	w24, a53c <inflate@@Base+0x1740>
    9110:	ldrb	w8, [x22], #1
    9114:	add	w9, w21, #0x8
    9118:	sub	w24, w24, #0x1
    911c:	lsl	x8, x8, x21
    9120:	add	x25, x8, x25
    9124:	mov	w21, w9
    9128:	adrp	x10, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    912c:	and	w8, w25, #0x1
    9130:	ubfx	w9, w25, #1, #2
    9134:	add	x10, x10, #0x796
    9138:	str	w8, [x27, #12]
    913c:	adr	x11, 9150 <inflate@@Base+0x354>
    9140:	ldrh	w8, [x10, x9, lsl #1]
    9144:	add	x11, x11, x8, lsl #2
    9148:	mov	w8, #0x3f41                	// #16193
    914c:	br	x11
    9150:	adrp	x10, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    9154:	ldr	d0, [x10, #3392]
    9158:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    915c:	adrp	x9, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9160:	add	x8, x8, #0x7c4
    9164:	add	x9, x9, #0xfc4
    9168:	mov	w11, #0x3f47                	// #16199
    916c:	cmp	w20, #0x6
    9170:	stp	x8, x9, [x27, #104]
    9174:	str	d0, [x27, #120]
    9178:	str	w11, [x27, #8]
    917c:	b.ne	97d8 <inflate@@Base+0x9dc>  // b.any
    9180:	b	a6f4 <inflate@@Base+0x18f8>
    9184:	and	w8, w21, #0x7
    9188:	and	w21, w21, #0xfffffff8
    918c:	cmp	w21, #0x1f
    9190:	lsr	x25, x25, x8
    9194:	b.hi	91c0 <inflate@@Base+0x3c4>  // b.pmore
    9198:	mov	w8, w21
    919c:	cbz	w24, a538 <inflate@@Base+0x173c>
    91a0:	ldrb	w9, [x22], #1
    91a4:	add	x21, x8, #0x8
    91a8:	sub	w24, w24, #0x1
    91ac:	cmp	x8, #0x18
    91b0:	lsl	x9, x9, x8
    91b4:	add	x25, x9, x25
    91b8:	mov	x8, x21
    91bc:	b.cc	919c <inflate@@Base+0x3a0>  // b.lo, b.ul, b.last
    91c0:	lsr	x8, x25, #16
    91c4:	eor	x8, x8, #0xffff
    91c8:	cmp	x8, w25, uxth
    91cc:	b.ne	9760 <inflate@@Base+0x964>  // b.any
    91d0:	mov	w21, wzr
    91d4:	and	w8, w25, #0xffff
    91d8:	mov	w9, #0x3f42                	// #16194
    91dc:	cmp	w20, #0x6
    91e0:	mov	x25, xzr
    91e4:	str	w8, [x27, #92]
    91e8:	str	w9, [x27, #8]
    91ec:	b.eq	a53c <inflate@@Base+0x1740>  // b.none
    91f0:	mov	w8, #0x3f43                	// #16195
    91f4:	str	w8, [x23]
    91f8:	ldr	w8, [x27, #92]
    91fc:	cbz	w8, 9494 <inflate@@Base+0x698>
    9200:	cmp	w8, w24
    9204:	csel	w8, w24, w8, hi  // hi = pmore
    9208:	cmp	w8, w0
    920c:	stur	x23, [x29, #-40]
    9210:	csel	w23, w0, w8, hi  // hi = pmore
    9214:	cbz	w23, a6d0 <inflate@@Base+0x18d4>
    9218:	mov	w26, w23
    921c:	str	w0, [sp, #4]
    9220:	mov	x0, x28
    9224:	mov	x1, x22
    9228:	mov	x2, x26
    922c:	bl	2330 <memcpy@plt>
    9230:	ldr	w0, [sp, #4]
    9234:	ldr	w8, [x27, #92]
    9238:	sub	w24, w24, w23
    923c:	add	x22, x22, x26
    9240:	sub	w0, w0, w23
    9244:	sub	w8, w8, w23
    9248:	ldur	x23, [x29, #-40]
    924c:	add	x28, x28, x26
    9250:	str	w8, [x27, #92]
    9254:	b	9d9c <inflate@@Base+0xfa0>
    9258:	cmp	w21, #0xd
    925c:	b.hi	9288 <inflate@@Base+0x48c>  // b.pmore
    9260:	mov	w9, w21
    9264:	cbz	w24, a52c <inflate@@Base+0x1730>
    9268:	ldrb	w10, [x22], #1
    926c:	add	x21, x9, #0x8
    9270:	sub	w24, w24, #0x1
    9274:	cmp	x9, #0x6
    9278:	lsl	x10, x10, x9
    927c:	add	x25, x10, x25
    9280:	mov	x9, x21
    9284:	b.cc	9264 <inflate@@Base+0x468>  // b.lo, b.ul, b.last
    9288:	and	w11, w25, #0x1f
    928c:	ubfx	w10, w25, #5, #5
    9290:	ubfx	w9, w25, #10, #4
    9294:	lsr	x25, x25, #14
    9298:	add	w12, w11, #0x101
    929c:	add	w13, w10, #0x1
    92a0:	add	w9, w9, #0x4
    92a4:	cmp	w11, #0x1d
    92a8:	sub	w21, w21, #0xe
    92ac:	stp	w12, w13, [x27, #132]
    92b0:	str	w9, [x27, #128]
    92b4:	b.hi	976c <inflate@@Base+0x970>  // b.pmore
    92b8:	cmp	w10, #0x1e
    92bc:	b.cs	976c <inflate@@Base+0x970>  // b.hs, b.nlast
    92c0:	mov	w11, #0x3f45                	// #16197
    92c4:	mov	w10, wzr
    92c8:	str	wzr, [x27, #140]
    92cc:	str	w11, [x27, #8]
    92d0:	b	92e4 <inflate@@Base+0x4e8>
    92d4:	ldr	w10, [x27, #140]
    92d8:	ldr	w9, [x27, #128]
    92dc:	cmp	w10, w9
    92e0:	b.cs	933c <inflate@@Base+0x540>  // b.hs, b.nlast
    92e4:	mov	w10, w10
    92e8:	b	932c <inflate@@Base+0x530>
    92ec:	ldrb	w11, [x22], #1
    92f0:	add	w12, w21, #0x8
    92f4:	sub	w24, w24, #0x1
    92f8:	lsl	x11, x11, x21
    92fc:	add	x25, x11, x25
    9300:	mov	w21, w12
    9304:	ldrh	w12, [x8, x10, lsl #1]
    9308:	add	x10, x10, #0x1
    930c:	and	w11, w25, #0x7
    9310:	lsr	x25, x25, #3
    9314:	cmp	w10, w9
    9318:	add	x12, x27, x12, lsl #1
    931c:	sub	w21, w21, #0x3
    9320:	str	w10, [x27, #140]
    9324:	strh	w11, [x12, #152]
    9328:	b.cs	933c <inflate@@Base+0x540>  // b.hs, b.nlast
    932c:	cmp	w21, #0x2
    9330:	b.hi	9304 <inflate@@Base+0x508>  // b.pmore
    9334:	cbnz	w24, 92ec <inflate@@Base+0x4f0>
    9338:	b	a53c <inflate@@Base+0x1740>
    933c:	mov	w26, w0
    9340:	cmp	w10, #0x12
    9344:	b.hi	9368 <inflate@@Base+0x56c>  // b.pmore
    9348:	mov	w9, w10
    934c:	ldrh	w10, [x8, x9, lsl #1]
    9350:	cmp	x9, #0x12
    9354:	add	x9, x9, #0x1
    9358:	add	x10, x27, x10, lsl #1
    935c:	strh	wzr, [x10, #152]
    9360:	b.cc	934c <inflate@@Base+0x550>  // b.lo, b.ul, b.last
    9364:	str	w9, [x27, #140]
    9368:	ldp	x4, x8, [sp, #32]
    936c:	ldr	x1, [sp, #24]
    9370:	mov	w2, #0x13                  	// #19
    9374:	mov	w0, wzr
    9378:	str	x8, [x27, #144]
    937c:	str	x8, [x27, #104]
    9380:	mov	w8, #0x7                   	// #7
    9384:	str	w8, [x27, #120]
    9388:	ldp	x5, x3, [sp, #48]
    938c:	bl	b084 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9390:	cbz	w0, 949c <inflate@@Base+0x6a0>
    9394:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9398:	stur	w0, [x29, #-24]
    939c:	add	x8, x8, #0x66c
    93a0:	b	988c <inflate@@Base+0xa90>
    93a4:	ldr	w10, [x27, #140]
    93a8:	b	94c0 <inflate@@Base+0x6c4>
    93ac:	ldr	w8, [x27, #100]
    93b0:	cbz	w8, a0ac <inflate@@Base+0x12b0>
    93b4:	cmp	w21, w8
    93b8:	b.cs	9778 <inflate@@Base+0x97c>  // b.hs, b.nlast
    93bc:	mov	w11, w21
    93c0:	mov	w9, w24
    93c4:	mov	x10, x22
    93c8:	cbz	w9, a518 <inflate@@Base+0x171c>
    93cc:	ldrb	w12, [x10], #1
    93d0:	sub	w9, w9, #0x1
    93d4:	lsl	x12, x12, x11
    93d8:	add	w11, w11, #0x8
    93dc:	cmp	w11, w8
    93e0:	add	x25, x12, x25
    93e4:	b.cc	93c8 <inflate@@Base+0x5cc>  // b.lo, b.ul, b.last
    93e8:	b	9784 <inflate@@Base+0x988>
    93ec:	ldr	w8, [x27, #100]
    93f0:	b	a214 <inflate@@Base+0x1418>
    93f4:	cbz	w0, a53c <inflate@@Base+0x1740>
    93f8:	ldr	w8, [x27, #92]
    93fc:	mov	w9, #0x3f48                	// #16200
    9400:	sub	w0, w0, #0x1
    9404:	strb	w8, [x28], #1
    9408:	str	w9, [x27, #8]
    940c:	ldr	w8, [x23]
    9410:	b	8ef4 <inflate@@Base+0xf8>
    9414:	ldr	w8, [x27, #16]
    9418:	cbz	w8, 9e2c <inflate@@Base+0x1030>
    941c:	cmp	w21, #0x1f
    9420:	b.hi	944c <inflate@@Base+0x650>  // b.pmore
    9424:	mov	w9, w21
    9428:	cbz	w24, a52c <inflate@@Base+0x1730>
    942c:	ldrb	w10, [x22], #1
    9430:	add	x21, x9, #0x8
    9434:	sub	w24, w24, #0x1
    9438:	cmp	x9, #0x18
    943c:	lsl	x10, x10, x9
    9440:	add	x25, x10, x25
    9444:	mov	x9, x21
    9448:	b.cc	9428 <inflate@@Base+0x62c>  // b.lo, b.ul, b.last
    944c:	ldur	w10, [x29, #-20]
    9450:	ldr	x9, [x19, #40]
    9454:	and	w8, w8, #0x4
    9458:	subs	w2, w10, w0
    945c:	add	x9, x9, x2
    9460:	str	x9, [x19, #40]
    9464:	ldr	x9, [x27, #40]
    9468:	add	x9, x9, x2
    946c:	str	x9, [x27, #40]
    9470:	b.eq	9de0 <inflate@@Base+0xfe4>  // b.none
    9474:	cbz	w8, 9de0 <inflate@@Base+0xfe4>
    9478:	mov	w26, w0
    947c:	ldr	w8, [x27, #24]
    9480:	ldr	x0, [x27, #32]
    9484:	sub	x1, x28, x2
    9488:	cbz	w8, 9dbc <inflate@@Base+0xfc0>
    948c:	bl	23b0 <crc32@plt>
    9490:	b	9dc0 <inflate@@Base+0xfc4>
    9494:	mov	w8, #0x3f3f                	// #16191
    9498:	b	a3ec <inflate@@Base+0x15f0>
    949c:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    94a0:	mov	w10, wzr
    94a4:	mov	w8, #0x3f46                	// #16198
    94a8:	mov	w0, w26
    94ac:	mov	w1, #0xffffc0cc            	// #-16180
    94b0:	add	x3, x3, #0x758
    94b4:	stur	wzr, [x29, #-24]
    94b8:	str	wzr, [x27, #140]
    94bc:	str	w8, [x27, #8]
    94c0:	ldp	w2, w8, [x27, #132]
    94c4:	add	w8, w8, w2
    94c8:	cmp	w10, w8
    94cc:	b.cs	9708 <inflate@@Base+0x90c>  // b.hs, b.nlast
    94d0:	ldr	w11, [x27, #120]
    94d4:	ldr	x9, [x27, #104]
    94d8:	mov	w12, #0xffffffff            	// #-1
    94dc:	lsl	w11, w12, w11
    94e0:	mvn	w11, w11
    94e4:	and	w16, w11, w25
    94e8:	add	x12, x9, w16, uxtw #2
    94ec:	ldrb	w12, [x12, #1]
    94f0:	cmp	w21, w12
    94f4:	b.cs	9540 <inflate@@Base+0x744>  // b.hs, b.nlast
    94f8:	mov	w13, w21
    94fc:	mov	w14, w24
    9500:	mov	x15, x22
    9504:	cbz	w14, a518 <inflate@@Base+0x171c>
    9508:	ldrb	w12, [x15], #1
    950c:	sub	w14, w14, #0x1
    9510:	lsl	x12, x12, x13
    9514:	add	x25, x12, x25
    9518:	and	w16, w11, w25
    951c:	add	x12, x9, w16, uxtw #2
    9520:	ldrb	w12, [x12, #1]
    9524:	add	x13, x13, #0x8
    9528:	cmp	x13, x12
    952c:	b.cc	9504 <inflate@@Base+0x708>  // b.lo, b.ul, b.last
    9530:	mov	w16, w16
    9534:	mov	x22, x15
    9538:	mov	w24, w14
    953c:	mov	w21, w13
    9540:	add	x13, x9, x16, lsl #2
    9544:	ldrh	w13, [x13, #2]
    9548:	cmp	w13, #0xf
    954c:	b.hi	956c <inflate@@Base+0x770>  // b.pmore
    9550:	lsr	x25, x25, x12
    9554:	sub	w21, w21, w12
    9558:	add	x12, x27, w10, uxtw #1
    955c:	add	w10, w10, #0x1
    9560:	str	w10, [x27, #140]
    9564:	strh	w13, [x12, #152]
    9568:	b	96c4 <inflate@@Base+0x8c8>
    956c:	cmp	w13, #0x10
    9570:	b.eq	95cc <inflate@@Base+0x7d0>  // b.none
    9574:	cmp	w13, #0x11
    9578:	b.ne	9628 <inflate@@Base+0x82c>  // b.any
    957c:	add	w13, w12, #0x3
    9580:	cmp	w21, w13
    9584:	b.cs	95ac <inflate@@Base+0x7b0>  // b.hs, b.nlast
    9588:	mov	w21, w21
    958c:	cbz	w24, a53c <inflate@@Base+0x1740>
    9590:	ldrb	w14, [x22], #1
    9594:	sub	w24, w24, #0x1
    9598:	lsl	x14, x14, x21
    959c:	add	x21, x21, #0x8
    95a0:	cmp	x21, x13
    95a4:	add	x25, x14, x25
    95a8:	b.cc	958c <inflate@@Base+0x790>  // b.lo, b.ul, b.last
    95ac:	lsr	x14, x25, x12
    95b0:	sub	w15, w21, w12
    95b4:	and	w12, w14, #0x7
    95b8:	mov	w13, wzr
    95bc:	lsr	x25, x14, #3
    95c0:	add	w12, w12, #0x3
    95c4:	sub	w21, w15, #0x3
    95c8:	b	9674 <inflate@@Base+0x878>
    95cc:	add	w13, w12, #0x2
    95d0:	cmp	w21, w13
    95d4:	b.cs	95fc <inflate@@Base+0x800>  // b.hs, b.nlast
    95d8:	mov	w21, w21
    95dc:	cbz	w24, a53c <inflate@@Base+0x1740>
    95e0:	ldrb	w14, [x22], #1
    95e4:	sub	w24, w24, #0x1
    95e8:	lsl	x14, x14, x21
    95ec:	add	x21, x21, #0x8
    95f0:	cmp	x21, x13
    95f4:	add	x25, x14, x25
    95f8:	b.cc	95dc <inflate@@Base+0x7e0>  // b.lo, b.ul, b.last
    95fc:	lsr	x25, x25, x12
    9600:	sub	w21, w21, w12
    9604:	cbz	w10, a4b8 <inflate@@Base+0x16bc>
    9608:	sub	w12, w10, #0x1
    960c:	add	x12, x27, w12, uxtw #1
    9610:	ldrh	w13, [x12, #152]
    9614:	and	w12, w25, #0x3
    9618:	add	w12, w12, #0x3
    961c:	lsr	x25, x25, #2
    9620:	sub	w21, w21, #0x2
    9624:	b	9674 <inflate@@Base+0x878>
    9628:	add	w13, w12, #0x7
    962c:	cmp	w21, w13
    9630:	b.cs	9658 <inflate@@Base+0x85c>  // b.hs, b.nlast
    9634:	mov	w21, w21
    9638:	cbz	w24, a53c <inflate@@Base+0x1740>
    963c:	ldrb	w14, [x22], #1
    9640:	sub	w24, w24, #0x1
    9644:	lsl	x14, x14, x21
    9648:	add	x21, x21, #0x8
    964c:	cmp	x21, x13
    9650:	add	x25, x14, x25
    9654:	b.cc	9638 <inflate@@Base+0x83c>  // b.lo, b.ul, b.last
    9658:	lsr	x14, x25, x12
    965c:	sub	w15, w21, w12
    9660:	and	w12, w14, #0x7f
    9664:	mov	w13, wzr
    9668:	lsr	x25, x14, #7
    966c:	add	w12, w12, #0xb
    9670:	sub	w21, w15, #0x7
    9674:	add	w14, w12, w10
    9678:	cmp	w14, w8
    967c:	b.hi	a4b8 <inflate@@Base+0x16bc>  // b.pmore
    9680:	cmp	w12, #0xf
    9684:	b.ls	9698 <inflate@@Base+0x89c>  // b.plast
    9688:	sub	w14, w12, #0x1
    968c:	mvn	w15, w10
    9690:	cmp	w14, w15
    9694:	b.ls	96d0 <inflate@@Base+0x8d4>  // b.plast
    9698:	mov	w15, w10
    969c:	mov	w14, w12
    96a0:	mov	w10, w15
    96a4:	add	w15, w10, #0x1
    96a8:	add	x10, x27, w10, uxtw #1
    96ac:	subs	w14, w14, #0x1
    96b0:	strh	w13, [x10, #152]
    96b4:	mov	w10, w15
    96b8:	b.ne	96a4 <inflate@@Base+0x8a8>  // b.any
    96bc:	mov	w10, w15
    96c0:	str	w15, [x27, #140]
    96c4:	cmp	w10, w8
    96c8:	b.cc	94e4 <inflate@@Base+0x6e8>  // b.lo, b.ul, b.last
    96cc:	b	9708 <inflate@@Base+0x90c>
    96d0:	and	w16, w12, #0xf0
    96d4:	and	w14, w12, #0xf
    96d8:	add	w15, w10, w16
    96dc:	dup	v0.8h, w13
    96e0:	mov	w17, w16
    96e4:	add	x18, x27, w10, uxtw #1
    96e8:	subs	w17, w17, #0x10
    96ec:	add	w10, w10, #0x10
    96f0:	stur	q0, [x18, #152]
    96f4:	stur	q0, [x18, #168]
    96f8:	b.ne	96e4 <inflate@@Base+0x8e8>  // b.any
    96fc:	cmp	w12, w16
    9700:	b.ne	96a0 <inflate@@Base+0x8a4>  // b.any
    9704:	b	96bc <inflate@@Base+0x8c0>
    9708:	ldrh	w8, [x27, #664]
    970c:	cbz	w8, 97e8 <inflate@@Base+0x9ec>
    9710:	ldp	x4, x8, [sp, #32]
    9714:	ldr	x1, [sp, #24]
    9718:	mov	w26, w0
    971c:	mov	w0, #0x1                   	// #1
    9720:	str	x8, [x27, #144]
    9724:	str	x8, [x27, #104]
    9728:	mov	w8, #0x9                   	// #9
    972c:	str	w8, [x27, #120]
    9730:	ldp	x5, x3, [sp, #48]
    9734:	bl	b084 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    9738:	cbz	w0, 9850 <inflate@@Base+0xa54>
    973c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9740:	stur	w0, [x29, #-24]
    9744:	add	x8, x8, #0x6c4
    9748:	b	988c <inflate@@Base+0xa90>
    974c:	mov	w8, #0x3f40                	// #16192
    9750:	b	a3ec <inflate@@Base+0x15f0>
    9754:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    9758:	add	x8, x8, #0x5b
    975c:	b	a418 <inflate@@Base+0x161c>
    9760:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9764:	add	x8, x8, #0x62b
    9768:	b	a418 <inflate@@Base+0x161c>
    976c:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9770:	add	x8, x8, #0x648
    9774:	b	a418 <inflate@@Base+0x161c>
    9778:	mov	x10, x22
    977c:	mov	w9, w24
    9780:	mov	w11, w21
    9784:	ldr	w13, [x27, #92]
    9788:	ldr	w14, [x27, #7148]
    978c:	mov	w12, #0xffffffff            	// #-1
    9790:	sub	w21, w11, w8
    9794:	lsl	w11, w12, w8
    9798:	bic	w11, w25, w11
    979c:	lsr	x25, x25, x8
    97a0:	add	w11, w13, w11
    97a4:	add	w8, w14, w8
    97a8:	mov	x22, x10
    97ac:	mov	w24, w9
    97b0:	str	w11, [x27, #92]
    97b4:	str	w8, [x27, #7148]
    97b8:	b	a0b0 <inflate@@Base+0x12b4>
    97bc:	mov	w8, #0x3f44                	// #16196
    97c0:	b	97d4 <inflate@@Base+0x9d8>
    97c4:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    97c8:	add	x8, x8, #0x618
    97cc:	str	x8, [x19, #48]
    97d0:	mov	w8, #0x3f51                	// #16209
    97d4:	str	w8, [x23]
    97d8:	ldr	w8, [x23]
    97dc:	lsr	x25, x25, #3
    97e0:	sub	w21, w21, #0x3
    97e4:	b	8ef4 <inflate@@Base+0xf8>
    97e8:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    97ec:	add	x8, x8, #0x69f
    97f0:	b	a418 <inflate@@Base+0x161c>
    97f4:	ldr	x9, [x27, #48]
    97f8:	str	wzr, [x27, #24]
    97fc:	cbz	x9, 9808 <inflate@@Base+0xa0c>
    9800:	mov	w10, #0xffffffff            	// #-1
    9804:	str	w10, [x9, #72]
    9808:	tbz	w8, #0, 9844 <inflate@@Base+0xa48>
    980c:	mov	x9, #0x7bdf                	// #31711
    9810:	lsl	w8, w25, #8
    9814:	movk	x9, #0xbdef, lsl #16
    9818:	movk	x9, #0xdef7, lsl #32
    981c:	and	x8, x8, #0xff00
    9820:	movk	x9, #0xef7b, lsl #48
    9824:	add	x8, x8, x25, lsr #8
    9828:	mul	x8, x8, x9
    982c:	mov	x9, #0x4211                	// #16913
    9830:	movk	x9, #0x2108, lsl #16
    9834:	movk	x9, #0x1084, lsl #32
    9838:	movk	x9, #0x842, lsl #48
    983c:	cmp	x8, x9
    9840:	b.cc	a42c <inflate@@Base+0x1630>  // b.lo, b.ul, b.last
    9844:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    9848:	add	x8, x8, #0x44
    984c:	b	a418 <inflate@@Base+0x161c>
    9850:	ldr	x8, [x27, #144]
    9854:	mov	w9, #0x6                   	// #6
    9858:	ldp	w10, w2, [x27, #132]
    985c:	str	w9, [x27, #124]
    9860:	str	x8, [x27, #112]
    9864:	ldp	x5, x3, [sp, #48]
    9868:	ldr	x4, [sp, #8]
    986c:	add	x8, x27, x10, lsl #1
    9870:	add	x1, x8, #0x98
    9874:	mov	w0, #0x2                   	// #2
    9878:	bl	b084 <inflateCodesUsed@@ZLIB_1.2.9+0x58>
    987c:	stur	w0, [x29, #-24]
    9880:	cbz	w0, 9eac <inflate@@Base+0x10b0>
    9884:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9888:	add	x8, x8, #0x6e0
    988c:	mov	w9, #0x3f51                	// #16209
    9890:	str	x8, [x19, #48]
    9894:	str	w9, [x23]
    9898:	b	9d98 <inflate@@Base+0xf9c>
    989c:	ldr	x8, [x27, #48]
    98a0:	cbz	x8, 98ac <inflate@@Base+0xab0>
    98a4:	ubfx	w9, w25, #8, #1
    98a8:	str	w9, [x8]
    98ac:	tbz	w25, #9, 98e8 <inflate@@Base+0xaec>
    98b0:	ldrb	w8, [x27, #16]
    98b4:	tbz	w8, #2, 98e8 <inflate@@Base+0xaec>
    98b8:	sturh	w25, [x29, #-4]
    98bc:	ldur	x25, [x29, #-16]
    98c0:	mov	w21, w0
    98c4:	sub	x1, x29, #0x4
    98c8:	mov	w2, #0x2                   	// #2
    98cc:	ldr	x0, [x25]
    98d0:	bl	23b0 <crc32@plt>
    98d4:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    98d8:	add	x3, x3, #0x758
    98dc:	mov	w1, #0xffffc0cc            	// #-16180
    98e0:	str	x0, [x25]
    98e4:	mov	w0, w21
    98e8:	mov	w8, #0x3f36                	// #16182
    98ec:	mov	w21, wzr
    98f0:	mov	x25, xzr
    98f4:	str	w8, [x23]
    98f8:	mov	w21, w21
    98fc:	cbz	w24, a53c <inflate@@Base+0x1740>
    9900:	ldrb	w8, [x22], #1
    9904:	sub	w24, w24, #0x1
    9908:	cmp	x21, #0x18
    990c:	lsl	x8, x8, x21
    9910:	add	x21, x21, #0x8
    9914:	add	x25, x8, x25
    9918:	b.cc	98fc <inflate@@Base+0xb00>  // b.lo, b.ul, b.last
    991c:	ldr	x8, [x27, #48]
    9920:	cbz	x8, 9928 <inflate@@Base+0xb2c>
    9924:	str	x25, [x8, #8]
    9928:	ldrb	w8, [x27, #25]
    992c:	tbz	w8, #1, 9968 <inflate@@Base+0xb6c>
    9930:	ldrb	w8, [x27, #16]
    9934:	tbz	w8, #2, 9968 <inflate@@Base+0xb6c>
    9938:	stur	w25, [x29, #-4]
    993c:	ldur	x25, [x29, #-16]
    9940:	mov	w21, w0
    9944:	sub	x1, x29, #0x4
    9948:	mov	w2, #0x4                   	// #4
    994c:	ldr	x0, [x25]
    9950:	bl	23b0 <crc32@plt>
    9954:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9958:	add	x3, x3, #0x758
    995c:	mov	w1, #0xffffc0cc            	// #-16180
    9960:	str	x0, [x25]
    9964:	mov	w0, w21
    9968:	mov	w8, #0x3f37                	// #16183
    996c:	mov	w21, wzr
    9970:	mov	x25, xzr
    9974:	str	w8, [x23]
    9978:	mov	w21, w21
    997c:	cbz	w24, a53c <inflate@@Base+0x1740>
    9980:	ldrb	w8, [x22], #1
    9984:	sub	w24, w24, #0x1
    9988:	cmp	x21, #0x8
    998c:	lsl	x8, x8, x21
    9990:	add	x21, x21, #0x8
    9994:	add	x25, x8, x25
    9998:	b.cc	997c <inflate@@Base+0xb80>  // b.lo, b.ul, b.last
    999c:	ldr	x8, [x27, #48]
    99a0:	cbz	x8, 99b0 <inflate@@Base+0xbb4>
    99a4:	and	w9, w25, #0xff
    99a8:	lsr	x10, x25, #8
    99ac:	stp	w9, w10, [x8, #16]
    99b0:	ldrb	w8, [x27, #25]
    99b4:	tbz	w8, #1, 99f0 <inflate@@Base+0xbf4>
    99b8:	ldrb	w8, [x27, #16]
    99bc:	tbz	w8, #2, 99f0 <inflate@@Base+0xbf4>
    99c0:	sturh	w25, [x29, #-4]
    99c4:	ldur	x25, [x29, #-16]
    99c8:	mov	w21, w0
    99cc:	sub	x1, x29, #0x4
    99d0:	mov	w2, #0x2                   	// #2
    99d4:	ldr	x0, [x25]
    99d8:	bl	23b0 <crc32@plt>
    99dc:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    99e0:	add	x3, x3, #0x758
    99e4:	mov	w1, #0xffffc0cc            	// #-16180
    99e8:	str	x0, [x25]
    99ec:	mov	w0, w21
    99f0:	mov	x25, xzr
    99f4:	mov	w21, wzr
    99f8:	mov	w8, #0x3f38                	// #16184
    99fc:	str	w8, [x23]
    9a00:	ldr	w8, [x27, #24]
    9a04:	tbnz	w8, #10, 9a18 <inflate@@Base+0xc1c>
    9a08:	ldr	x8, [x27, #48]
    9a0c:	cbz	x8, 9a98 <inflate@@Base+0xc9c>
    9a10:	str	xzr, [x8, #24]
    9a14:	b	9a98 <inflate@@Base+0xc9c>
    9a18:	cmp	w21, #0xf
    9a1c:	b.hi	9a44 <inflate@@Base+0xc48>  // b.pmore
    9a20:	mov	w21, w21
    9a24:	cbz	w24, a53c <inflate@@Base+0x1740>
    9a28:	ldrb	w9, [x22], #1
    9a2c:	sub	w24, w24, #0x1
    9a30:	cmp	x21, #0x8
    9a34:	lsl	x9, x9, x21
    9a38:	add	x21, x21, #0x8
    9a3c:	add	x25, x9, x25
    9a40:	b.cc	9a24 <inflate@@Base+0xc28>  // b.lo, b.ul, b.last
    9a44:	ldr	x9, [x27, #48]
    9a48:	str	w25, [x27, #92]
    9a4c:	cbz	x9, 9a54 <inflate@@Base+0xc58>
    9a50:	str	w25, [x9, #32]
    9a54:	tbz	w8, #9, 9a90 <inflate@@Base+0xc94>
    9a58:	ldrb	w8, [x27, #16]
    9a5c:	tbz	w8, #2, 9a90 <inflate@@Base+0xc94>
    9a60:	ldur	x26, [x29, #-16]
    9a64:	sturh	w25, [x29, #-4]
    9a68:	str	w0, [sp, #4]
    9a6c:	sub	x1, x29, #0x4
    9a70:	ldr	x0, [x26]
    9a74:	mov	w2, #0x2                   	// #2
    9a78:	bl	23b0 <crc32@plt>
    9a7c:	str	x0, [x26]
    9a80:	ldr	w0, [sp, #4]
    9a84:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9a88:	add	x3, x3, #0x758
    9a8c:	mov	w1, #0xffffc0cc            	// #-16180
    9a90:	mov	x25, xzr
    9a94:	mov	w21, wzr
    9a98:	mov	w8, #0x3f39                	// #16185
    9a9c:	str	w8, [x23]
    9aa0:	ldr	w9, [x27, #24]
    9aa4:	tbz	w9, #10, 9b64 <inflate@@Base+0xd68>
    9aa8:	ldr	w8, [x27, #92]
    9aac:	cmp	w8, w24
    9ab0:	csel	w26, w24, w8, hi  // hi = pmore
    9ab4:	cbz	w26, 9b60 <inflate@@Base+0xd64>
    9ab8:	ldr	x10, [x27, #48]
    9abc:	cbz	x10, 9b0c <inflate@@Base+0xd10>
    9ac0:	ldr	x11, [x10, #24]
    9ac4:	cbz	x11, 9b0c <inflate@@Base+0xd10>
    9ac8:	ldp	w9, w10, [x10, #32]
    9acc:	str	x28, [sp, #16]
    9ad0:	mov	w28, w0
    9ad4:	mov	x1, x22
    9ad8:	sub	w8, w9, w8
    9adc:	add	w9, w8, w26
    9ae0:	add	x0, x11, x8
    9ae4:	sub	w8, w10, w8
    9ae8:	cmp	w9, w10
    9aec:	csel	w2, w8, w26, hi  // hi = pmore
    9af0:	bl	2330 <memcpy@plt>
    9af4:	mov	w0, w28
    9af8:	ldr	x28, [sp, #16]
    9afc:	ldr	w9, [x27, #24]
    9b00:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9b04:	add	x3, x3, #0x758
    9b08:	mov	w1, #0xffffc0cc            	// #-16180
    9b0c:	tbz	w9, #9, 9b4c <inflate@@Base+0xd50>
    9b10:	ldrb	w8, [x27, #16]
    9b14:	tbz	w8, #2, 9b4c <inflate@@Base+0xd50>
    9b18:	str	x28, [sp, #16]
    9b1c:	ldur	x28, [x29, #-16]
    9b20:	str	w0, [sp, #4]
    9b24:	mov	x1, x22
    9b28:	mov	w2, w26
    9b2c:	ldr	x0, [x28]
    9b30:	bl	23b0 <crc32@plt>
    9b34:	str	x0, [x28]
    9b38:	ldr	w0, [sp, #4]
    9b3c:	ldr	x28, [sp, #16]
    9b40:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9b44:	add	x3, x3, #0x758
    9b48:	mov	w1, #0xffffc0cc            	// #-16180
    9b4c:	ldr	w8, [x27, #92]
    9b50:	sub	w24, w24, w26
    9b54:	add	x22, x22, w26, uxtw
    9b58:	sub	w8, w8, w26
    9b5c:	str	w8, [x27, #92]
    9b60:	cbnz	w8, a53c <inflate@@Base+0x1740>
    9b64:	mov	w8, #0x3f3a                	// #16186
    9b68:	str	wzr, [x27, #92]
    9b6c:	str	w8, [x27, #8]
    9b70:	ldrb	w8, [x27, #25]
    9b74:	tbnz	w8, #3, 9b88 <inflate@@Base+0xd8c>
    9b78:	ldr	x8, [x27, #48]
    9b7c:	cbz	x8, 9c30 <inflate@@Base+0xe34>
    9b80:	str	xzr, [x8, #40]
    9b84:	b	9c30 <inflate@@Base+0xe34>
    9b88:	cbz	w24, a53c <inflate@@Base+0x1740>
    9b8c:	stur	x23, [x29, #-40]
    9b90:	mov	x26, xzr
    9b94:	mov	w23, w24
    9b98:	str	x28, [sp, #16]
    9b9c:	ldr	x9, [x27, #48]
    9ba0:	ldrb	w28, [x22, x26]
    9ba4:	add	x26, x26, #0x1
    9ba8:	cbz	x9, 9bd0 <inflate@@Base+0xdd4>
    9bac:	ldr	x8, [x9, #40]
    9bb0:	cbz	x8, 9bd0 <inflate@@Base+0xdd4>
    9bb4:	ldr	w10, [x27, #92]
    9bb8:	ldr	w9, [x9, #48]
    9bbc:	cmp	w10, w9
    9bc0:	b.cs	9bd0 <inflate@@Base+0xdd4>  // b.hs, b.nlast
    9bc4:	add	w9, w10, #0x1
    9bc8:	str	w9, [x27, #92]
    9bcc:	strb	w28, [x8, x10]
    9bd0:	cbz	w28, 9bdc <inflate@@Base+0xde0>
    9bd4:	cmp	x26, x23
    9bd8:	b.cc	9b9c <inflate@@Base+0xda0>  // b.lo, b.ul, b.last
    9bdc:	ldrb	w8, [x27, #25]
    9be0:	tbz	w8, #1, 9c1c <inflate@@Base+0xe20>
    9be4:	ldrb	w8, [x27, #16]
    9be8:	tbz	w8, #2, 9c1c <inflate@@Base+0xe20>
    9bec:	ldur	x8, [x29, #-16]
    9bf0:	str	w0, [sp, #4]
    9bf4:	mov	x1, x22
    9bf8:	mov	w2, w26
    9bfc:	ldr	x0, [x8]
    9c00:	bl	23b0 <crc32@plt>
    9c04:	ldur	x8, [x29, #-16]
    9c08:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9c0c:	add	x3, x3, #0x758
    9c10:	mov	w1, #0xffffc0cc            	// #-16180
    9c14:	str	x0, [x8]
    9c18:	ldr	w0, [sp, #4]
    9c1c:	add	x22, x22, x26
    9c20:	cbnz	w28, a69c <inflate@@Base+0x18a0>
    9c24:	sub	x24, x23, x26
    9c28:	ldur	x23, [x29, #-40]
    9c2c:	ldr	x28, [sp, #16]
    9c30:	mov	w8, #0x3f3b                	// #16187
    9c34:	str	wzr, [x27, #92]
    9c38:	str	w8, [x27, #8]
    9c3c:	ldrb	w8, [x27, #25]
    9c40:	tbnz	w8, #4, 9c54 <inflate@@Base+0xe58>
    9c44:	ldr	x8, [x27, #48]
    9c48:	cbz	x8, 9cfc <inflate@@Base+0xf00>
    9c4c:	str	xzr, [x8, #56]
    9c50:	b	9cfc <inflate@@Base+0xf00>
    9c54:	cbz	w24, a53c <inflate@@Base+0x1740>
    9c58:	stur	x23, [x29, #-40]
    9c5c:	mov	x26, xzr
    9c60:	mov	w23, w24
    9c64:	str	x28, [sp, #16]
    9c68:	ldr	x9, [x27, #48]
    9c6c:	ldrb	w28, [x22, x26]
    9c70:	add	x26, x26, #0x1
    9c74:	cbz	x9, 9c9c <inflate@@Base+0xea0>
    9c78:	ldr	x8, [x9, #56]
    9c7c:	cbz	x8, 9c9c <inflate@@Base+0xea0>
    9c80:	ldr	w10, [x27, #92]
    9c84:	ldr	w9, [x9, #64]
    9c88:	cmp	w10, w9
    9c8c:	b.cs	9c9c <inflate@@Base+0xea0>  // b.hs, b.nlast
    9c90:	add	w9, w10, #0x1
    9c94:	str	w9, [x27, #92]
    9c98:	strb	w28, [x8, x10]
    9c9c:	cbz	w28, 9ca8 <inflate@@Base+0xeac>
    9ca0:	cmp	x26, x23
    9ca4:	b.cc	9c68 <inflate@@Base+0xe6c>  // b.lo, b.ul, b.last
    9ca8:	ldrb	w8, [x27, #25]
    9cac:	tbz	w8, #1, 9ce8 <inflate@@Base+0xeec>
    9cb0:	ldrb	w8, [x27, #16]
    9cb4:	tbz	w8, #2, 9ce8 <inflate@@Base+0xeec>
    9cb8:	ldur	x8, [x29, #-16]
    9cbc:	str	w0, [sp, #4]
    9cc0:	mov	x1, x22
    9cc4:	mov	w2, w26
    9cc8:	ldr	x0, [x8]
    9ccc:	bl	23b0 <crc32@plt>
    9cd0:	ldur	x8, [x29, #-16]
    9cd4:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9cd8:	add	x3, x3, #0x758
    9cdc:	mov	w1, #0xffffc0cc            	// #-16180
    9ce0:	str	x0, [x8]
    9ce4:	ldr	w0, [sp, #4]
    9ce8:	add	x22, x22, x26
    9cec:	cbnz	w28, a69c <inflate@@Base+0x18a0>
    9cf0:	sub	x24, x23, x26
    9cf4:	ldur	x23, [x29, #-40]
    9cf8:	ldr	x28, [sp, #16]
    9cfc:	mov	w8, #0x3f3c                	// #16188
    9d00:	str	w8, [x23]
    9d04:	ldr	w8, [x27, #24]
    9d08:	tbz	w8, #9, 9d5c <inflate@@Base+0xf60>
    9d0c:	cmp	w21, #0xf
    9d10:	b.hi	9d3c <inflate@@Base+0xf40>  // b.pmore
    9d14:	mov	w9, w21
    9d18:	cbz	w24, a52c <inflate@@Base+0x1730>
    9d1c:	ldrb	w10, [x22], #1
    9d20:	add	x21, x9, #0x8
    9d24:	sub	w24, w24, #0x1
    9d28:	cmp	x9, #0x8
    9d2c:	lsl	x10, x10, x9
    9d30:	add	x25, x10, x25
    9d34:	mov	x9, x21
    9d38:	b.cc	9d18 <inflate@@Base+0xf1c>  // b.lo, b.ul, b.last
    9d3c:	ldrb	w9, [x27, #16]
    9d40:	tbz	w9, #2, 9d54 <inflate@@Base+0xf58>
    9d44:	ldur	x9, [x29, #-16]
    9d48:	ldrh	w9, [x9]
    9d4c:	cmp	x25, x9
    9d50:	b.ne	9db0 <inflate@@Base+0xfb4>  // b.any
    9d54:	mov	x25, xzr
    9d58:	mov	w21, wzr
    9d5c:	ldr	x9, [x27, #48]
    9d60:	mov	w26, w0
    9d64:	cbz	x9, 9d74 <inflate@@Base+0xf78>
    9d68:	ubfx	w8, w8, #9, #1
    9d6c:	mov	w10, #0x1                   	// #1
    9d70:	stp	w8, w10, [x9, #68]
    9d74:	mov	x0, xzr
    9d78:	mov	x1, xzr
    9d7c:	mov	w2, wzr
    9d80:	bl	23b0 <crc32@plt>
    9d84:	ldur	x8, [x29, #-16]
    9d88:	str	x0, [x8]
    9d8c:	mov	w8, #0x3f3f                	// #16191
    9d90:	str	x0, [x19, #96]
    9d94:	str	w8, [x23]
    9d98:	mov	w0, w26
    9d9c:	ldr	w8, [x23]
    9da0:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9da4:	mov	w1, #0xffffc0cc            	// #-16180
    9da8:	add	x3, x3, #0x758
    9dac:	b	8ef4 <inflate@@Base+0xf8>
    9db0:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    9db4:	add	x8, x8, #0xa3
    9db8:	b	a418 <inflate@@Base+0x161c>
    9dbc:	bl	24c0 <adler32@plt>
    9dc0:	str	x0, [x27, #32]
    9dc4:	str	x0, [x19, #96]
    9dc8:	ldr	w8, [x27, #16]
    9dcc:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9dd0:	mov	w0, w26
    9dd4:	mov	w1, #0xffffc0cc            	// #-16180
    9dd8:	and	w8, w8, #0x4
    9ddc:	add	x3, x3, #0x758
    9de0:	cbz	w8, 9e20 <inflate@@Base+0x1024>
    9de4:	ldr	w9, [x27, #24]
    9de8:	mov	x8, x25
    9dec:	cbnz	w9, 9e10 <inflate@@Base+0x1014>
    9df0:	lsr	x8, x25, #8
    9df4:	lsl	w9, w25, #8
    9df8:	and	x8, x8, #0xff00
    9dfc:	and	x9, x9, #0xff0000
    9e00:	bfxil	x8, x25, #24, #8
    9e04:	orr	x8, x8, x9
    9e08:	lsl	w9, w25, #24
    9e0c:	orr	x8, x8, x9
    9e10:	ldur	x9, [x29, #-16]
    9e14:	ldr	x9, [x9]
    9e18:	cmp	x8, x9
    9e1c:	b.ne	9e8c <inflate@@Base+0x1090>  // b.any
    9e20:	mov	x25, xzr
    9e24:	mov	w21, wzr
    9e28:	stur	w0, [x29, #-20]
    9e2c:	mov	w8, #0x3f4f                	// #16207
    9e30:	str	w8, [x23]
    9e34:	ldr	w8, [x27, #16]
    9e38:	cbz	w8, a6e4 <inflate@@Base+0x18e8>
    9e3c:	ldr	w8, [x27, #24]
    9e40:	cbz	w8, a6e4 <inflate@@Base+0x18e8>
    9e44:	cmp	w21, #0x1f
    9e48:	b.hi	9e74 <inflate@@Base+0x1078>  // b.pmore
    9e4c:	mov	w8, w21
    9e50:	cbz	w24, a538 <inflate@@Base+0x173c>
    9e54:	ldrb	w9, [x22], #1
    9e58:	add	x21, x8, #0x8
    9e5c:	sub	w24, w24, #0x1
    9e60:	cmp	x8, #0x18
    9e64:	lsl	x9, x9, x8
    9e68:	add	x25, x9, x25
    9e6c:	mov	x8, x21
    9e70:	b.cc	9e50 <inflate@@Base+0x1054>  // b.lo, b.ul, b.last
    9e74:	ldr	w8, [x27, #40]
    9e78:	cmp	x25, x8
    9e7c:	b.eq	a6dc <inflate@@Base+0x18e0>  // b.none
    9e80:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    9e84:	add	x8, x8, #0xcc
    9e88:	b	a418 <inflate@@Base+0x161c>
    9e8c:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    9e90:	add	x8, x8, #0xb7
    9e94:	mov	w9, #0x3f51                	// #16209
    9e98:	str	x8, [x19, #48]
    9e9c:	str	w9, [x23]
    9ea0:	stur	w0, [x29, #-20]
    9ea4:	mov	w8, w9
    9ea8:	b	8ef4 <inflate@@Base+0xf8>
    9eac:	adrp	x3, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    9eb0:	mov	w8, #0x3f47                	// #16199
    9eb4:	cmp	w20, #0x6
    9eb8:	mov	w0, w26
    9ebc:	mov	w1, #0xffffc0cc            	// #-16180
    9ec0:	add	x3, x3, #0x758
    9ec4:	stur	wzr, [x29, #-24]
    9ec8:	str	w8, [x23]
    9ecc:	b.eq	a53c <inflate@@Base+0x1740>  // b.none
    9ed0:	mov	w8, #0x3f48                	// #16200
    9ed4:	str	w8, [x23]
    9ed8:	cmp	w0, #0x102
    9edc:	b.cc	9f40 <inflate@@Base+0x1144>  // b.lo, b.ul, b.last
    9ee0:	cmp	w24, #0x6
    9ee4:	b.cc	9f40 <inflate@@Base+0x1144>  // b.lo, b.ul, b.last
    9ee8:	ldur	w1, [x29, #-20]
    9eec:	str	w0, [x19, #32]
    9ef0:	mov	x0, x19
    9ef4:	str	x28, [x19, #24]
    9ef8:	str	x22, [x19]
    9efc:	str	w24, [x19, #8]
    9f00:	str	x25, [x27, #80]
    9f04:	str	w21, [x27, #88]
    9f08:	bl	81c4 <inflateBackEnd@@ZLIB_1.2.0+0x48>
    9f0c:	ldr	w8, [x27, #8]
    9f10:	ldr	x28, [x19, #24]
    9f14:	ldr	w0, [x19, #32]
    9f18:	ldr	x22, [x19]
    9f1c:	ldr	w24, [x19, #8]
    9f20:	ldr	x25, [x27, #80]
    9f24:	ldr	w21, [x27, #88]
    9f28:	mov	w9, #0x3f3f                	// #16191
    9f2c:	cmp	w8, w9
    9f30:	b.ne	9d9c <inflate@@Base+0xfa0>  // b.any
    9f34:	mov	w8, #0xffffffff            	// #-1
    9f38:	str	w8, [x27, #7148]
    9f3c:	b	9d9c <inflate@@Base+0xfa0>
    9f40:	ldr	w8, [x27, #120]
    9f44:	ldr	x9, [x27, #104]
    9f48:	mov	w10, #0xffffffff            	// #-1
    9f4c:	str	wzr, [x27, #7148]
    9f50:	lsl	w10, w10, w8
    9f54:	bic	w13, w25, w10
    9f58:	add	x8, x9, w13, uxtw #2
    9f5c:	ldrb	w8, [x8, #1]
    9f60:	cmp	w21, w8
    9f64:	b.cs	9fb4 <inflate@@Base+0x11b8>  // b.hs, b.nlast
    9f68:	mvn	w13, w10
    9f6c:	mov	w10, w21
    9f70:	mov	w11, w24
    9f74:	mov	x12, x22
    9f78:	cbz	w11, a518 <inflate@@Base+0x171c>
    9f7c:	ldrb	w8, [x12], #1
    9f80:	sub	w11, w11, #0x1
    9f84:	lsl	x8, x8, x10
    9f88:	add	x25, x8, x25
    9f8c:	and	w14, w13, w25
    9f90:	add	x8, x9, w14, uxtw #2
    9f94:	ldrb	w8, [x8, #1]
    9f98:	add	x10, x10, #0x8
    9f9c:	cmp	x10, x8
    9fa0:	b.cc	9f78 <inflate@@Base+0x117c>  // b.lo, b.ul, b.last
    9fa4:	mov	w13, w14
    9fa8:	mov	x22, x12
    9fac:	mov	w24, w11
    9fb0:	mov	w21, w10
    9fb4:	add	x11, x9, x13, lsl #2
    9fb8:	ldrb	w12, [x11]
    9fbc:	ldrh	w11, [x11, #2]
    9fc0:	mov	w10, w8
    9fc4:	cbz	w12, a074 <inflate@@Base+0x1278>
    9fc8:	and	w13, w12, #0xf0
    9fcc:	cbnz	w13, a074 <inflate@@Base+0x1278>
    9fd0:	add	w12, w10, w12
    9fd4:	mov	w13, #0xffffffff            	// #-1
    9fd8:	lsl	w12, w13, w12
    9fdc:	bic	w13, w25, w12
    9fe0:	lsr	w13, w13, w10
    9fe4:	add	w15, w13, w11
    9fe8:	add	x13, x9, w15, uxtw #2
    9fec:	ldrb	w13, [x13, #1]
    9ff0:	add	w14, w10, w13
    9ff4:	cmp	w14, w21
    9ff8:	b.ls	a054 <inflate@@Base+0x1258>  // b.plast
    9ffc:	mvn	w15, w12
    a000:	mov	w12, w21
    a004:	mov	w14, w24
    a008:	mov	x16, x22
    a00c:	cbz	w14, a518 <inflate@@Base+0x171c>
    a010:	ldrb	w13, [x16], #1
    a014:	sub	w14, w14, #0x1
    a018:	lsl	x13, x13, x12
    a01c:	add	x25, x13, x25
    a020:	and	w13, w25, w15
    a024:	lsr	w13, w13, w10
    a028:	add	w17, w13, w11
    a02c:	add	x13, x9, w17, uxtw #2
    a030:	ldrb	w13, [x13, #1]
    a034:	add	x12, x12, #0x8
    a038:	add	x18, x10, x13
    a03c:	cmp	x12, x18
    a040:	b.cc	a00c <inflate@@Base+0x1210>  // b.lo, b.ul, b.last
    a044:	mov	w15, w17
    a048:	mov	x22, x16
    a04c:	mov	w24, w14
    a050:	mov	w21, w12
    a054:	add	x9, x9, x15, lsl #2
    a058:	ldrh	w11, [x9, #2]
    a05c:	ldrb	w12, [x9]
    a060:	lsr	x25, x25, x8
    a064:	sub	w21, w21, w10
    a068:	mov	w8, w13
    a06c:	str	w10, [x27, #7148]
    a070:	b	a078 <inflate@@Base+0x127c>
    a074:	mov	w10, wzr
    a078:	lsr	x25, x25, x8
    a07c:	sub	w21, w21, w8
    a080:	add	w8, w10, w8
    a084:	str	w8, [x27, #7148]
    a088:	str	w11, [x27, #92]
    a08c:	cbz	w12, a3e8 <inflate@@Base+0x15ec>
    a090:	tbnz	w12, #5, a3f8 <inflate@@Base+0x15fc>
    a094:	tbnz	w12, #6, a410 <inflate@@Base+0x1614>
    a098:	and	w8, w12, #0xf
    a09c:	mov	w9, #0x3f49                	// #16201
    a0a0:	str	w8, [x27, #100]
    a0a4:	str	w9, [x27, #8]
    a0a8:	cbnz	w8, 93b4 <inflate@@Base+0x5b8>
    a0ac:	ldr	w11, [x27, #92]
    a0b0:	mov	w8, #0x3f4a                	// #16202
    a0b4:	str	w11, [x27, #7152]
    a0b8:	str	w8, [x27, #8]
    a0bc:	ldr	w8, [x27, #124]
    a0c0:	ldr	x9, [x27, #112]
    a0c4:	mov	w10, #0xffffffff            	// #-1
    a0c8:	lsl	w10, w10, w8
    a0cc:	bic	w13, w25, w10
    a0d0:	add	x8, x9, w13, uxtw #2
    a0d4:	ldrb	w8, [x8, #1]
    a0d8:	cmp	w21, w8
    a0dc:	b.cs	a12c <inflate@@Base+0x1330>  // b.hs, b.nlast
    a0e0:	mvn	w13, w10
    a0e4:	mov	w10, w21
    a0e8:	mov	w11, w24
    a0ec:	mov	x12, x22
    a0f0:	cbz	w11, a518 <inflate@@Base+0x171c>
    a0f4:	ldrb	w8, [x12], #1
    a0f8:	sub	w11, w11, #0x1
    a0fc:	lsl	x8, x8, x10
    a100:	add	x25, x8, x25
    a104:	and	w14, w13, w25
    a108:	add	x8, x9, w14, uxtw #2
    a10c:	ldrb	w8, [x8, #1]
    a110:	add	x10, x10, #0x8
    a114:	cmp	x10, x8
    a118:	b.cc	a0f0 <inflate@@Base+0x12f4>  // b.lo, b.ul, b.last
    a11c:	mov	w13, w14
    a120:	mov	x22, x12
    a124:	mov	w24, w11
    a128:	mov	w21, w10
    a12c:	add	x10, x9, x13, lsl #2
    a130:	ldrb	w12, [x10]
    a134:	ldrh	w10, [x10, #2]
    a138:	tst	w12, #0xf0
    a13c:	b.eq	a148 <inflate@@Base+0x134c>  // b.none
    a140:	ldr	w9, [x27, #7148]
    a144:	b	a1f0 <inflate@@Base+0x13f4>
    a148:	add	w11, w8, w12
    a14c:	mov	w12, #0xffffffff            	// #-1
    a150:	lsl	w12, w12, w11
    a154:	bic	w11, w25, w12
    a158:	lsr	w11, w11, w8
    a15c:	add	w14, w11, w10
    a160:	add	x11, x9, w14, uxtw #2
    a164:	ldrb	w11, [x11, #1]
    a168:	add	w13, w8, w11
    a16c:	cmp	w13, w21
    a170:	b.ls	a1cc <inflate@@Base+0x13d0>  // b.plast
    a174:	mvn	w14, w12
    a178:	mov	w12, w21
    a17c:	mov	w13, w24
    a180:	mov	x15, x22
    a184:	cbz	w13, a518 <inflate@@Base+0x171c>
    a188:	ldrb	w11, [x15], #1
    a18c:	sub	w13, w13, #0x1
    a190:	lsl	x11, x11, x12
    a194:	add	x25, x11, x25
    a198:	and	w11, w25, w14
    a19c:	lsr	w11, w11, w8
    a1a0:	add	w16, w11, w10
    a1a4:	add	x11, x9, w16, uxtw #2
    a1a8:	ldrb	w11, [x11, #1]
    a1ac:	add	x12, x12, #0x8
    a1b0:	add	x17, x8, x11
    a1b4:	cmp	x12, x17
    a1b8:	b.cc	a184 <inflate@@Base+0x1388>  // b.lo, b.ul, b.last
    a1bc:	mov	w14, w16
    a1c0:	mov	x22, x15
    a1c4:	mov	w24, w13
    a1c8:	mov	w21, w12
    a1cc:	add	x9, x9, x14, lsl #2
    a1d0:	ldr	w13, [x27, #7148]
    a1d4:	ldrh	w10, [x9, #2]
    a1d8:	ldrb	w12, [x9]
    a1dc:	lsr	x25, x25, x8
    a1e0:	sub	w21, w21, w8
    a1e4:	add	w9, w13, w8
    a1e8:	mov	w8, w11
    a1ec:	str	w9, [x27, #7148]
    a1f0:	lsr	x25, x25, x8
    a1f4:	sub	w21, w21, w8
    a1f8:	add	w8, w9, w8
    a1fc:	str	w8, [x27, #7148]
    a200:	tbnz	w12, #6, a250 <inflate@@Base+0x1454>
    a204:	and	w8, w12, #0xf
    a208:	mov	w9, #0x3f4b                	// #16203
    a20c:	stp	w10, w8, [x27, #96]
    a210:	str	w9, [x27, #8]
    a214:	cbz	w8, a29c <inflate@@Base+0x14a0>
    a218:	cmp	w21, w8
    a21c:	b.cs	a25c <inflate@@Base+0x1460>  // b.hs, b.nlast
    a220:	mov	w11, w21
    a224:	mov	w9, w24
    a228:	mov	x10, x22
    a22c:	cbz	w9, a518 <inflate@@Base+0x171c>
    a230:	ldrb	w12, [x10], #1
    a234:	sub	w9, w9, #0x1
    a238:	lsl	x12, x12, x11
    a23c:	add	w11, w11, #0x8
    a240:	cmp	w11, w8
    a244:	add	x25, x12, x25
    a248:	b.cc	a22c <inflate@@Base+0x1430>  // b.lo, b.ul, b.last
    a24c:	b	a268 <inflate@@Base+0x146c>
    a250:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    a254:	add	x8, x8, #0x712
    a258:	b	a418 <inflate@@Base+0x161c>
    a25c:	mov	x10, x22
    a260:	mov	w9, w24
    a264:	mov	w11, w21
    a268:	ldr	w13, [x27, #96]
    a26c:	sub	w21, w11, w8
    a270:	ldr	w11, [x27, #7148]
    a274:	mov	w12, #0xffffffff            	// #-1
    a278:	lsl	w12, w12, w8
    a27c:	bic	w12, w25, w12
    a280:	lsr	x25, x25, x8
    a284:	add	w12, w13, w12
    a288:	add	w8, w11, w8
    a28c:	mov	x22, x10
    a290:	mov	w24, w9
    a294:	str	w12, [x27, #96]
    a298:	str	w8, [x27, #7148]
    a29c:	mov	w8, #0x3f4c                	// #16204
    a2a0:	str	w8, [x23]
    a2a4:	cbz	w0, a53c <inflate@@Base+0x1740>
    a2a8:	ldur	w9, [x29, #-20]
    a2ac:	ldr	w8, [x27, #96]
    a2b0:	sub	w9, w9, w0
    a2b4:	cmp	w8, w9
    a2b8:	b.ls	a2e0 <inflate@@Base+0x14e4>  // b.plast
    a2bc:	ldr	w10, [x27, #64]
    a2c0:	sub	w9, w8, w9
    a2c4:	cmp	w9, w10
    a2c8:	b.ls	a2f0 <inflate@@Base+0x14f4>  // b.plast
    a2cc:	ldr	w8, [x27, #7144]
    a2d0:	cbz	w8, a2f0 <inflate@@Base+0x14f4>
    a2d4:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    a2d8:	add	x8, x8, #0x728
    a2dc:	b	a418 <inflate@@Base+0x161c>
    a2e0:	ldr	w9, [x27, #92]
    a2e4:	sub	x11, x28, x8
    a2e8:	mov	w8, w9
    a2ec:	b	a324 <inflate@@Base+0x1528>
    a2f0:	ldr	w10, [x27, #68]
    a2f4:	subs	w8, w9, w10
    a2f8:	b.ls	a308 <inflate@@Base+0x150c>  // b.plast
    a2fc:	ldr	w9, [x27, #60]
    a300:	sub	w10, w9, w8
    a304:	b	a310 <inflate@@Base+0x1514>
    a308:	sub	w10, w10, w9
    a30c:	mov	w8, w9
    a310:	ldr	w9, [x27, #92]
    a314:	ldr	x11, [x27, #72]
    a318:	cmp	w8, w9
    a31c:	add	x11, x11, w10, uxtw
    a320:	csel	w8, w9, w8, hi  // hi = pmore
    a324:	cmp	w8, w0
    a328:	csel	w8, w0, w8, hi  // hi = pmore
    a32c:	sub	w10, w9, w8
    a330:	sub	w9, w8, #0x1
    a334:	cmp	w9, #0x1f
    a338:	str	w10, [x27, #92]
    a33c:	b.cc	a360 <inflate@@Base+0x1564>  // b.lo, b.ul, b.last
    a340:	add	x10, x11, x9
    a344:	add	x10, x10, #0x1
    a348:	cmp	x28, x10
    a34c:	b.cs	a3a4 <inflate@@Base+0x15a8>  // b.hs, b.nlast
    a350:	add	x10, x28, x9
    a354:	add	x10, x10, #0x1
    a358:	cmp	x11, x10
    a35c:	b.cs	a3a4 <inflate@@Base+0x15a8>  // b.hs, b.nlast
    a360:	mov	x9, x28
    a364:	mov	w10, w8
    a368:	ldrb	w12, [x11], #1
    a36c:	subs	w10, w10, #0x1
    a370:	strb	w12, [x9], #1
    a374:	b.ne	a368 <inflate@@Base+0x156c>  // b.any
    a378:	ldr	w10, [x27, #92]
    a37c:	sub	w0, w0, w8
    a380:	cbz	w10, a390 <inflate@@Base+0x1594>
    a384:	ldr	w8, [x23]
    a388:	mov	x28, x9
    a38c:	b	8ef4 <inflate@@Base+0xf8>
    a390:	mov	w8, #0x3f48                	// #16200
    a394:	str	w8, [x23]
    a398:	mov	x28, x9
    a39c:	mov	w8, w8
    a3a0:	b	8ef4 <inflate@@Base+0xf8>
    a3a4:	add	x12, x9, #0x1
    a3a8:	and	x13, x12, #0x1ffffffe0
    a3ac:	add	x14, x11, #0x10
    a3b0:	add	x9, x28, x13
    a3b4:	sub	w10, w8, w13
    a3b8:	add	x11, x11, x13
    a3bc:	add	x15, x28, #0x10
    a3c0:	mov	x16, x13
    a3c4:	ldp	q0, q1, [x14, #-16]
    a3c8:	add	x14, x14, #0x20
    a3cc:	subs	x16, x16, #0x20
    a3d0:	stp	q0, q1, [x15, #-16]
    a3d4:	add	x15, x15, #0x20
    a3d8:	b.ne	a3c4 <inflate@@Base+0x15c8>  // b.any
    a3dc:	cmp	x12, x13
    a3e0:	b.ne	a368 <inflate@@Base+0x156c>  // b.any
    a3e4:	b	a378 <inflate@@Base+0x157c>
    a3e8:	mov	w8, #0x3f4d                	// #16205
    a3ec:	str	w8, [x23]
    a3f0:	mov	w8, w8
    a3f4:	b	8ef4 <inflate@@Base+0xf8>
    a3f8:	mov	w8, #0xffffffff            	// #-1
    a3fc:	mov	w9, #0x3f3f                	// #16191
    a400:	str	w8, [x27, #7148]
    a404:	str	w9, [x27, #8]
    a408:	ldr	w8, [x23]
    a40c:	b	8ef4 <inflate@@Base+0xf8>
    a410:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    a414:	add	x8, x8, #0x6f6
    a418:	mov	w9, #0x3f51                	// #16209
    a41c:	str	x8, [x19, #48]
    a420:	str	w9, [x23]
    a424:	mov	w8, w9
    a428:	b	8ef4 <inflate@@Base+0xf8>
    a42c:	and	x8, x25, #0xf
    a430:	cmp	x8, #0x8
    a434:	str	x28, [sp, #16]
    a438:	str	w0, [sp, #4]
    a43c:	b.ne	a4ac <inflate@@Base+0x16b0>  // b.any
    a440:	ldr	w10, [x27, #56]
    a444:	ubfx	x8, x25, #4, #4
    a448:	add	w9, w8, #0x8
    a44c:	cbnz	w10, a458 <inflate@@Base+0x165c>
    a450:	mov	w10, w9
    a454:	str	w9, [x27, #56]
    a458:	cmp	w8, #0x7
    a45c:	b.hi	a4c4 <inflate@@Base+0x16c8>  // b.pmore
    a460:	cmp	w9, w10
    a464:	b.hi	a4c4 <inflate@@Base+0x16c8>  // b.pmore
    a468:	mov	w9, #0x100                 	// #256
    a46c:	lsl	w8, w9, w8
    a470:	mov	x0, xzr
    a474:	mov	x1, xzr
    a478:	mov	w2, wzr
    a47c:	str	w8, [x27, #28]
    a480:	bl	24c0 <adler32@plt>
    a484:	tst	x25, #0x2000
    a488:	mov	w8, #0x3f3d                	// #16189
    a48c:	mov	w9, #0x3f3f                	// #16191
    a490:	csel	w8, w9, w8, eq  // eq = none
    a494:	mov	w21, wzr
    a498:	str	x0, [x27, #32]
    a49c:	str	x0, [x19, #96]
    a4a0:	str	w8, [x27, #8]
    a4a4:	mov	x25, xzr
    a4a8:	b	a4e0 <inflate@@Base+0x16e4>
    a4ac:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    a4b0:	add	x8, x8, #0x5b
    a4b4:	b	a4d4 <inflate@@Base+0x16d8>
    a4b8:	adrp	x8, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    a4bc:	add	x8, x8, #0x685
    a4c0:	b	a418 <inflate@@Base+0x161c>
    a4c4:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    a4c8:	lsr	x25, x25, #4
    a4cc:	sub	w21, w21, #0x4
    a4d0:	add	x8, x8, #0x76
    a4d4:	mov	w9, #0x3f51                	// #16209
    a4d8:	str	x8, [x19, #48]
    a4dc:	str	w9, [x23]
    a4e0:	ldr	w0, [sp, #4]
    a4e4:	ldr	x28, [sp, #16]
    a4e8:	b	9d9c <inflate@@Base+0xfa0>
    a4ec:	ldr	w9, [x19, #8]
    a4f0:	cbz	w9, 8e74 <inflate@@Base+0x78>
    a4f4:	mov	w0, #0xfffffffe            	// #-2
    a4f8:	ldp	x20, x19, [sp, #192]
    a4fc:	ldp	x22, x21, [sp, #176]
    a500:	ldp	x24, x23, [sp, #160]
    a504:	ldp	x26, x25, [sp, #144]
    a508:	ldp	x28, x27, [sp, #128]
    a50c:	ldp	x29, x30, [sp, #112]
    a510:	add	sp, sp, #0xd0
    a514:	ret
    a518:	ldur	w26, [x29, #-24]
    a51c:	add	w21, w21, w24, lsl #3
    a520:	add	x22, x22, w24, uxtw
    a524:	mov	w24, wzr
    a528:	b	a540 <inflate@@Base+0x1744>
    a52c:	ldur	w26, [x29, #-24]
    a530:	mov	w21, w9
    a534:	b	a540 <inflate@@Base+0x1744>
    a538:	mov	w21, w8
    a53c:	ldur	w26, [x29, #-24]
    a540:	str	x28, [x19, #24]
    a544:	str	w0, [x19, #32]
    a548:	str	x22, [x19]
    a54c:	str	w24, [x19, #8]
    a550:	ldr	w8, [x27, #60]
    a554:	str	w21, [x27, #88]
    a558:	ldur	w21, [x29, #-20]
    a55c:	str	x25, [x27, #80]
    a560:	cbz	w8, a588 <inflate@@Base+0x178c>
    a564:	sub	w2, w21, w0
    a568:	mov	x0, x19
    a56c:	mov	x1, x28
    a570:	bl	a704 <inflate@@Base+0x1908>
    a574:	cbz	w0, a5b8 <inflate@@Base+0x17bc>
    a578:	mov	w8, #0x3f52                	// #16210
    a57c:	str	w8, [x23]
    a580:	mov	w0, #0xfffffffc            	// #-4
    a584:	b	a4f8 <inflate@@Base+0x16fc>
    a588:	cmp	w21, w0
    a58c:	b.eq	a5c0 <inflate@@Base+0x17c4>  // b.none
    a590:	ldr	w8, [x23]
    a594:	mov	w9, #0x3f50                	// #16208
    a598:	cmp	w8, w9
    a59c:	b.hi	a5c0 <inflate@@Base+0x17c4>  // b.pmore
    a5a0:	cmp	w20, #0x4
    a5a4:	b.ne	a564 <inflate@@Base+0x1768>  // b.any
    a5a8:	mov	w9, #0x3f4d                	// #16205
    a5ac:	cmp	w8, w9
    a5b0:	b.hi	a5c0 <inflate@@Base+0x17c4>  // b.pmore
    a5b4:	b	a564 <inflate@@Base+0x1768>
    a5b8:	ldr	w24, [x19, #8]
    a5bc:	ldr	w0, [x19, #32]
    a5c0:	ldur	w10, [x29, #-28]
    a5c4:	ldr	x8, [x19, #16]
    a5c8:	ldr	x9, [x19, #40]
    a5cc:	subs	w21, w21, w0
    a5d0:	sub	w22, w10, w24
    a5d4:	add	x8, x8, x22
    a5d8:	add	x9, x9, x21
    a5dc:	str	x8, [x19, #16]
    a5e0:	str	x9, [x19, #40]
    a5e4:	ldr	x8, [x27, #40]
    a5e8:	add	x8, x8, x21
    a5ec:	str	x8, [x27, #40]
    a5f0:	b.eq	a62c <inflate@@Base+0x1830>  // b.none
    a5f4:	ldr	w8, [x27, #16]
    a5f8:	tbz	w8, #2, a62c <inflate@@Base+0x1830>
    a5fc:	ldr	x9, [x19, #24]
    a600:	ldr	w8, [x27, #24]
    a604:	ldr	x0, [x27, #32]
    a608:	mov	w2, w21
    a60c:	sub	x1, x9, x21
    a610:	cbz	w8, a61c <inflate@@Base+0x1820>
    a614:	bl	23b0 <crc32@plt>
    a618:	b	a620 <inflate@@Base+0x1824>
    a61c:	bl	24c0 <adler32@plt>
    a620:	ldur	x8, [x29, #-16]
    a624:	str	x0, [x8]
    a628:	str	x0, [x19, #96]
    a62c:	ldp	w10, w9, [x27, #8]
    a630:	ldr	w8, [x27, #88]
    a634:	mov	w12, #0x3f3f                	// #16191
    a638:	orr	w11, w21, w22
    a63c:	cmp	w9, #0x0
    a640:	cset	w9, ne  // ne = any
    a644:	cmp	w10, w12
    a648:	mov	w12, #0x3f42                	// #16194
    a64c:	add	w8, w8, w9, lsl #6
    a650:	cset	w9, eq  // eq = none
    a654:	cmp	w10, w12
    a658:	mov	w12, #0x3f47                	// #16199
    a65c:	add	w8, w8, w9, lsl #7
    a660:	mov	w9, #0x100                 	// #256
    a664:	ccmp	w10, w12, #0x4, ne  // ne = any
    a668:	csel	w9, w9, wzr, eq  // eq = none
    a66c:	cmp	w11, #0x0
    a670:	add	w8, w8, w9
    a674:	ccmp	w20, #0x4, #0x4, ne  // ne = any
    a678:	str	w8, [x19, #88]
    a67c:	ccmp	w26, #0x0, #0x0, eq  // eq = none
    a680:	mov	w8, #0xfffffffb            	// #-5
    a684:	csel	w0, w8, w26, eq  // eq = none
    a688:	b	a4f8 <inflate@@Base+0x16fc>
    a68c:	mov	w26, #0xfffffffd            	// #-3
    a690:	b	a540 <inflate@@Base+0x1744>
    a694:	mov	w0, #0xfffffffc            	// #-4
    a698:	b	a4f8 <inflate@@Base+0x16fc>
    a69c:	sub	w24, w24, w26
    a6a0:	ldur	w26, [x29, #-24]
    a6a4:	ldur	x23, [x29, #-40]
    a6a8:	ldr	x28, [sp, #16]
    a6ac:	b	a540 <inflate@@Base+0x1744>
    a6b0:	str	x28, [x19, #24]
    a6b4:	str	w0, [x19, #32]
    a6b8:	str	x22, [x19]
    a6bc:	str	w24, [x19, #8]
    a6c0:	str	x25, [x27, #80]
    a6c4:	str	w21, [x27, #88]
    a6c8:	mov	w0, #0x2                   	// #2
    a6cc:	b	a4f8 <inflate@@Base+0x16fc>
    a6d0:	ldur	w26, [x29, #-24]
    a6d4:	ldur	x23, [x29, #-40]
    a6d8:	b	a540 <inflate@@Base+0x1744>
    a6dc:	mov	x25, xzr
    a6e0:	mov	w21, wzr
    a6e4:	mov	w8, #0x3f50                	// #16208
    a6e8:	str	w8, [x23]
    a6ec:	mov	w26, #0x1                   	// #1
    a6f0:	b	a540 <inflate@@Base+0x1744>
    a6f4:	ldur	w26, [x29, #-24]
    a6f8:	lsr	x25, x25, #3
    a6fc:	sub	w21, w21, #0x3
    a700:	b	a540 <inflate@@Base+0x1744>
    a704:	stp	x29, x30, [sp, #-64]!
    a708:	stp	x22, x21, [sp, #32]
    a70c:	stp	x20, x19, [sp, #48]
    a710:	str	x23, [sp, #16]
    a714:	ldr	x23, [x0, #56]
    a718:	mov	x8, x0
    a71c:	mov	w20, w2
    a720:	mov	x19, x1
    a724:	ldr	x0, [x23, #72]
    a728:	mov	x29, sp
    a72c:	cbnz	x0, a754 <inflate@@Base+0x1958>
    a730:	ldr	w10, [x23, #56]
    a734:	ldr	x9, [x8, #64]
    a738:	ldr	x0, [x8, #80]
    a73c:	mov	w21, #0x1                   	// #1
    a740:	lsl	w1, w21, w10
    a744:	mov	w2, #0x1                   	// #1
    a748:	blr	x9
    a74c:	str	x0, [x23, #72]
    a750:	cbz	x0, a7e4 <inflate@@Base+0x19e8>
    a754:	ldr	w8, [x23, #60]
    a758:	cbz	w8, a7ac <inflate@@Base+0x19b0>
    a75c:	cmp	w8, w20
    a760:	b.ls	a7c8 <inflate@@Base+0x19cc>  // b.plast
    a764:	ldr	w9, [x23, #68]
    a768:	sub	x1, x19, w20, uxtw
    a76c:	sub	w8, w8, w9
    a770:	cmp	w8, w20
    a774:	csel	w22, w20, w8, hi  // hi = pmore
    a778:	add	x0, x0, x9
    a77c:	mov	x2, x22
    a780:	bl	2330 <memcpy@plt>
    a784:	subs	w20, w20, w22
    a788:	b.eq	a7fc <inflate@@Base+0x1a00>  // b.none
    a78c:	ldr	x0, [x23, #72]
    a790:	mov	w2, w20
    a794:	sub	x1, x19, x2
    a798:	bl	2330 <memcpy@plt>
    a79c:	ldr	w8, [x23, #60]
    a7a0:	mov	w21, wzr
    a7a4:	str	w20, [x23, #68]
    a7a8:	b	a7e0 <inflate@@Base+0x19e4>
    a7ac:	ldr	w8, [x23, #56]
    a7b0:	mov	w9, #0x1                   	// #1
    a7b4:	str	xzr, [x23, #64]
    a7b8:	lsl	w8, w9, w8
    a7bc:	str	w8, [x23, #60]
    a7c0:	cmp	w8, w20
    a7c4:	b.hi	a764 <inflate@@Base+0x1968>  // b.pmore
    a7c8:	mov	w2, w8
    a7cc:	sub	x1, x19, x2
    a7d0:	bl	2330 <memcpy@plt>
    a7d4:	ldr	w8, [x23, #60]
    a7d8:	mov	w21, wzr
    a7dc:	str	wzr, [x23, #68]
    a7e0:	str	w8, [x23, #64]
    a7e4:	mov	w0, w21
    a7e8:	ldp	x20, x19, [sp, #48]
    a7ec:	ldp	x22, x21, [sp, #32]
    a7f0:	ldr	x23, [sp, #16]
    a7f4:	ldp	x29, x30, [sp], #64
    a7f8:	ret
    a7fc:	ldp	w8, w9, [x23, #64]
    a800:	ldr	w10, [x23, #60]
    a804:	mov	w21, wzr
    a808:	add	w9, w9, w22
    a80c:	cmp	w9, w10
    a810:	csel	w9, wzr, w9, eq  // eq = none
    a814:	cmp	w8, w10
    a818:	str	w9, [x23, #68]
    a81c:	b.cs	a7e4 <inflate@@Base+0x19e8>  // b.hs, b.nlast
    a820:	mov	w21, wzr
    a824:	add	w8, w8, w22
    a828:	b	a7e0 <inflate@@Base+0x19e4>

000000000000a82c <inflateEnd@@Base>:
    a82c:	stp	x29, x30, [sp, #-32]!
    a830:	str	x19, [sp, #16]
    a834:	mov	x29, sp
    a838:	cbz	x0, a8a8 <inflateEnd@@Base+0x7c>
    a83c:	ldr	x8, [x0, #64]
    a840:	mov	x19, x0
    a844:	cbz	x8, a8a8 <inflateEnd@@Base+0x7c>
    a848:	ldr	x9, [x19, #72]
    a84c:	cbz	x9, a8a8 <inflateEnd@@Base+0x7c>
    a850:	ldr	x1, [x19, #56]
    a854:	cbz	x1, a8a8 <inflateEnd@@Base+0x7c>
    a858:	ldr	x8, [x1]
    a85c:	cmp	x8, x19
    a860:	b.ne	a8a8 <inflateEnd@@Base+0x7c>  // b.any
    a864:	ldr	w8, [x1, #8]
    a868:	mov	w10, #0xffffc0cc            	// #-16180
    a86c:	add	w8, w8, w10
    a870:	cmp	w8, #0x1f
    a874:	b.hi	a8a8 <inflateEnd@@Base+0x7c>  // b.pmore
    a878:	ldr	x8, [x1, #72]
    a87c:	cbz	x8, a894 <inflateEnd@@Base+0x68>
    a880:	ldr	x0, [x19, #80]
    a884:	mov	x1, x8
    a888:	blr	x9
    a88c:	ldr	x9, [x19, #72]
    a890:	ldr	x1, [x19, #56]
    a894:	ldr	x0, [x19, #80]
    a898:	blr	x9
    a89c:	mov	w0, wzr
    a8a0:	str	xzr, [x19, #56]
    a8a4:	b	a8ac <inflateEnd@@Base+0x80>
    a8a8:	mov	w0, #0xfffffffe            	// #-2
    a8ac:	ldr	x19, [sp, #16]
    a8b0:	ldp	x29, x30, [sp], #32
    a8b4:	ret

000000000000a8b8 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    a8b8:	stp	x29, x30, [sp, #-48]!
    a8bc:	str	x21, [sp, #16]
    a8c0:	stp	x20, x19, [sp, #32]
    a8c4:	mov	x29, sp
    a8c8:	cbz	x0, a958 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>
    a8cc:	ldr	x8, [x0, #64]
    a8d0:	cbz	x8, a958 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>
    a8d4:	ldr	x8, [x0, #72]
    a8d8:	cbz	x8, a958 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>
    a8dc:	ldr	x21, [x0, #56]
    a8e0:	cbz	x21, a958 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>
    a8e4:	ldr	x8, [x21]
    a8e8:	cmp	x8, x0
    a8ec:	b.ne	a958 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>  // b.any
    a8f0:	ldr	w8, [x21, #8]
    a8f4:	mov	w9, #0xffffc0cc            	// #-16180
    a8f8:	add	w8, w8, w9
    a8fc:	cmp	w8, #0x1f
    a900:	b.hi	a958 <inflateGetDictionary@@ZLIB_1.2.7.1+0xa0>  // b.pmore
    a904:	mov	x19, x2
    a908:	mov	x20, x1
    a90c:	cbz	x1, a944 <inflateGetDictionary@@ZLIB_1.2.7.1+0x8c>
    a910:	ldr	w8, [x21, #64]
    a914:	cbz	w8, a944 <inflateGetDictionary@@ZLIB_1.2.7.1+0x8c>
    a918:	ldr	x9, [x21, #72]
    a91c:	ldr	w10, [x21, #68]
    a920:	mov	x0, x20
    a924:	add	x1, x9, x10
    a928:	sub	w2, w8, w10
    a92c:	bl	2330 <memcpy@plt>
    a930:	ldp	w8, w2, [x21, #64]
    a934:	ldr	x1, [x21, #72]
    a938:	add	x8, x20, x8
    a93c:	sub	x0, x8, x2
    a940:	bl	2330 <memcpy@plt>
    a944:	mov	w0, wzr
    a948:	cbz	x19, a95c <inflateGetDictionary@@ZLIB_1.2.7.1+0xa4>
    a94c:	ldr	w8, [x21, #64]
    a950:	str	w8, [x19]
    a954:	b	a95c <inflateGetDictionary@@ZLIB_1.2.7.1+0xa4>
    a958:	mov	w0, #0xfffffffe            	// #-2
    a95c:	ldp	x20, x19, [sp, #32]
    a960:	ldr	x21, [sp, #16]
    a964:	ldp	x29, x30, [sp], #48
    a968:	ret

000000000000a96c <inflateSetDictionary@@Base>:
    a96c:	stp	x29, x30, [sp, #-48]!
    a970:	stp	x22, x21, [sp, #16]
    a974:	stp	x20, x19, [sp, #32]
    a978:	mov	x29, sp
    a97c:	cbz	x0, a9d8 <inflateSetDictionary@@Base+0x6c>
    a980:	ldr	x8, [x0, #64]
    a984:	mov	x20, x0
    a988:	cbz	x8, a9d8 <inflateSetDictionary@@Base+0x6c>
    a98c:	ldr	x8, [x20, #72]
    a990:	cbz	x8, a9d8 <inflateSetDictionary@@Base+0x6c>
    a994:	ldr	x22, [x20, #56]
    a998:	cbz	x22, a9d8 <inflateSetDictionary@@Base+0x6c>
    a99c:	ldr	x8, [x22]
    a9a0:	cmp	x8, x20
    a9a4:	b.ne	a9d8 <inflateSetDictionary@@Base+0x6c>  // b.any
    a9a8:	ldr	w8, [x22, #8]
    a9ac:	mov	w9, #0xffffc0cc            	// #-16180
    a9b0:	add	w9, w8, w9
    a9b4:	cmp	w9, #0x1f
    a9b8:	b.hi	a9d8 <inflateSetDictionary@@Base+0x6c>  // b.pmore
    a9bc:	ldr	w9, [x22, #16]
    a9c0:	mov	w19, w2
    a9c4:	mov	x21, x1
    a9c8:	cbz	w9, a9ec <inflateSetDictionary@@Base+0x80>
    a9cc:	mov	w9, #0x3f3e                	// #16190
    a9d0:	cmp	w8, w9
    a9d4:	b.eq	a9f8 <inflateSetDictionary@@Base+0x8c>  // b.none
    a9d8:	mov	w0, #0xfffffffe            	// #-2
    a9dc:	ldp	x20, x19, [sp, #32]
    a9e0:	ldp	x22, x21, [sp, #16]
    a9e4:	ldp	x29, x30, [sp], #48
    a9e8:	ret
    a9ec:	mov	w9, #0x3f3e                	// #16190
    a9f0:	cmp	w8, w9
    a9f4:	b.ne	aa20 <inflateSetDictionary@@Base+0xb4>  // b.any
    a9f8:	mov	x0, xzr
    a9fc:	mov	x1, xzr
    aa00:	mov	w2, wzr
    aa04:	bl	24c0 <adler32@plt>
    aa08:	mov	x1, x21
    aa0c:	mov	w2, w19
    aa10:	bl	24c0 <adler32@plt>
    aa14:	ldr	x8, [x22, #32]
    aa18:	cmp	x0, x8
    aa1c:	b.ne	aa44 <inflateSetDictionary@@Base+0xd8>  // b.any
    aa20:	add	x1, x21, w19, uxtw
    aa24:	mov	x0, x20
    aa28:	mov	w2, w19
    aa2c:	bl	a704 <inflate@@Base+0x1908>
    aa30:	cbz	w0, aa4c <inflateSetDictionary@@Base+0xe0>
    aa34:	mov	w8, #0x3f52                	// #16210
    aa38:	str	w8, [x22, #8]
    aa3c:	mov	w0, #0xfffffffc            	// #-4
    aa40:	b	a9dc <inflateSetDictionary@@Base+0x70>
    aa44:	mov	w0, #0xfffffffd            	// #-3
    aa48:	b	a9dc <inflateSetDictionary@@Base+0x70>
    aa4c:	mov	w8, #0x1                   	// #1
    aa50:	str	w8, [x22, #20]
    aa54:	b	a9dc <inflateSetDictionary@@Base+0x70>

000000000000aa58 <inflateGetHeader@@ZLIB_1.2.2>:
    aa58:	cbz	x0, aa9c <inflateGetHeader@@ZLIB_1.2.2+0x44>
    aa5c:	ldr	x8, [x0, #64]
    aa60:	cbz	x8, aa9c <inflateGetHeader@@ZLIB_1.2.2+0x44>
    aa64:	ldr	x8, [x0, #72]
    aa68:	cbz	x8, aa9c <inflateGetHeader@@ZLIB_1.2.2+0x44>
    aa6c:	ldr	x8, [x0, #56]
    aa70:	cbz	x8, aa9c <inflateGetHeader@@ZLIB_1.2.2+0x44>
    aa74:	ldr	x9, [x8]
    aa78:	cmp	x9, x0
    aa7c:	b.ne	aa9c <inflateGetHeader@@ZLIB_1.2.2+0x44>  // b.any
    aa80:	ldr	w9, [x8, #8]
    aa84:	mov	w10, #0xffffc0cc            	// #-16180
    aa88:	add	w9, w9, w10
    aa8c:	cmp	w9, #0x1f
    aa90:	b.hi	aa9c <inflateGetHeader@@ZLIB_1.2.2+0x44>  // b.pmore
    aa94:	ldrb	w9, [x8, #16]
    aa98:	tbnz	w9, #1, aaa4 <inflateGetHeader@@ZLIB_1.2.2+0x4c>
    aa9c:	mov	w0, #0xfffffffe            	// #-2
    aaa0:	ret
    aaa4:	mov	w0, wzr
    aaa8:	str	x1, [x8, #48]
    aaac:	str	wzr, [x1, #72]
    aab0:	ret

000000000000aab4 <inflateSync@@Base>:
    aab4:	sub	sp, sp, #0x10
    aab8:	cbz	x0, ab10 <inflateSync@@Base+0x5c>
    aabc:	ldr	x8, [x0, #64]
    aac0:	cbz	x8, ab10 <inflateSync@@Base+0x5c>
    aac4:	ldr	x8, [x0, #72]
    aac8:	cbz	x8, ab10 <inflateSync@@Base+0x5c>
    aacc:	ldr	x9, [x0, #56]
    aad0:	cbz	x9, ab10 <inflateSync@@Base+0x5c>
    aad4:	ldr	x8, [x9]
    aad8:	cmp	x8, x0
    aadc:	b.ne	ab10 <inflateSync@@Base+0x5c>  // b.any
    aae0:	ldr	w8, [x9, #8]
    aae4:	mov	w10, #0xffffc0cc            	// #-16180
    aae8:	add	w10, w8, w10
    aaec:	cmp	w10, #0x1f
    aaf0:	b.hi	ab10 <inflateSync@@Base+0x5c>  // b.pmore
    aaf4:	ldr	w12, [x0, #8]
    aaf8:	cbnz	w12, ab20 <inflateSync@@Base+0x6c>
    aafc:	ldr	w10, [x9, #88]
    ab00:	cmp	w10, #0x8
    ab04:	b.cs	ab20 <inflateSync@@Base+0x6c>  // b.hs, b.nlast
    ab08:	mov	w8, #0xfffffffb            	// #-5
    ab0c:	b	ab14 <inflateSync@@Base+0x60>
    ab10:	mov	w8, #0xfffffffe            	// #-2
    ab14:	mov	w0, w8
    ab18:	add	sp, sp, #0x10
    ab1c:	ret
    ab20:	mov	w10, #0x3f53                	// #16211
    ab24:	cmp	w8, w10
    ab28:	b.ne	ab34 <inflateSync@@Base+0x80>  // b.any
    ab2c:	ldr	w8, [x9, #140]
    ab30:	b	abf8 <inflateSync@@Base+0x144>
    ab34:	ldr	w11, [x9, #88]
    ab38:	ldr	x8, [x9, #80]
    ab3c:	str	w10, [x9, #8]
    ab40:	and	x10, x11, #0x7
    ab44:	ands	w12, w11, #0xfffffff8
    ab48:	lsl	x8, x8, x10
    ab4c:	str	x8, [x9, #80]
    ab50:	str	w12, [x9, #88]
    ab54:	b.eq	abdc <inflateSync@@Base+0x128>  // b.none
    ab58:	and	w11, w11, #0xfffffff8
    ab5c:	mov	x10, xzr
    ab60:	neg	w11, w11
    ab64:	add	x12, sp, #0xc
    ab68:	strb	w8, [x12, x10]
    ab6c:	add	x10, x10, #0x1
    ab70:	adds	w11, w11, #0x8
    ab74:	lsr	x8, x8, #8
    ab78:	b.ne	ab68 <inflateSync@@Base+0xb4>  // b.any
    ab7c:	mov	x11, x9
    ab80:	str	wzr, [x11, #140]!
    ab84:	stur	x8, [x11, #-60]
    ab88:	stur	wzr, [x11, #-52]
    ab8c:	cbz	w10, abec <inflateSync@@Base+0x138>
    ab90:	mov	x12, xzr
    ab94:	mov	w8, wzr
    ab98:	add	x13, sp, #0xc
    ab9c:	mov	w14, #0xff                  	// #255
    aba0:	mov	w15, #0x4                   	// #4
    aba4:	ldrb	w16, [x13, x12]
    aba8:	cmp	w8, #0x2
    abac:	sub	w17, w15, w8
    abb0:	csel	w18, wzr, w14, cc  // cc = lo, ul, last
    abb4:	cmp	w16, #0x0
    abb8:	add	x12, x12, #0x1
    abbc:	csel	w17, w17, wzr, eq  // eq = none
    abc0:	cmp	w18, w16
    abc4:	csinc	w8, w17, w8, ne  // ne = any
    abc8:	cmp	x12, x10
    abcc:	b.cs	abf0 <inflateSync@@Base+0x13c>  // b.hs, b.nlast
    abd0:	cmp	w8, #0x4
    abd4:	b.cc	aba4 <inflateSync@@Base+0xf0>  // b.lo, b.ul, b.last
    abd8:	b	abf0 <inflateSync@@Base+0x13c>
    abdc:	mov	x11, x9
    abe0:	mov	w8, wzr
    abe4:	str	wzr, [x11, #140]!
    abe8:	b	abf0 <inflateSync@@Base+0x13c>
    abec:	mov	w8, wzr
    abf0:	str	w8, [x11]
    abf4:	ldr	w12, [x0, #8]
    abf8:	ldr	x10, [x0]
    abfc:	mov	w11, wzr
    ac00:	cbz	w12, ac50 <inflateSync@@Base+0x19c>
    ac04:	cmp	w8, #0x3
    ac08:	b.hi	ac50 <inflateSync@@Base+0x19c>  // b.pmore
    ac0c:	mov	x11, xzr
    ac10:	mov	w12, w12
    ac14:	mov	w13, #0xff                  	// #255
    ac18:	mov	w14, #0x4                   	// #4
    ac1c:	ldrb	w15, [x10, x11]
    ac20:	cmp	w8, #0x2
    ac24:	sub	w16, w14, w8
    ac28:	csel	w17, wzr, w13, cc  // cc = lo, ul, last
    ac2c:	cmp	w15, #0x0
    ac30:	add	x11, x11, #0x1
    ac34:	csel	w16, w16, wzr, eq  // eq = none
    ac38:	cmp	w17, w15
    ac3c:	csinc	w8, w16, w8, ne  // ne = any
    ac40:	cmp	x11, x12
    ac44:	b.cs	ac50 <inflateSync@@Base+0x19c>  // b.hs, b.nlast
    ac48:	cmp	w8, #0x4
    ac4c:	b.cc	ac1c <inflateSync@@Base+0x168>  // b.lo, b.ul, b.last
    ac50:	str	w8, [x9, #140]
    ac54:	cmp	w8, #0x4
    ac58:	ldr	w8, [x0, #8]
    ac5c:	ldr	x13, [x0, #16]
    ac60:	mov	w12, w11
    ac64:	add	x10, x10, x12
    ac68:	str	x10, [x0]
    ac6c:	sub	w8, w8, w11
    ac70:	add	x10, x13, x12
    ac74:	str	w8, [x0, #8]
    ac78:	str	x10, [x0, #16]
    ac7c:	b.ne	acf4 <inflateSync@@Base+0x240>  // b.any
    ac80:	ldr	x11, [x0, #40]
    ac84:	str	xzr, [x9, #64]
    ac88:	str	wzr, [x9, #60]
    ac8c:	str	xzr, [x9, #40]
    ac90:	str	xzr, [x0, #16]
    ac94:	stp	xzr, xzr, [x0, #40]
    ac98:	ldr	w8, [x9, #16]
    ac9c:	cbz	w8, aca8 <inflateSync@@Base+0x1f4>
    aca0:	and	x8, x8, #0x1
    aca4:	str	x8, [x0, #96]
    aca8:	mov	w12, #0x8000                	// #32768
    acac:	str	w12, [x9, #28]
    acb0:	adrp	x12, 12000 <gzclose_w@@ZLIB_1.2.3.5+0x25d0>
    acb4:	ldr	d0, [x12, #1872]
    acb8:	add	x12, x9, #0x558
    acbc:	str	x12, [x9, #144]
    acc0:	stp	x12, x12, [x9, #104]
    acc4:	adrp	x12, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    acc8:	str	d0, [x9, #7144]
    accc:	ldr	d0, [x12, #3384]
    acd0:	mov	w8, wzr
    acd4:	str	wzr, [x9, #20]
    acd8:	str	xzr, [x9, #48]
    acdc:	str	xzr, [x9, #80]
    ace0:	str	wzr, [x9, #88]
    ace4:	str	x10, [x0, #16]
    ace8:	str	x11, [x0, #40]
    acec:	str	d0, [x9, #8]
    acf0:	b	ab14 <inflateSync@@Base+0x60>
    acf4:	mov	w8, #0xfffffffd            	// #-3
    acf8:	b	ab14 <inflateSync@@Base+0x60>

000000000000acfc <inflateSyncPoint@@Base>:
    acfc:	cbz	x0, ad54 <inflateSyncPoint@@Base+0x58>
    ad00:	ldr	x8, [x0, #64]
    ad04:	cbz	x8, ad54 <inflateSyncPoint@@Base+0x58>
    ad08:	ldr	x8, [x0, #72]
    ad0c:	cbz	x8, ad54 <inflateSyncPoint@@Base+0x58>
    ad10:	ldr	x8, [x0, #56]
    ad14:	cbz	x8, ad54 <inflateSyncPoint@@Base+0x58>
    ad18:	ldr	x9, [x8]
    ad1c:	cmp	x9, x0
    ad20:	b.ne	ad54 <inflateSyncPoint@@Base+0x58>  // b.any
    ad24:	ldr	w9, [x8, #8]
    ad28:	mov	w10, #0xffffc0cc            	// #-16180
    ad2c:	add	w10, w9, w10
    ad30:	cmp	w10, #0x1f
    ad34:	b.hi	ad54 <inflateSyncPoint@@Base+0x58>  // b.pmore
    ad38:	mov	w10, #0x3f41                	// #16193
    ad3c:	cmp	w9, w10
    ad40:	b.ne	ad5c <inflateSyncPoint@@Base+0x60>  // b.any
    ad44:	ldr	w8, [x8, #88]
    ad48:	cmp	w8, #0x0
    ad4c:	cset	w0, eq  // eq = none
    ad50:	ret
    ad54:	mov	w0, #0xfffffffe            	// #-2
    ad58:	ret
    ad5c:	mov	w0, wzr
    ad60:	ret

000000000000ad64 <inflateCopy@@ZLIB_1.2.0>:
    ad64:	stp	x29, x30, [sp, #-64]!
    ad68:	str	x23, [sp, #16]
    ad6c:	stp	x22, x21, [sp, #32]
    ad70:	stp	x20, x19, [sp, #48]
    ad74:	mov	x29, sp
    ad78:	cbz	x1, ada4 <inflateCopy@@ZLIB_1.2.0+0x40>
    ad7c:	ldr	x8, [x1, #64]
    ad80:	mov	x22, x1
    ad84:	cbz	x8, ada4 <inflateCopy@@ZLIB_1.2.0+0x40>
    ad88:	ldr	x9, [x22, #72]
    ad8c:	cbz	x9, ada4 <inflateCopy@@ZLIB_1.2.0+0x40>
    ad90:	ldr	x20, [x22, #56]
    ad94:	cbz	x20, ada4 <inflateCopy@@ZLIB_1.2.0+0x40>
    ad98:	ldr	x9, [x20]
    ad9c:	cmp	x9, x22
    ada0:	b.eq	adbc <inflateCopy@@ZLIB_1.2.0+0x58>  // b.none
    ada4:	mov	w0, #0xfffffffe            	// #-2
    ada8:	ldp	x20, x19, [sp, #48]
    adac:	ldp	x22, x21, [sp, #32]
    adb0:	ldr	x23, [sp, #16]
    adb4:	ldp	x29, x30, [sp], #64
    adb8:	ret
    adbc:	mov	x19, x0
    adc0:	mov	w0, #0xfffffffe            	// #-2
    adc4:	cbz	x19, ada8 <inflateCopy@@ZLIB_1.2.0+0x44>
    adc8:	ldr	w9, [x20, #8]
    adcc:	mov	w10, #0xffffc0cc            	// #-16180
    add0:	add	w9, w9, w10
    add4:	cmp	w9, #0x1f
    add8:	b.hi	ada8 <inflateCopy@@ZLIB_1.2.0+0x44>  // b.pmore
    addc:	ldr	x0, [x22, #80]
    ade0:	mov	w1, #0x1                   	// #1
    ade4:	mov	w2, #0x1bf8                	// #7160
    ade8:	blr	x8
    adec:	cbz	x0, ae2c <inflateCopy@@ZLIB_1.2.0+0xc8>
    adf0:	ldr	x8, [x20, #72]
    adf4:	mov	x21, x0
    adf8:	cbz	x8, ae34 <inflateCopy@@ZLIB_1.2.0+0xd0>
    adfc:	ldr	w9, [x20, #56]
    ae00:	ldr	x8, [x22, #64]
    ae04:	ldr	x0, [x22, #80]
    ae08:	mov	w10, #0x1                   	// #1
    ae0c:	lsl	w1, w10, w9
    ae10:	mov	w2, #0x1                   	// #1
    ae14:	blr	x8
    ae18:	mov	x23, x0
    ae1c:	cbnz	x0, ae38 <inflateCopy@@ZLIB_1.2.0+0xd4>
    ae20:	ldp	x8, x0, [x22, #72]
    ae24:	mov	x1, x21
    ae28:	blr	x8
    ae2c:	mov	w0, #0xfffffffc            	// #-4
    ae30:	b	ada8 <inflateCopy@@ZLIB_1.2.0+0x44>
    ae34:	mov	x23, xzr
    ae38:	ldp	q1, q0, [x22, #16]
    ae3c:	ldr	q2, [x22]
    ae40:	mov	w2, #0x1bf8                	// #7160
    ae44:	mov	x0, x21
    ae48:	stp	q1, q0, [x19, #16]
    ae4c:	str	q2, [x19]
    ae50:	ldp	q1, q0, [x22, #80]
    ae54:	ldp	q3, q2, [x22, #48]
    ae58:	mov	x1, x20
    ae5c:	stp	q1, q0, [x19, #80]
    ae60:	stp	q3, q2, [x19, #48]
    ae64:	bl	2330 <memcpy@plt>
    ae68:	str	x19, [x21]
    ae6c:	ldr	x10, [x20, #104]
    ae70:	add	x8, x20, #0x558
    ae74:	subs	x9, x10, x8
    ae78:	b.cc	aea8 <inflateCopy@@ZLIB_1.2.0+0x144>  // b.lo, b.ul, b.last
    ae7c:	mov	w11, #0x1be4                	// #7140
    ae80:	add	x11, x20, x11
    ae84:	cmp	x10, x11
    ae88:	b.hi	aea8 <inflateCopy@@ZLIB_1.2.0+0x144>  // b.pmore
    ae8c:	add	x10, x21, #0x558
    ae90:	add	x9, x10, x9
    ae94:	str	x9, [x21, #104]
    ae98:	ldr	x9, [x20, #112]
    ae9c:	sub	x9, x9, x8
    aea0:	add	x9, x10, x9
    aea4:	str	x9, [x21, #112]
    aea8:	ldr	x9, [x20, #144]
    aeac:	sub	x8, x9, x8
    aeb0:	add	x8, x21, x8
    aeb4:	add	x8, x8, #0x558
    aeb8:	str	x8, [x21, #144]
    aebc:	cbz	x23, aed8 <inflateCopy@@ZLIB_1.2.0+0x174>
    aec0:	ldr	w8, [x20, #56]
    aec4:	ldr	x1, [x20, #72]
    aec8:	mov	w9, #0x1                   	// #1
    aecc:	mov	x0, x23
    aed0:	lsl	x2, x9, x8
    aed4:	bl	2330 <memcpy@plt>
    aed8:	mov	w0, wzr
    aedc:	str	x23, [x21, #72]
    aee0:	str	x21, [x19, #56]
    aee4:	b	ada8 <inflateCopy@@ZLIB_1.2.0+0x44>

000000000000aee8 <inflateUndermine@@ZLIB_1.2.3.3>:
    aee8:	cbz	x0, af34 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    aeec:	ldr	x8, [x0, #64]
    aef0:	cbz	x8, af34 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    aef4:	ldr	x8, [x0, #72]
    aef8:	cbz	x8, af34 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    aefc:	ldr	x8, [x0, #56]
    af00:	cbz	x8, af34 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
    af04:	ldr	x9, [x8]
    af08:	cmp	x9, x0
    af0c:	b.ne	af34 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>  // b.any
    af10:	ldr	w9, [x8, #8]
    af14:	mov	w10, #0xffffc0cc            	// #-16180
    af18:	add	w9, w9, w10
    af1c:	cmp	w9, #0x1f
    af20:	b.hi	af34 <inflateUndermine@@ZLIB_1.2.3.3+0x4c>  // b.pmore
    af24:	mov	w9, #0x1                   	// #1
    af28:	mov	w0, #0xfffffffd            	// #-3
    af2c:	str	w9, [x8, #7144]
    af30:	ret
    af34:	mov	w0, #0xfffffffe            	// #-2
    af38:	ret

000000000000af3c <inflateValidate@@ZLIB_1.2.9>:
    af3c:	cbz	x0, af98 <inflateValidate@@ZLIB_1.2.9+0x5c>
    af40:	ldr	x8, [x0, #64]
    af44:	cbz	x8, af98 <inflateValidate@@ZLIB_1.2.9+0x5c>
    af48:	ldr	x8, [x0, #72]
    af4c:	cbz	x8, af98 <inflateValidate@@ZLIB_1.2.9+0x5c>
    af50:	ldr	x8, [x0, #56]
    af54:	cbz	x8, af98 <inflateValidate@@ZLIB_1.2.9+0x5c>
    af58:	ldr	x9, [x8]
    af5c:	cmp	x9, x0
    af60:	b.ne	af98 <inflateValidate@@ZLIB_1.2.9+0x5c>  // b.any
    af64:	ldr	w9, [x8, #8]
    af68:	mov	w10, #0xffffc0cc            	// #-16180
    af6c:	add	w9, w9, w10
    af70:	cmp	w9, #0x1f
    af74:	b.hi	af98 <inflateValidate@@ZLIB_1.2.9+0x5c>  // b.pmore
    af78:	ldr	w9, [x8, #16]
    af7c:	cmp	w1, #0x0
    af80:	mov	w0, wzr
    af84:	and	w10, w9, #0xfffffffb
    af88:	orr	w9, w9, #0x4
    af8c:	csel	w9, w10, w9, eq  // eq = none
    af90:	str	w9, [x8, #16]
    af94:	ret
    af98:	mov	w0, #0xfffffffe            	// #-2
    af9c:	ret

000000000000afa0 <inflateMark@@ZLIB_1.2.3.4>:
    afa0:	cbz	x0, b008 <inflateMark@@ZLIB_1.2.3.4+0x68>
    afa4:	ldr	x8, [x0, #64]
    afa8:	cbz	x8, b008 <inflateMark@@ZLIB_1.2.3.4+0x68>
    afac:	ldr	x8, [x0, #72]
    afb0:	cbz	x8, b008 <inflateMark@@ZLIB_1.2.3.4+0x68>
    afb4:	ldr	x8, [x0, #56]
    afb8:	cbz	x8, b008 <inflateMark@@ZLIB_1.2.3.4+0x68>
    afbc:	ldr	x9, [x8]
    afc0:	cmp	x9, x0
    afc4:	b.ne	b008 <inflateMark@@ZLIB_1.2.3.4+0x68>  // b.any
    afc8:	ldr	w10, [x8, #8]
    afcc:	mov	w9, #0xffffc0cc            	// #-16180
    afd0:	add	w9, w10, w9
    afd4:	cmp	w9, #0x1f
    afd8:	b.hi	b008 <inflateMark@@ZLIB_1.2.3.4+0x68>  // b.pmore
    afdc:	ldrsw	x9, [x8, #7148]
    afe0:	mov	w11, #0x3f4c                	// #16204
    afe4:	cmp	w10, w11
    afe8:	lsl	x9, x9, #16
    afec:	b.eq	b010 <inflateMark@@ZLIB_1.2.3.4+0x70>  // b.none
    aff0:	mov	w11, #0x3f43                	// #16195
    aff4:	cmp	w10, w11
    aff8:	b.ne	b024 <inflateMark@@ZLIB_1.2.3.4+0x84>  // b.any
    affc:	ldr	w8, [x8, #92]
    b000:	add	x0, x9, w8, uxtw
    b004:	ret
    b008:	mov	x0, #0xffffffffffff0000    	// #-65536
    b00c:	ret
    b010:	ldr	w10, [x8, #7152]
    b014:	ldr	w8, [x8, #92]
    b018:	sub	w8, w10, w8
    b01c:	add	x0, x9, w8, uxtw
    b020:	ret
    b024:	add	x0, x9, wzr, uxtw
    b028:	ret

000000000000b02c <inflateCodesUsed@@ZLIB_1.2.9>:
    b02c:	cbz	x0, b07c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b030:	ldr	x8, [x0, #64]
    b034:	cbz	x8, b07c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b038:	ldr	x8, [x0, #72]
    b03c:	cbz	x8, b07c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b040:	ldr	x8, [x0, #56]
    b044:	cbz	x8, b07c <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b048:	ldr	x9, [x8]
    b04c:	cmp	x9, x0
    b050:	b.ne	b07c <inflateCodesUsed@@ZLIB_1.2.9+0x50>  // b.any
    b054:	ldr	w9, [x8, #8]
    b058:	mov	w10, #0xffffc0cc            	// #-16180
    b05c:	add	w9, w9, w10
    b060:	cmp	w9, #0x1f
    b064:	b.hi	b07c <inflateCodesUsed@@ZLIB_1.2.9+0x50>  // b.pmore
    b068:	ldr	x9, [x8, #144]
    b06c:	sub	x8, x9, x8
    b070:	sub	x8, x8, #0x558
    b074:	asr	x0, x8, #2
    b078:	ret
    b07c:	mov	x0, #0xffffffffffffffff    	// #-1
    b080:	ret
    b084:	sub	sp, sp, #0x90
    b088:	movi	v0.2d, #0x0
    b08c:	stp	x28, x27, [sp, #64]
    b090:	stp	x26, x25, [sp, #80]
    b094:	stp	x24, x23, [sp, #96]
    b098:	stp	x22, x21, [sp, #112]
    b09c:	stp	x20, x19, [sp, #128]
    b0a0:	stp	q0, q0, [sp, #32]
    b0a4:	cbz	w2, b0e4 <inflateCodesUsed@@ZLIB_1.2.9+0xb8>
    b0a8:	mov	w8, w2
    b0ac:	add	x9, sp, #0x20
    b0b0:	mov	x10, x1
    b0b4:	ldrh	w11, [x10], #2
    b0b8:	subs	x8, x8, #0x1
    b0bc:	lsl	x11, x11, #1
    b0c0:	ldrh	w12, [x9, x11]
    b0c4:	add	w12, w12, #0x1
    b0c8:	strh	w12, [x9, x11]
    b0cc:	b.ne	b0b4 <inflateCodesUsed@@ZLIB_1.2.9+0x88>  // b.any
    b0d0:	ldrh	w8, [sp, #62]
    b0d4:	ldr	w11, [x4]
    b0d8:	cbz	w8, b0e8 <inflateCodesUsed@@ZLIB_1.2.9+0xbc>
    b0dc:	mov	w9, #0xf                   	// #15
    b0e0:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b0e4:	ldr	w11, [x4]
    b0e8:	ldrh	w8, [sp, #60]
    b0ec:	cbz	w8, b0fc <inflateCodesUsed@@ZLIB_1.2.9+0xd0>
    b0f0:	mov	w8, wzr
    b0f4:	mov	w9, #0xe                   	// #14
    b0f8:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b0fc:	ldrh	w8, [sp, #58]
    b100:	cbz	w8, b110 <inflateCodesUsed@@ZLIB_1.2.9+0xe4>
    b104:	mov	w8, wzr
    b108:	mov	w9, #0xd                   	// #13
    b10c:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b110:	ldrh	w8, [sp, #56]
    b114:	cbz	w8, b124 <inflateCodesUsed@@ZLIB_1.2.9+0xf8>
    b118:	mov	w8, wzr
    b11c:	mov	w9, #0xc                   	// #12
    b120:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b124:	ldrh	w8, [sp, #54]
    b128:	cbz	w8, b138 <inflateCodesUsed@@ZLIB_1.2.9+0x10c>
    b12c:	mov	w8, wzr
    b130:	mov	w9, #0xb                   	// #11
    b134:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b138:	ldrh	w8, [sp, #52]
    b13c:	cbz	w8, b14c <inflateCodesUsed@@ZLIB_1.2.9+0x120>
    b140:	mov	w8, wzr
    b144:	mov	w9, #0xa                   	// #10
    b148:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b14c:	ldrh	w8, [sp, #50]
    b150:	cbz	w8, b160 <inflateCodesUsed@@ZLIB_1.2.9+0x134>
    b154:	mov	w8, wzr
    b158:	mov	w9, #0x9                   	// #9
    b15c:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b160:	ldrh	w8, [sp, #48]
    b164:	cbz	w8, b174 <inflateCodesUsed@@ZLIB_1.2.9+0x148>
    b168:	mov	w8, wzr
    b16c:	mov	w9, #0x8                   	// #8
    b170:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b174:	ldrh	w8, [sp, #46]
    b178:	cbz	w8, b188 <inflateCodesUsed@@ZLIB_1.2.9+0x15c>
    b17c:	mov	w8, wzr
    b180:	mov	w9, #0x7                   	// #7
    b184:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b188:	ldrh	w8, [sp, #44]
    b18c:	cbz	w8, b19c <inflateCodesUsed@@ZLIB_1.2.9+0x170>
    b190:	mov	w8, wzr
    b194:	mov	w9, #0x6                   	// #6
    b198:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b19c:	ldrh	w8, [sp, #42]
    b1a0:	cbz	w8, b1b0 <inflateCodesUsed@@ZLIB_1.2.9+0x184>
    b1a4:	mov	w8, wzr
    b1a8:	mov	w9, #0x5                   	// #5
    b1ac:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b1b0:	ldrh	w8, [sp, #40]
    b1b4:	cbz	w8, b1c4 <inflateCodesUsed@@ZLIB_1.2.9+0x198>
    b1b8:	mov	w8, wzr
    b1bc:	mov	w9, #0x4                   	// #4
    b1c0:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b1c4:	ldrh	w8, [sp, #38]
    b1c8:	cbz	w8, b1d8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ac>
    b1cc:	mov	w8, wzr
    b1d0:	mov	w9, #0x3                   	// #3
    b1d4:	b	b1e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bc>
    b1d8:	ldrh	w8, [sp, #36]
    b1dc:	cbz	w8, b648 <inflateCodesUsed@@ZLIB_1.2.9+0x61c>
    b1e0:	mov	w8, wzr
    b1e4:	mov	w9, #0x2                   	// #2
    b1e8:	cmp	w11, w9
    b1ec:	mov	w10, #0x1                   	// #1
    b1f0:	csel	w11, w9, w11, hi  // hi = pmore
    b1f4:	add	x12, sp, #0x20
    b1f8:	ldrh	w13, [x12, x10, lsl #1]
    b1fc:	cbnz	w13, b210 <inflateCodesUsed@@ZLIB_1.2.9+0x1e4>
    b200:	add	x10, x10, #0x1
    b204:	cmp	x9, x10
    b208:	b.ne	b1f8 <inflateCodesUsed@@ZLIB_1.2.9+0x1cc>  // b.any
    b20c:	mov	w10, w9
    b210:	ldrh	w12, [sp, #34]
    b214:	cmp	w11, w10
    b218:	csel	w11, w10, w11, cc  // cc = lo, ul, last
    b21c:	cmp	w12, #0x2
    b220:	b.hi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.pmore
    b224:	ldrh	w13, [sp, #36]
    b228:	mov	w15, #0x4                   	// #4
    b22c:	add	w14, w13, w12, lsl #1
    b230:	subs	w15, w15, w14
    b234:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b238:	ldrh	w14, [sp, #38]
    b23c:	lsl	w15, w15, #1
    b240:	subs	w16, w15, w14
    b244:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b248:	ldrh	w15, [sp, #40]
    b24c:	lsl	w16, w16, #1
    b250:	subs	w17, w16, w15
    b254:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b258:	ldrh	w16, [sp, #42]
    b25c:	lsl	w17, w17, #1
    b260:	subs	w18, w17, w16
    b264:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b268:	ldrh	w17, [sp, #44]
    b26c:	lsl	w18, w18, #1
    b270:	subs	w6, w18, w17
    b274:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b278:	ldrh	w18, [sp, #46]
    b27c:	lsl	w6, w6, #1
    b280:	subs	w7, w6, w18
    b284:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b288:	ldrh	w6, [sp, #48]
    b28c:	lsl	w7, w7, #1
    b290:	subs	w19, w7, w6
    b294:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b298:	ldrh	w7, [sp, #50]
    b29c:	lsl	w19, w19, #1
    b2a0:	subs	w20, w19, w7
    b2a4:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b2a8:	ldrh	w19, [sp, #52]
    b2ac:	lsl	w20, w20, #1
    b2b0:	subs	w21, w20, w19
    b2b4:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b2b8:	ldrh	w20, [sp, #54]
    b2bc:	lsl	w21, w21, #1
    b2c0:	subs	w22, w21, w20
    b2c4:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b2c8:	ldrh	w21, [sp, #56]
    b2cc:	lsl	w22, w22, #1
    b2d0:	subs	w23, w22, w21
    b2d4:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b2d8:	ldrh	w22, [sp, #58]
    b2dc:	lsl	w23, w23, #1
    b2e0:	subs	w24, w23, w22
    b2e4:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b2e8:	ldrh	w23, [sp, #60]
    b2ec:	lsl	w24, w24, #1
    b2f0:	subs	w24, w24, w23
    b2f4:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b2f8:	lsl	w24, w24, #1
    b2fc:	subs	w8, w24, w8
    b300:	b.mi	b39c <inflateCodesUsed@@ZLIB_1.2.9+0x370>  // b.first
    b304:	cbz	w8, b318 <inflateCodesUsed@@ZLIB_1.2.9+0x2ec>
    b308:	mov	w8, #0xffffffff            	// #-1
    b30c:	cbz	w0, b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b310:	cmp	w9, #0x1
    b314:	b.ne	b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>  // b.any
    b318:	add	w8, w13, w12
    b31c:	strh	w8, [sp, #6]
    b320:	add	w8, w14, w8
    b324:	strh	w8, [sp, #8]
    b328:	add	w8, w15, w8
    b32c:	strh	w8, [sp, #10]
    b330:	add	w8, w16, w8
    b334:	strh	w8, [sp, #12]
    b338:	add	w8, w17, w8
    b33c:	strh	w8, [sp, #14]
    b340:	add	w8, w18, w8
    b344:	strh	w8, [sp, #16]
    b348:	add	w8, w6, w8
    b34c:	strh	w8, [sp, #18]
    b350:	add	w8, w7, w8
    b354:	strh	w8, [sp, #20]
    b358:	add	w8, w19, w8
    b35c:	strh	w8, [sp, #22]
    b360:	add	w8, w20, w8
    b364:	strh	w8, [sp, #24]
    b368:	add	w8, w21, w8
    b36c:	strh	w8, [sp, #26]
    b370:	add	w8, w22, w8
    b374:	strh	w8, [sp, #28]
    b378:	add	w8, w23, w8
    b37c:	strh	wzr, [sp, #2]
    b380:	strh	w12, [sp, #4]
    b384:	strh	w8, [sp, #30]
    b388:	cbz	w2, b3ec <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>
    b38c:	mov	x8, xzr
    b390:	mov	w12, w2
    b394:	mov	x13, sp
    b398:	b	b3cc <inflateCodesUsed@@ZLIB_1.2.9+0x3a0>
    b39c:	mov	w8, #0xffffffff            	// #-1
    b3a0:	ldp	x20, x19, [sp, #128]
    b3a4:	ldp	x22, x21, [sp, #112]
    b3a8:	ldp	x24, x23, [sp, #96]
    b3ac:	ldp	x26, x25, [sp, #80]
    b3b0:	ldp	x28, x27, [sp, #64]
    b3b4:	mov	w0, w8
    b3b8:	add	sp, sp, #0x90
    b3bc:	ret
    b3c0:	add	x8, x8, #0x1
    b3c4:	cmp	x12, x8
    b3c8:	b.eq	b3ec <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>  // b.none
    b3cc:	ldrh	w14, [x1, x8, lsl #1]
    b3d0:	cbz	x14, b3c0 <inflateCodesUsed@@ZLIB_1.2.9+0x394>
    b3d4:	lsl	x14, x14, #1
    b3d8:	ldrh	w15, [x13, x14]
    b3dc:	add	w16, w15, #0x1
    b3e0:	strh	w16, [x13, x14]
    b3e4:	strh	w8, [x5, x15, lsl #1]
    b3e8:	b	b3c0 <inflateCodesUsed@@ZLIB_1.2.9+0x394>
    b3ec:	cbz	w0, b424 <inflateCodesUsed@@ZLIB_1.2.9+0x3f8>
    b3f0:	cmp	w0, #0x1
    b3f4:	b.ne	b43c <inflateCodesUsed@@ZLIB_1.2.9+0x410>  // b.any
    b3f8:	cmp	w11, #0x9
    b3fc:	mov	w8, #0x1                   	// #1
    b400:	b.hi	b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>  // b.pmore
    b404:	adrp	x14, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    b408:	adrp	x15, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    b40c:	mov	w13, wzr
    b410:	mov	w12, #0x101                 	// #257
    b414:	add	x14, x14, #0x152
    b418:	add	x15, x15, #0x114
    b41c:	mov	w16, #0x1                   	// #1
    b420:	b	b474 <inflateCodesUsed@@ZLIB_1.2.9+0x448>
    b424:	mov	w13, wzr
    b428:	mov	w16, wzr
    b42c:	mov	w12, #0x14                  	// #20
    b430:	mov	x15, x5
    b434:	mov	x14, x5
    b438:	b	b474 <inflateCodesUsed@@ZLIB_1.2.9+0x448>
    b43c:	cmp	w0, #0x2
    b440:	adrp	x14, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    b444:	adrp	x15, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    b448:	mov	w12, wzr
    b44c:	add	x14, x14, #0x1d0
    b450:	cset	w13, eq  // eq = none
    b454:	add	x15, x15, #0x190
    b458:	b.ne	b470 <inflateCodesUsed@@ZLIB_1.2.9+0x444>  // b.any
    b45c:	cmp	w11, #0x9
    b460:	mov	w16, w12
    b464:	b.ls	b474 <inflateCodesUsed@@ZLIB_1.2.9+0x448>  // b.plast
    b468:	mov	w8, #0x1                   	// #1
    b46c:	b	b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b470:	mov	w16, w12
    b474:	ldr	x6, [x3]
    b478:	mov	w7, #0x1                   	// #1
    b47c:	lsl	w17, w7, w11
    b480:	mov	w18, wzr
    b484:	mov	w2, wzr
    b488:	mov	w0, wzr
    b48c:	sub	w19, w17, #0x1
    b490:	mov	w8, #0xffffffff            	// #-1
    b494:	add	x20, sp, #0x20
    b498:	mov	w22, w11
    b49c:	lsl	w21, w7, w22
    b4a0:	ldrh	w23, [x5, w18, uxtw #1]
    b4a4:	add	w22, w23, #0x1
    b4a8:	cmp	w22, w12
    b4ac:	sub	w22, w10, w2
    b4b0:	b.cs	b4bc <inflateCodesUsed@@ZLIB_1.2.9+0x490>  // b.hs, b.nlast
    b4b4:	mov	w24, wzr
    b4b8:	b	b4e0 <inflateCodesUsed@@ZLIB_1.2.9+0x4b4>
    b4bc:	cmp	w12, w23
    b4c0:	b.ls	b4d0 <inflateCodesUsed@@ZLIB_1.2.9+0x4a4>  // b.plast
    b4c4:	mov	w23, wzr
    b4c8:	mov	w24, #0x60                  	// #96
    b4cc:	b	b4e0 <inflateCodesUsed@@ZLIB_1.2.9+0x4b4>
    b4d0:	sub	w23, w23, w12
    b4d4:	lsl	x23, x23, #1
    b4d8:	ldrb	w24, [x14, x23]
    b4dc:	ldrh	w23, [x15, x23]
    b4e0:	lsl	w25, w7, w22
    b4e4:	lsr	w26, w0, w2
    b4e8:	sub	w26, w26, w25
    b4ec:	mov	w27, w21
    b4f0:	add	w28, w26, w27
    b4f4:	subs	w27, w27, w25
    b4f8:	add	x28, x6, w28, uxtw #2
    b4fc:	strb	w24, [x28]
    b500:	strb	w22, [x28, #1]
    b504:	strh	w23, [x28, #2]
    b508:	b.ne	b4f0 <inflateCodesUsed@@ZLIB_1.2.9+0x4c4>  // b.any
    b50c:	sub	w23, w10, #0x1
    b510:	lsl	w24, w7, w23
    b514:	mov	w23, w24
    b518:	tst	w24, w0
    b51c:	lsr	w24, w24, #1
    b520:	b.ne	b514 <inflateCodesUsed@@ZLIB_1.2.9+0x4e8>  // b.any
    b524:	sub	w24, w23, #0x1
    b528:	mov	w25, w10
    b52c:	and	w0, w24, w0
    b530:	lsl	x24, x25, #1
    b534:	ldrh	w25, [x20, x24]
    b538:	add	w0, w0, w23
    b53c:	cmp	w23, #0x0
    b540:	csel	w0, wzr, w0, eq  // eq = none
    b544:	sub	w23, w25, #0x1
    b548:	add	w18, w18, #0x1
    b54c:	tst	w23, #0xffff
    b550:	strh	w23, [x20, x24]
    b554:	b.ne	b568 <inflateCodesUsed@@ZLIB_1.2.9+0x53c>  // b.any
    b558:	cmp	w10, w9
    b55c:	b.eq	b618 <inflateCodesUsed@@ZLIB_1.2.9+0x5ec>  // b.none
    b560:	ldrh	w10, [x5, w18, uxtw #1]
    b564:	ldrh	w10, [x1, x10, lsl #1]
    b568:	cmp	w10, w11
    b56c:	b.ls	b4a0 <inflateCodesUsed@@ZLIB_1.2.9+0x474>  // b.plast
    b570:	and	w23, w0, w19
    b574:	cmp	w23, w8
    b578:	b.eq	b4a0 <inflateCodesUsed@@ZLIB_1.2.9+0x474>  // b.none
    b57c:	cmp	w2, #0x0
    b580:	csel	w2, w11, w2, eq  // eq = none
    b584:	sub	w22, w10, w2
    b588:	cmp	w10, w9
    b58c:	lsl	w8, w7, w22
    b590:	b.cs	b5c8 <inflateCodesUsed@@ZLIB_1.2.9+0x59c>  // b.hs, b.nlast
    b594:	sub	w22, w9, w2
    b598:	mov	w24, w10
    b59c:	ldrh	w25, [x20, x24, lsl #1]
    b5a0:	sub	w8, w8, w25
    b5a4:	cmp	w8, #0x1
    b5a8:	b.lt	b5c0 <inflateCodesUsed@@ZLIB_1.2.9+0x594>  // b.tstop
    b5ac:	add	x24, x24, #0x1
    b5b0:	cmp	w24, w9
    b5b4:	lsl	w8, w8, #1
    b5b8:	b.cc	b59c <inflateCodesUsed@@ZLIB_1.2.9+0x570>  // b.lo, b.ul, b.last
    b5bc:	b	b5c4 <inflateCodesUsed@@ZLIB_1.2.9+0x598>
    b5c0:	sub	w22, w24, w2
    b5c4:	lsl	w8, w7, w22
    b5c8:	add	w17, w8, w17
    b5cc:	cmp	w17, #0x354
    b5d0:	cset	w8, hi  // hi = pmore
    b5d4:	cmp	w17, #0x250
    b5d8:	and	w25, w16, w8
    b5dc:	cset	w24, hi  // hi = pmore
    b5e0:	mov	w8, #0x1                   	// #1
    b5e4:	tbnz	w25, #0, b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b5e8:	and	w24, w13, w24
    b5ec:	tbnz	w24, #0, b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b5f0:	ldr	x8, [x3]
    b5f4:	add	x6, x6, w21, uxtw #2
    b5f8:	add	x21, x8, w23, uxtw #2
    b5fc:	sub	w8, w6, w8
    b600:	lsr	w8, w8, #2
    b604:	strb	w22, [x21]
    b608:	strb	w11, [x21, #1]
    b60c:	strh	w8, [x21, #2]
    b610:	mov	w8, w23
    b614:	b	b49c <inflateCodesUsed@@ZLIB_1.2.9+0x470>
    b618:	cbz	w0, b630 <inflateCodesUsed@@ZLIB_1.2.9+0x604>
    b61c:	add	x8, x6, w0, uxtw #2
    b620:	mov	w9, #0x40                  	// #64
    b624:	strb	w9, [x8]
    b628:	strb	w22, [x8, #1]
    b62c:	strh	wzr, [x8, #2]
    b630:	ldr	x9, [x3]
    b634:	mov	w8, wzr
    b638:	add	x9, x9, w17, uxtw #2
    b63c:	str	x9, [x3]
    b640:	str	w11, [x4]
    b644:	b	b3a0 <inflateCodesUsed@@ZLIB_1.2.9+0x374>
    b648:	ldrh	w8, [sp, #34]
    b64c:	cbz	w8, b668 <inflateCodesUsed@@ZLIB_1.2.9+0x63c>
    b650:	cmp	w11, #0x0
    b654:	mov	w8, wzr
    b658:	mov	w9, #0x1                   	// #1
    b65c:	cset	w11, ne  // ne = any
    b660:	mov	w10, #0x1                   	// #1
    b664:	b	b210 <inflateCodesUsed@@ZLIB_1.2.9+0x1e4>
    b668:	ldr	x9, [x3]
    b66c:	mov	w10, #0x140                 	// #320
    b670:	add	x11, x9, #0x4
    b674:	str	x11, [x3]
    b678:	str	w10, [x9]
    b67c:	ldr	x9, [x3]
    b680:	mov	w11, #0x1                   	// #1
    b684:	add	x12, x9, #0x4
    b688:	str	x12, [x3]
    b68c:	str	w10, [x9]
    b690:	b	b640 <inflateCodesUsed@@ZLIB_1.2.9+0x614>
    b694:	add	x8, x0, #0xd4
    b698:	str	x8, [x0, #2904]
    b69c:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    b6a0:	add	x8, x8, #0xd08
    b6a4:	str	x8, [x0, #2920]
    b6a8:	add	x8, x0, #0x9c8
    b6ac:	str	x8, [x0, #2928]
    b6b0:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    b6b4:	add	x8, x8, #0xd28
    b6b8:	str	x8, [x0, #2944]
    b6bc:	add	x8, x0, #0xabc
    b6c0:	str	x8, [x0, #2952]
    b6c4:	adrp	x8, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    b6c8:	add	x8, x8, #0xd48
    b6cc:	strh	wzr, [x0, #5936]
    b6d0:	str	x8, [x0, #2968]
    b6d4:	str	wzr, [x0, #5940]
    b6d8:	b	b6dc <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>
    b6dc:	mov	x8, xzr
    b6e0:	add	x9, x0, x8
    b6e4:	add	x8, x8, #0x8
    b6e8:	cmp	x8, #0x478
    b6ec:	strh	wzr, [x9, #212]
    b6f0:	strh	wzr, [x9, #216]
    b6f4:	b.ne	b6e0 <inflateCodesUsed@@ZLIB_1.2.9+0x6b4>  // b.any
    b6f8:	mov	w8, #0x1                   	// #1
    b6fc:	movi	v0.2d, #0x0
    b700:	strh	w8, [x0, #1236]
    b704:	mov	w8, #0x1718                	// #5912
    b708:	strh	wzr, [x0, #2504]
    b70c:	strh	wzr, [x0, #2508]
    b710:	strh	wzr, [x0, #2512]
    b714:	strh	wzr, [x0, #2516]
    b718:	strh	wzr, [x0, #2520]
    b71c:	strh	wzr, [x0, #2524]
    b720:	strh	wzr, [x0, #2528]
    b724:	strh	wzr, [x0, #2532]
    b728:	strh	wzr, [x0, #2536]
    b72c:	strh	wzr, [x0, #2540]
    b730:	strh	wzr, [x0, #2544]
    b734:	strh	wzr, [x0, #2548]
    b738:	strh	wzr, [x0, #2552]
    b73c:	strh	wzr, [x0, #2556]
    b740:	strh	wzr, [x0, #2560]
    b744:	strh	wzr, [x0, #2564]
    b748:	strh	wzr, [x0, #2568]
    b74c:	strh	wzr, [x0, #2572]
    b750:	strh	wzr, [x0, #2576]
    b754:	strh	wzr, [x0, #2580]
    b758:	strh	wzr, [x0, #2584]
    b75c:	strh	wzr, [x0, #2588]
    b760:	strh	wzr, [x0, #2592]
    b764:	strh	wzr, [x0, #2596]
    b768:	strh	wzr, [x0, #2600]
    b76c:	strh	wzr, [x0, #2604]
    b770:	strh	wzr, [x0, #2608]
    b774:	strh	wzr, [x0, #2612]
    b778:	strh	wzr, [x0, #2616]
    b77c:	strh	wzr, [x0, #2620]
    b780:	strh	wzr, [x0, #2748]
    b784:	strh	wzr, [x0, #2752]
    b788:	strh	wzr, [x0, #2756]
    b78c:	strh	wzr, [x0, #2760]
    b790:	strh	wzr, [x0, #2764]
    b794:	strh	wzr, [x0, #2768]
    b798:	strh	wzr, [x0, #2772]
    b79c:	strh	wzr, [x0, #2776]
    b7a0:	strh	wzr, [x0, #2780]
    b7a4:	strh	wzr, [x0, #2784]
    b7a8:	strh	wzr, [x0, #2788]
    b7ac:	strh	wzr, [x0, #2792]
    b7b0:	strh	wzr, [x0, #2796]
    b7b4:	strh	wzr, [x0, #2800]
    b7b8:	strh	wzr, [x0, #2804]
    b7bc:	strh	wzr, [x0, #2808]
    b7c0:	strh	wzr, [x0, #2812]
    b7c4:	strh	wzr, [x0, #2816]
    b7c8:	strh	wzr, [x0, #2820]
    b7cc:	str	wzr, [x0, #5900]
    b7d0:	str	q0, [x0, x8]
    b7d4:	str	wzr, [x0, #5928]
    b7d8:	ret
    b7dc:	stp	x29, x30, [sp, #-32]!
    b7e0:	stp	x20, x19, [sp, #16]
    b7e4:	ldr	w10, [x0, #5940]
    b7e8:	ldrh	w8, [x0, #5936]
    b7ec:	and	w9, w3, #0xffff
    b7f0:	mov	x19, x2
    b7f4:	lsl	w11, w9, w10
    b7f8:	mov	x20, x0
    b7fc:	orr	w8, w8, w11
    b800:	cmp	w10, #0xe
    b804:	mov	x29, sp
    b808:	strh	w8, [x0, #5936]
    b80c:	b.lt	b860 <inflateCodesUsed@@ZLIB_1.2.9+0x834>  // b.tstop
    b810:	ldr	x10, [x20, #40]
    b814:	ldr	x11, [x20, #16]
    b818:	add	x12, x10, #0x1
    b81c:	str	x12, [x20, #40]
    b820:	mov	w12, #0x1730                	// #5936
    b824:	strb	w8, [x11, x10]
    b828:	add	x12, x20, x12
    b82c:	ldr	x8, [x20, #40]
    b830:	ldrb	w10, [x12, #1]
    b834:	ldr	x11, [x20, #16]
    b838:	add	x12, x8, #0x1
    b83c:	str	x12, [x20, #40]
    b840:	strb	w10, [x11, x8]
    b844:	ldr	w10, [x20, #5940]
    b848:	mov	w8, #0x10                  	// #16
    b84c:	sub	w8, w8, w10
    b850:	lsr	w8, w9, w8
    b854:	strh	w8, [x20, #5936]
    b858:	sub	w9, w10, #0xd
    b85c:	b	b864 <inflateCodesUsed@@ZLIB_1.2.9+0x838>
    b860:	add	w9, w10, #0x3
    b864:	cmp	w9, #0x9
    b868:	str	w9, [x20, #5940]
    b86c:	b.lt	b898 <inflateCodesUsed@@ZLIB_1.2.9+0x86c>  // b.tstop
    b870:	ldr	x9, [x20, #40]
    b874:	ldr	x10, [x20, #16]
    b878:	add	x11, x9, #0x1
    b87c:	str	x11, [x20, #40]
    b880:	strb	w8, [x10, x9]
    b884:	mov	w8, #0x1731                	// #5937
    b888:	ldr	x9, [x20, #40]
    b88c:	ldr	x10, [x20, #16]
    b890:	ldrb	w8, [x20, x8]
    b894:	b	b8a8 <inflateCodesUsed@@ZLIB_1.2.9+0x87c>
    b898:	cmp	w9, #0x1
    b89c:	b.lt	b8b8 <inflateCodesUsed@@ZLIB_1.2.9+0x88c>  // b.tstop
    b8a0:	ldr	x9, [x20, #40]
    b8a4:	ldr	x10, [x20, #16]
    b8a8:	add	x11, x9, #0x1
    b8ac:	add	x9, x10, x9
    b8b0:	str	x11, [x20, #40]
    b8b4:	strb	w8, [x9]
    b8b8:	ldr	x8, [x20, #40]
    b8bc:	ldr	x9, [x20, #16]
    b8c0:	strh	wzr, [x20, #5936]
    b8c4:	str	wzr, [x20, #5940]
    b8c8:	add	x10, x8, #0x1
    b8cc:	str	x10, [x20, #40]
    b8d0:	strb	w19, [x9, x8]
    b8d4:	ldr	x8, [x20, #40]
    b8d8:	ldr	x9, [x20, #16]
    b8dc:	ubfx	x10, x19, #8, #24
    b8e0:	mov	x2, x19
    b8e4:	add	x11, x8, #0x1
    b8e8:	str	x11, [x20, #40]
    b8ec:	strb	w10, [x9, x8]
    b8f0:	ldr	x8, [x20, #40]
    b8f4:	ldr	x9, [x20, #16]
    b8f8:	mvn	w10, w19
    b8fc:	add	x11, x8, #0x1
    b900:	str	x11, [x20, #40]
    b904:	strb	w10, [x9, x8]
    b908:	ldr	x8, [x20, #40]
    b90c:	ldr	x9, [x20, #16]
    b910:	lsr	w10, w10, #8
    b914:	add	x11, x8, #0x1
    b918:	str	x11, [x20, #40]
    b91c:	strb	w10, [x9, x8]
    b920:	ldr	x8, [x20, #16]
    b924:	ldr	x9, [x20, #40]
    b928:	add	x0, x8, x9
    b92c:	bl	2330 <memcpy@plt>
    b930:	ldr	x8, [x20, #40]
    b934:	add	x8, x8, x19
    b938:	str	x8, [x20, #40]
    b93c:	ldp	x20, x19, [sp, #16]
    b940:	ldp	x29, x30, [sp], #32
    b944:	ret
    b948:	ldr	w8, [x0, #5940]
    b94c:	cmp	w8, #0x10
    b950:	b.ne	b998 <inflateCodesUsed@@ZLIB_1.2.9+0x96c>  // b.any
    b954:	mov	w9, #0x1730                	// #5936
    b958:	ldr	x11, [x0, #40]
    b95c:	add	x9, x0, x9
    b960:	ldr	x10, [x0, #16]
    b964:	ldrb	w12, [x9]
    b968:	add	x13, x11, #0x1
    b96c:	str	x13, [x0, #40]
    b970:	mov	w8, wzr
    b974:	strb	w12, [x10, x11]
    b978:	ldr	x10, [x0, #40]
    b97c:	ldrb	w9, [x9, #1]
    b980:	ldr	x11, [x0, #16]
    b984:	add	x12, x10, #0x1
    b988:	str	x12, [x0, #40]
    b98c:	strb	w9, [x11, x10]
    b990:	strh	wzr, [x0, #5936]
    b994:	b	b9d0 <inflateCodesUsed@@ZLIB_1.2.9+0x9a4>
    b998:	cmp	w8, #0x8
    b99c:	b.lt	b9d4 <inflateCodesUsed@@ZLIB_1.2.9+0x9a8>  // b.tstop
    b9a0:	mov	w8, #0x1730                	// #5936
    b9a4:	ldr	x10, [x0, #40]
    b9a8:	add	x8, x0, x8
    b9ac:	ldr	x9, [x0, #16]
    b9b0:	ldrb	w11, [x8]
    b9b4:	add	x12, x10, #0x1
    b9b8:	str	x12, [x0, #40]
    b9bc:	strb	w11, [x9, x10]
    b9c0:	ldrb	w8, [x8, #1]
    b9c4:	ldr	w9, [x0, #5940]
    b9c8:	strh	w8, [x0, #5936]
    b9cc:	sub	w8, w9, #0x8
    b9d0:	str	w8, [x0, #5940]
    b9d4:	ret
    b9d8:	ldr	w10, [x0, #5940]
    b9dc:	ldrh	w8, [x0, #5936]
    b9e0:	mov	w9, #0x2                   	// #2
    b9e4:	lsl	w11, w9, w10
    b9e8:	orr	w8, w8, w11
    b9ec:	cmp	w10, #0xe
    b9f0:	strh	w8, [x0, #5936]
    b9f4:	b.lt	ba48 <inflateCodesUsed@@ZLIB_1.2.9+0xa1c>  // b.tstop
    b9f8:	ldr	x10, [x0, #40]
    b9fc:	ldr	x11, [x0, #16]
    ba00:	add	x12, x10, #0x1
    ba04:	str	x12, [x0, #40]
    ba08:	mov	w12, #0x1730                	// #5936
    ba0c:	strb	w8, [x11, x10]
    ba10:	add	x12, x0, x12
    ba14:	ldr	x8, [x0, #40]
    ba18:	ldrb	w10, [x12, #1]
    ba1c:	ldr	x11, [x0, #16]
    ba20:	add	x12, x8, #0x1
    ba24:	str	x12, [x0, #40]
    ba28:	strb	w10, [x11, x8]
    ba2c:	ldr	w10, [x0, #5940]
    ba30:	mov	w8, #0x10                  	// #16
    ba34:	sub	w8, w8, w10
    ba38:	lsr	w8, w9, w8
    ba3c:	strh	w8, [x0, #5936]
    ba40:	sub	w9, w10, #0xd
    ba44:	b	ba4c <inflateCodesUsed@@ZLIB_1.2.9+0xa20>
    ba48:	add	w9, w10, #0x3
    ba4c:	cmp	w9, #0xa
    ba50:	str	w9, [x0, #5940]
    ba54:	b.lt	baa0 <inflateCodesUsed@@ZLIB_1.2.9+0xa74>  // b.tstop
    ba58:	ldr	x9, [x0, #40]
    ba5c:	ldr	x10, [x0, #16]
    ba60:	add	x11, x9, #0x1
    ba64:	str	x11, [x0, #40]
    ba68:	mov	w11, #0x1730                	// #5936
    ba6c:	strb	w8, [x10, x9]
    ba70:	add	x11, x0, x11
    ba74:	ldr	x8, [x0, #40]
    ba78:	ldrb	w9, [x11, #1]
    ba7c:	ldr	x10, [x0, #16]
    ba80:	add	x11, x8, #0x1
    ba84:	str	x11, [x0, #40]
    ba88:	strb	w9, [x10, x8]
    ba8c:	ldr	w8, [x0, #5940]
    ba90:	strh	wzr, [x0, #5936]
    ba94:	sub	w9, w8, #0x9
    ba98:	mov	w8, wzr
    ba9c:	b	baa4 <inflateCodesUsed@@ZLIB_1.2.9+0xa78>
    baa0:	add	w9, w9, #0x7
    baa4:	cmp	w9, #0x10
    baa8:	str	w9, [x0, #5940]
    baac:	b.ne	baf0 <inflateCodesUsed@@ZLIB_1.2.9+0xac4>  // b.any
    bab0:	ldr	x10, [x0, #40]
    bab4:	ldr	x11, [x0, #16]
    bab8:	mov	w12, #0x1730                	// #5936
    babc:	add	x12, x0, x12
    bac0:	add	x13, x10, #0x1
    bac4:	str	x13, [x0, #40]
    bac8:	strb	w8, [x11, x10]
    bacc:	ldr	x8, [x0, #40]
    bad0:	ldrb	w10, [x12, #1]
    bad4:	ldr	x11, [x0, #16]
    bad8:	mov	w9, wzr
    badc:	add	x12, x8, #0x1
    bae0:	str	x12, [x0, #40]
    bae4:	strb	w10, [x11, x8]
    bae8:	strh	wzr, [x0, #5936]
    baec:	b	bb24 <inflateCodesUsed@@ZLIB_1.2.9+0xaf8>
    baf0:	cmp	w9, #0x8
    baf4:	b.lt	bb28 <inflateCodesUsed@@ZLIB_1.2.9+0xafc>  // b.tstop
    baf8:	ldr	x9, [x0, #40]
    bafc:	ldr	x10, [x0, #16]
    bb00:	mov	w11, #0x1730                	// #5936
    bb04:	add	x11, x0, x11
    bb08:	add	x12, x9, #0x1
    bb0c:	str	x12, [x0, #40]
    bb10:	strb	w8, [x10, x9]
    bb14:	ldr	w9, [x0, #5940]
    bb18:	ldrb	w8, [x11, #1]
    bb1c:	sub	w9, w9, #0x8
    bb20:	strh	w8, [x0, #5936]
    bb24:	str	w9, [x0, #5940]
    bb28:	ret
    bb2c:	stp	x29, x30, [sp, #-64]!
    bb30:	stp	x22, x21, [sp, #32]
    bb34:	stp	x20, x19, [sp, #48]
    bb38:	ldr	w8, [x0, #196]
    bb3c:	mov	w20, w3
    bb40:	mov	x21, x2
    bb44:	mov	x19, x0
    bb48:	cmp	w8, #0x1
    bb4c:	mov	x22, x1
    bb50:	str	x23, [sp, #16]
    bb54:	mov	x29, sp
    bb58:	b.lt	bba4 <inflateCodesUsed@@ZLIB_1.2.9+0xb78>  // b.tstop
    bb5c:	ldr	x8, [x19]
    bb60:	ldr	w9, [x8, #88]
    bb64:	cmp	w9, #0x2
    bb68:	b.ne	bbd8 <inflateCodesUsed@@ZLIB_1.2.9+0xbac>  // b.any
    bb6c:	mov	w11, #0xc07f                	// #49279
    bb70:	mov	x9, xzr
    bb74:	add	x10, x19, #0xd4
    bb78:	movk	w11, #0xf3ff, lsl #16
    bb7c:	b	bb90 <inflateCodesUsed@@ZLIB_1.2.9+0xb64>
    bb80:	add	x9, x9, #0x4
    bb84:	cmp	x9, #0x80
    bb88:	lsr	x11, x11, #1
    bb8c:	b.eq	bbb8 <inflateCodesUsed@@ZLIB_1.2.9+0xb8c>  // b.none
    bb90:	tbz	w11, #0, bb80 <inflateCodesUsed@@ZLIB_1.2.9+0xb54>
    bb94:	ldrh	w12, [x10, x9]
    bb98:	cbz	w12, bb80 <inflateCodesUsed@@ZLIB_1.2.9+0xb54>
    bb9c:	mov	w9, wzr
    bba0:	b	bbd4 <inflateCodesUsed@@ZLIB_1.2.9+0xba8>
    bba4:	add	x9, x21, #0x5
    bba8:	mov	w8, wzr
    bbac:	mov	x11, x9
    bbb0:	cbnz	x22, bf7c <inflateCodesUsed@@ZLIB_1.2.9+0xf50>
    bbb4:	b	bfa0 <inflateCodesUsed@@ZLIB_1.2.9+0xf74>
    bbb8:	ldrh	w9, [x19, #248]
    bbbc:	cbnz	w9, bbd0 <inflateCodesUsed@@ZLIB_1.2.9+0xba4>
    bbc0:	ldrh	w9, [x19, #252]
    bbc4:	cbnz	w9, bbd0 <inflateCodesUsed@@ZLIB_1.2.9+0xba4>
    bbc8:	ldrh	w9, [x19, #264]
    bbcc:	cbz	w9, be78 <inflateCodesUsed@@ZLIB_1.2.9+0xe4c>
    bbd0:	mov	w9, #0x1                   	// #1
    bbd4:	str	w9, [x8, #88]
    bbd8:	add	x1, x19, #0xb58
    bbdc:	mov	x0, x19
    bbe0:	bl	c380 <inflateCodesUsed@@ZLIB_1.2.9+0x1354>
    bbe4:	add	x1, x19, #0xb70
    bbe8:	mov	x0, x19
    bbec:	bl	c380 <inflateCodesUsed@@ZLIB_1.2.9+0x1354>
    bbf0:	ldr	w10, [x19, #2912]
    bbf4:	ldrh	w9, [x19, #214]
    bbf8:	mov	w8, #0xffff                	// #65535
    bbfc:	add	w14, w10, #0x1
    bc00:	add	x11, x19, w14, sxtw #2
    bc04:	strh	w8, [x11, #214]
    bc08:	tbnz	w10, #31, bd08 <inflateCodesUsed@@ZLIB_1.2.9+0xcdc>
    bc0c:	cmp	w9, #0x0
    bc10:	mov	w10, #0x3                   	// #3
    bc14:	mov	w16, #0x7                   	// #7
    bc18:	mov	w17, #0x8a                  	// #138
    bc1c:	mov	w1, wzr
    bc20:	add	x11, x19, #0xafc
    bc24:	add	x12, x19, #0xb04
    bc28:	add	x13, x19, #0xb00
    bc2c:	mov	w14, w14
    bc30:	add	x15, x19, #0xda
    bc34:	mov	w3, #0xffffffff            	// #-1
    bc38:	cinc	w18, w10, ne  // ne = any
    bc3c:	csel	w0, w17, w16, eq  // eq = none
    bc40:	mov	w16, #0x6                   	// #6
    bc44:	b	bc60 <inflateCodesUsed@@ZLIB_1.2.9+0xc34>
    bc48:	mov	w17, w3
    bc4c:	subs	x14, x14, #0x1
    bc50:	add	x15, x15, #0x4
    bc54:	mov	w1, w2
    bc58:	mov	w3, w17
    bc5c:	b.eq	bd08 <inflateCodesUsed@@ZLIB_1.2.9+0xcdc>  // b.none
    bc60:	mov	w17, w9
    bc64:	ldrh	w9, [x15]
    bc68:	add	w2, w1, #0x1
    bc6c:	cmp	w2, w0
    bc70:	b.ge	bc7c <inflateCodesUsed@@ZLIB_1.2.9+0xc50>  // b.tcont
    bc74:	cmp	w17, w9
    bc78:	b.eq	bc48 <inflateCodesUsed@@ZLIB_1.2.9+0xc1c>  // b.none
    bc7c:	cmp	w2, w18
    bc80:	b.ge	bc98 <inflateCodesUsed@@ZLIB_1.2.9+0xc6c>  // b.tcont
    bc84:	add	x18, x19, w17, uxtw #2
    bc88:	ldrh	w1, [x18, #2748]
    bc8c:	add	x0, x18, #0xabc
    bc90:	add	w18, w1, w2
    bc94:	b	bce0 <inflateCodesUsed@@ZLIB_1.2.9+0xcb4>
    bc98:	cbz	w17, bcc0 <inflateCodesUsed@@ZLIB_1.2.9+0xc94>
    bc9c:	cmp	w17, w3
    bca0:	b.eq	bcb4 <inflateCodesUsed@@ZLIB_1.2.9+0xc88>  // b.none
    bca4:	add	x18, x19, w17, uxtw #2
    bca8:	ldrh	w0, [x18, #2748]
    bcac:	add	w0, w0, #0x1
    bcb0:	strh	w0, [x18, #2748]
    bcb4:	ldrh	w18, [x11]
    bcb8:	mov	x0, x11
    bcbc:	b	bcdc <inflateCodesUsed@@ZLIB_1.2.9+0xcb0>
    bcc0:	cmp	w1, #0x9
    bcc4:	b.gt	bcd4 <inflateCodesUsed@@ZLIB_1.2.9+0xca8>
    bcc8:	ldrh	w18, [x13]
    bccc:	mov	x0, x13
    bcd0:	b	bcdc <inflateCodesUsed@@ZLIB_1.2.9+0xcb0>
    bcd4:	ldrh	w18, [x12]
    bcd8:	mov	x0, x12
    bcdc:	add	w18, w18, #0x1
    bce0:	mov	w2, wzr
    bce4:	strh	w18, [x0]
    bce8:	cbz	w9, bcfc <inflateCodesUsed@@ZLIB_1.2.9+0xcd0>
    bcec:	cmp	w17, w9
    bcf0:	cinc	w0, w16, ne  // ne = any
    bcf4:	cinc	w18, w10, ne  // ne = any
    bcf8:	b	bc4c <inflateCodesUsed@@ZLIB_1.2.9+0xc20>
    bcfc:	mov	w18, #0x3                   	// #3
    bd00:	mov	w0, #0x8a                  	// #138
    bd04:	b	bc4c <inflateCodesUsed@@ZLIB_1.2.9+0xc20>
    bd08:	ldr	w10, [x19, #2936]
    bd0c:	ldrh	w9, [x19, #2506]
    bd10:	add	w13, w10, #0x1
    bd14:	add	x11, x19, w13, sxtw #2
    bd18:	strh	w8, [x11, #2506]
    bd1c:	tbnz	w10, #31, be1c <inflateCodesUsed@@ZLIB_1.2.9+0xdf0>
    bd20:	cmp	w9, #0x0
    bd24:	mov	w8, #0x3                   	// #3
    bd28:	mov	w15, #0x7                   	// #7
    bd2c:	mov	w16, #0x8a                  	// #138
    bd30:	mov	w0, wzr
    bd34:	add	x10, x19, #0xafc
    bd38:	add	x11, x19, #0xb04
    bd3c:	add	x12, x19, #0xb00
    bd40:	mov	w13, w13
    bd44:	add	x14, x19, #0x9ce
    bd48:	mov	w2, #0xffffffff            	// #-1
    bd4c:	cinc	w17, w8, ne  // ne = any
    bd50:	csel	w18, w16, w15, eq  // eq = none
    bd54:	mov	w15, #0x6                   	// #6
    bd58:	b	bd74 <inflateCodesUsed@@ZLIB_1.2.9+0xd48>
    bd5c:	mov	w16, w2
    bd60:	subs	x13, x13, #0x1
    bd64:	add	x14, x14, #0x4
    bd68:	mov	w0, w1
    bd6c:	mov	w2, w16
    bd70:	b.eq	be1c <inflateCodesUsed@@ZLIB_1.2.9+0xdf0>  // b.none
    bd74:	mov	w16, w9
    bd78:	ldrh	w9, [x14]
    bd7c:	add	w1, w0, #0x1
    bd80:	cmp	w1, w18
    bd84:	b.ge	bd90 <inflateCodesUsed@@ZLIB_1.2.9+0xd64>  // b.tcont
    bd88:	cmp	w16, w9
    bd8c:	b.eq	bd5c <inflateCodesUsed@@ZLIB_1.2.9+0xd30>  // b.none
    bd90:	cmp	w1, w17
    bd94:	b.ge	bdac <inflateCodesUsed@@ZLIB_1.2.9+0xd80>  // b.tcont
    bd98:	add	x17, x19, w16, uxtw #2
    bd9c:	ldrh	w0, [x17, #2748]
    bda0:	add	x18, x17, #0xabc
    bda4:	add	w17, w0, w1
    bda8:	b	bdf4 <inflateCodesUsed@@ZLIB_1.2.9+0xdc8>
    bdac:	cbz	w16, bdd4 <inflateCodesUsed@@ZLIB_1.2.9+0xda8>
    bdb0:	cmp	w16, w2
    bdb4:	b.eq	bdc8 <inflateCodesUsed@@ZLIB_1.2.9+0xd9c>  // b.none
    bdb8:	add	x17, x19, w16, uxtw #2
    bdbc:	ldrh	w18, [x17, #2748]
    bdc0:	add	w18, w18, #0x1
    bdc4:	strh	w18, [x17, #2748]
    bdc8:	ldrh	w17, [x10]
    bdcc:	mov	x18, x10
    bdd0:	b	bdf0 <inflateCodesUsed@@ZLIB_1.2.9+0xdc4>
    bdd4:	cmp	w0, #0x9
    bdd8:	b.gt	bde8 <inflateCodesUsed@@ZLIB_1.2.9+0xdbc>
    bddc:	ldrh	w17, [x12]
    bde0:	mov	x18, x12
    bde4:	b	bdf0 <inflateCodesUsed@@ZLIB_1.2.9+0xdc4>
    bde8:	ldrh	w17, [x11]
    bdec:	mov	x18, x11
    bdf0:	add	w17, w17, #0x1
    bdf4:	mov	w1, wzr
    bdf8:	strh	w17, [x18]
    bdfc:	cbz	w9, be10 <inflateCodesUsed@@ZLIB_1.2.9+0xde4>
    be00:	cmp	w16, w9
    be04:	cinc	w18, w15, ne  // ne = any
    be08:	cinc	w17, w8, ne  // ne = any
    be0c:	b	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0xd34>
    be10:	mov	w17, #0x3                   	// #3
    be14:	mov	w18, #0x8a                  	// #138
    be18:	b	bd60 <inflateCodesUsed@@ZLIB_1.2.9+0xd34>
    be1c:	add	x1, x19, #0xb88
    be20:	mov	x0, x19
    be24:	bl	c380 <inflateCodesUsed@@ZLIB_1.2.9+0x1354>
    be28:	ldrh	w8, [x19, #2810]
    be2c:	cbz	w8, be38 <inflateCodesUsed@@ZLIB_1.2.9+0xe0c>
    be30:	mov	w8, #0x12                  	// #18
    be34:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    be38:	ldrh	w8, [x19, #2754]
    be3c:	cbz	w8, be48 <inflateCodesUsed@@ZLIB_1.2.9+0xe1c>
    be40:	mov	w8, #0x11                  	// #17
    be44:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    be48:	ldrh	w8, [x19, #2806]
    be4c:	cbz	w8, be58 <inflateCodesUsed@@ZLIB_1.2.9+0xe2c>
    be50:	mov	w8, #0x10                  	// #16
    be54:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    be58:	ldrh	w8, [x19, #2758]
    be5c:	cbz	w8, be68 <inflateCodesUsed@@ZLIB_1.2.9+0xe3c>
    be60:	mov	w8, #0xf                   	// #15
    be64:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    be68:	ldrh	w8, [x19, #2802]
    be6c:	cbz	w8, be98 <inflateCodesUsed@@ZLIB_1.2.9+0xe6c>
    be70:	mov	w8, #0xe                   	// #14
    be74:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    be78:	mov	x10, xzr
    be7c:	add	x11, x19, #0x154
    be80:	ldrh	w9, [x11, x10]
    be84:	cbnz	w9, bbd0 <inflateCodesUsed@@ZLIB_1.2.9+0xba4>
    be88:	add	x10, x10, #0x4
    be8c:	cmp	x10, #0x380
    be90:	b.ne	be80 <inflateCodesUsed@@ZLIB_1.2.9+0xe54>  // b.any
    be94:	b	bbd4 <inflateCodesUsed@@ZLIB_1.2.9+0xba8>
    be98:	ldrh	w8, [x19, #2762]
    be9c:	cbz	w8, bea8 <inflateCodesUsed@@ZLIB_1.2.9+0xe7c>
    bea0:	mov	w8, #0xd                   	// #13
    bea4:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bea8:	ldrh	w8, [x19, #2798]
    beac:	cbz	w8, beb8 <inflateCodesUsed@@ZLIB_1.2.9+0xe8c>
    beb0:	mov	w8, #0xc                   	// #12
    beb4:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    beb8:	ldrh	w8, [x19, #2766]
    bebc:	cbz	w8, bec8 <inflateCodesUsed@@ZLIB_1.2.9+0xe9c>
    bec0:	mov	w8, #0xb                   	// #11
    bec4:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bec8:	ldrh	w8, [x19, #2794]
    becc:	cbz	w8, bed8 <inflateCodesUsed@@ZLIB_1.2.9+0xeac>
    bed0:	mov	w8, #0xa                   	// #10
    bed4:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bed8:	ldrh	w8, [x19, #2770]
    bedc:	cbz	w8, bee8 <inflateCodesUsed@@ZLIB_1.2.9+0xebc>
    bee0:	mov	w8, #0x9                   	// #9
    bee4:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bee8:	ldrh	w8, [x19, #2790]
    beec:	cbz	w8, bef8 <inflateCodesUsed@@ZLIB_1.2.9+0xecc>
    bef0:	mov	w8, #0x8                   	// #8
    bef4:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bef8:	ldrh	w8, [x19, #2774]
    befc:	cbz	w8, bf08 <inflateCodesUsed@@ZLIB_1.2.9+0xedc>
    bf00:	mov	w8, #0x7                   	// #7
    bf04:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bf08:	ldrh	w8, [x19, #2786]
    bf0c:	cbz	w8, bf18 <inflateCodesUsed@@ZLIB_1.2.9+0xeec>
    bf10:	mov	w8, #0x6                   	// #6
    bf14:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bf18:	ldrh	w8, [x19, #2778]
    bf1c:	cbz	w8, bf28 <inflateCodesUsed@@ZLIB_1.2.9+0xefc>
    bf20:	mov	w8, #0x5                   	// #5
    bf24:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bf28:	ldrh	w8, [x19, #2782]
    bf2c:	cbz	w8, bf38 <inflateCodesUsed@@ZLIB_1.2.9+0xf0c>
    bf30:	mov	w8, #0x4                   	// #4
    bf34:	b	bf48 <inflateCodesUsed@@ZLIB_1.2.9+0xf1c>
    bf38:	ldrh	w8, [x19, #2750]
    bf3c:	cmp	w8, #0x0
    bf40:	mov	w8, #0x2                   	// #2
    bf44:	cinc	w8, w8, ne  // ne = any
    bf48:	ldr	x9, [x19, #5912]
    bf4c:	ldr	x10, [x19, #5920]
    bf50:	add	w11, w8, w8, lsl #1
    bf54:	add	w11, w11, #0x11
    bf58:	add	x9, x9, x11
    bf5c:	add	x10, x10, #0xa
    bf60:	str	x9, [x19, #5912]
    bf64:	add	x9, x9, #0xa
    bf68:	lsr	x11, x9, #3
    bf6c:	lsr	x9, x10, #3
    bf70:	cmp	x9, x11
    bf74:	csel	x11, x11, x9, hi  // hi = pmore
    bf78:	cbz	x22, bfa0 <inflateCodesUsed@@ZLIB_1.2.9+0xf74>
    bf7c:	add	x10, x21, #0x4
    bf80:	cmp	x10, x11
    bf84:	b.hi	bfa0 <inflateCodesUsed@@ZLIB_1.2.9+0xf74>  // b.pmore
    bf88:	mov	x0, x19
    bf8c:	mov	x1, x22
    bf90:	mov	x2, x21
    bf94:	mov	w3, w20
    bf98:	bl	b7dc <inflateCodesUsed@@ZLIB_1.2.9+0x7b0>
    bf9c:	b	c2f4 <inflateCodesUsed@@ZLIB_1.2.9+0x12c8>
    bfa0:	ldr	w10, [x19, #5940]
    bfa4:	cmp	x9, x11
    bfa8:	b.eq	c028 <inflateCodesUsed@@ZLIB_1.2.9+0xffc>  // b.none
    bfac:	ldr	w9, [x19, #200]
    bfb0:	cmp	w9, #0x4
    bfb4:	b.eq	c028 <inflateCodesUsed@@ZLIB_1.2.9+0xffc>  // b.none
    bfb8:	ldrh	w9, [x19, #5936]
    bfbc:	add	w11, w20, #0x4
    bfc0:	and	w11, w11, #0xffff
    bfc4:	lsl	w12, w11, w10
    bfc8:	orr	w9, w9, w12
    bfcc:	cmp	w10, #0xe
    bfd0:	strh	w9, [x19, #5936]
    bfd4:	b.lt	c098 <inflateCodesUsed@@ZLIB_1.2.9+0x106c>  // b.tstop
    bfd8:	ldr	x10, [x19, #40]
    bfdc:	ldr	x12, [x19, #16]
    bfe0:	add	x13, x10, #0x1
    bfe4:	str	x13, [x19, #40]
    bfe8:	mov	w13, #0x1730                	// #5936
    bfec:	strb	w9, [x12, x10]
    bff0:	add	x13, x19, x13
    bff4:	ldr	x9, [x19, #40]
    bff8:	ldrb	w10, [x13, #1]
    bffc:	ldr	x12, [x19, #16]
    c000:	add	x13, x9, #0x1
    c004:	str	x13, [x19, #40]
    c008:	strb	w10, [x12, x9]
    c00c:	ldr	w10, [x19, #5940]
    c010:	mov	w9, #0x10                  	// #16
    c014:	sub	w9, w9, w10
    c018:	lsr	w9, w11, w9
    c01c:	strh	w9, [x19, #5936]
    c020:	sub	w11, w10, #0xd
    c024:	b	c09c <inflateCodesUsed@@ZLIB_1.2.9+0x1070>
    c028:	ldrh	w9, [x19, #5936]
    c02c:	add	w8, w20, #0x2
    c030:	and	w8, w8, #0xffff
    c034:	lsl	w11, w8, w10
    c038:	orr	w9, w9, w11
    c03c:	cmp	w10, #0xe
    c040:	strh	w9, [x19, #5936]
    c044:	b.lt	c118 <inflateCodesUsed@@ZLIB_1.2.9+0x10ec>  // b.tstop
    c048:	ldr	x10, [x19, #40]
    c04c:	ldr	x11, [x19, #16]
    c050:	add	x12, x10, #0x1
    c054:	str	x12, [x19, #40]
    c058:	mov	w12, #0x1730                	// #5936
    c05c:	strb	w9, [x11, x10]
    c060:	add	x12, x19, x12
    c064:	ldr	x9, [x19, #40]
    c068:	ldrb	w10, [x12, #1]
    c06c:	ldr	x11, [x19, #16]
    c070:	add	x12, x9, #0x1
    c074:	str	x12, [x19, #40]
    c078:	strb	w10, [x11, x9]
    c07c:	ldr	w9, [x19, #5940]
    c080:	mov	w10, #0x10                  	// #16
    c084:	sub	w10, w10, w9
    c088:	lsr	w8, w8, w10
    c08c:	strh	w8, [x19, #5936]
    c090:	sub	w8, w9, #0xd
    c094:	b	c11c <inflateCodesUsed@@ZLIB_1.2.9+0x10f0>
    c098:	add	w11, w10, #0x3
    c09c:	ldr	w2, [x19, #2912]
    c0a0:	mov	w10, #0xff00                	// #65280
    c0a4:	ldr	w21, [x19, #2936]
    c0a8:	cmp	w11, #0xc
    c0ac:	add	w10, w2, w10
    c0b0:	and	w10, w10, #0xffff
    c0b4:	lsl	w12, w10, w11
    c0b8:	orr	w9, w9, w12
    c0bc:	str	w11, [x19, #5940]
    c0c0:	strh	w9, [x19, #5936]
    c0c4:	b.lt	c138 <inflateCodesUsed@@ZLIB_1.2.9+0x110c>  // b.tstop
    c0c8:	ldr	x11, [x19, #40]
    c0cc:	ldr	x12, [x19, #16]
    c0d0:	add	x13, x11, #0x1
    c0d4:	str	x13, [x19, #40]
    c0d8:	mov	w13, #0x1730                	// #5936
    c0dc:	strb	w9, [x12, x11]
    c0e0:	add	x13, x19, x13
    c0e4:	ldr	x9, [x19, #40]
    c0e8:	ldrb	w11, [x13, #1]
    c0ec:	ldr	x12, [x19, #16]
    c0f0:	add	x13, x9, #0x1
    c0f4:	str	x13, [x19, #40]
    c0f8:	strb	w11, [x12, x9]
    c0fc:	ldr	w11, [x19, #5940]
    c100:	mov	w9, #0x10                  	// #16
    c104:	sub	w9, w9, w11
    c108:	lsr	w9, w10, w9
    c10c:	strh	w9, [x19, #5936]
    c110:	sub	w12, w11, #0xb
    c114:	b	c13c <inflateCodesUsed@@ZLIB_1.2.9+0x1110>
    c118:	add	w8, w10, #0x3
    c11c:	adrp	x1, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    c120:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    c124:	str	w8, [x19, #5940]
    c128:	add	x1, x1, #0x518
    c12c:	add	x2, x2, #0x998
    c130:	mov	x0, x19
    c134:	b	c2f0 <inflateCodesUsed@@ZLIB_1.2.9+0x12c4>
    c138:	add	w12, w11, #0x5
    c13c:	and	w11, w21, #0xffff
    c140:	lsl	w10, w11, w12
    c144:	orr	w10, w9, w10
    c148:	cmp	w12, #0xc
    c14c:	str	w12, [x19, #5940]
    c150:	strh	w10, [x19, #5936]
    c154:	b.lt	c1a8 <inflateCodesUsed@@ZLIB_1.2.9+0x117c>  // b.tstop
    c158:	ldr	x9, [x19, #40]
    c15c:	ldr	x12, [x19, #16]
    c160:	add	x13, x9, #0x1
    c164:	str	x13, [x19, #40]
    c168:	mov	w13, #0x1730                	// #5936
    c16c:	strb	w10, [x12, x9]
    c170:	add	x13, x19, x13
    c174:	ldr	x9, [x19, #40]
    c178:	ldrb	w10, [x13, #1]
    c17c:	ldr	x12, [x19, #16]
    c180:	add	x13, x9, #0x1
    c184:	str	x13, [x19, #40]
    c188:	strb	w10, [x12, x9]
    c18c:	ldr	w9, [x19, #5940]
    c190:	mov	w10, #0x10                  	// #16
    c194:	sub	w10, w10, w9
    c198:	lsr	w10, w11, w10
    c19c:	strh	w10, [x19, #5936]
    c1a0:	sub	w12, w9, #0xb
    c1a4:	b	c1ac <inflateCodesUsed@@ZLIB_1.2.9+0x1180>
    c1a8:	add	w12, w12, #0x5
    c1ac:	mov	w11, #0xfffd                	// #65533
    c1b0:	add	w9, w8, #0x1
    c1b4:	add	w8, w8, w11
    c1b8:	and	w11, w8, #0xffff
    c1bc:	lsl	w8, w11, w12
    c1c0:	orr	w8, w10, w8
    c1c4:	cmp	w12, #0xd
    c1c8:	str	w12, [x19, #5940]
    c1cc:	strh	w8, [x19, #5936]
    c1d0:	b.lt	c224 <inflateCodesUsed@@ZLIB_1.2.9+0x11f8>  // b.tstop
    c1d4:	ldr	x10, [x19, #40]
    c1d8:	ldr	x12, [x19, #16]
    c1dc:	add	x13, x10, #0x1
    c1e0:	str	x13, [x19, #40]
    c1e4:	mov	w13, #0x1730                	// #5936
    c1e8:	strb	w8, [x12, x10]
    c1ec:	add	x13, x19, x13
    c1f0:	ldr	x8, [x19, #40]
    c1f4:	ldrb	w10, [x13, #1]
    c1f8:	ldr	x12, [x19, #16]
    c1fc:	add	x13, x8, #0x1
    c200:	str	x13, [x19, #40]
    c204:	strb	w10, [x12, x8]
    c208:	ldr	w10, [x19, #5940]
    c20c:	mov	w8, #0x10                  	// #16
    c210:	sub	w8, w8, w10
    c214:	lsr	w8, w11, w8
    c218:	strh	w8, [x19, #5936]
    c21c:	sub	w11, w10, #0xc
    c220:	b	c228 <inflateCodesUsed@@ZLIB_1.2.9+0x11fc>
    c224:	add	w11, w12, #0x4
    c228:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    c22c:	mov	w12, #0x1730                	// #5936
    c230:	mov	w9, w9
    c234:	add	x10, x10, #0xb48
    c238:	add	x12, x19, x12
    c23c:	mov	w13, #0x10                  	// #16
    c240:	str	w11, [x19, #5940]
    c244:	b	c25c <inflateCodesUsed@@ZLIB_1.2.9+0x1230>
    c248:	add	w11, w11, #0x3
    c24c:	subs	x9, x9, #0x1
    c250:	add	x10, x10, #0x1
    c254:	str	w11, [x19, #5940]
    c258:	b.eq	c2c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1294>  // b.none
    c25c:	ldrb	w14, [x10]
    c260:	cmp	w11, #0xe
    c264:	add	x14, x19, x14, lsl #2
    c268:	ldrh	w14, [x14, #2750]
    c26c:	lsl	w15, w14, w11
    c270:	orr	w8, w8, w15
    c274:	strh	w8, [x19, #5936]
    c278:	b.lt	c248 <inflateCodesUsed@@ZLIB_1.2.9+0x121c>  // b.tstop
    c27c:	ldr	x11, [x19, #40]
    c280:	ldr	x15, [x19, #16]
    c284:	add	x16, x11, #0x1
    c288:	str	x16, [x19, #40]
    c28c:	strb	w8, [x15, x11]
    c290:	ldr	x8, [x19, #40]
    c294:	ldrb	w11, [x12, #1]
    c298:	ldr	x15, [x19, #16]
    c29c:	add	x16, x8, #0x1
    c2a0:	str	x16, [x19, #40]
    c2a4:	strb	w11, [x15, x8]
    c2a8:	ldr	w11, [x19, #5940]
    c2ac:	sub	w8, w13, w11
    c2b0:	lsr	w8, w14, w8
    c2b4:	strh	w8, [x19, #5936]
    c2b8:	sub	w11, w11, #0xd
    c2bc:	b	c24c <inflateCodesUsed@@ZLIB_1.2.9+0x1220>
    c2c0:	add	x22, x19, #0xd4
    c2c4:	mov	x0, x19
    c2c8:	mov	x1, x22
    c2cc:	bl	cfdc <inflateCodesUsed@@ZLIB_1.2.9+0x1fb0>
    c2d0:	add	x23, x19, #0x9c8
    c2d4:	mov	x0, x19
    c2d8:	mov	x1, x23
    c2dc:	mov	w2, w21
    c2e0:	bl	cfdc <inflateCodesUsed@@ZLIB_1.2.9+0x1fb0>
    c2e4:	mov	x0, x19
    c2e8:	mov	x1, x22
    c2ec:	mov	x2, x23
    c2f0:	bl	cb84 <inflateCodesUsed@@ZLIB_1.2.9+0x1b58>
    c2f4:	mov	x0, x19
    c2f8:	bl	b6dc <inflateCodesUsed@@ZLIB_1.2.9+0x6b0>
    c2fc:	cbz	w20, c36c <inflateCodesUsed@@ZLIB_1.2.9+0x1340>
    c300:	ldr	w8, [x19, #5940]
    c304:	cmp	w8, #0x9
    c308:	b.lt	c33c <inflateCodesUsed@@ZLIB_1.2.9+0x1310>  // b.tstop
    c30c:	mov	w8, #0x1730                	// #5936
    c310:	ldr	x10, [x19, #40]
    c314:	add	x8, x19, x8
    c318:	ldr	x9, [x19, #16]
    c31c:	ldrb	w11, [x8]
    c320:	add	x12, x10, #0x1
    c324:	str	x12, [x19, #40]
    c328:	strb	w11, [x9, x10]
    c32c:	ldr	x9, [x19, #40]
    c330:	ldr	x10, [x19, #16]
    c334:	ldrb	w8, [x8, #1]
    c338:	b	c354 <inflateCodesUsed@@ZLIB_1.2.9+0x1328>
    c33c:	cmp	w8, #0x1
    c340:	b.lt	c364 <inflateCodesUsed@@ZLIB_1.2.9+0x1338>  // b.tstop
    c344:	mov	w8, #0x1730                	// #5936
    c348:	ldr	x9, [x19, #40]
    c34c:	ldr	x10, [x19, #16]
    c350:	ldrb	w8, [x19, x8]
    c354:	add	x11, x9, #0x1
    c358:	add	x9, x10, x9
    c35c:	str	x11, [x19, #40]
    c360:	strb	w8, [x9]
    c364:	strh	wzr, [x19, #5936]
    c368:	str	wzr, [x19, #5940]
    c36c:	ldp	x20, x19, [sp, #48]
    c370:	ldp	x22, x21, [sp, #32]
    c374:	ldr	x23, [sp, #16]
    c378:	ldp	x29, x30, [sp], #64
    c37c:	ret
    c380:	sub	sp, sp, #0x20
    c384:	ldr	x9, [x1, #16]
    c388:	ldr	x8, [x1]
    c38c:	ldr	x12, [x9]
    c390:	ldr	w10, [x9, #20]
    c394:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    c398:	ldr	d0, [x9, #528]
    c39c:	mov	w9, #0x14b4                	// #5300
    c3a0:	add	x11, x0, x9
    c3a4:	cmp	w10, #0x1
    c3a8:	str	d0, [x11]
    c3ac:	b.lt	cb00 <inflateCodesUsed@@ZLIB_1.2.9+0x1ad4>  // b.tstop
    c3b0:	mov	w9, #0x14bc                	// #5308
    c3b4:	mov	x13, xzr
    c3b8:	add	x14, x8, #0x2
    c3bc:	add	x15, x0, x9
    c3c0:	mov	w9, #0xffffffff            	// #-1
    c3c4:	b	c3dc <inflateCodesUsed@@ZLIB_1.2.9+0x13b0>
    c3c8:	strh	wzr, [x14]
    c3cc:	add	x13, x13, #0x1
    c3d0:	cmp	x10, x13
    c3d4:	add	x14, x14, #0x4
    c3d8:	b.eq	c404 <inflateCodesUsed@@ZLIB_1.2.9+0x13d8>  // b.none
    c3dc:	ldurh	w16, [x14, #-2]
    c3e0:	cbz	w16, c3c8 <inflateCodesUsed@@ZLIB_1.2.9+0x139c>
    c3e4:	ldrsw	x9, [x0, #5300]
    c3e8:	add	x9, x9, #0x1
    c3ec:	str	w9, [x0, #5300]
    c3f0:	add	x9, x0, x9, lsl #2
    c3f4:	str	w13, [x9, #3008]
    c3f8:	strb	wzr, [x15, x13]
    c3fc:	mov	w9, w13
    c400:	b	c3cc <inflateCodesUsed@@ZLIB_1.2.9+0x13a0>
    c404:	ldr	w16, [x11]
    c408:	cmp	w16, #0x1
    c40c:	b.le	cb08 <inflateCodesUsed@@ZLIB_1.2.9+0x1adc>
    c410:	lsr	w12, w16, #1
    c414:	mov	w13, #0x14bc                	// #5308
    c418:	str	w9, [x1, #8]
    c41c:	add	x14, x0, x12, lsl #2
    c420:	ldr	w14, [x14, #3008]
    c424:	lsl	w2, w12, #1
    c428:	cmp	w2, w16
    c42c:	mov	x15, x12
    c430:	b.gt	c514 <inflateCodesUsed@@ZLIB_1.2.9+0x14e8>
    c434:	sxtw	x17, w14
    c438:	add	x15, x0, x17
    c43c:	add	x15, x15, x13
    c440:	add	x17, x8, x17, lsl #2
    c444:	mov	w18, w12
    c448:	b	c468 <inflateCodesUsed@@ZLIB_1.2.9+0x143c>
    c44c:	add	x18, x0, w18, sxtw #2
    c450:	str	w16, [x18, #3008]
    c454:	ldr	w16, [x0, #5300]
    c458:	lsl	w2, w3, #1
    c45c:	mov	w18, w3
    c460:	cmp	w2, w16
    c464:	b.gt	c510 <inflateCodesUsed@@ZLIB_1.2.9+0x14e4>
    c468:	cmp	w2, w16
    c46c:	b.ge	c4a8 <inflateCodesUsed@@ZLIB_1.2.9+0x147c>  // b.tcont
    c470:	sxtw	x16, w2
    c474:	add	x5, x0, #0xbc0
    c478:	orr	x4, x16, #0x1
    c47c:	ldrsw	x3, [x5, w2, sxtw #2]
    c480:	ldrsw	x5, [x5, x4, lsl #2]
    c484:	lsl	x6, x3, #2
    c488:	lsl	x7, x5, #2
    c48c:	ldrh	w7, [x8, x7]
    c490:	ldrh	w6, [x8, x6]
    c494:	cmp	w7, w6
    c498:	b.cs	c4ec <inflateCodesUsed@@ZLIB_1.2.9+0x14c0>  // b.hs, b.nlast
    c49c:	mov	x16, x4
    c4a0:	mov	w3, w4
    c4a4:	b	c4b0 <inflateCodesUsed@@ZLIB_1.2.9+0x1484>
    c4a8:	sxtw	x16, w2
    c4ac:	mov	w3, w2
    c4b0:	add	x16, x0, x16, lsl #2
    c4b4:	ldr	w16, [x16, #3008]
    c4b8:	ldrh	w2, [x17]
    c4bc:	sbfiz	x4, x16, #2, #32
    c4c0:	ldrh	w4, [x8, x4]
    c4c4:	cmp	w2, w4
    c4c8:	b.cc	c50c <inflateCodesUsed@@ZLIB_1.2.9+0x14e0>  // b.lo, b.ul, b.last
    c4cc:	b.ne	c44c <inflateCodesUsed@@ZLIB_1.2.9+0x1420>  // b.any
    c4d0:	sxtw	x2, w16
    c4d4:	add	x2, x0, x2
    c4d8:	ldrb	w4, [x15]
    c4dc:	ldrb	w2, [x2, x13]
    c4e0:	cmp	w4, w2
    c4e4:	b.hi	c44c <inflateCodesUsed@@ZLIB_1.2.9+0x1420>  // b.pmore
    c4e8:	b	c50c <inflateCodesUsed@@ZLIB_1.2.9+0x14e0>
    c4ec:	b.ne	c4ac <inflateCodesUsed@@ZLIB_1.2.9+0x1480>  // b.any
    c4f0:	add	x6, x0, x13
    c4f4:	ldrb	w5, [x6, x5]
    c4f8:	ldrb	w3, [x6, x3]
    c4fc:	cmp	w5, w3
    c500:	mov	w3, w2
    c504:	b.ls	c49c <inflateCodesUsed@@ZLIB_1.2.9+0x1470>  // b.plast
    c508:	b	c4b0 <inflateCodesUsed@@ZLIB_1.2.9+0x1484>
    c50c:	mov	w3, w18
    c510:	sxtw	x15, w3
    c514:	add	x15, x0, x15, lsl #2
    c518:	cmp	x12, #0x2
    c51c:	str	w14, [x15, #3008]
    c520:	b.lt	c530 <inflateCodesUsed@@ZLIB_1.2.9+0x1504>  // b.tstop
    c524:	ldr	w16, [x11]
    c528:	sub	x12, x12, #0x1
    c52c:	b	c41c <inflateCodesUsed@@ZLIB_1.2.9+0x13f0>
    c530:	ldr	w15, [x0, #5300]
    c534:	sxtw	x11, w10
    c538:	mov	w10, #0x14bc                	// #5308
    c53c:	b	c55c <inflateCodesUsed@@ZLIB_1.2.9+0x1530>
    c540:	mov	w13, #0x1                   	// #1
    c544:	add	x13, x0, x13, lsl #2
    c548:	str	w11, [x13, #3008]
    c54c:	ldr	w15, [x0, #5300]
    c550:	mov	x11, x12
    c554:	cmp	w15, #0x1
    c558:	b.le	c7c8 <inflateCodesUsed@@ZLIB_1.2.9+0x179c>
    c55c:	sub	w3, w15, #0x1
    c560:	ldr	w13, [x0, #3012]
    c564:	str	w3, [x0, #5300]
    c568:	add	x12, x0, w15, sxtw #2
    c56c:	ldr	w14, [x12, #3008]
    c570:	sxtw	x12, w13
    c574:	cmp	w15, #0x2
    c578:	str	w14, [x0, #3012]
    c57c:	b.gt	c588 <inflateCodesUsed@@ZLIB_1.2.9+0x155c>
    c580:	mov	w15, #0x1                   	// #1
    c584:	b	c66c <inflateCodesUsed@@ZLIB_1.2.9+0x1640>
    c588:	sxtw	x15, w14
    c58c:	add	x16, x0, x15
    c590:	mov	w17, #0x1                   	// #1
    c594:	add	x15, x8, x15, lsl #2
    c598:	add	x16, x16, x10
    c59c:	mov	w18, #0x2                   	// #2
    c5a0:	b	c5c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1594>
    c5a4:	add	x17, x0, w17, sxtw #2
    c5a8:	str	w18, [x17, #3008]
    c5ac:	ldr	w3, [x0, #5300]
    c5b0:	lsl	w18, w2, #1
    c5b4:	mov	w17, w2
    c5b8:	cmp	w18, w3
    c5bc:	b.gt	c668 <inflateCodesUsed@@ZLIB_1.2.9+0x163c>
    c5c0:	cmp	w18, w3
    c5c4:	b.ge	c600 <inflateCodesUsed@@ZLIB_1.2.9+0x15d4>  // b.tcont
    c5c8:	sxtw	x3, w18
    c5cc:	add	x5, x0, #0xbc0
    c5d0:	orr	x4, x3, #0x1
    c5d4:	ldrsw	x2, [x5, w18, sxtw #2]
    c5d8:	ldrsw	x5, [x5, x4, lsl #2]
    c5dc:	lsl	x6, x2, #2
    c5e0:	lsl	x7, x5, #2
    c5e4:	ldrh	w7, [x8, x7]
    c5e8:	ldrh	w6, [x8, x6]
    c5ec:	cmp	w7, w6
    c5f0:	b.cs	c644 <inflateCodesUsed@@ZLIB_1.2.9+0x1618>  // b.hs, b.nlast
    c5f4:	mov	x3, x4
    c5f8:	mov	w2, w4
    c5fc:	b	c608 <inflateCodesUsed@@ZLIB_1.2.9+0x15dc>
    c600:	sxtw	x3, w18
    c604:	mov	w2, w18
    c608:	add	x18, x0, x3, lsl #2
    c60c:	ldr	w18, [x18, #3008]
    c610:	ldrh	w3, [x15]
    c614:	sbfiz	x4, x18, #2, #32
    c618:	ldrh	w4, [x8, x4]
    c61c:	cmp	w3, w4
    c620:	b.cc	c664 <inflateCodesUsed@@ZLIB_1.2.9+0x1638>  // b.lo, b.ul, b.last
    c624:	b.ne	c5a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1578>  // b.any
    c628:	sxtw	x3, w18
    c62c:	add	x3, x0, x3
    c630:	ldrb	w4, [x16]
    c634:	ldrb	w3, [x3, x10]
    c638:	cmp	w4, w3
    c63c:	b.hi	c5a4 <inflateCodesUsed@@ZLIB_1.2.9+0x1578>  // b.pmore
    c640:	b	c664 <inflateCodesUsed@@ZLIB_1.2.9+0x1638>
    c644:	b.ne	c604 <inflateCodesUsed@@ZLIB_1.2.9+0x15d8>  // b.any
    c648:	add	x6, x0, x10
    c64c:	ldrb	w5, [x6, x5]
    c650:	ldrb	w2, [x6, x2]
    c654:	cmp	w5, w2
    c658:	mov	w2, w18
    c65c:	b.ls	c5f4 <inflateCodesUsed@@ZLIB_1.2.9+0x15c8>  // b.plast
    c660:	b	c608 <inflateCodesUsed@@ZLIB_1.2.9+0x15dc>
    c664:	mov	w2, w17
    c668:	sxtw	x15, w2
    c66c:	add	x16, x0, #0xbc0
    c670:	str	w14, [x16, x15, lsl #2]
    c674:	ldrsw	x14, [x0, #5304]
    c678:	ldrsw	x15, [x0, #3012]
    c67c:	add	x17, x8, x12, lsl #2
    c680:	sub	x14, x14, #0x1
    c684:	str	w14, [x0, #5304]
    c688:	str	w13, [x16, x14, lsl #2]
    c68c:	ldrsw	x13, [x0, #5304]
    c690:	add	x18, x8, x15, lsl #2
    c694:	sub	x13, x13, #0x1
    c698:	str	w13, [x0, #5304]
    c69c:	str	w15, [x16, x13, lsl #2]
    c6a0:	ldrh	w13, [x17]
    c6a4:	ldrh	w14, [x18]
    c6a8:	add	w14, w14, w13
    c6ac:	add	x13, x8, x11, lsl #2
    c6b0:	strh	w14, [x13]
    c6b4:	add	x14, x0, x10
    c6b8:	ldrb	w12, [x14, x12]
    c6bc:	ldrb	w15, [x14, x15]
    c6c0:	add	x14, x14, x11
    c6c4:	cmp	w12, w15
    c6c8:	csel	w12, w15, w12, cc  // cc = lo, ul, last
    c6cc:	add	w12, w12, #0x1
    c6d0:	strb	w12, [x14]
    c6d4:	strh	w11, [x18, #2]
    c6d8:	strh	w11, [x17, #2]
    c6dc:	ldr	w18, [x0, #5300]
    c6e0:	add	x12, x11, #0x1
    c6e4:	str	w11, [x0, #3012]
    c6e8:	cmp	w18, #0x2
    c6ec:	b.lt	c540 <inflateCodesUsed@@ZLIB_1.2.9+0x1514>  // b.tstop
    c6f0:	mov	w15, #0x1                   	// #1
    c6f4:	mov	w16, #0x2                   	// #2
    c6f8:	b	c718 <inflateCodesUsed@@ZLIB_1.2.9+0x16ec>
    c6fc:	add	x15, x0, w15, sxtw #2
    c700:	str	w16, [x15, #3008]
    c704:	ldr	w18, [x0, #5300]
    c708:	lsl	w16, w17, #1
    c70c:	mov	w15, w17
    c710:	cmp	w16, w18
    c714:	b.gt	c7c0 <inflateCodesUsed@@ZLIB_1.2.9+0x1794>
    c718:	cmp	w16, w18
    c71c:	b.ge	c758 <inflateCodesUsed@@ZLIB_1.2.9+0x172c>  // b.tcont
    c720:	sxtw	x18, w16
    c724:	add	x3, x0, #0xbc0
    c728:	orr	x2, x18, #0x1
    c72c:	ldrsw	x17, [x3, w16, sxtw #2]
    c730:	ldrsw	x3, [x3, x2, lsl #2]
    c734:	lsl	x4, x17, #2
    c738:	lsl	x5, x3, #2
    c73c:	ldrh	w5, [x8, x5]
    c740:	ldrh	w4, [x8, x4]
    c744:	cmp	w5, w4
    c748:	b.cs	c79c <inflateCodesUsed@@ZLIB_1.2.9+0x1770>  // b.hs, b.nlast
    c74c:	mov	x18, x2
    c750:	mov	w17, w2
    c754:	b	c760 <inflateCodesUsed@@ZLIB_1.2.9+0x1734>
    c758:	sxtw	x18, w16
    c75c:	mov	w17, w16
    c760:	add	x16, x0, x18, lsl #2
    c764:	ldr	w16, [x16, #3008]
    c768:	ldrh	w18, [x13]
    c76c:	sbfiz	x2, x16, #2, #32
    c770:	ldrh	w2, [x8, x2]
    c774:	cmp	w18, w2
    c778:	b.cc	c7bc <inflateCodesUsed@@ZLIB_1.2.9+0x1790>  // b.lo, b.ul, b.last
    c77c:	b.ne	c6fc <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>  // b.any
    c780:	sxtw	x18, w16
    c784:	add	x18, x0, x18
    c788:	ldrb	w2, [x14]
    c78c:	ldrb	w18, [x18, x10]
    c790:	cmp	w2, w18
    c794:	b.hi	c6fc <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>  // b.pmore
    c798:	b	c7bc <inflateCodesUsed@@ZLIB_1.2.9+0x1790>
    c79c:	b.ne	c75c <inflateCodesUsed@@ZLIB_1.2.9+0x1730>  // b.any
    c7a0:	add	x4, x0, x10
    c7a4:	ldrb	w3, [x4, x3]
    c7a8:	ldrb	w17, [x4, x17]
    c7ac:	cmp	w3, w17
    c7b0:	mov	w17, w16
    c7b4:	b.ls	c74c <inflateCodesUsed@@ZLIB_1.2.9+0x1720>  // b.plast
    c7b8:	b	c760 <inflateCodesUsed@@ZLIB_1.2.9+0x1734>
    c7bc:	mov	w17, w15
    c7c0:	sxtw	x13, w17
    c7c4:	b	c544 <inflateCodesUsed@@ZLIB_1.2.9+0x1518>
    c7c8:	ldrsw	x10, [x0, #5304]
    c7cc:	ldr	w11, [x0, #3012]
    c7d0:	add	x13, x0, #0xbc0
    c7d4:	movi	v0.2d, #0x0
    c7d8:	sub	x10, x10, #0x1
    c7dc:	str	w10, [x0, #5304]
    c7e0:	str	w11, [x13, x10, lsl #2]
    c7e4:	ldr	x12, [x1, #16]
    c7e8:	ldrsw	x17, [x0, #5304]
    c7ec:	ldr	x10, [x1]
    c7f0:	ldr	w11, [x1, #8]
    c7f4:	ldp	x14, x15, [x12]
    c7f8:	ldr	w16, [x12, #16]
    c7fc:	ldrsw	x12, [x12, #24]
    c800:	str	q0, [x0, #2992]
    c804:	str	q0, [x0, #2976]
    c808:	ldrsw	x13, [x13, x17, lsl #2]
    c80c:	add	x13, x10, x13, lsl #2
    c810:	strh	wzr, [x13, #2]
    c814:	ldrsw	x18, [x0, #5304]
    c818:	cmp	w18, #0x23b
    c81c:	b.gt	c9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1974>
    c820:	sub	w17, w18, #0x23c
    c824:	add	x18, x0, x18, lsl #2
    c828:	mov	w13, wzr
    c82c:	add	x18, x18, #0xbc4
    c830:	b	c840 <inflateCodesUsed@@ZLIB_1.2.9+0x1814>
    c834:	adds	w17, w17, #0x1
    c838:	add	x18, x18, #0x4
    c83c:	b.cs	c8cc <inflateCodesUsed@@ZLIB_1.2.9+0x18a0>  // b.hs, b.nlast
    c840:	ldrsw	x1, [x18]
    c844:	add	x3, x10, x1, lsl #2
    c848:	ldrh	w2, [x3, #2]
    c84c:	add	x2, x10, x2, lsl #2
    c850:	ldrh	w2, [x2, #2]
    c854:	cmp	w12, w2
    c858:	csinc	w2, w12, w2, le
    c85c:	cinc	w13, w13, le
    c860:	cmp	w1, w11
    c864:	strh	w2, [x3, #2]
    c868:	b.gt	c834 <inflateCodesUsed@@ZLIB_1.2.9+0x1808>
    c86c:	add	x3, x0, w2, sxtw #1
    c870:	ldrh	w4, [x3, #2976]
    c874:	cmp	w1, w16
    c878:	add	w4, w4, #0x1
    c87c:	strh	w4, [x3, #2976]
    c880:	b.ge	c88c <inflateCodesUsed@@ZLIB_1.2.9+0x1860>  // b.tcont
    c884:	mov	w3, wzr
    c888:	b	c894 <inflateCodesUsed@@ZLIB_1.2.9+0x1868>
    c88c:	sub	w3, w1, w16
    c890:	ldr	w3, [x15, w3, sxtw #2]
    c894:	lsl	x4, x1, #2
    c898:	ldrh	w4, [x10, x4]
    c89c:	ldr	x5, [x0, #5912]
    c8a0:	add	w2, w3, w2
    c8a4:	madd	x2, x4, x2, x5
    c8a8:	str	x2, [x0, #5912]
    c8ac:	cbz	x14, c834 <inflateCodesUsed@@ZLIB_1.2.9+0x1808>
    c8b0:	add	x1, x14, x1, lsl #2
    c8b4:	ldrh	w1, [x1, #2]
    c8b8:	ldr	x2, [x0, #5920]
    c8bc:	add	w1, w3, w1
    c8c0:	madd	x1, x1, x4, x2
    c8c4:	str	x1, [x0, #5920]
    c8c8:	b	c834 <inflateCodesUsed@@ZLIB_1.2.9+0x1808>
    c8cc:	cbz	w13, c9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1974>
    c8d0:	add	x14, x0, x12, lsl #1
    c8d4:	mov	x15, #0x100000000           	// #4294967296
    c8d8:	add	x14, x14, #0xba0
    c8dc:	add	x15, x15, x12, lsl #32
    c8e0:	mov	x16, #0xffffffff00000000    	// #-4294967296
    c8e4:	mov	x17, x14
    c8e8:	mov	x18, x15
    c8ec:	ldrh	w1, [x17, #-2]!
    c8f0:	add	x18, x18, x16
    c8f4:	cbz	w1, c8ec <inflateCodesUsed@@ZLIB_1.2.9+0x18c0>
    c8f8:	sub	w1, w1, #0x1
    c8fc:	add	x18, x0, x18, asr #31
    c900:	strh	w1, [x17]
    c904:	ldrh	w17, [x18, #2976]
    c908:	subs	w13, w13, #0x2
    c90c:	add	w17, w17, #0x2
    c910:	strh	w17, [x18, #2976]
    c914:	ldrh	w17, [x14]
    c918:	sub	w17, w17, #0x1
    c91c:	strh	w17, [x14]
    c920:	b.gt	c8e4 <inflateCodesUsed@@ZLIB_1.2.9+0x18b8>
    c924:	cbz	w12, c9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1974>
    c928:	add	x13, x0, #0xbbc
    c92c:	mov	w14, #0x23d                 	// #573
    c930:	and	w15, w17, #0xffff
    c934:	mov	x16, xzr
    c938:	add	x18, x13, w14, sxtw #2
    c93c:	cbz	w15, c988 <inflateCodesUsed@@ZLIB_1.2.9+0x195c>
    c940:	ldrsw	x17, [x18, x16, lsl #2]
    c944:	sub	x16, x16, #0x1
    c948:	cmp	w17, w11
    c94c:	b.gt	c93c <inflateCodesUsed@@ZLIB_1.2.9+0x1910>
    c950:	add	x18, x10, x17, lsl #2
    c954:	ldrh	w1, [x18, #2]!
    c958:	add	x14, x16, w14, uxtw
    c95c:	cmp	w12, w1
    c960:	b.eq	c980 <inflateCodesUsed@@ZLIB_1.2.9+0x1954>  // b.none
    c964:	lsl	x16, x17, #2
    c968:	ldr	x17, [x0, #5912]
    c96c:	ldrh	w16, [x10, x16]
    c970:	sub	x1, x12, x1
    c974:	madd	x16, x1, x16, x17
    c978:	str	x16, [x0, #5912]
    c97c:	strh	w12, [x18]
    c980:	sub	w15, w15, #0x1
    c984:	b	c934 <inflateCodesUsed@@ZLIB_1.2.9+0x1908>
    c988:	sub	x12, x12, #0x1
    c98c:	cbz	w12, c9a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1974>
    c990:	add	x15, x0, x12, lsl #1
    c994:	ldrh	w17, [x15, #2976]
    c998:	mov	w14, w14
    c99c:	b	c930 <inflateCodesUsed@@ZLIB_1.2.9+0x1904>
    c9a0:	ldrh	w10, [x0, #2976]
    c9a4:	lsl	w10, w10, #1
    c9a8:	strh	w10, [sp, #2]
    c9ac:	ldrh	w11, [x0, #2978]
    c9b0:	add	w10, w10, w11
    c9b4:	lsl	w10, w10, #1
    c9b8:	strh	w10, [sp, #4]
    c9bc:	ldrh	w11, [x0, #2980]
    c9c0:	add	w10, w10, w11
    c9c4:	lsl	w10, w10, #1
    c9c8:	strh	w10, [sp, #6]
    c9cc:	ldrh	w11, [x0, #2982]
    c9d0:	add	w10, w10, w11
    c9d4:	lsl	w10, w10, #1
    c9d8:	strh	w10, [sp, #8]
    c9dc:	ldrh	w11, [x0, #2984]
    c9e0:	add	w10, w10, w11
    c9e4:	lsl	w10, w10, #1
    c9e8:	strh	w10, [sp, #10]
    c9ec:	ldrh	w11, [x0, #2986]
    c9f0:	add	w10, w10, w11
    c9f4:	lsl	w10, w10, #1
    c9f8:	strh	w10, [sp, #12]
    c9fc:	ldrh	w11, [x0, #2988]
    ca00:	add	w10, w10, w11
    ca04:	lsl	w10, w10, #1
    ca08:	strh	w10, [sp, #14]
    ca0c:	ldrh	w11, [x0, #2990]
    ca10:	add	w10, w10, w11
    ca14:	lsl	w10, w10, #1
    ca18:	strh	w10, [sp, #16]
    ca1c:	ldrh	w11, [x0, #2992]
    ca20:	add	w10, w10, w11
    ca24:	lsl	w10, w10, #1
    ca28:	strh	w10, [sp, #18]
    ca2c:	ldrh	w11, [x0, #2994]
    ca30:	add	w10, w10, w11
    ca34:	lsl	w10, w10, #1
    ca38:	strh	w10, [sp, #20]
    ca3c:	ldrh	w11, [x0, #2996]
    ca40:	add	w10, w10, w11
    ca44:	lsl	w10, w10, #1
    ca48:	strh	w10, [sp, #22]
    ca4c:	ldrh	w11, [x0, #2998]
    ca50:	add	w10, w10, w11
    ca54:	lsl	w10, w10, #1
    ca58:	strh	w10, [sp, #24]
    ca5c:	ldrh	w11, [x0, #3000]
    ca60:	add	w10, w11, w10
    ca64:	lsl	w10, w10, #1
    ca68:	strh	w10, [sp, #26]
    ca6c:	ldrh	w11, [x0, #3002]
    ca70:	add	w10, w11, w10
    ca74:	lsl	w10, w10, #1
    ca78:	strh	w10, [sp, #28]
    ca7c:	ldrh	w11, [x0, #3004]
    ca80:	add	w10, w10, w11
    ca84:	lsl	w10, w10, #1
    ca88:	strh	w10, [sp, #30]
    ca8c:	tbnz	w9, #31, caf8 <inflateCodesUsed@@ZLIB_1.2.9+0x1acc>
    ca90:	mov	x10, xzr
    ca94:	add	w9, w9, #0x1
    ca98:	mov	x11, sp
    ca9c:	b	caac <inflateCodesUsed@@ZLIB_1.2.9+0x1a80>
    caa0:	add	x10, x10, #0x1
    caa4:	cmp	x10, x9
    caa8:	b.eq	caf8 <inflateCodesUsed@@ZLIB_1.2.9+0x1acc>  // b.none
    caac:	add	x12, x8, x10, lsl #2
    cab0:	ldrh	w14, [x12, #2]
    cab4:	cbz	w14, caa0 <inflateCodesUsed@@ZLIB_1.2.9+0x1a74>
    cab8:	lsl	x15, x14, #1
    cabc:	ldrh	w13, [x11, x15]
    cac0:	mov	w12, wzr
    cac4:	add	w14, w14, #0x1
    cac8:	add	w16, w13, #0x1
    cacc:	strh	w16, [x11, x15]
    cad0:	and	w15, w13, #0x1
    cad4:	sub	w14, w14, #0x1
    cad8:	orr	w15, w12, w15
    cadc:	lsr	w13, w13, #1
    cae0:	cmp	w14, #0x1
    cae4:	lsl	w12, w15, #1
    cae8:	b.gt	cad0 <inflateCodesUsed@@ZLIB_1.2.9+0x1aa4>
    caec:	lsl	x12, x10, #2
    caf0:	strh	w15, [x8, x12]
    caf4:	b	caa0 <inflateCodesUsed@@ZLIB_1.2.9+0x1a74>
    caf8:	add	sp, sp, #0x20
    cafc:	ret
    cb00:	mov	w16, wzr
    cb04:	mov	w9, #0xffffffff            	// #-1
    cb08:	mov	w13, #0x1                   	// #1
    cb0c:	mov	w14, #0x14bc                	// #5308
    cb10:	mov	w15, w9
    cb14:	b	cb28 <inflateCodesUsed@@ZLIB_1.2.9+0x1afc>
    cb18:	ldr	w16, [x11]
    cb1c:	mov	w15, w9
    cb20:	cmp	w16, #0x2
    cb24:	b.ge	c410 <inflateCodesUsed@@ZLIB_1.2.9+0x13e4>  // b.tcont
    cb28:	sxtw	x9, w16
    cb2c:	cmp	w15, #0x2
    cb30:	add	x9, x9, #0x1
    cb34:	csinc	w17, wzr, w15, ge  // ge = tcont
    cb38:	str	w9, [x0, #5300]
    cb3c:	add	x9, x0, x9, lsl #2
    cb40:	str	w17, [x9, #3008]
    cb44:	sxtw	x16, w17
    cb48:	sbfiz	x9, x17, #2, #32
    cb4c:	strh	w13, [x8, x9]
    cb50:	add	x9, x0, x16
    cb54:	strb	wzr, [x9, x14]
    cb58:	ldr	x17, [x0, #5912]
    cb5c:	cinc	w9, w15, lt  // lt = tstop
    cb60:	sub	x15, x17, #0x1
    cb64:	str	x15, [x0, #5912]
    cb68:	cbz	x12, cb18 <inflateCodesUsed@@ZLIB_1.2.9+0x1aec>
    cb6c:	add	x15, x12, x16, lsl #2
    cb70:	ldrh	w15, [x15, #2]
    cb74:	ldr	x16, [x0, #5920]
    cb78:	sub	x15, x16, x15
    cb7c:	str	x15, [x0, #5920]
    cb80:	b	cb18 <inflateCodesUsed@@ZLIB_1.2.9+0x1aec>
    cb84:	str	x21, [sp, #-32]!
    cb88:	stp	x20, x19, [sp, #16]
    cb8c:	ldr	w8, [x0, #5900]
    cb90:	cbz	w8, cea4 <inflateCodesUsed@@ZLIB_1.2.9+0x1e78>
    cb94:	mov	w9, #0x1730                	// #5936
    cb98:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cb9c:	adrp	x11, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cba0:	adrp	x12, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cba4:	adrp	x13, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cba8:	adrp	x14, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cbac:	adrp	x16, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cbb0:	mov	x17, xzr
    cbb4:	mov	w8, #0x10                  	// #16
    cbb8:	add	x10, x10, #0x418
    cbbc:	add	x11, x11, #0xa10
    cbc0:	add	x12, x12, #0xb5c
    cbc4:	add	x13, x13, #0x218
    cbc8:	add	x14, x14, #0xa84
    cbcc:	add	x15, x0, x9
    cbd0:	add	x16, x16, #0xbd0
    cbd4:	b	cbec <inflateCodesUsed@@ZLIB_1.2.9+0x1bc0>
    cbd8:	add	w3, w5, w3
    cbdc:	str	w3, [x0, #5940]
    cbe0:	ldr	w4, [x0, #5900]
    cbe4:	cmp	x17, x4
    cbe8:	b.cs	ceac <inflateCodesUsed@@ZLIB_1.2.9+0x1e80>  // b.hs, b.nlast
    cbec:	ldr	x18, [x0, #5904]
    cbf0:	ldr	x3, [x0, #5888]
    cbf4:	ldrh	w18, [x18, x17, lsl #1]
    cbf8:	ldrb	w5, [x3, x17]
    cbfc:	add	x17, x17, #0x1
    cc00:	cbz	w18, cc88 <inflateCodesUsed@@ZLIB_1.2.9+0x1c5c>
    cc04:	ldrb	w6, [x10, x5]
    cc08:	mov	w3, #0x400                 	// #1024
    cc0c:	ldr	w19, [x0, #5940]
    cc10:	bfi	x3, x6, #2, #8
    cc14:	add	x3, x3, x1
    cc18:	ldrh	w4, [x3, #6]
    cc1c:	ldrh	w7, [x3, #4]
    cc20:	ldrh	w3, [x0, #5936]
    cc24:	sub	w20, w8, w4
    cc28:	lsl	w21, w7, w19
    cc2c:	orr	w3, w3, w21
    cc30:	cmp	w19, w20
    cc34:	strh	w3, [x0, #5936]
    cc38:	b.le	ccfc <inflateCodesUsed@@ZLIB_1.2.9+0x1cd0>
    cc3c:	ldr	x19, [x0, #40]
    cc40:	ldr	x20, [x0, #16]
    cc44:	add	x21, x19, #0x1
    cc48:	str	x21, [x0, #40]
    cc4c:	strb	w3, [x20, x19]
    cc50:	add	x21, x0, x9
    cc54:	ldr	x3, [x0, #40]
    cc58:	ldrb	w19, [x21, #1]
    cc5c:	ldr	x20, [x0, #16]
    cc60:	add	x21, x3, #0x1
    cc64:	str	x21, [x0, #40]
    cc68:	strb	w19, [x20, x3]
    cc6c:	ldr	w3, [x0, #5940]
    cc70:	sub	w19, w8, w3
    cc74:	add	w4, w4, w3
    cc78:	lsr	w3, w7, w19
    cc7c:	strh	w3, [x0, #5936]
    cc80:	sub	w4, w4, #0x10
    cc84:	b	cd00 <inflateCodesUsed@@ZLIB_1.2.9+0x1cd4>
    cc88:	add	x18, x1, x5, lsl #2
    cc8c:	ldr	w5, [x0, #5940]
    cc90:	ldrh	w3, [x18, #2]
    cc94:	ldrh	w4, [x18]
    cc98:	ldrh	w18, [x0, #5936]
    cc9c:	sub	w6, w8, w3
    cca0:	lsl	w7, w4, w5
    cca4:	orr	w18, w18, w7
    cca8:	cmp	w5, w6
    ccac:	strh	w18, [x0, #5936]
    ccb0:	b.le	cbd8 <inflateCodesUsed@@ZLIB_1.2.9+0x1bac>
    ccb4:	ldr	x5, [x0, #40]
    ccb8:	ldr	x6, [x0, #16]
    ccbc:	add	x7, x5, #0x1
    ccc0:	str	x7, [x0, #40]
    ccc4:	strb	w18, [x6, x5]
    ccc8:	ldr	x18, [x0, #40]
    cccc:	ldrb	w5, [x15, #1]
    ccd0:	ldr	x6, [x0, #16]
    ccd4:	add	x7, x18, #0x1
    ccd8:	str	x7, [x0, #40]
    ccdc:	strb	w5, [x6, x18]
    cce0:	ldr	w18, [x0, #5940]
    cce4:	sub	w5, w8, w18
    cce8:	add	w3, w3, w18
    ccec:	lsr	w18, w4, w5
    ccf0:	strh	w18, [x0, #5936]
    ccf4:	sub	w3, w3, #0x10
    ccf8:	b	cbdc <inflateCodesUsed@@ZLIB_1.2.9+0x1bb0>
    ccfc:	add	w4, w19, w4
    cd00:	sub	x7, x6, #0x8
    cd04:	cmp	x7, #0x13
    cd08:	str	w4, [x0, #5940]
    cd0c:	b.hi	cd8c <inflateCodesUsed@@ZLIB_1.2.9+0x1d60>  // b.pmore
    cd10:	ldr	w7, [x12, x6, lsl #2]
    cd14:	ldr	w6, [x11, x6, lsl #2]
    cd18:	sub	w5, w5, w7
    cd1c:	and	w5, w5, #0xffff
    cd20:	sub	w7, w8, w6
    cd24:	lsl	w19, w5, w4
    cd28:	orr	w3, w3, w19
    cd2c:	cmp	w4, w7
    cd30:	strh	w3, [x0, #5936]
    cd34:	b.le	cd84 <inflateCodesUsed@@ZLIB_1.2.9+0x1d58>
    cd38:	ldr	x4, [x0, #40]
    cd3c:	ldr	x7, [x0, #16]
    cd40:	add	x19, x4, #0x1
    cd44:	str	x19, [x0, #40]
    cd48:	strb	w3, [x7, x4]
    cd4c:	add	x19, x0, x9
    cd50:	ldr	x3, [x0, #40]
    cd54:	ldrb	w4, [x19, #1]
    cd58:	ldr	x7, [x0, #16]
    cd5c:	add	x19, x3, #0x1
    cd60:	str	x19, [x0, #40]
    cd64:	strb	w4, [x7, x3]
    cd68:	ldr	w3, [x0, #5940]
    cd6c:	sub	w4, w8, w3
    cd70:	add	w6, w6, w3
    cd74:	lsr	w3, w5, w4
    cd78:	strh	w3, [x0, #5936]
    cd7c:	sub	w4, w6, #0x10
    cd80:	b	cd88 <inflateCodesUsed@@ZLIB_1.2.9+0x1d5c>
    cd84:	add	w4, w6, w4
    cd88:	str	w4, [x0, #5940]
    cd8c:	sub	w5, w18, #0x1
    cd90:	lsr	w18, w5, #7
    cd94:	cmp	w5, #0x100
    cd98:	add	w18, w18, #0x100
    cd9c:	csel	w18, w5, w18, cc  // cc = lo, ul, last
    cda0:	ldrb	w6, [x13, w18, uxtw]
    cda4:	add	x18, x2, x6, lsl #2
    cda8:	ldrh	w7, [x18, #2]
    cdac:	ldrh	w19, [x18]
    cdb0:	sub	w20, w8, w7
    cdb4:	lsl	w18, w19, w4
    cdb8:	orr	w18, w3, w18
    cdbc:	cmp	w4, w20
    cdc0:	strh	w18, [x0, #5936]
    cdc4:	b.le	ce14 <inflateCodesUsed@@ZLIB_1.2.9+0x1de8>
    cdc8:	ldr	x3, [x0, #40]
    cdcc:	ldr	x4, [x0, #16]
    cdd0:	add	x20, x3, #0x1
    cdd4:	str	x20, [x0, #40]
    cdd8:	strb	w18, [x4, x3]
    cddc:	add	x20, x0, x9
    cde0:	ldr	x18, [x0, #40]
    cde4:	ldrb	w3, [x20, #1]
    cde8:	ldr	x4, [x0, #16]
    cdec:	add	x20, x18, #0x1
    cdf0:	str	x20, [x0, #40]
    cdf4:	strb	w3, [x4, x18]
    cdf8:	ldr	w18, [x0, #5940]
    cdfc:	sub	w3, w8, w18
    ce00:	add	w4, w7, w18
    ce04:	lsr	w18, w19, w3
    ce08:	strh	w18, [x0, #5936]
    ce0c:	sub	w3, w4, #0x10
    ce10:	b	ce18 <inflateCodesUsed@@ZLIB_1.2.9+0x1dec>
    ce14:	add	w3, w4, w7
    ce18:	sub	x4, x6, #0x4
    ce1c:	cmp	x4, #0x19
    ce20:	str	w3, [x0, #5940]
    ce24:	b.hi	cbe0 <inflateCodesUsed@@ZLIB_1.2.9+0x1bb4>  // b.pmore
    ce28:	ldr	w7, [x16, x6, lsl #2]
    ce2c:	ldr	w4, [x14, x6, lsl #2]
    ce30:	sub	w5, w5, w7
    ce34:	and	w5, w5, #0xffff
    ce38:	sub	w6, w8, w4
    ce3c:	lsl	w7, w5, w3
    ce40:	orr	w18, w18, w7
    ce44:	cmp	w3, w6
    ce48:	strh	w18, [x0, #5936]
    ce4c:	b.le	ce9c <inflateCodesUsed@@ZLIB_1.2.9+0x1e70>
    ce50:	ldr	x3, [x0, #40]
    ce54:	ldr	x6, [x0, #16]
    ce58:	add	x7, x3, #0x1
    ce5c:	str	x7, [x0, #40]
    ce60:	strb	w18, [x6, x3]
    ce64:	add	x7, x0, x9
    ce68:	ldr	x18, [x0, #40]
    ce6c:	ldrb	w3, [x7, #1]
    ce70:	ldr	x6, [x0, #16]
    ce74:	add	x7, x18, #0x1
    ce78:	str	x7, [x0, #40]
    ce7c:	strb	w3, [x6, x18]
    ce80:	ldr	w18, [x0, #5940]
    ce84:	sub	w3, w8, w18
    ce88:	add	w4, w4, w18
    ce8c:	lsr	w18, w5, w3
    ce90:	strh	w18, [x0, #5936]
    ce94:	sub	w3, w4, #0x10
    ce98:	b	cbdc <inflateCodesUsed@@ZLIB_1.2.9+0x1bb0>
    ce9c:	add	w3, w4, w3
    cea0:	b	cbdc <inflateCodesUsed@@ZLIB_1.2.9+0x1bb0>
    cea4:	ldr	w3, [x0, #5940]
    cea8:	ldrh	w18, [x0, #5936]
    ceac:	ldrh	w8, [x1, #1026]
    ceb0:	ldrh	w9, [x1, #1024]
    ceb4:	mov	w10, #0x10                  	// #16
    ceb8:	sub	w12, w10, w8
    cebc:	lsl	w11, w9, w3
    cec0:	orr	w11, w18, w11
    cec4:	cmp	w3, w12
    cec8:	strh	w11, [x0, #5936]
    cecc:	b.le	cf20 <inflateCodesUsed@@ZLIB_1.2.9+0x1ef4>
    ced0:	ldr	x12, [x0, #40]
    ced4:	ldr	x13, [x0, #16]
    ced8:	add	x14, x12, #0x1
    cedc:	str	x14, [x0, #40]
    cee0:	mov	w14, #0x1730                	// #5936
    cee4:	strb	w11, [x13, x12]
    cee8:	add	x14, x0, x14
    ceec:	ldr	x11, [x0, #40]
    cef0:	ldrb	w12, [x14, #1]
    cef4:	ldr	x13, [x0, #16]
    cef8:	add	x14, x11, #0x1
    cefc:	str	x14, [x0, #40]
    cf00:	strb	w12, [x13, x11]
    cf04:	ldr	w11, [x0, #5940]
    cf08:	sub	w10, w10, w11
    cf0c:	add	w8, w8, w11
    cf10:	lsr	w9, w9, w10
    cf14:	strh	w9, [x0, #5936]
    cf18:	sub	w8, w8, #0x10
    cf1c:	b	cf24 <inflateCodesUsed@@ZLIB_1.2.9+0x1ef8>
    cf20:	add	w8, w3, w8
    cf24:	str	w8, [x0, #5940]
    cf28:	ldp	x20, x19, [sp, #16]
    cf2c:	ldr	x21, [sp], #32
    cf30:	ret
    cf34:	ldr	x8, [x0, #5904]
    cf38:	ldr	w9, [x0, #5900]
    cf3c:	strh	w1, [x8, x9, lsl #1]
    cf40:	ldr	x8, [x0, #5888]
    cf44:	add	w10, w9, #0x1
    cf48:	str	w10, [x0, #5900]
    cf4c:	strb	w2, [x8, x9]
    cf50:	cbz	w1, cfb0 <inflateCodesUsed@@ZLIB_1.2.9+0x1f84>
    cf54:	ldr	w8, [x0, #5928]
    cf58:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cf5c:	add	x10, x10, #0x418
    cf60:	ldrb	w10, [x10, w2, uxtw]
    cf64:	sub	w9, w1, #0x1
    cf68:	lsr	w11, w9, #7
    cf6c:	add	w8, w8, #0x1
    cf70:	cmp	w9, #0x100
    cf74:	add	w11, w11, #0x100
    cf78:	str	w8, [x0, #5928]
    cf7c:	mov	w8, #0x400                 	// #1024
    cf80:	csel	w9, w9, w11, cc  // cc = lo, ul, last
    cf84:	adrp	x11, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    cf88:	bfi	x8, x10, #2, #8
    cf8c:	add	x11, x11, #0x218
    cf90:	add	x8, x8, x0
    cf94:	ldrb	w9, [x11, w9, uxtw]
    cf98:	ldrh	w10, [x8, #216]
    cf9c:	add	x9, x0, x9, lsl #2
    cfa0:	add	w10, w10, #0x1
    cfa4:	strh	w10, [x8, #216]
    cfa8:	add	x8, x9, #0x9c8
    cfac:	b	cfb8 <inflateCodesUsed@@ZLIB_1.2.9+0x1f8c>
    cfb0:	add	x8, x0, w2, uxtw #2
    cfb4:	add	x8, x8, #0xd4
    cfb8:	ldrh	w9, [x8]
    cfbc:	add	w9, w9, #0x1
    cfc0:	strh	w9, [x8]
    cfc4:	ldr	w8, [x0, #5896]
    cfc8:	ldr	w9, [x0, #5900]
    cfcc:	sub	w8, w8, #0x1
    cfd0:	cmp	w9, w8
    cfd4:	cset	w0, eq  // eq = none
    cfd8:	ret
    cfdc:	stp	x22, x21, [sp, #-32]!
    cfe0:	stp	x20, x19, [sp, #16]
    cfe4:	tbnz	w2, #31, d47c <inflateCodesUsed@@ZLIB_1.2.9+0x2450>
    cfe8:	ldrh	w9, [x1, #2]
    cfec:	mov	w18, #0x7                   	// #7
    cff0:	mov	w4, #0x8a                  	// #138
    cff4:	mov	w10, #0x3                   	// #3
    cff8:	mov	w13, #0x1730                	// #5936
    cffc:	cmp	w9, #0x0
    d000:	mov	x8, xzr
    d004:	mov	w3, wzr
    d008:	add	w11, w2, #0x1
    d00c:	mov	w7, #0xffffffff            	// #-1
    d010:	mov	w12, #0x10                  	// #16
    d014:	mov	w14, #0x6                   	// #6
    d018:	mov	w15, #0xfffe                	// #65534
    d01c:	mov	w16, #0xfff6                	// #65526
    d020:	add	x17, x0, x13
    d024:	csel	w6, w4, w18, eq  // eq = none
    d028:	cinc	w5, w10, ne  // ne = any
    d02c:	mov	w18, #0xfffd                	// #65533
    d030:	b	d048 <inflateCodesUsed@@ZLIB_1.2.9+0x201c>
    d034:	mov	w2, w7
    d038:	cmp	x8, x11
    d03c:	mov	w7, w2
    d040:	mov	w3, w4
    d044:	b.eq	d47c <inflateCodesUsed@@ZLIB_1.2.9+0x2450>  // b.none
    d048:	add	x8, x8, #0x1
    d04c:	mov	w2, w9
    d050:	add	x9, x1, x8, lsl #2
    d054:	ldrh	w9, [x9, #2]
    d058:	add	w4, w3, #0x1
    d05c:	cmp	w4, w6
    d060:	b.ge	d06c <inflateCodesUsed@@ZLIB_1.2.9+0x2040>  // b.tcont
    d064:	cmp	w2, w9
    d068:	b.eq	d034 <inflateCodesUsed@@ZLIB_1.2.9+0x2008>  // b.none
    d06c:	cmp	w4, w5
    d070:	b.ge	d104 <inflateCodesUsed@@ZLIB_1.2.9+0x20d8>  // b.tcont
    d074:	ldr	w6, [x0, #5940]
    d078:	add	x5, x0, w2, uxtw #2
    d07c:	add	x3, x5, #0xabe
    d080:	add	x5, x5, #0xabc
    d084:	b	d098 <inflateCodesUsed@@ZLIB_1.2.9+0x206c>
    d088:	add	w6, w6, w7
    d08c:	subs	w4, w4, #0x1
    d090:	str	w6, [x0, #5940]
    d094:	b.eq	d458 <inflateCodesUsed@@ZLIB_1.2.9+0x242c>  // b.none
    d098:	ldrh	w7, [x3]
    d09c:	ldrh	w19, [x5]
    d0a0:	ldrh	w20, [x0, #5936]
    d0a4:	sub	w21, w12, w7
    d0a8:	lsl	w22, w19, w6
    d0ac:	orr	w20, w20, w22
    d0b0:	cmp	w6, w21
    d0b4:	strh	w20, [x0, #5936]
    d0b8:	b.le	d088 <inflateCodesUsed@@ZLIB_1.2.9+0x205c>
    d0bc:	ldr	x6, [x0, #40]
    d0c0:	ldr	x21, [x0, #16]
    d0c4:	add	x22, x6, #0x1
    d0c8:	str	x22, [x0, #40]
    d0cc:	strb	w20, [x21, x6]
    d0d0:	ldr	x6, [x0, #40]
    d0d4:	ldrb	w20, [x17, #1]
    d0d8:	ldr	x21, [x0, #16]
    d0dc:	add	x22, x6, #0x1
    d0e0:	str	x22, [x0, #40]
    d0e4:	strb	w20, [x21, x6]
    d0e8:	ldr	w6, [x0, #5940]
    d0ec:	sub	w20, w12, w6
    d0f0:	add	w6, w7, w6
    d0f4:	lsr	w7, w19, w20
    d0f8:	strh	w7, [x0, #5936]
    d0fc:	sub	w6, w6, #0x10
    d100:	b	d08c <inflateCodesUsed@@ZLIB_1.2.9+0x2060>
    d104:	cbz	w2, d11c <inflateCodesUsed@@ZLIB_1.2.9+0x20f0>
    d108:	cmp	w2, w7
    d10c:	b.ne	d198 <inflateCodesUsed@@ZLIB_1.2.9+0x216c>  // b.any
    d110:	ldr	w5, [x0, #5940]
    d114:	mov	w3, w4
    d118:	b	d28c <inflateCodesUsed@@ZLIB_1.2.9+0x2260>
    d11c:	cmp	w3, #0x9
    d120:	b.gt	d210 <inflateCodesUsed@@ZLIB_1.2.9+0x21e4>
    d124:	ldrh	w4, [x0, #2818]
    d128:	ldr	w7, [x0, #5940]
    d12c:	ldrh	w6, [x0, #2816]
    d130:	ldrh	w5, [x0, #5936]
    d134:	sub	w19, w12, w4
    d138:	cmp	w7, w19
    d13c:	lsl	w20, w6, w7
    d140:	orr	w5, w5, w20
    d144:	strh	w5, [x0, #5936]
    d148:	b.le	d370 <inflateCodesUsed@@ZLIB_1.2.9+0x2344>
    d14c:	ldr	x7, [x0, #40]
    d150:	ldr	x19, [x0, #16]
    d154:	add	x20, x7, #0x1
    d158:	str	x20, [x0, #40]
    d15c:	strb	w5, [x19, x7]
    d160:	add	x20, x0, x13
    d164:	ldr	x5, [x0, #40]
    d168:	ldrb	w7, [x20, #1]
    d16c:	ldr	x19, [x0, #16]
    d170:	add	x20, x5, #0x1
    d174:	str	x20, [x0, #40]
    d178:	strb	w7, [x19, x5]
    d17c:	ldr	w5, [x0, #5940]
    d180:	sub	w7, w12, w5
    d184:	add	w4, w4, w5
    d188:	lsr	w5, w6, w7
    d18c:	strh	w5, [x0, #5936]
    d190:	sub	w4, w4, #0x10
    d194:	b	d374 <inflateCodesUsed@@ZLIB_1.2.9+0x2348>
    d198:	add	x5, x0, w2, uxtw #2
    d19c:	ldr	w7, [x0, #5940]
    d1a0:	ldrh	w4, [x5, #2750]
    d1a4:	ldrh	w5, [x5, #2748]
    d1a8:	ldrh	w6, [x0, #5936]
    d1ac:	sub	w19, w12, w4
    d1b0:	lsl	w20, w5, w7
    d1b4:	orr	w6, w6, w20
    d1b8:	cmp	w7, w19
    d1bc:	strh	w6, [x0, #5936]
    d1c0:	b.le	d284 <inflateCodesUsed@@ZLIB_1.2.9+0x2258>
    d1c4:	ldr	x7, [x0, #40]
    d1c8:	ldr	x19, [x0, #16]
    d1cc:	add	x20, x7, #0x1
    d1d0:	str	x20, [x0, #40]
    d1d4:	strb	w6, [x19, x7]
    d1d8:	add	x20, x0, x13
    d1dc:	ldr	x6, [x0, #40]
    d1e0:	ldrb	w7, [x20, #1]
    d1e4:	ldr	x19, [x0, #16]
    d1e8:	add	x20, x6, #0x1
    d1ec:	str	x20, [x0, #40]
    d1f0:	strb	w7, [x19, x6]
    d1f4:	ldr	w6, [x0, #5940]
    d1f8:	sub	w7, w12, w6
    d1fc:	add	w4, w4, w6
    d200:	lsr	w5, w5, w7
    d204:	strh	w5, [x0, #5936]
    d208:	sub	w5, w4, #0x10
    d20c:	b	d288 <inflateCodesUsed@@ZLIB_1.2.9+0x225c>
    d210:	ldrh	w4, [x0, #2822]
    d214:	ldr	w7, [x0, #5940]
    d218:	ldrh	w6, [x0, #2820]
    d21c:	ldrh	w5, [x0, #5936]
    d220:	sub	w19, w12, w4
    d224:	cmp	w7, w19
    d228:	lsl	w20, w6, w7
    d22c:	orr	w5, w5, w20
    d230:	strh	w5, [x0, #5936]
    d234:	b.le	d3dc <inflateCodesUsed@@ZLIB_1.2.9+0x23b0>
    d238:	ldr	x7, [x0, #40]
    d23c:	ldr	x19, [x0, #16]
    d240:	add	x20, x7, #0x1
    d244:	str	x20, [x0, #40]
    d248:	strb	w5, [x19, x7]
    d24c:	add	x20, x0, x13
    d250:	ldr	x5, [x0, #40]
    d254:	ldrb	w7, [x20, #1]
    d258:	ldr	x19, [x0, #16]
    d25c:	add	x20, x5, #0x1
    d260:	str	x20, [x0, #40]
    d264:	strb	w7, [x19, x5]
    d268:	ldr	w5, [x0, #5940]
    d26c:	sub	w7, w12, w5
    d270:	add	w4, w4, w5
    d274:	lsr	w5, w6, w7
    d278:	strh	w5, [x0, #5936]
    d27c:	sub	w4, w4, #0x10
    d280:	b	d3e0 <inflateCodesUsed@@ZLIB_1.2.9+0x23b4>
    d284:	add	w5, w7, w4
    d288:	str	w5, [x0, #5940]
    d28c:	ldrh	w6, [x0, #2814]
    d290:	ldrh	w7, [x0, #2812]
    d294:	ldrh	w4, [x0, #5936]
    d298:	sub	w19, w12, w6
    d29c:	lsl	w20, w7, w5
    d2a0:	orr	w4, w4, w20
    d2a4:	cmp	w5, w19
    d2a8:	strh	w4, [x0, #5936]
    d2ac:	b.le	d2fc <inflateCodesUsed@@ZLIB_1.2.9+0x22d0>
    d2b0:	ldr	x5, [x0, #40]
    d2b4:	ldr	x19, [x0, #16]
    d2b8:	add	x20, x5, #0x1
    d2bc:	str	x20, [x0, #40]
    d2c0:	strb	w4, [x19, x5]
    d2c4:	add	x20, x0, x13
    d2c8:	ldr	x4, [x0, #40]
    d2cc:	ldrb	w5, [x20, #1]
    d2d0:	ldr	x19, [x0, #16]
    d2d4:	add	x20, x4, #0x1
    d2d8:	str	x20, [x0, #40]
    d2dc:	strb	w5, [x19, x4]
    d2e0:	ldr	w4, [x0, #5940]
    d2e4:	sub	w5, w12, w4
    d2e8:	add	w6, w6, w4
    d2ec:	lsr	w4, w7, w5
    d2f0:	strh	w4, [x0, #5936]
    d2f4:	sub	w5, w6, #0x10
    d2f8:	b	d300 <inflateCodesUsed@@ZLIB_1.2.9+0x22d4>
    d2fc:	add	w5, w5, w6
    d300:	add	w3, w3, w18
    d304:	and	w3, w3, #0xffff
    d308:	lsl	w6, w3, w5
    d30c:	orr	w4, w4, w6
    d310:	cmp	w5, #0xf
    d314:	str	w5, [x0, #5940]
    d318:	strh	w4, [x0, #5936]
    d31c:	b.lt	d368 <inflateCodesUsed@@ZLIB_1.2.9+0x233c>  // b.tstop
    d320:	ldr	x5, [x0, #40]
    d324:	ldr	x6, [x0, #16]
    d328:	add	x7, x5, #0x1
    d32c:	str	x7, [x0, #40]
    d330:	strb	w4, [x6, x5]
    d334:	add	x7, x0, x13
    d338:	ldr	x4, [x0, #40]
    d33c:	ldrb	w5, [x7, #1]
    d340:	ldr	x6, [x0, #16]
    d344:	add	x7, x4, #0x1
    d348:	str	x7, [x0, #40]
    d34c:	strb	w5, [x6, x4]
    d350:	ldr	w4, [x0, #5940]
    d354:	sub	w5, w12, w4
    d358:	lsr	w3, w3, w5
    d35c:	strh	w3, [x0, #5936]
    d360:	sub	w3, w4, #0xe
    d364:	b	d454 <inflateCodesUsed@@ZLIB_1.2.9+0x2428>
    d368:	add	w3, w5, #0x2
    d36c:	b	d454 <inflateCodesUsed@@ZLIB_1.2.9+0x2428>
    d370:	add	w4, w7, w4
    d374:	add	w3, w3, w15
    d378:	and	w3, w3, #0xffff
    d37c:	lsl	w6, w3, w4
    d380:	orr	w5, w5, w6
    d384:	cmp	w4, #0xe
    d388:	str	w4, [x0, #5940]
    d38c:	strh	w5, [x0, #5936]
    d390:	b.lt	d448 <inflateCodesUsed@@ZLIB_1.2.9+0x241c>  // b.tstop
    d394:	ldr	x4, [x0, #40]
    d398:	ldr	x6, [x0, #16]
    d39c:	add	x7, x4, #0x1
    d3a0:	str	x7, [x0, #40]
    d3a4:	strb	w5, [x6, x4]
    d3a8:	add	x7, x0, x13
    d3ac:	ldr	x4, [x0, #40]
    d3b0:	ldrb	w5, [x7, #1]
    d3b4:	ldr	x6, [x0, #16]
    d3b8:	add	x7, x4, #0x1
    d3bc:	str	x7, [x0, #40]
    d3c0:	strb	w5, [x6, x4]
    d3c4:	ldr	w4, [x0, #5940]
    d3c8:	sub	w5, w12, w4
    d3cc:	lsr	w3, w3, w5
    d3d0:	strh	w3, [x0, #5936]
    d3d4:	sub	w3, w4, #0xd
    d3d8:	b	d454 <inflateCodesUsed@@ZLIB_1.2.9+0x2428>
    d3dc:	add	w4, w7, w4
    d3e0:	add	w3, w3, w16
    d3e4:	and	w3, w3, #0xffff
    d3e8:	lsl	w6, w3, w4
    d3ec:	orr	w5, w5, w6
    d3f0:	cmp	w4, #0xa
    d3f4:	str	w4, [x0, #5940]
    d3f8:	strh	w5, [x0, #5936]
    d3fc:	b.lt	d450 <inflateCodesUsed@@ZLIB_1.2.9+0x2424>  // b.tstop
    d400:	ldr	x4, [x0, #40]
    d404:	ldr	x6, [x0, #16]
    d408:	add	x7, x4, #0x1
    d40c:	str	x7, [x0, #40]
    d410:	strb	w5, [x6, x4]
    d414:	add	x7, x0, x13
    d418:	ldr	x4, [x0, #40]
    d41c:	ldrb	w5, [x7, #1]
    d420:	ldr	x6, [x0, #16]
    d424:	add	x7, x4, #0x1
    d428:	str	x7, [x0, #40]
    d42c:	strb	w5, [x6, x4]
    d430:	ldr	w4, [x0, #5940]
    d434:	sub	w5, w12, w4
    d438:	lsr	w3, w3, w5
    d43c:	strh	w3, [x0, #5936]
    d440:	sub	w3, w4, #0x9
    d444:	b	d454 <inflateCodesUsed@@ZLIB_1.2.9+0x2428>
    d448:	add	w3, w4, #0x3
    d44c:	b	d454 <inflateCodesUsed@@ZLIB_1.2.9+0x2428>
    d450:	add	w3, w4, #0x7
    d454:	str	w3, [x0, #5940]
    d458:	mov	w4, wzr
    d45c:	cbz	w9, d470 <inflateCodesUsed@@ZLIB_1.2.9+0x2444>
    d460:	cmp	w2, w9
    d464:	cinc	w5, w10, ne  // ne = any
    d468:	cinc	w6, w14, ne  // ne = any
    d46c:	b	d038 <inflateCodesUsed@@ZLIB_1.2.9+0x200c>
    d470:	mov	w6, #0x8a                  	// #138
    d474:	mov	w5, #0x3                   	// #3
    d478:	b	d038 <inflateCodesUsed@@ZLIB_1.2.9+0x200c>
    d47c:	ldp	x20, x19, [sp, #16]
    d480:	ldp	x22, x21, [sp], #32
    d484:	ret

000000000000d488 <zlibVersion@@Base>:
    d488:	adrp	x0, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    d48c:	add	x0, x0, #0xcb1
    d490:	ret

000000000000d494 <zlibCompileFlags@@ZLIB_1.2.0.2>:
    d494:	mov	w0, #0xa9                  	// #169
    d498:	ret

000000000000d49c <zError@@Base>:
    d49c:	adrp	x9, 24000 <gzclose_w@@ZLIB_1.2.3.5+0x145d0>
    d4a0:	ldr	x9, [x9, #4056]
    d4a4:	mov	w8, #0x2                   	// #2
    d4a8:	sub	x8, x8, w0, sxtw
    d4ac:	ldr	x0, [x9, x8, lsl #3]
    d4b0:	ret
    d4b4:	mul	w0, w2, w1
    d4b8:	b	23d0 <malloc@plt>
    d4bc:	mov	x0, x1
    d4c0:	b	24d0 <free@plt>

000000000000d4c4 <compress2@@Base>:
    d4c4:	sub	sp, sp, #0xb0
    d4c8:	stp	x29, x30, [sp, #112]
    d4cc:	stp	x22, x21, [sp, #144]
    d4d0:	stp	x20, x19, [sp, #160]
    d4d4:	str	x23, [sp, #128]
    d4d8:	ldr	x23, [x1]
    d4dc:	mov	x21, x2
    d4e0:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    d4e4:	mov	x20, x3
    d4e8:	mov	x19, x1
    d4ec:	mov	x22, x0
    d4f0:	str	xzr, [x1]
    d4f4:	add	x2, x2, #0xcb1
    d4f8:	mov	x0, sp
    d4fc:	mov	w3, #0x70                  	// #112
    d500:	mov	w1, w4
    d504:	add	x29, sp, #0x70
    d508:	stp	xzr, xzr, [sp, #64]
    d50c:	str	xzr, [sp, #80]
    d510:	bl	2450 <deflateInit_@plt>
    d514:	cbnz	w0, d5a4 <compress2@@Base+0xe0>
    d518:	mov	w8, wzr
    d51c:	str	x22, [sp, #24]
    d520:	str	wzr, [sp, #32]
    d524:	str	x21, [sp]
    d528:	str	wzr, [sp, #8]
    d52c:	mov	w22, #0xffffffff            	// #-1
    d530:	cbz	w8, d55c <compress2@@Base+0x98>
    d534:	ldr	w8, [sp, #8]
    d538:	cbz	w8, d574 <compress2@@Base+0xb0>
    d53c:	cmp	x20, #0x0
    d540:	cset	w8, eq  // eq = none
    d544:	lsl	w1, w8, #2
    d548:	mov	x0, sp
    d54c:	bl	2400 <deflate@plt>
    d550:	cbnz	w0, d588 <compress2@@Base+0xc4>
    d554:	ldr	w8, [sp, #32]
    d558:	cbnz	w8, d534 <compress2@@Base+0x70>
    d55c:	cmp	x23, x22
    d560:	csel	x8, x23, x22, cc  // cc = lo, ul, last
    d564:	sub	x23, x23, x8
    d568:	str	w8, [sp, #32]
    d56c:	ldr	w8, [sp, #8]
    d570:	cbnz	w8, d53c <compress2@@Base+0x78>
    d574:	cmp	x20, x22
    d578:	csel	x8, x20, x22, cc  // cc = lo, ul, last
    d57c:	sub	x20, x20, x8
    d580:	str	w8, [sp, #8]
    d584:	b	d53c <compress2@@Base+0x78>
    d588:	ldr	x8, [sp, #40]
    d58c:	mov	w21, w0
    d590:	mov	x0, sp
    d594:	str	x8, [x19]
    d598:	bl	24f0 <deflateEnd@plt>
    d59c:	cmp	w21, #0x1
    d5a0:	csel	w0, wzr, w21, eq  // eq = none
    d5a4:	ldp	x20, x19, [sp, #160]
    d5a8:	ldp	x22, x21, [sp, #144]
    d5ac:	ldr	x23, [sp, #128]
    d5b0:	ldp	x29, x30, [sp, #112]
    d5b4:	add	sp, sp, #0xb0
    d5b8:	ret

000000000000d5bc <compress@@Base>:
    d5bc:	mov	w4, #0xffffffff            	// #-1
    d5c0:	b	2510 <compress2@plt>

000000000000d5c4 <compressBound@@ZLIB_1.2.0>:
    d5c4:	add	x8, x0, x0, lsr #12
    d5c8:	add	x8, x8, x0, lsr #14
    d5cc:	add	x8, x8, x0, lsr #25
    d5d0:	add	x0, x8, #0xd
    d5d4:	ret

000000000000d5d8 <uncompress2@@ZLIB_1.2.9>:
    d5d8:	sub	sp, sp, #0xc0
    d5dc:	stp	x29, x30, [sp, #112]
    d5e0:	stp	x24, x23, [sp, #144]
    d5e4:	stp	x22, x21, [sp, #160]
    d5e8:	stp	x20, x19, [sp, #176]
    d5ec:	ldr	x23, [x1]
    d5f0:	ldr	x24, [x3]
    d5f4:	mov	x20, x3
    d5f8:	mov	x19, x1
    d5fc:	str	x25, [sp, #128]
    d600:	add	x29, sp, #0x70
    d604:	cbz	x23, d614 <uncompress2@@ZLIB_1.2.9+0x3c>
    d608:	mov	x21, x0
    d60c:	str	xzr, [x19]
    d610:	b	d61c <uncompress2@@ZLIB_1.2.9+0x44>
    d614:	add	x21, x29, #0x1c
    d618:	mov	w23, #0x1                   	// #1
    d61c:	adrp	x1, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    d620:	str	x2, [sp]
    d624:	add	x1, x1, #0xcb1
    d628:	mov	x0, sp
    d62c:	mov	w2, #0x70                  	// #112
    d630:	str	wzr, [sp, #8]
    d634:	stp	xzr, xzr, [sp, #72]
    d638:	str	xzr, [sp, #64]
    d63c:	bl	2500 <inflateInit_@plt>
    d640:	mov	w22, w0
    d644:	cbz	w0, d668 <uncompress2@@ZLIB_1.2.9+0x90>
    d648:	mov	w0, w22
    d64c:	ldp	x20, x19, [sp, #176]
    d650:	ldp	x22, x21, [sp, #160]
    d654:	ldp	x24, x23, [sp, #144]
    d658:	ldr	x25, [sp, #128]
    d65c:	ldp	x29, x30, [sp, #112]
    d660:	add	sp, sp, #0xc0
    d664:	ret
    d668:	mov	w8, wzr
    d66c:	str	x21, [sp, #24]
    d670:	str	wzr, [sp, #32]
    d674:	mov	w25, #0xffffffff            	// #-1
    d678:	cbz	w8, d69c <uncompress2@@ZLIB_1.2.9+0xc4>
    d67c:	ldr	w8, [sp, #8]
    d680:	cbz	w8, d6b4 <uncompress2@@ZLIB_1.2.9+0xdc>
    d684:	mov	x0, sp
    d688:	mov	w1, wzr
    d68c:	bl	2380 <inflate@plt>
    d690:	cbnz	w0, d6c8 <uncompress2@@ZLIB_1.2.9+0xf0>
    d694:	ldr	w8, [sp, #32]
    d698:	cbnz	w8, d67c <uncompress2@@ZLIB_1.2.9+0xa4>
    d69c:	cmp	x23, x25
    d6a0:	csel	x8, x23, x25, cc  // cc = lo, ul, last
    d6a4:	sub	x23, x23, x8
    d6a8:	str	w8, [sp, #32]
    d6ac:	ldr	w8, [sp, #8]
    d6b0:	cbnz	w8, d684 <uncompress2@@ZLIB_1.2.9+0xac>
    d6b4:	cmp	x24, x25
    d6b8:	csel	x8, x24, x25, cc  // cc = lo, ul, last
    d6bc:	sub	x24, x24, x8
    d6c0:	str	w8, [sp, #8]
    d6c4:	b	d684 <uncompress2@@ZLIB_1.2.9+0xac>
    d6c8:	ldr	w8, [sp, #8]
    d6cc:	ldr	x9, [x20]
    d6d0:	mov	w22, w0
    d6d4:	add	x8, x24, x8
    d6d8:	sub	x8, x9, x8
    d6dc:	str	x8, [x20]
    d6e0:	ldr	x8, [sp, #40]
    d6e4:	add	x9, x29, #0x1c
    d6e8:	cmp	x21, x9
    d6ec:	b.eq	d6f8 <uncompress2@@ZLIB_1.2.9+0x120>  // b.none
    d6f0:	str	x8, [x19]
    d6f4:	b	d708 <uncompress2@@ZLIB_1.2.9+0x130>
    d6f8:	cmp	x8, #0x0
    d6fc:	mov	w8, #0xfffffffb            	// #-5
    d700:	ccmp	w22, w8, #0x0, ne  // ne = any
    d704:	csinc	x23, x23, xzr, ne  // ne = any
    d708:	mov	x0, sp
    d70c:	bl	24b0 <inflateEnd@plt>
    d710:	cmp	w22, #0x2
    d714:	b.eq	d734 <uncompress2@@ZLIB_1.2.9+0x15c>  // b.none
    d718:	cmp	w22, #0x1
    d71c:	b.eq	d73c <uncompress2@@ZLIB_1.2.9+0x164>  // b.none
    d720:	cmn	w22, #0x5
    d724:	b.ne	d648 <uncompress2@@ZLIB_1.2.9+0x70>  // b.any
    d728:	ldr	w8, [sp, #32]
    d72c:	cmn	x23, x8
    d730:	b.eq	d648 <uncompress2@@ZLIB_1.2.9+0x70>  // b.none
    d734:	mov	w22, #0xfffffffd            	// #-3
    d738:	b	d648 <uncompress2@@ZLIB_1.2.9+0x70>
    d73c:	mov	w22, wzr
    d740:	b	d648 <uncompress2@@ZLIB_1.2.9+0x70>

000000000000d744 <uncompress@@Base>:
    d744:	sub	sp, sp, #0x20
    d748:	str	x3, [sp, #8]
    d74c:	add	x3, sp, #0x8
    d750:	stp	x29, x30, [sp, #16]
    d754:	add	x29, sp, #0x10
    d758:	bl	24a0 <uncompress2@plt>
    d75c:	ldp	x29, x30, [sp, #16]
    d760:	add	sp, sp, #0x20
    d764:	ret

000000000000d768 <gzclose@@Base>:
    d768:	cbz	x0, d780 <gzclose@@Base+0x18>
    d76c:	ldr	w8, [x0, #24]
    d770:	mov	w9, #0x1c4f                	// #7247
    d774:	cmp	w8, w9
    d778:	b.ne	d788 <gzclose@@Base+0x20>  // b.any
    d77c:	b	2390 <gzclose_r@plt>
    d780:	mov	w0, #0xfffffffe            	// #-2
    d784:	ret
    d788:	b	24e0 <gzclose_w@plt>

000000000000d78c <gzopen@@Base>:
    d78c:	mov	x2, x1
    d790:	mov	w1, #0xffffffff            	// #-1
    d794:	b	d798 <gzopen@@Base+0xc>
    d798:	stp	x29, x30, [sp, #-80]!
    d79c:	stp	x26, x25, [sp, #16]
    d7a0:	stp	x24, x23, [sp, #32]
    d7a4:	stp	x22, x21, [sp, #48]
    d7a8:	stp	x20, x19, [sp, #64]
    d7ac:	mov	x29, sp
    d7b0:	cbz	x0, da40 <gzopen@@Base+0x2b4>
    d7b4:	mov	x21, x0
    d7b8:	mov	w0, #0xe8                  	// #232
    d7bc:	mov	x22, x2
    d7c0:	mov	w20, w1
    d7c4:	bl	23d0 <malloc@plt>
    d7c8:	mov	x19, x0
    d7cc:	cbz	x0, da44 <gzopen@@Base+0x2b8>
    d7d0:	adrp	x8, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    d7d4:	ldr	d0, [x8, #3256]
    d7d8:	movi	d1, #0xffffffff
    d7dc:	str	xzr, [x19, #112]
    d7e0:	str	wzr, [x19, #24]
    d7e4:	str	d1, [x19, #88]
    d7e8:	str	d0, [x19, #40]
    d7ec:	str	wzr, [x19, #64]
    d7f0:	ldrb	w15, [x22]
    d7f4:	cbz	w15, da38 <gzopen@@Base+0x2ac>
    d7f8:	adrp	x10, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    d7fc:	mov	w8, wzr
    d800:	mov	w24, wzr
    d804:	mov	w25, wzr
    d808:	mov	w26, wzr
    d80c:	add	x9, x22, #0x1
    d810:	add	x10, x10, #0xcc0
    d814:	mov	w11, #0x4                   	// #4
    d818:	mov	w12, #0x3                   	// #3
    d81c:	mov	w13, #0x1                   	// #1
    d820:	mov	w14, #0x2                   	// #2
    d824:	b	d838 <gzopen@@Base+0xac>
    d828:	sub	w15, w15, #0x30
    d82c:	str	w15, [x19, #88]
    d830:	ldrb	w15, [x9], #1
    d834:	cbz	w15, d8c8 <gzopen@@Base+0x13c>
    d838:	sub	w16, w15, #0x30
    d83c:	and	w16, w16, #0xff
    d840:	and	w15, w15, #0xff
    d844:	cmp	w16, #0x9
    d848:	b.ls	d828 <gzopen@@Base+0x9c>  // b.plast
    d84c:	sub	w15, w15, #0x2b
    d850:	cmp	w15, #0x4d
    d854:	b.hi	d830 <gzopen@@Base+0xa4>  // b.pmore
    d858:	adr	x16, d830 <gzopen@@Base+0xa4>
    d85c:	ldrb	w17, [x10, x15]
    d860:	add	x16, x16, x17, lsl #2
    d864:	br	x16
    d868:	str	w11, [x19, #92]
    d86c:	b	d830 <gzopen@@Base+0xa4>
    d870:	str	w12, [x19, #92]
    d874:	b	d830 <gzopen@@Base+0xa4>
    d878:	mov	w8, #0x1                   	// #1
    d87c:	str	w8, [x19, #64]
    d880:	b	d830 <gzopen@@Base+0xa4>
    d884:	mov	w24, #0x1                   	// #1
    d888:	str	w24, [x19, #24]
    d88c:	b	d830 <gzopen@@Base+0xa4>
    d890:	mov	w26, #0x1                   	// #1
    d894:	b	d830 <gzopen@@Base+0xa4>
    d898:	str	w13, [x19, #92]
    d89c:	b	d830 <gzopen@@Base+0xa4>
    d8a0:	str	w14, [x19, #92]
    d8a4:	b	d830 <gzopen@@Base+0xa4>
    d8a8:	mov	w24, #0x1c4f                	// #7247
    d8ac:	str	w24, [x19, #24]
    d8b0:	b	d830 <gzopen@@Base+0xa4>
    d8b4:	mov	w24, #0x79b1                	// #31153
    d8b8:	str	w24, [x19, #24]
    d8bc:	b	d830 <gzopen@@Base+0xa4>
    d8c0:	mov	w25, #0x1                   	// #1
    d8c4:	b	d830 <gzopen@@Base+0xa4>
    d8c8:	mov	w9, #0x1c4f                	// #7247
    d8cc:	cmp	w24, w9
    d8d0:	b.eq	d8dc <gzopen@@Base+0x150>  // b.none
    d8d4:	cbz	w24, da38 <gzopen@@Base+0x2ac>
    d8d8:	b	d8e8 <gzopen@@Base+0x15c>
    d8dc:	cbnz	w8, da38 <gzopen@@Base+0x2ac>
    d8e0:	mov	w8, #0x1                   	// #1
    d8e4:	str	w8, [x19, #64]
    d8e8:	mov	x0, x21
    d8ec:	bl	2370 <strlen@plt>
    d8f0:	add	x23, x0, #0x1
    d8f4:	mov	x0, x23
    d8f8:	bl	23d0 <malloc@plt>
    d8fc:	str	x0, [x19, #32]
    d900:	cbz	x0, da38 <gzopen@@Base+0x2ac>
    d904:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    d908:	add	x2, x2, #0xd28
    d90c:	mov	x1, x23
    d910:	mov	x3, x21
    d914:	mov	x22, x0
    d918:	bl	23c0 <snprintf@plt>
    d91c:	cmp	w26, #0x0
    d920:	mov	w9, #0x1c4f                	// #7247
    d924:	cset	w8, ne  // ne = any
    d928:	cmp	w24, w9
    d92c:	b.ne	d938 <gzopen@@Base+0x1ac>  // b.any
    d930:	mov	w9, wzr
    d934:	b	d960 <gzopen@@Base+0x1d4>
    d938:	cmp	w25, #0x0
    d93c:	mov	w9, #0xc1                  	// #193
    d940:	mov	w10, #0x41                  	// #65
    d944:	mov	w11, #0x79b1                	// #31153
    d948:	mov	w12, #0x400                 	// #1024
    d94c:	csel	w9, w10, w9, eq  // eq = none
    d950:	cmp	w24, w11
    d954:	mov	w10, #0x200                 	// #512
    d958:	csel	w10, w10, w12, eq  // eq = none
    d95c:	orr	w9, w10, w9
    d960:	tbnz	w20, #31, d96c <gzopen@@Base+0x1e0>
    d964:	str	w20, [x19, #28]
    d968:	b	d990 <gzopen@@Base+0x204>
    d96c:	lsl	w8, w8, #19
    d970:	orr	w1, w9, w8
    d974:	mov	w2, #0x1b6                 	// #438
    d978:	mov	x0, x21
    d97c:	bl	23e0 <open@plt>
    d980:	mov	w20, w0
    d984:	cmn	w0, #0x1
    d988:	str	w0, [x19, #28]
    d98c:	b.eq	da30 <gzopen@@Base+0x2a4>  // b.none
    d990:	cmp	w24, #0x1
    d994:	b.ne	d9b4 <gzopen@@Base+0x228>  // b.any
    d998:	mov	w2, #0x2                   	// #2
    d99c:	mov	w0, w20
    d9a0:	mov	x1, xzr
    d9a4:	bl	2420 <lseek64@plt>
    d9a8:	mov	w8, #0x79b1                	// #31153
    d9ac:	str	w8, [x19, #24]
    d9b0:	b	d9fc <gzopen@@Base+0x270>
    d9b4:	ldr	w8, [x19, #24]
    d9b8:	mov	w21, #0x1c4f                	// #7247
    d9bc:	cmp	w8, w21
    d9c0:	b.ne	d9fc <gzopen@@Base+0x270>  // b.any
    d9c4:	mov	w2, #0x1                   	// #1
    d9c8:	mov	w0, w20
    d9cc:	mov	x1, xzr
    d9d0:	bl	2420 <lseek64@plt>
    d9d4:	ldr	w8, [x19, #24]
    d9d8:	cmn	x0, #0x1
    d9dc:	csel	x9, xzr, x0, eq  // eq = none
    d9e0:	str	x9, [x19, #72]
    d9e4:	cmp	w8, w21
    d9e8:	str	wzr, [x19]
    d9ec:	b.ne	da00 <gzopen@@Base+0x274>  // b.any
    d9f0:	str	xzr, [x19, #80]
    d9f4:	str	wzr, [x19, #68]
    d9f8:	b	da00 <gzopen@@Base+0x274>
    d9fc:	str	wzr, [x19]
    da00:	ldr	x0, [x19, #112]
    da04:	str	wzr, [x19, #104]
    da08:	cbz	x0, da20 <gzopen@@Base+0x294>
    da0c:	ldr	w8, [x19, #108]
    da10:	cmn	w8, #0x4
    da14:	b.eq	da1c <gzopen@@Base+0x290>  // b.none
    da18:	bl	24d0 <free@plt>
    da1c:	str	xzr, [x19, #112]
    da20:	str	wzr, [x19, #108]
    da24:	str	xzr, [x19, #16]
    da28:	str	wzr, [x19, #128]
    da2c:	b	da44 <gzopen@@Base+0x2b8>
    da30:	mov	x0, x22
    da34:	bl	24d0 <free@plt>
    da38:	mov	x0, x19
    da3c:	bl	24d0 <free@plt>
    da40:	mov	x19, xzr
    da44:	mov	x0, x19
    da48:	ldp	x20, x19, [sp, #64]
    da4c:	ldp	x22, x21, [sp, #48]
    da50:	ldp	x24, x23, [sp, #32]
    da54:	ldp	x26, x25, [sp, #16]
    da58:	ldp	x29, x30, [sp], #80
    da5c:	ret

000000000000da60 <gzopen64@@ZLIB_1.2.3.3>:
    da60:	mov	x2, x1
    da64:	mov	w1, #0xffffffff            	// #-1
    da68:	b	d798 <gzopen@@Base+0xc>

000000000000da6c <gzdopen@@Base>:
    da6c:	stp	x29, x30, [sp, #-48]!
    da70:	cmn	w0, #0x1
    da74:	str	x21, [sp, #16]
    da78:	stp	x20, x19, [sp, #32]
    da7c:	mov	x29, sp
    da80:	b.eq	dad4 <gzdopen@@Base+0x68>  // b.none
    da84:	mov	w19, w0
    da88:	mov	w0, #0x13                  	// #19
    da8c:	mov	x20, x1
    da90:	bl	23d0 <malloc@plt>
    da94:	cbz	x0, dad4 <gzdopen@@Base+0x68>
    da98:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    da9c:	add	x2, x2, #0xd0e
    daa0:	mov	w1, #0x13                  	// #19
    daa4:	mov	w3, w19
    daa8:	mov	x21, x0
    daac:	bl	23c0 <snprintf@plt>
    dab0:	mov	x0, x21
    dab4:	mov	w1, w19
    dab8:	mov	x2, x20
    dabc:	bl	d798 <gzopen@@Base+0xc>
    dac0:	mov	x19, x0
    dac4:	mov	x0, x21
    dac8:	bl	24d0 <free@plt>
    dacc:	mov	x0, x19
    dad0:	b	dad8 <gzdopen@@Base+0x6c>
    dad4:	mov	x0, xzr
    dad8:	ldp	x20, x19, [sp, #32]
    dadc:	ldr	x21, [sp, #16]
    dae0:	ldp	x29, x30, [sp], #48
    dae4:	ret

000000000000dae8 <gzbuffer@@ZLIB_1.2.3.5>:
    dae8:	cbz	x0, db38 <gzbuffer@@ZLIB_1.2.3.5+0x50>
    daec:	ldr	w9, [x0, #24]
    daf0:	mov	w10, #0x79b1                	// #31153
    daf4:	mov	x8, x0
    daf8:	cmp	w9, w10
    dafc:	b.eq	db0c <gzbuffer@@ZLIB_1.2.3.5+0x24>  // b.none
    db00:	mov	w10, #0x1c4f                	// #7247
    db04:	cmp	w9, w10
    db08:	b.ne	db38 <gzbuffer@@ZLIB_1.2.3.5+0x50>  // b.any
    db0c:	cmp	w1, w1, lsl #1
    db10:	mov	w0, #0xffffffff            	// #-1
    db14:	b.hi	db34 <gzbuffer@@ZLIB_1.2.3.5+0x4c>  // b.pmore
    db18:	ldr	w9, [x8, #40]
    db1c:	cbnz	w9, db34 <gzbuffer@@ZLIB_1.2.3.5+0x4c>
    db20:	cmp	w1, #0x2
    db24:	mov	w9, #0x2                   	// #2
    db28:	mov	w0, wzr
    db2c:	csel	w9, w1, w9, hi  // hi = pmore
    db30:	str	w9, [x8, #44]
    db34:	ret
    db38:	mov	w0, #0xffffffff            	// #-1
    db3c:	ret

000000000000db40 <gzrewind@@Base>:
    db40:	stp	x29, x30, [sp, #-32]!
    db44:	str	x19, [sp, #16]
    db48:	mov	x29, sp
    db4c:	cbz	x0, dbdc <gzrewind@@Base+0x9c>
    db50:	ldr	w8, [x0, #24]
    db54:	mov	w9, #0x1c4f                	// #7247
    db58:	mov	x19, x0
    db5c:	cmp	w8, w9
    db60:	b.ne	dbdc <gzrewind@@Base+0x9c>  // b.any
    db64:	ldr	w8, [x19, #108]
    db68:	cbz	w8, db74 <gzrewind@@Base+0x34>
    db6c:	cmn	w8, #0x5
    db70:	b.ne	dbdc <gzrewind@@Base+0x9c>  // b.any
    db74:	ldr	w0, [x19, #28]
    db78:	ldr	x1, [x19, #72]
    db7c:	mov	w2, wzr
    db80:	bl	2420 <lseek64@plt>
    db84:	cmn	x0, #0x1
    db88:	b.eq	dbe0 <gzrewind@@Base+0xa0>  // b.none
    db8c:	ldr	w8, [x19, #24]
    db90:	mov	w9, #0x1c4f                	// #7247
    db94:	str	wzr, [x19]
    db98:	cmp	w8, w9
    db9c:	b.ne	dba8 <gzrewind@@Base+0x68>  // b.any
    dba0:	str	xzr, [x19, #80]
    dba4:	str	wzr, [x19, #68]
    dba8:	ldr	x0, [x19, #112]
    dbac:	str	wzr, [x19, #104]
    dbb0:	cbz	x0, dbc8 <gzrewind@@Base+0x88>
    dbb4:	ldr	w8, [x19, #108]
    dbb8:	cmn	w8, #0x4
    dbbc:	b.eq	dbc4 <gzrewind@@Base+0x84>  // b.none
    dbc0:	bl	24d0 <free@plt>
    dbc4:	str	xzr, [x19, #112]
    dbc8:	mov	w0, wzr
    dbcc:	str	wzr, [x19, #108]
    dbd0:	str	xzr, [x19, #16]
    dbd4:	str	wzr, [x19, #128]
    dbd8:	b	dbe0 <gzrewind@@Base+0xa0>
    dbdc:	mov	w0, #0xffffffff            	// #-1
    dbe0:	ldr	x19, [sp, #16]
    dbe4:	ldp	x29, x30, [sp], #32
    dbe8:	ret

000000000000dbec <gzseek64@@ZLIB_1.2.3.3>:
    dbec:	stp	x29, x30, [sp, #-32]!
    dbf0:	stp	x20, x19, [sp, #16]
    dbf4:	mov	x29, sp
    dbf8:	cbz	x0, dc38 <gzseek64@@ZLIB_1.2.3.3+0x4c>
    dbfc:	ldr	w8, [x0, #24]
    dc00:	mov	w9, #0x79b1                	// #31153
    dc04:	mov	x19, x1
    dc08:	mov	x20, x0
    dc0c:	cmp	w8, w9
    dc10:	b.eq	dc20 <gzseek64@@ZLIB_1.2.3.3+0x34>  // b.none
    dc14:	mov	w9, #0x1c4f                	// #7247
    dc18:	cmp	w8, w9
    dc1c:	b.ne	dc38 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    dc20:	ldr	w9, [x20, #108]
    dc24:	cbz	w9, dc30 <gzseek64@@ZLIB_1.2.3.3+0x44>
    dc28:	cmn	w9, #0x5
    dc2c:	b.ne	dc38 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    dc30:	cmp	w2, #0x1
    dc34:	b.ls	dc48 <gzseek64@@ZLIB_1.2.3.3+0x5c>  // b.plast
    dc38:	mov	x0, #0xffffffffffffffff    	// #-1
    dc3c:	ldp	x20, x19, [sp, #16]
    dc40:	ldp	x29, x30, [sp], #32
    dc44:	ret
    dc48:	cbz	w2, dc60 <gzseek64@@ZLIB_1.2.3.3+0x74>
    dc4c:	ldr	w10, [x20, #104]
    dc50:	cbz	w10, dc68 <gzseek64@@ZLIB_1.2.3.3+0x7c>
    dc54:	ldr	x10, [x20, #96]
    dc58:	add	x19, x10, x19
    dc5c:	b	dc68 <gzseek64@@ZLIB_1.2.3.3+0x7c>
    dc60:	ldr	x10, [x20, #16]
    dc64:	sub	x19, x19, x10
    dc68:	mov	w10, #0x1c4f                	// #7247
    dc6c:	cmp	w8, w10
    dc70:	str	wzr, [x20, #104]
    dc74:	b.ne	dcec <gzseek64@@ZLIB_1.2.3.3+0x100>  // b.any
    dc78:	ldr	w10, [x20, #68]
    dc7c:	cmp	w10, #0x1
    dc80:	b.ne	dcec <gzseek64@@ZLIB_1.2.3.3+0x100>  // b.any
    dc84:	ldr	x10, [x20, #16]
    dc88:	cmn	x10, x19
    dc8c:	b.mi	dcec <gzseek64@@ZLIB_1.2.3.3+0x100>  // b.first
    dc90:	ldr	w8, [x20]
    dc94:	ldr	w0, [x20, #28]
    dc98:	mov	w2, #0x1                   	// #1
    dc9c:	sub	x1, x19, x8
    dca0:	bl	2420 <lseek64@plt>
    dca4:	cmn	x0, #0x1
    dca8:	b.eq	dc3c <gzseek64@@ZLIB_1.2.3.3+0x50>  // b.none
    dcac:	ldr	x0, [x20, #112]
    dcb0:	str	wzr, [x20]
    dcb4:	str	xzr, [x20, #80]
    dcb8:	str	wzr, [x20, #104]
    dcbc:	cbz	x0, dcd4 <gzseek64@@ZLIB_1.2.3.3+0xe8>
    dcc0:	ldr	w8, [x20, #108]
    dcc4:	cmn	w8, #0x4
    dcc8:	b.eq	dcd0 <gzseek64@@ZLIB_1.2.3.3+0xe4>  // b.none
    dccc:	bl	24d0 <free@plt>
    dcd0:	str	xzr, [x20, #112]
    dcd4:	ldr	x8, [x20, #16]
    dcd8:	str	wzr, [x20, #108]
    dcdc:	str	wzr, [x20, #128]
    dce0:	add	x0, x8, x19
    dce4:	str	x0, [x20, #16]
    dce8:	b	dc3c <gzseek64@@ZLIB_1.2.3.3+0x50>
    dcec:	tbnz	x19, #63, dd40 <gzseek64@@ZLIB_1.2.3.3+0x154>
    dcf0:	mov	w9, #0x1c4f                	// #7247
    dcf4:	cmp	w8, w9
    dcf8:	b.ne	dd24 <gzseek64@@ZLIB_1.2.3.3+0x138>  // b.any
    dcfc:	ldr	w8, [x20]
    dd00:	ldp	x9, x10, [x20, #8]
    dd04:	cmp	x19, x8
    dd08:	csel	w11, w19, w8, lt  // lt = tstop
    dd0c:	sub	w8, w8, w11
    dd10:	add	x9, x9, x11
    dd14:	add	x10, x10, x11
    dd18:	sub	x19, x19, x11
    dd1c:	str	w8, [x20]
    dd20:	stp	x9, x10, [x20, #8]
    dd24:	cbz	x19, dd34 <gzseek64@@ZLIB_1.2.3.3+0x148>
    dd28:	mov	w8, #0x1                   	// #1
    dd2c:	str	w8, [x20, #104]
    dd30:	str	x19, [x20, #96]
    dd34:	ldr	x8, [x20, #16]
    dd38:	add	x0, x8, x19
    dd3c:	b	dc3c <gzseek64@@ZLIB_1.2.3.3+0x50>
    dd40:	mov	w10, #0x1c4f                	// #7247
    dd44:	cmp	w8, w10
    dd48:	b.ne	dc38 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    dd4c:	ldr	x8, [x20, #16]
    dd50:	adds	x19, x8, x19
    dd54:	b.mi	dc38 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.first
    dd58:	cbz	w9, dd64 <gzseek64@@ZLIB_1.2.3.3+0x178>
    dd5c:	cmn	w9, #0x5
    dd60:	b.ne	dc38 <gzseek64@@ZLIB_1.2.3.3+0x4c>  // b.any
    dd64:	ldr	w0, [x20, #28]
    dd68:	ldr	x1, [x20, #72]
    dd6c:	mov	w2, wzr
    dd70:	bl	2420 <lseek64@plt>
    dd74:	cmn	x0, #0x1
    dd78:	b.eq	dc3c <gzseek64@@ZLIB_1.2.3.3+0x50>  // b.none
    dd7c:	ldr	w8, [x20, #24]
    dd80:	mov	w9, #0x1c4f                	// #7247
    dd84:	str	wzr, [x20]
    dd88:	cmp	w8, w9
    dd8c:	b.ne	dd98 <gzseek64@@ZLIB_1.2.3.3+0x1ac>  // b.any
    dd90:	str	xzr, [x20, #80]
    dd94:	str	wzr, [x20, #68]
    dd98:	ldr	x0, [x20, #112]
    dd9c:	str	wzr, [x20, #104]
    dda0:	cbz	x0, ddbc <gzseek64@@ZLIB_1.2.3.3+0x1d0>
    dda4:	ldr	w9, [x20, #108]
    dda8:	cmn	w9, #0x4
    ddac:	b.eq	ddb8 <gzseek64@@ZLIB_1.2.3.3+0x1cc>  // b.none
    ddb0:	bl	24d0 <free@plt>
    ddb4:	ldr	w8, [x20, #24]
    ddb8:	str	xzr, [x20, #112]
    ddbc:	str	wzr, [x20, #108]
    ddc0:	str	xzr, [x20, #16]
    ddc4:	str	wzr, [x20, #128]
    ddc8:	b	dcf0 <gzseek64@@ZLIB_1.2.3.3+0x104>
    ddcc:	stp	x29, x30, [sp, #-48]!
    ddd0:	stp	x22, x21, [sp, #16]
    ddd4:	stp	x20, x19, [sp, #32]
    ddd8:	mov	x20, x0
    dddc:	ldr	x0, [x0, #112]
    dde0:	mov	x19, x2
    dde4:	mov	w21, w1
    dde8:	mov	x29, sp
    ddec:	cbz	x0, de04 <gzseek64@@ZLIB_1.2.3.3+0x218>
    ddf0:	ldr	w8, [x20, #108]
    ddf4:	cmn	w8, #0x4
    ddf8:	b.eq	de00 <gzseek64@@ZLIB_1.2.3.3+0x214>  // b.none
    ddfc:	bl	24d0 <free@plt>
    de00:	str	xzr, [x20, #112]
    de04:	cmn	w21, #0x5
    de08:	b.eq	de14 <gzseek64@@ZLIB_1.2.3.3+0x228>  // b.none
    de0c:	cbz	w21, de14 <gzseek64@@ZLIB_1.2.3.3+0x228>
    de10:	str	wzr, [x20]
    de14:	cmn	w21, #0x4
    de18:	str	w21, [x20, #108]
    de1c:	b.eq	dea4 <gzseek64@@ZLIB_1.2.3.3+0x2b8>  // b.none
    de20:	cbz	x19, dea4 <gzseek64@@ZLIB_1.2.3.3+0x2b8>
    de24:	ldr	x21, [x20, #32]
    de28:	mov	x0, x21
    de2c:	bl	2370 <strlen@plt>
    de30:	mov	x22, x0
    de34:	mov	x0, x19
    de38:	bl	2370 <strlen@plt>
    de3c:	add	x8, x22, x0
    de40:	add	x0, x8, #0x3
    de44:	bl	23d0 <malloc@plt>
    de48:	str	x0, [x20, #112]
    de4c:	cbz	x0, de9c <gzseek64@@ZLIB_1.2.3.3+0x2b0>
    de50:	mov	x22, x0
    de54:	mov	x0, x21
    de58:	bl	2370 <strlen@plt>
    de5c:	mov	x20, x0
    de60:	mov	x0, x19
    de64:	bl	2370 <strlen@plt>
    de68:	add	x8, x20, x0
    de6c:	mov	x0, x22
    de70:	mov	x3, x21
    de74:	mov	x5, x19
    de78:	ldp	x20, x19, [sp, #32]
    de7c:	ldp	x22, x21, [sp, #16]
    de80:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    de84:	adrp	x4, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    de88:	add	x2, x2, #0xd24
    de8c:	add	x1, x8, #0x3
    de90:	add	x4, x4, #0xd2b
    de94:	ldp	x29, x30, [sp], #48
    de98:	b	23c0 <snprintf@plt>
    de9c:	mov	w8, #0xfffffffc            	// #-4
    dea0:	str	w8, [x20, #108]
    dea4:	ldp	x20, x19, [sp, #32]
    dea8:	ldp	x22, x21, [sp, #16]
    deac:	ldp	x29, x30, [sp], #48
    deb0:	ret

000000000000deb4 <gzseek@@Base>:
    deb4:	b	2360 <gzseek64@plt>

000000000000deb8 <gztell64@@ZLIB_1.2.3.3>:
    deb8:	cbz	x0, def0 <gztell64@@ZLIB_1.2.3.3+0x38>
    debc:	ldr	w8, [x0, #24]
    dec0:	mov	w9, #0x79b1                	// #31153
    dec4:	cmp	w8, w9
    dec8:	b.eq	ded8 <gztell64@@ZLIB_1.2.3.3+0x20>  // b.none
    decc:	mov	w9, #0x1c4f                	// #7247
    ded0:	cmp	w8, w9
    ded4:	b.ne	def0 <gztell64@@ZLIB_1.2.3.3+0x38>  // b.any
    ded8:	ldr	w9, [x0, #104]
    dedc:	ldr	x8, [x0, #16]
    dee0:	cbz	w9, def8 <gztell64@@ZLIB_1.2.3.3+0x40>
    dee4:	ldr	x9, [x0, #96]
    dee8:	add	x0, x9, x8
    deec:	ret
    def0:	mov	x0, #0xffffffffffffffff    	// #-1
    def4:	ret
    def8:	add	x0, xzr, x8
    defc:	ret

000000000000df00 <gztell@@Base>:
    df00:	cbz	x0, df38 <gztell@@Base+0x38>
    df04:	ldr	w8, [x0, #24]
    df08:	mov	w9, #0x79b1                	// #31153
    df0c:	cmp	w8, w9
    df10:	b.eq	df20 <gztell@@Base+0x20>  // b.none
    df14:	mov	w9, #0x1c4f                	// #7247
    df18:	cmp	w8, w9
    df1c:	b.ne	df38 <gztell@@Base+0x38>  // b.any
    df20:	ldr	w9, [x0, #104]
    df24:	ldr	x8, [x0, #16]
    df28:	cbz	w9, df40 <gztell@@Base+0x40>
    df2c:	ldr	x9, [x0, #96]
    df30:	add	x0, x9, x8
    df34:	ret
    df38:	mov	x0, #0xffffffffffffffff    	// #-1
    df3c:	ret
    df40:	add	x0, xzr, x8
    df44:	ret

000000000000df48 <gzoffset64@@ZLIB_1.2.3.5>:
    df48:	stp	x29, x30, [sp, #-32]!
    df4c:	str	x19, [sp, #16]
    df50:	mov	x29, sp
    df54:	cbz	x0, dfac <gzoffset64@@ZLIB_1.2.3.5+0x64>
    df58:	ldr	w8, [x0, #24]
    df5c:	mov	w9, #0x79b1                	// #31153
    df60:	mov	x19, x0
    df64:	cmp	w8, w9
    df68:	b.eq	df78 <gzoffset64@@ZLIB_1.2.3.5+0x30>  // b.none
    df6c:	mov	w9, #0x1c4f                	// #7247
    df70:	cmp	w8, w9
    df74:	b.ne	dfac <gzoffset64@@ZLIB_1.2.3.5+0x64>  // b.any
    df78:	ldr	w0, [x19, #28]
    df7c:	mov	w2, #0x1                   	// #1
    df80:	mov	x1, xzr
    df84:	bl	2420 <lseek64@plt>
    df88:	cmn	x0, #0x1
    df8c:	b.eq	dfb0 <gzoffset64@@ZLIB_1.2.3.5+0x68>  // b.none
    df90:	ldr	w8, [x19, #24]
    df94:	mov	w9, #0x1c4f                	// #7247
    df98:	cmp	w8, w9
    df9c:	b.ne	dfb0 <gzoffset64@@ZLIB_1.2.3.5+0x68>  // b.any
    dfa0:	ldr	w8, [x19, #128]
    dfa4:	sub	x0, x0, x8
    dfa8:	b	dfb0 <gzoffset64@@ZLIB_1.2.3.5+0x68>
    dfac:	mov	x0, #0xffffffffffffffff    	// #-1
    dfb0:	ldr	x19, [sp, #16]
    dfb4:	ldp	x29, x30, [sp], #32
    dfb8:	ret

000000000000dfbc <gzoffset@@ZLIB_1.2.3.5>:
    dfbc:	stp	x29, x30, [sp, #-32]!
    dfc0:	str	x19, [sp, #16]
    dfc4:	mov	x29, sp
    dfc8:	cbz	x0, e020 <gzoffset@@ZLIB_1.2.3.5+0x64>
    dfcc:	ldr	w8, [x0, #24]
    dfd0:	mov	w9, #0x79b1                	// #31153
    dfd4:	mov	x19, x0
    dfd8:	cmp	w8, w9
    dfdc:	b.eq	dfec <gzoffset@@ZLIB_1.2.3.5+0x30>  // b.none
    dfe0:	mov	w9, #0x1c4f                	// #7247
    dfe4:	cmp	w8, w9
    dfe8:	b.ne	e020 <gzoffset@@ZLIB_1.2.3.5+0x64>  // b.any
    dfec:	ldr	w0, [x19, #28]
    dff0:	mov	w2, #0x1                   	// #1
    dff4:	mov	x1, xzr
    dff8:	bl	2420 <lseek64@plt>
    dffc:	cmn	x0, #0x1
    e000:	b.eq	e024 <gzoffset@@ZLIB_1.2.3.5+0x68>  // b.none
    e004:	ldr	w8, [x19, #24]
    e008:	mov	w9, #0x1c4f                	// #7247
    e00c:	cmp	w8, w9
    e010:	b.ne	e024 <gzoffset@@ZLIB_1.2.3.5+0x68>  // b.any
    e014:	ldr	w8, [x19, #128]
    e018:	sub	x0, x0, x8
    e01c:	b	e024 <gzoffset@@ZLIB_1.2.3.5+0x68>
    e020:	mov	x0, #0xffffffffffffffff    	// #-1
    e024:	ldr	x19, [sp, #16]
    e028:	ldp	x29, x30, [sp], #32
    e02c:	ret

000000000000e030 <gzeof@@Base>:
    e030:	cbz	x0, e048 <gzeof@@Base+0x18>
    e034:	ldr	w8, [x0, #24]
    e038:	mov	w9, #0x1c4f                	// #7247
    e03c:	cmp	w8, w9
    e040:	b.ne	e04c <gzeof@@Base+0x1c>  // b.any
    e044:	ldr	w0, [x0, #84]
    e048:	ret
    e04c:	mov	w0, wzr
    e050:	ret

000000000000e054 <gzerror@@Base>:
    e054:	cbz	x0, e0b4 <gzerror@@Base+0x60>
    e058:	ldr	w8, [x0, #24]
    e05c:	mov	w9, #0x79b1                	// #31153
    e060:	cmp	w8, w9
    e064:	b.eq	e074 <gzerror@@Base+0x20>  // b.none
    e068:	mov	w9, #0x1c4f                	// #7247
    e06c:	cmp	w8, w9
    e070:	b.ne	e098 <gzerror@@Base+0x44>  // b.any
    e074:	cbz	x1, e080 <gzerror@@Base+0x2c>
    e078:	ldr	w8, [x0, #108]
    e07c:	str	w8, [x1]
    e080:	ldr	w8, [x0, #108]
    e084:	cmn	w8, #0x4
    e088:	b.ne	e0a0 <gzerror@@Base+0x4c>  // b.any
    e08c:	adrp	x0, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    e090:	add	x0, x0, #0xd16
    e094:	ret
    e098:	mov	x0, xzr
    e09c:	ret
    e0a0:	ldr	x8, [x0, #112]
    e0a4:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    e0a8:	add	x9, x9, #0xd2d
    e0ac:	cmp	x8, #0x0
    e0b0:	csel	x0, x9, x8, eq  // eq = none
    e0b4:	ret

000000000000e0b8 <gzclearerr@@ZLIB_1.2.0.2>:
    e0b8:	stp	x29, x30, [sp, #-32]!
    e0bc:	str	x19, [sp, #16]
    e0c0:	mov	x29, sp
    e0c4:	cbz	x0, e10c <gzclearerr@@ZLIB_1.2.0.2+0x54>
    e0c8:	ldr	w8, [x0, #24]
    e0cc:	mov	w9, #0x79b1                	// #31153
    e0d0:	mov	x19, x0
    e0d4:	cmp	w8, w9
    e0d8:	b.eq	e0ec <gzclearerr@@ZLIB_1.2.0.2+0x34>  // b.none
    e0dc:	mov	w9, #0x1c4f                	// #7247
    e0e0:	cmp	w8, w9
    e0e4:	b.ne	e10c <gzclearerr@@ZLIB_1.2.0.2+0x54>  // b.any
    e0e8:	str	xzr, [x19, #80]
    e0ec:	ldr	x0, [x19, #112]
    e0f0:	cbz	x0, e108 <gzclearerr@@ZLIB_1.2.0.2+0x50>
    e0f4:	ldr	w8, [x19, #108]
    e0f8:	cmn	w8, #0x4
    e0fc:	b.eq	e104 <gzclearerr@@ZLIB_1.2.0.2+0x4c>  // b.none
    e100:	bl	24d0 <free@plt>
    e104:	str	xzr, [x19, #112]
    e108:	str	wzr, [x19, #108]
    e10c:	ldr	x19, [sp, #16]
    e110:	ldp	x29, x30, [sp], #32
    e114:	ret

000000000000e118 <gzread@@Base>:
    e118:	stp	x29, x30, [sp, #-32]!
    e11c:	str	x19, [sp, #16]
    e120:	mov	x29, sp
    e124:	cbz	x0, e188 <gzread@@Base+0x70>
    e128:	ldr	w8, [x0, #24]
    e12c:	mov	w9, #0x1c4f                	// #7247
    e130:	mov	x19, x0
    e134:	cmp	w8, w9
    e138:	b.ne	e188 <gzread@@Base+0x70>  // b.any
    e13c:	ldr	w8, [x19, #108]
    e140:	cbz	w8, e14c <gzread@@Base+0x34>
    e144:	cmn	w8, #0x5
    e148:	b.ne	e188 <gzread@@Base+0x70>  // b.any
    e14c:	tbnz	w2, #31, e174 <gzread@@Base+0x5c>
    e150:	mov	w2, w2
    e154:	mov	x0, x19
    e158:	bl	e198 <gzread@@Base+0x80>
    e15c:	cbnz	w0, e18c <gzread@@Base+0x74>
    e160:	ldr	w8, [x19, #108]
    e164:	cbz	w8, e18c <gzread@@Base+0x74>
    e168:	cmn	w8, #0x5
    e16c:	b.eq	e18c <gzread@@Base+0x74>  // b.none
    e170:	b	e188 <gzread@@Base+0x70>
    e174:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    e178:	add	x2, x2, #0xd35
    e17c:	mov	w1, #0xfffffffe            	// #-2
    e180:	mov	x0, x19
    e184:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    e188:	mov	w0, #0xffffffff            	// #-1
    e18c:	ldr	x19, [sp, #16]
    e190:	ldp	x29, x30, [sp], #32
    e194:	ret
    e198:	stp	x29, x30, [sp, #-96]!
    e19c:	str	x27, [sp, #16]
    e1a0:	stp	x26, x25, [sp, #32]
    e1a4:	stp	x24, x23, [sp, #48]
    e1a8:	stp	x22, x21, [sp, #64]
    e1ac:	stp	x20, x19, [sp, #80]
    e1b0:	mov	x29, sp
    e1b4:	cbz	x2, e23c <gzread@@Base+0x124>
    e1b8:	ldr	w8, [x0, #104]
    e1bc:	mov	x20, x2
    e1c0:	mov	x21, x1
    e1c4:	mov	x19, x0
    e1c8:	cbz	w8, e1d8 <gzread@@Base+0xc0>
    e1cc:	ldr	x22, [x19, #96]
    e1d0:	str	wzr, [x19, #104]
    e1d4:	cbnz	x22, e214 <gzread@@Base+0xfc>
    e1d8:	mov	x22, xzr
    e1dc:	mov	w24, #0xffffffff            	// #-1
    e1e0:	mov	w25, #0x40000000            	// #1073741824
    e1e4:	mov	w26, #0x1                   	// #1
    e1e8:	b	e274 <gzread@@Base+0x15c>
    e1ec:	ldp	x9, x10, [x19, #8]
    e1f0:	cmp	x22, x8
    e1f4:	csel	w11, w22, w8, lt  // lt = tstop
    e1f8:	sub	w8, w8, w11
    e1fc:	str	w8, [x19]
    e200:	add	x8, x9, x11
    e204:	add	x9, x10, x11
    e208:	sub	x22, x22, x11
    e20c:	stp	x8, x9, [x19, #8]
    e210:	cbz	x22, e1d8 <gzread@@Base+0xc0>
    e214:	ldr	w8, [x19]
    e218:	cbnz	w8, e1ec <gzread@@Base+0xd4>
    e21c:	ldr	w8, [x19, #80]
    e220:	cbz	w8, e22c <gzread@@Base+0x114>
    e224:	ldr	w8, [x19, #128]
    e228:	cbz	w8, e1d8 <gzread@@Base+0xc0>
    e22c:	mov	x0, x19
    e230:	bl	e834 <gzgets@@Base+0x198>
    e234:	cmn	w0, #0x1
    e238:	b.ne	e210 <gzread@@Base+0xf8>  // b.any
    e23c:	mov	x22, xzr
    e240:	mov	x0, x22
    e244:	ldp	x20, x19, [sp, #80]
    e248:	ldp	x22, x21, [sp, #64]
    e24c:	ldp	x24, x23, [sp, #48]
    e250:	ldp	x26, x25, [sp, #32]
    e254:	ldr	x27, [sp, #16]
    e258:	ldp	x29, x30, [sp], #96
    e25c:	ret
    e260:	mov	x0, x19
    e264:	bl	e834 <gzgets@@Base+0x198>
    e268:	cmn	w0, #0x1
    e26c:	b.eq	e23c <gzread@@Base+0x124>  // b.none
    e270:	cbz	x20, e240 <gzread@@Base+0x128>
    e274:	ldr	w8, [x19]
    e278:	cmp	x20, x24
    e27c:	csinv	w27, w20, wzr, cc  // cc = lo, ul, last
    e280:	cbz	w8, e2d8 <gzread@@Base+0x1c0>
    e284:	ldr	x1, [x19, #8]
    e288:	cmp	w8, w27
    e28c:	csel	w23, w8, w27, cc  // cc = lo, ul, last
    e290:	mov	x0, x21
    e294:	mov	x2, x23
    e298:	bl	2330 <memcpy@plt>
    e29c:	ldr	x8, [x19, #8]
    e2a0:	ldr	w9, [x19]
    e2a4:	add	x8, x8, x23
    e2a8:	sub	w9, w9, w23
    e2ac:	str	x8, [x19, #8]
    e2b0:	str	w9, [x19]
    e2b4:	ldr	x9, [x19, #16]
    e2b8:	mov	w8, w23
    e2bc:	sub	x20, x20, x8
    e2c0:	add	x21, x21, x8
    e2c4:	add	x22, x22, x8
    e2c8:	add	x8, x9, x8
    e2cc:	str	x8, [x19, #16]
    e2d0:	cbnz	x20, e274 <gzread@@Base+0x15c>
    e2d4:	b	e240 <gzread@@Base+0x128>
    e2d8:	ldr	w8, [x19, #80]
    e2dc:	cbz	w8, e2e8 <gzread@@Base+0x1d0>
    e2e0:	ldr	w8, [x19, #128]
    e2e4:	cbz	w8, e36c <gzread@@Base+0x254>
    e2e8:	ldr	w8, [x19, #68]
    e2ec:	cbz	w8, e260 <gzread@@Base+0x148>
    e2f0:	ldr	w9, [x19, #40]
    e2f4:	cmp	w27, w9, lsl #1
    e2f8:	b.cc	e260 <gzread@@Base+0x148>  // b.lo, b.ul, b.last
    e2fc:	cmp	w8, #0x1
    e300:	b.ne	e33c <gzread@@Base+0x224>  // b.any
    e304:	mov	w23, wzr
    e308:	sub	w8, w27, w23
    e30c:	ldr	w0, [x19, #28]
    e310:	lsr	w9, w8, #30
    e314:	cmp	w9, #0x0
    e318:	csel	w2, w8, w25, eq  // eq = none
    e31c:	add	x1, x21, w23, uxtw
    e320:	bl	2520 <read@plt>
    e324:	cmp	w0, #0x1
    e328:	b.lt	e360 <gzread@@Base+0x248>  // b.tstop
    e32c:	add	w23, w23, w0
    e330:	cmp	w23, w27
    e334:	b.cc	e308 <gzread@@Base+0x1f0>  // b.lo, b.ul, b.last
    e338:	b	e2b4 <gzread@@Base+0x19c>
    e33c:	mov	x0, x19
    e340:	str	w27, [x19, #152]
    e344:	str	x21, [x19, #144]
    e348:	bl	ec90 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    e34c:	cmn	w0, #0x1
    e350:	b.eq	e23c <gzread@@Base+0x124>  // b.none
    e354:	ldr	w23, [x19]
    e358:	str	wzr, [x19]
    e35c:	b	e2b4 <gzread@@Base+0x19c>
    e360:	tbnz	w0, #31, e378 <gzread@@Base+0x260>
    e364:	str	w26, [x19, #80]
    e368:	b	e2b4 <gzread@@Base+0x19c>
    e36c:	mov	w8, #0x1                   	// #1
    e370:	str	w8, [x19, #84]
    e374:	b	e240 <gzread@@Base+0x128>
    e378:	bl	2590 <__errno_location@plt>
    e37c:	ldr	w0, [x0]
    e380:	bl	2460 <strerror@plt>
    e384:	mov	x2, x0
    e388:	mov	w1, #0xffffffff            	// #-1
    e38c:	mov	x0, x19
    e390:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    e394:	b	e23c <gzread@@Base+0x124>

000000000000e398 <gzfread@@ZLIB_1.2.9>:
    e398:	stp	x29, x30, [sp, #-32]!
    e39c:	str	x19, [sp, #16]
    e3a0:	mov	x29, sp
    e3a4:	cbz	x3, e414 <gzfread@@ZLIB_1.2.9+0x7c>
    e3a8:	ldr	w8, [x3, #24]
    e3ac:	mov	w9, #0x1c4f                	// #7247
    e3b0:	cmp	w8, w9
    e3b4:	b.ne	e414 <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    e3b8:	ldr	w8, [x3, #108]
    e3bc:	mov	x19, x1
    e3c0:	mov	x1, x0
    e3c4:	cbz	w8, e3d0 <gzfread@@ZLIB_1.2.9+0x38>
    e3c8:	cmn	w8, #0x5
    e3cc:	b.ne	e414 <gzfread@@ZLIB_1.2.9+0x7c>  // b.any
    e3d0:	umulh	x8, x19, x2
    e3d4:	cmp	xzr, x8
    e3d8:	cset	w8, ne  // ne = any
    e3dc:	cbz	x19, e3fc <gzfread@@ZLIB_1.2.9+0x64>
    e3e0:	cbz	w8, e3fc <gzfread@@ZLIB_1.2.9+0x64>
    e3e4:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    e3e8:	add	x2, x2, #0xd54
    e3ec:	mov	w1, #0xfffffffe            	// #-2
    e3f0:	mov	x0, x3
    e3f4:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    e3f8:	b	e414 <gzfread@@ZLIB_1.2.9+0x7c>
    e3fc:	mul	x2, x19, x2
    e400:	cbz	x2, e414 <gzfread@@ZLIB_1.2.9+0x7c>
    e404:	mov	x0, x3
    e408:	bl	e198 <gzread@@Base+0x80>
    e40c:	udiv	x0, x0, x19
    e410:	b	e418 <gzfread@@ZLIB_1.2.9+0x80>
    e414:	mov	x0, xzr
    e418:	ldr	x19, [sp, #16]
    e41c:	ldp	x29, x30, [sp], #32
    e420:	ret

000000000000e424 <gzgetc@@Base>:
    e424:	sub	sp, sp, #0x20
    e428:	stp	x29, x30, [sp, #16]
    e42c:	add	x29, sp, #0x10
    e430:	cbz	x0, e47c <gzgetc@@Base+0x58>
    e434:	ldr	w8, [x0, #24]
    e438:	mov	w9, #0x1c4f                	// #7247
    e43c:	cmp	w8, w9
    e440:	b.ne	e47c <gzgetc@@Base+0x58>  // b.any
    e444:	ldr	w8, [x0, #108]
    e448:	cbz	w8, e454 <gzgetc@@Base+0x30>
    e44c:	cmn	w8, #0x5
    e450:	b.ne	e47c <gzgetc@@Base+0x58>  // b.any
    e454:	ldr	w8, [x0]
    e458:	cbz	w8, e48c <gzgetc@@Base+0x68>
    e45c:	ldp	x10, x9, [x0, #8]
    e460:	sub	w8, w8, #0x1
    e464:	str	w8, [x0]
    e468:	add	x8, x9, #0x1
    e46c:	add	x9, x10, #0x1
    e470:	stp	x9, x8, [x0, #8]
    e474:	ldrb	w0, [x10]
    e478:	b	e480 <gzgetc@@Base+0x5c>
    e47c:	mov	w0, #0xffffffff            	// #-1
    e480:	ldp	x29, x30, [sp, #16]
    e484:	add	sp, sp, #0x20
    e488:	ret
    e48c:	sub	x1, x29, #0x4
    e490:	mov	w2, #0x1                   	// #1
    e494:	bl	e198 <gzread@@Base+0x80>
    e498:	ldurb	w8, [x29, #-4]
    e49c:	cmp	w0, #0x1
    e4a0:	csinv	w0, w8, wzr, ge  // ge = tcont
    e4a4:	b	e480 <gzgetc@@Base+0x5c>

000000000000e4a8 <gzgetc_@@ZLIB_1.2.5.2>:
    e4a8:	sub	sp, sp, #0x20
    e4ac:	stp	x29, x30, [sp, #16]
    e4b0:	add	x29, sp, #0x10
    e4b4:	cbz	x0, e500 <gzgetc_@@ZLIB_1.2.5.2+0x58>
    e4b8:	ldr	w8, [x0, #24]
    e4bc:	mov	w9, #0x1c4f                	// #7247
    e4c0:	cmp	w8, w9
    e4c4:	b.ne	e500 <gzgetc_@@ZLIB_1.2.5.2+0x58>  // b.any
    e4c8:	ldr	w8, [x0, #108]
    e4cc:	cbz	w8, e4d8 <gzgetc_@@ZLIB_1.2.5.2+0x30>
    e4d0:	cmn	w8, #0x5
    e4d4:	b.ne	e500 <gzgetc_@@ZLIB_1.2.5.2+0x58>  // b.any
    e4d8:	ldr	w8, [x0]
    e4dc:	cbz	w8, e510 <gzgetc_@@ZLIB_1.2.5.2+0x68>
    e4e0:	ldp	x10, x9, [x0, #8]
    e4e4:	sub	w8, w8, #0x1
    e4e8:	str	w8, [x0]
    e4ec:	add	x8, x9, #0x1
    e4f0:	add	x9, x10, #0x1
    e4f4:	stp	x9, x8, [x0, #8]
    e4f8:	ldrb	w0, [x10]
    e4fc:	b	e504 <gzgetc_@@ZLIB_1.2.5.2+0x5c>
    e500:	mov	w0, #0xffffffff            	// #-1
    e504:	ldp	x29, x30, [sp, #16]
    e508:	add	sp, sp, #0x20
    e50c:	ret
    e510:	sub	x1, x29, #0x4
    e514:	mov	w2, #0x1                   	// #1
    e518:	bl	e198 <gzread@@Base+0x80>
    e51c:	ldurb	w8, [x29, #-4]
    e520:	cmp	w0, #0x1
    e524:	csinv	w0, w8, wzr, ge  // ge = tcont
    e528:	b	e504 <gzgetc_@@ZLIB_1.2.5.2+0x5c>

000000000000e52c <gzungetc@@ZLIB_1.2.0.2>:
    e52c:	stp	x29, x30, [sp, #-48]!
    e530:	str	x21, [sp, #16]
    e534:	stp	x20, x19, [sp, #32]
    e538:	mov	x29, sp
    e53c:	cbz	x1, e600 <gzungetc@@ZLIB_1.2.0.2+0xd4>
    e540:	ldr	w8, [x1, #24]
    e544:	mov	w9, #0x1c4f                	// #7247
    e548:	mov	x20, x1
    e54c:	cmp	w8, w9
    e550:	b.ne	e600 <gzungetc@@ZLIB_1.2.0.2+0xd4>  // b.any
    e554:	ldr	w8, [x20, #108]
    e558:	mov	w19, w0
    e55c:	cbz	w8, e568 <gzungetc@@ZLIB_1.2.0.2+0x3c>
    e560:	cmn	w8, #0x5
    e564:	b.ne	e600 <gzungetc@@ZLIB_1.2.0.2+0xd4>  // b.any
    e568:	ldr	w8, [x20, #104]
    e56c:	cbz	w8, e57c <gzungetc@@ZLIB_1.2.0.2+0x50>
    e570:	ldr	x21, [x20, #96]
    e574:	str	wzr, [x20, #104]
    e578:	cbnz	x21, e5d8 <gzungetc@@ZLIB_1.2.0.2+0xac>
    e57c:	tbnz	w19, #31, e600 <gzungetc@@ZLIB_1.2.0.2+0xd4>
    e580:	ldr	w9, [x20]
    e584:	cbz	w9, e618 <gzungetc@@ZLIB_1.2.0.2+0xec>
    e588:	ldr	w8, [x20, #40]
    e58c:	lsl	w10, w8, #1
    e590:	cmp	w9, w10
    e594:	b.ne	e63c <gzungetc@@ZLIB_1.2.0.2+0x110>  // b.any
    e598:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    e59c:	add	x2, x2, #0xd75
    e5a0:	mov	w1, #0xfffffffd            	// #-3
    e5a4:	mov	x0, x20
    e5a8:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    e5ac:	b	e600 <gzungetc@@ZLIB_1.2.0.2+0xd4>
    e5b0:	ldp	x9, x10, [x20, #8]
    e5b4:	cmp	x21, x8
    e5b8:	csel	w11, w21, w8, lt  // lt = tstop
    e5bc:	sub	w8, w8, w11
    e5c0:	str	w8, [x20]
    e5c4:	add	x8, x9, x11
    e5c8:	add	x9, x10, x11
    e5cc:	sub	x21, x21, x11
    e5d0:	stp	x8, x9, [x20, #8]
    e5d4:	cbz	x21, e57c <gzungetc@@ZLIB_1.2.0.2+0x50>
    e5d8:	ldr	w8, [x20]
    e5dc:	cbnz	w8, e5b0 <gzungetc@@ZLIB_1.2.0.2+0x84>
    e5e0:	ldr	w8, [x20, #80]
    e5e4:	cbz	w8, e5f0 <gzungetc@@ZLIB_1.2.0.2+0xc4>
    e5e8:	ldr	w8, [x20, #128]
    e5ec:	cbz	w8, e57c <gzungetc@@ZLIB_1.2.0.2+0x50>
    e5f0:	mov	x0, x20
    e5f4:	bl	e834 <gzgets@@Base+0x198>
    e5f8:	cmn	w0, #0x1
    e5fc:	b.ne	e5d4 <gzungetc@@ZLIB_1.2.0.2+0xa8>  // b.any
    e600:	mov	w19, #0xffffffff            	// #-1
    e604:	mov	w0, w19
    e608:	ldp	x20, x19, [sp, #32]
    e60c:	ldr	x21, [sp, #16]
    e610:	ldp	x29, x30, [sp], #48
    e614:	ret
    e618:	ldr	w8, [x20, #40]
    e61c:	ldr	x9, [x20, #56]
    e620:	mov	w10, #0x1                   	// #1
    e624:	str	w10, [x20]
    e628:	lsl	w8, w8, #1
    e62c:	add	x8, x9, x8
    e630:	sub	x9, x8, #0x1
    e634:	str	x9, [x20, #8]
    e638:	b	e684 <gzungetc@@ZLIB_1.2.0.2+0x158>
    e63c:	ldr	x8, [x20, #8]
    e640:	ldr	x11, [x20, #56]
    e644:	cmp	x8, x11
    e648:	b.ne	e674 <gzungetc@@ZLIB_1.2.0.2+0x148>  // b.any
    e64c:	add	x10, x8, w10, uxtw
    e650:	add	x9, x8, x9
    e654:	mov	x8, x10
    e658:	ldrb	w10, [x9, #-1]!
    e65c:	strb	w10, [x8, #-1]!
    e660:	ldr	x10, [x20, #56]
    e664:	cmp	x9, x10
    e668:	b.hi	e658 <gzungetc@@ZLIB_1.2.0.2+0x12c>  // b.pmore
    e66c:	ldr	w9, [x20]
    e670:	str	x8, [x20, #8]
    e674:	add	w9, w9, #0x1
    e678:	sub	x10, x8, #0x1
    e67c:	str	w9, [x20]
    e680:	str	x10, [x20, #8]
    e684:	sturb	w19, [x8, #-1]
    e688:	ldr	x8, [x20, #16]
    e68c:	str	wzr, [x20, #84]
    e690:	sub	x8, x8, #0x1
    e694:	str	x8, [x20, #16]
    e698:	b	e604 <gzungetc@@ZLIB_1.2.0.2+0xd8>

000000000000e69c <gzgets@@Base>:
    e69c:	stp	x29, x30, [sp, #-80]!
    e6a0:	stp	x20, x19, [sp, #64]
    e6a4:	mov	x20, x0
    e6a8:	mov	x0, xzr
    e6ac:	str	x25, [sp, #16]
    e6b0:	stp	x24, x23, [sp, #32]
    e6b4:	stp	x22, x21, [sp, #48]
    e6b8:	mov	x29, sp
    e6bc:	cbz	x20, e81c <gzgets@@Base+0x180>
    e6c0:	mov	x19, x1
    e6c4:	cbz	x1, e81c <gzgets@@Base+0x180>
    e6c8:	mov	w21, w2
    e6cc:	cmp	w2, #0x1
    e6d0:	b.lt	e81c <gzgets@@Base+0x180>  // b.tstop
    e6d4:	ldr	w8, [x20, #24]
    e6d8:	mov	w9, #0x1c4f                	// #7247
    e6dc:	cmp	w8, w9
    e6e0:	b.ne	e818 <gzgets@@Base+0x17c>  // b.any
    e6e4:	ldr	w8, [x20, #108]
    e6e8:	cbz	w8, e6f4 <gzgets@@Base+0x58>
    e6ec:	cmn	w8, #0x5
    e6f0:	b.ne	e818 <gzgets@@Base+0x17c>  // b.any
    e6f4:	ldr	w8, [x20, #104]
    e6f8:	cbz	w8, e708 <gzgets@@Base+0x6c>
    e6fc:	ldr	x22, [x20, #96]
    e700:	str	wzr, [x20, #104]
    e704:	cbnz	x22, e7d0 <gzgets@@Base+0x134>
    e708:	subs	w25, w21, #0x1
    e70c:	b.eq	e818 <gzgets@@Base+0x17c>  // b.none
    e710:	ldr	w8, [x20]
    e714:	mov	x21, x19
    e718:	cbnz	w8, e734 <gzgets@@Base+0x98>
    e71c:	mov	x0, x20
    e720:	bl	e834 <gzgets@@Base+0x198>
    e724:	cmn	w0, #0x1
    e728:	b.eq	e818 <gzgets@@Base+0x17c>  // b.none
    e72c:	ldr	w8, [x20]
    e730:	cbz	w8, e7fc <gzgets@@Base+0x160>
    e734:	ldr	x23, [x20, #8]
    e738:	cmp	w8, w25
    e73c:	csel	w22, w25, w8, hi  // hi = pmore
    e740:	mov	w1, #0xa                   	// #10
    e744:	mov	x0, x23
    e748:	mov	x2, x22
    e74c:	bl	2530 <memchr@plt>
    e750:	mov	x24, x0
    e754:	sub	w8, w24, w23
    e758:	cmp	x0, #0x0
    e75c:	csinc	w22, w22, w8, eq  // eq = none
    e760:	mov	x0, x21
    e764:	mov	x1, x23
    e768:	mov	x2, x22
    e76c:	bl	2330 <memcpy@plt>
    e770:	ldr	w8, [x20]
    e774:	ldp	x9, x10, [x20, #8]
    e778:	add	x21, x21, x22
    e77c:	sub	w8, w8, w22
    e780:	add	x9, x9, x22
    e784:	add	x10, x10, x22
    e788:	str	w8, [x20]
    e78c:	stp	x9, x10, [x20, #8]
    e790:	cbnz	x24, e79c <gzgets@@Base+0x100>
    e794:	sub	w25, w25, w22
    e798:	cbnz	w25, e718 <gzgets@@Base+0x7c>
    e79c:	cmp	x21, x19
    e7a0:	b.ne	e80c <gzgets@@Base+0x170>  // b.any
    e7a4:	b	e818 <gzgets@@Base+0x17c>
    e7a8:	ldp	x9, x10, [x20, #8]
    e7ac:	cmp	x22, x8
    e7b0:	csel	w11, w22, w8, lt  // lt = tstop
    e7b4:	sub	w8, w8, w11
    e7b8:	str	w8, [x20]
    e7bc:	add	x8, x9, x11
    e7c0:	add	x9, x10, x11
    e7c4:	sub	x22, x22, x11
    e7c8:	stp	x8, x9, [x20, #8]
    e7cc:	cbz	x22, e708 <gzgets@@Base+0x6c>
    e7d0:	ldr	w8, [x20]
    e7d4:	cbnz	w8, e7a8 <gzgets@@Base+0x10c>
    e7d8:	ldr	w8, [x20, #80]
    e7dc:	cbz	w8, e7e8 <gzgets@@Base+0x14c>
    e7e0:	ldr	w8, [x20, #128]
    e7e4:	cbz	w8, e708 <gzgets@@Base+0x6c>
    e7e8:	mov	x0, x20
    e7ec:	bl	e834 <gzgets@@Base+0x198>
    e7f0:	cmn	w0, #0x1
    e7f4:	b.ne	e7cc <gzgets@@Base+0x130>  // b.any
    e7f8:	b	e818 <gzgets@@Base+0x17c>
    e7fc:	mov	w8, #0x1                   	// #1
    e800:	str	w8, [x20, #84]
    e804:	cmp	x21, x19
    e808:	b.eq	e818 <gzgets@@Base+0x17c>  // b.none
    e80c:	mov	x0, x19
    e810:	strb	wzr, [x21]
    e814:	b	e81c <gzgets@@Base+0x180>
    e818:	mov	x0, xzr
    e81c:	ldp	x20, x19, [sp, #64]
    e820:	ldp	x22, x21, [sp, #48]
    e824:	ldp	x24, x23, [sp, #32]
    e828:	ldr	x25, [sp, #16]
    e82c:	ldp	x29, x30, [sp], #80
    e830:	ret
    e834:	stp	x29, x30, [sp, #-48]!
    e838:	stp	x20, x19, [sp, #32]
    e83c:	mov	x19, x0
    e840:	stp	x22, x21, [sp, #16]
    e844:	mov	x29, sp
    e848:	ldr	w8, [x19, #68]
    e84c:	cbz	w8, e864 <gzgets@@Base+0x1c8>
    e850:	cmp	w8, #0x2
    e854:	b.eq	e880 <gzgets@@Base+0x1e4>  // b.none
    e858:	cmp	w8, #0x1
    e85c:	b.ne	e8a4 <gzgets@@Base+0x208>  // b.any
    e860:	b	e8c4 <gzgets@@Base+0x228>
    e864:	mov	x0, x19
    e868:	bl	e9bc <gzdirect@@ZLIB_1.2.2.3+0x4c>
    e86c:	cmn	w0, #0x1
    e870:	b.eq	e918 <gzgets@@Base+0x27c>  // b.none
    e874:	ldr	w8, [x19, #68]
    e878:	cbnz	w8, e8a4 <gzgets@@Base+0x208>
    e87c:	b	e8bc <gzgets@@Base+0x220>
    e880:	ldr	w8, [x19, #40]
    e884:	ldr	x9, [x19, #56]
    e888:	mov	x0, x19
    e88c:	lsl	w8, w8, #1
    e890:	str	w8, [x19, #152]
    e894:	str	x9, [x19, #144]
    e898:	bl	ec90 <gzclose_r@@ZLIB_1.2.3.5+0xa0>
    e89c:	cmn	w0, #0x1
    e8a0:	b.eq	e918 <gzgets@@Base+0x27c>  // b.none
    e8a4:	ldr	w8, [x19]
    e8a8:	cbnz	w8, e8bc <gzgets@@Base+0x220>
    e8ac:	ldr	w8, [x19, #80]
    e8b0:	cbz	w8, e848 <gzgets@@Base+0x1ac>
    e8b4:	ldr	w8, [x19, #128]
    e8b8:	cbnz	w8, e848 <gzgets@@Base+0x1ac>
    e8bc:	mov	w20, wzr
    e8c0:	b	e95c <gzgets@@Base+0x2c0>
    e8c4:	ldr	w9, [x19, #40]
    e8c8:	ldr	x20, [x19, #56]
    e8cc:	mov	w8, wzr
    e8d0:	mov	w22, #0x40000000            	// #1073741824
    e8d4:	lsl	w21, w9, #1
    e8d8:	str	wzr, [x19]
    e8dc:	sub	w9, w21, w8
    e8e0:	ldr	w0, [x19, #28]
    e8e4:	lsr	w10, w9, #30
    e8e8:	cmp	w10, #0x0
    e8ec:	csel	w2, w9, w22, eq  // eq = none
    e8f0:	add	x1, x20, w8, uxtw
    e8f4:	bl	2520 <read@plt>
    e8f8:	cmp	w0, #0x1
    e8fc:	b.lt	e920 <gzgets@@Base+0x284>  // b.tstop
    e900:	ldr	w8, [x19]
    e904:	add	w8, w8, w0
    e908:	cmp	w8, w21
    e90c:	str	w8, [x19]
    e910:	b.cc	e8dc <gzgets@@Base+0x240>  // b.lo, b.ul, b.last
    e914:	b	e92c <gzgets@@Base+0x290>
    e918:	mov	w20, #0xffffffff            	// #-1
    e91c:	b	e95c <gzgets@@Base+0x2c0>
    e920:	tbnz	w0, #31, e93c <gzgets@@Base+0x2a0>
    e924:	mov	w8, #0x1                   	// #1
    e928:	str	w8, [x19, #80]
    e92c:	ldr	x8, [x19, #56]
    e930:	mov	w20, wzr
    e934:	str	x8, [x19, #8]
    e938:	b	e95c <gzgets@@Base+0x2c0>
    e93c:	bl	2590 <__errno_location@plt>
    e940:	ldr	w0, [x0]
    e944:	bl	2460 <strerror@plt>
    e948:	mov	x2, x0
    e94c:	mov	w1, #0xffffffff            	// #-1
    e950:	mov	x0, x19
    e954:	mov	w20, #0xffffffff            	// #-1
    e958:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    e95c:	mov	w0, w20
    e960:	ldp	x20, x19, [sp, #32]
    e964:	ldp	x22, x21, [sp, #16]
    e968:	ldp	x29, x30, [sp], #48
    e96c:	ret

000000000000e970 <gzdirect@@ZLIB_1.2.2.3>:
    e970:	cbz	x0, e9b8 <gzdirect@@ZLIB_1.2.2.3+0x48>
    e974:	stp	x29, x30, [sp, #-32]!
    e978:	ldr	w8, [x0, #24]
    e97c:	mov	w9, #0x1c4f                	// #7247
    e980:	str	x19, [sp, #16]
    e984:	mov	x19, x0
    e988:	cmp	w8, w9
    e98c:	mov	x29, sp
    e990:	b.ne	e9ac <gzdirect@@ZLIB_1.2.2.3+0x3c>  // b.any
    e994:	ldr	w8, [x19, #68]
    e998:	cbnz	w8, e9ac <gzdirect@@ZLIB_1.2.2.3+0x3c>
    e99c:	ldr	w8, [x19]
    e9a0:	cbnz	w8, e9ac <gzdirect@@ZLIB_1.2.2.3+0x3c>
    e9a4:	mov	x0, x19
    e9a8:	bl	e9bc <gzdirect@@ZLIB_1.2.2.3+0x4c>
    e9ac:	ldr	w0, [x19, #64]
    e9b0:	ldr	x19, [sp, #16]
    e9b4:	ldp	x29, x30, [sp], #32
    e9b8:	ret
    e9bc:	stp	x29, x30, [sp, #-64]!
    e9c0:	stp	x24, x23, [sp, #16]
    e9c4:	stp	x22, x21, [sp, #32]
    e9c8:	stp	x20, x19, [sp, #48]
    e9cc:	ldr	w8, [x0, #40]
    e9d0:	mov	x19, x0
    e9d4:	add	x20, x0, #0x78
    e9d8:	mov	x29, sp
    e9dc:	cbz	w8, ea20 <gzdirect@@ZLIB_1.2.2.3+0xb0>
    e9e0:	ldr	w21, [x19, #128]
    e9e4:	cmp	w21, #0x1
    e9e8:	b.hi	eb34 <gzdirect@@ZLIB_1.2.2.3+0x1c4>  // b.pmore
    e9ec:	ldr	w8, [x19, #108]
    e9f0:	cbz	w8, e9fc <gzdirect@@ZLIB_1.2.2.3+0x8c>
    e9f4:	cmn	w8, #0x5
    e9f8:	b.ne	eab0 <gzdirect@@ZLIB_1.2.2.3+0x140>  // b.any
    e9fc:	ldr	w8, [x19, #80]
    ea00:	cbnz	w8, eb28 <gzdirect@@ZLIB_1.2.2.3+0x1b8>
    ea04:	cbz	w21, eab8 <gzdirect@@ZLIB_1.2.2.3+0x148>
    ea08:	ldr	x8, [x19, #120]
    ea0c:	ldr	x9, [x19, #48]
    ea10:	ldrb	w8, [x8]
    ea14:	strb	w8, [x9]
    ea18:	ldr	w8, [x19, #128]
    ea1c:	b	eabc <gzdirect@@ZLIB_1.2.2.3+0x14c>
    ea20:	ldr	w21, [x19, #44]
    ea24:	mov	x0, x21
    ea28:	bl	23d0 <malloc@plt>
    ea2c:	mov	x22, x0
    ea30:	str	x0, [x19, #48]
    ea34:	lsl	w0, w21, #1
    ea38:	bl	23d0 <malloc@plt>
    ea3c:	str	x0, [x19, #56]
    ea40:	cbz	x22, ea90 <gzdirect@@ZLIB_1.2.2.3+0x120>
    ea44:	cbz	x0, ea90 <gzdirect@@ZLIB_1.2.2.3+0x120>
    ea48:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    ea4c:	add	x2, x2, #0xcb1
    ea50:	mov	w1, #0x1f                  	// #31
    ea54:	mov	w3, #0x70                  	// #112
    ea58:	mov	x0, x20
    ea5c:	str	w21, [x19, #40]
    ea60:	str	wzr, [x19, #128]
    ea64:	str	xzr, [x19, #120]
    ea68:	stp	xzr, xzr, [x19, #192]
    ea6c:	str	xzr, [x19, #184]
    ea70:	bl	2540 <inflateInit2_@plt>
    ea74:	cbz	w0, e9e0 <gzdirect@@ZLIB_1.2.2.3+0x70>
    ea78:	ldr	x0, [x19, #56]
    ea7c:	bl	24d0 <free@plt>
    ea80:	ldr	x0, [x19, #48]
    ea84:	bl	24d0 <free@plt>
    ea88:	str	wzr, [x19, #40]
    ea8c:	b	ea9c <gzdirect@@ZLIB_1.2.2.3+0x12c>
    ea90:	bl	24d0 <free@plt>
    ea94:	ldr	x0, [x19, #48]
    ea98:	bl	24d0 <free@plt>
    ea9c:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    eaa0:	add	x2, x2, #0xd16
    eaa4:	mov	w1, #0xfffffffc            	// #-4
    eaa8:	mov	x0, x19
    eaac:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    eab0:	mov	w21, #0xffffffff            	// #-1
    eab4:	b	ebb4 <gzdirect@@ZLIB_1.2.2.3+0x244>
    eab8:	mov	w8, wzr
    eabc:	ldr	x9, [x19, #48]
    eac0:	ldr	w10, [x19, #40]
    eac4:	mov	w21, wzr
    eac8:	mov	w24, #0x40000000            	// #1073741824
    eacc:	add	x22, x9, w8, uxtw
    ead0:	sub	w23, w10, w8
    ead4:	sub	w8, w23, w21
    ead8:	ldr	w0, [x19, #28]
    eadc:	lsr	w9, w8, #30
    eae0:	cmp	w9, #0x0
    eae4:	csel	w2, w8, w24, eq  // eq = none
    eae8:	add	x1, x22, w21, uxtw
    eaec:	bl	2520 <read@plt>
    eaf0:	cmp	w0, #0x1
    eaf4:	b.lt	eb08 <gzdirect@@ZLIB_1.2.2.3+0x198>  // b.tstop
    eaf8:	add	w21, w21, w0
    eafc:	cmp	w21, w23
    eb00:	b.cc	ead4 <gzdirect@@ZLIB_1.2.2.3+0x164>  // b.lo, b.ul, b.last
    eb04:	b	eb14 <gzdirect@@ZLIB_1.2.2.3+0x1a4>
    eb08:	tbnz	w0, #31, ebcc <gzdirect@@ZLIB_1.2.2.3+0x25c>
    eb0c:	mov	w8, #0x1                   	// #1
    eb10:	str	w8, [x19, #80]
    eb14:	ldr	w8, [x19, #128]
    eb18:	ldr	x9, [x19, #48]
    eb1c:	add	w21, w8, w21
    eb20:	str	w21, [x19, #128]
    eb24:	str	x9, [x19, #120]
    eb28:	cbz	w21, ebb4 <gzdirect@@ZLIB_1.2.2.3+0x244>
    eb2c:	cmp	w21, #0x1
    eb30:	b.eq	eb68 <gzdirect@@ZLIB_1.2.2.3+0x1f8>  // b.none
    eb34:	ldr	x8, [x20]
    eb38:	ldrb	w9, [x8]
    eb3c:	cmp	w9, #0x1f
    eb40:	b.ne	eb68 <gzdirect@@ZLIB_1.2.2.3+0x1f8>  // b.any
    eb44:	ldrb	w8, [x8, #1]
    eb48:	cmp	w8, #0x8b
    eb4c:	b.ne	eb68 <gzdirect@@ZLIB_1.2.2.3+0x1f8>  // b.any
    eb50:	mov	x0, x20
    eb54:	bl	2550 <inflateReset@plt>
    eb58:	adrp	x8, 11000 <gzclose_w@@ZLIB_1.2.3.5+0x15d0>
    eb5c:	ldr	d0, [x8, #3232]
    eb60:	mov	w21, wzr
    eb64:	b	eb98 <gzdirect@@ZLIB_1.2.2.3+0x228>
    eb68:	ldr	w8, [x19, #64]
    eb6c:	cbz	w8, eba0 <gzdirect@@ZLIB_1.2.2.3+0x230>
    eb70:	ldr	x0, [x19, #56]
    eb74:	ldr	x1, [x19, #120]
    eb78:	mov	w2, w21
    eb7c:	str	x0, [x19, #8]
    eb80:	bl	2330 <memcpy@plt>
    eb84:	ldr	w8, [x19, #128]
    eb88:	mov	w21, wzr
    eb8c:	movi	v0.2s, #0x1
    eb90:	str	wzr, [x19, #128]
    eb94:	str	w8, [x19]
    eb98:	str	d0, [x19, #64]
    eb9c:	b	ebb4 <gzdirect@@ZLIB_1.2.2.3+0x244>
    eba0:	mov	w8, #0x1                   	// #1
    eba4:	mov	w21, wzr
    eba8:	str	wzr, [x19, #128]
    ebac:	str	w8, [x19, #80]
    ebb0:	str	wzr, [x19]
    ebb4:	mov	w0, w21
    ebb8:	ldp	x20, x19, [sp, #48]
    ebbc:	ldp	x22, x21, [sp, #32]
    ebc0:	ldp	x24, x23, [sp, #16]
    ebc4:	ldp	x29, x30, [sp], #64
    ebc8:	ret
    ebcc:	bl	2590 <__errno_location@plt>
    ebd0:	ldr	w0, [x0]
    ebd4:	bl	2460 <strerror@plt>
    ebd8:	mov	x2, x0
    ebdc:	mov	w1, #0xffffffff            	// #-1
    ebe0:	mov	x0, x19
    ebe4:	mov	w21, #0xffffffff            	// #-1
    ebe8:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    ebec:	b	ebb4 <gzdirect@@ZLIB_1.2.2.3+0x244>

000000000000ebf0 <gzclose_r@@ZLIB_1.2.3.5>:
    ebf0:	stp	x29, x30, [sp, #-48]!
    ebf4:	str	x21, [sp, #16]
    ebf8:	stp	x20, x19, [sp, #32]
    ebfc:	mov	x29, sp
    ec00:	cbz	x0, ec7c <gzclose_r@@ZLIB_1.2.3.5+0x8c>
    ec04:	ldr	w8, [x0, #24]
    ec08:	mov	w9, #0x1c4f                	// #7247
    ec0c:	mov	x19, x0
    ec10:	cmp	w8, w9
    ec14:	b.ne	ec7c <gzclose_r@@ZLIB_1.2.3.5+0x8c>  // b.any
    ec18:	ldr	w8, [x19, #40]
    ec1c:	cbz	w8, ec38 <gzclose_r@@ZLIB_1.2.3.5+0x48>
    ec20:	add	x0, x19, #0x78
    ec24:	bl	24b0 <inflateEnd@plt>
    ec28:	ldr	x0, [x19, #56]
    ec2c:	bl	24d0 <free@plt>
    ec30:	ldr	x0, [x19, #48]
    ec34:	bl	24d0 <free@plt>
    ec38:	ldr	w8, [x19, #108]
    ec3c:	mov	x0, x19
    ec40:	mov	w1, wzr
    ec44:	mov	x2, xzr
    ec48:	cmn	w8, #0x5
    ec4c:	csel	w21, w8, wzr, eq  // eq = none
    ec50:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    ec54:	ldr	x0, [x19, #32]
    ec58:	bl	24d0 <free@plt>
    ec5c:	ldr	w0, [x19, #28]
    ec60:	bl	2470 <close@plt>
    ec64:	mov	w20, w0
    ec68:	mov	x0, x19
    ec6c:	bl	24d0 <free@plt>
    ec70:	cmp	w20, #0x0
    ec74:	csinv	w0, w21, wzr, eq  // eq = none
    ec78:	b	ec80 <gzclose_r@@ZLIB_1.2.3.5+0x90>
    ec7c:	mov	w0, #0xfffffffe            	// #-2
    ec80:	ldp	x20, x19, [sp, #32]
    ec84:	ldr	x21, [sp, #16]
    ec88:	ldp	x29, x30, [sp], #48
    ec8c:	ret
    ec90:	stp	x29, x30, [sp, #-96]!
    ec94:	stp	x28, x27, [sp, #16]
    ec98:	stp	x26, x25, [sp, #32]
    ec9c:	stp	x24, x23, [sp, #48]
    eca0:	stp	x22, x21, [sp, #64]
    eca4:	stp	x20, x19, [sp, #80]
    eca8:	ldr	w22, [x0, #152]
    ecac:	adrp	x25, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    ecb0:	mov	x19, x0
    ecb4:	mov	w20, wzr
    ecb8:	add	x21, x0, #0x78
    ecbc:	mov	w23, #0x40000000            	// #1073741824
    ecc0:	mov	w24, #0x1                   	// #1
    ecc4:	add	x25, x25, #0xd2e
    ecc8:	mov	x29, sp
    eccc:	ldr	w8, [x19, #128]
    ecd0:	cbnz	w8, ed4c <gzclose_r@@ZLIB_1.2.3.5+0x15c>
    ecd4:	ldr	w8, [x19, #108]
    ecd8:	cbz	w8, ece4 <gzclose_r@@ZLIB_1.2.3.5+0xf4>
    ecdc:	cmn	w8, #0x5
    ece0:	b.ne	ee0c <gzclose_r@@ZLIB_1.2.3.5+0x21c>  // b.any
    ece4:	ldr	w8, [x19, #80]
    ece8:	cbnz	w8, ed8c <gzclose_r@@ZLIB_1.2.3.5+0x19c>
    ecec:	ldr	x27, [x19, #48]
    ecf0:	ldr	w28, [x19, #40]
    ecf4:	mov	w26, wzr
    ecf8:	sub	w8, w28, w26
    ecfc:	ldr	w0, [x19, #28]
    ed00:	lsr	w9, w8, #30
    ed04:	cmp	w9, #0x0
    ed08:	csel	w2, w8, w23, eq  // eq = none
    ed0c:	add	x1, x27, w26, uxtw
    ed10:	bl	2520 <read@plt>
    ed14:	cmp	w0, #0x1
    ed18:	b.lt	ed2c <gzclose_r@@ZLIB_1.2.3.5+0x13c>  // b.tstop
    ed1c:	add	w26, w26, w0
    ed20:	cmp	w26, w28
    ed24:	b.cc	ecf8 <gzclose_r@@ZLIB_1.2.3.5+0x108>  // b.lo, b.ul, b.last
    ed28:	b	ed34 <gzclose_r@@ZLIB_1.2.3.5+0x144>
    ed2c:	tbnz	w0, #31, ee30 <gzclose_r@@ZLIB_1.2.3.5+0x240>
    ed30:	str	w24, [x19, #80]
    ed34:	ldr	w8, [x19, #128]
    ed38:	ldr	x9, [x19, #48]
    ed3c:	adds	w8, w8, w26
    ed40:	str	w8, [x19, #128]
    ed44:	str	x9, [x19, #120]
    ed48:	b.eq	ed8c <gzclose_r@@ZLIB_1.2.3.5+0x19c>  // b.none
    ed4c:	mov	x0, x21
    ed50:	mov	w1, wzr
    ed54:	bl	2380 <inflate@plt>
    ed58:	add	w8, w0, #0x4
    ed5c:	mov	w20, w0
    ed60:	cmp	w8, #0x6
    ed64:	b.hi	ed78 <gzclose_r@@ZLIB_1.2.3.5+0x188>  // b.pmore
    ed68:	adr	x9, ed78 <gzclose_r@@ZLIB_1.2.3.5+0x188>
    ed6c:	ldrb	w10, [x25, x8]
    ed70:	add	x9, x9, x10, lsl #2
    ed74:	br	x9
    ed78:	ldr	w8, [x19, #152]
    ed7c:	cmp	w20, #0x1
    ed80:	b.eq	eda4 <gzclose_r@@ZLIB_1.2.3.5+0x1b4>  // b.none
    ed84:	cbnz	w8, eccc <gzclose_r@@ZLIB_1.2.3.5+0xdc>
    ed88:	b	eda4 <gzclose_r@@ZLIB_1.2.3.5+0x1b4>
    ed8c:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    ed90:	add	x2, x2, #0xd94
    ed94:	mov	w1, #0xfffffffb            	// #-5
    ed98:	mov	x0, x19
    ed9c:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    eda0:	ldr	w8, [x19, #152]
    eda4:	ldr	x9, [x19, #144]
    eda8:	sub	w8, w22, w8
    edac:	str	w8, [x19]
    edb0:	cmp	w20, #0x1
    edb4:	sub	x8, x9, x8
    edb8:	mov	w20, wzr
    edbc:	str	x8, [x19, #8]
    edc0:	b.ne	ee10 <gzclose_r@@ZLIB_1.2.3.5+0x220>  // b.any
    edc4:	str	wzr, [x19, #68]
    edc8:	b	ee10 <gzclose_r@@ZLIB_1.2.3.5+0x220>
    edcc:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    edd0:	add	x2, x2, #0xdab
    edd4:	mov	w1, #0xfffffffe            	// #-2
    edd8:	b	ee04 <gzclose_r@@ZLIB_1.2.3.5+0x214>
    eddc:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    ede0:	add	x2, x2, #0xd16
    ede4:	mov	w1, #0xfffffffc            	// #-4
    ede8:	b	ee04 <gzclose_r@@ZLIB_1.2.3.5+0x214>
    edec:	ldr	x8, [x19, #168]
    edf0:	adrp	x9, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    edf4:	add	x9, x9, #0xdd2
    edf8:	mov	w1, #0xfffffffd            	// #-3
    edfc:	cmp	x8, #0x0
    ee00:	csel	x2, x9, x8, eq  // eq = none
    ee04:	mov	x0, x19
    ee08:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    ee0c:	mov	w20, #0xffffffff            	// #-1
    ee10:	mov	w0, w20
    ee14:	ldp	x20, x19, [sp, #80]
    ee18:	ldp	x22, x21, [sp, #64]
    ee1c:	ldp	x24, x23, [sp, #48]
    ee20:	ldp	x26, x25, [sp, #32]
    ee24:	ldp	x28, x27, [sp, #16]
    ee28:	ldp	x29, x30, [sp], #96
    ee2c:	ret
    ee30:	bl	2590 <__errno_location@plt>
    ee34:	ldr	w0, [x0]
    ee38:	bl	2460 <strerror@plt>
    ee3c:	mov	x2, x0
    ee40:	mov	w1, #0xffffffff            	// #-1
    ee44:	mov	x0, x19
    ee48:	mov	w20, #0xffffffff            	// #-1
    ee4c:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    ee50:	b	ee10 <gzclose_r@@ZLIB_1.2.3.5+0x220>

000000000000ee54 <gzwrite@@Base>:
    ee54:	stp	x29, x30, [sp, #-16]!
    ee58:	mov	x29, sp
    ee5c:	cbz	x0, ee7c <gzwrite@@Base+0x28>
    ee60:	ldr	w8, [x0, #24]
    ee64:	mov	w9, #0x79b1                	// #31153
    ee68:	cmp	w8, w9
    ee6c:	b.ne	ee78 <gzwrite@@Base+0x24>  // b.any
    ee70:	ldr	w8, [x0, #108]
    ee74:	cbz	w8, ee84 <gzwrite@@Base+0x30>
    ee78:	mov	w0, wzr
    ee7c:	ldp	x29, x30, [sp], #16
    ee80:	ret
    ee84:	tbnz	w2, #31, ee98 <gzwrite@@Base+0x44>
    ee88:	mov	w2, w2
    ee8c:	bl	eeac <gzwrite@@Base+0x58>
    ee90:	ldp	x29, x30, [sp], #16
    ee94:	ret
    ee98:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    ee9c:	add	x2, x2, #0xde8
    eea0:	mov	w1, #0xfffffffd            	// #-3
    eea4:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    eea8:	b	ee78 <gzwrite@@Base+0x24>
    eeac:	stp	x29, x30, [sp, #-64]!
    eeb0:	stp	x20, x19, [sp, #48]
    eeb4:	mov	x19, x2
    eeb8:	stp	x24, x23, [sp, #16]
    eebc:	stp	x22, x21, [sp, #32]
    eec0:	mov	x29, sp
    eec4:	cbz	x2, f080 <gzwrite@@Base+0x22c>
    eec8:	ldr	w8, [x0, #40]
    eecc:	mov	x21, x1
    eed0:	mov	x20, x0
    eed4:	cbnz	w8, eee8 <gzwrite@@Base+0x94>
    eed8:	mov	x0, x20
    eedc:	bl	f4d8 <gzvprintf@@ZLIB_1.2.7.1+0x1e0>
    eee0:	cmn	w0, #0x1
    eee4:	b.eq	f07c <gzwrite@@Base+0x228>  // b.none
    eee8:	ldr	w8, [x20, #104]
    eeec:	cbz	w8, ef80 <gzwrite@@Base+0x12c>
    eef0:	ldr	w8, [x20, #128]
    eef4:	ldr	x23, [x20, #96]
    eef8:	str	wzr, [x20, #104]
    eefc:	cbz	w8, ef14 <gzwrite@@Base+0xc0>
    ef00:	mov	x0, x20
    ef04:	mov	w1, wzr
    ef08:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    ef0c:	cmn	w0, #0x1
    ef10:	b.eq	f07c <gzwrite@@Base+0x228>  // b.none
    ef14:	cbz	x23, ef80 <gzwrite@@Base+0x12c>
    ef18:	mov	w8, wzr
    ef1c:	ldr	w9, [x20, #40]
    ef20:	cmp	x23, x9
    ef24:	csel	w24, w23, w9, lt  // lt = tstop
    ef28:	tbz	w8, #0, ef34 <gzwrite@@Base+0xe0>
    ef2c:	mov	w22, w24
    ef30:	b	ef48 <gzwrite@@Base+0xf4>
    ef34:	ldr	x0, [x20, #48]
    ef38:	mov	w22, w24
    ef3c:	mov	w1, wzr
    ef40:	mov	x2, x22
    ef44:	bl	2410 <memset@plt>
    ef48:	ldr	x8, [x20, #48]
    ef4c:	ldr	x9, [x20, #16]
    ef50:	mov	x0, x20
    ef54:	mov	w1, wzr
    ef58:	str	x8, [x20, #120]
    ef5c:	add	x8, x9, x22
    ef60:	str	w24, [x20, #128]
    ef64:	str	x8, [x20, #16]
    ef68:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    ef6c:	cmn	w0, #0x1
    ef70:	b.eq	f07c <gzwrite@@Base+0x228>  // b.none
    ef74:	sub	x23, x23, x22
    ef78:	mov	w8, #0x1                   	// #1
    ef7c:	cbnz	x23, ef1c <gzwrite@@Base+0xc8>
    ef80:	ldr	w8, [x20, #40]
    ef84:	cmp	x8, x19
    ef88:	b.ls	f014 <gzwrite@@Base+0x1c0>  // b.plast
    ef8c:	mov	x23, x19
    ef90:	ldr	w8, [x20, #128]
    ef94:	cbz	w8, efa4 <gzwrite@@Base+0x150>
    ef98:	ldr	x10, [x20, #120]
    ef9c:	ldr	x9, [x20, #48]
    efa0:	b	efb0 <gzwrite@@Base+0x15c>
    efa4:	ldr	x9, [x20, #48]
    efa8:	mov	x10, x9
    efac:	str	x9, [x20, #120]
    efb0:	ldr	w11, [x20, #40]
    efb4:	add	x8, x10, x8
    efb8:	sub	x8, x8, x9
    efbc:	add	x0, x9, w8, uxtw
    efc0:	sub	w10, w11, w8
    efc4:	cmp	x23, x10
    efc8:	csel	w22, w23, w10, cc  // cc = lo, ul, last
    efcc:	mov	x1, x21
    efd0:	mov	x2, x22
    efd4:	bl	2330 <memcpy@plt>
    efd8:	ldr	w8, [x20, #128]
    efdc:	ldr	x9, [x20, #16]
    efe0:	subs	x23, x23, x22
    efe4:	add	w8, w22, w8
    efe8:	add	x9, x9, x22
    efec:	str	w8, [x20, #128]
    eff0:	str	x9, [x20, #16]
    eff4:	b.eq	f080 <gzwrite@@Base+0x22c>  // b.none
    eff8:	mov	x0, x20
    effc:	mov	w1, wzr
    f000:	add	x21, x21, x22
    f004:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f008:	cmn	w0, #0x1
    f00c:	b.ne	ef90 <gzwrite@@Base+0x13c>  // b.any
    f010:	b	f07c <gzwrite@@Base+0x228>
    f014:	ldr	w8, [x20, #128]
    f018:	cbz	w8, f030 <gzwrite@@Base+0x1dc>
    f01c:	mov	x0, x20
    f020:	mov	w1, wzr
    f024:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f028:	cmn	w0, #0x1
    f02c:	b.eq	f07c <gzwrite@@Base+0x228>  // b.none
    f030:	str	x21, [x20, #120]
    f034:	mov	w21, #0xffffffff            	// #-1
    f038:	mov	x22, x19
    f03c:	ldr	x8, [x20, #16]
    f040:	cmp	x22, x21
    f044:	csel	x23, x22, x21, cc  // cc = lo, ul, last
    f048:	mov	x0, x20
    f04c:	add	x8, x8, x23
    f050:	mov	w1, wzr
    f054:	str	w23, [x20, #128]
    f058:	str	x8, [x20, #16]
    f05c:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f060:	cmn	w0, #0x1
    f064:	csel	x8, xzr, x23, eq  // eq = none
    f068:	cmn	w0, #0x1
    f06c:	b.eq	f07c <gzwrite@@Base+0x228>  // b.none
    f070:	sub	x22, x22, x8
    f074:	cbnz	x22, f03c <gzwrite@@Base+0x1e8>
    f078:	b	f080 <gzwrite@@Base+0x22c>
    f07c:	mov	x19, xzr
    f080:	mov	x0, x19
    f084:	ldp	x20, x19, [sp, #48]
    f088:	ldp	x22, x21, [sp, #32]
    f08c:	ldp	x24, x23, [sp, #16]
    f090:	ldp	x29, x30, [sp], #64
    f094:	ret

000000000000f098 <gzfwrite@@ZLIB_1.2.9>:
    f098:	stp	x29, x30, [sp, #-32]!
    f09c:	str	x19, [sp, #16]
    f0a0:	mov	x29, sp
    f0a4:	cbz	x3, f0c0 <gzfwrite@@ZLIB_1.2.9+0x28>
    f0a8:	ldr	w8, [x3, #24]
    f0ac:	mov	w9, #0x79b1                	// #31153
    f0b0:	cmp	w8, w9
    f0b4:	b.ne	f0c0 <gzfwrite@@ZLIB_1.2.9+0x28>  // b.any
    f0b8:	ldr	w8, [x3, #108]
    f0bc:	cbz	w8, f0d0 <gzfwrite@@ZLIB_1.2.9+0x38>
    f0c0:	mov	x0, xzr
    f0c4:	ldr	x19, [sp, #16]
    f0c8:	ldp	x29, x30, [sp], #32
    f0cc:	ret
    f0d0:	mov	x19, x1
    f0d4:	umulh	x8, x19, x2
    f0d8:	cmp	xzr, x8
    f0dc:	mov	x1, x0
    f0e0:	cset	w8, ne  // ne = any
    f0e4:	cbz	x19, f104 <gzfwrite@@ZLIB_1.2.9+0x6c>
    f0e8:	cbz	w8, f104 <gzfwrite@@ZLIB_1.2.9+0x6c>
    f0ec:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    f0f0:	add	x2, x2, #0xd54
    f0f4:	mov	w1, #0xfffffffe            	// #-2
    f0f8:	mov	x0, x3
    f0fc:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    f100:	b	f0c0 <gzfwrite@@ZLIB_1.2.9+0x28>
    f104:	mul	x2, x19, x2
    f108:	cbz	x2, f0c0 <gzfwrite@@ZLIB_1.2.9+0x28>
    f10c:	mov	x0, x3
    f110:	bl	eeac <gzwrite@@Base+0x58>
    f114:	udiv	x0, x0, x19
    f118:	b	f0c4 <gzfwrite@@ZLIB_1.2.9+0x2c>

000000000000f11c <gzputc@@Base>:
    f11c:	stp	x29, x30, [sp, #-64]!
    f120:	str	x23, [sp, #16]
    f124:	stp	x22, x21, [sp, #32]
    f128:	stp	x20, x19, [sp, #48]
    f12c:	mov	x29, sp
    f130:	cbz	x0, f150 <gzputc@@Base+0x34>
    f134:	ldr	w8, [x0, #24]
    f138:	mov	w9, #0x79b1                	// #31153
    f13c:	mov	x20, x0
    f140:	cmp	w8, w9
    f144:	b.ne	f150 <gzputc@@Base+0x34>  // b.any
    f148:	ldr	w8, [x20, #108]
    f14c:	cbz	w8, f168 <gzputc@@Base+0x4c>
    f150:	mov	w0, #0xffffffff            	// #-1
    f154:	ldp	x20, x19, [sp, #48]
    f158:	ldp	x22, x21, [sp, #32]
    f15c:	ldr	x23, [sp, #16]
    f160:	ldp	x29, x30, [sp], #64
    f164:	ret
    f168:	ldr	w8, [x20, #104]
    f16c:	mov	w19, w1
    f170:	cbz	w8, f204 <gzputc@@Base+0xe8>
    f174:	ldr	w8, [x20, #128]
    f178:	ldr	x22, [x20, #96]
    f17c:	str	wzr, [x20, #104]
    f180:	cbz	w8, f198 <gzputc@@Base+0x7c>
    f184:	mov	x0, x20
    f188:	mov	w1, wzr
    f18c:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f190:	cmn	w0, #0x1
    f194:	b.eq	f154 <gzputc@@Base+0x38>  // b.none
    f198:	cbz	x22, f204 <gzputc@@Base+0xe8>
    f19c:	mov	w8, wzr
    f1a0:	ldr	w9, [x20, #40]
    f1a4:	cmp	x22, x9
    f1a8:	csel	w23, w22, w9, lt  // lt = tstop
    f1ac:	tbz	w8, #0, f1b8 <gzputc@@Base+0x9c>
    f1b0:	mov	w21, w23
    f1b4:	b	f1cc <gzputc@@Base+0xb0>
    f1b8:	ldr	x0, [x20, #48]
    f1bc:	mov	w21, w23
    f1c0:	mov	w1, wzr
    f1c4:	mov	x2, x21
    f1c8:	bl	2410 <memset@plt>
    f1cc:	ldr	x8, [x20, #48]
    f1d0:	ldr	x9, [x20, #16]
    f1d4:	mov	x0, x20
    f1d8:	mov	w1, wzr
    f1dc:	str	x8, [x20, #120]
    f1e0:	add	x8, x9, x21
    f1e4:	str	w23, [x20, #128]
    f1e8:	str	x8, [x20, #16]
    f1ec:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f1f0:	cmn	w0, #0x1
    f1f4:	b.eq	f154 <gzputc@@Base+0x38>  // b.none
    f1f8:	sub	x22, x22, x21
    f1fc:	mov	w8, #0x1                   	// #1
    f200:	cbnz	x22, f1a0 <gzputc@@Base+0x84>
    f204:	ldr	w8, [x20, #40]
    f208:	cbz	w8, f260 <gzputc@@Base+0x144>
    f20c:	ldr	w9, [x20, #128]
    f210:	cbz	w9, f220 <gzputc@@Base+0x104>
    f214:	ldr	x11, [x20, #120]
    f218:	ldr	x10, [x20, #48]
    f21c:	b	f22c <gzputc@@Base+0x110>
    f220:	ldr	x10, [x20, #48]
    f224:	mov	x11, x10
    f228:	str	x10, [x20, #120]
    f22c:	add	x9, x11, x9
    f230:	sub	x9, x9, x10
    f234:	cmp	w8, w9
    f238:	b.ls	f260 <gzputc@@Base+0x144>  // b.plast
    f23c:	strb	w19, [x10, w9, uxtw]
    f240:	ldr	w8, [x20, #128]
    f244:	ldr	x9, [x20, #16]
    f248:	and	w0, w19, #0xff
    f24c:	add	w8, w8, #0x1
    f250:	add	x9, x9, #0x1
    f254:	str	w8, [x20, #128]
    f258:	str	x9, [x20, #16]
    f25c:	b	f154 <gzputc@@Base+0x38>
    f260:	add	x1, x29, #0x1c
    f264:	mov	w2, #0x1                   	// #1
    f268:	mov	x0, x20
    f26c:	strb	w19, [x29, #28]
    f270:	bl	eeac <gzwrite@@Base+0x58>
    f274:	and	w8, w19, #0xff
    f278:	cmp	x0, #0x1
    f27c:	csinv	w0, w8, wzr, eq  // eq = none
    f280:	b	f154 <gzputc@@Base+0x38>

000000000000f284 <gzputs@@Base>:
    f284:	stp	x29, x30, [sp, #-48]!
    f288:	str	x21, [sp, #16]
    f28c:	stp	x20, x19, [sp, #32]
    f290:	mov	x29, sp
    f294:	cbz	x0, f2b4 <gzputs@@Base+0x30>
    f298:	ldr	w8, [x0, #24]
    f29c:	mov	w9, #0x79b1                	// #31153
    f2a0:	mov	x20, x0
    f2a4:	cmp	w8, w9
    f2a8:	b.ne	f2b4 <gzputs@@Base+0x30>  // b.any
    f2ac:	ldr	w8, [x20, #108]
    f2b0:	cbz	w8, f2c8 <gzputs@@Base+0x44>
    f2b4:	mov	w0, #0xffffffff            	// #-1
    f2b8:	ldp	x20, x19, [sp, #32]
    f2bc:	ldr	x21, [sp, #16]
    f2c0:	ldp	x29, x30, [sp], #48
    f2c4:	ret
    f2c8:	mov	x0, x1
    f2cc:	mov	x19, x1
    f2d0:	bl	2370 <strlen@plt>
    f2d4:	mov	x21, x0
    f2d8:	mov	x0, x20
    f2dc:	mov	x1, x19
    f2e0:	mov	x2, x21
    f2e4:	bl	eeac <gzwrite@@Base+0x58>
    f2e8:	cmp	w0, #0x0
    f2ec:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    f2f0:	csinv	w0, w0, wzr, eq  // eq = none
    f2f4:	b	f2b8 <gzputs@@Base+0x34>

000000000000f2f8 <gzvprintf@@ZLIB_1.2.7.1>:
    f2f8:	sub	sp, sp, #0x60
    f2fc:	stp	x29, x30, [sp, #32]
    f300:	stp	x24, x23, [sp, #48]
    f304:	stp	x22, x21, [sp, #64]
    f308:	stp	x20, x19, [sp, #80]
    f30c:	add	x29, sp, #0x20
    f310:	cbz	x0, f330 <gzvprintf@@ZLIB_1.2.7.1+0x38>
    f314:	ldr	w8, [x0, #24]
    f318:	mov	w9, #0x79b1                	// #31153
    f31c:	mov	x19, x0
    f320:	cmp	w8, w9
    f324:	b.ne	f330 <gzvprintf@@ZLIB_1.2.7.1+0x38>  // b.any
    f328:	ldr	w8, [x19, #108]
    f32c:	cbz	w8, f350 <gzvprintf@@ZLIB_1.2.7.1+0x58>
    f330:	mov	w20, #0xfffffffe            	// #-2
    f334:	mov	w0, w20
    f338:	ldp	x20, x19, [sp, #80]
    f33c:	ldp	x22, x21, [sp, #64]
    f340:	ldp	x24, x23, [sp, #48]
    f344:	ldp	x29, x30, [sp, #32]
    f348:	add	sp, sp, #0x60
    f34c:	ret
    f350:	ldr	w8, [x19, #40]
    f354:	mov	x21, x2
    f358:	mov	x20, x1
    f35c:	cbnz	w8, f370 <gzvprintf@@ZLIB_1.2.7.1+0x78>
    f360:	mov	x0, x19
    f364:	bl	f4d8 <gzvprintf@@ZLIB_1.2.7.1+0x1e0>
    f368:	cmn	w0, #0x1
    f36c:	b.eq	f4d0 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    f370:	ldr	w8, [x19, #104]
    f374:	cbz	w8, f408 <gzvprintf@@ZLIB_1.2.7.1+0x110>
    f378:	ldr	w8, [x19, #128]
    f37c:	ldr	x23, [x19, #96]
    f380:	str	wzr, [x19, #104]
    f384:	cbz	w8, f39c <gzvprintf@@ZLIB_1.2.7.1+0xa4>
    f388:	mov	x0, x19
    f38c:	mov	w1, wzr
    f390:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f394:	cmn	w0, #0x1
    f398:	b.eq	f4d0 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    f39c:	cbz	x23, f408 <gzvprintf@@ZLIB_1.2.7.1+0x110>
    f3a0:	mov	w8, wzr
    f3a4:	ldr	w9, [x19, #40]
    f3a8:	cmp	x23, x9
    f3ac:	csel	w24, w23, w9, lt  // lt = tstop
    f3b0:	tbz	w8, #0, f3bc <gzvprintf@@ZLIB_1.2.7.1+0xc4>
    f3b4:	mov	w22, w24
    f3b8:	b	f3d0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>
    f3bc:	ldr	x0, [x19, #48]
    f3c0:	mov	w22, w24
    f3c4:	mov	w1, wzr
    f3c8:	mov	x2, x22
    f3cc:	bl	2410 <memset@plt>
    f3d0:	ldr	x8, [x19, #48]
    f3d4:	ldr	x9, [x19, #16]
    f3d8:	mov	x0, x19
    f3dc:	mov	w1, wzr
    f3e0:	str	x8, [x19, #120]
    f3e4:	add	x8, x9, x22
    f3e8:	str	w24, [x19, #128]
    f3ec:	str	x8, [x19, #16]
    f3f0:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f3f4:	cmn	w0, #0x1
    f3f8:	b.eq	f4d0 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    f3fc:	sub	x23, x23, x22
    f400:	mov	w8, #0x1                   	// #1
    f404:	cbnz	x23, f3a4 <gzvprintf@@ZLIB_1.2.7.1+0xac>
    f408:	ldr	w8, [x19, #128]
    f40c:	cbz	w8, f418 <gzvprintf@@ZLIB_1.2.7.1+0x120>
    f410:	ldr	x9, [x19, #120]
    f414:	b	f420 <gzvprintf@@ZLIB_1.2.7.1+0x128>
    f418:	ldr	x9, [x19, #48]
    f41c:	str	x9, [x19, #120]
    f420:	ldr	w10, [x19, #40]
    f424:	add	x22, x9, x8
    f428:	mov	x3, sp
    f42c:	mov	x0, x22
    f430:	sub	w8, w10, #0x1
    f434:	strb	wzr, [x22, w8, uxtw]
    f438:	ldp	q1, q0, [x21]
    f43c:	ldr	w1, [x19, #40]
    f440:	mov	x2, x20
    f444:	stp	q1, q0, [sp]
    f448:	bl	2560 <vsnprintf@plt>
    f44c:	mov	w20, w0
    f450:	cbz	w0, f334 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    f454:	ldr	w8, [x19, #40]
    f458:	cmp	w20, w8
    f45c:	b.cs	f46c <gzvprintf@@ZLIB_1.2.7.1+0x174>  // b.hs, b.nlast
    f460:	sub	w9, w8, #0x1
    f464:	ldrb	w9, [x22, w9, uxtw]
    f468:	cbz	w9, f474 <gzvprintf@@ZLIB_1.2.7.1+0x17c>
    f46c:	mov	w20, wzr
    f470:	b	f334 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    f474:	ldr	w9, [x19, #128]
    f478:	ldr	x10, [x19, #16]
    f47c:	add	w9, w9, w20
    f480:	add	x10, x10, w20, sxtw
    f484:	subs	w21, w9, w8
    f488:	str	w9, [x19, #128]
    f48c:	str	x10, [x19, #16]
    f490:	b.cc	f334 <gzvprintf@@ZLIB_1.2.7.1+0x3c>  // b.lo, b.ul, b.last
    f494:	mov	x0, x19
    f498:	mov	w1, wzr
    f49c:	str	w8, [x19, #128]
    f4a0:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f4a4:	cmn	w0, #0x1
    f4a8:	b.eq	f4d0 <gzvprintf@@ZLIB_1.2.7.1+0x1d8>  // b.none
    f4ac:	ldr	x0, [x19, #48]
    f4b0:	ldr	w8, [x19, #40]
    f4b4:	mov	w2, w21
    f4b8:	add	x1, x0, x8
    f4bc:	bl	2330 <memcpy@plt>
    f4c0:	ldr	x8, [x19, #48]
    f4c4:	str	w21, [x19, #128]
    f4c8:	str	x8, [x19, #120]
    f4cc:	b	f334 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    f4d0:	ldr	w20, [x19, #108]
    f4d4:	b	f334 <gzvprintf@@ZLIB_1.2.7.1+0x3c>
    f4d8:	stp	x29, x30, [sp, #-48]!
    f4dc:	stp	x20, x19, [sp, #32]
    f4e0:	str	x21, [sp, #16]
    f4e4:	ldr	w21, [x0, #44]
    f4e8:	mov	x19, x0
    f4ec:	mov	x29, sp
    f4f0:	lsl	w0, w21, #1
    f4f4:	bl	23d0 <malloc@plt>
    f4f8:	str	x0, [x19, #48]
    f4fc:	cbz	x0, f570 <gzvprintf@@ZLIB_1.2.7.1+0x278>
    f500:	ldr	w8, [x19, #64]
    f504:	cbz	w8, f514 <gzvprintf@@ZLIB_1.2.7.1+0x21c>
    f508:	mov	w0, wzr
    f50c:	str	w21, [x19, #40]
    f510:	b	f588 <gzvprintf@@ZLIB_1.2.7.1+0x290>
    f514:	mov	x20, x0
    f518:	mov	x0, x21
    f51c:	bl	23d0 <malloc@plt>
    f520:	str	x0, [x19, #56]
    f524:	cbz	x0, f568 <gzvprintf@@ZLIB_1.2.7.1+0x270>
    f528:	ldp	w1, w5, [x19, #88]
    f52c:	adrp	x6, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    f530:	add	x0, x19, #0x78
    f534:	add	x6, x6, #0xcb1
    f538:	mov	w2, #0x8                   	// #8
    f53c:	mov	w3, #0x1f                  	// #31
    f540:	mov	w4, #0x8                   	// #8
    f544:	mov	w7, #0x70                  	// #112
    f548:	stp	xzr, xzr, [x19, #184]
    f54c:	str	xzr, [x19, #200]
    f550:	bl	2430 <deflateInit2_@plt>
    f554:	cbz	w0, f598 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
    f558:	ldr	x0, [x19, #56]
    f55c:	bl	24d0 <free@plt>
    f560:	ldr	x0, [x19, #48]
    f564:	b	f56c <gzvprintf@@ZLIB_1.2.7.1+0x274>
    f568:	mov	x0, x20
    f56c:	bl	24d0 <free@plt>
    f570:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    f574:	add	x2, x2, #0xd16
    f578:	mov	w1, #0xfffffffc            	// #-4
    f57c:	mov	x0, x19
    f580:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    f584:	mov	w0, #0xffffffff            	// #-1
    f588:	ldp	x20, x19, [sp, #32]
    f58c:	ldr	x21, [sp, #16]
    f590:	ldp	x29, x30, [sp], #48
    f594:	ret
    f598:	ldr	w9, [x19, #64]
    f59c:	ldr	w8, [x19, #44]
    f5a0:	mov	w0, wzr
    f5a4:	str	xzr, [x19, #120]
    f5a8:	str	w8, [x19, #40]
    f5ac:	cbnz	w9, f588 <gzvprintf@@ZLIB_1.2.7.1+0x290>
    f5b0:	ldr	x9, [x19, #56]
    f5b4:	str	w8, [x19, #152]
    f5b8:	str	x9, [x19, #144]
    f5bc:	str	x9, [x19, #8]
    f5c0:	b	f588 <gzvprintf@@ZLIB_1.2.7.1+0x290>
    f5c4:	stp	x29, x30, [sp, #-64]!
    f5c8:	stp	x22, x21, [sp, #32]
    f5cc:	stp	x20, x19, [sp, #48]
    f5d0:	ldr	w8, [x0, #40]
    f5d4:	mov	x19, x0
    f5d8:	mov	w20, w1
    f5dc:	str	x23, [sp, #16]
    f5e0:	mov	x29, sp
    f5e4:	cbnz	w8, f5f8 <gzvprintf@@ZLIB_1.2.7.1+0x300>
    f5e8:	mov	x0, x19
    f5ec:	bl	f4d8 <gzvprintf@@ZLIB_1.2.7.1+0x1e0>
    f5f0:	cmn	w0, #0x1
    f5f4:	b.eq	f74c <gzvprintf@@ZLIB_1.2.7.1+0x454>  // b.none
    f5f8:	ldr	w8, [x19, #64]
    f5fc:	cbz	w8, f64c <gzvprintf@@ZLIB_1.2.7.1+0x354>
    f600:	ldr	w8, [x19, #128]
    f604:	cbz	w8, f644 <gzvprintf@@ZLIB_1.2.7.1+0x34c>
    f608:	ldr	x1, [x19, #120]
    f60c:	mov	w20, #0x40000000            	// #1073741824
    f610:	ldr	w0, [x19, #28]
    f614:	lsr	w9, w8, #30
    f618:	cmp	w9, #0x0
    f61c:	csel	w2, w8, w20, eq  // eq = none
    f620:	bl	2490 <write@plt>
    f624:	tbnz	w0, #31, f714 <gzvprintf@@ZLIB_1.2.7.1+0x41c>
    f628:	ldr	w8, [x19, #128]
    f62c:	ldr	x9, [x19, #120]
    f630:	subs	w8, w8, w0
    f634:	add	x1, x9, w0, sxtw
    f638:	str	w8, [x19, #128]
    f63c:	str	x1, [x19, #120]
    f640:	b.ne	f610 <gzvprintf@@ZLIB_1.2.7.1+0x318>  // b.any
    f644:	mov	w20, wzr
    f648:	b	f750 <gzvprintf@@ZLIB_1.2.7.1+0x458>
    f64c:	ldr	w23, [x19, #152]
    f650:	mov	w0, wzr
    f654:	add	x21, x19, #0x78
    f658:	mov	w22, #0x40000000            	// #1073741824
    f65c:	cbz	w23, f67c <gzvprintf@@ZLIB_1.2.7.1+0x384>
    f660:	cmp	w20, #0x4
    f664:	cset	w8, ne  // ne = any
    f668:	cmp	w0, #0x1
    f66c:	cset	w9, eq  // eq = none
    f670:	cbz	w20, f6dc <gzvprintf@@ZLIB_1.2.7.1+0x3e4>
    f674:	orr	w8, w8, w9
    f678:	cbz	w8, f6dc <gzvprintf@@ZLIB_1.2.7.1+0x3e4>
    f67c:	ldr	x8, [x19, #144]
    f680:	ldr	x1, [x19, #8]
    f684:	cmp	x8, x1
    f688:	b.ls	f6c4 <gzvprintf@@ZLIB_1.2.7.1+0x3cc>  // b.plast
    f68c:	sub	x8, x8, x1
    f690:	ldr	w0, [x19, #28]
    f694:	cmp	x8, x22
    f698:	csel	x8, x8, x22, lt  // lt = tstop
    f69c:	and	x2, x8, #0xffffffff
    f6a0:	bl	2490 <write@plt>
    f6a4:	tbnz	w0, #31, f714 <gzvprintf@@ZLIB_1.2.7.1+0x41c>
    f6a8:	ldr	x9, [x19, #8]
    f6ac:	ldr	x8, [x19, #144]
    f6b0:	add	x1, x9, w0, sxtw
    f6b4:	cmp	x8, x1
    f6b8:	str	x1, [x19, #8]
    f6bc:	b.hi	f68c <gzvprintf@@ZLIB_1.2.7.1+0x394>  // b.pmore
    f6c0:	ldr	w23, [x19, #152]
    f6c4:	cbnz	w23, f6dc <gzvprintf@@ZLIB_1.2.7.1+0x3e4>
    f6c8:	ldr	w23, [x19, #40]
    f6cc:	ldr	x8, [x19, #56]
    f6d0:	str	w23, [x19, #152]
    f6d4:	str	x8, [x19, #144]
    f6d8:	str	x8, [x19, #8]
    f6dc:	mov	x0, x21
    f6e0:	mov	w1, w20
    f6e4:	bl	2400 <deflate@plt>
    f6e8:	cmn	w0, #0x2
    f6ec:	b.eq	f738 <gzvprintf@@ZLIB_1.2.7.1+0x440>  // b.none
    f6f0:	ldr	w8, [x19, #152]
    f6f4:	cmp	w23, w8
    f6f8:	mov	w23, w8
    f6fc:	b.ne	f65c <gzvprintf@@ZLIB_1.2.7.1+0x364>  // b.any
    f700:	cmp	w20, #0x4
    f704:	b.ne	f644 <gzvprintf@@ZLIB_1.2.7.1+0x34c>  // b.any
    f708:	mov	x0, x21
    f70c:	bl	23f0 <deflateReset@plt>
    f710:	b	f644 <gzvprintf@@ZLIB_1.2.7.1+0x34c>
    f714:	bl	2590 <__errno_location@plt>
    f718:	ldr	w0, [x0]
    f71c:	bl	2460 <strerror@plt>
    f720:	mov	x2, x0
    f724:	mov	w1, #0xffffffff            	// #-1
    f728:	mov	x0, x19
    f72c:	mov	w20, #0xffffffff            	// #-1
    f730:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    f734:	b	f750 <gzvprintf@@ZLIB_1.2.7.1+0x458>
    f738:	adrp	x2, 13000 <gzclose_w@@ZLIB_1.2.3.5+0x35d0>
    f73c:	add	x2, x2, #0xe0d
    f740:	mov	w1, #0xfffffffe            	// #-2
    f744:	mov	x0, x19
    f748:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    f74c:	mov	w20, #0xffffffff            	// #-1
    f750:	mov	w0, w20
    f754:	ldp	x20, x19, [sp, #48]
    f758:	ldp	x22, x21, [sp, #32]
    f75c:	ldr	x23, [sp, #16]
    f760:	ldp	x29, x30, [sp], #64
    f764:	ret

000000000000f768 <gzprintf@@Base>:
    f768:	sub	sp, sp, #0x100
    f76c:	stp	x29, x30, [sp, #240]
    f770:	add	x29, sp, #0xf0
    f774:	mov	x8, #0xffffffffffffffd0    	// #-48
    f778:	mov	x9, sp
    f77c:	sub	x10, x29, #0x70
    f780:	movk	x8, #0xff80, lsl #32
    f784:	add	x11, x29, #0x10
    f788:	add	x9, x9, #0x80
    f78c:	add	x10, x10, #0x30
    f790:	stp	x9, x8, [x29, #-16]
    f794:	stp	x11, x10, [x29, #-32]
    f798:	stp	x2, x3, [x29, #-112]
    f79c:	stp	x4, x5, [x29, #-96]
    f7a0:	stp	x6, x7, [x29, #-80]
    f7a4:	stp	q1, q2, [sp, #16]
    f7a8:	str	q0, [sp]
    f7ac:	ldp	q0, q1, [x29, #-32]
    f7b0:	sub	x2, x29, #0x40
    f7b4:	stp	q3, q4, [sp, #48]
    f7b8:	stp	q5, q6, [sp, #80]
    f7bc:	str	q7, [sp, #112]
    f7c0:	stp	q0, q1, [x29, #-64]
    f7c4:	bl	2350 <gzvprintf@plt>
    f7c8:	ldp	x29, x30, [sp, #240]
    f7cc:	add	sp, sp, #0x100
    f7d0:	ret

000000000000f7d4 <gzflush@@Base>:
    f7d4:	stp	x29, x30, [sp, #-64]!
    f7d8:	str	x23, [sp, #16]
    f7dc:	stp	x22, x21, [sp, #32]
    f7e0:	stp	x20, x19, [sp, #48]
    f7e4:	mov	x29, sp
    f7e8:	cbz	x0, f8c4 <gzflush@@Base+0xf0>
    f7ec:	ldr	w8, [x0, #24]
    f7f0:	mov	w9, #0x79b1                	// #31153
    f7f4:	mov	x19, x0
    f7f8:	cmp	w8, w9
    f7fc:	b.ne	f8c4 <gzflush@@Base+0xf0>  // b.any
    f800:	mov	w20, w1
    f804:	cmp	w1, #0x4
    f808:	mov	w0, #0xfffffffe            	// #-2
    f80c:	b.hi	f8c8 <gzflush@@Base+0xf4>  // b.pmore
    f810:	ldr	w8, [x19, #108]
    f814:	cbnz	w8, f8c8 <gzflush@@Base+0xf4>
    f818:	ldr	w8, [x19, #104]
    f81c:	cbz	w8, f8b0 <gzflush@@Base+0xdc>
    f820:	ldr	w8, [x19, #128]
    f824:	ldr	x22, [x19, #96]
    f828:	str	wzr, [x19, #104]
    f82c:	cbz	w8, f844 <gzflush@@Base+0x70>
    f830:	mov	x0, x19
    f834:	mov	w1, wzr
    f838:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f83c:	cmn	w0, #0x1
    f840:	b.eq	f8bc <gzflush@@Base+0xe8>  // b.none
    f844:	cbz	x22, f8b0 <gzflush@@Base+0xdc>
    f848:	mov	w8, wzr
    f84c:	ldr	w9, [x19, #40]
    f850:	cmp	x22, x9
    f854:	csel	w23, w22, w9, lt  // lt = tstop
    f858:	tbz	w8, #0, f864 <gzflush@@Base+0x90>
    f85c:	mov	w21, w23
    f860:	b	f878 <gzflush@@Base+0xa4>
    f864:	ldr	x0, [x19, #48]
    f868:	mov	w21, w23
    f86c:	mov	w1, wzr
    f870:	mov	x2, x21
    f874:	bl	2410 <memset@plt>
    f878:	ldr	x8, [x19, #48]
    f87c:	ldr	x9, [x19, #16]
    f880:	mov	x0, x19
    f884:	mov	w1, wzr
    f888:	str	x8, [x19, #120]
    f88c:	add	x8, x9, x21
    f890:	str	w23, [x19, #128]
    f894:	str	x8, [x19, #16]
    f898:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f89c:	cmn	w0, #0x1
    f8a0:	b.eq	f8bc <gzflush@@Base+0xe8>  // b.none
    f8a4:	sub	x22, x22, x21
    f8a8:	mov	w8, #0x1                   	// #1
    f8ac:	cbnz	x22, f84c <gzflush@@Base+0x78>
    f8b0:	mov	x0, x19
    f8b4:	mov	w1, w20
    f8b8:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f8bc:	ldr	w0, [x19, #108]
    f8c0:	b	f8c8 <gzflush@@Base+0xf4>
    f8c4:	mov	w0, #0xfffffffe            	// #-2
    f8c8:	ldp	x20, x19, [sp, #48]
    f8cc:	ldp	x22, x21, [sp, #32]
    f8d0:	ldr	x23, [sp, #16]
    f8d4:	ldp	x29, x30, [sp], #64
    f8d8:	ret

000000000000f8dc <gzsetparams@@Base>:
    f8dc:	stp	x29, x30, [sp, #-64]!
    f8e0:	stp	x24, x23, [sp, #16]
    f8e4:	stp	x22, x21, [sp, #32]
    f8e8:	stp	x20, x19, [sp, #48]
    f8ec:	mov	x29, sp
    f8f0:	cbz	x0, f910 <gzsetparams@@Base+0x34>
    f8f4:	ldr	w8, [x0, #24]
    f8f8:	mov	w9, #0x79b1                	// #31153
    f8fc:	mov	x19, x0
    f900:	cmp	w8, w9
    f904:	b.ne	f910 <gzsetparams@@Base+0x34>  // b.any
    f908:	ldr	w8, [x19, #108]
    f90c:	cbz	w8, f928 <gzsetparams@@Base+0x4c>
    f910:	mov	w0, #0xfffffffe            	// #-2
    f914:	ldp	x20, x19, [sp, #48]
    f918:	ldp	x22, x21, [sp, #32]
    f91c:	ldp	x24, x23, [sp, #16]
    f920:	ldp	x29, x30, [sp], #64
    f924:	ret
    f928:	ldr	w8, [x19, #88]
    f92c:	mov	w20, w2
    f930:	mov	w21, w1
    f934:	cmp	w8, w1
    f938:	b.ne	f950 <gzsetparams@@Base+0x74>  // b.any
    f93c:	ldr	w8, [x19, #92]
    f940:	cmp	w8, w20
    f944:	b.ne	f950 <gzsetparams@@Base+0x74>  // b.any
    f948:	mov	w0, wzr
    f94c:	b	f914 <gzsetparams@@Base+0x38>
    f950:	ldr	w8, [x19, #104]
    f954:	cbz	w8, f9e8 <gzsetparams@@Base+0x10c>
    f958:	ldr	w8, [x19, #128]
    f95c:	ldr	x23, [x19, #96]
    f960:	str	wzr, [x19, #104]
    f964:	cbz	w8, f97c <gzsetparams@@Base+0xa0>
    f968:	mov	x0, x19
    f96c:	mov	w1, wzr
    f970:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f974:	cmn	w0, #0x1
    f978:	b.eq	fa28 <gzsetparams@@Base+0x14c>  // b.none
    f97c:	cbz	x23, f9e8 <gzsetparams@@Base+0x10c>
    f980:	mov	w8, wzr
    f984:	ldr	w9, [x19, #40]
    f988:	cmp	x23, x9
    f98c:	csel	w24, w23, w9, lt  // lt = tstop
    f990:	tbz	w8, #0, f99c <gzsetparams@@Base+0xc0>
    f994:	mov	w22, w24
    f998:	b	f9b0 <gzsetparams@@Base+0xd4>
    f99c:	ldr	x0, [x19, #48]
    f9a0:	mov	w22, w24
    f9a4:	mov	w1, wzr
    f9a8:	mov	x2, x22
    f9ac:	bl	2410 <memset@plt>
    f9b0:	ldr	x8, [x19, #48]
    f9b4:	ldr	x9, [x19, #16]
    f9b8:	mov	x0, x19
    f9bc:	mov	w1, wzr
    f9c0:	str	x8, [x19, #120]
    f9c4:	add	x8, x9, x22
    f9c8:	str	w24, [x19, #128]
    f9cc:	str	x8, [x19, #16]
    f9d0:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    f9d4:	cmn	w0, #0x1
    f9d8:	b.eq	fa28 <gzsetparams@@Base+0x14c>  // b.none
    f9dc:	sub	x23, x23, x22
    f9e0:	mov	w8, #0x1                   	// #1
    f9e4:	cbnz	x23, f984 <gzsetparams@@Base+0xa8>
    f9e8:	ldr	w8, [x19, #40]
    f9ec:	cbz	w8, fa1c <gzsetparams@@Base+0x140>
    f9f0:	ldr	w8, [x19, #128]
    f9f4:	cbz	w8, fa0c <gzsetparams@@Base+0x130>
    f9f8:	mov	w1, #0x5                   	// #5
    f9fc:	mov	x0, x19
    fa00:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    fa04:	cmn	w0, #0x1
    fa08:	b.eq	fa28 <gzsetparams@@Base+0x14c>  // b.none
    fa0c:	add	x0, x19, #0x78
    fa10:	mov	w1, w21
    fa14:	mov	w2, w20
    fa18:	bl	2440 <deflateParams@plt>
    fa1c:	mov	w0, wzr
    fa20:	stp	w21, w20, [x19, #88]
    fa24:	b	f914 <gzsetparams@@Base+0x38>
    fa28:	ldr	w0, [x19, #108]
    fa2c:	b	f914 <gzsetparams@@Base+0x38>

000000000000fa30 <gzclose_w@@ZLIB_1.2.3.5>:
    fa30:	stp	x29, x30, [sp, #-48]!
    fa34:	stp	x22, x21, [sp, #16]
    fa38:	stp	x20, x19, [sp, #32]
    fa3c:	mov	x29, sp
    fa40:	cbz	x0, faf8 <gzclose_w@@ZLIB_1.2.3.5+0xc8>
    fa44:	ldr	w8, [x0, #24]
    fa48:	mov	w9, #0x79b1                	// #31153
    fa4c:	mov	x19, x0
    fa50:	cmp	w8, w9
    fa54:	b.ne	faf8 <gzclose_w@@ZLIB_1.2.3.5+0xc8>  // b.any
    fa58:	ldr	w8, [x19, #104]
    fa5c:	cbz	w8, faf0 <gzclose_w@@ZLIB_1.2.3.5+0xc0>
    fa60:	ldr	w8, [x19, #128]
    fa64:	ldr	x21, [x19, #96]
    fa68:	str	wzr, [x19, #104]
    fa6c:	cbz	w8, fa84 <gzclose_w@@ZLIB_1.2.3.5+0x54>
    fa70:	mov	x0, x19
    fa74:	mov	w1, wzr
    fa78:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    fa7c:	cmn	w0, #0x1
    fa80:	b.eq	fb00 <gzclose_w@@ZLIB_1.2.3.5+0xd0>  // b.none
    fa84:	cbz	x21, faf0 <gzclose_w@@ZLIB_1.2.3.5+0xc0>
    fa88:	mov	w8, wzr
    fa8c:	ldr	w9, [x19, #40]
    fa90:	cmp	x21, x9
    fa94:	csel	w22, w21, w9, lt  // lt = tstop
    fa98:	tbz	w8, #0, faa4 <gzclose_w@@ZLIB_1.2.3.5+0x74>
    fa9c:	mov	w20, w22
    faa0:	b	fab8 <gzclose_w@@ZLIB_1.2.3.5+0x88>
    faa4:	ldr	x0, [x19, #48]
    faa8:	mov	w20, w22
    faac:	mov	w1, wzr
    fab0:	mov	x2, x20
    fab4:	bl	2410 <memset@plt>
    fab8:	ldr	x8, [x19, #48]
    fabc:	ldr	x9, [x19, #16]
    fac0:	mov	x0, x19
    fac4:	mov	w1, wzr
    fac8:	str	x8, [x19, #120]
    facc:	add	x8, x9, x20
    fad0:	str	w22, [x19, #128]
    fad4:	str	x8, [x19, #16]
    fad8:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    fadc:	cmn	w0, #0x1
    fae0:	b.eq	fb00 <gzclose_w@@ZLIB_1.2.3.5+0xd0>  // b.none
    fae4:	sub	x21, x21, x20
    fae8:	mov	w8, #0x1                   	// #1
    faec:	cbnz	x21, fa8c <gzclose_w@@ZLIB_1.2.3.5+0x5c>
    faf0:	mov	w20, wzr
    faf4:	b	fb04 <gzclose_w@@ZLIB_1.2.3.5+0xd4>
    faf8:	mov	w20, #0xfffffffe            	// #-2
    fafc:	b	fb74 <gzclose_w@@ZLIB_1.2.3.5+0x144>
    fb00:	ldr	w20, [x19, #108]
    fb04:	mov	w1, #0x4                   	// #4
    fb08:	mov	x0, x19
    fb0c:	bl	f5c4 <gzvprintf@@ZLIB_1.2.7.1+0x2cc>
    fb10:	cmn	w0, #0x1
    fb14:	b.ne	fb1c <gzclose_w@@ZLIB_1.2.3.5+0xec>  // b.any
    fb18:	ldr	w20, [x19, #108]
    fb1c:	ldr	w8, [x19, #40]
    fb20:	cbz	w8, fb44 <gzclose_w@@ZLIB_1.2.3.5+0x114>
    fb24:	ldr	w8, [x19, #64]
    fb28:	cbnz	w8, fb3c <gzclose_w@@ZLIB_1.2.3.5+0x10c>
    fb2c:	add	x0, x19, #0x78
    fb30:	bl	24f0 <deflateEnd@plt>
    fb34:	ldr	x0, [x19, #56]
    fb38:	bl	24d0 <free@plt>
    fb3c:	ldr	x0, [x19, #48]
    fb40:	bl	24d0 <free@plt>
    fb44:	mov	x0, x19
    fb48:	mov	w1, wzr
    fb4c:	mov	x2, xzr
    fb50:	bl	ddcc <gzseek64@@ZLIB_1.2.3.3+0x1e0>
    fb54:	ldr	x0, [x19, #32]
    fb58:	bl	24d0 <free@plt>
    fb5c:	ldr	w0, [x19, #28]
    fb60:	bl	2470 <close@plt>
    fb64:	cmn	w0, #0x1
    fb68:	mov	x0, x19
    fb6c:	csinv	w20, w20, wzr, ne  // ne = any
    fb70:	bl	24d0 <free@plt>
    fb74:	mov	w0, w20
    fb78:	ldp	x20, x19, [sp, #32]
    fb7c:	ldp	x22, x21, [sp, #16]
    fb80:	ldp	x29, x30, [sp], #48
    fb84:	ret

Disassembly of section .fini:

000000000000fb88 <.fini>:
    fb88:	stp	x29, x30, [sp, #-16]!
    fb8c:	mov	x29, sp
    fb90:	ldp	x29, x30, [sp], #16
    fb94:	ret
