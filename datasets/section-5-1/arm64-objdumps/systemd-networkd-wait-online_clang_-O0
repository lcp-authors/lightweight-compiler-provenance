
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-networkd-wait-online_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401e20 <_init>:
  401e20:	stp	x29, x30, [sp, #-16]!
  401e24:	mov	x29, sp
  401e28:	bl	4023a8 <call_weak_fn>
  401e2c:	ldp	x29, x30, [sp], #16
  401e30:	ret

Disassembly of section .plt:

0000000000401e38 <__libc_start_main@plt-0x20>:
  401e38:	stp	x16, x30, [sp, #-16]!
  401e3c:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401e40:	ldr	x17, [x16, #3416]
  401e44:	add	x16, x16, #0xd58
  401e48:	br	x17
  401e4c:	nop
  401e50:	nop
  401e54:	nop

0000000000401e58 <__libc_start_main@plt>:
  401e58:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401e5c:	ldr	x17, [x16, #3424]
  401e60:	add	x16, x16, #0xd60
  401e64:	br	x17

0000000000401e68 <abort@plt>:
  401e68:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401e6c:	ldr	x17, [x16, #3432]
  401e70:	add	x16, x16, #0xd68
  401e74:	br	x17

0000000000401e78 <__gmon_start__@plt>:
  401e78:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401e7c:	ldr	x17, [x16, #3440]
  401e80:	add	x16, x16, #0xd70
  401e84:	br	x17

0000000000401e88 <log_assert_failed_realm@plt>:
  401e88:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401e8c:	ldr	x17, [x16, #3448]
  401e90:	add	x16, x16, #0xd78
  401e94:	br	x17

0000000000401e98 <internal_hashmap_ensure_allocated@plt>:
  401e98:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401e9c:	ldr	x17, [x16, #3456]
  401ea0:	add	x16, x16, #0xd80
  401ea4:	br	x17

0000000000401ea8 <strdup@plt>:
  401ea8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401eac:	ldr	x17, [x16, #3464]
  401eb0:	add	x16, x16, #0xd88
  401eb4:	br	x17

0000000000401eb8 <memcpy@plt>:
  401eb8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401ebc:	ldr	x17, [x16, #3472]
  401ec0:	add	x16, x16, #0xd90
  401ec4:	br	x17

0000000000401ec8 <hashmap_put@plt>:
  401ec8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401ecc:	ldr	x17, [x16, #3480]
  401ed0:	add	x16, x16, #0xd98
  401ed4:	br	x17

0000000000401ed8 <free@plt>:
  401ed8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401edc:	ldr	x17, [x16, #3488]
  401ee0:	add	x16, x16, #0xda0
  401ee4:	br	x17

0000000000401ee8 <malloc@plt>:
  401ee8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401eec:	ldr	x17, [x16, #3496]
  401ef0:	add	x16, x16, #0xda8
  401ef4:	br	x17

0000000000401ef8 <internal_hashmap_remove@plt>:
  401ef8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401efc:	ldr	x17, [x16, #3504]
  401f00:	add	x16, x16, #0xdb0
  401f04:	br	x17

0000000000401f08 <sd_rtnl_message_link_get_flags@plt>:
  401f08:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f0c:	ldr	x17, [x16, #3512]
  401f10:	add	x16, x16, #0xdb8
  401f14:	br	x17

0000000000401f18 <sd_netlink_message_read_string@plt>:
  401f18:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f1c:	ldr	x17, [x16, #3520]
  401f20:	add	x16, x16, #0xdc0
  401f24:	br	x17

0000000000401f28 <strcmp@plt>:
  401f28:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f2c:	ldr	x17, [x16, #3528]
  401f30:	add	x16, x16, #0xdc8
  401f34:	br	x17

0000000000401f38 <sd_network_link_get_required_for_online@plt>:
  401f38:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f3c:	ldr	x17, [x16, #3536]
  401f40:	add	x16, x16, #0xdd0
  401f44:	br	x17

0000000000401f48 <log_object_internal@plt>:
  401f48:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f4c:	ldr	x17, [x16, #3544]
  401f50:	add	x16, x16, #0xdd8
  401f54:	br	x17

0000000000401f58 <log_internal_realm@plt>:
  401f58:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f5c:	ldr	x17, [x16, #3552]
  401f60:	add	x16, x16, #0xde0
  401f64:	br	x17

0000000000401f68 <sd_network_link_get_required_operstate_for_online@plt>:
  401f68:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f6c:	ldr	x17, [x16, #3560]
  401f70:	add	x16, x16, #0xde8
  401f74:	br	x17

0000000000401f78 <link_operstate_from_string@plt>:
  401f78:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f7c:	ldr	x17, [x16, #3568]
  401f80:	add	x16, x16, #0xdf0
  401f84:	br	x17

0000000000401f88 <sd_network_link_get_operational_state@plt>:
  401f88:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f8c:	ldr	x17, [x16, #3576]
  401f90:	add	x16, x16, #0xdf8
  401f94:	br	x17

0000000000401f98 <sd_network_link_get_setup_state@plt>:
  401f98:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401f9c:	ldr	x17, [x16, #3584]
  401fa0:	add	x16, x16, #0xe00
  401fa4:	br	x17

0000000000401fa8 <log_get_max_level_realm@plt>:
  401fa8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401fac:	ldr	x17, [x16, #3592]
  401fb0:	add	x16, x16, #0xe08
  401fb4:	br	x17

0000000000401fb8 <abs@plt>:
  401fb8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401fbc:	ldr	x17, [x16, #3600]
  401fc0:	add	x16, x16, #0xe10
  401fc4:	br	x17

0000000000401fc8 <internal_hashmap_iterate@plt>:
  401fc8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401fcc:	ldr	x17, [x16, #3608]
  401fd0:	add	x16, x16, #0xe18
  401fd4:	br	x17

0000000000401fd8 <internal_hashmap_get@plt>:
  401fd8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401fdc:	ldr	x17, [x16, #3616]
  401fe0:	add	x16, x16, #0xe20
  401fe4:	br	x17

0000000000401fe8 <strv_find@plt>:
  401fe8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401fec:	ldr	x17, [x16, #3624]
  401ff0:	add	x16, x16, #0xe28
  401ff4:	br	x17

0000000000401ff8 <link_operstate_to_string@plt>:
  401ff8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  401ffc:	ldr	x17, [x16, #3632]
  402000:	add	x16, x16, #0xe30
  402004:	br	x17

0000000000402008 <strv_fnmatch@plt>:
  402008:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40200c:	ldr	x17, [x16, #3640]
  402010:	add	x16, x16, #0xe38
  402014:	br	x17

0000000000402018 <sd_event_default@plt>:
  402018:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40201c:	ldr	x17, [x16, #3648]
  402020:	add	x16, x16, #0xe40
  402024:	br	x17

0000000000402028 <sd_event_add_signal@plt>:
  402028:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40202c:	ldr	x17, [x16, #3656]
  402030:	add	x16, x16, #0xe48
  402034:	br	x17

0000000000402038 <clock_boottime_or_monotonic@plt>:
  402038:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40203c:	ldr	x17, [x16, #3664]
  402040:	add	x16, x16, #0xe50
  402044:	br	x17

0000000000402048 <now@plt>:
  402048:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40204c:	ldr	x17, [x16, #3672]
  402050:	add	x16, x16, #0xe58
  402054:	br	x17

0000000000402058 <sd_event_add_time@plt>:
  402058:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40205c:	ldr	x17, [x16, #3680]
  402060:	add	x16, x16, #0xe60
  402064:	br	x17

0000000000402068 <sd_event_set_watchdog@plt>:
  402068:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40206c:	ldr	x17, [x16, #3688]
  402070:	add	x16, x16, #0xe68
  402074:	br	x17

0000000000402078 <sd_network_monitor_new@plt>:
  402078:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40207c:	ldr	x17, [x16, #3696]
  402080:	add	x16, x16, #0xe70
  402084:	br	x17

0000000000402088 <sd_network_monitor_get_fd@plt>:
  402088:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40208c:	ldr	x17, [x16, #3704]
  402090:	add	x16, x16, #0xe78
  402094:	br	x17

0000000000402098 <sd_network_monitor_get_events@plt>:
  402098:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40209c:	ldr	x17, [x16, #3712]
  4020a0:	add	x16, x16, #0xe80
  4020a4:	br	x17

00000000004020a8 <sd_event_add_io@plt>:
  4020a8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4020ac:	ldr	x17, [x16, #3720]
  4020b0:	add	x16, x16, #0xe88
  4020b4:	br	x17

00000000004020b8 <sd_netlink_open@plt>:
  4020b8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4020bc:	ldr	x17, [x16, #3728]
  4020c0:	add	x16, x16, #0xe90
  4020c4:	br	x17

00000000004020c8 <sd_netlink_attach_event@plt>:
  4020c8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4020cc:	ldr	x17, [x16, #3736]
  4020d0:	add	x16, x16, #0xe98
  4020d4:	br	x17

00000000004020d8 <sd_netlink_add_match@plt>:
  4020d8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4020dc:	ldr	x17, [x16, #3744]
  4020e0:	add	x16, x16, #0xea0
  4020e4:	br	x17

00000000004020e8 <sd_rtnl_message_new_link@plt>:
  4020e8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4020ec:	ldr	x17, [x16, #3752]
  4020f0:	add	x16, x16, #0xea8
  4020f4:	br	x17

00000000004020f8 <sd_netlink_message_request_dump@plt>:
  4020f8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4020fc:	ldr	x17, [x16, #3760]
  402100:	add	x16, x16, #0xeb0
  402104:	br	x17

0000000000402108 <sd_netlink_call@plt>:
  402108:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40210c:	ldr	x17, [x16, #3768]
  402110:	add	x16, x16, #0xeb8
  402114:	br	x17

0000000000402118 <sd_netlink_message_next@plt>:
  402118:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40211c:	ldr	x17, [x16, #3776]
  402120:	add	x16, x16, #0xec0
  402124:	br	x17

0000000000402128 <sd_event_source_unref@plt>:
  402128:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40212c:	ldr	x17, [x16, #3784]
  402130:	add	x16, x16, #0xec8
  402134:	br	x17

0000000000402138 <sd_network_monitor_unref@plt>:
  402138:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40213c:	ldr	x17, [x16, #3792]
  402140:	add	x16, x16, #0xed0
  402144:	br	x17

0000000000402148 <sd_netlink_unref@plt>:
  402148:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40214c:	ldr	x17, [x16, #3800]
  402150:	add	x16, x16, #0xed8
  402154:	br	x17

0000000000402158 <sd_event_unref@plt>:
  402158:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40215c:	ldr	x17, [x16, #3808]
  402160:	add	x16, x16, #0xee0
  402164:	br	x17

0000000000402168 <internal_hashmap_first_key_and_value@plt>:
  402168:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40216c:	ldr	x17, [x16, #3816]
  402170:	add	x16, x16, #0xee8
  402174:	br	x17

0000000000402178 <internal_hashmap_free@plt>:
  402178:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40217c:	ldr	x17, [x16, #3824]
  402180:	add	x16, x16, #0xef0
  402184:	br	x17

0000000000402188 <internal_hashmap_size@plt>:
  402188:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40218c:	ldr	x17, [x16, #3832]
  402190:	add	x16, x16, #0xef8
  402194:	br	x17

0000000000402198 <internal_hashmap_contains@plt>:
  402198:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40219c:	ldr	x17, [x16, #3840]
  4021a0:	add	x16, x16, #0xf00
  4021a4:	br	x17

00000000004021a8 <sd_network_monitor_flush@plt>:
  4021a8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4021ac:	ldr	x17, [x16, #3848]
  4021b0:	add	x16, x16, #0xf08
  4021b4:	br	x17

00000000004021b8 <sd_event_exit@plt>:
  4021b8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4021bc:	ldr	x17, [x16, #3856]
  4021c0:	add	x16, x16, #0xf10
  4021c4:	br	x17

00000000004021c8 <sd_netlink_message_unref@plt>:
  4021c8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4021cc:	ldr	x17, [x16, #3864]
  4021d0:	add	x16, x16, #0xf18
  4021d4:	br	x17

00000000004021d8 <sd_netlink_message_get_type@plt>:
  4021d8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4021dc:	ldr	x17, [x16, #3872]
  4021e0:	add	x16, x16, #0xf20
  4021e4:	br	x17

00000000004021e8 <sd_rtnl_message_link_get_ifindex@plt>:
  4021e8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4021ec:	ldr	x17, [x16, #3880]
  4021f0:	add	x16, x16, #0xf28
  4021f4:	br	x17

00000000004021f8 <ask_password_agent_close@plt>:
  4021f8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4021fc:	ldr	x17, [x16, #3888]
  402200:	add	x16, x16, #0xf30
  402204:	br	x17

0000000000402208 <polkit_agent_close@plt>:
  402208:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40220c:	ldr	x17, [x16, #3896]
  402210:	add	x16, x16, #0xf38
  402214:	br	x17

0000000000402218 <pager_close@plt>:
  402218:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40221c:	ldr	x17, [x16, #3904]
  402220:	add	x16, x16, #0xf40
  402224:	br	x17

0000000000402228 <mac_selinux_finish@plt>:
  402228:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40222c:	ldr	x17, [x16, #3912]
  402230:	add	x16, x16, #0xf48
  402234:	br	x17

0000000000402238 <log_setup_service@plt>:
  402238:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40223c:	ldr	x17, [x16, #3920]
  402240:	add	x16, x16, #0xf50
  402244:	br	x17

0000000000402248 <umask@plt>:
  402248:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40224c:	ldr	x17, [x16, #3928]
  402250:	add	x16, x16, #0xf58
  402254:	br	x17

0000000000402258 <log_set_max_level_realm@plt>:
  402258:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40225c:	ldr	x17, [x16, #3936]
  402260:	add	x16, x16, #0xf60
  402264:	br	x17

0000000000402268 <sigprocmask_many@plt>:
  402268:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40226c:	ldr	x17, [x16, #3944]
  402270:	add	x16, x16, #0xf68
  402274:	br	x17

0000000000402278 <sd_event_loop@plt>:
  402278:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40227c:	ldr	x17, [x16, #3952]
  402280:	add	x16, x16, #0xf70
  402284:	br	x17

0000000000402288 <strv_free@plt>:
  402288:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40228c:	ldr	x17, [x16, #3960]
  402290:	add	x16, x16, #0xf78
  402294:	br	x17

0000000000402298 <sd_notify@plt>:
  402298:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40229c:	ldr	x17, [x16, #3968]
  4022a0:	add	x16, x16, #0xf80
  4022a4:	br	x17

00000000004022a8 <getopt_long@plt>:
  4022a8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4022ac:	ldr	x17, [x16, #3976]
  4022b0:	add	x16, x16, #0xf88
  4022b4:	br	x17

00000000004022b8 <version@plt>:
  4022b8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4022bc:	ldr	x17, [x16, #3984]
  4022c0:	add	x16, x16, #0xf90
  4022c4:	br	x17

00000000004022c8 <strv_extend@plt>:
  4022c8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4022cc:	ldr	x17, [x16, #3992]
  4022d0:	add	x16, x16, #0xf98
  4022d4:	br	x17

00000000004022d8 <log_oom_internal@plt>:
  4022d8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4022dc:	ldr	x17, [x16, #4000]
  4022e0:	add	x16, x16, #0xfa0
  4022e4:	br	x17

00000000004022e8 <parse_sec@plt>:
  4022e8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4022ec:	ldr	x17, [x16, #4008]
  4022f0:	add	x16, x16, #0xfa8
  4022f4:	br	x17

00000000004022f8 <log_assert_failed_unreachable_realm@plt>:
  4022f8:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  4022fc:	ldr	x17, [x16, #4016]
  402300:	add	x16, x16, #0xfb0
  402304:	br	x17

0000000000402308 <terminal_urlify_man@plt>:
  402308:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40230c:	ldr	x17, [x16, #4024]
  402310:	add	x16, x16, #0xfb8
  402314:	br	x17

0000000000402318 <printf@plt>:
  402318:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40231c:	ldr	x17, [x16, #4032]
  402320:	add	x16, x16, #0xfc0
  402324:	br	x17

0000000000402328 <strchr@plt>:
  402328:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40232c:	ldr	x17, [x16, #4040]
  402330:	add	x16, x16, #0xfc8
  402334:	br	x17

0000000000402338 <strndup@plt>:
  402338:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40233c:	ldr	x17, [x16, #4048]
  402340:	add	x16, x16, #0xfd0
  402344:	br	x17

0000000000402348 <ifname_valid@plt>:
  402348:	adrp	x16, 41f000 <__FRAME_END__+0x18230>
  40234c:	ldr	x17, [x16, #4056]
  402350:	add	x16, x16, #0xfd8
  402354:	br	x17

Disassembly of section .text:

0000000000402358 <_start>:
  402358:	mov	x29, #0x0                   	// #0
  40235c:	mov	x30, #0x0                   	// #0
  402360:	mov	x5, x0
  402364:	ldr	x1, [sp]
  402368:	add	x2, sp, #0x8
  40236c:	mov	x6, sp
  402370:	movz	x0, #0x0, lsl #48
  402374:	movk	x0, #0x0, lsl #32
  402378:	movk	x0, #0x40, lsl #16
  40237c:	movk	x0, #0x4f90
  402380:	movz	x3, #0x0, lsl #48
  402384:	movk	x3, #0x0, lsl #32
  402388:	movk	x3, #0x40, lsl #16
  40238c:	movk	x3, #0x5ee0
  402390:	movz	x4, #0x0, lsl #48
  402394:	movk	x4, #0x0, lsl #32
  402398:	movk	x4, #0x40, lsl #16
  40239c:	movk	x4, #0x5f60
  4023a0:	bl	401e58 <__libc_start_main@plt>
  4023a4:	bl	401e68 <abort@plt>

00000000004023a8 <call_weak_fn>:
  4023a8:	adrp	x0, 41f000 <__FRAME_END__+0x18230>
  4023ac:	ldr	x0, [x0, #3376]
  4023b0:	cbz	x0, 4023b8 <call_weak_fn+0x10>
  4023b4:	b	401e78 <__gmon_start__@plt>
  4023b8:	ret

00000000004023bc <deregister_tm_clones>:
  4023bc:	stp	x29, x30, [sp, #-32]!
  4023c0:	mov	x29, sp
  4023c4:	adrp	x0, 420000 <__TMC_END__>
  4023c8:	add	x0, x0, #0x0
  4023cc:	str	x0, [sp, #24]
  4023d0:	ldr	x0, [sp, #24]
  4023d4:	str	x0, [sp, #24]
  4023d8:	ldr	x1, [sp, #24]
  4023dc:	adrp	x0, 420000 <__TMC_END__>
  4023e0:	add	x0, x0, #0x0
  4023e4:	cmp	x1, x0
  4023e8:	b.eq	402424 <deregister_tm_clones+0x68>  // b.none
  4023ec:	adrp	x0, 405000 <main+0x70>
  4023f0:	add	x0, x0, #0xf78
  4023f4:	ldr	x0, [x0]
  4023f8:	str	x0, [sp, #16]
  4023fc:	ldr	x0, [sp, #16]
  402400:	str	x0, [sp, #16]
  402404:	ldr	x0, [sp, #16]
  402408:	cmp	x0, #0x0
  40240c:	b.eq	402428 <deregister_tm_clones+0x6c>  // b.none
  402410:	ldr	x1, [sp, #16]
  402414:	adrp	x0, 420000 <__TMC_END__>
  402418:	add	x0, x0, #0x0
  40241c:	blr	x1
  402420:	b	402428 <deregister_tm_clones+0x6c>
  402424:	nop
  402428:	ldp	x29, x30, [sp], #32
  40242c:	ret

0000000000402430 <register_tm_clones>:
  402430:	stp	x29, x30, [sp, #-48]!
  402434:	mov	x29, sp
  402438:	adrp	x0, 420000 <__TMC_END__>
  40243c:	add	x0, x0, #0x0
  402440:	str	x0, [sp, #40]
  402444:	ldr	x0, [sp, #40]
  402448:	str	x0, [sp, #40]
  40244c:	ldr	x1, [sp, #40]
  402450:	adrp	x0, 420000 <__TMC_END__>
  402454:	add	x0, x0, #0x0
  402458:	sub	x0, x1, x0
  40245c:	asr	x0, x0, #3
  402460:	lsr	x1, x0, #63
  402464:	add	x0, x1, x0
  402468:	asr	x0, x0, #1
  40246c:	str	x0, [sp, #32]
  402470:	ldr	x0, [sp, #32]
  402474:	cmp	x0, #0x0
  402478:	b.eq	4024b8 <register_tm_clones+0x88>  // b.none
  40247c:	adrp	x0, 405000 <main+0x70>
  402480:	add	x0, x0, #0xf80
  402484:	ldr	x0, [x0]
  402488:	str	x0, [sp, #24]
  40248c:	ldr	x0, [sp, #24]
  402490:	str	x0, [sp, #24]
  402494:	ldr	x0, [sp, #24]
  402498:	cmp	x0, #0x0
  40249c:	b.eq	4024bc <register_tm_clones+0x8c>  // b.none
  4024a0:	ldr	x2, [sp, #24]
  4024a4:	ldr	x1, [sp, #32]
  4024a8:	adrp	x0, 420000 <__TMC_END__>
  4024ac:	add	x0, x0, #0x0
  4024b0:	blr	x2
  4024b4:	b	4024bc <register_tm_clones+0x8c>
  4024b8:	nop
  4024bc:	ldp	x29, x30, [sp], #48
  4024c0:	ret

00000000004024c4 <__do_global_dtors_aux>:
  4024c4:	stp	x29, x30, [sp, #-16]!
  4024c8:	mov	x29, sp
  4024cc:	adrp	x0, 420000 <__TMC_END__>
  4024d0:	add	x0, x0, #0x28
  4024d4:	ldrb	w0, [x0]
  4024d8:	and	x0, x0, #0xff
  4024dc:	cmp	x0, #0x0
  4024e0:	b.ne	4024fc <__do_global_dtors_aux+0x38>  // b.any
  4024e4:	bl	4023bc <deregister_tm_clones>
  4024e8:	adrp	x0, 420000 <__TMC_END__>
  4024ec:	add	x0, x0, #0x28
  4024f0:	mov	w1, #0x1                   	// #1
  4024f4:	strb	w1, [x0]
  4024f8:	b	402500 <__do_global_dtors_aux+0x3c>
  4024fc:	nop
  402500:	ldp	x29, x30, [sp], #16
  402504:	ret

0000000000402508 <frame_dummy>:
  402508:	stp	x29, x30, [sp, #-16]!
  40250c:	mov	x29, sp
  402510:	bl	402430 <register_tm_clones>
  402514:	nop
  402518:	ldp	x29, x30, [sp], #16
  40251c:	ret

0000000000402520 <link_new>:
  402520:	sub	sp, sp, #0xb0
  402524:	stp	x29, x30, [sp, #160]
  402528:	add	x29, sp, #0xa0
  40252c:	mov	x8, xzr
  402530:	adrp	x9, 405000 <main+0x70>
  402534:	add	x9, x9, #0xf8a
  402538:	add	x9, x9, #0x3
  40253c:	stur	x0, [x29, #-16]
  402540:	stur	x1, [x29, #-24]
  402544:	stur	w2, [x29, #-28]
  402548:	stur	x3, [x29, #-40]
  40254c:	stur	x8, [x29, #-48]
  402550:	stur	x8, [x29, #-56]
  402554:	str	x9, [sp, #8]
  402558:	ldur	x8, [x29, #-16]
  40255c:	cmp	x8, #0x0
  402560:	cset	w9, ne  // ne = any
  402564:	mov	w10, #0x1                   	// #1
  402568:	eor	w9, w9, #0x1
  40256c:	eor	w9, w9, w10
  402570:	eor	w9, w9, w10
  402574:	and	w9, w9, #0x1
  402578:	mov	w0, w9
  40257c:	sxtw	x8, w0
  402580:	cbz	x8, 4025a8 <link_new+0x88>
  402584:	mov	w8, wzr
  402588:	mov	w0, w8
  40258c:	adrp	x1, 405000 <main+0x70>
  402590:	add	x1, x1, #0xf88
  402594:	ldr	x2, [sp, #8]
  402598:	mov	w3, #0x10                  	// #16
  40259c:	adrp	x4, 405000 <main+0x70>
  4025a0:	add	x4, x4, #0xfac
  4025a4:	bl	401e88 <log_assert_failed_realm@plt>
  4025a8:	ldur	w8, [x29, #-28]
  4025ac:	cmp	w8, #0x0
  4025b0:	cset	w8, gt
  4025b4:	mov	w9, #0x1                   	// #1
  4025b8:	eor	w8, w8, #0x1
  4025bc:	eor	w8, w8, w9
  4025c0:	eor	w8, w8, w9
  4025c4:	and	w8, w8, #0x1
  4025c8:	mov	w0, w8
  4025cc:	sxtw	x10, w0
  4025d0:	cbz	x10, 4025f8 <link_new+0xd8>
  4025d4:	mov	w8, wzr
  4025d8:	mov	w0, w8
  4025dc:	adrp	x1, 405000 <main+0x70>
  4025e0:	add	x1, x1, #0xfe0
  4025e4:	ldr	x2, [sp, #8]
  4025e8:	mov	w3, #0x11                  	// #17
  4025ec:	adrp	x4, 405000 <main+0x70>
  4025f0:	add	x4, x4, #0xfac
  4025f4:	bl	401e88 <log_assert_failed_realm@plt>
  4025f8:	ldur	x0, [x29, #-16]
  4025fc:	mov	x8, xzr
  402600:	mov	x1, x8
  402604:	bl	401e98 <internal_hashmap_ensure_allocated@plt>
  402608:	stur	w0, [x29, #-60]
  40260c:	ldur	w9, [x29, #-60]
  402610:	cmp	w9, #0x0
  402614:	cset	w9, ge  // ge = tcont
  402618:	tbnz	w9, #0, 402630 <link_new+0x110>
  40261c:	ldur	w8, [x29, #-60]
  402620:	stur	w8, [x29, #-4]
  402624:	mov	w8, #0x1                   	// #1
  402628:	stur	w8, [x29, #-64]
  40262c:	b	4027d8 <link_new+0x2b8>
  402630:	ldur	x8, [x29, #-16]
  402634:	add	x0, x8, #0x8
  402638:	adrp	x1, 41f000 <__FRAME_END__+0x18230>
  40263c:	add	x1, x1, #0xfe0
  402640:	bl	401e98 <internal_hashmap_ensure_allocated@plt>
  402644:	stur	w0, [x29, #-60]
  402648:	ldur	w9, [x29, #-60]
  40264c:	cmp	w9, #0x0
  402650:	cset	w9, ge  // ge = tcont
  402654:	tbnz	w9, #0, 40266c <link_new+0x14c>
  402658:	ldur	w8, [x29, #-60]
  40265c:	stur	w8, [x29, #-4]
  402660:	mov	w8, #0x1                   	// #1
  402664:	stur	w8, [x29, #-64]
  402668:	b	4027d8 <link_new+0x2b8>
  40266c:	ldur	x0, [x29, #-40]
  402670:	bl	401ea8 <strdup@plt>
  402674:	stur	x0, [x29, #-56]
  402678:	ldur	x8, [x29, #-56]
  40267c:	cbnz	x8, 402694 <link_new+0x174>
  402680:	mov	w8, #0xfffffff4            	// #-12
  402684:	stur	w8, [x29, #-4]
  402688:	mov	w8, #0x1                   	// #1
  40268c:	stur	w8, [x29, #-64]
  402690:	b	4027d8 <link_new+0x2b8>
  402694:	mov	x0, #0x30                  	// #48
  402698:	mov	x1, #0x1                   	// #1
  40269c:	bl	402854 <malloc_multiply>
  4026a0:	stur	x0, [x29, #-48]
  4026a4:	ldur	x8, [x29, #-48]
  4026a8:	cbnz	x8, 4026c0 <link_new+0x1a0>
  4026ac:	mov	w8, #0xfffffff4            	// #-12
  4026b0:	stur	w8, [x29, #-4]
  4026b4:	mov	w8, #0x1                   	// #1
  4026b8:	stur	w8, [x29, #-64]
  4026bc:	b	4027d8 <link_new+0x2b8>
  4026c0:	ldur	x0, [x29, #-48]
  4026c4:	ldur	x8, [x29, #-16]
  4026c8:	add	x9, sp, #0x30
  4026cc:	str	x8, [sp, #48]
  4026d0:	ldur	w10, [x29, #-28]
  4026d4:	str	w10, [sp, #56]
  4026d8:	ldur	x8, [x29, #-56]
  4026dc:	str	x8, [sp, #40]
  4026e0:	mov	x8, xzr
  4026e4:	stur	x8, [x29, #-56]
  4026e8:	ldr	x11, [sp, #40]
  4026ec:	str	x11, [sp, #32]
  4026f0:	ldr	x11, [sp, #32]
  4026f4:	str	x11, [x9, #16]
  4026f8:	str	wzr, [sp, #72]
  4026fc:	mov	w10, #0x0                   	// #0
  402700:	strb	w10, [x9, #28]
  402704:	mov	w10, #0x5                   	// #5
  402708:	str	w10, [sp, #80]
  40270c:	str	wzr, [sp, #84]
  402710:	str	x8, [x9, #40]
  402714:	mov	x1, x9
  402718:	mov	x2, #0x30                  	// #48
  40271c:	bl	401eb8 <memcpy@plt>
  402720:	ldur	x8, [x29, #-16]
  402724:	ldr	x0, [x8, #8]
  402728:	ldur	x8, [x29, #-48]
  40272c:	ldr	x1, [x8, #16]
  402730:	ldur	x2, [x29, #-48]
  402734:	bl	401ec8 <hashmap_put@plt>
  402738:	stur	w0, [x29, #-60]
  40273c:	ldur	w10, [x29, #-60]
  402740:	cmp	w10, #0x0
  402744:	cset	w10, ge  // ge = tcont
  402748:	tbnz	w10, #0, 402760 <link_new+0x240>
  40274c:	ldur	w8, [x29, #-60]
  402750:	stur	w8, [x29, #-4]
  402754:	mov	w8, #0x1                   	// #1
  402758:	stur	w8, [x29, #-64]
  40275c:	b	4027d8 <link_new+0x2b8>
  402760:	ldur	x8, [x29, #-16]
  402764:	ldr	x0, [x8]
  402768:	ldursw	x8, [x29, #-28]
  40276c:	ldur	x2, [x29, #-48]
  402770:	mov	x1, x8
  402774:	bl	401ec8 <hashmap_put@plt>
  402778:	stur	w0, [x29, #-60]
  40277c:	ldur	w9, [x29, #-60]
  402780:	cmp	w9, #0x0
  402784:	cset	w9, ge  // ge = tcont
  402788:	tbnz	w9, #0, 4027a0 <link_new+0x280>
  40278c:	ldur	w8, [x29, #-60]
  402790:	stur	w8, [x29, #-4]
  402794:	mov	w8, #0x1                   	// #1
  402798:	stur	w8, [x29, #-64]
  40279c:	b	4027d8 <link_new+0x2b8>
  4027a0:	ldur	x8, [x29, #-24]
  4027a4:	cbz	x8, 4027b4 <link_new+0x294>
  4027a8:	ldur	x8, [x29, #-48]
  4027ac:	ldur	x9, [x29, #-24]
  4027b0:	str	x8, [x9]
  4027b4:	ldur	x8, [x29, #-48]
  4027b8:	str	x8, [sp, #24]
  4027bc:	mov	x8, xzr
  4027c0:	stur	x8, [x29, #-48]
  4027c4:	ldr	x8, [sp, #24]
  4027c8:	str	x8, [sp, #16]
  4027cc:	stur	wzr, [x29, #-4]
  4027d0:	mov	w9, #0x1                   	// #1
  4027d4:	stur	w9, [x29, #-64]
  4027d8:	sub	x0, x29, #0x38
  4027dc:	bl	40282c <freep>
  4027e0:	sub	x0, x29, #0x30
  4027e4:	bl	4027f8 <link_freep>
  4027e8:	ldur	w0, [x29, #-4]
  4027ec:	ldp	x29, x30, [sp, #160]
  4027f0:	add	sp, sp, #0xb0
  4027f4:	ret

00000000004027f8 <link_freep>:
  4027f8:	sub	sp, sp, #0x20
  4027fc:	stp	x29, x30, [sp, #16]
  402800:	add	x29, sp, #0x10
  402804:	str	x0, [sp, #8]
  402808:	ldr	x8, [sp, #8]
  40280c:	ldr	x8, [x8]
  402810:	cbz	x8, 402820 <link_freep+0x28>
  402814:	ldr	x8, [sp, #8]
  402818:	ldr	x0, [x8]
  40281c:	bl	4028d0 <link_free>
  402820:	ldp	x29, x30, [sp, #16]
  402824:	add	sp, sp, #0x20
  402828:	ret

000000000040282c <freep>:
  40282c:	sub	sp, sp, #0x20
  402830:	stp	x29, x30, [sp, #16]
  402834:	add	x29, sp, #0x10
  402838:	str	x0, [sp, #8]
  40283c:	ldr	x8, [sp, #8]
  402840:	ldr	x0, [x8]
  402844:	bl	401ed8 <free@plt>
  402848:	ldp	x29, x30, [sp, #16]
  40284c:	add	sp, sp, #0x20
  402850:	ret

0000000000402854 <malloc_multiply>:
  402854:	sub	sp, sp, #0x40
  402858:	stp	x29, x30, [sp, #48]
  40285c:	add	x29, sp, #0x30
  402860:	stur	x0, [x29, #-16]
  402864:	str	x1, [sp, #24]
  402868:	ldur	x0, [x29, #-16]
  40286c:	ldr	x1, [sp, #24]
  402870:	bl	403258 <size_multiply_overflow>
  402874:	tbnz	w0, #0, 40287c <malloc_multiply+0x28>
  402878:	b	402888 <malloc_multiply+0x34>
  40287c:	mov	x8, xzr
  402880:	stur	x8, [x29, #-8]
  402884:	b	4028c0 <malloc_multiply+0x6c>
  402888:	ldur	x8, [x29, #-16]
  40288c:	ldr	x9, [sp, #24]
  402890:	mul	x8, x8, x9
  402894:	str	x8, [sp, #16]
  402898:	cbz	x8, 4028a8 <malloc_multiply+0x54>
  40289c:	ldr	x8, [sp, #16]
  4028a0:	str	x8, [sp, #8]
  4028a4:	b	4028b0 <malloc_multiply+0x5c>
  4028a8:	mov	x8, #0x1                   	// #1
  4028ac:	str	x8, [sp, #8]
  4028b0:	ldr	x8, [sp, #8]
  4028b4:	mov	x0, x8
  4028b8:	bl	401ee8 <malloc@plt>
  4028bc:	stur	x0, [x29, #-8]
  4028c0:	ldur	x0, [x29, #-8]
  4028c4:	ldp	x29, x30, [sp, #48]
  4028c8:	add	sp, sp, #0x40
  4028cc:	ret

00000000004028d0 <link_free>:
  4028d0:	sub	sp, sp, #0x20
  4028d4:	stp	x29, x30, [sp, #16]
  4028d8:	add	x29, sp, #0x10
  4028dc:	str	x0, [sp]
  4028e0:	ldr	x8, [sp]
  4028e4:	cbnz	x8, 4028f4 <link_free+0x24>
  4028e8:	mov	x8, xzr
  4028ec:	str	x8, [sp, #8]
  4028f0:	b	40295c <link_free+0x8c>
  4028f4:	ldr	x8, [sp]
  4028f8:	ldr	x8, [x8]
  4028fc:	cbz	x8, 402938 <link_free+0x68>
  402900:	ldr	x8, [sp]
  402904:	ldr	x8, [x8]
  402908:	ldr	x0, [x8]
  40290c:	ldr	x8, [sp]
  402910:	ldrsw	x8, [x8, #8]
  402914:	mov	x1, x8
  402918:	bl	40296c <hashmap_remove>
  40291c:	ldr	x8, [sp]
  402920:	ldr	x8, [x8]
  402924:	ldr	x8, [x8, #8]
  402928:	ldr	x9, [sp]
  40292c:	ldr	x1, [x9, #16]
  402930:	mov	x0, x8
  402934:	bl	40296c <hashmap_remove>
  402938:	ldr	x8, [sp]
  40293c:	ldr	x0, [x8, #40]
  402940:	bl	401ed8 <free@plt>
  402944:	ldr	x8, [sp]
  402948:	ldr	x0, [x8, #16]
  40294c:	bl	401ed8 <free@plt>
  402950:	ldr	x0, [sp]
  402954:	bl	402998 <mfree>
  402958:	str	x0, [sp, #8]
  40295c:	ldr	x0, [sp, #8]
  402960:	ldp	x29, x30, [sp, #16]
  402964:	add	sp, sp, #0x20
  402968:	ret

000000000040296c <hashmap_remove>:
  40296c:	sub	sp, sp, #0x20
  402970:	stp	x29, x30, [sp, #16]
  402974:	add	x29, sp, #0x10
  402978:	str	x0, [sp, #8]
  40297c:	str	x1, [sp]
  402980:	ldr	x0, [sp, #8]
  402984:	ldr	x1, [sp]
  402988:	bl	401ef8 <internal_hashmap_remove@plt>
  40298c:	ldp	x29, x30, [sp, #16]
  402990:	add	sp, sp, #0x20
  402994:	ret

0000000000402998 <mfree>:
  402998:	sub	sp, sp, #0x20
  40299c:	stp	x29, x30, [sp, #16]
  4029a0:	add	x29, sp, #0x10
  4029a4:	mov	x8, xzr
  4029a8:	str	x0, [sp, #8]
  4029ac:	ldr	x0, [sp, #8]
  4029b0:	str	x8, [sp]
  4029b4:	bl	401ed8 <free@plt>
  4029b8:	ldr	x0, [sp]
  4029bc:	ldp	x29, x30, [sp, #16]
  4029c0:	add	sp, sp, #0x20
  4029c4:	ret

00000000004029c8 <link_update_rtnl>:
  4029c8:	sub	sp, sp, #0x60
  4029cc:	stp	x29, x30, [sp, #80]
  4029d0:	add	x29, sp, #0x50
  4029d4:	adrp	x8, 405000 <main+0x70>
  4029d8:	add	x8, x8, #0xf8a
  4029dc:	add	x8, x8, #0x3
  4029e0:	adrp	x9, 405000 <main+0x70>
  4029e4:	add	x9, x9, #0xfee
  4029e8:	stur	x0, [x29, #-16]
  4029ec:	stur	x1, [x29, #-24]
  4029f0:	str	x8, [sp, #16]
  4029f4:	str	x9, [sp, #8]
  4029f8:	ldur	x8, [x29, #-16]
  4029fc:	cmp	x8, #0x0
  402a00:	cset	w9, ne  // ne = any
  402a04:	mov	w10, #0x1                   	// #1
  402a08:	eor	w9, w9, #0x1
  402a0c:	eor	w9, w9, w10
  402a10:	eor	w9, w9, w10
  402a14:	and	w9, w9, #0x1
  402a18:	mov	w0, w9
  402a1c:	sxtw	x8, w0
  402a20:	cbz	x8, 402a44 <link_update_rtnl+0x7c>
  402a24:	mov	w8, wzr
  402a28:	mov	w0, w8
  402a2c:	adrp	x1, 405000 <main+0x70>
  402a30:	add	x1, x1, #0xfec
  402a34:	ldr	x2, [sp, #16]
  402a38:	mov	w3, #0x4c                  	// #76
  402a3c:	ldr	x4, [sp, #8]
  402a40:	bl	401e88 <log_assert_failed_realm@plt>
  402a44:	ldur	x8, [x29, #-16]
  402a48:	ldr	x8, [x8]
  402a4c:	cmp	x8, #0x0
  402a50:	cset	w9, ne  // ne = any
  402a54:	mov	w10, #0x1                   	// #1
  402a58:	eor	w9, w9, #0x1
  402a5c:	eor	w9, w9, w10
  402a60:	eor	w9, w9, w10
  402a64:	and	w9, w9, #0x1
  402a68:	mov	w0, w9
  402a6c:	sxtw	x8, w0
  402a70:	cbz	x8, 402a94 <link_update_rtnl+0xcc>
  402a74:	mov	w8, wzr
  402a78:	mov	w0, w8
  402a7c:	adrp	x1, 406000 <_fini+0x9c>
  402a80:	add	x1, x1, #0x21
  402a84:	ldr	x2, [sp, #16]
  402a88:	mov	w3, #0x4d                  	// #77
  402a8c:	ldr	x4, [sp, #8]
  402a90:	bl	401e88 <log_assert_failed_realm@plt>
  402a94:	ldur	x8, [x29, #-24]
  402a98:	cmp	x8, #0x0
  402a9c:	cset	w9, ne  // ne = any
  402aa0:	mov	w10, #0x1                   	// #1
  402aa4:	eor	w9, w9, #0x1
  402aa8:	eor	w9, w9, w10
  402aac:	eor	w9, w9, w10
  402ab0:	and	w9, w9, #0x1
  402ab4:	mov	w0, w9
  402ab8:	sxtw	x8, w0
  402abc:	cbz	x8, 402ae0 <link_update_rtnl+0x118>
  402ac0:	mov	w8, wzr
  402ac4:	mov	w0, w8
  402ac8:	adrp	x1, 405000 <main+0x70>
  402acc:	add	x1, x1, #0xf88
  402ad0:	ldr	x2, [sp, #16]
  402ad4:	mov	w3, #0x4e                  	// #78
  402ad8:	ldr	x4, [sp, #8]
  402adc:	bl	401e88 <log_assert_failed_realm@plt>
  402ae0:	ldur	x0, [x29, #-24]
  402ae4:	ldur	x8, [x29, #-16]
  402ae8:	add	x1, x8, #0x18
  402aec:	bl	401f08 <sd_rtnl_message_link_get_flags@plt>
  402af0:	stur	w0, [x29, #-36]
  402af4:	ldur	w9, [x29, #-36]
  402af8:	cmp	w9, #0x0
  402afc:	cset	w9, ge  // ge = tcont
  402b00:	tbnz	w9, #0, 402b10 <link_update_rtnl+0x148>
  402b04:	ldur	w8, [x29, #-36]
  402b08:	stur	w8, [x29, #-4]
  402b0c:	b	402c3c <link_update_rtnl+0x274>
  402b10:	ldur	x0, [x29, #-24]
  402b14:	mov	w1, #0x3                   	// #3
  402b18:	sub	x2, x29, #0x20
  402b1c:	bl	401f18 <sd_netlink_message_read_string@plt>
  402b20:	stur	w0, [x29, #-36]
  402b24:	ldur	w8, [x29, #-36]
  402b28:	cmp	w8, #0x0
  402b2c:	cset	w8, ge  // ge = tcont
  402b30:	tbnz	w8, #0, 402b40 <link_update_rtnl+0x178>
  402b34:	ldur	w8, [x29, #-36]
  402b38:	stur	w8, [x29, #-4]
  402b3c:	b	402c3c <link_update_rtnl+0x274>
  402b40:	ldur	x8, [x29, #-16]
  402b44:	ldr	x0, [x8, #16]
  402b48:	ldur	x1, [x29, #-32]
  402b4c:	bl	401f28 <strcmp@plt>
  402b50:	cbz	w0, 402c38 <link_update_rtnl+0x270>
  402b54:	ldur	x0, [x29, #-32]
  402b58:	bl	401ea8 <strdup@plt>
  402b5c:	str	x0, [sp, #32]
  402b60:	ldr	x8, [sp, #32]
  402b64:	cbnz	x8, 402b74 <link_update_rtnl+0x1ac>
  402b68:	mov	w8, #0xfffffff4            	// #-12
  402b6c:	stur	w8, [x29, #-4]
  402b70:	b	402c3c <link_update_rtnl+0x274>
  402b74:	ldur	x8, [x29, #-16]
  402b78:	ldr	x8, [x8]
  402b7c:	ldr	x0, [x8, #8]
  402b80:	ldur	x8, [x29, #-16]
  402b84:	ldr	x1, [x8, #16]
  402b88:	bl	40296c <hashmap_remove>
  402b8c:	ldur	x8, [x29, #-16]
  402b90:	cmp	x0, x8
  402b94:	cset	w9, eq  // eq = none
  402b98:	mov	w10, #0x1                   	// #1
  402b9c:	eor	w9, w9, #0x1
  402ba0:	eor	w9, w9, w10
  402ba4:	eor	w9, w9, w10
  402ba8:	and	w9, w9, #0x1
  402bac:	mov	w0, w9
  402bb0:	sxtw	x8, w0
  402bb4:	cbz	x8, 402bd8 <link_update_rtnl+0x210>
  402bb8:	mov	w8, wzr
  402bbc:	mov	w0, w8
  402bc0:	adrp	x1, 406000 <_fini+0x9c>
  402bc4:	add	x1, x1, #0x2c
  402bc8:	ldr	x2, [sp, #16]
  402bcc:	mov	w3, #0x5f                  	// #95
  402bd0:	ldr	x4, [sp, #8]
  402bd4:	bl	401e88 <log_assert_failed_realm@plt>
  402bd8:	ldur	x8, [x29, #-16]
  402bdc:	ldr	x0, [x8, #16]
  402be0:	bl	401ed8 <free@plt>
  402be4:	ldr	x8, [sp, #32]
  402be8:	ldur	x9, [x29, #-16]
  402bec:	str	x8, [x9, #16]
  402bf0:	mov	x8, xzr
  402bf4:	str	x8, [sp, #32]
  402bf8:	str	wzr, [sp, #28]
  402bfc:	ldur	x8, [x29, #-16]
  402c00:	ldr	x8, [x8]
  402c04:	ldr	x0, [x8, #8]
  402c08:	ldur	x8, [x29, #-16]
  402c0c:	ldr	x1, [x8, #16]
  402c10:	ldur	x2, [x29, #-16]
  402c14:	bl	401ec8 <hashmap_put@plt>
  402c18:	stur	w0, [x29, #-36]
  402c1c:	ldur	w10, [x29, #-36]
  402c20:	cmp	w10, #0x0
  402c24:	cset	w10, ge  // ge = tcont
  402c28:	tbnz	w10, #0, 402c38 <link_update_rtnl+0x270>
  402c2c:	ldur	w8, [x29, #-36]
  402c30:	stur	w8, [x29, #-4]
  402c34:	b	402c3c <link_update_rtnl+0x274>
  402c38:	stur	wzr, [x29, #-4]
  402c3c:	ldur	w0, [x29, #-4]
  402c40:	ldp	x29, x30, [sp, #80]
  402c44:	add	sp, sp, #0x60
  402c48:	ret

0000000000402c4c <link_update_monitor>:
  402c4c:	sub	sp, sp, #0xf0
  402c50:	stp	x29, x30, [sp, #224]
  402c54:	add	x29, sp, #0xe0
  402c58:	mov	x8, xzr
  402c5c:	adrp	x9, 405000 <main+0x70>
  402c60:	add	x9, x9, #0xf8a
  402c64:	add	x9, x9, #0x3
  402c68:	adrp	x10, 406000 <_fini+0x9c>
  402c6c:	add	x10, x10, #0x90
  402c70:	adrp	x11, 406000 <_fini+0x9c>
  402c74:	add	x11, x11, #0xa4
  402c78:	stur	x0, [x29, #-8]
  402c7c:	stur	x8, [x29, #-16]
  402c80:	stur	x8, [x29, #-24]
  402c84:	stur	x8, [x29, #-32]
  402c88:	stur	wzr, [x29, #-44]
  402c8c:	str	x9, [sp, #72]
  402c90:	str	x10, [sp, #64]
  402c94:	str	x11, [sp, #56]
  402c98:	ldur	x8, [x29, #-8]
  402c9c:	cmp	x8, #0x0
  402ca0:	cset	w9, ne  // ne = any
  402ca4:	mov	w10, #0x1                   	// #1
  402ca8:	eor	w9, w9, #0x1
  402cac:	eor	w9, w9, w10
  402cb0:	eor	w9, w9, w10
  402cb4:	and	w9, w9, #0x1
  402cb8:	mov	w0, w9
  402cbc:	sxtw	x8, w0
  402cc0:	cbz	x8, 402ce8 <link_update_monitor+0x9c>
  402cc4:	mov	w8, wzr
  402cc8:	mov	w0, w8
  402ccc:	adrp	x1, 405000 <main+0x70>
  402cd0:	add	x1, x1, #0xfec
  402cd4:	ldr	x2, [sp, #72]
  402cd8:	mov	w3, #0x6f                  	// #111
  402cdc:	adrp	x4, 406000 <_fini+0x9c>
  402ce0:	add	x4, x4, #0x66
  402ce4:	bl	401e88 <log_assert_failed_realm@plt>
  402ce8:	ldur	x8, [x29, #-8]
  402cec:	ldr	x8, [x8, #16]
  402cf0:	cmp	x8, #0x0
  402cf4:	cset	w9, ne  // ne = any
  402cf8:	mov	w10, #0x1                   	// #1
  402cfc:	eor	w9, w9, #0x1
  402d00:	eor	w9, w9, w10
  402d04:	eor	w9, w9, w10
  402d08:	and	w9, w9, #0x1
  402d0c:	mov	w0, w9
  402d10:	sxtw	x8, w0
  402d14:	cbz	x8, 402d3c <link_update_monitor+0xf0>
  402d18:	mov	w8, wzr
  402d1c:	mov	w0, w8
  402d20:	adrp	x1, 406000 <_fini+0x9c>
  402d24:	add	x1, x1, #0x86
  402d28:	ldr	x2, [sp, #72]
  402d2c:	mov	w3, #0x70                  	// #112
  402d30:	adrp	x4, 406000 <_fini+0x9c>
  402d34:	add	x4, x4, #0x66
  402d38:	bl	401e88 <log_assert_failed_realm@plt>
  402d3c:	ldur	x8, [x29, #-8]
  402d40:	ldr	w0, [x8, #8]
  402d44:	bl	401f38 <sd_network_link_get_required_for_online@plt>
  402d48:	stur	w0, [x29, #-40]
  402d4c:	ldur	w9, [x29, #-40]
  402d50:	cmp	w9, #0x0
  402d54:	cset	w9, ge  // ge = tcont
  402d58:	tbnz	w9, #0, 402dfc <link_update_monitor+0x1b0>
  402d5c:	ldur	x8, [x29, #-8]
  402d60:	stur	x8, [x29, #-56]
  402d64:	ldur	x8, [x29, #-56]
  402d68:	cbz	x8, 402dc4 <link_update_monitor+0x178>
  402d6c:	ldur	x8, [x29, #-56]
  402d70:	ldr	x8, [x8, #16]
  402d74:	cbz	x8, 402dc4 <link_update_monitor+0x178>
  402d78:	ldur	w1, [x29, #-40]
  402d7c:	ldur	x8, [x29, #-56]
  402d80:	ldr	x6, [x8, #16]
  402d84:	mov	w0, #0x7                   	// #7
  402d88:	ldr	x2, [sp, #72]
  402d8c:	mov	w3, #0x75                  	// #117
  402d90:	ldr	x4, [sp, #64]
  402d94:	ldr	x5, [sp, #56]
  402d98:	mov	x8, xzr
  402d9c:	mov	x7, x8
  402da0:	mov	x9, sp
  402da4:	str	x8, [x9]
  402da8:	mov	x8, sp
  402dac:	adrp	x9, 406000 <_fini+0x9c>
  402db0:	add	x9, x9, #0xaf
  402db4:	str	x9, [x8, #8]
  402db8:	bl	401f48 <log_object_internal@plt>
  402dbc:	str	w0, [sp, #52]
  402dc0:	b	402de8 <link_update_monitor+0x19c>
  402dc4:	ldur	w1, [x29, #-40]
  402dc8:	mov	w0, #0x7                   	// #7
  402dcc:	ldr	x2, [sp, #72]
  402dd0:	mov	w3, #0x75                  	// #117
  402dd4:	ldr	x4, [sp, #64]
  402dd8:	adrp	x5, 406000 <_fini+0x9c>
  402ddc:	add	x5, x5, #0xaf
  402de0:	bl	401f58 <log_internal_realm@plt>
  402de4:	str	w0, [sp, #52]
  402de8:	ldr	w8, [sp, #52]
  402dec:	stur	w8, [x29, #-60]
  402df0:	ldur	w8, [x29, #-60]
  402df4:	stur	w8, [x29, #-44]
  402df8:	b	402e14 <link_update_monitor+0x1c8>
  402dfc:	ldur	w8, [x29, #-40]
  402e00:	cmp	w8, #0x0
  402e04:	cset	w8, gt
  402e08:	ldur	x9, [x29, #-8]
  402e0c:	and	w8, w8, #0x1
  402e10:	strb	w8, [x9, #28]
  402e14:	ldur	x8, [x29, #-8]
  402e18:	ldr	w0, [x8, #8]
  402e1c:	sub	x1, x29, #0x18
  402e20:	bl	401f68 <sd_network_link_get_required_operstate_for_online@plt>
  402e24:	stur	w0, [x29, #-40]
  402e28:	ldur	w9, [x29, #-40]
  402e2c:	cmp	w9, #0x0
  402e30:	cset	w9, ge  // ge = tcont
  402e34:	tbnz	w9, #0, 402ed8 <link_update_monitor+0x28c>
  402e38:	ldur	x8, [x29, #-8]
  402e3c:	stur	x8, [x29, #-72]
  402e40:	ldur	x8, [x29, #-72]
  402e44:	cbz	x8, 402ea0 <link_update_monitor+0x254>
  402e48:	ldur	x8, [x29, #-72]
  402e4c:	ldr	x8, [x8, #16]
  402e50:	cbz	x8, 402ea0 <link_update_monitor+0x254>
  402e54:	ldur	w1, [x29, #-40]
  402e58:	ldur	x8, [x29, #-72]
  402e5c:	ldr	x6, [x8, #16]
  402e60:	mov	w0, #0x7                   	// #7
  402e64:	ldr	x2, [sp, #72]
  402e68:	mov	w3, #0x7b                  	// #123
  402e6c:	ldr	x4, [sp, #64]
  402e70:	ldr	x5, [sp, #56]
  402e74:	mov	x8, xzr
  402e78:	mov	x7, x8
  402e7c:	mov	x9, sp
  402e80:	str	x8, [x9]
  402e84:	mov	x8, sp
  402e88:	adrp	x9, 406000 <_fini+0x9c>
  402e8c:	add	x9, x9, #0x100
  402e90:	str	x9, [x8, #8]
  402e94:	bl	401f48 <log_object_internal@plt>
  402e98:	str	w0, [sp, #48]
  402e9c:	b	402ec4 <link_update_monitor+0x278>
  402ea0:	ldur	w1, [x29, #-40]
  402ea4:	mov	w0, #0x7                   	// #7
  402ea8:	ldr	x2, [sp, #72]
  402eac:	mov	w3, #0x7b                  	// #123
  402eb0:	ldr	x4, [sp, #64]
  402eb4:	adrp	x5, 406000 <_fini+0x9c>
  402eb8:	add	x5, x5, #0x100
  402ebc:	bl	401f58 <log_internal_realm@plt>
  402ec0:	str	w0, [sp, #48]
  402ec4:	ldr	w8, [sp, #48]
  402ec8:	stur	w8, [x29, #-76]
  402ecc:	ldur	w8, [x29, #-76]
  402ed0:	stur	w8, [x29, #-44]
  402ed4:	b	402fa8 <link_update_monitor+0x35c>
  402ed8:	ldur	x0, [x29, #-24]
  402edc:	bl	401f78 <link_operstate_from_string@plt>
  402ee0:	stur	w0, [x29, #-36]
  402ee4:	ldur	w8, [x29, #-36]
  402ee8:	cmp	w8, #0x0
  402eec:	cset	w8, ge  // ge = tcont
  402ef0:	tbnz	w8, #0, 402f9c <link_update_monitor+0x350>
  402ef4:	ldur	x8, [x29, #-8]
  402ef8:	stur	x8, [x29, #-88]
  402efc:	ldur	x8, [x29, #-88]
  402f00:	cbz	x8, 402f60 <link_update_monitor+0x314>
  402f04:	ldur	x8, [x29, #-88]
  402f08:	ldr	x8, [x8, #16]
  402f0c:	cbz	x8, 402f60 <link_update_monitor+0x314>
  402f10:	ldur	x8, [x29, #-88]
  402f14:	ldr	x6, [x8, #16]
  402f18:	mov	w0, #0x7                   	// #7
  402f1c:	mov	w1, #0x16                  	// #22
  402f20:	movk	w1, #0x4000, lsl #16
  402f24:	ldr	x2, [sp, #72]
  402f28:	mov	w3, #0x80                  	// #128
  402f2c:	ldr	x4, [sp, #64]
  402f30:	ldr	x5, [sp, #56]
  402f34:	mov	x8, xzr
  402f38:	mov	x7, x8
  402f3c:	mov	x9, sp
  402f40:	str	x8, [x9]
  402f44:	mov	x8, sp
  402f48:	adrp	x9, 406000 <_fini+0x9c>
  402f4c:	add	x9, x9, #0x137
  402f50:	str	x9, [x8, #8]
  402f54:	bl	401f48 <log_object_internal@plt>
  402f58:	str	w0, [sp, #44]
  402f5c:	b	402f88 <link_update_monitor+0x33c>
  402f60:	mov	w0, #0x7                   	// #7
  402f64:	mov	w1, #0x16                  	// #22
  402f68:	movk	w1, #0x4000, lsl #16
  402f6c:	ldr	x2, [sp, #72]
  402f70:	mov	w3, #0x80                  	// #128
  402f74:	ldr	x4, [sp, #64]
  402f78:	adrp	x5, 406000 <_fini+0x9c>
  402f7c:	add	x5, x5, #0x137
  402f80:	bl	401f58 <log_internal_realm@plt>
  402f84:	str	w0, [sp, #44]
  402f88:	ldr	w8, [sp, #44]
  402f8c:	stur	w8, [x29, #-92]
  402f90:	ldur	w8, [x29, #-92]
  402f94:	stur	w8, [x29, #-44]
  402f98:	b	402fa8 <link_update_monitor+0x35c>
  402f9c:	ldur	w8, [x29, #-36]
  402fa0:	ldur	x9, [x29, #-8]
  402fa4:	str	w8, [x9, #32]
  402fa8:	ldur	x8, [x29, #-8]
  402fac:	ldr	w0, [x8, #8]
  402fb0:	sub	x1, x29, #0x10
  402fb4:	bl	401f88 <sd_network_link_get_operational_state@plt>
  402fb8:	stur	w0, [x29, #-40]
  402fbc:	ldur	w9, [x29, #-40]
  402fc0:	cmp	w9, #0x0
  402fc4:	cset	w9, ge  // ge = tcont
  402fc8:	tbnz	w9, #0, 40306c <link_update_monitor+0x420>
  402fcc:	ldur	x8, [x29, #-8]
  402fd0:	stur	x8, [x29, #-104]
  402fd4:	ldur	x8, [x29, #-104]
  402fd8:	cbz	x8, 403034 <link_update_monitor+0x3e8>
  402fdc:	ldur	x8, [x29, #-104]
  402fe0:	ldr	x8, [x8, #16]
  402fe4:	cbz	x8, 403034 <link_update_monitor+0x3e8>
  402fe8:	ldur	w1, [x29, #-40]
  402fec:	ldur	x8, [x29, #-104]
  402ff0:	ldr	x6, [x8, #16]
  402ff4:	mov	w0, #0x7                   	// #7
  402ff8:	ldr	x2, [sp, #72]
  402ffc:	mov	w3, #0x87                  	// #135
  403000:	ldr	x4, [sp, #64]
  403004:	ldr	x5, [sp, #56]
  403008:	mov	x8, xzr
  40300c:	mov	x7, x8
  403010:	mov	x9, sp
  403014:	str	x8, [x9]
  403018:	mov	x8, sp
  40301c:	adrp	x9, 406000 <_fini+0x9c>
  403020:	add	x9, x9, #0x170
  403024:	str	x9, [x8, #8]
  403028:	bl	401f48 <log_object_internal@plt>
  40302c:	str	w0, [sp, #40]
  403030:	b	403058 <link_update_monitor+0x40c>
  403034:	ldur	w1, [x29, #-40]
  403038:	mov	w0, #0x7                   	// #7
  40303c:	ldr	x2, [sp, #72]
  403040:	mov	w3, #0x87                  	// #135
  403044:	ldr	x4, [sp, #64]
  403048:	adrp	x5, 406000 <_fini+0x9c>
  40304c:	add	x5, x5, #0x170
  403050:	bl	401f58 <log_internal_realm@plt>
  403054:	str	w0, [sp, #40]
  403058:	ldr	w8, [sp, #40]
  40305c:	stur	w8, [x29, #-108]
  403060:	ldur	w8, [x29, #-108]
  403064:	stur	w8, [x29, #-44]
  403068:	b	40313c <link_update_monitor+0x4f0>
  40306c:	ldur	x0, [x29, #-16]
  403070:	bl	401f78 <link_operstate_from_string@plt>
  403074:	stur	w0, [x29, #-36]
  403078:	ldur	w8, [x29, #-36]
  40307c:	cmp	w8, #0x0
  403080:	cset	w8, ge  // ge = tcont
  403084:	tbnz	w8, #0, 403130 <link_update_monitor+0x4e4>
  403088:	ldur	x8, [x29, #-8]
  40308c:	str	x8, [sp, #104]
  403090:	ldr	x8, [sp, #104]
  403094:	cbz	x8, 4030f4 <link_update_monitor+0x4a8>
  403098:	ldr	x8, [sp, #104]
  40309c:	ldr	x8, [x8, #16]
  4030a0:	cbz	x8, 4030f4 <link_update_monitor+0x4a8>
  4030a4:	ldr	x8, [sp, #104]
  4030a8:	ldr	x6, [x8, #16]
  4030ac:	mov	w0, #0x7                   	// #7
  4030b0:	mov	w1, #0x16                  	// #22
  4030b4:	movk	w1, #0x4000, lsl #16
  4030b8:	ldr	x2, [sp, #72]
  4030bc:	mov	w3, #0x8c                  	// #140
  4030c0:	ldr	x4, [sp, #64]
  4030c4:	ldr	x5, [sp, #56]
  4030c8:	mov	x8, xzr
  4030cc:	mov	x7, x8
  4030d0:	mov	x9, sp
  4030d4:	str	x8, [x9]
  4030d8:	mov	x8, sp
  4030dc:	adrp	x9, 406000 <_fini+0x9c>
  4030e0:	add	x9, x9, #0x19e
  4030e4:	str	x9, [x8, #8]
  4030e8:	bl	401f48 <log_object_internal@plt>
  4030ec:	str	w0, [sp, #36]
  4030f0:	b	40311c <link_update_monitor+0x4d0>
  4030f4:	mov	w0, #0x7                   	// #7
  4030f8:	mov	w1, #0x16                  	// #22
  4030fc:	movk	w1, #0x4000, lsl #16
  403100:	ldr	x2, [sp, #72]
  403104:	mov	w3, #0x8c                  	// #140
  403108:	ldr	x4, [sp, #64]
  40310c:	adrp	x5, 406000 <_fini+0x9c>
  403110:	add	x5, x5, #0x19e
  403114:	bl	401f58 <log_internal_realm@plt>
  403118:	str	w0, [sp, #36]
  40311c:	ldr	w8, [sp, #36]
  403120:	str	w8, [sp, #100]
  403124:	ldr	w8, [sp, #100]
  403128:	stur	w8, [x29, #-44]
  40312c:	b	40313c <link_update_monitor+0x4f0>
  403130:	ldur	w8, [x29, #-36]
  403134:	ldur	x9, [x29, #-8]
  403138:	str	w8, [x9, #36]
  40313c:	ldur	x8, [x29, #-8]
  403140:	ldr	w0, [x8, #8]
  403144:	sub	x1, x29, #0x20
  403148:	bl	401f98 <sd_network_link_get_setup_state@plt>
  40314c:	stur	w0, [x29, #-40]
  403150:	ldur	w9, [x29, #-40]
  403154:	cmp	w9, #0x0
  403158:	cset	w9, ge  // ge = tcont
  40315c:	tbnz	w9, #0, 403200 <link_update_monitor+0x5b4>
  403160:	ldur	x8, [x29, #-8]
  403164:	str	x8, [sp, #88]
  403168:	ldr	x8, [sp, #88]
  40316c:	cbz	x8, 4031c8 <link_update_monitor+0x57c>
  403170:	ldr	x8, [sp, #88]
  403174:	ldr	x8, [x8, #16]
  403178:	cbz	x8, 4031c8 <link_update_monitor+0x57c>
  40317c:	ldur	w1, [x29, #-40]
  403180:	ldr	x8, [sp, #88]
  403184:	ldr	x6, [x8, #16]
  403188:	mov	w0, #0x7                   	// #7
  40318c:	ldr	x2, [sp, #72]
  403190:	mov	w3, #0x93                  	// #147
  403194:	ldr	x4, [sp, #64]
  403198:	ldr	x5, [sp, #56]
  40319c:	mov	x8, xzr
  4031a0:	mov	x7, x8
  4031a4:	mov	x9, sp
  4031a8:	str	x8, [x9]
  4031ac:	mov	x8, sp
  4031b0:	adrp	x9, 406000 <_fini+0x9c>
  4031b4:	add	x9, x9, #0x1ce
  4031b8:	str	x9, [x8, #8]
  4031bc:	bl	401f48 <log_object_internal@plt>
  4031c0:	str	w0, [sp, #32]
  4031c4:	b	4031ec <link_update_monitor+0x5a0>
  4031c8:	ldur	w1, [x29, #-40]
  4031cc:	mov	w0, #0x7                   	// #7
  4031d0:	ldr	x2, [sp, #72]
  4031d4:	mov	w3, #0x93                  	// #147
  4031d8:	ldr	x4, [sp, #64]
  4031dc:	adrp	x5, 406000 <_fini+0x9c>
  4031e0:	add	x5, x5, #0x1ce
  4031e4:	bl	401f58 <log_internal_realm@plt>
  4031e8:	str	w0, [sp, #32]
  4031ec:	ldr	w8, [sp, #32]
  4031f0:	str	w8, [sp, #84]
  4031f4:	ldr	w8, [sp, #84]
  4031f8:	stur	w8, [x29, #-44]
  4031fc:	b	403224 <link_update_monitor+0x5d8>
  403200:	ldur	x8, [x29, #-8]
  403204:	ldr	x0, [x8, #40]
  403208:	bl	401ed8 <free@plt>
  40320c:	ldur	x8, [x29, #-32]
  403210:	ldur	x9, [x29, #-8]
  403214:	str	x8, [x9, #40]
  403218:	mov	x8, xzr
  40321c:	stur	x8, [x29, #-32]
  403220:	str	wzr, [sp, #80]
  403224:	ldur	w0, [x29, #-44]
  403228:	sub	x8, x29, #0x20
  40322c:	str	w0, [sp, #28]
  403230:	mov	x0, x8
  403234:	bl	40282c <freep>
  403238:	sub	x0, x29, #0x18
  40323c:	bl	40282c <freep>
  403240:	sub	x0, x29, #0x10
  403244:	bl	40282c <freep>
  403248:	ldr	w0, [sp, #28]
  40324c:	ldp	x29, x30, [sp, #224]
  403250:	add	sp, sp, #0xf0
  403254:	ret

0000000000403258 <size_multiply_overflow>:
  403258:	sub	sp, sp, #0x20
  40325c:	str	x0, [sp, #24]
  403260:	str	x1, [sp, #16]
  403264:	ldr	x8, [sp, #16]
  403268:	mov	w9, #0x0                   	// #0
  40326c:	str	w9, [sp, #12]
  403270:	cbz	x8, 403290 <size_multiply_overflow+0x38>
  403274:	ldr	x8, [sp, #24]
  403278:	ldr	x9, [sp, #16]
  40327c:	mov	x10, #0xffffffffffffffff    	// #-1
  403280:	udiv	x9, x10, x9
  403284:	cmp	x8, x9
  403288:	cset	w11, hi  // hi = pmore
  40328c:	str	w11, [sp, #12]
  403290:	ldr	w8, [sp, #12]
  403294:	mov	w9, #0x1                   	// #1
  403298:	eor	w8, w8, #0x1
  40329c:	eor	w8, w8, w9
  4032a0:	and	w8, w8, #0x1
  4032a4:	mov	w0, w8
  4032a8:	sxtw	x10, w0
  4032ac:	cmp	x10, #0x0
  4032b0:	cset	w8, ne  // ne = any
  4032b4:	and	w0, w8, #0x1
  4032b8:	add	sp, sp, #0x20
  4032bc:	ret

00000000004032c0 <manager_configured>:
  4032c0:	sub	sp, sp, #0xe0
  4032c4:	stp	x29, x30, [sp, #208]
  4032c8:	add	x29, sp, #0xd0
  4032cc:	sub	x8, x29, #0x10
  4032d0:	mov	w9, #0x0                   	// #0
  4032d4:	adrp	x10, 406000 <_fini+0x9c>
  4032d8:	add	x10, x10, #0x1f6
  4032dc:	add	x10, x10, #0x3
  4032e0:	adrp	x11, 406000 <_fini+0x9c>
  4032e4:	add	x11, x11, #0x21b
  4032e8:	str	x0, [x8]
  4032ec:	sturb	w9, [x29, #-17]
  4032f0:	ldr	x12, [x8]
  4032f4:	ldr	x0, [x12, #16]
  4032f8:	str	x8, [sp, #48]
  4032fc:	str	x10, [sp, #40]
  403300:	str	x11, [sp, #32]
  403304:	bl	4035f4 <hashmap_isempty>
  403308:	tbnz	w0, #0, 403470 <manager_configured+0x1b0>
  40330c:	sub	x8, x29, #0x60
  403310:	mov	w9, #0xfffffffe            	// #-2
  403314:	stur	w9, [x29, #-96]
  403318:	mov	x10, xzr
  40331c:	str	x10, [x8, #8]
  403320:	ldur	q0, [x29, #-96]
  403324:	stur	q0, [x29, #-48]
  403328:	ldr	x8, [sp, #48]
  40332c:	ldr	x9, [x8]
  403330:	ldr	x0, [x9, #16]
  403334:	sub	x1, x29, #0x30
  403338:	sub	x2, x29, #0x40
  40333c:	sub	x3, x29, #0x38
  403340:	bl	403624 <hashmap_iterate>
  403344:	tbnz	w0, #0, 40334c <manager_configured+0x8c>
  403348:	b	403460 <manager_configured+0x1a0>
  40334c:	ldur	x8, [x29, #-64]
  403350:	stur	w8, [x29, #-100]
  403354:	ldr	x9, [sp, #48]
  403358:	ldr	x10, [x9]
  40335c:	ldr	x0, [x10, #8]
  403360:	ldur	x1, [x29, #-56]
  403364:	bl	403664 <hashmap_get>
  403368:	stur	x0, [x29, #-72]
  40336c:	ldur	x9, [x29, #-72]
  403370:	cbnz	x9, 403410 <manager_configured+0x150>
  403374:	mov	w8, #0x7                   	// #7
  403378:	str	w8, [sp, #104]
  40337c:	str	wzr, [sp, #100]
  403380:	str	wzr, [sp, #96]
  403384:	ldr	w0, [sp, #96]
  403388:	bl	401fa8 <log_get_max_level_realm@plt>
  40338c:	ldr	w8, [sp, #104]
  403390:	and	w8, w8, #0x7
  403394:	cmp	w0, w8
  403398:	b.lt	4033d0 <manager_configured+0x110>  // b.tstop
  40339c:	ldr	w8, [sp, #96]
  4033a0:	ldr	w9, [sp, #104]
  4033a4:	orr	w0, w9, w8, lsl #10
  4033a8:	ldr	w1, [sp, #100]
  4033ac:	ldur	x6, [x29, #-56]
  4033b0:	ldr	x2, [sp, #40]
  4033b4:	mov	w3, #0x4d                  	// #77
  4033b8:	ldr	x4, [sp, #32]
  4033bc:	adrp	x5, 406000 <_fini+0x9c>
  4033c0:	add	x5, x5, #0x22e
  4033c4:	bl	401f58 <log_internal_realm@plt>
  4033c8:	str	w0, [sp, #28]
  4033cc:	b	4033e4 <manager_configured+0x124>
  4033d0:	ldr	w0, [sp, #100]
  4033d4:	bl	401fb8 <abs@plt>
  4033d8:	mov	w8, wzr
  4033dc:	subs	w8, w8, w0, uxtb
  4033e0:	str	w8, [sp, #28]
  4033e4:	ldr	w8, [sp, #28]
  4033e8:	str	w8, [sp, #92]
  4033ec:	ldr	x9, [sp, #48]
  4033f0:	ldr	x10, [x9]
  4033f4:	ldrb	w8, [x10, #36]
  4033f8:	tbnz	w8, #0, 40340c <manager_configured+0x14c>
  4033fc:	mov	w8, wzr
  403400:	and	w8, w8, #0x1
  403404:	sturb	w8, [x29, #-1]
  403408:	b	4035e0 <manager_configured+0x320>
  40340c:	b	403328 <manager_configured+0x68>
  403410:	ldr	x8, [sp, #48]
  403414:	ldr	x0, [x8]
  403418:	ldur	x1, [x29, #-72]
  40341c:	ldur	w2, [x29, #-100]
  403420:	bl	403690 <manager_link_is_online>
  403424:	cmp	w0, #0x0
  403428:	cset	w9, gt
  40342c:	tbnz	w9, #0, 403454 <manager_configured+0x194>
  403430:	ldr	x8, [sp, #48]
  403434:	ldr	x9, [x8]
  403438:	ldrb	w10, [x9, #36]
  40343c:	tbnz	w10, #0, 403450 <manager_configured+0x190>
  403440:	mov	w8, wzr
  403444:	and	w8, w8, #0x1
  403448:	sturb	w8, [x29, #-1]
  40344c:	b	4035e0 <manager_configured+0x320>
  403450:	b	403328 <manager_configured+0x68>
  403454:	mov	w8, #0x1                   	// #1
  403458:	sturb	w8, [x29, #-17]
  40345c:	b	403328 <manager_configured+0x68>
  403460:	ldurb	w8, [x29, #-17]
  403464:	and	w8, w8, #0x1
  403468:	sturb	w8, [x29, #-1]
  40346c:	b	4035e0 <manager_configured+0x320>
  403470:	add	x8, sp, #0x48
  403474:	mov	w9, #0xfffffffe            	// #-2
  403478:	str	w9, [sp, #72]
  40347c:	mov	x10, xzr
  403480:	str	x10, [x8, #8]
  403484:	ldur	q0, [sp, #72]
  403488:	stur	q0, [x29, #-48]
  40348c:	ldr	x8, [sp, #48]
  403490:	ldr	x9, [x8]
  403494:	ldr	x0, [x9]
  403498:	sub	x1, x29, #0x30
  40349c:	sub	x2, x29, #0x48
  4034a0:	mov	x9, xzr
  4034a4:	mov	x3, x9
  4034a8:	bl	403624 <hashmap_iterate>
  4034ac:	tbnz	w0, #0, 4034b4 <manager_configured+0x1f4>
  4034b0:	b	4035d4 <manager_configured+0x314>
  4034b4:	ldr	x8, [sp, #48]
  4034b8:	ldr	x0, [x8]
  4034bc:	ldur	x1, [x29, #-72]
  4034c0:	bl	4039e0 <manager_ignore_link>
  4034c4:	tbnz	w0, #0, 4034cc <manager_configured+0x20c>
  4034c8:	b	403570 <manager_configured+0x2b0>
  4034cc:	ldur	x8, [x29, #-72]
  4034d0:	str	x8, [sp, #64]
  4034d4:	ldr	x8, [sp, #64]
  4034d8:	cbz	x8, 40353c <manager_configured+0x27c>
  4034dc:	ldr	x8, [sp, #64]
  4034e0:	ldr	x8, [x8, #16]
  4034e4:	cbz	x8, 40353c <manager_configured+0x27c>
  4034e8:	ldr	x8, [sp, #64]
  4034ec:	ldr	x6, [x8, #16]
  4034f0:	mov	w0, #0x7                   	// #7
  4034f4:	mov	w9, wzr
  4034f8:	mov	w1, w9
  4034fc:	ldr	x2, [sp, #40]
  403500:	mov	w3, #0x65                  	// #101
  403504:	ldr	x4, [sp, #32]
  403508:	adrp	x5, 406000 <_fini+0x9c>
  40350c:	add	x5, x5, #0xa4
  403510:	mov	x8, xzr
  403514:	mov	x7, x8
  403518:	mov	x10, sp
  40351c:	str	x8, [x10]
  403520:	mov	x8, sp
  403524:	adrp	x10, 406000 <_fini+0x9c>
  403528:	add	x10, x10, #0x243
  40352c:	str	x10, [x8, #8]
  403530:	bl	401f48 <log_object_internal@plt>
  403534:	str	w0, [sp, #24]
  403538:	b	403564 <manager_configured+0x2a4>
  40353c:	mov	w0, #0x7                   	// #7
  403540:	mov	w8, wzr
  403544:	mov	w1, w8
  403548:	ldr	x2, [sp, #40]
  40354c:	mov	w3, #0x65                  	// #101
  403550:	ldr	x4, [sp, #32]
  403554:	adrp	x5, 406000 <_fini+0x9c>
  403558:	add	x5, x5, #0x243
  40355c:	bl	401f58 <log_internal_realm@plt>
  403560:	str	w0, [sp, #24]
  403564:	ldr	w8, [sp, #24]
  403568:	str	w8, [sp, #60]
  40356c:	b	40348c <manager_configured+0x1cc>
  403570:	ldr	x8, [sp, #48]
  403574:	ldr	x0, [x8]
  403578:	ldur	x1, [x29, #-72]
  40357c:	mov	w2, #0xffffffff            	// #-1
  403580:	bl	403690 <manager_link_is_online>
  403584:	stur	w0, [x29, #-76]
  403588:	ldur	w9, [x29, #-76]
  40358c:	cmp	w9, #0x0
  403590:	cset	w9, ge  // ge = tcont
  403594:	tbnz	w9, #0, 4035b8 <manager_configured+0x2f8>
  403598:	ldr	x8, [sp, #48]
  40359c:	ldr	x9, [x8]
  4035a0:	ldrb	w10, [x9, #36]
  4035a4:	tbnz	w10, #0, 4035b8 <manager_configured+0x2f8>
  4035a8:	mov	w8, wzr
  4035ac:	and	w8, w8, #0x1
  4035b0:	sturb	w8, [x29, #-1]
  4035b4:	b	4035e0 <manager_configured+0x320>
  4035b8:	ldur	w8, [x29, #-76]
  4035bc:	cmp	w8, #0x0
  4035c0:	cset	w8, le
  4035c4:	tbnz	w8, #0, 4035d0 <manager_configured+0x310>
  4035c8:	mov	w8, #0x1                   	// #1
  4035cc:	sturb	w8, [x29, #-17]
  4035d0:	b	40348c <manager_configured+0x1cc>
  4035d4:	ldurb	w8, [x29, #-17]
  4035d8:	and	w8, w8, #0x1
  4035dc:	sturb	w8, [x29, #-1]
  4035e0:	ldurb	w8, [x29, #-1]
  4035e4:	and	w0, w8, #0x1
  4035e8:	ldp	x29, x30, [sp, #208]
  4035ec:	add	sp, sp, #0xe0
  4035f0:	ret

00000000004035f4 <hashmap_isempty>:
  4035f4:	sub	sp, sp, #0x20
  4035f8:	stp	x29, x30, [sp, #16]
  4035fc:	add	x29, sp, #0x10
  403600:	str	x0, [sp, #8]
  403604:	ldr	x0, [sp, #8]
  403608:	bl	404444 <hashmap_size>
  40360c:	cmp	w0, #0x0
  403610:	cset	w8, eq  // eq = none
  403614:	and	w0, w8, #0x1
  403618:	ldp	x29, x30, [sp, #16]
  40361c:	add	sp, sp, #0x20
  403620:	ret

0000000000403624 <hashmap_iterate>:
  403624:	sub	sp, sp, #0x30
  403628:	stp	x29, x30, [sp, #32]
  40362c:	add	x29, sp, #0x20
  403630:	stur	x0, [x29, #-8]
  403634:	str	x1, [sp, #16]
  403638:	str	x2, [sp, #8]
  40363c:	str	x3, [sp]
  403640:	ldur	x0, [x29, #-8]
  403644:	ldr	x1, [sp, #16]
  403648:	ldr	x2, [sp, #8]
  40364c:	ldr	x3, [sp]
  403650:	bl	401fc8 <internal_hashmap_iterate@plt>
  403654:	and	w0, w0, #0x1
  403658:	ldp	x29, x30, [sp, #32]
  40365c:	add	sp, sp, #0x30
  403660:	ret

0000000000403664 <hashmap_get>:
  403664:	sub	sp, sp, #0x20
  403668:	stp	x29, x30, [sp, #16]
  40366c:	add	x29, sp, #0x10
  403670:	str	x0, [sp, #8]
  403674:	str	x1, [sp]
  403678:	ldr	x0, [sp, #8]
  40367c:	ldr	x1, [sp]
  403680:	bl	401fd8 <internal_hashmap_get@plt>
  403684:	ldp	x29, x30, [sp, #16]
  403688:	add	sp, sp, #0x20
  40368c:	ret

0000000000403690 <manager_link_is_online>:
  403690:	sub	sp, sp, #0x100
  403694:	stp	x29, x30, [sp, #240]
  403698:	add	x29, sp, #0xf0
  40369c:	adrp	x8, 406000 <_fini+0x9c>
  4036a0:	add	x8, x8, #0x1f6
  4036a4:	add	x8, x8, #0x3
  4036a8:	adrp	x9, 406000 <_fini+0x9c>
  4036ac:	add	x9, x9, #0x2ac
  4036b0:	adrp	x10, 406000 <_fini+0x9c>
  4036b4:	add	x10, x10, #0xa4
  4036b8:	stur	x0, [x29, #-16]
  4036bc:	stur	x1, [x29, #-24]
  4036c0:	stur	w2, [x29, #-28]
  4036c4:	ldur	x11, [x29, #-24]
  4036c8:	ldr	x11, [x11, #40]
  4036cc:	str	x8, [sp, #120]
  4036d0:	str	x9, [sp, #112]
  4036d4:	str	x10, [sp, #104]
  4036d8:	cbnz	x11, 403784 <manager_link_is_online+0xf4>
  4036dc:	ldur	x8, [x29, #-24]
  4036e0:	stur	x8, [x29, #-40]
  4036e4:	ldur	x8, [x29, #-40]
  4036e8:	cbz	x8, 403748 <manager_link_is_online+0xb8>
  4036ec:	ldur	x8, [x29, #-40]
  4036f0:	ldr	x8, [x8, #16]
  4036f4:	cbz	x8, 403748 <manager_link_is_online+0xb8>
  4036f8:	ldur	x8, [x29, #-40]
  4036fc:	ldr	x6, [x8, #16]
  403700:	mov	w0, #0x7                   	// #7
  403704:	mov	w1, #0xb                   	// #11
  403708:	movk	w1, #0x4000, lsl #16
  40370c:	ldr	x2, [sp, #120]
  403710:	mov	w3, #0x2b                  	// #43
  403714:	ldr	x4, [sp, #112]
  403718:	ldr	x5, [sp, #104]
  40371c:	mov	x8, xzr
  403720:	mov	x7, x8
  403724:	mov	x9, sp
  403728:	str	x8, [x9]
  40372c:	mov	x8, sp
  403730:	adrp	x9, 406000 <_fini+0x9c>
  403734:	add	x9, x9, #0x2c3
  403738:	str	x9, [x8, #8]
  40373c:	bl	401f48 <log_object_internal@plt>
  403740:	str	w0, [sp, #100]
  403744:	b	403770 <manager_link_is_online+0xe0>
  403748:	mov	w0, #0x7                   	// #7
  40374c:	mov	w1, #0xb                   	// #11
  403750:	movk	w1, #0x4000, lsl #16
  403754:	ldr	x2, [sp, #120]
  403758:	mov	w3, #0x2b                  	// #43
  40375c:	ldr	x4, [sp, #112]
  403760:	adrp	x5, 406000 <_fini+0x9c>
  403764:	add	x5, x5, #0x2c3
  403768:	bl	401f58 <log_internal_realm@plt>
  40376c:	str	w0, [sp, #100]
  403770:	ldr	w8, [sp, #100]
  403774:	stur	w8, [x29, #-44]
  403778:	ldur	w8, [x29, #-44]
  40377c:	stur	w8, [x29, #-4]
  403780:	b	4039d0 <manager_link_is_online+0x340>
  403784:	adrp	x8, 420000 <__TMC_END__>
  403788:	add	x8, x8, #0x0
  40378c:	ldr	q0, [x8]
  403790:	sub	x0, x29, #0x50
  403794:	stur	q0, [x29, #-80]
  403798:	ldr	x8, [x8, #16]
  40379c:	stur	x8, [x29, #-64]
  4037a0:	ldur	x8, [x29, #-24]
  4037a4:	ldr	x1, [x8, #40]
  4037a8:	bl	401fe8 <strv_find@plt>
  4037ac:	cbz	x0, 403858 <manager_link_is_online+0x1c8>
  4037b0:	ldur	x8, [x29, #-24]
  4037b4:	stur	x8, [x29, #-88]
  4037b8:	ldur	x8, [x29, #-88]
  4037bc:	cbz	x8, 40381c <manager_link_is_online+0x18c>
  4037c0:	ldur	x8, [x29, #-88]
  4037c4:	ldr	x8, [x8, #16]
  4037c8:	cbz	x8, 40381c <manager_link_is_online+0x18c>
  4037cc:	ldur	x8, [x29, #-88]
  4037d0:	ldr	x6, [x8, #16]
  4037d4:	mov	w0, #0x7                   	// #7
  4037d8:	mov	w1, #0xb                   	// #11
  4037dc:	movk	w1, #0x4000, lsl #16
  4037e0:	ldr	x2, [sp, #120]
  4037e4:	mov	w3, #0x2f                  	// #47
  4037e8:	ldr	x4, [sp, #112]
  4037ec:	ldr	x5, [sp, #104]
  4037f0:	mov	x8, xzr
  4037f4:	mov	x7, x8
  4037f8:	mov	x9, sp
  4037fc:	str	x8, [x9]
  403800:	mov	x8, sp
  403804:	adrp	x9, 406000 <_fini+0x9c>
  403808:	add	x9, x9, #0x2ff
  40380c:	str	x9, [x8, #8]
  403810:	bl	401f48 <log_object_internal@plt>
  403814:	str	w0, [sp, #96]
  403818:	b	403844 <manager_link_is_online+0x1b4>
  40381c:	mov	w0, #0x7                   	// #7
  403820:	mov	w1, #0xb                   	// #11
  403824:	movk	w1, #0x4000, lsl #16
  403828:	ldr	x2, [sp, #120]
  40382c:	mov	w3, #0x2f                  	// #47
  403830:	ldr	x4, [sp, #112]
  403834:	adrp	x5, 406000 <_fini+0x9c>
  403838:	add	x5, x5, #0x2ff
  40383c:	bl	401f58 <log_internal_realm@plt>
  403840:	str	w0, [sp, #96]
  403844:	ldr	w8, [sp, #96]
  403848:	stur	w8, [x29, #-92]
  40384c:	ldur	w8, [x29, #-92]
  403850:	stur	w8, [x29, #-4]
  403854:	b	4039d0 <manager_link_is_online+0x340>
  403858:	ldur	w8, [x29, #-28]
  40385c:	cmp	w8, #0x0
  403860:	cset	w8, ge  // ge = tcont
  403864:	tbnz	w8, #0, 4038a0 <manager_link_is_online+0x210>
  403868:	ldur	x8, [x29, #-16]
  40386c:	ldr	w9, [x8, #32]
  403870:	cmp	w9, #0x0
  403874:	cset	w9, lt  // lt = tstop
  403878:	tbnz	w9, #0, 40388c <manager_link_is_online+0x1fc>
  40387c:	ldur	x8, [x29, #-16]
  403880:	ldr	w9, [x8, #32]
  403884:	str	w9, [sp, #92]
  403888:	b	403898 <manager_link_is_online+0x208>
  40388c:	ldur	x8, [x29, #-24]
  403890:	ldr	w9, [x8, #32]
  403894:	str	w9, [sp, #92]
  403898:	ldr	w8, [sp, #92]
  40389c:	stur	w8, [x29, #-28]
  4038a0:	ldur	x8, [x29, #-24]
  4038a4:	ldr	w9, [x8, #36]
  4038a8:	ldur	w10, [x29, #-28]
  4038ac:	cmp	w9, w10
  4038b0:	b.ge	4039c8 <manager_link_is_online+0x338>  // b.tcont
  4038b4:	ldur	x8, [x29, #-24]
  4038b8:	stur	x8, [x29, #-104]
  4038bc:	ldur	x8, [x29, #-104]
  4038c0:	cbz	x8, 403964 <manager_link_is_online+0x2d4>
  4038c4:	ldur	x8, [x29, #-104]
  4038c8:	ldr	x8, [x8, #16]
  4038cc:	cbz	x8, 403964 <manager_link_is_online+0x2d4>
  4038d0:	ldur	x8, [x29, #-104]
  4038d4:	ldr	x6, [x8, #16]
  4038d8:	ldur	x8, [x29, #-24]
  4038dc:	ldr	w0, [x8, #36]
  4038e0:	str	x6, [sp, #80]
  4038e4:	bl	401ff8 <link_operstate_to_string@plt>
  4038e8:	ldur	w9, [x29, #-28]
  4038ec:	str	x0, [sp, #72]
  4038f0:	mov	w0, w9
  4038f4:	bl	401ff8 <link_operstate_to_string@plt>
  4038f8:	mov	w9, #0x7                   	// #7
  4038fc:	str	x0, [sp, #64]
  403900:	mov	w0, w9
  403904:	mov	w9, wzr
  403908:	mov	w1, w9
  40390c:	ldr	x2, [sp, #120]
  403910:	mov	w3, #0x37                  	// #55
  403914:	ldr	x4, [sp, #112]
  403918:	ldr	x5, [sp, #104]
  40391c:	ldr	x6, [sp, #80]
  403920:	mov	x8, xzr
  403924:	mov	x7, x8
  403928:	mov	x10, sp
  40392c:	str	x8, [x10]
  403930:	mov	x8, sp
  403934:	adrp	x10, 406000 <_fini+0x9c>
  403938:	add	x10, x10, #0x323
  40393c:	str	x10, [x8, #8]
  403940:	mov	x8, sp
  403944:	ldr	x10, [sp, #72]
  403948:	str	x10, [x8, #16]
  40394c:	mov	x8, sp
  403950:	ldr	x11, [sp, #64]
  403954:	str	x11, [x8, #24]
  403958:	bl	401f48 <log_object_internal@plt>
  40395c:	str	w0, [sp, #60]
  403960:	b	4039b8 <manager_link_is_online+0x328>
  403964:	ldur	x8, [x29, #-24]
  403968:	ldr	w0, [x8, #36]
  40396c:	bl	401ff8 <link_operstate_to_string@plt>
  403970:	ldur	w9, [x29, #-28]
  403974:	str	x0, [sp, #48]
  403978:	mov	w0, w9
  40397c:	bl	401ff8 <link_operstate_to_string@plt>
  403980:	mov	w9, #0x7                   	// #7
  403984:	str	x0, [sp, #40]
  403988:	mov	w0, w9
  40398c:	mov	w9, wzr
  403990:	mov	w1, w9
  403994:	ldr	x2, [sp, #120]
  403998:	mov	w3, #0x37                  	// #55
  40399c:	ldr	x4, [sp, #112]
  4039a0:	adrp	x5, 406000 <_fini+0x9c>
  4039a4:	add	x5, x5, #0x323
  4039a8:	ldr	x6, [sp, #48]
  4039ac:	ldr	x7, [sp, #40]
  4039b0:	bl	401f58 <log_internal_realm@plt>
  4039b4:	str	w0, [sp, #60]
  4039b8:	ldr	w8, [sp, #60]
  4039bc:	stur	w8, [x29, #-108]
  4039c0:	stur	wzr, [x29, #-4]
  4039c4:	b	4039d0 <manager_link_is_online+0x340>
  4039c8:	mov	w8, #0x1                   	// #1
  4039cc:	stur	w8, [x29, #-4]
  4039d0:	ldur	w0, [x29, #-4]
  4039d4:	ldp	x29, x30, [sp, #240]
  4039d8:	add	sp, sp, #0x100
  4039dc:	ret

00000000004039e0 <manager_ignore_link>:
  4039e0:	sub	sp, sp, #0x30
  4039e4:	stp	x29, x30, [sp, #32]
  4039e8:	add	x29, sp, #0x20
  4039ec:	adrp	x8, 406000 <_fini+0x9c>
  4039f0:	add	x8, x8, #0x1f6
  4039f4:	add	x8, x8, #0x3
  4039f8:	str	x0, [sp, #16]
  4039fc:	str	x1, [sp, #8]
  403a00:	str	x8, [sp]
  403a04:	ldr	x8, [sp, #16]
  403a08:	cmp	x8, #0x0
  403a0c:	cset	w9, ne  // ne = any
  403a10:	mov	w10, #0x1                   	// #1
  403a14:	eor	w9, w9, #0x1
  403a18:	eor	w9, w9, w10
  403a1c:	eor	w9, w9, w10
  403a20:	and	w9, w9, #0x1
  403a24:	mov	w0, w9
  403a28:	sxtw	x8, w0
  403a2c:	cbz	x8, 403a54 <manager_ignore_link+0x74>
  403a30:	mov	w8, wzr
  403a34:	mov	w0, w8
  403a38:	adrp	x1, 405000 <main+0x70>
  403a3c:	add	x1, x1, #0xf88
  403a40:	ldr	x2, [sp]
  403a44:	mov	w3, #0x11                  	// #17
  403a48:	adrp	x4, 406000 <_fini+0x9c>
  403a4c:	add	x4, x4, #0x348
  403a50:	bl	401e88 <log_assert_failed_realm@plt>
  403a54:	ldr	x8, [sp, #8]
  403a58:	cmp	x8, #0x0
  403a5c:	cset	w9, ne  // ne = any
  403a60:	mov	w10, #0x1                   	// #1
  403a64:	eor	w9, w9, #0x1
  403a68:	eor	w9, w9, w10
  403a6c:	eor	w9, w9, w10
  403a70:	and	w9, w9, #0x1
  403a74:	mov	w0, w9
  403a78:	sxtw	x8, w0
  403a7c:	cbz	x8, 403aa4 <manager_ignore_link+0xc4>
  403a80:	mov	w8, wzr
  403a84:	mov	w0, w8
  403a88:	adrp	x1, 406000 <_fini+0x9c>
  403a8c:	add	x1, x1, #0x375
  403a90:	ldr	x2, [sp]
  403a94:	mov	w3, #0x12                  	// #18
  403a98:	adrp	x4, 406000 <_fini+0x9c>
  403a9c:	add	x4, x4, #0x348
  403aa0:	bl	401e88 <log_assert_failed_realm@plt>
  403aa4:	ldr	x8, [sp, #8]
  403aa8:	ldr	w9, [x8, #24]
  403aac:	and	w9, w9, #0x8
  403ab0:	cbz	w9, 403ac4 <manager_ignore_link+0xe4>
  403ab4:	mov	w8, #0x1                   	// #1
  403ab8:	and	w8, w8, #0x1
  403abc:	sturb	w8, [x29, #-1]
  403ac0:	b	403b38 <manager_ignore_link+0x158>
  403ac4:	ldr	x8, [sp, #16]
  403ac8:	ldr	x8, [x8, #16]
  403acc:	cbz	x8, 403af8 <manager_ignore_link+0x118>
  403ad0:	ldr	x8, [sp, #16]
  403ad4:	ldr	x0, [x8, #16]
  403ad8:	ldr	x8, [sp, #8]
  403adc:	ldr	x1, [x8, #16]
  403ae0:	bl	404468 <hashmap_contains>
  403ae4:	tbnz	w0, #0, 403af8 <manager_ignore_link+0x118>
  403ae8:	mov	w8, #0x1                   	// #1
  403aec:	and	w8, w8, #0x1
  403af0:	sturb	w8, [x29, #-1]
  403af4:	b	403b38 <manager_ignore_link+0x158>
  403af8:	ldr	x8, [sp, #8]
  403afc:	ldrb	w9, [x8, #28]
  403b00:	tbnz	w9, #0, 403b14 <manager_ignore_link+0x134>
  403b04:	mov	w8, #0x1                   	// #1
  403b08:	and	w8, w8, #0x1
  403b0c:	sturb	w8, [x29, #-1]
  403b10:	b	403b38 <manager_ignore_link+0x158>
  403b14:	ldr	x8, [sp, #16]
  403b18:	ldr	x0, [x8, #24]
  403b1c:	ldr	x8, [sp, #8]
  403b20:	ldr	x1, [x8, #16]
  403b24:	mov	w9, wzr
  403b28:	mov	w2, w9
  403b2c:	bl	402008 <strv_fnmatch@plt>
  403b30:	and	w9, w0, #0x1
  403b34:	sturb	w9, [x29, #-1]
  403b38:	ldurb	w8, [x29, #-1]
  403b3c:	and	w0, w8, #0x1
  403b40:	ldp	x29, x30, [sp, #32]
  403b44:	add	sp, sp, #0x30
  403b48:	ret

0000000000403b4c <manager_new>:
  403b4c:	sub	sp, sp, #0xf0
  403b50:	stp	x29, x30, [sp, #224]
  403b54:	add	x29, sp, #0xe0
  403b58:	mov	x8, xzr
  403b5c:	mov	w9, #0x1                   	// #1
  403b60:	adrp	x10, 406000 <_fini+0x9c>
  403b64:	add	x10, x10, #0x1f6
  403b68:	add	x10, x10, #0x3
  403b6c:	stur	x0, [x29, #-16]
  403b70:	stur	x1, [x29, #-24]
  403b74:	stur	x2, [x29, #-32]
  403b78:	stur	w3, [x29, #-36]
  403b7c:	and	w9, w4, w9
  403b80:	sturb	w9, [x29, #-37]
  403b84:	stur	x5, [x29, #-48]
  403b88:	stur	x8, [x29, #-56]
  403b8c:	str	x10, [sp, #48]
  403b90:	ldur	x8, [x29, #-16]
  403b94:	cmp	x8, #0x0
  403b98:	cset	w9, ne  // ne = any
  403b9c:	mov	w10, #0x1                   	// #1
  403ba0:	eor	w9, w9, #0x1
  403ba4:	eor	w9, w9, w10
  403ba8:	eor	w9, w9, w10
  403bac:	and	w9, w9, #0x1
  403bb0:	mov	w0, w9
  403bb4:	sxtw	x8, w0
  403bb8:	cbz	x8, 403be0 <manager_new+0x94>
  403bbc:	mov	w8, wzr
  403bc0:	mov	w0, w8
  403bc4:	adrp	x1, 406000 <_fini+0x9c>
  403bc8:	add	x1, x1, #0x253
  403bcc:	ldr	x2, [sp, #48]
  403bd0:	mov	w3, #0x129                 	// #297
  403bd4:	adrp	x4, 406000 <_fini+0x9c>
  403bd8:	add	x4, x4, #0x257
  403bdc:	bl	401e88 <log_assert_failed_realm@plt>
  403be0:	mov	x0, #0x50                  	// #80
  403be4:	mov	x1, #0x1                   	// #1
  403be8:	bl	403e60 <malloc_multiply>
  403bec:	stur	x0, [x29, #-56]
  403bf0:	ldur	x8, [x29, #-56]
  403bf4:	cbnz	x8, 403c0c <manager_new+0xc0>
  403bf8:	mov	w8, #0xfffffff4            	// #-12
  403bfc:	stur	w8, [x29, #-4]
  403c00:	mov	w8, #0x1                   	// #1
  403c04:	stur	w8, [x29, #-64]
  403c08:	b	403e14 <manager_new+0x2c8>
  403c0c:	ldur	x0, [x29, #-56]
  403c10:	add	x8, sp, #0x50
  403c14:	mov	x9, xzr
  403c18:	str	x9, [sp, #80]
  403c1c:	str	x9, [x8, #8]
  403c20:	ldur	x10, [x29, #-24]
  403c24:	str	x10, [x8, #16]
  403c28:	ldur	x10, [x29, #-32]
  403c2c:	str	x10, [x8, #24]
  403c30:	ldur	w11, [x29, #-36]
  403c34:	str	w11, [sp, #112]
  403c38:	ldurb	w11, [x29, #-37]
  403c3c:	and	w11, w11, #0x1
  403c40:	strb	w11, [x8, #36]
  403c44:	str	x9, [x8, #40]
  403c48:	str	x9, [x8, #48]
  403c4c:	str	x9, [x8, #56]
  403c50:	str	x9, [x8, #64]
  403c54:	str	x9, [x8, #72]
  403c58:	mov	x1, x8
  403c5c:	mov	x2, #0x50                  	// #80
  403c60:	bl	401eb8 <memcpy@plt>
  403c64:	ldur	x8, [x29, #-56]
  403c68:	add	x0, x8, #0x48
  403c6c:	bl	402018 <sd_event_default@plt>
  403c70:	stur	w0, [x29, #-60]
  403c74:	ldur	w11, [x29, #-60]
  403c78:	cmp	w11, #0x0
  403c7c:	cset	w11, ge  // ge = tcont
  403c80:	tbnz	w11, #0, 403c98 <manager_new+0x14c>
  403c84:	ldur	w8, [x29, #-60]
  403c88:	stur	w8, [x29, #-4]
  403c8c:	mov	w8, #0x1                   	// #1
  403c90:	stur	w8, [x29, #-64]
  403c94:	b	403e14 <manager_new+0x2c8>
  403c98:	ldur	x8, [x29, #-56]
  403c9c:	ldr	x0, [x8, #72]
  403ca0:	mov	x8, xzr
  403ca4:	mov	x1, x8
  403ca8:	str	x1, [sp, #40]
  403cac:	mov	w2, #0xf                   	// #15
  403cb0:	mov	x3, x8
  403cb4:	str	x3, [sp, #32]
  403cb8:	mov	x4, x8
  403cbc:	str	x8, [sp, #24]
  403cc0:	bl	402028 <sd_event_add_signal@plt>
  403cc4:	ldur	x8, [x29, #-56]
  403cc8:	ldr	x8, [x8, #72]
  403ccc:	mov	x0, x8
  403cd0:	ldr	x1, [sp, #40]
  403cd4:	mov	w2, #0x2                   	// #2
  403cd8:	ldr	x3, [sp, #32]
  403cdc:	ldr	x4, [sp, #24]
  403ce0:	bl	402028 <sd_event_add_signal@plt>
  403ce4:	ldur	x8, [x29, #-48]
  403ce8:	cmp	x8, #0x0
  403cec:	cset	w9, ls  // ls = plast
  403cf0:	tbnz	w9, #0, 403d70 <manager_new+0x224>
  403cf4:	bl	402038 <clock_boottime_or_monotonic@plt>
  403cf8:	bl	402048 <now@plt>
  403cfc:	ldur	x8, [x29, #-48]
  403d00:	add	x8, x0, x8
  403d04:	str	x8, [sp, #72]
  403d08:	ldur	x8, [x29, #-56]
  403d0c:	ldr	x0, [x8, #72]
  403d10:	str	x0, [sp, #16]
  403d14:	bl	402038 <clock_boottime_or_monotonic@plt>
  403d18:	ldr	x3, [sp, #72]
  403d1c:	ldr	x8, [sp, #16]
  403d20:	str	w0, [sp, #12]
  403d24:	mov	x0, x8
  403d28:	mov	x9, xzr
  403d2c:	mov	x1, x9
  403d30:	ldr	w2, [sp, #12]
  403d34:	mov	x4, x9
  403d38:	mov	x5, x9
  403d3c:	mov	x9, #0xffffffffffffff92    	// #-110
  403d40:	mov	x6, x9
  403d44:	bl	402058 <sd_event_add_time@plt>
  403d48:	stur	w0, [x29, #-60]
  403d4c:	ldur	w10, [x29, #-60]
  403d50:	cmp	w10, #0x0
  403d54:	cset	w10, ge  // ge = tcont
  403d58:	tbnz	w10, #0, 403d70 <manager_new+0x224>
  403d5c:	ldur	w8, [x29, #-60]
  403d60:	stur	w8, [x29, #-4]
  403d64:	mov	w8, #0x1                   	// #1
  403d68:	stur	w8, [x29, #-64]
  403d6c:	b	403e14 <manager_new+0x2c8>
  403d70:	ldur	x8, [x29, #-56]
  403d74:	ldr	x0, [x8, #72]
  403d78:	mov	w1, #0x1                   	// #1
  403d7c:	bl	402068 <sd_event_set_watchdog@plt>
  403d80:	ldur	x8, [x29, #-56]
  403d84:	mov	x0, x8
  403d88:	bl	403edc <manager_network_monitor_listen>
  403d8c:	stur	w0, [x29, #-60]
  403d90:	ldur	w9, [x29, #-60]
  403d94:	cmp	w9, #0x0
  403d98:	cset	w9, ge  // ge = tcont
  403d9c:	tbnz	w9, #0, 403db4 <manager_new+0x268>
  403da0:	ldur	w8, [x29, #-60]
  403da4:	stur	w8, [x29, #-4]
  403da8:	mov	w8, #0x1                   	// #1
  403dac:	stur	w8, [x29, #-64]
  403db0:	b	403e14 <manager_new+0x2c8>
  403db4:	ldur	x0, [x29, #-56]
  403db8:	bl	404034 <manager_rtnl_listen>
  403dbc:	stur	w0, [x29, #-60]
  403dc0:	ldur	w8, [x29, #-60]
  403dc4:	cmp	w8, #0x0
  403dc8:	cset	w8, ge  // ge = tcont
  403dcc:	tbnz	w8, #0, 403de4 <manager_new+0x298>
  403dd0:	ldur	w8, [x29, #-60]
  403dd4:	stur	w8, [x29, #-4]
  403dd8:	mov	w8, #0x1                   	// #1
  403ddc:	stur	w8, [x29, #-64]
  403de0:	b	403e14 <manager_new+0x2c8>
  403de4:	ldur	x8, [x29, #-56]
  403de8:	str	x8, [sp, #64]
  403dec:	mov	x8, xzr
  403df0:	stur	x8, [x29, #-56]
  403df4:	ldr	x8, [sp, #64]
  403df8:	str	x8, [sp, #56]
  403dfc:	ldr	x8, [sp, #56]
  403e00:	ldur	x9, [x29, #-16]
  403e04:	str	x8, [x9]
  403e08:	stur	wzr, [x29, #-4]
  403e0c:	mov	w10, #0x1                   	// #1
  403e10:	stur	w10, [x29, #-64]
  403e14:	sub	x0, x29, #0x38
  403e18:	bl	403e2c <manager_freep>
  403e1c:	ldur	w0, [x29, #-4]
  403e20:	ldp	x29, x30, [sp, #224]
  403e24:	add	sp, sp, #0xf0
  403e28:	ret

0000000000403e2c <manager_freep>:
  403e2c:	sub	sp, sp, #0x20
  403e30:	stp	x29, x30, [sp, #16]
  403e34:	add	x29, sp, #0x10
  403e38:	str	x0, [sp, #8]
  403e3c:	ldr	x8, [sp, #8]
  403e40:	ldr	x8, [x8]
  403e44:	cbz	x8, 403e54 <manager_freep+0x28>
  403e48:	ldr	x8, [sp, #8]
  403e4c:	ldr	x0, [x8]
  403e50:	bl	404320 <manager_free>
  403e54:	ldp	x29, x30, [sp, #16]
  403e58:	add	sp, sp, #0x20
  403e5c:	ret

0000000000403e60 <malloc_multiply>:
  403e60:	sub	sp, sp, #0x40
  403e64:	stp	x29, x30, [sp, #48]
  403e68:	add	x29, sp, #0x30
  403e6c:	stur	x0, [x29, #-16]
  403e70:	str	x1, [sp, #24]
  403e74:	ldur	x0, [x29, #-16]
  403e78:	ldr	x1, [sp, #24]
  403e7c:	bl	404498 <size_multiply_overflow>
  403e80:	tbnz	w0, #0, 403e88 <malloc_multiply+0x28>
  403e84:	b	403e94 <malloc_multiply+0x34>
  403e88:	mov	x8, xzr
  403e8c:	stur	x8, [x29, #-8]
  403e90:	b	403ecc <malloc_multiply+0x6c>
  403e94:	ldur	x8, [x29, #-16]
  403e98:	ldr	x9, [sp, #24]
  403e9c:	mul	x8, x8, x9
  403ea0:	str	x8, [sp, #16]
  403ea4:	cbz	x8, 403eb4 <malloc_multiply+0x54>
  403ea8:	ldr	x8, [sp, #16]
  403eac:	str	x8, [sp, #8]
  403eb0:	b	403ebc <malloc_multiply+0x5c>
  403eb4:	mov	x8, #0x1                   	// #1
  403eb8:	str	x8, [sp, #8]
  403ebc:	ldr	x8, [sp, #8]
  403ec0:	mov	x0, x8
  403ec4:	bl	401ee8 <malloc@plt>
  403ec8:	stur	x0, [x29, #-8]
  403ecc:	ldur	x0, [x29, #-8]
  403ed0:	ldp	x29, x30, [sp, #48]
  403ed4:	add	sp, sp, #0x40
  403ed8:	ret

0000000000403edc <manager_network_monitor_listen>:
  403edc:	sub	sp, sp, #0x40
  403ee0:	stp	x29, x30, [sp, #48]
  403ee4:	add	x29, sp, #0x30
  403ee8:	adrp	x8, 406000 <_fini+0x9c>
  403eec:	add	x8, x8, #0x1f6
  403ef0:	add	x2, x8, #0x3
  403ef4:	stur	x0, [x29, #-16]
  403ef8:	str	x2, [sp, #8]
  403efc:	ldur	x8, [x29, #-16]
  403f00:	cmp	x8, #0x0
  403f04:	cset	w9, ne  // ne = any
  403f08:	mov	w10, #0x1                   	// #1
  403f0c:	eor	w9, w9, #0x1
  403f10:	eor	w9, w9, w10
  403f14:	eor	w9, w9, w10
  403f18:	and	w9, w9, #0x1
  403f1c:	mov	w0, w9
  403f20:	sxtw	x8, w0
  403f24:	cbz	x8, 403f4c <manager_network_monitor_listen+0x70>
  403f28:	mov	w8, wzr
  403f2c:	mov	w0, w8
  403f30:	adrp	x1, 405000 <main+0x70>
  403f34:	add	x1, x1, #0xf88
  403f38:	ldr	x2, [sp, #8]
  403f3c:	mov	w3, #0x10d                 	// #269
  403f40:	adrp	x4, 406000 <_fini+0x9c>
  403f44:	add	x4, x4, #0x37a
  403f48:	bl	401e88 <log_assert_failed_realm@plt>
  403f4c:	ldur	x8, [x29, #-16]
  403f50:	add	x0, x8, #0x38
  403f54:	mov	x8, xzr
  403f58:	mov	x1, x8
  403f5c:	bl	402078 <sd_network_monitor_new@plt>
  403f60:	stur	w0, [x29, #-20]
  403f64:	ldur	w9, [x29, #-20]
  403f68:	cmp	w9, #0x0
  403f6c:	cset	w9, ge  // ge = tcont
  403f70:	tbnz	w9, #0, 403f80 <manager_network_monitor_listen+0xa4>
  403f74:	ldur	w8, [x29, #-20]
  403f78:	stur	w8, [x29, #-4]
  403f7c:	b	404024 <manager_network_monitor_listen+0x148>
  403f80:	ldur	x8, [x29, #-16]
  403f84:	ldr	x0, [x8, #56]
  403f88:	bl	402088 <sd_network_monitor_get_fd@plt>
  403f8c:	str	w0, [sp, #24]
  403f90:	ldr	w9, [sp, #24]
  403f94:	cmp	w9, #0x0
  403f98:	cset	w9, ge  // ge = tcont
  403f9c:	tbnz	w9, #0, 403fac <manager_network_monitor_listen+0xd0>
  403fa0:	ldr	w8, [sp, #24]
  403fa4:	stur	w8, [x29, #-4]
  403fa8:	b	404024 <manager_network_monitor_listen+0x148>
  403fac:	ldur	x8, [x29, #-16]
  403fb0:	ldr	x0, [x8, #56]
  403fb4:	bl	402098 <sd_network_monitor_get_events@plt>
  403fb8:	str	w0, [sp, #20]
  403fbc:	ldr	w9, [sp, #20]
  403fc0:	cmp	w9, #0x0
  403fc4:	cset	w9, ge  // ge = tcont
  403fc8:	tbnz	w9, #0, 403fd8 <manager_network_monitor_listen+0xfc>
  403fcc:	ldr	w8, [sp, #20]
  403fd0:	stur	w8, [x29, #-4]
  403fd4:	b	404024 <manager_network_monitor_listen+0x148>
  403fd8:	ldur	x8, [x29, #-16]
  403fdc:	ldr	x0, [x8, #72]
  403fe0:	ldur	x8, [x29, #-16]
  403fe4:	add	x1, x8, #0x40
  403fe8:	ldr	w2, [sp, #24]
  403fec:	ldr	w3, [sp, #20]
  403ff0:	ldur	x5, [x29, #-16]
  403ff4:	adrp	x4, 404000 <manager_network_monitor_listen+0x124>
  403ff8:	add	x4, x4, #0x500
  403ffc:	bl	4020a8 <sd_event_add_io@plt>
  404000:	stur	w0, [x29, #-20]
  404004:	ldur	w9, [x29, #-20]
  404008:	cmp	w9, #0x0
  40400c:	cset	w9, ge  // ge = tcont
  404010:	tbnz	w9, #0, 404020 <manager_network_monitor_listen+0x144>
  404014:	ldur	w8, [x29, #-20]
  404018:	stur	w8, [x29, #-4]
  40401c:	b	404024 <manager_network_monitor_listen+0x148>
  404020:	stur	wzr, [x29, #-4]
  404024:	ldur	w0, [x29, #-4]
  404028:	ldp	x29, x30, [sp, #48]
  40402c:	add	sp, sp, #0x40
  404030:	ret

0000000000404034 <manager_rtnl_listen>:
  404034:	sub	sp, sp, #0x50
  404038:	stp	x29, x30, [sp, #64]
  40403c:	add	x29, sp, #0x40
  404040:	mov	x8, xzr
  404044:	adrp	x9, 406000 <_fini+0x9c>
  404048:	add	x9, x9, #0x1f6
  40404c:	add	x2, x9, #0x3
  404050:	stur	x0, [x29, #-16]
  404054:	stur	x8, [x29, #-24]
  404058:	str	x8, [sp, #32]
  40405c:	str	x2, [sp, #8]
  404060:	ldur	x8, [x29, #-16]
  404064:	cmp	x8, #0x0
  404068:	cset	w9, ne  // ne = any
  40406c:	mov	w10, #0x1                   	// #1
  404070:	eor	w9, w9, #0x1
  404074:	eor	w9, w9, w10
  404078:	eor	w9, w9, w10
  40407c:	and	w9, w9, #0x1
  404080:	mov	w0, w9
  404084:	sxtw	x8, w0
  404088:	cbz	x8, 4040b0 <manager_rtnl_listen+0x7c>
  40408c:	mov	w8, wzr
  404090:	mov	w0, w8
  404094:	adrp	x1, 405000 <main+0x70>
  404098:	add	x1, x1, #0xf88
  40409c:	ldr	x2, [sp, #8]
  4040a0:	mov	w3, #0xcb                  	// #203
  4040a4:	adrp	x4, 406000 <_fini+0x9c>
  4040a8:	add	x4, x4, #0x422
  4040ac:	bl	401e88 <log_assert_failed_realm@plt>
  4040b0:	ldur	x8, [x29, #-16]
  4040b4:	add	x0, x8, #0x28
  4040b8:	bl	4020b8 <sd_netlink_open@plt>
  4040bc:	str	w0, [sp, #20]
  4040c0:	ldr	w9, [sp, #20]
  4040c4:	cmp	w9, #0x0
  4040c8:	cset	w9, ge  // ge = tcont
  4040cc:	tbnz	w9, #0, 4040e4 <manager_rtnl_listen+0xb0>
  4040d0:	ldr	w8, [sp, #20]
  4040d4:	stur	w8, [x29, #-4]
  4040d8:	mov	w8, #0x1                   	// #1
  4040dc:	str	w8, [sp, #16]
  4040e0:	b	404300 <manager_rtnl_listen+0x2cc>
  4040e4:	ldur	x8, [x29, #-16]
  4040e8:	ldr	x0, [x8, #40]
  4040ec:	ldur	x8, [x29, #-16]
  4040f0:	ldr	x1, [x8, #72]
  4040f4:	mov	x8, xzr
  4040f8:	mov	x2, x8
  4040fc:	bl	4020c8 <sd_netlink_attach_event@plt>
  404100:	str	w0, [sp, #20]
  404104:	ldr	w9, [sp, #20]
  404108:	cmp	w9, #0x0
  40410c:	cset	w9, ge  // ge = tcont
  404110:	tbnz	w9, #0, 404128 <manager_rtnl_listen+0xf4>
  404114:	ldr	w8, [sp, #20]
  404118:	stur	w8, [x29, #-4]
  40411c:	mov	w8, #0x1                   	// #1
  404120:	str	w8, [sp, #16]
  404124:	b	404300 <manager_rtnl_listen+0x2cc>
  404128:	ldur	x8, [x29, #-16]
  40412c:	ldr	x0, [x8, #40]
  404130:	ldur	x5, [x29, #-16]
  404134:	mov	x8, xzr
  404138:	mov	x1, x8
  40413c:	mov	w2, #0x10                  	// #16
  404140:	adrp	x3, 404000 <manager_network_monitor_listen+0x124>
  404144:	add	x3, x3, #0x70c
  404148:	mov	x4, x8
  40414c:	adrp	x6, 406000 <_fini+0x9c>
  404150:	add	x6, x6, #0x445
  404154:	bl	4020d8 <sd_netlink_add_match@plt>
  404158:	str	w0, [sp, #20]
  40415c:	ldr	w9, [sp, #20]
  404160:	cmp	w9, #0x0
  404164:	cset	w9, ge  // ge = tcont
  404168:	tbnz	w9, #0, 404180 <manager_rtnl_listen+0x14c>
  40416c:	ldr	w8, [sp, #20]
  404170:	stur	w8, [x29, #-4]
  404174:	mov	w8, #0x1                   	// #1
  404178:	str	w8, [sp, #16]
  40417c:	b	404300 <manager_rtnl_listen+0x2cc>
  404180:	ldur	x8, [x29, #-16]
  404184:	ldr	x0, [x8, #40]
  404188:	ldur	x5, [x29, #-16]
  40418c:	mov	x8, xzr
  404190:	mov	x1, x8
  404194:	mov	w2, #0x11                  	// #17
  404198:	adrp	x3, 404000 <manager_network_monitor_listen+0x124>
  40419c:	add	x3, x3, #0x70c
  4041a0:	mov	x4, x8
  4041a4:	adrp	x6, 406000 <_fini+0x9c>
  4041a8:	add	x6, x6, #0x45c
  4041ac:	bl	4020d8 <sd_netlink_add_match@plt>
  4041b0:	str	w0, [sp, #20]
  4041b4:	ldr	w9, [sp, #20]
  4041b8:	cmp	w9, #0x0
  4041bc:	cset	w9, ge  // ge = tcont
  4041c0:	tbnz	w9, #0, 4041d8 <manager_rtnl_listen+0x1a4>
  4041c4:	ldr	w8, [sp, #20]
  4041c8:	stur	w8, [x29, #-4]
  4041cc:	mov	w8, #0x1                   	// #1
  4041d0:	str	w8, [sp, #16]
  4041d4:	b	404300 <manager_rtnl_listen+0x2cc>
  4041d8:	ldur	x8, [x29, #-16]
  4041dc:	ldr	x0, [x8, #40]
  4041e0:	sub	x1, x29, #0x18
  4041e4:	mov	w2, #0x12                  	// #18
  4041e8:	mov	w9, wzr
  4041ec:	mov	w3, w9
  4041f0:	bl	4020e8 <sd_rtnl_message_new_link@plt>
  4041f4:	str	w0, [sp, #20]
  4041f8:	ldr	w9, [sp, #20]
  4041fc:	cmp	w9, #0x0
  404200:	cset	w9, ge  // ge = tcont
  404204:	tbnz	w9, #0, 40421c <manager_rtnl_listen+0x1e8>
  404208:	ldr	w8, [sp, #20]
  40420c:	stur	w8, [x29, #-4]
  404210:	mov	w8, #0x1                   	// #1
  404214:	str	w8, [sp, #16]
  404218:	b	404300 <manager_rtnl_listen+0x2cc>
  40421c:	ldur	x0, [x29, #-24]
  404220:	mov	w1, #0x1                   	// #1
  404224:	bl	4020f8 <sd_netlink_message_request_dump@plt>
  404228:	str	w0, [sp, #20]
  40422c:	ldr	w8, [sp, #20]
  404230:	cmp	w8, #0x0
  404234:	cset	w8, ge  // ge = tcont
  404238:	tbnz	w8, #0, 404250 <manager_rtnl_listen+0x21c>
  40423c:	ldr	w8, [sp, #20]
  404240:	stur	w8, [x29, #-4]
  404244:	mov	w8, #0x1                   	// #1
  404248:	str	w8, [sp, #16]
  40424c:	b	404300 <manager_rtnl_listen+0x2cc>
  404250:	ldur	x8, [x29, #-16]
  404254:	ldr	x0, [x8, #40]
  404258:	ldur	x1, [x29, #-24]
  40425c:	mov	x8, xzr
  404260:	mov	x2, x8
  404264:	add	x3, sp, #0x20
  404268:	bl	402108 <sd_netlink_call@plt>
  40426c:	str	w0, [sp, #20]
  404270:	ldr	w9, [sp, #20]
  404274:	cmp	w9, #0x0
  404278:	cset	w9, ge  // ge = tcont
  40427c:	tbnz	w9, #0, 404294 <manager_rtnl_listen+0x260>
  404280:	ldr	w8, [sp, #20]
  404284:	stur	w8, [x29, #-4]
  404288:	mov	w8, #0x1                   	// #1
  40428c:	str	w8, [sp, #16]
  404290:	b	404300 <manager_rtnl_listen+0x2cc>
  404294:	ldr	x8, [sp, #32]
  404298:	str	x8, [sp, #24]
  40429c:	ldr	x8, [sp, #24]
  4042a0:	cbz	x8, 4042f0 <manager_rtnl_listen+0x2bc>
  4042a4:	ldur	x8, [x29, #-16]
  4042a8:	ldr	x0, [x8, #40]
  4042ac:	ldr	x1, [sp, #24]
  4042b0:	ldur	x2, [x29, #-16]
  4042b4:	bl	404798 <manager_process_link>
  4042b8:	str	w0, [sp, #20]
  4042bc:	ldr	w9, [sp, #20]
  4042c0:	cmp	w9, #0x0
  4042c4:	cset	w9, ge  // ge = tcont
  4042c8:	tbnz	w9, #0, 4042e0 <manager_rtnl_listen+0x2ac>
  4042cc:	ldr	w8, [sp, #20]
  4042d0:	stur	w8, [x29, #-4]
  4042d4:	mov	w8, #0x1                   	// #1
  4042d8:	str	w8, [sp, #16]
  4042dc:	b	404300 <manager_rtnl_listen+0x2cc>
  4042e0:	ldr	x0, [sp, #24]
  4042e4:	bl	402118 <sd_netlink_message_next@plt>
  4042e8:	str	x0, [sp, #24]
  4042ec:	b	40429c <manager_rtnl_listen+0x268>
  4042f0:	ldr	w8, [sp, #20]
  4042f4:	stur	w8, [x29, #-4]
  4042f8:	mov	w8, #0x1                   	// #1
  4042fc:	str	w8, [sp, #16]
  404300:	add	x0, sp, #0x20
  404304:	bl	4046d8 <sd_netlink_message_unrefp>
  404308:	sub	x0, x29, #0x18
  40430c:	bl	4046d8 <sd_netlink_message_unrefp>
  404310:	ldur	w0, [x29, #-4]
  404314:	ldp	x29, x30, [sp, #64]
  404318:	add	sp, sp, #0x50
  40431c:	ret

0000000000404320 <manager_free>:
  404320:	sub	sp, sp, #0x30
  404324:	stp	x29, x30, [sp, #32]
  404328:	add	x29, sp, #0x20
  40432c:	stur	x0, [x29, #-8]
  404330:	ldur	x8, [x29, #-8]
  404334:	cbnz	x8, 40433c <manager_free+0x1c>
  404338:	b	4043d4 <manager_free+0xb4>
  40433c:	ldur	x8, [x29, #-8]
  404340:	ldr	x0, [x8]
  404344:	bl	4043e0 <hashmap_steal_first>
  404348:	str	x0, [sp, #16]
  40434c:	cbz	x0, 40435c <manager_free+0x3c>
  404350:	ldr	x0, [sp, #16]
  404354:	bl	4028d0 <link_free>
  404358:	b	40433c <manager_free+0x1c>
  40435c:	ldur	x8, [x29, #-8]
  404360:	ldr	x0, [x8]
  404364:	bl	404414 <hashmap_free>
  404368:	str	x0, [sp, #8]
  40436c:	ldur	x8, [x29, #-8]
  404370:	ldr	x0, [x8, #8]
  404374:	bl	404414 <hashmap_free>
  404378:	ldur	x8, [x29, #-8]
  40437c:	ldr	x8, [x8, #64]
  404380:	mov	x0, x8
  404384:	bl	402128 <sd_event_source_unref@plt>
  404388:	ldur	x8, [x29, #-8]
  40438c:	ldr	x8, [x8, #56]
  404390:	mov	x0, x8
  404394:	bl	402138 <sd_network_monitor_unref@plt>
  404398:	ldur	x8, [x29, #-8]
  40439c:	ldr	x8, [x8, #48]
  4043a0:	mov	x0, x8
  4043a4:	bl	402128 <sd_event_source_unref@plt>
  4043a8:	ldur	x8, [x29, #-8]
  4043ac:	ldr	x8, [x8, #40]
  4043b0:	mov	x0, x8
  4043b4:	bl	402148 <sd_netlink_unref@plt>
  4043b8:	ldur	x8, [x29, #-8]
  4043bc:	ldr	x8, [x8, #72]
  4043c0:	mov	x0, x8
  4043c4:	bl	402158 <sd_event_unref@plt>
  4043c8:	ldur	x8, [x29, #-8]
  4043cc:	mov	x0, x8
  4043d0:	bl	401ed8 <free@plt>
  4043d4:	ldp	x29, x30, [sp, #32]
  4043d8:	add	sp, sp, #0x30
  4043dc:	ret

00000000004043e0 <hashmap_steal_first>:
  4043e0:	sub	sp, sp, #0x20
  4043e4:	stp	x29, x30, [sp, #16]
  4043e8:	add	x29, sp, #0x10
  4043ec:	mov	x8, xzr
  4043f0:	str	x0, [sp, #8]
  4043f4:	ldr	x0, [sp, #8]
  4043f8:	mov	w9, #0x1                   	// #1
  4043fc:	and	w1, w9, #0x1
  404400:	mov	x2, x8
  404404:	bl	402168 <internal_hashmap_first_key_and_value@plt>
  404408:	ldp	x29, x30, [sp, #16]
  40440c:	add	sp, sp, #0x20
  404410:	ret

0000000000404414 <hashmap_free>:
  404414:	sub	sp, sp, #0x20
  404418:	stp	x29, x30, [sp, #16]
  40441c:	add	x29, sp, #0x10
  404420:	mov	x8, xzr
  404424:	str	x0, [sp, #8]
  404428:	ldr	x0, [sp, #8]
  40442c:	mov	x1, x8
  404430:	mov	x2, x8
  404434:	bl	402178 <internal_hashmap_free@plt>
  404438:	ldp	x29, x30, [sp, #16]
  40443c:	add	sp, sp, #0x20
  404440:	ret

0000000000404444 <hashmap_size>:
  404444:	sub	sp, sp, #0x20
  404448:	stp	x29, x30, [sp, #16]
  40444c:	add	x29, sp, #0x10
  404450:	str	x0, [sp, #8]
  404454:	ldr	x0, [sp, #8]
  404458:	bl	402188 <internal_hashmap_size@plt>
  40445c:	ldp	x29, x30, [sp, #16]
  404460:	add	sp, sp, #0x20
  404464:	ret

0000000000404468 <hashmap_contains>:
  404468:	sub	sp, sp, #0x20
  40446c:	stp	x29, x30, [sp, #16]
  404470:	add	x29, sp, #0x10
  404474:	str	x0, [sp, #8]
  404478:	str	x1, [sp]
  40447c:	ldr	x0, [sp, #8]
  404480:	ldr	x1, [sp]
  404484:	bl	402198 <internal_hashmap_contains@plt>
  404488:	and	w0, w0, #0x1
  40448c:	ldp	x29, x30, [sp, #16]
  404490:	add	sp, sp, #0x20
  404494:	ret

0000000000404498 <size_multiply_overflow>:
  404498:	sub	sp, sp, #0x20
  40449c:	str	x0, [sp, #24]
  4044a0:	str	x1, [sp, #16]
  4044a4:	ldr	x8, [sp, #16]
  4044a8:	mov	w9, #0x0                   	// #0
  4044ac:	str	w9, [sp, #12]
  4044b0:	cbz	x8, 4044d0 <size_multiply_overflow+0x38>
  4044b4:	ldr	x8, [sp, #24]
  4044b8:	ldr	x9, [sp, #16]
  4044bc:	mov	x10, #0xffffffffffffffff    	// #-1
  4044c0:	udiv	x9, x10, x9
  4044c4:	cmp	x8, x9
  4044c8:	cset	w11, hi  // hi = pmore
  4044cc:	str	w11, [sp, #12]
  4044d0:	ldr	w8, [sp, #12]
  4044d4:	mov	w9, #0x1                   	// #1
  4044d8:	eor	w8, w8, #0x1
  4044dc:	eor	w8, w8, w9
  4044e0:	and	w8, w8, #0x1
  4044e4:	mov	w0, w8
  4044e8:	sxtw	x10, w0
  4044ec:	cmp	x10, #0x0
  4044f0:	cset	w8, ne  // ne = any
  4044f4:	and	w0, w8, #0x1
  4044f8:	add	sp, sp, #0x20
  4044fc:	ret

0000000000404500 <on_network_event>:
  404500:	sub	sp, sp, #0x90
  404504:	stp	x29, x30, [sp, #128]
  404508:	add	x29, sp, #0x80
  40450c:	adrp	x8, 406000 <_fini+0x9c>
  404510:	add	x8, x8, #0x1f6
  404514:	add	x8, x8, #0x3
  404518:	stur	x0, [x29, #-8]
  40451c:	stur	w1, [x29, #-12]
  404520:	stur	w2, [x29, #-16]
  404524:	stur	x3, [x29, #-24]
  404528:	ldur	x9, [x29, #-24]
  40452c:	stur	x9, [x29, #-32]
  404530:	str	x8, [sp, #24]
  404534:	ldur	x8, [x29, #-32]
  404538:	cmp	x8, #0x0
  40453c:	cset	w9, ne  // ne = any
  404540:	mov	w10, #0x1                   	// #1
  404544:	eor	w9, w9, #0x1
  404548:	eor	w9, w9, w10
  40454c:	eor	w9, w9, w10
  404550:	and	w9, w9, #0x1
  404554:	mov	w0, w9
  404558:	sxtw	x8, w0
  40455c:	cbz	x8, 404584 <on_network_event+0x84>
  404560:	mov	w8, wzr
  404564:	mov	w0, w8
  404568:	adrp	x1, 405000 <main+0x70>
  40456c:	add	x1, x1, #0xf88
  404570:	ldr	x2, [sp, #24]
  404574:	mov	w3, #0xfa                  	// #250
  404578:	adrp	x4, 406000 <_fini+0x9c>
  40457c:	add	x4, x4, #0x3a8
  404580:	bl	401e88 <log_assert_failed_realm@plt>
  404584:	ldur	x8, [x29, #-32]
  404588:	ldr	x0, [x8, #56]
  40458c:	bl	4021a8 <sd_network_monitor_flush@plt>
  404590:	add	x8, sp, #0x30
  404594:	mov	w9, #0xfffffffe            	// #-2
  404598:	str	w9, [sp, #48]
  40459c:	mov	x10, xzr
  4045a0:	str	x10, [x8, #8]
  4045a4:	ldr	q0, [sp, #48]
  4045a8:	stur	q0, [x29, #-48]
  4045ac:	ldur	x8, [x29, #-32]
  4045b0:	ldr	x0, [x8]
  4045b4:	sub	x1, x29, #0x30
  4045b8:	sub	x2, x29, #0x38
  4045bc:	mov	x8, xzr
  4045c0:	mov	x3, x8
  4045c4:	bl	403624 <hashmap_iterate>
  4045c8:	tbnz	w0, #0, 4045d0 <on_network_event+0xd0>
  4045cc:	b	4046a0 <on_network_event+0x1a0>
  4045d0:	ldur	x0, [x29, #-56]
  4045d4:	bl	402c4c <link_update_monitor>
  4045d8:	stur	w0, [x29, #-60]
  4045dc:	ldur	w8, [x29, #-60]
  4045e0:	cmp	w8, #0x0
  4045e4:	cset	w8, ge  // ge = tcont
  4045e8:	tbnz	w8, #0, 40469c <on_network_event+0x19c>
  4045ec:	ldur	w8, [x29, #-60]
  4045f0:	mov	w9, #0xffffffc3            	// #-61
  4045f4:	cmp	w8, w9
  4045f8:	b.eq	40469c <on_network_event+0x19c>  // b.none
  4045fc:	ldur	x8, [x29, #-56]
  404600:	str	x8, [sp, #40]
  404604:	ldr	x8, [sp, #40]
  404608:	cbz	x8, 40466c <on_network_event+0x16c>
  40460c:	ldr	x8, [sp, #40]
  404610:	ldr	x8, [x8, #16]
  404614:	cbz	x8, 40466c <on_network_event+0x16c>
  404618:	ldur	w1, [x29, #-60]
  40461c:	ldr	x8, [sp, #40]
  404620:	ldr	x6, [x8, #16]
  404624:	mov	w0, #0x4                   	// #4
  404628:	ldr	x2, [sp, #24]
  40462c:	mov	w3, #0x101                 	// #257
  404630:	adrp	x4, 406000 <_fini+0x9c>
  404634:	add	x4, x4, #0x3e7
  404638:	adrp	x5, 406000 <_fini+0x9c>
  40463c:	add	x5, x5, #0xa4
  404640:	mov	x8, xzr
  404644:	mov	x7, x8
  404648:	mov	x9, sp
  40464c:	str	x8, [x9]
  404650:	mov	x8, sp
  404654:	adrp	x9, 406000 <_fini+0x9c>
  404658:	add	x9, x9, #0x3f8
  40465c:	str	x9, [x8, #8]
  404660:	bl	401f48 <log_object_internal@plt>
  404664:	str	w0, [sp, #20]
  404668:	b	404694 <on_network_event+0x194>
  40466c:	ldur	w1, [x29, #-60]
  404670:	mov	w0, #0x4                   	// #4
  404674:	ldr	x2, [sp, #24]
  404678:	mov	w3, #0x101                 	// #257
  40467c:	adrp	x4, 406000 <_fini+0x9c>
  404680:	add	x4, x4, #0x3e7
  404684:	adrp	x5, 406000 <_fini+0x9c>
  404688:	add	x5, x5, #0x3f8
  40468c:	bl	401f58 <log_internal_realm@plt>
  404690:	str	w0, [sp, #20]
  404694:	ldr	w8, [sp, #20]
  404698:	str	w8, [sp, #36]
  40469c:	b	4045ac <on_network_event+0xac>
  4046a0:	ldur	x0, [x29, #-32]
  4046a4:	bl	4032c0 <manager_configured>
  4046a8:	tbnz	w0, #0, 4046b0 <on_network_event+0x1b0>
  4046ac:	b	4046c4 <on_network_event+0x1c4>
  4046b0:	ldur	x8, [x29, #-32]
  4046b4:	ldr	x0, [x8, #72]
  4046b8:	mov	w9, wzr
  4046bc:	mov	w1, w9
  4046c0:	bl	4021b8 <sd_event_exit@plt>
  4046c4:	mov	w8, wzr
  4046c8:	mov	w0, w8
  4046cc:	ldp	x29, x30, [sp, #128]
  4046d0:	add	sp, sp, #0x90
  4046d4:	ret

00000000004046d8 <sd_netlink_message_unrefp>:
  4046d8:	sub	sp, sp, #0x20
  4046dc:	stp	x29, x30, [sp, #16]
  4046e0:	add	x29, sp, #0x10
  4046e4:	str	x0, [sp, #8]
  4046e8:	ldr	x8, [sp, #8]
  4046ec:	ldr	x8, [x8]
  4046f0:	cbz	x8, 404700 <sd_netlink_message_unrefp+0x28>
  4046f4:	ldr	x8, [sp, #8]
  4046f8:	ldr	x0, [x8]
  4046fc:	bl	4021c8 <sd_netlink_message_unref@plt>
  404700:	ldp	x29, x30, [sp, #16]
  404704:	add	sp, sp, #0x20
  404708:	ret

000000000040470c <on_rtnl_event>:
  40470c:	sub	sp, sp, #0x40
  404710:	stp	x29, x30, [sp, #48]
  404714:	add	x29, sp, #0x30
  404718:	stur	x0, [x29, #-16]
  40471c:	str	x1, [sp, #24]
  404720:	str	x2, [sp, #16]
  404724:	ldr	x8, [sp, #16]
  404728:	str	x8, [sp, #8]
  40472c:	ldur	x0, [x29, #-16]
  404730:	ldr	x1, [sp, #24]
  404734:	ldr	x2, [sp, #8]
  404738:	bl	404798 <manager_process_link>
  40473c:	str	w0, [sp, #4]
  404740:	ldr	w9, [sp, #4]
  404744:	cmp	w9, #0x0
  404748:	cset	w9, ge  // ge = tcont
  40474c:	tbnz	w9, #0, 40475c <on_rtnl_event+0x50>
  404750:	ldr	w8, [sp, #4]
  404754:	stur	w8, [x29, #-4]
  404758:	b	404788 <on_rtnl_event+0x7c>
  40475c:	ldr	x0, [sp, #8]
  404760:	bl	4032c0 <manager_configured>
  404764:	tbnz	w0, #0, 40476c <on_rtnl_event+0x60>
  404768:	b	404780 <on_rtnl_event+0x74>
  40476c:	ldr	x8, [sp, #8]
  404770:	ldr	x0, [x8, #72]
  404774:	mov	w9, wzr
  404778:	mov	w1, w9
  40477c:	bl	4021b8 <sd_event_exit@plt>
  404780:	mov	w8, #0x1                   	// #1
  404784:	stur	w8, [x29, #-4]
  404788:	ldur	w0, [x29, #-4]
  40478c:	ldp	x29, x30, [sp, #48]
  404790:	add	sp, sp, #0x40
  404794:	ret

0000000000404798 <manager_process_link>:
  404798:	sub	sp, sp, #0x160
  40479c:	stp	x29, x30, [sp, #320]
  4047a0:	str	x28, [sp, #336]
  4047a4:	add	x29, sp, #0x140
  4047a8:	sub	x8, x29, #0x40
  4047ac:	adrp	x9, 406000 <_fini+0x9c>
  4047b0:	add	x9, x9, #0x1f6
  4047b4:	add	x9, x9, #0x3
  4047b8:	adrp	x10, 406000 <_fini+0x9c>
  4047bc:	add	x10, x10, #0x4c0
  4047c0:	adrp	x11, 406000 <_fini+0x9c>
  4047c4:	add	x11, x11, #0xa4
  4047c8:	adrp	x12, 406000 <_fini+0x9c>
  4047cc:	add	x12, x12, #0x478
  4047d0:	str	x0, [x8, #48]
  4047d4:	str	x1, [x8, #40]
  4047d8:	str	x2, [x8, #32]
  4047dc:	ldr	x13, [x8, #32]
  4047e0:	str	x13, [x8, #24]
  4047e4:	str	x8, [sp, #96]
  4047e8:	str	x9, [sp, #88]
  4047ec:	str	x10, [sp, #80]
  4047f0:	str	x11, [sp, #72]
  4047f4:	str	x12, [sp, #64]
  4047f8:	ldr	x8, [sp, #96]
  4047fc:	ldr	x9, [x8, #48]
  404800:	cmp	x9, #0x0
  404804:	cset	w10, ne  // ne = any
  404808:	mov	w11, #0x1                   	// #1
  40480c:	eor	w10, w10, #0x1
  404810:	eor	w10, w10, w11
  404814:	eor	w10, w10, w11
  404818:	and	w10, w10, #0x1
  40481c:	mov	w0, w10
  404820:	sxtw	x9, w0
  404824:	cbz	x9, 404848 <manager_process_link+0xb0>
  404828:	mov	w8, wzr
  40482c:	mov	w0, w8
  404830:	adrp	x1, 406000 <_fini+0x9c>
  404834:	add	x1, x1, #0x473
  404838:	ldr	x2, [sp, #88]
  40483c:	mov	w3, #0x7c                  	// #124
  404840:	ldr	x4, [sp, #64]
  404844:	bl	401e88 <log_assert_failed_realm@plt>
  404848:	ldr	x8, [sp, #96]
  40484c:	ldr	x9, [x8, #24]
  404850:	cmp	x9, #0x0
  404854:	cset	w10, ne  // ne = any
  404858:	mov	w11, #0x1                   	// #1
  40485c:	eor	w10, w10, #0x1
  404860:	eor	w10, w10, w11
  404864:	eor	w10, w10, w11
  404868:	and	w10, w10, #0x1
  40486c:	mov	w0, w10
  404870:	sxtw	x9, w0
  404874:	cbz	x9, 404898 <manager_process_link+0x100>
  404878:	mov	w8, wzr
  40487c:	mov	w0, w8
  404880:	adrp	x1, 405000 <main+0x70>
  404884:	add	x1, x1, #0xf88
  404888:	ldr	x2, [sp, #88]
  40488c:	mov	w3, #0x7d                  	// #125
  404890:	ldr	x4, [sp, #64]
  404894:	bl	401e88 <log_assert_failed_realm@plt>
  404898:	ldr	x8, [sp, #96]
  40489c:	ldr	x9, [x8, #40]
  4048a0:	cmp	x9, #0x0
  4048a4:	cset	w10, ne  // ne = any
  4048a8:	mov	w11, #0x1                   	// #1
  4048ac:	eor	w10, w10, #0x1
  4048b0:	eor	w10, w10, w11
  4048b4:	eor	w10, w10, w11
  4048b8:	and	w10, w10, #0x1
  4048bc:	mov	w0, w10
  4048c0:	sxtw	x9, w0
  4048c4:	cbz	x9, 4048e8 <manager_process_link+0x150>
  4048c8:	mov	w8, wzr
  4048cc:	mov	w0, w8
  4048d0:	adrp	x1, 406000 <_fini+0x9c>
  4048d4:	add	x1, x1, #0x4bd
  4048d8:	ldr	x2, [sp, #88]
  4048dc:	mov	w3, #0x7e                  	// #126
  4048e0:	ldr	x4, [sp, #64]
  4048e4:	bl	401e88 <log_assert_failed_realm@plt>
  4048e8:	ldr	x8, [sp, #96]
  4048ec:	ldr	x0, [x8, #40]
  4048f0:	sub	x1, x29, #0x2a
  4048f4:	bl	4021d8 <sd_netlink_message_get_type@plt>
  4048f8:	stur	w0, [x29, #-72]
  4048fc:	ldur	w9, [x29, #-72]
  404900:	cmp	w9, #0x0
  404904:	cset	w9, ge  // ge = tcont
  404908:	tbnz	w9, #0, 40498c <manager_process_link+0x1f4>
  40490c:	mov	w8, #0x4                   	// #4
  404910:	stur	w8, [x29, #-76]
  404914:	ldur	w8, [x29, #-72]
  404918:	stur	w8, [x29, #-80]
  40491c:	stur	wzr, [x29, #-84]
  404920:	ldur	w0, [x29, #-84]
  404924:	bl	401fa8 <log_get_max_level_realm@plt>
  404928:	ldur	w8, [x29, #-76]
  40492c:	and	w8, w8, #0x7
  404930:	cmp	w0, w8
  404934:	b.lt	404968 <manager_process_link+0x1d0>  // b.tstop
  404938:	ldur	w8, [x29, #-84]
  40493c:	ldur	w9, [x29, #-76]
  404940:	orr	w0, w9, w8, lsl #10
  404944:	ldur	w1, [x29, #-80]
  404948:	ldr	x2, [sp, #88]
  40494c:	mov	w3, #0x82                  	// #130
  404950:	ldr	x4, [sp, #80]
  404954:	adrp	x5, 406000 <_fini+0x9c>
  404958:	add	x5, x5, #0x4d5
  40495c:	bl	401f58 <log_internal_realm@plt>
  404960:	str	w0, [sp, #60]
  404964:	b	40497c <manager_process_link+0x1e4>
  404968:	ldur	w0, [x29, #-80]
  40496c:	bl	401fb8 <abs@plt>
  404970:	mov	w8, wzr
  404974:	subs	w8, w8, w0, uxtb
  404978:	str	w8, [sp, #60]
  40497c:	ldr	w8, [sp, #60]
  404980:	stur	w8, [x29, #-88]
  404984:	stur	wzr, [x29, #-4]
  404988:	b	404f24 <manager_process_link+0x78c>
  40498c:	ldr	x8, [sp, #96]
  404990:	ldr	x0, [x8, #40]
  404994:	sub	x1, x29, #0x44
  404998:	bl	4021e8 <sd_rtnl_message_link_get_ifindex@plt>
  40499c:	stur	w0, [x29, #-72]
  4049a0:	ldur	w9, [x29, #-72]
  4049a4:	cmp	w9, #0x0
  4049a8:	cset	w9, ge  // ge = tcont
  4049ac:	tbnz	w9, #0, 404a30 <manager_process_link+0x298>
  4049b0:	mov	w8, #0x4                   	// #4
  4049b4:	stur	w8, [x29, #-92]
  4049b8:	ldur	w8, [x29, #-72]
  4049bc:	stur	w8, [x29, #-96]
  4049c0:	stur	wzr, [x29, #-100]
  4049c4:	ldur	w0, [x29, #-100]
  4049c8:	bl	401fa8 <log_get_max_level_realm@plt>
  4049cc:	ldur	w8, [x29, #-92]
  4049d0:	and	w8, w8, #0x7
  4049d4:	cmp	w0, w8
  4049d8:	b.lt	404a0c <manager_process_link+0x274>  // b.tstop
  4049dc:	ldur	w8, [x29, #-100]
  4049e0:	ldur	w9, [x29, #-92]
  4049e4:	orr	w0, w9, w8, lsl #10
  4049e8:	ldur	w1, [x29, #-96]
  4049ec:	ldr	x2, [sp, #88]
  4049f0:	mov	w3, #0x88                  	// #136
  4049f4:	ldr	x4, [sp, #80]
  4049f8:	adrp	x5, 406000 <_fini+0x9c>
  4049fc:	add	x5, x5, #0x504
  404a00:	bl	401f58 <log_internal_realm@plt>
  404a04:	str	w0, [sp, #56]
  404a08:	b	404a20 <manager_process_link+0x288>
  404a0c:	ldur	w0, [x29, #-96]
  404a10:	bl	401fb8 <abs@plt>
  404a14:	mov	w8, wzr
  404a18:	subs	w8, w8, w0, uxtb
  404a1c:	str	w8, [sp, #56]
  404a20:	ldr	w8, [sp, #56]
  404a24:	stur	w8, [x29, #-104]
  404a28:	stur	wzr, [x29, #-4]
  404a2c:	b	404f24 <manager_process_link+0x78c>
  404a30:	ldur	w8, [x29, #-68]
  404a34:	cmp	w8, #0x0
  404a38:	cset	w8, gt
  404a3c:	tbnz	w8, #0, 404ac0 <manager_process_link+0x328>
  404a40:	mov	w8, #0x4                   	// #4
  404a44:	stur	w8, [x29, #-108]
  404a48:	stur	wzr, [x29, #-112]
  404a4c:	stur	wzr, [x29, #-116]
  404a50:	ldur	w0, [x29, #-116]
  404a54:	bl	401fa8 <log_get_max_level_realm@plt>
  404a58:	ldur	w8, [x29, #-108]
  404a5c:	and	w8, w8, #0x7
  404a60:	cmp	w0, w8
  404a64:	b.lt	404a9c <manager_process_link+0x304>  // b.tstop
  404a68:	ldur	w8, [x29, #-116]
  404a6c:	ldur	w9, [x29, #-108]
  404a70:	orr	w0, w9, w8, lsl #10
  404a74:	ldur	w1, [x29, #-112]
  404a78:	ldur	w6, [x29, #-68]
  404a7c:	ldr	x2, [sp, #88]
  404a80:	mov	w3, #0x8b                  	// #139
  404a84:	ldr	x4, [sp, #80]
  404a88:	adrp	x5, 406000 <_fini+0x9c>
  404a8c:	add	x5, x5, #0x538
  404a90:	bl	401f58 <log_internal_realm@plt>
  404a94:	str	w0, [sp, #52]
  404a98:	b	404ab0 <manager_process_link+0x318>
  404a9c:	ldur	w0, [x29, #-112]
  404aa0:	bl	401fb8 <abs@plt>
  404aa4:	mov	w8, wzr
  404aa8:	subs	w8, w8, w0, uxtb
  404aac:	str	w8, [sp, #52]
  404ab0:	ldr	w8, [sp, #52]
  404ab4:	stur	w8, [x29, #-120]
  404ab8:	stur	wzr, [x29, #-4]
  404abc:	b	404f24 <manager_process_link+0x78c>
  404ac0:	ldr	x8, [sp, #96]
  404ac4:	ldr	x0, [x8, #40]
  404ac8:	mov	w1, #0x3                   	// #3
  404acc:	sub	x2, x29, #0x40
  404ad0:	bl	401f18 <sd_netlink_message_read_string@plt>
  404ad4:	stur	w0, [x29, #-72]
  404ad8:	ldur	w9, [x29, #-72]
  404adc:	cmp	w9, #0x0
  404ae0:	cset	w9, ge  // ge = tcont
  404ae4:	tbnz	w9, #0, 404b68 <manager_process_link+0x3d0>
  404ae8:	mov	w8, #0x4                   	// #4
  404aec:	stur	w8, [x29, #-124]
  404af0:	ldur	w8, [x29, #-72]
  404af4:	stur	w8, [x29, #-128]
  404af8:	stur	wzr, [x29, #-132]
  404afc:	ldur	w0, [x29, #-132]
  404b00:	bl	401fa8 <log_get_max_level_realm@plt>
  404b04:	ldur	w8, [x29, #-124]
  404b08:	and	w8, w8, #0x7
  404b0c:	cmp	w0, w8
  404b10:	b.lt	404b44 <manager_process_link+0x3ac>  // b.tstop
  404b14:	ldur	w8, [x29, #-132]
  404b18:	ldur	w9, [x29, #-124]
  404b1c:	orr	w0, w9, w8, lsl #10
  404b20:	ldur	w1, [x29, #-128]
  404b24:	ldr	x2, [sp, #88]
  404b28:	mov	w3, #0x91                  	// #145
  404b2c:	ldr	x4, [sp, #80]
  404b30:	adrp	x5, 406000 <_fini+0x9c>
  404b34:	add	x5, x5, #0x576
  404b38:	bl	401f58 <log_internal_realm@plt>
  404b3c:	str	w0, [sp, #48]
  404b40:	b	404b58 <manager_process_link+0x3c0>
  404b44:	ldur	w0, [x29, #-128]
  404b48:	bl	401fb8 <abs@plt>
  404b4c:	mov	w8, wzr
  404b50:	subs	w8, w8, w0, uxtb
  404b54:	str	w8, [sp, #48]
  404b58:	ldr	w8, [sp, #48]
  404b5c:	stur	w8, [x29, #-136]
  404b60:	stur	wzr, [x29, #-4]
  404b64:	b	404f24 <manager_process_link+0x78c>
  404b68:	ldr	x8, [sp, #96]
  404b6c:	ldr	x9, [x8, #24]
  404b70:	ldr	x0, [x9]
  404b74:	ldursw	x9, [x29, #-68]
  404b78:	mov	x1, x9
  404b7c:	bl	403664 <hashmap_get>
  404b80:	ldr	x8, [sp, #96]
  404b84:	str	x0, [x8, #8]
  404b88:	ldurh	w10, [x29, #-42]
  404b8c:	cmp	w10, #0x10
  404b90:	str	w10, [sp, #44]
  404b94:	b.eq	404bac <manager_process_link+0x414>  // b.none
  404b98:	b	404b9c <manager_process_link+0x404>
  404b9c:	ldr	w8, [sp, #44]
  404ba0:	cmp	w8, #0x11
  404ba4:	b.eq	404e68 <manager_process_link+0x6d0>  // b.none
  404ba8:	b	404f20 <manager_process_link+0x788>
  404bac:	ldr	x8, [sp, #96]
  404bb0:	ldr	x9, [x8, #8]
  404bb4:	cbnz	x9, 404ce0 <manager_process_link+0x548>
  404bb8:	mov	w8, #0x7                   	// #7
  404bbc:	stur	w8, [x29, #-140]
  404bc0:	stur	wzr, [x29, #-144]
  404bc4:	stur	wzr, [x29, #-148]
  404bc8:	ldur	w0, [x29, #-148]
  404bcc:	bl	401fa8 <log_get_max_level_realm@plt>
  404bd0:	ldur	w8, [x29, #-140]
  404bd4:	and	w8, w8, #0x7
  404bd8:	cmp	w0, w8
  404bdc:	b.lt	404c14 <manager_process_link+0x47c>  // b.tstop
  404be0:	ldur	w8, [x29, #-148]
  404be4:	ldur	w9, [x29, #-140]
  404be8:	orr	w0, w9, w8, lsl #10
  404bec:	ldur	w1, [x29, #-144]
  404bf0:	ldur	w6, [x29, #-68]
  404bf4:	ldr	x2, [sp, #88]
  404bf8:	mov	w3, #0x9b                  	// #155
  404bfc:	ldr	x4, [sp, #80]
  404c00:	adrp	x5, 406000 <_fini+0x9c>
  404c04:	add	x5, x5, #0x5af
  404c08:	bl	401f58 <log_internal_realm@plt>
  404c0c:	str	w0, [sp, #40]
  404c10:	b	404c28 <manager_process_link+0x490>
  404c14:	ldur	w0, [x29, #-144]
  404c18:	bl	401fb8 <abs@plt>
  404c1c:	mov	w8, wzr
  404c20:	subs	w8, w8, w0, uxtb
  404c24:	str	w8, [sp, #40]
  404c28:	ldr	w8, [sp, #40]
  404c2c:	stur	w8, [x29, #-152]
  404c30:	ldr	x9, [sp, #96]
  404c34:	ldr	x0, [x9, #24]
  404c38:	ldur	w2, [x29, #-68]
  404c3c:	ldr	x3, [x9]
  404c40:	sub	x1, x29, #0x38
  404c44:	bl	402520 <link_new>
  404c48:	stur	w0, [x29, #-72]
  404c4c:	ldur	w8, [x29, #-72]
  404c50:	cmp	w8, #0x0
  404c54:	cset	w8, ge  // ge = tcont
  404c58:	tbnz	w8, #0, 404ce0 <manager_process_link+0x548>
  404c5c:	mov	w8, #0x3                   	// #3
  404c60:	stur	w8, [x29, #-156]
  404c64:	ldur	w8, [x29, #-72]
  404c68:	str	w8, [sp, #160]
  404c6c:	str	wzr, [sp, #156]
  404c70:	ldr	w0, [sp, #156]
  404c74:	bl	401fa8 <log_get_max_level_realm@plt>
  404c78:	ldur	w8, [x29, #-156]
  404c7c:	and	w8, w8, #0x7
  404c80:	cmp	w0, w8
  404c84:	b.lt	404cb8 <manager_process_link+0x520>  // b.tstop
  404c88:	ldr	w8, [sp, #156]
  404c8c:	ldur	w9, [x29, #-156]
  404c90:	orr	w0, w9, w8, lsl #10
  404c94:	ldr	w1, [sp, #160]
  404c98:	ldr	x2, [sp, #88]
  404c9c:	mov	w3, #0x9f                  	// #159
  404ca0:	ldr	x4, [sp, #80]
  404ca4:	adrp	x5, 406000 <_fini+0x9c>
  404ca8:	add	x5, x5, #0x5bd
  404cac:	bl	401f58 <log_internal_realm@plt>
  404cb0:	str	w0, [sp, #36]
  404cb4:	b	404ccc <manager_process_link+0x534>
  404cb8:	ldr	w0, [sp, #160]
  404cbc:	bl	401fb8 <abs@plt>
  404cc0:	mov	w8, wzr
  404cc4:	subs	w8, w8, w0, uxtb
  404cc8:	str	w8, [sp, #36]
  404ccc:	ldr	w8, [sp, #36]
  404cd0:	str	w8, [sp, #152]
  404cd4:	ldr	w8, [sp, #152]
  404cd8:	stur	w8, [x29, #-4]
  404cdc:	b	404f24 <manager_process_link+0x78c>
  404ce0:	ldr	x8, [sp, #96]
  404ce4:	ldr	x0, [x8, #8]
  404ce8:	ldr	x1, [x8, #40]
  404cec:	bl	4029c8 <link_update_rtnl>
  404cf0:	stur	w0, [x29, #-72]
  404cf4:	ldur	w9, [x29, #-72]
  404cf8:	cmp	w9, #0x0
  404cfc:	cset	w9, ge  // ge = tcont
  404d00:	tbnz	w9, #0, 404d9c <manager_process_link+0x604>
  404d04:	ldr	x8, [sp, #96]
  404d08:	ldr	x9, [x8, #8]
  404d0c:	str	x9, [sp, #144]
  404d10:	ldr	x9, [sp, #144]
  404d14:	cbz	x9, 404d70 <manager_process_link+0x5d8>
  404d18:	ldr	x8, [sp, #144]
  404d1c:	ldr	x8, [x8, #16]
  404d20:	cbz	x8, 404d70 <manager_process_link+0x5d8>
  404d24:	ldur	w1, [x29, #-72]
  404d28:	ldr	x8, [sp, #144]
  404d2c:	ldr	x6, [x8, #16]
  404d30:	mov	w0, #0x4                   	// #4
  404d34:	ldr	x2, [sp, #88]
  404d38:	mov	w3, #0xa4                  	// #164
  404d3c:	ldr	x4, [sp, #80]
  404d40:	ldr	x5, [sp, #72]
  404d44:	mov	x8, xzr
  404d48:	mov	x7, x8
  404d4c:	mov	x9, sp
  404d50:	str	x8, [x9]
  404d54:	mov	x8, sp
  404d58:	adrp	x9, 406000 <_fini+0x9c>
  404d5c:	add	x9, x9, #0x5de
  404d60:	str	x9, [x8, #8]
  404d64:	bl	401f48 <log_object_internal@plt>
  404d68:	str	w0, [sp, #32]
  404d6c:	b	404d94 <manager_process_link+0x5fc>
  404d70:	ldur	w1, [x29, #-72]
  404d74:	mov	w0, #0x4                   	// #4
  404d78:	ldr	x2, [sp, #88]
  404d7c:	mov	w3, #0xa4                  	// #164
  404d80:	ldr	x4, [sp, #80]
  404d84:	adrp	x5, 406000 <_fini+0x9c>
  404d88:	add	x5, x5, #0x5de
  404d8c:	bl	401f58 <log_internal_realm@plt>
  404d90:	str	w0, [sp, #32]
  404d94:	ldr	w8, [sp, #32]
  404d98:	str	w8, [sp, #140]
  404d9c:	ldr	x8, [sp, #96]
  404da0:	ldr	x0, [x8, #8]
  404da4:	bl	402c4c <link_update_monitor>
  404da8:	stur	w0, [x29, #-72]
  404dac:	ldur	w9, [x29, #-72]
  404db0:	cmp	w9, #0x0
  404db4:	cset	w9, ge  // ge = tcont
  404db8:	tbnz	w9, #0, 404e64 <manager_process_link+0x6cc>
  404dbc:	ldur	w8, [x29, #-72]
  404dc0:	mov	w9, #0xffffffc3            	// #-61
  404dc4:	cmp	w8, w9
  404dc8:	b.eq	404e64 <manager_process_link+0x6cc>  // b.none
  404dcc:	ldr	x8, [sp, #96]
  404dd0:	ldr	x9, [x8, #8]
  404dd4:	str	x9, [sp, #128]
  404dd8:	ldr	x9, [sp, #128]
  404ddc:	cbz	x9, 404e38 <manager_process_link+0x6a0>
  404de0:	ldr	x8, [sp, #128]
  404de4:	ldr	x8, [x8, #16]
  404de8:	cbz	x8, 404e38 <manager_process_link+0x6a0>
  404dec:	ldur	w1, [x29, #-72]
  404df0:	ldr	x8, [sp, #128]
  404df4:	ldr	x6, [x8, #16]
  404df8:	mov	w0, #0x4                   	// #4
  404dfc:	ldr	x2, [sp, #88]
  404e00:	mov	w3, #0xa8                  	// #168
  404e04:	ldr	x4, [sp, #80]
  404e08:	ldr	x5, [sp, #72]
  404e0c:	mov	x8, xzr
  404e10:	mov	x7, x8
  404e14:	mov	x9, sp
  404e18:	str	x8, [x9]
  404e1c:	mov	x8, sp
  404e20:	adrp	x9, 406000 <_fini+0x9c>
  404e24:	add	x9, x9, #0x3f8
  404e28:	str	x9, [x8, #8]
  404e2c:	bl	401f48 <log_object_internal@plt>
  404e30:	str	w0, [sp, #28]
  404e34:	b	404e5c <manager_process_link+0x6c4>
  404e38:	ldur	w1, [x29, #-72]
  404e3c:	mov	w0, #0x4                   	// #4
  404e40:	ldr	x2, [sp, #88]
  404e44:	mov	w3, #0xa8                  	// #168
  404e48:	ldr	x4, [sp, #80]
  404e4c:	adrp	x5, 406000 <_fini+0x9c>
  404e50:	add	x5, x5, #0x3f8
  404e54:	bl	401f58 <log_internal_realm@plt>
  404e58:	str	w0, [sp, #28]
  404e5c:	ldr	w8, [sp, #28]
  404e60:	str	w8, [sp, #124]
  404e64:	b	404f20 <manager_process_link+0x788>
  404e68:	ldr	x8, [sp, #96]
  404e6c:	ldr	x9, [x8, #8]
  404e70:	cbz	x9, 404f20 <manager_process_link+0x788>
  404e74:	ldr	x8, [sp, #96]
  404e78:	ldr	x9, [x8, #8]
  404e7c:	str	x9, [sp, #112]
  404e80:	ldr	x9, [sp, #112]
  404e84:	cbz	x9, 404ee4 <manager_process_link+0x74c>
  404e88:	ldr	x8, [sp, #112]
  404e8c:	ldr	x8, [x8, #16]
  404e90:	cbz	x8, 404ee4 <manager_process_link+0x74c>
  404e94:	ldr	x8, [sp, #112]
  404e98:	ldr	x6, [x8, #16]
  404e9c:	mov	w0, #0x7                   	// #7
  404ea0:	mov	w9, wzr
  404ea4:	mov	w1, w9
  404ea8:	ldr	x2, [sp, #88]
  404eac:	mov	w3, #0xae                  	// #174
  404eb0:	ldr	x4, [sp, #80]
  404eb4:	ldr	x5, [sp, #72]
  404eb8:	mov	x8, xzr
  404ebc:	mov	x7, x8
  404ec0:	mov	x10, sp
  404ec4:	str	x8, [x10]
  404ec8:	mov	x8, sp
  404ecc:	adrp	x10, 406000 <_fini+0x9c>
  404ed0:	add	x10, x10, #0x610
  404ed4:	str	x10, [x8, #8]
  404ed8:	bl	401f48 <log_object_internal@plt>
  404edc:	str	w0, [sp, #24]
  404ee0:	b	404f0c <manager_process_link+0x774>
  404ee4:	mov	w0, #0x7                   	// #7
  404ee8:	mov	w8, wzr
  404eec:	mov	w1, w8
  404ef0:	ldr	x2, [sp, #88]
  404ef4:	mov	w3, #0xae                  	// #174
  404ef8:	ldr	x4, [sp, #80]
  404efc:	adrp	x5, 406000 <_fini+0x9c>
  404f00:	add	x5, x5, #0x610
  404f04:	bl	401f58 <log_internal_realm@plt>
  404f08:	str	w0, [sp, #24]
  404f0c:	ldr	w8, [sp, #24]
  404f10:	str	w8, [sp, #108]
  404f14:	ldr	x9, [sp, #96]
  404f18:	ldr	x0, [x9, #8]
  404f1c:	bl	4028d0 <link_free>
  404f20:	stur	wzr, [x29, #-4]
  404f24:	ldur	w0, [x29, #-4]
  404f28:	ldr	x28, [sp, #336]
  404f2c:	ldp	x29, x30, [sp, #320]
  404f30:	add	sp, sp, #0x160
  404f34:	ret

0000000000404f38 <__unique_prefix_static_destructor_wrapper0>:
  404f38:	sub	sp, sp, #0x20
  404f3c:	stp	x29, x30, [sp, #16]
  404f40:	add	x29, sp, #0x10
  404f44:	str	x0, [sp, #8]
  404f48:	ldr	x8, [sp, #8]
  404f4c:	str	x8, [sp]
  404f50:	ldr	x0, [sp]
  404f54:	bl	4053c8 <hashmap_free_free_keyp>
  404f58:	ldp	x29, x30, [sp, #16]
  404f5c:	add	sp, sp, #0x20
  404f60:	ret

0000000000404f64 <__unique_prefix_static_destructor_wrapper1>:
  404f64:	sub	sp, sp, #0x20
  404f68:	stp	x29, x30, [sp, #16]
  404f6c:	add	x29, sp, #0x10
  404f70:	str	x0, [sp, #8]
  404f74:	ldr	x8, [sp, #8]
  404f78:	str	x8, [sp]
  404f7c:	ldr	x0, [sp]
  404f80:	bl	405430 <strv_freep>
  404f84:	ldp	x29, x30, [sp, #16]
  404f88:	add	sp, sp, #0x20
  404f8c:	ret

0000000000404f90 <main>:
  404f90:	sub	sp, sp, #0x30
  404f94:	stp	x29, x30, [sp, #32]
  404f98:	add	x29, sp, #0x20
  404f9c:	mov	w8, wzr
  404fa0:	mov	w9, #0x1                   	// #1
  404fa4:	stur	wzr, [x29, #-4]
  404fa8:	stur	w0, [x29, #-8]
  404fac:	str	x1, [sp, #16]
  404fb0:	ldur	w0, [x29, #-8]
  404fb4:	ldr	x1, [sp, #16]
  404fb8:	str	w8, [sp, #8]
  404fbc:	str	w9, [sp, #4]
  404fc0:	bl	405008 <save_argc_argv>
  404fc4:	ldur	w0, [x29, #-8]
  404fc8:	ldr	x1, [sp, #16]
  404fcc:	bl	40503c <run>
  404fd0:	str	w0, [sp, #12]
  404fd4:	bl	4021f8 <ask_password_agent_close@plt>
  404fd8:	bl	402208 <polkit_agent_close@plt>
  404fdc:	bl	402218 <pager_close@plt>
  404fe0:	bl	402228 <mac_selinux_finish@plt>
  404fe4:	bl	405348 <static_destruct>
  404fe8:	ldr	w8, [sp, #12]
  404fec:	cmp	w8, #0x0
  404ff0:	ldr	w8, [sp, #4]
  404ff4:	ldr	w9, [sp, #8]
  404ff8:	csel	w0, w8, w9, lt  // lt = tstop
  404ffc:	ldp	x29, x30, [sp, #32]
  405000:	add	sp, sp, #0x30
  405004:	ret

0000000000405008 <save_argc_argv>:
  405008:	sub	sp, sp, #0x10
  40500c:	adrp	x8, 420000 <__TMC_END__>
  405010:	add	x8, x8, #0x48
  405014:	adrp	x9, 420000 <__TMC_END__>
  405018:	add	x9, x9, #0x50
  40501c:	str	w0, [sp, #12]
  405020:	str	x1, [sp]
  405024:	ldr	w10, [sp, #12]
  405028:	str	w10, [x8]
  40502c:	ldr	x8, [sp]
  405030:	str	x8, [x9]
  405034:	add	sp, sp, #0x10
  405038:	ret

000000000040503c <run>:
  40503c:	sub	sp, sp, #0x70
  405040:	stp	x29, x30, [sp, #96]
  405044:	add	x29, sp, #0x60
  405048:	mov	x8, xzr
  40504c:	mov	w9, #0x12                  	// #18
  405050:	adrp	x10, 406000 <_fini+0x9c>
  405054:	add	x10, x10, #0x65a
  405058:	add	x10, x10, #0x3
  40505c:	stur	w0, [x29, #-8]
  405060:	stur	x1, [x29, #-16]
  405064:	stur	x8, [x29, #-24]
  405068:	stur	x8, [x29, #-32]
  40506c:	str	w9, [sp, #20]
  405070:	str	x10, [sp, #8]
  405074:	bl	402238 <log_setup_service@plt>
  405078:	ldr	w0, [sp, #20]
  40507c:	bl	402248 <umask@plt>
  405080:	ldur	w9, [x29, #-8]
  405084:	ldur	x1, [x29, #-16]
  405088:	mov	w0, w9
  40508c:	bl	4054d0 <parse_argv>
  405090:	stur	w0, [x29, #-36]
  405094:	ldur	w9, [x29, #-36]
  405098:	cmp	w9, #0x0
  40509c:	cset	w9, gt
  4050a0:	tbnz	w9, #0, 4050b8 <run+0x7c>
  4050a4:	ldur	w8, [x29, #-36]
  4050a8:	stur	w8, [x29, #-4]
  4050ac:	mov	w8, #0x1                   	// #1
  4050b0:	stur	w8, [x29, #-40]
  4050b4:	b	405328 <run+0x2ec>
  4050b8:	adrp	x8, 420000 <__TMC_END__>
  4050bc:	add	x8, x8, #0x40
  4050c0:	ldrb	w9, [x8]
  4050c4:	tbnz	w9, #0, 4050cc <run+0x90>
  4050c8:	b	4050dc <run+0xa0>
  4050cc:	mov	w8, wzr
  4050d0:	mov	w0, w8
  4050d4:	mov	w1, #0x3                   	// #3
  4050d8:	bl	402258 <log_set_max_level_realm@plt>
  4050dc:	mov	w8, wzr
  4050e0:	mov	w0, w8
  4050e4:	mov	x9, xzr
  4050e8:	mov	x1, x9
  4050ec:	mov	w2, #0xf                   	// #15
  4050f0:	mov	w3, #0x2                   	// #2
  4050f4:	mov	w4, #0xffffffff            	// #-1
  4050f8:	bl	402268 <sigprocmask_many@plt>
  4050fc:	cmp	w0, #0x0
  405100:	cset	w8, ge  // ge = tcont
  405104:	mov	w10, #0x1                   	// #1
  405108:	eor	w8, w8, #0x1
  40510c:	eor	w8, w8, w10
  405110:	eor	w8, w8, w10
  405114:	and	w8, w8, #0x1
  405118:	mov	w1, w8
  40511c:	sxtw	x9, w1
  405120:	cbz	x9, 405148 <run+0x10c>
  405124:	mov	w8, wzr
  405128:	mov	w0, w8
  40512c:	adrp	x1, 406000 <_fini+0x9c>
  405130:	add	x1, x1, #0x61e
  405134:	ldr	x2, [sp, #8]
  405138:	mov	w3, #0xc9                  	// #201
  40513c:	adrp	x4, 406000 <_fini+0x9c>
  405140:	add	x4, x4, #0x683
  405144:	bl	401e88 <log_assert_failed_realm@plt>
  405148:	adrp	x8, 420000 <__TMC_END__>
  40514c:	add	x8, x8, #0x30
  405150:	ldr	x1, [x8]
  405154:	adrp	x8, 420000 <__TMC_END__>
  405158:	add	x8, x8, #0x38
  40515c:	ldr	x2, [x8]
  405160:	adrp	x8, 420000 <__TMC_END__>
  405164:	add	x8, x8, #0x18
  405168:	ldr	w3, [x8]
  40516c:	adrp	x8, 420000 <__TMC_END__>
  405170:	add	x8, x8, #0x41
  405174:	ldrb	w9, [x8]
  405178:	adrp	x8, 420000 <__TMC_END__>
  40517c:	add	x8, x8, #0x20
  405180:	ldr	x5, [x8]
  405184:	sub	x0, x29, #0x20
  405188:	and	w4, w9, #0x1
  40518c:	bl	403b4c <manager_new>
  405190:	stur	w0, [x29, #-36]
  405194:	ldur	w9, [x29, #-36]
  405198:	cmp	w9, #0x0
  40519c:	cset	w9, ge  // ge = tcont
  4051a0:	tbnz	w9, #0, 405234 <run+0x1f8>
  4051a4:	mov	w8, #0x3                   	// #3
  4051a8:	stur	w8, [x29, #-44]
  4051ac:	ldur	w8, [x29, #-36]
  4051b0:	str	w8, [sp, #48]
  4051b4:	str	wzr, [sp, #44]
  4051b8:	ldr	w0, [sp, #44]
  4051bc:	bl	401fa8 <log_get_max_level_realm@plt>
  4051c0:	ldur	w8, [x29, #-44]
  4051c4:	and	w8, w8, #0x7
  4051c8:	cmp	w0, w8
  4051cc:	b.lt	405204 <run+0x1c8>  // b.tstop
  4051d0:	ldr	w8, [sp, #44]
  4051d4:	ldur	w9, [x29, #-44]
  4051d8:	orr	w0, w9, w8, lsl #10
  4051dc:	ldr	w1, [sp, #48]
  4051e0:	ldr	x2, [sp, #8]
  4051e4:	mov	w3, #0xcd                  	// #205
  4051e8:	adrp	x4, 406000 <_fini+0x9c>
  4051ec:	add	x4, x4, #0x699
  4051f0:	adrp	x5, 406000 <_fini+0x9c>
  4051f4:	add	x5, x5, #0x69d
  4051f8:	bl	401f58 <log_internal_realm@plt>
  4051fc:	str	w0, [sp, #4]
  405200:	b	405218 <run+0x1dc>
  405204:	ldr	w0, [sp, #48]
  405208:	bl	401fb8 <abs@plt>
  40520c:	mov	w8, wzr
  405210:	subs	w8, w8, w0, uxtb
  405214:	str	w8, [sp, #4]
  405218:	ldr	w8, [sp, #4]
  40521c:	str	w8, [sp, #40]
  405220:	ldr	w8, [sp, #40]
  405224:	stur	w8, [x29, #-4]
  405228:	mov	w8, #0x1                   	// #1
  40522c:	stur	w8, [x29, #-40]
  405230:	b	405328 <run+0x2ec>
  405234:	ldur	x0, [x29, #-32]
  405238:	bl	4032c0 <manager_configured>
  40523c:	tbnz	w0, #0, 405244 <run+0x208>
  405240:	b	405248 <run+0x20c>
  405244:	b	405310 <run+0x2d4>
  405248:	adrp	x0, 406000 <_fini+0x9c>
  40524c:	add	x0, x0, #0x6ba
  405250:	adrp	x1, 406000 <_fini+0x9c>
  405254:	add	x1, x1, #0x6ec
  405258:	bl	40586c <notify_start>
  40525c:	stur	x0, [x29, #-24]
  405260:	ldur	x8, [x29, #-32]
  405264:	ldr	x0, [x8, #72]
  405268:	bl	402278 <sd_event_loop@plt>
  40526c:	stur	w0, [x29, #-36]
  405270:	ldur	w9, [x29, #-36]
  405274:	cmp	w9, #0x0
  405278:	cset	w9, ge  // ge = tcont
  40527c:	tbnz	w9, #0, 405310 <run+0x2d4>
  405280:	mov	w8, #0x3                   	// #3
  405284:	str	w8, [sp, #36]
  405288:	ldur	w8, [x29, #-36]
  40528c:	str	w8, [sp, #32]
  405290:	str	wzr, [sp, #28]
  405294:	ldr	w0, [sp, #28]
  405298:	bl	401fa8 <log_get_max_level_realm@plt>
  40529c:	ldr	w8, [sp, #36]
  4052a0:	and	w8, w8, #0x7
  4052a4:	cmp	w0, w8
  4052a8:	b.lt	4052e0 <run+0x2a4>  // b.tstop
  4052ac:	ldr	w8, [sp, #28]
  4052b0:	ldr	w9, [sp, #36]
  4052b4:	orr	w0, w9, w8, lsl #10
  4052b8:	ldr	w1, [sp, #32]
  4052bc:	ldr	x2, [sp, #8]
  4052c0:	mov	w3, #0xd8                  	// #216
  4052c4:	adrp	x4, 406000 <_fini+0x9c>
  4052c8:	add	x4, x4, #0x699
  4052cc:	adrp	x5, 406000 <_fini+0x9c>
  4052d0:	add	x5, x5, #0x71e
  4052d4:	bl	401f58 <log_internal_realm@plt>
  4052d8:	str	w0, [sp]
  4052dc:	b	4052f4 <run+0x2b8>
  4052e0:	ldr	w0, [sp, #32]
  4052e4:	bl	401fb8 <abs@plt>
  4052e8:	mov	w8, wzr
  4052ec:	subs	w8, w8, w0, uxtb
  4052f0:	str	w8, [sp]
  4052f4:	ldr	w8, [sp]
  4052f8:	str	w8, [sp, #24]
  4052fc:	ldr	w8, [sp, #24]
  405300:	stur	w8, [x29, #-4]
  405304:	mov	w8, #0x1                   	// #1
  405308:	stur	w8, [x29, #-40]
  40530c:	b	405328 <run+0x2ec>
  405310:	adrp	x8, 406000 <_fini+0x9c>
  405314:	add	x8, x8, #0x734
  405318:	stur	x8, [x29, #-24]
  40531c:	stur	wzr, [x29, #-4]
  405320:	mov	w9, #0x1                   	// #1
  405324:	stur	w9, [x29, #-40]
  405328:	sub	x0, x29, #0x20
  40532c:	bl	40549c <manager_freep>
  405330:	sub	x0, x29, #0x18
  405334:	bl	405464 <notify_on_cleanup>
  405338:	ldur	w0, [x29, #-4]
  40533c:	ldp	x29, x30, [sp, #96]
  405340:	add	sp, sp, #0x70
  405344:	ret

0000000000405348 <static_destruct>:
  405348:	sub	sp, sp, #0x20
  40534c:	stp	x29, x30, [sp, #16]
  405350:	add	x29, sp, #0x10
  405354:	adrp	x8, 41f000 <__FRAME_END__+0x18230>
  405358:	ldr	x8, [x8, #3384]
  40535c:	str	x8, [sp]
  405360:	cbnz	x8, 405368 <static_destruct+0x20>
  405364:	b	4053bc <static_destruct+0x74>
  405368:	ldr	x0, [sp]
  40536c:	mov	x1, #0x8                   	// #8
  405370:	bl	405eb0 <ALIGN_TO>
  405374:	str	x0, [sp, #8]
  405378:	ldr	x8, [sp, #8]
  40537c:	adrp	x9, 41f000 <__FRAME_END__+0x18230>
  405380:	ldr	x9, [x9, #3392]
  405384:	cmp	x8, x9
  405388:	b.cs	4053bc <static_destruct+0x74>  // b.hs, b.nlast
  40538c:	ldr	x8, [sp, #8]
  405390:	ldr	x8, [x8, #8]
  405394:	ldr	x9, [sp, #8]
  405398:	ldr	x0, [x9]
  40539c:	blr	x8
  4053a0:	ldr	x8, [sp, #8]
  4053a4:	add	x8, x8, #0x10
  4053a8:	mov	x0, x8
  4053ac:	mov	x1, #0x8                   	// #8
  4053b0:	bl	405eb0 <ALIGN_TO>
  4053b4:	str	x0, [sp, #8]
  4053b8:	b	405378 <static_destruct+0x30>
  4053bc:	ldp	x29, x30, [sp, #16]
  4053c0:	add	sp, sp, #0x20
  4053c4:	ret

00000000004053c8 <hashmap_free_free_keyp>:
  4053c8:	sub	sp, sp, #0x20
  4053cc:	stp	x29, x30, [sp, #16]
  4053d0:	add	x29, sp, #0x10
  4053d4:	str	x0, [sp, #8]
  4053d8:	ldr	x8, [sp, #8]
  4053dc:	ldr	x8, [x8]
  4053e0:	cbz	x8, 4053f0 <hashmap_free_free_keyp+0x28>
  4053e4:	ldr	x8, [sp, #8]
  4053e8:	ldr	x0, [x8]
  4053ec:	bl	4053fc <hashmap_free_free_key>
  4053f0:	ldp	x29, x30, [sp, #16]
  4053f4:	add	sp, sp, #0x20
  4053f8:	ret

00000000004053fc <hashmap_free_free_key>:
  4053fc:	sub	sp, sp, #0x20
  405400:	stp	x29, x30, [sp, #16]
  405404:	add	x29, sp, #0x10
  405408:	adrp	x1, 401000 <_init-0xe20>
  40540c:	add	x1, x1, #0xed8
  405410:	mov	x8, xzr
  405414:	str	x0, [sp, #8]
  405418:	ldr	x0, [sp, #8]
  40541c:	mov	x2, x8
  405420:	bl	402178 <internal_hashmap_free@plt>
  405424:	ldp	x29, x30, [sp, #16]
  405428:	add	sp, sp, #0x20
  40542c:	ret

0000000000405430 <strv_freep>:
  405430:	sub	sp, sp, #0x20
  405434:	stp	x29, x30, [sp, #16]
  405438:	add	x29, sp, #0x10
  40543c:	str	x0, [sp, #8]
  405440:	ldr	x8, [sp, #8]
  405444:	ldr	x8, [x8]
  405448:	cbz	x8, 405458 <strv_freep+0x28>
  40544c:	ldr	x8, [sp, #8]
  405450:	ldr	x0, [x8]
  405454:	bl	402288 <strv_free@plt>
  405458:	ldp	x29, x30, [sp, #16]
  40545c:	add	sp, sp, #0x20
  405460:	ret

0000000000405464 <notify_on_cleanup>:
  405464:	sub	sp, sp, #0x20
  405468:	stp	x29, x30, [sp, #16]
  40546c:	add	x29, sp, #0x10
  405470:	str	x0, [sp, #8]
  405474:	ldr	x8, [sp, #8]
  405478:	cbz	x8, 405490 <notify_on_cleanup+0x2c>
  40547c:	ldr	x8, [sp, #8]
  405480:	ldr	x1, [x8]
  405484:	mov	w9, wzr
  405488:	mov	w0, w9
  40548c:	bl	402298 <sd_notify@plt>
  405490:	ldp	x29, x30, [sp, #16]
  405494:	add	sp, sp, #0x20
  405498:	ret

000000000040549c <manager_freep>:
  40549c:	sub	sp, sp, #0x20
  4054a0:	stp	x29, x30, [sp, #16]
  4054a4:	add	x29, sp, #0x10
  4054a8:	str	x0, [sp, #8]
  4054ac:	ldr	x8, [sp, #8]
  4054b0:	ldr	x8, [x8]
  4054b4:	cbz	x8, 4054c4 <manager_freep+0x28>
  4054b8:	ldr	x8, [sp, #8]
  4054bc:	ldr	x0, [x8]
  4054c0:	bl	404320 <manager_free>
  4054c4:	ldp	x29, x30, [sp, #16]
  4054c8:	add	sp, sp, #0x20
  4054cc:	ret

00000000004054d0 <parse_argv>:
  4054d0:	sub	sp, sp, #0x60
  4054d4:	stp	x29, x30, [sp, #80]
  4054d8:	add	x29, sp, #0x50
  4054dc:	adrp	x8, 420000 <__TMC_END__>
  4054e0:	add	x8, x8, #0x58
  4054e4:	adrp	x9, 406000 <_fini+0x9c>
  4054e8:	add	x9, x9, #0x65a
  4054ec:	add	x9, x9, #0x3
  4054f0:	adrp	x10, 406000 <_fini+0x9c>
  4054f4:	add	x10, x10, #0x7a4
  4054f8:	stur	w0, [x29, #-8]
  4054fc:	stur	x1, [x29, #-16]
  405500:	str	x8, [sp, #24]
  405504:	str	x9, [sp, #16]
  405508:	str	x10, [sp, #8]
  40550c:	ldur	w8, [x29, #-8]
  405510:	cmp	w8, #0x0
  405514:	cset	w8, ge  // ge = tcont
  405518:	mov	w9, #0x1                   	// #1
  40551c:	eor	w8, w8, #0x1
  405520:	eor	w8, w8, w9
  405524:	eor	w8, w8, w9
  405528:	and	w8, w8, #0x1
  40552c:	mov	w0, w8
  405530:	sxtw	x10, w0
  405534:	cbz	x10, 405558 <parse_argv+0x88>
  405538:	mov	w8, wzr
  40553c:	mov	w0, w8
  405540:	adrp	x1, 406000 <_fini+0x9c>
  405544:	add	x1, x1, #0x79a
  405548:	ldr	x2, [sp, #16]
  40554c:	mov	w3, #0x7c                  	// #124
  405550:	ldr	x4, [sp, #8]
  405554:	bl	401e88 <log_assert_failed_realm@plt>
  405558:	ldur	x8, [x29, #-16]
  40555c:	cmp	x8, #0x0
  405560:	cset	w9, ne  // ne = any
  405564:	mov	w10, #0x1                   	// #1
  405568:	eor	w9, w9, #0x1
  40556c:	eor	w9, w9, w10
  405570:	eor	w9, w9, w10
  405574:	and	w9, w9, #0x1
  405578:	mov	w0, w9
  40557c:	sxtw	x8, w0
  405580:	cbz	x8, 4055a4 <parse_argv+0xd4>
  405584:	mov	w8, wzr
  405588:	mov	w0, w8
  40558c:	adrp	x1, 406000 <_fini+0x9c>
  405590:	add	x1, x1, #0x7c1
  405594:	ldr	x2, [sp, #16]
  405598:	mov	w3, #0x7d                  	// #125
  40559c:	ldr	x4, [sp, #8]
  4055a0:	bl	401e88 <log_assert_failed_realm@plt>
  4055a4:	ldur	w0, [x29, #-8]
  4055a8:	ldur	x1, [x29, #-16]
  4055ac:	adrp	x2, 406000 <_fini+0x9c>
  4055b0:	add	x2, x2, #0x7c6
  4055b4:	adrp	x3, 406000 <_fini+0x9c>
  4055b8:	add	x3, x3, #0xba0
  4055bc:	mov	x8, xzr
  4055c0:	mov	x4, x8
  4055c4:	bl	4022a8 <getopt_long@plt>
  4055c8:	stur	w0, [x29, #-20]
  4055cc:	cmp	w0, #0x0
  4055d0:	cset	w9, lt  // lt = tstop
  4055d4:	tbnz	w9, #0, 405854 <parse_argv+0x384>
  4055d8:	ldur	w8, [x29, #-20]
  4055dc:	cmp	w8, #0x3f
  4055e0:	str	w8, [sp, #4]
  4055e4:	b.eq	405824 <parse_argv+0x354>  // b.none
  4055e8:	b	4055ec <parse_argv+0x11c>
  4055ec:	ldr	w8, [sp, #4]
  4055f0:	cmp	w8, #0x68
  4055f4:	b.eq	40566c <parse_argv+0x19c>  // b.none
  4055f8:	b	4055fc <parse_argv+0x12c>
  4055fc:	ldr	w8, [sp, #4]
  405600:	cmp	w8, #0x69
  405604:	b.eq	405698 <parse_argv+0x1c8>  // b.none
  405608:	b	40560c <parse_argv+0x13c>
  40560c:	ldr	w8, [sp, #4]
  405610:	cmp	w8, #0x6f
  405614:	b.eq	405710 <parse_argv+0x240>  // b.none
  405618:	b	40561c <parse_argv+0x14c>
  40561c:	ldr	w8, [sp, #4]
  405620:	cmp	w8, #0x71
  405624:	b.eq	405678 <parse_argv+0x1a8>  // b.none
  405628:	b	40562c <parse_argv+0x15c>
  40562c:	ldr	w8, [sp, #4]
  405630:	cmp	w8, #0x100
  405634:	b.eq	40568c <parse_argv+0x1bc>  // b.none
  405638:	b	40563c <parse_argv+0x16c>
  40563c:	ldr	w8, [sp, #4]
  405640:	cmp	w8, #0x101
  405644:	b.eq	4056c8 <parse_argv+0x1f8>  // b.none
  405648:	b	40564c <parse_argv+0x17c>
  40564c:	ldr	w8, [sp, #4]
  405650:	cmp	w8, #0x102
  405654:	b.eq	4057d8 <parse_argv+0x308>  // b.none
  405658:	b	40565c <parse_argv+0x18c>
  40565c:	ldr	w8, [sp, #4]
  405660:	cmp	w8, #0x103
  405664:	b.eq	4057ec <parse_argv+0x31c>  // b.none
  405668:	b	405830 <parse_argv+0x360>
  40566c:	bl	4058a8 <help>
  405670:	stur	wzr, [x29, #-4]
  405674:	b	40585c <parse_argv+0x38c>
  405678:	adrp	x8, 420000 <__TMC_END__>
  40567c:	add	x8, x8, #0x40
  405680:	mov	w9, #0x1                   	// #1
  405684:	strb	w9, [x8]
  405688:	b	405850 <parse_argv+0x380>
  40568c:	bl	4022b8 <version@plt>
  405690:	stur	w0, [x29, #-4]
  405694:	b	40585c <parse_argv+0x38c>
  405698:	ldr	x8, [sp, #24]
  40569c:	ldr	x0, [x8]
  4056a0:	bl	405964 <parse_interface_with_operstate>
  4056a4:	stur	w0, [x29, #-24]
  4056a8:	ldur	w9, [x29, #-24]
  4056ac:	cmp	w9, #0x0
  4056b0:	cset	w9, ge  // ge = tcont
  4056b4:	tbnz	w9, #0, 4056c4 <parse_argv+0x1f4>
  4056b8:	ldur	w8, [x29, #-24]
  4056bc:	stur	w8, [x29, #-4]
  4056c0:	b	40585c <parse_argv+0x38c>
  4056c4:	b	405850 <parse_argv+0x380>
  4056c8:	ldr	x8, [sp, #24]
  4056cc:	ldr	x1, [x8]
  4056d0:	adrp	x0, 420000 <__TMC_END__>
  4056d4:	add	x0, x0, #0x38
  4056d8:	bl	4022c8 <strv_extend@plt>
  4056dc:	cmp	w0, #0x0
  4056e0:	cset	w9, ge  // ge = tcont
  4056e4:	tbnz	w9, #0, 40570c <parse_argv+0x23c>
  4056e8:	mov	w8, wzr
  4056ec:	mov	w0, w8
  4056f0:	ldr	x1, [sp, #16]
  4056f4:	mov	w2, #0x96                  	// #150
  4056f8:	adrp	x3, 406000 <_fini+0x9c>
  4056fc:	add	x3, x3, #0x7cd
  405700:	bl	4022d8 <log_oom_internal@plt>
  405704:	stur	w0, [x29, #-4]
  405708:	b	40585c <parse_argv+0x38c>
  40570c:	b	405850 <parse_argv+0x380>
  405710:	ldr	x8, [sp, #24]
  405714:	ldr	x0, [x8]
  405718:	bl	401f78 <link_operstate_from_string@plt>
  40571c:	stur	w0, [x29, #-28]
  405720:	ldur	w9, [x29, #-28]
  405724:	cmp	w9, #0x0
  405728:	cset	w9, ge  // ge = tcont
  40572c:	tbnz	w9, #0, 4057c4 <parse_argv+0x2f4>
  405730:	mov	w8, #0x3                   	// #3
  405734:	stur	w8, [x29, #-32]
  405738:	mov	w8, #0x16                  	// #22
  40573c:	movk	w8, #0x4000, lsl #16
  405740:	stur	w8, [x29, #-36]
  405744:	str	wzr, [sp, #40]
  405748:	ldr	w0, [sp, #40]
  40574c:	bl	401fa8 <log_get_max_level_realm@plt>
  405750:	ldur	w8, [x29, #-32]
  405754:	and	w8, w8, #0x7
  405758:	cmp	w0, w8
  40575c:	b.lt	40579c <parse_argv+0x2cc>  // b.tstop
  405760:	ldr	w8, [sp, #40]
  405764:	ldur	w9, [x29, #-32]
  405768:	orr	w0, w9, w8, lsl #10
  40576c:	ldur	w1, [x29, #-36]
  405770:	ldr	x10, [sp, #24]
  405774:	ldr	x6, [x10]
  405778:	ldr	x2, [sp, #16]
  40577c:	mov	w3, #0xa0                  	// #160
  405780:	adrp	x4, 406000 <_fini+0x9c>
  405784:	add	x4, x4, #0x7cd
  405788:	adrp	x5, 406000 <_fini+0x9c>
  40578c:	add	x5, x5, #0x7d8
  405790:	bl	401f58 <log_internal_realm@plt>
  405794:	str	w0, [sp]
  405798:	b	4057b0 <parse_argv+0x2e0>
  40579c:	ldur	w0, [x29, #-36]
  4057a0:	bl	401fb8 <abs@plt>
  4057a4:	mov	w8, wzr
  4057a8:	subs	w8, w8, w0, uxtb
  4057ac:	str	w8, [sp]
  4057b0:	ldr	w8, [sp]
  4057b4:	str	w8, [sp, #36]
  4057b8:	ldr	w8, [sp, #36]
  4057bc:	stur	w8, [x29, #-4]
  4057c0:	b	40585c <parse_argv+0x38c>
  4057c4:	ldur	w8, [x29, #-28]
  4057c8:	adrp	x9, 420000 <__TMC_END__>
  4057cc:	add	x9, x9, #0x18
  4057d0:	str	w8, [x9]
  4057d4:	b	405850 <parse_argv+0x380>
  4057d8:	adrp	x8, 420000 <__TMC_END__>
  4057dc:	add	x8, x8, #0x41
  4057e0:	mov	w9, #0x1                   	// #1
  4057e4:	strb	w9, [x8]
  4057e8:	b	405850 <parse_argv+0x380>
  4057ec:	ldr	x8, [sp, #24]
  4057f0:	ldr	x0, [x8]
  4057f4:	adrp	x1, 420000 <__TMC_END__>
  4057f8:	add	x1, x1, #0x20
  4057fc:	bl	4022e8 <parse_sec@plt>
  405800:	stur	w0, [x29, #-24]
  405804:	ldur	w9, [x29, #-24]
  405808:	cmp	w9, #0x0
  40580c:	cset	w9, ge  // ge = tcont
  405810:	tbnz	w9, #0, 405820 <parse_argv+0x350>
  405814:	ldur	w8, [x29, #-24]
  405818:	stur	w8, [x29, #-4]
  40581c:	b	40585c <parse_argv+0x38c>
  405820:	b	405850 <parse_argv+0x380>
  405824:	mov	w8, #0xffffffea            	// #-22
  405828:	stur	w8, [x29, #-4]
  40582c:	b	40585c <parse_argv+0x38c>
  405830:	mov	w8, wzr
  405834:	mov	w0, w8
  405838:	adrp	x1, 406000 <_fini+0x9c>
  40583c:	add	x1, x1, #0x7f7
  405840:	ldr	x2, [sp, #16]
  405844:	mov	w3, #0xb3                  	// #179
  405848:	ldr	x4, [sp, #8]
  40584c:	bl	4022f8 <log_assert_failed_unreachable_realm@plt>
  405850:	b	4055a4 <parse_argv+0xd4>
  405854:	mov	w8, #0x1                   	// #1
  405858:	stur	w8, [x29, #-4]
  40585c:	ldur	w0, [x29, #-4]
  405860:	ldp	x29, x30, [sp, #80]
  405864:	add	sp, sp, #0x60
  405868:	ret

000000000040586c <notify_start>:
  40586c:	sub	sp, sp, #0x20
  405870:	stp	x29, x30, [sp, #16]
  405874:	add	x29, sp, #0x10
  405878:	str	x0, [sp, #8]
  40587c:	str	x1, [sp]
  405880:	ldr	x8, [sp, #8]
  405884:	cbz	x8, 405898 <notify_start+0x2c>
  405888:	ldr	x1, [sp, #8]
  40588c:	mov	w8, wzr
  405890:	mov	w0, w8
  405894:	bl	402298 <sd_notify@plt>
  405898:	ldr	x0, [sp]
  40589c:	ldp	x29, x30, [sp, #16]
  4058a0:	add	sp, sp, #0x20
  4058a4:	ret

00000000004058a8 <help>:
  4058a8:	sub	sp, sp, #0x30
  4058ac:	stp	x29, x30, [sp, #32]
  4058b0:	add	x29, sp, #0x20
  4058b4:	mov	x8, xzr
  4058b8:	adrp	x0, 406000 <_fini+0x9c>
  4058bc:	add	x0, x0, #0x808
  4058c0:	adrp	x1, 406000 <_fini+0x9c>
  4058c4:	add	x1, x1, #0x82d
  4058c8:	adrp	x9, 406000 <_fini+0x9c>
  4058cc:	add	x9, x9, #0x65a
  4058d0:	add	x9, x9, #0x3
  4058d4:	add	x2, sp, #0x10
  4058d8:	str	x8, [sp, #16]
  4058dc:	str	x9, [sp]
  4058e0:	bl	402308 <terminal_urlify_man@plt>
  4058e4:	str	w0, [sp, #12]
  4058e8:	ldr	w10, [sp, #12]
  4058ec:	cmp	w10, #0x0
  4058f0:	cset	w10, ge  // ge = tcont
  4058f4:	tbnz	w10, #0, 405924 <help+0x7c>
  4058f8:	mov	w8, wzr
  4058fc:	mov	w0, w8
  405900:	ldr	x1, [sp]
  405904:	mov	w2, #0x21                  	// #33
  405908:	adrp	x3, 406000 <_fini+0x9c>
  40590c:	add	x3, x3, #0x758
  405910:	bl	4022d8 <log_oom_internal@plt>
  405914:	stur	w0, [x29, #-4]
  405918:	mov	w8, #0x1                   	// #1
  40591c:	str	w8, [sp, #8]
  405920:	b	40594c <help+0xa4>
  405924:	adrp	x8, 420000 <__TMC_END__>
  405928:	add	x8, x8, #0x60
  40592c:	ldr	x1, [x8]
  405930:	ldr	x2, [sp, #16]
  405934:	adrp	x0, 406000 <_fini+0x9c>
  405938:	add	x0, x0, #0x82f
  40593c:	bl	402318 <printf@plt>
  405940:	stur	wzr, [x29, #-4]
  405944:	mov	w9, #0x1                   	// #1
  405948:	str	w9, [sp, #8]
  40594c:	add	x0, sp, #0x10
  405950:	bl	405e48 <freep>
  405954:	ldur	w0, [x29, #-4]
  405958:	ldp	x29, x30, [sp, #32]
  40595c:	add	sp, sp, #0x30
  405960:	ret

0000000000405964 <parse_interface_with_operstate>:
  405964:	sub	sp, sp, #0xd0
  405968:	stp	x29, x30, [sp, #192]
  40596c:	add	x29, sp, #0xc0
  405970:	mov	x8, xzr
  405974:	adrp	x9, 406000 <_fini+0x9c>
  405978:	add	x9, x9, #0x65a
  40597c:	add	x9, x9, #0x3
  405980:	adrp	x10, 406000 <_fini+0x9c>
  405984:	add	x10, x10, #0xafa
  405988:	stur	x0, [x29, #-16]
  40598c:	stur	x8, [x29, #-24]
  405990:	str	x9, [sp, #40]
  405994:	str	x10, [sp, #32]
  405998:	ldur	x8, [x29, #-16]
  40599c:	cmp	x8, #0x0
  4059a0:	cset	w9, ne  // ne = any
  4059a4:	mov	w10, #0x1                   	// #1
  4059a8:	eor	w9, w9, #0x1
  4059ac:	eor	w9, w9, w10
  4059b0:	eor	w9, w9, w10
  4059b4:	and	w9, w9, #0x1
  4059b8:	mov	w0, w9
  4059bc:	sxtw	x8, w0
  4059c0:	cbz	x8, 4059e8 <parse_interface_with_operstate+0x84>
  4059c4:	mov	w8, wzr
  4059c8:	mov	w0, w8
  4059cc:	adrp	x1, 406000 <_fini+0x9c>
  4059d0:	add	x1, x1, #0xac5
  4059d4:	ldr	x2, [sp, #40]
  4059d8:	mov	w3, #0x3d                  	// #61
  4059dc:	adrp	x4, 406000 <_fini+0x9c>
  4059e0:	add	x4, x4, #0xac9
  4059e4:	bl	401e88 <log_assert_failed_realm@plt>
  4059e8:	ldur	x0, [x29, #-16]
  4059ec:	mov	w1, #0x3a                  	// #58
  4059f0:	bl	402328 <strchr@plt>
  4059f4:	stur	x0, [x29, #-40]
  4059f8:	ldur	x8, [x29, #-40]
  4059fc:	cbz	x8, 405b80 <parse_interface_with_operstate+0x21c>
  405a00:	ldur	x8, [x29, #-40]
  405a04:	add	x0, x8, #0x1
  405a08:	bl	405e70 <isempty>
  405a0c:	tbnz	w0, #0, 405a14 <parse_interface_with_operstate+0xb0>
  405a10:	b	405aa4 <parse_interface_with_operstate+0x140>
  405a14:	mov	w8, #0x3                   	// #3
  405a18:	stur	w8, [x29, #-48]
  405a1c:	mov	w8, #0x16                  	// #22
  405a20:	movk	w8, #0x4000, lsl #16
  405a24:	stur	w8, [x29, #-52]
  405a28:	stur	wzr, [x29, #-56]
  405a2c:	ldur	w0, [x29, #-56]
  405a30:	bl	401fa8 <log_get_max_level_realm@plt>
  405a34:	ldur	w8, [x29, #-48]
  405a38:	and	w8, w8, #0x7
  405a3c:	cmp	w0, w8
  405a40:	b.lt	405a74 <parse_interface_with_operstate+0x110>  // b.tstop
  405a44:	ldur	w8, [x29, #-56]
  405a48:	ldur	w9, [x29, #-48]
  405a4c:	orr	w0, w9, w8, lsl #10
  405a50:	ldur	w1, [x29, #-52]
  405a54:	ldr	x2, [sp, #40]
  405a58:	mov	w3, #0x43                  	// #67
  405a5c:	ldr	x4, [sp, #32]
  405a60:	adrp	x5, 406000 <_fini+0x9c>
  405a64:	add	x5, x5, #0xb19
  405a68:	bl	401f58 <log_internal_realm@plt>
  405a6c:	str	w0, [sp, #28]
  405a70:	b	405a88 <parse_interface_with_operstate+0x124>
  405a74:	ldur	w0, [x29, #-52]
  405a78:	bl	401fb8 <abs@plt>
  405a7c:	mov	w8, wzr
  405a80:	subs	w8, w8, w0, uxtb
  405a84:	str	w8, [sp, #28]
  405a88:	ldr	w8, [sp, #28]
  405a8c:	stur	w8, [x29, #-60]
  405a90:	ldur	w8, [x29, #-60]
  405a94:	stur	w8, [x29, #-4]
  405a98:	mov	w8, #0x1                   	// #1
  405a9c:	stur	w8, [x29, #-64]
  405aa0:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405aa4:	ldur	x8, [x29, #-40]
  405aa8:	add	x0, x8, #0x1
  405aac:	bl	401f78 <link_operstate_from_string@plt>
  405ab0:	stur	w0, [x29, #-28]
  405ab4:	ldur	w9, [x29, #-28]
  405ab8:	cmp	w9, #0x0
  405abc:	cset	w9, ge  // ge = tcont
  405ac0:	tbnz	w9, #0, 405b5c <parse_interface_with_operstate+0x1f8>
  405ac4:	mov	w8, #0x3                   	// #3
  405ac8:	stur	w8, [x29, #-68]
  405acc:	mov	w8, #0x16                  	// #22
  405ad0:	movk	w8, #0x4000, lsl #16
  405ad4:	stur	w8, [x29, #-72]
  405ad8:	stur	wzr, [x29, #-76]
  405adc:	ldur	w0, [x29, #-76]
  405ae0:	bl	401fa8 <log_get_max_level_realm@plt>
  405ae4:	ldur	w8, [x29, #-68]
  405ae8:	and	w8, w8, #0x7
  405aec:	cmp	w0, w8
  405af0:	b.lt	405b2c <parse_interface_with_operstate+0x1c8>  // b.tstop
  405af4:	ldur	w8, [x29, #-76]
  405af8:	ldur	w9, [x29, #-68]
  405afc:	orr	w0, w9, w8, lsl #10
  405b00:	ldur	w1, [x29, #-72]
  405b04:	ldur	x10, [x29, #-40]
  405b08:	add	x6, x10, #0x1
  405b0c:	ldr	x2, [sp, #40]
  405b10:	mov	w3, #0x48                  	// #72
  405b14:	ldr	x4, [sp, #32]
  405b18:	adrp	x5, 406000 <_fini+0x9c>
  405b1c:	add	x5, x5, #0x7d8
  405b20:	bl	401f58 <log_internal_realm@plt>
  405b24:	str	w0, [sp, #24]
  405b28:	b	405b40 <parse_interface_with_operstate+0x1dc>
  405b2c:	ldur	w0, [x29, #-72]
  405b30:	bl	401fb8 <abs@plt>
  405b34:	mov	w8, wzr
  405b38:	subs	w8, w8, w0, uxtb
  405b3c:	str	w8, [sp, #24]
  405b40:	ldr	w8, [sp, #24]
  405b44:	stur	w8, [x29, #-80]
  405b48:	ldur	w8, [x29, #-80]
  405b4c:	stur	w8, [x29, #-4]
  405b50:	mov	w8, #0x1                   	// #1
  405b54:	stur	w8, [x29, #-64]
  405b58:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405b5c:	adrp	x8, 420000 <__TMC_END__>
  405b60:	add	x8, x8, #0x58
  405b64:	ldr	x0, [x8]
  405b68:	ldur	x9, [x29, #-40]
  405b6c:	ldr	x8, [x8]
  405b70:	subs	x1, x9, x8
  405b74:	bl	402338 <strndup@plt>
  405b78:	stur	x0, [x29, #-24]
  405b7c:	b	405b94 <parse_interface_with_operstate+0x230>
  405b80:	mov	w8, #0xffffffff            	// #-1
  405b84:	stur	w8, [x29, #-28]
  405b88:	ldur	x0, [x29, #-16]
  405b8c:	bl	401ea8 <strdup@plt>
  405b90:	stur	x0, [x29, #-24]
  405b94:	ldur	x8, [x29, #-24]
  405b98:	cbnz	x8, 405bc4 <parse_interface_with_operstate+0x260>
  405b9c:	mov	w8, wzr
  405ba0:	mov	w0, w8
  405ba4:	ldr	x1, [sp, #40]
  405ba8:	mov	w2, #0x50                  	// #80
  405bac:	ldr	x3, [sp, #32]
  405bb0:	bl	4022d8 <log_oom_internal@plt>
  405bb4:	stur	w0, [x29, #-4]
  405bb8:	mov	w8, #0x1                   	// #1
  405bbc:	stur	w8, [x29, #-64]
  405bc0:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405bc4:	ldur	x0, [x29, #-24]
  405bc8:	bl	402348 <ifname_valid@plt>
  405bcc:	tbnz	w0, #0, 405c64 <parse_interface_with_operstate+0x300>
  405bd0:	mov	w8, #0x3                   	// #3
  405bd4:	stur	w8, [x29, #-84]
  405bd8:	mov	w8, #0x16                  	// #22
  405bdc:	movk	w8, #0x4000, lsl #16
  405be0:	stur	w8, [x29, #-88]
  405be4:	stur	wzr, [x29, #-92]
  405be8:	ldur	w0, [x29, #-92]
  405bec:	bl	401fa8 <log_get_max_level_realm@plt>
  405bf0:	ldur	w8, [x29, #-84]
  405bf4:	and	w8, w8, #0x7
  405bf8:	cmp	w0, w8
  405bfc:	b.lt	405c34 <parse_interface_with_operstate+0x2d0>  // b.tstop
  405c00:	ldur	w8, [x29, #-92]
  405c04:	ldur	w9, [x29, #-84]
  405c08:	orr	w0, w9, w8, lsl #10
  405c0c:	ldur	w1, [x29, #-88]
  405c10:	ldur	x6, [x29, #-24]
  405c14:	ldr	x2, [sp, #40]
  405c18:	mov	w3, #0x54                  	// #84
  405c1c:	ldr	x4, [sp, #32]
  405c20:	adrp	x5, 406000 <_fini+0x9c>
  405c24:	add	x5, x5, #0xb35
  405c28:	bl	401f58 <log_internal_realm@plt>
  405c2c:	str	w0, [sp, #20]
  405c30:	b	405c48 <parse_interface_with_operstate+0x2e4>
  405c34:	ldur	w0, [x29, #-88]
  405c38:	bl	401fb8 <abs@plt>
  405c3c:	mov	w8, wzr
  405c40:	subs	w8, w8, w0, uxtb
  405c44:	str	w8, [sp, #20]
  405c48:	ldr	w8, [sp, #20]
  405c4c:	str	w8, [sp, #96]
  405c50:	ldr	w8, [sp, #96]
  405c54:	stur	w8, [x29, #-4]
  405c58:	mov	w8, #0x1                   	// #1
  405c5c:	stur	w8, [x29, #-64]
  405c60:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405c64:	adrp	x0, 420000 <__TMC_END__>
  405c68:	add	x0, x0, #0x30
  405c6c:	adrp	x1, 41f000 <__FRAME_END__+0x18230>
  405c70:	add	x1, x1, #0xfe0
  405c74:	bl	401e98 <internal_hashmap_ensure_allocated@plt>
  405c78:	stur	w0, [x29, #-44]
  405c7c:	ldur	w8, [x29, #-44]
  405c80:	cmp	w8, #0x0
  405c84:	cset	w8, ge  // ge = tcont
  405c88:	tbnz	w8, #0, 405cb4 <parse_interface_with_operstate+0x350>
  405c8c:	mov	w8, wzr
  405c90:	mov	w0, w8
  405c94:	ldr	x1, [sp, #40]
  405c98:	mov	w2, #0x58                  	// #88
  405c9c:	ldr	x3, [sp, #32]
  405ca0:	bl	4022d8 <log_oom_internal@plt>
  405ca4:	stur	w0, [x29, #-4]
  405ca8:	mov	w8, #0x1                   	// #1
  405cac:	stur	w8, [x29, #-64]
  405cb0:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405cb4:	adrp	x8, 420000 <__TMC_END__>
  405cb8:	add	x8, x8, #0x30
  405cbc:	ldr	x0, [x8]
  405cc0:	ldur	x1, [x29, #-24]
  405cc4:	ldursw	x8, [x29, #-28]
  405cc8:	mov	x2, x8
  405ccc:	bl	401ec8 <hashmap_put@plt>
  405cd0:	stur	w0, [x29, #-44]
  405cd4:	ldur	w9, [x29, #-44]
  405cd8:	cmp	w9, #0x0
  405cdc:	cset	w9, ge  // ge = tcont
  405ce0:	tbnz	w9, #0, 405d70 <parse_interface_with_operstate+0x40c>
  405ce4:	mov	w8, #0x3                   	// #3
  405ce8:	str	w8, [sp, #92]
  405cec:	ldur	w8, [x29, #-44]
  405cf0:	str	w8, [sp, #88]
  405cf4:	str	wzr, [sp, #84]
  405cf8:	ldr	w0, [sp, #84]
  405cfc:	bl	401fa8 <log_get_max_level_realm@plt>
  405d00:	ldr	w8, [sp, #92]
  405d04:	and	w8, w8, #0x7
  405d08:	cmp	w0, w8
  405d0c:	b.lt	405d40 <parse_interface_with_operstate+0x3dc>  // b.tstop
  405d10:	ldr	w8, [sp, #84]
  405d14:	ldr	w9, [sp, #92]
  405d18:	orr	w0, w9, w8, lsl #10
  405d1c:	ldr	w1, [sp, #88]
  405d20:	ldr	x2, [sp, #40]
  405d24:	mov	w3, #0x5c                  	// #92
  405d28:	ldr	x4, [sp, #32]
  405d2c:	adrp	x5, 406000 <_fini+0x9c>
  405d30:	add	x5, x5, #0xb51
  405d34:	bl	401f58 <log_internal_realm@plt>
  405d38:	str	w0, [sp, #16]
  405d3c:	b	405d54 <parse_interface_with_operstate+0x3f0>
  405d40:	ldr	w0, [sp, #88]
  405d44:	bl	401fb8 <abs@plt>
  405d48:	mov	w8, wzr
  405d4c:	subs	w8, w8, w0, uxtb
  405d50:	str	w8, [sp, #16]
  405d54:	ldr	w8, [sp, #16]
  405d58:	str	w8, [sp, #80]
  405d5c:	ldr	w8, [sp, #80]
  405d60:	stur	w8, [x29, #-4]
  405d64:	mov	w8, #0x1                   	// #1
  405d68:	stur	w8, [x29, #-64]
  405d6c:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405d70:	ldur	w8, [x29, #-44]
  405d74:	cbnz	w8, 405e0c <parse_interface_with_operstate+0x4a8>
  405d78:	mov	w8, #0x3                   	// #3
  405d7c:	str	w8, [sp, #76]
  405d80:	mov	w8, #0x16                  	// #22
  405d84:	movk	w8, #0x4000, lsl #16
  405d88:	str	w8, [sp, #72]
  405d8c:	str	wzr, [sp, #68]
  405d90:	ldr	w0, [sp, #68]
  405d94:	bl	401fa8 <log_get_max_level_realm@plt>
  405d98:	ldr	w8, [sp, #76]
  405d9c:	and	w8, w8, #0x7
  405da0:	cmp	w0, w8
  405da4:	b.lt	405ddc <parse_interface_with_operstate+0x478>  // b.tstop
  405da8:	ldr	w8, [sp, #68]
  405dac:	ldr	w9, [sp, #76]
  405db0:	orr	w0, w9, w8, lsl #10
  405db4:	ldr	w1, [sp, #72]
  405db8:	ldur	x6, [x29, #-24]
  405dbc:	ldr	x2, [sp, #40]
  405dc0:	mov	w3, #0x5f                  	// #95
  405dc4:	ldr	x4, [sp, #32]
  405dc8:	adrp	x5, 406000 <_fini+0x9c>
  405dcc:	add	x5, x5, #0xb74
  405dd0:	bl	401f58 <log_internal_realm@plt>
  405dd4:	str	w0, [sp, #12]
  405dd8:	b	405df0 <parse_interface_with_operstate+0x48c>
  405ddc:	ldr	w0, [sp, #72]
  405de0:	bl	401fb8 <abs@plt>
  405de4:	mov	w8, wzr
  405de8:	subs	w8, w8, w0, uxtb
  405dec:	str	w8, [sp, #12]
  405df0:	ldr	w8, [sp, #12]
  405df4:	str	w8, [sp, #64]
  405df8:	ldr	w8, [sp, #64]
  405dfc:	stur	w8, [x29, #-4]
  405e00:	mov	w8, #0x1                   	// #1
  405e04:	stur	w8, [x29, #-64]
  405e08:	b	405e30 <parse_interface_with_operstate+0x4cc>
  405e0c:	ldur	x8, [x29, #-24]
  405e10:	str	x8, [sp, #56]
  405e14:	mov	x8, xzr
  405e18:	stur	x8, [x29, #-24]
  405e1c:	ldr	x8, [sp, #56]
  405e20:	str	x8, [sp, #48]
  405e24:	stur	wzr, [x29, #-4]
  405e28:	mov	w9, #0x1                   	// #1
  405e2c:	stur	w9, [x29, #-64]
  405e30:	sub	x0, x29, #0x18
  405e34:	bl	405e48 <freep>
  405e38:	ldur	w0, [x29, #-4]
  405e3c:	ldp	x29, x30, [sp, #192]
  405e40:	add	sp, sp, #0xd0
  405e44:	ret

0000000000405e48 <freep>:
  405e48:	sub	sp, sp, #0x20
  405e4c:	stp	x29, x30, [sp, #16]
  405e50:	add	x29, sp, #0x10
  405e54:	str	x0, [sp, #8]
  405e58:	ldr	x8, [sp, #8]
  405e5c:	ldr	x0, [x8]
  405e60:	bl	401ed8 <free@plt>
  405e64:	ldp	x29, x30, [sp, #16]
  405e68:	add	sp, sp, #0x20
  405e6c:	ret

0000000000405e70 <isempty>:
  405e70:	sub	sp, sp, #0x10
  405e74:	str	x0, [sp, #8]
  405e78:	ldr	x8, [sp, #8]
  405e7c:	mov	w9, #0x1                   	// #1
  405e80:	str	w9, [sp, #4]
  405e84:	cbz	x8, 405ea0 <isempty+0x30>
  405e88:	ldr	x8, [sp, #8]
  405e8c:	ldrb	w9, [x8]
  405e90:	cmp	w9, #0x0
  405e94:	cset	w9, ne  // ne = any
  405e98:	eor	w9, w9, #0x1
  405e9c:	str	w9, [sp, #4]
  405ea0:	ldr	w8, [sp, #4]
  405ea4:	and	w0, w8, #0x1
  405ea8:	add	sp, sp, #0x10
  405eac:	ret

0000000000405eb0 <ALIGN_TO>:
  405eb0:	sub	sp, sp, #0x10
  405eb4:	str	x0, [sp, #8]
  405eb8:	str	x1, [sp]
  405ebc:	ldr	x8, [sp, #8]
  405ec0:	ldr	x9, [sp]
  405ec4:	add	x8, x8, x9
  405ec8:	subs	x8, x8, #0x1
  405ecc:	ldr	x9, [sp]
  405ed0:	subs	x9, x9, #0x1
  405ed4:	bic	x0, x8, x9
  405ed8:	add	sp, sp, #0x10
  405edc:	ret

0000000000405ee0 <__libc_csu_init>:
  405ee0:	stp	x29, x30, [sp, #-64]!
  405ee4:	mov	x29, sp
  405ee8:	stp	x19, x20, [sp, #16]
  405eec:	adrp	x20, 41f000 <__FRAME_END__+0x18230>
  405ef0:	add	x20, x20, #0xb08
  405ef4:	stp	x21, x22, [sp, #32]
  405ef8:	adrp	x21, 41f000 <__FRAME_END__+0x18230>
  405efc:	add	x21, x21, #0xb00
  405f00:	sub	x20, x20, x21
  405f04:	mov	w22, w0
  405f08:	stp	x23, x24, [sp, #48]
  405f0c:	mov	x23, x1
  405f10:	mov	x24, x2
  405f14:	bl	401e20 <_init>
  405f18:	cmp	xzr, x20, asr #3
  405f1c:	b.eq	405f48 <__libc_csu_init+0x68>  // b.none
  405f20:	asr	x20, x20, #3
  405f24:	mov	x19, #0x0                   	// #0
  405f28:	ldr	x3, [x21, x19, lsl #3]
  405f2c:	mov	x2, x24
  405f30:	add	x19, x19, #0x1
  405f34:	mov	x1, x23
  405f38:	mov	w0, w22
  405f3c:	blr	x3
  405f40:	cmp	x20, x19
  405f44:	b.ne	405f28 <__libc_csu_init+0x48>  // b.any
  405f48:	ldp	x19, x20, [sp, #16]
  405f4c:	ldp	x21, x22, [sp, #32]
  405f50:	ldp	x23, x24, [sp, #48]
  405f54:	ldp	x29, x30, [sp], #64
  405f58:	ret
  405f5c:	nop

0000000000405f60 <__libc_csu_fini>:
  405f60:	ret

Disassembly of section .fini:

0000000000405f64 <_fini>:
  405f64:	stp	x29, x30, [sp, #-16]!
  405f68:	mov	x29, sp
  405f6c:	ldp	x29, x30, [sp], #16
  405f70:	ret
