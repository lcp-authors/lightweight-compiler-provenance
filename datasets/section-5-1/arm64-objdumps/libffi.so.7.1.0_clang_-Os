
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libffi.so.7.1.0_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001938 <.init>:
    1938:	stp	x29, x30, [sp, #-16]!
    193c:	mov	x29, sp
    1940:	bl	1bf0 <unlink@plt+0x10>
    1944:	ldp	x29, x30, [sp], #16
    1948:	ret

Disassembly of section .plt:

0000000000001950 <memcpy@plt-0x20>:
    1950:	stp	x16, x30, [sp, #-16]!
    1954:	adrp	x16, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10330>
    1958:	ldr	x17, [x16, #4088]
    195c:	add	x16, x16, #0xff8
    1960:	br	x17
    1964:	nop
    1968:	nop
    196c:	nop

0000000000001970 <memcpy@plt>:
    1970:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1974:	ldr	x17, [x16]
    1978:	add	x16, x16, #0x0
    197c:	br	x17

0000000000001980 <ffi_prep_closure_loc@plt>:
    1980:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1984:	ldr	x17, [x16, #8]
    1988:	add	x16, x16, #0x8
    198c:	br	x17

0000000000001990 <strlen@plt>:
    1990:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1994:	ldr	x17, [x16, #16]
    1998:	add	x16, x16, #0x10
    199c:	br	x17

00000000000019a0 <ffi_java_raw_to_ptrarray@plt>:
    19a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19a4:	ldr	x17, [x16, #24]
    19a8:	add	x16, x16, #0x18
    19ac:	br	x17

00000000000019b0 <__cxa_finalize@plt>:
    19b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19b4:	ldr	x17, [x16, #32]
    19b8:	add	x16, x16, #0x20
    19bc:	br	x17

00000000000019c0 <statfs@plt>:
    19c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19c4:	ldr	x17, [x16, #40]
    19c8:	add	x16, x16, #0x28
    19cc:	br	x17

00000000000019d0 <fclose@plt>:
    19d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19d4:	ldr	x17, [x16, #48]
    19d8:	add	x16, x16, #0x30
    19dc:	br	x17

00000000000019e0 <fopen@plt>:
    19e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19e4:	ldr	x17, [x16, #56]
    19e8:	add	x16, x16, #0x38
    19ec:	br	x17

00000000000019f0 <open@plt>:
    19f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #64]
    19f8:	add	x16, x16, #0x40
    19fc:	br	x17

0000000000001a00 <strncmp@plt>:
    1a00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #72]
    1a08:	add	x16, x16, #0x48
    1a0c:	br	x17

0000000000001a10 <memset@plt>:
    1a10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #80]
    1a18:	add	x16, x16, #0x50
    1a1c:	br	x17

0000000000001a20 <ffi_raw_to_ptrarray@plt>:
    1a20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #88]
    1a28:	add	x16, x16, #0x58
    1a2c:	br	x17

0000000000001a30 <setmntent@plt>:
    1a30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #96]
    1a38:	add	x16, x16, #0x60
    1a3c:	br	x17

0000000000001a40 <endmntent@plt>:
    1a40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #104]
    1a48:	add	x16, x16, #0x68
    1a4c:	br	x17

0000000000001a50 <pthread_mutex_init@plt>:
    1a50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #112]
    1a58:	add	x16, x16, #0x70
    1a5c:	br	x17

0000000000001a60 <close@plt>:
    1a60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #120]
    1a68:	add	x16, x16, #0x78
    1a6c:	br	x17

0000000000001a70 <__gmon_start__@plt>:
    1a70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #128]
    1a78:	add	x16, x16, #0x80
    1a7c:	br	x17

0000000000001a80 <write@plt>:
    1a80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #136]
    1a88:	add	x16, x16, #0x88
    1a8c:	br	x17

0000000000001a90 <abort@plt>:
    1a90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #144]
    1a98:	add	x16, x16, #0x90
    1a9c:	br	x17

0000000000001aa0 <mkostemp@plt>:
    1aa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #152]
    1aa8:	add	x16, x16, #0x98
    1aac:	br	x17

0000000000001ab0 <access@plt>:
    1ab0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #160]
    1ab8:	add	x16, x16, #0xa0
    1abc:	br	x17

0000000000001ac0 <mmap@plt>:
    1ac0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #168]
    1ac8:	add	x16, x16, #0xa8
    1acc:	br	x17

0000000000001ad0 <getline@plt>:
    1ad0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #176]
    1ad8:	add	x16, x16, #0xb0
    1adc:	br	x17

0000000000001ae0 <free@plt>:
    1ae0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #184]
    1ae8:	add	x16, x16, #0xb8
    1aec:	br	x17

0000000000001af0 <ffi_java_raw_size@plt>:
    1af0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #192]
    1af8:	add	x16, x16, #0xc0
    1afc:	br	x17

0000000000001b00 <ffi_raw_size@plt>:
    1b00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #200]
    1b08:	add	x16, x16, #0xc8
    1b0c:	br	x17

0000000000001b10 <ffi_ptrarray_to_raw@plt>:
    1b10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #208]
    1b18:	add	x16, x16, #0xd0
    1b1c:	br	x17

0000000000001b20 <hasmntopt@plt>:
    1b20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #216]
    1b28:	add	x16, x16, #0xd8
    1b2c:	br	x17

0000000000001b30 <strchr@plt>:
    1b30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #224]
    1b38:	add	x16, x16, #0xe0
    1b3c:	br	x17

0000000000001b40 <munmap@plt>:
    1b40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #232]
    1b48:	add	x16, x16, #0xe8
    1b4c:	br	x17

0000000000001b50 <ffi_call@plt>:
    1b50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #240]
    1b58:	add	x16, x16, #0xf0
    1b5c:	br	x17

0000000000001b60 <sysconf@plt>:
    1b60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #248]
    1b68:	add	x16, x16, #0xf8
    1b6c:	br	x17

0000000000001b70 <getmntent_r@plt>:
    1b70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #256]
    1b78:	add	x16, x16, #0x100
    1b7c:	br	x17

0000000000001b80 <ftruncate@plt>:
    1b80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #264]
    1b88:	add	x16, x16, #0x108
    1b8c:	br	x17

0000000000001b90 <__errno_location@plt>:
    1b90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #272]
    1b98:	add	x16, x16, #0x110
    1b9c:	br	x17

0000000000001ba0 <getenv@plt>:
    1ba0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #280]
    1ba8:	add	x16, x16, #0x118
    1bac:	br	x17

0000000000001bb0 <ffi_java_ptrarray_to_raw@plt>:
    1bb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #288]
    1bb8:	add	x16, x16, #0x120
    1bbc:	br	x17

0000000000001bc0 <pthread_mutex_lock@plt>:
    1bc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #296]
    1bc8:	add	x16, x16, #0x128
    1bcc:	br	x17

0000000000001bd0 <pthread_mutex_unlock@plt>:
    1bd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #304]
    1bd8:	add	x16, x16, #0x130
    1bdc:	br	x17

0000000000001be0 <unlink@plt>:
    1be0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #312]
    1be8:	add	x16, x16, #0x138
    1bec:	br	x17

Disassembly of section .text:

0000000000001bf0 <ffi_prep_cif@@LIBFFI_BASE_7.0-0x2a4>:
    1bf0:	adrp	x0, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10330>
    1bf4:	ldr	x0, [x0, #4056]
    1bf8:	cbz	x0, 1c00 <unlink@plt+0x20>
    1bfc:	b	1a70 <__gmon_start__@plt>
    1c00:	ret
    1c04:	nop
    1c08:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c0c:	add	x0, x0, #0x180
    1c10:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    1c14:	add	x1, x1, #0x180
    1c18:	cmp	x1, x0
    1c1c:	b.eq	1c34 <unlink@plt+0x54>  // b.none
    1c20:	adrp	x1, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10330>
    1c24:	ldr	x1, [x1, #4040]
    1c28:	cbz	x1, 1c34 <unlink@plt+0x54>
    1c2c:	mov	x16, x1
    1c30:	br	x16
    1c34:	ret
    1c38:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c3c:	add	x0, x0, #0x180
    1c40:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    1c44:	add	x1, x1, #0x180
    1c48:	sub	x1, x1, x0
    1c4c:	lsr	x2, x1, #63
    1c50:	add	x1, x2, x1, asr #3
    1c54:	cmp	xzr, x1, asr #1
    1c58:	asr	x1, x1, #1
    1c5c:	b.eq	1c74 <unlink@plt+0x94>  // b.none
    1c60:	adrp	x2, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10330>
    1c64:	ldr	x2, [x2, #4064]
    1c68:	cbz	x2, 1c74 <unlink@plt+0x94>
    1c6c:	mov	x16, x2
    1c70:	br	x16
    1c74:	ret
    1c78:	stp	x29, x30, [sp, #-32]!
    1c7c:	mov	x29, sp
    1c80:	str	x19, [sp, #16]
    1c84:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    1c88:	ldrb	w0, [x19, #384]
    1c8c:	cbnz	w0, 1cb4 <unlink@plt+0xd4>
    1c90:	adrp	x0, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10330>
    1c94:	ldr	x0, [x0, #4048]
    1c98:	cbz	x0, 1ca8 <unlink@plt+0xc8>
    1c9c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1ca0:	ldr	x0, [x0, #320]
    1ca4:	bl	19b0 <__cxa_finalize@plt>
    1ca8:	bl	1c08 <unlink@plt+0x28>
    1cac:	mov	w0, #0x1                   	// #1
    1cb0:	strb	w0, [x19, #384]
    1cb4:	ldr	x19, [sp, #16]
    1cb8:	ldp	x29, x30, [sp], #32
    1cbc:	ret
    1cc0:	b	1c38 <unlink@plt+0x58>
    1cc4:	stp	x29, x30, [sp, #-48]!
    1cc8:	stp	x22, x21, [sp, #16]
    1ccc:	stp	x20, x19, [sp, #32]
    1cd0:	mov	x29, sp
    1cd4:	cmp	w1, #0x1
    1cd8:	b.ne	1d80 <unlink@plt+0x1a0>  // b.any
    1cdc:	mov	w8, #0x1                   	// #1
    1ce0:	stp	x6, x5, [x0, #8]
    1ce4:	stp	w8, w4, [x0]
    1ce8:	str	wzr, [x0, #28]
    1cec:	ldr	x8, [x5]
    1cf0:	mov	x20, x6
    1cf4:	mov	w21, w4
    1cf8:	mov	x19, x0
    1cfc:	cbz	x8, 1d88 <unlink@plt+0x1a8>
    1d00:	ldrh	w8, [x5, #10]
    1d04:	cmp	w8, #0xd
    1d08:	cset	w8, eq  // eq = none
    1d0c:	lsl	w22, w8, #3
    1d10:	cbz	w21, 1d68 <unlink@plt+0x188>
    1d14:	ldr	x0, [x20]
    1d18:	ldr	x8, [x0]
    1d1c:	cbnz	x8, 1d34 <unlink@plt+0x154>
    1d20:	mov	x1, xzr
    1d24:	bl	1db8 <unlink@plt+0x1d8>
    1d28:	cbnz	w0, 1d98 <unlink@plt+0x1b8>
    1d2c:	ldr	x0, [x20]
    1d30:	ldr	x8, [x0]
    1d34:	ldrh	w9, [x0, #8]
    1d38:	sub	w10, w22, #0x1
    1d3c:	sub	w8, w8, #0x1
    1d40:	orr	w8, w8, #0x7
    1d44:	sub	w9, w9, #0x1
    1d48:	orr	w10, w9, w10
    1d4c:	tst	w9, w22
    1d50:	csinc	w9, w22, w10, eq  // eq = none
    1d54:	add	w8, w8, w9
    1d58:	subs	w21, w21, #0x1
    1d5c:	add	w22, w8, #0x1
    1d60:	add	x20, x20, #0x8
    1d64:	b.ne	1d14 <unlink@plt+0x134>  // b.any
    1d68:	str	w22, [x19, #24]
    1d6c:	mov	x0, x19
    1d70:	ldp	x20, x19, [sp, #32]
    1d74:	ldp	x22, x21, [sp, #16]
    1d78:	ldp	x29, x30, [sp], #48
    1d7c:	b	4d8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1350>
    1d80:	mov	w0, #0x2                   	// #2
    1d84:	b	1d9c <unlink@plt+0x1bc>
    1d88:	mov	x0, x5
    1d8c:	mov	x1, xzr
    1d90:	bl	1db8 <unlink@plt+0x1d8>
    1d94:	cbz	w0, 1dac <unlink@plt+0x1cc>
    1d98:	mov	w0, #0x1                   	// #1
    1d9c:	ldp	x20, x19, [sp, #32]
    1da0:	ldp	x22, x21, [sp, #16]
    1da4:	ldp	x29, x30, [sp], #48
    1da8:	ret
    1dac:	ldp	x20, x5, [x19, #8]
    1db0:	ldr	w21, [x19, #4]
    1db4:	b	1d00 <unlink@plt+0x120>
    1db8:	stp	x29, x30, [sp, #-48]!
    1dbc:	str	x21, [sp, #16]
    1dc0:	stp	x20, x19, [sp, #32]
    1dc4:	mov	x29, sp
    1dc8:	cbz	x0, 1e8c <unlink@plt+0x2ac>
    1dcc:	ldr	x9, [x0, #16]
    1dd0:	mov	x19, x0
    1dd4:	cbz	x9, 1e8c <unlink@plt+0x2ac>
    1dd8:	str	xzr, [x19]
    1ddc:	strh	wzr, [x19, #8]
    1de0:	ldr	x0, [x9]
    1de4:	cbz	x0, 1e64 <unlink@plt+0x284>
    1de8:	mov	x20, x1
    1dec:	mov	x8, xzr
    1df0:	add	x21, x9, #0x8
    1df4:	ldr	x9, [x0]
    1df8:	cbnz	x9, 1e10 <unlink@plt+0x230>
    1dfc:	mov	x1, xzr
    1e00:	bl	1db8 <unlink@plt+0x1d8>
    1e04:	cbnz	w0, 1e8c <unlink@plt+0x2ac>
    1e08:	ldr	x8, [x19]
    1e0c:	ldur	x0, [x21, #-8]
    1e10:	ldrh	w9, [x0, #8]
    1e14:	sub	x8, x8, #0x1
    1e18:	sub	x10, x9, #0x1
    1e1c:	orr	x8, x10, x8
    1e20:	add	x8, x8, #0x1
    1e24:	str	x8, [x19]
    1e28:	cbz	x20, 1e34 <unlink@plt+0x254>
    1e2c:	str	x8, [x20], #8
    1e30:	ldr	x8, [x19]
    1e34:	ldrh	w11, [x19, #8]
    1e38:	ldr	x10, [x0]
    1e3c:	cmp	w11, w9
    1e40:	add	x8, x8, x10
    1e44:	csel	w9, w11, w9, hi  // hi = pmore
    1e48:	str	x8, [x19]
    1e4c:	strh	w9, [x19, #8]
    1e50:	ldr	x0, [x21], #8
    1e54:	cbnz	x0, 1df4 <unlink@plt+0x214>
    1e58:	sub	x10, x8, #0x1
    1e5c:	sub	x8, x9, #0x1
    1e60:	b	1e6c <unlink@plt+0x28c>
    1e64:	mov	x8, #0xffffffffffffffff    	// #-1
    1e68:	mov	x10, #0xffffffffffffffff    	// #-1
    1e6c:	orr	x8, x8, x10
    1e70:	adds	x8, x8, #0x1
    1e74:	cset	w0, cs  // cs = hs, nlast
    1e78:	str	x8, [x19]
    1e7c:	ldp	x20, x19, [sp, #32]
    1e80:	ldr	x21, [sp, #16]
    1e84:	ldp	x29, x30, [sp], #48
    1e88:	ret
    1e8c:	mov	w0, #0x1                   	// #1
    1e90:	b	1e7c <unlink@plt+0x29c>

0000000000001e94 <ffi_prep_cif@@LIBFFI_BASE_7.0>:
    1e94:	mov	x6, x4
    1e98:	mov	w4, w2
    1e9c:	mov	x5, x3
    1ea0:	b	1cc4 <unlink@plt+0xe4>

0000000000001ea4 <ffi_prep_cif_var@@LIBFFI_BASE_7.0>:
    1ea4:	mov	x6, x5
    1ea8:	mov	x5, x4
    1eac:	mov	w4, w3
    1eb0:	b	1cc4 <unlink@plt+0xe4>

0000000000001eb4 <ffi_prep_closure@@LIBFFI_CLOSURE_7.0>:
    1eb4:	mov	x4, x0
    1eb8:	b	1980 <ffi_prep_closure_loc@plt>

0000000000001ebc <ffi_get_struct_offsets@@LIBFFI_BASE_7.1>:
    1ebc:	cmp	w0, #0x1
    1ec0:	b.ne	1edc <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x20>  // b.any
    1ec4:	ldrh	w8, [x1, #10]
    1ec8:	cmp	w8, #0xd
    1ecc:	b.ne	1ee4 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x28>  // b.any
    1ed0:	mov	x0, x1
    1ed4:	mov	x1, x2
    1ed8:	b	1db8 <unlink@plt+0x1d8>
    1edc:	mov	w0, #0x2                   	// #2
    1ee0:	ret
    1ee4:	mov	w0, #0x1                   	// #1
    1ee8:	ret

0000000000001eec <ffi_raw_size@@LIBFFI_BASE_7.0>:
    1eec:	ldr	w8, [x0, #4]
    1ef0:	subs	w8, w8, #0x1
    1ef4:	b.mi	1f3c <ffi_raw_size@@LIBFFI_BASE_7.0+0x50>  // b.first
    1ef8:	ldr	x9, [x0, #8]
    1efc:	mov	x0, xzr
    1f00:	ldr	x10, [x9]
    1f04:	ldrh	w11, [x10, #10]
    1f08:	cmp	w11, #0xd
    1f0c:	b.ne	1f18 <ffi_raw_size@@LIBFFI_BASE_7.0+0x2c>  // b.any
    1f10:	add	x0, x0, #0x8
    1f14:	b	1f2c <ffi_raw_size@@LIBFFI_BASE_7.0+0x40>
    1f18:	ldr	x10, [x10]
    1f1c:	sub	x10, x10, #0x1
    1f20:	orr	x10, x10, #0x7
    1f24:	add	x10, x0, x10
    1f28:	add	x0, x10, #0x1
    1f2c:	subs	w8, w8, #0x1
    1f30:	add	x9, x9, #0x8
    1f34:	b.pl	1f00 <ffi_raw_size@@LIBFFI_BASE_7.0+0x14>  // b.nfrst
    1f38:	ret
    1f3c:	mov	x0, xzr
    1f40:	ret

0000000000001f44 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    1f44:	ldr	w8, [x0, #4]
    1f48:	cbz	w8, 1fa4 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x60>
    1f4c:	ldr	x9, [x0, #8]
    1f50:	mov	x10, xzr
    1f54:	ldr	x11, [x9, x10, lsl #3]
    1f58:	ldrh	w11, [x11, #10]
    1f5c:	cmp	w11, #0xf
    1f60:	b.eq	1f6c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x28>  // b.none
    1f64:	cmp	w11, #0xd
    1f68:	b.ne	1f78 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x34>  // b.any
    1f6c:	ldr	x11, [x1], #8
    1f70:	str	x11, [x2]
    1f74:	b	1f94 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x50>
    1f78:	str	x1, [x2]
    1f7c:	ldr	x11, [x9, x10, lsl #3]
    1f80:	ldr	x11, [x11]
    1f84:	sub	x11, x11, #0x1
    1f88:	orr	x11, x11, #0x7
    1f8c:	add	x11, x11, x1
    1f90:	add	x1, x11, #0x1
    1f94:	add	x10, x10, #0x1
    1f98:	cmp	w10, w8
    1f9c:	add	x2, x2, #0x8
    1fa0:	b.cc	1f54 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x10>  // b.lo, b.ul, b.last
    1fa4:	ret

0000000000001fa8 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    1fa8:	stp	x29, x30, [sp, #-64]!
    1fac:	stp	x24, x23, [sp, #16]
    1fb0:	stp	x22, x21, [sp, #32]
    1fb4:	stp	x20, x19, [sp, #48]
    1fb8:	ldr	w8, [x0, #4]
    1fbc:	mov	x29, sp
    1fc0:	cbz	w8, 20a0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xf8>
    1fc4:	ldr	x23, [x0, #8]
    1fc8:	adrp	x24, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    1fcc:	mov	x19, x2
    1fd0:	mov	x20, x0
    1fd4:	mov	x21, x1
    1fd8:	mov	x22, xzr
    1fdc:	add	x24, x24, #0xce8
    1fe0:	ldr	x8, [x23, x22, lsl #3]
    1fe4:	ldrh	w9, [x8, #10]
    1fe8:	sub	w9, w9, #0x5
    1fec:	cmp	w9, #0xa
    1ff0:	b.hi	2054 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>  // b.pmore
    1ff4:	adr	x10, 2004 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x5c>
    1ff8:	ldrb	w11, [x24, x9]
    1ffc:	add	x10, x10, x11, lsl #2
    2000:	br	x10
    2004:	ldr	x8, [x21]
    2008:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    200c:	ldr	x8, [x21]
    2010:	ldrb	w8, [x8]
    2014:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    2018:	ldr	x8, [x21]
    201c:	ldrsb	x8, [x8]
    2020:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    2024:	ldr	x8, [x21]
    2028:	ldrh	w8, [x8]
    202c:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    2030:	ldr	x8, [x21]
    2034:	ldrsh	x8, [x8]
    2038:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    203c:	ldr	x8, [x21]
    2040:	ldr	w8, [x8]
    2044:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    2048:	ldr	x8, [x21]
    204c:	ldrsw	x8, [x8]
    2050:	b	2088 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe0>
    2054:	ldr	x1, [x21]
    2058:	ldr	x2, [x8]
    205c:	mov	x0, x19
    2060:	bl	1970 <memcpy@plt>
    2064:	ldr	x8, [x23, x22, lsl #3]
    2068:	ldr	x8, [x8]
    206c:	sub	x8, x8, #0x1
    2070:	orr	x8, x8, #0x7
    2074:	add	x8, x8, x19
    2078:	add	x19, x8, #0x1
    207c:	b	208c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe4>
    2080:	ldr	x8, [x21]
    2084:	ldr	x8, [x8]
    2088:	str	x8, [x19], #8
    208c:	ldr	w8, [x20, #4]
    2090:	add	x22, x22, #0x1
    2094:	add	x21, x21, #0x8
    2098:	cmp	w22, w8
    209c:	b.cc	1fe0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x38>  // b.lo, b.ul, b.last
    20a0:	ldp	x20, x19, [sp, #48]
    20a4:	ldp	x22, x21, [sp, #32]
    20a8:	ldp	x24, x23, [sp, #16]
    20ac:	ldp	x29, x30, [sp], #64
    20b0:	ret

00000000000020b4 <ffi_raw_call@@LIBFFI_BASE_7.0>:
    20b4:	stp	x29, x30, [sp, #-48]!
    20b8:	stp	x22, x21, [sp, #16]
    20bc:	stp	x20, x19, [sp, #32]
    20c0:	mov	x29, sp
    20c4:	ldr	w8, [x0, #4]
    20c8:	mov	x9, sp
    20cc:	mov	x19, x2
    20d0:	mov	x20, x0
    20d4:	lsl	x8, x8, #3
    20d8:	add	x8, x8, #0xf
    20dc:	and	x8, x8, #0xffffffff0
    20e0:	sub	x22, x9, x8
    20e4:	mov	x21, x1
    20e8:	mov	sp, x22
    20ec:	mov	x1, x3
    20f0:	mov	x2, x22
    20f4:	bl	1a20 <ffi_raw_to_ptrarray@plt>
    20f8:	mov	x0, x20
    20fc:	mov	x1, x21
    2100:	mov	x2, x19
    2104:	mov	x3, x22
    2108:	bl	1b50 <ffi_call@plt>
    210c:	mov	sp, x29
    2110:	ldp	x20, x19, [sp, #32]
    2114:	ldp	x22, x21, [sp, #16]
    2118:	ldp	x29, x30, [sp], #48
    211c:	ret

0000000000002120 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2120:	stp	x29, x30, [sp, #-48]!
    2124:	str	x21, [sp, #16]
    2128:	stp	x20, x19, [sp, #32]
    212c:	mov	x29, sp
    2130:	mov	x20, x2
    2134:	adrp	x2, 2000 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x58>
    2138:	mov	x19, x3
    213c:	add	x2, x2, #0x164
    2140:	mov	x3, x4
    2144:	mov	x21, x0
    2148:	bl	1980 <ffi_prep_closure_loc@plt>
    214c:	cbnz	w0, 2154 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>
    2150:	stp	x20, x19, [x21, #48]
    2154:	ldp	x20, x19, [sp, #32]
    2158:	ldr	x21, [sp, #16]
    215c:	ldp	x29, x30, [sp], #48
    2160:	ret
    2164:	stp	x29, x30, [sp, #-64]!
    2168:	str	x23, [sp, #16]
    216c:	stp	x22, x21, [sp, #32]
    2170:	stp	x20, x19, [sp, #48]
    2174:	mov	x29, sp
    2178:	mov	x19, x3
    217c:	mov	x20, x2
    2180:	mov	x21, x1
    2184:	mov	x22, x0
    2188:	bl	1b00 <ffi_raw_size@plt>
    218c:	add	x9, x0, #0xf
    2190:	mov	x8, sp
    2194:	and	x9, x9, #0xfffffffffffffff0
    2198:	sub	x23, x8, x9
    219c:	mov	sp, x23
    21a0:	mov	x0, x22
    21a4:	mov	x1, x20
    21a8:	mov	x2, x23
    21ac:	bl	1b10 <ffi_ptrarray_to_raw@plt>
    21b0:	ldp	x8, x3, [x19, #48]
    21b4:	mov	x0, x22
    21b8:	mov	x1, x21
    21bc:	mov	x2, x23
    21c0:	blr	x8
    21c4:	mov	sp, x29
    21c8:	ldp	x20, x19, [sp, #48]
    21cc:	ldp	x22, x21, [sp, #32]
    21d0:	ldr	x23, [sp, #16]
    21d4:	ldp	x29, x30, [sp], #64
    21d8:	ret

00000000000021dc <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0>:
    21dc:	stp	x29, x30, [sp, #-48]!
    21e0:	str	x21, [sp, #16]
    21e4:	stp	x20, x19, [sp, #32]
    21e8:	mov	x29, sp
    21ec:	mov	x20, x2
    21f0:	adrp	x2, 2000 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x58>
    21f4:	mov	x19, x3
    21f8:	add	x2, x2, #0x164
    21fc:	mov	x3, x0
    2200:	mov	x4, x0
    2204:	mov	x21, x0
    2208:	bl	1980 <ffi_prep_closure_loc@plt>
    220c:	cbnz	w0, 2214 <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0+0x38>
    2210:	stp	x20, x19, [x21, #48]
    2214:	ldp	x20, x19, [sp, #32]
    2218:	ldr	x21, [sp, #16]
    221c:	ldp	x29, x30, [sp], #48
    2220:	ret

0000000000002224 <ffi_java_raw_size@@LIBFFI_BASE_7.0>:
    2224:	stp	x29, x30, [sp, #-16]!
    2228:	ldr	w8, [x0, #4]
    222c:	mov	x29, sp
    2230:	subs	w8, w8, #0x1
    2234:	b.mi	2298 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x74>  // b.first
    2238:	ldr	x9, [x0, #8]
    223c:	mov	x0, xzr
    2240:	ldr	x10, [x9]
    2244:	ldrh	w10, [x10, #10]
    2248:	cmp	w10, #0xa
    224c:	b.le	2274 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x50>
    2250:	sub	w11, w10, #0xb
    2254:	cmp	w11, #0x2
    2258:	mov	w11, #0x10                  	// #16
    225c:	b.cc	2284 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x60>  // b.lo, b.ul, b.last
    2260:	cmp	w10, #0xf
    2264:	b.eq	22a4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x80>  // b.none
    2268:	cmp	w10, #0xd
    226c:	b.ne	2280 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x5c>  // b.any
    2270:	b	22a4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x80>
    2274:	cmp	w10, #0x3
    2278:	mov	w11, #0x10                  	// #16
    227c:	b.eq	2284 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x60>  // b.none
    2280:	mov	w11, #0x8                   	// #8
    2284:	add	x0, x0, x11
    2288:	subs	w8, w8, #0x1
    228c:	add	x9, x9, #0x8
    2290:	b.pl	2240 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x1c>  // b.nfrst
    2294:	b	229c <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x78>
    2298:	mov	x0, xzr
    229c:	ldp	x29, x30, [sp], #16
    22a0:	ret
    22a4:	bl	1a90 <abort@plt>

00000000000022a8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    22a8:	stp	x29, x30, [sp, #-16]!
    22ac:	ldr	w8, [x0, #4]
    22b0:	mov	x29, sp
    22b4:	cbz	w8, 2304 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x5c>
    22b8:	ldr	x9, [x0, #8]
    22bc:	mov	x10, xzr
    22c0:	ldr	x11, [x9, x10, lsl #3]
    22c4:	ldrh	w11, [x11, #10]
    22c8:	sub	w12, w11, #0xb
    22cc:	cmp	w12, #0x2
    22d0:	ccmp	w11, #0x3, #0x4, cs  // cs = hs, nlast
    22d4:	b.ne	22e4 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x3c>  // b.any
    22d8:	str	x1, [x2, x10, lsl #3]
    22dc:	add	x1, x1, #0x10
    22e0:	b	22f8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x50>
    22e4:	cmp	w11, #0xf
    22e8:	b.eq	230c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x64>  // b.none
    22ec:	add	x11, x1, #0x8
    22f0:	str	x1, [x2, x10, lsl #3]
    22f4:	mov	x1, x11
    22f8:	add	x10, x10, #0x1
    22fc:	cmp	w10, w8
    2300:	b.cc	22c0 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x18>  // b.lo, b.ul, b.last
    2304:	ldp	x29, x30, [sp], #16
    2308:	ret
    230c:	bl	1a90 <abort@plt>

0000000000002310 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    2310:	ldr	w8, [x0, #4]
    2314:	cbz	w8, 23d0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xc0>
    2318:	ldr	x9, [x0, #8]
    231c:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    2320:	mov	x8, xzr
    2324:	add	x10, x10, #0xcf3
    2328:	ldr	x11, [x9, x8, lsl #3]
    232c:	ldrh	w11, [x11, #10]
    2330:	sub	w11, w11, #0x2
    2334:	cmp	w11, #0xc
    2338:	b.hi	23c0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xb0>  // b.pmore
    233c:	adr	x12, 234c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x3c>
    2340:	ldrb	w13, [x10, x11]
    2344:	add	x12, x12, x13, lsl #2
    2348:	br	x12
    234c:	ldr	x11, [x1, x8, lsl #3]
    2350:	ldr	x11, [x11]
    2354:	str	x11, [x2], #16
    2358:	b	23c0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xb0>
    235c:	ldr	x11, [x1, x8, lsl #3]
    2360:	ldr	w11, [x11]
    2364:	str	w11, [x2], #8
    2368:	b	23c0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xb0>
    236c:	ldr	x11, [x1, x8, lsl #3]
    2370:	ldrb	w11, [x11]
    2374:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>
    2378:	ldr	x11, [x1, x8, lsl #3]
    237c:	ldrsb	x11, [x11]
    2380:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>
    2384:	ldr	x11, [x1, x8, lsl #3]
    2388:	ldrh	w11, [x11]
    238c:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>
    2390:	ldr	x11, [x1, x8, lsl #3]
    2394:	ldrsh	x11, [x11]
    2398:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>
    239c:	ldr	x11, [x1, x8, lsl #3]
    23a0:	ldr	w11, [x11]
    23a4:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>
    23a8:	ldr	x11, [x1, x8, lsl #3]
    23ac:	ldrsw	x11, [x11]
    23b0:	b	23bc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xac>
    23b4:	ldr	x11, [x1, x8, lsl #3]
    23b8:	ldr	x11, [x11]
    23bc:	str	x11, [x2], #8
    23c0:	ldr	w11, [x0, #4]
    23c4:	add	x8, x8, #0x1
    23c8:	cmp	w8, w11
    23cc:	b.cc	2328 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x18>  // b.lo, b.ul, b.last
    23d0:	ret

00000000000023d4 <ffi_java_raw_call@@LIBFFI_BASE_7.0>:
    23d4:	stp	x29, x30, [sp, #-48]!
    23d8:	stp	x22, x21, [sp, #16]
    23dc:	stp	x20, x19, [sp, #32]
    23e0:	mov	x29, sp
    23e4:	ldr	w8, [x0, #4]
    23e8:	mov	x9, sp
    23ec:	mov	x19, x2
    23f0:	mov	x20, x0
    23f4:	lsl	x8, x8, #3
    23f8:	add	x8, x8, #0xf
    23fc:	and	x8, x8, #0xffffffff0
    2400:	sub	x22, x9, x8
    2404:	mov	x21, x1
    2408:	mov	sp, x22
    240c:	mov	x1, x3
    2410:	mov	x2, x22
    2414:	bl	19a0 <ffi_java_raw_to_ptrarray@plt>
    2418:	mov	x0, x20
    241c:	mov	x1, x21
    2420:	mov	x2, x19
    2424:	mov	x3, x22
    2428:	bl	1b50 <ffi_call@plt>
    242c:	mov	sp, x29
    2430:	ldp	x20, x19, [sp, #32]
    2434:	ldp	x22, x21, [sp, #16]
    2438:	ldp	x29, x30, [sp], #48
    243c:	ret

0000000000002440 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2440:	stp	x29, x30, [sp, #-48]!
    2444:	str	x21, [sp, #16]
    2448:	stp	x20, x19, [sp, #32]
    244c:	mov	x29, sp
    2450:	mov	x20, x2
    2454:	adrp	x2, 2000 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x58>
    2458:	mov	x19, x3
    245c:	add	x2, x2, #0x484
    2460:	mov	x3, x4
    2464:	mov	x21, x0
    2468:	bl	1980 <ffi_prep_closure_loc@plt>
    246c:	cbnz	w0, 2474 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>
    2470:	stp	x20, x19, [x21, #48]
    2474:	ldp	x20, x19, [sp, #32]
    2478:	ldr	x21, [sp, #16]
    247c:	ldp	x29, x30, [sp], #48
    2480:	ret
    2484:	stp	x29, x30, [sp, #-64]!
    2488:	str	x23, [sp, #16]
    248c:	stp	x22, x21, [sp, #32]
    2490:	stp	x20, x19, [sp, #48]
    2494:	mov	x29, sp
    2498:	mov	x19, x3
    249c:	mov	x20, x2
    24a0:	mov	x21, x1
    24a4:	mov	x22, x0
    24a8:	bl	1af0 <ffi_java_raw_size@plt>
    24ac:	add	x9, x0, #0xf
    24b0:	mov	x8, sp
    24b4:	and	x9, x9, #0xfffffffffffffff0
    24b8:	sub	x23, x8, x9
    24bc:	mov	sp, x23
    24c0:	mov	x0, x22
    24c4:	mov	x1, x20
    24c8:	mov	x2, x23
    24cc:	bl	1bb0 <ffi_java_ptrarray_to_raw@plt>
    24d0:	ldp	x8, x3, [x19, #48]
    24d4:	mov	x0, x22
    24d8:	mov	x1, x21
    24dc:	mov	x2, x23
    24e0:	blr	x8
    24e4:	mov	sp, x29
    24e8:	ldp	x20, x19, [sp, #48]
    24ec:	ldp	x22, x21, [sp, #32]
    24f0:	ldr	x23, [sp, #16]
    24f4:	ldp	x29, x30, [sp], #64
    24f8:	ret

00000000000024fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0>:
    24fc:	stp	x29, x30, [sp, #-48]!
    2500:	str	x21, [sp, #16]
    2504:	stp	x20, x19, [sp, #32]
    2508:	mov	x29, sp
    250c:	mov	x20, x2
    2510:	adrp	x2, 2000 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x58>
    2514:	mov	x19, x3
    2518:	add	x2, x2, #0x484
    251c:	mov	x3, x0
    2520:	mov	x4, x0
    2524:	mov	x21, x0
    2528:	bl	1980 <ffi_prep_closure_loc@plt>
    252c:	cbnz	w0, 2534 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38>
    2530:	stp	x20, x19, [x21, #48]
    2534:	ldp	x20, x19, [sp, #32]
    2538:	ldr	x21, [sp, #16]
    253c:	ldp	x29, x30, [sp], #48
    2540:	ret

0000000000002544 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0>:
    2544:	stp	x29, x30, [sp, #-64]!
    2548:	stp	x24, x23, [sp, #16]
    254c:	stp	x22, x21, [sp, #32]
    2550:	stp	x20, x19, [sp, #48]
    2554:	mov	x29, sp
    2558:	cbz	x1, 2590 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4c>
    255c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2560:	ldr	x8, [x8, #1488]
    2564:	mov	x19, x1
    2568:	mov	x20, x0
    256c:	cbnz	x8, 2574 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x30>
    2570:	bl	45d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb98>
    2574:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    2578:	ldrb	w8, [x21, #1256]
    257c:	tbz	w8, #1, 2598 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x54>
    2580:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2584:	add	x0, x0, #0x4f0
    2588:	bl	1bc0 <pthread_mutex_lock@plt>
    258c:	cbz	w0, 2598 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x54>
    2590:	mov	x20, xzr
    2594:	b	369c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1158>
    2598:	cmp	x20, #0xf0
    259c:	b.hi	2618 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd4>  // b.pmore
    25a0:	add	x9, x20, #0xf
    25a4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    25a8:	and	x10, x9, #0xfffffffffffffff8
    25ac:	ldr	w9, [x8, #392]
    25b0:	cmp	x20, #0x17
    25b4:	mov	w11, #0x20                  	// #32
    25b8:	csel	x22, x11, x10, cc  // cc = lo, ul, last
    25bc:	lsr	x11, x22, #3
    25c0:	lsr	x12, x9, x11
    25c4:	tst	w12, #0x3
    25c8:	b.eq	2658 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x114>  // b.none
    25cc:	mvn	w10, w12
    25d0:	and	x10, x10, #0x1
    25d4:	add	x10, x11, x10
    25d8:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    25dc:	add	x11, x11, #0x188
    25e0:	add	x13, x11, x10, lsl #4
    25e4:	ldr	x11, [x13, #80]
    25e8:	add	x13, x13, #0x40
    25ec:	mov	x20, x11
    25f0:	ldr	x12, [x20, #16]!
    25f4:	cmp	x12, x13
    25f8:	b.eq	26e0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x19c>  // b.none
    25fc:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2600:	ldr	x8, [x8, #416]
    2604:	cmp	x8, x12
    2608:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    260c:	str	x12, [x13, #16]
    2610:	str	x13, [x12, #24]
    2614:	b	26f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1ac>
    2618:	cmn	x20, #0x81
    261c:	b.ls	2628 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe4>  // b.plast
    2620:	mov	x22, #0xffffffffffffffff    	// #-1
    2624:	b	294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>
    2628:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    262c:	ldr	w13, [x10, #396]
    2630:	add	x8, x20, #0xf
    2634:	and	x22, x8, #0xfffffffffffffff8
    2638:	cbz	w13, 294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>
    263c:	lsr	x8, x8, #8
    2640:	neg	x9, x22
    2644:	cbz	x8, 2710 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1cc>
    2648:	lsr	x11, x22, #24
    264c:	cbz	x11, 2718 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1d4>
    2650:	mov	w14, #0x1f                  	// #31
    2654:	b	2770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x22c>
    2658:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    265c:	ldr	x10, [x10, #400]
    2660:	cmp	x22, x10
    2664:	b.ls	294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>  // b.plast
    2668:	cbz	w12, 2848 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x304>
    266c:	mov	w13, #0x2                   	// #2
    2670:	lsl	w12, w12, w11
    2674:	lsl	w11, w13, w11
    2678:	neg	w13, w11
    267c:	orr	w11, w11, w13
    2680:	and	w11, w12, w11
    2684:	neg	w12, w11
    2688:	and	w13, w11, w12
    268c:	tst	w11, w12
    2690:	rbit	w11, w13
    2694:	clz	w11, w11
    2698:	csinv	w12, w11, wzr, ne  // ne = any
    269c:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    26a0:	add	x11, x11, #0x188
    26a4:	add	x15, x11, w12, sxtw #4
    26a8:	ldr	x13, [x15, #80]
    26ac:	add	x15, x15, #0x40
    26b0:	sxtw	x12, w12
    26b4:	mov	x20, x13
    26b8:	ldr	x14, [x20, #16]!
    26bc:	cmp	x14, x15
    26c0:	b.eq	2b58 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x614>  // b.none
    26c4:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    26c8:	ldr	x16, [x16, #416]
    26cc:	cmp	x16, x14
    26d0:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    26d4:	str	x14, [x15, #16]
    26d8:	str	x15, [x14, #24]
    26dc:	b	2b68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x624>
    26e0:	mov	w12, #0x1                   	// #1
    26e4:	lsl	w12, w12, w10
    26e8:	bic	w9, w9, w12
    26ec:	str	w9, [x8, #392]
    26f0:	mov	w8, #0x3                   	// #3
    26f4:	bfi	x8, x10, #3, #61
    26f8:	str	x8, [x11, #8]
    26fc:	add	x8, x11, x10, lsl #3
    2700:	ldr	x9, [x8, #8]
    2704:	orr	x9, x9, #0x1
    2708:	str	x9, [x8, #8]
    270c:	b	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1108>
    2710:	mov	x14, xzr
    2714:	b	2770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x22c>
    2718:	mov	w11, #0xfff00               	// #1048320
    271c:	add	w11, w8, w11
    2720:	lsr	w11, w11, #16
    2724:	and	w11, w11, #0x8
    2728:	lsl	w8, w8, w11
    272c:	add	w12, w8, #0x7f, lsl #12
    2730:	lsr	w12, w12, #16
    2734:	and	w12, w12, #0x4
    2738:	lsl	w8, w8, w12
    273c:	orr	w11, w12, w11
    2740:	add	w12, w8, #0x3c, lsl #12
    2744:	lsr	w12, w12, #16
    2748:	and	w12, w12, #0x2
    274c:	lsl	w8, w8, w12
    2750:	orr	w11, w11, w12
    2754:	lsr	w8, w8, #15
    2758:	sub	w8, w8, w11
    275c:	lsl	w11, w8, #1
    2760:	add	w8, w8, #0x15
    2764:	add	w14, w11, #0x1c
    2768:	lsr	x8, x22, x8
    276c:	bfxil	x14, x8, #0, #1
    2770:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    2774:	add	x11, x11, #0x188
    2778:	add	x8, x11, x14, lsl #3
    277c:	ldr	x12, [x8, #592]
    2780:	cbz	x12, 27f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2b0>
    2784:	mov	w16, #0x39                  	// #57
    2788:	sub	x16, x16, x14, lsr #1
    278c:	cmp	x14, #0x1f
    2790:	csel	x16, xzr, x16, eq  // eq = none
    2794:	mov	x15, xzr
    2798:	mov	x8, xzr
    279c:	lsl	x16, x22, x16
    27a0:	ldr	x17, [x12, #8]
    27a4:	and	x17, x17, #0xfffffffffffffffc
    27a8:	sub	x17, x17, x22
    27ac:	cmp	x17, x9
    27b0:	b.cs	27c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x27c>  // b.hs, b.nlast
    27b4:	mov	x9, x17
    27b8:	mov	x8, x12
    27bc:	cbz	x17, 28bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x378>
    27c0:	lsr	x17, x16, #60
    27c4:	and	x17, x17, #0x8
    27c8:	ldr	x18, [x12, #40]
    27cc:	add	x12, x12, x17
    27d0:	ldr	x12, [x12, #32]
    27d4:	cmp	x18, x12
    27d8:	ccmp	x18, #0x0, #0x4, ne  // ne = any
    27dc:	csel	x15, x15, x18, eq  // eq = none
    27e0:	cmp	x12, #0x0
    27e4:	cset	w17, ne  // ne = any
    27e8:	lsl	x16, x16, x17
    27ec:	cbnz	x12, 27a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x25c>
    27f0:	b	27fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2b8>
    27f4:	mov	x15, xzr
    27f8:	mov	x8, xzr
    27fc:	orr	x12, x15, x8
    2800:	cbnz	x12, 283c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2f8>
    2804:	mov	w12, #0x2                   	// #2
    2808:	lsl	w12, w12, w14
    280c:	neg	w14, w12
    2810:	orr	w12, w12, w14
    2814:	ands	w12, w12, w13
    2818:	b.eq	294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>  // b.none
    281c:	neg	w14, w12
    2820:	and	w15, w12, w14
    2824:	rbit	w15, w15
    2828:	clz	w15, w15
    282c:	tst	w12, w14
    2830:	csinv	w12, w15, wzr, ne  // ne = any
    2834:	add	x12, x11, w12, sxtw #3
    2838:	ldr	x15, [x12, #592]
    283c:	mov	x12, x15
    2840:	cbnz	x15, 28c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x37c>
    2844:	b	28ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3a8>
    2848:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    284c:	ldr	w17, [x16, #396]
    2850:	cbz	w17, 294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>
    2854:	neg	w11, w17
    2858:	and	w12, w17, w11
    285c:	tst	w17, w11
    2860:	rbit	w11, w12
    2864:	clz	w11, w11
    2868:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    286c:	csinv	w11, w11, wzr, ne  // ne = any
    2870:	add	x13, x13, #0x188
    2874:	add	x11, x13, w11, sxtw #3
    2878:	ldr	x11, [x11, #592]
    287c:	ldr	x12, [x11, #8]
    2880:	mov	x15, x11
    2884:	and	x12, x12, #0xfffffffffffffffc
    2888:	sub	x12, x12, x22
    288c:	ldr	x14, [x15, #32]
    2890:	cbnz	x14, 289c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x358>
    2894:	ldr	x14, [x15, #40]
    2898:	cbz	x14, 2bdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x698>
    289c:	ldr	x15, [x14, #8]
    28a0:	and	x15, x15, #0xfffffffffffffffc
    28a4:	sub	x15, x15, x22
    28a8:	cmp	x15, x12
    28ac:	csel	x12, x15, x12, cc  // cc = lo, ul, last
    28b0:	csel	x11, x14, x11, cc  // cc = lo, ul, last
    28b4:	mov	x15, x14
    28b8:	b	288c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x348>
    28bc:	mov	x8, x12
    28c0:	ldr	x15, [x12, #8]
    28c4:	ldr	x14, [x12, #32]
    28c8:	and	x15, x15, #0xfffffffffffffffc
    28cc:	sub	x15, x15, x22
    28d0:	cmp	x15, x9
    28d4:	csel	x9, x15, x9, cc  // cc = lo, ul, last
    28d8:	csel	x8, x12, x8, cc  // cc = lo, ul, last
    28dc:	cbnz	x14, 28e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3a0>
    28e0:	ldr	x14, [x12, #40]
    28e4:	mov	x12, x14
    28e8:	cbnz	x14, 28c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x37c>
    28ec:	cbz	x8, 294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>
    28f0:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    28f4:	ldr	x12, [x12, #400]
    28f8:	sub	x12, x12, x22
    28fc:	cmp	x9, x12
    2900:	b.cs	294c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x408>  // b.hs, b.nlast
    2904:	adrp	x14, 17000 <memcpy@GLIBC_2.17>
    2908:	ldr	x15, [x14, #416]
    290c:	cmp	x15, x8
    2910:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2914:	add	x12, x8, x22
    2918:	cmp	x12, x8
    291c:	b.ls	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.plast
    2920:	ldr	x17, [x8, #24]
    2924:	ldr	x16, [x8, #48]
    2928:	cmp	x17, x8
    292c:	b.eq	2c24 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6e0>  // b.none
    2930:	ldr	x18, [x8, #16]
    2934:	cmp	x15, x18
    2938:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    293c:	str	x17, [x18, #24]
    2940:	str	x18, [x17, #16]
    2944:	cbnz	x16, 2c6c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>
    2948:	b	324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd08>
    294c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2950:	ldr	x9, [x8, #400]
    2954:	subs	x10, x9, x22
    2958:	b.cs	299c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x458>  // b.hs, b.nlast
    295c:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    2960:	ldr	x8, [x23, #408]
    2964:	subs	x8, x8, x22
    2968:	b.ls	29d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x494>  // b.plast
    296c:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2970:	add	x9, x9, #0x198
    2974:	ldr	x10, [x9, #24]
    2978:	orr	x11, x8, #0x1
    297c:	orr	x12, x22, #0x3
    2980:	str	x8, [x9]
    2984:	add	x8, x10, x22
    2988:	str	x8, [x9, #24]
    298c:	str	x11, [x8, #8]
    2990:	str	x12, [x10, #8]
    2994:	add	x20, x10, #0x10
    2998:	b	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1108>
    299c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    29a0:	ldr	x8, [x8, #424]
    29a4:	cmp	x10, #0x20
    29a8:	b.cc	2aa0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x55c>  // b.lo, b.ul, b.last
    29ac:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    29b0:	add	x11, x8, x22
    29b4:	add	x12, x12, #0x190
    29b8:	orr	x13, x10, #0x1
    29bc:	orr	x14, x22, #0x3
    29c0:	str	x11, [x12, #24]
    29c4:	str	x10, [x12]
    29c8:	str	x13, [x11, #8]
    29cc:	str	x10, [x8, x9]
    29d0:	str	x14, [x8, #8]
    29d4:	b	2ac8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    29d8:	bl	45d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb98>
    29dc:	ldrb	w8, [x21, #1256]
    29e0:	adrp	x24, 17000 <memcpy@GLIBC_2.17>
    29e4:	tbz	w8, #0, 2ad0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x58c>
    29e8:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    29ec:	ldrb	w8, [x8, #1504]
    29f0:	sbfx	x8, x8, #0, #1
    29f4:	cmp	x22, x8
    29f8:	b.cc	2ad0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x58c>  // b.lo, b.ul, b.last
    29fc:	ldr	x8, [x24, #1496]
    2a00:	add	x9, x22, x8
    2a04:	add	x9, x9, #0x37
    2a08:	neg	x8, x8
    2a0c:	and	x20, x9, x8
    2a10:	cmp	x20, x22
    2a14:	b.ls	2ad0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x58c>  // b.plast
    2a18:	mov	x0, x20
    2a1c:	bl	46bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc80>
    2a20:	cmn	x0, #0x1
    2a24:	b.eq	2ad0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x58c>  // b.none
    2a28:	add	x8, x0, #0x10
    2a2c:	neg	w10, w8
    2a30:	adrp	x9, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    2a34:	tst	x8, #0x7
    2a38:	and	x8, x10, #0x7
    2a3c:	ldr	q0, [x9, #3328]
    2a40:	csel	x9, xzr, x8, eq  // eq = none
    2a44:	sub	x10, x20, x9
    2a48:	add	x8, x0, x9
    2a4c:	sub	x10, x10, #0x20
    2a50:	orr	x9, x9, #0x1
    2a54:	orr	x11, x10, #0x2
    2a58:	add	x10, x8, x10
    2a5c:	stp	x9, x11, [x8]
    2a60:	stur	q0, [x10, #8]
    2a64:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2a68:	ldr	x10, [x9, #416]
    2a6c:	cmp	x0, x10
    2a70:	b.cs	2a78 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x534>  // b.hs, b.nlast
    2a74:	str	x0, [x9, #416]
    2a78:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2a7c:	add	x10, x10, #0x4d8
    2a80:	ldp	x9, x11, [x10]
    2a84:	add	x9, x9, x20
    2a88:	cmp	x9, x11
    2a8c:	str	x9, [x10]
    2a90:	b.ls	2ac8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>  // b.plast
    2a94:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2a98:	str	x9, [x10, #1248]
    2a9c:	b	2ac8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    2aa0:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2aa4:	add	x10, x10, #0x190
    2aa8:	orr	x11, x9, #0x3
    2aac:	str	xzr, [x10]
    2ab0:	str	xzr, [x10, #24]
    2ab4:	str	x11, [x8, #8]
    2ab8:	add	x9, x8, x9
    2abc:	ldr	x10, [x9, #8]
    2ac0:	orr	x10, x10, #0x1
    2ac4:	str	x10, [x9, #8]
    2ac8:	add	x20, x8, #0x10
    2acc:	b	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1108>
    2ad0:	ldr	x8, [x24, #1496]
    2ad4:	add	x9, x22, x8
    2ad8:	add	x9, x9, #0x49
    2adc:	neg	x8, x8
    2ae0:	and	x20, x9, x8
    2ae4:	cmp	x20, x22
    2ae8:	b.ls	363c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10f8>  // b.plast
    2aec:	mov	x0, x20
    2af0:	bl	46bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc80>
    2af4:	cmn	x0, #0x1
    2af8:	cset	w12, ne  // ne = any
    2afc:	csel	x9, xzr, x20, eq  // eq = none
    2b00:	b.eq	363c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10f8>  // b.none
    2b04:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2b08:	add	x10, x10, #0x4d8
    2b0c:	ldp	x8, x11, [x10]
    2b10:	add	x8, x8, x9
    2b14:	cmp	x8, x11
    2b18:	str	x8, [x10]
    2b1c:	b.ls	2b28 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5e4>  // b.plast
    2b20:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2b24:	str	x8, [x10, #1248]
    2b28:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2b2c:	ldr	x11, [x8, #432]
    2b30:	cbz	x11, 2ca8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x764>
    2b34:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2b38:	add	x8, x8, #0x520
    2b3c:	ldp	x13, x10, [x8]
    2b40:	add	x14, x13, x10
    2b44:	cmp	x0, x14
    2b48:	b.eq	2db0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x86c>  // b.none
    2b4c:	ldr	x8, [x8, #16]
    2b50:	cbnz	x8, 2b3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5f8>
    2b54:	b	2e4c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x908>
    2b58:	mov	w14, #0x1                   	// #1
    2b5c:	lsl	w14, w14, w12
    2b60:	bic	w9, w9, w14
    2b64:	str	w9, [x8, #392]
    2b68:	lsl	x15, x12, #3
    2b6c:	sub	x12, x15, x22
    2b70:	cmp	x12, #0x1f
    2b74:	b.hi	2b88 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x644>  // b.pmore
    2b78:	orr	x8, x15, #0x3
    2b7c:	str	x8, [x13, #8]
    2b80:	add	x8, x13, x15
    2b84:	b	2700 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1bc>
    2b88:	orr	x16, x22, #0x3
    2b8c:	add	x14, x13, x22
    2b90:	orr	x17, x12, #0x1
    2b94:	str	x16, [x13, #8]
    2b98:	str	x17, [x14, #8]
    2b9c:	str	x12, [x13, x15]
    2ba0:	cbz	x10, 31c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc7c>
    2ba4:	ldr	x13, [x11, #32]
    2ba8:	lsr	x10, x10, #3
    2bac:	mov	w15, #0x1                   	// #1
    2bb0:	add	x16, x11, x10, lsl #4
    2bb4:	lsl	w11, w15, w10
    2bb8:	tst	w9, w11
    2bbc:	add	x10, x16, #0x40
    2bc0:	b.eq	31a8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc64>  // b.none
    2bc4:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    2bc8:	ldr	x8, [x10, #16]
    2bcc:	ldr	x9, [x9, #416]
    2bd0:	cmp	x9, x8
    2bd4:	b.ls	31b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc70>  // b.plast
    2bd8:	b	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>
    2bdc:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    2be0:	ldr	x18, [x15, #416]
    2be4:	cmp	x18, x11
    2be8:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2bec:	add	x14, x11, x22
    2bf0:	cmp	x14, x11
    2bf4:	b.ls	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.plast
    2bf8:	ldr	x1, [x11, #24]
    2bfc:	ldr	x0, [x11, #48]
    2c00:	cmp	x1, x11
    2c04:	b.eq	3124 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbe0>  // b.none
    2c08:	ldr	x2, [x11, #16]
    2c0c:	cmp	x18, x2
    2c10:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2c14:	str	x1, [x2, #24]
    2c18:	str	x2, [x1, #16]
    2c1c:	cbnz	x0, 316c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc28>
    2c20:	b	3468 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf24>
    2c24:	mov	x18, x8
    2c28:	ldr	x0, [x18, #40]!
    2c2c:	cbnz	x0, 2c3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6f8>
    2c30:	mov	x18, x8
    2c34:	ldr	x0, [x18, #32]!
    2c38:	cbz	x0, 3408 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xec4>
    2c3c:	mov	x1, x18
    2c40:	mov	x18, x0
    2c44:	mov	x17, x0
    2c48:	ldr	x0, [x18, #40]!
    2c4c:	cbnz	x0, 2c3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6f8>
    2c50:	mov	x18, x17
    2c54:	ldr	x0, [x18, #32]!
    2c58:	cbnz	x0, 2c3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6f8>
    2c5c:	cmp	x15, x1
    2c60:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2c64:	str	xzr, [x1]
    2c68:	cbz	x16, 324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd08>
    2c6c:	ldr	x18, [x8, #56]
    2c70:	add	x0, x11, x18, lsl #3
    2c74:	ldr	x1, [x0, #592]
    2c78:	cmp	x8, x1
    2c7c:	b.eq	30d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb90>  // b.none
    2c80:	cmp	x15, x16
    2c84:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2c88:	ldr	x13, [x16, #32]
    2c8c:	mov	w18, #0x28                  	// #40
    2c90:	cmp	x13, x8
    2c94:	mov	w13, #0x20                  	// #32
    2c98:	csel	x13, x13, x18, eq  // eq = none
    2c9c:	str	x17, [x16, x13]
    2ca0:	cbnz	x17, 30e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xba0>
    2ca4:	b	324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd08>
    2ca8:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2cac:	add	x10, x10, #0x1a0
    2cb0:	add	x8, x0, x9
    2cb4:	str	x0, [x10]
    2cb8:	str	x0, [x10, #896]
    2cbc:	str	x9, [x10, #904]
    2cc0:	ldur	x11, [x8, #-8]
    2cc4:	str	x11, [x10, #920]
    2cc8:	add	x10, x0, x11
    2ccc:	add	x10, x10, x9
    2cd0:	ldur	x10, [x10, #-8]
    2cd4:	cmp	x10, x11
    2cd8:	b.ne	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.any
    2cdc:	stur	xzr, [x8, #-8]
    2ce0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2ce4:	ldrb	w8, [x8, #1480]
    2ce8:	mov	w10, #0x5858                	// #22616
    2cec:	movk	w10, #0x5858, lsl #16
    2cf0:	cmp	w8, #0x0
    2cf4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2cf8:	csel	x10, x10, xzr, ne  // ne = any
    2cfc:	str	x10, [x8, #448]
    2d00:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    2d04:	ldr	q0, [x10, #3344]
    2d08:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2d0c:	add	x10, x10, #0x188
    2d10:	dup	v1.2d, x10
    2d14:	mov	w10, #0x40                  	// #64
    2d18:	dup	v2.2d, x10
    2d1c:	mov	w10, #0x2                   	// #2
    2d20:	mov	w8, #0x20                  	// #32
    2d24:	dup	v3.2d, x10
    2d28:	shl	v4.2d, v0.2d, #4
    2d2c:	add	v4.2d, v1.2d, v4.2d
    2d30:	add	v4.2d, v4.2d, v2.2d
    2d34:	mov	v5.16b, v4.16b
    2d38:	fmov	x10, d4
    2d3c:	subs	x8, x8, #0x2
    2d40:	add	x10, x10, #0x10
    2d44:	add	v0.2d, v0.2d, v3.2d
    2d48:	st2	{v4.2d, v5.2d}, [x10]
    2d4c:	b.ne	2d28 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7e4>  // b.any
    2d50:	sub	x8, x9, #0x48
    2d54:	add	x9, x0, #0x10
    2d58:	neg	w11, w9
    2d5c:	tst	x9, #0x7
    2d60:	and	x9, x11, #0x7
    2d64:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2d68:	csel	x9, xzr, x9, eq  // eq = none
    2d6c:	add	x10, x10, #0x198
    2d70:	add	x11, x0, x9
    2d74:	sub	x9, x8, x9
    2d78:	str	x9, [x10]
    2d7c:	orr	x9, x9, #0x1
    2d80:	str	x11, [x10, #24]
    2d84:	str	x9, [x11, #8]
    2d88:	mov	w9, #0x48                  	// #72
    2d8c:	add	x8, x0, x8
    2d90:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    2d94:	str	x9, [x8, #8]
    2d98:	ldrb	w8, [x11, #1512]
    2d9c:	cmp	w8, #0x0
    2da0:	mov	w8, #0x200000              	// #2097152
    2da4:	csel	x8, x8, xzr, ne  // ne = any
    2da8:	str	x8, [x10, #32]
    2dac:	b	3630 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10ec>
    2db0:	add	x14, x0, x9
    2db4:	ldr	x15, [x8, #24]
    2db8:	ldur	x14, [x14, #-8]
    2dbc:	cmp	x14, x15
    2dc0:	cset	w14, ne  // ne = any
    2dc4:	eor	w15, w12, #0x1
    2dc8:	orr	w14, w14, w15
    2dcc:	tbnz	w14, #0, 2e4c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x908>
    2dd0:	cmp	x0, x11
    2dd4:	b.ls	2e4c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x908>  // b.plast
    2dd8:	cmp	x13, x11
    2ddc:	b.hi	2e4c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x908>  // b.pmore
    2de0:	add	x10, x10, x9
    2de4:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    2de8:	add	x12, x12, #0x198
    2dec:	str	x10, [x8, #8]
    2df0:	ldr	x10, [x12]
    2df4:	add	x8, x11, #0x10
    2df8:	tst	x8, #0x7
    2dfc:	neg	w8, w8
    2e00:	and	x8, x8, #0x7
    2e04:	csel	x8, xzr, x8, eq  // eq = none
    2e08:	add	x9, x10, x9
    2e0c:	add	x10, x11, x8
    2e10:	sub	x8, x9, x8
    2e14:	str	x8, [x12]
    2e18:	orr	x8, x8, #0x1
    2e1c:	str	x10, [x12, #24]
    2e20:	str	x8, [x10, #8]
    2e24:	mov	w8, #0x48                  	// #72
    2e28:	add	x9, x11, x9
    2e2c:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    2e30:	str	x8, [x9, #8]
    2e34:	ldrb	w8, [x10, #1512]
    2e38:	cmp	w8, #0x0
    2e3c:	mov	w8, #0x200000              	// #2097152
    2e40:	csel	x8, x8, xzr, ne  // ne = any
    2e44:	str	x8, [x12, #32]
    2e48:	b	3630 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10ec>
    2e4c:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    2e50:	ldr	x14, [x8, #416]
    2e54:	cmp	x0, x14
    2e58:	b.cs	2e64 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x920>  // b.hs, b.nlast
    2e5c:	mov	x14, x0
    2e60:	str	x0, [x8, #416]
    2e64:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    2e68:	add	x10, x0, x9
    2e6c:	add	x13, x13, #0x520
    2e70:	ldr	x15, [x13]
    2e74:	cmp	x15, x10
    2e78:	b.eq	2e88 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x944>  // b.none
    2e7c:	ldr	x13, [x13, #16]
    2e80:	cbnz	x13, 2e70 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x92c>
    2e84:	b	2f64 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa20>
    2e88:	ldur	x15, [x10, #-8]
    2e8c:	ldr	x16, [x13, #24]
    2e90:	cmp	x15, x16
    2e94:	cset	w15, eq  // eq = none
    2e98:	and	w12, w15, w12
    2e9c:	tbz	w12, #0, 2f64 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa20>
    2ea0:	ldr	x12, [x13, #8]
    2ea4:	add	x9, x12, x9
    2ea8:	add	x12, x0, #0x10
    2eac:	tst	x12, #0x7
    2eb0:	neg	w12, w12
    2eb4:	stp	x0, x9, [x13]
    2eb8:	add	x9, x10, #0x10
    2ebc:	and	x12, x12, #0x7
    2ec0:	csel	x12, xzr, x12, eq  // eq = none
    2ec4:	tst	x9, #0x7
    2ec8:	neg	w9, w9
    2ecc:	and	x15, x9, #0x7
    2ed0:	add	x9, x0, x12
    2ed4:	csel	x12, xzr, x15, eq  // eq = none
    2ed8:	add	x12, x10, x12
    2edc:	sub	x15, x12, x9
    2ee0:	orr	x13, x22, #0x3
    2ee4:	add	x10, x9, x22
    2ee8:	cmp	x11, x12
    2eec:	sub	x11, x15, x22
    2ef0:	str	x13, [x9, #8]
    2ef4:	b.eq	3414 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xed0>  // b.none
    2ef8:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    2efc:	ldr	x13, [x13, #424]
    2f00:	cmp	x13, x12
    2f04:	b.eq	36b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1170>  // b.none
    2f08:	ldr	x13, [x12, #8]
    2f0c:	tbnz	w13, #1, 3830 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12ec>
    2f10:	cmp	x13, #0xff
    2f14:	b.hi	36e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11a4>  // b.pmore
    2f18:	ldp	x15, x16, [x12, #16]
    2f1c:	lsr	x17, x13, #3
    2f20:	cmp	x15, x16
    2f24:	b.eq	3714 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11d0>  // b.none
    2f28:	adrp	x18, 17000 <memcpy@GLIBC_2.17>
    2f2c:	add	x18, x18, #0x188
    2f30:	add	x17, x18, x17, lsl #4
    2f34:	add	x17, x17, #0x40
    2f38:	cmp	x15, x17
    2f3c:	b.eq	2f48 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa04>  // b.none
    2f40:	cmp	x14, x15
    2f44:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2f48:	cmp	x16, x17
    2f4c:	b.eq	2f58 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa14>  // b.none
    2f50:	cmp	x14, x16
    2f54:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    2f58:	str	x16, [x15, #24]
    2f5c:	str	x15, [x16, #16]
    2f60:	b	3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    2f64:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    2f68:	add	x12, x12, #0x520
    2f6c:	ldr	x13, [x12]
    2f70:	cmp	x13, x11
    2f74:	b.hi	2f88 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa44>  // b.pmore
    2f78:	ldr	x14, [x12, #8]
    2f7c:	add	x13, x13, x14
    2f80:	cmp	x13, x11
    2f84:	b.hi	2f90 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa4c>  // b.pmore
    2f88:	ldr	x12, [x12, #16]
    2f8c:	b	2f6c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa28>
    2f90:	sub	x14, x13, #0x3f
    2f94:	add	x16, x0, #0x10
    2f98:	neg	w18, w14
    2f9c:	tst	x14, #0x7
    2fa0:	neg	w14, w16
    2fa4:	and	x18, x18, #0x7
    2fa8:	and	x1, x14, #0x7
    2fac:	csel	x14, xzr, x18, eq  // eq = none
    2fb0:	add	x14, x13, x14
    2fb4:	add	x12, x11, #0x20
    2fb8:	sub	x14, x14, #0x4f
    2fbc:	cmp	x14, x12
    2fc0:	csel	x14, x11, x14, cc  // cc = lo, ul, last
    2fc4:	tst	x16, #0x7
    2fc8:	sub	x15, x9, #0x48
    2fcc:	adrp	x17, 17000 <memcpy@GLIBC_2.17>
    2fd0:	csel	x16, xzr, x1, eq  // eq = none
    2fd4:	add	x17, x17, #0x198
    2fd8:	add	x18, x0, x16
    2fdc:	sub	x16, x15, x16
    2fe0:	str	x16, [x17]
    2fe4:	orr	x16, x16, #0x1
    2fe8:	str	x18, [x17, #24]
    2fec:	str	x16, [x18, #8]
    2ff0:	mov	w16, #0x48                  	// #72
    2ff4:	add	x15, x0, x15
    2ff8:	adrp	x18, 17000 <memcpy@GLIBC_2.17>
    2ffc:	str	x16, [x15, #8]
    3000:	ldrb	w15, [x18, #1512]
    3004:	mov	w16, #0x200000              	// #2097152
    3008:	mov	w18, #0x2b                  	// #43
    300c:	cmp	w15, #0x0
    3010:	csel	x16, x16, xzr, ne  // ne = any
    3014:	add	x15, x17, #0x388
    3018:	str	x16, [x17, #32]
    301c:	str	x18, [x14, #8]
    3020:	ldp	q1, q0, [x15]
    3024:	stp	q1, q0, [x14, #16]
    3028:	str	x0, [x17, #904]
    302c:	str	x9, [x17, #912]
    3030:	ldur	x15, [x10, #-8]
    3034:	add	x16, x0, x15
    3038:	str	x15, [x17, #928]
    303c:	add	x9, x16, x9
    3040:	ldur	x9, [x9, #-8]
    3044:	cmp	x9, x15
    3048:	b.ne	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.any
    304c:	add	x15, x14, #0x10
    3050:	stur	xzr, [x10, #-8]
    3054:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3058:	add	x9, x14, #0x30
    305c:	str	x15, [x10, #1328]
    3060:	mov	w10, #0xb                   	// #11
    3064:	str	x10, [x9], #8
    3068:	cmp	x13, x9
    306c:	b.hi	3064 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb20>  // b.pmore
    3070:	subs	x9, x14, x11
    3074:	b.eq	3630 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10ec>  // b.none
    3078:	ldr	x10, [x14, #8]
    307c:	orr	x13, x9, #0x1
    3080:	cmp	x9, #0xff
    3084:	and	x10, x10, #0xfffffffffffffffe
    3088:	str	x10, [x14, #8]
    308c:	str	x13, [x11, #8]
    3090:	str	x9, [x14]
    3094:	b.hi	31d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc90>  // b.pmore
    3098:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    309c:	add	x12, x12, #0x188
    30a0:	ldr	w10, [x12]
    30a4:	lsr	x9, x9, #3
    30a8:	add	x13, x12, x9, lsl #4
    30ac:	mov	w12, #0x1                   	// #1
    30b0:	lsl	w12, w12, w9
    30b4:	tst	w10, w12
    30b8:	add	x9, x13, #0x40
    30bc:	b.eq	3438 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xef4>  // b.none
    30c0:	ldr	x10, [x9, #16]
    30c4:	ldr	x8, [x8, #416]
    30c8:	cmp	x8, x10
    30cc:	b.ls	3448 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf04>  // b.plast
    30d0:	b	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>
    30d4:	add	x15, x0, #0x250
    30d8:	str	x17, [x15]
    30dc:	cbz	x17, 323c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xcf8>
    30e0:	ldr	x15, [x14, #416]
    30e4:	cmp	x15, x17
    30e8:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    30ec:	str	x16, [x17, #48]
    30f0:	ldr	x13, [x8, #32]
    30f4:	cbz	x13, 3108 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbc4>
    30f8:	cmp	x15, x13
    30fc:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3100:	str	x13, [x17, #32]
    3104:	str	x17, [x13, #48]
    3108:	ldr	x13, [x8, #40]
    310c:	cbz	x13, 324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd08>
    3110:	cmp	x15, x13
    3114:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3118:	str	x13, [x17, #40]
    311c:	str	x17, [x13, #48]
    3120:	b	324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd08>
    3124:	mov	x2, x11
    3128:	ldr	x3, [x2, #40]!
    312c:	cbnz	x3, 313c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbf8>
    3130:	mov	x2, x11
    3134:	ldr	x3, [x2, #32]!
    3138:	cbz	x3, 36dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1198>
    313c:	mov	x4, x2
    3140:	mov	x2, x3
    3144:	mov	x1, x3
    3148:	ldr	x3, [x2, #40]!
    314c:	cbnz	x3, 313c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbf8>
    3150:	mov	x2, x1
    3154:	ldr	x3, [x2, #32]!
    3158:	cbnz	x3, 313c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbf8>
    315c:	cmp	x18, x4
    3160:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3164:	str	xzr, [x4]
    3168:	cbz	x0, 3468 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf24>
    316c:	ldr	x2, [x11, #56]
    3170:	add	x3, x13, x2, lsl #3
    3174:	ldr	x4, [x3, #592]
    3178:	cmp	x11, x4
    317c:	b.eq	31ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xca8>  // b.none
    3180:	cmp	x18, x0
    3184:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3188:	ldr	x16, [x0, #32]
    318c:	mov	w17, #0x28                  	// #40
    3190:	cmp	x16, x11
    3194:	mov	w16, #0x20                  	// #32
    3198:	csel	x16, x16, x17, eq  // eq = none
    319c:	str	x1, [x0, x16]
    31a0:	cbnz	x1, 31fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xcb8>
    31a4:	b	3468 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf24>
    31a8:	orr	w9, w9, w11
    31ac:	str	w9, [x8, #392]
    31b0:	mov	x8, x10
    31b4:	str	x13, [x10, #16]
    31b8:	str	x13, [x8, #24]
    31bc:	stp	x8, x10, [x13, #16]
    31c0:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    31c4:	add	x8, x8, #0x190
    31c8:	str	x12, [x8]
    31cc:	str	x14, [x8, #24]
    31d0:	b	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1108>
    31d4:	lsr	x10, x9, #8
    31d8:	cbz	x10, 3564 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1020>
    31dc:	lsr	x13, x9, #24
    31e0:	cbz	x13, 350c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xfc8>
    31e4:	mov	w10, #0x1f                  	// #31
    31e8:	b	3564 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1020>
    31ec:	add	x18, x3, #0x250
    31f0:	str	x1, [x18]
    31f4:	cbz	x1, 3458 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf14>
    31f8:	ldr	x18, [x15, #416]
    31fc:	cmp	x18, x1
    3200:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3204:	str	x0, [x1, #48]
    3208:	ldr	x16, [x11, #32]
    320c:	cbz	x16, 3220 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xcdc>
    3210:	cmp	x18, x16
    3214:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3218:	str	x16, [x1, #32]
    321c:	str	x1, [x16, #48]
    3220:	ldr	x16, [x11, #40]
    3224:	cbz	x16, 3468 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf24>
    3228:	cmp	x18, x16
    322c:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3230:	str	x16, [x1, #40]
    3234:	str	x1, [x16, #48]
    3238:	b	3468 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf24>
    323c:	mov	w15, #0x1                   	// #1
    3240:	lsl	w15, w15, w18
    3244:	bic	w13, w13, w15
    3248:	str	w13, [x10, #396]
    324c:	cmp	x9, #0x1f
    3250:	b.hi	3264 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd20>  // b.pmore
    3254:	add	x9, x9, x22
    3258:	orr	x10, x9, #0x3
    325c:	str	x10, [x8, #8]
    3260:	b	2ab8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x574>
    3264:	orr	x13, x22, #0x3
    3268:	orr	x15, x9, #0x1
    326c:	cmp	x9, #0xff
    3270:	str	x13, [x8, #8]
    3274:	str	x15, [x12, #8]
    3278:	str	x9, [x12, x9]
    327c:	b.hi	32b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd70>  // b.pmore
    3280:	ldr	w10, [x11]
    3284:	lsr	x9, x9, #3
    3288:	add	x13, x11, x9, lsl #4
    328c:	mov	w11, #0x1                   	// #1
    3290:	lsl	w11, w11, w9
    3294:	tst	w10, w11
    3298:	add	x9, x13, #0x40
    329c:	b.eq	32cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd88>  // b.none
    32a0:	ldr	x10, [x9, #16]
    32a4:	ldr	x11, [x14, #416]
    32a8:	cmp	x11, x10
    32ac:	b.ls	32dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd98>  // b.plast
    32b0:	b	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>
    32b4:	lsr	x13, x9, #8
    32b8:	cbz	x13, 3344 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe00>
    32bc:	lsr	x15, x9, #24
    32c0:	cbz	x15, 32ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xda8>
    32c4:	mov	w13, #0x1f                  	// #31
    32c8:	b	3344 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe00>
    32cc:	orr	w10, w10, w11
    32d0:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    32d4:	str	w10, [x11, #392]
    32d8:	mov	x10, x9
    32dc:	str	x12, [x9, #16]
    32e0:	str	x12, [x10, #24]
    32e4:	stp	x10, x9, [x12, #16]
    32e8:	b	2ac8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    32ec:	mov	w15, #0xfff00               	// #1048320
    32f0:	add	w15, w13, w15
    32f4:	lsr	w15, w15, #16
    32f8:	and	w15, w15, #0x8
    32fc:	lsl	w13, w13, w15
    3300:	add	w16, w13, #0x7f, lsl #12
    3304:	lsr	w16, w16, #16
    3308:	and	w16, w16, #0x4
    330c:	lsl	w13, w13, w16
    3310:	orr	w15, w16, w15
    3314:	add	w16, w13, #0x3c, lsl #12
    3318:	lsr	w16, w16, #16
    331c:	and	w16, w16, #0x2
    3320:	lsl	w13, w13, w16
    3324:	orr	w15, w15, w16
    3328:	lsr	w13, w13, #15
    332c:	sub	w13, w13, w15
    3330:	lsl	w15, w13, #1
    3334:	add	w16, w13, #0x15
    3338:	add	w13, w15, #0x1c
    333c:	lsr	x15, x9, x16
    3340:	bfxil	x13, x15, #0, #1
    3344:	str	x13, [x12, #56]
    3348:	stp	xzr, xzr, [x12, #32]
    334c:	ldr	w15, [x11, #4]
    3350:	mov	w16, #0x1                   	// #1
    3354:	add	x11, x11, x13, lsl #3
    3358:	lsl	w16, w16, w13
    335c:	tst	w15, w16
    3360:	add	x11, x11, #0x250
    3364:	b.eq	33c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe80>  // b.none
    3368:	ldr	x15, [x11]
    336c:	mov	w10, #0x39                  	// #57
    3370:	sub	x10, x10, x13, lsr #1
    3374:	cmp	x13, #0x1f
    3378:	csel	x10, xzr, x10, eq  // eq = none
    337c:	lsl	x11, x9, x10
    3380:	ldr	x13, [x15, #8]
    3384:	mov	x10, x15
    3388:	and	x13, x13, #0xfffffffffffffffc
    338c:	cmp	x13, x9
    3390:	b.eq	33dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe98>  // b.none
    3394:	lsr	x13, x11, #60
    3398:	and	x13, x13, #0x8
    339c:	add	x13, x10, x13
    33a0:	ldr	x15, [x13, #32]!
    33a4:	lsl	x11, x11, #1
    33a8:	cbnz	x15, 3380 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe3c>
    33ac:	ldr	x9, [x14, #416]
    33b0:	cmp	x9, x13
    33b4:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    33b8:	str	x12, [x13]
    33bc:	str	x10, [x12, #48]
    33c0:	b	33d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe90>
    33c4:	orr	w9, w15, w16
    33c8:	str	w9, [x10, #396]
    33cc:	str	x12, [x11]
    33d0:	str	x11, [x12, #48]
    33d4:	stp	x12, x12, [x12, #16]
    33d8:	b	2ac8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    33dc:	ldr	x9, [x10, #16]
    33e0:	ldr	x11, [x14, #416]
    33e4:	cmp	x11, x9
    33e8:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    33ec:	cmp	x11, x10
    33f0:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    33f4:	str	x12, [x9, #24]
    33f8:	str	x12, [x10, #16]
    33fc:	stp	x9, x10, [x12, #16]
    3400:	str	xzr, [x12, #48]
    3404:	b	2ac8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    3408:	mov	x17, xzr
    340c:	cbnz	x16, 2c6c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>
    3410:	b	324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd08>
    3414:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3418:	add	x8, x8, #0x198
    341c:	ldr	x12, [x8]
    3420:	str	x10, [x8, #24]
    3424:	add	x11, x12, x11
    3428:	str	x11, [x8]
    342c:	orr	x8, x11, #0x1
    3430:	str	x8, [x10, #8]
    3434:	b	39e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14a4>
    3438:	orr	w8, w10, w12
    343c:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3440:	str	w8, [x10, #392]
    3444:	mov	x10, x9
    3448:	str	x11, [x9, #16]
    344c:	str	x11, [x10, #24]
    3450:	stp	x10, x9, [x11, #16]
    3454:	b	3630 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10ec>
    3458:	mov	w18, #0x1                   	// #1
    345c:	lsl	w18, w18, w2
    3460:	bic	w17, w17, w18
    3464:	str	w17, [x16, #396]
    3468:	cmp	x12, #0x1f
    346c:	b.hi	3490 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf4c>  // b.pmore
    3470:	add	x8, x12, x22
    3474:	orr	x9, x8, #0x3
    3478:	str	x9, [x11, #8]
    347c:	add	x8, x11, x8
    3480:	ldr	x9, [x8, #8]
    3484:	orr	x9, x9, #0x1
    3488:	str	x9, [x8, #8]
    348c:	b	3504 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xfc0>
    3490:	orr	x16, x22, #0x3
    3494:	orr	x17, x12, #0x1
    3498:	str	x16, [x11, #8]
    349c:	str	x17, [x14, #8]
    34a0:	str	x12, [x14, x12]
    34a4:	cbz	x10, 34f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xfb0>
    34a8:	ldr	x16, [x13, #32]
    34ac:	lsr	x10, x10, #3
    34b0:	mov	w17, #0x1                   	// #1
    34b4:	add	x18, x13, x10, lsl #4
    34b8:	lsl	w13, w17, w10
    34bc:	tst	w13, w9
    34c0:	add	x10, x18, #0x40
    34c4:	b.eq	34dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf98>  // b.none
    34c8:	ldr	x8, [x10, #16]
    34cc:	ldr	x9, [x15, #416]
    34d0:	cmp	x9, x8
    34d4:	b.ls	34e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xfa4>  // b.plast
    34d8:	b	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>
    34dc:	orr	w9, w13, w9
    34e0:	str	w9, [x8, #392]
    34e4:	mov	x8, x10
    34e8:	str	x16, [x10, #16]
    34ec:	str	x16, [x8, #24]
    34f0:	stp	x8, x10, [x16, #16]
    34f4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    34f8:	add	x8, x8, #0x190
    34fc:	str	x12, [x8]
    3500:	str	x14, [x8, #24]
    3504:	add	x20, x11, #0x10
    3508:	b	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1108>
    350c:	mov	w13, #0xfff00               	// #1048320
    3510:	add	w13, w10, w13
    3514:	lsr	w13, w13, #16
    3518:	and	w13, w13, #0x8
    351c:	lsl	w10, w10, w13
    3520:	add	w14, w10, #0x7f, lsl #12
    3524:	lsr	w14, w14, #16
    3528:	and	w14, w14, #0x4
    352c:	lsl	w10, w10, w14
    3530:	orr	w13, w14, w13
    3534:	add	w14, w10, #0x3c, lsl #12
    3538:	lsr	w14, w14, #16
    353c:	and	w14, w14, #0x2
    3540:	lsl	w10, w10, w14
    3544:	orr	w13, w13, w14
    3548:	lsr	w10, w10, #15
    354c:	sub	w10, w10, w13
    3550:	lsl	w13, w10, #1
    3554:	add	w14, w10, #0x15
    3558:	add	w10, w13, #0x1c
    355c:	lsr	x13, x9, x14
    3560:	bfxil	x10, x13, #0, #1
    3564:	adrp	x14, 17000 <memcpy@GLIBC_2.17>
    3568:	add	x14, x14, #0x188
    356c:	str	x10, [x11, #56]
    3570:	stp	xzr, xzr, [x12]
    3574:	ldr	w13, [x14, #4]
    3578:	add	x12, x14, x10, lsl #3
    357c:	mov	w14, #0x1                   	// #1
    3580:	lsl	w14, w14, w10
    3584:	tst	w13, w14
    3588:	add	x12, x12, #0x250
    358c:	b.eq	35ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10a8>  // b.none
    3590:	ldr	x13, [x12]
    3594:	mov	w12, #0x39                  	// #57
    3598:	sub	x12, x12, x10, lsr #1
    359c:	cmp	x10, #0x1f
    35a0:	csel	x10, xzr, x12, eq  // eq = none
    35a4:	lsl	x12, x9, x10
    35a8:	mov	x10, x13
    35ac:	ldr	x13, [x13, #8]
    35b0:	and	x13, x13, #0xfffffffffffffffc
    35b4:	cmp	x13, x9
    35b8:	b.eq	3608 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10c4>  // b.none
    35bc:	lsr	x13, x12, #60
    35c0:	and	x13, x13, #0x8
    35c4:	add	x14, x10, x13
    35c8:	ldr	x13, [x14, #32]!
    35cc:	lsl	x12, x12, #1
    35d0:	cbnz	x13, 35a8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1064>
    35d4:	ldr	x8, [x8, #416]
    35d8:	cmp	x8, x14
    35dc:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    35e0:	str	x11, [x14]
    35e4:	str	x10, [x11, #48]
    35e8:	b	3600 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10bc>
    35ec:	orr	w8, w13, w14
    35f0:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    35f4:	str	w8, [x9, #396]
    35f8:	str	x11, [x12]
    35fc:	str	x12, [x11, #48]
    3600:	stp	x11, x11, [x11, #16]
    3604:	b	3630 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10ec>
    3608:	ldr	x9, [x10, #16]
    360c:	ldr	x8, [x8, #416]
    3610:	cmp	x8, x9
    3614:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3618:	cmp	x8, x10
    361c:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3620:	str	x11, [x9, #24]
    3624:	str	x11, [x10, #16]
    3628:	stp	x9, x10, [x11, #16]
    362c:	str	xzr, [x11, #48]
    3630:	ldr	x8, [x23, #408]
    3634:	subs	x8, x8, x22
    3638:	b.hi	296c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x428>  // b.pmore
    363c:	bl	1b90 <__errno_location@plt>
    3640:	mov	w8, #0xc                   	// #12
    3644:	mov	x20, xzr
    3648:	str	w8, [x0]
    364c:	ldrb	w8, [x21, #1256]
    3650:	tbz	w8, #1, 3660 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x111c>
    3654:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    3658:	add	x0, x0, #0x4f0
    365c:	bl	1bd0 <pthread_mutex_unlock@plt>
    3660:	cbz	x20, 369c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1158>
    3664:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3668:	add	x8, x8, #0x520
    366c:	ldr	x9, [x8]
    3670:	cmp	x9, x20
    3674:	b.hi	3688 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1144>  // b.pmore
    3678:	ldr	x10, [x8, #8]
    367c:	add	x9, x9, x10
    3680:	cmp	x9, x20
    3684:	b.hi	3690 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x114c>  // b.pmore
    3688:	ldr	x8, [x8, #16]
    368c:	b	366c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1128>
    3690:	ldr	x8, [x8, #24]
    3694:	add	x8, x20, x8
    3698:	str	x8, [x19]
    369c:	mov	x0, x20
    36a0:	ldp	x20, x19, [sp, #48]
    36a4:	ldp	x22, x21, [sp, #32]
    36a8:	ldp	x24, x23, [sp, #16]
    36ac:	ldp	x29, x30, [sp], #64
    36b0:	ret
    36b4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    36b8:	add	x8, x8, #0x190
    36bc:	ldr	x12, [x8]
    36c0:	str	x10, [x8, #24]
    36c4:	add	x11, x12, x11
    36c8:	str	x11, [x8]
    36cc:	orr	x8, x11, #0x1
    36d0:	str	x8, [x10, #8]
    36d4:	str	x11, [x10, x11]
    36d8:	b	39e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14a4>
    36dc:	mov	x1, xzr
    36e0:	cbnz	x0, 316c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc28>
    36e4:	b	3468 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf24>
    36e8:	ldr	x16, [x12, #24]
    36ec:	ldr	x15, [x12, #48]
    36f0:	cmp	x16, x12
    36f4:	b.eq	3730 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11ec>  // b.none
    36f8:	ldr	x17, [x12, #16]
    36fc:	cmp	x14, x17
    3700:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3704:	str	x16, [x17, #24]
    3708:	str	x17, [x16, #16]
    370c:	cbnz	x15, 3774 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1230>
    3710:	b	3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    3714:	adrp	x14, 17000 <memcpy@GLIBC_2.17>
    3718:	ldr	w15, [x14, #392]
    371c:	mov	w16, #0x1                   	// #1
    3720:	lsl	w16, w16, w17
    3724:	bic	w15, w15, w16
    3728:	str	w15, [x14, #392]
    372c:	b	3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    3730:	mov	x17, x12
    3734:	ldr	x18, [x17, #40]!
    3738:	cbnz	x18, 3744 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1200>
    373c:	ldr	x18, [x17, #-8]!
    3740:	cbz	x18, 39f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14ac>
    3744:	mov	x0, x17
    3748:	mov	x17, x18
    374c:	mov	x16, x18
    3750:	ldr	x18, [x17, #40]!
    3754:	cbnz	x18, 3744 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1200>
    3758:	mov	x17, x16
    375c:	ldr	x18, [x17, #32]!
    3760:	cbnz	x18, 3744 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1200>
    3764:	cmp	x14, x0
    3768:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    376c:	str	xzr, [x0]
    3770:	cbz	x15, 3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    3774:	ldr	x14, [x12, #56]
    3778:	adrp	x17, 17000 <memcpy@GLIBC_2.17>
    377c:	add	x17, x17, #0x188
    3780:	add	x17, x17, x14, lsl #3
    3784:	ldr	x18, [x17, #592]
    3788:	cmp	x18, x12
    378c:	b.eq	37bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1278>  // b.none
    3790:	ldr	x14, [x8, #416]
    3794:	cmp	x14, x15
    3798:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    379c:	ldr	x17, [x15, #32]
    37a0:	mov	w18, #0x28                  	// #40
    37a4:	cmp	x17, x12
    37a8:	mov	w17, #0x20                  	// #32
    37ac:	csel	x17, x17, x18, eq  // eq = none
    37b0:	str	x16, [x15, x17]
    37b4:	cbnz	x16, 37cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1288>
    37b8:	b	3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    37bc:	add	x17, x17, #0x250
    37c0:	str	x16, [x17]
    37c4:	cbz	x16, 380c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12c8>
    37c8:	ldr	x14, [x8, #416]
    37cc:	cmp	x14, x16
    37d0:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    37d4:	str	x15, [x16, #48]
    37d8:	ldr	x15, [x12, #32]
    37dc:	cbz	x15, 37f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12ac>
    37e0:	cmp	x14, x15
    37e4:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    37e8:	str	x15, [x16, #32]
    37ec:	str	x16, [x15, #48]
    37f0:	ldr	x15, [x12, #40]
    37f4:	cbz	x15, 3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    37f8:	cmp	x14, x15
    37fc:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3800:	str	x15, [x16, #40]
    3804:	str	x16, [x15, #48]
    3808:	b	3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    380c:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    3810:	ldr	w16, [x15, #396]
    3814:	mov	w17, #0x1                   	// #1
    3818:	lsl	w14, w17, w14
    381c:	bic	w14, w16, w14
    3820:	str	w14, [x15, #396]
    3824:	and	x13, x13, #0xfffffffffffffffc
    3828:	add	x12, x12, x13
    382c:	add	x11, x13, x11
    3830:	ldr	x13, [x12, #8]
    3834:	orr	x14, x11, #0x1
    3838:	cmp	x11, #0xff
    383c:	and	x13, x13, #0xfffffffffffffffe
    3840:	str	x13, [x12, #8]
    3844:	str	x14, [x10, #8]
    3848:	str	x11, [x10, x11]
    384c:	b.hi	388c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1348>  // b.pmore
    3850:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    3854:	add	x13, x13, #0x188
    3858:	ldr	w12, [x13]
    385c:	lsr	x11, x11, #3
    3860:	add	x14, x13, x11, lsl #4
    3864:	mov	w13, #0x1                   	// #1
    3868:	lsl	w13, w13, w11
    386c:	tst	w12, w13
    3870:	add	x11, x14, #0x40
    3874:	b.eq	38a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1360>  // b.none
    3878:	ldr	x12, [x11, #16]
    387c:	ldr	x8, [x8, #416]
    3880:	cmp	x8, x12
    3884:	b.ls	38b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1370>  // b.plast
    3888:	b	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>
    388c:	lsr	x12, x11, #8
    3890:	cbz	x12, 391c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x13d8>
    3894:	lsr	x13, x11, #24
    3898:	cbz	x13, 38c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1380>
    389c:	mov	w12, #0x1f                  	// #31
    38a0:	b	391c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x13d8>
    38a4:	orr	w8, w12, w13
    38a8:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    38ac:	str	w8, [x12, #392]
    38b0:	mov	x12, x11
    38b4:	str	x10, [x11, #16]
    38b8:	str	x10, [x12, #24]
    38bc:	stp	x12, x11, [x10, #16]
    38c0:	b	39e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14a4>
    38c4:	mov	w13, #0xfff00               	// #1048320
    38c8:	add	w13, w12, w13
    38cc:	lsr	w13, w13, #16
    38d0:	and	w13, w13, #0x8
    38d4:	lsl	w12, w12, w13
    38d8:	add	w14, w12, #0x7f, lsl #12
    38dc:	lsr	w14, w14, #16
    38e0:	and	w14, w14, #0x4
    38e4:	lsl	w12, w12, w14
    38e8:	orr	w13, w14, w13
    38ec:	add	w14, w12, #0x3c, lsl #12
    38f0:	lsr	w14, w14, #16
    38f4:	and	w14, w14, #0x2
    38f8:	lsl	w12, w12, w14
    38fc:	orr	w13, w13, w14
    3900:	lsr	w12, w12, #15
    3904:	sub	w12, w12, w13
    3908:	lsl	w13, w12, #1
    390c:	add	w14, w12, #0x15
    3910:	add	w12, w13, #0x1c
    3914:	lsr	x13, x11, x14
    3918:	bfxil	x12, x13, #0, #1
    391c:	adrp	x13, 17000 <memcpy@GLIBC_2.17>
    3920:	add	x13, x13, #0x188
    3924:	str	x12, [x10, #56]
    3928:	stp	xzr, xzr, [x10, #32]
    392c:	ldr	w14, [x13, #4]
    3930:	mov	w15, #0x1                   	// #1
    3934:	add	x13, x13, x12, lsl #3
    3938:	lsl	w15, w15, w12
    393c:	tst	w14, w15
    3940:	add	x13, x13, #0x250
    3944:	b.eq	39a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1460>  // b.none
    3948:	ldr	x14, [x13]
    394c:	mov	w13, #0x39                  	// #57
    3950:	sub	x13, x13, x12, lsr #1
    3954:	cmp	x12, #0x1f
    3958:	csel	x12, xzr, x13, eq  // eq = none
    395c:	lsl	x13, x11, x12
    3960:	mov	x12, x14
    3964:	ldr	x14, [x14, #8]
    3968:	and	x14, x14, #0xfffffffffffffffc
    396c:	cmp	x14, x11
    3970:	b.eq	39c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x147c>  // b.none
    3974:	lsr	x14, x13, #60
    3978:	and	x14, x14, #0x8
    397c:	add	x15, x12, x14
    3980:	ldr	x14, [x15, #32]!
    3984:	lsl	x13, x13, #1
    3988:	cbnz	x14, 3960 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x141c>
    398c:	ldr	x8, [x8, #416]
    3990:	cmp	x8, x15
    3994:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    3998:	str	x10, [x15]
    399c:	str	x12, [x10, #48]
    39a0:	b	39b8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1474>
    39a4:	orr	w8, w14, w15
    39a8:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    39ac:	str	w8, [x11, #396]
    39b0:	str	x10, [x13]
    39b4:	str	x13, [x10, #48]
    39b8:	stp	x10, x10, [x10, #16]
    39bc:	b	39e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14a4>
    39c0:	ldr	x11, [x12, #16]
    39c4:	ldr	x8, [x8, #416]
    39c8:	cmp	x8, x11
    39cc:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    39d0:	cmp	x8, x12
    39d4:	b.hi	39fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.pmore
    39d8:	str	x10, [x11, #24]
    39dc:	str	x10, [x12, #16]
    39e0:	stp	x11, x12, [x10, #16]
    39e4:	str	xzr, [x10, #48]
    39e8:	add	x20, x9, #0x10
    39ec:	b	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1108>
    39f0:	mov	x16, xzr
    39f4:	cbnz	x15, 3774 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1230>
    39f8:	b	3824 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12e0>
    39fc:	bl	1a90 <abort@plt>
    3a00:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3a04:	add	x8, x8, #0x520
    3a08:	ldr	x9, [x8]
    3a0c:	cmp	x9, x0
    3a10:	b.hi	3a24 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14e0>  // b.pmore
    3a14:	ldr	x10, [x8, #8]
    3a18:	add	x9, x9, x10
    3a1c:	cmp	x9, x0
    3a20:	b.hi	3a30 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.pmore
    3a24:	ldr	x8, [x8, #16]
    3a28:	cbnz	x8, 3a08 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14c4>
    3a2c:	ret
    3a30:	ldr	x8, [x8, #24]
    3a34:	add	x0, x0, x8
    3a38:	ret

0000000000003a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0>:
    3a3c:	sub	sp, sp, #0x70
    3a40:	stp	x29, x30, [sp, #16]
    3a44:	stp	x28, x27, [sp, #32]
    3a48:	stp	x26, x25, [sp, #48]
    3a4c:	stp	x24, x23, [sp, #64]
    3a50:	stp	x22, x21, [sp, #80]
    3a54:	stp	x20, x19, [sp, #96]
    3a58:	add	x29, sp, #0x10
    3a5c:	cbz	x0, 4570 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    3a60:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3a64:	ldr	x8, [x8, #1488]
    3a68:	mov	x19, x0
    3a6c:	cbnz	x8, 3a74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38>
    3a70:	bl	45d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb98>
    3a74:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    3a78:	ldrb	w8, [x20, #1256]
    3a7c:	tbz	w8, #1, 3a90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x54>
    3a80:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    3a84:	add	x0, x0, #0x4f0
    3a88:	bl	1bc0 <pthread_mutex_lock@plt>
    3a8c:	cbnz	w0, 4570 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    3a90:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    3a94:	ldr	x12, [x21, #416]
    3a98:	sub	x8, x19, #0x10
    3a9c:	cmp	x8, x12
    3aa0:	b.cc	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.lo, b.ul, b.last
    3aa4:	ldur	x11, [x19, #-8]
    3aa8:	tbz	w11, #1, 45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>
    3aac:	and	x9, x11, #0xfffffffffffffffc
    3ab0:	add	x10, x8, x9
    3ab4:	tbnz	w11, #0, 3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3ab8:	ldr	x14, [x8]
    3abc:	tbnz	w14, #0, 3b34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf8>
    3ac0:	sub	x8, x8, x14
    3ac4:	cmp	x8, x12
    3ac8:	b.cc	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.lo, b.ul, b.last
    3acc:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3ad0:	ldr	x11, [x11, #424]
    3ad4:	add	x9, x14, x9
    3ad8:	cmp	x11, x8
    3adc:	b.eq	3b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x128>  // b.none
    3ae0:	cmp	x14, #0xff
    3ae4:	b.hi	3b90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x154>  // b.pmore
    3ae8:	ldp	x11, x13, [x8, #16]
    3aec:	lsr	x14, x14, #3
    3af0:	cmp	x11, x13
    3af4:	b.eq	3bbc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x180>  // b.none
    3af8:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    3afc:	add	x15, x15, #0x188
    3b00:	add	x14, x15, x14, lsl #4
    3b04:	add	x14, x14, #0x40
    3b08:	cmp	x11, x14
    3b0c:	b.eq	3b18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>  // b.none
    3b10:	cmp	x12, x11
    3b14:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3b18:	cmp	x13, x14
    3b1c:	b.eq	3b28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xec>  // b.none
    3b20:	cmp	x12, x13
    3b24:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3b28:	str	x13, [x11, #24]
    3b2c:	str	x11, [x13, #16]
    3b30:	b	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3b34:	and	x10, x14, #0xfffffffffffffffe
    3b38:	add	x9, x9, x10
    3b3c:	add	x19, x9, #0x20
    3b40:	sub	x0, x8, x10
    3b44:	mov	x1, x19
    3b48:	bl	4d14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12d8>
    3b4c:	cbnz	w0, 4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    3b50:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3b54:	ldr	x9, [x8, #1240]
    3b58:	sub	x9, x9, x19
    3b5c:	str	x9, [x8, #1240]
    3b60:	b	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    3b64:	ldr	x11, [x10, #8]
    3b68:	mvn	w12, w11
    3b6c:	tst	x12, #0x3
    3b70:	b.ne	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>  // b.any
    3b74:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    3b78:	and	x11, x11, #0xfffffffffffffffe
    3b7c:	orr	x13, x9, #0x1
    3b80:	str	x9, [x12, #400]
    3b84:	str	x11, [x10, #8]
    3b88:	str	x13, [x8, #8]
    3b8c:	b	41b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x774>
    3b90:	ldr	x13, [x8, #24]
    3b94:	ldr	x11, [x8, #48]
    3b98:	cmp	x13, x8
    3b9c:	b.eq	3bd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x19c>  // b.none
    3ba0:	ldr	x14, [x8, #16]
    3ba4:	cmp	x12, x14
    3ba8:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3bac:	str	x13, [x14, #24]
    3bb0:	str	x14, [x13, #16]
    3bb4:	cbnz	x11, 3c1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e0>
    3bb8:	b	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3bbc:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3bc0:	ldr	w12, [x11, #392]
    3bc4:	mov	w13, #0x1                   	// #1
    3bc8:	lsl	w13, w13, w14
    3bcc:	bic	w12, w12, w13
    3bd0:	str	w12, [x11, #392]
    3bd4:	b	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3bd8:	mov	x14, x8
    3bdc:	ldr	x15, [x14, #40]!
    3be0:	cbnz	x15, 3bec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b0>
    3be4:	ldr	x15, [x14, #-8]!
    3be8:	cbz	x15, 45b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb7c>
    3bec:	mov	x16, x14
    3bf0:	mov	x14, x15
    3bf4:	mov	x13, x15
    3bf8:	ldr	x15, [x14, #40]!
    3bfc:	cbnz	x15, 3bec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b0>
    3c00:	mov	x14, x13
    3c04:	ldr	x15, [x14, #32]!
    3c08:	cbnz	x15, 3bec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b0>
    3c0c:	cmp	x12, x16
    3c10:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3c14:	str	xzr, [x16]
    3c18:	cbz	x11, 3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3c1c:	ldr	x12, [x8, #56]
    3c20:	adrp	x14, 17000 <memcpy@GLIBC_2.17>
    3c24:	add	x14, x14, #0x188
    3c28:	add	x14, x14, x12, lsl #3
    3c2c:	ldr	x15, [x14, #592]
    3c30:	cmp	x15, x8
    3c34:	b.eq	3c64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x228>  // b.none
    3c38:	ldr	x12, [x21, #416]
    3c3c:	cmp	x12, x11
    3c40:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3c44:	ldr	x14, [x11, #32]
    3c48:	mov	w15, #0x28                  	// #40
    3c4c:	cmp	x14, x8
    3c50:	mov	w14, #0x20                  	// #32
    3c54:	csel	x14, x14, x15, eq  // eq = none
    3c58:	str	x13, [x11, x14]
    3c5c:	cbnz	x13, 3c74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x238>
    3c60:	b	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3c64:	add	x14, x14, #0x250
    3c68:	str	x13, [x14]
    3c6c:	cbz	x13, 3cb4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x278>
    3c70:	ldr	x12, [x21, #416]
    3c74:	cmp	x12, x13
    3c78:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3c7c:	str	x11, [x13, #48]
    3c80:	ldr	x11, [x8, #32]
    3c84:	cbz	x11, 3c98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25c>
    3c88:	cmp	x12, x11
    3c8c:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3c90:	str	x11, [x13, #32]
    3c94:	str	x13, [x11, #48]
    3c98:	ldr	x11, [x8, #40]
    3c9c:	cbz	x11, 3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3ca0:	cmp	x12, x11
    3ca4:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3ca8:	str	x11, [x13, #40]
    3cac:	str	x13, [x11, #48]
    3cb0:	b	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    3cb4:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3cb8:	ldr	w13, [x11, #396]
    3cbc:	mov	w14, #0x1                   	// #1
    3cc0:	lsl	w12, w14, w12
    3cc4:	bic	w12, w13, w12
    3cc8:	str	w12, [x11, #396]
    3ccc:	cmp	x10, x8
    3cd0:	b.ls	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.plast
    3cd4:	ldr	x11, [x10, #8]
    3cd8:	tbz	w11, #0, 45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>
    3cdc:	tbnz	w11, #1, 3d40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x304>
    3ce0:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x12, [x12, #432]
    3ce8:	cmp	x12, x10
    3cec:	b.eq	3db0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x374>  // b.none
    3cf0:	adrp	x12, 17000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x13, [x12, #424]
    3cf8:	cmp	x13, x10
    3cfc:	b.eq	4190 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x754>  // b.none
    3d00:	cmp	x11, #0xff
    3d04:	b.hi	41d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x79c>  // b.pmore
    3d08:	ldp	x13, x10, [x10, #16]
    3d0c:	lsr	x14, x11, #3
    3d10:	cmp	x13, x10
    3d14:	b.eq	4330 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8f4>  // b.none
    3d18:	adrp	x15, 17000 <memcpy@GLIBC_2.17>
    3d1c:	add	x15, x15, #0x188
    3d20:	add	x14, x15, x14, lsl #4
    3d24:	add	x14, x14, #0x40
    3d28:	cmp	x13, x14
    3d2c:	b.eq	44b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa7c>  // b.none
    3d30:	ldr	x15, [x21, #416]
    3d34:	cmp	x15, x13
    3d38:	b.ls	44bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa80>  // b.plast
    3d3c:	b	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>
    3d40:	and	x11, x11, #0xfffffffffffffffe
    3d44:	orr	x12, x9, #0x1
    3d48:	str	x11, [x10, #8]
    3d4c:	str	x12, [x8, #8]
    3d50:	str	x9, [x8, x9]
    3d54:	cmp	x9, #0xff
    3d58:	b.hi	3d98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x35c>  // b.pmore
    3d5c:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3d60:	add	x11, x11, #0x188
    3d64:	ldr	w10, [x11]
    3d68:	lsr	x9, x9, #3
    3d6c:	add	x12, x11, x9, lsl #4
    3d70:	mov	w11, #0x1                   	// #1
    3d74:	lsl	w11, w11, w9
    3d78:	tst	w10, w11
    3d7c:	add	x9, x12, #0x40
    3d80:	b.eq	41b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x77c>  // b.none
    3d84:	ldr	x10, [x9, #16]
    3d88:	ldr	x11, [x21, #416]
    3d8c:	cmp	x11, x10
    3d90:	b.ls	41c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x78c>  // b.plast
    3d94:	b	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>
    3d98:	lsr	x10, x9, #8
    3d9c:	cbz	x10, 4260 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x824>
    3da0:	lsr	x11, x9, #24
    3da4:	cbz	x11, 4208 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7cc>
    3da8:	mov	w10, #0x1f                  	// #31
    3dac:	b	4260 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x824>
    3db0:	adrp	x22, 17000 <memcpy@GLIBC_2.17>
    3db4:	add	x22, x22, #0x198
    3db8:	ldr	x10, [x22]
    3dbc:	str	x8, [x22, #24]
    3dc0:	add	x9, x10, x9
    3dc4:	orr	x10, x9, #0x1
    3dc8:	str	x9, [x22]
    3dcc:	str	x10, [x8, #8]
    3dd0:	ldr	x10, [x22, #16]
    3dd4:	cmp	x8, x10
    3dd8:	b.ne	3dec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b0>  // b.any
    3ddc:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3de0:	add	x10, x10, #0x190
    3de4:	str	xzr, [x10, #24]
    3de8:	str	xzr, [x10]
    3dec:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3df0:	ldr	x10, [x10, #440]
    3df4:	cmp	x9, x10
    3df8:	b.ls	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>  // b.plast
    3dfc:	cmp	x9, #0x49
    3e00:	b.cc	3e5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x420>  // b.lo, b.ul, b.last
    3e04:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    3e08:	ldr	x10, [x10, #1496]
    3e0c:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    3e10:	add	x23, x23, #0x520
    3e14:	add	x9, x9, x10
    3e18:	sub	x9, x9, #0x49
    3e1c:	udiv	x9, x9, x10
    3e20:	sub	x9, x9, #0x1
    3e24:	mul	x19, x9, x10
    3e28:	ldr	x10, [x23]
    3e2c:	cmp	x10, x8
    3e30:	b.hi	3e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x408>  // b.pmore
    3e34:	ldr	x9, [x23, #8]
    3e38:	add	x10, x10, x9
    3e3c:	cmp	x10, x8
    3e40:	b.hi	3e54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x418>  // b.pmore
    3e44:	ldr	x23, [x23, #16]
    3e48:	cbnz	x23, 3e28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3ec>
    3e4c:	mov	w8, #0x8                   	// #8
    3e50:	ldr	x9, [x8]
    3e54:	subs	x8, x9, x19
    3e58:	b.cs	43fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c0>  // b.hs, b.nlast
    3e5c:	mov	x8, xzr
    3e60:	str	x8, [sp, #8]
    3e64:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3e68:	ldr	x22, [x8, #1328]
    3e6c:	cbz	x22, 43dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a0>
    3e70:	adrp	x25, 17000 <memcpy@GLIBC_2.17>
    3e74:	mov	x24, xzr
    3e78:	add	x25, x25, #0x520
    3e7c:	ldr	x0, [x22]
    3e80:	mov	x23, x22
    3e84:	ldr	x22, [x22, #16]
    3e88:	add	x8, x0, #0x10
    3e8c:	neg	w9, w8
    3e90:	and	x9, x9, #0x7
    3e94:	tst	x8, #0x7
    3e98:	csel	x8, xzr, x9, eq  // eq = none
    3e9c:	add	x26, x0, x8
    3ea0:	ldr	x28, [x26, #8]
    3ea4:	tbnz	w28, #1, 4178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    3ea8:	ldr	x19, [x23, #8]
    3eac:	and	x27, x28, #0xfffffffffffffffc
    3eb0:	add	x8, x26, x27
    3eb4:	add	x9, x0, x19
    3eb8:	sub	x9, x9, #0x48
    3ebc:	cmp	x8, x9
    3ec0:	b.cc	4178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>  // b.lo, b.ul, b.last
    3ec4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3ec8:	ldr	x8, [x8, #424]
    3ecc:	cmp	x8, x26
    3ed0:	b.eq	3f04 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c8>  // b.none
    3ed4:	ldr	x9, [x26, #24]
    3ed8:	ldr	x8, [x26, #48]
    3edc:	cmp	x9, x26
    3ee0:	b.eq	3f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>  // b.none
    3ee4:	ldr	x10, [x26, #16]
    3ee8:	ldr	x11, [x21, #416]
    3eec:	cmp	x11, x10
    3ef0:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3ef4:	str	x9, [x10, #24]
    3ef8:	str	x10, [x9, #16]
    3efc:	cbnz	x8, 3f60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x524>
    3f00:	b	4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3f04:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    3f08:	add	x8, x8, #0x190
    3f0c:	str	xzr, [x8, #24]
    3f10:	str	xzr, [x8]
    3f14:	b	4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3f18:	mov	x10, x26
    3f1c:	ldr	x11, [x10, #40]!
    3f20:	cbnz	x11, 3f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f0>
    3f24:	ldr	x11, [x10, #-8]!
    3f28:	cbz	x11, 4184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    3f2c:	mov	x12, x10
    3f30:	mov	x10, x11
    3f34:	mov	x9, x11
    3f38:	ldr	x11, [x10, #40]!
    3f3c:	cbnz	x11, 3f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f0>
    3f40:	mov	x10, x9
    3f44:	ldr	x11, [x10, #32]!
    3f48:	cbnz	x11, 3f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f0>
    3f4c:	ldr	x10, [x21, #416]
    3f50:	cmp	x10, x12
    3f54:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3f58:	str	xzr, [x12]
    3f5c:	cbz	x8, 4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3f60:	ldr	x10, [x26, #56]
    3f64:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3f68:	add	x11, x11, #0x188
    3f6c:	add	x11, x11, x10, lsl #3
    3f70:	ldr	x12, [x11, #592]
    3f74:	cmp	x12, x26
    3f78:	b.eq	3fa8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x56c>  // b.none
    3f7c:	ldr	x10, [x21, #416]
    3f80:	cmp	x10, x8
    3f84:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3f88:	ldr	x11, [x8, #32]
    3f8c:	mov	w12, #0x20                  	// #32
    3f90:	cmp	x11, x26
    3f94:	mov	w11, #0x28                  	// #40
    3f98:	csel	x11, x12, x11, eq  // eq = none
    3f9c:	str	x9, [x8, x11]
    3fa0:	cbnz	x9, 3fb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x57c>
    3fa4:	b	4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3fa8:	add	x11, x11, #0x250
    3fac:	str	x9, [x11]
    3fb0:	cbz	x9, 3ff8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5bc>
    3fb4:	ldr	x10, [x21, #416]
    3fb8:	cmp	x10, x9
    3fbc:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3fc0:	str	x8, [x9, #48]
    3fc4:	ldr	x8, [x26, #32]
    3fc8:	cbz	x8, 3fdc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5a0>
    3fcc:	cmp	x10, x8
    3fd0:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3fd4:	str	x8, [x9, #32]
    3fd8:	str	x9, [x8, #48]
    3fdc:	ldr	x8, [x26, #40]
    3fe0:	cbz	x8, 4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3fe4:	cmp	x10, x8
    3fe8:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    3fec:	str	x8, [x9, #40]
    3ff0:	str	x9, [x8, #48]
    3ff4:	b	4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    3ff8:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    3ffc:	ldr	w8, [x11, #396]
    4000:	mov	w9, #0x1                   	// #1
    4004:	lsl	w9, w9, w10
    4008:	bic	w8, w8, w9
    400c:	str	w8, [x11, #396]
    4010:	mov	x1, x19
    4014:	bl	4d14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12d8>
    4018:	cbz	w0, 4034 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5f8>
    401c:	lsr	x8, x28, #8
    4020:	cbz	x8, 40ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x670>
    4024:	lsr	x9, x28, #24
    4028:	cbz	x9, 4054 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x618>
    402c:	mov	w8, #0x1f                  	// #31
    4030:	b	40ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x670>
    4034:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4038:	ldr	x8, [x9, #1240]
    403c:	add	x24, x19, x24
    4040:	sub	x8, x8, x19
    4044:	str	x8, [x9, #1240]
    4048:	str	x22, [x25, #16]
    404c:	cbnz	x22, 3e7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x440>
    4050:	b	43e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a4>
    4054:	mov	w9, #0xfff00               	// #1048320
    4058:	add	w9, w8, w9
    405c:	lsr	w9, w9, #16
    4060:	and	w9, w9, #0x8
    4064:	lsl	w8, w8, w9
    4068:	add	w10, w8, #0x7f, lsl #12
    406c:	lsr	w10, w10, #16
    4070:	and	w10, w10, #0x4
    4074:	lsl	w8, w8, w10
    4078:	orr	w9, w10, w9
    407c:	add	w10, w8, #0x3c, lsl #12
    4080:	lsr	w10, w10, #16
    4084:	and	w10, w10, #0x2
    4088:	lsl	w8, w8, w10
    408c:	orr	w9, w9, w10
    4090:	lsr	w8, w8, #15
    4094:	sub	w8, w8, w9
    4098:	lsl	w9, w8, #1
    409c:	add	w10, w8, #0x15
    40a0:	add	w8, w9, #0x1c
    40a4:	lsr	x9, x27, x10
    40a8:	bfxil	x8, x9, #0, #1
    40ac:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    40b0:	str	x8, [x26, #56]
    40b4:	stp	xzr, xzr, [x26, #32]
    40b8:	add	x9, x9, #0x188
    40bc:	ldr	w10, [x9, #4]
    40c0:	mov	w11, #0x1                   	// #1
    40c4:	add	x9, x9, x8, lsl #3
    40c8:	lsl	w11, w11, w8
    40cc:	tst	w10, w11
    40d0:	add	x9, x9, #0x250
    40d4:	b.eq	4134 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6f8>  // b.none
    40d8:	ldr	x10, [x9]
    40dc:	mov	w9, #0x39                  	// #57
    40e0:	sub	x9, x9, x8, lsr #1
    40e4:	cmp	x8, #0x1f
    40e8:	csel	x8, xzr, x9, eq  // eq = none
    40ec:	lsl	x9, x27, x8
    40f0:	mov	x8, x10
    40f4:	ldr	x10, [x10, #8]
    40f8:	and	x10, x10, #0xfffffffffffffffc
    40fc:	cmp	x10, x27
    4100:	b.eq	4150 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x714>  // b.none
    4104:	lsr	x10, x9, #60
    4108:	and	x10, x10, #0x8
    410c:	add	x11, x8, x10
    4110:	ldr	x10, [x11, #32]!
    4114:	lsl	x9, x9, #1
    4118:	cbnz	x10, 40f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6b4>
    411c:	ldr	x9, [x21, #416]
    4120:	cmp	x9, x11
    4124:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    4128:	str	x26, [x11]
    412c:	str	x8, [x26, #48]
    4130:	b	4148 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x70c>
    4134:	orr	w8, w10, w11
    4138:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    413c:	str	w8, [x10, #396]
    4140:	str	x26, [x9]
    4144:	str	x9, [x26, #48]
    4148:	stp	x26, x26, [x26, #16]
    414c:	b	4178 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    4150:	ldr	x9, [x8, #16]
    4154:	ldr	x10, [x21, #416]
    4158:	cmp	x10, x9
    415c:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    4160:	cmp	x10, x8
    4164:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    4168:	str	x26, [x9, #24]
    416c:	str	x26, [x8, #16]
    4170:	stp	x9, x8, [x26, #16]
    4174:	str	xzr, [x26, #48]
    4178:	mov	x25, x23
    417c:	cbnz	x22, 3e7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x440>
    4180:	b	43e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a4>
    4184:	mov	x9, xzr
    4188:	cbnz	x8, 3f60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x524>
    418c:	b	4010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5d4>
    4190:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    4194:	add	x10, x10, #0x190
    4198:	ldr	x11, [x10]
    419c:	str	x8, [x10, #24]
    41a0:	add	x9, x11, x9
    41a4:	str	x9, [x10]
    41a8:	orr	x10, x9, #0x1
    41ac:	str	x10, [x8, #8]
    41b0:	str	x9, [x8, x9]
    41b4:	b	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    41b8:	orr	w10, w10, w11
    41bc:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    41c0:	str	w10, [x11, #392]
    41c4:	mov	x10, x9
    41c8:	str	x8, [x9, #16]
    41cc:	str	x8, [x10, #24]
    41d0:	stp	x10, x9, [x8, #16]
    41d4:	b	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    41d8:	ldr	x14, [x10, #24]
    41dc:	ldr	x13, [x10, #48]
    41e0:	cmp	x14, x10
    41e4:	b.eq	434c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x910>  // b.none
    41e8:	ldr	x15, [x10, #16]
    41ec:	ldr	x16, [x21, #416]
    41f0:	cmp	x16, x15
    41f4:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    41f8:	str	x14, [x15, #24]
    41fc:	str	x15, [x14, #16]
    4200:	cbnz	x13, 4394 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x958>
    4204:	b	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    4208:	mov	w11, #0xfff00               	// #1048320
    420c:	add	w11, w10, w11
    4210:	lsr	w11, w11, #16
    4214:	and	w11, w11, #0x8
    4218:	lsl	w10, w10, w11
    421c:	add	w12, w10, #0x7f, lsl #12
    4220:	lsr	w12, w12, #16
    4224:	and	w12, w12, #0x4
    4228:	lsl	w10, w10, w12
    422c:	orr	w11, w12, w11
    4230:	add	w12, w10, #0x3c, lsl #12
    4234:	lsr	w12, w12, #16
    4238:	and	w12, w12, #0x2
    423c:	lsl	w10, w10, w12
    4240:	orr	w11, w11, w12
    4244:	lsr	w10, w10, #15
    4248:	sub	w10, w10, w11
    424c:	lsl	w11, w10, #1
    4250:	add	w12, w10, #0x15
    4254:	add	w10, w11, #0x1c
    4258:	lsr	x11, x9, x12
    425c:	bfxil	x10, x11, #0, #1
    4260:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    4264:	add	x11, x11, #0x188
    4268:	str	x10, [x8, #56]
    426c:	stp	xzr, xzr, [x8, #32]
    4270:	ldr	w12, [x11, #4]
    4274:	mov	w13, #0x1                   	// #1
    4278:	add	x11, x11, x10, lsl #3
    427c:	lsl	w13, w13, w10
    4280:	tst	w12, w13
    4284:	add	x11, x11, #0x250
    4288:	b.eq	42e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8ac>  // b.none
    428c:	ldr	x12, [x11]
    4290:	mov	w11, #0x39                  	// #57
    4294:	sub	x11, x11, x10, lsr #1
    4298:	cmp	x10, #0x1f
    429c:	csel	x10, xzr, x11, eq  // eq = none
    42a0:	lsl	x11, x9, x10
    42a4:	mov	x10, x12
    42a8:	ldr	x12, [x12, #8]
    42ac:	and	x12, x12, #0xfffffffffffffffc
    42b0:	cmp	x12, x9
    42b4:	b.eq	4304 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8c8>  // b.none
    42b8:	lsr	x12, x11, #60
    42bc:	and	x12, x12, #0x8
    42c0:	add	x13, x10, x12
    42c4:	ldr	x12, [x13, #32]!
    42c8:	lsl	x11, x11, #1
    42cc:	cbnz	x12, 42a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x868>
    42d0:	ldr	x9, [x21, #416]
    42d4:	cmp	x9, x13
    42d8:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    42dc:	str	x8, [x13]
    42e0:	str	x10, [x8, #48]
    42e4:	b	42fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8c0>
    42e8:	orr	w9, w12, w13
    42ec:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    42f0:	str	w9, [x10, #396]
    42f4:	str	x8, [x11]
    42f8:	str	x11, [x8, #48]
    42fc:	stp	x8, x8, [x8, #16]
    4300:	b	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    4304:	ldr	x9, [x10, #16]
    4308:	ldr	x11, [x21, #416]
    430c:	cmp	x11, x9
    4310:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    4314:	cmp	x11, x10
    4318:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    431c:	str	x8, [x9, #24]
    4320:	str	x8, [x10, #16]
    4324:	stp	x9, x10, [x8, #16]
    4328:	str	xzr, [x8, #48]
    432c:	b	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    4330:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    4334:	ldr	w13, [x10, #392]
    4338:	mov	w15, #0x1                   	// #1
    433c:	lsl	w14, w15, w14
    4340:	bic	w13, w13, w14
    4344:	str	w13, [x10, #392]
    4348:	b	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    434c:	mov	x15, x10
    4350:	ldr	x16, [x15, #40]!
    4354:	cbnz	x16, 4360 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    4358:	ldr	x16, [x15, #-8]!
    435c:	cbz	x16, 45c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb88>
    4360:	mov	x17, x15
    4364:	mov	x15, x16
    4368:	mov	x14, x16
    436c:	ldr	x16, [x15, #40]!
    4370:	cbnz	x16, 4360 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    4374:	mov	x15, x14
    4378:	ldr	x16, [x15, #32]!
    437c:	cbnz	x16, 4360 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    4380:	ldr	x15, [x21, #416]
    4384:	cmp	x15, x17
    4388:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    438c:	str	xzr, [x17]
    4390:	cbz	x13, 4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    4394:	ldr	x15, [x10, #56]
    4398:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    439c:	add	x16, x16, #0x188
    43a0:	add	x16, x16, x15, lsl #3
    43a4:	ldr	x17, [x16, #592]
    43a8:	cmp	x17, x10
    43ac:	b.eq	44d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa9c>  // b.none
    43b0:	ldr	x15, [x21, #416]
    43b4:	cmp	x15, x13
    43b8:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    43bc:	ldr	x16, [x13, #32]
    43c0:	mov	w17, #0x28                  	// #40
    43c4:	cmp	x16, x10
    43c8:	mov	w16, #0x20                  	// #32
    43cc:	csel	x16, x16, x17, eq  // eq = none
    43d0:	str	x14, [x13, x16]
    43d4:	cbnz	x14, 44e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaac>
    43d8:	b	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    43dc:	mov	x24, xzr
    43e0:	ldr	x8, [sp, #8]
    43e4:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    43e8:	cmn	x8, x24
    43ec:	b.ne	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>  // b.any
    43f0:	mov	x8, #0xffffffffffffffff    	// #-1
    43f4:	str	x8, [x9, #440]
    43f8:	b	4568 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb2c>
    43fc:	ldr	x10, [x23]
    4400:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    4404:	add	x11, x11, #0x520
    4408:	add	x9, x10, x9
    440c:	cmp	x10, x11
    4410:	b.hi	441c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9e0>  // b.pmore
    4414:	cmp	x9, x11
    4418:	b.hi	3e5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x420>  // b.pmore
    441c:	ldr	x11, [x11, #16]
    4420:	cbnz	x11, 440c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9d0>
    4424:	add	x0, x10, x8
    4428:	mov	x1, x19
    442c:	bl	4d14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12d8>
    4430:	mov	x8, xzr
    4434:	cbz	x19, 3e60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x424>
    4438:	cbnz	w0, 3e60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x424>
    443c:	ldr	x8, [x23, #8]
    4440:	sub	x8, x8, x19
    4444:	str	x8, [x23, #8]
    4448:	ldr	x8, [x22, #832]
    444c:	ldr	x10, [x22, #24]
    4450:	ldr	x9, [x22]
    4454:	sub	x8, x8, x19
    4458:	add	x11, x10, #0x10
    445c:	str	x8, [x22, #832]
    4460:	neg	w8, w11
    4464:	tst	x11, #0x7
    4468:	and	x8, x8, #0x7
    446c:	sub	x9, x9, x19
    4470:	csel	x8, xzr, x8, eq  // eq = none
    4474:	add	x11, x10, x8
    4478:	sub	x8, x9, x8
    447c:	str	x8, [x22]
    4480:	orr	x8, x8, #0x1
    4484:	str	x11, [x22, #24]
    4488:	str	x8, [x11, #8]
    448c:	mov	w8, #0x48                  	// #72
    4490:	add	x9, x10, x9
    4494:	adrp	x11, 17000 <memcpy@GLIBC_2.17>
    4498:	str	x8, [x9, #8]
    449c:	ldrb	w8, [x11, #1512]
    44a0:	cmp	w8, #0x0
    44a4:	mov	w8, #0x200000              	// #2097152
    44a8:	csel	x8, x8, xzr, ne  // ne = any
    44ac:	str	x8, [x22, #32]
    44b0:	mov	x8, x19
    44b4:	b	3e60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x424>
    44b8:	ldr	x15, [x21, #416]
    44bc:	cmp	x10, x14
    44c0:	b.eq	44cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa90>  // b.none
    44c4:	cmp	x15, x10
    44c8:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    44cc:	str	x10, [x13, #24]
    44d0:	str	x13, [x10, #16]
    44d4:	b	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    44d8:	add	x16, x16, #0x250
    44dc:	str	x14, [x16]
    44e0:	cbz	x14, 4528 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaec>
    44e4:	ldr	x15, [x21, #416]
    44e8:	cmp	x15, x14
    44ec:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    44f0:	str	x13, [x14, #48]
    44f4:	ldr	x13, [x10, #32]
    44f8:	cbz	x13, 450c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xad0>
    44fc:	cmp	x15, x13
    4500:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    4504:	str	x13, [x14, #32]
    4508:	str	x14, [x13, #48]
    450c:	ldr	x10, [x10, #40]
    4510:	cbz	x10, 4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    4514:	cmp	x15, x10
    4518:	b.hi	45d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb94>  // b.pmore
    451c:	str	x10, [x14, #40]
    4520:	str	x14, [x10, #48]
    4524:	b	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    4528:	adrp	x10, 17000 <memcpy@GLIBC_2.17>
    452c:	ldr	w13, [x10, #396]
    4530:	mov	w14, #0x1                   	// #1
    4534:	lsl	w14, w14, w15
    4538:	bic	w13, w13, w14
    453c:	str	w13, [x10, #396]
    4540:	and	x10, x11, #0xfffffffffffffffc
    4544:	add	x9, x10, x9
    4548:	orr	x10, x9, #0x1
    454c:	str	x10, [x8, #8]
    4550:	str	x9, [x8, x9]
    4554:	ldr	x10, [x12, #424]
    4558:	cmp	x8, x10
    455c:	b.ne	3d54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x318>  // b.any
    4560:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4564:	str	x9, [x8, #400]
    4568:	ldrb	w8, [x20, #1256]
    456c:	tbnz	w8, #1, 4590 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb54>
    4570:	ldp	x20, x19, [sp, #96]
    4574:	ldp	x22, x21, [sp, #80]
    4578:	ldp	x24, x23, [sp, #64]
    457c:	ldp	x26, x25, [sp, #48]
    4580:	ldp	x28, x27, [sp, #32]
    4584:	ldp	x29, x30, [sp, #16]
    4588:	add	sp, sp, #0x70
    458c:	ret
    4590:	ldp	x20, x19, [sp, #96]
    4594:	ldp	x22, x21, [sp, #80]
    4598:	ldp	x24, x23, [sp, #64]
    459c:	ldp	x26, x25, [sp, #48]
    45a0:	ldp	x28, x27, [sp, #32]
    45a4:	ldp	x29, x30, [sp, #16]
    45a8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    45ac:	add	x0, x0, #0x4f0
    45b0:	add	sp, sp, #0x70
    45b4:	b	1bd0 <pthread_mutex_unlock@plt>
    45b8:	mov	x13, xzr
    45bc:	cbnz	x11, 3c1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e0>
    45c0:	b	3ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    45c4:	mov	x14, xzr
    45c8:	cbnz	x13, 4394 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x958>
    45cc:	b	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb04>
    45d0:	bl	1a90 <abort@plt>
    45d4:	stp	x29, x30, [sp, #-48]!
    45d8:	stp	x20, x19, [sp, #32]
    45dc:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    45e0:	ldr	x8, [x19, #1488]
    45e4:	str	x21, [sp, #16]
    45e8:	mov	x29, sp
    45ec:	cbnz	x8, 46a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc6c>
    45f0:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    45f4:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    45f8:	mov	w21, #0x1                   	// #1
    45fc:	adrp	x9, 17000 <memcpy@GLIBC_2.17>
    4600:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    4604:	add	x0, x0, #0x540
    4608:	strb	w21, [x8, #1504]
    460c:	strb	w21, [x9, #1512]
    4610:	strb	w21, [x20, #1520]
    4614:	bl	1bc0 <pthread_mutex_lock@plt>
    4618:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    461c:	ldrb	w9, [x8, #1480]
    4620:	tbnz	w9, #0, 4650 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc14>
    4624:	strb	w21, [x8, #1480]
    4628:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    462c:	add	x21, x21, #0x4e8
    4630:	add	x0, x21, #0x8
    4634:	mov	x1, xzr
    4638:	bl	1a50 <pthread_mutex_init@plt>
    463c:	ldrb	w8, [x20, #1520]
    4640:	cmp	w8, #0x0
    4644:	mov	w8, #0x7                   	// #7
    4648:	csel	w8, w8, wzr, ne  // ne = any
    464c:	str	w8, [x21]
    4650:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    4654:	add	x0, x0, #0x540
    4658:	bl	1bd0 <pthread_mutex_unlock@plt>
    465c:	mov	w0, #0x1e                  	// #30
    4660:	bl	1b60 <sysconf@plt>
    4664:	str	x0, [x19, #1488]
    4668:	mov	w0, #0x1e                  	// #30
    466c:	bl	1b60 <sysconf@plt>
    4670:	cbz	x0, 4680 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc44>
    4674:	mov	w0, #0x1e                  	// #30
    4678:	bl	1b60 <sysconf@plt>
    467c:	b	4684 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc48>
    4680:	ldr	x0, [x19, #1488]
    4684:	sub	x9, x0, #0x1
    4688:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    468c:	tst	x0, x9
    4690:	str	x0, [x8, #1496]
    4694:	b.ne	46b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc7c>  // b.any
    4698:	ldr	x8, [x19, #1488]
    469c:	sub	x9, x8, #0x1
    46a0:	tst	x8, x9
    46a4:	b.ne	46b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc7c>  // b.any
    46a8:	ldp	x20, x19, [sp, #32]
    46ac:	ldr	x21, [sp, #16]
    46b0:	ldp	x29, x30, [sp], #48
    46b4:	ret
    46b8:	bl	1a90 <abort@plt>
    46bc:	sub	sp, sp, #0xd0
    46c0:	stp	x29, x30, [sp, #144]
    46c4:	stp	x24, x23, [sp, #160]
    46c8:	stp	x22, x21, [sp, #176]
    46cc:	stp	x20, x19, [sp, #192]
    46d0:	add	x29, sp, #0x90
    46d4:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    46d8:	ldr	w8, [x23, #376]
    46dc:	mov	x19, x0
    46e0:	cmn	w8, #0x1
    46e4:	b.ne	47cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd90>  // b.any
    46e8:	adrp	x24, 17000 <memcpy@GLIBC_2.17>
    46ec:	ldr	w8, [x24, #380]
    46f0:	tbnz	w8, #31, 46fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc0>
    46f4:	cbnz	w8, 47cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd90>
    46f8:	b	4834 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf8>
    46fc:	adrp	x0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4700:	add	x0, x0, #0xd20
    4704:	add	x1, sp, #0x18
    4708:	stp	xzr, xzr, [sp, #8]
    470c:	bl	19c0 <statfs@plt>
    4710:	tbnz	w0, #31, 4728 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcec>
    4714:	ldr	w8, [sp, #24]
    4718:	mov	w9, #0xff8c                	// #65420
    471c:	movk	w9, #0xf97c, lsl #16
    4720:	cmp	w8, w9
    4724:	b.eq	47a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd6c>  // b.none
    4728:	adrp	x0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    472c:	adrp	x1, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4730:	add	x0, x0, #0xd29
    4734:	add	x1, x1, #0xd36
    4738:	bl	19e0 <fopen@plt>
    473c:	cbz	x0, 47c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd84>
    4740:	adrp	x21, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4744:	mov	x20, x0
    4748:	add	x21, x21, #0xd38
    474c:	add	x0, sp, #0x10
    4750:	add	x1, sp, #0x8
    4754:	mov	x2, x20
    4758:	bl	1ad0 <getline@plt>
    475c:	ldr	x22, [sp, #16]
    4760:	tbnz	x0, #63, 47b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd74>
    4764:	mov	w1, #0x20                  	// #32
    4768:	mov	x0, x22
    476c:	bl	1b30 <strchr@plt>
    4770:	cbz	x0, 47b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd74>
    4774:	add	x0, x0, #0x1
    4778:	mov	w1, #0x20                  	// #32
    477c:	bl	1b30 <strchr@plt>
    4780:	cbz	x0, 47b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd74>
    4784:	add	x0, x0, #0x1
    4788:	mov	w2, #0xa                   	// #10
    478c:	mov	x1, x21
    4790:	bl	1a00 <strncmp@plt>
    4794:	cbnz	w0, 474c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd10>
    4798:	mov	x0, x22
    479c:	bl	1ae0 <free@plt>
    47a0:	mov	x0, x20
    47a4:	bl	19d0 <fclose@plt>
    47a8:	mov	w8, #0x1                   	// #1
    47ac:	b	47c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd88>
    47b0:	mov	x0, x22
    47b4:	bl	1ae0 <free@plt>
    47b8:	mov	x0, x20
    47bc:	bl	19d0 <fclose@plt>
    47c0:	mov	w8, wzr
    47c4:	str	w8, [x24, #380]
    47c8:	cbz	w8, 4834 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf8>
    47cc:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    47d0:	ldr	x8, [x8, #1392]
    47d4:	cbz	x8, 47f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdb8>
    47d8:	ldr	w8, [x23, #376]
    47dc:	cmn	w8, #0x1
    47e0:	b.eq	47f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdb8>  // b.none
    47e4:	mov	x0, x19
    47e8:	bl	487c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe40>
    47ec:	mov	x20, x0
    47f0:	b	4818 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xddc>
    47f4:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    47f8:	add	x21, x21, #0x578
    47fc:	mov	x0, x21
    4800:	bl	1bc0 <pthread_mutex_lock@plt>
    4804:	mov	x0, x19
    4808:	bl	487c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe40>
    480c:	mov	x20, x0
    4810:	mov	x0, x21
    4814:	bl	1bd0 <pthread_mutex_unlock@plt>
    4818:	mov	x0, x20
    481c:	ldp	x20, x19, [sp, #192]
    4820:	ldp	x22, x21, [sp, #176]
    4824:	ldp	x24, x23, [sp, #160]
    4828:	ldp	x29, x30, [sp, #144]
    482c:	add	sp, sp, #0xd0
    4830:	ret
    4834:	mov	w2, #0x7                   	// #7
    4838:	mov	w3, #0x22                  	// #34
    483c:	mov	w4, #0xffffffff            	// #-1
    4840:	mov	x0, xzr
    4844:	mov	x1, x19
    4848:	mov	x5, xzr
    484c:	bl	1ac0 <mmap@plt>
    4850:	mov	x20, x0
    4854:	cmn	x0, #0x1
    4858:	b.ne	4818 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xddc>  // b.any
    485c:	bl	1b90 <__errno_location@plt>
    4860:	ldr	w8, [x0]
    4864:	cmp	w8, #0xd
    4868:	b.eq	47cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd90>  // b.none
    486c:	cmp	w8, #0x1
    4870:	b.eq	47cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd90>  // b.none
    4874:	mov	x20, #0xffffffffffffffff    	// #-1
    4878:	b	4818 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xddc>
    487c:	stp	x29, x30, [sp, #-80]!
    4880:	stp	x26, x25, [sp, #16]
    4884:	stp	x24, x23, [sp, #32]
    4888:	stp	x22, x21, [sp, #48]
    488c:	stp	x20, x19, [sp, #64]
    4890:	mov	x29, sp
    4894:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    4898:	ldr	w22, [x23, #376]
    489c:	adrp	x25, 16000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10330>
    48a0:	mov	x19, x0
    48a4:	add	x25, x25, #0xd18
    48a8:	cmn	w22, #0x1
    48ac:	adrp	x24, 17000 <memcpy@GLIBC_2.17>
    48b0:	b.eq	48bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe80>  // b.none
    48b4:	mov	w20, #0x22                  	// #34
    48b8:	b	4944 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf08>
    48bc:	mov	w8, wzr
    48c0:	mov	w20, #0x22                  	// #34
    48c4:	str	wzr, [x24, #1448]
    48c8:	mov	w21, #0x18                  	// #24
    48cc:	smaddl	x8, w8, w21, x25
    48d0:	ldp	x9, x0, [x8]
    48d4:	blr	x9
    48d8:	ldr	w8, [x24, #1448]
    48dc:	mov	w22, w0
    48e0:	cmn	w0, #0x1
    48e4:	sxtw	x9, w8
    48e8:	sub	x10, x9, #0x5
    48ec:	b.eq	48f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xebc>  // b.none
    48f0:	cmp	x10, #0x1
    48f4:	b.ls	4940 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf04>  // b.plast
    48f8:	cmp	x10, #0x1
    48fc:	b.hi	4914 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed8>  // b.pmore
    4900:	mul	x8, x9, x21
    4904:	ldr	x8, [x25, x8]
    4908:	mov	x0, xzr
    490c:	blr	x8
    4910:	ldr	w8, [x24, #1448]
    4914:	add	w9, w8, #0x1
    4918:	cmp	w9, #0x7
    491c:	csinc	w8, wzr, w8, eq  // eq = none
    4920:	str	w8, [x24, #1448]
    4924:	b.eq	4930 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xef4>  // b.none
    4928:	cmn	w22, #0x1
    492c:	b.eq	48cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe90>  // b.none
    4930:	cmn	w22, #0x1
    4934:	str	w22, [x23, #376]
    4938:	b.ne	4944 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf08>  // b.any
    493c:	b	4a38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xffc>
    4940:	str	w22, [x23, #376]
    4944:	adrp	x26, 17000 <memcpy@GLIBC_2.17>
    4948:	ldr	x21, [x26, #1392]
    494c:	mov	w0, w22
    4950:	mov	x1, x19
    4954:	bl	4a54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1018>
    4958:	cbnz	w0, 4a38 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xffc>
    495c:	ldr	w4, [x23, #376]
    4960:	mov	w8, #0xffffffdc            	// #-36
    4964:	and	w8, w20, w8
    4968:	orr	w20, w8, #0x1
    496c:	mov	w2, #0x5                   	// #5
    4970:	mov	x0, xzr
    4974:	mov	x1, x19
    4978:	mov	w3, w20
    497c:	mov	x5, x21
    4980:	bl	1ac0 <mmap@plt>
    4984:	cmn	x0, #0x1
    4988:	b.ne	49a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf64>  // b.any
    498c:	ldr	w0, [x23, #376]
    4990:	cbnz	x21, 4a30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xff4>
    4994:	bl	1a60 <close@plt>
    4998:	ldr	w8, [x24, #1448]
    499c:	b	48c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe8c>
    49a0:	mov	x22, x0
    49a4:	cbnz	x21, 49e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfa4>
    49a8:	ldrsw	x8, [x24, #1448]
    49ac:	sub	x9, x8, #0x5
    49b0:	cmp	x9, #0x1
    49b4:	b.hi	49e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfa4>  // b.pmore
    49b8:	mov	w9, #0x18                  	// #24
    49bc:	mul	x8, x8, x9
    49c0:	ldr	x8, [x25, x8]
    49c4:	mov	x0, xzr
    49c8:	blr	x8
    49cc:	ldr	w8, [x24, #1448]
    49d0:	add	w9, w8, #0x1
    49d4:	cmp	w9, #0x7
    49d8:	csinc	w8, wzr, w8, eq  // eq = none
    49dc:	str	w8, [x24, #1448]
    49e0:	ldr	w4, [x23, #376]
    49e4:	mov	w2, #0x3                   	// #3
    49e8:	mov	x0, xzr
    49ec:	mov	x1, x19
    49f0:	mov	w3, w20
    49f4:	mov	x5, x21
    49f8:	bl	1ac0 <mmap@plt>
    49fc:	cmn	x0, #0x1
    4a00:	b.eq	4a20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfe4>  // b.none
    4a04:	sub	x8, x22, x0
    4a08:	add	x9, x0, x19
    4a0c:	stur	x8, [x9, #-8]
    4a10:	ldr	x8, [x26, #1392]
    4a14:	add	x8, x8, x19
    4a18:	str	x8, [x26, #1392]
    4a1c:	b	4a3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1000>
    4a20:	mov	x0, x22
    4a24:	mov	x1, x19
    4a28:	bl	1b40 <munmap@plt>
    4a2c:	ldr	w0, [x23, #376]
    4a30:	mov	x1, x21
    4a34:	bl	1b80 <ftruncate@plt>
    4a38:	mov	x0, #0xffffffffffffffff    	// #-1
    4a3c:	ldp	x20, x19, [sp, #64]
    4a40:	ldp	x22, x21, [sp, #48]
    4a44:	ldp	x24, x23, [sp, #32]
    4a48:	ldp	x26, x25, [sp, #16]
    4a4c:	ldp	x29, x30, [sp], #80
    4a50:	ret
    4a54:	stp	x29, x30, [sp, #-64]!
    4a58:	str	x23, [sp, #16]
    4a5c:	stp	x22, x21, [sp, #32]
    4a60:	stp	x20, x19, [sp, #48]
    4a64:	mov	x29, sp
    4a68:	adrp	x23, 17000 <memcpy@GLIBC_2.17>
    4a6c:	ldr	x2, [x23, #1456]
    4a70:	mov	x19, x1
    4a74:	mov	w20, w0
    4a78:	cbnz	x2, 4a8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1050>
    4a7c:	mov	w0, #0x1e                  	// #30
    4a80:	bl	1b60 <sysconf@plt>
    4a84:	mov	x2, x0
    4a88:	str	x0, [x23, #1456]
    4a8c:	add	x9, x2, #0xf
    4a90:	mov	x8, sp
    4a94:	and	x9, x9, #0xfffffffffffffff0
    4a98:	sub	x21, x8, x9
    4a9c:	mov	sp, x21
    4aa0:	mov	x0, x21
    4aa4:	mov	w1, wzr
    4aa8:	bl	1a10 <memset@plt>
    4aac:	cmp	x19, #0x1
    4ab0:	b.lt	4aec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10b0>  // b.tstop
    4ab4:	ldr	x8, [x23, #1456]
    4ab8:	mov	w0, w20
    4abc:	mov	x1, x21
    4ac0:	cmp	x19, x8
    4ac4:	csel	x22, x19, x8, cc  // cc = lo, ul, last
    4ac8:	mov	x2, x22
    4acc:	bl	1a80 <write@plt>
    4ad0:	cmp	x0, x22
    4ad4:	csel	x8, xzr, x22, lt  // lt = tstop
    4ad8:	cmp	x0, x22
    4adc:	sub	x19, x19, x8
    4ae0:	b.ge	4aac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1070>  // b.tcont
    4ae4:	mov	w0, #0xffffffff            	// #-1
    4ae8:	b	4af0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10b4>
    4aec:	mov	w0, wzr
    4af0:	mov	sp, x29
    4af4:	ldp	x20, x19, [sp, #48]
    4af8:	ldp	x22, x21, [sp, #32]
    4afc:	ldr	x23, [sp, #16]
    4b00:	ldp	x29, x30, [sp], #64
    4b04:	ret
    4b08:	stp	x29, x30, [sp, #-16]!
    4b0c:	mov	x29, sp
    4b10:	bl	1ba0 <getenv@plt>
    4b14:	cbz	x0, 4b20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10e4>
    4b18:	ldp	x29, x30, [sp], #16
    4b1c:	b	4b2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10f0>
    4b20:	mov	w0, #0xffffffff            	// #-1
    4b24:	ldp	x29, x30, [sp], #16
    4b28:	ret
    4b2c:	stp	x29, x30, [sp, #-48]!
    4b30:	str	x21, [sp, #16]
    4b34:	stp	x20, x19, [sp, #32]
    4b38:	mov	x29, sp
    4b3c:	mov	w1, #0x4082                	// #16514
    4b40:	movk	w1, #0x48, lsl #16
    4b44:	mov	w2, #0x1c0                 	// #448
    4b48:	mov	x19, x0
    4b4c:	bl	19f0 <open@plt>
    4b50:	mov	w21, w0
    4b54:	cmn	w0, #0x1
    4b58:	b.ne	4bf4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11b8>  // b.any
    4b5c:	bl	1b90 <__errno_location@plt>
    4b60:	ldr	w8, [x0]
    4b64:	sub	w9, w8, #0x15
    4b68:	cmp	w9, #0x2
    4b6c:	b.cc	4b78 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x113c>  // b.lo, b.ul, b.last
    4b70:	cmp	w8, #0x5f
    4b74:	b.ne	4bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11b4>  // b.any
    4b78:	str	wzr, [x0]
    4b7c:	mov	x0, x19
    4b80:	bl	1990 <strlen@plt>
    4b84:	sxtw	x2, w0
    4b88:	add	x9, x2, #0x1a
    4b8c:	mov	x8, sp
    4b90:	and	x9, x9, #0xfffffffffffffff0
    4b94:	mov	x21, x0
    4b98:	sub	x20, x8, x9
    4b9c:	mov	sp, x20
    4ba0:	mov	x0, x20
    4ba4:	mov	x1, x19
    4ba8:	bl	1970 <memcpy@plt>
    4bac:	adrp	x8, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4bb0:	add	x8, x8, #0xd6b
    4bb4:	ldr	x8, [x8]
    4bb8:	mov	w10, #0x5858                	// #22616
    4bbc:	add	x9, x20, w21, sxtw
    4bc0:	movk	w10, #0x58, lsl #16
    4bc4:	mov	w1, #0x80000               	// #524288
    4bc8:	mov	x0, x20
    4bcc:	stur	w10, [x9, #7]
    4bd0:	str	x8, [x9]
    4bd4:	bl	1aa0 <mkostemp@plt>
    4bd8:	mov	w21, w0
    4bdc:	cmn	w0, #0x1
    4be0:	b.eq	4bf4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11b8>  // b.none
    4be4:	mov	x0, x20
    4be8:	bl	1be0 <unlink@plt>
    4bec:	b	4bf4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11b8>
    4bf0:	mov	w21, #0xffffffff            	// #-1
    4bf4:	mov	w0, w21
    4bf8:	mov	sp, x29
    4bfc:	ldp	x20, x19, [sp, #32]
    4c00:	ldr	x21, [sp, #16]
    4c04:	ldp	x29, x30, [sp], #48
    4c08:	ret
    4c0c:	stp	x29, x30, [sp, #-48]!
    4c10:	stp	x28, x21, [sp, #16]
    4c14:	stp	x20, x19, [sp, #32]
    4c18:	mov	x29, sp
    4c1c:	sub	sp, sp, #0x3, lsl #12
    4c20:	sub	sp, sp, #0x30
    4c24:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    4c28:	ldr	x9, [x20, #1464]
    4c2c:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    4c30:	ldr	x8, [x21, #1472]
    4c34:	cmp	x9, x0
    4c38:	b.eq	4c6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1230>  // b.none
    4c3c:	mov	x19, x0
    4c40:	cbz	x8, 4c4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1210>
    4c44:	mov	x0, x8
    4c48:	bl	1a40 <endmntent@plt>
    4c4c:	str	x19, [x20, #1464]
    4c50:	cbz	x19, 4cf4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12b8>
    4c54:	adrp	x1, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4c58:	add	x1, x1, #0xd36
    4c5c:	mov	x0, x19
    4c60:	bl	1a30 <setmntent@plt>
    4c64:	mov	x8, x0
    4c68:	str	x0, [x21, #1472]
    4c6c:	cbz	x8, 4cf8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12bc>
    4c70:	sub	x1, x29, #0x28
    4c74:	add	x2, sp, #0x8
    4c78:	mov	w3, #0x3000                	// #12288
    4c7c:	mov	x0, x8
    4c80:	bl	1b70 <getmntent_r@plt>
    4c84:	cbz	x0, 4cf8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12bc>
    4c88:	adrp	x19, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4c8c:	adrp	x20, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4c90:	add	x19, x19, #0xd76
    4c94:	add	x20, x20, #0xd79
    4c98:	sub	x0, x29, #0x28
    4c9c:	mov	x1, x19
    4ca0:	bl	1b20 <hasmntopt@plt>
    4ca4:	cbnz	x0, 4cd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x129c>
    4ca8:	sub	x0, x29, #0x28
    4cac:	mov	x1, x20
    4cb0:	bl	1b20 <hasmntopt@plt>
    4cb4:	cbnz	x0, 4cd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x129c>
    4cb8:	ldur	x0, [x29, #-32]
    4cbc:	mov	w1, #0x2                   	// #2
    4cc0:	bl	1ab0 <access@plt>
    4cc4:	cbnz	w0, 4cd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x129c>
    4cc8:	ldur	x0, [x29, #-32]
    4ccc:	bl	4b2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10f0>
    4cd0:	cmn	w0, #0x1
    4cd4:	b.ne	4cfc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12c0>  // b.any
    4cd8:	ldr	x0, [x21, #1472]
    4cdc:	sub	x1, x29, #0x28
    4ce0:	add	x2, sp, #0x8
    4ce4:	mov	w3, #0x3000                	// #12288
    4ce8:	bl	1b70 <getmntent_r@plt>
    4cec:	cbnz	x0, 4c98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x125c>
    4cf0:	b	4cf8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12bc>
    4cf4:	str	xzr, [x21, #1472]
    4cf8:	mov	w0, #0xffffffff            	// #-1
    4cfc:	add	sp, sp, #0x3, lsl #12
    4d00:	add	sp, sp, #0x30
    4d04:	ldp	x20, x19, [sp, #32]
    4d08:	ldp	x28, x21, [sp, #16]
    4d0c:	ldp	x29, x30, [sp], #48
    4d10:	ret
    4d14:	stp	x29, x30, [sp, #-32]!
    4d18:	adrp	x8, 17000 <memcpy@GLIBC_2.17>
    4d1c:	stp	x20, x19, [sp, #16]
    4d20:	mov	x19, x1
    4d24:	mov	x20, x0
    4d28:	add	x8, x8, #0x520
    4d2c:	mov	x29, sp
    4d30:	ldr	x9, [x8]
    4d34:	cmp	x9, x20
    4d38:	b.hi	4d4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1310>  // b.pmore
    4d3c:	ldr	x10, [x8, #8]
    4d40:	add	x9, x9, x10
    4d44:	cmp	x9, x20
    4d48:	b.hi	4d68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x132c>  // b.pmore
    4d4c:	ldr	x8, [x8, #16]
    4d50:	cbnz	x8, 4d30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12f4>
    4d54:	mov	x0, x20
    4d58:	mov	x1, x19
    4d5c:	ldp	x20, x19, [sp, #16]
    4d60:	ldp	x29, x30, [sp], #32
    4d64:	b	1b40 <munmap@plt>
    4d68:	ldr	x8, [x8, #24]
    4d6c:	cbz	x8, 4d54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1318>
    4d70:	add	x0, x20, x8
    4d74:	mov	x1, x19
    4d78:	bl	1b40 <munmap@plt>
    4d7c:	cbz	w0, 4d54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1318>
    4d80:	ldp	x20, x19, [sp, #16]
    4d84:	ldp	x29, x30, [sp], #32
    4d88:	ret
    4d8c:	stp	x29, x30, [sp, #-64]!
    4d90:	stp	x22, x21, [sp, #32]
    4d94:	stp	x20, x19, [sp, #48]
    4d98:	ldr	x21, [x0, #16]
    4d9c:	str	x23, [sp, #16]
    4da0:	mov	x29, sp
    4da4:	ldrh	w8, [x21, #10]
    4da8:	cmp	w8, #0xf
    4dac:	b.hi	4eac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1470>  // b.pmore
    4db0:	ldr	w22, [x0, #24]
    4db4:	adrp	x9, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4db8:	add	x9, x9, #0xd80
    4dbc:	adr	x10, 4dd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1398>
    4dc0:	ldrb	w11, [x9, x8]
    4dc4:	add	x10, x10, x11, lsl #2
    4dc8:	mov	x19, x0
    4dcc:	mov	w20, wzr
    4dd0:	br	x10
    4dd4:	mov	x0, x21
    4dd8:	bl	4eb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1474>
    4ddc:	cbz	w0, 4df0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13b4>
    4de0:	mov	w20, w0
    4de4:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4de8:	mov	w20, #0x1e                  	// #30
    4dec:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4df0:	ldr	x8, [x21]
    4df4:	cmp	x8, #0x11
    4df8:	b.cc	4e30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13f4>  // b.lo, b.ul, b.last
    4dfc:	add	w22, w22, #0x8
    4e00:	mov	w20, #0x20                  	// #32
    4e04:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4e08:	mov	w20, #0x1c                  	// #28
    4e0c:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4e10:	mov	w20, #0x14                  	// #20
    4e14:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4e18:	mov	w20, #0x1a                  	// #26
    4e1c:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4e20:	mov	w20, #0x18                  	// #24
    4e24:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4e28:	mov	w20, #0x16                  	// #22
    4e2c:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4e30:	cmp	x8, #0x10
    4e34:	b.eq	4e9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1460>  // b.none
    4e38:	cmp	x8, #0x8
    4e3c:	b.ne	4ea4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1468>  // b.any
    4e40:	mov	w20, #0x1                   	// #1
    4e44:	ldr	w21, [x19, #4]
    4e48:	cmp	w21, #0x1
    4e4c:	b.lt	4e74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1438>  // b.tstop
    4e50:	ldr	x23, [x19, #8]
    4e54:	ldr	x0, [x23]
    4e58:	bl	4eb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1474>
    4e5c:	cbnz	w0, 4e70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1434>
    4e60:	subs	x21, x21, #0x1
    4e64:	add	x23, x23, #0x8
    4e68:	b.ne	4e54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1418>  // b.any
    4e6c:	b	4e74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1438>
    4e70:	orr	w20, w20, #0x80
    4e74:	sub	w8, w22, #0x1
    4e78:	orr	w8, w8, #0xf
    4e7c:	add	w8, w8, #0x1
    4e80:	stp	w8, w20, [x19, #24]
    4e84:	ldp	x20, x19, [sp, #48]
    4e88:	ldp	x22, x21, [sp, #32]
    4e8c:	ldr	x23, [sp, #16]
    4e90:	mov	w0, wzr
    4e94:	ldp	x29, x30, [sp], #64
    4e98:	ret
    4e9c:	mov	w20, #0x2                   	// #2
    4ea0:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4ea4:	mov	w20, #0x42                  	// #66
    4ea8:	b	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1408>
    4eac:	bl	1a90 <abort@plt>
    4eb0:	stp	x29, x30, [sp, #-64]!
    4eb4:	stp	x24, x23, [sp, #16]
    4eb8:	stp	x22, x21, [sp, #32]
    4ebc:	stp	x20, x19, [sp, #48]
    4ec0:	ldrh	w19, [x0, #10]
    4ec4:	mov	x29, sp
    4ec8:	sub	w8, w19, #0x2
    4ecc:	cmp	w8, #0x3
    4ed0:	b.cs	4ee8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ac>  // b.hs, b.nlast
    4ed4:	mov	w23, #0x1                   	// #1
    4ed8:	lsl	w8, w19, #2
    4edc:	sub	w8, w8, w23
    4ee0:	add	w0, w8, #0x4
    4ee4:	b	4f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14f0>
    4ee8:	cmp	w19, #0xd
    4eec:	b.eq	4f18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14dc>  // b.none
    4ef0:	cmp	w19, #0xf
    4ef4:	b.ne	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.any
    4ef8:	ldr	x8, [x0, #16]
    4efc:	ldr	x8, [x8]
    4f00:	ldrh	w19, [x8, #10]
    4f04:	sub	w8, w19, #0x2
    4f08:	cmp	w8, #0x3
    4f0c:	b.cs	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.hs, b.nlast
    4f10:	mov	w23, #0x2                   	// #2
    4f14:	b	4ed8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x149c>
    4f18:	ldr	x23, [x0]
    4f1c:	sub	x8, x23, #0x4
    4f20:	cmp	x8, #0x3c
    4f24:	b.ls	4f40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1504>  // b.plast
    4f28:	mov	w0, wzr
    4f2c:	ldp	x20, x19, [sp, #48]
    4f30:	ldp	x22, x21, [sp, #32]
    4f34:	ldp	x24, x23, [sp, #16]
    4f38:	ldp	x29, x30, [sp], #64
    4f3c:	ret
    4f40:	ldr	x22, [x0, #16]
    4f44:	ldr	x20, [x22]
    4f48:	ldrh	w21, [x20, #10]
    4f4c:	orr	w8, w21, #0x2
    4f50:	cmp	w8, #0xf
    4f54:	mov	w19, w21
    4f58:	b.ne	4f80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1544>  // b.any
    4f5c:	mov	x0, x20
    4f60:	bl	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x30c>
    4f64:	mov	w19, w0
    4f68:	tbz	w0, #31, 4f80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1544>
    4f6c:	add	x24, x22, #0x8
    4f70:	ldr	x0, [x24], #8
    4f74:	bl	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x30c>
    4f78:	tbnz	w0, #31, 4f70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1534>
    4f7c:	mov	w19, w0
    4f80:	cmp	w19, #0x4
    4f84:	b.eq	4fa8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x156c>  // b.none
    4f88:	cmp	w19, #0x3
    4f8c:	b.eq	4fb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x157c>  // b.none
    4f90:	cmp	w19, #0x2
    4f94:	b.ne	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.any
    4f98:	tst	x23, #0x3
    4f9c:	b.ne	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.any
    4fa0:	lsr	x23, x23, #2
    4fa4:	b	4fc4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1588>
    4fa8:	tst	x23, #0xf
    4fac:	b.ne	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.any
    4fb0:	lsr	x23, x23, #4
    4fb4:	b	4fc4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1588>
    4fb8:	tst	x23, #0x7
    4fbc:	b.ne	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.any
    4fc0:	lsr	x23, x23, #3
    4fc4:	cmp	x23, #0x4
    4fc8:	b.hi	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.pmore
    4fcc:	cbz	x20, 4ed8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x149c>
    4fd0:	orr	w8, w21, #0x2
    4fd4:	and	w8, w8, #0xffff
    4fd8:	add	x22, x22, #0x8
    4fdc:	cmp	w8, #0xf
    4fe0:	b.ne	4ff8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15bc>  // b.any
    4fe4:	mov	x0, x20
    4fe8:	mov	w1, w19
    4fec:	bl	5770 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x364>
    4ff0:	cbnz	w0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    4ff4:	b	4f2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14f0>
    4ff8:	cmp	w19, w21, uxth
    4ffc:	b.ne	4f28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14ec>  // b.any
    5000:	ldr	x20, [x22]
    5004:	cbz	x20, 4ed8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x149c>
    5008:	ldrh	w21, [x20, #10]
    500c:	b	4fd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1594>

0000000000005010 <ffi_call@@LIBFFI_BASE_7.0>:
    5010:	mov	x4, xzr
    5014:	b	5018 <ffi_call@@LIBFFI_BASE_7.0+0x8>
    5018:	stp	x29, x30, [sp, #-96]!
    501c:	stp	x28, x27, [sp, #16]
    5020:	stp	x26, x25, [sp, #32]
    5024:	stp	x24, x23, [sp, #48]
    5028:	stp	x22, x21, [sp, #64]
    502c:	stp	x20, x19, [sp, #80]
    5030:	mov	x29, sp
    5034:	sub	sp, sp, #0x60
    5038:	ldr	x8, [x0, #16]
    503c:	mov	x23, x3
    5040:	mov	x25, x0
    5044:	ldr	x9, [x8]
    5048:	ldp	w8, w10, [x0, #24]
    504c:	stur	x4, [x29, #-40]
    5050:	stur	x1, [x29, #-56]
    5054:	stur	x9, [x29, #-88]
    5058:	tbnz	w10, #5, 506c <ffi_call@@LIBFFI_BASE_7.0+0x5c>
    505c:	cbz	x2, 507c <ffi_call@@LIBFFI_BASE_7.0+0x6c>
    5060:	lsr	x9, x10, #2
    5064:	and	x9, x9, #0x10
    5068:	b	5084 <ffi_call@@LIBFFI_BASE_7.0+0x74>
    506c:	cmp	x2, #0x0
    5070:	stur	x10, [x29, #-48]
    5074:	csel	x9, x9, xzr, eq  // eq = none
    5078:	b	5088 <ffi_call@@LIBFFI_BASE_7.0+0x78>
    507c:	and	w10, w10, #0x80
    5080:	mov	x9, xzr
    5084:	stur	x10, [x29, #-48]
    5088:	add	x10, x8, x9
    508c:	add	x10, x10, #0xef
    5090:	and	x10, x10, #0xfffffffffffffff0
    5094:	mov	x11, sp
    5098:	sub	x10, x11, x10
    509c:	mov	sp, x10
    50a0:	stur	x10, [x29, #-32]
    50a4:	add	x11, x10, #0xc0
    50a8:	ldr	w10, [x25, #4]
    50ac:	add	x8, x11, x8
    50b0:	stp	x2, x8, [x29, #-80]
    50b4:	add	x8, x8, #0x20
    50b8:	cmp	x9, #0x0
    50bc:	csel	x8, x2, x8, eq  // eq = none
    50c0:	cmp	w10, #0x1
    50c4:	stur	x11, [x29, #-8]
    50c8:	stur	x8, [x29, #-64]
    50cc:	b.lt	5324 <ffi_call@@LIBFFI_BASE_7.0+0x314>  // b.tstop
    50d0:	ldur	x8, [x29, #-32]
    50d4:	adrp	x26, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    50d8:	mov	x19, xzr
    50dc:	mov	x28, xzr
    50e0:	mov	w27, wzr
    50e4:	add	x8, x8, #0x80
    50e8:	lsl	x22, x10, #3
    50ec:	add	x26, x26, #0xd90
    50f0:	stp	x8, xzr, [x29, #-24]
    50f4:	ldr	x8, [x25, #8]
    50f8:	ldr	x24, [x8, x19]
    50fc:	ldrh	w8, [x24, #10]
    5100:	cmp	w8, #0xf
    5104:	b.hi	536c <ffi_call@@LIBFFI_BASE_7.0+0x35c>  // b.pmore
    5108:	ldr	x20, [x24]
    510c:	ldr	x21, [x23, x19]
    5110:	adr	x9, 5120 <ffi_call@@LIBFFI_BASE_7.0+0x110>
    5114:	ldrb	w10, [x26, x8]
    5118:	add	x9, x9, x10, lsl #2
    511c:	br	x9
    5120:	mov	x0, x24
    5124:	bl	4eb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1474>
    5128:	cbz	w0, 5210 <ffi_call@@LIBFFI_BASE_7.0+0x200>
    512c:	ldur	x10, [x29, #-16]
    5130:	and	w8, w0, #0x3
    5134:	sub	w8, w10, w8
    5138:	add	w8, w8, #0x4
    513c:	cmp	w8, #0x9
    5140:	b.cs	5228 <ffi_call@@LIBFFI_BASE_7.0+0x218>  // b.hs, b.nlast
    5144:	ldur	x9, [x29, #-32]
    5148:	mov	w11, #0xc                   	// #12
    514c:	add	x9, x9, w10, uxtw #4
    5150:	sub	w10, w0, #0x8
    5154:	smull	x10, w10, w11
    5158:	adr	x11, 5164 <ffi_call@@LIBFFI_BASE_7.0+0x154>
    515c:	add	x11, x11, x10
    5160:	br	x11
    5164:	ldp	s16, s17, [x21]
    5168:	ldp	s18, s19, [x21, #8]
    516c:	b	51f0 <ffi_call@@LIBFFI_BASE_7.0+0x1e0>
    5170:	ldp	s16, s17, [x21]
    5174:	ldr	s18, [x21, #8]
    5178:	b	51f4 <ffi_call@@LIBFFI_BASE_7.0+0x1e4>
    517c:	ldp	s16, s17, [x21]
    5180:	b	51f8 <ffi_call@@LIBFFI_BASE_7.0+0x1e8>
    5184:	nop
    5188:	ldr	s16, [x21]
    518c:	b	51fc <ffi_call@@LIBFFI_BASE_7.0+0x1ec>
    5190:	nop
    5194:	ldp	d16, d17, [x21]
    5198:	ldp	d18, d19, [x21, #16]
    519c:	b	51f0 <ffi_call@@LIBFFI_BASE_7.0+0x1e0>
    51a0:	ldp	d16, d17, [x21]
    51a4:	ldr	d18, [x21, #16]
    51a8:	b	51f4 <ffi_call@@LIBFFI_BASE_7.0+0x1e4>
    51ac:	ldp	d16, d17, [x21]
    51b0:	b	51f8 <ffi_call@@LIBFFI_BASE_7.0+0x1e8>
    51b4:	nop
    51b8:	ldr	d16, [x21]
    51bc:	b	51fc <ffi_call@@LIBFFI_BASE_7.0+0x1ec>
    51c0:	nop
    51c4:	ldp	q16, q17, [x21]
    51c8:	ldp	q18, q19, [x21, #32]
    51cc:	b	51f0 <ffi_call@@LIBFFI_BASE_7.0+0x1e0>
    51d0:	ldp	q16, q17, [x21]
    51d4:	ldr	q18, [x21, #32]
    51d8:	b	51f4 <ffi_call@@LIBFFI_BASE_7.0+0x1e4>
    51dc:	ldp	q16, q17, [x21]
    51e0:	b	51f8 <ffi_call@@LIBFFI_BASE_7.0+0x1e8>
    51e4:	nop
    51e8:	ldr	q16, [x21]
    51ec:	b	51fc <ffi_call@@LIBFFI_BASE_7.0+0x1ec>
    51f0:	str	q19, [x9, #48]
    51f4:	str	q18, [x9, #32]
    51f8:	str	q17, [x9, #16]
    51fc:	str	q16, [x9]
    5200:	stur	x8, [x29, #-16]
    5204:	b	5318 <ffi_call@@LIBFFI_BASE_7.0+0x308>
    5208:	ldrsw	x8, [x21]
    520c:	b	526c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5210:	cmp	x20, #0x10
    5214:	b.ls	52b8 <ffi_call@@LIBFFI_BASE_7.0+0x2a8>  // b.plast
    5218:	add	x21, x23, x19
    521c:	mov	w20, #0x8                   	// #8
    5220:	ldr	x8, [x21]
    5224:	b	526c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5228:	ldrh	w8, [x24, #8]
    522c:	mov	w11, #0x8                   	// #8
    5230:	mov	w10, #0x8                   	// #8
    5234:	sub	x9, x28, #0x1
    5238:	cmp	w8, #0x8
    523c:	stur	x10, [x29, #-16]
    5240:	csel	x8, x8, x11, hi  // hi = pmore
    5244:	b	52f4 <ffi_call@@LIBFFI_BASE_7.0+0x2e4>
    5248:	ldrsh	x8, [x21]
    524c:	b	526c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5250:	ldrb	w8, [x21]
    5254:	b	526c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5258:	ldrsb	x8, [x21]
    525c:	b	526c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5260:	ldr	w8, [x21]
    5264:	b	526c <ffi_call@@LIBFFI_BASE_7.0+0x25c>
    5268:	ldrh	w8, [x21]
    526c:	cmp	w27, #0x7
    5270:	b.hi	5288 <ffi_call@@LIBFFI_BASE_7.0+0x278>  // b.pmore
    5274:	ldur	x10, [x29, #-24]
    5278:	add	w9, w27, #0x1
    527c:	str	x8, [x10, w27, uxtw #3]
    5280:	mov	w27, w9
    5284:	b	5318 <ffi_call@@LIBFFI_BASE_7.0+0x308>
    5288:	ldrh	w9, [x24, #8]
    528c:	mov	w27, #0x8                   	// #8
    5290:	sub	x10, x28, #0x1
    5294:	cmp	w9, #0x8
    5298:	csel	x9, x9, x27, hi  // hi = pmore
    529c:	sub	x9, x9, #0x1
    52a0:	orr	x9, x9, x10
    52a4:	ldur	x10, [x29, #-8]
    52a8:	add	x9, x9, #0x1
    52ac:	add	x28, x9, x20
    52b0:	str	x8, [x10, x9]
    52b4:	b	5318 <ffi_call@@LIBFFI_BASE_7.0+0x308>
    52b8:	add	x8, x20, #0x7
    52bc:	lsr	x8, x8, #3
    52c0:	add	x9, x8, w27, uxtw
    52c4:	cmp	x9, #0x8
    52c8:	b.hi	52e0 <ffi_call@@LIBFFI_BASE_7.0+0x2d0>  // b.pmore
    52cc:	ldur	x10, [x29, #-24]
    52d0:	mov	w9, w27
    52d4:	add	w27, w27, w8
    52d8:	add	x0, x10, x9, lsl #3
    52dc:	b	530c <ffi_call@@LIBFFI_BASE_7.0+0x2fc>
    52e0:	ldrh	w8, [x24, #8]
    52e4:	mov	w27, #0x8                   	// #8
    52e8:	sub	x9, x28, #0x1
    52ec:	cmp	w8, #0x8
    52f0:	csel	x8, x8, x27, hi  // hi = pmore
    52f4:	sub	x8, x8, #0x1
    52f8:	orr	x8, x8, x9
    52fc:	ldur	x9, [x29, #-8]
    5300:	add	x8, x8, #0x1
    5304:	add	x28, x8, x20
    5308:	add	x0, x9, x8
    530c:	mov	x1, x21
    5310:	mov	x2, x20
    5314:	bl	1970 <memcpy@plt>
    5318:	add	x19, x19, #0x8
    531c:	cmp	x22, x19
    5320:	b.ne	50f4 <ffi_call@@LIBFFI_BASE_7.0+0xe4>  // b.any
    5324:	ldp	x1, x20, [x29, #-72]
    5328:	ldp	x2, x19, [x29, #-56]
    532c:	ldp	x5, x0, [x29, #-40]
    5330:	mov	x3, x20
    5334:	mov	w4, w19
    5338:	bl	57e0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d4>
    533c:	tbz	w19, #6, 534c <ffi_call@@LIBFFI_BASE_7.0+0x33c>
    5340:	ldp	x2, x0, [x29, #-88]
    5344:	mov	x1, x20
    5348:	bl	1970 <memcpy@plt>
    534c:	mov	sp, x29
    5350:	ldp	x20, x19, [sp, #80]
    5354:	ldp	x22, x21, [sp, #64]
    5358:	ldp	x24, x23, [sp, #48]
    535c:	ldp	x26, x25, [sp, #32]
    5360:	ldp	x28, x27, [sp, #16]
    5364:	ldp	x29, x30, [sp], #96
    5368:	ret
    536c:	bl	1a90 <abort@plt>

0000000000005370 <ffi_call_go@@LIBFFI_GO_CLOSURE_7.0>:
    5370:	b	5018 <ffi_call@@LIBFFI_BASE_7.0+0x8>

0000000000005374 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0>:
    5374:	stp	x29, x30, [sp, #-48]!
    5378:	stp	x22, x21, [sp, #16]
    537c:	stp	x20, x19, [sp, #32]
    5380:	mov	x29, sp
    5384:	ldr	w8, [x1]
    5388:	cmp	w8, #0x1
    538c:	b.ne	53f8 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x84>  // b.any
    5390:	ldr	w8, [x1, #28]
    5394:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    5398:	add	x10, x10, #0xda7
    539c:	ldr	q0, [x10]
    53a0:	adrp	x9, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    53a4:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    53a8:	add	x9, x9, #0x950
    53ac:	add	x10, x10, #0x970
    53b0:	tst	w8, #0x80
    53b4:	mov	x21, x1
    53b8:	csel	x8, x10, x9, eq  // eq = none
    53bc:	add	x1, x0, #0x18
    53c0:	mov	x19, x3
    53c4:	mov	x20, x2
    53c8:	mov	x22, x0
    53cc:	str	q0, [x0]
    53d0:	str	x8, [x0, #16]
    53d4:	bl	5b08 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6fc>
    53d8:	mov	x0, x22
    53dc:	bl	3a00 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14bc>
    53e0:	add	x1, x0, #0x18
    53e4:	bl	5b08 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6fc>
    53e8:	mov	w0, wzr
    53ec:	stp	x21, x20, [x22, #24]
    53f0:	str	x19, [x22, #40]
    53f4:	b	53fc <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x88>
    53f8:	mov	w0, #0x2                   	// #2
    53fc:	ldp	x20, x19, [sp, #32]
    5400:	ldp	x22, x21, [sp, #16]
    5404:	ldp	x29, x30, [sp], #48
    5408:	ret

000000000000540c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0>:
    540c:	ldr	w8, [x1]
    5410:	cmp	w8, #0x1
    5414:	b.ne	5448 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3c>  // b.any
    5418:	ldr	w9, [x1, #28]
    541c:	adrp	x10, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    5420:	adrp	x11, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    5424:	add	x10, x10, #0xac0
    5428:	add	x11, x11, #0xae0
    542c:	tst	w9, #0x80
    5430:	mov	x8, x0
    5434:	mov	w0, wzr
    5438:	csel	x9, x11, x10, eq  // eq = none
    543c:	stp	x9, x1, [x8]
    5440:	str	x2, [x8, #16]
    5444:	ret
    5448:	mov	w0, #0x2                   	// #2
    544c:	ret
    5450:	stp	x29, x30, [sp, #-96]!
    5454:	stp	x28, x27, [sp, #16]
    5458:	stp	x26, x25, [sp, #32]
    545c:	stp	x24, x23, [sp, #48]
    5460:	stp	x22, x21, [sp, #64]
    5464:	stp	x20, x19, [sp, #80]
    5468:	mov	x29, sp
    546c:	sub	sp, sp, #0x30
    5470:	stp	x5, x6, [x29, #-40]
    5474:	stp	x3, x4, [x29, #-16]
    5478:	ldr	w8, [x0, #4]
    547c:	mov	x9, sp
    5480:	mov	x23, x0
    5484:	stur	x2, [x29, #-24]
    5488:	lsl	x28, x8, #3
    548c:	add	x10, x28, #0xf
    5490:	and	x10, x10, #0xffffffff0
    5494:	sub	x26, x9, x10
    5498:	stur	x1, [x29, #-48]
    549c:	mov	sp, x26
    54a0:	cmp	w8, #0x1
    54a4:	b.lt	56cc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2c0>  // b.tstop
    54a8:	mov	x19, xzr
    54ac:	mov	x24, xzr
    54b0:	mov	w22, wzr
    54b4:	mov	w25, wzr
    54b8:	mov	w10, #0x1                   	// #1
    54bc:	mov	w21, #0x5fe2                	// #24546
    54c0:	ldr	x8, [x23, #8]
    54c4:	ldr	x27, [x8, x19]
    54c8:	ldrh	w8, [x27, #10]
    54cc:	cmp	w8, #0xf
    54d0:	b.hi	5714 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x308>  // b.pmore
    54d4:	ldr	x20, [x27]
    54d8:	lsl	w8, w10, w8
    54dc:	tst	w8, w21
    54e0:	b.eq	5504 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xf8>  // b.none
    54e4:	cmp	w25, #0x7
    54e8:	b.hi	5578 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x16c>  // b.pmore
    54ec:	ldur	x8, [x29, #-16]
    54f0:	add	w9, w25, #0x1
    54f4:	add	x8, x8, w25, uxtw #3
    54f8:	add	x8, x8, #0x80
    54fc:	mov	w25, w9
    5500:	b	55a0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x194>
    5504:	mov	w9, #0xa01c                	// #40988
    5508:	tst	w8, w9
    550c:	b.eq	5674 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x268>  // b.none
    5510:	mov	x0, x27
    5514:	bl	4eb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1474>
    5518:	cbz	w0, 55a8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x19c>
    551c:	and	w8, w0, #0x3
    5520:	mov	w9, #0x4                   	// #4
    5524:	sub	w9, w9, w8
    5528:	add	x8, x9, w22, uxtw
    552c:	cmp	x8, #0x8
    5530:	b.hi	55d4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c8>  // b.pmore
    5534:	ldur	x11, [x29, #-16]
    5538:	mov	w8, w22
    553c:	sub	w10, w0, #0x8
    5540:	cmp	w10, #0x6
    5544:	add	x8, x11, x8, lsl #4
    5548:	add	w22, w9, w22
    554c:	b.hi	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>  // b.pmore
    5550:	adrp	x12, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15c4>
    5554:	add	x12, x12, #0xda0
    5558:	adr	x9, 5568 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x15c>
    555c:	ldrb	w11, [x12, x10]
    5560:	add	x9, x9, x11, lsl #2
    5564:	br	x9
    5568:	ldp	q16, q17, [x8]
    556c:	ldp	q18, q19, [x8, #32]
    5570:	st4	{v16.s-v19.s}[0], [x8]
    5574:	b	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>
    5578:	cmp	x20, #0x8
    557c:	mov	w25, #0x8                   	// #8
    5580:	csel	x9, x20, x25, hi  // hi = pmore
    5584:	sub	x8, x24, #0x1
    5588:	sub	x9, x9, #0x1
    558c:	orr	x8, x9, x8
    5590:	ldur	x9, [x29, #-8]
    5594:	add	x8, x8, #0x1
    5598:	add	x24, x8, x20
    559c:	add	x8, x9, x8
    55a0:	str	x8, [x26, x19]
    55a4:	b	5674 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x268>
    55a8:	cmp	x20, #0x11
    55ac:	b.cc	55ec <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1e0>  // b.lo, b.ul, b.last
    55b0:	cmp	w25, #0x7
    55b4:	mov	w10, #0x1                   	// #1
    55b8:	b.hi	561c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x210>  // b.pmore
    55bc:	ldur	x8, [x29, #-16]
    55c0:	add	w9, w25, #0x1
    55c4:	add	x8, x8, w25, uxtw #3
    55c8:	add	x8, x8, #0x80
    55cc:	mov	w25, w9
    55d0:	b	5638 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x22c>
    55d4:	ldrh	w8, [x27, #8]
    55d8:	mov	w22, #0x8                   	// #8
    55dc:	sub	x9, x24, #0x1
    55e0:	cmp	w8, #0x8
    55e4:	csel	x8, x8, x22, hi  // hi = pmore
    55e8:	b	5654 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x248>
    55ec:	add	x8, x20, #0x7
    55f0:	lsr	x8, x8, #3
    55f4:	add	x9, x8, w25, uxtw
    55f8:	cmp	x9, #0x8
    55fc:	b.hi	5640 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x234>  // b.pmore
    5600:	ldur	x10, [x29, #-16]
    5604:	mov	w9, w25
    5608:	add	w25, w25, w8
    560c:	add	x9, x10, x9, lsl #3
    5610:	add	x9, x9, #0x80
    5614:	str	x9, [x26, x19]
    5618:	b	5670 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x264>
    561c:	ldur	x9, [x29, #-8]
    5620:	sub	x8, x24, #0x1
    5624:	orr	x8, x8, #0x7
    5628:	add	x24, x8, #0x9
    562c:	add	x9, x8, x9
    5630:	add	x8, x9, #0x1
    5634:	mov	w25, #0x8                   	// #8
    5638:	ldr	x8, [x8]
    563c:	b	55a0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x194>
    5640:	ldrh	w8, [x27, #8]
    5644:	mov	w25, #0x8                   	// #8
    5648:	sub	x9, x24, #0x1
    564c:	cmp	w8, #0x8
    5650:	csel	x8, x8, x25, hi  // hi = pmore
    5654:	sub	x8, x8, #0x1
    5658:	orr	x8, x8, x9
    565c:	ldur	x9, [x29, #-8]
    5660:	add	x8, x8, #0x1
    5664:	add	x24, x8, x20
    5668:	add	x8, x9, x8
    566c:	str	x8, [x26, x19]
    5670:	mov	w10, #0x1                   	// #1
    5674:	add	x19, x19, #0x8
    5678:	cmp	x28, x19
    567c:	b.ne	54c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xb4>  // b.any
    5680:	b	56cc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2c0>
    5684:	ldp	q16, q17, [x8]
    5688:	st2	{v16.s, v17.s}[0], [x8]
    568c:	b	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>
    5690:	ldp	q16, q17, [x8]
    5694:	ldr	q18, [x8, #32]
    5698:	st3	{v16.s-v18.s}[0], [x8]
    569c:	b	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>
    56a0:	ldp	q16, q17, [x8]
    56a4:	ldp	q18, q19, [x8, #32]
    56a8:	st4	{v16.d-v19.d}[0], [x8]
    56ac:	b	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>
    56b0:	ldp	q16, q17, [x8]
    56b4:	ldr	q18, [x8, #32]
    56b8:	st3	{v16.d-v18.d}[0], [x8]
    56bc:	b	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>
    56c0:	ldp	q16, q17, [x8]
    56c4:	st2	{v16.d, v17.d}[0], [x8]
    56c8:	b	566c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x260>
    56cc:	ldr	w24, [x23, #28]
    56d0:	ldp	x9, x8, [x29, #-40]
    56d4:	ldur	x3, [x29, #-24]
    56d8:	mov	x0, x23
    56dc:	tst	w24, #0x20
    56e0:	csel	x1, x9, x8, eq  // eq = none
    56e4:	ldur	x8, [x29, #-48]
    56e8:	mov	x2, x26
    56ec:	blr	x8
    56f0:	mov	w0, w24
    56f4:	mov	sp, x29
    56f8:	ldp	x20, x19, [sp, #80]
    56fc:	ldp	x22, x21, [sp, #64]
    5700:	ldp	x24, x23, [sp, #48]
    5704:	ldp	x26, x25, [sp, #32]
    5708:	ldp	x28, x27, [sp, #16]
    570c:	ldp	x29, x30, [sp], #96
    5710:	ret
    5714:	bl	1a90 <abort@plt>
    5718:	stp	x29, x30, [sp, #-32]!
    571c:	ldr	x9, [x0, #16]
    5720:	str	x19, [sp, #16]
    5724:	mov	x29, sp
    5728:	cbz	x9, 5760 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x354>
    572c:	ldr	x8, [x9]
    5730:	cbz	x8, 5760 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x354>
    5734:	add	x19, x9, #0x8
    5738:	ldrh	w0, [x8, #10]
    573c:	orr	w9, w0, #0x2
    5740:	cmp	w9, #0xf
    5744:	b.ne	5764 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x358>  // b.any
    5748:	mov	x0, x8
    574c:	bl	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x30c>
    5750:	tbz	w0, #31, 5764 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x358>
    5754:	ldr	x8, [x19], #8
    5758:	cbnz	x8, 5738 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x32c>
    575c:	b	5764 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x358>
    5760:	mov	w0, #0xffffffff            	// #-1
    5764:	ldr	x19, [sp, #16]
    5768:	ldp	x29, x30, [sp], #32
    576c:	ret
    5770:	stp	x29, x30, [sp, #-32]!
    5774:	stp	x20, x19, [sp, #16]
    5778:	ldr	x8, [x0, #16]
    577c:	mov	x29, sp
    5780:	cbz	x8, 57c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3b8>
    5784:	ldr	x0, [x8]
    5788:	cbz	x0, 57c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3b8>
    578c:	mov	w19, w1
    5790:	add	x20, x8, #0x8
    5794:	ldrh	w8, [x0, #10]
    5798:	orr	w9, w8, #0x2
    579c:	cmp	w9, #0xf
    57a0:	b.ne	57b4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3a8>  // b.any
    57a4:	mov	w1, w19
    57a8:	bl	5770 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x364>
    57ac:	cbnz	w0, 57bc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3b0>
    57b0:	b	57c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3bc>
    57b4:	cmp	w8, w19
    57b8:	b.ne	57d4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3c8>  // b.any
    57bc:	ldr	x0, [x20], #8
    57c0:	cbnz	x0, 5794 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x388>
    57c4:	mov	w0, #0x1                   	// #1
    57c8:	ldp	x20, x19, [sp, #16]
    57cc:	ldp	x29, x30, [sp], #32
    57d0:	ret
    57d4:	mov	w0, wzr
    57d8:	b	57c8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3bc>
    57dc:	nop
    57e0:	stp	x29, x30, [x1]
    57e4:	mov	x29, x1
    57e8:	mov	sp, x0
    57ec:	mov	x9, x2
    57f0:	mov	x8, x3
    57f4:	mov	x18, x5
    57f8:	stp	x3, x4, [x29, #16]
    57fc:	tbz	w4, #7, 5810 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x404>
    5800:	ldp	q0, q1, [sp]
    5804:	ldp	q2, q3, [sp, #32]
    5808:	ldp	q4, q5, [sp, #64]
    580c:	ldp	q6, q7, [sp, #96]
    5810:	ldp	x0, x1, [sp, #128]
    5814:	ldp	x2, x3, [sp, #144]
    5818:	ldp	x4, x5, [sp, #160]
    581c:	ldp	x6, x7, [sp, #176]
    5820:	add	sp, sp, #0xc0
    5824:	blr	x9
    5828:	ldp	x3, x4, [x29, #16]
    582c:	mov	sp, x29
    5830:	ldp	x29, x30, [x29]
    5834:	adr	x5, 5850 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x444>
    5838:	and	w4, w4, #0x1f
    583c:	add	x5, x5, x4, lsl #3
    5840:	br	x5
    5844:	nop
    5848:	nop
    584c:	nop
    5850:	ret
    5854:	nop
    5858:	str	x0, [x3]
    585c:	ret
    5860:	stp	x0, x1, [x3]
    5864:	ret
    5868:	brk	#0x3e8
    586c:	ret
    5870:	brk	#0x3e8
    5874:	ret
    5878:	brk	#0x3e8
    587c:	ret
    5880:	brk	#0x3e8
    5884:	ret
    5888:	brk	#0x3e8
    588c:	ret
    5890:	st4	{v0.s-v3.s}[0], [x3]
    5894:	ret
    5898:	st3	{v0.s-v2.s}[0], [x3]
    589c:	ret
    58a0:	stp	s0, s1, [x3]
    58a4:	ret
    58a8:	str	s0, [x3]
    58ac:	ret
    58b0:	st4	{v0.d-v3.d}[0], [x3]
    58b4:	ret
    58b8:	st3	{v0.d-v2.d}[0], [x3]
    58bc:	ret
    58c0:	stp	d0, d1, [x3]
    58c4:	ret
    58c8:	str	d0, [x3]
    58cc:	ret
    58d0:	str	q3, [x3, #48]
    58d4:	nop
    58d8:	str	q2, [x3, #32]
    58dc:	nop
    58e0:	stp	q0, q1, [x3]
    58e4:	ret
    58e8:	str	q0, [x3]
    58ec:	ret
    58f0:	uxtb	w0, w0
    58f4:	str	x0, [x3]
    58f8:	ret
    58fc:	nop
    5900:	uxth	w0, w0
    5904:	str	x0, [x3]
    5908:	ret
    590c:	nop
    5910:	mov	w0, w0
    5914:	str	x0, [x3]
    5918:	ret
    591c:	nop
    5920:	sxtb	x0, w0
    5924:	str	x0, [x3]
    5928:	ret
    592c:	nop
    5930:	sxth	x0, w0
    5934:	str	x0, [x3]
    5938:	ret
    593c:	nop
    5940:	sxtw	x0, w0
    5944:	str	x0, [x3]
    5948:	ret
    594c:	nop
    5950:	stp	x29, x30, [sp, #-272]!
    5954:	stp	q0, q1, [sp, #16]
    5958:	stp	q2, q3, [sp, #48]
    595c:	stp	q4, q5, [sp, #80]
    5960:	stp	q6, q7, [sp, #112]
    5964:	b	5974 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x568>
    5968:	nop
    596c:	nop
    5970:	stp	x29, x30, [sp, #-272]!
    5974:	mov	x29, sp
    5978:	stp	x0, x1, [sp, #144]
    597c:	stp	x2, x3, [sp, #160]
    5980:	stp	x4, x5, [sp, #176]
    5984:	stp	x6, x7, [sp, #192]
    5988:	ldp	x0, x1, [x17, #24]
    598c:	ldr	x2, [x17, #40]
    5990:	add	x3, sp, #0x10
    5994:	add	x4, sp, #0x110
    5998:	add	x5, sp, #0xd0
    599c:	mov	x6, x8
    59a0:	bl	5450 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x44>
    59a4:	adr	x1, 59c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5b4>
    59a8:	and	w0, w0, #0x1f
    59ac:	add	x1, x1, x0, lsl #3
    59b0:	add	x3, sp, #0xd0
    59b4:	br	x1
    59b8:	nop
    59bc:	nop
    59c0:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    59c4:	nop
    59c8:	ldr	x0, [x3]
    59cc:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    59d0:	ldp	x0, x1, [x3]
    59d4:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    59d8:	brk	#0x3e8
    59dc:	nop
    59e0:	brk	#0x3e8
    59e4:	nop
    59e8:	brk	#0x3e8
    59ec:	nop
    59f0:	brk	#0x3e8
    59f4:	nop
    59f8:	brk	#0x3e8
    59fc:	nop
    5a00:	ldr	s3, [x3, #12]
    5a04:	nop
    5a08:	ldr	s2, [x3, #8]
    5a0c:	nop
    5a10:	ldp	s0, s1, [x3]
    5a14:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a18:	ldr	s0, [x3]
    5a1c:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a20:	ldr	d3, [x3, #24]
    5a24:	nop
    5a28:	ldr	d2, [x3, #16]
    5a2c:	nop
    5a30:	ldp	d0, d1, [x3]
    5a34:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a38:	ldr	d0, [x3]
    5a3c:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a40:	ldr	q3, [x3, #48]
    5a44:	nop
    5a48:	ldr	q2, [x3, #32]
    5a4c:	nop
    5a50:	ldp	q0, q1, [x3]
    5a54:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a58:	ldr	q0, [x3]
    5a5c:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a60:	ldrb	w0, [x3]
    5a64:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a68:	brk	#0x3e8
    5a6c:	nop
    5a70:	ldrh	w0, [x3]
    5a74:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a78:	brk	#0x3e8
    5a7c:	nop
    5a80:	ldr	w0, [x3]
    5a84:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a88:	brk	#0x3e8
    5a8c:	nop
    5a90:	ldrsb	x0, [x3]
    5a94:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5a98:	brk	#0x3e8
    5a9c:	nop
    5aa0:	ldrsh	x0, [x3]
    5aa4:	b	5ab8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6ac>
    5aa8:	brk	#0x3e8
    5aac:	nop
    5ab0:	ldrsw	x0, [x3]
    5ab4:	nop
    5ab8:	ldp	x29, x30, [sp], #272
    5abc:	ret
    5ac0:	stp	x29, x30, [sp, #-272]!
    5ac4:	stp	q0, q1, [sp, #16]
    5ac8:	stp	q2, q3, [sp, #48]
    5acc:	stp	q4, q5, [sp, #80]
    5ad0:	stp	q6, q7, [sp, #112]
    5ad4:	b	5ae4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6d8>
    5ad8:	nop
    5adc:	nop
    5ae0:	stp	x29, x30, [sp, #-272]!
    5ae4:	mov	x29, sp
    5ae8:	stp	x0, x1, [sp, #144]
    5aec:	stp	x2, x3, [sp, #160]
    5af0:	stp	x4, x5, [sp, #176]
    5af4:	stp	x6, x7, [sp, #192]
    5af8:	ldp	x0, x1, [x18, #8]
    5afc:	mov	x2, x18
    5b00:	b	5990 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x584>
    5b04:	nop
    5b08:	b	5b10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x704>
    5b0c:	nop
    5b10:	adrp	x3, 17000 <memcpy@GLIBC_2.17>
    5b14:	ldr	w2, [x3, #1524]
    5b18:	cbnz	w2, 5b28 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x71c>
    5b1c:	mrs	x4, ctr_el0
    5b20:	mov	w2, w4
    5b24:	str	w4, [x3, #1524]
    5b28:	ubfx	x4, x2, #16, #4
    5b2c:	mov	w3, #0x4                   	// #4
    5b30:	and	w5, w2, #0xf
    5b34:	lsl	w4, w3, w4
    5b38:	sub	w2, w4, #0x1
    5b3c:	bic	x2, x0, x2
    5b40:	sxtw	x4, w4
    5b44:	cmp	x2, x1
    5b48:	lsl	w3, w3, w5
    5b4c:	b.cs	5b60 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x754>  // b.hs, b.nlast
    5b50:	dc	cvau, x2
    5b54:	add	x2, x2, x4
    5b58:	cmp	x1, x2
    5b5c:	b.hi	5b50 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x744>  // b.pmore
    5b60:	dsb	ish
    5b64:	sub	w2, w3, #0x1
    5b68:	sxtw	x3, w3
    5b6c:	bic	x0, x0, x2
    5b70:	cmp	x1, x0
    5b74:	b.ls	5b88 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x77c>  // b.plast
    5b78:	ic	ivau, x0
    5b7c:	add	x0, x0, x3
    5b80:	cmp	x1, x0
    5b84:	b.hi	5b78 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x76c>  // b.pmore
    5b88:	dsb	ish
    5b8c:	isb
    5b90:	ret

Disassembly of section .fini:

0000000000005b94 <.fini>:
    5b94:	stp	x29, x30, [sp, #-16]!
    5b98:	mov	x29, sp
    5b9c:	ldp	x29, x30, [sp], #16
    5ba0:	ret
