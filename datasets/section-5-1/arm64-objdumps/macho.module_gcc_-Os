
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//macho.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_macho_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	x20, [x0]
      14:	ldr	x0, [x0, #48]
      18:	cbnz	x0, 24 <grub_macho_close+0x24>
      1c:	ldr	x0, [x19, #40]
      20:	bl	0 <grub_free>
      24:	ldr	x0, [x19, #48]
      28:	bl	0 <grub_free>
      2c:	ldr	x0, [x19, #120]
      30:	cbnz	x0, 3c <grub_macho_close+0x3c>
      34:	ldr	x0, [x19, #112]
      38:	bl	0 <grub_free>
      3c:	ldr	x0, [x19, #120]
      40:	bl	0 <grub_free>
      44:	mov	x0, x19
      48:	bl	0 <grub_free>
      4c:	cbz	x20, 58 <grub_macho_close+0x58>
      50:	mov	x0, x20
      54:	bl	0 <grub_file_close>
      58:	adrp	x0, 0 <grub_macho_close>
      5c:	ldp	x19, x20, [sp, #16]
      60:	ldr	x0, [x0]
      64:	ldp	x29, x30, [sp], #32
      68:	ldr	w0, [x0]
      6c:	ret
	...

0000000000000078 <grub_macho_file>:
      78:	stp	x29, x30, [sp, #-112]!
      7c:	mov	x29, sp
      80:	stp	x19, x20, [sp, #16]
      84:	mov	w20, w2
      88:	stp	x21, x22, [sp, #32]
      8c:	mov	x21, x0
      90:	mov	x0, #0x98                  	// #152
      94:	stp	x23, x24, [sp, #48]
      98:	mov	x23, x1
      9c:	str	x25, [sp, #64]
      a0:	bl	0 <grub_malloc>
      a4:	mov	x19, x0
      a8:	cbz	x0, 12c <grub_macho_file+0xb4>
      ac:	mov	x0, #0xffffffffffffffff    	// #-1
      b0:	stp	x21, x0, [x19]
      b4:	mov	x1, #0x0                   	// #0
      b8:	str	x0, [x19, #16]
      bc:	stp	xzr, xzr, [x19, #40]
      c0:	str	wzr, [x19, #56]
      c4:	stp	x0, x0, [x19, #80]
      c8:	mov	x0, x21
      cc:	stp	xzr, xzr, [x19, #112]
      d0:	str	wzr, [x19, #128]
      d4:	bl	0 <grub_file_seek>
      d8:	cmn	x0, #0x1
      dc:	b.eq	11c <grub_macho_file+0xa4>  // b.none
      e0:	ldr	x0, [x19]
      e4:	add	x1, sp, #0x50
      e8:	mov	x2, #0x20                  	// #32
      ec:	bl	0 <grub_file_read>
      f0:	cmp	x0, #0x20
      f4:	b.eq	148 <grub_macho_file+0xd0>  // b.none
      f8:	adrp	x0, 0 <grub_macho_close>
      fc:	ldr	x0, [x0]
     100:	ldr	w0, [x0]
     104:	cbnz	w0, 11c <grub_macho_file+0xa4>
     108:	adrp	x0, 0 <grub_macho_close>
     10c:	mov	x2, x23
     110:	ldr	x1, [x0]
     114:	mov	w0, #0x15                  	// #21
     118:	bl	0 <grub_error>
     11c:	mov	x0, x19
     120:	str	xzr, [x19]
     124:	mov	x19, #0x0                   	// #0
     128:	bl	0 <grub_macho_close>
     12c:	mov	x0, x19
     130:	ldp	x19, x20, [sp, #16]
     134:	ldp	x21, x22, [sp, #32]
     138:	ldp	x23, x24, [sp, #48]
     13c:	ldr	x25, [sp, #64]
     140:	ldp	x29, x30, [sp], #112
     144:	ret
     148:	ldr	w1, [sp, #80]
     14c:	mov	w0, #0xfeca                	// #65226
     150:	movk	w0, #0xbeba, lsl #16
     154:	cmp	w1, w0
     158:	b.ne	1cc <grub_macho_file+0x154>  // b.any
     15c:	ldr	x0, [x19]
     160:	mov	x1, #0x8                   	// #8
     164:	ldr	w25, [sp, #84]
     168:	bl	0 <grub_file_seek>
     16c:	rev	w25, w25
     170:	cmn	x0, #0x1
     174:	b.eq	11c <grub_macho_file+0xa4>  // b.none
     178:	mov	w24, #0x14                  	// #20
     17c:	smull	x24, w25, w24
     180:	mov	x0, x24
     184:	bl	0 <grub_malloc>
     188:	mov	x22, x0
     18c:	cbz	x0, 11c <grub_macho_file+0xa4>
     190:	mov	x1, x0
     194:	mov	x2, x24
     198:	ldr	x0, [x19]
     19c:	bl	0 <grub_file_read>
     1a0:	cmp	x0, x24
     1a4:	mov	x0, x22
     1a8:	b.ne	278 <grub_macho_file+0x200>  // b.any
     1ac:	mov	w5, #0x1                   	// #1
     1b0:	mov	w2, #0x0                   	// #0
     1b4:	mov	w4, #0x7000000             	// #117440512
     1b8:	movk	w5, #0x700, lsl #16
     1bc:	cmp	w2, w25
     1c0:	b.lt	280 <grub_macho_file+0x208>  // b.tstop
     1c4:	mov	x0, x22
     1c8:	bl	0 <grub_free>
     1cc:	ldr	w0, [sp, #80]
     1d0:	mov	w1, #0xface                	// #64206
     1d4:	movk	w1, #0xfeed, lsl #16
     1d8:	cmp	w0, w1
     1dc:	b.ne	2ec <grub_macho_file+0x274>  // b.any
     1e0:	cbnz	w20, 1f0 <grub_macho_file+0x178>
     1e4:	str	xzr, [x19, #8]
     1e8:	ldr	x0, [x21, #64]
     1ec:	str	x0, [x19, #16]
     1f0:	adrp	x22, 0 <grub_macho_close>
     1f4:	add	x0, sp, #0x50
     1f8:	mov	x2, #0x8                   	// #8
     1fc:	ldr	x1, [x22]
     200:	bl	0 <grub_memcmp>
     204:	orr	w0, w0, w20
     208:	cbnz	w0, 218 <grub_macho_file+0x1a0>
     20c:	str	xzr, [x19, #8]
     210:	ldr	x0, [x21, #64]
     214:	str	x0, [x19, #16]
     218:	ldr	x1, [x22]
     21c:	add	x0, sp, #0x50
     220:	mov	x2, #0x8                   	// #8
     224:	bl	0 <grub_memcmp>
     228:	cbnz	w0, 23c <grub_macho_file+0x1c4>
     22c:	cbz	w20, 23c <grub_macho_file+0x1c4>
     230:	str	xzr, [x19, #80]
     234:	ldr	x0, [x21, #64]
     238:	str	x0, [x19, #88]
     23c:	mov	x1, x23
     240:	mov	x0, x19
     244:	bl	828 <grub_macho_parse32>
     248:	mov	x0, x19
     24c:	mov	x1, x23
     250:	bl	1020 <grub_macho_parse64>
     254:	ldr	x0, [x19, #8]
     258:	cmn	x0, #0x1
     25c:	b.ne	310 <grub_macho_file+0x298>  // b.any
     260:	cbnz	w20, 310 <grub_macho_file+0x298>
     264:	adrp	x0, 0 <grub_macho_close>
     268:	ldr	x1, [x0]
     26c:	mov	w0, #0x15                  	// #21
     270:	bl	0 <grub_error>
     274:	b	11c <grub_macho_file+0xa4>
     278:	bl	0 <grub_free>
     27c:	b	f8 <grub_macho_file+0x80>
     280:	ldr	w1, [x0]
     284:	cmp	w1, w4
     288:	b.ne	2bc <grub_macho_file+0x244>  // b.any
     28c:	cbnz	w20, 2b0 <grub_macho_file+0x238>
     290:	ldr	w1, [x0, #8]
     294:	rev	w3, w1
     298:	rev	w1, w1
     29c:	str	x1, [x19, #8]
     2a0:	ldr	w1, [x0, #12]
     2a4:	rev	w1, w1
     2a8:	add	w1, w3, w1
     2ac:	str	x1, [x19, #16]
     2b0:	add	w2, w2, #0x1
     2b4:	add	x0, x0, #0x14
     2b8:	b	1bc <grub_macho_file+0x144>
     2bc:	cmp	w1, w5
     2c0:	b.ne	2b0 <grub_macho_file+0x238>  // b.any
     2c4:	cbz	w20, 2b0 <grub_macho_file+0x238>
     2c8:	ldr	w1, [x0, #8]
     2cc:	rev	w3, w1
     2d0:	rev	w1, w1
     2d4:	str	x1, [x19, #80]
     2d8:	ldr	w1, [x0, #12]
     2dc:	rev	w1, w1
     2e0:	add	w1, w3, w1
     2e4:	str	x1, [x19, #88]
     2e8:	b	2b0 <grub_macho_file+0x238>
     2ec:	mov	w1, #0xfacf                	// #64207
     2f0:	movk	w1, #0xfeed, lsl #16
     2f4:	cmp	w0, w1
     2f8:	b.ne	1f0 <grub_macho_file+0x178>  // b.any
     2fc:	cbz	w20, 1f0 <grub_macho_file+0x178>
     300:	str	xzr, [x19, #80]
     304:	ldr	x0, [x21, #64]
     308:	str	x0, [x19, #88]
     30c:	b	1f0 <grub_macho_file+0x178>
     310:	ldr	x0, [x19, #80]
     314:	cmn	x0, #0x1
     318:	b.ne	12c <grub_macho_file+0xb4>  // b.any
     31c:	cbz	w20, 12c <grub_macho_file+0xb4>
     320:	adrp	x0, 0 <grub_macho_close>
     324:	ldr	x1, [x0]
     328:	b	26c <grub_macho_file+0x1f4>
     32c:	nop
	...

0000000000000358 <grub_macho_open>:
     358:	stp	x29, x30, [sp, #-48]!
     35c:	mov	x29, sp
     360:	stp	x19, x20, [sp, #16]
     364:	mov	x19, x0
     368:	str	x21, [sp, #32]
     36c:	mov	w21, w2
     370:	bl	0 <grub_file_open>
     374:	cbz	x0, 3ac <grub_macho_open+0x54>
     378:	mov	x1, x19
     37c:	mov	x20, x0
     380:	mov	w2, w21
     384:	bl	78 <grub_macho_file>
     388:	mov	x19, x0
     38c:	cbnz	x0, 398 <grub_macho_open+0x40>
     390:	mov	x0, x20
     394:	bl	0 <grub_file_close>
     398:	mov	x0, x19
     39c:	ldp	x19, x20, [sp, #16]
     3a0:	ldr	x21, [sp, #32]
     3a4:	ldp	x29, x30, [sp], #48
     3a8:	ret
     3ac:	mov	x19, #0x0                   	// #0
     3b0:	b	398 <grub_macho_open+0x40>
     3b4:	nop

00000000000003b8 <find_entry_point>:
     3b8:	ldr	w0, [x1]
     3bc:	cmp	w0, #0x5
     3c0:	b.ne	3cc <find_entry_point+0x14>  // b.any
     3c4:	ldr	w0, [x1, #56]
     3c8:	str	w0, [x2]
     3cc:	mov	w0, #0x0                   	// #0
     3d0:	ret

00000000000003d4 <grub_macho_cmds_iterate>:
     3d4:	stp	x29, x30, [sp, #-64]!
     3d8:	mov	x29, sp
     3dc:	stp	x19, x20, [sp, #16]
     3e0:	mov	x19, x0
     3e4:	ldr	w0, [x0, #56]
     3e8:	stp	x21, x22, [sp, #32]
     3ec:	mov	x22, x1
     3f0:	str	x23, [sp, #48]
     3f4:	mov	x23, x2
     3f8:	cbz	w0, 550 <grub_macho_cmds_iterate+0x17c>
     3fc:	ldr	x0, [x19, #48]
     400:	cbnz	x0, 550 <grub_macho_cmds_iterate+0x17c>
     404:	ldr	x0, [x19, #72]
     408:	mov	x21, x3
     40c:	bl	0 <grub_malloc>
     410:	str	x0, [x19, #48]
     414:	cbnz	x0, 428 <grub_macho_cmds_iterate+0x54>
     418:	adrp	x0, 0 <grub_macho_close>
     41c:	ldr	x0, [x0]
     420:	ldr	w0, [x0]
     424:	b	4a0 <grub_macho_cmds_iterate+0xcc>
     428:	ldr	x0, [x19, #64]
     42c:	bl	0 <grub_malloc>
     430:	mov	x20, x0
     434:	cbnz	x0, 448 <grub_macho_cmds_iterate+0x74>
     438:	ldr	x0, [x19, #48]
     43c:	bl	0 <grub_free>
     440:	str	xzr, [x19, #48]
     444:	b	418 <grub_macho_cmds_iterate+0x44>
     448:	ldp	x0, x1, [x19]
     44c:	add	x1, x1, #0x180
     450:	bl	0 <grub_file_seek>
     454:	cmn	x0, #0x1
     458:	b.ne	4b4 <grub_macho_cmds_iterate+0xe0>  // b.any
     45c:	adrp	x0, 0 <grub_macho_close>
     460:	ldr	x22, [x0]
     464:	ldr	w0, [x22]
     468:	cbnz	w0, 480 <grub_macho_cmds_iterate+0xac>
     46c:	adrp	x0, 0 <grub_macho_close>
     470:	mov	x2, x21
     474:	ldr	x1, [x0]
     478:	mov	w0, #0x15                  	// #21
     47c:	bl	0 <grub_error>
     480:	mov	x0, x20
     484:	bl	0 <grub_free>
     488:	ldr	x0, [x19, #48]
     48c:	bl	0 <grub_free>
     490:	str	xzr, [x19, #48]
     494:	mov	x0, #0xffffffffffffffff    	// #-1
     498:	str	x0, [x19, #8]
     49c:	ldr	w0, [x22]
     4a0:	ldp	x19, x20, [sp, #16]
     4a4:	ldp	x21, x22, [sp, #32]
     4a8:	ldr	x23, [sp, #48]
     4ac:	ldp	x29, x30, [sp], #64
     4b0:	ret
     4b4:	ldr	x0, [x19]
     4b8:	mov	x1, x20
     4bc:	ldr	x2, [x19, #64]
     4c0:	bl	0 <grub_file_read>
     4c4:	mov	x3, x0
     4c8:	ldr	x0, [x19, #64]
     4cc:	cmp	x3, x0
     4d0:	b.ne	45c <grub_macho_cmds_iterate+0x88>  // b.any
     4d4:	ldr	x0, [x19, #48]
     4d8:	add	x3, x20, x3
     4dc:	ldr	x1, [x19, #72]
     4e0:	mov	x2, x20
     4e4:	add	x1, x0, x1
     4e8:	bl	13b8 <grub_decompress_lzss>
     4ec:	ldr	x1, [x19, #72]
     4f0:	cmp	x0, x1
     4f4:	b.ne	45c <grub_macho_cmds_iterate+0x88>  // b.any
     4f8:	mov	x0, x20
     4fc:	bl	0 <grub_free>
     500:	ldr	x0, [x19, #48]
     504:	ldp	w1, w3, [x0, #16]
     508:	add	x0, x0, #0x1c
     50c:	stp	x3, x0, [x19, #32]
     510:	add	x3, x3, #0x1c
     514:	ldr	x0, [x19, #72]
     518:	str	w1, [x19, #24]
     51c:	cmp	x3, x0
     520:	b.cc	550 <grub_macho_cmds_iterate+0x17c>  // b.lo, b.ul, b.last
     524:	adrp	x0, 0 <grub_macho_close>
     528:	mov	x2, x21
     52c:	ldr	x1, [x0]
     530:	mov	w0, #0x15                  	// #21
     534:	bl	0 <grub_error>
     538:	ldr	x0, [x19, #48]
     53c:	bl	0 <grub_free>
     540:	str	xzr, [x19, #48]
     544:	mov	x0, #0xffffffffffffffff    	// #-1
     548:	str	x0, [x19, #8]
     54c:	b	418 <grub_macho_cmds_iterate+0x44>
     550:	ldr	x20, [x19, #40]
     554:	mov	w21, #0x0                   	// #0
     558:	cbnz	x20, 59c <grub_macho_cmds_iterate+0x1c8>
     55c:	adrp	x0, 0 <grub_macho_close>
     560:	ldp	x19, x20, [sp, #16]
     564:	ldp	x21, x22, [sp, #32]
     568:	ldr	x23, [sp, #48]
     56c:	ldp	x29, x30, [sp], #64
     570:	ldr	x1, [x0]
     574:	mov	w0, #0x15                  	// #21
     578:	b	0 <grub_error>
     57c:	mov	x2, x23
     580:	mov	x1, x20
     584:	mov	x0, x19
     588:	blr	x22
     58c:	cbnz	w0, 418 <grub_macho_cmds_iterate+0x44>
     590:	ldr	w0, [x20, #4]
     594:	add	w21, w21, #0x1
     598:	add	x20, x20, x0
     59c:	ldr	w0, [x19, #24]
     5a0:	cmp	w0, w21
     5a4:	b.gt	57c <grub_macho_cmds_iterate+0x1a8>
     5a8:	b	418 <grub_macho_cmds_iterate+0x44>
     5ac:	nop
	...

00000000000005c8 <calcsize>:
     5c8:	ldr	w0, [x1]
     5cc:	cmp	w0, #0x1
     5d0:	b.ne	62c <calcsize+0x64>  // b.any
     5d4:	ldr	w0, [x1, #28]
     5d8:	cbz	w0, 62c <calcsize+0x64>
     5dc:	ldr	w0, [x1, #36]
     5e0:	cbnz	w0, 5ec <calcsize+0x24>
     5e4:	ldr	w0, [x2]
     5e8:	tbnz	w0, #0, 62c <calcsize+0x64>
     5ec:	ldr	w0, [x2, #4]
     5f0:	ldr	w3, [x1, #24]
     5f4:	add	w0, w0, #0x1
     5f8:	str	w0, [x2, #4]
     5fc:	ldr	x0, [x2, #8]
     600:	ldr	w4, [x0]
     604:	cmp	w3, w4
     608:	b.cs	610 <calcsize+0x48>  // b.hs, b.nlast
     60c:	str	w3, [x0]
     610:	ldp	w0, w1, [x1, #24]
     614:	add	w0, w0, w1
     618:	ldr	x1, [x2, #16]
     61c:	ldr	w2, [x1]
     620:	cmp	w0, w2
     624:	b.ls	62c <calcsize+0x64>  // b.plast
     628:	str	w0, [x1]
     62c:	mov	w0, #0x0                   	// #0
     630:	ret

0000000000000634 <do_load>:
     634:	stp	x29, x30, [sp, #-64]!
     638:	mov	x29, sp
     63c:	stp	x19, x20, [sp, #16]
     640:	stp	x21, x22, [sp, #32]
     644:	mov	x22, x0
     648:	ldr	w0, [x1]
     64c:	str	x23, [sp, #48]
     650:	cmp	w0, #0x1
     654:	b.eq	660 <do_load+0x2c>  // b.none
     658:	mov	w0, #0x0                   	// #0
     65c:	b	7c8 <do_load+0x194>
     660:	mov	x19, x1
     664:	ldr	w1, [x1, #36]
     668:	mov	x21, x2
     66c:	cbnz	w1, 678 <do_load+0x44>
     670:	ldr	w0, [x2]
     674:	tbnz	w0, #0, 658 <do_load+0x24>
     678:	ldr	w20, [x19, #28]
     67c:	cbz	w20, 658 <do_load+0x24>
     680:	cbnz	w1, 6b4 <do_load+0x80>
     684:	ldr	w2, [x19, #28]
     688:	ldr	w1, [x19, #36]
     68c:	cmp	w1, w2
     690:	b.cs	658 <do_load+0x24>  // b.hs, b.nlast
     694:	ldr	w0, [x19, #24]
     698:	sub	w2, w2, w1
     69c:	ldr	x3, [x21, #8]
     6a0:	add	x0, x0, w1, uxtw
     6a4:	mov	w1, #0x0                   	// #0
     6a8:	add	x0, x3, x0
     6ac:	bl	0 <grub_memset>
     6b0:	b	658 <do_load+0x24>
     6b4:	ldr	x3, [x22, #48]
     6b8:	cmp	w1, w20
     6bc:	csel	w20, w1, w20, ls  // ls = plast
     6c0:	ldr	w1, [x19, #32]
     6c4:	cbz	x3, 7ac <do_load+0x178>
     6c8:	ldr	x0, [x22, #72]
     6cc:	mov	w2, w20
     6d0:	add	x20, x1, w20, uxtw
     6d4:	cmp	x20, x0
     6d8:	b.ls	704 <do_load+0xd0>  // b.plast
     6dc:	adrp	x0, 0 <grub_macho_close>
     6e0:	ldr	x0, [x0]
     6e4:	ldr	w0, [x0]
     6e8:	cbnz	w0, 7c4 <do_load+0x190>
     6ec:	adrp	x0, 0 <grub_macho_close>
     6f0:	ldr	x2, [x21, #16]
     6f4:	ldr	x1, [x0]
     6f8:	mov	w0, #0x15                  	// #21
     6fc:	bl	0 <grub_error>
     700:	b	7c4 <do_load+0x190>
     704:	ldr	x4, [x21, #8]
     708:	add	x1, x3, x1
     70c:	ldr	w0, [x19, #24]
     710:	add	x0, x4, x0
     714:	bl	0 <grub_memmove>
     718:	ldr	x0, [x21, #24]
     71c:	cbz	x0, 684 <do_load+0x50>
     720:	ldp	w0, w2, [x19, #24]
     724:	adrp	x23, 0 <grub_macho_close>
     728:	ldr	w1, [x19, #36]
     72c:	ldr	x20, [x21, #8]
     730:	mov	w22, w1
     734:	cmp	w2, w1
     738:	add	x20, x20, x0
     73c:	sub	x0, x22, #0x16
     740:	mov	w22, w2
     744:	sub	x22, x22, #0x16
     748:	csel	x22, x22, x0, ls  // ls = plast
     74c:	add	x22, x20, x22
     750:	cmp	x22, x20
     754:	b.ls	684 <do_load+0x50>  // b.plast
     758:	ldr	x1, [x23]
     75c:	mov	x0, x20
     760:	mov	x2, #0x16                  	// #22
     764:	bl	0 <grub_memcmp>
     768:	cbnz	w0, 804 <do_load+0x1d0>
     76c:	ldr	x1, [x21, #24]
     770:	add	x20, x20, #0x16
     774:	add	x22, x22, #0x16
     778:	mov	w3, #0xa                   	// #10
     77c:	str	wzr, [x1]
     780:	cmp	x22, x20
     784:	b.ls	684 <do_load+0x50>  // b.plast
     788:	ldrb	w0, [x20]
     78c:	sub	w0, w0, #0x30
     790:	cmp	w0, #0x9
     794:	b.hi	684 <do_load+0x50>  // b.pmore
     798:	ldr	w2, [x1]
     79c:	add	x20, x20, #0x1
     7a0:	madd	w0, w2, w3, w0
     7a4:	str	w0, [x1]
     7a8:	b	780 <do_load+0x14c>
     7ac:	ldr	x0, [x22, #8]
     7b0:	add	x1, x1, x0
     7b4:	ldr	x0, [x22]
     7b8:	bl	0 <grub_file_seek>
     7bc:	cmn	x0, #0x1
     7c0:	b.ne	7dc <do_load+0x1a8>  // b.any
     7c4:	mov	w0, #0x1                   	// #1
     7c8:	ldp	x19, x20, [sp, #16]
     7cc:	ldp	x21, x22, [sp, #32]
     7d0:	ldr	x23, [sp, #48]
     7d4:	ldp	x29, x30, [sp], #64
     7d8:	ret
     7dc:	ldr	x1, [x21, #8]
     7e0:	mov	w20, w20
     7e4:	ldr	w0, [x19, #24]
     7e8:	mov	x2, x20
     7ec:	add	x1, x1, x0
     7f0:	ldr	x0, [x22]
     7f4:	bl	0 <grub_file_read>
     7f8:	cmp	x20, x0
     7fc:	b.eq	718 <do_load+0xe4>  // b.none
     800:	b	6dc <do_load+0xa8>
     804:	add	x20, x20, #0x1
     808:	b	750 <do_load+0x11c>
     80c:	nop
	...

0000000000000828 <grub_macho_parse32>:
     828:	stp	x29, x30, [sp, #-64]!
     82c:	mov	x29, sp
     830:	stp	x19, x20, [sp, #16]
     834:	mov	x20, x1
     838:	ldr	x1, [x0, #8]
     83c:	cmn	x1, #0x1
     840:	b.eq	8e8 <grub_macho_parse32+0xc0>  // b.none
     844:	mov	x19, x0
     848:	ldr	x0, [x0]
     84c:	bl	0 <grub_file_seek>
     850:	cmn	x0, #0x1
     854:	b.ne	86c <grub_macho_parse32+0x44>  // b.any
     858:	adrp	x0, 0 <grub_macho_close>
     85c:	ldr	x0, [x0]
     860:	ldr	w0, [x0]
     864:	cbnz	w0, 8d4 <grub_macho_parse32+0xac>
     868:	b	8c0 <grub_macho_parse32+0x98>
     86c:	ldr	x0, [x19]
     870:	add	x1, sp, #0x20
     874:	mov	x2, #0x1c                  	// #28
     878:	bl	0 <grub_file_read>
     87c:	cmp	x0, #0x1c
     880:	b.ne	858 <grub_macho_parse32+0x30>  // b.any
     884:	adrp	x0, 0 <grub_macho_close>
     888:	mov	x2, #0x8                   	// #8
     88c:	ldr	x1, [x0]
     890:	add	x0, sp, #0x20
     894:	bl	0 <grub_memcmp>
     898:	cbnz	w0, 8f4 <grub_macho_parse32+0xcc>
     89c:	ldr	w0, [sp, #48]
     8a0:	rev	w0, w0
     8a4:	str	x0, [x19, #64]
     8a8:	ldr	w0, [sp, #44]
     8ac:	rev	w1, w0
     8b0:	rev	w0, w0
     8b4:	str	x0, [x19, #72]
     8b8:	cmp	w1, #0x1b
     8bc:	b.hi	8e0 <grub_macho_parse32+0xb8>  // b.pmore
     8c0:	adrp	x0, 0 <grub_macho_close>
     8c4:	mov	x2, x20
     8c8:	ldr	x1, [x0]
     8cc:	mov	w0, #0x15                  	// #21
     8d0:	bl	0 <grub_error>
     8d4:	mov	x0, #0xffffffffffffffff    	// #-1
     8d8:	str	x0, [x19, #8]
     8dc:	b	8e8 <grub_macho_parse32+0xc0>
     8e0:	mov	w0, #0x1                   	// #1
     8e4:	str	w0, [x19, #56]
     8e8:	ldp	x19, x20, [sp, #16]
     8ec:	ldp	x29, x30, [sp], #64
     8f0:	ret
     8f4:	ldr	w1, [sp, #32]
     8f8:	mov	w0, #0xface                	// #64206
     8fc:	movk	w0, #0xfeed, lsl #16
     900:	cmp	w1, w0
     904:	b.eq	91c <grub_macho_parse32+0xf4>  // b.none
     908:	adrp	x0, 0 <grub_macho_close>
     90c:	ldr	x1, [x0]
     910:	mov	w0, #0x15                  	// #21
     914:	bl	0 <grub_error>
     918:	b	8d4 <grub_macho_parse32+0xac>
     91c:	ldr	w0, [sp, #48]
     920:	str	w0, [x19, #24]
     924:	ldr	w0, [sp, #52]
     928:	str	x0, [x19, #32]
     92c:	bl	0 <grub_malloc>
     930:	str	x0, [x19, #40]
     934:	cbz	x0, 8e8 <grub_macho_parse32+0xc0>
     938:	ldp	x0, x1, [x19]
     93c:	add	x1, x1, #0x1c
     940:	bl	0 <grub_file_seek>
     944:	cmn	x0, #0x1
     948:	b.eq	858 <grub_macho_parse32+0x30>  // b.none
     94c:	ldp	x2, x1, [x19, #32]
     950:	ldr	x0, [x19]
     954:	bl	0 <grub_file_read>
     958:	ldr	x1, [x19, #32]
     95c:	cmp	x0, x1
     960:	b.ne	858 <grub_macho_parse32+0x30>  // b.any
     964:	b	8e8 <grub_macho_parse32+0xc0>
	...

0000000000000988 <grub_macho_filesize32>:
     988:	ldr	x1, [x0, #8]
     98c:	cmn	x1, #0x1
     990:	b.eq	9a0 <grub_macho_filesize32+0x18>  // b.none
     994:	ldr	x0, [x0, #16]
     998:	sub	x0, x0, x1
     99c:	ret
     9a0:	mov	x0, #0x0                   	// #0
     9a4:	b	99c <grub_macho_filesize32+0x14>

00000000000009a8 <grub_macho_readfile32>:
     9a8:	stp	x29, x30, [sp, #-48]!
     9ac:	mov	x29, sp
     9b0:	stp	x19, x20, [sp, #16]
     9b4:	mov	x20, x1
     9b8:	ldr	x1, [x0, #8]
     9bc:	str	x21, [sp, #32]
     9c0:	cmn	x1, #0x1
     9c4:	b.ne	9e4 <grub_macho_readfile32+0x3c>  // b.any
     9c8:	adrp	x0, 0 <grub_macho_close>
     9cc:	ldp	x19, x20, [sp, #16]
     9d0:	ldr	x21, [sp, #32]
     9d4:	ldp	x29, x30, [sp], #48
     9d8:	ldr	x1, [x0]
     9dc:	mov	w0, #0x15                  	// #21
     9e0:	b	0 <grub_error>
     9e4:	mov	x19, x0
     9e8:	mov	x21, x2
     9ec:	ldr	x0, [x0]
     9f0:	bl	0 <grub_file_seek>
     9f4:	cmn	x0, #0x1
     9f8:	b.ne	a18 <grub_macho_readfile32+0x70>  // b.any
     9fc:	adrp	x0, 0 <grub_macho_close>
     a00:	ldr	x0, [x0]
     a04:	ldr	w0, [x0]
     a08:	ldp	x19, x20, [sp, #16]
     a0c:	ldr	x21, [sp, #32]
     a10:	ldp	x29, x30, [sp], #48
     a14:	ret
     a18:	ldp	x0, x2, [x19, #8]
     a1c:	mov	x1, x21
     a20:	sub	x2, x2, x0
     a24:	ldr	x0, [x19]
     a28:	bl	0 <grub_file_read>
     a2c:	ldp	x2, x1, [x19, #8]
     a30:	sub	x1, x1, x2
     a34:	cmp	x1, x0
     a38:	b.eq	a68 <grub_macho_readfile32+0xc0>  // b.none
     a3c:	adrp	x0, 0 <grub_macho_close>
     a40:	ldr	x19, [x0]
     a44:	ldr	w0, [x19]
     a48:	cbnz	w0, a60 <grub_macho_readfile32+0xb8>
     a4c:	adrp	x0, 0 <grub_macho_close>
     a50:	mov	x2, x20
     a54:	ldr	x1, [x0]
     a58:	mov	w0, #0x15                  	// #21
     a5c:	bl	0 <grub_error>
     a60:	ldr	w0, [x19]
     a64:	b	a08 <grub_macho_readfile32+0x60>
     a68:	mov	w0, #0x0                   	// #0
     a6c:	b	a08 <grub_macho_readfile32+0x60>
	...

0000000000000a88 <grub_macho_size32>:
     a88:	stp	x29, x30, [sp, #-64]!
     a8c:	mov	x29, sp
     a90:	stp	x19, x20, [sp, #16]
     a94:	mov	x19, x1
     a98:	mov	x20, x2
     a9c:	stp	x1, x2, [sp, #48]
     aa0:	mov	w1, #0xffffffff            	// #-1
     aa4:	str	w1, [x19]
     aa8:	adrp	x1, 0 <grub_macho_close>
     aac:	str	wzr, [x2]
     ab0:	add	x2, sp, #0x28
     ab4:	ldr	x1, [x1]
     ab8:	stp	w3, wzr, [sp, #40]
     abc:	mov	x3, x4
     ac0:	bl	3d4 <grub_macho_cmds_iterate>
     ac4:	ldr	w0, [sp, #44]
     ac8:	cbnz	w0, ae8 <grub_macho_size32+0x60>
     acc:	adrp	x0, 0 <grub_macho_close>
     ad0:	ldr	x1, [x0]
     ad4:	mov	w0, #0x15                  	// #21
     ad8:	bl	0 <grub_error>
     adc:	ldp	x19, x20, [sp, #16]
     ae0:	ldp	x29, x30, [sp], #64
     ae4:	ret
     ae8:	ldr	w0, [x19]
     aec:	ldr	w1, [x20]
     af0:	cmp	w1, w0
     af4:	b.cs	b04 <grub_macho_size32+0x7c>  // b.hs, b.nlast
     af8:	adrp	x0, 0 <grub_macho_close>
     afc:	ldr	x1, [x0]
     b00:	b	ad4 <grub_macho_size32+0x4c>
     b04:	mov	w0, #0x0                   	// #0
     b08:	b	adc <grub_macho_size32+0x54>
     b0c:	nop
	...

0000000000000b28 <grub_macho_load32>:
     b28:	stp	x29, x30, [sp, #-48]!
     b2c:	mov	x29, sp
     b30:	str	w3, [sp, #16]
     b34:	stp	x2, x1, [sp, #24]
     b38:	str	x4, [sp, #40]
     b3c:	cbz	x4, b44 <grub_macho_load32+0x1c>
     b40:	str	wzr, [x4]
     b44:	mov	x3, x1
     b48:	adrp	x1, 0 <grub_macho_close>
     b4c:	add	x2, sp, #0x10
     b50:	ldr	x1, [x1]
     b54:	bl	3d4 <grub_macho_cmds_iterate>
     b58:	adrp	x0, 0 <grub_macho_close>
     b5c:	ldr	x0, [x0]
     b60:	ldr	w0, [x0]
     b64:	ldp	x29, x30, [sp], #48
     b68:	ret
     b6c:	nop
	...

0000000000000b80 <grub_macho_get_entry_point32>:
     b80:	stp	x29, x30, [sp, #-32]!
     b84:	mov	x3, x1
     b88:	adrp	x1, 0 <grub_macho_close>
     b8c:	mov	x29, sp
     b90:	ldr	x1, [x1]
     b94:	add	x2, sp, #0x1c
     b98:	str	wzr, [sp, #28]
     b9c:	bl	3d4 <grub_macho_cmds_iterate>
     ba0:	ldr	w0, [sp, #28]
     ba4:	ldp	x29, x30, [sp], #32
     ba8:	ret
     bac:	nop
	...

0000000000000bb8 <find_entry_point>:
     bb8:	ldr	w0, [x1]
     bbc:	cmp	w0, #0x5
     bc0:	b.ne	bcc <find_entry_point+0x14>  // b.any
     bc4:	ldr	x0, [x1, #144]
     bc8:	str	x0, [x2]
     bcc:	mov	w0, #0x0                   	// #0
     bd0:	ret

0000000000000bd4 <grub_macho_cmds_iterate>:
     bd4:	stp	x29, x30, [sp, #-64]!
     bd8:	mov	x29, sp
     bdc:	stp	x19, x20, [sp, #16]
     be0:	mov	x19, x0
     be4:	ldr	w0, [x0, #128]
     be8:	stp	x21, x22, [sp, #32]
     bec:	mov	x22, x1
     bf0:	str	x23, [sp, #48]
     bf4:	mov	x23, x2
     bf8:	cbz	w0, d54 <grub_macho_cmds_iterate+0x180>
     bfc:	ldr	x0, [x19, #120]
     c00:	cbnz	x0, d54 <grub_macho_cmds_iterate+0x180>
     c04:	ldr	x0, [x19, #144]
     c08:	mov	x21, x3
     c0c:	bl	0 <grub_malloc>
     c10:	str	x0, [x19, #120]
     c14:	cbnz	x0, c28 <grub_macho_cmds_iterate+0x54>
     c18:	adrp	x0, 0 <grub_macho_close>
     c1c:	ldr	x0, [x0]
     c20:	ldr	w0, [x0]
     c24:	b	ca4 <grub_macho_cmds_iterate+0xd0>
     c28:	ldr	x0, [x19, #136]
     c2c:	bl	0 <grub_malloc>
     c30:	mov	x20, x0
     c34:	cbnz	x0, c48 <grub_macho_cmds_iterate+0x74>
     c38:	ldr	x0, [x19, #120]
     c3c:	bl	0 <grub_free>
     c40:	str	xzr, [x19, #120]
     c44:	b	c18 <grub_macho_cmds_iterate+0x44>
     c48:	ldr	x0, [x19]
     c4c:	ldr	x1, [x19, #80]
     c50:	add	x1, x1, #0x180
     c54:	bl	0 <grub_file_seek>
     c58:	cmn	x0, #0x1
     c5c:	b.ne	cb8 <grub_macho_cmds_iterate+0xe4>  // b.any
     c60:	adrp	x0, 0 <grub_macho_close>
     c64:	ldr	x22, [x0]
     c68:	ldr	w0, [x22]
     c6c:	cbnz	w0, c84 <grub_macho_cmds_iterate+0xb0>
     c70:	adrp	x0, 0 <grub_macho_close>
     c74:	mov	x2, x21
     c78:	ldr	x1, [x0]
     c7c:	mov	w0, #0x15                  	// #21
     c80:	bl	0 <grub_error>
     c84:	mov	x0, x20
     c88:	bl	0 <grub_free>
     c8c:	ldr	x0, [x19, #120]
     c90:	bl	0 <grub_free>
     c94:	str	xzr, [x19, #120]
     c98:	mov	x0, #0xffffffffffffffff    	// #-1
     c9c:	str	x0, [x19, #80]
     ca0:	ldr	w0, [x22]
     ca4:	ldp	x19, x20, [sp, #16]
     ca8:	ldp	x21, x22, [sp, #32]
     cac:	ldr	x23, [sp, #48]
     cb0:	ldp	x29, x30, [sp], #64
     cb4:	ret
     cb8:	ldr	x0, [x19]
     cbc:	mov	x1, x20
     cc0:	ldr	x2, [x19, #136]
     cc4:	bl	0 <grub_file_read>
     cc8:	mov	x3, x0
     ccc:	ldr	x0, [x19, #136]
     cd0:	cmp	x3, x0
     cd4:	b.ne	c60 <grub_macho_cmds_iterate+0x8c>  // b.any
     cd8:	ldr	x0, [x19, #120]
     cdc:	add	x3, x20, x3
     ce0:	ldr	x1, [x19, #144]
     ce4:	mov	x2, x20
     ce8:	add	x1, x0, x1
     cec:	bl	13b8 <grub_decompress_lzss>
     cf0:	ldr	x1, [x19, #144]
     cf4:	cmp	x0, x1
     cf8:	b.ne	c60 <grub_macho_cmds_iterate+0x8c>  // b.any
     cfc:	mov	x0, x20
     d00:	bl	0 <grub_free>
     d04:	ldr	x0, [x19, #120]
     d08:	ldp	w1, w3, [x0, #16]
     d0c:	add	x0, x0, #0x20
     d10:	stp	x3, x0, [x19, #104]
     d14:	add	x3, x3, #0x20
     d18:	ldr	x0, [x19, #144]
     d1c:	str	w1, [x19, #96]
     d20:	cmp	x3, x0
     d24:	b.cc	d54 <grub_macho_cmds_iterate+0x180>  // b.lo, b.ul, b.last
     d28:	adrp	x0, 0 <grub_macho_close>
     d2c:	mov	x2, x21
     d30:	ldr	x1, [x0]
     d34:	mov	w0, #0x15                  	// #21
     d38:	bl	0 <grub_error>
     d3c:	ldr	x0, [x19, #120]
     d40:	bl	0 <grub_free>
     d44:	str	xzr, [x19, #120]
     d48:	mov	x0, #0xffffffffffffffff    	// #-1
     d4c:	str	x0, [x19, #80]
     d50:	b	c18 <grub_macho_cmds_iterate+0x44>
     d54:	ldr	x20, [x19, #112]
     d58:	mov	w21, #0x0                   	// #0
     d5c:	cbnz	x20, da0 <grub_macho_cmds_iterate+0x1cc>
     d60:	adrp	x0, 0 <grub_macho_close>
     d64:	ldp	x19, x20, [sp, #16]
     d68:	ldp	x21, x22, [sp, #32]
     d6c:	ldr	x23, [sp, #48]
     d70:	ldp	x29, x30, [sp], #64
     d74:	ldr	x1, [x0]
     d78:	mov	w0, #0x15                  	// #21
     d7c:	b	0 <grub_error>
     d80:	mov	x2, x23
     d84:	mov	x1, x20
     d88:	mov	x0, x19
     d8c:	blr	x22
     d90:	cbnz	w0, c18 <grub_macho_cmds_iterate+0x44>
     d94:	ldr	w0, [x20, #4]
     d98:	add	w21, w21, #0x1
     d9c:	add	x20, x20, x0
     da0:	ldr	w0, [x19, #96]
     da4:	cmp	w0, w21
     da8:	b.gt	d80 <grub_macho_cmds_iterate+0x1ac>
     dac:	b	c18 <grub_macho_cmds_iterate+0x44>
	...

0000000000000dc8 <calcsize>:
     dc8:	ldr	w0, [x1]
     dcc:	cmp	w0, #0x19
     dd0:	b.ne	e2c <calcsize+0x64>  // b.any
     dd4:	ldr	x0, [x1, #32]
     dd8:	cbz	x0, e2c <calcsize+0x64>
     ddc:	ldr	x0, [x1, #48]
     de0:	cbnz	x0, dec <calcsize+0x24>
     de4:	ldr	w0, [x2]
     de8:	tbnz	w0, #0, e2c <calcsize+0x64>
     dec:	ldr	w0, [x2, #4]
     df0:	ldr	x3, [x1, #24]
     df4:	add	w0, w0, #0x1
     df8:	str	w0, [x2, #4]
     dfc:	ldr	x0, [x2, #8]
     e00:	ldr	x4, [x0]
     e04:	cmp	x3, x4
     e08:	b.cs	e10 <calcsize+0x48>  // b.hs, b.nlast
     e0c:	str	x3, [x0]
     e10:	ldp	x0, x1, [x1, #24]
     e14:	add	x0, x0, x1
     e18:	ldr	x1, [x2, #16]
     e1c:	ldr	x2, [x1]
     e20:	cmp	x0, x2
     e24:	b.ls	e2c <calcsize+0x64>  // b.plast
     e28:	str	x0, [x1]
     e2c:	mov	w0, #0x0                   	// #0
     e30:	ret

0000000000000e34 <do_load>:
     e34:	stp	x29, x30, [sp, #-64]!
     e38:	mov	x29, sp
     e3c:	stp	x19, x20, [sp, #16]
     e40:	stp	x21, x22, [sp, #32]
     e44:	mov	x22, x0
     e48:	ldr	w0, [x1]
     e4c:	str	x23, [sp, #48]
     e50:	cmp	w0, #0x19
     e54:	b.eq	e60 <do_load+0x2c>  // b.none
     e58:	mov	w0, #0x0                   	// #0
     e5c:	b	f98 <do_load+0x164>
     e60:	ldr	x20, [x1, #48]
     e64:	mov	x19, x1
     e68:	mov	x21, x2
     e6c:	cbnz	x20, e78 <do_load+0x44>
     e70:	ldr	w0, [x2]
     e74:	tbnz	w0, #0, e58 <do_load+0x24>
     e78:	ldr	x2, [x19, #32]
     e7c:	cbz	x2, e58 <do_load+0x24>
     e80:	cbnz	x20, eb4 <do_load+0x80>
     e84:	ldr	x2, [x19, #32]
     e88:	ldr	x1, [x19, #48]
     e8c:	cmp	x1, x2
     e90:	b.cs	e58 <do_load+0x24>  // b.hs, b.nlast
     e94:	ldr	x3, [x21, #8]
     e98:	sub	x2, x2, x1
     e9c:	ldr	x0, [x19, #24]
     ea0:	add	x0, x1, x0
     ea4:	mov	w1, #0x0                   	// #0
     ea8:	add	x0, x3, x0
     eac:	bl	0 <grub_memset>
     eb0:	b	e58 <do_load+0x24>
     eb4:	ldr	x3, [x22, #120]
     eb8:	cmp	x20, x2
     ebc:	csel	x20, x20, x2, ls  // ls = plast
     ec0:	ldr	x1, [x19, #40]
     ec4:	cbz	x3, f7c <do_load+0x148>
     ec8:	ldr	x2, [x22, #144]
     ecc:	add	x0, x20, x1
     ed0:	cmp	x0, x2
     ed4:	b.hi	ff4 <do_load+0x1c0>  // b.pmore
     ed8:	ldr	x4, [x21, #8]
     edc:	mov	x2, x20
     ee0:	ldr	x0, [x19, #24]
     ee4:	add	x1, x3, x1
     ee8:	add	x0, x4, x0
     eec:	bl	0 <grub_memmove>
     ef0:	ldr	x0, [x21, #24]
     ef4:	cbz	x0, e84 <do_load+0x50>
     ef8:	ldp	x2, x0, [x19, #24]
     efc:	adrp	x23, 0 <grub_macho_close>
     f00:	ldr	x20, [x21, #8]
     f04:	ldr	x1, [x19, #48]
     f08:	add	x20, x20, x2
     f0c:	sub	x22, x0, #0x16
     f10:	cmp	x1, x0
     f14:	sub	x2, x1, #0x16
     f18:	csel	x22, x22, x2, cs  // cs = hs, nlast
     f1c:	add	x22, x20, x22
     f20:	cmp	x22, x20
     f24:	b.ls	e84 <do_load+0x50>  // b.plast
     f28:	ldr	x1, [x23]
     f2c:	mov	x0, x20
     f30:	mov	x2, #0x16                  	// #22
     f34:	bl	0 <grub_memcmp>
     f38:	cbnz	w0, ffc <do_load+0x1c8>
     f3c:	ldr	x1, [x21, #24]
     f40:	add	x20, x20, #0x16
     f44:	add	x22, x22, #0x16
     f48:	mov	w3, #0xa                   	// #10
     f4c:	str	wzr, [x1]
     f50:	cmp	x22, x20
     f54:	b.ls	e84 <do_load+0x50>  // b.plast
     f58:	ldrb	w0, [x20]
     f5c:	sub	w0, w0, #0x30
     f60:	cmp	w0, #0x9
     f64:	b.hi	e84 <do_load+0x50>  // b.pmore
     f68:	ldr	w2, [x1]
     f6c:	add	x20, x20, #0x1
     f70:	madd	w0, w2, w3, w0
     f74:	str	w0, [x1]
     f78:	b	f50 <do_load+0x11c>
     f7c:	ldr	x0, [x22, #80]
     f80:	add	x1, x1, x0
     f84:	ldr	x0, [x22]
     f88:	bl	0 <grub_file_seek>
     f8c:	cmn	x0, #0x1
     f90:	b.ne	fac <do_load+0x178>  // b.any
     f94:	mov	w0, #0x1                   	// #1
     f98:	ldp	x19, x20, [sp, #16]
     f9c:	ldp	x21, x22, [sp, #32]
     fa0:	ldr	x23, [sp, #48]
     fa4:	ldp	x29, x30, [sp], #64
     fa8:	ret
     fac:	ldr	x1, [x21, #8]
     fb0:	mov	x2, x20
     fb4:	ldr	x0, [x19, #24]
     fb8:	add	x1, x1, x0
     fbc:	ldr	x0, [x22]
     fc0:	bl	0 <grub_file_read>
     fc4:	cmp	x20, x0
     fc8:	b.eq	ef0 <do_load+0xbc>  // b.none
     fcc:	adrp	x0, 0 <grub_macho_close>
     fd0:	ldr	x0, [x0]
     fd4:	ldr	w0, [x0]
     fd8:	cbnz	w0, f94 <do_load+0x160>
     fdc:	adrp	x0, 0 <grub_macho_close>
     fe0:	ldr	x2, [x21, #16]
     fe4:	ldr	x1, [x0]
     fe8:	mov	w0, #0x15                  	// #21
     fec:	bl	0 <grub_error>
     ff0:	b	f94 <do_load+0x160>
     ff4:	mov	x0, #0xffffffffffffffff    	// #-1
     ff8:	b	fc4 <do_load+0x190>
     ffc:	add	x20, x20, #0x1
    1000:	b	f20 <do_load+0xec>
    1004:	nop
	...

0000000000001020 <grub_macho_parse64>:
    1020:	stp	x29, x30, [sp, #-64]!
    1024:	mov	x29, sp
    1028:	stp	x19, x20, [sp, #16]
    102c:	mov	x20, x1
    1030:	ldr	x1, [x0, #80]
    1034:	cmn	x1, #0x1
    1038:	b.eq	10e0 <grub_macho_parse64+0xc0>  // b.none
    103c:	mov	x19, x0
    1040:	ldr	x0, [x0]
    1044:	bl	0 <grub_file_seek>
    1048:	cmn	x0, #0x1
    104c:	b.ne	1064 <grub_macho_parse64+0x44>  // b.any
    1050:	adrp	x0, 0 <grub_macho_close>
    1054:	ldr	x0, [x0]
    1058:	ldr	w0, [x0]
    105c:	cbnz	w0, 10cc <grub_macho_parse64+0xac>
    1060:	b	10b8 <grub_macho_parse64+0x98>
    1064:	ldr	x0, [x19]
    1068:	mov	x2, #0x20                  	// #32
    106c:	add	x1, sp, x2
    1070:	bl	0 <grub_file_read>
    1074:	cmp	x0, #0x20
    1078:	b.ne	1050 <grub_macho_parse64+0x30>  // b.any
    107c:	adrp	x0, 0 <grub_macho_close>
    1080:	mov	x2, #0x8                   	// #8
    1084:	ldr	x1, [x0]
    1088:	add	x0, sp, #0x20
    108c:	bl	0 <grub_memcmp>
    1090:	cbnz	w0, 10ec <grub_macho_parse64+0xcc>
    1094:	ldr	w0, [sp, #48]
    1098:	rev	w0, w0
    109c:	str	x0, [x19, #136]
    10a0:	ldr	w0, [sp, #44]
    10a4:	rev	w1, w0
    10a8:	rev	w0, w0
    10ac:	str	x0, [x19, #144]
    10b0:	cmp	w1, #0x1f
    10b4:	b.hi	10d8 <grub_macho_parse64+0xb8>  // b.pmore
    10b8:	adrp	x0, 0 <grub_macho_close>
    10bc:	mov	x2, x20
    10c0:	ldr	x1, [x0]
    10c4:	mov	w0, #0x15                  	// #21
    10c8:	bl	0 <grub_error>
    10cc:	mov	x0, #0xffffffffffffffff    	// #-1
    10d0:	str	x0, [x19, #80]
    10d4:	b	10e0 <grub_macho_parse64+0xc0>
    10d8:	mov	w0, #0x1                   	// #1
    10dc:	str	w0, [x19, #128]
    10e0:	ldp	x19, x20, [sp, #16]
    10e4:	ldp	x29, x30, [sp], #64
    10e8:	ret
    10ec:	ldr	w1, [sp, #32]
    10f0:	mov	w0, #0xfacf                	// #64207
    10f4:	movk	w0, #0xfeed, lsl #16
    10f8:	cmp	w1, w0
    10fc:	b.eq	1114 <grub_macho_parse64+0xf4>  // b.none
    1100:	adrp	x0, 0 <grub_macho_close>
    1104:	ldr	x1, [x0]
    1108:	mov	w0, #0x15                  	// #21
    110c:	bl	0 <grub_error>
    1110:	b	10cc <grub_macho_parse64+0xac>
    1114:	ldr	w0, [sp, #48]
    1118:	str	w0, [x19, #96]
    111c:	ldr	w0, [sp, #52]
    1120:	str	x0, [x19, #104]
    1124:	bl	0 <grub_malloc>
    1128:	str	x0, [x19, #112]
    112c:	cbz	x0, 10e0 <grub_macho_parse64+0xc0>
    1130:	ldr	x0, [x19]
    1134:	ldr	x1, [x19, #80]
    1138:	add	x1, x1, #0x20
    113c:	bl	0 <grub_file_seek>
    1140:	cmn	x0, #0x1
    1144:	b.eq	1050 <grub_macho_parse64+0x30>  // b.none
    1148:	ldp	x2, x1, [x19, #104]
    114c:	ldr	x0, [x19]
    1150:	bl	0 <grub_file_read>
    1154:	ldr	x1, [x19, #104]
    1158:	cmp	x0, x1
    115c:	b.ne	1050 <grub_macho_parse64+0x30>  // b.any
    1160:	b	10e0 <grub_macho_parse64+0xc0>
    1164:	nop
	...

0000000000001188 <grub_macho_filesize64>:
    1188:	ldr	x1, [x0, #80]
    118c:	cmn	x1, #0x1
    1190:	b.eq	11a0 <grub_macho_filesize64+0x18>  // b.none
    1194:	ldr	x0, [x0, #88]
    1198:	sub	x0, x0, x1
    119c:	ret
    11a0:	mov	x0, #0x0                   	// #0
    11a4:	b	119c <grub_macho_filesize64+0x14>

00000000000011a8 <grub_macho_readfile64>:
    11a8:	stp	x29, x30, [sp, #-48]!
    11ac:	mov	x29, sp
    11b0:	stp	x19, x20, [sp, #16]
    11b4:	mov	x20, x1
    11b8:	ldr	x1, [x0, #80]
    11bc:	str	x21, [sp, #32]
    11c0:	cmn	x1, #0x1
    11c4:	b.ne	11e4 <grub_macho_readfile64+0x3c>  // b.any
    11c8:	adrp	x0, 0 <grub_macho_close>
    11cc:	ldp	x19, x20, [sp, #16]
    11d0:	ldr	x21, [sp, #32]
    11d4:	ldp	x29, x30, [sp], #48
    11d8:	ldr	x1, [x0]
    11dc:	mov	w0, #0x15                  	// #21
    11e0:	b	0 <grub_error>
    11e4:	mov	x19, x0
    11e8:	mov	x21, x2
    11ec:	ldr	x0, [x0]
    11f0:	bl	0 <grub_file_seek>
    11f4:	cmn	x0, #0x1
    11f8:	b.ne	1218 <grub_macho_readfile64+0x70>  // b.any
    11fc:	adrp	x0, 0 <grub_macho_close>
    1200:	ldr	x0, [x0]
    1204:	ldr	w0, [x0]
    1208:	ldp	x19, x20, [sp, #16]
    120c:	ldr	x21, [sp, #32]
    1210:	ldp	x29, x30, [sp], #48
    1214:	ret
    1218:	ldp	x0, x2, [x19, #80]
    121c:	mov	x1, x21
    1220:	sub	x2, x2, x0
    1224:	ldr	x0, [x19]
    1228:	bl	0 <grub_file_read>
    122c:	ldp	x2, x1, [x19, #80]
    1230:	sub	x1, x1, x2
    1234:	cmp	x1, x0
    1238:	b.eq	1268 <grub_macho_readfile64+0xc0>  // b.none
    123c:	adrp	x0, 0 <grub_macho_close>
    1240:	ldr	x19, [x0]
    1244:	ldr	w0, [x19]
    1248:	cbnz	w0, 1260 <grub_macho_readfile64+0xb8>
    124c:	adrp	x0, 0 <grub_macho_close>
    1250:	mov	x2, x20
    1254:	ldr	x1, [x0]
    1258:	mov	w0, #0x15                  	// #21
    125c:	bl	0 <grub_error>
    1260:	ldr	w0, [x19]
    1264:	b	1208 <grub_macho_readfile64+0x60>
    1268:	mov	w0, #0x0                   	// #0
    126c:	b	1208 <grub_macho_readfile64+0x60>
	...

0000000000001288 <grub_macho_size64>:
    1288:	stp	x29, x30, [sp, #-64]!
    128c:	mov	x29, sp
    1290:	stp	x19, x20, [sp, #16]
    1294:	mov	x19, x1
    1298:	mov	x20, x2
    129c:	stp	x1, x2, [sp, #48]
    12a0:	mov	x1, #0xffffffffffffffff    	// #-1
    12a4:	str	x1, [x19]
    12a8:	adrp	x1, 0 <grub_macho_close>
    12ac:	str	xzr, [x2]
    12b0:	add	x2, sp, #0x28
    12b4:	ldr	x1, [x1]
    12b8:	stp	w3, wzr, [sp, #40]
    12bc:	mov	x3, x4
    12c0:	bl	bd4 <grub_macho_cmds_iterate>
    12c4:	ldr	w0, [sp, #44]
    12c8:	cbnz	w0, 12e8 <grub_macho_size64+0x60>
    12cc:	adrp	x0, 0 <grub_macho_close>
    12d0:	ldr	x1, [x0]
    12d4:	mov	w0, #0x15                  	// #21
    12d8:	bl	0 <grub_error>
    12dc:	ldp	x19, x20, [sp, #16]
    12e0:	ldp	x29, x30, [sp], #64
    12e4:	ret
    12e8:	ldr	x0, [x19]
    12ec:	ldr	x1, [x20]
    12f0:	cmp	x1, x0
    12f4:	b.cs	1304 <grub_macho_size64+0x7c>  // b.hs, b.nlast
    12f8:	adrp	x0, 0 <grub_macho_close>
    12fc:	ldr	x1, [x0]
    1300:	b	12d4 <grub_macho_size64+0x4c>
    1304:	mov	w0, #0x0                   	// #0
    1308:	b	12dc <grub_macho_size64+0x54>
    130c:	nop
	...

0000000000001328 <grub_macho_load64>:
    1328:	stp	x29, x30, [sp, #-48]!
    132c:	mov	x29, sp
    1330:	str	w3, [sp, #16]
    1334:	stp	x2, x1, [sp, #24]
    1338:	str	x4, [sp, #40]
    133c:	cbz	x4, 1344 <grub_macho_load64+0x1c>
    1340:	str	wzr, [x4]
    1344:	mov	x3, x1
    1348:	adrp	x1, 0 <grub_macho_close>
    134c:	add	x2, sp, #0x10
    1350:	ldr	x1, [x1]
    1354:	bl	bd4 <grub_macho_cmds_iterate>
    1358:	adrp	x0, 0 <grub_macho_close>
    135c:	ldr	x0, [x0]
    1360:	ldr	w0, [x0]
    1364:	ldp	x29, x30, [sp], #48
    1368:	ret
    136c:	nop
	...

0000000000001380 <grub_macho_get_entry_point64>:
    1380:	stp	x29, x30, [sp, #-32]!
    1384:	mov	x3, x1
    1388:	adrp	x1, 0 <grub_macho_close>
    138c:	mov	x29, sp
    1390:	ldr	x1, [x1]
    1394:	add	x2, sp, #0x18
    1398:	str	xzr, [sp, #24]
    139c:	bl	bd4 <grub_macho_cmds_iterate>
    13a0:	ldr	x0, [sp, #24]
    13a4:	ldp	x29, x30, [sp], #32
    13a8:	ret
    13ac:	nop
	...

00000000000013b8 <grub_decompress_lzss>:
    13b8:	mov	x5, #0x0                   	// #0
    13bc:	adrp	x6, 0 <grub_macho_close>
    13c0:	mov	w4, #0x20                  	// #32
    13c4:	ldr	x9, [x6]
    13c8:	strb	w4, [x5, x9]
    13cc:	add	x5, x5, #0x1
    13d0:	cmp	x5, #0xfee
    13d4:	b.ne	13c4 <grub_decompress_lzss+0xc>  // b.any
    13d8:	mov	x4, x0
    13dc:	mov	w6, #0x0                   	// #0
    13e0:	lsr	w6, w6, #1
    13e4:	tbnz	w6, #8, 13f8 <grub_decompress_lzss+0x40>
    13e8:	cmp	x2, x3
    13ec:	b.cs	1498 <grub_decompress_lzss+0xe0>  // b.hs, b.nlast
    13f0:	ldrb	w6, [x2], #1
    13f4:	orr	w6, w6, #0xff00
    13f8:	tbz	w6, #0, 142c <grub_decompress_lzss+0x74>
    13fc:	cmp	x2, x3
    1400:	b.cs	1498 <grub_decompress_lzss+0xe0>  // b.hs, b.nlast
    1404:	mov	x8, x2
    1408:	cmp	x4, x1
    140c:	ldrb	w2, [x8], #1
    1410:	b.cs	1418 <grub_decompress_lzss+0x60>  // b.hs, b.nlast
    1414:	strb	w2, [x4], #1
    1418:	add	w7, w5, #0x1
    141c:	strb	w2, [x9, w5, sxtw]
    1420:	and	w5, w7, #0xfff
    1424:	mov	x2, x8
    1428:	b	13e0 <grub_decompress_lzss+0x28>
    142c:	cmp	x2, x3
    1430:	b.cs	1498 <grub_decompress_lzss+0xe0>  // b.hs, b.nlast
    1434:	mov	x8, x2
    1438:	ldrb	w10, [x8], #1
    143c:	cmp	x3, x8
    1440:	b.ls	1498 <grub_decompress_lzss+0xe0>  // b.plast
    1444:	add	x8, x2, #0x2
    1448:	ldrb	w2, [x2, #1]
    144c:	lsl	w7, w2, #4
    1450:	and	w2, w2, #0xf
    1454:	and	w7, w7, #0xf00
    1458:	add	w2, w2, #0x2
    145c:	orr	w7, w7, w10
    1460:	mov	w10, #0x0                   	// #0
    1464:	add	w11, w10, w7
    1468:	cmp	x1, x4
    146c:	and	x11, x11, #0xfff
    1470:	ldrb	w11, [x9, x11]
    1474:	b.ls	147c <grub_decompress_lzss+0xc4>  // b.plast
    1478:	strb	w11, [x4], #1
    147c:	strb	w11, [x9, w5, sxtw]
    1480:	add	w12, w5, #0x1
    1484:	add	w10, w10, #0x1
    1488:	and	w5, w12, #0xfff
    148c:	cmp	w2, w10
    1490:	b.ge	1464 <grub_decompress_lzss+0xac>  // b.tcont
    1494:	b	1424 <grub_decompress_lzss+0x6c>
    1498:	sub	x0, x4, x0
    149c:	ret
	...
