
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//column_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402250 <.init>:
  402250:	stp	x29, x30, [sp, #-16]!
  402254:	mov	x29, sp
  402258:	bl	402950 <scols_reset_iter@plt+0x60>
  40225c:	ldp	x29, x30, [sp], #16
  402260:	ret

Disassembly of section .plt:

0000000000402270 <mbrtowc@plt-0x20>:
  402270:	stp	x16, x30, [sp, #-16]!
  402274:	adrp	x16, 419000 <scols_reset_iter@plt+0x16710>
  402278:	ldr	x17, [x16, #4088]
  40227c:	add	x16, x16, #0xff8
  402280:	br	x17
  402284:	nop
  402288:	nop
  40228c:	nop

0000000000402290 <mbrtowc@plt>:
  402290:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402294:	ldr	x17, [x16]
  402298:	add	x16, x16, #0x0
  40229c:	br	x17

00000000004022a0 <memcpy@plt>:
  4022a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022a4:	ldr	x17, [x16, #8]
  4022a8:	add	x16, x16, #0x8
  4022ac:	br	x17

00000000004022b0 <_exit@plt>:
  4022b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022b4:	ldr	x17, [x16, #16]
  4022b8:	add	x16, x16, #0x10
  4022bc:	br	x17

00000000004022c0 <strtoul@plt>:
  4022c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022c4:	ldr	x17, [x16, #24]
  4022c8:	add	x16, x16, #0x18
  4022cc:	br	x17

00000000004022d0 <strlen@plt>:
  4022d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022d4:	ldr	x17, [x16, #32]
  4022d8:	add	x16, x16, #0x20
  4022dc:	br	x17

00000000004022e0 <fputs@plt>:
  4022e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022e4:	ldr	x17, [x16, #40]
  4022e8:	add	x16, x16, #0x28
  4022ec:	br	x17

00000000004022f0 <mbstowcs@plt>:
  4022f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4022f4:	ldr	x17, [x16, #48]
  4022f8:	add	x16, x16, #0x30
  4022fc:	br	x17

0000000000402300 <exit@plt>:
  402300:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402304:	ldr	x17, [x16, #56]
  402308:	add	x16, x16, #0x38
  40230c:	br	x17

0000000000402310 <dup@plt>:
  402310:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402314:	ldr	x17, [x16, #64]
  402318:	add	x16, x16, #0x40
  40231c:	br	x17

0000000000402320 <scols_line_refer_data@plt>:
  402320:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402324:	ldr	x17, [x16, #72]
  402328:	add	x16, x16, #0x48
  40232c:	br	x17

0000000000402330 <scols_line_get_column_cell@plt>:
  402330:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402334:	ldr	x17, [x16, #80]
  402338:	add	x16, x16, #0x50
  40233c:	br	x17

0000000000402340 <scols_table_set_name@plt>:
  402340:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402344:	ldr	x17, [x16, #88]
  402348:	add	x16, x16, #0x58
  40234c:	br	x17

0000000000402350 <strtod@plt>:
  402350:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402354:	ldr	x17, [x16, #96]
  402358:	add	x16, x16, #0x60
  40235c:	br	x17

0000000000402360 <scols_table_enable_noheadings@plt>:
  402360:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402364:	ldr	x17, [x16, #104]
  402368:	add	x16, x16, #0x68
  40236c:	br	x17

0000000000402370 <scols_column_get_header@plt>:
  402370:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402374:	ldr	x17, [x16, #112]
  402378:	add	x16, x16, #0x70
  40237c:	br	x17

0000000000402380 <scols_table_new_column@plt>:
  402380:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402384:	ldr	x17, [x16, #120]
  402388:	add	x16, x16, #0x78
  40238c:	br	x17

0000000000402390 <scols_free_iter@plt>:
  402390:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402394:	ldr	x17, [x16, #128]
  402398:	add	x16, x16, #0x80
  40239c:	br	x17

00000000004023a0 <ttyname@plt>:
  4023a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023a4:	ldr	x17, [x16, #136]
  4023a8:	add	x16, x16, #0x88
  4023ac:	br	x17

00000000004023b0 <sprintf@plt>:
  4023b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023b4:	ldr	x17, [x16, #144]
  4023b8:	add	x16, x16, #0x90
  4023bc:	br	x17

00000000004023c0 <__cxa_atexit@plt>:
  4023c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023c4:	ldr	x17, [x16, #152]
  4023c8:	add	x16, x16, #0x98
  4023cc:	br	x17

00000000004023d0 <fputc@plt>:
  4023d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023d4:	ldr	x17, [x16, #160]
  4023d8:	add	x16, x16, #0xa0
  4023dc:	br	x17

00000000004023e0 <putwchar@plt>:
  4023e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023e4:	ldr	x17, [x16, #168]
  4023e8:	add	x16, x16, #0xa8
  4023ec:	br	x17

00000000004023f0 <scols_table_set_column_separator@plt>:
  4023f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4023f4:	ldr	x17, [x16, #176]
  4023f8:	add	x16, x16, #0xb0
  4023fc:	br	x17

0000000000402400 <snprintf@plt>:
  402400:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402404:	ldr	x17, [x16, #184]
  402408:	add	x16, x16, #0xb8
  40240c:	br	x17

0000000000402410 <localeconv@plt>:
  402410:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402414:	ldr	x17, [x16, #192]
  402418:	add	x16, x16, #0xc0
  40241c:	br	x17

0000000000402420 <stpcpy@plt>:
  402420:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402424:	ldr	x17, [x16, #200]
  402428:	add	x16, x16, #0xc8
  40242c:	br	x17

0000000000402430 <fileno@plt>:
  402430:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402434:	ldr	x17, [x16, #208]
  402438:	add	x16, x16, #0xd0
  40243c:	br	x17

0000000000402440 <wcspbrk@plt>:
  402440:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402444:	ldr	x17, [x16, #216]
  402448:	add	x16, x16, #0xd8
  40244c:	br	x17

0000000000402450 <fclose@plt>:
  402450:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402454:	ldr	x17, [x16, #224]
  402458:	add	x16, x16, #0xe0
  40245c:	br	x17

0000000000402460 <fopen@plt>:
  402460:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402464:	ldr	x17, [x16, #232]
  402468:	add	x16, x16, #0xe8
  40246c:	br	x17

0000000000402470 <malloc@plt>:
  402470:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402474:	ldr	x17, [x16, #240]
  402478:	add	x16, x16, #0xf0
  40247c:	br	x17

0000000000402480 <wcwidth@plt>:
  402480:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402484:	ldr	x17, [x16, #248]
  402488:	add	x16, x16, #0xf8
  40248c:	br	x17

0000000000402490 <scols_column_get_flags@plt>:
  402490:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402494:	ldr	x17, [x16, #256]
  402498:	add	x16, x16, #0x100
  40249c:	br	x17

00000000004024a0 <__strtol_internal@plt>:
  4024a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024a4:	ldr	x17, [x16, #264]
  4024a8:	add	x16, x16, #0x108
  4024ac:	br	x17

00000000004024b0 <strncmp@plt>:
  4024b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024b4:	ldr	x17, [x16, #272]
  4024b8:	add	x16, x16, #0x110
  4024bc:	br	x17

00000000004024c0 <bindtextdomain@plt>:
  4024c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024c4:	ldr	x17, [x16, #280]
  4024c8:	add	x16, x16, #0x118
  4024cc:	br	x17

00000000004024d0 <__libc_start_main@plt>:
  4024d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024d4:	ldr	x17, [x16, #288]
  4024d8:	add	x16, x16, #0x120
  4024dc:	br	x17

00000000004024e0 <fgetc@plt>:
  4024e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024e4:	ldr	x17, [x16, #296]
  4024e8:	add	x16, x16, #0x128
  4024ec:	br	x17

00000000004024f0 <scols_table_get_column@plt>:
  4024f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4024f4:	ldr	x17, [x16, #304]
  4024f8:	add	x16, x16, #0x130
  4024fc:	br	x17

0000000000402500 <memset@plt>:
  402500:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402504:	ldr	x17, [x16, #312]
  402508:	add	x16, x16, #0x138
  40250c:	br	x17

0000000000402510 <scols_new_table@plt>:
  402510:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402514:	ldr	x17, [x16, #320]
  402518:	add	x16, x16, #0x140
  40251c:	br	x17

0000000000402520 <scols_column_set_flags@plt>:
  402520:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402524:	ldr	x17, [x16, #328]
  402528:	add	x16, x16, #0x148
  40252c:	br	x17

0000000000402530 <__strtoul_internal@plt>:
  402530:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402534:	ldr	x17, [x16, #336]
  402538:	add	x16, x16, #0x150
  40253c:	br	x17

0000000000402540 <calloc@plt>:
  402540:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402544:	ldr	x17, [x16, #344]
  402548:	add	x16, x16, #0x158
  40254c:	br	x17

0000000000402550 <strcasecmp@plt>:
  402550:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402554:	ldr	x17, [x16, #352]
  402558:	add	x16, x16, #0x160
  40255c:	br	x17

0000000000402560 <realloc@plt>:
  402560:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402564:	ldr	x17, [x16, #360]
  402568:	add	x16, x16, #0x168
  40256c:	br	x17

0000000000402570 <strdup@plt>:
  402570:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402574:	ldr	x17, [x16, #368]
  402578:	add	x16, x16, #0x170
  40257c:	br	x17

0000000000402580 <scols_table_new_line@plt>:
  402580:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402584:	ldr	x17, [x16, #376]
  402588:	add	x16, x16, #0x178
  40258c:	br	x17

0000000000402590 <wcstok@plt>:
  402590:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402594:	ldr	x17, [x16, #384]
  402598:	add	x16, x16, #0x180
  40259c:	br	x17

00000000004025a0 <close@plt>:
  4025a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025a4:	ldr	x17, [x16, #392]
  4025a8:	add	x16, x16, #0x188
  4025ac:	br	x17

00000000004025b0 <scols_table_is_json@plt>:
  4025b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025b4:	ldr	x17, [x16, #400]
  4025b8:	add	x16, x16, #0x190
  4025bc:	br	x17

00000000004025c0 <__gmon_start__@plt>:
  4025c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025c4:	ldr	x17, [x16, #408]
  4025c8:	add	x16, x16, #0x198
  4025cc:	br	x17

00000000004025d0 <abort@plt>:
  4025d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025d4:	ldr	x17, [x16, #416]
  4025d8:	add	x16, x16, #0x1a0
  4025dc:	br	x17

00000000004025e0 <scols_table_set_termforce@plt>:
  4025e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025e4:	ldr	x17, [x16, #424]
  4025e8:	add	x16, x16, #0x1a8
  4025ec:	br	x17

00000000004025f0 <scols_table_get_ncols@plt>:
  4025f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4025f4:	ldr	x17, [x16, #432]
  4025f8:	add	x16, x16, #0x1b0
  4025fc:	br	x17

0000000000402600 <scols_table_enable_header_repeat@plt>:
  402600:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402604:	ldr	x17, [x16, #440]
  402608:	add	x16, x16, #0x1b8
  40260c:	br	x17

0000000000402610 <scols_table_next_line@plt>:
  402610:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402614:	ldr	x17, [x16, #448]
  402618:	add	x16, x16, #0x1c0
  40261c:	br	x17

0000000000402620 <feof@plt>:
  402620:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402624:	ldr	x17, [x16, #456]
  402628:	add	x16, x16, #0x1c8
  40262c:	br	x17

0000000000402630 <textdomain@plt>:
  402630:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402634:	ldr	x17, [x16, #464]
  402638:	add	x16, x16, #0x1d0
  40263c:	br	x17

0000000000402640 <getopt_long@plt>:
  402640:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402644:	ldr	x17, [x16, #472]
  402648:	add	x16, x16, #0x1d8
  40264c:	br	x17

0000000000402650 <strcmp@plt>:
  402650:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402654:	ldr	x17, [x16, #480]
  402658:	add	x16, x16, #0x1e0
  40265c:	br	x17

0000000000402660 <warn@plt>:
  402660:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402664:	ldr	x17, [x16, #488]
  402668:	add	x16, x16, #0x1e8
  40266c:	br	x17

0000000000402670 <__ctype_b_loc@plt>:
  402670:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402674:	ldr	x17, [x16, #496]
  402678:	add	x16, x16, #0x1f0
  40267c:	br	x17

0000000000402680 <strtol@plt>:
  402680:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402684:	ldr	x17, [x16, #504]
  402688:	add	x16, x16, #0x1f8
  40268c:	br	x17

0000000000402690 <scols_table_next_column@plt>:
  402690:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402694:	ldr	x17, [x16, #512]
  402698:	add	x16, x16, #0x200
  40269c:	br	x17

00000000004026a0 <scols_cell_get_data@plt>:
  4026a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026a4:	ldr	x17, [x16, #520]
  4026a8:	add	x16, x16, #0x208
  4026ac:	br	x17

00000000004026b0 <free@plt>:
  4026b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026b4:	ldr	x17, [x16, #528]
  4026b8:	add	x16, x16, #0x210
  4026bc:	br	x17

00000000004026c0 <scols_line_is_ancestor@plt>:
  4026c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026c4:	ldr	x17, [x16, #536]
  4026c8:	add	x16, x16, #0x218
  4026cc:	br	x17

00000000004026d0 <__ctype_get_mb_cur_max@plt>:
  4026d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026d4:	ldr	x17, [x16, #544]
  4026d8:	add	x16, x16, #0x220
  4026dc:	br	x17

00000000004026e0 <scols_table_get_nlines@plt>:
  4026e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026e4:	ldr	x17, [x16, #552]
  4026e8:	add	x16, x16, #0x228
  4026ec:	br	x17

00000000004026f0 <scols_table_enable_json@plt>:
  4026f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4026f4:	ldr	x17, [x16, #560]
  4026f8:	add	x16, x16, #0x230
  4026fc:	br	x17

0000000000402700 <vasprintf@plt>:
  402700:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402704:	ldr	x17, [x16, #568]
  402708:	add	x16, x16, #0x238
  40270c:	br	x17

0000000000402710 <scols_table_move_column@plt>:
  402710:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402714:	ldr	x17, [x16, #576]
  402718:	add	x16, x16, #0x240
  40271c:	br	x17

0000000000402720 <scols_table_set_termwidth@plt>:
  402720:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402724:	ldr	x17, [x16, #584]
  402728:	add	x16, x16, #0x248
  40272c:	br	x17

0000000000402730 <strndup@plt>:
  402730:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402734:	ldr	x17, [x16, #592]
  402738:	add	x16, x16, #0x250
  40273c:	br	x17

0000000000402740 <strspn@plt>:
  402740:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402744:	ldr	x17, [x16, #600]
  402748:	add	x16, x16, #0x258
  40274c:	br	x17

0000000000402750 <strchr@plt>:
  402750:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402754:	ldr	x17, [x16, #608]
  402758:	add	x16, x16, #0x260
  40275c:	br	x17

0000000000402760 <fflush@plt>:
  402760:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402764:	ldr	x17, [x16, #616]
  402768:	add	x16, x16, #0x268
  40276c:	br	x17

0000000000402770 <scols_print_table@plt>:
  402770:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402774:	ldr	x17, [x16, #624]
  402778:	add	x16, x16, #0x270
  40277c:	br	x17

0000000000402780 <warnx@plt>:
  402780:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402784:	ldr	x17, [x16, #632]
  402788:	add	x16, x16, #0x278
  40278c:	br	x17

0000000000402790 <memchr@plt>:
  402790:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402794:	ldr	x17, [x16, #640]
  402798:	add	x16, x16, #0x280
  40279c:	br	x17

00000000004027a0 <isatty@plt>:
  4027a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027a4:	ldr	x17, [x16, #648]
  4027a8:	add	x16, x16, #0x288
  4027ac:	br	x17

00000000004027b0 <wcstombs@plt>:
  4027b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027b4:	ldr	x17, [x16, #656]
  4027b8:	add	x16, x16, #0x290
  4027bc:	br	x17

00000000004027c0 <fputws@plt>:
  4027c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027c4:	ldr	x17, [x16, #664]
  4027c8:	add	x16, x16, #0x298
  4027cc:	br	x17

00000000004027d0 <scols_new_iter@plt>:
  4027d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027d4:	ldr	x17, [x16, #672]
  4027d8:	add	x16, x16, #0x2a0
  4027dc:	br	x17

00000000004027e0 <dcgettext@plt>:
  4027e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027e4:	ldr	x17, [x16, #680]
  4027e8:	add	x16, x16, #0x2a8
  4027ec:	br	x17

00000000004027f0 <scols_line_add_child@plt>:
  4027f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4027f4:	ldr	x17, [x16, #688]
  4027f8:	add	x16, x16, #0x2b0
  4027fc:	br	x17

0000000000402800 <errx@plt>:
  402800:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402804:	ldr	x17, [x16, #696]
  402808:	add	x16, x16, #0x2b8
  40280c:	br	x17

0000000000402810 <iswprint@plt>:
  402810:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402814:	ldr	x17, [x16, #704]
  402818:	add	x16, x16, #0x2c0
  40281c:	br	x17

0000000000402820 <strcspn@plt>:
  402820:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402824:	ldr	x17, [x16, #712]
  402828:	add	x16, x16, #0x2c8
  40282c:	br	x17

0000000000402830 <printf@plt>:
  402830:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402834:	ldr	x17, [x16, #720]
  402838:	add	x16, x16, #0x2d0
  40283c:	br	x17

0000000000402840 <__assert_fail@plt>:
  402840:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402844:	ldr	x17, [x16, #728]
  402848:	add	x16, x16, #0x2d8
  40284c:	br	x17

0000000000402850 <__errno_location@plt>:
  402850:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402854:	ldr	x17, [x16, #736]
  402858:	add	x16, x16, #0x2e0
  40285c:	br	x17

0000000000402860 <getenv@plt>:
  402860:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402864:	ldr	x17, [x16, #744]
  402868:	add	x16, x16, #0x2e8
  40286c:	br	x17

0000000000402870 <scols_table_enable_noencoding@plt>:
  402870:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402874:	ldr	x17, [x16, #752]
  402878:	add	x16, x16, #0x2f0
  40287c:	br	x17

0000000000402880 <__getdelim@plt>:
  402880:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402884:	ldr	x17, [x16, #760]
  402888:	add	x16, x16, #0x2f8
  40288c:	br	x17

0000000000402890 <fprintf@plt>:
  402890:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  402894:	ldr	x17, [x16, #768]
  402898:	add	x16, x16, #0x300
  40289c:	br	x17

00000000004028a0 <scols_init_debug@plt>:
  4028a0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028a4:	ldr	x17, [x16, #776]
  4028a8:	add	x16, x16, #0x308
  4028ac:	br	x17

00000000004028b0 <err@plt>:
  4028b0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028b4:	ldr	x17, [x16, #784]
  4028b8:	add	x16, x16, #0x310
  4028bc:	br	x17

00000000004028c0 <ioctl@plt>:
  4028c0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028c4:	ldr	x17, [x16, #792]
  4028c8:	add	x16, x16, #0x318
  4028cc:	br	x17

00000000004028d0 <setlocale@plt>:
  4028d0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028d4:	ldr	x17, [x16, #800]
  4028d8:	add	x16, x16, #0x320
  4028dc:	br	x17

00000000004028e0 <ferror@plt>:
  4028e0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028e4:	ldr	x17, [x16, #808]
  4028e8:	add	x16, x16, #0x328
  4028ec:	br	x17

00000000004028f0 <scols_reset_iter@plt>:
  4028f0:	adrp	x16, 41a000 <scols_reset_iter@plt+0x17710>
  4028f4:	ldr	x17, [x16, #816]
  4028f8:	add	x16, x16, #0x330
  4028fc:	br	x17

Disassembly of section .text:

0000000000402900 <.text>:
  402900:	mov	x29, #0x0                   	// #0
  402904:	mov	x30, #0x0                   	// #0
  402908:	mov	x5, x0
  40290c:	ldr	x1, [sp]
  402910:	add	x2, sp, #0x8
  402914:	mov	x6, sp
  402918:	movz	x0, #0x0, lsl #48
  40291c:	movk	x0, #0x0, lsl #32
  402920:	movk	x0, #0x40, lsl #16
  402924:	movk	x0, #0x2a0c
  402928:	movz	x3, #0x0, lsl #48
  40292c:	movk	x3, #0x0, lsl #32
  402930:	movk	x3, #0x40, lsl #16
  402934:	movk	x3, #0x8190
  402938:	movz	x4, #0x0, lsl #48
  40293c:	movk	x4, #0x0, lsl #32
  402940:	movk	x4, #0x40, lsl #16
  402944:	movk	x4, #0x8210
  402948:	bl	4024d0 <__libc_start_main@plt>
  40294c:	bl	4025d0 <abort@plt>
  402950:	adrp	x0, 419000 <scols_reset_iter@plt+0x16710>
  402954:	ldr	x0, [x0, #4064]
  402958:	cbz	x0, 402960 <scols_reset_iter@plt+0x70>
  40295c:	b	4025c0 <__gmon_start__@plt>
  402960:	ret
  402964:	nop
  402968:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17710>
  40296c:	add	x0, x0, #0x350
  402970:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17710>
  402974:	add	x1, x1, #0x350
  402978:	cmp	x1, x0
  40297c:	b.eq	402994 <scols_reset_iter@plt+0xa4>  // b.none
  402980:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402984:	ldr	x1, [x1, #576]
  402988:	cbz	x1, 402994 <scols_reset_iter@plt+0xa4>
  40298c:	mov	x16, x1
  402990:	br	x16
  402994:	ret
  402998:	adrp	x0, 41a000 <scols_reset_iter@plt+0x17710>
  40299c:	add	x0, x0, #0x350
  4029a0:	adrp	x1, 41a000 <scols_reset_iter@plt+0x17710>
  4029a4:	add	x1, x1, #0x350
  4029a8:	sub	x1, x1, x0
  4029ac:	lsr	x2, x1, #63
  4029b0:	add	x1, x2, x1, asr #3
  4029b4:	cmp	xzr, x1, asr #1
  4029b8:	asr	x1, x1, #1
  4029bc:	b.eq	4029d4 <scols_reset_iter@plt+0xe4>  // b.none
  4029c0:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4029c4:	ldr	x2, [x2, #584]
  4029c8:	cbz	x2, 4029d4 <scols_reset_iter@plt+0xe4>
  4029cc:	mov	x16, x2
  4029d0:	br	x16
  4029d4:	ret
  4029d8:	stp	x29, x30, [sp, #-32]!
  4029dc:	mov	x29, sp
  4029e0:	str	x19, [sp, #16]
  4029e4:	adrp	x19, 41a000 <scols_reset_iter@plt+0x17710>
  4029e8:	ldrb	w0, [x19, #896]
  4029ec:	cbnz	w0, 4029fc <scols_reset_iter@plt+0x10c>
  4029f0:	bl	402968 <scols_reset_iter@plt+0x78>
  4029f4:	mov	w0, #0x1                   	// #1
  4029f8:	strb	w0, [x19, #896]
  4029fc:	ldr	x19, [sp, #16]
  402a00:	ldp	x29, x30, [sp], #32
  402a04:	ret
  402a08:	b	402998 <scols_reset_iter@plt+0xa8>
  402a0c:	sub	sp, sp, #0x190
  402a10:	stp	x20, x19, [sp, #384]
  402a14:	mov	x20, x1
  402a18:	movi	v0.2d, #0x0
  402a1c:	mov	x8, #0xffffffffffffffff    	// #-1
  402a20:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402a24:	stp	x22, x21, [sp, #368]
  402a28:	mov	w21, w0
  402a2c:	stp	q0, q0, [sp, #112]
  402a30:	str	x8, [sp, #120]
  402a34:	mov	w8, #0x1                   	// #1
  402a38:	add	x1, x1, #0xef0
  402a3c:	mov	w0, #0x6                   	// #6
  402a40:	stp	x29, x30, [sp, #304]
  402a44:	stp	x28, x27, [sp, #320]
  402a48:	stp	x26, x25, [sp, #336]
  402a4c:	stp	x24, x23, [sp, #352]
  402a50:	add	x29, sp, #0x130
  402a54:	str	wzr, [sp, #104]
  402a58:	stp	q0, q0, [sp, #240]
  402a5c:	stp	q0, q0, [sp, #208]
  402a60:	stp	q0, q0, [sp, #176]
  402a64:	stp	q0, q0, [sp, #144]
  402a68:	strb	w8, [sp, #264]
  402a6c:	str	xzr, [sp, #96]
  402a70:	bl	4028d0 <setlocale@plt>
  402a74:	adrp	x19, 408000 <scols_reset_iter@plt+0x5710>
  402a78:	add	x19, x19, #0x7d5
  402a7c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402a80:	add	x1, x1, #0x7e0
  402a84:	mov	x0, x19
  402a88:	bl	4024c0 <bindtextdomain@plt>
  402a8c:	mov	x0, x19
  402a90:	bl	402630 <textdomain@plt>
  402a94:	adrp	x0, 404000 <scols_reset_iter@plt+0x1710>
  402a98:	add	x0, x0, #0x118
  402a9c:	bl	408218 <scols_reset_iter@plt+0x5928>
  402aa0:	adrp	x8, 408000 <scols_reset_iter@plt+0x5710>
  402aa4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402aa8:	add	x8, x8, #0x7f2
  402aac:	add	x1, x1, #0x7f5
  402ab0:	mov	x0, xzr
  402ab4:	mov	x2, xzr
  402ab8:	str	x8, [sp, #232]
  402abc:	bl	4022f0 <mbstowcs@plt>
  402ac0:	tbnz	x0, #63, 402b00 <scols_reset_iter@plt+0x210>
  402ac4:	add	x19, x0, #0x1
  402ac8:	lsl	x23, x19, #2
  402acc:	mov	w1, #0x1                   	// #1
  402ad0:	mov	x0, x23
  402ad4:	bl	402540 <calloc@plt>
  402ad8:	cbz	x23, 402ae0 <scols_reset_iter@plt+0x1f0>
  402adc:	cbz	x0, 403868 <scols_reset_iter@plt+0xf78>
  402ae0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402ae4:	add	x1, x1, #0x7f5
  402ae8:	mov	x2, x19
  402aec:	mov	x22, x0
  402af0:	bl	4022f0 <mbstowcs@plt>
  402af4:	tbz	x0, #63, 402b04 <scols_reset_iter@plt+0x214>
  402af8:	mov	x0, x22
  402afc:	bl	4026b0 <free@plt>
  402b00:	mov	x22, xzr
  402b04:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  402b08:	adrp	x3, 408000 <scols_reset_iter@plt+0x5710>
  402b0c:	add	x2, x2, #0x7f8
  402b10:	add	x3, x3, #0x338
  402b14:	mov	w0, w21
  402b18:	mov	x1, x20
  402b1c:	mov	x4, xzr
  402b20:	str	x22, [sp, #88]
  402b24:	str	x22, [sp, #224]
  402b28:	bl	402640 <getopt_long@plt>
  402b2c:	cmn	w0, #0x1
  402b30:	b.eq	402ecc <scols_reset_iter@plt+0x5dc>  // b.none
  402b34:	adrp	x24, 408000 <scols_reset_iter@plt+0x5710>
  402b38:	adrp	x22, 408000 <scols_reset_iter@plt+0x5710>
  402b3c:	mov	x23, xzr
  402b40:	mov	x26, xzr
  402b44:	mov	w28, wzr
  402b48:	mov	w27, #0x1                   	// #1
  402b4c:	mov	x8, #0xffffffffffffffff    	// #-1
  402b50:	add	x24, x24, #0x2ca
  402b54:	add	x22, x22, #0x638
  402b58:	add	x19, sp, #0x60
  402b5c:	stp	xzr, xzr, [sp, #8]
  402b60:	stp	xzr, xzr, [sp, #40]
  402b64:	stp	xzr, xzr, [sp, #24]
  402b68:	stp	xzr, xzr, [sp, #72]
  402b6c:	stp	x8, xzr, [sp, #56]
  402b70:	b	402bac <scols_reset_iter@plt+0x2bc>
  402b74:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402b78:	ldr	x8, [x8, #856]
  402b7c:	str	x8, [sp, #72]
  402b80:	str	x8, [sp, #216]
  402b84:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  402b88:	adrp	x3, 408000 <scols_reset_iter@plt+0x5710>
  402b8c:	mov	w0, w21
  402b90:	mov	x1, x20
  402b94:	add	x2, x2, #0x7f8
  402b98:	add	x3, x3, #0x338
  402b9c:	mov	x4, xzr
  402ba0:	bl	402640 <getopt_long@plt>
  402ba4:	cmn	w0, #0x1
  402ba8:	b.eq	402e90 <scols_reset_iter@plt+0x5a0>  // b.none
  402bac:	cmp	w0, #0x4a
  402bb0:	b.ge	402be0 <scols_reset_iter@plt+0x2f0>  // b.tcont
  402bb4:	sub	w8, w0, #0x45
  402bb8:	cmp	w8, #0x33
  402bbc:	b.hi	4037fc <scols_reset_iter@plt+0xf0c>  // b.pmore
  402bc0:	adr	x9, 402b74 <scols_reset_iter@plt+0x284>
  402bc4:	ldrh	w10, [x24, x8, lsl #1]
  402bc8:	add	x9, x9, x10, lsl #2
  402bcc:	br	x9
  402bd0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402bd4:	ldr	x26, [x8, #856]
  402bd8:	str	x26, [sp, #176]
  402bdc:	b	402b84 <scols_reset_iter@plt+0x294>
  402be0:	mov	x8, xzr
  402be4:	mov	w9, #0x4a                  	// #74
  402be8:	mov	x25, x22
  402bec:	cbz	w9, 402c2c <scols_reset_iter@plt+0x33c>
  402bf0:	cmp	w9, w0
  402bf4:	b.gt	402c2c <scols_reset_iter@plt+0x33c>
  402bf8:	mov	w10, #0x4                   	// #4
  402bfc:	cmp	w9, w0
  402c00:	b.eq	402c1c <scols_reset_iter@plt+0x32c>  // b.none
  402c04:	ldr	w9, [x25, x10]
  402c08:	cbz	w9, 402c2c <scols_reset_iter@plt+0x33c>
  402c0c:	cmp	w9, w0
  402c10:	add	x10, x10, #0x4
  402c14:	b.le	402bfc <scols_reset_iter@plt+0x30c>
  402c18:	b	402c2c <scols_reset_iter@plt+0x33c>
  402c1c:	ldr	w9, [x19, x8, lsl #2]
  402c20:	cbz	w9, 402c4c <scols_reset_iter@plt+0x35c>
  402c24:	cmp	w9, w0
  402c28:	b.ne	403638 <scols_reset_iter@plt+0xd48>  // b.any
  402c2c:	add	x8, x8, #0x1
  402c30:	lsl	x9, x8, #6
  402c34:	ldr	w9, [x22, x9]
  402c38:	cbz	w9, 402bb4 <scols_reset_iter@plt+0x2c4>
  402c3c:	cmp	w9, w0
  402c40:	add	x25, x25, #0x40
  402c44:	b.le	402bec <scols_reset_iter@plt+0x2fc>
  402c48:	b	402bb4 <scols_reset_iter@plt+0x2c4>
  402c4c:	str	w0, [x19, x8, lsl #2]
  402c50:	add	x8, x8, #0x1
  402c54:	lsl	x9, x8, #6
  402c58:	ldr	w9, [x22, x9]
  402c5c:	cbnz	w9, 402c3c <scols_reset_iter@plt+0x34c>
  402c60:	b	402bb4 <scols_reset_iter@plt+0x2c4>
  402c64:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402c68:	ldr	x8, [x8, #856]
  402c6c:	str	x8, [sp, #32]
  402c70:	str	x8, [sp, #184]
  402c74:	b	402b84 <scols_reset_iter@plt+0x294>
  402c78:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402c7c:	ldr	x8, [x8, #856]
  402c80:	str	x8, [sp, #48]
  402c84:	str	x8, [sp, #168]
  402c88:	b	402b84 <scols_reset_iter@plt+0x294>
  402c8c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402c90:	ldr	x8, [x8, #856]
  402c94:	str	x8, [sp, #24]
  402c98:	str	x8, [sp, #144]
  402c9c:	b	402b84 <scols_reset_iter@plt+0x294>
  402ca0:	orr	w27, w27, #0x10
  402ca4:	strb	w27, [sp, #264]
  402ca8:	b	402b84 <scols_reset_iter@plt+0x294>
  402cac:	ldr	x0, [sp, #88]
  402cb0:	mov	w24, w28
  402cb4:	bl	4026b0 <free@plt>
  402cb8:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402cbc:	ldr	x28, [x8, #856]
  402cc0:	mov	x0, xzr
  402cc4:	mov	x2, xzr
  402cc8:	mov	x1, x28
  402ccc:	bl	4022f0 <mbstowcs@plt>
  402cd0:	tbnz	x0, #63, 402e64 <scols_reset_iter@plt+0x574>
  402cd4:	add	x25, x0, #0x1
  402cd8:	str	x26, [sp]
  402cdc:	lsl	x26, x25, #2
  402ce0:	mov	w1, #0x1                   	// #1
  402ce4:	mov	x0, x26
  402ce8:	str	x27, [sp, #88]
  402cec:	bl	402540 <calloc@plt>
  402cf0:	cbz	x26, 402cf8 <scols_reset_iter@plt+0x408>
  402cf4:	cbz	x0, 403868 <scols_reset_iter@plt+0xf78>
  402cf8:	mov	x1, x28
  402cfc:	mov	x2, x25
  402d00:	mov	x26, x0
  402d04:	bl	4022f0 <mbstowcs@plt>
  402d08:	tbz	x0, #63, 402d18 <scols_reset_iter@plt+0x428>
  402d0c:	mov	x0, x26
  402d10:	bl	4026b0 <free@plt>
  402d14:	mov	x26, xzr
  402d18:	ldr	x8, [sp]
  402d1c:	ldr	x27, [sp, #88]
  402d20:	b	402e6c <scols_reset_iter@plt+0x57c>
  402d24:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402d28:	ldr	x8, [x8, #856]
  402d2c:	str	x8, [sp, #16]
  402d30:	str	x8, [sp, #152]
  402d34:	b	402b84 <scols_reset_iter@plt+0x294>
  402d38:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402d3c:	ldr	x8, [x8, #856]
  402d40:	str	x8, [sp, #8]
  402d44:	str	x8, [sp, #160]
  402d48:	b	402b84 <scols_reset_iter@plt+0x294>
  402d4c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402d50:	mov	w24, w28
  402d54:	ldr	x28, [x8, #856]
  402d58:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402d5c:	mov	w2, #0x5                   	// #5
  402d60:	mov	x0, xzr
  402d64:	add	x1, x1, #0x836
  402d68:	bl	4027e0 <dcgettext@plt>
  402d6c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402d70:	mov	x25, x0
  402d74:	mov	x0, x28
  402d78:	add	x1, x1, #0x985
  402d7c:	bl	4078e8 <scols_reset_iter@plt+0x4ff8>
  402d80:	cbz	x0, 403888 <scols_reset_iter@plt+0xf98>
  402d84:	mov	w28, w24
  402d88:	adrp	x24, 408000 <scols_reset_iter@plt+0x5710>
  402d8c:	mov	x23, x0
  402d90:	str	x0, [sp, #136]
  402d94:	add	x24, x24, #0x2ca
  402d98:	b	402b84 <scols_reset_iter@plt+0x294>
  402d9c:	orr	w27, w27, #0x8
  402da0:	strb	w27, [sp, #264]
  402da4:	b	402b84 <scols_reset_iter@plt+0x294>
  402da8:	mov	w28, #0x2                   	// #2
  402dac:	str	w28, [sp, #112]
  402db0:	b	402b84 <scols_reset_iter@plt+0x294>
  402db4:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402db8:	ldr	x8, [x8, #856]
  402dbc:	str	x8, [sp, #40]
  402dc0:	str	x8, [sp, #192]
  402dc4:	b	402b84 <scols_reset_iter@plt+0x294>
  402dc8:	orr	w27, w27, #0x2
  402dcc:	mov	w28, #0x2                   	// #2
  402dd0:	strb	w27, [sp, #264]
  402dd4:	str	w28, [sp, #112]
  402dd8:	b	402b84 <scols_reset_iter@plt+0x294>
  402ddc:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402de0:	ldr	x25, [x8, #856]
  402de4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402de8:	mov	w2, #0x5                   	// #5
  402dec:	mov	x0, xzr
  402df0:	add	x1, x1, #0x81d
  402df4:	bl	4027e0 <dcgettext@plt>
  402df8:	mov	x1, x0
  402dfc:	mov	x0, x25
  402e00:	bl	405bb4 <scols_reset_iter@plt+0x32c4>
  402e04:	mov	w8, w0
  402e08:	str	x8, [sp, #56]
  402e0c:	str	x8, [sp, #120]
  402e10:	b	402b84 <scols_reset_iter@plt+0x294>
  402e14:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402e18:	ldr	x8, [x8, #856]
  402e1c:	str	x8, [sp, #232]
  402e20:	b	402b84 <scols_reset_iter@plt+0x294>
  402e24:	orr	w27, w27, #0x4
  402e28:	strb	w27, [sp, #264]
  402e2c:	b	402b84 <scols_reset_iter@plt+0x294>
  402e30:	mov	w28, #0x1                   	// #1
  402e34:	str	w28, [sp, #112]
  402e38:	b	402b84 <scols_reset_iter@plt+0x294>
  402e3c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402e40:	ldr	x8, [x8, #856]
  402e44:	str	x8, [sp, #64]
  402e48:	str	x8, [sp, #200]
  402e4c:	b	402b84 <scols_reset_iter@plt+0x294>
  402e50:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402e54:	ldr	x8, [x8, #856]
  402e58:	str	x8, [sp, #80]
  402e5c:	str	x8, [sp, #208]
  402e60:	b	402b84 <scols_reset_iter@plt+0x294>
  402e64:	mov	x8, x26
  402e68:	mov	x26, xzr
  402e6c:	mov	w28, w24
  402e70:	and	w27, w27, #0xfffffffe
  402e74:	adrp	x24, 408000 <scols_reset_iter@plt+0x5710>
  402e78:	str	x26, [sp, #88]
  402e7c:	str	x26, [sp, #224]
  402e80:	strb	w27, [sp, #264]
  402e84:	mov	x26, x8
  402e88:	add	x24, x24, #0x2ca
  402e8c:	b	402b84 <scols_reset_iter@plt+0x294>
  402e90:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402e94:	ldrsw	x8, [x8, #864]
  402e98:	ldp	x9, x22, [sp, #56]
  402e9c:	ldp	x21, x19, [sp, #72]
  402ea0:	add	x20, x20, x8, lsl #3
  402ea4:	cmn	x9, #0x1
  402ea8:	b.eq	402f04 <scols_reset_iter@plt+0x614>  // b.none
  402eac:	cbz	x22, 402f18 <scols_reset_iter@plt+0x628>
  402eb0:	mov	w8, #0x2                   	// #2
  402eb4:	str	w8, [sp, #112]
  402eb8:	cbz	x21, 402ec0 <scols_reset_iter@plt+0x5d0>
  402ebc:	cbnz	x19, 402f20 <scols_reset_iter@plt+0x630>
  402ec0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  402ec4:	add	x1, x1, #0x898
  402ec8:	b	4038c8 <scols_reset_iter@plt+0xfd8>
  402ecc:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  402ed0:	ldrsw	x8, [x8, #864]
  402ed4:	mov	x22, xzr
  402ed8:	mov	x21, xzr
  402edc:	mov	x19, xzr
  402ee0:	mov	w28, wzr
  402ee4:	stp	xzr, xzr, [sp, #16]
  402ee8:	stp	xzr, xzr, [sp, #32]
  402eec:	str	xzr, [sp, #48]
  402ef0:	mov	x26, xzr
  402ef4:	str	xzr, [sp, #8]
  402ef8:	mov	x23, xzr
  402efc:	add	x20, x20, x8, lsl #3
  402f00:	mov	w27, #0x1                   	// #1
  402f04:	mov	w0, #0x50                  	// #80
  402f08:	bl	407008 <scols_reset_iter@plt+0x4718>
  402f0c:	sxtw	x8, w0
  402f10:	str	x8, [sp, #120]
  402f14:	cbnz	x22, 402eb0 <scols_reset_iter@plt+0x5c0>
  402f18:	cmp	w28, #0x2
  402f1c:	b.ne	402f28 <scols_reset_iter@plt+0x638>  // b.any
  402f20:	cbnz	x23, 402f64 <scols_reset_iter@plt+0x674>
  402f24:	b	402f60 <scols_reset_iter@plt+0x670>
  402f28:	ldr	x8, [sp, #16]
  402f2c:	cbnz	x8, 40387c <scols_reset_iter@plt+0xf8c>
  402f30:	ldr	x8, [sp, #24]
  402f34:	cbnz	x8, 40387c <scols_reset_iter@plt+0xf8c>
  402f38:	ldr	x8, [sp, #32]
  402f3c:	cbnz	x8, 40387c <scols_reset_iter@plt+0xf8c>
  402f40:	ldr	x8, [sp, #40]
  402f44:	cbnz	x8, 40387c <scols_reset_iter@plt+0xf8c>
  402f48:	ldr	x8, [sp, #48]
  402f4c:	cbnz	x8, 40387c <scols_reset_iter@plt+0xf8c>
  402f50:	cbnz	x26, 40387c <scols_reset_iter@plt+0xf8c>
  402f54:	ldr	x8, [sp, #8]
  402f58:	cbnz	x8, 40387c <scols_reset_iter@plt+0xf8c>
  402f5c:	cbnz	x23, 40387c <scols_reset_iter@plt+0xf8c>
  402f60:	tbnz	w27, #1, 4038c0 <scols_reset_iter@plt+0xfd0>
  402f64:	ldr	x0, [x20]
  402f68:	cbz	x0, 403274 <scols_reset_iter@plt+0x984>
  402f6c:	add	x19, x20, #0x8
  402f70:	adrp	x20, 408000 <scols_reset_iter@plt+0x5710>
  402f74:	adrp	x21, 408000 <scols_reset_iter@plt+0x5710>
  402f78:	mov	w23, wzr
  402f7c:	add	x20, x20, #0x76e
  402f80:	add	x21, x21, #0x97d
  402f84:	b	402fa0 <scols_reset_iter@plt+0x6b0>
  402f88:	ldur	x1, [x19, #-8]
  402f8c:	mov	x0, x21
  402f90:	bl	402660 <warn@plt>
  402f94:	add	w23, w23, #0x1
  402f98:	ldr	x0, [x19], #8
  402f9c:	cbz	x0, 402fcc <scols_reset_iter@plt+0x6dc>
  402fa0:	mov	x1, x20
  402fa4:	bl	402460 <fopen@plt>
  402fa8:	cbz	x0, 402f88 <scols_reset_iter@plt+0x698>
  402fac:	mov	x22, x0
  402fb0:	add	x0, sp, #0x70
  402fb4:	mov	x1, x22
  402fb8:	bl	403c94 <scols_reset_iter@plt+0x13a4>
  402fbc:	mov	x0, x22
  402fc0:	bl	402450 <fclose@plt>
  402fc4:	ldr	x0, [x19], #8
  402fc8:	cbnz	x0, 402fa0 <scols_reset_iter@plt+0x6b0>
  402fcc:	ldr	w9, [sp, #112]
  402fd0:	cmp	w9, #0x2
  402fd4:	b.ne	403294 <scols_reset_iter@plt+0x9a4>  // b.any
  402fd8:	ldr	x20, [sp, #128]
  402fdc:	cbz	x20, 4035f4 <scols_reset_iter@plt+0xd04>
  402fe0:	mov	x0, x20
  402fe4:	bl	4026e0 <scols_table_get_nlines@plt>
  402fe8:	cbz	x0, 4035f4 <scols_reset_iter@plt+0xd04>
  402fec:	ldr	x1, [sp, #120]
  402ff0:	mov	x0, x20
  402ff4:	bl	402720 <scols_table_set_termwidth@plt>
  402ff8:	mov	w1, #0x2                   	// #2
  402ffc:	mov	x0, x20
  403000:	bl	4025e0 <scols_table_set_termforce@plt>
  403004:	ldr	x19, [sp, #160]
  403008:	cbz	x19, 403034 <scols_reset_iter@plt+0x744>
  40300c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  403010:	add	x1, x1, #0x9b
  403014:	mov	w2, #0x5                   	// #5
  403018:	mov	x0, xzr
  40301c:	bl	4027e0 <dcgettext@plt>
  403020:	mov	x3, x0
  403024:	add	x0, sp, #0x70
  403028:	mov	w2, #0x4                   	// #4
  40302c:	mov	x1, x19
  403030:	bl	40433c <scols_reset_iter@plt+0x1a4c>
  403034:	ldr	x19, [sp, #168]
  403038:	cbz	x19, 403064 <scols_reset_iter@plt+0x774>
  40303c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  403040:	add	x1, x1, #0xbe
  403044:	mov	w2, #0x5                   	// #5
  403048:	mov	x0, xzr
  40304c:	bl	4027e0 <dcgettext@plt>
  403050:	mov	x3, x0
  403054:	add	x0, sp, #0x70
  403058:	mov	w2, #0x1                   	// #1
  40305c:	mov	x1, x19
  403060:	bl	40433c <scols_reset_iter@plt+0x1a4c>
  403064:	ldr	x19, [sp, #176]
  403068:	cbz	x19, 403094 <scols_reset_iter@plt+0x7a4>
  40306c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  403070:	add	x1, x1, #0xe1
  403074:	mov	w2, #0x5                   	// #5
  403078:	mov	x0, xzr
  40307c:	bl	4027e0 <dcgettext@plt>
  403080:	mov	x3, x0
  403084:	add	x0, sp, #0x70
  403088:	mov	w2, #0x10                  	// #16
  40308c:	mov	x1, x19
  403090:	bl	40433c <scols_reset_iter@plt+0x1a4c>
  403094:	ldr	x19, [sp, #184]
  403098:	cbz	x19, 4030c4 <scols_reset_iter@plt+0x7d4>
  40309c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  4030a0:	add	x1, x1, #0x108
  4030a4:	mov	w2, #0x5                   	// #5
  4030a8:	mov	x0, xzr
  4030ac:	bl	4027e0 <dcgettext@plt>
  4030b0:	mov	x3, x0
  4030b4:	add	x0, sp, #0x70
  4030b8:	mov	w2, #0x40                  	// #64
  4030bc:	mov	x1, x19
  4030c0:	bl	40433c <scols_reset_iter@plt+0x1a4c>
  4030c4:	ldr	x19, [sp, #192]
  4030c8:	cbz	x19, 4030f4 <scols_reset_iter@plt+0x804>
  4030cc:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  4030d0:	add	x1, x1, #0x12a
  4030d4:	mov	w2, #0x5                   	// #5
  4030d8:	mov	x0, xzr
  4030dc:	bl	4027e0 <dcgettext@plt>
  4030e0:	mov	x3, x0
  4030e4:	add	x0, sp, #0x70
  4030e8:	mov	w2, #0x20                  	// #32
  4030ec:	mov	x1, x19
  4030f0:	bl	40433c <scols_reset_iter@plt+0x1a4c>
  4030f4:	ldr	x8, [sp, #176]
  4030f8:	cbnz	x8, 403170 <scols_reset_iter@plt+0x880>
  4030fc:	mov	w0, wzr
  403100:	bl	4027d0 <scols_new_iter@plt>
  403104:	cbz	x0, 403924 <scols_reset_iter@plt+0x1034>
  403108:	mov	x19, x0
  40310c:	ldr	x0, [sp, #128]
  403110:	sub	x2, x29, #0x10
  403114:	mov	x1, x19
  403118:	bl	402690 <scols_table_next_column@plt>
  40311c:	mov	x20, xzr
  403120:	cbnz	w0, 403150 <scols_reset_iter@plt+0x860>
  403124:	ldur	x0, [x29, #-16]
  403128:	bl	402490 <scols_column_get_flags@plt>
  40312c:	ldr	x8, [sp, #128]
  403130:	ldur	x9, [x29, #-16]
  403134:	tst	w0, #0x20
  403138:	sub	x2, x29, #0x10
  40313c:	mov	x0, x8
  403140:	mov	x1, x19
  403144:	csel	x20, x9, x20, eq  // eq = none
  403148:	bl	402690 <scols_table_next_column@plt>
  40314c:	cbz	w0, 403124 <scols_reset_iter@plt+0x834>
  403150:	mov	x0, x19
  403154:	bl	402390 <scols_free_iter@plt>
  403158:	cbz	x20, 403170 <scols_reset_iter@plt+0x880>
  40315c:	mov	x0, x20
  403160:	bl	402490 <scols_column_get_flags@plt>
  403164:	orr	w1, w0, #0x10
  403168:	mov	x0, x20
  40316c:	bl	402520 <scols_column_set_flags@plt>
  403170:	ldr	x1, [sp, #200]
  403174:	cbz	x1, 403518 <scols_reset_iter@plt+0xc28>
  403178:	add	x0, sp, #0x70
  40317c:	bl	4044f8 <scols_reset_iter@plt+0x1c08>
  403180:	ldr	x1, [sp, #216]
  403184:	mov	x21, x0
  403188:	add	x0, sp, #0x70
  40318c:	bl	4044f8 <scols_reset_iter@plt+0x1c08>
  403190:	ldr	x1, [sp, #208]
  403194:	mov	x19, x0
  403198:	add	x0, sp, #0x70
  40319c:	bl	4044f8 <scols_reset_iter@plt+0x1c08>
  4031a0:	cbz	x21, 403518 <scols_reset_iter@plt+0xc28>
  4031a4:	cbz	x19, 403518 <scols_reset_iter@plt+0xc28>
  4031a8:	mov	x20, x0
  4031ac:	cbz	x0, 403518 <scols_reset_iter@plt+0xc28>
  4031b0:	mov	x0, x21
  4031b4:	bl	402490 <scols_column_get_flags@plt>
  4031b8:	orr	w1, w0, #0x2
  4031bc:	mov	x0, x21
  4031c0:	bl	402520 <scols_column_set_flags@plt>
  4031c4:	mov	w0, wzr
  4031c8:	bl	4027d0 <scols_new_iter@plt>
  4031cc:	mov	x21, x0
  4031d0:	mov	w0, wzr
  4031d4:	bl	4027d0 <scols_new_iter@plt>
  4031d8:	cbz	x21, 4038e0 <scols_reset_iter@plt+0xff0>
  4031dc:	mov	x22, x0
  4031e0:	cbz	x0, 4038e0 <scols_reset_iter@plt+0xff0>
  4031e4:	ldr	x0, [sp, #128]
  4031e8:	sub	x2, x29, #0x10
  4031ec:	mov	x1, x22
  4031f0:	bl	402610 <scols_table_next_line@plt>
  4031f4:	cbnz	w0, 403508 <scols_reset_iter@plt+0xc18>
  4031f8:	ldur	x0, [x29, #-16]
  4031fc:	mov	x1, x20
  403200:	bl	402330 <scols_line_get_column_cell@plt>
  403204:	cbz	x0, 4031e4 <scols_reset_iter@plt+0x8f4>
  403208:	bl	4026a0 <scols_cell_get_data@plt>
  40320c:	cbz	x0, 4031e4 <scols_reset_iter@plt+0x8f4>
  403210:	mov	x23, x0
  403214:	mov	x0, x21
  403218:	mov	w1, wzr
  40321c:	bl	4028f0 <scols_reset_iter@plt>
  403220:	ldr	x0, [sp, #128]
  403224:	sub	x2, x29, #0x18
  403228:	mov	x1, x21
  40322c:	bl	402610 <scols_table_next_line@plt>
  403230:	cbnz	w0, 4031e4 <scols_reset_iter@plt+0x8f4>
  403234:	ldur	x0, [x29, #-24]
  403238:	mov	x1, x19
  40323c:	bl	402330 <scols_line_get_column_cell@plt>
  403240:	cbz	x0, 403220 <scols_reset_iter@plt+0x930>
  403244:	bl	4026a0 <scols_cell_get_data@plt>
  403248:	cbz	x0, 403220 <scols_reset_iter@plt+0x930>
  40324c:	mov	x1, x0
  403250:	mov	x0, x23
  403254:	bl	402650 <strcmp@plt>
  403258:	cbnz	w0, 403220 <scols_reset_iter@plt+0x930>
  40325c:	ldp	x0, x1, [x29, #-24]
  403260:	bl	4026c0 <scols_line_is_ancestor@plt>
  403264:	cbnz	w0, 403220 <scols_reset_iter@plt+0x930>
  403268:	ldp	x1, x0, [x29, #-24]
  40326c:	bl	4027f0 <scols_line_add_child@plt>
  403270:	b	403220 <scols_reset_iter@plt+0x930>
  403274:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403278:	ldr	x1, [x8, #880]
  40327c:	add	x0, sp, #0x70
  403280:	bl	403c94 <scols_reset_iter@plt+0x13a4>
  403284:	mov	w23, wzr
  403288:	ldr	w9, [sp, #112]
  40328c:	cmp	w9, #0x2
  403290:	b.eq	402fd8 <scols_reset_iter@plt+0x6e8>  // b.none
  403294:	ldr	x20, [sp, #248]
  403298:	cbz	x20, 4038b8 <scols_reset_iter@plt+0xfc8>
  40329c:	ldr	x10, [sp, #256]
  4032a0:	ldr	x8, [sp, #120]
  4032a4:	cmp	x10, x8
  4032a8:	b.cs	4032c8 <scols_reset_iter@plt+0x9d8>  // b.hs, b.nlast
  4032ac:	cbz	w9, 4033f0 <scols_reset_iter@plt+0xb00>
  4032b0:	cmp	w9, #0x1
  4032b4:	b.eq	4032fc <scols_reset_iter@plt+0xa0c>  // b.none
  4032b8:	cmp	w9, #0x3
  4032bc:	b.ne	4035f4 <scols_reset_iter@plt+0xd04>  // b.any
  4032c0:	cbnz	w20, 4032d4 <scols_reset_iter@plt+0x9e4>
  4032c4:	b	4035f4 <scols_reset_iter@plt+0xd04>
  4032c8:	mov	w8, #0x3                   	// #3
  4032cc:	str	w8, [sp, #112]
  4032d0:	cbz	w20, 4035f4 <scols_reset_iter@plt+0xd04>
  4032d4:	ldr	x19, [sp, #240]
  4032d8:	adrp	x21, 41a000 <scols_reset_iter@plt+0x17710>
  4032dc:	ldr	x0, [x19], #8
  4032e0:	ldr	x1, [x21, #872]
  4032e4:	sub	w20, w20, #0x1
  4032e8:	bl	4027c0 <fputws@plt>
  4032ec:	mov	w0, #0xa                   	// #10
  4032f0:	bl	4023e0 <putwchar@plt>
  4032f4:	cbnz	w20, 4032dc <scols_reset_iter@plt+0x9ec>
  4032f8:	b	4035f4 <scols_reset_iter@plt+0xd04>
  4032fc:	ldr	x22, [sp, #240]
  403300:	add	x9, x10, #0x8
  403304:	str	w23, [sp, #72]
  403308:	and	x23, x9, #0xfffffffffffffff8
  40330c:	mov	x21, xzr
  403310:	mov	x26, xzr
  403314:	udiv	x24, x8, x23
  403318:	adrp	x25, 41a000 <scols_reset_iter@plt+0x17710>
  40331c:	mov	x27, x23
  403320:	str	x23, [sp, #256]
  403324:	b	403340 <scols_reset_iter@plt+0xa50>
  403328:	mov	w0, #0xa                   	// #10
  40332c:	bl	4023e0 <putwchar@plt>
  403330:	mov	x21, xzr
  403334:	mov	x26, xzr
  403338:	mov	x27, x23
  40333c:	add	x22, x22, #0x8
  403340:	ldr	x0, [x22]
  403344:	ldr	x1, [x25, #872]
  403348:	bl	4027c0 <fputws@plt>
  40334c:	ldr	x9, [x22]
  403350:	ldr	w8, [x9]
  403354:	cbz	w8, 403388 <scols_reset_iter@plt+0xa98>
  403358:	mov	x19, xzr
  40335c:	add	x28, x9, #0x4
  403360:	mov	w0, w8
  403364:	bl	402480 <wcwidth@plt>
  403368:	ldr	w8, [x28], #4
  40336c:	bic	w9, w0, w0, asr #31
  403370:	add	x19, x19, x9
  403374:	cbnz	w8, 403360 <scols_reset_iter@plt+0xa70>
  403378:	subs	x20, x20, #0x1
  40337c:	add	x26, x19, x26
  403380:	b.ne	403398 <scols_reset_iter@plt+0xaa8>  // b.any
  403384:	b	4033d8 <scols_reset_iter@plt+0xae8>
  403388:	mov	x19, xzr
  40338c:	subs	x20, x20, #0x1
  403390:	add	x26, x19, x26
  403394:	b.eq	4033d8 <scols_reset_iter@plt+0xae8>  // b.none
  403398:	add	x21, x21, #0x1
  40339c:	cmp	x21, x24
  4033a0:	b.eq	403328 <scols_reset_iter@plt+0xa38>  // b.none
  4033a4:	add	x8, x26, #0x8
  4033a8:	and	x19, x8, #0xfffffffffffffff8
  4033ac:	cmp	x19, x27
  4033b0:	b.hi	4033cc <scols_reset_iter@plt+0xadc>  // b.pmore
  4033b4:	mov	w0, #0x9                   	// #9
  4033b8:	bl	4023e0 <putwchar@plt>
  4033bc:	add	x19, x19, #0x8
  4033c0:	cmp	x19, x27
  4033c4:	b.ls	4033b4 <scols_reset_iter@plt+0xac4>  // b.plast
  4033c8:	sub	x26, x19, #0x8
  4033cc:	add	x27, x23, x27
  4033d0:	add	x22, x22, #0x8
  4033d4:	b	403340 <scols_reset_iter@plt+0xa50>
  4033d8:	str	xzr, [sp, #248]
  4033dc:	cbz	x26, 4033e8 <scols_reset_iter@plt+0xaf8>
  4033e0:	mov	w0, #0xa                   	// #10
  4033e4:	bl	4023e0 <putwchar@plt>
  4033e8:	ldr	w23, [sp, #72]
  4033ec:	b	4035f4 <scols_reset_iter@plt+0xd04>
  4033f0:	add	x9, x10, #0x8
  4033f4:	and	x11, x9, #0xfffffffffffffff8
  4033f8:	udiv	x9, x8, x11
  4033fc:	cmp	x11, x8
  403400:	csinc	x10, x9, xzr, ls  // ls = plast
  403404:	udiv	x8, x20, x10
  403408:	msub	x9, x8, x10, x20
  40340c:	cmp	x9, #0x0
  403410:	cinc	x22, x8, ne  // ne = any
  403414:	str	x11, [sp, #256]
  403418:	cbz	x22, 4035f4 <scols_reset_iter@plt+0xd04>
  40341c:	cbz	x10, 40361c <scols_reset_iter@plt+0xd2c>
  403420:	ldr	x25, [sp, #240]
  403424:	mov	x21, x11
  403428:	mov	x24, xzr
  40342c:	str	x10, [sp, #88]
  403430:	str	w23, [sp, #72]
  403434:	b	403450 <scols_reset_iter@plt+0xb60>
  403438:	mov	w0, #0xa                   	// #10
  40343c:	bl	4023e0 <putwchar@plt>
  403440:	ldr	x24, [sp, #80]
  403444:	add	x24, x24, #0x1
  403448:	cmp	x24, x22
  40344c:	b.cs	4033e8 <scols_reset_iter@plt+0xaf8>  // b.hs, b.nlast
  403450:	mov	x27, xzr
  403454:	mov	x19, xzr
  403458:	mov	x28, x21
  40345c:	str	x24, [sp, #80]
  403460:	b	403478 <scols_reset_iter@plt+0xb88>
  403464:	ldr	x8, [sp, #88]
  403468:	add	x27, x27, #0x1
  40346c:	add	x28, x21, x28
  403470:	cmp	x27, x8
  403474:	b.eq	403438 <scols_reset_iter@plt+0xb48>  // b.none
  403478:	lsl	x23, x24, #3
  40347c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403480:	ldr	x0, [x25, x23]
  403484:	ldr	x1, [x8, #872]
  403488:	bl	4027c0 <fputws@plt>
  40348c:	ldr	x9, [x25, x23]
  403490:	ldr	w8, [x9]
  403494:	cbz	w8, 4034c8 <scols_reset_iter@plt+0xbd8>
  403498:	mov	x26, xzr
  40349c:	add	x23, x9, #0x4
  4034a0:	mov	w0, w8
  4034a4:	bl	402480 <wcwidth@plt>
  4034a8:	ldr	w8, [x23], #4
  4034ac:	bic	w9, w0, w0, asr #31
  4034b0:	add	x26, x26, x9
  4034b4:	cbnz	w8, 4034a0 <scols_reset_iter@plt+0xbb0>
  4034b8:	add	x24, x24, x22
  4034bc:	cmp	x24, x20
  4034c0:	b.cc	4034d8 <scols_reset_iter@plt+0xbe8>  // b.lo, b.ul, b.last
  4034c4:	b	403438 <scols_reset_iter@plt+0xb48>
  4034c8:	mov	x26, xzr
  4034cc:	add	x24, x24, x22
  4034d0:	cmp	x24, x20
  4034d4:	b.cs	403438 <scols_reset_iter@plt+0xb48>  // b.hs, b.nlast
  4034d8:	add	x19, x26, x19
  4034dc:	add	x8, x19, #0x8
  4034e0:	and	x23, x8, #0xfffffffffffffff8
  4034e4:	cmp	x23, x28
  4034e8:	b.hi	403464 <scols_reset_iter@plt+0xb74>  // b.pmore
  4034ec:	mov	w0, #0x9                   	// #9
  4034f0:	bl	4023e0 <putwchar@plt>
  4034f4:	add	x23, x23, #0x8
  4034f8:	cmp	x23, x28
  4034fc:	b.ls	4034ec <scols_reset_iter@plt+0xbfc>  // b.plast
  403500:	sub	x19, x23, #0x8
  403504:	b	403464 <scols_reset_iter@plt+0xb74>
  403508:	mov	x0, x21
  40350c:	bl	402390 <scols_free_iter@plt>
  403510:	mov	x0, x22
  403514:	bl	402390 <scols_free_iter@plt>
  403518:	ldr	x8, [sp, #152]
  40351c:	cbz	x8, 4035e8 <scols_reset_iter@plt+0xcf8>
  403520:	ldr	x0, [sp, #128]
  403524:	bl	4025f0 <scols_table_get_ncols@plt>
  403528:	ldr	x20, [sp, #152]
  40352c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  403530:	mov	x21, x0
  403534:	add	x1, x1, #0x180
  403538:	mov	w2, #0x5                   	// #5
  40353c:	mov	x0, xzr
  403540:	bl	4027e0 <dcgettext@plt>
  403544:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403548:	mov	x22, x0
  40354c:	add	x1, x1, #0x985
  403550:	mov	x0, x20
  403554:	bl	4078e8 <scols_reset_iter@plt+0x4ff8>
  403558:	cbz	x0, 4038e8 <scols_reset_iter@plt+0xff8>
  40355c:	mov	x19, x0
  403560:	mov	w1, #0x8                   	// #8
  403564:	mov	x0, x21
  403568:	bl	402540 <calloc@plt>
  40356c:	mov	x20, x0
  403570:	cbz	x21, 403578 <scols_reset_iter@plt+0xc88>
  403574:	cbz	x20, 403910 <scols_reset_iter@plt+0x1020>
  403578:	ldr	x1, [x19]
  40357c:	cbz	x1, 4035d8 <scols_reset_iter@plt+0xce8>
  403580:	mov	x22, xzr
  403584:	add	x21, x19, #0x8
  403588:	b	403594 <scols_reset_iter@plt+0xca4>
  40358c:	ldr	x1, [x21], #8
  403590:	cbz	x1, 4035b0 <scols_reset_iter@plt+0xcc0>
  403594:	add	x0, sp, #0x70
  403598:	bl	4044f8 <scols_reset_iter@plt+0x1c08>
  40359c:	cbz	x0, 40358c <scols_reset_iter@plt+0xc9c>
  4035a0:	add	x8, x22, #0x1
  4035a4:	str	x0, [x20, x22, lsl #3]
  4035a8:	mov	x22, x8
  4035ac:	b	40358c <scols_reset_iter@plt+0xc9c>
  4035b0:	cbz	x22, 4035d8 <scols_reset_iter@plt+0xce8>
  4035b4:	mov	x1, xzr
  4035b8:	mov	x23, x20
  4035bc:	ldr	x0, [sp, #128]
  4035c0:	ldr	x21, [x23], #8
  4035c4:	mov	x2, x21
  4035c8:	bl	402710 <scols_table_move_column@plt>
  4035cc:	subs	x22, x22, #0x1
  4035d0:	mov	x1, x21
  4035d4:	b.ne	4035bc <scols_reset_iter@plt+0xccc>  // b.any
  4035d8:	mov	x0, x20
  4035dc:	bl	4026b0 <free@plt>
  4035e0:	mov	x0, x19
  4035e4:	bl	407244 <scols_reset_iter@plt+0x4954>
  4035e8:	ldr	x0, [sp, #128]
  4035ec:	bl	402770 <scols_print_table@plt>
  4035f0:	mov	w23, w0
  4035f4:	cmp	w23, #0x0
  4035f8:	ldp	x20, x19, [sp, #384]
  4035fc:	ldp	x22, x21, [sp, #368]
  403600:	ldp	x24, x23, [sp, #352]
  403604:	ldp	x26, x25, [sp, #336]
  403608:	ldp	x28, x27, [sp, #320]
  40360c:	ldp	x29, x30, [sp, #304]
  403610:	cset	w0, ne  // ne = any
  403614:	add	sp, sp, #0x190
  403618:	ret
  40361c:	mov	x19, xzr
  403620:	mov	w0, #0xa                   	// #10
  403624:	bl	4023e0 <putwchar@plt>
  403628:	add	x19, x19, #0x1
  40362c:	cmp	x19, x22
  403630:	b.cc	403620 <scols_reset_iter@plt+0xd30>  // b.lo, b.ul, b.last
  403634:	b	4035f4 <scols_reset_iter@plt+0xd04>
  403638:	adrp	x21, 41a000 <scols_reset_iter@plt+0x17710>
  40363c:	ldr	x19, [x21, #848]
  403640:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403644:	add	x1, x1, #0x958
  403648:	mov	w2, #0x5                   	// #5
  40364c:	mov	x0, xzr
  403650:	bl	4027e0 <dcgettext@plt>
  403654:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403658:	ldr	x2, [x8, #888]
  40365c:	mov	x1, x0
  403660:	mov	x0, x19
  403664:	bl	402890 <fprintf@plt>
  403668:	adrp	x23, 408000 <scols_reset_iter@plt+0x5710>
  40366c:	adrp	x24, 408000 <scols_reset_iter@plt+0x5710>
  403670:	adrp	x20, 408000 <scols_reset_iter@plt+0x5710>
  403674:	adrp	x27, 408000 <scols_reset_iter@plt+0x5710>
  403678:	adrp	x28, 408000 <scols_reset_iter@plt+0x5710>
  40367c:	adrp	x19, 409000 <scols_reset_iter@plt+0x6710>
  403680:	adrp	x26, 408000 <scols_reset_iter@plt+0x5710>
  403684:	mov	x22, xzr
  403688:	add	x23, x23, #0x725
  40368c:	add	x24, x24, #0x250
  403690:	add	x20, x20, #0x97a
  403694:	add	x27, x27, #0x7bc
  403698:	add	x28, x28, #0x708
  40369c:	add	x19, x19, #0x22
  4036a0:	add	x26, x26, #0x6f8
  4036a4:	ldr	w8, [x25, x22]
  4036a8:	cmp	w8, #0x78
  4036ac:	b.hi	4036d0 <scols_reset_iter@plt+0xde0>  // b.pmore
  4036b0:	adr	x9, 4036c4 <scols_reset_iter@plt+0xdd4>
  4036b4:	ldrb	w10, [x24, x8]
  4036b8:	add	x9, x9, x10, lsl #2
  4036bc:	mov	x2, x23
  4036c0:	br	x9
  4036c4:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4036c8:	add	x2, x2, #0x743
  4036cc:	b	4037d0 <scols_reset_iter@plt+0xee0>
  4036d0:	sub	w9, w8, #0x21
  4036d4:	cmp	w9, #0x5d
  4036d8:	b.hi	4037dc <scols_reset_iter@plt+0xeec>  // b.pmore
  4036dc:	ldr	x0, [x21, #848]
  4036e0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4036e4:	add	x1, x1, #0x980
  4036e8:	mov	w2, w8
  4036ec:	bl	402890 <fprintf@plt>
  4036f0:	b	4037dc <scols_reset_iter@plt+0xeec>
  4036f4:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4036f8:	add	x2, x2, #0x72d
  4036fc:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403700:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403704:	add	x2, x2, #0x92d
  403708:	b	4037d0 <scols_reset_iter@plt+0xee0>
  40370c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403710:	add	x2, x2, #0x796
  403714:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403718:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  40371c:	add	x2, x2, #0x71f
  403720:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403724:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403728:	add	x2, x2, #0x764
  40372c:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403730:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403734:	add	x2, x2, #0x770
  403738:	b	4037d0 <scols_reset_iter@plt+0xee0>
  40373c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403740:	add	x2, x2, #0x77c
  403744:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403748:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  40374c:	add	x2, x2, #0xfb0
  403750:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403754:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403758:	add	x2, x2, #0x78b
  40375c:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403760:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403764:	add	x2, x2, #0x753
  403768:	b	4037d0 <scols_reset_iter@plt+0xee0>
  40376c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403770:	add	x2, x2, #0x7a8
  403774:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403778:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  40377c:	add	x2, x2, #0xf94
  403780:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403784:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403788:	add	x2, x2, #0x7c1
  40378c:	b	4037d0 <scols_reset_iter@plt+0xee0>
  403790:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403794:	add	x2, x2, #0x738
  403798:	b	4037d0 <scols_reset_iter@plt+0xee0>
  40379c:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4037a0:	add	x2, x2, #0x701
  4037a4:	b	4037d0 <scols_reset_iter@plt+0xee0>
  4037a8:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  4037ac:	add	x2, x2, #0x7c9
  4037b0:	b	4037d0 <scols_reset_iter@plt+0xee0>
  4037b4:	mov	x2, x27
  4037b8:	b	4037d0 <scols_reset_iter@plt+0xee0>
  4037bc:	mov	x2, x28
  4037c0:	b	4037d0 <scols_reset_iter@plt+0xee0>
  4037c4:	mov	x2, x19
  4037c8:	b	4037d0 <scols_reset_iter@plt+0xee0>
  4037cc:	mov	x2, x26
  4037d0:	ldr	x0, [x21, #848]
  4037d4:	mov	x1, x20
  4037d8:	bl	402890 <fprintf@plt>
  4037dc:	add	x22, x22, #0x4
  4037e0:	cmp	x22, #0x3c
  4037e4:	b.ne	4036a4 <scols_reset_iter@plt+0xdb4>  // b.any
  4037e8:	ldr	x1, [x21, #848]
  4037ec:	mov	w0, #0xa                   	// #10
  4037f0:	bl	4023d0 <fputc@plt>
  4037f4:	mov	w0, #0x1                   	// #1
  4037f8:	bl	402300 <exit@plt>
  4037fc:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403800:	ldr	x19, [x8, #848]
  403804:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403808:	add	x1, x1, #0x871
  40380c:	mov	w2, #0x5                   	// #5
  403810:	mov	x0, xzr
  403814:	bl	4027e0 <dcgettext@plt>
  403818:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  40381c:	ldr	x2, [x8, #888]
  403820:	mov	x1, x0
  403824:	mov	x0, x19
  403828:	bl	402890 <fprintf@plt>
  40382c:	mov	w0, #0x1                   	// #1
  403830:	bl	402300 <exit@plt>
  403834:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403838:	add	x1, x1, #0x853
  40383c:	mov	w2, #0x5                   	// #5
  403840:	mov	x0, xzr
  403844:	bl	4027e0 <dcgettext@plt>
  403848:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  40384c:	ldr	x1, [x8, #888]
  403850:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  403854:	add	x2, x2, #0x85f
  403858:	bl	402830 <printf@plt>
  40385c:	mov	w0, wzr
  403860:	bl	402300 <exit@plt>
  403864:	bl	40392c <scols_reset_iter@plt+0x103c>
  403868:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40386c:	add	x1, x1, #0x93e
  403870:	mov	w0, #0x1                   	// #1
  403874:	mov	w2, #0x1                   	// #1
  403878:	bl	4028b0 <err@plt>
  40387c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403880:	add	x1, x1, #0x8dd
  403884:	b	4038c8 <scols_reset_iter@plt+0xfd8>
  403888:	bl	402850 <__errno_location@plt>
  40388c:	ldr	w8, [x0]
  403890:	cmp	w8, #0xc
  403894:	b.ne	4038a0 <scols_reset_iter@plt+0xfb0>  // b.any
  403898:	mov	w0, #0xc5                  	// #197
  40389c:	bl	404228 <scols_reset_iter@plt+0x1938>
  4038a0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4038a4:	add	x1, x1, #0x99b
  4038a8:	mov	w0, #0x1                   	// #1
  4038ac:	mov	x2, x25
  4038b0:	mov	x3, x28
  4038b4:	bl	402800 <errx@plt>
  4038b8:	mov	w0, w23
  4038bc:	bl	402300 <exit@plt>
  4038c0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4038c4:	add	x1, x1, #0x907
  4038c8:	mov	w2, #0x5                   	// #5
  4038cc:	mov	x0, xzr
  4038d0:	bl	4027e0 <dcgettext@plt>
  4038d4:	mov	x1, x0
  4038d8:	mov	w0, #0x1                   	// #1
  4038dc:	bl	402800 <errx@plt>
  4038e0:	mov	w0, #0x165                 	// #357
  4038e4:	bl	404228 <scols_reset_iter@plt+0x1938>
  4038e8:	bl	402850 <__errno_location@plt>
  4038ec:	ldr	w8, [x0]
  4038f0:	cmp	w8, #0xc
  4038f4:	b.eq	403898 <scols_reset_iter@plt+0xfa8>  // b.none
  4038f8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4038fc:	add	x1, x1, #0x99b
  403900:	mov	w0, #0x1                   	// #1
  403904:	mov	x2, x22
  403908:	mov	x3, x20
  40390c:	bl	402800 <errx@plt>
  403910:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403914:	add	x1, x1, #0x93e
  403918:	mov	w0, #0x1                   	// #1
  40391c:	mov	w2, #0x8                   	// #8
  403920:	bl	4028b0 <err@plt>
  403924:	mov	w0, #0x102                 	// #258
  403928:	bl	404228 <scols_reset_iter@plt+0x1938>
  40392c:	stp	x29, x30, [sp, #-32]!
  403930:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403934:	str	x19, [sp, #16]
  403938:	ldr	x19, [x8, #872]
  40393c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403940:	add	x1, x1, #0x9c3
  403944:	mov	w2, #0x5                   	// #5
  403948:	mov	x0, xzr
  40394c:	mov	x29, sp
  403950:	bl	4027e0 <dcgettext@plt>
  403954:	mov	x1, x19
  403958:	bl	4022e0 <fputs@plt>
  40395c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403960:	add	x1, x1, #0x9cc
  403964:	mov	w2, #0x5                   	// #5
  403968:	mov	x0, xzr
  40396c:	bl	4027e0 <dcgettext@plt>
  403970:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  403974:	ldr	x2, [x8, #888]
  403978:	mov	x1, x0
  40397c:	mov	x0, x19
  403980:	bl	402890 <fprintf@plt>
  403984:	mov	w0, #0xa                   	// #10
  403988:	mov	x1, x19
  40398c:	bl	4023d0 <fputc@plt>
  403990:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403994:	add	x1, x1, #0x9e7
  403998:	mov	w2, #0x5                   	// #5
  40399c:	mov	x0, xzr
  4039a0:	bl	4027e0 <dcgettext@plt>
  4039a4:	mov	x1, x19
  4039a8:	bl	4022e0 <fputs@plt>
  4039ac:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039b0:	add	x1, x1, #0x9f9
  4039b4:	mov	w2, #0x5                   	// #5
  4039b8:	mov	x0, xzr
  4039bc:	bl	4027e0 <dcgettext@plt>
  4039c0:	mov	x1, x19
  4039c4:	bl	4022e0 <fputs@plt>
  4039c8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039cc:	add	x1, x1, #0xa04
  4039d0:	mov	w2, #0x5                   	// #5
  4039d4:	mov	x0, xzr
  4039d8:	bl	4027e0 <dcgettext@plt>
  4039dc:	mov	x1, x19
  4039e0:	bl	4022e0 <fputs@plt>
  4039e4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4039e8:	add	x1, x1, #0xa36
  4039ec:	mov	w2, #0x5                   	// #5
  4039f0:	mov	x0, xzr
  4039f4:	bl	4027e0 <dcgettext@plt>
  4039f8:	mov	x1, x19
  4039fc:	bl	4022e0 <fputs@plt>
  403a00:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a04:	add	x1, x1, #0xa74
  403a08:	mov	w2, #0x5                   	// #5
  403a0c:	mov	x0, xzr
  403a10:	bl	4027e0 <dcgettext@plt>
  403a14:	mov	x1, x19
  403a18:	bl	4022e0 <fputs@plt>
  403a1c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a20:	add	x1, x1, #0xab7
  403a24:	mov	w2, #0x5                   	// #5
  403a28:	mov	x0, xzr
  403a2c:	bl	4027e0 <dcgettext@plt>
  403a30:	mov	x1, x19
  403a34:	bl	4022e0 <fputs@plt>
  403a38:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a3c:	add	x1, x1, #0xaf8
  403a40:	mov	w2, #0x5                   	// #5
  403a44:	mov	x0, xzr
  403a48:	bl	4027e0 <dcgettext@plt>
  403a4c:	mov	x1, x19
  403a50:	bl	4022e0 <fputs@plt>
  403a54:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a58:	add	x1, x1, #0xb52
  403a5c:	mov	w2, #0x5                   	// #5
  403a60:	mov	x0, xzr
  403a64:	bl	4027e0 <dcgettext@plt>
  403a68:	mov	x1, x19
  403a6c:	bl	4022e0 <fputs@plt>
  403a70:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a74:	add	x1, x1, #0xb88
  403a78:	mov	w2, #0x5                   	// #5
  403a7c:	mov	x0, xzr
  403a80:	bl	4027e0 <dcgettext@plt>
  403a84:	mov	x1, x19
  403a88:	bl	4022e0 <fputs@plt>
  403a8c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403a90:	add	x1, x1, #0xbc7
  403a94:	mov	w2, #0x5                   	// #5
  403a98:	mov	x0, xzr
  403a9c:	bl	4027e0 <dcgettext@plt>
  403aa0:	mov	x1, x19
  403aa4:	bl	4022e0 <fputs@plt>
  403aa8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403aac:	add	x1, x1, #0xc02
  403ab0:	mov	w2, #0x5                   	// #5
  403ab4:	mov	x0, xzr
  403ab8:	bl	4027e0 <dcgettext@plt>
  403abc:	mov	x1, x19
  403ac0:	bl	4022e0 <fputs@plt>
  403ac4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403ac8:	add	x1, x1, #0xc47
  403acc:	mov	w2, #0x5                   	// #5
  403ad0:	mov	x0, xzr
  403ad4:	bl	4027e0 <dcgettext@plt>
  403ad8:	mov	x1, x19
  403adc:	bl	4022e0 <fputs@plt>
  403ae0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403ae4:	add	x1, x1, #0xc96
  403ae8:	mov	w2, #0x5                   	// #5
  403aec:	mov	x0, xzr
  403af0:	bl	4027e0 <dcgettext@plt>
  403af4:	mov	x1, x19
  403af8:	bl	4022e0 <fputs@plt>
  403afc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b00:	add	x1, x1, #0xce1
  403b04:	mov	w2, #0x5                   	// #5
  403b08:	mov	x0, xzr
  403b0c:	bl	4027e0 <dcgettext@plt>
  403b10:	mov	x1, x19
  403b14:	bl	4022e0 <fputs@plt>
  403b18:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b1c:	add	x1, x1, #0xd1d
  403b20:	mov	w2, #0x5                   	// #5
  403b24:	mov	x0, xzr
  403b28:	bl	4027e0 <dcgettext@plt>
  403b2c:	mov	x1, x19
  403b30:	bl	4022e0 <fputs@plt>
  403b34:	mov	w0, #0xa                   	// #10
  403b38:	mov	x1, x19
  403b3c:	bl	4023d0 <fputc@plt>
  403b40:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b44:	add	x1, x1, #0xd61
  403b48:	mov	w2, #0x5                   	// #5
  403b4c:	mov	x0, xzr
  403b50:	bl	4027e0 <dcgettext@plt>
  403b54:	mov	x1, x19
  403b58:	bl	4022e0 <fputs@plt>
  403b5c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b60:	add	x1, x1, #0xdb1
  403b64:	mov	w2, #0x5                   	// #5
  403b68:	mov	x0, xzr
  403b6c:	bl	4027e0 <dcgettext@plt>
  403b70:	mov	x1, x19
  403b74:	bl	4022e0 <fputs@plt>
  403b78:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403b7c:	add	x1, x1, #0xdfd
  403b80:	mov	w2, #0x5                   	// #5
  403b84:	mov	x0, xzr
  403b88:	bl	4027e0 <dcgettext@plt>
  403b8c:	mov	x1, x19
  403b90:	bl	4022e0 <fputs@plt>
  403b94:	mov	w0, #0xa                   	// #10
  403b98:	mov	x1, x19
  403b9c:	bl	4023d0 <fputc@plt>
  403ba0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403ba4:	add	x1, x1, #0xe48
  403ba8:	mov	w2, #0x5                   	// #5
  403bac:	mov	x0, xzr
  403bb0:	bl	4027e0 <dcgettext@plt>
  403bb4:	mov	x1, x19
  403bb8:	bl	4022e0 <fputs@plt>
  403bbc:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403bc0:	add	x1, x1, #0xe93
  403bc4:	mov	w2, #0x5                   	// #5
  403bc8:	mov	x0, xzr
  403bcc:	bl	4027e0 <dcgettext@plt>
  403bd0:	mov	x1, x19
  403bd4:	bl	4022e0 <fputs@plt>
  403bd8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403bdc:	add	x1, x1, #0xef1
  403be0:	mov	w2, #0x5                   	// #5
  403be4:	mov	x0, xzr
  403be8:	bl	4027e0 <dcgettext@plt>
  403bec:	mov	x1, x19
  403bf0:	bl	4022e0 <fputs@plt>
  403bf4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403bf8:	add	x1, x1, #0xf2e
  403bfc:	mov	w2, #0x5                   	// #5
  403c00:	mov	x0, xzr
  403c04:	bl	4027e0 <dcgettext@plt>
  403c08:	mov	x1, x19
  403c0c:	bl	4022e0 <fputs@plt>
  403c10:	mov	w0, #0xa                   	// #10
  403c14:	mov	x1, x19
  403c18:	bl	4023d0 <fputc@plt>
  403c1c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403c20:	add	x1, x1, #0xf87
  403c24:	mov	w2, #0x5                   	// #5
  403c28:	mov	x0, xzr
  403c2c:	bl	4027e0 <dcgettext@plt>
  403c30:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403c34:	mov	x19, x0
  403c38:	add	x1, x1, #0xfa8
  403c3c:	mov	w2, #0x5                   	// #5
  403c40:	mov	x0, xzr
  403c44:	bl	4027e0 <dcgettext@plt>
  403c48:	mov	x4, x0
  403c4c:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  403c50:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403c54:	adrp	x3, 408000 <scols_reset_iter@plt+0x5710>
  403c58:	add	x0, x0, #0xf6a
  403c5c:	add	x1, x1, #0xf7b
  403c60:	add	x3, x3, #0xf99
  403c64:	mov	x2, x19
  403c68:	bl	402830 <printf@plt>
  403c6c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403c70:	add	x1, x1, #0xfb8
  403c74:	mov	w2, #0x5                   	// #5
  403c78:	mov	x0, xzr
  403c7c:	bl	4027e0 <dcgettext@plt>
  403c80:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  403c84:	add	x1, x1, #0xfd3
  403c88:	bl	402830 <printf@plt>
  403c8c:	mov	w0, wzr
  403c90:	bl	402300 <exit@plt>
  403c94:	sub	sp, sp, #0x80
  403c98:	stp	x20, x19, [sp, #112]
  403c9c:	mov	x20, x1
  403ca0:	mov	x19, x0
  403ca4:	add	x0, sp, #0x10
  403ca8:	add	x1, sp, #0x8
  403cac:	mov	w2, #0xa                   	// #10
  403cb0:	mov	x3, x20
  403cb4:	stp	x29, x30, [sp, #32]
  403cb8:	stp	x28, x27, [sp, #48]
  403cbc:	stp	x26, x25, [sp, #64]
  403cc0:	stp	x24, x23, [sp, #80]
  403cc4:	stp	x22, x21, [sp, #96]
  403cc8:	add	x29, sp, #0x20
  403ccc:	stp	xzr, xzr, [sp, #8]
  403cd0:	bl	402880 <__getdelim@plt>
  403cd4:	tbnz	x0, #63, 404040 <scols_reset_iter@plt+0x1750>
  403cd8:	bl	402670 <__ctype_b_loc@plt>
  403cdc:	mov	x21, x0
  403ce0:	mov	x26, xzr
  403ce4:	b	403d0c <scols_reset_iter@plt+0x141c>
  403ce8:	ldr	x8, [x19, #136]
  403cec:	add	x8, x8, #0x1
  403cf0:	str	x8, [x19, #136]
  403cf4:	add	x0, sp, #0x10
  403cf8:	add	x1, sp, #0x8
  403cfc:	mov	w2, #0xa                   	// #10
  403d00:	mov	x3, x20
  403d04:	bl	402880 <__getdelim@plt>
  403d08:	tbnz	x0, #63, 404040 <scols_reset_iter@plt+0x1750>
  403d0c:	ldr	x9, [sp, #16]
  403d10:	ldr	x8, [x21]
  403d14:	sub	x22, x9, #0x1
  403d18:	ldrsb	x23, [x22, #1]!
  403d1c:	ldrh	w9, [x8, x23, lsl #1]
  403d20:	tbnz	w9, #13, 403d18 <scols_reset_iter@plt+0x1428>
  403d24:	mov	w1, #0xa                   	// #10
  403d28:	mov	x0, x22
  403d2c:	bl	402750 <strchr@plt>
  403d30:	cbz	x0, 403db0 <scols_reset_iter@plt+0x14c0>
  403d34:	strb	wzr, [x0]
  403d38:	ldrb	w8, [x22]
  403d3c:	cbz	w8, 403db8 <scols_reset_iter@plt+0x14c8>
  403d40:	ldr	x23, [sp, #16]
  403d44:	mov	x0, xzr
  403d48:	mov	x2, xzr
  403d4c:	mov	x1, x23
  403d50:	bl	4022f0 <mbstowcs@plt>
  403d54:	tbnz	x0, #63, 403e5c <scols_reset_iter@plt+0x156c>
  403d58:	add	x24, x0, #0x1
  403d5c:	lsl	x25, x24, #2
  403d60:	mov	w1, #0x1                   	// #1
  403d64:	mov	x0, x25
  403d68:	bl	402540 <calloc@plt>
  403d6c:	mov	x22, x0
  403d70:	cbz	x25, 403d78 <scols_reset_iter@plt+0x1488>
  403d74:	cbz	x22, 40406c <scols_reset_iter@plt+0x177c>
  403d78:	mov	x0, x22
  403d7c:	mov	x1, x23
  403d80:	mov	x2, x24
  403d84:	bl	4022f0 <mbstowcs@plt>
  403d88:	tbnz	x0, #63, 403e54 <scols_reset_iter@plt+0x1564>
  403d8c:	cbz	x22, 403e5c <scols_reset_iter@plt+0x156c>
  403d90:	ldr	w8, [x19]
  403d94:	cmp	w8, #0x2
  403d98:	b.cs	403edc <scols_reset_iter@plt+0x15ec>  // b.hs, b.nlast
  403d9c:	ldr	x8, [x19, #136]
  403da0:	cmp	x8, x26
  403da4:	b.ls	403de4 <scols_reset_iter@plt+0x14f4>  // b.plast
  403da8:	ldr	x0, [x19, #128]
  403dac:	b	403e08 <scols_reset_iter@plt+0x1518>
  403db0:	and	w8, w23, #0xff
  403db4:	cbnz	w8, 403d40 <scols_reset_iter@plt+0x1450>
  403db8:	ldr	w8, [x19]
  403dbc:	cmp	w8, #0x2
  403dc0:	b.ne	403cf4 <scols_reset_iter@plt+0x1404>  // b.any
  403dc4:	ldrb	w8, [x19, #152]
  403dc8:	tbz	w8, #3, 403cf4 <scols_reset_iter@plt+0x1404>
  403dcc:	ldr	x0, [x19, #16]
  403dd0:	cbz	x0, 404018 <scols_reset_iter@plt+0x1728>
  403dd4:	mov	x1, xzr
  403dd8:	bl	402580 <scols_table_new_line@plt>
  403ddc:	cbnz	x0, 403cf4 <scols_reset_iter@plt+0x1404>
  403de0:	b	404030 <scols_reset_iter@plt+0x1740>
  403de4:	ldr	x0, [x19, #128]
  403de8:	add	x26, x26, #0x3e8
  403dec:	lsl	x23, x26, #3
  403df0:	mov	x1, x23
  403df4:	bl	402560 <realloc@plt>
  403df8:	cbz	x23, 403e00 <scols_reset_iter@plt+0x1510>
  403dfc:	cbz	x0, 4040f8 <scols_reset_iter@plt+0x1808>
  403e00:	ldr	x8, [x19, #136]
  403e04:	str	x0, [x19, #128]
  403e08:	lsl	x8, x8, #3
  403e0c:	str	x22, [x0, x8]
  403e10:	ldr	x9, [x19, #128]
  403e14:	ldr	x9, [x9, x8]
  403e18:	ldr	w8, [x9]
  403e1c:	cbz	w8, 403ce8 <scols_reset_iter@plt+0x13f8>
  403e20:	mov	x22, xzr
  403e24:	add	x23, x9, #0x4
  403e28:	mov	w0, w8
  403e2c:	bl	402480 <wcwidth@plt>
  403e30:	ldr	w8, [x23], #4
  403e34:	bic	w9, w0, w0, asr #31
  403e38:	add	x22, x22, x9
  403e3c:	cbnz	w8, 403e28 <scols_reset_iter@plt+0x1538>
  403e40:	ldr	x8, [x19, #144]
  403e44:	cmp	x8, x22
  403e48:	b.cs	403ce8 <scols_reset_iter@plt+0x13f8>  // b.hs, b.nlast
  403e4c:	str	x22, [x19, #144]
  403e50:	b	403ce8 <scols_reset_iter@plt+0x13f8>
  403e54:	mov	x0, x22
  403e58:	bl	4026b0 <free@plt>
  403e5c:	ldr	x0, [sp, #16]
  403e60:	sub	x1, x29, #0x8
  403e64:	stur	xzr, [x29, #-8]
  403e68:	bl	404d00 <scols_reset_iter@plt+0x2410>
  403e6c:	cbz	x0, 4040ec <scols_reset_iter@plt+0x17fc>
  403e70:	mov	x23, x0
  403e74:	mov	x0, xzr
  403e78:	mov	x1, x23
  403e7c:	mov	x2, xzr
  403e80:	bl	4022f0 <mbstowcs@plt>
  403e84:	tbnz	x0, #63, 403ec4 <scols_reset_iter@plt+0x15d4>
  403e88:	add	x24, x0, #0x1
  403e8c:	lsl	x25, x24, #2
  403e90:	mov	w1, #0x1                   	// #1
  403e94:	mov	x0, x25
  403e98:	bl	402540 <calloc@plt>
  403e9c:	mov	x22, x0
  403ea0:	cbz	x25, 403ea8 <scols_reset_iter@plt+0x15b8>
  403ea4:	cbz	x22, 40406c <scols_reset_iter@plt+0x177c>
  403ea8:	mov	x0, x22
  403eac:	mov	x1, x23
  403eb0:	mov	x2, x24
  403eb4:	bl	4022f0 <mbstowcs@plt>
  403eb8:	tbz	x0, #63, 403ec8 <scols_reset_iter@plt+0x15d8>
  403ebc:	mov	x0, x22
  403ec0:	bl	4026b0 <free@plt>
  403ec4:	mov	x22, xzr
  403ec8:	mov	x0, x23
  403ecc:	bl	4026b0 <free@plt>
  403ed0:	ldr	w8, [x19]
  403ed4:	cmp	w8, #0x2
  403ed8:	b.cc	403d9c <scols_reset_iter@plt+0x14ac>  // b.lo, b.ul, b.last
  403edc:	b.ne	403ffc <scols_reset_iter@plt+0x170c>  // b.any
  403ee0:	stur	xzr, [x29, #-8]
  403ee4:	ldr	x8, [x19, #16]
  403ee8:	str	x26, [sp]
  403eec:	cbnz	x8, 403ef8 <scols_reset_iter@plt+0x1608>
  403ef0:	mov	x0, x19
  403ef4:	bl	40424c <scols_reset_iter@plt+0x195c>
  403ef8:	mov	x28, xzr
  403efc:	mov	x24, xzr
  403f00:	mov	x25, x22
  403f04:	ldrb	w8, [x19, #152]
  403f08:	tbnz	w8, #0, 403f34 <scols_reset_iter@plt+0x1644>
  403f0c:	cbnz	x25, 403f18 <scols_reset_iter@plt+0x1628>
  403f10:	ldur	x25, [x29, #-8]
  403f14:	cbz	x25, 404008 <scols_reset_iter@plt+0x1718>
  403f18:	ldr	x1, [x19, #112]
  403f1c:	mov	x0, x25
  403f20:	bl	402440 <wcspbrk@plt>
  403f24:	cbz	x0, 403f2c <scols_reset_iter@plt+0x163c>
  403f28:	str	wzr, [x0], #4
  403f2c:	stur	x0, [x29, #-8]
  403f30:	b	403f4c <scols_reset_iter@plt+0x165c>
  403f34:	ldr	x1, [x19, #112]
  403f38:	sub	x2, x29, #0x8
  403f3c:	mov	x0, x25
  403f40:	bl	402590 <wcstok@plt>
  403f44:	mov	x25, x0
  403f48:	cbz	x0, 404008 <scols_reset_iter@plt+0x1718>
  403f4c:	ldr	x0, [x19, #16]
  403f50:	bl	4025f0 <scols_table_get_ncols@plt>
  403f54:	add	x23, x28, #0x1
  403f58:	cmp	x0, x23
  403f5c:	b.cs	403f80 <scols_reset_iter@plt+0x1690>  // b.hs, b.nlast
  403f60:	ldr	x0, [x19, #16]
  403f64:	bl	4025b0 <scols_table_is_json@plt>
  403f68:	cbnz	w0, 4040b4 <scols_reset_iter@plt+0x17c4>
  403f6c:	ldr	x0, [x19, #16]
  403f70:	fmov	d0, xzr
  403f74:	mov	x1, xzr
  403f78:	mov	w2, wzr
  403f7c:	bl	402380 <scols_table_new_column@plt>
  403f80:	cbnz	x24, 403f98 <scols_reset_iter@plt+0x16a8>
  403f84:	ldr	x0, [x19, #16]
  403f88:	mov	x1, xzr
  403f8c:	bl	402580 <scols_table_new_line@plt>
  403f90:	mov	x24, x0
  403f94:	cbz	x0, 404030 <scols_reset_iter@plt+0x1740>
  403f98:	mov	x0, xzr
  403f9c:	mov	x1, x25
  403fa0:	mov	x2, xzr
  403fa4:	bl	4027b0 <wcstombs@plt>
  403fa8:	cmn	x0, #0x1
  403fac:	b.eq	404088 <scols_reset_iter@plt+0x1798>  // b.none
  403fb0:	mov	x27, x0
  403fb4:	add	x0, x0, #0x1
  403fb8:	mov	w1, #0x1                   	// #1
  403fbc:	bl	402540 <calloc@plt>
  403fc0:	cbz	x0, 40406c <scols_reset_iter@plt+0x177c>
  403fc4:	mov	x1, x25
  403fc8:	mov	x2, x27
  403fcc:	mov	x26, x0
  403fd0:	bl	4027b0 <wcstombs@plt>
  403fd4:	cmn	x0, #0x1
  403fd8:	b.eq	404080 <scols_reset_iter@plt+0x1790>  // b.none
  403fdc:	mov	x0, x24
  403fe0:	mov	x1, x28
  403fe4:	mov	x2, x26
  403fe8:	bl	402320 <scols_line_refer_data@plt>
  403fec:	mov	x25, xzr
  403ff0:	mov	x28, x23
  403ff4:	cbz	w0, 403f04 <scols_reset_iter@plt+0x1614>
  403ff8:	b	404094 <scols_reset_iter@plt+0x17a4>
  403ffc:	mov	x0, x22
  404000:	bl	4026b0 <free@plt>
  404004:	b	403cf4 <scols_reset_iter@plt+0x1404>
  404008:	mov	x0, x22
  40400c:	bl	4026b0 <free@plt>
  404010:	ldr	x26, [sp]
  404014:	b	403cf4 <scols_reset_iter@plt+0x1404>
  404018:	mov	x0, x19
  40401c:	bl	40424c <scols_reset_iter@plt+0x195c>
  404020:	ldr	x0, [x19, #16]
  404024:	mov	x1, xzr
  404028:	bl	402580 <scols_table_new_line@plt>
  40402c:	cbnz	x0, 403cf4 <scols_reset_iter@plt+0x1404>
  404030:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404034:	add	x1, x1, #0xfe9
  404038:	mov	w2, #0x5                   	// #5
  40403c:	b	4040a4 <scols_reset_iter@plt+0x17b4>
  404040:	mov	x0, x20
  404044:	bl	402620 <feof@plt>
  404048:	cbz	w0, 40410c <scols_reset_iter@plt+0x181c>
  40404c:	ldp	x20, x19, [sp, #112]
  404050:	ldp	x22, x21, [sp, #96]
  404054:	ldp	x24, x23, [sp, #80]
  404058:	ldp	x26, x25, [sp, #64]
  40405c:	ldp	x28, x27, [sp, #48]
  404060:	ldp	x29, x30, [sp, #32]
  404064:	add	sp, sp, #0x80
  404068:	ret
  40406c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404070:	add	x1, x1, #0x93e
  404074:	mov	w0, #0x1                   	// #1
  404078:	mov	w2, #0x1                   	// #1
  40407c:	bl	4028b0 <err@plt>
  404080:	mov	x0, x26
  404084:	bl	4026b0 <free@plt>
  404088:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  40408c:	add	x1, x1, #0x62
  404090:	b	40409c <scols_reset_iter@plt+0x17ac>
  404094:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  404098:	add	x1, x1, #0x81
  40409c:	mov	w2, #0x5                   	// #5
  4040a0:	mov	x0, xzr
  4040a4:	bl	4027e0 <dcgettext@plt>
  4040a8:	mov	x1, x0
  4040ac:	mov	w0, #0x1                   	// #1
  4040b0:	bl	4028b0 <err@plt>
  4040b4:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  4040b8:	add	x1, x1, #0x28
  4040bc:	mov	w2, #0x5                   	// #5
  4040c0:	mov	x0, xzr
  4040c4:	bl	4027e0 <dcgettext@plt>
  4040c8:	ldr	x8, [x19, #16]
  4040cc:	mov	x19, x0
  4040d0:	mov	x0, x8
  4040d4:	bl	4026e0 <scols_table_get_nlines@plt>
  4040d8:	add	x2, x0, #0x1
  4040dc:	add	x3, x28, #0x1
  4040e0:	mov	w0, #0x1                   	// #1
  4040e4:	mov	x1, x19
  4040e8:	bl	402800 <errx@plt>
  4040ec:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4040f0:	add	x1, x1, #0xfdd
  4040f4:	b	404038 <scols_reset_iter@plt+0x1748>
  4040f8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4040fc:	add	x1, x1, #0x93e
  404100:	mov	w0, #0x1                   	// #1
  404104:	mov	x2, x23
  404108:	bl	4028b0 <err@plt>
  40410c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404110:	add	x1, x1, #0xfdd
  404114:	b	40409c <scols_reset_iter@plt+0x17ac>
  404118:	stp	x29, x30, [sp, #-32]!
  40411c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  404120:	stp	x20, x19, [sp, #16]
  404124:	ldr	x20, [x8, #872]
  404128:	mov	x29, sp
  40412c:	bl	402850 <__errno_location@plt>
  404130:	mov	x19, x0
  404134:	str	wzr, [x0]
  404138:	mov	x0, x20
  40413c:	bl	4028e0 <ferror@plt>
  404140:	cbnz	w0, 4041e0 <scols_reset_iter@plt+0x18f0>
  404144:	mov	x0, x20
  404148:	bl	402760 <fflush@plt>
  40414c:	cbz	w0, 4041a0 <scols_reset_iter@plt+0x18b0>
  404150:	ldr	w20, [x19]
  404154:	cmp	w20, #0x9
  404158:	b.eq	404164 <scols_reset_iter@plt+0x1874>  // b.none
  40415c:	cmp	w20, #0x20
  404160:	b.ne	4041f8 <scols_reset_iter@plt+0x1908>  // b.any
  404164:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  404168:	ldr	x20, [x8, #848]
  40416c:	str	wzr, [x19]
  404170:	mov	x0, x20
  404174:	bl	4028e0 <ferror@plt>
  404178:	cbnz	w0, 404220 <scols_reset_iter@plt+0x1930>
  40417c:	mov	x0, x20
  404180:	bl	402760 <fflush@plt>
  404184:	cbz	w0, 4041c0 <scols_reset_iter@plt+0x18d0>
  404188:	ldr	w8, [x19]
  40418c:	cmp	w8, #0x9
  404190:	b.ne	404220 <scols_reset_iter@plt+0x1930>  // b.any
  404194:	ldp	x20, x19, [sp, #16]
  404198:	ldp	x29, x30, [sp], #32
  40419c:	ret
  4041a0:	mov	x0, x20
  4041a4:	bl	402430 <fileno@plt>
  4041a8:	tbnz	w0, #31, 404150 <scols_reset_iter@plt+0x1860>
  4041ac:	bl	402310 <dup@plt>
  4041b0:	tbnz	w0, #31, 404150 <scols_reset_iter@plt+0x1860>
  4041b4:	bl	4025a0 <close@plt>
  4041b8:	cbnz	w0, 404150 <scols_reset_iter@plt+0x1860>
  4041bc:	b	404164 <scols_reset_iter@plt+0x1874>
  4041c0:	mov	x0, x20
  4041c4:	bl	402430 <fileno@plt>
  4041c8:	tbnz	w0, #31, 404188 <scols_reset_iter@plt+0x1898>
  4041cc:	bl	402310 <dup@plt>
  4041d0:	tbnz	w0, #31, 404188 <scols_reset_iter@plt+0x1898>
  4041d4:	bl	4025a0 <close@plt>
  4041d8:	cbnz	w0, 404188 <scols_reset_iter@plt+0x1898>
  4041dc:	b	404194 <scols_reset_iter@plt+0x18a4>
  4041e0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4041e4:	add	x1, x1, #0x932
  4041e8:	mov	w2, #0x5                   	// #5
  4041ec:	mov	x0, xzr
  4041f0:	bl	4027e0 <dcgettext@plt>
  4041f4:	b	404210 <scols_reset_iter@plt+0x1920>
  4041f8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4041fc:	add	x1, x1, #0x932
  404200:	mov	w2, #0x5                   	// #5
  404204:	mov	x0, xzr
  404208:	bl	4027e0 <dcgettext@plt>
  40420c:	cbnz	w20, 40421c <scols_reset_iter@plt+0x192c>
  404210:	bl	402780 <warnx@plt>
  404214:	mov	w0, #0x1                   	// #1
  404218:	bl	4022b0 <_exit@plt>
  40421c:	bl	402660 <warn@plt>
  404220:	mov	w0, #0x1                   	// #1
  404224:	bl	4022b0 <_exit@plt>
  404228:	stp	x29, x30, [sp, #-16]!
  40422c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  404230:	adrp	x2, 408000 <scols_reset_iter@plt+0x5710>
  404234:	mov	w3, w0
  404238:	add	x1, x1, #0x9a4
  40423c:	add	x2, x2, #0x987
  404240:	mov	w0, #0x1                   	// #1
  404244:	mov	x29, sp
  404248:	bl	4028b0 <err@plt>
  40424c:	stp	x29, x30, [sp, #-32]!
  404250:	stp	x20, x19, [sp, #16]
  404254:	mov	x19, x0
  404258:	mov	w0, wzr
  40425c:	mov	x29, sp
  404260:	bl	4028a0 <scols_init_debug@plt>
  404264:	bl	402510 <scols_new_table@plt>
  404268:	str	x0, [x19, #16]
  40426c:	cbz	x0, 404320 <scols_reset_iter@plt+0x1a30>
  404270:	ldr	x1, [x19, #120]
  404274:	bl	4023f0 <scols_table_set_column_separator@plt>
  404278:	ldrb	w8, [x19, #152]
  40427c:	ldr	x0, [x19, #16]
  404280:	mov	w1, #0x1                   	// #1
  404284:	tbnz	w8, #1, 4042e4 <scols_reset_iter@plt+0x19f4>
  404288:	bl	402870 <scols_table_enable_noencoding@plt>
  40428c:	ldr	x8, [x19, #24]
  404290:	cbz	x8, 40430c <scols_reset_iter@plt+0x1a1c>
  404294:	ldr	x1, [x8]
  404298:	cbz	x1, 4042b8 <scols_reset_iter@plt+0x19c8>
  40429c:	add	x20, x8, #0x8
  4042a0:	ldr	x0, [x19, #16]
  4042a4:	fmov	d0, xzr
  4042a8:	mov	w2, wzr
  4042ac:	bl	402380 <scols_table_new_column@plt>
  4042b0:	ldr	x1, [x20], #8
  4042b4:	cbnz	x1, 4042a0 <scols_reset_iter@plt+0x19b0>
  4042b8:	ldrb	w8, [x19, #152]
  4042bc:	tbz	w8, #2, 4042d0 <scols_reset_iter@plt+0x19e0>
  4042c0:	ldr	x0, [x19, #16]
  4042c4:	mov	w1, #0x1                   	// #1
  4042c8:	bl	402600 <scols_table_enable_header_repeat@plt>
  4042cc:	ldrb	w8, [x19, #152]
  4042d0:	ldr	x0, [x19, #16]
  4042d4:	ubfx	w1, w8, #4, #1
  4042d8:	ldp	x20, x19, [sp, #16]
  4042dc:	ldp	x29, x30, [sp], #32
  4042e0:	b	402360 <scols_table_enable_noheadings@plt>
  4042e4:	bl	4026f0 <scols_table_enable_json@plt>
  4042e8:	ldr	x8, [x19, #32]
  4042ec:	ldr	x0, [x19, #16]
  4042f0:	adrp	x9, 409000 <scols_reset_iter@plt+0x6710>
  4042f4:	add	x9, x9, #0x22
  4042f8:	cmp	x8, #0x0
  4042fc:	csel	x1, x9, x8, eq  // eq = none
  404300:	bl	402340 <scols_table_set_name@plt>
  404304:	ldr	x8, [x19, #24]
  404308:	cbnz	x8, 404294 <scols_reset_iter@plt+0x19a4>
  40430c:	ldr	x0, [x19, #16]
  404310:	mov	w1, #0x1                   	// #1
  404314:	ldp	x20, x19, [sp, #16]
  404318:	ldp	x29, x30, [sp], #32
  40431c:	b	402360 <scols_table_enable_noheadings@plt>
  404320:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  404324:	add	x1, x1, #0x8
  404328:	mov	w2, #0x5                   	// #5
  40432c:	bl	4027e0 <dcgettext@plt>
  404330:	mov	x1, x0
  404334:	mov	w0, #0x1                   	// #1
  404338:	bl	4028b0 <err@plt>
  40433c:	stp	x29, x30, [sp, #-80]!
  404340:	stp	x24, x23, [sp, #32]
  404344:	mov	x23, x1
  404348:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  40434c:	stp	x20, x19, [sp, #64]
  404350:	mov	x20, x0
  404354:	add	x1, x1, #0x985
  404358:	mov	x0, x23
  40435c:	str	x25, [sp, #16]
  404360:	stp	x22, x21, [sp, #48]
  404364:	mov	x29, sp
  404368:	mov	x22, x3
  40436c:	mov	w19, w2
  404370:	bl	4078e8 <scols_reset_iter@plt+0x4ff8>
  404374:	cbz	x0, 4044c0 <scols_reset_iter@plt+0x1bd0>
  404378:	ldr	x22, [x0]
  40437c:	mov	x21, x0
  404380:	cbz	x22, 404420 <scols_reset_iter@plt+0x1b30>
  404384:	cmp	w19, #0x20
  404388:	b.ne	4043e8 <scols_reset_iter@plt+0x1af8>  // b.any
  40438c:	adrp	x23, 409000 <scols_reset_iter@plt+0x6710>
  404390:	mov	w24, wzr
  404394:	mov	w25, #0x8                   	// #8
  404398:	add	x23, x23, #0x14c
  40439c:	b	4043b0 <scols_reset_iter@plt+0x1ac0>
  4043a0:	mov	w24, #0x1                   	// #1
  4043a4:	ldr	x22, [x21, x25]
  4043a8:	add	x25, x25, #0x8
  4043ac:	cbz	x22, 40443c <scols_reset_iter@plt+0x1b4c>
  4043b0:	mov	x0, x22
  4043b4:	mov	x1, x23
  4043b8:	bl	402650 <strcmp@plt>
  4043bc:	cbz	w0, 4043a0 <scols_reset_iter@plt+0x1ab0>
  4043c0:	mov	x0, x20
  4043c4:	mov	x1, x22
  4043c8:	bl	4044f8 <scols_reset_iter@plt+0x1c08>
  4043cc:	cbz	x0, 4043a4 <scols_reset_iter@plt+0x1ab4>
  4043d0:	mov	x22, x0
  4043d4:	bl	402490 <scols_column_get_flags@plt>
  4043d8:	orr	w1, w0, #0x20
  4043dc:	mov	x0, x22
  4043e0:	bl	402520 <scols_column_set_flags@plt>
  4043e4:	b	4043a4 <scols_reset_iter@plt+0x1ab4>
  4043e8:	add	x23, x21, #0x8
  4043ec:	b	4043f8 <scols_reset_iter@plt+0x1b08>
  4043f0:	ldr	x22, [x23], #8
  4043f4:	cbz	x22, 404420 <scols_reset_iter@plt+0x1b30>
  4043f8:	mov	x0, x20
  4043fc:	mov	x1, x22
  404400:	bl	4044f8 <scols_reset_iter@plt+0x1c08>
  404404:	cbz	x0, 4043f0 <scols_reset_iter@plt+0x1b00>
  404408:	mov	x22, x0
  40440c:	bl	402490 <scols_column_get_flags@plt>
  404410:	orr	w1, w0, w19
  404414:	mov	x0, x22
  404418:	bl	402520 <scols_column_set_flags@plt>
  40441c:	b	4043f0 <scols_reset_iter@plt+0x1b00>
  404420:	mov	x0, x21
  404424:	ldp	x20, x19, [sp, #64]
  404428:	ldp	x22, x21, [sp, #48]
  40442c:	ldp	x24, x23, [sp, #32]
  404430:	ldr	x25, [sp, #16]
  404434:	ldp	x29, x30, [sp], #80
  404438:	b	407244 <scols_reset_iter@plt+0x4954>
  40443c:	mov	x0, x21
  404440:	bl	407244 <scols_reset_iter@plt+0x4954>
  404444:	cbz	w24, 4044a8 <scols_reset_iter@plt+0x1bb8>
  404448:	mov	w0, wzr
  40444c:	bl	4027d0 <scols_new_iter@plt>
  404450:	cbz	x0, 4044f0 <scols_reset_iter@plt+0x1c00>
  404454:	mov	x21, x0
  404458:	b	404474 <scols_reset_iter@plt+0x1b84>
  40445c:	ldr	x22, [x29, #24]
  404460:	mov	x0, x22
  404464:	bl	402490 <scols_column_get_flags@plt>
  404468:	orr	w1, w0, w19
  40446c:	mov	x0, x22
  404470:	bl	402520 <scols_column_set_flags@plt>
  404474:	ldr	x0, [x20, #16]
  404478:	add	x2, x29, #0x18
  40447c:	mov	x1, x21
  404480:	bl	402690 <scols_table_next_column@plt>
  404484:	cbnz	w0, 4044a0 <scols_reset_iter@plt+0x1bb0>
  404488:	ldr	x0, [x29, #24]
  40448c:	bl	402370 <scols_column_get_header@plt>
  404490:	cbz	x0, 40445c <scols_reset_iter@plt+0x1b6c>
  404494:	bl	4026a0 <scols_cell_get_data@plt>
  404498:	cbnz	x0, 404474 <scols_reset_iter@plt+0x1b84>
  40449c:	b	40445c <scols_reset_iter@plt+0x1b6c>
  4044a0:	mov	x0, x21
  4044a4:	bl	402390 <scols_free_iter@plt>
  4044a8:	ldp	x20, x19, [sp, #64]
  4044ac:	ldp	x22, x21, [sp, #48]
  4044b0:	ldp	x24, x23, [sp, #32]
  4044b4:	ldr	x25, [sp, #16]
  4044b8:	ldp	x29, x30, [sp], #80
  4044bc:	ret
  4044c0:	bl	402850 <__errno_location@plt>
  4044c4:	ldr	w8, [x0]
  4044c8:	cmp	w8, #0xc
  4044cc:	b.ne	4044d8 <scols_reset_iter@plt+0x1be8>  // b.any
  4044d0:	mov	w0, #0xc5                  	// #197
  4044d4:	bl	404228 <scols_reset_iter@plt+0x1938>
  4044d8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4044dc:	add	x1, x1, #0x99b
  4044e0:	mov	w0, #0x1                   	// #1
  4044e4:	mov	x2, x22
  4044e8:	mov	x3, x23
  4044ec:	bl	402800 <errx@plt>
  4044f0:	mov	w0, #0x130                 	// #304
  4044f4:	bl	404228 <scols_reset_iter@plt+0x1938>
  4044f8:	stp	x29, x30, [sp, #-48]!
  4044fc:	stp	x20, x19, [sp, #32]
  404500:	mov	x19, x1
  404504:	mov	x20, x0
  404508:	mov	x0, x1
  40450c:	mov	x1, xzr
  404510:	stp	x22, x21, [sp, #16]
  404514:	mov	x29, sp
  404518:	bl	405710 <scols_reset_iter@plt+0x2e20>
  40451c:	cbz	w0, 40455c <scols_reset_iter@plt+0x1c6c>
  404520:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  404524:	add	x1, x1, #0x14e
  404528:	mov	w2, #0x5                   	// #5
  40452c:	mov	x0, xzr
  404530:	bl	4027e0 <dcgettext@plt>
  404534:	mov	x1, x0
  404538:	mov	x0, x19
  40453c:	bl	405bb4 <scols_reset_iter@plt+0x32c4>
  404540:	sub	w21, w0, #0x1
  404544:	ldr	x0, [x20, #16]
  404548:	mov	w1, w21
  40454c:	ldp	x20, x19, [sp, #32]
  404550:	ldp	x22, x21, [sp, #16]
  404554:	ldp	x29, x30, [sp], #48
  404558:	b	4024f0 <scols_table_get_column@plt>
  40455c:	ldr	x8, [x20, #24]
  404560:	cbz	x8, 40458c <scols_reset_iter@plt+0x1c9c>
  404564:	ldr	x0, [x8]
  404568:	cbz	x0, 40458c <scols_reset_iter@plt+0x1c9c>
  40456c:	mov	x21, xzr
  404570:	add	x22, x8, #0x8
  404574:	mov	x1, x19
  404578:	bl	402550 <strcasecmp@plt>
  40457c:	cbz	w0, 404544 <scols_reset_iter@plt+0x1c54>
  404580:	ldr	x0, [x22, x21, lsl #3]
  404584:	add	x21, x21, #0x1
  404588:	cbnz	x0, 404574 <scols_reset_iter@plt+0x1c84>
  40458c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  404590:	add	x1, x1, #0x165
  404594:	mov	w2, #0x5                   	// #5
  404598:	mov	x0, xzr
  40459c:	bl	4027e0 <dcgettext@plt>
  4045a0:	mov	x1, x0
  4045a4:	mov	w0, #0x1                   	// #1
  4045a8:	mov	x2, x19
  4045ac:	bl	402800 <errx@plt>
  4045b0:	sub	sp, sp, #0x60
  4045b4:	stp	x29, x30, [sp, #16]
  4045b8:	stp	x20, x19, [sp, #80]
  4045bc:	add	x29, sp, #0x10
  4045c0:	mov	x19, x2
  4045c4:	str	x25, [sp, #32]
  4045c8:	stp	x24, x23, [sp, #48]
  4045cc:	stp	x22, x21, [sp, #64]
  4045d0:	str	xzr, [x29, #24]
  4045d4:	cbz	x0, 404728 <scols_reset_iter@plt+0x1e38>
  4045d8:	ldrb	w22, [x0]
  4045dc:	mov	x20, x0
  4045e0:	mov	x21, xzr
  4045e4:	mov	x24, xzr
  4045e8:	cmp	w22, #0x0
  4045ec:	cset	w8, ne  // ne = any
  4045f0:	subs	x9, x1, #0x1
  4045f4:	cset	w10, cs  // cs = hs, nlast
  4045f8:	add	x9, x0, x9
  4045fc:	tst	w10, w8
  404600:	csel	x25, x9, x0, ne  // ne = any
  404604:	cmp	x25, x0
  404608:	b.cc	404730 <scols_reset_iter@plt+0x1e40>  // b.lo, b.ul, b.last
  40460c:	cbz	w22, 404730 <scols_reset_iter@plt+0x1e40>
  404610:	mov	x21, xzr
  404614:	mov	x24, xzr
  404618:	cmp	x20, x25
  40461c:	b.cs	404638 <scols_reset_iter@plt+0x1d48>  // b.hs, b.nlast
  404620:	and	w8, w22, #0xff
  404624:	cmp	w8, #0x5c
  404628:	b.ne	404638 <scols_reset_iter@plt+0x1d48>  // b.any
  40462c:	ldrb	w8, [x20, #1]
  404630:	cmp	w8, #0x78
  404634:	b.eq	4046a4 <scols_reset_iter@plt+0x1db4>  // b.none
  404638:	bl	402670 <__ctype_b_loc@plt>
  40463c:	ldr	x8, [x0]
  404640:	and	x9, x22, #0xff
  404644:	ldrh	w8, [x8, x9, lsl #1]
  404648:	tbnz	w8, #1, 4046a4 <scols_reset_iter@plt+0x1db4>
  40464c:	mov	x23, x0
  404650:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  404654:	mov	x2, x0
  404658:	sub	x0, x29, #0x4
  40465c:	add	x3, x29, #0x18
  404660:	mov	x1, x20
  404664:	bl	402290 <mbrtowc@plt>
  404668:	cbz	x0, 404730 <scols_reset_iter@plt+0x1e40>
  40466c:	mov	x22, x0
  404670:	cmn	x0, #0x2
  404674:	b.cc	4046bc <scols_reset_iter@plt+0x1dcc>  // b.lo, b.ul, b.last
  404678:	ldr	x8, [x23]
  40467c:	ldrb	w9, [x20]
  404680:	ldrh	w8, [x8, x9, lsl #1]
  404684:	tbnz	w8, #14, 4046e8 <scols_reset_iter@plt+0x1df8>
  404688:	add	x21, x21, #0x4
  40468c:	add	x24, x24, #0x4
  404690:	mov	w22, #0x1                   	// #1
  404694:	add	x20, x20, x22
  404698:	cmp	x20, x25
  40469c:	b.ls	40471c <scols_reset_iter@plt+0x1e2c>  // b.plast
  4046a0:	b	404730 <scols_reset_iter@plt+0x1e40>
  4046a4:	add	x21, x21, #0x4
  4046a8:	add	x24, x24, #0x4
  4046ac:	add	x20, x20, #0x1
  4046b0:	cmp	x20, x25
  4046b4:	b.ls	40471c <scols_reset_iter@plt+0x1e2c>  // b.plast
  4046b8:	b	404730 <scols_reset_iter@plt+0x1e40>
  4046bc:	ldur	w0, [x29, #-4]
  4046c0:	bl	402810 <iswprint@plt>
  4046c4:	cbz	w0, 404704 <scols_reset_iter@plt+0x1e14>
  4046c8:	ldur	w0, [x29, #-4]
  4046cc:	bl	402480 <wcwidth@plt>
  4046d0:	add	x21, x21, w0, sxtw
  4046d4:	add	x24, x22, x24
  4046d8:	add	x20, x20, x22
  4046dc:	cmp	x20, x25
  4046e0:	b.ls	40471c <scols_reset_iter@plt+0x1e2c>  // b.plast
  4046e4:	b	404730 <scols_reset_iter@plt+0x1e40>
  4046e8:	add	x21, x21, #0x1
  4046ec:	add	x24, x24, #0x1
  4046f0:	mov	w22, #0x1                   	// #1
  4046f4:	add	x20, x20, x22
  4046f8:	cmp	x20, x25
  4046fc:	b.ls	40471c <scols_reset_iter@plt+0x1e2c>  // b.plast
  404700:	b	404730 <scols_reset_iter@plt+0x1e40>
  404704:	lsl	x8, x22, #2
  404708:	add	x21, x8, x21
  40470c:	add	x24, x8, x24
  404710:	add	x20, x20, x22
  404714:	cmp	x20, x25
  404718:	b.hi	404730 <scols_reset_iter@plt+0x1e40>  // b.pmore
  40471c:	ldrb	w22, [x20]
  404720:	cbnz	w22, 404618 <scols_reset_iter@plt+0x1d28>
  404724:	b	404730 <scols_reset_iter@plt+0x1e40>
  404728:	mov	x21, xzr
  40472c:	mov	x24, xzr
  404730:	cbz	x19, 404738 <scols_reset_iter@plt+0x1e48>
  404734:	str	x24, [x19]
  404738:	mov	x0, x21
  40473c:	ldp	x20, x19, [sp, #80]
  404740:	ldp	x22, x21, [sp, #64]
  404744:	ldp	x24, x23, [sp, #48]
  404748:	ldr	x25, [sp, #32]
  40474c:	ldp	x29, x30, [sp, #16]
  404750:	add	sp, sp, #0x60
  404754:	ret
  404758:	stp	x29, x30, [sp, #-32]!
  40475c:	str	x19, [sp, #16]
  404760:	mov	x29, sp
  404764:	cbz	x0, 404794 <scols_reset_iter@plt+0x1ea4>
  404768:	ldrb	w8, [x0]
  40476c:	mov	x19, x0
  404770:	cbz	w8, 404794 <scols_reset_iter@plt+0x1ea4>
  404774:	mov	x0, x19
  404778:	bl	4022d0 <strlen@plt>
  40477c:	mov	x1, x0
  404780:	mov	x0, x19
  404784:	ldr	x19, [sp, #16]
  404788:	mov	x2, xzr
  40478c:	ldp	x29, x30, [sp], #32
  404790:	b	4045b0 <scols_reset_iter@plt+0x1cc0>
  404794:	ldr	x19, [sp, #16]
  404798:	mov	x0, xzr
  40479c:	ldp	x29, x30, [sp], #32
  4047a0:	ret
  4047a4:	sub	sp, sp, #0x70
  4047a8:	stp	x29, x30, [sp, #16]
  4047ac:	str	x27, [sp, #32]
  4047b0:	stp	x26, x25, [sp, #48]
  4047b4:	stp	x24, x23, [sp, #64]
  4047b8:	stp	x22, x21, [sp, #80]
  4047bc:	stp	x20, x19, [sp, #96]
  4047c0:	add	x29, sp, #0x10
  4047c4:	cbz	x0, 404978 <scols_reset_iter@plt+0x2088>
  4047c8:	mov	x21, x0
  4047cc:	ldrb	w8, [x21]
  4047d0:	mov	x19, x2
  4047d4:	mov	x0, xzr
  4047d8:	str	xzr, [x29, #24]
  4047dc:	cbz	x2, 404ae4 <scols_reset_iter@plt+0x21f4>
  4047e0:	cbz	w8, 404ae4 <scols_reset_iter@plt+0x21f4>
  4047e4:	str	xzr, [x1]
  4047e8:	ldrb	w27, [x21]
  4047ec:	mov	x20, x1
  4047f0:	mov	x22, x19
  4047f4:	cbz	w27, 404adc <scols_reset_iter@plt+0x21ec>
  4047f8:	mov	x23, x3
  4047fc:	cbz	x3, 404980 <scols_reset_iter@plt+0x2090>
  404800:	adrp	x24, 409000 <scols_reset_iter@plt+0x6710>
  404804:	add	x24, x24, #0x1a3
  404808:	mov	x22, x19
  40480c:	b	404820 <scols_reset_iter@plt+0x1f30>
  404810:	add	x21, x21, #0x1
  404814:	strb	w27, [x22], #1
  404818:	ldrb	w27, [x21]
  40481c:	cbz	w27, 404adc <scols_reset_iter@plt+0x21ec>
  404820:	sxtb	w1, w27
  404824:	mov	x0, x23
  404828:	bl	402750 <strchr@plt>
  40482c:	cbnz	x0, 404810 <scols_reset_iter@plt+0x1f20>
  404830:	and	w8, w27, #0xff
  404834:	cmp	w8, #0x5c
  404838:	b.ne	404848 <scols_reset_iter@plt+0x1f58>  // b.any
  40483c:	ldrb	w8, [x21, #1]
  404840:	cmp	w8, #0x78
  404844:	b.eq	4048c0 <scols_reset_iter@plt+0x1fd0>  // b.none
  404848:	bl	402670 <__ctype_b_loc@plt>
  40484c:	ldr	x8, [x0]
  404850:	and	x9, x27, #0xff
  404854:	ldrh	w8, [x8, x9, lsl #1]
  404858:	tbnz	w8, #1, 4048c0 <scols_reset_iter@plt+0x1fd0>
  40485c:	mov	x26, x0
  404860:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  404864:	mov	x2, x0
  404868:	sub	x0, x29, #0x4
  40486c:	add	x3, x29, #0x18
  404870:	mov	x1, x21
  404874:	bl	402290 <mbrtowc@plt>
  404878:	cbz	x0, 404adc <scols_reset_iter@plt+0x21ec>
  40487c:	mov	x25, x0
  404880:	cmn	x0, #0x2
  404884:	b.cc	4048e8 <scols_reset_iter@plt+0x1ff8>  // b.lo, b.ul, b.last
  404888:	ldr	x8, [x26]
  40488c:	ldrb	w2, [x21]
  404890:	ldrh	w8, [x8, x2, lsl #1]
  404894:	tbnz	w8, #14, 404920 <scols_reset_iter@plt+0x2030>
  404898:	mov	x0, x22
  40489c:	mov	x1, x24
  4048a0:	bl	4023b0 <sprintf@plt>
  4048a4:	ldr	x8, [x20]
  4048a8:	mov	w25, #0x1                   	// #1
  4048ac:	add	x22, x22, #0x4
  4048b0:	add	x21, x21, x25
  4048b4:	add	x8, x8, #0x4
  4048b8:	str	x8, [x20]
  4048bc:	b	404818 <scols_reset_iter@plt+0x1f28>
  4048c0:	and	w2, w27, #0xff
  4048c4:	mov	x0, x22
  4048c8:	mov	x1, x24
  4048cc:	bl	4023b0 <sprintf@plt>
  4048d0:	ldr	x8, [x20]
  4048d4:	add	x22, x22, #0x4
  4048d8:	add	x21, x21, #0x1
  4048dc:	add	x8, x8, #0x4
  4048e0:	str	x8, [x20]
  4048e4:	b	404818 <scols_reset_iter@plt+0x1f28>
  4048e8:	ldur	w0, [x29, #-4]
  4048ec:	bl	402810 <iswprint@plt>
  4048f0:	cbz	w0, 404940 <scols_reset_iter@plt+0x2050>
  4048f4:	mov	x0, x22
  4048f8:	mov	x1, x21
  4048fc:	mov	x2, x25
  404900:	bl	4022a0 <memcpy@plt>
  404904:	ldur	w0, [x29, #-4]
  404908:	add	x22, x22, x25
  40490c:	bl	402480 <wcwidth@plt>
  404910:	ldr	x8, [x20]
  404914:	add	x8, x8, w0, sxtw
  404918:	str	x8, [x20]
  40491c:	b	404970 <scols_reset_iter@plt+0x2080>
  404920:	ldr	x8, [x20]
  404924:	mov	w25, #0x1                   	// #1
  404928:	add	x8, x8, #0x1
  40492c:	str	x8, [x20]
  404930:	ldrb	w8, [x21]
  404934:	add	x21, x21, x25
  404938:	strb	w8, [x22], #1
  40493c:	b	404818 <scols_reset_iter@plt+0x1f28>
  404940:	mov	x26, xzr
  404944:	ldrb	w2, [x21, x26]
  404948:	mov	x0, x22
  40494c:	mov	x1, x24
  404950:	bl	4023b0 <sprintf@plt>
  404954:	ldr	x8, [x20]
  404958:	add	x26, x26, #0x1
  40495c:	add	x22, x22, #0x4
  404960:	cmp	x25, x26
  404964:	add	x8, x8, #0x4
  404968:	str	x8, [x20]
  40496c:	b.ne	404944 <scols_reset_iter@plt+0x2054>  // b.any
  404970:	add	x21, x21, x25
  404974:	b	404818 <scols_reset_iter@plt+0x1f28>
  404978:	str	xzr, [x29, #24]
  40497c:	b	404ae4 <scols_reset_iter@plt+0x21f4>
  404980:	adrp	x23, 409000 <scols_reset_iter@plt+0x6710>
  404984:	add	x23, x23, #0x1a3
  404988:	mov	x22, x19
  40498c:	b	4049b8 <scols_reset_iter@plt+0x20c8>
  404990:	and	w2, w27, #0xff
  404994:	mov	x0, x22
  404998:	mov	x1, x23
  40499c:	bl	4023b0 <sprintf@plt>
  4049a0:	ldr	x8, [x20]
  4049a4:	add	x22, x22, #0x4
  4049a8:	add	x8, x8, #0x4
  4049ac:	str	x8, [x20]
  4049b0:	ldrb	w27, [x21, #1]!
  4049b4:	cbz	w27, 404adc <scols_reset_iter@plt+0x21ec>
  4049b8:	and	w8, w27, #0xff
  4049bc:	cmp	w8, #0x5c
  4049c0:	b.ne	4049d0 <scols_reset_iter@plt+0x20e0>  // b.any
  4049c4:	ldrb	w8, [x21, #1]
  4049c8:	cmp	w8, #0x78
  4049cc:	b.eq	404990 <scols_reset_iter@plt+0x20a0>  // b.none
  4049d0:	bl	402670 <__ctype_b_loc@plt>
  4049d4:	ldr	x8, [x0]
  4049d8:	and	x9, x27, #0xff
  4049dc:	ldrh	w8, [x8, x9, lsl #1]
  4049e0:	tbnz	w8, #1, 404990 <scols_reset_iter@plt+0x20a0>
  4049e4:	mov	x25, x0
  4049e8:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  4049ec:	mov	x2, x0
  4049f0:	sub	x0, x29, #0x4
  4049f4:	add	x3, x29, #0x18
  4049f8:	mov	x1, x21
  4049fc:	bl	402290 <mbrtowc@plt>
  404a00:	cbz	x0, 404adc <scols_reset_iter@plt+0x21ec>
  404a04:	mov	x24, x0
  404a08:	cmn	x0, #0x3
  404a0c:	b.ls	404a40 <scols_reset_iter@plt+0x2150>  // b.plast
  404a10:	ldr	x8, [x25]
  404a14:	ldrb	w2, [x21]
  404a18:	ldrh	w8, [x8, x2, lsl #1]
  404a1c:	tbnz	w8, #14, 404a84 <scols_reset_iter@plt+0x2194>
  404a20:	mov	x0, x22
  404a24:	mov	x1, x23
  404a28:	bl	4023b0 <sprintf@plt>
  404a2c:	ldr	x8, [x20]
  404a30:	add	x22, x22, #0x4
  404a34:	add	x8, x8, #0x4
  404a38:	str	x8, [x20]
  404a3c:	b	404a98 <scols_reset_iter@plt+0x21a8>
  404a40:	ldur	w0, [x29, #-4]
  404a44:	bl	402810 <iswprint@plt>
  404a48:	cbz	w0, 404aa0 <scols_reset_iter@plt+0x21b0>
  404a4c:	mov	x0, x22
  404a50:	mov	x1, x21
  404a54:	mov	x2, x24
  404a58:	bl	4022a0 <memcpy@plt>
  404a5c:	ldur	w0, [x29, #-4]
  404a60:	add	x22, x22, x24
  404a64:	bl	402480 <wcwidth@plt>
  404a68:	ldr	x8, [x20]
  404a6c:	add	x21, x21, x24
  404a70:	add	x8, x8, w0, sxtw
  404a74:	str	x8, [x20]
  404a78:	ldrb	w27, [x21]
  404a7c:	cbnz	w27, 4049b8 <scols_reset_iter@plt+0x20c8>
  404a80:	b	404adc <scols_reset_iter@plt+0x21ec>
  404a84:	ldr	x8, [x20]
  404a88:	add	x8, x8, #0x1
  404a8c:	str	x8, [x20]
  404a90:	ldrb	w8, [x21]
  404a94:	strb	w8, [x22], #1
  404a98:	mov	w24, #0x1                   	// #1
  404a9c:	b	404ad0 <scols_reset_iter@plt+0x21e0>
  404aa0:	mov	x25, xzr
  404aa4:	ldrb	w2, [x21, x25]
  404aa8:	mov	x0, x22
  404aac:	mov	x1, x23
  404ab0:	bl	4023b0 <sprintf@plt>
  404ab4:	ldr	x8, [x20]
  404ab8:	add	x25, x25, #0x1
  404abc:	add	x22, x22, #0x4
  404ac0:	cmp	x24, x25
  404ac4:	add	x8, x8, #0x4
  404ac8:	str	x8, [x20]
  404acc:	b.ne	404aa4 <scols_reset_iter@plt+0x21b4>  // b.any
  404ad0:	add	x21, x21, x24
  404ad4:	ldrb	w27, [x21]
  404ad8:	cbnz	w27, 4049b8 <scols_reset_iter@plt+0x20c8>
  404adc:	mov	x0, x19
  404ae0:	strb	wzr, [x22]
  404ae4:	ldp	x20, x19, [sp, #96]
  404ae8:	ldp	x22, x21, [sp, #80]
  404aec:	ldp	x24, x23, [sp, #64]
  404af0:	ldp	x26, x25, [sp, #48]
  404af4:	ldr	x27, [sp, #32]
  404af8:	ldp	x29, x30, [sp, #16]
  404afc:	add	sp, sp, #0x70
  404b00:	ret
  404b04:	sub	sp, sp, #0x50
  404b08:	stp	x29, x30, [sp, #16]
  404b0c:	stp	x24, x23, [sp, #32]
  404b10:	stp	x22, x21, [sp, #48]
  404b14:	stp	x20, x19, [sp, #64]
  404b18:	add	x29, sp, #0x10
  404b1c:	cbz	x0, 404c48 <scols_reset_iter@plt+0x2358>
  404b20:	mov	x21, x0
  404b24:	ldrb	w8, [x21]
  404b28:	mov	x19, x2
  404b2c:	mov	x0, xzr
  404b30:	str	xzr, [sp, #8]
  404b34:	cbz	x2, 404c58 <scols_reset_iter@plt+0x2368>
  404b38:	cbz	w8, 404c58 <scols_reset_iter@plt+0x2368>
  404b3c:	str	xzr, [x1]
  404b40:	ldrb	w8, [x21]
  404b44:	mov	x20, x1
  404b48:	mov	x22, x19
  404b4c:	cbz	w8, 404c50 <scols_reset_iter@plt+0x2360>
  404b50:	adrp	x23, 409000 <scols_reset_iter@plt+0x6710>
  404b54:	add	x23, x23, #0x1a3
  404b58:	mov	x22, x19
  404b5c:	b	404b84 <scols_reset_iter@plt+0x2294>
  404b60:	ldr	x8, [x20]
  404b64:	mov	w24, #0x1                   	// #1
  404b68:	add	x8, x8, #0x1
  404b6c:	str	x8, [x20]
  404b70:	ldrb	w8, [x21]
  404b74:	strb	w8, [x22], #1
  404b78:	add	x21, x21, x24
  404b7c:	ldrb	w8, [x21]
  404b80:	cbz	w8, 404c50 <scols_reset_iter@plt+0x2360>
  404b84:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  404b88:	mov	x2, x0
  404b8c:	add	x0, sp, #0x4
  404b90:	add	x3, sp, #0x8
  404b94:	mov	x1, x21
  404b98:	bl	402290 <mbrtowc@plt>
  404b9c:	cbz	x0, 404c50 <scols_reset_iter@plt+0x2360>
  404ba0:	mov	x24, x0
  404ba4:	cmn	x0, #0x2
  404ba8:	b.cc	404be4 <scols_reset_iter@plt+0x22f4>  // b.lo, b.ul, b.last
  404bac:	bl	402670 <__ctype_b_loc@plt>
  404bb0:	ldr	x8, [x0]
  404bb4:	ldrb	w2, [x21]
  404bb8:	ldrh	w8, [x8, x2, lsl #1]
  404bbc:	tbnz	w8, #14, 404b60 <scols_reset_iter@plt+0x2270>
  404bc0:	mov	x0, x22
  404bc4:	mov	x1, x23
  404bc8:	bl	4023b0 <sprintf@plt>
  404bcc:	ldr	x8, [x20]
  404bd0:	add	x22, x22, #0x4
  404bd4:	mov	w24, #0x1                   	// #1
  404bd8:	add	x8, x8, #0x4
  404bdc:	str	x8, [x20]
  404be0:	b	404b78 <scols_reset_iter@plt+0x2288>
  404be4:	ldrb	w8, [x21]
  404be8:	cmp	w8, #0x5c
  404bec:	b.ne	404c1c <scols_reset_iter@plt+0x232c>  // b.any
  404bf0:	ldrb	w8, [x21, #1]
  404bf4:	cmp	w8, #0x78
  404bf8:	b.ne	404c1c <scols_reset_iter@plt+0x232c>  // b.any
  404bfc:	mov	w2, #0x5c                  	// #92
  404c00:	mov	x0, x22
  404c04:	mov	x1, x23
  404c08:	bl	4023b0 <sprintf@plt>
  404c0c:	ldr	x8, [x20]
  404c10:	add	x22, x22, #0x4
  404c14:	add	x8, x8, #0x4
  404c18:	b	404c40 <scols_reset_iter@plt+0x2350>
  404c1c:	mov	x0, x22
  404c20:	mov	x1, x21
  404c24:	mov	x2, x24
  404c28:	bl	4022a0 <memcpy@plt>
  404c2c:	ldr	w0, [sp, #4]
  404c30:	add	x22, x22, x24
  404c34:	bl	402480 <wcwidth@plt>
  404c38:	ldr	x8, [x20]
  404c3c:	add	x8, x8, w0, sxtw
  404c40:	str	x8, [x20]
  404c44:	b	404b78 <scols_reset_iter@plt+0x2288>
  404c48:	str	xzr, [sp, #8]
  404c4c:	b	404c58 <scols_reset_iter@plt+0x2368>
  404c50:	mov	x0, x19
  404c54:	strb	wzr, [x22]
  404c58:	ldp	x20, x19, [sp, #64]
  404c5c:	ldp	x22, x21, [sp, #48]
  404c60:	ldp	x24, x23, [sp, #32]
  404c64:	ldp	x29, x30, [sp, #16]
  404c68:	add	sp, sp, #0x50
  404c6c:	ret
  404c70:	mov	w8, #0x1                   	// #1
  404c74:	bfi	x8, x0, #2, #62
  404c78:	mov	x0, x8
  404c7c:	ret
  404c80:	stp	x29, x30, [sp, #-48]!
  404c84:	str	x21, [sp, #16]
  404c88:	stp	x20, x19, [sp, #32]
  404c8c:	mov	x29, sp
  404c90:	cbz	x0, 404cd4 <scols_reset_iter@plt+0x23e4>
  404c94:	mov	x19, x1
  404c98:	mov	x20, x0
  404c9c:	bl	4022d0 <strlen@plt>
  404ca0:	cbz	x0, 404cd4 <scols_reset_iter@plt+0x23e4>
  404ca4:	mov	w8, #0x1                   	// #1
  404ca8:	bfi	x8, x0, #2, #62
  404cac:	mov	x0, x8
  404cb0:	bl	402470 <malloc@plt>
  404cb4:	mov	x21, x0
  404cb8:	cbz	x0, 404ce4 <scols_reset_iter@plt+0x23f4>
  404cbc:	mov	x0, x20
  404cc0:	mov	x1, x19
  404cc4:	mov	x2, x21
  404cc8:	mov	x3, xzr
  404ccc:	bl	4047a4 <scols_reset_iter@plt+0x1eb4>
  404cd0:	cbz	x0, 404ce4 <scols_reset_iter@plt+0x23f4>
  404cd4:	ldp	x20, x19, [sp, #32]
  404cd8:	ldr	x21, [sp, #16]
  404cdc:	ldp	x29, x30, [sp], #48
  404ce0:	ret
  404ce4:	mov	x0, x21
  404ce8:	bl	4026b0 <free@plt>
  404cec:	mov	x0, xzr
  404cf0:	ldp	x20, x19, [sp, #32]
  404cf4:	ldr	x21, [sp, #16]
  404cf8:	ldp	x29, x30, [sp], #48
  404cfc:	ret
  404d00:	stp	x29, x30, [sp, #-48]!
  404d04:	str	x21, [sp, #16]
  404d08:	stp	x20, x19, [sp, #32]
  404d0c:	mov	x29, sp
  404d10:	cbz	x0, 404d50 <scols_reset_iter@plt+0x2460>
  404d14:	mov	x19, x1
  404d18:	mov	x20, x0
  404d1c:	bl	4022d0 <strlen@plt>
  404d20:	cbz	x0, 404d50 <scols_reset_iter@plt+0x2460>
  404d24:	mov	w8, #0x1                   	// #1
  404d28:	bfi	x8, x0, #2, #62
  404d2c:	mov	x0, x8
  404d30:	bl	402470 <malloc@plt>
  404d34:	mov	x21, x0
  404d38:	cbz	x0, 404d60 <scols_reset_iter@plt+0x2470>
  404d3c:	mov	x0, x20
  404d40:	mov	x1, x19
  404d44:	mov	x2, x21
  404d48:	bl	404b04 <scols_reset_iter@plt+0x2214>
  404d4c:	cbz	x0, 404d60 <scols_reset_iter@plt+0x2470>
  404d50:	ldp	x20, x19, [sp, #32]
  404d54:	ldr	x21, [sp, #16]
  404d58:	ldp	x29, x30, [sp], #48
  404d5c:	ret
  404d60:	mov	x0, x21
  404d64:	bl	4026b0 <free@plt>
  404d68:	mov	x0, xzr
  404d6c:	ldp	x20, x19, [sp, #32]
  404d70:	ldr	x21, [sp, #16]
  404d74:	ldp	x29, x30, [sp], #48
  404d78:	ret
  404d7c:	stp	x29, x30, [sp, #-80]!
  404d80:	stp	x26, x25, [sp, #16]
  404d84:	stp	x24, x23, [sp, #32]
  404d88:	stp	x22, x21, [sp, #48]
  404d8c:	stp	x20, x19, [sp, #64]
  404d90:	mov	x29, sp
  404d94:	mov	x21, x1
  404d98:	mov	x19, x0
  404d9c:	bl	4022d0 <strlen@plt>
  404da0:	mov	x20, x0
  404da4:	mov	x0, xzr
  404da8:	mov	x1, x19
  404dac:	mov	x2, xzr
  404db0:	bl	4022f0 <mbstowcs@plt>
  404db4:	cmn	x0, #0x1
  404db8:	b.eq	404e34 <scols_reset_iter@plt+0x2544>  // b.none
  404dbc:	lsl	x8, x0, #2
  404dc0:	mov	x23, x0
  404dc4:	add	x1, x8, #0x4
  404dc8:	mov	w0, #0x1                   	// #1
  404dcc:	bl	402540 <calloc@plt>
  404dd0:	mov	x22, x0
  404dd4:	cbz	x0, 404e38 <scols_reset_iter@plt+0x2548>
  404dd8:	mov	x0, x22
  404ddc:	mov	x1, x19
  404de0:	mov	x2, x23
  404de4:	bl	4022f0 <mbstowcs@plt>
  404de8:	cbz	x0, 404e38 <scols_reset_iter@plt+0x2548>
  404dec:	ldr	w0, [x22]
  404df0:	cbz	w0, 404e64 <scols_reset_iter@plt+0x2574>
  404df4:	ldr	x24, [x21]
  404df8:	mov	x25, xzr
  404dfc:	mov	w26, #0xfffd                	// #65533
  404e00:	mov	x23, x22
  404e04:	bl	402480 <wcwidth@plt>
  404e08:	cmn	w0, #0x1
  404e0c:	b.ne	404e18 <scols_reset_iter@plt+0x2528>  // b.any
  404e10:	mov	w0, #0x1                   	// #1
  404e14:	str	w26, [x23]
  404e18:	add	x8, x25, w0, sxtw
  404e1c:	cmp	x8, x24
  404e20:	b.hi	404e70 <scols_reset_iter@plt+0x2580>  // b.pmore
  404e24:	ldr	w0, [x23, #4]!
  404e28:	mov	x25, x8
  404e2c:	cbnz	w0, 404e04 <scols_reset_iter@plt+0x2514>
  404e30:	b	404e74 <scols_reset_iter@plt+0x2584>
  404e34:	mov	x22, xzr
  404e38:	mov	x0, x22
  404e3c:	bl	4026b0 <free@plt>
  404e40:	tbnz	x20, #63, 404e48 <scols_reset_iter@plt+0x2558>
  404e44:	strb	wzr, [x19, x20]
  404e48:	mov	x0, x20
  404e4c:	ldp	x20, x19, [sp, #64]
  404e50:	ldp	x22, x21, [sp, #48]
  404e54:	ldp	x24, x23, [sp, #32]
  404e58:	ldp	x26, x25, [sp, #16]
  404e5c:	ldp	x29, x30, [sp], #80
  404e60:	ret
  404e64:	mov	x8, xzr
  404e68:	mov	x23, x22
  404e6c:	b	404e74 <scols_reset_iter@plt+0x2584>
  404e70:	mov	x8, x25
  404e74:	mov	x0, x19
  404e78:	mov	x1, x22
  404e7c:	mov	x2, x20
  404e80:	str	wzr, [x23]
  404e84:	str	x8, [x21]
  404e88:	bl	4027b0 <wcstombs@plt>
  404e8c:	mov	x20, x0
  404e90:	mov	x0, x22
  404e94:	bl	4026b0 <free@plt>
  404e98:	tbz	x20, #63, 404e44 <scols_reset_iter@plt+0x2554>
  404e9c:	b	404e48 <scols_reset_iter@plt+0x2558>
  404ea0:	mov	w6, #0x20                  	// #32
  404ea4:	b	404ea8 <scols_reset_iter@plt+0x25b8>
  404ea8:	sub	sp, sp, #0x80
  404eac:	stp	x29, x30, [sp, #32]
  404eb0:	stp	x28, x27, [sp, #48]
  404eb4:	stp	x26, x25, [sp, #64]
  404eb8:	stp	x24, x23, [sp, #80]
  404ebc:	stp	x22, x21, [sp, #96]
  404ec0:	stp	x20, x19, [sp, #112]
  404ec4:	add	x29, sp, #0x20
  404ec8:	mov	w19, w6
  404ecc:	mov	w21, w5
  404ed0:	mov	w25, w4
  404ed4:	mov	x24, x3
  404ed8:	mov	x23, x2
  404edc:	mov	x20, x1
  404ee0:	mov	x28, x0
  404ee4:	bl	4022d0 <strlen@plt>
  404ee8:	mov	x27, x0
  404eec:	bl	4026d0 <__ctype_get_mb_cur_max@plt>
  404ef0:	cmp	x0, #0x2
  404ef4:	b.cc	404f84 <scols_reset_iter@plt+0x2694>  // b.lo, b.ul, b.last
  404ef8:	mov	x0, xzr
  404efc:	mov	x1, x28
  404f00:	mov	x2, xzr
  404f04:	bl	4022f0 <mbstowcs@plt>
  404f08:	cmn	x0, #0x1
  404f0c:	b.eq	404f94 <scols_reset_iter@plt+0x26a4>  // b.none
  404f10:	stur	w21, [x29, #-8]
  404f14:	add	x21, x0, #0x1
  404f18:	mov	x26, x0
  404f1c:	lsl	x0, x21, #2
  404f20:	bl	402470 <malloc@plt>
  404f24:	cbz	x0, 404fa8 <scols_reset_iter@plt+0x26b8>
  404f28:	mov	x1, x28
  404f2c:	mov	x2, x21
  404f30:	mov	x22, x0
  404f34:	bl	4022f0 <mbstowcs@plt>
  404f38:	cbz	x0, 404fc0 <scols_reset_iter@plt+0x26d0>
  404f3c:	str	wzr, [x22, x26, lsl #2]
  404f40:	ldr	w0, [x22]
  404f44:	str	w19, [sp]
  404f48:	mov	x19, x20
  404f4c:	str	w25, [sp, #12]
  404f50:	str	x23, [sp, #16]
  404f54:	cbz	w0, 404fcc <scols_reset_iter@plt+0x26dc>
  404f58:	mov	w23, wzr
  404f5c:	add	x20, x22, #0x4
  404f60:	mov	w21, #0xfffd                	// #65533
  404f64:	b	404f70 <scols_reset_iter@plt+0x2680>
  404f68:	ldr	w0, [x20], #4
  404f6c:	cbz	w0, 404fd0 <scols_reset_iter@plt+0x26e0>
  404f70:	bl	402810 <iswprint@plt>
  404f74:	cbnz	w0, 404f68 <scols_reset_iter@plt+0x2678>
  404f78:	mov	w23, #0x1                   	// #1
  404f7c:	stur	w21, [x20, #-4]
  404f80:	b	404f68 <scols_reset_iter@plt+0x2678>
  404f84:	mov	x26, xzr
  404f88:	mov	x22, xzr
  404f8c:	mov	x21, x27
  404f90:	b	405114 <scols_reset_iter@plt+0x2824>
  404f94:	mov	x26, xzr
  404f98:	tbnz	w21, #0, 404fb4 <scols_reset_iter@plt+0x26c4>
  404f9c:	mov	x24, #0xffffffffffffffff    	// #-1
  404fa0:	mov	x22, x26
  404fa4:	b	405288 <scols_reset_iter@plt+0x2998>
  404fa8:	ldur	w8, [x29, #-8]
  404fac:	mov	x26, xzr
  404fb0:	tbz	w8, #0, 404f9c <scols_reset_iter@plt+0x26ac>
  404fb4:	mov	x22, x26
  404fb8:	mov	x21, x27
  404fbc:	b	405114 <scols_reset_iter@plt+0x2824>
  404fc0:	mov	x26, xzr
  404fc4:	mov	x21, x27
  404fc8:	b	405114 <scols_reset_iter@plt+0x2824>
  404fcc:	mov	w23, wzr
  404fd0:	mov	x25, x28
  404fd4:	mov	x20, xzr
  404fd8:	mov	w21, wzr
  404fdc:	add	x26, x26, #0x1
  404fe0:	mov	w28, #0x7fffffff            	// #2147483647
  404fe4:	cmp	x26, x20
  404fe8:	b.eq	405028 <scols_reset_iter@plt+0x2738>  // b.none
  404fec:	ldr	w0, [x22, x20, lsl #2]
  404ff0:	cbz	w0, 405028 <scols_reset_iter@plt+0x2738>
  404ff4:	bl	402480 <wcwidth@plt>
  404ff8:	cmn	w0, #0x1
  404ffc:	sub	w8, w28, w0
  405000:	cset	w9, eq  // eq = none
  405004:	cmp	w21, w8
  405008:	cset	w8, gt
  40500c:	orr	w8, w9, w8
  405010:	cmp	w8, #0x0
  405014:	csel	w9, wzr, w0, ne  // ne = any
  405018:	add	w21, w9, w21
  40501c:	add	x20, x20, #0x1
  405020:	cbz	w8, 404fe4 <scols_reset_iter@plt+0x26f4>
  405024:	mov	w21, #0xffffffff            	// #-1
  405028:	sxtw	x21, w21
  40502c:	mov	x20, x19
  405030:	mov	x28, x25
  405034:	tbz	w23, #0, 405050 <scols_reset_iter@plt+0x2760>
  405038:	mov	x0, xzr
  40503c:	mov	x1, x22
  405040:	mov	x2, xzr
  405044:	bl	4027b0 <wcstombs@plt>
  405048:	ldr	w19, [sp]
  40504c:	b	405064 <scols_reset_iter@plt+0x2774>
  405050:	ldr	x8, [x24]
  405054:	ldr	w19, [sp]
  405058:	mov	x0, x27
  40505c:	cmp	x8, x21
  405060:	b.cs	4050d8 <scols_reset_iter@plt+0x27e8>  // b.hs, b.nlast
  405064:	add	x0, x0, #0x1
  405068:	str	x0, [sp]
  40506c:	bl	402470 <malloc@plt>
  405070:	ldr	x23, [sp, #16]
  405074:	ldr	w25, [sp, #12]
  405078:	mov	x26, x0
  40507c:	cbz	x0, 4050c8 <scols_reset_iter@plt+0x27d8>
  405080:	ldr	w0, [x22]
  405084:	cbz	w0, 4050e0 <scols_reset_iter@plt+0x27f0>
  405088:	ldr	x25, [x24]
  40508c:	mov	x27, xzr
  405090:	mov	w28, #0xfffd                	// #65533
  405094:	mov	x23, x22
  405098:	bl	402480 <wcwidth@plt>
  40509c:	cmn	w0, #0x1
  4050a0:	b.ne	4050ac <scols_reset_iter@plt+0x27bc>  // b.any
  4050a4:	mov	w0, #0x1                   	// #1
  4050a8:	str	w28, [x23]
  4050ac:	add	x21, x27, w0, sxtw
  4050b0:	cmp	x21, x25
  4050b4:	b.hi	4050ec <scols_reset_iter@plt+0x27fc>  // b.pmore
  4050b8:	ldr	w0, [x23, #4]!
  4050bc:	mov	x27, x21
  4050c0:	cbnz	w0, 405098 <scols_reset_iter@plt+0x27a8>
  4050c4:	b	4050f0 <scols_reset_iter@plt+0x2800>
  4050c8:	ldur	w8, [x29, #-8]
  4050cc:	tbnz	w8, #0, 405114 <scols_reset_iter@plt+0x2824>
  4050d0:	mov	x24, #0xffffffffffffffff    	// #-1
  4050d4:	b	405288 <scols_reset_iter@plt+0x2998>
  4050d8:	mov	x26, xzr
  4050dc:	b	40510c <scols_reset_iter@plt+0x281c>
  4050e0:	mov	x21, xzr
  4050e4:	mov	x23, x22
  4050e8:	b	4050f0 <scols_reset_iter@plt+0x2800>
  4050ec:	mov	x21, x27
  4050f0:	ldr	x2, [sp]
  4050f4:	mov	x0, x26
  4050f8:	mov	x1, x22
  4050fc:	str	wzr, [x23]
  405100:	bl	4027b0 <wcstombs@plt>
  405104:	mov	x27, x0
  405108:	mov	x28, x26
  40510c:	ldr	x23, [sp, #16]
  405110:	ldr	w25, [sp, #12]
  405114:	ldr	x8, [x24]
  405118:	cmp	x21, x8
  40511c:	csel	x9, x8, x21, hi  // hi = pmore
  405120:	csel	x27, x8, x27, hi  // hi = pmore
  405124:	cmp	x8, x21
  405128:	sub	x8, x8, x9
  40512c:	csel	x8, x8, xzr, hi  // hi = pmore
  405130:	str	x9, [x24]
  405134:	add	x24, x8, x27
  405138:	cbz	x23, 405288 <scols_reset_iter@plt+0x2998>
  40513c:	add	x9, x20, x23
  405140:	sub	x21, x9, #0x1
  405144:	stur	x22, [x29, #-8]
  405148:	cbz	w25, 4051ec <scols_reset_iter@plt+0x28fc>
  40514c:	cmp	w25, #0x1
  405150:	b.eq	405178 <scols_reset_iter@plt+0x2888>  // b.none
  405154:	cmp	w25, #0x2
  405158:	b.ne	4052bc <scols_reset_iter@plt+0x29cc>  // b.any
  40515c:	mov	x22, x28
  405160:	lsr	x28, x8, #1
  405164:	and	x8, x8, #0x1
  405168:	add	x8, x28, x8
  40516c:	cmp	x21, x20
  405170:	b.hi	405188 <scols_reset_iter@plt+0x2898>  // b.pmore
  405174:	b	4051e0 <scols_reset_iter@plt+0x28f0>
  405178:	mov	x22, x28
  40517c:	mov	x28, xzr
  405180:	cmp	x21, x20
  405184:	b.ls	4051e0 <scols_reset_iter@plt+0x28f0>  // b.plast
  405188:	cbz	x8, 4051e0 <scols_reset_iter@plt+0x28f0>
  40518c:	mvn	x9, x20
  405190:	add	x9, x21, x9
  405194:	str	x26, [sp, #16]
  405198:	mov	x26, x20
  40519c:	sub	x20, x8, #0x1
  4051a0:	cmp	x20, x9
  4051a4:	csel	x8, x9, x20, hi  // hi = pmore
  4051a8:	add	x2, x8, #0x1
  4051ac:	mov	x0, x26
  4051b0:	mov	w1, w19
  4051b4:	mov	w25, w19
  4051b8:	bl	402500 <memset@plt>
  4051bc:	sub	x8, x23, #0x2
  4051c0:	cmp	x20, x8
  4051c4:	csel	x8, x20, x8, cc  // cc = lo, ul, last
  4051c8:	mov	x20, x26
  4051cc:	ldr	x26, [sp, #16]
  4051d0:	add	x8, x8, x20
  4051d4:	mov	x19, x23
  4051d8:	add	x23, x8, #0x1
  4051dc:	b	405200 <scols_reset_iter@plt+0x2910>
  4051e0:	mov	w25, w19
  4051e4:	mov	x19, x23
  4051e8:	b	4051fc <scols_reset_iter@plt+0x290c>
  4051ec:	mov	x22, x28
  4051f0:	mov	w25, w19
  4051f4:	mov	x19, x23
  4051f8:	mov	x28, x8
  4051fc:	mov	x23, x20
  405200:	sub	x8, x21, x23
  405204:	cmp	x27, x8
  405208:	csel	x27, x27, x8, cc  // cc = lo, ul, last
  40520c:	mov	x0, x23
  405210:	mov	x1, x22
  405214:	mov	x2, x27
  405218:	strb	wzr, [x23]
  40521c:	bl	4022a0 <memcpy@plt>
  405220:	add	x0, x23, x27
  405224:	cbz	x28, 405280 <scols_reset_iter@plt+0x2990>
  405228:	ldur	x22, [x29, #-8]
  40522c:	cmp	x0, x21
  405230:	b.cs	405284 <scols_reset_iter@plt+0x2994>  // b.hs, b.nlast
  405234:	mvn	x8, x0
  405238:	add	x8, x21, x8
  40523c:	mov	x21, x20
  405240:	sub	x20, x28, #0x1
  405244:	cmp	x20, x8
  405248:	csel	x8, x8, x20, hi  // hi = pmore
  40524c:	add	x2, x8, #0x1
  405250:	mov	w1, w25
  405254:	bl	402500 <memset@plt>
  405258:	sub	x8, x19, x23
  40525c:	sub	x8, x8, x27
  405260:	add	x8, x8, x21
  405264:	sub	x8, x8, #0x2
  405268:	cmp	x20, x8
  40526c:	csel	x8, x8, x20, hi  // hi = pmore
  405270:	add	x8, x27, x8
  405274:	add	x8, x8, x23
  405278:	add	x0, x8, #0x1
  40527c:	b	405284 <scols_reset_iter@plt+0x2994>
  405280:	ldur	x22, [x29, #-8]
  405284:	strb	wzr, [x0]
  405288:	mov	x0, x22
  40528c:	bl	4026b0 <free@plt>
  405290:	mov	x0, x26
  405294:	bl	4026b0 <free@plt>
  405298:	mov	x0, x24
  40529c:	ldp	x20, x19, [sp, #112]
  4052a0:	ldp	x22, x21, [sp, #96]
  4052a4:	ldp	x24, x23, [sp, #80]
  4052a8:	ldp	x26, x25, [sp, #64]
  4052ac:	ldp	x28, x27, [sp, #48]
  4052b0:	ldp	x29, x30, [sp, #32]
  4052b4:	add	sp, sp, #0x80
  4052b8:	ret
  4052bc:	bl	4025d0 <abort@plt>
  4052c0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4052c4:	str	w0, [x8, #840]
  4052c8:	ret
  4052cc:	sub	sp, sp, #0x70
  4052d0:	stp	x29, x30, [sp, #16]
  4052d4:	stp	x28, x27, [sp, #32]
  4052d8:	stp	x26, x25, [sp, #48]
  4052dc:	stp	x24, x23, [sp, #64]
  4052e0:	stp	x22, x21, [sp, #80]
  4052e4:	stp	x20, x19, [sp, #96]
  4052e8:	add	x29, sp, #0x10
  4052ec:	str	xzr, [x1]
  4052f0:	cbz	x0, 405334 <scols_reset_iter@plt+0x2a44>
  4052f4:	ldrb	w22, [x0]
  4052f8:	mov	x20, x0
  4052fc:	cbz	x22, 405334 <scols_reset_iter@plt+0x2a44>
  405300:	mov	x21, x2
  405304:	mov	x19, x1
  405308:	bl	402670 <__ctype_b_loc@plt>
  40530c:	ldr	x8, [x0]
  405310:	mov	x23, x0
  405314:	ldrh	w9, [x8, x22, lsl #1]
  405318:	tbz	w9, #13, 40532c <scols_reset_iter@plt+0x2a3c>
  40531c:	add	x9, x20, #0x1
  405320:	ldrb	w22, [x9], #1
  405324:	ldrh	w10, [x8, x22, lsl #1]
  405328:	tbnz	w10, #13, 405320 <scols_reset_iter@plt+0x2a30>
  40532c:	cmp	w22, #0x2d
  405330:	b.ne	405368 <scols_reset_iter@plt+0x2a78>  // b.any
  405334:	mov	w22, #0xffffffea            	// #-22
  405338:	neg	w19, w22
  40533c:	bl	402850 <__errno_location@plt>
  405340:	str	w19, [x0]
  405344:	mov	w0, w22
  405348:	ldp	x20, x19, [sp, #96]
  40534c:	ldp	x22, x21, [sp, #80]
  405350:	ldp	x24, x23, [sp, #64]
  405354:	ldp	x26, x25, [sp, #48]
  405358:	ldp	x28, x27, [sp, #32]
  40535c:	ldp	x29, x30, [sp, #16]
  405360:	add	sp, sp, #0x70
  405364:	ret
  405368:	bl	402850 <__errno_location@plt>
  40536c:	mov	x24, x0
  405370:	str	wzr, [x0]
  405374:	add	x1, sp, #0x8
  405378:	mov	x0, x20
  40537c:	mov	w2, wzr
  405380:	mov	w3, wzr
  405384:	str	xzr, [sp, #8]
  405388:	bl	402530 <__strtoul_internal@plt>
  40538c:	ldr	x25, [sp, #8]
  405390:	ldr	w8, [x24]
  405394:	cmp	x25, x20
  405398:	b.eq	405518 <scols_reset_iter@plt+0x2c28>  // b.none
  40539c:	add	x9, x0, #0x1
  4053a0:	mov	x20, x0
  4053a4:	cmp	x9, #0x1
  4053a8:	b.hi	4053b0 <scols_reset_iter@plt+0x2ac0>  // b.pmore
  4053ac:	cbnz	w8, 40551c <scols_reset_iter@plt+0x2c2c>
  4053b0:	cbz	x25, 405528 <scols_reset_iter@plt+0x2c38>
  4053b4:	ldrb	w8, [x25]
  4053b8:	cbz	w8, 405528 <scols_reset_iter@plt+0x2c38>
  4053bc:	mov	w27, wzr
  4053c0:	mov	x28, xzr
  4053c4:	b	4053d4 <scols_reset_iter@plt+0x2ae4>
  4053c8:	mov	x28, xzr
  4053cc:	str	x22, [sp, #8]
  4053d0:	mov	x25, x22
  4053d4:	ldrb	w8, [x25, #1]
  4053d8:	cmp	w8, #0x61
  4053dc:	b.le	40540c <scols_reset_iter@plt+0x2b1c>
  4053e0:	cmp	w8, #0x62
  4053e4:	b.eq	405414 <scols_reset_iter@plt+0x2b24>  // b.none
  4053e8:	cmp	w8, #0x69
  4053ec:	b.ne	405424 <scols_reset_iter@plt+0x2b34>  // b.any
  4053f0:	ldrb	w8, [x25, #2]
  4053f4:	orr	w8, w8, #0x20
  4053f8:	cmp	w8, #0x62
  4053fc:	b.ne	405424 <scols_reset_iter@plt+0x2b34>  // b.any
  405400:	ldrb	w8, [x25, #3]
  405404:	cbnz	w8, 405424 <scols_reset_iter@plt+0x2b34>
  405408:	b	405538 <scols_reset_iter@plt+0x2c48>
  40540c:	cmp	w8, #0x42
  405410:	b.ne	405420 <scols_reset_iter@plt+0x2b30>  // b.any
  405414:	ldrb	w8, [x25, #2]
  405418:	cbnz	w8, 405424 <scols_reset_iter@plt+0x2b34>
  40541c:	b	405540 <scols_reset_iter@plt+0x2c50>
  405420:	cbz	w8, 405538 <scols_reset_iter@plt+0x2c48>
  405424:	bl	402410 <localeconv@plt>
  405428:	cbz	x0, 405448 <scols_reset_iter@plt+0x2b58>
  40542c:	ldr	x22, [x0]
  405430:	cbz	x22, 405454 <scols_reset_iter@plt+0x2b64>
  405434:	mov	x0, x22
  405438:	bl	4022d0 <strlen@plt>
  40543c:	mov	x26, x0
  405440:	mov	w8, #0x1                   	// #1
  405444:	b	40545c <scols_reset_iter@plt+0x2b6c>
  405448:	mov	w8, wzr
  40544c:	mov	x22, xzr
  405450:	b	405458 <scols_reset_iter@plt+0x2b68>
  405454:	mov	w8, wzr
  405458:	mov	x26, xzr
  40545c:	cbnz	x28, 405334 <scols_reset_iter@plt+0x2a44>
  405460:	ldrb	w9, [x25]
  405464:	eor	w8, w8, #0x1
  405468:	cmp	w9, #0x0
  40546c:	cset	w9, eq  // eq = none
  405470:	orr	w8, w8, w9
  405474:	tbnz	w8, #0, 405334 <scols_reset_iter@plt+0x2a44>
  405478:	mov	x0, x22
  40547c:	mov	x1, x25
  405480:	mov	x2, x26
  405484:	bl	4024b0 <strncmp@plt>
  405488:	cbnz	w0, 405334 <scols_reset_iter@plt+0x2a44>
  40548c:	add	x22, x25, x26
  405490:	ldrb	w8, [x22]
  405494:	cmp	w8, #0x30
  405498:	b.ne	4054ac <scols_reset_iter@plt+0x2bbc>  // b.any
  40549c:	ldrb	w8, [x22, #1]!
  4054a0:	add	w27, w27, #0x1
  4054a4:	cmp	w8, #0x30
  4054a8:	b.eq	40549c <scols_reset_iter@plt+0x2bac>  // b.none
  4054ac:	ldr	x9, [x23]
  4054b0:	sxtb	x8, w8
  4054b4:	ldrh	w8, [x9, x8, lsl #1]
  4054b8:	tbz	w8, #11, 4053c8 <scols_reset_iter@plt+0x2ad8>
  4054bc:	add	x1, sp, #0x8
  4054c0:	mov	x0, x22
  4054c4:	mov	w2, wzr
  4054c8:	mov	w3, wzr
  4054cc:	str	wzr, [x24]
  4054d0:	str	xzr, [sp, #8]
  4054d4:	bl	402530 <__strtoul_internal@plt>
  4054d8:	ldr	x25, [sp, #8]
  4054dc:	ldr	w8, [x24]
  4054e0:	cmp	x25, x22
  4054e4:	b.eq	405518 <scols_reset_iter@plt+0x2c28>  // b.none
  4054e8:	add	x9, x0, #0x1
  4054ec:	cmp	x9, #0x1
  4054f0:	b.hi	4054f8 <scols_reset_iter@plt+0x2c08>  // b.pmore
  4054f4:	cbnz	w8, 40551c <scols_reset_iter@plt+0x2c2c>
  4054f8:	mov	x28, xzr
  4054fc:	cbz	x0, 4053d4 <scols_reset_iter@plt+0x2ae4>
  405500:	cbz	x25, 405334 <scols_reset_iter@plt+0x2a44>
  405504:	ldrb	w8, [x25]
  405508:	mov	w22, #0xffffffea            	// #-22
  40550c:	mov	x28, x0
  405510:	cbnz	w8, 4053d4 <scols_reset_iter@plt+0x2ae4>
  405514:	b	405338 <scols_reset_iter@plt+0x2a48>
  405518:	cbz	w8, 405334 <scols_reset_iter@plt+0x2a44>
  40551c:	neg	w22, w8
  405520:	tbz	w22, #31, 405344 <scols_reset_iter@plt+0x2a54>
  405524:	b	405338 <scols_reset_iter@plt+0x2a48>
  405528:	mov	w22, wzr
  40552c:	str	x20, [x19]
  405530:	tbz	w22, #31, 405344 <scols_reset_iter@plt+0x2a54>
  405534:	b	405338 <scols_reset_iter@plt+0x2a48>
  405538:	mov	w24, #0x400                 	// #1024
  40553c:	b	405544 <scols_reset_iter@plt+0x2c54>
  405540:	mov	w24, #0x3e8                 	// #1000
  405544:	ldrsb	w22, [x25]
  405548:	adrp	x23, 409000 <scols_reset_iter@plt+0x6710>
  40554c:	add	x23, x23, #0x1b6
  405550:	mov	w2, #0x9                   	// #9
  405554:	mov	x0, x23
  405558:	mov	w1, w22
  40555c:	bl	402790 <memchr@plt>
  405560:	cbnz	x0, 405580 <scols_reset_iter@plt+0x2c90>
  405564:	adrp	x23, 409000 <scols_reset_iter@plt+0x6710>
  405568:	add	x23, x23, #0x1bf
  40556c:	mov	w2, #0x9                   	// #9
  405570:	mov	x0, x23
  405574:	mov	w1, w22
  405578:	bl	402790 <memchr@plt>
  40557c:	cbz	x0, 405334 <scols_reset_iter@plt+0x2a44>
  405580:	sub	w8, w0, w23
  405584:	adds	w8, w8, #0x1
  405588:	b.cs	4055ac <scols_reset_iter@plt+0x2cbc>  // b.hs, b.nlast
  40558c:	mvn	w9, w0
  405590:	add	w9, w9, w23
  405594:	umulh	x10, x24, x20
  405598:	cmp	xzr, x10
  40559c:	b.ne	4055b4 <scols_reset_iter@plt+0x2cc4>  // b.any
  4055a0:	adds	w9, w9, #0x1
  4055a4:	mul	x20, x20, x24
  4055a8:	b.cc	405594 <scols_reset_iter@plt+0x2ca4>  // b.lo, b.ul, b.last
  4055ac:	mov	w22, wzr
  4055b0:	b	4055b8 <scols_reset_iter@plt+0x2cc8>
  4055b4:	mov	w22, #0xffffffde            	// #-34
  4055b8:	cbz	x21, 4055c0 <scols_reset_iter@plt+0x2cd0>
  4055bc:	str	w8, [x21]
  4055c0:	cbz	x28, 40552c <scols_reset_iter@plt+0x2c3c>
  4055c4:	cbz	w8, 40552c <scols_reset_iter@plt+0x2c3c>
  4055c8:	mvn	w8, w0
  4055cc:	add	w9, w8, w23
  4055d0:	mov	w8, #0x1                   	// #1
  4055d4:	umulh	x10, x24, x8
  4055d8:	cmp	xzr, x10
  4055dc:	b.ne	4055ec <scols_reset_iter@plt+0x2cfc>  // b.any
  4055e0:	adds	w9, w9, #0x1
  4055e4:	mul	x8, x8, x24
  4055e8:	b.cc	4055d4 <scols_reset_iter@plt+0x2ce4>  // b.lo, b.ul, b.last
  4055ec:	mov	w9, #0xa                   	// #10
  4055f0:	cmp	x28, #0xb
  4055f4:	b.cc	405608 <scols_reset_iter@plt+0x2d18>  // b.lo, b.ul, b.last
  4055f8:	add	x9, x9, x9, lsl #2
  4055fc:	lsl	x9, x9, #1
  405600:	cmp	x9, x28
  405604:	b.cc	4055f8 <scols_reset_iter@plt+0x2d08>  // b.lo, b.ul, b.last
  405608:	cmp	w27, #0x1
  40560c:	b.lt	4056b8 <scols_reset_iter@plt+0x2dc8>  // b.tstop
  405610:	cmp	w27, #0x3
  405614:	b.hi	405620 <scols_reset_iter@plt+0x2d30>  // b.pmore
  405618:	mov	w10, wzr
  40561c:	b	4056a4 <scols_reset_iter@plt+0x2db4>
  405620:	mov	w10, #0x1                   	// #1
  405624:	dup	v0.2d, x10
  405628:	and	w10, w27, #0xfffffffc
  40562c:	mov	v1.16b, v0.16b
  405630:	mov	v1.d[0], x9
  405634:	mov	w9, w10
  405638:	fmov	x12, d1
  40563c:	mov	x11, v1.d[1]
  405640:	add	x12, x12, x12, lsl #2
  405644:	fmov	x13, d0
  405648:	lsl	x12, x12, #1
  40564c:	add	x11, x11, x11, lsl #2
  405650:	add	x13, x13, x13, lsl #2
  405654:	mov	x14, v0.d[1]
  405658:	fmov	d1, x12
  40565c:	lsl	x11, x11, #1
  405660:	lsl	x13, x13, #1
  405664:	mov	v1.d[1], x11
  405668:	add	x11, x14, x14, lsl #2
  40566c:	fmov	d0, x13
  405670:	lsl	x11, x11, #1
  405674:	subs	w9, w9, #0x4
  405678:	mov	v0.d[1], x11
  40567c:	b.ne	405638 <scols_reset_iter@plt+0x2d48>  // b.any
  405680:	mov	x9, v1.d[1]
  405684:	mov	x11, v0.d[1]
  405688:	fmov	x12, d1
  40568c:	fmov	x13, d0
  405690:	mul	x12, x13, x12
  405694:	mul	x9, x11, x9
  405698:	cmp	w27, w10
  40569c:	mul	x9, x12, x9
  4056a0:	b.eq	4056b8 <scols_reset_iter@plt+0x2dc8>  // b.none
  4056a4:	sub	w10, w27, w10
  4056a8:	add	x9, x9, x9, lsl #2
  4056ac:	subs	w10, w10, #0x1
  4056b0:	lsl	x9, x9, #1
  4056b4:	b.ne	4056a8 <scols_reset_iter@plt+0x2db8>  // b.any
  4056b8:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  4056bc:	mov	w12, #0x1                   	// #1
  4056c0:	movk	x10, #0xcccd
  4056c4:	mov	w11, #0xa                   	// #10
  4056c8:	b	4056dc <scols_reset_iter@plt+0x2dec>
  4056cc:	cmp	x28, #0x9
  4056d0:	mov	x28, x13
  4056d4:	mov	x12, x14
  4056d8:	b.ls	40552c <scols_reset_iter@plt+0x2c3c>  // b.plast
  4056dc:	umulh	x13, x28, x10
  4056e0:	lsr	x13, x13, #3
  4056e4:	add	x14, x12, x12, lsl #2
  4056e8:	msub	x15, x13, x11, x28
  4056ec:	lsl	x14, x14, #1
  4056f0:	cbz	x15, 4056cc <scols_reset_iter@plt+0x2ddc>
  4056f4:	udiv	x12, x9, x12
  4056f8:	udiv	x12, x12, x15
  4056fc:	udiv	x12, x8, x12
  405700:	add	x20, x12, x20
  405704:	b	4056cc <scols_reset_iter@plt+0x2ddc>
  405708:	mov	x2, xzr
  40570c:	b	4052cc <scols_reset_iter@plt+0x29dc>
  405710:	stp	x29, x30, [sp, #-48]!
  405714:	stp	x20, x19, [sp, #32]
  405718:	mov	x20, x1
  40571c:	mov	x19, x0
  405720:	str	x21, [sp, #16]
  405724:	mov	x29, sp
  405728:	cbz	x0, 40575c <scols_reset_iter@plt+0x2e6c>
  40572c:	ldrb	w21, [x19]
  405730:	mov	x8, x19
  405734:	cbz	w21, 405760 <scols_reset_iter@plt+0x2e70>
  405738:	bl	402670 <__ctype_b_loc@plt>
  40573c:	ldr	x9, [x0]
  405740:	mov	x8, x19
  405744:	and	x10, x21, #0xff
  405748:	ldrh	w10, [x9, x10, lsl #1]
  40574c:	tbz	w10, #11, 405760 <scols_reset_iter@plt+0x2e70>
  405750:	ldrb	w21, [x8, #1]!
  405754:	cbnz	w21, 405744 <scols_reset_iter@plt+0x2e54>
  405758:	b	405760 <scols_reset_iter@plt+0x2e70>
  40575c:	mov	x8, xzr
  405760:	cbz	x20, 405768 <scols_reset_iter@plt+0x2e78>
  405764:	str	x8, [x20]
  405768:	cmp	x8, x19
  40576c:	b.ls	40578c <scols_reset_iter@plt+0x2e9c>  // b.plast
  405770:	ldrb	w8, [x8]
  405774:	cmp	w8, #0x0
  405778:	cset	w0, eq  // eq = none
  40577c:	ldp	x20, x19, [sp, #32]
  405780:	ldr	x21, [sp, #16]
  405784:	ldp	x29, x30, [sp], #48
  405788:	ret
  40578c:	mov	w0, wzr
  405790:	ldp	x20, x19, [sp, #32]
  405794:	ldr	x21, [sp, #16]
  405798:	ldp	x29, x30, [sp], #48
  40579c:	ret
  4057a0:	stp	x29, x30, [sp, #-48]!
  4057a4:	stp	x20, x19, [sp, #32]
  4057a8:	mov	x20, x1
  4057ac:	mov	x19, x0
  4057b0:	str	x21, [sp, #16]
  4057b4:	mov	x29, sp
  4057b8:	cbz	x0, 4057ec <scols_reset_iter@plt+0x2efc>
  4057bc:	ldrb	w21, [x19]
  4057c0:	mov	x8, x19
  4057c4:	cbz	w21, 4057f0 <scols_reset_iter@plt+0x2f00>
  4057c8:	bl	402670 <__ctype_b_loc@plt>
  4057cc:	ldr	x9, [x0]
  4057d0:	mov	x8, x19
  4057d4:	and	x10, x21, #0xff
  4057d8:	ldrh	w10, [x9, x10, lsl #1]
  4057dc:	tbz	w10, #12, 4057f0 <scols_reset_iter@plt+0x2f00>
  4057e0:	ldrb	w21, [x8, #1]!
  4057e4:	cbnz	w21, 4057d4 <scols_reset_iter@plt+0x2ee4>
  4057e8:	b	4057f0 <scols_reset_iter@plt+0x2f00>
  4057ec:	mov	x8, xzr
  4057f0:	cbz	x20, 4057f8 <scols_reset_iter@plt+0x2f08>
  4057f4:	str	x8, [x20]
  4057f8:	cmp	x8, x19
  4057fc:	b.ls	40581c <scols_reset_iter@plt+0x2f2c>  // b.plast
  405800:	ldrb	w8, [x8]
  405804:	cmp	w8, #0x0
  405808:	cset	w0, eq  // eq = none
  40580c:	ldp	x20, x19, [sp, #32]
  405810:	ldr	x21, [sp, #16]
  405814:	ldp	x29, x30, [sp], #48
  405818:	ret
  40581c:	mov	w0, wzr
  405820:	ldp	x20, x19, [sp, #32]
  405824:	ldr	x21, [sp, #16]
  405828:	ldp	x29, x30, [sp], #48
  40582c:	ret
  405830:	sub	sp, sp, #0x110
  405834:	stp	x29, x30, [sp, #208]
  405838:	add	x29, sp, #0xd0
  40583c:	mov	x8, #0xffffffffffffffd0    	// #-48
  405840:	mov	x9, sp
  405844:	sub	x10, x29, #0x50
  405848:	stp	x28, x23, [sp, #224]
  40584c:	stp	x22, x21, [sp, #240]
  405850:	stp	x20, x19, [sp, #256]
  405854:	mov	x20, x1
  405858:	mov	x19, x0
  40585c:	movk	x8, #0xff80, lsl #32
  405860:	add	x11, x29, #0x40
  405864:	add	x9, x9, #0x80
  405868:	add	x22, x10, #0x30
  40586c:	mov	w23, #0xffffffd0            	// #-48
  405870:	stp	x2, x3, [x29, #-80]
  405874:	stp	x4, x5, [x29, #-64]
  405878:	stp	x6, x7, [x29, #-48]
  40587c:	stp	q1, q2, [sp, #16]
  405880:	stp	q3, q4, [sp, #48]
  405884:	str	q0, [sp]
  405888:	stp	q5, q6, [sp, #80]
  40588c:	str	q7, [sp, #112]
  405890:	stp	x9, x8, [x29, #-16]
  405894:	stp	x11, x22, [x29, #-32]
  405898:	tbnz	w23, #31, 4058a4 <scols_reset_iter@plt+0x2fb4>
  40589c:	mov	w8, w23
  4058a0:	b	4058bc <scols_reset_iter@plt+0x2fcc>
  4058a4:	add	w8, w23, #0x8
  4058a8:	cmn	w23, #0x8
  4058ac:	stur	w8, [x29, #-8]
  4058b0:	b.gt	4058bc <scols_reset_iter@plt+0x2fcc>
  4058b4:	add	x9, x22, w23, sxtw
  4058b8:	b	4058c8 <scols_reset_iter@plt+0x2fd8>
  4058bc:	ldur	x9, [x29, #-32]
  4058c0:	add	x10, x9, #0x8
  4058c4:	stur	x10, [x29, #-32]
  4058c8:	ldr	x1, [x9]
  4058cc:	cbz	x1, 405944 <scols_reset_iter@plt+0x3054>
  4058d0:	tbnz	w8, #31, 4058dc <scols_reset_iter@plt+0x2fec>
  4058d4:	mov	w23, w8
  4058d8:	b	4058f4 <scols_reset_iter@plt+0x3004>
  4058dc:	add	w23, w8, #0x8
  4058e0:	cmn	w8, #0x8
  4058e4:	stur	w23, [x29, #-8]
  4058e8:	b.gt	4058f4 <scols_reset_iter@plt+0x3004>
  4058ec:	add	x8, x22, w8, sxtw
  4058f0:	b	405900 <scols_reset_iter@plt+0x3010>
  4058f4:	ldur	x8, [x29, #-32]
  4058f8:	add	x9, x8, #0x8
  4058fc:	stur	x9, [x29, #-32]
  405900:	ldr	x21, [x8]
  405904:	cbz	x21, 405944 <scols_reset_iter@plt+0x3054>
  405908:	mov	x0, x19
  40590c:	bl	402650 <strcmp@plt>
  405910:	cbz	w0, 405928 <scols_reset_iter@plt+0x3038>
  405914:	mov	x0, x19
  405918:	mov	x1, x21
  40591c:	bl	402650 <strcmp@plt>
  405920:	cbnz	w0, 405898 <scols_reset_iter@plt+0x2fa8>
  405924:	b	40592c <scols_reset_iter@plt+0x303c>
  405928:	mov	w0, #0x1                   	// #1
  40592c:	ldp	x20, x19, [sp, #256]
  405930:	ldp	x22, x21, [sp, #240]
  405934:	ldp	x28, x23, [sp, #224]
  405938:	ldp	x29, x30, [sp, #208]
  40593c:	add	sp, sp, #0x110
  405940:	ret
  405944:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405948:	ldr	w0, [x8, #840]
  40594c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405950:	add	x1, x1, #0x99b
  405954:	mov	x2, x20
  405958:	mov	x3, x19
  40595c:	bl	402800 <errx@plt>
  405960:	cbz	x1, 405984 <scols_reset_iter@plt+0x3094>
  405964:	sxtb	w8, w2
  405968:	ldrsb	w9, [x0]
  40596c:	cbz	w9, 405984 <scols_reset_iter@plt+0x3094>
  405970:	cmp	w8, w9
  405974:	b.eq	405988 <scols_reset_iter@plt+0x3098>  // b.none
  405978:	sub	x1, x1, #0x1
  40597c:	add	x0, x0, #0x1
  405980:	cbnz	x1, 405968 <scols_reset_iter@plt+0x3078>
  405984:	mov	x0, xzr
  405988:	ret
  40598c:	stp	x29, x30, [sp, #-32]!
  405990:	stp	x20, x19, [sp, #16]
  405994:	mov	x29, sp
  405998:	mov	x20, x1
  40599c:	mov	x19, x0
  4059a0:	bl	405afc <scols_reset_iter@plt+0x320c>
  4059a4:	cmp	x0, w0, sxtw
  4059a8:	b.ne	4059c0 <scols_reset_iter@plt+0x30d0>  // b.any
  4059ac:	cmp	w0, w0, sxth
  4059b0:	b.ne	4059c0 <scols_reset_iter@plt+0x30d0>  // b.any
  4059b4:	ldp	x20, x19, [sp, #16]
  4059b8:	ldp	x29, x30, [sp], #32
  4059bc:	ret
  4059c0:	bl	402850 <__errno_location@plt>
  4059c4:	mov	w8, #0x22                  	// #34
  4059c8:	str	w8, [x0]
  4059cc:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  4059d0:	ldr	w0, [x8, #840]
  4059d4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  4059d8:	add	x1, x1, #0x99b
  4059dc:	mov	x2, x20
  4059e0:	mov	x3, x19
  4059e4:	bl	4028b0 <err@plt>
  4059e8:	stp	x29, x30, [sp, #-32]!
  4059ec:	stp	x20, x19, [sp, #16]
  4059f0:	mov	x29, sp
  4059f4:	mov	x20, x1
  4059f8:	mov	x19, x0
  4059fc:	bl	405afc <scols_reset_iter@plt+0x320c>
  405a00:	cmp	x0, w0, sxtw
  405a04:	b.ne	405a14 <scols_reset_iter@plt+0x3124>  // b.any
  405a08:	ldp	x20, x19, [sp, #16]
  405a0c:	ldp	x29, x30, [sp], #32
  405a10:	ret
  405a14:	bl	402850 <__errno_location@plt>
  405a18:	mov	w8, #0x22                  	// #34
  405a1c:	str	w8, [x0]
  405a20:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405a24:	ldr	w0, [x8, #840]
  405a28:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405a2c:	add	x1, x1, #0x99b
  405a30:	mov	x2, x20
  405a34:	mov	x3, x19
  405a38:	bl	4028b0 <err@plt>
  405a3c:	stp	x29, x30, [sp, #-32]!
  405a40:	mov	w2, #0xa                   	// #10
  405a44:	stp	x20, x19, [sp, #16]
  405a48:	mov	x29, sp
  405a4c:	mov	x20, x1
  405a50:	mov	x19, x0
  405a54:	bl	405c6c <scols_reset_iter@plt+0x337c>
  405a58:	lsr	x8, x0, #32
  405a5c:	cbnz	x8, 405a74 <scols_reset_iter@plt+0x3184>
  405a60:	cmp	w0, #0x10, lsl #12
  405a64:	b.cs	405a74 <scols_reset_iter@plt+0x3184>  // b.hs, b.nlast
  405a68:	ldp	x20, x19, [sp, #16]
  405a6c:	ldp	x29, x30, [sp], #32
  405a70:	ret
  405a74:	bl	402850 <__errno_location@plt>
  405a78:	mov	w8, #0x22                  	// #34
  405a7c:	str	w8, [x0]
  405a80:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405a84:	ldr	w0, [x8, #840]
  405a88:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405a8c:	add	x1, x1, #0x99b
  405a90:	mov	x2, x20
  405a94:	mov	x3, x19
  405a98:	bl	4028b0 <err@plt>
  405a9c:	stp	x29, x30, [sp, #-32]!
  405aa0:	mov	w2, #0x10                  	// #16
  405aa4:	stp	x20, x19, [sp, #16]
  405aa8:	mov	x29, sp
  405aac:	mov	x20, x1
  405ab0:	mov	x19, x0
  405ab4:	bl	405c6c <scols_reset_iter@plt+0x337c>
  405ab8:	lsr	x8, x0, #32
  405abc:	cbnz	x8, 405ad4 <scols_reset_iter@plt+0x31e4>
  405ac0:	cmp	w0, #0x10, lsl #12
  405ac4:	b.cs	405ad4 <scols_reset_iter@plt+0x31e4>  // b.hs, b.nlast
  405ac8:	ldp	x20, x19, [sp, #16]
  405acc:	ldp	x29, x30, [sp], #32
  405ad0:	ret
  405ad4:	bl	402850 <__errno_location@plt>
  405ad8:	mov	w8, #0x22                  	// #34
  405adc:	str	w8, [x0]
  405ae0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405ae4:	ldr	w0, [x8, #840]
  405ae8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405aec:	add	x1, x1, #0x99b
  405af0:	mov	x2, x20
  405af4:	mov	x3, x19
  405af8:	bl	4028b0 <err@plt>
  405afc:	stp	x29, x30, [sp, #-48]!
  405b00:	mov	x29, sp
  405b04:	str	x21, [sp, #16]
  405b08:	stp	x20, x19, [sp, #32]
  405b0c:	mov	x20, x1
  405b10:	mov	x19, x0
  405b14:	str	xzr, [x29, #24]
  405b18:	bl	402850 <__errno_location@plt>
  405b1c:	str	wzr, [x0]
  405b20:	cbz	x19, 405b74 <scols_reset_iter@plt+0x3284>
  405b24:	ldrb	w8, [x19]
  405b28:	cbz	w8, 405b74 <scols_reset_iter@plt+0x3284>
  405b2c:	mov	x21, x0
  405b30:	add	x1, x29, #0x18
  405b34:	mov	w2, #0xa                   	// #10
  405b38:	mov	x0, x19
  405b3c:	mov	w3, wzr
  405b40:	bl	4024a0 <__strtol_internal@plt>
  405b44:	ldr	w8, [x21]
  405b48:	cbnz	w8, 405b90 <scols_reset_iter@plt+0x32a0>
  405b4c:	ldr	x8, [x29, #24]
  405b50:	cmp	x8, x19
  405b54:	b.eq	405b74 <scols_reset_iter@plt+0x3284>  // b.none
  405b58:	cbz	x8, 405b64 <scols_reset_iter@plt+0x3274>
  405b5c:	ldrb	w8, [x8]
  405b60:	cbnz	w8, 405b74 <scols_reset_iter@plt+0x3284>
  405b64:	ldp	x20, x19, [sp, #32]
  405b68:	ldr	x21, [sp, #16]
  405b6c:	ldp	x29, x30, [sp], #48
  405b70:	ret
  405b74:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405b78:	ldr	w0, [x8, #840]
  405b7c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405b80:	add	x1, x1, #0x99b
  405b84:	mov	x2, x20
  405b88:	mov	x3, x19
  405b8c:	bl	402800 <errx@plt>
  405b90:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405b94:	ldr	w0, [x9, #840]
  405b98:	cmp	w8, #0x22
  405b9c:	b.ne	405b7c <scols_reset_iter@plt+0x328c>  // b.any
  405ba0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405ba4:	add	x1, x1, #0x99b
  405ba8:	mov	x2, x20
  405bac:	mov	x3, x19
  405bb0:	bl	4028b0 <err@plt>
  405bb4:	stp	x29, x30, [sp, #-32]!
  405bb8:	mov	w2, #0xa                   	// #10
  405bbc:	stp	x20, x19, [sp, #16]
  405bc0:	mov	x29, sp
  405bc4:	mov	x20, x1
  405bc8:	mov	x19, x0
  405bcc:	bl	405c6c <scols_reset_iter@plt+0x337c>
  405bd0:	lsr	x8, x0, #32
  405bd4:	cbnz	x8, 405be4 <scols_reset_iter@plt+0x32f4>
  405bd8:	ldp	x20, x19, [sp, #16]
  405bdc:	ldp	x29, x30, [sp], #32
  405be0:	ret
  405be4:	bl	402850 <__errno_location@plt>
  405be8:	mov	w8, #0x22                  	// #34
  405bec:	str	w8, [x0]
  405bf0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405bf4:	ldr	w0, [x8, #840]
  405bf8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405bfc:	add	x1, x1, #0x99b
  405c00:	mov	x2, x20
  405c04:	mov	x3, x19
  405c08:	bl	4028b0 <err@plt>
  405c0c:	stp	x29, x30, [sp, #-32]!
  405c10:	mov	w2, #0x10                  	// #16
  405c14:	stp	x20, x19, [sp, #16]
  405c18:	mov	x29, sp
  405c1c:	mov	x20, x1
  405c20:	mov	x19, x0
  405c24:	bl	405c6c <scols_reset_iter@plt+0x337c>
  405c28:	lsr	x8, x0, #32
  405c2c:	cbnz	x8, 405c3c <scols_reset_iter@plt+0x334c>
  405c30:	ldp	x20, x19, [sp, #16]
  405c34:	ldp	x29, x30, [sp], #32
  405c38:	ret
  405c3c:	bl	402850 <__errno_location@plt>
  405c40:	mov	w8, #0x22                  	// #34
  405c44:	str	w8, [x0]
  405c48:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405c4c:	ldr	w0, [x8, #840]
  405c50:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405c54:	add	x1, x1, #0x99b
  405c58:	mov	x2, x20
  405c5c:	mov	x3, x19
  405c60:	bl	4028b0 <err@plt>
  405c64:	mov	w2, #0xa                   	// #10
  405c68:	b	405c6c <scols_reset_iter@plt+0x337c>
  405c6c:	sub	sp, sp, #0x40
  405c70:	stp	x29, x30, [sp, #16]
  405c74:	stp	x22, x21, [sp, #32]
  405c78:	stp	x20, x19, [sp, #48]
  405c7c:	add	x29, sp, #0x10
  405c80:	mov	w21, w2
  405c84:	mov	x20, x1
  405c88:	mov	x19, x0
  405c8c:	str	xzr, [sp, #8]
  405c90:	bl	402850 <__errno_location@plt>
  405c94:	str	wzr, [x0]
  405c98:	cbz	x19, 405cf0 <scols_reset_iter@plt+0x3400>
  405c9c:	ldrb	w8, [x19]
  405ca0:	cbz	w8, 405cf0 <scols_reset_iter@plt+0x3400>
  405ca4:	mov	x22, x0
  405ca8:	add	x1, sp, #0x8
  405cac:	mov	x0, x19
  405cb0:	mov	w2, w21
  405cb4:	mov	w3, wzr
  405cb8:	bl	402530 <__strtoul_internal@plt>
  405cbc:	ldr	w8, [x22]
  405cc0:	cbnz	w8, 405d0c <scols_reset_iter@plt+0x341c>
  405cc4:	ldr	x8, [sp, #8]
  405cc8:	cmp	x8, x19
  405ccc:	b.eq	405cf0 <scols_reset_iter@plt+0x3400>  // b.none
  405cd0:	cbz	x8, 405cdc <scols_reset_iter@plt+0x33ec>
  405cd4:	ldrb	w8, [x8]
  405cd8:	cbnz	w8, 405cf0 <scols_reset_iter@plt+0x3400>
  405cdc:	ldp	x20, x19, [sp, #48]
  405ce0:	ldp	x22, x21, [sp, #32]
  405ce4:	ldp	x29, x30, [sp, #16]
  405ce8:	add	sp, sp, #0x40
  405cec:	ret
  405cf0:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405cf4:	ldr	w0, [x8, #840]
  405cf8:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405cfc:	add	x1, x1, #0x99b
  405d00:	mov	x2, x20
  405d04:	mov	x3, x19
  405d08:	bl	402800 <errx@plt>
  405d0c:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405d10:	ldr	w0, [x9, #840]
  405d14:	cmp	w8, #0x22
  405d18:	b.ne	405cf8 <scols_reset_iter@plt+0x3408>  // b.any
  405d1c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405d20:	add	x1, x1, #0x99b
  405d24:	mov	x2, x20
  405d28:	mov	x3, x19
  405d2c:	bl	4028b0 <err@plt>
  405d30:	mov	w2, #0x10                  	// #16
  405d34:	b	405c6c <scols_reset_iter@plt+0x337c>
  405d38:	stp	x29, x30, [sp, #-48]!
  405d3c:	mov	x29, sp
  405d40:	str	x21, [sp, #16]
  405d44:	stp	x20, x19, [sp, #32]
  405d48:	mov	x20, x1
  405d4c:	mov	x19, x0
  405d50:	str	xzr, [x29, #24]
  405d54:	bl	402850 <__errno_location@plt>
  405d58:	str	wzr, [x0]
  405d5c:	cbz	x19, 405da8 <scols_reset_iter@plt+0x34b8>
  405d60:	ldrb	w8, [x19]
  405d64:	cbz	w8, 405da8 <scols_reset_iter@plt+0x34b8>
  405d68:	mov	x21, x0
  405d6c:	add	x1, x29, #0x18
  405d70:	mov	x0, x19
  405d74:	bl	402350 <strtod@plt>
  405d78:	ldr	w8, [x21]
  405d7c:	cbnz	w8, 405dc4 <scols_reset_iter@plt+0x34d4>
  405d80:	ldr	x8, [x29, #24]
  405d84:	cmp	x8, x19
  405d88:	b.eq	405da8 <scols_reset_iter@plt+0x34b8>  // b.none
  405d8c:	cbz	x8, 405d98 <scols_reset_iter@plt+0x34a8>
  405d90:	ldrb	w8, [x8]
  405d94:	cbnz	w8, 405da8 <scols_reset_iter@plt+0x34b8>
  405d98:	ldp	x20, x19, [sp, #32]
  405d9c:	ldr	x21, [sp, #16]
  405da0:	ldp	x29, x30, [sp], #48
  405da4:	ret
  405da8:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405dac:	ldr	w0, [x8, #840]
  405db0:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405db4:	add	x1, x1, #0x99b
  405db8:	mov	x2, x20
  405dbc:	mov	x3, x19
  405dc0:	bl	402800 <errx@plt>
  405dc4:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405dc8:	ldr	w0, [x9, #840]
  405dcc:	cmp	w8, #0x22
  405dd0:	b.ne	405db0 <scols_reset_iter@plt+0x34c0>  // b.any
  405dd4:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405dd8:	add	x1, x1, #0x99b
  405ddc:	mov	x2, x20
  405de0:	mov	x3, x19
  405de4:	bl	4028b0 <err@plt>
  405de8:	stp	x29, x30, [sp, #-48]!
  405dec:	mov	x29, sp
  405df0:	str	x21, [sp, #16]
  405df4:	stp	x20, x19, [sp, #32]
  405df8:	mov	x20, x1
  405dfc:	mov	x19, x0
  405e00:	str	xzr, [x29, #24]
  405e04:	bl	402850 <__errno_location@plt>
  405e08:	str	wzr, [x0]
  405e0c:	cbz	x19, 405e5c <scols_reset_iter@plt+0x356c>
  405e10:	ldrb	w8, [x19]
  405e14:	cbz	w8, 405e5c <scols_reset_iter@plt+0x356c>
  405e18:	mov	x21, x0
  405e1c:	add	x1, x29, #0x18
  405e20:	mov	w2, #0xa                   	// #10
  405e24:	mov	x0, x19
  405e28:	bl	402680 <strtol@plt>
  405e2c:	ldr	w8, [x21]
  405e30:	cbnz	w8, 405e78 <scols_reset_iter@plt+0x3588>
  405e34:	ldr	x8, [x29, #24]
  405e38:	cmp	x8, x19
  405e3c:	b.eq	405e5c <scols_reset_iter@plt+0x356c>  // b.none
  405e40:	cbz	x8, 405e4c <scols_reset_iter@plt+0x355c>
  405e44:	ldrb	w8, [x8]
  405e48:	cbnz	w8, 405e5c <scols_reset_iter@plt+0x356c>
  405e4c:	ldp	x20, x19, [sp, #32]
  405e50:	ldr	x21, [sp, #16]
  405e54:	ldp	x29, x30, [sp], #48
  405e58:	ret
  405e5c:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405e60:	ldr	w0, [x8, #840]
  405e64:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405e68:	add	x1, x1, #0x99b
  405e6c:	mov	x2, x20
  405e70:	mov	x3, x19
  405e74:	bl	402800 <errx@plt>
  405e78:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405e7c:	ldr	w0, [x9, #840]
  405e80:	cmp	w8, #0x22
  405e84:	b.ne	405e64 <scols_reset_iter@plt+0x3574>  // b.any
  405e88:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405e8c:	add	x1, x1, #0x99b
  405e90:	mov	x2, x20
  405e94:	mov	x3, x19
  405e98:	bl	4028b0 <err@plt>
  405e9c:	stp	x29, x30, [sp, #-48]!
  405ea0:	mov	x29, sp
  405ea4:	str	x21, [sp, #16]
  405ea8:	stp	x20, x19, [sp, #32]
  405eac:	mov	x20, x1
  405eb0:	mov	x19, x0
  405eb4:	str	xzr, [x29, #24]
  405eb8:	bl	402850 <__errno_location@plt>
  405ebc:	str	wzr, [x0]
  405ec0:	cbz	x19, 405f10 <scols_reset_iter@plt+0x3620>
  405ec4:	ldrb	w8, [x19]
  405ec8:	cbz	w8, 405f10 <scols_reset_iter@plt+0x3620>
  405ecc:	mov	x21, x0
  405ed0:	add	x1, x29, #0x18
  405ed4:	mov	w2, #0xa                   	// #10
  405ed8:	mov	x0, x19
  405edc:	bl	4022c0 <strtoul@plt>
  405ee0:	ldr	w8, [x21]
  405ee4:	cbnz	w8, 405f2c <scols_reset_iter@plt+0x363c>
  405ee8:	ldr	x8, [x29, #24]
  405eec:	cmp	x8, x19
  405ef0:	b.eq	405f10 <scols_reset_iter@plt+0x3620>  // b.none
  405ef4:	cbz	x8, 405f00 <scols_reset_iter@plt+0x3610>
  405ef8:	ldrb	w8, [x8]
  405efc:	cbnz	w8, 405f10 <scols_reset_iter@plt+0x3620>
  405f00:	ldp	x20, x19, [sp, #32]
  405f04:	ldr	x21, [sp, #16]
  405f08:	ldp	x29, x30, [sp], #48
  405f0c:	ret
  405f10:	adrp	x8, 41a000 <scols_reset_iter@plt+0x17710>
  405f14:	ldr	w0, [x8, #840]
  405f18:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405f1c:	add	x1, x1, #0x99b
  405f20:	mov	x2, x20
  405f24:	mov	x3, x19
  405f28:	bl	402800 <errx@plt>
  405f2c:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405f30:	ldr	w0, [x9, #840]
  405f34:	cmp	w8, #0x22
  405f38:	b.ne	405f18 <scols_reset_iter@plt+0x3628>  // b.any
  405f3c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405f40:	add	x1, x1, #0x99b
  405f44:	mov	x2, x20
  405f48:	mov	x3, x19
  405f4c:	bl	4028b0 <err@plt>
  405f50:	sub	sp, sp, #0x30
  405f54:	stp	x20, x19, [sp, #32]
  405f58:	mov	x20, x1
  405f5c:	add	x1, sp, #0x8
  405f60:	mov	x2, xzr
  405f64:	stp	x29, x30, [sp, #16]
  405f68:	add	x29, sp, #0x10
  405f6c:	mov	x19, x0
  405f70:	bl	4052cc <scols_reset_iter@plt+0x29dc>
  405f74:	cbnz	w0, 405f8c <scols_reset_iter@plt+0x369c>
  405f78:	ldr	x0, [sp, #8]
  405f7c:	ldp	x20, x19, [sp, #32]
  405f80:	ldp	x29, x30, [sp, #16]
  405f84:	add	sp, sp, #0x30
  405f88:	ret
  405f8c:	bl	402850 <__errno_location@plt>
  405f90:	adrp	x9, 41a000 <scols_reset_iter@plt+0x17710>
  405f94:	ldr	w8, [x0]
  405f98:	ldr	w0, [x9, #840]
  405f9c:	adrp	x1, 408000 <scols_reset_iter@plt+0x5710>
  405fa0:	add	x1, x1, #0x99b
  405fa4:	mov	x2, x20
  405fa8:	mov	x3, x19
  405fac:	cbnz	w8, 405fb4 <scols_reset_iter@plt+0x36c4>
  405fb0:	bl	402800 <errx@plt>
  405fb4:	bl	4028b0 <err@plt>
  405fb8:	stp	x29, x30, [sp, #-32]!
  405fbc:	str	x19, [sp, #16]
  405fc0:	mov	x19, x1
  405fc4:	mov	x1, x2
  405fc8:	mov	x29, sp
  405fcc:	bl	405d38 <scols_reset_iter@plt+0x3448>
  405fd0:	fcvtzs	x8, d0
  405fd4:	mov	x9, #0x848000000000        	// #145685290680320
  405fd8:	movk	x9, #0x412e, lsl #48
  405fdc:	scvtf	d1, x8
  405fe0:	fmov	d2, x9
  405fe4:	fsub	d0, d0, d1
  405fe8:	fmul	d0, d0, d2
  405fec:	fcvtzs	x9, d0
  405ff0:	stp	x8, x9, [x19]
  405ff4:	ldr	x19, [sp, #16]
  405ff8:	ldp	x29, x30, [sp], #32
  405ffc:	ret
  406000:	and	w8, w0, #0xf000
  406004:	sub	w8, w8, #0x1, lsl #12
  406008:	lsr	w9, w8, #12
  40600c:	cmp	w9, #0xb
  406010:	mov	w8, wzr
  406014:	b.hi	406068 <scols_reset_iter@plt+0x3778>  // b.pmore
  406018:	adrp	x10, 409000 <scols_reset_iter@plt+0x6710>
  40601c:	add	x10, x10, #0x1aa
  406020:	adr	x11, 406034 <scols_reset_iter@plt+0x3744>
  406024:	ldrb	w12, [x10, x9]
  406028:	add	x11, x11, x12, lsl #2
  40602c:	mov	w9, #0x64                  	// #100
  406030:	br	x11
  406034:	mov	w9, #0x70                  	// #112
  406038:	b	406060 <scols_reset_iter@plt+0x3770>
  40603c:	mov	w9, #0x63                  	// #99
  406040:	b	406060 <scols_reset_iter@plt+0x3770>
  406044:	mov	w9, #0x62                  	// #98
  406048:	b	406060 <scols_reset_iter@plt+0x3770>
  40604c:	mov	w9, #0x6c                  	// #108
  406050:	b	406060 <scols_reset_iter@plt+0x3770>
  406054:	mov	w9, #0x73                  	// #115
  406058:	b	406060 <scols_reset_iter@plt+0x3770>
  40605c:	mov	w9, #0x2d                  	// #45
  406060:	mov	w8, #0x1                   	// #1
  406064:	strb	w9, [x1]
  406068:	tst	w0, #0x100
  40606c:	mov	w9, #0x72                  	// #114
  406070:	mov	w10, #0x2d                  	// #45
  406074:	add	x11, x1, x8
  406078:	mov	w12, #0x77                  	// #119
  40607c:	csel	w17, w10, w9, eq  // eq = none
  406080:	tst	w0, #0x80
  406084:	mov	w14, #0x53                  	// #83
  406088:	mov	w15, #0x73                  	// #115
  40608c:	mov	w16, #0x78                  	// #120
  406090:	strb	w17, [x11]
  406094:	csel	w17, w10, w12, eq  // eq = none
  406098:	tst	w0, #0x40
  40609c:	orr	x13, x8, #0x2
  4060a0:	strb	w17, [x11, #1]
  4060a4:	csel	w11, w15, w14, ne  // ne = any
  4060a8:	csel	w17, w16, w10, ne  // ne = any
  4060ac:	tst	w0, #0x800
  4060b0:	csel	w11, w17, w11, eq  // eq = none
  4060b4:	add	x13, x13, x1
  4060b8:	tst	w0, #0x20
  4060bc:	strb	w11, [x13]
  4060c0:	csel	w11, w10, w9, eq  // eq = none
  4060c4:	tst	w0, #0x10
  4060c8:	strb	w11, [x13, #1]
  4060cc:	csel	w11, w10, w12, eq  // eq = none
  4060d0:	tst	w0, #0x8
  4060d4:	csel	w14, w15, w14, ne  // ne = any
  4060d8:	csel	w15, w16, w10, ne  // ne = any
  4060dc:	tst	w0, #0x400
  4060e0:	orr	x8, x8, #0x6
  4060e4:	csel	w14, w15, w14, eq  // eq = none
  4060e8:	tst	w0, #0x4
  4060ec:	add	x8, x8, x1
  4060f0:	csel	w9, w10, w9, eq  // eq = none
  4060f4:	tst	w0, #0x2
  4060f8:	mov	w17, #0x54                  	// #84
  4060fc:	strb	w11, [x13, #2]
  406100:	mov	w11, #0x74                  	// #116
  406104:	strb	w14, [x13, #3]
  406108:	strb	w9, [x8]
  40610c:	csel	w9, w10, w12, eq  // eq = none
  406110:	tst	w0, #0x1
  406114:	strb	w9, [x8, #1]
  406118:	csel	w9, w11, w17, ne  // ne = any
  40611c:	csel	w10, w16, w10, ne  // ne = any
  406120:	tst	w0, #0x200
  406124:	csel	w9, w10, w9, eq  // eq = none
  406128:	mov	x0, x1
  40612c:	strb	w9, [x8, #2]
  406130:	strb	wzr, [x8, #3]
  406134:	ret
  406138:	sub	sp, sp, #0x50
  40613c:	add	x8, sp, #0x8
  406140:	stp	x29, x30, [sp, #48]
  406144:	stp	x20, x19, [sp, #64]
  406148:	add	x29, sp, #0x30
  40614c:	tbz	w0, #1, 40615c <scols_reset_iter@plt+0x386c>
  406150:	orr	x8, x8, #0x1
  406154:	mov	w9, #0x20                  	// #32
  406158:	strb	w9, [sp, #8]
  40615c:	cmp	x1, #0x400
  406160:	b.cs	406174 <scols_reset_iter@plt+0x3884>  // b.hs, b.nlast
  406164:	mov	w9, #0x42                  	// #66
  406168:	mov	w19, w1
  40616c:	strh	w9, [x8]
  406170:	b	4062d4 <scols_reset_iter@plt+0x39e4>
  406174:	cmp	x1, #0x100, lsl #12
  406178:	b.cs	406184 <scols_reset_iter@plt+0x3894>  // b.hs, b.nlast
  40617c:	mov	w9, #0xa                   	// #10
  406180:	b	4061c8 <scols_reset_iter@plt+0x38d8>
  406184:	lsr	x9, x1, #30
  406188:	cbnz	x9, 406194 <scols_reset_iter@plt+0x38a4>
  40618c:	mov	w9, #0x14                  	// #20
  406190:	b	4061c8 <scols_reset_iter@plt+0x38d8>
  406194:	lsr	x9, x1, #40
  406198:	cbnz	x9, 4061a4 <scols_reset_iter@plt+0x38b4>
  40619c:	mov	w9, #0x1e                  	// #30
  4061a0:	b	4061c8 <scols_reset_iter@plt+0x38d8>
  4061a4:	lsr	x9, x1, #50
  4061a8:	cbnz	x9, 4061b4 <scols_reset_iter@plt+0x38c4>
  4061ac:	mov	w9, #0x28                  	// #40
  4061b0:	b	4061c8 <scols_reset_iter@plt+0x38d8>
  4061b4:	lsr	x9, x1, #60
  4061b8:	mov	w10, #0x3c                  	// #60
  4061bc:	cmp	x9, #0x0
  4061c0:	mov	w9, #0x32                  	// #50
  4061c4:	csel	w9, w9, w10, eq  // eq = none
  4061c8:	mov	w10, #0xcccd                	// #52429
  4061cc:	movk	w10, #0xcccc, lsl #16
  4061d0:	adrp	x11, 409000 <scols_reset_iter@plt+0x6710>
  4061d4:	umull	x10, w9, w10
  4061d8:	add	x11, x11, #0x1c8
  4061dc:	lsr	x10, x10, #35
  4061e0:	ldrb	w12, [x11, x10]
  4061e4:	mov	x10, #0xffffffffffffffff    	// #-1
  4061e8:	lsl	x10, x10, x9
  4061ec:	mov	x11, x8
  4061f0:	lsr	x19, x1, x9
  4061f4:	bic	x10, x1, x10
  4061f8:	strb	w12, [x11], #1
  4061fc:	tbz	w0, #0, 406214 <scols_reset_iter@plt+0x3924>
  406200:	cmp	w9, #0xa
  406204:	b.cc	406214 <scols_reset_iter@plt+0x3924>  // b.lo, b.ul, b.last
  406208:	mov	w11, #0x4269                	// #17001
  40620c:	sturh	w11, [x8, #1]
  406210:	add	x11, x8, #0x3
  406214:	strb	wzr, [x11]
  406218:	cbz	x10, 4062d4 <scols_reset_iter@plt+0x39e4>
  40621c:	sub	w8, w9, #0xa
  406220:	lsr	x8, x10, x8
  406224:	tbnz	w0, #2, 40623c <scols_reset_iter@plt+0x394c>
  406228:	sub	x9, x8, #0x3b6
  40622c:	cmp	x9, #0x64
  406230:	b.cs	4062b0 <scols_reset_iter@plt+0x39c0>  // b.hs, b.nlast
  406234:	add	w19, w19, #0x1
  406238:	b	4062d4 <scols_reset_iter@plt+0x39e4>
  40623c:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  406240:	add	x8, x8, #0x5
  406244:	movk	x9, #0xcccd
  406248:	umulh	x10, x8, x9
  40624c:	lsr	x20, x10, #3
  406250:	mul	x9, x20, x9
  406254:	mov	x10, #0x9999999999999999    	// #-7378697629483820647
  406258:	ror	x9, x9, #1
  40625c:	movk	x10, #0x1999, lsl #48
  406260:	cmp	x9, x10
  406264:	b.ls	4062b4 <scols_reset_iter@plt+0x39c4>  // b.plast
  406268:	cbz	x20, 4062d4 <scols_reset_iter@plt+0x39e4>
  40626c:	bl	402410 <localeconv@plt>
  406270:	cbz	x0, 406284 <scols_reset_iter@plt+0x3994>
  406274:	ldr	x4, [x0]
  406278:	cbz	x4, 406284 <scols_reset_iter@plt+0x3994>
  40627c:	ldrb	w8, [x4]
  406280:	cbnz	w8, 40628c <scols_reset_iter@plt+0x399c>
  406284:	adrp	x4, 409000 <scols_reset_iter@plt+0x6710>
  406288:	add	x4, x4, #0x1d0
  40628c:	adrp	x2, 409000 <scols_reset_iter@plt+0x6710>
  406290:	add	x2, x2, #0x1d2
  406294:	add	x0, sp, #0x10
  406298:	add	x6, sp, #0x8
  40629c:	mov	w1, #0x20                  	// #32
  4062a0:	mov	w3, w19
  4062a4:	mov	x5, x20
  4062a8:	bl	402400 <snprintf@plt>
  4062ac:	b	4062f0 <scols_reset_iter@plt+0x3a00>
  4062b0:	add	x8, x8, #0x32
  4062b4:	mov	x9, #0xf5c3                	// #62915
  4062b8:	movk	x9, #0x5c28, lsl #16
  4062bc:	movk	x9, #0xc28f, lsl #32
  4062c0:	lsr	x8, x8, #2
  4062c4:	movk	x9, #0x28f5, lsl #48
  4062c8:	umulh	x8, x8, x9
  4062cc:	lsr	x20, x8, #2
  4062d0:	cbnz	x20, 40626c <scols_reset_iter@plt+0x397c>
  4062d4:	adrp	x2, 409000 <scols_reset_iter@plt+0x6710>
  4062d8:	add	x2, x2, #0x1dc
  4062dc:	add	x0, sp, #0x10
  4062e0:	add	x4, sp, #0x8
  4062e4:	mov	w1, #0x20                  	// #32
  4062e8:	mov	w3, w19
  4062ec:	bl	402400 <snprintf@plt>
  4062f0:	add	x0, sp, #0x10
  4062f4:	bl	402570 <strdup@plt>
  4062f8:	ldp	x20, x19, [sp, #64]
  4062fc:	ldp	x29, x30, [sp, #48]
  406300:	add	sp, sp, #0x50
  406304:	ret
  406308:	stp	x29, x30, [sp, #-64]!
  40630c:	stp	x24, x23, [sp, #16]
  406310:	stp	x22, x21, [sp, #32]
  406314:	stp	x20, x19, [sp, #48]
  406318:	mov	x29, sp
  40631c:	cbz	x0, 4063d8 <scols_reset_iter@plt+0x3ae8>
  406320:	mov	x19, x3
  406324:	mov	x9, x0
  406328:	mov	w0, #0xffffffff            	// #-1
  40632c:	cbz	x3, 4063dc <scols_reset_iter@plt+0x3aec>
  406330:	mov	x20, x2
  406334:	cbz	x2, 4063dc <scols_reset_iter@plt+0x3aec>
  406338:	mov	x21, x1
  40633c:	cbz	x1, 4063dc <scols_reset_iter@plt+0x3aec>
  406340:	ldrb	w10, [x9]
  406344:	cbz	w10, 4063dc <scols_reset_iter@plt+0x3aec>
  406348:	mov	x23, xzr
  40634c:	mov	x8, xzr
  406350:	add	x22, x9, #0x1
  406354:	b	406368 <scols_reset_iter@plt+0x3a78>
  406358:	mov	x0, x23
  40635c:	add	x22, x22, #0x1
  406360:	mov	x23, x0
  406364:	cbz	w10, 4063dc <scols_reset_iter@plt+0x3aec>
  406368:	cmp	x23, x20
  40636c:	b.cs	4063f0 <scols_reset_iter@plt+0x3b00>  // b.hs, b.nlast
  406370:	and	w11, w10, #0xff
  406374:	ldrb	w10, [x22]
  406378:	sub	x9, x22, #0x1
  40637c:	cmp	x8, #0x0
  406380:	csel	x8, x9, x8, eq  // eq = none
  406384:	cmp	w11, #0x2c
  406388:	csel	x9, x9, xzr, eq  // eq = none
  40638c:	cmp	w10, #0x0
  406390:	csel	x24, x22, x9, eq  // eq = none
  406394:	cbz	x8, 406358 <scols_reset_iter@plt+0x3a68>
  406398:	cbz	x24, 406358 <scols_reset_iter@plt+0x3a68>
  40639c:	subs	x1, x24, x8
  4063a0:	b.ls	4063d8 <scols_reset_iter@plt+0x3ae8>  // b.plast
  4063a4:	mov	x0, x8
  4063a8:	blr	x19
  4063ac:	cmn	w0, #0x1
  4063b0:	b.eq	4063d8 <scols_reset_iter@plt+0x3ae8>  // b.none
  4063b4:	str	w0, [x21, x23, lsl #2]
  4063b8:	ldrb	w8, [x24]
  4063bc:	add	x0, x23, #0x1
  4063c0:	cbz	w8, 4063dc <scols_reset_iter@plt+0x3aec>
  4063c4:	ldrb	w10, [x22], #1
  4063c8:	mov	x8, xzr
  4063cc:	mov	x23, x0
  4063d0:	cbnz	w10, 406368 <scols_reset_iter@plt+0x3a78>
  4063d4:	b	4063dc <scols_reset_iter@plt+0x3aec>
  4063d8:	mov	w0, #0xffffffff            	// #-1
  4063dc:	ldp	x20, x19, [sp, #48]
  4063e0:	ldp	x22, x21, [sp, #32]
  4063e4:	ldp	x24, x23, [sp, #16]
  4063e8:	ldp	x29, x30, [sp], #64
  4063ec:	ret
  4063f0:	mov	w0, #0xfffffffe            	// #-2
  4063f4:	b	4063dc <scols_reset_iter@plt+0x3aec>
  4063f8:	stp	x29, x30, [sp, #-80]!
  4063fc:	str	x25, [sp, #16]
  406400:	stp	x24, x23, [sp, #32]
  406404:	stp	x22, x21, [sp, #48]
  406408:	stp	x20, x19, [sp, #64]
  40640c:	mov	x29, sp
  406410:	cbz	x0, 406438 <scols_reset_iter@plt+0x3b48>
  406414:	mov	x19, x3
  406418:	mov	x9, x0
  40641c:	mov	w0, #0xffffffff            	// #-1
  406420:	cbz	x3, 40643c <scols_reset_iter@plt+0x3b4c>
  406424:	ldrb	w8, [x9]
  406428:	cbz	w8, 40643c <scols_reset_iter@plt+0x3b4c>
  40642c:	ldr	x11, [x19]
  406430:	cmp	x11, x2
  406434:	b.ls	406454 <scols_reset_iter@plt+0x3b64>  // b.plast
  406438:	mov	w0, #0xffffffff            	// #-1
  40643c:	ldp	x20, x19, [sp, #64]
  406440:	ldp	x22, x21, [sp, #48]
  406444:	ldp	x24, x23, [sp, #32]
  406448:	ldr	x25, [sp, #16]
  40644c:	ldp	x29, x30, [sp], #80
  406450:	ret
  406454:	mov	x20, x4
  406458:	cmp	w8, #0x2b
  40645c:	b.ne	406468 <scols_reset_iter@plt+0x3b78>  // b.any
  406460:	add	x9, x9, #0x1
  406464:	b	406470 <scols_reset_iter@plt+0x3b80>
  406468:	mov	x11, xzr
  40646c:	str	xzr, [x19]
  406470:	mov	w0, #0xffffffff            	// #-1
  406474:	cbz	x20, 40643c <scols_reset_iter@plt+0x3b4c>
  406478:	sub	x21, x2, x11
  40647c:	cbz	x21, 40643c <scols_reset_iter@plt+0x3b4c>
  406480:	cbz	x1, 40643c <scols_reset_iter@plt+0x3b4c>
  406484:	ldrb	w10, [x9]
  406488:	cbz	w10, 40643c <scols_reset_iter@plt+0x3b4c>
  40648c:	mov	x24, xzr
  406490:	mov	x8, xzr
  406494:	add	x22, x1, x11, lsl #2
  406498:	add	x23, x9, #0x1
  40649c:	b	4064b0 <scols_reset_iter@plt+0x3bc0>
  4064a0:	mov	x0, x24
  4064a4:	add	x23, x23, #0x1
  4064a8:	mov	x24, x0
  4064ac:	cbz	w10, 40651c <scols_reset_iter@plt+0x3c2c>
  4064b0:	cmp	x24, x21
  4064b4:	b.cs	406534 <scols_reset_iter@plt+0x3c44>  // b.hs, b.nlast
  4064b8:	and	w11, w10, #0xff
  4064bc:	ldrb	w10, [x23]
  4064c0:	sub	x9, x23, #0x1
  4064c4:	cmp	x8, #0x0
  4064c8:	csel	x8, x9, x8, eq  // eq = none
  4064cc:	cmp	w11, #0x2c
  4064d0:	csel	x9, x9, xzr, eq  // eq = none
  4064d4:	cmp	w10, #0x0
  4064d8:	csel	x25, x23, x9, eq  // eq = none
  4064dc:	cbz	x8, 4064a0 <scols_reset_iter@plt+0x3bb0>
  4064e0:	cbz	x25, 4064a0 <scols_reset_iter@plt+0x3bb0>
  4064e4:	subs	x1, x25, x8
  4064e8:	b.ls	406438 <scols_reset_iter@plt+0x3b48>  // b.plast
  4064ec:	mov	x0, x8
  4064f0:	blr	x20
  4064f4:	cmn	w0, #0x1
  4064f8:	b.eq	406438 <scols_reset_iter@plt+0x3b48>  // b.none
  4064fc:	str	w0, [x22, x24, lsl #2]
  406500:	ldrb	w8, [x25]
  406504:	add	x0, x24, #0x1
  406508:	cbz	w8, 40651c <scols_reset_iter@plt+0x3c2c>
  40650c:	ldrb	w10, [x23], #1
  406510:	mov	x8, xzr
  406514:	mov	x24, x0
  406518:	cbnz	w10, 4064b0 <scols_reset_iter@plt+0x3bc0>
  40651c:	cmp	w0, #0x1
  406520:	b.lt	40643c <scols_reset_iter@plt+0x3b4c>  // b.tstop
  406524:	ldr	x8, [x19]
  406528:	add	x8, x8, w0, uxtw
  40652c:	str	x8, [x19]
  406530:	b	40643c <scols_reset_iter@plt+0x3b4c>
  406534:	mov	w0, #0xfffffffe            	// #-2
  406538:	b	40643c <scols_reset_iter@plt+0x3b4c>
  40653c:	stp	x29, x30, [sp, #-64]!
  406540:	mov	x8, x0
  406544:	mov	w0, #0xffffffea            	// #-22
  406548:	str	x23, [sp, #16]
  40654c:	stp	x22, x21, [sp, #32]
  406550:	stp	x20, x19, [sp, #48]
  406554:	mov	x29, sp
  406558:	cbz	x1, 406600 <scols_reset_iter@plt+0x3d10>
  40655c:	cbz	x8, 406600 <scols_reset_iter@plt+0x3d10>
  406560:	mov	x19, x2
  406564:	cbz	x2, 406600 <scols_reset_iter@plt+0x3d10>
  406568:	ldrb	w9, [x8]
  40656c:	cbz	w9, 4065fc <scols_reset_iter@plt+0x3d0c>
  406570:	mov	x20, x1
  406574:	mov	x0, xzr
  406578:	add	x21, x8, #0x1
  40657c:	mov	w22, #0x1                   	// #1
  406580:	b	40658c <scols_reset_iter@plt+0x3c9c>
  406584:	add	x21, x21, #0x1
  406588:	cbz	w9, 4065fc <scols_reset_iter@plt+0x3d0c>
  40658c:	mov	x8, x21
  406590:	ldrb	w10, [x8], #-1
  406594:	and	w9, w9, #0xff
  406598:	cmp	x0, #0x0
  40659c:	csel	x0, x8, x0, eq  // eq = none
  4065a0:	cmp	w9, #0x2c
  4065a4:	csel	x8, x8, xzr, eq  // eq = none
  4065a8:	cmp	w10, #0x0
  4065ac:	mov	w9, w10
  4065b0:	csel	x23, x21, x8, eq  // eq = none
  4065b4:	cbz	x0, 406584 <scols_reset_iter@plt+0x3c94>
  4065b8:	cbz	x23, 406584 <scols_reset_iter@plt+0x3c94>
  4065bc:	subs	x1, x23, x0
  4065c0:	b.ls	406614 <scols_reset_iter@plt+0x3d24>  // b.plast
  4065c4:	blr	x19
  4065c8:	tbnz	w0, #31, 406600 <scols_reset_iter@plt+0x3d10>
  4065cc:	mov	w8, w0
  4065d0:	lsr	x8, x8, #3
  4065d4:	ldrb	w9, [x20, x8]
  4065d8:	and	w10, w0, #0x7
  4065dc:	lsl	w10, w22, w10
  4065e0:	orr	w9, w9, w10
  4065e4:	strb	w9, [x20, x8]
  4065e8:	ldrb	w8, [x23]
  4065ec:	cbz	w8, 4065fc <scols_reset_iter@plt+0x3d0c>
  4065f0:	ldrb	w9, [x21]
  4065f4:	mov	x0, xzr
  4065f8:	b	406584 <scols_reset_iter@plt+0x3c94>
  4065fc:	mov	w0, wzr
  406600:	ldp	x20, x19, [sp, #48]
  406604:	ldp	x22, x21, [sp, #32]
  406608:	ldr	x23, [sp, #16]
  40660c:	ldp	x29, x30, [sp], #64
  406610:	ret
  406614:	mov	w0, #0xffffffff            	// #-1
  406618:	b	406600 <scols_reset_iter@plt+0x3d10>
  40661c:	stp	x29, x30, [sp, #-48]!
  406620:	mov	x8, x0
  406624:	mov	w0, #0xffffffea            	// #-22
  406628:	stp	x22, x21, [sp, #16]
  40662c:	stp	x20, x19, [sp, #32]
  406630:	mov	x29, sp
  406634:	cbz	x1, 4066c8 <scols_reset_iter@plt+0x3dd8>
  406638:	cbz	x8, 4066c8 <scols_reset_iter@plt+0x3dd8>
  40663c:	mov	x19, x2
  406640:	cbz	x2, 4066c8 <scols_reset_iter@plt+0x3dd8>
  406644:	ldrb	w9, [x8]
  406648:	cbz	w9, 4066c4 <scols_reset_iter@plt+0x3dd4>
  40664c:	mov	x20, x1
  406650:	mov	x0, xzr
  406654:	add	x21, x8, #0x1
  406658:	b	406664 <scols_reset_iter@plt+0x3d74>
  40665c:	add	x21, x21, #0x1
  406660:	cbz	w9, 4066c4 <scols_reset_iter@plt+0x3dd4>
  406664:	mov	x8, x21
  406668:	ldrb	w10, [x8], #-1
  40666c:	and	w9, w9, #0xff
  406670:	cmp	x0, #0x0
  406674:	csel	x0, x8, x0, eq  // eq = none
  406678:	cmp	w9, #0x2c
  40667c:	csel	x8, x8, xzr, eq  // eq = none
  406680:	cmp	w10, #0x0
  406684:	mov	w9, w10
  406688:	csel	x22, x21, x8, eq  // eq = none
  40668c:	cbz	x0, 40665c <scols_reset_iter@plt+0x3d6c>
  406690:	cbz	x22, 40665c <scols_reset_iter@plt+0x3d6c>
  406694:	subs	x1, x22, x0
  406698:	b.ls	4066d8 <scols_reset_iter@plt+0x3de8>  // b.plast
  40669c:	blr	x19
  4066a0:	tbnz	x0, #63, 4066c8 <scols_reset_iter@plt+0x3dd8>
  4066a4:	ldr	x8, [x20]
  4066a8:	orr	x8, x8, x0
  4066ac:	str	x8, [x20]
  4066b0:	ldrb	w8, [x22]
  4066b4:	cbz	w8, 4066c4 <scols_reset_iter@plt+0x3dd4>
  4066b8:	ldrb	w9, [x21]
  4066bc:	mov	x0, xzr
  4066c0:	b	40665c <scols_reset_iter@plt+0x3d6c>
  4066c4:	mov	w0, wzr
  4066c8:	ldp	x20, x19, [sp, #32]
  4066cc:	ldp	x22, x21, [sp, #16]
  4066d0:	ldp	x29, x30, [sp], #48
  4066d4:	ret
  4066d8:	mov	w0, #0xffffffff            	// #-1
  4066dc:	ldp	x20, x19, [sp, #32]
  4066e0:	ldp	x22, x21, [sp, #16]
  4066e4:	ldp	x29, x30, [sp], #48
  4066e8:	ret
  4066ec:	stp	x29, x30, [sp, #-64]!
  4066f0:	mov	x29, sp
  4066f4:	str	x23, [sp, #16]
  4066f8:	stp	x22, x21, [sp, #32]
  4066fc:	stp	x20, x19, [sp, #48]
  406700:	str	xzr, [x29, #24]
  406704:	cbz	x0, 4067dc <scols_reset_iter@plt+0x3eec>
  406708:	mov	w21, w3
  40670c:	mov	x19, x2
  406710:	mov	x23, x1
  406714:	mov	x22, x0
  406718:	str	w3, [x1]
  40671c:	str	w3, [x2]
  406720:	bl	402850 <__errno_location@plt>
  406724:	str	wzr, [x0]
  406728:	ldrb	w8, [x22]
  40672c:	mov	x20, x0
  406730:	cmp	w8, #0x3a
  406734:	b.ne	406740 <scols_reset_iter@plt+0x3e50>  // b.any
  406738:	add	x21, x22, #0x1
  40673c:	b	40679c <scols_reset_iter@plt+0x3eac>
  406740:	add	x1, x29, #0x18
  406744:	mov	w2, #0xa                   	// #10
  406748:	mov	x0, x22
  40674c:	bl	402680 <strtol@plt>
  406750:	str	w0, [x23]
  406754:	str	w0, [x19]
  406758:	ldr	x8, [x29, #24]
  40675c:	mov	w0, #0xffffffff            	// #-1
  406760:	cmp	x8, x22
  406764:	b.eq	4067dc <scols_reset_iter@plt+0x3eec>  // b.none
  406768:	ldr	w9, [x20]
  40676c:	cbnz	w9, 4067dc <scols_reset_iter@plt+0x3eec>
  406770:	cbz	x8, 4067dc <scols_reset_iter@plt+0x3eec>
  406774:	ldrb	w9, [x8]
  406778:	cmp	w9, #0x2d
  40677c:	b.eq	406790 <scols_reset_iter@plt+0x3ea0>  // b.none
  406780:	cmp	w9, #0x3a
  406784:	b.ne	4067d8 <scols_reset_iter@plt+0x3ee8>  // b.any
  406788:	ldrb	w9, [x8, #1]
  40678c:	cbz	w9, 4067f0 <scols_reset_iter@plt+0x3f00>
  406790:	add	x21, x8, #0x1
  406794:	str	xzr, [x29, #24]
  406798:	str	wzr, [x20]
  40679c:	add	x1, x29, #0x18
  4067a0:	mov	w2, #0xa                   	// #10
  4067a4:	mov	x0, x21
  4067a8:	bl	402680 <strtol@plt>
  4067ac:	str	w0, [x19]
  4067b0:	ldr	w8, [x20]
  4067b4:	mov	w0, #0xffffffff            	// #-1
  4067b8:	cbnz	w8, 4067dc <scols_reset_iter@plt+0x3eec>
  4067bc:	ldr	x8, [x29, #24]
  4067c0:	cbz	x8, 4067dc <scols_reset_iter@plt+0x3eec>
  4067c4:	cmp	x8, x21
  4067c8:	mov	w0, #0xffffffff            	// #-1
  4067cc:	b.eq	4067dc <scols_reset_iter@plt+0x3eec>  // b.none
  4067d0:	ldrb	w8, [x8]
  4067d4:	cbnz	w8, 4067dc <scols_reset_iter@plt+0x3eec>
  4067d8:	mov	w0, wzr
  4067dc:	ldp	x20, x19, [sp, #48]
  4067e0:	ldp	x22, x21, [sp, #32]
  4067e4:	ldr	x23, [sp, #16]
  4067e8:	ldp	x29, x30, [sp], #64
  4067ec:	ret
  4067f0:	str	w21, [x19]
  4067f4:	b	4067d8 <scols_reset_iter@plt+0x3ee8>
  4067f8:	stp	x29, x30, [sp, #-48]!
  4067fc:	mov	w8, wzr
  406800:	str	x21, [sp, #16]
  406804:	stp	x20, x19, [sp, #32]
  406808:	mov	x29, sp
  40680c:	cbz	x1, 406940 <scols_reset_iter@plt+0x4050>
  406810:	cbz	x0, 406940 <scols_reset_iter@plt+0x4050>
  406814:	ldrb	w8, [x0]
  406818:	and	w8, w8, #0xff
  40681c:	cmp	w8, #0x2f
  406820:	mov	x19, x0
  406824:	b.ne	406840 <scols_reset_iter@plt+0x3f50>  // b.any
  406828:	mov	x0, x19
  40682c:	ldrb	w8, [x0, #1]!
  406830:	cmp	w8, #0x2f
  406834:	mov	w8, #0x2f                  	// #47
  406838:	b.eq	406818 <scols_reset_iter@plt+0x3f28>  // b.none
  40683c:	b	406850 <scols_reset_iter@plt+0x3f60>
  406840:	cbnz	w8, 406850 <scols_reset_iter@plt+0x3f60>
  406844:	mov	x20, xzr
  406848:	mov	x19, xzr
  40684c:	b	406870 <scols_reset_iter@plt+0x3f80>
  406850:	mov	w20, #0x1                   	// #1
  406854:	ldrb	w8, [x19, x20]
  406858:	cbz	w8, 406870 <scols_reset_iter@plt+0x3f80>
  40685c:	cmp	w8, #0x2f
  406860:	b.eq	406870 <scols_reset_iter@plt+0x3f80>  // b.none
  406864:	add	x20, x20, #0x1
  406868:	ldrb	w8, [x19, x20]
  40686c:	cbnz	w8, 40685c <scols_reset_iter@plt+0x3f6c>
  406870:	ldrb	w8, [x1]
  406874:	and	w8, w8, #0xff
  406878:	cmp	w8, #0x2f
  40687c:	mov	x21, x1
  406880:	b.ne	40689c <scols_reset_iter@plt+0x3fac>  // b.any
  406884:	mov	x1, x21
  406888:	ldrb	w8, [x1, #1]!
  40688c:	cmp	w8, #0x2f
  406890:	mov	w8, #0x2f                  	// #47
  406894:	b.eq	406874 <scols_reset_iter@plt+0x3f84>  // b.none
  406898:	b	4068ac <scols_reset_iter@plt+0x3fbc>
  40689c:	cbnz	w8, 4068ac <scols_reset_iter@plt+0x3fbc>
  4068a0:	mov	x8, xzr
  4068a4:	mov	x21, xzr
  4068a8:	b	4068cc <scols_reset_iter@plt+0x3fdc>
  4068ac:	mov	w8, #0x1                   	// #1
  4068b0:	ldrb	w9, [x21, x8]
  4068b4:	cbz	w9, 4068cc <scols_reset_iter@plt+0x3fdc>
  4068b8:	cmp	w9, #0x2f
  4068bc:	b.eq	4068cc <scols_reset_iter@plt+0x3fdc>  // b.none
  4068c0:	add	x8, x8, #0x1
  4068c4:	ldrb	w9, [x21, x8]
  4068c8:	cbnz	w9, 4068b8 <scols_reset_iter@plt+0x3fc8>
  4068cc:	add	x9, x8, x20
  4068d0:	cmp	x9, #0x1
  4068d4:	b.eq	4068e0 <scols_reset_iter@plt+0x3ff0>  // b.none
  4068d8:	cbnz	x9, 406900 <scols_reset_iter@plt+0x4010>
  4068dc:	b	406934 <scols_reset_iter@plt+0x4044>
  4068e0:	cbz	x19, 4068f0 <scols_reset_iter@plt+0x4000>
  4068e4:	ldrb	w9, [x19]
  4068e8:	cmp	w9, #0x2f
  4068ec:	b.eq	406934 <scols_reset_iter@plt+0x4044>  // b.none
  4068f0:	cbz	x21, 40693c <scols_reset_iter@plt+0x404c>
  4068f4:	ldrb	w9, [x21]
  4068f8:	cmp	w9, #0x2f
  4068fc:	b.eq	406934 <scols_reset_iter@plt+0x4044>  // b.none
  406900:	cmp	x20, x8
  406904:	mov	w8, wzr
  406908:	b.ne	406940 <scols_reset_iter@plt+0x4050>  // b.any
  40690c:	cbz	x19, 406940 <scols_reset_iter@plt+0x4050>
  406910:	cbz	x21, 406940 <scols_reset_iter@plt+0x4050>
  406914:	mov	x0, x19
  406918:	mov	x1, x21
  40691c:	mov	x2, x20
  406920:	bl	4024b0 <strncmp@plt>
  406924:	cbnz	w0, 40693c <scols_reset_iter@plt+0x404c>
  406928:	add	x0, x19, x20
  40692c:	add	x1, x21, x20
  406930:	b	406814 <scols_reset_iter@plt+0x3f24>
  406934:	mov	w8, #0x1                   	// #1
  406938:	b	406940 <scols_reset_iter@plt+0x4050>
  40693c:	mov	w8, wzr
  406940:	ldp	x20, x19, [sp, #32]
  406944:	ldr	x21, [sp, #16]
  406948:	mov	w0, w8
  40694c:	ldp	x29, x30, [sp], #48
  406950:	ret
  406954:	stp	x29, x30, [sp, #-64]!
  406958:	orr	x8, x0, x1
  40695c:	stp	x24, x23, [sp, #16]
  406960:	stp	x22, x21, [sp, #32]
  406964:	stp	x20, x19, [sp, #48]
  406968:	mov	x29, sp
  40696c:	cbz	x8, 4069a0 <scols_reset_iter@plt+0x40b0>
  406970:	mov	x19, x1
  406974:	mov	x21, x0
  406978:	mov	x20, x2
  40697c:	cbz	x0, 4069bc <scols_reset_iter@plt+0x40cc>
  406980:	cbz	x19, 4069d8 <scols_reset_iter@plt+0x40e8>
  406984:	mov	x0, x21
  406988:	bl	4022d0 <strlen@plt>
  40698c:	mvn	x8, x0
  406990:	cmp	x8, x20
  406994:	b.cs	4069e0 <scols_reset_iter@plt+0x40f0>  // b.hs, b.nlast
  406998:	mov	x22, xzr
  40699c:	b	406a1c <scols_reset_iter@plt+0x412c>
  4069a0:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  4069a4:	add	x0, x0, #0xef0
  4069a8:	ldp	x20, x19, [sp, #48]
  4069ac:	ldp	x22, x21, [sp, #32]
  4069b0:	ldp	x24, x23, [sp, #16]
  4069b4:	ldp	x29, x30, [sp], #64
  4069b8:	b	402570 <strdup@plt>
  4069bc:	mov	x0, x19
  4069c0:	mov	x1, x20
  4069c4:	ldp	x20, x19, [sp, #48]
  4069c8:	ldp	x22, x21, [sp, #32]
  4069cc:	ldp	x24, x23, [sp, #16]
  4069d0:	ldp	x29, x30, [sp], #64
  4069d4:	b	402730 <strndup@plt>
  4069d8:	mov	x0, x21
  4069dc:	b	4069a8 <scols_reset_iter@plt+0x40b8>
  4069e0:	add	x24, x0, x20
  4069e4:	mov	x23, x0
  4069e8:	add	x0, x24, #0x1
  4069ec:	bl	402470 <malloc@plt>
  4069f0:	mov	x22, x0
  4069f4:	cbz	x0, 406a1c <scols_reset_iter@plt+0x412c>
  4069f8:	mov	x0, x22
  4069fc:	mov	x1, x21
  406a00:	mov	x2, x23
  406a04:	bl	4022a0 <memcpy@plt>
  406a08:	add	x0, x22, x23
  406a0c:	mov	x1, x19
  406a10:	mov	x2, x20
  406a14:	bl	4022a0 <memcpy@plt>
  406a18:	strb	wzr, [x22, x24]
  406a1c:	mov	x0, x22
  406a20:	ldp	x20, x19, [sp, #48]
  406a24:	ldp	x22, x21, [sp, #32]
  406a28:	ldp	x24, x23, [sp, #16]
  406a2c:	ldp	x29, x30, [sp], #64
  406a30:	ret
  406a34:	stp	x29, x30, [sp, #-64]!
  406a38:	stp	x20, x19, [sp, #48]
  406a3c:	mov	x20, x0
  406a40:	stp	x24, x23, [sp, #16]
  406a44:	stp	x22, x21, [sp, #32]
  406a48:	mov	x29, sp
  406a4c:	cbz	x1, 406a80 <scols_reset_iter@plt+0x4190>
  406a50:	mov	x0, x1
  406a54:	mov	x19, x1
  406a58:	bl	4022d0 <strlen@plt>
  406a5c:	mov	x21, x0
  406a60:	cbz	x20, 406a8c <scols_reset_iter@plt+0x419c>
  406a64:	mov	x0, x20
  406a68:	bl	4022d0 <strlen@plt>
  406a6c:	mvn	x8, x0
  406a70:	cmp	x21, x8
  406a74:	b.ls	406aa8 <scols_reset_iter@plt+0x41b8>  // b.plast
  406a78:	mov	x22, xzr
  406a7c:	b	406ae4 <scols_reset_iter@plt+0x41f4>
  406a80:	cbz	x20, 406afc <scols_reset_iter@plt+0x420c>
  406a84:	mov	x0, x20
  406a88:	b	406b04 <scols_reset_iter@plt+0x4214>
  406a8c:	mov	x0, x19
  406a90:	mov	x1, x21
  406a94:	ldp	x20, x19, [sp, #48]
  406a98:	ldp	x22, x21, [sp, #32]
  406a9c:	ldp	x24, x23, [sp, #16]
  406aa0:	ldp	x29, x30, [sp], #64
  406aa4:	b	402730 <strndup@plt>
  406aa8:	add	x24, x0, x21
  406aac:	mov	x23, x0
  406ab0:	add	x0, x24, #0x1
  406ab4:	bl	402470 <malloc@plt>
  406ab8:	mov	x22, x0
  406abc:	cbz	x0, 406ae4 <scols_reset_iter@plt+0x41f4>
  406ac0:	mov	x0, x22
  406ac4:	mov	x1, x20
  406ac8:	mov	x2, x23
  406acc:	bl	4022a0 <memcpy@plt>
  406ad0:	add	x0, x22, x23
  406ad4:	mov	x1, x19
  406ad8:	mov	x2, x21
  406adc:	bl	4022a0 <memcpy@plt>
  406ae0:	strb	wzr, [x22, x24]
  406ae4:	mov	x0, x22
  406ae8:	ldp	x20, x19, [sp, #48]
  406aec:	ldp	x22, x21, [sp, #32]
  406af0:	ldp	x24, x23, [sp, #16]
  406af4:	ldp	x29, x30, [sp], #64
  406af8:	ret
  406afc:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  406b00:	add	x0, x0, #0xef0
  406b04:	ldp	x20, x19, [sp, #48]
  406b08:	ldp	x22, x21, [sp, #32]
  406b0c:	ldp	x24, x23, [sp, #16]
  406b10:	ldp	x29, x30, [sp], #64
  406b14:	b	402570 <strdup@plt>
  406b18:	sub	sp, sp, #0x140
  406b1c:	stp	x29, x30, [sp, #240]
  406b20:	add	x29, sp, #0xf0
  406b24:	sub	x9, x29, #0x70
  406b28:	mov	x10, sp
  406b2c:	mov	x11, #0xffffffffffffffd0    	// #-48
  406b30:	add	x8, x29, #0x50
  406b34:	movk	x11, #0xff80, lsl #32
  406b38:	add	x9, x9, #0x30
  406b3c:	add	x10, x10, #0x80
  406b40:	stp	x8, x9, [x29, #-32]
  406b44:	stp	x10, x11, [x29, #-16]
  406b48:	stp	x2, x3, [x29, #-112]
  406b4c:	stp	x4, x5, [x29, #-96]
  406b50:	stp	x6, x7, [x29, #-80]
  406b54:	stp	q1, q2, [sp, #16]
  406b58:	str	q0, [sp]
  406b5c:	ldp	q0, q1, [x29, #-32]
  406b60:	stp	x20, x19, [sp, #304]
  406b64:	mov	x19, x0
  406b68:	add	x0, x29, #0x18
  406b6c:	sub	x2, x29, #0x40
  406b70:	str	x28, [sp, #256]
  406b74:	stp	x24, x23, [sp, #272]
  406b78:	stp	x22, x21, [sp, #288]
  406b7c:	stp	q3, q4, [sp, #48]
  406b80:	stp	q5, q6, [sp, #80]
  406b84:	str	q7, [sp, #112]
  406b88:	stp	q0, q1, [x29, #-64]
  406b8c:	bl	402700 <vasprintf@plt>
  406b90:	tbnz	w0, #31, 406bc8 <scols_reset_iter@plt+0x42d8>
  406b94:	ldr	x21, [x29, #24]
  406b98:	orr	x8, x19, x21
  406b9c:	cbz	x8, 406bd0 <scols_reset_iter@plt+0x42e0>
  406ba0:	mov	w22, w0
  406ba4:	cbz	x19, 406be4 <scols_reset_iter@plt+0x42f4>
  406ba8:	cbz	x21, 406bf8 <scols_reset_iter@plt+0x4308>
  406bac:	mov	x0, x19
  406bb0:	bl	4022d0 <strlen@plt>
  406bb4:	mvn	x8, x0
  406bb8:	cmp	x8, x22
  406bbc:	b.cs	406c00 <scols_reset_iter@plt+0x4310>  // b.hs, b.nlast
  406bc0:	mov	x20, xzr
  406bc4:	b	406c3c <scols_reset_iter@plt+0x434c>
  406bc8:	mov	x20, xzr
  406bcc:	b	406c44 <scols_reset_iter@plt+0x4354>
  406bd0:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  406bd4:	add	x0, x0, #0xef0
  406bd8:	bl	402570 <strdup@plt>
  406bdc:	mov	x20, x0
  406be0:	b	406c3c <scols_reset_iter@plt+0x434c>
  406be4:	mov	x0, x21
  406be8:	mov	x1, x22
  406bec:	bl	402730 <strndup@plt>
  406bf0:	mov	x20, x0
  406bf4:	b	406c3c <scols_reset_iter@plt+0x434c>
  406bf8:	mov	x0, x19
  406bfc:	b	406bd8 <scols_reset_iter@plt+0x42e8>
  406c00:	add	x24, x0, x22
  406c04:	mov	x23, x0
  406c08:	add	x0, x24, #0x1
  406c0c:	bl	402470 <malloc@plt>
  406c10:	mov	x20, x0
  406c14:	cbz	x0, 406c3c <scols_reset_iter@plt+0x434c>
  406c18:	mov	x0, x20
  406c1c:	mov	x1, x19
  406c20:	mov	x2, x23
  406c24:	bl	4022a0 <memcpy@plt>
  406c28:	add	x0, x20, x23
  406c2c:	mov	x1, x21
  406c30:	mov	x2, x22
  406c34:	bl	4022a0 <memcpy@plt>
  406c38:	strb	wzr, [x20, x24]
  406c3c:	ldr	x0, [x29, #24]
  406c40:	bl	4026b0 <free@plt>
  406c44:	mov	x0, x20
  406c48:	ldp	x20, x19, [sp, #304]
  406c4c:	ldp	x22, x21, [sp, #288]
  406c50:	ldp	x24, x23, [sp, #272]
  406c54:	ldr	x28, [sp, #256]
  406c58:	ldp	x29, x30, [sp, #240]
  406c5c:	add	sp, sp, #0x140
  406c60:	ret
  406c64:	sub	sp, sp, #0x60
  406c68:	stp	x29, x30, [sp, #16]
  406c6c:	stp	x26, x25, [sp, #32]
  406c70:	stp	x24, x23, [sp, #48]
  406c74:	stp	x22, x21, [sp, #64]
  406c78:	stp	x20, x19, [sp, #80]
  406c7c:	ldr	x23, [x0]
  406c80:	add	x29, sp, #0x10
  406c84:	ldrb	w8, [x23]
  406c88:	cbz	w8, 406e48 <scols_reset_iter@plt+0x4558>
  406c8c:	mov	x20, x0
  406c90:	mov	x22, x1
  406c94:	mov	x0, x23
  406c98:	mov	x1, x2
  406c9c:	mov	w24, w3
  406ca0:	mov	x21, x2
  406ca4:	bl	402740 <strspn@plt>
  406ca8:	add	x19, x23, x0
  406cac:	ldrb	w25, [x19]
  406cb0:	cbz	x25, 406e44 <scols_reset_iter@plt+0x4554>
  406cb4:	cbz	w24, 406d44 <scols_reset_iter@plt+0x4454>
  406cb8:	cmp	w25, #0x3f
  406cbc:	b.hi	406d60 <scols_reset_iter@plt+0x4470>  // b.pmore
  406cc0:	mov	w8, #0x1                   	// #1
  406cc4:	mov	x9, #0x1                   	// #1
  406cc8:	lsl	x8, x8, x25
  406ccc:	movk	x9, #0x84, lsl #32
  406cd0:	and	x8, x8, x9
  406cd4:	cbz	x8, 406d60 <scols_reset_iter@plt+0x4470>
  406cd8:	sturb	w25, [x29, #-4]
  406cdc:	sturb	wzr, [x29, #-3]
  406ce0:	mov	x24, x19
  406ce4:	ldrb	w9, [x24, #1]!
  406ce8:	cbz	w9, 406de0 <scols_reset_iter@plt+0x44f0>
  406cec:	add	x10, x0, x23
  406cf0:	mov	x26, xzr
  406cf4:	mov	w8, wzr
  406cf8:	add	x23, x10, #0x2
  406cfc:	b	406d20 <scols_reset_iter@plt+0x4430>
  406d00:	sxtb	w1, w9
  406d04:	sub	x0, x29, #0x4
  406d08:	bl	402750 <strchr@plt>
  406d0c:	cbnz	x0, 406df4 <scols_reset_iter@plt+0x4504>
  406d10:	mov	w8, wzr
  406d14:	ldrb	w9, [x23, x26]
  406d18:	add	x26, x26, #0x1
  406d1c:	cbz	w9, 406d40 <scols_reset_iter@plt+0x4450>
  406d20:	cbnz	w8, 406d10 <scols_reset_iter@plt+0x4420>
  406d24:	and	w8, w9, #0xff
  406d28:	cmp	w8, #0x5c
  406d2c:	b.ne	406d00 <scols_reset_iter@plt+0x4410>  // b.any
  406d30:	mov	w8, #0x1                   	// #1
  406d34:	ldrb	w9, [x23, x26]
  406d38:	add	x26, x26, #0x1
  406d3c:	cbnz	w9, 406d20 <scols_reset_iter@plt+0x4430>
  406d40:	b	406df8 <scols_reset_iter@plt+0x4508>
  406d44:	mov	x0, x19
  406d48:	mov	x1, x21
  406d4c:	bl	402820 <strcspn@plt>
  406d50:	add	x8, x19, x0
  406d54:	str	x0, [x22]
  406d58:	str	x8, [x20]
  406d5c:	b	406e4c <scols_reset_iter@plt+0x455c>
  406d60:	add	x9, x0, x23
  406d64:	mov	x24, xzr
  406d68:	mov	w8, wzr
  406d6c:	add	x23, x9, #0x1
  406d70:	b	406d94 <scols_reset_iter@plt+0x44a4>
  406d74:	sxtb	w1, w25
  406d78:	mov	x0, x21
  406d7c:	bl	402750 <strchr@plt>
  406d80:	cbnz	x0, 406dec <scols_reset_iter@plt+0x44fc>
  406d84:	mov	w8, wzr
  406d88:	ldrb	w25, [x23, x24]
  406d8c:	add	x24, x24, #0x1
  406d90:	cbz	w25, 406db4 <scols_reset_iter@plt+0x44c4>
  406d94:	cbnz	w8, 406d84 <scols_reset_iter@plt+0x4494>
  406d98:	and	w8, w25, #0xff
  406d9c:	cmp	w8, #0x5c
  406da0:	b.ne	406d74 <scols_reset_iter@plt+0x4484>  // b.any
  406da4:	mov	w8, #0x1                   	// #1
  406da8:	ldrb	w25, [x23, x24]
  406dac:	add	x24, x24, #0x1
  406db0:	cbnz	w25, 406d94 <scols_reset_iter@plt+0x44a4>
  406db4:	sub	w8, w24, w8
  406db8:	sxtw	x8, w8
  406dbc:	str	x8, [x22]
  406dc0:	add	x22, x19, x8
  406dc4:	ldrsb	w1, [x22]
  406dc8:	cbz	w1, 406dd8 <scols_reset_iter@plt+0x44e8>
  406dcc:	mov	x0, x21
  406dd0:	bl	402750 <strchr@plt>
  406dd4:	cbz	x0, 406e44 <scols_reset_iter@plt+0x4554>
  406dd8:	str	x22, [x20]
  406ddc:	b	406e4c <scols_reset_iter@plt+0x455c>
  406de0:	mov	w8, wzr
  406de4:	mov	w26, wzr
  406de8:	b	406df8 <scols_reset_iter@plt+0x4508>
  406dec:	mov	w8, wzr
  406df0:	b	406db4 <scols_reset_iter@plt+0x44c4>
  406df4:	mov	w8, wzr
  406df8:	sub	w8, w26, w8
  406dfc:	sxtw	x23, w8
  406e00:	str	x23, [x22]
  406e04:	add	x8, x23, x19
  406e08:	ldrb	w8, [x8, #1]
  406e0c:	cbz	w8, 406e44 <scols_reset_iter@plt+0x4554>
  406e10:	cmp	w8, w25
  406e14:	b.ne	406e44 <scols_reset_iter@plt+0x4554>  // b.any
  406e18:	add	x8, x23, x19
  406e1c:	ldrsb	w1, [x8, #2]
  406e20:	cbz	w1, 406e30 <scols_reset_iter@plt+0x4540>
  406e24:	mov	x0, x21
  406e28:	bl	402750 <strchr@plt>
  406e2c:	cbz	x0, 406e44 <scols_reset_iter@plt+0x4554>
  406e30:	add	x8, x19, x23
  406e34:	add	x8, x8, #0x2
  406e38:	str	x8, [x20]
  406e3c:	mov	x19, x24
  406e40:	b	406e4c <scols_reset_iter@plt+0x455c>
  406e44:	str	x19, [x20]
  406e48:	mov	x19, xzr
  406e4c:	mov	x0, x19
  406e50:	ldp	x20, x19, [sp, #80]
  406e54:	ldp	x22, x21, [sp, #64]
  406e58:	ldp	x24, x23, [sp, #48]
  406e5c:	ldp	x26, x25, [sp, #32]
  406e60:	ldp	x29, x30, [sp, #16]
  406e64:	add	sp, sp, #0x60
  406e68:	ret
  406e6c:	stp	x29, x30, [sp, #-32]!
  406e70:	str	x19, [sp, #16]
  406e74:	mov	x19, x0
  406e78:	mov	x29, sp
  406e7c:	mov	x0, x19
  406e80:	bl	4024e0 <fgetc@plt>
  406e84:	cmp	w0, #0xa
  406e88:	b.eq	406ea4 <scols_reset_iter@plt+0x45b4>  // b.none
  406e8c:	cmn	w0, #0x1
  406e90:	b.ne	406e7c <scols_reset_iter@plt+0x458c>  // b.any
  406e94:	mov	w0, #0x1                   	// #1
  406e98:	ldr	x19, [sp, #16]
  406e9c:	ldp	x29, x30, [sp], #32
  406ea0:	ret
  406ea4:	mov	w0, wzr
  406ea8:	ldr	x19, [sp, #16]
  406eac:	ldp	x29, x30, [sp], #32
  406eb0:	ret
  406eb4:	sub	sp, sp, #0x50
  406eb8:	stp	x22, x21, [sp, #48]
  406ebc:	stp	x20, x19, [sp, #64]
  406ec0:	mov	x19, x1
  406ec4:	mov	x21, x0
  406ec8:	mov	x2, sp
  406ecc:	mov	w0, #0x1                   	// #1
  406ed0:	mov	w1, #0x5413                	// #21523
  406ed4:	stp	x29, x30, [sp, #16]
  406ed8:	stp	x24, x23, [sp, #32]
  406edc:	add	x29, sp, #0x10
  406ee0:	bl	4028c0 <ioctl@plt>
  406ee4:	ldrh	w20, [sp]
  406ee8:	mov	w22, w0
  406eec:	cbz	x21, 406f50 <scols_reset_iter@plt+0x4660>
  406ef0:	ldrh	w0, [sp, #2]
  406ef4:	cbz	w0, 406efc <scols_reset_iter@plt+0x460c>
  406ef8:	cbz	w22, 406f4c <scols_reset_iter@plt+0x465c>
  406efc:	adrp	x0, 409000 <scols_reset_iter@plt+0x6710>
  406f00:	add	x0, x0, #0x1e1
  406f04:	bl	402860 <getenv@plt>
  406f08:	cbz	x0, 406f48 <scols_reset_iter@plt+0x4658>
  406f0c:	mov	x23, x0
  406f10:	str	xzr, [sp, #8]
  406f14:	bl	402850 <__errno_location@plt>
  406f18:	mov	x24, x0
  406f1c:	str	wzr, [x0]
  406f20:	add	x1, sp, #0x8
  406f24:	mov	w2, #0xa                   	// #10
  406f28:	mov	x0, x23
  406f2c:	bl	402680 <strtol@plt>
  406f30:	ldr	w8, [x24]
  406f34:	cbnz	w8, 406f48 <scols_reset_iter@plt+0x4658>
  406f38:	ldr	x8, [sp, #8]
  406f3c:	cbz	x8, 406f48 <scols_reset_iter@plt+0x4658>
  406f40:	ldrb	w9, [x8]
  406f44:	cbz	w9, 406fcc <scols_reset_iter@plt+0x46dc>
  406f48:	mov	w0, #0xffffffff            	// #-1
  406f4c:	str	w0, [x21]
  406f50:	cbz	x19, 406fb0 <scols_reset_iter@plt+0x46c0>
  406f54:	cbz	w20, 406f5c <scols_reset_iter@plt+0x466c>
  406f58:	cbz	w22, 406fac <scols_reset_iter@plt+0x46bc>
  406f5c:	adrp	x0, 409000 <scols_reset_iter@plt+0x6710>
  406f60:	add	x0, x0, #0x1e9
  406f64:	bl	402860 <getenv@plt>
  406f68:	cbz	x0, 406fa8 <scols_reset_iter@plt+0x46b8>
  406f6c:	mov	x21, x0
  406f70:	str	xzr, [sp, #8]
  406f74:	bl	402850 <__errno_location@plt>
  406f78:	mov	x20, x0
  406f7c:	str	wzr, [x0]
  406f80:	add	x1, sp, #0x8
  406f84:	mov	w2, #0xa                   	// #10
  406f88:	mov	x0, x21
  406f8c:	bl	402680 <strtol@plt>
  406f90:	ldr	w8, [x20]
  406f94:	cbnz	w8, 406fa8 <scols_reset_iter@plt+0x46b8>
  406f98:	ldr	x8, [sp, #8]
  406f9c:	cbz	x8, 406fa8 <scols_reset_iter@plt+0x46b8>
  406fa0:	ldrb	w9, [x8]
  406fa4:	cbz	w9, 406fe8 <scols_reset_iter@plt+0x46f8>
  406fa8:	mov	w20, #0xffffffff            	// #-1
  406fac:	str	w20, [x19]
  406fb0:	ldp	x20, x19, [sp, #64]
  406fb4:	ldp	x22, x21, [sp, #48]
  406fb8:	ldp	x24, x23, [sp, #32]
  406fbc:	ldp	x29, x30, [sp, #16]
  406fc0:	mov	w0, wzr
  406fc4:	add	sp, sp, #0x50
  406fc8:	ret
  406fcc:	sub	x9, x0, #0x1
  406fd0:	mov	w10, #0x7ffffffe            	// #2147483646
  406fd4:	cmp	x9, x10
  406fd8:	b.hi	406f48 <scols_reset_iter@plt+0x4658>  // b.pmore
  406fdc:	cmp	x8, x23
  406fe0:	b.hi	406f4c <scols_reset_iter@plt+0x465c>  // b.pmore
  406fe4:	b	406f48 <scols_reset_iter@plt+0x4658>
  406fe8:	sub	x9, x0, #0x1
  406fec:	mov	w10, #0x7ffffffe            	// #2147483646
  406ff0:	mov	x20, x0
  406ff4:	cmp	x9, x10
  406ff8:	b.hi	406fa8 <scols_reset_iter@plt+0x46b8>  // b.pmore
  406ffc:	cmp	x8, x21
  407000:	b.hi	406fac <scols_reset_iter@plt+0x46bc>  // b.pmore
  407004:	b	406fa8 <scols_reset_iter@plt+0x46b8>
  407008:	stp	x29, x30, [sp, #-32]!
  40700c:	mov	x29, sp
  407010:	str	x19, [sp, #16]
  407014:	mov	w19, w0
  407018:	add	x0, x29, #0x1c
  40701c:	mov	x1, xzr
  407020:	str	wzr, [x29, #28]
  407024:	bl	406eb4 <scols_reset_iter@plt+0x45c4>
  407028:	ldr	w8, [x29, #28]
  40702c:	cmp	w8, #0x0
  407030:	csel	w0, w8, w19, gt
  407034:	ldr	x19, [sp, #16]
  407038:	ldp	x29, x30, [sp], #32
  40703c:	ret
  407040:	stp	x29, x30, [sp, #-32]!
  407044:	mov	w0, wzr
  407048:	str	x19, [sp, #16]
  40704c:	mov	x29, sp
  407050:	bl	4027a0 <isatty@plt>
  407054:	mov	w19, wzr
  407058:	cbz	w0, 40706c <scols_reset_iter@plt+0x477c>
  40705c:	mov	w0, w19
  407060:	ldr	x19, [sp, #16]
  407064:	ldp	x29, x30, [sp], #32
  407068:	ret
  40706c:	mov	w0, #0x1                   	// #1
  407070:	mov	w19, #0x1                   	// #1
  407074:	bl	4027a0 <isatty@plt>
  407078:	cbnz	w0, 40705c <scols_reset_iter@plt+0x476c>
  40707c:	mov	w0, #0x2                   	// #2
  407080:	mov	w19, #0x2                   	// #2
  407084:	bl	4027a0 <isatty@plt>
  407088:	cmp	w0, #0x0
  40708c:	mov	w8, #0xffffffea            	// #-22
  407090:	csel	w19, w8, w19, eq  // eq = none
  407094:	mov	w0, w19
  407098:	ldr	x19, [sp, #16]
  40709c:	ldp	x29, x30, [sp], #32
  4070a0:	ret
  4070a4:	stp	x29, x30, [sp, #-48]!
  4070a8:	stp	x22, x21, [sp, #16]
  4070ac:	stp	x20, x19, [sp, #32]
  4070b0:	mov	x19, x2
  4070b4:	mov	x20, x1
  4070b8:	mov	x22, x0
  4070bc:	mov	x29, sp
  4070c0:	cbz	x1, 4070c8 <scols_reset_iter@plt+0x47d8>
  4070c4:	str	xzr, [x20]
  4070c8:	cbz	x22, 4070d0 <scols_reset_iter@plt+0x47e0>
  4070cc:	str	xzr, [x22]
  4070d0:	cbz	x19, 4070d8 <scols_reset_iter@plt+0x47e8>
  4070d4:	str	xzr, [x19]
  4070d8:	mov	w0, wzr
  4070dc:	bl	4027a0 <isatty@plt>
  4070e0:	mov	w21, wzr
  4070e4:	cbnz	w0, 407108 <scols_reset_iter@plt+0x4818>
  4070e8:	mov	w0, #0x1                   	// #1
  4070ec:	mov	w21, #0x1                   	// #1
  4070f0:	bl	4027a0 <isatty@plt>
  4070f4:	cbnz	w0, 407108 <scols_reset_iter@plt+0x4818>
  4070f8:	mov	w0, #0x2                   	// #2
  4070fc:	mov	w21, #0x2                   	// #2
  407100:	bl	4027a0 <isatty@plt>
  407104:	cbz	w0, 4071b8 <scols_reset_iter@plt+0x48c8>
  407108:	mov	w0, w21
  40710c:	bl	4023a0 <ttyname@plt>
  407110:	cbz	x0, 40718c <scols_reset_iter@plt+0x489c>
  407114:	mov	x21, x0
  407118:	cbz	x22, 407120 <scols_reset_iter@plt+0x4830>
  40711c:	str	x21, [x22]
  407120:	orr	x8, x20, x19
  407124:	cbz	x8, 407148 <scols_reset_iter@plt+0x4858>
  407128:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  40712c:	add	x1, x1, #0x1ef
  407130:	mov	w2, #0x5                   	// #5
  407134:	mov	x0, x21
  407138:	bl	4024b0 <strncmp@plt>
  40713c:	add	x8, x21, #0x5
  407140:	cmp	w0, #0x0
  407144:	csel	x21, x8, x21, eq  // eq = none
  407148:	cbz	x20, 407150 <scols_reset_iter@plt+0x4860>
  40714c:	str	x21, [x20]
  407150:	cbz	x19, 407178 <scols_reset_iter@plt+0x4888>
  407154:	ldrb	w20, [x21]
  407158:	cbz	w20, 407178 <scols_reset_iter@plt+0x4888>
  40715c:	bl	402670 <__ctype_b_loc@plt>
  407160:	ldr	x8, [x0]
  407164:	sxtb	x9, w20
  407168:	ldrh	w9, [x8, x9, lsl #1]
  40716c:	tbnz	w9, #11, 4071a0 <scols_reset_iter@plt+0x48b0>
  407170:	ldrb	w20, [x21, #1]!
  407174:	cbnz	w20, 407164 <scols_reset_iter@plt+0x4874>
  407178:	mov	w0, wzr
  40717c:	ldp	x20, x19, [sp, #32]
  407180:	ldp	x22, x21, [sp, #16]
  407184:	ldp	x29, x30, [sp], #48
  407188:	ret
  40718c:	mov	w0, #0xffffffff            	// #-1
  407190:	ldp	x20, x19, [sp, #32]
  407194:	ldp	x22, x21, [sp, #16]
  407198:	ldp	x29, x30, [sp], #48
  40719c:	ret
  4071a0:	mov	w0, wzr
  4071a4:	str	x21, [x19]
  4071a8:	ldp	x20, x19, [sp, #32]
  4071ac:	ldp	x22, x21, [sp, #16]
  4071b0:	ldp	x29, x30, [sp], #48
  4071b4:	ret
  4071b8:	mov	w0, #0xffffffea            	// #-22
  4071bc:	ldp	x20, x19, [sp, #32]
  4071c0:	ldp	x22, x21, [sp, #16]
  4071c4:	ldp	x29, x30, [sp], #48
  4071c8:	ret
  4071cc:	stp	x29, x30, [sp, #-32]!
  4071d0:	str	x19, [sp, #16]
  4071d4:	mov	x19, x0
  4071d8:	adrp	x0, 409000 <scols_reset_iter@plt+0x6710>
  4071dc:	add	x0, x0, #0x1f5
  4071e0:	mov	x29, sp
  4071e4:	bl	402860 <getenv@plt>
  4071e8:	str	x0, [x19]
  4071ec:	ldr	x19, [sp, #16]
  4071f0:	cmp	x0, #0x0
  4071f4:	mov	w8, #0xffffffea            	// #-22
  4071f8:	csel	w8, wzr, w8, eq  // eq = none
  4071fc:	mov	w0, w8
  407200:	ldp	x29, x30, [sp], #32
  407204:	ret
  407208:	cbz	x0, 407240 <scols_reset_iter@plt+0x4950>
  40720c:	stp	x29, x30, [sp, #-32]!
  407210:	stp	x20, x19, [sp, #16]
  407214:	mov	x19, x0
  407218:	ldr	x0, [x0]
  40721c:	mov	x29, sp
  407220:	cbz	x0, 407234 <scols_reset_iter@plt+0x4944>
  407224:	add	x20, x19, #0x8
  407228:	bl	4026b0 <free@plt>
  40722c:	ldr	x0, [x20], #8
  407230:	cbnz	x0, 407228 <scols_reset_iter@plt+0x4938>
  407234:	str	xzr, [x19]
  407238:	ldp	x20, x19, [sp, #16]
  40723c:	ldp	x29, x30, [sp], #32
  407240:	ret
  407244:	stp	x29, x30, [sp, #-32]!
  407248:	stp	x20, x19, [sp, #16]
  40724c:	mov	x19, x0
  407250:	mov	x29, sp
  407254:	cbz	x0, 407270 <scols_reset_iter@plt+0x4980>
  407258:	ldr	x0, [x19]
  40725c:	cbz	x0, 407270 <scols_reset_iter@plt+0x4980>
  407260:	add	x20, x19, #0x8
  407264:	bl	4026b0 <free@plt>
  407268:	ldr	x0, [x20], #8
  40726c:	cbnz	x0, 407264 <scols_reset_iter@plt+0x4974>
  407270:	mov	x0, x19
  407274:	bl	4026b0 <free@plt>
  407278:	ldp	x20, x19, [sp, #16]
  40727c:	mov	x0, xzr
  407280:	ldp	x29, x30, [sp], #32
  407284:	ret
  407288:	stp	x29, x30, [sp, #-48]!
  40728c:	stp	x20, x19, [sp, #32]
  407290:	mov	x20, x0
  407294:	str	x21, [sp, #16]
  407298:	mov	x29, sp
  40729c:	cbz	x0, 4072d0 <scols_reset_iter@plt+0x49e0>
  4072a0:	ldr	x8, [x20]
  4072a4:	cbz	x8, 4072d0 <scols_reset_iter@plt+0x49e0>
  4072a8:	mov	w8, #0x1                   	// #1
  4072ac:	ldr	x9, [x20, x8, lsl #3]
  4072b0:	add	x8, x8, #0x1
  4072b4:	cbnz	x9, 4072ac <scols_reset_iter@plt+0x49bc>
  4072b8:	and	x8, x8, #0xffffffff
  4072bc:	lsl	x0, x8, #3
  4072c0:	bl	402470 <malloc@plt>
  4072c4:	mov	x19, x0
  4072c8:	cbnz	x0, 4072e0 <scols_reset_iter@plt+0x49f0>
  4072cc:	b	40731c <scols_reset_iter@plt+0x4a2c>
  4072d0:	mov	w0, #0x8                   	// #8
  4072d4:	bl	402470 <malloc@plt>
  4072d8:	mov	x19, x0
  4072dc:	cbz	x0, 40731c <scols_reset_iter@plt+0x4a2c>
  4072e0:	cbz	x20, 407314 <scols_reset_iter@plt+0x4a24>
  4072e4:	ldr	x0, [x20]
  4072e8:	cbz	x0, 407314 <scols_reset_iter@plt+0x4a24>
  4072ec:	mov	x21, xzr
  4072f0:	add	x20, x20, #0x8
  4072f4:	bl	402570 <strdup@plt>
  4072f8:	str	x0, [x19, x21]
  4072fc:	cbz	x0, 407330 <scols_reset_iter@plt+0x4a40>
  407300:	ldr	x0, [x20, x21]
  407304:	add	x21, x21, #0x8
  407308:	cbnz	x0, 4072f4 <scols_reset_iter@plt+0x4a04>
  40730c:	add	x8, x19, x21
  407310:	b	407318 <scols_reset_iter@plt+0x4a28>
  407314:	mov	x8, x19
  407318:	str	xzr, [x8]
  40731c:	mov	x0, x19
  407320:	ldp	x20, x19, [sp, #32]
  407324:	ldr	x21, [sp, #16]
  407328:	ldp	x29, x30, [sp], #48
  40732c:	ret
  407330:	ldr	x0, [x19]
  407334:	cbz	x0, 407348 <scols_reset_iter@plt+0x4a58>
  407338:	add	x20, x19, #0x8
  40733c:	bl	4026b0 <free@plt>
  407340:	ldr	x0, [x20], #8
  407344:	cbnz	x0, 40733c <scols_reset_iter@plt+0x4a4c>
  407348:	mov	x0, x19
  40734c:	bl	4026b0 <free@plt>
  407350:	mov	x19, xzr
  407354:	b	40731c <scols_reset_iter@plt+0x4a2c>
  407358:	cbz	x0, 40737c <scols_reset_iter@plt+0x4a8c>
  40735c:	ldr	x9, [x0]
  407360:	mov	x8, x0
  407364:	cbz	x9, 407380 <scols_reset_iter@plt+0x4a90>
  407368:	mov	x0, xzr
  40736c:	add	x8, x8, #0x8
  407370:	ldr	x9, [x8, x0, lsl #3]
  407374:	add	x0, x0, #0x1
  407378:	cbnz	x9, 407370 <scols_reset_iter@plt+0x4a80>
  40737c:	ret
  407380:	mov	w0, wzr
  407384:	ret
  407388:	sub	sp, sp, #0x50
  40738c:	str	x21, [sp, #48]
  407390:	stp	x20, x19, [sp, #64]
  407394:	mov	x19, x1
  407398:	mov	x21, x0
  40739c:	stp	x29, x30, [sp, #32]
  4073a0:	add	x29, sp, #0x20
  4073a4:	cbz	x0, 407418 <scols_reset_iter@plt+0x4b28>
  4073a8:	ldp	q0, q1, [x19]
  4073ac:	cmn	x21, #0x1
  4073b0:	cset	w8, ne  // ne = any
  4073b4:	stp	q0, q1, [sp]
  4073b8:	ldr	x9, [sp, #8]
  4073bc:	ldr	w10, [sp, #24]
  4073c0:	mov	w11, w10
  4073c4:	b	4073e4 <scols_reset_iter@plt+0x4af4>
  4073c8:	mov	w11, w10
  4073cc:	ldr	x12, [sp]
  4073d0:	add	x13, x12, #0x8
  4073d4:	str	x13, [sp]
  4073d8:	ldr	x12, [x12]
  4073dc:	cmn	x12, #0x1
  4073e0:	b.ne	40740c <scols_reset_iter@plt+0x4b1c>  // b.any
  4073e4:	tbz	w11, #31, 4073cc <scols_reset_iter@plt+0x4adc>
  4073e8:	add	w10, w11, #0x8
  4073ec:	cmn	w11, #0x8
  4073f0:	str	w10, [sp, #24]
  4073f4:	b.gt	4073c8 <scols_reset_iter@plt+0x4ad8>
  4073f8:	add	x12, x9, w11, sxtw
  4073fc:	mov	w11, w10
  407400:	ldr	x12, [x12]
  407404:	cmn	x12, #0x1
  407408:	b.eq	4073e4 <scols_reset_iter@plt+0x4af4>  // b.none
  40740c:	cbz	x12, 40741c <scols_reset_iter@plt+0x4b2c>
  407410:	add	w8, w8, #0x1
  407414:	b	4073c0 <scols_reset_iter@plt+0x4ad0>
  407418:	mov	w8, wzr
  40741c:	add	w8, w8, #0x1
  407420:	lsl	x0, x8, #3
  407424:	bl	402470 <malloc@plt>
  407428:	mov	x20, x0
  40742c:	cbz	x0, 4074cc <scols_reset_iter@plt+0x4bdc>
  407430:	cbz	x21, 4074c8 <scols_reset_iter@plt+0x4bd8>
  407434:	cmn	x21, #0x1
  407438:	b.eq	407454 <scols_reset_iter@plt+0x4b64>  // b.none
  40743c:	mov	x0, x21
  407440:	bl	402570 <strdup@plt>
  407444:	str	x0, [x20]
  407448:	cbz	x0, 4074fc <scols_reset_iter@plt+0x4c0c>
  40744c:	mov	w21, #0x1                   	// #1
  407450:	b	40746c <scols_reset_iter@plt+0x4b7c>
  407454:	mov	w21, wzr
  407458:	b	40746c <scols_reset_iter@plt+0x4b7c>
  40745c:	bl	402570 <strdup@plt>
  407460:	str	x0, [x20, w21, uxtw #3]
  407464:	cbz	x0, 4074e4 <scols_reset_iter@plt+0x4bf4>
  407468:	add	w21, w21, #0x1
  40746c:	ldr	w9, [x19, #24]
  407470:	b	40748c <scols_reset_iter@plt+0x4b9c>
  407474:	ldr	x10, [x19, #8]
  407478:	add	x9, x10, w9, sxtw
  40747c:	ldr	x0, [x9]
  407480:	mov	w9, w8
  407484:	cmn	x0, #0x1
  407488:	b.ne	4074c4 <scols_reset_iter@plt+0x4bd4>  // b.any
  40748c:	tbnz	w9, #31, 407498 <scols_reset_iter@plt+0x4ba8>
  407490:	mov	w8, w9
  407494:	b	4074a8 <scols_reset_iter@plt+0x4bb8>
  407498:	add	w8, w9, #0x8
  40749c:	cmn	w9, #0x8
  4074a0:	str	w8, [x19, #24]
  4074a4:	b.le	407474 <scols_reset_iter@plt+0x4b84>
  4074a8:	ldr	x9, [x19]
  4074ac:	add	x10, x9, #0x8
  4074b0:	str	x10, [x19]
  4074b4:	ldr	x0, [x9]
  4074b8:	mov	w9, w8
  4074bc:	cmn	x0, #0x1
  4074c0:	b.eq	40748c <scols_reset_iter@plt+0x4b9c>  // b.none
  4074c4:	cbnz	x0, 40745c <scols_reset_iter@plt+0x4b6c>
  4074c8:	str	xzr, [x20, w21, uxtw #3]
  4074cc:	mov	x0, x20
  4074d0:	ldp	x20, x19, [sp, #64]
  4074d4:	ldr	x21, [sp, #48]
  4074d8:	ldp	x29, x30, [sp, #32]
  4074dc:	add	sp, sp, #0x50
  4074e0:	ret
  4074e4:	ldr	x0, [x20]
  4074e8:	cbz	x0, 4074fc <scols_reset_iter@plt+0x4c0c>
  4074ec:	add	x19, x20, #0x8
  4074f0:	bl	4026b0 <free@plt>
  4074f4:	ldr	x0, [x19], #8
  4074f8:	cbnz	x0, 4074f0 <scols_reset_iter@plt+0x4c00>
  4074fc:	mov	x0, x20
  407500:	bl	4026b0 <free@plt>
  407504:	mov	x20, xzr
  407508:	b	4074cc <scols_reset_iter@plt+0x4bdc>
  40750c:	sub	sp, sp, #0x120
  407510:	stp	x29, x30, [sp, #256]
  407514:	add	x29, sp, #0x100
  407518:	mov	x8, #0xffffffffffffffc8    	// #-56
  40751c:	mov	x9, sp
  407520:	sub	x10, x29, #0x78
  407524:	movk	x8, #0xff80, lsl #32
  407528:	add	x11, x29, #0x20
  40752c:	add	x9, x9, #0x80
  407530:	add	x10, x10, #0x38
  407534:	stp	x9, x8, [x29, #-16]
  407538:	stp	x11, x10, [x29, #-32]
  40753c:	stp	x1, x2, [x29, #-120]
  407540:	stp	x3, x4, [x29, #-104]
  407544:	stp	x5, x6, [x29, #-88]
  407548:	stur	x7, [x29, #-72]
  40754c:	stp	q0, q1, [sp]
  407550:	ldp	q0, q1, [x29, #-32]
  407554:	sub	x1, x29, #0x40
  407558:	str	x28, [sp, #272]
  40755c:	stp	q2, q3, [sp, #32]
  407560:	stp	q4, q5, [sp, #64]
  407564:	stp	q6, q7, [sp, #96]
  407568:	stp	q0, q1, [x29, #-64]
  40756c:	bl	407388 <scols_reset_iter@plt+0x4a98>
  407570:	ldr	x28, [sp, #272]
  407574:	ldp	x29, x30, [sp, #256]
  407578:	add	sp, sp, #0x120
  40757c:	ret
  407580:	stp	x29, x30, [sp, #-48]!
  407584:	stp	x22, x21, [sp, #16]
  407588:	stp	x20, x19, [sp, #32]
  40758c:	mov	x29, sp
  407590:	cbz	x1, 407640 <scols_reset_iter@plt+0x4d50>
  407594:	mov	x20, x0
  407598:	ldr	x0, [x1]
  40759c:	mov	x19, x1
  4075a0:	cbz	x0, 407630 <scols_reset_iter@plt+0x4d40>
  4075a4:	bl	402570 <strdup@plt>
  4075a8:	cbz	x0, 407654 <scols_reset_iter@plt+0x4d64>
  4075ac:	mov	x21, x0
  4075b0:	ldr	x0, [x20]
  4075b4:	cbz	x0, 4075e0 <scols_reset_iter@plt+0x4cf0>
  4075b8:	ldr	x8, [x0]
  4075bc:	cbz	x8, 407610 <scols_reset_iter@plt+0x4d20>
  4075c0:	mov	x22, xzr
  4075c4:	add	x8, x0, #0x8
  4075c8:	ldr	x9, [x8, x22, lsl #3]
  4075cc:	add	x22, x22, #0x1
  4075d0:	cbnz	x9, 4075c8 <scols_reset_iter@plt+0x4cd8>
  4075d4:	cmn	w22, #0x3
  4075d8:	b.ls	4075e4 <scols_reset_iter@plt+0x4cf4>  // b.plast
  4075dc:	b	407624 <scols_reset_iter@plt+0x4d34>
  4075e0:	mov	w22, wzr
  4075e4:	add	w8, w22, #0x2
  4075e8:	lsl	x1, x8, #3
  4075ec:	bl	402560 <realloc@plt>
  4075f0:	cbz	x0, 407624 <scols_reset_iter@plt+0x4d34>
  4075f4:	add	w8, w22, #0x1
  4075f8:	str	x21, [x0, w22, uxtw #3]
  4075fc:	str	xzr, [x0, w8, uxtw #3]
  407600:	str	x0, [x20]
  407604:	ldr	x0, [x19, #8]!
  407608:	cbnz	x0, 4075a4 <scols_reset_iter@plt+0x4cb4>
  40760c:	b	407630 <scols_reset_iter@plt+0x4d40>
  407610:	mov	w22, wzr
  407614:	add	w8, w22, #0x2
  407618:	lsl	x1, x8, #3
  40761c:	bl	402560 <realloc@plt>
  407620:	cbnz	x0, 4075f4 <scols_reset_iter@plt+0x4d04>
  407624:	mov	x0, x21
  407628:	bl	4026b0 <free@plt>
  40762c:	mov	w0, #0xfffffff4            	// #-12
  407630:	ldp	x20, x19, [sp, #32]
  407634:	ldp	x22, x21, [sp, #16]
  407638:	ldp	x29, x30, [sp], #48
  40763c:	ret
  407640:	mov	w0, wzr
  407644:	ldp	x20, x19, [sp, #32]
  407648:	ldp	x22, x21, [sp, #16]
  40764c:	ldp	x29, x30, [sp], #48
  407650:	ret
  407654:	mov	w0, #0xfffffff4            	// #-12
  407658:	ldp	x20, x19, [sp, #32]
  40765c:	ldp	x22, x21, [sp, #16]
  407660:	ldp	x29, x30, [sp], #48
  407664:	ret
  407668:	stp	x29, x30, [sp, #-48]!
  40766c:	str	x21, [sp, #16]
  407670:	stp	x20, x19, [sp, #32]
  407674:	mov	x29, sp
  407678:	cbz	x1, 4076c0 <scols_reset_iter@plt+0x4dd0>
  40767c:	mov	x19, x0
  407680:	mov	x0, x1
  407684:	bl	402570 <strdup@plt>
  407688:	cbz	x0, 40772c <scols_reset_iter@plt+0x4e3c>
  40768c:	mov	x20, x0
  407690:	ldr	x0, [x19]
  407694:	cbz	x0, 4076d4 <scols_reset_iter@plt+0x4de4>
  407698:	ldr	x8, [x0]
  40769c:	cbz	x8, 407710 <scols_reset_iter@plt+0x4e20>
  4076a0:	mov	x21, xzr
  4076a4:	add	x8, x0, #0x8
  4076a8:	ldr	x9, [x8, x21, lsl #3]
  4076ac:	add	x21, x21, #0x1
  4076b0:	cbnz	x9, 4076a8 <scols_reset_iter@plt+0x4db8>
  4076b4:	cmn	w21, #0x3
  4076b8:	b.ls	4076d8 <scols_reset_iter@plt+0x4de8>  // b.plast
  4076bc:	b	407724 <scols_reset_iter@plt+0x4e34>
  4076c0:	mov	w0, wzr
  4076c4:	ldp	x20, x19, [sp, #32]
  4076c8:	ldr	x21, [sp, #16]
  4076cc:	ldp	x29, x30, [sp], #48
  4076d0:	ret
  4076d4:	mov	w21, wzr
  4076d8:	add	w8, w21, #0x2
  4076dc:	lsl	x1, x8, #3
  4076e0:	bl	402560 <realloc@plt>
  4076e4:	cbz	x0, 407724 <scols_reset_iter@plt+0x4e34>
  4076e8:	mov	x8, x0
  4076ec:	add	w9, w21, #0x1
  4076f0:	mov	w0, wzr
  4076f4:	str	x20, [x8, w21, uxtw #3]
  4076f8:	str	xzr, [x8, w9, uxtw #3]
  4076fc:	str	x8, [x19]
  407700:	ldp	x20, x19, [sp, #32]
  407704:	ldr	x21, [sp, #16]
  407708:	ldp	x29, x30, [sp], #48
  40770c:	ret
  407710:	mov	w21, wzr
  407714:	add	w8, w21, #0x2
  407718:	lsl	x1, x8, #3
  40771c:	bl	402560 <realloc@plt>
  407720:	cbnz	x0, 4076e8 <scols_reset_iter@plt+0x4df8>
  407724:	mov	x0, x20
  407728:	bl	4026b0 <free@plt>
  40772c:	mov	w0, #0xfffffff4            	// #-12
  407730:	ldp	x20, x19, [sp, #32]
  407734:	ldr	x21, [sp, #16]
  407738:	ldp	x29, x30, [sp], #48
  40773c:	ret
  407740:	stp	x29, x30, [sp, #-64]!
  407744:	str	x23, [sp, #16]
  407748:	stp	x22, x21, [sp, #32]
  40774c:	stp	x20, x19, [sp, #48]
  407750:	mov	x29, sp
  407754:	cbz	x1, 407804 <scols_reset_iter@plt+0x4f14>
  407758:	mov	x21, x0
  40775c:	ldr	x0, [x1]
  407760:	mov	x20, x1
  407764:	cbz	x0, 407818 <scols_reset_iter@plt+0x4f28>
  407768:	mov	x19, x2
  40776c:	mov	x1, x19
  407770:	bl	406a34 <scols_reset_iter@plt+0x4144>
  407774:	cbz	x0, 407814 <scols_reset_iter@plt+0x4f24>
  407778:	mov	x22, x0
  40777c:	ldr	x0, [x21]
  407780:	cbz	x0, 4077bc <scols_reset_iter@plt+0x4ecc>
  407784:	ldr	x8, [x0]
  407788:	cbz	x8, 4077d4 <scols_reset_iter@plt+0x4ee4>
  40778c:	mov	x23, xzr
  407790:	add	x8, x0, #0x8
  407794:	ldr	x9, [x8, x23, lsl #3]
  407798:	add	x23, x23, #0x1
  40779c:	cbnz	x9, 407794 <scols_reset_iter@plt+0x4ea4>
  4077a0:	cmn	w23, #0x3
  4077a4:	b.hi	40780c <scols_reset_iter@plt+0x4f1c>  // b.pmore
  4077a8:	add	w8, w23, #0x2
  4077ac:	lsl	x1, x8, #3
  4077b0:	bl	402560 <realloc@plt>
  4077b4:	cbnz	x0, 4077e8 <scols_reset_iter@plt+0x4ef8>
  4077b8:	b	40780c <scols_reset_iter@plt+0x4f1c>
  4077bc:	mov	w23, wzr
  4077c0:	add	w8, w23, #0x2
  4077c4:	lsl	x1, x8, #3
  4077c8:	bl	402560 <realloc@plt>
  4077cc:	cbnz	x0, 4077e8 <scols_reset_iter@plt+0x4ef8>
  4077d0:	b	40780c <scols_reset_iter@plt+0x4f1c>
  4077d4:	mov	w23, wzr
  4077d8:	add	w8, w23, #0x2
  4077dc:	lsl	x1, x8, #3
  4077e0:	bl	402560 <realloc@plt>
  4077e4:	cbz	x0, 40780c <scols_reset_iter@plt+0x4f1c>
  4077e8:	add	w8, w23, #0x1
  4077ec:	str	x22, [x0, w23, uxtw #3]
  4077f0:	str	xzr, [x0, w8, uxtw #3]
  4077f4:	str	x0, [x21]
  4077f8:	ldr	x0, [x20, #8]!
  4077fc:	cbnz	x0, 40776c <scols_reset_iter@plt+0x4e7c>
  407800:	b	407818 <scols_reset_iter@plt+0x4f28>
  407804:	mov	w0, wzr
  407808:	b	407818 <scols_reset_iter@plt+0x4f28>
  40780c:	mov	x0, x22
  407810:	bl	4026b0 <free@plt>
  407814:	mov	w0, #0xfffffff4            	// #-12
  407818:	ldp	x20, x19, [sp, #48]
  40781c:	ldp	x22, x21, [sp, #32]
  407820:	ldr	x23, [sp, #16]
  407824:	ldp	x29, x30, [sp], #64
  407828:	ret
  40782c:	stp	x29, x30, [sp, #-48]!
  407830:	str	x21, [sp, #16]
  407834:	stp	x20, x19, [sp, #32]
  407838:	mov	x29, sp
  40783c:	cbz	x1, 4078ac <scols_reset_iter@plt+0x4fbc>
  407840:	mov	x19, x0
  407844:	ldr	x0, [x0]
  407848:	mov	x20, x1
  40784c:	cbz	x0, 4078c0 <scols_reset_iter@plt+0x4fd0>
  407850:	ldr	x8, [x0]
  407854:	cbz	x8, 4078c0 <scols_reset_iter@plt+0x4fd0>
  407858:	mov	x21, xzr
  40785c:	add	x8, x0, #0x8
  407860:	ldr	x9, [x8, x21, lsl #3]
  407864:	add	x21, x21, #0x1
  407868:	cbnz	x9, 407860 <scols_reset_iter@plt+0x4f70>
  40786c:	cmn	w21, #0x3
  407870:	b.hi	4078d4 <scols_reset_iter@plt+0x4fe4>  // b.pmore
  407874:	add	w8, w21, #0x2
  407878:	lsl	x1, x8, #3
  40787c:	bl	402560 <realloc@plt>
  407880:	cbz	x0, 4078d4 <scols_reset_iter@plt+0x4fe4>
  407884:	mov	x8, x0
  407888:	mov	w0, wzr
  40788c:	add	w9, w21, #0x1
  407890:	str	x20, [x8, w21, uxtw #3]
  407894:	str	xzr, [x8, w9, uxtw #3]
  407898:	str	x8, [x19]
  40789c:	ldp	x20, x19, [sp, #32]
  4078a0:	ldr	x21, [sp, #16]
  4078a4:	ldp	x29, x30, [sp], #48
  4078a8:	ret
  4078ac:	mov	w0, wzr
  4078b0:	ldp	x20, x19, [sp, #32]
  4078b4:	ldr	x21, [sp, #16]
  4078b8:	ldp	x29, x30, [sp], #48
  4078bc:	ret
  4078c0:	mov	w21, wzr
  4078c4:	add	w8, w21, #0x2
  4078c8:	lsl	x1, x8, #3
  4078cc:	bl	402560 <realloc@plt>
  4078d0:	cbnz	x0, 407884 <scols_reset_iter@plt+0x4f94>
  4078d4:	mov	w0, #0xfffffff4            	// #-12
  4078d8:	ldp	x20, x19, [sp, #32]
  4078dc:	ldr	x21, [sp, #16]
  4078e0:	ldp	x29, x30, [sp], #48
  4078e4:	ret
  4078e8:	sub	sp, sp, #0x40
  4078ec:	stp	x29, x30, [sp, #16]
  4078f0:	str	x21, [sp, #32]
  4078f4:	stp	x20, x19, [sp, #48]
  4078f8:	add	x29, sp, #0x10
  4078fc:	cbz	x0, 407a08 <scols_reset_iter@plt+0x5118>
  407900:	mov	x19, x1
  407904:	mov	x21, x0
  407908:	str	x0, [x29, #24]
  40790c:	add	x0, x29, #0x18
  407910:	add	x1, sp, #0x8
  407914:	mov	x2, x19
  407918:	mov	w3, wzr
  40791c:	bl	406c64 <scols_reset_iter@plt+0x4374>
  407920:	cbz	x0, 40795c <scols_reset_iter@plt+0x506c>
  407924:	mov	w20, #0x1                   	// #1
  407928:	add	x0, x29, #0x18
  40792c:	add	x1, sp, #0x8
  407930:	mov	x2, x19
  407934:	mov	w3, wzr
  407938:	bl	406c64 <scols_reset_iter@plt+0x4374>
  40793c:	add	w20, w20, #0x1
  407940:	cbnz	x0, 407928 <scols_reset_iter@plt+0x5038>
  407944:	mov	w8, w20
  407948:	lsl	x0, x8, #3
  40794c:	bl	402470 <malloc@plt>
  407950:	mov	x20, x0
  407954:	cbnz	x0, 40796c <scols_reset_iter@plt+0x507c>
  407958:	b	4079f0 <scols_reset_iter@plt+0x5100>
  40795c:	mov	w0, #0x8                   	// #8
  407960:	bl	402470 <malloc@plt>
  407964:	mov	x20, x0
  407968:	cbz	x0, 4079f0 <scols_reset_iter@plt+0x5100>
  40796c:	add	x0, x29, #0x18
  407970:	add	x1, sp, #0x8
  407974:	mov	x2, x19
  407978:	mov	w3, wzr
  40797c:	str	x21, [x29, #24]
  407980:	bl	406c64 <scols_reset_iter@plt+0x4374>
  407984:	cbz	x0, 4079c0 <scols_reset_iter@plt+0x50d0>
  407988:	mov	w21, wzr
  40798c:	ldr	x1, [sp, #8]
  407990:	bl	402730 <strndup@plt>
  407994:	str	x0, [x20, w21, uxtw #3]
  407998:	cbz	x0, 4079cc <scols_reset_iter@plt+0x50dc>
  40799c:	add	x0, x29, #0x18
  4079a0:	add	x1, sp, #0x8
  4079a4:	mov	x2, x19
  4079a8:	mov	w3, wzr
  4079ac:	add	w21, w21, #0x1
  4079b0:	bl	406c64 <scols_reset_iter@plt+0x4374>
  4079b4:	cbnz	x0, 40798c <scols_reset_iter@plt+0x509c>
  4079b8:	mov	w8, w21
  4079bc:	b	4079c4 <scols_reset_iter@plt+0x50d4>
  4079c0:	mov	x8, xzr
  4079c4:	str	xzr, [x20, x8, lsl #3]
  4079c8:	b	4079f0 <scols_reset_iter@plt+0x5100>
  4079cc:	ldr	x0, [x20]
  4079d0:	cbz	x0, 4079e4 <scols_reset_iter@plt+0x50f4>
  4079d4:	add	x19, x20, #0x8
  4079d8:	bl	4026b0 <free@plt>
  4079dc:	ldr	x0, [x19], #8
  4079e0:	cbnz	x0, 4079d8 <scols_reset_iter@plt+0x50e8>
  4079e4:	mov	x0, x20
  4079e8:	bl	4026b0 <free@plt>
  4079ec:	mov	x20, xzr
  4079f0:	mov	x0, x20
  4079f4:	ldp	x20, x19, [sp, #48]
  4079f8:	ldr	x21, [sp, #32]
  4079fc:	ldp	x29, x30, [sp, #16]
  407a00:	add	sp, sp, #0x40
  407a04:	ret
  407a08:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  407a0c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  407a10:	adrp	x3, 409000 <scols_reset_iter@plt+0x6710>
  407a14:	add	x0, x0, #0x97e
  407a18:	add	x1, x1, #0x1fa
  407a1c:	add	x3, x3, #0x205
  407a20:	mov	w2, #0xc1                  	// #193
  407a24:	bl	402840 <__assert_fail@plt>
  407a28:	stp	x29, x30, [sp, #-64]!
  407a2c:	adrp	x8, 408000 <scols_reset_iter@plt+0x5710>
  407a30:	add	x8, x8, #0x7f6
  407a34:	cmp	x1, #0x0
  407a38:	stp	x20, x19, [sp, #48]
  407a3c:	csel	x19, x8, x1, eq  // eq = none
  407a40:	mov	x20, x0
  407a44:	mov	x0, x19
  407a48:	str	x23, [sp, #16]
  407a4c:	stp	x22, x21, [sp, #32]
  407a50:	mov	x29, sp
  407a54:	bl	4022d0 <strlen@plt>
  407a58:	cbz	x20, 407aa4 <scols_reset_iter@plt+0x51b4>
  407a5c:	ldr	x8, [x20]
  407a60:	cbz	x8, 407aa4 <scols_reset_iter@plt+0x51b4>
  407a64:	mov	x21, x0
  407a68:	mov	x9, xzr
  407a6c:	add	x22, x20, #0x8
  407a70:	add	x10, x9, x21
  407a74:	cmp	x9, #0x0
  407a78:	mov	x0, x8
  407a7c:	csel	x23, xzr, x10, eq  // eq = none
  407a80:	bl	4022d0 <strlen@plt>
  407a84:	ldr	x8, [x22], #8
  407a88:	add	x9, x0, x23
  407a8c:	cbnz	x8, 407a70 <scols_reset_iter@plt+0x5180>
  407a90:	add	x0, x9, #0x1
  407a94:	bl	402470 <malloc@plt>
  407a98:	mov	x21, x0
  407a9c:	cbnz	x0, 407ab4 <scols_reset_iter@plt+0x51c4>
  407aa0:	b	407b08 <scols_reset_iter@plt+0x5218>
  407aa4:	mov	w0, #0x1                   	// #1
  407aa8:	bl	402470 <malloc@plt>
  407aac:	mov	x21, x0
  407ab0:	cbz	x0, 407b08 <scols_reset_iter@plt+0x5218>
  407ab4:	mov	x0, x21
  407ab8:	cbz	x20, 407b04 <scols_reset_iter@plt+0x5214>
  407abc:	ldr	x1, [x20]
  407ac0:	mov	x0, x21
  407ac4:	cbz	x1, 407b04 <scols_reset_iter@plt+0x5214>
  407ac8:	add	x20, x20, #0x8
  407acc:	mov	x0, x21
  407ad0:	b	407ae4 <scols_reset_iter@plt+0x51f4>
  407ad4:	mov	x0, x2
  407ad8:	bl	402420 <stpcpy@plt>
  407adc:	ldr	x1, [x20], #8
  407ae0:	cbz	x1, 407b04 <scols_reset_iter@plt+0x5214>
  407ae4:	cmp	x0, x21
  407ae8:	mov	x2, x21
  407aec:	b.eq	407ad4 <scols_reset_iter@plt+0x51e4>  // b.none
  407af0:	mov	x1, x19
  407af4:	bl	402420 <stpcpy@plt>
  407af8:	ldur	x1, [x20, #-8]
  407afc:	mov	x2, x0
  407b00:	b	407ad4 <scols_reset_iter@plt+0x51e4>
  407b04:	strb	wzr, [x0]
  407b08:	mov	x0, x21
  407b0c:	ldp	x20, x19, [sp, #48]
  407b10:	ldp	x22, x21, [sp, #32]
  407b14:	ldr	x23, [sp, #16]
  407b18:	ldp	x29, x30, [sp], #64
  407b1c:	ret
  407b20:	stp	x29, x30, [sp, #-64]!
  407b24:	str	x23, [sp, #16]
  407b28:	stp	x22, x21, [sp, #32]
  407b2c:	stp	x20, x19, [sp, #48]
  407b30:	mov	x29, sp
  407b34:	cbz	x1, 407c18 <scols_reset_iter@plt+0x5328>
  407b38:	ldr	x20, [x0]
  407b3c:	mov	x21, x1
  407b40:	mov	x19, x0
  407b44:	cbz	x20, 407bfc <scols_reset_iter@plt+0x530c>
  407b48:	ldr	x8, [x20]
  407b4c:	cbz	x8, 407bfc <scols_reset_iter@plt+0x530c>
  407b50:	mov	x23, xzr
  407b54:	add	x8, x20, #0x8
  407b58:	ldr	x9, [x8, x23, lsl #3]
  407b5c:	add	x23, x23, #0x1
  407b60:	cbnz	x9, 407b58 <scols_reset_iter@plt+0x5268>
  407b64:	cmn	w23, #0x3
  407b68:	b.hi	407c10 <scols_reset_iter@plt+0x5320>  // b.pmore
  407b6c:	add	w8, w23, #0x2
  407b70:	lsl	x0, x8, #3
  407b74:	bl	402470 <malloc@plt>
  407b78:	cbz	x0, 407c10 <scols_reset_iter@plt+0x5320>
  407b7c:	mov	x22, x0
  407b80:	cbz	w23, 407bdc <scols_reset_iter@plt+0x52ec>
  407b84:	cmp	w23, #0x4
  407b88:	mov	w8, w23
  407b8c:	b.cc	407bb4 <scols_reset_iter@plt+0x52c4>  // b.lo, b.ul, b.last
  407b90:	lsl	x9, x8, #3
  407b94:	add	x10, x22, #0x8
  407b98:	add	x11, x20, x9
  407b9c:	cmp	x10, x11
  407ba0:	b.cs	407c30 <scols_reset_iter@plt+0x5340>  // b.hs, b.nlast
  407ba4:	add	x9, x9, x22
  407ba8:	add	x9, x9, #0x8
  407bac:	cmp	x9, x20
  407bb0:	b.ls	407c30 <scols_reset_iter@plt+0x5340>  // b.plast
  407bb4:	mov	x9, xzr
  407bb8:	lsl	x10, x9, #3
  407bbc:	sub	x8, x8, x9
  407bc0:	add	x9, x20, x10
  407bc4:	add	x10, x10, x22
  407bc8:	add	x10, x10, #0x8
  407bcc:	ldr	x11, [x9], #8
  407bd0:	subs	x8, x8, #0x1
  407bd4:	str	x11, [x10], #8
  407bd8:	b.ne	407bcc <scols_reset_iter@plt+0x52dc>  // b.any
  407bdc:	add	w8, w23, #0x1
  407be0:	mov	x0, x20
  407be4:	str	x21, [x22]
  407be8:	str	xzr, [x22, w8, uxtw #3]
  407bec:	bl	4026b0 <free@plt>
  407bf0:	mov	w0, wzr
  407bf4:	str	x22, [x19]
  407bf8:	b	407c1c <scols_reset_iter@plt+0x532c>
  407bfc:	mov	w23, wzr
  407c00:	add	w8, w23, #0x2
  407c04:	lsl	x0, x8, #3
  407c08:	bl	402470 <malloc@plt>
  407c0c:	cbnz	x0, 407b7c <scols_reset_iter@plt+0x528c>
  407c10:	mov	w0, #0xfffffff4            	// #-12
  407c14:	b	407c1c <scols_reset_iter@plt+0x532c>
  407c18:	mov	w0, wzr
  407c1c:	ldp	x20, x19, [sp, #48]
  407c20:	ldp	x22, x21, [sp, #32]
  407c24:	ldr	x23, [sp, #16]
  407c28:	ldp	x29, x30, [sp], #64
  407c2c:	ret
  407c30:	and	x9, x8, #0xfffffffc
  407c34:	add	x10, x22, #0x18
  407c38:	add	x11, x20, #0x10
  407c3c:	mov	x12, x9
  407c40:	ldp	q0, q1, [x11, #-16]
  407c44:	subs	x12, x12, #0x4
  407c48:	add	x11, x11, #0x20
  407c4c:	stp	q0, q1, [x10, #-16]
  407c50:	add	x10, x10, #0x20
  407c54:	b.ne	407c40 <scols_reset_iter@plt+0x5350>  // b.any
  407c58:	cmp	x9, x8
  407c5c:	b.eq	407bdc <scols_reset_iter@plt+0x52ec>  // b.none
  407c60:	b	407bb8 <scols_reset_iter@plt+0x52c8>
  407c64:	stp	x29, x30, [sp, #-48]!
  407c68:	str	x21, [sp, #16]
  407c6c:	stp	x20, x19, [sp, #32]
  407c70:	mov	x29, sp
  407c74:	cbz	x1, 407cb0 <scols_reset_iter@plt+0x53c0>
  407c78:	mov	x19, x0
  407c7c:	ldr	x0, [x0]
  407c80:	mov	x20, x1
  407c84:	cbz	x0, 407cc4 <scols_reset_iter@plt+0x53d4>
  407c88:	ldr	x8, [x0]
  407c8c:	cbz	x8, 407d00 <scols_reset_iter@plt+0x5410>
  407c90:	mov	x21, xzr
  407c94:	add	x8, x0, #0x8
  407c98:	ldr	x9, [x8, x21, lsl #3]
  407c9c:	add	x21, x21, #0x1
  407ca0:	cbnz	x9, 407c98 <scols_reset_iter@plt+0x53a8>
  407ca4:	cmn	w21, #0x3
  407ca8:	b.ls	407cc8 <scols_reset_iter@plt+0x53d8>  // b.plast
  407cac:	b	407d14 <scols_reset_iter@plt+0x5424>
  407cb0:	mov	w0, wzr
  407cb4:	ldp	x20, x19, [sp, #32]
  407cb8:	ldr	x21, [sp, #16]
  407cbc:	ldp	x29, x30, [sp], #48
  407cc0:	ret
  407cc4:	mov	w21, wzr
  407cc8:	add	w8, w21, #0x2
  407ccc:	lsl	x1, x8, #3
  407cd0:	bl	402560 <realloc@plt>
  407cd4:	cbz	x0, 407d14 <scols_reset_iter@plt+0x5424>
  407cd8:	mov	x8, x0
  407cdc:	add	w9, w21, #0x1
  407ce0:	mov	w0, wzr
  407ce4:	str	x20, [x8, w21, uxtw #3]
  407ce8:	str	xzr, [x8, w9, uxtw #3]
  407cec:	str	x8, [x19]
  407cf0:	ldp	x20, x19, [sp, #32]
  407cf4:	ldr	x21, [sp, #16]
  407cf8:	ldp	x29, x30, [sp], #48
  407cfc:	ret
  407d00:	mov	w21, wzr
  407d04:	add	w8, w21, #0x2
  407d08:	lsl	x1, x8, #3
  407d0c:	bl	402560 <realloc@plt>
  407d10:	cbnz	x0, 407cd8 <scols_reset_iter@plt+0x53e8>
  407d14:	mov	x0, x20
  407d18:	bl	4026b0 <free@plt>
  407d1c:	mov	w0, #0xfffffff4            	// #-12
  407d20:	ldp	x20, x19, [sp, #32]
  407d24:	ldr	x21, [sp, #16]
  407d28:	ldp	x29, x30, [sp], #48
  407d2c:	ret
  407d30:	stp	x29, x30, [sp, #-64]!
  407d34:	str	x23, [sp, #16]
  407d38:	stp	x22, x21, [sp, #32]
  407d3c:	stp	x20, x19, [sp, #48]
  407d40:	mov	x29, sp
  407d44:	cbz	x1, 407e0c <scols_reset_iter@plt+0x551c>
  407d48:	ldr	x21, [x0]
  407d4c:	mov	x20, x1
  407d50:	mov	x19, x0
  407d54:	cbz	x21, 407e14 <scols_reset_iter@plt+0x5524>
  407d58:	ldr	x8, [x21]
  407d5c:	cbz	x8, 407e48 <scols_reset_iter@plt+0x5558>
  407d60:	mov	x23, xzr
  407d64:	add	x8, x21, #0x8
  407d68:	ldr	x9, [x8, x23, lsl #3]
  407d6c:	add	x23, x23, #0x1
  407d70:	cbnz	x9, 407d68 <scols_reset_iter@plt+0x5478>
  407d74:	cmn	w23, #0x3
  407d78:	b.hi	407e28 <scols_reset_iter@plt+0x5538>  // b.pmore
  407d7c:	add	w8, w23, #0x2
  407d80:	lsl	x0, x8, #3
  407d84:	bl	402470 <malloc@plt>
  407d88:	cbz	x0, 407e28 <scols_reset_iter@plt+0x5538>
  407d8c:	mov	x22, x0
  407d90:	cbz	w23, 407dec <scols_reset_iter@plt+0x54fc>
  407d94:	cmp	w23, #0x4
  407d98:	mov	w8, w23
  407d9c:	b.cc	407dc4 <scols_reset_iter@plt+0x54d4>  // b.lo, b.ul, b.last
  407da0:	lsl	x9, x8, #3
  407da4:	add	x10, x22, #0x8
  407da8:	add	x11, x21, x9
  407dac:	cmp	x10, x11
  407db0:	b.cs	407e60 <scols_reset_iter@plt+0x5570>  // b.hs, b.nlast
  407db4:	add	x9, x9, x22
  407db8:	add	x9, x9, #0x8
  407dbc:	cmp	x9, x21
  407dc0:	b.ls	407e60 <scols_reset_iter@plt+0x5570>  // b.plast
  407dc4:	mov	x9, xzr
  407dc8:	lsl	x10, x9, #3
  407dcc:	sub	x8, x8, x9
  407dd0:	add	x9, x10, x22
  407dd4:	add	x9, x9, #0x8
  407dd8:	add	x10, x21, x10
  407ddc:	ldr	x11, [x10], #8
  407de0:	subs	x8, x8, #0x1
  407de4:	str	x11, [x9], #8
  407de8:	b.ne	407ddc <scols_reset_iter@plt+0x54ec>  // b.any
  407dec:	add	w8, w23, #0x1
  407df0:	mov	x0, x21
  407df4:	str	x20, [x22]
  407df8:	str	xzr, [x22, w8, uxtw #3]
  407dfc:	bl	4026b0 <free@plt>
  407e00:	mov	w0, wzr
  407e04:	str	x22, [x19]
  407e08:	b	407e34 <scols_reset_iter@plt+0x5544>
  407e0c:	mov	w0, wzr
  407e10:	b	407e34 <scols_reset_iter@plt+0x5544>
  407e14:	mov	w23, wzr
  407e18:	add	w8, w23, #0x2
  407e1c:	lsl	x0, x8, #3
  407e20:	bl	402470 <malloc@plt>
  407e24:	cbnz	x0, 407d8c <scols_reset_iter@plt+0x549c>
  407e28:	mov	x0, x20
  407e2c:	bl	4026b0 <free@plt>
  407e30:	mov	w0, #0xfffffff4            	// #-12
  407e34:	ldp	x20, x19, [sp, #48]
  407e38:	ldp	x22, x21, [sp, #32]
  407e3c:	ldr	x23, [sp, #16]
  407e40:	ldp	x29, x30, [sp], #64
  407e44:	ret
  407e48:	mov	w23, wzr
  407e4c:	add	w8, w23, #0x2
  407e50:	lsl	x0, x8, #3
  407e54:	bl	402470 <malloc@plt>
  407e58:	cbnz	x0, 407d8c <scols_reset_iter@plt+0x549c>
  407e5c:	b	407e28 <scols_reset_iter@plt+0x5538>
  407e60:	and	x9, x8, #0xfffffffc
  407e64:	add	x10, x22, #0x18
  407e68:	add	x11, x21, #0x10
  407e6c:	mov	x12, x9
  407e70:	ldp	q0, q1, [x11, #-16]
  407e74:	subs	x12, x12, #0x4
  407e78:	add	x11, x11, #0x20
  407e7c:	stp	q0, q1, [x10, #-16]
  407e80:	add	x10, x10, #0x20
  407e84:	b.ne	407e70 <scols_reset_iter@plt+0x5580>  // b.any
  407e88:	cmp	x9, x8
  407e8c:	b.eq	407dec <scols_reset_iter@plt+0x54fc>  // b.none
  407e90:	b	407dc8 <scols_reset_iter@plt+0x54d8>
  407e94:	stp	x29, x30, [sp, #-64]!
  407e98:	stp	x20, x19, [sp, #48]
  407e9c:	mov	x19, x0
  407ea0:	str	x23, [sp, #16]
  407ea4:	stp	x22, x21, [sp, #32]
  407ea8:	mov	x29, sp
  407eac:	cbz	x0, 407f00 <scols_reset_iter@plt+0x5610>
  407eb0:	mov	x20, x1
  407eb4:	cbz	x1, 407f18 <scols_reset_iter@plt+0x5628>
  407eb8:	ldr	x21, [x19]
  407ebc:	mov	x22, x19
  407ec0:	cbz	x21, 407efc <scols_reset_iter@plt+0x560c>
  407ec4:	add	x23, x19, #0x8
  407ec8:	mov	x22, x19
  407ecc:	b	407edc <scols_reset_iter@plt+0x55ec>
  407ed0:	str	x21, [x22], #8
  407ed4:	ldr	x21, [x23], #8
  407ed8:	cbz	x21, 407efc <scols_reset_iter@plt+0x560c>
  407edc:	mov	x0, x21
  407ee0:	mov	x1, x20
  407ee4:	bl	402650 <strcmp@plt>
  407ee8:	cbnz	w0, 407ed0 <scols_reset_iter@plt+0x55e0>
  407eec:	mov	x0, x21
  407ef0:	bl	4026b0 <free@plt>
  407ef4:	ldr	x21, [x23], #8
  407ef8:	cbnz	x21, 407edc <scols_reset_iter@plt+0x55ec>
  407efc:	str	xzr, [x22]
  407f00:	mov	x0, x19
  407f04:	ldp	x20, x19, [sp, #48]
  407f08:	ldp	x22, x21, [sp, #32]
  407f0c:	ldr	x23, [sp, #16]
  407f10:	ldp	x29, x30, [sp], #64
  407f14:	ret
  407f18:	adrp	x0, 408000 <scols_reset_iter@plt+0x5710>
  407f1c:	adrp	x1, 409000 <scols_reset_iter@plt+0x6710>
  407f20:	adrp	x3, 409000 <scols_reset_iter@plt+0x6710>
  407f24:	add	x0, x0, #0x97e
  407f28:	add	x1, x1, #0x1fa
  407f2c:	add	x3, x3, #0x233
  407f30:	mov	w2, #0x15a                 	// #346
  407f34:	bl	402840 <__assert_fail@plt>
  407f38:	sub	sp, sp, #0x130
  407f3c:	stp	x29, x30, [sp, #256]
  407f40:	add	x29, sp, #0x100
  407f44:	add	x9, sp, #0x80
  407f48:	mov	x10, sp
  407f4c:	mov	x11, #0xffffffffffffffd0    	// #-48
  407f50:	add	x8, x29, #0x30
  407f54:	movk	x11, #0xff80, lsl #32
  407f58:	add	x9, x9, #0x30
  407f5c:	add	x10, x10, #0x80
  407f60:	stp	x8, x9, [x29, #-32]
  407f64:	stp	x10, x11, [x29, #-16]
  407f68:	stp	q1, q2, [sp, #16]
  407f6c:	str	q0, [sp]
  407f70:	ldp	q0, q1, [x29, #-32]
  407f74:	stp	x20, x19, [sp, #288]
  407f78:	mov	x19, x0
  407f7c:	stp	x2, x3, [sp, #128]
  407f80:	sub	x0, x29, #0x28
  407f84:	sub	x2, x29, #0x50
  407f88:	stp	x28, x21, [sp, #272]
  407f8c:	stp	x4, x5, [sp, #144]
  407f90:	stp	x6, x7, [sp, #160]
  407f94:	stp	q3, q4, [sp, #48]
  407f98:	stp	q5, q6, [sp, #80]
  407f9c:	str	q7, [sp, #112]
  407fa0:	stp	q0, q1, [x29, #-80]
  407fa4:	bl	402700 <vasprintf@plt>
  407fa8:	tbnz	w0, #31, 408038 <scols_reset_iter@plt+0x5748>
  407fac:	ldur	x20, [x29, #-40]
  407fb0:	cbz	x20, 407fe4 <scols_reset_iter@plt+0x56f4>
  407fb4:	ldr	x0, [x19]
  407fb8:	cbz	x0, 407fec <scols_reset_iter@plt+0x56fc>
  407fbc:	ldr	x8, [x0]
  407fc0:	cbz	x8, 40801c <scols_reset_iter@plt+0x572c>
  407fc4:	mov	x21, xzr
  407fc8:	add	x8, x0, #0x8
  407fcc:	ldr	x9, [x8, x21, lsl #3]
  407fd0:	add	x21, x21, #0x1
  407fd4:	cbnz	x9, 407fcc <scols_reset_iter@plt+0x56dc>
  407fd8:	cmn	w21, #0x3
  407fdc:	b.ls	407ff0 <scols_reset_iter@plt+0x5700>  // b.plast
  407fe0:	b	408030 <scols_reset_iter@plt+0x5740>
  407fe4:	mov	w0, wzr
  407fe8:	b	40803c <scols_reset_iter@plt+0x574c>
  407fec:	mov	w21, wzr
  407ff0:	add	w8, w21, #0x2
  407ff4:	lsl	x1, x8, #3
  407ff8:	bl	402560 <realloc@plt>
  407ffc:	cbz	x0, 408030 <scols_reset_iter@plt+0x5740>
  408000:	mov	x8, x0
  408004:	add	w9, w21, #0x1
  408008:	mov	w0, wzr
  40800c:	str	x20, [x8, w21, uxtw #3]
  408010:	str	xzr, [x8, w9, uxtw #3]
  408014:	str	x8, [x19]
  408018:	b	40803c <scols_reset_iter@plt+0x574c>
  40801c:	mov	w21, wzr
  408020:	add	w8, w21, #0x2
  408024:	lsl	x1, x8, #3
  408028:	bl	402560 <realloc@plt>
  40802c:	cbnz	x0, 408000 <scols_reset_iter@plt+0x5710>
  408030:	mov	x0, x20
  408034:	bl	4026b0 <free@plt>
  408038:	mov	w0, #0xfffffff4            	// #-12
  40803c:	ldp	x20, x19, [sp, #288]
  408040:	ldp	x28, x21, [sp, #272]
  408044:	ldp	x29, x30, [sp, #256]
  408048:	add	sp, sp, #0x130
  40804c:	ret
  408050:	sub	sp, sp, #0x50
  408054:	stp	x29, x30, [sp, #32]
  408058:	str	x21, [sp, #48]
  40805c:	stp	x20, x19, [sp, #64]
  408060:	ldp	q1, q0, [x2]
  408064:	add	x29, sp, #0x20
  408068:	mov	x19, x0
  40806c:	add	x0, x29, #0x18
  408070:	mov	x2, sp
  408074:	stp	q1, q0, [sp]
  408078:	bl	402700 <vasprintf@plt>
  40807c:	tbnz	w0, #31, 40810c <scols_reset_iter@plt+0x581c>
  408080:	ldr	x20, [x29, #24]
  408084:	cbz	x20, 4080b8 <scols_reset_iter@plt+0x57c8>
  408088:	ldr	x0, [x19]
  40808c:	cbz	x0, 4080c0 <scols_reset_iter@plt+0x57d0>
  408090:	ldr	x8, [x0]
  408094:	cbz	x8, 4080f0 <scols_reset_iter@plt+0x5800>
  408098:	mov	x21, xzr
  40809c:	add	x8, x0, #0x8
  4080a0:	ldr	x9, [x8, x21, lsl #3]
  4080a4:	add	x21, x21, #0x1
  4080a8:	cbnz	x9, 4080a0 <scols_reset_iter@plt+0x57b0>
  4080ac:	cmn	w21, #0x3
  4080b0:	b.ls	4080c4 <scols_reset_iter@plt+0x57d4>  // b.plast
  4080b4:	b	408104 <scols_reset_iter@plt+0x5814>
  4080b8:	mov	w0, wzr
  4080bc:	b	408110 <scols_reset_iter@plt+0x5820>
  4080c0:	mov	w21, wzr
  4080c4:	add	w8, w21, #0x2
  4080c8:	lsl	x1, x8, #3
  4080cc:	bl	402560 <realloc@plt>
  4080d0:	cbz	x0, 408104 <scols_reset_iter@plt+0x5814>
  4080d4:	mov	x8, x0
  4080d8:	add	w9, w21, #0x1
  4080dc:	mov	w0, wzr
  4080e0:	str	x20, [x8, w21, uxtw #3]
  4080e4:	str	xzr, [x8, w9, uxtw #3]
  4080e8:	str	x8, [x19]
  4080ec:	b	408110 <scols_reset_iter@plt+0x5820>
  4080f0:	mov	w21, wzr
  4080f4:	add	w8, w21, #0x2
  4080f8:	lsl	x1, x8, #3
  4080fc:	bl	402560 <realloc@plt>
  408100:	cbnz	x0, 4080d4 <scols_reset_iter@plt+0x57e4>
  408104:	mov	x0, x20
  408108:	bl	4026b0 <free@plt>
  40810c:	mov	w0, #0xfffffff4            	// #-12
  408110:	ldp	x20, x19, [sp, #64]
  408114:	ldr	x21, [sp, #48]
  408118:	ldp	x29, x30, [sp, #32]
  40811c:	add	sp, sp, #0x50
  408120:	ret
  408124:	cbz	x0, 408188 <scols_reset_iter@plt+0x5898>
  408128:	ldr	x8, [x0]
  40812c:	cbz	x8, 408188 <scols_reset_iter@plt+0x5898>
  408130:	mov	w9, wzr
  408134:	add	x8, x0, #0x8
  408138:	ldr	x10, [x8], #8
  40813c:	add	w9, w9, #0x1
  408140:	cbnz	x10, 408138 <scols_reset_iter@plt+0x5848>
  408144:	cmp	w9, #0x2
  408148:	b.cc	408188 <scols_reset_iter@plt+0x5898>  // b.lo, b.ul, b.last
  40814c:	lsr	w8, w9, #1
  408150:	cbz	w8, 408188 <scols_reset_iter@plt+0x5898>
  408154:	sub	w8, w9, #0x1
  408158:	mov	w9, w9
  40815c:	lsr	x9, x9, #1
  408160:	mov	x10, x0
  408164:	mov	w11, w8
  408168:	lsl	x11, x11, #3
  40816c:	ldr	x12, [x0, x11]
  408170:	ldr	x13, [x10]
  408174:	subs	x9, x9, #0x1
  408178:	sub	w8, w8, #0x1
  40817c:	str	x12, [x10], #8
  408180:	str	x13, [x0, x11]
  408184:	b.ne	408164 <scols_reset_iter@plt+0x5874>  // b.any
  408188:	ret
  40818c:	nop
  408190:	stp	x29, x30, [sp, #-64]!
  408194:	mov	x29, sp
  408198:	stp	x19, x20, [sp, #16]
  40819c:	adrp	x20, 419000 <scols_reset_iter@plt+0x16710>
  4081a0:	add	x20, x20, #0xde0
  4081a4:	stp	x21, x22, [sp, #32]
  4081a8:	adrp	x21, 419000 <scols_reset_iter@plt+0x16710>
  4081ac:	add	x21, x21, #0xdd8
  4081b0:	sub	x20, x20, x21
  4081b4:	mov	w22, w0
  4081b8:	stp	x23, x24, [sp, #48]
  4081bc:	mov	x23, x1
  4081c0:	mov	x24, x2
  4081c4:	bl	402250 <mbrtowc@plt-0x40>
  4081c8:	cmp	xzr, x20, asr #3
  4081cc:	b.eq	4081f8 <scols_reset_iter@plt+0x5908>  // b.none
  4081d0:	asr	x20, x20, #3
  4081d4:	mov	x19, #0x0                   	// #0
  4081d8:	ldr	x3, [x21, x19, lsl #3]
  4081dc:	mov	x2, x24
  4081e0:	add	x19, x19, #0x1
  4081e4:	mov	x1, x23
  4081e8:	mov	w0, w22
  4081ec:	blr	x3
  4081f0:	cmp	x20, x19
  4081f4:	b.ne	4081d8 <scols_reset_iter@plt+0x58e8>  // b.any
  4081f8:	ldp	x19, x20, [sp, #16]
  4081fc:	ldp	x21, x22, [sp, #32]
  408200:	ldp	x23, x24, [sp, #48]
  408204:	ldp	x29, x30, [sp], #64
  408208:	ret
  40820c:	nop
  408210:	ret
  408214:	nop
  408218:	adrp	x2, 41a000 <scols_reset_iter@plt+0x17710>
  40821c:	mov	x1, #0x0                   	// #0
  408220:	ldr	x2, [x2, #832]
  408224:	b	4023c0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000408228 <.fini>:
  408228:	stp	x29, x30, [sp, #-16]!
  40822c:	mov	x29, sp
  408230:	ldp	x29, x30, [sp], #16
  408234:	ret
