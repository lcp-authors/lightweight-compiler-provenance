
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-dissect_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004011a8 <_init>:
  4011a8:	stp	x29, x30, [sp, #-16]!
  4011ac:	mov	x29, sp
  4011b0:	bl	401f70 <call_weak_fn>
  4011b4:	ldp	x29, x30, [sp], #16
  4011b8:	ret

Disassembly of section .plt:

00000000004011c0 <.plt>:
  4011c0:	stp	x16, x30, [sp, #-16]!
  4011c4:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4011c8:	ldr	x17, [x16, #3792]
  4011cc:	add	x16, x16, #0xed0
  4011d0:	br	x17
  4011d4:	nop
  4011d8:	nop
  4011dc:	nop

00000000004011e0 <root_hash_load@plt>:
  4011e0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4011e4:	ldr	x17, [x16, #3800]
  4011e8:	add	x16, x16, #0xed8
  4011ec:	br	x17

00000000004011f0 <architecture_to_string@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4011f4:	ldr	x17, [x16, #3808]
  4011f8:	add	x16, x16, #0xee0
  4011fc:	br	x17

0000000000401200 <__libc_start_main@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401204:	ldr	x17, [x16, #3816]
  401208:	add	x16, x16, #0xee8
  40120c:	br	x17

0000000000401210 <__gmon_start__@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401214:	ldr	x17, [x16, #3824]
  401218:	add	x16, x16, #0xef0
  40121c:	br	x17

0000000000401220 <polkit_agent_close@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401224:	ldr	x17, [x16, #3832]
  401228:	add	x16, x16, #0xef8
  40122c:	br	x17

0000000000401230 <log_parse_environment_realm@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401234:	ldr	x17, [x16, #3840]
  401238:	add	x16, x16, #0xf00
  40123c:	br	x17

0000000000401240 <loop_device_unref@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401244:	ldr	x17, [x16, #3848]
  401248:	add	x16, x16, #0xf08
  40124c:	br	x17

0000000000401250 <loop_device_relinquish@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401254:	ldr	x17, [x16, #3856]
  401258:	add	x16, x16, #0xf10
  40125c:	br	x17

0000000000401260 <loop_device_make_by_path@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401264:	ldr	x17, [x16, #3864]
  401268:	add	x16, x16, #0xf18
  40126c:	br	x17

0000000000401270 <log_assert_failed_realm@plt>:
  401270:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401274:	ldr	x17, [x16, #3872]
  401278:	add	x16, x16, #0xf20
  40127c:	br	x17

0000000000401280 <getopt_long@plt>:
  401280:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401284:	ldr	x17, [x16, #3880]
  401288:	add	x16, x16, #0xf28
  40128c:	br	x17

0000000000401290 <dissected_image_decrypt_interactively@plt>:
  401290:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401294:	ldr	x17, [x16, #3888]
  401298:	add	x16, x16, #0xf30
  40129c:	br	x17

00000000004012a0 <log_assert_failed_unreachable_realm@plt>:
  4012a0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4012a4:	ldr	x17, [x16, #3896]
  4012a8:	add	x16, x16, #0xf38
  4012ac:	br	x17

00000000004012b0 <abort@plt>:
  4012b0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4012b4:	ldr	x17, [x16, #3904]
  4012b8:	add	x16, x16, #0xf40
  4012bc:	br	x17

00000000004012c0 <decrypted_image_unref@plt>:
  4012c0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4012c4:	ldr	x17, [x16, #3912]
  4012c8:	add	x16, x16, #0xf48
  4012cc:	br	x17

00000000004012d0 <putc@plt>:
  4012d0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4012d4:	ldr	x17, [x16, #3920]
  4012d8:	add	x16, x16, #0xf50
  4012dc:	br	x17

00000000004012e0 <dissected_image_acquire_metadata@plt>:
  4012e0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4012e4:	ldr	x17, [x16, #3928]
  4012e8:	add	x16, x16, #0xf58
  4012ec:	br	x17

00000000004012f0 <__stack_chk_fail@plt>:
  4012f0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4012f4:	ldr	x17, [x16, #3936]
  4012f8:	add	x16, x16, #0xf60
  4012fc:	br	x17

0000000000401300 <ask_password_agent_close@plt>:
  401300:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401304:	ldr	x17, [x16, #3944]
  401308:	add	x16, x16, #0xf68
  40130c:	br	x17

0000000000401310 <version@plt>:
  401310:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401314:	ldr	x17, [x16, #3952]
  401318:	add	x16, x16, #0xf70
  40131c:	br	x17

0000000000401320 <pager_close@plt>:
  401320:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401324:	ldr	x17, [x16, #3960]
  401328:	add	x16, x16, #0xf78
  40132c:	br	x17

0000000000401330 <log_internal_realm@plt>:
  401330:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401334:	ldr	x17, [x16, #3968]
  401338:	add	x16, x16, #0xf80
  40133c:	br	x17

0000000000401340 <unhexmem_full@plt>:
  401340:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401344:	ldr	x17, [x16, #3976]
  401348:	add	x16, x16, #0xf88
  40134c:	br	x17

0000000000401350 <strcmp@plt>:
  401350:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401354:	ldr	x17, [x16, #3984]
  401358:	add	x16, x16, #0xf90
  40135c:	br	x17

0000000000401360 <dissected_image_mount@plt>:
  401360:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401364:	ldr	x17, [x16, #3992]
  401368:	add	x16, x16, #0xf98
  40136c:	br	x17

0000000000401370 <dissected_image_unref@plt>:
  401370:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401374:	ldr	x17, [x16, #4000]
  401378:	add	x16, x16, #0xfa0
  40137c:	br	x17

0000000000401380 <partition_designator_to_string@plt>:
  401380:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401384:	ldr	x17, [x16, #4008]
  401388:	add	x16, x16, #0xfa8
  40138c:	br	x17

0000000000401390 <free@plt>:
  401390:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401394:	ldr	x17, [x16, #4016]
  401398:	add	x16, x16, #0xfb0
  40139c:	br	x17

00000000004013a0 <mac_selinux_finish@plt>:
  4013a0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4013a4:	ldr	x17, [x16, #4024]
  4013a8:	add	x16, x16, #0xfb8
  4013ac:	br	x17

00000000004013b0 <printf@plt>:
  4013b0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4013b4:	ldr	x17, [x16, #4032]
  4013b8:	add	x16, x16, #0xfc0
  4013bc:	br	x17

00000000004013c0 <strlen@plt>:
  4013c0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4013c4:	ldr	x17, [x16, #4040]
  4013c8:	add	x16, x16, #0xfc8
  4013cc:	br	x17

00000000004013d0 <decrypted_image_relinquish@plt>:
  4013d0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4013d4:	ldr	x17, [x16, #4048]
  4013d8:	add	x16, x16, #0xfd0
  4013dc:	br	x17

00000000004013e0 <log_open@plt>:
  4013e0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4013e4:	ldr	x17, [x16, #4056]
  4013e8:	add	x16, x16, #0xfd8
  4013ec:	br	x17

00000000004013f0 <dissect_image_and_warn@plt>:
  4013f0:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  4013f4:	ldr	x17, [x16, #4064]
  4013f8:	add	x16, x16, #0xfe0
  4013fc:	br	x17

0000000000401400 <log_get_max_level_realm@plt>:
  401400:	adrp	x16, 412000 <__FRAME_END__+0xf6c8>
  401404:	ldr	x17, [x16, #4072]
  401408:	add	x16, x16, #0xfe8
  40140c:	br	x17

Disassembly of section .text:

0000000000401410 <main>:
  401410:	sub	sp, sp, #0xe0
  401414:	adrp	x2, 413000 <arg_flags>
  401418:	adrp	x3, 413000 <arg_flags>
  40141c:	stp	x29, x30, [sp, #80]
  401420:	add	x29, sp, #0x50
  401424:	stp	x21, x22, [sp, #112]
  401428:	adrp	x21, 412000 <__FRAME_END__+0xf6c8>
  40142c:	add	x21, x21, #0xc88
  401430:	str	x1, [x2, #8]
  401434:	stp	x19, x20, [sp, #96]
  401438:	mov	x19, x1
  40143c:	ldr	x1, [x21]
  401440:	str	x1, [sp, #216]
  401444:	mov	x1, #0x0                   	// #0
  401448:	stp	x23, x24, [sp, #128]
  40144c:	mov	w24, w0
  401450:	mov	w0, #0x0                   	// #0
  401454:	str	w24, [x3, #40]
  401458:	stp	xzr, xzr, [sp, #176]
  40145c:	str	xzr, [sp, #192]
  401460:	bl	401230 <log_parse_environment_realm@plt>
  401464:	bl	4013e0 <log_open@plt>
  401468:	stp	x25, x26, [sp, #144]
  40146c:	tbnz	w24, #31, 401a28 <main+0x618>
  401470:	cbz	x19, 401a50 <main+0x640>
  401474:	adrp	x22, 402000 <__do_global_dtors_aux+0x8>
  401478:	adrp	x20, 402000 <__do_global_dtors_aux+0x8>
  40147c:	adrp	x23, 413000 <arg_flags>
  401480:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  401484:	add	x22, x22, #0x6a8
  401488:	add	x20, x20, #0x3d0
  40148c:	add	x23, x23, #0x0
  401490:	add	x25, x0, #0x310
  401494:	mov	x3, x22
  401498:	mov	x2, x20
  40149c:	mov	x1, x19
  4014a0:	mov	w0, w24
  4014a4:	mov	x4, #0x0                   	// #0
  4014a8:	bl	401280 <getopt_long@plt>
  4014ac:	tbnz	w0, #31, 401bfc <main+0x7ec>
  4014b0:	cmp	w0, #0x72
  4014b4:	b.eq	4019d4 <main+0x5c4>  // b.none
  4014b8:	b.gt	4014dc <main+0xcc>
  4014bc:	cmp	w0, #0x68
  4014c0:	b.eq	4019ac <main+0x59c>  // b.none
  4014c4:	cmp	w0, #0x6d
  4014c8:	b.ne	401558 <main+0x148>  // b.any
  4014cc:	adrp	x0, 413000 <arg_flags>
  4014d0:	mov	w1, #0x1                   	// #1
  4014d4:	str	w1, [x0, #60]
  4014d8:	b	401494 <main+0x84>
  4014dc:	cmp	w0, #0x101
  4014e0:	b.eq	40197c <main+0x56c>  // b.none
  4014e4:	cmp	w0, #0x102
  4014e8:	b.ne	401604 <main+0x1f4>  // b.any
  4014ec:	adrp	x0, 413000 <arg_flags>
  4014f0:	str	x27, [sp, #160]
  4014f4:	add	x27, x0, #0x30
  4014f8:	ldr	x26, [x0, #48]
  4014fc:	mov	x0, x26
  401500:	bl	4013c0 <strlen@plt>
  401504:	add	x4, sp, #0xd0
  401508:	mov	x1, x0
  40150c:	add	x3, sp, #0xc8
  401510:	mov	x0, x26
  401514:	mov	w2, #0x0                   	// #0
  401518:	bl	401340 <unhexmem_full@plt>
  40151c:	mov	w26, w0
  401520:	tbnz	w0, #31, 401a88 <main+0x678>
  401524:	ldr	x0, [sp, #208]
  401528:	cmp	x0, #0xf
  40152c:	b.ls	401dc4 <main+0x9b4>  // b.plast
  401530:	adrp	x27, 413000 <arg_flags>
  401534:	adrp	x26, 413000 <arg_flags>
  401538:	ldr	x0, [x27, #80]
  40153c:	bl	401390 <free@plt>
  401540:	ldr	x0, [sp, #200]
  401544:	str	x0, [x27, #80]
  401548:	ldr	x0, [sp, #208]
  40154c:	str	x0, [x26, #88]
  401550:	ldr	x27, [sp, #160]
  401554:	b	401494 <main+0x84>
  401558:	cmp	w0, #0x3f
  40155c:	b.ne	401ea0 <main+0xa90>  // b.any
  401560:	mov	w20, #0xffffffea            	// #-22
  401564:	ldr	x8, [sp, #192]
  401568:	cbz	x8, 401574 <main+0x164>
  40156c:	mov	x0, x8
  401570:	bl	401370 <dissected_image_unref@plt>
  401574:	ldr	x0, [sp, #184]
  401578:	cbz	x0, 401580 <main+0x170>
  40157c:	bl	4012c0 <decrypted_image_unref@plt>
  401580:	ldr	x0, [sp, #176]
  401584:	cbz	x0, 40158c <main+0x17c>
  401588:	bl	401240 <loop_device_unref@plt>
  40158c:	bl	401300 <ask_password_agent_close@plt>
  401590:	bl	401220 <polkit_agent_close@plt>
  401594:	bl	401320 <pager_close@plt>
  401598:	bl	4013a0 <mac_selinux_finish@plt>
  40159c:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4015a0:	ldr	x19, [x0, #1640]
  4015a4:	cbz	x19, 4015d4 <main+0x1c4>
  4015a8:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4015ac:	add	x19, x19, #0x7
  4015b0:	and	x19, x19, #0xfffffffffffffff8
  4015b4:	ldr	x22, [x0, #1648]
  4015b8:	cmp	x19, x22
  4015bc:	b.cs	4015d4 <main+0x1c4>  // b.hs, b.nlast
  4015c0:	ldp	x0, x1, [x19]
  4015c4:	add	x19, x19, #0x10
  4015c8:	blr	x1
  4015cc:	cmp	x19, x22
  4015d0:	b.cc	4015c0 <main+0x1b0>  // b.lo, b.ul, b.last
  4015d4:	lsr	w0, w20, #31
  4015d8:	ldr	x2, [sp, #216]
  4015dc:	ldr	x1, [x21]
  4015e0:	eor	x1, x2, x1
  4015e4:	cbnz	x1, 401ef0 <main+0xae0>
  4015e8:	ldp	x29, x30, [sp, #80]
  4015ec:	ldp	x19, x20, [sp, #96]
  4015f0:	ldp	x21, x22, [sp, #112]
  4015f4:	ldp	x23, x24, [sp, #128]
  4015f8:	ldp	x25, x26, [sp, #144]
  4015fc:	add	sp, sp, #0xe0
  401600:	ret
  401604:	cmp	w0, #0x100
  401608:	b.ne	401ea0 <main+0xa90>  // b.any
  40160c:	bl	401310 <version@plt>
  401610:	mov	w20, w0
  401614:	cmp	w20, #0x0
  401618:	b.le	401564 <main+0x154>
  40161c:	adrp	x22, 413000 <arg_flags>
  401620:	adrp	x20, 413000 <arg_flags>
  401624:	ldr	w1, [x22]
  401628:	add	x2, sp, #0xb0
  40162c:	ldr	x0, [x20, #64]
  401630:	tst	x1, #0x1
  401634:	cset	w1, eq  // eq = none
  401638:	lsl	w1, w1, #1
  40163c:	bl	401260 <loop_device_make_by_path@plt>
  401640:	mov	w19, w0
  401644:	tbnz	w0, #31, 401b2c <main+0x71c>
  401648:	adrp	x19, 413000 <arg_flags>
  40164c:	add	x1, x19, #0x50
  401650:	ldr	x0, [x19, #80]
  401654:	cbz	x0, 401b54 <main+0x744>
  401658:	adrp	x26, 413000 <arg_flags>
  40165c:	ldr	x0, [sp, #176]
  401660:	add	x5, sp, #0xc0
  401664:	ldr	x1, [x20, #64]
  401668:	ldr	w4, [x22]
  40166c:	ldr	x3, [x26, #88]
  401670:	ldr	x2, [x19, #80]
  401674:	ldr	w0, [x0]
  401678:	bl	4013f0 <dissect_image_and_warn@plt>
  40167c:	mov	w20, w0
  401680:	tbnz	w0, #31, 401564 <main+0x154>
  401684:	adrp	x0, 413000 <arg_flags>
  401688:	ldr	w0, [x0, #60]
  40168c:	cbnz	w0, 401aac <main+0x69c>
  401690:	adrp	x23, 402000 <__do_global_dtors_aux+0x8>
  401694:	adrp	x22, 402000 <__do_global_dtors_aux+0x8>
  401698:	add	x23, x23, #0xf0
  40169c:	add	x22, x22, #0xe0
  4016a0:	mov	x20, #0x0                   	// #0
  4016a4:	adrp	x24, 402000 <__do_global_dtors_aux+0x8>
  4016a8:	ldr	x1, [sp, #192]
  4016ac:	lsl	x0, x20, #6
  4016b0:	add	x1, x1, #0x8
  4016b4:	add	x19, x1, x0
  4016b8:	ldrb	w0, [x1, x0]
  4016bc:	tbz	w0, #0, 40180c <main+0x3fc>
  4016c0:	tst	x0, #0x2
  4016c4:	mov	w0, w20
  4016c8:	csel	x25, x22, x23, ne  // ne = any
  4016cc:	bl	401380 <partition_designator_to_string@plt>
  4016d0:	mov	x2, x0
  4016d4:	mov	x1, x25
  4016d8:	add	x0, x24, #0x4a8
  4016dc:	bl	4013b0 <printf@plt>
  4016e0:	ldp	x0, x1, [x19, #16]
  4016e4:	orr	x0, x0, x1
  4016e8:	cbz	x0, 40175c <main+0x34c>
  4016ec:	ldrb	w8, [x19, #31]
  4016f0:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4016f4:	ldrb	w7, [x19, #22]
  4016f8:	add	x0, x0, #0x4c0
  4016fc:	ldrb	w6, [x19, #21]
  401700:	ldrb	w5, [x19, #20]
  401704:	ldrb	w4, [x19, #19]
  401708:	ldrb	w3, [x19, #18]
  40170c:	ldrb	w2, [x19, #17]
  401710:	ldrb	w1, [x19, #16]
  401714:	str	w8, [sp, #64]
  401718:	ldrb	w8, [x19, #30]
  40171c:	str	w8, [sp, #56]
  401720:	ldrb	w8, [x19, #29]
  401724:	str	w8, [sp, #48]
  401728:	ldrb	w8, [x19, #28]
  40172c:	str	w8, [sp, #40]
  401730:	ldrb	w8, [x19, #27]
  401734:	str	w8, [sp, #32]
  401738:	ldrb	w8, [x19, #26]
  40173c:	str	w8, [sp, #24]
  401740:	ldrb	w8, [x19, #25]
  401744:	str	w8, [sp, #16]
  401748:	ldrb	w8, [x19, #24]
  40174c:	str	w8, [sp, #8]
  401750:	ldrb	w8, [x19, #23]
  401754:	str	w8, [sp]
  401758:	bl	4013b0 <printf@plt>
  40175c:	ldr	x1, [x19, #32]
  401760:	cbz	x1, 401770 <main+0x360>
  401764:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  401768:	add	x0, x0, #0x510
  40176c:	bl	4013b0 <printf@plt>
  401770:	ldr	w0, [x19, #8]
  401774:	cmn	w0, #0x1
  401778:	b.eq	401790 <main+0x380>  // b.none
  40177c:	bl	4011f0 <architecture_to_string@plt>
  401780:	mov	x1, x0
  401784:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401788:	add	x0, x2, #0x520
  40178c:	bl	4013b0 <printf@plt>
  401790:	cbz	x20, 401b24 <main+0x714>
  401794:	cmp	x20, #0x1
  401798:	b.ne	4017d4 <main+0x3c4>  // b.any
  40179c:	mov	w0, #0x8                   	// #8
  4017a0:	ldr	x3, [sp, #192]
  4017a4:	sbfiz	x0, x0, #6, #32
  4017a8:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  4017ac:	add	x2, x2, #0x100
  4017b0:	add	x3, x3, x0
  4017b4:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  4017b8:	add	x1, x1, #0x108
  4017bc:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4017c0:	add	x0, x0, #0x528
  4017c4:	ldrb	w3, [x3, #8]
  4017c8:	tst	x3, #0x1
  4017cc:	csel	x1, x2, x1, ne  // ne = any
  4017d0:	bl	4013b0 <printf@plt>
  4017d4:	ldr	w1, [x19, #4]
  4017d8:	tbnz	w1, #31, 4017e8 <main+0x3d8>
  4017dc:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4017e0:	add	x0, x0, #0x538
  4017e4:	bl	4013b0 <printf@plt>
  4017e8:	ldr	x1, [x19, #40]
  4017ec:	cbz	x1, 4017fc <main+0x3ec>
  4017f0:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4017f4:	add	x0, x0, #0x550
  4017f8:	bl	4013b0 <printf@plt>
  4017fc:	adrp	x1, 413000 <arg_flags>
  401800:	mov	w0, #0xa                   	// #10
  401804:	ldr	x1, [x1, #24]
  401808:	bl	4012d0 <putc@plt>
  40180c:	add	x20, x20, #0x1
  401810:	cmp	x20, #0x9
  401814:	b.ne	4016a8 <main+0x298>  // b.any
  401818:	ldr	x0, [sp, #192]
  40181c:	bl	4012e0 <dissected_image_acquire_metadata@plt>
  401820:	mov	w20, w0
  401824:	tbnz	w0, #31, 401bd4 <main+0x7c4>
  401828:	ldr	x8, [sp, #192]
  40182c:	ldr	x1, [x8, #584]
  401830:	cbz	x1, 401844 <main+0x434>
  401834:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  401838:	add	x0, x0, #0x580
  40183c:	bl	4013b0 <printf@plt>
  401840:	ldr	x8, [sp, #192]
  401844:	ldr	x0, [x8, #592]
  401848:	ldr	x1, [x8, #600]
  40184c:	orr	x0, x0, x1
  401850:	cbz	x0, 4018c8 <main+0x4b8>
  401854:	ldrb	w9, [x8, #607]
  401858:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  40185c:	ldrb	w7, [x8, #598]
  401860:	add	x0, x0, #0x590
  401864:	ldrb	w6, [x8, #597]
  401868:	ldrb	w5, [x8, #596]
  40186c:	ldrb	w4, [x8, #595]
  401870:	ldrb	w3, [x8, #594]
  401874:	ldrb	w2, [x8, #593]
  401878:	ldrb	w1, [x8, #592]
  40187c:	str	w9, [sp, #64]
  401880:	ldrb	w9, [x8, #606]
  401884:	str	w9, [sp, #56]
  401888:	ldrb	w9, [x8, #605]
  40188c:	str	w9, [sp, #48]
  401890:	ldrb	w9, [x8, #604]
  401894:	str	w9, [sp, #40]
  401898:	ldrb	w9, [x8, #603]
  40189c:	str	w9, [sp, #32]
  4018a0:	ldrb	w9, [x8, #602]
  4018a4:	str	w9, [sp, #24]
  4018a8:	ldrb	w9, [x8, #601]
  4018ac:	str	w9, [sp, #16]
  4018b0:	ldrb	w9, [x8, #600]
  4018b4:	str	w9, [sp, #8]
  4018b8:	ldrb	w8, [x8, #599]
  4018bc:	str	w8, [sp]
  4018c0:	bl	4013b0 <printf@plt>
  4018c4:	ldr	x8, [sp, #192]
  4018c8:	ldr	x19, [x8, #608]
  4018cc:	cbz	x19, 40191c <main+0x50c>
  4018d0:	ldr	x0, [x19]
  4018d4:	cbz	x0, 40191c <main+0x50c>
  4018d8:	adrp	x22, 402000 <__do_global_dtors_aux+0x8>
  4018dc:	adrp	x20, 402000 <__do_global_dtors_aux+0x8>
  4018e0:	add	x22, x22, #0x120
  4018e4:	add	x20, x20, #0x110
  4018e8:	adrp	x23, 402000 <__do_global_dtors_aux+0x8>
  4018ec:	b	401914 <main+0x504>
  4018f0:	ldr	x3, [x19, #8]
  4018f4:	cbz	x3, 40191c <main+0x50c>
  4018f8:	ldr	x1, [x8, #608]
  4018fc:	add	x0, x23, #0x5e0
  401900:	cmp	x1, x19
  401904:	add	x19, x19, #0x10
  401908:	csel	x1, x20, x22, eq  // eq = none
  40190c:	bl	4013b0 <printf@plt>
  401910:	ldr	x8, [sp, #192]
  401914:	ldr	x2, [x19]
  401918:	cbnz	x2, 4018f0 <main+0x4e0>
  40191c:	ldr	x19, [x8, #616]
  401920:	cbz	x19, 401b94 <main+0x784>
  401924:	ldr	x0, [x19]
  401928:	cbz	x0, 401b94 <main+0x784>
  40192c:	adrp	x22, 402000 <__do_global_dtors_aux+0x8>
  401930:	adrp	x20, 402000 <__do_global_dtors_aux+0x8>
  401934:	add	x22, x22, #0x120
  401938:	add	x20, x20, #0x130
  40193c:	adrp	x23, 402000 <__do_global_dtors_aux+0x8>
  401940:	b	401968 <main+0x558>
  401944:	ldr	x3, [x19, #8]
  401948:	cbz	x3, 401970 <main+0x560>
  40194c:	ldr	x1, [x8, #616]
  401950:	add	x0, x23, #0x5e0
  401954:	cmp	x1, x19
  401958:	add	x19, x19, #0x10
  40195c:	csel	x1, x20, x22, eq  // eq = none
  401960:	bl	4013b0 <printf@plt>
  401964:	ldr	x8, [sp, #192]
  401968:	ldr	x2, [x19]
  40196c:	cbnz	x2, 401944 <main+0x534>
  401970:	mov	w20, #0x0                   	// #0
  401974:	cbnz	x8, 40156c <main+0x15c>
  401978:	b	401574 <main+0x164>
  40197c:	adrp	x0, 413000 <arg_flags>
  401980:	mov	x1, x25
  401984:	ldr	x26, [x0, #48]
  401988:	mov	x0, x26
  40198c:	bl	401350 <strcmp@plt>
  401990:	cbnz	w0, 4019e4 <main+0x5d4>
  401994:	mov	w1, #0x0                   	// #0
  401998:	ldr	w0, [x23]
  40199c:	and	w0, w0, #0xfffffff1
  4019a0:	orr	w0, w0, w1
  4019a4:	str	w0, [x23]
  4019a8:	b	401494 <main+0x84>
  4019ac:	adrp	x1, 413000 <arg_flags>
  4019b0:	adrp	x0, 402000 <__do_global_dtors_aux+0x8>
  4019b4:	add	x0, x0, #0x178
  4019b8:	mov	w20, #0x0                   	// #0
  4019bc:	ldr	x2, [x1, #16]
  4019c0:	mov	x1, x2
  4019c4:	bl	4013b0 <printf@plt>
  4019c8:	ldr	x8, [sp, #192]
  4019cc:	cbnz	x8, 40156c <main+0x15c>
  4019d0:	b	401574 <main+0x164>
  4019d4:	ldr	w0, [x23]
  4019d8:	orr	w0, w0, #0x1
  4019dc:	str	w0, [x23]
  4019e0:	b	401494 <main+0x84>
  4019e4:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  4019e8:	mov	x0, x26
  4019ec:	add	x1, x1, #0x320
  4019f0:	bl	401350 <strcmp@plt>
  4019f4:	cbz	w0, 401a78 <main+0x668>
  4019f8:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  4019fc:	mov	x0, x26
  401a00:	add	x1, x1, #0x328
  401a04:	bl	401350 <strcmp@plt>
  401a08:	cbz	w0, 401a80 <main+0x670>
  401a0c:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401a10:	mov	x0, x26
  401a14:	add	x1, x1, #0x330
  401a18:	bl	401350 <strcmp@plt>
  401a1c:	cbnz	w0, 401e58 <main+0xa48>
  401a20:	mov	w1, #0xe                   	// #14
  401a24:	b	401998 <main+0x588>
  401a28:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401a2c:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401a30:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401a34:	add	x4, x4, #0x678
  401a38:	add	x1, x1, #0x160
  401a3c:	add	x2, x2, #0x143
  401a40:	mov	w3, #0x40                  	// #64
  401a44:	mov	w0, #0x0                   	// #0
  401a48:	str	x27, [sp, #160]
  401a4c:	bl	401270 <log_assert_failed_realm@plt>
  401a50:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401a54:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401a58:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401a5c:	add	x4, x4, #0x678
  401a60:	add	x1, x1, #0x170
  401a64:	add	x2, x2, #0x143
  401a68:	mov	w3, #0x41                  	// #65
  401a6c:	mov	w0, #0x0                   	// #0
  401a70:	str	x27, [sp, #160]
  401a74:	bl	401270 <log_assert_failed_realm@plt>
  401a78:	mov	w1, #0x2                   	// #2
  401a7c:	b	401998 <main+0x588>
  401a80:	mov	w1, #0x6                   	// #6
  401a84:	b	401998 <main+0x588>
  401a88:	mov	w0, #0x0                   	// #0
  401a8c:	bl	401400 <log_get_max_level_realm@plt>
  401a90:	cmp	w0, #0x2
  401a94:	b.gt	401df0 <main+0x9e0>
  401a98:	neg	w20, w26
  401a9c:	and	w20, w20, #0xff
  401aa0:	neg	w20, w20
  401aa4:	ldr	x27, [sp, #160]
  401aa8:	b	401614 <main+0x204>
  401aac:	cmp	w0, #0x1
  401ab0:	b.ne	401ef8 <main+0xae8>  // b.any
  401ab4:	ldr	x3, [x26, #88]
  401ab8:	add	x5, sp, #0xb8
  401abc:	ldr	x2, [x19, #80]
  401ac0:	mov	x1, #0x0                   	// #0
  401ac4:	ldr	w4, [x22]
  401ac8:	ldr	x0, [sp, #192]
  401acc:	bl	401290 <dissected_image_decrypt_interactively@plt>
  401ad0:	mov	w20, w0
  401ad4:	tbnz	w0, #31, 401564 <main+0x154>
  401ad8:	adrp	x1, 413000 <arg_flags>
  401adc:	ldr	w3, [x22]
  401ae0:	ldr	x0, [sp, #192]
  401ae4:	mov	w2, #0xffffffff            	// #-1
  401ae8:	ldr	x1, [x1, #72]
  401aec:	bl	401360 <dissected_image_mount@plt>
  401af0:	mov	w20, w0
  401af4:	tbnz	w0, #31, 401cc0 <main+0x8b0>
  401af8:	ldr	x0, [sp, #184]
  401afc:	cbz	x0, 401b0c <main+0x6fc>
  401b00:	bl	4013d0 <decrypted_image_relinquish@plt>
  401b04:	mov	w20, w0
  401b08:	tbnz	w0, #31, 401d10 <main+0x900>
  401b0c:	ldr	x0, [sp, #176]
  401b10:	mov	w20, #0x0                   	// #0
  401b14:	bl	401250 <loop_device_relinquish@plt>
  401b18:	ldr	x8, [sp, #192]
  401b1c:	cbnz	x8, 40156c <main+0x15c>
  401b20:	b	401574 <main+0x164>
  401b24:	mov	w0, #0x7                   	// #7
  401b28:	b	4017a0 <main+0x390>
  401b2c:	mov	w0, #0x0                   	// #0
  401b30:	bl	401400 <log_get_max_level_realm@plt>
  401b34:	cmp	w0, #0x2
  401b38:	b.gt	401b9c <main+0x78c>
  401b3c:	ldr	x8, [sp, #192]
  401b40:	neg	w20, w19
  401b44:	and	w20, w20, #0xff
  401b48:	neg	w20, w20
  401b4c:	cbnz	x8, 40156c <main+0x15c>
  401b50:	b	401574 <main+0x164>
  401b54:	ldr	x0, [x20, #64]
  401b58:	adrp	x26, 413000 <arg_flags>
  401b5c:	add	x2, x26, #0x58
  401b60:	bl	4011e0 <root_hash_load@plt>
  401b64:	mov	w23, w0
  401b68:	tbz	w0, #31, 40165c <main+0x24c>
  401b6c:	mov	w0, #0x0                   	// #0
  401b70:	bl	401400 <log_get_max_level_realm@plt>
  401b74:	cmp	w0, #0x2
  401b78:	b.gt	401d40 <main+0x930>
  401b7c:	ldr	x8, [sp, #192]
  401b80:	neg	w20, w23
  401b84:	and	w20, w20, #0xff
  401b88:	neg	w20, w20
  401b8c:	cbnz	x8, 40156c <main+0x15c>
  401b90:	b	401574 <main+0x164>
  401b94:	mov	w20, #0x0                   	// #0
  401b98:	b	40156c <main+0x15c>
  401b9c:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401ba0:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401ba4:	mov	w1, w19
  401ba8:	add	x5, x5, #0x450
  401bac:	add	x4, x4, #0x6a0
  401bb0:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401bb4:	mov	w3, #0xb0                  	// #176
  401bb8:	add	x2, x2, #0x143
  401bbc:	mov	w0, #0x3                   	// #3
  401bc0:	bl	401330 <log_internal_realm@plt>
  401bc4:	mov	w20, w0
  401bc8:	ldr	x8, [sp, #192]
  401bcc:	cbnz	x8, 40156c <main+0x15c>
  401bd0:	b	401574 <main+0x164>
  401bd4:	mov	w0, #0x0                   	// #0
  401bd8:	bl	401400 <log_get_max_level_realm@plt>
  401bdc:	cmp	w0, #0x2
  401be0:	b.gt	401cf0 <main+0x8e0>
  401be4:	ldr	x8, [sp, #192]
  401be8:	neg	w20, w20
  401bec:	and	w20, w20, #0xff
  401bf0:	neg	w20, w20
  401bf4:	cbnz	x8, 40156c <main+0x15c>
  401bf8:	b	401574 <main+0x164>
  401bfc:	adrp	x0, 413000 <arg_flags>
  401c00:	ldr	w0, [x0, #60]
  401c04:	cbnz	w0, 401c60 <main+0x850>
  401c08:	adrp	x0, 413000 <arg_flags>
  401c0c:	ldr	w0, [x0, #32]
  401c10:	add	w1, w0, #0x1
  401c14:	cmp	w24, w1
  401c18:	b.eq	401d7c <main+0x96c>  // b.none
  401c1c:	mov	w0, #0x0                   	// #0
  401c20:	bl	401400 <log_get_max_level_realm@plt>
  401c24:	cmp	w0, #0x2
  401c28:	b.le	401560 <main+0x150>
  401c2c:	mov	w1, #0x16                  	// #22
  401c30:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401c34:	movk	w1, #0x4000, lsl #16
  401c38:	add	x5, x5, #0x3d8
  401c3c:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401c40:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401c44:	add	x4, x4, #0x690
  401c48:	add	x2, x2, #0x143
  401c4c:	mov	w3, #0x8a                  	// #138
  401c50:	mov	w0, #0x3                   	// #3
  401c54:	bl	401330 <log_internal_realm@plt>
  401c58:	mov	w20, w0
  401c5c:	b	401614 <main+0x204>
  401c60:	cmp	w0, #0x1
  401c64:	b.ne	401ec8 <main+0xab8>  // b.any
  401c68:	adrp	x0, 413000 <arg_flags>
  401c6c:	ldr	w0, [x0, #32]
  401c70:	add	w1, w0, #0x2
  401c74:	cmp	w24, w1
  401c78:	b.eq	401d9c <main+0x98c>  // b.none
  401c7c:	mov	w0, #0x0                   	// #0
  401c80:	bl	401400 <log_get_max_level_realm@plt>
  401c84:	cmp	w0, #0x2
  401c88:	b.le	401560 <main+0x150>
  401c8c:	mov	w1, #0x16                  	// #22
  401c90:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401c94:	movk	w1, #0x4000, lsl #16
  401c98:	add	x5, x5, #0x400
  401c9c:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401ca0:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401ca4:	add	x4, x4, #0x690
  401ca8:	add	x2, x2, #0x143
  401cac:	mov	w3, #0x93                  	// #147
  401cb0:	mov	w0, #0x3                   	// #3
  401cb4:	bl	401330 <log_internal_realm@plt>
  401cb8:	mov	w20, w0
  401cbc:	b	401614 <main+0x204>
  401cc0:	mov	w0, #0x0                   	// #0
  401cc4:	bl	401400 <log_get_max_level_realm@plt>
  401cc8:	cmp	w0, #0x2
  401ccc:	b.le	401be4 <main+0x7d4>
  401cd0:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401cd4:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401cd8:	mov	w1, w20
  401cdc:	add	x5, x5, #0x5f0
  401ce0:	add	x4, x4, #0x6a0
  401ce4:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401ce8:	mov	w3, #0x108                 	// #264
  401cec:	b	401bb8 <main+0x7a8>
  401cf0:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401cf4:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401cf8:	mov	w1, w20
  401cfc:	add	x5, x5, #0x558
  401d00:	add	x4, x4, #0x6a0
  401d04:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401d08:	mov	w3, #0xe4                  	// #228
  401d0c:	b	401bb8 <main+0x7a8>
  401d10:	mov	w0, #0x0                   	// #0
  401d14:	bl	401400 <log_get_max_level_realm@plt>
  401d18:	cmp	w0, #0x2
  401d1c:	b.le	401be4 <main+0x7d4>
  401d20:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401d24:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401d28:	mov	w1, w20
  401d2c:	add	x5, x5, #0x610
  401d30:	add	x4, x4, #0x6a0
  401d34:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401d38:	mov	w3, #0x10d                 	// #269
  401d3c:	b	401bb8 <main+0x7a8>
  401d40:	ldr	x6, [x20, #64]
  401d44:	mov	w1, w23
  401d48:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401d4c:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401d50:	add	x5, x5, #0x478
  401d54:	add	x4, x4, #0x6a0
  401d58:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401d5c:	mov	w3, #0xb5                  	// #181
  401d60:	add	x2, x2, #0x143
  401d64:	mov	w0, #0x3                   	// #3
  401d68:	bl	401330 <log_internal_realm@plt>
  401d6c:	mov	w20, w0
  401d70:	ldr	x8, [sp, #192]
  401d74:	cbnz	x8, 40156c <main+0x15c>
  401d78:	b	401574 <main+0x164>
  401d7c:	adrp	x22, 413000 <arg_flags>
  401d80:	adrp	x20, 413000 <arg_flags>
  401d84:	ldr	x0, [x19, w0, sxtw #3]
  401d88:	str	x0, [x20, #64]
  401d8c:	ldr	w0, [x22]
  401d90:	orr	w0, w0, #0x1
  401d94:	str	w0, [x22]
  401d98:	b	401624 <main+0x214>
  401d9c:	sbfiz	x0, x0, #3, #32
  401da0:	adrp	x20, 413000 <arg_flags>
  401da4:	add	x2, x19, x0
  401da8:	adrp	x1, 413000 <arg_flags>
  401dac:	adrp	x22, 413000 <arg_flags>
  401db0:	ldr	x0, [x19, x0]
  401db4:	str	x0, [x20, #64]
  401db8:	ldr	x0, [x2, #8]
  401dbc:	str	x0, [x1, #72]
  401dc0:	b	401624 <main+0x214>
  401dc4:	mov	w0, #0x0                   	// #0
  401dc8:	bl	401400 <log_get_max_level_realm@plt>
  401dcc:	cmp	w0, #0x2
  401dd0:	b.gt	401e28 <main+0xa18>
  401dd4:	ldr	x0, [sp, #200]
  401dd8:	mov	w20, #0xffffffea            	// #-22
  401ddc:	bl	401390 <free@plt>
  401de0:	ldr	x8, [sp, #192]
  401de4:	ldr	x27, [sp, #160]
  401de8:	cbnz	x8, 40156c <main+0x15c>
  401dec:	b	401574 <main+0x164>
  401df0:	ldr	x6, [x27]
  401df4:	mov	w1, w26
  401df8:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401dfc:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401e00:	add	x5, x5, #0x360
  401e04:	add	x4, x4, #0x690
  401e08:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401e0c:	mov	w3, #0x70                  	// #112
  401e10:	add	x2, x2, #0x143
  401e14:	mov	w0, #0x3                   	// #3
  401e18:	bl	401330 <log_internal_realm@plt>
  401e1c:	mov	w20, w0
  401e20:	ldr	x27, [sp, #160]
  401e24:	b	401614 <main+0x204>
  401e28:	ldr	x6, [x27]
  401e2c:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401e30:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401e34:	add	x5, x5, #0x388
  401e38:	add	x4, x4, #0x690
  401e3c:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401e40:	mov	w3, #0x72                  	// #114
  401e44:	add	x2, x2, #0x143
  401e48:	mov	w1, #0x0                   	// #0
  401e4c:	mov	w0, #0x3                   	// #3
  401e50:	bl	401330 <log_internal_realm@plt>
  401e54:	b	401dd4 <main+0x9c4>
  401e58:	mov	w0, #0x0                   	// #0
  401e5c:	bl	401400 <log_get_max_level_realm@plt>
  401e60:	cmp	w0, #0x2
  401e64:	b.le	401560 <main+0x150>
  401e68:	mov	w1, #0x16                  	// #22
  401e6c:	mov	x6, x26
  401e70:	movk	w1, #0x4000, lsl #16
  401e74:	adrp	x5, 402000 <__do_global_dtors_aux+0x8>
  401e78:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401e7c:	add	x5, x5, #0x338
  401e80:	add	x4, x4, #0x690
  401e84:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401e88:	mov	w3, #0x62                  	// #98
  401e8c:	add	x2, x2, #0x143
  401e90:	mov	w0, #0x3                   	// #3
  401e94:	bl	401330 <log_internal_realm@plt>
  401e98:	mov	w20, w0
  401e9c:	b	401614 <main+0x204>
  401ea0:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401ea4:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401ea8:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401eac:	add	x4, x4, #0x678
  401eb0:	add	x1, x1, #0x3b8
  401eb4:	add	x2, x2, #0x143
  401eb8:	mov	w3, #0x81                  	// #129
  401ebc:	mov	w0, #0x0                   	// #0
  401ec0:	str	x27, [sp, #160]
  401ec4:	bl	4012a0 <log_assert_failed_unreachable_realm@plt>
  401ec8:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401ecc:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401ed0:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401ed4:	add	x4, x4, #0x678
  401ed8:	add	x1, x1, #0x440
  401edc:	add	x2, x2, #0x143
  401ee0:	mov	w3, #0x9b                  	// #155
  401ee4:	mov	w0, #0x0                   	// #0
  401ee8:	str	x27, [sp, #160]
  401eec:	bl	4012a0 <log_assert_failed_unreachable_realm@plt>
  401ef0:	str	x27, [sp, #160]
  401ef4:	bl	4012f0 <__stack_chk_fail@plt>
  401ef8:	adrp	x4, 402000 <__do_global_dtors_aux+0x8>
  401efc:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401f00:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401f04:	add	x4, x4, #0x688
  401f08:	add	x1, x1, #0x440
  401f0c:	add	x2, x2, #0x143
  401f10:	mov	w3, #0x114                 	// #276
  401f14:	mov	w0, #0x0                   	// #0
  401f18:	str	x27, [sp, #160]
  401f1c:	bl	4012a0 <log_assert_failed_unreachable_realm@plt>

0000000000401f20 <_start>:
  401f20:	mov	x29, #0x0                   	// #0
  401f24:	mov	x30, #0x0                   	// #0
  401f28:	mov	x5, x0
  401f2c:	ldr	x1, [sp]
  401f30:	add	x2, sp, #0x8
  401f34:	mov	x6, sp
  401f38:	movz	x0, #0x0, lsl #48
  401f3c:	movk	x0, #0x0, lsl #32
  401f40:	movk	x0, #0x40, lsl #16
  401f44:	movk	x0, #0x1410
  401f48:	movz	x3, #0x0, lsl #48
  401f4c:	movk	x3, #0x0, lsl #32
  401f50:	movk	x3, #0x40, lsl #16
  401f54:	movk	x3, #0x2038
  401f58:	movz	x4, #0x0, lsl #48
  401f5c:	movk	x4, #0x0, lsl #32
  401f60:	movk	x4, #0x40, lsl #16
  401f64:	movk	x4, #0x20b8
  401f68:	bl	401200 <__libc_start_main@plt>
  401f6c:	bl	4012b0 <abort@plt>

0000000000401f70 <call_weak_fn>:
  401f70:	adrp	x0, 412000 <__FRAME_END__+0xf6c8>
  401f74:	ldr	x0, [x0, #4088]
  401f78:	cbz	x0, 401f80 <call_weak_fn+0x10>
  401f7c:	b	401210 <__gmon_start__@plt>
  401f80:	ret
  401f84:	nop

0000000000401f88 <deregister_tm_clones>:
  401f88:	adrp	x0, 413000 <arg_flags>
  401f8c:	add	x0, x0, #0x8
  401f90:	adrp	x1, 413000 <arg_flags>
  401f94:	add	x1, x1, #0x8
  401f98:	cmp	x1, x0
  401f9c:	b.eq	401fb4 <deregister_tm_clones+0x2c>  // b.none
  401fa0:	adrp	x1, 402000 <__do_global_dtors_aux+0x8>
  401fa4:	ldr	x1, [x1, #208]
  401fa8:	cbz	x1, 401fb4 <deregister_tm_clones+0x2c>
  401fac:	mov	x16, x1
  401fb0:	br	x16
  401fb4:	ret

0000000000401fb8 <register_tm_clones>:
  401fb8:	adrp	x0, 413000 <arg_flags>
  401fbc:	add	x0, x0, #0x8
  401fc0:	adrp	x1, 413000 <arg_flags>
  401fc4:	add	x1, x1, #0x8
  401fc8:	sub	x1, x1, x0
  401fcc:	lsr	x2, x1, #63
  401fd0:	add	x1, x2, x1, asr #3
  401fd4:	cmp	xzr, x1, asr #1
  401fd8:	asr	x1, x1, #1
  401fdc:	b.eq	401ff4 <register_tm_clones+0x3c>  // b.none
  401fe0:	adrp	x2, 402000 <__do_global_dtors_aux+0x8>
  401fe4:	ldr	x2, [x2, #216]
  401fe8:	cbz	x2, 401ff4 <register_tm_clones+0x3c>
  401fec:	mov	x16, x2
  401ff0:	br	x16
  401ff4:	ret

0000000000401ff8 <__do_global_dtors_aux>:
  401ff8:	stp	x29, x30, [sp, #-32]!
  401ffc:	mov	x29, sp
  402000:	str	x19, [sp, #16]
  402004:	adrp	x19, 413000 <arg_flags>
  402008:	ldrb	w0, [x19, #56]
  40200c:	cbnz	w0, 40201c <__do_global_dtors_aux+0x24>
  402010:	bl	401f88 <deregister_tm_clones>
  402014:	mov	w0, #0x1                   	// #1
  402018:	strb	w0, [x19, #56]
  40201c:	ldr	x19, [sp, #16]
  402020:	ldp	x29, x30, [sp], #32
  402024:	ret

0000000000402028 <frame_dummy>:
  402028:	b	401fb8 <register_tm_clones>
  40202c:	nop

0000000000402030 <__unique_prefix_static_destructor_wrapper0>:
  402030:	ldr	x0, [x0]
  402034:	b	401390 <free@plt>

0000000000402038 <__libc_csu_init>:
  402038:	stp	x29, x30, [sp, #-64]!
  40203c:	mov	x29, sp
  402040:	stp	x19, x20, [sp, #16]
  402044:	adrp	x20, 412000 <__FRAME_END__+0xf6c8>
  402048:	add	x20, x20, #0xc80
  40204c:	stp	x21, x22, [sp, #32]
  402050:	adrp	x21, 412000 <__FRAME_END__+0xf6c8>
  402054:	add	x21, x21, #0xc78
  402058:	sub	x20, x20, x21
  40205c:	mov	w22, w0
  402060:	stp	x23, x24, [sp, #48]
  402064:	mov	x23, x1
  402068:	mov	x24, x2
  40206c:	bl	4011a8 <_init>
  402070:	cmp	xzr, x20, asr #3
  402074:	b.eq	4020a0 <__libc_csu_init+0x68>  // b.none
  402078:	asr	x20, x20, #3
  40207c:	mov	x19, #0x0                   	// #0
  402080:	ldr	x3, [x21, x19, lsl #3]
  402084:	mov	x2, x24
  402088:	add	x19, x19, #0x1
  40208c:	mov	x1, x23
  402090:	mov	w0, w22
  402094:	blr	x3
  402098:	cmp	x20, x19
  40209c:	b.ne	402080 <__libc_csu_init+0x48>  // b.any
  4020a0:	ldp	x19, x20, [sp, #16]
  4020a4:	ldp	x21, x22, [sp, #32]
  4020a8:	ldp	x23, x24, [sp, #48]
  4020ac:	ldp	x29, x30, [sp], #64
  4020b0:	ret
  4020b4:	nop

00000000004020b8 <__libc_csu_fini>:
  4020b8:	ret

Disassembly of section .fini:

00000000004020bc <_fini>:
  4020bc:	stp	x29, x30, [sp, #-16]!
  4020c0:	mov	x29, sp
  4020c4:	ldp	x29, x30, [sp], #16
  4020c8:	ret
