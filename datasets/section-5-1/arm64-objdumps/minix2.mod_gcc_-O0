
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix2.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1050>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_mod_init-0x1050>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret
      58:	sub	sp, sp, #0x20
      5c:	str	x0, [sp, #8]
      60:	str	w1, [sp, #4]
      64:	ldr	x0, [sp, #8]
      68:	ldrh	w0, [x0, #10]
      6c:	add	w0, w0, #0x1
      70:	str	w0, [sp, #28]
      74:	ldr	w1, [sp, #4]
      78:	ldr	w0, [sp, #28]
      7c:	lsl	x0, x1, x0
      80:	add	sp, sp, #0x20
      84:	ret
      88:	stp	x29, x30, [sp, #-64]!
      8c:	mov	x29, sp
      90:	str	x19, [sp, #16]
      94:	str	x0, [sp, #40]
      98:	str	w1, [sp, #36]
      9c:	str	w2, [sp, #32]
      a0:	ldr	x0, [sp, #40]
      a4:	ldr	x19, [x0, #96]
      a8:	ldr	w1, [sp, #36]
      ac:	ldr	x0, [sp, #40]
      b0:	bl	58 <grub_mod_init-0xff8>
      b4:	mov	x5, x0
      b8:	ldr	w0, [sp, #32]
      bc:	lsl	x0, x0, #2
      c0:	add	x1, sp, #0x3c
      c4:	mov	x4, x1
      c8:	mov	x3, #0x4                   	// #4
      cc:	mov	x2, x0
      d0:	mov	x1, x5
      d4:	mov	x0, x19
      d8:	bl	0 <grub_disk_read>
      dc:	ldr	w0, [sp, #60]
      e0:	ldr	x19, [sp, #16]
      e4:	ldp	x29, x30, [sp], #64
      e8:	ret
      ec:	stp	x29, x30, [sp, #-48]!
      f0:	mov	x29, sp
      f4:	str	x0, [sp, #24]
      f8:	str	w1, [sp, #20]
      fc:	ldr	w0, [sp, #20]
     100:	cmp	w0, #0x6
     104:	b.hi	124 <grub_mod_init-0xf2c>  // b.pmore
     108:	ldr	x1, [sp, #24]
     10c:	ldr	w0, [sp, #20]
     110:	add	x0, x0, #0x8
     114:	lsl	x0, x0, #2
     118:	add	x0, x1, x0
     11c:	ldr	w0, [x0, #12]
     120:	b	318 <grub_mod_init-0xd38>
     124:	ldr	w0, [sp, #20]
     128:	sub	w0, w0, #0x7
     12c:	str	w0, [sp, #20]
     130:	ldr	x0, [sp, #24]
     134:	ldr	w0, [x0, #84]
     138:	ldr	w1, [sp, #20]
     13c:	cmp	w1, w0
     140:	b.cs	168 <grub_mod_init-0xee8>  // b.hs, b.nlast
     144:	ldr	x0, [sp, #24]
     148:	ldr	w0, [x0, #72]
     14c:	ldr	w2, [sp, #20]
     150:	mov	w1, w0
     154:	ldr	x0, [sp, #24]
     158:	bl	88 <grub_mod_init-0xfc8>
     15c:	str	w0, [sp, #44]
     160:	ldr	w0, [sp, #44]
     164:	b	318 <grub_mod_init-0xd38>
     168:	ldr	x0, [sp, #24]
     16c:	ldr	w0, [x0, #84]
     170:	ldr	w1, [sp, #20]
     174:	sub	w0, w1, w0
     178:	str	w0, [sp, #20]
     17c:	ldr	w1, [sp, #20]
     180:	ldr	x0, [sp, #24]
     184:	ldr	w0, [x0, #84]
     188:	mov	w2, w0
     18c:	ldr	x0, [sp, #24]
     190:	ldr	w0, [x0, #84]
     194:	mov	w0, w0
     198:	mul	x0, x2, x0
     19c:	cmp	x1, x0
     1a0:	b.cs	204 <grub_mod_init-0xe4c>  // b.hs, b.nlast
     1a4:	ldr	x0, [sp, #24]
     1a8:	ldr	w3, [x0, #76]
     1ac:	ldr	x0, [sp, #24]
     1b0:	ldr	w0, [x0, #84]
     1b4:	ldr	w1, [sp, #20]
     1b8:	udiv	w0, w1, w0
     1bc:	mov	w2, w0
     1c0:	mov	w1, w3
     1c4:	ldr	x0, [sp, #24]
     1c8:	bl	88 <grub_mod_init-0xfc8>
     1cc:	str	w0, [sp, #44]
     1d0:	ldr	x0, [sp, #24]
     1d4:	ldr	w1, [x0, #84]
     1d8:	ldr	w0, [sp, #20]
     1dc:	udiv	w2, w0, w1
     1e0:	mul	w1, w2, w1
     1e4:	sub	w0, w0, w1
     1e8:	mov	w2, w0
     1ec:	ldr	w1, [sp, #44]
     1f0:	ldr	x0, [sp, #24]
     1f4:	bl	88 <grub_mod_init-0xfc8>
     1f8:	str	w0, [sp, #44]
     1fc:	ldr	w0, [sp, #44]
     200:	b	318 <grub_mod_init-0xd38>
     204:	ldr	x0, [sp, #24]
     208:	ldr	w1, [x0, #84]
     20c:	ldr	x0, [sp, #24]
     210:	ldr	w0, [x0, #84]
     214:	mul	w0, w1, w0
     218:	ldr	w1, [sp, #20]
     21c:	sub	w0, w1, w0
     220:	str	w0, [sp, #20]
     224:	ldr	w1, [sp, #20]
     228:	ldr	x0, [sp, #24]
     22c:	ldr	w0, [x0, #84]
     230:	mov	w2, w0
     234:	ldr	x0, [sp, #24]
     238:	ldr	w0, [x0, #84]
     23c:	mov	w0, w0
     240:	mul	x2, x2, x0
     244:	ldr	x0, [sp, #24]
     248:	ldr	w0, [x0, #84]
     24c:	mov	w0, w0
     250:	mul	x0, x2, x0
     254:	cmp	x1, x0
     258:	b.cs	300 <grub_mod_init-0xd50>  // b.hs, b.nlast
     25c:	ldr	x0, [sp, #24]
     260:	ldr	w3, [x0, #80]
     264:	ldr	x0, [sp, #24]
     268:	ldr	w0, [x0, #84]
     26c:	ldr	w1, [sp, #20]
     270:	udiv	w1, w1, w0
     274:	ldr	x0, [sp, #24]
     278:	ldr	w0, [x0, #84]
     27c:	udiv	w0, w1, w0
     280:	mov	w2, w0
     284:	mov	w1, w3
     288:	ldr	x0, [sp, #24]
     28c:	bl	88 <grub_mod_init-0xfc8>
     290:	str	w0, [sp, #44]
     294:	ldr	x0, [sp, #24]
     298:	ldr	w0, [x0, #84]
     29c:	ldr	w1, [sp, #20]
     2a0:	udiv	w0, w1, w0
     2a4:	ldr	x1, [sp, #24]
     2a8:	ldr	w1, [x1, #84]
     2ac:	udiv	w2, w0, w1
     2b0:	mul	w1, w2, w1
     2b4:	sub	w0, w0, w1
     2b8:	mov	w2, w0
     2bc:	ldr	w1, [sp, #44]
     2c0:	ldr	x0, [sp, #24]
     2c4:	bl	88 <grub_mod_init-0xfc8>
     2c8:	str	w0, [sp, #44]
     2cc:	ldr	x0, [sp, #24]
     2d0:	ldr	w1, [x0, #84]
     2d4:	ldr	w0, [sp, #20]
     2d8:	udiv	w2, w0, w1
     2dc:	mul	w1, w2, w1
     2e0:	sub	w0, w0, w1
     2e4:	mov	w2, w0
     2e8:	ldr	w1, [sp, #44]
     2ec:	ldr	x0, [sp, #24]
     2f0:	bl	88 <grub_mod_init-0xfc8>
     2f4:	str	w0, [sp, #44]
     2f8:	ldr	w0, [sp, #44]
     2fc:	b	318 <grub_mod_init-0xd38>
     300:	adrp	x0, 0 <grub_mod_init-0x1050>
     304:	add	x0, x0, #0x0
     308:	ldr	x1, [x0]
     30c:	mov	w0, #0xb                   	// #11
     310:	bl	0 <grub_error>
     314:	mov	w0, #0x0                   	// #0
     318:	ldp	x29, x30, [sp], #48
     31c:	ret
	...
     328:	stp	x29, x30, [sp, #-128]!
     32c:	mov	x29, sp
     330:	str	x19, [sp, #16]
     334:	str	x0, [sp, #72]
     338:	str	x1, [sp, #64]
     33c:	str	x2, [sp, #56]
     340:	str	x3, [sp, #48]
     344:	str	x4, [sp, #40]
     348:	str	x5, [sp, #32]
     34c:	ldr	x0, [sp, #72]
     350:	ldr	w0, [x0, #28]
     354:	mov	w0, w0
     358:	ldr	x1, [sp, #48]
     35c:	cmp	x1, x0
     360:	b.ls	380 <grub_mod_init-0xcd0>  // b.plast
     364:	adrp	x0, 0 <grub_mod_init-0x1050>
     368:	add	x0, x0, #0x0
     36c:	ldr	x1, [x0]
     370:	mov	w0, #0xb                   	// #11
     374:	bl	0 <grub_error>
     378:	mov	x0, #0xffffffffffffffff    	// #-1
     37c:	b	5c8 <grub_mod_init-0xa88>
     380:	ldr	x1, [sp, #40]
     384:	ldr	x0, [sp, #48]
     388:	add	x1, x1, x0
     38c:	ldr	x0, [sp, #72]
     390:	ldr	w0, [x0, #28]
     394:	mov	w0, w0
     398:	cmp	x1, x0
     39c:	b.ls	3b8 <grub_mod_init-0xc98>  // b.plast
     3a0:	ldr	x0, [sp, #72]
     3a4:	ldr	w0, [x0, #28]
     3a8:	mov	w1, w0
     3ac:	ldr	x0, [sp, #48]
     3b0:	sub	x0, x1, x0
     3b4:	str	x0, [sp, #40]
     3b8:	ldr	x0, [sp, #40]
     3bc:	cmp	x0, #0x0
     3c0:	b.ne	3cc <grub_mod_init-0xc84>  // b.any
     3c4:	mov	x0, #0x0                   	// #0
     3c8:	b	5c8 <grub_mod_init-0xa88>
     3cc:	ldr	x1, [sp, #40]
     3d0:	ldr	x0, [sp, #48]
     3d4:	add	x0, x1, x0
     3d8:	sub	x0, x0, #0x1
     3dc:	lsr	x0, x0, #9
     3e0:	mov	w1, w0
     3e4:	ldr	x0, [sp, #72]
     3e8:	ldr	x0, [x0, #112]
     3ec:	udiv	x0, x1, x0
     3f0:	add	w0, w0, #0x1
     3f4:	str	w0, [sp, #100]
     3f8:	ldr	x0, [sp, #48]
     3fc:	mov	w1, w0
     400:	ldr	x0, [sp, #72]
     404:	ldr	x0, [x0, #112]
     408:	lsl	x0, x0, #9
     40c:	udiv	x0, x1, x0
     410:	str	w0, [sp, #96]
     414:	ldr	x0, [sp, #48]
     418:	mov	w0, w0
     41c:	ldr	x1, [sp, #72]
     420:	ldr	x1, [x1, #112]
     424:	lsl	x1, x1, #9
     428:	udiv	x2, x0, x1
     42c:	mul	x1, x2, x1
     430:	sub	x0, x0, x1
     434:	str	w0, [sp, #92]
     438:	ldr	w0, [sp, #96]
     43c:	str	w0, [sp, #124]
     440:	b	5b4 <grub_mod_init-0xa9c>
     444:	ldr	x0, [sp, #72]
     448:	ldr	x0, [x0, #112]
     44c:	lsl	x0, x0, #9
     450:	str	x0, [sp, #112]
     454:	str	xzr, [sp, #104]
     458:	ldr	w1, [sp, #124]
     45c:	ldr	x0, [sp, #72]
     460:	bl	ec <grub_mod_init-0xf64>
     464:	str	w0, [sp, #88]
     468:	adrp	x0, 0 <grub_mod_init-0x1050>
     46c:	add	x0, x0, #0x0
     470:	ldr	x0, [x0]
     474:	ldr	w0, [x0]
     478:	cmp	w0, #0x0
     47c:	b.eq	488 <grub_mod_init-0xbc8>  // b.none
     480:	mov	x0, #0xffffffffffffffff    	// #-1
     484:	b	5c8 <grub_mod_init-0xa88>
     488:	ldr	w0, [sp, #100]
     48c:	sub	w0, w0, #0x1
     490:	ldr	w1, [sp, #124]
     494:	cmp	w1, w0
     498:	b.ne	4e8 <grub_mod_init-0xb68>  // b.any
     49c:	ldr	x0, [sp, #40]
     4a0:	mov	w1, w0
     4a4:	ldr	x0, [sp, #48]
     4a8:	add	w0, w1, w0
     4ac:	mov	w0, w0
     4b0:	ldr	x1, [sp, #72]
     4b4:	ldr	x1, [x1, #112]
     4b8:	lsl	x1, x1, #9
     4bc:	udiv	x2, x0, x1
     4c0:	mul	x1, x2, x1
     4c4:	sub	x0, x0, x1
     4c8:	str	x0, [sp, #112]
     4cc:	ldr	x0, [sp, #112]
     4d0:	cmp	x0, #0x0
     4d4:	b.ne	4e8 <grub_mod_init-0xb68>  // b.any
     4d8:	ldr	x0, [sp, #72]
     4dc:	ldr	x0, [x0, #112]
     4e0:	lsl	x0, x0, #9
     4e4:	str	x0, [sp, #112]
     4e8:	ldr	w1, [sp, #124]
     4ec:	ldr	w0, [sp, #96]
     4f0:	cmp	w1, w0
     4f4:	b.ne	510 <grub_mod_init-0xb40>  // b.any
     4f8:	ldr	w0, [sp, #92]
     4fc:	str	x0, [sp, #104]
     500:	ldr	x1, [sp, #112]
     504:	ldr	x0, [sp, #104]
     508:	sub	x0, x1, x0
     50c:	str	x0, [sp, #112]
     510:	ldr	x0, [sp, #72]
     514:	ldr	x0, [x0, #96]
     518:	ldr	x1, [sp, #64]
     51c:	str	x1, [x0, #48]
     520:	ldr	x0, [sp, #72]
     524:	ldr	x0, [x0, #96]
     528:	ldr	x1, [sp, #56]
     52c:	str	x1, [x0, #56]
     530:	ldr	x0, [sp, #72]
     534:	ldr	x19, [x0, #96]
     538:	ldr	w1, [sp, #88]
     53c:	ldr	x0, [sp, #72]
     540:	bl	58 <grub_mod_init-0xff8>
     544:	ldr	x4, [sp, #32]
     548:	ldr	x3, [sp, #112]
     54c:	ldr	x2, [sp, #104]
     550:	mov	x1, x0
     554:	mov	x0, x19
     558:	bl	0 <grub_disk_read>
     55c:	ldr	x0, [sp, #72]
     560:	ldr	x0, [x0, #96]
     564:	str	xzr, [x0, #48]
     568:	adrp	x0, 0 <grub_mod_init-0x1050>
     56c:	add	x0, x0, #0x0
     570:	ldr	x0, [x0]
     574:	ldr	w0, [x0]
     578:	cmp	w0, #0x0
     57c:	b.eq	588 <grub_mod_init-0xac8>  // b.none
     580:	mov	x0, #0xffffffffffffffff    	// #-1
     584:	b	5c8 <grub_mod_init-0xa88>
     588:	ldr	x0, [sp, #72]
     58c:	ldr	x0, [x0, #112]
     590:	lsl	x1, x0, #9
     594:	ldr	x0, [sp, #104]
     598:	sub	x0, x1, x0
     59c:	ldr	x1, [sp, #32]
     5a0:	add	x0, x1, x0
     5a4:	str	x0, [sp, #32]
     5a8:	ldr	w0, [sp, #124]
     5ac:	add	w0, w0, #0x1
     5b0:	str	w0, [sp, #124]
     5b4:	ldr	w1, [sp, #124]
     5b8:	ldr	w0, [sp, #100]
     5bc:	cmp	w1, w0
     5c0:	b.cc	444 <grub_mod_init-0xc0c>  // b.lo, b.ul, b.last
     5c4:	ldr	x0, [sp, #40]
     5c8:	ldr	x19, [sp, #16]
     5cc:	ldp	x29, x30, [sp], #128
     5d0:	ret
     5d4:	nop
	...
     5e8:	stp	x29, x30, [sp, #-64]!
     5ec:	mov	x29, sp
     5f0:	str	x0, [sp, #24]
     5f4:	strh	w1, [sp, #22]
     5f8:	ldr	x0, [sp, #24]
     5fc:	str	x0, [sp, #56]
     600:	ldr	x0, [sp, #24]
     604:	ldrh	w1, [sp, #22]
     608:	strh	w1, [x0, #88]
     60c:	ldrh	w0, [sp, #22]
     610:	sub	w0, w0, #0x1
     614:	strh	w0, [sp, #22]
     618:	ldr	x0, [sp, #56]
     61c:	ldrh	w0, [x0, #4]
     620:	add	w0, w0, #0x2
     624:	ldr	x1, [sp, #56]
     628:	ldrh	w1, [x1, #6]
     62c:	add	w0, w0, w1
     630:	mov	w1, w0
     634:	ldr	x0, [sp, #24]
     638:	bl	58 <grub_mod_init-0xff8>
     63c:	str	x0, [sp, #48]
     640:	ldrh	w0, [sp, #22]
     644:	lsr	w0, w0, #3
     648:	and	w0, w0, #0xffff
     64c:	and	x0, x0, #0xffff
     650:	ldr	x1, [sp, #48]
     654:	add	x0, x1, x0
     658:	str	x0, [sp, #48]
     65c:	ldrh	w0, [sp, #22]
     660:	and	w0, w0, #0x7
     664:	lsl	w0, w0, #6
     668:	str	w0, [sp, #44]
     66c:	ldr	x0, [sp, #24]
     670:	ldr	x5, [x0, #96]
     674:	ldrsw	x1, [sp, #44]
     678:	ldr	x0, [sp, #24]
     67c:	add	x0, x0, #0x14
     680:	mov	x4, x0
     684:	mov	x3, #0x40                  	// #64
     688:	mov	x2, x1
     68c:	ldr	x1, [sp, #48]
     690:	mov	x0, x5
     694:	bl	0 <grub_disk_read>
     698:	mov	w0, #0x0                   	// #0
     69c:	ldp	x29, x30, [sp], #64
     6a0:	ret
     6a4:	stp	x29, x30, [sp, #-48]!
     6a8:	mov	x29, sp
     6ac:	str	x0, [sp, #24]
     6b0:	strh	w1, [sp, #22]
     6b4:	ldr	x0, [sp, #24]
     6b8:	ldr	w0, [x0, #28]
     6bc:	mov	w0, w0
     6c0:	str	x0, [sp, #40]
     6c4:	ldr	x0, [sp, #24]
     6c8:	ldr	w0, [x0, #92]
     6cc:	add	w1, w0, #0x1
     6d0:	ldr	x0, [sp, #24]
     6d4:	str	w1, [x0, #92]
     6d8:	ldr	x0, [sp, #24]
     6dc:	ldr	w0, [x0, #92]
     6e0:	cmp	w0, #0x8
     6e4:	b.le	700 <grub_mod_init-0x950>
     6e8:	adrp	x0, 0 <grub_mod_init-0x1050>
     6ec:	add	x0, x0, #0x0
     6f0:	ldr	x1, [x0]
     6f4:	mov	w0, #0x19                  	// #25
     6f8:	bl	0 <grub_error>
     6fc:	b	7d4 <grub_mod_init-0x87c>
     700:	ldr	x0, [sp, #40]
     704:	add	x0, x0, #0x1
     708:	bl	0 <grub_malloc>
     70c:	str	x0, [sp, #32]
     710:	ldr	x0, [sp, #32]
     714:	cmp	x0, #0x0
     718:	b.ne	730 <grub_mod_init-0x920>  // b.any
     71c:	adrp	x0, 0 <grub_mod_init-0x1050>
     720:	add	x0, x0, #0x0
     724:	ldr	x0, [x0]
     728:	ldr	w0, [x0]
     72c:	b	7d4 <grub_mod_init-0x87c>
     730:	ldr	x5, [sp, #32]
     734:	ldr	x4, [sp, #40]
     738:	mov	x3, #0x0                   	// #0
     73c:	mov	x2, #0x0                   	// #0
     740:	mov	x1, #0x0                   	// #0
     744:	ldr	x0, [sp, #24]
     748:	bl	328 <grub_mod_init-0xd28>
     74c:	cmp	x0, #0x0
     750:	b.ge	768 <grub_mod_init-0x8e8>  // b.tcont
     754:	adrp	x0, 0 <grub_mod_init-0x1050>
     758:	add	x0, x0, #0x0
     75c:	ldr	x0, [x0]
     760:	ldr	w0, [x0]
     764:	b	7d4 <grub_mod_init-0x87c>
     768:	ldr	x1, [sp, #32]
     76c:	ldr	x0, [sp, #40]
     770:	add	x0, x1, x0
     774:	strb	wzr, [x0]
     778:	ldr	x0, [sp, #32]
     77c:	ldrb	w0, [x0]
     780:	cmp	w0, #0x2f
     784:	b.ne	790 <grub_mod_init-0x8c0>  // b.any
     788:	mov	w0, #0x1                   	// #1
     78c:	strh	w0, [sp, #22]
     790:	ldrh	w1, [sp, #22]
     794:	ldr	x0, [sp, #24]
     798:	bl	5e8 <grub_mod_init-0xa68>
     79c:	cmp	w0, #0x0
     7a0:	b.eq	7b8 <grub_mod_init-0x898>  // b.none
     7a4:	adrp	x0, 0 <grub_mod_init-0x1050>
     7a8:	add	x0, x0, #0x0
     7ac:	ldr	x0, [x0]
     7b0:	ldr	w0, [x0]
     7b4:	b	7d4 <grub_mod_init-0x87c>
     7b8:	ldr	x1, [sp, #32]
     7bc:	ldr	x0, [sp, #24]
     7c0:	bl	7f0 <grub_mod_init-0x860>
     7c4:	adrp	x0, 0 <grub_mod_init-0x1050>
     7c8:	add	x0, x0, #0x0
     7cc:	ldr	x0, [x0]
     7d0:	ldr	w0, [x0]
     7d4:	ldp	x29, x30, [sp], #48
     7d8:	ret
     7dc:	nop
	...
     7f0:	stp	x29, x30, [sp, #-96]!
     7f4:	mov	x29, sp
     7f8:	str	x0, [sp, #24]
     7fc:	str	x1, [sp, #16]
     800:	ldr	x0, [sp, #16]
     804:	str	x0, [sp, #80]
     808:	str	wzr, [sp, #76]
     80c:	ldr	x0, [sp, #80]
     810:	str	x0, [sp, #88]
     814:	b	824 <grub_mod_init-0x82c>
     818:	ldr	x0, [sp, #88]
     81c:	add	x0, x0, #0x1
     820:	str	x0, [sp, #88]
     824:	ldr	x0, [sp, #88]
     828:	ldrb	w0, [x0]
     82c:	cmp	w0, #0x2f
     830:	b.eq	818 <grub_mod_init-0x838>  // b.none
     834:	ldr	x0, [sp, #88]
     838:	ldrb	w0, [x0]
     83c:	cmp	w0, #0x0
     840:	b.ne	84c <grub_mod_init-0x804>  // b.any
     844:	mov	w0, #0x0                   	// #0
     848:	b	a68 <grub_mod_init-0x5e8>
     84c:	ldr	x0, [sp, #24]
     850:	ldrh	w0, [x0, #20]
     854:	and	w0, w0, #0x4000
     858:	cmp	w0, #0x0
     85c:	b.ne	878 <grub_mod_init-0x7d8>  // b.any
     860:	adrp	x0, 0 <grub_mod_init-0x1050>
     864:	add	x0, x0, #0x0
     868:	ldr	x1, [x0]
     86c:	mov	w0, #0x4                   	// #4
     870:	bl	0 <grub_error>
     874:	b	a68 <grub_mod_init-0x5e8>
     878:	ldr	x0, [sp, #88]
     87c:	str	x0, [sp, #80]
     880:	b	890 <grub_mod_init-0x7c0>
     884:	ldr	x0, [sp, #80]
     888:	add	x0, x0, #0x1
     88c:	str	x0, [sp, #80]
     890:	ldr	x0, [sp, #80]
     894:	ldrb	w0, [x0]
     898:	cmp	w0, #0x0
     89c:	b.eq	8b0 <grub_mod_init-0x7a0>  // b.none
     8a0:	ldr	x0, [sp, #80]
     8a4:	ldrb	w0, [x0]
     8a8:	cmp	w0, #0x2f
     8ac:	b.ne	884 <grub_mod_init-0x7cc>  // b.any
     8b0:	str	wzr, [sp, #76]
     8b4:	ldr	x0, [sp, #24]
     8b8:	ldr	w0, [x0, #28]
     8bc:	ldr	w1, [sp, #76]
     8c0:	cmp	w1, w0
     8c4:	b.cc	8f4 <grub_mod_init-0x75c>  // b.lo, b.ul, b.last
     8c8:	ldr	x2, [sp, #16]
     8cc:	adrp	x0, 0 <grub_mod_init-0x1050>
     8d0:	add	x0, x0, #0x0
     8d4:	ldr	x1, [x0]
     8d8:	mov	w0, #0x5                   	// #5
     8dc:	bl	0 <grub_error>
     8e0:	adrp	x0, 0 <grub_mod_init-0x1050>
     8e4:	add	x0, x0, #0x0
     8e8:	ldr	x0, [x0]
     8ec:	ldr	w0, [x0]
     8f0:	b	a68 <grub_mod_init-0x5e8>
     8f4:	ldr	w0, [sp, #76]
     8f8:	add	x1, sp, #0x48
     8fc:	mov	x5, x1
     900:	mov	x4, #0x2                   	// #2
     904:	mov	x3, x0
     908:	mov	x2, #0x0                   	// #0
     90c:	mov	x1, #0x0                   	// #0
     910:	ldr	x0, [sp, #24]
     914:	bl	328 <grub_mod_init-0xd28>
     918:	cmp	x0, #0x0
     91c:	b.ge	934 <grub_mod_init-0x71c>  // b.tcont
     920:	adrp	x0, 0 <grub_mod_init-0x1050>
     924:	add	x0, x0, #0x0
     928:	ldr	x0, [x0]
     92c:	ldr	w0, [x0]
     930:	b	a68 <grub_mod_init-0x5e8>
     934:	ldr	w0, [sp, #76]
     938:	add	x1, x0, #0x2
     93c:	ldr	x0, [sp, #24]
     940:	ldr	w0, [x0, #104]
     944:	sxtw	x0, w0
     948:	add	x2, sp, #0x28
     94c:	mov	x5, x2
     950:	mov	x4, x0
     954:	mov	x3, x1
     958:	mov	x2, #0x0                   	// #0
     95c:	mov	x1, #0x0                   	// #0
     960:	ldr	x0, [sp, #24]
     964:	bl	328 <grub_mod_init-0xd28>
     968:	cmp	x0, #0x0
     96c:	b.ge	984 <grub_mod_init-0x6cc>  // b.tcont
     970:	adrp	x0, 0 <grub_mod_init-0x1050>
     974:	add	x0, x0, #0x0
     978:	ldr	x0, [x0]
     97c:	ldr	w0, [x0]
     980:	b	a68 <grub_mod_init-0x5e8>
     984:	ldr	x0, [sp, #24]
     988:	ldr	w0, [x0, #104]
     98c:	mov	w1, w0
     990:	ldr	w0, [sp, #76]
     994:	add	w0, w1, w0
     998:	add	w0, w0, #0x2
     99c:	str	w0, [sp, #76]
     9a0:	ldr	x0, [sp, #24]
     9a4:	ldr	w0, [x0, #104]
     9a8:	sxtw	x0, w0
     9ac:	add	x1, sp, #0x28
     9b0:	strb	wzr, [x1, x0]
     9b4:	ldr	x1, [sp, #80]
     9b8:	ldr	x0, [sp, #88]
     9bc:	sub	x0, x1, x0
     9c0:	mov	x1, x0
     9c4:	add	x0, sp, #0x28
     9c8:	mov	x2, x1
     9cc:	mov	x1, x0
     9d0:	ldr	x0, [sp, #88]
     9d4:	bl	0 <grub_strncmp>
     9d8:	cmp	w0, #0x0
     9dc:	b.ne	8b4 <grub_mod_init-0x79c>  // b.any
     9e0:	ldr	x1, [sp, #80]
     9e4:	ldr	x0, [sp, #88]
     9e8:	sub	x0, x1, x0
     9ec:	add	x1, sp, #0x28
     9f0:	ldrb	w0, [x1, x0]
     9f4:	cmp	w0, #0x0
     9f8:	b.ne	8b4 <grub_mod_init-0x79c>  // b.any
     9fc:	ldr	x0, [sp, #24]
     a00:	ldrh	w0, [x0, #88]
     a04:	strh	w0, [sp, #74]
     a08:	ldrh	w0, [sp, #72]
     a0c:	mov	w1, w0
     a10:	ldr	x0, [sp, #24]
     a14:	bl	5e8 <grub_mod_init-0xa68>
     a18:	ldr	x0, [sp, #24]
     a1c:	ldrh	w0, [x0, #20]
     a20:	mov	w1, w0
     a24:	mov	w0, #0xa000                	// #40960
     a28:	and	w0, w1, w0
     a2c:	cmp	w0, #0xa, lsl #12
     a30:	b.ne	80c <grub_mod_init-0x844>  // b.any
     a34:	ldrh	w1, [sp, #74]
     a38:	ldr	x0, [sp, #24]
     a3c:	bl	6a4 <grub_mod_init-0x9ac>
     a40:	adrp	x0, 0 <grub_mod_init-0x1050>
     a44:	add	x0, x0, #0x0
     a48:	ldr	x0, [x0]
     a4c:	ldr	w0, [x0]
     a50:	cmp	w0, #0x0
     a54:	b.eq	80c <grub_mod_init-0x844>  // b.none
     a58:	adrp	x0, 0 <grub_mod_init-0x1050>
     a5c:	add	x0, x0, #0x0
     a60:	ldr	x0, [x0]
     a64:	ldr	w0, [x0]
     a68:	ldp	x29, x30, [sp], #96
     a6c:	ret
	...
     a88:	stp	x29, x30, [sp, #-48]!
     a8c:	mov	x29, sp
     a90:	str	x0, [sp, #24]
     a94:	mov	x0, #0x78                  	// #120
     a98:	bl	0 <grub_malloc>
     a9c:	str	x0, [sp, #40]
     aa0:	ldr	x0, [sp, #40]
     aa4:	cmp	x0, #0x0
     aa8:	b.ne	ab4 <grub_mod_init-0x59c>  // b.any
     aac:	mov	x0, #0x0                   	// #0
     ab0:	b	bd8 <grub_mod_init-0x478>
     ab4:	ldr	x0, [sp, #40]
     ab8:	mov	x4, x0
     abc:	mov	x3, #0x14                  	// #20
     ac0:	mov	x2, #0x0                   	// #0
     ac4:	mov	x1, #0x2                   	// #2
     ac8:	ldr	x0, [sp, #24]
     acc:	bl	0 <grub_disk_read>
     ad0:	adrp	x0, 0 <grub_mod_init-0x1050>
     ad4:	add	x0, x0, #0x0
     ad8:	ldr	x0, [x0]
     adc:	ldr	w0, [x0]
     ae0:	cmp	w0, #0x0
     ae4:	b.ne	b9c <grub_mod_init-0x4b4>  // b.any
     ae8:	ldr	x0, [sp, #40]
     aec:	ldrh	w1, [x0, #16]
     af0:	mov	w0, #0x2468                	// #9320
     af4:	cmp	w1, w0
     af8:	b.ne	b0c <grub_mod_init-0x544>  // b.any
     afc:	ldr	x0, [sp, #40]
     b00:	mov	w1, #0xe                   	// #14
     b04:	str	w1, [x0, #104]
     b08:	b	b2c <grub_mod_init-0x524>
     b0c:	ldr	x0, [sp, #40]
     b10:	ldrh	w1, [x0, #16]
     b14:	mov	w0, #0x2478                	// #9336
     b18:	cmp	w1, w0
     b1c:	b.ne	ba4 <grub_mod_init-0x4ac>  // b.any
     b20:	ldr	x0, [sp, #40]
     b24:	mov	w1, #0x1e                  	// #30
     b28:	str	w1, [x0, #104]
     b2c:	ldr	x0, [sp, #40]
     b30:	ldrh	w0, [x0, #10]
     b34:	cmp	w0, #0x13
     b38:	b.hi	bac <grub_mod_init-0x4a4>  // b.pmore
     b3c:	ldr	x0, [sp, #40]
     b40:	ldr	x1, [sp, #24]
     b44:	str	x1, [x0, #96]
     b48:	ldr	x0, [sp, #40]
     b4c:	str	wzr, [x0, #92]
     b50:	ldr	x0, [sp, #40]
     b54:	mov	x1, #0x2                   	// #2
     b58:	str	x1, [x0, #112]
     b5c:	ldr	x0, [sp, #40]
     b60:	ldr	x1, [x0, #112]
     b64:	ldr	x0, [sp, #40]
     b68:	ldrh	w0, [x0, #10]
     b6c:	add	w0, w0, #0x9
     b70:	lsl	x0, x1, x0
     b74:	lsr	x0, x0, #2
     b78:	mov	w1, w0
     b7c:	ldr	x0, [sp, #40]
     b80:	str	w1, [x0, #84]
     b84:	ldr	x0, [sp, #40]
     b88:	ldr	w0, [x0, #84]
     b8c:	cmp	w0, #0x0
     b90:	b.eq	bb4 <grub_mod_init-0x49c>  // b.none
     b94:	ldr	x0, [sp, #40]
     b98:	b	bd8 <grub_mod_init-0x478>
     b9c:	nop
     ba0:	b	bb8 <grub_mod_init-0x498>
     ba4:	nop
     ba8:	b	bb8 <grub_mod_init-0x498>
     bac:	nop
     bb0:	b	bb8 <grub_mod_init-0x498>
     bb4:	nop
     bb8:	ldr	x0, [sp, #40]
     bbc:	bl	0 <grub_free>
     bc0:	adrp	x0, 0 <grub_mod_init-0x1050>
     bc4:	add	x0, x0, #0x0
     bc8:	ldr	x1, [x0]
     bcc:	mov	w0, #0x9                   	// #9
     bd0:	bl	0 <grub_error>
     bd4:	mov	x0, #0x0                   	// #0
     bd8:	ldp	x29, x30, [sp], #48
     bdc:	ret
	...
     bf0:	stp	x29, x30, [sp, #-128]!
     bf4:	mov	x29, sp
     bf8:	str	x0, [sp, #40]
     bfc:	str	x1, [sp, #32]
     c00:	str	x2, [sp, #24]
     c04:	str	x3, [sp, #16]
     c08:	str	xzr, [sp, #112]
     c0c:	str	wzr, [sp, #124]
     c10:	ldr	x0, [sp, #40]
     c14:	ldr	x0, [x0]
     c18:	bl	a88 <grub_mod_init-0x5c8>
     c1c:	str	x0, [sp, #112]
     c20:	ldr	x0, [sp, #112]
     c24:	cmp	x0, #0x0
     c28:	b.ne	c40 <grub_mod_init-0x410>  // b.any
     c2c:	adrp	x0, 0 <grub_mod_init-0x1050>
     c30:	add	x0, x0, #0x0
     c34:	ldr	x0, [x0]
     c38:	ldr	w0, [x0]
     c3c:	b	e74 <grub_mod_init-0x1dc>
     c40:	mov	w1, #0x1                   	// #1
     c44:	ldr	x0, [sp, #112]
     c48:	bl	5e8 <grub_mod_init-0xa68>
     c4c:	adrp	x0, 0 <grub_mod_init-0x1050>
     c50:	add	x0, x0, #0x0
     c54:	ldr	x0, [x0]
     c58:	ldr	w0, [x0]
     c5c:	cmp	w0, #0x0
     c60:	b.ne	e48 <grub_mod_init-0x208>  // b.any
     c64:	ldr	x1, [sp, #32]
     c68:	ldr	x0, [sp, #112]
     c6c:	bl	7f0 <grub_mod_init-0x860>
     c70:	adrp	x0, 0 <grub_mod_init-0x1050>
     c74:	add	x0, x0, #0x0
     c78:	ldr	x0, [x0]
     c7c:	ldr	w0, [x0]
     c80:	cmp	w0, #0x0
     c84:	b.ne	e50 <grub_mod_init-0x200>  // b.any
     c88:	ldr	x0, [sp, #112]
     c8c:	ldrh	w0, [x0, #20]
     c90:	and	w0, w0, #0x4000
     c94:	cmp	w0, #0x0
     c98:	b.ne	e30 <grub_mod_init-0x220>  // b.any
     c9c:	adrp	x0, 0 <grub_mod_init-0x1050>
     ca0:	add	x0, x0, #0x0
     ca4:	ldr	x1, [x0]
     ca8:	mov	w0, #0x4                   	// #4
     cac:	bl	0 <grub_error>
     cb0:	b	e5c <grub_mod_init-0x1f4>
     cb4:	ldr	x0, [sp, #112]
     cb8:	ldrh	w0, [x0, #88]
     cbc:	strh	w0, [sp, #110]
     cc0:	add	x0, sp, #0x38
     cc4:	mov	x2, #0x10                  	// #16
     cc8:	mov	w1, #0x0                   	// #0
     ccc:	bl	0 <grub_memset>
     cd0:	ldr	w0, [sp, #124]
     cd4:	add	x1, sp, #0x6c
     cd8:	mov	x5, x1
     cdc:	mov	x4, #0x2                   	// #2
     ce0:	mov	x3, x0
     ce4:	mov	x2, #0x0                   	// #0
     ce8:	mov	x1, #0x0                   	// #0
     cec:	ldr	x0, [sp, #112]
     cf0:	bl	328 <grub_mod_init-0xd28>
     cf4:	cmp	x0, #0x0
     cf8:	b.ge	d10 <grub_mod_init-0x340>  // b.tcont
     cfc:	adrp	x0, 0 <grub_mod_init-0x1050>
     d00:	add	x0, x0, #0x0
     d04:	ldr	x0, [x0]
     d08:	ldr	w0, [x0]
     d0c:	b	e74 <grub_mod_init-0x1dc>
     d10:	ldr	w0, [sp, #124]
     d14:	add	x1, x0, #0x2
     d18:	ldr	x0, [sp, #112]
     d1c:	ldr	w0, [x0, #104]
     d20:	sxtw	x0, w0
     d24:	add	x2, sp, #0x48
     d28:	mov	x5, x2
     d2c:	mov	x4, x0
     d30:	mov	x3, x1
     d34:	mov	x2, #0x0                   	// #0
     d38:	mov	x1, #0x0                   	// #0
     d3c:	ldr	x0, [sp, #112]
     d40:	bl	328 <grub_mod_init-0xd28>
     d44:	cmp	x0, #0x0
     d48:	b.ge	d60 <grub_mod_init-0x2f0>  // b.tcont
     d4c:	adrp	x0, 0 <grub_mod_init-0x1050>
     d50:	add	x0, x0, #0x0
     d54:	ldr	x0, [x0]
     d58:	ldr	w0, [x0]
     d5c:	b	e74 <grub_mod_init-0x1dc>
     d60:	ldr	x0, [sp, #112]
     d64:	ldr	w0, [x0, #104]
     d68:	sxtw	x0, w0
     d6c:	add	x1, sp, #0x48
     d70:	strb	wzr, [x1, x0]
     d74:	ldrh	w0, [sp, #108]
     d78:	cmp	w0, #0x0
     d7c:	b.ne	da0 <grub_mod_init-0x2b0>  // b.any
     d80:	ldr	x0, [sp, #112]
     d84:	ldr	w0, [x0, #104]
     d88:	mov	w1, w0
     d8c:	ldr	w0, [sp, #124]
     d90:	add	w0, w1, w0
     d94:	add	w0, w0, #0x2
     d98:	str	w0, [sp, #124]
     d9c:	b	e30 <grub_mod_init-0x220>
     da0:	ldrh	w0, [sp, #108]
     da4:	mov	w1, w0
     da8:	ldr	x0, [sp, #112]
     dac:	bl	5e8 <grub_mod_init-0xa68>
     db0:	ldr	x0, [sp, #112]
     db4:	ldrh	w0, [x0, #20]
     db8:	and	w0, w0, #0x4000
     dbc:	cmp	w0, #0x0
     dc0:	cset	w0, ne  // ne = any
     dc4:	and	w1, w0, #0xff
     dc8:	ldrb	w0, [sp, #56]
     dcc:	bfxil	w0, w1, #0, #1
     dd0:	strb	w0, [sp, #56]
     dd4:	ldrb	w0, [sp, #56]
     dd8:	orr	w0, w0, #0x2
     ddc:	strb	w0, [sp, #56]
     de0:	ldr	x0, [sp, #112]
     de4:	ldr	w0, [x0, #36]
     de8:	str	w0, [sp, #60]
     dec:	add	x1, sp, #0x38
     df0:	add	x0, sp, #0x48
     df4:	ldr	x3, [sp, #24]
     df8:	ldr	x2, [sp, #16]
     dfc:	blr	x3
     e00:	cmp	w0, #0x0
     e04:	b.ne	e58 <grub_mod_init-0x1f8>  // b.any
     e08:	ldrh	w1, [sp, #110]
     e0c:	ldr	x0, [sp, #112]
     e10:	bl	5e8 <grub_mod_init-0xa68>
     e14:	ldr	x0, [sp, #112]
     e18:	ldr	w0, [x0, #104]
     e1c:	mov	w1, w0
     e20:	ldr	w0, [sp, #124]
     e24:	add	w0, w1, w0
     e28:	add	w0, w0, #0x2
     e2c:	str	w0, [sp, #124]
     e30:	ldr	x0, [sp, #112]
     e34:	ldr	w0, [x0, #28]
     e38:	ldr	w1, [sp, #124]
     e3c:	cmp	w1, w0
     e40:	b.cc	cb4 <grub_mod_init-0x39c>  // b.lo, b.ul, b.last
     e44:	b	e5c <grub_mod_init-0x1f4>
     e48:	nop
     e4c:	b	e5c <grub_mod_init-0x1f4>
     e50:	nop
     e54:	b	e5c <grub_mod_init-0x1f4>
     e58:	nop
     e5c:	ldr	x0, [sp, #112]
     e60:	bl	0 <grub_free>
     e64:	adrp	x0, 0 <grub_mod_init-0x1050>
     e68:	add	x0, x0, #0x0
     e6c:	ldr	x0, [x0]
     e70:	ldr	w0, [x0]
     e74:	ldp	x29, x30, [sp], #128
     e78:	ret
     e7c:	nop
	...
     e90:	stp	x29, x30, [sp, #-48]!
     e94:	mov	x29, sp
     e98:	str	x0, [sp, #24]
     e9c:	str	x1, [sp, #16]
     ea0:	ldr	x0, [sp, #24]
     ea4:	ldr	x0, [x0, #8]
     ea8:	ldr	x0, [x0]
     eac:	bl	a88 <grub_mod_init-0x5c8>
     eb0:	str	x0, [sp, #40]
     eb4:	ldr	x0, [sp, #40]
     eb8:	cmp	x0, #0x0
     ebc:	b.ne	ed4 <grub_mod_init-0x17c>  // b.any
     ec0:	adrp	x0, 0 <grub_mod_init-0x1050>
     ec4:	add	x0, x0, #0x0
     ec8:	ldr	x0, [x0]
     ecc:	ldr	w0, [x0]
     ed0:	b	fc0 <grub_mod_init-0x90>
     ed4:	mov	w1, #0x1                   	// #1
     ed8:	ldr	x0, [sp, #40]
     edc:	bl	5e8 <grub_mod_init-0xa68>
     ee0:	adrp	x0, 0 <grub_mod_init-0x1050>
     ee4:	add	x0, x0, #0x0
     ee8:	ldr	x0, [x0]
     eec:	ldr	w0, [x0]
     ef0:	cmp	w0, #0x0
     ef4:	b.eq	f14 <grub_mod_init-0x13c>  // b.none
     ef8:	ldr	x0, [sp, #40]
     efc:	bl	0 <grub_free>
     f00:	adrp	x0, 0 <grub_mod_init-0x1050>
     f04:	add	x0, x0, #0x0
     f08:	ldr	x0, [x0]
     f0c:	ldr	w0, [x0]
     f10:	b	fc0 <grub_mod_init-0x90>
     f14:	ldr	x0, [sp, #16]
     f18:	cmp	x0, #0x0
     f1c:	b.eq	f30 <grub_mod_init-0x120>  // b.none
     f20:	ldr	x0, [sp, #16]
     f24:	ldrb	w0, [x0]
     f28:	cmp	w0, #0x2f
     f2c:	b.eq	f5c <grub_mod_init-0xf4>  // b.none
     f30:	ldr	x2, [sp, #16]
     f34:	adrp	x0, 0 <grub_mod_init-0x1050>
     f38:	add	x0, x0, #0x0
     f3c:	ldr	x1, [x0]
     f40:	mov	w0, #0x7                   	// #7
     f44:	bl	0 <grub_error>
     f48:	adrp	x0, 0 <grub_mod_init-0x1050>
     f4c:	add	x0, x0, #0x0
     f50:	ldr	x0, [x0]
     f54:	ldr	w0, [x0]
     f58:	b	fc0 <grub_mod_init-0x90>
     f5c:	ldr	x1, [sp, #16]
     f60:	ldr	x0, [sp, #40]
     f64:	bl	7f0 <grub_mod_init-0x860>
     f68:	adrp	x0, 0 <grub_mod_init-0x1050>
     f6c:	add	x0, x0, #0x0
     f70:	ldr	x0, [x0]
     f74:	ldr	w0, [x0]
     f78:	cmp	w0, #0x0
     f7c:	b.eq	f9c <grub_mod_init-0xb4>  // b.none
     f80:	ldr	x0, [sp, #40]
     f84:	bl	0 <grub_free>
     f88:	adrp	x0, 0 <grub_mod_init-0x1050>
     f8c:	add	x0, x0, #0x0
     f90:	ldr	x0, [x0]
     f94:	ldr	w0, [x0]
     f98:	b	fc0 <grub_mod_init-0x90>
     f9c:	ldr	x0, [sp, #24]
     fa0:	ldr	x1, [sp, #40]
     fa4:	str	x1, [x0, #80]
     fa8:	ldr	x0, [sp, #40]
     fac:	ldr	w0, [x0, #28]
     fb0:	mov	w1, w0
     fb4:	ldr	x0, [sp, #24]
     fb8:	str	x1, [x0, #64]
     fbc:	mov	w0, #0x0                   	// #0
     fc0:	ldp	x29, x30, [sp], #48
     fc4:	ret
	...
     fd8:	stp	x29, x30, [sp, #-64]!
     fdc:	mov	x29, sp
     fe0:	str	x0, [sp, #40]
     fe4:	str	x1, [sp, #32]
     fe8:	str	x2, [sp, #24]
     fec:	ldr	x0, [sp, #40]
     ff0:	ldr	x0, [x0, #80]
     ff4:	str	x0, [sp, #56]
     ff8:	ldr	x0, [sp, #40]
     ffc:	ldr	x1, [x0, #88]
    1000:	ldr	x0, [sp, #40]
    1004:	ldr	x2, [x0, #96]
    1008:	ldr	x0, [sp, #40]
    100c:	ldr	x0, [x0, #24]
    1010:	ldr	x5, [sp, #32]
    1014:	ldr	x4, [sp, #24]
    1018:	mov	x3, x0
    101c:	ldr	x0, [sp, #56]
    1020:	bl	328 <grub_mod_init-0xd28>
    1024:	ldp	x29, x30, [sp], #64
    1028:	ret
    102c:	stp	x29, x30, [sp, #-32]!
    1030:	mov	x29, sp
    1034:	str	x0, [sp, #24]
    1038:	ldr	x0, [sp, #24]
    103c:	ldr	x0, [x0, #80]
    1040:	bl	0 <grub_free>
    1044:	mov	w0, #0x0                   	// #0
    1048:	ldp	x29, x30, [sp], #32
    104c:	ret

0000000000001050 <grub_mod_init>:
    1050:	stp	x29, x30, [sp, #-32]!
    1054:	mov	x29, sp
    1058:	str	x0, [sp, #24]
    105c:	adrp	x0, 0 <grub_mod_init-0x1050>
    1060:	add	x0, x0, #0x0
    1064:	ldr	x0, [x0]
    1068:	bl	0 <grub_mod_init-0x1050>
    106c:	adrp	x0, 0 <grub_mod_init-0x1050>
    1070:	add	x0, x0, #0x0
    1074:	ldr	x0, [x0]
    1078:	ldr	x1, [sp, #24]
    107c:	str	x1, [x0]
    1080:	nop
    1084:	ldp	x29, x30, [sp], #32
    1088:	ret
    108c:	nop
	...

00000000000010a0 <grub_mod_fini>:
    10a0:	stp	x29, x30, [sp, #-16]!
    10a4:	mov	x29, sp
    10a8:	adrp	x0, 0 <grub_mod_init-0x1050>
    10ac:	add	x0, x0, #0x0
    10b0:	ldr	x0, [x0]
    10b4:	bl	38 <grub_mod_init-0x1018>
    10b8:	nop
    10bc:	ldp	x29, x30, [sp], #16
    10c0:	ret
    10c4:	nop
	...
