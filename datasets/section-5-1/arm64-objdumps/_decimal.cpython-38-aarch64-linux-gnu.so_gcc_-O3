
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006438 <.init>:
    6438:	stp	x29, x30, [sp, #-16]!
    643c:	mov	x29, sp
    6440:	bl	6aa0 <PyFloat_FromString@plt+0x10>
    6444:	ldp	x29, x30, [sp], #16
    6448:	ret

Disassembly of section .plt:

0000000000006450 <memcpy@plt-0x20>:
    6450:	stp	x16, x30, [sp, #-16]!
    6454:	adrp	x16, 62000 <PyInit__decimal@@Base+0x45dc0>
    6458:	ldr	x17, [x16, #4088]
    645c:	add	x16, x16, #0xff8
    6460:	br	x17
    6464:	nop
    6468:	nop
    646c:	nop

0000000000006470 <memcpy@plt>:
    6470:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16]
    6478:	add	x16, x16, #0x0
    647c:	br	x17

0000000000006480 <PyUnicode_FromFormat@plt>:
    6480:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #8]
    6488:	add	x16, x16, #0x8
    648c:	br	x17

0000000000006490 <memmove@plt>:
    6490:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #16]
    6498:	add	x16, x16, #0x10
    649c:	br	x17

00000000000064a0 <PyList_New@plt>:
    64a0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #24]
    64a8:	add	x16, x16, #0x18
    64ac:	br	x17

00000000000064b0 <_PyUnicode_Ready@plt>:
    64b0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #32]
    64b8:	add	x16, x16, #0x20
    64bc:	br	x17

00000000000064c0 <PyDict_SetItemString@plt>:
    64c0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #40]
    64c8:	add	x16, x16, #0x28
    64cc:	br	x17

00000000000064d0 <strlen@plt>:
    64d0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #48]
    64d8:	add	x16, x16, #0x30
    64dc:	br	x17

00000000000064e0 <PyDict_Size@plt>:
    64e0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #56]
    64e8:	add	x16, x16, #0x38
    64ec:	br	x17

00000000000064f0 <mbstowcs@plt>:
    64f0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #64]
    64f8:	add	x16, x16, #0x40
    64fc:	br	x17

0000000000006500 <PyModule_AddIntConstant@plt>:
    6500:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #72]
    6508:	add	x16, x16, #0x48
    650c:	br	x17

0000000000006510 <raise@plt>:
    6510:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #80]
    6518:	add	x16, x16, #0x50
    651c:	br	x17

0000000000006520 <PyArg_ParseTupleAndKeywords@plt>:
    6520:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #88]
    6528:	add	x16, x16, #0x58
    652c:	br	x17

0000000000006530 <PyList_AsTuple@plt>:
    6530:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #96]
    6538:	add	x16, x16, #0x60
    653c:	br	x17

0000000000006540 <strtoll@plt>:
    6540:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #104]
    6548:	add	x16, x16, #0x68
    654c:	br	x17

0000000000006550 <PyObject_CallMethod@plt>:
    6550:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #112]
    6558:	add	x16, x16, #0x70
    655c:	br	x17

0000000000006560 <PyMem_Free@plt>:
    6560:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #120]
    6568:	add	x16, x16, #0x78
    656c:	br	x17

0000000000006570 <PyUnicode_FromWideChar@plt>:
    6570:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #128]
    6578:	add	x16, x16, #0x80
    657c:	br	x17

0000000000006580 <PyObject_GetAttrString@plt>:
    6580:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #136]
    6588:	add	x16, x16, #0x88
    658c:	br	x17

0000000000006590 <__cxa_finalize@plt>:
    6590:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #144]
    6598:	add	x16, x16, #0x90
    659c:	br	x17

00000000000065a0 <_PyLong_New@plt>:
    65a0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #152]
    65a8:	add	x16, x16, #0x98
    65ac:	br	x17

00000000000065b0 <fputc@plt>:
    65b0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #160]
    65b8:	add	x16, x16, #0xa0
    65bc:	br	x17

00000000000065c0 <PyUnicode_AsUTF8String@plt>:
    65c0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #168]
    65c8:	add	x16, x16, #0xa8
    65cc:	br	x17

00000000000065d0 <_Py_Dealloc@plt>:
    65d0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #176]
    65d8:	add	x16, x16, #0xb0
    65dc:	br	x17

00000000000065e0 <PyErr_NoMemory@plt>:
    65e0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #184]
    65e8:	add	x16, x16, #0xb8
    65ec:	br	x17

00000000000065f0 <PyErr_SetObject@plt>:
    65f0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #192]
    65f8:	add	x16, x16, #0xc0
    65fc:	br	x17

0000000000006600 <__ctype_tolower_loc@plt>:
    6600:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #200]
    6608:	add	x16, x16, #0xc8
    660c:	br	x17

0000000000006610 <snprintf@plt>:
    6610:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #208]
    6618:	add	x16, x16, #0xd0
    661c:	br	x17

0000000000006620 <log10@plt>:
    6620:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #216]
    6628:	add	x16, x16, #0xd8
    662c:	br	x17

0000000000006630 <localeconv@plt>:
    6630:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #224]
    6638:	add	x16, x16, #0xe0
    663c:	br	x17

0000000000006640 <malloc@plt>:
    6640:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #232]
    6648:	add	x16, x16, #0xe8
    664c:	br	x17

0000000000006650 <PyErr_SetString@plt>:
    6650:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #240]
    6658:	add	x16, x16, #0xf0
    665c:	br	x17

0000000000006660 <PyObject_IsInstance@plt>:
    6660:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #248]
    6668:	add	x16, x16, #0xf8
    666c:	br	x17

0000000000006670 <memset@plt>:
    6670:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #256]
    6678:	add	x16, x16, #0x100
    667c:	br	x17

0000000000006680 <PyContextVar_Set@plt>:
    6680:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #264]
    6688:	add	x16, x16, #0x108
    668c:	br	x17

0000000000006690 <PyObject_Free@plt>:
    6690:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #272]
    6698:	add	x16, x16, #0x110
    669c:	br	x17

00000000000066a0 <PyLong_FromSsize_t@plt>:
    66a0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #280]
    66a8:	add	x16, x16, #0x118
    66ac:	br	x17

00000000000066b0 <PyFloat_FromDouble@plt>:
    66b0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #288]
    66b8:	add	x16, x16, #0x120
    66bc:	br	x17

00000000000066c0 <PyType_Ready@plt>:
    66c0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #296]
    66c8:	add	x16, x16, #0x128
    66cc:	br	x17

00000000000066d0 <calloc@plt>:
    66d0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #304]
    66d8:	add	x16, x16, #0x130
    66dc:	br	x17

00000000000066e0 <PyLong_FromLong@plt>:
    66e0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #312]
    66e8:	add	x16, x16, #0x138
    66ec:	br	x17

00000000000066f0 <PyLong_AsSsize_t@plt>:
    66f0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #320]
    66f8:	add	x16, x16, #0x140
    66fc:	br	x17

0000000000006700 <_PyLong_GCD@plt>:
    6700:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #328]
    6708:	add	x16, x16, #0x148
    670c:	br	x17

0000000000006710 <PyErr_NewException@plt>:
    6710:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #336]
    6718:	add	x16, x16, #0x150
    671c:	br	x17

0000000000006720 <realloc@plt>:
    6720:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #344]
    6728:	add	x16, x16, #0x158
    672c:	br	x17

0000000000006730 <PyErr_Clear@plt>:
    6730:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #352]
    6738:	add	x16, x16, #0x160
    673c:	br	x17

0000000000006740 <PyContextVar_Get@plt>:
    6740:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #360]
    6748:	add	x16, x16, #0x168
    674c:	br	x17

0000000000006750 <PyBool_FromLong@plt>:
    6750:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #368]
    6758:	add	x16, x16, #0x170
    675c:	br	x17

0000000000006760 <PyContextVar_New@plt>:
    6760:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #376]
    6768:	add	x16, x16, #0x178
    676c:	br	x17

0000000000006770 <PyList_Append@plt>:
    6770:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #384]
    6778:	add	x16, x16, #0x180
    677c:	br	x17

0000000000006780 <__gmon_start__@plt>:
    6780:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #392]
    6788:	add	x16, x16, #0x188
    678c:	br	x17

0000000000006790 <PyObject_CallFunction@plt>:
    6790:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #400]
    6798:	add	x16, x16, #0x190
    679c:	br	x17

00000000000067a0 <PyTuple_New@plt>:
    67a0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #408]
    67a8:	add	x16, x16, #0x198
    67ac:	br	x17

00000000000067b0 <PyObject_GenericGetAttr@plt>:
    67b0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #416]
    67b8:	add	x16, x16, #0x1a0
    67bc:	br	x17

00000000000067c0 <abort@plt>:
    67c0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #424]
    67c8:	add	x16, x16, #0x1a8
    67cc:	br	x17

00000000000067d0 <Py_BuildValue@plt>:
    67d0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #432]
    67d8:	add	x16, x16, #0x1b0
    67dc:	br	x17

00000000000067e0 <PyErr_Occurred@plt>:
    67e0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #440]
    67e8:	add	x16, x16, #0x1b8
    67ec:	br	x17

00000000000067f0 <PyModule_Create2@plt>:
    67f0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #448]
    67f8:	add	x16, x16, #0x1c0
    67fc:	br	x17

0000000000006800 <_PyUnicode_IsWhitespace@plt>:
    6800:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #456]
    6808:	add	x16, x16, #0x1c8
    680c:	br	x17

0000000000006810 <puts@plt>:
    6810:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #464]
    6818:	add	x16, x16, #0x1d0
    681c:	br	x17

0000000000006820 <PyLong_AsLong@plt>:
    6820:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #472]
    6828:	add	x16, x16, #0x1d8
    682c:	br	x17

0000000000006830 <PyImport_ImportModule@plt>:
    6830:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #480]
    6838:	add	x16, x16, #0x1e0
    683c:	br	x17

0000000000006840 <PyObject_CallObject@plt>:
    6840:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #488]
    6848:	add	x16, x16, #0x1e8
    684c:	br	x17

0000000000006850 <PyObject_CallFunctionObjArgs@plt>:
    6850:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #496]
    6858:	add	x16, x16, #0x1f0
    685c:	br	x17

0000000000006860 <strcmp@plt>:
    6860:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #504]
    6868:	add	x16, x16, #0x1f8
    686c:	br	x17

0000000000006870 <PyDict_GetItemString@plt>:
    6870:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #512]
    6878:	add	x16, x16, #0x200
    687c:	br	x17

0000000000006880 <__ctype_b_loc@plt>:
    6880:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #520]
    6888:	add	x16, x16, #0x208
    688c:	br	x17

0000000000006890 <PyUnicode_CompareWithASCIIString@plt>:
    6890:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #528]
    6898:	add	x16, x16, #0x210
    689c:	br	x17

00000000000068a0 <PyUnicode_DecodeUTF8@plt>:
    68a0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #536]
    68a8:	add	x16, x16, #0x218
    68ac:	br	x17

00000000000068b0 <_PyUnicode_ToDecimalDigit@plt>:
    68b0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #544]
    68b8:	add	x16, x16, #0x220
    68bc:	br	x17

00000000000068c0 <PyFloat_AsDouble@plt>:
    68c0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #552]
    68c8:	add	x16, x16, #0x228
    68cc:	br	x17

00000000000068d0 <PyObject_IsTrue@plt>:
    68d0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #560]
    68d8:	add	x16, x16, #0x230
    68dc:	br	x17

00000000000068e0 <PyArg_ParseTuple@plt>:
    68e0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #568]
    68e8:	add	x16, x16, #0x238
    68ec:	br	x17

00000000000068f0 <free@plt>:
    68f0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #576]
    68f8:	add	x16, x16, #0x240
    68fc:	br	x17

0000000000006900 <PyUnicode_Compare@plt>:
    6900:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #584]
    6908:	add	x16, x16, #0x248
    690c:	br	x17

0000000000006910 <PyList_Size@plt>:
    6910:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #592]
    6918:	add	x16, x16, #0x250
    691c:	br	x17

0000000000006920 <PyDict_New@plt>:
    6920:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #600]
    6928:	add	x16, x16, #0x258
    692c:	br	x17

0000000000006930 <fwrite@plt>:
    6930:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #608]
    6938:	add	x16, x16, #0x260
    693c:	br	x17

0000000000006940 <PyLong_FromUnsignedLong@plt>:
    6940:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #616]
    6948:	add	x16, x16, #0x268
    694c:	br	x17

0000000000006950 <_PyObject_New@plt>:
    6950:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #624]
    6958:	add	x16, x16, #0x270
    695c:	br	x17

0000000000006960 <PyUnicode_FromString@plt>:
    6960:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #632]
    6968:	add	x16, x16, #0x278
    696c:	br	x17

0000000000006970 <PyModule_AddStringConstant@plt>:
    6970:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #640]
    6978:	add	x16, x16, #0x280
    697c:	br	x17

0000000000006980 <PyUnicode_InternFromString@plt>:
    6980:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #648]
    6988:	add	x16, x16, #0x288
    698c:	br	x17

0000000000006990 <PyModule_AddObject@plt>:
    6990:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #656]
    6998:	add	x16, x16, #0x290
    699c:	br	x17

00000000000069a0 <PyDict_SetItem@plt>:
    69a0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #664]
    69a8:	add	x16, x16, #0x298
    69ac:	br	x17

00000000000069b0 <PyObject_GenericSetAttr@plt>:
    69b0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #672]
    69b8:	add	x16, x16, #0x2a0
    69bc:	br	x17

00000000000069c0 <PyType_IsSubtype@plt>:
    69c0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #680]
    69c8:	add	x16, x16, #0x2a8
    69cc:	br	x17

00000000000069d0 <PyUnicode_AsUTF8AndSize@plt>:
    69d0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #688]
    69d8:	add	x16, x16, #0x2b0
    69dc:	br	x17

00000000000069e0 <PyTuple_Size@plt>:
    69e0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #696]
    69e8:	add	x16, x16, #0x2b8
    69ec:	br	x17

00000000000069f0 <PyComplex_AsCComplex@plt>:
    69f0:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #704]
    69f8:	add	x16, x16, #0x2c0
    69fc:	br	x17

0000000000006a00 <PyComplex_FromDoubles@plt>:
    6a00:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #712]
    6a08:	add	x16, x16, #0x2c8
    6a0c:	br	x17

0000000000006a10 <PyErr_Format@plt>:
    6a10:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #720]
    6a18:	add	x16, x16, #0x2d0
    6a1c:	br	x17

0000000000006a20 <__errno_location@plt>:
    6a20:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #728]
    6a28:	add	x16, x16, #0x2d8
    6a2c:	br	x17

0000000000006a30 <PyList_GetItem@plt>:
    6a30:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #736]
    6a38:	add	x16, x16, #0x2e0
    6a3c:	br	x17

0000000000006a40 <PyMem_Malloc@plt>:
    6a40:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a44:	ldr	x17, [x16, #744]
    6a48:	add	x16, x16, #0x2e8
    6a4c:	br	x17

0000000000006a50 <PyUnicode_New@plt>:
    6a50:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a54:	ldr	x17, [x16, #752]
    6a58:	add	x16, x16, #0x2f0
    6a5c:	br	x17

0000000000006a60 <PyTuple_Pack@plt>:
    6a60:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a64:	ldr	x17, [x16, #760]
    6a68:	add	x16, x16, #0x2f8
    6a6c:	br	x17

0000000000006a70 <fprintf@plt>:
    6a70:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a74:	ldr	x17, [x16, #768]
    6a78:	add	x16, x16, #0x300
    6a7c:	br	x17

0000000000006a80 <PyDict_GetItemWithError@plt>:
    6a80:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a84:	ldr	x17, [x16, #776]
    6a88:	add	x16, x16, #0x308
    6a8c:	br	x17

0000000000006a90 <PyFloat_FromString@plt>:
    6a90:	adrp	x16, 63000 <memcpy@GLIBC_2.17>
    6a94:	ldr	x17, [x16, #784]
    6a98:	add	x16, x16, #0x310
    6a9c:	br	x17

Disassembly of section .text:

0000000000006aa0 <PyInit__decimal@@Base-0x157a0>:
    6aa0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    6aa4:	ldr	x0, [x0, #3984]
    6aa8:	cbz	x0, 6ab0 <PyFloat_FromString@plt+0x20>
    6aac:	b	6780 <__gmon_start__@plt>
    6ab0:	ret
    6ab4:	nop
    6ab8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    6abc:	add	x0, x0, #0x788
    6ac0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    6ac4:	add	x1, x1, #0x788
    6ac8:	cmp	x1, x0
    6acc:	b.eq	6ae4 <PyFloat_FromString@plt+0x54>  // b.none
    6ad0:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    6ad4:	ldr	x1, [x1, #3856]
    6ad8:	cbz	x1, 6ae4 <PyFloat_FromString@plt+0x54>
    6adc:	mov	x16, x1
    6ae0:	br	x16
    6ae4:	ret
    6ae8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    6aec:	add	x0, x0, #0x788
    6af0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    6af4:	add	x1, x1, #0x788
    6af8:	sub	x1, x1, x0
    6afc:	lsr	x2, x1, #63
    6b00:	add	x1, x2, x1, asr #3
    6b04:	cmp	xzr, x1, asr #1
    6b08:	asr	x1, x1, #1
    6b0c:	b.eq	6b24 <PyFloat_FromString@plt+0x94>  // b.none
    6b10:	adrp	x2, 62000 <PyInit__decimal@@Base+0x45dc0>
    6b14:	ldr	x2, [x2, #4056]
    6b18:	cbz	x2, 6b24 <PyFloat_FromString@plt+0x94>
    6b1c:	mov	x16, x2
    6b20:	br	x16
    6b24:	ret
    6b28:	stp	x29, x30, [sp, #-32]!
    6b2c:	mov	x29, sp
    6b30:	str	x19, [sp, #16]
    6b34:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
    6b38:	ldrb	w0, [x19, #1936]
    6b3c:	cbnz	w0, 6b64 <PyFloat_FromString@plt+0xd4>
    6b40:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    6b44:	ldr	x0, [x0, #3896]
    6b48:	cbz	x0, 6b58 <PyFloat_FromString@plt+0xc8>
    6b4c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    6b50:	ldr	x0, [x0, #800]
    6b54:	bl	6590 <__cxa_finalize@plt>
    6b58:	bl	6ab8 <PyFloat_FromString@plt+0x28>
    6b5c:	mov	w0, #0x1                   	// #1
    6b60:	strb	w0, [x19, #1936]
    6b64:	ldr	x19, [sp, #16]
    6b68:	ldp	x29, x30, [sp], #32
    6b6c:	ret
    6b70:	b	6ae8 <PyFloat_FromString@plt+0x58>
    6b74:	nop
    6b78:	ret
    6b7c:	nop
    6b80:	mov	x1, x0
    6b84:	mov	w0, #0x0                   	// #0
    6b88:	str	xzr, [x1, #16]
    6b8c:	ret
    6b90:	mov	x0, #0x9                   	// #9
    6b94:	ret
    6b98:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    6b9c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    6ba0:	ldr	x1, [x1, #3872]
    6ba4:	ldr	x0, [x0, #1952]
    6ba8:	ldr	x1, [x1, #216]
    6bac:	mov	x16, x1
    6bb0:	br	x16
    6bb4:	nop
    6bb8:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    6bbc:	str	wzr, [x0, #40]
    6bc0:	ldr	x1, [x1, #4008]
    6bc4:	mov	x0, x1
    6bc8:	ldr	x2, [x1]
    6bcc:	add	x2, x2, #0x1
    6bd0:	str	x2, [x1]
    6bd4:	ret
    6bd8:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    6bdc:	str	wzr, [x0, #44]
    6be0:	ldr	x1, [x1, #4008]
    6be4:	mov	x0, x1
    6be8:	ldr	x2, [x1]
    6bec:	add	x2, x2, #0x1
    6bf0:	str	x2, [x1]
    6bf4:	ret
    6bf8:	ldr	x2, [x0]
    6bfc:	add	x2, x2, #0x1
    6c00:	str	x2, [x0]
    6c04:	ret
    6c08:	stp	x29, x30, [sp, #-32]!
    6c0c:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
    6c10:	mov	x29, sp
    6c14:	str	x19, [sp, #16]
    6c18:	mov	x19, x0
    6c1c:	add	x0, x1, #0x328
    6c20:	mov	x1, #0x0                   	// #0
    6c24:	bl	6840 <PyObject_CallObject@plt>
    6c28:	cbz	x0, 6c54 <PyFloat_FromString@plt+0x1c4>
    6c2c:	add	x2, x19, #0x10
    6c30:	ldp	x4, x5, [x19, #16]
    6c34:	stp	x4, x5, [x0, #16]
    6c38:	ldp	x4, x5, [x2, #16]
    6c3c:	stp	x4, x5, [x0, #32]
    6c40:	ldp	x2, x3, [x2, #32]
    6c44:	stp	x2, x3, [x0, #48]
    6c48:	ldr	w1, [x19, #80]
    6c4c:	str	wzr, [x0, #48]
    6c50:	str	w1, [x0, #80]
    6c54:	ldr	x19, [sp, #16]
    6c58:	ldp	x29, x30, [sp], #32
    6c5c:	ret
    6c60:	sub	sp, sp, #0x100
    6c64:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    6c68:	add	x1, x2, #0x9b0
    6c6c:	stp	x29, x30, [sp, #96]
    6c70:	add	x29, sp, #0x60
    6c74:	ldr	x2, [x2, #2480]
    6c78:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6c7c:	ldr	x4, [x0, #16]
    6c80:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    6c84:	ldr	w3, [x1, #16]
    6c88:	add	x5, x0, #0x4d8
    6c8c:	ldr	x2, [x1, #32]
    6c90:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    6c94:	ldr	w6, [x4]
    6c98:	add	x0, x0, #0x4d0
    6c9c:	ldr	x4, [x1, #8]
    6ca0:	tst	w6, w3
    6ca4:	csel	x3, x0, x5, ne  // ne = any
    6ca8:	str	x4, [sp, #112]
    6cac:	str	x3, [sp, #184]
    6cb0:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6cb4:	ldr	w3, [x1, #48]
    6cb8:	ldr	x2, [x1, #64]
    6cbc:	tst	w6, w3
    6cc0:	ldr	x4, [x1, #40]
    6cc4:	csel	x3, x0, x5, ne  // ne = any
    6cc8:	str	x4, [sp, #120]
    6ccc:	str	x3, [sp, #192]
    6cd0:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6cd4:	ldr	w3, [x1, #80]
    6cd8:	ldr	x2, [x1, #96]
    6cdc:	tst	w6, w3
    6ce0:	ldr	x4, [x1, #72]
    6ce4:	csel	x3, x0, x5, ne  // ne = any
    6ce8:	str	x4, [sp, #128]
    6cec:	str	x3, [sp, #200]
    6cf0:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6cf4:	ldr	w3, [x1, #112]
    6cf8:	ldr	x2, [x1, #128]
    6cfc:	tst	w6, w3
    6d00:	ldr	x4, [x1, #104]
    6d04:	csel	x3, x0, x5, ne  // ne = any
    6d08:	str	x4, [sp, #136]
    6d0c:	str	x3, [sp, #208]
    6d10:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6d14:	ldr	w3, [x1, #144]
    6d18:	ldr	x2, [x1, #160]
    6d1c:	tst	w6, w3
    6d20:	ldr	x4, [x1, #136]
    6d24:	csel	x3, x0, x5, ne  // ne = any
    6d28:	str	x4, [sp, #144]
    6d2c:	str	x3, [sp, #216]
    6d30:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6d34:	ldr	w3, [x1, #176]
    6d38:	ldr	x2, [x1, #192]
    6d3c:	tst	w6, w3
    6d40:	ldr	x4, [x1, #168]
    6d44:	csel	x3, x0, x5, ne  // ne = any
    6d48:	str	x4, [sp, #152]
    6d4c:	str	x3, [sp, #224]
    6d50:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6d54:	ldr	w3, [x1, #208]
    6d58:	ldr	x2, [x1, #224]
    6d5c:	tst	w6, w3
    6d60:	ldr	x4, [x1, #200]
    6d64:	csel	x3, x0, x5, ne  // ne = any
    6d68:	str	x4, [sp, #160]
    6d6c:	str	x3, [sp, #232]
    6d70:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6d74:	ldr	w3, [x1, #240]
    6d78:	ldr	x2, [x1, #256]
    6d7c:	tst	w6, w3
    6d80:	ldr	x4, [x1, #232]
    6d84:	csel	x3, x0, x5, ne  // ne = any
    6d88:	str	x4, [sp, #168]
    6d8c:	str	x3, [sp, #240]
    6d90:	cbz	x2, 6dac <PyFloat_FromString@plt+0x31c>
    6d94:	ldr	w2, [x1, #272]
    6d98:	ldr	x1, [x1, #264]
    6d9c:	tst	w6, w2
    6da0:	csel	x0, x0, x5, ne  // ne = any
    6da4:	str	x1, [sp, #176]
    6da8:	str	x0, [sp, #248]
    6dac:	ldr	x8, [sp, #144]
    6db0:	str	x8, [sp, #8]
    6db4:	ldr	x8, [sp, #208]
    6db8:	str	x8, [sp]
    6dbc:	ldr	x8, [sp, #216]
    6dc0:	str	x8, [sp, #16]
    6dc4:	ldr	x8, [sp, #152]
    6dc8:	str	x8, [sp, #24]
    6dcc:	ldr	x8, [sp, #160]
    6dd0:	str	x8, [sp, #40]
    6dd4:	ldr	x8, [sp, #168]
    6dd8:	str	x8, [sp, #56]
    6ddc:	ldr	x8, [sp, #176]
    6de0:	str	x8, [sp, #72]
    6de4:	ldr	x8, [sp, #224]
    6de8:	str	x8, [sp, #32]
    6dec:	ldp	x1, x3, [sp, #112]
    6df0:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    6df4:	ldp	x5, x7, [sp, #128]
    6df8:	add	x0, x0, #0x4e0
    6dfc:	ldp	x2, x4, [sp, #184]
    6e00:	ldr	x8, [sp, #232]
    6e04:	str	x8, [sp, #48]
    6e08:	ldr	x8, [sp, #240]
    6e0c:	str	x8, [sp, #64]
    6e10:	ldr	x6, [sp, #200]
    6e14:	ldr	x8, [sp, #248]
    6e18:	str	x8, [sp, #80]
    6e1c:	bl	6480 <PyUnicode_FromFormat@plt>
    6e20:	ldp	x29, x30, [sp, #96]
    6e24:	add	sp, sp, #0x100
    6e28:	ret
    6e2c:	nop
    6e30:	stp	x29, x30, [sp, #-16]!
    6e34:	add	x0, x0, #0x10
    6e38:	mov	x29, sp
    6e3c:	bl	1f720 <PyInit__decimal@@Base+0x34e0>
    6e40:	sxtw	x0, w0
    6e44:	ldp	x29, x30, [sp], #16
    6e48:	b	66a0 <PyLong_FromSsize_t@plt>
    6e4c:	nop
    6e50:	ldrsw	x0, [x0, #80]
    6e54:	b	66e0 <PyLong_FromLong@plt>
    6e58:	stp	x29, x30, [sp, #-16]!
    6e5c:	add	x0, x0, #0x10
    6e60:	mov	x29, sp
    6e64:	bl	1f708 <PyInit__decimal@@Base+0x34c8>
    6e68:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    6e6c:	add	x1, x1, #0x7a0
    6e70:	add	x1, x1, #0x10
    6e74:	ldr	x0, [x1, w0, sxtw #3]
    6e78:	ldr	x1, [x0]
    6e7c:	add	x1, x1, #0x1
    6e80:	str	x1, [x0]
    6e84:	ldp	x29, x30, [sp], #16
    6e88:	ret
    6e8c:	nop
    6e90:	stp	x29, x30, [sp, #-16]!
    6e94:	add	x0, x0, #0x10
    6e98:	mov	x29, sp
    6e9c:	bl	1f700 <PyInit__decimal@@Base+0x34c0>
    6ea0:	ldp	x29, x30, [sp], #16
    6ea4:	b	66a0 <PyLong_FromSsize_t@plt>
    6ea8:	stp	x29, x30, [sp, #-16]!
    6eac:	add	x0, x0, #0x10
    6eb0:	mov	x29, sp
    6eb4:	bl	1f6f8 <PyInit__decimal@@Base+0x34b8>
    6eb8:	ldp	x29, x30, [sp], #16
    6ebc:	b	66a0 <PyLong_FromSsize_t@plt>
    6ec0:	stp	x29, x30, [sp, #-16]!
    6ec4:	add	x0, x0, #0x10
    6ec8:	mov	x29, sp
    6ecc:	bl	1f6f0 <PyInit__decimal@@Base+0x34b0>
    6ed0:	ldp	x29, x30, [sp], #16
    6ed4:	b	66a0 <PyLong_FromSsize_t@plt>
    6ed8:	stp	x29, x30, [sp, #-32]!
    6edc:	mov	x29, sp
    6ee0:	str	x19, [sp, #16]
    6ee4:	mov	x19, x0
    6ee8:	add	x0, x0, #0x18
    6eec:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    6ef0:	mov	x0, x19
    6ef4:	ldr	x1, [x19, #8]
    6ef8:	ldr	x19, [sp, #16]
    6efc:	ldp	x29, x30, [sp], #32
    6f00:	ldr	x1, [x1, #320]
    6f04:	mov	x16, x1
    6f08:	br	x16
    6f0c:	nop
    6f10:	stp	x29, x30, [sp, #-16]!
    6f14:	add	x0, x0, #0x18
    6f18:	mov	x29, sp
    6f1c:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
    6f20:	cmp	w0, #0x0
    6f24:	cset	w0, eq  // eq = none
    6f28:	ldp	x29, x30, [sp], #16
    6f2c:	ret
    6f30:	stp	x29, x30, [sp, #-16]!
    6f34:	add	x0, x0, #0x10
    6f38:	mov	x29, sp
    6f3c:	bl	2a558 <PyInit__decimal@@Base+0xe318>
    6f40:	ldp	x29, x30, [sp], #16
    6f44:	b	66a0 <PyLong_FromSsize_t@plt>
    6f48:	stp	x29, x30, [sp, #-16]!
    6f4c:	add	x0, x0, #0x10
    6f50:	mov	x29, sp
    6f54:	bl	2a540 <PyInit__decimal@@Base+0xe300>
    6f58:	ldp	x29, x30, [sp], #16
    6f5c:	b	66a0 <PyLong_FromSsize_t@plt>
    6f60:	sub	sp, sp, #0x150
    6f64:	mov	w1, #0x79                  	// #121
    6f68:	stp	x29, x30, [sp, #16]
    6f6c:	add	x29, sp, #0x10
    6f70:	stp	x19, x20, [sp, #32]
    6f74:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    6f78:	add	x19, x19, #0x9b0
    6f7c:	ldr	w2, [x0, #44]
    6f80:	add	x19, x19, #0x140
    6f84:	stp	x21, x22, [sp, #48]
    6f88:	add	x22, sp, #0x50
    6f8c:	add	x20, x0, #0x10
    6f90:	mov	x21, x0
    6f94:	mov	x3, x19
    6f98:	mov	x0, x22
    6f9c:	bl	28010 <PyInit__decimal@@Base+0xbdd0>
    6fa0:	cmp	w0, #0x78
    6fa4:	b.hi	701c <PyFloat_FromString@plt+0x58c>  // b.pmore
    6fa8:	ldr	w2, [x20, #24]
    6fac:	mov	x3, x19
    6fb0:	str	x23, [sp, #64]
    6fb4:	add	x23, sp, #0xd0
    6fb8:	mov	x0, x23
    6fbc:	mov	w1, #0x79                  	// #121
    6fc0:	bl	28010 <PyInit__decimal@@Base+0xbdd0>
    6fc4:	cmp	w0, #0x78
    6fc8:	b.hi	704c <PyFloat_FromString@plt+0x5bc>  // b.pmore
    6fcc:	ldrsw	x1, [x20, #36]
    6fd0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    6fd4:	add	x0, x0, #0x610
    6fd8:	ldr	w6, [x20, #40]
    6fdc:	ldr	x4, [x20, #8]
    6fe0:	str	x23, [sp]
    6fe4:	mov	x7, x22
    6fe8:	ldr	w5, [x21, #80]
    6fec:	ldr	x2, [x0, x1, lsl #3]
    6ff0:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    6ff4:	ldr	x3, [x20, #16]
    6ff8:	add	x0, x0, #0x5a0
    6ffc:	ldr	x1, [x21, #16]
    7000:	bl	6480 <PyUnicode_FromFormat@plt>
    7004:	ldp	x29, x30, [sp, #16]
    7008:	ldp	x19, x20, [sp, #32]
    700c:	ldp	x21, x22, [sp, #48]
    7010:	ldr	x23, [sp, #64]
    7014:	add	sp, sp, #0x150
    7018:	ret
    701c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7020:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7024:	add	x1, x1, #0x580
    7028:	ldr	x0, [x0, #3920]
    702c:	ldr	x0, [x0]
    7030:	bl	6650 <PyErr_SetString@plt>
    7034:	mov	x0, #0x0                   	// #0
    7038:	ldp	x29, x30, [sp, #16]
    703c:	ldp	x19, x20, [sp, #32]
    7040:	ldp	x21, x22, [sp, #48]
    7044:	add	sp, sp, #0x150
    7048:	ret
    704c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7050:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7054:	add	x1, x1, #0x580
    7058:	ldr	x0, [x0, #3920]
    705c:	ldr	x0, [x0]
    7060:	bl	6650 <PyErr_SetString@plt>
    7064:	mov	x0, #0x0                   	// #0
    7068:	ldp	x29, x30, [sp, #16]
    706c:	ldp	x19, x20, [sp, #32]
    7070:	ldp	x21, x22, [sp, #48]
    7074:	ldr	x23, [sp, #64]
    7078:	add	sp, sp, #0x150
    707c:	ret
    7080:	stp	x29, x30, [sp, #-32]!
    7084:	mov	x29, sp
    7088:	stp	x19, x20, [sp, #16]
    708c:	mov	x19, x0
    7090:	add	x0, x0, #0x18
    7094:	ldr	x1, [x19, #8]
    7098:	ldr	x20, [x1, #32]
    709c:	bl	2aa30 <PyInit__decimal@@Base+0xe7f0>
    70a0:	cbz	w0, 70ac <PyFloat_FromString@plt+0x61c>
    70a4:	ldr	x0, [x19, #56]
    70a8:	add	x20, x20, x0, lsl #3
    70ac:	mov	x0, x20
    70b0:	ldp	x19, x20, [sp, #16]
    70b4:	ldp	x29, x30, [sp], #32
    70b8:	b	66a0 <PyLong_FromSsize_t@plt>
    70bc:	nop
    70c0:	stp	x29, x30, [sp, #-32]!
    70c4:	mov	x29, sp
    70c8:	str	x19, [sp, #16]
    70cc:	add	x19, x0, #0x18
    70d0:	mov	x0, x19
    70d4:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
    70d8:	cbz	w0, 70ec <PyFloat_FromString@plt+0x65c>
    70dc:	ldr	x19, [sp, #16]
    70e0:	mov	x0, #0x0                   	// #0
    70e4:	ldp	x29, x30, [sp], #32
    70e8:	b	66a0 <PyLong_FromSsize_t@plt>
    70ec:	mov	x0, x19
    70f0:	bl	2a530 <PyInit__decimal@@Base+0xe2f0>
    70f4:	ldr	x19, [sp, #16]
    70f8:	ldp	x29, x30, [sp], #32
    70fc:	b	66a0 <PyLong_FromSsize_t@plt>
    7100:	stp	x29, x30, [sp, #-64]!
    7104:	mov	x29, sp
    7108:	ldr	x0, [x0, #16]
    710c:	stp	x19, x20, [sp, #16]
    7110:	str	x23, [sp, #48]
    7114:	ldr	w23, [x0]
    7118:	bl	6920 <PyDict_New@plt>
    711c:	cbz	x0, 7184 <PyFloat_FromString@plt+0x6f4>
    7120:	mov	x19, x0
    7124:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    7128:	add	x20, x0, #0x9b0
    712c:	ldr	x0, [x0, #2480]
    7130:	cbz	x0, 7188 <PyFloat_FromString@plt+0x6f8>
    7134:	stp	x21, x22, [sp, #32]
    7138:	adrp	x22, 62000 <PyInit__decimal@@Base+0x45dc0>
    713c:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
    7140:	ldr	x22, [x22, #3976]
    7144:	ldr	x21, [x21, #4024]
    7148:	b	7154 <PyFloat_FromString@plt+0x6c4>
    714c:	ldr	x0, [x20, #32]!
    7150:	cbz	x0, 719c <PyFloat_FromString@plt+0x70c>
    7154:	ldr	w2, [x20, #16]
    7158:	mov	x0, x19
    715c:	ldr	x1, [x20, #24]
    7160:	tst	w23, w2
    7164:	csel	x2, x21, x22, ne  // ne = any
    7168:	bl	69a0 <PyDict_SetItem@plt>
    716c:	tbz	w0, #31, 714c <PyFloat_FromString@plt+0x6bc>
    7170:	ldr	x0, [x19]
    7174:	sub	x0, x0, #0x1
    7178:	str	x0, [x19]
    717c:	cbz	x0, 71b4 <PyFloat_FromString@plt+0x724>
    7180:	ldp	x21, x22, [sp, #32]
    7184:	mov	x19, #0x0                   	// #0
    7188:	mov	x0, x19
    718c:	ldp	x19, x20, [sp, #16]
    7190:	ldr	x23, [sp, #48]
    7194:	ldp	x29, x30, [sp], #64
    7198:	ret
    719c:	mov	x0, x19
    71a0:	ldp	x19, x20, [sp, #16]
    71a4:	ldp	x21, x22, [sp, #32]
    71a8:	ldr	x23, [sp, #48]
    71ac:	ldp	x29, x30, [sp], #64
    71b0:	ret
    71b4:	mov	x0, x19
    71b8:	mov	x19, #0x0                   	// #0
    71bc:	bl	65d0 <_Py_Dealloc@plt>
    71c0:	mov	x0, x19
    71c4:	ldp	x19, x20, [sp, #16]
    71c8:	ldp	x21, x22, [sp, #32]
    71cc:	ldr	x23, [sp, #48]
    71d0:	ldp	x29, x30, [sp], #64
    71d4:	ret
    71d8:	stp	x29, x30, [sp, #-32]!
    71dc:	mov	x29, sp
    71e0:	str	x19, [sp, #16]
    71e4:	mov	x19, x0
    71e8:	ldr	x0, [x0, #16]
    71ec:	cbz	x0, 7200 <PyFloat_FromString@plt+0x770>
    71f0:	ldr	x1, [x0]
    71f4:	sub	x1, x1, #0x1
    71f8:	str	x1, [x0]
    71fc:	cbz	x1, 723c <PyFloat_FromString@plt+0x7ac>
    7200:	ldr	x0, [x19, #24]
    7204:	cbz	x0, 7218 <PyFloat_FromString@plt+0x788>
    7208:	ldr	x1, [x0]
    720c:	sub	x1, x1, #0x1
    7210:	str	x1, [x0]
    7214:	cbz	x1, 7228 <PyFloat_FromString@plt+0x798>
    7218:	mov	x0, x19
    721c:	ldr	x19, [sp, #16]
    7220:	ldp	x29, x30, [sp], #32
    7224:	b	6690 <PyObject_Free@plt>
    7228:	bl	65d0 <_Py_Dealloc@plt>
    722c:	mov	x0, x19
    7230:	ldr	x19, [sp, #16]
    7234:	ldp	x29, x30, [sp], #32
    7238:	b	6690 <PyObject_Free@plt>
    723c:	bl	65d0 <_Py_Dealloc@plt>
    7240:	b	7200 <PyFloat_FromString@plt+0x770>
    7244:	nop
    7248:	stp	x29, x30, [sp, #-32]!
    724c:	mov	x29, sp
    7250:	str	x19, [sp, #16]
    7254:	mov	x19, x0
    7258:	ldr	x0, [x0, #64]
    725c:	cbz	x0, 7270 <PyFloat_FromString@plt+0x7e0>
    7260:	ldr	x1, [x0]
    7264:	sub	x1, x1, #0x1
    7268:	str	x1, [x0]
    726c:	cbz	x1, 72c4 <PyFloat_FromString@plt+0x834>
    7270:	ldr	x0, [x19, #72]
    7274:	cbz	x0, 7288 <PyFloat_FromString@plt+0x7f8>
    7278:	ldr	x1, [x0]
    727c:	sub	x1, x1, #0x1
    7280:	str	x1, [x0]
    7284:	cbz	x1, 72a4 <PyFloat_FromString@plt+0x814>
    7288:	ldr	x1, [x19, #8]
    728c:	mov	x0, x19
    7290:	ldr	x19, [sp, #16]
    7294:	ldp	x29, x30, [sp], #32
    7298:	ldr	x1, [x1, #320]
    729c:	mov	x16, x1
    72a0:	br	x16
    72a4:	bl	65d0 <_Py_Dealloc@plt>
    72a8:	ldr	x1, [x19, #8]
    72ac:	mov	x0, x19
    72b0:	ldr	x19, [sp, #16]
    72b4:	ldp	x29, x30, [sp], #32
    72b8:	ldr	x1, [x1, #320]
    72bc:	mov	x16, x1
    72c0:	br	x16
    72c4:	bl	65d0 <_Py_Dealloc@plt>
    72c8:	b	7270 <PyFloat_FromString@plt+0x7e0>
    72cc:	nop
    72d0:	stp	x29, x30, [sp, #-80]!
    72d4:	mov	x29, sp
    72d8:	stp	x21, x22, [sp, #32]
    72dc:	add	x21, x0, #0x18
    72e0:	stp	x19, x20, [sp, #16]
    72e4:	mov	x19, x0
    72e8:	mov	x0, x21
    72ec:	bl	2d8a0 <PyInit__decimal@@Base+0x11660>
    72f0:	cbz	x0, 7584 <PyFloat_FromString@plt+0xaf4>
    72f4:	mov	x20, x0
    72f8:	mov	x0, x21
    72fc:	bl	2a9e0 <PyInit__decimal@@Base+0xe7a0>
    7300:	and	x0, x0, #0xff
    7304:	bl	6940 <PyLong_FromUnsignedLong@plt>
    7308:	mov	x21, x0
    730c:	cbz	x0, 7538 <PyFloat_FromString@plt+0xaa8>
    7310:	mov	x0, x20
    7314:	stp	x23, x24, [sp, #48]
    7318:	bl	2a858 <PyInit__decimal@@Base+0xe618>
    731c:	cbz	w0, 73c4 <PyFloat_FromString@plt+0x934>
    7320:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    7324:	add	x0, x0, #0x608
    7328:	bl	6960 <PyUnicode_FromString@plt>
    732c:	mov	x22, x0
    7330:	cbz	x0, 74f8 <PyFloat_FromString@plt+0xa68>
    7334:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    7338:	mov	w1, #0x0                   	// #0
    733c:	add	x0, x0, #0x610
    7340:	bl	67d0 <Py_BuildValue@plt>
    7344:	mov	x23, x0
    7348:	cbz	x0, 74f8 <PyFloat_FromString@plt+0xa68>
    734c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    7350:	mov	x3, x22
    7354:	mov	x2, x23
    7358:	mov	x1, x21
    735c:	ldr	x0, [x0, #2032]
    7360:	mov	x4, #0x0                   	// #0
    7364:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    7368:	mov	x19, x0
    736c:	mov	x0, x20
    7370:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7374:	ldr	x0, [x21]
    7378:	sub	x0, x0, #0x1
    737c:	str	x0, [x21]
    7380:	cbz	x0, 7518 <PyFloat_FromString@plt+0xa88>
    7384:	ldr	x1, [x23]
    7388:	sub	x1, x1, #0x1
    738c:	str	x1, [x23]
    7390:	cbz	x1, 74dc <PyFloat_FromString@plt+0xa4c>
    7394:	nop
    7398:	cbz	x22, 73ac <PyFloat_FromString@plt+0x91c>
    739c:	ldr	x1, [x22]
    73a0:	sub	x1, x1, #0x1
    73a4:	str	x1, [x22]
    73a8:	cbz	x1, 74bc <PyFloat_FromString@plt+0xa2c>
    73ac:	mov	x0, x19
    73b0:	ldp	x19, x20, [sp, #16]
    73b4:	ldp	x21, x22, [sp, #32]
    73b8:	ldp	x23, x24, [sp, #48]
    73bc:	ldp	x29, x30, [sp], #80
    73c0:	ret
    73c4:	mov	x0, x20
    73c8:	bl	2a868 <PyInit__decimal@@Base+0xe628>
    73cc:	cbz	w0, 7528 <PyFloat_FromString@plt+0xa98>
    73d0:	mov	x0, x20
    73d4:	bl	2a898 <PyInit__decimal@@Base+0xe658>
    73d8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    73dc:	cmp	w0, #0x0
    73e0:	add	x1, x1, #0x600
    73e4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    73e8:	add	x0, x0, #0x4f8
    73ec:	csel	x0, x0, x1, ne  // ne = any
    73f0:	bl	6960 <PyUnicode_FromString@plt>
    73f4:	mov	x22, x0
    73f8:	cbz	x22, 74f8 <PyFloat_FromString@plt+0xa68>
    73fc:	ldr	x0, [x20, #24]
    7400:	cmp	x0, #0x0
    7404:	b.le	74e8 <PyFloat_FromString@plt+0xa58>
    7408:	str	xzr, [x20, #8]
    740c:	mov	x0, x20
    7410:	bl	2b2d8 <PyInit__decimal@@Base+0xf098>
    7414:	mov	x0, x20
    7418:	mov	w1, #0x1                   	// #1
    741c:	bl	25e18 <PyInit__decimal@@Base+0x9bd8>
    7420:	mov	x24, x0
    7424:	cbz	x0, 7590 <PyFloat_FromString@plt+0xb00>
    7428:	stp	x25, x26, [sp, #64]
    742c:	bl	64d0 <strlen@plt>
    7430:	mov	x25, x0
    7434:	bl	67a0 <PyTuple_New@plt>
    7438:	mov	x23, x0
    743c:	cbz	x0, 7474 <PyFloat_FromString@plt+0x9e4>
    7440:	cbz	x25, 7558 <PyFloat_FromString@plt+0xac8>
    7444:	add	x26, x0, #0x18
    7448:	mov	x19, #0x0                   	// #0
    744c:	b	7460 <PyFloat_FromString@plt+0x9d0>
    7450:	str	x0, [x26, x19, lsl #3]
    7454:	add	x19, x19, #0x1
    7458:	cmp	x25, x19
    745c:	b.eq	7558 <PyFloat_FromString@plt+0xac8>  // b.none
    7460:	ldrb	w0, [x24, x19]
    7464:	sub	w0, w0, #0x30
    7468:	sxtw	x0, w0
    746c:	bl	66e0 <PyLong_FromLong@plt>
    7470:	cbnz	x0, 7450 <PyFloat_FromString@plt+0x9c0>
    7474:	mov	x0, x20
    7478:	mov	x19, #0x0                   	// #0
    747c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7480:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    7484:	mov	x0, x24
    7488:	ldr	x1, [x1, #1912]
    748c:	blr	x1
    7490:	ldr	x0, [x21]
    7494:	ldp	x25, x26, [sp, #64]
    7498:	sub	x0, x0, #0x1
    749c:	str	x0, [x21]
    74a0:	cbz	x0, 7518 <PyFloat_FromString@plt+0xa88>
    74a4:	cbz	x23, 7398 <PyFloat_FromString@plt+0x908>
    74a8:	ldr	x1, [x23]
    74ac:	sub	x1, x1, #0x1
    74b0:	str	x1, [x23]
    74b4:	cbnz	x1, 7398 <PyFloat_FromString@plt+0x908>
    74b8:	b	74dc <PyFloat_FromString@plt+0xa4c>
    74bc:	mov	x0, x22
    74c0:	bl	65d0 <_Py_Dealloc@plt>
    74c4:	mov	x0, x19
    74c8:	ldp	x19, x20, [sp, #16]
    74cc:	ldp	x21, x22, [sp, #32]
    74d0:	ldp	x23, x24, [sp, #48]
    74d4:	ldp	x29, x30, [sp], #80
    74d8:	ret
    74dc:	mov	x0, x23
    74e0:	bl	65d0 <_Py_Dealloc@plt>
    74e4:	b	7398 <PyFloat_FromString@plt+0x908>
    74e8:	mov	x0, #0x0                   	// #0
    74ec:	bl	67a0 <PyTuple_New@plt>
    74f0:	mov	x23, x0
    74f4:	cbnz	x0, 734c <PyFloat_FromString@plt+0x8bc>
    74f8:	mov	x0, x20
    74fc:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7500:	ldr	x0, [x21]
    7504:	mov	x19, #0x0                   	// #0
    7508:	sub	x0, x0, #0x1
    750c:	str	x0, [x21]
    7510:	cbnz	x0, 7398 <PyFloat_FromString@plt+0x908>
    7514:	mov	x23, #0x0                   	// #0
    7518:	mov	x0, x21
    751c:	bl	65d0 <_Py_Dealloc@plt>
    7520:	cbnz	x23, 74a8 <PyFloat_FromString@plt+0xa18>
    7524:	b	7398 <PyFloat_FromString@plt+0x908>
    7528:	ldr	x0, [x19, #32]
    752c:	bl	66a0 <PyLong_FromSsize_t@plt>
    7530:	mov	x22, x0
    7534:	b	73f8 <PyFloat_FromString@plt+0x968>
    7538:	mov	x19, #0x0                   	// #0
    753c:	mov	x0, x20
    7540:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7544:	mov	x0, x19
    7548:	ldp	x19, x20, [sp, #16]
    754c:	ldp	x21, x22, [sp, #32]
    7550:	ldp	x29, x30, [sp], #80
    7554:	ret
    7558:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    755c:	mov	x3, x22
    7560:	mov	x2, x23
    7564:	mov	x1, x21
    7568:	ldr	x0, [x0, #2032]
    756c:	mov	x4, #0x0                   	// #0
    7570:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    7574:	mov	x19, x0
    7578:	mov	x0, x20
    757c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7580:	b	7480 <PyFloat_FromString@plt+0x9f0>
    7584:	mov	x19, #0x0                   	// #0
    7588:	bl	65e0 <PyErr_NoMemory@plt>
    758c:	b	7544 <PyFloat_FromString@plt+0xab4>
    7590:	bl	65e0 <PyErr_NoMemory@plt>
    7594:	mov	x0, x20
    7598:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    759c:	b	7500 <PyFloat_FromString@plt+0xa70>
    75a0:	stp	x29, x30, [sp, #-32]!
    75a4:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    75a8:	add	x2, x2, #0x328
    75ac:	mov	x29, sp
    75b0:	stp	x19, x20, [sp, #16]
    75b4:	cmp	x0, x2
    75b8:	b.eq	769c <PyFloat_FromString@plt+0xc0c>  // b.none
    75bc:	ldr	x2, [x0, #304]
    75c0:	mov	x1, #0x0                   	// #0
    75c4:	blr	x2
    75c8:	mov	x19, x0
    75cc:	cbz	x19, 7664 <PyFloat_FromString@plt+0xbd4>
    75d0:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
    75d4:	add	x20, x20, #0x7a0
    75d8:	mov	x1, #0x0                   	// #0
    75dc:	ldr	x0, [x20, #88]
    75e0:	bl	6840 <PyObject_CallObject@plt>
    75e4:	str	x0, [x19, #64]
    75e8:	cbz	x0, 7650 <PyFloat_FromString@plt+0xbc0>
    75ec:	ldr	x0, [x20, #88]
    75f0:	mov	x1, #0x0                   	// #0
    75f4:	bl	6840 <PyObject_CallObject@plt>
    75f8:	str	x0, [x19, #72]
    75fc:	cbz	x0, 76a8 <PyFloat_FromString@plt+0xc18>
    7600:	ldr	x1, [x20, #96]
    7604:	cbz	x1, 7678 <PyFloat_FromString@plt+0xbe8>
    7608:	ldp	x4, x5, [x1, #16]
    760c:	stp	x4, x5, [x19, #16]
    7610:	ldp	x4, x5, [x1, #32]
    7614:	stp	x4, x5, [x19, #32]
    7618:	ldp	x4, x5, [x1, #48]
    761c:	stp	x4, x5, [x19, #48]
    7620:	add	x2, x19, #0x28
    7624:	ldr	x4, [x19, #64]
    7628:	add	x1, x19, #0x2c
    762c:	mov	w3, #0x1                   	// #1
    7630:	str	x2, [x4, #16]
    7634:	str	x1, [x0, #16]
    7638:	str	w3, [x19, #80]
    763c:	str	xzr, [x19, #88]
    7640:	mov	x0, x19
    7644:	ldp	x19, x20, [sp, #16]
    7648:	ldp	x29, x30, [sp], #32
    764c:	ret
    7650:	ldr	x0, [x19]
    7654:	str	xzr, [x19, #72]
    7658:	sub	x0, x0, #0x1
    765c:	str	x0, [x19]
    7660:	cbz	x0, 76b8 <PyFloat_FromString@plt+0xc28>
    7664:	mov	x19, #0x0                   	// #0
    7668:	mov	x0, x19
    766c:	ldp	x19, x20, [sp, #16]
    7670:	ldp	x29, x30, [sp], #32
    7674:	ret
    7678:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
    767c:	add	x1, x1, #0x8c0
    7680:	ldp	x4, x5, [x1]
    7684:	stp	x4, x5, [x19, #16]
    7688:	ldp	x4, x5, [x1, #16]
    768c:	stp	x4, x5, [x19, #32]
    7690:	ldp	x4, x5, [x1, #32]
    7694:	stp	x4, x5, [x19, #48]
    7698:	b	7620 <PyFloat_FromString@plt+0xb90>
    769c:	bl	6950 <_PyObject_New@plt>
    76a0:	mov	x19, x0
    76a4:	b	75cc <PyFloat_FromString@plt+0xb3c>
    76a8:	ldr	x0, [x19]
    76ac:	sub	x0, x0, #0x1
    76b0:	str	x0, [x19]
    76b4:	cbnz	x0, 7664 <PyFloat_FromString@plt+0xbd4>
    76b8:	mov	x0, x19
    76bc:	mov	x19, #0x0                   	// #0
    76c0:	bl	65d0 <_Py_Dealloc@plt>
    76c4:	b	7640 <PyFloat_FromString@plt+0xbb0>
    76c8:	stp	x29, x30, [sp, #-64]!
    76cc:	mov	x29, sp
    76d0:	stp	x19, x20, [sp, #16]
    76d4:	ldp	w20, w2, [x0, #40]
    76d8:	orr	w2, w2, w1
    76dc:	str	w2, [x0, #44]
    76e0:	orr	w0, w20, #0x200
    76e4:	tst	w0, w1
    76e8:	b.eq	779c <PyFloat_FromString@plt+0xd0c>  // b.none
    76ec:	tbnz	w1, #9, 77ac <PyFloat_FromString@plt+0xd1c>
    76f0:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    76f4:	and	w20, w20, w1
    76f8:	add	x0, x19, #0x9b0
    76fc:	ldr	x1, [x19, #2480]
    7700:	cbz	x1, 77c8 <PyFloat_FromString@plt+0xd38>
    7704:	stp	x21, x22, [sp, #32]
    7708:	str	x23, [sp, #48]
    770c:	b	7718 <PyFloat_FromString@plt+0xc88>
    7710:	ldr	x1, [x0, #32]!
    7714:	cbz	x1, 77c0 <PyFloat_FromString@plt+0xd30>
    7718:	ldr	w1, [x0, #16]
    771c:	tst	w20, w1
    7720:	b.eq	7710 <PyFloat_FromString@plt+0xc80>  // b.none
    7724:	ldr	x23, [x0, #24]
    7728:	cbz	x23, 7784 <PyFloat_FromString@plt+0xcf4>
    772c:	mov	x0, #0x0                   	// #0
    7730:	bl	64a0 <PyList_New@plt>
    7734:	mov	x22, x0
    7738:	cbz	x0, 7784 <PyFloat_FromString@plt+0xcf4>
    773c:	add	x0, x19, #0x9b0
    7740:	add	x21, x0, #0x1b8
    7744:	ldr	x0, [x0, #440]
    7748:	cbnz	x0, 7758 <PyFloat_FromString@plt+0xcc8>
    774c:	b	77f0 <PyFloat_FromString@plt+0xd60>
    7750:	ldr	x0, [x21, #32]!
    7754:	cbz	x0, 77f0 <PyFloat_FromString@plt+0xd60>
    7758:	ldr	w0, [x21, #16]
    775c:	tst	w20, w0
    7760:	b.eq	7750 <PyFloat_FromString@plt+0xcc0>  // b.none
    7764:	ldr	x1, [x21, #24]
    7768:	mov	x0, x22
    776c:	bl	6770 <PyList_Append@plt>
    7770:	tbz	w0, #31, 7750 <PyFloat_FromString@plt+0xcc0>
    7774:	ldr	x0, [x22]
    7778:	sub	x0, x0, #0x1
    777c:	str	x0, [x22]
    7780:	cbz	x0, 7840 <PyFloat_FromString@plt+0xdb0>
    7784:	mov	w0, #0x1                   	// #1
    7788:	ldp	x19, x20, [sp, #16]
    778c:	ldp	x21, x22, [sp, #32]
    7790:	ldr	x23, [sp, #48]
    7794:	ldp	x29, x30, [sp], #64
    7798:	ret
    779c:	mov	w0, #0x0                   	// #0
    77a0:	ldp	x19, x20, [sp, #16]
    77a4:	ldp	x29, x30, [sp], #64
    77a8:	ret
    77ac:	bl	65e0 <PyErr_NoMemory@plt>
    77b0:	mov	w0, #0x1                   	// #1
    77b4:	ldp	x19, x20, [sp, #16]
    77b8:	ldp	x29, x30, [sp], #64
    77bc:	ret
    77c0:	ldp	x21, x22, [sp, #32]
    77c4:	ldr	x23, [sp, #48]
    77c8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    77cc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    77d0:	add	x1, x1, #0x618
    77d4:	ldr	x0, [x0, #3920]
    77d8:	ldr	x0, [x0]
    77dc:	bl	6650 <PyErr_SetString@plt>
    77e0:	mov	w0, #0x1                   	// #1
    77e4:	ldp	x19, x20, [sp, #16]
    77e8:	ldp	x29, x30, [sp], #64
    77ec:	ret
    77f0:	add	x19, x19, #0x9b0
    77f4:	ldr	x0, [x19, #32]
    77f8:	cbz	x0, 7830 <PyFloat_FromString@plt+0xda0>
    77fc:	add	x19, x19, #0x20
    7800:	b	780c <PyFloat_FromString@plt+0xd7c>
    7804:	ldr	x0, [x19, #32]!
    7808:	cbz	x0, 7830 <PyFloat_FromString@plt+0xda0>
    780c:	ldr	w0, [x19, #16]
    7810:	tst	w20, w0
    7814:	b.eq	7804 <PyFloat_FromString@plt+0xd74>  // b.none
    7818:	ldr	x1, [x19, #24]
    781c:	mov	x0, x22
    7820:	bl	6770 <PyList_Append@plt>
    7824:	tbnz	w0, #31, 7774 <PyFloat_FromString@plt+0xce4>
    7828:	ldr	x0, [x19, #32]!
    782c:	cbnz	x0, 780c <PyFloat_FromString@plt+0xd7c>
    7830:	mov	x0, x23
    7834:	mov	x1, x22
    7838:	bl	65f0 <PyErr_SetObject@plt>
    783c:	b	7774 <PyFloat_FromString@plt+0xce4>
    7840:	mov	x0, x22
    7844:	bl	65d0 <_Py_Dealloc@plt>
    7848:	b	7784 <PyFloat_FromString@plt+0xcf4>
    784c:	nop
    7850:	stp	x29, x30, [sp, #-128]!
    7854:	mov	x29, sp
    7858:	stp	x21, x22, [sp, #32]
    785c:	add	x21, x0, #0x18
    7860:	mov	x0, x21
    7864:	stp	x19, x20, [sp, #16]
    7868:	mov	x19, x1
    786c:	str	x23, [sp, #48]
    7870:	mov	w23, w2
    7874:	str	wzr, [sp, #68]
    7878:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
    787c:	cbnz	w0, 79bc <PyFloat_FromString@plt+0xf2c>
    7880:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
    7884:	mov	x20, x0
    7888:	cbz	x0, 7a20 <PyFloat_FromString@plt+0xf90>
    788c:	ldp	x6, x7, [x19, #16]
    7890:	add	x22, sp, #0x44
    7894:	ldp	x4, x5, [x19, #32]
    7898:	mov	x1, x21
    789c:	ldp	x2, x3, [x19, #48]
    78a0:	stp	x2, x3, [sp, #112]
    78a4:	mov	x3, x22
    78a8:	add	x2, sp, #0x50
    78ac:	stp	x6, x7, [sp, #80]
    78b0:	stp	x4, x5, [sp, #96]
    78b4:	str	w23, [sp, #116]
    78b8:	bl	3d1e0 <PyInit__decimal@@Base+0x20fa0>
    78bc:	ldr	w1, [sp, #68]
    78c0:	mov	x0, x19
    78c4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    78c8:	cbnz	w0, 7998 <PyFloat_FromString@plt+0xf08>
    78cc:	mov	x4, x22
    78d0:	mov	x3, x20
    78d4:	add	x0, sp, #0x48
    78d8:	mov	w2, #0x40000000            	// #1073741824
    78dc:	mov	x1, #0x0                   	// #0
    78e0:	str	wzr, [sp, #68]
    78e4:	str	xzr, [sp, #72]
    78e8:	bl	3dd28 <PyInit__decimal@@Base+0x21ae8>
    78ec:	mov	x19, x0
    78f0:	cmn	x0, #0x1
    78f4:	b.eq	7994 <PyFloat_FromString@plt+0xf04>  // b.none
    78f8:	bl	65a0 <_PyLong_New@plt>
    78fc:	mov	x22, x0
    7900:	cbz	x0, 7978 <PyFloat_FromString@plt+0xee8>
    7904:	ldr	x23, [sp, #72]
    7908:	add	x21, x0, #0x18
    790c:	mov	x0, x21
    7910:	lsl	x2, x19, #2
    7914:	mov	x1, x23
    7918:	bl	6470 <memcpy@plt>
    791c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    7920:	mov	x0, x23
    7924:	ldr	x1, [x1, #1912]
    7928:	blr	x1
    792c:	b	793c <PyFloat_FromString@plt+0xeac>
    7930:	ldr	w2, [x21, x1, lsl #2]
    7934:	cbnz	w2, 7948 <PyFloat_FromString@plt+0xeb8>
    7938:	mov	x19, x1
    793c:	sub	x1, x19, #0x1
    7940:	cmp	x19, #0x0
    7944:	b.gt	7930 <PyFloat_FromString@plt+0xea0>
    7948:	str	x19, [x22, #16]
    794c:	mov	x0, x20
    7950:	bl	2a878 <PyInit__decimal@@Base+0xe638>
    7954:	cbnz	w0, 79e8 <PyFloat_FromString@plt+0xf58>
    7958:	mov	x0, x20
    795c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7960:	mov	x0, x22
    7964:	ldp	x19, x20, [sp, #16]
    7968:	ldp	x21, x22, [sp, #32]
    796c:	ldr	x23, [sp, #48]
    7970:	ldp	x29, x30, [sp], #128
    7974:	ret
    7978:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    797c:	ldr	x0, [sp, #72]
    7980:	ldr	x1, [x1, #1912]
    7984:	blr	x1
    7988:	mov	x0, x20
    798c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    7990:	b	7960 <PyFloat_FromString@plt+0xed0>
    7994:	bl	65e0 <PyErr_NoMemory@plt>
    7998:	mov	x0, x20
    799c:	mov	x22, #0x0                   	// #0
    79a0:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    79a4:	mov	x0, x22
    79a8:	ldp	x19, x20, [sp, #16]
    79ac:	ldp	x21, x22, [sp, #32]
    79b0:	ldr	x23, [sp, #48]
    79b4:	ldp	x29, x30, [sp], #128
    79b8:	ret
    79bc:	mov	x0, x21
    79c0:	bl	2a868 <PyInit__decimal@@Base+0xe628>
    79c4:	cbz	w0, 7a00 <PyFloat_FromString@plt+0xf70>
    79c8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    79cc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    79d0:	mov	x22, #0x0                   	// #0
    79d4:	add	x1, x1, #0x640
    79d8:	ldr	x0, [x0, #3928]
    79dc:	ldr	x0, [x0]
    79e0:	bl	6650 <PyErr_SetString@plt>
    79e4:	b	7960 <PyFloat_FromString@plt+0xed0>
    79e8:	mov	x0, x20
    79ec:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
    79f0:	cbnz	w0, 7958 <PyFloat_FromString@plt+0xec8>
    79f4:	neg	x19, x19
    79f8:	str	x19, [x22, #16]
    79fc:	b	7958 <PyFloat_FromString@plt+0xec8>
    7a00:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7a04:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7a08:	mov	x22, #0x0                   	// #0
    7a0c:	add	x1, x1, #0x660
    7a10:	ldr	x0, [x0, #3992]
    7a14:	ldr	x0, [x0]
    7a18:	bl	6650 <PyErr_SetString@plt>
    7a1c:	b	7960 <PyFloat_FromString@plt+0xed0>
    7a20:	mov	x22, #0x0                   	// #0
    7a24:	bl	65e0 <PyErr_NoMemory@plt>
    7a28:	b	7960 <PyFloat_FromString@plt+0xed0>
    7a2c:	nop
    7a30:	stp	x29, x30, [sp, #-32]!
    7a34:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    7a38:	add	x2, x2, #0x328
    7a3c:	mov	x29, sp
    7a40:	str	x19, [sp, #16]
    7a44:	mov	x19, x1
    7a48:	add	x1, x2, #0x1a0
    7a4c:	ldr	x0, [x19, #8]
    7a50:	cmp	x0, x1
    7a54:	b.eq	7a60 <PyFloat_FromString@plt+0xfd0>  // b.none
    7a58:	bl	69c0 <PyType_IsSubtype@plt>
    7a5c:	cbz	w0, 7ab4 <PyFloat_FromString@plt+0x1024>
    7a60:	add	x0, x19, #0x18
    7a64:	bl	2a840 <PyInit__decimal@@Base+0xe600>
    7a68:	cbnz	w0, 7a90 <PyFloat_FromString@plt+0x1000>
    7a6c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    7a70:	ldr	x1, [x1, #3976]
    7a74:	mov	x0, x1
    7a78:	ldr	x2, [x1]
    7a7c:	add	x2, x2, #0x1
    7a80:	str	x2, [x1]
    7a84:	ldr	x19, [sp, #16]
    7a88:	ldp	x29, x30, [sp], #32
    7a8c:	ret
    7a90:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    7a94:	ldr	x19, [sp, #16]
    7a98:	ldr	x1, [x1, #4024]
    7a9c:	mov	x0, x1
    7aa0:	ldr	x2, [x1]
    7aa4:	add	x2, x2, #0x1
    7aa8:	str	x2, [x1]
    7aac:	ldp	x29, x30, [sp], #32
    7ab0:	ret
    7ab4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7ab8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7abc:	add	x1, x1, #0x688
    7ac0:	ldr	x0, [x0, #3936]
    7ac4:	ldr	x0, [x0]
    7ac8:	bl	6650 <PyErr_SetString@plt>
    7acc:	mov	x0, #0x0                   	// #0
    7ad0:	b	7a84 <PyFloat_FromString@plt+0xff4>
    7ad4:	nop
    7ad8:	stp	x29, x30, [sp, #-48]!
    7adc:	mov	x29, sp
    7ae0:	ldr	x1, [x0, #8]
    7ae4:	ldr	x1, [x1, #168]
    7ae8:	str	x21, [sp, #32]
    7aec:	tbz	w1, #29, 7b9c <PyFloat_FromString@plt+0x110c>
    7af0:	stp	x19, x20, [sp, #16]
    7af4:	mov	x20, x0
    7af8:	bl	64e0 <PyDict_Size@plt>
    7afc:	cmp	x0, #0x9
    7b00:	b.ne	7b6c <PyFloat_FromString@plt+0x10dc>  // b.any
    7b04:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    7b08:	add	x19, x0, #0x9b0
    7b0c:	mov	w21, #0x0                   	// #0
    7b10:	ldr	x0, [x0, #2480]
    7b14:	cbnz	x0, 7b3c <PyFloat_FromString@plt+0x10ac>
    7b18:	b	7bc8 <PyFloat_FromString@plt+0x1138>
    7b1c:	bl	68d0 <PyObject_IsTrue@plt>
    7b20:	tbnz	w0, #31, 7b54 <PyFloat_FromString@plt+0x10c4>
    7b24:	cmp	w0, #0x1
    7b28:	b.ne	7b34 <PyFloat_FromString@plt+0x10a4>  // b.any
    7b2c:	ldr	w0, [x19, #16]
    7b30:	orr	w21, w21, w0
    7b34:	ldr	x1, [x19, #32]!
    7b38:	cbz	x1, 7bc8 <PyFloat_FromString@plt+0x1138>
    7b3c:	ldr	x1, [x19, #24]
    7b40:	mov	x0, x20
    7b44:	bl	6a80 <PyDict_GetItemWithError@plt>
    7b48:	cbnz	x0, 7b1c <PyFloat_FromString@plt+0x108c>
    7b4c:	bl	67e0 <PyErr_Occurred@plt>
    7b50:	cbz	x0, 7b6c <PyFloat_FromString@plt+0x10dc>
    7b54:	mov	w21, #0x10000               	// #65536
    7b58:	mov	w0, w21
    7b5c:	ldp	x19, x20, [sp, #16]
    7b60:	ldr	x21, [sp, #32]
    7b64:	ldp	x29, x30, [sp], #48
    7b68:	ret
    7b6c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7b70:	mov	w21, #0x8000                	// #32768
    7b74:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7b78:	add	x1, x1, #0x6c8
    7b7c:	ldr	x0, [x0, #3968]
    7b80:	ldr	x0, [x0]
    7b84:	bl	6650 <PyErr_SetString@plt>
    7b88:	mov	w0, w21
    7b8c:	ldp	x19, x20, [sp, #16]
    7b90:	ldr	x21, [sp, #32]
    7b94:	ldp	x29, x30, [sp], #48
    7b98:	ret
    7b9c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7ba0:	mov	w21, #0x8000                	// #32768
    7ba4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7ba8:	add	x1, x1, #0x6a8
    7bac:	ldr	x0, [x0, #3936]
    7bb0:	ldr	x0, [x0]
    7bb4:	bl	6650 <PyErr_SetString@plt>
    7bb8:	mov	w0, w21
    7bbc:	ldr	x21, [sp, #32]
    7bc0:	ldp	x29, x30, [sp], #48
    7bc4:	ret
    7bc8:	mov	w0, w21
    7bcc:	ldp	x19, x20, [sp, #16]
    7bd0:	ldr	x21, [sp, #32]
    7bd4:	ldp	x29, x30, [sp], #48
    7bd8:	ret
    7bdc:	nop
    7be0:	stp	x29, x30, [sp, #-48]!
    7be4:	mov	x29, sp
    7be8:	stp	x19, x20, [sp, #16]
    7bec:	mov	w19, w2
    7bf0:	sub	w2, w2, #0x2
    7bf4:	str	x21, [sp, #32]
    7bf8:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
    7bfc:	mov	x20, x0
    7c00:	cmp	w2, #0x1
    7c04:	ldr	x0, [x21, #3912]
    7c08:	b.ls	7c28 <PyFloat_FromString@plt+0x1198>  // b.plast
    7c0c:	ldr	x1, [x0]
    7c10:	add	x1, x1, #0x1
    7c14:	str	x1, [x0]
    7c18:	ldp	x19, x20, [sp, #16]
    7c1c:	ldr	x21, [sp, #32]
    7c20:	ldp	x29, x30, [sp], #48
    7c24:	ret
    7c28:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
    7c2c:	ldr	x3, [x1, #8]
    7c30:	ldr	x2, [x2, #2040]
    7c34:	cmp	x3, x2
    7c38:	b.eq	7c6c <PyFloat_FromString@plt+0x11dc>  // b.none
    7c3c:	ldr	x2, [x3, #168]
    7c40:	tbz	w2, #29, 7c0c <PyFloat_FromString@plt+0x117c>
    7c44:	mov	x0, x1
    7c48:	bl	7ad8 <PyFloat_FromString@plt+0x1048>
    7c4c:	mov	w1, w0
    7c50:	tst	w0, #0x18000
    7c54:	b.eq	7cac <PyFloat_FromString@plt+0x121c>  // b.none
    7c58:	mov	x0, #0x0                   	// #0
    7c5c:	tbz	w1, #15, 7c18 <PyFloat_FromString@plt+0x1188>
    7c60:	bl	6730 <PyErr_Clear@plt>
    7c64:	ldr	x0, [x21, #3912]
    7c68:	b	7c0c <PyFloat_FromString@plt+0x117c>
    7c6c:	ldr	x0, [x1, #16]
    7c70:	ldr	x2, [x20, #16]
    7c74:	ldr	w0, [x0]
    7c78:	ldr	w1, [x2]
    7c7c:	cmp	w1, w0
    7c80:	cset	w1, eq  // eq = none
    7c84:	cmp	w19, #0x3
    7c88:	cset	w0, eq  // eq = none
    7c8c:	cmp	w1, w0
    7c90:	b.eq	7ca0 <PyFloat_FromString@plt+0x1210>  // b.none
    7c94:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7c98:	ldr	x0, [x0, #4024]
    7c9c:	b	7c0c <PyFloat_FromString@plt+0x117c>
    7ca0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7ca4:	ldr	x0, [x0, #3976]
    7ca8:	b	7c0c <PyFloat_FromString@plt+0x117c>
    7cac:	ldr	x0, [x20, #16]
    7cb0:	ldr	w0, [x0]
    7cb4:	cmp	w0, w1
    7cb8:	b	7c80 <PyFloat_FromString@plt+0x11f0>
    7cbc:	nop
    7cc0:	stp	x29, x30, [sp, #-32]!
    7cc4:	mov	x29, sp
    7cc8:	cbz	x2, 7d7c <PyFloat_FromString@plt+0x12ec>
    7ccc:	stp	x19, x20, [sp, #16]
    7cd0:	mov	x20, x0
    7cd4:	mov	x0, x2
    7cd8:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    7cdc:	add	x3, x2, #0x9b0
    7ce0:	ldr	x2, [x2, #2480]
    7ce4:	cbnz	x2, 7cf4 <PyFloat_FromString@plt+0x1264>
    7ce8:	b	7d3c <PyFloat_FromString@plt+0x12ac>
    7cec:	ldr	x4, [x3, #32]!
    7cf0:	cbz	x4, 7d3c <PyFloat_FromString@plt+0x12ac>
    7cf4:	ldr	x4, [x3, #24]
    7cf8:	cmp	x1, x4
    7cfc:	b.ne	7cec <PyFloat_FromString@plt+0x125c>  // b.any
    7d00:	ldr	w19, [x3, #16]
    7d04:	tst	w19, #0x18000
    7d08:	b.ne	7d54 <PyFloat_FromString@plt+0x12c4>  // b.any
    7d0c:	bl	68d0 <PyObject_IsTrue@plt>
    7d10:	tbnz	w0, #31, 7d54 <PyFloat_FromString@plt+0x12c4>
    7d14:	ldr	x1, [x20, #16]
    7d18:	cmp	w0, #0x1
    7d1c:	ldr	w0, [x1]
    7d20:	b.eq	7d64 <PyFloat_FromString@plt+0x12d4>  // b.none
    7d24:	bic	w19, w0, w19
    7d28:	str	w19, [x1]
    7d2c:	ldp	x19, x20, [sp, #16]
    7d30:	mov	w0, #0x0                   	// #0
    7d34:	ldp	x29, x30, [sp], #32
    7d38:	ret
    7d3c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7d40:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7d44:	add	x1, x1, #0x700
    7d48:	ldr	x0, [x0, #3968]
    7d4c:	ldr	x0, [x0]
    7d50:	bl	6650 <PyErr_SetString@plt>
    7d54:	mov	w0, #0xffffffff            	// #-1
    7d58:	ldp	x19, x20, [sp, #16]
    7d5c:	ldp	x29, x30, [sp], #32
    7d60:	ret
    7d64:	orr	w19, w19, w0
    7d68:	str	w19, [x1]
    7d6c:	mov	w0, #0x0                   	// #0
    7d70:	ldp	x19, x20, [sp, #16]
    7d74:	ldp	x29, x30, [sp], #32
    7d78:	ret
    7d7c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7d80:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7d84:	add	x1, x1, #0x6e0
    7d88:	ldr	x0, [x0, #3928]
    7d8c:	ldr	x0, [x0]
    7d90:	bl	6650 <PyErr_SetString@plt>
    7d94:	mov	w0, #0xffffffff            	// #-1
    7d98:	b	7d34 <PyFloat_FromString@plt+0x12a4>
    7d9c:	nop
    7da0:	stp	x29, x30, [sp, #-32]!
    7da4:	mov	x29, sp
    7da8:	stp	x19, x20, [sp, #16]
    7dac:	mov	x20, x0
    7db0:	mov	x0, x1
    7db4:	bl	66f0 <PyLong_AsSsize_t@plt>
    7db8:	mov	x19, x0
    7dbc:	cmn	x0, #0x1
    7dc0:	b.eq	7de0 <PyFloat_FromString@plt+0x1350>  // b.none
    7dc4:	cmp	x0, #0x1
    7dc8:	b.hi	7de8 <PyFloat_FromString@plt+0x1358>  // b.pmore
    7dcc:	mov	w0, #0x0                   	// #0
    7dd0:	str	w19, [x20, #80]
    7dd4:	ldp	x19, x20, [sp, #16]
    7dd8:	ldp	x29, x30, [sp], #32
    7ddc:	ret
    7de0:	bl	67e0 <PyErr_Occurred@plt>
    7de4:	cbnz	x0, 7e10 <PyFloat_FromString@plt+0x1380>
    7de8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7dec:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7df0:	add	x1, x1, #0x798
    7df4:	ldr	x0, [x0, #3928]
    7df8:	ldr	x0, [x0]
    7dfc:	bl	6650 <PyErr_SetString@plt>
    7e00:	mov	w0, #0xffffffff            	// #-1
    7e04:	ldp	x19, x20, [sp, #16]
    7e08:	ldp	x29, x30, [sp], #32
    7e0c:	ret
    7e10:	mov	w0, w19
    7e14:	b	7dd4 <PyFloat_FromString@plt+0x1344>
    7e18:	stp	x29, x30, [sp, #-32]!
    7e1c:	mov	x29, sp
    7e20:	stp	x19, x20, [sp, #16]
    7e24:	mov	x20, x0
    7e28:	mov	x0, x1
    7e2c:	bl	66f0 <PyLong_AsSsize_t@plt>
    7e30:	mov	x19, x0
    7e34:	cmn	x0, #0x1
    7e38:	b.eq	7e5c <PyFloat_FromString@plt+0x13cc>  // b.none
    7e3c:	mov	x1, x19
    7e40:	add	x0, x20, #0x10
    7e44:	bl	1f730 <PyInit__decimal@@Base+0x34f0>
    7e48:	cbz	w0, 7e6c <PyFloat_FromString@plt+0x13dc>
    7e4c:	mov	w0, #0x0                   	// #0
    7e50:	ldp	x19, x20, [sp, #16]
    7e54:	ldp	x29, x30, [sp], #32
    7e58:	ret
    7e5c:	bl	67e0 <PyErr_Occurred@plt>
    7e60:	cbz	x0, 7e3c <PyFloat_FromString@plt+0x13ac>
    7e64:	mov	w0, w19
    7e68:	b	7e50 <PyFloat_FromString@plt+0x13c0>
    7e6c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7e70:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7e74:	add	x1, x1, #0x7c0
    7e78:	ldr	x0, [x0, #3928]
    7e7c:	ldr	x0, [x0]
    7e80:	bl	6650 <PyErr_SetString@plt>
    7e84:	mov	w0, #0xffffffff            	// #-1
    7e88:	b	7e50 <PyFloat_FromString@plt+0x13c0>
    7e8c:	nop
    7e90:	stp	x29, x30, [sp, #-32]!
    7e94:	mov	x29, sp
    7e98:	stp	x19, x20, [sp, #16]
    7e9c:	mov	x20, x0
    7ea0:	mov	x0, x1
    7ea4:	bl	66f0 <PyLong_AsSsize_t@plt>
    7ea8:	mov	x19, x0
    7eac:	cmn	x0, #0x1
    7eb0:	b.eq	7ed4 <PyFloat_FromString@plt+0x1444>  // b.none
    7eb4:	mov	x1, x19
    7eb8:	add	x0, x20, #0x10
    7ebc:	bl	1f790 <PyInit__decimal@@Base+0x3550>
    7ec0:	cbz	w0, 7ee4 <PyFloat_FromString@plt+0x1454>
    7ec4:	mov	w0, #0x0                   	// #0
    7ec8:	ldp	x19, x20, [sp, #16]
    7ecc:	ldp	x29, x30, [sp], #32
    7ed0:	ret
    7ed4:	bl	67e0 <PyErr_Occurred@plt>
    7ed8:	cbz	x0, 7eb4 <PyFloat_FromString@plt+0x1424>
    7edc:	mov	w0, w19
    7ee0:	b	7ec8 <PyFloat_FromString@plt+0x1438>
    7ee4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7ee8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7eec:	add	x1, x1, #0x7e8
    7ef0:	ldr	x0, [x0, #3928]
    7ef4:	ldr	x0, [x0]
    7ef8:	bl	6650 <PyErr_SetString@plt>
    7efc:	mov	w0, #0xffffffff            	// #-1
    7f00:	b	7ec8 <PyFloat_FromString@plt+0x1438>
    7f04:	nop
    7f08:	stp	x29, x30, [sp, #-32]!
    7f0c:	mov	x29, sp
    7f10:	stp	x19, x20, [sp, #16]
    7f14:	mov	x20, x0
    7f18:	mov	x0, x1
    7f1c:	bl	66f0 <PyLong_AsSsize_t@plt>
    7f20:	mov	x19, x0
    7f24:	cmn	x0, #0x1
    7f28:	b.eq	7f4c <PyFloat_FromString@plt+0x14bc>  // b.none
    7f2c:	mov	x1, x19
    7f30:	add	x0, x20, #0x10
    7f34:	bl	1f760 <PyInit__decimal@@Base+0x3520>
    7f38:	cbz	w0, 7f5c <PyFloat_FromString@plt+0x14cc>
    7f3c:	mov	w0, #0x0                   	// #0
    7f40:	ldp	x19, x20, [sp, #16]
    7f44:	ldp	x29, x30, [sp], #32
    7f48:	ret
    7f4c:	bl	67e0 <PyErr_Occurred@plt>
    7f50:	cbz	x0, 7f2c <PyFloat_FromString@plt+0x149c>
    7f54:	mov	w0, w19
    7f58:	b	7f40 <PyFloat_FromString@plt+0x14b0>
    7f5c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7f60:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7f64:	add	x1, x1, #0x810
    7f68:	ldr	x0, [x0, #3928]
    7f6c:	ldr	x0, [x0]
    7f70:	bl	6650 <PyErr_SetString@plt>
    7f74:	mov	w0, #0xffffffff            	// #-1
    7f78:	b	7f40 <PyFloat_FromString@plt+0x14b0>
    7f7c:	nop
    7f80:	stp	x29, x30, [sp, #-32]!
    7f84:	mov	x29, sp
    7f88:	stp	x19, x20, [sp, #16]
    7f8c:	mov	x20, x0
    7f90:	mov	x0, x1
    7f94:	bl	66f0 <PyLong_AsSsize_t@plt>
    7f98:	mov	x19, x0
    7f9c:	cmn	x0, #0x1
    7fa0:	b.eq	7fdc <PyFloat_FromString@plt+0x154c>  // b.none
    7fa4:	mov	x0, #0x80000000            	// #2147483648
    7fa8:	add	x0, x19, x0
    7fac:	mov	x1, #0xffffffff            	// #4294967295
    7fb0:	cmp	x0, x1
    7fb4:	mov	w1, #0x7fffffff            	// #2147483647
    7fb8:	csel	w1, w19, w1, ls  // ls = plast
    7fbc:	add	x0, x20, #0x10
    7fc0:	bl	1f830 <PyInit__decimal@@Base+0x35f0>
    7fc4:	mov	w1, w0
    7fc8:	mov	w0, #0x0                   	// #0
    7fcc:	cbz	w1, 7ff4 <PyFloat_FromString@plt+0x1564>
    7fd0:	ldp	x19, x20, [sp, #16]
    7fd4:	ldp	x29, x30, [sp], #32
    7fd8:	ret
    7fdc:	bl	67e0 <PyErr_Occurred@plt>
    7fe0:	cbnz	x0, 7fec <PyFloat_FromString@plt+0x155c>
    7fe4:	mov	w1, w19
    7fe8:	b	7fbc <PyFloat_FromString@plt+0x152c>
    7fec:	mov	w0, w19
    7ff0:	b	7fd0 <PyFloat_FromString@plt+0x1540>
    7ff4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    7ff8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    7ffc:	add	x1, x1, #0x838
    8000:	ldr	x0, [x0, #3928]
    8004:	ldr	x0, [x0]
    8008:	bl	6650 <PyErr_SetString@plt>
    800c:	mov	w0, #0xffffffff            	// #-1
    8010:	b	7fd0 <PyFloat_FromString@plt+0x1540>
    8014:	nop
    8018:	stp	x29, x30, [sp, #-32]!
    801c:	mov	x29, sp
    8020:	stp	x19, x20, [sp, #16]
    8024:	mov	x20, x0
    8028:	mov	x19, x1
    802c:	ldr	x0, [x1, #8]
    8030:	ldr	x0, [x0, #168]
    8034:	tbz	w0, #28, 807c <PyFloat_FromString@plt+0x15ec>
    8038:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    803c:	mov	x0, x19
    8040:	add	x1, x1, #0x860
    8044:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    8048:	cbnz	w0, 8068 <PyFloat_FromString@plt+0x15d8>
    804c:	ldr	x0, [x20, #64]
    8050:	ldr	x1, [x0]
    8054:	add	x1, x1, #0x1
    8058:	str	x1, [x0]
    805c:	ldp	x19, x20, [sp, #16]
    8060:	ldp	x29, x30, [sp], #32
    8064:	ret
    8068:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    806c:	mov	x0, x19
    8070:	add	x1, x1, #0x868
    8074:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    8078:	cbz	w0, 8090 <PyFloat_FromString@plt+0x1600>
    807c:	mov	x1, x19
    8080:	mov	x0, x20
    8084:	ldp	x19, x20, [sp, #16]
    8088:	ldp	x29, x30, [sp], #32
    808c:	b	67b0 <PyObject_GenericGetAttr@plt>
    8090:	ldr	x0, [x20, #72]
    8094:	ldr	x1, [x0]
    8098:	add	x1, x1, #0x1
    809c:	str	x1, [x0]
    80a0:	b	805c <PyFloat_FromString@plt+0x15cc>
    80a4:	nop
    80a8:	ldr	x2, [x0]
    80ac:	add	x2, x2, #0x1
    80b0:	str	x2, [x0]
    80b4:	ret
    80b8:	ldr	x2, [x0]
    80bc:	add	x2, x2, #0x1
    80c0:	str	x2, [x0]
    80c4:	ret
    80c8:	ldr	x2, [x0]
    80cc:	add	x2, x2, #0x1
    80d0:	str	x2, [x0]
    80d4:	ret
    80d8:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    80dc:	ldr	x3, [x2, #2480]
    80e0:	cbz	x3, 8138 <PyFloat_FromString@plt+0x16a8>
    80e4:	add	x2, x2, #0x9b0
    80e8:	b	80f4 <PyFloat_FromString@plt+0x1664>
    80ec:	ldr	x3, [x2, #32]!
    80f0:	cbz	x3, 8138 <PyFloat_FromString@plt+0x16a8>
    80f4:	ldr	x3, [x2, #24]
    80f8:	cmp	x1, x3
    80fc:	b.ne	80ec <PyFloat_FromString@plt+0x165c>  // b.any
    8100:	ldr	w1, [x2, #16]
    8104:	tst	w1, #0x18000
    8108:	b.ne	8180 <PyFloat_FromString@plt+0x16f0>  // b.any
    810c:	ldr	x0, [x0, #16]
    8110:	ldr	w0, [x0]
    8114:	tst	w1, w0
    8118:	b.eq	8164 <PyFloat_FromString@plt+0x16d4>  // b.none
    811c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8120:	ldr	x1, [x1, #4024]
    8124:	mov	x0, x1
    8128:	ldr	x2, [x1]
    812c:	add	x2, x2, #0x1
    8130:	str	x2, [x1]
    8134:	ret
    8138:	stp	x29, x30, [sp, #-16]!
    813c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8140:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8144:	mov	x29, sp
    8148:	ldr	x0, [x0, #3968]
    814c:	add	x1, x1, #0x700
    8150:	ldr	x0, [x0]
    8154:	bl	6650 <PyErr_SetString@plt>
    8158:	mov	x0, #0x0                   	// #0
    815c:	ldp	x29, x30, [sp], #16
    8160:	ret
    8164:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8168:	ldr	x1, [x1, #3976]
    816c:	mov	x0, x1
    8170:	ldr	x2, [x1]
    8174:	add	x2, x2, #0x1
    8178:	str	x2, [x1]
    817c:	ret
    8180:	mov	x0, #0x0                   	// #0
    8184:	ret
    8188:	stp	x29, x30, [sp, #-32]!
    818c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    8190:	mov	x29, sp
    8194:	str	x19, [sp, #16]
    8198:	mov	x19, x1
    819c:	add	x1, x0, #0x328
    81a0:	add	x1, x1, #0x1a0
    81a4:	ldr	x0, [x19, #8]
    81a8:	cmp	x0, x1
    81ac:	b.eq	81b8 <PyFloat_FromString@plt+0x1728>  // b.none
    81b0:	bl	69c0 <PyType_IsSubtype@plt>
    81b4:	cbz	w0, 81d4 <PyFloat_FromString@plt+0x1744>
    81b8:	ldr	x1, [x19]
    81bc:	mov	x0, x19
    81c0:	add	x1, x1, #0x1
    81c4:	str	x1, [x19]
    81c8:	ldr	x19, [sp, #16]
    81cc:	ldp	x29, x30, [sp], #32
    81d0:	ret
    81d4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    81d8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    81dc:	add	x1, x1, #0x688
    81e0:	ldr	x0, [x0, #3936]
    81e4:	ldr	x0, [x0]
    81e8:	bl	6650 <PyErr_SetString@plt>
    81ec:	mov	x0, #0x0                   	// #0
    81f0:	b	81c8 <PyFloat_FromString@plt+0x1738>
    81f4:	nop
    81f8:	stp	x29, x30, [sp, #-16]!
    81fc:	add	x0, x0, #0x18
    8200:	mov	x29, sp
    8204:	bl	2a8b8 <PyInit__decimal@@Base+0xe678>
    8208:	cbz	w0, 822c <PyFloat_FromString@plt+0x179c>
    820c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8210:	ldr	x1, [x1, #4024]
    8214:	mov	x0, x1
    8218:	ldr	x2, [x1]
    821c:	add	x2, x2, #0x1
    8220:	str	x2, [x1]
    8224:	ldp	x29, x30, [sp], #16
    8228:	ret
    822c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8230:	ldr	x1, [x1, #3976]
    8234:	mov	x0, x1
    8238:	ldr	x2, [x1]
    823c:	add	x2, x2, #0x1
    8240:	str	x2, [x1]
    8244:	ldp	x29, x30, [sp], #16
    8248:	ret
    824c:	nop
    8250:	stp	x29, x30, [sp, #-16]!
    8254:	add	x0, x0, #0x18
    8258:	mov	x29, sp
    825c:	bl	2a8a8 <PyInit__decimal@@Base+0xe668>
    8260:	cbz	w0, 8284 <PyFloat_FromString@plt+0x17f4>
    8264:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8268:	ldr	x1, [x1, #4024]
    826c:	mov	x0, x1
    8270:	ldr	x2, [x1]
    8274:	add	x2, x2, #0x1
    8278:	str	x2, [x1]
    827c:	ldp	x29, x30, [sp], #16
    8280:	ret
    8284:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8288:	ldr	x1, [x1, #3976]
    828c:	mov	x0, x1
    8290:	ldr	x2, [x1]
    8294:	add	x2, x2, #0x1
    8298:	str	x2, [x1]
    829c:	ldp	x29, x30, [sp], #16
    82a0:	ret
    82a4:	nop
    82a8:	stp	x29, x30, [sp, #-16]!
    82ac:	add	x0, x0, #0x18
    82b0:	mov	x29, sp
    82b4:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
    82b8:	cbz	w0, 82dc <PyFloat_FromString@plt+0x184c>
    82bc:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    82c0:	ldr	x1, [x1, #4024]
    82c4:	mov	x0, x1
    82c8:	ldr	x2, [x1]
    82cc:	add	x2, x2, #0x1
    82d0:	str	x2, [x1]
    82d4:	ldp	x29, x30, [sp], #16
    82d8:	ret
    82dc:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    82e0:	ldr	x1, [x1, #3976]
    82e4:	mov	x0, x1
    82e8:	ldr	x2, [x1]
    82ec:	add	x2, x2, #0x1
    82f0:	str	x2, [x1]
    82f4:	ldp	x29, x30, [sp], #16
    82f8:	ret
    82fc:	nop
    8300:	stp	x29, x30, [sp, #-16]!
    8304:	add	x0, x0, #0x18
    8308:	mov	x29, sp
    830c:	bl	2a840 <PyInit__decimal@@Base+0xe600>
    8310:	cbz	w0, 8334 <PyFloat_FromString@plt+0x18a4>
    8314:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8318:	ldr	x1, [x1, #4024]
    831c:	mov	x0, x1
    8320:	ldr	x2, [x1]
    8324:	add	x2, x2, #0x1
    8328:	str	x2, [x1]
    832c:	ldp	x29, x30, [sp], #16
    8330:	ret
    8334:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8338:	ldr	x1, [x1, #3976]
    833c:	mov	x0, x1
    8340:	ldr	x2, [x1]
    8344:	add	x2, x2, #0x1
    8348:	str	x2, [x1]
    834c:	ldp	x29, x30, [sp], #16
    8350:	ret
    8354:	nop
    8358:	stp	x29, x30, [sp, #-16]!
    835c:	add	x0, x0, #0x18
    8360:	mov	x29, sp
    8364:	bl	2a848 <PyInit__decimal@@Base+0xe608>
    8368:	cbz	w0, 838c <PyFloat_FromString@plt+0x18fc>
    836c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8370:	ldr	x1, [x1, #4024]
    8374:	mov	x0, x1
    8378:	ldr	x2, [x1]
    837c:	add	x2, x2, #0x1
    8380:	str	x2, [x1]
    8384:	ldp	x29, x30, [sp], #16
    8388:	ret
    838c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8390:	ldr	x1, [x1, #3976]
    8394:	mov	x0, x1
    8398:	ldr	x2, [x1]
    839c:	add	x2, x2, #0x1
    83a0:	str	x2, [x1]
    83a4:	ldp	x29, x30, [sp], #16
    83a8:	ret
    83ac:	nop
    83b0:	stp	x29, x30, [sp, #-16]!
    83b4:	add	x0, x0, #0x18
    83b8:	mov	x29, sp
    83bc:	bl	2a858 <PyInit__decimal@@Base+0xe618>
    83c0:	cbz	w0, 83e4 <PyFloat_FromString@plt+0x1954>
    83c4:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    83c8:	ldr	x1, [x1, #4024]
    83cc:	mov	x0, x1
    83d0:	ldr	x2, [x1]
    83d4:	add	x2, x2, #0x1
    83d8:	str	x2, [x1]
    83dc:	ldp	x29, x30, [sp], #16
    83e0:	ret
    83e4:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    83e8:	ldr	x1, [x1, #3976]
    83ec:	mov	x0, x1
    83f0:	ldr	x2, [x1]
    83f4:	add	x2, x2, #0x1
    83f8:	str	x2, [x1]
    83fc:	ldp	x29, x30, [sp], #16
    8400:	ret
    8404:	nop
    8408:	stp	x29, x30, [sp, #-16]!
    840c:	add	x0, x0, #0x18
    8410:	mov	x29, sp
    8414:	bl	2a868 <PyInit__decimal@@Base+0xe628>
    8418:	cbz	w0, 843c <PyFloat_FromString@plt+0x19ac>
    841c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8420:	ldr	x1, [x1, #4024]
    8424:	mov	x0, x1
    8428:	ldr	x2, [x1]
    842c:	add	x2, x2, #0x1
    8430:	str	x2, [x1]
    8434:	ldp	x29, x30, [sp], #16
    8438:	ret
    843c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8440:	ldr	x1, [x1, #3976]
    8444:	mov	x0, x1
    8448:	ldr	x2, [x1]
    844c:	add	x2, x2, #0x1
    8450:	str	x2, [x1]
    8454:	ldp	x29, x30, [sp], #16
    8458:	ret
    845c:	nop
    8460:	stp	x29, x30, [sp, #-16]!
    8464:	add	x0, x0, #0x18
    8468:	mov	x29, sp
    846c:	bl	2a898 <PyInit__decimal@@Base+0xe658>
    8470:	cbz	w0, 8494 <PyFloat_FromString@plt+0x1a04>
    8474:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8478:	ldr	x1, [x1, #4024]
    847c:	mov	x0, x1
    8480:	ldr	x2, [x1]
    8484:	add	x2, x2, #0x1
    8488:	str	x2, [x1]
    848c:	ldp	x29, x30, [sp], #16
    8490:	ret
    8494:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    8498:	ldr	x1, [x1, #3976]
    849c:	mov	x0, x1
    84a0:	ldr	x2, [x1]
    84a4:	add	x2, x2, #0x1
    84a8:	str	x2, [x1]
    84ac:	ldp	x29, x30, [sp], #16
    84b0:	ret
    84b4:	nop
    84b8:	stp	x29, x30, [sp, #-96]!
    84bc:	mov	x29, sp
    84c0:	stp	x25, x26, [sp, #64]
    84c4:	mov	w26, w2
    84c8:	ldrb	w2, [x0, #32]
    84cc:	stp	x19, x20, [sp, #16]
    84d0:	mov	x19, x0
    84d4:	stp	x21, x22, [sp, #32]
    84d8:	mov	w21, w1
    84dc:	tbz	w2, #7, 876c <PyFloat_FromString@plt+0x1cdc>
    84e0:	str	x27, [sp, #80]
    84e4:	ldrb	w20, [x19, #32]
    84e8:	ubfx	x20, x20, #2, #3
    84ec:	tbnz	w2, #5, 8638 <PyFloat_FromString@plt+0x1ba8>
    84f0:	ldr	x27, [x19, #72]
    84f4:	ldr	x25, [x19, #16]
    84f8:	add	x0, x25, #0x1
    84fc:	bl	6a40 <PyMem_Malloc@plt>
    8500:	mov	x22, x0
    8504:	cbz	x0, 88cc <PyFloat_FromString@plt+0x1e3c>
    8508:	cbz	w21, 8698 <PyFloat_FromString@plt+0x1c08>
    850c:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
    8510:	cmp	w20, #0x2
    8514:	ldr	x21, [x21, #3880]
    8518:	b.eq	85d4 <PyFloat_FromString@plt+0x1b44>  // b.none
    851c:	cmp	w20, #0x1
    8520:	b.eq	8568 <PyFloat_FromString@plt+0x1ad8>  // b.none
    8524:	sub	x19, x25, #0x1
    8528:	cmp	x25, #0x0
    852c:	b.le	8554 <PyFloat_FromString@plt+0x1ac4>
    8530:	ldr	w0, [x27, x19, lsl #2]
    8534:	cmp	w0, #0x7f
    8538:	b.hi	864c <PyFloat_FromString@plt+0x1bbc>  // b.pmore
    853c:	ldrb	w0, [x21, w0, uxtw]
    8540:	cbz	w0, 8654 <PyFloat_FromString@plt+0x1bc4>
    8544:	mov	x25, x19
    8548:	sub	x19, x25, #0x1
    854c:	cmp	x25, #0x0
    8550:	b.gt	8530 <PyFloat_FromString@plt+0x1aa0>
    8554:	mov	x21, x22
    8558:	b	8718 <PyFloat_FromString@plt+0x1c88>
    855c:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    8560:	cbz	w0, 8588 <PyFloat_FromString@plt+0x1af8>
    8564:	mov	x25, x19
    8568:	sub	x19, x25, #0x1
    856c:	cmp	x25, #0x0
    8570:	b.le	8554 <PyFloat_FromString@plt+0x1ac4>
    8574:	ldrb	w0, [x27, x19]
    8578:	cmp	w0, #0x7f
    857c:	b.hi	855c <PyFloat_FromString@plt+0x1acc>  // b.pmore
    8580:	ldrb	w0, [x21, w0, uxtw]
    8584:	cbnz	w0, 8564 <PyFloat_FromString@plt+0x1ad4>
    8588:	mov	x19, #0x0                   	// #0
    858c:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
    8590:	ldrb	w0, [x27, x19]
    8594:	ldr	x21, [x21, #3880]
    8598:	cmp	w0, #0x7f
    859c:	b.hi	85c0 <PyFloat_FromString@plt+0x1b30>  // b.pmore
    85a0:	ldrb	w0, [x21, w0, uxtw]
    85a4:	cbz	w0, 869c <PyFloat_FromString@plt+0x1c0c>
    85a8:	add	x19, x19, #0x1
    85ac:	cmp	x19, x25
    85b0:	b.ge	8554 <PyFloat_FromString@plt+0x1ac4>  // b.tcont
    85b4:	ldrb	w0, [x27, x19]
    85b8:	cmp	w0, #0x7f
    85bc:	b.ls	85a0 <PyFloat_FromString@plt+0x1b10>  // b.plast
    85c0:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    85c4:	b	85a4 <PyFloat_FromString@plt+0x1b14>
    85c8:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    85cc:	cbz	w0, 85f4 <PyFloat_FromString@plt+0x1b64>
    85d0:	mov	x25, x19
    85d4:	sub	x19, x25, #0x1
    85d8:	cmp	x25, #0x0
    85dc:	b.le	8554 <PyFloat_FromString@plt+0x1ac4>
    85e0:	ldrh	w0, [x27, x19, lsl #1]
    85e4:	cmp	w0, #0x7f
    85e8:	b.hi	85c8 <PyFloat_FromString@plt+0x1b38>  // b.pmore
    85ec:	ldrb	w0, [x21, w0, uxtw]
    85f0:	cbnz	w0, 85d0 <PyFloat_FromString@plt+0x1b40>
    85f4:	mov	x19, #0x0                   	// #0
    85f8:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
    85fc:	ldrh	w0, [x27, x19, lsl #1]
    8600:	ldr	x21, [x21, #3880]
    8604:	cmp	w0, #0x7f
    8608:	b.hi	8630 <PyFloat_FromString@plt+0x1ba0>  // b.pmore
    860c:	nop
    8610:	ldrb	w0, [x21, w0, uxtw]
    8614:	cbz	w0, 869c <PyFloat_FromString@plt+0x1c0c>
    8618:	add	x19, x19, #0x1
    861c:	cmp	x19, x25
    8620:	b.ge	8554 <PyFloat_FromString@plt+0x1ac4>  // b.tcont
    8624:	ldrh	w0, [x27, x19, lsl #1]
    8628:	cmp	w0, #0x7f
    862c:	b.ls	8610 <PyFloat_FromString@plt+0x1b80>  // b.plast
    8630:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    8634:	b	8614 <PyFloat_FromString@plt+0x1b84>
    8638:	tst	x2, #0x40
    863c:	add	x27, x19, #0x30
    8640:	add	x0, x19, #0x48
    8644:	csel	x27, x0, x27, eq  // eq = none
    8648:	b	84f4 <PyFloat_FromString@plt+0x1a64>
    864c:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    8650:	cbnz	w0, 8544 <PyFloat_FromString@plt+0x1ab4>
    8654:	mov	x19, #0x0                   	// #0
    8658:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
    865c:	ldr	w0, [x27, x19, lsl #2]
    8660:	ldr	x21, [x21, #3880]
    8664:	cmp	w0, #0x7f
    8668:	b.hi	8690 <PyFloat_FromString@plt+0x1c00>  // b.pmore
    866c:	nop
    8670:	ldrb	w0, [x21, w0, uxtw]
    8674:	cbz	w0, 869c <PyFloat_FromString@plt+0x1c0c>
    8678:	add	x19, x19, #0x1
    867c:	cmp	x19, x25
    8680:	b.ge	8554 <PyFloat_FromString@plt+0x1ac4>  // b.tcont
    8684:	ldr	w0, [x27, x19, lsl #2]
    8688:	cmp	w0, #0x7f
    868c:	b.ls	8670 <PyFloat_FromString@plt+0x1be0>  // b.plast
    8690:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    8694:	b	8674 <PyFloat_FromString@plt+0x1be4>
    8698:	mov	x19, #0x0                   	// #0
    869c:	cmp	x19, x25
    86a0:	b.ge	8554 <PyFloat_FromString@plt+0x1ac4>  // b.tcont
    86a4:	stp	x23, x24, [sp, #48]
    86a8:	and	w26, w26, #0x1
    86ac:	cmp	w20, #0x1
    86b0:	adrp	x23, 62000 <PyInit__decimal@@Base+0x45dc0>
    86b4:	b.eq	8784 <PyFloat_FromString@plt+0x1cf4>  // b.none
    86b8:	cmp	w20, #0x2
    86bc:	b.eq	8838 <PyFloat_FromString@plt+0x1da8>  // b.none
    86c0:	ldr	x23, [x23, #3880]
    86c4:	mov	x21, x22
    86c8:	mov	w24, #0x20                  	// #32
    86cc:	nop
    86d0:	ldr	w20, [x27, x19, lsl #2]
    86d4:	cmp	w20, #0x5f
    86d8:	ccmp	w26, #0x0, #0x4, eq  // eq = none
    86dc:	b.ne	8708 <PyFloat_FromString@plt+0x1c78>  // b.any
    86e0:	sub	w0, w20, #0x1
    86e4:	cmp	w0, #0x7e
    86e8:	b.ls	8750 <PyFloat_FromString@plt+0x1cc0>  // b.plast
    86ec:	cmp	w20, #0x7f
    86f0:	b.hi	8758 <PyFloat_FromString@plt+0x1cc8>  // b.pmore
    86f4:	ldrb	w0, [x23]
    86f8:	cmp	w0, #0x0
    86fc:	cset	w0, ne  // ne = any
    8700:	cbz	w0, 8738 <PyFloat_FromString@plt+0x1ca8>
    8704:	strb	w24, [x21], #1
    8708:	add	x19, x19, #0x1
    870c:	cmp	x25, x19
    8710:	b.ne	86d0 <PyFloat_FromString@plt+0x1c40>  // b.any
    8714:	ldp	x23, x24, [sp, #48]
    8718:	strb	wzr, [x21]
    871c:	ldr	x27, [sp, #80]
    8720:	mov	x0, x22
    8724:	ldp	x19, x20, [sp, #16]
    8728:	ldp	x21, x22, [sp, #32]
    872c:	ldp	x25, x26, [sp, #64]
    8730:	ldp	x29, x30, [sp], #96
    8734:	ret
    8738:	mov	w0, w20
    873c:	bl	68b0 <_PyUnicode_ToDecimalDigit@plt>
    8740:	tbnz	w0, #31, 8814 <PyFloat_FromString@plt+0x1d84>
    8744:	add	w0, w0, #0x30
    8748:	strb	w0, [x21], #1
    874c:	b	8708 <PyFloat_FromString@plt+0x1c78>
    8750:	strb	w20, [x21], #1
    8754:	b	8708 <PyFloat_FromString@plt+0x1c78>
    8758:	mov	w0, w20
    875c:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    8760:	cmp	w0, #0x0
    8764:	cset	w0, ne  // ne = any
    8768:	b	8700 <PyFloat_FromString@plt+0x1c70>
    876c:	bl	64b0 <_PyUnicode_Ready@plt>
    8770:	cmn	w0, #0x1
    8774:	b.eq	88d8 <PyFloat_FromString@plt+0x1e48>  // b.none
    8778:	ldrb	w2, [x19, #32]
    877c:	str	x27, [sp, #80]
    8780:	b	84e4 <PyFloat_FromString@plt+0x1a54>
    8784:	ldr	x23, [x23, #3880]
    8788:	add	x19, x27, x19
    878c:	add	x25, x27, x25
    8790:	mov	x21, x22
    8794:	mov	w24, #0x20                  	// #32
    8798:	ldrb	w20, [x19]
    879c:	cmp	w20, #0x5f
    87a0:	ccmp	w26, #0x0, #0x4, eq  // eq = none
    87a4:	b.ne	87d0 <PyFloat_FromString@plt+0x1d40>  // b.any
    87a8:	sub	w0, w20, #0x1
    87ac:	cmp	w0, #0x7e
    87b0:	b.ls	87f8 <PyFloat_FromString@plt+0x1d68>  // b.plast
    87b4:	cmp	w20, #0x7f
    87b8:	b.hi	8800 <PyFloat_FromString@plt+0x1d70>  // b.pmore
    87bc:	ldrb	w0, [x23]
    87c0:	cmp	w0, #0x0
    87c4:	cset	w0, ne  // ne = any
    87c8:	cbz	w0, 87e0 <PyFloat_FromString@plt+0x1d50>
    87cc:	strb	w24, [x21], #1
    87d0:	add	x19, x19, #0x1
    87d4:	cmp	x25, x19
    87d8:	b.ne	8798 <PyFloat_FromString@plt+0x1d08>  // b.any
    87dc:	b	8714 <PyFloat_FromString@plt+0x1c84>
    87e0:	mov	w0, w20
    87e4:	bl	68b0 <_PyUnicode_ToDecimalDigit@plt>
    87e8:	tbnz	w0, #31, 8814 <PyFloat_FromString@plt+0x1d84>
    87ec:	add	w0, w0, #0x30
    87f0:	strb	w0, [x21], #1
    87f4:	b	87d0 <PyFloat_FromString@plt+0x1d40>
    87f8:	strb	w20, [x21], #1
    87fc:	b	87d0 <PyFloat_FromString@plt+0x1d40>
    8800:	mov	w0, w20
    8804:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    8808:	cmp	w0, #0x0
    880c:	cset	w0, ne  // ne = any
    8810:	b	87c8 <PyFloat_FromString@plt+0x1d38>
    8814:	strb	wzr, [x22]
    8818:	mov	x0, x22
    881c:	ldp	x19, x20, [sp, #16]
    8820:	ldp	x21, x22, [sp, #32]
    8824:	ldp	x23, x24, [sp, #48]
    8828:	ldp	x25, x26, [sp, #64]
    882c:	ldr	x27, [sp, #80]
    8830:	ldp	x29, x30, [sp], #96
    8834:	ret
    8838:	ldr	x23, [x23, #3880]
    883c:	add	x19, x27, x19, lsl #1
    8840:	add	x25, x27, x25, lsl #1
    8844:	mov	x21, x22
    8848:	mov	w24, #0x20                  	// #32
    884c:	nop
    8850:	ldrh	w20, [x19]
    8854:	cmp	w20, #0x5f
    8858:	ccmp	w26, #0x0, #0x4, eq  // eq = none
    885c:	b.ne	8898 <PyFloat_FromString@plt+0x1e08>  // b.any
    8860:	sub	w0, w20, #0x1
    8864:	cmp	w0, #0x7e
    8868:	b.ls	88b0 <PyFloat_FromString@plt+0x1e20>  // b.plast
    886c:	cmp	w20, #0x7f
    8870:	b.hi	88b8 <PyFloat_FromString@plt+0x1e28>  // b.pmore
    8874:	ldrb	w0, [x23]
    8878:	cmp	w0, #0x0
    887c:	cset	w0, ne  // ne = any
    8880:	cbnz	w0, 88a8 <PyFloat_FromString@plt+0x1e18>
    8884:	mov	w0, w20
    8888:	bl	68b0 <_PyUnicode_ToDecimalDigit@plt>
    888c:	tbnz	w0, #31, 8814 <PyFloat_FromString@plt+0x1d84>
    8890:	add	w0, w0, #0x30
    8894:	strb	w0, [x21], #1
    8898:	add	x19, x19, #0x2
    889c:	cmp	x19, x25
    88a0:	b.ne	8850 <PyFloat_FromString@plt+0x1dc0>  // b.any
    88a4:	b	8714 <PyFloat_FromString@plt+0x1c84>
    88a8:	strb	w24, [x21], #1
    88ac:	b	8898 <PyFloat_FromString@plt+0x1e08>
    88b0:	strb	w20, [x21], #1
    88b4:	b	8898 <PyFloat_FromString@plt+0x1e08>
    88b8:	mov	w0, w20
    88bc:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    88c0:	cmp	w0, #0x0
    88c4:	cset	w0, ne  // ne = any
    88c8:	b	8880 <PyFloat_FromString@plt+0x1df0>
    88cc:	bl	65e0 <PyErr_NoMemory@plt>
    88d0:	ldr	x27, [sp, #80]
    88d4:	b	8720 <PyFloat_FromString@plt+0x1c90>
    88d8:	mov	x22, #0x0                   	// #0
    88dc:	b	8720 <PyFloat_FromString@plt+0x1c90>
    88e0:	stp	x29, x30, [sp, #-48]!
    88e4:	mov	x29, sp
    88e8:	cbz	x2, 8a0c <PyFloat_FromString@plt+0x1f7c>
    88ec:	str	x21, [sp, #32]
    88f0:	mov	x21, x0
    88f4:	ldr	x0, [x1, #8]
    88f8:	stp	x19, x20, [sp, #16]
    88fc:	mov	x19, x1
    8900:	mov	x20, x2
    8904:	ldr	x0, [x0, #168]
    8908:	tbz	w0, #28, 8934 <PyFloat_FromString@plt+0x1ea4>
    890c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8910:	mov	x0, x19
    8914:	add	x1, x1, #0x860
    8918:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    891c:	cbz	w0, 89ac <PyFloat_FromString@plt+0x1f1c>
    8920:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8924:	mov	x0, x19
    8928:	add	x1, x1, #0x868
    892c:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    8930:	cbz	w0, 8950 <PyFloat_FromString@plt+0x1ec0>
    8934:	mov	x2, x20
    8938:	mov	x1, x19
    893c:	mov	x0, x21
    8940:	ldp	x19, x20, [sp, #16]
    8944:	ldr	x21, [sp, #32]
    8948:	ldp	x29, x30, [sp], #48
    894c:	b	69b0 <PyObject_GenericSetAttr@plt>
    8950:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    8954:	ldr	x1, [x20, #8]
    8958:	ldr	x0, [x0, #2040]
    895c:	cmp	x1, x0
    8960:	b.eq	8a00 <PyFloat_FromString@plt+0x1f70>  // b.none
    8964:	mov	x0, x20
    8968:	bl	7ad8 <PyFloat_FromString@plt+0x1048>
    896c:	mov	w1, w0
    8970:	tst	w0, #0x18000
    8974:	b.ne	899c <PyFloat_FromString@plt+0x1f0c>  // b.any
    8978:	add	x0, x21, #0x10
    897c:	bl	1f808 <PyInit__decimal@@Base+0x35c8>
    8980:	cbnz	w0, 89e0 <PyFloat_FromString@plt+0x1f50>
    8984:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8988:	add	x1, x1, #0x8c0
    898c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8990:	ldr	x0, [x0, #3920]
    8994:	ldr	x0, [x0]
    8998:	bl	6650 <PyErr_SetString@plt>
    899c:	mov	w0, #0xffffffff            	// #-1
    89a0:	ldp	x19, x20, [sp, #16]
    89a4:	ldr	x21, [sp, #32]
    89a8:	b	89ec <PyFloat_FromString@plt+0x1f5c>
    89ac:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    89b0:	ldr	x1, [x20, #8]
    89b4:	ldr	x0, [x0, #2040]
    89b8:	cmp	x1, x0
    89bc:	b.eq	89f4 <PyFloat_FromString@plt+0x1f64>  // b.none
    89c0:	mov	x0, x20
    89c4:	bl	7ad8 <PyFloat_FromString@plt+0x1048>
    89c8:	mov	w1, w0
    89cc:	tst	w0, #0x18000
    89d0:	b.ne	899c <PyFloat_FromString@plt+0x1f0c>  // b.any
    89d4:	add	x0, x21, #0x10
    89d8:	bl	1f7e0 <PyInit__decimal@@Base+0x35a0>
    89dc:	cbz	w0, 8a2c <PyFloat_FromString@plt+0x1f9c>
    89e0:	ldp	x19, x20, [sp, #16]
    89e4:	mov	w0, #0x0                   	// #0
    89e8:	ldr	x21, [sp, #32]
    89ec:	ldp	x29, x30, [sp], #48
    89f0:	ret
    89f4:	ldr	x0, [x20, #16]
    89f8:	ldr	w1, [x0]
    89fc:	b	89d4 <PyFloat_FromString@plt+0x1f44>
    8a00:	ldr	x0, [x20, #16]
    8a04:	ldr	w1, [x0]
    8a08:	b	8978 <PyFloat_FromString@plt+0x1ee8>
    8a0c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8a10:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8a14:	add	x1, x1, #0x870
    8a18:	ldr	x0, [x0, #4048]
    8a1c:	ldr	x0, [x0]
    8a20:	bl	6650 <PyErr_SetString@plt>
    8a24:	mov	w0, #0xffffffff            	// #-1
    8a28:	b	89ec <PyFloat_FromString@plt+0x1f5c>
    8a2c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8a30:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8a34:	add	x1, x1, #0x898
    8a38:	b	8990 <PyFloat_FromString@plt+0x1f00>
    8a3c:	nop
    8a40:	sub	sp, sp, #0x50
    8a44:	stp	x29, x30, [sp, #16]
    8a48:	add	x29, sp, #0x10
    8a4c:	stp	x21, x22, [sp, #48]
    8a50:	mov	x22, x0
    8a54:	mov	x0, #0x0                   	// #0
    8a58:	stp	x23, x24, [sp, #64]
    8a5c:	add	x23, x22, #0x10
    8a60:	ldr	w24, [x23, #28]
    8a64:	stp	x19, x20, [sp, #32]
    8a68:	bl	64a0 <PyList_New@plt>
    8a6c:	cbz	x0, 8abc <PyFloat_FromString@plt+0x202c>
    8a70:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    8a74:	mov	x20, x0
    8a78:	add	x21, x19, #0x9b0
    8a7c:	ldr	x0, [x19, #2480]
    8a80:	cbnz	x0, 8a90 <PyFloat_FromString@plt+0x2000>
    8a84:	b	8adc <PyFloat_FromString@plt+0x204c>
    8a88:	ldr	x0, [x21, #32]!
    8a8c:	cbz	x0, 8adc <PyFloat_FromString@plt+0x204c>
    8a90:	ldr	w0, [x21, #16]
    8a94:	tst	w24, w0
    8a98:	b.eq	8a88 <PyFloat_FromString@plt+0x1ff8>  // b.none
    8a9c:	ldr	x1, [x21, #24]
    8aa0:	mov	x0, x20
    8aa4:	bl	6770 <PyList_Append@plt>
    8aa8:	tbz	w0, #31, 8a88 <PyFloat_FromString@plt+0x1ff8>
    8aac:	ldr	x0, [x20]
    8ab0:	sub	x0, x0, #0x1
    8ab4:	str	x0, [x20]
    8ab8:	cbz	x0, 8bdc <PyFloat_FromString@plt+0x214c>
    8abc:	mov	x19, #0x0                   	// #0
    8ac0:	mov	x0, x19
    8ac4:	ldp	x29, x30, [sp, #16]
    8ac8:	ldp	x19, x20, [sp, #32]
    8acc:	ldp	x21, x22, [sp, #48]
    8ad0:	ldp	x23, x24, [sp, #64]
    8ad4:	add	sp, sp, #0x50
    8ad8:	ret
    8adc:	ldr	w24, [x23, #24]
    8ae0:	mov	x0, #0x0                   	// #0
    8ae4:	bl	64a0 <PyList_New@plt>
    8ae8:	mov	x21, x0
    8aec:	cbz	x0, 8aac <PyFloat_FromString@plt+0x201c>
    8af0:	ldr	x0, [x19, #2480]
    8af4:	add	x19, x19, #0x9b0
    8af8:	cbnz	x0, 8b08 <PyFloat_FromString@plt+0x2078>
    8afc:	b	8b40 <PyFloat_FromString@plt+0x20b0>
    8b00:	ldr	x0, [x19, #32]!
    8b04:	cbz	x0, 8b40 <PyFloat_FromString@plt+0x20b0>
    8b08:	ldr	w0, [x19, #16]
    8b0c:	tst	w24, w0
    8b10:	b.eq	8b00 <PyFloat_FromString@plt+0x2070>  // b.none
    8b14:	ldr	x1, [x19, #24]
    8b18:	mov	x0, x21
    8b1c:	bl	6770 <PyList_Append@plt>
    8b20:	tbz	w0, #31, 8b00 <PyFloat_FromString@plt+0x2070>
    8b24:	ldr	x0, [x21]
    8b28:	sub	x0, x0, #0x1
    8b2c:	str	x0, [x21]
    8b30:	cbnz	x0, 8aac <PyFloat_FromString@plt+0x201c>
    8b34:	mov	x0, x21
    8b38:	bl	65d0 <_Py_Dealloc@plt>
    8b3c:	b	8aac <PyFloat_FromString@plt+0x201c>
    8b40:	ldrsw	x1, [x23, #36]
    8b44:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    8b48:	add	x0, x0, #0x610
    8b4c:	ldr	w7, [x23, #40]
    8b50:	ldr	x5, [x23, #8]
    8b54:	str	x20, [sp]
    8b58:	ldr	x3, [x0, x1, lsl #3]
    8b5c:	str	x21, [sp, #8]
    8b60:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    8b64:	add	x0, x0, #0x8f0
    8b68:	ldp	x1, x2, [x22, #8]
    8b6c:	ldr	w6, [x22, #80]
    8b70:	ldr	x4, [x23, #16]
    8b74:	bl	67d0 <Py_BuildValue@plt>
    8b78:	mov	x19, x0
    8b7c:	ldr	x1, [x20]
    8b80:	sub	x0, x1, #0x1
    8b84:	str	x0, [x20]
    8b88:	cbz	x0, 8bc0 <PyFloat_FromString@plt+0x2130>
    8b8c:	ldr	x0, [x21]
    8b90:	sub	x0, x0, #0x1
    8b94:	str	x0, [x21]
    8b98:	cbnz	x0, 8ac0 <PyFloat_FromString@plt+0x2030>
    8b9c:	mov	x0, x21
    8ba0:	bl	65d0 <_Py_Dealloc@plt>
    8ba4:	mov	x0, x19
    8ba8:	ldp	x29, x30, [sp, #16]
    8bac:	ldp	x19, x20, [sp, #32]
    8bb0:	ldp	x21, x22, [sp, #48]
    8bb4:	ldp	x23, x24, [sp, #64]
    8bb8:	add	sp, sp, #0x50
    8bbc:	ret
    8bc0:	mov	x0, x20
    8bc4:	bl	65d0 <_Py_Dealloc@plt>
    8bc8:	ldr	x0, [x21]
    8bcc:	sub	x0, x0, #0x1
    8bd0:	str	x0, [x21]
    8bd4:	cbnz	x0, 8ac0 <PyFloat_FromString@plt+0x2030>
    8bd8:	b	8b9c <PyFloat_FromString@plt+0x210c>
    8bdc:	mov	x0, x20
    8be0:	mov	x19, #0x0                   	// #0
    8be4:	bl	65d0 <_Py_Dealloc@plt>
    8be8:	mov	x0, x19
    8bec:	ldp	x29, x30, [sp, #16]
    8bf0:	ldp	x19, x20, [sp, #32]
    8bf4:	ldp	x21, x22, [sp, #48]
    8bf8:	ldp	x23, x24, [sp, #64]
    8bfc:	add	sp, sp, #0x50
    8c00:	ret
    8c04:	nop
    8c08:	stp	x29, x30, [sp, #-48]!
    8c0c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    8c10:	mov	x1, #0x0                   	// #0
    8c14:	mov	x29, sp
    8c18:	stp	x19, x20, [sp, #16]
    8c1c:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
    8c20:	add	x20, x20, #0x7a0
    8c24:	add	x0, x0, #0x328
    8c28:	str	x21, [sp, #32]
    8c2c:	ldr	x21, [x20, #96]
    8c30:	bl	6840 <PyObject_CallObject@plt>
    8c34:	cbz	x0, 8cc0 <PyFloat_FromString@plt+0x2230>
    8c38:	add	x2, x21, #0x10
    8c3c:	mov	x19, x0
    8c40:	ldp	x4, x5, [x21, #16]
    8c44:	stp	x4, x5, [x0, #16]
    8c48:	mov	x1, x0
    8c4c:	ldp	x4, x5, [x2, #16]
    8c50:	stp	x4, x5, [x0, #32]
    8c54:	ldp	x2, x3, [x2, #32]
    8c58:	stp	x2, x3, [x0, #48]
    8c5c:	ldr	w2, [x21, #80]
    8c60:	stur	xzr, [x0, #44]
    8c64:	ldr	x0, [x20, #104]
    8c68:	str	w2, [x19, #80]
    8c6c:	bl	6680 <PyContextVar_Set@plt>
    8c70:	cbz	x0, 8cb0 <PyFloat_FromString@plt+0x2220>
    8c74:	ldr	x2, [x0]
    8c78:	sub	x2, x2, #0x1
    8c7c:	str	x2, [x0]
    8c80:	cbz	x2, 8c98 <PyFloat_FromString@plt+0x2208>
    8c84:	mov	x0, x19
    8c88:	ldp	x19, x20, [sp, #16]
    8c8c:	ldr	x21, [sp, #32]
    8c90:	ldp	x29, x30, [sp], #48
    8c94:	ret
    8c98:	bl	65d0 <_Py_Dealloc@plt>
    8c9c:	mov	x0, x19
    8ca0:	ldp	x19, x20, [sp, #16]
    8ca4:	ldr	x21, [sp, #32]
    8ca8:	ldp	x29, x30, [sp], #48
    8cac:	ret
    8cb0:	ldr	x0, [x19]
    8cb4:	sub	x0, x0, #0x1
    8cb8:	str	x0, [x19]
    8cbc:	cbz	x0, 8cd8 <PyFloat_FromString@plt+0x2248>
    8cc0:	mov	x19, #0x0                   	// #0
    8cc4:	mov	x0, x19
    8cc8:	ldp	x19, x20, [sp, #16]
    8ccc:	ldr	x21, [sp, #32]
    8cd0:	ldp	x29, x30, [sp], #48
    8cd4:	ret
    8cd8:	mov	x0, x19
    8cdc:	mov	x19, #0x0                   	// #0
    8ce0:	bl	65d0 <_Py_Dealloc@plt>
    8ce4:	b	8c84 <PyFloat_FromString@plt+0x21f4>
    8ce8:	stp	x29, x30, [sp, #-32]!
    8cec:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    8cf0:	mov	x1, #0x0                   	// #0
    8cf4:	mov	x29, sp
    8cf8:	ldr	x0, [x0, #2056]
    8cfc:	add	x2, sp, #0x18
    8d00:	bl	6740 <PyContextVar_Get@plt>
    8d04:	tbnz	w0, #31, 8d24 <PyFloat_FromString@plt+0x2294>
    8d08:	ldr	x0, [sp, #24]
    8d0c:	cbz	x0, 8d18 <PyFloat_FromString@plt+0x2288>
    8d10:	ldp	x29, x30, [sp], #32
    8d14:	ret
    8d18:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    8d1c:	ldp	x29, x30, [sp], #32
    8d20:	ret
    8d24:	mov	x0, #0x0                   	// #0
    8d28:	ldp	x29, x30, [sp], #32
    8d2c:	ret
    8d30:	stp	x29, x30, [sp, #-96]!
    8d34:	mov	x29, sp
    8d38:	stp	x19, x20, [sp, #16]
    8d3c:	mov	x19, x0
    8d40:	bl	69e0 <PyTuple_Size@plt>
    8d44:	cmp	x0, #0x3
    8d48:	b.ne	8f0c <PyFloat_FromString@plt+0x247c>  // b.any
    8d4c:	ldr	x0, [x19, #24]
    8d50:	ldr	x1, [x0, #8]
    8d54:	ldr	x1, [x1, #168]
    8d58:	tbz	w1, #24, 8ee0 <PyFloat_FromString@plt+0x2450>
    8d5c:	bl	6820 <PyLong_AsLong@plt>
    8d60:	cmn	x0, #0x1
    8d64:	b.eq	8ed8 <PyFloat_FromString@plt+0x2448>  // b.none
    8d68:	cmp	x0, #0x1
    8d6c:	b.hi	8ee0 <PyFloat_FromString@plt+0x2450>  // b.pmore
    8d70:	ldr	x20, [x19, #40]
    8d74:	cmp	x0, #0x0
    8d78:	mov	w1, #0x2b                  	// #43
    8d7c:	mov	w0, #0x2d                  	// #45
    8d80:	csel	w0, w0, w1, ne  // ne = any
    8d84:	strb	w0, [sp, #88]
    8d88:	ldr	x0, [x20, #8]
    8d8c:	stp	x21, x22, [sp, #32]
    8d90:	stp	x23, x24, [sp, #48]
    8d94:	ldr	x0, [x0, #168]
    8d98:	strb	wzr, [sp, #89]
    8d9c:	tbnz	w0, #28, 8f38 <PyFloat_FromString@plt+0x24a8>
    8da0:	tbz	w0, #24, 8fc4 <PyFloat_FromString@plt+0x2534>
    8da4:	mov	x0, x20
    8da8:	mov	w24, #0x0                   	// #0
    8dac:	bl	66f0 <PyLong_AsSsize_t@plt>
    8db0:	mov	x21, x0
    8db4:	cmn	x0, #0x1
    8db8:	b.eq	90e8 <PyFloat_FromString@plt+0x2658>  // b.none
    8dbc:	ldr	x22, [x19, #32]
    8dc0:	ldr	x0, [x22, #8]
    8dc4:	ldr	x0, [x0, #168]
    8dc8:	tbnz	w0, #26, 8fb0 <PyFloat_FromString@plt+0x2520>
    8dcc:	tbz	w0, #25, 8ff8 <PyFloat_FromString@plt+0x2568>
    8dd0:	mov	x0, x22
    8dd4:	bl	6530 <PyList_AsTuple@plt>
    8dd8:	mov	x22, x0
    8ddc:	cbz	x0, 90f0 <PyFloat_FromString@plt+0x2660>
    8de0:	str	x25, [sp, #64]
    8de4:	mov	x0, x22
    8de8:	bl	69e0 <PyTuple_Size@plt>
    8dec:	add	x25, x0, #0x19
    8df0:	mov	x23, x0
    8df4:	mov	x0, x25
    8df8:	bl	6a40 <PyMem_Malloc@plt>
    8dfc:	mov	x20, x0
    8e00:	cbz	x0, 8f84 <PyFloat_FromString@plt+0x24f4>
    8e04:	add	x3, sp, #0x58
    8e08:	mov	x1, x25
    8e0c:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    8e10:	add	x2, x2, #0x9e8
    8e14:	bl	6610 <snprintf@plt>
    8e18:	sxtw	x19, w0
    8e1c:	tbnz	w19, #31, 90b4 <PyFloat_FromString@plt+0x2624>
    8e20:	cmp	x25, w19, sxtw
    8e24:	b.le	90b4 <PyFloat_FromString@plt+0x2624>
    8e28:	add	x19, x20, x19
    8e2c:	cmp	x23, #0x0
    8e30:	cbz	x23, 9030 <PyFloat_FromString@plt+0x25a0>
    8e34:	b.le	9038 <PyFloat_FromString@plt+0x25a8>
    8e38:	cbnz	w24, 9068 <PyFloat_FromString@plt+0x25d8>
    8e3c:	add	x23, x19, x23
    8e40:	add	x24, x22, #0x18
    8e44:	b	8e5c <PyFloat_FromString@plt+0x23cc>
    8e48:	cmp	x0, #0x9
    8e4c:	b.hi	8e88 <PyFloat_FromString@plt+0x23f8>  // b.pmore
    8e50:	strb	w1, [x19], #1
    8e54:	cmp	x23, x19
    8e58:	b.eq	903c <PyFloat_FromString@plt+0x25ac>  // b.none
    8e5c:	ldr	x0, [x24]
    8e60:	add	x24, x24, #0x8
    8e64:	ldr	x1, [x0, #8]
    8e68:	ldr	x1, [x1, #168]
    8e6c:	tbz	w1, #24, 8e88 <PyFloat_FromString@plt+0x23f8>
    8e70:	bl	6820 <PyLong_AsLong@plt>
    8e74:	add	w1, w0, #0x30
    8e78:	cmn	x0, #0x1
    8e7c:	b.ne	8e48 <PyFloat_FromString@plt+0x23b8>  // b.any
    8e80:	bl	67e0 <PyErr_Occurred@plt>
    8e84:	cbnz	x0, 8ea0 <PyFloat_FromString@plt+0x2410>
    8e88:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8e8c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8e90:	add	x1, x1, #0x9c0
    8e94:	ldr	x0, [x0, #3928]
    8e98:	ldr	x0, [x0]
    8e9c:	bl	6650 <PyErr_SetString@plt>
    8ea0:	ldr	x0, [x22]
    8ea4:	sub	x0, x0, #0x1
    8ea8:	str	x0, [x22]
    8eac:	cbz	x0, 9148 <PyFloat_FromString@plt+0x26b8>
    8eb0:	mov	x0, x20
    8eb4:	mov	x20, #0x0                   	// #0
    8eb8:	bl	6560 <PyMem_Free@plt>
    8ebc:	mov	x0, x20
    8ec0:	ldp	x19, x20, [sp, #16]
    8ec4:	ldp	x21, x22, [sp, #32]
    8ec8:	ldp	x23, x24, [sp, #48]
    8ecc:	ldr	x25, [sp, #64]
    8ed0:	ldp	x29, x30, [sp], #96
    8ed4:	ret
    8ed8:	bl	67e0 <PyErr_Occurred@plt>
    8edc:	cbnz	x0, 8fa8 <PyFloat_FromString@plt+0x2518>
    8ee0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8ee4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8ee8:	mov	x20, #0x0                   	// #0
    8eec:	add	x1, x1, #0x928
    8ef0:	ldr	x0, [x0, #3928]
    8ef4:	ldr	x0, [x0]
    8ef8:	bl	6650 <PyErr_SetString@plt>
    8efc:	mov	x0, x20
    8f00:	ldp	x19, x20, [sp, #16]
    8f04:	ldp	x29, x30, [sp], #96
    8f08:	ret
    8f0c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8f10:	mov	x20, #0x0                   	// #0
    8f14:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8f18:	add	x1, x1, #0x900
    8f1c:	ldr	x0, [x0, #3928]
    8f20:	ldr	x0, [x0]
    8f24:	bl	6650 <PyErr_SetString@plt>
    8f28:	mov	x0, x20
    8f2c:	ldp	x19, x20, [sp, #16]
    8f30:	ldp	x29, x30, [sp], #96
    8f34:	ret
    8f38:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8f3c:	mov	x0, x20
    8f40:	add	x1, x1, #0x608
    8f44:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    8f48:	cbz	w0, 900c <PyFloat_FromString@plt+0x257c>
    8f4c:	mov	x0, x20
    8f50:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
    8f54:	add	x1, x1, #0x4f8
    8f58:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    8f5c:	mov	w24, w0
    8f60:	cbnz	w0, 9100 <PyFloat_FromString@plt+0x2670>
    8f64:	add	x20, sp, #0x58
    8f68:	mov	x21, #0x0                   	// #0
    8f6c:	mov	x0, x20
    8f70:	bl	64d0 <strlen@plt>
    8f74:	mov	w1, #0x614e                	// #24910
    8f78:	movk	w1, #0x4e, lsl #16
    8f7c:	str	w1, [x20, x0]
    8f80:	b	8dbc <PyFloat_FromString@plt+0x232c>
    8f84:	bl	65e0 <PyErr_NoMemory@plt>
    8f88:	ldr	x0, [x22]
    8f8c:	sub	x0, x0, #0x1
    8f90:	str	x0, [x22]
    8f94:	cbz	x0, 90d0 <PyFloat_FromString@plt+0x2640>
    8f98:	ldp	x21, x22, [sp, #32]
    8f9c:	ldp	x23, x24, [sp, #48]
    8fa0:	ldr	x25, [sp, #64]
    8fa4:	nop
    8fa8:	mov	x20, #0x0                   	// #0
    8fac:	b	8efc <PyFloat_FromString@plt+0x246c>
    8fb0:	ldr	x0, [x22]
    8fb4:	str	x25, [sp, #64]
    8fb8:	add	x0, x0, #0x1
    8fbc:	str	x0, [x22]
    8fc0:	b	8de4 <PyFloat_FromString@plt+0x2354>
    8fc4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8fc8:	add	x1, x1, #0x9a0
    8fcc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    8fd0:	mov	x20, #0x0                   	// #0
    8fd4:	ldr	x0, [x0, #3928]
    8fd8:	ldr	x0, [x0]
    8fdc:	bl	6650 <PyErr_SetString@plt>
    8fe0:	mov	x0, x20
    8fe4:	ldp	x19, x20, [sp, #16]
    8fe8:	ldp	x21, x22, [sp, #32]
    8fec:	ldp	x23, x24, [sp, #48]
    8ff0:	ldp	x29, x30, [sp], #96
    8ff4:	ret
    8ff8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    8ffc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    9000:	add	x1, x1, #0x9c0
    9004:	mov	x20, #0x0                   	// #0
    9008:	b	8fd4 <PyFloat_FromString@plt+0x2544>
    900c:	add	x20, sp, #0x58
    9010:	mov	w24, #0x1                   	// #1
    9014:	mov	x0, x20
    9018:	bl	64d0 <strlen@plt>
    901c:	mov	w1, #0x6e49                	// #28233
    9020:	mov	x21, #0x0                   	// #0
    9024:	movk	w1, #0x66, lsl #16
    9028:	str	w1, [x20, x0]
    902c:	b	8dbc <PyFloat_FromString@plt+0x232c>
    9030:	ldrb	w0, [sp, #89]
    9034:	cbz	w0, 90a8 <PyFloat_FromString@plt+0x2618>
    9038:	mov	x23, x19
    903c:	strb	wzr, [x23]
    9040:	ldrb	w0, [sp, #89]
    9044:	cbz	w0, 9168 <PyFloat_FromString@plt+0x26d8>
    9048:	ldr	x0, [x22]
    904c:	sub	x0, x0, #0x1
    9050:	str	x0, [x22]
    9054:	cbz	x0, 90d0 <PyFloat_FromString@plt+0x2640>
    9058:	ldp	x21, x22, [sp, #32]
    905c:	ldp	x23, x24, [sp, #48]
    9060:	ldr	x25, [sp, #64]
    9064:	b	8efc <PyFloat_FromString@plt+0x246c>
    9068:	add	x25, x22, #0x18
    906c:	mov	x24, #0x0                   	// #0
    9070:	b	9084 <PyFloat_FromString@plt+0x25f4>
    9074:	cmp	x0, #0x9
    9078:	b.hi	8e88 <PyFloat_FromString@plt+0x23f8>  // b.pmore
    907c:	cmp	x23, x24
    9080:	b.eq	9038 <PyFloat_FromString@plt+0x25a8>  // b.none
    9084:	ldr	x0, [x25, x24, lsl #3]
    9088:	add	x24, x24, #0x1
    908c:	ldr	x1, [x0, #8]
    9090:	ldr	x1, [x1, #168]
    9094:	tbz	w1, #24, 8e88 <PyFloat_FromString@plt+0x23f8>
    9098:	bl	6820 <PyLong_AsLong@plt>
    909c:	cmn	x0, #0x1
    90a0:	b.ne	9074 <PyFloat_FromString@plt+0x25e4>  // b.any
    90a4:	b	8e80 <PyFloat_FromString@plt+0x23f0>
    90a8:	mov	w0, #0x30                  	// #48
    90ac:	strb	w0, [x19], #1
    90b0:	b	9038 <PyFloat_FromString@plt+0x25a8>
    90b4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    90b8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    90bc:	add	x1, x1, #0x9f0
    90c0:	ldr	x0, [x0, #3920]
    90c4:	ldr	x0, [x0]
    90c8:	bl	6650 <PyErr_SetString@plt>
    90cc:	b	8ea0 <PyFloat_FromString@plt+0x2410>
    90d0:	mov	x0, x22
    90d4:	bl	65d0 <_Py_Dealloc@plt>
    90d8:	ldp	x21, x22, [sp, #32]
    90dc:	ldp	x23, x24, [sp, #48]
    90e0:	ldr	x25, [sp, #64]
    90e4:	b	8efc <PyFloat_FromString@plt+0x246c>
    90e8:	bl	67e0 <PyErr_Occurred@plt>
    90ec:	cbz	x0, 8dbc <PyFloat_FromString@plt+0x232c>
    90f0:	mov	x20, #0x0                   	// #0
    90f4:	ldp	x21, x22, [sp, #32]
    90f8:	ldp	x23, x24, [sp, #48]
    90fc:	b	8efc <PyFloat_FromString@plt+0x246c>
    9100:	mov	x0, x20
    9104:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9108:	add	x1, x1, #0x600
    910c:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    9110:	mov	w24, w0
    9114:	cbnz	w0, 9154 <PyFloat_FromString@plt+0x26c4>
    9118:	add	x20, sp, #0x58
    911c:	mov	x21, #0x0                   	// #0
    9120:	mov	x0, x20
    9124:	bl	64d0 <strlen@plt>
    9128:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    912c:	add	x1, x1, #0x958
    9130:	add	x2, x20, x0
    9134:	ldr	w3, [x1]
    9138:	str	w3, [x20, x0]
    913c:	ldrb	w0, [x1, #4]
    9140:	strb	w0, [x2, #4]
    9144:	b	8dbc <PyFloat_FromString@plt+0x232c>
    9148:	mov	x0, x22
    914c:	bl	65d0 <_Py_Dealloc@plt>
    9150:	b	8eb0 <PyFloat_FromString@plt+0x2420>
    9154:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9158:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    915c:	add	x1, x1, #0x960
    9160:	mov	x20, #0x0                   	// #0
    9164:	b	8fd4 <PyFloat_FromString@plt+0x2544>
    9168:	mov	x0, x23
    916c:	mov	w4, #0x45                  	// #69
    9170:	mov	x3, x21
    9174:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    9178:	mov	x1, #0x15                  	// #21
    917c:	add	x2, x2, #0xa18
    9180:	strb	w4, [x0], #1
    9184:	bl	6610 <snprintf@plt>
    9188:	b	9048 <PyFloat_FromString@plt+0x25b8>
    918c:	nop
    9190:	stp	x29, x30, [sp, #-48]!
    9194:	mov	x29, sp
    9198:	stp	x19, x20, [sp, #16]
    919c:	mov	x19, x1
    91a0:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    91a4:	add	x1, x20, #0x328
    91a8:	ldr	x0, [x19, #8]
    91ac:	cmp	x0, x1
    91b0:	b.eq	91bc <PyFloat_FromString@plt+0x272c>  // b.none
    91b4:	bl	69c0 <PyType_IsSubtype@plt>
    91b8:	cbz	w0, 92b0 <PyFloat_FromString@plt+0x2820>
    91bc:	str	x21, [sp, #32]
    91c0:	adrp	x21, 65000 <PyInit__decimal@@Base+0x48dc0>
    91c4:	add	x0, x21, #0x7a0
    91c8:	ldr	x1, [x0, #96]
    91cc:	cmp	x1, x19
    91d0:	b.eq	9200 <PyFloat_FromString@plt+0x2770>  // b.none
    91d4:	ldr	x1, [x0, #112]
    91d8:	cmp	x1, x19
    91dc:	b.eq	9200 <PyFloat_FromString@plt+0x2770>  // b.none
    91e0:	ldr	x0, [x0, #120]
    91e4:	cmp	x0, x19
    91e8:	b.eq	9200 <PyFloat_FromString@plt+0x2770>  // b.none
    91ec:	ldr	x0, [x19]
    91f0:	mov	x20, x19
    91f4:	add	x0, x0, #0x1
    91f8:	str	x0, [x19]
    91fc:	b	9238 <PyFloat_FromString@plt+0x27a8>
    9200:	add	x0, x20, #0x328
    9204:	mov	x1, #0x0                   	// #0
    9208:	bl	6840 <PyObject_CallObject@plt>
    920c:	mov	x20, x0
    9210:	cbz	x0, 92d0 <PyFloat_FromString@plt+0x2840>
    9214:	ldp	x2, x3, [x19, #16]
    9218:	stp	x2, x3, [x20, #16]
    921c:	ldp	x2, x3, [x19, #32]
    9220:	stp	x2, x3, [x20, #32]
    9224:	ldp	x2, x3, [x19, #48]
    9228:	stp	x2, x3, [x20, #48]
    922c:	ldr	w0, [x19, #80]
    9230:	stur	xzr, [x20, #44]
    9234:	str	w0, [x20, #80]
    9238:	add	x21, x21, #0x7a0
    923c:	mov	x1, x20
    9240:	ldr	x0, [x21, #104]
    9244:	bl	6680 <PyContextVar_Set@plt>
    9248:	mov	x19, x0
    924c:	ldr	x1, [x20]
    9250:	sub	x0, x1, #0x1
    9254:	str	x0, [x20]
    9258:	cbz	x0, 9298 <PyFloat_FromString@plt+0x2808>
    925c:	cbz	x19, 92d0 <PyFloat_FromString@plt+0x2840>
    9260:	ldr	x0, [x19]
    9264:	sub	x0, x0, #0x1
    9268:	str	x0, [x19]
    926c:	cbz	x0, 92a4 <PyFloat_FromString@plt+0x2814>
    9270:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    9274:	ldr	x21, [sp, #32]
    9278:	ldr	x1, [x1, #4008]
    927c:	mov	x0, x1
    9280:	ldr	x2, [x1]
    9284:	add	x2, x2, #0x1
    9288:	str	x2, [x1]
    928c:	ldp	x19, x20, [sp, #16]
    9290:	ldp	x29, x30, [sp], #48
    9294:	ret
    9298:	mov	x0, x20
    929c:	bl	65d0 <_Py_Dealloc@plt>
    92a0:	b	925c <PyFloat_FromString@plt+0x27cc>
    92a4:	mov	x0, x19
    92a8:	bl	65d0 <_Py_Dealloc@plt>
    92ac:	b	9270 <PyFloat_FromString@plt+0x27e0>
    92b0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    92b4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    92b8:	add	x1, x1, #0xa20
    92bc:	ldr	x0, [x0, #3936]
    92c0:	ldr	x0, [x0]
    92c4:	bl	6650 <PyErr_SetString@plt>
    92c8:	mov	x0, #0x0                   	// #0
    92cc:	b	928c <PyFloat_FromString@plt+0x27fc>
    92d0:	mov	x0, #0x0                   	// #0
    92d4:	ldp	x19, x20, [sp, #16]
    92d8:	ldr	x21, [sp, #32]
    92dc:	ldp	x29, x30, [sp], #48
    92e0:	ret
    92e4:	nop
    92e8:	stp	x29, x30, [sp, #-64]!
    92ec:	mov	x29, sp
    92f0:	stp	x19, x20, [sp, #16]
    92f4:	mov	x19, x1
    92f8:	ldr	x1, [x1, #8]
    92fc:	ldr	x1, [x1, #168]
    9300:	tbz	w1, #28, 93b0 <PyFloat_FromString@plt+0x2920>
    9304:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
    9308:	add	x2, x2, #0x7a0
    930c:	str	x23, [sp, #48]
    9310:	mov	x23, x0
    9314:	stp	x21, x22, [sp, #32]
    9318:	add	x1, x2, #0x10
    931c:	ldr	x0, [x2, #16]
    9320:	cmp	x19, x0
    9324:	b.eq	9408 <PyFloat_FromString@plt+0x2978>  // b.none
    9328:	ldr	x0, [x2, #24]
    932c:	cmp	x19, x0
    9330:	b.eq	9410 <PyFloat_FromString@plt+0x2980>  // b.none
    9334:	ldr	x0, [x2, #32]
    9338:	cmp	x19, x0
    933c:	b.eq	9418 <PyFloat_FromString@plt+0x2988>  // b.none
    9340:	ldr	x0, [x2, #40]
    9344:	cmp	x19, x0
    9348:	b.eq	9420 <PyFloat_FromString@plt+0x2990>  // b.none
    934c:	ldr	x0, [x2, #48]
    9350:	cmp	x19, x0
    9354:	b.eq	93d8 <PyFloat_FromString@plt+0x2948>  // b.none
    9358:	ldr	x0, [x2, #56]
    935c:	cmp	x19, x0
    9360:	b.eq	9428 <PyFloat_FromString@plt+0x2998>  // b.none
    9364:	ldr	x0, [x2, #64]
    9368:	cmp	x19, x0
    936c:	b.eq	9430 <PyFloat_FromString@plt+0x29a0>  // b.none
    9370:	ldr	x0, [x2, #72]
    9374:	cmp	x19, x0
    9378:	b.eq	9438 <PyFloat_FromString@plt+0x29a8>  // b.none
    937c:	mov	x20, x1
    9380:	mov	x21, #0x0                   	// #0
    9384:	nop
    9388:	ldr	x1, [x20, x21, lsl #3]
    938c:	mov	w22, w21
    9390:	mov	x0, x19
    9394:	add	x21, x21, #0x1
    9398:	bl	6900 <PyUnicode_Compare@plt>
    939c:	cbz	w0, 93e0 <PyFloat_FromString@plt+0x2950>
    93a0:	cmp	x21, #0x8
    93a4:	b.ne	9388 <PyFloat_FromString@plt+0x28f8>  // b.any
    93a8:	ldp	x21, x22, [sp, #32]
    93ac:	ldr	x23, [sp, #48]
    93b0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    93b4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    93b8:	add	x1, x1, #0xa40
    93bc:	ldr	x0, [x0, #3936]
    93c0:	ldr	x0, [x0]
    93c4:	bl	6650 <PyErr_SetString@plt>
    93c8:	mov	w0, #0xffffffff            	// #-1
    93cc:	ldp	x19, x20, [sp, #16]
    93d0:	ldp	x29, x30, [sp], #64
    93d4:	ret
    93d8:	mov	w22, #0x4                   	// #4
    93dc:	nop
    93e0:	mov	w1, w22
    93e4:	add	x0, x23, #0x10
    93e8:	bl	1f7c0 <PyInit__decimal@@Base+0x3580>
    93ec:	cbz	w0, 9440 <PyFloat_FromString@plt+0x29b0>
    93f0:	ldp	x21, x22, [sp, #32]
    93f4:	mov	w0, #0x0                   	// #0
    93f8:	ldr	x23, [sp, #48]
    93fc:	ldp	x19, x20, [sp, #16]
    9400:	ldp	x29, x30, [sp], #64
    9404:	ret
    9408:	mov	w22, #0x0                   	// #0
    940c:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9410:	mov	w22, #0x1                   	// #1
    9414:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9418:	mov	w22, #0x2                   	// #2
    941c:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9420:	mov	w22, #0x3                   	// #3
    9424:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9428:	mov	w22, #0x5                   	// #5
    942c:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9430:	mov	w22, #0x6                   	// #6
    9434:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9438:	mov	w22, #0x7                   	// #7
    943c:	b	93e0 <PyFloat_FromString@plt+0x2950>
    9440:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    9444:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9448:	add	x1, x1, #0xad8
    944c:	ldr	x0, [x0, #3920]
    9450:	ldr	x0, [x0]
    9454:	bl	6650 <PyErr_SetString@plt>
    9458:	mov	w0, #0xffffffff            	// #-1
    945c:	ldp	x21, x22, [sp, #32]
    9460:	ldr	x23, [sp, #48]
    9464:	b	93fc <PyFloat_FromString@plt+0x296c>
    9468:	stp	x29, x30, [sp, #-64]!
    946c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    9470:	mov	x29, sp
    9474:	str	x19, [sp, #16]
    9478:	mov	x19, x0
    947c:	ldr	x0, [x1, #2056]
    9480:	add	x2, sp, #0x38
    9484:	mov	x1, #0x0                   	// #0
    9488:	bl	6740 <PyContextVar_Get@plt>
    948c:	tbnz	w0, #31, 94e0 <PyFloat_FromString@plt+0x2a50>
    9490:	ldr	x0, [sp, #56]
    9494:	cbz	x0, 94d4 <PyFloat_FromString@plt+0x2a44>
    9498:	ldr	x1, [x0]
    949c:	sub	x1, x1, #0x1
    94a0:	str	x1, [x0]
    94a4:	cbz	x1, 94c4 <PyFloat_FromString@plt+0x2a34>
    94a8:	mov	x1, x0
    94ac:	mov	w2, #0x1                   	// #1
    94b0:	mov	x0, x19
    94b4:	bl	7850 <PyFloat_FromString@plt+0xdc0>
    94b8:	ldr	x19, [sp, #16]
    94bc:	ldp	x29, x30, [sp], #64
    94c0:	ret
    94c4:	str	x0, [sp, #40]
    94c8:	bl	65d0 <_Py_Dealloc@plt>
    94cc:	ldr	x0, [sp, #40]
    94d0:	b	94a8 <PyFloat_FromString@plt+0x2a18>
    94d4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    94d8:	cbnz	x0, 9498 <PyFloat_FromString@plt+0x2a08>
    94dc:	b	94b8 <PyFloat_FromString@plt+0x2a28>
    94e0:	mov	x0, #0x0                   	// #0
    94e4:	ldr	x19, [sp, #16]
    94e8:	ldp	x29, x30, [sp], #64
    94ec:	ret
    94f0:	stp	x29, x30, [sp, #-64]!
    94f4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    94f8:	mov	x29, sp
    94fc:	str	x20, [sp, #16]
    9500:	mov	x20, x0
    9504:	ldr	x0, [x1, #2056]
    9508:	add	x2, sp, #0x38
    950c:	mov	x1, #0x0                   	// #0
    9510:	bl	6740 <PyContextVar_Get@plt>
    9514:	tbnz	w0, #31, 956c <PyFloat_FromString@plt+0x2adc>
    9518:	ldr	x0, [sp, #56]
    951c:	cbz	x0, 9560 <PyFloat_FromString@plt+0x2ad0>
    9520:	ldr	x1, [x0]
    9524:	sub	x1, x1, #0x1
    9528:	str	x1, [x0]
    952c:	cbz	x1, 9550 <PyFloat_FromString@plt+0x2ac0>
    9530:	mov	x1, x0
    9534:	mov	w2, #0x2                   	// #2
    9538:	mov	x0, x20
    953c:	bl	7850 <PyFloat_FromString@plt+0xdc0>
    9540:	str	x0, [sp, #40]
    9544:	ldr	x20, [sp, #16]
    9548:	ldp	x29, x30, [sp], #64
    954c:	ret
    9550:	str	x0, [sp, #40]
    9554:	bl	65d0 <_Py_Dealloc@plt>
    9558:	ldr	x0, [sp, #40]
    955c:	b	9530 <PyFloat_FromString@plt+0x2aa0>
    9560:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    9564:	cbnz	x0, 9520 <PyFloat_FromString@plt+0x2a90>
    9568:	b	9544 <PyFloat_FromString@plt+0x2ab4>
    956c:	mov	x0, #0x0                   	// #0
    9570:	ldr	x20, [sp, #16]
    9574:	ldp	x29, x30, [sp], #64
    9578:	ret
    957c:	nop
    9580:	stp	x29, x30, [sp, #-64]!
    9584:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    9588:	mov	x29, sp
    958c:	str	x19, [sp, #16]
    9590:	mov	x19, x0
    9594:	ldr	x0, [x1, #2056]
    9598:	add	x2, sp, #0x38
    959c:	mov	x1, #0x0                   	// #0
    95a0:	bl	6740 <PyContextVar_Get@plt>
    95a4:	tbnz	w0, #31, 95f8 <PyFloat_FromString@plt+0x2b68>
    95a8:	ldr	x0, [sp, #56]
    95ac:	cbz	x0, 95ec <PyFloat_FromString@plt+0x2b5c>
    95b0:	ldr	x1, [x0]
    95b4:	sub	x1, x1, #0x1
    95b8:	str	x1, [x0]
    95bc:	cbz	x1, 95dc <PyFloat_FromString@plt+0x2b4c>
    95c0:	mov	x1, x0
    95c4:	mov	w2, #0x1                   	// #1
    95c8:	mov	x0, x19
    95cc:	bl	7850 <PyFloat_FromString@plt+0xdc0>
    95d0:	ldr	x19, [sp, #16]
    95d4:	ldp	x29, x30, [sp], #64
    95d8:	ret
    95dc:	str	x0, [sp, #40]
    95e0:	bl	65d0 <_Py_Dealloc@plt>
    95e4:	ldr	x0, [sp, #40]
    95e8:	b	95c0 <PyFloat_FromString@plt+0x2b30>
    95ec:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    95f0:	cbnz	x0, 95b0 <PyFloat_FromString@plt+0x2b20>
    95f4:	b	95d0 <PyFloat_FromString@plt+0x2b40>
    95f8:	mov	x0, #0x0                   	// #0
    95fc:	ldr	x19, [sp, #16]
    9600:	ldp	x29, x30, [sp], #64
    9604:	ret
    9608:	stp	x29, x30, [sp, #-64]!
    960c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    9610:	mov	x29, sp
    9614:	str	x19, [sp, #16]
    9618:	mov	x19, x0
    961c:	ldr	x0, [x1, #2056]
    9620:	add	x2, sp, #0x38
    9624:	mov	x1, #0x0                   	// #0
    9628:	bl	6740 <PyContextVar_Get@plt>
    962c:	tbnz	w0, #31, 9680 <PyFloat_FromString@plt+0x2bf0>
    9630:	ldr	x0, [sp, #56]
    9634:	cbz	x0, 9674 <PyFloat_FromString@plt+0x2be4>
    9638:	ldr	x1, [x0]
    963c:	sub	x1, x1, #0x1
    9640:	str	x1, [x0]
    9644:	cbz	x1, 9664 <PyFloat_FromString@plt+0x2bd4>
    9648:	mov	x1, x0
    964c:	mov	w2, #0x3                   	// #3
    9650:	mov	x0, x19
    9654:	bl	7850 <PyFloat_FromString@plt+0xdc0>
    9658:	ldr	x19, [sp, #16]
    965c:	ldp	x29, x30, [sp], #64
    9660:	ret
    9664:	str	x0, [sp, #40]
    9668:	bl	65d0 <_Py_Dealloc@plt>
    966c:	ldr	x0, [sp, #40]
    9670:	b	9648 <PyFloat_FromString@plt+0x2bb8>
    9674:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    9678:	cbnz	x0, 9638 <PyFloat_FromString@plt+0x2ba8>
    967c:	b	9658 <PyFloat_FromString@plt+0x2bc8>
    9680:	mov	x0, #0x0                   	// #0
    9684:	ldr	x19, [sp, #16]
    9688:	ldp	x29, x30, [sp], #64
    968c:	ret
    9690:	stp	x29, x30, [sp, #-48]!
    9694:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    9698:	mov	x29, sp
    969c:	stp	x19, x20, [sp, #16]
    96a0:	mov	x20, x0
    96a4:	add	x2, sp, #0x28
    96a8:	ldr	x0, [x1, #2056]
    96ac:	mov	x1, #0x0                   	// #0
    96b0:	bl	6740 <PyContextVar_Get@plt>
    96b4:	tbnz	w0, #31, 9738 <PyFloat_FromString@plt+0x2ca8>
    96b8:	ldr	x19, [sp, #40]
    96bc:	cbz	x19, 9724 <PyFloat_FromString@plt+0x2c94>
    96c0:	ldr	x1, [x19]
    96c4:	sub	x1, x1, #0x1
    96c8:	str	x1, [x19]
    96cc:	cbz	x1, 9718 <PyFloat_FromString@plt+0x2c88>
    96d0:	ldr	w1, [x19, #80]
    96d4:	add	x0, x20, #0x18
    96d8:	bl	25e18 <PyInit__decimal@@Base+0x9bd8>
    96dc:	mov	x20, x0
    96e0:	cbz	x0, 9734 <PyFloat_FromString@plt+0x2ca4>
    96e4:	mov	x1, x20
    96e8:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    96ec:	add	x0, x0, #0xb00
    96f0:	bl	6480 <PyUnicode_FromFormat@plt>
    96f4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    96f8:	mov	x19, x0
    96fc:	mov	x0, x20
    9700:	ldr	x1, [x1, #1912]
    9704:	blr	x1
    9708:	mov	x0, x19
    970c:	ldp	x19, x20, [sp, #16]
    9710:	ldp	x29, x30, [sp], #48
    9714:	ret
    9718:	mov	x0, x19
    971c:	bl	65d0 <_Py_Dealloc@plt>
    9720:	b	96d0 <PyFloat_FromString@plt+0x2c40>
    9724:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    9728:	mov	x19, x0
    972c:	cbnz	x0, 96c0 <PyFloat_FromString@plt+0x2c30>
    9730:	b	9708 <PyFloat_FromString@plt+0x2c78>
    9734:	bl	65e0 <PyErr_NoMemory@plt>
    9738:	mov	x19, #0x0                   	// #0
    973c:	mov	x0, x19
    9740:	ldp	x19, x20, [sp, #16]
    9744:	ldp	x29, x30, [sp], #48
    9748:	ret
    974c:	nop
    9750:	stp	x29, x30, [sp, #-64]!
    9754:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
    9758:	mov	x1, #0x0                   	// #0
    975c:	mov	x29, sp
    9760:	stp	x19, x20, [sp, #16]
    9764:	mov	x20, x0
    9768:	ldr	x0, [x2, #2056]
    976c:	str	x21, [sp, #32]
    9770:	add	x21, sp, #0x38
    9774:	mov	x2, x21
    9778:	bl	6740 <PyContextVar_Get@plt>
    977c:	tbnz	w0, #31, 9838 <PyFloat_FromString@plt+0x2da8>
    9780:	ldr	x19, [sp, #56]
    9784:	cbz	x19, 9850 <PyFloat_FromString@plt+0x2dc0>
    9788:	ldr	x1, [x19]
    978c:	sub	x1, x1, #0x1
    9790:	str	x1, [x19]
    9794:	cbz	x1, 9814 <PyFloat_FromString@plt+0x2d84>
    9798:	ldr	w2, [x19, #80]
    979c:	add	x1, x20, #0x18
    97a0:	mov	x0, x21
    97a4:	bl	25e78 <PyInit__decimal@@Base+0x9c38>
    97a8:	mov	x20, x0
    97ac:	tbnz	x0, #63, 9834 <PyFloat_FromString@plt+0x2da4>
    97b0:	mov	w1, #0x7f                  	// #127
    97b4:	ldr	x21, [sp, #56]
    97b8:	bl	6a50 <PyUnicode_New@plt>
    97bc:	mov	x19, x0
    97c0:	cbz	x0, 97dc <PyFloat_FromString@plt+0x2d4c>
    97c4:	ldrb	w0, [x0, #32]
    97c8:	tbnz	w0, #5, 9800 <PyFloat_FromString@plt+0x2d70>
    97cc:	ldr	x0, [x19, #72]
    97d0:	mov	x2, x20
    97d4:	mov	x1, x21
    97d8:	bl	6470 <memcpy@plt>
    97dc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    97e0:	ldr	x0, [sp, #56]
    97e4:	ldr	x1, [x1, #1912]
    97e8:	blr	x1
    97ec:	mov	x0, x19
    97f0:	ldp	x19, x20, [sp, #16]
    97f4:	ldr	x21, [sp, #32]
    97f8:	ldp	x29, x30, [sp], #64
    97fc:	ret
    9800:	tst	x0, #0x40
    9804:	add	x1, x19, #0x48
    9808:	add	x0, x19, #0x30
    980c:	csel	x0, x1, x0, eq  // eq = none
    9810:	b	97d0 <PyFloat_FromString@plt+0x2d40>
    9814:	mov	x0, x19
    9818:	bl	65d0 <_Py_Dealloc@plt>
    981c:	ldr	w2, [x19, #80]
    9820:	add	x1, x20, #0x18
    9824:	mov	x0, x21
    9828:	bl	25e78 <PyInit__decimal@@Base+0x9c38>
    982c:	mov	x20, x0
    9830:	tbz	x0, #63, 97b0 <PyFloat_FromString@plt+0x2d20>
    9834:	bl	65e0 <PyErr_NoMemory@plt>
    9838:	mov	x19, #0x0                   	// #0
    983c:	mov	x0, x19
    9840:	ldp	x19, x20, [sp, #16]
    9844:	ldr	x21, [sp, #32]
    9848:	ldp	x29, x30, [sp], #64
    984c:	ret
    9850:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    9854:	mov	x19, x0
    9858:	cbnz	x0, 9788 <PyFloat_FromString@plt+0x2cf8>
    985c:	b	97ec <PyFloat_FromString@plt+0x2d5c>
    9860:	stp	x29, x30, [sp, #-32]!
    9864:	mov	x29, sp
    9868:	stp	x19, x20, [sp, #16]
    986c:	add	x20, x0, #0x18
    9870:	mov	x19, x0
    9874:	mov	x0, x20
    9878:	bl	2a868 <PyInit__decimal@@Base+0xe628>
    987c:	cbz	w0, 98d8 <PyFloat_FromString@plt+0x2e48>
    9880:	mov	x0, x20
    9884:	bl	2a8b8 <PyInit__decimal@@Base+0xe678>
    9888:	cbnz	w0, 9928 <PyFloat_FromString@plt+0x2e98>
    988c:	mov	x0, x20
    9890:	bl	2a878 <PyInit__decimal@@Base+0xe638>
    9894:	cbz	w0, 9914 <PyFloat_FromString@plt+0x2e84>
    9898:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    989c:	add	x0, x0, #0xb38
    98a0:	bl	6960 <PyUnicode_FromString@plt>
    98a4:	mov	x19, x0
    98a8:	cbz	x19, 98e8 <PyFloat_FromString@plt+0x2e58>
    98ac:	mov	x0, x19
    98b0:	bl	6a90 <PyFloat_FromString@plt>
    98b4:	ldr	x1, [x19]
    98b8:	mov	x20, x0
    98bc:	sub	x1, x1, #0x1
    98c0:	str	x1, [x19]
    98c4:	cbz	x1, 98fc <PyFloat_FromString@plt+0x2e6c>
    98c8:	mov	x0, x20
    98cc:	ldp	x19, x20, [sp, #16]
    98d0:	ldp	x29, x30, [sp], #32
    98d4:	ret
    98d8:	mov	x0, x19
    98dc:	bl	9750 <PyFloat_FromString@plt+0x2cc0>
    98e0:	mov	x19, x0
    98e4:	cbnz	x19, 98ac <PyFloat_FromString@plt+0x2e1c>
    98e8:	mov	x20, #0x0                   	// #0
    98ec:	mov	x0, x20
    98f0:	ldp	x19, x20, [sp, #16]
    98f4:	ldp	x29, x30, [sp], #32
    98f8:	ret
    98fc:	mov	x0, x19
    9900:	bl	65d0 <_Py_Dealloc@plt>
    9904:	mov	x0, x20
    9908:	ldp	x19, x20, [sp, #16]
    990c:	ldp	x29, x30, [sp], #32
    9910:	ret
    9914:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    9918:	add	x0, x0, #0xb40
    991c:	bl	6960 <PyUnicode_FromString@plt>
    9920:	mov	x19, x0
    9924:	b	98a8 <PyFloat_FromString@plt+0x2e18>
    9928:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    992c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9930:	mov	x20, #0x0                   	// #0
    9934:	add	x1, x1, #0xb10
    9938:	ldr	x0, [x0, #3928]
    993c:	ldr	x0, [x0]
    9940:	bl	6650 <PyErr_SetString@plt>
    9944:	b	98c8 <PyFloat_FromString@plt+0x2e38>
    9948:	stp	x29, x30, [sp, #-32]!
    994c:	mov	x29, sp
    9950:	bl	9860 <PyFloat_FromString@plt+0x2dd0>
    9954:	cbz	x0, 99b0 <PyFloat_FromString@plt+0x2f20>
    9958:	str	x19, [sp, #16]
    995c:	mov	x19, x0
    9960:	str	d8, [sp, #24]
    9964:	bl	68c0 <PyFloat_AsDouble@plt>
    9968:	fmov	d8, d0
    996c:	ldr	x0, [x19]
    9970:	sub	x0, x0, #0x1
    9974:	str	x0, [x19]
    9978:	cbz	x0, 99bc <PyFloat_FromString@plt+0x2f2c>
    997c:	fmov	d0, #-1.000000000000000000e+00
    9980:	fcmp	d8, d0
    9984:	b.ne	9990 <PyFloat_FromString@plt+0x2f00>  // b.any
    9988:	bl	67e0 <PyErr_Occurred@plt>
    998c:	cbnz	x0, 99a8 <PyFloat_FromString@plt+0x2f18>
    9990:	fmov	d0, d8
    9994:	ldr	d8, [sp, #24]
    9998:	ldr	x19, [sp, #16]
    999c:	movi	d1, #0x0
    99a0:	ldp	x29, x30, [sp], #32
    99a4:	b	6a00 <PyComplex_FromDoubles@plt>
    99a8:	ldr	x19, [sp, #16]
    99ac:	ldr	d8, [sp, #24]
    99b0:	mov	x0, #0x0                   	// #0
    99b4:	ldp	x29, x30, [sp], #32
    99b8:	ret
    99bc:	mov	x0, x19
    99c0:	bl	65d0 <_Py_Dealloc@plt>
    99c4:	b	997c <PyFloat_FromString@plt+0x2eec>
    99c8:	stp	x29, x30, [sp, #-32]!
    99cc:	mov	x29, sp
    99d0:	stp	x19, x20, [sp, #16]
    99d4:	mov	x20, x0
    99d8:	bl	9750 <PyFloat_FromString@plt+0x2cc0>
    99dc:	cbz	x0, 9a34 <PyFloat_FromString@plt+0x2fa4>
    99e0:	ldr	x1, [x20, #8]
    99e4:	mov	x19, x0
    99e8:	mov	x2, x19
    99ec:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
    99f0:	add	x0, x0, #0xb48
    99f4:	bl	67d0 <Py_BuildValue@plt>
    99f8:	mov	x20, x0
    99fc:	ldr	x1, [x19]
    9a00:	sub	x1, x1, #0x1
    9a04:	str	x1, [x19]
    9a08:	cbz	x1, 9a1c <PyFloat_FromString@plt+0x2f8c>
    9a0c:	mov	x0, x20
    9a10:	ldp	x19, x20, [sp, #16]
    9a14:	ldp	x29, x30, [sp], #32
    9a18:	ret
    9a1c:	mov	x0, x19
    9a20:	bl	65d0 <_Py_Dealloc@plt>
    9a24:	mov	x0, x20
    9a28:	ldp	x19, x20, [sp, #16]
    9a2c:	ldp	x29, x30, [sp], #32
    9a30:	ret
    9a34:	mov	x20, #0x0                   	// #0
    9a38:	mov	x0, x20
    9a3c:	ldp	x19, x20, [sp, #16]
    9a40:	ldp	x29, x30, [sp], #32
    9a44:	ret
    9a48:	stp	x29, x30, [sp, #-128]!
    9a4c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    9a50:	add	x3, x3, #0x328
    9a54:	mov	x29, sp
    9a58:	stp	x19, x20, [sp, #16]
    9a5c:	add	x3, x3, #0x1a0
    9a60:	cmp	x0, x3
    9a64:	stp	x21, x22, [sp, #32]
    9a68:	mov	x22, x1
    9a6c:	mov	x21, x2
    9a70:	str	wzr, [sp, #76]
    9a74:	b.eq	9b78 <PyFloat_FromString@plt+0x30e8>  // b.none
    9a78:	ldr	x2, [x0, #304]
    9a7c:	mov	x1, #0x0                   	// #0
    9a80:	blr	x2
    9a84:	mov	x19, x0
    9a88:	cbz	x19, 9b60 <PyFloat_FromString@plt+0x30d0>
    9a8c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    9a90:	stp	x23, x24, [sp, #48]
    9a94:	mov	x2, #0xffffffffffffffff    	// #-1
    9a98:	ldr	q0, [x0, #2128]
    9a9c:	mov	w1, #0x30                  	// #48
    9aa0:	add	x0, x19, #0x48
    9aa4:	str	x2, [x19, #16]
    9aa8:	strb	w1, [x19, #24]
    9aac:	add	x20, sp, #0x50
    9ab0:	stp	xzr, xzr, [x19, #32]
    9ab4:	add	x23, x19, #0x18
    9ab8:	add	x24, sp, #0x4c
    9abc:	str	x0, [x19, #64]
    9ac0:	mov	x0, x20
    9ac4:	str	q0, [x19, #48]
    9ac8:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
    9acc:	mov	x1, x22
    9ad0:	mov	x0, x23
    9ad4:	mov	x2, x20
    9ad8:	mov	x3, x24
    9adc:	bl	25778 <PyInit__decimal@@Base+0x9538>
    9ae0:	ldr	w1, [sp, #76]
    9ae4:	mov	w0, #0x1041                	// #4161
    9ae8:	tst	w1, w0
    9aec:	b.ne	9b20 <PyFloat_FromString@plt+0x3090>  // b.any
    9af0:	mov	w0, #0x3be                 	// #958
    9af4:	and	w1, w1, w0
    9af8:	mov	x0, x21
    9afc:	str	w1, [sp, #76]
    9b00:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    9b04:	cbnz	w0, 9b4c <PyFloat_FromString@plt+0x30bc>
    9b08:	ldp	x23, x24, [sp, #48]
    9b0c:	mov	x0, x19
    9b10:	ldp	x19, x20, [sp, #16]
    9b14:	ldp	x21, x22, [sp, #32]
    9b18:	ldp	x29, x30, [sp], #128
    9b1c:	ret
    9b20:	mov	x0, x23
    9b24:	mov	w1, #0x100                 	// #256
    9b28:	mov	x2, x24
    9b2c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
    9b30:	ldr	w1, [sp, #76]
    9b34:	mov	w0, #0x3be                 	// #958
    9b38:	and	w1, w1, w0
    9b3c:	mov	x0, x21
    9b40:	str	w1, [sp, #76]
    9b44:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    9b48:	cbz	w0, 9b08 <PyFloat_FromString@plt+0x3078>
    9b4c:	ldr	x0, [x19]
    9b50:	sub	x0, x0, #0x1
    9b54:	str	x0, [x19]
    9b58:	cbz	x0, 9b84 <PyFloat_FromString@plt+0x30f4>
    9b5c:	ldp	x23, x24, [sp, #48]
    9b60:	mov	x19, #0x0                   	// #0
    9b64:	mov	x0, x19
    9b68:	ldp	x19, x20, [sp, #16]
    9b6c:	ldp	x21, x22, [sp, #32]
    9b70:	ldp	x29, x30, [sp], #128
    9b74:	ret
    9b78:	bl	6950 <_PyObject_New@plt>
    9b7c:	mov	x19, x0
    9b80:	b	9a88 <PyFloat_FromString@plt+0x2ff8>
    9b84:	mov	x0, x19
    9b88:	mov	x19, #0x0                   	// #0
    9b8c:	bl	65d0 <_Py_Dealloc@plt>
    9b90:	ldp	x23, x24, [sp, #48]
    9b94:	b	9b0c <PyFloat_FromString@plt+0x307c>
    9b98:	stp	x29, x30, [sp, #-128]!
    9b9c:	mov	x29, sp
    9ba0:	stp	x19, x20, [sp, #16]
    9ba4:	mov	x19, x0
    9ba8:	ldr	x0, [x1, #8]
    9bac:	str	wzr, [sp, #76]
    9bb0:	ldr	x0, [x0, #168]
    9bb4:	tbz	w0, #24, 9d40 <PyFloat_FromString@plt+0x32b0>
    9bb8:	stp	x21, x22, [sp, #32]
    9bbc:	add	x22, sp, #0x50
    9bc0:	mov	x0, x22
    9bc4:	mov	x20, x1
    9bc8:	mov	x21, x2
    9bcc:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
    9bd0:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    9bd4:	add	x0, x0, #0x328
    9bd8:	add	x0, x0, #0x1a0
    9bdc:	cmp	x19, x0
    9be0:	b.eq	9d94 <PyFloat_FromString@plt+0x3304>  // b.none
    9be4:	ldr	x2, [x19, #304]
    9be8:	mov	x0, x19
    9bec:	mov	x1, #0x0                   	// #0
    9bf0:	blr	x2
    9bf4:	mov	x19, x0
    9bf8:	cbz	x19, 9cf0 <PyFloat_FromString@plt+0x3260>
    9bfc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    9c00:	str	x23, [sp, #48]
    9c04:	stp	xzr, xzr, [x19, #32]
    9c08:	mov	x1, #0xffffffffffffffff    	// #-1
    9c0c:	add	x23, x19, #0x18
    9c10:	ldr	q0, [x0, #2128]
    9c14:	mov	w0, #0x30                  	// #48
    9c18:	strb	w0, [x19, #24]
    9c1c:	add	x0, x19, #0x48
    9c20:	str	q0, [x19, #48]
    9c24:	ldr	x2, [x20, #16]
    9c28:	str	x1, [x19, #16]
    9c2c:	str	x0, [x19, #64]
    9c30:	cbz	x2, 9d6c <PyFloat_FromString@plt+0x32dc>
    9c34:	mov	w3, #0x0                   	// #0
    9c38:	tbnz	x2, #63, 9c9c <PyFloat_FromString@plt+0x320c>
    9c3c:	cmp	x2, #0x1
    9c40:	b.eq	9d08 <PyFloat_FromString@plt+0x3278>  // b.none
    9c44:	mov	x5, x22
    9c48:	add	x1, x20, #0x18
    9c4c:	add	x6, sp, #0x4c
    9c50:	mov	x0, x23
    9c54:	mov	w4, #0x40000000            	// #1073741824
    9c58:	bl	3e4e0 <PyInit__decimal@@Base+0x222a0>
    9c5c:	ldr	w1, [sp, #76]
    9c60:	mov	w0, #0x1041                	// #4161
    9c64:	tst	w1, w0
    9c68:	b.ne	9cb0 <PyFloat_FromString@plt+0x3220>  // b.any
    9c6c:	mov	w0, #0x3be                 	// #958
    9c70:	and	w1, w1, w0
    9c74:	mov	x0, x21
    9c78:	str	w1, [sp, #76]
    9c7c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    9c80:	cbnz	w0, 9cdc <PyFloat_FromString@plt+0x324c>
    9c84:	ldp	x21, x22, [sp, #32]
    9c88:	ldr	x23, [sp, #48]
    9c8c:	mov	x0, x19
    9c90:	ldp	x19, x20, [sp, #16]
    9c94:	ldp	x29, x30, [sp], #128
    9c98:	ret
    9c9c:	neg	x2, x2
    9ca0:	mov	w3, #0x1                   	// #1
    9ca4:	cmp	x2, #0x1
    9ca8:	b.ne	9c44 <PyFloat_FromString@plt+0x31b4>  // b.any
    9cac:	b	9d08 <PyFloat_FromString@plt+0x3278>
    9cb0:	mov	x0, x23
    9cb4:	mov	w1, #0x100                 	// #256
    9cb8:	add	x2, sp, #0x4c
    9cbc:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
    9cc0:	ldr	w1, [sp, #76]
    9cc4:	mov	w0, #0x3be                 	// #958
    9cc8:	and	w1, w1, w0
    9ccc:	mov	x0, x21
    9cd0:	str	w1, [sp, #76]
    9cd4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    9cd8:	cbz	w0, 9c84 <PyFloat_FromString@plt+0x31f4>
    9cdc:	ldr	x0, [x19]
    9ce0:	sub	x0, x0, #0x1
    9ce4:	str	x0, [x19]
    9ce8:	cbz	x0, 9da4 <PyFloat_FromString@plt+0x3314>
    9cec:	ldr	x23, [sp, #48]
    9cf0:	mov	x19, #0x0                   	// #0
    9cf4:	mov	x0, x19
    9cf8:	ldp	x19, x20, [sp, #16]
    9cfc:	ldp	x21, x22, [sp, #32]
    9d00:	ldp	x29, x30, [sp], #128
    9d04:	ret
    9d08:	ldr	w4, [x20, #24]
    9d0c:	mov	w1, w3
    9d10:	str	x2, [x19, #48]
    9d14:	mov	x0, x23
    9d18:	str	x4, [x19, #72]
    9d1c:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
    9d20:	str	xzr, [x19, #32]
    9d24:	mov	x0, x23
    9d28:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
    9d2c:	mov	x1, x22
    9d30:	add	x2, sp, #0x4c
    9d34:	mov	x0, x23
    9d38:	bl	2f360 <PyInit__decimal@@Base+0x13120>
    9d3c:	b	9c5c <PyFloat_FromString@plt+0x31cc>
    9d40:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    9d44:	mov	x19, #0x0                   	// #0
    9d48:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9d4c:	add	x1, x1, #0xb50
    9d50:	ldr	x0, [x0, #3936]
    9d54:	ldr	x0, [x0]
    9d58:	bl	6650 <PyErr_SetString@plt>
    9d5c:	mov	x0, x19
    9d60:	ldp	x19, x20, [sp, #16]
    9d64:	ldp	x29, x30, [sp], #128
    9d68:	ret
    9d6c:	mov	x0, #0x1                   	// #1
    9d70:	str	x0, [x19, #48]
    9d74:	str	xzr, [x19, #72]
    9d78:	mov	x0, x23
    9d7c:	mov	w1, #0x0                   	// #0
    9d80:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
    9d84:	str	xzr, [x19, #32]
    9d88:	mov	x0, x23
    9d8c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
    9d90:	b	9c5c <PyFloat_FromString@plt+0x31cc>
    9d94:	mov	x0, x19
    9d98:	bl	6950 <_PyObject_New@plt>
    9d9c:	mov	x19, x0
    9da0:	b	9bf8 <PyFloat_FromString@plt+0x3168>
    9da4:	mov	x0, x19
    9da8:	mov	x19, #0x0                   	// #0
    9dac:	bl	65d0 <_Py_Dealloc@plt>
    9db0:	ldp	x21, x22, [sp, #32]
    9db4:	ldr	x23, [sp, #48]
    9db8:	b	9c8c <PyFloat_FromString@plt+0x31fc>
    9dbc:	nop
    9dc0:	stp	x29, x30, [sp, #-48]!
    9dc4:	mov	x29, sp
    9dc8:	str	x21, [sp, #32]
    9dcc:	mov	x21, x0
    9dd0:	ldr	x0, [x1, #8]
    9dd4:	stp	x19, x20, [sp, #16]
    9dd8:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    9ddc:	add	x19, x19, #0x328
    9de0:	mov	x20, x1
    9de4:	add	x19, x19, #0x1a0
    9de8:	cmp	x0, x19
    9dec:	b.eq	9e38 <PyFloat_FromString@plt+0x33a8>  // b.none
    9df0:	mov	x1, x19
    9df4:	bl	69c0 <PyType_IsSubtype@plt>
    9df8:	cbnz	w0, 9e38 <PyFloat_FromString@plt+0x33a8>
    9dfc:	ldr	x2, [x20, #8]
    9e00:	ldr	x0, [x2, #168]
    9e04:	tbnz	w0, #24, 9e58 <PyFloat_FromString@plt+0x33c8>
    9e08:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    9e0c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9e10:	ldr	x2, [x2, #24]
    9e14:	add	x1, x1, #0xb70
    9e18:	ldr	x0, [x0, #3936]
    9e1c:	ldr	x0, [x0]
    9e20:	bl	6a10 <PyErr_Format@plt>
    9e24:	mov	x0, #0x0                   	// #0
    9e28:	ldp	x19, x20, [sp, #16]
    9e2c:	ldr	x21, [sp, #32]
    9e30:	ldp	x29, x30, [sp], #48
    9e34:	ret
    9e38:	ldr	x1, [x20]
    9e3c:	mov	x0, x20
    9e40:	ldr	x21, [sp, #32]
    9e44:	add	x1, x1, #0x1
    9e48:	str	x1, [x20]
    9e4c:	ldp	x19, x20, [sp, #16]
    9e50:	ldp	x29, x30, [sp], #48
    9e54:	ret
    9e58:	mov	x2, x21
    9e5c:	mov	x1, x20
    9e60:	mov	x0, x19
    9e64:	ldp	x19, x20, [sp, #16]
    9e68:	ldr	x21, [sp, #32]
    9e6c:	ldp	x29, x30, [sp], #48
    9e70:	b	9b98 <PyFloat_FromString@plt+0x3108>
    9e74:	nop
    9e78:	stp	x29, x30, [sp, #-48]!
    9e7c:	mov	x29, sp
    9e80:	str	x21, [sp, #32]
    9e84:	mov	x21, x0
    9e88:	ldr	x0, [x1, #8]
    9e8c:	stp	x19, x20, [sp, #16]
    9e90:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    9e94:	add	x20, x20, #0x328
    9e98:	mov	x19, x1
    9e9c:	add	x20, x20, #0x1a0
    9ea0:	cmp	x0, x20
    9ea4:	b.eq	9ef0 <PyFloat_FromString@plt+0x3460>  // b.none
    9ea8:	mov	x1, x20
    9eac:	bl	69c0 <PyType_IsSubtype@plt>
    9eb0:	cbnz	w0, 9ef0 <PyFloat_FromString@plt+0x3460>
    9eb4:	ldr	x2, [x19, #8]
    9eb8:	ldr	x0, [x2, #168]
    9ebc:	tbnz	w0, #24, 9f4c <PyFloat_FromString@plt+0x34bc>
    9ec0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    9ec4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    9ec8:	ldr	x2, [x2, #24]
    9ecc:	add	x1, x1, #0xb70
    9ed0:	ldr	x0, [x0, #3936]
    9ed4:	ldr	x0, [x0]
    9ed8:	bl	6a10 <PyErr_Format@plt>
    9edc:	mov	x0, #0x0                   	// #0
    9ee0:	ldp	x19, x20, [sp, #16]
    9ee4:	ldr	x21, [sp, #32]
    9ee8:	ldp	x29, x30, [sp], #48
    9eec:	ret
    9ef0:	ldr	x0, [x19]
    9ef4:	add	x0, x0, #0x1
    9ef8:	str	x0, [x19]
    9efc:	add	x1, x21, #0x10
    9f00:	add	x0, x19, #0x18
    9f04:	bl	31e70 <PyInit__decimal@@Base+0x15c30>
    9f08:	mov	x20, x0
    9f0c:	ldr	x1, [x19]
    9f10:	sub	x1, x1, #0x1
    9f14:	str	x1, [x19]
    9f18:	cbz	x1, 9f30 <PyFloat_FromString@plt+0x34a0>
    9f1c:	mov	x0, x20
    9f20:	ldp	x19, x20, [sp, #16]
    9f24:	ldr	x21, [sp, #32]
    9f28:	ldp	x29, x30, [sp], #48
    9f2c:	b	6960 <PyUnicode_FromString@plt>
    9f30:	mov	x0, x19
    9f34:	bl	65d0 <_Py_Dealloc@plt>
    9f38:	mov	x0, x20
    9f3c:	ldp	x19, x20, [sp, #16]
    9f40:	ldr	x21, [sp, #32]
    9f44:	ldp	x29, x30, [sp], #48
    9f48:	b	6960 <PyUnicode_FromString@plt>
    9f4c:	mov	x1, x19
    9f50:	mov	x0, x20
    9f54:	mov	x2, x21
    9f58:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    9f5c:	mov	x19, x0
    9f60:	cbnz	x0, 9efc <PyFloat_FromString@plt+0x346c>
    9f64:	b	9edc <PyFloat_FromString@plt+0x344c>
    9f68:	stp	x29, x30, [sp, #-64]!
    9f6c:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
    9f70:	mov	x29, sp
    9f74:	stp	x19, x20, [sp, #16]
    9f78:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
    9f7c:	ldr	x0, [x3, #2056]
    9f80:	stp	x21, x22, [sp, #32]
    9f84:	mov	x21, x1
    9f88:	ldr	x3, [x20, #4008]
    9f8c:	mov	x22, x2
    9f90:	mov	x1, #0x0                   	// #0
    9f94:	add	x2, sp, #0x38
    9f98:	str	x3, [sp, #48]
    9f9c:	bl	6740 <PyContextVar_Get@plt>
    9fa0:	tbnz	w0, #31, a098 <PyFloat_FromString@plt+0x3608>
    9fa4:	ldr	x19, [sp, #56]
    9fa8:	cbz	x19, a0bc <PyFloat_FromString@plt+0x362c>
    9fac:	ldr	x0, [x19]
    9fb0:	sub	x0, x0, #0x1
    9fb4:	str	x0, [x19]
    9fb8:	cbz	x0, a0b0 <PyFloat_FromString@plt+0x3620>
    9fbc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    9fc0:	add	x3, x3, #0x9b0
    9fc4:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    9fc8:	mov	x1, x22
    9fcc:	mov	x0, x21
    9fd0:	add	x3, x3, #0x280
    9fd4:	add	x4, sp, #0x30
    9fd8:	add	x2, x2, #0xba0
    9fdc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    9fe0:	cbz	w0, a098 <PyFloat_FromString@plt+0x3608>
    9fe4:	ldr	x20, [x20, #4008]
    9fe8:	ldr	x0, [sp, #48]
    9fec:	cmp	x0, x20
    9ff0:	b.eq	a0d0 <PyFloat_FromString@plt+0x3640>  // b.none
    9ff4:	ldr	x0, [x0, #8]
    9ff8:	adrp	x21, 63000 <PyInit__decimal@@Base+0x46dc0>
    9ffc:	add	x1, x21, #0x328
    a000:	cmp	x0, x1
    a004:	b.eq	a010 <PyFloat_FromString@plt+0x3580>  // b.none
    a008:	bl	69c0 <PyType_IsSubtype@plt>
    a00c:	cbz	w0, a0dc <PyFloat_FromString@plt+0x364c>
    a010:	add	x21, x21, #0x328
    a014:	add	x0, x21, #0x340
    a018:	bl	6950 <_PyObject_New@plt>
    a01c:	mov	x20, x0
    a020:	cbz	x0, a098 <PyFloat_FromString@plt+0x3608>
    a024:	mov	x0, x21
    a028:	mov	x1, #0x0                   	// #0
    a02c:	ldr	x21, [sp, #48]
    a030:	bl	6840 <PyObject_CallObject@plt>
    a034:	cbz	x0, a084 <PyFloat_FromString@plt+0x35f4>
    a038:	add	x2, x21, #0x10
    a03c:	ldp	x4, x5, [x21, #16]
    a040:	stp	x4, x5, [x0, #16]
    a044:	ldp	x4, x5, [x2, #16]
    a048:	stp	x4, x5, [x0, #32]
    a04c:	ldp	x2, x3, [x2, #32]
    a050:	stp	x2, x3, [x0, #48]
    a054:	ldr	w2, [x21, #80]
    a058:	ldr	x1, [x19]
    a05c:	str	wzr, [x0, #48]
    a060:	str	w2, [x0, #80]
    a064:	stp	x0, x19, [x20, #16]
    a068:	add	x1, x1, #0x1
    a06c:	str	x1, [x19]
    a070:	mov	x0, x20
    a074:	ldp	x19, x20, [sp, #16]
    a078:	ldp	x21, x22, [sp, #32]
    a07c:	ldp	x29, x30, [sp], #64
    a080:	ret
    a084:	ldr	x0, [x20]
    a088:	stp	xzr, xzr, [x20, #16]
    a08c:	sub	x0, x0, #0x1
    a090:	str	x0, [x20]
    a094:	cbz	x0, a0fc <PyFloat_FromString@plt+0x366c>
    a098:	mov	x20, #0x0                   	// #0
    a09c:	mov	x0, x20
    a0a0:	ldp	x19, x20, [sp, #16]
    a0a4:	ldp	x21, x22, [sp, #32]
    a0a8:	ldp	x29, x30, [sp], #64
    a0ac:	ret
    a0b0:	mov	x0, x19
    a0b4:	bl	65d0 <_Py_Dealloc@plt>
    a0b8:	b	9fbc <PyFloat_FromString@plt+0x352c>
    a0bc:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    a0c0:	mov	x19, x0
    a0c4:	cbnz	x0, 9fac <PyFloat_FromString@plt+0x351c>
    a0c8:	mov	x20, #0x0                   	// #0
    a0cc:	b	a09c <PyFloat_FromString@plt+0x360c>
    a0d0:	adrp	x21, 63000 <PyInit__decimal@@Base+0x46dc0>
    a0d4:	str	x19, [sp, #48]
    a0d8:	b	a010 <PyFloat_FromString@plt+0x3580>
    a0dc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a0e0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a0e4:	mov	x20, #0x0                   	// #0
    a0e8:	add	x1, x1, #0xba8
    a0ec:	ldr	x0, [x0, #3936]
    a0f0:	ldr	x0, [x0]
    a0f4:	bl	6650 <PyErr_SetString@plt>
    a0f8:	b	a070 <PyFloat_FromString@plt+0x35e0>
    a0fc:	mov	x0, x20
    a100:	mov	x20, #0x0                   	// #0
    a104:	bl	65d0 <_Py_Dealloc@plt>
    a108:	b	a070 <PyFloat_FromString@plt+0x35e0>
    a10c:	nop
    a110:	stp	x29, x30, [sp, #-48]!
    a114:	mov	x29, sp
    a118:	str	x21, [sp, #32]
    a11c:	mov	x21, x0
    a120:	ldr	x0, [x1, #8]
    a124:	stp	x19, x20, [sp, #16]
    a128:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a12c:	add	x20, x20, #0x328
    a130:	mov	x19, x1
    a134:	add	x20, x20, #0x1a0
    a138:	cmp	x0, x20
    a13c:	b.eq	a18c <PyFloat_FromString@plt+0x36fc>  // b.none
    a140:	mov	x1, x20
    a144:	bl	69c0 <PyType_IsSubtype@plt>
    a148:	cbnz	w0, a18c <PyFloat_FromString@plt+0x36fc>
    a14c:	ldr	x2, [x19, #8]
    a150:	ldr	x0, [x2, #168]
    a154:	tbnz	w0, #24, a204 <PyFloat_FromString@plt+0x3774>
    a158:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a15c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a160:	ldr	x2, [x2, #24]
    a164:	add	x1, x1, #0xb70
    a168:	ldr	x0, [x0, #3936]
    a16c:	mov	x20, #0x0                   	// #0
    a170:	ldr	x0, [x0]
    a174:	bl	6a10 <PyErr_Format@plt>
    a178:	mov	x0, x20
    a17c:	ldp	x19, x20, [sp, #16]
    a180:	ldr	x21, [sp, #32]
    a184:	ldp	x29, x30, [sp], #48
    a188:	ret
    a18c:	ldr	x0, [x19]
    a190:	add	x0, x0, #0x1
    a194:	str	x0, [x19]
    a198:	add	x0, x19, #0x18
    a19c:	bl	2a858 <PyInit__decimal@@Base+0xe618>
    a1a0:	cbnz	w0, a1e8 <PyFloat_FromString@plt+0x3758>
    a1a4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a1a8:	ldr	x0, [x0, #3976]
    a1ac:	mov	x20, x0
    a1b0:	ldr	x1, [x0]
    a1b4:	add	x1, x1, #0x1
    a1b8:	str	x1, [x0]
    a1bc:	ldr	x0, [x19]
    a1c0:	sub	x0, x0, #0x1
    a1c4:	str	x0, [x19]
    a1c8:	cbnz	x0, a178 <PyFloat_FromString@plt+0x36e8>
    a1cc:	mov	x0, x19
    a1d0:	bl	65d0 <_Py_Dealloc@plt>
    a1d4:	mov	x0, x20
    a1d8:	ldp	x19, x20, [sp, #16]
    a1dc:	ldr	x21, [sp, #32]
    a1e0:	ldp	x29, x30, [sp], #48
    a1e4:	ret
    a1e8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a1ec:	ldr	x0, [x0, #4024]
    a1f0:	mov	x20, x0
    a1f4:	ldr	x1, [x0]
    a1f8:	add	x1, x1, #0x1
    a1fc:	str	x1, [x0]
    a200:	b	a1bc <PyFloat_FromString@plt+0x372c>
    a204:	mov	x1, x19
    a208:	mov	x0, x20
    a20c:	mov	x2, x21
    a210:	mov	x20, #0x0                   	// #0
    a214:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a218:	mov	x19, x0
    a21c:	cbnz	x0, a198 <PyFloat_FromString@plt+0x3708>
    a220:	b	a178 <PyFloat_FromString@plt+0x36e8>
    a224:	nop
    a228:	stp	x29, x30, [sp, #-48]!
    a22c:	mov	x29, sp
    a230:	str	x21, [sp, #32]
    a234:	mov	x21, x0
    a238:	ldr	x0, [x1, #8]
    a23c:	stp	x19, x20, [sp, #16]
    a240:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a244:	add	x20, x20, #0x328
    a248:	mov	x19, x1
    a24c:	add	x20, x20, #0x1a0
    a250:	cmp	x0, x20
    a254:	b.eq	a2a4 <PyFloat_FromString@plt+0x3814>  // b.none
    a258:	mov	x1, x20
    a25c:	bl	69c0 <PyType_IsSubtype@plt>
    a260:	cbnz	w0, a2a4 <PyFloat_FromString@plt+0x3814>
    a264:	ldr	x2, [x19, #8]
    a268:	ldr	x0, [x2, #168]
    a26c:	tbnz	w0, #24, a31c <PyFloat_FromString@plt+0x388c>
    a270:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a274:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a278:	ldr	x2, [x2, #24]
    a27c:	add	x1, x1, #0xb70
    a280:	ldr	x0, [x0, #3936]
    a284:	mov	x20, #0x0                   	// #0
    a288:	ldr	x0, [x0]
    a28c:	bl	6a10 <PyErr_Format@plt>
    a290:	mov	x0, x20
    a294:	ldp	x19, x20, [sp, #16]
    a298:	ldr	x21, [sp, #32]
    a29c:	ldp	x29, x30, [sp], #48
    a2a0:	ret
    a2a4:	ldr	x0, [x19]
    a2a8:	add	x0, x0, #0x1
    a2ac:	str	x0, [x19]
    a2b0:	add	x0, x19, #0x18
    a2b4:	bl	2a868 <PyInit__decimal@@Base+0xe628>
    a2b8:	cbnz	w0, a300 <PyFloat_FromString@plt+0x3870>
    a2bc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a2c0:	ldr	x0, [x0, #3976]
    a2c4:	mov	x20, x0
    a2c8:	ldr	x1, [x0]
    a2cc:	add	x1, x1, #0x1
    a2d0:	str	x1, [x0]
    a2d4:	ldr	x0, [x19]
    a2d8:	sub	x0, x0, #0x1
    a2dc:	str	x0, [x19]
    a2e0:	cbnz	x0, a290 <PyFloat_FromString@plt+0x3800>
    a2e4:	mov	x0, x19
    a2e8:	bl	65d0 <_Py_Dealloc@plt>
    a2ec:	mov	x0, x20
    a2f0:	ldp	x19, x20, [sp, #16]
    a2f4:	ldr	x21, [sp, #32]
    a2f8:	ldp	x29, x30, [sp], #48
    a2fc:	ret
    a300:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a304:	ldr	x0, [x0, #4024]
    a308:	mov	x20, x0
    a30c:	ldr	x1, [x0]
    a310:	add	x1, x1, #0x1
    a314:	str	x1, [x0]
    a318:	b	a2d4 <PyFloat_FromString@plt+0x3844>
    a31c:	mov	x1, x19
    a320:	mov	x0, x20
    a324:	mov	x2, x21
    a328:	mov	x20, #0x0                   	// #0
    a32c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a330:	mov	x19, x0
    a334:	cbnz	x0, a2b0 <PyFloat_FromString@plt+0x3820>
    a338:	b	a290 <PyFloat_FromString@plt+0x3800>
    a33c:	nop
    a340:	stp	x29, x30, [sp, #-48]!
    a344:	mov	x29, sp
    a348:	str	x21, [sp, #32]
    a34c:	mov	x21, x0
    a350:	ldr	x0, [x1, #8]
    a354:	stp	x19, x20, [sp, #16]
    a358:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a35c:	add	x20, x20, #0x328
    a360:	mov	x19, x1
    a364:	add	x20, x20, #0x1a0
    a368:	cmp	x0, x20
    a36c:	b.eq	a3bc <PyFloat_FromString@plt+0x392c>  // b.none
    a370:	mov	x1, x20
    a374:	bl	69c0 <PyType_IsSubtype@plt>
    a378:	cbnz	w0, a3bc <PyFloat_FromString@plt+0x392c>
    a37c:	ldr	x2, [x19, #8]
    a380:	ldr	x0, [x2, #168]
    a384:	tbnz	w0, #24, a434 <PyFloat_FromString@plt+0x39a4>
    a388:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a38c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a390:	ldr	x2, [x2, #24]
    a394:	add	x1, x1, #0xb70
    a398:	ldr	x0, [x0, #3936]
    a39c:	mov	x20, #0x0                   	// #0
    a3a0:	ldr	x0, [x0]
    a3a4:	bl	6a10 <PyErr_Format@plt>
    a3a8:	mov	x0, x20
    a3ac:	ldp	x19, x20, [sp, #16]
    a3b0:	ldr	x21, [sp, #32]
    a3b4:	ldp	x29, x30, [sp], #48
    a3b8:	ret
    a3bc:	ldr	x0, [x19]
    a3c0:	add	x0, x0, #0x1
    a3c4:	str	x0, [x19]
    a3c8:	add	x0, x19, #0x18
    a3cc:	bl	2a898 <PyInit__decimal@@Base+0xe658>
    a3d0:	cbnz	w0, a418 <PyFloat_FromString@plt+0x3988>
    a3d4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a3d8:	ldr	x0, [x0, #3976]
    a3dc:	mov	x20, x0
    a3e0:	ldr	x1, [x0]
    a3e4:	add	x1, x1, #0x1
    a3e8:	str	x1, [x0]
    a3ec:	ldr	x0, [x19]
    a3f0:	sub	x0, x0, #0x1
    a3f4:	str	x0, [x19]
    a3f8:	cbnz	x0, a3a8 <PyFloat_FromString@plt+0x3918>
    a3fc:	mov	x0, x19
    a400:	bl	65d0 <_Py_Dealloc@plt>
    a404:	mov	x0, x20
    a408:	ldp	x19, x20, [sp, #16]
    a40c:	ldr	x21, [sp, #32]
    a410:	ldp	x29, x30, [sp], #48
    a414:	ret
    a418:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a41c:	ldr	x0, [x0, #4024]
    a420:	mov	x20, x0
    a424:	ldr	x1, [x0]
    a428:	add	x1, x1, #0x1
    a42c:	str	x1, [x0]
    a430:	b	a3ec <PyFloat_FromString@plt+0x395c>
    a434:	mov	x1, x19
    a438:	mov	x0, x20
    a43c:	mov	x2, x21
    a440:	mov	x20, #0x0                   	// #0
    a444:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a448:	mov	x19, x0
    a44c:	cbnz	x0, a3c8 <PyFloat_FromString@plt+0x3938>
    a450:	b	a3a8 <PyFloat_FromString@plt+0x3918>
    a454:	nop
    a458:	stp	x29, x30, [sp, #-48]!
    a45c:	mov	x29, sp
    a460:	str	x21, [sp, #32]
    a464:	mov	x21, x0
    a468:	ldr	x0, [x1, #8]
    a46c:	stp	x19, x20, [sp, #16]
    a470:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a474:	add	x20, x20, #0x328
    a478:	mov	x19, x1
    a47c:	add	x20, x20, #0x1a0
    a480:	cmp	x0, x20
    a484:	b.eq	a4d4 <PyFloat_FromString@plt+0x3a44>  // b.none
    a488:	mov	x1, x20
    a48c:	bl	69c0 <PyType_IsSubtype@plt>
    a490:	cbnz	w0, a4d4 <PyFloat_FromString@plt+0x3a44>
    a494:	ldr	x2, [x19, #8]
    a498:	ldr	x0, [x2, #168]
    a49c:	tbnz	w0, #24, a54c <PyFloat_FromString@plt+0x3abc>
    a4a0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a4a4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a4a8:	ldr	x2, [x2, #24]
    a4ac:	add	x1, x1, #0xb70
    a4b0:	ldr	x0, [x0, #3936]
    a4b4:	mov	x20, #0x0                   	// #0
    a4b8:	ldr	x0, [x0]
    a4bc:	bl	6a10 <PyErr_Format@plt>
    a4c0:	mov	x0, x20
    a4c4:	ldp	x19, x20, [sp, #16]
    a4c8:	ldr	x21, [sp, #32]
    a4cc:	ldp	x29, x30, [sp], #48
    a4d0:	ret
    a4d4:	ldr	x0, [x19]
    a4d8:	add	x0, x0, #0x1
    a4dc:	str	x0, [x19]
    a4e0:	add	x0, x19, #0x18
    a4e4:	bl	2a8b8 <PyInit__decimal@@Base+0xe678>
    a4e8:	cbnz	w0, a530 <PyFloat_FromString@plt+0x3aa0>
    a4ec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a4f0:	ldr	x0, [x0, #3976]
    a4f4:	mov	x20, x0
    a4f8:	ldr	x1, [x0]
    a4fc:	add	x1, x1, #0x1
    a500:	str	x1, [x0]
    a504:	ldr	x0, [x19]
    a508:	sub	x0, x0, #0x1
    a50c:	str	x0, [x19]
    a510:	cbnz	x0, a4c0 <PyFloat_FromString@plt+0x3a30>
    a514:	mov	x0, x19
    a518:	bl	65d0 <_Py_Dealloc@plt>
    a51c:	mov	x0, x20
    a520:	ldp	x19, x20, [sp, #16]
    a524:	ldr	x21, [sp, #32]
    a528:	ldp	x29, x30, [sp], #48
    a52c:	ret
    a530:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a534:	ldr	x0, [x0, #4024]
    a538:	mov	x20, x0
    a53c:	ldr	x1, [x0]
    a540:	add	x1, x1, #0x1
    a544:	str	x1, [x0]
    a548:	b	a504 <PyFloat_FromString@plt+0x3a74>
    a54c:	mov	x1, x19
    a550:	mov	x0, x20
    a554:	mov	x2, x21
    a558:	mov	x20, #0x0                   	// #0
    a55c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a560:	mov	x19, x0
    a564:	cbnz	x0, a4e0 <PyFloat_FromString@plt+0x3a50>
    a568:	b	a4c0 <PyFloat_FromString@plt+0x3a30>
    a56c:	nop
    a570:	stp	x29, x30, [sp, #-48]!
    a574:	mov	x29, sp
    a578:	str	x21, [sp, #32]
    a57c:	mov	x21, x0
    a580:	ldr	x0, [x1, #8]
    a584:	stp	x19, x20, [sp, #16]
    a588:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a58c:	add	x20, x20, #0x328
    a590:	mov	x19, x1
    a594:	add	x20, x20, #0x1a0
    a598:	cmp	x0, x20
    a59c:	b.eq	a5ec <PyFloat_FromString@plt+0x3b5c>  // b.none
    a5a0:	mov	x1, x20
    a5a4:	bl	69c0 <PyType_IsSubtype@plt>
    a5a8:	cbnz	w0, a5ec <PyFloat_FromString@plt+0x3b5c>
    a5ac:	ldr	x2, [x19, #8]
    a5b0:	ldr	x0, [x2, #168]
    a5b4:	tbnz	w0, #24, a664 <PyFloat_FromString@plt+0x3bd4>
    a5b8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a5bc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a5c0:	ldr	x2, [x2, #24]
    a5c4:	add	x1, x1, #0xb70
    a5c8:	ldr	x0, [x0, #3936]
    a5cc:	mov	x20, #0x0                   	// #0
    a5d0:	ldr	x0, [x0]
    a5d4:	bl	6a10 <PyErr_Format@plt>
    a5d8:	mov	x0, x20
    a5dc:	ldp	x19, x20, [sp, #16]
    a5e0:	ldr	x21, [sp, #32]
    a5e4:	ldp	x29, x30, [sp], #48
    a5e8:	ret
    a5ec:	ldr	x0, [x19]
    a5f0:	add	x0, x0, #0x1
    a5f4:	str	x0, [x19]
    a5f8:	add	x0, x19, #0x18
    a5fc:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
    a600:	cbnz	w0, a648 <PyFloat_FromString@plt+0x3bb8>
    a604:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a608:	ldr	x0, [x0, #3976]
    a60c:	mov	x20, x0
    a610:	ldr	x1, [x0]
    a614:	add	x1, x1, #0x1
    a618:	str	x1, [x0]
    a61c:	ldr	x0, [x19]
    a620:	sub	x0, x0, #0x1
    a624:	str	x0, [x19]
    a628:	cbnz	x0, a5d8 <PyFloat_FromString@plt+0x3b48>
    a62c:	mov	x0, x19
    a630:	bl	65d0 <_Py_Dealloc@plt>
    a634:	mov	x0, x20
    a638:	ldp	x19, x20, [sp, #16]
    a63c:	ldr	x21, [sp, #32]
    a640:	ldp	x29, x30, [sp], #48
    a644:	ret
    a648:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a64c:	ldr	x0, [x0, #4024]
    a650:	mov	x20, x0
    a654:	ldr	x1, [x0]
    a658:	add	x1, x1, #0x1
    a65c:	str	x1, [x0]
    a660:	b	a61c <PyFloat_FromString@plt+0x3b8c>
    a664:	mov	x1, x19
    a668:	mov	x0, x20
    a66c:	mov	x2, x21
    a670:	mov	x20, #0x0                   	// #0
    a674:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a678:	mov	x19, x0
    a67c:	cbnz	x0, a5f8 <PyFloat_FromString@plt+0x3b68>
    a680:	b	a5d8 <PyFloat_FromString@plt+0x3b48>
    a684:	nop
    a688:	stp	x29, x30, [sp, #-48]!
    a68c:	mov	x29, sp
    a690:	str	x21, [sp, #32]
    a694:	mov	x21, x0
    a698:	ldr	x0, [x1, #8]
    a69c:	stp	x19, x20, [sp, #16]
    a6a0:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a6a4:	add	x20, x20, #0x328
    a6a8:	mov	x19, x1
    a6ac:	add	x20, x20, #0x1a0
    a6b0:	cmp	x0, x20
    a6b4:	b.eq	a704 <PyFloat_FromString@plt+0x3c74>  // b.none
    a6b8:	mov	x1, x20
    a6bc:	bl	69c0 <PyType_IsSubtype@plt>
    a6c0:	cbnz	w0, a704 <PyFloat_FromString@plt+0x3c74>
    a6c4:	ldr	x2, [x19, #8]
    a6c8:	ldr	x0, [x2, #168]
    a6cc:	tbnz	w0, #24, a77c <PyFloat_FromString@plt+0x3cec>
    a6d0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a6d4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a6d8:	ldr	x2, [x2, #24]
    a6dc:	add	x1, x1, #0xb70
    a6e0:	ldr	x0, [x0, #3936]
    a6e4:	mov	x20, #0x0                   	// #0
    a6e8:	ldr	x0, [x0]
    a6ec:	bl	6a10 <PyErr_Format@plt>
    a6f0:	mov	x0, x20
    a6f4:	ldp	x19, x20, [sp, #16]
    a6f8:	ldr	x21, [sp, #32]
    a6fc:	ldp	x29, x30, [sp], #48
    a700:	ret
    a704:	ldr	x0, [x19]
    a708:	add	x0, x0, #0x1
    a70c:	str	x0, [x19]
    a710:	add	x0, x19, #0x18
    a714:	bl	2a8a8 <PyInit__decimal@@Base+0xe668>
    a718:	cbnz	w0, a760 <PyFloat_FromString@plt+0x3cd0>
    a71c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a720:	ldr	x0, [x0, #3976]
    a724:	mov	x20, x0
    a728:	ldr	x1, [x0]
    a72c:	add	x1, x1, #0x1
    a730:	str	x1, [x0]
    a734:	ldr	x0, [x19]
    a738:	sub	x0, x0, #0x1
    a73c:	str	x0, [x19]
    a740:	cbnz	x0, a6f0 <PyFloat_FromString@plt+0x3c60>
    a744:	mov	x0, x19
    a748:	bl	65d0 <_Py_Dealloc@plt>
    a74c:	mov	x0, x20
    a750:	ldp	x19, x20, [sp, #16]
    a754:	ldr	x21, [sp, #32]
    a758:	ldp	x29, x30, [sp], #48
    a75c:	ret
    a760:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a764:	ldr	x0, [x0, #4024]
    a768:	mov	x20, x0
    a76c:	ldr	x1, [x0]
    a770:	add	x1, x1, #0x1
    a774:	str	x1, [x0]
    a778:	b	a734 <PyFloat_FromString@plt+0x3ca4>
    a77c:	mov	x1, x19
    a780:	mov	x0, x20
    a784:	mov	x2, x21
    a788:	mov	x20, #0x0                   	// #0
    a78c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a790:	mov	x19, x0
    a794:	cbnz	x0, a710 <PyFloat_FromString@plt+0x3c80>
    a798:	b	a6f0 <PyFloat_FromString@plt+0x3c60>
    a79c:	nop
    a7a0:	stp	x29, x30, [sp, #-48]!
    a7a4:	mov	x29, sp
    a7a8:	str	x21, [sp, #32]
    a7ac:	mov	x21, x0
    a7b0:	ldr	x0, [x1, #8]
    a7b4:	stp	x19, x20, [sp, #16]
    a7b8:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a7bc:	add	x20, x20, #0x328
    a7c0:	mov	x19, x1
    a7c4:	add	x20, x20, #0x1a0
    a7c8:	cmp	x0, x20
    a7cc:	b.eq	a81c <PyFloat_FromString@plt+0x3d8c>  // b.none
    a7d0:	mov	x1, x20
    a7d4:	bl	69c0 <PyType_IsSubtype@plt>
    a7d8:	cbnz	w0, a81c <PyFloat_FromString@plt+0x3d8c>
    a7dc:	ldr	x2, [x19, #8]
    a7e0:	ldr	x0, [x2, #168]
    a7e4:	tbnz	w0, #24, a894 <PyFloat_FromString@plt+0x3e04>
    a7e8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a7ec:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a7f0:	ldr	x2, [x2, #24]
    a7f4:	add	x1, x1, #0xb70
    a7f8:	ldr	x0, [x0, #3936]
    a7fc:	mov	x20, #0x0                   	// #0
    a800:	ldr	x0, [x0]
    a804:	bl	6a10 <PyErr_Format@plt>
    a808:	mov	x0, x20
    a80c:	ldp	x19, x20, [sp, #16]
    a810:	ldr	x21, [sp, #32]
    a814:	ldp	x29, x30, [sp], #48
    a818:	ret
    a81c:	ldr	x0, [x19]
    a820:	add	x0, x0, #0x1
    a824:	str	x0, [x19]
    a828:	add	x0, x19, #0x18
    a82c:	bl	2a848 <PyInit__decimal@@Base+0xe608>
    a830:	cbnz	w0, a878 <PyFloat_FromString@plt+0x3de8>
    a834:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a838:	ldr	x0, [x0, #3976]
    a83c:	mov	x20, x0
    a840:	ldr	x1, [x0]
    a844:	add	x1, x1, #0x1
    a848:	str	x1, [x0]
    a84c:	ldr	x0, [x19]
    a850:	sub	x0, x0, #0x1
    a854:	str	x0, [x19]
    a858:	cbnz	x0, a808 <PyFloat_FromString@plt+0x3d78>
    a85c:	mov	x0, x19
    a860:	bl	65d0 <_Py_Dealloc@plt>
    a864:	mov	x0, x20
    a868:	ldp	x19, x20, [sp, #16]
    a86c:	ldr	x21, [sp, #32]
    a870:	ldp	x29, x30, [sp], #48
    a874:	ret
    a878:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a87c:	ldr	x0, [x0, #4024]
    a880:	mov	x20, x0
    a884:	ldr	x1, [x0]
    a888:	add	x1, x1, #0x1
    a88c:	str	x1, [x0]
    a890:	b	a84c <PyFloat_FromString@plt+0x3dbc>
    a894:	mov	x1, x19
    a898:	mov	x0, x20
    a89c:	mov	x2, x21
    a8a0:	mov	x20, #0x0                   	// #0
    a8a4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a8a8:	mov	x19, x0
    a8ac:	cbnz	x0, a828 <PyFloat_FromString@plt+0x3d98>
    a8b0:	b	a808 <PyFloat_FromString@plt+0x3d78>
    a8b4:	nop
    a8b8:	stp	x29, x30, [sp, #-48]!
    a8bc:	mov	x29, sp
    a8c0:	str	x21, [sp, #32]
    a8c4:	mov	x21, x0
    a8c8:	ldr	x0, [x1, #8]
    a8cc:	stp	x19, x20, [sp, #16]
    a8d0:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a8d4:	add	x20, x20, #0x328
    a8d8:	mov	x19, x1
    a8dc:	add	x20, x20, #0x1a0
    a8e0:	cmp	x0, x20
    a8e4:	b.eq	a934 <PyFloat_FromString@plt+0x3ea4>  // b.none
    a8e8:	mov	x1, x20
    a8ec:	bl	69c0 <PyType_IsSubtype@plt>
    a8f0:	cbnz	w0, a934 <PyFloat_FromString@plt+0x3ea4>
    a8f4:	ldr	x2, [x19, #8]
    a8f8:	ldr	x0, [x2, #168]
    a8fc:	tbnz	w0, #24, a9b0 <PyFloat_FromString@plt+0x3f20>
    a900:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a904:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    a908:	ldr	x2, [x2, #24]
    a90c:	add	x1, x1, #0xb70
    a910:	ldr	x0, [x0, #3936]
    a914:	mov	x20, #0x0                   	// #0
    a918:	ldr	x0, [x0]
    a91c:	bl	6a10 <PyErr_Format@plt>
    a920:	mov	x0, x20
    a924:	ldp	x19, x20, [sp, #16]
    a928:	ldr	x21, [sp, #32]
    a92c:	ldp	x29, x30, [sp], #48
    a930:	ret
    a934:	ldr	x0, [x19]
    a938:	add	x0, x0, #0x1
    a93c:	str	x0, [x19]
    a940:	add	x1, x21, #0x10
    a944:	add	x0, x19, #0x18
    a948:	bl	2a978 <PyInit__decimal@@Base+0xe738>
    a94c:	cbnz	w0, a994 <PyFloat_FromString@plt+0x3f04>
    a950:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a954:	ldr	x0, [x0, #3976]
    a958:	mov	x20, x0
    a95c:	ldr	x1, [x0]
    a960:	add	x1, x1, #0x1
    a964:	str	x1, [x0]
    a968:	ldr	x0, [x19]
    a96c:	sub	x0, x0, #0x1
    a970:	str	x0, [x19]
    a974:	cbnz	x0, a920 <PyFloat_FromString@plt+0x3e90>
    a978:	mov	x0, x19
    a97c:	bl	65d0 <_Py_Dealloc@plt>
    a980:	mov	x0, x20
    a984:	ldp	x19, x20, [sp, #16]
    a988:	ldr	x21, [sp, #32]
    a98c:	ldp	x29, x30, [sp], #48
    a990:	ret
    a994:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    a998:	ldr	x0, [x0, #4024]
    a99c:	mov	x20, x0
    a9a0:	ldr	x1, [x0]
    a9a4:	add	x1, x1, #0x1
    a9a8:	str	x1, [x0]
    a9ac:	b	a968 <PyFloat_FromString@plt+0x3ed8>
    a9b0:	mov	x1, x19
    a9b4:	mov	x0, x20
    a9b8:	mov	x2, x21
    a9bc:	mov	x20, #0x0                   	// #0
    a9c0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    a9c4:	mov	x19, x0
    a9c8:	cbnz	x0, a940 <PyFloat_FromString@plt+0x3eb0>
    a9cc:	b	a920 <PyFloat_FromString@plt+0x3e90>
    a9d0:	stp	x29, x30, [sp, #-48]!
    a9d4:	mov	x29, sp
    a9d8:	str	x21, [sp, #32]
    a9dc:	mov	x21, x0
    a9e0:	ldr	x0, [x1, #8]
    a9e4:	stp	x19, x20, [sp, #16]
    a9e8:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    a9ec:	add	x20, x20, #0x328
    a9f0:	mov	x19, x1
    a9f4:	add	x20, x20, #0x1a0
    a9f8:	cmp	x0, x20
    a9fc:	b.eq	aa4c <PyFloat_FromString@plt+0x3fbc>  // b.none
    aa00:	mov	x1, x20
    aa04:	bl	69c0 <PyType_IsSubtype@plt>
    aa08:	cbnz	w0, aa4c <PyFloat_FromString@plt+0x3fbc>
    aa0c:	ldr	x2, [x19, #8]
    aa10:	ldr	x0, [x2, #168]
    aa14:	tbnz	w0, #24, aac8 <PyFloat_FromString@plt+0x4038>
    aa18:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    aa1c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    aa20:	ldr	x2, [x2, #24]
    aa24:	add	x1, x1, #0xb70
    aa28:	ldr	x0, [x0, #3936]
    aa2c:	mov	x20, #0x0                   	// #0
    aa30:	ldr	x0, [x0]
    aa34:	bl	6a10 <PyErr_Format@plt>
    aa38:	mov	x0, x20
    aa3c:	ldp	x19, x20, [sp, #16]
    aa40:	ldr	x21, [sp, #32]
    aa44:	ldp	x29, x30, [sp], #48
    aa48:	ret
    aa4c:	ldr	x0, [x19]
    aa50:	add	x0, x0, #0x1
    aa54:	str	x0, [x19]
    aa58:	add	x1, x21, #0x10
    aa5c:	add	x0, x19, #0x18
    aa60:	bl	2a928 <PyInit__decimal@@Base+0xe6e8>
    aa64:	cbnz	w0, aaac <PyFloat_FromString@plt+0x401c>
    aa68:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    aa6c:	ldr	x0, [x0, #3976]
    aa70:	mov	x20, x0
    aa74:	ldr	x1, [x0]
    aa78:	add	x1, x1, #0x1
    aa7c:	str	x1, [x0]
    aa80:	ldr	x0, [x19]
    aa84:	sub	x0, x0, #0x1
    aa88:	str	x0, [x19]
    aa8c:	cbnz	x0, aa38 <PyFloat_FromString@plt+0x3fa8>
    aa90:	mov	x0, x19
    aa94:	bl	65d0 <_Py_Dealloc@plt>
    aa98:	mov	x0, x20
    aa9c:	ldp	x19, x20, [sp, #16]
    aaa0:	ldr	x21, [sp, #32]
    aaa4:	ldp	x29, x30, [sp], #48
    aaa8:	ret
    aaac:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    aab0:	ldr	x0, [x0, #4024]
    aab4:	mov	x20, x0
    aab8:	ldr	x1, [x0]
    aabc:	add	x1, x1, #0x1
    aac0:	str	x1, [x0]
    aac4:	b	aa80 <PyFloat_FromString@plt+0x3ff0>
    aac8:	mov	x1, x19
    aacc:	mov	x0, x20
    aad0:	mov	x2, x21
    aad4:	mov	x20, #0x0                   	// #0
    aad8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    aadc:	mov	x19, x0
    aae0:	cbnz	x0, aa58 <PyFloat_FromString@plt+0x3fc8>
    aae4:	b	aa38 <PyFloat_FromString@plt+0x3fa8>
    aae8:	stp	x29, x30, [sp, #-64]!
    aaec:	mov	x29, sp
    aaf0:	str	x21, [sp, #32]
    aaf4:	mov	x21, x0
    aaf8:	ldr	x0, [x1, #8]
    aafc:	stp	x19, x20, [sp, #16]
    ab00:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    ab04:	add	x20, x20, #0x328
    ab08:	mov	x19, x1
    ab0c:	add	x20, x20, #0x1a0
    ab10:	cmp	x0, x20
    ab14:	b.eq	ab64 <PyFloat_FromString@plt+0x40d4>  // b.none
    ab18:	mov	x1, x20
    ab1c:	bl	69c0 <PyType_IsSubtype@plt>
    ab20:	cbnz	w0, ab64 <PyFloat_FromString@plt+0x40d4>
    ab24:	ldr	x2, [x19, #8]
    ab28:	ldr	x0, [x2, #168]
    ab2c:	tbnz	w0, #24, ac0c <PyFloat_FromString@plt+0x417c>
    ab30:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    ab34:	mov	x20, #0x0                   	// #0
    ab38:	ldr	x2, [x2, #24]
    ab3c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    ab40:	ldr	x0, [x0, #3936]
    ab44:	add	x1, x1, #0xb70
    ab48:	ldr	x0, [x0]
    ab4c:	bl	6a10 <PyErr_Format@plt>
    ab50:	mov	x0, x20
    ab54:	ldp	x19, x20, [sp, #16]
    ab58:	ldr	x21, [sp, #32]
    ab5c:	ldp	x29, x30, [sp], #64
    ab60:	ret
    ab64:	ldr	x0, [x19]
    ab68:	add	x0, x0, #0x1
    ab6c:	str	x0, [x19]
    ab70:	ldr	w2, [x21, #80]
    ab74:	add	x1, x19, #0x18
    ab78:	add	x0, sp, #0x38
    ab7c:	bl	25e90 <PyInit__decimal@@Base+0x9c50>
    ab80:	mov	x21, x0
    ab84:	ldr	x1, [x19]
    ab88:	sub	x0, x1, #0x1
    ab8c:	str	x0, [x19]
    ab90:	cbz	x0, ac00 <PyFloat_FromString@plt+0x4170>
    ab94:	tbnz	x21, #63, ac2c <PyFloat_FromString@plt+0x419c>
    ab98:	mov	x0, x21
    ab9c:	mov	w1, #0x7f                  	// #127
    aba0:	ldr	x19, [sp, #56]
    aba4:	bl	6a50 <PyUnicode_New@plt>
    aba8:	mov	x20, x0
    abac:	cbz	x0, abc8 <PyFloat_FromString@plt+0x4138>
    abb0:	ldrb	w0, [x0, #32]
    abb4:	tbnz	w0, #5, abec <PyFloat_FromString@plt+0x415c>
    abb8:	ldr	x0, [x20, #72]
    abbc:	mov	x2, x21
    abc0:	mov	x1, x19
    abc4:	bl	6470 <memcpy@plt>
    abc8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    abcc:	ldr	x0, [sp, #56]
    abd0:	ldr	x1, [x1, #1912]
    abd4:	blr	x1
    abd8:	mov	x0, x20
    abdc:	ldp	x19, x20, [sp, #16]
    abe0:	ldr	x21, [sp, #32]
    abe4:	ldp	x29, x30, [sp], #64
    abe8:	ret
    abec:	tst	x0, #0x40
    abf0:	add	x1, x20, #0x48
    abf4:	add	x0, x20, #0x30
    abf8:	csel	x0, x1, x0, eq  // eq = none
    abfc:	b	abbc <PyFloat_FromString@plt+0x412c>
    ac00:	mov	x0, x19
    ac04:	bl	65d0 <_Py_Dealloc@plt>
    ac08:	b	ab94 <PyFloat_FromString@plt+0x4104>
    ac0c:	mov	x1, x19
    ac10:	mov	x0, x20
    ac14:	mov	x2, x21
    ac18:	mov	x20, #0x0                   	// #0
    ac1c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    ac20:	mov	x19, x0
    ac24:	cbnz	x0, ab70 <PyFloat_FromString@plt+0x40e0>
    ac28:	b	abd8 <PyFloat_FromString@plt+0x4148>
    ac2c:	mov	x20, #0x0                   	// #0
    ac30:	bl	65e0 <PyErr_NoMemory@plt>
    ac34:	b	abd8 <PyFloat_FromString@plt+0x4148>
    ac38:	stp	x29, x30, [sp, #-64]!
    ac3c:	mov	x29, sp
    ac40:	str	x21, [sp, #32]
    ac44:	mov	x21, x0
    ac48:	ldr	x0, [x1, #8]
    ac4c:	stp	x19, x20, [sp, #16]
    ac50:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    ac54:	add	x20, x20, #0x328
    ac58:	mov	x19, x1
    ac5c:	add	x20, x20, #0x1a0
    ac60:	cmp	x0, x20
    ac64:	b.eq	acb4 <PyFloat_FromString@plt+0x4224>  // b.none
    ac68:	mov	x1, x20
    ac6c:	bl	69c0 <PyType_IsSubtype@plt>
    ac70:	cbnz	w0, acb4 <PyFloat_FromString@plt+0x4224>
    ac74:	ldr	x2, [x19, #8]
    ac78:	ldr	x0, [x2, #168]
    ac7c:	tbnz	w0, #24, ad5c <PyFloat_FromString@plt+0x42cc>
    ac80:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    ac84:	mov	x20, #0x0                   	// #0
    ac88:	ldr	x2, [x2, #24]
    ac8c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    ac90:	ldr	x0, [x0, #3936]
    ac94:	add	x1, x1, #0xb70
    ac98:	ldr	x0, [x0]
    ac9c:	bl	6a10 <PyErr_Format@plt>
    aca0:	mov	x0, x20
    aca4:	ldp	x19, x20, [sp, #16]
    aca8:	ldr	x21, [sp, #32]
    acac:	ldp	x29, x30, [sp], #64
    acb0:	ret
    acb4:	ldr	x0, [x19]
    acb8:	add	x0, x0, #0x1
    acbc:	str	x0, [x19]
    acc0:	ldr	w2, [x21, #80]
    acc4:	add	x1, x19, #0x18
    acc8:	add	x0, sp, #0x38
    accc:	bl	25e78 <PyInit__decimal@@Base+0x9c38>
    acd0:	mov	x21, x0
    acd4:	ldr	x1, [x19]
    acd8:	sub	x0, x1, #0x1
    acdc:	str	x0, [x19]
    ace0:	cbz	x0, ad50 <PyFloat_FromString@plt+0x42c0>
    ace4:	tbnz	x21, #63, ad7c <PyFloat_FromString@plt+0x42ec>
    ace8:	mov	x0, x21
    acec:	mov	w1, #0x7f                  	// #127
    acf0:	ldr	x19, [sp, #56]
    acf4:	bl	6a50 <PyUnicode_New@plt>
    acf8:	mov	x20, x0
    acfc:	cbz	x0, ad18 <PyFloat_FromString@plt+0x4288>
    ad00:	ldrb	w0, [x0, #32]
    ad04:	tbnz	w0, #5, ad3c <PyFloat_FromString@plt+0x42ac>
    ad08:	ldr	x0, [x20, #72]
    ad0c:	mov	x2, x21
    ad10:	mov	x1, x19
    ad14:	bl	6470 <memcpy@plt>
    ad18:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    ad1c:	ldr	x0, [sp, #56]
    ad20:	ldr	x1, [x1, #1912]
    ad24:	blr	x1
    ad28:	mov	x0, x20
    ad2c:	ldp	x19, x20, [sp, #16]
    ad30:	ldr	x21, [sp, #32]
    ad34:	ldp	x29, x30, [sp], #64
    ad38:	ret
    ad3c:	tst	x0, #0x40
    ad40:	add	x1, x20, #0x48
    ad44:	add	x0, x20, #0x30
    ad48:	csel	x0, x1, x0, eq  // eq = none
    ad4c:	b	ad0c <PyFloat_FromString@plt+0x427c>
    ad50:	mov	x0, x19
    ad54:	bl	65d0 <_Py_Dealloc@plt>
    ad58:	b	ace4 <PyFloat_FromString@plt+0x4254>
    ad5c:	mov	x1, x19
    ad60:	mov	x0, x20
    ad64:	mov	x2, x21
    ad68:	mov	x20, #0x0                   	// #0
    ad6c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    ad70:	mov	x19, x0
    ad74:	cbnz	x0, acc0 <PyFloat_FromString@plt+0x4230>
    ad78:	b	ad28 <PyFloat_FromString@plt+0x4298>
    ad7c:	mov	x20, #0x0                   	// #0
    ad80:	bl	65e0 <PyErr_NoMemory@plt>
    ad84:	b	ad28 <PyFloat_FromString@plt+0x4298>
    ad88:	stp	x29, x30, [sp, #-32]!
    ad8c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    ad90:	add	x0, x0, #0x328
    ad94:	mov	x29, sp
    ad98:	add	x0, x0, #0x1a0
    ad9c:	stp	x19, x20, [sp, #16]
    ada0:	bl	6950 <_PyObject_New@plt>
    ada4:	mov	x19, x0
    ada8:	cbz	x0, adf4 <PyFloat_FromString@plt+0x4364>
    adac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    adb0:	add	x1, x19, #0x48
    adb4:	mov	x3, #0xffffffffffffffff    	// #-1
    adb8:	mov	x2, #0xa                   	// #10
    adbc:	ldr	q0, [x0, #2144]
    adc0:	mov	w0, #0x30                  	// #48
    adc4:	str	x3, [x19, #16]
    adc8:	add	x20, x19, #0x18
    adcc:	strb	w0, [x19, #24]
    add0:	mov	x0, x20
    add4:	stp	xzr, xzr, [x19, #32]
    add8:	stp	x1, x2, [x19, #64]
    addc:	mov	w1, #0x0                   	// #0
    ade0:	str	q0, [x19, #48]
    ade4:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
    ade8:	mov	x0, x20
    adec:	str	xzr, [x19, #32]
    adf0:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
    adf4:	mov	x0, x19
    adf8:	ldp	x19, x20, [sp, #16]
    adfc:	ldp	x29, x30, [sp], #32
    ae00:	ret
    ae04:	nop
    ae08:	stp	x29, x30, [sp, #-304]!
    ae0c:	mov	x29, sp
    ae10:	stp	x19, x20, [sp, #16]
    ae14:	ldr	x20, [x0, #16]
    ae18:	cmn	x20, #0x1
    ae1c:	b.eq	ae30 <PyFloat_FromString@plt+0x43a0>  // b.none
    ae20:	mov	x0, x20
    ae24:	ldp	x19, x20, [sp, #16]
    ae28:	ldp	x29, x30, [sp], #304
    ae2c:	ret
    ae30:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
    ae34:	mov	x19, x0
    ae38:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    ae3c:	add	x6, sp, #0x58
    ae40:	ldr	q1, [x1, #2160]
    ae44:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
    ae48:	ldr	x0, [x0, #2056]
    ae4c:	add	x5, sp, #0x60
    ae50:	ldr	q0, [x1, #2176]
    ae54:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
    ae58:	add	x3, sp, #0x68
    ae5c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
    ae60:	ldr	q2, [x1, #2192]
    ae64:	mov	w4, #0xffffff90            	// #-112
    ae68:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
    ae6c:	movk	x8, #0x1ccc, lsl #48
    ae70:	mov	x7, #0xa                   	// #10
    ae74:	stp	x21, x22, [sp, #32]
    ae78:	add	x21, sp, #0x100
    ae7c:	mov	x2, x21
    ae80:	mov	x1, #0x0                   	// #0
    ae84:	str	wzr, [sp, #84]
    ae88:	stp	x9, x8, [sp, #88]
    ae8c:	str	x7, [sp, #104]
    ae90:	strb	w4, [sp, #112]
    ae94:	stur	q1, [sp, #120]
    ae98:	stur	q0, [sp, #136]
    ae9c:	str	x6, [sp, #152]
    aea0:	strb	w4, [sp, #160]
    aea4:	stur	q1, [sp, #168]
    aea8:	stur	q0, [sp, #184]
    aeac:	str	x5, [sp, #200]
    aeb0:	strb	w4, [sp, #208]
    aeb4:	stur	q2, [sp, #216]
    aeb8:	stur	q0, [sp, #232]
    aebc:	str	x3, [sp, #248]
    aec0:	bl	6740 <PyContextVar_Get@plt>
    aec4:	tbnz	w0, #31, af0c <PyFloat_FromString@plt+0x447c>
    aec8:	ldr	x0, [sp, #256]
    aecc:	cbz	x0, b06c <PyFloat_FromString@plt+0x45dc>
    aed0:	ldr	x1, [x0]
    aed4:	sub	x1, x1, #0x1
    aed8:	str	x1, [x0]
    aedc:	cbz	x1, b064 <PyFloat_FromString@plt+0x45d4>
    aee0:	add	x22, x19, #0x18
    aee4:	mov	x0, x22
    aee8:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
    aeec:	cbz	w0, af24 <PyFloat_FromString@plt+0x4494>
    aef0:	mov	x0, x22
    aef4:	bl	2a8b8 <PyInit__decimal@@Base+0xe678>
    aef8:	cbnz	w0, b0f4 <PyFloat_FromString@plt+0x4664>
    aefc:	mov	x0, x22
    af00:	mov	x20, #0x0                   	// #0
    af04:	bl	2a868 <PyInit__decimal@@Base+0xe628>
    af08:	cbz	w0, b078 <PyFloat_FromString@plt+0x45e8>
    af0c:	ldp	x21, x22, [sp, #32]
    af10:	str	x20, [x19, #16]
    af14:	mov	x0, x20
    af18:	ldp	x19, x20, [sp, #16]
    af1c:	ldp	x29, x30, [sp], #304
    af20:	ret
    af24:	mov	x0, x21
    af28:	stp	x23, x24, [sp, #48]
    af2c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
    af30:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
    af34:	mov	x24, x0
    af38:	cbz	x0, b0cc <PyFloat_FromString@plt+0x463c>
    af3c:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
    af40:	mov	x23, x0
    af44:	cbz	x0, b0e0 <PyFloat_FromString@plt+0x4650>
    af48:	ldr	x1, [x19, #32]
    af4c:	stp	x25, x26, [sp, #64]
    af50:	add	x25, sp, #0x54
    af54:	tbnz	x1, #63, b090 <PyFloat_FromString@plt+0x4600>
    af58:	mov	x3, x25
    af5c:	mov	x2, x21
    af60:	add	x26, sp, #0x70
    af64:	bl	30368 <PyInit__decimal@@Base+0x14128>
    af68:	mov	x5, x25
    af6c:	mov	x3, x26
    af70:	mov	x4, x21
    af74:	mov	x2, x23
    af78:	add	x1, sp, #0xd0
    af7c:	mov	x0, x24
    af80:	bl	3bd00 <PyInit__decimal@@Base+0x1fac0>
    af84:	mov	x2, x25
    af88:	mov	x1, x22
    af8c:	mov	x0, x23
    af90:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
    af94:	cbz	w0, b0c4 <PyFloat_FromString@plt+0x4634>
    af98:	str	xzr, [x23, #8]
    af9c:	mov	x0, x23
    afa0:	bl	2b250 <PyInit__decimal@@Base+0xf010>
    afa4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    afa8:	mov	x5, #0xffec                	// #65516
    afac:	movk	x5, #0x589b, lsl #16
    afb0:	mov	x3, x21
    afb4:	ldr	q0, [x0, #2208]
    afb8:	movk	x5, #0x494c, lsl #32
    afbc:	movk	x5, #0xf21f, lsl #48
    afc0:	mov	x4, x25
    afc4:	mov	x2, x24
    afc8:	mov	x1, x23
    afcc:	mov	x0, x23
    afd0:	str	q0, [sp, #256]
    afd4:	str	x5, [sp, #272]
    afd8:	bl	38c18 <PyInit__decimal@@Base+0x1c9d8>
    afdc:	mov	x3, x21
    afe0:	mov	x4, x25
    afe4:	mov	x2, x26
    afe8:	mov	x1, x23
    afec:	mov	x0, x23
    aff0:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
    aff4:	mov	x1, x25
    aff8:	mov	x0, x23
    affc:	bl	2bfd8 <PyInit__decimal@@Base+0xfd98>
    b000:	mov	x21, x0
    b004:	mov	x0, x22
    b008:	bl	2a888 <PyInit__decimal@@Base+0xe648>
    b00c:	cmp	w0, #0x0
    b010:	ldr	w1, [sp, #84]
    b014:	cneg	x21, x21, eq  // eq = none
    b018:	cmn	x21, #0x1
    b01c:	mov	x0, #0xfffffffffffffffe    	// #-2
    b020:	csel	x21, x21, x0, ne  // ne = any
    b024:	cbz	w1, b0d8 <PyFloat_FromString@plt+0x4648>
    b028:	tbnz	w1, #9, b0c4 <PyFloat_FromString@plt+0x4634>
    b02c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b030:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b034:	add	x1, x1, #0xbf8
    b038:	ldr	x0, [x0, #3920]
    b03c:	ldr	x0, [x0]
    b040:	bl	6650 <PyErr_SetString@plt>
    b044:	nop
    b048:	mov	x0, x24
    b04c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    b050:	mov	x0, x23
    b054:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    b058:	ldp	x23, x24, [sp, #48]
    b05c:	ldp	x25, x26, [sp, #64]
    b060:	b	af0c <PyFloat_FromString@plt+0x447c>
    b064:	bl	65d0 <_Py_Dealloc@plt>
    b068:	b	aee0 <PyFloat_FromString@plt+0x4450>
    b06c:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    b070:	cbnz	x0, aed0 <PyFloat_FromString@plt+0x4440>
    b074:	b	af0c <PyFloat_FromString@plt+0x447c>
    b078:	mov	x0, x22
    b07c:	bl	2a9f0 <PyInit__decimal@@Base+0xe7b0>
    b080:	mov	w1, #0xcb2f                	// #52015
    b084:	movk	w1, #0x4, lsl #16
    b088:	smull	x20, w0, w1
    b08c:	b	af0c <PyFloat_FromString@plt+0x447c>
    b090:	mov	x3, x25
    b094:	mov	x2, x21
    b098:	neg	x1, x1
    b09c:	add	x26, sp, #0x70
    b0a0:	bl	30368 <PyInit__decimal@@Base+0x14128>
    b0a4:	mov	x5, x25
    b0a8:	mov	x3, x26
    b0ac:	mov	x4, x21
    b0b0:	mov	x2, x23
    b0b4:	add	x1, sp, #0xa0
    b0b8:	mov	x0, x24
    b0bc:	bl	3bd00 <PyInit__decimal@@Base+0x1fac0>
    b0c0:	b	af84 <PyFloat_FromString@plt+0x44f4>
    b0c4:	bl	65e0 <PyErr_NoMemory@plt>
    b0c8:	b	b048 <PyFloat_FromString@plt+0x45b8>
    b0cc:	bl	65e0 <PyErr_NoMemory@plt>
    b0d0:	ldp	x23, x24, [sp, #48]
    b0d4:	b	af0c <PyFloat_FromString@plt+0x447c>
    b0d8:	mov	x20, x21
    b0dc:	b	b048 <PyFloat_FromString@plt+0x45b8>
    b0e0:	bl	65e0 <PyErr_NoMemory@plt>
    b0e4:	mov	x0, x24
    b0e8:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    b0ec:	ldp	x23, x24, [sp, #48]
    b0f0:	b	af0c <PyFloat_FromString@plt+0x447c>
    b0f4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b0f8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b0fc:	add	x1, x1, #0xbd0
    b100:	ldr	x0, [x0, #3936]
    b104:	ldr	x0, [x0]
    b108:	bl	6650 <PyErr_SetString@plt>
    b10c:	b	af0c <PyFloat_FromString@plt+0x447c>
    b110:	stp	x29, x30, [sp, #-32]!
    b114:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    b118:	add	x0, x0, #0x328
    b11c:	mov	x29, sp
    b120:	add	x0, x0, #0x1a0
    b124:	stp	x19, x20, [sp, #16]
    b128:	bl	6950 <_PyObject_New@plt>
    b12c:	mov	x19, x0
    b130:	cbz	x0, b178 <PyFloat_FromString@plt+0x46e8>
    b134:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    b138:	mov	x2, #0xffffffffffffffff    	// #-1
    b13c:	mov	w1, #0x30                  	// #48
    b140:	str	x2, [x19, #16]
    b144:	ldr	q0, [x0, #2144]
    b148:	add	x0, x19, #0x48
    b14c:	strb	w1, [x19, #24]
    b150:	add	x20, x19, #0x18
    b154:	stp	xzr, xzr, [x19, #32]
    b158:	mov	w1, #0x0                   	// #0
    b15c:	stp	x0, xzr, [x19, #64]
    b160:	mov	x0, x20
    b164:	str	q0, [x19, #48]
    b168:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
    b16c:	mov	x0, x20
    b170:	str	xzr, [x19, #32]
    b174:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
    b178:	mov	x0, x19
    b17c:	ldp	x19, x20, [sp, #16]
    b180:	ldp	x29, x30, [sp], #32
    b184:	ret
    b188:	stp	x29, x30, [sp, #-48]!
    b18c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    b190:	add	x0, x0, #0x328
    b194:	mov	x29, sp
    b198:	add	x0, x0, #0x1a0
    b19c:	stp	x19, x20, [sp, #16]
    b1a0:	bl	6950 <_PyObject_New@plt>
    b1a4:	str	x0, [sp, #40]
    b1a8:	mov	x19, x0
    b1ac:	cbz	x0, b1f8 <PyFloat_FromString@plt+0x4768>
    b1b0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    b1b4:	add	x1, x19, #0x48
    b1b8:	mov	x3, #0xffffffffffffffff    	// #-1
    b1bc:	mov	x2, #0xa                   	// #10
    b1c0:	ldr	q0, [x0, #2144]
    b1c4:	mov	w0, #0x30                  	// #48
    b1c8:	str	x3, [x19, #16]
    b1cc:	add	x20, x19, #0x18
    b1d0:	strb	w0, [x19, #24]
    b1d4:	mov	x0, x20
    b1d8:	stp	xzr, xzr, [x19, #32]
    b1dc:	stp	x1, x2, [x19, #64]
    b1e0:	mov	w1, #0x0                   	// #0
    b1e4:	str	q0, [x19, #48]
    b1e8:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
    b1ec:	mov	x0, x20
    b1f0:	str	xzr, [x19, #32]
    b1f4:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
    b1f8:	mov	x0, x19
    b1fc:	ldp	x19, x20, [sp, #16]
    b200:	ldp	x29, x30, [sp], #48
    b204:	ret
    b208:	sub	sp, sp, #0xb0
    b20c:	add	x3, sp, #0xa8
    b210:	add	x4, sp, #0xa0
    b214:	add	x5, sp, #0x98
    b218:	add	x6, sp, #0x90
    b21c:	stp	x29, x30, [sp, #32]
    b220:	add	x29, sp, #0x20
    b224:	add	x7, sp, #0x88
    b228:	stp	x19, x20, [sp, #48]
    b22c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    b230:	stp	x6, x5, [sp]
    b234:	add	x6, sp, #0x80
    b238:	add	x5, sp, #0x78
    b23c:	stp	x4, x3, [sp, #16]
    b240:	add	x4, sp, #0x70
    b244:	ldr	x20, [x19, #4008]
    b248:	stp	x23, x24, [sp, #80]
    b24c:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
    b250:	add	x3, x23, #0x9b0
    b254:	stp	x21, x22, [sp, #64]
    b258:	add	x3, x3, #0x290
    b25c:	mov	x21, x0
    b260:	mov	x0, x1
    b264:	mov	x1, x2
    b268:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    b26c:	add	x2, x2, #0xc20
    b270:	stp	x20, x20, [sp, #112]
    b274:	stp	x20, x20, [sp, #128]
    b278:	stp	x20, x20, [sp, #144]
    b27c:	stp	x20, x20, [sp, #160]
    b280:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    b284:	cbz	w0, b6b4 <PyFloat_FromString@plt+0x4c24>
    b288:	ldr	x0, [sp, #112]
    b28c:	cmp	x0, x20
    b290:	b.eq	b2b4 <PyFloat_FromString@plt+0x4824>  // b.none
    b294:	bl	66f0 <PyLong_AsSsize_t@plt>
    b298:	mov	x20, x0
    b29c:	cmn	x0, #0x1
    b2a0:	b.eq	b6dc <PyFloat_FromString@plt+0x4c4c>  // b.none
    b2a4:	mov	x1, x20
    b2a8:	add	x0, x21, #0x10
    b2ac:	bl	1f730 <PyInit__decimal@@Base+0x34f0>
    b2b0:	cbz	w0, b85c <PyFloat_FromString@plt+0x4dcc>
    b2b4:	ldr	x0, [x19, #4008]
    b2b8:	ldr	x20, [sp, #120]
    b2bc:	cmp	x20, x0
    b2c0:	b.eq	b3c4 <PyFloat_FromString@plt+0x4934>  // b.none
    b2c4:	ldr	x0, [x20, #8]
    b2c8:	ldr	x0, [x0, #168]
    b2cc:	tbz	w0, #28, b374 <PyFloat_FromString@plt+0x48e4>
    b2d0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    b2d4:	add	x2, x1, #0x7a0
    b2d8:	add	x0, x2, #0x10
    b2dc:	stp	x25, x26, [sp, #96]
    b2e0:	ldr	x2, [x2, #16]
    b2e4:	cmp	x20, x2
    b2e8:	b.eq	b770 <PyFloat_FromString@plt+0x4ce0>  // b.none
    b2ec:	ldr	x2, [x0, #8]
    b2f0:	cmp	x20, x2
    b2f4:	b.eq	b7b8 <PyFloat_FromString@plt+0x4d28>  // b.none
    b2f8:	ldr	x2, [x0, #16]
    b2fc:	cmp	x20, x2
    b300:	b.eq	b7c0 <PyFloat_FromString@plt+0x4d30>  // b.none
    b304:	ldr	x2, [x0, #24]
    b308:	cmp	x20, x2
    b30c:	b.eq	b7c8 <PyFloat_FromString@plt+0x4d38>  // b.none
    b310:	ldr	x2, [x0, #32]
    b314:	cmp	x20, x2
    b318:	b.eq	b3a8 <PyFloat_FromString@plt+0x4918>  // b.none
    b31c:	ldr	x2, [x0, #40]
    b320:	cmp	x20, x2
    b324:	b.eq	b7d0 <PyFloat_FromString@plt+0x4d40>  // b.none
    b328:	ldr	x2, [x0, #48]
    b32c:	cmp	x20, x2
    b330:	b.eq	b7d8 <PyFloat_FromString@plt+0x4d48>  // b.none
    b334:	ldr	x0, [x0, #56]
    b338:	cmp	x20, x0
    b33c:	b.eq	b7e0 <PyFloat_FromString@plt+0x4d50>  // b.none
    b340:	add	x1, x1, #0x7a0
    b344:	mov	x22, #0x0                   	// #0
    b348:	add	x24, x1, #0x10
    b34c:	nop
    b350:	ldr	x1, [x24, x22, lsl #3]
    b354:	mov	w25, w22
    b358:	mov	x0, x20
    b35c:	add	x22, x22, #0x1
    b360:	bl	6900 <PyUnicode_Compare@plt>
    b364:	cbz	w0, b3b0 <PyFloat_FromString@plt+0x4920>
    b368:	cmp	x22, #0x8
    b36c:	b.ne	b350 <PyFloat_FromString@plt+0x48c0>  // b.any
    b370:	ldp	x25, x26, [sp, #96]
    b374:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b378:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b37c:	add	x1, x1, #0xa40
    b380:	ldr	x0, [x0, #3936]
    b384:	ldr	x0, [x0]
    b388:	bl	6650 <PyErr_SetString@plt>
    b38c:	mov	w0, #0xffffffff            	// #-1
    b390:	ldp	x29, x30, [sp, #32]
    b394:	ldp	x19, x20, [sp, #48]
    b398:	ldp	x21, x22, [sp, #64]
    b39c:	ldp	x23, x24, [sp, #80]
    b3a0:	add	sp, sp, #0xb0
    b3a4:	ret
    b3a8:	mov	w25, #0x4                   	// #4
    b3ac:	nop
    b3b0:	mov	w1, w25
    b3b4:	add	x0, x21, #0x10
    b3b8:	bl	1f7c0 <PyInit__decimal@@Base+0x3580>
    b3bc:	cbz	w0, b818 <PyFloat_FromString@plt+0x4d88>
    b3c0:	ldp	x25, x26, [sp, #96]
    b3c4:	ldr	x1, [x19, #4008]
    b3c8:	ldr	x0, [sp, #128]
    b3cc:	cmp	x0, x1
    b3d0:	b.eq	b3f4 <PyFloat_FromString@plt+0x4964>  // b.none
    b3d4:	bl	66f0 <PyLong_AsSsize_t@plt>
    b3d8:	mov	x20, x0
    b3dc:	cmn	x0, #0x1
    b3e0:	b.eq	b6ec <PyFloat_FromString@plt+0x4c5c>  // b.none
    b3e4:	mov	x1, x20
    b3e8:	add	x0, x21, #0x10
    b3ec:	bl	1f790 <PyInit__decimal@@Base+0x3550>
    b3f0:	cbz	w0, b83c <PyFloat_FromString@plt+0x4dac>
    b3f4:	ldr	x1, [x19, #4008]
    b3f8:	ldr	x0, [sp, #136]
    b3fc:	cmp	x0, x1
    b400:	b.eq	b424 <PyFloat_FromString@plt+0x4994>  // b.none
    b404:	bl	66f0 <PyLong_AsSsize_t@plt>
    b408:	mov	x20, x0
    b40c:	cmn	x0, #0x1
    b410:	b.eq	b6fc <PyFloat_FromString@plt+0x4c6c>  // b.none
    b414:	mov	x1, x20
    b418:	add	x0, x21, #0x10
    b41c:	bl	1f760 <PyInit__decimal@@Base+0x3520>
    b420:	cbz	w0, b7f8 <PyFloat_FromString@plt+0x4d68>
    b424:	ldr	x1, [x19, #4008]
    b428:	ldr	x0, [sp, #144]
    b42c:	cmp	x0, x1
    b430:	b.eq	b44c <PyFloat_FromString@plt+0x49bc>  // b.none
    b434:	bl	66f0 <PyLong_AsSsize_t@plt>
    b438:	cmn	x0, #0x1
    b43c:	b.eq	b724 <PyFloat_FromString@plt+0x4c94>  // b.none
    b440:	cmp	x0, #0x1
    b444:	b.hi	b72c <PyFloat_FromString@plt+0x4c9c>  // b.pmore
    b448:	str	w0, [x21, #80]
    b44c:	ldr	x1, [x19, #4008]
    b450:	ldr	x0, [sp, #152]
    b454:	cmp	x0, x1
    b458:	b.eq	b490 <PyFloat_FromString@plt+0x4a00>  // b.none
    b45c:	bl	66f0 <PyLong_AsSsize_t@plt>
    b460:	mov	x20, x0
    b464:	cmn	x0, #0x1
    b468:	b.eq	b760 <PyFloat_FromString@plt+0x4cd0>  // b.none
    b46c:	mov	x0, #0x80000000            	// #2147483648
    b470:	add	x0, x20, x0
    b474:	mov	x1, #0xffffffff            	// #4294967295
    b478:	cmp	x0, x1
    b47c:	mov	w1, #0x7fffffff            	// #2147483647
    b480:	csel	w1, w20, w1, ls  // ls = plast
    b484:	add	x0, x21, #0x10
    b488:	bl	1f830 <PyInit__decimal@@Base+0x35f0>
    b48c:	cbz	w0, b778 <PyFloat_FromString@plt+0x4ce8>
    b490:	ldr	x0, [x19, #4008]
    b494:	ldr	x22, [sp, #168]
    b498:	cmp	x22, x0
    b49c:	b.eq	b538 <PyFloat_FromString@plt+0x4aa8>  // b.none
    b4a0:	ldr	x0, [x22, #8]
    b4a4:	ldr	x1, [x0, #168]
    b4a8:	tbz	w1, #25, b5f8 <PyFloat_FromString@plt+0x4b68>
    b4ac:	mov	x0, x22
    b4b0:	stp	x25, x26, [sp, #96]
    b4b4:	bl	6910 <PyList_Size@plt>
    b4b8:	mov	x24, x0
    b4bc:	cmp	x0, #0x0
    b4c0:	b.le	b7e8 <PyFloat_FromString@plt+0x4d58>
    b4c4:	add	x26, x23, #0x9b0
    b4c8:	mov	w25, #0x0                   	// #0
    b4cc:	mov	x20, #0x0                   	// #0
    b4d0:	mov	x1, x20
    b4d4:	mov	x0, x22
    b4d8:	bl	6a30 <PyList_GetItem@plt>
    b4dc:	ldr	x1, [x26]
    b4e0:	cbz	x1, b698 <PyFloat_FromString@plt+0x4c08>
    b4e4:	mov	x2, x26
    b4e8:	b	b4f4 <PyFloat_FromString@plt+0x4a64>
    b4ec:	ldr	x1, [x2, #32]!
    b4f0:	cbz	x1, b698 <PyFloat_FromString@plt+0x4c08>
    b4f4:	ldr	x1, [x2, #24]
    b4f8:	cmp	x0, x1
    b4fc:	b.ne	b4ec <PyFloat_FromString@plt+0x4a5c>  // b.any
    b500:	ldr	w1, [x2, #16]
    b504:	tst	w1, #0x18000
    b508:	b.ne	b88c <PyFloat_FromString@plt+0x4dfc>  // b.any
    b50c:	add	x20, x20, #0x1
    b510:	orr	w25, w25, w1
    b514:	cmp	x24, x20
    b518:	b.ne	b4d0 <PyFloat_FromString@plt+0x4a40>  // b.any
    b51c:	tst	w25, #0x18000
    b520:	b.ne	b88c <PyFloat_FromString@plt+0x4dfc>  // b.any
    b524:	mov	w1, w25
    b528:	add	x0, x21, #0x10
    b52c:	bl	1f7e0 <PyInit__decimal@@Base+0x35a0>
    b530:	cbz	w0, b87c <PyFloat_FromString@plt+0x4dec>
    b534:	ldp	x25, x26, [sp, #96]
    b538:	ldr	x19, [x19, #4008]
    b53c:	ldr	x20, [sp, #160]
    b540:	cmp	x20, x19
    b544:	b.eq	b5dc <PyFloat_FromString@plt+0x4b4c>  // b.none
    b548:	ldr	x0, [x20, #8]
    b54c:	ldr	x1, [x0, #168]
    b550:	tbz	w1, #25, b648 <PyFloat_FromString@plt+0x4bb8>
    b554:	mov	x0, x20
    b558:	bl	6910 <PyList_Size@plt>
    b55c:	mov	x24, x0
    b560:	cmp	x0, #0x0
    b564:	b.le	b7f0 <PyFloat_FromString@plt+0x4d60>
    b568:	add	x23, x23, #0x9b0
    b56c:	mov	w22, #0x0                   	// #0
    b570:	mov	x19, #0x0                   	// #0
    b574:	nop
    b578:	mov	x1, x19
    b57c:	mov	x0, x20
    b580:	bl	6a30 <PyList_GetItem@plt>
    b584:	ldr	x1, [x23]
    b588:	cbz	x1, b6bc <PyFloat_FromString@plt+0x4c2c>
    b58c:	mov	x2, x23
    b590:	b	b59c <PyFloat_FromString@plt+0x4b0c>
    b594:	ldr	x1, [x2, #32]!
    b598:	cbz	x1, b6bc <PyFloat_FromString@plt+0x4c2c>
    b59c:	ldr	x1, [x2, #24]
    b5a0:	cmp	x0, x1
    b5a4:	b.ne	b594 <PyFloat_FromString@plt+0x4b04>  // b.any
    b5a8:	ldr	w1, [x2, #16]
    b5ac:	tst	w1, #0x18000
    b5b0:	b.ne	b6b4 <PyFloat_FromString@plt+0x4c24>  // b.any
    b5b4:	add	x19, x19, #0x1
    b5b8:	orr	w22, w22, w1
    b5bc:	cmp	x24, x19
    b5c0:	b.ne	b578 <PyFloat_FromString@plt+0x4ae8>  // b.any
    b5c4:	tst	w22, #0x18000
    b5c8:	b.ne	b6b4 <PyFloat_FromString@plt+0x4c24>  // b.any
    b5cc:	mov	w1, w22
    b5d0:	add	x0, x21, #0x10
    b5d4:	bl	1f808 <PyInit__decimal@@Base+0x35c8>
    b5d8:	cbz	w0, b798 <PyFloat_FromString@plt+0x4d08>
    b5dc:	mov	w0, #0x0                   	// #0
    b5e0:	ldp	x29, x30, [sp, #32]
    b5e4:	ldp	x19, x20, [sp, #48]
    b5e8:	ldp	x21, x22, [sp, #64]
    b5ec:	ldp	x23, x24, [sp, #80]
    b5f0:	add	sp, sp, #0xb0
    b5f4:	ret
    b5f8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    b5fc:	ldr	x1, [x1, #2040]
    b600:	cmp	x0, x1
    b604:	b.eq	b70c <PyFloat_FromString@plt+0x4c7c>  // b.none
    b608:	mov	x0, x22
    b60c:	bl	7ad8 <PyFloat_FromString@plt+0x1048>
    b610:	mov	w1, w0
    b614:	tst	w0, #0x18000
    b618:	b.ne	b6b4 <PyFloat_FromString@plt+0x4c24>  // b.any
    b61c:	add	x0, x21, #0x10
    b620:	bl	1f7e0 <PyInit__decimal@@Base+0x35a0>
    b624:	cbnz	w0, b538 <PyFloat_FromString@plt+0x4aa8>
    b628:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b62c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b630:	add	x1, x1, #0x898
    b634:	ldr	x0, [x0, #3920]
    b638:	ldr	x0, [x0]
    b63c:	bl	6650 <PyErr_SetString@plt>
    b640:	mov	w0, #0xffffffff            	// #-1
    b644:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b648:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    b64c:	ldr	x1, [x1, #2040]
    b650:	cmp	x0, x1
    b654:	b.eq	b718 <PyFloat_FromString@plt+0x4c88>  // b.none
    b658:	mov	x0, x20
    b65c:	bl	7ad8 <PyFloat_FromString@plt+0x1048>
    b660:	mov	w1, w0
    b664:	tst	w0, #0x18000
    b668:	b.ne	b6b4 <PyFloat_FromString@plt+0x4c24>  // b.any
    b66c:	add	x0, x21, #0x10
    b670:	bl	1f808 <PyInit__decimal@@Base+0x35c8>
    b674:	cbnz	w0, b5dc <PyFloat_FromString@plt+0x4b4c>
    b678:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b67c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b680:	add	x1, x1, #0x8c0
    b684:	ldr	x0, [x0, #3920]
    b688:	ldr	x0, [x0]
    b68c:	bl	6650 <PyErr_SetString@plt>
    b690:	mov	w0, #0xffffffff            	// #-1
    b694:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b698:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b69c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b6a0:	add	x1, x1, #0x700
    b6a4:	ldr	x0, [x0, #3968]
    b6a8:	ldr	x0, [x0]
    b6ac:	bl	6650 <PyErr_SetString@plt>
    b6b0:	ldp	x25, x26, [sp, #96]
    b6b4:	mov	w0, #0xffffffff            	// #-1
    b6b8:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b6bc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b6c0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b6c4:	add	x1, x1, #0x700
    b6c8:	ldr	x0, [x0, #3968]
    b6cc:	ldr	x0, [x0]
    b6d0:	bl	6650 <PyErr_SetString@plt>
    b6d4:	mov	w0, #0xffffffff            	// #-1
    b6d8:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b6dc:	bl	67e0 <PyErr_Occurred@plt>
    b6e0:	cbz	x0, b2a4 <PyFloat_FromString@plt+0x4814>
    b6e4:	mov	w0, #0xffffffff            	// #-1
    b6e8:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b6ec:	bl	67e0 <PyErr_Occurred@plt>
    b6f0:	cbz	x0, b3e4 <PyFloat_FromString@plt+0x4954>
    b6f4:	mov	w0, #0xffffffff            	// #-1
    b6f8:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b6fc:	bl	67e0 <PyErr_Occurred@plt>
    b700:	cbz	x0, b414 <PyFloat_FromString@plt+0x4984>
    b704:	mov	w0, #0xffffffff            	// #-1
    b708:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b70c:	ldr	x0, [x22, #16]
    b710:	ldr	w1, [x0]
    b714:	b	b61c <PyFloat_FromString@plt+0x4b8c>
    b718:	ldr	x0, [x20, #16]
    b71c:	ldr	w1, [x0]
    b720:	b	b66c <PyFloat_FromString@plt+0x4bdc>
    b724:	bl	67e0 <PyErr_Occurred@plt>
    b728:	cbnz	x0, b6b4 <PyFloat_FromString@plt+0x4c24>
    b72c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b730:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b734:	add	x1, x1, #0x798
    b738:	ldr	x0, [x0, #3928]
    b73c:	ldr	x0, [x0]
    b740:	bl	6650 <PyErr_SetString@plt>
    b744:	mov	w0, #0xffffffff            	// #-1
    b748:	ldp	x29, x30, [sp, #32]
    b74c:	ldp	x19, x20, [sp, #48]
    b750:	ldp	x21, x22, [sp, #64]
    b754:	ldp	x23, x24, [sp, #80]
    b758:	add	sp, sp, #0xb0
    b75c:	ret
    b760:	bl	67e0 <PyErr_Occurred@plt>
    b764:	cbnz	x0, b6b4 <PyFloat_FromString@plt+0x4c24>
    b768:	mov	w1, w20
    b76c:	b	b484 <PyFloat_FromString@plt+0x49f4>
    b770:	mov	w25, #0x0                   	// #0
    b774:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b778:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b77c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b780:	add	x1, x1, #0x838
    b784:	ldr	x0, [x0, #3928]
    b788:	ldr	x0, [x0]
    b78c:	bl	6650 <PyErr_SetString@plt>
    b790:	mov	w0, #0xffffffff            	// #-1
    b794:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b798:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b79c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b7a0:	add	x1, x1, #0xc58
    b7a4:	ldr	x0, [x0, #3920]
    b7a8:	ldr	x0, [x0]
    b7ac:	bl	6650 <PyErr_SetString@plt>
    b7b0:	mov	w0, #0xffffffff            	// #-1
    b7b4:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b7b8:	mov	w25, #0x1                   	// #1
    b7bc:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b7c0:	mov	w25, #0x2                   	// #2
    b7c4:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b7c8:	mov	w25, #0x3                   	// #3
    b7cc:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b7d0:	mov	w25, #0x5                   	// #5
    b7d4:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b7d8:	mov	w25, #0x6                   	// #6
    b7dc:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b7e0:	mov	w25, #0x7                   	// #7
    b7e4:	b	b3b0 <PyFloat_FromString@plt+0x4920>
    b7e8:	mov	w25, #0x0                   	// #0
    b7ec:	b	b524 <PyFloat_FromString@plt+0x4a94>
    b7f0:	mov	w22, #0x0                   	// #0
    b7f4:	b	b5cc <PyFloat_FromString@plt+0x4b3c>
    b7f8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b7fc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b800:	add	x1, x1, #0x810
    b804:	ldr	x0, [x0, #3928]
    b808:	ldr	x0, [x0]
    b80c:	bl	6650 <PyErr_SetString@plt>
    b810:	mov	w0, #0xffffffff            	// #-1
    b814:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b818:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b81c:	add	x1, x1, #0xad8
    b820:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b824:	ldr	x0, [x0, #3920]
    b828:	ldr	x0, [x0]
    b82c:	bl	6650 <PyErr_SetString@plt>
    b830:	mov	w0, #0xffffffff            	// #-1
    b834:	ldp	x25, x26, [sp, #96]
    b838:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b83c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b840:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b844:	add	x1, x1, #0x7e8
    b848:	ldr	x0, [x0, #3928]
    b84c:	ldr	x0, [x0]
    b850:	bl	6650 <PyErr_SetString@plt>
    b854:	mov	w0, #0xffffffff            	// #-1
    b858:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b85c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b860:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b864:	add	x1, x1, #0x7c0
    b868:	ldr	x0, [x0, #3928]
    b86c:	ldr	x0, [x0]
    b870:	bl	6650 <PyErr_SetString@plt>
    b874:	mov	w0, #0xffffffff            	// #-1
    b878:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b87c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    b880:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    b884:	add	x1, x1, #0xc30
    b888:	b	b824 <PyFloat_FromString@plt+0x4d94>
    b88c:	mov	w0, #0xffffffff            	// #-1
    b890:	ldp	x25, x26, [sp, #96]
    b894:	b	b5e0 <PyFloat_FromString@plt+0x4b50>
    b898:	stp	x29, x30, [sp, #-48]!
    b89c:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    b8a0:	add	x2, x2, #0x328
    b8a4:	mov	x29, sp
    b8a8:	stp	x19, x20, [sp, #16]
    b8ac:	mov	x20, x0
    b8b0:	add	x0, x2, #0x1a0
    b8b4:	str	wzr, [sp, #44]
    b8b8:	bl	6950 <_PyObject_New@plt>
    b8bc:	mov	x19, x0
    b8c0:	cbz	x0, b904 <PyFloat_FromString@plt+0x4e74>
    b8c4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    b8c8:	mov	x2, #0xffffffffffffffff    	// #-1
    b8cc:	mov	w1, #0x30                  	// #48
    b8d0:	str	x2, [x19, #16]
    b8d4:	ldr	q0, [x0, #2128]
    b8d8:	add	x0, x19, #0x48
    b8dc:	strb	w1, [x19, #24]
    b8e0:	add	x2, sp, #0x2c
    b8e4:	stp	xzr, xzr, [x19, #32]
    b8e8:	add	x1, x20, #0x18
    b8ec:	str	x0, [x19, #64]
    b8f0:	add	x0, x19, #0x18
    b8f4:	str	q0, [x19, #48]
    b8f8:	bl	2d940 <PyInit__decimal@@Base+0x11700>
    b8fc:	ldr	w0, [sp, #44]
    b900:	tbnz	w0, #9, b914 <PyFloat_FromString@plt+0x4e84>
    b904:	mov	x0, x19
    b908:	ldp	x19, x20, [sp, #16]
    b90c:	ldp	x29, x30, [sp], #48
    b910:	ret
    b914:	ldr	x0, [x19]
    b918:	sub	x0, x0, #0x1
    b91c:	str	x0, [x19]
    b920:	cbz	x0, b93c <PyFloat_FromString@plt+0x4eac>
    b924:	bl	65e0 <PyErr_NoMemory@plt>
    b928:	mov	x19, #0x0                   	// #0
    b92c:	mov	x0, x19
    b930:	ldp	x19, x20, [sp, #16]
    b934:	ldp	x29, x30, [sp], #48
    b938:	ret
    b93c:	mov	x0, x19
    b940:	bl	65d0 <_Py_Dealloc@plt>
    b944:	b	b924 <PyFloat_FromString@plt+0x4e94>
    b948:	stp	x29, x30, [sp, #-48]!
    b94c:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    b950:	add	x2, x2, #0x328
    b954:	mov	x29, sp
    b958:	stp	x19, x20, [sp, #16]
    b95c:	mov	x20, x0
    b960:	add	x0, x2, #0x1a0
    b964:	str	wzr, [sp, #44]
    b968:	bl	6950 <_PyObject_New@plt>
    b96c:	mov	x19, x0
    b970:	cbz	x0, b9b4 <PyFloat_FromString@plt+0x4f24>
    b974:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    b978:	mov	x2, #0xffffffffffffffff    	// #-1
    b97c:	mov	w1, #0x30                  	// #48
    b980:	str	x2, [x19, #16]
    b984:	ldr	q0, [x0, #2128]
    b988:	add	x0, x19, #0x48
    b98c:	strb	w1, [x19, #24]
    b990:	add	x2, sp, #0x2c
    b994:	stp	xzr, xzr, [x19, #32]
    b998:	add	x1, x20, #0x18
    b99c:	str	x0, [x19, #64]
    b9a0:	add	x0, x19, #0x18
    b9a4:	str	q0, [x19, #48]
    b9a8:	bl	2d908 <PyInit__decimal@@Base+0x116c8>
    b9ac:	ldr	w0, [sp, #44]
    b9b0:	tbnz	w0, #9, b9c4 <PyFloat_FromString@plt+0x4f34>
    b9b4:	mov	x0, x19
    b9b8:	ldp	x19, x20, [sp, #16]
    b9bc:	ldp	x29, x30, [sp], #48
    b9c0:	ret
    b9c4:	ldr	x0, [x19]
    b9c8:	sub	x0, x0, #0x1
    b9cc:	str	x0, [x19]
    b9d0:	cbz	x0, b9ec <PyFloat_FromString@plt+0x4f5c>
    b9d4:	bl	65e0 <PyErr_NoMemory@plt>
    b9d8:	mov	x19, #0x0                   	// #0
    b9dc:	mov	x0, x19
    b9e0:	ldp	x19, x20, [sp, #16]
    b9e4:	ldp	x29, x30, [sp], #48
    b9e8:	ret
    b9ec:	mov	x0, x19
    b9f0:	bl	65d0 <_Py_Dealloc@plt>
    b9f4:	b	b9d4 <PyFloat_FromString@plt+0x4f44>
    b9f8:	stp	x29, x30, [sp, #-192]!
    b9fc:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
    ba00:	mov	x29, sp
    ba04:	stp	x23, x24, [sp, #48]
    ba08:	mov	x23, x0
    ba0c:	ldr	x0, [x2, #2056]
    ba10:	stp	x21, x22, [sp, #32]
    ba14:	add	x22, sp, #0x90
    ba18:	mov	x2, x22
    ba1c:	stp	x19, x20, [sp, #16]
    ba20:	mov	x20, x1
    ba24:	mov	x1, #0x0                   	// #0
    ba28:	str	wzr, [sp, #108]
    ba2c:	str	xzr, [sp, #112]
    ba30:	bl	6740 <PyContextVar_Get@plt>
    ba34:	tbnz	w0, #31, bad4 <PyFloat_FromString@plt+0x5044>
    ba38:	ldr	x19, [sp, #144]
    ba3c:	cbz	x19, bafc <PyFloat_FromString@plt+0x506c>
    ba40:	ldr	x2, [x19]
    ba44:	sub	x2, x2, #0x1
    ba48:	str	x2, [x19]
    ba4c:	cbz	x2, baf0 <PyFloat_FromString@plt+0x5060>
    ba50:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    ba54:	mov	x0, x20
    ba58:	add	x3, sp, #0x70
    ba5c:	add	x1, x1, #0xc88
    ba60:	add	x2, sp, #0x78
    ba64:	bl	68e0 <PyArg_ParseTuple@plt>
    ba68:	cbz	w0, bad4 <PyFloat_FromString@plt+0x5044>
    ba6c:	ldr	x0, [sp, #120]
    ba70:	ldr	x1, [x0, #8]
    ba74:	ldr	x1, [x1, #168]
    ba78:	tbz	w1, #28, be08 <PyFloat_FromString@plt+0x5378>
    ba7c:	add	x1, sp, #0x80
    ba80:	bl	69d0 <PyUnicode_AsUTF8AndSize@plt>
    ba84:	mov	x20, x0
    ba88:	cbz	x0, bad4 <PyFloat_FromString@plt+0x5044>
    ba8c:	ldr	x24, [sp, #128]
    ba90:	stp	x25, x26, [sp, #64]
    ba94:	cmp	x24, #0x0
    ba98:	b.le	baa4 <PyFloat_FromString@plt+0x5014>
    ba9c:	ldrb	w0, [x0]
    baa0:	cbz	w0, bd14 <PyFloat_FromString@plt+0x5284>
    baa4:	ldr	w2, [x19, #80]
    baa8:	mov	x1, x20
    baac:	mov	x0, x22
    bab0:	bl	25ef0 <PyInit__decimal@@Base+0x9cb0>
    bab4:	cbnz	w0, bb0c <PyFloat_FromString@plt+0x507c>
    bab8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    babc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bac0:	add	x1, x1, #0xca8
    bac4:	ldr	x0, [x0, #3928]
    bac8:	ldr	x0, [x0]
    bacc:	bl	6650 <PyErr_SetString@plt>
    bad0:	ldp	x25, x26, [sp, #64]
    bad4:	mov	x21, #0x0                   	// #0
    bad8:	mov	x0, x21
    badc:	ldp	x19, x20, [sp, #16]
    bae0:	ldp	x21, x22, [sp, #32]
    bae4:	ldp	x23, x24, [sp, #48]
    bae8:	ldp	x29, x30, [sp], #192
    baec:	ret
    baf0:	mov	x0, x19
    baf4:	bl	65d0 <_Py_Dealloc@plt>
    baf8:	b	ba50 <PyFloat_FromString@plt+0x4fc0>
    bafc:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    bb00:	mov	x19, x0
    bb04:	cbnz	x0, ba40 <PyFloat_FromString@plt+0x4fb0>
    bb08:	b	bad4 <PyFloat_FromString@plt+0x5044>
    bb0c:	ldr	x26, [sp, #112]
    bb10:	str	x27, [sp, #80]
    bb14:	mov	w25, #0x0                   	// #0
    bb18:	cbz	x26, bd6c <PyFloat_FromString@plt+0x52dc>
    bb1c:	ldr	x1, [x26, #8]
    bb20:	ldr	x1, [x1, #168]
    bb24:	tbz	w1, #29, bccc <PyFloat_FromString@plt+0x523c>
    bb28:	mov	x0, x26
    bb2c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bb30:	add	x1, x1, #0xce8
    bb34:	bl	6870 <PyDict_GetItemString@plt>
    bb38:	mov	x24, x0
    bb3c:	cbz	x0, bb54 <PyFloat_FromString@plt+0x50c4>
    bb40:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    bb44:	mov	x24, x0
    bb48:	cbz	x0, bce4 <PyFloat_FromString@plt+0x5254>
    bb4c:	add	x0, x0, #0x20
    bb50:	str	x0, [sp, #168]
    bb54:	ldr	x0, [sp, #112]
    bb58:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bb5c:	add	x1, x1, #0xcf8
    bb60:	bl	6870 <PyDict_GetItemString@plt>
    bb64:	mov	x27, x0
    bb68:	cbz	x0, bb80 <PyFloat_FromString@plt+0x50f0>
    bb6c:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    bb70:	mov	x27, x0
    bb74:	cbz	x0, bf1c <PyFloat_FromString@plt+0x548c>
    bb78:	add	x0, x0, #0x20
    bb7c:	str	x0, [sp, #176]
    bb80:	ldr	x0, [sp, #112]
    bb84:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bb88:	add	x1, x1, #0xd08
    bb8c:	bl	6870 <PyDict_GetItemString@plt>
    bb90:	mov	x26, x0
    bb94:	cbz	x0, bbac <PyFloat_FromString@plt+0x511c>
    bb98:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    bb9c:	mov	x26, x0
    bba0:	cbz	x0, bf6c <PyFloat_FromString@plt+0x54dc>
    bba4:	add	x0, x0, #0x20
    bba8:	str	x0, [sp, #184]
    bbac:	mov	x0, x22
    bbb0:	bl	25ea8 <PyInit__decimal@@Base+0x9c68>
    bbb4:	tbnz	w0, #31, bf28 <PyFloat_FromString@plt+0x5498>
    bbb8:	add	x2, x19, #0x10
    bbbc:	mov	x1, x22
    bbc0:	add	x0, x23, #0x18
    bbc4:	add	x3, sp, #0x6c
    bbc8:	bl	263a0 <PyInit__decimal@@Base+0xa160>
    bbcc:	mov	x19, x0
    bbd0:	cbz	x0, bef8 <PyFloat_FromString@plt+0x5468>
    bbd4:	bl	64d0 <strlen@plt>
    bbd8:	str	x0, [sp, #128]
    bbdc:	mov	x1, x0
    bbe0:	cbz	w25, bc04 <PyFloat_FromString@plt+0x5174>
    bbe4:	ldrb	w2, [x19]
    bbe8:	cbz	w2, bc04 <PyFloat_FromString@plt+0x5174>
    bbec:	mov	x1, x19
    bbf0:	cmp	w2, #0xff
    bbf4:	b.eq	bcbc <PyFloat_FromString@plt+0x522c>  // b.none
    bbf8:	ldrb	w2, [x1, #1]!
    bbfc:	cbnz	w2, bbf0 <PyFloat_FromString@plt+0x5160>
    bc00:	ldr	x1, [sp, #128]
    bc04:	mov	x0, x19
    bc08:	mov	x2, #0x0                   	// #0
    bc0c:	bl	68a0 <PyUnicode_DecodeUTF8@plt>
    bc10:	mov	x21, x0
    bc14:	cbz	x26, bc28 <PyFloat_FromString@plt+0x5198>
    bc18:	ldr	x1, [x26]
    bc1c:	sub	x1, x1, #0x1
    bc20:	str	x1, [x26]
    bc24:	cbz	x1, bc98 <PyFloat_FromString@plt+0x5208>
    bc28:	cbz	x27, bc3c <PyFloat_FromString@plt+0x51ac>
    bc2c:	ldr	x1, [x27]
    bc30:	sub	x1, x1, #0x1
    bc34:	str	x1, [x27]
    bc38:	cbz	x1, bca4 <PyFloat_FromString@plt+0x5214>
    bc3c:	cbz	x24, bc50 <PyFloat_FromString@plt+0x51c0>
    bc40:	ldr	x0, [x24]
    bc44:	sub	x0, x0, #0x1
    bc48:	str	x0, [x24]
    bc4c:	cbz	x0, bc88 <PyFloat_FromString@plt+0x51f8>
    bc50:	cbnz	w25, bcb0 <PyFloat_FromString@plt+0x5220>
    bc54:	cbz	x19, bfac <PyFloat_FromString@plt+0x551c>
    bc58:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    bc5c:	mov	x0, x19
    bc60:	ldr	x1, [x1, #1912]
    bc64:	blr	x1
    bc68:	mov	x0, x21
    bc6c:	ldp	x19, x20, [sp, #16]
    bc70:	ldp	x21, x22, [sp, #32]
    bc74:	ldp	x23, x24, [sp, #48]
    bc78:	ldp	x25, x26, [sp, #64]
    bc7c:	ldr	x27, [sp, #80]
    bc80:	ldp	x29, x30, [sp], #192
    bc84:	ret
    bc88:	mov	x0, x24
    bc8c:	bl	65d0 <_Py_Dealloc@plt>
    bc90:	cbz	w25, bc54 <PyFloat_FromString@plt+0x51c4>
    bc94:	b	bcb0 <PyFloat_FromString@plt+0x5220>
    bc98:	mov	x0, x26
    bc9c:	bl	65d0 <_Py_Dealloc@plt>
    bca0:	b	bc28 <PyFloat_FromString@plt+0x5198>
    bca4:	mov	x0, x27
    bca8:	bl	65d0 <_Py_Dealloc@plt>
    bcac:	b	bc3c <PyFloat_FromString@plt+0x51ac>
    bcb0:	mov	x0, x20
    bcb4:	bl	6560 <PyMem_Free@plt>
    bcb8:	b	bc54 <PyFloat_FromString@plt+0x51c4>
    bcbc:	strb	wzr, [x1]
    bcc0:	ldrb	w2, [x1, #1]!
    bcc4:	cbnz	w2, bbf0 <PyFloat_FromString@plt+0x5160>
    bcc8:	b	bc00 <PyFloat_FromString@plt+0x5170>
    bccc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    bcd0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bcd4:	add	x1, x1, #0xcc0
    bcd8:	ldr	x0, [x0, #3936]
    bcdc:	ldr	x0, [x0]
    bce0:	bl	6650 <PyErr_SetString@plt>
    bce4:	cbz	w25, beec <PyFloat_FromString@plt+0x545c>
    bce8:	ldr	x27, [sp, #80]
    bcec:	mov	x0, x20
    bcf0:	mov	x21, #0x0                   	// #0
    bcf4:	bl	6560 <PyMem_Free@plt>
    bcf8:	mov	x0, x21
    bcfc:	ldp	x19, x20, [sp, #16]
    bd00:	ldp	x21, x22, [sp, #32]
    bd04:	ldp	x23, x24, [sp, #48]
    bd08:	ldp	x25, x26, [sp, #64]
    bd0c:	ldp	x29, x30, [sp], #192
    bd10:	ret
    bd14:	add	x0, x24, #0x1
    bd18:	bl	6a40 <PyMem_Malloc@plt>
    bd1c:	mov	x21, x0
    bd20:	cbz	x0, bf78 <PyFloat_FromString@plt+0x54e8>
    bd24:	mov	x1, x20
    bd28:	mov	x2, x24
    bd2c:	bl	6470 <memcpy@plt>
    bd30:	strb	wzr, [x21, x24]
    bd34:	mov	w0, #0x5f                  	// #95
    bd38:	strb	w0, [x21]
    bd3c:	mov	x1, x21
    bd40:	mov	x0, x22
    bd44:	ldr	w2, [x19, #80]
    bd48:	bl	25ef0 <PyInit__decimal@@Base+0x9cb0>
    bd4c:	cbz	w0, bf8c <PyFloat_FromString@plt+0x54fc>
    bd50:	ldr	x26, [sp, #112]
    bd54:	mov	w0, #0xff                  	// #255
    bd58:	str	x27, [sp, #80]
    bd5c:	mov	x20, x21
    bd60:	sturh	w0, [sp, #163]
    bd64:	mov	w25, #0x1                   	// #1
    bd68:	cbnz	x26, bb1c <PyFloat_FromString@plt+0x508c>
    bd6c:	ldr	x21, [sp, #168]
    bd70:	mov	x0, x21
    bd74:	bl	64d0 <strlen@plt>
    bd78:	cmp	x0, #0x1
    bd7c:	b.hi	be3c <PyFloat_FromString@plt+0x53ac>  // b.pmore
    bd80:	mov	x24, #0x0                   	// #0
    bd84:	b.eq	bf0c <PyFloat_FromString@plt+0x547c>  // b.none
    bd88:	ldr	x21, [sp, #176]
    bd8c:	mov	x0, x21
    bd90:	bl	64d0 <strlen@plt>
    bd94:	cmp	x0, #0x1
    bd98:	b.hi	bdb0 <PyFloat_FromString@plt+0x5320>  // b.pmore
    bd9c:	mov	x27, #0x0                   	// #0
    bda0:	b.ne	bbb8 <PyFloat_FromString@plt+0x5128>  // b.any
    bda4:	ldrb	w0, [x21]
    bda8:	tbz	w0, #7, bbb8 <PyFloat_FromString@plt+0x5128>
    bdac:	nop
    bdb0:	mov	x1, x21
    bdb4:	add	x27, sp, #0x88
    bdb8:	mov	x0, x27
    bdbc:	mov	x2, #0x2                   	// #2
    bdc0:	bl	64f0 <mbstowcs@plt>
    bdc4:	mov	x1, x0
    bdc8:	cmp	x0, #0x1
    bdcc:	b.ne	beb0 <PyFloat_FromString@plt+0x5420>  // b.any
    bdd0:	mov	x0, x27
    bdd4:	bl	6570 <PyUnicode_FromWideChar@plt>
    bdd8:	mov	x21, x0
    bddc:	cbz	x0, bf84 <PyFloat_FromString@plt+0x54f4>
    bde0:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    bde4:	mov	x27, x0
    bde8:	ldr	x1, [x21]
    bdec:	sub	x0, x1, #0x1
    bdf0:	str	x0, [x21]
    bdf4:	cbz	x0, bee0 <PyFloat_FromString@plt+0x5450>
    bdf8:	cbz	x27, bf1c <PyFloat_FromString@plt+0x548c>
    bdfc:	add	x0, x27, #0x20
    be00:	str	x0, [sp, #176]
    be04:	b	bbb8 <PyFloat_FromString@plt+0x5128>
    be08:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    be0c:	mov	x21, #0x0                   	// #0
    be10:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    be14:	add	x1, x1, #0xc90
    be18:	ldr	x0, [x0, #3936]
    be1c:	ldr	x0, [x0]
    be20:	bl	6650 <PyErr_SetString@plt>
    be24:	mov	x0, x21
    be28:	ldp	x19, x20, [sp, #16]
    be2c:	ldp	x21, x22, [sp, #32]
    be30:	ldp	x23, x24, [sp, #48]
    be34:	ldp	x29, x30, [sp], #192
    be38:	ret
    be3c:	mov	x1, x21
    be40:	add	x24, sp, #0x88
    be44:	mov	x0, x24
    be48:	mov	x2, #0x2                   	// #2
    be4c:	bl	64f0 <mbstowcs@plt>
    be50:	mov	x1, x0
    be54:	cmp	x0, #0x1
    be58:	b.ne	be94 <PyFloat_FromString@plt+0x5404>  // b.any
    be5c:	mov	x0, x24
    be60:	bl	6570 <PyUnicode_FromWideChar@plt>
    be64:	mov	x21, x0
    be68:	cbz	x0, bce4 <PyFloat_FromString@plt+0x5254>
    be6c:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    be70:	mov	x24, x0
    be74:	ldr	x1, [x21]
    be78:	sub	x0, x1, #0x1
    be7c:	str	x0, [x21]
    be80:	cbz	x0, bed4 <PyFloat_FromString@plt+0x5444>
    be84:	cbz	x24, bce4 <PyFloat_FromString@plt+0x5254>
    be88:	add	x0, x24, #0x20
    be8c:	str	x0, [sp, #168]
    be90:	b	bd88 <PyFloat_FromString@plt+0x52f8>
    be94:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    be98:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    be9c:	add	x1, x1, #0xd30
    bea0:	ldr	x0, [x0, #3928]
    bea4:	ldr	x0, [x0]
    bea8:	bl	6650 <PyErr_SetString@plt>
    beac:	b	bce4 <PyFloat_FromString@plt+0x5254>
    beb0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    beb4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    beb8:	mov	x19, #0x0                   	// #0
    bebc:	add	x1, x1, #0xd30
    bec0:	ldr	x0, [x0, #3928]
    bec4:	mov	x21, #0x0                   	// #0
    bec8:	ldr	x0, [x0]
    becc:	bl	6650 <PyErr_SetString@plt>
    bed0:	b	bc3c <PyFloat_FromString@plt+0x51ac>
    bed4:	mov	x0, x21
    bed8:	bl	65d0 <_Py_Dealloc@plt>
    bedc:	b	be84 <PyFloat_FromString@plt+0x53f4>
    bee0:	mov	x0, x21
    bee4:	bl	65d0 <_Py_Dealloc@plt>
    bee8:	b	bdf8 <PyFloat_FromString@plt+0x5368>
    beec:	ldp	x25, x26, [sp, #64]
    bef0:	ldr	x27, [sp, #80]
    bef4:	b	bad4 <PyFloat_FromString@plt+0x5044>
    bef8:	ldr	w0, [sp, #108]
    befc:	tbz	w0, #9, bf4c <PyFloat_FromString@plt+0x54bc>
    bf00:	mov	x21, #0x0                   	// #0
    bf04:	bl	65e0 <PyErr_NoMemory@plt>
    bf08:	b	bc14 <PyFloat_FromString@plt+0x5184>
    bf0c:	ldrb	w0, [x21]
    bf10:	tbnz	w0, #7, be3c <PyFloat_FromString@plt+0x53ac>
    bf14:	mov	x24, x26
    bf18:	b	bd88 <PyFloat_FromString@plt+0x52f8>
    bf1c:	mov	x19, #0x0                   	// #0
    bf20:	mov	x21, #0x0                   	// #0
    bf24:	b	bc3c <PyFloat_FromString@plt+0x51ac>
    bf28:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    bf2c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bf30:	mov	x19, #0x0                   	// #0
    bf34:	add	x1, x1, #0xd18
    bf38:	ldr	x0, [x0, #3928]
    bf3c:	mov	x21, #0x0                   	// #0
    bf40:	ldr	x0, [x0]
    bf44:	bl	6650 <PyErr_SetString@plt>
    bf48:	b	bc14 <PyFloat_FromString@plt+0x5184>
    bf4c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    bf50:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bf54:	mov	x21, #0x0                   	// #0
    bf58:	add	x1, x1, #0xd80
    bf5c:	ldr	x0, [x0, #3928]
    bf60:	ldr	x0, [x0]
    bf64:	bl	6650 <PyErr_SetString@plt>
    bf68:	b	bc14 <PyFloat_FromString@plt+0x5184>
    bf6c:	mov	x19, #0x0                   	// #0
    bf70:	mov	x21, #0x0                   	// #0
    bf74:	b	bc28 <PyFloat_FromString@plt+0x5198>
    bf78:	bl	65e0 <PyErr_NoMemory@plt>
    bf7c:	ldp	x25, x26, [sp, #64]
    bf80:	b	bad8 <PyFloat_FromString@plt+0x5048>
    bf84:	mov	x19, #0x0                   	// #0
    bf88:	b	bc3c <PyFloat_FromString@plt+0x51ac>
    bf8c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    bf90:	mov	x20, x21
    bf94:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bf98:	add	x1, x1, #0xca8
    bf9c:	ldr	x0, [x0, #3928]
    bfa0:	ldr	x0, [x0]
    bfa4:	bl	6650 <PyErr_SetString@plt>
    bfa8:	b	bcec <PyFloat_FromString@plt+0x525c>
    bfac:	ldp	x25, x26, [sp, #64]
    bfb0:	ldr	x27, [sp, #80]
    bfb4:	b	bad8 <PyFloat_FromString@plt+0x5048>
    bfb8:	stp	x29, x30, [sp, #-64]!
    bfbc:	mov	x29, sp
    bfc0:	add	x3, sp, #0x38
    bfc4:	add	x2, sp, #0x30
    bfc8:	stp	x19, x20, [sp, #16]
    bfcc:	stp	x21, x22, [sp, #32]
    bfd0:	mov	x22, x0
    bfd4:	mov	x0, x1
    bfd8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    bfdc:	add	x1, x1, #0xdc0
    bfe0:	bl	68e0 <PyArg_ParseTuple@plt>
    bfe4:	cbz	w0, c0b8 <PyFloat_FromString@plt+0x5628>
    bfe8:	ldr	x19, [sp, #48]
    bfec:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    bff0:	add	x21, x20, #0x328
    bff4:	add	x21, x21, #0x1a0
    bff8:	ldr	x0, [x19, #8]
    bffc:	cmp	x0, x21
    c000:	b.eq	c050 <PyFloat_FromString@plt+0x55c0>  // b.none
    c004:	mov	x1, x21
    c008:	bl	69c0 <PyType_IsSubtype@plt>
    c00c:	cbnz	w0, c050 <PyFloat_FromString@plt+0x55c0>
    c010:	ldr	x2, [x19, #8]
    c014:	ldr	x0, [x2, #168]
    c018:	tbnz	w0, #24, c190 <PyFloat_FromString@plt+0x5700>
    c01c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c020:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    c024:	ldr	x2, [x2, #24]
    c028:	add	x1, x1, #0xb70
    c02c:	ldr	x0, [x0, #3936]
    c030:	mov	x20, #0x0                   	// #0
    c034:	ldr	x0, [x0]
    c038:	bl	6a10 <PyErr_Format@plt>
    c03c:	mov	x0, x20
    c040:	ldp	x19, x20, [sp, #16]
    c044:	ldp	x21, x22, [sp, #32]
    c048:	ldp	x29, x30, [sp], #64
    c04c:	ret
    c050:	ldr	x0, [x19]
    c054:	add	x0, x0, #0x1
    c058:	str	x0, [x19]
    c05c:	ldr	x21, [sp, #56]
    c060:	add	x20, x20, #0x328
    c064:	add	x20, x20, #0x1a0
    c068:	ldr	x0, [x21, #8]
    c06c:	cmp	x0, x20
    c070:	b.eq	c0d0 <PyFloat_FromString@plt+0x5640>  // b.none
    c074:	mov	x1, x20
    c078:	bl	69c0 <PyType_IsSubtype@plt>
    c07c:	cbnz	w0, c0d0 <PyFloat_FromString@plt+0x5640>
    c080:	ldr	x2, [x21, #8]
    c084:	ldr	x0, [x2, #168]
    c088:	tbnz	w0, #24, c174 <PyFloat_FromString@plt+0x56e4>
    c08c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c090:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    c094:	ldr	x2, [x2, #24]
    c098:	add	x1, x1, #0xb70
    c09c:	ldr	x0, [x0, #3936]
    c0a0:	ldr	x0, [x0]
    c0a4:	bl	6a10 <PyErr_Format@plt>
    c0a8:	ldr	x0, [x19]
    c0ac:	sub	x0, x0, #0x1
    c0b0:	str	x0, [x19]
    c0b4:	cbz	x0, c1b0 <PyFloat_FromString@plt+0x5720>
    c0b8:	mov	x20, #0x0                   	// #0
    c0bc:	mov	x0, x20
    c0c0:	ldp	x19, x20, [sp, #16]
    c0c4:	ldp	x21, x22, [sp, #32]
    c0c8:	ldp	x29, x30, [sp], #64
    c0cc:	ret
    c0d0:	ldr	x0, [x21]
    c0d4:	add	x0, x0, #0x1
    c0d8:	str	x0, [x21]
    c0dc:	add	x1, x21, #0x18
    c0e0:	add	x0, x19, #0x18
    c0e4:	bl	3d2c0 <PyInit__decimal@@Base+0x21080>
    c0e8:	cbnz	w0, c140 <PyFloat_FromString@plt+0x56b0>
    c0ec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c0f0:	ldr	x0, [x0, #3976]
    c0f4:	mov	x20, x0
    c0f8:	ldr	x1, [x0]
    c0fc:	add	x1, x1, #0x1
    c100:	str	x1, [x0]
    c104:	ldr	x0, [x19]
    c108:	sub	x0, x0, #0x1
    c10c:	str	x0, [x19]
    c110:	cbz	x0, c168 <PyFloat_FromString@plt+0x56d8>
    c114:	ldr	x0, [x21]
    c118:	sub	x0, x0, #0x1
    c11c:	str	x0, [x21]
    c120:	cbnz	x0, c03c <PyFloat_FromString@plt+0x55ac>
    c124:	mov	x0, x21
    c128:	bl	65d0 <_Py_Dealloc@plt>
    c12c:	mov	x0, x20
    c130:	ldp	x19, x20, [sp, #16]
    c134:	ldp	x21, x22, [sp, #32]
    c138:	ldp	x29, x30, [sp], #64
    c13c:	ret
    c140:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c144:	ldr	x0, [x0, #4024]
    c148:	mov	x20, x0
    c14c:	ldr	x1, [x0]
    c150:	add	x1, x1, #0x1
    c154:	str	x1, [x0]
    c158:	ldr	x0, [x19]
    c15c:	sub	x0, x0, #0x1
    c160:	str	x0, [x19]
    c164:	cbnz	x0, c114 <PyFloat_FromString@plt+0x5684>
    c168:	mov	x0, x19
    c16c:	bl	65d0 <_Py_Dealloc@plt>
    c170:	b	c114 <PyFloat_FromString@plt+0x5684>
    c174:	mov	x1, x21
    c178:	mov	x2, x22
    c17c:	mov	x0, x20
    c180:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    c184:	mov	x21, x0
    c188:	cbnz	x0, c0dc <PyFloat_FromString@plt+0x564c>
    c18c:	b	c0a8 <PyFloat_FromString@plt+0x5618>
    c190:	mov	x1, x19
    c194:	mov	x0, x21
    c198:	mov	x2, x22
    c19c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    c1a0:	mov	x19, x0
    c1a4:	cbnz	x0, c05c <PyFloat_FromString@plt+0x55cc>
    c1a8:	mov	x20, #0x0                   	// #0
    c1ac:	b	c0bc <PyFloat_FromString@plt+0x562c>
    c1b0:	mov	x0, x19
    c1b4:	mov	x20, #0x0                   	// #0
    c1b8:	bl	65d0 <_Py_Dealloc@plt>
    c1bc:	b	c03c <PyFloat_FromString@plt+0x55ac>
    c1c0:	stp	x29, x30, [sp, #-64]!
    c1c4:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
    c1c8:	mov	x1, #0x0                   	// #0
    c1cc:	mov	x29, sp
    c1d0:	str	x21, [sp, #32]
    c1d4:	mov	x21, x0
    c1d8:	ldr	x0, [x3, #2056]
    c1dc:	add	x2, sp, #0x38
    c1e0:	stp	x19, x20, [sp, #16]
    c1e4:	str	wzr, [sp, #52]
    c1e8:	bl	6740 <PyContextVar_Get@plt>
    c1ec:	tbnz	w0, #31, c290 <PyFloat_FromString@plt+0x5800>
    c1f0:	ldr	x20, [sp, #56]
    c1f4:	cbz	x20, c2b4 <PyFloat_FromString@plt+0x5824>
    c1f8:	ldr	x1, [x20]
    c1fc:	sub	x1, x1, #0x1
    c200:	str	x1, [x20]
    c204:	cbz	x1, c2a8 <PyFloat_FromString@plt+0x5818>
    c208:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    c20c:	add	x0, x0, #0x328
    c210:	add	x0, x0, #0x1a0
    c214:	bl	6950 <_PyObject_New@plt>
    c218:	mov	x19, x0
    c21c:	cbz	x0, c290 <PyFloat_FromString@plt+0x5800>
    c220:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    c224:	mov	x2, #0xffffffffffffffff    	// #-1
    c228:	mov	w1, #0x30                  	// #48
    c22c:	str	x2, [x19, #16]
    c230:	ldr	q0, [x0, #2128]
    c234:	add	x0, x19, #0x48
    c238:	strb	w1, [x19, #24]
    c23c:	add	x3, sp, #0x34
    c240:	stp	xzr, xzr, [x19, #32]
    c244:	add	x1, x21, #0x18
    c248:	add	x2, x20, #0x10
    c24c:	str	x0, [x19, #64]
    c250:	add	x0, x19, #0x18
    c254:	str	q0, [x19, #48]
    c258:	bl	3a910 <PyInit__decimal@@Base+0x1e6d0>
    c25c:	ldr	w1, [sp, #52]
    c260:	mov	x0, x20
    c264:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    c268:	cbnz	w0, c280 <PyFloat_FromString@plt+0x57f0>
    c26c:	mov	x0, x19
    c270:	ldp	x19, x20, [sp, #16]
    c274:	ldr	x21, [sp, #32]
    c278:	ldp	x29, x30, [sp], #64
    c27c:	ret
    c280:	ldr	x0, [x19]
    c284:	sub	x0, x0, #0x1
    c288:	str	x0, [x19]
    c28c:	cbz	x0, c2c8 <PyFloat_FromString@plt+0x5838>
    c290:	mov	x19, #0x0                   	// #0
    c294:	mov	x0, x19
    c298:	ldp	x19, x20, [sp, #16]
    c29c:	ldr	x21, [sp, #32]
    c2a0:	ldp	x29, x30, [sp], #64
    c2a4:	ret
    c2a8:	mov	x0, x20
    c2ac:	bl	65d0 <_Py_Dealloc@plt>
    c2b0:	b	c208 <PyFloat_FromString@plt+0x5778>
    c2b4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    c2b8:	mov	x20, x0
    c2bc:	cbnz	x0, c1f8 <PyFloat_FromString@plt+0x5768>
    c2c0:	mov	x19, #0x0                   	// #0
    c2c4:	b	c294 <PyFloat_FromString@plt+0x5804>
    c2c8:	mov	x0, x19
    c2cc:	mov	x19, #0x0                   	// #0
    c2d0:	bl	65d0 <_Py_Dealloc@plt>
    c2d4:	b	c26c <PyFloat_FromString@plt+0x57dc>
    c2d8:	stp	x29, x30, [sp, #-64]!
    c2dc:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
    c2e0:	mov	x1, #0x0                   	// #0
    c2e4:	mov	x29, sp
    c2e8:	str	x21, [sp, #32]
    c2ec:	mov	x21, x0
    c2f0:	ldr	x0, [x3, #2056]
    c2f4:	add	x2, sp, #0x38
    c2f8:	stp	x19, x20, [sp, #16]
    c2fc:	str	wzr, [sp, #52]
    c300:	bl	6740 <PyContextVar_Get@plt>
    c304:	tbnz	w0, #31, c3a8 <PyFloat_FromString@plt+0x5918>
    c308:	ldr	x20, [sp, #56]
    c30c:	cbz	x20, c3cc <PyFloat_FromString@plt+0x593c>
    c310:	ldr	x1, [x20]
    c314:	sub	x1, x1, #0x1
    c318:	str	x1, [x20]
    c31c:	cbz	x1, c3c0 <PyFloat_FromString@plt+0x5930>
    c320:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    c324:	add	x0, x0, #0x328
    c328:	add	x0, x0, #0x1a0
    c32c:	bl	6950 <_PyObject_New@plt>
    c330:	mov	x19, x0
    c334:	cbz	x0, c3a8 <PyFloat_FromString@plt+0x5918>
    c338:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    c33c:	mov	x2, #0xffffffffffffffff    	// #-1
    c340:	mov	w1, #0x30                  	// #48
    c344:	str	x2, [x19, #16]
    c348:	ldr	q0, [x0, #2128]
    c34c:	add	x0, x19, #0x48
    c350:	strb	w1, [x19, #24]
    c354:	add	x3, sp, #0x34
    c358:	stp	xzr, xzr, [x19, #32]
    c35c:	add	x1, x21, #0x18
    c360:	add	x2, x20, #0x10
    c364:	str	x0, [x19, #64]
    c368:	add	x0, x19, #0x18
    c36c:	str	q0, [x19, #48]
    c370:	bl	3ab90 <PyInit__decimal@@Base+0x1e950>
    c374:	ldr	w1, [sp, #52]
    c378:	mov	x0, x20
    c37c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    c380:	cbnz	w0, c398 <PyFloat_FromString@plt+0x5908>
    c384:	mov	x0, x19
    c388:	ldp	x19, x20, [sp, #16]
    c38c:	ldr	x21, [sp, #32]
    c390:	ldp	x29, x30, [sp], #64
    c394:	ret
    c398:	ldr	x0, [x19]
    c39c:	sub	x0, x0, #0x1
    c3a0:	str	x0, [x19]
    c3a4:	cbz	x0, c3e0 <PyFloat_FromString@plt+0x5950>
    c3a8:	mov	x19, #0x0                   	// #0
    c3ac:	mov	x0, x19
    c3b0:	ldp	x19, x20, [sp, #16]
    c3b4:	ldr	x21, [sp, #32]
    c3b8:	ldp	x29, x30, [sp], #64
    c3bc:	ret
    c3c0:	mov	x0, x20
    c3c4:	bl	65d0 <_Py_Dealloc@plt>
    c3c8:	b	c320 <PyFloat_FromString@plt+0x5890>
    c3cc:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    c3d0:	mov	x20, x0
    c3d4:	cbnz	x0, c310 <PyFloat_FromString@plt+0x5880>
    c3d8:	mov	x19, #0x0                   	// #0
    c3dc:	b	c3ac <PyFloat_FromString@plt+0x591c>
    c3e0:	mov	x0, x19
    c3e4:	mov	x19, #0x0                   	// #0
    c3e8:	bl	65d0 <_Py_Dealloc@plt>
    c3ec:	b	c384 <PyFloat_FromString@plt+0x58f4>
    c3f0:	stp	x29, x30, [sp, #-64]!
    c3f4:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
    c3f8:	mov	x1, #0x0                   	// #0
    c3fc:	mov	x29, sp
    c400:	str	x21, [sp, #32]
    c404:	mov	x21, x0
    c408:	ldr	x0, [x3, #2056]
    c40c:	add	x2, sp, #0x38
    c410:	stp	x19, x20, [sp, #16]
    c414:	str	wzr, [sp, #52]
    c418:	bl	6740 <PyContextVar_Get@plt>
    c41c:	tbnz	w0, #31, c4c0 <PyFloat_FromString@plt+0x5a30>
    c420:	ldr	x20, [sp, #56]
    c424:	cbz	x20, c4e4 <PyFloat_FromString@plt+0x5a54>
    c428:	ldr	x1, [x20]
    c42c:	sub	x1, x1, #0x1
    c430:	str	x1, [x20]
    c434:	cbz	x1, c4d8 <PyFloat_FromString@plt+0x5a48>
    c438:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    c43c:	add	x0, x0, #0x328
    c440:	add	x0, x0, #0x1a0
    c444:	bl	6950 <_PyObject_New@plt>
    c448:	mov	x19, x0
    c44c:	cbz	x0, c4c0 <PyFloat_FromString@plt+0x5a30>
    c450:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    c454:	mov	x2, #0xffffffffffffffff    	// #-1
    c458:	mov	w1, #0x30                  	// #48
    c45c:	str	x2, [x19, #16]
    c460:	ldr	q0, [x0, #2128]
    c464:	add	x0, x19, #0x48
    c468:	strb	w1, [x19, #24]
    c46c:	add	x3, sp, #0x34
    c470:	stp	xzr, xzr, [x19, #32]
    c474:	add	x1, x21, #0x18
    c478:	add	x2, x20, #0x10
    c47c:	str	x0, [x19, #64]
    c480:	add	x0, x19, #0x18
    c484:	str	q0, [x19, #48]
    c488:	bl	3aa28 <PyInit__decimal@@Base+0x1e7e8>
    c48c:	ldr	w1, [sp, #52]
    c490:	mov	x0, x20
    c494:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    c498:	cbnz	w0, c4b0 <PyFloat_FromString@plt+0x5a20>
    c49c:	mov	x0, x19
    c4a0:	ldp	x19, x20, [sp, #16]
    c4a4:	ldr	x21, [sp, #32]
    c4a8:	ldp	x29, x30, [sp], #64
    c4ac:	ret
    c4b0:	ldr	x0, [x19]
    c4b4:	sub	x0, x0, #0x1
    c4b8:	str	x0, [x19]
    c4bc:	cbz	x0, c4f8 <PyFloat_FromString@plt+0x5a68>
    c4c0:	mov	x19, #0x0                   	// #0
    c4c4:	mov	x0, x19
    c4c8:	ldp	x19, x20, [sp, #16]
    c4cc:	ldr	x21, [sp, #32]
    c4d0:	ldp	x29, x30, [sp], #64
    c4d4:	ret
    c4d8:	mov	x0, x20
    c4dc:	bl	65d0 <_Py_Dealloc@plt>
    c4e0:	b	c438 <PyFloat_FromString@plt+0x59a8>
    c4e4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    c4e8:	mov	x20, x0
    c4ec:	cbnz	x0, c428 <PyFloat_FromString@plt+0x5998>
    c4f0:	mov	x19, #0x0                   	// #0
    c4f4:	b	c4c4 <PyFloat_FromString@plt+0x5a34>
    c4f8:	mov	x0, x19
    c4fc:	mov	x19, #0x0                   	// #0
    c500:	bl	65d0 <_Py_Dealloc@plt>
    c504:	b	c49c <PyFloat_FromString@plt+0x5a0c>
    c508:	stp	x29, x30, [sp, #-80]!
    c50c:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    c510:	add	x2, x2, #0x328
    c514:	mov	x29, sp
    c518:	stp	x19, x20, [sp, #16]
    c51c:	mov	x20, x1
    c520:	str	x23, [sp, #48]
    c524:	mov	x23, x0
    c528:	add	x0, x2, #0x1a0
    c52c:	str	wzr, [sp, #76]
    c530:	bl	6950 <_PyObject_New@plt>
    c534:	cbz	x0, c5dc <PyFloat_FromString@plt+0x5b4c>
    c538:	mov	x19, x0
    c53c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    c540:	stp	x21, x22, [sp, #32]
    c544:	mov	x2, #0xffffffffffffffff    	// #-1
    c548:	mov	w1, #0x30                  	// #48
    c54c:	ldr	q0, [x0, #2128]
    c550:	add	x0, x19, #0x48
    c554:	str	x2, [x19, #16]
    c558:	add	x21, x19, #0x18
    c55c:	strb	w1, [x19, #24]
    c560:	add	x22, sp, #0x4c
    c564:	stp	xzr, xzr, [x19, #32]
    c568:	add	x1, x23, #0x18
    c56c:	mov	x2, x22
    c570:	str	x0, [x19, #64]
    c574:	mov	x0, x21
    c578:	str	q0, [x19, #48]
    c57c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
    c580:	ldr	w1, [sp, #76]
    c584:	mov	x0, x20
    c588:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    c58c:	cbnz	w0, c5c8 <PyFloat_FromString@plt+0x5b38>
    c590:	mov	x0, x21
    c594:	add	x1, x20, #0x10
    c598:	mov	x2, x22
    c59c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
    c5a0:	ldr	w1, [sp, #76]
    c5a4:	mov	x0, x20
    c5a8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    c5ac:	cbnz	w0, c5c8 <PyFloat_FromString@plt+0x5b38>
    c5b0:	mov	x0, x19
    c5b4:	ldp	x19, x20, [sp, #16]
    c5b8:	ldp	x21, x22, [sp, #32]
    c5bc:	ldr	x23, [sp, #48]
    c5c0:	ldp	x29, x30, [sp], #80
    c5c4:	ret
    c5c8:	ldr	x0, [x19]
    c5cc:	sub	x0, x0, #0x1
    c5d0:	str	x0, [x19]
    c5d4:	cbz	x0, c5f4 <PyFloat_FromString@plt+0x5b64>
    c5d8:	ldp	x21, x22, [sp, #32]
    c5dc:	mov	x19, #0x0                   	// #0
    c5e0:	mov	x0, x19
    c5e4:	ldp	x19, x20, [sp, #16]
    c5e8:	ldr	x23, [sp, #48]
    c5ec:	ldp	x29, x30, [sp], #80
    c5f0:	ret
    c5f4:	mov	x0, x19
    c5f8:	mov	x19, #0x0                   	// #0
    c5fc:	bl	65d0 <_Py_Dealloc@plt>
    c600:	mov	x0, x19
    c604:	ldp	x19, x20, [sp, #16]
    c608:	ldp	x21, x22, [sp, #32]
    c60c:	ldr	x23, [sp, #48]
    c610:	ldp	x29, x30, [sp], #80
    c614:	ret
    c618:	stp	x29, x30, [sp, #-48]!
    c61c:	mov	x29, sp
    c620:	str	x21, [sp, #32]
    c624:	mov	x21, x0
    c628:	ldr	x0, [x1, #8]
    c62c:	stp	x19, x20, [sp, #16]
    c630:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    c634:	add	x20, x20, #0x328
    c638:	mov	x19, x1
    c63c:	add	x20, x20, #0x1a0
    c640:	cmp	x0, x20
    c644:	b.eq	c694 <PyFloat_FromString@plt+0x5c04>  // b.none
    c648:	mov	x1, x20
    c64c:	bl	69c0 <PyType_IsSubtype@plt>
    c650:	cbnz	w0, c694 <PyFloat_FromString@plt+0x5c04>
    c654:	ldr	x2, [x19, #8]
    c658:	ldr	x0, [x2, #168]
    c65c:	tbnz	w0, #24, c6dc <PyFloat_FromString@plt+0x5c4c>
    c660:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c664:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    c668:	ldr	x2, [x2, #24]
    c66c:	add	x1, x1, #0xb70
    c670:	ldr	x0, [x0, #3936]
    c674:	mov	x20, #0x0                   	// #0
    c678:	ldr	x0, [x0]
    c67c:	bl	6a10 <PyErr_Format@plt>
    c680:	mov	x0, x20
    c684:	ldp	x19, x20, [sp, #16]
    c688:	ldr	x21, [sp, #32]
    c68c:	ldp	x29, x30, [sp], #48
    c690:	ret
    c694:	ldr	x0, [x19]
    c698:	add	x0, x0, #0x1
    c69c:	str	x0, [x19]
    c6a0:	mov	x1, x21
    c6a4:	mov	x0, x19
    c6a8:	bl	c508 <PyFloat_FromString@plt+0x5a78>
    c6ac:	mov	x20, x0
    c6b0:	ldr	x1, [x19]
    c6b4:	sub	x0, x1, #0x1
    c6b8:	str	x0, [x19]
    c6bc:	cbnz	x0, c680 <PyFloat_FromString@plt+0x5bf0>
    c6c0:	mov	x0, x19
    c6c4:	bl	65d0 <_Py_Dealloc@plt>
    c6c8:	mov	x0, x20
    c6cc:	ldp	x19, x20, [sp, #16]
    c6d0:	ldr	x21, [sp, #32]
    c6d4:	ldp	x29, x30, [sp], #48
    c6d8:	ret
    c6dc:	mov	x1, x19
    c6e0:	mov	x0, x20
    c6e4:	mov	x2, x21
    c6e8:	mov	x20, #0x0                   	// #0
    c6ec:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    c6f0:	mov	x19, x0
    c6f4:	cbnz	x0, c6a0 <PyFloat_FromString@plt+0x5c10>
    c6f8:	b	c680 <PyFloat_FromString@plt+0x5bf0>
    c6fc:	nop
    c700:	stp	x29, x30, [sp, #-48]!
    c704:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    c708:	add	x3, x3, #0x9b0
    c70c:	mov	x29, sp
    c710:	stp	x19, x20, [sp, #16]
    c714:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    c718:	mov	x20, x0
    c71c:	ldr	x19, [x19, #4008]
    c720:	mov	x0, x1
    c724:	add	x3, x3, #0x2e0
    c728:	mov	x1, x2
    c72c:	add	x4, sp, #0x20
    c730:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    c734:	add	x2, x2, #0xba0
    c738:	str	x19, [sp, #32]
    c73c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    c740:	cbz	w0, c7a8 <PyFloat_FromString@plt+0x5d18>
    c744:	ldr	x2, [sp, #32]
    c748:	cmp	x2, x19
    c74c:	b.eq	c7b8 <PyFloat_FromString@plt+0x5d28>  // b.none
    c750:	ldr	x0, [x2, #8]
    c754:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
    c758:	add	x1, x1, #0x328
    c75c:	cmp	x0, x1
    c760:	b.eq	c770 <PyFloat_FromString@plt+0x5ce0>  // b.none
    c764:	bl	69c0 <PyType_IsSubtype@plt>
    c768:	cbz	w0, c78c <PyFloat_FromString@plt+0x5cfc>
    c76c:	ldr	x2, [sp, #32]
    c770:	add	x1, x2, #0x10
    c774:	add	x0, x20, #0x18
    c778:	bl	31e70 <PyInit__decimal@@Base+0x15c30>
    c77c:	bl	6960 <PyUnicode_FromString@plt>
    c780:	ldp	x19, x20, [sp, #16]
    c784:	ldp	x29, x30, [sp], #48
    c788:	ret
    c78c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c790:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    c794:	add	x1, x1, #0xba8
    c798:	ldr	x0, [x0, #3936]
    c79c:	ldr	x0, [x0]
    c7a0:	bl	6650 <PyErr_SetString@plt>
    c7a4:	nop
    c7a8:	mov	x0, #0x0                   	// #0
    c7ac:	ldp	x19, x20, [sp, #16]
    c7b0:	ldp	x29, x30, [sp], #48
    c7b4:	ret
    c7b8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    c7bc:	add	x2, sp, #0x28
    c7c0:	mov	x1, #0x0                   	// #0
    c7c4:	ldr	x0, [x0, #2056]
    c7c8:	bl	6740 <PyContextVar_Get@plt>
    c7cc:	tbnz	w0, #31, c7a8 <PyFloat_FromString@plt+0x5d18>
    c7d0:	ldr	x2, [sp, #40]
    c7d4:	cbz	x2, c7fc <PyFloat_FromString@plt+0x5d6c>
    c7d8:	str	x2, [sp, #32]
    c7dc:	ldr	x0, [x2]
    c7e0:	sub	x0, x0, #0x1
    c7e4:	str	x0, [x2]
    c7e8:	cbnz	x0, c770 <PyFloat_FromString@plt+0x5ce0>
    c7ec:	mov	x0, x2
    c7f0:	bl	65d0 <_Py_Dealloc@plt>
    c7f4:	ldr	x2, [sp, #32]
    c7f8:	b	c770 <PyFloat_FromString@plt+0x5ce0>
    c7fc:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    c800:	str	x0, [sp, #32]
    c804:	mov	x2, x0
    c808:	cbnz	x0, c7dc <PyFloat_FromString@plt+0x5d4c>
    c80c:	mov	x0, #0x0                   	// #0
    c810:	b	c7ac <PyFloat_FromString@plt+0x5d1c>
    c814:	nop
    c818:	stp	x29, x30, [sp, #-48]!
    c81c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    c820:	add	x3, x3, #0x9b0
    c824:	mov	x29, sp
    c828:	stp	x19, x20, [sp, #16]
    c82c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    c830:	mov	x20, x0
    c834:	ldr	x19, [x19, #4008]
    c838:	mov	x0, x1
    c83c:	add	x3, x3, #0x2f0
    c840:	mov	x1, x2
    c844:	add	x4, sp, #0x20
    c848:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    c84c:	add	x2, x2, #0xba0
    c850:	str	x19, [sp, #32]
    c854:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    c858:	cbz	w0, c8f8 <PyFloat_FromString@plt+0x5e68>
    c85c:	ldr	x2, [sp, #32]
    c860:	cmp	x2, x19
    c864:	b.eq	c908 <PyFloat_FromString@plt+0x5e78>  // b.none
    c868:	ldr	x0, [x2, #8]
    c86c:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
    c870:	add	x1, x1, #0x328
    c874:	cmp	x0, x1
    c878:	b.eq	c888 <PyFloat_FromString@plt+0x5df8>  // b.none
    c87c:	bl	69c0 <PyType_IsSubtype@plt>
    c880:	cbz	w0, c8e0 <PyFloat_FromString@plt+0x5e50>
    c884:	ldr	x2, [sp, #32]
    c888:	add	x1, x2, #0x10
    c88c:	add	x0, x20, #0x18
    c890:	bl	2a928 <PyInit__decimal@@Base+0xe6e8>
    c894:	cbnz	w0, c8bc <PyFloat_FromString@plt+0x5e2c>
    c898:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    c89c:	ldp	x19, x20, [sp, #16]
    c8a0:	ldr	x1, [x1, #3976]
    c8a4:	mov	x0, x1
    c8a8:	ldr	x2, [x1]
    c8ac:	add	x2, x2, #0x1
    c8b0:	str	x2, [x1]
    c8b4:	ldp	x29, x30, [sp], #48
    c8b8:	ret
    c8bc:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    c8c0:	ldp	x19, x20, [sp, #16]
    c8c4:	ldr	x1, [x1, #4024]
    c8c8:	mov	x0, x1
    c8cc:	ldr	x2, [x1]
    c8d0:	add	x2, x2, #0x1
    c8d4:	str	x2, [x1]
    c8d8:	ldp	x29, x30, [sp], #48
    c8dc:	ret
    c8e0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    c8e4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    c8e8:	add	x1, x1, #0xba8
    c8ec:	ldr	x0, [x0, #3936]
    c8f0:	ldr	x0, [x0]
    c8f4:	bl	6650 <PyErr_SetString@plt>
    c8f8:	mov	x0, #0x0                   	// #0
    c8fc:	ldp	x19, x20, [sp, #16]
    c900:	ldp	x29, x30, [sp], #48
    c904:	ret
    c908:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    c90c:	add	x2, sp, #0x28
    c910:	mov	x1, #0x0                   	// #0
    c914:	ldr	x0, [x0, #2056]
    c918:	bl	6740 <PyContextVar_Get@plt>
    c91c:	tbnz	w0, #31, c8f8 <PyFloat_FromString@plt+0x5e68>
    c920:	ldr	x2, [sp, #40]
    c924:	cbz	x2, c94c <PyFloat_FromString@plt+0x5ebc>
    c928:	str	x2, [sp, #32]
    c92c:	ldr	x0, [x2]
    c930:	sub	x0, x0, #0x1
    c934:	str	x0, [x2]
    c938:	cbnz	x0, c888 <PyFloat_FromString@plt+0x5df8>
    c93c:	mov	x0, x2
    c940:	bl	65d0 <_Py_Dealloc@plt>
    c944:	ldr	x2, [sp, #32]
    c948:	b	c888 <PyFloat_FromString@plt+0x5df8>
    c94c:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    c950:	str	x0, [sp, #32]
    c954:	mov	x2, x0
    c958:	cbnz	x0, c92c <PyFloat_FromString@plt+0x5e9c>
    c95c:	mov	x0, #0x0                   	// #0
    c960:	b	c8fc <PyFloat_FromString@plt+0x5e6c>
    c964:	nop
    c968:	stp	x29, x30, [sp, #-48]!
    c96c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    c970:	add	x3, x3, #0x9b0
    c974:	mov	x29, sp
    c978:	stp	x19, x20, [sp, #16]
    c97c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    c980:	mov	x20, x0
    c984:	ldr	x19, [x19, #4008]
    c988:	mov	x0, x1
    c98c:	add	x3, x3, #0x300
    c990:	mov	x1, x2
    c994:	add	x4, sp, #0x20
    c998:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    c99c:	add	x2, x2, #0xba0
    c9a0:	str	x19, [sp, #32]
    c9a4:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    c9a8:	cbz	w0, ca48 <PyFloat_FromString@plt+0x5fb8>
    c9ac:	ldr	x2, [sp, #32]
    c9b0:	cmp	x2, x19
    c9b4:	b.eq	ca58 <PyFloat_FromString@plt+0x5fc8>  // b.none
    c9b8:	ldr	x0, [x2, #8]
    c9bc:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
    c9c0:	add	x1, x1, #0x328
    c9c4:	cmp	x0, x1
    c9c8:	b.eq	c9d8 <PyFloat_FromString@plt+0x5f48>  // b.none
    c9cc:	bl	69c0 <PyType_IsSubtype@plt>
    c9d0:	cbz	w0, ca30 <PyFloat_FromString@plt+0x5fa0>
    c9d4:	ldr	x2, [sp, #32]
    c9d8:	add	x1, x2, #0x10
    c9dc:	add	x0, x20, #0x18
    c9e0:	bl	2a978 <PyInit__decimal@@Base+0xe738>
    c9e4:	cbnz	w0, ca0c <PyFloat_FromString@plt+0x5f7c>
    c9e8:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    c9ec:	ldp	x19, x20, [sp, #16]
    c9f0:	ldr	x1, [x1, #3976]
    c9f4:	mov	x0, x1
    c9f8:	ldr	x2, [x1]
    c9fc:	add	x2, x2, #0x1
    ca00:	str	x2, [x1]
    ca04:	ldp	x29, x30, [sp], #48
    ca08:	ret
    ca0c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    ca10:	ldp	x19, x20, [sp, #16]
    ca14:	ldr	x1, [x1, #4024]
    ca18:	mov	x0, x1
    ca1c:	ldr	x2, [x1]
    ca20:	add	x2, x2, #0x1
    ca24:	str	x2, [x1]
    ca28:	ldp	x29, x30, [sp], #48
    ca2c:	ret
    ca30:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    ca34:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    ca38:	add	x1, x1, #0xba8
    ca3c:	ldr	x0, [x0, #3936]
    ca40:	ldr	x0, [x0]
    ca44:	bl	6650 <PyErr_SetString@plt>
    ca48:	mov	x0, #0x0                   	// #0
    ca4c:	ldp	x19, x20, [sp, #16]
    ca50:	ldp	x29, x30, [sp], #48
    ca54:	ret
    ca58:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    ca5c:	add	x2, sp, #0x28
    ca60:	mov	x1, #0x0                   	// #0
    ca64:	ldr	x0, [x0, #2056]
    ca68:	bl	6740 <PyContextVar_Get@plt>
    ca6c:	tbnz	w0, #31, ca48 <PyFloat_FromString@plt+0x5fb8>
    ca70:	ldr	x2, [sp, #40]
    ca74:	cbz	x2, ca9c <PyFloat_FromString@plt+0x600c>
    ca78:	str	x2, [sp, #32]
    ca7c:	ldr	x0, [x2]
    ca80:	sub	x0, x0, #0x1
    ca84:	str	x0, [x2]
    ca88:	cbnz	x0, c9d8 <PyFloat_FromString@plt+0x5f48>
    ca8c:	mov	x0, x2
    ca90:	bl	65d0 <_Py_Dealloc@plt>
    ca94:	ldr	x2, [sp, #32]
    ca98:	b	c9d8 <PyFloat_FromString@plt+0x5f48>
    ca9c:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    caa0:	str	x0, [sp, #32]
    caa4:	mov	x2, x0
    caa8:	cbnz	x0, ca7c <PyFloat_FromString@plt+0x5fec>
    caac:	mov	x0, #0x0                   	// #0
    cab0:	b	ca4c <PyFloat_FromString@plt+0x5fbc>
    cab4:	nop
    cab8:	stp	x29, x30, [sp, #-48]!
    cabc:	mov	x29, sp
    cac0:	stp	x19, x20, [sp, #16]
    cac4:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    cac8:	add	x1, x19, #0x328
    cacc:	ldr	x20, [x0, #24]
    cad0:	ldr	x0, [x20, #8]
    cad4:	cmp	x0, x1
    cad8:	b.eq	cae4 <PyFloat_FromString@plt+0x6054>  // b.none
    cadc:	bl	69c0 <PyType_IsSubtype@plt>
    cae0:	cbz	w0, cbf0 <PyFloat_FromString@plt+0x6160>
    cae4:	str	x21, [sp, #32]
    cae8:	adrp	x21, 65000 <PyInit__decimal@@Base+0x48dc0>
    caec:	add	x0, x21, #0x7a0
    caf0:	ldr	x1, [x0, #96]
    caf4:	cmp	x20, x1
    caf8:	b.eq	cb28 <PyFloat_FromString@plt+0x6098>  // b.none
    cafc:	ldr	x1, [x0, #112]
    cb00:	cmp	x20, x1
    cb04:	b.eq	cb28 <PyFloat_FromString@plt+0x6098>  // b.none
    cb08:	ldr	x0, [x0, #120]
    cb0c:	cmp	x20, x0
    cb10:	b.eq	cb28 <PyFloat_FromString@plt+0x6098>  // b.none
    cb14:	ldr	x0, [x20]
    cb18:	mov	x19, x20
    cb1c:	add	x0, x0, #0x1
    cb20:	str	x0, [x20]
    cb24:	b	cb60 <PyFloat_FromString@plt+0x60d0>
    cb28:	add	x0, x19, #0x328
    cb2c:	mov	x1, #0x0                   	// #0
    cb30:	bl	6840 <PyObject_CallObject@plt>
    cb34:	mov	x19, x0
    cb38:	cbz	x0, cc10 <PyFloat_FromString@plt+0x6180>
    cb3c:	ldp	x2, x3, [x20, #16]
    cb40:	stp	x2, x3, [x19, #16]
    cb44:	ldp	x2, x3, [x20, #32]
    cb48:	stp	x2, x3, [x19, #32]
    cb4c:	ldp	x2, x3, [x20, #48]
    cb50:	stp	x2, x3, [x19, #48]
    cb54:	ldr	w0, [x20, #80]
    cb58:	stur	xzr, [x19, #44]
    cb5c:	str	w0, [x19, #80]
    cb60:	add	x21, x21, #0x7a0
    cb64:	mov	x1, x19
    cb68:	ldr	x0, [x21, #104]
    cb6c:	bl	6680 <PyContextVar_Set@plt>
    cb70:	mov	x20, x0
    cb74:	ldr	x1, [x19]
    cb78:	sub	x0, x1, #0x1
    cb7c:	str	x0, [x19]
    cb80:	cbz	x0, cbc8 <PyFloat_FromString@plt+0x6138>
    cb84:	cbz	x20, cc10 <PyFloat_FromString@plt+0x6180>
    cb88:	ldr	x0, [x20]
    cb8c:	sub	x0, x0, #0x1
    cb90:	str	x0, [x20]
    cb94:	cbz	x0, cbe4 <PyFloat_FromString@plt+0x6154>
    cb98:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    cb9c:	ldr	x20, [x19, #4008]
    cba0:	ldr	x1, [x20]
    cba4:	cbz	x1, cbd4 <PyFloat_FromString@plt+0x6144>
    cba8:	ldr	x19, [x19, #4008]
    cbac:	add	x1, x1, #0x1
    cbb0:	ldr	x21, [sp, #32]
    cbb4:	mov	x0, x19
    cbb8:	str	x1, [x19]
    cbbc:	ldp	x19, x20, [sp, #16]
    cbc0:	ldp	x29, x30, [sp], #48
    cbc4:	ret
    cbc8:	mov	x0, x19
    cbcc:	bl	65d0 <_Py_Dealloc@plt>
    cbd0:	b	cb84 <PyFloat_FromString@plt+0x60f4>
    cbd4:	mov	x0, x20
    cbd8:	bl	65d0 <_Py_Dealloc@plt>
    cbdc:	ldr	x1, [x20]
    cbe0:	b	cba8 <PyFloat_FromString@plt+0x6118>
    cbe4:	mov	x0, x20
    cbe8:	bl	65d0 <_Py_Dealloc@plt>
    cbec:	b	cb98 <PyFloat_FromString@plt+0x6108>
    cbf0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    cbf4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    cbf8:	add	x1, x1, #0xa20
    cbfc:	ldr	x0, [x0, #3936]
    cc00:	ldr	x0, [x0]
    cc04:	bl	6650 <PyErr_SetString@plt>
    cc08:	mov	x0, #0x0                   	// #0
    cc0c:	b	cbbc <PyFloat_FromString@plt+0x612c>
    cc10:	mov	x0, #0x0                   	// #0
    cc14:	ldp	x19, x20, [sp, #16]
    cc18:	ldr	x21, [sp, #32]
    cc1c:	ldp	x29, x30, [sp], #48
    cc20:	ret
    cc24:	nop
    cc28:	stp	x29, x30, [sp, #-48]!
    cc2c:	mov	x29, sp
    cc30:	stp	x19, x20, [sp, #16]
    cc34:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    cc38:	add	x1, x19, #0x328
    cc3c:	ldr	x20, [x0, #16]
    cc40:	stp	x21, x22, [sp, #32]
    cc44:	mov	x21, x0
    cc48:	ldr	x0, [x20, #8]
    cc4c:	cmp	x0, x1
    cc50:	b.eq	cc5c <PyFloat_FromString@plt+0x61cc>  // b.none
    cc54:	bl	69c0 <PyType_IsSubtype@plt>
    cc58:	cbz	w0, cd5c <PyFloat_FromString@plt+0x62cc>
    cc5c:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
    cc60:	add	x0, x22, #0x7a0
    cc64:	ldr	x1, [x0, #96]
    cc68:	cmp	x20, x1
    cc6c:	b.eq	cc9c <PyFloat_FromString@plt+0x620c>  // b.none
    cc70:	ldr	x1, [x0, #112]
    cc74:	cmp	x20, x1
    cc78:	b.eq	cc9c <PyFloat_FromString@plt+0x620c>  // b.none
    cc7c:	ldr	x0, [x0, #120]
    cc80:	cmp	x20, x0
    cc84:	b.eq	cc9c <PyFloat_FromString@plt+0x620c>  // b.none
    cc88:	ldr	x0, [x20]
    cc8c:	mov	x19, x20
    cc90:	add	x0, x0, #0x1
    cc94:	str	x0, [x20]
    cc98:	b	ccd4 <PyFloat_FromString@plt+0x6244>
    cc9c:	add	x0, x19, #0x328
    cca0:	mov	x1, #0x0                   	// #0
    cca4:	bl	6840 <PyObject_CallObject@plt>
    cca8:	mov	x19, x0
    ccac:	cbz	x0, cd7c <PyFloat_FromString@plt+0x62ec>
    ccb0:	ldp	x2, x3, [x20, #16]
    ccb4:	stp	x2, x3, [x19, #16]
    ccb8:	ldp	x2, x3, [x20, #32]
    ccbc:	stp	x2, x3, [x19, #32]
    ccc0:	ldp	x2, x3, [x20, #48]
    ccc4:	stp	x2, x3, [x19, #48]
    ccc8:	ldr	w0, [x20, #80]
    cccc:	stur	xzr, [x19, #44]
    ccd0:	str	w0, [x19, #80]
    ccd4:	add	x22, x22, #0x7a0
    ccd8:	mov	x1, x19
    ccdc:	ldr	x0, [x22, #104]
    cce0:	bl	6680 <PyContextVar_Set@plt>
    cce4:	mov	x20, x0
    cce8:	ldr	x1, [x19]
    ccec:	sub	x0, x1, #0x1
    ccf0:	str	x0, [x19]
    ccf4:	cbz	x0, cd3c <PyFloat_FromString@plt+0x62ac>
    ccf8:	cbz	x20, cd7c <PyFloat_FromString@plt+0x62ec>
    ccfc:	ldr	x0, [x20]
    cd00:	sub	x0, x0, #0x1
    cd04:	str	x0, [x20]
    cd08:	cbz	x0, cd50 <PyFloat_FromString@plt+0x62c0>
    cd0c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    cd10:	ldr	x0, [x0, #4008]
    cd14:	ldr	x1, [x0]
    cd18:	cbz	x1, cd48 <PyFloat_FromString@plt+0x62b8>
    cd1c:	ldr	x0, [x21, #16]
    cd20:	ldr	x1, [x0]
    cd24:	add	x1, x1, #0x1
    cd28:	str	x1, [x0]
    cd2c:	ldp	x19, x20, [sp, #16]
    cd30:	ldp	x21, x22, [sp, #32]
    cd34:	ldp	x29, x30, [sp], #48
    cd38:	ret
    cd3c:	mov	x0, x19
    cd40:	bl	65d0 <_Py_Dealloc@plt>
    cd44:	b	ccf8 <PyFloat_FromString@plt+0x6268>
    cd48:	bl	65d0 <_Py_Dealloc@plt>
    cd4c:	b	cd1c <PyFloat_FromString@plt+0x628c>
    cd50:	mov	x0, x20
    cd54:	bl	65d0 <_Py_Dealloc@plt>
    cd58:	b	cd0c <PyFloat_FromString@plt+0x627c>
    cd5c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    cd60:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    cd64:	add	x1, x1, #0xa20
    cd68:	ldr	x0, [x0, #3936]
    cd6c:	ldr	x0, [x0]
    cd70:	bl	6650 <PyErr_SetString@plt>
    cd74:	mov	x0, #0x0                   	// #0
    cd78:	b	cd2c <PyFloat_FromString@plt+0x629c>
    cd7c:	mov	x0, #0x0                   	// #0
    cd80:	ldp	x19, x20, [sp, #16]
    cd84:	ldp	x21, x22, [sp, #32]
    cd88:	ldp	x29, x30, [sp], #48
    cd8c:	ret
    cd90:	stp	x29, x30, [sp, #-64]!
    cd94:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    cd98:	add	x3, x3, #0x9b0
    cd9c:	mov	x29, sp
    cda0:	stp	x19, x20, [sp, #16]
    cda4:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    cda8:	mov	x20, x0
    cdac:	ldr	x19, [x19, #4008]
    cdb0:	mov	x0, x1
    cdb4:	add	x3, x3, #0x310
    cdb8:	mov	x1, x2
    cdbc:	add	x4, sp, #0x30
    cdc0:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    cdc4:	add	x2, x2, #0xba0
    cdc8:	str	x19, [sp, #48]
    cdcc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    cdd0:	cbz	w0, ce8c <PyFloat_FromString@plt+0x63fc>
    cdd4:	ldr	x2, [sp, #48]
    cdd8:	cmp	x2, x19
    cddc:	b.eq	cea0 <PyFloat_FromString@plt+0x6410>  // b.none
    cde0:	ldr	x0, [x2, #8]
    cde4:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
    cde8:	add	x1, x1, #0x328
    cdec:	add	x19, sp, #0x38
    cdf0:	cmp	x0, x1
    cdf4:	b.eq	ce08 <PyFloat_FromString@plt+0x6378>  // b.none
    cdf8:	bl	69c0 <PyType_IsSubtype@plt>
    cdfc:	cbz	w0, cf00 <PyFloat_FromString@plt+0x6470>
    ce00:	ldr	x2, [sp, #48]
    ce04:	add	x19, sp, #0x38
    ce08:	ldr	w2, [x2, #80]
    ce0c:	add	x1, x20, #0x18
    ce10:	mov	x0, x19
    ce14:	bl	25e90 <PyInit__decimal@@Base+0x9c50>
    ce18:	mov	x20, x0
    ce1c:	tbnz	x0, #63, ce88 <PyFloat_FromString@plt+0x63f8>
    ce20:	mov	w1, #0x7f                  	// #127
    ce24:	str	x21, [sp, #32]
    ce28:	ldr	x21, [sp, #56]
    ce2c:	bl	6a50 <PyUnicode_New@plt>
    ce30:	mov	x19, x0
    ce34:	cbz	x0, ce50 <PyFloat_FromString@plt+0x63c0>
    ce38:	ldrb	w0, [x0, #32]
    ce3c:	tbnz	w0, #5, ce74 <PyFloat_FromString@plt+0x63e4>
    ce40:	ldr	x0, [x19, #72]
    ce44:	mov	x2, x20
    ce48:	mov	x1, x21
    ce4c:	bl	6470 <memcpy@plt>
    ce50:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
    ce54:	ldr	x0, [sp, #56]
    ce58:	ldr	x1, [x1, #1912]
    ce5c:	blr	x1
    ce60:	ldr	x21, [sp, #32]
    ce64:	mov	x0, x19
    ce68:	ldp	x19, x20, [sp, #16]
    ce6c:	ldp	x29, x30, [sp], #64
    ce70:	ret
    ce74:	tst	x0, #0x40
    ce78:	add	x1, x19, #0x48
    ce7c:	add	x0, x19, #0x30
    ce80:	csel	x0, x1, x0, eq  // eq = none
    ce84:	b	ce44 <PyFloat_FromString@plt+0x63b4>
    ce88:	bl	65e0 <PyErr_NoMemory@plt>
    ce8c:	mov	x19, #0x0                   	// #0
    ce90:	mov	x0, x19
    ce94:	ldp	x19, x20, [sp, #16]
    ce98:	ldp	x29, x30, [sp], #64
    ce9c:	ret
    cea0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    cea4:	add	x19, sp, #0x38
    cea8:	mov	x2, x19
    ceac:	mov	x1, #0x0                   	// #0
    ceb0:	ldr	x0, [x0, #2056]
    ceb4:	bl	6740 <PyContextVar_Get@plt>
    ceb8:	tbnz	w0, #31, ce8c <PyFloat_FromString@plt+0x63fc>
    cebc:	ldr	x2, [sp, #56]
    cec0:	cbz	x2, cee8 <PyFloat_FromString@plt+0x6458>
    cec4:	str	x2, [sp, #48]
    cec8:	ldr	x0, [x2]
    cecc:	sub	x0, x0, #0x1
    ced0:	str	x0, [x2]
    ced4:	cbnz	x0, ce08 <PyFloat_FromString@plt+0x6378>
    ced8:	mov	x0, x2
    cedc:	bl	65d0 <_Py_Dealloc@plt>
    cee0:	ldr	x2, [sp, #48]
    cee4:	b	ce08 <PyFloat_FromString@plt+0x6378>
    cee8:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    ceec:	str	x0, [sp, #48]
    cef0:	mov	x2, x0
    cef4:	cbnz	x0, cec8 <PyFloat_FromString@plt+0x6438>
    cef8:	mov	x19, #0x0                   	// #0
    cefc:	b	ce90 <PyFloat_FromString@plt+0x6400>
    cf00:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    cf04:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    cf08:	mov	x19, #0x0                   	// #0
    cf0c:	add	x1, x1, #0xba8
    cf10:	ldr	x0, [x0, #3936]
    cf14:	ldr	x0, [x0]
    cf18:	bl	6650 <PyErr_SetString@plt>
    cf1c:	b	ce64 <PyFloat_FromString@plt+0x63d4>
    cf20:	stp	x29, x30, [sp, #-64]!
    cf24:	mov	x29, sp
    cf28:	stp	x21, x22, [sp, #32]
    cf2c:	mov	x22, x0
    cf30:	adrp	x21, 63000 <PyInit__decimal@@Base+0x46dc0>
    cf34:	ldr	x0, [x1, #8]
    cf38:	stp	x19, x20, [sp, #16]
    cf3c:	add	x19, x21, #0x328
    cf40:	str	wzr, [sp, #60]
    cf44:	add	x19, x19, #0x1a0
    cf48:	mov	x20, x1
    cf4c:	cmp	x0, x19
    cf50:	b.eq	cfa0 <PyFloat_FromString@plt+0x6510>  // b.none
    cf54:	mov	x1, x19
    cf58:	bl	69c0 <PyType_IsSubtype@plt>
    cf5c:	cbnz	w0, cfa0 <PyFloat_FromString@plt+0x6510>
    cf60:	ldr	x2, [x20, #8]
    cf64:	ldr	x0, [x2, #168]
    cf68:	tbnz	w0, #24, d05c <PyFloat_FromString@plt+0x65cc>
    cf6c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    cf70:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    cf74:	ldr	x2, [x2, #24]
    cf78:	add	x1, x1, #0xb70
    cf7c:	ldr	x0, [x0, #3936]
    cf80:	mov	x19, #0x0                   	// #0
    cf84:	ldr	x0, [x0]
    cf88:	bl	6a10 <PyErr_Format@plt>
    cf8c:	mov	x0, x19
    cf90:	ldp	x19, x20, [sp, #16]
    cf94:	ldp	x21, x22, [sp, #32]
    cf98:	ldp	x29, x30, [sp], #64
    cf9c:	ret
    cfa0:	ldr	x0, [x20]
    cfa4:	add	x0, x0, #0x1
    cfa8:	str	x0, [x20]
    cfac:	add	x21, x21, #0x328
    cfb0:	add	x0, x21, #0x1a0
    cfb4:	bl	6950 <_PyObject_New@plt>
    cfb8:	mov	x19, x0
    cfbc:	cbz	x0, d07c <PyFloat_FromString@plt+0x65ec>
    cfc0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    cfc4:	mov	x2, #0xffffffffffffffff    	// #-1
    cfc8:	mov	w1, #0x30                  	// #48
    cfcc:	str	x2, [x19, #16]
    cfd0:	ldr	q0, [x0, #2128]
    cfd4:	add	x0, x19, #0x48
    cfd8:	strb	w1, [x19, #24]
    cfdc:	add	x2, sp, #0x3c
    cfe0:	stp	xzr, xzr, [x19, #32]
    cfe4:	add	x1, x20, #0x18
    cfe8:	str	x0, [x19, #64]
    cfec:	add	x0, x19, #0x18
    cff0:	str	q0, [x19, #48]
    cff4:	bl	2d908 <PyInit__decimal@@Base+0x116c8>
    cff8:	ldr	x0, [x20]
    cffc:	sub	x0, x0, #0x1
    d000:	str	x0, [x20]
    d004:	cbz	x0, d040 <PyFloat_FromString@plt+0x65b0>
    d008:	ldr	w1, [sp, #60]
    d00c:	mov	x0, x22
    d010:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d014:	cbz	w0, cf8c <PyFloat_FromString@plt+0x64fc>
    d018:	ldr	x0, [x19]
    d01c:	sub	x0, x0, #0x1
    d020:	str	x0, [x19]
    d024:	cbz	x0, d098 <PyFloat_FromString@plt+0x6608>
    d028:	mov	x19, #0x0                   	// #0
    d02c:	mov	x0, x19
    d030:	ldp	x19, x20, [sp, #16]
    d034:	ldp	x21, x22, [sp, #32]
    d038:	ldp	x29, x30, [sp], #64
    d03c:	ret
    d040:	mov	x0, x20
    d044:	bl	65d0 <_Py_Dealloc@plt>
    d048:	ldr	w1, [sp, #60]
    d04c:	mov	x0, x22
    d050:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d054:	cbz	w0, cf8c <PyFloat_FromString@plt+0x64fc>
    d058:	b	d018 <PyFloat_FromString@plt+0x6588>
    d05c:	mov	x1, x20
    d060:	mov	x0, x19
    d064:	mov	x2, x22
    d068:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d06c:	mov	x20, x0
    d070:	cbnz	x0, cfac <PyFloat_FromString@plt+0x651c>
    d074:	mov	x19, #0x0                   	// #0
    d078:	b	d02c <PyFloat_FromString@plt+0x659c>
    d07c:	ldr	x0, [x20]
    d080:	sub	x0, x0, #0x1
    d084:	str	x0, [x20]
    d088:	cbnz	x0, d028 <PyFloat_FromString@plt+0x6598>
    d08c:	mov	x0, x20
    d090:	bl	65d0 <_Py_Dealloc@plt>
    d094:	b	cf8c <PyFloat_FromString@plt+0x64fc>
    d098:	mov	x0, x19
    d09c:	mov	x19, #0x0                   	// #0
    d0a0:	bl	65d0 <_Py_Dealloc@plt>
    d0a4:	b	cf8c <PyFloat_FromString@plt+0x64fc>
    d0a8:	stp	x29, x30, [sp, #-64]!
    d0ac:	mov	x29, sp
    d0b0:	stp	x21, x22, [sp, #32]
    d0b4:	mov	x22, x0
    d0b8:	adrp	x21, 63000 <PyInit__decimal@@Base+0x46dc0>
    d0bc:	ldr	x0, [x1, #8]
    d0c0:	stp	x19, x20, [sp, #16]
    d0c4:	add	x19, x21, #0x328
    d0c8:	str	wzr, [sp, #60]
    d0cc:	add	x19, x19, #0x1a0
    d0d0:	mov	x20, x1
    d0d4:	cmp	x0, x19
    d0d8:	b.eq	d128 <PyFloat_FromString@plt+0x6698>  // b.none
    d0dc:	mov	x1, x19
    d0e0:	bl	69c0 <PyType_IsSubtype@plt>
    d0e4:	cbnz	w0, d128 <PyFloat_FromString@plt+0x6698>
    d0e8:	ldr	x2, [x20, #8]
    d0ec:	ldr	x0, [x2, #168]
    d0f0:	tbnz	w0, #24, d1e4 <PyFloat_FromString@plt+0x6754>
    d0f4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    d0f8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    d0fc:	ldr	x2, [x2, #24]
    d100:	add	x1, x1, #0xb70
    d104:	ldr	x0, [x0, #3936]
    d108:	mov	x19, #0x0                   	// #0
    d10c:	ldr	x0, [x0]
    d110:	bl	6a10 <PyErr_Format@plt>
    d114:	mov	x0, x19
    d118:	ldp	x19, x20, [sp, #16]
    d11c:	ldp	x21, x22, [sp, #32]
    d120:	ldp	x29, x30, [sp], #64
    d124:	ret
    d128:	ldr	x0, [x20]
    d12c:	add	x0, x0, #0x1
    d130:	str	x0, [x20]
    d134:	add	x21, x21, #0x328
    d138:	add	x0, x21, #0x1a0
    d13c:	bl	6950 <_PyObject_New@plt>
    d140:	mov	x19, x0
    d144:	cbz	x0, d204 <PyFloat_FromString@plt+0x6774>
    d148:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    d14c:	mov	x2, #0xffffffffffffffff    	// #-1
    d150:	mov	w1, #0x30                  	// #48
    d154:	str	x2, [x19, #16]
    d158:	ldr	q0, [x0, #2128]
    d15c:	add	x0, x19, #0x48
    d160:	strb	w1, [x19, #24]
    d164:	add	x2, sp, #0x3c
    d168:	stp	xzr, xzr, [x19, #32]
    d16c:	add	x1, x20, #0x18
    d170:	str	x0, [x19, #64]
    d174:	add	x0, x19, #0x18
    d178:	str	q0, [x19, #48]
    d17c:	bl	2d940 <PyInit__decimal@@Base+0x11700>
    d180:	ldr	x0, [x20]
    d184:	sub	x0, x0, #0x1
    d188:	str	x0, [x20]
    d18c:	cbz	x0, d1c8 <PyFloat_FromString@plt+0x6738>
    d190:	ldr	w1, [sp, #60]
    d194:	mov	x0, x22
    d198:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d19c:	cbz	w0, d114 <PyFloat_FromString@plt+0x6684>
    d1a0:	ldr	x0, [x19]
    d1a4:	sub	x0, x0, #0x1
    d1a8:	str	x0, [x19]
    d1ac:	cbz	x0, d220 <PyFloat_FromString@plt+0x6790>
    d1b0:	mov	x19, #0x0                   	// #0
    d1b4:	mov	x0, x19
    d1b8:	ldp	x19, x20, [sp, #16]
    d1bc:	ldp	x21, x22, [sp, #32]
    d1c0:	ldp	x29, x30, [sp], #64
    d1c4:	ret
    d1c8:	mov	x0, x20
    d1cc:	bl	65d0 <_Py_Dealloc@plt>
    d1d0:	ldr	w1, [sp, #60]
    d1d4:	mov	x0, x22
    d1d8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d1dc:	cbz	w0, d114 <PyFloat_FromString@plt+0x6684>
    d1e0:	b	d1a0 <PyFloat_FromString@plt+0x6710>
    d1e4:	mov	x1, x20
    d1e8:	mov	x0, x19
    d1ec:	mov	x2, x22
    d1f0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d1f4:	mov	x20, x0
    d1f8:	cbnz	x0, d134 <PyFloat_FromString@plt+0x66a4>
    d1fc:	mov	x19, #0x0                   	// #0
    d200:	b	d1b4 <PyFloat_FromString@plt+0x6724>
    d204:	ldr	x0, [x20]
    d208:	sub	x0, x0, #0x1
    d20c:	str	x0, [x20]
    d210:	cbnz	x0, d1b0 <PyFloat_FromString@plt+0x6720>
    d214:	mov	x0, x20
    d218:	bl	65d0 <_Py_Dealloc@plt>
    d21c:	b	d114 <PyFloat_FromString@plt+0x6684>
    d220:	mov	x0, x19
    d224:	mov	x19, #0x0                   	// #0
    d228:	bl	65d0 <_Py_Dealloc@plt>
    d22c:	b	d114 <PyFloat_FromString@plt+0x6684>
    d230:	stp	x29, x30, [sp, #-64]!
    d234:	mov	x29, sp
    d238:	stp	x21, x22, [sp, #32]
    d23c:	mov	x21, x0
    d240:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    d244:	ldr	x0, [x1, #8]
    d248:	stp	x19, x20, [sp, #16]
    d24c:	add	x19, x22, #0x328
    d250:	str	wzr, [sp, #60]
    d254:	add	x19, x19, #0x1a0
    d258:	mov	x20, x1
    d25c:	cmp	x0, x19
    d260:	b.eq	d2b0 <PyFloat_FromString@plt+0x6820>  // b.none
    d264:	mov	x1, x19
    d268:	bl	69c0 <PyType_IsSubtype@plt>
    d26c:	cbnz	w0, d2b0 <PyFloat_FromString@plt+0x6820>
    d270:	ldr	x2, [x20, #8]
    d274:	ldr	x0, [x2, #168]
    d278:	tbnz	w0, #24, d370 <PyFloat_FromString@plt+0x68e0>
    d27c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    d280:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    d284:	ldr	x2, [x2, #24]
    d288:	add	x1, x1, #0xb70
    d28c:	ldr	x0, [x0, #3936]
    d290:	mov	x19, #0x0                   	// #0
    d294:	ldr	x0, [x0]
    d298:	bl	6a10 <PyErr_Format@plt>
    d29c:	mov	x0, x19
    d2a0:	ldp	x19, x20, [sp, #16]
    d2a4:	ldp	x21, x22, [sp, #32]
    d2a8:	ldp	x29, x30, [sp], #64
    d2ac:	ret
    d2b0:	ldr	x0, [x20]
    d2b4:	add	x0, x0, #0x1
    d2b8:	str	x0, [x20]
    d2bc:	add	x0, x22, #0x328
    d2c0:	add	x0, x0, #0x1a0
    d2c4:	bl	6950 <_PyObject_New@plt>
    d2c8:	mov	x19, x0
    d2cc:	cbz	x0, d390 <PyFloat_FromString@plt+0x6900>
    d2d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    d2d4:	mov	x2, #0xffffffffffffffff    	// #-1
    d2d8:	mov	w1, #0x30                  	// #48
    d2dc:	str	x2, [x19, #16]
    d2e0:	ldr	q0, [x0, #2128]
    d2e4:	add	x0, x19, #0x48
    d2e8:	strb	w1, [x19, #24]
    d2ec:	add	x3, sp, #0x3c
    d2f0:	stp	xzr, xzr, [x19, #32]
    d2f4:	add	x1, x20, #0x18
    d2f8:	add	x2, x21, #0x10
    d2fc:	str	x0, [x19, #64]
    d300:	add	x0, x19, #0x18
    d304:	str	q0, [x19, #48]
    d308:	bl	31f80 <PyInit__decimal@@Base+0x15d40>
    d30c:	ldr	x0, [x20]
    d310:	sub	x0, x0, #0x1
    d314:	str	x0, [x20]
    d318:	cbz	x0, d354 <PyFloat_FromString@plt+0x68c4>
    d31c:	ldr	w1, [sp, #60]
    d320:	mov	x0, x21
    d324:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d328:	cbz	w0, d29c <PyFloat_FromString@plt+0x680c>
    d32c:	ldr	x0, [x19]
    d330:	sub	x0, x0, #0x1
    d334:	str	x0, [x19]
    d338:	cbz	x0, d3ac <PyFloat_FromString@plt+0x691c>
    d33c:	mov	x19, #0x0                   	// #0
    d340:	mov	x0, x19
    d344:	ldp	x19, x20, [sp, #16]
    d348:	ldp	x21, x22, [sp, #32]
    d34c:	ldp	x29, x30, [sp], #64
    d350:	ret
    d354:	mov	x0, x20
    d358:	bl	65d0 <_Py_Dealloc@plt>
    d35c:	ldr	w1, [sp, #60]
    d360:	mov	x0, x21
    d364:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d368:	cbz	w0, d29c <PyFloat_FromString@plt+0x680c>
    d36c:	b	d32c <PyFloat_FromString@plt+0x689c>
    d370:	mov	x1, x20
    d374:	mov	x0, x19
    d378:	mov	x2, x21
    d37c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d380:	mov	x20, x0
    d384:	cbnz	x0, d2bc <PyFloat_FromString@plt+0x682c>
    d388:	mov	x19, #0x0                   	// #0
    d38c:	b	d340 <PyFloat_FromString@plt+0x68b0>
    d390:	ldr	x0, [x20]
    d394:	sub	x0, x0, #0x1
    d398:	str	x0, [x20]
    d39c:	cbnz	x0, d33c <PyFloat_FromString@plt+0x68ac>
    d3a0:	mov	x0, x20
    d3a4:	bl	65d0 <_Py_Dealloc@plt>
    d3a8:	b	d29c <PyFloat_FromString@plt+0x680c>
    d3ac:	mov	x0, x19
    d3b0:	mov	x19, #0x0                   	// #0
    d3b4:	bl	65d0 <_Py_Dealloc@plt>
    d3b8:	b	d29c <PyFloat_FromString@plt+0x680c>
    d3bc:	nop
    d3c0:	stp	x29, x30, [sp, #-64]!
    d3c4:	mov	x29, sp
    d3c8:	stp	x21, x22, [sp, #32]
    d3cc:	mov	x21, x0
    d3d0:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    d3d4:	ldr	x0, [x1, #8]
    d3d8:	stp	x19, x20, [sp, #16]
    d3dc:	add	x19, x22, #0x328
    d3e0:	str	wzr, [sp, #60]
    d3e4:	add	x19, x19, #0x1a0
    d3e8:	mov	x20, x1
    d3ec:	cmp	x0, x19
    d3f0:	b.eq	d440 <PyFloat_FromString@plt+0x69b0>  // b.none
    d3f4:	mov	x1, x19
    d3f8:	bl	69c0 <PyType_IsSubtype@plt>
    d3fc:	cbnz	w0, d440 <PyFloat_FromString@plt+0x69b0>
    d400:	ldr	x2, [x20, #8]
    d404:	ldr	x0, [x2, #168]
    d408:	tbnz	w0, #24, d500 <PyFloat_FromString@plt+0x6a70>
    d40c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    d410:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    d414:	ldr	x2, [x2, #24]
    d418:	add	x1, x1, #0xb70
    d41c:	ldr	x0, [x0, #3936]
    d420:	mov	x19, #0x0                   	// #0
    d424:	ldr	x0, [x0]
    d428:	bl	6a10 <PyErr_Format@plt>
    d42c:	mov	x0, x19
    d430:	ldp	x19, x20, [sp, #16]
    d434:	ldp	x21, x22, [sp, #32]
    d438:	ldp	x29, x30, [sp], #64
    d43c:	ret
    d440:	ldr	x0, [x20]
    d444:	add	x0, x0, #0x1
    d448:	str	x0, [x20]
    d44c:	add	x0, x22, #0x328
    d450:	add	x0, x0, #0x1a0
    d454:	bl	6950 <_PyObject_New@plt>
    d458:	mov	x19, x0
    d45c:	cbz	x0, d520 <PyFloat_FromString@plt+0x6a90>
    d460:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    d464:	mov	x2, #0xffffffffffffffff    	// #-1
    d468:	mov	w1, #0x30                  	// #48
    d46c:	str	x2, [x19, #16]
    d470:	ldr	q0, [x0, #2128]
    d474:	add	x0, x19, #0x48
    d478:	strb	w1, [x19, #24]
    d47c:	add	x3, sp, #0x3c
    d480:	stp	xzr, xzr, [x19, #32]
    d484:	add	x1, x20, #0x18
    d488:	add	x2, x21, #0x10
    d48c:	str	x0, [x19, #64]
    d490:	add	x0, x19, #0x18
    d494:	str	q0, [x19, #48]
    d498:	bl	39fa8 <PyInit__decimal@@Base+0x1dd68>
    d49c:	ldr	x0, [x20]
    d4a0:	sub	x0, x0, #0x1
    d4a4:	str	x0, [x20]
    d4a8:	cbz	x0, d4e4 <PyFloat_FromString@plt+0x6a54>
    d4ac:	ldr	w1, [sp, #60]
    d4b0:	mov	x0, x21
    d4b4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d4b8:	cbz	w0, d42c <PyFloat_FromString@plt+0x699c>
    d4bc:	ldr	x0, [x19]
    d4c0:	sub	x0, x0, #0x1
    d4c4:	str	x0, [x19]
    d4c8:	cbz	x0, d53c <PyFloat_FromString@plt+0x6aac>
    d4cc:	mov	x19, #0x0                   	// #0
    d4d0:	mov	x0, x19
    d4d4:	ldp	x19, x20, [sp, #16]
    d4d8:	ldp	x21, x22, [sp, #32]
    d4dc:	ldp	x29, x30, [sp], #64
    d4e0:	ret
    d4e4:	mov	x0, x20
    d4e8:	bl	65d0 <_Py_Dealloc@plt>
    d4ec:	ldr	w1, [sp, #60]
    d4f0:	mov	x0, x21
    d4f4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d4f8:	cbz	w0, d42c <PyFloat_FromString@plt+0x699c>
    d4fc:	b	d4bc <PyFloat_FromString@plt+0x6a2c>
    d500:	mov	x1, x20
    d504:	mov	x0, x19
    d508:	mov	x2, x21
    d50c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d510:	mov	x20, x0
    d514:	cbnz	x0, d44c <PyFloat_FromString@plt+0x69bc>
    d518:	mov	x19, #0x0                   	// #0
    d51c:	b	d4d0 <PyFloat_FromString@plt+0x6a40>
    d520:	ldr	x0, [x20]
    d524:	sub	x0, x0, #0x1
    d528:	str	x0, [x20]
    d52c:	cbnz	x0, d4cc <PyFloat_FromString@plt+0x6a3c>
    d530:	mov	x0, x20
    d534:	bl	65d0 <_Py_Dealloc@plt>
    d538:	b	d42c <PyFloat_FromString@plt+0x699c>
    d53c:	mov	x0, x19
    d540:	mov	x19, #0x0                   	// #0
    d544:	bl	65d0 <_Py_Dealloc@plt>
    d548:	b	d42c <PyFloat_FromString@plt+0x699c>
    d54c:	nop
    d550:	stp	x29, x30, [sp, #-64]!
    d554:	mov	x29, sp
    d558:	stp	x21, x22, [sp, #32]
    d55c:	mov	x21, x0
    d560:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    d564:	ldr	x0, [x1, #8]
    d568:	stp	x19, x20, [sp, #16]
    d56c:	add	x19, x22, #0x328
    d570:	str	wzr, [sp, #60]
    d574:	add	x19, x19, #0x1a0
    d578:	mov	x20, x1
    d57c:	cmp	x0, x19
    d580:	b.eq	d5d0 <PyFloat_FromString@plt+0x6b40>  // b.none
    d584:	mov	x1, x19
    d588:	bl	69c0 <PyType_IsSubtype@plt>
    d58c:	cbnz	w0, d5d0 <PyFloat_FromString@plt+0x6b40>
    d590:	ldr	x2, [x20, #8]
    d594:	ldr	x0, [x2, #168]
    d598:	tbnz	w0, #24, d690 <PyFloat_FromString@plt+0x6c00>
    d59c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    d5a0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    d5a4:	ldr	x2, [x2, #24]
    d5a8:	add	x1, x1, #0xb70
    d5ac:	ldr	x0, [x0, #3936]
    d5b0:	mov	x19, #0x0                   	// #0
    d5b4:	ldr	x0, [x0]
    d5b8:	bl	6a10 <PyErr_Format@plt>
    d5bc:	mov	x0, x19
    d5c0:	ldp	x19, x20, [sp, #16]
    d5c4:	ldp	x21, x22, [sp, #32]
    d5c8:	ldp	x29, x30, [sp], #64
    d5cc:	ret
    d5d0:	ldr	x0, [x20]
    d5d4:	add	x0, x0, #0x1
    d5d8:	str	x0, [x20]
    d5dc:	add	x0, x22, #0x328
    d5e0:	add	x0, x0, #0x1a0
    d5e4:	bl	6950 <_PyObject_New@plt>
    d5e8:	mov	x19, x0
    d5ec:	cbz	x0, d6b0 <PyFloat_FromString@plt+0x6c20>
    d5f0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    d5f4:	mov	x2, #0xffffffffffffffff    	// #-1
    d5f8:	mov	w1, #0x30                  	// #48
    d5fc:	str	x2, [x19, #16]
    d600:	ldr	q0, [x0, #2128]
    d604:	add	x0, x19, #0x48
    d608:	strb	w1, [x19, #24]
    d60c:	add	x3, sp, #0x3c
    d610:	stp	xzr, xzr, [x19, #32]
    d614:	add	x1, x20, #0x18
    d618:	add	x2, x21, #0x10
    d61c:	str	x0, [x19, #64]
    d620:	add	x0, x19, #0x18
    d624:	str	q0, [x19, #48]
    d628:	bl	3ae38 <PyInit__decimal@@Base+0x1ebf8>
    d62c:	ldr	x0, [x20]
    d630:	sub	x0, x0, #0x1
    d634:	str	x0, [x20]
    d638:	cbz	x0, d674 <PyFloat_FromString@plt+0x6be4>
    d63c:	ldr	w1, [sp, #60]
    d640:	mov	x0, x21
    d644:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d648:	cbz	w0, d5bc <PyFloat_FromString@plt+0x6b2c>
    d64c:	ldr	x0, [x19]
    d650:	sub	x0, x0, #0x1
    d654:	str	x0, [x19]
    d658:	cbz	x0, d6cc <PyFloat_FromString@plt+0x6c3c>
    d65c:	mov	x19, #0x0                   	// #0
    d660:	mov	x0, x19
    d664:	ldp	x19, x20, [sp, #16]
    d668:	ldp	x21, x22, [sp, #32]
    d66c:	ldp	x29, x30, [sp], #64
    d670:	ret
    d674:	mov	x0, x20
    d678:	bl	65d0 <_Py_Dealloc@plt>
    d67c:	ldr	w1, [sp, #60]
    d680:	mov	x0, x21
    d684:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d688:	cbz	w0, d5bc <PyFloat_FromString@plt+0x6b2c>
    d68c:	b	d64c <PyFloat_FromString@plt+0x6bbc>
    d690:	mov	x1, x20
    d694:	mov	x0, x19
    d698:	mov	x2, x21
    d69c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d6a0:	mov	x20, x0
    d6a4:	cbnz	x0, d5dc <PyFloat_FromString@plt+0x6b4c>
    d6a8:	mov	x19, #0x0                   	// #0
    d6ac:	b	d660 <PyFloat_FromString@plt+0x6bd0>
    d6b0:	ldr	x0, [x20]
    d6b4:	sub	x0, x0, #0x1
    d6b8:	str	x0, [x20]
    d6bc:	cbnz	x0, d65c <PyFloat_FromString@plt+0x6bcc>
    d6c0:	mov	x0, x20
    d6c4:	bl	65d0 <_Py_Dealloc@plt>
    d6c8:	b	d5bc <PyFloat_FromString@plt+0x6b2c>
    d6cc:	mov	x0, x19
    d6d0:	mov	x19, #0x0                   	// #0
    d6d4:	bl	65d0 <_Py_Dealloc@plt>
    d6d8:	b	d5bc <PyFloat_FromString@plt+0x6b2c>
    d6dc:	nop
    d6e0:	stp	x29, x30, [sp, #-64]!
    d6e4:	mov	x29, sp
    d6e8:	stp	x21, x22, [sp, #32]
    d6ec:	mov	x21, x0
    d6f0:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    d6f4:	ldr	x0, [x1, #8]
    d6f8:	stp	x19, x20, [sp, #16]
    d6fc:	add	x19, x22, #0x328
    d700:	str	wzr, [sp, #60]
    d704:	add	x19, x19, #0x1a0
    d708:	mov	x20, x1
    d70c:	cmp	x0, x19
    d710:	b.eq	d760 <PyFloat_FromString@plt+0x6cd0>  // b.none
    d714:	mov	x1, x19
    d718:	bl	69c0 <PyType_IsSubtype@plt>
    d71c:	cbnz	w0, d760 <PyFloat_FromString@plt+0x6cd0>
    d720:	ldr	x2, [x20, #8]
    d724:	ldr	x0, [x2, #168]
    d728:	tbnz	w0, #24, d820 <PyFloat_FromString@plt+0x6d90>
    d72c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    d730:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    d734:	ldr	x2, [x2, #24]
    d738:	add	x1, x1, #0xb70
    d73c:	ldr	x0, [x0, #3936]
    d740:	mov	x19, #0x0                   	// #0
    d744:	ldr	x0, [x0]
    d748:	bl	6a10 <PyErr_Format@plt>
    d74c:	mov	x0, x19
    d750:	ldp	x19, x20, [sp, #16]
    d754:	ldp	x21, x22, [sp, #32]
    d758:	ldp	x29, x30, [sp], #64
    d75c:	ret
    d760:	ldr	x0, [x20]
    d764:	add	x0, x0, #0x1
    d768:	str	x0, [x20]
    d76c:	add	x0, x22, #0x328
    d770:	add	x0, x0, #0x1a0
    d774:	bl	6950 <_PyObject_New@plt>
    d778:	mov	x19, x0
    d77c:	cbz	x0, d840 <PyFloat_FromString@plt+0x6db0>
    d780:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    d784:	mov	x2, #0xffffffffffffffff    	// #-1
    d788:	mov	w1, #0x30                  	// #48
    d78c:	str	x2, [x19, #16]
    d790:	ldr	q0, [x0, #2128]
    d794:	add	x0, x19, #0x48
    d798:	strb	w1, [x19, #24]
    d79c:	add	x3, sp, #0x3c
    d7a0:	stp	xzr, xzr, [x19, #32]
    d7a4:	add	x1, x20, #0x18
    d7a8:	add	x2, x21, #0x10
    d7ac:	str	x0, [x19, #64]
    d7b0:	add	x0, x19, #0x18
    d7b4:	str	q0, [x19, #48]
    d7b8:	bl	3a910 <PyInit__decimal@@Base+0x1e6d0>
    d7bc:	ldr	x0, [x20]
    d7c0:	sub	x0, x0, #0x1
    d7c4:	str	x0, [x20]
    d7c8:	cbz	x0, d804 <PyFloat_FromString@plt+0x6d74>
    d7cc:	ldr	w1, [sp, #60]
    d7d0:	mov	x0, x21
    d7d4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d7d8:	cbz	w0, d74c <PyFloat_FromString@plt+0x6cbc>
    d7dc:	ldr	x0, [x19]
    d7e0:	sub	x0, x0, #0x1
    d7e4:	str	x0, [x19]
    d7e8:	cbz	x0, d85c <PyFloat_FromString@plt+0x6dcc>
    d7ec:	mov	x19, #0x0                   	// #0
    d7f0:	mov	x0, x19
    d7f4:	ldp	x19, x20, [sp, #16]
    d7f8:	ldp	x21, x22, [sp, #32]
    d7fc:	ldp	x29, x30, [sp], #64
    d800:	ret
    d804:	mov	x0, x20
    d808:	bl	65d0 <_Py_Dealloc@plt>
    d80c:	ldr	w1, [sp, #60]
    d810:	mov	x0, x21
    d814:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d818:	cbz	w0, d74c <PyFloat_FromString@plt+0x6cbc>
    d81c:	b	d7dc <PyFloat_FromString@plt+0x6d4c>
    d820:	mov	x1, x20
    d824:	mov	x0, x19
    d828:	mov	x2, x21
    d82c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d830:	mov	x20, x0
    d834:	cbnz	x0, d76c <PyFloat_FromString@plt+0x6cdc>
    d838:	mov	x19, #0x0                   	// #0
    d83c:	b	d7f0 <PyFloat_FromString@plt+0x6d60>
    d840:	ldr	x0, [x20]
    d844:	sub	x0, x0, #0x1
    d848:	str	x0, [x20]
    d84c:	cbnz	x0, d7ec <PyFloat_FromString@plt+0x6d5c>
    d850:	mov	x0, x20
    d854:	bl	65d0 <_Py_Dealloc@plt>
    d858:	b	d74c <PyFloat_FromString@plt+0x6cbc>
    d85c:	mov	x0, x19
    d860:	mov	x19, #0x0                   	// #0
    d864:	bl	65d0 <_Py_Dealloc@plt>
    d868:	b	d74c <PyFloat_FromString@plt+0x6cbc>
    d86c:	nop
    d870:	stp	x29, x30, [sp, #-64]!
    d874:	mov	x29, sp
    d878:	stp	x21, x22, [sp, #32]
    d87c:	mov	x21, x0
    d880:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    d884:	ldr	x0, [x1, #8]
    d888:	stp	x19, x20, [sp, #16]
    d88c:	add	x19, x22, #0x328
    d890:	str	wzr, [sp, #60]
    d894:	add	x19, x19, #0x1a0
    d898:	mov	x20, x1
    d89c:	cmp	x0, x19
    d8a0:	b.eq	d8f0 <PyFloat_FromString@plt+0x6e60>  // b.none
    d8a4:	mov	x1, x19
    d8a8:	bl	69c0 <PyType_IsSubtype@plt>
    d8ac:	cbnz	w0, d8f0 <PyFloat_FromString@plt+0x6e60>
    d8b0:	ldr	x2, [x20, #8]
    d8b4:	ldr	x0, [x2, #168]
    d8b8:	tbnz	w0, #24, d9b0 <PyFloat_FromString@plt+0x6f20>
    d8bc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    d8c0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    d8c4:	ldr	x2, [x2, #24]
    d8c8:	add	x1, x1, #0xb70
    d8cc:	ldr	x0, [x0, #3936]
    d8d0:	mov	x19, #0x0                   	// #0
    d8d4:	ldr	x0, [x0]
    d8d8:	bl	6a10 <PyErr_Format@plt>
    d8dc:	mov	x0, x19
    d8e0:	ldp	x19, x20, [sp, #16]
    d8e4:	ldp	x21, x22, [sp, #32]
    d8e8:	ldp	x29, x30, [sp], #64
    d8ec:	ret
    d8f0:	ldr	x0, [x20]
    d8f4:	add	x0, x0, #0x1
    d8f8:	str	x0, [x20]
    d8fc:	add	x0, x22, #0x328
    d900:	add	x0, x0, #0x1a0
    d904:	bl	6950 <_PyObject_New@plt>
    d908:	mov	x19, x0
    d90c:	cbz	x0, d9d0 <PyFloat_FromString@plt+0x6f40>
    d910:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    d914:	mov	x2, #0xffffffffffffffff    	// #-1
    d918:	mov	w1, #0x30                  	// #48
    d91c:	str	x2, [x19, #16]
    d920:	ldr	q0, [x0, #2128]
    d924:	add	x0, x19, #0x48
    d928:	strb	w1, [x19, #24]
    d92c:	add	x3, sp, #0x3c
    d930:	stp	xzr, xzr, [x19, #32]
    d934:	add	x1, x20, #0x18
    d938:	add	x2, x21, #0x10
    d93c:	str	x0, [x19, #64]
    d940:	add	x0, x19, #0x18
    d944:	str	q0, [x19, #48]
    d948:	bl	3ac98 <PyInit__decimal@@Base+0x1ea58>
    d94c:	ldr	x0, [x20]
    d950:	sub	x0, x0, #0x1
    d954:	str	x0, [x20]
    d958:	cbz	x0, d994 <PyFloat_FromString@plt+0x6f04>
    d95c:	ldr	w1, [sp, #60]
    d960:	mov	x0, x21
    d964:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d968:	cbz	w0, d8dc <PyFloat_FromString@plt+0x6e4c>
    d96c:	ldr	x0, [x19]
    d970:	sub	x0, x0, #0x1
    d974:	str	x0, [x19]
    d978:	cbz	x0, d9ec <PyFloat_FromString@plt+0x6f5c>
    d97c:	mov	x19, #0x0                   	// #0
    d980:	mov	x0, x19
    d984:	ldp	x19, x20, [sp, #16]
    d988:	ldp	x21, x22, [sp, #32]
    d98c:	ldp	x29, x30, [sp], #64
    d990:	ret
    d994:	mov	x0, x20
    d998:	bl	65d0 <_Py_Dealloc@plt>
    d99c:	ldr	w1, [sp, #60]
    d9a0:	mov	x0, x21
    d9a4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    d9a8:	cbz	w0, d8dc <PyFloat_FromString@plt+0x6e4c>
    d9ac:	b	d96c <PyFloat_FromString@plt+0x6edc>
    d9b0:	mov	x1, x20
    d9b4:	mov	x0, x19
    d9b8:	mov	x2, x21
    d9bc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    d9c0:	mov	x20, x0
    d9c4:	cbnz	x0, d8fc <PyFloat_FromString@plt+0x6e6c>
    d9c8:	mov	x19, #0x0                   	// #0
    d9cc:	b	d980 <PyFloat_FromString@plt+0x6ef0>
    d9d0:	ldr	x0, [x20]
    d9d4:	sub	x0, x0, #0x1
    d9d8:	str	x0, [x20]
    d9dc:	cbnz	x0, d97c <PyFloat_FromString@plt+0x6eec>
    d9e0:	mov	x0, x20
    d9e4:	bl	65d0 <_Py_Dealloc@plt>
    d9e8:	b	d8dc <PyFloat_FromString@plt+0x6e4c>
    d9ec:	mov	x0, x19
    d9f0:	mov	x19, #0x0                   	// #0
    d9f4:	bl	65d0 <_Py_Dealloc@plt>
    d9f8:	b	d8dc <PyFloat_FromString@plt+0x6e4c>
    d9fc:	nop
    da00:	stp	x29, x30, [sp, #-64]!
    da04:	mov	x29, sp
    da08:	stp	x21, x22, [sp, #32]
    da0c:	mov	x21, x0
    da10:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    da14:	ldr	x0, [x1, #8]
    da18:	stp	x19, x20, [sp, #16]
    da1c:	add	x19, x22, #0x328
    da20:	str	wzr, [sp, #60]
    da24:	add	x19, x19, #0x1a0
    da28:	mov	x20, x1
    da2c:	cmp	x0, x19
    da30:	b.eq	da80 <PyFloat_FromString@plt+0x6ff0>  // b.none
    da34:	mov	x1, x19
    da38:	bl	69c0 <PyType_IsSubtype@plt>
    da3c:	cbnz	w0, da80 <PyFloat_FromString@plt+0x6ff0>
    da40:	ldr	x2, [x20, #8]
    da44:	ldr	x0, [x2, #168]
    da48:	tbnz	w0, #24, db40 <PyFloat_FromString@plt+0x70b0>
    da4c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    da50:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    da54:	ldr	x2, [x2, #24]
    da58:	add	x1, x1, #0xb70
    da5c:	ldr	x0, [x0, #3936]
    da60:	mov	x19, #0x0                   	// #0
    da64:	ldr	x0, [x0]
    da68:	bl	6a10 <PyErr_Format@plt>
    da6c:	mov	x0, x19
    da70:	ldp	x19, x20, [sp, #16]
    da74:	ldp	x21, x22, [sp, #32]
    da78:	ldp	x29, x30, [sp], #64
    da7c:	ret
    da80:	ldr	x0, [x20]
    da84:	add	x0, x0, #0x1
    da88:	str	x0, [x20]
    da8c:	add	x0, x22, #0x328
    da90:	add	x0, x0, #0x1a0
    da94:	bl	6950 <_PyObject_New@plt>
    da98:	mov	x19, x0
    da9c:	cbz	x0, db60 <PyFloat_FromString@plt+0x70d0>
    daa0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    daa4:	mov	x2, #0xffffffffffffffff    	// #-1
    daa8:	mov	w1, #0x30                  	// #48
    daac:	str	x2, [x19, #16]
    dab0:	ldr	q0, [x0, #2128]
    dab4:	add	x0, x19, #0x48
    dab8:	strb	w1, [x19, #24]
    dabc:	add	x3, sp, #0x3c
    dac0:	stp	xzr, xzr, [x19, #32]
    dac4:	add	x1, x20, #0x18
    dac8:	add	x2, x21, #0x10
    dacc:	str	x0, [x19, #64]
    dad0:	add	x0, x19, #0x18
    dad4:	str	q0, [x19, #48]
    dad8:	bl	3ab90 <PyInit__decimal@@Base+0x1e950>
    dadc:	ldr	x0, [x20]
    dae0:	sub	x0, x0, #0x1
    dae4:	str	x0, [x20]
    dae8:	cbz	x0, db24 <PyFloat_FromString@plt+0x7094>
    daec:	ldr	w1, [sp, #60]
    daf0:	mov	x0, x21
    daf4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    daf8:	cbz	w0, da6c <PyFloat_FromString@plt+0x6fdc>
    dafc:	ldr	x0, [x19]
    db00:	sub	x0, x0, #0x1
    db04:	str	x0, [x19]
    db08:	cbz	x0, db7c <PyFloat_FromString@plt+0x70ec>
    db0c:	mov	x19, #0x0                   	// #0
    db10:	mov	x0, x19
    db14:	ldp	x19, x20, [sp, #16]
    db18:	ldp	x21, x22, [sp, #32]
    db1c:	ldp	x29, x30, [sp], #64
    db20:	ret
    db24:	mov	x0, x20
    db28:	bl	65d0 <_Py_Dealloc@plt>
    db2c:	ldr	w1, [sp, #60]
    db30:	mov	x0, x21
    db34:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    db38:	cbz	w0, da6c <PyFloat_FromString@plt+0x6fdc>
    db3c:	b	dafc <PyFloat_FromString@plt+0x706c>
    db40:	mov	x1, x20
    db44:	mov	x0, x19
    db48:	mov	x2, x21
    db4c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    db50:	mov	x20, x0
    db54:	cbnz	x0, da8c <PyFloat_FromString@plt+0x6ffc>
    db58:	mov	x19, #0x0                   	// #0
    db5c:	b	db10 <PyFloat_FromString@plt+0x7080>
    db60:	ldr	x0, [x20]
    db64:	sub	x0, x0, #0x1
    db68:	str	x0, [x20]
    db6c:	cbnz	x0, db0c <PyFloat_FromString@plt+0x707c>
    db70:	mov	x0, x20
    db74:	bl	65d0 <_Py_Dealloc@plt>
    db78:	b	da6c <PyFloat_FromString@plt+0x6fdc>
    db7c:	mov	x0, x19
    db80:	mov	x19, #0x0                   	// #0
    db84:	bl	65d0 <_Py_Dealloc@plt>
    db88:	b	da6c <PyFloat_FromString@plt+0x6fdc>
    db8c:	nop
    db90:	stp	x29, x30, [sp, #-64]!
    db94:	mov	x29, sp
    db98:	stp	x21, x22, [sp, #32]
    db9c:	mov	x21, x0
    dba0:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    dba4:	ldr	x0, [x1, #8]
    dba8:	stp	x19, x20, [sp, #16]
    dbac:	add	x19, x22, #0x328
    dbb0:	str	wzr, [sp, #60]
    dbb4:	add	x19, x19, #0x1a0
    dbb8:	mov	x20, x1
    dbbc:	cmp	x0, x19
    dbc0:	b.eq	dc10 <PyFloat_FromString@plt+0x7180>  // b.none
    dbc4:	mov	x1, x19
    dbc8:	bl	69c0 <PyType_IsSubtype@plt>
    dbcc:	cbnz	w0, dc10 <PyFloat_FromString@plt+0x7180>
    dbd0:	ldr	x2, [x20, #8]
    dbd4:	ldr	x0, [x2, #168]
    dbd8:	tbnz	w0, #24, dcd0 <PyFloat_FromString@plt+0x7240>
    dbdc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    dbe0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    dbe4:	ldr	x2, [x2, #24]
    dbe8:	add	x1, x1, #0xb70
    dbec:	ldr	x0, [x0, #3936]
    dbf0:	mov	x19, #0x0                   	// #0
    dbf4:	ldr	x0, [x0]
    dbf8:	bl	6a10 <PyErr_Format@plt>
    dbfc:	mov	x0, x19
    dc00:	ldp	x19, x20, [sp, #16]
    dc04:	ldp	x21, x22, [sp, #32]
    dc08:	ldp	x29, x30, [sp], #64
    dc0c:	ret
    dc10:	ldr	x0, [x20]
    dc14:	add	x0, x0, #0x1
    dc18:	str	x0, [x20]
    dc1c:	add	x0, x22, #0x328
    dc20:	add	x0, x0, #0x1a0
    dc24:	bl	6950 <_PyObject_New@plt>
    dc28:	mov	x19, x0
    dc2c:	cbz	x0, dcf0 <PyFloat_FromString@plt+0x7260>
    dc30:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    dc34:	mov	x2, #0xffffffffffffffff    	// #-1
    dc38:	mov	w1, #0x30                  	// #48
    dc3c:	str	x2, [x19, #16]
    dc40:	ldr	q0, [x0, #2128]
    dc44:	add	x0, x19, #0x48
    dc48:	strb	w1, [x19, #24]
    dc4c:	add	x3, sp, #0x3c
    dc50:	stp	xzr, xzr, [x19, #32]
    dc54:	add	x1, x20, #0x18
    dc58:	add	x2, x21, #0x10
    dc5c:	str	x0, [x19, #64]
    dc60:	add	x0, x19, #0x18
    dc64:	str	q0, [x19, #48]
    dc68:	bl	3b9c0 <PyInit__decimal@@Base+0x1f780>
    dc6c:	ldr	x0, [x20]
    dc70:	sub	x0, x0, #0x1
    dc74:	str	x0, [x20]
    dc78:	cbz	x0, dcb4 <PyFloat_FromString@plt+0x7224>
    dc7c:	ldr	w1, [sp, #60]
    dc80:	mov	x0, x21
    dc84:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    dc88:	cbz	w0, dbfc <PyFloat_FromString@plt+0x716c>
    dc8c:	ldr	x0, [x19]
    dc90:	sub	x0, x0, #0x1
    dc94:	str	x0, [x19]
    dc98:	cbz	x0, dd0c <PyFloat_FromString@plt+0x727c>
    dc9c:	mov	x19, #0x0                   	// #0
    dca0:	mov	x0, x19
    dca4:	ldp	x19, x20, [sp, #16]
    dca8:	ldp	x21, x22, [sp, #32]
    dcac:	ldp	x29, x30, [sp], #64
    dcb0:	ret
    dcb4:	mov	x0, x20
    dcb8:	bl	65d0 <_Py_Dealloc@plt>
    dcbc:	ldr	w1, [sp, #60]
    dcc0:	mov	x0, x21
    dcc4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    dcc8:	cbz	w0, dbfc <PyFloat_FromString@plt+0x716c>
    dccc:	b	dc8c <PyFloat_FromString@plt+0x71fc>
    dcd0:	mov	x1, x20
    dcd4:	mov	x0, x19
    dcd8:	mov	x2, x21
    dcdc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    dce0:	mov	x20, x0
    dce4:	cbnz	x0, dc1c <PyFloat_FromString@plt+0x718c>
    dce8:	mov	x19, #0x0                   	// #0
    dcec:	b	dca0 <PyFloat_FromString@plt+0x7210>
    dcf0:	ldr	x0, [x20]
    dcf4:	sub	x0, x0, #0x1
    dcf8:	str	x0, [x20]
    dcfc:	cbnz	x0, dc9c <PyFloat_FromString@plt+0x720c>
    dd00:	mov	x0, x20
    dd04:	bl	65d0 <_Py_Dealloc@plt>
    dd08:	b	dbfc <PyFloat_FromString@plt+0x716c>
    dd0c:	mov	x0, x19
    dd10:	mov	x19, #0x0                   	// #0
    dd14:	bl	65d0 <_Py_Dealloc@plt>
    dd18:	b	dbfc <PyFloat_FromString@plt+0x716c>
    dd1c:	nop
    dd20:	stp	x29, x30, [sp, #-64]!
    dd24:	mov	x29, sp
    dd28:	stp	x21, x22, [sp, #32]
    dd2c:	mov	x21, x0
    dd30:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    dd34:	ldr	x0, [x1, #8]
    dd38:	stp	x19, x20, [sp, #16]
    dd3c:	add	x19, x22, #0x328
    dd40:	str	wzr, [sp, #60]
    dd44:	add	x19, x19, #0x1a0
    dd48:	mov	x20, x1
    dd4c:	cmp	x0, x19
    dd50:	b.eq	dda0 <PyFloat_FromString@plt+0x7310>  // b.none
    dd54:	mov	x1, x19
    dd58:	bl	69c0 <PyType_IsSubtype@plt>
    dd5c:	cbnz	w0, dda0 <PyFloat_FromString@plt+0x7310>
    dd60:	ldr	x2, [x20, #8]
    dd64:	ldr	x0, [x2, #168]
    dd68:	tbnz	w0, #24, de60 <PyFloat_FromString@plt+0x73d0>
    dd6c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    dd70:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    dd74:	ldr	x2, [x2, #24]
    dd78:	add	x1, x1, #0xb70
    dd7c:	ldr	x0, [x0, #3936]
    dd80:	mov	x19, #0x0                   	// #0
    dd84:	ldr	x0, [x0]
    dd88:	bl	6a10 <PyErr_Format@plt>
    dd8c:	mov	x0, x19
    dd90:	ldp	x19, x20, [sp, #16]
    dd94:	ldp	x21, x22, [sp, #32]
    dd98:	ldp	x29, x30, [sp], #64
    dd9c:	ret
    dda0:	ldr	x0, [x20]
    dda4:	add	x0, x0, #0x1
    dda8:	str	x0, [x20]
    ddac:	add	x0, x22, #0x328
    ddb0:	add	x0, x0, #0x1a0
    ddb4:	bl	6950 <_PyObject_New@plt>
    ddb8:	mov	x19, x0
    ddbc:	cbz	x0, de80 <PyFloat_FromString@plt+0x73f0>
    ddc0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    ddc4:	mov	x2, #0xffffffffffffffff    	// #-1
    ddc8:	mov	w1, #0x30                  	// #48
    ddcc:	str	x2, [x19, #16]
    ddd0:	ldr	q0, [x0, #2128]
    ddd4:	add	x0, x19, #0x48
    ddd8:	strb	w1, [x19, #24]
    dddc:	add	x3, sp, #0x3c
    dde0:	stp	xzr, xzr, [x19, #32]
    dde4:	add	x1, x20, #0x18
    dde8:	add	x2, x21, #0x10
    ddec:	str	x0, [x19, #64]
    ddf0:	add	x0, x19, #0x18
    ddf4:	str	q0, [x19, #48]
    ddf8:	bl	3d1e0 <PyInit__decimal@@Base+0x20fa0>
    ddfc:	ldr	x0, [x20]
    de00:	sub	x0, x0, #0x1
    de04:	str	x0, [x20]
    de08:	cbz	x0, de44 <PyFloat_FromString@plt+0x73b4>
    de0c:	ldr	w1, [sp, #60]
    de10:	mov	x0, x21
    de14:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    de18:	cbz	w0, dd8c <PyFloat_FromString@plt+0x72fc>
    de1c:	ldr	x0, [x19]
    de20:	sub	x0, x0, #0x1
    de24:	str	x0, [x19]
    de28:	cbz	x0, de9c <PyFloat_FromString@plt+0x740c>
    de2c:	mov	x19, #0x0                   	// #0
    de30:	mov	x0, x19
    de34:	ldp	x19, x20, [sp, #16]
    de38:	ldp	x21, x22, [sp, #32]
    de3c:	ldp	x29, x30, [sp], #64
    de40:	ret
    de44:	mov	x0, x20
    de48:	bl	65d0 <_Py_Dealloc@plt>
    de4c:	ldr	w1, [sp, #60]
    de50:	mov	x0, x21
    de54:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    de58:	cbz	w0, dd8c <PyFloat_FromString@plt+0x72fc>
    de5c:	b	de1c <PyFloat_FromString@plt+0x738c>
    de60:	mov	x1, x20
    de64:	mov	x0, x19
    de68:	mov	x2, x21
    de6c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    de70:	mov	x20, x0
    de74:	cbnz	x0, ddac <PyFloat_FromString@plt+0x731c>
    de78:	mov	x19, #0x0                   	// #0
    de7c:	b	de30 <PyFloat_FromString@plt+0x73a0>
    de80:	ldr	x0, [x20]
    de84:	sub	x0, x0, #0x1
    de88:	str	x0, [x20]
    de8c:	cbnz	x0, de2c <PyFloat_FromString@plt+0x739c>
    de90:	mov	x0, x20
    de94:	bl	65d0 <_Py_Dealloc@plt>
    de98:	b	dd8c <PyFloat_FromString@plt+0x72fc>
    de9c:	mov	x0, x19
    dea0:	mov	x19, #0x0                   	// #0
    dea4:	bl	65d0 <_Py_Dealloc@plt>
    dea8:	b	dd8c <PyFloat_FromString@plt+0x72fc>
    deac:	nop
    deb0:	stp	x29, x30, [sp, #-64]!
    deb4:	mov	x29, sp
    deb8:	stp	x21, x22, [sp, #32]
    debc:	mov	x21, x0
    dec0:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    dec4:	ldr	x0, [x1, #8]
    dec8:	stp	x19, x20, [sp, #16]
    decc:	add	x19, x22, #0x328
    ded0:	str	wzr, [sp, #60]
    ded4:	add	x19, x19, #0x1a0
    ded8:	mov	x20, x1
    dedc:	cmp	x0, x19
    dee0:	b.eq	df30 <PyFloat_FromString@plt+0x74a0>  // b.none
    dee4:	mov	x1, x19
    dee8:	bl	69c0 <PyType_IsSubtype@plt>
    deec:	cbnz	w0, df30 <PyFloat_FromString@plt+0x74a0>
    def0:	ldr	x2, [x20, #8]
    def4:	ldr	x0, [x2, #168]
    def8:	tbnz	w0, #24, dff0 <PyFloat_FromString@plt+0x7560>
    defc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    df00:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    df04:	ldr	x2, [x2, #24]
    df08:	add	x1, x1, #0xb70
    df0c:	ldr	x0, [x0, #3936]
    df10:	mov	x19, #0x0                   	// #0
    df14:	ldr	x0, [x0]
    df18:	bl	6a10 <PyErr_Format@plt>
    df1c:	mov	x0, x19
    df20:	ldp	x19, x20, [sp, #16]
    df24:	ldp	x21, x22, [sp, #32]
    df28:	ldp	x29, x30, [sp], #64
    df2c:	ret
    df30:	ldr	x0, [x20]
    df34:	add	x0, x0, #0x1
    df38:	str	x0, [x20]
    df3c:	add	x0, x22, #0x328
    df40:	add	x0, x0, #0x1a0
    df44:	bl	6950 <_PyObject_New@plt>
    df48:	mov	x19, x0
    df4c:	cbz	x0, e010 <PyFloat_FromString@plt+0x7580>
    df50:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    df54:	mov	x2, #0xffffffffffffffff    	// #-1
    df58:	mov	w1, #0x30                  	// #48
    df5c:	str	x2, [x19, #16]
    df60:	ldr	q0, [x0, #2128]
    df64:	add	x0, x19, #0x48
    df68:	strb	w1, [x19, #24]
    df6c:	add	x3, sp, #0x3c
    df70:	stp	xzr, xzr, [x19, #32]
    df74:	add	x1, x20, #0x18
    df78:	add	x2, x21, #0x10
    df7c:	str	x0, [x19, #64]
    df80:	add	x0, x19, #0x18
    df84:	str	q0, [x19, #48]
    df88:	bl	3d1c0 <PyInit__decimal@@Base+0x20f80>
    df8c:	ldr	x0, [x20]
    df90:	sub	x0, x0, #0x1
    df94:	str	x0, [x20]
    df98:	cbz	x0, dfd4 <PyFloat_FromString@plt+0x7544>
    df9c:	ldr	w1, [sp, #60]
    dfa0:	mov	x0, x21
    dfa4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    dfa8:	cbz	w0, df1c <PyFloat_FromString@plt+0x748c>
    dfac:	ldr	x0, [x19]
    dfb0:	sub	x0, x0, #0x1
    dfb4:	str	x0, [x19]
    dfb8:	cbz	x0, e02c <PyFloat_FromString@plt+0x759c>
    dfbc:	mov	x19, #0x0                   	// #0
    dfc0:	mov	x0, x19
    dfc4:	ldp	x19, x20, [sp, #16]
    dfc8:	ldp	x21, x22, [sp, #32]
    dfcc:	ldp	x29, x30, [sp], #64
    dfd0:	ret
    dfd4:	mov	x0, x20
    dfd8:	bl	65d0 <_Py_Dealloc@plt>
    dfdc:	ldr	w1, [sp, #60]
    dfe0:	mov	x0, x21
    dfe4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    dfe8:	cbz	w0, df1c <PyFloat_FromString@plt+0x748c>
    dfec:	b	dfac <PyFloat_FromString@plt+0x751c>
    dff0:	mov	x1, x20
    dff4:	mov	x0, x19
    dff8:	mov	x2, x21
    dffc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e000:	mov	x20, x0
    e004:	cbnz	x0, df3c <PyFloat_FromString@plt+0x74ac>
    e008:	mov	x19, #0x0                   	// #0
    e00c:	b	dfc0 <PyFloat_FromString@plt+0x7530>
    e010:	ldr	x0, [x20]
    e014:	sub	x0, x0, #0x1
    e018:	str	x0, [x20]
    e01c:	cbnz	x0, dfbc <PyFloat_FromString@plt+0x752c>
    e020:	mov	x0, x20
    e024:	bl	65d0 <_Py_Dealloc@plt>
    e028:	b	df1c <PyFloat_FromString@plt+0x748c>
    e02c:	mov	x0, x19
    e030:	mov	x19, #0x0                   	// #0
    e034:	bl	65d0 <_Py_Dealloc@plt>
    e038:	b	df1c <PyFloat_FromString@plt+0x748c>
    e03c:	nop
    e040:	stp	x29, x30, [sp, #-64]!
    e044:	mov	x29, sp
    e048:	stp	x21, x22, [sp, #32]
    e04c:	mov	x21, x0
    e050:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    e054:	ldr	x0, [x1, #8]
    e058:	stp	x19, x20, [sp, #16]
    e05c:	add	x19, x22, #0x328
    e060:	str	wzr, [sp, #60]
    e064:	add	x19, x19, #0x1a0
    e068:	mov	x20, x1
    e06c:	cmp	x0, x19
    e070:	b.eq	e0c0 <PyFloat_FromString@plt+0x7630>  // b.none
    e074:	mov	x1, x19
    e078:	bl	69c0 <PyType_IsSubtype@plt>
    e07c:	cbnz	w0, e0c0 <PyFloat_FromString@plt+0x7630>
    e080:	ldr	x2, [x20, #8]
    e084:	ldr	x0, [x2, #168]
    e088:	tbnz	w0, #24, e180 <PyFloat_FromString@plt+0x76f0>
    e08c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    e090:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    e094:	ldr	x2, [x2, #24]
    e098:	add	x1, x1, #0xb70
    e09c:	ldr	x0, [x0, #3936]
    e0a0:	mov	x19, #0x0                   	// #0
    e0a4:	ldr	x0, [x0]
    e0a8:	bl	6a10 <PyErr_Format@plt>
    e0ac:	mov	x0, x19
    e0b0:	ldp	x19, x20, [sp, #16]
    e0b4:	ldp	x21, x22, [sp, #32]
    e0b8:	ldp	x29, x30, [sp], #64
    e0bc:	ret
    e0c0:	ldr	x0, [x20]
    e0c4:	add	x0, x0, #0x1
    e0c8:	str	x0, [x20]
    e0cc:	add	x0, x22, #0x328
    e0d0:	add	x0, x0, #0x1a0
    e0d4:	bl	6950 <_PyObject_New@plt>
    e0d8:	mov	x19, x0
    e0dc:	cbz	x0, e1a0 <PyFloat_FromString@plt+0x7710>
    e0e0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    e0e4:	mov	x2, #0xffffffffffffffff    	// #-1
    e0e8:	mov	w1, #0x30                  	// #48
    e0ec:	str	x2, [x19, #16]
    e0f0:	ldr	q0, [x0, #2128]
    e0f4:	add	x0, x19, #0x48
    e0f8:	strb	w1, [x19, #24]
    e0fc:	add	x3, sp, #0x3c
    e100:	stp	xzr, xzr, [x19, #32]
    e104:	add	x1, x20, #0x18
    e108:	add	x2, x21, #0x10
    e10c:	str	x0, [x19, #64]
    e110:	add	x0, x19, #0x18
    e114:	str	q0, [x19, #48]
    e118:	bl	3d448 <PyInit__decimal@@Base+0x21208>
    e11c:	ldr	x0, [x20]
    e120:	sub	x0, x0, #0x1
    e124:	str	x0, [x20]
    e128:	cbz	x0, e164 <PyFloat_FromString@plt+0x76d4>
    e12c:	ldr	w1, [sp, #60]
    e130:	mov	x0, x21
    e134:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e138:	cbz	w0, e0ac <PyFloat_FromString@plt+0x761c>
    e13c:	ldr	x0, [x19]
    e140:	sub	x0, x0, #0x1
    e144:	str	x0, [x19]
    e148:	cbz	x0, e1bc <PyFloat_FromString@plt+0x772c>
    e14c:	mov	x19, #0x0                   	// #0
    e150:	mov	x0, x19
    e154:	ldp	x19, x20, [sp, #16]
    e158:	ldp	x21, x22, [sp, #32]
    e15c:	ldp	x29, x30, [sp], #64
    e160:	ret
    e164:	mov	x0, x20
    e168:	bl	65d0 <_Py_Dealloc@plt>
    e16c:	ldr	w1, [sp, #60]
    e170:	mov	x0, x21
    e174:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e178:	cbz	w0, e0ac <PyFloat_FromString@plt+0x761c>
    e17c:	b	e13c <PyFloat_FromString@plt+0x76ac>
    e180:	mov	x1, x20
    e184:	mov	x0, x19
    e188:	mov	x2, x21
    e18c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e190:	mov	x20, x0
    e194:	cbnz	x0, e0cc <PyFloat_FromString@plt+0x763c>
    e198:	mov	x19, #0x0                   	// #0
    e19c:	b	e150 <PyFloat_FromString@plt+0x76c0>
    e1a0:	ldr	x0, [x20]
    e1a4:	sub	x0, x0, #0x1
    e1a8:	str	x0, [x20]
    e1ac:	cbnz	x0, e14c <PyFloat_FromString@plt+0x76bc>
    e1b0:	mov	x0, x20
    e1b4:	bl	65d0 <_Py_Dealloc@plt>
    e1b8:	b	e0ac <PyFloat_FromString@plt+0x761c>
    e1bc:	mov	x0, x19
    e1c0:	mov	x19, #0x0                   	// #0
    e1c4:	bl	65d0 <_Py_Dealloc@plt>
    e1c8:	b	e0ac <PyFloat_FromString@plt+0x761c>
    e1cc:	nop
    e1d0:	stp	x29, x30, [sp, #-64]!
    e1d4:	mov	x29, sp
    e1d8:	stp	x21, x22, [sp, #32]
    e1dc:	mov	x21, x0
    e1e0:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    e1e4:	ldr	x0, [x1, #8]
    e1e8:	stp	x19, x20, [sp, #16]
    e1ec:	add	x19, x22, #0x328
    e1f0:	str	wzr, [sp, #60]
    e1f4:	add	x19, x19, #0x1a0
    e1f8:	mov	x20, x1
    e1fc:	cmp	x0, x19
    e200:	b.eq	e250 <PyFloat_FromString@plt+0x77c0>  // b.none
    e204:	mov	x1, x19
    e208:	bl	69c0 <PyType_IsSubtype@plt>
    e20c:	cbnz	w0, e250 <PyFloat_FromString@plt+0x77c0>
    e210:	ldr	x2, [x20, #8]
    e214:	ldr	x0, [x2, #168]
    e218:	tbnz	w0, #24, e310 <PyFloat_FromString@plt+0x7880>
    e21c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    e220:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    e224:	ldr	x2, [x2, #24]
    e228:	add	x1, x1, #0xb70
    e22c:	ldr	x0, [x0, #3936]
    e230:	mov	x19, #0x0                   	// #0
    e234:	ldr	x0, [x0]
    e238:	bl	6a10 <PyErr_Format@plt>
    e23c:	mov	x0, x19
    e240:	ldp	x19, x20, [sp, #16]
    e244:	ldp	x21, x22, [sp, #32]
    e248:	ldp	x29, x30, [sp], #64
    e24c:	ret
    e250:	ldr	x0, [x20]
    e254:	add	x0, x0, #0x1
    e258:	str	x0, [x20]
    e25c:	add	x0, x22, #0x328
    e260:	add	x0, x0, #0x1a0
    e264:	bl	6950 <_PyObject_New@plt>
    e268:	mov	x19, x0
    e26c:	cbz	x0, e330 <PyFloat_FromString@plt+0x78a0>
    e270:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    e274:	mov	x2, #0xffffffffffffffff    	// #-1
    e278:	mov	w1, #0x30                  	// #48
    e27c:	str	x2, [x19, #16]
    e280:	ldr	q0, [x0, #2128]
    e284:	add	x0, x19, #0x48
    e288:	strb	w1, [x19, #24]
    e28c:	add	x3, sp, #0x3c
    e290:	stp	xzr, xzr, [x19, #32]
    e294:	add	x1, x20, #0x18
    e298:	add	x2, x21, #0x10
    e29c:	str	x0, [x19, #64]
    e2a0:	add	x0, x19, #0x18
    e2a4:	str	q0, [x19, #48]
    e2a8:	bl	37940 <PyInit__decimal@@Base+0x1b700>
    e2ac:	ldr	x0, [x20]
    e2b0:	sub	x0, x0, #0x1
    e2b4:	str	x0, [x20]
    e2b8:	cbz	x0, e2f4 <PyFloat_FromString@plt+0x7864>
    e2bc:	ldr	w1, [sp, #60]
    e2c0:	mov	x0, x21
    e2c4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e2c8:	cbz	w0, e23c <PyFloat_FromString@plt+0x77ac>
    e2cc:	ldr	x0, [x19]
    e2d0:	sub	x0, x0, #0x1
    e2d4:	str	x0, [x19]
    e2d8:	cbz	x0, e34c <PyFloat_FromString@plt+0x78bc>
    e2dc:	mov	x19, #0x0                   	// #0
    e2e0:	mov	x0, x19
    e2e4:	ldp	x19, x20, [sp, #16]
    e2e8:	ldp	x21, x22, [sp, #32]
    e2ec:	ldp	x29, x30, [sp], #64
    e2f0:	ret
    e2f4:	mov	x0, x20
    e2f8:	bl	65d0 <_Py_Dealloc@plt>
    e2fc:	ldr	w1, [sp, #60]
    e300:	mov	x0, x21
    e304:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e308:	cbz	w0, e23c <PyFloat_FromString@plt+0x77ac>
    e30c:	b	e2cc <PyFloat_FromString@plt+0x783c>
    e310:	mov	x1, x20
    e314:	mov	x0, x19
    e318:	mov	x2, x21
    e31c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e320:	mov	x20, x0
    e324:	cbnz	x0, e25c <PyFloat_FromString@plt+0x77cc>
    e328:	mov	x19, #0x0                   	// #0
    e32c:	b	e2e0 <PyFloat_FromString@plt+0x7850>
    e330:	ldr	x0, [x20]
    e334:	sub	x0, x0, #0x1
    e338:	str	x0, [x20]
    e33c:	cbnz	x0, e2dc <PyFloat_FromString@plt+0x784c>
    e340:	mov	x0, x20
    e344:	bl	65d0 <_Py_Dealloc@plt>
    e348:	b	e23c <PyFloat_FromString@plt+0x77ac>
    e34c:	mov	x0, x19
    e350:	mov	x19, #0x0                   	// #0
    e354:	bl	65d0 <_Py_Dealloc@plt>
    e358:	b	e23c <PyFloat_FromString@plt+0x77ac>
    e35c:	nop
    e360:	stp	x29, x30, [sp, #-64]!
    e364:	mov	x29, sp
    e368:	stp	x21, x22, [sp, #32]
    e36c:	mov	x21, x0
    e370:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    e374:	ldr	x0, [x1, #8]
    e378:	stp	x19, x20, [sp, #16]
    e37c:	add	x19, x22, #0x328
    e380:	str	wzr, [sp, #60]
    e384:	add	x19, x19, #0x1a0
    e388:	mov	x20, x1
    e38c:	cmp	x0, x19
    e390:	b.eq	e3e0 <PyFloat_FromString@plt+0x7950>  // b.none
    e394:	mov	x1, x19
    e398:	bl	69c0 <PyType_IsSubtype@plt>
    e39c:	cbnz	w0, e3e0 <PyFloat_FromString@plt+0x7950>
    e3a0:	ldr	x2, [x20, #8]
    e3a4:	ldr	x0, [x2, #168]
    e3a8:	tbnz	w0, #24, e4a0 <PyFloat_FromString@plt+0x7a10>
    e3ac:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    e3b0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    e3b4:	ldr	x2, [x2, #24]
    e3b8:	add	x1, x1, #0xb70
    e3bc:	ldr	x0, [x0, #3936]
    e3c0:	mov	x19, #0x0                   	// #0
    e3c4:	ldr	x0, [x0]
    e3c8:	bl	6a10 <PyErr_Format@plt>
    e3cc:	mov	x0, x19
    e3d0:	ldp	x19, x20, [sp, #16]
    e3d4:	ldp	x21, x22, [sp, #32]
    e3d8:	ldp	x29, x30, [sp], #64
    e3dc:	ret
    e3e0:	ldr	x0, [x20]
    e3e4:	add	x0, x0, #0x1
    e3e8:	str	x0, [x20]
    e3ec:	add	x0, x22, #0x328
    e3f0:	add	x0, x0, #0x1a0
    e3f4:	bl	6950 <_PyObject_New@plt>
    e3f8:	mov	x19, x0
    e3fc:	cbz	x0, e4c0 <PyFloat_FromString@plt+0x7a30>
    e400:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    e404:	mov	x2, #0xffffffffffffffff    	// #-1
    e408:	mov	w1, #0x30                  	// #48
    e40c:	str	x2, [x19, #16]
    e410:	ldr	q0, [x0, #2128]
    e414:	add	x0, x19, #0x48
    e418:	strb	w1, [x19, #24]
    e41c:	add	x3, sp, #0x3c
    e420:	stp	xzr, xzr, [x19, #32]
    e424:	add	x1, x20, #0x18
    e428:	add	x2, x21, #0x10
    e42c:	str	x0, [x19, #64]
    e430:	add	x0, x19, #0x18
    e434:	str	q0, [x19, #48]
    e438:	bl	397b8 <PyInit__decimal@@Base+0x1d578>
    e43c:	ldr	x0, [x20]
    e440:	sub	x0, x0, #0x1
    e444:	str	x0, [x20]
    e448:	cbz	x0, e484 <PyFloat_FromString@plt+0x79f4>
    e44c:	ldr	w1, [sp, #60]
    e450:	mov	x0, x21
    e454:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e458:	cbz	w0, e3cc <PyFloat_FromString@plt+0x793c>
    e45c:	ldr	x0, [x19]
    e460:	sub	x0, x0, #0x1
    e464:	str	x0, [x19]
    e468:	cbz	x0, e4dc <PyFloat_FromString@plt+0x7a4c>
    e46c:	mov	x19, #0x0                   	// #0
    e470:	mov	x0, x19
    e474:	ldp	x19, x20, [sp, #16]
    e478:	ldp	x21, x22, [sp, #32]
    e47c:	ldp	x29, x30, [sp], #64
    e480:	ret
    e484:	mov	x0, x20
    e488:	bl	65d0 <_Py_Dealloc@plt>
    e48c:	ldr	w1, [sp, #60]
    e490:	mov	x0, x21
    e494:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e498:	cbz	w0, e3cc <PyFloat_FromString@plt+0x793c>
    e49c:	b	e45c <PyFloat_FromString@plt+0x79cc>
    e4a0:	mov	x1, x20
    e4a4:	mov	x0, x19
    e4a8:	mov	x2, x21
    e4ac:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e4b0:	mov	x20, x0
    e4b4:	cbnz	x0, e3ec <PyFloat_FromString@plt+0x795c>
    e4b8:	mov	x19, #0x0                   	// #0
    e4bc:	b	e470 <PyFloat_FromString@plt+0x79e0>
    e4c0:	ldr	x0, [x20]
    e4c4:	sub	x0, x0, #0x1
    e4c8:	str	x0, [x20]
    e4cc:	cbnz	x0, e46c <PyFloat_FromString@plt+0x79dc>
    e4d0:	mov	x0, x20
    e4d4:	bl	65d0 <_Py_Dealloc@plt>
    e4d8:	b	e3cc <PyFloat_FromString@plt+0x793c>
    e4dc:	mov	x0, x19
    e4e0:	mov	x19, #0x0                   	// #0
    e4e4:	bl	65d0 <_Py_Dealloc@plt>
    e4e8:	b	e3cc <PyFloat_FromString@plt+0x793c>
    e4ec:	nop
    e4f0:	stp	x29, x30, [sp, #-64]!
    e4f4:	mov	x29, sp
    e4f8:	stp	x21, x22, [sp, #32]
    e4fc:	mov	x21, x0
    e500:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    e504:	ldr	x0, [x1, #8]
    e508:	stp	x19, x20, [sp, #16]
    e50c:	add	x19, x22, #0x328
    e510:	str	wzr, [sp, #60]
    e514:	add	x19, x19, #0x1a0
    e518:	mov	x20, x1
    e51c:	cmp	x0, x19
    e520:	b.eq	e570 <PyFloat_FromString@plt+0x7ae0>  // b.none
    e524:	mov	x1, x19
    e528:	bl	69c0 <PyType_IsSubtype@plt>
    e52c:	cbnz	w0, e570 <PyFloat_FromString@plt+0x7ae0>
    e530:	ldr	x2, [x20, #8]
    e534:	ldr	x0, [x2, #168]
    e538:	tbnz	w0, #24, e630 <PyFloat_FromString@plt+0x7ba0>
    e53c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    e540:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    e544:	ldr	x2, [x2, #24]
    e548:	add	x1, x1, #0xb70
    e54c:	ldr	x0, [x0, #3936]
    e550:	mov	x19, #0x0                   	// #0
    e554:	ldr	x0, [x0]
    e558:	bl	6a10 <PyErr_Format@plt>
    e55c:	mov	x0, x19
    e560:	ldp	x19, x20, [sp, #16]
    e564:	ldp	x21, x22, [sp, #32]
    e568:	ldp	x29, x30, [sp], #64
    e56c:	ret
    e570:	ldr	x0, [x20]
    e574:	add	x0, x0, #0x1
    e578:	str	x0, [x20]
    e57c:	add	x0, x22, #0x328
    e580:	add	x0, x0, #0x1a0
    e584:	bl	6950 <_PyObject_New@plt>
    e588:	mov	x19, x0
    e58c:	cbz	x0, e650 <PyFloat_FromString@plt+0x7bc0>
    e590:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    e594:	mov	x2, #0xffffffffffffffff    	// #-1
    e598:	mov	w1, #0x30                  	// #48
    e59c:	str	x2, [x19, #16]
    e5a0:	ldr	q0, [x0, #2128]
    e5a4:	add	x0, x19, #0x48
    e5a8:	strb	w1, [x19, #24]
    e5ac:	add	x3, sp, #0x3c
    e5b0:	stp	xzr, xzr, [x19, #32]
    e5b4:	add	x1, x20, #0x18
    e5b8:	add	x2, x21, #0x10
    e5bc:	str	x0, [x19, #64]
    e5c0:	add	x0, x19, #0x18
    e5c4:	str	q0, [x19, #48]
    e5c8:	bl	321a0 <PyInit__decimal@@Base+0x15f60>
    e5cc:	ldr	x0, [x20]
    e5d0:	sub	x0, x0, #0x1
    e5d4:	str	x0, [x20]
    e5d8:	cbz	x0, e614 <PyFloat_FromString@plt+0x7b84>
    e5dc:	ldr	w1, [sp, #60]
    e5e0:	mov	x0, x21
    e5e4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e5e8:	cbz	w0, e55c <PyFloat_FromString@plt+0x7acc>
    e5ec:	ldr	x0, [x19]
    e5f0:	sub	x0, x0, #0x1
    e5f4:	str	x0, [x19]
    e5f8:	cbz	x0, e66c <PyFloat_FromString@plt+0x7bdc>
    e5fc:	mov	x19, #0x0                   	// #0
    e600:	mov	x0, x19
    e604:	ldp	x19, x20, [sp, #16]
    e608:	ldp	x21, x22, [sp, #32]
    e60c:	ldp	x29, x30, [sp], #64
    e610:	ret
    e614:	mov	x0, x20
    e618:	bl	65d0 <_Py_Dealloc@plt>
    e61c:	ldr	w1, [sp, #60]
    e620:	mov	x0, x21
    e624:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e628:	cbz	w0, e55c <PyFloat_FromString@plt+0x7acc>
    e62c:	b	e5ec <PyFloat_FromString@plt+0x7b5c>
    e630:	mov	x1, x20
    e634:	mov	x0, x19
    e638:	mov	x2, x21
    e63c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e640:	mov	x20, x0
    e644:	cbnz	x0, e57c <PyFloat_FromString@plt+0x7aec>
    e648:	mov	x19, #0x0                   	// #0
    e64c:	b	e600 <PyFloat_FromString@plt+0x7b70>
    e650:	ldr	x0, [x20]
    e654:	sub	x0, x0, #0x1
    e658:	str	x0, [x20]
    e65c:	cbnz	x0, e5fc <PyFloat_FromString@plt+0x7b6c>
    e660:	mov	x0, x20
    e664:	bl	65d0 <_Py_Dealloc@plt>
    e668:	b	e55c <PyFloat_FromString@plt+0x7acc>
    e66c:	mov	x0, x19
    e670:	mov	x19, #0x0                   	// #0
    e674:	bl	65d0 <_Py_Dealloc@plt>
    e678:	b	e55c <PyFloat_FromString@plt+0x7acc>
    e67c:	nop
    e680:	stp	x29, x30, [sp, #-64]!
    e684:	mov	x29, sp
    e688:	stp	x21, x22, [sp, #32]
    e68c:	mov	x21, x0
    e690:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
    e694:	ldr	x0, [x1, #8]
    e698:	stp	x19, x20, [sp, #16]
    e69c:	add	x19, x22, #0x328
    e6a0:	str	wzr, [sp, #60]
    e6a4:	add	x19, x19, #0x1a0
    e6a8:	mov	x20, x1
    e6ac:	cmp	x0, x19
    e6b0:	b.eq	e700 <PyFloat_FromString@plt+0x7c70>  // b.none
    e6b4:	mov	x1, x19
    e6b8:	bl	69c0 <PyType_IsSubtype@plt>
    e6bc:	cbnz	w0, e700 <PyFloat_FromString@plt+0x7c70>
    e6c0:	ldr	x2, [x20, #8]
    e6c4:	ldr	x0, [x2, #168]
    e6c8:	tbnz	w0, #24, e7c0 <PyFloat_FromString@plt+0x7d30>
    e6cc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    e6d0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    e6d4:	ldr	x2, [x2, #24]
    e6d8:	add	x1, x1, #0xb70
    e6dc:	ldr	x0, [x0, #3936]
    e6e0:	mov	x19, #0x0                   	// #0
    e6e4:	ldr	x0, [x0]
    e6e8:	bl	6a10 <PyErr_Format@plt>
    e6ec:	mov	x0, x19
    e6f0:	ldp	x19, x20, [sp, #16]
    e6f4:	ldp	x21, x22, [sp, #32]
    e6f8:	ldp	x29, x30, [sp], #64
    e6fc:	ret
    e700:	ldr	x0, [x20]
    e704:	add	x0, x0, #0x1
    e708:	str	x0, [x20]
    e70c:	add	x0, x22, #0x328
    e710:	add	x0, x0, #0x1a0
    e714:	bl	6950 <_PyObject_New@plt>
    e718:	mov	x19, x0
    e71c:	cbz	x0, e7e0 <PyFloat_FromString@plt+0x7d50>
    e720:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    e724:	mov	x2, #0xffffffffffffffff    	// #-1
    e728:	mov	w1, #0x30                  	// #48
    e72c:	str	x2, [x19, #16]
    e730:	ldr	q0, [x0, #2128]
    e734:	add	x0, x19, #0x48
    e738:	strb	w1, [x19, #24]
    e73c:	add	x3, sp, #0x3c
    e740:	stp	xzr, xzr, [x19, #32]
    e744:	add	x1, x20, #0x18
    e748:	add	x2, x21, #0x10
    e74c:	str	x0, [x19, #64]
    e750:	add	x0, x19, #0x18
    e754:	str	q0, [x19, #48]
    e758:	bl	3aa28 <PyInit__decimal@@Base+0x1e7e8>
    e75c:	ldr	x0, [x20]
    e760:	sub	x0, x0, #0x1
    e764:	str	x0, [x20]
    e768:	cbz	x0, e7a4 <PyFloat_FromString@plt+0x7d14>
    e76c:	ldr	w1, [sp, #60]
    e770:	mov	x0, x21
    e774:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e778:	cbz	w0, e6ec <PyFloat_FromString@plt+0x7c5c>
    e77c:	ldr	x0, [x19]
    e780:	sub	x0, x0, #0x1
    e784:	str	x0, [x19]
    e788:	cbz	x0, e7fc <PyFloat_FromString@plt+0x7d6c>
    e78c:	mov	x19, #0x0                   	// #0
    e790:	mov	x0, x19
    e794:	ldp	x19, x20, [sp, #16]
    e798:	ldp	x21, x22, [sp, #32]
    e79c:	ldp	x29, x30, [sp], #64
    e7a0:	ret
    e7a4:	mov	x0, x20
    e7a8:	bl	65d0 <_Py_Dealloc@plt>
    e7ac:	ldr	w1, [sp, #60]
    e7b0:	mov	x0, x21
    e7b4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    e7b8:	cbz	w0, e6ec <PyFloat_FromString@plt+0x7c5c>
    e7bc:	b	e77c <PyFloat_FromString@plt+0x7cec>
    e7c0:	mov	x1, x20
    e7c4:	mov	x0, x19
    e7c8:	mov	x2, x21
    e7cc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e7d0:	mov	x20, x0
    e7d4:	cbnz	x0, e70c <PyFloat_FromString@plt+0x7c7c>
    e7d8:	mov	x19, #0x0                   	// #0
    e7dc:	b	e790 <PyFloat_FromString@plt+0x7d00>
    e7e0:	ldr	x0, [x20]
    e7e4:	sub	x0, x0, #0x1
    e7e8:	str	x0, [x20]
    e7ec:	cbnz	x0, e78c <PyFloat_FromString@plt+0x7cfc>
    e7f0:	mov	x0, x20
    e7f4:	bl	65d0 <_Py_Dealloc@plt>
    e7f8:	b	e6ec <PyFloat_FromString@plt+0x7c5c>
    e7fc:	mov	x0, x19
    e800:	mov	x19, #0x0                   	// #0
    e804:	bl	65d0 <_Py_Dealloc@plt>
    e808:	b	e6ec <PyFloat_FromString@plt+0x7c5c>
    e80c:	nop
    e810:	stp	x29, x30, [sp, #-160]!
    e814:	mov	x29, sp
    e818:	ldr	x3, [x1, #8]
    e81c:	stp	x19, x20, [sp, #16]
    e820:	str	wzr, [sp, #108]
    e824:	ldr	x4, [x3, #168]
    e828:	tbnz	w4, #24, eb08 <PyFloat_FromString@plt+0x8078>
    e82c:	mov	x19, x1
    e830:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    e834:	stp	x21, x22, [sp, #32]
    e838:	mov	x20, x0
    e83c:	mov	x22, x2
    e840:	ldr	x1, [x1, #3864]
    e844:	cmp	x3, x1
    e848:	b.eq	e858 <PyFloat_FromString@plt+0x7dc8>  // b.none
    e84c:	mov	x0, x3
    e850:	bl	69c0 <PyType_IsSubtype@plt>
    e854:	cbz	w0, eb94 <PyFloat_FromString@plt+0x8104>
    e858:	mov	x0, x19
    e85c:	stp	x23, x24, [sp, #48]
    e860:	str	d8, [sp, #88]
    e864:	bl	68c0 <PyFloat_AsDouble@plt>
    e868:	fmov	d1, #-1.000000000000000000e+00
    e86c:	fmov	d8, d0
    e870:	fcmp	d0, d1
    e874:	b.eq	e934 <PyFloat_FromString@plt+0x7ea4>  // b.none
    e878:	fmov	d1, #1.000000000000000000e+00
    e87c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e880:	fmov	d0, x0
    e884:	bsl	v0.8b, v8.8b, v1.8b
    e888:	fcmp	d0, d1
    e88c:	cset	w23, ne  // ne = any
    e890:	fcmp	d8, d8
    e894:	b.vs	e8ac <PyFloat_FromString@plt+0x7e1c>
    e898:	fabs	d1, d8
    e89c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    e8a0:	fmov	d0, x0
    e8a4:	fcmp	d1, d0
    e8a8:	b.le	e940 <PyFloat_FromString@plt+0x7eb0>
    e8ac:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
    e8b0:	add	x0, x0, #0x328
    e8b4:	add	x0, x0, #0x1a0
    e8b8:	cmp	x20, x0
    e8bc:	b.eq	eb84 <PyFloat_FromString@plt+0x80f4>  // b.none
    e8c0:	ldr	x2, [x20, #304]
    e8c4:	mov	x0, x20
    e8c8:	mov	x1, #0x0                   	// #0
    e8cc:	blr	x2
    e8d0:	mov	x19, x0
    e8d4:	cbz	x19, eae8 <PyFloat_FromString@plt+0x8058>
    e8d8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    e8dc:	fcmp	d8, d8
    e8e0:	add	x1, x19, #0x48
    e8e4:	mov	w2, #0x30                  	// #48
    e8e8:	ldr	q0, [x0, #2128]
    e8ec:	mov	x0, #0xffffffffffffffff    	// #-1
    e8f0:	str	x0, [x19, #16]
    e8f4:	add	x0, x19, #0x18
    e8f8:	strb	w2, [x19, #24]
    e8fc:	stp	xzr, xzr, [x19, #32]
    e900:	str	x1, [x19, #64]
    e904:	str	q0, [x19, #48]
    e908:	b.vs	ec04 <PyFloat_FromString@plt+0x8174>
    e90c:	mov	w1, w23
    e910:	mov	w2, #0x2                   	// #2
    e914:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
    e918:	ldp	x21, x22, [sp, #32]
    e91c:	ldp	x23, x24, [sp, #48]
    e920:	ldr	d8, [sp, #88]
    e924:	mov	x0, x19
    e928:	ldp	x19, x20, [sp, #16]
    e92c:	ldp	x29, x30, [sp], #160
    e930:	ret
    e934:	mov	w23, #0x1                   	// #1
    e938:	bl	67e0 <PyErr_Occurred@plt>
    e93c:	cbnz	x0, eae8 <PyFloat_FromString@plt+0x8058>
    e940:	adrp	x24, 65000 <PyInit__decimal@@Base+0x48dc0>
    e944:	add	x21, x24, #0x7a0
    e948:	mov	x0, x19
    e94c:	ldr	x1, [x21, #128]
    e950:	blr	x1
    e954:	mov	x19, x0
    e958:	cbz	x0, eae8 <PyFloat_FromString@plt+0x8058>
    e95c:	ldr	x2, [x21, #136]
    e960:	mov	x1, #0x0                   	// #0
    e964:	blr	x2
    e968:	mov	x21, x0
    e96c:	ldr	x1, [x19]
    e970:	sub	x0, x1, #0x1
    e974:	str	x0, [x19]
    e978:	cbz	x0, eb20 <PyFloat_FromString@plt+0x8090>
    e97c:	cbz	x21, eae8 <PyFloat_FromString@plt+0x8058>
    e980:	add	x24, x24, #0x7a0
    e984:	stp	x25, x26, [sp, #64]
    e988:	mov	x1, #0x0                   	// #0
    e98c:	ldp	x25, x0, [x21, #24]
    e990:	ldr	x2, [x24, #144]
    e994:	blr	x2
    e998:	mov	x19, x0
    e99c:	cbz	x0, ebb8 <PyFloat_FromString@plt+0x8128>
    e9a0:	bl	66f0 <PyLong_AsSsize_t@plt>
    e9a4:	mov	x24, x0
    e9a8:	ldr	x1, [x19]
    e9ac:	sub	x1, x1, #0x1
    e9b0:	str	x1, [x19]
    e9b4:	cbz	x1, eb64 <PyFloat_FromString@plt+0x80d4>
    e9b8:	cmn	x24, #0x1
    e9bc:	b.eq	eb2c <PyFloat_FromString@plt+0x809c>  // b.none
    e9c0:	mov	x1, x25
    e9c4:	mov	x0, x20
    e9c8:	mov	x2, x22
    e9cc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    e9d0:	ldr	x1, [x21]
    e9d4:	mov	x19, x0
    e9d8:	sub	x0, x1, #0x1
    e9dc:	str	x0, [x21]
    e9e0:	cbz	x0, eb70 <PyFloat_FromString@plt+0x80e0>
    e9e4:	cbz	x19, eb7c <PyFloat_FromString@plt+0x80ec>
    e9e8:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
    e9ec:	mov	x20, x0
    e9f0:	cbz	x0, ebd8 <PyFloat_FromString@plt+0x8148>
    e9f4:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
    e9f8:	mov	x21, x0
    e9fc:	cbz	x0, ebd0 <PyFloat_FromString@plt+0x8140>
    ea00:	add	x25, sp, #0x70
    ea04:	add	x26, sp, #0x6c
    ea08:	mov	x0, x25
    ea0c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
    ea10:	mov	x2, x25
    ea14:	mov	x3, x26
    ea18:	mov	x0, x20
    ea1c:	mov	x1, #0x5                   	// #5
    ea20:	bl	310d0 <PyInit__decimal@@Base+0x14e90>
    ea24:	mov	x3, x26
    ea28:	mov	x2, x25
    ea2c:	sub	x1, x24, #0x1
    ea30:	mov	x0, x21
    ea34:	bl	30600 <PyInit__decimal@@Base+0x143c0>
    ea38:	mov	x1, x20
    ea3c:	mov	x0, x20
    ea40:	mov	x4, x26
    ea44:	mov	x3, x25
    ea48:	mov	x2, x21
    ea4c:	bl	3b100 <PyInit__decimal@@Base+0x1eec0>
    ea50:	ldr	w1, [sp, #108]
    ea54:	mov	x0, x22
    ea58:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    ea5c:	cbnz	w0, ec20 <PyFloat_FromString@plt+0x8190>
    ea60:	str	x27, [sp, #80]
    ea64:	add	x27, x19, #0x18
    ea68:	mov	x1, x27
    ea6c:	mov	x4, x26
    ea70:	mov	x3, x25
    ea74:	mov	x2, x20
    ea78:	mov	x0, x27
    ea7c:	bl	38c18 <PyInit__decimal@@Base+0x1c9d8>
    ea80:	mov	x0, x20
    ea84:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    ea88:	mov	x0, x21
    ea8c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    ea90:	ldr	w1, [sp, #108]
    ea94:	mov	x0, x22
    ea98:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    ea9c:	cbnz	w0, ead0 <PyFloat_FromString@plt+0x8040>
    eaa0:	mov	x0, x27
    eaa4:	mov	w1, w23
    eaa8:	bl	2b1c8 <PyInit__decimal@@Base+0xef88>
    eaac:	mov	x0, #0x1                   	// #1
    eab0:	sub	x24, x0, x24
    eab4:	str	x24, [x19, #32]
    eab8:	ldp	x21, x22, [sp, #32]
    eabc:	ldp	x23, x24, [sp, #48]
    eac0:	ldp	x25, x26, [sp, #64]
    eac4:	ldr	x27, [sp, #80]
    eac8:	ldr	d8, [sp, #88]
    eacc:	b	e924 <PyFloat_FromString@plt+0x7e94>
    ead0:	ldr	x0, [x19]
    ead4:	sub	x0, x0, #0x1
    ead8:	str	x0, [x19]
    eadc:	cbz	x0, ec54 <PyFloat_FromString@plt+0x81c4>
    eae0:	ldp	x25, x26, [sp, #64]
    eae4:	ldr	x27, [sp, #80]
    eae8:	mov	x19, #0x0                   	// #0
    eaec:	mov	x0, x19
    eaf0:	ldr	d8, [sp, #88]
    eaf4:	ldp	x19, x20, [sp, #16]
    eaf8:	ldp	x21, x22, [sp, #32]
    eafc:	ldp	x23, x24, [sp, #48]
    eb00:	ldp	x29, x30, [sp], #160
    eb04:	ret
    eb08:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    eb0c:	mov	x19, x0
    eb10:	mov	x0, x19
    eb14:	ldp	x19, x20, [sp, #16]
    eb18:	ldp	x29, x30, [sp], #160
    eb1c:	ret
    eb20:	mov	x0, x19
    eb24:	bl	65d0 <_Py_Dealloc@plt>
    eb28:	b	e97c <PyFloat_FromString@plt+0x7eec>
    eb2c:	bl	67e0 <PyErr_Occurred@plt>
    eb30:	cbz	x0, e9c0 <PyFloat_FromString@plt+0x7f30>
    eb34:	ldr	x0, [x21]
    eb38:	sub	x0, x0, #0x1
    eb3c:	str	x0, [x21]
    eb40:	cbnz	x0, eb7c <PyFloat_FromString@plt+0x80ec>
    eb44:	mov	x0, x21
    eb48:	mov	x19, #0x0                   	// #0
    eb4c:	bl	65d0 <_Py_Dealloc@plt>
    eb50:	ldp	x21, x22, [sp, #32]
    eb54:	ldp	x23, x24, [sp, #48]
    eb58:	ldp	x25, x26, [sp, #64]
    eb5c:	ldr	d8, [sp, #88]
    eb60:	b	e924 <PyFloat_FromString@plt+0x7e94>
    eb64:	mov	x0, x19
    eb68:	bl	65d0 <_Py_Dealloc@plt>
    eb6c:	b	e9b8 <PyFloat_FromString@plt+0x7f28>
    eb70:	mov	x0, x21
    eb74:	bl	65d0 <_Py_Dealloc@plt>
    eb78:	b	e9e4 <PyFloat_FromString@plt+0x7f54>
    eb7c:	ldp	x25, x26, [sp, #64]
    eb80:	b	eae8 <PyFloat_FromString@plt+0x8058>
    eb84:	mov	x0, x20
    eb88:	bl	6950 <_PyObject_New@plt>
    eb8c:	mov	x19, x0
    eb90:	b	e8d4 <PyFloat_FromString@plt+0x7e44>
    eb94:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    eb98:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    eb9c:	mov	x19, #0x0                   	// #0
    eba0:	add	x1, x1, #0xdc8
    eba4:	ldr	x0, [x0, #3936]
    eba8:	ldr	x0, [x0]
    ebac:	bl	6650 <PyErr_SetString@plt>
    ebb0:	ldp	x21, x22, [sp, #32]
    ebb4:	b	e924 <PyFloat_FromString@plt+0x7e94>
    ebb8:	ldr	x0, [x21]
    ebbc:	sub	x0, x0, #0x1
    ebc0:	str	x0, [x21]
    ebc4:	cbnz	x0, eb7c <PyFloat_FromString@plt+0x80ec>
    ebc8:	mov	x0, x21
    ebcc:	b	eb4c <PyFloat_FromString@plt+0x80bc>
    ebd0:	mov	x0, x20
    ebd4:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    ebd8:	ldr	x0, [x19]
    ebdc:	sub	x0, x0, #0x1
    ebe0:	str	x0, [x19]
    ebe4:	cbz	x0, ec48 <PyFloat_FromString@plt+0x81b8>
    ebe8:	bl	65e0 <PyErr_NoMemory@plt>
    ebec:	mov	x19, #0x0                   	// #0
    ebf0:	ldp	x21, x22, [sp, #32]
    ebf4:	ldp	x23, x24, [sp, #48]
    ebf8:	ldp	x25, x26, [sp, #64]
    ebfc:	ldr	d8, [sp, #88]
    ec00:	b	e924 <PyFloat_FromString@plt+0x7e94>
    ec04:	mov	w2, #0x4                   	// #4
    ec08:	mov	w1, #0x0                   	// #0
    ec0c:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
    ec10:	ldp	x21, x22, [sp, #32]
    ec14:	ldp	x23, x24, [sp, #48]
    ec18:	ldr	d8, [sp, #88]
    ec1c:	b	e924 <PyFloat_FromString@plt+0x7e94>
    ec20:	mov	x0, x20
    ec24:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    ec28:	mov	x0, x21
    ec2c:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    ec30:	ldr	x0, [x19]
    ec34:	sub	x0, x0, #0x1
    ec38:	str	x0, [x19]
    ec3c:	cbnz	x0, eb7c <PyFloat_FromString@plt+0x80ec>
    ec40:	mov	x0, x19
    ec44:	b	eb48 <PyFloat_FromString@plt+0x80b8>
    ec48:	mov	x0, x19
    ec4c:	bl	65d0 <_Py_Dealloc@plt>
    ec50:	b	ebe8 <PyFloat_FromString@plt+0x8158>
    ec54:	mov	x0, x19
    ec58:	mov	x19, #0x0                   	// #0
    ec5c:	bl	65d0 <_Py_Dealloc@plt>
    ec60:	b	eab8 <PyFloat_FromString@plt+0x8028>
    ec64:	nop
    ec68:	stp	x29, x30, [sp, #-64]!
    ec6c:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
    ec70:	mov	x29, sp
    ec74:	stp	x21, x22, [sp, #32]
    ec78:	mov	x21, x0
    ec7c:	mov	x22, x1
    ec80:	ldr	x0, [x2, #2056]
    ec84:	mov	x1, #0x0                   	// #0
    ec88:	add	x2, sp, #0x38
    ec8c:	stp	x19, x20, [sp, #16]
    ec90:	bl	6740 <PyContextVar_Get@plt>
    ec94:	tbnz	w0, #31, ed24 <PyFloat_FromString@plt+0x8294>
    ec98:	ldr	x19, [sp, #56]
    ec9c:	cbz	x19, ed18 <PyFloat_FromString@plt+0x8288>
    eca0:	ldr	x2, [x19]
    eca4:	sub	x2, x2, #0x1
    eca8:	str	x2, [x19]
    ecac:	cbz	x2, ed3c <PyFloat_FromString@plt+0x82ac>
    ecb0:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
    ecb4:	add	x20, x20, #0x328
    ecb8:	add	x20, x20, #0x1a0
    ecbc:	mov	x2, x19
    ecc0:	mov	x0, x20
    ecc4:	mov	x1, x22
    ecc8:	bl	e810 <PyFloat_FromString@plt+0x7d80>
    eccc:	mov	x19, x0
    ecd0:	cmp	x21, x20
    ecd4:	mov	x20, x0
    ecd8:	b.eq	ed04 <PyFloat_FromString@plt+0x8274>  // b.none
    ecdc:	cbz	x0, ed24 <PyFloat_FromString@plt+0x8294>
    ece0:	mov	x1, x0
    ece4:	mov	x2, #0x0                   	// #0
    ece8:	mov	x0, x21
    ecec:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    ecf0:	ldr	x1, [x20]
    ecf4:	mov	x19, x0
    ecf8:	sub	x0, x1, #0x1
    ecfc:	str	x0, [x20]
    ed00:	cbz	x0, ed48 <PyFloat_FromString@plt+0x82b8>
    ed04:	mov	x0, x19
    ed08:	ldp	x19, x20, [sp, #16]
    ed0c:	ldp	x21, x22, [sp, #32]
    ed10:	ldp	x29, x30, [sp], #64
    ed14:	ret
    ed18:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    ed1c:	mov	x19, x0
    ed20:	cbnz	x0, eca0 <PyFloat_FromString@plt+0x8210>
    ed24:	mov	x19, #0x0                   	// #0
    ed28:	mov	x0, x19
    ed2c:	ldp	x19, x20, [sp, #16]
    ed30:	ldp	x21, x22, [sp, #32]
    ed34:	ldp	x29, x30, [sp], #64
    ed38:	ret
    ed3c:	mov	x0, x19
    ed40:	bl	65d0 <_Py_Dealloc@plt>
    ed44:	b	ecb0 <PyFloat_FromString@plt+0x8220>
    ed48:	mov	x0, x20
    ed4c:	bl	65d0 <_Py_Dealloc@plt>
    ed50:	mov	x0, x19
    ed54:	ldp	x19, x20, [sp, #16]
    ed58:	ldp	x21, x22, [sp, #32]
    ed5c:	ldp	x29, x30, [sp], #64
    ed60:	ret
    ed64:	nop
    ed68:	stp	x29, x30, [sp, #-176]!
    ed6c:	mov	x29, sp
    ed70:	stp	x23, x24, [sp, #48]
    ed74:	adrp	x24, 65000 <PyInit__decimal@@Base+0x48dc0>
    ed78:	add	x3, x24, #0x7a0
    ed7c:	mov	x23, x0
    ed80:	stp	x25, x26, [sp, #64]
    ed84:	add	x25, sp, #0x80
    ed88:	ldr	x0, [x3, #104]
    ed8c:	stp	x19, x20, [sp, #16]
    ed90:	mov	x19, x1
    ed94:	mov	x1, #0x0                   	// #0
    ed98:	stp	x21, x22, [sp, #32]
    ed9c:	mov	w21, w2
    eda0:	mov	x2, x25
    eda4:	str	wzr, [sp, #120]
    eda8:	bl	6740 <PyContextVar_Get@plt>
    edac:	tbnz	w0, #31, eeb0 <PyFloat_FromString@plt+0x8420>
    edb0:	ldr	x20, [sp, #128]
    edb4:	cbz	x20, eed8 <PyFloat_FromString@plt+0x8448>
    edb8:	ldr	x1, [x20]
    edbc:	sub	x1, x1, #0x1
    edc0:	str	x1, [x20]
    edc4:	cbz	x1, eecc <PyFloat_FromString@plt+0x843c>
    edc8:	ldr	x0, [x19, #8]
    edcc:	adrp	x26, 63000 <PyInit__decimal@@Base+0x46dc0>
    edd0:	add	x22, x26, #0x328
    edd4:	add	x22, x22, #0x1a0
    edd8:	cmp	x0, x22
    eddc:	b.eq	ee70 <PyFloat_FromString@plt+0x83e0>  // b.none
    ede0:	mov	x1, x22
    ede4:	bl	69c0 <PyType_IsSubtype@plt>
    ede8:	cbnz	w0, ee70 <PyFloat_FromString@plt+0x83e0>
    edec:	ldr	x0, [x19, #8]
    edf0:	ldr	x1, [x0, #168]
    edf4:	tbnz	w1, #24, efac <PyFloat_FromString@plt+0x851c>
    edf8:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    edfc:	ldr	x1, [x1, #3864]
    ee00:	cmp	x0, x1
    ee04:	b.eq	efd0 <PyFloat_FromString@plt+0x8540>  // b.none
    ee08:	bl	69c0 <PyType_IsSubtype@plt>
    ee0c:	cbnz	w0, efd0 <PyFloat_FromString@plt+0x8540>
    ee10:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    ee14:	ldr	x0, [x19, #8]
    ee18:	ldr	x1, [x1, #3952]
    ee1c:	cmp	x0, x1
    ee20:	b.eq	ee2c <PyFloat_FromString@plt+0x839c>  // b.none
    ee24:	bl	69c0 <PyType_IsSubtype@plt>
    ee28:	cbz	w0, ee38 <PyFloat_FromString@plt+0x83a8>
    ee2c:	sub	w0, w21, #0x2
    ee30:	cmp	w0, #0x1
    ee34:	b.ls	f0e4 <PyFloat_FromString@plt+0x8654>  // b.plast
    ee38:	add	x24, x24, #0x7a0
    ee3c:	mov	x0, x19
    ee40:	ldr	x1, [x24, #152]
    ee44:	bl	6660 <PyObject_IsInstance@plt>
    ee48:	cmp	w0, #0x0
    ee4c:	b.lt	eeb0 <PyFloat_FromString@plt+0x8420>  // b.tstop
    ee50:	b.ne	f11c <PyFloat_FromString@plt+0x868c>  // b.any
    ee54:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    ee58:	ldr	x1, [x1, #3912]
    ee5c:	mov	x0, x1
    ee60:	ldr	x2, [x1]
    ee64:	add	x2, x2, #0x1
    ee68:	str	x2, [x1]
    ee6c:	b	ee90 <PyFloat_FromString@plt+0x8400>
    ee70:	ldr	x0, [x19]
    ee74:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    ee78:	add	x0, x0, #0x1
    ee7c:	str	x0, [x19]
    ee80:	ldr	x0, [x1, #3912]
    ee84:	cmp	x19, x0
    ee88:	b.ne	eeec <PyFloat_FromString@plt+0x845c>  // b.any
    ee8c:	ldr	x0, [x1, #3912]
    ee90:	ldp	x19, x20, [sp, #16]
    ee94:	ldp	x21, x22, [sp, #32]
    ee98:	ldp	x23, x24, [sp, #48]
    ee9c:	ldp	x25, x26, [sp, #64]
    eea0:	ldp	x29, x30, [sp], #176
    eea4:	ret
    eea8:	ldp	x27, x28, [sp, #80]
    eeac:	nop
    eeb0:	mov	x0, #0x0                   	// #0
    eeb4:	ldp	x19, x20, [sp, #16]
    eeb8:	ldp	x21, x22, [sp, #32]
    eebc:	ldp	x23, x24, [sp, #48]
    eec0:	ldp	x25, x26, [sp, #64]
    eec4:	ldp	x29, x30, [sp], #176
    eec8:	ret
    eecc:	mov	x0, x20
    eed0:	bl	65d0 <_Py_Dealloc@plt>
    eed4:	b	edc8 <PyFloat_FromString@plt+0x8338>
    eed8:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    eedc:	mov	x20, x0
    eee0:	cbnz	x0, edb8 <PyFloat_FromString@plt+0x8328>
    eee4:	mov	x0, #0x0                   	// #0
    eee8:	b	eeb4 <PyFloat_FromString@plt+0x8424>
    eeec:	mov	x26, x23
    eef0:	stp	x27, x28, [sp, #80]
    eef4:	add	x27, x23, #0x18
    eef8:	ldr	x0, [x23]
    eefc:	mov	x24, x19
    ef00:	add	x0, x0, #0x1
    ef04:	str	x0, [x23]
    ef08:	add	x19, x24, #0x18
    ef0c:	mov	x0, x27
    ef10:	bl	2a8b8 <PyInit__decimal@@Base+0xe678>
    ef14:	mov	w22, w0
    ef18:	mov	x0, x19
    ef1c:	bl	2a8b8 <PyInit__decimal@@Base+0xe678>
    ef20:	mov	x1, x19
    ef24:	mov	w23, w0
    ef28:	add	x2, sp, #0x78
    ef2c:	mov	x0, x27
    ef30:	bl	2d9b8 <PyInit__decimal@@Base+0x11778>
    ef34:	mov	w19, w0
    ef38:	ldr	x1, [x26]
    ef3c:	sub	x1, x1, #0x1
    ef40:	str	x1, [x26]
    ef44:	cbz	x1, f0b4 <PyFloat_FromString@plt+0x8624>
    ef48:	ldr	x1, [x24]
    ef4c:	sub	x1, x1, #0x1
    ef50:	str	x1, [x24]
    ef54:	cbz	x1, f0a8 <PyFloat_FromString@plt+0x8618>
    ef58:	mov	w0, #0x7fffffff            	// #2147483647
    ef5c:	cmp	w19, w0
    ef60:	b.eq	f040 <PyFloat_FromString@plt+0x85b0>  // b.none
    ef64:	cmp	w21, #0x3
    ef68:	b.eq	f0c0 <PyFloat_FromString@plt+0x8630>  // b.none
    ef6c:	b.gt	f024 <PyFloat_FromString@plt+0x8594>
    ef70:	cmp	w21, #0x1
    ef74:	b.eq	f0d8 <PyFloat_FromString@plt+0x8648>  // b.none
    ef78:	cmp	w21, #0x2
    ef7c:	b.ne	f014 <PyFloat_FromString@plt+0x8584>  // b.any
    ef80:	cmp	w19, #0x0
    ef84:	cset	w19, eq  // eq = none
    ef88:	sxtw	x0, w19
    ef8c:	bl	6750 <PyBool_FromLong@plt>
    ef90:	ldp	x19, x20, [sp, #16]
    ef94:	ldp	x21, x22, [sp, #32]
    ef98:	ldp	x23, x24, [sp, #48]
    ef9c:	ldp	x25, x26, [sp, #64]
    efa0:	ldp	x27, x28, [sp, #80]
    efa4:	ldp	x29, x30, [sp], #176
    efa8:	ret
    efac:	mov	x1, x19
    efb0:	mov	x0, x22
    efb4:	mov	x2, x20
    efb8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    efbc:	mov	x19, x0
    efc0:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    efc4:	cbnz	x19, ee80 <PyFloat_FromString@plt+0x83f0>
    efc8:	mov	x0, #0x0                   	// #0
    efcc:	b	eeb4 <PyFloat_FromString@plt+0x8424>
    efd0:	sub	w0, w21, #0x2
    efd4:	cmp	w0, #0x1
    efd8:	b.ls	efec <PyFloat_FromString@plt+0x855c>  // b.plast
    efdc:	mov	x0, x20
    efe0:	mov	w1, #0x400                 	// #1024
    efe4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    efe8:	cbnz	w0, eeb0 <PyFloat_FromString@plt+0x8420>
    efec:	ldr	w3, [x20, #44]
    eff0:	add	x0, x26, #0x328
    eff4:	mov	x1, x19
    eff8:	add	x0, x0, #0x1a0
    effc:	orr	w3, w3, #0x400
    f000:	str	w3, [x20, #44]
    f004:	mov	x2, x20
    f008:	bl	e810 <PyFloat_FromString@plt+0x7d80>
    f00c:	mov	x19, x0
    f010:	b	efc0 <PyFloat_FromString@plt+0x8530>
    f014:	cbnz	w21, ef88 <PyFloat_FromString@plt+0x84f8>
    f018:	cmn	w19, #0x1
    f01c:	cset	w19, eq  // eq = none
    f020:	b	ef88 <PyFloat_FromString@plt+0x84f8>
    f024:	cmp	w21, #0x4
    f028:	b.eq	f0cc <PyFloat_FromString@plt+0x863c>  // b.none
    f02c:	cmp	w21, #0x5
    f030:	b.ne	ef88 <PyFloat_FromString@plt+0x84f8>  // b.any
    f034:	mvn	w19, w19
    f038:	lsr	w19, w19, #31
    f03c:	b	ef88 <PyFloat_FromString@plt+0x84f8>
    f040:	orr	w22, w22, w23
    f044:	cbnz	w22, f054 <PyFloat_FromString@plt+0x85c4>
    f048:	sub	w0, w21, #0x2
    f04c:	cmp	w0, #0x1
    f050:	b.ls	f064 <PyFloat_FromString@plt+0x85d4>  // b.plast
    f054:	ldr	w1, [sp, #120]
    f058:	mov	x0, x20
    f05c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    f060:	cbnz	w0, eea8 <PyFloat_FromString@plt+0x8418>
    f064:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    f068:	cmp	w21, #0x3
    f06c:	ldr	x1, [x1, #3976]
    f070:	b.ne	f07c <PyFloat_FromString@plt+0x85ec>  // b.any
    f074:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    f078:	ldr	x1, [x1, #4024]
    f07c:	mov	x0, x1
    f080:	ldr	x2, [x1]
    f084:	ldp	x27, x28, [sp, #80]
    f088:	add	x2, x2, #0x1
    f08c:	str	x2, [x1]
    f090:	ldp	x19, x20, [sp, #16]
    f094:	ldp	x21, x22, [sp, #32]
    f098:	ldp	x23, x24, [sp, #48]
    f09c:	ldp	x25, x26, [sp, #64]
    f0a0:	ldp	x29, x30, [sp], #176
    f0a4:	ret
    f0a8:	mov	x0, x24
    f0ac:	bl	65d0 <_Py_Dealloc@plt>
    f0b0:	b	ef58 <PyFloat_FromString@plt+0x84c8>
    f0b4:	mov	x0, x26
    f0b8:	bl	65d0 <_Py_Dealloc@plt>
    f0bc:	b	ef48 <PyFloat_FromString@plt+0x84b8>
    f0c0:	cmp	w19, #0x0
    f0c4:	cset	w19, ne  // ne = any
    f0c8:	b	ef88 <PyFloat_FromString@plt+0x84f8>
    f0cc:	cmp	w19, #0x1
    f0d0:	cset	w19, eq  // eq = none
    f0d4:	b	ef88 <PyFloat_FromString@plt+0x84f8>
    f0d8:	cmp	w19, #0x0
    f0dc:	cset	w19, le
    f0e0:	b	ef88 <PyFloat_FromString@plt+0x84f8>
    f0e4:	mov	x0, x19
    f0e8:	bl	69f0 <PyComplex_AsCComplex@plt>
    f0ec:	fmov	d2, #-1.000000000000000000e+00
    f0f0:	fcmp	d0, d2
    f0f4:	b.eq	f190 <PyFloat_FromString@plt+0x8700>  // b.none
    f0f8:	fcmp	d1, #0.0
    f0fc:	b.eq	f1a8 <PyFloat_FromString@plt+0x8718>  // b.none
    f100:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    f104:	ldr	x0, [x1, #3912]
    f108:	mov	x19, x0
    f10c:	ldr	x2, [x0]
    f110:	add	x2, x2, #0x1
    f114:	str	x2, [x0]
    f118:	b	ee80 <PyFloat_FromString@plt+0x83f0>
    f11c:	mov	x0, x19
    f120:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    f124:	add	x1, x1, #0xde8
    f128:	bl	6580 <PyObject_GetAttrString@plt>
    f12c:	mov	x22, x0
    f130:	cbz	x0, eeb0 <PyFloat_FromString@plt+0x8420>
    f134:	add	x0, x26, #0x328
    f138:	mov	x1, x22
    f13c:	mov	x2, x20
    f140:	add	x0, x0, #0x1a0
    f144:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    f148:	mov	x24, x0
    f14c:	ldr	x1, [x22]
    f150:	sub	x0, x1, #0x1
    f154:	str	x0, [x22]
    f158:	cbz	x0, f184 <PyFloat_FromString@plt+0x86f4>
    f15c:	cbz	x24, eeb0 <PyFloat_FromString@plt+0x8420>
    f160:	stp	x27, x28, [sp, #80]
    f164:	add	x27, x23, #0x18
    f168:	mov	x0, x27
    f16c:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
    f170:	cbz	w0, f1f4 <PyFloat_FromString@plt+0x8764>
    f174:	mov	x19, x24
    f178:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    f17c:	ldp	x27, x28, [sp, #80]
    f180:	b	ee80 <PyFloat_FromString@plt+0x83f0>
    f184:	mov	x0, x22
    f188:	bl	65d0 <_Py_Dealloc@plt>
    f18c:	b	f15c <PyFloat_FromString@plt+0x86cc>
    f190:	stp	d0, d1, [sp, #96]
    f194:	bl	67e0 <PyErr_Occurred@plt>
    f198:	ldp	d0, d1, [sp, #96]
    f19c:	cbz	x0, f0f8 <PyFloat_FromString@plt+0x8668>
    f1a0:	mov	x0, #0x0                   	// #0
    f1a4:	b	eeb4 <PyFloat_FromString@plt+0x8424>
    f1a8:	bl	66b0 <PyFloat_FromDouble@plt>
    f1ac:	mov	x22, x0
    f1b0:	cbz	x0, eeb0 <PyFloat_FromString@plt+0x8420>
    f1b4:	ldr	w3, [x20, #44]
    f1b8:	add	x0, x26, #0x328
    f1bc:	mov	x1, x22
    f1c0:	add	x0, x0, #0x1a0
    f1c4:	orr	w3, w3, #0x400
    f1c8:	str	w3, [x20, #44]
    f1cc:	mov	x2, x20
    f1d0:	bl	e810 <PyFloat_FromString@plt+0x7d80>
    f1d4:	mov	x19, x0
    f1d8:	ldr	x1, [x22]
    f1dc:	sub	x0, x1, #0x1
    f1e0:	str	x0, [x22]
    f1e4:	cbnz	x0, efc0 <PyFloat_FromString@plt+0x8530>
    f1e8:	mov	x0, x22
    f1ec:	bl	65d0 <_Py_Dealloc@plt>
    f1f0:	b	efc0 <PyFloat_FromString@plt+0x8530>
    f1f4:	mov	x0, x19
    f1f8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    f1fc:	add	x1, x1, #0xdf8
    f200:	str	wzr, [sp, #124]
    f204:	bl	6580 <PyObject_GetAttrString@plt>
    f208:	mov	x19, x0
    f20c:	cbz	x0, f334 <PyFloat_FromString@plt+0x88a4>
    f210:	add	x0, x26, #0x328
    f214:	mov	x1, x19
    f218:	mov	x2, x20
    f21c:	add	x0, x0, #0x1a0
    f220:	bl	9b98 <PyFloat_FromString@plt+0x3108>
    f224:	mov	x22, x0
    f228:	ldr	x1, [x19]
    f22c:	sub	x0, x1, #0x1
    f230:	str	x0, [x19]
    f234:	cbz	x0, f2f8 <PyFloat_FromString@plt+0x8868>
    f238:	cbz	x22, f334 <PyFloat_FromString@plt+0x88a4>
    f23c:	mov	x0, x27
    f240:	bl	2d8a0 <PyInit__decimal@@Base+0x11660>
    f244:	mov	x19, x0
    f248:	cbz	x0, f388 <PyFloat_FromString@plt+0x88f8>
    f24c:	add	x26, x26, #0x328
    f250:	add	x0, x26, #0x1a0
    f254:	bl	6950 <_PyObject_New@plt>
    f258:	mov	x26, x0
    f25c:	cbz	x0, f36c <PyFloat_FromString@plt+0x88dc>
    f260:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    f264:	add	x1, x26, #0x48
    f268:	mov	x2, #0xffffffffffffffff    	// #-1
    f26c:	str	x2, [x26, #16]
    f270:	ldr	q0, [x0, #2128]
    f274:	mov	w0, #0x30                  	// #48
    f278:	strb	w0, [x26, #24]
    f27c:	mov	x0, x25
    f280:	stp	xzr, xzr, [x26, #32]
    f284:	add	x27, x26, #0x18
    f288:	str	x1, [x26, #64]
    f28c:	str	q0, [x26, #48]
    f290:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
    f294:	ldr	x28, [x19, #8]
    f298:	str	xzr, [x19, #8]
    f29c:	mov	x0, x27
    f2a0:	mov	x3, x25
    f2a4:	add	x4, sp, #0x7c
    f2a8:	add	x2, x22, #0x18
    f2ac:	mov	x1, x19
    f2b0:	bl	38c18 <PyInit__decimal@@Base+0x1c9d8>
    f2b4:	ldr	x0, [x22]
    f2b8:	str	x28, [x26, #32]
    f2bc:	sub	x0, x0, #0x1
    f2c0:	str	x0, [x22]
    f2c4:	cbz	x0, f358 <PyFloat_FromString@plt+0x88c8>
    f2c8:	mov	x0, x19
    f2cc:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    f2d0:	ldr	w0, [sp, #124]
    f2d4:	cbnz	w0, f304 <PyFloat_FromString@plt+0x8874>
    f2d8:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
    f2dc:	ldr	x0, [x1, #3912]
    f2e0:	cmp	x24, x0
    f2e4:	b.eq	f364 <PyFloat_FromString@plt+0x88d4>  // b.none
    f2e8:	cmp	x23, x26
    f2ec:	b.ne	ef08 <PyFloat_FromString@plt+0x8478>  // b.any
    f2f0:	mov	x19, x24
    f2f4:	b	eef8 <PyFloat_FromString@plt+0x8468>
    f2f8:	mov	x0, x19
    f2fc:	bl	65d0 <_Py_Dealloc@plt>
    f300:	b	f238 <PyFloat_FromString@plt+0x87a8>
    f304:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    f308:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    f30c:	add	x1, x1, #0xe08
    f310:	ldr	x0, [x0, #3928]
    f314:	ldr	x0, [x0]
    f318:	bl	6650 <PyErr_SetString@plt>
    f31c:	ldr	x0, [x26]
    f320:	sub	x0, x0, #0x1
    f324:	str	x0, [x26]
    f328:	cbnz	x0, f334 <PyFloat_FromString@plt+0x88a4>
    f32c:	mov	x0, x26
    f330:	bl	65d0 <_Py_Dealloc@plt>
    f334:	ldr	x0, [x24]
    f338:	sub	x0, x0, #0x1
    f33c:	str	x0, [x24]
    f340:	cbnz	x0, eea8 <PyFloat_FromString@plt+0x8418>
    f344:	mov	x0, x24
    f348:	bl	65d0 <_Py_Dealloc@plt>
    f34c:	mov	x0, #0x0                   	// #0
    f350:	ldp	x27, x28, [sp, #80]
    f354:	b	ee90 <PyFloat_FromString@plt+0x8400>
    f358:	mov	x0, x22
    f35c:	bl	65d0 <_Py_Dealloc@plt>
    f360:	b	f2c8 <PyFloat_FromString@plt+0x8838>
    f364:	ldp	x27, x28, [sp, #80]
    f368:	b	ee8c <PyFloat_FromString@plt+0x83fc>
    f36c:	ldr	x0, [x22]
    f370:	sub	x0, x0, #0x1
    f374:	str	x0, [x22]
    f378:	cbz	x0, f3a0 <PyFloat_FromString@plt+0x8910>
    f37c:	mov	x0, x19
    f380:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
    f384:	b	f334 <PyFloat_FromString@plt+0x88a4>
    f388:	ldr	x0, [x22]
    f38c:	sub	x0, x0, #0x1
    f390:	str	x0, [x22]
    f394:	cbz	x0, f3ac <PyFloat_FromString@plt+0x891c>
    f398:	bl	65e0 <PyErr_NoMemory@plt>
    f39c:	b	f334 <PyFloat_FromString@plt+0x88a4>
    f3a0:	mov	x0, x22
    f3a4:	bl	65d0 <_Py_Dealloc@plt>
    f3a8:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f3ac:	mov	x0, x22
    f3b0:	bl	65d0 <_Py_Dealloc@plt>
    f3b4:	bl	65e0 <PyErr_NoMemory@plt>
    f3b8:	b	f334 <PyFloat_FromString@plt+0x88a4>
    f3bc:	nop
    f3c0:	stp	x29, x30, [sp, #-48]!
    f3c4:	adrp	x2, 63000 <PyInit__decimal@@Base+0x46dc0>
    f3c8:	mov	x29, sp
    f3cc:	stp	x19, x20, [sp, #16]
    f3d0:	mov	x20, x0
    f3d4:	add	x0, x2, #0x328
    f3d8:	add	x0, x0, #0x1a0
    f3dc:	mov	x2, x20
    f3e0:	str	wzr, [sp, #44]
    f3e4:	bl	e810 <PyFloat_FromString@plt+0x7d80>
    f3e8:	cbz	x0, f430 <PyFloat_FromString@plt+0x89a0>
    f3ec:	add	x1, x20, #0x10
    f3f0:	mov	x19, x0
    f3f4:	add	x2, sp, #0x2c
    f3f8:	add	x0, x0, #0x18
    f3fc:	bl	2f360 <PyInit__decimal@@Base+0x13120>
    f400:	ldr	w1, [sp, #44]
    f404:	mov	x0, x20
    f408:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    f40c:	cbnz	w0, f420 <PyFloat_FromString@plt+0x8990>
    f410:	mov	x0, x19
    f414:	ldp	x19, x20, [sp, #16]
    f418:	ldp	x29, x30, [sp], #48
    f41c:	ret
    f420:	ldr	x0, [x19]
    f424:	sub	x0, x0, #0x1
    f428:	str	x0, [x19]
    f42c:	cbz	x0, f444 <PyFloat_FromString@plt+0x89b4>
    f430:	mov	x19, #0x0                   	// #0
    f434:	mov	x0, x19
    f438:	ldp	x19, x20, [sp, #16]
    f43c:	ldp	x29, x30, [sp], #48
    f440:	ret
    f444:	mov	x0, x19
    f448:	mov	x19, #0x0                   	// #0
    f44c:	bl	65d0 <_Py_Dealloc@plt>
    f450:	b	f410 <PyFloat_FromString@plt+0x8980>
    f454:	nop
    f458:	stp	x29, x30, [sp, #-64]!
    f45c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    f460:	add	x3, x3, #0x9b0
    f464:	mov	x29, sp
    f468:	stp	x19, x20, [sp, #16]
    f46c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    f470:	mov	x20, x0
    f474:	ldr	x19, [x19, #4008]
    f478:	mov	x0, x1
    f47c:	add	x3, x3, #0x320
    f480:	mov	x1, x2
    f484:	add	x4, sp, #0x30
    f488:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    f48c:	add	x2, x2, #0xba0
    f490:	str	wzr, [sp, #44]
    f494:	str	x19, [sp, #48]
    f498:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    f49c:	cbz	w0, f550 <PyFloat_FromString@plt+0x8ac0>
    f4a0:	ldr	x0, [sp, #48]
    f4a4:	cmp	x0, x19
    f4a8:	b.eq	f564 <PyFloat_FromString@plt+0x8ad4>  // b.none
    f4ac:	ldr	x0, [x0, #8]
    f4b0:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f4b4:	add	x1, x19, #0x328
    f4b8:	cmp	x0, x1
    f4bc:	b.eq	f4c8 <PyFloat_FromString@plt+0x8a38>  // b.none
    f4c0:	bl	69c0 <PyType_IsSubtype@plt>
    f4c4:	cbz	w0, f5b4 <PyFloat_FromString@plt+0x8b24>
    f4c8:	add	x19, x19, #0x328
    f4cc:	add	x0, x19, #0x1a0
    f4d0:	bl	6950 <_PyObject_New@plt>
    f4d4:	mov	x19, x0
    f4d8:	cbz	x0, f550 <PyFloat_FromString@plt+0x8ac0>
    f4dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    f4e0:	mov	x1, #0xffffffffffffffff    	// #-1
    f4e4:	ldr	x2, [sp, #48]
    f4e8:	mov	w3, #0x30                  	// #48
    f4ec:	ldr	q0, [x0, #2128]
    f4f0:	add	x0, x19, #0x48
    f4f4:	str	x1, [x19, #16]
    f4f8:	add	x2, x2, #0x10
    f4fc:	strb	w3, [x19, #24]
    f500:	add	x1, x20, #0x18
    f504:	stp	xzr, xzr, [x19, #32]
    f508:	add	x3, sp, #0x2c
    f50c:	str	x0, [x19, #64]
    f510:	add	x0, x19, #0x18
    f514:	str	q0, [x19, #48]
    f518:	bl	397b8 <PyInit__decimal@@Base+0x1d578>
    f51c:	ldr	w1, [sp, #44]
    f520:	ldr	x0, [sp, #48]
    f524:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    f528:	cbnz	w0, f53c <PyFloat_FromString@plt+0x8aac>
    f52c:	mov	x0, x19
    f530:	ldp	x19, x20, [sp, #16]
    f534:	ldp	x29, x30, [sp], #64
    f538:	ret
    f53c:	ldr	x0, [x19]
    f540:	sub	x0, x0, #0x1
    f544:	str	x0, [x19]
    f548:	cbz	x0, f5a4 <PyFloat_FromString@plt+0x8b14>
    f54c:	nop
    f550:	mov	x19, #0x0                   	// #0
    f554:	mov	x0, x19
    f558:	ldp	x19, x20, [sp, #16]
    f55c:	ldp	x29, x30, [sp], #64
    f560:	ret
    f564:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    f568:	add	x2, sp, #0x38
    f56c:	mov	x1, #0x0                   	// #0
    f570:	ldr	x0, [x0, #2056]
    f574:	bl	6740 <PyContextVar_Get@plt>
    f578:	tbnz	w0, #31, f550 <PyFloat_FromString@plt+0x8ac0>
    f57c:	ldr	x0, [sp, #56]
    f580:	cbz	x0, f5d4 <PyFloat_FromString@plt+0x8b44>
    f584:	str	x0, [sp, #48]
    f588:	ldr	x1, [x0]
    f58c:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f590:	sub	x1, x1, #0x1
    f594:	str	x1, [x0]
    f598:	cbnz	x1, f4c8 <PyFloat_FromString@plt+0x8a38>
    f59c:	bl	65d0 <_Py_Dealloc@plt>
    f5a0:	b	f4c8 <PyFloat_FromString@plt+0x8a38>
    f5a4:	mov	x0, x19
    f5a8:	mov	x19, #0x0                   	// #0
    f5ac:	bl	65d0 <_Py_Dealloc@plt>
    f5b0:	b	f52c <PyFloat_FromString@plt+0x8a9c>
    f5b4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    f5b8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    f5bc:	mov	x19, #0x0                   	// #0
    f5c0:	add	x1, x1, #0xba8
    f5c4:	ldr	x0, [x0, #3936]
    f5c8:	ldr	x0, [x0]
    f5cc:	bl	6650 <PyErr_SetString@plt>
    f5d0:	b	f52c <PyFloat_FromString@plt+0x8a9c>
    f5d4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    f5d8:	str	x0, [sp, #48]
    f5dc:	cbnz	x0, f588 <PyFloat_FromString@plt+0x8af8>
    f5e0:	mov	x19, #0x0                   	// #0
    f5e4:	b	f554 <PyFloat_FromString@plt+0x8ac4>
    f5e8:	stp	x29, x30, [sp, #-64]!
    f5ec:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    f5f0:	add	x3, x3, #0x9b0
    f5f4:	mov	x29, sp
    f5f8:	stp	x19, x20, [sp, #16]
    f5fc:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    f600:	mov	x20, x0
    f604:	ldr	x19, [x19, #4008]
    f608:	mov	x0, x1
    f60c:	add	x3, x3, #0x330
    f610:	mov	x1, x2
    f614:	add	x4, sp, #0x30
    f618:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    f61c:	add	x2, x2, #0xba0
    f620:	str	wzr, [sp, #44]
    f624:	str	x19, [sp, #48]
    f628:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    f62c:	cbz	w0, f6e0 <PyFloat_FromString@plt+0x8c50>
    f630:	ldr	x0, [sp, #48]
    f634:	cmp	x0, x19
    f638:	b.eq	f6f4 <PyFloat_FromString@plt+0x8c64>  // b.none
    f63c:	ldr	x0, [x0, #8]
    f640:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f644:	add	x1, x19, #0x328
    f648:	cmp	x0, x1
    f64c:	b.eq	f658 <PyFloat_FromString@plt+0x8bc8>  // b.none
    f650:	bl	69c0 <PyType_IsSubtype@plt>
    f654:	cbz	w0, f744 <PyFloat_FromString@plt+0x8cb4>
    f658:	add	x19, x19, #0x328
    f65c:	add	x0, x19, #0x1a0
    f660:	bl	6950 <_PyObject_New@plt>
    f664:	mov	x19, x0
    f668:	cbz	x0, f6e0 <PyFloat_FromString@plt+0x8c50>
    f66c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    f670:	mov	x1, #0xffffffffffffffff    	// #-1
    f674:	ldr	x2, [sp, #48]
    f678:	mov	w3, #0x30                  	// #48
    f67c:	ldr	q0, [x0, #2128]
    f680:	add	x0, x19, #0x48
    f684:	str	x1, [x19, #16]
    f688:	add	x2, x2, #0x10
    f68c:	strb	w3, [x19, #24]
    f690:	add	x1, x20, #0x18
    f694:	stp	xzr, xzr, [x19, #32]
    f698:	add	x3, sp, #0x2c
    f69c:	str	x0, [x19, #64]
    f6a0:	add	x0, x19, #0x18
    f6a4:	str	q0, [x19, #48]
    f6a8:	bl	3b9c0 <PyInit__decimal@@Base+0x1f780>
    f6ac:	ldr	w1, [sp, #44]
    f6b0:	ldr	x0, [sp, #48]
    f6b4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    f6b8:	cbnz	w0, f6cc <PyFloat_FromString@plt+0x8c3c>
    f6bc:	mov	x0, x19
    f6c0:	ldp	x19, x20, [sp, #16]
    f6c4:	ldp	x29, x30, [sp], #64
    f6c8:	ret
    f6cc:	ldr	x0, [x19]
    f6d0:	sub	x0, x0, #0x1
    f6d4:	str	x0, [x19]
    f6d8:	cbz	x0, f734 <PyFloat_FromString@plt+0x8ca4>
    f6dc:	nop
    f6e0:	mov	x19, #0x0                   	// #0
    f6e4:	mov	x0, x19
    f6e8:	ldp	x19, x20, [sp, #16]
    f6ec:	ldp	x29, x30, [sp], #64
    f6f0:	ret
    f6f4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    f6f8:	add	x2, sp, #0x38
    f6fc:	mov	x1, #0x0                   	// #0
    f700:	ldr	x0, [x0, #2056]
    f704:	bl	6740 <PyContextVar_Get@plt>
    f708:	tbnz	w0, #31, f6e0 <PyFloat_FromString@plt+0x8c50>
    f70c:	ldr	x0, [sp, #56]
    f710:	cbz	x0, f764 <PyFloat_FromString@plt+0x8cd4>
    f714:	str	x0, [sp, #48]
    f718:	ldr	x1, [x0]
    f71c:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f720:	sub	x1, x1, #0x1
    f724:	str	x1, [x0]
    f728:	cbnz	x1, f658 <PyFloat_FromString@plt+0x8bc8>
    f72c:	bl	65d0 <_Py_Dealloc@plt>
    f730:	b	f658 <PyFloat_FromString@plt+0x8bc8>
    f734:	mov	x0, x19
    f738:	mov	x19, #0x0                   	// #0
    f73c:	bl	65d0 <_Py_Dealloc@plt>
    f740:	b	f6bc <PyFloat_FromString@plt+0x8c2c>
    f744:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    f748:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    f74c:	mov	x19, #0x0                   	// #0
    f750:	add	x1, x1, #0xba8
    f754:	ldr	x0, [x0, #3936]
    f758:	ldr	x0, [x0]
    f75c:	bl	6650 <PyErr_SetString@plt>
    f760:	b	f6bc <PyFloat_FromString@plt+0x8c2c>
    f764:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    f768:	str	x0, [sp, #48]
    f76c:	cbnz	x0, f718 <PyFloat_FromString@plt+0x8c88>
    f770:	mov	x19, #0x0                   	// #0
    f774:	b	f6e4 <PyFloat_FromString@plt+0x8c54>
    f778:	stp	x29, x30, [sp, #-64]!
    f77c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    f780:	add	x3, x3, #0x9b0
    f784:	mov	x29, sp
    f788:	stp	x19, x20, [sp, #16]
    f78c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    f790:	mov	x20, x0
    f794:	ldr	x19, [x19, #4008]
    f798:	mov	x0, x1
    f79c:	add	x3, x3, #0x340
    f7a0:	mov	x1, x2
    f7a4:	add	x4, sp, #0x30
    f7a8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    f7ac:	add	x2, x2, #0xba0
    f7b0:	str	wzr, [sp, #44]
    f7b4:	str	x19, [sp, #48]
    f7b8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    f7bc:	cbz	w0, f870 <PyFloat_FromString@plt+0x8de0>
    f7c0:	ldr	x0, [sp, #48]
    f7c4:	cmp	x0, x19
    f7c8:	b.eq	f884 <PyFloat_FromString@plt+0x8df4>  // b.none
    f7cc:	ldr	x0, [x0, #8]
    f7d0:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f7d4:	add	x1, x19, #0x328
    f7d8:	cmp	x0, x1
    f7dc:	b.eq	f7e8 <PyFloat_FromString@plt+0x8d58>  // b.none
    f7e0:	bl	69c0 <PyType_IsSubtype@plt>
    f7e4:	cbz	w0, f8d4 <PyFloat_FromString@plt+0x8e44>
    f7e8:	add	x19, x19, #0x328
    f7ec:	add	x0, x19, #0x1a0
    f7f0:	bl	6950 <_PyObject_New@plt>
    f7f4:	mov	x19, x0
    f7f8:	cbz	x0, f870 <PyFloat_FromString@plt+0x8de0>
    f7fc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    f800:	mov	x1, #0xffffffffffffffff    	// #-1
    f804:	ldr	x2, [sp, #48]
    f808:	mov	w3, #0x30                  	// #48
    f80c:	ldr	q0, [x0, #2128]
    f810:	add	x0, x19, #0x48
    f814:	str	x1, [x19, #16]
    f818:	add	x2, x2, #0x10
    f81c:	strb	w3, [x19, #24]
    f820:	add	x1, x20, #0x18
    f824:	stp	xzr, xzr, [x19, #32]
    f828:	add	x3, sp, #0x2c
    f82c:	str	x0, [x19, #64]
    f830:	add	x0, x19, #0x18
    f834:	str	q0, [x19, #48]
    f838:	bl	3d448 <PyInit__decimal@@Base+0x21208>
    f83c:	ldr	w1, [sp, #44]
    f840:	ldr	x0, [sp, #48]
    f844:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    f848:	cbnz	w0, f85c <PyFloat_FromString@plt+0x8dcc>
    f84c:	mov	x0, x19
    f850:	ldp	x19, x20, [sp, #16]
    f854:	ldp	x29, x30, [sp], #64
    f858:	ret
    f85c:	ldr	x0, [x19]
    f860:	sub	x0, x0, #0x1
    f864:	str	x0, [x19]
    f868:	cbz	x0, f8c4 <PyFloat_FromString@plt+0x8e34>
    f86c:	nop
    f870:	mov	x19, #0x0                   	// #0
    f874:	mov	x0, x19
    f878:	ldp	x19, x20, [sp, #16]
    f87c:	ldp	x29, x30, [sp], #64
    f880:	ret
    f884:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    f888:	add	x2, sp, #0x38
    f88c:	mov	x1, #0x0                   	// #0
    f890:	ldr	x0, [x0, #2056]
    f894:	bl	6740 <PyContextVar_Get@plt>
    f898:	tbnz	w0, #31, f870 <PyFloat_FromString@plt+0x8de0>
    f89c:	ldr	x0, [sp, #56]
    f8a0:	cbz	x0, f8f4 <PyFloat_FromString@plt+0x8e64>
    f8a4:	str	x0, [sp, #48]
    f8a8:	ldr	x1, [x0]
    f8ac:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f8b0:	sub	x1, x1, #0x1
    f8b4:	str	x1, [x0]
    f8b8:	cbnz	x1, f7e8 <PyFloat_FromString@plt+0x8d58>
    f8bc:	bl	65d0 <_Py_Dealloc@plt>
    f8c0:	b	f7e8 <PyFloat_FromString@plt+0x8d58>
    f8c4:	mov	x0, x19
    f8c8:	mov	x19, #0x0                   	// #0
    f8cc:	bl	65d0 <_Py_Dealloc@plt>
    f8d0:	b	f84c <PyFloat_FromString@plt+0x8dbc>
    f8d4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    f8d8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    f8dc:	mov	x19, #0x0                   	// #0
    f8e0:	add	x1, x1, #0xba8
    f8e4:	ldr	x0, [x0, #3936]
    f8e8:	ldr	x0, [x0]
    f8ec:	bl	6650 <PyErr_SetString@plt>
    f8f0:	b	f84c <PyFloat_FromString@plt+0x8dbc>
    f8f4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    f8f8:	str	x0, [sp, #48]
    f8fc:	cbnz	x0, f8a8 <PyFloat_FromString@plt+0x8e18>
    f900:	mov	x19, #0x0                   	// #0
    f904:	b	f874 <PyFloat_FromString@plt+0x8de4>
    f908:	stp	x29, x30, [sp, #-64]!
    f90c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    f910:	add	x3, x3, #0x9b0
    f914:	mov	x29, sp
    f918:	stp	x19, x20, [sp, #16]
    f91c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    f920:	mov	x20, x0
    f924:	ldr	x19, [x19, #4008]
    f928:	mov	x0, x1
    f92c:	add	x3, x3, #0x350
    f930:	mov	x1, x2
    f934:	add	x4, sp, #0x30
    f938:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    f93c:	add	x2, x2, #0xba0
    f940:	str	wzr, [sp, #44]
    f944:	str	x19, [sp, #48]
    f948:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    f94c:	cbz	w0, fa00 <PyFloat_FromString@plt+0x8f70>
    f950:	ldr	x0, [sp, #48]
    f954:	cmp	x0, x19
    f958:	b.eq	fa14 <PyFloat_FromString@plt+0x8f84>  // b.none
    f95c:	ldr	x0, [x0, #8]
    f960:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    f964:	add	x1, x19, #0x328
    f968:	cmp	x0, x1
    f96c:	b.eq	f978 <PyFloat_FromString@plt+0x8ee8>  // b.none
    f970:	bl	69c0 <PyType_IsSubtype@plt>
    f974:	cbz	w0, fa64 <PyFloat_FromString@plt+0x8fd4>
    f978:	add	x19, x19, #0x328
    f97c:	add	x0, x19, #0x1a0
    f980:	bl	6950 <_PyObject_New@plt>
    f984:	mov	x19, x0
    f988:	cbz	x0, fa00 <PyFloat_FromString@plt+0x8f70>
    f98c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    f990:	mov	x1, #0xffffffffffffffff    	// #-1
    f994:	ldr	x2, [sp, #48]
    f998:	mov	w3, #0x30                  	// #48
    f99c:	ldr	q0, [x0, #2128]
    f9a0:	add	x0, x19, #0x48
    f9a4:	str	x1, [x19, #16]
    f9a8:	add	x2, x2, #0x10
    f9ac:	strb	w3, [x19, #24]
    f9b0:	add	x1, x20, #0x18
    f9b4:	stp	xzr, xzr, [x19, #32]
    f9b8:	add	x3, sp, #0x2c
    f9bc:	str	x0, [x19, #64]
    f9c0:	add	x0, x19, #0x18
    f9c4:	str	q0, [x19, #48]
    f9c8:	bl	3ae38 <PyInit__decimal@@Base+0x1ebf8>
    f9cc:	ldr	w1, [sp, #44]
    f9d0:	ldr	x0, [sp, #48]
    f9d4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    f9d8:	cbnz	w0, f9ec <PyFloat_FromString@plt+0x8f5c>
    f9dc:	mov	x0, x19
    f9e0:	ldp	x19, x20, [sp, #16]
    f9e4:	ldp	x29, x30, [sp], #64
    f9e8:	ret
    f9ec:	ldr	x0, [x19]
    f9f0:	sub	x0, x0, #0x1
    f9f4:	str	x0, [x19]
    f9f8:	cbz	x0, fa54 <PyFloat_FromString@plt+0x8fc4>
    f9fc:	nop
    fa00:	mov	x19, #0x0                   	// #0
    fa04:	mov	x0, x19
    fa08:	ldp	x19, x20, [sp, #16]
    fa0c:	ldp	x29, x30, [sp], #64
    fa10:	ret
    fa14:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    fa18:	add	x2, sp, #0x38
    fa1c:	mov	x1, #0x0                   	// #0
    fa20:	ldr	x0, [x0, #2056]
    fa24:	bl	6740 <PyContextVar_Get@plt>
    fa28:	tbnz	w0, #31, fa00 <PyFloat_FromString@plt+0x8f70>
    fa2c:	ldr	x0, [sp, #56]
    fa30:	cbz	x0, fa84 <PyFloat_FromString@plt+0x8ff4>
    fa34:	str	x0, [sp, #48]
    fa38:	ldr	x1, [x0]
    fa3c:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    fa40:	sub	x1, x1, #0x1
    fa44:	str	x1, [x0]
    fa48:	cbnz	x1, f978 <PyFloat_FromString@plt+0x8ee8>
    fa4c:	bl	65d0 <_Py_Dealloc@plt>
    fa50:	b	f978 <PyFloat_FromString@plt+0x8ee8>
    fa54:	mov	x0, x19
    fa58:	mov	x19, #0x0                   	// #0
    fa5c:	bl	65d0 <_Py_Dealloc@plt>
    fa60:	b	f9dc <PyFloat_FromString@plt+0x8f4c>
    fa64:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    fa68:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    fa6c:	mov	x19, #0x0                   	// #0
    fa70:	add	x1, x1, #0xba8
    fa74:	ldr	x0, [x0, #3936]
    fa78:	ldr	x0, [x0]
    fa7c:	bl	6650 <PyErr_SetString@plt>
    fa80:	b	f9dc <PyFloat_FromString@plt+0x8f4c>
    fa84:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    fa88:	str	x0, [sp, #48]
    fa8c:	cbnz	x0, fa38 <PyFloat_FromString@plt+0x8fa8>
    fa90:	mov	x19, #0x0                   	// #0
    fa94:	b	fa04 <PyFloat_FromString@plt+0x8f74>
    fa98:	stp	x29, x30, [sp, #-64]!
    fa9c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    faa0:	add	x3, x3, #0x9b0
    faa4:	mov	x29, sp
    faa8:	stp	x19, x20, [sp, #16]
    faac:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    fab0:	mov	x20, x0
    fab4:	ldr	x19, [x19, #4008]
    fab8:	mov	x0, x1
    fabc:	add	x3, x3, #0x360
    fac0:	mov	x1, x2
    fac4:	add	x4, sp, #0x30
    fac8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    facc:	add	x2, x2, #0xba0
    fad0:	str	wzr, [sp, #44]
    fad4:	str	x19, [sp, #48]
    fad8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    fadc:	cbz	w0, fb90 <PyFloat_FromString@plt+0x9100>
    fae0:	ldr	x0, [sp, #48]
    fae4:	cmp	x0, x19
    fae8:	b.eq	fba4 <PyFloat_FromString@plt+0x9114>  // b.none
    faec:	ldr	x0, [x0, #8]
    faf0:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    faf4:	add	x1, x19, #0x328
    faf8:	cmp	x0, x1
    fafc:	b.eq	fb08 <PyFloat_FromString@plt+0x9078>  // b.none
    fb00:	bl	69c0 <PyType_IsSubtype@plt>
    fb04:	cbz	w0, fbf4 <PyFloat_FromString@plt+0x9164>
    fb08:	add	x19, x19, #0x328
    fb0c:	add	x0, x19, #0x1a0
    fb10:	bl	6950 <_PyObject_New@plt>
    fb14:	mov	x19, x0
    fb18:	cbz	x0, fb90 <PyFloat_FromString@plt+0x9100>
    fb1c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    fb20:	mov	x1, #0xffffffffffffffff    	// #-1
    fb24:	ldr	x2, [sp, #48]
    fb28:	mov	w3, #0x30                  	// #48
    fb2c:	ldr	q0, [x0, #2128]
    fb30:	add	x0, x19, #0x48
    fb34:	str	x1, [x19, #16]
    fb38:	add	x2, x2, #0x10
    fb3c:	strb	w3, [x19, #24]
    fb40:	add	x1, x20, #0x18
    fb44:	stp	xzr, xzr, [x19, #32]
    fb48:	add	x3, sp, #0x2c
    fb4c:	str	x0, [x19, #64]
    fb50:	add	x0, x19, #0x18
    fb54:	str	q0, [x19, #48]
    fb58:	bl	37940 <PyInit__decimal@@Base+0x1b700>
    fb5c:	ldr	w1, [sp, #44]
    fb60:	ldr	x0, [sp, #48]
    fb64:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    fb68:	cbnz	w0, fb7c <PyFloat_FromString@plt+0x90ec>
    fb6c:	mov	x0, x19
    fb70:	ldp	x19, x20, [sp, #16]
    fb74:	ldp	x29, x30, [sp], #64
    fb78:	ret
    fb7c:	ldr	x0, [x19]
    fb80:	sub	x0, x0, #0x1
    fb84:	str	x0, [x19]
    fb88:	cbz	x0, fbe4 <PyFloat_FromString@plt+0x9154>
    fb8c:	nop
    fb90:	mov	x19, #0x0                   	// #0
    fb94:	mov	x0, x19
    fb98:	ldp	x19, x20, [sp, #16]
    fb9c:	ldp	x29, x30, [sp], #64
    fba0:	ret
    fba4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    fba8:	add	x2, sp, #0x38
    fbac:	mov	x1, #0x0                   	// #0
    fbb0:	ldr	x0, [x0, #2056]
    fbb4:	bl	6740 <PyContextVar_Get@plt>
    fbb8:	tbnz	w0, #31, fb90 <PyFloat_FromString@plt+0x9100>
    fbbc:	ldr	x0, [sp, #56]
    fbc0:	cbz	x0, fc14 <PyFloat_FromString@plt+0x9184>
    fbc4:	str	x0, [sp, #48]
    fbc8:	ldr	x1, [x0]
    fbcc:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    fbd0:	sub	x1, x1, #0x1
    fbd4:	str	x1, [x0]
    fbd8:	cbnz	x1, fb08 <PyFloat_FromString@plt+0x9078>
    fbdc:	bl	65d0 <_Py_Dealloc@plt>
    fbe0:	b	fb08 <PyFloat_FromString@plt+0x9078>
    fbe4:	mov	x0, x19
    fbe8:	mov	x19, #0x0                   	// #0
    fbec:	bl	65d0 <_Py_Dealloc@plt>
    fbf0:	b	fb6c <PyFloat_FromString@plt+0x90dc>
    fbf4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    fbf8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    fbfc:	mov	x19, #0x0                   	// #0
    fc00:	add	x1, x1, #0xba8
    fc04:	ldr	x0, [x0, #3936]
    fc08:	ldr	x0, [x0]
    fc0c:	bl	6650 <PyErr_SetString@plt>
    fc10:	b	fb6c <PyFloat_FromString@plt+0x90dc>
    fc14:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    fc18:	str	x0, [sp, #48]
    fc1c:	cbnz	x0, fbc8 <PyFloat_FromString@plt+0x9138>
    fc20:	mov	x19, #0x0                   	// #0
    fc24:	b	fb94 <PyFloat_FromString@plt+0x9104>
    fc28:	stp	x29, x30, [sp, #-64]!
    fc2c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    fc30:	add	x3, x3, #0x9b0
    fc34:	mov	x29, sp
    fc38:	stp	x19, x20, [sp, #16]
    fc3c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    fc40:	mov	x20, x0
    fc44:	ldr	x19, [x19, #4008]
    fc48:	mov	x0, x1
    fc4c:	add	x3, x3, #0x370
    fc50:	mov	x1, x2
    fc54:	add	x4, sp, #0x30
    fc58:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    fc5c:	add	x2, x2, #0xba0
    fc60:	str	wzr, [sp, #44]
    fc64:	str	x19, [sp, #48]
    fc68:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    fc6c:	cbz	w0, fd20 <PyFloat_FromString@plt+0x9290>
    fc70:	ldr	x0, [sp, #48]
    fc74:	cmp	x0, x19
    fc78:	b.eq	fd34 <PyFloat_FromString@plt+0x92a4>  // b.none
    fc7c:	ldr	x0, [x0, #8]
    fc80:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    fc84:	add	x1, x19, #0x328
    fc88:	cmp	x0, x1
    fc8c:	b.eq	fc98 <PyFloat_FromString@plt+0x9208>  // b.none
    fc90:	bl	69c0 <PyType_IsSubtype@plt>
    fc94:	cbz	w0, fd84 <PyFloat_FromString@plt+0x92f4>
    fc98:	add	x19, x19, #0x328
    fc9c:	add	x0, x19, #0x1a0
    fca0:	bl	6950 <_PyObject_New@plt>
    fca4:	mov	x19, x0
    fca8:	cbz	x0, fd20 <PyFloat_FromString@plt+0x9290>
    fcac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    fcb0:	mov	x1, #0xffffffffffffffff    	// #-1
    fcb4:	ldr	x2, [sp, #48]
    fcb8:	mov	w3, #0x30                  	// #48
    fcbc:	ldr	q0, [x0, #2128]
    fcc0:	add	x0, x19, #0x48
    fcc4:	str	x1, [x19, #16]
    fcc8:	add	x2, x2, #0x10
    fccc:	strb	w3, [x19, #24]
    fcd0:	add	x1, x20, #0x18
    fcd4:	stp	xzr, xzr, [x19, #32]
    fcd8:	add	x3, sp, #0x2c
    fcdc:	str	x0, [x19, #64]
    fce0:	add	x0, x19, #0x18
    fce4:	str	q0, [x19, #48]
    fce8:	bl	3ac98 <PyInit__decimal@@Base+0x1ea58>
    fcec:	ldr	w1, [sp, #44]
    fcf0:	ldr	x0, [sp, #48]
    fcf4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    fcf8:	cbnz	w0, fd0c <PyFloat_FromString@plt+0x927c>
    fcfc:	mov	x0, x19
    fd00:	ldp	x19, x20, [sp, #16]
    fd04:	ldp	x29, x30, [sp], #64
    fd08:	ret
    fd0c:	ldr	x0, [x19]
    fd10:	sub	x0, x0, #0x1
    fd14:	str	x0, [x19]
    fd18:	cbz	x0, fd74 <PyFloat_FromString@plt+0x92e4>
    fd1c:	nop
    fd20:	mov	x19, #0x0                   	// #0
    fd24:	mov	x0, x19
    fd28:	ldp	x19, x20, [sp, #16]
    fd2c:	ldp	x29, x30, [sp], #64
    fd30:	ret
    fd34:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    fd38:	add	x2, sp, #0x38
    fd3c:	mov	x1, #0x0                   	// #0
    fd40:	ldr	x0, [x0, #2056]
    fd44:	bl	6740 <PyContextVar_Get@plt>
    fd48:	tbnz	w0, #31, fd20 <PyFloat_FromString@plt+0x9290>
    fd4c:	ldr	x0, [sp, #56]
    fd50:	cbz	x0, fda4 <PyFloat_FromString@plt+0x9314>
    fd54:	str	x0, [sp, #48]
    fd58:	ldr	x1, [x0]
    fd5c:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    fd60:	sub	x1, x1, #0x1
    fd64:	str	x1, [x0]
    fd68:	cbnz	x1, fc98 <PyFloat_FromString@plt+0x9208>
    fd6c:	bl	65d0 <_Py_Dealloc@plt>
    fd70:	b	fc98 <PyFloat_FromString@plt+0x9208>
    fd74:	mov	x0, x19
    fd78:	mov	x19, #0x0                   	// #0
    fd7c:	bl	65d0 <_Py_Dealloc@plt>
    fd80:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fd84:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    fd88:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    fd8c:	mov	x19, #0x0                   	// #0
    fd90:	add	x1, x1, #0xba8
    fd94:	ldr	x0, [x0, #3936]
    fd98:	ldr	x0, [x0]
    fd9c:	bl	6650 <PyErr_SetString@plt>
    fda0:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fda4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    fda8:	str	x0, [sp, #48]
    fdac:	cbnz	x0, fd58 <PyFloat_FromString@plt+0x92c8>
    fdb0:	mov	x19, #0x0                   	// #0
    fdb4:	b	fd24 <PyFloat_FromString@plt+0x9294>
    fdb8:	stp	x29, x30, [sp, #-64]!
    fdbc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    fdc0:	add	x3, x3, #0x9b0
    fdc4:	mov	x29, sp
    fdc8:	stp	x19, x20, [sp, #16]
    fdcc:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    fdd0:	mov	x20, x0
    fdd4:	ldr	x19, [x19, #4008]
    fdd8:	mov	x0, x1
    fddc:	add	x3, x3, #0x380
    fde0:	mov	x1, x2
    fde4:	add	x4, sp, #0x30
    fde8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    fdec:	add	x2, x2, #0xba0
    fdf0:	str	wzr, [sp, #44]
    fdf4:	str	x19, [sp, #48]
    fdf8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    fdfc:	cbz	w0, feb0 <PyFloat_FromString@plt+0x9420>
    fe00:	ldr	x0, [sp, #48]
    fe04:	cmp	x0, x19
    fe08:	b.eq	fec4 <PyFloat_FromString@plt+0x9434>  // b.none
    fe0c:	ldr	x0, [x0, #8]
    fe10:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    fe14:	add	x1, x19, #0x328
    fe18:	cmp	x0, x1
    fe1c:	b.eq	fe28 <PyFloat_FromString@plt+0x9398>  // b.none
    fe20:	bl	69c0 <PyType_IsSubtype@plt>
    fe24:	cbz	w0, ff14 <PyFloat_FromString@plt+0x9484>
    fe28:	add	x19, x19, #0x328
    fe2c:	add	x0, x19, #0x1a0
    fe30:	bl	6950 <_PyObject_New@plt>
    fe34:	mov	x19, x0
    fe38:	cbz	x0, feb0 <PyFloat_FromString@plt+0x9420>
    fe3c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    fe40:	mov	x1, #0xffffffffffffffff    	// #-1
    fe44:	ldr	x2, [sp, #48]
    fe48:	mov	w3, #0x30                  	// #48
    fe4c:	ldr	q0, [x0, #2128]
    fe50:	add	x0, x19, #0x48
    fe54:	str	x1, [x19, #16]
    fe58:	add	x2, x2, #0x10
    fe5c:	strb	w3, [x19, #24]
    fe60:	add	x1, x20, #0x18
    fe64:	stp	xzr, xzr, [x19, #32]
    fe68:	add	x3, sp, #0x2c
    fe6c:	str	x0, [x19, #64]
    fe70:	add	x0, x19, #0x18
    fe74:	str	q0, [x19, #48]
    fe78:	bl	39fa8 <PyInit__decimal@@Base+0x1dd68>
    fe7c:	ldr	w1, [sp, #44]
    fe80:	ldr	x0, [sp, #48]
    fe84:	bl	76c8 <PyFloat_FromString@plt+0xc38>
    fe88:	cbnz	w0, fe9c <PyFloat_FromString@plt+0x940c>
    fe8c:	mov	x0, x19
    fe90:	ldp	x19, x20, [sp, #16]
    fe94:	ldp	x29, x30, [sp], #64
    fe98:	ret
    fe9c:	ldr	x0, [x19]
    fea0:	sub	x0, x0, #0x1
    fea4:	str	x0, [x19]
    fea8:	cbz	x0, ff04 <PyFloat_FromString@plt+0x9474>
    feac:	nop
    feb0:	mov	x19, #0x0                   	// #0
    feb4:	mov	x0, x19
    feb8:	ldp	x19, x20, [sp, #16]
    febc:	ldp	x29, x30, [sp], #64
    fec0:	ret
    fec4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
    fec8:	add	x2, sp, #0x38
    fecc:	mov	x1, #0x0                   	// #0
    fed0:	ldr	x0, [x0, #2056]
    fed4:	bl	6740 <PyContextVar_Get@plt>
    fed8:	tbnz	w0, #31, feb0 <PyFloat_FromString@plt+0x9420>
    fedc:	ldr	x0, [sp, #56]
    fee0:	cbz	x0, ff34 <PyFloat_FromString@plt+0x94a4>
    fee4:	str	x0, [sp, #48]
    fee8:	ldr	x1, [x0]
    feec:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    fef0:	sub	x1, x1, #0x1
    fef4:	str	x1, [x0]
    fef8:	cbnz	x1, fe28 <PyFloat_FromString@plt+0x9398>
    fefc:	bl	65d0 <_Py_Dealloc@plt>
    ff00:	b	fe28 <PyFloat_FromString@plt+0x9398>
    ff04:	mov	x0, x19
    ff08:	mov	x19, #0x0                   	// #0
    ff0c:	bl	65d0 <_Py_Dealloc@plt>
    ff10:	b	fe8c <PyFloat_FromString@plt+0x93fc>
    ff14:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
    ff18:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
    ff1c:	mov	x19, #0x0                   	// #0
    ff20:	add	x1, x1, #0xba8
    ff24:	ldr	x0, [x0, #3936]
    ff28:	ldr	x0, [x0]
    ff2c:	bl	6650 <PyErr_SetString@plt>
    ff30:	b	fe8c <PyFloat_FromString@plt+0x93fc>
    ff34:	bl	8c08 <PyFloat_FromString@plt+0x2178>
    ff38:	str	x0, [sp, #48]
    ff3c:	cbnz	x0, fee8 <PyFloat_FromString@plt+0x9458>
    ff40:	mov	x19, #0x0                   	// #0
    ff44:	b	feb4 <PyFloat_FromString@plt+0x9424>
    ff48:	stp	x29, x30, [sp, #-64]!
    ff4c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
    ff50:	add	x3, x3, #0x9b0
    ff54:	mov	x29, sp
    ff58:	stp	x19, x20, [sp, #16]
    ff5c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
    ff60:	mov	x20, x0
    ff64:	ldr	x19, [x19, #4008]
    ff68:	mov	x0, x1
    ff6c:	add	x3, x3, #0x390
    ff70:	mov	x1, x2
    ff74:	add	x4, sp, #0x30
    ff78:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
    ff7c:	add	x2, x2, #0xba0
    ff80:	str	wzr, [sp, #44]
    ff84:	str	x19, [sp, #48]
    ff88:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    ff8c:	cbz	w0, 10040 <PyFloat_FromString@plt+0x95b0>
    ff90:	ldr	x0, [sp, #48]
    ff94:	cmp	x0, x19
    ff98:	b.eq	10054 <PyFloat_FromString@plt+0x95c4>  // b.none
    ff9c:	ldr	x0, [x0, #8]
    ffa0:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
    ffa4:	add	x1, x19, #0x328
    ffa8:	cmp	x0, x1
    ffac:	b.eq	ffb8 <PyFloat_FromString@plt+0x9528>  // b.none
    ffb0:	bl	69c0 <PyType_IsSubtype@plt>
    ffb4:	cbz	w0, 100a4 <PyFloat_FromString@plt+0x9614>
    ffb8:	add	x19, x19, #0x328
    ffbc:	add	x0, x19, #0x1a0
    ffc0:	bl	6950 <_PyObject_New@plt>
    ffc4:	mov	x19, x0
    ffc8:	cbz	x0, 10040 <PyFloat_FromString@plt+0x95b0>
    ffcc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
    ffd0:	mov	x1, #0xffffffffffffffff    	// #-1
    ffd4:	ldr	x2, [sp, #48]
    ffd8:	mov	w3, #0x30                  	// #48
    ffdc:	ldr	q0, [x0, #2128]
    ffe0:	add	x0, x19, #0x48
    ffe4:	str	x1, [x19, #16]
    ffe8:	add	x2, x2, #0x10
    ffec:	strb	w3, [x19, #24]
    fff0:	add	x1, x20, #0x18
    fff4:	stp	xzr, xzr, [x19, #32]
    fff8:	add	x3, sp, #0x2c
    fffc:	str	x0, [x19, #64]
   10000:	add	x0, x19, #0x18
   10004:	str	q0, [x19, #48]
   10008:	bl	321a0 <PyInit__decimal@@Base+0x15f60>
   1000c:	ldr	w1, [sp, #44]
   10010:	ldr	x0, [sp, #48]
   10014:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   10018:	cbnz	w0, 1002c <PyFloat_FromString@plt+0x959c>
   1001c:	mov	x0, x19
   10020:	ldp	x19, x20, [sp, #16]
   10024:	ldp	x29, x30, [sp], #64
   10028:	ret
   1002c:	ldr	x0, [x19]
   10030:	sub	x0, x0, #0x1
   10034:	str	x0, [x19]
   10038:	cbz	x0, 10094 <PyFloat_FromString@plt+0x9604>
   1003c:	nop
   10040:	mov	x19, #0x0                   	// #0
   10044:	mov	x0, x19
   10048:	ldp	x19, x20, [sp, #16]
   1004c:	ldp	x29, x30, [sp], #64
   10050:	ret
   10054:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   10058:	add	x2, sp, #0x38
   1005c:	mov	x1, #0x0                   	// #0
   10060:	ldr	x0, [x0, #2056]
   10064:	bl	6740 <PyContextVar_Get@plt>
   10068:	tbnz	w0, #31, 10040 <PyFloat_FromString@plt+0x95b0>
   1006c:	ldr	x0, [sp, #56]
   10070:	cbz	x0, 100c4 <PyFloat_FromString@plt+0x9634>
   10074:	str	x0, [sp, #48]
   10078:	ldr	x1, [x0]
   1007c:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
   10080:	sub	x1, x1, #0x1
   10084:	str	x1, [x0]
   10088:	cbnz	x1, ffb8 <PyFloat_FromString@plt+0x9528>
   1008c:	bl	65d0 <_Py_Dealloc@plt>
   10090:	b	ffb8 <PyFloat_FromString@plt+0x9528>
   10094:	mov	x0, x19
   10098:	mov	x19, #0x0                   	// #0
   1009c:	bl	65d0 <_Py_Dealloc@plt>
   100a0:	b	1001c <PyFloat_FromString@plt+0x958c>
   100a4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   100a8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   100ac:	mov	x19, #0x0                   	// #0
   100b0:	add	x1, x1, #0xba8
   100b4:	ldr	x0, [x0, #3936]
   100b8:	ldr	x0, [x0]
   100bc:	bl	6650 <PyErr_SetString@plt>
   100c0:	b	1001c <PyFloat_FromString@plt+0x958c>
   100c4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   100c8:	str	x0, [sp, #48]
   100cc:	cbnz	x0, 10078 <PyFloat_FromString@plt+0x95e8>
   100d0:	mov	x19, #0x0                   	// #0
   100d4:	b	10044 <PyFloat_FromString@plt+0x95b4>
   100d8:	stp	x29, x30, [sp, #-64]!
   100dc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   100e0:	add	x3, x3, #0x9b0
   100e4:	mov	x29, sp
   100e8:	stp	x19, x20, [sp, #16]
   100ec:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   100f0:	mov	x20, x0
   100f4:	ldr	x19, [x19, #4008]
   100f8:	mov	x0, x1
   100fc:	add	x3, x3, #0x3a0
   10100:	mov	x1, x2
   10104:	add	x4, sp, #0x30
   10108:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1010c:	add	x2, x2, #0xba0
   10110:	str	wzr, [sp, #44]
   10114:	str	x19, [sp, #48]
   10118:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1011c:	cbz	w0, 101d0 <PyFloat_FromString@plt+0x9740>
   10120:	ldr	x0, [sp, #48]
   10124:	cmp	x0, x19
   10128:	b.eq	101e4 <PyFloat_FromString@plt+0x9754>  // b.none
   1012c:	ldr	x0, [x0, #8]
   10130:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
   10134:	add	x1, x19, #0x328
   10138:	cmp	x0, x1
   1013c:	b.eq	10148 <PyFloat_FromString@plt+0x96b8>  // b.none
   10140:	bl	69c0 <PyType_IsSubtype@plt>
   10144:	cbz	w0, 10234 <PyFloat_FromString@plt+0x97a4>
   10148:	add	x19, x19, #0x328
   1014c:	add	x0, x19, #0x1a0
   10150:	bl	6950 <_PyObject_New@plt>
   10154:	mov	x19, x0
   10158:	cbz	x0, 101d0 <PyFloat_FromString@plt+0x9740>
   1015c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   10160:	mov	x1, #0xffffffffffffffff    	// #-1
   10164:	ldr	x2, [sp, #48]
   10168:	mov	w3, #0x30                  	// #48
   1016c:	ldr	q0, [x0, #2128]
   10170:	add	x0, x19, #0x48
   10174:	str	x1, [x19, #16]
   10178:	add	x2, x2, #0x10
   1017c:	strb	w3, [x19, #24]
   10180:	add	x1, x20, #0x18
   10184:	stp	xzr, xzr, [x19, #32]
   10188:	add	x3, sp, #0x2c
   1018c:	str	x0, [x19, #64]
   10190:	add	x0, x19, #0x18
   10194:	str	q0, [x19, #48]
   10198:	bl	31f80 <PyInit__decimal@@Base+0x15d40>
   1019c:	ldr	w1, [sp, #44]
   101a0:	ldr	x0, [sp, #48]
   101a4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   101a8:	cbnz	w0, 101bc <PyFloat_FromString@plt+0x972c>
   101ac:	mov	x0, x19
   101b0:	ldp	x19, x20, [sp, #16]
   101b4:	ldp	x29, x30, [sp], #64
   101b8:	ret
   101bc:	ldr	x0, [x19]
   101c0:	sub	x0, x0, #0x1
   101c4:	str	x0, [x19]
   101c8:	cbz	x0, 10224 <PyFloat_FromString@plt+0x9794>
   101cc:	nop
   101d0:	mov	x19, #0x0                   	// #0
   101d4:	mov	x0, x19
   101d8:	ldp	x19, x20, [sp, #16]
   101dc:	ldp	x29, x30, [sp], #64
   101e0:	ret
   101e4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   101e8:	add	x2, sp, #0x38
   101ec:	mov	x1, #0x0                   	// #0
   101f0:	ldr	x0, [x0, #2056]
   101f4:	bl	6740 <PyContextVar_Get@plt>
   101f8:	tbnz	w0, #31, 101d0 <PyFloat_FromString@plt+0x9740>
   101fc:	ldr	x0, [sp, #56]
   10200:	cbz	x0, 10254 <PyFloat_FromString@plt+0x97c4>
   10204:	str	x0, [sp, #48]
   10208:	ldr	x1, [x0]
   1020c:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
   10210:	sub	x1, x1, #0x1
   10214:	str	x1, [x0]
   10218:	cbnz	x1, 10148 <PyFloat_FromString@plt+0x96b8>
   1021c:	bl	65d0 <_Py_Dealloc@plt>
   10220:	b	10148 <PyFloat_FromString@plt+0x96b8>
   10224:	mov	x0, x19
   10228:	mov	x19, #0x0                   	// #0
   1022c:	bl	65d0 <_Py_Dealloc@plt>
   10230:	b	101ac <PyFloat_FromString@plt+0x971c>
   10234:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10238:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1023c:	mov	x19, #0x0                   	// #0
   10240:	add	x1, x1, #0xba8
   10244:	ldr	x0, [x0, #3936]
   10248:	ldr	x0, [x0]
   1024c:	bl	6650 <PyErr_SetString@plt>
   10250:	b	101ac <PyFloat_FromString@plt+0x971c>
   10254:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   10258:	str	x0, [sp, #48]
   1025c:	cbnz	x0, 10208 <PyFloat_FromString@plt+0x9778>
   10260:	mov	x19, #0x0                   	// #0
   10264:	b	101d4 <PyFloat_FromString@plt+0x9744>
   10268:	stp	x29, x30, [sp, #-144]!
   1026c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   10270:	add	x3, x3, #0x9b0
   10274:	mov	x29, sp
   10278:	stp	x19, x20, [sp, #16]
   1027c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   10280:	mov	x20, x0
   10284:	ldr	x19, [x19, #4008]
   10288:	mov	x0, x1
   1028c:	add	x3, x3, #0x3b0
   10290:	mov	x1, x2
   10294:	add	x5, sp, #0x58
   10298:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1029c:	add	x4, sp, #0x50
   102a0:	add	x2, x2, #0xe30
   102a4:	stp	xzr, x19, [sp, #80]
   102a8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   102ac:	cbz	w0, 103f0 <PyFloat_FromString@plt+0x9960>
   102b0:	stp	x21, x22, [sp, #32]
   102b4:	ldr	x21, [sp, #88]
   102b8:	cmp	x21, x19
   102bc:	b.eq	104cc <PyFloat_FromString@plt+0x9a3c>  // b.none
   102c0:	ldr	x0, [x21, #8]
   102c4:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
   102c8:	add	x1, x19, #0x328
   102cc:	cmp	x0, x1
   102d0:	b.eq	102e0 <PyFloat_FromString@plt+0x9850>  // b.none
   102d4:	bl	69c0 <PyType_IsSubtype@plt>
   102d8:	cbz	w0, 10610 <PyFloat_FromString@plt+0x9b80>
   102dc:	ldr	x21, [sp, #88]
   102e0:	ldr	x22, [sp, #80]
   102e4:	cbz	x22, 10420 <PyFloat_FromString@plt+0x9990>
   102e8:	ldr	x0, [x22, #8]
   102ec:	add	x1, x19, #0x328
   102f0:	add	x1, x1, #0x1a0
   102f4:	cmp	x0, x1
   102f8:	b.eq	10360 <PyFloat_FromString@plt+0x98d0>  // b.none
   102fc:	bl	69c0 <PyType_IsSubtype@plt>
   10300:	cbnz	w0, 10360 <PyFloat_FromString@plt+0x98d0>
   10304:	ldr	x0, [x22, #8]
   10308:	ldr	x1, [x0, #168]
   1030c:	tbnz	w1, #28, 10534 <PyFloat_FromString@plt+0x9aa4>
   10310:	tbnz	w1, #24, 10570 <PyFloat_FromString@plt+0x9ae0>
   10314:	tst	x1, #0x6000000
   10318:	b.ne	1058c <PyFloat_FromString@plt+0x9afc>  // b.any
   1031c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   10320:	ldr	x1, [x1, #3864]
   10324:	cmp	x0, x1
   10328:	b.eq	10334 <PyFloat_FromString@plt+0x98a4>  // b.none
   1032c:	bl	69c0 <PyType_IsSubtype@plt>
   10330:	cbz	w0, 10694 <PyFloat_FromString@plt+0x9c04>
   10334:	mov	x0, x21
   10338:	mov	w1, #0x400                 	// #1024
   1033c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   10340:	cbnz	w0, 10528 <PyFloat_FromString@plt+0x9a98>
   10344:	mov	x2, x21
   10348:	mov	x1, x22
   1034c:	mov	x0, x20
   10350:	bl	e810 <PyFloat_FromString@plt+0x7d80>
   10354:	mov	x19, x0
   10358:	ldp	x21, x22, [sp, #32]
   1035c:	b	103d8 <PyFloat_FromString@plt+0x9948>
   10360:	add	x19, x19, #0x328
   10364:	str	wzr, [sp, #96]
   10368:	add	x19, x19, #0x1a0
   1036c:	cmp	x20, x19
   10370:	b.eq	10404 <PyFloat_FromString@plt+0x9974>  // b.none
   10374:	ldr	x2, [x20, #304]
   10378:	mov	x0, x20
   1037c:	mov	x1, #0x0                   	// #0
   10380:	blr	x2
   10384:	mov	x19, x0
   10388:	cbz	x19, 104b4 <PyFloat_FromString@plt+0x9a24>
   1038c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   10390:	add	x2, x19, #0x48
   10394:	mov	x3, #0xffffffffffffffff    	// #-1
   10398:	mov	w1, #0x30                  	// #48
   1039c:	ldr	q0, [x0, #2128]
   103a0:	str	x3, [x19, #16]
   103a4:	strb	w1, [x19, #24]
   103a8:	add	x0, x19, #0x18
   103ac:	stp	xzr, xzr, [x19, #32]
   103b0:	add	x1, x22, #0x18
   103b4:	str	x2, [x19, #64]
   103b8:	add	x2, sp, #0x60
   103bc:	str	q0, [x19, #48]
   103c0:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   103c4:	ldr	w1, [sp, #96]
   103c8:	mov	x0, x21
   103cc:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   103d0:	cbnz	w0, 104a4 <PyFloat_FromString@plt+0x9a14>
   103d4:	ldp	x21, x22, [sp, #32]
   103d8:	mov	x0, x19
   103dc:	ldp	x19, x20, [sp, #16]
   103e0:	ldp	x29, x30, [sp], #144
   103e4:	ret
   103e8:	ldp	x21, x22, [sp, #32]
   103ec:	ldr	x23, [sp, #48]
   103f0:	mov	x19, #0x0                   	// #0
   103f4:	mov	x0, x19
   103f8:	ldp	x19, x20, [sp, #16]
   103fc:	ldp	x29, x30, [sp], #144
   10400:	ret
   10404:	ldr	x0, [x22, #8]
   10408:	cmp	x0, x20
   1040c:	b.eq	10634 <PyFloat_FromString@plt+0x9ba4>  // b.none
   10410:	mov	x0, x20
   10414:	bl	6950 <_PyObject_New@plt>
   10418:	mov	x19, x0
   1041c:	b	10388 <PyFloat_FromString@plt+0x98f8>
   10420:	add	x19, x19, #0x328
   10424:	str	wzr, [sp, #76]
   10428:	add	x19, x19, #0x1a0
   1042c:	cmp	x20, x19
   10430:	b.eq	10684 <PyFloat_FromString@plt+0x9bf4>  // b.none
   10434:	ldr	x2, [x20, #304]
   10438:	mov	x0, x20
   1043c:	mov	x1, #0x0                   	// #0
   10440:	blr	x2
   10444:	mov	x19, x0
   10448:	cbz	x19, 104b4 <PyFloat_FromString@plt+0x9a24>
   1044c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   10450:	mov	x2, #0xffffffffffffffff    	// #-1
   10454:	mov	w1, #0x30                  	// #48
   10458:	str	x2, [x19, #16]
   1045c:	ldr	q0, [x0, #2128]
   10460:	add	x0, x19, #0x48
   10464:	strb	w1, [x19, #24]
   10468:	add	x20, sp, #0x60
   1046c:	stp	xzr, xzr, [x19, #32]
   10470:	str	x0, [x19, #64]
   10474:	mov	x0, x20
   10478:	str	q0, [x19, #48]
   1047c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   10480:	add	x0, x19, #0x18
   10484:	mov	x1, #0x0                   	// #0
   10488:	mov	x2, x20
   1048c:	add	x3, sp, #0x4c
   10490:	bl	30600 <PyInit__decimal@@Base+0x143c0>
   10494:	ldr	w1, [sp, #76]
   10498:	mov	x0, x21
   1049c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   104a0:	cbz	w0, 103d4 <PyFloat_FromString@plt+0x9944>
   104a4:	ldr	x0, [x19]
   104a8:	sub	x0, x0, #0x1
   104ac:	str	x0, [x19]
   104b0:	cbz	x0, 105f0 <PyFloat_FromString@plt+0x9b60>
   104b4:	mov	x19, #0x0                   	// #0
   104b8:	mov	x0, x19
   104bc:	ldp	x19, x20, [sp, #16]
   104c0:	ldp	x21, x22, [sp, #32]
   104c4:	ldp	x29, x30, [sp], #144
   104c8:	ret
   104cc:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   104d0:	add	x2, sp, #0x60
   104d4:	mov	x1, #0x0                   	// #0
   104d8:	ldr	x0, [x0, #2056]
   104dc:	bl	6740 <PyContextVar_Get@plt>
   104e0:	tbnz	w0, #31, 104b4 <PyFloat_FromString@plt+0x9a24>
   104e4:	ldr	x21, [sp, #96]
   104e8:	cbz	x21, 10514 <PyFloat_FromString@plt+0x9a84>
   104ec:	str	x21, [sp, #88]
   104f0:	ldr	x0, [x21]
   104f4:	adrp	x19, 63000 <PyInit__decimal@@Base+0x46dc0>
   104f8:	sub	x0, x0, #0x1
   104fc:	str	x0, [x21]
   10500:	cbnz	x0, 102e0 <PyFloat_FromString@plt+0x9850>
   10504:	mov	x0, x21
   10508:	bl	65d0 <_Py_Dealloc@plt>
   1050c:	ldr	x21, [sp, #88]
   10510:	b	102e0 <PyFloat_FromString@plt+0x9850>
   10514:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   10518:	str	x0, [sp, #88]
   1051c:	mov	x21, x0
   10520:	cbnz	x0, 104f0 <PyFloat_FromString@plt+0x9a60>
   10524:	nop
   10528:	mov	x19, #0x0                   	// #0
   1052c:	ldp	x21, x22, [sp, #32]
   10530:	b	103f4 <PyFloat_FromString@plt+0x9964>
   10534:	mov	x0, x22
   10538:	mov	w2, #0x1                   	// #1
   1053c:	mov	w1, w2
   10540:	bl	84b8 <PyFloat_FromString@plt+0x1a28>
   10544:	mov	x22, x0
   10548:	cbz	x0, 10528 <PyFloat_FromString@plt+0x9a98>
   1054c:	mov	x2, x21
   10550:	mov	x1, x0
   10554:	mov	x0, x20
   10558:	bl	9a48 <PyFloat_FromString@plt+0x2fb8>
   1055c:	mov	x19, x0
   10560:	mov	x0, x22
   10564:	bl	6560 <PyMem_Free@plt>
   10568:	ldp	x21, x22, [sp, #32]
   1056c:	b	103d8 <PyFloat_FromString@plt+0x9948>
   10570:	mov	x2, x21
   10574:	mov	x1, x22
   10578:	mov	x0, x20
   1057c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   10580:	mov	x19, x0
   10584:	ldp	x21, x22, [sp, #32]
   10588:	b	103d8 <PyFloat_FromString@plt+0x9948>
   1058c:	tbnz	w1, #26, 1064c <PyFloat_FromString@plt+0x9bbc>
   10590:	tbz	w1, #25, 10660 <PyFloat_FromString@plt+0x9bd0>
   10594:	mov	x0, x22
   10598:	bl	6530 <PyList_AsTuple@plt>
   1059c:	mov	x22, x0
   105a0:	cbz	x0, 10528 <PyFloat_FromString@plt+0x9a98>
   105a4:	str	x23, [sp, #48]
   105a8:	mov	x0, x22
   105ac:	bl	8d30 <PyFloat_FromString@plt+0x22a0>
   105b0:	ldr	x1, [x22]
   105b4:	mov	x23, x0
   105b8:	sub	x0, x1, #0x1
   105bc:	str	x0, [x22]
   105c0:	cbz	x0, 10604 <PyFloat_FromString@plt+0x9b74>
   105c4:	cbz	x23, 103e8 <PyFloat_FromString@plt+0x9958>
   105c8:	mov	x2, x21
   105cc:	mov	x1, x23
   105d0:	mov	x0, x20
   105d4:	bl	9a48 <PyFloat_FromString@plt+0x2fb8>
   105d8:	mov	x19, x0
   105dc:	mov	x0, x23
   105e0:	bl	6560 <PyMem_Free@plt>
   105e4:	ldp	x21, x22, [sp, #32]
   105e8:	ldr	x23, [sp, #48]
   105ec:	b	103d8 <PyFloat_FromString@plt+0x9948>
   105f0:	mov	x0, x19
   105f4:	mov	x19, #0x0                   	// #0
   105f8:	bl	65d0 <_Py_Dealloc@plt>
   105fc:	ldp	x21, x22, [sp, #32]
   10600:	b	103d8 <PyFloat_FromString@plt+0x9948>
   10604:	mov	x0, x22
   10608:	bl	65d0 <_Py_Dealloc@plt>
   1060c:	b	105c4 <PyFloat_FromString@plt+0x9b34>
   10610:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10614:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10618:	mov	x19, #0x0                   	// #0
   1061c:	add	x1, x1, #0xba8
   10620:	ldr	x0, [x0, #3936]
   10624:	ldr	x0, [x0]
   10628:	bl	6650 <PyErr_SetString@plt>
   1062c:	ldp	x21, x22, [sp, #32]
   10630:	b	103d8 <PyFloat_FromString@plt+0x9948>
   10634:	ldr	x0, [x22]
   10638:	mov	x19, x22
   1063c:	add	x0, x0, #0x1
   10640:	str	x0, [x22]
   10644:	ldp	x21, x22, [sp, #32]
   10648:	b	103d8 <PyFloat_FromString@plt+0x9948>
   1064c:	ldr	x0, [x22]
   10650:	str	x23, [sp, #48]
   10654:	add	x0, x0, #0x1
   10658:	str	x0, [x22]
   1065c:	b	105a8 <PyFloat_FromString@plt+0x9b18>
   10660:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10664:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10668:	mov	x19, #0x0                   	// #0
   1066c:	add	x1, x1, #0xe38
   10670:	ldr	x0, [x0, #3936]
   10674:	ldr	x0, [x0]
   10678:	bl	6650 <PyErr_SetString@plt>
   1067c:	ldp	x21, x22, [sp, #32]
   10680:	b	103d8 <PyFloat_FromString@plt+0x9948>
   10684:	mov	x0, x20
   10688:	bl	6950 <_PyObject_New@plt>
   1068c:	mov	x19, x0
   10690:	b	10448 <PyFloat_FromString@plt+0x99b8>
   10694:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10698:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1069c:	ldr	x2, [x22, #8]
   106a0:	add	x1, x1, #0xb70
   106a4:	ldr	x0, [x0, #3936]
   106a8:	mov	x19, #0x0                   	// #0
   106ac:	ldr	x2, [x2, #24]
   106b0:	ldr	x0, [x0]
   106b4:	bl	6a10 <PyErr_Format@plt>
   106b8:	ldp	x21, x22, [sp, #32]
   106bc:	b	103d8 <PyFloat_FromString@plt+0x9948>
   106c0:	stp	x29, x30, [sp, #-80]!
   106c4:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   106c8:	add	x3, x3, #0x9b0
   106cc:	mov	x29, sp
   106d0:	stp	x19, x20, [sp, #16]
   106d4:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   106d8:	mov	x19, x0
   106dc:	ldr	x20, [x20, #4008]
   106e0:	mov	x0, x1
   106e4:	add	x3, x3, #0x3d0
   106e8:	mov	x1, x2
   106ec:	add	x5, sp, #0x40
   106f0:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   106f4:	add	x4, sp, #0x38
   106f8:	add	x2, x2, #0xc88
   106fc:	str	x20, [sp, #64]
   10700:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   10704:	cbz	w0, 10808 <PyFloat_FromString@plt+0x9d78>
   10708:	stp	x21, x22, [sp, #32]
   1070c:	ldr	x21, [sp, #64]
   10710:	cmp	x21, x20
   10714:	b.eq	10910 <PyFloat_FromString@plt+0x9e80>  // b.none
   10718:	ldr	x0, [x21, #8]
   1071c:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   10720:	add	x1, x20, #0x328
   10724:	cmp	x0, x1
   10728:	b.eq	10738 <PyFloat_FromString@plt+0x9ca8>  // b.none
   1072c:	bl	69c0 <PyType_IsSubtype@plt>
   10730:	cbz	w0, 10990 <PyFloat_FromString@plt+0x9f00>
   10734:	ldr	x21, [sp, #64]
   10738:	add	x22, x20, #0x328
   1073c:	ldr	x0, [x19, #8]
   10740:	add	x22, x22, #0x1a0
   10744:	cmp	x0, x22
   10748:	b.eq	1079c <PyFloat_FromString@plt+0x9d0c>  // b.none
   1074c:	mov	x1, x22
   10750:	bl	69c0 <PyType_IsSubtype@plt>
   10754:	cbnz	w0, 10798 <PyFloat_FromString@plt+0x9d08>
   10758:	ldr	x2, [x19, #8]
   1075c:	ldr	x0, [x2, #168]
   10760:	tbnz	w0, #24, 10958 <PyFloat_FromString@plt+0x9ec8>
   10764:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10768:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1076c:	ldr	x2, [x2, #24]
   10770:	add	x1, x1, #0xb70
   10774:	ldr	x0, [x0, #3936]
   10778:	mov	x20, #0x0                   	// #0
   1077c:	ldr	x0, [x0]
   10780:	bl	6a10 <PyErr_Format@plt>
   10784:	ldp	x21, x22, [sp, #32]
   10788:	mov	x0, x20
   1078c:	ldp	x19, x20, [sp, #16]
   10790:	ldp	x29, x30, [sp], #80
   10794:	ret
   10798:	ldr	x21, [sp, #64]
   1079c:	ldr	x0, [x19]
   107a0:	add	x0, x0, #0x1
   107a4:	str	x0, [x19]
   107a8:	ldr	x22, [sp, #56]
   107ac:	add	x20, x20, #0x328
   107b0:	add	x20, x20, #0x1a0
   107b4:	ldr	x0, [x22, #8]
   107b8:	cmp	x0, x20
   107bc:	b.eq	1081c <PyFloat_FromString@plt+0x9d8c>  // b.none
   107c0:	mov	x1, x20
   107c4:	bl	69c0 <PyType_IsSubtype@plt>
   107c8:	cbnz	w0, 1081c <PyFloat_FromString@plt+0x9d8c>
   107cc:	ldr	x2, [x22, #8]
   107d0:	ldr	x0, [x2, #168]
   107d4:	tbnz	w0, #24, 108e0 <PyFloat_FromString@plt+0x9e50>
   107d8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   107dc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   107e0:	ldr	x2, [x2, #24]
   107e4:	add	x1, x1, #0xb70
   107e8:	ldr	x0, [x0, #3936]
   107ec:	ldr	x0, [x0]
   107f0:	bl	6a10 <PyErr_Format@plt>
   107f4:	ldr	x0, [x19]
   107f8:	sub	x0, x0, #0x1
   107fc:	str	x0, [x19]
   10800:	cbz	x0, 108fc <PyFloat_FromString@plt+0x9e6c>
   10804:	ldp	x21, x22, [sp, #32]
   10808:	mov	x20, #0x0                   	// #0
   1080c:	mov	x0, x20
   10810:	ldp	x19, x20, [sp, #16]
   10814:	ldp	x29, x30, [sp], #80
   10818:	ret
   1081c:	ldr	x0, [x22]
   10820:	add	x0, x0, #0x1
   10824:	str	x0, [x22]
   10828:	add	x1, x22, #0x18
   1082c:	add	x0, x19, #0x18
   10830:	bl	3d2c0 <PyInit__decimal@@Base+0x21080>
   10834:	cbnz	w0, 10884 <PyFloat_FromString@plt+0x9df4>
   10838:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1083c:	ldr	x0, [x0, #3976]
   10840:	mov	x20, x0
   10844:	ldr	x1, [x0]
   10848:	add	x1, x1, #0x1
   1084c:	str	x1, [x0]
   10850:	ldr	x0, [x19]
   10854:	sub	x0, x0, #0x1
   10858:	str	x0, [x19]
   1085c:	cbz	x0, 108ac <PyFloat_FromString@plt+0x9e1c>
   10860:	ldr	x0, [x22]
   10864:	sub	x0, x0, #0x1
   10868:	str	x0, [x22]
   1086c:	cbz	x0, 108c4 <PyFloat_FromString@plt+0x9e34>
   10870:	mov	x0, x20
   10874:	ldp	x19, x20, [sp, #16]
   10878:	ldp	x21, x22, [sp, #32]
   1087c:	ldp	x29, x30, [sp], #80
   10880:	ret
   10884:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10888:	ldr	x0, [x0, #4024]
   1088c:	mov	x20, x0
   10890:	ldr	x1, [x0]
   10894:	add	x1, x1, #0x1
   10898:	str	x1, [x0]
   1089c:	ldr	x0, [x19]
   108a0:	sub	x0, x0, #0x1
   108a4:	str	x0, [x19]
   108a8:	cbnz	x0, 10860 <PyFloat_FromString@plt+0x9dd0>
   108ac:	mov	x0, x19
   108b0:	bl	65d0 <_Py_Dealloc@plt>
   108b4:	ldr	x0, [x22]
   108b8:	sub	x0, x0, #0x1
   108bc:	str	x0, [x22]
   108c0:	cbnz	x0, 10870 <PyFloat_FromString@plt+0x9de0>
   108c4:	mov	x0, x22
   108c8:	bl	65d0 <_Py_Dealloc@plt>
   108cc:	mov	x0, x20
   108d0:	ldp	x19, x20, [sp, #16]
   108d4:	ldp	x21, x22, [sp, #32]
   108d8:	ldp	x29, x30, [sp], #80
   108dc:	ret
   108e0:	mov	x1, x22
   108e4:	mov	x2, x21
   108e8:	mov	x0, x20
   108ec:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   108f0:	mov	x22, x0
   108f4:	cbnz	x0, 10828 <PyFloat_FromString@plt+0x9d98>
   108f8:	b	107f4 <PyFloat_FromString@plt+0x9d64>
   108fc:	mov	x0, x19
   10900:	mov	x20, #0x0                   	// #0
   10904:	bl	65d0 <_Py_Dealloc@plt>
   10908:	ldp	x21, x22, [sp, #32]
   1090c:	b	10788 <PyFloat_FromString@plt+0x9cf8>
   10910:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   10914:	add	x2, sp, #0x48
   10918:	mov	x1, #0x0                   	// #0
   1091c:	ldr	x0, [x0, #2056]
   10920:	bl	6740 <PyContextVar_Get@plt>
   10924:	tbnz	w0, #31, 109b4 <PyFloat_FromString@plt+0x9f24>
   10928:	ldr	x21, [sp, #72]
   1092c:	cbz	x21, 10978 <PyFloat_FromString@plt+0x9ee8>
   10930:	str	x21, [sp, #64]
   10934:	ldr	x0, [x21]
   10938:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   1093c:	sub	x0, x0, #0x1
   10940:	str	x0, [x21]
   10944:	cbnz	x0, 10738 <PyFloat_FromString@plt+0x9ca8>
   10948:	mov	x0, x21
   1094c:	bl	65d0 <_Py_Dealloc@plt>
   10950:	ldr	x21, [sp, #64]
   10954:	b	10738 <PyFloat_FromString@plt+0x9ca8>
   10958:	mov	x1, x19
   1095c:	mov	x2, x21
   10960:	mov	x0, x22
   10964:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   10968:	mov	x19, x0
   1096c:	cbz	x0, 10804 <PyFloat_FromString@plt+0x9d74>
   10970:	ldr	x21, [sp, #64]
   10974:	b	107a8 <PyFloat_FromString@plt+0x9d18>
   10978:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   1097c:	str	x0, [sp, #64]
   10980:	mov	x21, x0
   10984:	cbnz	x0, 10934 <PyFloat_FromString@plt+0x9ea4>
   10988:	ldp	x21, x22, [sp, #32]
   1098c:	b	10808 <PyFloat_FromString@plt+0x9d78>
   10990:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10994:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10998:	mov	x20, #0x0                   	// #0
   1099c:	add	x1, x1, #0xba8
   109a0:	ldr	x0, [x0, #3936]
   109a4:	ldr	x0, [x0]
   109a8:	bl	6650 <PyErr_SetString@plt>
   109ac:	ldp	x21, x22, [sp, #32]
   109b0:	b	10788 <PyFloat_FromString@plt+0x9cf8>
   109b4:	mov	x20, #0x0                   	// #0
   109b8:	ldp	x21, x22, [sp, #32]
   109bc:	b	10788 <PyFloat_FromString@plt+0x9cf8>
   109c0:	stp	x29, x30, [sp, #-144]!
   109c4:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   109c8:	add	x3, x3, #0x9b0
   109cc:	mov	x29, sp
   109d0:	stp	x19, x20, [sp, #16]
   109d4:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   109d8:	add	x3, x3, #0x3f0
   109dc:	ldr	x20, [x19, #4008]
   109e0:	add	x5, sp, #0x58
   109e4:	add	x4, sp, #0x50
   109e8:	stp	x21, x22, [sp, #32]
   109ec:	mov	x21, x0
   109f0:	mov	x0, x1
   109f4:	mov	x1, x2
   109f8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   109fc:	add	x2, x2, #0xe30
   10a00:	str	wzr, [sp, #76]
   10a04:	stp	x20, x20, [sp, #80]
   10a08:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   10a0c:	cbz	w0, 10bd0 <PyFloat_FromString@plt+0xa140>
   10a10:	ldr	x2, [sp, #88]
   10a14:	cmp	x2, x20
   10a18:	b.eq	10be8 <PyFloat_FromString@plt+0xa158>  // b.none
   10a1c:	ldr	x0, [x2, #8]
   10a20:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
   10a24:	add	x1, x1, #0x328
   10a28:	cmp	x0, x1
   10a2c:	b.eq	10a3c <PyFloat_FromString@plt+0x9fac>  // b.none
   10a30:	bl	69c0 <PyType_IsSubtype@plt>
   10a34:	cbz	w0, 10c80 <PyFloat_FromString@plt+0xa1f0>
   10a38:	ldr	x2, [sp, #88]
   10a3c:	add	x0, x2, #0x10
   10a40:	ldp	x2, x3, [x2, #16]
   10a44:	stp	x2, x3, [sp, #96]
   10a48:	ldp	x2, x3, [x0, #16]
   10a4c:	stp	x2, x3, [sp, #112]
   10a50:	ldr	x1, [x19, #4008]
   10a54:	ldp	x2, x3, [x0, #32]
   10a58:	stp	x2, x3, [sp, #128]
   10a5c:	ldr	x19, [sp, #80]
   10a60:	cmp	x19, x1
   10a64:	b.eq	10b5c <PyFloat_FromString@plt+0xa0cc>  // b.none
   10a68:	ldr	x0, [x19, #8]
   10a6c:	ldr	x0, [x0, #168]
   10a70:	tbz	w0, #28, 10b14 <PyFloat_FromString@plt+0xa084>
   10a74:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   10a78:	add	x2, x1, #0x7a0
   10a7c:	add	x0, x2, #0x10
   10a80:	ldr	x2, [x2, #16]
   10a84:	str	x23, [sp, #48]
   10a88:	cmp	x2, x19
   10a8c:	b.eq	10ca0 <PyFloat_FromString@plt+0xa210>  // b.none
   10a90:	ldr	x2, [x0, #8]
   10a94:	cmp	x19, x2
   10a98:	b.eq	10c3c <PyFloat_FromString@plt+0xa1ac>  // b.none
   10a9c:	ldr	x2, [x0, #16]
   10aa0:	cmp	x19, x2
   10aa4:	b.eq	10ca8 <PyFloat_FromString@plt+0xa218>  // b.none
   10aa8:	ldr	x2, [x0, #24]
   10aac:	cmp	x19, x2
   10ab0:	b.eq	10cb0 <PyFloat_FromString@plt+0xa220>  // b.none
   10ab4:	ldr	x2, [x0, #32]
   10ab8:	cmp	x19, x2
   10abc:	b.eq	10cb8 <PyFloat_FromString@plt+0xa228>  // b.none
   10ac0:	ldr	x2, [x0, #40]
   10ac4:	cmp	x19, x2
   10ac8:	b.eq	10cc0 <PyFloat_FromString@plt+0xa230>  // b.none
   10acc:	ldr	x2, [x0, #48]
   10ad0:	cmp	x19, x2
   10ad4:	b.eq	10cc8 <PyFloat_FromString@plt+0xa238>  // b.none
   10ad8:	ldr	x0, [x0, #56]
   10adc:	cmp	x19, x0
   10ae0:	b.eq	10b44 <PyFloat_FromString@plt+0xa0b4>  // b.none
   10ae4:	add	x1, x1, #0x7a0
   10ae8:	mov	x20, #0x0                   	// #0
   10aec:	add	x22, x1, #0x10
   10af0:	ldr	x1, [x22, x20, lsl #3]
   10af4:	mov	w23, w20
   10af8:	mov	x0, x19
   10afc:	add	x20, x20, #0x1
   10b00:	bl	6900 <PyUnicode_Compare@plt>
   10b04:	cbz	w0, 10b48 <PyFloat_FromString@plt+0xa0b8>
   10b08:	cmp	x20, #0x8
   10b0c:	b.ne	10af0 <PyFloat_FromString@plt+0xa060>  // b.any
   10b10:	ldr	x23, [sp, #48]
   10b14:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10b18:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10b1c:	mov	x19, #0x0                   	// #0
   10b20:	ldr	x0, [x0, #3936]
   10b24:	add	x1, x1, #0xa40
   10b28:	ldr	x0, [x0]
   10b2c:	bl	6650 <PyErr_SetString@plt>
   10b30:	mov	x0, x19
   10b34:	ldp	x19, x20, [sp, #16]
   10b38:	ldp	x21, x22, [sp, #32]
   10b3c:	ldp	x29, x30, [sp], #144
   10b40:	ret
   10b44:	mov	w23, #0x7                   	// #7
   10b48:	mov	w1, w23
   10b4c:	add	x0, sp, #0x60
   10b50:	bl	1f7c0 <PyInit__decimal@@Base+0x3580>
   10b54:	cbz	w0, 10c44 <PyFloat_FromString@plt+0xa1b4>
   10b58:	ldr	x23, [sp, #48]
   10b5c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
   10b60:	add	x0, x0, #0x328
   10b64:	add	x0, x0, #0x1a0
   10b68:	bl	6950 <_PyObject_New@plt>
   10b6c:	mov	x19, x0
   10b70:	cbz	x0, 10bd0 <PyFloat_FromString@plt+0xa140>
   10b74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   10b78:	mov	x2, #0xffffffffffffffff    	// #-1
   10b7c:	mov	w1, #0x30                  	// #48
   10b80:	str	x2, [x19, #16]
   10b84:	ldr	q0, [x0, #2128]
   10b88:	add	x0, x19, #0x48
   10b8c:	strb	w1, [x19, #24]
   10b90:	add	x3, sp, #0x4c
   10b94:	stp	xzr, xzr, [x19, #32]
   10b98:	add	x1, x21, #0x18
   10b9c:	add	x2, sp, #0x60
   10ba0:	str	x0, [x19, #64]
   10ba4:	add	x0, x19, #0x18
   10ba8:	str	q0, [x19, #48]
   10bac:	bl	3d1e0 <PyInit__decimal@@Base+0x20fa0>
   10bb0:	ldr	w1, [sp, #76]
   10bb4:	ldr	x0, [sp, #88]
   10bb8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   10bbc:	cbz	w0, 10b30 <PyFloat_FromString@plt+0xa0a0>
   10bc0:	ldr	x0, [x19]
   10bc4:	sub	x0, x0, #0x1
   10bc8:	str	x0, [x19]
   10bcc:	cbz	x0, 10c2c <PyFloat_FromString@plt+0xa19c>
   10bd0:	mov	x19, #0x0                   	// #0
   10bd4:	mov	x0, x19
   10bd8:	ldp	x19, x20, [sp, #16]
   10bdc:	ldp	x21, x22, [sp, #32]
   10be0:	ldp	x29, x30, [sp], #144
   10be4:	ret
   10be8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   10bec:	add	x2, sp, #0x60
   10bf0:	mov	x1, #0x0                   	// #0
   10bf4:	ldr	x0, [x0, #2056]
   10bf8:	bl	6740 <PyContextVar_Get@plt>
   10bfc:	tbnz	w0, #31, 10bd0 <PyFloat_FromString@plt+0xa140>
   10c00:	ldr	x2, [sp, #96]
   10c04:	cbz	x2, 10c68 <PyFloat_FromString@plt+0xa1d8>
   10c08:	str	x2, [sp, #88]
   10c0c:	ldr	x0, [x2]
   10c10:	sub	x0, x0, #0x1
   10c14:	str	x0, [x2]
   10c18:	cbnz	x0, 10a3c <PyFloat_FromString@plt+0x9fac>
   10c1c:	mov	x0, x2
   10c20:	bl	65d0 <_Py_Dealloc@plt>
   10c24:	ldr	x2, [sp, #88]
   10c28:	b	10a3c <PyFloat_FromString@plt+0x9fac>
   10c2c:	mov	x0, x19
   10c30:	mov	x19, #0x0                   	// #0
   10c34:	bl	65d0 <_Py_Dealloc@plt>
   10c38:	b	10b30 <PyFloat_FromString@plt+0xa0a0>
   10c3c:	mov	w23, #0x1                   	// #1
   10c40:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10c44:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10c48:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10c4c:	mov	x19, #0x0                   	// #0
   10c50:	add	x1, x1, #0xe60
   10c54:	ldr	x0, [x0, #3920]
   10c58:	ldr	x0, [x0]
   10c5c:	bl	6650 <PyErr_SetString@plt>
   10c60:	ldr	x23, [sp, #48]
   10c64:	b	10b30 <PyFloat_FromString@plt+0xa0a0>
   10c68:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   10c6c:	str	x0, [sp, #88]
   10c70:	mov	x2, x0
   10c74:	cbnz	x0, 10c0c <PyFloat_FromString@plt+0xa17c>
   10c78:	mov	x19, #0x0                   	// #0
   10c7c:	b	10bd4 <PyFloat_FromString@plt+0xa144>
   10c80:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10c84:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10c88:	mov	x19, #0x0                   	// #0
   10c8c:	add	x1, x1, #0xba8
   10c90:	ldr	x0, [x0, #3936]
   10c94:	ldr	x0, [x0]
   10c98:	bl	6650 <PyErr_SetString@plt>
   10c9c:	b	10b30 <PyFloat_FromString@plt+0xa0a0>
   10ca0:	mov	w23, #0x0                   	// #0
   10ca4:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10ca8:	mov	w23, #0x2                   	// #2
   10cac:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10cb0:	mov	w23, #0x3                   	// #3
   10cb4:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10cb8:	mov	w23, #0x4                   	// #4
   10cbc:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10cc0:	mov	w23, #0x5                   	// #5
   10cc4:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10cc8:	mov	w23, #0x6                   	// #6
   10ccc:	b	10b48 <PyFloat_FromString@plt+0xa0b8>
   10cd0:	stp	x29, x30, [sp, #-144]!
   10cd4:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   10cd8:	add	x3, x3, #0x9b0
   10cdc:	mov	x29, sp
   10ce0:	stp	x19, x20, [sp, #16]
   10ce4:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   10ce8:	add	x3, x3, #0x410
   10cec:	ldr	x20, [x19, #4008]
   10cf0:	add	x5, sp, #0x58
   10cf4:	add	x4, sp, #0x50
   10cf8:	stp	x21, x22, [sp, #32]
   10cfc:	mov	x21, x0
   10d00:	mov	x0, x1
   10d04:	mov	x1, x2
   10d08:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   10d0c:	add	x2, x2, #0xe30
   10d10:	str	wzr, [sp, #76]
   10d14:	stp	x20, x20, [sp, #80]
   10d18:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   10d1c:	cbz	w0, 10ee0 <PyFloat_FromString@plt+0xa450>
   10d20:	ldr	x2, [sp, #88]
   10d24:	cmp	x2, x20
   10d28:	b.eq	10ef8 <PyFloat_FromString@plt+0xa468>  // b.none
   10d2c:	ldr	x0, [x2, #8]
   10d30:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
   10d34:	add	x1, x1, #0x328
   10d38:	cmp	x0, x1
   10d3c:	b.eq	10d4c <PyFloat_FromString@plt+0xa2bc>  // b.none
   10d40:	bl	69c0 <PyType_IsSubtype@plt>
   10d44:	cbz	w0, 10f90 <PyFloat_FromString@plt+0xa500>
   10d48:	ldr	x2, [sp, #88]
   10d4c:	add	x0, x2, #0x10
   10d50:	ldp	x2, x3, [x2, #16]
   10d54:	stp	x2, x3, [sp, #96]
   10d58:	ldp	x2, x3, [x0, #16]
   10d5c:	stp	x2, x3, [sp, #112]
   10d60:	ldr	x1, [x19, #4008]
   10d64:	ldp	x2, x3, [x0, #32]
   10d68:	stp	x2, x3, [sp, #128]
   10d6c:	ldr	x19, [sp, #80]
   10d70:	cmp	x19, x1
   10d74:	b.eq	10e6c <PyFloat_FromString@plt+0xa3dc>  // b.none
   10d78:	ldr	x0, [x19, #8]
   10d7c:	ldr	x0, [x0, #168]
   10d80:	tbz	w0, #28, 10e24 <PyFloat_FromString@plt+0xa394>
   10d84:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   10d88:	add	x2, x1, #0x7a0
   10d8c:	add	x0, x2, #0x10
   10d90:	ldr	x2, [x2, #16]
   10d94:	str	x23, [sp, #48]
   10d98:	cmp	x2, x19
   10d9c:	b.eq	10fb0 <PyFloat_FromString@plt+0xa520>  // b.none
   10da0:	ldr	x2, [x0, #8]
   10da4:	cmp	x19, x2
   10da8:	b.eq	10f4c <PyFloat_FromString@plt+0xa4bc>  // b.none
   10dac:	ldr	x2, [x0, #16]
   10db0:	cmp	x19, x2
   10db4:	b.eq	10fb8 <PyFloat_FromString@plt+0xa528>  // b.none
   10db8:	ldr	x2, [x0, #24]
   10dbc:	cmp	x19, x2
   10dc0:	b.eq	10fc0 <PyFloat_FromString@plt+0xa530>  // b.none
   10dc4:	ldr	x2, [x0, #32]
   10dc8:	cmp	x19, x2
   10dcc:	b.eq	10fc8 <PyFloat_FromString@plt+0xa538>  // b.none
   10dd0:	ldr	x2, [x0, #40]
   10dd4:	cmp	x19, x2
   10dd8:	b.eq	10fd0 <PyFloat_FromString@plt+0xa540>  // b.none
   10ddc:	ldr	x2, [x0, #48]
   10de0:	cmp	x19, x2
   10de4:	b.eq	10fd8 <PyFloat_FromString@plt+0xa548>  // b.none
   10de8:	ldr	x0, [x0, #56]
   10dec:	cmp	x19, x0
   10df0:	b.eq	10e54 <PyFloat_FromString@plt+0xa3c4>  // b.none
   10df4:	add	x1, x1, #0x7a0
   10df8:	mov	x20, #0x0                   	// #0
   10dfc:	add	x22, x1, #0x10
   10e00:	ldr	x1, [x22, x20, lsl #3]
   10e04:	mov	w23, w20
   10e08:	mov	x0, x19
   10e0c:	add	x20, x20, #0x1
   10e10:	bl	6900 <PyUnicode_Compare@plt>
   10e14:	cbz	w0, 10e58 <PyFloat_FromString@plt+0xa3c8>
   10e18:	cmp	x20, #0x8
   10e1c:	b.ne	10e00 <PyFloat_FromString@plt+0xa370>  // b.any
   10e20:	ldr	x23, [sp, #48]
   10e24:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10e28:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10e2c:	mov	x19, #0x0                   	// #0
   10e30:	ldr	x0, [x0, #3936]
   10e34:	add	x1, x1, #0xa40
   10e38:	ldr	x0, [x0]
   10e3c:	bl	6650 <PyErr_SetString@plt>
   10e40:	mov	x0, x19
   10e44:	ldp	x19, x20, [sp, #16]
   10e48:	ldp	x21, x22, [sp, #32]
   10e4c:	ldp	x29, x30, [sp], #144
   10e50:	ret
   10e54:	mov	w23, #0x7                   	// #7
   10e58:	mov	w1, w23
   10e5c:	add	x0, sp, #0x60
   10e60:	bl	1f7c0 <PyInit__decimal@@Base+0x3580>
   10e64:	cbz	w0, 10f54 <PyFloat_FromString@plt+0xa4c4>
   10e68:	ldr	x23, [sp, #48]
   10e6c:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
   10e70:	add	x0, x0, #0x328
   10e74:	add	x0, x0, #0x1a0
   10e78:	bl	6950 <_PyObject_New@plt>
   10e7c:	mov	x19, x0
   10e80:	cbz	x0, 10ee0 <PyFloat_FromString@plt+0xa450>
   10e84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   10e88:	mov	x2, #0xffffffffffffffff    	// #-1
   10e8c:	mov	w1, #0x30                  	// #48
   10e90:	str	x2, [x19, #16]
   10e94:	ldr	q0, [x0, #2128]
   10e98:	add	x0, x19, #0x48
   10e9c:	strb	w1, [x19, #24]
   10ea0:	add	x3, sp, #0x4c
   10ea4:	stp	xzr, xzr, [x19, #32]
   10ea8:	add	x1, x21, #0x18
   10eac:	add	x2, sp, #0x60
   10eb0:	str	x0, [x19, #64]
   10eb4:	add	x0, x19, #0x18
   10eb8:	str	q0, [x19, #48]
   10ebc:	bl	3d1c0 <PyInit__decimal@@Base+0x20f80>
   10ec0:	ldr	w1, [sp, #76]
   10ec4:	ldr	x0, [sp, #88]
   10ec8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   10ecc:	cbz	w0, 10e40 <PyFloat_FromString@plt+0xa3b0>
   10ed0:	ldr	x0, [x19]
   10ed4:	sub	x0, x0, #0x1
   10ed8:	str	x0, [x19]
   10edc:	cbz	x0, 10f3c <PyFloat_FromString@plt+0xa4ac>
   10ee0:	mov	x19, #0x0                   	// #0
   10ee4:	mov	x0, x19
   10ee8:	ldp	x19, x20, [sp, #16]
   10eec:	ldp	x21, x22, [sp, #32]
   10ef0:	ldp	x29, x30, [sp], #144
   10ef4:	ret
   10ef8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   10efc:	add	x2, sp, #0x60
   10f00:	mov	x1, #0x0                   	// #0
   10f04:	ldr	x0, [x0, #2056]
   10f08:	bl	6740 <PyContextVar_Get@plt>
   10f0c:	tbnz	w0, #31, 10ee0 <PyFloat_FromString@plt+0xa450>
   10f10:	ldr	x2, [sp, #96]
   10f14:	cbz	x2, 10f78 <PyFloat_FromString@plt+0xa4e8>
   10f18:	str	x2, [sp, #88]
   10f1c:	ldr	x0, [x2]
   10f20:	sub	x0, x0, #0x1
   10f24:	str	x0, [x2]
   10f28:	cbnz	x0, 10d4c <PyFloat_FromString@plt+0xa2bc>
   10f2c:	mov	x0, x2
   10f30:	bl	65d0 <_Py_Dealloc@plt>
   10f34:	ldr	x2, [sp, #88]
   10f38:	b	10d4c <PyFloat_FromString@plt+0xa2bc>
   10f3c:	mov	x0, x19
   10f40:	mov	x19, #0x0                   	// #0
   10f44:	bl	65d0 <_Py_Dealloc@plt>
   10f48:	b	10e40 <PyFloat_FromString@plt+0xa3b0>
   10f4c:	mov	w23, #0x1                   	// #1
   10f50:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10f54:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10f58:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10f5c:	mov	x19, #0x0                   	// #0
   10f60:	add	x1, x1, #0xe88
   10f64:	ldr	x0, [x0, #3920]
   10f68:	ldr	x0, [x0]
   10f6c:	bl	6650 <PyErr_SetString@plt>
   10f70:	ldr	x23, [sp, #48]
   10f74:	b	10e40 <PyFloat_FromString@plt+0xa3b0>
   10f78:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   10f7c:	str	x0, [sp, #88]
   10f80:	mov	x2, x0
   10f84:	cbnz	x0, 10f1c <PyFloat_FromString@plt+0xa48c>
   10f88:	mov	x19, #0x0                   	// #0
   10f8c:	b	10ee4 <PyFloat_FromString@plt+0xa454>
   10f90:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   10f94:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   10f98:	mov	x19, #0x0                   	// #0
   10f9c:	add	x1, x1, #0xba8
   10fa0:	ldr	x0, [x0, #3936]
   10fa4:	ldr	x0, [x0]
   10fa8:	bl	6650 <PyErr_SetString@plt>
   10fac:	b	10e40 <PyFloat_FromString@plt+0xa3b0>
   10fb0:	mov	w23, #0x0                   	// #0
   10fb4:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10fb8:	mov	w23, #0x2                   	// #2
   10fbc:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10fc0:	mov	w23, #0x3                   	// #3
   10fc4:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10fc8:	mov	w23, #0x4                   	// #4
   10fcc:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10fd0:	mov	w23, #0x5                   	// #5
   10fd4:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10fd8:	mov	w23, #0x6                   	// #6
   10fdc:	b	10e58 <PyFloat_FromString@plt+0xa3c8>
   10fe0:	stp	x29, x30, [sp, #-144]!
   10fe4:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   10fe8:	mov	x29, sp
   10fec:	stp	x21, x22, [sp, #32]
   10ff0:	mov	x22, x0
   10ff4:	add	x21, sp, #0x60
   10ff8:	ldr	x0, [x2, #2056]
   10ffc:	mov	x2, x21
   11000:	stp	x19, x20, [sp, #16]
   11004:	mov	x19, x1
   11008:	mov	x1, #0x0                   	// #0
   1100c:	str	wzr, [sp, #76]
   11010:	str	xzr, [sp, #80]
   11014:	bl	6740 <PyContextVar_Get@plt>
   11018:	tbnz	w0, #31, 11188 <PyFloat_FromString@plt+0xa6f8>
   1101c:	ldr	x20, [sp, #96]
   11020:	cbz	x20, 1117c <PyFloat_FromString@plt+0xa6ec>
   11024:	ldr	x2, [x20]
   11028:	sub	x2, x2, #0x1
   1102c:	str	x2, [x20]
   11030:	cbz	x2, 111a0 <PyFloat_FromString@plt+0xa710>
   11034:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11038:	mov	x0, x19
   1103c:	add	x2, sp, #0x50
   11040:	add	x1, x1, #0xba0
   11044:	bl	68e0 <PyArg_ParseTuple@plt>
   11048:	cbz	w0, 11188 <PyFloat_FromString@plt+0xa6f8>
   1104c:	ldr	x0, [sp, #80]
   11050:	cbz	x0, 11214 <PyFloat_FromString@plt+0xa784>
   11054:	mov	w1, #0xffffff90            	// #-112
   11058:	strb	w1, [sp, #96]
   1105c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   11060:	mov	x3, #0x1                   	// #1
   11064:	ldr	x2, [x0, #8]
   11068:	str	x3, [sp, #88]
   1106c:	ldr	q1, [x1, #2224]
   11070:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   11074:	ldr	q0, [x1, #2176]
   11078:	stur	q1, [sp, #104]
   1107c:	add	x1, sp, #0x58
   11080:	stur	q0, [sp, #120]
   11084:	ldr	x2, [x2, #168]
   11088:	str	x1, [sp, #136]
   1108c:	tbz	w2, #24, 1114c <PyFloat_FromString@plt+0xa6bc>
   11090:	str	x23, [sp, #48]
   11094:	bl	66f0 <PyLong_AsSsize_t@plt>
   11098:	mov	x23, x0
   1109c:	cmn	x0, #0x1
   110a0:	b.eq	111b4 <PyFloat_FromString@plt+0xa724>  // b.none
   110a4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
   110a8:	add	x0, x0, #0x328
   110ac:	add	x0, x0, #0x1a0
   110b0:	bl	6950 <_PyObject_New@plt>
   110b4:	mov	x19, x0
   110b8:	cbz	x0, 11130 <PyFloat_FromString@plt+0xa6a0>
   110bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   110c0:	add	x1, x19, #0x48
   110c4:	mov	x2, #0xffffffffffffffff    	// #-1
   110c8:	str	x2, [x19, #16]
   110cc:	ldr	q0, [x0, #2128]
   110d0:	mov	w0, #0x30                  	// #48
   110d4:	strb	w0, [x19, #24]
   110d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   110dc:	stp	xzr, xzr, [x19, #32]
   110e0:	cmp	x23, x0
   110e4:	str	x1, [x19, #64]
   110e8:	str	q0, [x19, #48]
   110ec:	b.eq	111ac <PyFloat_FromString@plt+0xa71c>  // b.none
   110f0:	neg	x23, x23
   110f4:	add	x1, x22, #0x18
   110f8:	add	x0, x19, #0x18
   110fc:	mov	x2, x21
   11100:	add	x4, sp, #0x4c
   11104:	add	x3, x20, #0x10
   11108:	str	x23, [sp, #104]
   1110c:	bl	3b660 <PyInit__decimal@@Base+0x1f420>
   11110:	ldr	w1, [sp, #76]
   11114:	mov	x0, x20
   11118:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1111c:	cbz	w0, 111fc <PyFloat_FromString@plt+0xa76c>
   11120:	ldr	x0, [x19]
   11124:	sub	x0, x0, #0x1
   11128:	str	x0, [x19]
   1112c:	cbz	x0, 1122c <PyFloat_FromString@plt+0xa79c>
   11130:	mov	x19, #0x0                   	// #0
   11134:	mov	x0, x19
   11138:	ldp	x19, x20, [sp, #16]
   1113c:	ldp	x21, x22, [sp, #32]
   11140:	ldr	x23, [sp, #48]
   11144:	ldp	x29, x30, [sp], #144
   11148:	ret
   1114c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11150:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11154:	mov	x19, #0x0                   	// #0
   11158:	add	x1, x1, #0xeb0
   1115c:	ldr	x0, [x0, #3936]
   11160:	ldr	x0, [x0]
   11164:	bl	6650 <PyErr_SetString@plt>
   11168:	mov	x0, x19
   1116c:	ldp	x19, x20, [sp, #16]
   11170:	ldp	x21, x22, [sp, #32]
   11174:	ldp	x29, x30, [sp], #144
   11178:	ret
   1117c:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   11180:	mov	x20, x0
   11184:	cbnz	x0, 11024 <PyFloat_FromString@plt+0xa594>
   11188:	mov	x19, #0x0                   	// #0
   1118c:	mov	x0, x19
   11190:	ldp	x19, x20, [sp, #16]
   11194:	ldp	x21, x22, [sp, #32]
   11198:	ldp	x29, x30, [sp], #144
   1119c:	ret
   111a0:	mov	x0, x20
   111a4:	bl	65d0 <_Py_Dealloc@plt>
   111a8:	b	11034 <PyFloat_FromString@plt+0xa5a4>
   111ac:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
   111b0:	b	110f4 <PyFloat_FromString@plt+0xa664>
   111b4:	bl	67e0 <PyErr_Occurred@plt>
   111b8:	cbnz	x0, 11130 <PyFloat_FromString@plt+0xa6a0>
   111bc:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
   111c0:	add	x0, x0, #0x328
   111c4:	add	x0, x0, #0x1a0
   111c8:	bl	6950 <_PyObject_New@plt>
   111cc:	mov	x19, x0
   111d0:	cbz	x0, 11130 <PyFloat_FromString@plt+0xa6a0>
   111d4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   111d8:	mov	w1, #0x30                  	// #48
   111dc:	str	x23, [x19, #16]
   111e0:	ldr	q0, [x0, #2128]
   111e4:	add	x0, x19, #0x48
   111e8:	strb	w1, [x19, #24]
   111ec:	stp	xzr, xzr, [x19, #32]
   111f0:	str	q0, [x19, #48]
   111f4:	str	x0, [x19, #64]
   111f8:	b	110f0 <PyFloat_FromString@plt+0xa660>
   111fc:	mov	x0, x19
   11200:	ldp	x19, x20, [sp, #16]
   11204:	ldp	x21, x22, [sp, #32]
   11208:	ldr	x23, [sp, #48]
   1120c:	ldp	x29, x30, [sp], #144
   11210:	ret
   11214:	mov	x1, x20
   11218:	mov	x0, x22
   1121c:	mov	w2, #0x6                   	// #6
   11220:	bl	7850 <PyFloat_FromString@plt+0xdc0>
   11224:	mov	x19, x0
   11228:	b	11168 <PyFloat_FromString@plt+0xa6d8>
   1122c:	mov	x0, x19
   11230:	mov	x19, #0x0                   	// #0
   11234:	bl	65d0 <_Py_Dealloc@plt>
   11238:	ldr	x23, [sp, #48]
   1123c:	b	11168 <PyFloat_FromString@plt+0xa6d8>
   11240:	stp	x29, x30, [sp, #-80]!
   11244:	mov	x29, sp
   11248:	add	x3, sp, #0x48
   1124c:	add	x2, sp, #0x40
   11250:	stp	x19, x20, [sp, #16]
   11254:	stp	x21, x22, [sp, #32]
   11258:	mov	x22, x0
   1125c:	mov	x0, x1
   11260:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11264:	add	x1, x1, #0xdc0
   11268:	bl	68e0 <PyArg_ParseTuple@plt>
   1126c:	cbz	w0, 1134c <PyFloat_FromString@plt+0xa8bc>
   11270:	ldr	x20, [sp, #64]
   11274:	ldr	x0, [x20, #8]
   11278:	str	x23, [sp, #48]
   1127c:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   11280:	add	x19, x23, #0x328
   11284:	add	x19, x19, #0x1a0
   11288:	cmp	x0, x19
   1128c:	b.eq	112e0 <PyFloat_FromString@plt+0xa850>  // b.none
   11290:	mov	x1, x19
   11294:	bl	69c0 <PyType_IsSubtype@plt>
   11298:	cbnz	w0, 112e0 <PyFloat_FromString@plt+0xa850>
   1129c:	ldr	x2, [x20, #8]
   112a0:	ldr	x0, [x2, #168]
   112a4:	tbnz	w0, #24, 11464 <PyFloat_FromString@plt+0xa9d4>
   112a8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   112ac:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   112b0:	ldr	x2, [x2, #24]
   112b4:	add	x1, x1, #0xb70
   112b8:	ldr	x0, [x0, #3936]
   112bc:	mov	x19, #0x0                   	// #0
   112c0:	ldr	x0, [x0]
   112c4:	bl	6a10 <PyErr_Format@plt>
   112c8:	ldr	x23, [sp, #48]
   112cc:	mov	x0, x19
   112d0:	ldp	x19, x20, [sp, #16]
   112d4:	ldp	x21, x22, [sp, #32]
   112d8:	ldp	x29, x30, [sp], #80
   112dc:	ret
   112e0:	ldr	x0, [x20]
   112e4:	add	x0, x0, #0x1
   112e8:	str	x0, [x20]
   112ec:	ldr	x21, [sp, #72]
   112f0:	add	x19, x23, #0x328
   112f4:	add	x19, x19, #0x1a0
   112f8:	ldr	x0, [x21, #8]
   112fc:	cmp	x0, x19
   11300:	b.eq	11364 <PyFloat_FromString@plt+0xa8d4>  // b.none
   11304:	mov	x1, x19
   11308:	bl	69c0 <PyType_IsSubtype@plt>
   1130c:	cbnz	w0, 11364 <PyFloat_FromString@plt+0xa8d4>
   11310:	ldr	x2, [x21, #8]
   11314:	ldr	x0, [x2, #168]
   11318:	tbnz	w0, #24, 11448 <PyFloat_FromString@plt+0xa9b8>
   1131c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11320:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11324:	ldr	x2, [x2, #24]
   11328:	add	x1, x1, #0xb70
   1132c:	ldr	x0, [x0, #3936]
   11330:	ldr	x0, [x0]
   11334:	bl	6a10 <PyErr_Format@plt>
   11338:	ldr	x0, [x20]
   1133c:	sub	x0, x0, #0x1
   11340:	str	x0, [x20]
   11344:	cbz	x0, 11484 <PyFloat_FromString@plt+0xa9f4>
   11348:	ldr	x23, [sp, #48]
   1134c:	mov	x19, #0x0                   	// #0
   11350:	mov	x0, x19
   11354:	ldp	x19, x20, [sp, #16]
   11358:	ldp	x21, x22, [sp, #32]
   1135c:	ldp	x29, x30, [sp], #80
   11360:	ret
   11364:	ldr	x0, [x21]
   11368:	add	x0, x0, #0x1
   1136c:	str	x0, [x21]
   11370:	add	x0, x23, #0x328
   11374:	add	x0, x0, #0x1a0
   11378:	bl	6950 <_PyObject_New@plt>
   1137c:	mov	x19, x0
   11380:	cbz	x0, 11400 <PyFloat_FromString@plt+0xa970>
   11384:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   11388:	mov	x2, #0xffffffffffffffff    	// #-1
   1138c:	mov	w1, #0x30                  	// #48
   11390:	str	x2, [x19, #16]
   11394:	ldr	q0, [x0, #2128]
   11398:	add	x0, x19, #0x48
   1139c:	strb	w1, [x19, #24]
   113a0:	add	x2, x21, #0x18
   113a4:	stp	xzr, xzr, [x19, #32]
   113a8:	add	x1, x20, #0x18
   113ac:	str	x0, [x19, #64]
   113b0:	add	x0, x19, #0x18
   113b4:	str	q0, [x19, #48]
   113b8:	bl	2dcd0 <PyInit__decimal@@Base+0x11a90>
   113bc:	ldr	x0, [x20]
   113c0:	sub	x0, x0, #0x1
   113c4:	str	x0, [x20]
   113c8:	cbz	x0, 113f4 <PyFloat_FromString@plt+0xa964>
   113cc:	ldr	x0, [x21]
   113d0:	sub	x0, x0, #0x1
   113d4:	str	x0, [x21]
   113d8:	cbz	x0, 11428 <PyFloat_FromString@plt+0xa998>
   113dc:	mov	x0, x19
   113e0:	ldp	x19, x20, [sp, #16]
   113e4:	ldp	x21, x22, [sp, #32]
   113e8:	ldr	x23, [sp, #48]
   113ec:	ldp	x29, x30, [sp], #80
   113f0:	ret
   113f4:	mov	x0, x20
   113f8:	bl	65d0 <_Py_Dealloc@plt>
   113fc:	b	113cc <PyFloat_FromString@plt+0xa93c>
   11400:	ldr	x0, [x20]
   11404:	sub	x0, x0, #0x1
   11408:	str	x0, [x20]
   1140c:	cbnz	x0, 11418 <PyFloat_FromString@plt+0xa988>
   11410:	mov	x0, x20
   11414:	bl	65d0 <_Py_Dealloc@plt>
   11418:	ldr	x0, [x21]
   1141c:	sub	x0, x0, #0x1
   11420:	str	x0, [x21]
   11424:	cbnz	x0, 11348 <PyFloat_FromString@plt+0xa8b8>
   11428:	mov	x0, x21
   1142c:	bl	65d0 <_Py_Dealloc@plt>
   11430:	mov	x0, x19
   11434:	ldp	x19, x20, [sp, #16]
   11438:	ldp	x21, x22, [sp, #32]
   1143c:	ldr	x23, [sp, #48]
   11440:	ldp	x29, x30, [sp], #80
   11444:	ret
   11448:	mov	x1, x21
   1144c:	mov	x2, x22
   11450:	mov	x0, x19
   11454:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   11458:	mov	x21, x0
   1145c:	cbnz	x0, 11370 <PyFloat_FromString@plt+0xa8e0>
   11460:	b	11338 <PyFloat_FromString@plt+0xa8a8>
   11464:	mov	x1, x20
   11468:	mov	x0, x19
   1146c:	mov	x2, x22
   11470:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   11474:	mov	x20, x0
   11478:	cbnz	x0, 112ec <PyFloat_FromString@plt+0xa85c>
   1147c:	ldr	x23, [sp, #48]
   11480:	b	1134c <PyFloat_FromString@plt+0xa8bc>
   11484:	mov	x0, x20
   11488:	mov	x19, #0x0                   	// #0
   1148c:	bl	65d0 <_Py_Dealloc@plt>
   11490:	ldr	x23, [sp, #48]
   11494:	b	112cc <PyFloat_FromString@plt+0xa83c>
   11498:	stp	x29, x30, [sp, #-80]!
   1149c:	mov	x29, sp
   114a0:	add	x3, sp, #0x48
   114a4:	add	x2, sp, #0x40
   114a8:	stp	x19, x20, [sp, #16]
   114ac:	stp	x21, x22, [sp, #32]
   114b0:	mov	x22, x0
   114b4:	mov	x0, x1
   114b8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   114bc:	add	x1, x1, #0xdc0
   114c0:	bl	68e0 <PyArg_ParseTuple@plt>
   114c4:	cbz	w0, 115a4 <PyFloat_FromString@plt+0xab14>
   114c8:	ldr	x20, [sp, #64]
   114cc:	ldr	x0, [x20, #8]
   114d0:	str	x23, [sp, #48]
   114d4:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   114d8:	add	x19, x23, #0x328
   114dc:	add	x19, x19, #0x1a0
   114e0:	cmp	x0, x19
   114e4:	b.eq	11538 <PyFloat_FromString@plt+0xaaa8>  // b.none
   114e8:	mov	x1, x19
   114ec:	bl	69c0 <PyType_IsSubtype@plt>
   114f0:	cbnz	w0, 11538 <PyFloat_FromString@plt+0xaaa8>
   114f4:	ldr	x2, [x20, #8]
   114f8:	ldr	x0, [x2, #168]
   114fc:	tbnz	w0, #24, 116bc <PyFloat_FromString@plt+0xac2c>
   11500:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11504:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11508:	ldr	x2, [x2, #24]
   1150c:	add	x1, x1, #0xb70
   11510:	ldr	x0, [x0, #3936]
   11514:	mov	x19, #0x0                   	// #0
   11518:	ldr	x0, [x0]
   1151c:	bl	6a10 <PyErr_Format@plt>
   11520:	ldr	x23, [sp, #48]
   11524:	mov	x0, x19
   11528:	ldp	x19, x20, [sp, #16]
   1152c:	ldp	x21, x22, [sp, #32]
   11530:	ldp	x29, x30, [sp], #80
   11534:	ret
   11538:	ldr	x0, [x20]
   1153c:	add	x0, x0, #0x1
   11540:	str	x0, [x20]
   11544:	ldr	x21, [sp, #72]
   11548:	add	x19, x23, #0x328
   1154c:	add	x19, x19, #0x1a0
   11550:	ldr	x0, [x21, #8]
   11554:	cmp	x0, x19
   11558:	b.eq	115bc <PyFloat_FromString@plt+0xab2c>  // b.none
   1155c:	mov	x1, x19
   11560:	bl	69c0 <PyType_IsSubtype@plt>
   11564:	cbnz	w0, 115bc <PyFloat_FromString@plt+0xab2c>
   11568:	ldr	x2, [x21, #8]
   1156c:	ldr	x0, [x2, #168]
   11570:	tbnz	w0, #24, 116a0 <PyFloat_FromString@plt+0xac10>
   11574:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11578:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1157c:	ldr	x2, [x2, #24]
   11580:	add	x1, x1, #0xb70
   11584:	ldr	x0, [x0, #3936]
   11588:	ldr	x0, [x0]
   1158c:	bl	6a10 <PyErr_Format@plt>
   11590:	ldr	x0, [x20]
   11594:	sub	x0, x0, #0x1
   11598:	str	x0, [x20]
   1159c:	cbz	x0, 116dc <PyFloat_FromString@plt+0xac4c>
   115a0:	ldr	x23, [sp, #48]
   115a4:	mov	x19, #0x0                   	// #0
   115a8:	mov	x0, x19
   115ac:	ldp	x19, x20, [sp, #16]
   115b0:	ldp	x21, x22, [sp, #32]
   115b4:	ldp	x29, x30, [sp], #80
   115b8:	ret
   115bc:	ldr	x0, [x21]
   115c0:	add	x0, x0, #0x1
   115c4:	str	x0, [x21]
   115c8:	add	x0, x23, #0x328
   115cc:	add	x0, x0, #0x1a0
   115d0:	bl	6950 <_PyObject_New@plt>
   115d4:	mov	x19, x0
   115d8:	cbz	x0, 11658 <PyFloat_FromString@plt+0xabc8>
   115dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   115e0:	mov	x2, #0xffffffffffffffff    	// #-1
   115e4:	mov	w1, #0x30                  	// #48
   115e8:	str	x2, [x19, #16]
   115ec:	ldr	q0, [x0, #2128]
   115f0:	add	x0, x19, #0x48
   115f4:	strb	w1, [x19, #24]
   115f8:	add	x2, x21, #0x18
   115fc:	stp	xzr, xzr, [x19, #32]
   11600:	add	x1, x20, #0x18
   11604:	str	x0, [x19, #64]
   11608:	add	x0, x19, #0x18
   1160c:	str	q0, [x19, #48]
   11610:	bl	2e228 <PyInit__decimal@@Base+0x11fe8>
   11614:	ldr	x0, [x20]
   11618:	sub	x0, x0, #0x1
   1161c:	str	x0, [x20]
   11620:	cbz	x0, 1164c <PyFloat_FromString@plt+0xabbc>
   11624:	ldr	x0, [x21]
   11628:	sub	x0, x0, #0x1
   1162c:	str	x0, [x21]
   11630:	cbz	x0, 11680 <PyFloat_FromString@plt+0xabf0>
   11634:	mov	x0, x19
   11638:	ldp	x19, x20, [sp, #16]
   1163c:	ldp	x21, x22, [sp, #32]
   11640:	ldr	x23, [sp, #48]
   11644:	ldp	x29, x30, [sp], #80
   11648:	ret
   1164c:	mov	x0, x20
   11650:	bl	65d0 <_Py_Dealloc@plt>
   11654:	b	11624 <PyFloat_FromString@plt+0xab94>
   11658:	ldr	x0, [x20]
   1165c:	sub	x0, x0, #0x1
   11660:	str	x0, [x20]
   11664:	cbnz	x0, 11670 <PyFloat_FromString@plt+0xabe0>
   11668:	mov	x0, x20
   1166c:	bl	65d0 <_Py_Dealloc@plt>
   11670:	ldr	x0, [x21]
   11674:	sub	x0, x0, #0x1
   11678:	str	x0, [x21]
   1167c:	cbnz	x0, 115a0 <PyFloat_FromString@plt+0xab10>
   11680:	mov	x0, x21
   11684:	bl	65d0 <_Py_Dealloc@plt>
   11688:	mov	x0, x19
   1168c:	ldp	x19, x20, [sp, #16]
   11690:	ldp	x21, x22, [sp, #32]
   11694:	ldr	x23, [sp, #48]
   11698:	ldp	x29, x30, [sp], #80
   1169c:	ret
   116a0:	mov	x1, x21
   116a4:	mov	x2, x22
   116a8:	mov	x0, x19
   116ac:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   116b0:	mov	x21, x0
   116b4:	cbnz	x0, 115c8 <PyFloat_FromString@plt+0xab38>
   116b8:	b	11590 <PyFloat_FromString@plt+0xab00>
   116bc:	mov	x1, x20
   116c0:	mov	x0, x19
   116c4:	mov	x2, x22
   116c8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   116cc:	mov	x20, x0
   116d0:	cbnz	x0, 11544 <PyFloat_FromString@plt+0xaab4>
   116d4:	ldr	x23, [sp, #48]
   116d8:	b	115a4 <PyFloat_FromString@plt+0xab14>
   116dc:	mov	x0, x20
   116e0:	mov	x19, #0x0                   	// #0
   116e4:	bl	65d0 <_Py_Dealloc@plt>
   116e8:	ldr	x23, [sp, #48]
   116ec:	b	11524 <PyFloat_FromString@plt+0xaa94>
   116f0:	stp	x29, x30, [sp, #-80]!
   116f4:	mov	x29, sp
   116f8:	stp	x19, x20, [sp, #16]
   116fc:	add	x20, x0, #0x18
   11700:	mov	x0, x20
   11704:	str	wzr, [sp, #68]
   11708:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   1170c:	cbnz	w0, 11964 <PyFloat_FromString@plt+0xaed4>
   11710:	stp	x21, x22, [sp, #32]
   11714:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
   11718:	add	x0, x22, #0x7a0
   1171c:	add	x2, sp, #0x48
   11720:	mov	x1, #0x0                   	// #0
   11724:	ldr	x0, [x0, #104]
   11728:	bl	6740 <PyContextVar_Get@plt>
   1172c:	tbnz	w0, #31, 118e8 <PyFloat_FromString@plt+0xae58>
   11730:	ldr	x21, [sp, #72]
   11734:	cbz	x21, 1190c <PyFloat_FromString@plt+0xae7c>
   11738:	ldr	x0, [x21]
   1173c:	sub	x0, x0, #0x1
   11740:	str	x0, [x21]
   11744:	cbz	x0, 11900 <PyFloat_FromString@plt+0xae70>
   11748:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
   1174c:	add	x0, x0, #0x328
   11750:	add	x0, x0, #0x1a0
   11754:	bl	6950 <_PyObject_New@plt>
   11758:	mov	x19, x0
   1175c:	cbz	x0, 118e8 <PyFloat_FromString@plt+0xae58>
   11760:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   11764:	stp	x23, x24, [sp, #48]
   11768:	mov	x2, #0xffffffffffffffff    	// #-1
   1176c:	ldr	q0, [x0, #2128]
   11770:	mov	w1, #0x30                  	// #48
   11774:	add	x0, x19, #0x48
   11778:	str	x2, [x19, #16]
   1177c:	strb	w1, [x19, #24]
   11780:	add	x23, x19, #0x18
   11784:	stp	xzr, xzr, [x19, #32]
   11788:	mov	x1, x20
   1178c:	add	x2, sp, #0x44
   11790:	str	x0, [x19, #64]
   11794:	mov	x0, x23
   11798:	str	q0, [x19, #48]
   1179c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   117a0:	cbz	w0, 1191c <PyFloat_FromString@plt+0xae8c>
   117a4:	mov	x0, x23
   117a8:	mov	x23, #0x0                   	// #0
   117ac:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
   117b0:	cbnz	w0, 117b8 <PyFloat_FromString@plt+0xad28>
   117b4:	ldr	x23, [x19, #32]
   117b8:	str	xzr, [x19, #32]
   117bc:	mov	x1, x21
   117c0:	mov	x0, x19
   117c4:	mov	w2, #0x3                   	// #3
   117c8:	bl	7850 <PyFloat_FromString@plt+0xdc0>
   117cc:	ldr	x1, [x19]
   117d0:	mov	x20, x0
   117d4:	sub	x0, x1, #0x1
   117d8:	str	x0, [x19]
   117dc:	cbz	x0, 1194c <PyFloat_FromString@plt+0xaebc>
   117e0:	cbz	x20, 118e4 <PyFloat_FromString@plt+0xae54>
   117e4:	cmp	x23, #0x0
   117e8:	cneg	x0, x23, lt  // lt = tstop
   117ec:	bl	66a0 <PyLong_FromSsize_t@plt>
   117f0:	mov	x19, x0
   117f4:	cbz	x0, 11990 <PyFloat_FromString@plt+0xaf00>
   117f8:	mov	x0, #0xa                   	// #10
   117fc:	bl	66e0 <PyLong_FromLong@plt>
   11800:	mov	x21, x0
   11804:	cbz	x0, 11ab8 <PyFloat_FromString@plt+0xb028>
   11808:	add	x3, x22, #0x7a0
   1180c:	adrp	x2, 62000 <PyInit__decimal@@Base+0x45dc0>
   11810:	mov	x1, x19
   11814:	ldr	x2, [x2, #4008]
   11818:	ldr	x3, [x3, #160]
   1181c:	blr	x3
   11820:	mov	x24, x0
   11824:	ldr	x1, [x19]
   11828:	sub	x1, x1, #0x1
   1182c:	str	x1, [x19]
   11830:	cbz	x1, 11aac <PyFloat_FromString@plt+0xb01c>
   11834:	ldr	x1, [x21]
   11838:	sub	x1, x1, #0x1
   1183c:	str	x1, [x21]
   11840:	cbz	x1, 11958 <PyFloat_FromString@plt+0xaec8>
   11844:	cbz	x24, 11990 <PyFloat_FromString@plt+0xaf00>
   11848:	tbnz	x23, #63, 119c8 <PyFloat_FromString@plt+0xaf38>
   1184c:	add	x22, x22, #0x7a0
   11850:	mov	x1, x24
   11854:	mov	x0, x20
   11858:	ldr	x2, [x22, #168]
   1185c:	blr	x2
   11860:	mov	x23, x0
   11864:	ldr	x1, [x20]
   11868:	sub	x1, x1, #0x1
   1186c:	str	x1, [x20]
   11870:	cbz	x1, 11ae0 <PyFloat_FromString@plt+0xb050>
   11874:	cbz	x23, 11aec <PyFloat_FromString@plt+0xb05c>
   11878:	mov	x0, #0x1                   	// #1
   1187c:	bl	66e0 <PyLong_FromLong@plt>
   11880:	mov	x21, x0
   11884:	cbz	x0, 11b10 <PyFloat_FromString@plt+0xb080>
   11888:	mov	x2, x0
   1188c:	mov	x1, x23
   11890:	mov	x0, #0x2                   	// #2
   11894:	bl	6a60 <PyTuple_Pack@plt>
   11898:	ldr	x1, [x24]
   1189c:	mov	x19, x0
   118a0:	sub	x1, x1, #0x1
   118a4:	str	x1, [x24]
   118a8:	cbz	x1, 11b04 <PyFloat_FromString@plt+0xb074>
   118ac:	ldr	x1, [x21]
   118b0:	sub	x1, x1, #0x1
   118b4:	str	x1, [x21]
   118b8:	cbz	x1, 11a70 <PyFloat_FromString@plt+0xafe0>
   118bc:	ldr	x1, [x23]
   118c0:	sub	x1, x1, #0x1
   118c4:	str	x1, [x23]
   118c8:	cbz	x1, 119a8 <PyFloat_FromString@plt+0xaf18>
   118cc:	mov	x0, x19
   118d0:	ldp	x19, x20, [sp, #16]
   118d4:	ldp	x21, x22, [sp, #32]
   118d8:	ldp	x23, x24, [sp, #48]
   118dc:	ldp	x29, x30, [sp], #80
   118e0:	ret
   118e4:	ldp	x23, x24, [sp, #48]
   118e8:	mov	x19, #0x0                   	// #0
   118ec:	ldp	x21, x22, [sp, #32]
   118f0:	mov	x0, x19
   118f4:	ldp	x19, x20, [sp, #16]
   118f8:	ldp	x29, x30, [sp], #80
   118fc:	ret
   11900:	mov	x0, x21
   11904:	bl	65d0 <_Py_Dealloc@plt>
   11908:	b	11748 <PyFloat_FromString@plt+0xacb8>
   1190c:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   11910:	mov	x21, x0
   11914:	cbnz	x0, 11738 <PyFloat_FromString@plt+0xaca8>
   11918:	b	118e8 <PyFloat_FromString@plt+0xae58>
   1191c:	ldr	x0, [x19]
   11920:	sub	x0, x0, #0x1
   11924:	str	x0, [x19]
   11928:	cbz	x0, 11aa0 <PyFloat_FromString@plt+0xb010>
   1192c:	bl	65e0 <PyErr_NoMemory@plt>
   11930:	mov	x19, #0x0                   	// #0
   11934:	mov	x0, x19
   11938:	ldp	x19, x20, [sp, #16]
   1193c:	ldp	x21, x22, [sp, #32]
   11940:	ldp	x23, x24, [sp, #48]
   11944:	ldp	x29, x30, [sp], #80
   11948:	ret
   1194c:	mov	x0, x19
   11950:	bl	65d0 <_Py_Dealloc@plt>
   11954:	b	117e0 <PyFloat_FromString@plt+0xad50>
   11958:	mov	x0, x21
   1195c:	bl	65d0 <_Py_Dealloc@plt>
   11960:	b	11844 <PyFloat_FromString@plt+0xadb4>
   11964:	mov	x0, x20
   11968:	bl	2a868 <PyInit__decimal@@Base+0xe628>
   1196c:	cbz	w0, 11a80 <PyFloat_FromString@plt+0xaff0>
   11970:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11974:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11978:	mov	x19, #0x0                   	// #0
   1197c:	add	x1, x1, #0xed0
   11980:	ldr	x0, [x0, #3928]
   11984:	ldr	x0, [x0]
   11988:	bl	6650 <PyErr_SetString@plt>
   1198c:	b	118f0 <PyFloat_FromString@plt+0xae60>
   11990:	mov	x23, x20
   11994:	mov	x19, #0x0                   	// #0
   11998:	ldr	x1, [x23]
   1199c:	sub	x1, x1, #0x1
   119a0:	str	x1, [x23]
   119a4:	cbnz	x1, 118cc <PyFloat_FromString@plt+0xae3c>
   119a8:	mov	x0, x23
   119ac:	bl	65d0 <_Py_Dealloc@plt>
   119b0:	mov	x0, x19
   119b4:	ldp	x19, x20, [sp, #16]
   119b8:	ldp	x21, x22, [sp, #32]
   119bc:	ldp	x23, x24, [sp, #48]
   119c0:	ldp	x29, x30, [sp], #80
   119c4:	ret
   119c8:	mov	x1, x24
   119cc:	mov	x0, x20
   119d0:	bl	6700 <_PyLong_GCD@plt>
   119d4:	mov	x19, x0
   119d8:	cbz	x0, 11b3c <PyFloat_FromString@plt+0xb0ac>
   119dc:	add	x2, x22, #0x7a0
   119e0:	mov	x1, x0
   119e4:	mov	x0, x20
   119e8:	ldr	x2, [x2, #176]
   119ec:	blr	x2
   119f0:	mov	x23, x0
   119f4:	ldr	x1, [x20]
   119f8:	sub	x0, x1, #0x1
   119fc:	str	x0, [x20]
   11a00:	cbz	x0, 11b30 <PyFloat_FromString@plt+0xb0a0>
   11a04:	add	x22, x22, #0x7a0
   11a08:	mov	x1, x19
   11a0c:	mov	x0, x24
   11a10:	ldr	x2, [x22, #176]
   11a14:	blr	x2
   11a18:	mov	x21, x0
   11a1c:	ldr	x1, [x24]
   11a20:	sub	x0, x1, #0x1
   11a24:	str	x0, [x24]
   11a28:	cbz	x0, 11b24 <PyFloat_FromString@plt+0xb094>
   11a2c:	ldr	x0, [x19]
   11a30:	sub	x0, x0, #0x1
   11a34:	str	x0, [x19]
   11a38:	cbz	x0, 11b18 <PyFloat_FromString@plt+0xb088>
   11a3c:	cmp	x23, #0x0
   11a40:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   11a44:	b.eq	11b48 <PyFloat_FromString@plt+0xb0b8>  // b.none
   11a48:	mov	x2, x21
   11a4c:	mov	x1, x23
   11a50:	mov	x0, #0x2                   	// #2
   11a54:	bl	6a60 <PyTuple_Pack@plt>
   11a58:	mov	x19, x0
   11a5c:	ldr	x0, [x21]
   11a60:	sub	x0, x0, #0x1
   11a64:	str	x0, [x21]
   11a68:	cbnz	x0, 118bc <PyFloat_FromString@plt+0xae2c>
   11a6c:	nop
   11a70:	mov	x0, x21
   11a74:	bl	65d0 <_Py_Dealloc@plt>
   11a78:	cbz	x23, 118cc <PyFloat_FromString@plt+0xae3c>
   11a7c:	b	118bc <PyFloat_FromString@plt+0xae2c>
   11a80:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11a84:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11a88:	mov	x19, #0x0                   	// #0
   11a8c:	add	x1, x1, #0xef8
   11a90:	ldr	x0, [x0, #3992]
   11a94:	ldr	x0, [x0]
   11a98:	bl	6650 <PyErr_SetString@plt>
   11a9c:	b	118f0 <PyFloat_FromString@plt+0xae60>
   11aa0:	mov	x0, x19
   11aa4:	bl	65d0 <_Py_Dealloc@plt>
   11aa8:	b	1192c <PyFloat_FromString@plt+0xae9c>
   11aac:	mov	x0, x19
   11ab0:	bl	65d0 <_Py_Dealloc@plt>
   11ab4:	b	11834 <PyFloat_FromString@plt+0xada4>
   11ab8:	mov	x23, x20
   11abc:	ldr	x0, [x19]
   11ac0:	sub	x0, x0, #0x1
   11ac4:	str	x0, [x19]
   11ac8:	cbnz	x0, 11b68 <PyFloat_FromString@plt+0xb0d8>
   11acc:	mov	x0, x19
   11ad0:	mov	x19, #0x0                   	// #0
   11ad4:	bl	65d0 <_Py_Dealloc@plt>
   11ad8:	cbz	x23, 118cc <PyFloat_FromString@plt+0xae3c>
   11adc:	b	118bc <PyFloat_FromString@plt+0xae2c>
   11ae0:	mov	x0, x20
   11ae4:	bl	65d0 <_Py_Dealloc@plt>
   11ae8:	b	11874 <PyFloat_FromString@plt+0xade4>
   11aec:	ldr	x0, [x24]
   11af0:	sub	x0, x0, #0x1
   11af4:	str	x0, [x24]
   11af8:	cbnz	x0, 11b70 <PyFloat_FromString@plt+0xb0e0>
   11afc:	mov	x19, x24
   11b00:	b	11acc <PyFloat_FromString@plt+0xb03c>
   11b04:	mov	x0, x24
   11b08:	bl	65d0 <_Py_Dealloc@plt>
   11b0c:	b	118ac <PyFloat_FromString@plt+0xae1c>
   11b10:	mov	x19, x24
   11b14:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11b18:	mov	x0, x19
   11b1c:	bl	65d0 <_Py_Dealloc@plt>
   11b20:	b	11a3c <PyFloat_FromString@plt+0xafac>
   11b24:	mov	x0, x24
   11b28:	bl	65d0 <_Py_Dealloc@plt>
   11b2c:	b	11a2c <PyFloat_FromString@plt+0xaf9c>
   11b30:	mov	x0, x20
   11b34:	bl	65d0 <_Py_Dealloc@plt>
   11b38:	b	11a04 <PyFloat_FromString@plt+0xaf74>
   11b3c:	mov	x21, x24
   11b40:	mov	x23, x20
   11b44:	b	11a5c <PyFloat_FromString@plt+0xafcc>
   11b48:	cbz	x21, 11b80 <PyFloat_FromString@plt+0xb0f0>
   11b4c:	ldr	x0, [x21]
   11b50:	mov	x19, #0x0                   	// #0
   11b54:	sub	x0, x0, #0x1
   11b58:	str	x0, [x21]
   11b5c:	cbz	x0, 11a70 <PyFloat_FromString@plt+0xafe0>
   11b60:	cbz	x23, 118cc <PyFloat_FromString@plt+0xae3c>
   11b64:	b	118bc <PyFloat_FromString@plt+0xae2c>
   11b68:	mov	x19, #0x0                   	// #0
   11b6c:	b	118bc <PyFloat_FromString@plt+0xae2c>
   11b70:	mov	x19, #0x0                   	// #0
   11b74:	ldp	x21, x22, [sp, #32]
   11b78:	ldp	x23, x24, [sp, #48]
   11b7c:	b	118f0 <PyFloat_FromString@plt+0xae60>
   11b80:	mov	x19, #0x0                   	// #0
   11b84:	cbz	x23, 118cc <PyFloat_FromString@plt+0xae3c>
   11b88:	b	118bc <PyFloat_FromString@plt+0xae2c>
   11b8c:	nop
   11b90:	stp	x29, x30, [sp, #-96]!
   11b94:	mov	x29, sp
   11b98:	add	x3, sp, #0x58
   11b9c:	add	x2, sp, #0x50
   11ba0:	stp	x19, x20, [sp, #16]
   11ba4:	stp	x21, x22, [sp, #32]
   11ba8:	mov	x21, x0
   11bac:	mov	x0, x1
   11bb0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11bb4:	add	x1, x1, #0xdc0
   11bb8:	str	wzr, [sp, #76]
   11bbc:	bl	68e0 <PyArg_ParseTuple@plt>
   11bc0:	cbz	w0, 11ca0 <PyFloat_FromString@plt+0xb210>
   11bc4:	ldr	x20, [sp, #80]
   11bc8:	ldr	x0, [x20, #8]
   11bcc:	str	x23, [sp, #48]
   11bd0:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   11bd4:	add	x19, x23, #0x328
   11bd8:	add	x19, x19, #0x1a0
   11bdc:	cmp	x0, x19
   11be0:	b.eq	11c34 <PyFloat_FromString@plt+0xb1a4>  // b.none
   11be4:	mov	x1, x19
   11be8:	bl	69c0 <PyType_IsSubtype@plt>
   11bec:	cbnz	w0, 11c34 <PyFloat_FromString@plt+0xb1a4>
   11bf0:	ldr	x2, [x20, #8]
   11bf4:	ldr	x0, [x2, #168]
   11bf8:	tbnz	w0, #24, 11d90 <PyFloat_FromString@plt+0xb300>
   11bfc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11c00:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11c04:	ldr	x2, [x2, #24]
   11c08:	add	x1, x1, #0xb70
   11c0c:	ldr	x0, [x0, #3936]
   11c10:	mov	x19, #0x0                   	// #0
   11c14:	ldr	x0, [x0]
   11c18:	bl	6a10 <PyErr_Format@plt>
   11c1c:	ldr	x23, [sp, #48]
   11c20:	mov	x0, x19
   11c24:	ldp	x19, x20, [sp, #16]
   11c28:	ldp	x21, x22, [sp, #32]
   11c2c:	ldp	x29, x30, [sp], #96
   11c30:	ret
   11c34:	ldr	x0, [x20]
   11c38:	add	x0, x0, #0x1
   11c3c:	str	x0, [x20]
   11c40:	ldr	x22, [sp, #88]
   11c44:	add	x19, x23, #0x328
   11c48:	add	x19, x19, #0x1a0
   11c4c:	ldr	x0, [x22, #8]
   11c50:	cmp	x0, x19
   11c54:	b.eq	11cb8 <PyFloat_FromString@plt+0xb228>  // b.none
   11c58:	mov	x1, x19
   11c5c:	bl	69c0 <PyType_IsSubtype@plt>
   11c60:	cbnz	w0, 11cb8 <PyFloat_FromString@plt+0xb228>
   11c64:	ldr	x2, [x22, #8]
   11c68:	ldr	x0, [x2, #168]
   11c6c:	tbnz	w0, #24, 11d74 <PyFloat_FromString@plt+0xb2e4>
   11c70:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11c74:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11c78:	ldr	x2, [x2, #24]
   11c7c:	add	x1, x1, #0xb70
   11c80:	ldr	x0, [x0, #3936]
   11c84:	ldr	x0, [x0]
   11c88:	bl	6a10 <PyErr_Format@plt>
   11c8c:	ldr	x0, [x20]
   11c90:	sub	x0, x0, #0x1
   11c94:	str	x0, [x20]
   11c98:	cbz	x0, 11e04 <PyFloat_FromString@plt+0xb374>
   11c9c:	ldr	x23, [sp, #48]
   11ca0:	mov	x19, #0x0                   	// #0
   11ca4:	mov	x0, x19
   11ca8:	ldp	x19, x20, [sp, #16]
   11cac:	ldp	x21, x22, [sp, #32]
   11cb0:	ldp	x29, x30, [sp], #96
   11cb4:	ret
   11cb8:	ldr	x0, [x22]
   11cbc:	add	x0, x0, #0x1
   11cc0:	str	x0, [x22]
   11cc4:	add	x0, x23, #0x328
   11cc8:	add	x0, x0, #0x1a0
   11ccc:	bl	6950 <_PyObject_New@plt>
   11cd0:	mov	x19, x0
   11cd4:	cbz	x0, 11db0 <PyFloat_FromString@plt+0xb320>
   11cd8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   11cdc:	mov	x2, #0xffffffffffffffff    	// #-1
   11ce0:	mov	w1, #0x30                  	// #48
   11ce4:	str	x2, [x19, #16]
   11ce8:	ldr	q0, [x0, #2128]
   11cec:	add	x0, x19, #0x48
   11cf0:	strb	w1, [x19, #24]
   11cf4:	add	x3, sp, #0x4c
   11cf8:	stp	xzr, xzr, [x19, #32]
   11cfc:	add	x1, x20, #0x18
   11d00:	add	x2, x22, #0x18
   11d04:	str	x0, [x19, #64]
   11d08:	add	x0, x19, #0x18
   11d0c:	str	q0, [x19, #48]
   11d10:	bl	2d978 <PyInit__decimal@@Base+0x11738>
   11d14:	ldr	x0, [x20]
   11d18:	sub	x0, x0, #0x1
   11d1c:	str	x0, [x20]
   11d20:	cbz	x0, 11d5c <PyFloat_FromString@plt+0xb2cc>
   11d24:	ldr	x0, [x22]
   11d28:	sub	x0, x0, #0x1
   11d2c:	str	x0, [x22]
   11d30:	cbz	x0, 11d68 <PyFloat_FromString@plt+0xb2d8>
   11d34:	ldr	w1, [sp, #76]
   11d38:	mov	x0, x21
   11d3c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   11d40:	cbnz	w0, 11de0 <PyFloat_FromString@plt+0xb350>
   11d44:	mov	x0, x19
   11d48:	ldp	x19, x20, [sp, #16]
   11d4c:	ldp	x21, x22, [sp, #32]
   11d50:	ldr	x23, [sp, #48]
   11d54:	ldp	x29, x30, [sp], #96
   11d58:	ret
   11d5c:	mov	x0, x20
   11d60:	bl	65d0 <_Py_Dealloc@plt>
   11d64:	b	11d24 <PyFloat_FromString@plt+0xb294>
   11d68:	mov	x0, x22
   11d6c:	bl	65d0 <_Py_Dealloc@plt>
   11d70:	b	11d34 <PyFloat_FromString@plt+0xb2a4>
   11d74:	mov	x1, x22
   11d78:	mov	x0, x19
   11d7c:	mov	x2, x21
   11d80:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   11d84:	mov	x22, x0
   11d88:	cbnz	x0, 11cc4 <PyFloat_FromString@plt+0xb234>
   11d8c:	b	11c8c <PyFloat_FromString@plt+0xb1fc>
   11d90:	mov	x1, x20
   11d94:	mov	x0, x19
   11d98:	mov	x2, x21
   11d9c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   11da0:	mov	x20, x0
   11da4:	cbnz	x0, 11c40 <PyFloat_FromString@plt+0xb1b0>
   11da8:	ldr	x23, [sp, #48]
   11dac:	b	11ca0 <PyFloat_FromString@plt+0xb210>
   11db0:	ldr	x0, [x20]
   11db4:	sub	x0, x0, #0x1
   11db8:	str	x0, [x20]
   11dbc:	cbz	x0, 11e18 <PyFloat_FromString@plt+0xb388>
   11dc0:	ldr	x0, [x22]
   11dc4:	sub	x0, x0, #0x1
   11dc8:	str	x0, [x22]
   11dcc:	cbnz	x0, 11c9c <PyFloat_FromString@plt+0xb20c>
   11dd0:	mov	x0, x22
   11dd4:	bl	65d0 <_Py_Dealloc@plt>
   11dd8:	ldr	x23, [sp, #48]
   11ddc:	b	11c20 <PyFloat_FromString@plt+0xb190>
   11de0:	ldr	x0, [x19]
   11de4:	sub	x0, x0, #0x1
   11de8:	str	x0, [x19]
   11dec:	cbnz	x0, 11c9c <PyFloat_FromString@plt+0xb20c>
   11df0:	mov	x0, x19
   11df4:	mov	x19, #0x0                   	// #0
   11df8:	bl	65d0 <_Py_Dealloc@plt>
   11dfc:	ldr	x23, [sp, #48]
   11e00:	b	11c20 <PyFloat_FromString@plt+0xb190>
   11e04:	mov	x0, x20
   11e08:	mov	x19, #0x0                   	// #0
   11e0c:	bl	65d0 <_Py_Dealloc@plt>
   11e10:	ldr	x23, [sp, #48]
   11e14:	b	11c20 <PyFloat_FromString@plt+0xb190>
   11e18:	mov	x0, x20
   11e1c:	bl	65d0 <_Py_Dealloc@plt>
   11e20:	b	11dc0 <PyFloat_FromString@plt+0xb330>
   11e24:	nop
   11e28:	stp	x29, x30, [sp, #-96]!
   11e2c:	mov	x29, sp
   11e30:	add	x3, sp, #0x58
   11e34:	add	x2, sp, #0x50
   11e38:	stp	x19, x20, [sp, #16]
   11e3c:	stp	x21, x22, [sp, #32]
   11e40:	mov	x21, x0
   11e44:	mov	x0, x1
   11e48:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11e4c:	add	x1, x1, #0xdc0
   11e50:	str	wzr, [sp, #76]
   11e54:	bl	68e0 <PyArg_ParseTuple@plt>
   11e58:	cbz	w0, 11f38 <PyFloat_FromString@plt+0xb4a8>
   11e5c:	ldr	x20, [sp, #80]
   11e60:	ldr	x0, [x20, #8]
   11e64:	str	x23, [sp, #48]
   11e68:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   11e6c:	add	x19, x23, #0x328
   11e70:	add	x19, x19, #0x1a0
   11e74:	cmp	x0, x19
   11e78:	b.eq	11ecc <PyFloat_FromString@plt+0xb43c>  // b.none
   11e7c:	mov	x1, x19
   11e80:	bl	69c0 <PyType_IsSubtype@plt>
   11e84:	cbnz	w0, 11ecc <PyFloat_FromString@plt+0xb43c>
   11e88:	ldr	x2, [x20, #8]
   11e8c:	ldr	x0, [x2, #168]
   11e90:	tbnz	w0, #24, 1202c <PyFloat_FromString@plt+0xb59c>
   11e94:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11e98:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11e9c:	ldr	x2, [x2, #24]
   11ea0:	add	x1, x1, #0xb70
   11ea4:	ldr	x0, [x0, #3936]
   11ea8:	mov	x19, #0x0                   	// #0
   11eac:	ldr	x0, [x0]
   11eb0:	bl	6a10 <PyErr_Format@plt>
   11eb4:	ldr	x23, [sp, #48]
   11eb8:	mov	x0, x19
   11ebc:	ldp	x19, x20, [sp, #16]
   11ec0:	ldp	x21, x22, [sp, #32]
   11ec4:	ldp	x29, x30, [sp], #96
   11ec8:	ret
   11ecc:	ldr	x0, [x20]
   11ed0:	add	x0, x0, #0x1
   11ed4:	str	x0, [x20]
   11ed8:	ldr	x22, [sp, #88]
   11edc:	add	x19, x23, #0x328
   11ee0:	add	x19, x19, #0x1a0
   11ee4:	ldr	x0, [x22, #8]
   11ee8:	cmp	x0, x19
   11eec:	b.eq	11f50 <PyFloat_FromString@plt+0xb4c0>  // b.none
   11ef0:	mov	x1, x19
   11ef4:	bl	69c0 <PyType_IsSubtype@plt>
   11ef8:	cbnz	w0, 11f50 <PyFloat_FromString@plt+0xb4c0>
   11efc:	ldr	x2, [x22, #8]
   11f00:	ldr	x0, [x2, #168]
   11f04:	tbnz	w0, #24, 12010 <PyFloat_FromString@plt+0xb580>
   11f08:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   11f0c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   11f10:	ldr	x2, [x2, #24]
   11f14:	add	x1, x1, #0xb70
   11f18:	ldr	x0, [x0, #3936]
   11f1c:	ldr	x0, [x0]
   11f20:	bl	6a10 <PyErr_Format@plt>
   11f24:	ldr	x0, [x20]
   11f28:	sub	x0, x0, #0x1
   11f2c:	str	x0, [x20]
   11f30:	cbz	x0, 120a0 <PyFloat_FromString@plt+0xb610>
   11f34:	ldr	x23, [sp, #48]
   11f38:	mov	x19, #0x0                   	// #0
   11f3c:	mov	x0, x19
   11f40:	ldp	x19, x20, [sp, #16]
   11f44:	ldp	x21, x22, [sp, #32]
   11f48:	ldp	x29, x30, [sp], #96
   11f4c:	ret
   11f50:	ldr	x0, [x22]
   11f54:	add	x0, x0, #0x1
   11f58:	str	x0, [x22]
   11f5c:	add	x0, x23, #0x328
   11f60:	add	x0, x0, #0x1a0
   11f64:	bl	6950 <_PyObject_New@plt>
   11f68:	mov	x19, x0
   11f6c:	cbz	x0, 1204c <PyFloat_FromString@plt+0xb5bc>
   11f70:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   11f74:	mov	x2, #0xffffffffffffffff    	// #-1
   11f78:	mov	w1, #0x30                  	// #48
   11f7c:	str	x2, [x19, #16]
   11f80:	ldr	q0, [x0, #2128]
   11f84:	add	x0, x19, #0x48
   11f88:	strb	w1, [x19, #24]
   11f8c:	add	x4, sp, #0x4c
   11f90:	stp	xzr, xzr, [x19, #32]
   11f94:	add	x3, x21, #0x10
   11f98:	add	x1, x20, #0x18
   11f9c:	str	x0, [x19, #64]
   11fa0:	add	x2, x22, #0x18
   11fa4:	add	x0, x19, #0x18
   11fa8:	str	q0, [x19, #48]
   11fac:	bl	32238 <PyInit__decimal@@Base+0x15ff8>
   11fb0:	ldr	x0, [x20]
   11fb4:	sub	x0, x0, #0x1
   11fb8:	str	x0, [x20]
   11fbc:	cbz	x0, 11ff8 <PyFloat_FromString@plt+0xb568>
   11fc0:	ldr	x0, [x22]
   11fc4:	sub	x0, x0, #0x1
   11fc8:	str	x0, [x22]
   11fcc:	cbz	x0, 12004 <PyFloat_FromString@plt+0xb574>
   11fd0:	ldr	w1, [sp, #76]
   11fd4:	mov	x0, x21
   11fd8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   11fdc:	cbnz	w0, 1207c <PyFloat_FromString@plt+0xb5ec>
   11fe0:	mov	x0, x19
   11fe4:	ldp	x19, x20, [sp, #16]
   11fe8:	ldp	x21, x22, [sp, #32]
   11fec:	ldr	x23, [sp, #48]
   11ff0:	ldp	x29, x30, [sp], #96
   11ff4:	ret
   11ff8:	mov	x0, x20
   11ffc:	bl	65d0 <_Py_Dealloc@plt>
   12000:	b	11fc0 <PyFloat_FromString@plt+0xb530>
   12004:	mov	x0, x22
   12008:	bl	65d0 <_Py_Dealloc@plt>
   1200c:	b	11fd0 <PyFloat_FromString@plt+0xb540>
   12010:	mov	x1, x22
   12014:	mov	x0, x19
   12018:	mov	x2, x21
   1201c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12020:	mov	x22, x0
   12024:	cbnz	x0, 11f5c <PyFloat_FromString@plt+0xb4cc>
   12028:	b	11f24 <PyFloat_FromString@plt+0xb494>
   1202c:	mov	x1, x20
   12030:	mov	x0, x19
   12034:	mov	x2, x21
   12038:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1203c:	mov	x20, x0
   12040:	cbnz	x0, 11ed8 <PyFloat_FromString@plt+0xb448>
   12044:	ldr	x23, [sp, #48]
   12048:	b	11f38 <PyFloat_FromString@plt+0xb4a8>
   1204c:	ldr	x0, [x20]
   12050:	sub	x0, x0, #0x1
   12054:	str	x0, [x20]
   12058:	cbz	x0, 120b4 <PyFloat_FromString@plt+0xb624>
   1205c:	ldr	x0, [x22]
   12060:	sub	x0, x0, #0x1
   12064:	str	x0, [x22]
   12068:	cbnz	x0, 11f34 <PyFloat_FromString@plt+0xb4a4>
   1206c:	mov	x0, x22
   12070:	bl	65d0 <_Py_Dealloc@plt>
   12074:	ldr	x23, [sp, #48]
   12078:	b	11eb8 <PyFloat_FromString@plt+0xb428>
   1207c:	ldr	x0, [x19]
   12080:	sub	x0, x0, #0x1
   12084:	str	x0, [x19]
   12088:	cbnz	x0, 11f34 <PyFloat_FromString@plt+0xb4a4>
   1208c:	mov	x0, x19
   12090:	mov	x19, #0x0                   	// #0
   12094:	bl	65d0 <_Py_Dealloc@plt>
   12098:	ldr	x23, [sp, #48]
   1209c:	b	11eb8 <PyFloat_FromString@plt+0xb428>
   120a0:	mov	x0, x20
   120a4:	mov	x19, #0x0                   	// #0
   120a8:	bl	65d0 <_Py_Dealloc@plt>
   120ac:	ldr	x23, [sp, #48]
   120b0:	b	11eb8 <PyFloat_FromString@plt+0xb428>
   120b4:	mov	x0, x20
   120b8:	bl	65d0 <_Py_Dealloc@plt>
   120bc:	b	1205c <PyFloat_FromString@plt+0xb5cc>
   120c0:	stp	x29, x30, [sp, #-96]!
   120c4:	mov	x29, sp
   120c8:	add	x3, sp, #0x58
   120cc:	add	x2, sp, #0x50
   120d0:	stp	x19, x20, [sp, #16]
   120d4:	stp	x21, x22, [sp, #32]
   120d8:	mov	x21, x0
   120dc:	mov	x0, x1
   120e0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   120e4:	add	x1, x1, #0xdc0
   120e8:	str	wzr, [sp, #76]
   120ec:	bl	68e0 <PyArg_ParseTuple@plt>
   120f0:	cbz	w0, 121d0 <PyFloat_FromString@plt+0xb740>
   120f4:	ldr	x20, [sp, #80]
   120f8:	ldr	x0, [x20, #8]
   120fc:	str	x23, [sp, #48]
   12100:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   12104:	add	x19, x23, #0x328
   12108:	add	x19, x19, #0x1a0
   1210c:	cmp	x0, x19
   12110:	b.eq	12164 <PyFloat_FromString@plt+0xb6d4>  // b.none
   12114:	mov	x1, x19
   12118:	bl	69c0 <PyType_IsSubtype@plt>
   1211c:	cbnz	w0, 12164 <PyFloat_FromString@plt+0xb6d4>
   12120:	ldr	x2, [x20, #8]
   12124:	ldr	x0, [x2, #168]
   12128:	tbnz	w0, #24, 122c4 <PyFloat_FromString@plt+0xb834>
   1212c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   12130:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12134:	ldr	x2, [x2, #24]
   12138:	add	x1, x1, #0xb70
   1213c:	ldr	x0, [x0, #3936]
   12140:	mov	x19, #0x0                   	// #0
   12144:	ldr	x0, [x0]
   12148:	bl	6a10 <PyErr_Format@plt>
   1214c:	ldr	x23, [sp, #48]
   12150:	mov	x0, x19
   12154:	ldp	x19, x20, [sp, #16]
   12158:	ldp	x21, x22, [sp, #32]
   1215c:	ldp	x29, x30, [sp], #96
   12160:	ret
   12164:	ldr	x0, [x20]
   12168:	add	x0, x0, #0x1
   1216c:	str	x0, [x20]
   12170:	ldr	x22, [sp, #88]
   12174:	add	x19, x23, #0x328
   12178:	add	x19, x19, #0x1a0
   1217c:	ldr	x0, [x22, #8]
   12180:	cmp	x0, x19
   12184:	b.eq	121e8 <PyFloat_FromString@plt+0xb758>  // b.none
   12188:	mov	x1, x19
   1218c:	bl	69c0 <PyType_IsSubtype@plt>
   12190:	cbnz	w0, 121e8 <PyFloat_FromString@plt+0xb758>
   12194:	ldr	x2, [x22, #8]
   12198:	ldr	x0, [x2, #168]
   1219c:	tbnz	w0, #24, 122a8 <PyFloat_FromString@plt+0xb818>
   121a0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   121a4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   121a8:	ldr	x2, [x2, #24]
   121ac:	add	x1, x1, #0xb70
   121b0:	ldr	x0, [x0, #3936]
   121b4:	ldr	x0, [x0]
   121b8:	bl	6a10 <PyErr_Format@plt>
   121bc:	ldr	x0, [x20]
   121c0:	sub	x0, x0, #0x1
   121c4:	str	x0, [x20]
   121c8:	cbz	x0, 12338 <PyFloat_FromString@plt+0xb8a8>
   121cc:	ldr	x23, [sp, #48]
   121d0:	mov	x19, #0x0                   	// #0
   121d4:	mov	x0, x19
   121d8:	ldp	x19, x20, [sp, #16]
   121dc:	ldp	x21, x22, [sp, #32]
   121e0:	ldp	x29, x30, [sp], #96
   121e4:	ret
   121e8:	ldr	x0, [x22]
   121ec:	add	x0, x0, #0x1
   121f0:	str	x0, [x22]
   121f4:	add	x0, x23, #0x328
   121f8:	add	x0, x0, #0x1a0
   121fc:	bl	6950 <_PyObject_New@plt>
   12200:	mov	x19, x0
   12204:	cbz	x0, 122e4 <PyFloat_FromString@plt+0xb854>
   12208:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1220c:	mov	x2, #0xffffffffffffffff    	// #-1
   12210:	mov	w1, #0x30                  	// #48
   12214:	str	x2, [x19, #16]
   12218:	ldr	q0, [x0, #2128]
   1221c:	add	x0, x19, #0x48
   12220:	strb	w1, [x19, #24]
   12224:	add	x4, sp, #0x4c
   12228:	stp	xzr, xzr, [x19, #32]
   1222c:	add	x3, x21, #0x10
   12230:	add	x1, x20, #0x18
   12234:	str	x0, [x19, #64]
   12238:	add	x2, x22, #0x18
   1223c:	add	x0, x19, #0x18
   12240:	str	q0, [x19, #48]
   12244:	bl	32c88 <PyInit__decimal@@Base+0x16a48>
   12248:	ldr	x0, [x20]
   1224c:	sub	x0, x0, #0x1
   12250:	str	x0, [x20]
   12254:	cbz	x0, 12290 <PyFloat_FromString@plt+0xb800>
   12258:	ldr	x0, [x22]
   1225c:	sub	x0, x0, #0x1
   12260:	str	x0, [x22]
   12264:	cbz	x0, 1229c <PyFloat_FromString@plt+0xb80c>
   12268:	ldr	w1, [sp, #76]
   1226c:	mov	x0, x21
   12270:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   12274:	cbnz	w0, 12314 <PyFloat_FromString@plt+0xb884>
   12278:	mov	x0, x19
   1227c:	ldp	x19, x20, [sp, #16]
   12280:	ldp	x21, x22, [sp, #32]
   12284:	ldr	x23, [sp, #48]
   12288:	ldp	x29, x30, [sp], #96
   1228c:	ret
   12290:	mov	x0, x20
   12294:	bl	65d0 <_Py_Dealloc@plt>
   12298:	b	12258 <PyFloat_FromString@plt+0xb7c8>
   1229c:	mov	x0, x22
   122a0:	bl	65d0 <_Py_Dealloc@plt>
   122a4:	b	12268 <PyFloat_FromString@plt+0xb7d8>
   122a8:	mov	x1, x22
   122ac:	mov	x0, x19
   122b0:	mov	x2, x21
   122b4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   122b8:	mov	x22, x0
   122bc:	cbnz	x0, 121f4 <PyFloat_FromString@plt+0xb764>
   122c0:	b	121bc <PyFloat_FromString@plt+0xb72c>
   122c4:	mov	x1, x20
   122c8:	mov	x0, x19
   122cc:	mov	x2, x21
   122d0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   122d4:	mov	x20, x0
   122d8:	cbnz	x0, 12170 <PyFloat_FromString@plt+0xb6e0>
   122dc:	ldr	x23, [sp, #48]
   122e0:	b	121d0 <PyFloat_FromString@plt+0xb740>
   122e4:	ldr	x0, [x20]
   122e8:	sub	x0, x0, #0x1
   122ec:	str	x0, [x20]
   122f0:	cbz	x0, 1234c <PyFloat_FromString@plt+0xb8bc>
   122f4:	ldr	x0, [x22]
   122f8:	sub	x0, x0, #0x1
   122fc:	str	x0, [x22]
   12300:	cbnz	x0, 121cc <PyFloat_FromString@plt+0xb73c>
   12304:	mov	x0, x22
   12308:	bl	65d0 <_Py_Dealloc@plt>
   1230c:	ldr	x23, [sp, #48]
   12310:	b	12150 <PyFloat_FromString@plt+0xb6c0>
   12314:	ldr	x0, [x19]
   12318:	sub	x0, x0, #0x1
   1231c:	str	x0, [x19]
   12320:	cbnz	x0, 121cc <PyFloat_FromString@plt+0xb73c>
   12324:	mov	x0, x19
   12328:	mov	x19, #0x0                   	// #0
   1232c:	bl	65d0 <_Py_Dealloc@plt>
   12330:	ldr	x23, [sp, #48]
   12334:	b	12150 <PyFloat_FromString@plt+0xb6c0>
   12338:	mov	x0, x20
   1233c:	mov	x19, #0x0                   	// #0
   12340:	bl	65d0 <_Py_Dealloc@plt>
   12344:	ldr	x23, [sp, #48]
   12348:	b	12150 <PyFloat_FromString@plt+0xb6c0>
   1234c:	mov	x0, x20
   12350:	bl	65d0 <_Py_Dealloc@plt>
   12354:	b	122f4 <PyFloat_FromString@plt+0xb864>
   12358:	stp	x29, x30, [sp, #-96]!
   1235c:	mov	x29, sp
   12360:	add	x3, sp, #0x58
   12364:	add	x2, sp, #0x50
   12368:	stp	x19, x20, [sp, #16]
   1236c:	stp	x21, x22, [sp, #32]
   12370:	mov	x21, x0
   12374:	mov	x0, x1
   12378:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1237c:	add	x1, x1, #0xdc0
   12380:	str	wzr, [sp, #76]
   12384:	bl	68e0 <PyArg_ParseTuple@plt>
   12388:	cbz	w0, 12468 <PyFloat_FromString@plt+0xb9d8>
   1238c:	ldr	x20, [sp, #80]
   12390:	ldr	x0, [x20, #8]
   12394:	str	x23, [sp, #48]
   12398:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1239c:	add	x19, x23, #0x328
   123a0:	add	x19, x19, #0x1a0
   123a4:	cmp	x0, x19
   123a8:	b.eq	123fc <PyFloat_FromString@plt+0xb96c>  // b.none
   123ac:	mov	x1, x19
   123b0:	bl	69c0 <PyType_IsSubtype@plt>
   123b4:	cbnz	w0, 123fc <PyFloat_FromString@plt+0xb96c>
   123b8:	ldr	x2, [x20, #8]
   123bc:	ldr	x0, [x2, #168]
   123c0:	tbnz	w0, #24, 1255c <PyFloat_FromString@plt+0xbacc>
   123c4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   123c8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   123cc:	ldr	x2, [x2, #24]
   123d0:	add	x1, x1, #0xb70
   123d4:	ldr	x0, [x0, #3936]
   123d8:	mov	x19, #0x0                   	// #0
   123dc:	ldr	x0, [x0]
   123e0:	bl	6a10 <PyErr_Format@plt>
   123e4:	ldr	x23, [sp, #48]
   123e8:	mov	x0, x19
   123ec:	ldp	x19, x20, [sp, #16]
   123f0:	ldp	x21, x22, [sp, #32]
   123f4:	ldp	x29, x30, [sp], #96
   123f8:	ret
   123fc:	ldr	x0, [x20]
   12400:	add	x0, x0, #0x1
   12404:	str	x0, [x20]
   12408:	ldr	x22, [sp, #88]
   1240c:	add	x19, x23, #0x328
   12410:	add	x19, x19, #0x1a0
   12414:	ldr	x0, [x22, #8]
   12418:	cmp	x0, x19
   1241c:	b.eq	12480 <PyFloat_FromString@plt+0xb9f0>  // b.none
   12420:	mov	x1, x19
   12424:	bl	69c0 <PyType_IsSubtype@plt>
   12428:	cbnz	w0, 12480 <PyFloat_FromString@plt+0xb9f0>
   1242c:	ldr	x2, [x22, #8]
   12430:	ldr	x0, [x2, #168]
   12434:	tbnz	w0, #24, 12540 <PyFloat_FromString@plt+0xbab0>
   12438:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1243c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12440:	ldr	x2, [x2, #24]
   12444:	add	x1, x1, #0xb70
   12448:	ldr	x0, [x0, #3936]
   1244c:	ldr	x0, [x0]
   12450:	bl	6a10 <PyErr_Format@plt>
   12454:	ldr	x0, [x20]
   12458:	sub	x0, x0, #0x1
   1245c:	str	x0, [x20]
   12460:	cbz	x0, 125d0 <PyFloat_FromString@plt+0xbb40>
   12464:	ldr	x23, [sp, #48]
   12468:	mov	x19, #0x0                   	// #0
   1246c:	mov	x0, x19
   12470:	ldp	x19, x20, [sp, #16]
   12474:	ldp	x21, x22, [sp, #32]
   12478:	ldp	x29, x30, [sp], #96
   1247c:	ret
   12480:	ldr	x0, [x22]
   12484:	add	x0, x0, #0x1
   12488:	str	x0, [x22]
   1248c:	add	x0, x23, #0x328
   12490:	add	x0, x0, #0x1a0
   12494:	bl	6950 <_PyObject_New@plt>
   12498:	mov	x19, x0
   1249c:	cbz	x0, 1257c <PyFloat_FromString@plt+0xbaec>
   124a0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   124a4:	mov	x2, #0xffffffffffffffff    	// #-1
   124a8:	mov	w1, #0x30                  	// #48
   124ac:	str	x2, [x19, #16]
   124b0:	ldr	q0, [x0, #2128]
   124b4:	add	x0, x19, #0x48
   124b8:	strb	w1, [x19, #24]
   124bc:	add	x4, sp, #0x4c
   124c0:	stp	xzr, xzr, [x19, #32]
   124c4:	add	x3, x21, #0x10
   124c8:	add	x1, x20, #0x18
   124cc:	str	x0, [x19, #64]
   124d0:	add	x2, x22, #0x18
   124d4:	add	x0, x19, #0x18
   124d8:	str	q0, [x19, #48]
   124dc:	bl	33448 <PyInit__decimal@@Base+0x17208>
   124e0:	ldr	x0, [x20]
   124e4:	sub	x0, x0, #0x1
   124e8:	str	x0, [x20]
   124ec:	cbz	x0, 12528 <PyFloat_FromString@plt+0xba98>
   124f0:	ldr	x0, [x22]
   124f4:	sub	x0, x0, #0x1
   124f8:	str	x0, [x22]
   124fc:	cbz	x0, 12534 <PyFloat_FromString@plt+0xbaa4>
   12500:	ldr	w1, [sp, #76]
   12504:	mov	x0, x21
   12508:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1250c:	cbnz	w0, 125ac <PyFloat_FromString@plt+0xbb1c>
   12510:	mov	x0, x19
   12514:	ldp	x19, x20, [sp, #16]
   12518:	ldp	x21, x22, [sp, #32]
   1251c:	ldr	x23, [sp, #48]
   12520:	ldp	x29, x30, [sp], #96
   12524:	ret
   12528:	mov	x0, x20
   1252c:	bl	65d0 <_Py_Dealloc@plt>
   12530:	b	124f0 <PyFloat_FromString@plt+0xba60>
   12534:	mov	x0, x22
   12538:	bl	65d0 <_Py_Dealloc@plt>
   1253c:	b	12500 <PyFloat_FromString@plt+0xba70>
   12540:	mov	x1, x22
   12544:	mov	x0, x19
   12548:	mov	x2, x21
   1254c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12550:	mov	x22, x0
   12554:	cbnz	x0, 1248c <PyFloat_FromString@plt+0xb9fc>
   12558:	b	12454 <PyFloat_FromString@plt+0xb9c4>
   1255c:	mov	x1, x20
   12560:	mov	x0, x19
   12564:	mov	x2, x21
   12568:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1256c:	mov	x20, x0
   12570:	cbnz	x0, 12408 <PyFloat_FromString@plt+0xb978>
   12574:	ldr	x23, [sp, #48]
   12578:	b	12468 <PyFloat_FromString@plt+0xb9d8>
   1257c:	ldr	x0, [x20]
   12580:	sub	x0, x0, #0x1
   12584:	str	x0, [x20]
   12588:	cbz	x0, 125e4 <PyFloat_FromString@plt+0xbb54>
   1258c:	ldr	x0, [x22]
   12590:	sub	x0, x0, #0x1
   12594:	str	x0, [x22]
   12598:	cbnz	x0, 12464 <PyFloat_FromString@plt+0xb9d4>
   1259c:	mov	x0, x22
   125a0:	bl	65d0 <_Py_Dealloc@plt>
   125a4:	ldr	x23, [sp, #48]
   125a8:	b	123e8 <PyFloat_FromString@plt+0xb958>
   125ac:	ldr	x0, [x19]
   125b0:	sub	x0, x0, #0x1
   125b4:	str	x0, [x19]
   125b8:	cbnz	x0, 12464 <PyFloat_FromString@plt+0xb9d4>
   125bc:	mov	x0, x19
   125c0:	mov	x19, #0x0                   	// #0
   125c4:	bl	65d0 <_Py_Dealloc@plt>
   125c8:	ldr	x23, [sp, #48]
   125cc:	b	123e8 <PyFloat_FromString@plt+0xb958>
   125d0:	mov	x0, x20
   125d4:	mov	x19, #0x0                   	// #0
   125d8:	bl	65d0 <_Py_Dealloc@plt>
   125dc:	ldr	x23, [sp, #48]
   125e0:	b	123e8 <PyFloat_FromString@plt+0xb958>
   125e4:	mov	x0, x20
   125e8:	bl	65d0 <_Py_Dealloc@plt>
   125ec:	b	1258c <PyFloat_FromString@plt+0xbafc>
   125f0:	stp	x29, x30, [sp, #-96]!
   125f4:	mov	x29, sp
   125f8:	add	x3, sp, #0x58
   125fc:	add	x2, sp, #0x50
   12600:	stp	x19, x20, [sp, #16]
   12604:	stp	x21, x22, [sp, #32]
   12608:	mov	x21, x0
   1260c:	mov	x0, x1
   12610:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12614:	add	x1, x1, #0xdc0
   12618:	str	wzr, [sp, #76]
   1261c:	bl	68e0 <PyArg_ParseTuple@plt>
   12620:	cbz	w0, 12700 <PyFloat_FromString@plt+0xbc70>
   12624:	ldr	x20, [sp, #80]
   12628:	ldr	x0, [x20, #8]
   1262c:	str	x23, [sp, #48]
   12630:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   12634:	add	x19, x23, #0x328
   12638:	add	x19, x19, #0x1a0
   1263c:	cmp	x0, x19
   12640:	b.eq	12694 <PyFloat_FromString@plt+0xbc04>  // b.none
   12644:	mov	x1, x19
   12648:	bl	69c0 <PyType_IsSubtype@plt>
   1264c:	cbnz	w0, 12694 <PyFloat_FromString@plt+0xbc04>
   12650:	ldr	x2, [x20, #8]
   12654:	ldr	x0, [x2, #168]
   12658:	tbnz	w0, #24, 127f4 <PyFloat_FromString@plt+0xbd64>
   1265c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   12660:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12664:	ldr	x2, [x2, #24]
   12668:	add	x1, x1, #0xb70
   1266c:	ldr	x0, [x0, #3936]
   12670:	mov	x19, #0x0                   	// #0
   12674:	ldr	x0, [x0]
   12678:	bl	6a10 <PyErr_Format@plt>
   1267c:	ldr	x23, [sp, #48]
   12680:	mov	x0, x19
   12684:	ldp	x19, x20, [sp, #16]
   12688:	ldp	x21, x22, [sp, #32]
   1268c:	ldp	x29, x30, [sp], #96
   12690:	ret
   12694:	ldr	x0, [x20]
   12698:	add	x0, x0, #0x1
   1269c:	str	x0, [x20]
   126a0:	ldr	x22, [sp, #88]
   126a4:	add	x19, x23, #0x328
   126a8:	add	x19, x19, #0x1a0
   126ac:	ldr	x0, [x22, #8]
   126b0:	cmp	x0, x19
   126b4:	b.eq	12718 <PyFloat_FromString@plt+0xbc88>  // b.none
   126b8:	mov	x1, x19
   126bc:	bl	69c0 <PyType_IsSubtype@plt>
   126c0:	cbnz	w0, 12718 <PyFloat_FromString@plt+0xbc88>
   126c4:	ldr	x2, [x22, #8]
   126c8:	ldr	x0, [x2, #168]
   126cc:	tbnz	w0, #24, 127d8 <PyFloat_FromString@plt+0xbd48>
   126d0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   126d4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   126d8:	ldr	x2, [x2, #24]
   126dc:	add	x1, x1, #0xb70
   126e0:	ldr	x0, [x0, #3936]
   126e4:	ldr	x0, [x0]
   126e8:	bl	6a10 <PyErr_Format@plt>
   126ec:	ldr	x0, [x20]
   126f0:	sub	x0, x0, #0x1
   126f4:	str	x0, [x20]
   126f8:	cbz	x0, 12868 <PyFloat_FromString@plt+0xbdd8>
   126fc:	ldr	x23, [sp, #48]
   12700:	mov	x19, #0x0                   	// #0
   12704:	mov	x0, x19
   12708:	ldp	x19, x20, [sp, #16]
   1270c:	ldp	x21, x22, [sp, #32]
   12710:	ldp	x29, x30, [sp], #96
   12714:	ret
   12718:	ldr	x0, [x22]
   1271c:	add	x0, x0, #0x1
   12720:	str	x0, [x22]
   12724:	add	x0, x23, #0x328
   12728:	add	x0, x0, #0x1a0
   1272c:	bl	6950 <_PyObject_New@plt>
   12730:	mov	x19, x0
   12734:	cbz	x0, 12814 <PyFloat_FromString@plt+0xbd84>
   12738:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1273c:	mov	x2, #0xffffffffffffffff    	// #-1
   12740:	mov	w1, #0x30                  	// #48
   12744:	str	x2, [x19, #16]
   12748:	ldr	q0, [x0, #2128]
   1274c:	add	x0, x19, #0x48
   12750:	strb	w1, [x19, #24]
   12754:	add	x4, sp, #0x4c
   12758:	stp	xzr, xzr, [x19, #32]
   1275c:	add	x3, x21, #0x10
   12760:	add	x1, x20, #0x18
   12764:	str	x0, [x19, #64]
   12768:	add	x2, x22, #0x18
   1276c:	add	x0, x19, #0x18
   12770:	str	q0, [x19, #48]
   12774:	bl	3afe0 <PyInit__decimal@@Base+0x1eda0>
   12778:	ldr	x0, [x20]
   1277c:	sub	x0, x0, #0x1
   12780:	str	x0, [x20]
   12784:	cbz	x0, 127c0 <PyFloat_FromString@plt+0xbd30>
   12788:	ldr	x0, [x22]
   1278c:	sub	x0, x0, #0x1
   12790:	str	x0, [x22]
   12794:	cbz	x0, 127cc <PyFloat_FromString@plt+0xbd3c>
   12798:	ldr	w1, [sp, #76]
   1279c:	mov	x0, x21
   127a0:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   127a4:	cbnz	w0, 12844 <PyFloat_FromString@plt+0xbdb4>
   127a8:	mov	x0, x19
   127ac:	ldp	x19, x20, [sp, #16]
   127b0:	ldp	x21, x22, [sp, #32]
   127b4:	ldr	x23, [sp, #48]
   127b8:	ldp	x29, x30, [sp], #96
   127bc:	ret
   127c0:	mov	x0, x20
   127c4:	bl	65d0 <_Py_Dealloc@plt>
   127c8:	b	12788 <PyFloat_FromString@plt+0xbcf8>
   127cc:	mov	x0, x22
   127d0:	bl	65d0 <_Py_Dealloc@plt>
   127d4:	b	12798 <PyFloat_FromString@plt+0xbd08>
   127d8:	mov	x1, x22
   127dc:	mov	x0, x19
   127e0:	mov	x2, x21
   127e4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   127e8:	mov	x22, x0
   127ec:	cbnz	x0, 12724 <PyFloat_FromString@plt+0xbc94>
   127f0:	b	126ec <PyFloat_FromString@plt+0xbc5c>
   127f4:	mov	x1, x20
   127f8:	mov	x0, x19
   127fc:	mov	x2, x21
   12800:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12804:	mov	x20, x0
   12808:	cbnz	x0, 126a0 <PyFloat_FromString@plt+0xbc10>
   1280c:	ldr	x23, [sp, #48]
   12810:	b	12700 <PyFloat_FromString@plt+0xbc70>
   12814:	ldr	x0, [x20]
   12818:	sub	x0, x0, #0x1
   1281c:	str	x0, [x20]
   12820:	cbz	x0, 1287c <PyFloat_FromString@plt+0xbdec>
   12824:	ldr	x0, [x22]
   12828:	sub	x0, x0, #0x1
   1282c:	str	x0, [x22]
   12830:	cbnz	x0, 126fc <PyFloat_FromString@plt+0xbc6c>
   12834:	mov	x0, x22
   12838:	bl	65d0 <_Py_Dealloc@plt>
   1283c:	ldr	x23, [sp, #48]
   12840:	b	12680 <PyFloat_FromString@plt+0xbbf0>
   12844:	ldr	x0, [x19]
   12848:	sub	x0, x0, #0x1
   1284c:	str	x0, [x19]
   12850:	cbnz	x0, 126fc <PyFloat_FromString@plt+0xbc6c>
   12854:	mov	x0, x19
   12858:	mov	x19, #0x0                   	// #0
   1285c:	bl	65d0 <_Py_Dealloc@plt>
   12860:	ldr	x23, [sp, #48]
   12864:	b	12680 <PyFloat_FromString@plt+0xbbf0>
   12868:	mov	x0, x20
   1286c:	mov	x19, #0x0                   	// #0
   12870:	bl	65d0 <_Py_Dealloc@plt>
   12874:	ldr	x23, [sp, #48]
   12878:	b	12680 <PyFloat_FromString@plt+0xbbf0>
   1287c:	mov	x0, x20
   12880:	bl	65d0 <_Py_Dealloc@plt>
   12884:	b	12824 <PyFloat_FromString@plt+0xbd94>
   12888:	stp	x29, x30, [sp, #-96]!
   1288c:	mov	x29, sp
   12890:	add	x3, sp, #0x58
   12894:	add	x2, sp, #0x50
   12898:	stp	x19, x20, [sp, #16]
   1289c:	stp	x21, x22, [sp, #32]
   128a0:	mov	x21, x0
   128a4:	mov	x0, x1
   128a8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   128ac:	add	x1, x1, #0xdc0
   128b0:	str	wzr, [sp, #76]
   128b4:	bl	68e0 <PyArg_ParseTuple@plt>
   128b8:	cbz	w0, 12998 <PyFloat_FromString@plt+0xbf08>
   128bc:	ldr	x20, [sp, #80]
   128c0:	ldr	x0, [x20, #8]
   128c4:	str	x23, [sp, #48]
   128c8:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   128cc:	add	x19, x23, #0x328
   128d0:	add	x19, x19, #0x1a0
   128d4:	cmp	x0, x19
   128d8:	b.eq	1292c <PyFloat_FromString@plt+0xbe9c>  // b.none
   128dc:	mov	x1, x19
   128e0:	bl	69c0 <PyType_IsSubtype@plt>
   128e4:	cbnz	w0, 1292c <PyFloat_FromString@plt+0xbe9c>
   128e8:	ldr	x2, [x20, #8]
   128ec:	ldr	x0, [x2, #168]
   128f0:	tbnz	w0, #24, 12a8c <PyFloat_FromString@plt+0xbffc>
   128f4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   128f8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   128fc:	ldr	x2, [x2, #24]
   12900:	add	x1, x1, #0xb70
   12904:	ldr	x0, [x0, #3936]
   12908:	mov	x19, #0x0                   	// #0
   1290c:	ldr	x0, [x0]
   12910:	bl	6a10 <PyErr_Format@plt>
   12914:	ldr	x23, [sp, #48]
   12918:	mov	x0, x19
   1291c:	ldp	x19, x20, [sp, #16]
   12920:	ldp	x21, x22, [sp, #32]
   12924:	ldp	x29, x30, [sp], #96
   12928:	ret
   1292c:	ldr	x0, [x20]
   12930:	add	x0, x0, #0x1
   12934:	str	x0, [x20]
   12938:	ldr	x22, [sp, #88]
   1293c:	add	x19, x23, #0x328
   12940:	add	x19, x19, #0x1a0
   12944:	ldr	x0, [x22, #8]
   12948:	cmp	x0, x19
   1294c:	b.eq	129b0 <PyFloat_FromString@plt+0xbf20>  // b.none
   12950:	mov	x1, x19
   12954:	bl	69c0 <PyType_IsSubtype@plt>
   12958:	cbnz	w0, 129b0 <PyFloat_FromString@plt+0xbf20>
   1295c:	ldr	x2, [x22, #8]
   12960:	ldr	x0, [x2, #168]
   12964:	tbnz	w0, #24, 12a70 <PyFloat_FromString@plt+0xbfe0>
   12968:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1296c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12970:	ldr	x2, [x2, #24]
   12974:	add	x1, x1, #0xb70
   12978:	ldr	x0, [x0, #3936]
   1297c:	ldr	x0, [x0]
   12980:	bl	6a10 <PyErr_Format@plt>
   12984:	ldr	x0, [x20]
   12988:	sub	x0, x0, #0x1
   1298c:	str	x0, [x20]
   12990:	cbz	x0, 12b00 <PyFloat_FromString@plt+0xc070>
   12994:	ldr	x23, [sp, #48]
   12998:	mov	x19, #0x0                   	// #0
   1299c:	mov	x0, x19
   129a0:	ldp	x19, x20, [sp, #16]
   129a4:	ldp	x21, x22, [sp, #32]
   129a8:	ldp	x29, x30, [sp], #96
   129ac:	ret
   129b0:	ldr	x0, [x22]
   129b4:	add	x0, x0, #0x1
   129b8:	str	x0, [x22]
   129bc:	add	x0, x23, #0x328
   129c0:	add	x0, x0, #0x1a0
   129c4:	bl	6950 <_PyObject_New@plt>
   129c8:	mov	x19, x0
   129cc:	cbz	x0, 12aac <PyFloat_FromString@plt+0xc01c>
   129d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   129d4:	mov	x2, #0xffffffffffffffff    	// #-1
   129d8:	mov	w1, #0x30                  	// #48
   129dc:	str	x2, [x19, #16]
   129e0:	ldr	q0, [x0, #2128]
   129e4:	add	x0, x19, #0x48
   129e8:	strb	w1, [x19, #24]
   129ec:	add	x4, sp, #0x4c
   129f0:	stp	xzr, xzr, [x19, #32]
   129f4:	add	x3, x21, #0x10
   129f8:	add	x1, x20, #0x18
   129fc:	str	x0, [x19, #64]
   12a00:	add	x2, x22, #0x18
   12a04:	add	x0, x19, #0x18
   12a08:	str	q0, [x19, #48]
   12a0c:	bl	3b660 <PyInit__decimal@@Base+0x1f420>
   12a10:	ldr	x0, [x20]
   12a14:	sub	x0, x0, #0x1
   12a18:	str	x0, [x20]
   12a1c:	cbz	x0, 12a58 <PyFloat_FromString@plt+0xbfc8>
   12a20:	ldr	x0, [x22]
   12a24:	sub	x0, x0, #0x1
   12a28:	str	x0, [x22]
   12a2c:	cbz	x0, 12a64 <PyFloat_FromString@plt+0xbfd4>
   12a30:	ldr	w1, [sp, #76]
   12a34:	mov	x0, x21
   12a38:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   12a3c:	cbnz	w0, 12adc <PyFloat_FromString@plt+0xc04c>
   12a40:	mov	x0, x19
   12a44:	ldp	x19, x20, [sp, #16]
   12a48:	ldp	x21, x22, [sp, #32]
   12a4c:	ldr	x23, [sp, #48]
   12a50:	ldp	x29, x30, [sp], #96
   12a54:	ret
   12a58:	mov	x0, x20
   12a5c:	bl	65d0 <_Py_Dealloc@plt>
   12a60:	b	12a20 <PyFloat_FromString@plt+0xbf90>
   12a64:	mov	x0, x22
   12a68:	bl	65d0 <_Py_Dealloc@plt>
   12a6c:	b	12a30 <PyFloat_FromString@plt+0xbfa0>
   12a70:	mov	x1, x22
   12a74:	mov	x0, x19
   12a78:	mov	x2, x21
   12a7c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12a80:	mov	x22, x0
   12a84:	cbnz	x0, 129bc <PyFloat_FromString@plt+0xbf2c>
   12a88:	b	12984 <PyFloat_FromString@plt+0xbef4>
   12a8c:	mov	x1, x20
   12a90:	mov	x0, x19
   12a94:	mov	x2, x21
   12a98:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12a9c:	mov	x20, x0
   12aa0:	cbnz	x0, 12938 <PyFloat_FromString@plt+0xbea8>
   12aa4:	ldr	x23, [sp, #48]
   12aa8:	b	12998 <PyFloat_FromString@plt+0xbf08>
   12aac:	ldr	x0, [x20]
   12ab0:	sub	x0, x0, #0x1
   12ab4:	str	x0, [x20]
   12ab8:	cbz	x0, 12b14 <PyFloat_FromString@plt+0xc084>
   12abc:	ldr	x0, [x22]
   12ac0:	sub	x0, x0, #0x1
   12ac4:	str	x0, [x22]
   12ac8:	cbnz	x0, 12994 <PyFloat_FromString@plt+0xbf04>
   12acc:	mov	x0, x22
   12ad0:	bl	65d0 <_Py_Dealloc@plt>
   12ad4:	ldr	x23, [sp, #48]
   12ad8:	b	12918 <PyFloat_FromString@plt+0xbe88>
   12adc:	ldr	x0, [x19]
   12ae0:	sub	x0, x0, #0x1
   12ae4:	str	x0, [x19]
   12ae8:	cbnz	x0, 12994 <PyFloat_FromString@plt+0xbf04>
   12aec:	mov	x0, x19
   12af0:	mov	x19, #0x0                   	// #0
   12af4:	bl	65d0 <_Py_Dealloc@plt>
   12af8:	ldr	x23, [sp, #48]
   12afc:	b	12918 <PyFloat_FromString@plt+0xbe88>
   12b00:	mov	x0, x20
   12b04:	mov	x19, #0x0                   	// #0
   12b08:	bl	65d0 <_Py_Dealloc@plt>
   12b0c:	ldr	x23, [sp, #48]
   12b10:	b	12918 <PyFloat_FromString@plt+0xbe88>
   12b14:	mov	x0, x20
   12b18:	bl	65d0 <_Py_Dealloc@plt>
   12b1c:	b	12abc <PyFloat_FromString@plt+0xc02c>
   12b20:	stp	x29, x30, [sp, #-96]!
   12b24:	mov	x29, sp
   12b28:	add	x3, sp, #0x58
   12b2c:	add	x2, sp, #0x50
   12b30:	stp	x19, x20, [sp, #16]
   12b34:	stp	x21, x22, [sp, #32]
   12b38:	mov	x21, x0
   12b3c:	mov	x0, x1
   12b40:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12b44:	add	x1, x1, #0xdc0
   12b48:	str	wzr, [sp, #76]
   12b4c:	bl	68e0 <PyArg_ParseTuple@plt>
   12b50:	cbz	w0, 12c30 <PyFloat_FromString@plt+0xc1a0>
   12b54:	ldr	x20, [sp, #80]
   12b58:	ldr	x0, [x20, #8]
   12b5c:	str	x23, [sp, #48]
   12b60:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   12b64:	add	x19, x23, #0x328
   12b68:	add	x19, x19, #0x1a0
   12b6c:	cmp	x0, x19
   12b70:	b.eq	12bc4 <PyFloat_FromString@plt+0xc134>  // b.none
   12b74:	mov	x1, x19
   12b78:	bl	69c0 <PyType_IsSubtype@plt>
   12b7c:	cbnz	w0, 12bc4 <PyFloat_FromString@plt+0xc134>
   12b80:	ldr	x2, [x20, #8]
   12b84:	ldr	x0, [x2, #168]
   12b88:	tbnz	w0, #24, 12d24 <PyFloat_FromString@plt+0xc294>
   12b8c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   12b90:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12b94:	ldr	x2, [x2, #24]
   12b98:	add	x1, x1, #0xb70
   12b9c:	ldr	x0, [x0, #3936]
   12ba0:	mov	x19, #0x0                   	// #0
   12ba4:	ldr	x0, [x0]
   12ba8:	bl	6a10 <PyErr_Format@plt>
   12bac:	ldr	x23, [sp, #48]
   12bb0:	mov	x0, x19
   12bb4:	ldp	x19, x20, [sp, #16]
   12bb8:	ldp	x21, x22, [sp, #32]
   12bbc:	ldp	x29, x30, [sp], #96
   12bc0:	ret
   12bc4:	ldr	x0, [x20]
   12bc8:	add	x0, x0, #0x1
   12bcc:	str	x0, [x20]
   12bd0:	ldr	x22, [sp, #88]
   12bd4:	add	x19, x23, #0x328
   12bd8:	add	x19, x19, #0x1a0
   12bdc:	ldr	x0, [x22, #8]
   12be0:	cmp	x0, x19
   12be4:	b.eq	12c48 <PyFloat_FromString@plt+0xc1b8>  // b.none
   12be8:	mov	x1, x19
   12bec:	bl	69c0 <PyType_IsSubtype@plt>
   12bf0:	cbnz	w0, 12c48 <PyFloat_FromString@plt+0xc1b8>
   12bf4:	ldr	x2, [x22, #8]
   12bf8:	ldr	x0, [x2, #168]
   12bfc:	tbnz	w0, #24, 12d08 <PyFloat_FromString@plt+0xc278>
   12c00:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   12c04:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12c08:	ldr	x2, [x2, #24]
   12c0c:	add	x1, x1, #0xb70
   12c10:	ldr	x0, [x0, #3936]
   12c14:	ldr	x0, [x0]
   12c18:	bl	6a10 <PyErr_Format@plt>
   12c1c:	ldr	x0, [x20]
   12c20:	sub	x0, x0, #0x1
   12c24:	str	x0, [x20]
   12c28:	cbz	x0, 12d98 <PyFloat_FromString@plt+0xc308>
   12c2c:	ldr	x23, [sp, #48]
   12c30:	mov	x19, #0x0                   	// #0
   12c34:	mov	x0, x19
   12c38:	ldp	x19, x20, [sp, #16]
   12c3c:	ldp	x21, x22, [sp, #32]
   12c40:	ldp	x29, x30, [sp], #96
   12c44:	ret
   12c48:	ldr	x0, [x22]
   12c4c:	add	x0, x0, #0x1
   12c50:	str	x0, [x22]
   12c54:	add	x0, x23, #0x328
   12c58:	add	x0, x0, #0x1a0
   12c5c:	bl	6950 <_PyObject_New@plt>
   12c60:	mov	x19, x0
   12c64:	cbz	x0, 12d44 <PyFloat_FromString@plt+0xc2b4>
   12c68:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   12c6c:	mov	x2, #0xffffffffffffffff    	// #-1
   12c70:	mov	w1, #0x30                  	// #48
   12c74:	str	x2, [x19, #16]
   12c78:	ldr	q0, [x0, #2128]
   12c7c:	add	x0, x19, #0x48
   12c80:	strb	w1, [x19, #24]
   12c84:	add	x4, sp, #0x4c
   12c88:	stp	xzr, xzr, [x19, #32]
   12c8c:	add	x3, x21, #0x10
   12c90:	add	x1, x20, #0x18
   12c94:	str	x0, [x19, #64]
   12c98:	add	x2, x22, #0x18
   12c9c:	add	x0, x19, #0x18
   12ca0:	str	q0, [x19, #48]
   12ca4:	bl	38718 <PyInit__decimal@@Base+0x1c4d8>
   12ca8:	ldr	x0, [x20]
   12cac:	sub	x0, x0, #0x1
   12cb0:	str	x0, [x20]
   12cb4:	cbz	x0, 12cf0 <PyFloat_FromString@plt+0xc260>
   12cb8:	ldr	x0, [x22]
   12cbc:	sub	x0, x0, #0x1
   12cc0:	str	x0, [x22]
   12cc4:	cbz	x0, 12cfc <PyFloat_FromString@plt+0xc26c>
   12cc8:	ldr	w1, [sp, #76]
   12ccc:	mov	x0, x21
   12cd0:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   12cd4:	cbnz	w0, 12d74 <PyFloat_FromString@plt+0xc2e4>
   12cd8:	mov	x0, x19
   12cdc:	ldp	x19, x20, [sp, #16]
   12ce0:	ldp	x21, x22, [sp, #32]
   12ce4:	ldr	x23, [sp, #48]
   12ce8:	ldp	x29, x30, [sp], #96
   12cec:	ret
   12cf0:	mov	x0, x20
   12cf4:	bl	65d0 <_Py_Dealloc@plt>
   12cf8:	b	12cb8 <PyFloat_FromString@plt+0xc228>
   12cfc:	mov	x0, x22
   12d00:	bl	65d0 <_Py_Dealloc@plt>
   12d04:	b	12cc8 <PyFloat_FromString@plt+0xc238>
   12d08:	mov	x1, x22
   12d0c:	mov	x0, x19
   12d10:	mov	x2, x21
   12d14:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12d18:	mov	x22, x0
   12d1c:	cbnz	x0, 12c54 <PyFloat_FromString@plt+0xc1c4>
   12d20:	b	12c1c <PyFloat_FromString@plt+0xc18c>
   12d24:	mov	x1, x20
   12d28:	mov	x0, x19
   12d2c:	mov	x2, x21
   12d30:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12d34:	mov	x20, x0
   12d38:	cbnz	x0, 12bd0 <PyFloat_FromString@plt+0xc140>
   12d3c:	ldr	x23, [sp, #48]
   12d40:	b	12c30 <PyFloat_FromString@plt+0xc1a0>
   12d44:	ldr	x0, [x20]
   12d48:	sub	x0, x0, #0x1
   12d4c:	str	x0, [x20]
   12d50:	cbz	x0, 12dac <PyFloat_FromString@plt+0xc31c>
   12d54:	ldr	x0, [x22]
   12d58:	sub	x0, x0, #0x1
   12d5c:	str	x0, [x22]
   12d60:	cbnz	x0, 12c2c <PyFloat_FromString@plt+0xc19c>
   12d64:	mov	x0, x22
   12d68:	bl	65d0 <_Py_Dealloc@plt>
   12d6c:	ldr	x23, [sp, #48]
   12d70:	b	12bb0 <PyFloat_FromString@plt+0xc120>
   12d74:	ldr	x0, [x19]
   12d78:	sub	x0, x0, #0x1
   12d7c:	str	x0, [x19]
   12d80:	cbnz	x0, 12c2c <PyFloat_FromString@plt+0xc19c>
   12d84:	mov	x0, x19
   12d88:	mov	x19, #0x0                   	// #0
   12d8c:	bl	65d0 <_Py_Dealloc@plt>
   12d90:	ldr	x23, [sp, #48]
   12d94:	b	12bb0 <PyFloat_FromString@plt+0xc120>
   12d98:	mov	x0, x20
   12d9c:	mov	x19, #0x0                   	// #0
   12da0:	bl	65d0 <_Py_Dealloc@plt>
   12da4:	ldr	x23, [sp, #48]
   12da8:	b	12bb0 <PyFloat_FromString@plt+0xc120>
   12dac:	mov	x0, x20
   12db0:	bl	65d0 <_Py_Dealloc@plt>
   12db4:	b	12d54 <PyFloat_FromString@plt+0xc2c4>
   12db8:	stp	x29, x30, [sp, #-96]!
   12dbc:	mov	x29, sp
   12dc0:	add	x3, sp, #0x58
   12dc4:	add	x2, sp, #0x50
   12dc8:	stp	x19, x20, [sp, #16]
   12dcc:	stp	x21, x22, [sp, #32]
   12dd0:	mov	x21, x0
   12dd4:	mov	x0, x1
   12dd8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12ddc:	add	x1, x1, #0xdc0
   12de0:	str	wzr, [sp, #76]
   12de4:	bl	68e0 <PyArg_ParseTuple@plt>
   12de8:	cbz	w0, 12ec8 <PyFloat_FromString@plt+0xc438>
   12dec:	ldr	x20, [sp, #80]
   12df0:	ldr	x0, [x20, #8]
   12df4:	str	x23, [sp, #48]
   12df8:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   12dfc:	add	x19, x23, #0x328
   12e00:	add	x19, x19, #0x1a0
   12e04:	cmp	x0, x19
   12e08:	b.eq	12e5c <PyFloat_FromString@plt+0xc3cc>  // b.none
   12e0c:	mov	x1, x19
   12e10:	bl	69c0 <PyType_IsSubtype@plt>
   12e14:	cbnz	w0, 12e5c <PyFloat_FromString@plt+0xc3cc>
   12e18:	ldr	x2, [x20, #8]
   12e1c:	ldr	x0, [x2, #168]
   12e20:	tbnz	w0, #24, 12fbc <PyFloat_FromString@plt+0xc52c>
   12e24:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   12e28:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12e2c:	ldr	x2, [x2, #24]
   12e30:	add	x1, x1, #0xb70
   12e34:	ldr	x0, [x0, #3936]
   12e38:	mov	x19, #0x0                   	// #0
   12e3c:	ldr	x0, [x0]
   12e40:	bl	6a10 <PyErr_Format@plt>
   12e44:	ldr	x23, [sp, #48]
   12e48:	mov	x0, x19
   12e4c:	ldp	x19, x20, [sp, #16]
   12e50:	ldp	x21, x22, [sp, #32]
   12e54:	ldp	x29, x30, [sp], #96
   12e58:	ret
   12e5c:	ldr	x0, [x20]
   12e60:	add	x0, x0, #0x1
   12e64:	str	x0, [x20]
   12e68:	ldr	x22, [sp, #88]
   12e6c:	add	x19, x23, #0x328
   12e70:	add	x19, x19, #0x1a0
   12e74:	ldr	x0, [x22, #8]
   12e78:	cmp	x0, x19
   12e7c:	b.eq	12ee0 <PyFloat_FromString@plt+0xc450>  // b.none
   12e80:	mov	x1, x19
   12e84:	bl	69c0 <PyType_IsSubtype@plt>
   12e88:	cbnz	w0, 12ee0 <PyFloat_FromString@plt+0xc450>
   12e8c:	ldr	x2, [x22, #8]
   12e90:	ldr	x0, [x2, #168]
   12e94:	tbnz	w0, #24, 12fa0 <PyFloat_FromString@plt+0xc510>
   12e98:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   12e9c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   12ea0:	ldr	x2, [x2, #24]
   12ea4:	add	x1, x1, #0xb70
   12ea8:	ldr	x0, [x0, #3936]
   12eac:	ldr	x0, [x0]
   12eb0:	bl	6a10 <PyErr_Format@plt>
   12eb4:	ldr	x0, [x20]
   12eb8:	sub	x0, x0, #0x1
   12ebc:	str	x0, [x20]
   12ec0:	cbz	x0, 13030 <PyFloat_FromString@plt+0xc5a0>
   12ec4:	ldr	x23, [sp, #48]
   12ec8:	mov	x19, #0x0                   	// #0
   12ecc:	mov	x0, x19
   12ed0:	ldp	x19, x20, [sp, #16]
   12ed4:	ldp	x21, x22, [sp, #32]
   12ed8:	ldp	x29, x30, [sp], #96
   12edc:	ret
   12ee0:	ldr	x0, [x22]
   12ee4:	add	x0, x0, #0x1
   12ee8:	str	x0, [x22]
   12eec:	add	x0, x23, #0x328
   12ef0:	add	x0, x0, #0x1a0
   12ef4:	bl	6950 <_PyObject_New@plt>
   12ef8:	mov	x19, x0
   12efc:	cbz	x0, 12fdc <PyFloat_FromString@plt+0xc54c>
   12f00:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   12f04:	mov	x2, #0xffffffffffffffff    	// #-1
   12f08:	mov	w1, #0x30                  	// #48
   12f0c:	str	x2, [x19, #16]
   12f10:	ldr	q0, [x0, #2128]
   12f14:	add	x0, x19, #0x48
   12f18:	strb	w1, [x19, #24]
   12f1c:	add	x4, sp, #0x4c
   12f20:	stp	xzr, xzr, [x19, #32]
   12f24:	add	x3, x21, #0x10
   12f28:	add	x1, x20, #0x18
   12f2c:	str	x0, [x19, #64]
   12f30:	add	x2, x22, #0x18
   12f34:	add	x0, x19, #0x18
   12f38:	str	q0, [x19, #48]
   12f3c:	bl	38848 <PyInit__decimal@@Base+0x1c608>
   12f40:	ldr	x0, [x20]
   12f44:	sub	x0, x0, #0x1
   12f48:	str	x0, [x20]
   12f4c:	cbz	x0, 12f88 <PyFloat_FromString@plt+0xc4f8>
   12f50:	ldr	x0, [x22]
   12f54:	sub	x0, x0, #0x1
   12f58:	str	x0, [x22]
   12f5c:	cbz	x0, 12f94 <PyFloat_FromString@plt+0xc504>
   12f60:	ldr	w1, [sp, #76]
   12f64:	mov	x0, x21
   12f68:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   12f6c:	cbnz	w0, 1300c <PyFloat_FromString@plt+0xc57c>
   12f70:	mov	x0, x19
   12f74:	ldp	x19, x20, [sp, #16]
   12f78:	ldp	x21, x22, [sp, #32]
   12f7c:	ldr	x23, [sp, #48]
   12f80:	ldp	x29, x30, [sp], #96
   12f84:	ret
   12f88:	mov	x0, x20
   12f8c:	bl	65d0 <_Py_Dealloc@plt>
   12f90:	b	12f50 <PyFloat_FromString@plt+0xc4c0>
   12f94:	mov	x0, x22
   12f98:	bl	65d0 <_Py_Dealloc@plt>
   12f9c:	b	12f60 <PyFloat_FromString@plt+0xc4d0>
   12fa0:	mov	x1, x22
   12fa4:	mov	x0, x19
   12fa8:	mov	x2, x21
   12fac:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12fb0:	mov	x22, x0
   12fb4:	cbnz	x0, 12eec <PyFloat_FromString@plt+0xc45c>
   12fb8:	b	12eb4 <PyFloat_FromString@plt+0xc424>
   12fbc:	mov	x1, x20
   12fc0:	mov	x0, x19
   12fc4:	mov	x2, x21
   12fc8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   12fcc:	mov	x20, x0
   12fd0:	cbnz	x0, 12e68 <PyFloat_FromString@plt+0xc3d8>
   12fd4:	ldr	x23, [sp, #48]
   12fd8:	b	12ec8 <PyFloat_FromString@plt+0xc438>
   12fdc:	ldr	x0, [x20]
   12fe0:	sub	x0, x0, #0x1
   12fe4:	str	x0, [x20]
   12fe8:	cbz	x0, 13044 <PyFloat_FromString@plt+0xc5b4>
   12fec:	ldr	x0, [x22]
   12ff0:	sub	x0, x0, #0x1
   12ff4:	str	x0, [x22]
   12ff8:	cbnz	x0, 12ec4 <PyFloat_FromString@plt+0xc434>
   12ffc:	mov	x0, x22
   13000:	bl	65d0 <_Py_Dealloc@plt>
   13004:	ldr	x23, [sp, #48]
   13008:	b	12e48 <PyFloat_FromString@plt+0xc3b8>
   1300c:	ldr	x0, [x19]
   13010:	sub	x0, x0, #0x1
   13014:	str	x0, [x19]
   13018:	cbnz	x0, 12ec4 <PyFloat_FromString@plt+0xc434>
   1301c:	mov	x0, x19
   13020:	mov	x19, #0x0                   	// #0
   13024:	bl	65d0 <_Py_Dealloc@plt>
   13028:	ldr	x23, [sp, #48]
   1302c:	b	12e48 <PyFloat_FromString@plt+0xc3b8>
   13030:	mov	x0, x20
   13034:	mov	x19, #0x0                   	// #0
   13038:	bl	65d0 <_Py_Dealloc@plt>
   1303c:	ldr	x23, [sp, #48]
   13040:	b	12e48 <PyFloat_FromString@plt+0xc3b8>
   13044:	mov	x0, x20
   13048:	bl	65d0 <_Py_Dealloc@plt>
   1304c:	b	12fec <PyFloat_FromString@plt+0xc55c>
   13050:	stp	x29, x30, [sp, #-96]!
   13054:	mov	x29, sp
   13058:	add	x3, sp, #0x58
   1305c:	add	x2, sp, #0x50
   13060:	stp	x19, x20, [sp, #16]
   13064:	stp	x21, x22, [sp, #32]
   13068:	mov	x21, x0
   1306c:	mov	x0, x1
   13070:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13074:	add	x1, x1, #0xdc0
   13078:	str	wzr, [sp, #76]
   1307c:	bl	68e0 <PyArg_ParseTuple@plt>
   13080:	cbz	w0, 13160 <PyFloat_FromString@plt+0xc6d0>
   13084:	ldr	x20, [sp, #80]
   13088:	ldr	x0, [x20, #8]
   1308c:	str	x23, [sp, #48]
   13090:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   13094:	add	x19, x23, #0x328
   13098:	add	x19, x19, #0x1a0
   1309c:	cmp	x0, x19
   130a0:	b.eq	130f4 <PyFloat_FromString@plt+0xc664>  // b.none
   130a4:	mov	x1, x19
   130a8:	bl	69c0 <PyType_IsSubtype@plt>
   130ac:	cbnz	w0, 130f4 <PyFloat_FromString@plt+0xc664>
   130b0:	ldr	x2, [x20, #8]
   130b4:	ldr	x0, [x2, #168]
   130b8:	tbnz	w0, #24, 13254 <PyFloat_FromString@plt+0xc7c4>
   130bc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   130c0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   130c4:	ldr	x2, [x2, #24]
   130c8:	add	x1, x1, #0xb70
   130cc:	ldr	x0, [x0, #3936]
   130d0:	mov	x19, #0x0                   	// #0
   130d4:	ldr	x0, [x0]
   130d8:	bl	6a10 <PyErr_Format@plt>
   130dc:	ldr	x23, [sp, #48]
   130e0:	mov	x0, x19
   130e4:	ldp	x19, x20, [sp, #16]
   130e8:	ldp	x21, x22, [sp, #32]
   130ec:	ldp	x29, x30, [sp], #96
   130f0:	ret
   130f4:	ldr	x0, [x20]
   130f8:	add	x0, x0, #0x1
   130fc:	str	x0, [x20]
   13100:	ldr	x22, [sp, #88]
   13104:	add	x19, x23, #0x328
   13108:	add	x19, x19, #0x1a0
   1310c:	ldr	x0, [x22, #8]
   13110:	cmp	x0, x19
   13114:	b.eq	13178 <PyFloat_FromString@plt+0xc6e8>  // b.none
   13118:	mov	x1, x19
   1311c:	bl	69c0 <PyType_IsSubtype@plt>
   13120:	cbnz	w0, 13178 <PyFloat_FromString@plt+0xc6e8>
   13124:	ldr	x2, [x22, #8]
   13128:	ldr	x0, [x2, #168]
   1312c:	tbnz	w0, #24, 13238 <PyFloat_FromString@plt+0xc7a8>
   13130:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13134:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13138:	ldr	x2, [x2, #24]
   1313c:	add	x1, x1, #0xb70
   13140:	ldr	x0, [x0, #3936]
   13144:	ldr	x0, [x0]
   13148:	bl	6a10 <PyErr_Format@plt>
   1314c:	ldr	x0, [x20]
   13150:	sub	x0, x0, #0x1
   13154:	str	x0, [x20]
   13158:	cbz	x0, 132c8 <PyFloat_FromString@plt+0xc838>
   1315c:	ldr	x23, [sp, #48]
   13160:	mov	x19, #0x0                   	// #0
   13164:	mov	x0, x19
   13168:	ldp	x19, x20, [sp, #16]
   1316c:	ldp	x21, x22, [sp, #32]
   13170:	ldp	x29, x30, [sp], #96
   13174:	ret
   13178:	ldr	x0, [x22]
   1317c:	add	x0, x0, #0x1
   13180:	str	x0, [x22]
   13184:	add	x0, x23, #0x328
   13188:	add	x0, x0, #0x1a0
   1318c:	bl	6950 <_PyObject_New@plt>
   13190:	mov	x19, x0
   13194:	cbz	x0, 13274 <PyFloat_FromString@plt+0xc7e4>
   13198:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1319c:	mov	x2, #0xffffffffffffffff    	// #-1
   131a0:	mov	w1, #0x30                  	// #48
   131a4:	str	x2, [x19, #16]
   131a8:	ldr	q0, [x0, #2128]
   131ac:	add	x0, x19, #0x48
   131b0:	strb	w1, [x19, #24]
   131b4:	add	x4, sp, #0x4c
   131b8:	stp	xzr, xzr, [x19, #32]
   131bc:	add	x3, x21, #0x10
   131c0:	add	x1, x20, #0x18
   131c4:	str	x0, [x19, #64]
   131c8:	add	x2, x22, #0x18
   131cc:	add	x0, x19, #0x18
   131d0:	str	q0, [x19, #48]
   131d4:	bl	38978 <PyInit__decimal@@Base+0x1c738>
   131d8:	ldr	x0, [x20]
   131dc:	sub	x0, x0, #0x1
   131e0:	str	x0, [x20]
   131e4:	cbz	x0, 13220 <PyFloat_FromString@plt+0xc790>
   131e8:	ldr	x0, [x22]
   131ec:	sub	x0, x0, #0x1
   131f0:	str	x0, [x22]
   131f4:	cbz	x0, 1322c <PyFloat_FromString@plt+0xc79c>
   131f8:	ldr	w1, [sp, #76]
   131fc:	mov	x0, x21
   13200:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   13204:	cbnz	w0, 132a4 <PyFloat_FromString@plt+0xc814>
   13208:	mov	x0, x19
   1320c:	ldp	x19, x20, [sp, #16]
   13210:	ldp	x21, x22, [sp, #32]
   13214:	ldr	x23, [sp, #48]
   13218:	ldp	x29, x30, [sp], #96
   1321c:	ret
   13220:	mov	x0, x20
   13224:	bl	65d0 <_Py_Dealloc@plt>
   13228:	b	131e8 <PyFloat_FromString@plt+0xc758>
   1322c:	mov	x0, x22
   13230:	bl	65d0 <_Py_Dealloc@plt>
   13234:	b	131f8 <PyFloat_FromString@plt+0xc768>
   13238:	mov	x1, x22
   1323c:	mov	x0, x19
   13240:	mov	x2, x21
   13244:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13248:	mov	x22, x0
   1324c:	cbnz	x0, 13184 <PyFloat_FromString@plt+0xc6f4>
   13250:	b	1314c <PyFloat_FromString@plt+0xc6bc>
   13254:	mov	x1, x20
   13258:	mov	x0, x19
   1325c:	mov	x2, x21
   13260:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13264:	mov	x20, x0
   13268:	cbnz	x0, 13100 <PyFloat_FromString@plt+0xc670>
   1326c:	ldr	x23, [sp, #48]
   13270:	b	13160 <PyFloat_FromString@plt+0xc6d0>
   13274:	ldr	x0, [x20]
   13278:	sub	x0, x0, #0x1
   1327c:	str	x0, [x20]
   13280:	cbz	x0, 132dc <PyFloat_FromString@plt+0xc84c>
   13284:	ldr	x0, [x22]
   13288:	sub	x0, x0, #0x1
   1328c:	str	x0, [x22]
   13290:	cbnz	x0, 1315c <PyFloat_FromString@plt+0xc6cc>
   13294:	mov	x0, x22
   13298:	bl	65d0 <_Py_Dealloc@plt>
   1329c:	ldr	x23, [sp, #48]
   132a0:	b	130e0 <PyFloat_FromString@plt+0xc650>
   132a4:	ldr	x0, [x19]
   132a8:	sub	x0, x0, #0x1
   132ac:	str	x0, [x19]
   132b0:	cbnz	x0, 1315c <PyFloat_FromString@plt+0xc6cc>
   132b4:	mov	x0, x19
   132b8:	mov	x19, #0x0                   	// #0
   132bc:	bl	65d0 <_Py_Dealloc@plt>
   132c0:	ldr	x23, [sp, #48]
   132c4:	b	130e0 <PyFloat_FromString@plt+0xc650>
   132c8:	mov	x0, x20
   132cc:	mov	x19, #0x0                   	// #0
   132d0:	bl	65d0 <_Py_Dealloc@plt>
   132d4:	ldr	x23, [sp, #48]
   132d8:	b	130e0 <PyFloat_FromString@plt+0xc650>
   132dc:	mov	x0, x20
   132e0:	bl	65d0 <_Py_Dealloc@plt>
   132e4:	b	13284 <PyFloat_FromString@plt+0xc7f4>
   132e8:	stp	x29, x30, [sp, #-96]!
   132ec:	mov	x29, sp
   132f0:	add	x3, sp, #0x58
   132f4:	add	x2, sp, #0x50
   132f8:	stp	x19, x20, [sp, #16]
   132fc:	stp	x21, x22, [sp, #32]
   13300:	mov	x21, x0
   13304:	mov	x0, x1
   13308:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1330c:	add	x1, x1, #0xdc0
   13310:	str	wzr, [sp, #76]
   13314:	bl	68e0 <PyArg_ParseTuple@plt>
   13318:	cbz	w0, 133f8 <PyFloat_FromString@plt+0xc968>
   1331c:	ldr	x20, [sp, #80]
   13320:	ldr	x0, [x20, #8]
   13324:	str	x23, [sp, #48]
   13328:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1332c:	add	x19, x23, #0x328
   13330:	add	x19, x19, #0x1a0
   13334:	cmp	x0, x19
   13338:	b.eq	1338c <PyFloat_FromString@plt+0xc8fc>  // b.none
   1333c:	mov	x1, x19
   13340:	bl	69c0 <PyType_IsSubtype@plt>
   13344:	cbnz	w0, 1338c <PyFloat_FromString@plt+0xc8fc>
   13348:	ldr	x2, [x20, #8]
   1334c:	ldr	x0, [x2, #168]
   13350:	tbnz	w0, #24, 134ec <PyFloat_FromString@plt+0xca5c>
   13354:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13358:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1335c:	ldr	x2, [x2, #24]
   13360:	add	x1, x1, #0xb70
   13364:	ldr	x0, [x0, #3936]
   13368:	mov	x19, #0x0                   	// #0
   1336c:	ldr	x0, [x0]
   13370:	bl	6a10 <PyErr_Format@plt>
   13374:	ldr	x23, [sp, #48]
   13378:	mov	x0, x19
   1337c:	ldp	x19, x20, [sp, #16]
   13380:	ldp	x21, x22, [sp, #32]
   13384:	ldp	x29, x30, [sp], #96
   13388:	ret
   1338c:	ldr	x0, [x20]
   13390:	add	x0, x0, #0x1
   13394:	str	x0, [x20]
   13398:	ldr	x22, [sp, #88]
   1339c:	add	x19, x23, #0x328
   133a0:	add	x19, x19, #0x1a0
   133a4:	ldr	x0, [x22, #8]
   133a8:	cmp	x0, x19
   133ac:	b.eq	13410 <PyFloat_FromString@plt+0xc980>  // b.none
   133b0:	mov	x1, x19
   133b4:	bl	69c0 <PyType_IsSubtype@plt>
   133b8:	cbnz	w0, 13410 <PyFloat_FromString@plt+0xc980>
   133bc:	ldr	x2, [x22, #8]
   133c0:	ldr	x0, [x2, #168]
   133c4:	tbnz	w0, #24, 134d0 <PyFloat_FromString@plt+0xca40>
   133c8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   133cc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   133d0:	ldr	x2, [x2, #24]
   133d4:	add	x1, x1, #0xb70
   133d8:	ldr	x0, [x0, #3936]
   133dc:	ldr	x0, [x0]
   133e0:	bl	6a10 <PyErr_Format@plt>
   133e4:	ldr	x0, [x20]
   133e8:	sub	x0, x0, #0x1
   133ec:	str	x0, [x20]
   133f0:	cbz	x0, 13560 <PyFloat_FromString@plt+0xcad0>
   133f4:	ldr	x23, [sp, #48]
   133f8:	mov	x19, #0x0                   	// #0
   133fc:	mov	x0, x19
   13400:	ldp	x19, x20, [sp, #16]
   13404:	ldp	x21, x22, [sp, #32]
   13408:	ldp	x29, x30, [sp], #96
   1340c:	ret
   13410:	ldr	x0, [x22]
   13414:	add	x0, x0, #0x1
   13418:	str	x0, [x22]
   1341c:	add	x0, x23, #0x328
   13420:	add	x0, x0, #0x1a0
   13424:	bl	6950 <_PyObject_New@plt>
   13428:	mov	x19, x0
   1342c:	cbz	x0, 1350c <PyFloat_FromString@plt+0xca7c>
   13430:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   13434:	mov	x2, #0xffffffffffffffff    	// #-1
   13438:	mov	w1, #0x30                  	// #48
   1343c:	str	x2, [x19, #16]
   13440:	ldr	q0, [x0, #2128]
   13444:	add	x0, x19, #0x48
   13448:	strb	w1, [x19, #24]
   1344c:	add	x4, sp, #0x4c
   13450:	stp	xzr, xzr, [x19, #32]
   13454:	add	x3, x21, #0x10
   13458:	add	x1, x20, #0x18
   1345c:	str	x0, [x19, #64]
   13460:	add	x2, x22, #0x18
   13464:	add	x0, x19, #0x18
   13468:	str	q0, [x19, #48]
   1346c:	bl	32748 <PyInit__decimal@@Base+0x16508>
   13470:	ldr	x0, [x20]
   13474:	sub	x0, x0, #0x1
   13478:	str	x0, [x20]
   1347c:	cbz	x0, 134b8 <PyFloat_FromString@plt+0xca28>
   13480:	ldr	x0, [x22]
   13484:	sub	x0, x0, #0x1
   13488:	str	x0, [x22]
   1348c:	cbz	x0, 134c4 <PyFloat_FromString@plt+0xca34>
   13490:	ldr	w1, [sp, #76]
   13494:	mov	x0, x21
   13498:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1349c:	cbnz	w0, 1353c <PyFloat_FromString@plt+0xcaac>
   134a0:	mov	x0, x19
   134a4:	ldp	x19, x20, [sp, #16]
   134a8:	ldp	x21, x22, [sp, #32]
   134ac:	ldr	x23, [sp, #48]
   134b0:	ldp	x29, x30, [sp], #96
   134b4:	ret
   134b8:	mov	x0, x20
   134bc:	bl	65d0 <_Py_Dealloc@plt>
   134c0:	b	13480 <PyFloat_FromString@plt+0xc9f0>
   134c4:	mov	x0, x22
   134c8:	bl	65d0 <_Py_Dealloc@plt>
   134cc:	b	13490 <PyFloat_FromString@plt+0xca00>
   134d0:	mov	x1, x22
   134d4:	mov	x0, x19
   134d8:	mov	x2, x21
   134dc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   134e0:	mov	x22, x0
   134e4:	cbnz	x0, 1341c <PyFloat_FromString@plt+0xc98c>
   134e8:	b	133e4 <PyFloat_FromString@plt+0xc954>
   134ec:	mov	x1, x20
   134f0:	mov	x0, x19
   134f4:	mov	x2, x21
   134f8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   134fc:	mov	x20, x0
   13500:	cbnz	x0, 13398 <PyFloat_FromString@plt+0xc908>
   13504:	ldr	x23, [sp, #48]
   13508:	b	133f8 <PyFloat_FromString@plt+0xc968>
   1350c:	ldr	x0, [x20]
   13510:	sub	x0, x0, #0x1
   13514:	str	x0, [x20]
   13518:	cbz	x0, 13574 <PyFloat_FromString@plt+0xcae4>
   1351c:	ldr	x0, [x22]
   13520:	sub	x0, x0, #0x1
   13524:	str	x0, [x22]
   13528:	cbnz	x0, 133f4 <PyFloat_FromString@plt+0xc964>
   1352c:	mov	x0, x22
   13530:	bl	65d0 <_Py_Dealloc@plt>
   13534:	ldr	x23, [sp, #48]
   13538:	b	13378 <PyFloat_FromString@plt+0xc8e8>
   1353c:	ldr	x0, [x19]
   13540:	sub	x0, x0, #0x1
   13544:	str	x0, [x19]
   13548:	cbnz	x0, 133f4 <PyFloat_FromString@plt+0xc964>
   1354c:	mov	x0, x19
   13550:	mov	x19, #0x0                   	// #0
   13554:	bl	65d0 <_Py_Dealloc@plt>
   13558:	ldr	x23, [sp, #48]
   1355c:	b	13378 <PyFloat_FromString@plt+0xc8e8>
   13560:	mov	x0, x20
   13564:	mov	x19, #0x0                   	// #0
   13568:	bl	65d0 <_Py_Dealloc@plt>
   1356c:	ldr	x23, [sp, #48]
   13570:	b	13378 <PyFloat_FromString@plt+0xc8e8>
   13574:	mov	x0, x20
   13578:	bl	65d0 <_Py_Dealloc@plt>
   1357c:	b	1351c <PyFloat_FromString@plt+0xca8c>
   13580:	stp	x29, x30, [sp, #-96]!
   13584:	mov	x29, sp
   13588:	add	x3, sp, #0x58
   1358c:	add	x2, sp, #0x50
   13590:	stp	x19, x20, [sp, #16]
   13594:	stp	x21, x22, [sp, #32]
   13598:	mov	x21, x0
   1359c:	mov	x0, x1
   135a0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   135a4:	add	x1, x1, #0xdc0
   135a8:	str	wzr, [sp, #76]
   135ac:	bl	68e0 <PyArg_ParseTuple@plt>
   135b0:	cbz	w0, 13690 <PyFloat_FromString@plt+0xcc00>
   135b4:	ldr	x20, [sp, #80]
   135b8:	ldr	x0, [x20, #8]
   135bc:	str	x23, [sp, #48]
   135c0:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   135c4:	add	x19, x23, #0x328
   135c8:	add	x19, x19, #0x1a0
   135cc:	cmp	x0, x19
   135d0:	b.eq	13624 <PyFloat_FromString@plt+0xcb94>  // b.none
   135d4:	mov	x1, x19
   135d8:	bl	69c0 <PyType_IsSubtype@plt>
   135dc:	cbnz	w0, 13624 <PyFloat_FromString@plt+0xcb94>
   135e0:	ldr	x2, [x20, #8]
   135e4:	ldr	x0, [x2, #168]
   135e8:	tbnz	w0, #24, 13784 <PyFloat_FromString@plt+0xccf4>
   135ec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   135f0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   135f4:	ldr	x2, [x2, #24]
   135f8:	add	x1, x1, #0xb70
   135fc:	ldr	x0, [x0, #3936]
   13600:	mov	x19, #0x0                   	// #0
   13604:	ldr	x0, [x0]
   13608:	bl	6a10 <PyErr_Format@plt>
   1360c:	ldr	x23, [sp, #48]
   13610:	mov	x0, x19
   13614:	ldp	x19, x20, [sp, #16]
   13618:	ldp	x21, x22, [sp, #32]
   1361c:	ldp	x29, x30, [sp], #96
   13620:	ret
   13624:	ldr	x0, [x20]
   13628:	add	x0, x0, #0x1
   1362c:	str	x0, [x20]
   13630:	ldr	x22, [sp, #88]
   13634:	add	x19, x23, #0x328
   13638:	add	x19, x19, #0x1a0
   1363c:	ldr	x0, [x22, #8]
   13640:	cmp	x0, x19
   13644:	b.eq	136a8 <PyFloat_FromString@plt+0xcc18>  // b.none
   13648:	mov	x1, x19
   1364c:	bl	69c0 <PyType_IsSubtype@plt>
   13650:	cbnz	w0, 136a8 <PyFloat_FromString@plt+0xcc18>
   13654:	ldr	x2, [x22, #8]
   13658:	ldr	x0, [x2, #168]
   1365c:	tbnz	w0, #24, 13768 <PyFloat_FromString@plt+0xccd8>
   13660:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13664:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13668:	ldr	x2, [x2, #24]
   1366c:	add	x1, x1, #0xb70
   13670:	ldr	x0, [x0, #3936]
   13674:	ldr	x0, [x0]
   13678:	bl	6a10 <PyErr_Format@plt>
   1367c:	ldr	x0, [x20]
   13680:	sub	x0, x0, #0x1
   13684:	str	x0, [x20]
   13688:	cbz	x0, 137f8 <PyFloat_FromString@plt+0xcd68>
   1368c:	ldr	x23, [sp, #48]
   13690:	mov	x19, #0x0                   	// #0
   13694:	mov	x0, x19
   13698:	ldp	x19, x20, [sp, #16]
   1369c:	ldp	x21, x22, [sp, #32]
   136a0:	ldp	x29, x30, [sp], #96
   136a4:	ret
   136a8:	ldr	x0, [x22]
   136ac:	add	x0, x0, #0x1
   136b0:	str	x0, [x22]
   136b4:	add	x0, x23, #0x328
   136b8:	add	x0, x0, #0x1a0
   136bc:	bl	6950 <_PyObject_New@plt>
   136c0:	mov	x19, x0
   136c4:	cbz	x0, 137a4 <PyFloat_FromString@plt+0xcd14>
   136c8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   136cc:	mov	x2, #0xffffffffffffffff    	// #-1
   136d0:	mov	w1, #0x30                  	// #48
   136d4:	str	x2, [x19, #16]
   136d8:	ldr	q0, [x0, #2128]
   136dc:	add	x0, x19, #0x48
   136e0:	strb	w1, [x19, #24]
   136e4:	add	x4, sp, #0x4c
   136e8:	stp	xzr, xzr, [x19, #32]
   136ec:	add	x3, x21, #0x10
   136f0:	add	x1, x20, #0x18
   136f4:	str	x0, [x19, #64]
   136f8:	add	x2, x22, #0x18
   136fc:	add	x0, x19, #0x18
   13700:	str	q0, [x19, #48]
   13704:	bl	31990 <PyInit__decimal@@Base+0x15750>
   13708:	ldr	x0, [x20]
   1370c:	sub	x0, x0, #0x1
   13710:	str	x0, [x20]
   13714:	cbz	x0, 13750 <PyFloat_FromString@plt+0xccc0>
   13718:	ldr	x0, [x22]
   1371c:	sub	x0, x0, #0x1
   13720:	str	x0, [x22]
   13724:	cbz	x0, 1375c <PyFloat_FromString@plt+0xcccc>
   13728:	ldr	w1, [sp, #76]
   1372c:	mov	x0, x21
   13730:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   13734:	cbnz	w0, 137d4 <PyFloat_FromString@plt+0xcd44>
   13738:	mov	x0, x19
   1373c:	ldp	x19, x20, [sp, #16]
   13740:	ldp	x21, x22, [sp, #32]
   13744:	ldr	x23, [sp, #48]
   13748:	ldp	x29, x30, [sp], #96
   1374c:	ret
   13750:	mov	x0, x20
   13754:	bl	65d0 <_Py_Dealloc@plt>
   13758:	b	13718 <PyFloat_FromString@plt+0xcc88>
   1375c:	mov	x0, x22
   13760:	bl	65d0 <_Py_Dealloc@plt>
   13764:	b	13728 <PyFloat_FromString@plt+0xcc98>
   13768:	mov	x1, x22
   1376c:	mov	x0, x19
   13770:	mov	x2, x21
   13774:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13778:	mov	x22, x0
   1377c:	cbnz	x0, 136b4 <PyFloat_FromString@plt+0xcc24>
   13780:	b	1367c <PyFloat_FromString@plt+0xcbec>
   13784:	mov	x1, x20
   13788:	mov	x0, x19
   1378c:	mov	x2, x21
   13790:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13794:	mov	x20, x0
   13798:	cbnz	x0, 13630 <PyFloat_FromString@plt+0xcba0>
   1379c:	ldr	x23, [sp, #48]
   137a0:	b	13690 <PyFloat_FromString@plt+0xcc00>
   137a4:	ldr	x0, [x20]
   137a8:	sub	x0, x0, #0x1
   137ac:	str	x0, [x20]
   137b0:	cbz	x0, 1380c <PyFloat_FromString@plt+0xcd7c>
   137b4:	ldr	x0, [x22]
   137b8:	sub	x0, x0, #0x1
   137bc:	str	x0, [x22]
   137c0:	cbnz	x0, 1368c <PyFloat_FromString@plt+0xcbfc>
   137c4:	mov	x0, x22
   137c8:	bl	65d0 <_Py_Dealloc@plt>
   137cc:	ldr	x23, [sp, #48]
   137d0:	b	13610 <PyFloat_FromString@plt+0xcb80>
   137d4:	ldr	x0, [x19]
   137d8:	sub	x0, x0, #0x1
   137dc:	str	x0, [x19]
   137e0:	cbnz	x0, 1368c <PyFloat_FromString@plt+0xcbfc>
   137e4:	mov	x0, x19
   137e8:	mov	x19, #0x0                   	// #0
   137ec:	bl	65d0 <_Py_Dealloc@plt>
   137f0:	ldr	x23, [sp, #48]
   137f4:	b	13610 <PyFloat_FromString@plt+0xcb80>
   137f8:	mov	x0, x20
   137fc:	mov	x19, #0x0                   	// #0
   13800:	bl	65d0 <_Py_Dealloc@plt>
   13804:	ldr	x23, [sp, #48]
   13808:	b	13610 <PyFloat_FromString@plt+0xcb80>
   1380c:	mov	x0, x20
   13810:	bl	65d0 <_Py_Dealloc@plt>
   13814:	b	137b4 <PyFloat_FromString@plt+0xcd24>
   13818:	stp	x29, x30, [sp, #-96]!
   1381c:	mov	x29, sp
   13820:	add	x3, sp, #0x58
   13824:	add	x2, sp, #0x50
   13828:	stp	x19, x20, [sp, #16]
   1382c:	stp	x21, x22, [sp, #32]
   13830:	mov	x21, x0
   13834:	mov	x0, x1
   13838:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1383c:	add	x1, x1, #0xdc0
   13840:	str	wzr, [sp, #76]
   13844:	bl	68e0 <PyArg_ParseTuple@plt>
   13848:	cbz	w0, 13928 <PyFloat_FromString@plt+0xce98>
   1384c:	ldr	x20, [sp, #80]
   13850:	ldr	x0, [x20, #8]
   13854:	str	x23, [sp, #48]
   13858:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1385c:	add	x19, x23, #0x328
   13860:	add	x19, x19, #0x1a0
   13864:	cmp	x0, x19
   13868:	b.eq	138bc <PyFloat_FromString@plt+0xce2c>  // b.none
   1386c:	mov	x1, x19
   13870:	bl	69c0 <PyType_IsSubtype@plt>
   13874:	cbnz	w0, 138bc <PyFloat_FromString@plt+0xce2c>
   13878:	ldr	x2, [x20, #8]
   1387c:	ldr	x0, [x2, #168]
   13880:	tbnz	w0, #24, 13a1c <PyFloat_FromString@plt+0xcf8c>
   13884:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13888:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1388c:	ldr	x2, [x2, #24]
   13890:	add	x1, x1, #0xb70
   13894:	ldr	x0, [x0, #3936]
   13898:	mov	x19, #0x0                   	// #0
   1389c:	ldr	x0, [x0]
   138a0:	bl	6a10 <PyErr_Format@plt>
   138a4:	ldr	x23, [sp, #48]
   138a8:	mov	x0, x19
   138ac:	ldp	x19, x20, [sp, #16]
   138b0:	ldp	x21, x22, [sp, #32]
   138b4:	ldp	x29, x30, [sp], #96
   138b8:	ret
   138bc:	ldr	x0, [x20]
   138c0:	add	x0, x0, #0x1
   138c4:	str	x0, [x20]
   138c8:	ldr	x22, [sp, #88]
   138cc:	add	x19, x23, #0x328
   138d0:	add	x19, x19, #0x1a0
   138d4:	ldr	x0, [x22, #8]
   138d8:	cmp	x0, x19
   138dc:	b.eq	13940 <PyFloat_FromString@plt+0xceb0>  // b.none
   138e0:	mov	x1, x19
   138e4:	bl	69c0 <PyType_IsSubtype@plt>
   138e8:	cbnz	w0, 13940 <PyFloat_FromString@plt+0xceb0>
   138ec:	ldr	x2, [x22, #8]
   138f0:	ldr	x0, [x2, #168]
   138f4:	tbnz	w0, #24, 13a00 <PyFloat_FromString@plt+0xcf70>
   138f8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   138fc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13900:	ldr	x2, [x2, #24]
   13904:	add	x1, x1, #0xb70
   13908:	ldr	x0, [x0, #3936]
   1390c:	ldr	x0, [x0]
   13910:	bl	6a10 <PyErr_Format@plt>
   13914:	ldr	x0, [x20]
   13918:	sub	x0, x0, #0x1
   1391c:	str	x0, [x20]
   13920:	cbz	x0, 13a90 <PyFloat_FromString@plt+0xd000>
   13924:	ldr	x23, [sp, #48]
   13928:	mov	x19, #0x0                   	// #0
   1392c:	mov	x0, x19
   13930:	ldp	x19, x20, [sp, #16]
   13934:	ldp	x21, x22, [sp, #32]
   13938:	ldp	x29, x30, [sp], #96
   1393c:	ret
   13940:	ldr	x0, [x22]
   13944:	add	x0, x0, #0x1
   13948:	str	x0, [x22]
   1394c:	add	x0, x23, #0x328
   13950:	add	x0, x0, #0x1a0
   13954:	bl	6950 <_PyObject_New@plt>
   13958:	mov	x19, x0
   1395c:	cbz	x0, 13a3c <PyFloat_FromString@plt+0xcfac>
   13960:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   13964:	mov	x2, #0xffffffffffffffff    	// #-1
   13968:	mov	w1, #0x30                  	// #48
   1396c:	str	x2, [x19, #16]
   13970:	ldr	q0, [x0, #2128]
   13974:	add	x0, x19, #0x48
   13978:	strb	w1, [x19, #24]
   1397c:	add	x4, sp, #0x4c
   13980:	stp	xzr, xzr, [x19, #32]
   13984:	add	x3, x21, #0x10
   13988:	add	x1, x20, #0x18
   1398c:	str	x0, [x19, #64]
   13990:	add	x2, x22, #0x18
   13994:	add	x0, x19, #0x18
   13998:	str	q0, [x19, #48]
   1399c:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   139a0:	ldr	x0, [x20]
   139a4:	sub	x0, x0, #0x1
   139a8:	str	x0, [x20]
   139ac:	cbz	x0, 139e8 <PyFloat_FromString@plt+0xcf58>
   139b0:	ldr	x0, [x22]
   139b4:	sub	x0, x0, #0x1
   139b8:	str	x0, [x22]
   139bc:	cbz	x0, 139f4 <PyFloat_FromString@plt+0xcf64>
   139c0:	ldr	w1, [sp, #76]
   139c4:	mov	x0, x21
   139c8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   139cc:	cbnz	w0, 13a6c <PyFloat_FromString@plt+0xcfdc>
   139d0:	mov	x0, x19
   139d4:	ldp	x19, x20, [sp, #16]
   139d8:	ldp	x21, x22, [sp, #32]
   139dc:	ldr	x23, [sp, #48]
   139e0:	ldp	x29, x30, [sp], #96
   139e4:	ret
   139e8:	mov	x0, x20
   139ec:	bl	65d0 <_Py_Dealloc@plt>
   139f0:	b	139b0 <PyFloat_FromString@plt+0xcf20>
   139f4:	mov	x0, x22
   139f8:	bl	65d0 <_Py_Dealloc@plt>
   139fc:	b	139c0 <PyFloat_FromString@plt+0xcf30>
   13a00:	mov	x1, x22
   13a04:	mov	x0, x19
   13a08:	mov	x2, x21
   13a0c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13a10:	mov	x22, x0
   13a14:	cbnz	x0, 1394c <PyFloat_FromString@plt+0xcebc>
   13a18:	b	13914 <PyFloat_FromString@plt+0xce84>
   13a1c:	mov	x1, x20
   13a20:	mov	x0, x19
   13a24:	mov	x2, x21
   13a28:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13a2c:	mov	x20, x0
   13a30:	cbnz	x0, 138c8 <PyFloat_FromString@plt+0xce38>
   13a34:	ldr	x23, [sp, #48]
   13a38:	b	13928 <PyFloat_FromString@plt+0xce98>
   13a3c:	ldr	x0, [x20]
   13a40:	sub	x0, x0, #0x1
   13a44:	str	x0, [x20]
   13a48:	cbz	x0, 13aa4 <PyFloat_FromString@plt+0xd014>
   13a4c:	ldr	x0, [x22]
   13a50:	sub	x0, x0, #0x1
   13a54:	str	x0, [x22]
   13a58:	cbnz	x0, 13924 <PyFloat_FromString@plt+0xce94>
   13a5c:	mov	x0, x22
   13a60:	bl	65d0 <_Py_Dealloc@plt>
   13a64:	ldr	x23, [sp, #48]
   13a68:	b	138a8 <PyFloat_FromString@plt+0xce18>
   13a6c:	ldr	x0, [x19]
   13a70:	sub	x0, x0, #0x1
   13a74:	str	x0, [x19]
   13a78:	cbnz	x0, 13924 <PyFloat_FromString@plt+0xce94>
   13a7c:	mov	x0, x19
   13a80:	mov	x19, #0x0                   	// #0
   13a84:	bl	65d0 <_Py_Dealloc@plt>
   13a88:	ldr	x23, [sp, #48]
   13a8c:	b	138a8 <PyFloat_FromString@plt+0xce18>
   13a90:	mov	x0, x20
   13a94:	mov	x19, #0x0                   	// #0
   13a98:	bl	65d0 <_Py_Dealloc@plt>
   13a9c:	ldr	x23, [sp, #48]
   13aa0:	b	138a8 <PyFloat_FromString@plt+0xce18>
   13aa4:	mov	x0, x20
   13aa8:	bl	65d0 <_Py_Dealloc@plt>
   13aac:	b	13a4c <PyFloat_FromString@plt+0xcfbc>
   13ab0:	stp	x29, x30, [sp, #-96]!
   13ab4:	mov	x29, sp
   13ab8:	add	x3, sp, #0x58
   13abc:	add	x2, sp, #0x50
   13ac0:	stp	x19, x20, [sp, #16]
   13ac4:	stp	x21, x22, [sp, #32]
   13ac8:	mov	x21, x0
   13acc:	mov	x0, x1
   13ad0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13ad4:	add	x1, x1, #0xdc0
   13ad8:	str	wzr, [sp, #76]
   13adc:	bl	68e0 <PyArg_ParseTuple@plt>
   13ae0:	cbz	w0, 13bc0 <PyFloat_FromString@plt+0xd130>
   13ae4:	ldr	x20, [sp, #80]
   13ae8:	ldr	x0, [x20, #8]
   13aec:	str	x23, [sp, #48]
   13af0:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   13af4:	add	x19, x23, #0x328
   13af8:	add	x19, x19, #0x1a0
   13afc:	cmp	x0, x19
   13b00:	b.eq	13b54 <PyFloat_FromString@plt+0xd0c4>  // b.none
   13b04:	mov	x1, x19
   13b08:	bl	69c0 <PyType_IsSubtype@plt>
   13b0c:	cbnz	w0, 13b54 <PyFloat_FromString@plt+0xd0c4>
   13b10:	ldr	x2, [x20, #8]
   13b14:	ldr	x0, [x2, #168]
   13b18:	tbnz	w0, #24, 13cb4 <PyFloat_FromString@plt+0xd224>
   13b1c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13b20:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13b24:	ldr	x2, [x2, #24]
   13b28:	add	x1, x1, #0xb70
   13b2c:	ldr	x0, [x0, #3936]
   13b30:	mov	x19, #0x0                   	// #0
   13b34:	ldr	x0, [x0]
   13b38:	bl	6a10 <PyErr_Format@plt>
   13b3c:	ldr	x23, [sp, #48]
   13b40:	mov	x0, x19
   13b44:	ldp	x19, x20, [sp, #16]
   13b48:	ldp	x21, x22, [sp, #32]
   13b4c:	ldp	x29, x30, [sp], #96
   13b50:	ret
   13b54:	ldr	x0, [x20]
   13b58:	add	x0, x0, #0x1
   13b5c:	str	x0, [x20]
   13b60:	ldr	x22, [sp, #88]
   13b64:	add	x19, x23, #0x328
   13b68:	add	x19, x19, #0x1a0
   13b6c:	ldr	x0, [x22, #8]
   13b70:	cmp	x0, x19
   13b74:	b.eq	13bd8 <PyFloat_FromString@plt+0xd148>  // b.none
   13b78:	mov	x1, x19
   13b7c:	bl	69c0 <PyType_IsSubtype@plt>
   13b80:	cbnz	w0, 13bd8 <PyFloat_FromString@plt+0xd148>
   13b84:	ldr	x2, [x22, #8]
   13b88:	ldr	x0, [x2, #168]
   13b8c:	tbnz	w0, #24, 13c98 <PyFloat_FromString@plt+0xd208>
   13b90:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13b94:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13b98:	ldr	x2, [x2, #24]
   13b9c:	add	x1, x1, #0xb70
   13ba0:	ldr	x0, [x0, #3936]
   13ba4:	ldr	x0, [x0]
   13ba8:	bl	6a10 <PyErr_Format@plt>
   13bac:	ldr	x0, [x20]
   13bb0:	sub	x0, x0, #0x1
   13bb4:	str	x0, [x20]
   13bb8:	cbz	x0, 13d28 <PyFloat_FromString@plt+0xd298>
   13bbc:	ldr	x23, [sp, #48]
   13bc0:	mov	x19, #0x0                   	// #0
   13bc4:	mov	x0, x19
   13bc8:	ldp	x19, x20, [sp, #16]
   13bcc:	ldp	x21, x22, [sp, #32]
   13bd0:	ldp	x29, x30, [sp], #96
   13bd4:	ret
   13bd8:	ldr	x0, [x22]
   13bdc:	add	x0, x0, #0x1
   13be0:	str	x0, [x22]
   13be4:	add	x0, x23, #0x328
   13be8:	add	x0, x0, #0x1a0
   13bec:	bl	6950 <_PyObject_New@plt>
   13bf0:	mov	x19, x0
   13bf4:	cbz	x0, 13cd4 <PyFloat_FromString@plt+0xd244>
   13bf8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   13bfc:	mov	x2, #0xffffffffffffffff    	// #-1
   13c00:	mov	w1, #0x30                  	// #48
   13c04:	str	x2, [x19, #16]
   13c08:	ldr	q0, [x0, #2128]
   13c0c:	add	x0, x19, #0x48
   13c10:	strb	w1, [x19, #24]
   13c14:	add	x4, sp, #0x4c
   13c18:	stp	xzr, xzr, [x19, #32]
   13c1c:	add	x3, x21, #0x10
   13c20:	add	x1, x20, #0x18
   13c24:	str	x0, [x19, #64]
   13c28:	add	x2, x22, #0x18
   13c2c:	add	x0, x19, #0x18
   13c30:	str	q0, [x19, #48]
   13c34:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   13c38:	ldr	x0, [x20]
   13c3c:	sub	x0, x0, #0x1
   13c40:	str	x0, [x20]
   13c44:	cbz	x0, 13c80 <PyFloat_FromString@plt+0xd1f0>
   13c48:	ldr	x0, [x22]
   13c4c:	sub	x0, x0, #0x1
   13c50:	str	x0, [x22]
   13c54:	cbz	x0, 13c8c <PyFloat_FromString@plt+0xd1fc>
   13c58:	ldr	w1, [sp, #76]
   13c5c:	mov	x0, x21
   13c60:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   13c64:	cbnz	w0, 13d04 <PyFloat_FromString@plt+0xd274>
   13c68:	mov	x0, x19
   13c6c:	ldp	x19, x20, [sp, #16]
   13c70:	ldp	x21, x22, [sp, #32]
   13c74:	ldr	x23, [sp, #48]
   13c78:	ldp	x29, x30, [sp], #96
   13c7c:	ret
   13c80:	mov	x0, x20
   13c84:	bl	65d0 <_Py_Dealloc@plt>
   13c88:	b	13c48 <PyFloat_FromString@plt+0xd1b8>
   13c8c:	mov	x0, x22
   13c90:	bl	65d0 <_Py_Dealloc@plt>
   13c94:	b	13c58 <PyFloat_FromString@plt+0xd1c8>
   13c98:	mov	x1, x22
   13c9c:	mov	x0, x19
   13ca0:	mov	x2, x21
   13ca4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13ca8:	mov	x22, x0
   13cac:	cbnz	x0, 13be4 <PyFloat_FromString@plt+0xd154>
   13cb0:	b	13bac <PyFloat_FromString@plt+0xd11c>
   13cb4:	mov	x1, x20
   13cb8:	mov	x0, x19
   13cbc:	mov	x2, x21
   13cc0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13cc4:	mov	x20, x0
   13cc8:	cbnz	x0, 13b60 <PyFloat_FromString@plt+0xd0d0>
   13ccc:	ldr	x23, [sp, #48]
   13cd0:	b	13bc0 <PyFloat_FromString@plt+0xd130>
   13cd4:	ldr	x0, [x20]
   13cd8:	sub	x0, x0, #0x1
   13cdc:	str	x0, [x20]
   13ce0:	cbz	x0, 13d3c <PyFloat_FromString@plt+0xd2ac>
   13ce4:	ldr	x0, [x22]
   13ce8:	sub	x0, x0, #0x1
   13cec:	str	x0, [x22]
   13cf0:	cbnz	x0, 13bbc <PyFloat_FromString@plt+0xd12c>
   13cf4:	mov	x0, x22
   13cf8:	bl	65d0 <_Py_Dealloc@plt>
   13cfc:	ldr	x23, [sp, #48]
   13d00:	b	13b40 <PyFloat_FromString@plt+0xd0b0>
   13d04:	ldr	x0, [x19]
   13d08:	sub	x0, x0, #0x1
   13d0c:	str	x0, [x19]
   13d10:	cbnz	x0, 13bbc <PyFloat_FromString@plt+0xd12c>
   13d14:	mov	x0, x19
   13d18:	mov	x19, #0x0                   	// #0
   13d1c:	bl	65d0 <_Py_Dealloc@plt>
   13d20:	ldr	x23, [sp, #48]
   13d24:	b	13b40 <PyFloat_FromString@plt+0xd0b0>
   13d28:	mov	x0, x20
   13d2c:	mov	x19, #0x0                   	// #0
   13d30:	bl	65d0 <_Py_Dealloc@plt>
   13d34:	ldr	x23, [sp, #48]
   13d38:	b	13b40 <PyFloat_FromString@plt+0xd0b0>
   13d3c:	mov	x0, x20
   13d40:	bl	65d0 <_Py_Dealloc@plt>
   13d44:	b	13ce4 <PyFloat_FromString@plt+0xd254>
   13d48:	stp	x29, x30, [sp, #-96]!
   13d4c:	mov	x29, sp
   13d50:	add	x3, sp, #0x58
   13d54:	add	x2, sp, #0x50
   13d58:	stp	x19, x20, [sp, #16]
   13d5c:	stp	x21, x22, [sp, #32]
   13d60:	mov	x21, x0
   13d64:	mov	x0, x1
   13d68:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13d6c:	add	x1, x1, #0xdc0
   13d70:	str	wzr, [sp, #76]
   13d74:	bl	68e0 <PyArg_ParseTuple@plt>
   13d78:	cbz	w0, 13e58 <PyFloat_FromString@plt+0xd3c8>
   13d7c:	ldr	x20, [sp, #80]
   13d80:	ldr	x0, [x20, #8]
   13d84:	str	x23, [sp, #48]
   13d88:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   13d8c:	add	x19, x23, #0x328
   13d90:	add	x19, x19, #0x1a0
   13d94:	cmp	x0, x19
   13d98:	b.eq	13dec <PyFloat_FromString@plt+0xd35c>  // b.none
   13d9c:	mov	x1, x19
   13da0:	bl	69c0 <PyType_IsSubtype@plt>
   13da4:	cbnz	w0, 13dec <PyFloat_FromString@plt+0xd35c>
   13da8:	ldr	x2, [x20, #8]
   13dac:	ldr	x0, [x2, #168]
   13db0:	tbnz	w0, #24, 13f4c <PyFloat_FromString@plt+0xd4bc>
   13db4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13db8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13dbc:	ldr	x2, [x2, #24]
   13dc0:	add	x1, x1, #0xb70
   13dc4:	ldr	x0, [x0, #3936]
   13dc8:	mov	x19, #0x0                   	// #0
   13dcc:	ldr	x0, [x0]
   13dd0:	bl	6a10 <PyErr_Format@plt>
   13dd4:	ldr	x23, [sp, #48]
   13dd8:	mov	x0, x19
   13ddc:	ldp	x19, x20, [sp, #16]
   13de0:	ldp	x21, x22, [sp, #32]
   13de4:	ldp	x29, x30, [sp], #96
   13de8:	ret
   13dec:	ldr	x0, [x20]
   13df0:	add	x0, x0, #0x1
   13df4:	str	x0, [x20]
   13df8:	ldr	x22, [sp, #88]
   13dfc:	add	x19, x23, #0x328
   13e00:	add	x19, x19, #0x1a0
   13e04:	ldr	x0, [x22, #8]
   13e08:	cmp	x0, x19
   13e0c:	b.eq	13e70 <PyFloat_FromString@plt+0xd3e0>  // b.none
   13e10:	mov	x1, x19
   13e14:	bl	69c0 <PyType_IsSubtype@plt>
   13e18:	cbnz	w0, 13e70 <PyFloat_FromString@plt+0xd3e0>
   13e1c:	ldr	x2, [x22, #8]
   13e20:	ldr	x0, [x2, #168]
   13e24:	tbnz	w0, #24, 13f30 <PyFloat_FromString@plt+0xd4a0>
   13e28:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   13e2c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   13e30:	ldr	x2, [x2, #24]
   13e34:	add	x1, x1, #0xb70
   13e38:	ldr	x0, [x0, #3936]
   13e3c:	ldr	x0, [x0]
   13e40:	bl	6a10 <PyErr_Format@plt>
   13e44:	ldr	x0, [x20]
   13e48:	sub	x0, x0, #0x1
   13e4c:	str	x0, [x20]
   13e50:	cbz	x0, 13fc0 <PyFloat_FromString@plt+0xd530>
   13e54:	ldr	x23, [sp, #48]
   13e58:	mov	x19, #0x0                   	// #0
   13e5c:	mov	x0, x19
   13e60:	ldp	x19, x20, [sp, #16]
   13e64:	ldp	x21, x22, [sp, #32]
   13e68:	ldp	x29, x30, [sp], #96
   13e6c:	ret
   13e70:	ldr	x0, [x22]
   13e74:	add	x0, x0, #0x1
   13e78:	str	x0, [x22]
   13e7c:	add	x0, x23, #0x328
   13e80:	add	x0, x0, #0x1a0
   13e84:	bl	6950 <_PyObject_New@plt>
   13e88:	mov	x19, x0
   13e8c:	cbz	x0, 13f6c <PyFloat_FromString@plt+0xd4dc>
   13e90:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   13e94:	mov	x2, #0xffffffffffffffff    	// #-1
   13e98:	mov	w1, #0x30                  	// #48
   13e9c:	str	x2, [x19, #16]
   13ea0:	ldr	q0, [x0, #2128]
   13ea4:	add	x0, x19, #0x48
   13ea8:	strb	w1, [x19, #24]
   13eac:	add	x4, sp, #0x4c
   13eb0:	stp	xzr, xzr, [x19, #32]
   13eb4:	add	x3, x21, #0x10
   13eb8:	add	x1, x20, #0x18
   13ebc:	str	x0, [x19, #64]
   13ec0:	add	x2, x22, #0x18
   13ec4:	add	x0, x19, #0x18
   13ec8:	str	q0, [x19, #48]
   13ecc:	bl	3c688 <PyInit__decimal@@Base+0x20448>
   13ed0:	ldr	x0, [x20]
   13ed4:	sub	x0, x0, #0x1
   13ed8:	str	x0, [x20]
   13edc:	cbz	x0, 13f18 <PyFloat_FromString@plt+0xd488>
   13ee0:	ldr	x0, [x22]
   13ee4:	sub	x0, x0, #0x1
   13ee8:	str	x0, [x22]
   13eec:	cbz	x0, 13f24 <PyFloat_FromString@plt+0xd494>
   13ef0:	ldr	w1, [sp, #76]
   13ef4:	mov	x0, x21
   13ef8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   13efc:	cbnz	w0, 13f9c <PyFloat_FromString@plt+0xd50c>
   13f00:	mov	x0, x19
   13f04:	ldp	x19, x20, [sp, #16]
   13f08:	ldp	x21, x22, [sp, #32]
   13f0c:	ldr	x23, [sp, #48]
   13f10:	ldp	x29, x30, [sp], #96
   13f14:	ret
   13f18:	mov	x0, x20
   13f1c:	bl	65d0 <_Py_Dealloc@plt>
   13f20:	b	13ee0 <PyFloat_FromString@plt+0xd450>
   13f24:	mov	x0, x22
   13f28:	bl	65d0 <_Py_Dealloc@plt>
   13f2c:	b	13ef0 <PyFloat_FromString@plt+0xd460>
   13f30:	mov	x1, x22
   13f34:	mov	x0, x19
   13f38:	mov	x2, x21
   13f3c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13f40:	mov	x22, x0
   13f44:	cbnz	x0, 13e7c <PyFloat_FromString@plt+0xd3ec>
   13f48:	b	13e44 <PyFloat_FromString@plt+0xd3b4>
   13f4c:	mov	x1, x20
   13f50:	mov	x0, x19
   13f54:	mov	x2, x21
   13f58:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   13f5c:	mov	x20, x0
   13f60:	cbnz	x0, 13df8 <PyFloat_FromString@plt+0xd368>
   13f64:	ldr	x23, [sp, #48]
   13f68:	b	13e58 <PyFloat_FromString@plt+0xd3c8>
   13f6c:	ldr	x0, [x20]
   13f70:	sub	x0, x0, #0x1
   13f74:	str	x0, [x20]
   13f78:	cbz	x0, 13fd4 <PyFloat_FromString@plt+0xd544>
   13f7c:	ldr	x0, [x22]
   13f80:	sub	x0, x0, #0x1
   13f84:	str	x0, [x22]
   13f88:	cbnz	x0, 13e54 <PyFloat_FromString@plt+0xd3c4>
   13f8c:	mov	x0, x22
   13f90:	bl	65d0 <_Py_Dealloc@plt>
   13f94:	ldr	x23, [sp, #48]
   13f98:	b	13dd8 <PyFloat_FromString@plt+0xd348>
   13f9c:	ldr	x0, [x19]
   13fa0:	sub	x0, x0, #0x1
   13fa4:	str	x0, [x19]
   13fa8:	cbnz	x0, 13e54 <PyFloat_FromString@plt+0xd3c4>
   13fac:	mov	x0, x19
   13fb0:	mov	x19, #0x0                   	// #0
   13fb4:	bl	65d0 <_Py_Dealloc@plt>
   13fb8:	ldr	x23, [sp, #48]
   13fbc:	b	13dd8 <PyFloat_FromString@plt+0xd348>
   13fc0:	mov	x0, x20
   13fc4:	mov	x19, #0x0                   	// #0
   13fc8:	bl	65d0 <_Py_Dealloc@plt>
   13fcc:	ldr	x23, [sp, #48]
   13fd0:	b	13dd8 <PyFloat_FromString@plt+0xd348>
   13fd4:	mov	x0, x20
   13fd8:	bl	65d0 <_Py_Dealloc@plt>
   13fdc:	b	13f7c <PyFloat_FromString@plt+0xd4ec>
   13fe0:	stp	x29, x30, [sp, #-96]!
   13fe4:	mov	x29, sp
   13fe8:	add	x3, sp, #0x58
   13fec:	add	x2, sp, #0x50
   13ff0:	stp	x19, x20, [sp, #16]
   13ff4:	stp	x21, x22, [sp, #32]
   13ff8:	mov	x21, x0
   13ffc:	mov	x0, x1
   14000:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14004:	add	x1, x1, #0xdc0
   14008:	str	wzr, [sp, #76]
   1400c:	bl	68e0 <PyArg_ParseTuple@plt>
   14010:	cbz	w0, 140f0 <PyFloat_FromString@plt+0xd660>
   14014:	ldr	x20, [sp, #80]
   14018:	ldr	x0, [x20, #8]
   1401c:	str	x23, [sp, #48]
   14020:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   14024:	add	x19, x23, #0x328
   14028:	add	x19, x19, #0x1a0
   1402c:	cmp	x0, x19
   14030:	b.eq	14084 <PyFloat_FromString@plt+0xd5f4>  // b.none
   14034:	mov	x1, x19
   14038:	bl	69c0 <PyType_IsSubtype@plt>
   1403c:	cbnz	w0, 14084 <PyFloat_FromString@plt+0xd5f4>
   14040:	ldr	x2, [x20, #8]
   14044:	ldr	x0, [x2, #168]
   14048:	tbnz	w0, #24, 141e4 <PyFloat_FromString@plt+0xd754>
   1404c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14050:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14054:	ldr	x2, [x2, #24]
   14058:	add	x1, x1, #0xb70
   1405c:	ldr	x0, [x0, #3936]
   14060:	mov	x19, #0x0                   	// #0
   14064:	ldr	x0, [x0]
   14068:	bl	6a10 <PyErr_Format@plt>
   1406c:	ldr	x23, [sp, #48]
   14070:	mov	x0, x19
   14074:	ldp	x19, x20, [sp, #16]
   14078:	ldp	x21, x22, [sp, #32]
   1407c:	ldp	x29, x30, [sp], #96
   14080:	ret
   14084:	ldr	x0, [x20]
   14088:	add	x0, x0, #0x1
   1408c:	str	x0, [x20]
   14090:	ldr	x22, [sp, #88]
   14094:	add	x19, x23, #0x328
   14098:	add	x19, x19, #0x1a0
   1409c:	ldr	x0, [x22, #8]
   140a0:	cmp	x0, x19
   140a4:	b.eq	14108 <PyFloat_FromString@plt+0xd678>  // b.none
   140a8:	mov	x1, x19
   140ac:	bl	69c0 <PyType_IsSubtype@plt>
   140b0:	cbnz	w0, 14108 <PyFloat_FromString@plt+0xd678>
   140b4:	ldr	x2, [x22, #8]
   140b8:	ldr	x0, [x2, #168]
   140bc:	tbnz	w0, #24, 141c8 <PyFloat_FromString@plt+0xd738>
   140c0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   140c4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   140c8:	ldr	x2, [x2, #24]
   140cc:	add	x1, x1, #0xb70
   140d0:	ldr	x0, [x0, #3936]
   140d4:	ldr	x0, [x0]
   140d8:	bl	6a10 <PyErr_Format@plt>
   140dc:	ldr	x0, [x20]
   140e0:	sub	x0, x0, #0x1
   140e4:	str	x0, [x20]
   140e8:	cbz	x0, 14258 <PyFloat_FromString@plt+0xd7c8>
   140ec:	ldr	x23, [sp, #48]
   140f0:	mov	x19, #0x0                   	// #0
   140f4:	mov	x0, x19
   140f8:	ldp	x19, x20, [sp, #16]
   140fc:	ldp	x21, x22, [sp, #32]
   14100:	ldp	x29, x30, [sp], #96
   14104:	ret
   14108:	ldr	x0, [x22]
   1410c:	add	x0, x0, #0x1
   14110:	str	x0, [x22]
   14114:	add	x0, x23, #0x328
   14118:	add	x0, x0, #0x1a0
   1411c:	bl	6950 <_PyObject_New@plt>
   14120:	mov	x19, x0
   14124:	cbz	x0, 14204 <PyFloat_FromString@plt+0xd774>
   14128:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1412c:	mov	x2, #0xffffffffffffffff    	// #-1
   14130:	mov	w1, #0x30                  	// #48
   14134:	str	x2, [x19, #16]
   14138:	ldr	q0, [x0, #2128]
   1413c:	add	x0, x19, #0x48
   14140:	strb	w1, [x19, #24]
   14144:	add	x4, sp, #0x4c
   14148:	stp	xzr, xzr, [x19, #32]
   1414c:	add	x3, x21, #0x10
   14150:	add	x1, x20, #0x18
   14154:	str	x0, [x19, #64]
   14158:	add	x2, x22, #0x18
   1415c:	add	x0, x19, #0x18
   14160:	str	q0, [x19, #48]
   14164:	bl	361c8 <PyInit__decimal@@Base+0x19f88>
   14168:	ldr	x0, [x20]
   1416c:	sub	x0, x0, #0x1
   14170:	str	x0, [x20]
   14174:	cbz	x0, 141b0 <PyFloat_FromString@plt+0xd720>
   14178:	ldr	x0, [x22]
   1417c:	sub	x0, x0, #0x1
   14180:	str	x0, [x22]
   14184:	cbz	x0, 141bc <PyFloat_FromString@plt+0xd72c>
   14188:	ldr	w1, [sp, #76]
   1418c:	mov	x0, x21
   14190:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   14194:	cbnz	w0, 14234 <PyFloat_FromString@plt+0xd7a4>
   14198:	mov	x0, x19
   1419c:	ldp	x19, x20, [sp, #16]
   141a0:	ldp	x21, x22, [sp, #32]
   141a4:	ldr	x23, [sp, #48]
   141a8:	ldp	x29, x30, [sp], #96
   141ac:	ret
   141b0:	mov	x0, x20
   141b4:	bl	65d0 <_Py_Dealloc@plt>
   141b8:	b	14178 <PyFloat_FromString@plt+0xd6e8>
   141bc:	mov	x0, x22
   141c0:	bl	65d0 <_Py_Dealloc@plt>
   141c4:	b	14188 <PyFloat_FromString@plt+0xd6f8>
   141c8:	mov	x1, x22
   141cc:	mov	x0, x19
   141d0:	mov	x2, x21
   141d4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   141d8:	mov	x22, x0
   141dc:	cbnz	x0, 14114 <PyFloat_FromString@plt+0xd684>
   141e0:	b	140dc <PyFloat_FromString@plt+0xd64c>
   141e4:	mov	x1, x20
   141e8:	mov	x0, x19
   141ec:	mov	x2, x21
   141f0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   141f4:	mov	x20, x0
   141f8:	cbnz	x0, 14090 <PyFloat_FromString@plt+0xd600>
   141fc:	ldr	x23, [sp, #48]
   14200:	b	140f0 <PyFloat_FromString@plt+0xd660>
   14204:	ldr	x0, [x20]
   14208:	sub	x0, x0, #0x1
   1420c:	str	x0, [x20]
   14210:	cbz	x0, 1426c <PyFloat_FromString@plt+0xd7dc>
   14214:	ldr	x0, [x22]
   14218:	sub	x0, x0, #0x1
   1421c:	str	x0, [x22]
   14220:	cbnz	x0, 140ec <PyFloat_FromString@plt+0xd65c>
   14224:	mov	x0, x22
   14228:	bl	65d0 <_Py_Dealloc@plt>
   1422c:	ldr	x23, [sp, #48]
   14230:	b	14070 <PyFloat_FromString@plt+0xd5e0>
   14234:	ldr	x0, [x19]
   14238:	sub	x0, x0, #0x1
   1423c:	str	x0, [x19]
   14240:	cbnz	x0, 140ec <PyFloat_FromString@plt+0xd65c>
   14244:	mov	x0, x19
   14248:	mov	x19, #0x0                   	// #0
   1424c:	bl	65d0 <_Py_Dealloc@plt>
   14250:	ldr	x23, [sp, #48]
   14254:	b	14070 <PyFloat_FromString@plt+0xd5e0>
   14258:	mov	x0, x20
   1425c:	mov	x19, #0x0                   	// #0
   14260:	bl	65d0 <_Py_Dealloc@plt>
   14264:	ldr	x23, [sp, #48]
   14268:	b	14070 <PyFloat_FromString@plt+0xd5e0>
   1426c:	mov	x0, x20
   14270:	bl	65d0 <_Py_Dealloc@plt>
   14274:	b	14214 <PyFloat_FromString@plt+0xd784>
   14278:	stp	x29, x30, [sp, #-96]!
   1427c:	mov	x29, sp
   14280:	add	x3, sp, #0x58
   14284:	add	x2, sp, #0x50
   14288:	stp	x19, x20, [sp, #16]
   1428c:	stp	x21, x22, [sp, #32]
   14290:	mov	x21, x0
   14294:	mov	x0, x1
   14298:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1429c:	add	x1, x1, #0xdc0
   142a0:	str	wzr, [sp, #76]
   142a4:	bl	68e0 <PyArg_ParseTuple@plt>
   142a8:	cbz	w0, 14388 <PyFloat_FromString@plt+0xd8f8>
   142ac:	ldr	x20, [sp, #80]
   142b0:	ldr	x0, [x20, #8]
   142b4:	str	x23, [sp, #48]
   142b8:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   142bc:	add	x19, x23, #0x328
   142c0:	add	x19, x19, #0x1a0
   142c4:	cmp	x0, x19
   142c8:	b.eq	1431c <PyFloat_FromString@plt+0xd88c>  // b.none
   142cc:	mov	x1, x19
   142d0:	bl	69c0 <PyType_IsSubtype@plt>
   142d4:	cbnz	w0, 1431c <PyFloat_FromString@plt+0xd88c>
   142d8:	ldr	x2, [x20, #8]
   142dc:	ldr	x0, [x2, #168]
   142e0:	tbnz	w0, #24, 1447c <PyFloat_FromString@plt+0xd9ec>
   142e4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   142e8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   142ec:	ldr	x2, [x2, #24]
   142f0:	add	x1, x1, #0xb70
   142f4:	ldr	x0, [x0, #3936]
   142f8:	mov	x19, #0x0                   	// #0
   142fc:	ldr	x0, [x0]
   14300:	bl	6a10 <PyErr_Format@plt>
   14304:	ldr	x23, [sp, #48]
   14308:	mov	x0, x19
   1430c:	ldp	x19, x20, [sp, #16]
   14310:	ldp	x21, x22, [sp, #32]
   14314:	ldp	x29, x30, [sp], #96
   14318:	ret
   1431c:	ldr	x0, [x20]
   14320:	add	x0, x0, #0x1
   14324:	str	x0, [x20]
   14328:	ldr	x22, [sp, #88]
   1432c:	add	x19, x23, #0x328
   14330:	add	x19, x19, #0x1a0
   14334:	ldr	x0, [x22, #8]
   14338:	cmp	x0, x19
   1433c:	b.eq	143a0 <PyFloat_FromString@plt+0xd910>  // b.none
   14340:	mov	x1, x19
   14344:	bl	69c0 <PyType_IsSubtype@plt>
   14348:	cbnz	w0, 143a0 <PyFloat_FromString@plt+0xd910>
   1434c:	ldr	x2, [x22, #8]
   14350:	ldr	x0, [x2, #168]
   14354:	tbnz	w0, #24, 14460 <PyFloat_FromString@plt+0xd9d0>
   14358:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1435c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14360:	ldr	x2, [x2, #24]
   14364:	add	x1, x1, #0xb70
   14368:	ldr	x0, [x0, #3936]
   1436c:	ldr	x0, [x0]
   14370:	bl	6a10 <PyErr_Format@plt>
   14374:	ldr	x0, [x20]
   14378:	sub	x0, x0, #0x1
   1437c:	str	x0, [x20]
   14380:	cbz	x0, 144f0 <PyFloat_FromString@plt+0xda60>
   14384:	ldr	x23, [sp, #48]
   14388:	mov	x19, #0x0                   	// #0
   1438c:	mov	x0, x19
   14390:	ldp	x19, x20, [sp, #16]
   14394:	ldp	x21, x22, [sp, #32]
   14398:	ldp	x29, x30, [sp], #96
   1439c:	ret
   143a0:	ldr	x0, [x22]
   143a4:	add	x0, x0, #0x1
   143a8:	str	x0, [x22]
   143ac:	add	x0, x23, #0x328
   143b0:	add	x0, x0, #0x1a0
   143b4:	bl	6950 <_PyObject_New@plt>
   143b8:	mov	x19, x0
   143bc:	cbz	x0, 1449c <PyFloat_FromString@plt+0xda0c>
   143c0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   143c4:	mov	x2, #0xffffffffffffffff    	// #-1
   143c8:	mov	w1, #0x30                  	// #48
   143cc:	str	x2, [x19, #16]
   143d0:	ldr	q0, [x0, #2128]
   143d4:	add	x0, x19, #0x48
   143d8:	strb	w1, [x19, #24]
   143dc:	add	x4, sp, #0x4c
   143e0:	stp	xzr, xzr, [x19, #32]
   143e4:	add	x3, x21, #0x10
   143e8:	add	x1, x20, #0x18
   143ec:	str	x0, [x19, #64]
   143f0:	add	x2, x22, #0x18
   143f4:	add	x0, x19, #0x18
   143f8:	str	q0, [x19, #48]
   143fc:	bl	36410 <PyInit__decimal@@Base+0x1a1d0>
   14400:	ldr	x0, [x20]
   14404:	sub	x0, x0, #0x1
   14408:	str	x0, [x20]
   1440c:	cbz	x0, 14448 <PyFloat_FromString@plt+0xd9b8>
   14410:	ldr	x0, [x22]
   14414:	sub	x0, x0, #0x1
   14418:	str	x0, [x22]
   1441c:	cbz	x0, 14454 <PyFloat_FromString@plt+0xd9c4>
   14420:	ldr	w1, [sp, #76]
   14424:	mov	x0, x21
   14428:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1442c:	cbnz	w0, 144cc <PyFloat_FromString@plt+0xda3c>
   14430:	mov	x0, x19
   14434:	ldp	x19, x20, [sp, #16]
   14438:	ldp	x21, x22, [sp, #32]
   1443c:	ldr	x23, [sp, #48]
   14440:	ldp	x29, x30, [sp], #96
   14444:	ret
   14448:	mov	x0, x20
   1444c:	bl	65d0 <_Py_Dealloc@plt>
   14450:	b	14410 <PyFloat_FromString@plt+0xd980>
   14454:	mov	x0, x22
   14458:	bl	65d0 <_Py_Dealloc@plt>
   1445c:	b	14420 <PyFloat_FromString@plt+0xd990>
   14460:	mov	x1, x22
   14464:	mov	x0, x19
   14468:	mov	x2, x21
   1446c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14470:	mov	x22, x0
   14474:	cbnz	x0, 143ac <PyFloat_FromString@plt+0xd91c>
   14478:	b	14374 <PyFloat_FromString@plt+0xd8e4>
   1447c:	mov	x1, x20
   14480:	mov	x0, x19
   14484:	mov	x2, x21
   14488:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1448c:	mov	x20, x0
   14490:	cbnz	x0, 14328 <PyFloat_FromString@plt+0xd898>
   14494:	ldr	x23, [sp, #48]
   14498:	b	14388 <PyFloat_FromString@plt+0xd8f8>
   1449c:	ldr	x0, [x20]
   144a0:	sub	x0, x0, #0x1
   144a4:	str	x0, [x20]
   144a8:	cbz	x0, 14504 <PyFloat_FromString@plt+0xda74>
   144ac:	ldr	x0, [x22]
   144b0:	sub	x0, x0, #0x1
   144b4:	str	x0, [x22]
   144b8:	cbnz	x0, 14384 <PyFloat_FromString@plt+0xd8f4>
   144bc:	mov	x0, x22
   144c0:	bl	65d0 <_Py_Dealloc@plt>
   144c4:	ldr	x23, [sp, #48]
   144c8:	b	14308 <PyFloat_FromString@plt+0xd878>
   144cc:	ldr	x0, [x19]
   144d0:	sub	x0, x0, #0x1
   144d4:	str	x0, [x19]
   144d8:	cbnz	x0, 14384 <PyFloat_FromString@plt+0xd8f4>
   144dc:	mov	x0, x19
   144e0:	mov	x19, #0x0                   	// #0
   144e4:	bl	65d0 <_Py_Dealloc@plt>
   144e8:	ldr	x23, [sp, #48]
   144ec:	b	14308 <PyFloat_FromString@plt+0xd878>
   144f0:	mov	x0, x20
   144f4:	mov	x19, #0x0                   	// #0
   144f8:	bl	65d0 <_Py_Dealloc@plt>
   144fc:	ldr	x23, [sp, #48]
   14500:	b	14308 <PyFloat_FromString@plt+0xd878>
   14504:	mov	x0, x20
   14508:	bl	65d0 <_Py_Dealloc@plt>
   1450c:	b	144ac <PyFloat_FromString@plt+0xda1c>
   14510:	stp	x29, x30, [sp, #-96]!
   14514:	mov	x29, sp
   14518:	add	x3, sp, #0x58
   1451c:	add	x2, sp, #0x50
   14520:	stp	x19, x20, [sp, #16]
   14524:	stp	x21, x22, [sp, #32]
   14528:	mov	x21, x0
   1452c:	mov	x0, x1
   14530:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14534:	add	x1, x1, #0xdc0
   14538:	str	wzr, [sp, #76]
   1453c:	bl	68e0 <PyArg_ParseTuple@plt>
   14540:	cbz	w0, 14620 <PyFloat_FromString@plt+0xdb90>
   14544:	ldr	x20, [sp, #80]
   14548:	ldr	x0, [x20, #8]
   1454c:	str	x23, [sp, #48]
   14550:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   14554:	add	x19, x23, #0x328
   14558:	add	x19, x19, #0x1a0
   1455c:	cmp	x0, x19
   14560:	b.eq	145b4 <PyFloat_FromString@plt+0xdb24>  // b.none
   14564:	mov	x1, x19
   14568:	bl	69c0 <PyType_IsSubtype@plt>
   1456c:	cbnz	w0, 145b4 <PyFloat_FromString@plt+0xdb24>
   14570:	ldr	x2, [x20, #8]
   14574:	ldr	x0, [x2, #168]
   14578:	tbnz	w0, #24, 14714 <PyFloat_FromString@plt+0xdc84>
   1457c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14580:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14584:	ldr	x2, [x2, #24]
   14588:	add	x1, x1, #0xb70
   1458c:	ldr	x0, [x0, #3936]
   14590:	mov	x19, #0x0                   	// #0
   14594:	ldr	x0, [x0]
   14598:	bl	6a10 <PyErr_Format@plt>
   1459c:	ldr	x23, [sp, #48]
   145a0:	mov	x0, x19
   145a4:	ldp	x19, x20, [sp, #16]
   145a8:	ldp	x21, x22, [sp, #32]
   145ac:	ldp	x29, x30, [sp], #96
   145b0:	ret
   145b4:	ldr	x0, [x20]
   145b8:	add	x0, x0, #0x1
   145bc:	str	x0, [x20]
   145c0:	ldr	x22, [sp, #88]
   145c4:	add	x19, x23, #0x328
   145c8:	add	x19, x19, #0x1a0
   145cc:	ldr	x0, [x22, #8]
   145d0:	cmp	x0, x19
   145d4:	b.eq	14638 <PyFloat_FromString@plt+0xdba8>  // b.none
   145d8:	mov	x1, x19
   145dc:	bl	69c0 <PyType_IsSubtype@plt>
   145e0:	cbnz	w0, 14638 <PyFloat_FromString@plt+0xdba8>
   145e4:	ldr	x2, [x22, #8]
   145e8:	ldr	x0, [x2, #168]
   145ec:	tbnz	w0, #24, 146f8 <PyFloat_FromString@plt+0xdc68>
   145f0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   145f4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   145f8:	ldr	x2, [x2, #24]
   145fc:	add	x1, x1, #0xb70
   14600:	ldr	x0, [x0, #3936]
   14604:	ldr	x0, [x0]
   14608:	bl	6a10 <PyErr_Format@plt>
   1460c:	ldr	x0, [x20]
   14610:	sub	x0, x0, #0x1
   14614:	str	x0, [x20]
   14618:	cbz	x0, 14788 <PyFloat_FromString@plt+0xdcf8>
   1461c:	ldr	x23, [sp, #48]
   14620:	mov	x19, #0x0                   	// #0
   14624:	mov	x0, x19
   14628:	ldp	x19, x20, [sp, #16]
   1462c:	ldp	x21, x22, [sp, #32]
   14630:	ldp	x29, x30, [sp], #96
   14634:	ret
   14638:	ldr	x0, [x22]
   1463c:	add	x0, x0, #0x1
   14640:	str	x0, [x22]
   14644:	add	x0, x23, #0x328
   14648:	add	x0, x0, #0x1a0
   1464c:	bl	6950 <_PyObject_New@plt>
   14650:	mov	x19, x0
   14654:	cbz	x0, 14734 <PyFloat_FromString@plt+0xdca4>
   14658:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1465c:	mov	x2, #0xffffffffffffffff    	// #-1
   14660:	mov	w1, #0x30                  	// #48
   14664:	str	x2, [x19, #16]
   14668:	ldr	q0, [x0, #2128]
   1466c:	add	x0, x19, #0x48
   14670:	strb	w1, [x19, #24]
   14674:	add	x4, sp, #0x4c
   14678:	stp	xzr, xzr, [x19, #32]
   1467c:	add	x3, x21, #0x10
   14680:	add	x1, x20, #0x18
   14684:	str	x0, [x19, #64]
   14688:	add	x2, x22, #0x18
   1468c:	add	x0, x19, #0x18
   14690:	str	q0, [x19, #48]
   14694:	bl	2da00 <PyInit__decimal@@Base+0x117c0>
   14698:	ldr	x0, [x20]
   1469c:	sub	x0, x0, #0x1
   146a0:	str	x0, [x20]
   146a4:	cbz	x0, 146e0 <PyFloat_FromString@plt+0xdc50>
   146a8:	ldr	x0, [x22]
   146ac:	sub	x0, x0, #0x1
   146b0:	str	x0, [x22]
   146b4:	cbz	x0, 146ec <PyFloat_FromString@plt+0xdc5c>
   146b8:	ldr	w1, [sp, #76]
   146bc:	mov	x0, x21
   146c0:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   146c4:	cbnz	w0, 14764 <PyFloat_FromString@plt+0xdcd4>
   146c8:	mov	x0, x19
   146cc:	ldp	x19, x20, [sp, #16]
   146d0:	ldp	x21, x22, [sp, #32]
   146d4:	ldr	x23, [sp, #48]
   146d8:	ldp	x29, x30, [sp], #96
   146dc:	ret
   146e0:	mov	x0, x20
   146e4:	bl	65d0 <_Py_Dealloc@plt>
   146e8:	b	146a8 <PyFloat_FromString@plt+0xdc18>
   146ec:	mov	x0, x22
   146f0:	bl	65d0 <_Py_Dealloc@plt>
   146f4:	b	146b8 <PyFloat_FromString@plt+0xdc28>
   146f8:	mov	x1, x22
   146fc:	mov	x0, x19
   14700:	mov	x2, x21
   14704:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14708:	mov	x22, x0
   1470c:	cbnz	x0, 14644 <PyFloat_FromString@plt+0xdbb4>
   14710:	b	1460c <PyFloat_FromString@plt+0xdb7c>
   14714:	mov	x1, x20
   14718:	mov	x0, x19
   1471c:	mov	x2, x21
   14720:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14724:	mov	x20, x0
   14728:	cbnz	x0, 145c0 <PyFloat_FromString@plt+0xdb30>
   1472c:	ldr	x23, [sp, #48]
   14730:	b	14620 <PyFloat_FromString@plt+0xdb90>
   14734:	ldr	x0, [x20]
   14738:	sub	x0, x0, #0x1
   1473c:	str	x0, [x20]
   14740:	cbz	x0, 1479c <PyFloat_FromString@plt+0xdd0c>
   14744:	ldr	x0, [x22]
   14748:	sub	x0, x0, #0x1
   1474c:	str	x0, [x22]
   14750:	cbnz	x0, 1461c <PyFloat_FromString@plt+0xdb8c>
   14754:	mov	x0, x22
   14758:	bl	65d0 <_Py_Dealloc@plt>
   1475c:	ldr	x23, [sp, #48]
   14760:	b	145a0 <PyFloat_FromString@plt+0xdb10>
   14764:	ldr	x0, [x19]
   14768:	sub	x0, x0, #0x1
   1476c:	str	x0, [x19]
   14770:	cbnz	x0, 1461c <PyFloat_FromString@plt+0xdb8c>
   14774:	mov	x0, x19
   14778:	mov	x19, #0x0                   	// #0
   1477c:	bl	65d0 <_Py_Dealloc@plt>
   14780:	ldr	x23, [sp, #48]
   14784:	b	145a0 <PyFloat_FromString@plt+0xdb10>
   14788:	mov	x0, x20
   1478c:	mov	x19, #0x0                   	// #0
   14790:	bl	65d0 <_Py_Dealloc@plt>
   14794:	ldr	x23, [sp, #48]
   14798:	b	145a0 <PyFloat_FromString@plt+0xdb10>
   1479c:	mov	x0, x20
   147a0:	bl	65d0 <_Py_Dealloc@plt>
   147a4:	b	14744 <PyFloat_FromString@plt+0xdcb4>
   147a8:	stp	x29, x30, [sp, #-96]!
   147ac:	mov	x29, sp
   147b0:	add	x3, sp, #0x58
   147b4:	add	x2, sp, #0x50
   147b8:	stp	x19, x20, [sp, #16]
   147bc:	stp	x21, x22, [sp, #32]
   147c0:	mov	x21, x0
   147c4:	mov	x0, x1
   147c8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   147cc:	add	x1, x1, #0xdc0
   147d0:	str	wzr, [sp, #76]
   147d4:	bl	68e0 <PyArg_ParseTuple@plt>
   147d8:	cbz	w0, 148b8 <PyFloat_FromString@plt+0xde28>
   147dc:	ldr	x20, [sp, #80]
   147e0:	ldr	x0, [x20, #8]
   147e4:	str	x23, [sp, #48]
   147e8:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   147ec:	add	x19, x23, #0x328
   147f0:	add	x19, x19, #0x1a0
   147f4:	cmp	x0, x19
   147f8:	b.eq	1484c <PyFloat_FromString@plt+0xddbc>  // b.none
   147fc:	mov	x1, x19
   14800:	bl	69c0 <PyType_IsSubtype@plt>
   14804:	cbnz	w0, 1484c <PyFloat_FromString@plt+0xddbc>
   14808:	ldr	x2, [x20, #8]
   1480c:	ldr	x0, [x2, #168]
   14810:	tbnz	w0, #24, 149ac <PyFloat_FromString@plt+0xdf1c>
   14814:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14818:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1481c:	ldr	x2, [x2, #24]
   14820:	add	x1, x1, #0xb70
   14824:	ldr	x0, [x0, #3936]
   14828:	mov	x19, #0x0                   	// #0
   1482c:	ldr	x0, [x0]
   14830:	bl	6a10 <PyErr_Format@plt>
   14834:	ldr	x23, [sp, #48]
   14838:	mov	x0, x19
   1483c:	ldp	x19, x20, [sp, #16]
   14840:	ldp	x21, x22, [sp, #32]
   14844:	ldp	x29, x30, [sp], #96
   14848:	ret
   1484c:	ldr	x0, [x20]
   14850:	add	x0, x0, #0x1
   14854:	str	x0, [x20]
   14858:	ldr	x22, [sp, #88]
   1485c:	add	x19, x23, #0x328
   14860:	add	x19, x19, #0x1a0
   14864:	ldr	x0, [x22, #8]
   14868:	cmp	x0, x19
   1486c:	b.eq	148d0 <PyFloat_FromString@plt+0xde40>  // b.none
   14870:	mov	x1, x19
   14874:	bl	69c0 <PyType_IsSubtype@plt>
   14878:	cbnz	w0, 148d0 <PyFloat_FromString@plt+0xde40>
   1487c:	ldr	x2, [x22, #8]
   14880:	ldr	x0, [x2, #168]
   14884:	tbnz	w0, #24, 14990 <PyFloat_FromString@plt+0xdf00>
   14888:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1488c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14890:	ldr	x2, [x2, #24]
   14894:	add	x1, x1, #0xb70
   14898:	ldr	x0, [x0, #3936]
   1489c:	ldr	x0, [x0]
   148a0:	bl	6a10 <PyErr_Format@plt>
   148a4:	ldr	x0, [x20]
   148a8:	sub	x0, x0, #0x1
   148ac:	str	x0, [x20]
   148b0:	cbz	x0, 14a20 <PyFloat_FromString@plt+0xdf90>
   148b4:	ldr	x23, [sp, #48]
   148b8:	mov	x19, #0x0                   	// #0
   148bc:	mov	x0, x19
   148c0:	ldp	x19, x20, [sp, #16]
   148c4:	ldp	x21, x22, [sp, #32]
   148c8:	ldp	x29, x30, [sp], #96
   148cc:	ret
   148d0:	ldr	x0, [x22]
   148d4:	add	x0, x0, #0x1
   148d8:	str	x0, [x22]
   148dc:	add	x0, x23, #0x328
   148e0:	add	x0, x0, #0x1a0
   148e4:	bl	6950 <_PyObject_New@plt>
   148e8:	mov	x19, x0
   148ec:	cbz	x0, 149cc <PyFloat_FromString@plt+0xdf3c>
   148f0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   148f4:	mov	x2, #0xffffffffffffffff    	// #-1
   148f8:	mov	w1, #0x30                  	// #48
   148fc:	str	x2, [x19, #16]
   14900:	ldr	q0, [x0, #2128]
   14904:	add	x0, x19, #0x48
   14908:	strb	w1, [x19, #24]
   1490c:	add	x4, sp, #0x4c
   14910:	stp	xzr, xzr, [x19, #32]
   14914:	add	x3, x21, #0x10
   14918:	add	x1, x20, #0x18
   1491c:	str	x0, [x19, #64]
   14920:	add	x2, x22, #0x18
   14924:	add	x0, x19, #0x18
   14928:	str	q0, [x19, #48]
   1492c:	bl	2daa0 <PyInit__decimal@@Base+0x11860>
   14930:	ldr	x0, [x20]
   14934:	sub	x0, x0, #0x1
   14938:	str	x0, [x20]
   1493c:	cbz	x0, 14978 <PyFloat_FromString@plt+0xdee8>
   14940:	ldr	x0, [x22]
   14944:	sub	x0, x0, #0x1
   14948:	str	x0, [x22]
   1494c:	cbz	x0, 14984 <PyFloat_FromString@plt+0xdef4>
   14950:	ldr	w1, [sp, #76]
   14954:	mov	x0, x21
   14958:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1495c:	cbnz	w0, 149fc <PyFloat_FromString@plt+0xdf6c>
   14960:	mov	x0, x19
   14964:	ldp	x19, x20, [sp, #16]
   14968:	ldp	x21, x22, [sp, #32]
   1496c:	ldr	x23, [sp, #48]
   14970:	ldp	x29, x30, [sp], #96
   14974:	ret
   14978:	mov	x0, x20
   1497c:	bl	65d0 <_Py_Dealloc@plt>
   14980:	b	14940 <PyFloat_FromString@plt+0xdeb0>
   14984:	mov	x0, x22
   14988:	bl	65d0 <_Py_Dealloc@plt>
   1498c:	b	14950 <PyFloat_FromString@plt+0xdec0>
   14990:	mov	x1, x22
   14994:	mov	x0, x19
   14998:	mov	x2, x21
   1499c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   149a0:	mov	x22, x0
   149a4:	cbnz	x0, 148dc <PyFloat_FromString@plt+0xde4c>
   149a8:	b	148a4 <PyFloat_FromString@plt+0xde14>
   149ac:	mov	x1, x20
   149b0:	mov	x0, x19
   149b4:	mov	x2, x21
   149b8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   149bc:	mov	x20, x0
   149c0:	cbnz	x0, 14858 <PyFloat_FromString@plt+0xddc8>
   149c4:	ldr	x23, [sp, #48]
   149c8:	b	148b8 <PyFloat_FromString@plt+0xde28>
   149cc:	ldr	x0, [x20]
   149d0:	sub	x0, x0, #0x1
   149d4:	str	x0, [x20]
   149d8:	cbz	x0, 14a34 <PyFloat_FromString@plt+0xdfa4>
   149dc:	ldr	x0, [x22]
   149e0:	sub	x0, x0, #0x1
   149e4:	str	x0, [x22]
   149e8:	cbnz	x0, 148b4 <PyFloat_FromString@plt+0xde24>
   149ec:	mov	x0, x22
   149f0:	bl	65d0 <_Py_Dealloc@plt>
   149f4:	ldr	x23, [sp, #48]
   149f8:	b	14838 <PyFloat_FromString@plt+0xdda8>
   149fc:	ldr	x0, [x19]
   14a00:	sub	x0, x0, #0x1
   14a04:	str	x0, [x19]
   14a08:	cbnz	x0, 148b4 <PyFloat_FromString@plt+0xde24>
   14a0c:	mov	x0, x19
   14a10:	mov	x19, #0x0                   	// #0
   14a14:	bl	65d0 <_Py_Dealloc@plt>
   14a18:	ldr	x23, [sp, #48]
   14a1c:	b	14838 <PyFloat_FromString@plt+0xdda8>
   14a20:	mov	x0, x20
   14a24:	mov	x19, #0x0                   	// #0
   14a28:	bl	65d0 <_Py_Dealloc@plt>
   14a2c:	ldr	x23, [sp, #48]
   14a30:	b	14838 <PyFloat_FromString@plt+0xdda8>
   14a34:	mov	x0, x20
   14a38:	bl	65d0 <_Py_Dealloc@plt>
   14a3c:	b	149dc <PyFloat_FromString@plt+0xdf4c>
   14a40:	stp	x29, x30, [sp, #-96]!
   14a44:	mov	x29, sp
   14a48:	add	x3, sp, #0x58
   14a4c:	add	x2, sp, #0x50
   14a50:	stp	x19, x20, [sp, #16]
   14a54:	stp	x21, x22, [sp, #32]
   14a58:	mov	x21, x0
   14a5c:	mov	x0, x1
   14a60:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14a64:	add	x1, x1, #0xdc0
   14a68:	str	wzr, [sp, #76]
   14a6c:	bl	68e0 <PyArg_ParseTuple@plt>
   14a70:	cbz	w0, 14b50 <PyFloat_FromString@plt+0xe0c0>
   14a74:	ldr	x20, [sp, #80]
   14a78:	ldr	x0, [x20, #8]
   14a7c:	str	x23, [sp, #48]
   14a80:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   14a84:	add	x19, x23, #0x328
   14a88:	add	x19, x19, #0x1a0
   14a8c:	cmp	x0, x19
   14a90:	b.eq	14ae4 <PyFloat_FromString@plt+0xe054>  // b.none
   14a94:	mov	x1, x19
   14a98:	bl	69c0 <PyType_IsSubtype@plt>
   14a9c:	cbnz	w0, 14ae4 <PyFloat_FromString@plt+0xe054>
   14aa0:	ldr	x2, [x20, #8]
   14aa4:	ldr	x0, [x2, #168]
   14aa8:	tbnz	w0, #24, 14c44 <PyFloat_FromString@plt+0xe1b4>
   14aac:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14ab0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14ab4:	ldr	x2, [x2, #24]
   14ab8:	add	x1, x1, #0xb70
   14abc:	ldr	x0, [x0, #3936]
   14ac0:	mov	x19, #0x0                   	// #0
   14ac4:	ldr	x0, [x0]
   14ac8:	bl	6a10 <PyErr_Format@plt>
   14acc:	ldr	x23, [sp, #48]
   14ad0:	mov	x0, x19
   14ad4:	ldp	x19, x20, [sp, #16]
   14ad8:	ldp	x21, x22, [sp, #32]
   14adc:	ldp	x29, x30, [sp], #96
   14ae0:	ret
   14ae4:	ldr	x0, [x20]
   14ae8:	add	x0, x0, #0x1
   14aec:	str	x0, [x20]
   14af0:	ldr	x22, [sp, #88]
   14af4:	add	x19, x23, #0x328
   14af8:	add	x19, x19, #0x1a0
   14afc:	ldr	x0, [x22, #8]
   14b00:	cmp	x0, x19
   14b04:	b.eq	14b68 <PyFloat_FromString@plt+0xe0d8>  // b.none
   14b08:	mov	x1, x19
   14b0c:	bl	69c0 <PyType_IsSubtype@plt>
   14b10:	cbnz	w0, 14b68 <PyFloat_FromString@plt+0xe0d8>
   14b14:	ldr	x2, [x22, #8]
   14b18:	ldr	x0, [x2, #168]
   14b1c:	tbnz	w0, #24, 14c28 <PyFloat_FromString@plt+0xe198>
   14b20:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14b24:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14b28:	ldr	x2, [x2, #24]
   14b2c:	add	x1, x1, #0xb70
   14b30:	ldr	x0, [x0, #3936]
   14b34:	ldr	x0, [x0]
   14b38:	bl	6a10 <PyErr_Format@plt>
   14b3c:	ldr	x0, [x20]
   14b40:	sub	x0, x0, #0x1
   14b44:	str	x0, [x20]
   14b48:	cbz	x0, 14cb8 <PyFloat_FromString@plt+0xe228>
   14b4c:	ldr	x23, [sp, #48]
   14b50:	mov	x19, #0x0                   	// #0
   14b54:	mov	x0, x19
   14b58:	ldp	x19, x20, [sp, #16]
   14b5c:	ldp	x21, x22, [sp, #32]
   14b60:	ldp	x29, x30, [sp], #96
   14b64:	ret
   14b68:	ldr	x0, [x22]
   14b6c:	add	x0, x0, #0x1
   14b70:	str	x0, [x22]
   14b74:	add	x0, x23, #0x328
   14b78:	add	x0, x0, #0x1a0
   14b7c:	bl	6950 <_PyObject_New@plt>
   14b80:	mov	x19, x0
   14b84:	cbz	x0, 14c64 <PyFloat_FromString@plt+0xe1d4>
   14b88:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   14b8c:	mov	x2, #0xffffffffffffffff    	// #-1
   14b90:	mov	w1, #0x30                  	// #48
   14b94:	str	x2, [x19, #16]
   14b98:	ldr	q0, [x0, #2128]
   14b9c:	add	x0, x19, #0x48
   14ba0:	strb	w1, [x19, #24]
   14ba4:	add	x4, sp, #0x4c
   14ba8:	stp	xzr, xzr, [x19, #32]
   14bac:	add	x3, x21, #0x10
   14bb0:	add	x1, x20, #0x18
   14bb4:	str	x0, [x19, #64]
   14bb8:	add	x2, x22, #0x18
   14bbc:	add	x0, x19, #0x18
   14bc0:	str	q0, [x19, #48]
   14bc4:	bl	38ac8 <PyInit__decimal@@Base+0x1c888>
   14bc8:	ldr	x0, [x20]
   14bcc:	sub	x0, x0, #0x1
   14bd0:	str	x0, [x20]
   14bd4:	cbz	x0, 14c10 <PyFloat_FromString@plt+0xe180>
   14bd8:	ldr	x0, [x22]
   14bdc:	sub	x0, x0, #0x1
   14be0:	str	x0, [x22]
   14be4:	cbz	x0, 14c1c <PyFloat_FromString@plt+0xe18c>
   14be8:	ldr	w1, [sp, #76]
   14bec:	mov	x0, x21
   14bf0:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   14bf4:	cbnz	w0, 14c94 <PyFloat_FromString@plt+0xe204>
   14bf8:	mov	x0, x19
   14bfc:	ldp	x19, x20, [sp, #16]
   14c00:	ldp	x21, x22, [sp, #32]
   14c04:	ldr	x23, [sp, #48]
   14c08:	ldp	x29, x30, [sp], #96
   14c0c:	ret
   14c10:	mov	x0, x20
   14c14:	bl	65d0 <_Py_Dealloc@plt>
   14c18:	b	14bd8 <PyFloat_FromString@plt+0xe148>
   14c1c:	mov	x0, x22
   14c20:	bl	65d0 <_Py_Dealloc@plt>
   14c24:	b	14be8 <PyFloat_FromString@plt+0xe158>
   14c28:	mov	x1, x22
   14c2c:	mov	x0, x19
   14c30:	mov	x2, x21
   14c34:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14c38:	mov	x22, x0
   14c3c:	cbnz	x0, 14b74 <PyFloat_FromString@plt+0xe0e4>
   14c40:	b	14b3c <PyFloat_FromString@plt+0xe0ac>
   14c44:	mov	x1, x20
   14c48:	mov	x0, x19
   14c4c:	mov	x2, x21
   14c50:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14c54:	mov	x20, x0
   14c58:	cbnz	x0, 14af0 <PyFloat_FromString@plt+0xe060>
   14c5c:	ldr	x23, [sp, #48]
   14c60:	b	14b50 <PyFloat_FromString@plt+0xe0c0>
   14c64:	ldr	x0, [x20]
   14c68:	sub	x0, x0, #0x1
   14c6c:	str	x0, [x20]
   14c70:	cbz	x0, 14ccc <PyFloat_FromString@plt+0xe23c>
   14c74:	ldr	x0, [x22]
   14c78:	sub	x0, x0, #0x1
   14c7c:	str	x0, [x22]
   14c80:	cbnz	x0, 14b4c <PyFloat_FromString@plt+0xe0bc>
   14c84:	mov	x0, x22
   14c88:	bl	65d0 <_Py_Dealloc@plt>
   14c8c:	ldr	x23, [sp, #48]
   14c90:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14c94:	ldr	x0, [x19]
   14c98:	sub	x0, x0, #0x1
   14c9c:	str	x0, [x19]
   14ca0:	cbnz	x0, 14b4c <PyFloat_FromString@plt+0xe0bc>
   14ca4:	mov	x0, x19
   14ca8:	mov	x19, #0x0                   	// #0
   14cac:	bl	65d0 <_Py_Dealloc@plt>
   14cb0:	ldr	x23, [sp, #48]
   14cb4:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14cb8:	mov	x0, x20
   14cbc:	mov	x19, #0x0                   	// #0
   14cc0:	bl	65d0 <_Py_Dealloc@plt>
   14cc4:	ldr	x23, [sp, #48]
   14cc8:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14ccc:	mov	x0, x20
   14cd0:	bl	65d0 <_Py_Dealloc@plt>
   14cd4:	b	14c74 <PyFloat_FromString@plt+0xe1e4>
   14cd8:	stp	x29, x30, [sp, #-96]!
   14cdc:	mov	x29, sp
   14ce0:	add	x3, sp, #0x58
   14ce4:	add	x2, sp, #0x50
   14ce8:	stp	x19, x20, [sp, #16]
   14cec:	stp	x21, x22, [sp, #32]
   14cf0:	mov	x21, x0
   14cf4:	mov	x0, x1
   14cf8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14cfc:	add	x1, x1, #0xdc0
   14d00:	str	wzr, [sp, #76]
   14d04:	bl	68e0 <PyArg_ParseTuple@plt>
   14d08:	cbz	w0, 14de8 <PyFloat_FromString@plt+0xe358>
   14d0c:	ldr	x20, [sp, #80]
   14d10:	ldr	x0, [x20, #8]
   14d14:	str	x23, [sp, #48]
   14d18:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   14d1c:	add	x19, x23, #0x328
   14d20:	add	x19, x19, #0x1a0
   14d24:	cmp	x0, x19
   14d28:	b.eq	14d7c <PyFloat_FromString@plt+0xe2ec>  // b.none
   14d2c:	mov	x1, x19
   14d30:	bl	69c0 <PyType_IsSubtype@plt>
   14d34:	cbnz	w0, 14d7c <PyFloat_FromString@plt+0xe2ec>
   14d38:	ldr	x2, [x20, #8]
   14d3c:	ldr	x0, [x2, #168]
   14d40:	tbnz	w0, #24, 14edc <PyFloat_FromString@plt+0xe44c>
   14d44:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14d48:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14d4c:	ldr	x2, [x2, #24]
   14d50:	add	x1, x1, #0xb70
   14d54:	ldr	x0, [x0, #3936]
   14d58:	mov	x19, #0x0                   	// #0
   14d5c:	ldr	x0, [x0]
   14d60:	bl	6a10 <PyErr_Format@plt>
   14d64:	ldr	x23, [sp, #48]
   14d68:	mov	x0, x19
   14d6c:	ldp	x19, x20, [sp, #16]
   14d70:	ldp	x21, x22, [sp, #32]
   14d74:	ldp	x29, x30, [sp], #96
   14d78:	ret
   14d7c:	ldr	x0, [x20]
   14d80:	add	x0, x0, #0x1
   14d84:	str	x0, [x20]
   14d88:	ldr	x22, [sp, #88]
   14d8c:	add	x19, x23, #0x328
   14d90:	add	x19, x19, #0x1a0
   14d94:	ldr	x0, [x22, #8]
   14d98:	cmp	x0, x19
   14d9c:	b.eq	14e00 <PyFloat_FromString@plt+0xe370>  // b.none
   14da0:	mov	x1, x19
   14da4:	bl	69c0 <PyType_IsSubtype@plt>
   14da8:	cbnz	w0, 14e00 <PyFloat_FromString@plt+0xe370>
   14dac:	ldr	x2, [x22, #8]
   14db0:	ldr	x0, [x2, #168]
   14db4:	tbnz	w0, #24, 14ec0 <PyFloat_FromString@plt+0xe430>
   14db8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14dbc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14dc0:	ldr	x2, [x2, #24]
   14dc4:	add	x1, x1, #0xb70
   14dc8:	ldr	x0, [x0, #3936]
   14dcc:	ldr	x0, [x0]
   14dd0:	bl	6a10 <PyErr_Format@plt>
   14dd4:	ldr	x0, [x20]
   14dd8:	sub	x0, x0, #0x1
   14ddc:	str	x0, [x20]
   14de0:	cbz	x0, 14f50 <PyFloat_FromString@plt+0xe4c0>
   14de4:	ldr	x23, [sp, #48]
   14de8:	mov	x19, #0x0                   	// #0
   14dec:	mov	x0, x19
   14df0:	ldp	x19, x20, [sp, #16]
   14df4:	ldp	x21, x22, [sp, #32]
   14df8:	ldp	x29, x30, [sp], #96
   14dfc:	ret
   14e00:	ldr	x0, [x22]
   14e04:	add	x0, x0, #0x1
   14e08:	str	x0, [x22]
   14e0c:	add	x0, x23, #0x328
   14e10:	add	x0, x0, #0x1a0
   14e14:	bl	6950 <_PyObject_New@plt>
   14e18:	mov	x19, x0
   14e1c:	cbz	x0, 14efc <PyFloat_FromString@plt+0xe46c>
   14e20:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   14e24:	mov	x2, #0xffffffffffffffff    	// #-1
   14e28:	mov	w1, #0x30                  	// #48
   14e2c:	str	x2, [x19, #16]
   14e30:	ldr	q0, [x0, #2128]
   14e34:	add	x0, x19, #0x48
   14e38:	strb	w1, [x19, #24]
   14e3c:	add	x4, sp, #0x4c
   14e40:	stp	xzr, xzr, [x19, #32]
   14e44:	add	x3, x21, #0x10
   14e48:	add	x1, x20, #0x18
   14e4c:	str	x0, [x19, #64]
   14e50:	add	x2, x22, #0x18
   14e54:	add	x0, x19, #0x18
   14e58:	str	q0, [x19, #48]
   14e5c:	bl	38c18 <PyInit__decimal@@Base+0x1c9d8>
   14e60:	ldr	x0, [x20]
   14e64:	sub	x0, x0, #0x1
   14e68:	str	x0, [x20]
   14e6c:	cbz	x0, 14ea8 <PyFloat_FromString@plt+0xe418>
   14e70:	ldr	x0, [x22]
   14e74:	sub	x0, x0, #0x1
   14e78:	str	x0, [x22]
   14e7c:	cbz	x0, 14eb4 <PyFloat_FromString@plt+0xe424>
   14e80:	ldr	w1, [sp, #76]
   14e84:	mov	x0, x21
   14e88:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   14e8c:	cbnz	w0, 14f2c <PyFloat_FromString@plt+0xe49c>
   14e90:	mov	x0, x19
   14e94:	ldp	x19, x20, [sp, #16]
   14e98:	ldp	x21, x22, [sp, #32]
   14e9c:	ldr	x23, [sp, #48]
   14ea0:	ldp	x29, x30, [sp], #96
   14ea4:	ret
   14ea8:	mov	x0, x20
   14eac:	bl	65d0 <_Py_Dealloc@plt>
   14eb0:	b	14e70 <PyFloat_FromString@plt+0xe3e0>
   14eb4:	mov	x0, x22
   14eb8:	bl	65d0 <_Py_Dealloc@plt>
   14ebc:	b	14e80 <PyFloat_FromString@plt+0xe3f0>
   14ec0:	mov	x1, x22
   14ec4:	mov	x0, x19
   14ec8:	mov	x2, x21
   14ecc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14ed0:	mov	x22, x0
   14ed4:	cbnz	x0, 14e0c <PyFloat_FromString@plt+0xe37c>
   14ed8:	b	14dd4 <PyFloat_FromString@plt+0xe344>
   14edc:	mov	x1, x20
   14ee0:	mov	x0, x19
   14ee4:	mov	x2, x21
   14ee8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   14eec:	mov	x20, x0
   14ef0:	cbnz	x0, 14d88 <PyFloat_FromString@plt+0xe2f8>
   14ef4:	ldr	x23, [sp, #48]
   14ef8:	b	14de8 <PyFloat_FromString@plt+0xe358>
   14efc:	ldr	x0, [x20]
   14f00:	sub	x0, x0, #0x1
   14f04:	str	x0, [x20]
   14f08:	cbz	x0, 14f64 <PyFloat_FromString@plt+0xe4d4>
   14f0c:	ldr	x0, [x22]
   14f10:	sub	x0, x0, #0x1
   14f14:	str	x0, [x22]
   14f18:	cbnz	x0, 14de4 <PyFloat_FromString@plt+0xe354>
   14f1c:	mov	x0, x22
   14f20:	bl	65d0 <_Py_Dealloc@plt>
   14f24:	ldr	x23, [sp, #48]
   14f28:	b	14d68 <PyFloat_FromString@plt+0xe2d8>
   14f2c:	ldr	x0, [x19]
   14f30:	sub	x0, x0, #0x1
   14f34:	str	x0, [x19]
   14f38:	cbnz	x0, 14de4 <PyFloat_FromString@plt+0xe354>
   14f3c:	mov	x0, x19
   14f40:	mov	x19, #0x0                   	// #0
   14f44:	bl	65d0 <_Py_Dealloc@plt>
   14f48:	ldr	x23, [sp, #48]
   14f4c:	b	14d68 <PyFloat_FromString@plt+0xe2d8>
   14f50:	mov	x0, x20
   14f54:	mov	x19, #0x0                   	// #0
   14f58:	bl	65d0 <_Py_Dealloc@plt>
   14f5c:	ldr	x23, [sp, #48]
   14f60:	b	14d68 <PyFloat_FromString@plt+0xe2d8>
   14f64:	mov	x0, x20
   14f68:	bl	65d0 <_Py_Dealloc@plt>
   14f6c:	b	14f0c <PyFloat_FromString@plt+0xe47c>
   14f70:	stp	x29, x30, [sp, #-96]!
   14f74:	mov	x29, sp
   14f78:	add	x3, sp, #0x58
   14f7c:	add	x2, sp, #0x50
   14f80:	stp	x19, x20, [sp, #16]
   14f84:	stp	x21, x22, [sp, #32]
   14f88:	mov	x21, x0
   14f8c:	mov	x0, x1
   14f90:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14f94:	add	x1, x1, #0xdc0
   14f98:	str	wzr, [sp, #76]
   14f9c:	bl	68e0 <PyArg_ParseTuple@plt>
   14fa0:	cbz	w0, 15080 <PyFloat_FromString@plt+0xe5f0>
   14fa4:	ldr	x20, [sp, #80]
   14fa8:	ldr	x0, [x20, #8]
   14fac:	str	x23, [sp, #48]
   14fb0:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   14fb4:	add	x19, x23, #0x328
   14fb8:	add	x19, x19, #0x1a0
   14fbc:	cmp	x0, x19
   14fc0:	b.eq	15014 <PyFloat_FromString@plt+0xe584>  // b.none
   14fc4:	mov	x1, x19
   14fc8:	bl	69c0 <PyType_IsSubtype@plt>
   14fcc:	cbnz	w0, 15014 <PyFloat_FromString@plt+0xe584>
   14fd0:	ldr	x2, [x20, #8]
   14fd4:	ldr	x0, [x2, #168]
   14fd8:	tbnz	w0, #24, 15174 <PyFloat_FromString@plt+0xe6e4>
   14fdc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   14fe0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   14fe4:	ldr	x2, [x2, #24]
   14fe8:	add	x1, x1, #0xb70
   14fec:	ldr	x0, [x0, #3936]
   14ff0:	mov	x19, #0x0                   	// #0
   14ff4:	ldr	x0, [x0]
   14ff8:	bl	6a10 <PyErr_Format@plt>
   14ffc:	ldr	x23, [sp, #48]
   15000:	mov	x0, x19
   15004:	ldp	x19, x20, [sp, #16]
   15008:	ldp	x21, x22, [sp, #32]
   1500c:	ldp	x29, x30, [sp], #96
   15010:	ret
   15014:	ldr	x0, [x20]
   15018:	add	x0, x0, #0x1
   1501c:	str	x0, [x20]
   15020:	ldr	x22, [sp, #88]
   15024:	add	x19, x23, #0x328
   15028:	add	x19, x19, #0x1a0
   1502c:	ldr	x0, [x22, #8]
   15030:	cmp	x0, x19
   15034:	b.eq	15098 <PyFloat_FromString@plt+0xe608>  // b.none
   15038:	mov	x1, x19
   1503c:	bl	69c0 <PyType_IsSubtype@plt>
   15040:	cbnz	w0, 15098 <PyFloat_FromString@plt+0xe608>
   15044:	ldr	x2, [x22, #8]
   15048:	ldr	x0, [x2, #168]
   1504c:	tbnz	w0, #24, 15158 <PyFloat_FromString@plt+0xe6c8>
   15050:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15054:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15058:	ldr	x2, [x2, #24]
   1505c:	add	x1, x1, #0xb70
   15060:	ldr	x0, [x0, #3936]
   15064:	ldr	x0, [x0]
   15068:	bl	6a10 <PyErr_Format@plt>
   1506c:	ldr	x0, [x20]
   15070:	sub	x0, x0, #0x1
   15074:	str	x0, [x20]
   15078:	cbz	x0, 151e8 <PyFloat_FromString@plt+0xe758>
   1507c:	ldr	x23, [sp, #48]
   15080:	mov	x19, #0x0                   	// #0
   15084:	mov	x0, x19
   15088:	ldp	x19, x20, [sp, #16]
   1508c:	ldp	x21, x22, [sp, #32]
   15090:	ldp	x29, x30, [sp], #96
   15094:	ret
   15098:	ldr	x0, [x22]
   1509c:	add	x0, x0, #0x1
   150a0:	str	x0, [x22]
   150a4:	add	x0, x23, #0x328
   150a8:	add	x0, x0, #0x1a0
   150ac:	bl	6950 <_PyObject_New@plt>
   150b0:	mov	x19, x0
   150b4:	cbz	x0, 15194 <PyFloat_FromString@plt+0xe704>
   150b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   150bc:	mov	x2, #0xffffffffffffffff    	// #-1
   150c0:	mov	w1, #0x30                  	// #48
   150c4:	str	x2, [x19, #16]
   150c8:	ldr	q0, [x0, #2128]
   150cc:	add	x0, x19, #0x48
   150d0:	strb	w1, [x19, #24]
   150d4:	add	x4, sp, #0x4c
   150d8:	stp	xzr, xzr, [x19, #32]
   150dc:	add	x3, x21, #0x10
   150e0:	add	x1, x20, #0x18
   150e4:	str	x0, [x19, #64]
   150e8:	add	x2, x22, #0x18
   150ec:	add	x0, x19, #0x18
   150f0:	str	q0, [x19, #48]
   150f4:	bl	32a08 <PyInit__decimal@@Base+0x167c8>
   150f8:	ldr	x0, [x20]
   150fc:	sub	x0, x0, #0x1
   15100:	str	x0, [x20]
   15104:	cbz	x0, 15140 <PyFloat_FromString@plt+0xe6b0>
   15108:	ldr	x0, [x22]
   1510c:	sub	x0, x0, #0x1
   15110:	str	x0, [x22]
   15114:	cbz	x0, 1514c <PyFloat_FromString@plt+0xe6bc>
   15118:	ldr	w1, [sp, #76]
   1511c:	mov	x0, x21
   15120:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   15124:	cbnz	w0, 151c4 <PyFloat_FromString@plt+0xe734>
   15128:	mov	x0, x19
   1512c:	ldp	x19, x20, [sp, #16]
   15130:	ldp	x21, x22, [sp, #32]
   15134:	ldr	x23, [sp, #48]
   15138:	ldp	x29, x30, [sp], #96
   1513c:	ret
   15140:	mov	x0, x20
   15144:	bl	65d0 <_Py_Dealloc@plt>
   15148:	b	15108 <PyFloat_FromString@plt+0xe678>
   1514c:	mov	x0, x22
   15150:	bl	65d0 <_Py_Dealloc@plt>
   15154:	b	15118 <PyFloat_FromString@plt+0xe688>
   15158:	mov	x1, x22
   1515c:	mov	x0, x19
   15160:	mov	x2, x21
   15164:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15168:	mov	x22, x0
   1516c:	cbnz	x0, 150a4 <PyFloat_FromString@plt+0xe614>
   15170:	b	1506c <PyFloat_FromString@plt+0xe5dc>
   15174:	mov	x1, x20
   15178:	mov	x0, x19
   1517c:	mov	x2, x21
   15180:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15184:	mov	x20, x0
   15188:	cbnz	x0, 15020 <PyFloat_FromString@plt+0xe590>
   1518c:	ldr	x23, [sp, #48]
   15190:	b	15080 <PyFloat_FromString@plt+0xe5f0>
   15194:	ldr	x0, [x20]
   15198:	sub	x0, x0, #0x1
   1519c:	str	x0, [x20]
   151a0:	cbz	x0, 151fc <PyFloat_FromString@plt+0xe76c>
   151a4:	ldr	x0, [x22]
   151a8:	sub	x0, x0, #0x1
   151ac:	str	x0, [x22]
   151b0:	cbnz	x0, 1507c <PyFloat_FromString@plt+0xe5ec>
   151b4:	mov	x0, x22
   151b8:	bl	65d0 <_Py_Dealloc@plt>
   151bc:	ldr	x23, [sp, #48]
   151c0:	b	15000 <PyFloat_FromString@plt+0xe570>
   151c4:	ldr	x0, [x19]
   151c8:	sub	x0, x0, #0x1
   151cc:	str	x0, [x19]
   151d0:	cbnz	x0, 1507c <PyFloat_FromString@plt+0xe5ec>
   151d4:	mov	x0, x19
   151d8:	mov	x19, #0x0                   	// #0
   151dc:	bl	65d0 <_Py_Dealloc@plt>
   151e0:	ldr	x23, [sp, #48]
   151e4:	b	15000 <PyFloat_FromString@plt+0xe570>
   151e8:	mov	x0, x20
   151ec:	mov	x19, #0x0                   	// #0
   151f0:	bl	65d0 <_Py_Dealloc@plt>
   151f4:	ldr	x23, [sp, #48]
   151f8:	b	15000 <PyFloat_FromString@plt+0xe570>
   151fc:	mov	x0, x20
   15200:	bl	65d0 <_Py_Dealloc@plt>
   15204:	b	151a4 <PyFloat_FromString@plt+0xe714>
   15208:	stp	x29, x30, [sp, #-96]!
   1520c:	mov	x29, sp
   15210:	add	x3, sp, #0x58
   15214:	add	x2, sp, #0x50
   15218:	stp	x19, x20, [sp, #16]
   1521c:	stp	x21, x22, [sp, #32]
   15220:	mov	x21, x0
   15224:	mov	x0, x1
   15228:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1522c:	add	x1, x1, #0xdc0
   15230:	str	wzr, [sp, #76]
   15234:	bl	68e0 <PyArg_ParseTuple@plt>
   15238:	cbz	w0, 15318 <PyFloat_FromString@plt+0xe888>
   1523c:	ldr	x20, [sp, #80]
   15240:	ldr	x0, [x20, #8]
   15244:	str	x23, [sp, #48]
   15248:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1524c:	add	x19, x23, #0x328
   15250:	add	x19, x19, #0x1a0
   15254:	cmp	x0, x19
   15258:	b.eq	152ac <PyFloat_FromString@plt+0xe81c>  // b.none
   1525c:	mov	x1, x19
   15260:	bl	69c0 <PyType_IsSubtype@plt>
   15264:	cbnz	w0, 152ac <PyFloat_FromString@plt+0xe81c>
   15268:	ldr	x2, [x20, #8]
   1526c:	ldr	x0, [x2, #168]
   15270:	tbnz	w0, #24, 1540c <PyFloat_FromString@plt+0xe97c>
   15274:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15278:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1527c:	ldr	x2, [x2, #24]
   15280:	add	x1, x1, #0xb70
   15284:	ldr	x0, [x0, #3936]
   15288:	mov	x19, #0x0                   	// #0
   1528c:	ldr	x0, [x0]
   15290:	bl	6a10 <PyErr_Format@plt>
   15294:	ldr	x23, [sp, #48]
   15298:	mov	x0, x19
   1529c:	ldp	x19, x20, [sp, #16]
   152a0:	ldp	x21, x22, [sp, #32]
   152a4:	ldp	x29, x30, [sp], #96
   152a8:	ret
   152ac:	ldr	x0, [x20]
   152b0:	add	x0, x0, #0x1
   152b4:	str	x0, [x20]
   152b8:	ldr	x22, [sp, #88]
   152bc:	add	x19, x23, #0x328
   152c0:	add	x19, x19, #0x1a0
   152c4:	ldr	x0, [x22, #8]
   152c8:	cmp	x0, x19
   152cc:	b.eq	15330 <PyFloat_FromString@plt+0xe8a0>  // b.none
   152d0:	mov	x1, x19
   152d4:	bl	69c0 <PyType_IsSubtype@plt>
   152d8:	cbnz	w0, 15330 <PyFloat_FromString@plt+0xe8a0>
   152dc:	ldr	x2, [x22, #8]
   152e0:	ldr	x0, [x2, #168]
   152e4:	tbnz	w0, #24, 153f0 <PyFloat_FromString@plt+0xe960>
   152e8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   152ec:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   152f0:	ldr	x2, [x2, #24]
   152f4:	add	x1, x1, #0xb70
   152f8:	ldr	x0, [x0, #3936]
   152fc:	ldr	x0, [x0]
   15300:	bl	6a10 <PyErr_Format@plt>
   15304:	ldr	x0, [x20]
   15308:	sub	x0, x0, #0x1
   1530c:	str	x0, [x20]
   15310:	cbz	x0, 15480 <PyFloat_FromString@plt+0xe9f0>
   15314:	ldr	x23, [sp, #48]
   15318:	mov	x19, #0x0                   	// #0
   1531c:	mov	x0, x19
   15320:	ldp	x19, x20, [sp, #16]
   15324:	ldp	x21, x22, [sp, #32]
   15328:	ldp	x29, x30, [sp], #96
   1532c:	ret
   15330:	ldr	x0, [x22]
   15334:	add	x0, x0, #0x1
   15338:	str	x0, [x22]
   1533c:	add	x0, x23, #0x328
   15340:	add	x0, x0, #0x1a0
   15344:	bl	6950 <_PyObject_New@plt>
   15348:	mov	x19, x0
   1534c:	cbz	x0, 1542c <PyFloat_FromString@plt+0xe99c>
   15350:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   15354:	mov	x2, #0xffffffffffffffff    	// #-1
   15358:	mov	w1, #0x30                  	// #48
   1535c:	str	x2, [x19, #16]
   15360:	ldr	q0, [x0, #2128]
   15364:	add	x0, x19, #0x48
   15368:	strb	w1, [x19, #24]
   1536c:	add	x4, sp, #0x4c
   15370:	stp	xzr, xzr, [x19, #32]
   15374:	add	x3, x21, #0x10
   15378:	add	x1, x20, #0x18
   1537c:	str	x0, [x19, #64]
   15380:	add	x2, x22, #0x18
   15384:	add	x0, x19, #0x18
   15388:	str	q0, [x19, #48]
   1538c:	bl	32e10 <PyInit__decimal@@Base+0x16bd0>
   15390:	ldr	x0, [x20]
   15394:	sub	x0, x0, #0x1
   15398:	str	x0, [x20]
   1539c:	cbz	x0, 153d8 <PyFloat_FromString@plt+0xe948>
   153a0:	ldr	x0, [x22]
   153a4:	sub	x0, x0, #0x1
   153a8:	str	x0, [x22]
   153ac:	cbz	x0, 153e4 <PyFloat_FromString@plt+0xe954>
   153b0:	ldr	w1, [sp, #76]
   153b4:	mov	x0, x21
   153b8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   153bc:	cbnz	w0, 1545c <PyFloat_FromString@plt+0xe9cc>
   153c0:	mov	x0, x19
   153c4:	ldp	x19, x20, [sp, #16]
   153c8:	ldp	x21, x22, [sp, #32]
   153cc:	ldr	x23, [sp, #48]
   153d0:	ldp	x29, x30, [sp], #96
   153d4:	ret
   153d8:	mov	x0, x20
   153dc:	bl	65d0 <_Py_Dealloc@plt>
   153e0:	b	153a0 <PyFloat_FromString@plt+0xe910>
   153e4:	mov	x0, x22
   153e8:	bl	65d0 <_Py_Dealloc@plt>
   153ec:	b	153b0 <PyFloat_FromString@plt+0xe920>
   153f0:	mov	x1, x22
   153f4:	mov	x0, x19
   153f8:	mov	x2, x21
   153fc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15400:	mov	x22, x0
   15404:	cbnz	x0, 1533c <PyFloat_FromString@plt+0xe8ac>
   15408:	b	15304 <PyFloat_FromString@plt+0xe874>
   1540c:	mov	x1, x20
   15410:	mov	x0, x19
   15414:	mov	x2, x21
   15418:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1541c:	mov	x20, x0
   15420:	cbnz	x0, 152b8 <PyFloat_FromString@plt+0xe828>
   15424:	ldr	x23, [sp, #48]
   15428:	b	15318 <PyFloat_FromString@plt+0xe888>
   1542c:	ldr	x0, [x20]
   15430:	sub	x0, x0, #0x1
   15434:	str	x0, [x20]
   15438:	cbz	x0, 15494 <PyFloat_FromString@plt+0xea04>
   1543c:	ldr	x0, [x22]
   15440:	sub	x0, x0, #0x1
   15444:	str	x0, [x22]
   15448:	cbnz	x0, 15314 <PyFloat_FromString@plt+0xe884>
   1544c:	mov	x0, x22
   15450:	bl	65d0 <_Py_Dealloc@plt>
   15454:	ldr	x23, [sp, #48]
   15458:	b	15298 <PyFloat_FromString@plt+0xe808>
   1545c:	ldr	x0, [x19]
   15460:	sub	x0, x0, #0x1
   15464:	str	x0, [x19]
   15468:	cbnz	x0, 15314 <PyFloat_FromString@plt+0xe884>
   1546c:	mov	x0, x19
   15470:	mov	x19, #0x0                   	// #0
   15474:	bl	65d0 <_Py_Dealloc@plt>
   15478:	ldr	x23, [sp, #48]
   1547c:	b	15298 <PyFloat_FromString@plt+0xe808>
   15480:	mov	x0, x20
   15484:	mov	x19, #0x0                   	// #0
   15488:	bl	65d0 <_Py_Dealloc@plt>
   1548c:	ldr	x23, [sp, #48]
   15490:	b	15298 <PyFloat_FromString@plt+0xe808>
   15494:	mov	x0, x20
   15498:	bl	65d0 <_Py_Dealloc@plt>
   1549c:	b	1543c <PyFloat_FromString@plt+0xe9ac>
   154a0:	stp	x29, x30, [sp, #-96]!
   154a4:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   154a8:	add	x3, x3, #0x9b0
   154ac:	mov	x29, sp
   154b0:	stp	x19, x20, [sp, #16]
   154b4:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   154b8:	mov	x19, x0
   154bc:	ldr	x20, [x20, #4008]
   154c0:	mov	x0, x1
   154c4:	add	x3, x3, #0x430
   154c8:	mov	x1, x2
   154cc:	add	x5, sp, #0x48
   154d0:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   154d4:	add	x4, sp, #0x50
   154d8:	add	x2, x2, #0xc88
   154dc:	str	x20, [sp, #72]
   154e0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   154e4:	cbz	w0, 155ec <PyFloat_FromString@plt+0xeb5c>
   154e8:	stp	x21, x22, [sp, #32]
   154ec:	ldr	x21, [sp, #72]
   154f0:	cmp	x21, x20
   154f4:	b.eq	156b8 <PyFloat_FromString@plt+0xec28>  // b.none
   154f8:	ldr	x0, [x21, #8]
   154fc:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   15500:	add	x1, x20, #0x328
   15504:	cmp	x0, x1
   15508:	b.eq	15518 <PyFloat_FromString@plt+0xea88>  // b.none
   1550c:	bl	69c0 <PyType_IsSubtype@plt>
   15510:	cbz	w0, 157ac <PyFloat_FromString@plt+0xed1c>
   15514:	ldr	x21, [sp, #72]
   15518:	add	x22, x20, #0x328
   1551c:	ldr	x0, [x19, #8]
   15520:	add	x22, x22, #0x1a0
   15524:	cmp	x0, x22
   15528:	b.eq	15578 <PyFloat_FromString@plt+0xeae8>  // b.none
   1552c:	mov	x1, x22
   15530:	bl	69c0 <PyType_IsSubtype@plt>
   15534:	cbnz	w0, 15690 <PyFloat_FromString@plt+0xec00>
   15538:	ldr	x2, [x19, #8]
   1553c:	ldr	x0, [x2, #168]
   15540:	tbnz	w0, #24, 15748 <PyFloat_FromString@plt+0xecb8>
   15544:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15548:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1554c:	ldr	x2, [x2, #24]
   15550:	add	x1, x1, #0xb70
   15554:	ldr	x0, [x0, #3936]
   15558:	mov	x20, #0x0                   	// #0
   1555c:	ldr	x0, [x0]
   15560:	bl	6a10 <PyErr_Format@plt>
   15564:	ldp	x21, x22, [sp, #32]
   15568:	mov	x0, x20
   1556c:	ldp	x19, x20, [sp, #16]
   15570:	ldp	x29, x30, [sp], #96
   15574:	ret
   15578:	str	x23, [sp, #48]
   1557c:	ldr	x0, [x19]
   15580:	add	x0, x0, #0x1
   15584:	str	x0, [x19]
   15588:	ldr	x23, [sp, #80]
   1558c:	add	x22, x20, #0x328
   15590:	add	x22, x22, #0x1a0
   15594:	ldr	x0, [x23, #8]
   15598:	cmp	x0, x22
   1559c:	b.eq	15600 <PyFloat_FromString@plt+0xeb70>  // b.none
   155a0:	mov	x1, x22
   155a4:	bl	69c0 <PyType_IsSubtype@plt>
   155a8:	cbnz	w0, 15600 <PyFloat_FromString@plt+0xeb70>
   155ac:	ldr	x2, [x23, #8]
   155b0:	ldr	x0, [x2, #168]
   155b4:	tbnz	w0, #24, 1569c <PyFloat_FromString@plt+0xec0c>
   155b8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   155bc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   155c0:	ldr	x2, [x2, #24]
   155c4:	add	x1, x1, #0xb70
   155c8:	ldr	x0, [x0, #3936]
   155cc:	ldr	x0, [x0]
   155d0:	bl	6a10 <PyErr_Format@plt>
   155d4:	ldr	x0, [x19]
   155d8:	sub	x0, x0, #0x1
   155dc:	str	x0, [x19]
   155e0:	cbz	x0, 15778 <PyFloat_FromString@plt+0xece8>
   155e4:	ldp	x21, x22, [sp, #32]
   155e8:	ldr	x23, [sp, #48]
   155ec:	mov	x20, #0x0                   	// #0
   155f0:	mov	x0, x20
   155f4:	ldp	x19, x20, [sp, #16]
   155f8:	ldp	x29, x30, [sp], #96
   155fc:	ret
   15600:	ldr	x0, [x23]
   15604:	add	x0, x0, #0x1
   15608:	str	x0, [x23]
   1560c:	add	x20, x20, #0x328
   15610:	add	x0, x20, #0x1a0
   15614:	bl	6950 <_PyObject_New@plt>
   15618:	mov	x20, x0
   1561c:	cbz	x0, 15700 <PyFloat_FromString@plt+0xec70>
   15620:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   15624:	mov	x2, #0xffffffffffffffff    	// #-1
   15628:	mov	w1, #0x30                  	// #48
   1562c:	str	x2, [x20, #16]
   15630:	ldr	q0, [x0, #2128]
   15634:	add	x0, x20, #0x48
   15638:	strb	w1, [x20, #24]
   1563c:	add	x2, x23, #0x18
   15640:	stp	xzr, xzr, [x20, #32]
   15644:	add	x1, x19, #0x18
   15648:	str	x0, [x20, #64]
   1564c:	add	x0, x20, #0x18
   15650:	str	q0, [x20, #48]
   15654:	bl	2dcd0 <PyInit__decimal@@Base+0x11a90>
   15658:	ldr	x0, [x19]
   1565c:	sub	x0, x0, #0x1
   15660:	str	x0, [x19]
   15664:	cbz	x0, 1576c <PyFloat_FromString@plt+0xecdc>
   15668:	ldr	x0, [x23]
   1566c:	sub	x0, x0, #0x1
   15670:	str	x0, [x23]
   15674:	cbz	x0, 15728 <PyFloat_FromString@plt+0xec98>
   15678:	mov	x0, x20
   1567c:	ldp	x19, x20, [sp, #16]
   15680:	ldp	x21, x22, [sp, #32]
   15684:	ldr	x23, [sp, #48]
   15688:	ldp	x29, x30, [sp], #96
   1568c:	ret
   15690:	str	x23, [sp, #48]
   15694:	ldr	x21, [sp, #72]
   15698:	b	1557c <PyFloat_FromString@plt+0xeaec>
   1569c:	mov	x1, x23
   156a0:	mov	x2, x21
   156a4:	mov	x0, x22
   156a8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   156ac:	mov	x23, x0
   156b0:	cbnz	x0, 1560c <PyFloat_FromString@plt+0xeb7c>
   156b4:	b	155d4 <PyFloat_FromString@plt+0xeb44>
   156b8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   156bc:	add	x2, sp, #0x58
   156c0:	mov	x1, #0x0                   	// #0
   156c4:	ldr	x0, [x0, #2056]
   156c8:	bl	6740 <PyContextVar_Get@plt>
   156cc:	tbnz	w0, #31, 157d0 <PyFloat_FromString@plt+0xed40>
   156d0:	ldr	x21, [sp, #88]
   156d4:	cbz	x21, 15790 <PyFloat_FromString@plt+0xed00>
   156d8:	str	x21, [sp, #72]
   156dc:	ldr	x0, [x21]
   156e0:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   156e4:	sub	x0, x0, #0x1
   156e8:	str	x0, [x21]
   156ec:	cbnz	x0, 15518 <PyFloat_FromString@plt+0xea88>
   156f0:	mov	x0, x21
   156f4:	bl	65d0 <_Py_Dealloc@plt>
   156f8:	ldr	x21, [sp, #72]
   156fc:	b	15518 <PyFloat_FromString@plt+0xea88>
   15700:	ldr	x0, [x19]
   15704:	sub	x0, x0, #0x1
   15708:	str	x0, [x19]
   1570c:	cbnz	x0, 15718 <PyFloat_FromString@plt+0xec88>
   15710:	mov	x0, x19
   15714:	bl	65d0 <_Py_Dealloc@plt>
   15718:	ldr	x0, [x23]
   1571c:	sub	x0, x0, #0x1
   15720:	str	x0, [x23]
   15724:	cbnz	x0, 155e4 <PyFloat_FromString@plt+0xeb54>
   15728:	mov	x0, x23
   1572c:	bl	65d0 <_Py_Dealloc@plt>
   15730:	mov	x0, x20
   15734:	ldp	x19, x20, [sp, #16]
   15738:	ldp	x21, x22, [sp, #32]
   1573c:	ldr	x23, [sp, #48]
   15740:	ldp	x29, x30, [sp], #96
   15744:	ret
   15748:	mov	x1, x19
   1574c:	mov	x2, x21
   15750:	mov	x0, x22
   15754:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15758:	mov	x19, x0
   1575c:	cbz	x0, 157a0 <PyFloat_FromString@plt+0xed10>
   15760:	str	x23, [sp, #48]
   15764:	ldr	x21, [sp, #72]
   15768:	b	15588 <PyFloat_FromString@plt+0xeaf8>
   1576c:	mov	x0, x19
   15770:	bl	65d0 <_Py_Dealloc@plt>
   15774:	b	15668 <PyFloat_FromString@plt+0xebd8>
   15778:	mov	x0, x19
   1577c:	mov	x20, #0x0                   	// #0
   15780:	bl	65d0 <_Py_Dealloc@plt>
   15784:	ldp	x21, x22, [sp, #32]
   15788:	ldr	x23, [sp, #48]
   1578c:	b	15568 <PyFloat_FromString@plt+0xead8>
   15790:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   15794:	str	x0, [sp, #72]
   15798:	mov	x21, x0
   1579c:	cbnz	x0, 156dc <PyFloat_FromString@plt+0xec4c>
   157a0:	mov	x20, #0x0                   	// #0
   157a4:	ldp	x21, x22, [sp, #32]
   157a8:	b	155f0 <PyFloat_FromString@plt+0xeb60>
   157ac:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   157b0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   157b4:	mov	x20, #0x0                   	// #0
   157b8:	add	x1, x1, #0xba8
   157bc:	ldr	x0, [x0, #3936]
   157c0:	ldr	x0, [x0]
   157c4:	bl	6650 <PyErr_SetString@plt>
   157c8:	ldp	x21, x22, [sp, #32]
   157cc:	b	15568 <PyFloat_FromString@plt+0xead8>
   157d0:	mov	x20, #0x0                   	// #0
   157d4:	ldp	x21, x22, [sp, #32]
   157d8:	b	15568 <PyFloat_FromString@plt+0xead8>
   157dc:	nop
   157e0:	stp	x29, x30, [sp, #-96]!
   157e4:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   157e8:	add	x3, x3, #0x9b0
   157ec:	mov	x29, sp
   157f0:	stp	x19, x20, [sp, #16]
   157f4:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   157f8:	mov	x19, x0
   157fc:	ldr	x20, [x20, #4008]
   15800:	mov	x0, x1
   15804:	add	x3, x3, #0x450
   15808:	mov	x1, x2
   1580c:	add	x5, sp, #0x48
   15810:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   15814:	add	x4, sp, #0x50
   15818:	add	x2, x2, #0xc88
   1581c:	str	x20, [sp, #72]
   15820:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15824:	cbz	w0, 1592c <PyFloat_FromString@plt+0xee9c>
   15828:	stp	x21, x22, [sp, #32]
   1582c:	ldr	x21, [sp, #72]
   15830:	cmp	x21, x20
   15834:	b.eq	159f8 <PyFloat_FromString@plt+0xef68>  // b.none
   15838:	ldr	x0, [x21, #8]
   1583c:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   15840:	add	x1, x20, #0x328
   15844:	cmp	x0, x1
   15848:	b.eq	15858 <PyFloat_FromString@plt+0xedc8>  // b.none
   1584c:	bl	69c0 <PyType_IsSubtype@plt>
   15850:	cbz	w0, 15aec <PyFloat_FromString@plt+0xf05c>
   15854:	ldr	x21, [sp, #72]
   15858:	add	x22, x20, #0x328
   1585c:	ldr	x0, [x19, #8]
   15860:	add	x22, x22, #0x1a0
   15864:	cmp	x0, x22
   15868:	b.eq	158b8 <PyFloat_FromString@plt+0xee28>  // b.none
   1586c:	mov	x1, x22
   15870:	bl	69c0 <PyType_IsSubtype@plt>
   15874:	cbnz	w0, 159d0 <PyFloat_FromString@plt+0xef40>
   15878:	ldr	x2, [x19, #8]
   1587c:	ldr	x0, [x2, #168]
   15880:	tbnz	w0, #24, 15a88 <PyFloat_FromString@plt+0xeff8>
   15884:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15888:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1588c:	ldr	x2, [x2, #24]
   15890:	add	x1, x1, #0xb70
   15894:	ldr	x0, [x0, #3936]
   15898:	mov	x20, #0x0                   	// #0
   1589c:	ldr	x0, [x0]
   158a0:	bl	6a10 <PyErr_Format@plt>
   158a4:	ldp	x21, x22, [sp, #32]
   158a8:	mov	x0, x20
   158ac:	ldp	x19, x20, [sp, #16]
   158b0:	ldp	x29, x30, [sp], #96
   158b4:	ret
   158b8:	str	x23, [sp, #48]
   158bc:	ldr	x0, [x19]
   158c0:	add	x0, x0, #0x1
   158c4:	str	x0, [x19]
   158c8:	ldr	x23, [sp, #80]
   158cc:	add	x22, x20, #0x328
   158d0:	add	x22, x22, #0x1a0
   158d4:	ldr	x0, [x23, #8]
   158d8:	cmp	x0, x22
   158dc:	b.eq	15940 <PyFloat_FromString@plt+0xeeb0>  // b.none
   158e0:	mov	x1, x22
   158e4:	bl	69c0 <PyType_IsSubtype@plt>
   158e8:	cbnz	w0, 15940 <PyFloat_FromString@plt+0xeeb0>
   158ec:	ldr	x2, [x23, #8]
   158f0:	ldr	x0, [x2, #168]
   158f4:	tbnz	w0, #24, 159dc <PyFloat_FromString@plt+0xef4c>
   158f8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   158fc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15900:	ldr	x2, [x2, #24]
   15904:	add	x1, x1, #0xb70
   15908:	ldr	x0, [x0, #3936]
   1590c:	ldr	x0, [x0]
   15910:	bl	6a10 <PyErr_Format@plt>
   15914:	ldr	x0, [x19]
   15918:	sub	x0, x0, #0x1
   1591c:	str	x0, [x19]
   15920:	cbz	x0, 15ab8 <PyFloat_FromString@plt+0xf028>
   15924:	ldp	x21, x22, [sp, #32]
   15928:	ldr	x23, [sp, #48]
   1592c:	mov	x20, #0x0                   	// #0
   15930:	mov	x0, x20
   15934:	ldp	x19, x20, [sp, #16]
   15938:	ldp	x29, x30, [sp], #96
   1593c:	ret
   15940:	ldr	x0, [x23]
   15944:	add	x0, x0, #0x1
   15948:	str	x0, [x23]
   1594c:	add	x20, x20, #0x328
   15950:	add	x0, x20, #0x1a0
   15954:	bl	6950 <_PyObject_New@plt>
   15958:	mov	x20, x0
   1595c:	cbz	x0, 15a40 <PyFloat_FromString@plt+0xefb0>
   15960:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   15964:	mov	x2, #0xffffffffffffffff    	// #-1
   15968:	mov	w1, #0x30                  	// #48
   1596c:	str	x2, [x20, #16]
   15970:	ldr	q0, [x0, #2128]
   15974:	add	x0, x20, #0x48
   15978:	strb	w1, [x20, #24]
   1597c:	add	x2, x23, #0x18
   15980:	stp	xzr, xzr, [x20, #32]
   15984:	add	x1, x19, #0x18
   15988:	str	x0, [x20, #64]
   1598c:	add	x0, x20, #0x18
   15990:	str	q0, [x20, #48]
   15994:	bl	2e228 <PyInit__decimal@@Base+0x11fe8>
   15998:	ldr	x0, [x19]
   1599c:	sub	x0, x0, #0x1
   159a0:	str	x0, [x19]
   159a4:	cbz	x0, 15aac <PyFloat_FromString@plt+0xf01c>
   159a8:	ldr	x0, [x23]
   159ac:	sub	x0, x0, #0x1
   159b0:	str	x0, [x23]
   159b4:	cbz	x0, 15a68 <PyFloat_FromString@plt+0xefd8>
   159b8:	mov	x0, x20
   159bc:	ldp	x19, x20, [sp, #16]
   159c0:	ldp	x21, x22, [sp, #32]
   159c4:	ldr	x23, [sp, #48]
   159c8:	ldp	x29, x30, [sp], #96
   159cc:	ret
   159d0:	str	x23, [sp, #48]
   159d4:	ldr	x21, [sp, #72]
   159d8:	b	158bc <PyFloat_FromString@plt+0xee2c>
   159dc:	mov	x1, x23
   159e0:	mov	x2, x21
   159e4:	mov	x0, x22
   159e8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   159ec:	mov	x23, x0
   159f0:	cbnz	x0, 1594c <PyFloat_FromString@plt+0xeebc>
   159f4:	b	15914 <PyFloat_FromString@plt+0xee84>
   159f8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   159fc:	add	x2, sp, #0x58
   15a00:	mov	x1, #0x0                   	// #0
   15a04:	ldr	x0, [x0, #2056]
   15a08:	bl	6740 <PyContextVar_Get@plt>
   15a0c:	tbnz	w0, #31, 15b10 <PyFloat_FromString@plt+0xf080>
   15a10:	ldr	x21, [sp, #88]
   15a14:	cbz	x21, 15ad0 <PyFloat_FromString@plt+0xf040>
   15a18:	str	x21, [sp, #72]
   15a1c:	ldr	x0, [x21]
   15a20:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   15a24:	sub	x0, x0, #0x1
   15a28:	str	x0, [x21]
   15a2c:	cbnz	x0, 15858 <PyFloat_FromString@plt+0xedc8>
   15a30:	mov	x0, x21
   15a34:	bl	65d0 <_Py_Dealloc@plt>
   15a38:	ldr	x21, [sp, #72]
   15a3c:	b	15858 <PyFloat_FromString@plt+0xedc8>
   15a40:	ldr	x0, [x19]
   15a44:	sub	x0, x0, #0x1
   15a48:	str	x0, [x19]
   15a4c:	cbnz	x0, 15a58 <PyFloat_FromString@plt+0xefc8>
   15a50:	mov	x0, x19
   15a54:	bl	65d0 <_Py_Dealloc@plt>
   15a58:	ldr	x0, [x23]
   15a5c:	sub	x0, x0, #0x1
   15a60:	str	x0, [x23]
   15a64:	cbnz	x0, 15924 <PyFloat_FromString@plt+0xee94>
   15a68:	mov	x0, x23
   15a6c:	bl	65d0 <_Py_Dealloc@plt>
   15a70:	mov	x0, x20
   15a74:	ldp	x19, x20, [sp, #16]
   15a78:	ldp	x21, x22, [sp, #32]
   15a7c:	ldr	x23, [sp, #48]
   15a80:	ldp	x29, x30, [sp], #96
   15a84:	ret
   15a88:	mov	x1, x19
   15a8c:	mov	x2, x21
   15a90:	mov	x0, x22
   15a94:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15a98:	mov	x19, x0
   15a9c:	cbz	x0, 15ae0 <PyFloat_FromString@plt+0xf050>
   15aa0:	str	x23, [sp, #48]
   15aa4:	ldr	x21, [sp, #72]
   15aa8:	b	158c8 <PyFloat_FromString@plt+0xee38>
   15aac:	mov	x0, x19
   15ab0:	bl	65d0 <_Py_Dealloc@plt>
   15ab4:	b	159a8 <PyFloat_FromString@plt+0xef18>
   15ab8:	mov	x0, x19
   15abc:	mov	x20, #0x0                   	// #0
   15ac0:	bl	65d0 <_Py_Dealloc@plt>
   15ac4:	ldp	x21, x22, [sp, #32]
   15ac8:	ldr	x23, [sp, #48]
   15acc:	b	158a8 <PyFloat_FromString@plt+0xee18>
   15ad0:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   15ad4:	str	x0, [sp, #72]
   15ad8:	mov	x21, x0
   15adc:	cbnz	x0, 15a1c <PyFloat_FromString@plt+0xef8c>
   15ae0:	mov	x20, #0x0                   	// #0
   15ae4:	ldp	x21, x22, [sp, #32]
   15ae8:	b	15930 <PyFloat_FromString@plt+0xeea0>
   15aec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15af0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15af4:	mov	x20, #0x0                   	// #0
   15af8:	add	x1, x1, #0xba8
   15afc:	ldr	x0, [x0, #3936]
   15b00:	ldr	x0, [x0]
   15b04:	bl	6650 <PyErr_SetString@plt>
   15b08:	ldp	x21, x22, [sp, #32]
   15b0c:	b	158a8 <PyFloat_FromString@plt+0xee18>
   15b10:	mov	x20, #0x0                   	// #0
   15b14:	ldp	x21, x22, [sp, #32]
   15b18:	b	158a8 <PyFloat_FromString@plt+0xee18>
   15b1c:	nop
   15b20:	stp	x29, x30, [sp, #-96]!
   15b24:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   15b28:	add	x3, x3, #0x9b0
   15b2c:	mov	x29, sp
   15b30:	stp	x19, x20, [sp, #16]
   15b34:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   15b38:	mov	x19, x0
   15b3c:	ldr	x20, [x20, #4008]
   15b40:	mov	x0, x1
   15b44:	add	x3, x3, #0x470
   15b48:	mov	x1, x2
   15b4c:	add	x5, sp, #0x50
   15b50:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   15b54:	add	x4, sp, #0x48
   15b58:	add	x2, x2, #0xc88
   15b5c:	str	wzr, [sp, #68]
   15b60:	str	x20, [sp, #80]
   15b64:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15b68:	cbz	w0, 15c70 <PyFloat_FromString@plt+0xf1e0>
   15b6c:	stp	x21, x22, [sp, #32]
   15b70:	ldr	x21, [sp, #80]
   15b74:	cmp	x21, x20
   15b78:	b.eq	15d50 <PyFloat_FromString@plt+0xf2c0>  // b.none
   15b7c:	ldr	x0, [x21, #8]
   15b80:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   15b84:	add	x1, x20, #0x328
   15b88:	cmp	x0, x1
   15b8c:	b.eq	15b9c <PyFloat_FromString@plt+0xf10c>  // b.none
   15b90:	bl	69c0 <PyType_IsSubtype@plt>
   15b94:	cbz	w0, 15e74 <PyFloat_FromString@plt+0xf3e4>
   15b98:	ldr	x21, [sp, #80]
   15b9c:	add	x22, x20, #0x328
   15ba0:	ldr	x0, [x19, #8]
   15ba4:	add	x22, x22, #0x1a0
   15ba8:	cmp	x0, x22
   15bac:	b.eq	15bfc <PyFloat_FromString@plt+0xf16c>  // b.none
   15bb0:	mov	x1, x22
   15bb4:	bl	69c0 <PyType_IsSubtype@plt>
   15bb8:	cbnz	w0, 15d28 <PyFloat_FromString@plt+0xf298>
   15bbc:	ldr	x2, [x19, #8]
   15bc0:	ldr	x0, [x2, #168]
   15bc4:	tbnz	w0, #24, 15d98 <PyFloat_FromString@plt+0xf308>
   15bc8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15bcc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15bd0:	ldr	x2, [x2, #24]
   15bd4:	add	x1, x1, #0xb70
   15bd8:	ldr	x0, [x0, #3936]
   15bdc:	mov	x20, #0x0                   	// #0
   15be0:	ldr	x0, [x0]
   15be4:	bl	6a10 <PyErr_Format@plt>
   15be8:	ldp	x21, x22, [sp, #32]
   15bec:	mov	x0, x20
   15bf0:	ldp	x19, x20, [sp, #16]
   15bf4:	ldp	x29, x30, [sp], #96
   15bf8:	ret
   15bfc:	str	x23, [sp, #48]
   15c00:	ldr	x0, [x19]
   15c04:	add	x0, x0, #0x1
   15c08:	str	x0, [x19]
   15c0c:	ldr	x23, [sp, #72]
   15c10:	add	x22, x20, #0x328
   15c14:	add	x22, x22, #0x1a0
   15c18:	ldr	x0, [x23, #8]
   15c1c:	cmp	x0, x22
   15c20:	b.eq	15c84 <PyFloat_FromString@plt+0xf1f4>  // b.none
   15c24:	mov	x1, x22
   15c28:	bl	69c0 <PyType_IsSubtype@plt>
   15c2c:	cbnz	w0, 15c84 <PyFloat_FromString@plt+0xf1f4>
   15c30:	ldr	x2, [x23, #8]
   15c34:	ldr	x0, [x2, #168]
   15c38:	tbnz	w0, #24, 15d34 <PyFloat_FromString@plt+0xf2a4>
   15c3c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15c40:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15c44:	ldr	x2, [x2, #24]
   15c48:	add	x1, x1, #0xb70
   15c4c:	ldr	x0, [x0, #3936]
   15c50:	ldr	x0, [x0]
   15c54:	bl	6a10 <PyErr_Format@plt>
   15c58:	ldr	x0, [x19]
   15c5c:	sub	x0, x0, #0x1
   15c60:	str	x0, [x19]
   15c64:	cbz	x0, 15e30 <PyFloat_FromString@plt+0xf3a0>
   15c68:	ldp	x21, x22, [sp, #32]
   15c6c:	ldr	x23, [sp, #48]
   15c70:	mov	x20, #0x0                   	// #0
   15c74:	mov	x0, x20
   15c78:	ldp	x19, x20, [sp, #16]
   15c7c:	ldp	x29, x30, [sp], #96
   15c80:	ret
   15c84:	ldr	x0, [x23]
   15c88:	add	x0, x0, #0x1
   15c8c:	str	x0, [x23]
   15c90:	add	x20, x20, #0x328
   15c94:	add	x0, x20, #0x1a0
   15c98:	bl	6950 <_PyObject_New@plt>
   15c9c:	mov	x20, x0
   15ca0:	cbz	x0, 15dd4 <PyFloat_FromString@plt+0xf344>
   15ca4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   15ca8:	mov	x2, #0xffffffffffffffff    	// #-1
   15cac:	mov	w1, #0x30                  	// #48
   15cb0:	str	x2, [x20, #16]
   15cb4:	ldr	q0, [x0, #2128]
   15cb8:	add	x0, x20, #0x48
   15cbc:	strb	w1, [x20, #24]
   15cc0:	add	x3, sp, #0x44
   15cc4:	stp	xzr, xzr, [x20, #32]
   15cc8:	add	x1, x19, #0x18
   15ccc:	add	x2, x23, #0x18
   15cd0:	str	x0, [x20, #64]
   15cd4:	add	x0, x20, #0x18
   15cd8:	str	q0, [x20, #48]
   15cdc:	bl	2d978 <PyInit__decimal@@Base+0x11738>
   15ce0:	ldr	x0, [x19]
   15ce4:	sub	x0, x0, #0x1
   15ce8:	str	x0, [x19]
   15cec:	cbz	x0, 15dc8 <PyFloat_FromString@plt+0xf338>
   15cf0:	ldr	x0, [x23]
   15cf4:	sub	x0, x0, #0x1
   15cf8:	str	x0, [x23]
   15cfc:	cbz	x0, 15dbc <PyFloat_FromString@plt+0xf32c>
   15d00:	ldr	w1, [sp, #68]
   15d04:	ldr	x0, [sp, #80]
   15d08:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   15d0c:	cbnz	w0, 15e08 <PyFloat_FromString@plt+0xf378>
   15d10:	mov	x0, x20
   15d14:	ldp	x19, x20, [sp, #16]
   15d18:	ldp	x21, x22, [sp, #32]
   15d1c:	ldr	x23, [sp, #48]
   15d20:	ldp	x29, x30, [sp], #96
   15d24:	ret
   15d28:	str	x23, [sp, #48]
   15d2c:	ldr	x21, [sp, #80]
   15d30:	b	15c00 <PyFloat_FromString@plt+0xf170>
   15d34:	mov	x1, x23
   15d38:	mov	x2, x21
   15d3c:	mov	x0, x22
   15d40:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15d44:	mov	x23, x0
   15d48:	cbnz	x0, 15c90 <PyFloat_FromString@plt+0xf200>
   15d4c:	b	15c58 <PyFloat_FromString@plt+0xf1c8>
   15d50:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   15d54:	add	x2, sp, #0x58
   15d58:	mov	x1, #0x0                   	// #0
   15d5c:	ldr	x0, [x0, #2056]
   15d60:	bl	6740 <PyContextVar_Get@plt>
   15d64:	tbnz	w0, #31, 15e98 <PyFloat_FromString@plt+0xf408>
   15d68:	ldr	x21, [sp, #88]
   15d6c:	cbz	x21, 15e54 <PyFloat_FromString@plt+0xf3c4>
   15d70:	str	x21, [sp, #80]
   15d74:	ldr	x0, [x21]
   15d78:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   15d7c:	sub	x0, x0, #0x1
   15d80:	str	x0, [x21]
   15d84:	cbnz	x0, 15b9c <PyFloat_FromString@plt+0xf10c>
   15d88:	mov	x0, x21
   15d8c:	bl	65d0 <_Py_Dealloc@plt>
   15d90:	ldr	x21, [sp, #80]
   15d94:	b	15b9c <PyFloat_FromString@plt+0xf10c>
   15d98:	mov	x1, x19
   15d9c:	mov	x2, x21
   15da0:	mov	x0, x22
   15da4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   15da8:	mov	x19, x0
   15dac:	cbz	x0, 15e68 <PyFloat_FromString@plt+0xf3d8>
   15db0:	str	x23, [sp, #48]
   15db4:	ldr	x21, [sp, #80]
   15db8:	b	15c0c <PyFloat_FromString@plt+0xf17c>
   15dbc:	mov	x0, x23
   15dc0:	bl	65d0 <_Py_Dealloc@plt>
   15dc4:	b	15d00 <PyFloat_FromString@plt+0xf270>
   15dc8:	mov	x0, x19
   15dcc:	bl	65d0 <_Py_Dealloc@plt>
   15dd0:	b	15cf0 <PyFloat_FromString@plt+0xf260>
   15dd4:	ldr	x0, [x19]
   15dd8:	sub	x0, x0, #0x1
   15ddc:	str	x0, [x19]
   15de0:	cbz	x0, 15e48 <PyFloat_FromString@plt+0xf3b8>
   15de4:	ldr	x0, [x23]
   15de8:	sub	x0, x0, #0x1
   15dec:	str	x0, [x23]
   15df0:	cbnz	x0, 15c68 <PyFloat_FromString@plt+0xf1d8>
   15df4:	mov	x0, x23
   15df8:	bl	65d0 <_Py_Dealloc@plt>
   15dfc:	ldp	x21, x22, [sp, #32]
   15e00:	ldr	x23, [sp, #48]
   15e04:	b	15bec <PyFloat_FromString@plt+0xf15c>
   15e08:	ldr	x0, [x20]
   15e0c:	sub	x0, x0, #0x1
   15e10:	str	x0, [x20]
   15e14:	cbnz	x0, 15c68 <PyFloat_FromString@plt+0xf1d8>
   15e18:	mov	x0, x20
   15e1c:	mov	x20, #0x0                   	// #0
   15e20:	bl	65d0 <_Py_Dealloc@plt>
   15e24:	ldp	x21, x22, [sp, #32]
   15e28:	ldr	x23, [sp, #48]
   15e2c:	b	15bec <PyFloat_FromString@plt+0xf15c>
   15e30:	mov	x0, x19
   15e34:	mov	x20, #0x0                   	// #0
   15e38:	bl	65d0 <_Py_Dealloc@plt>
   15e3c:	ldp	x21, x22, [sp, #32]
   15e40:	ldr	x23, [sp, #48]
   15e44:	b	15bec <PyFloat_FromString@plt+0xf15c>
   15e48:	mov	x0, x19
   15e4c:	bl	65d0 <_Py_Dealloc@plt>
   15e50:	b	15de4 <PyFloat_FromString@plt+0xf354>
   15e54:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   15e58:	str	x0, [sp, #80]
   15e5c:	mov	x21, x0
   15e60:	cbnz	x0, 15d74 <PyFloat_FromString@plt+0xf2e4>
   15e64:	nop
   15e68:	mov	x20, #0x0                   	// #0
   15e6c:	ldp	x21, x22, [sp, #32]
   15e70:	b	15c74 <PyFloat_FromString@plt+0xf1e4>
   15e74:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15e78:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15e7c:	mov	x20, #0x0                   	// #0
   15e80:	add	x1, x1, #0xba8
   15e84:	ldr	x0, [x0, #3936]
   15e88:	ldr	x0, [x0]
   15e8c:	bl	6650 <PyErr_SetString@plt>
   15e90:	ldp	x21, x22, [sp, #32]
   15e94:	b	15bec <PyFloat_FromString@plt+0xf15c>
   15e98:	mov	x20, #0x0                   	// #0
   15e9c:	ldp	x21, x22, [sp, #32]
   15ea0:	b	15bec <PyFloat_FromString@plt+0xf15c>
   15ea4:	nop
   15ea8:	stp	x29, x30, [sp, #-112]!
   15eac:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   15eb0:	add	x3, x3, #0x9b0
   15eb4:	mov	x29, sp
   15eb8:	stp	x19, x20, [sp, #16]
   15ebc:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   15ec0:	mov	x19, x0
   15ec4:	ldr	x20, [x20, #4008]
   15ec8:	mov	x0, x1
   15ecc:	add	x3, x3, #0x490
   15ed0:	mov	x1, x2
   15ed4:	add	x5, sp, #0x60
   15ed8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   15edc:	add	x4, sp, #0x58
   15ee0:	add	x2, x2, #0xc88
   15ee4:	str	wzr, [sp, #84]
   15ee8:	str	x20, [sp, #96]
   15eec:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15ef0:	cbz	w0, 15ff8 <PyFloat_FromString@plt+0xf568>
   15ef4:	stp	x21, x22, [sp, #32]
   15ef8:	ldr	x21, [sp, #96]
   15efc:	cmp	x21, x20
   15f00:	b.eq	160e4 <PyFloat_FromString@plt+0xf654>  // b.none
   15f04:	ldr	x0, [x21, #8]
   15f08:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   15f0c:	add	x1, x22, #0x328
   15f10:	cmp	x0, x1
   15f14:	b.eq	15f24 <PyFloat_FromString@plt+0xf494>  // b.none
   15f18:	bl	69c0 <PyType_IsSubtype@plt>
   15f1c:	cbz	w0, 16204 <PyFloat_FromString@plt+0xf774>
   15f20:	ldr	x21, [sp, #96]
   15f24:	add	x20, x22, #0x328
   15f28:	ldr	x0, [x19, #8]
   15f2c:	add	x20, x20, #0x1a0
   15f30:	cmp	x0, x20
   15f34:	b.eq	15f84 <PyFloat_FromString@plt+0xf4f4>  // b.none
   15f38:	mov	x1, x20
   15f3c:	bl	69c0 <PyType_IsSubtype@plt>
   15f40:	cbnz	w0, 160b8 <PyFloat_FromString@plt+0xf628>
   15f44:	ldr	x2, [x19, #8]
   15f48:	ldr	x0, [x2, #168]
   15f4c:	tbnz	w0, #24, 1612c <PyFloat_FromString@plt+0xf69c>
   15f50:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15f54:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15f58:	ldr	x2, [x2, #24]
   15f5c:	add	x1, x1, #0xb70
   15f60:	ldr	x0, [x0, #3936]
   15f64:	mov	x20, #0x0                   	// #0
   15f68:	ldr	x0, [x0]
   15f6c:	bl	6a10 <PyErr_Format@plt>
   15f70:	ldp	x21, x22, [sp, #32]
   15f74:	mov	x0, x20
   15f78:	ldp	x19, x20, [sp, #16]
   15f7c:	ldp	x29, x30, [sp], #112
   15f80:	ret
   15f84:	str	x23, [sp, #48]
   15f88:	ldr	x0, [x19]
   15f8c:	add	x0, x0, #0x1
   15f90:	str	x0, [x19]
   15f94:	ldr	x23, [sp, #88]
   15f98:	add	x20, x22, #0x328
   15f9c:	add	x20, x20, #0x1a0
   15fa0:	ldr	x0, [x23, #8]
   15fa4:	cmp	x0, x20
   15fa8:	b.eq	1600c <PyFloat_FromString@plt+0xf57c>  // b.none
   15fac:	mov	x1, x20
   15fb0:	bl	69c0 <PyType_IsSubtype@plt>
   15fb4:	cbnz	w0, 1600c <PyFloat_FromString@plt+0xf57c>
   15fb8:	ldr	x2, [x23, #8]
   15fbc:	ldr	x0, [x2, #168]
   15fc0:	tbnz	w0, #24, 160c4 <PyFloat_FromString@plt+0xf634>
   15fc4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   15fc8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   15fcc:	ldr	x2, [x2, #24]
   15fd0:	add	x1, x1, #0xb70
   15fd4:	ldr	x0, [x0, #3936]
   15fd8:	ldr	x0, [x0]
   15fdc:	bl	6a10 <PyErr_Format@plt>
   15fe0:	ldr	x0, [x19]
   15fe4:	sub	x0, x0, #0x1
   15fe8:	str	x0, [x19]
   15fec:	cbz	x0, 161c4 <PyFloat_FromString@plt+0xf734>
   15ff0:	ldp	x21, x22, [sp, #32]
   15ff4:	ldr	x23, [sp, #48]
   15ff8:	mov	x20, #0x0                   	// #0
   15ffc:	mov	x0, x20
   16000:	ldp	x19, x20, [sp, #16]
   16004:	ldp	x29, x30, [sp], #112
   16008:	ret
   1600c:	ldr	x0, [x23]
   16010:	add	x0, x0, #0x1
   16014:	str	x0, [x23]
   16018:	add	x0, x22, #0x328
   1601c:	add	x0, x0, #0x1a0
   16020:	bl	6950 <_PyObject_New@plt>
   16024:	mov	x20, x0
   16028:	cbz	x0, 16168 <PyFloat_FromString@plt+0xf6d8>
   1602c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   16030:	mov	x2, #0xffffffffffffffff    	// #-1
   16034:	ldr	x3, [sp, #96]
   16038:	mov	w1, #0x30                  	// #48
   1603c:	ldr	q0, [x0, #2128]
   16040:	add	x0, x20, #0x48
   16044:	str	x2, [x20, #16]
   16048:	add	x4, sp, #0x54
   1604c:	strb	w1, [x20, #24]
   16050:	add	x3, x3, #0x10
   16054:	stp	xzr, xzr, [x20, #32]
   16058:	add	x1, x19, #0x18
   1605c:	add	x2, x23, #0x18
   16060:	str	x0, [x20, #64]
   16064:	add	x0, x20, #0x18
   16068:	str	q0, [x20, #48]
   1606c:	bl	2da00 <PyInit__decimal@@Base+0x117c0>
   16070:	ldr	x0, [x19]
   16074:	sub	x0, x0, #0x1
   16078:	str	x0, [x19]
   1607c:	cbz	x0, 1615c <PyFloat_FromString@plt+0xf6cc>
   16080:	ldr	x0, [x23]
   16084:	sub	x0, x0, #0x1
   16088:	str	x0, [x23]
   1608c:	cbz	x0, 16150 <PyFloat_FromString@plt+0xf6c0>
   16090:	ldr	w1, [sp, #84]
   16094:	ldr	x0, [sp, #96]
   16098:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1609c:	cbnz	w0, 1619c <PyFloat_FromString@plt+0xf70c>
   160a0:	mov	x0, x20
   160a4:	ldp	x19, x20, [sp, #16]
   160a8:	ldp	x21, x22, [sp, #32]
   160ac:	ldr	x23, [sp, #48]
   160b0:	ldp	x29, x30, [sp], #112
   160b4:	ret
   160b8:	str	x23, [sp, #48]
   160bc:	ldr	x21, [sp, #96]
   160c0:	b	15f88 <PyFloat_FromString@plt+0xf4f8>
   160c4:	mov	x1, x23
   160c8:	mov	x2, x21
   160cc:	mov	x0, x20
   160d0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   160d4:	str	x0, [sp, #72]
   160d8:	mov	x23, x0
   160dc:	cbnz	x0, 16018 <PyFloat_FromString@plt+0xf588>
   160e0:	b	15fe0 <PyFloat_FromString@plt+0xf550>
   160e4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   160e8:	add	x2, sp, #0x68
   160ec:	mov	x1, #0x0                   	// #0
   160f0:	ldr	x0, [x0, #2056]
   160f4:	bl	6740 <PyContextVar_Get@plt>
   160f8:	tbnz	w0, #31, 16228 <PyFloat_FromString@plt+0xf798>
   160fc:	ldr	x21, [sp, #104]
   16100:	cbz	x21, 161e8 <PyFloat_FromString@plt+0xf758>
   16104:	str	x21, [sp, #96]
   16108:	ldr	x0, [x21]
   1610c:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   16110:	sub	x0, x0, #0x1
   16114:	str	x0, [x21]
   16118:	cbnz	x0, 15f24 <PyFloat_FromString@plt+0xf494>
   1611c:	mov	x0, x21
   16120:	bl	65d0 <_Py_Dealloc@plt>
   16124:	ldr	x21, [sp, #96]
   16128:	b	15f24 <PyFloat_FromString@plt+0xf494>
   1612c:	mov	x1, x19
   16130:	mov	x2, x21
   16134:	mov	x0, x20
   16138:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1613c:	mov	x19, x0
   16140:	cbz	x0, 161f8 <PyFloat_FromString@plt+0xf768>
   16144:	str	x23, [sp, #48]
   16148:	ldr	x21, [sp, #96]
   1614c:	b	15f94 <PyFloat_FromString@plt+0xf504>
   16150:	mov	x0, x23
   16154:	bl	65d0 <_Py_Dealloc@plt>
   16158:	b	16090 <PyFloat_FromString@plt+0xf600>
   1615c:	mov	x0, x19
   16160:	bl	65d0 <_Py_Dealloc@plt>
   16164:	b	16080 <PyFloat_FromString@plt+0xf5f0>
   16168:	ldr	x0, [x19]
   1616c:	sub	x0, x0, #0x1
   16170:	str	x0, [x19]
   16174:	cbz	x0, 161dc <PyFloat_FromString@plt+0xf74c>
   16178:	ldr	x0, [x23]
   1617c:	sub	x0, x0, #0x1
   16180:	str	x0, [x23]
   16184:	cbnz	x0, 15ff0 <PyFloat_FromString@plt+0xf560>
   16188:	mov	x0, x23
   1618c:	bl	65d0 <_Py_Dealloc@plt>
   16190:	ldp	x21, x22, [sp, #32]
   16194:	ldr	x23, [sp, #48]
   16198:	b	15f74 <PyFloat_FromString@plt+0xf4e4>
   1619c:	ldr	x0, [x20]
   161a0:	sub	x0, x0, #0x1
   161a4:	str	x0, [x20]
   161a8:	cbnz	x0, 15ff0 <PyFloat_FromString@plt+0xf560>
   161ac:	mov	x0, x20
   161b0:	mov	x20, #0x0                   	// #0
   161b4:	bl	65d0 <_Py_Dealloc@plt>
   161b8:	ldp	x21, x22, [sp, #32]
   161bc:	ldr	x23, [sp, #48]
   161c0:	b	15f74 <PyFloat_FromString@plt+0xf4e4>
   161c4:	mov	x0, x19
   161c8:	mov	x20, #0x0                   	// #0
   161cc:	bl	65d0 <_Py_Dealloc@plt>
   161d0:	ldp	x21, x22, [sp, #32]
   161d4:	ldr	x23, [sp, #48]
   161d8:	b	15f74 <PyFloat_FromString@plt+0xf4e4>
   161dc:	mov	x0, x19
   161e0:	bl	65d0 <_Py_Dealloc@plt>
   161e4:	b	16178 <PyFloat_FromString@plt+0xf6e8>
   161e8:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   161ec:	str	x0, [sp, #96]
   161f0:	mov	x21, x0
   161f4:	cbnz	x0, 16108 <PyFloat_FromString@plt+0xf678>
   161f8:	mov	x20, #0x0                   	// #0
   161fc:	ldp	x21, x22, [sp, #32]
   16200:	b	15ffc <PyFloat_FromString@plt+0xf56c>
   16204:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16208:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1620c:	mov	x20, #0x0                   	// #0
   16210:	add	x1, x1, #0xba8
   16214:	ldr	x0, [x0, #3936]
   16218:	ldr	x0, [x0]
   1621c:	bl	6650 <PyErr_SetString@plt>
   16220:	ldp	x21, x22, [sp, #32]
   16224:	b	15f74 <PyFloat_FromString@plt+0xf4e4>
   16228:	mov	x20, #0x0                   	// #0
   1622c:	ldp	x21, x22, [sp, #32]
   16230:	b	15f74 <PyFloat_FromString@plt+0xf4e4>
   16234:	nop
   16238:	stp	x29, x30, [sp, #-96]!
   1623c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   16240:	add	x3, x3, #0x9b0
   16244:	mov	x29, sp
   16248:	stp	x19, x20, [sp, #16]
   1624c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   16250:	mov	x19, x0
   16254:	ldr	x20, [x20, #4008]
   16258:	mov	x0, x1
   1625c:	add	x3, x3, #0x4b0
   16260:	mov	x1, x2
   16264:	add	x5, sp, #0x50
   16268:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1626c:	add	x4, sp, #0x48
   16270:	add	x2, x2, #0xc88
   16274:	str	wzr, [sp, #68]
   16278:	str	x20, [sp, #80]
   1627c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16280:	cbz	w0, 16388 <PyFloat_FromString@plt+0xf8f8>
   16284:	stp	x21, x22, [sp, #32]
   16288:	ldr	x21, [sp, #80]
   1628c:	cmp	x21, x20
   16290:	b.eq	16470 <PyFloat_FromString@plt+0xf9e0>  // b.none
   16294:	ldr	x0, [x21, #8]
   16298:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1629c:	add	x1, x22, #0x328
   162a0:	cmp	x0, x1
   162a4:	b.eq	162b4 <PyFloat_FromString@plt+0xf824>  // b.none
   162a8:	bl	69c0 <PyType_IsSubtype@plt>
   162ac:	cbz	w0, 16594 <PyFloat_FromString@plt+0xfb04>
   162b0:	ldr	x21, [sp, #80]
   162b4:	add	x20, x22, #0x328
   162b8:	ldr	x0, [x19, #8]
   162bc:	add	x20, x20, #0x1a0
   162c0:	cmp	x0, x20
   162c4:	b.eq	16314 <PyFloat_FromString@plt+0xf884>  // b.none
   162c8:	mov	x1, x20
   162cc:	bl	69c0 <PyType_IsSubtype@plt>
   162d0:	cbnz	w0, 16448 <PyFloat_FromString@plt+0xf9b8>
   162d4:	ldr	x2, [x19, #8]
   162d8:	ldr	x0, [x2, #168]
   162dc:	tbnz	w0, #24, 164b8 <PyFloat_FromString@plt+0xfa28>
   162e0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   162e4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   162e8:	ldr	x2, [x2, #24]
   162ec:	add	x1, x1, #0xb70
   162f0:	ldr	x0, [x0, #3936]
   162f4:	mov	x20, #0x0                   	// #0
   162f8:	ldr	x0, [x0]
   162fc:	bl	6a10 <PyErr_Format@plt>
   16300:	ldp	x21, x22, [sp, #32]
   16304:	mov	x0, x20
   16308:	ldp	x19, x20, [sp, #16]
   1630c:	ldp	x29, x30, [sp], #96
   16310:	ret
   16314:	str	x23, [sp, #48]
   16318:	ldr	x0, [x19]
   1631c:	add	x0, x0, #0x1
   16320:	str	x0, [x19]
   16324:	ldr	x23, [sp, #72]
   16328:	add	x20, x22, #0x328
   1632c:	add	x20, x20, #0x1a0
   16330:	ldr	x0, [x23, #8]
   16334:	cmp	x0, x20
   16338:	b.eq	1639c <PyFloat_FromString@plt+0xf90c>  // b.none
   1633c:	mov	x1, x20
   16340:	bl	69c0 <PyType_IsSubtype@plt>
   16344:	cbnz	w0, 1639c <PyFloat_FromString@plt+0xf90c>
   16348:	ldr	x2, [x23, #8]
   1634c:	ldr	x0, [x2, #168]
   16350:	tbnz	w0, #24, 16454 <PyFloat_FromString@plt+0xf9c4>
   16354:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16358:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1635c:	ldr	x2, [x2, #24]
   16360:	add	x1, x1, #0xb70
   16364:	ldr	x0, [x0, #3936]
   16368:	ldr	x0, [x0]
   1636c:	bl	6a10 <PyErr_Format@plt>
   16370:	ldr	x0, [x19]
   16374:	sub	x0, x0, #0x1
   16378:	str	x0, [x19]
   1637c:	cbz	x0, 16550 <PyFloat_FromString@plt+0xfac0>
   16380:	ldp	x21, x22, [sp, #32]
   16384:	ldr	x23, [sp, #48]
   16388:	mov	x20, #0x0                   	// #0
   1638c:	mov	x0, x20
   16390:	ldp	x19, x20, [sp, #16]
   16394:	ldp	x29, x30, [sp], #96
   16398:	ret
   1639c:	ldr	x1, [x23]
   163a0:	add	x1, x1, #0x1
   163a4:	str	x1, [x23]
   163a8:	add	x0, x22, #0x328
   163ac:	add	x0, x0, #0x1a0
   163b0:	bl	6950 <_PyObject_New@plt>
   163b4:	mov	x20, x0
   163b8:	cbz	x0, 164f4 <PyFloat_FromString@plt+0xfa64>
   163bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   163c0:	add	x1, x20, #0x48
   163c4:	ldr	x3, [sp, #80]
   163c8:	mov	x2, #0xffffffffffffffff    	// #-1
   163cc:	ldr	q0, [x0, #2128]
   163d0:	mov	w0, #0x30                  	// #48
   163d4:	str	x2, [x20, #16]
   163d8:	add	x4, sp, #0x44
   163dc:	strb	w0, [x20, #24]
   163e0:	add	x3, x3, #0x10
   163e4:	stp	xzr, xzr, [x20, #32]
   163e8:	add	x0, x20, #0x18
   163ec:	add	x2, x23, #0x18
   163f0:	str	x1, [x20, #64]
   163f4:	add	x1, x19, #0x18
   163f8:	str	q0, [x20, #48]
   163fc:	bl	32748 <PyInit__decimal@@Base+0x16508>
   16400:	ldr	x1, [x19]
   16404:	sub	x1, x1, #0x1
   16408:	str	x1, [x19]
   1640c:	cbz	x1, 164e8 <PyFloat_FromString@plt+0xfa58>
   16410:	ldr	x1, [x23]
   16414:	sub	x1, x1, #0x1
   16418:	str	x1, [x23]
   1641c:	cbz	x1, 164dc <PyFloat_FromString@plt+0xfa4c>
   16420:	ldr	w1, [sp, #68]
   16424:	ldr	x0, [sp, #80]
   16428:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1642c:	cbnz	w0, 16528 <PyFloat_FromString@plt+0xfa98>
   16430:	mov	x0, x20
   16434:	ldp	x19, x20, [sp, #16]
   16438:	ldp	x21, x22, [sp, #32]
   1643c:	ldr	x23, [sp, #48]
   16440:	ldp	x29, x30, [sp], #96
   16444:	ret
   16448:	str	x23, [sp, #48]
   1644c:	ldr	x21, [sp, #80]
   16450:	b	16318 <PyFloat_FromString@plt+0xf888>
   16454:	mov	x1, x23
   16458:	mov	x2, x21
   1645c:	mov	x0, x20
   16460:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   16464:	mov	x23, x0
   16468:	cbnz	x0, 163a8 <PyFloat_FromString@plt+0xf918>
   1646c:	b	16370 <PyFloat_FromString@plt+0xf8e0>
   16470:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   16474:	add	x2, sp, #0x58
   16478:	mov	x1, #0x0                   	// #0
   1647c:	ldr	x0, [x0, #2056]
   16480:	bl	6740 <PyContextVar_Get@plt>
   16484:	tbnz	w0, #31, 165b8 <PyFloat_FromString@plt+0xfb28>
   16488:	ldr	x21, [sp, #88]
   1648c:	cbz	x21, 16574 <PyFloat_FromString@plt+0xfae4>
   16490:	str	x21, [sp, #80]
   16494:	ldr	x0, [x21]
   16498:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1649c:	sub	x0, x0, #0x1
   164a0:	str	x0, [x21]
   164a4:	cbnz	x0, 162b4 <PyFloat_FromString@plt+0xf824>
   164a8:	mov	x0, x21
   164ac:	bl	65d0 <_Py_Dealloc@plt>
   164b0:	ldr	x21, [sp, #80]
   164b4:	b	162b4 <PyFloat_FromString@plt+0xf824>
   164b8:	mov	x1, x19
   164bc:	mov	x2, x21
   164c0:	mov	x0, x20
   164c4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   164c8:	mov	x19, x0
   164cc:	cbz	x0, 16588 <PyFloat_FromString@plt+0xfaf8>
   164d0:	str	x23, [sp, #48]
   164d4:	ldr	x21, [sp, #80]
   164d8:	b	16324 <PyFloat_FromString@plt+0xf894>
   164dc:	mov	x0, x23
   164e0:	bl	65d0 <_Py_Dealloc@plt>
   164e4:	b	16420 <PyFloat_FromString@plt+0xf990>
   164e8:	mov	x0, x19
   164ec:	bl	65d0 <_Py_Dealloc@plt>
   164f0:	b	16410 <PyFloat_FromString@plt+0xf980>
   164f4:	ldr	x0, [x19]
   164f8:	sub	x0, x0, #0x1
   164fc:	str	x0, [x19]
   16500:	cbz	x0, 16568 <PyFloat_FromString@plt+0xfad8>
   16504:	ldr	x0, [x23]
   16508:	sub	x0, x0, #0x1
   1650c:	str	x0, [x23]
   16510:	cbnz	x0, 16380 <PyFloat_FromString@plt+0xf8f0>
   16514:	mov	x0, x23
   16518:	bl	65d0 <_Py_Dealloc@plt>
   1651c:	ldp	x21, x22, [sp, #32]
   16520:	ldr	x23, [sp, #48]
   16524:	b	16304 <PyFloat_FromString@plt+0xf874>
   16528:	ldr	x0, [x20]
   1652c:	sub	x0, x0, #0x1
   16530:	str	x0, [x20]
   16534:	cbnz	x0, 16380 <PyFloat_FromString@plt+0xf8f0>
   16538:	mov	x0, x20
   1653c:	mov	x20, #0x0                   	// #0
   16540:	bl	65d0 <_Py_Dealloc@plt>
   16544:	ldp	x21, x22, [sp, #32]
   16548:	ldr	x23, [sp, #48]
   1654c:	b	16304 <PyFloat_FromString@plt+0xf874>
   16550:	mov	x0, x19
   16554:	mov	x20, #0x0                   	// #0
   16558:	bl	65d0 <_Py_Dealloc@plt>
   1655c:	ldp	x21, x22, [sp, #32]
   16560:	ldr	x23, [sp, #48]
   16564:	b	16304 <PyFloat_FromString@plt+0xf874>
   16568:	mov	x0, x19
   1656c:	bl	65d0 <_Py_Dealloc@plt>
   16570:	b	16504 <PyFloat_FromString@plt+0xfa74>
   16574:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   16578:	str	x0, [sp, #80]
   1657c:	mov	x21, x0
   16580:	cbnz	x0, 16494 <PyFloat_FromString@plt+0xfa04>
   16584:	nop
   16588:	mov	x20, #0x0                   	// #0
   1658c:	ldp	x21, x22, [sp, #32]
   16590:	b	1638c <PyFloat_FromString@plt+0xf8fc>
   16594:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16598:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1659c:	mov	x20, #0x0                   	// #0
   165a0:	add	x1, x1, #0xba8
   165a4:	ldr	x0, [x0, #3936]
   165a8:	ldr	x0, [x0]
   165ac:	bl	6650 <PyErr_SetString@plt>
   165b0:	ldp	x21, x22, [sp, #32]
   165b4:	b	16304 <PyFloat_FromString@plt+0xf874>
   165b8:	mov	x20, #0x0                   	// #0
   165bc:	ldp	x21, x22, [sp, #32]
   165c0:	b	16304 <PyFloat_FromString@plt+0xf874>
   165c4:	nop
   165c8:	stp	x29, x30, [sp, #-96]!
   165cc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   165d0:	add	x3, x3, #0x9b0
   165d4:	mov	x29, sp
   165d8:	stp	x19, x20, [sp, #16]
   165dc:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   165e0:	mov	x19, x0
   165e4:	ldr	x20, [x20, #4008]
   165e8:	mov	x0, x1
   165ec:	add	x3, x3, #0x4d0
   165f0:	mov	x1, x2
   165f4:	add	x5, sp, #0x50
   165f8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   165fc:	add	x4, sp, #0x48
   16600:	add	x2, x2, #0xc88
   16604:	str	wzr, [sp, #68]
   16608:	str	x20, [sp, #80]
   1660c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16610:	cbz	w0, 16718 <PyFloat_FromString@plt+0xfc88>
   16614:	stp	x21, x22, [sp, #32]
   16618:	ldr	x21, [sp, #80]
   1661c:	cmp	x21, x20
   16620:	b.eq	16800 <PyFloat_FromString@plt+0xfd70>  // b.none
   16624:	ldr	x0, [x21, #8]
   16628:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1662c:	add	x1, x22, #0x328
   16630:	cmp	x0, x1
   16634:	b.eq	16644 <PyFloat_FromString@plt+0xfbb4>  // b.none
   16638:	bl	69c0 <PyType_IsSubtype@plt>
   1663c:	cbz	w0, 16924 <PyFloat_FromString@plt+0xfe94>
   16640:	ldr	x21, [sp, #80]
   16644:	add	x20, x22, #0x328
   16648:	ldr	x0, [x19, #8]
   1664c:	add	x20, x20, #0x1a0
   16650:	cmp	x0, x20
   16654:	b.eq	166a4 <PyFloat_FromString@plt+0xfc14>  // b.none
   16658:	mov	x1, x20
   1665c:	bl	69c0 <PyType_IsSubtype@plt>
   16660:	cbnz	w0, 167d8 <PyFloat_FromString@plt+0xfd48>
   16664:	ldr	x2, [x19, #8]
   16668:	ldr	x0, [x2, #168]
   1666c:	tbnz	w0, #24, 16848 <PyFloat_FromString@plt+0xfdb8>
   16670:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16674:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   16678:	ldr	x2, [x2, #24]
   1667c:	add	x1, x1, #0xb70
   16680:	ldr	x0, [x0, #3936]
   16684:	mov	x20, #0x0                   	// #0
   16688:	ldr	x0, [x0]
   1668c:	bl	6a10 <PyErr_Format@plt>
   16690:	ldp	x21, x22, [sp, #32]
   16694:	mov	x0, x20
   16698:	ldp	x19, x20, [sp, #16]
   1669c:	ldp	x29, x30, [sp], #96
   166a0:	ret
   166a4:	str	x23, [sp, #48]
   166a8:	ldr	x0, [x19]
   166ac:	add	x0, x0, #0x1
   166b0:	str	x0, [x19]
   166b4:	ldr	x23, [sp, #72]
   166b8:	add	x20, x22, #0x328
   166bc:	add	x20, x20, #0x1a0
   166c0:	ldr	x0, [x23, #8]
   166c4:	cmp	x0, x20
   166c8:	b.eq	1672c <PyFloat_FromString@plt+0xfc9c>  // b.none
   166cc:	mov	x1, x20
   166d0:	bl	69c0 <PyType_IsSubtype@plt>
   166d4:	cbnz	w0, 1672c <PyFloat_FromString@plt+0xfc9c>
   166d8:	ldr	x2, [x23, #8]
   166dc:	ldr	x0, [x2, #168]
   166e0:	tbnz	w0, #24, 167e4 <PyFloat_FromString@plt+0xfd54>
   166e4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   166e8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   166ec:	ldr	x2, [x2, #24]
   166f0:	add	x1, x1, #0xb70
   166f4:	ldr	x0, [x0, #3936]
   166f8:	ldr	x0, [x0]
   166fc:	bl	6a10 <PyErr_Format@plt>
   16700:	ldr	x0, [x19]
   16704:	sub	x0, x0, #0x1
   16708:	str	x0, [x19]
   1670c:	cbz	x0, 168e0 <PyFloat_FromString@plt+0xfe50>
   16710:	ldp	x21, x22, [sp, #32]
   16714:	ldr	x23, [sp, #48]
   16718:	mov	x20, #0x0                   	// #0
   1671c:	mov	x0, x20
   16720:	ldp	x19, x20, [sp, #16]
   16724:	ldp	x29, x30, [sp], #96
   16728:	ret
   1672c:	ldr	x1, [x23]
   16730:	add	x1, x1, #0x1
   16734:	str	x1, [x23]
   16738:	add	x0, x22, #0x328
   1673c:	add	x0, x0, #0x1a0
   16740:	bl	6950 <_PyObject_New@plt>
   16744:	mov	x20, x0
   16748:	cbz	x0, 16884 <PyFloat_FromString@plt+0xfdf4>
   1674c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   16750:	add	x1, x20, #0x48
   16754:	ldr	x3, [sp, #80]
   16758:	mov	x2, #0xffffffffffffffff    	// #-1
   1675c:	ldr	q0, [x0, #2128]
   16760:	mov	w0, #0x30                  	// #48
   16764:	str	x2, [x20, #16]
   16768:	add	x4, sp, #0x44
   1676c:	strb	w0, [x20, #24]
   16770:	add	x3, x3, #0x10
   16774:	stp	xzr, xzr, [x20, #32]
   16778:	add	x0, x20, #0x18
   1677c:	add	x2, x23, #0x18
   16780:	str	x1, [x20, #64]
   16784:	add	x1, x19, #0x18
   16788:	str	q0, [x20, #48]
   1678c:	bl	38718 <PyInit__decimal@@Base+0x1c4d8>
   16790:	ldr	x1, [x19]
   16794:	sub	x1, x1, #0x1
   16798:	str	x1, [x19]
   1679c:	cbz	x1, 16878 <PyFloat_FromString@plt+0xfde8>
   167a0:	ldr	x1, [x23]
   167a4:	sub	x1, x1, #0x1
   167a8:	str	x1, [x23]
   167ac:	cbz	x1, 1686c <PyFloat_FromString@plt+0xfddc>
   167b0:	ldr	w1, [sp, #68]
   167b4:	ldr	x0, [sp, #80]
   167b8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   167bc:	cbnz	w0, 168b8 <PyFloat_FromString@plt+0xfe28>
   167c0:	mov	x0, x20
   167c4:	ldp	x19, x20, [sp, #16]
   167c8:	ldp	x21, x22, [sp, #32]
   167cc:	ldr	x23, [sp, #48]
   167d0:	ldp	x29, x30, [sp], #96
   167d4:	ret
   167d8:	str	x23, [sp, #48]
   167dc:	ldr	x21, [sp, #80]
   167e0:	b	166a8 <PyFloat_FromString@plt+0xfc18>
   167e4:	mov	x1, x23
   167e8:	mov	x2, x21
   167ec:	mov	x0, x20
   167f0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   167f4:	mov	x23, x0
   167f8:	cbnz	x0, 16738 <PyFloat_FromString@plt+0xfca8>
   167fc:	b	16700 <PyFloat_FromString@plt+0xfc70>
   16800:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   16804:	add	x2, sp, #0x58
   16808:	mov	x1, #0x0                   	// #0
   1680c:	ldr	x0, [x0, #2056]
   16810:	bl	6740 <PyContextVar_Get@plt>
   16814:	tbnz	w0, #31, 16948 <PyFloat_FromString@plt+0xfeb8>
   16818:	ldr	x21, [sp, #88]
   1681c:	cbz	x21, 16904 <PyFloat_FromString@plt+0xfe74>
   16820:	str	x21, [sp, #80]
   16824:	ldr	x0, [x21]
   16828:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1682c:	sub	x0, x0, #0x1
   16830:	str	x0, [x21]
   16834:	cbnz	x0, 16644 <PyFloat_FromString@plt+0xfbb4>
   16838:	mov	x0, x21
   1683c:	bl	65d0 <_Py_Dealloc@plt>
   16840:	ldr	x21, [sp, #80]
   16844:	b	16644 <PyFloat_FromString@plt+0xfbb4>
   16848:	mov	x1, x19
   1684c:	mov	x2, x21
   16850:	mov	x0, x20
   16854:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   16858:	mov	x19, x0
   1685c:	cbz	x0, 16918 <PyFloat_FromString@plt+0xfe88>
   16860:	str	x23, [sp, #48]
   16864:	ldr	x21, [sp, #80]
   16868:	b	166b4 <PyFloat_FromString@plt+0xfc24>
   1686c:	mov	x0, x23
   16870:	bl	65d0 <_Py_Dealloc@plt>
   16874:	b	167b0 <PyFloat_FromString@plt+0xfd20>
   16878:	mov	x0, x19
   1687c:	bl	65d0 <_Py_Dealloc@plt>
   16880:	b	167a0 <PyFloat_FromString@plt+0xfd10>
   16884:	ldr	x0, [x19]
   16888:	sub	x0, x0, #0x1
   1688c:	str	x0, [x19]
   16890:	cbz	x0, 168f8 <PyFloat_FromString@plt+0xfe68>
   16894:	ldr	x0, [x23]
   16898:	sub	x0, x0, #0x1
   1689c:	str	x0, [x23]
   168a0:	cbnz	x0, 16710 <PyFloat_FromString@plt+0xfc80>
   168a4:	mov	x0, x23
   168a8:	bl	65d0 <_Py_Dealloc@plt>
   168ac:	ldp	x21, x22, [sp, #32]
   168b0:	ldr	x23, [sp, #48]
   168b4:	b	16694 <PyFloat_FromString@plt+0xfc04>
   168b8:	ldr	x0, [x20]
   168bc:	sub	x0, x0, #0x1
   168c0:	str	x0, [x20]
   168c4:	cbnz	x0, 16710 <PyFloat_FromString@plt+0xfc80>
   168c8:	mov	x0, x20
   168cc:	mov	x20, #0x0                   	// #0
   168d0:	bl	65d0 <_Py_Dealloc@plt>
   168d4:	ldp	x21, x22, [sp, #32]
   168d8:	ldr	x23, [sp, #48]
   168dc:	b	16694 <PyFloat_FromString@plt+0xfc04>
   168e0:	mov	x0, x19
   168e4:	mov	x20, #0x0                   	// #0
   168e8:	bl	65d0 <_Py_Dealloc@plt>
   168ec:	ldp	x21, x22, [sp, #32]
   168f0:	ldr	x23, [sp, #48]
   168f4:	b	16694 <PyFloat_FromString@plt+0xfc04>
   168f8:	mov	x0, x19
   168fc:	bl	65d0 <_Py_Dealloc@plt>
   16900:	b	16894 <PyFloat_FromString@plt+0xfe04>
   16904:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   16908:	str	x0, [sp, #80]
   1690c:	mov	x21, x0
   16910:	cbnz	x0, 16824 <PyFloat_FromString@plt+0xfd94>
   16914:	nop
   16918:	mov	x20, #0x0                   	// #0
   1691c:	ldp	x21, x22, [sp, #32]
   16920:	b	1671c <PyFloat_FromString@plt+0xfc8c>
   16924:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16928:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1692c:	mov	x20, #0x0                   	// #0
   16930:	add	x1, x1, #0xba8
   16934:	ldr	x0, [x0, #3936]
   16938:	ldr	x0, [x0]
   1693c:	bl	6650 <PyErr_SetString@plt>
   16940:	ldp	x21, x22, [sp, #32]
   16944:	b	16694 <PyFloat_FromString@plt+0xfc04>
   16948:	mov	x20, #0x0                   	// #0
   1694c:	ldp	x21, x22, [sp, #32]
   16950:	b	16694 <PyFloat_FromString@plt+0xfc04>
   16954:	nop
   16958:	stp	x29, x30, [sp, #-96]!
   1695c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   16960:	add	x3, x3, #0x9b0
   16964:	mov	x29, sp
   16968:	stp	x19, x20, [sp, #16]
   1696c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   16970:	mov	x19, x0
   16974:	ldr	x20, [x20, #4008]
   16978:	mov	x0, x1
   1697c:	add	x3, x3, #0x4f0
   16980:	mov	x1, x2
   16984:	add	x5, sp, #0x50
   16988:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1698c:	add	x4, sp, #0x48
   16990:	add	x2, x2, #0xc88
   16994:	str	wzr, [sp, #68]
   16998:	str	x20, [sp, #80]
   1699c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   169a0:	cbz	w0, 16aa8 <PyFloat_FromString@plt+0x10018>
   169a4:	stp	x21, x22, [sp, #32]
   169a8:	ldr	x21, [sp, #80]
   169ac:	cmp	x21, x20
   169b0:	b.eq	16b90 <PyFloat_FromString@plt+0x10100>  // b.none
   169b4:	ldr	x0, [x21, #8]
   169b8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   169bc:	add	x1, x22, #0x328
   169c0:	cmp	x0, x1
   169c4:	b.eq	169d4 <PyFloat_FromString@plt+0xff44>  // b.none
   169c8:	bl	69c0 <PyType_IsSubtype@plt>
   169cc:	cbz	w0, 16cb4 <PyFloat_FromString@plt+0x10224>
   169d0:	ldr	x21, [sp, #80]
   169d4:	add	x20, x22, #0x328
   169d8:	ldr	x0, [x19, #8]
   169dc:	add	x20, x20, #0x1a0
   169e0:	cmp	x0, x20
   169e4:	b.eq	16a34 <PyFloat_FromString@plt+0xffa4>  // b.none
   169e8:	mov	x1, x20
   169ec:	bl	69c0 <PyType_IsSubtype@plt>
   169f0:	cbnz	w0, 16b68 <PyFloat_FromString@plt+0x100d8>
   169f4:	ldr	x2, [x19, #8]
   169f8:	ldr	x0, [x2, #168]
   169fc:	tbnz	w0, #24, 16bd8 <PyFloat_FromString@plt+0x10148>
   16a00:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16a04:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   16a08:	ldr	x2, [x2, #24]
   16a0c:	add	x1, x1, #0xb70
   16a10:	ldr	x0, [x0, #3936]
   16a14:	mov	x20, #0x0                   	// #0
   16a18:	ldr	x0, [x0]
   16a1c:	bl	6a10 <PyErr_Format@plt>
   16a20:	ldp	x21, x22, [sp, #32]
   16a24:	mov	x0, x20
   16a28:	ldp	x19, x20, [sp, #16]
   16a2c:	ldp	x29, x30, [sp], #96
   16a30:	ret
   16a34:	str	x23, [sp, #48]
   16a38:	ldr	x0, [x19]
   16a3c:	add	x0, x0, #0x1
   16a40:	str	x0, [x19]
   16a44:	ldr	x23, [sp, #72]
   16a48:	add	x20, x22, #0x328
   16a4c:	add	x20, x20, #0x1a0
   16a50:	ldr	x0, [x23, #8]
   16a54:	cmp	x0, x20
   16a58:	b.eq	16abc <PyFloat_FromString@plt+0x1002c>  // b.none
   16a5c:	mov	x1, x20
   16a60:	bl	69c0 <PyType_IsSubtype@plt>
   16a64:	cbnz	w0, 16abc <PyFloat_FromString@plt+0x1002c>
   16a68:	ldr	x2, [x23, #8]
   16a6c:	ldr	x0, [x2, #168]
   16a70:	tbnz	w0, #24, 16b74 <PyFloat_FromString@plt+0x100e4>
   16a74:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16a78:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   16a7c:	ldr	x2, [x2, #24]
   16a80:	add	x1, x1, #0xb70
   16a84:	ldr	x0, [x0, #3936]
   16a88:	ldr	x0, [x0]
   16a8c:	bl	6a10 <PyErr_Format@plt>
   16a90:	ldr	x0, [x19]
   16a94:	sub	x0, x0, #0x1
   16a98:	str	x0, [x19]
   16a9c:	cbz	x0, 16c70 <PyFloat_FromString@plt+0x101e0>
   16aa0:	ldp	x21, x22, [sp, #32]
   16aa4:	ldr	x23, [sp, #48]
   16aa8:	mov	x20, #0x0                   	// #0
   16aac:	mov	x0, x20
   16ab0:	ldp	x19, x20, [sp, #16]
   16ab4:	ldp	x29, x30, [sp], #96
   16ab8:	ret
   16abc:	ldr	x1, [x23]
   16ac0:	add	x1, x1, #0x1
   16ac4:	str	x1, [x23]
   16ac8:	add	x0, x22, #0x328
   16acc:	add	x0, x0, #0x1a0
   16ad0:	bl	6950 <_PyObject_New@plt>
   16ad4:	mov	x20, x0
   16ad8:	cbz	x0, 16c14 <PyFloat_FromString@plt+0x10184>
   16adc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   16ae0:	add	x1, x20, #0x48
   16ae4:	ldr	x3, [sp, #80]
   16ae8:	mov	x2, #0xffffffffffffffff    	// #-1
   16aec:	ldr	q0, [x0, #2128]
   16af0:	mov	w0, #0x30                  	// #48
   16af4:	str	x2, [x20, #16]
   16af8:	add	x4, sp, #0x44
   16afc:	strb	w0, [x20, #24]
   16b00:	add	x3, x3, #0x10
   16b04:	stp	xzr, xzr, [x20, #32]
   16b08:	add	x0, x20, #0x18
   16b0c:	add	x2, x23, #0x18
   16b10:	str	x1, [x20, #64]
   16b14:	add	x1, x19, #0x18
   16b18:	str	q0, [x20, #48]
   16b1c:	bl	32238 <PyInit__decimal@@Base+0x15ff8>
   16b20:	ldr	x1, [x19]
   16b24:	sub	x1, x1, #0x1
   16b28:	str	x1, [x19]
   16b2c:	cbz	x1, 16c08 <PyFloat_FromString@plt+0x10178>
   16b30:	ldr	x1, [x23]
   16b34:	sub	x1, x1, #0x1
   16b38:	str	x1, [x23]
   16b3c:	cbz	x1, 16bfc <PyFloat_FromString@plt+0x1016c>
   16b40:	ldr	w1, [sp, #68]
   16b44:	ldr	x0, [sp, #80]
   16b48:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   16b4c:	cbnz	w0, 16c48 <PyFloat_FromString@plt+0x101b8>
   16b50:	mov	x0, x20
   16b54:	ldp	x19, x20, [sp, #16]
   16b58:	ldp	x21, x22, [sp, #32]
   16b5c:	ldr	x23, [sp, #48]
   16b60:	ldp	x29, x30, [sp], #96
   16b64:	ret
   16b68:	str	x23, [sp, #48]
   16b6c:	ldr	x21, [sp, #80]
   16b70:	b	16a38 <PyFloat_FromString@plt+0xffa8>
   16b74:	mov	x1, x23
   16b78:	mov	x2, x21
   16b7c:	mov	x0, x20
   16b80:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   16b84:	mov	x23, x0
   16b88:	cbnz	x0, 16ac8 <PyFloat_FromString@plt+0x10038>
   16b8c:	b	16a90 <PyFloat_FromString@plt+0x10000>
   16b90:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   16b94:	add	x2, sp, #0x58
   16b98:	mov	x1, #0x0                   	// #0
   16b9c:	ldr	x0, [x0, #2056]
   16ba0:	bl	6740 <PyContextVar_Get@plt>
   16ba4:	tbnz	w0, #31, 16cd8 <PyFloat_FromString@plt+0x10248>
   16ba8:	ldr	x21, [sp, #88]
   16bac:	cbz	x21, 16c94 <PyFloat_FromString@plt+0x10204>
   16bb0:	str	x21, [sp, #80]
   16bb4:	ldr	x0, [x21]
   16bb8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   16bbc:	sub	x0, x0, #0x1
   16bc0:	str	x0, [x21]
   16bc4:	cbnz	x0, 169d4 <PyFloat_FromString@plt+0xff44>
   16bc8:	mov	x0, x21
   16bcc:	bl	65d0 <_Py_Dealloc@plt>
   16bd0:	ldr	x21, [sp, #80]
   16bd4:	b	169d4 <PyFloat_FromString@plt+0xff44>
   16bd8:	mov	x1, x19
   16bdc:	mov	x2, x21
   16be0:	mov	x0, x20
   16be4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   16be8:	mov	x19, x0
   16bec:	cbz	x0, 16ca8 <PyFloat_FromString@plt+0x10218>
   16bf0:	str	x23, [sp, #48]
   16bf4:	ldr	x21, [sp, #80]
   16bf8:	b	16a44 <PyFloat_FromString@plt+0xffb4>
   16bfc:	mov	x0, x23
   16c00:	bl	65d0 <_Py_Dealloc@plt>
   16c04:	b	16b40 <PyFloat_FromString@plt+0x100b0>
   16c08:	mov	x0, x19
   16c0c:	bl	65d0 <_Py_Dealloc@plt>
   16c10:	b	16b30 <PyFloat_FromString@plt+0x100a0>
   16c14:	ldr	x0, [x19]
   16c18:	sub	x0, x0, #0x1
   16c1c:	str	x0, [x19]
   16c20:	cbz	x0, 16c88 <PyFloat_FromString@plt+0x101f8>
   16c24:	ldr	x0, [x23]
   16c28:	sub	x0, x0, #0x1
   16c2c:	str	x0, [x23]
   16c30:	cbnz	x0, 16aa0 <PyFloat_FromString@plt+0x10010>
   16c34:	mov	x0, x23
   16c38:	bl	65d0 <_Py_Dealloc@plt>
   16c3c:	ldp	x21, x22, [sp, #32]
   16c40:	ldr	x23, [sp, #48]
   16c44:	b	16a24 <PyFloat_FromString@plt+0xff94>
   16c48:	ldr	x0, [x20]
   16c4c:	sub	x0, x0, #0x1
   16c50:	str	x0, [x20]
   16c54:	cbnz	x0, 16aa0 <PyFloat_FromString@plt+0x10010>
   16c58:	mov	x0, x20
   16c5c:	mov	x20, #0x0                   	// #0
   16c60:	bl	65d0 <_Py_Dealloc@plt>
   16c64:	ldp	x21, x22, [sp, #32]
   16c68:	ldr	x23, [sp, #48]
   16c6c:	b	16a24 <PyFloat_FromString@plt+0xff94>
   16c70:	mov	x0, x19
   16c74:	mov	x20, #0x0                   	// #0
   16c78:	bl	65d0 <_Py_Dealloc@plt>
   16c7c:	ldp	x21, x22, [sp, #32]
   16c80:	ldr	x23, [sp, #48]
   16c84:	b	16a24 <PyFloat_FromString@plt+0xff94>
   16c88:	mov	x0, x19
   16c8c:	bl	65d0 <_Py_Dealloc@plt>
   16c90:	b	16c24 <PyFloat_FromString@plt+0x10194>
   16c94:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   16c98:	str	x0, [sp, #80]
   16c9c:	mov	x21, x0
   16ca0:	cbnz	x0, 16bb4 <PyFloat_FromString@plt+0x10124>
   16ca4:	nop
   16ca8:	mov	x20, #0x0                   	// #0
   16cac:	ldp	x21, x22, [sp, #32]
   16cb0:	b	16aac <PyFloat_FromString@plt+0x1001c>
   16cb4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16cb8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   16cbc:	mov	x20, #0x0                   	// #0
   16cc0:	add	x1, x1, #0xba8
   16cc4:	ldr	x0, [x0, #3936]
   16cc8:	ldr	x0, [x0]
   16ccc:	bl	6650 <PyErr_SetString@plt>
   16cd0:	ldp	x21, x22, [sp, #32]
   16cd4:	b	16a24 <PyFloat_FromString@plt+0xff94>
   16cd8:	mov	x20, #0x0                   	// #0
   16cdc:	ldp	x21, x22, [sp, #32]
   16ce0:	b	16a24 <PyFloat_FromString@plt+0xff94>
   16ce4:	nop
   16ce8:	stp	x29, x30, [sp, #-96]!
   16cec:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   16cf0:	add	x3, x3, #0x9b0
   16cf4:	mov	x29, sp
   16cf8:	stp	x19, x20, [sp, #16]
   16cfc:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   16d00:	mov	x19, x0
   16d04:	ldr	x20, [x20, #4008]
   16d08:	mov	x0, x1
   16d0c:	add	x3, x3, #0x510
   16d10:	mov	x1, x2
   16d14:	add	x5, sp, #0x50
   16d18:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   16d1c:	add	x4, sp, #0x48
   16d20:	add	x2, x2, #0xc88
   16d24:	str	wzr, [sp, #68]
   16d28:	str	x20, [sp, #80]
   16d2c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16d30:	cbz	w0, 16e38 <PyFloat_FromString@plt+0x103a8>
   16d34:	stp	x21, x22, [sp, #32]
   16d38:	ldr	x21, [sp, #80]
   16d3c:	cmp	x21, x20
   16d40:	b.eq	16f20 <PyFloat_FromString@plt+0x10490>  // b.none
   16d44:	ldr	x0, [x21, #8]
   16d48:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   16d4c:	add	x1, x22, #0x328
   16d50:	cmp	x0, x1
   16d54:	b.eq	16d64 <PyFloat_FromString@plt+0x102d4>  // b.none
   16d58:	bl	69c0 <PyType_IsSubtype@plt>
   16d5c:	cbz	w0, 17044 <PyFloat_FromString@plt+0x105b4>
   16d60:	ldr	x21, [sp, #80]
   16d64:	add	x20, x22, #0x328
   16d68:	ldr	x0, [x19, #8]
   16d6c:	add	x20, x20, #0x1a0
   16d70:	cmp	x0, x20
   16d74:	b.eq	16dc4 <PyFloat_FromString@plt+0x10334>  // b.none
   16d78:	mov	x1, x20
   16d7c:	bl	69c0 <PyType_IsSubtype@plt>
   16d80:	cbnz	w0, 16ef8 <PyFloat_FromString@plt+0x10468>
   16d84:	ldr	x2, [x19, #8]
   16d88:	ldr	x0, [x2, #168]
   16d8c:	tbnz	w0, #24, 16f68 <PyFloat_FromString@plt+0x104d8>
   16d90:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16d94:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   16d98:	ldr	x2, [x2, #24]
   16d9c:	add	x1, x1, #0xb70
   16da0:	ldr	x0, [x0, #3936]
   16da4:	mov	x20, #0x0                   	// #0
   16da8:	ldr	x0, [x0]
   16dac:	bl	6a10 <PyErr_Format@plt>
   16db0:	ldp	x21, x22, [sp, #32]
   16db4:	mov	x0, x20
   16db8:	ldp	x19, x20, [sp, #16]
   16dbc:	ldp	x29, x30, [sp], #96
   16dc0:	ret
   16dc4:	str	x23, [sp, #48]
   16dc8:	ldr	x0, [x19]
   16dcc:	add	x0, x0, #0x1
   16dd0:	str	x0, [x19]
   16dd4:	ldr	x23, [sp, #72]
   16dd8:	add	x20, x22, #0x328
   16ddc:	add	x20, x20, #0x1a0
   16de0:	ldr	x0, [x23, #8]
   16de4:	cmp	x0, x20
   16de8:	b.eq	16e4c <PyFloat_FromString@plt+0x103bc>  // b.none
   16dec:	mov	x1, x20
   16df0:	bl	69c0 <PyType_IsSubtype@plt>
   16df4:	cbnz	w0, 16e4c <PyFloat_FromString@plt+0x103bc>
   16df8:	ldr	x2, [x23, #8]
   16dfc:	ldr	x0, [x2, #168]
   16e00:	tbnz	w0, #24, 16f04 <PyFloat_FromString@plt+0x10474>
   16e04:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   16e08:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   16e0c:	ldr	x2, [x2, #24]
   16e10:	add	x1, x1, #0xb70
   16e14:	ldr	x0, [x0, #3936]
   16e18:	ldr	x0, [x0]
   16e1c:	bl	6a10 <PyErr_Format@plt>
   16e20:	ldr	x0, [x19]
   16e24:	sub	x0, x0, #0x1
   16e28:	str	x0, [x19]
   16e2c:	cbz	x0, 17000 <PyFloat_FromString@plt+0x10570>
   16e30:	ldp	x21, x22, [sp, #32]
   16e34:	ldr	x23, [sp, #48]
   16e38:	mov	x20, #0x0                   	// #0
   16e3c:	mov	x0, x20
   16e40:	ldp	x19, x20, [sp, #16]
   16e44:	ldp	x29, x30, [sp], #96
   16e48:	ret
   16e4c:	ldr	x1, [x23]
   16e50:	add	x1, x1, #0x1
   16e54:	str	x1, [x23]
   16e58:	add	x0, x22, #0x328
   16e5c:	add	x0, x0, #0x1a0
   16e60:	bl	6950 <_PyObject_New@plt>
   16e64:	mov	x20, x0
   16e68:	cbz	x0, 16fa4 <PyFloat_FromString@plt+0x10514>
   16e6c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   16e70:	add	x1, x20, #0x48
   16e74:	ldr	x3, [sp, #80]
   16e78:	mov	x2, #0xffffffffffffffff    	// #-1
   16e7c:	ldr	q0, [x0, #2128]
   16e80:	mov	w0, #0x30                  	// #48
   16e84:	str	x2, [x20, #16]
   16e88:	add	x4, sp, #0x44
   16e8c:	strb	w0, [x20, #24]
   16e90:	add	x3, x3, #0x10
   16e94:	stp	xzr, xzr, [x20, #32]
   16e98:	add	x0, x20, #0x18
   16e9c:	add	x2, x23, #0x18
   16ea0:	str	x1, [x20, #64]
   16ea4:	add	x1, x19, #0x18
   16ea8:	str	q0, [x20, #48]
   16eac:	bl	32a08 <PyInit__decimal@@Base+0x167c8>
   16eb0:	ldr	x1, [x19]
   16eb4:	sub	x1, x1, #0x1
   16eb8:	str	x1, [x19]
   16ebc:	cbz	x1, 16f98 <PyFloat_FromString@plt+0x10508>
   16ec0:	ldr	x1, [x23]
   16ec4:	sub	x1, x1, #0x1
   16ec8:	str	x1, [x23]
   16ecc:	cbz	x1, 16f8c <PyFloat_FromString@plt+0x104fc>
   16ed0:	ldr	w1, [sp, #68]
   16ed4:	ldr	x0, [sp, #80]
   16ed8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   16edc:	cbnz	w0, 16fd8 <PyFloat_FromString@plt+0x10548>
   16ee0:	mov	x0, x20
   16ee4:	ldp	x19, x20, [sp, #16]
   16ee8:	ldp	x21, x22, [sp, #32]
   16eec:	ldr	x23, [sp, #48]
   16ef0:	ldp	x29, x30, [sp], #96
   16ef4:	ret
   16ef8:	str	x23, [sp, #48]
   16efc:	ldr	x21, [sp, #80]
   16f00:	b	16dc8 <PyFloat_FromString@plt+0x10338>
   16f04:	mov	x1, x23
   16f08:	mov	x2, x21
   16f0c:	mov	x0, x20
   16f10:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   16f14:	mov	x23, x0
   16f18:	cbnz	x0, 16e58 <PyFloat_FromString@plt+0x103c8>
   16f1c:	b	16e20 <PyFloat_FromString@plt+0x10390>
   16f20:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   16f24:	add	x2, sp, #0x58
   16f28:	mov	x1, #0x0                   	// #0
   16f2c:	ldr	x0, [x0, #2056]
   16f30:	bl	6740 <PyContextVar_Get@plt>
   16f34:	tbnz	w0, #31, 17068 <PyFloat_FromString@plt+0x105d8>
   16f38:	ldr	x21, [sp, #88]
   16f3c:	cbz	x21, 17024 <PyFloat_FromString@plt+0x10594>
   16f40:	str	x21, [sp, #80]
   16f44:	ldr	x0, [x21]
   16f48:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   16f4c:	sub	x0, x0, #0x1
   16f50:	str	x0, [x21]
   16f54:	cbnz	x0, 16d64 <PyFloat_FromString@plt+0x102d4>
   16f58:	mov	x0, x21
   16f5c:	bl	65d0 <_Py_Dealloc@plt>
   16f60:	ldr	x21, [sp, #80]
   16f64:	b	16d64 <PyFloat_FromString@plt+0x102d4>
   16f68:	mov	x1, x19
   16f6c:	mov	x2, x21
   16f70:	mov	x0, x20
   16f74:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   16f78:	mov	x19, x0
   16f7c:	cbz	x0, 17038 <PyFloat_FromString@plt+0x105a8>
   16f80:	str	x23, [sp, #48]
   16f84:	ldr	x21, [sp, #80]
   16f88:	b	16dd4 <PyFloat_FromString@plt+0x10344>
   16f8c:	mov	x0, x23
   16f90:	bl	65d0 <_Py_Dealloc@plt>
   16f94:	b	16ed0 <PyFloat_FromString@plt+0x10440>
   16f98:	mov	x0, x19
   16f9c:	bl	65d0 <_Py_Dealloc@plt>
   16fa0:	b	16ec0 <PyFloat_FromString@plt+0x10430>
   16fa4:	ldr	x0, [x19]
   16fa8:	sub	x0, x0, #0x1
   16fac:	str	x0, [x19]
   16fb0:	cbz	x0, 17018 <PyFloat_FromString@plt+0x10588>
   16fb4:	ldr	x0, [x23]
   16fb8:	sub	x0, x0, #0x1
   16fbc:	str	x0, [x23]
   16fc0:	cbnz	x0, 16e30 <PyFloat_FromString@plt+0x103a0>
   16fc4:	mov	x0, x23
   16fc8:	bl	65d0 <_Py_Dealloc@plt>
   16fcc:	ldp	x21, x22, [sp, #32]
   16fd0:	ldr	x23, [sp, #48]
   16fd4:	b	16db4 <PyFloat_FromString@plt+0x10324>
   16fd8:	ldr	x0, [x20]
   16fdc:	sub	x0, x0, #0x1
   16fe0:	str	x0, [x20]
   16fe4:	cbnz	x0, 16e30 <PyFloat_FromString@plt+0x103a0>
   16fe8:	mov	x0, x20
   16fec:	mov	x20, #0x0                   	// #0
   16ff0:	bl	65d0 <_Py_Dealloc@plt>
   16ff4:	ldp	x21, x22, [sp, #32]
   16ff8:	ldr	x23, [sp, #48]
   16ffc:	b	16db4 <PyFloat_FromString@plt+0x10324>
   17000:	mov	x0, x19
   17004:	mov	x20, #0x0                   	// #0
   17008:	bl	65d0 <_Py_Dealloc@plt>
   1700c:	ldp	x21, x22, [sp, #32]
   17010:	ldr	x23, [sp, #48]
   17014:	b	16db4 <PyFloat_FromString@plt+0x10324>
   17018:	mov	x0, x19
   1701c:	bl	65d0 <_Py_Dealloc@plt>
   17020:	b	16fb4 <PyFloat_FromString@plt+0x10524>
   17024:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   17028:	str	x0, [sp, #80]
   1702c:	mov	x21, x0
   17030:	cbnz	x0, 16f44 <PyFloat_FromString@plt+0x104b4>
   17034:	nop
   17038:	mov	x20, #0x0                   	// #0
   1703c:	ldp	x21, x22, [sp, #32]
   17040:	b	16e3c <PyFloat_FromString@plt+0x103ac>
   17044:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17048:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1704c:	mov	x20, #0x0                   	// #0
   17050:	add	x1, x1, #0xba8
   17054:	ldr	x0, [x0, #3936]
   17058:	ldr	x0, [x0]
   1705c:	bl	6650 <PyErr_SetString@plt>
   17060:	ldp	x21, x22, [sp, #32]
   17064:	b	16db4 <PyFloat_FromString@plt+0x10324>
   17068:	mov	x20, #0x0                   	// #0
   1706c:	ldp	x21, x22, [sp, #32]
   17070:	b	16db4 <PyFloat_FromString@plt+0x10324>
   17074:	nop
   17078:	stp	x29, x30, [sp, #-96]!
   1707c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   17080:	add	x3, x3, #0x9b0
   17084:	mov	x29, sp
   17088:	stp	x19, x20, [sp, #16]
   1708c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   17090:	mov	x19, x0
   17094:	ldr	x20, [x20, #4008]
   17098:	mov	x0, x1
   1709c:	add	x3, x3, #0x530
   170a0:	mov	x1, x2
   170a4:	add	x5, sp, #0x50
   170a8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   170ac:	add	x4, sp, #0x48
   170b0:	add	x2, x2, #0xc88
   170b4:	str	wzr, [sp, #68]
   170b8:	str	x20, [sp, #80]
   170bc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   170c0:	cbz	w0, 171c8 <PyFloat_FromString@plt+0x10738>
   170c4:	stp	x21, x22, [sp, #32]
   170c8:	ldr	x21, [sp, #80]
   170cc:	cmp	x21, x20
   170d0:	b.eq	172b0 <PyFloat_FromString@plt+0x10820>  // b.none
   170d4:	ldr	x0, [x21, #8]
   170d8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   170dc:	add	x1, x22, #0x328
   170e0:	cmp	x0, x1
   170e4:	b.eq	170f4 <PyFloat_FromString@plt+0x10664>  // b.none
   170e8:	bl	69c0 <PyType_IsSubtype@plt>
   170ec:	cbz	w0, 173d4 <PyFloat_FromString@plt+0x10944>
   170f0:	ldr	x21, [sp, #80]
   170f4:	add	x20, x22, #0x328
   170f8:	ldr	x0, [x19, #8]
   170fc:	add	x20, x20, #0x1a0
   17100:	cmp	x0, x20
   17104:	b.eq	17154 <PyFloat_FromString@plt+0x106c4>  // b.none
   17108:	mov	x1, x20
   1710c:	bl	69c0 <PyType_IsSubtype@plt>
   17110:	cbnz	w0, 17288 <PyFloat_FromString@plt+0x107f8>
   17114:	ldr	x2, [x19, #8]
   17118:	ldr	x0, [x2, #168]
   1711c:	tbnz	w0, #24, 172f8 <PyFloat_FromString@plt+0x10868>
   17120:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17124:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17128:	ldr	x2, [x2, #24]
   1712c:	add	x1, x1, #0xb70
   17130:	ldr	x0, [x0, #3936]
   17134:	mov	x20, #0x0                   	// #0
   17138:	ldr	x0, [x0]
   1713c:	bl	6a10 <PyErr_Format@plt>
   17140:	ldp	x21, x22, [sp, #32]
   17144:	mov	x0, x20
   17148:	ldp	x19, x20, [sp, #16]
   1714c:	ldp	x29, x30, [sp], #96
   17150:	ret
   17154:	str	x23, [sp, #48]
   17158:	ldr	x0, [x19]
   1715c:	add	x0, x0, #0x1
   17160:	str	x0, [x19]
   17164:	ldr	x23, [sp, #72]
   17168:	add	x20, x22, #0x328
   1716c:	add	x20, x20, #0x1a0
   17170:	ldr	x0, [x23, #8]
   17174:	cmp	x0, x20
   17178:	b.eq	171dc <PyFloat_FromString@plt+0x1074c>  // b.none
   1717c:	mov	x1, x20
   17180:	bl	69c0 <PyType_IsSubtype@plt>
   17184:	cbnz	w0, 171dc <PyFloat_FromString@plt+0x1074c>
   17188:	ldr	x2, [x23, #8]
   1718c:	ldr	x0, [x2, #168]
   17190:	tbnz	w0, #24, 17294 <PyFloat_FromString@plt+0x10804>
   17194:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17198:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1719c:	ldr	x2, [x2, #24]
   171a0:	add	x1, x1, #0xb70
   171a4:	ldr	x0, [x0, #3936]
   171a8:	ldr	x0, [x0]
   171ac:	bl	6a10 <PyErr_Format@plt>
   171b0:	ldr	x0, [x19]
   171b4:	sub	x0, x0, #0x1
   171b8:	str	x0, [x19]
   171bc:	cbz	x0, 17390 <PyFloat_FromString@plt+0x10900>
   171c0:	ldp	x21, x22, [sp, #32]
   171c4:	ldr	x23, [sp, #48]
   171c8:	mov	x20, #0x0                   	// #0
   171cc:	mov	x0, x20
   171d0:	ldp	x19, x20, [sp, #16]
   171d4:	ldp	x29, x30, [sp], #96
   171d8:	ret
   171dc:	ldr	x1, [x23]
   171e0:	add	x1, x1, #0x1
   171e4:	str	x1, [x23]
   171e8:	add	x0, x22, #0x328
   171ec:	add	x0, x0, #0x1a0
   171f0:	bl	6950 <_PyObject_New@plt>
   171f4:	mov	x20, x0
   171f8:	cbz	x0, 17334 <PyFloat_FromString@plt+0x108a4>
   171fc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   17200:	add	x1, x20, #0x48
   17204:	ldr	x3, [sp, #80]
   17208:	mov	x2, #0xffffffffffffffff    	// #-1
   1720c:	ldr	q0, [x0, #2128]
   17210:	mov	w0, #0x30                  	// #48
   17214:	str	x2, [x20, #16]
   17218:	add	x4, sp, #0x44
   1721c:	strb	w0, [x20, #24]
   17220:	add	x3, x3, #0x10
   17224:	stp	xzr, xzr, [x20, #32]
   17228:	add	x0, x20, #0x18
   1722c:	add	x2, x23, #0x18
   17230:	str	x1, [x20, #64]
   17234:	add	x1, x19, #0x18
   17238:	str	q0, [x20, #48]
   1723c:	bl	38ac8 <PyInit__decimal@@Base+0x1c888>
   17240:	ldr	x1, [x19]
   17244:	sub	x1, x1, #0x1
   17248:	str	x1, [x19]
   1724c:	cbz	x1, 17328 <PyFloat_FromString@plt+0x10898>
   17250:	ldr	x1, [x23]
   17254:	sub	x1, x1, #0x1
   17258:	str	x1, [x23]
   1725c:	cbz	x1, 1731c <PyFloat_FromString@plt+0x1088c>
   17260:	ldr	w1, [sp, #68]
   17264:	ldr	x0, [sp, #80]
   17268:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1726c:	cbnz	w0, 17368 <PyFloat_FromString@plt+0x108d8>
   17270:	mov	x0, x20
   17274:	ldp	x19, x20, [sp, #16]
   17278:	ldp	x21, x22, [sp, #32]
   1727c:	ldr	x23, [sp, #48]
   17280:	ldp	x29, x30, [sp], #96
   17284:	ret
   17288:	str	x23, [sp, #48]
   1728c:	ldr	x21, [sp, #80]
   17290:	b	17158 <PyFloat_FromString@plt+0x106c8>
   17294:	mov	x1, x23
   17298:	mov	x2, x21
   1729c:	mov	x0, x20
   172a0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   172a4:	mov	x23, x0
   172a8:	cbnz	x0, 171e8 <PyFloat_FromString@plt+0x10758>
   172ac:	b	171b0 <PyFloat_FromString@plt+0x10720>
   172b0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   172b4:	add	x2, sp, #0x58
   172b8:	mov	x1, #0x0                   	// #0
   172bc:	ldr	x0, [x0, #2056]
   172c0:	bl	6740 <PyContextVar_Get@plt>
   172c4:	tbnz	w0, #31, 173f8 <PyFloat_FromString@plt+0x10968>
   172c8:	ldr	x21, [sp, #88]
   172cc:	cbz	x21, 173b4 <PyFloat_FromString@plt+0x10924>
   172d0:	str	x21, [sp, #80]
   172d4:	ldr	x0, [x21]
   172d8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   172dc:	sub	x0, x0, #0x1
   172e0:	str	x0, [x21]
   172e4:	cbnz	x0, 170f4 <PyFloat_FromString@plt+0x10664>
   172e8:	mov	x0, x21
   172ec:	bl	65d0 <_Py_Dealloc@plt>
   172f0:	ldr	x21, [sp, #80]
   172f4:	b	170f4 <PyFloat_FromString@plt+0x10664>
   172f8:	mov	x1, x19
   172fc:	mov	x2, x21
   17300:	mov	x0, x20
   17304:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   17308:	mov	x19, x0
   1730c:	cbz	x0, 173c8 <PyFloat_FromString@plt+0x10938>
   17310:	str	x23, [sp, #48]
   17314:	ldr	x21, [sp, #80]
   17318:	b	17164 <PyFloat_FromString@plt+0x106d4>
   1731c:	mov	x0, x23
   17320:	bl	65d0 <_Py_Dealloc@plt>
   17324:	b	17260 <PyFloat_FromString@plt+0x107d0>
   17328:	mov	x0, x19
   1732c:	bl	65d0 <_Py_Dealloc@plt>
   17330:	b	17250 <PyFloat_FromString@plt+0x107c0>
   17334:	ldr	x0, [x19]
   17338:	sub	x0, x0, #0x1
   1733c:	str	x0, [x19]
   17340:	cbz	x0, 173a8 <PyFloat_FromString@plt+0x10918>
   17344:	ldr	x0, [x23]
   17348:	sub	x0, x0, #0x1
   1734c:	str	x0, [x23]
   17350:	cbnz	x0, 171c0 <PyFloat_FromString@plt+0x10730>
   17354:	mov	x0, x23
   17358:	bl	65d0 <_Py_Dealloc@plt>
   1735c:	ldp	x21, x22, [sp, #32]
   17360:	ldr	x23, [sp, #48]
   17364:	b	17144 <PyFloat_FromString@plt+0x106b4>
   17368:	ldr	x0, [x20]
   1736c:	sub	x0, x0, #0x1
   17370:	str	x0, [x20]
   17374:	cbnz	x0, 171c0 <PyFloat_FromString@plt+0x10730>
   17378:	mov	x0, x20
   1737c:	mov	x20, #0x0                   	// #0
   17380:	bl	65d0 <_Py_Dealloc@plt>
   17384:	ldp	x21, x22, [sp, #32]
   17388:	ldr	x23, [sp, #48]
   1738c:	b	17144 <PyFloat_FromString@plt+0x106b4>
   17390:	mov	x0, x19
   17394:	mov	x20, #0x0                   	// #0
   17398:	bl	65d0 <_Py_Dealloc@plt>
   1739c:	ldp	x21, x22, [sp, #32]
   173a0:	ldr	x23, [sp, #48]
   173a4:	b	17144 <PyFloat_FromString@plt+0x106b4>
   173a8:	mov	x0, x19
   173ac:	bl	65d0 <_Py_Dealloc@plt>
   173b0:	b	17344 <PyFloat_FromString@plt+0x108b4>
   173b4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   173b8:	str	x0, [sp, #80]
   173bc:	mov	x21, x0
   173c0:	cbnz	x0, 172d4 <PyFloat_FromString@plt+0x10844>
   173c4:	nop
   173c8:	mov	x20, #0x0                   	// #0
   173cc:	ldp	x21, x22, [sp, #32]
   173d0:	b	171cc <PyFloat_FromString@plt+0x1073c>
   173d4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   173d8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   173dc:	mov	x20, #0x0                   	// #0
   173e0:	add	x1, x1, #0xba8
   173e4:	ldr	x0, [x0, #3936]
   173e8:	ldr	x0, [x0]
   173ec:	bl	6650 <PyErr_SetString@plt>
   173f0:	ldp	x21, x22, [sp, #32]
   173f4:	b	17144 <PyFloat_FromString@plt+0x106b4>
   173f8:	mov	x20, #0x0                   	// #0
   173fc:	ldp	x21, x22, [sp, #32]
   17400:	b	17144 <PyFloat_FromString@plt+0x106b4>
   17404:	nop
   17408:	stp	x29, x30, [sp, #-96]!
   1740c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   17410:	add	x3, x3, #0x9b0
   17414:	mov	x29, sp
   17418:	stp	x19, x20, [sp, #16]
   1741c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   17420:	mov	x19, x0
   17424:	ldr	x20, [x20, #4008]
   17428:	mov	x0, x1
   1742c:	add	x3, x3, #0x550
   17430:	mov	x1, x2
   17434:	add	x5, sp, #0x50
   17438:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1743c:	add	x4, sp, #0x48
   17440:	add	x2, x2, #0xc88
   17444:	str	wzr, [sp, #68]
   17448:	str	x20, [sp, #80]
   1744c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17450:	cbz	w0, 17558 <PyFloat_FromString@plt+0x10ac8>
   17454:	stp	x21, x22, [sp, #32]
   17458:	ldr	x21, [sp, #80]
   1745c:	cmp	x21, x20
   17460:	b.eq	17640 <PyFloat_FromString@plt+0x10bb0>  // b.none
   17464:	ldr	x0, [x21, #8]
   17468:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1746c:	add	x1, x22, #0x328
   17470:	cmp	x0, x1
   17474:	b.eq	17484 <PyFloat_FromString@plt+0x109f4>  // b.none
   17478:	bl	69c0 <PyType_IsSubtype@plt>
   1747c:	cbz	w0, 17764 <PyFloat_FromString@plt+0x10cd4>
   17480:	ldr	x21, [sp, #80]
   17484:	add	x20, x22, #0x328
   17488:	ldr	x0, [x19, #8]
   1748c:	add	x20, x20, #0x1a0
   17490:	cmp	x0, x20
   17494:	b.eq	174e4 <PyFloat_FromString@plt+0x10a54>  // b.none
   17498:	mov	x1, x20
   1749c:	bl	69c0 <PyType_IsSubtype@plt>
   174a0:	cbnz	w0, 17618 <PyFloat_FromString@plt+0x10b88>
   174a4:	ldr	x2, [x19, #8]
   174a8:	ldr	x0, [x2, #168]
   174ac:	tbnz	w0, #24, 17688 <PyFloat_FromString@plt+0x10bf8>
   174b0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   174b4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   174b8:	ldr	x2, [x2, #24]
   174bc:	add	x1, x1, #0xb70
   174c0:	ldr	x0, [x0, #3936]
   174c4:	mov	x20, #0x0                   	// #0
   174c8:	ldr	x0, [x0]
   174cc:	bl	6a10 <PyErr_Format@plt>
   174d0:	ldp	x21, x22, [sp, #32]
   174d4:	mov	x0, x20
   174d8:	ldp	x19, x20, [sp, #16]
   174dc:	ldp	x29, x30, [sp], #96
   174e0:	ret
   174e4:	str	x23, [sp, #48]
   174e8:	ldr	x0, [x19]
   174ec:	add	x0, x0, #0x1
   174f0:	str	x0, [x19]
   174f4:	ldr	x23, [sp, #72]
   174f8:	add	x20, x22, #0x328
   174fc:	add	x20, x20, #0x1a0
   17500:	ldr	x0, [x23, #8]
   17504:	cmp	x0, x20
   17508:	b.eq	1756c <PyFloat_FromString@plt+0x10adc>  // b.none
   1750c:	mov	x1, x20
   17510:	bl	69c0 <PyType_IsSubtype@plt>
   17514:	cbnz	w0, 1756c <PyFloat_FromString@plt+0x10adc>
   17518:	ldr	x2, [x23, #8]
   1751c:	ldr	x0, [x2, #168]
   17520:	tbnz	w0, #24, 17624 <PyFloat_FromString@plt+0x10b94>
   17524:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17528:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1752c:	ldr	x2, [x2, #24]
   17530:	add	x1, x1, #0xb70
   17534:	ldr	x0, [x0, #3936]
   17538:	ldr	x0, [x0]
   1753c:	bl	6a10 <PyErr_Format@plt>
   17540:	ldr	x0, [x19]
   17544:	sub	x0, x0, #0x1
   17548:	str	x0, [x19]
   1754c:	cbz	x0, 17720 <PyFloat_FromString@plt+0x10c90>
   17550:	ldp	x21, x22, [sp, #32]
   17554:	ldr	x23, [sp, #48]
   17558:	mov	x20, #0x0                   	// #0
   1755c:	mov	x0, x20
   17560:	ldp	x19, x20, [sp, #16]
   17564:	ldp	x29, x30, [sp], #96
   17568:	ret
   1756c:	ldr	x1, [x23]
   17570:	add	x1, x1, #0x1
   17574:	str	x1, [x23]
   17578:	add	x0, x22, #0x328
   1757c:	add	x0, x0, #0x1a0
   17580:	bl	6950 <_PyObject_New@plt>
   17584:	mov	x20, x0
   17588:	cbz	x0, 176c4 <PyFloat_FromString@plt+0x10c34>
   1758c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   17590:	add	x1, x20, #0x48
   17594:	ldr	x3, [sp, #80]
   17598:	mov	x2, #0xffffffffffffffff    	// #-1
   1759c:	ldr	q0, [x0, #2128]
   175a0:	mov	w0, #0x30                  	// #48
   175a4:	str	x2, [x20, #16]
   175a8:	add	x4, sp, #0x44
   175ac:	strb	w0, [x20, #24]
   175b0:	add	x3, x3, #0x10
   175b4:	stp	xzr, xzr, [x20, #32]
   175b8:	add	x0, x20, #0x18
   175bc:	add	x2, x23, #0x18
   175c0:	str	x1, [x20, #64]
   175c4:	add	x1, x19, #0x18
   175c8:	str	q0, [x20, #48]
   175cc:	bl	3c688 <PyInit__decimal@@Base+0x20448>
   175d0:	ldr	x1, [x19]
   175d4:	sub	x1, x1, #0x1
   175d8:	str	x1, [x19]
   175dc:	cbz	x1, 176b8 <PyFloat_FromString@plt+0x10c28>
   175e0:	ldr	x1, [x23]
   175e4:	sub	x1, x1, #0x1
   175e8:	str	x1, [x23]
   175ec:	cbz	x1, 176ac <PyFloat_FromString@plt+0x10c1c>
   175f0:	ldr	w1, [sp, #68]
   175f4:	ldr	x0, [sp, #80]
   175f8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   175fc:	cbnz	w0, 176f8 <PyFloat_FromString@plt+0x10c68>
   17600:	mov	x0, x20
   17604:	ldp	x19, x20, [sp, #16]
   17608:	ldp	x21, x22, [sp, #32]
   1760c:	ldr	x23, [sp, #48]
   17610:	ldp	x29, x30, [sp], #96
   17614:	ret
   17618:	str	x23, [sp, #48]
   1761c:	ldr	x21, [sp, #80]
   17620:	b	174e8 <PyFloat_FromString@plt+0x10a58>
   17624:	mov	x1, x23
   17628:	mov	x2, x21
   1762c:	mov	x0, x20
   17630:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   17634:	mov	x23, x0
   17638:	cbnz	x0, 17578 <PyFloat_FromString@plt+0x10ae8>
   1763c:	b	17540 <PyFloat_FromString@plt+0x10ab0>
   17640:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   17644:	add	x2, sp, #0x58
   17648:	mov	x1, #0x0                   	// #0
   1764c:	ldr	x0, [x0, #2056]
   17650:	bl	6740 <PyContextVar_Get@plt>
   17654:	tbnz	w0, #31, 17788 <PyFloat_FromString@plt+0x10cf8>
   17658:	ldr	x21, [sp, #88]
   1765c:	cbz	x21, 17744 <PyFloat_FromString@plt+0x10cb4>
   17660:	str	x21, [sp, #80]
   17664:	ldr	x0, [x21]
   17668:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1766c:	sub	x0, x0, #0x1
   17670:	str	x0, [x21]
   17674:	cbnz	x0, 17484 <PyFloat_FromString@plt+0x109f4>
   17678:	mov	x0, x21
   1767c:	bl	65d0 <_Py_Dealloc@plt>
   17680:	ldr	x21, [sp, #80]
   17684:	b	17484 <PyFloat_FromString@plt+0x109f4>
   17688:	mov	x1, x19
   1768c:	mov	x2, x21
   17690:	mov	x0, x20
   17694:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   17698:	mov	x19, x0
   1769c:	cbz	x0, 17758 <PyFloat_FromString@plt+0x10cc8>
   176a0:	str	x23, [sp, #48]
   176a4:	ldr	x21, [sp, #80]
   176a8:	b	174f4 <PyFloat_FromString@plt+0x10a64>
   176ac:	mov	x0, x23
   176b0:	bl	65d0 <_Py_Dealloc@plt>
   176b4:	b	175f0 <PyFloat_FromString@plt+0x10b60>
   176b8:	mov	x0, x19
   176bc:	bl	65d0 <_Py_Dealloc@plt>
   176c0:	b	175e0 <PyFloat_FromString@plt+0x10b50>
   176c4:	ldr	x0, [x19]
   176c8:	sub	x0, x0, #0x1
   176cc:	str	x0, [x19]
   176d0:	cbz	x0, 17738 <PyFloat_FromString@plt+0x10ca8>
   176d4:	ldr	x0, [x23]
   176d8:	sub	x0, x0, #0x1
   176dc:	str	x0, [x23]
   176e0:	cbnz	x0, 17550 <PyFloat_FromString@plt+0x10ac0>
   176e4:	mov	x0, x23
   176e8:	bl	65d0 <_Py_Dealloc@plt>
   176ec:	ldp	x21, x22, [sp, #32]
   176f0:	ldr	x23, [sp, #48]
   176f4:	b	174d4 <PyFloat_FromString@plt+0x10a44>
   176f8:	ldr	x0, [x20]
   176fc:	sub	x0, x0, #0x1
   17700:	str	x0, [x20]
   17704:	cbnz	x0, 17550 <PyFloat_FromString@plt+0x10ac0>
   17708:	mov	x0, x20
   1770c:	mov	x20, #0x0                   	// #0
   17710:	bl	65d0 <_Py_Dealloc@plt>
   17714:	ldp	x21, x22, [sp, #32]
   17718:	ldr	x23, [sp, #48]
   1771c:	b	174d4 <PyFloat_FromString@plt+0x10a44>
   17720:	mov	x0, x19
   17724:	mov	x20, #0x0                   	// #0
   17728:	bl	65d0 <_Py_Dealloc@plt>
   1772c:	ldp	x21, x22, [sp, #32]
   17730:	ldr	x23, [sp, #48]
   17734:	b	174d4 <PyFloat_FromString@plt+0x10a44>
   17738:	mov	x0, x19
   1773c:	bl	65d0 <_Py_Dealloc@plt>
   17740:	b	176d4 <PyFloat_FromString@plt+0x10c44>
   17744:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   17748:	str	x0, [sp, #80]
   1774c:	mov	x21, x0
   17750:	cbnz	x0, 17664 <PyFloat_FromString@plt+0x10bd4>
   17754:	nop
   17758:	mov	x20, #0x0                   	// #0
   1775c:	ldp	x21, x22, [sp, #32]
   17760:	b	1755c <PyFloat_FromString@plt+0x10acc>
   17764:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17768:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1776c:	mov	x20, #0x0                   	// #0
   17770:	add	x1, x1, #0xba8
   17774:	ldr	x0, [x0, #3936]
   17778:	ldr	x0, [x0]
   1777c:	bl	6650 <PyErr_SetString@plt>
   17780:	ldp	x21, x22, [sp, #32]
   17784:	b	174d4 <PyFloat_FromString@plt+0x10a44>
   17788:	mov	x20, #0x0                   	// #0
   1778c:	ldp	x21, x22, [sp, #32]
   17790:	b	174d4 <PyFloat_FromString@plt+0x10a44>
   17794:	nop
   17798:	stp	x29, x30, [sp, #-96]!
   1779c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   177a0:	add	x3, x3, #0x9b0
   177a4:	mov	x29, sp
   177a8:	stp	x19, x20, [sp, #16]
   177ac:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   177b0:	mov	x19, x0
   177b4:	ldr	x20, [x20, #4008]
   177b8:	mov	x0, x1
   177bc:	add	x3, x3, #0x570
   177c0:	mov	x1, x2
   177c4:	add	x5, sp, #0x50
   177c8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   177cc:	add	x4, sp, #0x48
   177d0:	add	x2, x2, #0xc88
   177d4:	str	wzr, [sp, #68]
   177d8:	str	x20, [sp, #80]
   177dc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   177e0:	cbz	w0, 178e8 <PyFloat_FromString@plt+0x10e58>
   177e4:	stp	x21, x22, [sp, #32]
   177e8:	ldr	x21, [sp, #80]
   177ec:	cmp	x21, x20
   177f0:	b.eq	179d0 <PyFloat_FromString@plt+0x10f40>  // b.none
   177f4:	ldr	x0, [x21, #8]
   177f8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   177fc:	add	x1, x22, #0x328
   17800:	cmp	x0, x1
   17804:	b.eq	17814 <PyFloat_FromString@plt+0x10d84>  // b.none
   17808:	bl	69c0 <PyType_IsSubtype@plt>
   1780c:	cbz	w0, 17af4 <PyFloat_FromString@plt+0x11064>
   17810:	ldr	x21, [sp, #80]
   17814:	add	x20, x22, #0x328
   17818:	ldr	x0, [x19, #8]
   1781c:	add	x20, x20, #0x1a0
   17820:	cmp	x0, x20
   17824:	b.eq	17874 <PyFloat_FromString@plt+0x10de4>  // b.none
   17828:	mov	x1, x20
   1782c:	bl	69c0 <PyType_IsSubtype@plt>
   17830:	cbnz	w0, 179a8 <PyFloat_FromString@plt+0x10f18>
   17834:	ldr	x2, [x19, #8]
   17838:	ldr	x0, [x2, #168]
   1783c:	tbnz	w0, #24, 17a18 <PyFloat_FromString@plt+0x10f88>
   17840:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17844:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17848:	ldr	x2, [x2, #24]
   1784c:	add	x1, x1, #0xb70
   17850:	ldr	x0, [x0, #3936]
   17854:	mov	x20, #0x0                   	// #0
   17858:	ldr	x0, [x0]
   1785c:	bl	6a10 <PyErr_Format@plt>
   17860:	ldp	x21, x22, [sp, #32]
   17864:	mov	x0, x20
   17868:	ldp	x19, x20, [sp, #16]
   1786c:	ldp	x29, x30, [sp], #96
   17870:	ret
   17874:	str	x23, [sp, #48]
   17878:	ldr	x0, [x19]
   1787c:	add	x0, x0, #0x1
   17880:	str	x0, [x19]
   17884:	ldr	x23, [sp, #72]
   17888:	add	x20, x22, #0x328
   1788c:	add	x20, x20, #0x1a0
   17890:	ldr	x0, [x23, #8]
   17894:	cmp	x0, x20
   17898:	b.eq	178fc <PyFloat_FromString@plt+0x10e6c>  // b.none
   1789c:	mov	x1, x20
   178a0:	bl	69c0 <PyType_IsSubtype@plt>
   178a4:	cbnz	w0, 178fc <PyFloat_FromString@plt+0x10e6c>
   178a8:	ldr	x2, [x23, #8]
   178ac:	ldr	x0, [x2, #168]
   178b0:	tbnz	w0, #24, 179b4 <PyFloat_FromString@plt+0x10f24>
   178b4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   178b8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   178bc:	ldr	x2, [x2, #24]
   178c0:	add	x1, x1, #0xb70
   178c4:	ldr	x0, [x0, #3936]
   178c8:	ldr	x0, [x0]
   178cc:	bl	6a10 <PyErr_Format@plt>
   178d0:	ldr	x0, [x19]
   178d4:	sub	x0, x0, #0x1
   178d8:	str	x0, [x19]
   178dc:	cbz	x0, 17ab0 <PyFloat_FromString@plt+0x11020>
   178e0:	ldp	x21, x22, [sp, #32]
   178e4:	ldr	x23, [sp, #48]
   178e8:	mov	x20, #0x0                   	// #0
   178ec:	mov	x0, x20
   178f0:	ldp	x19, x20, [sp, #16]
   178f4:	ldp	x29, x30, [sp], #96
   178f8:	ret
   178fc:	ldr	x1, [x23]
   17900:	add	x1, x1, #0x1
   17904:	str	x1, [x23]
   17908:	add	x0, x22, #0x328
   1790c:	add	x0, x0, #0x1a0
   17910:	bl	6950 <_PyObject_New@plt>
   17914:	mov	x20, x0
   17918:	cbz	x0, 17a54 <PyFloat_FromString@plt+0x10fc4>
   1791c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   17920:	add	x1, x20, #0x48
   17924:	ldr	x3, [sp, #80]
   17928:	mov	x2, #0xffffffffffffffff    	// #-1
   1792c:	ldr	q0, [x0, #2128]
   17930:	mov	w0, #0x30                  	// #48
   17934:	str	x2, [x20, #16]
   17938:	add	x4, sp, #0x44
   1793c:	strb	w0, [x20, #24]
   17940:	add	x3, x3, #0x10
   17944:	stp	xzr, xzr, [x20, #32]
   17948:	add	x0, x20, #0x18
   1794c:	add	x2, x23, #0x18
   17950:	str	x1, [x20, #64]
   17954:	add	x1, x19, #0x18
   17958:	str	q0, [x20, #48]
   1795c:	bl	32e10 <PyInit__decimal@@Base+0x16bd0>
   17960:	ldr	x1, [x19]
   17964:	sub	x1, x1, #0x1
   17968:	str	x1, [x19]
   1796c:	cbz	x1, 17a48 <PyFloat_FromString@plt+0x10fb8>
   17970:	ldr	x1, [x23]
   17974:	sub	x1, x1, #0x1
   17978:	str	x1, [x23]
   1797c:	cbz	x1, 17a3c <PyFloat_FromString@plt+0x10fac>
   17980:	ldr	w1, [sp, #68]
   17984:	ldr	x0, [sp, #80]
   17988:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1798c:	cbnz	w0, 17a88 <PyFloat_FromString@plt+0x10ff8>
   17990:	mov	x0, x20
   17994:	ldp	x19, x20, [sp, #16]
   17998:	ldp	x21, x22, [sp, #32]
   1799c:	ldr	x23, [sp, #48]
   179a0:	ldp	x29, x30, [sp], #96
   179a4:	ret
   179a8:	str	x23, [sp, #48]
   179ac:	ldr	x21, [sp, #80]
   179b0:	b	17878 <PyFloat_FromString@plt+0x10de8>
   179b4:	mov	x1, x23
   179b8:	mov	x2, x21
   179bc:	mov	x0, x20
   179c0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   179c4:	mov	x23, x0
   179c8:	cbnz	x0, 17908 <PyFloat_FromString@plt+0x10e78>
   179cc:	b	178d0 <PyFloat_FromString@plt+0x10e40>
   179d0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   179d4:	add	x2, sp, #0x58
   179d8:	mov	x1, #0x0                   	// #0
   179dc:	ldr	x0, [x0, #2056]
   179e0:	bl	6740 <PyContextVar_Get@plt>
   179e4:	tbnz	w0, #31, 17b18 <PyFloat_FromString@plt+0x11088>
   179e8:	ldr	x21, [sp, #88]
   179ec:	cbz	x21, 17ad4 <PyFloat_FromString@plt+0x11044>
   179f0:	str	x21, [sp, #80]
   179f4:	ldr	x0, [x21]
   179f8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   179fc:	sub	x0, x0, #0x1
   17a00:	str	x0, [x21]
   17a04:	cbnz	x0, 17814 <PyFloat_FromString@plt+0x10d84>
   17a08:	mov	x0, x21
   17a0c:	bl	65d0 <_Py_Dealloc@plt>
   17a10:	ldr	x21, [sp, #80]
   17a14:	b	17814 <PyFloat_FromString@plt+0x10d84>
   17a18:	mov	x1, x19
   17a1c:	mov	x2, x21
   17a20:	mov	x0, x20
   17a24:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   17a28:	mov	x19, x0
   17a2c:	cbz	x0, 17ae8 <PyFloat_FromString@plt+0x11058>
   17a30:	str	x23, [sp, #48]
   17a34:	ldr	x21, [sp, #80]
   17a38:	b	17884 <PyFloat_FromString@plt+0x10df4>
   17a3c:	mov	x0, x23
   17a40:	bl	65d0 <_Py_Dealloc@plt>
   17a44:	b	17980 <PyFloat_FromString@plt+0x10ef0>
   17a48:	mov	x0, x19
   17a4c:	bl	65d0 <_Py_Dealloc@plt>
   17a50:	b	17970 <PyFloat_FromString@plt+0x10ee0>
   17a54:	ldr	x0, [x19]
   17a58:	sub	x0, x0, #0x1
   17a5c:	str	x0, [x19]
   17a60:	cbz	x0, 17ac8 <PyFloat_FromString@plt+0x11038>
   17a64:	ldr	x0, [x23]
   17a68:	sub	x0, x0, #0x1
   17a6c:	str	x0, [x23]
   17a70:	cbnz	x0, 178e0 <PyFloat_FromString@plt+0x10e50>
   17a74:	mov	x0, x23
   17a78:	bl	65d0 <_Py_Dealloc@plt>
   17a7c:	ldp	x21, x22, [sp, #32]
   17a80:	ldr	x23, [sp, #48]
   17a84:	b	17864 <PyFloat_FromString@plt+0x10dd4>
   17a88:	ldr	x0, [x20]
   17a8c:	sub	x0, x0, #0x1
   17a90:	str	x0, [x20]
   17a94:	cbnz	x0, 178e0 <PyFloat_FromString@plt+0x10e50>
   17a98:	mov	x0, x20
   17a9c:	mov	x20, #0x0                   	// #0
   17aa0:	bl	65d0 <_Py_Dealloc@plt>
   17aa4:	ldp	x21, x22, [sp, #32]
   17aa8:	ldr	x23, [sp, #48]
   17aac:	b	17864 <PyFloat_FromString@plt+0x10dd4>
   17ab0:	mov	x0, x19
   17ab4:	mov	x20, #0x0                   	// #0
   17ab8:	bl	65d0 <_Py_Dealloc@plt>
   17abc:	ldp	x21, x22, [sp, #32]
   17ac0:	ldr	x23, [sp, #48]
   17ac4:	b	17864 <PyFloat_FromString@plt+0x10dd4>
   17ac8:	mov	x0, x19
   17acc:	bl	65d0 <_Py_Dealloc@plt>
   17ad0:	b	17a64 <PyFloat_FromString@plt+0x10fd4>
   17ad4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   17ad8:	str	x0, [sp, #80]
   17adc:	mov	x21, x0
   17ae0:	cbnz	x0, 179f4 <PyFloat_FromString@plt+0x10f64>
   17ae4:	nop
   17ae8:	mov	x20, #0x0                   	// #0
   17aec:	ldp	x21, x22, [sp, #32]
   17af0:	b	178ec <PyFloat_FromString@plt+0x10e5c>
   17af4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17af8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17afc:	mov	x20, #0x0                   	// #0
   17b00:	add	x1, x1, #0xba8
   17b04:	ldr	x0, [x0, #3936]
   17b08:	ldr	x0, [x0]
   17b0c:	bl	6650 <PyErr_SetString@plt>
   17b10:	ldp	x21, x22, [sp, #32]
   17b14:	b	17864 <PyFloat_FromString@plt+0x10dd4>
   17b18:	mov	x20, #0x0                   	// #0
   17b1c:	ldp	x21, x22, [sp, #32]
   17b20:	b	17864 <PyFloat_FromString@plt+0x10dd4>
   17b24:	nop
   17b28:	stp	x29, x30, [sp, #-96]!
   17b2c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   17b30:	add	x3, x3, #0x9b0
   17b34:	mov	x29, sp
   17b38:	stp	x19, x20, [sp, #16]
   17b3c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   17b40:	mov	x19, x0
   17b44:	ldr	x20, [x20, #4008]
   17b48:	mov	x0, x1
   17b4c:	add	x3, x3, #0x590
   17b50:	mov	x1, x2
   17b54:	add	x5, sp, #0x50
   17b58:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   17b5c:	add	x4, sp, #0x48
   17b60:	add	x2, x2, #0xc88
   17b64:	str	wzr, [sp, #68]
   17b68:	str	x20, [sp, #80]
   17b6c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17b70:	cbz	w0, 17c78 <PyFloat_FromString@plt+0x111e8>
   17b74:	stp	x21, x22, [sp, #32]
   17b78:	ldr	x21, [sp, #80]
   17b7c:	cmp	x21, x20
   17b80:	b.eq	17d60 <PyFloat_FromString@plt+0x112d0>  // b.none
   17b84:	ldr	x0, [x21, #8]
   17b88:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   17b8c:	add	x1, x22, #0x328
   17b90:	cmp	x0, x1
   17b94:	b.eq	17ba4 <PyFloat_FromString@plt+0x11114>  // b.none
   17b98:	bl	69c0 <PyType_IsSubtype@plt>
   17b9c:	cbz	w0, 17e84 <PyFloat_FromString@plt+0x113f4>
   17ba0:	ldr	x21, [sp, #80]
   17ba4:	add	x20, x22, #0x328
   17ba8:	ldr	x0, [x19, #8]
   17bac:	add	x20, x20, #0x1a0
   17bb0:	cmp	x0, x20
   17bb4:	b.eq	17c04 <PyFloat_FromString@plt+0x11174>  // b.none
   17bb8:	mov	x1, x20
   17bbc:	bl	69c0 <PyType_IsSubtype@plt>
   17bc0:	cbnz	w0, 17d38 <PyFloat_FromString@plt+0x112a8>
   17bc4:	ldr	x2, [x19, #8]
   17bc8:	ldr	x0, [x2, #168]
   17bcc:	tbnz	w0, #24, 17da8 <PyFloat_FromString@plt+0x11318>
   17bd0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17bd4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17bd8:	ldr	x2, [x2, #24]
   17bdc:	add	x1, x1, #0xb70
   17be0:	ldr	x0, [x0, #3936]
   17be4:	mov	x20, #0x0                   	// #0
   17be8:	ldr	x0, [x0]
   17bec:	bl	6a10 <PyErr_Format@plt>
   17bf0:	ldp	x21, x22, [sp, #32]
   17bf4:	mov	x0, x20
   17bf8:	ldp	x19, x20, [sp, #16]
   17bfc:	ldp	x29, x30, [sp], #96
   17c00:	ret
   17c04:	str	x23, [sp, #48]
   17c08:	ldr	x0, [x19]
   17c0c:	add	x0, x0, #0x1
   17c10:	str	x0, [x19]
   17c14:	ldr	x23, [sp, #72]
   17c18:	add	x20, x22, #0x328
   17c1c:	add	x20, x20, #0x1a0
   17c20:	ldr	x0, [x23, #8]
   17c24:	cmp	x0, x20
   17c28:	b.eq	17c8c <PyFloat_FromString@plt+0x111fc>  // b.none
   17c2c:	mov	x1, x20
   17c30:	bl	69c0 <PyType_IsSubtype@plt>
   17c34:	cbnz	w0, 17c8c <PyFloat_FromString@plt+0x111fc>
   17c38:	ldr	x2, [x23, #8]
   17c3c:	ldr	x0, [x2, #168]
   17c40:	tbnz	w0, #24, 17d44 <PyFloat_FromString@plt+0x112b4>
   17c44:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17c48:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17c4c:	ldr	x2, [x2, #24]
   17c50:	add	x1, x1, #0xb70
   17c54:	ldr	x0, [x0, #3936]
   17c58:	ldr	x0, [x0]
   17c5c:	bl	6a10 <PyErr_Format@plt>
   17c60:	ldr	x0, [x19]
   17c64:	sub	x0, x0, #0x1
   17c68:	str	x0, [x19]
   17c6c:	cbz	x0, 17e40 <PyFloat_FromString@plt+0x113b0>
   17c70:	ldp	x21, x22, [sp, #32]
   17c74:	ldr	x23, [sp, #48]
   17c78:	mov	x20, #0x0                   	// #0
   17c7c:	mov	x0, x20
   17c80:	ldp	x19, x20, [sp, #16]
   17c84:	ldp	x29, x30, [sp], #96
   17c88:	ret
   17c8c:	ldr	x1, [x23]
   17c90:	add	x1, x1, #0x1
   17c94:	str	x1, [x23]
   17c98:	add	x0, x22, #0x328
   17c9c:	add	x0, x0, #0x1a0
   17ca0:	bl	6950 <_PyObject_New@plt>
   17ca4:	mov	x20, x0
   17ca8:	cbz	x0, 17de4 <PyFloat_FromString@plt+0x11354>
   17cac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   17cb0:	add	x1, x20, #0x48
   17cb4:	ldr	x3, [sp, #80]
   17cb8:	mov	x2, #0xffffffffffffffff    	// #-1
   17cbc:	ldr	q0, [x0, #2128]
   17cc0:	mov	w0, #0x30                  	// #48
   17cc4:	str	x2, [x20, #16]
   17cc8:	add	x4, sp, #0x44
   17ccc:	strb	w0, [x20, #24]
   17cd0:	add	x3, x3, #0x10
   17cd4:	stp	xzr, xzr, [x20, #32]
   17cd8:	add	x0, x20, #0x18
   17cdc:	add	x2, x23, #0x18
   17ce0:	str	x1, [x20, #64]
   17ce4:	add	x1, x19, #0x18
   17ce8:	str	q0, [x20, #48]
   17cec:	bl	2daa0 <PyInit__decimal@@Base+0x11860>
   17cf0:	ldr	x1, [x19]
   17cf4:	sub	x1, x1, #0x1
   17cf8:	str	x1, [x19]
   17cfc:	cbz	x1, 17dd8 <PyFloat_FromString@plt+0x11348>
   17d00:	ldr	x1, [x23]
   17d04:	sub	x1, x1, #0x1
   17d08:	str	x1, [x23]
   17d0c:	cbz	x1, 17dcc <PyFloat_FromString@plt+0x1133c>
   17d10:	ldr	w1, [sp, #68]
   17d14:	ldr	x0, [sp, #80]
   17d18:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   17d1c:	cbnz	w0, 17e18 <PyFloat_FromString@plt+0x11388>
   17d20:	mov	x0, x20
   17d24:	ldp	x19, x20, [sp, #16]
   17d28:	ldp	x21, x22, [sp, #32]
   17d2c:	ldr	x23, [sp, #48]
   17d30:	ldp	x29, x30, [sp], #96
   17d34:	ret
   17d38:	str	x23, [sp, #48]
   17d3c:	ldr	x21, [sp, #80]
   17d40:	b	17c08 <PyFloat_FromString@plt+0x11178>
   17d44:	mov	x1, x23
   17d48:	mov	x2, x21
   17d4c:	mov	x0, x20
   17d50:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   17d54:	mov	x23, x0
   17d58:	cbnz	x0, 17c98 <PyFloat_FromString@plt+0x11208>
   17d5c:	b	17c60 <PyFloat_FromString@plt+0x111d0>
   17d60:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   17d64:	add	x2, sp, #0x58
   17d68:	mov	x1, #0x0                   	// #0
   17d6c:	ldr	x0, [x0, #2056]
   17d70:	bl	6740 <PyContextVar_Get@plt>
   17d74:	tbnz	w0, #31, 17ea8 <PyFloat_FromString@plt+0x11418>
   17d78:	ldr	x21, [sp, #88]
   17d7c:	cbz	x21, 17e64 <PyFloat_FromString@plt+0x113d4>
   17d80:	str	x21, [sp, #80]
   17d84:	ldr	x0, [x21]
   17d88:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   17d8c:	sub	x0, x0, #0x1
   17d90:	str	x0, [x21]
   17d94:	cbnz	x0, 17ba4 <PyFloat_FromString@plt+0x11114>
   17d98:	mov	x0, x21
   17d9c:	bl	65d0 <_Py_Dealloc@plt>
   17da0:	ldr	x21, [sp, #80]
   17da4:	b	17ba4 <PyFloat_FromString@plt+0x11114>
   17da8:	mov	x1, x19
   17dac:	mov	x2, x21
   17db0:	mov	x0, x20
   17db4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   17db8:	mov	x19, x0
   17dbc:	cbz	x0, 17e78 <PyFloat_FromString@plt+0x113e8>
   17dc0:	str	x23, [sp, #48]
   17dc4:	ldr	x21, [sp, #80]
   17dc8:	b	17c14 <PyFloat_FromString@plt+0x11184>
   17dcc:	mov	x0, x23
   17dd0:	bl	65d0 <_Py_Dealloc@plt>
   17dd4:	b	17d10 <PyFloat_FromString@plt+0x11280>
   17dd8:	mov	x0, x19
   17ddc:	bl	65d0 <_Py_Dealloc@plt>
   17de0:	b	17d00 <PyFloat_FromString@plt+0x11270>
   17de4:	ldr	x0, [x19]
   17de8:	sub	x0, x0, #0x1
   17dec:	str	x0, [x19]
   17df0:	cbz	x0, 17e58 <PyFloat_FromString@plt+0x113c8>
   17df4:	ldr	x0, [x23]
   17df8:	sub	x0, x0, #0x1
   17dfc:	str	x0, [x23]
   17e00:	cbnz	x0, 17c70 <PyFloat_FromString@plt+0x111e0>
   17e04:	mov	x0, x23
   17e08:	bl	65d0 <_Py_Dealloc@plt>
   17e0c:	ldp	x21, x22, [sp, #32]
   17e10:	ldr	x23, [sp, #48]
   17e14:	b	17bf4 <PyFloat_FromString@plt+0x11164>
   17e18:	ldr	x0, [x20]
   17e1c:	sub	x0, x0, #0x1
   17e20:	str	x0, [x20]
   17e24:	cbnz	x0, 17c70 <PyFloat_FromString@plt+0x111e0>
   17e28:	mov	x0, x20
   17e2c:	mov	x20, #0x0                   	// #0
   17e30:	bl	65d0 <_Py_Dealloc@plt>
   17e34:	ldp	x21, x22, [sp, #32]
   17e38:	ldr	x23, [sp, #48]
   17e3c:	b	17bf4 <PyFloat_FromString@plt+0x11164>
   17e40:	mov	x0, x19
   17e44:	mov	x20, #0x0                   	// #0
   17e48:	bl	65d0 <_Py_Dealloc@plt>
   17e4c:	ldp	x21, x22, [sp, #32]
   17e50:	ldr	x23, [sp, #48]
   17e54:	b	17bf4 <PyFloat_FromString@plt+0x11164>
   17e58:	mov	x0, x19
   17e5c:	bl	65d0 <_Py_Dealloc@plt>
   17e60:	b	17df4 <PyFloat_FromString@plt+0x11364>
   17e64:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   17e68:	str	x0, [sp, #80]
   17e6c:	mov	x21, x0
   17e70:	cbnz	x0, 17d84 <PyFloat_FromString@plt+0x112f4>
   17e74:	nop
   17e78:	mov	x20, #0x0                   	// #0
   17e7c:	ldp	x21, x22, [sp, #32]
   17e80:	b	17c7c <PyFloat_FromString@plt+0x111ec>
   17e84:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17e88:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17e8c:	mov	x20, #0x0                   	// #0
   17e90:	add	x1, x1, #0xba8
   17e94:	ldr	x0, [x0, #3936]
   17e98:	ldr	x0, [x0]
   17e9c:	bl	6650 <PyErr_SetString@plt>
   17ea0:	ldp	x21, x22, [sp, #32]
   17ea4:	b	17bf4 <PyFloat_FromString@plt+0x11164>
   17ea8:	mov	x20, #0x0                   	// #0
   17eac:	ldp	x21, x22, [sp, #32]
   17eb0:	b	17bf4 <PyFloat_FromString@plt+0x11164>
   17eb4:	nop
   17eb8:	stp	x29, x30, [sp, #-96]!
   17ebc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   17ec0:	add	x3, x3, #0x9b0
   17ec4:	mov	x29, sp
   17ec8:	stp	x19, x20, [sp, #16]
   17ecc:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   17ed0:	mov	x19, x0
   17ed4:	ldr	x20, [x20, #4008]
   17ed8:	mov	x0, x1
   17edc:	add	x3, x3, #0x5b0
   17ee0:	mov	x1, x2
   17ee4:	add	x5, sp, #0x50
   17ee8:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   17eec:	add	x4, sp, #0x48
   17ef0:	add	x2, x2, #0xc88
   17ef4:	str	wzr, [sp, #68]
   17ef8:	str	x20, [sp, #80]
   17efc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17f00:	cbz	w0, 18008 <PyFloat_FromString@plt+0x11578>
   17f04:	stp	x21, x22, [sp, #32]
   17f08:	ldr	x21, [sp, #80]
   17f0c:	cmp	x21, x20
   17f10:	b.eq	180f0 <PyFloat_FromString@plt+0x11660>  // b.none
   17f14:	ldr	x0, [x21, #8]
   17f18:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   17f1c:	add	x1, x22, #0x328
   17f20:	cmp	x0, x1
   17f24:	b.eq	17f34 <PyFloat_FromString@plt+0x114a4>  // b.none
   17f28:	bl	69c0 <PyType_IsSubtype@plt>
   17f2c:	cbz	w0, 18214 <PyFloat_FromString@plt+0x11784>
   17f30:	ldr	x21, [sp, #80]
   17f34:	add	x20, x22, #0x328
   17f38:	ldr	x0, [x19, #8]
   17f3c:	add	x20, x20, #0x1a0
   17f40:	cmp	x0, x20
   17f44:	b.eq	17f94 <PyFloat_FromString@plt+0x11504>  // b.none
   17f48:	mov	x1, x20
   17f4c:	bl	69c0 <PyType_IsSubtype@plt>
   17f50:	cbnz	w0, 180c8 <PyFloat_FromString@plt+0x11638>
   17f54:	ldr	x2, [x19, #8]
   17f58:	ldr	x0, [x2, #168]
   17f5c:	tbnz	w0, #24, 18138 <PyFloat_FromString@plt+0x116a8>
   17f60:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17f64:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17f68:	ldr	x2, [x2, #24]
   17f6c:	add	x1, x1, #0xb70
   17f70:	ldr	x0, [x0, #3936]
   17f74:	mov	x20, #0x0                   	// #0
   17f78:	ldr	x0, [x0]
   17f7c:	bl	6a10 <PyErr_Format@plt>
   17f80:	ldp	x21, x22, [sp, #32]
   17f84:	mov	x0, x20
   17f88:	ldp	x19, x20, [sp, #16]
   17f8c:	ldp	x29, x30, [sp], #96
   17f90:	ret
   17f94:	str	x23, [sp, #48]
   17f98:	ldr	x0, [x19]
   17f9c:	add	x0, x0, #0x1
   17fa0:	str	x0, [x19]
   17fa4:	ldr	x23, [sp, #72]
   17fa8:	add	x20, x22, #0x328
   17fac:	add	x20, x20, #0x1a0
   17fb0:	ldr	x0, [x23, #8]
   17fb4:	cmp	x0, x20
   17fb8:	b.eq	1801c <PyFloat_FromString@plt+0x1158c>  // b.none
   17fbc:	mov	x1, x20
   17fc0:	bl	69c0 <PyType_IsSubtype@plt>
   17fc4:	cbnz	w0, 1801c <PyFloat_FromString@plt+0x1158c>
   17fc8:	ldr	x2, [x23, #8]
   17fcc:	ldr	x0, [x2, #168]
   17fd0:	tbnz	w0, #24, 180d4 <PyFloat_FromString@plt+0x11644>
   17fd4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   17fd8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   17fdc:	ldr	x2, [x2, #24]
   17fe0:	add	x1, x1, #0xb70
   17fe4:	ldr	x0, [x0, #3936]
   17fe8:	ldr	x0, [x0]
   17fec:	bl	6a10 <PyErr_Format@plt>
   17ff0:	ldr	x0, [x19]
   17ff4:	sub	x0, x0, #0x1
   17ff8:	str	x0, [x19]
   17ffc:	cbz	x0, 181d0 <PyFloat_FromString@plt+0x11740>
   18000:	ldp	x21, x22, [sp, #32]
   18004:	ldr	x23, [sp, #48]
   18008:	mov	x20, #0x0                   	// #0
   1800c:	mov	x0, x20
   18010:	ldp	x19, x20, [sp, #16]
   18014:	ldp	x29, x30, [sp], #96
   18018:	ret
   1801c:	ldr	x1, [x23]
   18020:	add	x1, x1, #0x1
   18024:	str	x1, [x23]
   18028:	add	x0, x22, #0x328
   1802c:	add	x0, x0, #0x1a0
   18030:	bl	6950 <_PyObject_New@plt>
   18034:	mov	x20, x0
   18038:	cbz	x0, 18174 <PyFloat_FromString@plt+0x116e4>
   1803c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   18040:	add	x1, x20, #0x48
   18044:	ldr	x3, [sp, #80]
   18048:	mov	x2, #0xffffffffffffffff    	// #-1
   1804c:	ldr	q0, [x0, #2128]
   18050:	mov	w0, #0x30                  	// #48
   18054:	str	x2, [x20, #16]
   18058:	add	x4, sp, #0x44
   1805c:	strb	w0, [x20, #24]
   18060:	add	x3, x3, #0x10
   18064:	stp	xzr, xzr, [x20, #32]
   18068:	add	x0, x20, #0x18
   1806c:	add	x2, x23, #0x18
   18070:	str	x1, [x20, #64]
   18074:	add	x1, x19, #0x18
   18078:	str	q0, [x20, #48]
   1807c:	bl	38848 <PyInit__decimal@@Base+0x1c608>
   18080:	ldr	x1, [x19]
   18084:	sub	x1, x1, #0x1
   18088:	str	x1, [x19]
   1808c:	cbz	x1, 18168 <PyFloat_FromString@plt+0x116d8>
   18090:	ldr	x1, [x23]
   18094:	sub	x1, x1, #0x1
   18098:	str	x1, [x23]
   1809c:	cbz	x1, 1815c <PyFloat_FromString@plt+0x116cc>
   180a0:	ldr	w1, [sp, #68]
   180a4:	ldr	x0, [sp, #80]
   180a8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   180ac:	cbnz	w0, 181a8 <PyFloat_FromString@plt+0x11718>
   180b0:	mov	x0, x20
   180b4:	ldp	x19, x20, [sp, #16]
   180b8:	ldp	x21, x22, [sp, #32]
   180bc:	ldr	x23, [sp, #48]
   180c0:	ldp	x29, x30, [sp], #96
   180c4:	ret
   180c8:	str	x23, [sp, #48]
   180cc:	ldr	x21, [sp, #80]
   180d0:	b	17f98 <PyFloat_FromString@plt+0x11508>
   180d4:	mov	x1, x23
   180d8:	mov	x2, x21
   180dc:	mov	x0, x20
   180e0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   180e4:	mov	x23, x0
   180e8:	cbnz	x0, 18028 <PyFloat_FromString@plt+0x11598>
   180ec:	b	17ff0 <PyFloat_FromString@plt+0x11560>
   180f0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   180f4:	add	x2, sp, #0x58
   180f8:	mov	x1, #0x0                   	// #0
   180fc:	ldr	x0, [x0, #2056]
   18100:	bl	6740 <PyContextVar_Get@plt>
   18104:	tbnz	w0, #31, 18238 <PyFloat_FromString@plt+0x117a8>
   18108:	ldr	x21, [sp, #88]
   1810c:	cbz	x21, 181f4 <PyFloat_FromString@plt+0x11764>
   18110:	str	x21, [sp, #80]
   18114:	ldr	x0, [x21]
   18118:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1811c:	sub	x0, x0, #0x1
   18120:	str	x0, [x21]
   18124:	cbnz	x0, 17f34 <PyFloat_FromString@plt+0x114a4>
   18128:	mov	x0, x21
   1812c:	bl	65d0 <_Py_Dealloc@plt>
   18130:	ldr	x21, [sp, #80]
   18134:	b	17f34 <PyFloat_FromString@plt+0x114a4>
   18138:	mov	x1, x19
   1813c:	mov	x2, x21
   18140:	mov	x0, x20
   18144:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18148:	mov	x19, x0
   1814c:	cbz	x0, 18208 <PyFloat_FromString@plt+0x11778>
   18150:	str	x23, [sp, #48]
   18154:	ldr	x21, [sp, #80]
   18158:	b	17fa4 <PyFloat_FromString@plt+0x11514>
   1815c:	mov	x0, x23
   18160:	bl	65d0 <_Py_Dealloc@plt>
   18164:	b	180a0 <PyFloat_FromString@plt+0x11610>
   18168:	mov	x0, x19
   1816c:	bl	65d0 <_Py_Dealloc@plt>
   18170:	b	18090 <PyFloat_FromString@plt+0x11600>
   18174:	ldr	x0, [x19]
   18178:	sub	x0, x0, #0x1
   1817c:	str	x0, [x19]
   18180:	cbz	x0, 181e8 <PyFloat_FromString@plt+0x11758>
   18184:	ldr	x0, [x23]
   18188:	sub	x0, x0, #0x1
   1818c:	str	x0, [x23]
   18190:	cbnz	x0, 18000 <PyFloat_FromString@plt+0x11570>
   18194:	mov	x0, x23
   18198:	bl	65d0 <_Py_Dealloc@plt>
   1819c:	ldp	x21, x22, [sp, #32]
   181a0:	ldr	x23, [sp, #48]
   181a4:	b	17f84 <PyFloat_FromString@plt+0x114f4>
   181a8:	ldr	x0, [x20]
   181ac:	sub	x0, x0, #0x1
   181b0:	str	x0, [x20]
   181b4:	cbnz	x0, 18000 <PyFloat_FromString@plt+0x11570>
   181b8:	mov	x0, x20
   181bc:	mov	x20, #0x0                   	// #0
   181c0:	bl	65d0 <_Py_Dealloc@plt>
   181c4:	ldp	x21, x22, [sp, #32]
   181c8:	ldr	x23, [sp, #48]
   181cc:	b	17f84 <PyFloat_FromString@plt+0x114f4>
   181d0:	mov	x0, x19
   181d4:	mov	x20, #0x0                   	// #0
   181d8:	bl	65d0 <_Py_Dealloc@plt>
   181dc:	ldp	x21, x22, [sp, #32]
   181e0:	ldr	x23, [sp, #48]
   181e4:	b	17f84 <PyFloat_FromString@plt+0x114f4>
   181e8:	mov	x0, x19
   181ec:	bl	65d0 <_Py_Dealloc@plt>
   181f0:	b	18184 <PyFloat_FromString@plt+0x116f4>
   181f4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   181f8:	str	x0, [sp, #80]
   181fc:	mov	x21, x0
   18200:	cbnz	x0, 18114 <PyFloat_FromString@plt+0x11684>
   18204:	nop
   18208:	mov	x20, #0x0                   	// #0
   1820c:	ldp	x21, x22, [sp, #32]
   18210:	b	1800c <PyFloat_FromString@plt+0x1157c>
   18214:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18218:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1821c:	mov	x20, #0x0                   	// #0
   18220:	add	x1, x1, #0xba8
   18224:	ldr	x0, [x0, #3936]
   18228:	ldr	x0, [x0]
   1822c:	bl	6650 <PyErr_SetString@plt>
   18230:	ldp	x21, x22, [sp, #32]
   18234:	b	17f84 <PyFloat_FromString@plt+0x114f4>
   18238:	mov	x20, #0x0                   	// #0
   1823c:	ldp	x21, x22, [sp, #32]
   18240:	b	17f84 <PyFloat_FromString@plt+0x114f4>
   18244:	nop
   18248:	stp	x29, x30, [sp, #-96]!
   1824c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   18250:	add	x3, x3, #0x9b0
   18254:	mov	x29, sp
   18258:	stp	x19, x20, [sp, #16]
   1825c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   18260:	mov	x19, x0
   18264:	ldr	x20, [x20, #4008]
   18268:	mov	x0, x1
   1826c:	add	x3, x3, #0x5d0
   18270:	mov	x1, x2
   18274:	add	x5, sp, #0x50
   18278:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1827c:	add	x4, sp, #0x48
   18280:	add	x2, x2, #0xc88
   18284:	str	wzr, [sp, #68]
   18288:	str	x20, [sp, #80]
   1828c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18290:	cbz	w0, 18398 <PyFloat_FromString@plt+0x11908>
   18294:	stp	x21, x22, [sp, #32]
   18298:	ldr	x21, [sp, #80]
   1829c:	cmp	x21, x20
   182a0:	b.eq	18480 <PyFloat_FromString@plt+0x119f0>  // b.none
   182a4:	ldr	x0, [x21, #8]
   182a8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   182ac:	add	x1, x22, #0x328
   182b0:	cmp	x0, x1
   182b4:	b.eq	182c4 <PyFloat_FromString@plt+0x11834>  // b.none
   182b8:	bl	69c0 <PyType_IsSubtype@plt>
   182bc:	cbz	w0, 185a4 <PyFloat_FromString@plt+0x11b14>
   182c0:	ldr	x21, [sp, #80]
   182c4:	add	x20, x22, #0x328
   182c8:	ldr	x0, [x19, #8]
   182cc:	add	x20, x20, #0x1a0
   182d0:	cmp	x0, x20
   182d4:	b.eq	18324 <PyFloat_FromString@plt+0x11894>  // b.none
   182d8:	mov	x1, x20
   182dc:	bl	69c0 <PyType_IsSubtype@plt>
   182e0:	cbnz	w0, 18458 <PyFloat_FromString@plt+0x119c8>
   182e4:	ldr	x2, [x19, #8]
   182e8:	ldr	x0, [x2, #168]
   182ec:	tbnz	w0, #24, 184c8 <PyFloat_FromString@plt+0x11a38>
   182f0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   182f4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   182f8:	ldr	x2, [x2, #24]
   182fc:	add	x1, x1, #0xb70
   18300:	ldr	x0, [x0, #3936]
   18304:	mov	x20, #0x0                   	// #0
   18308:	ldr	x0, [x0]
   1830c:	bl	6a10 <PyErr_Format@plt>
   18310:	ldp	x21, x22, [sp, #32]
   18314:	mov	x0, x20
   18318:	ldp	x19, x20, [sp, #16]
   1831c:	ldp	x29, x30, [sp], #96
   18320:	ret
   18324:	str	x23, [sp, #48]
   18328:	ldr	x0, [x19]
   1832c:	add	x0, x0, #0x1
   18330:	str	x0, [x19]
   18334:	ldr	x23, [sp, #72]
   18338:	add	x20, x22, #0x328
   1833c:	add	x20, x20, #0x1a0
   18340:	ldr	x0, [x23, #8]
   18344:	cmp	x0, x20
   18348:	b.eq	183ac <PyFloat_FromString@plt+0x1191c>  // b.none
   1834c:	mov	x1, x20
   18350:	bl	69c0 <PyType_IsSubtype@plt>
   18354:	cbnz	w0, 183ac <PyFloat_FromString@plt+0x1191c>
   18358:	ldr	x2, [x23, #8]
   1835c:	ldr	x0, [x2, #168]
   18360:	tbnz	w0, #24, 18464 <PyFloat_FromString@plt+0x119d4>
   18364:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18368:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1836c:	ldr	x2, [x2, #24]
   18370:	add	x1, x1, #0xb70
   18374:	ldr	x0, [x0, #3936]
   18378:	ldr	x0, [x0]
   1837c:	bl	6a10 <PyErr_Format@plt>
   18380:	ldr	x0, [x19]
   18384:	sub	x0, x0, #0x1
   18388:	str	x0, [x19]
   1838c:	cbz	x0, 18560 <PyFloat_FromString@plt+0x11ad0>
   18390:	ldp	x21, x22, [sp, #32]
   18394:	ldr	x23, [sp, #48]
   18398:	mov	x20, #0x0                   	// #0
   1839c:	mov	x0, x20
   183a0:	ldp	x19, x20, [sp, #16]
   183a4:	ldp	x29, x30, [sp], #96
   183a8:	ret
   183ac:	ldr	x1, [x23]
   183b0:	add	x1, x1, #0x1
   183b4:	str	x1, [x23]
   183b8:	add	x0, x22, #0x328
   183bc:	add	x0, x0, #0x1a0
   183c0:	bl	6950 <_PyObject_New@plt>
   183c4:	mov	x20, x0
   183c8:	cbz	x0, 18504 <PyFloat_FromString@plt+0x11a74>
   183cc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   183d0:	add	x1, x20, #0x48
   183d4:	ldr	x3, [sp, #80]
   183d8:	mov	x2, #0xffffffffffffffff    	// #-1
   183dc:	ldr	q0, [x0, #2128]
   183e0:	mov	w0, #0x30                  	// #48
   183e4:	str	x2, [x20, #16]
   183e8:	add	x4, sp, #0x44
   183ec:	strb	w0, [x20, #24]
   183f0:	add	x3, x3, #0x10
   183f4:	stp	xzr, xzr, [x20, #32]
   183f8:	add	x0, x20, #0x18
   183fc:	add	x2, x23, #0x18
   18400:	str	x1, [x20, #64]
   18404:	add	x1, x19, #0x18
   18408:	str	q0, [x20, #48]
   1840c:	bl	38978 <PyInit__decimal@@Base+0x1c738>
   18410:	ldr	x1, [x19]
   18414:	sub	x1, x1, #0x1
   18418:	str	x1, [x19]
   1841c:	cbz	x1, 184f8 <PyFloat_FromString@plt+0x11a68>
   18420:	ldr	x1, [x23]
   18424:	sub	x1, x1, #0x1
   18428:	str	x1, [x23]
   1842c:	cbz	x1, 184ec <PyFloat_FromString@plt+0x11a5c>
   18430:	ldr	w1, [sp, #68]
   18434:	ldr	x0, [sp, #80]
   18438:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1843c:	cbnz	w0, 18538 <PyFloat_FromString@plt+0x11aa8>
   18440:	mov	x0, x20
   18444:	ldp	x19, x20, [sp, #16]
   18448:	ldp	x21, x22, [sp, #32]
   1844c:	ldr	x23, [sp, #48]
   18450:	ldp	x29, x30, [sp], #96
   18454:	ret
   18458:	str	x23, [sp, #48]
   1845c:	ldr	x21, [sp, #80]
   18460:	b	18328 <PyFloat_FromString@plt+0x11898>
   18464:	mov	x1, x23
   18468:	mov	x2, x21
   1846c:	mov	x0, x20
   18470:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18474:	mov	x23, x0
   18478:	cbnz	x0, 183b8 <PyFloat_FromString@plt+0x11928>
   1847c:	b	18380 <PyFloat_FromString@plt+0x118f0>
   18480:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   18484:	add	x2, sp, #0x58
   18488:	mov	x1, #0x0                   	// #0
   1848c:	ldr	x0, [x0, #2056]
   18490:	bl	6740 <PyContextVar_Get@plt>
   18494:	tbnz	w0, #31, 185c8 <PyFloat_FromString@plt+0x11b38>
   18498:	ldr	x21, [sp, #88]
   1849c:	cbz	x21, 18584 <PyFloat_FromString@plt+0x11af4>
   184a0:	str	x21, [sp, #80]
   184a4:	ldr	x0, [x21]
   184a8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   184ac:	sub	x0, x0, #0x1
   184b0:	str	x0, [x21]
   184b4:	cbnz	x0, 182c4 <PyFloat_FromString@plt+0x11834>
   184b8:	mov	x0, x21
   184bc:	bl	65d0 <_Py_Dealloc@plt>
   184c0:	ldr	x21, [sp, #80]
   184c4:	b	182c4 <PyFloat_FromString@plt+0x11834>
   184c8:	mov	x1, x19
   184cc:	mov	x2, x21
   184d0:	mov	x0, x20
   184d4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   184d8:	mov	x19, x0
   184dc:	cbz	x0, 18598 <PyFloat_FromString@plt+0x11b08>
   184e0:	str	x23, [sp, #48]
   184e4:	ldr	x21, [sp, #80]
   184e8:	b	18334 <PyFloat_FromString@plt+0x118a4>
   184ec:	mov	x0, x23
   184f0:	bl	65d0 <_Py_Dealloc@plt>
   184f4:	b	18430 <PyFloat_FromString@plt+0x119a0>
   184f8:	mov	x0, x19
   184fc:	bl	65d0 <_Py_Dealloc@plt>
   18500:	b	18420 <PyFloat_FromString@plt+0x11990>
   18504:	ldr	x0, [x19]
   18508:	sub	x0, x0, #0x1
   1850c:	str	x0, [x19]
   18510:	cbz	x0, 18578 <PyFloat_FromString@plt+0x11ae8>
   18514:	ldr	x0, [x23]
   18518:	sub	x0, x0, #0x1
   1851c:	str	x0, [x23]
   18520:	cbnz	x0, 18390 <PyFloat_FromString@plt+0x11900>
   18524:	mov	x0, x23
   18528:	bl	65d0 <_Py_Dealloc@plt>
   1852c:	ldp	x21, x22, [sp, #32]
   18530:	ldr	x23, [sp, #48]
   18534:	b	18314 <PyFloat_FromString@plt+0x11884>
   18538:	ldr	x0, [x20]
   1853c:	sub	x0, x0, #0x1
   18540:	str	x0, [x20]
   18544:	cbnz	x0, 18390 <PyFloat_FromString@plt+0x11900>
   18548:	mov	x0, x20
   1854c:	mov	x20, #0x0                   	// #0
   18550:	bl	65d0 <_Py_Dealloc@plt>
   18554:	ldp	x21, x22, [sp, #32]
   18558:	ldr	x23, [sp, #48]
   1855c:	b	18314 <PyFloat_FromString@plt+0x11884>
   18560:	mov	x0, x19
   18564:	mov	x20, #0x0                   	// #0
   18568:	bl	65d0 <_Py_Dealloc@plt>
   1856c:	ldp	x21, x22, [sp, #32]
   18570:	ldr	x23, [sp, #48]
   18574:	b	18314 <PyFloat_FromString@plt+0x11884>
   18578:	mov	x0, x19
   1857c:	bl	65d0 <_Py_Dealloc@plt>
   18580:	b	18514 <PyFloat_FromString@plt+0x11a84>
   18584:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   18588:	str	x0, [sp, #80]
   1858c:	mov	x21, x0
   18590:	cbnz	x0, 184a4 <PyFloat_FromString@plt+0x11a14>
   18594:	nop
   18598:	mov	x20, #0x0                   	// #0
   1859c:	ldp	x21, x22, [sp, #32]
   185a0:	b	1839c <PyFloat_FromString@plt+0x1190c>
   185a4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   185a8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   185ac:	mov	x20, #0x0                   	// #0
   185b0:	add	x1, x1, #0xba8
   185b4:	ldr	x0, [x0, #3936]
   185b8:	ldr	x0, [x0]
   185bc:	bl	6650 <PyErr_SetString@plt>
   185c0:	ldp	x21, x22, [sp, #32]
   185c4:	b	18314 <PyFloat_FromString@plt+0x11884>
   185c8:	mov	x20, #0x0                   	// #0
   185cc:	ldp	x21, x22, [sp, #32]
   185d0:	b	18314 <PyFloat_FromString@plt+0x11884>
   185d4:	nop
   185d8:	stp	x29, x30, [sp, #-96]!
   185dc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   185e0:	add	x3, x3, #0x9b0
   185e4:	mov	x29, sp
   185e8:	stp	x19, x20, [sp, #16]
   185ec:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   185f0:	mov	x19, x0
   185f4:	ldr	x20, [x20, #4008]
   185f8:	mov	x0, x1
   185fc:	add	x3, x3, #0x5f0
   18600:	mov	x1, x2
   18604:	add	x5, sp, #0x50
   18608:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1860c:	add	x4, sp, #0x48
   18610:	add	x2, x2, #0xc88
   18614:	str	wzr, [sp, #68]
   18618:	str	x20, [sp, #80]
   1861c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18620:	cbz	w0, 18728 <PyFloat_FromString@plt+0x11c98>
   18624:	stp	x21, x22, [sp, #32]
   18628:	ldr	x21, [sp, #80]
   1862c:	cmp	x21, x20
   18630:	b.eq	18810 <PyFloat_FromString@plt+0x11d80>  // b.none
   18634:	ldr	x0, [x21, #8]
   18638:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1863c:	add	x1, x22, #0x328
   18640:	cmp	x0, x1
   18644:	b.eq	18654 <PyFloat_FromString@plt+0x11bc4>  // b.none
   18648:	bl	69c0 <PyType_IsSubtype@plt>
   1864c:	cbz	w0, 18934 <PyFloat_FromString@plt+0x11ea4>
   18650:	ldr	x21, [sp, #80]
   18654:	add	x20, x22, #0x328
   18658:	ldr	x0, [x19, #8]
   1865c:	add	x20, x20, #0x1a0
   18660:	cmp	x0, x20
   18664:	b.eq	186b4 <PyFloat_FromString@plt+0x11c24>  // b.none
   18668:	mov	x1, x20
   1866c:	bl	69c0 <PyType_IsSubtype@plt>
   18670:	cbnz	w0, 187e8 <PyFloat_FromString@plt+0x11d58>
   18674:	ldr	x2, [x19, #8]
   18678:	ldr	x0, [x2, #168]
   1867c:	tbnz	w0, #24, 18858 <PyFloat_FromString@plt+0x11dc8>
   18680:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18684:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   18688:	ldr	x2, [x2, #24]
   1868c:	add	x1, x1, #0xb70
   18690:	ldr	x0, [x0, #3936]
   18694:	mov	x20, #0x0                   	// #0
   18698:	ldr	x0, [x0]
   1869c:	bl	6a10 <PyErr_Format@plt>
   186a0:	ldp	x21, x22, [sp, #32]
   186a4:	mov	x0, x20
   186a8:	ldp	x19, x20, [sp, #16]
   186ac:	ldp	x29, x30, [sp], #96
   186b0:	ret
   186b4:	str	x23, [sp, #48]
   186b8:	ldr	x0, [x19]
   186bc:	add	x0, x0, #0x1
   186c0:	str	x0, [x19]
   186c4:	ldr	x23, [sp, #72]
   186c8:	add	x20, x22, #0x328
   186cc:	add	x20, x20, #0x1a0
   186d0:	ldr	x0, [x23, #8]
   186d4:	cmp	x0, x20
   186d8:	b.eq	1873c <PyFloat_FromString@plt+0x11cac>  // b.none
   186dc:	mov	x1, x20
   186e0:	bl	69c0 <PyType_IsSubtype@plt>
   186e4:	cbnz	w0, 1873c <PyFloat_FromString@plt+0x11cac>
   186e8:	ldr	x2, [x23, #8]
   186ec:	ldr	x0, [x2, #168]
   186f0:	tbnz	w0, #24, 187f4 <PyFloat_FromString@plt+0x11d64>
   186f4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   186f8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   186fc:	ldr	x2, [x2, #24]
   18700:	add	x1, x1, #0xb70
   18704:	ldr	x0, [x0, #3936]
   18708:	ldr	x0, [x0]
   1870c:	bl	6a10 <PyErr_Format@plt>
   18710:	ldr	x0, [x19]
   18714:	sub	x0, x0, #0x1
   18718:	str	x0, [x19]
   1871c:	cbz	x0, 188f0 <PyFloat_FromString@plt+0x11e60>
   18720:	ldp	x21, x22, [sp, #32]
   18724:	ldr	x23, [sp, #48]
   18728:	mov	x20, #0x0                   	// #0
   1872c:	mov	x0, x20
   18730:	ldp	x19, x20, [sp, #16]
   18734:	ldp	x29, x30, [sp], #96
   18738:	ret
   1873c:	ldr	x1, [x23]
   18740:	add	x1, x1, #0x1
   18744:	str	x1, [x23]
   18748:	add	x0, x22, #0x328
   1874c:	add	x0, x0, #0x1a0
   18750:	bl	6950 <_PyObject_New@plt>
   18754:	mov	x20, x0
   18758:	cbz	x0, 18894 <PyFloat_FromString@plt+0x11e04>
   1875c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   18760:	add	x1, x20, #0x48
   18764:	ldr	x3, [sp, #80]
   18768:	mov	x2, #0xffffffffffffffff    	// #-1
   1876c:	ldr	q0, [x0, #2128]
   18770:	mov	w0, #0x30                  	// #48
   18774:	str	x2, [x20, #16]
   18778:	add	x4, sp, #0x44
   1877c:	strb	w0, [x20, #24]
   18780:	add	x3, x3, #0x10
   18784:	stp	xzr, xzr, [x20, #32]
   18788:	add	x0, x20, #0x18
   1878c:	add	x2, x23, #0x18
   18790:	str	x1, [x20, #64]
   18794:	add	x1, x19, #0x18
   18798:	str	q0, [x20, #48]
   1879c:	bl	3afe0 <PyInit__decimal@@Base+0x1eda0>
   187a0:	ldr	x1, [x19]
   187a4:	sub	x1, x1, #0x1
   187a8:	str	x1, [x19]
   187ac:	cbz	x1, 18888 <PyFloat_FromString@plt+0x11df8>
   187b0:	ldr	x1, [x23]
   187b4:	sub	x1, x1, #0x1
   187b8:	str	x1, [x23]
   187bc:	cbz	x1, 1887c <PyFloat_FromString@plt+0x11dec>
   187c0:	ldr	w1, [sp, #68]
   187c4:	ldr	x0, [sp, #80]
   187c8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   187cc:	cbnz	w0, 188c8 <PyFloat_FromString@plt+0x11e38>
   187d0:	mov	x0, x20
   187d4:	ldp	x19, x20, [sp, #16]
   187d8:	ldp	x21, x22, [sp, #32]
   187dc:	ldr	x23, [sp, #48]
   187e0:	ldp	x29, x30, [sp], #96
   187e4:	ret
   187e8:	str	x23, [sp, #48]
   187ec:	ldr	x21, [sp, #80]
   187f0:	b	186b8 <PyFloat_FromString@plt+0x11c28>
   187f4:	mov	x1, x23
   187f8:	mov	x2, x21
   187fc:	mov	x0, x20
   18800:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18804:	mov	x23, x0
   18808:	cbnz	x0, 18748 <PyFloat_FromString@plt+0x11cb8>
   1880c:	b	18710 <PyFloat_FromString@plt+0x11c80>
   18810:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   18814:	add	x2, sp, #0x58
   18818:	mov	x1, #0x0                   	// #0
   1881c:	ldr	x0, [x0, #2056]
   18820:	bl	6740 <PyContextVar_Get@plt>
   18824:	tbnz	w0, #31, 18958 <PyFloat_FromString@plt+0x11ec8>
   18828:	ldr	x21, [sp, #88]
   1882c:	cbz	x21, 18914 <PyFloat_FromString@plt+0x11e84>
   18830:	str	x21, [sp, #80]
   18834:	ldr	x0, [x21]
   18838:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1883c:	sub	x0, x0, #0x1
   18840:	str	x0, [x21]
   18844:	cbnz	x0, 18654 <PyFloat_FromString@plt+0x11bc4>
   18848:	mov	x0, x21
   1884c:	bl	65d0 <_Py_Dealloc@plt>
   18850:	ldr	x21, [sp, #80]
   18854:	b	18654 <PyFloat_FromString@plt+0x11bc4>
   18858:	mov	x1, x19
   1885c:	mov	x2, x21
   18860:	mov	x0, x20
   18864:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18868:	mov	x19, x0
   1886c:	cbz	x0, 18928 <PyFloat_FromString@plt+0x11e98>
   18870:	str	x23, [sp, #48]
   18874:	ldr	x21, [sp, #80]
   18878:	b	186c4 <PyFloat_FromString@plt+0x11c34>
   1887c:	mov	x0, x23
   18880:	bl	65d0 <_Py_Dealloc@plt>
   18884:	b	187c0 <PyFloat_FromString@plt+0x11d30>
   18888:	mov	x0, x19
   1888c:	bl	65d0 <_Py_Dealloc@plt>
   18890:	b	187b0 <PyFloat_FromString@plt+0x11d20>
   18894:	ldr	x0, [x19]
   18898:	sub	x0, x0, #0x1
   1889c:	str	x0, [x19]
   188a0:	cbz	x0, 18908 <PyFloat_FromString@plt+0x11e78>
   188a4:	ldr	x0, [x23]
   188a8:	sub	x0, x0, #0x1
   188ac:	str	x0, [x23]
   188b0:	cbnz	x0, 18720 <PyFloat_FromString@plt+0x11c90>
   188b4:	mov	x0, x23
   188b8:	bl	65d0 <_Py_Dealloc@plt>
   188bc:	ldp	x21, x22, [sp, #32]
   188c0:	ldr	x23, [sp, #48]
   188c4:	b	186a4 <PyFloat_FromString@plt+0x11c14>
   188c8:	ldr	x0, [x20]
   188cc:	sub	x0, x0, #0x1
   188d0:	str	x0, [x20]
   188d4:	cbnz	x0, 18720 <PyFloat_FromString@plt+0x11c90>
   188d8:	mov	x0, x20
   188dc:	mov	x20, #0x0                   	// #0
   188e0:	bl	65d0 <_Py_Dealloc@plt>
   188e4:	ldp	x21, x22, [sp, #32]
   188e8:	ldr	x23, [sp, #48]
   188ec:	b	186a4 <PyFloat_FromString@plt+0x11c14>
   188f0:	mov	x0, x19
   188f4:	mov	x20, #0x0                   	// #0
   188f8:	bl	65d0 <_Py_Dealloc@plt>
   188fc:	ldp	x21, x22, [sp, #32]
   18900:	ldr	x23, [sp, #48]
   18904:	b	186a4 <PyFloat_FromString@plt+0x11c14>
   18908:	mov	x0, x19
   1890c:	bl	65d0 <_Py_Dealloc@plt>
   18910:	b	188a4 <PyFloat_FromString@plt+0x11e14>
   18914:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   18918:	str	x0, [sp, #80]
   1891c:	mov	x21, x0
   18920:	cbnz	x0, 18834 <PyFloat_FromString@plt+0x11da4>
   18924:	nop
   18928:	mov	x20, #0x0                   	// #0
   1892c:	ldp	x21, x22, [sp, #32]
   18930:	b	1872c <PyFloat_FromString@plt+0x11c9c>
   18934:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18938:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1893c:	mov	x20, #0x0                   	// #0
   18940:	add	x1, x1, #0xba8
   18944:	ldr	x0, [x0, #3936]
   18948:	ldr	x0, [x0]
   1894c:	bl	6650 <PyErr_SetString@plt>
   18950:	ldp	x21, x22, [sp, #32]
   18954:	b	186a4 <PyFloat_FromString@plt+0x11c14>
   18958:	mov	x20, #0x0                   	// #0
   1895c:	ldp	x21, x22, [sp, #32]
   18960:	b	186a4 <PyFloat_FromString@plt+0x11c14>
   18964:	nop
   18968:	stp	x29, x30, [sp, #-96]!
   1896c:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   18970:	add	x3, x3, #0x9b0
   18974:	mov	x29, sp
   18978:	stp	x19, x20, [sp, #16]
   1897c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   18980:	mov	x19, x0
   18984:	ldr	x20, [x20, #4008]
   18988:	mov	x0, x1
   1898c:	add	x3, x3, #0x610
   18990:	mov	x1, x2
   18994:	add	x5, sp, #0x50
   18998:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1899c:	add	x4, sp, #0x48
   189a0:	add	x2, x2, #0xc88
   189a4:	str	wzr, [sp, #68]
   189a8:	str	x20, [sp, #80]
   189ac:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   189b0:	cbz	w0, 18ab8 <PyFloat_FromString@plt+0x12028>
   189b4:	stp	x21, x22, [sp, #32]
   189b8:	ldr	x21, [sp, #80]
   189bc:	cmp	x21, x20
   189c0:	b.eq	18ba0 <PyFloat_FromString@plt+0x12110>  // b.none
   189c4:	ldr	x0, [x21, #8]
   189c8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   189cc:	add	x1, x22, #0x328
   189d0:	cmp	x0, x1
   189d4:	b.eq	189e4 <PyFloat_FromString@plt+0x11f54>  // b.none
   189d8:	bl	69c0 <PyType_IsSubtype@plt>
   189dc:	cbz	w0, 18cc4 <PyFloat_FromString@plt+0x12234>
   189e0:	ldr	x21, [sp, #80]
   189e4:	add	x20, x22, #0x328
   189e8:	ldr	x0, [x19, #8]
   189ec:	add	x20, x20, #0x1a0
   189f0:	cmp	x0, x20
   189f4:	b.eq	18a44 <PyFloat_FromString@plt+0x11fb4>  // b.none
   189f8:	mov	x1, x20
   189fc:	bl	69c0 <PyType_IsSubtype@plt>
   18a00:	cbnz	w0, 18b78 <PyFloat_FromString@plt+0x120e8>
   18a04:	ldr	x2, [x19, #8]
   18a08:	ldr	x0, [x2, #168]
   18a0c:	tbnz	w0, #24, 18be8 <PyFloat_FromString@plt+0x12158>
   18a10:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18a14:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   18a18:	ldr	x2, [x2, #24]
   18a1c:	add	x1, x1, #0xb70
   18a20:	ldr	x0, [x0, #3936]
   18a24:	mov	x20, #0x0                   	// #0
   18a28:	ldr	x0, [x0]
   18a2c:	bl	6a10 <PyErr_Format@plt>
   18a30:	ldp	x21, x22, [sp, #32]
   18a34:	mov	x0, x20
   18a38:	ldp	x19, x20, [sp, #16]
   18a3c:	ldp	x29, x30, [sp], #96
   18a40:	ret
   18a44:	str	x23, [sp, #48]
   18a48:	ldr	x0, [x19]
   18a4c:	add	x0, x0, #0x1
   18a50:	str	x0, [x19]
   18a54:	ldr	x23, [sp, #72]
   18a58:	add	x20, x22, #0x328
   18a5c:	add	x20, x20, #0x1a0
   18a60:	ldr	x0, [x23, #8]
   18a64:	cmp	x0, x20
   18a68:	b.eq	18acc <PyFloat_FromString@plt+0x1203c>  // b.none
   18a6c:	mov	x1, x20
   18a70:	bl	69c0 <PyType_IsSubtype@plt>
   18a74:	cbnz	w0, 18acc <PyFloat_FromString@plt+0x1203c>
   18a78:	ldr	x2, [x23, #8]
   18a7c:	ldr	x0, [x2, #168]
   18a80:	tbnz	w0, #24, 18b84 <PyFloat_FromString@plt+0x120f4>
   18a84:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18a88:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   18a8c:	ldr	x2, [x2, #24]
   18a90:	add	x1, x1, #0xb70
   18a94:	ldr	x0, [x0, #3936]
   18a98:	ldr	x0, [x0]
   18a9c:	bl	6a10 <PyErr_Format@plt>
   18aa0:	ldr	x0, [x19]
   18aa4:	sub	x0, x0, #0x1
   18aa8:	str	x0, [x19]
   18aac:	cbz	x0, 18c80 <PyFloat_FromString@plt+0x121f0>
   18ab0:	ldp	x21, x22, [sp, #32]
   18ab4:	ldr	x23, [sp, #48]
   18ab8:	mov	x20, #0x0                   	// #0
   18abc:	mov	x0, x20
   18ac0:	ldp	x19, x20, [sp, #16]
   18ac4:	ldp	x29, x30, [sp], #96
   18ac8:	ret
   18acc:	ldr	x1, [x23]
   18ad0:	add	x1, x1, #0x1
   18ad4:	str	x1, [x23]
   18ad8:	add	x0, x22, #0x328
   18adc:	add	x0, x0, #0x1a0
   18ae0:	bl	6950 <_PyObject_New@plt>
   18ae4:	mov	x20, x0
   18ae8:	cbz	x0, 18c24 <PyFloat_FromString@plt+0x12194>
   18aec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   18af0:	add	x1, x20, #0x48
   18af4:	ldr	x3, [sp, #80]
   18af8:	mov	x2, #0xffffffffffffffff    	// #-1
   18afc:	ldr	q0, [x0, #2128]
   18b00:	mov	w0, #0x30                  	// #48
   18b04:	str	x2, [x20, #16]
   18b08:	add	x4, sp, #0x44
   18b0c:	strb	w0, [x20, #24]
   18b10:	add	x3, x3, #0x10
   18b14:	stp	xzr, xzr, [x20, #32]
   18b18:	add	x0, x20, #0x18
   18b1c:	add	x2, x23, #0x18
   18b20:	str	x1, [x20, #64]
   18b24:	add	x1, x19, #0x18
   18b28:	str	q0, [x20, #48]
   18b2c:	bl	32c88 <PyInit__decimal@@Base+0x16a48>
   18b30:	ldr	x1, [x19]
   18b34:	sub	x1, x1, #0x1
   18b38:	str	x1, [x19]
   18b3c:	cbz	x1, 18c18 <PyFloat_FromString@plt+0x12188>
   18b40:	ldr	x1, [x23]
   18b44:	sub	x1, x1, #0x1
   18b48:	str	x1, [x23]
   18b4c:	cbz	x1, 18c0c <PyFloat_FromString@plt+0x1217c>
   18b50:	ldr	w1, [sp, #68]
   18b54:	ldr	x0, [sp, #80]
   18b58:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   18b5c:	cbnz	w0, 18c58 <PyFloat_FromString@plt+0x121c8>
   18b60:	mov	x0, x20
   18b64:	ldp	x19, x20, [sp, #16]
   18b68:	ldp	x21, x22, [sp, #32]
   18b6c:	ldr	x23, [sp, #48]
   18b70:	ldp	x29, x30, [sp], #96
   18b74:	ret
   18b78:	str	x23, [sp, #48]
   18b7c:	ldr	x21, [sp, #80]
   18b80:	b	18a48 <PyFloat_FromString@plt+0x11fb8>
   18b84:	mov	x1, x23
   18b88:	mov	x2, x21
   18b8c:	mov	x0, x20
   18b90:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18b94:	mov	x23, x0
   18b98:	cbnz	x0, 18ad8 <PyFloat_FromString@plt+0x12048>
   18b9c:	b	18aa0 <PyFloat_FromString@plt+0x12010>
   18ba0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   18ba4:	add	x2, sp, #0x58
   18ba8:	mov	x1, #0x0                   	// #0
   18bac:	ldr	x0, [x0, #2056]
   18bb0:	bl	6740 <PyContextVar_Get@plt>
   18bb4:	tbnz	w0, #31, 18ce8 <PyFloat_FromString@plt+0x12258>
   18bb8:	ldr	x21, [sp, #88]
   18bbc:	cbz	x21, 18ca4 <PyFloat_FromString@plt+0x12214>
   18bc0:	str	x21, [sp, #80]
   18bc4:	ldr	x0, [x21]
   18bc8:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   18bcc:	sub	x0, x0, #0x1
   18bd0:	str	x0, [x21]
   18bd4:	cbnz	x0, 189e4 <PyFloat_FromString@plt+0x11f54>
   18bd8:	mov	x0, x21
   18bdc:	bl	65d0 <_Py_Dealloc@plt>
   18be0:	ldr	x21, [sp, #80]
   18be4:	b	189e4 <PyFloat_FromString@plt+0x11f54>
   18be8:	mov	x1, x19
   18bec:	mov	x2, x21
   18bf0:	mov	x0, x20
   18bf4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18bf8:	mov	x19, x0
   18bfc:	cbz	x0, 18cb8 <PyFloat_FromString@plt+0x12228>
   18c00:	str	x23, [sp, #48]
   18c04:	ldr	x21, [sp, #80]
   18c08:	b	18a54 <PyFloat_FromString@plt+0x11fc4>
   18c0c:	mov	x0, x23
   18c10:	bl	65d0 <_Py_Dealloc@plt>
   18c14:	b	18b50 <PyFloat_FromString@plt+0x120c0>
   18c18:	mov	x0, x19
   18c1c:	bl	65d0 <_Py_Dealloc@plt>
   18c20:	b	18b40 <PyFloat_FromString@plt+0x120b0>
   18c24:	ldr	x0, [x19]
   18c28:	sub	x0, x0, #0x1
   18c2c:	str	x0, [x19]
   18c30:	cbz	x0, 18c98 <PyFloat_FromString@plt+0x12208>
   18c34:	ldr	x0, [x23]
   18c38:	sub	x0, x0, #0x1
   18c3c:	str	x0, [x23]
   18c40:	cbnz	x0, 18ab0 <PyFloat_FromString@plt+0x12020>
   18c44:	mov	x0, x23
   18c48:	bl	65d0 <_Py_Dealloc@plt>
   18c4c:	ldp	x21, x22, [sp, #32]
   18c50:	ldr	x23, [sp, #48]
   18c54:	b	18a34 <PyFloat_FromString@plt+0x11fa4>
   18c58:	ldr	x0, [x20]
   18c5c:	sub	x0, x0, #0x1
   18c60:	str	x0, [x20]
   18c64:	cbnz	x0, 18ab0 <PyFloat_FromString@plt+0x12020>
   18c68:	mov	x0, x20
   18c6c:	mov	x20, #0x0                   	// #0
   18c70:	bl	65d0 <_Py_Dealloc@plt>
   18c74:	ldp	x21, x22, [sp, #32]
   18c78:	ldr	x23, [sp, #48]
   18c7c:	b	18a34 <PyFloat_FromString@plt+0x11fa4>
   18c80:	mov	x0, x19
   18c84:	mov	x20, #0x0                   	// #0
   18c88:	bl	65d0 <_Py_Dealloc@plt>
   18c8c:	ldp	x21, x22, [sp, #32]
   18c90:	ldr	x23, [sp, #48]
   18c94:	b	18a34 <PyFloat_FromString@plt+0x11fa4>
   18c98:	mov	x0, x19
   18c9c:	bl	65d0 <_Py_Dealloc@plt>
   18ca0:	b	18c34 <PyFloat_FromString@plt+0x121a4>
   18ca4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   18ca8:	str	x0, [sp, #80]
   18cac:	mov	x21, x0
   18cb0:	cbnz	x0, 18bc4 <PyFloat_FromString@plt+0x12134>
   18cb4:	nop
   18cb8:	mov	x20, #0x0                   	// #0
   18cbc:	ldp	x21, x22, [sp, #32]
   18cc0:	b	18abc <PyFloat_FromString@plt+0x1202c>
   18cc4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18cc8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   18ccc:	mov	x20, #0x0                   	// #0
   18cd0:	add	x1, x1, #0xba8
   18cd4:	ldr	x0, [x0, #3936]
   18cd8:	ldr	x0, [x0]
   18cdc:	bl	6650 <PyErr_SetString@plt>
   18ce0:	ldp	x21, x22, [sp, #32]
   18ce4:	b	18a34 <PyFloat_FromString@plt+0x11fa4>
   18ce8:	mov	x20, #0x0                   	// #0
   18cec:	ldp	x21, x22, [sp, #32]
   18cf0:	b	18a34 <PyFloat_FromString@plt+0x11fa4>
   18cf4:	nop
   18cf8:	stp	x29, x30, [sp, #-96]!
   18cfc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   18d00:	add	x3, x3, #0x9b0
   18d04:	mov	x29, sp
   18d08:	stp	x19, x20, [sp, #16]
   18d0c:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   18d10:	mov	x19, x0
   18d14:	ldr	x20, [x20, #4008]
   18d18:	mov	x0, x1
   18d1c:	add	x3, x3, #0x630
   18d20:	mov	x1, x2
   18d24:	add	x5, sp, #0x50
   18d28:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   18d2c:	add	x4, sp, #0x48
   18d30:	add	x2, x2, #0xc88
   18d34:	str	wzr, [sp, #68]
   18d38:	str	x20, [sp, #80]
   18d3c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18d40:	cbz	w0, 18e48 <PyFloat_FromString@plt+0x123b8>
   18d44:	stp	x21, x22, [sp, #32]
   18d48:	ldr	x21, [sp, #80]
   18d4c:	cmp	x21, x20
   18d50:	b.eq	18f30 <PyFloat_FromString@plt+0x124a0>  // b.none
   18d54:	ldr	x0, [x21, #8]
   18d58:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   18d5c:	add	x1, x22, #0x328
   18d60:	cmp	x0, x1
   18d64:	b.eq	18d74 <PyFloat_FromString@plt+0x122e4>  // b.none
   18d68:	bl	69c0 <PyType_IsSubtype@plt>
   18d6c:	cbz	w0, 19054 <PyFloat_FromString@plt+0x125c4>
   18d70:	ldr	x21, [sp, #80]
   18d74:	add	x20, x22, #0x328
   18d78:	ldr	x0, [x19, #8]
   18d7c:	add	x20, x20, #0x1a0
   18d80:	cmp	x0, x20
   18d84:	b.eq	18dd4 <PyFloat_FromString@plt+0x12344>  // b.none
   18d88:	mov	x1, x20
   18d8c:	bl	69c0 <PyType_IsSubtype@plt>
   18d90:	cbnz	w0, 18f08 <PyFloat_FromString@plt+0x12478>
   18d94:	ldr	x2, [x19, #8]
   18d98:	ldr	x0, [x2, #168]
   18d9c:	tbnz	w0, #24, 18f78 <PyFloat_FromString@plt+0x124e8>
   18da0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18da4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   18da8:	ldr	x2, [x2, #24]
   18dac:	add	x1, x1, #0xb70
   18db0:	ldr	x0, [x0, #3936]
   18db4:	mov	x20, #0x0                   	// #0
   18db8:	ldr	x0, [x0]
   18dbc:	bl	6a10 <PyErr_Format@plt>
   18dc0:	ldp	x21, x22, [sp, #32]
   18dc4:	mov	x0, x20
   18dc8:	ldp	x19, x20, [sp, #16]
   18dcc:	ldp	x29, x30, [sp], #96
   18dd0:	ret
   18dd4:	str	x23, [sp, #48]
   18dd8:	ldr	x0, [x19]
   18ddc:	add	x0, x0, #0x1
   18de0:	str	x0, [x19]
   18de4:	ldr	x23, [sp, #72]
   18de8:	add	x20, x22, #0x328
   18dec:	add	x20, x20, #0x1a0
   18df0:	ldr	x0, [x23, #8]
   18df4:	cmp	x0, x20
   18df8:	b.eq	18e5c <PyFloat_FromString@plt+0x123cc>  // b.none
   18dfc:	mov	x1, x20
   18e00:	bl	69c0 <PyType_IsSubtype@plt>
   18e04:	cbnz	w0, 18e5c <PyFloat_FromString@plt+0x123cc>
   18e08:	ldr	x2, [x23, #8]
   18e0c:	ldr	x0, [x2, #168]
   18e10:	tbnz	w0, #24, 18f14 <PyFloat_FromString@plt+0x12484>
   18e14:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   18e18:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   18e1c:	ldr	x2, [x2, #24]
   18e20:	add	x1, x1, #0xb70
   18e24:	ldr	x0, [x0, #3936]
   18e28:	ldr	x0, [x0]
   18e2c:	bl	6a10 <PyErr_Format@plt>
   18e30:	ldr	x0, [x19]
   18e34:	sub	x0, x0, #0x1
   18e38:	str	x0, [x19]
   18e3c:	cbz	x0, 19010 <PyFloat_FromString@plt+0x12580>
   18e40:	ldp	x21, x22, [sp, #32]
   18e44:	ldr	x23, [sp, #48]
   18e48:	mov	x20, #0x0                   	// #0
   18e4c:	mov	x0, x20
   18e50:	ldp	x19, x20, [sp, #16]
   18e54:	ldp	x29, x30, [sp], #96
   18e58:	ret
   18e5c:	ldr	x1, [x23]
   18e60:	add	x1, x1, #0x1
   18e64:	str	x1, [x23]
   18e68:	add	x0, x22, #0x328
   18e6c:	add	x0, x0, #0x1a0
   18e70:	bl	6950 <_PyObject_New@plt>
   18e74:	mov	x20, x0
   18e78:	cbz	x0, 18fb4 <PyFloat_FromString@plt+0x12524>
   18e7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   18e80:	add	x1, x20, #0x48
   18e84:	ldr	x3, [sp, #80]
   18e88:	mov	x2, #0xffffffffffffffff    	// #-1
   18e8c:	ldr	q0, [x0, #2128]
   18e90:	mov	w0, #0x30                  	// #48
   18e94:	str	x2, [x20, #16]
   18e98:	add	x4, sp, #0x44
   18e9c:	strb	w0, [x20, #24]
   18ea0:	add	x3, x3, #0x10
   18ea4:	stp	xzr, xzr, [x20, #32]
   18ea8:	add	x0, x20, #0x18
   18eac:	add	x2, x23, #0x18
   18eb0:	str	x1, [x20, #64]
   18eb4:	add	x1, x19, #0x18
   18eb8:	str	q0, [x20, #48]
   18ebc:	bl	31990 <PyInit__decimal@@Base+0x15750>
   18ec0:	ldr	x1, [x19]
   18ec4:	sub	x1, x1, #0x1
   18ec8:	str	x1, [x19]
   18ecc:	cbz	x1, 18fa8 <PyFloat_FromString@plt+0x12518>
   18ed0:	ldr	x1, [x23]
   18ed4:	sub	x1, x1, #0x1
   18ed8:	str	x1, [x23]
   18edc:	cbz	x1, 18f9c <PyFloat_FromString@plt+0x1250c>
   18ee0:	ldr	w1, [sp, #68]
   18ee4:	ldr	x0, [sp, #80]
   18ee8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   18eec:	cbnz	w0, 18fe8 <PyFloat_FromString@plt+0x12558>
   18ef0:	mov	x0, x20
   18ef4:	ldp	x19, x20, [sp, #16]
   18ef8:	ldp	x21, x22, [sp, #32]
   18efc:	ldr	x23, [sp, #48]
   18f00:	ldp	x29, x30, [sp], #96
   18f04:	ret
   18f08:	str	x23, [sp, #48]
   18f0c:	ldr	x21, [sp, #80]
   18f10:	b	18dd8 <PyFloat_FromString@plt+0x12348>
   18f14:	mov	x1, x23
   18f18:	mov	x2, x21
   18f1c:	mov	x0, x20
   18f20:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18f24:	mov	x23, x0
   18f28:	cbnz	x0, 18e68 <PyFloat_FromString@plt+0x123d8>
   18f2c:	b	18e30 <PyFloat_FromString@plt+0x123a0>
   18f30:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   18f34:	add	x2, sp, #0x58
   18f38:	mov	x1, #0x0                   	// #0
   18f3c:	ldr	x0, [x0, #2056]
   18f40:	bl	6740 <PyContextVar_Get@plt>
   18f44:	tbnz	w0, #31, 19078 <PyFloat_FromString@plt+0x125e8>
   18f48:	ldr	x21, [sp, #88]
   18f4c:	cbz	x21, 19034 <PyFloat_FromString@plt+0x125a4>
   18f50:	str	x21, [sp, #80]
   18f54:	ldr	x0, [x21]
   18f58:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   18f5c:	sub	x0, x0, #0x1
   18f60:	str	x0, [x21]
   18f64:	cbnz	x0, 18d74 <PyFloat_FromString@plt+0x122e4>
   18f68:	mov	x0, x21
   18f6c:	bl	65d0 <_Py_Dealloc@plt>
   18f70:	ldr	x21, [sp, #80]
   18f74:	b	18d74 <PyFloat_FromString@plt+0x122e4>
   18f78:	mov	x1, x19
   18f7c:	mov	x2, x21
   18f80:	mov	x0, x20
   18f84:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   18f88:	mov	x19, x0
   18f8c:	cbz	x0, 19048 <PyFloat_FromString@plt+0x125b8>
   18f90:	str	x23, [sp, #48]
   18f94:	ldr	x21, [sp, #80]
   18f98:	b	18de4 <PyFloat_FromString@plt+0x12354>
   18f9c:	mov	x0, x23
   18fa0:	bl	65d0 <_Py_Dealloc@plt>
   18fa4:	b	18ee0 <PyFloat_FromString@plt+0x12450>
   18fa8:	mov	x0, x19
   18fac:	bl	65d0 <_Py_Dealloc@plt>
   18fb0:	b	18ed0 <PyFloat_FromString@plt+0x12440>
   18fb4:	ldr	x0, [x19]
   18fb8:	sub	x0, x0, #0x1
   18fbc:	str	x0, [x19]
   18fc0:	cbz	x0, 19028 <PyFloat_FromString@plt+0x12598>
   18fc4:	ldr	x0, [x23]
   18fc8:	sub	x0, x0, #0x1
   18fcc:	str	x0, [x23]
   18fd0:	cbnz	x0, 18e40 <PyFloat_FromString@plt+0x123b0>
   18fd4:	mov	x0, x23
   18fd8:	bl	65d0 <_Py_Dealloc@plt>
   18fdc:	ldp	x21, x22, [sp, #32]
   18fe0:	ldr	x23, [sp, #48]
   18fe4:	b	18dc4 <PyFloat_FromString@plt+0x12334>
   18fe8:	ldr	x0, [x20]
   18fec:	sub	x0, x0, #0x1
   18ff0:	str	x0, [x20]
   18ff4:	cbnz	x0, 18e40 <PyFloat_FromString@plt+0x123b0>
   18ff8:	mov	x0, x20
   18ffc:	mov	x20, #0x0                   	// #0
   19000:	bl	65d0 <_Py_Dealloc@plt>
   19004:	ldp	x21, x22, [sp, #32]
   19008:	ldr	x23, [sp, #48]
   1900c:	b	18dc4 <PyFloat_FromString@plt+0x12334>
   19010:	mov	x0, x19
   19014:	mov	x20, #0x0                   	// #0
   19018:	bl	65d0 <_Py_Dealloc@plt>
   1901c:	ldp	x21, x22, [sp, #32]
   19020:	ldr	x23, [sp, #48]
   19024:	b	18dc4 <PyFloat_FromString@plt+0x12334>
   19028:	mov	x0, x19
   1902c:	bl	65d0 <_Py_Dealloc@plt>
   19030:	b	18fc4 <PyFloat_FromString@plt+0x12534>
   19034:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   19038:	str	x0, [sp, #80]
   1903c:	mov	x21, x0
   19040:	cbnz	x0, 18f54 <PyFloat_FromString@plt+0x124c4>
   19044:	nop
   19048:	mov	x20, #0x0                   	// #0
   1904c:	ldp	x21, x22, [sp, #32]
   19050:	b	18e4c <PyFloat_FromString@plt+0x123bc>
   19054:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19058:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1905c:	mov	x20, #0x0                   	// #0
   19060:	add	x1, x1, #0xba8
   19064:	ldr	x0, [x0, #3936]
   19068:	ldr	x0, [x0]
   1906c:	bl	6650 <PyErr_SetString@plt>
   19070:	ldp	x21, x22, [sp, #32]
   19074:	b	18dc4 <PyFloat_FromString@plt+0x12334>
   19078:	mov	x20, #0x0                   	// #0
   1907c:	ldp	x21, x22, [sp, #32]
   19080:	b	18dc4 <PyFloat_FromString@plt+0x12334>
   19084:	nop
   19088:	stp	x29, x30, [sp, #-80]!
   1908c:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   19090:	mov	x29, sp
   19094:	stp	x19, x20, [sp, #16]
   19098:	mov	x19, x0
   1909c:	ldr	x0, [x2, #2056]
   190a0:	add	x2, sp, #0x48
   190a4:	stp	x21, x22, [sp, #32]
   190a8:	mov	x21, x1
   190ac:	mov	x22, #0x0                   	// #0
   190b0:	mov	x1, #0x0                   	// #0
   190b4:	str	wzr, [sp, #68]
   190b8:	bl	6740 <PyContextVar_Get@plt>
   190bc:	tbnz	w0, #31, 19128 <PyFloat_FromString@plt+0x12698>
   190c0:	ldr	x20, [sp, #72]
   190c4:	str	x23, [sp, #48]
   190c8:	cbz	x20, 191b8 <PyFloat_FromString@plt+0x12728>
   190cc:	ldr	x0, [x20]
   190d0:	sub	x0, x0, #0x1
   190d4:	str	x0, [x20]
   190d8:	cbz	x0, 191ac <PyFloat_FromString@plt+0x1271c>
   190dc:	ldr	x0, [x19, #8]
   190e0:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   190e4:	add	x22, x23, #0x328
   190e8:	add	x22, x22, #0x1a0
   190ec:	cmp	x0, x22
   190f0:	b.eq	1913c <PyFloat_FromString@plt+0x126ac>  // b.none
   190f4:	mov	x1, x22
   190f8:	bl	69c0 <PyType_IsSubtype@plt>
   190fc:	cbnz	w0, 1913c <PyFloat_FromString@plt+0x126ac>
   19100:	ldr	x0, [x19, #8]
   19104:	ldr	x0, [x0, #168]
   19108:	tbnz	w0, #24, 192a8 <PyFloat_FromString@plt+0x12818>
   1910c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19110:	ldr	x23, [sp, #48]
   19114:	ldr	x0, [x0, #3912]
   19118:	mov	x22, x0
   1911c:	ldr	x1, [x0]
   19120:	add	x1, x1, #0x1
   19124:	str	x1, [x0]
   19128:	mov	x0, x22
   1912c:	ldp	x19, x20, [sp, #16]
   19130:	ldp	x21, x22, [sp, #32]
   19134:	ldp	x29, x30, [sp], #80
   19138:	ret
   1913c:	ldr	x0, [x19]
   19140:	add	x0, x0, #0x1
   19144:	str	x0, [x19]
   19148:	ldr	x0, [x21, #8]
   1914c:	add	x22, x23, #0x328
   19150:	add	x22, x22, #0x1a0
   19154:	cmp	x0, x22
   19158:	b.eq	191e0 <PyFloat_FromString@plt+0x12750>  // b.none
   1915c:	mov	x1, x22
   19160:	bl	69c0 <PyType_IsSubtype@plt>
   19164:	cbnz	w0, 191e0 <PyFloat_FromString@plt+0x12750>
   19168:	ldr	x0, [x21, #8]
   1916c:	ldr	x0, [x0, #168]
   19170:	tbnz	w0, #24, 19288 <PyFloat_FromString@plt+0x127f8>
   19174:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19178:	ldr	x0, [x0, #3912]
   1917c:	mov	x22, x0
   19180:	ldr	x1, [x0]
   19184:	add	x1, x1, #0x1
   19188:	str	x1, [x0]
   1918c:	ldr	x0, [x19]
   19190:	sub	x0, x0, #0x1
   19194:	str	x0, [x19]
   19198:	cbnz	x0, 19270 <PyFloat_FromString@plt+0x127e0>
   1919c:	mov	x0, x19
   191a0:	bl	65d0 <_Py_Dealloc@plt>
   191a4:	ldr	x23, [sp, #48]
   191a8:	b	19128 <PyFloat_FromString@plt+0x12698>
   191ac:	mov	x0, x20
   191b0:	bl	65d0 <_Py_Dealloc@plt>
   191b4:	b	190dc <PyFloat_FromString@plt+0x1264c>
   191b8:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   191bc:	mov	x20, x0
   191c0:	cbnz	x0, 190cc <PyFloat_FromString@plt+0x1263c>
   191c4:	mov	x22, #0x0                   	// #0
   191c8:	mov	x0, x22
   191cc:	ldp	x19, x20, [sp, #16]
   191d0:	ldp	x21, x22, [sp, #32]
   191d4:	ldr	x23, [sp, #48]
   191d8:	ldp	x29, x30, [sp], #80
   191dc:	ret
   191e0:	ldr	x0, [x21]
   191e4:	add	x0, x0, #0x1
   191e8:	str	x0, [x21]
   191ec:	add	x0, x23, #0x328
   191f0:	add	x0, x0, #0x1a0
   191f4:	bl	6950 <_PyObject_New@plt>
   191f8:	mov	x22, x0
   191fc:	cbz	x0, 192dc <PyFloat_FromString@plt+0x1284c>
   19200:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   19204:	mov	x2, #0xffffffffffffffff    	// #-1
   19208:	mov	w1, #0x30                  	// #48
   1920c:	str	x2, [x22, #16]
   19210:	ldr	q0, [x0, #2128]
   19214:	add	x0, x22, #0x48
   19218:	strb	w1, [x22, #24]
   1921c:	add	x4, sp, #0x44
   19220:	stp	xzr, xzr, [x22, #32]
   19224:	add	x3, x20, #0x10
   19228:	add	x1, x19, #0x18
   1922c:	str	x0, [x22, #64]
   19230:	add	x2, x21, #0x18
   19234:	add	x0, x22, #0x18
   19238:	str	q0, [x22, #48]
   1923c:	bl	33448 <PyInit__decimal@@Base+0x17208>
   19240:	ldr	x0, [x19]
   19244:	sub	x0, x0, #0x1
   19248:	str	x0, [x19]
   1924c:	cbz	x0, 192d0 <PyFloat_FromString@plt+0x12840>
   19250:	ldr	x0, [x21]
   19254:	sub	x0, x0, #0x1
   19258:	str	x0, [x21]
   1925c:	cbz	x0, 192c4 <PyFloat_FromString@plt+0x12834>
   19260:	ldr	w1, [sp, #68]
   19264:	mov	x0, x20
   19268:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1926c:	cbnz	w0, 1930c <PyFloat_FromString@plt+0x1287c>
   19270:	mov	x0, x22
   19274:	ldp	x19, x20, [sp, #16]
   19278:	ldp	x21, x22, [sp, #32]
   1927c:	ldr	x23, [sp, #48]
   19280:	ldp	x29, x30, [sp], #80
   19284:	ret
   19288:	mov	x1, x21
   1928c:	mov	x0, x22
   19290:	mov	x2, x20
   19294:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19298:	mov	x21, x0
   1929c:	cbnz	x0, 191ec <PyFloat_FromString@plt+0x1275c>
   192a0:	mov	x22, #0x0                   	// #0
   192a4:	b	1918c <PyFloat_FromString@plt+0x126fc>
   192a8:	mov	x1, x19
   192ac:	mov	x0, x22
   192b0:	mov	x2, x20
   192b4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   192b8:	mov	x19, x0
   192bc:	cbnz	x0, 19148 <PyFloat_FromString@plt+0x126b8>
   192c0:	b	191c4 <PyFloat_FromString@plt+0x12734>
   192c4:	mov	x0, x21
   192c8:	bl	65d0 <_Py_Dealloc@plt>
   192cc:	b	19260 <PyFloat_FromString@plt+0x127d0>
   192d0:	mov	x0, x19
   192d4:	bl	65d0 <_Py_Dealloc@plt>
   192d8:	b	19250 <PyFloat_FromString@plt+0x127c0>
   192dc:	ldr	x0, [x19]
   192e0:	sub	x0, x0, #0x1
   192e4:	str	x0, [x19]
   192e8:	cbz	x0, 19330 <PyFloat_FromString@plt+0x128a0>
   192ec:	ldr	x0, [x21]
   192f0:	sub	x0, x0, #0x1
   192f4:	str	x0, [x21]
   192f8:	cbnz	x0, 191c4 <PyFloat_FromString@plt+0x12734>
   192fc:	mov	x0, x21
   19300:	bl	65d0 <_Py_Dealloc@plt>
   19304:	ldr	x23, [sp, #48]
   19308:	b	19128 <PyFloat_FromString@plt+0x12698>
   1930c:	ldr	x0, [x22]
   19310:	sub	x0, x0, #0x1
   19314:	str	x0, [x22]
   19318:	cbnz	x0, 191c4 <PyFloat_FromString@plt+0x12734>
   1931c:	mov	x0, x22
   19320:	mov	x22, #0x0                   	// #0
   19324:	bl	65d0 <_Py_Dealloc@plt>
   19328:	ldr	x23, [sp, #48]
   1932c:	b	19128 <PyFloat_FromString@plt+0x12698>
   19330:	mov	x0, x19
   19334:	bl	65d0 <_Py_Dealloc@plt>
   19338:	b	192ec <PyFloat_FromString@plt+0x1285c>
   1933c:	nop
   19340:	stp	x29, x30, [sp, #-80]!
   19344:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   19348:	mov	x29, sp
   1934c:	stp	x19, x20, [sp, #16]
   19350:	mov	x19, x0
   19354:	ldr	x0, [x2, #2056]
   19358:	add	x2, sp, #0x48
   1935c:	stp	x21, x22, [sp, #32]
   19360:	mov	x21, x1
   19364:	mov	x22, #0x0                   	// #0
   19368:	mov	x1, #0x0                   	// #0
   1936c:	str	wzr, [sp, #68]
   19370:	bl	6740 <PyContextVar_Get@plt>
   19374:	tbnz	w0, #31, 193e0 <PyFloat_FromString@plt+0x12950>
   19378:	ldr	x20, [sp, #72]
   1937c:	str	x23, [sp, #48]
   19380:	cbz	x20, 19470 <PyFloat_FromString@plt+0x129e0>
   19384:	ldr	x0, [x20]
   19388:	sub	x0, x0, #0x1
   1938c:	str	x0, [x20]
   19390:	cbz	x0, 19464 <PyFloat_FromString@plt+0x129d4>
   19394:	ldr	x0, [x19, #8]
   19398:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1939c:	add	x22, x23, #0x328
   193a0:	add	x22, x22, #0x1a0
   193a4:	cmp	x0, x22
   193a8:	b.eq	193f4 <PyFloat_FromString@plt+0x12964>  // b.none
   193ac:	mov	x1, x22
   193b0:	bl	69c0 <PyType_IsSubtype@plt>
   193b4:	cbnz	w0, 193f4 <PyFloat_FromString@plt+0x12964>
   193b8:	ldr	x0, [x19, #8]
   193bc:	ldr	x0, [x0, #168]
   193c0:	tbnz	w0, #24, 19560 <PyFloat_FromString@plt+0x12ad0>
   193c4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   193c8:	ldr	x23, [sp, #48]
   193cc:	ldr	x0, [x0, #3912]
   193d0:	mov	x22, x0
   193d4:	ldr	x1, [x0]
   193d8:	add	x1, x1, #0x1
   193dc:	str	x1, [x0]
   193e0:	mov	x0, x22
   193e4:	ldp	x19, x20, [sp, #16]
   193e8:	ldp	x21, x22, [sp, #32]
   193ec:	ldp	x29, x30, [sp], #80
   193f0:	ret
   193f4:	ldr	x0, [x19]
   193f8:	add	x0, x0, #0x1
   193fc:	str	x0, [x19]
   19400:	ldr	x0, [x21, #8]
   19404:	add	x22, x23, #0x328
   19408:	add	x22, x22, #0x1a0
   1940c:	cmp	x0, x22
   19410:	b.eq	19498 <PyFloat_FromString@plt+0x12a08>  // b.none
   19414:	mov	x1, x22
   19418:	bl	69c0 <PyType_IsSubtype@plt>
   1941c:	cbnz	w0, 19498 <PyFloat_FromString@plt+0x12a08>
   19420:	ldr	x0, [x21, #8]
   19424:	ldr	x0, [x0, #168]
   19428:	tbnz	w0, #24, 19540 <PyFloat_FromString@plt+0x12ab0>
   1942c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19430:	ldr	x0, [x0, #3912]
   19434:	mov	x22, x0
   19438:	ldr	x1, [x0]
   1943c:	add	x1, x1, #0x1
   19440:	str	x1, [x0]
   19444:	ldr	x0, [x19]
   19448:	sub	x0, x0, #0x1
   1944c:	str	x0, [x19]
   19450:	cbnz	x0, 19528 <PyFloat_FromString@plt+0x12a98>
   19454:	mov	x0, x19
   19458:	bl	65d0 <_Py_Dealloc@plt>
   1945c:	ldr	x23, [sp, #48]
   19460:	b	193e0 <PyFloat_FromString@plt+0x12950>
   19464:	mov	x0, x20
   19468:	bl	65d0 <_Py_Dealloc@plt>
   1946c:	b	19394 <PyFloat_FromString@plt+0x12904>
   19470:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   19474:	mov	x20, x0
   19478:	cbnz	x0, 19384 <PyFloat_FromString@plt+0x128f4>
   1947c:	mov	x22, #0x0                   	// #0
   19480:	mov	x0, x22
   19484:	ldp	x19, x20, [sp, #16]
   19488:	ldp	x21, x22, [sp, #32]
   1948c:	ldr	x23, [sp, #48]
   19490:	ldp	x29, x30, [sp], #80
   19494:	ret
   19498:	ldr	x0, [x21]
   1949c:	add	x0, x0, #0x1
   194a0:	str	x0, [x21]
   194a4:	add	x0, x23, #0x328
   194a8:	add	x0, x0, #0x1a0
   194ac:	bl	6950 <_PyObject_New@plt>
   194b0:	mov	x22, x0
   194b4:	cbz	x0, 19594 <PyFloat_FromString@plt+0x12b04>
   194b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   194bc:	mov	x2, #0xffffffffffffffff    	// #-1
   194c0:	mov	w1, #0x30                  	// #48
   194c4:	str	x2, [x22, #16]
   194c8:	ldr	q0, [x0, #2128]
   194cc:	add	x0, x22, #0x48
   194d0:	strb	w1, [x22, #24]
   194d4:	add	x4, sp, #0x44
   194d8:	stp	xzr, xzr, [x22, #32]
   194dc:	add	x3, x20, #0x10
   194e0:	add	x1, x19, #0x18
   194e4:	str	x0, [x22, #64]
   194e8:	add	x2, x21, #0x18
   194ec:	add	x0, x22, #0x18
   194f0:	str	q0, [x22, #48]
   194f4:	bl	361c8 <PyInit__decimal@@Base+0x19f88>
   194f8:	ldr	x0, [x19]
   194fc:	sub	x0, x0, #0x1
   19500:	str	x0, [x19]
   19504:	cbz	x0, 19588 <PyFloat_FromString@plt+0x12af8>
   19508:	ldr	x0, [x21]
   1950c:	sub	x0, x0, #0x1
   19510:	str	x0, [x21]
   19514:	cbz	x0, 1957c <PyFloat_FromString@plt+0x12aec>
   19518:	ldr	w1, [sp, #68]
   1951c:	mov	x0, x20
   19520:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   19524:	cbnz	w0, 195c4 <PyFloat_FromString@plt+0x12b34>
   19528:	mov	x0, x22
   1952c:	ldp	x19, x20, [sp, #16]
   19530:	ldp	x21, x22, [sp, #32]
   19534:	ldr	x23, [sp, #48]
   19538:	ldp	x29, x30, [sp], #80
   1953c:	ret
   19540:	mov	x1, x21
   19544:	mov	x0, x22
   19548:	mov	x2, x20
   1954c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19550:	mov	x21, x0
   19554:	cbnz	x0, 194a4 <PyFloat_FromString@plt+0x12a14>
   19558:	mov	x22, #0x0                   	// #0
   1955c:	b	19444 <PyFloat_FromString@plt+0x129b4>
   19560:	mov	x1, x19
   19564:	mov	x0, x22
   19568:	mov	x2, x20
   1956c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19570:	mov	x19, x0
   19574:	cbnz	x0, 19400 <PyFloat_FromString@plt+0x12970>
   19578:	b	1947c <PyFloat_FromString@plt+0x129ec>
   1957c:	mov	x0, x21
   19580:	bl	65d0 <_Py_Dealloc@plt>
   19584:	b	19518 <PyFloat_FromString@plt+0x12a88>
   19588:	mov	x0, x19
   1958c:	bl	65d0 <_Py_Dealloc@plt>
   19590:	b	19508 <PyFloat_FromString@plt+0x12a78>
   19594:	ldr	x0, [x19]
   19598:	sub	x0, x0, #0x1
   1959c:	str	x0, [x19]
   195a0:	cbz	x0, 195e8 <PyFloat_FromString@plt+0x12b58>
   195a4:	ldr	x0, [x21]
   195a8:	sub	x0, x0, #0x1
   195ac:	str	x0, [x21]
   195b0:	cbnz	x0, 1947c <PyFloat_FromString@plt+0x129ec>
   195b4:	mov	x0, x21
   195b8:	bl	65d0 <_Py_Dealloc@plt>
   195bc:	ldr	x23, [sp, #48]
   195c0:	b	193e0 <PyFloat_FromString@plt+0x12950>
   195c4:	ldr	x0, [x22]
   195c8:	sub	x0, x0, #0x1
   195cc:	str	x0, [x22]
   195d0:	cbnz	x0, 1947c <PyFloat_FromString@plt+0x129ec>
   195d4:	mov	x0, x22
   195d8:	mov	x22, #0x0                   	// #0
   195dc:	bl	65d0 <_Py_Dealloc@plt>
   195e0:	ldr	x23, [sp, #48]
   195e4:	b	193e0 <PyFloat_FromString@plt+0x12950>
   195e8:	mov	x0, x19
   195ec:	bl	65d0 <_Py_Dealloc@plt>
   195f0:	b	195a4 <PyFloat_FromString@plt+0x12b14>
   195f4:	nop
   195f8:	stp	x29, x30, [sp, #-80]!
   195fc:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   19600:	mov	x29, sp
   19604:	stp	x19, x20, [sp, #16]
   19608:	mov	x19, x0
   1960c:	ldr	x0, [x2, #2056]
   19610:	add	x2, sp, #0x48
   19614:	stp	x21, x22, [sp, #32]
   19618:	mov	x21, x1
   1961c:	mov	x22, #0x0                   	// #0
   19620:	mov	x1, #0x0                   	// #0
   19624:	str	wzr, [sp, #68]
   19628:	bl	6740 <PyContextVar_Get@plt>
   1962c:	tbnz	w0, #31, 19698 <PyFloat_FromString@plt+0x12c08>
   19630:	ldr	x20, [sp, #72]
   19634:	str	x23, [sp, #48]
   19638:	cbz	x20, 19728 <PyFloat_FromString@plt+0x12c98>
   1963c:	ldr	x0, [x20]
   19640:	sub	x0, x0, #0x1
   19644:	str	x0, [x20]
   19648:	cbz	x0, 1971c <PyFloat_FromString@plt+0x12c8c>
   1964c:	ldr	x0, [x19, #8]
   19650:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   19654:	add	x22, x23, #0x328
   19658:	add	x22, x22, #0x1a0
   1965c:	cmp	x0, x22
   19660:	b.eq	196ac <PyFloat_FromString@plt+0x12c1c>  // b.none
   19664:	mov	x1, x22
   19668:	bl	69c0 <PyType_IsSubtype@plt>
   1966c:	cbnz	w0, 196ac <PyFloat_FromString@plt+0x12c1c>
   19670:	ldr	x0, [x19, #8]
   19674:	ldr	x0, [x0, #168]
   19678:	tbnz	w0, #24, 19818 <PyFloat_FromString@plt+0x12d88>
   1967c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19680:	ldr	x23, [sp, #48]
   19684:	ldr	x0, [x0, #3912]
   19688:	mov	x22, x0
   1968c:	ldr	x1, [x0]
   19690:	add	x1, x1, #0x1
   19694:	str	x1, [x0]
   19698:	mov	x0, x22
   1969c:	ldp	x19, x20, [sp, #16]
   196a0:	ldp	x21, x22, [sp, #32]
   196a4:	ldp	x29, x30, [sp], #80
   196a8:	ret
   196ac:	ldr	x0, [x19]
   196b0:	add	x0, x0, #0x1
   196b4:	str	x0, [x19]
   196b8:	ldr	x0, [x21, #8]
   196bc:	add	x22, x23, #0x328
   196c0:	add	x22, x22, #0x1a0
   196c4:	cmp	x0, x22
   196c8:	b.eq	19750 <PyFloat_FromString@plt+0x12cc0>  // b.none
   196cc:	mov	x1, x22
   196d0:	bl	69c0 <PyType_IsSubtype@plt>
   196d4:	cbnz	w0, 19750 <PyFloat_FromString@plt+0x12cc0>
   196d8:	ldr	x0, [x21, #8]
   196dc:	ldr	x0, [x0, #168]
   196e0:	tbnz	w0, #24, 197f8 <PyFloat_FromString@plt+0x12d68>
   196e4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   196e8:	ldr	x0, [x0, #3912]
   196ec:	mov	x22, x0
   196f0:	ldr	x1, [x0]
   196f4:	add	x1, x1, #0x1
   196f8:	str	x1, [x0]
   196fc:	ldr	x0, [x19]
   19700:	sub	x0, x0, #0x1
   19704:	str	x0, [x19]
   19708:	cbnz	x0, 197e0 <PyFloat_FromString@plt+0x12d50>
   1970c:	mov	x0, x19
   19710:	bl	65d0 <_Py_Dealloc@plt>
   19714:	ldr	x23, [sp, #48]
   19718:	b	19698 <PyFloat_FromString@plt+0x12c08>
   1971c:	mov	x0, x20
   19720:	bl	65d0 <_Py_Dealloc@plt>
   19724:	b	1964c <PyFloat_FromString@plt+0x12bbc>
   19728:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   1972c:	mov	x20, x0
   19730:	cbnz	x0, 1963c <PyFloat_FromString@plt+0x12bac>
   19734:	mov	x22, #0x0                   	// #0
   19738:	mov	x0, x22
   1973c:	ldp	x19, x20, [sp, #16]
   19740:	ldp	x21, x22, [sp, #32]
   19744:	ldr	x23, [sp, #48]
   19748:	ldp	x29, x30, [sp], #80
   1974c:	ret
   19750:	ldr	x0, [x21]
   19754:	add	x0, x0, #0x1
   19758:	str	x0, [x21]
   1975c:	add	x0, x23, #0x328
   19760:	add	x0, x0, #0x1a0
   19764:	bl	6950 <_PyObject_New@plt>
   19768:	mov	x22, x0
   1976c:	cbz	x0, 1984c <PyFloat_FromString@plt+0x12dbc>
   19770:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   19774:	mov	x2, #0xffffffffffffffff    	// #-1
   19778:	mov	w1, #0x30                  	// #48
   1977c:	str	x2, [x22, #16]
   19780:	ldr	q0, [x0, #2128]
   19784:	add	x0, x22, #0x48
   19788:	strb	w1, [x22, #24]
   1978c:	add	x4, sp, #0x44
   19790:	stp	xzr, xzr, [x22, #32]
   19794:	add	x3, x20, #0x10
   19798:	add	x1, x19, #0x18
   1979c:	str	x0, [x22, #64]
   197a0:	add	x2, x21, #0x18
   197a4:	add	x0, x22, #0x18
   197a8:	str	q0, [x22, #48]
   197ac:	bl	38c18 <PyInit__decimal@@Base+0x1c9d8>
   197b0:	ldr	x0, [x19]
   197b4:	sub	x0, x0, #0x1
   197b8:	str	x0, [x19]
   197bc:	cbz	x0, 19840 <PyFloat_FromString@plt+0x12db0>
   197c0:	ldr	x0, [x21]
   197c4:	sub	x0, x0, #0x1
   197c8:	str	x0, [x21]
   197cc:	cbz	x0, 19834 <PyFloat_FromString@plt+0x12da4>
   197d0:	ldr	w1, [sp, #68]
   197d4:	mov	x0, x20
   197d8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   197dc:	cbnz	w0, 1987c <PyFloat_FromString@plt+0x12dec>
   197e0:	mov	x0, x22
   197e4:	ldp	x19, x20, [sp, #16]
   197e8:	ldp	x21, x22, [sp, #32]
   197ec:	ldr	x23, [sp, #48]
   197f0:	ldp	x29, x30, [sp], #80
   197f4:	ret
   197f8:	mov	x1, x21
   197fc:	mov	x0, x22
   19800:	mov	x2, x20
   19804:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19808:	mov	x21, x0
   1980c:	cbnz	x0, 1975c <PyFloat_FromString@plt+0x12ccc>
   19810:	mov	x22, #0x0                   	// #0
   19814:	b	196fc <PyFloat_FromString@plt+0x12c6c>
   19818:	mov	x1, x19
   1981c:	mov	x0, x22
   19820:	mov	x2, x20
   19824:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19828:	mov	x19, x0
   1982c:	cbnz	x0, 196b8 <PyFloat_FromString@plt+0x12c28>
   19830:	b	19734 <PyFloat_FromString@plt+0x12ca4>
   19834:	mov	x0, x21
   19838:	bl	65d0 <_Py_Dealloc@plt>
   1983c:	b	197d0 <PyFloat_FromString@plt+0x12d40>
   19840:	mov	x0, x19
   19844:	bl	65d0 <_Py_Dealloc@plt>
   19848:	b	197c0 <PyFloat_FromString@plt+0x12d30>
   1984c:	ldr	x0, [x19]
   19850:	sub	x0, x0, #0x1
   19854:	str	x0, [x19]
   19858:	cbz	x0, 198a0 <PyFloat_FromString@plt+0x12e10>
   1985c:	ldr	x0, [x21]
   19860:	sub	x0, x0, #0x1
   19864:	str	x0, [x21]
   19868:	cbnz	x0, 19734 <PyFloat_FromString@plt+0x12ca4>
   1986c:	mov	x0, x21
   19870:	bl	65d0 <_Py_Dealloc@plt>
   19874:	ldr	x23, [sp, #48]
   19878:	b	19698 <PyFloat_FromString@plt+0x12c08>
   1987c:	ldr	x0, [x22]
   19880:	sub	x0, x0, #0x1
   19884:	str	x0, [x22]
   19888:	cbnz	x0, 19734 <PyFloat_FromString@plt+0x12ca4>
   1988c:	mov	x0, x22
   19890:	mov	x22, #0x0                   	// #0
   19894:	bl	65d0 <_Py_Dealloc@plt>
   19898:	ldr	x23, [sp, #48]
   1989c:	b	19698 <PyFloat_FromString@plt+0x12c08>
   198a0:	mov	x0, x19
   198a4:	bl	65d0 <_Py_Dealloc@plt>
   198a8:	b	1985c <PyFloat_FromString@plt+0x12dcc>
   198ac:	nop
   198b0:	stp	x29, x30, [sp, #-80]!
   198b4:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   198b8:	mov	x29, sp
   198bc:	stp	x19, x20, [sp, #16]
   198c0:	mov	x19, x0
   198c4:	ldr	x0, [x2, #2056]
   198c8:	add	x2, sp, #0x48
   198cc:	stp	x21, x22, [sp, #32]
   198d0:	mov	x21, x1
   198d4:	mov	x22, #0x0                   	// #0
   198d8:	mov	x1, #0x0                   	// #0
   198dc:	str	wzr, [sp, #68]
   198e0:	bl	6740 <PyContextVar_Get@plt>
   198e4:	tbnz	w0, #31, 19950 <PyFloat_FromString@plt+0x12ec0>
   198e8:	ldr	x20, [sp, #72]
   198ec:	str	x23, [sp, #48]
   198f0:	cbz	x20, 199e0 <PyFloat_FromString@plt+0x12f50>
   198f4:	ldr	x0, [x20]
   198f8:	sub	x0, x0, #0x1
   198fc:	str	x0, [x20]
   19900:	cbz	x0, 199d4 <PyFloat_FromString@plt+0x12f44>
   19904:	ldr	x0, [x19, #8]
   19908:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1990c:	add	x22, x23, #0x328
   19910:	add	x22, x22, #0x1a0
   19914:	cmp	x0, x22
   19918:	b.eq	19964 <PyFloat_FromString@plt+0x12ed4>  // b.none
   1991c:	mov	x1, x22
   19920:	bl	69c0 <PyType_IsSubtype@plt>
   19924:	cbnz	w0, 19964 <PyFloat_FromString@plt+0x12ed4>
   19928:	ldr	x0, [x19, #8]
   1992c:	ldr	x0, [x0, #168]
   19930:	tbnz	w0, #24, 19ad0 <PyFloat_FromString@plt+0x13040>
   19934:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19938:	ldr	x23, [sp, #48]
   1993c:	ldr	x0, [x0, #3912]
   19940:	mov	x22, x0
   19944:	ldr	x1, [x0]
   19948:	add	x1, x1, #0x1
   1994c:	str	x1, [x0]
   19950:	mov	x0, x22
   19954:	ldp	x19, x20, [sp, #16]
   19958:	ldp	x21, x22, [sp, #32]
   1995c:	ldp	x29, x30, [sp], #80
   19960:	ret
   19964:	ldr	x0, [x19]
   19968:	add	x0, x0, #0x1
   1996c:	str	x0, [x19]
   19970:	ldr	x0, [x21, #8]
   19974:	add	x22, x23, #0x328
   19978:	add	x22, x22, #0x1a0
   1997c:	cmp	x0, x22
   19980:	b.eq	19a08 <PyFloat_FromString@plt+0x12f78>  // b.none
   19984:	mov	x1, x22
   19988:	bl	69c0 <PyType_IsSubtype@plt>
   1998c:	cbnz	w0, 19a08 <PyFloat_FromString@plt+0x12f78>
   19990:	ldr	x0, [x21, #8]
   19994:	ldr	x0, [x0, #168]
   19998:	tbnz	w0, #24, 19ab0 <PyFloat_FromString@plt+0x13020>
   1999c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   199a0:	ldr	x0, [x0, #3912]
   199a4:	mov	x22, x0
   199a8:	ldr	x1, [x0]
   199ac:	add	x1, x1, #0x1
   199b0:	str	x1, [x0]
   199b4:	ldr	x0, [x19]
   199b8:	sub	x0, x0, #0x1
   199bc:	str	x0, [x19]
   199c0:	cbnz	x0, 19a98 <PyFloat_FromString@plt+0x13008>
   199c4:	mov	x0, x19
   199c8:	bl	65d0 <_Py_Dealloc@plt>
   199cc:	ldr	x23, [sp, #48]
   199d0:	b	19950 <PyFloat_FromString@plt+0x12ec0>
   199d4:	mov	x0, x20
   199d8:	bl	65d0 <_Py_Dealloc@plt>
   199dc:	b	19904 <PyFloat_FromString@plt+0x12e74>
   199e0:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   199e4:	mov	x20, x0
   199e8:	cbnz	x0, 198f4 <PyFloat_FromString@plt+0x12e64>
   199ec:	mov	x22, #0x0                   	// #0
   199f0:	mov	x0, x22
   199f4:	ldp	x19, x20, [sp, #16]
   199f8:	ldp	x21, x22, [sp, #32]
   199fc:	ldr	x23, [sp, #48]
   19a00:	ldp	x29, x30, [sp], #80
   19a04:	ret
   19a08:	ldr	x0, [x21]
   19a0c:	add	x0, x0, #0x1
   19a10:	str	x0, [x21]
   19a14:	add	x0, x23, #0x328
   19a18:	add	x0, x0, #0x1a0
   19a1c:	bl	6950 <_PyObject_New@plt>
   19a20:	mov	x22, x0
   19a24:	cbz	x0, 19b04 <PyFloat_FromString@plt+0x13074>
   19a28:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   19a2c:	mov	x2, #0xffffffffffffffff    	// #-1
   19a30:	mov	w1, #0x30                  	// #48
   19a34:	str	x2, [x22, #16]
   19a38:	ldr	q0, [x0, #2128]
   19a3c:	add	x0, x22, #0x48
   19a40:	strb	w1, [x22, #24]
   19a44:	add	x4, sp, #0x44
   19a48:	stp	xzr, xzr, [x22, #32]
   19a4c:	add	x3, x20, #0x10
   19a50:	add	x1, x19, #0x18
   19a54:	str	x0, [x22, #64]
   19a58:	add	x2, x21, #0x18
   19a5c:	add	x0, x22, #0x18
   19a60:	str	q0, [x22, #48]
   19a64:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   19a68:	ldr	x0, [x19]
   19a6c:	sub	x0, x0, #0x1
   19a70:	str	x0, [x19]
   19a74:	cbz	x0, 19af8 <PyFloat_FromString@plt+0x13068>
   19a78:	ldr	x0, [x21]
   19a7c:	sub	x0, x0, #0x1
   19a80:	str	x0, [x21]
   19a84:	cbz	x0, 19aec <PyFloat_FromString@plt+0x1305c>
   19a88:	ldr	w1, [sp, #68]
   19a8c:	mov	x0, x20
   19a90:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   19a94:	cbnz	w0, 19b34 <PyFloat_FromString@plt+0x130a4>
   19a98:	mov	x0, x22
   19a9c:	ldp	x19, x20, [sp, #16]
   19aa0:	ldp	x21, x22, [sp, #32]
   19aa4:	ldr	x23, [sp, #48]
   19aa8:	ldp	x29, x30, [sp], #80
   19aac:	ret
   19ab0:	mov	x1, x21
   19ab4:	mov	x0, x22
   19ab8:	mov	x2, x20
   19abc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19ac0:	mov	x21, x0
   19ac4:	cbnz	x0, 19a14 <PyFloat_FromString@plt+0x12f84>
   19ac8:	mov	x22, #0x0                   	// #0
   19acc:	b	199b4 <PyFloat_FromString@plt+0x12f24>
   19ad0:	mov	x1, x19
   19ad4:	mov	x0, x22
   19ad8:	mov	x2, x20
   19adc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19ae0:	mov	x19, x0
   19ae4:	cbnz	x0, 19970 <PyFloat_FromString@plt+0x12ee0>
   19ae8:	b	199ec <PyFloat_FromString@plt+0x12f5c>
   19aec:	mov	x0, x21
   19af0:	bl	65d0 <_Py_Dealloc@plt>
   19af4:	b	19a88 <PyFloat_FromString@plt+0x12ff8>
   19af8:	mov	x0, x19
   19afc:	bl	65d0 <_Py_Dealloc@plt>
   19b00:	b	19a78 <PyFloat_FromString@plt+0x12fe8>
   19b04:	ldr	x0, [x19]
   19b08:	sub	x0, x0, #0x1
   19b0c:	str	x0, [x19]
   19b10:	cbz	x0, 19b58 <PyFloat_FromString@plt+0x130c8>
   19b14:	ldr	x0, [x21]
   19b18:	sub	x0, x0, #0x1
   19b1c:	str	x0, [x21]
   19b20:	cbnz	x0, 199ec <PyFloat_FromString@plt+0x12f5c>
   19b24:	mov	x0, x21
   19b28:	bl	65d0 <_Py_Dealloc@plt>
   19b2c:	ldr	x23, [sp, #48]
   19b30:	b	19950 <PyFloat_FromString@plt+0x12ec0>
   19b34:	ldr	x0, [x22]
   19b38:	sub	x0, x0, #0x1
   19b3c:	str	x0, [x22]
   19b40:	cbnz	x0, 199ec <PyFloat_FromString@plt+0x12f5c>
   19b44:	mov	x0, x22
   19b48:	mov	x22, #0x0                   	// #0
   19b4c:	bl	65d0 <_Py_Dealloc@plt>
   19b50:	ldr	x23, [sp, #48]
   19b54:	b	19950 <PyFloat_FromString@plt+0x12ec0>
   19b58:	mov	x0, x19
   19b5c:	bl	65d0 <_Py_Dealloc@plt>
   19b60:	b	19b14 <PyFloat_FromString@plt+0x13084>
   19b64:	nop
   19b68:	stp	x29, x30, [sp, #-80]!
   19b6c:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   19b70:	mov	x29, sp
   19b74:	stp	x19, x20, [sp, #16]
   19b78:	mov	x19, x0
   19b7c:	ldr	x0, [x2, #2056]
   19b80:	add	x2, sp, #0x48
   19b84:	stp	x21, x22, [sp, #32]
   19b88:	mov	x21, x1
   19b8c:	mov	x22, #0x0                   	// #0
   19b90:	mov	x1, #0x0                   	// #0
   19b94:	str	wzr, [sp, #68]
   19b98:	bl	6740 <PyContextVar_Get@plt>
   19b9c:	tbnz	w0, #31, 19c08 <PyFloat_FromString@plt+0x13178>
   19ba0:	ldr	x20, [sp, #72]
   19ba4:	str	x23, [sp, #48]
   19ba8:	cbz	x20, 19c98 <PyFloat_FromString@plt+0x13208>
   19bac:	ldr	x0, [x20]
   19bb0:	sub	x0, x0, #0x1
   19bb4:	str	x0, [x20]
   19bb8:	cbz	x0, 19c8c <PyFloat_FromString@plt+0x131fc>
   19bbc:	ldr	x0, [x19, #8]
   19bc0:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   19bc4:	add	x22, x23, #0x328
   19bc8:	add	x22, x22, #0x1a0
   19bcc:	cmp	x0, x22
   19bd0:	b.eq	19c1c <PyFloat_FromString@plt+0x1318c>  // b.none
   19bd4:	mov	x1, x22
   19bd8:	bl	69c0 <PyType_IsSubtype@plt>
   19bdc:	cbnz	w0, 19c1c <PyFloat_FromString@plt+0x1318c>
   19be0:	ldr	x0, [x19, #8]
   19be4:	ldr	x0, [x0, #168]
   19be8:	tbnz	w0, #24, 19d88 <PyFloat_FromString@plt+0x132f8>
   19bec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19bf0:	ldr	x23, [sp, #48]
   19bf4:	ldr	x0, [x0, #3912]
   19bf8:	mov	x22, x0
   19bfc:	ldr	x1, [x0]
   19c00:	add	x1, x1, #0x1
   19c04:	str	x1, [x0]
   19c08:	mov	x0, x22
   19c0c:	ldp	x19, x20, [sp, #16]
   19c10:	ldp	x21, x22, [sp, #32]
   19c14:	ldp	x29, x30, [sp], #80
   19c18:	ret
   19c1c:	ldr	x0, [x19]
   19c20:	add	x0, x0, #0x1
   19c24:	str	x0, [x19]
   19c28:	ldr	x0, [x21, #8]
   19c2c:	add	x22, x23, #0x328
   19c30:	add	x22, x22, #0x1a0
   19c34:	cmp	x0, x22
   19c38:	b.eq	19cc0 <PyFloat_FromString@plt+0x13230>  // b.none
   19c3c:	mov	x1, x22
   19c40:	bl	69c0 <PyType_IsSubtype@plt>
   19c44:	cbnz	w0, 19cc0 <PyFloat_FromString@plt+0x13230>
   19c48:	ldr	x0, [x21, #8]
   19c4c:	ldr	x0, [x0, #168]
   19c50:	tbnz	w0, #24, 19d68 <PyFloat_FromString@plt+0x132d8>
   19c54:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19c58:	ldr	x0, [x0, #3912]
   19c5c:	mov	x22, x0
   19c60:	ldr	x1, [x0]
   19c64:	add	x1, x1, #0x1
   19c68:	str	x1, [x0]
   19c6c:	ldr	x0, [x19]
   19c70:	sub	x0, x0, #0x1
   19c74:	str	x0, [x19]
   19c78:	cbnz	x0, 19d50 <PyFloat_FromString@plt+0x132c0>
   19c7c:	mov	x0, x19
   19c80:	bl	65d0 <_Py_Dealloc@plt>
   19c84:	ldr	x23, [sp, #48]
   19c88:	b	19c08 <PyFloat_FromString@plt+0x13178>
   19c8c:	mov	x0, x20
   19c90:	bl	65d0 <_Py_Dealloc@plt>
   19c94:	b	19bbc <PyFloat_FromString@plt+0x1312c>
   19c98:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   19c9c:	mov	x20, x0
   19ca0:	cbnz	x0, 19bac <PyFloat_FromString@plt+0x1311c>
   19ca4:	mov	x22, #0x0                   	// #0
   19ca8:	mov	x0, x22
   19cac:	ldp	x19, x20, [sp, #16]
   19cb0:	ldp	x21, x22, [sp, #32]
   19cb4:	ldr	x23, [sp, #48]
   19cb8:	ldp	x29, x30, [sp], #80
   19cbc:	ret
   19cc0:	ldr	x0, [x21]
   19cc4:	add	x0, x0, #0x1
   19cc8:	str	x0, [x21]
   19ccc:	add	x0, x23, #0x328
   19cd0:	add	x0, x0, #0x1a0
   19cd4:	bl	6950 <_PyObject_New@plt>
   19cd8:	mov	x22, x0
   19cdc:	cbz	x0, 19dbc <PyFloat_FromString@plt+0x1332c>
   19ce0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   19ce4:	mov	x2, #0xffffffffffffffff    	// #-1
   19ce8:	mov	w1, #0x30                  	// #48
   19cec:	str	x2, [x22, #16]
   19cf0:	ldr	q0, [x0, #2128]
   19cf4:	add	x0, x22, #0x48
   19cf8:	strb	w1, [x22, #24]
   19cfc:	add	x4, sp, #0x44
   19d00:	stp	xzr, xzr, [x22, #32]
   19d04:	add	x3, x20, #0x10
   19d08:	add	x1, x19, #0x18
   19d0c:	str	x0, [x22, #64]
   19d10:	add	x2, x21, #0x18
   19d14:	add	x0, x22, #0x18
   19d18:	str	q0, [x22, #48]
   19d1c:	bl	36410 <PyInit__decimal@@Base+0x1a1d0>
   19d20:	ldr	x0, [x19]
   19d24:	sub	x0, x0, #0x1
   19d28:	str	x0, [x19]
   19d2c:	cbz	x0, 19db0 <PyFloat_FromString@plt+0x13320>
   19d30:	ldr	x0, [x21]
   19d34:	sub	x0, x0, #0x1
   19d38:	str	x0, [x21]
   19d3c:	cbz	x0, 19da4 <PyFloat_FromString@plt+0x13314>
   19d40:	ldr	w1, [sp, #68]
   19d44:	mov	x0, x20
   19d48:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   19d4c:	cbnz	w0, 19dec <PyFloat_FromString@plt+0x1335c>
   19d50:	mov	x0, x22
   19d54:	ldp	x19, x20, [sp, #16]
   19d58:	ldp	x21, x22, [sp, #32]
   19d5c:	ldr	x23, [sp, #48]
   19d60:	ldp	x29, x30, [sp], #80
   19d64:	ret
   19d68:	mov	x1, x21
   19d6c:	mov	x0, x22
   19d70:	mov	x2, x20
   19d74:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19d78:	mov	x21, x0
   19d7c:	cbnz	x0, 19ccc <PyFloat_FromString@plt+0x1323c>
   19d80:	mov	x22, #0x0                   	// #0
   19d84:	b	19c6c <PyFloat_FromString@plt+0x131dc>
   19d88:	mov	x1, x19
   19d8c:	mov	x0, x22
   19d90:	mov	x2, x20
   19d94:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   19d98:	mov	x19, x0
   19d9c:	cbnz	x0, 19c28 <PyFloat_FromString@plt+0x13198>
   19da0:	b	19ca4 <PyFloat_FromString@plt+0x13214>
   19da4:	mov	x0, x21
   19da8:	bl	65d0 <_Py_Dealloc@plt>
   19dac:	b	19d40 <PyFloat_FromString@plt+0x132b0>
   19db0:	mov	x0, x19
   19db4:	bl	65d0 <_Py_Dealloc@plt>
   19db8:	b	19d30 <PyFloat_FromString@plt+0x132a0>
   19dbc:	ldr	x0, [x19]
   19dc0:	sub	x0, x0, #0x1
   19dc4:	str	x0, [x19]
   19dc8:	cbz	x0, 19e10 <PyFloat_FromString@plt+0x13380>
   19dcc:	ldr	x0, [x21]
   19dd0:	sub	x0, x0, #0x1
   19dd4:	str	x0, [x21]
   19dd8:	cbnz	x0, 19ca4 <PyFloat_FromString@plt+0x13214>
   19ddc:	mov	x0, x21
   19de0:	bl	65d0 <_Py_Dealloc@plt>
   19de4:	ldr	x23, [sp, #48]
   19de8:	b	19c08 <PyFloat_FromString@plt+0x13178>
   19dec:	ldr	x0, [x22]
   19df0:	sub	x0, x0, #0x1
   19df4:	str	x0, [x22]
   19df8:	cbnz	x0, 19ca4 <PyFloat_FromString@plt+0x13214>
   19dfc:	mov	x0, x22
   19e00:	mov	x22, #0x0                   	// #0
   19e04:	bl	65d0 <_Py_Dealloc@plt>
   19e08:	ldr	x23, [sp, #48]
   19e0c:	b	19c08 <PyFloat_FromString@plt+0x13178>
   19e10:	mov	x0, x19
   19e14:	bl	65d0 <_Py_Dealloc@plt>
   19e18:	b	19dcc <PyFloat_FromString@plt+0x1333c>
   19e1c:	nop
   19e20:	stp	x29, x30, [sp, #-80]!
   19e24:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   19e28:	mov	x29, sp
   19e2c:	stp	x19, x20, [sp, #16]
   19e30:	mov	x19, x0
   19e34:	ldr	x0, [x2, #2056]
   19e38:	add	x2, sp, #0x48
   19e3c:	stp	x21, x22, [sp, #32]
   19e40:	mov	x21, x1
   19e44:	mov	x22, #0x0                   	// #0
   19e48:	mov	x1, #0x0                   	// #0
   19e4c:	str	wzr, [sp, #68]
   19e50:	bl	6740 <PyContextVar_Get@plt>
   19e54:	tbnz	w0, #31, 19ec0 <PyFloat_FromString@plt+0x13430>
   19e58:	ldr	x20, [sp, #72]
   19e5c:	str	x23, [sp, #48]
   19e60:	cbz	x20, 19f50 <PyFloat_FromString@plt+0x134c0>
   19e64:	ldr	x0, [x20]
   19e68:	sub	x0, x0, #0x1
   19e6c:	str	x0, [x20]
   19e70:	cbz	x0, 19f44 <PyFloat_FromString@plt+0x134b4>
   19e74:	ldr	x0, [x19, #8]
   19e78:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   19e7c:	add	x22, x23, #0x328
   19e80:	add	x22, x22, #0x1a0
   19e84:	cmp	x0, x22
   19e88:	b.eq	19ed4 <PyFloat_FromString@plt+0x13444>  // b.none
   19e8c:	mov	x1, x22
   19e90:	bl	69c0 <PyType_IsSubtype@plt>
   19e94:	cbnz	w0, 19ed4 <PyFloat_FromString@plt+0x13444>
   19e98:	ldr	x0, [x19, #8]
   19e9c:	ldr	x0, [x0, #168]
   19ea0:	tbnz	w0, #24, 1a040 <PyFloat_FromString@plt+0x135b0>
   19ea4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19ea8:	ldr	x23, [sp, #48]
   19eac:	ldr	x0, [x0, #3912]
   19eb0:	mov	x22, x0
   19eb4:	ldr	x1, [x0]
   19eb8:	add	x1, x1, #0x1
   19ebc:	str	x1, [x0]
   19ec0:	mov	x0, x22
   19ec4:	ldp	x19, x20, [sp, #16]
   19ec8:	ldp	x21, x22, [sp, #32]
   19ecc:	ldp	x29, x30, [sp], #80
   19ed0:	ret
   19ed4:	ldr	x0, [x19]
   19ed8:	add	x0, x0, #0x1
   19edc:	str	x0, [x19]
   19ee0:	ldr	x0, [x21, #8]
   19ee4:	add	x22, x23, #0x328
   19ee8:	add	x22, x22, #0x1a0
   19eec:	cmp	x0, x22
   19ef0:	b.eq	19f78 <PyFloat_FromString@plt+0x134e8>  // b.none
   19ef4:	mov	x1, x22
   19ef8:	bl	69c0 <PyType_IsSubtype@plt>
   19efc:	cbnz	w0, 19f78 <PyFloat_FromString@plt+0x134e8>
   19f00:	ldr	x0, [x21, #8]
   19f04:	ldr	x0, [x0, #168]
   19f08:	tbnz	w0, #24, 1a020 <PyFloat_FromString@plt+0x13590>
   19f0c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   19f10:	ldr	x0, [x0, #3912]
   19f14:	mov	x22, x0
   19f18:	ldr	x1, [x0]
   19f1c:	add	x1, x1, #0x1
   19f20:	str	x1, [x0]
   19f24:	ldr	x0, [x19]
   19f28:	sub	x0, x0, #0x1
   19f2c:	str	x0, [x19]
   19f30:	cbnz	x0, 1a008 <PyFloat_FromString@plt+0x13578>
   19f34:	mov	x0, x19
   19f38:	bl	65d0 <_Py_Dealloc@plt>
   19f3c:	ldr	x23, [sp, #48]
   19f40:	b	19ec0 <PyFloat_FromString@plt+0x13430>
   19f44:	mov	x0, x20
   19f48:	bl	65d0 <_Py_Dealloc@plt>
   19f4c:	b	19e74 <PyFloat_FromString@plt+0x133e4>
   19f50:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   19f54:	mov	x20, x0
   19f58:	cbnz	x0, 19e64 <PyFloat_FromString@plt+0x133d4>
   19f5c:	mov	x22, #0x0                   	// #0
   19f60:	mov	x0, x22
   19f64:	ldp	x19, x20, [sp, #16]
   19f68:	ldp	x21, x22, [sp, #32]
   19f6c:	ldr	x23, [sp, #48]
   19f70:	ldp	x29, x30, [sp], #80
   19f74:	ret
   19f78:	ldr	x0, [x21]
   19f7c:	add	x0, x0, #0x1
   19f80:	str	x0, [x21]
   19f84:	add	x0, x23, #0x328
   19f88:	add	x0, x0, #0x1a0
   19f8c:	bl	6950 <_PyObject_New@plt>
   19f90:	mov	x22, x0
   19f94:	cbz	x0, 1a074 <PyFloat_FromString@plt+0x135e4>
   19f98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   19f9c:	mov	x2, #0xffffffffffffffff    	// #-1
   19fa0:	mov	w1, #0x30                  	// #48
   19fa4:	str	x2, [x22, #16]
   19fa8:	ldr	q0, [x0, #2128]
   19fac:	add	x0, x22, #0x48
   19fb0:	strb	w1, [x22, #24]
   19fb4:	add	x4, sp, #0x44
   19fb8:	stp	xzr, xzr, [x22, #32]
   19fbc:	add	x3, x20, #0x10
   19fc0:	add	x1, x19, #0x18
   19fc4:	str	x0, [x22, #64]
   19fc8:	add	x2, x21, #0x18
   19fcc:	add	x0, x22, #0x18
   19fd0:	str	q0, [x22, #48]
   19fd4:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   19fd8:	ldr	x0, [x19]
   19fdc:	sub	x0, x0, #0x1
   19fe0:	str	x0, [x19]
   19fe4:	cbz	x0, 1a068 <PyFloat_FromString@plt+0x135d8>
   19fe8:	ldr	x0, [x21]
   19fec:	sub	x0, x0, #0x1
   19ff0:	str	x0, [x21]
   19ff4:	cbz	x0, 1a05c <PyFloat_FromString@plt+0x135cc>
   19ff8:	ldr	w1, [sp, #68]
   19ffc:	mov	x0, x20
   1a000:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1a004:	cbnz	w0, 1a0a4 <PyFloat_FromString@plt+0x13614>
   1a008:	mov	x0, x22
   1a00c:	ldp	x19, x20, [sp, #16]
   1a010:	ldp	x21, x22, [sp, #32]
   1a014:	ldr	x23, [sp, #48]
   1a018:	ldp	x29, x30, [sp], #80
   1a01c:	ret
   1a020:	mov	x1, x21
   1a024:	mov	x0, x22
   1a028:	mov	x2, x20
   1a02c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a030:	mov	x21, x0
   1a034:	cbnz	x0, 19f84 <PyFloat_FromString@plt+0x134f4>
   1a038:	mov	x22, #0x0                   	// #0
   1a03c:	b	19f24 <PyFloat_FromString@plt+0x13494>
   1a040:	mov	x1, x19
   1a044:	mov	x0, x22
   1a048:	mov	x2, x20
   1a04c:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a050:	mov	x19, x0
   1a054:	cbnz	x0, 19ee0 <PyFloat_FromString@plt+0x13450>
   1a058:	b	19f5c <PyFloat_FromString@plt+0x134cc>
   1a05c:	mov	x0, x21
   1a060:	bl	65d0 <_Py_Dealloc@plt>
   1a064:	b	19ff8 <PyFloat_FromString@plt+0x13568>
   1a068:	mov	x0, x19
   1a06c:	bl	65d0 <_Py_Dealloc@plt>
   1a070:	b	19fe8 <PyFloat_FromString@plt+0x13558>
   1a074:	ldr	x0, [x19]
   1a078:	sub	x0, x0, #0x1
   1a07c:	str	x0, [x19]
   1a080:	cbz	x0, 1a0c8 <PyFloat_FromString@plt+0x13638>
   1a084:	ldr	x0, [x21]
   1a088:	sub	x0, x0, #0x1
   1a08c:	str	x0, [x21]
   1a090:	cbnz	x0, 19f5c <PyFloat_FromString@plt+0x134cc>
   1a094:	mov	x0, x21
   1a098:	bl	65d0 <_Py_Dealloc@plt>
   1a09c:	ldr	x23, [sp, #48]
   1a0a0:	b	19ec0 <PyFloat_FromString@plt+0x13430>
   1a0a4:	ldr	x0, [x22]
   1a0a8:	sub	x0, x0, #0x1
   1a0ac:	str	x0, [x22]
   1a0b0:	cbnz	x0, 19f5c <PyFloat_FromString@plt+0x134cc>
   1a0b4:	mov	x0, x22
   1a0b8:	mov	x22, #0x0                   	// #0
   1a0bc:	bl	65d0 <_Py_Dealloc@plt>
   1a0c0:	ldr	x23, [sp, #48]
   1a0c4:	b	19ec0 <PyFloat_FromString@plt+0x13430>
   1a0c8:	mov	x0, x19
   1a0cc:	bl	65d0 <_Py_Dealloc@plt>
   1a0d0:	b	1a084 <PyFloat_FromString@plt+0x135f4>
   1a0d4:	nop
   1a0d8:	stp	x29, x30, [sp, #-112]!
   1a0dc:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   1a0e0:	add	x3, x3, #0x9b0
   1a0e4:	mov	x29, sp
   1a0e8:	stp	x23, x24, [sp, #48]
   1a0ec:	adrp	x23, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a0f0:	add	x3, x3, #0x650
   1a0f4:	ldr	x7, [x23, #4008]
   1a0f8:	add	x6, sp, #0x68
   1a0fc:	add	x5, sp, #0x60
   1a100:	add	x4, sp, #0x58
   1a104:	stp	x19, x20, [sp, #16]
   1a108:	stp	x21, x22, [sp, #32]
   1a10c:	mov	x21, x0
   1a110:	mov	x0, x1
   1a114:	mov	x1, x2
   1a118:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a11c:	add	x2, x2, #0xf28
   1a120:	str	wzr, [sp, #84]
   1a124:	str	x7, [sp, #104]
   1a128:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1a12c:	cbz	w0, 1a228 <PyFloat_FromString@plt+0x13798>
   1a130:	ldr	x20, [sp, #88]
   1a134:	adrp	x24, 63000 <PyInit__decimal@@Base+0x46dc0>
   1a138:	add	x19, x24, #0x328
   1a13c:	add	x19, x19, #0x1a0
   1a140:	ldr	x0, [x20, #8]
   1a144:	cmp	x0, x19
   1a148:	b.eq	1a244 <PyFloat_FromString@plt+0x137b4>  // b.none
   1a14c:	mov	x1, x19
   1a150:	bl	69c0 <PyType_IsSubtype@plt>
   1a154:	cbnz	w0, 1a244 <PyFloat_FromString@plt+0x137b4>
   1a158:	ldr	x2, [x20, #8]
   1a15c:	ldr	x0, [x2, #168]
   1a160:	tbnz	w0, #24, 1a3f4 <PyFloat_FromString@plt+0x13964>
   1a164:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a168:	mov	x19, #0x0                   	// #0
   1a16c:	ldr	x2, [x2, #24]
   1a170:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a174:	ldr	x0, [x0, #3936]
   1a178:	add	x1, x1, #0xb70
   1a17c:	ldr	x0, [x0]
   1a180:	bl	6a10 <PyErr_Format@plt>
   1a184:	mov	x0, x19
   1a188:	ldp	x19, x20, [sp, #16]
   1a18c:	ldp	x21, x22, [sp, #32]
   1a190:	ldp	x23, x24, [sp, #48]
   1a194:	ldp	x29, x30, [sp], #112
   1a198:	ret
   1a19c:	ldr	x0, [x22]
   1a1a0:	str	x25, [sp, #64]
   1a1a4:	add	x0, x0, #0x1
   1a1a8:	str	x0, [x22]
   1a1ac:	ldr	x23, [x23, #4008]
   1a1b0:	ldr	x25, [sp, #104]
   1a1b4:	cmp	x25, x23
   1a1b8:	b.eq	1a39c <PyFloat_FromString@plt+0x1390c>  // b.none
   1a1bc:	ldr	x0, [x25, #8]
   1a1c0:	add	x19, x24, #0x328
   1a1c4:	add	x19, x19, #0x1a0
   1a1c8:	cmp	x0, x19
   1a1cc:	b.eq	1a2bc <PyFloat_FromString@plt+0x1382c>  // b.none
   1a1d0:	mov	x1, x19
   1a1d4:	bl	69c0 <PyType_IsSubtype@plt>
   1a1d8:	cbnz	w0, 1a2bc <PyFloat_FromString@plt+0x1382c>
   1a1dc:	ldr	x2, [x25, #8]
   1a1e0:	ldr	x0, [x2, #168]
   1a1e4:	tbnz	w0, #24, 1a4a0 <PyFloat_FromString@plt+0x13a10>
   1a1e8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a1ec:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a1f0:	ldr	x2, [x2, #24]
   1a1f4:	add	x1, x1, #0xb70
   1a1f8:	ldr	x0, [x0, #3936]
   1a1fc:	ldr	x0, [x0]
   1a200:	bl	6a10 <PyErr_Format@plt>
   1a204:	ldr	x0, [x20]
   1a208:	sub	x0, x0, #0x1
   1a20c:	str	x0, [x20]
   1a210:	cbz	x0, 1a4bc <PyFloat_FromString@plt+0x13a2c>
   1a214:	ldr	x0, [x22]
   1a218:	sub	x0, x0, #0x1
   1a21c:	str	x0, [x22]
   1a220:	cbz	x0, 1a48c <PyFloat_FromString@plt+0x139fc>
   1a224:	ldr	x25, [sp, #64]
   1a228:	mov	x19, #0x0                   	// #0
   1a22c:	mov	x0, x19
   1a230:	ldp	x19, x20, [sp, #16]
   1a234:	ldp	x21, x22, [sp, #32]
   1a238:	ldp	x23, x24, [sp, #48]
   1a23c:	ldp	x29, x30, [sp], #112
   1a240:	ret
   1a244:	ldr	x0, [x20]
   1a248:	add	x0, x0, #0x1
   1a24c:	str	x0, [x20]
   1a250:	ldr	x22, [sp, #96]
   1a254:	add	x19, x24, #0x328
   1a258:	add	x19, x19, #0x1a0
   1a25c:	ldr	x0, [x22, #8]
   1a260:	cmp	x0, x19
   1a264:	b.eq	1a19c <PyFloat_FromString@plt+0x1370c>  // b.none
   1a268:	mov	x1, x19
   1a26c:	bl	69c0 <PyType_IsSubtype@plt>
   1a270:	cbnz	w0, 1a19c <PyFloat_FromString@plt+0x1370c>
   1a274:	ldr	x2, [x22, #8]
   1a278:	ldr	x0, [x2, #168]
   1a27c:	tbnz	w0, #24, 1a37c <PyFloat_FromString@plt+0x138ec>
   1a280:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a284:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a288:	ldr	x2, [x2, #24]
   1a28c:	add	x1, x1, #0xb70
   1a290:	ldr	x0, [x0, #3936]
   1a294:	ldr	x0, [x0]
   1a298:	bl	6a10 <PyErr_Format@plt>
   1a29c:	ldr	x0, [x20]
   1a2a0:	sub	x0, x0, #0x1
   1a2a4:	str	x0, [x20]
   1a2a8:	cbnz	x0, 1a228 <PyFloat_FromString@plt+0x13798>
   1a2ac:	mov	x0, x20
   1a2b0:	mov	x19, #0x0                   	// #0
   1a2b4:	bl	65d0 <_Py_Dealloc@plt>
   1a2b8:	b	1a22c <PyFloat_FromString@plt+0x1379c>
   1a2bc:	ldr	x1, [x25]
   1a2c0:	add	x1, x1, #0x1
   1a2c4:	str	x1, [x25]
   1a2c8:	add	x0, x24, #0x328
   1a2cc:	add	x0, x0, #0x1a0
   1a2d0:	bl	6950 <_PyObject_New@plt>
   1a2d4:	mov	x19, x0
   1a2d8:	cbz	x0, 1a428 <PyFloat_FromString@plt+0x13998>
   1a2dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1a2e0:	add	x1, x19, #0x48
   1a2e4:	mov	x3, #0xffffffffffffffff    	// #-1
   1a2e8:	mov	w2, #0x30                  	// #48
   1a2ec:	ldr	q0, [x0, #2128]
   1a2f0:	str	x3, [x19, #16]
   1a2f4:	strb	w2, [x19, #24]
   1a2f8:	add	x5, sp, #0x54
   1a2fc:	stp	xzr, xzr, [x19, #32]
   1a300:	add	x4, x21, #0x10
   1a304:	add	x2, x22, #0x18
   1a308:	str	x1, [x19, #64]
   1a30c:	add	x0, x19, #0x18
   1a310:	add	x1, x20, #0x18
   1a314:	add	x3, x25, #0x18
   1a318:	str	q0, [x19, #48]
   1a31c:	bl	3bd00 <PyInit__decimal@@Base+0x1fac0>
   1a320:	ldr	x1, [x25]
   1a324:	sub	x1, x1, #0x1
   1a328:	str	x1, [x25]
   1a32c:	cbz	x1, 1a480 <PyFloat_FromString@plt+0x139f0>
   1a330:	ldr	x0, [x20]
   1a334:	sub	x0, x0, #0x1
   1a338:	str	x0, [x20]
   1a33c:	cbz	x0, 1a41c <PyFloat_FromString@plt+0x1398c>
   1a340:	ldr	x0, [x22]
   1a344:	sub	x0, x0, #0x1
   1a348:	str	x0, [x22]
   1a34c:	cbz	x0, 1a410 <PyFloat_FromString@plt+0x13980>
   1a350:	ldr	w1, [sp, #84]
   1a354:	mov	x0, x21
   1a358:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1a35c:	cbnz	w0, 1a45c <PyFloat_FromString@plt+0x139cc>
   1a360:	mov	x0, x19
   1a364:	ldp	x19, x20, [sp, #16]
   1a368:	ldp	x21, x22, [sp, #32]
   1a36c:	ldp	x23, x24, [sp, #48]
   1a370:	ldr	x25, [sp, #64]
   1a374:	ldp	x29, x30, [sp], #112
   1a378:	ret
   1a37c:	mov	x1, x22
   1a380:	mov	x0, x19
   1a384:	mov	x2, x21
   1a388:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a38c:	mov	x22, x0
   1a390:	cbz	x0, 1a29c <PyFloat_FromString@plt+0x1380c>
   1a394:	str	x25, [sp, #64]
   1a398:	b	1a1ac <PyFloat_FromString@plt+0x1371c>
   1a39c:	add	x0, x24, #0x328
   1a3a0:	add	x0, x0, #0x1a0
   1a3a4:	bl	6950 <_PyObject_New@plt>
   1a3a8:	mov	x19, x0
   1a3ac:	cbz	x0, 1a430 <PyFloat_FromString@plt+0x139a0>
   1a3b0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1a3b4:	mov	x2, #0xffffffffffffffff    	// #-1
   1a3b8:	mov	w1, #0x30                  	// #48
   1a3bc:	str	x2, [x19, #16]
   1a3c0:	ldr	q0, [x0, #2128]
   1a3c4:	add	x0, x19, #0x48
   1a3c8:	strb	w1, [x19, #24]
   1a3cc:	add	x4, sp, #0x54
   1a3d0:	stp	xzr, xzr, [x19, #32]
   1a3d4:	add	x3, x21, #0x10
   1a3d8:	add	x1, x20, #0x18
   1a3dc:	str	x0, [x19, #64]
   1a3e0:	add	x2, x22, #0x18
   1a3e4:	add	x0, x19, #0x18
   1a3e8:	str	q0, [x19, #48]
   1a3ec:	bl	3b100 <PyInit__decimal@@Base+0x1eec0>
   1a3f0:	b	1a330 <PyFloat_FromString@plt+0x138a0>
   1a3f4:	mov	x1, x20
   1a3f8:	mov	x0, x19
   1a3fc:	mov	x2, x21
   1a400:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a404:	mov	x20, x0
   1a408:	cbnz	x0, 1a250 <PyFloat_FromString@plt+0x137c0>
   1a40c:	b	1a228 <PyFloat_FromString@plt+0x13798>
   1a410:	mov	x0, x22
   1a414:	bl	65d0 <_Py_Dealloc@plt>
   1a418:	b	1a350 <PyFloat_FromString@plt+0x138c0>
   1a41c:	mov	x0, x20
   1a420:	bl	65d0 <_Py_Dealloc@plt>
   1a424:	b	1a340 <PyFloat_FromString@plt+0x138b0>
   1a428:	mov	x19, x25
   1a42c:	nop
   1a430:	ldr	x0, [x20]
   1a434:	sub	x0, x0, #0x1
   1a438:	str	x0, [x20]
   1a43c:	cbz	x0, 1a4c8 <PyFloat_FromString@plt+0x13a38>
   1a440:	ldr	x0, [x22]
   1a444:	sub	x0, x0, #0x1
   1a448:	str	x0, [x22]
   1a44c:	cbnz	x0, 1a458 <PyFloat_FromString@plt+0x139c8>
   1a450:	mov	x0, x22
   1a454:	bl	65d0 <_Py_Dealloc@plt>
   1a458:	cbz	x19, 1a224 <PyFloat_FromString@plt+0x13794>
   1a45c:	ldr	x0, [x19]
   1a460:	sub	x0, x0, #0x1
   1a464:	str	x0, [x19]
   1a468:	cbnz	x0, 1a224 <PyFloat_FromString@plt+0x13794>
   1a46c:	mov	x0, x19
   1a470:	mov	x19, #0x0                   	// #0
   1a474:	bl	65d0 <_Py_Dealloc@plt>
   1a478:	ldr	x25, [sp, #64]
   1a47c:	b	1a22c <PyFloat_FromString@plt+0x1379c>
   1a480:	mov	x0, x25
   1a484:	bl	65d0 <_Py_Dealloc@plt>
   1a488:	b	1a330 <PyFloat_FromString@plt+0x138a0>
   1a48c:	mov	x0, x22
   1a490:	mov	x19, #0x0                   	// #0
   1a494:	bl	65d0 <_Py_Dealloc@plt>
   1a498:	ldr	x25, [sp, #64]
   1a49c:	b	1a22c <PyFloat_FromString@plt+0x1379c>
   1a4a0:	mov	x1, x25
   1a4a4:	mov	x0, x19
   1a4a8:	mov	x2, x21
   1a4ac:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a4b0:	mov	x25, x0
   1a4b4:	cbnz	x0, 1a2c8 <PyFloat_FromString@plt+0x13838>
   1a4b8:	b	1a204 <PyFloat_FromString@plt+0x13774>
   1a4bc:	mov	x0, x20
   1a4c0:	bl	65d0 <_Py_Dealloc@plt>
   1a4c4:	b	1a214 <PyFloat_FromString@plt+0x13784>
   1a4c8:	mov	x0, x20
   1a4cc:	bl	65d0 <_Py_Dealloc@plt>
   1a4d0:	b	1a440 <PyFloat_FromString@plt+0x139b0>
   1a4d4:	nop
   1a4d8:	stp	x29, x30, [sp, #-112]!
   1a4dc:	mov	x29, sp
   1a4e0:	add	x3, sp, #0x68
   1a4e4:	add	x2, sp, #0x60
   1a4e8:	stp	x19, x20, [sp, #16]
   1a4ec:	stp	x21, x22, [sp, #32]
   1a4f0:	mov	x22, x0
   1a4f4:	mov	x0, x1
   1a4f8:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a4fc:	add	x1, x1, #0xdc0
   1a500:	str	wzr, [sp, #92]
   1a504:	bl	68e0 <PyArg_ParseTuple@plt>
   1a508:	cbz	w0, 1a5b8 <PyFloat_FromString@plt+0x13b28>
   1a50c:	ldr	x19, [sp, #96]
   1a510:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   1a514:	add	x21, x20, #0x328
   1a518:	add	x21, x21, #0x1a0
   1a51c:	ldr	x0, [x19, #8]
   1a520:	cmp	x0, x21
   1a524:	b.eq	1a5d0 <PyFloat_FromString@plt+0x13b40>  // b.none
   1a528:	mov	x1, x21
   1a52c:	bl	69c0 <PyType_IsSubtype@plt>
   1a530:	cbnz	w0, 1a5d0 <PyFloat_FromString@plt+0x13b40>
   1a534:	ldr	x2, [x19, #8]
   1a538:	ldr	x0, [x2, #168]
   1a53c:	tbnz	w0, #24, 1a7b4 <PyFloat_FromString@plt+0x13d24>
   1a540:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a544:	mov	x19, #0x0                   	// #0
   1a548:	ldr	x2, [x2, #24]
   1a54c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a550:	ldr	x0, [x0, #3936]
   1a554:	add	x1, x1, #0xb70
   1a558:	ldr	x0, [x0]
   1a55c:	bl	6a10 <PyErr_Format@plt>
   1a560:	mov	x0, x19
   1a564:	ldp	x19, x20, [sp, #16]
   1a568:	ldp	x21, x22, [sp, #32]
   1a56c:	ldp	x29, x30, [sp], #112
   1a570:	ret
   1a574:	ldr	x0, [x19]
   1a578:	sub	x0, x0, #0x1
   1a57c:	str	x0, [x19]
   1a580:	cbz	x0, 1a860 <PyFloat_FromString@plt+0x13dd0>
   1a584:	ldr	x0, [x23]
   1a588:	sub	x0, x0, #0x1
   1a58c:	str	x0, [x23]
   1a590:	cbnz	x0, 1a5a0 <PyFloat_FromString@plt+0x13b10>
   1a594:	mov	x0, x23
   1a598:	bl	65d0 <_Py_Dealloc@plt>
   1a59c:	nop
   1a5a0:	ldr	x0, [x20]
   1a5a4:	sub	x0, x0, #0x1
   1a5a8:	str	x0, [x20]
   1a5ac:	cbz	x0, 1a848 <PyFloat_FromString@plt+0x13db8>
   1a5b0:	ldp	x23, x24, [sp, #48]
   1a5b4:	ldr	x25, [sp, #64]
   1a5b8:	mov	x19, #0x0                   	// #0
   1a5bc:	mov	x0, x19
   1a5c0:	ldp	x19, x20, [sp, #16]
   1a5c4:	ldp	x21, x22, [sp, #32]
   1a5c8:	ldp	x29, x30, [sp], #112
   1a5cc:	ret
   1a5d0:	ldr	x0, [x19]
   1a5d4:	stp	x23, x24, [sp, #48]
   1a5d8:	add	x0, x0, #0x1
   1a5dc:	str	x0, [x19]
   1a5e0:	ldr	x23, [sp, #104]
   1a5e4:	add	x21, x20, #0x328
   1a5e8:	add	x21, x21, #0x1a0
   1a5ec:	ldr	x0, [x23, #8]
   1a5f0:	cmp	x0, x21
   1a5f4:	b.eq	1a644 <PyFloat_FromString@plt+0x13bb4>  // b.none
   1a5f8:	mov	x1, x21
   1a5fc:	bl	69c0 <PyType_IsSubtype@plt>
   1a600:	cbnz	w0, 1a644 <PyFloat_FromString@plt+0x13bb4>
   1a604:	ldr	x2, [x23, #8]
   1a608:	ldr	x0, [x2, #168]
   1a60c:	tbnz	w0, #24, 1a77c <PyFloat_FromString@plt+0x13cec>
   1a610:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a614:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a618:	ldr	x2, [x2, #24]
   1a61c:	add	x1, x1, #0xb70
   1a620:	ldr	x0, [x0, #3936]
   1a624:	ldr	x0, [x0]
   1a628:	bl	6a10 <PyErr_Format@plt>
   1a62c:	ldr	x0, [x19]
   1a630:	sub	x0, x0, #0x1
   1a634:	str	x0, [x19]
   1a638:	cbz	x0, 1a828 <PyFloat_FromString@plt+0x13d98>
   1a63c:	ldp	x23, x24, [sp, #48]
   1a640:	b	1a5b8 <PyFloat_FromString@plt+0x13b28>
   1a644:	ldr	x0, [x23]
   1a648:	add	x0, x0, #0x1
   1a64c:	str	x0, [x23]
   1a650:	add	x20, x20, #0x328
   1a654:	add	x21, x20, #0x1a0
   1a658:	mov	x0, x21
   1a65c:	bl	6950 <_PyObject_New@plt>
   1a660:	mov	x20, x0
   1a664:	cbz	x0, 1a7f4 <PyFloat_FromString@plt+0x13d64>
   1a668:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1a66c:	add	x1, x20, #0x48
   1a670:	movi	v1.4s, #0x0
   1a674:	str	x25, [sp, #64]
   1a678:	ldr	q0, [x0, #2128]
   1a67c:	mov	w24, #0x30                  	// #48
   1a680:	mov	x25, #0xffffffffffffffff    	// #-1
   1a684:	str	x25, [x20, #16]
   1a688:	strb	w24, [x20, #24]
   1a68c:	mov	x0, x21
   1a690:	str	x1, [x20, #64]
   1a694:	stp	q1, q0, [x20, #32]
   1a698:	bl	6950 <_PyObject_New@plt>
   1a69c:	movi	v1.4s, #0x0
   1a6a0:	mov	x21, x0
   1a6a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1a6a8:	ldr	q0, [x0, #2128]
   1a6ac:	cbz	x21, 1a574 <PyFloat_FromString@plt+0x13ae4>
   1a6b0:	add	x0, x21, #0x48
   1a6b4:	str	x25, [x21, #16]
   1a6b8:	strb	w24, [x21, #24]
   1a6bc:	add	x5, sp, #0x5c
   1a6c0:	str	x0, [x21, #64]
   1a6c4:	add	x4, x22, #0x10
   1a6c8:	add	x0, x20, #0x18
   1a6cc:	add	x3, x23, #0x18
   1a6d0:	add	x2, x19, #0x18
   1a6d4:	add	x1, x21, #0x18
   1a6d8:	stp	q1, q0, [x21, #32]
   1a6dc:	bl	361f0 <PyInit__decimal@@Base+0x19fb0>
   1a6e0:	ldr	x0, [x19]
   1a6e4:	sub	x0, x0, #0x1
   1a6e8:	str	x0, [x19]
   1a6ec:	cbz	x0, 1a764 <PyFloat_FromString@plt+0x13cd4>
   1a6f0:	ldr	x0, [x23]
   1a6f4:	sub	x0, x0, #0x1
   1a6f8:	str	x0, [x23]
   1a6fc:	cbz	x0, 1a770 <PyFloat_FromString@plt+0x13ce0>
   1a700:	ldr	w1, [sp, #92]
   1a704:	mov	x0, x22
   1a708:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1a70c:	cbnz	w0, 1a798 <PyFloat_FromString@plt+0x13d08>
   1a710:	mov	x1, x20
   1a714:	mov	x2, x21
   1a718:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a71c:	add	x0, x0, #0xf30
   1a720:	bl	67d0 <Py_BuildValue@plt>
   1a724:	mov	x19, x0
   1a728:	ldr	x1, [x21]
   1a72c:	sub	x0, x1, #0x1
   1a730:	str	x0, [x21]
   1a734:	cbz	x0, 1a7e8 <PyFloat_FromString@plt+0x13d58>
   1a738:	ldr	x0, [x20]
   1a73c:	sub	x0, x0, #0x1
   1a740:	str	x0, [x20]
   1a744:	cbz	x0, 1a7d4 <PyFloat_FromString@plt+0x13d44>
   1a748:	mov	x0, x19
   1a74c:	ldp	x19, x20, [sp, #16]
   1a750:	ldp	x21, x22, [sp, #32]
   1a754:	ldp	x23, x24, [sp, #48]
   1a758:	ldr	x25, [sp, #64]
   1a75c:	ldp	x29, x30, [sp], #112
   1a760:	ret
   1a764:	mov	x0, x19
   1a768:	bl	65d0 <_Py_Dealloc@plt>
   1a76c:	b	1a6f0 <PyFloat_FromString@plt+0x13c60>
   1a770:	mov	x0, x23
   1a774:	bl	65d0 <_Py_Dealloc@plt>
   1a778:	b	1a700 <PyFloat_FromString@plt+0x13c70>
   1a77c:	mov	x1, x23
   1a780:	mov	x0, x21
   1a784:	mov	x2, x22
   1a788:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a78c:	mov	x23, x0
   1a790:	cbnz	x0, 1a650 <PyFloat_FromString@plt+0x13bc0>
   1a794:	b	1a62c <PyFloat_FromString@plt+0x13b9c>
   1a798:	ldr	x0, [x21]
   1a79c:	sub	x0, x0, #0x1
   1a7a0:	str	x0, [x21]
   1a7a4:	cbnz	x0, 1a5a0 <PyFloat_FromString@plt+0x13b10>
   1a7a8:	mov	x0, x21
   1a7ac:	bl	65d0 <_Py_Dealloc@plt>
   1a7b0:	b	1a5a0 <PyFloat_FromString@plt+0x13b10>
   1a7b4:	mov	x1, x19
   1a7b8:	mov	x0, x21
   1a7bc:	mov	x2, x22
   1a7c0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1a7c4:	mov	x19, x0
   1a7c8:	cbz	x0, 1a5b8 <PyFloat_FromString@plt+0x13b28>
   1a7cc:	stp	x23, x24, [sp, #48]
   1a7d0:	b	1a5e0 <PyFloat_FromString@plt+0x13b50>
   1a7d4:	mov	x0, x20
   1a7d8:	bl	65d0 <_Py_Dealloc@plt>
   1a7dc:	ldp	x23, x24, [sp, #48]
   1a7e0:	ldr	x25, [sp, #64]
   1a7e4:	b	1a5bc <PyFloat_FromString@plt+0x13b2c>
   1a7e8:	mov	x0, x21
   1a7ec:	bl	65d0 <_Py_Dealloc@plt>
   1a7f0:	b	1a738 <PyFloat_FromString@plt+0x13ca8>
   1a7f4:	ldr	x0, [x19]
   1a7f8:	sub	x0, x0, #0x1
   1a7fc:	str	x0, [x19]
   1a800:	cbz	x0, 1a83c <PyFloat_FromString@plt+0x13dac>
   1a804:	ldr	x0, [x23]
   1a808:	sub	x0, x0, #0x1
   1a80c:	str	x0, [x23]
   1a810:	cbnz	x0, 1a63c <PyFloat_FromString@plt+0x13bac>
   1a814:	mov	x0, x23
   1a818:	mov	x19, #0x0                   	// #0
   1a81c:	bl	65d0 <_Py_Dealloc@plt>
   1a820:	ldp	x23, x24, [sp, #48]
   1a824:	b	1a5bc <PyFloat_FromString@plt+0x13b2c>
   1a828:	mov	x0, x19
   1a82c:	mov	x19, #0x0                   	// #0
   1a830:	bl	65d0 <_Py_Dealloc@plt>
   1a834:	ldp	x23, x24, [sp, #48]
   1a838:	b	1a5bc <PyFloat_FromString@plt+0x13b2c>
   1a83c:	mov	x0, x19
   1a840:	bl	65d0 <_Py_Dealloc@plt>
   1a844:	b	1a804 <PyFloat_FromString@plt+0x13d74>
   1a848:	mov	x0, x20
   1a84c:	mov	x19, #0x0                   	// #0
   1a850:	bl	65d0 <_Py_Dealloc@plt>
   1a854:	ldp	x23, x24, [sp, #48]
   1a858:	ldr	x25, [sp, #64]
   1a85c:	b	1a5bc <PyFloat_FromString@plt+0x13b2c>
   1a860:	mov	x0, x19
   1a864:	bl	65d0 <_Py_Dealloc@plt>
   1a868:	b	1a584 <PyFloat_FromString@plt+0x13af4>
   1a86c:	nop
   1a870:	stp	x29, x30, [sp, #-144]!
   1a874:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   1a878:	add	x3, x3, #0x9b0
   1a87c:	mov	x29, sp
   1a880:	stp	x19, x20, [sp, #16]
   1a884:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a888:	mov	x20, x0
   1a88c:	stp	x21, x22, [sp, #32]
   1a890:	mov	x0, x1
   1a894:	add	x3, x3, #0x670
   1a898:	ldr	x22, [x19, #4008]
   1a89c:	mov	x1, x2
   1a8a0:	add	x6, sp, #0x50
   1a8a4:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a8a8:	add	x5, sp, #0x48
   1a8ac:	add	x2, x2, #0xf38
   1a8b0:	add	x4, sp, #0x58
   1a8b4:	str	wzr, [sp, #68]
   1a8b8:	stp	x22, x22, [sp, #72]
   1a8bc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1a8c0:	cbz	w0, 1aaec <PyFloat_FromString@plt+0x1405c>
   1a8c4:	ldr	x21, [sp, #80]
   1a8c8:	cmp	x21, x22
   1a8cc:	b.eq	1abe4 <PyFloat_FromString@plt+0x14154>  // b.none
   1a8d0:	ldr	x0, [x21, #8]
   1a8d4:	adrp	x1, 63000 <PyInit__decimal@@Base+0x46dc0>
   1a8d8:	add	x1, x1, #0x328
   1a8dc:	cmp	x0, x1
   1a8e0:	b.eq	1a9f4 <PyFloat_FromString@plt+0x13f64>  // b.none
   1a8e4:	bl	69c0 <PyType_IsSubtype@plt>
   1a8e8:	cbz	w0, 1acec <PyFloat_FromString@plt+0x1425c>
   1a8ec:	ldr	x21, [sp, #80]
   1a8f0:	str	x23, [sp, #48]
   1a8f4:	ldp	x2, x3, [x21, #16]
   1a8f8:	stp	x2, x3, [sp, #96]
   1a8fc:	ldp	x2, x3, [x21, #32]
   1a900:	stp	x2, x3, [sp, #112]
   1a904:	ldr	x1, [x19, #4008]
   1a908:	ldp	x2, x3, [x21, #48]
   1a90c:	stp	x2, x3, [sp, #128]
   1a910:	ldr	x19, [sp, #72]
   1a914:	cmp	x19, x1
   1a918:	b.eq	1aa14 <PyFloat_FromString@plt+0x13f84>  // b.none
   1a91c:	ldr	x0, [x19, #8]
   1a920:	ldr	x0, [x0, #168]
   1a924:	tbz	w0, #28, 1a9c0 <PyFloat_FromString@plt+0x13f30>
   1a928:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1a92c:	add	x2, x1, #0x7a0
   1a930:	add	x0, x2, #0x10
   1a934:	ldr	x2, [x2, #16]
   1a938:	cmp	x19, x2
   1a93c:	b.eq	1ad0c <PyFloat_FromString@plt+0x1427c>  // b.none
   1a940:	ldr	x2, [x0, #8]
   1a944:	cmp	x19, x2
   1a948:	b.eq	1ad14 <PyFloat_FromString@plt+0x14284>  // b.none
   1a94c:	ldr	x2, [x0, #16]
   1a950:	cmp	x19, x2
   1a954:	b.eq	1ad1c <PyFloat_FromString@plt+0x1428c>  // b.none
   1a958:	ldr	x2, [x0, #24]
   1a95c:	cmp	x19, x2
   1a960:	b.eq	1ad24 <PyFloat_FromString@plt+0x14294>  // b.none
   1a964:	ldr	x2, [x0, #32]
   1a968:	cmp	x19, x2
   1a96c:	b.eq	1ad2c <PyFloat_FromString@plt+0x1429c>  // b.none
   1a970:	ldr	x2, [x0, #40]
   1a974:	cmp	x19, x2
   1a978:	b.eq	1ad34 <PyFloat_FromString@plt+0x142a4>  // b.none
   1a97c:	ldr	x2, [x0, #48]
   1a980:	cmp	x19, x2
   1a984:	b.eq	1ad3c <PyFloat_FromString@plt+0x142ac>  // b.none
   1a988:	ldr	x0, [x0, #56]
   1a98c:	cmp	x19, x0
   1a990:	b.eq	1a9fc <PyFloat_FromString@plt+0x13f6c>  // b.none
   1a994:	add	x1, x1, #0x7a0
   1a998:	mov	x21, #0x0                   	// #0
   1a99c:	add	x22, x1, #0x10
   1a9a0:	ldr	x1, [x22, x21, lsl #3]
   1a9a4:	mov	w23, w21
   1a9a8:	mov	x0, x19
   1a9ac:	add	x21, x21, #0x1
   1a9b0:	bl	6900 <PyUnicode_Compare@plt>
   1a9b4:	cbz	w0, 1aa00 <PyFloat_FromString@plt+0x13f70>
   1a9b8:	cmp	x21, #0x8
   1a9bc:	b.ne	1a9a0 <PyFloat_FromString@plt+0x13f10>  // b.any
   1a9c0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1a9c4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1a9c8:	add	x1, x1, #0xa40
   1a9cc:	mov	x19, #0x0                   	// #0
   1a9d0:	ldr	x0, [x0, #3936]
   1a9d4:	ldr	x0, [x0]
   1a9d8:	bl	6650 <PyErr_SetString@plt>
   1a9dc:	ldr	x23, [sp, #48]
   1a9e0:	mov	x0, x19
   1a9e4:	ldp	x19, x20, [sp, #16]
   1a9e8:	ldp	x21, x22, [sp, #32]
   1a9ec:	ldp	x29, x30, [sp], #144
   1a9f0:	ret
   1a9f4:	str	x23, [sp, #48]
   1a9f8:	b	1a8f4 <PyFloat_FromString@plt+0x13e64>
   1a9fc:	mov	w23, #0x7                   	// #7
   1aa00:	mov	w1, w23
   1aa04:	add	x0, sp, #0x60
   1aa08:	bl	1f7c0 <PyInit__decimal@@Base+0x3580>
   1aa0c:	cbz	w0, 1acb0 <PyFloat_FromString@plt+0x14220>
   1aa10:	ldr	x21, [sp, #80]
   1aa14:	adrp	x22, 63000 <PyInit__decimal@@Base+0x46dc0>
   1aa18:	ldr	x0, [x20, #8]
   1aa1c:	add	x19, x22, #0x328
   1aa20:	add	x19, x19, #0x1a0
   1aa24:	cmp	x0, x19
   1aa28:	b.eq	1aa80 <PyFloat_FromString@plt+0x13ff0>  // b.none
   1aa2c:	mov	x1, x19
   1aa30:	bl	69c0 <PyType_IsSubtype@plt>
   1aa34:	cbnz	w0, 1aa7c <PyFloat_FromString@plt+0x13fec>
   1aa38:	ldr	x2, [x20, #8]
   1aa3c:	ldr	x0, [x2, #168]
   1aa40:	tbnz	w0, #24, 1abac <PyFloat_FromString@plt+0x1411c>
   1aa44:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1aa48:	mov	x19, #0x0                   	// #0
   1aa4c:	ldr	x2, [x2, #24]
   1aa50:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1aa54:	ldr	x0, [x0, #3936]
   1aa58:	add	x1, x1, #0xb70
   1aa5c:	ldr	x0, [x0]
   1aa60:	bl	6a10 <PyErr_Format@plt>
   1aa64:	mov	x0, x19
   1aa68:	ldp	x19, x20, [sp, #16]
   1aa6c:	ldp	x21, x22, [sp, #32]
   1aa70:	ldr	x23, [sp, #48]
   1aa74:	ldp	x29, x30, [sp], #144
   1aa78:	ret
   1aa7c:	ldr	x21, [sp, #80]
   1aa80:	ldr	x0, [x20]
   1aa84:	add	x0, x0, #0x1
   1aa88:	str	x0, [x20]
   1aa8c:	ldr	x23, [sp, #88]
   1aa90:	add	x19, x22, #0x328
   1aa94:	add	x19, x19, #0x1a0
   1aa98:	ldr	x0, [x23, #8]
   1aa9c:	cmp	x0, x19
   1aaa0:	b.eq	1ab04 <PyFloat_FromString@plt+0x14074>  // b.none
   1aaa4:	mov	x1, x19
   1aaa8:	bl	69c0 <PyType_IsSubtype@plt>
   1aaac:	cbnz	w0, 1ab04 <PyFloat_FromString@plt+0x14074>
   1aab0:	ldr	x2, [x23, #8]
   1aab4:	ldr	x0, [x2, #168]
   1aab8:	tbnz	w0, #24, 1ac2c <PyFloat_FromString@plt+0x1419c>
   1aabc:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1aac0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1aac4:	ldr	x2, [x2, #24]
   1aac8:	add	x1, x1, #0xb70
   1aacc:	ldr	x0, [x0, #3936]
   1aad0:	ldr	x0, [x0]
   1aad4:	bl	6a10 <PyErr_Format@plt>
   1aad8:	ldr	x0, [x20]
   1aadc:	sub	x0, x0, #0x1
   1aae0:	str	x0, [x20]
   1aae4:	cbz	x0, 1ac48 <PyFloat_FromString@plt+0x141b8>
   1aae8:	ldr	x23, [sp, #48]
   1aaec:	mov	x19, #0x0                   	// #0
   1aaf0:	mov	x0, x19
   1aaf4:	ldp	x19, x20, [sp, #16]
   1aaf8:	ldp	x21, x22, [sp, #32]
   1aafc:	ldp	x29, x30, [sp], #144
   1ab00:	ret
   1ab04:	ldr	x1, [x23]
   1ab08:	add	x1, x1, #0x1
   1ab0c:	str	x1, [x23]
   1ab10:	add	x22, x22, #0x328
   1ab14:	add	x0, x22, #0x1a0
   1ab18:	bl	6950 <_PyObject_New@plt>
   1ab1c:	mov	x19, x0
   1ab20:	cbz	x0, 1ac5c <PyFloat_FromString@plt+0x141cc>
   1ab24:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1ab28:	mov	x2, #0xffffffffffffffff    	// #-1
   1ab2c:	mov	w1, #0x30                  	// #48
   1ab30:	str	x2, [x19, #16]
   1ab34:	ldr	q0, [x0, #2128]
   1ab38:	add	x0, x19, #0x48
   1ab3c:	strb	w1, [x19, #24]
   1ab40:	add	x4, sp, #0x44
   1ab44:	stp	xzr, xzr, [x19, #32]
   1ab48:	add	x1, x20, #0x18
   1ab4c:	add	x3, sp, #0x60
   1ab50:	str	x0, [x19, #64]
   1ab54:	add	x2, x23, #0x18
   1ab58:	add	x0, x19, #0x18
   1ab5c:	str	q0, [x19, #48]
   1ab60:	bl	3b660 <PyInit__decimal@@Base+0x1f420>
   1ab64:	ldr	x1, [x20]
   1ab68:	sub	x1, x1, #0x1
   1ab6c:	str	x1, [x20]
   1ab70:	cbz	x1, 1abcc <PyFloat_FromString@plt+0x1413c>
   1ab74:	ldr	x1, [x23]
   1ab78:	sub	x1, x1, #0x1
   1ab7c:	str	x1, [x23]
   1ab80:	cbz	x1, 1abd8 <PyFloat_FromString@plt+0x14148>
   1ab84:	ldr	w1, [sp, #68]
   1ab88:	ldr	x0, [sp, #80]
   1ab8c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1ab90:	cbnz	w0, 1ac8c <PyFloat_FromString@plt+0x141fc>
   1ab94:	mov	x0, x19
   1ab98:	ldp	x19, x20, [sp, #16]
   1ab9c:	ldp	x21, x22, [sp, #32]
   1aba0:	ldr	x23, [sp, #48]
   1aba4:	ldp	x29, x30, [sp], #144
   1aba8:	ret
   1abac:	mov	x1, x20
   1abb0:	mov	x2, x21
   1abb4:	mov	x0, x19
   1abb8:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1abbc:	mov	x20, x0
   1abc0:	cbz	x0, 1aae8 <PyFloat_FromString@plt+0x14058>
   1abc4:	ldr	x21, [sp, #80]
   1abc8:	b	1aa8c <PyFloat_FromString@plt+0x13ffc>
   1abcc:	mov	x0, x20
   1abd0:	bl	65d0 <_Py_Dealloc@plt>
   1abd4:	b	1ab74 <PyFloat_FromString@plt+0x140e4>
   1abd8:	mov	x0, x23
   1abdc:	bl	65d0 <_Py_Dealloc@plt>
   1abe0:	b	1ab84 <PyFloat_FromString@plt+0x140f4>
   1abe4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   1abe8:	add	x2, sp, #0x60
   1abec:	mov	x1, #0x0                   	// #0
   1abf0:	ldr	x0, [x0, #2056]
   1abf4:	bl	6740 <PyContextVar_Get@plt>
   1abf8:	tbnz	w0, #31, 1aaec <PyFloat_FromString@plt+0x1405c>
   1abfc:	ldr	x21, [sp, #96]
   1ac00:	cbz	x21, 1acd4 <PyFloat_FromString@plt+0x14244>
   1ac04:	str	x23, [sp, #48]
   1ac08:	str	x21, [sp, #80]
   1ac0c:	ldr	x0, [x21]
   1ac10:	sub	x0, x0, #0x1
   1ac14:	str	x0, [x21]
   1ac18:	cbnz	x0, 1a8f4 <PyFloat_FromString@plt+0x13e64>
   1ac1c:	mov	x0, x21
   1ac20:	bl	65d0 <_Py_Dealloc@plt>
   1ac24:	ldr	x21, [sp, #80]
   1ac28:	b	1a8f4 <PyFloat_FromString@plt+0x13e64>
   1ac2c:	mov	x1, x23
   1ac30:	mov	x2, x21
   1ac34:	mov	x0, x19
   1ac38:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1ac3c:	mov	x23, x0
   1ac40:	cbnz	x0, 1ab10 <PyFloat_FromString@plt+0x14080>
   1ac44:	b	1aad8 <PyFloat_FromString@plt+0x14048>
   1ac48:	mov	x0, x20
   1ac4c:	mov	x19, #0x0                   	// #0
   1ac50:	bl	65d0 <_Py_Dealloc@plt>
   1ac54:	ldr	x23, [sp, #48]
   1ac58:	b	1a9e0 <PyFloat_FromString@plt+0x13f50>
   1ac5c:	ldr	x0, [x20]
   1ac60:	sub	x0, x0, #0x1
   1ac64:	str	x0, [x20]
   1ac68:	cbz	x0, 1ad44 <PyFloat_FromString@plt+0x142b4>
   1ac6c:	ldr	x0, [x23]
   1ac70:	sub	x0, x0, #0x1
   1ac74:	str	x0, [x23]
   1ac78:	cbnz	x0, 1aae8 <PyFloat_FromString@plt+0x14058>
   1ac7c:	mov	x0, x23
   1ac80:	bl	65d0 <_Py_Dealloc@plt>
   1ac84:	ldr	x23, [sp, #48]
   1ac88:	b	1a9e0 <PyFloat_FromString@plt+0x13f50>
   1ac8c:	ldr	x0, [x19]
   1ac90:	sub	x0, x0, #0x1
   1ac94:	str	x0, [x19]
   1ac98:	cbnz	x0, 1aae8 <PyFloat_FromString@plt+0x14058>
   1ac9c:	mov	x0, x19
   1aca0:	mov	x19, #0x0                   	// #0
   1aca4:	bl	65d0 <_Py_Dealloc@plt>
   1aca8:	ldr	x23, [sp, #48]
   1acac:	b	1a9e0 <PyFloat_FromString@plt+0x13f50>
   1acb0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1acb4:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1acb8:	mov	x19, #0x0                   	// #0
   1acbc:	add	x1, x1, #0xf40
   1acc0:	ldr	x0, [x0, #3920]
   1acc4:	ldr	x0, [x0]
   1acc8:	bl	6650 <PyErr_SetString@plt>
   1accc:	ldr	x23, [sp, #48]
   1acd0:	b	1a9e0 <PyFloat_FromString@plt+0x13f50>
   1acd4:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   1acd8:	str	x0, [sp, #80]
   1acdc:	mov	x21, x0
   1ace0:	cbz	x0, 1aaec <PyFloat_FromString@plt+0x1405c>
   1ace4:	str	x23, [sp, #48]
   1ace8:	b	1ac0c <PyFloat_FromString@plt+0x1417c>
   1acec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1acf0:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1acf4:	mov	x19, #0x0                   	// #0
   1acf8:	add	x1, x1, #0xba8
   1acfc:	ldr	x0, [x0, #3936]
   1ad00:	ldr	x0, [x0]
   1ad04:	bl	6650 <PyErr_SetString@plt>
   1ad08:	b	1a9e0 <PyFloat_FromString@plt+0x13f50>
   1ad0c:	mov	w23, #0x0                   	// #0
   1ad10:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad14:	mov	w23, #0x1                   	// #1
   1ad18:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad1c:	mov	w23, #0x2                   	// #2
   1ad20:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad24:	mov	w23, #0x3                   	// #3
   1ad28:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad2c:	mov	w23, #0x4                   	// #4
   1ad30:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad34:	mov	w23, #0x5                   	// #5
   1ad38:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad3c:	mov	w23, #0x6                   	// #6
   1ad40:	b	1aa00 <PyFloat_FromString@plt+0x13f70>
   1ad44:	mov	x0, x20
   1ad48:	bl	65d0 <_Py_Dealloc@plt>
   1ad4c:	b	1ac6c <PyFloat_FromString@plt+0x141dc>
   1ad50:	stp	x29, x30, [sp, #-96]!
   1ad54:	mov	x29, sp
   1ad58:	add	x4, sp, #0x58
   1ad5c:	add	x3, sp, #0x50
   1ad60:	add	x2, sp, #0x48
   1ad64:	stp	x19, x20, [sp, #16]
   1ad68:	stp	x21, x22, [sp, #32]
   1ad6c:	mov	x21, x0
   1ad70:	mov	x0, x1
   1ad74:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1ad78:	add	x1, x1, #0xf68
   1ad7c:	str	wzr, [sp, #68]
   1ad80:	bl	68e0 <PyArg_ParseTuple@plt>
   1ad84:	cbz	w0, 1ae74 <PyFloat_FromString@plt+0x143e4>
   1ad88:	ldr	x19, [sp, #72]
   1ad8c:	stp	x23, x24, [sp, #48]
   1ad90:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1ad94:	add	x20, x23, #0x328
   1ad98:	ldr	x0, [x19, #8]
   1ad9c:	add	x20, x20, #0x1a0
   1ada0:	cmp	x0, x20
   1ada4:	b.eq	1ae8c <PyFloat_FromString@plt+0x143fc>  // b.none
   1ada8:	mov	x1, x20
   1adac:	bl	69c0 <PyType_IsSubtype@plt>
   1adb0:	cbnz	w0, 1ae8c <PyFloat_FromString@plt+0x143fc>
   1adb4:	ldr	x2, [x19, #8]
   1adb8:	ldr	x0, [x2, #168]
   1adbc:	tbnz	w0, #24, 1afe0 <PyFloat_FromString@plt+0x14550>
   1adc0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1adc4:	mov	x20, #0x0                   	// #0
   1adc8:	ldr	x2, [x2, #24]
   1adcc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1add0:	ldr	x0, [x0, #3936]
   1add4:	add	x1, x1, #0xb70
   1add8:	ldr	x0, [x0]
   1addc:	bl	6a10 <PyErr_Format@plt>
   1ade0:	mov	x0, x20
   1ade4:	ldp	x19, x20, [sp, #16]
   1ade8:	ldp	x21, x22, [sp, #32]
   1adec:	ldp	x23, x24, [sp, #48]
   1adf0:	ldp	x29, x30, [sp], #96
   1adf4:	ret
   1adf8:	ldr	x0, [x22]
   1adfc:	add	x0, x0, #0x1
   1ae00:	str	x0, [x22]
   1ae04:	ldr	x24, [sp, #88]
   1ae08:	add	x20, x23, #0x328
   1ae0c:	add	x20, x20, #0x1a0
   1ae10:	ldr	x0, [x24, #8]
   1ae14:	cmp	x0, x20
   1ae18:	b.eq	1af08 <PyFloat_FromString@plt+0x14478>  // b.none
   1ae1c:	mov	x1, x20
   1ae20:	bl	69c0 <PyType_IsSubtype@plt>
   1ae24:	cbnz	w0, 1af08 <PyFloat_FromString@plt+0x14478>
   1ae28:	ldr	x2, [x24, #8]
   1ae2c:	ldr	x0, [x2, #168]
   1ae30:	tbnz	w0, #24, 1b024 <PyFloat_FromString@plt+0x14594>
   1ae34:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1ae38:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1ae3c:	ldr	x2, [x2, #24]
   1ae40:	add	x1, x1, #0xb70
   1ae44:	ldr	x0, [x0, #3936]
   1ae48:	ldr	x0, [x0]
   1ae4c:	bl	6a10 <PyErr_Format@plt>
   1ae50:	ldr	x0, [x19]
   1ae54:	sub	x0, x0, #0x1
   1ae58:	str	x0, [x19]
   1ae5c:	cbz	x0, 1b0b8 <PyFloat_FromString@plt+0x14628>
   1ae60:	ldr	x0, [x22]
   1ae64:	sub	x0, x0, #0x1
   1ae68:	str	x0, [x22]
   1ae6c:	cbz	x0, 1b040 <PyFloat_FromString@plt+0x145b0>
   1ae70:	ldp	x23, x24, [sp, #48]
   1ae74:	mov	x20, #0x0                   	// #0
   1ae78:	mov	x0, x20
   1ae7c:	ldp	x19, x20, [sp, #16]
   1ae80:	ldp	x21, x22, [sp, #32]
   1ae84:	ldp	x29, x30, [sp], #96
   1ae88:	ret
   1ae8c:	ldr	x0, [x19]
   1ae90:	add	x0, x0, #0x1
   1ae94:	str	x0, [x19]
   1ae98:	ldr	x22, [sp, #80]
   1ae9c:	add	x20, x23, #0x328
   1aea0:	add	x20, x20, #0x1a0
   1aea4:	ldr	x0, [x22, #8]
   1aea8:	cmp	x0, x20
   1aeac:	b.eq	1adf8 <PyFloat_FromString@plt+0x14368>  // b.none
   1aeb0:	mov	x1, x20
   1aeb4:	bl	69c0 <PyType_IsSubtype@plt>
   1aeb8:	cbnz	w0, 1adf8 <PyFloat_FromString@plt+0x14368>
   1aebc:	ldr	x2, [x22, #8]
   1aec0:	ldr	x0, [x2, #168]
   1aec4:	tbnz	w0, #24, 1afc4 <PyFloat_FromString@plt+0x14534>
   1aec8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1aecc:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1aed0:	ldr	x2, [x2, #24]
   1aed4:	add	x1, x1, #0xb70
   1aed8:	ldr	x0, [x0, #3936]
   1aedc:	ldr	x0, [x0]
   1aee0:	bl	6a10 <PyErr_Format@plt>
   1aee4:	ldr	x0, [x19]
   1aee8:	sub	x0, x0, #0x1
   1aeec:	str	x0, [x19]
   1aef0:	cbnz	x0, 1ae70 <PyFloat_FromString@plt+0x143e0>
   1aef4:	mov	x0, x19
   1aef8:	mov	x20, #0x0                   	// #0
   1aefc:	bl	65d0 <_Py_Dealloc@plt>
   1af00:	ldp	x23, x24, [sp, #48]
   1af04:	b	1ae78 <PyFloat_FromString@plt+0x143e8>
   1af08:	ldr	x1, [x24]
   1af0c:	add	x1, x1, #0x1
   1af10:	str	x1, [x24]
   1af14:	add	x23, x23, #0x328
   1af18:	add	x0, x23, #0x1a0
   1af1c:	bl	6950 <_PyObject_New@plt>
   1af20:	mov	x20, x0
   1af24:	cbz	x0, 1b054 <PyFloat_FromString@plt+0x145c4>
   1af28:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1af2c:	mov	x2, #0xffffffffffffffff    	// #-1
   1af30:	mov	w1, #0x30                  	// #48
   1af34:	str	x2, [x20, #16]
   1af38:	ldr	q0, [x0, #2128]
   1af3c:	add	x0, x20, #0x48
   1af40:	strb	w1, [x20, #24]
   1af44:	add	x5, sp, #0x44
   1af48:	stp	xzr, xzr, [x20, #32]
   1af4c:	add	x1, x19, #0x18
   1af50:	add	x4, x21, #0x10
   1af54:	str	x0, [x20, #64]
   1af58:	add	x3, x24, #0x18
   1af5c:	add	x2, x22, #0x18
   1af60:	add	x0, x20, #0x18
   1af64:	str	q0, [x20, #48]
   1af68:	bl	370c0 <PyInit__decimal@@Base+0x1ae80>
   1af6c:	ldr	x1, [x19]
   1af70:	sub	x1, x1, #0x1
   1af74:	str	x1, [x19]
   1af78:	cbz	x1, 1b018 <PyFloat_FromString@plt+0x14588>
   1af7c:	ldr	x1, [x22]
   1af80:	sub	x1, x1, #0x1
   1af84:	str	x1, [x22]
   1af88:	cbz	x1, 1b00c <PyFloat_FromString@plt+0x1457c>
   1af8c:	ldr	x1, [x24]
   1af90:	sub	x1, x1, #0x1
   1af94:	str	x1, [x24]
   1af98:	cbz	x1, 1b000 <PyFloat_FromString@plt+0x14570>
   1af9c:	ldr	w1, [sp, #68]
   1afa0:	mov	x0, x21
   1afa4:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1afa8:	cbnz	w0, 1b094 <PyFloat_FromString@plt+0x14604>
   1afac:	mov	x0, x20
   1afb0:	ldp	x19, x20, [sp, #16]
   1afb4:	ldp	x21, x22, [sp, #32]
   1afb8:	ldp	x23, x24, [sp, #48]
   1afbc:	ldp	x29, x30, [sp], #96
   1afc0:	ret
   1afc4:	mov	x1, x22
   1afc8:	mov	x0, x20
   1afcc:	mov	x2, x21
   1afd0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1afd4:	mov	x22, x0
   1afd8:	cbnz	x0, 1ae04 <PyFloat_FromString@plt+0x14374>
   1afdc:	b	1aee4 <PyFloat_FromString@plt+0x14454>
   1afe0:	mov	x1, x19
   1afe4:	mov	x0, x20
   1afe8:	mov	x2, x21
   1afec:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1aff0:	mov	x19, x0
   1aff4:	cbnz	x0, 1ae98 <PyFloat_FromString@plt+0x14408>
   1aff8:	ldp	x23, x24, [sp, #48]
   1affc:	b	1ae74 <PyFloat_FromString@plt+0x143e4>
   1b000:	mov	x0, x24
   1b004:	bl	65d0 <_Py_Dealloc@plt>
   1b008:	b	1af9c <PyFloat_FromString@plt+0x1450c>
   1b00c:	mov	x0, x22
   1b010:	bl	65d0 <_Py_Dealloc@plt>
   1b014:	b	1af8c <PyFloat_FromString@plt+0x144fc>
   1b018:	mov	x0, x19
   1b01c:	bl	65d0 <_Py_Dealloc@plt>
   1b020:	b	1af7c <PyFloat_FromString@plt+0x144ec>
   1b024:	mov	x1, x24
   1b028:	mov	x0, x20
   1b02c:	mov	x2, x21
   1b030:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b034:	mov	x24, x0
   1b038:	cbnz	x0, 1af14 <PyFloat_FromString@plt+0x14484>
   1b03c:	b	1ae50 <PyFloat_FromString@plt+0x143c0>
   1b040:	mov	x0, x22
   1b044:	mov	x20, #0x0                   	// #0
   1b048:	bl	65d0 <_Py_Dealloc@plt>
   1b04c:	ldp	x23, x24, [sp, #48]
   1b050:	b	1ae78 <PyFloat_FromString@plt+0x143e8>
   1b054:	ldr	x0, [x19]
   1b058:	sub	x0, x0, #0x1
   1b05c:	str	x0, [x19]
   1b060:	cbz	x0, 1b0d0 <PyFloat_FromString@plt+0x14640>
   1b064:	ldr	x0, [x22]
   1b068:	sub	x0, x0, #0x1
   1b06c:	str	x0, [x22]
   1b070:	cbz	x0, 1b0c4 <PyFloat_FromString@plt+0x14634>
   1b074:	ldr	x0, [x24]
   1b078:	sub	x0, x0, #0x1
   1b07c:	str	x0, [x24]
   1b080:	cbnz	x0, 1ae70 <PyFloat_FromString@plt+0x143e0>
   1b084:	mov	x0, x24
   1b088:	bl	65d0 <_Py_Dealloc@plt>
   1b08c:	ldp	x23, x24, [sp, #48]
   1b090:	b	1ae78 <PyFloat_FromString@plt+0x143e8>
   1b094:	ldr	x0, [x20]
   1b098:	sub	x0, x0, #0x1
   1b09c:	str	x0, [x20]
   1b0a0:	cbnz	x0, 1ae70 <PyFloat_FromString@plt+0x143e0>
   1b0a4:	mov	x0, x20
   1b0a8:	mov	x20, #0x0                   	// #0
   1b0ac:	bl	65d0 <_Py_Dealloc@plt>
   1b0b0:	ldp	x23, x24, [sp, #48]
   1b0b4:	b	1ae78 <PyFloat_FromString@plt+0x143e8>
   1b0b8:	mov	x0, x19
   1b0bc:	bl	65d0 <_Py_Dealloc@plt>
   1b0c0:	b	1ae60 <PyFloat_FromString@plt+0x143d0>
   1b0c4:	mov	x0, x22
   1b0c8:	bl	65d0 <_Py_Dealloc@plt>
   1b0cc:	b	1b074 <PyFloat_FromString@plt+0x145e4>
   1b0d0:	mov	x0, x19
   1b0d4:	bl	65d0 <_Py_Dealloc@plt>
   1b0d8:	b	1b064 <PyFloat_FromString@plt+0x145d4>
   1b0dc:	nop
   1b0e0:	stp	x29, x30, [sp, #-112]!
   1b0e4:	adrp	x3, 63000 <PyInit__decimal@@Base+0x46dc0>
   1b0e8:	add	x3, x3, #0x9b0
   1b0ec:	mov	x29, sp
   1b0f0:	stp	x19, x20, [sp, #16]
   1b0f4:	adrp	x20, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b0f8:	mov	x19, x0
   1b0fc:	ldr	x20, [x20, #4008]
   1b100:	mov	x0, x1
   1b104:	add	x3, x3, #0x690
   1b108:	mov	x1, x2
   1b10c:	add	x6, sp, #0x60
   1b110:	adrp	x2, 41000 <PyInit__decimal@@Base+0x24dc0>
   1b114:	add	x5, sp, #0x58
   1b118:	add	x2, x2, #0xf28
   1b11c:	add	x4, sp, #0x50
   1b120:	str	wzr, [sp, #76]
   1b124:	str	x20, [sp, #96]
   1b128:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1b12c:	cbz	w0, 1b244 <PyFloat_FromString@plt+0x147b4>
   1b130:	stp	x21, x22, [sp, #32]
   1b134:	ldr	x21, [sp, #96]
   1b138:	cmp	x21, x20
   1b13c:	b.eq	1b3ec <PyFloat_FromString@plt+0x1495c>  // b.none
   1b140:	ldr	x0, [x21, #8]
   1b144:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   1b148:	add	x1, x20, #0x328
   1b14c:	cmp	x0, x1
   1b150:	b.eq	1b160 <PyFloat_FromString@plt+0x146d0>  // b.none
   1b154:	bl	69c0 <PyType_IsSubtype@plt>
   1b158:	cbz	w0, 1b520 <PyFloat_FromString@plt+0x14a90>
   1b15c:	ldr	x21, [sp, #96]
   1b160:	add	x22, x20, #0x328
   1b164:	ldr	x0, [x19, #8]
   1b168:	add	x22, x22, #0x1a0
   1b16c:	cmp	x0, x22
   1b170:	b.eq	1b258 <PyFloat_FromString@plt+0x147c8>  // b.none
   1b174:	mov	x1, x22
   1b178:	bl	69c0 <PyType_IsSubtype@plt>
   1b17c:	cbnz	w0, 1b39c <PyFloat_FromString@plt+0x1490c>
   1b180:	ldr	x2, [x19, #8]
   1b184:	ldr	x0, [x2, #168]
   1b188:	tbnz	w0, #24, 1b434 <PyFloat_FromString@plt+0x149a4>
   1b18c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b190:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1b194:	ldr	x2, [x2, #24]
   1b198:	add	x1, x1, #0xb70
   1b19c:	ldr	x0, [x0, #3936]
   1b1a0:	mov	x20, #0x0                   	// #0
   1b1a4:	ldr	x0, [x0]
   1b1a8:	bl	6a10 <PyErr_Format@plt>
   1b1ac:	ldp	x21, x22, [sp, #32]
   1b1b0:	mov	x0, x20
   1b1b4:	ldp	x19, x20, [sp, #16]
   1b1b8:	ldp	x29, x30, [sp], #112
   1b1bc:	ret
   1b1c0:	ldr	x21, [sp, #96]
   1b1c4:	ldr	x0, [x23]
   1b1c8:	add	x0, x0, #0x1
   1b1cc:	str	x0, [x23]
   1b1d0:	ldr	x24, [sp, #88]
   1b1d4:	add	x22, x20, #0x328
   1b1d8:	add	x22, x22, #0x1a0
   1b1dc:	ldr	x0, [x24, #8]
   1b1e0:	cmp	x0, x22
   1b1e4:	b.eq	1b2dc <PyFloat_FromString@plt+0x1484c>  // b.none
   1b1e8:	mov	x1, x22
   1b1ec:	bl	69c0 <PyType_IsSubtype@plt>
   1b1f0:	cbnz	w0, 1b2dc <PyFloat_FromString@plt+0x1484c>
   1b1f4:	ldr	x2, [x24, #8]
   1b1f8:	ldr	x0, [x2, #168]
   1b1fc:	tbnz	w0, #24, 1b458 <PyFloat_FromString@plt+0x149c8>
   1b200:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b204:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1b208:	ldr	x2, [x2, #24]
   1b20c:	add	x1, x1, #0xb70
   1b210:	ldr	x0, [x0, #3936]
   1b214:	ldr	x0, [x0]
   1b218:	bl	6a10 <PyErr_Format@plt>
   1b21c:	ldr	x0, [x19]
   1b220:	sub	x0, x0, #0x1
   1b224:	str	x0, [x19]
   1b228:	cbz	x0, 1b514 <PyFloat_FromString@plt+0x14a84>
   1b22c:	ldr	x0, [x23]
   1b230:	sub	x0, x0, #0x1
   1b234:	str	x0, [x23]
   1b238:	cbz	x0, 1b4fc <PyFloat_FromString@plt+0x14a6c>
   1b23c:	ldp	x21, x22, [sp, #32]
   1b240:	ldp	x23, x24, [sp, #48]
   1b244:	mov	x20, #0x0                   	// #0
   1b248:	mov	x0, x20
   1b24c:	ldp	x19, x20, [sp, #16]
   1b250:	ldp	x29, x30, [sp], #112
   1b254:	ret
   1b258:	stp	x23, x24, [sp, #48]
   1b25c:	ldr	x0, [x19]
   1b260:	add	x0, x0, #0x1
   1b264:	str	x0, [x19]
   1b268:	ldr	x23, [sp, #80]
   1b26c:	add	x22, x20, #0x328
   1b270:	add	x22, x22, #0x1a0
   1b274:	ldr	x0, [x23, #8]
   1b278:	cmp	x0, x22
   1b27c:	b.eq	1b1c4 <PyFloat_FromString@plt+0x14734>  // b.none
   1b280:	mov	x1, x22
   1b284:	bl	69c0 <PyType_IsSubtype@plt>
   1b288:	cbnz	w0, 1b1c0 <PyFloat_FromString@plt+0x14730>
   1b28c:	ldr	x2, [x23, #8]
   1b290:	ldr	x0, [x2, #168]
   1b294:	tbnz	w0, #24, 1b3a8 <PyFloat_FromString@plt+0x14918>
   1b298:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b29c:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1b2a0:	ldr	x2, [x2, #24]
   1b2a4:	add	x1, x1, #0xb70
   1b2a8:	ldr	x0, [x0, #3936]
   1b2ac:	ldr	x0, [x0]
   1b2b0:	bl	6a10 <PyErr_Format@plt>
   1b2b4:	ldr	x0, [x19]
   1b2b8:	sub	x0, x0, #0x1
   1b2bc:	str	x0, [x19]
   1b2c0:	cbnz	x0, 1b23c <PyFloat_FromString@plt+0x147ac>
   1b2c4:	mov	x0, x19
   1b2c8:	mov	x20, #0x0                   	// #0
   1b2cc:	bl	65d0 <_Py_Dealloc@plt>
   1b2d0:	ldp	x21, x22, [sp, #32]
   1b2d4:	ldp	x23, x24, [sp, #48]
   1b2d8:	b	1b1b0 <PyFloat_FromString@plt+0x14720>
   1b2dc:	ldr	x0, [x24]
   1b2e0:	add	x0, x0, #0x1
   1b2e4:	str	x0, [x24]
   1b2e8:	add	x20, x20, #0x328
   1b2ec:	add	x0, x20, #0x1a0
   1b2f0:	bl	6950 <_PyObject_New@plt>
   1b2f4:	mov	x20, x0
   1b2f8:	cbz	x0, 1b49c <PyFloat_FromString@plt+0x14a0c>
   1b2fc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1b300:	mov	x2, #0xffffffffffffffff    	// #-1
   1b304:	ldr	x4, [sp, #96]
   1b308:	mov	w1, #0x30                  	// #48
   1b30c:	ldr	q0, [x0, #2128]
   1b310:	add	x0, x20, #0x48
   1b314:	str	x2, [x20, #16]
   1b318:	add	x5, sp, #0x4c
   1b31c:	strb	w1, [x20, #24]
   1b320:	add	x3, x24, #0x18
   1b324:	stp	xzr, xzr, [x20, #32]
   1b328:	add	x1, x19, #0x18
   1b32c:	add	x4, x4, #0x10
   1b330:	str	x0, [x20, #64]
   1b334:	add	x2, x23, #0x18
   1b338:	add	x0, x20, #0x18
   1b33c:	str	q0, [x20, #48]
   1b340:	bl	370c0 <PyInit__decimal@@Base+0x1ae80>
   1b344:	ldr	x0, [x19]
   1b348:	sub	x0, x0, #0x1
   1b34c:	str	x0, [x19]
   1b350:	cbz	x0, 1b3c8 <PyFloat_FromString@plt+0x14938>
   1b354:	ldr	x0, [x23]
   1b358:	sub	x0, x0, #0x1
   1b35c:	str	x0, [x23]
   1b360:	cbz	x0, 1b3e0 <PyFloat_FromString@plt+0x14950>
   1b364:	ldr	x0, [x24]
   1b368:	sub	x0, x0, #0x1
   1b36c:	str	x0, [x24]
   1b370:	cbz	x0, 1b3d4 <PyFloat_FromString@plt+0x14944>
   1b374:	ldr	w1, [sp, #76]
   1b378:	ldr	x0, [sp, #96]
   1b37c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1b380:	cbnz	w0, 1b474 <PyFloat_FromString@plt+0x149e4>
   1b384:	mov	x0, x20
   1b388:	ldp	x19, x20, [sp, #16]
   1b38c:	ldp	x21, x22, [sp, #32]
   1b390:	ldp	x23, x24, [sp, #48]
   1b394:	ldp	x29, x30, [sp], #112
   1b398:	ret
   1b39c:	stp	x23, x24, [sp, #48]
   1b3a0:	ldr	x21, [sp, #96]
   1b3a4:	b	1b25c <PyFloat_FromString@plt+0x147cc>
   1b3a8:	mov	x1, x23
   1b3ac:	mov	x2, x21
   1b3b0:	mov	x0, x22
   1b3b4:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b3b8:	mov	x23, x0
   1b3bc:	cbz	x0, 1b2b4 <PyFloat_FromString@plt+0x14824>
   1b3c0:	ldr	x21, [sp, #96]
   1b3c4:	b	1b1d0 <PyFloat_FromString@plt+0x14740>
   1b3c8:	mov	x0, x19
   1b3cc:	bl	65d0 <_Py_Dealloc@plt>
   1b3d0:	b	1b354 <PyFloat_FromString@plt+0x148c4>
   1b3d4:	mov	x0, x24
   1b3d8:	bl	65d0 <_Py_Dealloc@plt>
   1b3dc:	b	1b374 <PyFloat_FromString@plt+0x148e4>
   1b3e0:	mov	x0, x23
   1b3e4:	bl	65d0 <_Py_Dealloc@plt>
   1b3e8:	b	1b364 <PyFloat_FromString@plt+0x148d4>
   1b3ec:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   1b3f0:	add	x2, sp, #0x68
   1b3f4:	mov	x1, #0x0                   	// #0
   1b3f8:	ldr	x0, [x0, #2056]
   1b3fc:	bl	6740 <PyContextVar_Get@plt>
   1b400:	tbnz	w0, #31, 1b544 <PyFloat_FromString@plt+0x14ab4>
   1b404:	ldr	x21, [sp, #104]
   1b408:	cbz	x21, 1b4e0 <PyFloat_FromString@plt+0x14a50>
   1b40c:	str	x21, [sp, #96]
   1b410:	ldr	x0, [x21]
   1b414:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   1b418:	sub	x0, x0, #0x1
   1b41c:	str	x0, [x21]
   1b420:	cbnz	x0, 1b160 <PyFloat_FromString@plt+0x146d0>
   1b424:	mov	x0, x21
   1b428:	bl	65d0 <_Py_Dealloc@plt>
   1b42c:	ldr	x21, [sp, #96]
   1b430:	b	1b160 <PyFloat_FromString@plt+0x146d0>
   1b434:	mov	x1, x19
   1b438:	mov	x2, x21
   1b43c:	mov	x0, x22
   1b440:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b444:	mov	x19, x0
   1b448:	cbz	x0, 1b4f0 <PyFloat_FromString@plt+0x14a60>
   1b44c:	stp	x23, x24, [sp, #48]
   1b450:	ldr	x21, [sp, #96]
   1b454:	b	1b268 <PyFloat_FromString@plt+0x147d8>
   1b458:	mov	x1, x24
   1b45c:	mov	x2, x21
   1b460:	mov	x0, x22
   1b464:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b468:	mov	x24, x0
   1b46c:	cbnz	x0, 1b2e8 <PyFloat_FromString@plt+0x14858>
   1b470:	b	1b21c <PyFloat_FromString@plt+0x1478c>
   1b474:	ldr	x0, [x20]
   1b478:	sub	x0, x0, #0x1
   1b47c:	str	x0, [x20]
   1b480:	cbnz	x0, 1b23c <PyFloat_FromString@plt+0x147ac>
   1b484:	mov	x0, x20
   1b488:	mov	x20, #0x0                   	// #0
   1b48c:	bl	65d0 <_Py_Dealloc@plt>
   1b490:	ldp	x21, x22, [sp, #32]
   1b494:	ldp	x23, x24, [sp, #48]
   1b498:	b	1b1b0 <PyFloat_FromString@plt+0x14720>
   1b49c:	ldr	x0, [x19]
   1b4a0:	sub	x0, x0, #0x1
   1b4a4:	str	x0, [x19]
   1b4a8:	cbz	x0, 1b55c <PyFloat_FromString@plt+0x14acc>
   1b4ac:	ldr	x0, [x23]
   1b4b0:	sub	x0, x0, #0x1
   1b4b4:	str	x0, [x23]
   1b4b8:	cbz	x0, 1b550 <PyFloat_FromString@plt+0x14ac0>
   1b4bc:	ldr	x0, [x24]
   1b4c0:	sub	x0, x0, #0x1
   1b4c4:	str	x0, [x24]
   1b4c8:	cbnz	x0, 1b23c <PyFloat_FromString@plt+0x147ac>
   1b4cc:	mov	x0, x24
   1b4d0:	bl	65d0 <_Py_Dealloc@plt>
   1b4d4:	ldp	x21, x22, [sp, #32]
   1b4d8:	ldp	x23, x24, [sp, #48]
   1b4dc:	b	1b1b0 <PyFloat_FromString@plt+0x14720>
   1b4e0:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   1b4e4:	str	x0, [sp, #96]
   1b4e8:	mov	x21, x0
   1b4ec:	cbnz	x0, 1b410 <PyFloat_FromString@plt+0x14980>
   1b4f0:	mov	x20, #0x0                   	// #0
   1b4f4:	ldp	x21, x22, [sp, #32]
   1b4f8:	b	1b248 <PyFloat_FromString@plt+0x147b8>
   1b4fc:	mov	x0, x23
   1b500:	mov	x20, #0x0                   	// #0
   1b504:	bl	65d0 <_Py_Dealloc@plt>
   1b508:	ldp	x21, x22, [sp, #32]
   1b50c:	ldp	x23, x24, [sp, #48]
   1b510:	b	1b1b0 <PyFloat_FromString@plt+0x14720>
   1b514:	mov	x0, x19
   1b518:	bl	65d0 <_Py_Dealloc@plt>
   1b51c:	b	1b22c <PyFloat_FromString@plt+0x1479c>
   1b520:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b524:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1b528:	mov	x20, #0x0                   	// #0
   1b52c:	add	x1, x1, #0xba8
   1b530:	ldr	x0, [x0, #3936]
   1b534:	ldr	x0, [x0]
   1b538:	bl	6650 <PyErr_SetString@plt>
   1b53c:	ldp	x21, x22, [sp, #32]
   1b540:	b	1b1b0 <PyFloat_FromString@plt+0x14720>
   1b544:	mov	x20, #0x0                   	// #0
   1b548:	ldp	x21, x22, [sp, #32]
   1b54c:	b	1b1b0 <PyFloat_FromString@plt+0x14720>
   1b550:	mov	x0, x23
   1b554:	bl	65d0 <_Py_Dealloc@plt>
   1b558:	b	1b4bc <PyFloat_FromString@plt+0x14a2c>
   1b55c:	mov	x0, x19
   1b560:	bl	65d0 <_Py_Dealloc@plt>
   1b564:	b	1b4ac <PyFloat_FromString@plt+0x14a1c>
   1b568:	stp	x29, x30, [sp, #-80]!
   1b56c:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   1b570:	mov	x29, sp
   1b574:	stp	x19, x20, [sp, #16]
   1b578:	mov	x19, x0
   1b57c:	ldr	x0, [x3, #2056]
   1b580:	stp	x21, x22, [sp, #32]
   1b584:	mov	x21, x1
   1b588:	mov	x22, x2
   1b58c:	mov	x1, #0x0                   	// #0
   1b590:	add	x2, sp, #0x48
   1b594:	stp	x23, x24, [sp, #48]
   1b598:	str	wzr, [sp, #68]
   1b59c:	bl	6740 <PyContextVar_Get@plt>
   1b5a0:	tbnz	w0, #31, 1b6a0 <PyFloat_FromString@plt+0x14c10>
   1b5a4:	ldr	x20, [sp, #72]
   1b5a8:	cbz	x20, 1b694 <PyFloat_FromString@plt+0x14c04>
   1b5ac:	ldr	x1, [x20]
   1b5b0:	sub	x1, x1, #0x1
   1b5b4:	str	x1, [x20]
   1b5b8:	cbz	x1, 1b688 <PyFloat_FromString@plt+0x14bf8>
   1b5bc:	ldr	x0, [x19, #8]
   1b5c0:	adrp	x24, 63000 <PyInit__decimal@@Base+0x46dc0>
   1b5c4:	add	x23, x24, #0x328
   1b5c8:	add	x23, x23, #0x1a0
   1b5cc:	cmp	x0, x23
   1b5d0:	b.eq	1b61c <PyFloat_FromString@plt+0x14b8c>  // b.none
   1b5d4:	mov	x1, x23
   1b5d8:	bl	69c0 <PyType_IsSubtype@plt>
   1b5dc:	cbnz	w0, 1b61c <PyFloat_FromString@plt+0x14b8c>
   1b5e0:	ldr	x0, [x19, #8]
   1b5e4:	ldr	x0, [x0, #168]
   1b5e8:	tbnz	w0, #24, 1b82c <PyFloat_FromString@plt+0x14d9c>
   1b5ec:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b5f0:	ldr	x0, [x0, #3912]
   1b5f4:	mov	x23, x0
   1b5f8:	ldr	x1, [x0]
   1b5fc:	add	x1, x1, #0x1
   1b600:	str	x1, [x0]
   1b604:	mov	x0, x23
   1b608:	ldp	x19, x20, [sp, #16]
   1b60c:	ldp	x21, x22, [sp, #32]
   1b610:	ldp	x23, x24, [sp, #48]
   1b614:	ldp	x29, x30, [sp], #80
   1b618:	ret
   1b61c:	ldr	x0, [x19]
   1b620:	add	x0, x0, #0x1
   1b624:	str	x0, [x19]
   1b628:	ldr	x0, [x21, #8]
   1b62c:	add	x23, x24, #0x328
   1b630:	add	x23, x23, #0x1a0
   1b634:	cmp	x0, x23
   1b638:	b.eq	1b6bc <PyFloat_FromString@plt+0x14c2c>  // b.none
   1b63c:	mov	x1, x23
   1b640:	bl	69c0 <PyType_IsSubtype@plt>
   1b644:	cbnz	w0, 1b6bc <PyFloat_FromString@plt+0x14c2c>
   1b648:	ldr	x0, [x21, #8]
   1b64c:	ldr	x0, [x0, #168]
   1b650:	tbnz	w0, #24, 1b748 <PyFloat_FromString@plt+0x14cb8>
   1b654:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b658:	ldr	x0, [x0, #3912]
   1b65c:	mov	x23, x0
   1b660:	ldr	x1, [x0]
   1b664:	add	x1, x1, #0x1
   1b668:	str	x1, [x0]
   1b66c:	ldr	x0, [x19]
   1b670:	sub	x0, x0, #0x1
   1b674:	str	x0, [x19]
   1b678:	cbnz	x0, 1b604 <PyFloat_FromString@plt+0x14b74>
   1b67c:	mov	x0, x19
   1b680:	bl	65d0 <_Py_Dealloc@plt>
   1b684:	b	1b604 <PyFloat_FromString@plt+0x14b74>
   1b688:	mov	x0, x20
   1b68c:	bl	65d0 <_Py_Dealloc@plt>
   1b690:	b	1b5bc <PyFloat_FromString@plt+0x14b2c>
   1b694:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   1b698:	mov	x20, x0
   1b69c:	cbnz	x0, 1b5ac <PyFloat_FromString@plt+0x14b1c>
   1b6a0:	mov	x23, #0x0                   	// #0
   1b6a4:	mov	x0, x23
   1b6a8:	ldp	x19, x20, [sp, #16]
   1b6ac:	ldp	x21, x22, [sp, #32]
   1b6b0:	ldp	x23, x24, [sp, #48]
   1b6b4:	ldp	x29, x30, [sp], #80
   1b6b8:	ret
   1b6bc:	ldr	x0, [x21]
   1b6c0:	add	x0, x0, #0x1
   1b6c4:	str	x0, [x21]
   1b6c8:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b6cc:	ldr	x0, [x0, #4008]
   1b6d0:	cmp	x22, x0
   1b6d4:	b.eq	1b84c <PyFloat_FromString@plt+0x14dbc>  // b.none
   1b6d8:	ldr	x0, [x22, #8]
   1b6dc:	add	x23, x24, #0x328
   1b6e0:	add	x23, x23, #0x1a0
   1b6e4:	cmp	x0, x23
   1b6e8:	b.eq	1b768 <PyFloat_FromString@plt+0x14cd8>  // b.none
   1b6ec:	mov	x1, x23
   1b6f0:	bl	69c0 <PyType_IsSubtype@plt>
   1b6f4:	cbnz	w0, 1b768 <PyFloat_FromString@plt+0x14cd8>
   1b6f8:	ldr	x0, [x22, #8]
   1b6fc:	ldr	x0, [x0, #168]
   1b700:	tbnz	w0, #24, 1b8d4 <PyFloat_FromString@plt+0x14e44>
   1b704:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b708:	ldr	x0, [x0, #3912]
   1b70c:	mov	x23, x0
   1b710:	ldr	x1, [x0]
   1b714:	add	x1, x1, #0x1
   1b718:	str	x1, [x0]
   1b71c:	ldr	x0, [x19]
   1b720:	sub	x0, x0, #0x1
   1b724:	str	x0, [x19]
   1b728:	cbz	x0, 1b8bc <PyFloat_FromString@plt+0x14e2c>
   1b72c:	ldr	x0, [x21]
   1b730:	sub	x0, x0, #0x1
   1b734:	str	x0, [x21]
   1b738:	cbnz	x0, 1b604 <PyFloat_FromString@plt+0x14b74>
   1b73c:	mov	x0, x21
   1b740:	bl	65d0 <_Py_Dealloc@plt>
   1b744:	b	1b604 <PyFloat_FromString@plt+0x14b74>
   1b748:	mov	x1, x21
   1b74c:	mov	x0, x23
   1b750:	mov	x2, x20
   1b754:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b758:	mov	x21, x0
   1b75c:	cbnz	x0, 1b6c8 <PyFloat_FromString@plt+0x14c38>
   1b760:	mov	x23, #0x0                   	// #0
   1b764:	b	1b66c <PyFloat_FromString@plt+0x14bdc>
   1b768:	ldr	x0, [x22]
   1b76c:	add	x0, x0, #0x1
   1b770:	str	x0, [x22]
   1b774:	add	x0, x24, #0x328
   1b778:	add	x0, x0, #0x1a0
   1b77c:	bl	6950 <_PyObject_New@plt>
   1b780:	mov	x23, x0
   1b784:	cbz	x0, 1b8f4 <PyFloat_FromString@plt+0x14e64>
   1b788:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1b78c:	mov	x2, #0xffffffffffffffff    	// #-1
   1b790:	mov	w1, #0x30                  	// #48
   1b794:	str	x2, [x23, #16]
   1b798:	ldr	q0, [x0, #2128]
   1b79c:	add	x0, x23, #0x48
   1b7a0:	strb	w1, [x23, #24]
   1b7a4:	add	x5, sp, #0x44
   1b7a8:	stp	xzr, xzr, [x23, #32]
   1b7ac:	add	x4, x20, #0x10
   1b7b0:	add	x3, x22, #0x18
   1b7b4:	str	x0, [x23, #64]
   1b7b8:	add	x1, x19, #0x18
   1b7bc:	add	x0, x23, #0x18
   1b7c0:	add	x2, x21, #0x18
   1b7c4:	str	q0, [x23, #48]
   1b7c8:	bl	3bd00 <PyInit__decimal@@Base+0x1fac0>
   1b7cc:	ldr	x0, [x22]
   1b7d0:	sub	x0, x0, #0x1
   1b7d4:	str	x0, [x22]
   1b7d8:	cbz	x0, 1b8c8 <PyFloat_FromString@plt+0x14e38>
   1b7dc:	ldr	x0, [x19]
   1b7e0:	sub	x0, x0, #0x1
   1b7e4:	str	x0, [x19]
   1b7e8:	cbz	x0, 1b8b0 <PyFloat_FromString@plt+0x14e20>
   1b7ec:	ldr	x0, [x21]
   1b7f0:	sub	x0, x0, #0x1
   1b7f4:	str	x0, [x21]
   1b7f8:	cbz	x0, 1b8a4 <PyFloat_FromString@plt+0x14e14>
   1b7fc:	ldr	w1, [sp, #68]
   1b800:	mov	x0, x20
   1b804:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1b808:	cbz	w0, 1b604 <PyFloat_FromString@plt+0x14b74>
   1b80c:	ldr	x0, [x23]
   1b810:	sub	x0, x0, #0x1
   1b814:	str	x0, [x23]
   1b818:	cbnz	x0, 1b6a0 <PyFloat_FromString@plt+0x14c10>
   1b81c:	mov	x0, x23
   1b820:	mov	x23, #0x0                   	// #0
   1b824:	bl	65d0 <_Py_Dealloc@plt>
   1b828:	b	1b604 <PyFloat_FromString@plt+0x14b74>
   1b82c:	mov	x1, x19
   1b830:	mov	x0, x23
   1b834:	mov	x2, x20
   1b838:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b83c:	mov	x19, x0
   1b840:	cbnz	x0, 1b628 <PyFloat_FromString@plt+0x14b98>
   1b844:	mov	x23, #0x0                   	// #0
   1b848:	b	1b6a4 <PyFloat_FromString@plt+0x14c14>
   1b84c:	add	x0, x24, #0x328
   1b850:	add	x0, x0, #0x1a0
   1b854:	bl	6950 <_PyObject_New@plt>
   1b858:	mov	x23, x0
   1b85c:	cbz	x0, 1b8f8 <PyFloat_FromString@plt+0x14e68>
   1b860:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1b864:	mov	x2, #0xffffffffffffffff    	// #-1
   1b868:	mov	w1, #0x30                  	// #48
   1b86c:	str	x2, [x23, #16]
   1b870:	ldr	q0, [x0, #2128]
   1b874:	add	x0, x23, #0x48
   1b878:	strb	w1, [x23, #24]
   1b87c:	add	x4, sp, #0x44
   1b880:	stp	xzr, xzr, [x23, #32]
   1b884:	add	x3, x20, #0x10
   1b888:	add	x1, x19, #0x18
   1b88c:	str	x0, [x23, #64]
   1b890:	add	x2, x21, #0x18
   1b894:	add	x0, x23, #0x18
   1b898:	str	q0, [x23, #48]
   1b89c:	bl	3b100 <PyInit__decimal@@Base+0x1eec0>
   1b8a0:	b	1b7dc <PyFloat_FromString@plt+0x14d4c>
   1b8a4:	mov	x0, x21
   1b8a8:	bl	65d0 <_Py_Dealloc@plt>
   1b8ac:	b	1b7fc <PyFloat_FromString@plt+0x14d6c>
   1b8b0:	mov	x0, x19
   1b8b4:	bl	65d0 <_Py_Dealloc@plt>
   1b8b8:	b	1b7ec <PyFloat_FromString@plt+0x14d5c>
   1b8bc:	mov	x0, x19
   1b8c0:	bl	65d0 <_Py_Dealloc@plt>
   1b8c4:	b	1b72c <PyFloat_FromString@plt+0x14c9c>
   1b8c8:	mov	x0, x22
   1b8cc:	bl	65d0 <_Py_Dealloc@plt>
   1b8d0:	b	1b7dc <PyFloat_FromString@plt+0x14d4c>
   1b8d4:	mov	x1, x22
   1b8d8:	mov	x0, x23
   1b8dc:	mov	x2, x20
   1b8e0:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1b8e4:	mov	x22, x0
   1b8e8:	cbnz	x0, 1b774 <PyFloat_FromString@plt+0x14ce4>
   1b8ec:	mov	x23, #0x0                   	// #0
   1b8f0:	b	1b71c <PyFloat_FromString@plt+0x14c8c>
   1b8f4:	mov	x23, x22
   1b8f8:	ldr	x0, [x19]
   1b8fc:	sub	x0, x0, #0x1
   1b900:	str	x0, [x19]
   1b904:	cbz	x0, 1b934 <PyFloat_FromString@plt+0x14ea4>
   1b908:	ldr	x0, [x21]
   1b90c:	sub	x0, x0, #0x1
   1b910:	str	x0, [x21]
   1b914:	cbz	x0, 1b924 <PyFloat_FromString@plt+0x14e94>
   1b918:	cbnz	x23, 1b80c <PyFloat_FromString@plt+0x14d7c>
   1b91c:	mov	x23, #0x0                   	// #0
   1b920:	b	1b6a4 <PyFloat_FromString@plt+0x14c14>
   1b924:	mov	x0, x21
   1b928:	bl	65d0 <_Py_Dealloc@plt>
   1b92c:	cbnz	x23, 1b80c <PyFloat_FromString@plt+0x14d7c>
   1b930:	b	1b91c <PyFloat_FromString@plt+0x14e8c>
   1b934:	mov	x0, x19
   1b938:	bl	65d0 <_Py_Dealloc@plt>
   1b93c:	b	1b908 <PyFloat_FromString@plt+0x14e78>
   1b940:	stp	x29, x30, [sp, #-96]!
   1b944:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   1b948:	mov	x29, sp
   1b94c:	stp	x19, x20, [sp, #16]
   1b950:	mov	x19, x0
   1b954:	mov	x20, #0x0                   	// #0
   1b958:	ldr	x0, [x2, #2056]
   1b95c:	add	x2, sp, #0x58
   1b960:	stp	x21, x22, [sp, #32]
   1b964:	mov	x21, x1
   1b968:	mov	x1, #0x0                   	// #0
   1b96c:	str	wzr, [sp, #84]
   1b970:	bl	6740 <PyContextVar_Get@plt>
   1b974:	tbnz	w0, #31, 1b9e0 <PyFloat_FromString@plt+0x14f50>
   1b978:	ldr	x20, [sp, #88]
   1b97c:	stp	x23, x24, [sp, #48]
   1b980:	cbz	x20, 1ba78 <PyFloat_FromString@plt+0x14fe8>
   1b984:	ldr	x0, [x20]
   1b988:	sub	x0, x0, #0x1
   1b98c:	str	x0, [x20]
   1b990:	cbz	x0, 1ba6c <PyFloat_FromString@plt+0x14fdc>
   1b994:	ldr	x0, [x19, #8]
   1b998:	adrp	x23, 63000 <PyInit__decimal@@Base+0x46dc0>
   1b99c:	add	x22, x23, #0x328
   1b9a0:	add	x22, x22, #0x1a0
   1b9a4:	cmp	x0, x22
   1b9a8:	b.eq	1b9f4 <PyFloat_FromString@plt+0x14f64>  // b.none
   1b9ac:	mov	x1, x22
   1b9b0:	bl	69c0 <PyType_IsSubtype@plt>
   1b9b4:	cbnz	w0, 1b9f4 <PyFloat_FromString@plt+0x14f64>
   1b9b8:	ldr	x0, [x19, #8]
   1b9bc:	ldr	x0, [x0, #168]
   1b9c0:	tbnz	w0, #24, 1bbd0 <PyFloat_FromString@plt+0x15140>
   1b9c4:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1b9c8:	ldp	x23, x24, [sp, #48]
   1b9cc:	ldr	x0, [x0, #3912]
   1b9d0:	mov	x20, x0
   1b9d4:	ldr	x1, [x0]
   1b9d8:	add	x1, x1, #0x1
   1b9dc:	str	x1, [x0]
   1b9e0:	mov	x0, x20
   1b9e4:	ldp	x19, x20, [sp, #16]
   1b9e8:	ldp	x21, x22, [sp, #32]
   1b9ec:	ldp	x29, x30, [sp], #96
   1b9f0:	ret
   1b9f4:	ldr	x0, [x19]
   1b9f8:	add	x0, x0, #0x1
   1b9fc:	str	x0, [x19]
   1ba00:	ldr	x0, [x21, #8]
   1ba04:	add	x22, x23, #0x328
   1ba08:	add	x22, x22, #0x1a0
   1ba0c:	cmp	x0, x22
   1ba10:	b.eq	1baa0 <PyFloat_FromString@plt+0x15010>  // b.none
   1ba14:	mov	x1, x22
   1ba18:	bl	69c0 <PyType_IsSubtype@plt>
   1ba1c:	cbnz	w0, 1baa0 <PyFloat_FromString@plt+0x15010>
   1ba20:	ldr	x0, [x21, #8]
   1ba24:	ldr	x0, [x0, #168]
   1ba28:	tbnz	w0, #24, 1bbb0 <PyFloat_FromString@plt+0x15120>
   1ba2c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1ba30:	ldr	x0, [x0, #3912]
   1ba34:	mov	x20, x0
   1ba38:	ldr	x1, [x0]
   1ba3c:	add	x1, x1, #0x1
   1ba40:	str	x1, [x0]
   1ba44:	ldr	x0, [x19]
   1ba48:	sub	x0, x0, #0x1
   1ba4c:	str	x0, [x19]
   1ba50:	cbz	x0, 1bbec <PyFloat_FromString@plt+0x1515c>
   1ba54:	mov	x0, x20
   1ba58:	ldp	x19, x20, [sp, #16]
   1ba5c:	ldp	x21, x22, [sp, #32]
   1ba60:	ldp	x23, x24, [sp, #48]
   1ba64:	ldp	x29, x30, [sp], #96
   1ba68:	ret
   1ba6c:	mov	x0, x20
   1ba70:	bl	65d0 <_Py_Dealloc@plt>
   1ba74:	b	1b994 <PyFloat_FromString@plt+0x14f04>
   1ba78:	bl	8c08 <PyFloat_FromString@plt+0x2178>
   1ba7c:	mov	x20, x0
   1ba80:	cbnz	x0, 1b984 <PyFloat_FromString@plt+0x14ef4>
   1ba84:	mov	x20, #0x0                   	// #0
   1ba88:	mov	x0, x20
   1ba8c:	ldp	x19, x20, [sp, #16]
   1ba90:	ldp	x21, x22, [sp, #32]
   1ba94:	ldp	x23, x24, [sp, #48]
   1ba98:	ldp	x29, x30, [sp], #96
   1ba9c:	ret
   1baa0:	ldr	x0, [x21]
   1baa4:	add	x0, x0, #0x1
   1baa8:	str	x0, [x21]
   1baac:	add	x23, x23, #0x328
   1bab0:	add	x23, x23, #0x1a0
   1bab4:	mov	x0, x23
   1bab8:	bl	6950 <_PyObject_New@plt>
   1babc:	mov	x22, x0
   1bac0:	cbz	x0, 1bc14 <PyFloat_FromString@plt+0x15184>
   1bac4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1bac8:	add	x1, x22, #0x48
   1bacc:	movi	v1.4s, #0x0
   1bad0:	str	x25, [sp, #64]
   1bad4:	ldr	q0, [x0, #2128]
   1bad8:	mov	w24, #0x30                  	// #48
   1badc:	mov	x25, #0xffffffffffffffff    	// #-1
   1bae0:	str	x25, [x22, #16]
   1bae4:	strb	w24, [x22, #24]
   1bae8:	mov	x0, x23
   1baec:	str	x1, [x22, #64]
   1baf0:	stp	q1, q0, [x22, #32]
   1baf4:	bl	6950 <_PyObject_New@plt>
   1baf8:	movi	v1.4s, #0x0
   1bafc:	mov	x23, x0
   1bb00:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1bb04:	ldr	q0, [x0, #2128]
   1bb08:	cbz	x23, 1bc90 <PyFloat_FromString@plt+0x15200>
   1bb0c:	add	x0, x23, #0x48
   1bb10:	str	x25, [x23, #16]
   1bb14:	strb	w24, [x23, #24]
   1bb18:	add	x5, sp, #0x54
   1bb1c:	str	x0, [x23, #64]
   1bb20:	add	x4, x20, #0x10
   1bb24:	add	x0, x22, #0x18
   1bb28:	add	x3, x21, #0x18
   1bb2c:	add	x2, x19, #0x18
   1bb30:	add	x1, x23, #0x18
   1bb34:	stp	q1, q0, [x23, #32]
   1bb38:	bl	361f0 <PyInit__decimal@@Base+0x19fb0>
   1bb3c:	ldr	x0, [x19]
   1bb40:	sub	x0, x0, #0x1
   1bb44:	str	x0, [x19]
   1bb48:	cbz	x0, 1bc08 <PyFloat_FromString@plt+0x15178>
   1bb4c:	ldr	x0, [x21]
   1bb50:	sub	x0, x0, #0x1
   1bb54:	str	x0, [x21]
   1bb58:	cbz	x0, 1bbfc <PyFloat_FromString@plt+0x1516c>
   1bb5c:	ldr	w1, [sp, #84]
   1bb60:	mov	x0, x20
   1bb64:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1bb68:	cbnz	w0, 1bc48 <PyFloat_FromString@plt+0x151b8>
   1bb6c:	mov	x1, x22
   1bb70:	mov	x2, x23
   1bb74:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
   1bb78:	add	x0, x0, #0xf30
   1bb7c:	bl	67d0 <Py_BuildValue@plt>
   1bb80:	mov	x20, x0
   1bb84:	ldr	x1, [x23]
   1bb88:	sub	x0, x1, #0x1
   1bb8c:	str	x0, [x23]
   1bb90:	cbz	x0, 1bc84 <PyFloat_FromString@plt+0x151f4>
   1bb94:	ldr	x0, [x22]
   1bb98:	sub	x0, x0, #0x1
   1bb9c:	str	x0, [x22]
   1bba0:	cbz	x0, 1bc70 <PyFloat_FromString@plt+0x151e0>
   1bba4:	ldp	x23, x24, [sp, #48]
   1bba8:	ldr	x25, [sp, #64]
   1bbac:	b	1b9e0 <PyFloat_FromString@plt+0x14f50>
   1bbb0:	mov	x1, x21
   1bbb4:	mov	x0, x22
   1bbb8:	mov	x2, x20
   1bbbc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1bbc0:	mov	x21, x0
   1bbc4:	cbnz	x0, 1baac <PyFloat_FromString@plt+0x1501c>
   1bbc8:	mov	x20, #0x0                   	// #0
   1bbcc:	b	1ba44 <PyFloat_FromString@plt+0x14fb4>
   1bbd0:	mov	x1, x19
   1bbd4:	mov	x0, x22
   1bbd8:	mov	x2, x20
   1bbdc:	bl	9b98 <PyFloat_FromString@plt+0x3108>
   1bbe0:	mov	x19, x0
   1bbe4:	cbnz	x0, 1ba00 <PyFloat_FromString@plt+0x14f70>
   1bbe8:	b	1ba84 <PyFloat_FromString@plt+0x14ff4>
   1bbec:	mov	x0, x19
   1bbf0:	bl	65d0 <_Py_Dealloc@plt>
   1bbf4:	ldp	x23, x24, [sp, #48]
   1bbf8:	b	1b9e0 <PyFloat_FromString@plt+0x14f50>
   1bbfc:	mov	x0, x21
   1bc00:	bl	65d0 <_Py_Dealloc@plt>
   1bc04:	b	1bb5c <PyFloat_FromString@plt+0x150cc>
   1bc08:	mov	x0, x19
   1bc0c:	bl	65d0 <_Py_Dealloc@plt>
   1bc10:	b	1bb4c <PyFloat_FromString@plt+0x150bc>
   1bc14:	ldr	x0, [x19]
   1bc18:	sub	x0, x0, #0x1
   1bc1c:	str	x0, [x19]
   1bc20:	cbz	x0, 1bce0 <PyFloat_FromString@plt+0x15250>
   1bc24:	ldr	x0, [x21]
   1bc28:	sub	x0, x0, #0x1
   1bc2c:	str	x0, [x21]
   1bc30:	cbnz	x0, 1ba84 <PyFloat_FromString@plt+0x14ff4>
   1bc34:	mov	x0, x21
   1bc38:	mov	x20, #0x0                   	// #0
   1bc3c:	bl	65d0 <_Py_Dealloc@plt>
   1bc40:	ldp	x23, x24, [sp, #48]
   1bc44:	b	1b9e0 <PyFloat_FromString@plt+0x14f50>
   1bc48:	ldr	x0, [x23]
   1bc4c:	sub	x0, x0, #0x1
   1bc50:	str	x0, [x23]
   1bc54:	cbz	x0, 1bcd4 <PyFloat_FromString@plt+0x15244>
   1bc58:	ldr	x0, [x22]
   1bc5c:	sub	x0, x0, #0x1
   1bc60:	str	x0, [x22]
   1bc64:	cbz	x0, 1bcbc <PyFloat_FromString@plt+0x1522c>
   1bc68:	ldr	x25, [sp, #64]
   1bc6c:	b	1ba84 <PyFloat_FromString@plt+0x14ff4>
   1bc70:	mov	x0, x22
   1bc74:	bl	65d0 <_Py_Dealloc@plt>
   1bc78:	ldp	x23, x24, [sp, #48]
   1bc7c:	ldr	x25, [sp, #64]
   1bc80:	b	1b9e0 <PyFloat_FromString@plt+0x14f50>
   1bc84:	mov	x0, x23
   1bc88:	bl	65d0 <_Py_Dealloc@plt>
   1bc8c:	b	1bb94 <PyFloat_FromString@plt+0x15104>
   1bc90:	ldr	x0, [x19]
   1bc94:	sub	x0, x0, #0x1
   1bc98:	str	x0, [x19]
   1bc9c:	cbz	x0, 1bcec <PyFloat_FromString@plt+0x1525c>
   1bca0:	ldr	x0, [x21]
   1bca4:	sub	x0, x0, #0x1
   1bca8:	str	x0, [x21]
   1bcac:	cbnz	x0, 1bc58 <PyFloat_FromString@plt+0x151c8>
   1bcb0:	mov	x0, x21
   1bcb4:	bl	65d0 <_Py_Dealloc@plt>
   1bcb8:	b	1bc58 <PyFloat_FromString@plt+0x151c8>
   1bcbc:	mov	x0, x22
   1bcc0:	mov	x20, #0x0                   	// #0
   1bcc4:	bl	65d0 <_Py_Dealloc@plt>
   1bcc8:	ldp	x23, x24, [sp, #48]
   1bccc:	ldr	x25, [sp, #64]
   1bcd0:	b	1b9e0 <PyFloat_FromString@plt+0x14f50>
   1bcd4:	mov	x0, x23
   1bcd8:	bl	65d0 <_Py_Dealloc@plt>
   1bcdc:	b	1bc58 <PyFloat_FromString@plt+0x151c8>
   1bce0:	mov	x0, x19
   1bce4:	bl	65d0 <_Py_Dealloc@plt>
   1bce8:	b	1bc24 <PyFloat_FromString@plt+0x15194>
   1bcec:	mov	x0, x19
   1bcf0:	bl	65d0 <_Py_Dealloc@plt>
   1bcf4:	b	1bca0 <PyFloat_FromString@plt+0x15210>
   1bcf8:	stp	x29, x30, [sp, #-96]!
   1bcfc:	mov	x29, sp
   1bd00:	add	x2, sp, #0x58
   1bd04:	stp	x19, x20, [sp, #16]
   1bd08:	mov	x20, x0
   1bd0c:	mov	x0, x1
   1bd10:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1bd14:	add	x1, x1, #0xba0
   1bd18:	str	xzr, [sp, #88]
   1bd1c:	bl	68e0 <PyArg_ParseTuple@plt>
   1bd20:	cbz	w0, 1be40 <PyFloat_FromString@plt+0x153b0>
   1bd24:	stp	x21, x22, [sp, #32]
   1bd28:	ldr	x22, [sp, #88]
   1bd2c:	cbz	x22, 1bec4 <PyFloat_FromString@plt+0x15434>
   1bd30:	ldr	x0, [x22, #8]
   1bd34:	adrp	x21, 63000 <PyInit__decimal@@Base+0x46dc0>
   1bd38:	add	x19, x21, #0x328
   1bd3c:	add	x19, x19, #0x1a0
   1bd40:	cmp	x0, x19
   1bd44:	b.eq	1bdf0 <PyFloat_FromString@plt+0x15360>  // b.none
   1bd48:	mov	x1, x19
   1bd4c:	bl	69c0 <PyType_IsSubtype@plt>
   1bd50:	cbnz	w0, 1bdf0 <PyFloat_FromString@plt+0x15360>
   1bd54:	ldr	x0, [x22, #8]
   1bd58:	ldr	x1, [x0, #168]
   1bd5c:	tbnz	w1, #28, 1bf4c <PyFloat_FromString@plt+0x154bc>
   1bd60:	tbnz	w1, #24, 1bfd4 <PyFloat_FromString@plt+0x15544>
   1bd64:	tst	x1, #0x6000000
   1bd68:	b.ne	1c050 <PyFloat_FromString@plt+0x155c0>  // b.any
   1bd6c:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   1bd70:	ldr	x1, [x1, #3864]
   1bd74:	cmp	x0, x1
   1bd78:	b.eq	1bd84 <PyFloat_FromString@plt+0x152f4>  // b.none
   1bd7c:	bl	69c0 <PyType_IsSubtype@plt>
   1bd80:	cbz	w0, 1c15c <PyFloat_FromString@plt+0x156cc>
   1bd84:	mov	x0, x20
   1bd88:	mov	w1, #0x400                 	// #1024
   1bd8c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1bd90:	cbnz	w0, 1bf40 <PyFloat_FromString@plt+0x154b0>
   1bd94:	add	x0, x21, #0x328
   1bd98:	mov	x1, x22
   1bd9c:	add	x0, x0, #0x1a0
   1bda0:	mov	x2, x20
   1bda4:	str	wzr, [sp, #84]
   1bda8:	bl	e810 <PyFloat_FromString@plt+0x7d80>
   1bdac:	mov	x19, x0
   1bdb0:	cbz	x0, 1bde4 <PyFloat_FromString@plt+0x15354>
   1bdb4:	add	x2, sp, #0x54
   1bdb8:	add	x1, x20, #0x10
   1bdbc:	add	x0, x0, #0x18
   1bdc0:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   1bdc4:	ldr	w1, [sp, #84]
   1bdc8:	mov	x0, x20
   1bdcc:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1bdd0:	cbz	w0, 1bf2c <PyFloat_FromString@plt+0x1549c>
   1bdd4:	ldr	x0, [x19]
   1bdd8:	sub	x0, x0, #0x1
   1bddc:	str	x0, [x19]
   1bde0:	cbz	x0, 1c148 <PyFloat_FromString@plt+0x156b8>
   1bde4:	mov	x19, #0x0                   	// #0
   1bde8:	ldp	x21, x22, [sp, #32]
   1bdec:	b	1be28 <PyFloat_FromString@plt+0x15398>
   1bdf0:	add	x0, x22, #0x18
   1bdf4:	bl	2a868 <PyInit__decimal@@Base+0xe628>
   1bdf8:	cbz	w0, 1be14 <PyFloat_FromString@plt+0x15384>
   1bdfc:	ldr	x1, [x20, #16]
   1be00:	ldrsw	x3, [x20, #56]
   1be04:	ldr	x2, [x22, #40]
   1be08:	sub	x1, x1, x3
   1be0c:	cmp	x2, x1
   1be10:	b.gt	1be54 <PyFloat_FromString@plt+0x153c4>
   1be14:	mov	x0, x22
   1be18:	mov	x1, x20
   1be1c:	bl	c508 <PyFloat_FromString@plt+0x5a78>
   1be20:	mov	x19, x0
   1be24:	ldp	x21, x22, [sp, #32]
   1be28:	mov	x0, x19
   1be2c:	ldp	x19, x20, [sp, #16]
   1be30:	ldp	x29, x30, [sp], #96
   1be34:	ret
   1be38:	ldp	x21, x22, [sp, #32]
   1be3c:	ldr	x23, [sp, #48]
   1be40:	mov	x19, #0x0                   	// #0
   1be44:	mov	x0, x19
   1be48:	ldp	x19, x20, [sp, #16]
   1be4c:	ldp	x29, x30, [sp], #96
   1be50:	ret
   1be54:	mov	x0, x20
   1be58:	mov	w1, #0x2                   	// #2
   1be5c:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1be60:	cbnz	w0, 1bf40 <PyFloat_FromString@plt+0x154b0>
   1be64:	add	x0, x21, #0x328
   1be68:	add	x0, x0, #0x1a0
   1be6c:	bl	6950 <_PyObject_New@plt>
   1be70:	mov	x19, x0
   1be74:	cbz	x0, 1bf2c <PyFloat_FromString@plt+0x1549c>
   1be78:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1be7c:	mov	x2, #0xffffffffffffffff    	// #-1
   1be80:	mov	w1, #0x30                  	// #48
   1be84:	str	x2, [x19, #16]
   1be88:	ldr	q0, [x0, #2128]
   1be8c:	add	x0, x19, #0x48
   1be90:	strb	w1, [x19, #24]
   1be94:	mov	w2, #0x4                   	// #4
   1be98:	stp	xzr, xzr, [x19, #32]
   1be9c:	mov	w1, #0x0                   	// #0
   1bea0:	str	x0, [x19, #64]
   1bea4:	add	x0, x19, #0x18
   1bea8:	str	q0, [x19, #48]
   1beac:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   1beb0:	mov	x0, x19
   1beb4:	ldp	x19, x20, [sp, #16]
   1beb8:	ldp	x21, x22, [sp, #32]
   1bebc:	ldp	x29, x30, [sp], #96
   1bec0:	ret
   1bec4:	adrp	x0, 63000 <PyInit__decimal@@Base+0x46dc0>
   1bec8:	add	x0, x0, #0x328
   1becc:	add	x0, x0, #0x1a0
   1bed0:	str	wzr, [sp, #84]
   1bed4:	bl	6950 <_PyObject_New@plt>
   1bed8:	mov	x19, x0
   1bedc:	cbz	x0, 1bde4 <PyFloat_FromString@plt+0x15354>
   1bee0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1bee4:	mov	x2, #0xffffffffffffffff    	// #-1
   1bee8:	mov	w1, #0x30                  	// #48
   1beec:	str	x2, [x19, #16]
   1bef0:	ldr	q0, [x0, #2128]
   1bef4:	add	x0, x19, #0x48
   1bef8:	strb	w1, [x19, #24]
   1befc:	add	x3, sp, #0x54
   1bf00:	stp	xzr, xzr, [x19, #32]
   1bf04:	mov	x1, #0x0                   	// #0
   1bf08:	add	x2, x20, #0x10
   1bf0c:	str	x0, [x19, #64]
   1bf10:	add	x0, x19, #0x18
   1bf14:	str	q0, [x19, #48]
   1bf18:	bl	30600 <PyInit__decimal@@Base+0x143c0>
   1bf1c:	ldr	w1, [sp, #84]
   1bf20:	mov	x0, x20
   1bf24:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1bf28:	cbnz	w0, 1bdd4 <PyFloat_FromString@plt+0x15344>
   1bf2c:	mov	x0, x19
   1bf30:	ldp	x19, x20, [sp, #16]
   1bf34:	ldp	x21, x22, [sp, #32]
   1bf38:	ldp	x29, x30, [sp], #96
   1bf3c:	ret
   1bf40:	mov	x19, #0x0                   	// #0
   1bf44:	ldp	x21, x22, [sp, #32]
   1bf48:	b	1be44 <PyFloat_FromString@plt+0x153b4>
   1bf4c:	mov	x0, x22
   1bf50:	mov	w2, #0x0                   	// #0
   1bf54:	mov	w1, #0x0                   	// #0
   1bf58:	bl	84b8 <PyFloat_FromString@plt+0x1a28>
   1bf5c:	mov	x21, x0
   1bf60:	cbz	x0, 1bf40 <PyFloat_FromString@plt+0x154b0>
   1bf64:	mov	x0, x19
   1bf68:	str	wzr, [sp, #84]
   1bf6c:	bl	6950 <_PyObject_New@plt>
   1bf70:	mov	x19, x0
   1bf74:	cbz	x0, 1c188 <PyFloat_FromString@plt+0x156f8>
   1bf78:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1bf7c:	mov	x2, #0xffffffffffffffff    	// #-1
   1bf80:	mov	w1, #0x30                  	// #48
   1bf84:	str	x2, [x19, #16]
   1bf88:	ldr	q0, [x0, #2128]
   1bf8c:	add	x0, x19, #0x48
   1bf90:	strb	w1, [x19, #24]
   1bf94:	add	x3, sp, #0x54
   1bf98:	stp	xzr, xzr, [x19, #32]
   1bf9c:	mov	x1, x21
   1bfa0:	add	x2, x20, #0x10
   1bfa4:	str	x0, [x19, #64]
   1bfa8:	add	x0, x19, #0x18
   1bfac:	str	q0, [x19, #48]
   1bfb0:	bl	25778 <PyInit__decimal@@Base+0x9538>
   1bfb4:	ldr	w1, [sp, #84]
   1bfb8:	mov	x0, x20
   1bfbc:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1bfc0:	cbnz	w0, 1c190 <PyFloat_FromString@plt+0x15700>
   1bfc4:	mov	x0, x21
   1bfc8:	bl	6560 <PyMem_Free@plt>
   1bfcc:	ldp	x21, x22, [sp, #32]
   1bfd0:	b	1be28 <PyFloat_FromString@plt+0x15398>
   1bfd4:	mov	x0, x19
   1bfd8:	str	wzr, [sp, #84]
   1bfdc:	bl	6950 <_PyObject_New@plt>
   1bfe0:	mov	x19, x0
   1bfe4:	cbz	x0, 1bde4 <PyFloat_FromString@plt+0x15354>
   1bfe8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1bfec:	stp	xzr, xzr, [x19, #32]
   1bff0:	mov	x1, #0xffffffffffffffff    	// #-1
   1bff4:	ldr	q0, [x0, #2128]
   1bff8:	mov	w0, #0x30                  	// #48
   1bffc:	strb	w0, [x19, #24]
   1c000:	add	x0, x19, #0x48
   1c004:	add	x21, x19, #0x18
   1c008:	str	q0, [x19, #48]
   1c00c:	ldr	x2, [x22, #16]
   1c010:	str	x1, [x19, #16]
   1c014:	str	x0, [x19, #64]
   1c018:	cbz	x2, 1c1b0 <PyFloat_FromString@plt+0x15720>
   1c01c:	mov	w3, #0x0                   	// #0
   1c020:	tbz	x2, #63, 1c02c <PyFloat_FromString@plt+0x1559c>
   1c024:	neg	x2, x2
   1c028:	mov	w3, #0x1                   	// #1
   1c02c:	cmp	x2, #0x1
   1c030:	add	x5, x20, #0x10
   1c034:	b.eq	1c1d8 <PyFloat_FromString@plt+0x15748>  // b.none
   1c038:	add	x1, x22, #0x18
   1c03c:	mov	x0, x21
   1c040:	add	x6, sp, #0x54
   1c044:	mov	w4, #0x40000000            	// #1073741824
   1c048:	bl	3e4e0 <PyInit__decimal@@Base+0x222a0>
   1c04c:	b	1bdc4 <PyFloat_FromString@plt+0x15334>
   1c050:	tbnz	w1, #26, 1c110 <PyFloat_FromString@plt+0x15680>
   1c054:	tbz	w1, #25, 1c124 <PyFloat_FromString@plt+0x15694>
   1c058:	mov	x0, x22
   1c05c:	bl	6530 <PyList_AsTuple@plt>
   1c060:	mov	x22, x0
   1c064:	cbz	x0, 1bf40 <PyFloat_FromString@plt+0x154b0>
   1c068:	str	x23, [sp, #48]
   1c06c:	mov	x0, x22
   1c070:	bl	8d30 <PyFloat_FromString@plt+0x22a0>
   1c074:	ldr	x1, [x22]
   1c078:	mov	x23, x0
   1c07c:	sub	x0, x1, #0x1
   1c080:	str	x0, [x22]
   1c084:	cbz	x0, 1c104 <PyFloat_FromString@plt+0x15674>
   1c088:	cbz	x23, 1be38 <PyFloat_FromString@plt+0x153a8>
   1c08c:	add	x0, x21, #0x328
   1c090:	str	wzr, [sp, #84]
   1c094:	add	x0, x0, #0x1a0
   1c098:	bl	6950 <_PyObject_New@plt>
   1c09c:	mov	x19, x0
   1c0a0:	cbz	x0, 1c218 <PyFloat_FromString@plt+0x15788>
   1c0a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c0a8:	mov	x2, #0xffffffffffffffff    	// #-1
   1c0ac:	mov	w1, #0x30                  	// #48
   1c0b0:	str	x2, [x19, #16]
   1c0b4:	ldr	q0, [x0, #2128]
   1c0b8:	add	x0, x19, #0x48
   1c0bc:	strb	w1, [x19, #24]
   1c0c0:	add	x3, sp, #0x54
   1c0c4:	stp	xzr, xzr, [x19, #32]
   1c0c8:	mov	x1, x23
   1c0cc:	add	x2, x20, #0x10
   1c0d0:	str	x0, [x19, #64]
   1c0d4:	add	x0, x19, #0x18
   1c0d8:	str	q0, [x19, #48]
   1c0dc:	bl	25778 <PyInit__decimal@@Base+0x9538>
   1c0e0:	ldr	w1, [sp, #84]
   1c0e4:	mov	x0, x20
   1c0e8:	bl	76c8 <PyFloat_FromString@plt+0xc38>
   1c0ec:	cbnz	w0, 1c220 <PyFloat_FromString@plt+0x15790>
   1c0f0:	mov	x0, x23
   1c0f4:	bl	6560 <PyMem_Free@plt>
   1c0f8:	ldp	x21, x22, [sp, #32]
   1c0fc:	ldr	x23, [sp, #48]
   1c100:	b	1be28 <PyFloat_FromString@plt+0x15398>
   1c104:	mov	x0, x22
   1c108:	bl	65d0 <_Py_Dealloc@plt>
   1c10c:	b	1c088 <PyFloat_FromString@plt+0x155f8>
   1c110:	ldr	x0, [x22]
   1c114:	str	x23, [sp, #48]
   1c118:	add	x0, x0, #0x1
   1c11c:	str	x0, [x22]
   1c120:	b	1c06c <PyFloat_FromString@plt+0x155dc>
   1c124:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c128:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c12c:	mov	x19, #0x0                   	// #0
   1c130:	add	x1, x1, #0xe38
   1c134:	ldr	x0, [x0, #3936]
   1c138:	ldr	x0, [x0]
   1c13c:	bl	6650 <PyErr_SetString@plt>
   1c140:	ldp	x21, x22, [sp, #32]
   1c144:	b	1be28 <PyFloat_FromString@plt+0x15398>
   1c148:	mov	x0, x19
   1c14c:	mov	x19, #0x0                   	// #0
   1c150:	bl	65d0 <_Py_Dealloc@plt>
   1c154:	ldp	x21, x22, [sp, #32]
   1c158:	b	1be28 <PyFloat_FromString@plt+0x15398>
   1c15c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c160:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c164:	ldr	x2, [x22, #8]
   1c168:	add	x1, x1, #0xb70
   1c16c:	ldr	x0, [x0, #3936]
   1c170:	mov	x19, #0x0                   	// #0
   1c174:	ldr	x2, [x2, #24]
   1c178:	ldr	x0, [x0]
   1c17c:	bl	6a10 <PyErr_Format@plt>
   1c180:	ldp	x21, x22, [sp, #32]
   1c184:	b	1be28 <PyFloat_FromString@plt+0x15398>
   1c188:	mov	x19, #0x0                   	// #0
   1c18c:	b	1bfc4 <PyFloat_FromString@plt+0x15534>
   1c190:	ldr	x0, [x19]
   1c194:	sub	x0, x0, #0x1
   1c198:	str	x0, [x19]
   1c19c:	cbnz	x0, 1c188 <PyFloat_FromString@plt+0x156f8>
   1c1a0:	mov	x0, x19
   1c1a4:	mov	x19, #0x0                   	// #0
   1c1a8:	bl	65d0 <_Py_Dealloc@plt>
   1c1ac:	b	1bfc4 <PyFloat_FromString@plt+0x15534>
   1c1b0:	mov	x0, #0x1                   	// #1
   1c1b4:	str	x0, [x19, #48]
   1c1b8:	str	xzr, [x19, #72]
   1c1bc:	mov	x0, x21
   1c1c0:	mov	w1, #0x0                   	// #0
   1c1c4:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
   1c1c8:	str	xzr, [x19, #32]
   1c1cc:	mov	x0, x21
   1c1d0:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   1c1d4:	b	1bdc4 <PyFloat_FromString@plt+0x15334>
   1c1d8:	ldr	w4, [x22, #24]
   1c1dc:	mov	w1, w3
   1c1e0:	str	x2, [x19, #48]
   1c1e4:	mov	x0, x21
   1c1e8:	str	x4, [x19, #72]
   1c1ec:	str	x5, [sp, #72]
   1c1f0:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
   1c1f4:	str	xzr, [x19, #32]
   1c1f8:	mov	x0, x21
   1c1fc:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   1c200:	ldr	x5, [sp, #72]
   1c204:	mov	x0, x21
   1c208:	add	x2, sp, #0x54
   1c20c:	mov	x1, x5
   1c210:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   1c214:	b	1bdc4 <PyFloat_FromString@plt+0x15334>
   1c218:	mov	x19, #0x0                   	// #0
   1c21c:	b	1c0f0 <PyFloat_FromString@plt+0x15660>
   1c220:	ldr	x0, [x19]
   1c224:	sub	x0, x0, #0x1
   1c228:	str	x0, [x19]
   1c22c:	cbnz	x0, 1c218 <PyFloat_FromString@plt+0x15788>
   1c230:	mov	x0, x19
   1c234:	mov	x19, #0x0                   	// #0
   1c238:	bl	65d0 <_Py_Dealloc@plt>
   1c23c:	b	1c0f0 <PyFloat_FromString@plt+0x15660>

000000000001c240 <PyInit__decimal@@Base>:
   1c240:	stp	x29, x30, [sp, #-176]!
   1c244:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c248:	adrp	x2, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c24c:	mov	x29, sp
   1c250:	adrp	x6, 65000 <PyInit__decimal@@Base+0x48dc0>
   1c254:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c258:	ldr	x1, [x1, #3944]
   1c25c:	adrp	x5, 65000 <PyInit__decimal@@Base+0x48dc0>
   1c260:	ldr	x2, [x2, #4064]
   1c264:	str	x1, [x6, #1904]
   1c268:	ldr	x0, [x0, #3888]
   1c26c:	adrp	x1, 28000 <PyInit__decimal@@Base+0xbdc0>
   1c270:	add	x1, x1, #0x218
   1c274:	adrp	x7, 65000 <PyInit__decimal@@Base+0x48dc0>
   1c278:	adrp	x4, 65000 <PyInit__decimal@@Base+0x48dc0>
   1c27c:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   1c280:	str	x0, [x5, #1912]
   1c284:	adrp	x0, 6000 <memcpy@plt-0x470>
   1c288:	add	x0, x0, #0xb78
   1c28c:	str	x1, [x3, #1896]
   1c290:	str	x0, [x4, #1624]
   1c294:	mov	x0, #0x4                   	// #4
   1c298:	str	x2, [x7, #1888]
   1c29c:	stp	x19, x20, [sp, #16]
   1c2a0:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   1c2a4:	stp	x21, x22, [sp, #32]
   1c2a8:	stp	x27, x28, [sp, #80]
   1c2ac:	bl	1f3d0 <PyInit__decimal@@Base+0x3190>
   1c2b0:	mov	x1, #0x0                   	// #0
   1c2b4:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c2b8:	add	x0, x0, #0xf70
   1c2bc:	bl	6760 <PyContextVar_New@plt>
   1c2c0:	add	x1, x19, #0x7a0
   1c2c4:	str	x0, [x1, #104]
   1c2c8:	cbz	x0, 1c84c <PyInit__decimal@@Base+0x60c>
   1c2cc:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c2d0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c2d4:	ldr	x2, [x21, #4040]
   1c2d8:	ldr	x0, [x0, #3864]
   1c2dc:	ldr	x2, [x2, #96]
   1c2e0:	ldr	x3, [x0, #96]
   1c2e4:	ldr	x20, [x0, #232]
   1c2e8:	ldr	x0, [x2, #16]
   1c2ec:	str	x0, [x1, #168]
   1c2f0:	ldr	x0, [x2, #40]
   1c2f4:	str	x0, [x1, #160]
   1c2f8:	ldr	x0, [x3, #64]
   1c2fc:	str	x0, [x1, #128]
   1c300:	ldr	x0, [x2, #232]
   1c304:	str	x0, [x1, #176]
   1c308:	cbz	x20, 1ca88 <PyInit__decimal@@Base+0x848>
   1c30c:	ldr	x1, [x20]
   1c310:	cbz	x1, 1ca88 <PyInit__decimal@@Base+0x848>
   1c314:	adrp	x22, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c318:	stp	x23, x24, [sp, #48]
   1c31c:	add	x23, x22, #0xf80
   1c320:	stp	x25, x26, [sp, #64]
   1c324:	b	1c330 <PyInit__decimal@@Base+0xf0>
   1c328:	ldr	x1, [x20, #32]!
   1c32c:	cbz	x1, 1ca54 <PyInit__decimal@@Base+0x814>
   1c330:	mov	x0, x23
   1c334:	bl	6860 <strcmp@plt>
   1c338:	cbnz	w0, 1c328 <PyInit__decimal@@Base+0xe8>
   1c33c:	ldr	w0, [x20, #16]
   1c340:	tbz	w0, #2, 1ca54 <PyInit__decimal@@Base+0x814>
   1c344:	add	x0, x19, #0x7a0
   1c348:	ldr	x1, [x20, #8]
   1c34c:	str	x1, [x0, #136]
   1c350:	cbz	x1, 1c844 <PyInit__decimal@@Base+0x604>
   1c354:	ldr	x21, [x21, #4040]
   1c358:	adrp	x22, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c35c:	ldr	x20, [x21, #232]
   1c360:	cbz	x20, 1ca20 <PyInit__decimal@@Base+0x7e0>
   1c364:	ldr	x1, [x20]
   1c368:	adrp	x22, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c36c:	add	x21, x22, #0xfc8
   1c370:	cbnz	x1, 1c380 <PyInit__decimal@@Base+0x140>
   1c374:	b	1ca20 <PyInit__decimal@@Base+0x7e0>
   1c378:	ldr	x1, [x20, #32]!
   1c37c:	cbz	x1, 1ca20 <PyInit__decimal@@Base+0x7e0>
   1c380:	mov	x0, x21
   1c384:	bl	6860 <strcmp@plt>
   1c388:	cbnz	w0, 1c378 <PyInit__decimal@@Base+0x138>
   1c38c:	ldr	w0, [x20, #16]
   1c390:	tbz	w0, #2, 1ca20 <PyInit__decimal@@Base+0x7e0>
   1c394:	add	x0, x19, #0x7a0
   1c398:	ldr	x1, [x20, #8]
   1c39c:	str	x1, [x0, #144]
   1c3a0:	cbz	x1, 1c844 <PyInit__decimal@@Base+0x604>
   1c3a4:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c3a8:	adrp	x20, 63000 <PyInit__decimal@@Base+0x46dc0>
   1c3ac:	add	x21, x20, #0x328
   1c3b0:	ldr	x1, [x1, #4032]
   1c3b4:	add	x23, x21, #0x1a0
   1c3b8:	add	x24, x21, #0x340
   1c3bc:	add	x22, x21, #0x4e0
   1c3c0:	mov	x0, x23
   1c3c4:	str	x1, [x21, #256]
   1c3c8:	str	x1, [x21, #672]
   1c3cc:	str	x1, [x21, #1088]
   1c3d0:	str	x1, [x21, #1504]
   1c3d4:	bl	66c0 <PyType_Ready@plt>
   1c3d8:	tbnz	w0, #31, 1c844 <PyInit__decimal@@Base+0x604>
   1c3dc:	mov	x0, x21
   1c3e0:	bl	66c0 <PyType_Ready@plt>
   1c3e4:	tbnz	w0, #31, 1c844 <PyInit__decimal@@Base+0x604>
   1c3e8:	mov	x0, x22
   1c3ec:	bl	66c0 <PyType_Ready@plt>
   1c3f0:	tbnz	w0, #31, 1c844 <PyInit__decimal@@Base+0x604>
   1c3f4:	mov	x0, x24
   1c3f8:	bl	66c0 <PyType_Ready@plt>
   1c3fc:	tbnz	w0, #31, 1c844 <PyInit__decimal@@Base+0x604>
   1c400:	adrp	x24, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c404:	add	x0, x24, #0xfd8
   1c408:	bl	6960 <PyUnicode_FromString@plt>
   1c40c:	mov	x22, x0
   1c410:	cbz	x0, 1c844 <PyInit__decimal@@Base+0x604>
   1c414:	mov	x2, x0
   1c418:	adrp	x25, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c41c:	ldr	x0, [x21, #680]
   1c420:	add	x23, x25, #0xfe0
   1c424:	mov	x1, x23
   1c428:	bl	64c0 <PyDict_SetItemString@plt>
   1c42c:	tbnz	w0, #31, 1cabc <PyInit__decimal@@Base+0x87c>
   1c430:	ldr	x0, [x21, #264]
   1c434:	mov	x1, x23
   1c438:	mov	x2, x22
   1c43c:	bl	64c0 <PyDict_SetItemString@plt>
   1c440:	tbnz	w0, #31, 1cabc <PyInit__decimal@@Base+0x87c>
   1c444:	ldr	x0, [x22]
   1c448:	sub	x0, x0, #0x1
   1c44c:	str	x0, [x22]
   1c450:	cbz	x0, 1cb1c <PyInit__decimal@@Base+0x8dc>
   1c454:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c458:	add	x0, x0, #0xff0
   1c45c:	bl	6830 <PyImport_ImportModule@plt>
   1c460:	mov	x21, x0
   1c464:	cbz	x0, 1c844 <PyInit__decimal@@Base+0x604>
   1c468:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1c46c:	add	x1, x1, #0xff8
   1c470:	bl	6580 <PyObject_GetAttrString@plt>
   1c474:	mov	x22, x0
   1c478:	cbz	x0, 1ca90 <PyInit__decimal@@Base+0x850>
   1c47c:	add	x3, x20, #0x328
   1c480:	adrp	x2, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c484:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c488:	add	x3, x3, #0x1a0
   1c48c:	add	x2, x2, #0x0
   1c490:	add	x1, x1, #0x8
   1c494:	bl	6550 <PyObject_CallMethod@plt>
   1c498:	cbz	x0, 1cb28 <PyInit__decimal@@Base+0x8e8>
   1c49c:	ldr	x2, [x0]
   1c4a0:	sub	x2, x2, #0x1
   1c4a4:	str	x2, [x0]
   1c4a8:	cbz	x2, 1cba0 <PyInit__decimal@@Base+0x960>
   1c4ac:	mov	x0, x21
   1c4b0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c4b4:	add	x1, x1, #0x18
   1c4b8:	bl	6580 <PyObject_GetAttrString@plt>
   1c4bc:	add	x1, x19, #0x7a0
   1c4c0:	str	x0, [x1, #152]
   1c4c4:	cbz	x0, 1cb28 <PyInit__decimal@@Base+0x8e8>
   1c4c8:	ldr	x0, [x21]
   1c4cc:	sub	x0, x0, #0x1
   1c4d0:	str	x0, [x21]
   1c4d4:	cbz	x0, 1cbb4 <PyInit__decimal@@Base+0x974>
   1c4d8:	ldr	x0, [x22]
   1c4dc:	sub	x0, x0, #0x1
   1c4e0:	str	x0, [x22]
   1c4e4:	cbz	x0, 1cba8 <PyInit__decimal@@Base+0x968>
   1c4e8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c4ec:	add	x0, x0, #0x28
   1c4f0:	bl	6830 <PyImport_ImportModule@plt>
   1c4f4:	mov	x21, x0
   1c4f8:	cbz	x0, 1c844 <PyInit__decimal@@Base+0x604>
   1c4fc:	add	x26, x19, #0x7a0
   1c500:	adrp	x4, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c504:	adrp	x23, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c508:	add	x4, x4, #0x38
   1c50c:	add	x3, x23, #0x50
   1c510:	adrp	x2, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c514:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c518:	add	x2, x2, #0x60
   1c51c:	add	x1, x1, #0x68
   1c520:	bl	6550 <PyObject_CallMethod@plt>
   1c524:	str	x0, [x26, #80]
   1c528:	cbz	x0, 1cb68 <PyInit__decimal@@Base+0x928>
   1c52c:	add	x0, x24, #0xfd8
   1c530:	bl	6960 <PyUnicode_FromString@plt>
   1c534:	mov	x22, x0
   1c538:	cbz	x0, 1cb68 <PyInit__decimal@@Base+0x928>
   1c53c:	mov	x2, x0
   1c540:	add	x1, x25, #0xfe0
   1c544:	ldr	x0, [x26, #80]
   1c548:	ldr	x0, [x0, #264]
   1c54c:	bl	64c0 <PyDict_SetItemString@plt>
   1c550:	tbnz	w0, #31, 1cbc0 <PyInit__decimal@@Base+0x980>
   1c554:	ldr	x0, [x22]
   1c558:	sub	x0, x0, #0x1
   1c55c:	str	x0, [x22]
   1c560:	cbz	x0, 1cbcc <PyInit__decimal@@Base+0x98c>
   1c564:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c568:	add	x0, x0, #0x78
   1c56c:	bl	6830 <PyImport_ImportModule@plt>
   1c570:	mov	x22, x0
   1c574:	cbz	x0, 1cb68 <PyInit__decimal@@Base+0x928>
   1c578:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c57c:	add	x1, x1, #0x88
   1c580:	bl	6580 <PyObject_GetAttrString@plt>
   1c584:	mov	x27, x0
   1c588:	cbz	x0, 1cb70 <PyInit__decimal@@Base+0x930>
   1c58c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c590:	add	x3, x20, #0x328
   1c594:	add	x3, x3, #0x4e0
   1c598:	mov	x4, x27
   1c59c:	ldr	x0, [x0, #4000]
   1c5a0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c5a4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c5a8:	add	x2, x2, #0x98
   1c5ac:	add	x1, x1, #0xa8
   1c5b0:	bl	6790 <PyObject_CallFunction@plt>
   1c5b4:	add	x1, x19, #0x7a0
   1c5b8:	str	x0, [x1, #88]
   1c5bc:	cbz	x0, 1cb70 <PyInit__decimal@@Base+0x930>
   1c5c0:	ldr	x0, [x21]
   1c5c4:	sub	x0, x0, #0x1
   1c5c8:	str	x0, [x21]
   1c5cc:	cbz	x0, 1cbfc <PyInit__decimal@@Base+0x9bc>
   1c5d0:	ldr	x0, [x22]
   1c5d4:	sub	x0, x0, #0x1
   1c5d8:	str	x0, [x22]
   1c5dc:	cbz	x0, 1cbf0 <PyInit__decimal@@Base+0x9b0>
   1c5e0:	ldr	x0, [x27]
   1c5e4:	sub	x0, x0, #0x1
   1c5e8:	str	x0, [x27]
   1c5ec:	cbz	x0, 1cbe4 <PyInit__decimal@@Base+0x9a4>
   1c5f0:	adrp	x21, 63000 <PyInit__decimal@@Base+0x46dc0>
   1c5f4:	add	x22, x21, #0x9b0
   1c5f8:	add	x0, x22, #0x700
   1c5fc:	mov	w1, #0x3f5                 	// #1013
   1c600:	bl	67f0 <PyModule_Create2@plt>
   1c604:	mov	x28, x0
   1c608:	cbz	x0, 1c844 <PyInit__decimal@@Base+0x604>
   1c60c:	add	x24, x20, #0x328
   1c610:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c614:	add	x2, x24, #0x1a0
   1c618:	add	x1, x1, #0x848
   1c61c:	ldr	x3, [x24, #416]
   1c620:	add	x3, x3, #0x1
   1c624:	str	x3, [x24, #416]
   1c628:	bl	6990 <PyModule_AddObject@plt>
   1c62c:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c630:	ldr	x3, [x20, #808]
   1c634:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c638:	mov	x2, x24
   1c63c:	mov	x0, x28
   1c640:	add	x3, x3, #0x1
   1c644:	add	x1, x1, #0x838
   1c648:	str	x3, [x20, #808]
   1c64c:	bl	6990 <PyModule_AddObject@plt>
   1c650:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c654:	add	x24, x19, #0x7a0
   1c658:	add	x1, x23, #0x50
   1c65c:	mov	x0, x28
   1c660:	ldr	x2, [x24, #80]
   1c664:	ldr	x3, [x2]
   1c668:	add	x3, x3, #0x1
   1c66c:	str	x3, [x2]
   1c670:	bl	6990 <PyModule_AddObject@plt>
   1c674:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c678:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c67c:	mov	x2, #0x0                   	// #0
   1c680:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c684:	add	x0, x0, #0xb0
   1c688:	ldr	x1, [x1, #3960]
   1c68c:	ldr	x1, [x1]
   1c690:	bl	6710 <PyErr_NewException@plt>
   1c694:	str	x0, [x24, #208]
   1c698:	mov	x2, x0
   1c69c:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c6a0:	ldr	x3, [x2]
   1c6a4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1c6a8:	mov	x0, x28
   1c6ac:	add	x1, x1, #0xb8
   1c6b0:	add	x3, x3, #0x1
   1c6b4:	str	x3, [x2]
   1c6b8:	bl	6990 <PyModule_AddObject@plt>
   1c6bc:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c6c0:	mov	x0, #0x9                   	// #9
   1c6c4:	bl	67a0 <PyTuple_New@plt>
   1c6c8:	str	x0, [x19, #1952]
   1c6cc:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c6d0:	adrp	x27, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c6d4:	adrp	x26, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c6d8:	mov	x23, x22
   1c6dc:	mov	x24, x22
   1c6e0:	ldr	x27, [x27, #4016]
   1c6e4:	mov	w25, #0x8                   	// #8
   1c6e8:	ldr	x26, [x26, #3936]
   1c6ec:	ldr	w0, [x23, #272]
   1c6f0:	cmp	w0, #0x800
   1c6f4:	b.eq	1cefc <PyInit__decimal@@Base+0xcbc>  // b.none
   1c6f8:	b.hi	1cc08 <PyInit__decimal@@Base+0x9c8>  // b.pmore
   1c6fc:	cmp	w0, #0x4
   1c700:	b.eq	1cf20 <PyInit__decimal@@Base+0xce0>  // b.none
   1c704:	cmp	w0, #0x400
   1c708:	b.ne	1cee4 <PyInit__decimal@@Base+0xca4>  // b.any
   1c70c:	add	x1, x19, #0x7a0
   1c710:	mov	x0, #0x2                   	// #2
   1c714:	ldr	x2, [x26]
   1c718:	ldr	x1, [x1, #208]
   1c71c:	bl	6a60 <PyTuple_Pack@plt>
   1c720:	mov	x22, x0
   1c724:	cbz	x22, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c728:	ldr	x0, [x23, #264]
   1c72c:	mov	x1, x22
   1c730:	mov	x2, #0x0                   	// #0
   1c734:	bl	6710 <PyErr_NewException@plt>
   1c738:	str	x0, [x23, #280]
   1c73c:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c740:	ldr	x0, [x22]
   1c744:	sub	x0, x0, #0x1
   1c748:	str	x0, [x22]
   1c74c:	cbz	x0, 1ced8 <PyInit__decimal@@Base+0xc98>
   1c750:	ldr	x2, [x23, #280]
   1c754:	mov	x0, x28
   1c758:	ldr	x1, [x23, #256]
   1c75c:	ldr	x3, [x2]
   1c760:	add	x3, x3, #0x1
   1c764:	str	x3, [x2]
   1c768:	bl	6990 <PyModule_AddObject@plt>
   1c76c:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c770:	ldr	x1, [x23, #280]
   1c774:	sub	x23, x23, #0x20
   1c778:	ldr	x0, [x19, #1952]
   1c77c:	ldr	x2, [x1]
   1c780:	add	x0, x0, w25, sxtw #3
   1c784:	sub	w25, w25, #0x1
   1c788:	add	x2, x2, #0x1
   1c78c:	str	x2, [x1]
   1c790:	cmn	w25, #0x1
   1c794:	str	x1, [x0, #24]
   1c798:	b.ne	1c6ec <PyInit__decimal@@Base+0x4ac>  // b.any
   1c79c:	add	x0, x21, #0x9b0
   1c7a0:	adrp	x23, 62000 <PyInit__decimal@@Base+0x45dc0>
   1c7a4:	add	x25, x0, #0x1d8
   1c7a8:	mov	x24, x0
   1c7ac:	ldr	x23, [x23, #4016]
   1c7b0:	ldr	x1, [x0, #24]
   1c7b4:	str	x1, [x0, #464]
   1c7b8:	b	1c814 <PyInit__decimal@@Base+0x5d4>
   1c7bc:	bl	6a60 <PyTuple_Pack@plt>
   1c7c0:	mov	x22, x0
   1c7c4:	mov	x1, x22
   1c7c8:	mov	x2, #0x0                   	// #0
   1c7cc:	cbz	x22, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c7d0:	ldr	x0, [x25, #8]
   1c7d4:	bl	6710 <PyErr_NewException@plt>
   1c7d8:	str	x0, [x25, #24]
   1c7dc:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c7e0:	ldr	x0, [x22]
   1c7e4:	sub	x0, x0, #0x1
   1c7e8:	str	x0, [x22]
   1c7ec:	cbz	x0, 1cc58 <PyInit__decimal@@Base+0xa18>
   1c7f0:	ldr	x2, [x25, #24]
   1c7f4:	mov	x0, x28
   1c7f8:	ldr	x1, [x25]
   1c7fc:	add	x25, x25, #0x20
   1c800:	ldr	x3, [x2]
   1c804:	add	x3, x3, #0x1
   1c808:	str	x3, [x2]
   1c80c:	bl	6990 <PyModule_AddObject@plt>
   1c810:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1c814:	ldr	x27, [x25]
   1c818:	mov	x0, #0x1                   	// #1
   1c81c:	cbz	x27, 1cc64 <PyInit__decimal@@Base+0xa24>
   1c820:	ldr	w2, [x25, #16]
   1c824:	ldr	x1, [x24, #24]
   1c828:	cmp	w2, #0x10
   1c82c:	b.ne	1c7bc <PyInit__decimal@@Base+0x57c>  // b.any
   1c830:	ldr	x2, [x23]
   1c834:	mov	x0, #0x2                   	// #2
   1c838:	bl	6a60 <PyTuple_Pack@plt>
   1c83c:	mov	x22, x0
   1c840:	b	1c7c4 <PyInit__decimal@@Base+0x584>
   1c844:	ldp	x23, x24, [sp, #48]
   1c848:	ldp	x25, x26, [sp, #64]
   1c84c:	mov	x28, #0x0                   	// #0
   1c850:	add	x2, x19, #0x7a0
   1c854:	ldr	x0, [x2, #152]
   1c858:	cbz	x0, 1c8bc <PyInit__decimal@@Base+0x67c>
   1c85c:	ldr	x1, [x0]
   1c860:	str	xzr, [x2, #152]
   1c864:	sub	x1, x1, #0x1
   1c868:	str	x1, [x0]
   1c86c:	cbnz	x1, 1c8bc <PyInit__decimal@@Base+0x67c>
   1c870:	mov	x27, #0x0                   	// #0
   1c874:	mov	x22, #0x0                   	// #0
   1c878:	mov	x21, #0x0                   	// #0
   1c87c:	bl	65d0 <_Py_Dealloc@plt>
   1c880:	cbz	x21, 1c894 <PyInit__decimal@@Base+0x654>
   1c884:	ldr	x0, [x21]
   1c888:	sub	x0, x0, #0x1
   1c88c:	str	x0, [x21]
   1c890:	cbz	x0, 1ca14 <PyInit__decimal@@Base+0x7d4>
   1c894:	cbz	x22, 1c8a8 <PyInit__decimal@@Base+0x668>
   1c898:	ldr	x0, [x22]
   1c89c:	sub	x0, x0, #0x1
   1c8a0:	str	x0, [x22]
   1c8a4:	cbz	x0, 1ca08 <PyInit__decimal@@Base+0x7c8>
   1c8a8:	cbz	x27, 1c8bc <PyInit__decimal@@Base+0x67c>
   1c8ac:	ldr	x0, [x27]
   1c8b0:	sub	x0, x0, #0x1
   1c8b4:	str	x0, [x27]
   1c8b8:	cbz	x0, 1c9fc <PyInit__decimal@@Base+0x7bc>
   1c8bc:	ldr	x0, [x19, #1952]
   1c8c0:	cbz	x0, 1c8d8 <PyInit__decimal@@Base+0x698>
   1c8c4:	ldr	x1, [x0]
   1c8c8:	str	xzr, [x19, #1952]
   1c8cc:	sub	x1, x1, #0x1
   1c8d0:	str	x1, [x0]
   1c8d4:	cbz	x1, 1c9f4 <PyInit__decimal@@Base+0x7b4>
   1c8d8:	add	x2, x19, #0x7a0
   1c8dc:	ldr	x0, [x2, #80]
   1c8e0:	cbz	x0, 1c8f8 <PyInit__decimal@@Base+0x6b8>
   1c8e4:	ldr	x1, [x0]
   1c8e8:	str	xzr, [x2, #80]
   1c8ec:	sub	x1, x1, #0x1
   1c8f0:	str	x1, [x0]
   1c8f4:	cbz	x1, 1c9ec <PyInit__decimal@@Base+0x7ac>
   1c8f8:	add	x2, x19, #0x7a0
   1c8fc:	ldr	x0, [x2, #96]
   1c900:	cbz	x0, 1c918 <PyInit__decimal@@Base+0x6d8>
   1c904:	ldr	x1, [x0]
   1c908:	str	xzr, [x2, #96]
   1c90c:	sub	x1, x1, #0x1
   1c910:	str	x1, [x0]
   1c914:	cbz	x1, 1c9e4 <PyInit__decimal@@Base+0x7a4>
   1c918:	add	x2, x19, #0x7a0
   1c91c:	ldr	x0, [x2, #112]
   1c920:	cbz	x0, 1c938 <PyInit__decimal@@Base+0x6f8>
   1c924:	ldr	x1, [x0]
   1c928:	str	xzr, [x2, #112]
   1c92c:	sub	x1, x1, #0x1
   1c930:	str	x1, [x0]
   1c934:	cbz	x1, 1c9dc <PyInit__decimal@@Base+0x79c>
   1c938:	add	x2, x19, #0x7a0
   1c93c:	ldr	x0, [x2, #120]
   1c940:	cbz	x0, 1c958 <PyInit__decimal@@Base+0x718>
   1c944:	ldr	x1, [x0]
   1c948:	str	xzr, [x2, #120]
   1c94c:	sub	x1, x1, #0x1
   1c950:	str	x1, [x0]
   1c954:	cbz	x1, 1c9d4 <PyInit__decimal@@Base+0x794>
   1c958:	add	x19, x19, #0x7a0
   1c95c:	ldr	x0, [x19, #104]
   1c960:	cbz	x0, 1c978 <PyInit__decimal@@Base+0x738>
   1c964:	ldr	x1, [x0]
   1c968:	str	xzr, [x19, #104]
   1c96c:	sub	x1, x1, #0x1
   1c970:	str	x1, [x0]
   1c974:	cbz	x1, 1c9cc <PyInit__decimal@@Base+0x78c>
   1c978:	cbz	x28, 1c98c <PyInit__decimal@@Base+0x74c>
   1c97c:	ldr	x0, [x28]
   1c980:	sub	x0, x0, #0x1
   1c984:	str	x0, [x28]
   1c988:	cbz	x0, 1c9a8 <PyInit__decimal@@Base+0x768>
   1c98c:	mov	x28, #0x0                   	// #0
   1c990:	mov	x0, x28
   1c994:	ldp	x19, x20, [sp, #16]
   1c998:	ldp	x21, x22, [sp, #32]
   1c99c:	ldp	x27, x28, [sp, #80]
   1c9a0:	ldp	x29, x30, [sp], #176
   1c9a4:	ret
   1c9a8:	mov	x0, x28
   1c9ac:	mov	x28, #0x0                   	// #0
   1c9b0:	bl	65d0 <_Py_Dealloc@plt>
   1c9b4:	mov	x0, x28
   1c9b8:	ldp	x19, x20, [sp, #16]
   1c9bc:	ldp	x21, x22, [sp, #32]
   1c9c0:	ldp	x27, x28, [sp, #80]
   1c9c4:	ldp	x29, x30, [sp], #176
   1c9c8:	ret
   1c9cc:	bl	65d0 <_Py_Dealloc@plt>
   1c9d0:	b	1c978 <PyInit__decimal@@Base+0x738>
   1c9d4:	bl	65d0 <_Py_Dealloc@plt>
   1c9d8:	b	1c958 <PyInit__decimal@@Base+0x718>
   1c9dc:	bl	65d0 <_Py_Dealloc@plt>
   1c9e0:	b	1c938 <PyInit__decimal@@Base+0x6f8>
   1c9e4:	bl	65d0 <_Py_Dealloc@plt>
   1c9e8:	b	1c918 <PyInit__decimal@@Base+0x6d8>
   1c9ec:	bl	65d0 <_Py_Dealloc@plt>
   1c9f0:	b	1c8f8 <PyInit__decimal@@Base+0x6b8>
   1c9f4:	bl	65d0 <_Py_Dealloc@plt>
   1c9f8:	b	1c8d8 <PyInit__decimal@@Base+0x698>
   1c9fc:	mov	x0, x27
   1ca00:	bl	65d0 <_Py_Dealloc@plt>
   1ca04:	b	1c8bc <PyInit__decimal@@Base+0x67c>
   1ca08:	mov	x0, x22
   1ca0c:	bl	65d0 <_Py_Dealloc@plt>
   1ca10:	b	1c8a8 <PyInit__decimal@@Base+0x668>
   1ca14:	mov	x0, x21
   1ca18:	bl	65d0 <_Py_Dealloc@plt>
   1ca1c:	b	1c894 <PyInit__decimal@@Base+0x654>
   1ca20:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1ca24:	add	x2, x22, #0xfc8
   1ca28:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1ca2c:	add	x1, x1, #0xf98
   1ca30:	ldr	x0, [x0, #3920]
   1ca34:	mov	x28, #0x0                   	// #0
   1ca38:	ldr	x0, [x0]
   1ca3c:	bl	6a10 <PyErr_Format@plt>
   1ca40:	add	x0, x19, #0x7a0
   1ca44:	ldp	x23, x24, [sp, #48]
   1ca48:	ldp	x25, x26, [sp, #64]
   1ca4c:	str	xzr, [x0, #144]
   1ca50:	b	1c850 <PyInit__decimal@@Base+0x610>
   1ca54:	ldp	x23, x24, [sp, #48]
   1ca58:	ldp	x25, x26, [sp, #64]
   1ca5c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   1ca60:	add	x2, x22, #0xf80
   1ca64:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   1ca68:	ldr	x0, [x0, #3920]
   1ca6c:	add	x1, x1, #0xf98
   1ca70:	mov	x28, #0x0                   	// #0
   1ca74:	ldr	x0, [x0]
   1ca78:	bl	6a10 <PyErr_Format@plt>
   1ca7c:	add	x0, x19, #0x7a0
   1ca80:	str	xzr, [x0, #136]
   1ca84:	b	1c850 <PyInit__decimal@@Base+0x610>
   1ca88:	adrp	x22, 41000 <PyInit__decimal@@Base+0x24dc0>
   1ca8c:	b	1ca5c <PyInit__decimal@@Base+0x81c>
   1ca90:	ldr	x1, [x21]
   1ca94:	sub	x1, x1, #0x1
   1ca98:	str	x1, [x21]
   1ca9c:	cbz	x1, 1cab0 <PyInit__decimal@@Base+0x870>
   1caa0:	mov	x28, #0x0                   	// #0
   1caa4:	ldp	x23, x24, [sp, #48]
   1caa8:	ldp	x25, x26, [sp, #64]
   1caac:	b	1c850 <PyInit__decimal@@Base+0x610>
   1cab0:	mov	x0, x21
   1cab4:	bl	65d0 <_Py_Dealloc@plt>
   1cab8:	b	1caa0 <PyInit__decimal@@Base+0x860>
   1cabc:	mov	x27, #0x0                   	// #0
   1cac0:	mov	x28, #0x0                   	// #0
   1cac4:	ldr	x1, [x22]
   1cac8:	sub	x1, x1, #0x1
   1cacc:	str	x1, [x22]
   1cad0:	cbz	x1, 1cb10 <PyInit__decimal@@Base+0x8d0>
   1cad4:	add	x2, x19, #0x7a0
   1cad8:	ldr	x0, [x2, #152]
   1cadc:	cbz	x0, 1caf4 <PyInit__decimal@@Base+0x8b4>
   1cae0:	ldr	x1, [x0]
   1cae4:	str	xzr, [x2, #152]
   1cae8:	sub	x1, x1, #0x1
   1caec:	str	x1, [x0]
   1caf0:	cbz	x1, 1cc2c <PyInit__decimal@@Base+0x9ec>
   1caf4:	cbz	x27, 1cf14 <PyInit__decimal@@Base+0xcd4>
   1caf8:	mov	x21, x27
   1cafc:	mov	x22, #0x0                   	// #0
   1cb00:	mov	x27, #0x0                   	// #0
   1cb04:	ldp	x23, x24, [sp, #48]
   1cb08:	ldp	x25, x26, [sp, #64]
   1cb0c:	b	1c884 <PyInit__decimal@@Base+0x644>
   1cb10:	mov	x0, x22
   1cb14:	bl	65d0 <_Py_Dealloc@plt>
   1cb18:	b	1cad4 <PyInit__decimal@@Base+0x894>
   1cb1c:	mov	x0, x22
   1cb20:	bl	65d0 <_Py_Dealloc@plt>
   1cb24:	b	1c454 <PyInit__decimal@@Base+0x214>
   1cb28:	ldr	x0, [x21]
   1cb2c:	sub	x0, x0, #0x1
   1cb30:	str	x0, [x21]
   1cb34:	cbnz	x0, 1cb40 <PyInit__decimal@@Base+0x900>
   1cb38:	mov	x0, x21
   1cb3c:	bl	65d0 <_Py_Dealloc@plt>
   1cb40:	ldr	x0, [x22]
   1cb44:	sub	x0, x0, #0x1
   1cb48:	str	x0, [x22]
   1cb4c:	cbnz	x0, 1caa0 <PyInit__decimal@@Base+0x860>
   1cb50:	mov	x0, x22
   1cb54:	mov	x28, #0x0                   	// #0
   1cb58:	bl	65d0 <_Py_Dealloc@plt>
   1cb5c:	ldp	x23, x24, [sp, #48]
   1cb60:	ldp	x25, x26, [sp, #64]
   1cb64:	b	1c850 <PyInit__decimal@@Base+0x610>
   1cb68:	mov	x27, #0x0                   	// #0
   1cb6c:	mov	x22, #0x0                   	// #0
   1cb70:	add	x1, x19, #0x7a0
   1cb74:	ldr	x28, [x1, #152]
   1cb78:	cbz	x28, 1cb94 <PyInit__decimal@@Base+0x954>
   1cb7c:	ldr	x0, [x28]
   1cb80:	str	xzr, [x1, #152]
   1cb84:	sub	x0, x0, #0x1
   1cb88:	str	x0, [x28]
   1cb8c:	cbz	x0, 1cc44 <PyInit__decimal@@Base+0xa04>
   1cb90:	mov	x28, #0x0                   	// #0
   1cb94:	ldp	x23, x24, [sp, #48]
   1cb98:	ldp	x25, x26, [sp, #64]
   1cb9c:	b	1c884 <PyInit__decimal@@Base+0x644>
   1cba0:	bl	65d0 <_Py_Dealloc@plt>
   1cba4:	b	1c4ac <PyInit__decimal@@Base+0x26c>
   1cba8:	mov	x0, x22
   1cbac:	bl	65d0 <_Py_Dealloc@plt>
   1cbb0:	b	1c4e8 <PyInit__decimal@@Base+0x2a8>
   1cbb4:	mov	x0, x21
   1cbb8:	bl	65d0 <_Py_Dealloc@plt>
   1cbbc:	b	1c4d8 <PyInit__decimal@@Base+0x298>
   1cbc0:	mov	x27, x21
   1cbc4:	mov	x28, #0x0                   	// #0
   1cbc8:	b	1cac4 <PyInit__decimal@@Base+0x884>
   1cbcc:	mov	x0, x22
   1cbd0:	bl	65d0 <_Py_Dealloc@plt>
   1cbd4:	b	1c564 <PyInit__decimal@@Base+0x324>
   1cbd8:	ldp	x23, x24, [sp, #48]
   1cbdc:	ldp	x25, x26, [sp, #64]
   1cbe0:	b	1c850 <PyInit__decimal@@Base+0x610>
   1cbe4:	mov	x0, x27
   1cbe8:	bl	65d0 <_Py_Dealloc@plt>
   1cbec:	b	1c5f0 <PyInit__decimal@@Base+0x3b0>
   1cbf0:	mov	x0, x22
   1cbf4:	bl	65d0 <_Py_Dealloc@plt>
   1cbf8:	b	1c5e0 <PyInit__decimal@@Base+0x3a0>
   1cbfc:	mov	x0, x21
   1cc00:	bl	65d0 <_Py_Dealloc@plt>
   1cc04:	b	1c5d0 <PyInit__decimal@@Base+0x390>
   1cc08:	cmp	w0, #0x4, lsl #12
   1cc0c:	b.ne	1cee4 <PyInit__decimal@@Base+0xca4>  // b.any
   1cc10:	ldr	x3, [x24, #184]
   1cc14:	mov	x0, #0x3                   	// #3
   1cc18:	ldr	x1, [x24, #216]
   1cc1c:	ldr	x2, [x24, #248]
   1cc20:	bl	6a60 <PyTuple_Pack@plt>
   1cc24:	mov	x22, x0
   1cc28:	b	1c724 <PyInit__decimal@@Base+0x4e4>
   1cc2c:	mov	x21, x27
   1cc30:	mov	x22, #0x0                   	// #0
   1cc34:	mov	x27, #0x0                   	// #0
   1cc38:	ldp	x23, x24, [sp, #48]
   1cc3c:	ldp	x25, x26, [sp, #64]
   1cc40:	b	1c87c <PyInit__decimal@@Base+0x63c>
   1cc44:	mov	x0, x28
   1cc48:	mov	x28, #0x0                   	// #0
   1cc4c:	ldp	x23, x24, [sp, #48]
   1cc50:	ldp	x25, x26, [sp, #64]
   1cc54:	b	1c87c <PyInit__decimal@@Base+0x63c>
   1cc58:	mov	x0, x22
   1cc5c:	bl	65d0 <_Py_Dealloc@plt>
   1cc60:	b	1c7f0 <PyInit__decimal@@Base+0x5b0>
   1cc64:	add	x26, x19, #0x7a0
   1cc68:	add	x20, x20, #0x328
   1cc6c:	mov	x0, x20
   1cc70:	mov	x1, #0x0                   	// #0
   1cc74:	bl	6840 <PyObject_CallObject@plt>
   1cc78:	mov	x2, x0
   1cc7c:	str	x0, [x26, #96]
   1cc80:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cc84:	ldr	x3, [x2]
   1cc88:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1cc8c:	mov	x0, x28
   1cc90:	add	x1, x1, #0xd0
   1cc94:	add	x3, x3, #0x1
   1cc98:	str	x3, [x2]
   1cc9c:	bl	6990 <PyModule_AddObject@plt>
   1cca0:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cca4:	adrp	x2, 62000 <PyInit__decimal@@Base+0x45dc0>
   1cca8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1ccac:	mov	x0, x28
   1ccb0:	add	x1, x1, #0xe0
   1ccb4:	ldr	x2, [x2, #4024]
   1ccb8:	ldr	x3, [x2]
   1ccbc:	add	x3, x3, #0x1
   1ccc0:	str	x3, [x2]
   1ccc4:	bl	6990 <PyModule_AddObject@plt>
   1ccc8:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cccc:	mov	x0, x20
   1ccd0:	mov	x1, #0x0                   	// #0
   1ccd4:	bl	6840 <PyObject_CallObject@plt>
   1ccd8:	str	x0, [x26, #112]
   1ccdc:	mov	x2, x0
   1cce0:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cce4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   1cce8:	add	x0, x0, #0x8c0
   1ccec:	mov	w1, #0x4bbf                	// #19391
   1ccf0:	mov	w8, #0x4                   	// #4
   1ccf4:	mov	w23, #0x1                   	// #1
   1ccf8:	str	w23, [x2, #80]
   1ccfc:	ldp	x4, x5, [x0]
   1cd00:	stp	x4, x5, [sp, #128]
   1cd04:	add	x22, sp, #0x80
   1cd08:	ldp	x6, x7, [x0, #16]
   1cd0c:	stp	x4, x5, [sp, #96]
   1cd10:	mov	x5, #0x9                   	// #9
   1cd14:	str	x5, [sp, #128]
   1cd18:	stp	x6, x7, [sp, #144]
   1cd1c:	ldp	x24, x25, [x0, #32]
   1cd20:	str	w1, [sp, #152]
   1cd24:	stp	x24, x25, [sp, #160]
   1cd28:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1cd2c:	mov	x0, x28
   1cd30:	str	w8, [sp, #164]
   1cd34:	add	x1, x1, #0xf0
   1cd38:	ldp	x8, x9, [sp, #128]
   1cd3c:	stp	x8, x9, [x2, #16]
   1cd40:	ldp	x8, x9, [sp, #144]
   1cd44:	stp	x8, x9, [x2, #32]
   1cd48:	ldp	x8, x9, [sp, #160]
   1cd4c:	stp	x8, x9, [x2, #48]
   1cd50:	ldr	x8, [x2]
   1cd54:	stp	x6, x7, [sp, #112]
   1cd58:	add	x8, x8, #0x1
   1cd5c:	str	x8, [x2]
   1cd60:	bl	6990 <PyModule_AddObject@plt>
   1cd64:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cd68:	mov	x0, x20
   1cd6c:	mov	x1, #0x0                   	// #0
   1cd70:	bl	6840 <PyObject_CallObject@plt>
   1cd74:	str	x0, [x26, #120]
   1cd78:	mov	x2, x0
   1cd7c:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cd80:	ldp	x4, x5, [sp, #96]
   1cd84:	stp	x4, x5, [x22]
   1cd88:	mov	x0, #0x9                   	// #9
   1cd8c:	str	x0, [sp, #128]
   1cd90:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1cd94:	ldp	x6, x7, [sp, #112]
   1cd98:	stp	x6, x7, [x22, #16]
   1cd9c:	add	x1, x1, #0x100
   1cda0:	str	wzr, [sp, #152]
   1cda4:	mov	x0, x28
   1cda8:	stp	x24, x25, [x2, #48]
   1cdac:	ldp	x8, x9, [x22]
   1cdb0:	stp	x8, x9, [x2, #16]
   1cdb4:	ldp	x8, x9, [x22, #16]
   1cdb8:	stp	x8, x9, [x2, #32]
   1cdbc:	ldr	x8, [x2]
   1cdc0:	str	w23, [x2, #80]
   1cdc4:	stp	x24, x25, [x22, #32]
   1cdc8:	add	x3, x8, #0x1
   1cdcc:	str	x3, [x2]
   1cdd0:	bl	6990 <PyModule_AddObject@plt>
   1cdd4:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cdd8:	add	x20, x21, #0x9b0
   1cddc:	add	x20, x20, #0x6b0
   1cde0:	b	1ce0c <PyInit__decimal@@Base+0xbcc>
   1cde4:	ldr	x0, [x20, #8]
   1cde8:	bl	66a0 <PyLong_FromSsize_t@plt>
   1cdec:	mov	x22, x0
   1cdf0:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1cdf4:	ldr	x1, [x20]
   1cdf8:	mov	x2, x0
   1cdfc:	add	x20, x20, #0x10
   1ce00:	mov	x0, x28
   1ce04:	bl	6990 <PyModule_AddObject@plt>
   1ce08:	tbnz	w0, #31, 1cac4 <PyInit__decimal@@Base+0x884>
   1ce0c:	ldr	x0, [x20]
   1ce10:	cbnz	x0, 1cde4 <PyInit__decimal@@Base+0xba4>
   1ce14:	add	x20, x19, #0x7a0
   1ce18:	add	x20, x20, #0xc0
   1ce1c:	b	1ce30 <PyInit__decimal@@Base+0xbf0>
   1ce20:	ldrsw	x2, [x20, #8]
   1ce24:	add	x20, x20, #0x10
   1ce28:	bl	6500 <PyModule_AddIntConstant@plt>
   1ce2c:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1ce30:	ldr	x1, [x20]
   1ce34:	mov	x0, x28
   1ce38:	cbnz	x1, 1ce20 <PyInit__decimal@@Base+0xbe0>
   1ce3c:	add	x21, x19, #0x7a0
   1ce40:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
   1ce44:	add	x21, x21, #0x10
   1ce48:	add	x20, x20, #0x610
   1ce4c:	mov	x22, #0x0                   	// #0
   1ce50:	ldr	x0, [x20]
   1ce54:	bl	6980 <PyUnicode_InternFromString@plt>
   1ce58:	str	x0, [x22, x21]
   1ce5c:	mov	x3, x0
   1ce60:	add	x22, x22, #0x8
   1ce64:	mov	x2, x0
   1ce68:	cbz	x0, 1cbd8 <PyInit__decimal@@Base+0x998>
   1ce6c:	ldr	x4, [x3]
   1ce70:	mov	x0, x28
   1ce74:	ldr	x1, [x20]
   1ce78:	add	x4, x4, #0x1
   1ce7c:	str	x4, [x3]
   1ce80:	add	x20, x20, #0x8
   1ce84:	bl	6990 <PyModule_AddObject@plt>
   1ce88:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1ce8c:	cmp	x22, #0x40
   1ce90:	b.ne	1ce50 <PyInit__decimal@@Base+0xc10>  // b.any
   1ce94:	adrp	x2, 42000 <PyInit__decimal@@Base+0x25dc0>
   1ce98:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1ce9c:	add	x2, x2, #0x110
   1cea0:	add	x1, x1, #0x118
   1cea4:	mov	x0, x28
   1cea8:	bl	6970 <PyModule_AddStringConstant@plt>
   1ceac:	tbnz	w0, #31, 1cbd8 <PyInit__decimal@@Base+0x998>
   1ceb0:	bl	2a3e0 <PyInit__decimal@@Base+0xe1a0>
   1ceb4:	mov	x2, x0
   1ceb8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   1cebc:	mov	x0, x28
   1cec0:	add	x1, x1, #0x128
   1cec4:	bl	6970 <PyModule_AddStringConstant@plt>
   1cec8:	ldp	x23, x24, [sp, #48]
   1cecc:	ldp	x25, x26, [sp, #64]
   1ced0:	tbz	w0, #31, 1c990 <PyInit__decimal@@Base+0x750>
   1ced4:	b	1c850 <PyInit__decimal@@Base+0x610>
   1ced8:	mov	x0, x22
   1cedc:	bl	65d0 <_Py_Dealloc@plt>
   1cee0:	b	1c750 <PyInit__decimal@@Base+0x510>
   1cee4:	add	x1, x19, #0x7a0
   1cee8:	mov	x0, #0x1                   	// #1
   1ceec:	ldr	x1, [x1, #208]
   1cef0:	bl	6a60 <PyTuple_Pack@plt>
   1cef4:	mov	x22, x0
   1cef8:	b	1c724 <PyInit__decimal@@Base+0x4e4>
   1cefc:	ldr	x1, [x24, #216]
   1cf00:	mov	x0, #0x2                   	// #2
   1cf04:	ldr	x2, [x24, #248]
   1cf08:	bl	6a60 <PyTuple_Pack@plt>
   1cf0c:	mov	x22, x0
   1cf10:	b	1c724 <PyInit__decimal@@Base+0x4e4>
   1cf14:	ldp	x23, x24, [sp, #48]
   1cf18:	ldp	x25, x26, [sp, #64]
   1cf1c:	b	1c8bc <PyInit__decimal@@Base+0x67c>
   1cf20:	add	x1, x19, #0x7a0
   1cf24:	mov	x0, #0x2                   	// #2
   1cf28:	ldr	x2, [x27]
   1cf2c:	ldr	x1, [x1, #208]
   1cf30:	bl	6a60 <PyTuple_Pack@plt>
   1cf34:	mov	x22, x0
   1cf38:	b	1c724 <PyInit__decimal@@Base+0x4e4>
   1cf3c:	nop
   1cf40:	mov	x10, x0
   1cf44:	mov	x5, #0x0                   	// #0
   1cf48:	mov	x0, #0x0                   	// #0
   1cf4c:	cbz	x4, 1cff4 <PyInit__decimal@@Base+0xdb4>
   1cf50:	mov	x12, #0xffffffff89e7ffff    	// #-1981284353
   1cf54:	mov	x11, #0x76180000            	// #1981284352
   1cf58:	movk	x12, #0x2304, lsl #32
   1cf5c:	movk	x11, #0xdcfb, lsl #32
   1cf60:	movk	x12, #0x8ac7, lsl #48
   1cf64:	movk	x11, #0x7538, lsl #48
   1cf68:	ldr	x8, [x1, x5, lsl #3]
   1cf6c:	ldr	x6, [x2, x5, lsl #3]
   1cf70:	add	x6, x8, x6
   1cf74:	add	x6, x6, x0
   1cf78:	cmp	x6, x12
   1cf7c:	add	x9, x6, x11
   1cf80:	cset	w7, hi  // hi = pmore
   1cf84:	cmp	x6, x8
   1cf88:	cset	w8, cc  // cc = lo, ul, last
   1cf8c:	orr	w7, w7, w8
   1cf90:	cmp	w7, #0x0
   1cf94:	and	x0, x7, #0xff
   1cf98:	csel	x6, x9, x6, ne  // ne = any
   1cf9c:	str	x6, [x10, x5, lsl #3]
   1cfa0:	add	x5, x5, #0x1
   1cfa4:	cmp	x4, x5
   1cfa8:	b.ne	1cf68 <PyInit__decimal@@Base+0xd28>  // b.any
   1cfac:	cmp	x3, x5
   1cfb0:	cset	w2, hi  // hi = pmore
   1cfb4:	ands	w7, w7, w2
   1cfb8:	b.eq	1cff4 <PyInit__decimal@@Base+0xdb4>  // b.none
   1cfbc:	mov	x4, #0x89e80000            	// #2313682944
   1cfc0:	movk	x4, #0x2304, lsl #32
   1cfc4:	movk	x4, #0x8ac7, lsl #48
   1cfc8:	ldr	x2, [x1, x5, lsl #3]
   1cfcc:	add	x2, x2, #0x1
   1cfd0:	cmp	x2, x4
   1cfd4:	cset	w6, eq  // eq = none
   1cfd8:	b.eq	1d09c <PyInit__decimal@@Base+0xe5c>  // b.none
   1cfdc:	str	x2, [x10, x5, lsl #3]
   1cfe0:	cmp	w6, #0x0
   1cfe4:	add	x5, x5, #0x1
   1cfe8:	ccmp	x3, x5, #0x0, ne  // ne = any
   1cfec:	b.hi	1cfc8 <PyInit__decimal@@Base+0xd88>  // b.pmore
   1cff0:	and	x0, x6, #0xff
   1cff4:	cmp	x3, x5
   1cff8:	b.ls	1d06c <PyInit__decimal@@Base+0xe2c>  // b.plast
   1cffc:	add	x2, x5, #0x2
   1d000:	sub	x6, x3, #0x1
   1d004:	sub	x6, x6, x5
   1d008:	lsl	x2, x2, #3
   1d00c:	sub	x4, x2, #0x10
   1d010:	add	x8, x1, x2
   1d014:	add	x7, x10, x4
   1d018:	add	x2, x10, x2
   1d01c:	add	x4, x1, x4
   1d020:	cmp	x8, x7
   1d024:	ccmp	x2, x4, #0x0, hi  // hi = pmore
   1d028:	ccmp	x6, #0x9, #0x0, ls  // ls = plast
   1d02c:	b.ls	1d070 <PyInit__decimal@@Base+0xe30>  // b.plast
   1d030:	sub	x3, x3, x5
   1d034:	mov	x2, #0x0                   	// #0
   1d038:	lsr	x6, x3, #1
   1d03c:	lsl	x6, x6, #4
   1d040:	ldr	q0, [x4, x2]
   1d044:	str	q0, [x7, x2]
   1d048:	add	x2, x2, #0x10
   1d04c:	cmp	x6, x2
   1d050:	b.ne	1d040 <PyInit__decimal@@Base+0xe00>  // b.any
   1d054:	and	x2, x3, #0xfffffffffffffffe
   1d058:	add	x5, x5, x2
   1d05c:	cmp	x3, x2
   1d060:	b.eq	1d06c <PyInit__decimal@@Base+0xe2c>  // b.none
   1d064:	ldr	x1, [x1, x5, lsl #3]
   1d068:	str	x1, [x10, x5, lsl #3]
   1d06c:	ret
   1d070:	ldr	x2, [x1, x5, lsl #3]
   1d074:	str	x2, [x10, x5, lsl #3]
   1d078:	add	x5, x5, #0x1
   1d07c:	cmp	x3, x5
   1d080:	b.eq	1d06c <PyInit__decimal@@Base+0xe2c>  // b.none
   1d084:	ldr	x2, [x1, x5, lsl #3]
   1d088:	str	x2, [x10, x5, lsl #3]
   1d08c:	add	x5, x5, #0x1
   1d090:	cmp	x3, x5
   1d094:	b.ne	1d070 <PyInit__decimal@@Base+0xe30>  // b.any
   1d098:	b	1d06c <PyInit__decimal@@Base+0xe2c>
   1d09c:	str	xzr, [x10, x5, lsl #3]
   1d0a0:	add	x5, x5, #0x1
   1d0a4:	cmp	x5, x3
   1d0a8:	b.cc	1cfc8 <PyInit__decimal@@Base+0xd88>  // b.lo, b.ul, b.last
   1d0ac:	mov	w6, w7
   1d0b0:	b	1cff0 <PyInit__decimal@@Base+0xdb0>
   1d0b4:	nop
   1d0b8:	cbz	x2, 1d14c <PyInit__decimal@@Base+0xf0c>
   1d0bc:	mov	x10, #0xffffffff89e7ffff    	// #-1981284353
   1d0c0:	mov	x9, #0x76180000            	// #1981284352
   1d0c4:	movk	x10, #0x2304, lsl #32
   1d0c8:	movk	x9, #0xdcfb, lsl #32
   1d0cc:	mov	x4, #0x0                   	// #0
   1d0d0:	mov	x7, #0x0                   	// #0
   1d0d4:	movk	x10, #0x8ac7, lsl #48
   1d0d8:	movk	x9, #0x7538, lsl #48
   1d0dc:	nop
   1d0e0:	ldr	x6, [x0, x4, lsl #3]
   1d0e4:	ldr	x3, [x1, x4, lsl #3]
   1d0e8:	add	x3, x6, x3
   1d0ec:	add	x3, x3, x7
   1d0f0:	cmp	x3, x10
   1d0f4:	add	x8, x3, x9
   1d0f8:	cset	w5, hi  // hi = pmore
   1d0fc:	cmp	x3, x6
   1d100:	cset	w6, cc  // cc = lo, ul, last
   1d104:	orr	w5, w5, w6
   1d108:	cmp	w5, #0x0
   1d10c:	and	x7, x5, #0xff
   1d110:	csel	x3, x8, x3, ne  // ne = any
   1d114:	str	x3, [x0, x4, lsl #3]
   1d118:	add	x4, x4, #0x1
   1d11c:	cmp	x2, x4
   1d120:	b.ne	1d0e0 <PyInit__decimal@@Base+0xea0>  // b.any
   1d124:	cbz	w5, 1d14c <PyInit__decimal@@Base+0xf0c>
   1d128:	add	x0, x0, x2, lsl #3
   1d12c:	mov	x2, #0x89e80000            	// #2313682944
   1d130:	movk	x2, #0x2304, lsl #32
   1d134:	movk	x2, #0x8ac7, lsl #48
   1d138:	ldr	x1, [x0]
   1d13c:	add	x1, x1, #0x1
   1d140:	cmp	x1, x2
   1d144:	b.eq	1d150 <PyInit__decimal@@Base+0xf10>  // b.none
   1d148:	str	x1, [x0]
   1d14c:	ret
   1d150:	str	xzr, [x0], #8
   1d154:	b	1d138 <PyInit__decimal@@Base+0xef8>
   1d158:	mov	x4, x0
   1d15c:	mov	x3, #0xffffffff89e7ffff    	// #-1981284353
   1d160:	ldr	x0, [x0]
   1d164:	movk	x3, #0x2304, lsl #32
   1d168:	movk	x3, #0x8ac7, lsl #48
   1d16c:	adds	x2, x0, x2
   1d170:	cset	w6, cs  // cs = hs, nlast
   1d174:	cmp	x2, x3
   1d178:	cset	w0, hi  // hi = pmore
   1d17c:	orr	w6, w6, w0
   1d180:	cbnz	w6, 1d190 <PyInit__decimal@@Base+0xf50>
   1d184:	mov	x0, #0x0                   	// #0
   1d188:	str	x2, [x4]
   1d18c:	ret
   1d190:	mov	x0, #0x76180000            	// #1981284352
   1d194:	cmp	x1, #0x1
   1d198:	movk	x0, #0xdcfb, lsl #32
   1d19c:	mov	x3, #0x1                   	// #1
   1d1a0:	movk	x0, #0x7538, lsl #48
   1d1a4:	add	x0, x2, x0
   1d1a8:	str	x0, [x4]
   1d1ac:	b.ls	1d20c <PyInit__decimal@@Base+0xfcc>  // b.plast
   1d1b0:	mov	x5, #0x89e80000            	// #2313682944
   1d1b4:	movk	x5, #0x2304, lsl #32
   1d1b8:	movk	x5, #0x8ac7, lsl #48
   1d1bc:	nop
   1d1c0:	ldr	x2, [x4, x3, lsl #3]
   1d1c4:	add	x2, x2, #0x1
   1d1c8:	cmp	x2, x5
   1d1cc:	cset	w0, eq  // eq = none
   1d1d0:	b.eq	1d1f0 <PyInit__decimal@@Base+0xfb0>  // b.none
   1d1d4:	str	x2, [x4, x3, lsl #3]
   1d1d8:	cmp	w0, #0x0
   1d1dc:	add	x3, x3, #0x1
   1d1e0:	ccmp	x1, x3, #0x0, ne  // ne = any
   1d1e4:	b.hi	1d1c0 <PyInit__decimal@@Base+0xf80>  // b.pmore
   1d1e8:	and	x0, x0, #0xff
   1d1ec:	ret
   1d1f0:	str	xzr, [x4, x3, lsl #3]
   1d1f4:	add	x3, x3, #0x1
   1d1f8:	cmp	x3, x1
   1d1fc:	b.cc	1d1c0 <PyInit__decimal@@Base+0xf80>  // b.lo, b.ul, b.last
   1d200:	mov	w0, w6
   1d204:	and	x0, x0, #0xff
   1d208:	b	1d1ec <PyInit__decimal@@Base+0xfac>
   1d20c:	mov	x0, x3
   1d210:	ret
   1d214:	nop
   1d218:	mov	x4, #0x89e80000            	// #2313682944
   1d21c:	mov	x3, #0x0                   	// #0
   1d220:	movk	x4, #0x2304, lsl #32
   1d224:	movk	x4, #0x8ac7, lsl #48
   1d228:	cbz	x1, 1d27c <PyInit__decimal@@Base+0x103c>
   1d22c:	nop
   1d230:	ldr	x2, [x0, x3, lsl #3]
   1d234:	add	x2, x2, #0x1
   1d238:	cmp	x2, x4
   1d23c:	cset	w5, eq  // eq = none
   1d240:	b.eq	1d260 <PyInit__decimal@@Base+0x1020>  // b.none
   1d244:	str	x2, [x0, x3, lsl #3]
   1d248:	cmp	w5, #0x0
   1d24c:	add	x3, x3, #0x1
   1d250:	ccmp	x1, x3, #0x0, ne  // ne = any
   1d254:	b.hi	1d230 <PyInit__decimal@@Base+0xff0>  // b.pmore
   1d258:	and	x0, x5, #0xff
   1d25c:	ret
   1d260:	str	xzr, [x0, x3, lsl #3]
   1d264:	add	x3, x3, #0x1
   1d268:	cmp	x1, x3
   1d26c:	b.hi	1d230 <PyInit__decimal@@Base+0xff0>  // b.pmore
   1d270:	mov	w5, #0x1                   	// #1
   1d274:	and	x0, x5, #0xff
   1d278:	b	1d25c <PyInit__decimal@@Base+0x101c>
   1d27c:	mov	x0, #0x1                   	// #1
   1d280:	ret
   1d284:	nop
   1d288:	mov	x5, #0x0                   	// #0
   1d28c:	cbz	x4, 1d318 <PyInit__decimal@@Base+0x10d8>
   1d290:	mov	x11, #0x89e80000            	// #2313682944
   1d294:	mov	x7, #0x0                   	// #0
   1d298:	movk	x11, #0x2304, lsl #32
   1d29c:	movk	x11, #0x8ac7, lsl #48
   1d2a0:	ldr	x8, [x1, x5, lsl #3]
   1d2a4:	ldr	x6, [x2, x5, lsl #3]
   1d2a8:	sub	x7, x8, x7
   1d2ac:	sub	x6, x7, x6
   1d2b0:	cmp	x6, x8
   1d2b4:	add	x9, x6, x11
   1d2b8:	csel	x6, x9, x6, hi  // hi = pmore
   1d2bc:	str	x6, [x0, x5, lsl #3]
   1d2c0:	add	x5, x5, #0x1
   1d2c4:	cset	w10, hi  // hi = pmore
   1d2c8:	cset	x7, hi  // hi = pmore
   1d2cc:	cmp	x4, x5
   1d2d0:	b.ne	1d2a0 <PyInit__decimal@@Base+0x1060>  // b.any
   1d2d4:	cmp	w10, #0x0
   1d2d8:	ccmp	x3, x5, #0x0, ne  // ne = any
   1d2dc:	b.ls	1d318 <PyInit__decimal@@Base+0x10d8>  // b.plast
   1d2e0:	mov	x7, #0xffffffff89e7ffff    	// #-1981284353
   1d2e4:	movk	x7, #0x2304, lsl #32
   1d2e8:	movk	x7, #0x8ac7, lsl #48
   1d2ec:	nop
   1d2f0:	ldr	x2, [x1, x5, lsl #3]
   1d2f4:	cmp	x2, #0x0
   1d2f8:	sub	x6, x2, #0x1
   1d2fc:	cset	w4, eq  // eq = none
   1d300:	cbz	x2, 1d3c4 <PyInit__decimal@@Base+0x1184>
   1d304:	str	x6, [x0, x5, lsl #3]
   1d308:	cmp	w4, #0x0
   1d30c:	add	x5, x5, #0x1
   1d310:	ccmp	x3, x5, #0x0, ne  // ne = any
   1d314:	b.hi	1d2f0 <PyInit__decimal@@Base+0x10b0>  // b.pmore
   1d318:	cmp	x3, x5
   1d31c:	b.ls	1d394 <PyInit__decimal@@Base+0x1154>  // b.plast
   1d320:	add	x2, x5, #0x2
   1d324:	sub	x6, x3, #0x1
   1d328:	sub	x6, x6, x5
   1d32c:	lsl	x2, x2, #3
   1d330:	sub	x4, x2, #0x10
   1d334:	add	x8, x1, x2
   1d338:	add	x7, x0, x4
   1d33c:	add	x2, x0, x2
   1d340:	add	x4, x1, x4
   1d344:	cmp	x8, x7
   1d348:	ccmp	x2, x4, #0x0, hi  // hi = pmore
   1d34c:	ccmp	x6, #0x9, #0x0, ls  // ls = plast
   1d350:	b.ls	1d398 <PyInit__decimal@@Base+0x1158>  // b.plast
   1d354:	sub	x3, x3, x5
   1d358:	mov	x2, #0x0                   	// #0
   1d35c:	lsr	x6, x3, #1
   1d360:	lsl	x6, x6, #4
   1d364:	nop
   1d368:	ldr	q0, [x4, x2]
   1d36c:	str	q0, [x7, x2]
   1d370:	add	x2, x2, #0x10
   1d374:	cmp	x6, x2
   1d378:	b.ne	1d368 <PyInit__decimal@@Base+0x1128>  // b.any
   1d37c:	and	x2, x3, #0xfffffffffffffffe
   1d380:	add	x5, x5, x2
   1d384:	cmp	x3, x2
   1d388:	b.eq	1d394 <PyInit__decimal@@Base+0x1154>  // b.none
   1d38c:	ldr	x1, [x1, x5, lsl #3]
   1d390:	str	x1, [x0, x5, lsl #3]
   1d394:	ret
   1d398:	ldr	x2, [x1, x5, lsl #3]
   1d39c:	str	x2, [x0, x5, lsl #3]
   1d3a0:	add	x5, x5, #0x1
   1d3a4:	cmp	x3, x5
   1d3a8:	b.eq	1d394 <PyInit__decimal@@Base+0x1154>  // b.none
   1d3ac:	ldr	x2, [x1, x5, lsl #3]
   1d3b0:	str	x2, [x0, x5, lsl #3]
   1d3b4:	add	x5, x5, #0x1
   1d3b8:	cmp	x3, x5
   1d3bc:	b.ne	1d398 <PyInit__decimal@@Base+0x1158>  // b.any
   1d3c0:	b	1d394 <PyInit__decimal@@Base+0x1154>
   1d3c4:	str	x7, [x0, x5, lsl #3]
   1d3c8:	add	x5, x5, #0x1
   1d3cc:	cmp	x3, x5
   1d3d0:	b.hi	1d2f0 <PyInit__decimal@@Base+0x10b0>  // b.pmore
   1d3d4:	ret
   1d3d8:	cbz	x2, 1d448 <PyInit__decimal@@Base+0x1208>
   1d3dc:	mov	x8, #0x89e80000            	// #2313682944
   1d3e0:	mov	x4, #0x0                   	// #0
   1d3e4:	movk	x8, #0x2304, lsl #32
   1d3e8:	mov	x5, #0x0                   	// #0
   1d3ec:	movk	x8, #0x8ac7, lsl #48
   1d3f0:	ldr	x6, [x0, x4, lsl #3]
   1d3f4:	ldr	x3, [x1, x4, lsl #3]
   1d3f8:	sub	x5, x6, x5
   1d3fc:	sub	x3, x5, x3
   1d400:	cmp	x6, x3
   1d404:	add	x7, x3, x8
   1d408:	csel	x7, x7, x3, cc  // cc = lo, ul, last
   1d40c:	str	x7, [x0, x4, lsl #3]
   1d410:	add	x4, x4, #0x1
   1d414:	cset	x5, cc  // cc = lo, ul, last
   1d418:	cmp	x2, x4
   1d41c:	b.ne	1d3f0 <PyInit__decimal@@Base+0x11b0>  // b.any
   1d420:	cmp	x6, x3
   1d424:	b.cs	1d448 <PyInit__decimal@@Base+0x1208>  // b.hs, b.nlast
   1d428:	add	x0, x0, x2, lsl #3
   1d42c:	mov	x2, #0xffffffff89e7ffff    	// #-1981284353
   1d430:	movk	x2, #0x2304, lsl #32
   1d434:	movk	x2, #0x8ac7, lsl #48
   1d438:	ldr	x1, [x0]
   1d43c:	cbz	x1, 1d44c <PyInit__decimal@@Base+0x120c>
   1d440:	sub	x1, x1, #0x1
   1d444:	str	x1, [x0]
   1d448:	ret
   1d44c:	str	x2, [x0], #8
   1d450:	b	1d438 <PyInit__decimal@@Base+0x11f8>
   1d454:	nop
   1d458:	mov	x4, #0x0                   	// #0
   1d45c:	cbz	x2, 1d500 <PyInit__decimal@@Base+0x12c0>
   1d460:	ldr	x6, [x1]
   1d464:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1d468:	mov	x10, #0x89e80000            	// #2313682944
   1d46c:	mov	x13, #0x76180000            	// #1981284352
   1d470:	movk	x10, #0x2304, lsl #32
   1d474:	movk	x13, #0xdcfb, lsl #32
   1d478:	umulh	x5, x3, x6
   1d47c:	mov	x9, #0x0                   	// #0
   1d480:	ldr	x11, [x4, #368]
   1d484:	mul	x6, x3, x6
   1d488:	movk	x10, #0x8ac7, lsl #48
   1d48c:	movk	x13, #0x7538, lsl #48
   1d490:	b	1d4a8 <PyInit__decimal@@Base+0x1268>
   1d494:	ldr	x5, [x1, x9, lsl #3]
   1d498:	mul	x6, x3, x5
   1d49c:	umulh	x5, x3, x5
   1d4a0:	adds	x6, x6, x4
   1d4a4:	cinc	x5, x5, cs  // cs = hs, nlast
   1d4a8:	and	x8, x10, x6, asr #63
   1d4ac:	add	x7, x5, x6, lsr #63
   1d4b0:	add	x8, x8, x6
   1d4b4:	add	x12, x5, x13
   1d4b8:	umulh	x4, x7, x11
   1d4bc:	madd	x7, x7, x11, x8
   1d4c0:	cmp	x8, x7
   1d4c4:	cinc	x4, x4, hi  // hi = pmore
   1d4c8:	add	x5, x5, x4
   1d4cc:	mvn	x4, x5
   1d4d0:	mul	x7, x4, x10
   1d4d4:	umulh	x5, x4, x10
   1d4d8:	adds	x7, x7, x6
   1d4dc:	adc	x6, x5, x12
   1d4e0:	and	x5, x6, x10
   1d4e4:	sub	x4, x6, x4
   1d4e8:	add	x7, x5, x7
   1d4ec:	str	x7, [x0, x9, lsl #3]
   1d4f0:	add	x9, x9, #0x1
   1d4f4:	cmp	x2, x9
   1d4f8:	b.ne	1d494 <PyInit__decimal@@Base+0x1254>  // b.any
   1d4fc:	add	x0, x0, x2, lsl #3
   1d500:	str	x4, [x0]
   1d504:	ret
   1d508:	cbz	x4, 1d5d4 <PyInit__decimal@@Base+0x1394>
   1d50c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1d510:	mov	x10, #0x89e80000            	// #2313682944
   1d514:	mov	x14, #0x76180000            	// #1981284352
   1d518:	movk	x10, #0x2304, lsl #32
   1d51c:	ldr	x12, [x5, #368]
   1d520:	movk	x14, #0xdcfb, lsl #32
   1d524:	mov	x11, x0
   1d528:	mov	x13, #0x0                   	// #0
   1d52c:	movk	x10, #0x8ac7, lsl #48
   1d530:	movk	x14, #0x7538, lsl #48
   1d534:	nop
   1d538:	mov	x6, #0x0                   	// #0
   1d53c:	mov	x7, #0x0                   	// #0
   1d540:	cbz	x3, 1d5d8 <PyInit__decimal@@Base+0x1398>
   1d544:	nop
   1d548:	ldr	x9, [x1, x7, lsl #3]
   1d54c:	ldr	x5, [x2, x13, lsl #3]
   1d550:	ldr	x0, [x11, x7, lsl #3]
   1d554:	mul	x8, x5, x9
   1d558:	umulh	x5, x5, x9
   1d55c:	adds	x0, x0, x8
   1d560:	cinc	x5, x5, cs  // cs = hs, nlast
   1d564:	adds	x0, x0, x6
   1d568:	cinc	x5, x5, cs  // cs = hs, nlast
   1d56c:	and	x8, x10, x0, asr #63
   1d570:	add	x9, x5, x0, lsr #63
   1d574:	add	x8, x8, x0
   1d578:	add	x15, x5, x14
   1d57c:	umulh	x6, x9, x12
   1d580:	madd	x9, x9, x12, x8
   1d584:	cmp	x9, x8
   1d588:	cinc	x6, x6, cc  // cc = lo, ul, last
   1d58c:	add	x5, x6, x5
   1d590:	mvn	x5, x5
   1d594:	mul	x8, x5, x10
   1d598:	umulh	x6, x5, x10
   1d59c:	adds	x0, x8, x0
   1d5a0:	adc	x6, x6, x15
   1d5a4:	and	x8, x6, x10
   1d5a8:	sub	x6, x6, x5
   1d5ac:	add	x0, x8, x0
   1d5b0:	str	x0, [x11, x7, lsl #3]
   1d5b4:	add	x7, x7, #0x1
   1d5b8:	cmp	x3, x7
   1d5bc:	b.ne	1d548 <PyInit__decimal@@Base+0x1308>  // b.any
   1d5c0:	str	x6, [x11, x3, lsl #3]
   1d5c4:	add	x13, x13, #0x1
   1d5c8:	cmp	x4, x13
   1d5cc:	add	x11, x11, #0x8
   1d5d0:	b.ne	1d538 <PyInit__decimal@@Base+0x12f8>  // b.any
   1d5d4:	ret
   1d5d8:	mov	x6, x3
   1d5dc:	str	x6, [x11, x3, lsl #3]
   1d5e0:	add	x13, x13, #0x1
   1d5e4:	add	x11, x11, #0x8
   1d5e8:	cmp	x4, x13
   1d5ec:	b.ne	1d538 <PyInit__decimal@@Base+0x12f8>  // b.any
   1d5f0:	b	1d5d4 <PyInit__decimal@@Base+0x1394>
   1d5f4:	nop
   1d5f8:	cbz	x2, 1d6bc <PyInit__decimal@@Base+0x147c>
   1d5fc:	stp	x29, x30, [sp, #-80]!
   1d600:	mov	x29, sp
   1d604:	stp	x19, x20, [sp, #16]
   1d608:	sub	x19, x2, #0x1
   1d60c:	mov	x20, x0
   1d610:	stp	x21, x22, [sp, #32]
   1d614:	mov	x22, x2
   1d618:	mov	x2, x3
   1d61c:	ldr	x21, [x1, x19, lsl #3]
   1d620:	stp	x23, x24, [sp, #48]
   1d624:	mov	x23, x3
   1d628:	mov	x0, x21
   1d62c:	mov	x3, #0x0                   	// #0
   1d630:	str	x25, [sp, #64]
   1d634:	mov	x25, x1
   1d638:	mov	x1, #0x0                   	// #0
   1d63c:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1d640:	str	x0, [x20, x19, lsl #3]
   1d644:	cmp	x22, #0x1
   1d648:	msub	x0, x23, x0, x21
   1d64c:	sub	x22, x22, #0x2
   1d650:	b.eq	1d6a4 <PyInit__decimal@@Base+0x1464>  // b.none
   1d654:	mov	x24, #0x89e80000            	// #2313682944
   1d658:	mov	x21, #0x0                   	// #0
   1d65c:	movk	x24, #0x2304, lsl #32
   1d660:	movk	x24, #0x8ac7, lsl #48
   1d664:	nop
   1d668:	ldr	x19, [x25, x22, lsl #3]
   1d66c:	mul	x4, x0, x24
   1d670:	umulh	x1, x0, x24
   1d674:	mov	x2, x23
   1d678:	adds	x0, x4, x19
   1d67c:	mov	x3, #0x0                   	// #0
   1d680:	cinc	x1, x1, cs  // cs = hs, nlast
   1d684:	adds	x19, x21, x0
   1d688:	mov	x0, x19
   1d68c:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1d690:	str	x0, [x20, x22, lsl #3]
   1d694:	sub	x22, x22, #0x1
   1d698:	msub	x0, x0, x23, x19
   1d69c:	cmn	x22, #0x1
   1d6a0:	b.ne	1d668 <PyInit__decimal@@Base+0x1428>  // b.any
   1d6a4:	ldp	x19, x20, [sp, #16]
   1d6a8:	ldp	x21, x22, [sp, #32]
   1d6ac:	ldp	x23, x24, [sp, #48]
   1d6b0:	ldr	x25, [sp, #64]
   1d6b4:	ldp	x29, x30, [sp], #80
   1d6b8:	ret
   1d6bc:	mov	x0, #0x0                   	// #0
   1d6c0:	ret
   1d6c4:	nop
   1d6c8:	sub	sp, sp, #0x4b0
   1d6cc:	cmp	x4, x5
   1d6d0:	stp	x29, x30, [sp]
   1d6d4:	mov	x29, sp
   1d6d8:	stp	x19, x20, [sp, #16]
   1d6dc:	stp	x21, x22, [sp, #32]
   1d6e0:	stp	x23, x24, [sp, #48]
   1d6e4:	stp	x25, x26, [sp, #64]
   1d6e8:	stp	x27, x28, [sp, #80]
   1d6ec:	str	x0, [sp, #128]
   1d6f0:	str	x1, [sp, #152]
   1d6f4:	b.cc	1db30 <PyInit__decimal@@Base+0x18f0>  // b.lo, b.ul, b.last
   1d6f8:	lsl	x0, x5, #3
   1d6fc:	str	x0, [sp, #120]
   1d700:	sub	x21, x0, #0x8
   1d704:	add	x0, sp, #0xb0
   1d708:	str	x0, [sp, #112]
   1d70c:	mov	x20, #0x89e80000            	// #2313682944
   1d710:	movk	x20, #0x2304, lsl #32
   1d714:	mov	x25, x4
   1d718:	ldr	x0, [x3, x21]
   1d71c:	movk	x20, #0x8ac7, lsl #48
   1d720:	mov	x24, x5
   1d724:	mov	x28, x2
   1d728:	add	x0, x0, #0x1
   1d72c:	mov	x27, x3
   1d730:	cmp	x4, #0x3f
   1d734:	sub	x23, x4, x5
   1d738:	udiv	x0, x20, x0
   1d73c:	str	x0, [sp, #144]
   1d740:	b.hi	1daf4 <PyInit__decimal@@Base+0x18b4>  // b.pmore
   1d744:	cmp	x24, #0x3f
   1d748:	b.hi	1da8c <PyInit__decimal@@Base+0x184c>  // b.pmore
   1d74c:	add	x0, sp, #0x2b0
   1d750:	str	x0, [sp, #168]
   1d754:	mov	x26, x0
   1d758:	ldr	x0, [sp, #112]
   1d75c:	mov	x1, x28
   1d760:	ldr	x3, [sp, #144]
   1d764:	mov	x2, x25
   1d768:	bl	1d458 <PyInit__decimal@@Base+0x1218>
   1d76c:	mov	x2, x24
   1d770:	mov	x1, x27
   1d774:	mov	x0, x26
   1d778:	bl	1d458 <PyInit__decimal@@Base+0x1218>
   1d77c:	cmn	x23, #0x1
   1d780:	b.eq	1d984 <PyInit__decimal@@Base+0x1744>  // b.none
   1d784:	add	x1, x26, x21
   1d788:	str	x1, [sp, #136]
   1d78c:	ldr	x1, [sp, #112]
   1d790:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1d794:	mov	x27, #0x89e80000            	// #2313682944
   1d798:	mov	x28, #0xffffffff89e7ffff    	// #-1981284353
   1d79c:	movk	x27, #0x2304, lsl #32
   1d7a0:	movk	x28, #0x2304, lsl #32
   1d7a4:	add	x20, x1, x25, lsl #3
   1d7a8:	mov	x25, #0x76180000            	// #1981284352
   1d7ac:	movk	x25, #0xdcfb, lsl #32
   1d7b0:	add	x22, x1, x23, lsl #3
   1d7b4:	ldr	x21, [x0, #368]
   1d7b8:	movk	x27, #0x8ac7, lsl #48
   1d7bc:	add	x0, x24, #0x1
   1d7c0:	movk	x28, #0x8ac7, lsl #48
   1d7c4:	movk	x25, #0x7538, lsl #48
   1d7c8:	str	x0, [sp, #160]
   1d7cc:	nop
   1d7d0:	ldr	x0, [sp, #136]
   1d7d4:	mov	x3, #0x0                   	// #0
   1d7d8:	ldr	x5, [x20]
   1d7dc:	mov	x1, #0x0                   	// #0
   1d7e0:	ldr	x19, [x0]
   1d7e4:	mov	x0, x5
   1d7e8:	str	x5, [sp, #96]
   1d7ec:	mov	x2, x19
   1d7f0:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1d7f4:	ldr	x5, [sp, #96]
   1d7f8:	mov	x12, x0
   1d7fc:	ldur	x1, [x20, #-8]
   1d800:	mov	x3, #0x0                   	// #0
   1d804:	msub	x5, x19, x12, x5
   1d808:	mov	x2, x19
   1d80c:	mul	x0, x5, x27
   1d810:	umulh	x5, x5, x27
   1d814:	adds	x1, x0, x1
   1d818:	mov	x14, x1
   1d81c:	cinc	x1, x5, cs  // cs = hs, nlast
   1d820:	mov	x0, x14
   1d824:	stp	x14, x12, [sp, #96]
   1d828:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1d82c:	ldp	x14, x12, [sp, #96]
   1d830:	ldr	x1, [sp, #120]
   1d834:	add	x13, x26, x1
   1d838:	madd	x3, x12, x27, x0
   1d83c:	msub	x1, x19, x0, x14
   1d840:	b	1d854 <PyInit__decimal@@Base+0x1614>
   1d844:	adds	x1, x19, x1
   1d848:	sub	x3, x3, #0x1
   1d84c:	ccmp	x1, x28, #0x2, cc  // cc = lo, ul, last
   1d850:	b.hi	1d8c8 <PyInit__decimal@@Base+0x1688>  // b.pmore
   1d854:	cmp	x3, x28
   1d858:	b.hi	1d844 <PyInit__decimal@@Base+0x1604>  // b.pmore
   1d85c:	ldur	x0, [x13, #-16]
   1d860:	mul	x5, x3, x0
   1d864:	umulh	x0, x3, x0
   1d868:	and	x15, x27, x5, asr #63
   1d86c:	add	x14, x0, x25
   1d870:	add	x15, x15, x5
   1d874:	add	x12, x0, x5, lsr #63
   1d878:	madd	x16, x12, x21, x15
   1d87c:	umulh	x12, x12, x21
   1d880:	cmp	x15, x16
   1d884:	cinc	x12, x12, hi  // hi = pmore
   1d888:	add	x0, x0, x12
   1d88c:	mvn	x0, x0
   1d890:	mul	x15, x0, x27
   1d894:	umulh	x12, x0, x27
   1d898:	adds	x5, x5, x15
   1d89c:	adc	x12, x12, x14
   1d8a0:	sub	x0, x12, x0
   1d8a4:	cmp	x1, x0
   1d8a8:	b.cc	1d844 <PyInit__decimal@@Base+0x1604>  // b.lo, b.ul, b.last
   1d8ac:	b.ne	1d8c8 <PyInit__decimal@@Base+0x1688>  // b.any
   1d8b0:	ldur	x0, [x20, #-16]
   1d8b4:	and	x12, x12, x27
   1d8b8:	add	x5, x12, x5
   1d8bc:	cmp	x0, x5
   1d8c0:	b.cc	1d844 <PyInit__decimal@@Base+0x1604>  // b.lo, b.ul, b.last
   1d8c4:	nop
   1d8c8:	ldr	x2, [x26]
   1d8cc:	mov	x5, #0x0                   	// #0
   1d8d0:	umulh	x0, x2, x3
   1d8d4:	mul	x2, x2, x3
   1d8d8:	b	1d8f4 <PyInit__decimal@@Base+0x16b4>
   1d8dc:	ldr	x1, [x26, x13, lsl #3]
   1d8e0:	mov	x5, x13
   1d8e4:	mul	x0, x1, x3
   1d8e8:	umulh	x1, x1, x3
   1d8ec:	adds	x2, x2, x0
   1d8f0:	cinc	x0, x1, cs  // cs = hs, nlast
   1d8f4:	and	x16, x27, x2, asr #63
   1d8f8:	add	x13, x0, x2, lsr #63
   1d8fc:	add	x16, x16, x2
   1d900:	add	x14, x0, x25
   1d904:	ldr	x12, [x22, x5, lsl #3]
   1d908:	umulh	x1, x13, x21
   1d90c:	madd	x15, x13, x21, x16
   1d910:	add	x13, x5, #0x1
   1d914:	cmp	x16, x15
   1d918:	cinc	x1, x1, hi  // hi = pmore
   1d91c:	add	x1, x1, x0
   1d920:	mvn	x1, x1
   1d924:	mul	x0, x1, x27
   1d928:	umulh	x15, x1, x27
   1d92c:	adds	x2, x2, x0
   1d930:	adc	x0, x15, x14
   1d934:	sub	x2, x12, x2
   1d938:	and	x14, x0, x27
   1d93c:	sub	x1, x0, x1
   1d940:	sub	x2, x2, x14
   1d944:	cmp	x12, x2
   1d948:	sub	x14, x2, x25
   1d94c:	csel	x2, x14, x2, cc  // cc = lo, ul, last
   1d950:	str	x2, [x22, x5, lsl #3]
   1d954:	cset	x0, cc  // cc = lo, ul, last
   1d958:	cmp	x24, x5
   1d95c:	add	x2, x0, x1
   1d960:	b.ne	1d8dc <PyInit__decimal@@Base+0x169c>  // b.any
   1d964:	cbnz	x2, 1daac <PyInit__decimal@@Base+0x186c>
   1d968:	ldr	x0, [sp, #128]
   1d96c:	str	x3, [x0, x23, lsl #3]
   1d970:	sub	x23, x23, #0x1
   1d974:	sub	x20, x20, #0x8
   1d978:	cmn	x23, #0x1
   1d97c:	sub	x22, x22, #0x8
   1d980:	b.ne	1d7d0 <PyInit__decimal@@Base+0x1590>  // b.any
   1d984:	ldr	x0, [sp, #152]
   1d988:	cbz	x0, 1dad4 <PyInit__decimal@@Base+0x1894>
   1d98c:	sub	x21, x24, #0x1
   1d990:	cbz	x24, 1da28 <PyInit__decimal@@Base+0x17e8>
   1d994:	ldr	x0, [sp, #112]
   1d998:	mov	x3, #0x0                   	// #0
   1d99c:	ldr	x19, [sp, #144]
   1d9a0:	mov	x1, #0x0                   	// #0
   1d9a4:	ldr	x22, [x0, x21, lsl #3]
   1d9a8:	mov	x2, x19
   1d9ac:	mov	x0, x22
   1d9b0:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1d9b4:	ldr	x1, [sp, #152]
   1d9b8:	cmp	x24, #0x1
   1d9bc:	str	x0, [x1, x21, lsl #3]
   1d9c0:	msub	x0, x19, x0, x22
   1d9c4:	sub	x21, x24, #0x2
   1d9c8:	b.eq	1da28 <PyInit__decimal@@Base+0x17e8>  // b.none
   1d9cc:	mov	x25, #0x89e80000            	// #2313682944
   1d9d0:	mov	x22, #0x0                   	// #0
   1d9d4:	movk	x25, #0x2304, lsl #32
   1d9d8:	movk	x25, #0x8ac7, lsl #48
   1d9dc:	nop
   1d9e0:	ldr	x1, [sp, #112]
   1d9e4:	mov	x3, #0x0                   	// #0
   1d9e8:	ldr	x19, [sp, #144]
   1d9ec:	ldr	x23, [x1, x21, lsl #3]
   1d9f0:	mul	x1, x0, x25
   1d9f4:	umulh	x0, x0, x25
   1d9f8:	mov	x2, x19
   1d9fc:	adds	x23, x1, x23
   1da00:	cinc	x1, x0, cs  // cs = hs, nlast
   1da04:	adds	x23, x22, x23
   1da08:	mov	x0, x23
   1da0c:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1da10:	ldr	x1, [sp, #152]
   1da14:	str	x0, [x1, x21, lsl #3]
   1da18:	sub	x21, x21, #0x1
   1da1c:	msub	x0, x19, x0, x23
   1da20:	cmn	x21, #0x1
   1da24:	b.ne	1d9e0 <PyInit__decimal@@Base+0x17a0>  // b.any
   1da28:	mov	w20, #0x0                   	// #0
   1da2c:	ldr	x2, [sp, #112]
   1da30:	add	x0, sp, #0xb0
   1da34:	cmp	x2, x0
   1da38:	b.eq	1da4c <PyInit__decimal@@Base+0x180c>  // b.none
   1da3c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1da40:	mov	x0, x2
   1da44:	ldr	x1, [x1, #1912]
   1da48:	blr	x1
   1da4c:	ldr	x0, [sp, #168]
   1da50:	cmp	x26, x0
   1da54:	b.eq	1da68 <PyInit__decimal@@Base+0x1828>  // b.none
   1da58:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1da5c:	mov	x0, x26
   1da60:	ldr	x1, [x1, #1912]
   1da64:	blr	x1
   1da68:	mov	w0, w20
   1da6c:	ldp	x29, x30, [sp]
   1da70:	ldp	x19, x20, [sp, #16]
   1da74:	ldp	x21, x22, [sp, #32]
   1da78:	ldp	x23, x24, [sp, #48]
   1da7c:	ldp	x25, x26, [sp, #64]
   1da80:	ldp	x27, x28, [sp, #80]
   1da84:	add	sp, sp, #0x4b0
   1da88:	ret
   1da8c:	add	x0, x24, #0x1
   1da90:	mov	x1, #0x8                   	// #8
   1da94:	bl	28278 <PyInit__decimal@@Base+0xc038>
   1da98:	mov	x26, x0
   1da9c:	cbz	x0, 1db18 <PyInit__decimal@@Base+0x18d8>
   1daa0:	add	x0, sp, #0x2b0
   1daa4:	str	x0, [sp, #168]
   1daa8:	b	1d758 <PyInit__decimal@@Base+0x1518>
   1daac:	ldr	x0, [sp, #128]
   1dab0:	sub	x3, x3, #0x1
   1dab4:	mov	x4, x24
   1dab8:	mov	x2, x26
   1dabc:	mov	x1, x22
   1dac0:	str	x3, [x0, x23, lsl #3]
   1dac4:	mov	x0, x22
   1dac8:	ldr	x3, [sp, #160]
   1dacc:	bl	1cf40 <PyInit__decimal@@Base+0xd00>
   1dad0:	b	1d970 <PyInit__decimal@@Base+0x1730>
   1dad4:	mov	x4, x24
   1dad8:	b	1dae8 <PyInit__decimal@@Base+0x18a8>
   1dadc:	ldr	x0, [sp, #112]
   1dae0:	ldr	x0, [x0, x4, lsl #3]
   1dae4:	cbnz	x0, 1db10 <PyInit__decimal@@Base+0x18d0>
   1dae8:	subs	x4, x4, #0x1
   1daec:	b.pl	1dadc <PyInit__decimal@@Base+0x189c>  // b.nfrst
   1daf0:	b	1da28 <PyInit__decimal@@Base+0x17e8>
   1daf4:	add	x0, x4, #0x1
   1daf8:	mov	x1, #0x8                   	// #8
   1dafc:	bl	28278 <PyInit__decimal@@Base+0xc038>
   1db00:	str	x0, [sp, #112]
   1db04:	cbnz	x0, 1d744 <PyInit__decimal@@Base+0x1504>
   1db08:	mov	w20, #0xffffffff            	// #-1
   1db0c:	b	1da68 <PyInit__decimal@@Base+0x1828>
   1db10:	mov	w20, #0x1                   	// #1
   1db14:	b	1da2c <PyInit__decimal@@Base+0x17ec>
   1db18:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1db1c:	mov	w20, #0xffffffff            	// #-1
   1db20:	ldr	x0, [sp, #112]
   1db24:	ldr	x1, [x1, #1912]
   1db28:	blr	x1
   1db2c:	b	1da68 <PyInit__decimal@@Base+0x1828>
   1db30:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   1db34:	mov	w3, #0x25c                 	// #604
   1db38:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1db3c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1db40:	ldr	x19, [x19, #3904]
   1db44:	add	x2, x2, #0x40
   1db48:	add	x1, x1, #0x80
   1db4c:	ldr	x0, [x19]
   1db50:	bl	6a70 <fprintf@plt>
   1db54:	ldr	x3, [x19]
   1db58:	mov	x2, #0x29                  	// #41
   1db5c:	mov	x1, #0x1                   	// #1
   1db60:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1db64:	add	x0, x0, #0x90
   1db68:	bl	6930 <fwrite@plt>
   1db6c:	ldr	x1, [x19]
   1db70:	mov	w0, #0xa                   	// #10
   1db74:	bl	65b0 <fputc@plt>
   1db78:	bl	67c0 <abort@plt>
   1db7c:	nop
   1db80:	mov	x5, #0x435f                	// #17247
   1db84:	mov	x7, x1
   1db88:	movk	x5, #0xd79, lsl #16
   1db8c:	sub	x9, x3, #0x1
   1db90:	movk	x5, #0x35e5, lsl #32
   1db94:	movk	x5, #0xd794, lsl #48
   1db98:	umulh	x5, x4, x5
   1db9c:	lsr	x1, x5, #4
   1dba0:	add	x5, x1, x1, lsl #2
   1dba4:	lsl	x5, x5, #2
   1dba8:	sub	x5, x5, x1
   1dbac:	subs	x8, x4, x5
   1dbb0:	b.ne	1dc34 <PyInit__decimal@@Base+0x19f4>  // b.any
   1dbb4:	cmn	x9, #0x1
   1dbb8:	b.eq	1dc30 <PyInit__decimal@@Base+0x19f0>  // b.none
   1dbbc:	add	x2, x1, x9
   1dbc0:	add	x5, x3, x1
   1dbc4:	add	x6, x7, x9, lsl #3
   1dbc8:	lsl	x4, x3, #3
   1dbcc:	add	x5, x0, x5, lsl #3
   1dbd0:	add	x2, x0, x2, lsl #3
   1dbd4:	sub	x6, x6, #0x8
   1dbd8:	sub	x2, x2, #0x8
   1dbdc:	cmp	x6, x5
   1dbe0:	add	x5, x7, x4
   1dbe4:	ccmp	x2, x5, #0x2, cc  // cc = lo, ul, last
   1dbe8:	ccmp	x9, #0x9, #0x0, cs  // cs = hs, nlast
   1dbec:	b.ls	1df14 <PyInit__decimal@@Base+0x1cd4>  // b.plast
   1dbf0:	neg	x5, x3, lsr #1
   1dbf4:	sub	x4, x4, #0x10
   1dbf8:	add	x4, x7, x4
   1dbfc:	lsl	x5, x5, #4
   1dc00:	ldr	q0, [x4, x8]
   1dc04:	str	q0, [x2, x8]
   1dc08:	sub	x8, x8, #0x10
   1dc0c:	cmp	x8, x5
   1dc10:	b.ne	1dc00 <PyInit__decimal@@Base+0x19c0>  // b.any
   1dc14:	and	x4, x3, #0xfffffffffffffffe
   1dc18:	sub	x2, x9, x4
   1dc1c:	cmp	x3, x4
   1dc20:	b.eq	1dc30 <PyInit__decimal@@Base+0x19f0>  // b.none
   1dc24:	add	x3, x1, x2
   1dc28:	ldr	x2, [x7, x2, lsl #3]
   1dc2c:	str	x2, [x0, x3, lsl #3]
   1dc30:	b	2aa70 <PyInit__decimal@@Base+0xe830>
   1dc34:	adrp	x11, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1dc38:	add	x11, x11, #0x180
   1dc3c:	mov	x5, #0x13                  	// #19
   1dc40:	sub	x5, x5, x8
   1dc44:	cmp	x5, #0x9
   1dc48:	sub	x10, x2, #0x1
   1dc4c:	sub	x6, x3, #0x2
   1dc50:	ldr	x4, [x7, x9, lsl #3]
   1dc54:	ldr	x9, [x11, x8, lsl #3]
   1dc58:	b.hi	1dec0 <PyInit__decimal@@Base+0x1c80>  // b.pmore
   1dc5c:	cmp	x5, #0x4
   1dc60:	b.hi	1e170 <PyInit__decimal@@Base+0x1f30>  // b.pmore
   1dc64:	cmp	x5, #0x3
   1dc68:	b.eq	1e3c4 <PyInit__decimal@@Base+0x2184>  // b.none
   1dc6c:	cmp	x5, #0x4
   1dc70:	b.eq	1e3a0 <PyInit__decimal@@Base+0x2160>  // b.none
   1dc74:	cmp	x5, #0x2
   1dc78:	b.eq	1e374 <PyInit__decimal@@Base+0x2134>  // b.none
   1dc7c:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1dc80:	movk	x8, #0xcccd
   1dc84:	umulh	x8, x4, x8
   1dc88:	lsr	x8, x8, #3
   1dc8c:	add	x11, x8, x8, lsl #2
   1dc90:	sub	x4, x4, x11, lsl #1
   1dc94:	nop
   1dc98:	cbz	x8, 1dca4 <PyInit__decimal@@Base+0x1a64>
   1dc9c:	str	x8, [x0, x10, lsl #3]
   1dca0:	sub	x10, x2, #0x2
   1dca4:	cmn	x6, #0x1
   1dca8:	b.eq	1e264 <PyInit__decimal@@Base+0x2024>  // b.none
   1dcac:	stp	x29, x30, [sp, #-96]!
   1dcb0:	neg	x8, x3, lsl #3
   1dcb4:	mov	x30, #0xd5bf                	// #54719
   1dcb8:	mov	x29, sp
   1dcbc:	mov	x18, #0xcefd                	// #52989
   1dcc0:	mov	x17, #0x5a53                	// #23123
   1dcc4:	mov	x16, #0x34db                	// #13531
   1dcc8:	mov	x15, #0x42bd                	// #17085
   1dccc:	mov	x14, #0x7843                	// #30787
   1dcd0:	mov	x13, #0xf7cf                	// #63439
   1dcd4:	mov	x12, #0x594b                	// #22859
   1dcd8:	mov	x11, #0xf5c3                	// #62915
   1dcdc:	stp	x19, x20, [sp, #16]
   1dce0:	mov	x20, #0x2233                	// #8755
   1dce4:	add	x8, x8, x10, lsl #3
   1dce8:	stp	x21, x22, [sp, #32]
   1dcec:	mov	x22, #0xaaff                	// #43775
   1dcf0:	movk	x22, #0xcb24, lsl #16
   1dcf4:	stp	x23, x24, [sp, #48]
   1dcf8:	mov	x24, #0xcd81                	// #52609
   1dcfc:	movk	x24, #0x5095, lsl #16
   1dd00:	stp	x25, x26, [sp, #64]
   1dd04:	mov	x26, #0x385                 	// #901
   1dd08:	movk	x26, #0x92ed, lsl #16
   1dd0c:	mov	x25, #0xa000                	// #40960
   1dd10:	mov	x23, #0x4000                	// #16384
   1dd14:	mov	x21, #0xe800                	// #59392
   1dd18:	movk	x20, #0x5bd4, lsl #16
   1dd1c:	mov	x19, #0x1000                	// #4096
   1dd20:	movk	x30, #0xbded, lsl #16
   1dd24:	movk	x18, #0x8461, lsl #16
   1dd28:	movk	x17, #0xa09b, lsl #16
   1dd2c:	movk	x16, #0xd7b6, lsl #16
   1dd30:	movk	x15, #0xe57a, lsl #16
   1dd34:	movk	x14, #0x71b4, lsl #16
   1dd38:	movk	x13, #0xe353, lsl #16
   1dd3c:	movk	x12, #0x3886, lsl #16
   1dd40:	movk	x11, #0x5c28, lsl #16
   1dd44:	stp	x27, x28, [sp, #80]
   1dd48:	mov	x28, #0x1b53                	// #6995
   1dd4c:	mov	x27, #0x5d8a0000            	// #1569325056
   1dd50:	add	x8, x8, #0x10
   1dd54:	movk	x28, #0xd519, lsl #16
   1dd58:	movk	x27, #0x4578, lsl #32
   1dd5c:	movk	x26, #0x84d0, lsl #32
   1dd60:	movk	x25, #0x4e72, lsl #16
   1dd64:	movk	x24, #0x4dc3, lsl #32
   1dd68:	movk	x23, #0x107a, lsl #16
   1dd6c:	movk	x22, #0xff0b, lsl #32
   1dd70:	movk	x21, #0x4876, lsl #16
   1dd74:	movk	x20, #0x3302, lsl #32
   1dd78:	movk	x19, #0xd4a5, lsl #16
   1dd7c:	movk	x30, #0xfece, lsl #32
   1dd80:	movk	x18, #0x7711, lsl #32
   1dd84:	movk	x17, #0xb82f, lsl #32
   1dd88:	movk	x16, #0xde82, lsl #32
   1dd8c:	movk	x15, #0x94d5, lsl #32
   1dd90:	movk	x14, #0x5ac4, lsl #32
   1dd94:	movk	x13, #0x9ba5, lsl #32
   1dd98:	movk	x12, #0xc5d6, lsl #32
   1dd9c:	movk	x11, #0xc28f, lsl #32
   1dda0:	add	x8, x0, x8
   1dda4:	movk	x28, #0x5c3b, lsl #32
   1dda8:	movk	x27, #0x163, lsl #48
   1ddac:	movk	x26, #0x384b, lsl #48
   1ddb0:	movk	x25, #0x918, lsl #32
   1ddb4:	movk	x24, #0xb42, lsl #48
   1ddb8:	movk	x23, #0x5af3, lsl #32
   1ddbc:	movk	x22, #0xafeb, lsl #48
   1ddc0:	movk	x21, #0x17, lsl #32
   1ddc4:	movk	x20, #0x232f, lsl #48
   1ddc8:	movk	x19, #0xe8, lsl #32
   1ddcc:	movk	x30, #0xdbe6, lsl #48
   1ddd0:	movk	x18, #0xabcc, lsl #48
   1ddd4:	movk	x17, #0x44, lsl #48
   1ddd8:	movk	x16, #0x431b, lsl #48
   1dddc:	movk	x15, #0xd6bf, lsl #48
   1dde0:	movk	x14, #0xa7c, lsl #48
   1dde4:	movk	x13, #0x20c4, lsl #48
   1dde8:	movk	x12, #0x346d, lsl #48
   1ddec:	movk	x11, #0x28f5, lsl #48
   1ddf0:	b	1de48 <PyInit__decimal@@Base+0x1c08>
   1ddf4:	cmp	x5, #0x4
   1ddf8:	b.hi	1df30 <PyInit__decimal@@Base+0x1cf0>  // b.pmore
   1ddfc:	cmp	x5, #0x3
   1de00:	b.eq	1e014 <PyInit__decimal@@Base+0x1dd4>  // b.none
   1de04:	cmp	x5, #0x4
   1de08:	b.eq	1e000 <PyInit__decimal@@Base+0x1dc0>  // b.none
   1de0c:	cmp	x5, #0x2
   1de10:	b.eq	1dfe4 <PyInit__decimal@@Base+0x1da4>  // b.none
   1de14:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   1de18:	movk	x2, #0xcccd
   1de1c:	umulh	x2, x3, x2
   1de20:	lsr	x2, x2, #3
   1de24:	add	x10, x2, x2, lsl #2
   1de28:	sub	x3, x3, x10, lsl #1
   1de2c:	nop
   1de30:	madd	x2, x9, x4, x2
   1de34:	str	x2, [x8, x6, lsl #3]
   1de38:	sub	x6, x6, #0x1
   1de3c:	cmn	x6, #0x1
   1de40:	b.eq	1de9c <PyInit__decimal@@Base+0x1c5c>  // b.none
   1de44:	mov	x4, x3
   1de48:	cmp	x5, #0x9
   1de4c:	ldr	x3, [x7, x6, lsl #3]
   1de50:	b.ls	1ddf4 <PyInit__decimal@@Base+0x1bb4>  // b.plast
   1de54:	cmp	x5, #0xe
   1de58:	b.hi	1df68 <PyInit__decimal@@Base+0x1d28>  // b.pmore
   1de5c:	cmp	x5, #0xd
   1de60:	b.eq	1dfd4 <PyInit__decimal@@Base+0x1d94>  // b.none
   1de64:	cmp	x5, #0xe
   1de68:	b.eq	1dfc4 <PyInit__decimal@@Base+0x1d84>  // b.none
   1de6c:	cmp	x5, #0xb
   1de70:	b.eq	1dfb4 <PyInit__decimal@@Base+0x1d74>  // b.none
   1de74:	cmp	x5, #0xc
   1de78:	b.ne	1e034 <PyInit__decimal@@Base+0x1df4>  // b.any
   1de7c:	umulh	x2, x3, x20
   1de80:	lsr	x2, x2, #37
   1de84:	msub	x3, x2, x19, x3
   1de88:	madd	x2, x9, x4, x2
   1de8c:	str	x2, [x8, x6, lsl #3]
   1de90:	sub	x6, x6, #0x1
   1de94:	cmn	x6, #0x1
   1de98:	b.ne	1de44 <PyInit__decimal@@Base+0x1c04>  // b.any
   1de9c:	ldp	x19, x20, [sp, #16]
   1dea0:	mul	x10, x9, x3
   1dea4:	ldp	x21, x22, [sp, #32]
   1dea8:	str	x10, [x0, x1, lsl #3]
   1deac:	ldp	x23, x24, [sp, #48]
   1deb0:	ldp	x25, x26, [sp, #64]
   1deb4:	ldp	x27, x28, [sp, #80]
   1deb8:	ldp	x29, x30, [sp], #96
   1debc:	b	2aa70 <PyInit__decimal@@Base+0xe830>
   1dec0:	cmp	x5, #0xe
   1dec4:	b.hi	1e124 <PyInit__decimal@@Base+0x1ee4>  // b.pmore
   1dec8:	cmp	x5, #0xd
   1decc:	b.eq	1e270 <PyInit__decimal@@Base+0x2030>  // b.none
   1ded0:	cmp	x5, #0xe
   1ded4:	b.eq	1e2c8 <PyInit__decimal@@Base+0x2088>  // b.none
   1ded8:	cmp	x5, #0xb
   1dedc:	b.eq	1e1b8 <PyInit__decimal@@Base+0x1f78>  // b.none
   1dee0:	cmp	x5, #0xc
   1dee4:	b.ne	1e348 <PyInit__decimal@@Base+0x2108>  // b.any
   1dee8:	mov	x8, #0x2233                	// #8755
   1deec:	mov	x11, #0x1000                	// #4096
   1def0:	movk	x8, #0x5bd4, lsl #16
   1def4:	movk	x11, #0xd4a5, lsl #16
   1def8:	movk	x8, #0x3302, lsl #32
   1defc:	movk	x11, #0xe8, lsl #32
   1df00:	movk	x8, #0x232f, lsl #48
   1df04:	umulh	x8, x4, x8
   1df08:	lsr	x8, x8, #37
   1df0c:	msub	x4, x8, x11, x4
   1df10:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1df14:	add	x3, x0, x1, lsl #3
   1df18:	ldr	x2, [x7, x9, lsl #3]
   1df1c:	str	x2, [x3, x9, lsl #3]
   1df20:	sub	x9, x9, #0x1
   1df24:	cmn	x9, #0x1
   1df28:	b.ne	1df18 <PyInit__decimal@@Base+0x1cd8>  // b.any
   1df2c:	b	2aa70 <PyInit__decimal@@Base+0xe830>
   1df30:	cmp	x5, #0x8
   1df34:	b.eq	1e0a0 <PyInit__decimal@@Base+0x1e60>  // b.none
   1df38:	cmp	x5, #0x9
   1df3c:	b.eq	1e084 <PyInit__decimal@@Base+0x1e44>  // b.none
   1df40:	cmp	x5, #0x6
   1df44:	b.eq	1e06c <PyInit__decimal@@Base+0x1e2c>  // b.none
   1df48:	cmp	x5, #0x7
   1df4c:	b.ne	1e050 <PyInit__decimal@@Base+0x1e10>  // b.any
   1df50:	umulh	x2, x3, x15
   1df54:	mov	x10, #0x9680                	// #38528
   1df58:	movk	x10, #0x98, lsl #16
   1df5c:	lsr	x2, x2, #23
   1df60:	msub	x3, x2, x10, x3
   1df64:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1df68:	cmp	x5, #0x11
   1df6c:	b.eq	1e110 <PyInit__decimal@@Base+0x1ed0>  // b.none
   1df70:	cmp	x5, #0x12
   1df74:	b.eq	1e0e4 <PyInit__decimal@@Base+0x1ea4>  // b.none
   1df78:	cmp	x5, #0x10
   1df7c:	b.eq	1e0b8 <PyInit__decimal@@Base+0x1e78>  // b.none
   1df80:	mov	x10, #0xeac3                	// #60099
   1df84:	lsr	x2, x3, #15
   1df88:	movk	x10, #0xf3dc, lsl #16
   1df8c:	movk	x10, #0x4075, lsl #32
   1df90:	movk	x10, #0x2, lsl #48
   1df94:	umulh	x2, x2, x10
   1df98:	mov	x10, #0x8000                	// #32768
   1df9c:	movk	x10, #0xa4c6, lsl #16
   1dfa0:	movk	x10, #0x8d7e, lsl #32
   1dfa4:	lsr	x2, x2, #20
   1dfa8:	movk	x10, #0x3, lsl #48
   1dfac:	msub	x3, x2, x10, x3
   1dfb0:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1dfb4:	umulh	x2, x3, x22
   1dfb8:	lsr	x2, x2, #36
   1dfbc:	msub	x3, x2, x21, x3
   1dfc0:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1dfc4:	umulh	x2, x3, x24
   1dfc8:	lsr	x2, x2, #42
   1dfcc:	msub	x3, x2, x23, x3
   1dfd0:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1dfd4:	umulh	x2, x3, x26
   1dfd8:	lsr	x2, x2, #41
   1dfdc:	msub	x3, x2, x25, x3
   1dfe0:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1dfe4:	lsr	x2, x3, #2
   1dfe8:	umulh	x2, x2, x11
   1dfec:	lsr	x2, x2, #2
   1dff0:	add	x10, x2, x2, lsl #1
   1dff4:	add	x10, x2, x10, lsl #3
   1dff8:	sub	x3, x3, x10, lsl #2
   1dffc:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e000:	umulh	x2, x3, x12
   1e004:	mov	x10, #0x2710                	// #10000
   1e008:	lsr	x2, x2, #11
   1e00c:	msub	x3, x2, x10, x3
   1e010:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e014:	lsr	x2, x3, #3
   1e018:	umulh	x2, x2, x13
   1e01c:	lsr	x2, x2, #4
   1e020:	lsl	x10, x2, #5
   1e024:	sub	x10, x10, x2
   1e028:	add	x10, x2, x10, lsl #2
   1e02c:	sub	x3, x3, x10, lsl #3
   1e030:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e034:	umulh	x2, x3, x30
   1e038:	mov	x10, #0xe400                	// #58368
   1e03c:	movk	x10, #0x540b, lsl #16
   1e040:	movk	x10, #0x2, lsl #32
   1e044:	lsr	x2, x2, #33
   1e048:	msub	x3, x2, x10, x3
   1e04c:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e050:	lsr	x2, x3, #5
   1e054:	mov	x10, #0x86a0                	// #34464
   1e058:	movk	x10, #0x1, lsl #16
   1e05c:	umulh	x2, x2, x14
   1e060:	lsr	x2, x2, #7
   1e064:	msub	x3, x2, x10, x3
   1e068:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e06c:	umulh	x2, x3, x16
   1e070:	mov	x10, #0x4240                	// #16960
   1e074:	movk	x10, #0xf, lsl #16
   1e078:	lsr	x2, x2, #18
   1e07c:	msub	x3, x2, x10, x3
   1e080:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e084:	lsr	x2, x3, #9
   1e088:	mov	x10, #0xca00                	// #51712
   1e08c:	movk	x10, #0x3b9a, lsl #16
   1e090:	umulh	x2, x2, x17
   1e094:	lsr	x2, x2, #11
   1e098:	msub	x3, x2, x10, x3
   1e09c:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e0a0:	umulh	x2, x3, x18
   1e0a4:	mov	x10, #0xe100                	// #57600
   1e0a8:	movk	x10, #0x5f5, lsl #16
   1e0ac:	lsr	x2, x2, #26
   1e0b0:	msub	x3, x2, x10, x3
   1e0b4:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e0b8:	mov	x2, #0x7857                	// #30807
   1e0bc:	mov	x10, #0x6fc10000            	// #1874919424
   1e0c0:	movk	x2, #0xb113, lsl #16
   1e0c4:	movk	x10, #0x86f2, lsl #32
   1e0c8:	movk	x2, #0x652f, lsl #32
   1e0cc:	movk	x10, #0x23, lsl #48
   1e0d0:	movk	x2, #0x39a5, lsl #48
   1e0d4:	umulh	x2, x3, x2
   1e0d8:	lsr	x2, x2, #51
   1e0dc:	msub	x3, x2, x10, x3
   1e0e0:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e0e4:	mov	x10, #0x490f                	// #18703
   1e0e8:	lsr	x2, x3, #18
   1e0ec:	movk	x10, #0x7747, lsl #16
   1e0f0:	movk	x10, #0x49c9, lsl #32
   1e0f4:	umulh	x2, x2, x10
   1e0f8:	mov	x10, #0xa7640000            	// #2808348672
   1e0fc:	movk	x10, #0xb6b3, lsl #32
   1e100:	movk	x10, #0xde0, lsl #48
   1e104:	lsr	x2, x2, #24
   1e108:	msub	x3, x2, x10, x3
   1e10c:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e110:	lsr	x2, x3, #17
   1e114:	umulh	x2, x2, x28
   1e118:	lsr	x2, x2, #22
   1e11c:	msub	x3, x2, x27, x3
   1e120:	b	1de30 <PyInit__decimal@@Base+0x1bf0>
   1e124:	cmp	x5, #0x11
   1e128:	b.eq	1e3f4 <PyInit__decimal@@Base+0x21b4>  // b.none
   1e12c:	cmp	x5, #0x12
   1e130:	b.eq	1e238 <PyInit__decimal@@Base+0x1ff8>  // b.none
   1e134:	cmp	x5, #0x10
   1e138:	b.eq	1e20c <PyInit__decimal@@Base+0x1fcc>  // b.none
   1e13c:	mov	x12, #0xeac3                	// #60099
   1e140:	lsr	x8, x4, #15
   1e144:	movk	x12, #0xf3dc, lsl #16
   1e148:	mov	x11, #0x8000                	// #32768
   1e14c:	movk	x12, #0x4075, lsl #32
   1e150:	movk	x11, #0xa4c6, lsl #16
   1e154:	movk	x12, #0x2, lsl #48
   1e158:	movk	x11, #0x8d7e, lsl #32
   1e15c:	movk	x11, #0x3, lsl #48
   1e160:	umulh	x8, x8, x12
   1e164:	lsr	x8, x8, #20
   1e168:	msub	x4, x8, x11, x4
   1e16c:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e170:	cmp	x5, #0x8
   1e174:	b.eq	1e320 <PyInit__decimal@@Base+0x20e0>  // b.none
   1e178:	cmp	x5, #0x9
   1e17c:	b.eq	1e2f4 <PyInit__decimal@@Base+0x20b4>  // b.none
   1e180:	cmp	x5, #0x6
   1e184:	b.eq	1e1e4 <PyInit__decimal@@Base+0x1fa4>  // b.none
   1e188:	cmp	x5, #0x7
   1e18c:	b.ne	1e29c <PyInit__decimal@@Base+0x205c>  // b.any
   1e190:	mov	x8, #0x42bd                	// #17085
   1e194:	mov	x11, #0x9680                	// #38528
   1e198:	movk	x8, #0xe57a, lsl #16
   1e19c:	movk	x11, #0x98, lsl #16
   1e1a0:	movk	x8, #0x94d5, lsl #32
   1e1a4:	movk	x8, #0xd6bf, lsl #48
   1e1a8:	umulh	x8, x4, x8
   1e1ac:	lsr	x8, x8, #23
   1e1b0:	msub	x4, x8, x11, x4
   1e1b4:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e1b8:	mov	x8, #0xaaff                	// #43775
   1e1bc:	mov	x11, #0xe800                	// #59392
   1e1c0:	movk	x8, #0xcb24, lsl #16
   1e1c4:	movk	x11, #0x4876, lsl #16
   1e1c8:	movk	x8, #0xff0b, lsl #32
   1e1cc:	movk	x11, #0x17, lsl #32
   1e1d0:	movk	x8, #0xafeb, lsl #48
   1e1d4:	umulh	x8, x4, x8
   1e1d8:	lsr	x8, x8, #36
   1e1dc:	msub	x4, x8, x11, x4
   1e1e0:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e1e4:	mov	x8, #0x34db                	// #13531
   1e1e8:	mov	x11, #0x4240                	// #16960
   1e1ec:	movk	x8, #0xd7b6, lsl #16
   1e1f0:	movk	x11, #0xf, lsl #16
   1e1f4:	movk	x8, #0xde82, lsl #32
   1e1f8:	movk	x8, #0x431b, lsl #48
   1e1fc:	umulh	x8, x4, x8
   1e200:	lsr	x8, x8, #18
   1e204:	msub	x4, x8, x11, x4
   1e208:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e20c:	mov	x8, #0x7857                	// #30807
   1e210:	mov	x11, #0x6fc10000            	// #1874919424
   1e214:	movk	x8, #0xb113, lsl #16
   1e218:	movk	x11, #0x86f2, lsl #32
   1e21c:	movk	x8, #0x652f, lsl #32
   1e220:	movk	x11, #0x23, lsl #48
   1e224:	movk	x8, #0x39a5, lsl #48
   1e228:	umulh	x8, x4, x8
   1e22c:	lsr	x8, x8, #51
   1e230:	msub	x4, x8, x11, x4
   1e234:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e238:	mov	x12, #0x490f                	// #18703
   1e23c:	lsr	x8, x4, #18
   1e240:	movk	x12, #0x7747, lsl #16
   1e244:	mov	x11, #0xa7640000            	// #2808348672
   1e248:	movk	x12, #0x49c9, lsl #32
   1e24c:	movk	x11, #0xb6b3, lsl #32
   1e250:	movk	x11, #0xde0, lsl #48
   1e254:	umulh	x8, x8, x12
   1e258:	lsr	x8, x8, #24
   1e25c:	msub	x4, x8, x11, x4
   1e260:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e264:	mul	x10, x9, x4
   1e268:	str	x10, [x0, x1, lsl #3]
   1e26c:	b	2aa70 <PyInit__decimal@@Base+0xe830>
   1e270:	mov	x8, #0x385                 	// #901
   1e274:	mov	x11, #0xa000                	// #40960
   1e278:	movk	x8, #0x92ed, lsl #16
   1e27c:	movk	x11, #0x4e72, lsl #16
   1e280:	movk	x8, #0x84d0, lsl #32
   1e284:	movk	x11, #0x918, lsl #32
   1e288:	movk	x8, #0x384b, lsl #48
   1e28c:	umulh	x8, x4, x8
   1e290:	lsr	x8, x8, #41
   1e294:	msub	x4, x8, x11, x4
   1e298:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e29c:	mov	x12, #0x7843                	// #30787
   1e2a0:	lsr	x8, x4, #5
   1e2a4:	movk	x12, #0x71b4, lsl #16
   1e2a8:	mov	x11, #0x86a0                	// #34464
   1e2ac:	movk	x12, #0x5ac4, lsl #32
   1e2b0:	movk	x11, #0x1, lsl #16
   1e2b4:	movk	x12, #0xa7c, lsl #48
   1e2b8:	umulh	x8, x8, x12
   1e2bc:	lsr	x8, x8, #7
   1e2c0:	msub	x4, x8, x11, x4
   1e2c4:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e2c8:	mov	x8, #0xcd81                	// #52609
   1e2cc:	mov	x11, #0x4000                	// #16384
   1e2d0:	movk	x8, #0x5095, lsl #16
   1e2d4:	movk	x11, #0x107a, lsl #16
   1e2d8:	movk	x8, #0x4dc3, lsl #32
   1e2dc:	movk	x11, #0x5af3, lsl #32
   1e2e0:	movk	x8, #0xb42, lsl #48
   1e2e4:	umulh	x8, x4, x8
   1e2e8:	lsr	x8, x8, #42
   1e2ec:	msub	x4, x8, x11, x4
   1e2f0:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e2f4:	mov	x12, #0x5a53                	// #23123
   1e2f8:	lsr	x8, x4, #9
   1e2fc:	movk	x12, #0xa09b, lsl #16
   1e300:	mov	x11, #0xca00                	// #51712
   1e304:	movk	x12, #0xb82f, lsl #32
   1e308:	movk	x11, #0x3b9a, lsl #16
   1e30c:	movk	x12, #0x44, lsl #48
   1e310:	umulh	x8, x8, x12
   1e314:	lsr	x8, x8, #11
   1e318:	msub	x4, x8, x11, x4
   1e31c:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e320:	mov	x8, #0xcefd                	// #52989
   1e324:	mov	x11, #0xe100                	// #57600
   1e328:	movk	x8, #0x8461, lsl #16
   1e32c:	movk	x11, #0x5f5, lsl #16
   1e330:	movk	x8, #0x7711, lsl #32
   1e334:	movk	x8, #0xabcc, lsl #48
   1e338:	umulh	x8, x4, x8
   1e33c:	lsr	x8, x8, #26
   1e340:	msub	x4, x8, x11, x4
   1e344:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e348:	mov	x8, #0xd5bf                	// #54719
   1e34c:	mov	x11, #0xe400                	// #58368
   1e350:	movk	x8, #0xbded, lsl #16
   1e354:	movk	x11, #0x540b, lsl #16
   1e358:	movk	x8, #0xfece, lsl #32
   1e35c:	movk	x11, #0x2, lsl #32
   1e360:	movk	x8, #0xdbe6, lsl #48
   1e364:	umulh	x8, x4, x8
   1e368:	lsr	x8, x8, #33
   1e36c:	msub	x4, x8, x11, x4
   1e370:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e374:	mov	x11, #0xf5c3                	// #62915
   1e378:	lsr	x8, x4, #2
   1e37c:	movk	x11, #0x5c28, lsl #16
   1e380:	movk	x11, #0xc28f, lsl #32
   1e384:	movk	x11, #0x28f5, lsl #48
   1e388:	umulh	x8, x8, x11
   1e38c:	lsr	x8, x8, #2
   1e390:	add	x11, x8, x8, lsl #1
   1e394:	add	x11, x8, x11, lsl #3
   1e398:	sub	x4, x4, x11, lsl #2
   1e39c:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e3a0:	mov	x8, #0x594b                	// #22859
   1e3a4:	mov	x11, #0x2710                	// #10000
   1e3a8:	movk	x8, #0x3886, lsl #16
   1e3ac:	movk	x8, #0xc5d6, lsl #32
   1e3b0:	movk	x8, #0x346d, lsl #48
   1e3b4:	umulh	x8, x4, x8
   1e3b8:	lsr	x8, x8, #11
   1e3bc:	msub	x4, x8, x11, x4
   1e3c0:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e3c4:	mov	x11, #0xf7cf                	// #63439
   1e3c8:	lsr	x8, x4, #3
   1e3cc:	movk	x11, #0xe353, lsl #16
   1e3d0:	movk	x11, #0x9ba5, lsl #32
   1e3d4:	movk	x11, #0x20c4, lsl #48
   1e3d8:	umulh	x8, x8, x11
   1e3dc:	lsr	x8, x8, #4
   1e3e0:	lsl	x11, x8, #5
   1e3e4:	sub	x11, x11, x8
   1e3e8:	add	x11, x8, x11, lsl #2
   1e3ec:	sub	x4, x4, x11, lsl #3
   1e3f0:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e3f4:	mov	x12, #0x1b53                	// #6995
   1e3f8:	lsr	x8, x4, #17
   1e3fc:	movk	x12, #0xd519, lsl #16
   1e400:	mov	x11, #0x5d8a0000            	// #1569325056
   1e404:	movk	x12, #0x5c3b, lsl #32
   1e408:	movk	x11, #0x4578, lsl #32
   1e40c:	movk	x11, #0x163, lsl #48
   1e410:	umulh	x8, x8, x12
   1e414:	lsr	x8, x8, #22
   1e418:	msub	x4, x8, x11, x4
   1e41c:	b	1dc98 <PyInit__decimal@@Base+0x1a58>
   1e420:	mov	x6, #0x435f                	// #17247
   1e424:	mov	x9, x0
   1e428:	movk	x6, #0xd79, lsl #16
   1e42c:	movk	x6, #0x35e5, lsl #32
   1e430:	movk	x6, #0xd794, lsl #48
   1e434:	umulh	x6, x3, x6
   1e438:	lsr	x6, x6, #4
   1e43c:	add	x4, x6, x6, lsl #2
   1e440:	lsl	x4, x4, #2
   1e444:	sub	x4, x4, x6
   1e448:	subs	x4, x3, x4
   1e44c:	b.ne	1e578 <PyInit__decimal@@Base+0x2338>  // b.any
   1e450:	cmp	x3, #0x12
   1e454:	b.hi	1e504 <PyInit__decimal@@Base+0x22c4>  // b.pmore
   1e458:	mov	x10, #0x0                   	// #0
   1e45c:	mov	x0, #0x0                   	// #0
   1e460:	mov	w8, #0x1                   	// #1
   1e464:	subs	x2, x2, x6
   1e468:	b.eq	1e4c8 <PyInit__decimal@@Base+0x2288>  // b.none
   1e46c:	add	x5, x6, #0x2
   1e470:	add	x11, x9, #0x10
   1e474:	sub	x7, x2, #0x1
   1e478:	lsl	x5, x5, #3
   1e47c:	sub	x3, x5, #0x10
   1e480:	add	x5, x1, x5
   1e484:	add	x3, x1, x3
   1e488:	cmp	x3, x11
   1e48c:	ccmp	x9, x5, #0x2, cc  // cc = lo, ul, last
   1e490:	ccmp	x7, #0x9, #0x0, cs  // cs = hs, nlast
   1e494:	b.ls	1e4d8 <PyInit__decimal@@Base+0x2298>  // b.plast
   1e498:	lsr	x5, x2, #1
   1e49c:	lsl	x5, x5, #4
   1e4a0:	ldr	q0, [x3, x4]
   1e4a4:	str	q0, [x9, x4]
   1e4a8:	add	x4, x4, #0x10
   1e4ac:	cmp	x4, x5
   1e4b0:	b.ne	1e4a0 <PyInit__decimal@@Base+0x2260>  // b.any
   1e4b4:	and	x3, x2, #0xfffffffffffffffe
   1e4b8:	tbz	w2, #0, 1e4c8 <PyInit__decimal@@Base+0x2288>
   1e4bc:	add	x6, x6, x3
   1e4c0:	ldr	x1, [x1, x6, lsl #3]
   1e4c4:	str	x1, [x9, x3, lsl #3]
   1e4c8:	cbz	w8, 1e4d4 <PyInit__decimal@@Base+0x2294>
   1e4cc:	cmp	x10, #0x0
   1e4d0:	cinc	x0, x0, ne  // ne = any
   1e4d4:	ret
   1e4d8:	ldr	x1, [x3, x4, lsl #3]
   1e4dc:	str	x1, [x9, x4, lsl #3]
   1e4e0:	add	x4, x4, #0x1
   1e4e4:	cmp	x2, x4
   1e4e8:	b.eq	1e4c8 <PyInit__decimal@@Base+0x2288>  // b.none
   1e4ec:	ldr	x1, [x3, x4, lsl #3]
   1e4f0:	str	x1, [x9, x4, lsl #3]
   1e4f4:	add	x4, x4, #0x1
   1e4f8:	cmp	x2, x4
   1e4fc:	b.ne	1e4d8 <PyInit__decimal@@Base+0x2298>  // b.any
   1e500:	b	1e4c8 <PyInit__decimal@@Base+0x2288>
   1e504:	add	x3, x1, x6, lsl #3
   1e508:	mov	x7, #0x490f                	// #18703
   1e50c:	movk	x7, #0x7747, lsl #16
   1e510:	mov	x10, #0xa7640000            	// #2808348672
   1e514:	movk	x7, #0x49c9, lsl #32
   1e518:	movk	x10, #0xb6b3, lsl #32
   1e51c:	ldur	x3, [x3, #-8]
   1e520:	movk	x10, #0xde0, lsl #48
   1e524:	mov	x5, #0xffffffffa763ffff    	// #-1486618625
   1e528:	movk	x5, #0xb6b3, lsl #32
   1e52c:	lsr	x0, x3, #18
   1e530:	movk	x5, #0xde0, lsl #48
   1e534:	umulh	x0, x0, x7
   1e538:	lsr	x0, x0, #24
   1e53c:	cmp	x0, #0x5
   1e540:	cset	w8, eq  // eq = none
   1e544:	cmp	x3, x5
   1e548:	msub	x10, x0, x10, x3
   1e54c:	cset	w3, ls  // ls = plast
   1e550:	orr	w8, w8, w3
   1e554:	cbnz	x10, 1e464 <PyInit__decimal@@Base+0x2224>
   1e558:	sub	x3, x6, #0x1
   1e55c:	nop
   1e560:	subs	x3, x3, #0x1
   1e564:	b.mi	1e464 <PyInit__decimal@@Base+0x2224>  // b.first
   1e568:	ldr	x5, [x1, x3, lsl #3]
   1e56c:	cbz	x5, 1e560 <PyInit__decimal@@Base+0x2320>
   1e570:	mov	x10, #0x1                   	// #1
   1e574:	b	1e464 <PyInit__decimal@@Base+0x2224>
   1e578:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1e57c:	mov	x5, #0x13                  	// #19
   1e580:	add	x0, x0, #0x180
   1e584:	sub	x5, x5, x4
   1e588:	cmp	x4, #0x9
   1e58c:	ldr	x10, [x1, x6, lsl #3]
   1e590:	ldr	x11, [x0, x5, lsl #3]
   1e594:	b.hi	1e81c <PyInit__decimal@@Base+0x25dc>  // b.pmore
   1e598:	cmp	x4, #0x4
   1e59c:	b.hi	1e89c <PyInit__decimal@@Base+0x265c>  // b.pmore
   1e5a0:	cmp	x4, #0x3
   1e5a4:	b.eq	1ee48 <PyInit__decimal@@Base+0x2c08>  // b.none
   1e5a8:	cmp	x4, #0x4
   1e5ac:	b.eq	1edf4 <PyInit__decimal@@Base+0x2bb4>  // b.none
   1e5b0:	cmp	x4, #0x2
   1e5b4:	b.eq	1ef98 <PyInit__decimal@@Base+0x2d58>  // b.none
   1e5b8:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   1e5bc:	cmp	x4, #0x3
   1e5c0:	movk	x5, #0xcccd
   1e5c4:	sub	x7, x4, #0x1
   1e5c8:	umulh	x5, x10, x5
   1e5cc:	lsr	x5, x5, #3
   1e5d0:	add	x0, x5, x5, lsl #2
   1e5d4:	sub	x0, x10, x0, lsl #1
   1e5d8:	b.eq	1f0e0 <PyInit__decimal@@Base+0x2ea0>  // b.none
   1e5dc:	cmp	x7, #0x1
   1e5e0:	b.eq	1f0e8 <PyInit__decimal@@Base+0x2ea8>  // b.none
   1e5e4:	cmp	x3, #0x12
   1e5e8:	mov	x10, #0x0                   	// #0
   1e5ec:	b.ls	1e610 <PyInit__decimal@@Base+0x23d0>  // b.plast
   1e5f0:	mov	x3, x6
   1e5f4:	b	1e600 <PyInit__decimal@@Base+0x23c0>
   1e5f8:	ldr	x7, [x1, x3, lsl #3]
   1e5fc:	cbnz	x7, 1ed18 <PyInit__decimal@@Base+0x2ad8>
   1e600:	sub	x3, x3, #0x1
   1e604:	cmn	x3, #0x1
   1e608:	b.ne	1e5f8 <PyInit__decimal@@Base+0x23b8>  // b.any
   1e60c:	mov	x10, #0x0                   	// #0
   1e610:	add	x8, x6, #0x1
   1e614:	cmp	x2, x8
   1e618:	b.ls	1ed20 <PyInit__decimal@@Base+0x2ae0>  // b.plast
   1e61c:	stp	x29, x30, [sp, #-96]!
   1e620:	mov	x18, #0x34db                	// #13531
   1e624:	mov	x30, #0x5a53                	// #23123
   1e628:	mov	x29, sp
   1e62c:	mov	x17, #0x42bd                	// #17085
   1e630:	mov	x16, #0x7843                	// #30787
   1e634:	mov	x15, #0xf7cf                	// #63439
   1e638:	mov	x14, #0x594b                	// #22859
   1e63c:	stp	x19, x20, [sp, #16]
   1e640:	mov	x20, #0xd5bf                	// #54719
   1e644:	mov	x19, #0xcefd                	// #52989
   1e648:	stp	x21, x22, [sp, #32]
   1e64c:	mov	x22, #0x2233                	// #8755
   1e650:	movk	x22, #0x5bd4, lsl #16
   1e654:	stp	x23, x24, [sp, #48]
   1e658:	mov	x24, #0xaaff                	// #43775
   1e65c:	movk	x24, #0xcb24, lsl #16
   1e660:	stp	x25, x26, [sp, #64]
   1e664:	mov	x26, #0xcd81                	// #52609
   1e668:	movk	x26, #0x5095, lsl #16
   1e66c:	stp	x27, x28, [sp, #80]
   1e670:	mov	x28, #0x385                 	// #901
   1e674:	movk	x28, #0x92ed, lsl #16
   1e678:	mov	x27, #0xa000                	// #40960
   1e67c:	mov	x25, #0x4000                	// #16384
   1e680:	mov	x23, #0xe800                	// #59392
   1e684:	mov	x21, #0x1000                	// #4096
   1e688:	movk	x20, #0xbded, lsl #16
   1e68c:	movk	x19, #0x8461, lsl #16
   1e690:	movk	x30, #0xa09b, lsl #16
   1e694:	movk	x18, #0xd7b6, lsl #16
   1e698:	movk	x17, #0xe57a, lsl #16
   1e69c:	movk	x16, #0x71b4, lsl #16
   1e6a0:	movk	x15, #0xe353, lsl #16
   1e6a4:	movk	x14, #0x3886, lsl #16
   1e6a8:	movk	x28, #0x84d0, lsl #32
   1e6ac:	movk	x27, #0x4e72, lsl #16
   1e6b0:	movk	x26, #0x4dc3, lsl #32
   1e6b4:	movk	x25, #0x107a, lsl #16
   1e6b8:	movk	x24, #0xff0b, lsl #32
   1e6bc:	movk	x23, #0x4876, lsl #16
   1e6c0:	movk	x22, #0x3302, lsl #32
   1e6c4:	movk	x21, #0xd4a5, lsl #16
   1e6c8:	movk	x20, #0xfece, lsl #32
   1e6cc:	movk	x19, #0x7711, lsl #32
   1e6d0:	movk	x30, #0xb82f, lsl #32
   1e6d4:	movk	x18, #0xde82, lsl #32
   1e6d8:	movk	x17, #0x94d5, lsl #32
   1e6dc:	movk	x16, #0x5ac4, lsl #32
   1e6e0:	movk	x15, #0x9ba5, lsl #32
   1e6e4:	movk	x14, #0xc5d6, lsl #32
   1e6e8:	sub	x12, x9, x8, lsl #3
   1e6ec:	movk	x28, #0x384b, lsl #48
   1e6f0:	movk	x27, #0x918, lsl #32
   1e6f4:	movk	x26, #0xb42, lsl #48
   1e6f8:	movk	x25, #0x5af3, lsl #32
   1e6fc:	movk	x24, #0xafeb, lsl #48
   1e700:	movk	x23, #0x17, lsl #32
   1e704:	movk	x22, #0x232f, lsl #48
   1e708:	movk	x21, #0xe8, lsl #32
   1e70c:	movk	x20, #0xdbe6, lsl #48
   1e710:	movk	x19, #0xabcc, lsl #48
   1e714:	movk	x30, #0x44, lsl #48
   1e718:	movk	x18, #0x431b, lsl #48
   1e71c:	movk	x17, #0xd6bf, lsl #48
   1e720:	movk	x16, #0xa7c, lsl #48
   1e724:	movk	x15, #0x20c4, lsl #48
   1e728:	movk	x14, #0x346d, lsl #48
   1e72c:	b	1e784 <PyInit__decimal@@Base+0x2544>
   1e730:	cmp	x4, #0x4
   1e734:	b.hi	1eb48 <PyInit__decimal@@Base+0x2908>  // b.pmore
   1e738:	cmp	x4, #0x3
   1e73c:	b.eq	1ec0c <PyInit__decimal@@Base+0x29cc>  // b.none
   1e740:	cmp	x4, #0x4
   1e744:	b.eq	1ebac <PyInit__decimal@@Base+0x296c>  // b.none
   1e748:	cmp	x4, #0x2
   1e74c:	b.eq	1eb80 <PyInit__decimal@@Base+0x2940>  // b.none
   1e750:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   1e754:	movk	x7, #0xcccd
   1e758:	umulh	x7, x3, x7
   1e75c:	lsr	x7, x7, #3
   1e760:	add	x13, x7, x7, lsl #2
   1e764:	sub	x3, x3, x13, lsl #1
   1e768:	madd	x3, x11, x3, x5
   1e76c:	add	x13, x8, #0x1
   1e770:	str	x3, [x12, x8, lsl #3]
   1e774:	cmp	x2, x13
   1e778:	b.eq	1e7d8 <PyInit__decimal@@Base+0x2598>  // b.none
   1e77c:	mov	x5, x7
   1e780:	mov	x8, x13
   1e784:	cmp	x4, #0x9
   1e788:	ldr	x3, [x1, x8, lsl #3]
   1e78c:	b.ls	1e730 <PyInit__decimal@@Base+0x24f0>  // b.plast
   1e790:	cmp	x4, #0xe
   1e794:	b.hi	1eafc <PyInit__decimal@@Base+0x28bc>  // b.pmore
   1e798:	cmp	x4, #0xd
   1e79c:	b.eq	1ebc0 <PyInit__decimal@@Base+0x2980>  // b.none
   1e7a0:	cmp	x4, #0xe
   1e7a4:	b.eq	1ebe0 <PyInit__decimal@@Base+0x29a0>  // b.none
   1e7a8:	cmp	x4, #0xb
   1e7ac:	b.eq	1ebd0 <PyInit__decimal@@Base+0x2990>  // b.none
   1e7b0:	cmp	x4, #0xc
   1e7b4:	b.ne	1ebf0 <PyInit__decimal@@Base+0x29b0>  // b.any
   1e7b8:	umulh	x7, x3, x22
   1e7bc:	add	x13, x8, #0x1
   1e7c0:	cmp	x2, x13
   1e7c4:	lsr	x7, x7, #37
   1e7c8:	msub	x3, x7, x21, x3
   1e7cc:	madd	x3, x11, x3, x5
   1e7d0:	str	x3, [x12, x8, lsl #3]
   1e7d4:	b.ne	1e77c <PyInit__decimal@@Base+0x253c>  // b.any
   1e7d8:	cmp	x0, #0x5
   1e7dc:	sub	x6, x8, x6
   1e7e0:	cset	w8, eq  // eq = none
   1e7e4:	cmp	x0, #0x0
   1e7e8:	csinc	w8, w8, wzr, ne  // ne = any
   1e7ec:	cbz	x7, 1e7f4 <PyInit__decimal@@Base+0x25b4>
   1e7f0:	str	x7, [x9, x6, lsl #3]
   1e7f4:	cbz	w8, 1e800 <PyInit__decimal@@Base+0x25c0>
   1e7f8:	cmp	x10, #0x0
   1e7fc:	cinc	x0, x0, ne  // ne = any
   1e800:	ldp	x19, x20, [sp, #16]
   1e804:	ldp	x21, x22, [sp, #32]
   1e808:	ldp	x23, x24, [sp, #48]
   1e80c:	ldp	x25, x26, [sp, #64]
   1e810:	ldp	x27, x28, [sp, #80]
   1e814:	ldp	x29, x30, [sp], #96
   1e818:	ret
   1e81c:	cmp	x4, #0xe
   1e820:	b.hi	1e90c <PyInit__decimal@@Base+0x26cc>  // b.pmore
   1e824:	cmp	x4, #0xd
   1e828:	b.eq	1eea4 <PyInit__decimal@@Base+0x2c64>  // b.none
   1e82c:	cmp	x4, #0xe
   1e830:	b.eq	1ed9c <PyInit__decimal@@Base+0x2b5c>  // b.none
   1e834:	cmp	x4, #0xb
   1e838:	b.eq	1e9ec <PyInit__decimal@@Base+0x27ac>  // b.none
   1e83c:	cmp	x4, #0xc
   1e840:	b.ne	1f050 <PyInit__decimal@@Base+0x2e10>  // b.any
   1e844:	mov	x5, #0x2233                	// #8755
   1e848:	mov	x0, #0x1000                	// #4096
   1e84c:	movk	x5, #0x5bd4, lsl #16
   1e850:	movk	x0, #0xd4a5, lsl #16
   1e854:	movk	x5, #0x3302, lsl #32
   1e858:	movk	x0, #0xe8, lsl #32
   1e85c:	movk	x5, #0x232f, lsl #48
   1e860:	umulh	x5, x10, x5
   1e864:	lsr	x5, x5, #37
   1e868:	msub	x10, x5, x0, x10
   1e86c:	mov	x0, #0xaaff                	// #43775
   1e870:	mov	x7, #0xe800                	// #59392
   1e874:	movk	x0, #0xcb24, lsl #16
   1e878:	movk	x7, #0x4876, lsl #16
   1e87c:	movk	x0, #0xff0b, lsl #32
   1e880:	movk	x7, #0x17, lsl #32
   1e884:	movk	x0, #0xafeb, lsl #48
   1e888:	umulh	x0, x10, x0
   1e88c:	lsr	x0, x0, #36
   1e890:	msub	x10, x0, x7, x10
   1e894:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1e898:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1e89c:	cmp	x4, #0x8
   1e8a0:	b.eq	1ef10 <PyInit__decimal@@Base+0x2cd0>  // b.none
   1e8a4:	cmp	x4, #0x9
   1e8a8:	b.eq	1effc <PyInit__decimal@@Base+0x2dbc>  // b.none
   1e8ac:	cmp	x4, #0x6
   1e8b0:	b.eq	1e998 <PyInit__decimal@@Base+0x2758>  // b.none
   1e8b4:	cmp	x4, #0x7
   1e8b8:	b.ne	1ed40 <PyInit__decimal@@Base+0x2b00>  // b.any
   1e8bc:	mov	x5, #0x42bd                	// #17085
   1e8c0:	mov	x0, #0x9680                	// #38528
   1e8c4:	movk	x5, #0xe57a, lsl #16
   1e8c8:	movk	x0, #0x98, lsl #16
   1e8cc:	movk	x5, #0x94d5, lsl #32
   1e8d0:	movk	x5, #0xd6bf, lsl #48
   1e8d4:	umulh	x5, x10, x5
   1e8d8:	lsr	x5, x5, #23
   1e8dc:	msub	x10, x5, x0, x10
   1e8e0:	mov	x0, #0x34db                	// #13531
   1e8e4:	mov	x7, #0x4240                	// #16960
   1e8e8:	movk	x0, #0xd7b6, lsl #16
   1e8ec:	movk	x7, #0xf, lsl #16
   1e8f0:	movk	x0, #0xde82, lsl #32
   1e8f4:	movk	x0, #0x431b, lsl #48
   1e8f8:	umulh	x0, x10, x0
   1e8fc:	lsr	x0, x0, #18
   1e900:	msub	x10, x0, x7, x10
   1e904:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1e908:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1e90c:	cmp	x4, #0x11
   1e910:	b.eq	1f0b4 <PyInit__decimal@@Base+0x2e74>  // b.none
   1e914:	cmp	x4, #0x12
   1e918:	b.eq	1eaa4 <PyInit__decimal@@Base+0x2864>  // b.none
   1e91c:	cmp	x4, #0x10
   1e920:	b.eq	1ea44 <PyInit__decimal@@Base+0x2804>  // b.none
   1e924:	mov	x8, #0xeac3                	// #60099
   1e928:	lsr	x5, x10, #15
   1e92c:	movk	x8, #0xf3dc, lsl #16
   1e930:	mov	x7, #0x8000                	// #32768
   1e934:	movk	x8, #0x4075, lsl #32
   1e938:	movk	x7, #0xa4c6, lsl #16
   1e93c:	movk	x8, #0x2, lsl #48
   1e940:	movk	x7, #0x8d7e, lsl #32
   1e944:	movk	x7, #0x3, lsl #48
   1e948:	sub	x0, x4, #0x1
   1e94c:	umulh	x5, x5, x8
   1e950:	cmp	x0, #0xe
   1e954:	lsr	x5, x5, #20
   1e958:	msub	x10, x5, x7, x10
   1e95c:	b.ls	1ef60 <PyInit__decimal@@Base+0x2d20>  // b.plast
   1e960:	cmp	x0, #0x10
   1e964:	b.ne	1ea6c <PyInit__decimal@@Base+0x282c>  // b.any
   1e968:	mov	x0, #0x7857                	// #30807
   1e96c:	mov	x7, #0x6fc10000            	// #1874919424
   1e970:	movk	x0, #0xb113, lsl #16
   1e974:	movk	x7, #0x86f2, lsl #32
   1e978:	movk	x0, #0x652f, lsl #32
   1e97c:	movk	x7, #0x23, lsl #48
   1e980:	movk	x0, #0x39a5, lsl #48
   1e984:	umulh	x0, x10, x0
   1e988:	lsr	x0, x0, #51
   1e98c:	msub	x10, x0, x7, x10
   1e990:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1e994:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1e998:	mov	x5, #0x34db                	// #13531
   1e99c:	mov	x0, #0x4240                	// #16960
   1e9a0:	movk	x5, #0xd7b6, lsl #16
   1e9a4:	movk	x0, #0xf, lsl #16
   1e9a8:	movk	x5, #0xde82, lsl #32
   1e9ac:	movk	x5, #0x431b, lsl #48
   1e9b0:	umulh	x5, x10, x5
   1e9b4:	lsr	x5, x5, #18
   1e9b8:	msub	x10, x5, x0, x10
   1e9bc:	mov	x8, #0x7843                	// #30787
   1e9c0:	lsr	x0, x10, #5
   1e9c4:	movk	x8, #0x71b4, lsl #16
   1e9c8:	mov	x7, #0x86a0                	// #34464
   1e9cc:	movk	x8, #0x5ac4, lsl #32
   1e9d0:	movk	x7, #0x1, lsl #16
   1e9d4:	movk	x8, #0xa7c, lsl #48
   1e9d8:	umulh	x0, x0, x8
   1e9dc:	lsr	x0, x0, #7
   1e9e0:	msub	x10, x0, x7, x10
   1e9e4:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1e9e8:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1e9ec:	mov	x5, #0xaaff                	// #43775
   1e9f0:	mov	x0, #0xe800                	// #59392
   1e9f4:	movk	x5, #0xcb24, lsl #16
   1e9f8:	movk	x0, #0x4876, lsl #16
   1e9fc:	movk	x5, #0xff0b, lsl #32
   1ea00:	movk	x0, #0x17, lsl #32
   1ea04:	movk	x5, #0xafeb, lsl #48
   1ea08:	umulh	x5, x10, x5
   1ea0c:	lsr	x5, x5, #36
   1ea10:	msub	x10, x5, x0, x10
   1ea14:	mov	x0, #0xd5bf                	// #54719
   1ea18:	mov	x7, #0xe400                	// #58368
   1ea1c:	movk	x0, #0xbded, lsl #16
   1ea20:	movk	x7, #0x540b, lsl #16
   1ea24:	movk	x0, #0xfece, lsl #32
   1ea28:	movk	x7, #0x2, lsl #32
   1ea2c:	movk	x0, #0xdbe6, lsl #48
   1ea30:	umulh	x0, x10, x0
   1ea34:	lsr	x0, x0, #33
   1ea38:	msub	x10, x0, x7, x10
   1ea3c:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1ea40:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1ea44:	mov	x5, #0x7857                	// #30807
   1ea48:	mov	x0, #0x6fc10000            	// #1874919424
   1ea4c:	movk	x5, #0xb113, lsl #16
   1ea50:	movk	x0, #0x86f2, lsl #32
   1ea54:	movk	x5, #0x652f, lsl #32
   1ea58:	movk	x0, #0x23, lsl #48
   1ea5c:	movk	x5, #0x39a5, lsl #48
   1ea60:	umulh	x5, x10, x5
   1ea64:	lsr	x5, x5, #51
   1ea68:	msub	x10, x5, x0, x10
   1ea6c:	mov	x8, #0xeac3                	// #60099
   1ea70:	lsr	x0, x10, #15
   1ea74:	movk	x8, #0xf3dc, lsl #16
   1ea78:	mov	x7, #0x8000                	// #32768
   1ea7c:	movk	x8, #0x4075, lsl #32
   1ea80:	movk	x7, #0xa4c6, lsl #16
   1ea84:	movk	x8, #0x2, lsl #48
   1ea88:	movk	x7, #0x8d7e, lsl #32
   1ea8c:	movk	x7, #0x3, lsl #48
   1ea90:	umulh	x0, x0, x8
   1ea94:	lsr	x0, x0, #20
   1ea98:	msub	x10, x0, x7, x10
   1ea9c:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1eaa0:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1eaa4:	mov	x12, #0x490f                	// #18703
   1eaa8:	lsr	x5, x10, #18
   1eaac:	movk	x12, #0x7747, lsl #16
   1eab0:	mov	x0, #0xa7640000            	// #2808348672
   1eab4:	movk	x12, #0x49c9, lsl #32
   1eab8:	movk	x0, #0xb6b3, lsl #32
   1eabc:	movk	x0, #0xde0, lsl #48
   1eac0:	mov	x8, #0x1b53                	// #6995
   1eac4:	umulh	x5, x5, x12
   1eac8:	movk	x8, #0xd519, lsl #16
   1eacc:	movk	x8, #0x5c3b, lsl #32
   1ead0:	mov	x7, #0x5d8a0000            	// #1569325056
   1ead4:	movk	x7, #0x4578, lsl #32
   1ead8:	lsr	x5, x5, #24
   1eadc:	movk	x7, #0x163, lsl #48
   1eae0:	msub	x10, x5, x0, x10
   1eae4:	lsr	x0, x10, #17
   1eae8:	umulh	x0, x0, x8
   1eaec:	lsr	x0, x0, #22
   1eaf0:	msub	x10, x0, x7, x10
   1eaf4:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1eaf8:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1eafc:	cmp	x4, #0x11
   1eb00:	b.eq	1ecec <PyInit__decimal@@Base+0x2aac>  // b.none
   1eb04:	cmp	x4, #0x12
   1eb08:	b.eq	1ecc0 <PyInit__decimal@@Base+0x2a80>  // b.none
   1eb0c:	cmp	x4, #0x10
   1eb10:	b.eq	1ec94 <PyInit__decimal@@Base+0x2a54>  // b.none
   1eb14:	mov	x13, #0xeac3                	// #60099
   1eb18:	lsr	x7, x3, #15
   1eb1c:	movk	x13, #0xf3dc, lsl #16
   1eb20:	movk	x13, #0x4075, lsl #32
   1eb24:	movk	x13, #0x2, lsl #48
   1eb28:	umulh	x7, x7, x13
   1eb2c:	mov	x13, #0x8000                	// #32768
   1eb30:	movk	x13, #0xa4c6, lsl #16
   1eb34:	movk	x13, #0x8d7e, lsl #32
   1eb38:	lsr	x7, x7, #20
   1eb3c:	movk	x13, #0x3, lsl #48
   1eb40:	msub	x3, x7, x13, x3
   1eb44:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1eb48:	cmp	x4, #0x8
   1eb4c:	b.eq	1ec7c <PyInit__decimal@@Base+0x2a3c>  // b.none
   1eb50:	cmp	x4, #0x9
   1eb54:	b.eq	1ec60 <PyInit__decimal@@Base+0x2a20>  // b.none
   1eb58:	cmp	x4, #0x6
   1eb5c:	b.eq	1ec48 <PyInit__decimal@@Base+0x2a08>  // b.none
   1eb60:	cmp	x4, #0x7
   1eb64:	b.ne	1ec2c <PyInit__decimal@@Base+0x29ec>  // b.any
   1eb68:	umulh	x7, x3, x17
   1eb6c:	mov	x13, #0x9680                	// #38528
   1eb70:	movk	x13, #0x98, lsl #16
   1eb74:	lsr	x7, x7, #23
   1eb78:	msub	x3, x7, x13, x3
   1eb7c:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1eb80:	mov	x13, #0xf5c3                	// #62915
   1eb84:	lsr	x7, x3, #2
   1eb88:	movk	x13, #0x5c28, lsl #16
   1eb8c:	movk	x13, #0xc28f, lsl #32
   1eb90:	movk	x13, #0x28f5, lsl #48
   1eb94:	umulh	x7, x7, x13
   1eb98:	lsr	x7, x7, #2
   1eb9c:	add	x13, x7, x7, lsl #1
   1eba0:	add	x13, x7, x13, lsl #3
   1eba4:	sub	x3, x3, x13, lsl #2
   1eba8:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ebac:	umulh	x7, x3, x14
   1ebb0:	mov	x13, #0x2710                	// #10000
   1ebb4:	lsr	x7, x7, #11
   1ebb8:	msub	x3, x7, x13, x3
   1ebbc:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ebc0:	umulh	x7, x3, x28
   1ebc4:	lsr	x7, x7, #41
   1ebc8:	msub	x3, x7, x27, x3
   1ebcc:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ebd0:	umulh	x7, x3, x24
   1ebd4:	lsr	x7, x7, #36
   1ebd8:	msub	x3, x7, x23, x3
   1ebdc:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ebe0:	umulh	x7, x3, x26
   1ebe4:	lsr	x7, x7, #42
   1ebe8:	msub	x3, x7, x25, x3
   1ebec:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ebf0:	umulh	x7, x3, x20
   1ebf4:	mov	x13, #0xe400                	// #58368
   1ebf8:	movk	x13, #0x540b, lsl #16
   1ebfc:	movk	x13, #0x2, lsl #32
   1ec00:	lsr	x7, x7, #33
   1ec04:	msub	x3, x7, x13, x3
   1ec08:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ec0c:	lsr	x7, x3, #3
   1ec10:	umulh	x7, x7, x15
   1ec14:	lsr	x7, x7, #4
   1ec18:	lsl	x13, x7, #5
   1ec1c:	sub	x13, x13, x7
   1ec20:	add	x13, x7, x13, lsl #2
   1ec24:	sub	x3, x3, x13, lsl #3
   1ec28:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ec2c:	lsr	x7, x3, #5
   1ec30:	mov	x13, #0x86a0                	// #34464
   1ec34:	movk	x13, #0x1, lsl #16
   1ec38:	umulh	x7, x7, x16
   1ec3c:	lsr	x7, x7, #7
   1ec40:	msub	x3, x7, x13, x3
   1ec44:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ec48:	umulh	x7, x3, x18
   1ec4c:	mov	x13, #0x4240                	// #16960
   1ec50:	movk	x13, #0xf, lsl #16
   1ec54:	lsr	x7, x7, #18
   1ec58:	msub	x3, x7, x13, x3
   1ec5c:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ec60:	lsr	x7, x3, #9
   1ec64:	mov	x13, #0xca00                	// #51712
   1ec68:	movk	x13, #0x3b9a, lsl #16
   1ec6c:	umulh	x7, x7, x30
   1ec70:	lsr	x7, x7, #11
   1ec74:	msub	x3, x7, x13, x3
   1ec78:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ec7c:	umulh	x7, x3, x19
   1ec80:	mov	x13, #0xe100                	// #57600
   1ec84:	movk	x13, #0x5f5, lsl #16
   1ec88:	lsr	x7, x7, #26
   1ec8c:	msub	x3, x7, x13, x3
   1ec90:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ec94:	mov	x7, #0x7857                	// #30807
   1ec98:	mov	x13, #0x6fc10000            	// #1874919424
   1ec9c:	movk	x7, #0xb113, lsl #16
   1eca0:	movk	x13, #0x86f2, lsl #32
   1eca4:	movk	x7, #0x652f, lsl #32
   1eca8:	movk	x13, #0x23, lsl #48
   1ecac:	movk	x7, #0x39a5, lsl #48
   1ecb0:	umulh	x7, x3, x7
   1ecb4:	lsr	x7, x7, #51
   1ecb8:	msub	x3, x7, x13, x3
   1ecbc:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ecc0:	mov	x13, #0x490f                	// #18703
   1ecc4:	lsr	x7, x3, #18
   1ecc8:	movk	x13, #0x7747, lsl #16
   1eccc:	movk	x13, #0x49c9, lsl #32
   1ecd0:	umulh	x7, x7, x13
   1ecd4:	mov	x13, #0xa7640000            	// #2808348672
   1ecd8:	movk	x13, #0xb6b3, lsl #32
   1ecdc:	movk	x13, #0xde0, lsl #48
   1ece0:	lsr	x7, x7, #24
   1ece4:	msub	x3, x7, x13, x3
   1ece8:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ecec:	mov	x13, #0x1b53                	// #6995
   1ecf0:	lsr	x7, x3, #17
   1ecf4:	movk	x13, #0xd519, lsl #16
   1ecf8:	movk	x13, #0x5c3b, lsl #32
   1ecfc:	umulh	x7, x7, x13
   1ed00:	mov	x13, #0x5d8a0000            	// #1569325056
   1ed04:	movk	x13, #0x4578, lsl #32
   1ed08:	movk	x13, #0x163, lsl #48
   1ed0c:	lsr	x7, x7, #22
   1ed10:	msub	x3, x7, x13, x3
   1ed14:	b	1e768 <PyInit__decimal@@Base+0x2528>
   1ed18:	mov	x10, #0x1                   	// #1
   1ed1c:	b	1e610 <PyInit__decimal@@Base+0x23d0>
   1ed20:	cmp	x0, #0x5
   1ed24:	mov	x6, #0x0                   	// #0
   1ed28:	cset	w8, eq  // eq = none
   1ed2c:	cmp	x0, #0x0
   1ed30:	csinc	w8, w8, wzr, ne  // ne = any
   1ed34:	cbz	x5, 1e4c8 <PyInit__decimal@@Base+0x2288>
   1ed38:	str	x5, [x9, x6, lsl #3]
   1ed3c:	b	1e4c8 <PyInit__decimal@@Base+0x2288>
   1ed40:	mov	x8, #0x7843                	// #30787
   1ed44:	lsr	x5, x10, #5
   1ed48:	movk	x8, #0x71b4, lsl #16
   1ed4c:	mov	x7, #0x86a0                	// #34464
   1ed50:	movk	x8, #0x5ac4, lsl #32
   1ed54:	movk	x7, #0x1, lsl #16
   1ed58:	movk	x8, #0xa7c, lsl #48
   1ed5c:	cmp	x4, #0x5
   1ed60:	sub	x0, x4, #0x1
   1ed64:	umulh	x5, x5, x8
   1ed68:	lsr	x5, x5, #7
   1ed6c:	msub	x10, x5, x7, x10
   1ed70:	b.ne	1eefc <PyInit__decimal@@Base+0x2cbc>  // b.any
   1ed74:	mov	x0, #0x594b                	// #22859
   1ed78:	mov	x7, #0x2710                	// #10000
   1ed7c:	movk	x0, #0x3886, lsl #16
   1ed80:	movk	x0, #0xc5d6, lsl #32
   1ed84:	movk	x0, #0x346d, lsl #48
   1ed88:	umulh	x0, x10, x0
   1ed8c:	lsr	x0, x0, #11
   1ed90:	msub	x10, x0, x7, x10
   1ed94:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1ed98:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1ed9c:	mov	x5, #0xcd81                	// #52609
   1eda0:	mov	x0, #0x4000                	// #16384
   1eda4:	movk	x5, #0x5095, lsl #16
   1eda8:	movk	x0, #0x107a, lsl #16
   1edac:	movk	x5, #0x4dc3, lsl #32
   1edb0:	movk	x0, #0x5af3, lsl #32
   1edb4:	movk	x5, #0xb42, lsl #48
   1edb8:	umulh	x5, x10, x5
   1edbc:	lsr	x5, x5, #42
   1edc0:	msub	x10, x5, x0, x10
   1edc4:	mov	x0, #0x385                 	// #901
   1edc8:	mov	x7, #0xa000                	// #40960
   1edcc:	movk	x0, #0x92ed, lsl #16
   1edd0:	movk	x7, #0x4e72, lsl #16
   1edd4:	movk	x0, #0x84d0, lsl #32
   1edd8:	movk	x7, #0x918, lsl #32
   1eddc:	movk	x0, #0x384b, lsl #48
   1ede0:	umulh	x0, x10, x0
   1ede4:	lsr	x0, x0, #41
   1ede8:	msub	x10, x0, x7, x10
   1edec:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1edf0:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1edf4:	mov	x5, #0x594b                	// #22859
   1edf8:	mov	x7, #0x2710                	// #10000
   1edfc:	movk	x5, #0x3886, lsl #16
   1ee00:	mov	x8, #0xf7cf                	// #63439
   1ee04:	movk	x5, #0xc5d6, lsl #32
   1ee08:	movk	x8, #0xe353, lsl #16
   1ee0c:	movk	x5, #0x346d, lsl #48
   1ee10:	movk	x8, #0x9ba5, lsl #32
   1ee14:	movk	x8, #0x20c4, lsl #48
   1ee18:	umulh	x5, x10, x5
   1ee1c:	lsr	x5, x5, #11
   1ee20:	msub	x7, x5, x7, x10
   1ee24:	lsr	x0, x7, #3
   1ee28:	umulh	x0, x0, x8
   1ee2c:	lsr	x0, x0, #4
   1ee30:	lsl	x10, x0, #5
   1ee34:	sub	x10, x10, x0
   1ee38:	add	x10, x0, x10, lsl #2
   1ee3c:	sub	x10, x7, x10, lsl #3
   1ee40:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1ee44:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1ee48:	mov	x0, #0xf7cf                	// #63439
   1ee4c:	lsr	x5, x10, #3
   1ee50:	movk	x0, #0xe353, lsl #16
   1ee54:	movk	x0, #0x9ba5, lsl #32
   1ee58:	movk	x0, #0x20c4, lsl #48
   1ee5c:	umulh	x5, x5, x0
   1ee60:	lsr	x5, x5, #4
   1ee64:	lsl	x0, x5, #5
   1ee68:	sub	x0, x0, x5
   1ee6c:	add	x0, x5, x0, lsl #2
   1ee70:	sub	x10, x10, x0, lsl #3
   1ee74:	mov	x7, #0xf5c3                	// #62915
   1ee78:	lsr	x0, x10, #2
   1ee7c:	movk	x7, #0x5c28, lsl #16
   1ee80:	movk	x7, #0xc28f, lsl #32
   1ee84:	movk	x7, #0x28f5, lsl #48
   1ee88:	umulh	x0, x0, x7
   1ee8c:	lsr	x0, x0, #2
   1ee90:	add	x7, x0, x0, lsl #1
   1ee94:	add	x7, x0, x7, lsl #3
   1ee98:	sub	x10, x10, x7, lsl #2
   1ee9c:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1eea0:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1eea4:	mov	x5, #0x385                 	// #901
   1eea8:	mov	x0, #0xa000                	// #40960
   1eeac:	movk	x5, #0x92ed, lsl #16
   1eeb0:	movk	x0, #0x4e72, lsl #16
   1eeb4:	movk	x5, #0x84d0, lsl #32
   1eeb8:	movk	x0, #0x918, lsl #32
   1eebc:	movk	x5, #0x384b, lsl #48
   1eec0:	umulh	x5, x10, x5
   1eec4:	lsr	x5, x5, #41
   1eec8:	msub	x10, x5, x0, x10
   1eecc:	mov	x0, #0x2233                	// #8755
   1eed0:	mov	x7, #0x1000                	// #4096
   1eed4:	movk	x0, #0x5bd4, lsl #16
   1eed8:	movk	x7, #0xd4a5, lsl #16
   1eedc:	movk	x0, #0x3302, lsl #32
   1eee0:	movk	x7, #0xe8, lsl #32
   1eee4:	movk	x0, #0x232f, lsl #48
   1eee8:	umulh	x0, x10, x0
   1eeec:	lsr	x0, x0, #37
   1eef0:	msub	x10, x0, x7, x10
   1eef4:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1eef8:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1eefc:	cmp	x0, #0x7
   1ef00:	b.eq	1ef34 <PyInit__decimal@@Base+0x2cf4>  // b.none
   1ef04:	cmp	x0, #0x6
   1ef08:	b.eq	1e8e0 <PyInit__decimal@@Base+0x26a0>  // b.none
   1ef0c:	b	1e9bc <PyInit__decimal@@Base+0x277c>
   1ef10:	mov	x5, #0xcefd                	// #52989
   1ef14:	mov	x0, #0xe100                	// #57600
   1ef18:	movk	x5, #0x8461, lsl #16
   1ef1c:	movk	x0, #0x5f5, lsl #16
   1ef20:	movk	x5, #0x7711, lsl #32
   1ef24:	movk	x5, #0xabcc, lsl #48
   1ef28:	umulh	x5, x10, x5
   1ef2c:	lsr	x5, x5, #26
   1ef30:	msub	x10, x5, x0, x10
   1ef34:	mov	x0, #0x42bd                	// #17085
   1ef38:	mov	x7, #0x9680                	// #38528
   1ef3c:	movk	x0, #0xe57a, lsl #16
   1ef40:	movk	x7, #0x98, lsl #16
   1ef44:	movk	x0, #0x94d5, lsl #32
   1ef48:	movk	x0, #0xd6bf, lsl #48
   1ef4c:	umulh	x0, x10, x0
   1ef50:	lsr	x0, x0, #23
   1ef54:	msub	x10, x0, x7, x10
   1ef58:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1ef5c:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1ef60:	cmp	x0, #0xe
   1ef64:	b.ne	1efe0 <PyInit__decimal@@Base+0x2da0>  // b.any
   1ef68:	mov	x0, #0xcd81                	// #52609
   1ef6c:	mov	x7, #0x4000                	// #16384
   1ef70:	movk	x0, #0x5095, lsl #16
   1ef74:	movk	x7, #0x107a, lsl #16
   1ef78:	movk	x0, #0x4dc3, lsl #32
   1ef7c:	movk	x7, #0x5af3, lsl #32
   1ef80:	movk	x0, #0xb42, lsl #48
   1ef84:	umulh	x0, x10, x0
   1ef88:	lsr	x0, x0, #42
   1ef8c:	msub	x10, x0, x7, x10
   1ef90:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1ef94:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1ef98:	mov	x0, #0xf5c3                	// #62915
   1ef9c:	lsr	x5, x10, #2
   1efa0:	movk	x0, #0x5c28, lsl #16
   1efa4:	movk	x0, #0xc28f, lsl #32
   1efa8:	movk	x0, #0x28f5, lsl #48
   1efac:	umulh	x5, x5, x0
   1efb0:	lsr	x5, x5, #2
   1efb4:	add	x0, x5, x5, lsl #1
   1efb8:	add	x0, x5, x0, lsl #3
   1efbc:	sub	x10, x10, x0, lsl #2
   1efc0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1efc4:	movk	x0, #0xcccd
   1efc8:	umulh	x0, x10, x0
   1efcc:	lsr	x0, x0, #3
   1efd0:	add	x7, x0, x0, lsl #2
   1efd4:	sub	x10, x10, x7, lsl #1
   1efd8:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1efdc:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1efe0:	cmp	x0, #0xc
   1efe4:	b.eq	1eecc <PyInit__decimal@@Base+0x2c8c>  // b.none
   1efe8:	cmp	x0, #0xd
   1efec:	b.eq	1edc4 <PyInit__decimal@@Base+0x2b84>  // b.none
   1eff0:	cmp	x0, #0xb
   1eff4:	b.eq	1e86c <PyInit__decimal@@Base+0x262c>  // b.none
   1eff8:	b	1ea14 <PyInit__decimal@@Base+0x27d4>
   1effc:	mov	x12, #0x5a53                	// #23123
   1f000:	lsr	x5, x10, #9
   1f004:	movk	x12, #0xa09b, lsl #16
   1f008:	mov	x0, #0xca00                	// #51712
   1f00c:	movk	x12, #0xb82f, lsl #32
   1f010:	movk	x0, #0x3b9a, lsl #16
   1f014:	movk	x12, #0x44, lsl #48
   1f018:	mov	x7, #0xcefd                	// #52989
   1f01c:	movk	x7, #0x8461, lsl #16
   1f020:	mov	x8, #0xe100                	// #57600
   1f024:	umulh	x5, x5, x12
   1f028:	movk	x7, #0x7711, lsl #32
   1f02c:	movk	x7, #0xabcc, lsl #48
   1f030:	movk	x8, #0x5f5, lsl #16
   1f034:	lsr	x5, x5, #11
   1f038:	msub	x10, x5, x0, x10
   1f03c:	umulh	x0, x10, x7
   1f040:	lsr	x0, x0, #26
   1f044:	msub	x10, x0, x8, x10
   1f048:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1f04c:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1f050:	mov	x5, #0xd5bf                	// #54719
   1f054:	mov	x7, #0xe400                	// #58368
   1f058:	movk	x5, #0xbded, lsl #16
   1f05c:	movk	x7, #0x540b, lsl #16
   1f060:	movk	x5, #0xfece, lsl #32
   1f064:	movk	x7, #0x2, lsl #32
   1f068:	movk	x5, #0xdbe6, lsl #48
   1f06c:	cmp	x4, #0xa
   1f070:	sub	x0, x4, #0x1
   1f074:	umulh	x5, x10, x5
   1f078:	lsr	x5, x5, #33
   1f07c:	msub	x10, x5, x7, x10
   1f080:	b.ne	1ef60 <PyInit__decimal@@Base+0x2d20>  // b.any
   1f084:	mov	x8, #0x5a53                	// #23123
   1f088:	lsr	x0, x10, #9
   1f08c:	movk	x8, #0xa09b, lsl #16
   1f090:	mov	x7, #0xca00                	// #51712
   1f094:	movk	x8, #0xb82f, lsl #32
   1f098:	movk	x7, #0x3b9a, lsl #16
   1f09c:	movk	x8, #0x44, lsl #48
   1f0a0:	umulh	x0, x0, x8
   1f0a4:	lsr	x0, x0, #11
   1f0a8:	msub	x10, x0, x7, x10
   1f0ac:	cbnz	x10, 1e610 <PyInit__decimal@@Base+0x23d0>
   1f0b0:	b	1e5e4 <PyInit__decimal@@Base+0x23a4>
   1f0b4:	mov	x7, #0x1b53                	// #6995
   1f0b8:	lsr	x5, x10, #17
   1f0bc:	movk	x7, #0xd519, lsl #16
   1f0c0:	mov	x0, #0x5d8a0000            	// #1569325056
   1f0c4:	movk	x7, #0x5c3b, lsl #32
   1f0c8:	movk	x0, #0x4578, lsl #32
   1f0cc:	movk	x0, #0x163, lsl #48
   1f0d0:	umulh	x5, x5, x7
   1f0d4:	lsr	x5, x5, #22
   1f0d8:	msub	x10, x5, x0, x10
   1f0dc:	b	1e968 <PyInit__decimal@@Base+0x2728>
   1f0e0:	mov	x10, x0
   1f0e4:	b	1ee74 <PyInit__decimal@@Base+0x2c34>
   1f0e8:	mov	x10, x0
   1f0ec:	b	1efc0 <PyInit__decimal@@Base+0x2d80>
   1f0f0:	mov	x5, x0
   1f0f4:	ldr	x0, [x0]
   1f0f8:	adds	x2, x0, x2
   1f0fc:	cset	w6, cs  // cs = hs, nlast
   1f100:	cmp	x2, x3
   1f104:	cset	w0, cs  // cs = hs, nlast
   1f108:	orr	w6, w6, w0
   1f10c:	cbnz	w6, 1f11c <PyInit__decimal@@Base+0x2edc>
   1f110:	mov	x0, #0x0                   	// #0
   1f114:	str	x2, [x5]
   1f118:	ret
   1f11c:	sub	x0, x2, x3
   1f120:	str	x0, [x5]
   1f124:	cmp	x1, #0x1
   1f128:	mov	x4, #0x1                   	// #1
   1f12c:	b.ls	1f17c <PyInit__decimal@@Base+0x2f3c>  // b.plast
   1f130:	ldr	x2, [x5, x4, lsl #3]
   1f134:	add	x2, x2, #0x1
   1f138:	cmp	x3, x2
   1f13c:	cset	w0, eq  // eq = none
   1f140:	b.eq	1f160 <PyInit__decimal@@Base+0x2f20>  // b.none
   1f144:	str	x2, [x5, x4, lsl #3]
   1f148:	cmp	w0, #0x0
   1f14c:	add	x4, x4, #0x1
   1f150:	ccmp	x1, x4, #0x0, ne  // ne = any
   1f154:	b.hi	1f130 <PyInit__decimal@@Base+0x2ef0>  // b.pmore
   1f158:	and	x0, x0, #0xff
   1f15c:	ret
   1f160:	str	xzr, [x5, x4, lsl #3]
   1f164:	add	x4, x4, #0x1
   1f168:	cmp	x4, x1
   1f16c:	b.cc	1f130 <PyInit__decimal@@Base+0x2ef0>  // b.lo, b.ul, b.last
   1f170:	mov	w0, w6
   1f174:	and	x0, x0, #0xff
   1f178:	b	1f15c <PyInit__decimal@@Base+0x2f1c>
   1f17c:	mov	x0, x4
   1f180:	ret
   1f184:	nop
   1f188:	mov	x13, x0
   1f18c:	mov	x0, #0x0                   	// #0
   1f190:	cbz	x2, 1f230 <PyInit__decimal@@Base+0x2ff0>
   1f194:	ldr	x4, [x1]
   1f198:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f19c:	mov	x10, #0x89e80000            	// #2313682944
   1f1a0:	mov	x14, #0x76180000            	// #1981284352
   1f1a4:	movk	x10, #0x2304, lsl #32
   1f1a8:	movk	x14, #0xdcfb, lsl #32
   1f1ac:	ldr	x11, [x0, #368]
   1f1b0:	umulh	x5, x3, x4
   1f1b4:	mul	x0, x3, x4
   1f1b8:	mov	x9, #0x0                   	// #0
   1f1bc:	movk	x10, #0x8ac7, lsl #48
   1f1c0:	movk	x14, #0x7538, lsl #48
   1f1c4:	b	1f1dc <PyInit__decimal@@Base+0x2f9c>
   1f1c8:	ldr	x5, [x1, x9, lsl #3]
   1f1cc:	mul	x6, x3, x5
   1f1d0:	umulh	x5, x3, x5
   1f1d4:	adds	x0, x6, x0
   1f1d8:	cinc	x5, x5, cs  // cs = hs, nlast
   1f1dc:	and	x8, x10, x0, asr #63
   1f1e0:	add	x7, x5, x0, lsr #63
   1f1e4:	add	x8, x8, x0
   1f1e8:	add	x12, x5, x14
   1f1ec:	umulh	x4, x7, x11
   1f1f0:	madd	x7, x7, x11, x8
   1f1f4:	cmp	x8, x7
   1f1f8:	cinc	x4, x4, hi  // hi = pmore
   1f1fc:	add	x5, x5, x4
   1f200:	mvn	x4, x5
   1f204:	mul	x5, x4, x10
   1f208:	umulh	x6, x4, x10
   1f20c:	adds	x5, x5, x0
   1f210:	adc	x6, x6, x12
   1f214:	and	x7, x6, x10
   1f218:	sub	x0, x6, x4
   1f21c:	add	x5, x7, x5
   1f220:	str	x5, [x13, x9, lsl #3]
   1f224:	add	x9, x9, #0x1
   1f228:	cmp	x2, x9
   1f22c:	b.ne	1f1c8 <PyInit__decimal@@Base+0x2f88>  // b.any
   1f230:	ret
   1f234:	nop
   1f238:	cbz	x2, 1f2f4 <PyInit__decimal@@Base+0x30b4>
   1f23c:	stp	x29, x30, [sp, #-80]!
   1f240:	mov	x29, sp
   1f244:	stp	x25, x26, [sp, #64]
   1f248:	mov	x26, x1
   1f24c:	mov	x25, x3
   1f250:	ldr	x1, [x1]
   1f254:	stp	x19, x20, [sp, #16]
   1f258:	mov	x3, #0x0                   	// #0
   1f25c:	stp	x23, x24, [sp, #48]
   1f260:	mov	x24, x4
   1f264:	mul	x19, x25, x1
   1f268:	umulh	x1, x25, x1
   1f26c:	stp	x21, x22, [sp, #32]
   1f270:	mov	x22, x0
   1f274:	mov	x21, x2
   1f278:	mov	x0, x19
   1f27c:	mov	x2, x4
   1f280:	mov	x23, #0x1                   	// #1
   1f284:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1f288:	msub	x19, x24, x0, x19
   1f28c:	str	x19, [x22]
   1f290:	cmp	x21, x23
   1f294:	mov	x20, #0x0                   	// #0
   1f298:	b.ls	1f2dc <PyInit__decimal@@Base+0x309c>  // b.plast
   1f29c:	nop
   1f2a0:	ldr	x6, [x26, x23, lsl #3]
   1f2a4:	mov	x2, x24
   1f2a8:	mov	x3, #0x0                   	// #0
   1f2ac:	mul	x5, x25, x6
   1f2b0:	umulh	x6, x25, x6
   1f2b4:	adds	x5, x5, x0
   1f2b8:	cinc	x1, x6, cs  // cs = hs, nlast
   1f2bc:	adds	x19, x20, x5
   1f2c0:	mov	x0, x19
   1f2c4:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1f2c8:	msub	x19, x24, x0, x19
   1f2cc:	str	x19, [x22, x23, lsl #3]
   1f2d0:	add	x23, x23, #0x1
   1f2d4:	cmp	x21, x23
   1f2d8:	b.ne	1f2a0 <PyInit__decimal@@Base+0x3060>  // b.any
   1f2dc:	ldp	x19, x20, [sp, #16]
   1f2e0:	ldp	x21, x22, [sp, #32]
   1f2e4:	ldp	x23, x24, [sp, #48]
   1f2e8:	ldp	x25, x26, [sp, #64]
   1f2ec:	ldp	x29, x30, [sp], #80
   1f2f0:	ret
   1f2f4:	mov	x0, #0x0                   	// #0
   1f2f8:	ret
   1f2fc:	nop
   1f300:	cbz	x2, 1f3bc <PyInit__decimal@@Base+0x317c>
   1f304:	stp	x29, x30, [sp, #-80]!
   1f308:	mov	x29, sp
   1f30c:	stp	x21, x22, [sp, #32]
   1f310:	sub	x21, x2, #0x1
   1f314:	stp	x19, x20, [sp, #16]
   1f318:	mov	x20, x0
   1f31c:	mov	x19, x4
   1f320:	ldr	x22, [x1, x21, lsl #3]
   1f324:	stp	x23, x24, [sp, #48]
   1f328:	mov	x24, x3
   1f32c:	mov	x23, x2
   1f330:	mov	x0, x22
   1f334:	mov	x2, x3
   1f338:	mov	x3, #0x0                   	// #0
   1f33c:	str	x25, [sp, #64]
   1f340:	mov	x25, x1
   1f344:	mov	x1, #0x0                   	// #0
   1f348:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1f34c:	str	x0, [x20, x21, lsl #3]
   1f350:	cmp	x23, #0x1
   1f354:	msub	x0, x24, x0, x22
   1f358:	sub	x23, x23, #0x2
   1f35c:	mov	x21, #0x0                   	// #0
   1f360:	b.eq	1f3a4 <PyInit__decimal@@Base+0x3164>  // b.none
   1f364:	nop
   1f368:	ldr	x22, [x25, x23, lsl #3]
   1f36c:	mul	x5, x19, x0
   1f370:	umulh	x1, x19, x0
   1f374:	mov	x2, x24
   1f378:	adds	x0, x5, x22
   1f37c:	mov	x3, #0x0                   	// #0
   1f380:	cinc	x1, x1, cs  // cs = hs, nlast
   1f384:	adds	x22, x21, x0
   1f388:	mov	x0, x22
   1f38c:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   1f390:	str	x0, [x20, x23, lsl #3]
   1f394:	sub	x23, x23, #0x1
   1f398:	msub	x0, x24, x0, x22
   1f39c:	cmn	x23, #0x1
   1f3a0:	b.ne	1f368 <PyInit__decimal@@Base+0x3128>  // b.any
   1f3a4:	ldp	x19, x20, [sp, #16]
   1f3a8:	ldp	x21, x22, [sp, #32]
   1f3ac:	ldp	x23, x24, [sp, #48]
   1f3b0:	ldr	x25, [sp, #64]
   1f3b4:	ldp	x29, x30, [sp], #80
   1f3b8:	ret
   1f3bc:	mov	x0, #0x0                   	// #0
   1f3c0:	ret
   1f3c4:	nop
   1f3c8:	mov	w0, #0x8                   	// #8
   1f3cc:	b	6510 <raise@plt>
   1f3d0:	stp	x29, x30, [sp, #-32]!
   1f3d4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1f3d8:	mov	x29, sp
   1f3dc:	ldr	w2, [x1, #2168]
   1f3e0:	cbnz	w2, 1f408 <PyInit__decimal@@Base+0x31c8>
   1f3e4:	sub	x2, x0, #0x2
   1f3e8:	cmp	x2, #0x3e
   1f3ec:	b.hi	1f45c <PyInit__decimal@@Base+0x321c>  // b.pmore
   1f3f0:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   1f3f4:	mov	w3, #0x1                   	// #1
   1f3f8:	ldp	x29, x30, [sp], #32
   1f3fc:	str	w3, [x1, #2168]
   1f400:	str	x0, [x2, #1880]
   1f404:	ret
   1f408:	str	x19, [sp, #16]
   1f40c:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   1f410:	mov	w3, #0x36                  	// #54
   1f414:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f418:	ldr	x19, [x19, #3904]
   1f41c:	add	x2, x2, #0x478
   1f420:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f424:	add	x1, x1, #0x4b8
   1f428:	ldr	x0, [x19]
   1f42c:	bl	6a70 <fprintf@plt>
   1f430:	ldr	x3, [x19]
   1f434:	mov	x2, #0x44                  	// #68
   1f438:	mov	x1, #0x1                   	// #1
   1f43c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f440:	add	x0, x0, #0x4d0
   1f444:	bl	6930 <fwrite@plt>
   1f448:	ldr	x1, [x19]
   1f44c:	mov	w0, #0xa                   	// #10
   1f450:	ldr	x19, [sp, #16]
   1f454:	ldp	x29, x30, [sp], #32
   1f458:	b	65b0 <fputc@plt>
   1f45c:	str	x19, [sp, #16]
   1f460:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   1f464:	mov	w3, #0x3b                  	// #59
   1f468:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f46c:	ldr	x19, [x19, #3904]
   1f470:	add	x2, x2, #0x478
   1f474:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f478:	add	x1, x1, #0x80
   1f47c:	ldr	x0, [x19]
   1f480:	bl	6a70 <fprintf@plt>
   1f484:	ldr	x3, [x19]
   1f488:	mov	x2, #0x1e                  	// #30
   1f48c:	mov	x1, #0x1                   	// #1
   1f490:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f494:	add	x0, x0, #0x518
   1f498:	bl	6930 <fwrite@plt>
   1f49c:	ldr	x1, [x19]
   1f4a0:	mov	w0, #0xa                   	// #10
   1f4a4:	bl	65b0 <fputc@plt>
   1f4a8:	bl	67c0 <abort@plt>
   1f4ac:	nop
   1f4b0:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f4b4:	mov	x6, #0x1                   	// #1
   1f4b8:	movk	x6, #0x589c, lsl #16
   1f4bc:	mov	x4, #0x4bbe                	// #19390
   1f4c0:	ldr	q0, [x3, #1344]
   1f4c4:	movk	x6, #0x494c, lsl #32
   1f4c8:	mov	x3, #0x400000000           	// #17179869184
   1f4cc:	movk	x6, #0xf21f, lsl #48
   1f4d0:	mov	x5, #0x100000000           	// #4294967296
   1f4d4:	stp	x6, x4, [x0, #16]
   1f4d8:	sub	x4, x1, #0x1
   1f4dc:	stp	x3, x5, [x0, #32]
   1f4e0:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   1f4e4:	movk	x3, #0xb6b3, lsl #32
   1f4e8:	str	q0, [x0]
   1f4ec:	movk	x3, #0xde0, lsl #48
   1f4f0:	mov	x2, x0
   1f4f4:	cmp	x4, x3
   1f4f8:	b.cs	1f558 <PyInit__decimal@@Base+0x3318>  // b.hs, b.nlast
   1f4fc:	mov	x3, #0x9436                	// #37942
   1f500:	add	x0, x1, #0x12
   1f504:	movk	x3, #0x50d7, lsl #16
   1f508:	str	x1, [x2]
   1f50c:	movk	x3, #0x435e, lsl #32
   1f510:	adrp	x4, 65000 <PyInit__decimal@@Base+0x48dc0>
   1f514:	movk	x3, #0xd79, lsl #48
   1f518:	mov	x6, #0x40                  	// #64
   1f51c:	ldr	w2, [x4, #2168]
   1f520:	mov	x5, #0x2                   	// #2
   1f524:	smulh	x1, x0, x3
   1f528:	sub	x0, x1, x0, asr #63
   1f52c:	lsl	x0, x0, #1
   1f530:	cmp	x0, x6
   1f534:	csel	x0, x0, x6, le
   1f538:	cmp	x0, x5
   1f53c:	csel	x0, x0, x5, ge  // ge = tcont
   1f540:	cbnz	w2, 1f570 <PyInit__decimal@@Base+0x3330>
   1f544:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1f548:	mov	w2, #0x1                   	// #1
   1f54c:	str	w2, [x4, #2168]
   1f550:	str	x0, [x1, #1880]
   1f554:	ret
   1f558:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   1f55c:	movi	v0.2s, #0x80
   1f560:	ldr	x1, [x1, #1624]
   1f564:	stur	d0, [x0, #28]
   1f568:	mov	x16, x1
   1f56c:	br	x16
   1f570:	stp	x29, x30, [sp, #-32]!
   1f574:	mov	w3, #0x36                  	// #54
   1f578:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f57c:	mov	x29, sp
   1f580:	str	x19, [sp, #16]
   1f584:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   1f588:	add	x2, x2, #0x478
   1f58c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f590:	ldr	x19, [x19, #3904]
   1f594:	add	x1, x1, #0x4b8
   1f598:	ldr	x0, [x19]
   1f59c:	bl	6a70 <fprintf@plt>
   1f5a0:	ldr	x3, [x19]
   1f5a4:	mov	x2, #0x44                  	// #68
   1f5a8:	mov	x1, #0x1                   	// #1
   1f5ac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f5b0:	add	x0, x0, #0x4d0
   1f5b4:	bl	6930 <fwrite@plt>
   1f5b8:	ldr	x1, [x19]
   1f5bc:	mov	w0, #0xa                   	// #10
   1f5c0:	ldr	x19, [sp, #16]
   1f5c4:	ldp	x29, x30, [sp], #32
   1f5c8:	b	65b0 <fputc@plt>
   1f5cc:	nop
   1f5d0:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f5d4:	mov	x4, #0x1                   	// #1
   1f5d8:	movk	x4, #0x589c, lsl #16
   1f5dc:	mov	x3, #0x4bbe                	// #19390
   1f5e0:	ldr	q0, [x1, #1360]
   1f5e4:	movk	x4, #0x494c, lsl #32
   1f5e8:	movk	x4, #0xf21f, lsl #48
   1f5ec:	mov	x2, #0x600000000           	// #25769803776
   1f5f0:	mov	x1, #0x100000000           	// #4294967296
   1f5f4:	stp	x4, x3, [x0, #16]
   1f5f8:	str	q0, [x0]
   1f5fc:	stp	x2, x1, [x0, #32]
   1f600:	ret
   1f604:	nop
   1f608:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f60c:	mov	x4, #0x1                   	// #1
   1f610:	movk	x4, #0x589c, lsl #16
   1f614:	mov	x3, #0x4bbe                	// #19390
   1f618:	ldr	q0, [x1, #1344]
   1f61c:	movk	x4, #0x494c, lsl #32
   1f620:	movk	x4, #0xf21f, lsl #48
   1f624:	mov	x2, #0x400000000           	// #17179869184
   1f628:	mov	x1, #0x100000000           	// #4294967296
   1f62c:	stp	x4, x3, [x0, #16]
   1f630:	str	q0, [x0]
   1f634:	stp	x2, x1, [x0, #32]
   1f638:	ret
   1f63c:	nop
   1f640:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f644:	mov	x4, #0x1                   	// #1
   1f648:	movk	x4, #0x589c, lsl #16
   1f64c:	mov	x3, #0x4bbf                	// #19391
   1f650:	ldr	q0, [x1, #1376]
   1f654:	movk	x4, #0x494c, lsl #32
   1f658:	movk	x4, #0xf21f, lsl #48
   1f65c:	mov	x2, #0x400000000           	// #17179869184
   1f660:	mov	x1, #0x100000000           	// #4294967296
   1f664:	stp	x4, x3, [x0, #16]
   1f668:	str	q0, [x0]
   1f66c:	stp	x2, x1, [x0, #32]
   1f670:	ret
   1f674:	nop
   1f678:	mov	x3, x0
   1f67c:	sub	w0, w1, #0x1
   1f680:	cmp	w0, #0x1ff
   1f684:	b.hi	1f6e8 <PyInit__decimal@@Base+0x34a8>  // b.pmore
   1f688:	tst	x1, #0x1f
   1f68c:	b.ne	1f6e8 <PyInit__decimal@@Base+0x34a8>  // b.any
   1f690:	cmp	w1, #0x0
   1f694:	add	w2, w1, #0x1f
   1f698:	csel	w2, w2, w1, lt  // lt = tstop
   1f69c:	add	w0, w1, #0xf
   1f6a0:	csel	w1, w0, w1, lt  // lt = tstop
   1f6a4:	mov	x4, #0x3                   	// #3
   1f6a8:	asr	w2, w2, #5
   1f6ac:	mov	x5, #0x1                   	// #1
   1f6b0:	asr	w1, w1, #4
   1f6b4:	mov	x7, #0x600000000           	// #25769803776
   1f6b8:	add	w2, w2, w2, lsl #3
   1f6bc:	add	w1, w1, #0x3
   1f6c0:	sub	w2, w2, #0x2
   1f6c4:	mov	x6, #0x100000001           	// #4294967297
   1f6c8:	lsl	x1, x4, x1
   1f6cc:	mov	w0, #0x0                   	// #0
   1f6d0:	sxtw	x2, w2
   1f6d4:	sub	x4, x5, x1
   1f6d8:	stp	x2, x1, [x3]
   1f6dc:	stp	x4, xzr, [x3, #16]
   1f6e0:	stp	x7, x6, [x3, #32]
   1f6e4:	ret
   1f6e8:	mov	w0, #0xffffffff            	// #-1
   1f6ec:	ret
   1f6f0:	ldr	x0, [x0]
   1f6f4:	ret
   1f6f8:	ldr	x0, [x0, #8]
   1f6fc:	ret
   1f700:	ldr	x0, [x0, #16]
   1f704:	ret
   1f708:	ldr	w0, [x0, #36]
   1f70c:	ret
   1f710:	ldr	w0, [x0, #24]
   1f714:	ret
   1f718:	ldr	w0, [x0, #28]
   1f71c:	ret
   1f720:	ldr	w0, [x0, #40]
   1f724:	ret
   1f728:	ldr	w0, [x0, #44]
   1f72c:	ret
   1f730:	mov	x2, x0
   1f734:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1f738:	sub	x3, x1, #0x1
   1f73c:	movk	x0, #0xb6b3, lsl #32
   1f740:	movk	x0, #0xde0, lsl #48
   1f744:	cmp	x3, x0
   1f748:	b.cs	1f758 <PyInit__decimal@@Base+0x3518>  // b.hs, b.nlast
   1f74c:	mov	w0, #0x1                   	// #1
   1f750:	str	x1, [x2]
   1f754:	ret
   1f758:	mov	w0, #0x0                   	// #0
   1f75c:	ret
   1f760:	mov	x2, x0
   1f764:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1f768:	movk	x0, #0xb6b3, lsl #32
   1f76c:	movk	x0, #0xde0, lsl #48
   1f770:	cmp	x1, x0
   1f774:	b.hi	1f784 <PyInit__decimal@@Base+0x3544>  // b.pmore
   1f778:	mov	w0, #0x1                   	// #1
   1f77c:	str	x1, [x2, #8]
   1f780:	ret
   1f784:	mov	w0, #0x0                   	// #0
   1f788:	ret
   1f78c:	nop
   1f790:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   1f794:	mov	x2, x0
   1f798:	movk	x3, #0xb6b3, lsl #32
   1f79c:	mov	w0, #0x0                   	// #0
   1f7a0:	movk	x3, #0xde0, lsl #48
   1f7a4:	add	x4, x1, x3
   1f7a8:	cmp	x4, x3
   1f7ac:	b.hi	1f7b8 <PyInit__decimal@@Base+0x3578>  // b.pmore
   1f7b0:	mov	w0, #0x1                   	// #1
   1f7b4:	str	x1, [x2, #16]
   1f7b8:	ret
   1f7bc:	nop
   1f7c0:	mov	x2, x0
   1f7c4:	cmp	w1, #0x8
   1f7c8:	mov	w0, #0x0                   	// #0
   1f7cc:	b.hi	1f7d8 <PyInit__decimal@@Base+0x3598>  // b.pmore
   1f7d0:	mov	w0, #0x1                   	// #1
   1f7d4:	str	w1, [x2, #36]
   1f7d8:	ret
   1f7dc:	nop
   1f7e0:	mov	x2, x0
   1f7e4:	mov	w0, #0x7fff                	// #32767
   1f7e8:	cmp	w1, w0
   1f7ec:	b.hi	1f7fc <PyInit__decimal@@Base+0x35bc>  // b.pmore
   1f7f0:	mov	w0, #0x1                   	// #1
   1f7f4:	str	w1, [x2, #24]
   1f7f8:	ret
   1f7fc:	mov	w0, #0x0                   	// #0
   1f800:	ret
   1f804:	nop
   1f808:	mov	x2, x0
   1f80c:	mov	w0, #0x7fff                	// #32767
   1f810:	cmp	w1, w0
   1f814:	b.hi	1f824 <PyInit__decimal@@Base+0x35e4>  // b.pmore
   1f818:	mov	w0, #0x1                   	// #1
   1f81c:	str	w1, [x2, #28]
   1f820:	ret
   1f824:	mov	w0, #0x0                   	// #0
   1f828:	ret
   1f82c:	nop
   1f830:	mov	x2, x0
   1f834:	cmp	w1, #0x1
   1f838:	mov	w0, #0x0                   	// #0
   1f83c:	b.hi	1f848 <PyInit__decimal@@Base+0x3608>  // b.pmore
   1f840:	mov	w0, #0x1                   	// #1
   1f844:	str	w1, [x2, #40]
   1f848:	ret
   1f84c:	nop
   1f850:	mov	x2, x0
   1f854:	cmp	w1, #0x1
   1f858:	mov	w0, #0x0                   	// #0
   1f85c:	b.hi	1f868 <PyInit__decimal@@Base+0x3628>  // b.pmore
   1f860:	mov	w0, #0x1                   	// #1
   1f864:	str	w1, [x2, #44]
   1f868:	ret
   1f86c:	nop
   1f870:	ldp	w4, w3, [x0, #24]
   1f874:	orr	w3, w3, w1
   1f878:	str	w3, [x0, #28]
   1f87c:	ands	w1, w1, w4
   1f880:	b.eq	1f898 <PyInit__decimal@@Base+0x3658>  // b.none
   1f884:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   1f888:	str	w1, [x0, #32]
   1f88c:	ldr	x1, [x3, #1624]
   1f890:	mov	x16, x1
   1f894:	br	x16
   1f898:	ret
   1f89c:	nop
   1f8a0:	stp	x29, x30, [sp, #-96]!
   1f8a4:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   1f8a8:	mov	x29, sp
   1f8ac:	stp	x23, x24, [sp, #48]
   1f8b0:	mov	w23, w3
   1f8b4:	add	x3, x4, #0x460
   1f8b8:	stp	x19, x20, [sp, #16]
   1f8bc:	mov	x24, x2
   1f8c0:	mov	x20, x0
   1f8c4:	ldr	x19, [x3, w23, sxtw #3]
   1f8c8:	stp	x21, x22, [sp, #32]
   1f8cc:	mov	x22, x1
   1f8d0:	stp	x25, x26, [sp, #64]
   1f8d4:	subs	x2, x19, #0x2
   1f8d8:	b.eq	1fb10 <PyInit__decimal@@Base+0x38d0>  // b.none
   1f8dc:	and	x3, x19, #0x100000000
   1f8e0:	and	x6, x19, #0x400000000
   1f8e4:	mov	x4, x24
   1f8e8:	mov	x25, #0x1                   	// #1
   1f8ec:	b	1f9d8 <PyInit__decimal@@Base+0x3798>
   1f8f0:	mul	x0, x25, x4
   1f8f4:	umulh	x4, x25, x4
   1f8f8:	subs	x1, x0, x4
   1f8fc:	cmp	x0, x4
   1f900:	cset	x9, cc  // cc = lo, ul, last
   1f904:	cbnz	x3, 1fa3c <PyInit__decimal@@Base+0x37fc>
   1f908:	cbz	x6, 1faac <PyInit__decimal@@Base+0x386c>
   1f90c:	lsr	x8, x4, #30
   1f910:	lsl	x4, x4, #34
   1f914:	adds	x4, x4, x1
   1f918:	sub	x8, x8, x9
   1f91c:	cinc	x8, x8, cs  // cs = hs, nlast
   1f920:	sub	x0, x7, x5
   1f924:	subs	x9, x4, x8
   1f928:	cmp	x4, x8
   1f92c:	lsr	x1, x8, #30
   1f930:	lsl	x8, x8, #34
   1f934:	sbc	x1, x1, xzr
   1f938:	adds	x8, x9, x8
   1f93c:	cinc	x1, x1, cs  // cs = hs, nlast
   1f940:	subs	x25, x8, x1
   1f944:	cmp	x8, x1
   1f948:	lsr	x8, x1, #30
   1f94c:	lsl	x1, x1, #34
   1f950:	sbc	x8, x8, xzr
   1f954:	adds	x1, x25, x1
   1f958:	cinc	x8, x8, cs  // cs = hs, nlast
   1f95c:	sub	x4, x1, x19
   1f960:	cmp	x8, #0x0
   1f964:	ccmp	x19, x1, #0x0, eq  // eq = none
   1f968:	csel	x25, x4, x1, ls  // ls = plast
   1f96c:	cmp	x0, x7
   1f970:	lsr	x1, x5, #30
   1f974:	cset	x4, hi  // hi = pmore
   1f978:	lsl	x5, x5, #34
   1f97c:	adds	x0, x0, x5
   1f980:	sub	x1, x1, x4
   1f984:	cinc	x1, x1, cs  // cs = hs, nlast
   1f988:	subs	x4, x0, x1
   1f98c:	cmp	x0, x1
   1f990:	lsr	x0, x1, #30
   1f994:	lsl	x1, x1, #34
   1f998:	sbc	x0, x0, xzr
   1f99c:	adds	x1, x4, x1
   1f9a0:	cinc	x0, x0, cs  // cs = hs, nlast
   1f9a4:	subs	x4, x1, x0
   1f9a8:	cmp	x1, x0
   1f9ac:	lsr	x1, x0, #30
   1f9b0:	lsl	x0, x0, #34
   1f9b4:	sbc	x1, x1, xzr
   1f9b8:	adds	x0, x4, x0
   1f9bc:	cinc	x1, x1, cs  // cs = hs, nlast
   1f9c0:	sub	x5, x0, x19
   1f9c4:	cmp	x1, #0x0
   1f9c8:	lsr	x2, x2, #1
   1f9cc:	ccmp	x19, x0, #0x0, eq  // eq = none
   1f9d0:	csel	x4, x5, x0, ls  // ls = plast
   1f9d4:	cbz	x2, 1fb18 <PyInit__decimal@@Base+0x38d8>
   1f9d8:	mul	x7, x4, x4
   1f9dc:	umulh	x5, x4, x4
   1f9e0:	tbnz	w2, #0, 1f8f0 <PyInit__decimal@@Base+0x36b0>
   1f9e4:	cbnz	x3, 1fa7c <PyInit__decimal@@Base+0x383c>
   1f9e8:	sub	x0, x7, x5
   1f9ec:	cbnz	x6, 1f96c <PyInit__decimal@@Base+0x372c>
   1f9f0:	cmp	x0, x7
   1f9f4:	lsr	x1, x5, #24
   1f9f8:	cset	x4, hi  // hi = pmore
   1f9fc:	lsl	x5, x5, #40
   1fa00:	adds	x5, x0, x5
   1fa04:	sub	x1, x1, x4
   1fa08:	cinc	x1, x1, cs  // cs = hs, nlast
   1fa0c:	subs	x4, x5, x1
   1fa10:	cmp	x5, x1
   1fa14:	lsr	x0, x1, #24
   1fa18:	lsl	x1, x1, #40
   1fa1c:	sbc	x0, x0, xzr
   1fa20:	adds	x1, x4, x1
   1fa24:	cinc	x0, x0, cs  // cs = hs, nlast
   1fa28:	subs	x4, x1, x0
   1fa2c:	cmp	x1, x0
   1fa30:	lsr	x1, x0, #24
   1fa34:	lsl	x0, x0, #40
   1fa38:	b	1f9b4 <PyInit__decimal@@Base+0x3774>
   1fa3c:	lsr	x0, x4, #32
   1fa40:	lsl	x4, x4, #32
   1fa44:	adds	x4, x4, x1
   1fa48:	sub	x0, x0, x9
   1fa4c:	cinc	x0, x0, cs  // cs = hs, nlast
   1fa50:	subs	x25, x4, x0
   1fa54:	cmp	x4, x0
   1fa58:	lsr	x1, x0, #32
   1fa5c:	lsl	x0, x0, #32
   1fa60:	sbc	x1, x1, xzr
   1fa64:	adds	x0, x25, x0
   1fa68:	cinc	x1, x1, cs  // cs = hs, nlast
   1fa6c:	sub	x4, x0, x19
   1fa70:	cmp	x1, #0x0
   1fa74:	ccmp	x19, x0, #0x0, eq  // eq = none
   1fa78:	csel	x25, x4, x0, ls  // ls = plast
   1fa7c:	subs	x1, x7, x5
   1fa80:	lsr	x0, x5, #32
   1fa84:	cmp	x7, x5
   1fa88:	lsl	x5, x5, #32
   1fa8c:	sbc	x0, x0, xzr
   1fa90:	adds	x5, x1, x5
   1fa94:	cinc	x0, x0, cs  // cs = hs, nlast
   1fa98:	subs	x4, x5, x0
   1fa9c:	cmp	x5, x0
   1faa0:	lsr	x1, x0, #32
   1faa4:	lsl	x0, x0, #32
   1faa8:	b	1f9b4 <PyInit__decimal@@Base+0x3774>
   1faac:	lsr	x8, x4, #24
   1fab0:	lsl	x4, x4, #40
   1fab4:	adds	x4, x4, x1
   1fab8:	sub	x8, x8, x9
   1fabc:	cinc	x8, x8, cs  // cs = hs, nlast
   1fac0:	sub	x0, x7, x5
   1fac4:	subs	x9, x4, x8
   1fac8:	cmp	x4, x8
   1facc:	lsr	x1, x8, #24
   1fad0:	lsl	x8, x8, #40
   1fad4:	sbc	x1, x1, xzr
   1fad8:	adds	x8, x9, x8
   1fadc:	cinc	x1, x1, cs  // cs = hs, nlast
   1fae0:	subs	x25, x8, x1
   1fae4:	cmp	x8, x1
   1fae8:	lsr	x8, x1, #24
   1faec:	lsl	x1, x1, #40
   1faf0:	sbc	x8, x8, xzr
   1faf4:	adds	x1, x25, x1
   1faf8:	cinc	x8, x8, cs  // cs = hs, nlast
   1fafc:	sub	x4, x1, x19
   1fb00:	cmp	x8, #0x0
   1fb04:	ccmp	x19, x1, #0x0, eq  // eq = none
   1fb08:	csel	x25, x4, x1, ls  // ls = plast
   1fb0c:	b	1f9f0 <PyInit__decimal@@Base+0x37b0>
   1fb10:	mov	x25, #0x1                   	// #1
   1fb14:	nop
   1fb18:	cbnz	x24, 1fd20 <PyInit__decimal@@Base+0x3ae0>
   1fb1c:	adrp	x21, 22000 <PyInit__decimal@@Base+0x5dc0>
   1fb20:	adrp	x26, 21000 <PyInit__decimal@@Base+0x4dc0>
   1fb24:	add	x21, x21, #0x7d8
   1fb28:	add	x26, x26, #0xa38
   1fb2c:	mov	w2, w23
   1fb30:	mov	x1, x24
   1fb34:	mov	x0, x20
   1fb38:	blr	x26
   1fb3c:	cbz	w0, 1fd04 <PyInit__decimal@@Base+0x3ac4>
   1fb40:	mov	w2, w23
   1fb44:	mov	x1, x24
   1fb48:	mov	x0, x22
   1fb4c:	blr	x26
   1fb50:	cbz	w0, 1fd04 <PyInit__decimal@@Base+0x3ac4>
   1fb54:	str	x27, [sp, #80]
   1fb58:	subs	x6, x24, #0x1
   1fb5c:	b.eq	202d8 <PyInit__decimal@@Base+0x4098>  // b.none
   1fb60:	and	x26, x19, #0x100000000
   1fb64:	and	x27, x19, #0x400000000
   1fb68:	add	x4, x20, #0x8
   1fb6c:	add	x7, x22, #0x8
   1fb70:	mov	x0, #0x0                   	// #0
   1fb74:	b	1fc58 <PyInit__decimal@@Base+0x3a18>
   1fb78:	cbz	x27, 1fd48 <PyInit__decimal@@Base+0x3b08>
   1fb7c:	lsr	x3, x5, #30
   1fb80:	lsl	x5, x5, #34
   1fb84:	adds	x5, x5, x9
   1fb88:	sub	x3, x3, x10
   1fb8c:	cinc	x3, x3, cs  // cs = hs, nlast
   1fb90:	mul	x10, x8, x1
   1fb94:	subs	x9, x5, x3
   1fb98:	umulh	x1, x8, x1
   1fb9c:	cmp	x5, x3
   1fba0:	lsr	x2, x3, #30
   1fba4:	lsl	x3, x3, #34
   1fba8:	sbc	x2, x2, xzr
   1fbac:	adds	x9, x9, x3
   1fbb0:	lsl	x11, x1, #34
   1fbb4:	cinc	x2, x2, cs  // cs = hs, nlast
   1fbb8:	lsr	x3, x1, #30
   1fbbc:	subs	x5, x9, x2
   1fbc0:	cmp	x9, x2
   1fbc4:	lsr	x8, x2, #30
   1fbc8:	lsl	x2, x2, #34
   1fbcc:	sbc	x8, x8, xzr
   1fbd0:	adds	x2, x5, x2
   1fbd4:	cinc	x8, x8, cs  // cs = hs, nlast
   1fbd8:	sub	x5, x2, x19
   1fbdc:	cmp	x8, #0x0
   1fbe0:	ccmp	x19, x2, #0x0, eq  // eq = none
   1fbe4:	csel	x5, x5, x2, ls  // ls = plast
   1fbe8:	subs	x2, x10, x1
   1fbec:	cmp	x10, x1
   1fbf0:	sbc	x3, x3, xzr
   1fbf4:	adds	x1, x2, x11
   1fbf8:	cinc	x3, x3, cs  // cs = hs, nlast
   1fbfc:	subs	x2, x1, x3
   1fc00:	cmp	x1, x3
   1fc04:	lsr	x1, x3, #30
   1fc08:	lsl	x3, x3, #34
   1fc0c:	sbc	x1, x1, xzr
   1fc10:	adds	x3, x2, x3
   1fc14:	cinc	x1, x1, cs  // cs = hs, nlast
   1fc18:	subs	x2, x3, x1
   1fc1c:	cmp	x3, x1
   1fc20:	lsr	x3, x1, #30
   1fc24:	lsl	x1, x1, #34
   1fc28:	sbc	x3, x3, xzr
   1fc2c:	adds	x2, x2, x1
   1fc30:	cinc	x3, x3, cs  // cs = hs, nlast
   1fc34:	sub	x1, x2, x19
   1fc38:	cmp	x3, #0x0
   1fc3c:	str	x5, [x20, x0, lsl #3]
   1fc40:	ccmp	x19, x2, #0x0, eq  // eq = none
   1fc44:	csel	x1, x1, x2, ls  // ls = plast
   1fc48:	str	x1, [x4, x0, lsl #3]
   1fc4c:	add	x0, x0, #0x2
   1fc50:	cmp	x0, x6
   1fc54:	b.cs	1fdf8 <PyInit__decimal@@Base+0x3bb8>  // b.hs, b.nlast
   1fc58:	ldr	x5, [x20, x0, lsl #3]
   1fc5c:	ldr	x3, [x22, x0, lsl #3]
   1fc60:	ldr	x8, [x4, x0, lsl #3]
   1fc64:	mul	x2, x5, x3
   1fc68:	umulh	x5, x5, x3
   1fc6c:	ldr	x1, [x7, x0, lsl #3]
   1fc70:	subs	x9, x2, x5
   1fc74:	cmp	x2, x5
   1fc78:	cset	x10, cc  // cc = lo, ul, last
   1fc7c:	cbz	x26, 1fb78 <PyInit__decimal@@Base+0x3938>
   1fc80:	lsr	x2, x5, #32
   1fc84:	lsl	x5, x5, #32
   1fc88:	adds	x5, x5, x9
   1fc8c:	sub	x2, x2, x10
   1fc90:	cinc	x2, x2, cs  // cs = hs, nlast
   1fc94:	mul	x9, x8, x1
   1fc98:	subs	x3, x5, x2
   1fc9c:	umulh	x1, x8, x1
   1fca0:	cmp	x5, x2
   1fca4:	lsr	x8, x2, #32
   1fca8:	lsl	x2, x2, #32
   1fcac:	sbc	x8, x8, xzr
   1fcb0:	adds	x5, x3, x2
   1fcb4:	lsr	x2, x1, #32
   1fcb8:	cinc	x8, x8, cs  // cs = hs, nlast
   1fcbc:	sub	x3, x5, x19
   1fcc0:	cmp	x8, #0x0
   1fcc4:	lsl	x8, x1, #32
   1fcc8:	ccmp	x19, x5, #0x0, eq  // eq = none
   1fccc:	csel	x5, x3, x5, ls  // ls = plast
   1fcd0:	subs	x3, x9, x1
   1fcd4:	cmp	x9, x1
   1fcd8:	sbc	x2, x2, xzr
   1fcdc:	adds	x3, x3, x8
   1fce0:	cinc	x2, x2, cs  // cs = hs, nlast
   1fce4:	subs	x1, x3, x2
   1fce8:	cmp	x3, x2
   1fcec:	lsr	x3, x2, #32
   1fcf0:	lsl	x2, x2, #32
   1fcf4:	sbc	x3, x3, xzr
   1fcf8:	adds	x2, x1, x2
   1fcfc:	b	1fc30 <PyInit__decimal@@Base+0x39f0>
   1fd00:	ldr	x27, [sp, #80]
   1fd04:	mov	w0, #0x0                   	// #0
   1fd08:	ldp	x19, x20, [sp, #16]
   1fd0c:	ldp	x21, x22, [sp, #32]
   1fd10:	ldp	x23, x24, [sp, #48]
   1fd14:	ldp	x25, x26, [sp, #64]
   1fd18:	ldp	x29, x30, [sp], #96
   1fd1c:	ret
   1fd20:	sub	x0, x24, #0x1
   1fd24:	tst	x0, x24
   1fd28:	b.ne	1fb1c <PyInit__decimal@@Base+0x38dc>  // b.any
   1fd2c:	cmp	x24, #0x1, lsl #12
   1fd30:	b.ls	202c4 <PyInit__decimal@@Base+0x4084>  // b.plast
   1fd34:	adrp	x21, 3f000 <PyInit__decimal@@Base+0x22dc0>
   1fd38:	adrp	x26, 3f000 <PyInit__decimal@@Base+0x22dc0>
   1fd3c:	add	x21, x21, #0xb98
   1fd40:	add	x26, x26, #0x150
   1fd44:	b	1fb2c <PyInit__decimal@@Base+0x38ec>
   1fd48:	lsr	x3, x5, #24
   1fd4c:	lsl	x5, x5, #40
   1fd50:	adds	x5, x5, x9
   1fd54:	sub	x3, x3, x10
   1fd58:	cinc	x3, x3, cs  // cs = hs, nlast
   1fd5c:	mul	x10, x1, x8
   1fd60:	subs	x9, x5, x3
   1fd64:	umulh	x1, x1, x8
   1fd68:	cmp	x5, x3
   1fd6c:	lsr	x2, x3, #24
   1fd70:	lsl	x3, x3, #40
   1fd74:	sbc	x2, x2, xzr
   1fd78:	adds	x8, x9, x3
   1fd7c:	lsr	x3, x1, #24
   1fd80:	cinc	x2, x2, cs  // cs = hs, nlast
   1fd84:	lsl	x9, x1, #40
   1fd88:	subs	x5, x8, x2
   1fd8c:	cmp	x8, x2
   1fd90:	lsr	x8, x2, #24
   1fd94:	lsl	x2, x2, #40
   1fd98:	sbc	x8, x8, xzr
   1fd9c:	adds	x2, x5, x2
   1fda0:	cinc	x8, x8, cs  // cs = hs, nlast
   1fda4:	sub	x5, x2, x19
   1fda8:	cmp	x8, #0x0
   1fdac:	ccmp	x19, x2, #0x0, eq  // eq = none
   1fdb0:	csel	x5, x5, x2, ls  // ls = plast
   1fdb4:	subs	x2, x10, x1
   1fdb8:	cmp	x10, x1
   1fdbc:	sbc	x3, x3, xzr
   1fdc0:	adds	x1, x2, x9
   1fdc4:	cinc	x3, x3, cs  // cs = hs, nlast
   1fdc8:	subs	x2, x1, x3
   1fdcc:	cmp	x1, x3
   1fdd0:	lsr	x1, x3, #24
   1fdd4:	lsl	x3, x3, #40
   1fdd8:	sbc	x1, x1, xzr
   1fddc:	adds	x3, x2, x3
   1fde0:	cinc	x1, x1, cs  // cs = hs, nlast
   1fde4:	subs	x2, x3, x1
   1fde8:	cmp	x3, x1
   1fdec:	lsr	x3, x1, #24
   1fdf0:	lsl	x1, x1, #40
   1fdf4:	b	1fc28 <PyInit__decimal@@Base+0x39e8>
   1fdf8:	mov	w2, w23
   1fdfc:	mov	x1, x24
   1fe00:	mov	x0, x20
   1fe04:	blr	x21
   1fe08:	cbz	w0, 1fd00 <PyInit__decimal@@Base+0x3ac0>
   1fe0c:	subs	x24, x24, #0x3
   1fe10:	b.eq	2011c <PyInit__decimal@@Base+0x3edc>  // b.none
   1fe14:	mov	x2, #0x0                   	// #0
   1fe18:	b	1ffd8 <PyInit__decimal@@Base+0x3d98>
   1fe1c:	cbz	x27, 2013c <PyInit__decimal@@Base+0x3efc>
   1fe20:	lsr	x5, x1, #30
   1fe24:	lsl	x1, x1, #34
   1fe28:	adds	x1, x1, x6
   1fe2c:	sub	x5, x5, x7
   1fe30:	cinc	x5, x5, cs  // cs = hs, nlast
   1fe34:	mul	x8, x3, x25
   1fe38:	subs	x7, x1, x5
   1fe3c:	umulh	x3, x3, x25
   1fe40:	cmp	x1, x5
   1fe44:	lsr	x1, x5, #30
   1fe48:	lsl	x5, x5, #34
   1fe4c:	sbc	x1, x1, xzr
   1fe50:	adds	x7, x7, x5
   1fe54:	lsl	x10, x3, #34
   1fe58:	cinc	x1, x1, cs  // cs = hs, nlast
   1fe5c:	lsr	x6, x3, #30
   1fe60:	subs	x5, x7, x1
   1fe64:	mul	x12, x4, x25
   1fe68:	cmp	x7, x1
   1fe6c:	lsr	x7, x1, #30
   1fe70:	lsl	x1, x1, #34
   1fe74:	sbc	x7, x7, xzr
   1fe78:	adds	x1, x5, x1
   1fe7c:	umulh	x4, x4, x25
   1fe80:	cinc	x7, x7, cs  // cs = hs, nlast
   1fe84:	sub	x5, x1, x19
   1fe88:	cmp	x7, #0x0
   1fe8c:	mul	x9, x0, x25
   1fe90:	ccmp	x19, x1, #0x0, eq  // eq = none
   1fe94:	lsr	x7, x4, #30
   1fe98:	csel	x5, x5, x1, ls  // ls = plast
   1fe9c:	subs	x1, x8, x3
   1fea0:	cmp	x8, x3
   1fea4:	lsl	x13, x4, #34
   1fea8:	sbc	x6, x6, xzr
   1feac:	adds	x1, x1, x10
   1feb0:	cinc	x6, x6, cs  // cs = hs, nlast
   1feb4:	umulh	x0, x0, x25
   1feb8:	subs	x10, x1, x6
   1febc:	cmp	x1, x6
   1fec0:	lsr	x1, x6, #30
   1fec4:	lsl	x6, x6, #34
   1fec8:	sbc	x1, x1, xzr
   1fecc:	adds	x10, x10, x6
   1fed0:	lsl	x11, x0, #34
   1fed4:	cinc	x1, x1, cs  // cs = hs, nlast
   1fed8:	lsr	x6, x0, #30
   1fedc:	subs	x8, x10, x1
   1fee0:	cmp	x10, x1
   1fee4:	lsr	x10, x1, #30
   1fee8:	lsl	x1, x1, #34
   1feec:	sbc	x10, x10, xzr
   1fef0:	adds	x1, x8, x1
   1fef4:	cinc	x10, x10, cs  // cs = hs, nlast
   1fef8:	sub	x8, x1, x19
   1fefc:	cmp	x10, #0x0
   1ff00:	ccmp	x19, x1, #0x0, eq  // eq = none
   1ff04:	csel	x8, x8, x1, ls  // ls = plast
   1ff08:	subs	x3, x12, x4
   1ff0c:	cmp	x12, x4
   1ff10:	sbc	x7, x7, xzr
   1ff14:	adds	x3, x3, x13
   1ff18:	cinc	x7, x7, cs  // cs = hs, nlast
   1ff1c:	subs	x1, x3, x7
   1ff20:	cmp	x3, x7
   1ff24:	lsr	x3, x7, #30
   1ff28:	lsl	x7, x7, #34
   1ff2c:	sbc	x3, x3, xzr
   1ff30:	adds	x7, x1, x7
   1ff34:	cinc	x3, x3, cs  // cs = hs, nlast
   1ff38:	subs	x1, x7, x3
   1ff3c:	cmp	x7, x3
   1ff40:	lsr	x4, x3, #30
   1ff44:	lsl	x3, x3, #34
   1ff48:	sbc	x4, x4, xzr
   1ff4c:	adds	x3, x1, x3
   1ff50:	cinc	x4, x4, cs  // cs = hs, nlast
   1ff54:	sub	x1, x3, x19
   1ff58:	cmp	x4, #0x0
   1ff5c:	ccmp	x19, x3, #0x0, eq  // eq = none
   1ff60:	csel	x3, x1, x3, ls  // ls = plast
   1ff64:	subs	x1, x9, x0
   1ff68:	cmp	x9, x0
   1ff6c:	sbc	x6, x6, xzr
   1ff70:	adds	x0, x1, x11
   1ff74:	cinc	x6, x6, cs  // cs = hs, nlast
   1ff78:	subs	x1, x0, x6
   1ff7c:	cmp	x0, x6
   1ff80:	lsr	x0, x6, #30
   1ff84:	lsl	x6, x6, #34
   1ff88:	sbc	x0, x0, xzr
   1ff8c:	adds	x6, x1, x6
   1ff90:	cinc	x0, x0, cs  // cs = hs, nlast
   1ff94:	subs	x1, x6, x0
   1ff98:	cmp	x6, x0
   1ff9c:	lsr	x4, x0, #30
   1ffa0:	lsl	x0, x0, #34
   1ffa4:	sbc	x4, x4, xzr
   1ffa8:	adds	x1, x1, x0
   1ffac:	cinc	x4, x4, cs  // cs = hs, nlast
   1ffb0:	sub	x0, x1, x19
   1ffb4:	cmp	x4, #0x0
   1ffb8:	stp	x5, x8, [x20]
   1ffbc:	ccmp	x19, x1, #0x0, eq  // eq = none
   1ffc0:	csel	x0, x0, x1, ls  // ls = plast
   1ffc4:	stp	x3, x0, [x20, #16]
   1ffc8:	add	x2, x2, #0x4
   1ffcc:	cmp	x2, x24
   1ffd0:	add	x20, x20, #0x20
   1ffd4:	b.cs	2011c <PyInit__decimal@@Base+0x3edc>  // b.hs, b.nlast
   1ffd8:	ldp	x1, x3, [x20]
   1ffdc:	ldr	x4, [x20, #16]
   1ffe0:	mul	x0, x25, x1
   1ffe4:	umulh	x1, x25, x1
   1ffe8:	subs	x6, x0, x1
   1ffec:	cmp	x0, x1
   1fff0:	cset	x7, cc  // cc = lo, ul, last
   1fff4:	ldr	x0, [x20, #24]
   1fff8:	cbz	x26, 1fe1c <PyInit__decimal@@Base+0x3bdc>
   1fffc:	lsr	x5, x1, #32
   20000:	lsl	x1, x1, #32
   20004:	adds	x1, x1, x6
   20008:	sub	x5, x5, x7
   2000c:	cinc	x5, x5, cs  // cs = hs, nlast
   20010:	mul	x8, x3, x25
   20014:	subs	x6, x1, x5
   20018:	umulh	x3, x3, x25
   2001c:	cmp	x1, x5
   20020:	lsr	x7, x5, #32
   20024:	lsl	x5, x5, #32
   20028:	sbc	x7, x7, xzr
   2002c:	adds	x5, x6, x5
   20030:	lsr	x1, x3, #32
   20034:	cinc	x7, x7, cs  // cs = hs, nlast
   20038:	sub	x6, x5, x19
   2003c:	cmp	x7, #0x0
   20040:	lsl	x7, x3, #32
   20044:	ccmp	x19, x5, #0x0, eq  // eq = none
   20048:	mul	x10, x4, x25
   2004c:	csel	x5, x6, x5, ls  // ls = plast
   20050:	subs	x6, x8, x3
   20054:	cmp	x8, x3
   20058:	umulh	x4, x4, x25
   2005c:	sbc	x1, x1, xzr
   20060:	adds	x6, x6, x7
   20064:	cinc	x1, x1, cs  // cs = hs, nlast
   20068:	mul	x9, x0, x25
   2006c:	subs	x8, x6, x1
   20070:	lsr	x3, x4, #32
   20074:	cmp	x6, x1
   20078:	lsr	x6, x1, #32
   2007c:	lsl	x1, x1, #32
   20080:	sbc	x6, x6, xzr
   20084:	adds	x1, x8, x1
   20088:	lsl	x11, x4, #32
   2008c:	cinc	x6, x6, cs  // cs = hs, nlast
   20090:	sub	x8, x1, x19
   20094:	cmp	x6, #0x0
   20098:	umulh	x0, x0, x25
   2009c:	ccmp	x19, x1, #0x0, eq  // eq = none
   200a0:	csel	x8, x8, x1, ls  // ls = plast
   200a4:	subs	x7, x10, x4
   200a8:	cmp	x10, x4
   200ac:	lsr	x1, x0, #32
   200b0:	sbc	x3, x3, xzr
   200b4:	adds	x7, x7, x11
   200b8:	cinc	x3, x3, cs  // cs = hs, nlast
   200bc:	lsl	x10, x0, #32
   200c0:	subs	x6, x7, x3
   200c4:	cmp	x7, x3
   200c8:	lsr	x7, x3, #32
   200cc:	lsl	x3, x3, #32
   200d0:	sbc	x7, x7, xzr
   200d4:	adds	x3, x6, x3
   200d8:	cinc	x7, x7, cs  // cs = hs, nlast
   200dc:	sub	x4, x3, x19
   200e0:	cmp	x7, #0x0
   200e4:	ccmp	x19, x3, #0x0, eq  // eq = none
   200e8:	csel	x3, x4, x3, ls  // ls = plast
   200ec:	subs	x4, x9, x0
   200f0:	cmp	x9, x0
   200f4:	sbc	x1, x1, xzr
   200f8:	adds	x4, x4, x10
   200fc:	cinc	x1, x1, cs  // cs = hs, nlast
   20100:	subs	x0, x4, x1
   20104:	cmp	x4, x1
   20108:	lsr	x4, x1, #32
   2010c:	lsl	x1, x1, #32
   20110:	sbc	x4, x4, xzr
   20114:	adds	x1, x0, x1
   20118:	b	1ffac <PyInit__decimal@@Base+0x3d6c>
   2011c:	mov	w0, #0x1                   	// #1
   20120:	ldp	x19, x20, [sp, #16]
   20124:	ldp	x21, x22, [sp, #32]
   20128:	ldp	x23, x24, [sp, #48]
   2012c:	ldp	x25, x26, [sp, #64]
   20130:	ldr	x27, [sp, #80]
   20134:	ldp	x29, x30, [sp], #96
   20138:	ret
   2013c:	lsr	x5, x1, #24
   20140:	lsl	x1, x1, #40
   20144:	adds	x1, x1, x6
   20148:	sub	x5, x5, x7
   2014c:	cinc	x5, x5, cs  // cs = hs, nlast
   20150:	mul	x8, x3, x25
   20154:	subs	x7, x1, x5
   20158:	umulh	x3, x3, x25
   2015c:	cmp	x1, x5
   20160:	lsr	x1, x5, #24
   20164:	lsl	x5, x5, #40
   20168:	sbc	x1, x1, xzr
   2016c:	adds	x7, x7, x5
   20170:	lsl	x10, x3, #40
   20174:	cinc	x1, x1, cs  // cs = hs, nlast
   20178:	lsr	x6, x3, #24
   2017c:	subs	x5, x7, x1
   20180:	mul	x12, x4, x25
   20184:	cmp	x7, x1
   20188:	lsr	x7, x1, #24
   2018c:	lsl	x1, x1, #40
   20190:	sbc	x7, x7, xzr
   20194:	adds	x1, x5, x1
   20198:	umulh	x4, x4, x25
   2019c:	cinc	x7, x7, cs  // cs = hs, nlast
   201a0:	sub	x5, x1, x19
   201a4:	cmp	x7, #0x0
   201a8:	mul	x9, x0, x25
   201ac:	ccmp	x19, x1, #0x0, eq  // eq = none
   201b0:	lsr	x7, x4, #24
   201b4:	csel	x5, x5, x1, ls  // ls = plast
   201b8:	subs	x1, x8, x3
   201bc:	cmp	x8, x3
   201c0:	lsl	x13, x4, #40
   201c4:	sbc	x6, x6, xzr
   201c8:	adds	x1, x1, x10
   201cc:	cinc	x6, x6, cs  // cs = hs, nlast
   201d0:	umulh	x0, x0, x25
   201d4:	subs	x10, x1, x6
   201d8:	cmp	x1, x6
   201dc:	lsr	x1, x6, #24
   201e0:	lsl	x6, x6, #40
   201e4:	sbc	x1, x1, xzr
   201e8:	adds	x10, x10, x6
   201ec:	lsl	x11, x0, #40
   201f0:	cinc	x1, x1, cs  // cs = hs, nlast
   201f4:	lsr	x6, x0, #24
   201f8:	subs	x8, x10, x1
   201fc:	cmp	x10, x1
   20200:	lsr	x10, x1, #24
   20204:	lsl	x1, x1, #40
   20208:	sbc	x10, x10, xzr
   2020c:	adds	x1, x8, x1
   20210:	cinc	x10, x10, cs  // cs = hs, nlast
   20214:	sub	x8, x1, x19
   20218:	cmp	x10, #0x0
   2021c:	ccmp	x19, x1, #0x0, eq  // eq = none
   20220:	csel	x8, x8, x1, ls  // ls = plast
   20224:	subs	x3, x12, x4
   20228:	cmp	x12, x4
   2022c:	sbc	x7, x7, xzr
   20230:	adds	x3, x3, x13
   20234:	cinc	x7, x7, cs  // cs = hs, nlast
   20238:	subs	x1, x3, x7
   2023c:	cmp	x3, x7
   20240:	lsr	x3, x7, #24
   20244:	lsl	x7, x7, #40
   20248:	sbc	x3, x3, xzr
   2024c:	adds	x7, x1, x7
   20250:	cinc	x3, x3, cs  // cs = hs, nlast
   20254:	subs	x1, x7, x3
   20258:	cmp	x7, x3
   2025c:	lsr	x4, x3, #24
   20260:	lsl	x3, x3, #40
   20264:	sbc	x4, x4, xzr
   20268:	adds	x3, x1, x3
   2026c:	cinc	x4, x4, cs  // cs = hs, nlast
   20270:	sub	x1, x3, x19
   20274:	cmp	x4, #0x0
   20278:	ccmp	x19, x3, #0x0, eq  // eq = none
   2027c:	csel	x3, x1, x3, ls  // ls = plast
   20280:	subs	x1, x9, x0
   20284:	cmp	x9, x0
   20288:	sbc	x6, x6, xzr
   2028c:	adds	x0, x1, x11
   20290:	cinc	x6, x6, cs  // cs = hs, nlast
   20294:	subs	x1, x0, x6
   20298:	cmp	x0, x6
   2029c:	lsr	x0, x6, #24
   202a0:	lsl	x6, x6, #40
   202a4:	sbc	x0, x0, xzr
   202a8:	adds	x6, x1, x6
   202ac:	cinc	x0, x0, cs  // cs = hs, nlast
   202b0:	subs	x1, x6, x0
   202b4:	cmp	x6, x0
   202b8:	lsr	x4, x0, #24
   202bc:	lsl	x0, x0, #40
   202c0:	b	1ffa4 <PyInit__decimal@@Base+0x3d64>
   202c4:	adrp	x21, 21000 <PyInit__decimal@@Base+0x4dc0>
   202c8:	adrp	x26, 21000 <PyInit__decimal@@Base+0x4dc0>
   202cc:	add	x21, x21, #0x9c0
   202d0:	add	x26, x26, #0x948
   202d4:	b	1fb2c <PyInit__decimal@@Base+0x38ec>
   202d8:	mov	w2, w23
   202dc:	mov	x0, x20
   202e0:	mov	x1, #0x1                   	// #1
   202e4:	blr	x21
   202e8:	cbz	w0, 1fd00 <PyInit__decimal@@Base+0x3ac0>
   202ec:	and	x27, x19, #0x400000000
   202f0:	and	x26, x19, #0x100000000
   202f4:	mov	x24, #0xfffffffffffffffe    	// #-2
   202f8:	b	1fe14 <PyInit__decimal@@Base+0x3bd4>
   202fc:	nop
   20300:	stp	x29, x30, [sp, #-96]!
   20304:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   20308:	mov	x29, sp
   2030c:	stp	x23, x24, [sp, #48]
   20310:	mov	w23, w2
   20314:	add	x2, x3, #0x460
   20318:	stp	x19, x20, [sp, #16]
   2031c:	mov	x20, x0
   20320:	ldr	x19, [x2, w23, sxtw #3]
   20324:	stp	x21, x22, [sp, #32]
   20328:	mov	x22, x1
   2032c:	stp	x25, x26, [sp, #64]
   20330:	subs	x2, x19, #0x2
   20334:	str	x27, [sp, #80]
   20338:	b.eq	20570 <PyInit__decimal@@Base+0x4330>  // b.none
   2033c:	and	x5, x19, #0x100000000
   20340:	and	x6, x19, #0x400000000
   20344:	mov	x3, x1
   20348:	mov	x21, #0x1                   	// #1
   2034c:	b	20438 <PyInit__decimal@@Base+0x41f8>
   20350:	mul	x0, x21, x3
   20354:	umulh	x3, x21, x3
   20358:	subs	x8, x0, x3
   2035c:	cmp	x0, x3
   20360:	cset	x9, cc  // cc = lo, ul, last
   20364:	cbnz	x5, 2049c <PyInit__decimal@@Base+0x425c>
   20368:	cbz	x6, 2050c <PyInit__decimal@@Base+0x42cc>
   2036c:	lsr	x7, x3, #30
   20370:	lsl	x3, x3, #34
   20374:	adds	x3, x3, x8
   20378:	sub	x7, x7, x9
   2037c:	cinc	x7, x7, cs  // cs = hs, nlast
   20380:	sub	x8, x1, x4
   20384:	subs	x9, x3, x7
   20388:	cmp	x3, x7
   2038c:	lsr	x0, x7, #30
   20390:	lsl	x7, x7, #34
   20394:	sbc	x0, x0, xzr
   20398:	adds	x7, x9, x7
   2039c:	cinc	x0, x0, cs  // cs = hs, nlast
   203a0:	subs	x21, x7, x0
   203a4:	cmp	x7, x0
   203a8:	lsr	x7, x0, #30
   203ac:	lsl	x0, x0, #34
   203b0:	sbc	x7, x7, xzr
   203b4:	adds	x0, x21, x0
   203b8:	cinc	x7, x7, cs  // cs = hs, nlast
   203bc:	sub	x3, x0, x19
   203c0:	cmp	x7, #0x0
   203c4:	ccmp	x19, x0, #0x0, eq  // eq = none
   203c8:	csel	x21, x3, x0, ls  // ls = plast
   203cc:	cmp	x8, x1
   203d0:	lsl	x0, x4, #34
   203d4:	cset	x3, hi  // hi = pmore
   203d8:	lsr	x1, x4, #30
   203dc:	sub	x1, x1, x3
   203e0:	adds	x4, x8, x0
   203e4:	cinc	x1, x1, cs  // cs = hs, nlast
   203e8:	subs	x3, x4, x1
   203ec:	cmp	x4, x1
   203f0:	lsr	x0, x1, #30
   203f4:	lsl	x1, x1, #34
   203f8:	sbc	x0, x0, xzr
   203fc:	adds	x1, x3, x1
   20400:	cinc	x0, x0, cs  // cs = hs, nlast
   20404:	subs	x3, x1, x0
   20408:	cmp	x1, x0
   2040c:	lsr	x1, x0, #30
   20410:	lsl	x0, x0, #34
   20414:	sbc	x1, x1, xzr
   20418:	adds	x0, x3, x0
   2041c:	cinc	x1, x1, cs  // cs = hs, nlast
   20420:	sub	x4, x0, x19
   20424:	cmp	x1, #0x0
   20428:	lsr	x2, x2, #1
   2042c:	ccmp	x19, x0, #0x0, eq  // eq = none
   20430:	csel	x3, x4, x0, ls  // ls = plast
   20434:	cbz	x2, 20578 <PyInit__decimal@@Base+0x4338>
   20438:	mul	x1, x3, x3
   2043c:	umulh	x4, x3, x3
   20440:	tbnz	w2, #0, 20350 <PyInit__decimal@@Base+0x4110>
   20444:	cbnz	x5, 204dc <PyInit__decimal@@Base+0x429c>
   20448:	sub	x8, x1, x4
   2044c:	cbnz	x6, 203cc <PyInit__decimal@@Base+0x418c>
   20450:	cmp	x8, x1
   20454:	lsr	x1, x4, #24
   20458:	cset	x0, hi  // hi = pmore
   2045c:	lsl	x4, x4, #40
   20460:	adds	x4, x8, x4
   20464:	sub	x1, x1, x0
   20468:	cinc	x1, x1, cs  // cs = hs, nlast
   2046c:	subs	x3, x4, x1
   20470:	cmp	x4, x1
   20474:	lsr	x0, x1, #24
   20478:	lsl	x1, x1, #40
   2047c:	sbc	x0, x0, xzr
   20480:	adds	x1, x3, x1
   20484:	cinc	x0, x0, cs  // cs = hs, nlast
   20488:	subs	x3, x1, x0
   2048c:	cmp	x1, x0
   20490:	lsr	x1, x0, #24
   20494:	lsl	x0, x0, #40
   20498:	b	20414 <PyInit__decimal@@Base+0x41d4>
   2049c:	lsr	x0, x3, #32
   204a0:	lsl	x3, x3, #32
   204a4:	adds	x3, x3, x8
   204a8:	sub	x0, x0, x9
   204ac:	cinc	x0, x0, cs  // cs = hs, nlast
   204b0:	subs	x21, x3, x0
   204b4:	cmp	x3, x0
   204b8:	lsr	x7, x0, #32
   204bc:	lsl	x0, x0, #32
   204c0:	sbc	x7, x7, xzr
   204c4:	adds	x0, x21, x0
   204c8:	cinc	x7, x7, cs  // cs = hs, nlast
   204cc:	sub	x3, x0, x19
   204d0:	cmp	x7, #0x0
   204d4:	ccmp	x19, x0, #0x0, eq  // eq = none
   204d8:	csel	x21, x3, x0, ls  // ls = plast
   204dc:	subs	x3, x1, x4
   204e0:	lsr	x0, x4, #32
   204e4:	cmp	x1, x4
   204e8:	lsl	x4, x4, #32
   204ec:	sbc	x0, x0, xzr
   204f0:	adds	x4, x3, x4
   204f4:	cinc	x0, x0, cs  // cs = hs, nlast
   204f8:	subs	x3, x4, x0
   204fc:	cmp	x4, x0
   20500:	lsr	x1, x0, #32
   20504:	lsl	x0, x0, #32
   20508:	b	20414 <PyInit__decimal@@Base+0x41d4>
   2050c:	lsr	x7, x3, #24
   20510:	lsl	x3, x3, #40
   20514:	adds	x3, x3, x8
   20518:	sub	x7, x7, x9
   2051c:	cinc	x7, x7, cs  // cs = hs, nlast
   20520:	sub	x8, x1, x4
   20524:	subs	x9, x3, x7
   20528:	cmp	x3, x7
   2052c:	lsr	x0, x7, #24
   20530:	lsl	x7, x7, #40
   20534:	sbc	x0, x0, xzr
   20538:	adds	x7, x9, x7
   2053c:	cinc	x0, x0, cs  // cs = hs, nlast
   20540:	subs	x21, x7, x0
   20544:	cmp	x7, x0
   20548:	lsr	x7, x0, #24
   2054c:	lsl	x0, x0, #40
   20550:	sbc	x7, x7, xzr
   20554:	adds	x0, x21, x0
   20558:	cinc	x7, x7, cs  // cs = hs, nlast
   2055c:	sub	x3, x0, x19
   20560:	cmp	x7, #0x0
   20564:	ccmp	x19, x0, #0x0, eq  // eq = none
   20568:	csel	x21, x3, x0, ls  // ls = plast
   2056c:	b	20450 <PyInit__decimal@@Base+0x4210>
   20570:	mov	x21, #0x1                   	// #1
   20574:	nop
   20578:	cbnz	x22, 20730 <PyInit__decimal@@Base+0x44f0>
   2057c:	mov	w2, w23
   20580:	mov	x0, x20
   20584:	mov	x1, #0x0                   	// #0
   20588:	bl	21a38 <PyInit__decimal@@Base+0x57f8>
   2058c:	cbz	w0, 20d20 <PyInit__decimal@@Base+0x4ae0>
   20590:	adrp	x27, 22000 <PyInit__decimal@@Base+0x5dc0>
   20594:	add	x27, x27, #0x7d8
   20598:	mov	x26, #0xffffffffffffffff    	// #-1
   2059c:	and	x24, x19, #0x100000000
   205a0:	and	x25, x19, #0x400000000
   205a4:	add	x5, x20, #0x8
   205a8:	mov	x1, #0x0                   	// #0
   205ac:	b	20690 <PyInit__decimal@@Base+0x4450>
   205b0:	cbz	x25, 20a98 <PyInit__decimal@@Base+0x4858>
   205b4:	lsr	x3, x4, #30
   205b8:	lsl	x4, x4, #34
   205bc:	adds	x4, x4, x6
   205c0:	sub	x3, x3, x7
   205c4:	cinc	x3, x3, cs  // cs = hs, nlast
   205c8:	mul	x7, x0, x0
   205cc:	subs	x6, x4, x3
   205d0:	umulh	x0, x0, x0
   205d4:	cmp	x4, x3
   205d8:	lsr	x2, x3, #30
   205dc:	lsl	x3, x3, #34
   205e0:	sbc	x2, x2, xzr
   205e4:	adds	x6, x6, x3
   205e8:	lsl	x8, x0, #34
   205ec:	cinc	x2, x2, cs  // cs = hs, nlast
   205f0:	lsr	x3, x0, #30
   205f4:	subs	x4, x6, x2
   205f8:	cmp	x6, x2
   205fc:	lsr	x6, x2, #30
   20600:	lsl	x2, x2, #34
   20604:	sbc	x6, x6, xzr
   20608:	adds	x2, x4, x2
   2060c:	cinc	x6, x6, cs  // cs = hs, nlast
   20610:	sub	x4, x2, x19
   20614:	cmp	x6, #0x0
   20618:	ccmp	x19, x2, #0x0, eq  // eq = none
   2061c:	csel	x4, x4, x2, ls  // ls = plast
   20620:	subs	x2, x7, x0
   20624:	cmp	x7, x0
   20628:	sbc	x3, x3, xzr
   2062c:	adds	x0, x2, x8
   20630:	cinc	x3, x3, cs  // cs = hs, nlast
   20634:	subs	x2, x0, x3
   20638:	cmp	x0, x3
   2063c:	lsr	x0, x3, #30
   20640:	lsl	x3, x3, #34
   20644:	sbc	x0, x0, xzr
   20648:	adds	x3, x2, x3
   2064c:	cinc	x0, x0, cs  // cs = hs, nlast
   20650:	subs	x2, x3, x0
   20654:	cmp	x3, x0
   20658:	lsr	x3, x0, #30
   2065c:	lsl	x0, x0, #34
   20660:	sbc	x3, x3, xzr
   20664:	adds	x2, x2, x0
   20668:	cinc	x3, x3, cs  // cs = hs, nlast
   2066c:	sub	x0, x2, x19
   20670:	cmp	x3, #0x0
   20674:	str	x4, [x20, x1, lsl #3]
   20678:	ccmp	x19, x2, #0x0, eq  // eq = none
   2067c:	csel	x0, x0, x2, ls  // ls = plast
   20680:	str	x0, [x5, x1, lsl #3]
   20684:	add	x1, x1, #0x2
   20688:	cmp	x1, x26
   2068c:	b.cs	20b48 <PyInit__decimal@@Base+0x4908>  // b.hs, b.nlast
   20690:	ldr	x4, [x20, x1, lsl #3]
   20694:	ldr	x0, [x5, x1, lsl #3]
   20698:	mul	x2, x4, x4
   2069c:	umulh	x4, x4, x4
   206a0:	subs	x6, x2, x4
   206a4:	cmp	x2, x4
   206a8:	cset	x7, cc  // cc = lo, ul, last
   206ac:	cbz	x24, 205b0 <PyInit__decimal@@Base+0x4370>
   206b0:	lsr	x2, x4, #32
   206b4:	lsl	x4, x4, #32
   206b8:	adds	x4, x4, x6
   206bc:	sub	x2, x2, x7
   206c0:	cinc	x2, x2, cs  // cs = hs, nlast
   206c4:	mul	x7, x0, x0
   206c8:	subs	x3, x4, x2
   206cc:	umulh	x0, x0, x0
   206d0:	cmp	x4, x2
   206d4:	lsr	x6, x2, #32
   206d8:	lsl	x2, x2, #32
   206dc:	sbc	x6, x6, xzr
   206e0:	adds	x4, x3, x2
   206e4:	lsr	x2, x0, #32
   206e8:	cinc	x6, x6, cs  // cs = hs, nlast
   206ec:	sub	x3, x4, x19
   206f0:	cmp	x6, #0x0
   206f4:	lsl	x6, x0, #32
   206f8:	ccmp	x19, x4, #0x0, eq  // eq = none
   206fc:	csel	x4, x3, x4, ls  // ls = plast
   20700:	subs	x3, x7, x0
   20704:	cmp	x7, x0
   20708:	sbc	x2, x2, xzr
   2070c:	adds	x3, x3, x6
   20710:	cinc	x2, x2, cs  // cs = hs, nlast
   20714:	subs	x0, x3, x2
   20718:	cmp	x3, x2
   2071c:	lsr	x3, x2, #32
   20720:	lsl	x2, x2, #32
   20724:	sbc	x3, x3, xzr
   20728:	adds	x2, x0, x2
   2072c:	b	20668 <PyInit__decimal@@Base+0x4428>
   20730:	sub	x26, x22, #0x1
   20734:	tst	x22, x26
   20738:	b.ne	20d0c <PyInit__decimal@@Base+0x4acc>  // b.any
   2073c:	cmp	x22, #0x1, lsl #12
   20740:	b.hi	20d4c <PyInit__decimal@@Base+0x4b0c>  // b.pmore
   20744:	adrp	x27, 21000 <PyInit__decimal@@Base+0x4dc0>
   20748:	adrp	x3, 21000 <PyInit__decimal@@Base+0x4dc0>
   2074c:	add	x27, x27, #0x9c0
   20750:	add	x3, x3, #0x948
   20754:	mov	w2, w23
   20758:	mov	x1, x22
   2075c:	mov	x0, x20
   20760:	blr	x3
   20764:	cbz	w0, 20d20 <PyInit__decimal@@Base+0x4ae0>
   20768:	cbnz	x26, 2059c <PyInit__decimal@@Base+0x435c>
   2076c:	mov	w2, w23
   20770:	mov	x0, x20
   20774:	mov	x1, #0x1                   	// #1
   20778:	blr	x27
   2077c:	cbz	w0, 20d20 <PyInit__decimal@@Base+0x4ae0>
   20780:	and	x25, x19, #0x400000000
   20784:	and	x24, x19, #0x100000000
   20788:	mov	x22, #0xfffffffffffffffe    	// #-2
   2078c:	nop
   20790:	mov	x5, #0x0                   	// #0
   20794:	b	20954 <PyInit__decimal@@Base+0x4714>
   20798:	cbz	x25, 20b84 <PyInit__decimal@@Base+0x4944>
   2079c:	lsr	x4, x1, #30
   207a0:	lsl	x1, x1, #34
   207a4:	adds	x1, x1, x7
   207a8:	sub	x4, x4, x8
   207ac:	cinc	x4, x4, cs  // cs = hs, nlast
   207b0:	mul	x10, x3, x21
   207b4:	subs	x7, x1, x4
   207b8:	umulh	x3, x3, x21
   207bc:	cmp	x1, x4
   207c0:	lsr	x6, x4, #30
   207c4:	lsl	x4, x4, #34
   207c8:	sbc	x6, x6, xzr
   207cc:	adds	x4, x7, x4
   207d0:	lsr	x1, x3, #30
   207d4:	cinc	x6, x6, cs  // cs = hs, nlast
   207d8:	lsl	x13, x3, #34
   207dc:	subs	x7, x4, x6
   207e0:	mul	x11, x2, x21
   207e4:	cmp	x4, x6
   207e8:	lsr	x8, x6, #30
   207ec:	lsl	x6, x6, #34
   207f0:	sbc	x8, x8, xzr
   207f4:	adds	x6, x7, x6
   207f8:	umulh	x2, x2, x21
   207fc:	cinc	x8, x8, cs  // cs = hs, nlast
   20800:	sub	x7, x6, x19
   20804:	cmp	x8, #0x0
   20808:	mul	x9, x0, x21
   2080c:	ccmp	x19, x6, #0x0, eq  // eq = none
   20810:	lsr	x8, x2, #30
   20814:	csel	x7, x7, x6, ls  // ls = plast
   20818:	subs	x4, x10, x3
   2081c:	cmp	x10, x3
   20820:	lsl	x12, x2, #34
   20824:	sbc	x1, x1, xzr
   20828:	adds	x4, x4, x13
   2082c:	cinc	x1, x1, cs  // cs = hs, nlast
   20830:	umulh	x0, x0, x21
   20834:	subs	x3, x4, x1
   20838:	cmp	x4, x1
   2083c:	lsr	x4, x1, #30
   20840:	lsl	x1, x1, #34
   20844:	sbc	x4, x4, xzr
   20848:	adds	x3, x3, x1
   2084c:	lsl	x10, x0, #34
   20850:	cinc	x4, x4, cs  // cs = hs, nlast
   20854:	lsr	x1, x0, #30
   20858:	subs	x6, x3, x4
   2085c:	cmp	x3, x4
   20860:	lsr	x3, x4, #30
   20864:	lsl	x4, x4, #34
   20868:	sbc	x3, x3, xzr
   2086c:	adds	x4, x6, x4
   20870:	cinc	x3, x3, cs  // cs = hs, nlast
   20874:	sub	x6, x4, x19
   20878:	cmp	x3, #0x0
   2087c:	ccmp	x19, x4, #0x0, eq  // eq = none
   20880:	csel	x4, x6, x4, ls  // ls = plast
   20884:	subs	x3, x11, x2
   20888:	cmp	x11, x2
   2088c:	sbc	x8, x8, xzr
   20890:	adds	x2, x3, x12
   20894:	cinc	x8, x8, cs  // cs = hs, nlast
   20898:	subs	x6, x2, x8
   2089c:	cmp	x2, x8
   208a0:	lsl	x3, x8, #34
   208a4:	lsr	x2, x8, #30
   208a8:	sbc	x2, x2, xzr
   208ac:	adds	x6, x6, x3
   208b0:	cinc	x2, x2, cs  // cs = hs, nlast
   208b4:	subs	x3, x6, x2
   208b8:	cmp	x6, x2
   208bc:	lsr	x6, x2, #30
   208c0:	lsl	x2, x2, #34
   208c4:	sbc	x6, x6, xzr
   208c8:	adds	x2, x3, x2
   208cc:	cinc	x6, x6, cs  // cs = hs, nlast
   208d0:	sub	x3, x2, x19
   208d4:	cmp	x6, #0x0
   208d8:	ccmp	x19, x2, #0x0, eq  // eq = none
   208dc:	csel	x3, x3, x2, ls  // ls = plast
   208e0:	subs	x2, x9, x0
   208e4:	cmp	x9, x0
   208e8:	sbc	x1, x1, xzr
   208ec:	adds	x0, x2, x10
   208f0:	cinc	x1, x1, cs  // cs = hs, nlast
   208f4:	subs	x2, x0, x1
   208f8:	cmp	x0, x1
   208fc:	lsr	x0, x1, #30
   20900:	lsl	x1, x1, #34
   20904:	sbc	x0, x0, xzr
   20908:	adds	x1, x2, x1
   2090c:	cinc	x0, x0, cs  // cs = hs, nlast
   20910:	subs	x2, x1, x0
   20914:	cmp	x1, x0
   20918:	lsr	x1, x0, #30
   2091c:	lsl	x0, x0, #34
   20920:	sbc	x1, x1, xzr
   20924:	adds	x2, x2, x0
   20928:	cinc	x1, x1, cs  // cs = hs, nlast
   2092c:	sub	x0, x2, x19
   20930:	cmp	x1, #0x0
   20934:	stp	x7, x4, [x20]
   20938:	ccmp	x19, x2, #0x0, eq  // eq = none
   2093c:	csel	x0, x0, x2, ls  // ls = plast
   20940:	stp	x3, x0, [x20, #16]
   20944:	add	x5, x5, #0x4
   20948:	cmp	x5, x22
   2094c:	add	x20, x20, #0x20
   20950:	b.cs	20b64 <PyInit__decimal@@Base+0x4924>  // b.hs, b.nlast
   20954:	ldp	x1, x3, [x20]
   20958:	ldr	x2, [x20, #16]
   2095c:	mul	x0, x21, x1
   20960:	umulh	x1, x21, x1
   20964:	subs	x7, x0, x1
   20968:	cmp	x0, x1
   2096c:	cset	x8, cc  // cc = lo, ul, last
   20970:	ldr	x0, [x20, #24]
   20974:	cbz	x24, 20798 <PyInit__decimal@@Base+0x4558>
   20978:	lsr	x4, x1, #32
   2097c:	lsl	x1, x1, #32
   20980:	adds	x1, x1, x7
   20984:	sub	x4, x4, x8
   20988:	cinc	x4, x4, cs  // cs = hs, nlast
   2098c:	mul	x8, x3, x21
   20990:	subs	x7, x1, x4
   20994:	umulh	x3, x3, x21
   20998:	cmp	x1, x4
   2099c:	lsr	x1, x4, #32
   209a0:	lsl	x4, x4, #32
   209a4:	sbc	x1, x1, xzr
   209a8:	adds	x6, x7, x4
   209ac:	lsl	x9, x3, #32
   209b0:	cinc	x1, x1, cs  // cs = hs, nlast
   209b4:	sub	x7, x6, x19
   209b8:	cmp	x1, #0x0
   209bc:	lsr	x4, x3, #32
   209c0:	ccmp	x19, x6, #0x0, eq  // eq = none
   209c4:	mul	x10, x2, x21
   209c8:	csel	x7, x7, x6, ls  // ls = plast
   209cc:	subs	x1, x8, x3
   209d0:	cmp	x8, x3
   209d4:	umulh	x2, x2, x21
   209d8:	sbc	x4, x4, xzr
   209dc:	adds	x1, x1, x9
   209e0:	cinc	x4, x4, cs  // cs = hs, nlast
   209e4:	mul	x9, x0, x21
   209e8:	subs	x6, x1, x4
   209ec:	lsr	x3, x2, #32
   209f0:	cmp	x1, x4
   209f4:	lsr	x1, x4, #32
   209f8:	lsl	x4, x4, #32
   209fc:	sbc	x1, x1, xzr
   20a00:	adds	x4, x6, x4
   20a04:	lsl	x11, x2, #32
   20a08:	cinc	x1, x1, cs  // cs = hs, nlast
   20a0c:	sub	x6, x4, x19
   20a10:	cmp	x1, #0x0
   20a14:	umulh	x0, x0, x21
   20a18:	ccmp	x19, x4, #0x0, eq  // eq = none
   20a1c:	csel	x4, x6, x4, ls  // ls = plast
   20a20:	subs	x8, x10, x2
   20a24:	cmp	x10, x2
   20a28:	lsr	x2, x0, #32
   20a2c:	sbc	x3, x3, xzr
   20a30:	adds	x8, x8, x11
   20a34:	cinc	x3, x3, cs  // cs = hs, nlast
   20a38:	lsl	x10, x0, #32
   20a3c:	subs	x6, x8, x3
   20a40:	cmp	x8, x3
   20a44:	lsr	x8, x3, #32
   20a48:	lsl	x3, x3, #32
   20a4c:	sbc	x8, x8, xzr
   20a50:	adds	x3, x6, x3
   20a54:	cinc	x8, x8, cs  // cs = hs, nlast
   20a58:	sub	x1, x3, x19
   20a5c:	cmp	x8, #0x0
   20a60:	ccmp	x19, x3, #0x0, eq  // eq = none
   20a64:	csel	x3, x1, x3, ls  // ls = plast
   20a68:	subs	x1, x9, x0
   20a6c:	cmp	x9, x0
   20a70:	sbc	x2, x2, xzr
   20a74:	adds	x1, x1, x10
   20a78:	cinc	x2, x2, cs  // cs = hs, nlast
   20a7c:	subs	x0, x1, x2
   20a80:	cmp	x1, x2
   20a84:	lsr	x1, x2, #32
   20a88:	lsl	x2, x2, #32
   20a8c:	sbc	x1, x1, xzr
   20a90:	adds	x2, x0, x2
   20a94:	b	20928 <PyInit__decimal@@Base+0x46e8>
   20a98:	lsr	x3, x4, #24
   20a9c:	lsl	x4, x4, #40
   20aa0:	adds	x4, x4, x6
   20aa4:	sub	x3, x3, x7
   20aa8:	cinc	x3, x3, cs  // cs = hs, nlast
   20aac:	mul	x7, x0, x0
   20ab0:	subs	x6, x4, x3
   20ab4:	umulh	x0, x0, x0
   20ab8:	cmp	x4, x3
   20abc:	lsr	x2, x3, #24
   20ac0:	lsl	x3, x3, #40
   20ac4:	sbc	x2, x2, xzr
   20ac8:	adds	x6, x6, x3
   20acc:	lsl	x8, x0, #40
   20ad0:	cinc	x2, x2, cs  // cs = hs, nlast
   20ad4:	lsr	x3, x0, #24
   20ad8:	subs	x4, x6, x2
   20adc:	cmp	x6, x2
   20ae0:	lsr	x6, x2, #24
   20ae4:	lsl	x2, x2, #40
   20ae8:	sbc	x6, x6, xzr
   20aec:	adds	x2, x4, x2
   20af0:	cinc	x6, x6, cs  // cs = hs, nlast
   20af4:	sub	x4, x2, x19
   20af8:	cmp	x6, #0x0
   20afc:	ccmp	x19, x2, #0x0, eq  // eq = none
   20b00:	csel	x4, x4, x2, ls  // ls = plast
   20b04:	subs	x2, x7, x0
   20b08:	cmp	x7, x0
   20b0c:	sbc	x3, x3, xzr
   20b10:	adds	x0, x2, x8
   20b14:	cinc	x3, x3, cs  // cs = hs, nlast
   20b18:	subs	x2, x0, x3
   20b1c:	cmp	x0, x3
   20b20:	lsr	x0, x3, #24
   20b24:	lsl	x3, x3, #40
   20b28:	sbc	x0, x0, xzr
   20b2c:	adds	x3, x2, x3
   20b30:	cinc	x0, x0, cs  // cs = hs, nlast
   20b34:	subs	x2, x3, x0
   20b38:	cmp	x3, x0
   20b3c:	lsr	x3, x0, #24
   20b40:	lsl	x0, x0, #40
   20b44:	b	20660 <PyInit__decimal@@Base+0x4420>
   20b48:	mov	w2, w23
   20b4c:	mov	x1, x22
   20b50:	mov	x0, x20
   20b54:	blr	x27
   20b58:	cbz	w0, 20d20 <PyInit__decimal@@Base+0x4ae0>
   20b5c:	subs	x22, x22, #0x3
   20b60:	b.ne	20790 <PyInit__decimal@@Base+0x4550>  // b.any
   20b64:	mov	w0, #0x1                   	// #1
   20b68:	ldp	x19, x20, [sp, #16]
   20b6c:	ldp	x21, x22, [sp, #32]
   20b70:	ldp	x23, x24, [sp, #48]
   20b74:	ldp	x25, x26, [sp, #64]
   20b78:	ldr	x27, [sp, #80]
   20b7c:	ldp	x29, x30, [sp], #96
   20b80:	ret
   20b84:	lsr	x6, x1, #24
   20b88:	lsl	x1, x1, #40
   20b8c:	adds	x1, x1, x7
   20b90:	sub	x6, x6, x8
   20b94:	cinc	x6, x6, cs  // cs = hs, nlast
   20b98:	mul	x10, x3, x21
   20b9c:	subs	x7, x1, x6
   20ba0:	umulh	x3, x3, x21
   20ba4:	cmp	x1, x6
   20ba8:	lsr	x4, x6, #24
   20bac:	lsl	x6, x6, #40
   20bb0:	sbc	x4, x4, xzr
   20bb4:	adds	x6, x7, x6
   20bb8:	lsr	x1, x3, #24
   20bbc:	cinc	x4, x4, cs  // cs = hs, nlast
   20bc0:	lsl	x13, x3, #40
   20bc4:	subs	x7, x6, x4
   20bc8:	mul	x11, x2, x21
   20bcc:	cmp	x6, x4
   20bd0:	lsr	x6, x4, #24
   20bd4:	lsl	x4, x4, #40
   20bd8:	sbc	x6, x6, xzr
   20bdc:	adds	x4, x7, x4
   20be0:	umulh	x2, x2, x21
   20be4:	cinc	x6, x6, cs  // cs = hs, nlast
   20be8:	sub	x7, x4, x19
   20bec:	cmp	x6, #0x0
   20bf0:	mul	x9, x0, x21
   20bf4:	ccmp	x19, x4, #0x0, eq  // eq = none
   20bf8:	lsr	x8, x2, #24
   20bfc:	csel	x7, x7, x4, ls  // ls = plast
   20c00:	subs	x4, x10, x3
   20c04:	cmp	x10, x3
   20c08:	lsl	x12, x2, #40
   20c0c:	sbc	x1, x1, xzr
   20c10:	adds	x4, x4, x13
   20c14:	cinc	x1, x1, cs  // cs = hs, nlast
   20c18:	umulh	x0, x0, x21
   20c1c:	subs	x3, x4, x1
   20c20:	cmp	x4, x1
   20c24:	lsr	x6, x1, #24
   20c28:	lsl	x1, x1, #40
   20c2c:	sbc	x6, x6, xzr
   20c30:	adds	x3, x3, x1
   20c34:	lsl	x10, x0, #40
   20c38:	cinc	x6, x6, cs  // cs = hs, nlast
   20c3c:	lsr	x1, x0, #24
   20c40:	subs	x4, x3, x6
   20c44:	cmp	x3, x6
   20c48:	lsr	x3, x6, #24
   20c4c:	lsl	x6, x6, #40
   20c50:	sbc	x3, x3, xzr
   20c54:	adds	x6, x4, x6
   20c58:	cinc	x3, x3, cs  // cs = hs, nlast
   20c5c:	sub	x4, x6, x19
   20c60:	cmp	x3, #0x0
   20c64:	ccmp	x19, x6, #0x0, eq  // eq = none
   20c68:	csel	x4, x4, x6, ls  // ls = plast
   20c6c:	subs	x3, x11, x2
   20c70:	cmp	x11, x2
   20c74:	sbc	x8, x8, xzr
   20c78:	adds	x2, x3, x12
   20c7c:	cinc	x8, x8, cs  // cs = hs, nlast
   20c80:	subs	x6, x2, x8
   20c84:	cmp	x2, x8
   20c88:	lsl	x3, x8, #40
   20c8c:	lsr	x2, x8, #24
   20c90:	sbc	x2, x2, xzr
   20c94:	adds	x6, x6, x3
   20c98:	cinc	x2, x2, cs  // cs = hs, nlast
   20c9c:	subs	x3, x6, x2
   20ca0:	cmp	x6, x2
   20ca4:	lsr	x6, x2, #24
   20ca8:	lsl	x2, x2, #40
   20cac:	sbc	x6, x6, xzr
   20cb0:	adds	x2, x3, x2
   20cb4:	cinc	x6, x6, cs  // cs = hs, nlast
   20cb8:	sub	x3, x2, x19
   20cbc:	cmp	x6, #0x0
   20cc0:	ccmp	x19, x2, #0x0, eq  // eq = none
   20cc4:	csel	x3, x3, x2, ls  // ls = plast
   20cc8:	subs	x2, x9, x0
   20ccc:	cmp	x9, x0
   20cd0:	sbc	x1, x1, xzr
   20cd4:	adds	x0, x2, x10
   20cd8:	cinc	x1, x1, cs  // cs = hs, nlast
   20cdc:	subs	x2, x0, x1
   20ce0:	cmp	x0, x1
   20ce4:	lsr	x0, x1, #24
   20ce8:	lsl	x1, x1, #40
   20cec:	sbc	x0, x0, xzr
   20cf0:	adds	x1, x2, x1
   20cf4:	cinc	x0, x0, cs  // cs = hs, nlast
   20cf8:	subs	x2, x1, x0
   20cfc:	cmp	x1, x0
   20d00:	lsr	x1, x0, #24
   20d04:	lsl	x0, x0, #40
   20d08:	b	20920 <PyInit__decimal@@Base+0x46e0>
   20d0c:	mov	w2, w23
   20d10:	mov	x1, x22
   20d14:	mov	x0, x20
   20d18:	bl	21a38 <PyInit__decimal@@Base+0x57f8>
   20d1c:	cbnz	w0, 20d40 <PyInit__decimal@@Base+0x4b00>
   20d20:	mov	w0, #0x0                   	// #0
   20d24:	ldp	x19, x20, [sp, #16]
   20d28:	ldp	x21, x22, [sp, #32]
   20d2c:	ldp	x23, x24, [sp, #48]
   20d30:	ldp	x25, x26, [sp, #64]
   20d34:	ldr	x27, [sp, #80]
   20d38:	ldp	x29, x30, [sp], #96
   20d3c:	ret
   20d40:	adrp	x27, 22000 <PyInit__decimal@@Base+0x5dc0>
   20d44:	add	x27, x27, #0x7d8
   20d48:	b	2059c <PyInit__decimal@@Base+0x435c>
   20d4c:	adrp	x27, 3f000 <PyInit__decimal@@Base+0x22dc0>
   20d50:	adrp	x3, 3f000 <PyInit__decimal@@Base+0x22dc0>
   20d54:	add	x27, x27, #0xb98
   20d58:	add	x3, x3, #0x150
   20d5c:	b	20754 <PyInit__decimal@@Base+0x4514>
   20d60:	stp	x29, x30, [sp, #-224]!
   20d64:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   20d68:	mov	x29, sp
   20d6c:	stp	x1, x2, [sp, #136]
   20d70:	ldr	x1, [x4, #1120]
   20d74:	str	x1, [sp, #128]
   20d78:	str	x3, [sp, #152]
   20d7c:	cbz	x3, 211ac <PyInit__decimal@@Base+0x4f6c>
   20d80:	stp	x23, x24, [sp, #48]
   20d84:	mov	x23, x0
   20d88:	add	x0, x4, #0x460
   20d8c:	stp	x25, x26, [sp, #64]
   20d90:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   20d94:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   20d98:	stp	x27, x28, [sp, #80]
   20d9c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   20da0:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   20da4:	ldp	x27, x26, [x0, #8]
   20da8:	stp	x21, x22, [sp, #32]
   20dac:	mov	x21, #0x89e80000            	// #2313682944
   20db0:	mov	x25, #0x0                   	// #0
   20db4:	mov	x24, #0x0                   	// #0
   20db8:	movk	x21, #0x2304, lsl #32
   20dbc:	mov	x22, #0x0                   	// #0
   20dc0:	movk	x21, #0x8ac7, lsl #48
   20dc4:	stp	x19, x20, [sp, #16]
   20dc8:	and	x0, x27, #0x100000000
   20dcc:	str	x0, [sp, #192]
   20dd0:	mov	x20, #0x0                   	// #0
   20dd4:	ldr	x0, [x4, #1080]
   20dd8:	str	x0, [sp, #160]
   20ddc:	and	x0, x27, #0x400000000
   20de0:	str	x0, [sp, #208]
   20de4:	ldr	x0, [x3, #1072]
   20de8:	str	x0, [sp, #168]
   20dec:	and	x0, x26, #0x100000000
   20df0:	str	x0, [sp, #200]
   20df4:	ldr	x0, [x2, #1064]
   20df8:	str	x0, [sp, #176]
   20dfc:	and	x0, x26, #0x400000000
   20e00:	str	x0, [sp, #216]
   20e04:	ldr	x0, [x1, #1056]
   20e08:	str	x0, [sp, #184]
   20e0c:	mov	x0, x23
   20e10:	mov	x19, #0x0                   	// #0
   20e14:	mov	x23, x24
   20e18:	mov	x24, x27
   20e1c:	mov	x27, x26
   20e20:	mov	x26, x25
   20e24:	mov	x25, x0
   20e28:	b	21034 <PyInit__decimal@@Base+0x4df4>
   20e2c:	ldr	x1, [sp, #208]
   20e30:	cbz	x1, 21110 <PyInit__decimal@@Base+0x4ed0>
   20e34:	lsr	x1, x0, #30
   20e38:	lsl	x0, x0, #34
   20e3c:	adds	x0, x0, x2
   20e40:	sub	x1, x1, x3
   20e44:	cinc	x1, x1, cs  // cs = hs, nlast
   20e48:	subs	x2, x0, x1
   20e4c:	cmp	x0, x1
   20e50:	lsr	x0, x1, #30
   20e54:	lsl	x1, x1, #34
   20e58:	sbc	x0, x0, xzr
   20e5c:	adds	x1, x2, x1
   20e60:	cinc	x0, x0, cs  // cs = hs, nlast
   20e64:	subs	x5, x1, x0
   20e68:	cmp	x1, x0
   20e6c:	lsr	x1, x0, #30
   20e70:	lsl	x0, x0, #34
   20e74:	sbc	x1, x1, xzr
   20e78:	adds	x0, x5, x0
   20e7c:	cinc	x1, x1, cs  // cs = hs, nlast
   20e80:	sub	x5, x0, x24
   20e84:	cmp	x1, #0x0
   20e88:	ccmp	x24, x0, #0x0, eq  // eq = none
   20e8c:	csel	x5, x5, x0, ls  // ls = plast
   20e90:	ldr	x1, [sp, #128]
   20e94:	mov	x2, x27
   20e98:	mov	x3, #0x0                   	// #0
   20e9c:	str	x10, [sp, #120]
   20ea0:	mul	x0, x5, x1
   20ea4:	umulh	x5, x5, x1
   20ea8:	adds	x28, x4, x0
   20eac:	cinc	x5, x5, cs  // cs = hs, nlast
   20eb0:	adds	x11, x19, x28
   20eb4:	mov	x0, x11
   20eb8:	stp	x5, x11, [sp, #104]
   20ebc:	udiv	x1, x5, x27
   20ec0:	msub	x1, x1, x27, x5
   20ec4:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   20ec8:	mul	x0, x27, x0
   20ecc:	ldp	x5, x11, [sp, #104]
   20ed0:	ldr	x10, [sp, #120]
   20ed4:	ldr	x2, [sp, #168]
   20ed8:	sub	x1, x10, x11
   20edc:	sub	x11, x11, x0
   20ee0:	add	x1, x1, x0
   20ee4:	cmp	x10, x11
   20ee8:	add	x0, x1, x27
   20eec:	csel	x1, x0, x1, cc  // cc = lo, ul, last
   20ef0:	mul	x0, x1, x2
   20ef4:	umulh	x1, x1, x2
   20ef8:	subs	x3, x0, x1
   20efc:	cmp	x0, x1
   20f00:	ldr	x0, [sp, #200]
   20f04:	cset	x10, cc  // cc = lo, ul, last
   20f08:	cbnz	x0, 210cc <PyInit__decimal@@Base+0x4e8c>
   20f0c:	ldr	x0, [sp, #216]
   20f10:	cbz	x0, 21154 <PyInit__decimal@@Base+0x4f14>
   20f14:	lsr	x0, x1, #30
   20f18:	lsl	x1, x1, #34
   20f1c:	adds	x1, x1, x3
   20f20:	sub	x0, x0, x10
   20f24:	cinc	x0, x0, cs  // cs = hs, nlast
   20f28:	subs	x2, x1, x0
   20f2c:	cmp	x1, x0
   20f30:	lsr	x1, x0, #30
   20f34:	lsl	x0, x0, #34
   20f38:	sbc	x1, x1, xzr
   20f3c:	adds	x2, x2, x0
   20f40:	cinc	x1, x1, cs  // cs = hs, nlast
   20f44:	subs	x0, x2, x1
   20f48:	cmp	x2, x1
   20f4c:	lsr	x2, x1, #30
   20f50:	lsl	x1, x1, #34
   20f54:	sbc	x2, x2, xzr
   20f58:	adds	x1, x0, x1
   20f5c:	cinc	x2, x2, cs  // cs = hs, nlast
   20f60:	sub	x0, x1, x27
   20f64:	cmp	x2, #0x0
   20f68:	ccmp	x27, x1, #0x0, eq  // eq = none
   20f6c:	csel	x0, x0, x1, ls  // ls = plast
   20f70:	ldp	x4, x1, [sp, #176]
   20f74:	mul	x3, x0, x1
   20f78:	umulh	x2, x4, x0
   20f7c:	umulh	x1, x0, x1
   20f80:	mul	x0, x4, x0
   20f84:	adds	x2, x2, x3
   20f88:	adc	x3, x22, x1
   20f8c:	mov	x22, #0x0                   	// #0
   20f90:	adds	x4, x28, x0
   20f94:	adc	x2, x5, x2
   20f98:	adds	x28, x4, x26
   20f9c:	cinc	x0, x2, cs  // cs = hs, nlast
   20fa0:	adds	x20, x20, x0
   20fa4:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   20fa8:	cset	x1, cs  // cs = hs, nlast
   20fac:	cmp	x2, x5
   20fb0:	cinc	x1, x1, cc  // cc = lo, ul, last
   20fb4:	movk	x0, #0x2304, lsl #32
   20fb8:	add	x1, x1, x3
   20fbc:	movk	x0, #0x8ac7, lsl #48
   20fc0:	cmp	x1, x0
   20fc4:	b.ls	20fd8 <PyInit__decimal@@Base+0x4d98>  // b.plast
   20fc8:	cmp	x1, x21
   20fcc:	mov	x22, #0x1                   	// #1
   20fd0:	cset	x0, cs  // cs = hs, nlast
   20fd4:	msub	x1, x0, x21, x1
   20fd8:	adds	x26, x19, x20
   20fdc:	mov	x2, #0x89e80000            	// #2313682944
   20fe0:	movk	x2, #0x2304, lsl #32
   20fe4:	mov	x0, x26
   20fe8:	movk	x2, #0x8ac7, lsl #48
   20fec:	mov	x3, #0x0                   	// #0
   20ff0:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   20ff4:	mov	x20, x0
   20ff8:	adds	x28, x19, x28
   20ffc:	mov	x2, #0x89e80000            	// #2313682944
   21000:	movk	x2, #0x2304, lsl #32
   21004:	mov	x0, x28
   21008:	msub	x1, x20, x21, x26
   2100c:	movk	x2, #0x8ac7, lsl #48
   21010:	mov	x3, #0x0                   	// #0
   21014:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   21018:	msub	x10, x0, x21, x28
   2101c:	mov	x26, x0
   21020:	str	x10, [x25, x23, lsl #3]
   21024:	ldr	x0, [sp, #152]
   21028:	add	x23, x23, #0x1
   2102c:	cmp	x0, x23
   21030:	b.eq	21198 <PyInit__decimal@@Base+0x4f58>  // b.none
   21034:	ldr	x0, [sp, #136]
   21038:	ldr	x4, [x25, x23, lsl #3]
   2103c:	ldr	x1, [x0, x23, lsl #3]
   21040:	sub	x2, x4, x24
   21044:	subs	x0, x1, x24
   21048:	csel	x1, x0, x1, cs  // cs = hs, nlast
   2104c:	cmp	x4, x24
   21050:	csel	x2, x2, x4, cs  // cs = hs, nlast
   21054:	subs	x0, x1, x2
   21058:	add	x1, x0, x24
   2105c:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   21060:	ldr	x1, [sp, #144]
   21064:	ldr	x2, [sp, #160]
   21068:	ldr	x10, [x1, x23, lsl #3]
   2106c:	mul	x1, x0, x2
   21070:	umulh	x0, x0, x2
   21074:	subs	x2, x1, x0
   21078:	cmp	x1, x0
   2107c:	ldr	x1, [sp, #192]
   21080:	cset	x3, cc  // cc = lo, ul, last
   21084:	cbz	x1, 20e2c <PyInit__decimal@@Base+0x4bec>
   21088:	lsr	x1, x0, #32
   2108c:	lsl	x0, x0, #32
   21090:	adds	x0, x0, x2
   21094:	sub	x1, x1, x3
   21098:	cinc	x1, x1, cs  // cs = hs, nlast
   2109c:	subs	x5, x0, x1
   210a0:	cmp	x0, x1
   210a4:	lsr	x0, x1, #32
   210a8:	lsl	x1, x1, #32
   210ac:	sbc	x0, x0, xzr
   210b0:	adds	x1, x5, x1
   210b4:	cinc	x0, x0, cs  // cs = hs, nlast
   210b8:	sub	x5, x1, x24
   210bc:	cmp	x0, #0x0
   210c0:	ccmp	x24, x1, #0x0, eq  // eq = none
   210c4:	csel	x5, x5, x1, ls  // ls = plast
   210c8:	b	20e90 <PyInit__decimal@@Base+0x4c50>
   210cc:	lsr	x2, x1, #32
   210d0:	lsl	x1, x1, #32
   210d4:	adds	x1, x1, x3
   210d8:	sub	x2, x2, x10
   210dc:	cinc	x2, x2, cs  // cs = hs, nlast
   210e0:	subs	x0, x1, x2
   210e4:	cmp	x1, x2
   210e8:	lsr	x1, x2, #32
   210ec:	lsl	x2, x2, #32
   210f0:	sbc	x1, x1, xzr
   210f4:	adds	x2, x0, x2
   210f8:	cinc	x1, x1, cs  // cs = hs, nlast
   210fc:	sub	x0, x2, x27
   21100:	cmp	x1, #0x0
   21104:	ccmp	x27, x2, #0x0, eq  // eq = none
   21108:	csel	x0, x0, x2, ls  // ls = plast
   2110c:	b	20f70 <PyInit__decimal@@Base+0x4d30>
   21110:	lsr	x1, x0, #24
   21114:	lsl	x0, x0, #40
   21118:	adds	x0, x0, x2
   2111c:	sub	x1, x1, x3
   21120:	cinc	x1, x1, cs  // cs = hs, nlast
   21124:	subs	x2, x0, x1
   21128:	cmp	x0, x1
   2112c:	lsr	x0, x1, #24
   21130:	lsl	x1, x1, #40
   21134:	sbc	x0, x0, xzr
   21138:	adds	x1, x2, x1
   2113c:	cinc	x0, x0, cs  // cs = hs, nlast
   21140:	subs	x5, x1, x0
   21144:	cmp	x1, x0
   21148:	lsr	x1, x0, #24
   2114c:	lsl	x0, x0, #40
   21150:	b	20e74 <PyInit__decimal@@Base+0x4c34>
   21154:	lsr	x0, x1, #24
   21158:	lsl	x1, x1, #40
   2115c:	adds	x1, x1, x3
   21160:	sub	x0, x0, x10
   21164:	cinc	x0, x0, cs  // cs = hs, nlast
   21168:	subs	x2, x1, x0
   2116c:	cmp	x1, x0
   21170:	lsr	x1, x0, #24
   21174:	lsl	x0, x0, #40
   21178:	sbc	x1, x1, xzr
   2117c:	adds	x2, x2, x0
   21180:	cinc	x1, x1, cs  // cs = hs, nlast
   21184:	subs	x0, x2, x1
   21188:	cmp	x2, x1
   2118c:	lsr	x2, x1, #24
   21190:	lsl	x1, x1, #40
   21194:	b	20f54 <PyInit__decimal@@Base+0x4d14>
   21198:	ldp	x19, x20, [sp, #16]
   2119c:	ldp	x21, x22, [sp, #32]
   211a0:	ldp	x23, x24, [sp, #48]
   211a4:	ldp	x25, x26, [sp, #64]
   211a8:	ldp	x27, x28, [sp, #80]
   211ac:	ldp	x29, x30, [sp], #224
   211b0:	ret
   211b4:	nop
   211b8:	stp	x29, x30, [sp, #-80]!
   211bc:	mov	x13, x1
   211c0:	cmp	xzr, x1, lsr #1
   211c4:	mov	x29, sp
   211c8:	stp	x21, x22, [sp, #32]
   211cc:	mov	x22, x2
   211d0:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   211d4:	add	x2, x2, #0x460
   211d8:	mov	x17, x0
   211dc:	ldrsw	x1, [x22]
   211e0:	ldr	x1, [x2, x1, lsl #3]
   211e4:	b.eq	214b0 <PyInit__decimal@@Base+0x5270>  // b.none
   211e8:	lsr	x9, x13, #1
   211ec:	and	x15, x1, #0x100000000
   211f0:	and	x16, x1, #0x400000000
   211f4:	add	x12, x22, #0x18
   211f8:	lsl	x10, x9, #3
   211fc:	add	x11, x22, #0x20
   21200:	add	x7, x0, x10
   21204:	add	x21, x0, #0x8
   21208:	mov	x2, #0x0                   	// #0
   2120c:	stp	x19, x20, [sp, #16]
   21210:	b	212f4 <PyInit__decimal@@Base+0x50b4>
   21214:	cbz	x16, 213f4 <PyInit__decimal@@Base+0x51b4>
   21218:	lsr	x3, x0, #30
   2121c:	lsl	x0, x0, #34
   21220:	adds	x0, x0, x4
   21224:	sub	x3, x3, x8
   21228:	cinc	x3, x3, cs  // cs = hs, nlast
   2122c:	mul	x14, x5, x6
   21230:	subs	x8, x0, x3
   21234:	umulh	x5, x5, x6
   21238:	cmp	x0, x3
   2123c:	lsr	x0, x3, #30
   21240:	lsl	x3, x3, #34
   21244:	sbc	x0, x0, xzr
   21248:	adds	x8, x8, x3
   2124c:	lsl	x18, x5, #34
   21250:	cinc	x0, x0, cs  // cs = hs, nlast
   21254:	lsr	x3, x5, #30
   21258:	subs	x4, x8, x0
   2125c:	cmp	x8, x0
   21260:	lsr	x6, x0, #30
   21264:	lsl	x0, x0, #34
   21268:	sbc	x6, x6, xzr
   2126c:	adds	x0, x4, x0
   21270:	cinc	x6, x6, cs  // cs = hs, nlast
   21274:	sub	x4, x0, x1
   21278:	cmp	x6, #0x0
   2127c:	ccmp	x1, x0, #0x0, eq  // eq = none
   21280:	csel	x4, x4, x0, ls  // ls = plast
   21284:	subs	x0, x14, x5
   21288:	cmp	x14, x5
   2128c:	sbc	x3, x3, xzr
   21290:	adds	x0, x0, x18
   21294:	cinc	x3, x3, cs  // cs = hs, nlast
   21298:	subs	x5, x0, x3
   2129c:	cmp	x0, x3
   212a0:	lsr	x0, x3, #30
   212a4:	lsl	x3, x3, #34
   212a8:	sbc	x0, x0, xzr
   212ac:	adds	x5, x5, x3
   212b0:	cinc	x0, x0, cs  // cs = hs, nlast
   212b4:	subs	x3, x5, x0
   212b8:	cmp	x5, x0
   212bc:	lsr	x5, x0, #30
   212c0:	lsl	x0, x0, #34
   212c4:	sbc	x5, x5, xzr
   212c8:	adds	x3, x3, x0
   212cc:	cinc	x5, x5, cs  // cs = hs, nlast
   212d0:	sub	x0, x3, x1
   212d4:	cmp	x5, #0x0
   212d8:	add	x2, x2, #0x2
   212dc:	ccmp	x1, x3, #0x0, eq  // eq = none
   212e0:	csel	x0, x0, x3, ls  // ls = plast
   212e4:	stp	x4, x0, [x7]
   212e8:	cmp	x9, x2
   212ec:	add	x7, x7, #0x10
   212f0:	b.ls	21588 <PyInit__decimal@@Base+0x5348>  // b.plast
   212f4:	ldr	x5, [x17, x2, lsl #3]
   212f8:	ldr	x3, [x7]
   212fc:	ldr	x8, [x21, x2, lsl #3]
   21300:	adds	x4, x3, x5
   21304:	sub	x6, x4, x1
   21308:	sub	x0, x5, x3
   2130c:	csel	x4, x6, x4, cs  // cs = hs, nlast
   21310:	add	x14, x0, x1
   21314:	ldr	x6, [x7, #8]
   21318:	cmp	x1, x4
   2131c:	sub	x18, x4, x1
   21320:	csel	x4, x18, x4, ls  // ls = plast
   21324:	cmp	x3, x5
   21328:	ldr	x18, [x12, x2, lsl #3]
   2132c:	csel	x0, x14, x0, hi  // hi = pmore
   21330:	adds	x14, x6, x8
   21334:	sub	x5, x8, x6
   21338:	sub	x3, x14, x1
   2133c:	add	x19, x5, x1
   21340:	csel	x3, x3, x14, cs  // cs = hs, nlast
   21344:	mul	x14, x0, x18
   21348:	cmp	x1, x3
   2134c:	umulh	x0, x0, x18
   21350:	sub	x20, x3, x1
   21354:	csel	x3, x20, x3, ls  // ls = plast
   21358:	cmp	x6, x8
   2135c:	ldr	x6, [x11, x2, lsl #3]
   21360:	str	x4, [x17, x2, lsl #3]
   21364:	csel	x5, x19, x5, hi  // hi = pmore
   21368:	subs	x4, x14, x0
   2136c:	str	x3, [x21, x2, lsl #3]
   21370:	cmp	x14, x0
   21374:	cset	x8, cc  // cc = lo, ul, last
   21378:	cbz	x15, 21214 <PyInit__decimal@@Base+0x4fd4>
   2137c:	lsr	x3, x0, #32
   21380:	lsl	x0, x0, #32
   21384:	adds	x0, x0, x4
   21388:	sub	x3, x3, x8
   2138c:	cinc	x3, x3, cs  // cs = hs, nlast
   21390:	mul	x8, x5, x6
   21394:	subs	x4, x0, x3
   21398:	umulh	x5, x5, x6
   2139c:	cmp	x0, x3
   213a0:	lsr	x6, x3, #32
   213a4:	lsl	x3, x3, #32
   213a8:	sbc	x6, x6, xzr
   213ac:	adds	x3, x4, x3
   213b0:	lsr	x0, x5, #32
   213b4:	cinc	x6, x6, cs  // cs = hs, nlast
   213b8:	sub	x4, x3, x1
   213bc:	cmp	x6, #0x0
   213c0:	lsl	x6, x5, #32
   213c4:	ccmp	x1, x3, #0x0, eq  // eq = none
   213c8:	csel	x4, x4, x3, ls  // ls = plast
   213cc:	subs	x3, x8, x5
   213d0:	cmp	x8, x5
   213d4:	sbc	x0, x0, xzr
   213d8:	adds	x5, x3, x6
   213dc:	cinc	x0, x0, cs  // cs = hs, nlast
   213e0:	subs	x3, x5, x0
   213e4:	cmp	x5, x0
   213e8:	lsr	x5, x0, #32
   213ec:	lsl	x0, x0, #32
   213f0:	b	212c4 <PyInit__decimal@@Base+0x5084>
   213f4:	lsr	x3, x0, #24
   213f8:	lsl	x0, x0, #40
   213fc:	adds	x0, x0, x4
   21400:	sub	x3, x3, x8
   21404:	cinc	x3, x3, cs  // cs = hs, nlast
   21408:	mul	x8, x5, x6
   2140c:	subs	x4, x0, x3
   21410:	umulh	x5, x5, x6
   21414:	cmp	x0, x3
   21418:	lsr	x0, x3, #24
   2141c:	lsl	x3, x3, #40
   21420:	sbc	x0, x0, xzr
   21424:	adds	x6, x4, x3
   21428:	lsl	x14, x5, #40
   2142c:	cinc	x0, x0, cs  // cs = hs, nlast
   21430:	lsr	x3, x5, #24
   21434:	subs	x4, x6, x0
   21438:	cmp	x6, x0
   2143c:	lsr	x6, x0, #24
   21440:	lsl	x0, x0, #40
   21444:	sbc	x6, x6, xzr
   21448:	adds	x0, x4, x0
   2144c:	cinc	x6, x6, cs  // cs = hs, nlast
   21450:	sub	x4, x0, x1
   21454:	cmp	x6, #0x0
   21458:	ccmp	x1, x0, #0x0, eq  // eq = none
   2145c:	csel	x4, x4, x0, ls  // ls = plast
   21460:	subs	x0, x8, x5
   21464:	cmp	x8, x5
   21468:	sbc	x3, x3, xzr
   2146c:	adds	x0, x0, x14
   21470:	cinc	x3, x3, cs  // cs = hs, nlast
   21474:	subs	x5, x0, x3
   21478:	cmp	x0, x3
   2147c:	lsr	x0, x3, #24
   21480:	lsl	x3, x3, #40
   21484:	sbc	x0, x0, xzr
   21488:	adds	x5, x5, x3
   2148c:	cinc	x0, x0, cs  // cs = hs, nlast
   21490:	subs	x3, x5, x0
   21494:	cmp	x5, x0
   21498:	lsr	x5, x0, #24
   2149c:	lsl	x0, x0, #40
   214a0:	b	212c4 <PyInit__decimal@@Base+0x5084>
   214a4:	ldp	x19, x20, [sp, #16]
   214a8:	ldp	x23, x24, [sp, #48]
   214ac:	ldp	x25, x26, [sp, #64]
   214b0:	mov	x3, #0x0                   	// #0
   214b4:	mov	x2, #0x0                   	// #0
   214b8:	add	x2, x2, #0x1
   214bc:	cbnz	w2, 2153c <PyInit__decimal@@Base+0x52fc>
   214c0:	lsr	x1, x2, #32
   214c4:	mov	w0, #0x2f                  	// #47
   214c8:	mov	w4, #0x3f                  	// #63
   214cc:	tst	w1, #0xffff
   214d0:	b.ne	214dc <PyInit__decimal@@Base+0x529c>  // b.any
   214d4:	lsr	x1, x1, #16
   214d8:	mov	w0, w4
   214dc:	tst	w1, #0xff
   214e0:	b.eq	21580 <PyInit__decimal@@Base+0x5340>  // b.none
   214e4:	sub	w0, w0, #0x8
   214e8:	tst	x1, #0xf
   214ec:	b.eq	21578 <PyInit__decimal@@Base+0x5338>  // b.none
   214f0:	sub	w0, w0, #0x4
   214f4:	tst	x1, #0x3
   214f8:	b.eq	2154c <PyInit__decimal@@Base+0x530c>  // b.none
   214fc:	tst	x1, #0x1
   21500:	sub	w0, w0, #0x2
   21504:	cinc	w0, w0, eq  // eq = none
   21508:	cmp	x13, x2
   2150c:	lsr	x0, x13, x0
   21510:	sub	x0, x13, x0
   21514:	eor	x3, x3, x0
   21518:	b.ls	2156c <PyInit__decimal@@Base+0x532c>  // b.plast
   2151c:	cmp	x2, x3
   21520:	b.cs	214b8 <PyInit__decimal@@Base+0x5278>  // b.hs, b.nlast
   21524:	ldr	x1, [x17, x3, lsl #3]
   21528:	ldr	x0, [x17, x2, lsl #3]
   2152c:	str	x1, [x17, x2, lsl #3]
   21530:	str	x0, [x17, x3, lsl #3]
   21534:	add	x2, x2, #0x1
   21538:	cbz	w2, 214c0 <PyInit__decimal@@Base+0x5280>
   2153c:	mov	x1, x2
   21540:	mov	w0, #0xf                   	// #15
   21544:	mov	w4, #0x1f                  	// #31
   21548:	b	214cc <PyInit__decimal@@Base+0x528c>
   2154c:	lsr	x1, x1, #2
   21550:	tst	x1, #0x1
   21554:	cinc	w0, w0, eq  // eq = none
   21558:	cmp	x13, x2
   2155c:	lsr	x0, x13, x0
   21560:	sub	x0, x13, x0
   21564:	eor	x3, x3, x0
   21568:	b.hi	2151c <PyInit__decimal@@Base+0x52dc>  // b.pmore
   2156c:	ldp	x21, x22, [sp, #32]
   21570:	ldp	x29, x30, [sp], #80
   21574:	ret
   21578:	lsr	x1, x1, #4
   2157c:	b	214f4 <PyInit__decimal@@Base+0x52b4>
   21580:	lsr	x1, x1, #8
   21584:	b	214e8 <PyInit__decimal@@Base+0x52a8>
   21588:	cmp	x9, #0x1
   2158c:	b.eq	2193c <PyInit__decimal@@Base+0x56fc>  // b.none
   21590:	stp	x23, x24, [sp, #48]
   21594:	mov	x23, #0x2                   	// #2
   21598:	stp	x25, x26, [sp, #64]
   2159c:	nop
   215a0:	lsr	x19, x9, #1
   215a4:	add	x8, x19, x9
   215a8:	lsl	x14, x9, #1
   215ac:	lsl	x18, x19, #3
   215b0:	add	x12, x17, x10
   215b4:	add	x8, x17, x8, lsl #3
   215b8:	add	x11, x17, x18
   215bc:	mov	x0, #0x0                   	// #0
   215c0:	ldr	x7, [x17, x0, lsl #3]
   215c4:	ldr	x2, [x11, x0, lsl #3]
   215c8:	ldr	x6, [x12, x0, lsl #3]
   215cc:	adds	x4, x2, x7
   215d0:	sub	x3, x4, x1
   215d4:	sub	x5, x7, x2
   215d8:	csel	x3, x3, x4, cs  // cs = hs, nlast
   215dc:	add	x20, x5, x1
   215e0:	ldr	x4, [x8, x0, lsl #3]
   215e4:	cmp	x1, x3
   215e8:	sub	x24, x3, x1
   215ec:	csel	x3, x24, x3, ls  // ls = plast
   215f0:	cmp	x2, x7
   215f4:	csel	x5, x20, x5, hi  // hi = pmore
   215f8:	adds	x7, x4, x6
   215fc:	sub	x2, x7, x1
   21600:	str	x3, [x17, x0, lsl #3]
   21604:	csel	x2, x2, x7, cs  // cs = hs, nlast
   21608:	sub	x3, x6, x4
   2160c:	cmp	x1, x2
   21610:	sub	x7, x2, x1
   21614:	csel	x2, x7, x2, ls  // ls = plast
   21618:	str	x2, [x12, x0, lsl #3]
   2161c:	cmp	x4, x6
   21620:	add	x2, x3, x1
   21624:	str	x5, [x11, x0, lsl #3]
   21628:	csel	x3, x2, x3, hi  // hi = pmore
   2162c:	str	x3, [x8, x0, lsl #3]
   21630:	add	x0, x0, x14
   21634:	cmp	x13, x0
   21638:	b.hi	215c0 <PyInit__decimal@@Base+0x5380>  // b.pmore
   2163c:	cmp	x19, #0x1
   21640:	b.eq	214a4 <PyInit__decimal@@Base+0x5264>  // b.none
   21644:	add	x9, x9, #0x1
   21648:	add	x11, x18, #0x8
   2164c:	add	x9, x9, x19
   21650:	add	x10, x10, #0x8
   21654:	lsl	x20, x23, #3
   21658:	add	x11, x17, x11
   2165c:	add	x9, x17, x9, lsl #3
   21660:	add	x10, x17, x10
   21664:	add	x30, x22, x20
   21668:	mov	x12, x21
   2166c:	mov	x18, #0x1                   	// #1
   21670:	mov	x3, #0x0                   	// #0
   21674:	ldr	x8, [x30, #24]
   21678:	b	2175c <PyInit__decimal@@Base+0x551c>
   2167c:	cbz	x16, 2185c <PyInit__decimal@@Base+0x561c>
   21680:	lsr	x4, x0, #30
   21684:	lsl	x0, x0, #34
   21688:	adds	x0, x0, x5
   2168c:	sub	x4, x4, x6
   21690:	cinc	x4, x4, cs  // cs = hs, nlast
   21694:	mul	x6, x2, x8
   21698:	subs	x7, x0, x4
   2169c:	umulh	x2, x2, x8
   216a0:	cmp	x0, x4
   216a4:	lsr	x0, x4, #30
   216a8:	lsl	x4, x4, #34
   216ac:	sbc	x0, x0, xzr
   216b0:	adds	x7, x7, x4
   216b4:	lsr	x5, x2, #30
   216b8:	cinc	x0, x0, cs  // cs = hs, nlast
   216bc:	lsl	x24, x2, #34
   216c0:	subs	x4, x7, x0
   216c4:	cmp	x7, x0
   216c8:	lsr	x7, x0, #30
   216cc:	lsl	x0, x0, #34
   216d0:	sbc	x7, x7, xzr
   216d4:	adds	x0, x4, x0
   216d8:	cinc	x7, x7, cs  // cs = hs, nlast
   216dc:	sub	x4, x0, x1
   216e0:	cmp	x7, #0x0
   216e4:	ccmp	x1, x0, #0x0, eq  // eq = none
   216e8:	csel	x4, x4, x0, ls  // ls = plast
   216ec:	subs	x0, x6, x2
   216f0:	cmp	x6, x2
   216f4:	sbc	x5, x5, xzr
   216f8:	adds	x2, x0, x24
   216fc:	cinc	x5, x5, cs  // cs = hs, nlast
   21700:	subs	x0, x2, x5
   21704:	cmp	x2, x5
   21708:	lsr	x2, x5, #30
   2170c:	lsl	x5, x5, #34
   21710:	sbc	x2, x2, xzr
   21714:	adds	x5, x0, x5
   21718:	cinc	x2, x2, cs  // cs = hs, nlast
   2171c:	subs	x0, x5, x2
   21720:	cmp	x5, x2
   21724:	lsr	x5, x2, #30
   21728:	lsl	x2, x2, #34
   2172c:	sbc	x5, x5, xzr
   21730:	adds	x2, x0, x2
   21734:	cinc	x5, x5, cs  // cs = hs, nlast
   21738:	sub	x0, x2, x1
   2173c:	cmp	x5, #0x0
   21740:	str	x4, [x11, x3, lsl #3]
   21744:	ccmp	x1, x2, #0x0, eq  // eq = none
   21748:	csel	x0, x0, x2, ls  // ls = plast
   2174c:	str	x0, [x9, x3, lsl #3]
   21750:	add	x3, x3, x14
   21754:	cmp	x13, x3
   21758:	b.ls	2190c <PyInit__decimal@@Base+0x56cc>  // b.plast
   2175c:	ldr	x4, [x12, x3, lsl #3]
   21760:	ldr	x2, [x11, x3, lsl #3]
   21764:	ldr	x7, [x10, x3, lsl #3]
   21768:	adds	x5, x2, x4
   2176c:	sub	x6, x5, x1
   21770:	sub	x0, x4, x2
   21774:	csel	x5, x6, x5, cs  // cs = hs, nlast
   21778:	add	x24, x0, x1
   2177c:	ldr	x6, [x9, x3, lsl #3]
   21780:	cmp	x1, x5
   21784:	sub	x25, x5, x1
   21788:	csel	x5, x25, x5, ls  // ls = plast
   2178c:	cmp	x2, x4
   21790:	csel	x0, x24, x0, hi  // hi = pmore
   21794:	adds	x24, x6, x7
   21798:	sub	x4, x24, x1
   2179c:	sub	x2, x7, x6
   217a0:	csel	x4, x4, x24, cs  // cs = hs, nlast
   217a4:	add	x25, x2, x1
   217a8:	mul	x24, x0, x8
   217ac:	cmp	x1, x4
   217b0:	umulh	x0, x0, x8
   217b4:	sub	x26, x4, x1
   217b8:	csel	x4, x26, x4, ls  // ls = plast
   217bc:	cmp	x6, x7
   217c0:	str	x5, [x12, x3, lsl #3]
   217c4:	csel	x2, x25, x2, hi  // hi = pmore
   217c8:	subs	x5, x24, x0
   217cc:	str	x4, [x10, x3, lsl #3]
   217d0:	cmp	x24, x0
   217d4:	cset	x6, cc  // cc = lo, ul, last
   217d8:	cbz	x15, 2167c <PyInit__decimal@@Base+0x543c>
   217dc:	lsr	x4, x0, #32
   217e0:	lsl	x0, x0, #32
   217e4:	adds	x0, x0, x5
   217e8:	sub	x4, x4, x6
   217ec:	cinc	x4, x4, cs  // cs = hs, nlast
   217f0:	mul	x7, x2, x8
   217f4:	subs	x6, x0, x4
   217f8:	umulh	x2, x2, x8
   217fc:	cmp	x0, x4
   21800:	lsr	x5, x4, #32
   21804:	lsl	x4, x4, #32
   21808:	sbc	x5, x5, xzr
   2180c:	adds	x4, x6, x4
   21810:	lsr	x0, x2, #32
   21814:	cinc	x5, x5, cs  // cs = hs, nlast
   21818:	sub	x24, x4, x1
   2181c:	cmp	x5, #0x0
   21820:	lsl	x6, x2, #32
   21824:	ccmp	x1, x4, #0x0, eq  // eq = none
   21828:	csel	x4, x24, x4, ls  // ls = plast
   2182c:	subs	x5, x7, x2
   21830:	cmp	x7, x2
   21834:	sbc	x0, x0, xzr
   21838:	adds	x5, x5, x6
   2183c:	cinc	x0, x0, cs  // cs = hs, nlast
   21840:	subs	x2, x5, x0
   21844:	cmp	x5, x0
   21848:	lsr	x5, x0, #32
   2184c:	lsl	x0, x0, #32
   21850:	sbc	x5, x5, xzr
   21854:	adds	x2, x2, x0
   21858:	b	21734 <PyInit__decimal@@Base+0x54f4>
   2185c:	lsr	x4, x0, #24
   21860:	lsl	x0, x0, #40
   21864:	adds	x0, x0, x5
   21868:	sub	x4, x4, x6
   2186c:	cinc	x4, x4, cs  // cs = hs, nlast
   21870:	mul	x6, x2, x8
   21874:	subs	x7, x0, x4
   21878:	umulh	x2, x2, x8
   2187c:	cmp	x0, x4
   21880:	lsr	x0, x4, #24
   21884:	lsl	x4, x4, #40
   21888:	sbc	x0, x0, xzr
   2188c:	adds	x7, x7, x4
   21890:	lsr	x5, x2, #24
   21894:	cinc	x0, x0, cs  // cs = hs, nlast
   21898:	lsl	x24, x2, #40
   2189c:	subs	x4, x7, x0
   218a0:	cmp	x7, x0
   218a4:	lsr	x7, x0, #24
   218a8:	lsl	x0, x0, #40
   218ac:	sbc	x7, x7, xzr
   218b0:	adds	x0, x4, x0
   218b4:	cinc	x7, x7, cs  // cs = hs, nlast
   218b8:	sub	x4, x0, x1
   218bc:	cmp	x7, #0x0
   218c0:	ccmp	x1, x0, #0x0, eq  // eq = none
   218c4:	csel	x4, x4, x0, ls  // ls = plast
   218c8:	subs	x0, x6, x2
   218cc:	cmp	x6, x2
   218d0:	sbc	x5, x5, xzr
   218d4:	adds	x0, x0, x24
   218d8:	cinc	x5, x5, cs  // cs = hs, nlast
   218dc:	subs	x6, x0, x5
   218e0:	cmp	x0, x5
   218e4:	lsl	x2, x5, #40
   218e8:	lsr	x0, x5, #24
   218ec:	sbc	x0, x0, xzr
   218f0:	adds	x5, x6, x2
   218f4:	cinc	x0, x0, cs  // cs = hs, nlast
   218f8:	subs	x2, x5, x0
   218fc:	cmp	x5, x0
   21900:	lsr	x5, x0, #24
   21904:	lsl	x0, x0, #40
   21908:	b	21850 <PyInit__decimal@@Base+0x5610>
   2190c:	add	x18, x18, #0x1
   21910:	add	x30, x30, x20
   21914:	cmp	x19, x18
   21918:	add	x11, x11, #0x8
   2191c:	add	x9, x9, #0x8
   21920:	add	x10, x10, #0x8
   21924:	add	x12, x12, #0x8
   21928:	b.ne	21670 <PyInit__decimal@@Base+0x5430>  // b.any
   2192c:	mov	x9, x19
   21930:	lsl	x23, x23, #1
   21934:	lsl	x10, x19, #3
   21938:	b	215a0 <PyInit__decimal@@Base+0x5360>
   2193c:	ldp	x19, x20, [sp, #16]
   21940:	b	214b0 <PyInit__decimal@@Base+0x5270>
   21944:	nop
   21948:	stp	x29, x30, [sp, #-48]!
   2194c:	mov	x29, sp
   21950:	stp	x19, x20, [sp, #16]
   21954:	mov	x20, x1
   21958:	str	x21, [sp, #32]
   2195c:	mov	x21, x0
   21960:	mov	x0, x1
   21964:	mov	w1, #0xffffffff            	// #-1
   21968:	bl	3ed00 <PyInit__decimal@@Base+0x22ac0>
   2196c:	cbz	x0, 219a8 <PyInit__decimal@@Base+0x5768>
   21970:	mov	x19, x0
   21974:	mov	x1, x20
   21978:	mov	x2, x19
   2197c:	mov	x0, x21
   21980:	bl	211b8 <PyInit__decimal@@Base+0x4f78>
   21984:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   21988:	mov	x0, x19
   2198c:	ldr	x1, [x1, #1912]
   21990:	blr	x1
   21994:	mov	w0, #0x1                   	// #1
   21998:	ldp	x19, x20, [sp, #16]
   2199c:	ldr	x21, [sp, #32]
   219a0:	ldp	x29, x30, [sp], #48
   219a4:	ret
   219a8:	mov	w0, #0x0                   	// #0
   219ac:	ldp	x19, x20, [sp, #16]
   219b0:	ldr	x21, [sp, #32]
   219b4:	ldp	x29, x30, [sp], #48
   219b8:	ret
   219bc:	nop
   219c0:	stp	x29, x30, [sp, #-48]!
   219c4:	mov	x29, sp
   219c8:	stp	x19, x20, [sp, #16]
   219cc:	mov	x20, x1
   219d0:	str	x21, [sp, #32]
   219d4:	mov	x21, x0
   219d8:	mov	x0, x1
   219dc:	mov	w1, #0x1                   	// #1
   219e0:	bl	3ed00 <PyInit__decimal@@Base+0x22ac0>
   219e4:	cbz	x0, 21a20 <PyInit__decimal@@Base+0x57e0>
   219e8:	mov	x19, x0
   219ec:	mov	x1, x20
   219f0:	mov	x2, x19
   219f4:	mov	x0, x21
   219f8:	bl	211b8 <PyInit__decimal@@Base+0x4f78>
   219fc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   21a00:	mov	x0, x19
   21a04:	ldr	x1, [x1, #1912]
   21a08:	blr	x1
   21a0c:	mov	w0, #0x1                   	// #1
   21a10:	ldp	x19, x20, [sp, #16]
   21a14:	ldr	x21, [sp, #32]
   21a18:	ldp	x29, x30, [sp], #48
   21a1c:	ret
   21a20:	mov	w0, #0x0                   	// #0
   21a24:	ldp	x19, x20, [sp, #16]
   21a28:	ldr	x21, [sp, #32]
   21a2c:	ldp	x29, x30, [sp], #48
   21a30:	ret
   21a34:	nop
   21a38:	stp	x29, x30, [sp, #-128]!
   21a3c:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   21a40:	add	x3, x3, #0x460
   21a44:	mov	x29, sp
   21a48:	stp	x25, x26, [sp, #64]
   21a4c:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   21a50:	movk	x25, #0xaaab
   21a54:	stp	x19, x20, [sp, #16]
   21a58:	mov	w20, w2
   21a5c:	umulh	x25, x1, x25
   21a60:	mov	x26, x1
   21a64:	mov	w1, #0xffffffff            	// #-1
   21a68:	ldr	x19, [x3, w20, sxtw #3]
   21a6c:	lsr	x25, x25, #1
   21a70:	stp	x21, x22, [sp, #32]
   21a74:	lsl	x21, x25, #3
   21a78:	stp	x23, x24, [sp, #48]
   21a7c:	mov	x23, x0
   21a80:	add	x0, sp, #0x68
   21a84:	str	x27, [sp, #80]
   21a88:	bl	3eec0 <PyInit__decimal@@Base+0x22c80>
   21a8c:	add	x7, x23, x21
   21a90:	and	x22, x19, #0x100000000
   21a94:	and	x24, x19, #0x400000000
   21a98:	cmp	x23, x7
   21a9c:	add	x8, x7, x21
   21aa0:	b.cs	21f74 <PyInit__decimal@@Base+0x5d34>  // b.hs, b.nlast
   21aa4:	mvn	x9, x23
   21aa8:	mov	x2, #0x0                   	// #0
   21aac:	add	x9, x7, x9
   21ab0:	ldp	x6, x5, [sp, #112]
   21ab4:	lsr	x9, x9, #3
   21ab8:	b	21d00 <PyInit__decimal@@Base+0x5ac0>
   21abc:	cbz	x24, 21e64 <PyInit__decimal@@Base+0x5c24>
   21ac0:	lsr	x12, x4, #30
   21ac4:	lsl	x4, x4, #34
   21ac8:	adds	x4, x4, x13
   21acc:	sub	x12, x12, x14
   21ad0:	cinc	x12, x12, cs  // cs = hs, nlast
   21ad4:	subs	x13, x4, x12
   21ad8:	cmp	x4, x12
   21adc:	lsr	x10, x12, #30
   21ae0:	lsl	x12, x12, #34
   21ae4:	sbc	x10, x10, xzr
   21ae8:	adds	x12, x13, x12
   21aec:	cinc	x10, x10, cs  // cs = hs, nlast
   21af0:	subs	x4, x12, x10
   21af4:	cmp	x12, x10
   21af8:	lsr	x12, x10, #30
   21afc:	lsl	x10, x10, #34
   21b00:	sbc	x12, x12, xzr
   21b04:	adds	x10, x4, x10
   21b08:	cinc	x12, x12, cs  // cs = hs, nlast
   21b0c:	sub	x4, x10, x19
   21b10:	cmp	x12, #0x0
   21b14:	ccmp	x19, x10, #0x0, eq  // eq = none
   21b18:	csel	x4, x4, x10, ls  // ls = plast
   21b1c:	adds	x4, x11, x4
   21b20:	mul	x12, x0, x5
   21b24:	sub	x13, x4, x19
   21b28:	umulh	x10, x0, x5
   21b2c:	csel	x4, x13, x4, cs  // cs = hs, nlast
   21b30:	cmp	x19, x4
   21b34:	sub	x13, x4, x19
   21b38:	csel	x4, x13, x4, ls  // ls = plast
   21b3c:	subs	x14, x12, x10
   21b40:	cmp	x12, x10
   21b44:	cset	x15, cc  // cc = lo, ul, last
   21b48:	cbnz	x22, 21e20 <PyInit__decimal@@Base+0x5be0>
   21b4c:	cbz	x24, 21f30 <PyInit__decimal@@Base+0x5cf0>
   21b50:	lsr	x13, x10, #30
   21b54:	lsl	x10, x10, #34
   21b58:	adds	x10, x10, x14
   21b5c:	sub	x13, x13, x15
   21b60:	cinc	x13, x13, cs  // cs = hs, nlast
   21b64:	subs	x14, x10, x13
   21b68:	cmp	x10, x13
   21b6c:	lsr	x12, x13, #30
   21b70:	lsl	x13, x13, #34
   21b74:	sbc	x12, x12, xzr
   21b78:	adds	x13, x14, x13
   21b7c:	cinc	x12, x12, cs  // cs = hs, nlast
   21b80:	subs	x10, x13, x12
   21b84:	cmp	x13, x12
   21b88:	lsr	x13, x12, #30
   21b8c:	lsl	x12, x12, #34
   21b90:	sbc	x13, x13, xzr
   21b94:	adds	x12, x10, x12
   21b98:	cinc	x13, x13, cs  // cs = hs, nlast
   21b9c:	sub	x10, x12, x19
   21ba0:	cmp	x13, #0x0
   21ba4:	ccmp	x19, x12, #0x0, eq  // eq = none
   21ba8:	csel	x10, x10, x12, ls  // ls = plast
   21bac:	adds	x4, x4, x10
   21bb0:	mul	x10, x1, x5
   21bb4:	sub	x12, x4, x19
   21bb8:	umulh	x1, x1, x5
   21bbc:	csel	x4, x12, x4, cs  // cs = hs, nlast
   21bc0:	cmp	x19, x4
   21bc4:	sub	x12, x4, x19
   21bc8:	csel	x4, x12, x4, ls  // ls = plast
   21bcc:	subs	x13, x10, x1
   21bd0:	cmp	x10, x1
   21bd4:	cset	x14, cc  // cc = lo, ul, last
   21bd8:	cbnz	x22, 21ddc <PyInit__decimal@@Base+0x5b9c>
   21bdc:	cbz	x24, 21eec <PyInit__decimal@@Base+0x5cac>
   21be0:	lsr	x12, x1, #30
   21be4:	lsl	x1, x1, #34
   21be8:	adds	x1, x1, x13
   21bec:	sub	x12, x12, x14
   21bf0:	cinc	x12, x12, cs  // cs = hs, nlast
   21bf4:	subs	x13, x1, x12
   21bf8:	cmp	x1, x12
   21bfc:	lsr	x10, x12, #30
   21c00:	lsl	x12, x12, #34
   21c04:	sbc	x10, x10, xzr
   21c08:	adds	x12, x13, x12
   21c0c:	cinc	x10, x10, cs  // cs = hs, nlast
   21c10:	subs	x1, x12, x10
   21c14:	cmp	x12, x10
   21c18:	lsr	x12, x10, #30
   21c1c:	lsl	x10, x10, #34
   21c20:	sbc	x12, x12, xzr
   21c24:	adds	x10, x1, x10
   21c28:	cinc	x12, x12, cs  // cs = hs, nlast
   21c2c:	sub	x1, x10, x19
   21c30:	cmp	x12, #0x0
   21c34:	ccmp	x19, x10, #0x0, eq  // eq = none
   21c38:	csel	x1, x1, x10, ls  // ls = plast
   21c3c:	adds	x11, x11, x1
   21c40:	mul	x1, x6, x0
   21c44:	sub	x10, x11, x19
   21c48:	umulh	x0, x6, x0
   21c4c:	csel	x11, x10, x11, cs  // cs = hs, nlast
   21c50:	cmp	x19, x11
   21c54:	sub	x10, x11, x19
   21c58:	csel	x11, x10, x11, ls  // ls = plast
   21c5c:	subs	x12, x1, x0
   21c60:	cmp	x1, x0
   21c64:	cset	x13, cc  // cc = lo, ul, last
   21c68:	cbnz	x22, 21d98 <PyInit__decimal@@Base+0x5b58>
   21c6c:	cbz	x24, 21ea8 <PyInit__decimal@@Base+0x5c68>
   21c70:	lsr	x10, x0, #30
   21c74:	lsl	x0, x0, #34
   21c78:	adds	x0, x0, x12
   21c7c:	sub	x10, x10, x13
   21c80:	cinc	x10, x10, cs  // cs = hs, nlast
   21c84:	subs	x12, x0, x10
   21c88:	cmp	x0, x10
   21c8c:	lsr	x1, x10, #30
   21c90:	lsl	x10, x10, #34
   21c94:	sbc	x1, x1, xzr
   21c98:	adds	x10, x12, x10
   21c9c:	cinc	x1, x1, cs  // cs = hs, nlast
   21ca0:	subs	x0, x10, x1
   21ca4:	cmp	x10, x1
   21ca8:	lsr	x10, x1, #30
   21cac:	lsl	x1, x1, #34
   21cb0:	sbc	x10, x10, xzr
   21cb4:	adds	x1, x0, x1
   21cb8:	cinc	x10, x10, cs  // cs = hs, nlast
   21cbc:	sub	x0, x1, x19
   21cc0:	cmp	x10, #0x0
   21cc4:	ccmp	x19, x1, #0x0, eq  // eq = none
   21cc8:	csel	x0, x0, x1, ls  // ls = plast
   21ccc:	adds	x11, x11, x0
   21cd0:	add	x1, x2, #0x1
   21cd4:	sub	x0, x11, x19
   21cd8:	csel	x11, x0, x11, cs  // cs = hs, nlast
   21cdc:	cmp	x19, x11
   21ce0:	sub	x0, x11, x19
   21ce4:	csel	x11, x0, x11, ls  // ls = plast
   21ce8:	str	x11, [x8, x2, lsl #3]
   21cec:	str	x4, [x7, x2, lsl #3]
   21cf0:	cmp	x9, x2
   21cf4:	str	x3, [x23, x2, lsl #3]
   21cf8:	b.eq	21f74 <PyInit__decimal@@Base+0x5d34>  // b.none
   21cfc:	mov	x2, x1
   21d00:	ldr	x1, [x7, x2, lsl #3]
   21d04:	ldr	x11, [x23, x2, lsl #3]
   21d08:	ldr	x0, [x8, x2, lsl #3]
   21d0c:	adds	x4, x11, x1
   21d10:	sub	x3, x4, x19
   21d14:	mul	x10, x1, x6
   21d18:	csel	x3, x3, x4, cs  // cs = hs, nlast
   21d1c:	umulh	x4, x1, x6
   21d20:	cmp	x19, x3
   21d24:	sub	x12, x3, x19
   21d28:	csel	x3, x12, x3, ls  // ls = plast
   21d2c:	adds	x3, x0, x3
   21d30:	sub	x12, x3, x19
   21d34:	csel	x3, x12, x3, cs  // cs = hs, nlast
   21d38:	cmp	x19, x3
   21d3c:	sub	x12, x3, x19
   21d40:	csel	x3, x12, x3, ls  // ls = plast
   21d44:	subs	x13, x10, x4
   21d48:	cmp	x10, x4
   21d4c:	cset	x14, cc  // cc = lo, ul, last
   21d50:	cbz	x22, 21abc <PyInit__decimal@@Base+0x587c>
   21d54:	lsr	x10, x4, #32
   21d58:	lsl	x4, x4, #32
   21d5c:	adds	x4, x4, x13
   21d60:	sub	x10, x10, x14
   21d64:	cinc	x10, x10, cs  // cs = hs, nlast
   21d68:	subs	x12, x4, x10
   21d6c:	cmp	x4, x10
   21d70:	lsr	x13, x10, #32
   21d74:	lsl	x10, x10, #32
   21d78:	sbc	x13, x13, xzr
   21d7c:	adds	x10, x12, x10
   21d80:	cinc	x13, x13, cs  // cs = hs, nlast
   21d84:	sub	x4, x10, x19
   21d88:	cmp	x13, #0x0
   21d8c:	ccmp	x19, x10, #0x0, eq  // eq = none
   21d90:	csel	x4, x4, x10, ls  // ls = plast
   21d94:	b	21b1c <PyInit__decimal@@Base+0x58dc>
   21d98:	lsr	x1, x0, #32
   21d9c:	lsl	x0, x0, #32
   21da0:	adds	x0, x0, x12
   21da4:	sub	x1, x1, x13
   21da8:	cinc	x1, x1, cs  // cs = hs, nlast
   21dac:	subs	x10, x0, x1
   21db0:	cmp	x0, x1
   21db4:	lsr	x12, x1, #32
   21db8:	lsl	x1, x1, #32
   21dbc:	sbc	x12, x12, xzr
   21dc0:	adds	x1, x10, x1
   21dc4:	cinc	x12, x12, cs  // cs = hs, nlast
   21dc8:	sub	x0, x1, x19
   21dcc:	cmp	x12, #0x0
   21dd0:	ccmp	x19, x1, #0x0, eq  // eq = none
   21dd4:	csel	x0, x0, x1, ls  // ls = plast
   21dd8:	b	21ccc <PyInit__decimal@@Base+0x5a8c>
   21ddc:	lsr	x10, x1, #32
   21de0:	lsl	x1, x1, #32
   21de4:	adds	x1, x1, x13
   21de8:	sub	x10, x10, x14
   21dec:	cinc	x10, x10, cs  // cs = hs, nlast
   21df0:	subs	x12, x1, x10
   21df4:	cmp	x1, x10
   21df8:	lsr	x13, x10, #32
   21dfc:	lsl	x10, x10, #32
   21e00:	sbc	x13, x13, xzr
   21e04:	adds	x10, x12, x10
   21e08:	cinc	x13, x13, cs  // cs = hs, nlast
   21e0c:	sub	x1, x10, x19
   21e10:	cmp	x13, #0x0
   21e14:	ccmp	x19, x10, #0x0, eq  // eq = none
   21e18:	csel	x1, x1, x10, ls  // ls = plast
   21e1c:	b	21c3c <PyInit__decimal@@Base+0x59fc>
   21e20:	lsr	x12, x10, #32
   21e24:	lsl	x10, x10, #32
   21e28:	adds	x10, x10, x14
   21e2c:	sub	x12, x12, x15
   21e30:	cinc	x12, x12, cs  // cs = hs, nlast
   21e34:	subs	x13, x10, x12
   21e38:	cmp	x10, x12
   21e3c:	lsr	x14, x12, #32
   21e40:	lsl	x12, x12, #32
   21e44:	sbc	x14, x14, xzr
   21e48:	adds	x12, x13, x12
   21e4c:	cinc	x14, x14, cs  // cs = hs, nlast
   21e50:	sub	x10, x12, x19
   21e54:	cmp	x14, #0x0
   21e58:	ccmp	x19, x12, #0x0, eq  // eq = none
   21e5c:	csel	x10, x10, x12, ls  // ls = plast
   21e60:	b	21bac <PyInit__decimal@@Base+0x596c>
   21e64:	lsr	x12, x4, #24
   21e68:	lsl	x4, x4, #40
   21e6c:	adds	x4, x4, x13
   21e70:	sub	x12, x12, x14
   21e74:	cinc	x12, x12, cs  // cs = hs, nlast
   21e78:	subs	x13, x4, x12
   21e7c:	cmp	x4, x12
   21e80:	lsr	x10, x12, #24
   21e84:	lsl	x12, x12, #40
   21e88:	sbc	x10, x10, xzr
   21e8c:	adds	x12, x13, x12
   21e90:	cinc	x10, x10, cs  // cs = hs, nlast
   21e94:	subs	x4, x12, x10
   21e98:	cmp	x12, x10
   21e9c:	lsr	x12, x10, #24
   21ea0:	lsl	x10, x10, #40
   21ea4:	b	21b00 <PyInit__decimal@@Base+0x58c0>
   21ea8:	lsr	x10, x0, #24
   21eac:	lsl	x0, x0, #40
   21eb0:	adds	x0, x0, x12
   21eb4:	sub	x10, x10, x13
   21eb8:	cinc	x10, x10, cs  // cs = hs, nlast
   21ebc:	subs	x12, x0, x10
   21ec0:	cmp	x0, x10
   21ec4:	lsr	x1, x10, #24
   21ec8:	lsl	x10, x10, #40
   21ecc:	sbc	x1, x1, xzr
   21ed0:	adds	x10, x12, x10
   21ed4:	cinc	x1, x1, cs  // cs = hs, nlast
   21ed8:	subs	x0, x10, x1
   21edc:	cmp	x10, x1
   21ee0:	lsr	x10, x1, #24
   21ee4:	lsl	x1, x1, #40
   21ee8:	b	21cb0 <PyInit__decimal@@Base+0x5a70>
   21eec:	lsr	x12, x1, #24
   21ef0:	lsl	x1, x1, #40
   21ef4:	adds	x1, x1, x13
   21ef8:	sub	x12, x12, x14
   21efc:	cinc	x12, x12, cs  // cs = hs, nlast
   21f00:	subs	x13, x1, x12
   21f04:	cmp	x1, x12
   21f08:	lsr	x10, x12, #24
   21f0c:	lsl	x12, x12, #40
   21f10:	sbc	x10, x10, xzr
   21f14:	adds	x12, x13, x12
   21f18:	cinc	x10, x10, cs  // cs = hs, nlast
   21f1c:	subs	x1, x12, x10
   21f20:	cmp	x12, x10
   21f24:	lsr	x12, x10, #24
   21f28:	lsl	x10, x10, #40
   21f2c:	b	21c20 <PyInit__decimal@@Base+0x59e0>
   21f30:	lsr	x13, x10, #24
   21f34:	lsl	x10, x10, #40
   21f38:	adds	x10, x10, x14
   21f3c:	sub	x13, x13, x15
   21f40:	cinc	x13, x13, cs  // cs = hs, nlast
   21f44:	subs	x14, x10, x13
   21f48:	cmp	x10, x13
   21f4c:	lsr	x12, x13, #24
   21f50:	lsl	x13, x13, #40
   21f54:	sbc	x12, x12, xzr
   21f58:	adds	x13, x14, x13
   21f5c:	cinc	x12, x12, cs  // cs = hs, nlast
   21f60:	subs	x10, x13, x12
   21f64:	cmp	x13, x12
   21f68:	lsr	x13, x12, #24
   21f6c:	lsl	x12, x12, #40
   21f70:	b	21b90 <PyInit__decimal@@Base+0x5950>
   21f74:	mov	w1, #0xffffffff            	// #-1
   21f78:	mov	w2, w20
   21f7c:	mov	x0, x26
   21f80:	bl	3e830 <PyInit__decimal@@Base+0x225f0>
   21f84:	sub	x5, x25, #0x2
   21f88:	mov	x1, x25
   21f8c:	and	x5, x5, #0xfffffffffffffffe
   21f90:	add	x7, x23, #0x10
   21f94:	mov	x6, #0x1                   	// #1
   21f98:	mov	x3, x0
   21f9c:	mov	x4, x6
   21fa0:	mov	x2, #0x1                   	// #1
   21fa4:	b	22098 <PyInit__decimal@@Base+0x5e58>
   21fa8:	mul	x11, x2, x3
   21fac:	umulh	x2, x2, x3
   21fb0:	subs	x3, x11, x2
   21fb4:	cbnz	x22, 224b8 <PyInit__decimal@@Base+0x6278>
   21fb8:	cmp	x11, x2
   21fbc:	cset	x11, cc  // cc = lo, ul, last
   21fc0:	cbz	x24, 22500 <PyInit__decimal@@Base+0x62c0>
   21fc4:	lsr	x9, x2, #30
   21fc8:	lsl	x2, x2, #34
   21fcc:	adds	x2, x2, x3
   21fd0:	sub	x9, x9, x11
   21fd4:	cinc	x9, x9, cs  // cs = hs, nlast
   21fd8:	subs	x11, x2, x9
   21fdc:	cmp	x2, x9
   21fe0:	lsr	x3, x9, #30
   21fe4:	lsl	x9, x9, #34
   21fe8:	sbc	x3, x3, xzr
   21fec:	adds	x9, x11, x9
   21ff0:	cinc	x3, x3, cs  // cs = hs, nlast
   21ff4:	subs	x2, x9, x3
   21ff8:	cmp	x9, x3
   21ffc:	lsr	x9, x3, #30
   22000:	lsl	x3, x3, #34
   22004:	sbc	x9, x9, xzr
   22008:	adds	x3, x2, x3
   2200c:	cinc	x9, x9, cs  // cs = hs, nlast
   22010:	sub	x2, x3, x19
   22014:	cmp	x9, #0x0
   22018:	ccmp	x19, x3, #0x0, eq  // eq = none
   2201c:	csel	x2, x2, x3, ls  // ls = plast
   22020:	subs	x9, x10, x8
   22024:	cmp	x10, x8
   22028:	cset	x10, cc  // cc = lo, ul, last
   2202c:	cbz	x24, 22474 <PyInit__decimal@@Base+0x6234>
   22030:	lsr	x3, x8, #30
   22034:	lsl	x8, x8, #34
   22038:	adds	x8, x8, x9
   2203c:	sub	x3, x3, x10
   22040:	cinc	x3, x3, cs  // cs = hs, nlast
   22044:	subs	x9, x8, x3
   22048:	cmp	x8, x3
   2204c:	lsr	x8, x3, #30
   22050:	lsl	x3, x3, #34
   22054:	sbc	x8, x8, xzr
   22058:	adds	x9, x9, x3
   2205c:	cinc	x8, x8, cs  // cs = hs, nlast
   22060:	subs	x3, x9, x8
   22064:	cmp	x9, x8
   22068:	lsr	x9, x8, #30
   2206c:	lsl	x8, x8, #34
   22070:	sbc	x9, x9, xzr
   22074:	adds	x8, x3, x8
   22078:	cinc	x9, x9, cs  // cs = hs, nlast
   2207c:	sub	x3, x8, x19
   22080:	cmp	x9, #0x0
   22084:	ccmp	x19, x8, #0x0, eq  // eq = none
   22088:	csel	x3, x3, x8, ls  // ls = plast
   2208c:	cmp	x4, #0x1
   22090:	b.eq	220fc <PyInit__decimal@@Base+0x5ebc>  // b.none
   22094:	mov	x4, #0x1                   	// #1
   22098:	mul	x10, x3, x3
   2209c:	cmp	x4, #0x1
   220a0:	umulh	x8, x3, x3
   220a4:	b.eq	21fa8 <PyInit__decimal@@Base+0x5d68>  // b.none
   220a8:	cbz	x22, 22020 <PyInit__decimal@@Base+0x5de0>
   220ac:	subs	x3, x10, x8
   220b0:	lsr	x9, x8, #32
   220b4:	cmp	x10, x8
   220b8:	lsl	x8, x8, #32
   220bc:	sbc	x9, x9, xzr
   220c0:	adds	x8, x3, x8
   220c4:	cinc	x9, x9, cs  // cs = hs, nlast
   220c8:	subs	x3, x8, x9
   220cc:	cmp	x8, x9
   220d0:	lsr	x8, x9, #32
   220d4:	lsl	x9, x9, #32
   220d8:	sbc	x8, x8, xzr
   220dc:	adds	x9, x3, x9
   220e0:	cinc	x8, x8, cs  // cs = hs, nlast
   220e4:	sub	x3, x9, x19
   220e8:	cmp	x8, #0x0
   220ec:	ccmp	x19, x9, #0x0, eq  // eq = none
   220f0:	csel	x3, x3, x9, ls  // ls = plast
   220f4:	cmp	x4, #0x1
   220f8:	b.ne	22094 <PyInit__decimal@@Base+0x5e54>  // b.any
   220fc:	mul	x8, x2, x2
   22100:	umulh	x3, x2, x2
   22104:	subs	x9, x8, x3
   22108:	cmp	x8, x3
   2210c:	cset	x10, cc  // cc = lo, ul, last
   22110:	cbnz	x22, 22750 <PyInit__decimal@@Base+0x6510>
   22114:	cbz	x24, 22794 <PyInit__decimal@@Base+0x6554>
   22118:	lsr	x8, x3, #30
   2211c:	lsl	x3, x3, #34
   22120:	adds	x3, x3, x9
   22124:	sub	x8, x8, x10
   22128:	cinc	x8, x8, cs  // cs = hs, nlast
   2212c:	subs	x9, x3, x8
   22130:	cmp	x3, x8
   22134:	lsr	x3, x8, #30
   22138:	lsl	x8, x8, #34
   2213c:	sbc	x3, x3, xzr
   22140:	adds	x8, x9, x8
   22144:	cinc	x3, x3, cs  // cs = hs, nlast
   22148:	subs	x10, x8, x3
   2214c:	cmp	x8, x3
   22150:	lsr	x8, x3, #30
   22154:	lsl	x3, x3, #34
   22158:	sbc	x8, x8, xzr
   2215c:	adds	x3, x10, x3
   22160:	cinc	x8, x8, cs  // cs = hs, nlast
   22164:	sub	x10, x3, x19
   22168:	cmp	x8, #0x0
   2216c:	ccmp	x19, x3, #0x0, eq  // eq = none
   22170:	csel	x10, x10, x3, ls  // ls = plast
   22174:	cmp	x25, #0x1
   22178:	b.eq	226f4 <PyInit__decimal@@Base+0x64b4>  // b.none
   2217c:	add	x11, x1, x5
   22180:	add	x9, x23, x1, lsl #3
   22184:	add	x11, x7, x11, lsl #3
   22188:	b	22340 <PyInit__decimal@@Base+0x6100>
   2218c:	cbz	x24, 22544 <PyInit__decimal@@Base+0x6304>
   22190:	lsr	x12, x3, #30
   22194:	lsl	x3, x3, #34
   22198:	adds	x3, x3, x13
   2219c:	sub	x12, x12, x14
   221a0:	cinc	x12, x12, cs  // cs = hs, nlast
   221a4:	mul	x14, x8, x2
   221a8:	subs	x16, x3, x12
   221ac:	umulh	x8, x8, x2
   221b0:	cmp	x3, x12
   221b4:	lsr	x13, x12, #30
   221b8:	lsl	x12, x12, #34
   221bc:	sbc	x13, x13, xzr
   221c0:	adds	x16, x16, x12
   221c4:	lsl	x15, x8, #34
   221c8:	cinc	x13, x13, cs  // cs = hs, nlast
   221cc:	lsr	x3, x8, #30
   221d0:	subs	x12, x16, x13
   221d4:	mul	x18, x4, x10
   221d8:	cmp	x16, x13
   221dc:	lsr	x16, x13, #30
   221e0:	lsl	x13, x13, #34
   221e4:	sbc	x16, x16, xzr
   221e8:	adds	x12, x12, x13
   221ec:	umulh	x4, x4, x10
   221f0:	cinc	x16, x16, cs  // cs = hs, nlast
   221f4:	sub	x17, x12, x19
   221f8:	cmp	x16, #0x0
   221fc:	mul	x16, x2, x10
   22200:	ccmp	x19, x12, #0x0, eq  // eq = none
   22204:	lsr	x13, x4, #30
   22208:	csel	x12, x17, x12, ls  // ls = plast
   2220c:	subs	x17, x14, x8
   22210:	cmp	x14, x8
   22214:	lsl	x30, x4, #34
   22218:	sbc	x3, x3, xzr
   2221c:	adds	x14, x17, x15
   22220:	cinc	x3, x3, cs  // cs = hs, nlast
   22224:	umulh	x2, x2, x10
   22228:	subs	x8, x14, x3
   2222c:	cmp	x14, x3
   22230:	lsr	x15, x3, #30
   22234:	lsl	x3, x3, #34
   22238:	sbc	x15, x15, xzr
   2223c:	adds	x3, x8, x3
   22240:	lsl	x17, x2, #34
   22244:	cinc	x15, x15, cs  // cs = hs, nlast
   22248:	lsr	x8, x2, #30
   2224c:	subs	x14, x3, x15
   22250:	cmp	x3, x15
   22254:	lsr	x27, x15, #30
   22258:	lsl	x15, x15, #34
   2225c:	sbc	x27, x27, xzr
   22260:	adds	x15, x14, x15
   22264:	cinc	x27, x27, cs  // cs = hs, nlast
   22268:	sub	x14, x15, x19
   2226c:	cmp	x27, #0x0
   22270:	ccmp	x19, x15, #0x0, eq  // eq = none
   22274:	csel	x14, x14, x15, ls  // ls = plast
   22278:	subs	x3, x18, x4
   2227c:	cmp	x18, x4
   22280:	sbc	x13, x13, xzr
   22284:	adds	x30, x3, x30
   22288:	cinc	x13, x13, cs  // cs = hs, nlast
   2228c:	subs	x4, x30, x13
   22290:	cmp	x30, x13
   22294:	lsr	x3, x13, #30
   22298:	lsl	x13, x13, #34
   2229c:	sbc	x3, x3, xzr
   222a0:	adds	x13, x4, x13
   222a4:	cinc	x3, x3, cs  // cs = hs, nlast
   222a8:	subs	x4, x13, x3
   222ac:	cmp	x13, x3
   222b0:	lsr	x13, x3, #30
   222b4:	lsl	x3, x3, #34
   222b8:	sbc	x13, x13, xzr
   222bc:	adds	x3, x4, x3
   222c0:	cinc	x13, x13, cs  // cs = hs, nlast
   222c4:	sub	x4, x3, x19
   222c8:	cmp	x13, #0x0
   222cc:	ccmp	x19, x3, #0x0, eq  // eq = none
   222d0:	csel	x4, x4, x3, ls  // ls = plast
   222d4:	subs	x3, x16, x2
   222d8:	cmp	x16, x2
   222dc:	sbc	x8, x8, xzr
   222e0:	adds	x17, x3, x17
   222e4:	cinc	x8, x8, cs  // cs = hs, nlast
   222e8:	subs	x2, x17, x8
   222ec:	cmp	x17, x8
   222f0:	lsr	x3, x8, #30
   222f4:	lsl	x8, x8, #34
   222f8:	sbc	x3, x3, xzr
   222fc:	adds	x8, x2, x8
   22300:	cinc	x3, x3, cs  // cs = hs, nlast
   22304:	subs	x2, x8, x3
   22308:	cmp	x8, x3
   2230c:	lsr	x8, x3, #30
   22310:	lsl	x3, x3, #34
   22314:	sbc	x8, x8, xzr
   22318:	adds	x3, x2, x3
   2231c:	cinc	x8, x8, cs  // cs = hs, nlast
   22320:	stp	x12, x14, [x9]
   22324:	cmp	x8, #0x0
   22328:	ccmp	x19, x3, #0x0, eq  // eq = none
   2232c:	sub	x2, x3, x19
   22330:	add	x9, x9, #0x10
   22334:	csel	x2, x2, x3, ls  // ls = plast
   22338:	cmp	x11, x9
   2233c:	b.eq	226f4 <PyInit__decimal@@Base+0x64b4>  // b.none
   22340:	ldp	x3, x8, [x9]
   22344:	mul	x12, x4, x3
   22348:	umulh	x3, x4, x3
   2234c:	subs	x13, x12, x3
   22350:	cmp	x12, x3
   22354:	cset	x14, cc  // cc = lo, ul, last
   22358:	cbz	x22, 2218c <PyInit__decimal@@Base+0x5f4c>
   2235c:	lsr	x12, x3, #32
   22360:	lsl	x3, x3, #32
   22364:	adds	x3, x3, x13
   22368:	sub	x12, x12, x14
   2236c:	cinc	x12, x12, cs  // cs = hs, nlast
   22370:	mul	x14, x8, x2
   22374:	subs	x13, x3, x12
   22378:	umulh	x8, x8, x2
   2237c:	cmp	x3, x12
   22380:	lsr	x15, x12, #32
   22384:	lsl	x12, x12, #32
   22388:	sbc	x15, x15, xzr
   2238c:	adds	x12, x13, x12
   22390:	lsr	x3, x8, #32
   22394:	cinc	x15, x15, cs  // cs = hs, nlast
   22398:	sub	x13, x12, x19
   2239c:	cmp	x15, #0x0
   223a0:	lsl	x15, x8, #32
   223a4:	ccmp	x19, x12, #0x0, eq  // eq = none
   223a8:	mul	x16, x4, x10
   223ac:	csel	x12, x13, x12, ls  // ls = plast
   223b0:	subs	x13, x14, x8
   223b4:	cmp	x14, x8
   223b8:	umulh	x4, x4, x10
   223bc:	sbc	x3, x3, xzr
   223c0:	adds	x13, x13, x15
   223c4:	cinc	x3, x3, cs  // cs = hs, nlast
   223c8:	mul	x15, x2, x10
   223cc:	subs	x14, x13, x3
   223d0:	lsr	x8, x4, #32
   223d4:	cmp	x13, x3
   223d8:	lsr	x17, x3, #32
   223dc:	lsl	x3, x3, #32
   223e0:	sbc	x17, x17, xzr
   223e4:	adds	x3, x14, x3
   223e8:	lsl	x18, x4, #32
   223ec:	cinc	x17, x17, cs  // cs = hs, nlast
   223f0:	sub	x14, x3, x19
   223f4:	cmp	x17, #0x0
   223f8:	umulh	x2, x2, x10
   223fc:	ccmp	x19, x3, #0x0, eq  // eq = none
   22400:	csel	x14, x14, x3, ls  // ls = plast
   22404:	subs	x13, x16, x4
   22408:	cmp	x16, x4
   2240c:	lsr	x3, x2, #32
   22410:	sbc	x8, x8, xzr
   22414:	adds	x13, x13, x18
   22418:	cinc	x8, x8, cs  // cs = hs, nlast
   2241c:	lsl	x16, x2, #32
   22420:	subs	x4, x13, x8
   22424:	cmp	x13, x8
   22428:	lsr	x13, x8, #32
   2242c:	lsl	x8, x8, #32
   22430:	sbc	x13, x13, xzr
   22434:	adds	x8, x4, x8
   22438:	cinc	x13, x13, cs  // cs = hs, nlast
   2243c:	sub	x4, x8, x19
   22440:	cmp	x13, #0x0
   22444:	ccmp	x19, x8, #0x0, eq  // eq = none
   22448:	csel	x4, x4, x8, ls  // ls = plast
   2244c:	subs	x8, x15, x2
   22450:	cmp	x15, x2
   22454:	sbc	x3, x3, xzr
   22458:	adds	x8, x8, x16
   2245c:	cinc	x3, x3, cs  // cs = hs, nlast
   22460:	subs	x2, x8, x3
   22464:	cmp	x8, x3
   22468:	lsr	x8, x3, #32
   2246c:	lsl	x3, x3, #32
   22470:	b	22314 <PyInit__decimal@@Base+0x60d4>
   22474:	lsr	x3, x8, #24
   22478:	lsl	x8, x8, #40
   2247c:	adds	x8, x8, x9
   22480:	sub	x3, x3, x10
   22484:	cinc	x3, x3, cs  // cs = hs, nlast
   22488:	subs	x9, x8, x3
   2248c:	cmp	x8, x3
   22490:	lsr	x8, x3, #24
   22494:	lsl	x3, x3, #40
   22498:	sbc	x8, x8, xzr
   2249c:	adds	x9, x9, x3
   224a0:	cinc	x8, x8, cs  // cs = hs, nlast
   224a4:	subs	x3, x9, x8
   224a8:	cmp	x9, x8
   224ac:	lsr	x9, x8, #24
   224b0:	lsl	x8, x8, #40
   224b4:	b	22070 <PyInit__decimal@@Base+0x5e30>
   224b8:	cmp	x11, x2
   224bc:	lsr	x9, x2, #32
   224c0:	lsl	x2, x2, #32
   224c4:	sbc	x9, x9, xzr
   224c8:	adds	x3, x3, x2
   224cc:	cinc	x9, x9, cs  // cs = hs, nlast
   224d0:	subs	x2, x3, x9
   224d4:	cmp	x3, x9
   224d8:	lsr	x3, x9, #32
   224dc:	lsl	x9, x9, #32
   224e0:	sbc	x3, x3, xzr
   224e4:	adds	x9, x2, x9
   224e8:	cinc	x3, x3, cs  // cs = hs, nlast
   224ec:	sub	x2, x9, x19
   224f0:	cmp	x3, #0x0
   224f4:	ccmp	x19, x9, #0x0, eq  // eq = none
   224f8:	csel	x2, x2, x9, ls  // ls = plast
   224fc:	b	220ac <PyInit__decimal@@Base+0x5e6c>
   22500:	lsr	x9, x2, #24
   22504:	lsl	x2, x2, #40
   22508:	adds	x2, x2, x3
   2250c:	sub	x9, x9, x11
   22510:	cinc	x9, x9, cs  // cs = hs, nlast
   22514:	subs	x11, x2, x9
   22518:	cmp	x2, x9
   2251c:	lsr	x3, x9, #24
   22520:	lsl	x9, x9, #40
   22524:	sbc	x3, x3, xzr
   22528:	adds	x9, x11, x9
   2252c:	cinc	x3, x3, cs  // cs = hs, nlast
   22530:	subs	x2, x9, x3
   22534:	cmp	x9, x3
   22538:	lsr	x9, x3, #24
   2253c:	lsl	x3, x3, #40
   22540:	b	22004 <PyInit__decimal@@Base+0x5dc4>
   22544:	lsr	x12, x3, #24
   22548:	lsl	x3, x3, #40
   2254c:	adds	x3, x3, x13
   22550:	sub	x12, x12, x14
   22554:	cinc	x12, x12, cs  // cs = hs, nlast
   22558:	mul	x14, x2, x8
   2255c:	subs	x15, x3, x12
   22560:	umulh	x8, x2, x8
   22564:	cmp	x3, x12
   22568:	lsr	x13, x12, #24
   2256c:	lsl	x12, x12, #40
   22570:	sbc	x13, x13, xzr
   22574:	adds	x15, x15, x12
   22578:	lsr	x3, x8, #24
   2257c:	cinc	x13, x13, cs  // cs = hs, nlast
   22580:	lsl	x18, x8, #40
   22584:	subs	x12, x15, x13
   22588:	mul	x17, x4, x10
   2258c:	cmp	x15, x13
   22590:	lsr	x15, x13, #24
   22594:	lsl	x13, x13, #40
   22598:	sbc	x15, x15, xzr
   2259c:	adds	x13, x12, x13
   225a0:	umulh	x4, x4, x10
   225a4:	cinc	x15, x15, cs  // cs = hs, nlast
   225a8:	sub	x12, x13, x19
   225ac:	cmp	x15, #0x0
   225b0:	mul	x16, x2, x10
   225b4:	ccmp	x19, x13, #0x0, eq  // eq = none
   225b8:	lsr	x15, x4, #24
   225bc:	csel	x12, x12, x13, ls  // ls = plast
   225c0:	subs	x13, x14, x8
   225c4:	cmp	x14, x8
   225c8:	lsl	x30, x4, #40
   225cc:	sbc	x3, x3, xzr
   225d0:	adds	x8, x13, x18
   225d4:	cinc	x3, x3, cs  // cs = hs, nlast
   225d8:	umulh	x2, x2, x10
   225dc:	subs	x13, x8, x3
   225e0:	cmp	x8, x3
   225e4:	lsr	x8, x3, #24
   225e8:	lsl	x3, x3, #40
   225ec:	sbc	x8, x8, xzr
   225f0:	adds	x3, x13, x3
   225f4:	lsl	x18, x2, #40
   225f8:	cinc	x8, x8, cs  // cs = hs, nlast
   225fc:	lsr	x13, x2, #24
   22600:	subs	x14, x3, x8
   22604:	cmp	x3, x8
   22608:	lsr	x27, x8, #24
   2260c:	lsl	x8, x8, #40
   22610:	sbc	x27, x27, xzr
   22614:	adds	x8, x14, x8
   22618:	cinc	x27, x27, cs  // cs = hs, nlast
   2261c:	sub	x14, x8, x19
   22620:	cmp	x27, #0x0
   22624:	ccmp	x19, x8, #0x0, eq  // eq = none
   22628:	csel	x14, x14, x8, ls  // ls = plast
   2262c:	subs	x3, x17, x4
   22630:	cmp	x17, x4
   22634:	stp	x12, x14, [x9]
   22638:	sbc	x15, x15, xzr
   2263c:	adds	x30, x3, x30
   22640:	add	x9, x9, #0x10
   22644:	cinc	x15, x15, cs  // cs = hs, nlast
   22648:	subs	x3, x30, x15
   2264c:	cmp	x30, x15
   22650:	lsr	x8, x15, #24
   22654:	lsl	x15, x15, #40
   22658:	sbc	x8, x8, xzr
   2265c:	adds	x15, x3, x15
   22660:	cinc	x8, x8, cs  // cs = hs, nlast
   22664:	subs	x4, x15, x8
   22668:	cmp	x15, x8
   2266c:	lsr	x3, x8, #24
   22670:	lsl	x8, x8, #40
   22674:	sbc	x3, x3, xzr
   22678:	adds	x8, x4, x8
   2267c:	cinc	x3, x3, cs  // cs = hs, nlast
   22680:	sub	x4, x8, x19
   22684:	cmp	x3, #0x0
   22688:	ccmp	x19, x8, #0x0, eq  // eq = none
   2268c:	csel	x4, x4, x8, ls  // ls = plast
   22690:	subs	x3, x16, x2
   22694:	cmp	x16, x2
   22698:	sbc	x13, x13, xzr
   2269c:	adds	x18, x3, x18
   226a0:	cinc	x13, x13, cs  // cs = hs, nlast
   226a4:	subs	x2, x18, x13
   226a8:	cmp	x18, x13
   226ac:	lsr	x8, x13, #24
   226b0:	lsl	x13, x13, #40
   226b4:	sbc	x8, x8, xzr
   226b8:	adds	x13, x2, x13
   226bc:	cinc	x8, x8, cs  // cs = hs, nlast
   226c0:	subs	x2, x13, x8
   226c4:	cmp	x13, x8
   226c8:	lsr	x3, x8, #24
   226cc:	lsl	x8, x8, #40
   226d0:	sbc	x3, x3, xzr
   226d4:	adds	x8, x2, x8
   226d8:	cinc	x3, x3, cs  // cs = hs, nlast
   226dc:	sub	x2, x8, x19
   226e0:	cmp	x3, #0x0
   226e4:	ccmp	x19, x8, #0x0, eq  // eq = none
   226e8:	csel	x2, x2, x8, ls  // ls = plast
   226ec:	cmp	x11, x9
   226f0:	b.ne	22340 <PyInit__decimal@@Base+0x6100>  // b.any
   226f4:	add	x1, x1, x25
   226f8:	cmp	x6, #0x2
   226fc:	b.eq	22708 <PyInit__decimal@@Base+0x64c8>  // b.none
   22700:	mov	x6, #0x2                   	// #2
   22704:	b	21f98 <PyInit__decimal@@Base+0x5d58>
   22708:	add	x26, x23, x26, lsl #3
   2270c:	b	22728 <PyInit__decimal@@Base+0x64e8>
   22710:	mov	x0, x23
   22714:	mov	w2, w20
   22718:	mov	x1, x25
   2271c:	add	x23, x23, x21
   22720:	bl	3f150 <PyInit__decimal@@Base+0x22f10>
   22724:	cbz	w0, 22734 <PyInit__decimal@@Base+0x64f4>
   22728:	cmp	x23, x26
   2272c:	b.cc	22710 <PyInit__decimal@@Base+0x64d0>  // b.lo, b.ul, b.last
   22730:	mov	w0, #0x1                   	// #1
   22734:	ldp	x19, x20, [sp, #16]
   22738:	ldp	x21, x22, [sp, #32]
   2273c:	ldp	x23, x24, [sp, #48]
   22740:	ldp	x25, x26, [sp, #64]
   22744:	ldr	x27, [sp, #80]
   22748:	ldp	x29, x30, [sp], #128
   2274c:	ret
   22750:	lsr	x8, x3, #32
   22754:	lsl	x3, x3, #32
   22758:	adds	x3, x3, x9
   2275c:	sub	x8, x8, x10
   22760:	cinc	x8, x8, cs  // cs = hs, nlast
   22764:	subs	x10, x3, x8
   22768:	cmp	x3, x8
   2276c:	lsr	x3, x8, #32
   22770:	lsl	x8, x8, #32
   22774:	sbc	x3, x3, xzr
   22778:	adds	x8, x10, x8
   2277c:	cinc	x3, x3, cs  // cs = hs, nlast
   22780:	sub	x10, x8, x19
   22784:	cmp	x3, #0x0
   22788:	ccmp	x19, x8, #0x0, eq  // eq = none
   2278c:	csel	x10, x10, x8, ls  // ls = plast
   22790:	b	22174 <PyInit__decimal@@Base+0x5f34>
   22794:	lsr	x8, x3, #24
   22798:	lsl	x3, x3, #40
   2279c:	adds	x3, x3, x9
   227a0:	sub	x8, x8, x10
   227a4:	cinc	x8, x8, cs  // cs = hs, nlast
   227a8:	subs	x9, x3, x8
   227ac:	cmp	x3, x8
   227b0:	lsr	x3, x8, #24
   227b4:	lsl	x8, x8, #40
   227b8:	sbc	x3, x3, xzr
   227bc:	adds	x8, x9, x8
   227c0:	cinc	x3, x3, cs  // cs = hs, nlast
   227c4:	subs	x10, x8, x3
   227c8:	cmp	x8, x3
   227cc:	lsr	x8, x3, #24
   227d0:	lsl	x3, x3, #40
   227d4:	b	22158 <PyInit__decimal@@Base+0x5f18>
   227d8:	stp	x29, x30, [sp, #-112]!
   227dc:	mov	x29, sp
   227e0:	stp	x25, x26, [sp, #64]
   227e4:	mov	x25, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   227e8:	movk	x25, #0xaaab
   227ec:	stp	x19, x20, [sp, #16]
   227f0:	mov	w26, w2
   227f4:	umulh	x25, x1, x25
   227f8:	stp	x21, x22, [sp, #32]
   227fc:	mov	x19, x0
   22800:	mov	x22, x1
   22804:	lsr	x25, x25, #1
   22808:	stp	x23, x24, [sp, #48]
   2280c:	add	x23, x0, x1, lsl #3
   22810:	mov	x21, x0
   22814:	cmp	x0, x23
   22818:	lsl	x20, x25, #3
   2281c:	b.cc	2282c <PyInit__decimal@@Base+0x65ec>  // b.lo, b.ul, b.last
   22820:	b	2285c <PyInit__decimal@@Base+0x661c>
   22824:	cmp	x19, x23
   22828:	b.cs	2285c <PyInit__decimal@@Base+0x661c>  // b.hs, b.nlast
   2282c:	mov	x0, x19
   22830:	mov	w2, w26
   22834:	mov	x1, x25
   22838:	add	x19, x19, x20
   2283c:	bl	3fb98 <PyInit__decimal@@Base+0x23958>
   22840:	cbnz	w0, 22824 <PyInit__decimal@@Base+0x65e4>
   22844:	ldp	x19, x20, [sp, #16]
   22848:	ldp	x21, x22, [sp, #32]
   2284c:	ldp	x23, x24, [sp, #48]
   22850:	ldp	x25, x26, [sp, #64]
   22854:	ldp	x29, x30, [sp], #112
   22858:	ret
   2285c:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   22860:	add	x3, x3, #0x460
   22864:	mov	w2, w26
   22868:	mov	x0, x22
   2286c:	mov	w1, #0x1                   	// #1
   22870:	ldr	x19, [x3, w26, sxtw #3]
   22874:	bl	3e830 <PyInit__decimal@@Base+0x225f0>
   22878:	mov	x2, x25
   2287c:	mov	x5, #0x1                   	// #1
   22880:	and	x23, x19, #0x100000000
   22884:	and	x24, x19, #0x400000000
   22888:	mov	x3, x0
   2288c:	mov	x4, x5
   22890:	mov	x1, #0x1                   	// #1
   22894:	b	22988 <PyInit__decimal@@Base+0x6748>
   22898:	mul	x9, x1, x3
   2289c:	umulh	x1, x1, x3
   228a0:	subs	x3, x9, x1
   228a4:	cbnz	x23, 22da8 <PyInit__decimal@@Base+0x6b68>
   228a8:	cmp	x9, x1
   228ac:	cset	x9, cc  // cc = lo, ul, last
   228b0:	cbz	x24, 22df0 <PyInit__decimal@@Base+0x6bb0>
   228b4:	lsr	x7, x1, #30
   228b8:	lsl	x1, x1, #34
   228bc:	adds	x1, x1, x3
   228c0:	sub	x7, x7, x9
   228c4:	cinc	x7, x7, cs  // cs = hs, nlast
   228c8:	subs	x9, x1, x7
   228cc:	cmp	x1, x7
   228d0:	lsr	x3, x7, #30
   228d4:	lsl	x7, x7, #34
   228d8:	sbc	x3, x3, xzr
   228dc:	adds	x7, x9, x7
   228e0:	cinc	x3, x3, cs  // cs = hs, nlast
   228e4:	subs	x1, x7, x3
   228e8:	cmp	x7, x3
   228ec:	lsr	x7, x3, #30
   228f0:	lsl	x3, x3, #34
   228f4:	sbc	x7, x7, xzr
   228f8:	adds	x3, x1, x3
   228fc:	cinc	x7, x7, cs  // cs = hs, nlast
   22900:	sub	x1, x3, x19
   22904:	cmp	x7, #0x0
   22908:	ccmp	x19, x3, #0x0, eq  // eq = none
   2290c:	csel	x1, x1, x3, ls  // ls = plast
   22910:	subs	x7, x8, x6
   22914:	cmp	x8, x6
   22918:	cset	x8, cc  // cc = lo, ul, last
   2291c:	cbz	x24, 22d64 <PyInit__decimal@@Base+0x6b24>
   22920:	lsr	x3, x6, #30
   22924:	lsl	x6, x6, #34
   22928:	adds	x6, x6, x7
   2292c:	sub	x3, x3, x8
   22930:	cinc	x3, x3, cs  // cs = hs, nlast
   22934:	subs	x7, x6, x3
   22938:	cmp	x6, x3
   2293c:	lsr	x6, x3, #30
   22940:	lsl	x3, x3, #34
   22944:	sbc	x6, x6, xzr
   22948:	adds	x7, x7, x3
   2294c:	cinc	x6, x6, cs  // cs = hs, nlast
   22950:	subs	x3, x7, x6
   22954:	cmp	x7, x6
   22958:	lsr	x7, x6, #30
   2295c:	lsl	x6, x6, #34
   22960:	sbc	x7, x7, xzr
   22964:	adds	x6, x3, x6
   22968:	cinc	x7, x7, cs  // cs = hs, nlast
   2296c:	sub	x3, x6, x19
   22970:	cmp	x7, #0x0
   22974:	ccmp	x19, x6, #0x0, eq  // eq = none
   22978:	csel	x3, x3, x6, ls  // ls = plast
   2297c:	cmp	x4, #0x1
   22980:	b.eq	229ec <PyInit__decimal@@Base+0x67ac>  // b.none
   22984:	mov	x4, #0x1                   	// #1
   22988:	mul	x8, x3, x3
   2298c:	cmp	x4, #0x1
   22990:	umulh	x6, x3, x3
   22994:	b.eq	22898 <PyInit__decimal@@Base+0x6658>  // b.none
   22998:	cbz	x23, 22910 <PyInit__decimal@@Base+0x66d0>
   2299c:	subs	x3, x8, x6
   229a0:	lsr	x7, x6, #32
   229a4:	cmp	x8, x6
   229a8:	lsl	x6, x6, #32
   229ac:	sbc	x7, x7, xzr
   229b0:	adds	x6, x3, x6
   229b4:	cinc	x7, x7, cs  // cs = hs, nlast
   229b8:	subs	x3, x6, x7
   229bc:	cmp	x6, x7
   229c0:	lsr	x6, x7, #32
   229c4:	lsl	x7, x7, #32
   229c8:	sbc	x6, x6, xzr
   229cc:	adds	x7, x3, x7
   229d0:	cinc	x6, x6, cs  // cs = hs, nlast
   229d4:	sub	x3, x7, x19
   229d8:	cmp	x6, #0x0
   229dc:	ccmp	x19, x7, #0x0, eq  // eq = none
   229e0:	csel	x3, x3, x7, ls  // ls = plast
   229e4:	cmp	x4, #0x1
   229e8:	b.ne	22984 <PyInit__decimal@@Base+0x6744>  // b.any
   229ec:	mul	x6, x1, x1
   229f0:	umulh	x3, x1, x1
   229f4:	subs	x7, x6, x3
   229f8:	cmp	x6, x3
   229fc:	cset	x8, cc  // cc = lo, ul, last
   22a00:	cbnz	x23, 2354c <PyInit__decimal@@Base+0x730c>
   22a04:	cbnz	x24, 22e34 <PyInit__decimal@@Base+0x6bf4>
   22a08:	lsr	x6, x3, #24
   22a0c:	lsl	x3, x3, #40
   22a10:	adds	x3, x3, x7
   22a14:	sub	x6, x6, x8
   22a18:	cinc	x6, x6, cs  // cs = hs, nlast
   22a1c:	subs	x7, x3, x6
   22a20:	cmp	x3, x6
   22a24:	lsr	x3, x6, #24
   22a28:	lsl	x6, x6, #40
   22a2c:	sbc	x3, x3, xzr
   22a30:	adds	x6, x7, x6
   22a34:	cinc	x3, x3, cs  // cs = hs, nlast
   22a38:	subs	x8, x6, x3
   22a3c:	cmp	x6, x3
   22a40:	lsr	x6, x3, #24
   22a44:	lsl	x3, x3, #40
   22a48:	sbc	x6, x6, xzr
   22a4c:	adds	x3, x8, x3
   22a50:	cinc	x6, x6, cs  // cs = hs, nlast
   22a54:	sub	x8, x3, x19
   22a58:	cmp	x6, #0x0
   22a5c:	ccmp	x19, x3, #0x0, eq  // eq = none
   22a60:	csel	x8, x8, x3, ls  // ls = plast
   22a64:	cmp	x22, #0x2
   22a68:	add	x7, x21, x2, lsl #3
   22a6c:	mov	x9, #0x0                   	// #0
   22a70:	b.hi	22c30 <PyInit__decimal@@Base+0x69f0>  // b.pmore
   22a74:	b	2302c <PyInit__decimal@@Base+0x6dec>
   22a78:	cbz	x24, 22e78 <PyInit__decimal@@Base+0x6c38>
   22a7c:	lsr	x10, x3, #30
   22a80:	lsl	x3, x3, #34
   22a84:	adds	x3, x3, x11
   22a88:	sub	x10, x10, x12
   22a8c:	cinc	x10, x10, cs  // cs = hs, nlast
   22a90:	mul	x13, x6, x1
   22a94:	subs	x12, x3, x10
   22a98:	umulh	x6, x6, x1
   22a9c:	cmp	x3, x10
   22aa0:	lsr	x11, x10, #30
   22aa4:	lsl	x10, x10, #34
   22aa8:	sbc	x11, x11, xzr
   22aac:	adds	x12, x12, x10
   22ab0:	lsl	x15, x6, #34
   22ab4:	cinc	x11, x11, cs  // cs = hs, nlast
   22ab8:	lsr	x3, x6, #30
   22abc:	subs	x10, x12, x11
   22ac0:	mul	x16, x4, x8
   22ac4:	cmp	x12, x11
   22ac8:	lsr	x12, x11, #30
   22acc:	lsl	x11, x11, #34
   22ad0:	sbc	x12, x12, xzr
   22ad4:	adds	x10, x10, x11
   22ad8:	umulh	x4, x4, x8
   22adc:	cinc	x12, x12, cs  // cs = hs, nlast
   22ae0:	sub	x17, x10, x19
   22ae4:	cmp	x12, #0x0
   22ae8:	mul	x14, x1, x8
   22aec:	ccmp	x19, x10, #0x0, eq  // eq = none
   22af0:	lsr	x11, x4, #30
   22af4:	csel	x10, x17, x10, ls  // ls = plast
   22af8:	subs	x12, x13, x6
   22afc:	cmp	x13, x6
   22b00:	lsl	x17, x4, #34
   22b04:	sbc	x3, x3, xzr
   22b08:	adds	x12, x12, x15
   22b0c:	cinc	x3, x3, cs  // cs = hs, nlast
   22b10:	umulh	x1, x1, x8
   22b14:	subs	x6, x12, x3
   22b18:	cmp	x12, x3
   22b1c:	lsr	x12, x3, #30
   22b20:	lsl	x3, x3, #34
   22b24:	sbc	x12, x12, xzr
   22b28:	adds	x3, x6, x3
   22b2c:	lsl	x15, x1, #34
   22b30:	cinc	x12, x12, cs  // cs = hs, nlast
   22b34:	lsr	x6, x1, #30
   22b38:	subs	x13, x3, x12
   22b3c:	cmp	x3, x12
   22b40:	lsr	x18, x12, #30
   22b44:	lsl	x12, x12, #34
   22b48:	sbc	x18, x18, xzr
   22b4c:	adds	x12, x13, x12
   22b50:	cinc	x18, x18, cs  // cs = hs, nlast
   22b54:	sub	x13, x12, x19
   22b58:	cmp	x18, #0x0
   22b5c:	ccmp	x19, x12, #0x0, eq  // eq = none
   22b60:	csel	x13, x13, x12, ls  // ls = plast
   22b64:	subs	x3, x16, x4
   22b68:	cmp	x16, x4
   22b6c:	sbc	x11, x11, xzr
   22b70:	adds	x3, x3, x17
   22b74:	cinc	x11, x11, cs  // cs = hs, nlast
   22b78:	subs	x4, x3, x11
   22b7c:	cmp	x3, x11
   22b80:	lsr	x3, x11, #30
   22b84:	lsl	x11, x11, #34
   22b88:	sbc	x3, x3, xzr
   22b8c:	adds	x11, x4, x11
   22b90:	cinc	x3, x3, cs  // cs = hs, nlast
   22b94:	subs	x4, x11, x3
   22b98:	cmp	x11, x3
   22b9c:	lsr	x11, x3, #30
   22ba0:	lsl	x3, x3, #34
   22ba4:	sbc	x11, x11, xzr
   22ba8:	adds	x3, x4, x3
   22bac:	cinc	x11, x11, cs  // cs = hs, nlast
   22bb0:	sub	x4, x3, x19
   22bb4:	cmp	x11, #0x0
   22bb8:	ccmp	x19, x3, #0x0, eq  // eq = none
   22bbc:	csel	x4, x4, x3, ls  // ls = plast
   22bc0:	subs	x3, x14, x1
   22bc4:	cmp	x14, x1
   22bc8:	sbc	x6, x6, xzr
   22bcc:	adds	x3, x3, x15
   22bd0:	cinc	x6, x6, cs  // cs = hs, nlast
   22bd4:	subs	x1, x3, x6
   22bd8:	cmp	x3, x6
   22bdc:	lsr	x3, x6, #30
   22be0:	lsl	x6, x6, #34
   22be4:	sbc	x3, x3, xzr
   22be8:	adds	x6, x1, x6
   22bec:	cinc	x3, x3, cs  // cs = hs, nlast
   22bf0:	subs	x1, x6, x3
   22bf4:	cmp	x6, x3
   22bf8:	lsr	x6, x3, #30
   22bfc:	lsl	x3, x3, #34
   22c00:	sbc	x6, x6, xzr
   22c04:	adds	x3, x1, x3
   22c08:	cinc	x6, x6, cs  // cs = hs, nlast
   22c0c:	stp	x10, x13, [x7]
   22c10:	cmp	x6, #0x0
   22c14:	ccmp	x19, x3, #0x0, eq  // eq = none
   22c18:	sub	x1, x3, x19
   22c1c:	add	x9, x9, #0x2
   22c20:	csel	x1, x1, x3, ls  // ls = plast
   22c24:	add	x7, x7, #0x10
   22c28:	cmp	x25, x9
   22c2c:	b.ls	2302c <PyInit__decimal@@Base+0x6dec>  // b.plast
   22c30:	ldp	x3, x6, [x7]
   22c34:	mul	x10, x4, x3
   22c38:	umulh	x3, x4, x3
   22c3c:	subs	x11, x10, x3
   22c40:	cmp	x10, x3
   22c44:	cset	x12, cc  // cc = lo, ul, last
   22c48:	cbz	x23, 22a78 <PyInit__decimal@@Base+0x6838>
   22c4c:	lsr	x10, x3, #32
   22c50:	lsl	x3, x3, #32
   22c54:	adds	x3, x3, x11
   22c58:	sub	x10, x10, x12
   22c5c:	cinc	x10, x10, cs  // cs = hs, nlast
   22c60:	mul	x13, x6, x1
   22c64:	subs	x11, x3, x10
   22c68:	umulh	x6, x6, x1
   22c6c:	cmp	x3, x10
   22c70:	lsr	x12, x10, #32
   22c74:	lsl	x10, x10, #32
   22c78:	sbc	x12, x12, xzr
   22c7c:	adds	x10, x11, x10
   22c80:	lsr	x3, x6, #32
   22c84:	cinc	x12, x12, cs  // cs = hs, nlast
   22c88:	sub	x11, x10, x19
   22c8c:	cmp	x12, #0x0
   22c90:	lsl	x12, x6, #32
   22c94:	ccmp	x19, x10, #0x0, eq  // eq = none
   22c98:	mul	x14, x4, x8
   22c9c:	csel	x10, x11, x10, ls  // ls = plast
   22ca0:	subs	x11, x13, x6
   22ca4:	cmp	x13, x6
   22ca8:	umulh	x4, x4, x8
   22cac:	sbc	x3, x3, xzr
   22cb0:	adds	x11, x11, x12
   22cb4:	cinc	x3, x3, cs  // cs = hs, nlast
   22cb8:	mul	x12, x1, x8
   22cbc:	subs	x13, x11, x3
   22cc0:	lsr	x6, x4, #32
   22cc4:	cmp	x11, x3
   22cc8:	lsr	x15, x3, #32
   22ccc:	lsl	x3, x3, #32
   22cd0:	sbc	x15, x15, xzr
   22cd4:	adds	x3, x13, x3
   22cd8:	lsl	x16, x4, #32
   22cdc:	cinc	x15, x15, cs  // cs = hs, nlast
   22ce0:	sub	x13, x3, x19
   22ce4:	cmp	x15, #0x0
   22ce8:	umulh	x1, x1, x8
   22cec:	ccmp	x19, x3, #0x0, eq  // eq = none
   22cf0:	csel	x13, x13, x3, ls  // ls = plast
   22cf4:	subs	x11, x14, x4
   22cf8:	cmp	x14, x4
   22cfc:	lsr	x3, x1, #32
   22d00:	sbc	x6, x6, xzr
   22d04:	adds	x11, x11, x16
   22d08:	cinc	x6, x6, cs  // cs = hs, nlast
   22d0c:	lsl	x14, x1, #32
   22d10:	subs	x4, x11, x6
   22d14:	cmp	x11, x6
   22d18:	lsr	x11, x6, #32
   22d1c:	lsl	x6, x6, #32
   22d20:	sbc	x11, x11, xzr
   22d24:	adds	x6, x4, x6
   22d28:	cinc	x11, x11, cs  // cs = hs, nlast
   22d2c:	sub	x4, x6, x19
   22d30:	cmp	x11, #0x0
   22d34:	ccmp	x19, x6, #0x0, eq  // eq = none
   22d38:	csel	x4, x4, x6, ls  // ls = plast
   22d3c:	subs	x6, x12, x1
   22d40:	cmp	x12, x1
   22d44:	sbc	x3, x3, xzr
   22d48:	adds	x6, x6, x14
   22d4c:	cinc	x3, x3, cs  // cs = hs, nlast
   22d50:	subs	x1, x6, x3
   22d54:	cmp	x6, x3
   22d58:	lsr	x6, x3, #32
   22d5c:	lsl	x3, x3, #32
   22d60:	b	22c00 <PyInit__decimal@@Base+0x69c0>
   22d64:	lsr	x3, x6, #24
   22d68:	lsl	x6, x6, #40
   22d6c:	adds	x6, x6, x7
   22d70:	sub	x3, x3, x8
   22d74:	cinc	x3, x3, cs  // cs = hs, nlast
   22d78:	subs	x7, x6, x3
   22d7c:	cmp	x6, x3
   22d80:	lsr	x6, x3, #24
   22d84:	lsl	x3, x3, #40
   22d88:	sbc	x6, x6, xzr
   22d8c:	adds	x7, x7, x3
   22d90:	cinc	x6, x6, cs  // cs = hs, nlast
   22d94:	subs	x3, x7, x6
   22d98:	cmp	x7, x6
   22d9c:	lsr	x7, x6, #24
   22da0:	lsl	x6, x6, #40
   22da4:	b	22960 <PyInit__decimal@@Base+0x6720>
   22da8:	cmp	x9, x1
   22dac:	lsr	x7, x1, #32
   22db0:	lsl	x1, x1, #32
   22db4:	sbc	x7, x7, xzr
   22db8:	adds	x3, x3, x1
   22dbc:	cinc	x7, x7, cs  // cs = hs, nlast
   22dc0:	subs	x1, x3, x7
   22dc4:	cmp	x3, x7
   22dc8:	lsr	x3, x7, #32
   22dcc:	lsl	x7, x7, #32
   22dd0:	sbc	x3, x3, xzr
   22dd4:	adds	x7, x1, x7
   22dd8:	cinc	x3, x3, cs  // cs = hs, nlast
   22ddc:	sub	x1, x7, x19
   22de0:	cmp	x3, #0x0
   22de4:	ccmp	x19, x7, #0x0, eq  // eq = none
   22de8:	csel	x1, x1, x7, ls  // ls = plast
   22dec:	b	2299c <PyInit__decimal@@Base+0x675c>
   22df0:	lsr	x7, x1, #24
   22df4:	lsl	x1, x1, #40
   22df8:	adds	x1, x1, x3
   22dfc:	sub	x7, x7, x9
   22e00:	cinc	x7, x7, cs  // cs = hs, nlast
   22e04:	subs	x9, x1, x7
   22e08:	cmp	x1, x7
   22e0c:	lsr	x3, x7, #24
   22e10:	lsl	x7, x7, #40
   22e14:	sbc	x3, x3, xzr
   22e18:	adds	x7, x9, x7
   22e1c:	cinc	x3, x3, cs  // cs = hs, nlast
   22e20:	subs	x1, x7, x3
   22e24:	cmp	x7, x3
   22e28:	lsr	x7, x3, #24
   22e2c:	lsl	x3, x3, #40
   22e30:	b	228f4 <PyInit__decimal@@Base+0x66b4>
   22e34:	lsr	x6, x3, #30
   22e38:	lsl	x3, x3, #34
   22e3c:	adds	x3, x3, x7
   22e40:	sub	x6, x6, x8
   22e44:	cinc	x6, x6, cs  // cs = hs, nlast
   22e48:	subs	x7, x3, x6
   22e4c:	cmp	x3, x6
   22e50:	lsr	x3, x6, #30
   22e54:	lsl	x6, x6, #34
   22e58:	sbc	x3, x3, xzr
   22e5c:	adds	x6, x7, x6
   22e60:	cinc	x3, x3, cs  // cs = hs, nlast
   22e64:	subs	x8, x6, x3
   22e68:	cmp	x6, x3
   22e6c:	lsr	x6, x3, #30
   22e70:	lsl	x3, x3, #34
   22e74:	b	22a48 <PyInit__decimal@@Base+0x6808>
   22e78:	lsr	x10, x3, #24
   22e7c:	lsl	x3, x3, #40
   22e80:	adds	x3, x3, x11
   22e84:	sub	x10, x10, x12
   22e88:	cinc	x10, x10, cs  // cs = hs, nlast
   22e8c:	mul	x13, x1, x6
   22e90:	subs	x12, x3, x10
   22e94:	umulh	x6, x1, x6
   22e98:	cmp	x3, x10
   22e9c:	lsr	x3, x10, #24
   22ea0:	lsl	x10, x10, #40
   22ea4:	sbc	x3, x3, xzr
   22ea8:	adds	x12, x12, x10
   22eac:	lsl	x15, x6, #40
   22eb0:	cinc	x3, x3, cs  // cs = hs, nlast
   22eb4:	lsr	x11, x6, #24
   22eb8:	subs	x10, x12, x3
   22ebc:	mul	x16, x4, x8
   22ec0:	cmp	x12, x3
   22ec4:	lsr	x12, x3, #24
   22ec8:	lsl	x3, x3, #40
   22ecc:	sbc	x12, x12, xzr
   22ed0:	adds	x3, x10, x3
   22ed4:	umulh	x4, x4, x8
   22ed8:	cinc	x12, x12, cs  // cs = hs, nlast
   22edc:	sub	x10, x3, x19
   22ee0:	cmp	x12, #0x0
   22ee4:	mul	x14, x1, x8
   22ee8:	ccmp	x19, x3, #0x0, eq  // eq = none
   22eec:	lsr	x12, x4, #24
   22ef0:	csel	x10, x10, x3, ls  // ls = plast
   22ef4:	subs	x3, x13, x6
   22ef8:	cmp	x13, x6
   22efc:	lsl	x6, x4, #40
   22f00:	sbc	x11, x11, xzr
   22f04:	adds	x3, x3, x15
   22f08:	cinc	x11, x11, cs  // cs = hs, nlast
   22f0c:	umulh	x1, x1, x8
   22f10:	subs	x17, x3, x11
   22f14:	add	x9, x9, #0x2
   22f18:	cmp	x3, x11
   22f1c:	lsr	x3, x11, #24
   22f20:	lsl	x11, x11, #40
   22f24:	sbc	x3, x3, xzr
   22f28:	adds	x17, x17, x11
   22f2c:	lsl	x15, x1, #40
   22f30:	cinc	x3, x3, cs  // cs = hs, nlast
   22f34:	lsr	x11, x1, #24
   22f38:	subs	x13, x17, x3
   22f3c:	cmp	x17, x3
   22f40:	lsr	x17, x3, #24
   22f44:	lsl	x3, x3, #40
   22f48:	sbc	x17, x17, xzr
   22f4c:	adds	x3, x13, x3
   22f50:	cinc	x17, x17, cs  // cs = hs, nlast
   22f54:	sub	x13, x3, x19
   22f58:	cmp	x17, #0x0
   22f5c:	ccmp	x19, x3, #0x0, eq  // eq = none
   22f60:	csel	x13, x13, x3, ls  // ls = plast
   22f64:	subs	x3, x16, x4
   22f68:	cmp	x16, x4
   22f6c:	stp	x10, x13, [x7]
   22f70:	sbc	x12, x12, xzr
   22f74:	adds	x4, x3, x6
   22f78:	add	x7, x7, #0x10
   22f7c:	cinc	x12, x12, cs  // cs = hs, nlast
   22f80:	subs	x3, x4, x12
   22f84:	cmp	x4, x12
   22f88:	lsr	x6, x12, #24
   22f8c:	lsl	x12, x12, #40
   22f90:	sbc	x6, x6, xzr
   22f94:	adds	x12, x3, x12
   22f98:	cinc	x6, x6, cs  // cs = hs, nlast
   22f9c:	subs	x4, x12, x6
   22fa0:	cmp	x12, x6
   22fa4:	lsr	x3, x6, #24
   22fa8:	lsl	x6, x6, #40
   22fac:	sbc	x3, x3, xzr
   22fb0:	adds	x6, x4, x6
   22fb4:	cinc	x3, x3, cs  // cs = hs, nlast
   22fb8:	sub	x4, x6, x19
   22fbc:	cmp	x3, #0x0
   22fc0:	ccmp	x19, x6, #0x0, eq  // eq = none
   22fc4:	csel	x4, x4, x6, ls  // ls = plast
   22fc8:	subs	x3, x14, x1
   22fcc:	cmp	x14, x1
   22fd0:	sbc	x11, x11, xzr
   22fd4:	adds	x3, x3, x15
   22fd8:	cinc	x11, x11, cs  // cs = hs, nlast
   22fdc:	subs	x1, x3, x11
   22fe0:	cmp	x3, x11
   22fe4:	lsr	x6, x11, #24
   22fe8:	lsl	x11, x11, #40
   22fec:	sbc	x6, x6, xzr
   22ff0:	adds	x11, x1, x11
   22ff4:	cinc	x6, x6, cs  // cs = hs, nlast
   22ff8:	subs	x1, x11, x6
   22ffc:	cmp	x11, x6
   23000:	lsr	x3, x6, #24
   23004:	lsl	x6, x6, #40
   23008:	sbc	x3, x3, xzr
   2300c:	adds	x6, x1, x6
   23010:	cinc	x3, x3, cs  // cs = hs, nlast
   23014:	sub	x1, x6, x19
   23018:	cmp	x3, #0x0
   2301c:	ccmp	x19, x6, #0x0, eq  // eq = none
   23020:	csel	x1, x1, x6, ls  // ls = plast
   23024:	cmp	x25, x9
   23028:	b.hi	22c30 <PyInit__decimal@@Base+0x69f0>  // b.pmore
   2302c:	add	x2, x2, x25
   23030:	cmp	x5, #0x2
   23034:	b.eq	23040 <PyInit__decimal@@Base+0x6e00>  // b.none
   23038:	mov	x5, #0x2                   	// #2
   2303c:	b	22888 <PyInit__decimal@@Base+0x6648>
   23040:	mov	w2, w26
   23044:	add	x0, sp, #0x58
   23048:	mov	w1, #0x1                   	// #1
   2304c:	bl	3eec0 <PyInit__decimal@@Base+0x22c80>
   23050:	add	x7, x21, x20
   23054:	add	x20, x7, x20
   23058:	cmp	x21, x7
   2305c:	b.cs	23530 <PyInit__decimal@@Base+0x72f0>  // b.hs, b.nlast
   23060:	mvn	x8, x21
   23064:	mov	x3, #0x0                   	// #0
   23068:	add	x8, x7, x8
   2306c:	ldp	x6, x5, [sp, #96]
   23070:	lsr	x8, x8, #3
   23074:	b	232bc <PyInit__decimal@@Base+0x707c>
   23078:	cbz	x24, 23464 <PyInit__decimal@@Base+0x7224>
   2307c:	lsr	x10, x2, #30
   23080:	lsl	x2, x2, #34
   23084:	adds	x2, x2, x12
   23088:	sub	x10, x10, x13
   2308c:	cinc	x10, x10, cs  // cs = hs, nlast
   23090:	subs	x11, x2, x10
   23094:	cmp	x2, x10
   23098:	lsr	x2, x10, #30
   2309c:	lsl	x10, x10, #34
   230a0:	sbc	x2, x2, xzr
   230a4:	adds	x11, x11, x10
   230a8:	cinc	x2, x2, cs  // cs = hs, nlast
   230ac:	subs	x10, x11, x2
   230b0:	cmp	x11, x2
   230b4:	lsr	x11, x2, #30
   230b8:	lsl	x2, x2, #34
   230bc:	sbc	x11, x11, xzr
   230c0:	adds	x2, x10, x2
   230c4:	cinc	x11, x11, cs  // cs = hs, nlast
   230c8:	sub	x10, x2, x19
   230cc:	cmp	x11, #0x0
   230d0:	ccmp	x19, x2, #0x0, eq  // eq = none
   230d4:	csel	x10, x10, x2, ls  // ls = plast
   230d8:	adds	x10, x9, x10
   230dc:	mul	x11, x0, x5
   230e0:	sub	x12, x10, x19
   230e4:	umulh	x2, x0, x5
   230e8:	csel	x10, x12, x10, cs  // cs = hs, nlast
   230ec:	cmp	x19, x10
   230f0:	sub	x12, x10, x19
   230f4:	csel	x10, x12, x10, ls  // ls = plast
   230f8:	subs	x13, x11, x2
   230fc:	cmp	x11, x2
   23100:	cset	x14, cc  // cc = lo, ul, last
   23104:	cbnz	x23, 233dc <PyInit__decimal@@Base+0x719c>
   23108:	cbz	x24, 23420 <PyInit__decimal@@Base+0x71e0>
   2310c:	lsr	x12, x2, #30
   23110:	lsl	x2, x2, #34
   23114:	adds	x2, x2, x13
   23118:	sub	x12, x12, x14
   2311c:	cinc	x12, x12, cs  // cs = hs, nlast
   23120:	subs	x13, x2, x12
   23124:	cmp	x2, x12
   23128:	lsr	x11, x12, #30
   2312c:	lsl	x12, x12, #34
   23130:	sbc	x11, x11, xzr
   23134:	adds	x12, x13, x12
   23138:	cinc	x11, x11, cs  // cs = hs, nlast
   2313c:	subs	x2, x12, x11
   23140:	cmp	x12, x11
   23144:	lsr	x12, x11, #30
   23148:	lsl	x11, x11, #34
   2314c:	sbc	x12, x12, xzr
   23150:	adds	x11, x2, x11
   23154:	cinc	x12, x12, cs  // cs = hs, nlast
   23158:	sub	x2, x11, x19
   2315c:	cmp	x12, #0x0
   23160:	ccmp	x19, x11, #0x0, eq  // eq = none
   23164:	csel	x2, x2, x11, ls  // ls = plast
   23168:	adds	x2, x10, x2
   2316c:	mul	x10, x1, x5
   23170:	sub	x11, x2, x19
   23174:	umulh	x1, x1, x5
   23178:	csel	x2, x11, x2, cs  // cs = hs, nlast
   2317c:	cmp	x19, x2
   23180:	sub	x11, x2, x19
   23184:	csel	x2, x11, x2, ls  // ls = plast
   23188:	subs	x12, x10, x1
   2318c:	cmp	x10, x1
   23190:	cset	x13, cc  // cc = lo, ul, last
   23194:	cbnz	x23, 23398 <PyInit__decimal@@Base+0x7158>
   23198:	cbz	x24, 234a8 <PyInit__decimal@@Base+0x7268>
   2319c:	lsr	x11, x1, #30
   231a0:	lsl	x1, x1, #34
   231a4:	adds	x1, x1, x12
   231a8:	sub	x11, x11, x13
   231ac:	cinc	x11, x11, cs  // cs = hs, nlast
   231b0:	subs	x12, x1, x11
   231b4:	cmp	x1, x11
   231b8:	lsr	x10, x11, #30
   231bc:	lsl	x11, x11, #34
   231c0:	sbc	x10, x10, xzr
   231c4:	adds	x11, x12, x11
   231c8:	cinc	x10, x10, cs  // cs = hs, nlast
   231cc:	subs	x1, x11, x10
   231d0:	cmp	x11, x10
   231d4:	lsr	x11, x10, #30
   231d8:	lsl	x10, x10, #34
   231dc:	sbc	x11, x11, xzr
   231e0:	adds	x10, x1, x10
   231e4:	cinc	x11, x11, cs  // cs = hs, nlast
   231e8:	sub	x1, x10, x19
   231ec:	cmp	x11, #0x0
   231f0:	ccmp	x19, x10, #0x0, eq  // eq = none
   231f4:	csel	x1, x1, x10, ls  // ls = plast
   231f8:	adds	x9, x9, x1
   231fc:	mul	x1, x6, x0
   23200:	sub	x10, x9, x19
   23204:	umulh	x0, x6, x0
   23208:	csel	x9, x10, x9, cs  // cs = hs, nlast
   2320c:	cmp	x19, x9
   23210:	sub	x10, x9, x19
   23214:	csel	x9, x10, x9, ls  // ls = plast
   23218:	subs	x11, x1, x0
   2321c:	cmp	x1, x0
   23220:	cset	x12, cc  // cc = lo, ul, last
   23224:	cbnz	x23, 23354 <PyInit__decimal@@Base+0x7114>
   23228:	cbz	x24, 234ec <PyInit__decimal@@Base+0x72ac>
   2322c:	lsr	x10, x0, #30
   23230:	lsl	x0, x0, #34
   23234:	adds	x0, x0, x11
   23238:	sub	x10, x10, x12
   2323c:	cinc	x10, x10, cs  // cs = hs, nlast
   23240:	subs	x11, x0, x10
   23244:	cmp	x0, x10
   23248:	lsr	x1, x10, #30
   2324c:	lsl	x10, x10, #34
   23250:	sbc	x1, x1, xzr
   23254:	adds	x10, x11, x10
   23258:	cinc	x1, x1, cs  // cs = hs, nlast
   2325c:	subs	x0, x10, x1
   23260:	cmp	x10, x1
   23264:	lsr	x10, x1, #30
   23268:	lsl	x1, x1, #34
   2326c:	sbc	x10, x10, xzr
   23270:	adds	x1, x0, x1
   23274:	cinc	x10, x10, cs  // cs = hs, nlast
   23278:	sub	x0, x1, x19
   2327c:	cmp	x10, #0x0
   23280:	ccmp	x19, x1, #0x0, eq  // eq = none
   23284:	csel	x0, x0, x1, ls  // ls = plast
   23288:	adds	x9, x9, x0
   2328c:	add	x1, x3, #0x1
   23290:	sub	x0, x9, x19
   23294:	csel	x9, x0, x9, cs  // cs = hs, nlast
   23298:	cmp	x19, x9
   2329c:	sub	x0, x9, x19
   232a0:	csel	x9, x0, x9, ls  // ls = plast
   232a4:	str	x9, [x20, x3, lsl #3]
   232a8:	str	x2, [x7, x3, lsl #3]
   232ac:	cmp	x8, x3
   232b0:	str	x4, [x21, x3, lsl #3]
   232b4:	b.eq	23530 <PyInit__decimal@@Base+0x72f0>  // b.none
   232b8:	mov	x3, x1
   232bc:	ldr	x1, [x7, x3, lsl #3]
   232c0:	ldr	x9, [x21, x3, lsl #3]
   232c4:	ldr	x0, [x20, x3, lsl #3]
   232c8:	adds	x2, x9, x1
   232cc:	sub	x4, x2, x19
   232d0:	mul	x10, x1, x6
   232d4:	csel	x4, x4, x2, cs  // cs = hs, nlast
   232d8:	umulh	x2, x1, x6
   232dc:	cmp	x19, x4
   232e0:	sub	x11, x4, x19
   232e4:	csel	x4, x11, x4, ls  // ls = plast
   232e8:	adds	x4, x0, x4
   232ec:	sub	x11, x4, x19
   232f0:	csel	x4, x11, x4, cs  // cs = hs, nlast
   232f4:	cmp	x19, x4
   232f8:	sub	x11, x4, x19
   232fc:	csel	x4, x11, x4, ls  // ls = plast
   23300:	subs	x12, x10, x2
   23304:	cmp	x10, x2
   23308:	cset	x13, cc  // cc = lo, ul, last
   2330c:	cbz	x23, 23078 <PyInit__decimal@@Base+0x6e38>
   23310:	lsr	x11, x2, #32
   23314:	lsl	x2, x2, #32
   23318:	adds	x2, x2, x12
   2331c:	sub	x11, x11, x13
   23320:	cinc	x11, x11, cs  // cs = hs, nlast
   23324:	subs	x10, x2, x11
   23328:	cmp	x2, x11
   2332c:	lsr	x2, x11, #32
   23330:	lsl	x11, x11, #32
   23334:	sbc	x2, x2, xzr
   23338:	adds	x11, x10, x11
   2333c:	cinc	x2, x2, cs  // cs = hs, nlast
   23340:	sub	x10, x11, x19
   23344:	cmp	x2, #0x0
   23348:	ccmp	x19, x11, #0x0, eq  // eq = none
   2334c:	csel	x10, x10, x11, ls  // ls = plast
   23350:	b	230d8 <PyInit__decimal@@Base+0x6e98>
   23354:	lsr	x1, x0, #32
   23358:	lsl	x0, x0, #32
   2335c:	adds	x0, x0, x11
   23360:	sub	x1, x1, x12
   23364:	cinc	x1, x1, cs  // cs = hs, nlast
   23368:	subs	x10, x0, x1
   2336c:	cmp	x0, x1
   23370:	lsr	x11, x1, #32
   23374:	lsl	x1, x1, #32
   23378:	sbc	x11, x11, xzr
   2337c:	adds	x1, x10, x1
   23380:	cinc	x11, x11, cs  // cs = hs, nlast
   23384:	sub	x0, x1, x19
   23388:	cmp	x11, #0x0
   2338c:	ccmp	x19, x1, #0x0, eq  // eq = none
   23390:	csel	x0, x0, x1, ls  // ls = plast
   23394:	b	23288 <PyInit__decimal@@Base+0x7048>
   23398:	lsr	x10, x1, #32
   2339c:	lsl	x1, x1, #32
   233a0:	adds	x1, x1, x12
   233a4:	sub	x10, x10, x13
   233a8:	cinc	x10, x10, cs  // cs = hs, nlast
   233ac:	subs	x11, x1, x10
   233b0:	cmp	x1, x10
   233b4:	lsr	x12, x10, #32
   233b8:	lsl	x10, x10, #32
   233bc:	sbc	x12, x12, xzr
   233c0:	adds	x10, x11, x10
   233c4:	cinc	x12, x12, cs  // cs = hs, nlast
   233c8:	sub	x1, x10, x19
   233cc:	cmp	x12, #0x0
   233d0:	ccmp	x19, x10, #0x0, eq  // eq = none
   233d4:	csel	x1, x1, x10, ls  // ls = plast
   233d8:	b	231f8 <PyInit__decimal@@Base+0x6fb8>
   233dc:	lsr	x11, x2, #32
   233e0:	lsl	x2, x2, #32
   233e4:	adds	x2, x2, x13
   233e8:	sub	x11, x11, x14
   233ec:	cinc	x11, x11, cs  // cs = hs, nlast
   233f0:	subs	x12, x2, x11
   233f4:	cmp	x2, x11
   233f8:	lsr	x13, x11, #32
   233fc:	lsl	x11, x11, #32
   23400:	sbc	x13, x13, xzr
   23404:	adds	x11, x12, x11
   23408:	cinc	x13, x13, cs  // cs = hs, nlast
   2340c:	sub	x2, x11, x19
   23410:	cmp	x13, #0x0
   23414:	ccmp	x19, x11, #0x0, eq  // eq = none
   23418:	csel	x2, x2, x11, ls  // ls = plast
   2341c:	b	23168 <PyInit__decimal@@Base+0x6f28>
   23420:	lsr	x12, x2, #24
   23424:	lsl	x2, x2, #40
   23428:	adds	x2, x2, x13
   2342c:	sub	x12, x12, x14
   23430:	cinc	x12, x12, cs  // cs = hs, nlast
   23434:	subs	x13, x2, x12
   23438:	cmp	x2, x12
   2343c:	lsr	x11, x12, #24
   23440:	lsl	x12, x12, #40
   23444:	sbc	x11, x11, xzr
   23448:	adds	x12, x13, x12
   2344c:	cinc	x11, x11, cs  // cs = hs, nlast
   23450:	subs	x2, x12, x11
   23454:	cmp	x12, x11
   23458:	lsr	x12, x11, #24
   2345c:	lsl	x11, x11, #40
   23460:	b	2314c <PyInit__decimal@@Base+0x6f0c>
   23464:	lsr	x10, x2, #24
   23468:	lsl	x2, x2, #40
   2346c:	adds	x2, x2, x12
   23470:	sub	x10, x10, x13
   23474:	cinc	x10, x10, cs  // cs = hs, nlast
   23478:	subs	x11, x2, x10
   2347c:	cmp	x2, x10
   23480:	lsr	x2, x10, #24
   23484:	lsl	x10, x10, #40
   23488:	sbc	x2, x2, xzr
   2348c:	adds	x11, x11, x10
   23490:	cinc	x2, x2, cs  // cs = hs, nlast
   23494:	subs	x10, x11, x2
   23498:	cmp	x11, x2
   2349c:	lsr	x11, x2, #24
   234a0:	lsl	x2, x2, #40
   234a4:	b	230bc <PyInit__decimal@@Base+0x6e7c>
   234a8:	lsr	x11, x1, #24
   234ac:	lsl	x1, x1, #40
   234b0:	adds	x1, x1, x12
   234b4:	sub	x11, x11, x13
   234b8:	cinc	x11, x11, cs  // cs = hs, nlast
   234bc:	subs	x12, x1, x11
   234c0:	cmp	x1, x11
   234c4:	lsr	x10, x11, #24
   234c8:	lsl	x11, x11, #40
   234cc:	sbc	x10, x10, xzr
   234d0:	adds	x11, x12, x11
   234d4:	cinc	x10, x10, cs  // cs = hs, nlast
   234d8:	subs	x1, x11, x10
   234dc:	cmp	x11, x10
   234e0:	lsr	x11, x10, #24
   234e4:	lsl	x10, x10, #40
   234e8:	b	231dc <PyInit__decimal@@Base+0x6f9c>
   234ec:	lsr	x10, x0, #24
   234f0:	lsl	x0, x0, #40
   234f4:	adds	x0, x0, x11
   234f8:	sub	x10, x10, x12
   234fc:	cinc	x10, x10, cs  // cs = hs, nlast
   23500:	subs	x11, x0, x10
   23504:	cmp	x0, x10
   23508:	lsr	x1, x10, #24
   2350c:	lsl	x10, x10, #40
   23510:	sbc	x1, x1, xzr
   23514:	adds	x10, x11, x10
   23518:	cinc	x1, x1, cs  // cs = hs, nlast
   2351c:	subs	x0, x10, x1
   23520:	cmp	x10, x1
   23524:	lsr	x10, x1, #24
   23528:	lsl	x1, x1, #40
   2352c:	b	2326c <PyInit__decimal@@Base+0x702c>
   23530:	mov	w0, #0x1                   	// #1
   23534:	ldp	x19, x20, [sp, #16]
   23538:	ldp	x21, x22, [sp, #32]
   2353c:	ldp	x23, x24, [sp, #48]
   23540:	ldp	x25, x26, [sp, #64]
   23544:	ldp	x29, x30, [sp], #112
   23548:	ret
   2354c:	lsr	x6, x3, #32
   23550:	lsl	x3, x3, #32
   23554:	adds	x3, x3, x7
   23558:	sub	x6, x6, x8
   2355c:	cinc	x6, x6, cs  // cs = hs, nlast
   23560:	subs	x8, x3, x6
   23564:	cmp	x3, x6
   23568:	lsr	x3, x6, #32
   2356c:	lsl	x6, x6, #32
   23570:	sbc	x3, x3, xzr
   23574:	adds	x6, x8, x6
   23578:	cinc	x3, x3, cs  // cs = hs, nlast
   2357c:	sub	x8, x6, x19
   23580:	cmp	x3, #0x0
   23584:	ccmp	x19, x6, #0x0, eq  // eq = none
   23588:	csel	x8, x8, x6, ls  // ls = plast
   2358c:	b	22a64 <PyInit__decimal@@Base+0x6824>
   23590:	sub	w2, w2, #0x2
   23594:	mov	x4, x0
   23598:	cmp	w2, #0x12
   2359c:	add	x15, x0, #0x1
   235a0:	b.ls	235c4 <PyInit__decimal@@Base+0x7384>  // b.plast
   235a4:	mov	x0, x15
   235a8:	mov	x2, x4
   235ac:	cmp	x4, x3
   235b0:	b.eq	23c0c <PyInit__decimal@@Base+0x79cc>  // b.none
   235b4:	add	w1, w1, #0x30
   235b8:	strb	w1, [x2]
   235bc:	strb	wzr, [x2, #1]
   235c0:	ret
   235c4:	stp	x29, x30, [sp, #-64]!
   235c8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   235cc:	add	x0, x0, #0x570
   235d0:	mov	x29, sp
   235d4:	stp	x19, x20, [sp, #16]
   235d8:	stp	x21, x22, [sp, #32]
   235dc:	ldrh	w0, [x0, w2, uxtw #1]
   235e0:	adr	x2, 235ec <PyInit__decimal@@Base+0x73ac>
   235e4:	add	x0, x2, w0, sxth #2
   235e8:	br	x0
   235ec:	stp	x23, x24, [sp, #48]
   235f0:	cmp	x4, x3
   235f4:	add	x21, x4, #0x2
   235f8:	add	x20, x4, #0x3
   235fc:	add	x19, x4, #0x4
   23600:	add	x30, x4, #0x5
   23604:	add	x18, x4, #0x6
   23608:	add	x17, x4, #0x7
   2360c:	add	x16, x4, #0x8
   23610:	add	x14, x4, #0x9
   23614:	add	x13, x4, #0xa
   23618:	add	x12, x4, #0xb
   2361c:	add	x11, x4, #0xc
   23620:	add	x10, x4, #0xd
   23624:	add	x9, x4, #0xe
   23628:	add	x8, x4, #0xf
   2362c:	add	x7, x4, #0x10
   23630:	add	x6, x4, #0x11
   23634:	add	x5, x4, #0x12
   23638:	add	x2, x4, #0x13
   2363c:	add	x0, x4, #0x14
   23640:	b.eq	2419c <PyInit__decimal@@Base+0x7f5c>  // b.none
   23644:	mov	x23, #0x89e80000            	// #2313682944
   23648:	movk	x23, #0x2304, lsl #32
   2364c:	movk	x23, #0x8ac7, lsl #48
   23650:	cmp	x1, x23
   23654:	cset	x24, cs  // cs = hs, nlast
   23658:	cset	w22, cs  // cs = hs, nlast
   2365c:	add	w22, w22, #0x30
   23660:	strb	w22, [x4]
   23664:	msub	x1, x24, x23, x1
   23668:	cmp	x15, x3
   2366c:	b.eq	24258 <PyInit__decimal@@Base+0x8018>  // b.none
   23670:	mov	x23, #0x490f                	// #18703
   23674:	lsr	x4, x1, #18
   23678:	movk	x23, #0x7747, lsl #16
   2367c:	mov	x22, #0xa7640000            	// #2808348672
   23680:	movk	x23, #0x49c9, lsl #32
   23684:	movk	x22, #0xb6b3, lsl #32
   23688:	movk	x22, #0xde0, lsl #48
   2368c:	umulh	x4, x4, x23
   23690:	lsr	x4, x4, #24
   23694:	add	w23, w4, #0x30
   23698:	strb	w23, [x15]
   2369c:	ldp	x23, x24, [sp, #48]
   236a0:	msub	x1, x4, x22, x1
   236a4:	cmp	x21, x3
   236a8:	b.eq	24200 <PyInit__decimal@@Base+0x7fc0>  // b.none
   236ac:	mov	x22, #0x1b53                	// #6995
   236b0:	lsr	x4, x1, #17
   236b4:	movk	x22, #0xd519, lsl #16
   236b8:	mov	x15, #0x5d8a0000            	// #1569325056
   236bc:	movk	x22, #0x5c3b, lsl #32
   236c0:	movk	x15, #0x4578, lsl #32
   236c4:	movk	x15, #0x163, lsl #48
   236c8:	umulh	x4, x4, x22
   236cc:	lsr	x4, x4, #22
   236d0:	add	w22, w4, #0x30
   236d4:	strb	w22, [x21]
   236d8:	msub	x1, x4, x15, x1
   236dc:	cmp	x20, x3
   236e0:	b.eq	23dc0 <PyInit__decimal@@Base+0x7b80>  // b.none
   236e4:	mov	x4, #0x7857                	// #30807
   236e8:	mov	x15, #0x6fc10000            	// #1874919424
   236ec:	movk	x4, #0xb113, lsl #16
   236f0:	movk	x15, #0x86f2, lsl #32
   236f4:	movk	x4, #0x652f, lsl #32
   236f8:	movk	x15, #0x23, lsl #48
   236fc:	movk	x4, #0x39a5, lsl #48
   23700:	umulh	x4, x1, x4
   23704:	lsr	x4, x4, #51
   23708:	add	w21, w4, #0x30
   2370c:	strb	w21, [x20]
   23710:	msub	x1, x4, x15, x1
   23714:	cmp	x19, x3
   23718:	b.eq	23d70 <PyInit__decimal@@Base+0x7b30>  // b.none
   2371c:	mov	x20, #0xeac3                	// #60099
   23720:	lsr	x4, x1, #15
   23724:	movk	x20, #0xf3dc, lsl #16
   23728:	mov	x15, #0x8000                	// #32768
   2372c:	movk	x20, #0x4075, lsl #32
   23730:	movk	x15, #0xa4c6, lsl #16
   23734:	movk	x20, #0x2, lsl #48
   23738:	movk	x15, #0x8d7e, lsl #32
   2373c:	movk	x15, #0x3, lsl #48
   23740:	umulh	x4, x4, x20
   23744:	lsr	x4, x4, #20
   23748:	add	w20, w4, #0x30
   2374c:	strb	w20, [x19]
   23750:	msub	x1, x4, x15, x1
   23754:	cmp	x30, x3
   23758:	b.eq	23d24 <PyInit__decimal@@Base+0x7ae4>  // b.none
   2375c:	mov	x4, #0xcd81                	// #52609
   23760:	mov	x15, #0x4000                	// #16384
   23764:	movk	x4, #0x5095, lsl #16
   23768:	movk	x15, #0x107a, lsl #16
   2376c:	movk	x4, #0x4dc3, lsl #32
   23770:	movk	x15, #0x5af3, lsl #32
   23774:	movk	x4, #0xb42, lsl #48
   23778:	umulh	x4, x1, x4
   2377c:	lsr	x4, x4, #42
   23780:	add	w19, w4, #0x30
   23784:	strb	w19, [x30]
   23788:	msub	x1, x4, x15, x1
   2378c:	cmp	x18, x3
   23790:	b.eq	23cdc <PyInit__decimal@@Base+0x7a9c>  // b.none
   23794:	mov	x4, #0x385                 	// #901
   23798:	mov	x15, #0xa000                	// #40960
   2379c:	movk	x4, #0x92ed, lsl #16
   237a0:	movk	x15, #0x4e72, lsl #16
   237a4:	movk	x4, #0x84d0, lsl #32
   237a8:	movk	x15, #0x918, lsl #32
   237ac:	movk	x4, #0x384b, lsl #48
   237b0:	umulh	x4, x1, x4
   237b4:	lsr	x4, x4, #41
   237b8:	add	w19, w4, #0x30
   237bc:	strb	w19, [x18]
   237c0:	msub	x1, x4, x15, x1
   237c4:	cmp	x17, x3
   237c8:	b.eq	23c98 <PyInit__decimal@@Base+0x7a58>  // b.none
   237cc:	mov	x4, #0x2233                	// #8755
   237d0:	mov	x15, #0x1000                	// #4096
   237d4:	movk	x4, #0x5bd4, lsl #16
   237d8:	movk	x15, #0xd4a5, lsl #16
   237dc:	movk	x4, #0x3302, lsl #32
   237e0:	movk	x15, #0xe8, lsl #32
   237e4:	movk	x4, #0x232f, lsl #48
   237e8:	umulh	x4, x1, x4
   237ec:	lsr	x4, x4, #37
   237f0:	add	w18, w4, #0x30
   237f4:	strb	w18, [x17]
   237f8:	msub	x1, x4, x15, x1
   237fc:	cmp	x16, x3
   23800:	b.eq	23c58 <PyInit__decimal@@Base+0x7a18>  // b.none
   23804:	mov	x4, #0xaaff                	// #43775
   23808:	mov	x15, #0xe800                	// #59392
   2380c:	movk	x4, #0xcb24, lsl #16
   23810:	movk	x15, #0x4876, lsl #16
   23814:	movk	x4, #0xff0b, lsl #32
   23818:	movk	x15, #0x17, lsl #32
   2381c:	movk	x4, #0xafeb, lsl #48
   23820:	umulh	x4, x1, x4
   23824:	lsr	x4, x4, #36
   23828:	add	w17, w4, #0x30
   2382c:	strb	w17, [x16]
   23830:	msub	x1, x4, x15, x1
   23834:	cmp	x14, x3
   23838:	b.eq	23bd0 <PyInit__decimal@@Base+0x7990>  // b.none
   2383c:	mov	x4, #0xd5bf                	// #54719
   23840:	mov	x15, #0xe400                	// #58368
   23844:	movk	x4, #0xbded, lsl #16
   23848:	movk	x15, #0x540b, lsl #16
   2384c:	movk	x4, #0xfece, lsl #32
   23850:	movk	x15, #0x2, lsl #32
   23854:	movk	x4, #0xdbe6, lsl #48
   23858:	umulh	x4, x1, x4
   2385c:	lsr	x4, x4, #33
   23860:	add	w16, w4, #0x30
   23864:	strb	w16, [x14]
   23868:	msub	x1, x4, x15, x1
   2386c:	cmp	x13, x3
   23870:	b.eq	23b98 <PyInit__decimal@@Base+0x7958>  // b.none
   23874:	mov	x15, #0x5a53                	// #23123
   23878:	lsr	x4, x1, #9
   2387c:	movk	x15, #0xa09b, lsl #16
   23880:	mov	x14, #0xca00                	// #51712
   23884:	movk	x15, #0xb82f, lsl #32
   23888:	movk	x14, #0x3b9a, lsl #16
   2388c:	movk	x15, #0x44, lsl #48
   23890:	umulh	x4, x4, x15
   23894:	lsr	x4, x4, #11
   23898:	add	w15, w4, #0x30
   2389c:	strb	w15, [x13]
   238a0:	msub	x1, x4, x14, x1
   238a4:	cmp	x12, x3
   238a8:	b.eq	23b64 <PyInit__decimal@@Base+0x7924>  // b.none
   238ac:	mov	x4, #0xcefd                	// #52989
   238b0:	mov	x13, #0xe100                	// #57600
   238b4:	movk	x4, #0x8461, lsl #16
   238b8:	movk	x13, #0x5f5, lsl #16
   238bc:	movk	x4, #0x7711, lsl #32
   238c0:	movk	x4, #0xabcc, lsl #48
   238c4:	umulh	x4, x1, x4
   238c8:	lsr	x4, x4, #26
   238cc:	add	w14, w4, #0x30
   238d0:	strb	w14, [x12]
   238d4:	msub	x1, x4, x13, x1
   238d8:	cmp	x11, x3
   238dc:	b.eq	23b34 <PyInit__decimal@@Base+0x78f4>  // b.none
   238e0:	mov	x4, #0x42bd                	// #17085
   238e4:	mov	x12, #0x9680                	// #38528
   238e8:	movk	x4, #0xe57a, lsl #16
   238ec:	movk	x12, #0x98, lsl #16
   238f0:	movk	x4, #0x94d5, lsl #32
   238f4:	movk	x4, #0xd6bf, lsl #48
   238f8:	umulh	x4, x1, x4
   238fc:	lsr	x4, x4, #23
   23900:	add	w13, w4, #0x30
   23904:	strb	w13, [x11]
   23908:	msub	x1, x4, x12, x1
   2390c:	cmp	x10, x3
   23910:	b.eq	23b08 <PyInit__decimal@@Base+0x78c8>  // b.none
   23914:	mov	x4, #0x34db                	// #13531
   23918:	mov	x11, #0x4240                	// #16960
   2391c:	movk	x4, #0xd7b6, lsl #16
   23920:	movk	x11, #0xf, lsl #16
   23924:	movk	x4, #0xde82, lsl #32
   23928:	movk	x4, #0x431b, lsl #48
   2392c:	umulh	x4, x1, x4
   23930:	lsr	x4, x4, #18
   23934:	add	w12, w4, #0x30
   23938:	strb	w12, [x10]
   2393c:	msub	x1, x4, x11, x1
   23940:	cmp	x9, x3
   23944:	b.eq	23ae0 <PyInit__decimal@@Base+0x78a0>  // b.none
   23948:	mov	x11, #0x7843                	// #30787
   2394c:	lsr	x4, x1, #5
   23950:	movk	x11, #0x71b4, lsl #16
   23954:	mov	x10, #0x86a0                	// #34464
   23958:	movk	x11, #0x5ac4, lsl #32
   2395c:	movk	x10, #0x1, lsl #16
   23960:	movk	x11, #0xa7c, lsl #48
   23964:	umulh	x4, x4, x11
   23968:	lsr	x4, x4, #7
   2396c:	add	w11, w4, #0x30
   23970:	strb	w11, [x9]
   23974:	msub	x1, x4, x10, x1
   23978:	cmp	x8, x3
   2397c:	b.eq	23abc <PyInit__decimal@@Base+0x787c>  // b.none
   23980:	mov	x4, #0x594b                	// #22859
   23984:	mov	x9, #0x2710                	// #10000
   23988:	movk	x4, #0x3886, lsl #16
   2398c:	movk	x4, #0xc5d6, lsl #32
   23990:	movk	x4, #0x346d, lsl #48
   23994:	umulh	x4, x1, x4
   23998:	lsr	x4, x4, #11
   2399c:	add	w10, w4, #0x30
   239a0:	strb	w10, [x8]
   239a4:	msub	x1, x4, x9, x1
   239a8:	cmp	x7, x3
   239ac:	b.eq	23a9c <PyInit__decimal@@Base+0x785c>  // b.none
   239b0:	mov	x8, #0xf7cf                	// #63439
   239b4:	lsr	x4, x1, #3
   239b8:	movk	x8, #0xe353, lsl #16
   239bc:	movk	x8, #0x9ba5, lsl #32
   239c0:	movk	x8, #0x20c4, lsl #48
   239c4:	umulh	x4, x4, x8
   239c8:	lsr	x4, x4, #4
   239cc:	add	w8, w4, #0x30
   239d0:	strb	w8, [x7]
   239d4:	lsl	x7, x4, #5
   239d8:	sub	x7, x7, x4
   239dc:	add	x4, x4, x7, lsl #2
   239e0:	sub	x1, x1, x4, lsl #3
   239e4:	cmp	x6, x3
   239e8:	b.eq	23a80 <PyInit__decimal@@Base+0x7840>  // b.none
   239ec:	mov	x7, #0xf5c3                	// #62915
   239f0:	lsr	x4, x1, #2
   239f4:	movk	x7, #0x5c28, lsl #16
   239f8:	movk	x7, #0xc28f, lsl #32
   239fc:	movk	x7, #0x28f5, lsl #48
   23a00:	umulh	x4, x4, x7
   23a04:	lsr	x4, x4, #2
   23a08:	add	w7, w4, #0x30
   23a0c:	strb	w7, [x6]
   23a10:	add	x6, x4, x4, lsl #1
   23a14:	add	x4, x4, x6, lsl #3
   23a18:	sub	x1, x1, x4, lsl #2
   23a1c:	cmp	x5, x3
   23a20:	b.eq	23a68 <PyInit__decimal@@Base+0x7828>  // b.none
   23a24:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   23a28:	cmp	x2, x3
   23a2c:	movk	x4, #0xcccd
   23a30:	umulh	x4, x1, x4
   23a34:	lsr	x4, x4, #3
   23a38:	add	w6, w4, #0x30
   23a3c:	strb	w6, [x5]
   23a40:	add	x4, x4, x4, lsl #2
   23a44:	sub	x1, x1, x4, lsl #1
   23a48:	b.eq	23c2c <PyInit__decimal@@Base+0x79ec>  // b.none
   23a4c:	add	w1, w1, #0x30
   23a50:	strb	w1, [x2]
   23a54:	strb	wzr, [x2, #1]
   23a58:	ldp	x19, x20, [sp, #16]
   23a5c:	ldp	x21, x22, [sp, #32]
   23a60:	ldp	x29, x30, [sp], #64
   23a64:	ret
   23a68:	mov	w4, #0x2e                  	// #46
   23a6c:	strb	w4, [x5]
   23a70:	mov	x5, x2
   23a74:	mov	x2, x0
   23a78:	add	x0, x0, #0x1
   23a7c:	b	23a24 <PyInit__decimal@@Base+0x77e4>
   23a80:	mov	w4, #0x2e                  	// #46
   23a84:	strb	w4, [x6]
   23a88:	mov	x6, x5
   23a8c:	mov	x5, x2
   23a90:	mov	x2, x0
   23a94:	add	x0, x0, #0x1
   23a98:	b	239ec <PyInit__decimal@@Base+0x77ac>
   23a9c:	mov	w4, #0x2e                  	// #46
   23aa0:	strb	w4, [x7]
   23aa4:	mov	x7, x6
   23aa8:	mov	x6, x5
   23aac:	mov	x5, x2
   23ab0:	mov	x2, x0
   23ab4:	add	x0, x0, #0x1
   23ab8:	b	239b0 <PyInit__decimal@@Base+0x7770>
   23abc:	mov	w4, #0x2e                  	// #46
   23ac0:	strb	w4, [x8]
   23ac4:	mov	x8, x7
   23ac8:	mov	x7, x6
   23acc:	mov	x6, x5
   23ad0:	mov	x5, x2
   23ad4:	mov	x2, x0
   23ad8:	add	x0, x0, #0x1
   23adc:	b	23980 <PyInit__decimal@@Base+0x7740>
   23ae0:	mov	w4, #0x2e                  	// #46
   23ae4:	strb	w4, [x9]
   23ae8:	mov	x9, x8
   23aec:	mov	x8, x7
   23af0:	mov	x7, x6
   23af4:	mov	x6, x5
   23af8:	mov	x5, x2
   23afc:	mov	x2, x0
   23b00:	add	x0, x0, #0x1
   23b04:	b	23948 <PyInit__decimal@@Base+0x7708>
   23b08:	mov	w4, #0x2e                  	// #46
   23b0c:	strb	w4, [x10]
   23b10:	mov	x10, x9
   23b14:	mov	x9, x8
   23b18:	mov	x8, x7
   23b1c:	mov	x7, x6
   23b20:	mov	x6, x5
   23b24:	mov	x5, x2
   23b28:	mov	x2, x0
   23b2c:	add	x0, x0, #0x1
   23b30:	b	23914 <PyInit__decimal@@Base+0x76d4>
   23b34:	mov	w4, #0x2e                  	// #46
   23b38:	strb	w4, [x11]
   23b3c:	mov	x11, x10
   23b40:	mov	x10, x9
   23b44:	mov	x9, x8
   23b48:	mov	x8, x7
   23b4c:	mov	x7, x6
   23b50:	mov	x6, x5
   23b54:	mov	x5, x2
   23b58:	mov	x2, x0
   23b5c:	add	x0, x0, #0x1
   23b60:	b	238e0 <PyInit__decimal@@Base+0x76a0>
   23b64:	mov	w4, #0x2e                  	// #46
   23b68:	strb	w4, [x12]
   23b6c:	mov	x12, x11
   23b70:	mov	x11, x10
   23b74:	mov	x10, x9
   23b78:	mov	x9, x8
   23b7c:	mov	x8, x7
   23b80:	mov	x7, x6
   23b84:	mov	x6, x5
   23b88:	mov	x5, x2
   23b8c:	mov	x2, x0
   23b90:	add	x0, x0, #0x1
   23b94:	b	238ac <PyInit__decimal@@Base+0x766c>
   23b98:	mov	w4, #0x2e                  	// #46
   23b9c:	strb	w4, [x13]
   23ba0:	mov	x13, x12
   23ba4:	mov	x12, x11
   23ba8:	mov	x11, x10
   23bac:	mov	x10, x9
   23bb0:	mov	x9, x8
   23bb4:	mov	x8, x7
   23bb8:	mov	x7, x6
   23bbc:	mov	x6, x5
   23bc0:	mov	x5, x2
   23bc4:	mov	x2, x0
   23bc8:	add	x0, x0, #0x1
   23bcc:	b	23874 <PyInit__decimal@@Base+0x7634>
   23bd0:	mov	w4, #0x2e                  	// #46
   23bd4:	strb	w4, [x14]
   23bd8:	mov	x14, x13
   23bdc:	mov	x13, x12
   23be0:	mov	x12, x11
   23be4:	mov	x11, x10
   23be8:	mov	x10, x9
   23bec:	mov	x9, x8
   23bf0:	mov	x8, x7
   23bf4:	mov	x7, x6
   23bf8:	mov	x6, x5
   23bfc:	mov	x5, x2
   23c00:	mov	x2, x0
   23c04:	add	x0, x0, #0x1
   23c08:	b	2383c <PyInit__decimal@@Base+0x75fc>
   23c0c:	mov	x2, x15
   23c10:	mov	w3, #0x2e                  	// #46
   23c14:	strb	w3, [x4]
   23c18:	add	w1, w1, #0x30
   23c1c:	add	x0, x15, #0x1
   23c20:	strb	w1, [x2]
   23c24:	strb	wzr, [x2, #1]
   23c28:	ret
   23c2c:	mov	w3, #0x2e                  	// #46
   23c30:	strb	w3, [x2]
   23c34:	mov	x2, x0
   23c38:	add	w1, w1, #0x30
   23c3c:	add	x0, x0, #0x1
   23c40:	strb	w1, [x2]
   23c44:	strb	wzr, [x2, #1]
   23c48:	ldp	x19, x20, [sp, #16]
   23c4c:	ldp	x21, x22, [sp, #32]
   23c50:	ldp	x29, x30, [sp], #64
   23c54:	ret
   23c58:	mov	w4, #0x2e                  	// #46
   23c5c:	strb	w4, [x16]
   23c60:	mov	x16, x14
   23c64:	mov	x14, x13
   23c68:	mov	x13, x12
   23c6c:	mov	x12, x11
   23c70:	mov	x11, x10
   23c74:	mov	x10, x9
   23c78:	mov	x9, x8
   23c7c:	mov	x8, x7
   23c80:	mov	x7, x6
   23c84:	mov	x6, x5
   23c88:	mov	x5, x2
   23c8c:	mov	x2, x0
   23c90:	add	x0, x0, #0x1
   23c94:	b	23804 <PyInit__decimal@@Base+0x75c4>
   23c98:	mov	w4, #0x2e                  	// #46
   23c9c:	strb	w4, [x17]
   23ca0:	mov	x17, x16
   23ca4:	mov	x16, x14
   23ca8:	mov	x14, x13
   23cac:	mov	x13, x12
   23cb0:	mov	x12, x11
   23cb4:	mov	x11, x10
   23cb8:	mov	x10, x9
   23cbc:	mov	x9, x8
   23cc0:	mov	x8, x7
   23cc4:	mov	x7, x6
   23cc8:	mov	x6, x5
   23ccc:	mov	x5, x2
   23cd0:	mov	x2, x0
   23cd4:	add	x0, x0, #0x1
   23cd8:	b	237cc <PyInit__decimal@@Base+0x758c>
   23cdc:	mov	w4, #0x2e                  	// #46
   23ce0:	strb	w4, [x18]
   23ce4:	mov	x18, x17
   23ce8:	mov	x17, x16
   23cec:	mov	x16, x14
   23cf0:	mov	x14, x13
   23cf4:	mov	x13, x12
   23cf8:	mov	x12, x11
   23cfc:	mov	x11, x10
   23d00:	mov	x10, x9
   23d04:	mov	x9, x8
   23d08:	mov	x8, x7
   23d0c:	mov	x7, x6
   23d10:	mov	x6, x5
   23d14:	mov	x5, x2
   23d18:	mov	x2, x0
   23d1c:	add	x0, x0, #0x1
   23d20:	b	23794 <PyInit__decimal@@Base+0x7554>
   23d24:	mov	w4, #0x2e                  	// #46
   23d28:	strb	w4, [x30]
   23d2c:	mov	x30, x18
   23d30:	mov	x18, x17
   23d34:	mov	x17, x16
   23d38:	mov	x16, x14
   23d3c:	mov	x14, x13
   23d40:	mov	x13, x12
   23d44:	mov	x12, x11
   23d48:	mov	x11, x10
   23d4c:	mov	x10, x9
   23d50:	mov	x9, x8
   23d54:	mov	x8, x7
   23d58:	mov	x7, x6
   23d5c:	mov	x6, x5
   23d60:	mov	x5, x2
   23d64:	mov	x2, x0
   23d68:	add	x0, x0, #0x1
   23d6c:	b	2375c <PyInit__decimal@@Base+0x751c>
   23d70:	mov	w4, #0x2e                  	// #46
   23d74:	strb	w4, [x19]
   23d78:	mov	x19, x30
   23d7c:	mov	x30, x18
   23d80:	mov	x18, x17
   23d84:	mov	x17, x16
   23d88:	mov	x16, x14
   23d8c:	mov	x14, x13
   23d90:	mov	x13, x12
   23d94:	mov	x12, x11
   23d98:	mov	x11, x10
   23d9c:	mov	x10, x9
   23da0:	mov	x9, x8
   23da4:	mov	x8, x7
   23da8:	mov	x7, x6
   23dac:	mov	x6, x5
   23db0:	mov	x5, x2
   23db4:	mov	x2, x0
   23db8:	add	x0, x0, #0x1
   23dbc:	b	2371c <PyInit__decimal@@Base+0x74dc>
   23dc0:	mov	w4, #0x2e                  	// #46
   23dc4:	strb	w4, [x20]
   23dc8:	mov	x20, x19
   23dcc:	mov	x19, x30
   23dd0:	mov	x30, x18
   23dd4:	mov	x18, x17
   23dd8:	mov	x17, x16
   23ddc:	mov	x16, x14
   23de0:	mov	x14, x13
   23de4:	mov	x13, x12
   23de8:	mov	x12, x11
   23dec:	mov	x11, x10
   23df0:	mov	x10, x9
   23df4:	mov	x9, x8
   23df8:	mov	x8, x7
   23dfc:	mov	x7, x6
   23e00:	mov	x6, x5
   23e04:	mov	x5, x2
   23e08:	mov	x2, x0
   23e0c:	add	x0, x0, #0x1
   23e10:	b	236e4 <PyInit__decimal@@Base+0x74a4>
   23e14:	mov	x21, x15
   23e18:	add	x20, x4, #0x2
   23e1c:	add	x19, x4, #0x3
   23e20:	add	x30, x4, #0x4
   23e24:	add	x18, x4, #0x5
   23e28:	add	x17, x4, #0x6
   23e2c:	add	x16, x4, #0x7
   23e30:	add	x14, x4, #0x8
   23e34:	add	x13, x4, #0x9
   23e38:	add	x12, x4, #0xa
   23e3c:	add	x11, x4, #0xb
   23e40:	add	x10, x4, #0xc
   23e44:	add	x9, x4, #0xd
   23e48:	add	x8, x4, #0xe
   23e4c:	add	x7, x4, #0xf
   23e50:	add	x6, x4, #0x10
   23e54:	add	x5, x4, #0x11
   23e58:	add	x2, x4, #0x12
   23e5c:	add	x0, x4, #0x13
   23e60:	mov	x15, x4
   23e64:	stp	x23, x24, [sp, #48]
   23e68:	b	23668 <PyInit__decimal@@Base+0x7428>
   23e6c:	mov	x20, x15
   23e70:	add	x19, x4, #0x2
   23e74:	add	x30, x4, #0x3
   23e78:	add	x18, x4, #0x4
   23e7c:	add	x17, x4, #0x5
   23e80:	add	x16, x4, #0x6
   23e84:	add	x14, x4, #0x7
   23e88:	add	x13, x4, #0x8
   23e8c:	add	x12, x4, #0x9
   23e90:	add	x11, x4, #0xa
   23e94:	add	x10, x4, #0xb
   23e98:	add	x9, x4, #0xc
   23e9c:	add	x8, x4, #0xd
   23ea0:	add	x7, x4, #0xe
   23ea4:	add	x6, x4, #0xf
   23ea8:	add	x5, x4, #0x10
   23eac:	add	x2, x4, #0x11
   23eb0:	add	x0, x4, #0x12
   23eb4:	mov	x21, x4
   23eb8:	b	236a4 <PyInit__decimal@@Base+0x7464>
   23ebc:	mov	x19, x15
   23ec0:	add	x30, x4, #0x2
   23ec4:	add	x18, x4, #0x3
   23ec8:	add	x17, x4, #0x4
   23ecc:	add	x16, x4, #0x5
   23ed0:	add	x14, x4, #0x6
   23ed4:	add	x13, x4, #0x7
   23ed8:	add	x12, x4, #0x8
   23edc:	add	x11, x4, #0x9
   23ee0:	add	x10, x4, #0xa
   23ee4:	add	x9, x4, #0xb
   23ee8:	add	x8, x4, #0xc
   23eec:	add	x7, x4, #0xd
   23ef0:	add	x6, x4, #0xe
   23ef4:	add	x5, x4, #0xf
   23ef8:	add	x2, x4, #0x10
   23efc:	add	x0, x4, #0x11
   23f00:	mov	x20, x4
   23f04:	b	236dc <PyInit__decimal@@Base+0x749c>
   23f08:	mov	x30, x15
   23f0c:	add	x18, x4, #0x2
   23f10:	add	x17, x4, #0x3
   23f14:	add	x16, x4, #0x4
   23f18:	add	x14, x4, #0x5
   23f1c:	add	x13, x4, #0x6
   23f20:	add	x12, x4, #0x7
   23f24:	add	x11, x4, #0x8
   23f28:	add	x10, x4, #0x9
   23f2c:	add	x9, x4, #0xa
   23f30:	add	x8, x4, #0xb
   23f34:	add	x7, x4, #0xc
   23f38:	add	x6, x4, #0xd
   23f3c:	add	x5, x4, #0xe
   23f40:	add	x2, x4, #0xf
   23f44:	add	x0, x4, #0x10
   23f48:	mov	x19, x4
   23f4c:	b	23714 <PyInit__decimal@@Base+0x74d4>
   23f50:	mov	x18, x15
   23f54:	add	x17, x4, #0x2
   23f58:	add	x16, x4, #0x3
   23f5c:	add	x14, x4, #0x4
   23f60:	add	x13, x4, #0x5
   23f64:	add	x12, x4, #0x6
   23f68:	add	x11, x4, #0x7
   23f6c:	add	x10, x4, #0x8
   23f70:	add	x9, x4, #0x9
   23f74:	add	x8, x4, #0xa
   23f78:	add	x7, x4, #0xb
   23f7c:	add	x6, x4, #0xc
   23f80:	add	x5, x4, #0xd
   23f84:	add	x2, x4, #0xe
   23f88:	add	x0, x4, #0xf
   23f8c:	mov	x30, x4
   23f90:	b	23754 <PyInit__decimal@@Base+0x7514>
   23f94:	mov	x17, x15
   23f98:	add	x16, x4, #0x2
   23f9c:	add	x14, x4, #0x3
   23fa0:	add	x13, x4, #0x4
   23fa4:	add	x12, x4, #0x5
   23fa8:	add	x11, x4, #0x6
   23fac:	add	x10, x4, #0x7
   23fb0:	add	x9, x4, #0x8
   23fb4:	add	x8, x4, #0x9
   23fb8:	add	x7, x4, #0xa
   23fbc:	add	x6, x4, #0xb
   23fc0:	add	x5, x4, #0xc
   23fc4:	add	x2, x4, #0xd
   23fc8:	add	x0, x4, #0xe
   23fcc:	mov	x18, x4
   23fd0:	b	2378c <PyInit__decimal@@Base+0x754c>
   23fd4:	mov	x16, x15
   23fd8:	add	x14, x4, #0x2
   23fdc:	add	x13, x4, #0x3
   23fe0:	add	x12, x4, #0x4
   23fe4:	add	x11, x4, #0x5
   23fe8:	add	x10, x4, #0x6
   23fec:	add	x9, x4, #0x7
   23ff0:	add	x8, x4, #0x8
   23ff4:	add	x7, x4, #0x9
   23ff8:	add	x6, x4, #0xa
   23ffc:	add	x5, x4, #0xb
   24000:	add	x2, x4, #0xc
   24004:	add	x0, x4, #0xd
   24008:	mov	x17, x4
   2400c:	b	237c4 <PyInit__decimal@@Base+0x7584>
   24010:	mov	x14, x15
   24014:	add	x13, x4, #0x2
   24018:	add	x12, x4, #0x3
   2401c:	add	x11, x4, #0x4
   24020:	add	x10, x4, #0x5
   24024:	add	x9, x4, #0x6
   24028:	add	x8, x4, #0x7
   2402c:	add	x7, x4, #0x8
   24030:	add	x6, x4, #0x9
   24034:	add	x5, x4, #0xa
   24038:	add	x2, x4, #0xb
   2403c:	add	x0, x4, #0xc
   24040:	mov	x16, x4
   24044:	b	237fc <PyInit__decimal@@Base+0x75bc>
   24048:	mov	x13, x15
   2404c:	add	x12, x4, #0x2
   24050:	add	x11, x4, #0x3
   24054:	add	x10, x4, #0x4
   24058:	add	x9, x4, #0x5
   2405c:	add	x8, x4, #0x6
   24060:	add	x7, x4, #0x7
   24064:	add	x6, x4, #0x8
   24068:	add	x5, x4, #0x9
   2406c:	add	x2, x4, #0xa
   24070:	add	x0, x4, #0xb
   24074:	mov	x14, x4
   24078:	b	23834 <PyInit__decimal@@Base+0x75f4>
   2407c:	mov	x12, x15
   24080:	add	x11, x4, #0x2
   24084:	add	x10, x4, #0x3
   24088:	add	x9, x4, #0x4
   2408c:	add	x8, x4, #0x5
   24090:	add	x7, x4, #0x6
   24094:	add	x6, x4, #0x7
   24098:	add	x5, x4, #0x8
   2409c:	add	x2, x4, #0x9
   240a0:	add	x0, x4, #0xa
   240a4:	mov	x13, x4
   240a8:	b	2386c <PyInit__decimal@@Base+0x762c>
   240ac:	mov	x11, x15
   240b0:	add	x10, x4, #0x2
   240b4:	add	x9, x4, #0x3
   240b8:	add	x8, x4, #0x4
   240bc:	add	x7, x4, #0x5
   240c0:	add	x6, x4, #0x6
   240c4:	add	x5, x4, #0x7
   240c8:	add	x2, x4, #0x8
   240cc:	add	x0, x4, #0x9
   240d0:	mov	x12, x4
   240d4:	b	238a4 <PyInit__decimal@@Base+0x7664>
   240d8:	mov	x10, x15
   240dc:	add	x9, x4, #0x2
   240e0:	add	x8, x4, #0x3
   240e4:	add	x7, x4, #0x4
   240e8:	add	x6, x4, #0x5
   240ec:	add	x5, x4, #0x6
   240f0:	add	x2, x4, #0x7
   240f4:	add	x0, x4, #0x8
   240f8:	mov	x11, x4
   240fc:	b	238d8 <PyInit__decimal@@Base+0x7698>
   24100:	mov	x9, x15
   24104:	add	x8, x4, #0x2
   24108:	add	x7, x4, #0x3
   2410c:	add	x6, x4, #0x4
   24110:	add	x5, x4, #0x5
   24114:	add	x2, x4, #0x6
   24118:	add	x0, x4, #0x7
   2411c:	mov	x10, x4
   24120:	b	2390c <PyInit__decimal@@Base+0x76cc>
   24124:	mov	x8, x15
   24128:	add	x7, x4, #0x2
   2412c:	add	x6, x4, #0x3
   24130:	add	x5, x4, #0x4
   24134:	add	x2, x4, #0x5
   24138:	add	x0, x4, #0x6
   2413c:	mov	x9, x4
   24140:	b	23940 <PyInit__decimal@@Base+0x7700>
   24144:	mov	x7, x15
   24148:	add	x6, x4, #0x2
   2414c:	add	x5, x4, #0x3
   24150:	add	x2, x4, #0x4
   24154:	add	x0, x4, #0x5
   24158:	mov	x8, x4
   2415c:	b	23978 <PyInit__decimal@@Base+0x7738>
   24160:	mov	x6, x15
   24164:	add	x5, x4, #0x2
   24168:	add	x2, x4, #0x3
   2416c:	add	x0, x4, #0x4
   24170:	mov	x7, x4
   24174:	b	239a8 <PyInit__decimal@@Base+0x7768>
   24178:	mov	x5, x15
   2417c:	add	x2, x4, #0x2
   24180:	add	x0, x4, #0x3
   24184:	mov	x6, x4
   24188:	b	239e4 <PyInit__decimal@@Base+0x77a4>
   2418c:	mov	x2, x15
   24190:	add	x0, x4, #0x2
   24194:	mov	x5, x4
   24198:	b	23a1c <PyInit__decimal@@Base+0x77dc>
   2419c:	mov	x22, x4
   241a0:	mov	w23, #0x2e                  	// #46
   241a4:	mov	x4, x15
   241a8:	mov	x15, x21
   241ac:	mov	x21, x20
   241b0:	mov	x20, x19
   241b4:	strb	w23, [x22], #21
   241b8:	mov	x19, x30
   241bc:	mov	x30, x18
   241c0:	mov	x18, x17
   241c4:	mov	x17, x16
   241c8:	mov	x16, x14
   241cc:	mov	x14, x13
   241d0:	mov	x13, x12
   241d4:	mov	x12, x11
   241d8:	mov	x11, x10
   241dc:	mov	x10, x9
   241e0:	mov	x9, x8
   241e4:	mov	x8, x7
   241e8:	mov	x7, x6
   241ec:	mov	x6, x5
   241f0:	mov	x5, x2
   241f4:	mov	x2, x0
   241f8:	mov	x0, x22
   241fc:	b	23644 <PyInit__decimal@@Base+0x7404>
   24200:	mov	w4, #0x2e                  	// #46
   24204:	strb	w4, [x21]
   24208:	mov	x21, x20
   2420c:	mov	x20, x19
   24210:	mov	x19, x30
   24214:	mov	x30, x18
   24218:	mov	x18, x17
   2421c:	mov	x17, x16
   24220:	mov	x16, x14
   24224:	mov	x14, x13
   24228:	mov	x13, x12
   2422c:	mov	x12, x11
   24230:	mov	x11, x10
   24234:	mov	x10, x9
   24238:	mov	x9, x8
   2423c:	mov	x8, x7
   24240:	mov	x7, x6
   24244:	mov	x6, x5
   24248:	mov	x5, x2
   2424c:	mov	x2, x0
   24250:	add	x0, x0, #0x1
   24254:	b	236ac <PyInit__decimal@@Base+0x746c>
   24258:	mov	w4, #0x2e                  	// #46
   2425c:	strb	w4, [x15]
   24260:	mov	x15, x21
   24264:	mov	x21, x20
   24268:	mov	x20, x19
   2426c:	mov	x19, x30
   24270:	mov	x30, x18
   24274:	mov	x18, x17
   24278:	mov	x17, x16
   2427c:	mov	x16, x14
   24280:	mov	x14, x13
   24284:	mov	x13, x12
   24288:	mov	x12, x11
   2428c:	mov	x11, x10
   24290:	mov	x10, x9
   24294:	mov	x9, x8
   24298:	mov	x8, x7
   2429c:	mov	x7, x6
   242a0:	mov	x6, x5
   242a4:	mov	x5, x2
   242a8:	mov	x2, x0
   242ac:	add	x0, x0, #0x1
   242b0:	b	23670 <PyInit__decimal@@Base+0x7430>
   242b4:	nop
   242b8:	stp	x29, x30, [sp, #-144]!
   242bc:	mov	x29, sp
   242c0:	stp	x19, x20, [sp, #16]
   242c4:	mov	x20, x1
   242c8:	stp	x23, x24, [sp, #48]
   242cc:	mov	x23, x3
   242d0:	str	w2, [sp, #104]
   242d4:	str	x0, [sp, #120]
   242d8:	mov	x0, x1
   242dc:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   242e0:	cbnz	w0, 24910 <PyInit__decimal@@Base+0x86d0>
   242e4:	ldr	w2, [sp, #104]
   242e8:	ldr	x1, [x20, #8]
   242ec:	and	w0, w2, #0x8
   242f0:	str	w0, [sp, #140]
   242f4:	ldr	x0, [x20, #16]
   242f8:	add	x3, x0, x1
   242fc:	str	x3, [sp, #128]
   24300:	tbz	w2, #3, 24894 <PyInit__decimal@@Base+0x8654>
   24304:	cmp	x23, x0
   24308:	add	x2, x0, #0x2
   2430c:	sub	x2, x2, x23
   24310:	csel	x0, x23, x0, ge  // ge = tcont
   24314:	cmp	x23, #0x0
   24318:	mov	x1, #0x1                   	// #1
   2431c:	csel	x0, x2, x0, le
   24320:	add	x0, x0, #0x1a
   24324:	bl	28278 <PyInit__decimal@@Base+0xc038>
   24328:	str	x0, [sp, #112]
   2432c:	mov	x19, x0
   24330:	cbz	x0, 25758 <PyInit__decimal@@Base+0x9518>
   24334:	mov	x0, x20
   24338:	stp	x21, x22, [sp, #32]
   2433c:	bl	2a878 <PyInit__decimal@@Base+0xe638>
   24340:	cbz	w0, 248e4 <PyInit__decimal@@Base+0x86a4>
   24344:	mov	w0, #0x2d                  	// #45
   24348:	strb	w0, [x19], #1
   2434c:	cmp	x23, #0x0
   24350:	b.le	24d50 <PyInit__decimal@@Base+0x8b10>
   24354:	ldr	x0, [x20, #16]
   24358:	cmp	x0, x23
   2435c:	mov	x0, x20
   24360:	b.le	2512c <PyInit__decimal@@Base+0x8eec>
   24364:	bl	2a568 <PyInit__decimal@@Base+0xe328>
   24368:	add	x21, x19, x23
   2436c:	mov	x22, x0
   24370:	bl	2a3f0 <PyInit__decimal@@Base+0xe1b0>
   24374:	mov	x3, x21
   24378:	mov	w2, w0
   2437c:	mov	x1, x22
   24380:	mov	x0, x19
   24384:	bl	23590 <PyInit__decimal@@Base+0x7350>
   24388:	mov	x19, x0
   2438c:	ldr	x2, [x20, #24]
   24390:	subs	x2, x2, #0x2
   24394:	b.mi	247f4 <PyInit__decimal@@Base+0x85b4>  // b.first
   24398:	mov	x16, #0x7857                	// #30807
   2439c:	mov	x14, #0xeac3                	// #60099
   243a0:	mov	x13, #0x8000                	// #32768
   243a4:	mov	x12, #0xcd81                	// #52609
   243a8:	mov	x10, #0x385                 	// #901
   243ac:	mov	x8, #0x2233                	// #8755
   243b0:	mov	x6, #0xaaff                	// #43775
   243b4:	mov	x4, #0xd5bf                	// #54719
   243b8:	mov	x3, #0x5a53                	// #23123
   243bc:	mov	x30, #0x42bd                	// #17085
   243c0:	stp	x27, x28, [sp, #80]
   243c4:	mov	x27, #0xcefd                	// #52989
   243c8:	mov	x22, #0xa7640000            	// #2808348672
   243cc:	mov	x18, #0x1b53                	// #6995
   243d0:	mov	x17, #0x5d8a0000            	// #1569325056
   243d4:	movk	x16, #0xb113, lsl #16
   243d8:	mov	x15, #0x6fc10000            	// #1874919424
   243dc:	movk	x14, #0xf3dc, lsl #16
   243e0:	movk	x13, #0xa4c6, lsl #16
   243e4:	movk	x12, #0x5095, lsl #16
   243e8:	mov	x11, #0x4000                	// #16384
   243ec:	movk	x10, #0x92ed, lsl #16
   243f0:	mov	x9, #0xa000                	// #40960
   243f4:	movk	x8, #0x5bd4, lsl #16
   243f8:	mov	x7, #0x1000                	// #4096
   243fc:	movk	x6, #0xcb24, lsl #16
   24400:	mov	x5, #0xe800                	// #59392
   24404:	movk	x4, #0xbded, lsl #16
   24408:	movk	x3, #0xa09b, lsl #16
   2440c:	movk	x27, #0x8461, lsl #16
   24410:	movk	x30, #0xe57a, lsl #16
   24414:	movk	x22, #0xb6b3, lsl #32
   24418:	movk	x18, #0xd519, lsl #16
   2441c:	movk	x17, #0x4578, lsl #32
   24420:	movk	x16, #0x652f, lsl #32
   24424:	movk	x15, #0x86f2, lsl #32
   24428:	movk	x14, #0x4075, lsl #32
   2442c:	movk	x13, #0x8d7e, lsl #32
   24430:	movk	x12, #0x4dc3, lsl #32
   24434:	movk	x11, #0x107a, lsl #16
   24438:	movk	x10, #0x84d0, lsl #32
   2443c:	movk	x9, #0x4e72, lsl #16
   24440:	movk	x8, #0x3302, lsl #32
   24444:	movk	x7, #0xd4a5, lsl #16
   24448:	movk	x6, #0xff0b, lsl #32
   2444c:	movk	x5, #0x4876, lsl #16
   24450:	movk	x4, #0xfece, lsl #32
   24454:	movk	x3, #0xb82f, lsl #32
   24458:	movk	x27, #0x7711, lsl #32
   2445c:	movk	x30, #0x94d5, lsl #32
   24460:	movk	x22, #0xde0, lsl #48
   24464:	movk	x18, #0x5c3b, lsl #32
   24468:	movk	x17, #0x163, lsl #48
   2446c:	movk	x16, #0x39a5, lsl #48
   24470:	movk	x15, #0x23, lsl #48
   24474:	movk	x14, #0x2, lsl #48
   24478:	movk	x13, #0x3, lsl #48
   2447c:	movk	x12, #0xb42, lsl #48
   24480:	movk	x11, #0x5af3, lsl #32
   24484:	movk	x10, #0x384b, lsl #48
   24488:	movk	x9, #0x918, lsl #32
   2448c:	movk	x8, #0x232f, lsl #48
   24490:	movk	x7, #0xe8, lsl #32
   24494:	movk	x6, #0xafeb, lsl #48
   24498:	movk	x5, #0x17, lsl #32
   2449c:	movk	x4, #0xdbe6, lsl #48
   244a0:	movk	x3, #0x44, lsl #48
   244a4:	movk	x27, #0xabcc, lsl #48
   244a8:	movk	x30, #0xd6bf, lsl #48
   244ac:	stp	x25, x26, [sp, #64]
   244b0:	cmp	x21, x19
   244b4:	ldr	x0, [x20, #40]
   244b8:	add	x24, x19, #0x1
   244bc:	ldr	x0, [x0, x2, lsl #3]
   244c0:	b.eq	25538 <PyInit__decimal@@Base+0x92f8>  // b.none
   244c4:	mov	x25, #0x490f                	// #18703
   244c8:	lsr	x1, x0, #18
   244cc:	movk	x25, #0x7747, lsl #16
   244d0:	cmp	x21, x24
   244d4:	movk	x25, #0x49c9, lsl #32
   244d8:	umulh	x1, x1, x25
   244dc:	lsr	x1, x1, #24
   244e0:	add	w25, w1, #0x30
   244e4:	strb	w25, [x19]
   244e8:	msub	x0, x1, x22, x0
   244ec:	b.eq	25650 <PyInit__decimal@@Base+0x9410>  // b.none
   244f0:	lsr	x1, x0, #17
   244f4:	mov	x19, x24
   244f8:	umulh	x1, x1, x18
   244fc:	lsr	x1, x1, #22
   24500:	add	w25, w1, #0x30
   24504:	strb	w25, [x19], #1
   24508:	msub	x1, x1, x17, x0
   2450c:	cmp	x21, x19
   24510:	b.eq	25640 <PyInit__decimal@@Base+0x9400>  // b.none
   24514:	umulh	x0, x1, x16
   24518:	mov	x24, x19
   2451c:	lsr	x0, x0, #51
   24520:	add	w25, w0, #0x30
   24524:	strb	w25, [x24], #1
   24528:	msub	x1, x0, x15, x1
   2452c:	cmp	x21, x24
   24530:	b.eq	25630 <PyInit__decimal@@Base+0x93f0>  // b.none
   24534:	lsr	x0, x1, #15
   24538:	mov	x19, x24
   2453c:	umulh	x0, x0, x14
   24540:	lsr	x0, x0, #20
   24544:	add	w25, w0, #0x30
   24548:	strb	w25, [x19], #1
   2454c:	msub	x0, x0, x13, x1
   24550:	cmp	x21, x19
   24554:	b.eq	25620 <PyInit__decimal@@Base+0x93e0>  // b.none
   24558:	umulh	x1, x0, x12
   2455c:	mov	x24, x19
   24560:	lsr	x1, x1, #42
   24564:	add	w25, w1, #0x30
   24568:	strb	w25, [x24], #1
   2456c:	msub	x0, x1, x11, x0
   24570:	cmp	x21, x24
   24574:	b.eq	25610 <PyInit__decimal@@Base+0x93d0>  // b.none
   24578:	umulh	x1, x0, x10
   2457c:	mov	x19, x24
   24580:	lsr	x1, x1, #41
   24584:	add	w25, w1, #0x30
   24588:	strb	w25, [x19], #1
   2458c:	msub	x1, x1, x9, x0
   24590:	cmp	x21, x19
   24594:	b.eq	25600 <PyInit__decimal@@Base+0x93c0>  // b.none
   24598:	umulh	x0, x1, x8
   2459c:	mov	x24, x19
   245a0:	lsr	x0, x0, #37
   245a4:	add	w25, w0, #0x30
   245a8:	strb	w25, [x24], #1
   245ac:	msub	x0, x0, x7, x1
   245b0:	cmp	x21, x24
   245b4:	b.eq	255f0 <PyInit__decimal@@Base+0x93b0>  // b.none
   245b8:	umulh	x1, x0, x6
   245bc:	mov	x19, x24
   245c0:	lsr	x1, x1, #36
   245c4:	add	w25, w1, #0x30
   245c8:	strb	w25, [x19], #1
   245cc:	msub	x0, x1, x5, x0
   245d0:	cmp	x21, x19
   245d4:	b.eq	255e0 <PyInit__decimal@@Base+0x93a0>  // b.none
   245d8:	umulh	x1, x0, x4
   245dc:	mov	x24, x19
   245e0:	mov	x25, #0xe400                	// #58368
   245e4:	movk	x25, #0x540b, lsl #16
   245e8:	lsr	x1, x1, #33
   245ec:	movk	x25, #0x2, lsl #32
   245f0:	add	w26, w1, #0x30
   245f4:	strb	w26, [x24], #1
   245f8:	msub	x1, x1, x25, x0
   245fc:	cmp	x21, x24
   24600:	b.eq	255d0 <PyInit__decimal@@Base+0x9390>  // b.none
   24604:	lsr	x0, x1, #9
   24608:	mov	x19, x24
   2460c:	mov	x25, #0xca00                	// #51712
   24610:	movk	x25, #0x3b9a, lsl #16
   24614:	umulh	x0, x0, x3
   24618:	lsr	x0, x0, #11
   2461c:	add	w26, w0, #0x30
   24620:	strb	w26, [x19], #1
   24624:	msub	x0, x0, x25, x1
   24628:	cmp	x21, x19
   2462c:	b.eq	255c0 <PyInit__decimal@@Base+0x9380>  // b.none
   24630:	umulh	x24, x0, x27
   24634:	mov	x26, x19
   24638:	mov	x1, #0xe100                	// #57600
   2463c:	movk	x1, #0x5f5, lsl #16
   24640:	lsr	x24, x24, #26
   24644:	add	w25, w24, #0x30
   24648:	strb	w25, [x26], #1
   2464c:	msub	x0, x24, x1, x0
   24650:	cmp	x21, x26
   24654:	b.eq	255b0 <PyInit__decimal@@Base+0x9370>  // b.none
   24658:	umulh	x1, x0, x30
   2465c:	mov	x25, x26
   24660:	mov	x24, #0x9680                	// #38528
   24664:	movk	x24, #0x98, lsl #16
   24668:	lsr	x1, x1, #23
   2466c:	add	w19, w1, #0x30
   24670:	strb	w19, [x25], #1
   24674:	msub	x24, x1, x24, x0
   24678:	cmp	x21, x25
   2467c:	b.eq	255a0 <PyInit__decimal@@Base+0x9360>  // b.none
   24680:	mov	x0, #0x34db                	// #13531
   24684:	mov	x19, x25
   24688:	movk	x0, #0xd7b6, lsl #16
   2468c:	mov	x1, #0x4240                	// #16960
   24690:	movk	x0, #0xde82, lsl #32
   24694:	movk	x1, #0xf, lsl #16
   24698:	movk	x0, #0x431b, lsl #48
   2469c:	umulh	x0, x24, x0
   246a0:	lsr	x0, x0, #18
   246a4:	add	w26, w0, #0x30
   246a8:	strb	w26, [x19], #1
   246ac:	msub	x1, x0, x1, x24
   246b0:	cmp	x21, x19
   246b4:	b.eq	25590 <PyInit__decimal@@Base+0x9350>  // b.none
   246b8:	mov	x26, #0x7843                	// #30787
   246bc:	lsr	x0, x1, #5
   246c0:	movk	x26, #0x71b4, lsl #16
   246c4:	mov	x24, x19
   246c8:	movk	x26, #0x5ac4, lsl #32
   246cc:	mov	x25, #0x86a0                	// #34464
   246d0:	movk	x26, #0xa7c, lsl #48
   246d4:	movk	x25, #0x1, lsl #16
   246d8:	umulh	x0, x0, x26
   246dc:	lsr	x0, x0, #7
   246e0:	add	w26, w0, #0x30
   246e4:	strb	w26, [x24], #1
   246e8:	msub	x0, x0, x25, x1
   246ec:	cmp	x21, x24
   246f0:	b.eq	25580 <PyInit__decimal@@Base+0x9340>  // b.none
   246f4:	mov	x1, #0x594b                	// #22859
   246f8:	mov	x19, x24
   246fc:	movk	x1, #0x3886, lsl #16
   24700:	mov	x25, #0x2710                	// #10000
   24704:	movk	x1, #0xc5d6, lsl #32
   24708:	movk	x1, #0x346d, lsl #48
   2470c:	umulh	x1, x0, x1
   24710:	lsr	x1, x1, #11
   24714:	add	w26, w1, #0x30
   24718:	strb	w26, [x19], #1
   2471c:	msub	x0, x1, x25, x0
   24720:	cmp	x21, x19
   24724:	b.eq	25570 <PyInit__decimal@@Base+0x9330>  // b.none
   24728:	mov	x25, #0xf7cf                	// #63439
   2472c:	lsr	x1, x0, #3
   24730:	movk	x25, #0xe353, lsl #16
   24734:	mov	x24, x19
   24738:	movk	x25, #0x9ba5, lsl #32
   2473c:	movk	x25, #0x20c4, lsl #48
   24740:	umulh	x1, x1, x25
   24744:	lsr	x1, x1, #4
   24748:	add	w26, w1, #0x30
   2474c:	strb	w26, [x24], #1
   24750:	lsl	x25, x1, #5
   24754:	sub	x25, x25, x1
   24758:	cmp	x21, x24
   2475c:	add	x1, x1, x25, lsl #2
   24760:	sub	x0, x0, x1, lsl #3
   24764:	b.eq	25560 <PyInit__decimal@@Base+0x9320>  // b.none
   24768:	mov	x25, #0xf5c3                	// #62915
   2476c:	lsr	x1, x0, #2
   24770:	movk	x25, #0x5c28, lsl #16
   24774:	mov	x19, x24
   24778:	movk	x25, #0xc28f, lsl #32
   2477c:	movk	x25, #0x28f5, lsl #48
   24780:	umulh	x1, x1, x25
   24784:	lsr	x1, x1, #2
   24788:	add	w26, w1, #0x30
   2478c:	strb	w26, [x19], #1
   24790:	add	x25, x1, x1, lsl #1
   24794:	cmp	x21, x19
   24798:	add	x1, x1, x25, lsl #3
   2479c:	sub	x1, x0, x1, lsl #2
   247a0:	b.eq	25550 <PyInit__decimal@@Base+0x9310>  // b.none
   247a4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   247a8:	mov	x24, x19
   247ac:	movk	x0, #0xcccd
   247b0:	umulh	x0, x1, x0
   247b4:	lsr	x0, x0, #3
   247b8:	add	w25, w0, #0x30
   247bc:	strb	w25, [x24], #1
   247c0:	add	x0, x0, x0, lsl #2
   247c4:	cmp	x21, x24
   247c8:	sub	x0, x1, x0, lsl #1
   247cc:	add	w0, w0, #0x30
   247d0:	b.eq	25504 <PyInit__decimal@@Base+0x92c4>  // b.none
   247d4:	strb	w0, [x19, #1]
   247d8:	sub	x2, x2, #0x1
   247dc:	strb	wzr, [x19, #2]
   247e0:	cmn	x2, #0x1
   247e4:	add	x19, x19, #0x2
   247e8:	b.ne	244b0 <PyInit__decimal@@Base+0x8270>  // b.any
   247ec:	ldp	x25, x26, [sp, #64]
   247f0:	ldp	x27, x28, [sp, #80]
   247f4:	ldr	w0, [sp, #140]
   247f8:	ldr	x2, [sp, #128]
   247fc:	cmp	w0, #0x0
   24800:	ccmp	x23, x2, #0x0, eq  // eq = none
   24804:	b.eq	24858 <PyInit__decimal@@Base+0x8618>  // b.none
   24808:	ldr	x0, [sp, #104]
   2480c:	mov	w1, #0x65                  	// #101
   24810:	tst	x0, #0x1
   24814:	mov	w0, #0x45                  	// #69
   24818:	csel	w0, w0, w1, ne  // ne = any
   2481c:	strb	w0, [x19]
   24820:	subs	x20, x2, x23
   24824:	mov	w0, #0x2b                  	// #43
   24828:	b.pl	24834 <PyInit__decimal@@Base+0x85f4>  // b.nfrst
   2482c:	sub	x20, x23, x2
   24830:	mov	w0, #0x2d                  	// #45
   24834:	strb	w0, [x19, #1]
   24838:	mov	x0, x20
   2483c:	bl	2a3f0 <PyInit__decimal@@Base+0xe1b0>
   24840:	mov	w2, w0
   24844:	mov	x1, x20
   24848:	add	x0, x19, #0x2
   2484c:	mov	x3, #0x0                   	// #0
   24850:	bl	23590 <PyInit__decimal@@Base+0x7350>
   24854:	mov	x19, x0
   24858:	ldr	x0, [sp, #104]
   2485c:	tbz	w0, #5, 24870 <PyInit__decimal@@Base+0x8630>
   24860:	mov	x0, x19
   24864:	mov	w1, #0x25                  	// #37
   24868:	strb	w1, [x0], #1
   2486c:	mov	x19, x0
   24870:	ldp	x1, x2, [sp, #112]
   24874:	strb	wzr, [x19]
   24878:	ldp	x21, x22, [sp, #32]
   2487c:	sub	x0, x19, x1
   24880:	str	x1, [x2]
   24884:	ldp	x19, x20, [sp, #16]
   24888:	ldp	x23, x24, [sp, #48]
   2488c:	ldp	x29, x30, [sp], #144
   24890:	ret
   24894:	tbnz	w2, #4, 24908 <PyInit__decimal@@Base+0x86c8>
   24898:	cmp	x1, #0x0
   2489c:	ccmn	x3, #0x5, #0x1, le
   248a0:	b.ge	24908 <PyInit__decimal@@Base+0x86c8>  // b.tcont
   248a4:	tbz	w2, #2, 24304 <PyInit__decimal@@Base+0x80c4>
   248a8:	mov	x0, x20
   248ac:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
   248b0:	cbz	w0, 2571c <PyInit__decimal@@Base+0x94dc>
   248b4:	ldp	x2, x0, [x20, #8]
   248b8:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   248bc:	movk	x1, #0x5556
   248c0:	add	x2, x2, #0x2
   248c4:	smulh	x1, x2, x1
   248c8:	sub	x1, x1, x2, asr #63
   248cc:	add	x1, x1, x1, lsl #1
   248d0:	subs	x1, x2, x1
   248d4:	add	x2, x1, #0x3
   248d8:	csel	x1, x2, x1, mi  // mi = first
   248dc:	sub	x23, x1, #0x1
   248e0:	b	24304 <PyInit__decimal@@Base+0x80c4>
   248e4:	ldr	x0, [sp, #104]
   248e8:	tbnz	w0, #6, 254dc <PyInit__decimal@@Base+0x929c>
   248ec:	mov	x1, x0
   248f0:	ldr	x0, [sp, #112]
   248f4:	mov	x19, x0
   248f8:	tbz	w1, #7, 2434c <PyInit__decimal@@Base+0x810c>
   248fc:	mov	w0, #0x2b                  	// #43
   24900:	strb	w0, [x19], #1
   24904:	b	2434c <PyInit__decimal@@Base+0x810c>
   24908:	mov	x23, x3
   2490c:	b	24304 <PyInit__decimal@@Base+0x80c4>
   24910:	mov	x0, x20
   24914:	bl	2a868 <PyInit__decimal@@Base+0xe628>
   24918:	mov	w1, w0
   2491c:	mov	x0, #0xb                   	// #11
   24920:	cbz	w1, 24938 <PyInit__decimal@@Base+0x86f8>
   24924:	ldr	x1, [x20, #24]
   24928:	cmp	x1, #0x0
   2492c:	b.le	24938 <PyInit__decimal@@Base+0x86f8>
   24930:	ldr	x0, [x20, #16]
   24934:	add	x0, x0, #0xb
   24938:	mov	x1, #0x1                   	// #1
   2493c:	bl	28278 <PyInit__decimal@@Base+0xc038>
   24940:	str	x0, [sp, #112]
   24944:	cbz	x0, 25758 <PyInit__decimal@@Base+0x9518>
   24948:	mov	x0, x20
   2494c:	stp	x21, x22, [sp, #32]
   24950:	bl	2a878 <PyInit__decimal@@Base+0xe638>
   24954:	cbz	w0, 254ec <PyInit__decimal@@Base+0x92ac>
   24958:	ldr	x21, [sp, #112]
   2495c:	mov	w0, #0x2d                  	// #45
   24960:	strb	w0, [x21], #1
   24964:	mov	x0, x20
   24968:	bl	2a868 <PyInit__decimal@@Base+0xe628>
   2496c:	cbz	w0, 256a8 <PyInit__decimal@@Base+0x9468>
   24970:	mov	x0, x20
   24974:	bl	2a898 <PyInit__decimal@@Base+0xe658>
   24978:	cbz	w0, 256f0 <PyInit__decimal@@Base+0x94b0>
   2497c:	mov	x19, x21
   24980:	mov	w0, #0x614e                	// #24910
   24984:	movk	w0, #0x4e, lsl #16
   24988:	str	w0, [x19], #3
   2498c:	ldr	x0, [x20, #24]
   24990:	cmp	x0, #0x0
   24994:	b.le	24858 <PyInit__decimal@@Base+0x8618>
   24998:	mov	x0, x20
   2499c:	bl	2a568 <PyInit__decimal@@Base+0xe328>
   249a0:	mov	x21, x0
   249a4:	bl	2a3f0 <PyInit__decimal@@Base+0xe1b0>
   249a8:	mov	x1, x21
   249ac:	mov	w2, w0
   249b0:	mov	x3, #0x0                   	// #0
   249b4:	mov	x0, x19
   249b8:	bl	23590 <PyInit__decimal@@Base+0x7350>
   249bc:	mov	x19, x0
   249c0:	ldr	x4, [x20, #24]
   249c4:	subs	x4, x4, #0x2
   249c8:	b.mi	24858 <PyInit__decimal@@Base+0x8618>  // b.first
   249cc:	mov	x23, #0x7857                	// #30807
   249d0:	mov	x21, #0xeac3                	// #60099
   249d4:	mov	x18, #0x8000                	// #32768
   249d8:	mov	x17, #0xcd81                	// #52609
   249dc:	mov	x15, #0x385                 	// #901
   249e0:	mov	x13, #0x2233                	// #8755
   249e4:	stp	x27, x28, [sp, #80]
   249e8:	mov	x28, #0xaaff                	// #43775
   249ec:	mov	x27, #0x490f                	// #18703
   249f0:	mov	x24, #0x5d8a0000            	// #1569325056
   249f4:	movk	x23, #0xb113, lsl #16
   249f8:	mov	x22, #0x6fc10000            	// #1874919424
   249fc:	movk	x21, #0xf3dc, lsl #16
   24a00:	movk	x18, #0xa4c6, lsl #16
   24a04:	movk	x17, #0x5095, lsl #16
   24a08:	mov	x16, #0x4000                	// #16384
   24a0c:	movk	x15, #0x92ed, lsl #16
   24a10:	mov	x14, #0xa000                	// #40960
   24a14:	movk	x13, #0x5bd4, lsl #16
   24a18:	mov	x12, #0x1000                	// #4096
   24a1c:	movk	x28, #0xcb24, lsl #16
   24a20:	mov	x30, #0xe800                	// #59392
   24a24:	stp	x25, x26, [sp, #64]
   24a28:	mov	x26, #0xa7640000            	// #2808348672
   24a2c:	mov	x25, #0x1b53                	// #6995
   24a30:	movk	x27, #0x7747, lsl #16
   24a34:	movk	x26, #0xb6b3, lsl #32
   24a38:	movk	x25, #0xd519, lsl #16
   24a3c:	movk	x24, #0x4578, lsl #32
   24a40:	movk	x23, #0x652f, lsl #32
   24a44:	movk	x22, #0x86f2, lsl #32
   24a48:	movk	x21, #0x4075, lsl #32
   24a4c:	movk	x18, #0x8d7e, lsl #32
   24a50:	movk	x17, #0x4dc3, lsl #32
   24a54:	movk	x16, #0x107a, lsl #16
   24a58:	movk	x15, #0x84d0, lsl #32
   24a5c:	movk	x14, #0x4e72, lsl #16
   24a60:	movk	x13, #0x3302, lsl #32
   24a64:	movk	x12, #0xd4a5, lsl #16
   24a68:	movk	x28, #0xff0b, lsl #32
   24a6c:	movk	x30, #0x4876, lsl #16
   24a70:	movk	x27, #0x49c9, lsl #32
   24a74:	movk	x26, #0xde0, lsl #48
   24a78:	movk	x25, #0x5c3b, lsl #32
   24a7c:	movk	x24, #0x163, lsl #48
   24a80:	movk	x23, #0x39a5, lsl #48
   24a84:	movk	x22, #0x23, lsl #48
   24a88:	movk	x21, #0x2, lsl #48
   24a8c:	movk	x18, #0x3, lsl #48
   24a90:	movk	x17, #0xb42, lsl #48
   24a94:	movk	x16, #0x5af3, lsl #32
   24a98:	movk	x15, #0x384b, lsl #48
   24a9c:	movk	x14, #0x918, lsl #32
   24aa0:	movk	x13, #0x232f, lsl #48
   24aa4:	movk	x12, #0xe8, lsl #32
   24aa8:	movk	x28, #0xafeb, lsl #48
   24aac:	movk	x30, #0x17, lsl #32
   24ab0:	b	24d3c <PyInit__decimal@@Base+0x8afc>
   24ab4:	lsr	x1, x0, #18
   24ab8:	mov	x3, #0xe400                	// #58368
   24abc:	movk	x3, #0x540b, lsl #16
   24ac0:	mov	x10, #0xca00                	// #51712
   24ac4:	movk	x3, #0x2, lsl #32
   24ac8:	movk	x10, #0x3b9a, lsl #16
   24acc:	umulh	x1, x1, x27
   24ad0:	mov	x9, #0xe100                	// #57600
   24ad4:	movk	x9, #0x5f5, lsl #16
   24ad8:	mov	x8, #0x9680                	// #38528
   24adc:	movk	x8, #0x98, lsl #16
   24ae0:	mov	x7, #0x4240                	// #16960
   24ae4:	lsr	x1, x1, #24
   24ae8:	movk	x7, #0xf, lsl #16
   24aec:	add	w11, w1, #0x30
   24af0:	strb	w11, [x19]
   24af4:	mov	x6, #0x86a0                	// #34464
   24af8:	mov	x5, #0x2710                	// #10000
   24afc:	msub	x0, x1, x26, x0
   24b00:	movk	x6, #0x1, lsl #16
   24b04:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   24b08:	add	x19, x19, #0x13
   24b0c:	movk	x2, #0xcccd
   24b10:	sub	x4, x4, #0x1
   24b14:	lsr	x1, x0, #17
   24b18:	cmn	x4, #0x1
   24b1c:	umulh	x1, x1, x25
   24b20:	lsr	x1, x1, #22
   24b24:	msub	x0, x1, x24, x0
   24b28:	add	w1, w1, #0x30
   24b2c:	sturb	w1, [x19, #-18]
   24b30:	umulh	x1, x0, x23
   24b34:	lsr	x1, x1, #51
   24b38:	msub	x0, x1, x22, x0
   24b3c:	add	w1, w1, #0x30
   24b40:	sturb	w1, [x19, #-17]
   24b44:	lsr	x11, x0, #15
   24b48:	umulh	x11, x11, x21
   24b4c:	lsr	x11, x11, #20
   24b50:	msub	x0, x11, x18, x0
   24b54:	add	w11, w11, #0x30
   24b58:	sturb	w11, [x19, #-16]
   24b5c:	umulh	x1, x0, x17
   24b60:	lsr	x1, x1, #42
   24b64:	msub	x0, x1, x16, x0
   24b68:	add	w1, w1, #0x30
   24b6c:	sturb	w1, [x19, #-15]
   24b70:	umulh	x11, x0, x15
   24b74:	lsr	x11, x11, #41
   24b78:	msub	x0, x11, x14, x0
   24b7c:	add	w11, w11, #0x30
   24b80:	sturb	w11, [x19, #-14]
   24b84:	umulh	x11, x0, x13
   24b88:	lsr	x11, x11, #37
   24b8c:	msub	x1, x11, x12, x0
   24b90:	add	w11, w11, #0x30
   24b94:	sturb	w11, [x19, #-13]
   24b98:	umulh	x11, x1, x28
   24b9c:	lsr	x11, x11, #36
   24ba0:	msub	x0, x11, x30, x1
   24ba4:	mov	x1, #0xd5bf                	// #54719
   24ba8:	movk	x1, #0xbded, lsl #16
   24bac:	add	w11, w11, #0x30
   24bb0:	movk	x1, #0xfece, lsl #32
   24bb4:	sturb	w11, [x19, #-12]
   24bb8:	movk	x1, #0xdbe6, lsl #48
   24bbc:	umulh	x1, x0, x1
   24bc0:	lsr	x1, x1, #33
   24bc4:	msub	x0, x1, x3, x0
   24bc8:	add	w1, w1, #0x30
   24bcc:	sturb	w1, [x19, #-11]
   24bd0:	mov	x1, #0x5a53                	// #23123
   24bd4:	movk	x1, #0xa09b, lsl #16
   24bd8:	lsr	x3, x0, #9
   24bdc:	movk	x1, #0xb82f, lsl #32
   24be0:	movk	x1, #0x44, lsl #48
   24be4:	umulh	x3, x3, x1
   24be8:	mov	x1, #0xcefd                	// #52989
   24bec:	movk	x1, #0x8461, lsl #16
   24bf0:	movk	x1, #0x7711, lsl #32
   24bf4:	lsr	x3, x3, #11
   24bf8:	movk	x1, #0xabcc, lsl #48
   24bfc:	msub	x0, x3, x10, x0
   24c00:	add	w3, w3, #0x30
   24c04:	sturb	w3, [x19, #-10]
   24c08:	umulh	x1, x0, x1
   24c0c:	lsr	x1, x1, #26
   24c10:	msub	x9, x1, x9, x0
   24c14:	mov	x0, #0x42bd                	// #17085
   24c18:	movk	x0, #0xe57a, lsl #16
   24c1c:	add	w1, w1, #0x30
   24c20:	movk	x0, #0x94d5, lsl #32
   24c24:	sturb	w1, [x19, #-9]
   24c28:	movk	x0, #0xd6bf, lsl #48
   24c2c:	umulh	x1, x9, x0
   24c30:	mov	x0, #0x34db                	// #13531
   24c34:	movk	x0, #0xd7b6, lsl #16
   24c38:	movk	x0, #0xde82, lsl #32
   24c3c:	lsr	x1, x1, #23
   24c40:	movk	x0, #0x431b, lsl #48
   24c44:	msub	x8, x1, x8, x9
   24c48:	add	w1, w1, #0x30
   24c4c:	sturb	w1, [x19, #-8]
   24c50:	mov	x1, #0x7843                	// #30787
   24c54:	movk	x1, #0x71b4, lsl #16
   24c58:	movk	x1, #0x5ac4, lsl #32
   24c5c:	umulh	x0, x8, x0
   24c60:	movk	x1, #0xa7c, lsl #48
   24c64:	lsr	x0, x0, #18
   24c68:	msub	x7, x0, x7, x8
   24c6c:	add	w0, w0, #0x30
   24c70:	sturb	w0, [x19, #-7]
   24c74:	lsr	x0, x7, #5
   24c78:	umulh	x0, x0, x1
   24c7c:	lsr	x0, x0, #7
   24c80:	msub	x6, x0, x6, x7
   24c84:	add	w0, w0, #0x30
   24c88:	sturb	w0, [x19, #-6]
   24c8c:	mov	x0, #0x594b                	// #22859
   24c90:	movk	x0, #0x3886, lsl #16
   24c94:	movk	x0, #0xc5d6, lsl #32
   24c98:	movk	x0, #0x346d, lsl #48
   24c9c:	umulh	x1, x6, x0
   24ca0:	lsr	x1, x1, #11
   24ca4:	add	w0, w1, #0x30
   24ca8:	sturb	w0, [x19, #-5]
   24cac:	mov	x0, #0xf7cf                	// #63439
   24cb0:	msub	x5, x1, x5, x6
   24cb4:	movk	x0, #0xe353, lsl #16
   24cb8:	movk	x0, #0x9ba5, lsl #32
   24cbc:	movk	x0, #0x20c4, lsl #48
   24cc0:	lsr	x1, x5, #3
   24cc4:	umulh	x1, x1, x0
   24cc8:	lsr	x0, x1, #4
   24ccc:	add	w3, w0, #0x30
   24cd0:	sturb	w3, [x19, #-4]
   24cd4:	lsl	x1, x0, #5
   24cd8:	mov	x3, #0xf5c3                	// #62915
   24cdc:	sub	x1, x1, x0
   24ce0:	movk	x3, #0x5c28, lsl #16
   24ce4:	movk	x3, #0xc28f, lsl #32
   24ce8:	add	x1, x0, x1, lsl #2
   24cec:	movk	x3, #0x28f5, lsl #48
   24cf0:	sub	x1, x5, x1, lsl #3
   24cf4:	lsr	x0, x1, #2
   24cf8:	umulh	x0, x0, x3
   24cfc:	lsr	x0, x0, #2
   24d00:	add	w5, w0, #0x30
   24d04:	sturb	w5, [x19, #-3]
   24d08:	add	x3, x0, x0, lsl #1
   24d0c:	add	x0, x0, x3, lsl #3
   24d10:	sub	x1, x1, x0, lsl #2
   24d14:	umulh	x0, x1, x2
   24d18:	lsr	x0, x0, #3
   24d1c:	add	w2, w0, #0x30
   24d20:	sturb	w2, [x19, #-2]
   24d24:	add	x0, x0, x0, lsl #2
   24d28:	strb	wzr, [x19]
   24d2c:	sub	x0, x1, x0, lsl #1
   24d30:	add	w0, w0, #0x30
   24d34:	sturb	w0, [x19, #-1]
   24d38:	b.eq	25710 <PyInit__decimal@@Base+0x94d0>  // b.none
   24d3c:	ldr	x0, [x20, #40]
   24d40:	ldr	x0, [x0, x4, lsl #3]
   24d44:	cbnz	x19, 24ab4 <PyInit__decimal@@Base+0x8874>
   24d48:	strb	wzr, [x19]
   24d4c:	brk	#0x3e8
   24d50:	mov	w0, #0x2e30                	// #11824
   24d54:	strh	w0, [x19], #2
   24d58:	neg	x2, x23
   24d5c:	cmp	x2, #0x0
   24d60:	b.le	24d74 <PyInit__decimal@@Base+0x8b34>
   24d64:	mov	x0, x19
   24d68:	mov	w1, #0x30                  	// #48
   24d6c:	add	x19, x19, x2
   24d70:	bl	6670 <memset@plt>
   24d74:	mov	x0, x20
   24d78:	bl	2a568 <PyInit__decimal@@Base+0xe328>
   24d7c:	mov	x21, x0
   24d80:	bl	2a3f0 <PyInit__decimal@@Base+0xe1b0>
   24d84:	mov	x1, x21
   24d88:	mov	w2, w0
   24d8c:	mov	x3, #0x0                   	// #0
   24d90:	mov	x0, x19
   24d94:	bl	23590 <PyInit__decimal@@Base+0x7350>
   24d98:	mov	x19, x0
   24d9c:	ldr	x1, [x20, #24]
   24da0:	subs	x1, x1, #0x2
   24da4:	b.mi	247f4 <PyInit__decimal@@Base+0x85b4>  // b.first
   24da8:	mov	x24, #0x7857                	// #30807
   24dac:	mov	x22, #0xeac3                	// #60099
   24db0:	mov	x21, #0x8000                	// #32768
   24db4:	mov	x30, #0xcd81                	// #52609
   24db8:	mov	x17, #0x385                 	// #901
   24dbc:	mov	x15, #0x2233                	// #8755
   24dc0:	mov	x13, #0xaaff                	// #43775
   24dc4:	mov	x12, #0xf5c3                	// #62915
   24dc8:	movk	x24, #0xb113, lsl #16
   24dcc:	movk	x22, #0xf3dc, lsl #16
   24dd0:	movk	x21, #0xa4c6, lsl #16
   24dd4:	movk	x30, #0x5095, lsl #16
   24dd8:	mov	x18, #0x4000                	// #16384
   24ddc:	movk	x17, #0x92ed, lsl #16
   24de0:	mov	x16, #0xa000                	// #40960
   24de4:	movk	x15, #0x5bd4, lsl #16
   24de8:	mov	x14, #0x1000                	// #4096
   24dec:	movk	x13, #0xcb24, lsl #16
   24df0:	movk	x12, #0x5c28, lsl #16
   24df4:	stp	x25, x26, [sp, #64]
   24df8:	mov	x26, #0x1b53                	// #6995
   24dfc:	mov	x25, #0x5d8a0000            	// #1569325056
   24e00:	stp	x27, x28, [sp, #80]
   24e04:	mov	x28, #0x490f                	// #18703
   24e08:	mov	x27, #0xa7640000            	// #2808348672
   24e0c:	movk	x28, #0x7747, lsl #16
   24e10:	movk	x27, #0xb6b3, lsl #32
   24e14:	movk	x26, #0xd519, lsl #16
   24e18:	movk	x25, #0x4578, lsl #32
   24e1c:	movk	x24, #0x652f, lsl #32
   24e20:	movk	x22, #0x4075, lsl #32
   24e24:	movk	x21, #0x8d7e, lsl #32
   24e28:	movk	x30, #0x4dc3, lsl #32
   24e2c:	movk	x18, #0x107a, lsl #16
   24e30:	movk	x17, #0x84d0, lsl #32
   24e34:	movk	x16, #0x4e72, lsl #16
   24e38:	movk	x15, #0x3302, lsl #32
   24e3c:	movk	x14, #0xd4a5, lsl #16
   24e40:	movk	x13, #0xff0b, lsl #32
   24e44:	movk	x12, #0xc28f, lsl #32
   24e48:	movk	x28, #0x49c9, lsl #32
   24e4c:	movk	x27, #0xde0, lsl #48
   24e50:	movk	x26, #0x5c3b, lsl #32
   24e54:	movk	x25, #0x163, lsl #48
   24e58:	movk	x24, #0x39a5, lsl #48
   24e5c:	movk	x22, #0x2, lsl #48
   24e60:	movk	x21, #0x3, lsl #48
   24e64:	movk	x30, #0xb42, lsl #48
   24e68:	movk	x18, #0x5af3, lsl #32
   24e6c:	movk	x17, #0x384b, lsl #48
   24e70:	movk	x16, #0x918, lsl #32
   24e74:	movk	x15, #0x232f, lsl #48
   24e78:	movk	x14, #0xe8, lsl #32
   24e7c:	movk	x13, #0xafeb, lsl #48
   24e80:	movk	x12, #0x28f5, lsl #48
   24e84:	b	25118 <PyInit__decimal@@Base+0x8ed8>
   24e88:	lsr	x2, x0, #18
   24e8c:	mov	x4, #0xe400                	// #58368
   24e90:	movk	x4, #0x540b, lsl #16
   24e94:	mov	x10, #0xca00                	// #51712
   24e98:	movk	x4, #0x2, lsl #32
   24e9c:	movk	x10, #0x3b9a, lsl #16
   24ea0:	umulh	x2, x2, x28
   24ea4:	mov	x9, #0xe100                	// #57600
   24ea8:	movk	x9, #0x5f5, lsl #16
   24eac:	mov	x8, #0x9680                	// #38528
   24eb0:	movk	x8, #0x98, lsl #16
   24eb4:	mov	x7, #0x4240                	// #16960
   24eb8:	lsr	x2, x2, #24
   24ebc:	movk	x7, #0xf, lsl #16
   24ec0:	mov	x6, #0x86a0                	// #34464
   24ec4:	mov	x5, #0x2710                	// #10000
   24ec8:	movk	x6, #0x1, lsl #16
   24ecc:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   24ed0:	msub	x0, x2, x27, x0
   24ed4:	add	w2, w2, #0x30
   24ed8:	strb	w2, [x19]
   24edc:	movk	x3, #0xcccd
   24ee0:	add	x19, x19, #0x13
   24ee4:	sub	x1, x1, #0x1
   24ee8:	lsr	x11, x0, #17
   24eec:	cmn	x1, #0x1
   24ef0:	umulh	x11, x11, x26
   24ef4:	lsr	x11, x11, #22
   24ef8:	msub	x0, x11, x25, x0
   24efc:	add	w11, w11, #0x30
   24f00:	sturb	w11, [x19, #-18]
   24f04:	mov	x11, #0x6fc10000            	// #1874919424
   24f08:	movk	x11, #0x86f2, lsl #32
   24f0c:	movk	x11, #0x23, lsl #48
   24f10:	umulh	x2, x0, x24
   24f14:	lsr	x2, x2, #51
   24f18:	msub	x0, x2, x11, x0
   24f1c:	add	w2, w2, #0x30
   24f20:	sturb	w2, [x19, #-17]
   24f24:	lsr	x11, x0, #15
   24f28:	umulh	x11, x11, x22
   24f2c:	lsr	x11, x11, #20
   24f30:	msub	x0, x11, x21, x0
   24f34:	add	w11, w11, #0x30
   24f38:	sturb	w11, [x19, #-16]
   24f3c:	umulh	x2, x0, x30
   24f40:	lsr	x2, x2, #42
   24f44:	msub	x0, x2, x18, x0
   24f48:	add	w2, w2, #0x30
   24f4c:	sturb	w2, [x19, #-15]
   24f50:	umulh	x11, x0, x17
   24f54:	lsr	x11, x11, #41
   24f58:	msub	x0, x11, x16, x0
   24f5c:	add	w11, w11, #0x30
   24f60:	sturb	w11, [x19, #-14]
   24f64:	umulh	x11, x0, x15
   24f68:	lsr	x11, x11, #37
   24f6c:	msub	x2, x11, x14, x0
   24f70:	add	w11, w11, #0x30
   24f74:	sturb	w11, [x19, #-13]
   24f78:	mov	x0, #0xe800                	// #59392
   24f7c:	movk	x0, #0x4876, lsl #16
   24f80:	movk	x0, #0x17, lsl #32
   24f84:	umulh	x11, x2, x13
   24f88:	lsr	x11, x11, #36
   24f8c:	msub	x0, x11, x0, x2
   24f90:	mov	x2, #0xd5bf                	// #54719
   24f94:	movk	x2, #0xbded, lsl #16
   24f98:	add	w11, w11, #0x30
   24f9c:	movk	x2, #0xfece, lsl #32
   24fa0:	sturb	w11, [x19, #-12]
   24fa4:	movk	x2, #0xdbe6, lsl #48
   24fa8:	umulh	x2, x0, x2
   24fac:	lsr	x2, x2, #33
   24fb0:	msub	x0, x2, x4, x0
   24fb4:	add	w2, w2, #0x30
   24fb8:	sturb	w2, [x19, #-11]
   24fbc:	mov	x2, #0x5a53                	// #23123
   24fc0:	movk	x2, #0xa09b, lsl #16
   24fc4:	lsr	x4, x0, #9
   24fc8:	movk	x2, #0xb82f, lsl #32
   24fcc:	movk	x2, #0x44, lsl #48
   24fd0:	umulh	x4, x4, x2
   24fd4:	mov	x2, #0xcefd                	// #52989
   24fd8:	movk	x2, #0x8461, lsl #16
   24fdc:	movk	x2, #0x7711, lsl #32
   24fe0:	lsr	x4, x4, #11
   24fe4:	movk	x2, #0xabcc, lsl #48
   24fe8:	msub	x0, x4, x10, x0
   24fec:	add	w4, w4, #0x30
   24ff0:	sturb	w4, [x19, #-10]
   24ff4:	umulh	x2, x0, x2
   24ff8:	lsr	x2, x2, #26
   24ffc:	msub	x9, x2, x9, x0
   25000:	mov	x0, #0x42bd                	// #17085
   25004:	movk	x0, #0xe57a, lsl #16
   25008:	add	w2, w2, #0x30
   2500c:	movk	x0, #0x94d5, lsl #32
   25010:	sturb	w2, [x19, #-9]
   25014:	movk	x0, #0xd6bf, lsl #48
   25018:	umulh	x2, x9, x0
   2501c:	mov	x0, #0x34db                	// #13531
   25020:	movk	x0, #0xd7b6, lsl #16
   25024:	movk	x0, #0xde82, lsl #32
   25028:	lsr	x2, x2, #23
   2502c:	movk	x0, #0x431b, lsl #48
   25030:	msub	x8, x2, x8, x9
   25034:	add	w2, w2, #0x30
   25038:	sturb	w2, [x19, #-8]
   2503c:	umulh	x4, x8, x0
   25040:	mov	x0, #0x7843                	// #30787
   25044:	movk	x0, #0x71b4, lsl #16
   25048:	movk	x0, #0x5ac4, lsl #32
   2504c:	lsr	x4, x4, #18
   25050:	movk	x0, #0xa7c, lsl #48
   25054:	msub	x7, x4, x7, x8
   25058:	add	w4, w4, #0x30
   2505c:	sturb	w4, [x19, #-7]
   25060:	lsr	x4, x7, #5
   25064:	umulh	x4, x4, x0
   25068:	mov	x0, #0x594b                	// #22859
   2506c:	movk	x0, #0x3886, lsl #16
   25070:	movk	x0, #0xc5d6, lsl #32
   25074:	lsr	x4, x4, #7
   25078:	movk	x0, #0x346d, lsl #48
   2507c:	msub	x6, x4, x6, x7
   25080:	add	w4, w4, #0x30
   25084:	sturb	w4, [x19, #-6]
   25088:	umulh	x2, x6, x0
   2508c:	lsr	x2, x2, #11
   25090:	add	w0, w2, #0x30
   25094:	sturb	w0, [x19, #-5]
   25098:	mov	x0, #0xf7cf                	// #63439
   2509c:	msub	x5, x2, x5, x6
   250a0:	movk	x0, #0xe353, lsl #16
   250a4:	movk	x0, #0x9ba5, lsl #32
   250a8:	movk	x0, #0x20c4, lsl #48
   250ac:	lsr	x2, x5, #3
   250b0:	umulh	x2, x2, x0
   250b4:	lsr	x0, x2, #4
   250b8:	add	w4, w0, #0x30
   250bc:	sturb	w4, [x19, #-4]
   250c0:	lsl	x2, x0, #5
   250c4:	sub	x2, x2, x0
   250c8:	add	x2, x0, x2, lsl #2
   250cc:	sub	x2, x5, x2, lsl #3
   250d0:	lsr	x0, x2, #2
   250d4:	umulh	x0, x0, x12
   250d8:	lsr	x0, x0, #2
   250dc:	add	w5, w0, #0x30
   250e0:	sturb	w5, [x19, #-3]
   250e4:	add	x4, x0, x0, lsl #1
   250e8:	add	x0, x0, x4, lsl #3
   250ec:	sub	x2, x2, x0, lsl #2
   250f0:	umulh	x0, x2, x3
   250f4:	lsr	x0, x0, #3
   250f8:	add	w3, w0, #0x30
   250fc:	sturb	w3, [x19, #-2]
   25100:	add	x0, x0, x0, lsl #2
   25104:	strb	wzr, [x19]
   25108:	sub	x0, x2, x0, lsl #1
   2510c:	add	w0, w0, #0x30
   25110:	sturb	w0, [x19, #-1]
   25114:	b.eq	247ec <PyInit__decimal@@Base+0x85ac>  // b.none
   25118:	ldr	x0, [x20, #40]
   2511c:	ldr	x0, [x0, x1, lsl #3]
   25120:	cbnz	x19, 24e88 <PyInit__decimal@@Base+0x8c48>
   25124:	strb	wzr, [x19]
   25128:	brk	#0x3e8
   2512c:	bl	2a568 <PyInit__decimal@@Base+0xe328>
   25130:	mov	x21, x0
   25134:	bl	2a3f0 <PyInit__decimal@@Base+0xe1b0>
   25138:	mov	w2, w0
   2513c:	mov	x1, x21
   25140:	mov	x0, x19
   25144:	mov	x3, #0x0                   	// #0
   25148:	bl	23590 <PyInit__decimal@@Base+0x7350>
   2514c:	ldr	x5, [x20, #24]
   25150:	subs	x5, x5, #0x2
   25154:	b.mi	25668 <PyInit__decimal@@Base+0x9428>  // b.first
   25158:	mov	x24, #0x7857                	// #30807
   2515c:	mov	x22, #0xeac3                	// #60099
   25160:	mov	x21, #0x8000                	// #32768
   25164:	mov	x19, #0xcd81                	// #52609
   25168:	mov	x17, #0x385                 	// #901
   2516c:	mov	x15, #0x2233                	// #8755
   25170:	mov	x13, #0xaaff                	// #43775
   25174:	movk	x24, #0xb113, lsl #16
   25178:	movk	x22, #0xf3dc, lsl #16
   2517c:	movk	x21, #0xa4c6, lsl #16
   25180:	movk	x19, #0x5095, lsl #16
   25184:	mov	x18, #0x4000                	// #16384
   25188:	movk	x17, #0x92ed, lsl #16
   2518c:	mov	x16, #0xa000                	// #40960
   25190:	movk	x15, #0x5bd4, lsl #16
   25194:	mov	x14, #0x1000                	// #4096
   25198:	movk	x13, #0xcb24, lsl #16
   2519c:	mov	x30, #0xe800                	// #59392
   251a0:	stp	x25, x26, [sp, #64]
   251a4:	mov	x26, #0x1b53                	// #6995
   251a8:	mov	x25, #0x5d8a0000            	// #1569325056
   251ac:	stp	x27, x28, [sp, #80]
   251b0:	mov	x28, #0x490f                	// #18703
   251b4:	mov	x27, #0xa7640000            	// #2808348672
   251b8:	movk	x28, #0x7747, lsl #16
   251bc:	movk	x27, #0xb6b3, lsl #32
   251c0:	movk	x26, #0xd519, lsl #16
   251c4:	movk	x25, #0x4578, lsl #32
   251c8:	movk	x24, #0x652f, lsl #32
   251cc:	movk	x22, #0x4075, lsl #32
   251d0:	movk	x21, #0x8d7e, lsl #32
   251d4:	movk	x19, #0x4dc3, lsl #32
   251d8:	movk	x18, #0x107a, lsl #16
   251dc:	movk	x17, #0x84d0, lsl #32
   251e0:	movk	x16, #0x4e72, lsl #16
   251e4:	movk	x15, #0x3302, lsl #32
   251e8:	movk	x14, #0xd4a5, lsl #16
   251ec:	movk	x13, #0xff0b, lsl #32
   251f0:	movk	x30, #0x4876, lsl #16
   251f4:	movk	x28, #0x49c9, lsl #32
   251f8:	movk	x27, #0xde0, lsl #48
   251fc:	movk	x26, #0x5c3b, lsl #32
   25200:	movk	x25, #0x163, lsl #48
   25204:	movk	x24, #0x39a5, lsl #48
   25208:	movk	x22, #0x2, lsl #48
   2520c:	movk	x21, #0x3, lsl #48
   25210:	movk	x19, #0xb42, lsl #48
   25214:	movk	x18, #0x5af3, lsl #32
   25218:	movk	x17, #0x384b, lsl #48
   2521c:	movk	x16, #0x918, lsl #32
   25220:	movk	x15, #0x232f, lsl #48
   25224:	movk	x14, #0xe8, lsl #32
   25228:	movk	x13, #0xafeb, lsl #48
   2522c:	movk	x30, #0x17, lsl #32
   25230:	b	254c8 <PyInit__decimal@@Base+0x9288>
   25234:	lsr	x2, x1, #18
   25238:	mov	x4, #0xe400                	// #58368
   2523c:	movk	x4, #0x540b, lsl #16
   25240:	mov	x11, #0xca00                	// #51712
   25244:	movk	x4, #0x2, lsl #32
   25248:	movk	x11, #0x3b9a, lsl #16
   2524c:	umulh	x2, x2, x28
   25250:	mov	x10, #0xe100                	// #57600
   25254:	movk	x10, #0x5f5, lsl #16
   25258:	mov	x9, #0x9680                	// #38528
   2525c:	movk	x9, #0x98, lsl #16
   25260:	mov	x8, #0x4240                	// #16960
   25264:	lsr	x2, x2, #24
   25268:	movk	x8, #0xf, lsl #16
   2526c:	mov	x7, #0x86a0                	// #34464
   25270:	mov	x6, #0x2710                	// #10000
   25274:	movk	x7, #0x1, lsl #16
   25278:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2527c:	msub	x1, x2, x27, x1
   25280:	add	w2, w2, #0x30
   25284:	strb	w2, [x0]
   25288:	movk	x3, #0xcccd
   2528c:	add	x0, x0, #0x13
   25290:	sub	x5, x5, #0x1
   25294:	lsr	x12, x1, #17
   25298:	cmn	x5, #0x1
   2529c:	umulh	x12, x12, x26
   252a0:	lsr	x12, x12, #22
   252a4:	msub	x1, x12, x25, x1
   252a8:	add	w12, w12, #0x30
   252ac:	sturb	w12, [x0, #-18]
   252b0:	mov	x12, #0x6fc10000            	// #1874919424
   252b4:	movk	x12, #0x86f2, lsl #32
   252b8:	movk	x12, #0x23, lsl #48
   252bc:	umulh	x2, x1, x24
   252c0:	lsr	x2, x2, #51
   252c4:	msub	x1, x2, x12, x1
   252c8:	add	w2, w2, #0x30
   252cc:	sturb	w2, [x0, #-17]
   252d0:	lsr	x12, x1, #15
   252d4:	umulh	x12, x12, x22
   252d8:	lsr	x12, x12, #20
   252dc:	msub	x1, x12, x21, x1
   252e0:	add	w12, w12, #0x30
   252e4:	sturb	w12, [x0, #-16]
   252e8:	umulh	x2, x1, x19
   252ec:	lsr	x2, x2, #42
   252f0:	msub	x1, x2, x18, x1
   252f4:	add	w2, w2, #0x30
   252f8:	sturb	w2, [x0, #-15]
   252fc:	umulh	x12, x1, x17
   25300:	lsr	x12, x12, #41
   25304:	msub	x1, x12, x16, x1
   25308:	add	w12, w12, #0x30
   2530c:	sturb	w12, [x0, #-14]
   25310:	umulh	x12, x1, x15
   25314:	lsr	x12, x12, #37
   25318:	msub	x2, x12, x14, x1
   2531c:	add	w12, w12, #0x30
   25320:	sturb	w12, [x0, #-13]
   25324:	umulh	x12, x2, x13
   25328:	lsr	x12, x12, #36
   2532c:	msub	x1, x12, x30, x2
   25330:	mov	x2, #0xd5bf                	// #54719
   25334:	movk	x2, #0xbded, lsl #16
   25338:	add	w12, w12, #0x30
   2533c:	movk	x2, #0xfece, lsl #32
   25340:	sturb	w12, [x0, #-12]
   25344:	movk	x2, #0xdbe6, lsl #48
   25348:	umulh	x2, x1, x2
   2534c:	lsr	x2, x2, #33
   25350:	msub	x1, x2, x4, x1
   25354:	add	w2, w2, #0x30
   25358:	sturb	w2, [x0, #-11]
   2535c:	mov	x2, #0x5a53                	// #23123
   25360:	movk	x2, #0xa09b, lsl #16
   25364:	lsr	x4, x1, #9
   25368:	movk	x2, #0xb82f, lsl #32
   2536c:	movk	x2, #0x44, lsl #48
   25370:	umulh	x4, x4, x2
   25374:	mov	x2, #0xcefd                	// #52989
   25378:	movk	x2, #0x8461, lsl #16
   2537c:	movk	x2, #0x7711, lsl #32
   25380:	lsr	x4, x4, #11
   25384:	movk	x2, #0xabcc, lsl #48
   25388:	msub	x1, x4, x11, x1
   2538c:	add	w4, w4, #0x30
   25390:	sturb	w4, [x0, #-10]
   25394:	umulh	x2, x1, x2
   25398:	lsr	x2, x2, #26
   2539c:	msub	x10, x2, x10, x1
   253a0:	mov	x1, #0x42bd                	// #17085
   253a4:	movk	x1, #0xe57a, lsl #16
   253a8:	add	w2, w2, #0x30
   253ac:	movk	x1, #0x94d5, lsl #32
   253b0:	sturb	w2, [x0, #-9]
   253b4:	movk	x1, #0xd6bf, lsl #48
   253b8:	umulh	x2, x10, x1
   253bc:	mov	x1, #0x34db                	// #13531
   253c0:	movk	x1, #0xd7b6, lsl #16
   253c4:	movk	x1, #0xde82, lsl #32
   253c8:	lsr	x2, x2, #23
   253cc:	movk	x1, #0x431b, lsl #48
   253d0:	msub	x9, x2, x9, x10
   253d4:	add	w2, w2, #0x30
   253d8:	sturb	w2, [x0, #-8]
   253dc:	umulh	x4, x9, x1
   253e0:	mov	x1, #0x7843                	// #30787
   253e4:	movk	x1, #0x71b4, lsl #16
   253e8:	movk	x1, #0x5ac4, lsl #32
   253ec:	lsr	x4, x4, #18
   253f0:	movk	x1, #0xa7c, lsl #48
   253f4:	msub	x8, x4, x8, x9
   253f8:	add	w4, w4, #0x30
   253fc:	sturb	w4, [x0, #-7]
   25400:	lsr	x4, x8, #5
   25404:	umulh	x4, x4, x1
   25408:	mov	x1, #0x594b                	// #22859
   2540c:	movk	x1, #0x3886, lsl #16
   25410:	movk	x1, #0xc5d6, lsl #32
   25414:	lsr	x4, x4, #7
   25418:	movk	x1, #0x346d, lsl #48
   2541c:	msub	x7, x4, x7, x8
   25420:	add	w4, w4, #0x30
   25424:	sturb	w4, [x0, #-6]
   25428:	umulh	x2, x7, x1
   2542c:	lsr	x2, x2, #11
   25430:	add	w1, w2, #0x30
   25434:	sturb	w1, [x0, #-5]
   25438:	mov	x1, #0xf7cf                	// #63439
   2543c:	msub	x6, x2, x6, x7
   25440:	movk	x1, #0xe353, lsl #16
   25444:	movk	x1, #0x9ba5, lsl #32
   25448:	movk	x1, #0x20c4, lsl #48
   2544c:	lsr	x2, x6, #3
   25450:	umulh	x2, x2, x1
   25454:	lsr	x1, x2, #4
   25458:	add	w4, w1, #0x30
   2545c:	sturb	w4, [x0, #-4]
   25460:	lsl	x2, x1, #5
   25464:	mov	x4, #0xf5c3                	// #62915
   25468:	sub	x2, x2, x1
   2546c:	movk	x4, #0x5c28, lsl #16
   25470:	movk	x4, #0xc28f, lsl #32
   25474:	add	x2, x1, x2, lsl #2
   25478:	movk	x4, #0x28f5, lsl #48
   2547c:	sub	x2, x6, x2, lsl #3
   25480:	lsr	x1, x2, #2
   25484:	umulh	x1, x1, x4
   25488:	lsr	x1, x1, #2
   2548c:	add	w6, w1, #0x30
   25490:	sturb	w6, [x0, #-3]
   25494:	add	x4, x1, x1, lsl #1
   25498:	add	x1, x1, x4, lsl #3
   2549c:	sub	x2, x2, x1, lsl #2
   254a0:	umulh	x1, x2, x3
   254a4:	lsr	x1, x1, #3
   254a8:	add	w3, w1, #0x30
   254ac:	sturb	w3, [x0, #-2]
   254b0:	add	x1, x1, x1, lsl #2
   254b4:	strb	wzr, [x0]
   254b8:	sub	x1, x2, x1, lsl #1
   254bc:	add	w1, w1, #0x30
   254c0:	sturb	w1, [x0, #-1]
   254c4:	b.eq	25660 <PyInit__decimal@@Base+0x9420>  // b.none
   254c8:	ldr	x1, [x20, #40]
   254cc:	ldr	x1, [x1, x5, lsl #3]
   254d0:	cbnz	x0, 25234 <PyInit__decimal@@Base+0x8ff4>
   254d4:	strb	wzr, [x0]
   254d8:	brk	#0x3e8
   254dc:	ldr	x19, [sp, #112]
   254e0:	mov	w0, #0x20                  	// #32
   254e4:	strb	w0, [x19], #1
   254e8:	b	2434c <PyInit__decimal@@Base+0x810c>
   254ec:	ldr	x0, [sp, #104]
   254f0:	tbz	w0, #6, 256d4 <PyInit__decimal@@Base+0x9494>
   254f4:	ldr	x21, [sp, #112]
   254f8:	mov	w0, #0x20                  	// #32
   254fc:	strb	w0, [x21], #1
   25500:	b	24964 <PyInit__decimal@@Base+0x8724>
   25504:	strb	w0, [x19, #2]
   25508:	mov	w0, #0x2e                  	// #46
   2550c:	strb	w0, [x19, #1]
   25510:	sub	x2, x2, #0x1
   25514:	strb	wzr, [x19, #3]
   25518:	cmn	x2, #0x1
   2551c:	add	x19, x19, #0x3
   25520:	b.eq	247ec <PyInit__decimal@@Base+0x85ac>  // b.none
   25524:	ldr	x0, [x20, #40]
   25528:	cmp	x21, x19
   2552c:	add	x24, x19, #0x1
   25530:	ldr	x0, [x0, x2, lsl #3]
   25534:	b.ne	244c4 <PyInit__decimal@@Base+0x8284>  // b.any
   25538:	mov	x1, x21
   2553c:	mov	w25, #0x2e                  	// #46
   25540:	mov	x19, x24
   25544:	strb	w25, [x1], #2
   25548:	mov	x24, x1
   2554c:	b	244c4 <PyInit__decimal@@Base+0x8284>
   25550:	mov	w0, #0x2e                  	// #46
   25554:	add	x19, x24, #0x2
   25558:	strb	w0, [x24, #1]
   2555c:	b	247a4 <PyInit__decimal@@Base+0x8564>
   25560:	mov	w1, #0x2e                  	// #46
   25564:	add	x24, x19, #0x2
   25568:	strb	w1, [x19, #1]
   2556c:	b	24768 <PyInit__decimal@@Base+0x8528>
   25570:	mov	w1, #0x2e                  	// #46
   25574:	add	x19, x24, #0x2
   25578:	strb	w1, [x24, #1]
   2557c:	b	24728 <PyInit__decimal@@Base+0x84e8>
   25580:	mov	w1, #0x2e                  	// #46
   25584:	add	x24, x19, #0x2
   25588:	strb	w1, [x19, #1]
   2558c:	b	246f4 <PyInit__decimal@@Base+0x84b4>
   25590:	mov	w0, #0x2e                  	// #46
   25594:	add	x19, x25, #0x2
   25598:	strb	w0, [x25, #1]
   2559c:	b	246b8 <PyInit__decimal@@Base+0x8478>
   255a0:	mov	w0, #0x2e                  	// #46
   255a4:	add	x25, x26, #0x2
   255a8:	strb	w0, [x26, #1]
   255ac:	b	24680 <PyInit__decimal@@Base+0x8440>
   255b0:	mov	w1, #0x2e                  	// #46
   255b4:	add	x26, x19, #0x2
   255b8:	strb	w1, [x19, #1]
   255bc:	b	24658 <PyInit__decimal@@Base+0x8418>
   255c0:	mov	w1, #0x2e                  	// #46
   255c4:	add	x19, x24, #0x2
   255c8:	strb	w1, [x24, #1]
   255cc:	b	24630 <PyInit__decimal@@Base+0x83f0>
   255d0:	mov	w0, #0x2e                  	// #46
   255d4:	add	x24, x19, #0x2
   255d8:	strb	w0, [x19, #1]
   255dc:	b	24604 <PyInit__decimal@@Base+0x83c4>
   255e0:	mov	w1, #0x2e                  	// #46
   255e4:	add	x19, x24, #0x2
   255e8:	strb	w1, [x24, #1]
   255ec:	b	245d8 <PyInit__decimal@@Base+0x8398>
   255f0:	mov	w1, #0x2e                  	// #46
   255f4:	add	x24, x19, #0x2
   255f8:	strb	w1, [x19, #1]
   255fc:	b	245b8 <PyInit__decimal@@Base+0x8378>
   25600:	mov	w0, #0x2e                  	// #46
   25604:	add	x19, x24, #0x2
   25608:	strb	w0, [x24, #1]
   2560c:	b	24598 <PyInit__decimal@@Base+0x8358>
   25610:	mov	w1, #0x2e                  	// #46
   25614:	add	x24, x19, #0x2
   25618:	strb	w1, [x19, #1]
   2561c:	b	24578 <PyInit__decimal@@Base+0x8338>
   25620:	mov	w1, #0x2e                  	// #46
   25624:	add	x19, x24, #0x2
   25628:	strb	w1, [x24, #1]
   2562c:	b	24558 <PyInit__decimal@@Base+0x8318>
   25630:	mov	w0, #0x2e                  	// #46
   25634:	add	x24, x19, #0x2
   25638:	strb	w0, [x19, #1]
   2563c:	b	24534 <PyInit__decimal@@Base+0x82f4>
   25640:	mov	w0, #0x2e                  	// #46
   25644:	add	x19, x24, #0x2
   25648:	strb	w0, [x24, #1]
   2564c:	b	24514 <PyInit__decimal@@Base+0x82d4>
   25650:	mov	w1, #0x2e                  	// #46
   25654:	add	x24, x19, #0x2
   25658:	strb	w1, [x19, #1]
   2565c:	b	244f0 <PyInit__decimal@@Base+0x82b0>
   25660:	ldp	x25, x26, [sp, #64]
   25664:	ldp	x27, x28, [sp, #80]
   25668:	ldr	x1, [x20, #16]
   2566c:	sub	x1, x23, x1
   25670:	cmp	x1, #0x0
   25674:	b.le	25750 <PyInit__decimal@@Base+0x9510>
   25678:	add	x4, x0, #0x1
   2567c:	mov	x1, #0x0                   	// #0
   25680:	mov	w3, #0x30                  	// #48
   25684:	nop
   25688:	strb	w3, [x0, x1]
   2568c:	add	x19, x4, x1
   25690:	add	x1, x1, #0x1
   25694:	ldr	x2, [x20, #16]
   25698:	sub	x2, x23, x2
   2569c:	cmp	x2, x1
   256a0:	b.gt	25688 <PyInit__decimal@@Base+0x9448>
   256a4:	b	247f4 <PyInit__decimal@@Base+0x85b4>
   256a8:	mov	x0, x20
   256ac:	bl	2a858 <PyInit__decimal@@Base+0xe618>
   256b0:	cbz	w0, 25768 <PyInit__decimal@@Base+0x9528>
   256b4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   256b8:	add	x0, x0, #0x598
   256bc:	mov	x19, x21
   256c0:	ldr	x1, [x0]
   256c4:	str	x1, [x21]
   256c8:	ldrb	w0, [x0, #8]
   256cc:	strb	w0, [x19, #8]!
   256d0:	b	24858 <PyInit__decimal@@Base+0x8618>
   256d4:	mov	x1, x0
   256d8:	ldr	x0, [sp, #112]
   256dc:	mov	x21, x0
   256e0:	tbz	w1, #7, 24964 <PyInit__decimal@@Base+0x8724>
   256e4:	mov	w0, #0x2b                  	// #43
   256e8:	strb	w0, [x21], #1
   256ec:	b	24964 <PyInit__decimal@@Base+0x8724>
   256f0:	adrp	x0, 41000 <PyInit__decimal@@Base+0x24dc0>
   256f4:	add	x0, x0, #0x958
   256f8:	mov	x19, x21
   256fc:	ldr	w1, [x0]
   25700:	ldrb	w0, [x0, #4]
   25704:	str	w1, [x21]
   25708:	strb	w0, [x19, #4]!
   2570c:	b	2498c <PyInit__decimal@@Base+0x874c>
   25710:	ldp	x25, x26, [sp, #64]
   25714:	ldp	x27, x28, [sp, #80]
   25718:	b	24858 <PyInit__decimal@@Base+0x8618>
   2571c:	ldr	x0, [sp, #128]
   25720:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   25724:	movk	x1, #0x5556
   25728:	sub	x2, x0, #0x1
   2572c:	ldr	x0, [x20, #16]
   25730:	smulh	x1, x2, x1
   25734:	sub	x1, x1, x2, asr #63
   25738:	add	x1, x1, x1, lsl #1
   2573c:	subs	x1, x2, x1
   25740:	add	x2, x1, #0x3
   25744:	csel	x1, x2, x1, mi  // mi = first
   25748:	add	x23, x23, x1
   2574c:	b	24304 <PyInit__decimal@@Base+0x80c4>
   25750:	mov	x19, x0
   25754:	b	247f4 <PyInit__decimal@@Base+0x85b4>
   25758:	ldr	x1, [sp, #120]
   2575c:	mov	x0, #0xffffffffffffffff    	// #-1
   25760:	str	xzr, [x1]
   25764:	b	24884 <PyInit__decimal@@Base+0x8644>
   25768:	stp	x25, x26, [sp, #64]
   2576c:	stp	x27, x28, [sp, #80]
   25770:	bl	67c0 <abort@plt>
   25774:	nop
   25778:	stp	x29, x30, [sp, #-96]!
   2577c:	mov	x29, sp
   25780:	stp	x19, x20, [sp, #16]
   25784:	mov	x20, x0
   25788:	stp	x23, x24, [sp, #48]
   2578c:	mov	x23, x1
   25790:	mov	w1, #0x0                   	// #0
   25794:	stp	x21, x22, [sp, #32]
   25798:	mov	x22, x2
   2579c:	mov	x21, x3
   257a0:	bl	2b2e8 <PyInit__decimal@@Base+0xf0a8>
   257a4:	str	xzr, [x20, #8]
   257a8:	str	xzr, [x20, #24]
   257ac:	ldrb	w24, [x23]
   257b0:	cmp	w24, #0x2b
   257b4:	b.eq	259a8 <PyInit__decimal@@Base+0x9768>  // b.none
   257b8:	cmp	w24, #0x2d
   257bc:	mov	w1, #0x0                   	// #0
   257c0:	b.eq	25c78 <PyInit__decimal@@Base+0x9a38>  // b.none
   257c4:	ldrb	w0, [x23]
   257c8:	cmp	w0, #0x6e
   257cc:	b.eq	257d8 <PyInit__decimal@@Base+0x9598>  // b.none
   257d0:	cmp	w0, #0x4e
   257d4:	b.ne	25828 <PyInit__decimal@@Base+0x95e8>  // b.any
   257d8:	ldrb	w2, [x23, #1]
   257dc:	cmp	w2, #0x61
   257e0:	b.eq	257ec <PyInit__decimal@@Base+0x95ac>  // b.none
   257e4:	cmp	w2, #0x41
   257e8:	b.ne	25828 <PyInit__decimal@@Base+0x95e8>  // b.any
   257ec:	ldrb	w2, [x23, #2]
   257f0:	cmp	w2, #0x6e
   257f4:	b.eq	25800 <PyInit__decimal@@Base+0x95c0>  // b.none
   257f8:	cmp	w2, #0x4e
   257fc:	b.ne	25828 <PyInit__decimal@@Base+0x95e8>  // b.any
   25800:	mov	x0, x20
   25804:	mov	w2, #0x4                   	// #4
   25808:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2580c:	ldrb	w24, [x23, #3]
   25810:	cbnz	w24, 25a88 <PyInit__decimal@@Base+0x9848>
   25814:	ldp	x19, x20, [sp, #16]
   25818:	ldp	x21, x22, [sp, #32]
   2581c:	ldp	x23, x24, [sp, #48]
   25820:	ldp	x29, x30, [sp], #96
   25824:	ret
   25828:	cmp	w0, #0x73
   2582c:	b.eq	25838 <PyInit__decimal@@Base+0x95f8>  // b.none
   25830:	cmp	w0, #0x53
   25834:	b.ne	259b8 <PyInit__decimal@@Base+0x9778>  // b.any
   25838:	ldrb	w2, [x23, #1]
   2583c:	cmp	w2, #0x6e
   25840:	b.eq	2584c <PyInit__decimal@@Base+0x960c>  // b.none
   25844:	cmp	w2, #0x4e
   25848:	b.ne	25e08 <PyInit__decimal@@Base+0x9bc8>  // b.any
   2584c:	ldrb	w2, [x23, #2]
   25850:	cmp	w2, #0x61
   25854:	b.eq	25860 <PyInit__decimal@@Base+0x9620>  // b.none
   25858:	cmp	w2, #0x41
   2585c:	b.ne	259b8 <PyInit__decimal@@Base+0x9778>  // b.any
   25860:	ldrb	w2, [x23, #3]
   25864:	cmp	w2, #0x6e
   25868:	b.eq	25874 <PyInit__decimal@@Base+0x9634>  // b.none
   2586c:	cmp	w2, #0x4e
   25870:	b.ne	259b8 <PyInit__decimal@@Base+0x9778>  // b.any
   25874:	mov	x0, x20
   25878:	mov	w2, #0x8                   	// #8
   2587c:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   25880:	ldrb	w24, [x23, #4]
   25884:	cbz	w24, 25814 <PyInit__decimal@@Base+0x95d4>
   25888:	add	x19, x23, #0x4
   2588c:	cmp	w24, #0x30
   25890:	b.ne	258a4 <PyInit__decimal@@Base+0x9664>  // b.any
   25894:	nop
   25898:	ldrb	w24, [x19, #1]!
   2589c:	cmp	w24, #0x30
   258a0:	b.eq	25898 <PyInit__decimal@@Base+0x9658>  // b.none
   258a4:	bl	6880 <__ctype_b_loc@plt>
   258a8:	ldrb	w1, [x19]
   258ac:	ldr	x3, [x0]
   258b0:	ubfiz	x0, x1, #1, #8
   258b4:	ldrh	w0, [x3, x0]
   258b8:	tbz	w0, #11, 25da8 <PyInit__decimal@@Base+0x9b68>
   258bc:	mov	x0, x19
   258c0:	ldrb	w1, [x0, #1]!
   258c4:	ubfiz	x2, x1, #1, #8
   258c8:	ldrh	w2, [x3, x2]
   258cc:	tbnz	w2, #11, 258c0 <PyInit__decimal@@Base+0x9680>
   258d0:	cbnz	w1, 25a64 <PyInit__decimal@@Base+0x9824>
   258d4:	cbz	w24, 25814 <PyInit__decimal@@Base+0x95d4>
   258d8:	ldr	x1, [x22]
   258dc:	sub	x0, x0, x19
   258e0:	ldrsw	x2, [x22, #40]
   258e4:	sub	x1, x1, x2
   258e8:	cmp	x1, x0
   258ec:	b.cc	25a64 <PyInit__decimal@@Base+0x9824>  // b.lo, b.ul, b.last
   258f0:	stp	x25, x26, [sp, #64]
   258f4:	mov	x26, #0x0                   	// #0
   258f8:	mov	x24, #0x9436                	// #37942
   258fc:	movk	x24, #0x50d7, lsl #16
   25900:	movk	x24, #0x435e, lsl #32
   25904:	movk	x24, #0xd79, lsl #48
   25908:	smulh	x24, x0, x24
   2590c:	sub	x24, x24, x0, asr #63
   25910:	add	x23, x24, x24, lsl #2
   25914:	lsl	x23, x23, #2
   25918:	sub	x23, x23, x24
   2591c:	subs	x23, x0, x23
   25920:	cinc	x24, x24, ne  // ne = any
   25924:	cbz	x24, 25c50 <PyInit__decimal@@Base+0x9a10>
   25928:	mov	x2, x21
   2592c:	mov	x1, x24
   25930:	mov	x0, x20
   25934:	bl	2aae8 <PyInit__decimal@@Base+0xe8a8>
   25938:	cbz	w0, 25d90 <PyInit__decimal@@Base+0x9b50>
   2593c:	str	x24, [x20, #24]
   25940:	cmp	x23, #0x0
   25944:	sub	x3, x24, #0x1
   25948:	ldr	x5, [x20, #40]
   2594c:	b.le	25ca0 <PyInit__decimal@@Base+0x9a60>
   25950:	add	x4, x5, x3, lsl #3
   25954:	mov	x0, #0x0                   	// #0
   25958:	mov	w2, #0x0                   	// #0
   2595c:	str	xzr, [x5, x3, lsl #3]
   25960:	b	25990 <PyInit__decimal@@Base+0x9750>
   25964:	mov	x1, x19
   25968:	mov	x19, x3
   2596c:	ldrb	w1, [x1]
   25970:	add	x0, x0, x0, lsl #2
   25974:	add	w2, w2, #0x1
   25978:	sub	w1, w1, #0x30
   2597c:	lsl	x0, x0, #1
   25980:	cmp	w2, w23
   25984:	add	x0, x0, w1, sxtw
   25988:	str	x0, [x4]
   2598c:	b.ge	25c90 <PyInit__decimal@@Base+0x9a50>  // b.tcont
   25990:	add	x1, x19, #0x1
   25994:	cmp	x26, x19
   25998:	mov	x3, x1
   2599c:	b.ne	25964 <PyInit__decimal@@Base+0x9724>  // b.any
   259a0:	add	x19, x26, #0x2
   259a4:	b	2596c <PyInit__decimal@@Base+0x972c>
   259a8:	ldrb	w24, [x23, #1]
   259ac:	mov	w1, #0x0                   	// #0
   259b0:	add	x23, x23, #0x1
   259b4:	b	257c4 <PyInit__decimal@@Base+0x9584>
   259b8:	cmp	w0, #0x69
   259bc:	b.eq	259c8 <PyInit__decimal@@Base+0x9788>  // b.none
   259c0:	cmp	w0, #0x49
   259c4:	b.ne	25ad4 <PyInit__decimal@@Base+0x9894>  // b.any
   259c8:	ldrb	w2, [x23, #1]
   259cc:	add	x0, x23, #0x1
   259d0:	cmp	w2, #0x6e
   259d4:	b.eq	259e0 <PyInit__decimal@@Base+0x97a0>  // b.none
   259d8:	cmp	w2, #0x4e
   259dc:	b.ne	25ad4 <PyInit__decimal@@Base+0x9894>  // b.any
   259e0:	ldrb	w0, [x0, #1]
   259e4:	cmp	w0, #0x66
   259e8:	b.eq	259f4 <PyInit__decimal@@Base+0x97b4>  // b.none
   259ec:	cmp	w0, #0x46
   259f0:	b.ne	25ad4 <PyInit__decimal@@Base+0x9894>  // b.any
   259f4:	ldrb	w0, [x23, #3]
   259f8:	cbz	w0, 25c58 <PyInit__decimal@@Base+0x9a18>
   259fc:	cmp	w0, #0x69
   25a00:	b.eq	25a0c <PyInit__decimal@@Base+0x97cc>  // b.none
   25a04:	cmp	w0, #0x49
   25a08:	b.ne	25a64 <PyInit__decimal@@Base+0x9824>  // b.any
   25a0c:	ldrb	w0, [x23, #4]
   25a10:	cmp	w0, #0x6e
   25a14:	b.eq	25a20 <PyInit__decimal@@Base+0x97e0>  // b.none
   25a18:	cmp	w0, #0x4e
   25a1c:	b.ne	25a64 <PyInit__decimal@@Base+0x9824>  // b.any
   25a20:	ldrb	w0, [x23, #5]
   25a24:	cmp	w0, #0x69
   25a28:	b.eq	25a34 <PyInit__decimal@@Base+0x97f4>  // b.none
   25a2c:	cmp	w0, #0x49
   25a30:	b.ne	25a64 <PyInit__decimal@@Base+0x9824>  // b.any
   25a34:	ldrb	w0, [x23, #6]
   25a38:	cmp	w0, #0x74
   25a3c:	b.eq	25a48 <PyInit__decimal@@Base+0x9808>  // b.none
   25a40:	cmp	w0, #0x54
   25a44:	b.ne	25a64 <PyInit__decimal@@Base+0x9824>  // b.any
   25a48:	ldrb	w0, [x23, #7]
   25a4c:	cmp	w0, #0x79
   25a50:	b.eq	25a5c <PyInit__decimal@@Base+0x981c>  // b.none
   25a54:	cmp	w0, #0x59
   25a58:	b.ne	25a64 <PyInit__decimal@@Base+0x9824>  // b.any
   25a5c:	ldrb	w0, [x23, #8]
   25a60:	cbz	w0, 25c58 <PyInit__decimal@@Base+0x9a18>
   25a64:	mov	x2, x21
   25a68:	mov	x0, x20
   25a6c:	mov	w1, #0x2                   	// #2
   25a70:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   25a74:	ldp	x19, x20, [sp, #16]
   25a78:	ldp	x21, x22, [sp, #32]
   25a7c:	ldp	x23, x24, [sp, #48]
   25a80:	ldp	x29, x30, [sp], #96
   25a84:	ret
   25a88:	add	x19, x23, #0x3
   25a8c:	cmp	w24, #0x30
   25a90:	b.ne	25aa4 <PyInit__decimal@@Base+0x9864>  // b.any
   25a94:	nop
   25a98:	ldrb	w24, [x19, #1]!
   25a9c:	cmp	w24, #0x30
   25aa0:	b.eq	25a98 <PyInit__decimal@@Base+0x9858>  // b.none
   25aa4:	bl	6880 <__ctype_b_loc@plt>
   25aa8:	ldrb	w1, [x19]
   25aac:	ldr	x3, [x0]
   25ab0:	ubfiz	x0, x1, #1, #8
   25ab4:	ldrh	w0, [x3, x0]
   25ab8:	tbz	w0, #11, 25da8 <PyInit__decimal@@Base+0x9b68>
   25abc:	mov	x0, x19
   25ac0:	ldrb	w1, [x0, #1]!
   25ac4:	ubfiz	x2, x1, #1, #8
   25ac8:	ldrh	w2, [x3, x2]
   25acc:	tbnz	w2, #11, 25ac0 <PyInit__decimal@@Base+0x9880>
   25ad0:	b	258d0 <PyInit__decimal@@Base+0x9690>
   25ad4:	stp	x25, x26, [sp, #64]
   25ad8:	mov	x19, #0x0                   	// #0
   25adc:	mov	x25, #0x0                   	// #0
   25ae0:	mov	x26, #0x0                   	// #0
   25ae4:	cbz	w24, 25c50 <PyInit__decimal@@Base+0x9a10>
   25ae8:	and	w0, w24, #0xffffffdf
   25aec:	and	w0, w0, #0xff
   25af0:	cmp	w0, #0x45
   25af4:	b.eq	25be8 <PyInit__decimal@@Base+0x99a8>  // b.none
   25af8:	cmp	w24, #0x2e
   25afc:	b.eq	25bd0 <PyInit__decimal@@Base+0x9990>  // b.none
   25b00:	bl	6880 <__ctype_b_loc@plt>
   25b04:	ldr	x2, [x0]
   25b08:	ubfiz	x1, x24, #1, #8
   25b0c:	ldrh	w0, [x2, x1]
   25b10:	tbz	w0, #11, 25c50 <PyInit__decimal@@Base+0x9a10>
   25b14:	mov	x0, x23
   25b18:	ldrb	w1, [x0, #1]!
   25b1c:	cbz	x19, 25c14 <PyInit__decimal@@Base+0x99d4>
   25b20:	mov	x23, x0
   25b24:	mov	w24, w1
   25b28:	cbnz	w24, 25ae8 <PyInit__decimal@@Base+0x98a8>
   25b2c:	cbz	x19, 25c50 <PyInit__decimal@@Base+0x9a10>
   25b30:	cbz	x25, 25b74 <PyInit__decimal@@Base+0x9934>
   25b34:	bl	6a20 <__errno_location@plt>
   25b38:	mov	x23, x0
   25b3c:	add	x1, sp, #0x58
   25b40:	add	x0, x25, #0x1
   25b44:	mov	w2, #0xa                   	// #10
   25b48:	str	wzr, [x23]
   25b4c:	bl	6540 <strtoll@plt>
   25b50:	ldr	w1, [x23]
   25b54:	cbnz	w1, 25d68 <PyInit__decimal@@Base+0x9b28>
   25b58:	ldrb	w1, [x25, #1]
   25b5c:	cbz	w1, 25de0 <PyInit__decimal@@Base+0x9ba0>
   25b60:	ldr	x1, [sp, #88]
   25b64:	ldrb	w1, [x1]
   25b68:	cbnz	w1, 25de0 <PyInit__decimal@@Base+0x9ba0>
   25b6c:	mov	x23, x25
   25b70:	str	x0, [x20, #8]
   25b74:	sub	x0, x23, x19
   25b78:	cbz	x26, 25c3c <PyInit__decimal@@Base+0x99fc>
   25b7c:	sub	x23, x23, x26
   25b80:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   25b84:	cmp	x19, x26
   25b88:	sub	x2, x23, #0x1
   25b8c:	movk	x3, #0xb6b3, lsl #32
   25b90:	sbc	x0, x0, xzr
   25b94:	movk	x3, #0xde0, lsl #48
   25b98:	cmp	x2, x3
   25b9c:	b.hi	25c50 <PyInit__decimal@@Base+0x9a10>  // b.pmore
   25ba0:	ldr	x1, [x20, #8]
   25ba4:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
   25ba8:	add	x23, x23, x4
   25bac:	cmp	x1, x23
   25bb0:	b.ge	25c34 <PyInit__decimal@@Base+0x99f4>  // b.tcont
   25bb4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   25bb8:	str	x1, [x20, #8]
   25bbc:	cmp	x0, x3
   25bc0:	b.hi	25c50 <PyInit__decimal@@Base+0x9a10>  // b.pmore
   25bc4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   25bc8:	str	x1, [x20, #8]
   25bcc:	b	258f8 <PyInit__decimal@@Base+0x96b8>
   25bd0:	orr	x25, x25, x26
   25bd4:	cbnz	x25, 25c50 <PyInit__decimal@@Base+0x9a10>
   25bd8:	mov	x26, x23
   25bdc:	ldrb	w24, [x23, #1]!
   25be0:	cbnz	w24, 25ae8 <PyInit__decimal@@Base+0x98a8>
   25be4:	b	25b2c <PyInit__decimal@@Base+0x98ec>
   25be8:	cbnz	x25, 25c50 <PyInit__decimal@@Base+0x9a10>
   25bec:	mov	x0, x23
   25bf0:	mov	w1, #0xfd                  	// #253
   25bf4:	mov	x25, x23
   25bf8:	ldrb	w24, [x0, #1]!
   25bfc:	sub	w2, w24, #0x2b
   25c00:	tst	w2, w1
   25c04:	b.ne	25c28 <PyInit__decimal@@Base+0x99e8>  // b.any
   25c08:	ldrb	w24, [x23, #2]!
   25c0c:	cbnz	w24, 25ae8 <PyInit__decimal@@Base+0x98a8>
   25c10:	b	25b2c <PyInit__decimal@@Base+0x98ec>
   25c14:	cbnz	x25, 25b20 <PyInit__decimal@@Base+0x98e0>
   25c18:	cmp	w24, #0x30
   25c1c:	b.eq	25db0 <PyInit__decimal@@Base+0x9b70>  // b.none
   25c20:	mov	x19, x23
   25c24:	mov	w24, w1
   25c28:	mov	x23, x0
   25c2c:	cbnz	w24, 25ae8 <PyInit__decimal@@Base+0x98a8>
   25c30:	b	25b2c <PyInit__decimal@@Base+0x98ec>
   25c34:	sub	x1, x1, x2
   25c38:	str	x1, [x20, #8]
   25c3c:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   25c40:	movk	x1, #0xb6b3, lsl #32
   25c44:	movk	x1, #0xde0, lsl #48
   25c48:	cmp	x0, x1
   25c4c:	b.ls	25d38 <PyInit__decimal@@Base+0x9af8>  // b.plast
   25c50:	ldp	x25, x26, [sp, #64]
   25c54:	b	25a64 <PyInit__decimal@@Base+0x9824>
   25c58:	mov	x0, x20
   25c5c:	mov	w2, #0x2                   	// #2
   25c60:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   25c64:	ldp	x19, x20, [sp, #16]
   25c68:	ldp	x21, x22, [sp, #32]
   25c6c:	ldp	x23, x24, [sp, #48]
   25c70:	ldp	x29, x30, [sp], #96
   25c74:	ret
   25c78:	mov	x0, x20
   25c7c:	bl	2b240 <PyInit__decimal@@Base+0xf000>
   25c80:	add	x23, x23, #0x1
   25c84:	ldrb	w24, [x23]
   25c88:	mov	w1, #0x1                   	// #1
   25c8c:	b	257c4 <PyInit__decimal@@Base+0x9584>
   25c90:	cmp	x24, #0x1
   25c94:	sub	x3, x24, #0x2
   25c98:	b.eq	25d18 <PyInit__decimal@@Base+0x9ad8>  // b.none
   25c9c:	nop
   25ca0:	mov	w0, #0x13                  	// #19
   25ca4:	mov	x1, #0x0                   	// #0
   25ca8:	str	xzr, [x5, x3, lsl #3]
   25cac:	b	25cd8 <PyInit__decimal@@Base+0x9a98>
   25cb0:	mov	x4, x19
   25cb4:	add	x1, x1, x1, lsl #2
   25cb8:	mov	x19, x2
   25cbc:	subs	w0, w0, #0x1
   25cc0:	lsl	x1, x1, #1
   25cc4:	ldrb	w4, [x4]
   25cc8:	sub	w4, w4, #0x30
   25ccc:	add	x1, x1, w4, sxtw
   25cd0:	str	x1, [x5, x3, lsl #3]
   25cd4:	b.eq	25d0c <PyInit__decimal@@Base+0x9acc>  // b.none
   25cd8:	add	x4, x19, #0x1
   25cdc:	cmp	x26, x19
   25ce0:	mov	x2, x4
   25ce4:	b.ne	25cb0 <PyInit__decimal@@Base+0x9a70>  // b.any
   25ce8:	ldrb	w4, [x4]
   25cec:	add	x1, x1, x1, lsl #2
   25cf0:	add	x19, x26, #0x2
   25cf4:	subs	w0, w0, #0x1
   25cf8:	sub	w4, w4, #0x30
   25cfc:	lsl	x1, x1, #1
   25d00:	add	x1, x1, w4, sxtw
   25d04:	str	x1, [x5, x3, lsl #3]
   25d08:	b.ne	25cd8 <PyInit__decimal@@Base+0x9a98>  // b.any
   25d0c:	sub	x3, x3, #0x1
   25d10:	cmn	x3, #0x1
   25d14:	b.ne	25ca0 <PyInit__decimal@@Base+0x9a60>  // b.any
   25d18:	mov	x0, x20
   25d1c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   25d20:	mov	x2, x21
   25d24:	mov	x1, x22
   25d28:	mov	x0, x20
   25d2c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   25d30:	ldp	x25, x26, [sp, #64]
   25d34:	b	25814 <PyInit__decimal@@Base+0x95d4>
   25d38:	mov	x1, #0x1                   	// #1
   25d3c:	ldr	x2, [x20, #8]
   25d40:	movk	x1, #0x4ec8, lsl #16
   25d44:	movk	x1, #0x6d67, lsl #32
   25d48:	movk	x1, #0x1bc1, lsl #48
   25d4c:	cmp	x2, x1
   25d50:	b.gt	25bc8 <PyInit__decimal@@Base+0x9988>
   25d54:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   25d58:	cmp	x2, x1
   25d5c:	b.ne	258f8 <PyInit__decimal@@Base+0x96b8>  // b.any
   25d60:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   25d64:	b	25bc8 <PyInit__decimal@@Base+0x9988>
   25d68:	str	x0, [x20, #8]
   25d6c:	cmp	w1, #0x22
   25d70:	b.ne	25c50 <PyInit__decimal@@Base+0x9a10>  // b.any
   25d74:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   25d78:	cmp	x0, x1
   25d7c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   25d80:	ccmp	x0, x1, #0x4, ne  // ne = any
   25d84:	b.ne	25c50 <PyInit__decimal@@Base+0x9a10>  // b.any
   25d88:	mov	x23, x25
   25d8c:	b	25b74 <PyInit__decimal@@Base+0x9934>
   25d90:	mov	x2, x21
   25d94:	mov	x0, x20
   25d98:	mov	w1, #0x200                 	// #512
   25d9c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   25da0:	ldp	x25, x26, [sp, #64]
   25da4:	b	25814 <PyInit__decimal@@Base+0x95d4>
   25da8:	mov	x0, x19
   25dac:	b	258d0 <PyInit__decimal@@Base+0x9690>
   25db0:	ubfiz	x3, x1, #1, #8
   25db4:	ldrh	w3, [x2, x3]
   25db8:	tbnz	w3, #11, 25df4 <PyInit__decimal@@Base+0x9bb4>
   25dbc:	cmp	w1, #0x2e
   25dc0:	b.ne	25c20 <PyInit__decimal@@Base+0x99e0>  // b.any
   25dc4:	ldrb	w3, [x23, #2]
   25dc8:	mov	w24, w1
   25dcc:	ldrh	w1, [x2, x3, lsl #1]
   25dd0:	tst	x1, #0x800
   25dd4:	csel	x19, x23, xzr, eq  // eq = none
   25dd8:	mov	x23, x0
   25ddc:	b	25ae8 <PyInit__decimal@@Base+0x98a8>
   25de0:	mov	w1, #0x16                  	// #22
   25de4:	ldp	x25, x26, [sp, #64]
   25de8:	str	w1, [x23]
   25dec:	str	x0, [x20, #8]
   25df0:	b	25a64 <PyInit__decimal@@Base+0x9824>
   25df4:	mov	x23, x0
   25df8:	mov	w24, w1
   25dfc:	mov	x19, x25
   25e00:	cbnz	w24, 25ae8 <PyInit__decimal@@Base+0x98a8>
   25e04:	b	25b2c <PyInit__decimal@@Base+0x98ec>
   25e08:	cmp	w0, #0x69
   25e0c:	b.ne	259c0 <PyInit__decimal@@Base+0x9780>  // b.any
   25e10:	add	x0, x23, #0x1
   25e14:	b	259d8 <PyInit__decimal@@Base+0x9798>
   25e18:	cmp	w1, #0x0
   25e1c:	stp	x29, x30, [sp, #-32]!
   25e20:	cset	w2, ne  // ne = any
   25e24:	mov	x29, sp
   25e28:	mov	x1, x0
   25e2c:	orr	w2, w2, #0x2
   25e30:	add	x0, sp, #0x18
   25e34:	mov	x3, #0x1                   	// #1
   25e38:	bl	242b8 <PyInit__decimal@@Base+0x8078>
   25e3c:	ldr	x0, [sp, #24]
   25e40:	ldp	x29, x30, [sp], #32
   25e44:	ret
   25e48:	cmp	w1, #0x0
   25e4c:	stp	x29, x30, [sp, #-32]!
   25e50:	cset	w2, ne  // ne = any
   25e54:	mov	x29, sp
   25e58:	mov	x1, x0
   25e5c:	orr	w2, w2, #0x4
   25e60:	add	x0, sp, #0x18
   25e64:	mov	x3, #0x1                   	// #1
   25e68:	bl	242b8 <PyInit__decimal@@Base+0x8078>
   25e6c:	ldr	x0, [sp, #24]
   25e70:	ldp	x29, x30, [sp], #32
   25e74:	ret
   25e78:	cmp	w2, #0x0
   25e7c:	mov	x3, #0x1                   	// #1
   25e80:	cset	w2, ne  // ne = any
   25e84:	orr	w2, w2, #0x2
   25e88:	b	242b8 <PyInit__decimal@@Base+0x8078>
   25e8c:	nop
   25e90:	cmp	w2, #0x0
   25e94:	mov	x3, #0x1                   	// #1
   25e98:	cset	w2, ne  // ne = any
   25e9c:	orr	w2, w2, #0x4
   25ea0:	b	242b8 <PyInit__decimal@@Base+0x8078>
   25ea4:	nop
   25ea8:	stp	x29, x30, [sp, #-32]!
   25eac:	mov	x29, sp
   25eb0:	str	x19, [sp, #16]
   25eb4:	mov	x19, x0
   25eb8:	ldr	x0, [x0, #24]
   25ebc:	bl	64d0 <strlen@plt>
   25ec0:	sub	x0, x0, #0x1
   25ec4:	cmp	x0, #0x3
   25ec8:	b.hi	25ee8 <PyInit__decimal@@Base+0x9ca8>  // b.pmore
   25ecc:	ldr	x0, [x19, #32]
   25ed0:	bl	64d0 <strlen@plt>
   25ed4:	cmp	x0, #0x4
   25ed8:	csetm	w0, hi  // hi = pmore
   25edc:	ldr	x19, [sp, #16]
   25ee0:	ldp	x29, x30, [sp], #32
   25ee4:	ret
   25ee8:	mov	w0, #0xffffffff            	// #-1
   25eec:	b	25edc <PyInit__decimal@@Base+0x9c9c>
   25ef0:	stp	x29, x30, [sp, #-80]!
   25ef4:	cmp	w2, #0x0
   25ef8:	mov	w3, #0x2d3e                	// #11582
   25efc:	mov	x29, sp
   25f00:	stp	x19, x20, [sp, #16]
   25f04:	mov	x19, x0
   25f08:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   25f0c:	mov	w2, #0x47                  	// #71
   25f10:	str	x1, [sp, #72]
   25f14:	ldr	q0, [x0, #1744]
   25f18:	mov	w0, #0x67                  	// #103
   25f1c:	csel	w2, w2, w0, ne  // ne = any
   25f20:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   25f24:	add	x0, x0, #0x4c8
   25f28:	strb	w2, [x19, #16]
   25f2c:	sturh	w3, [x19, #17]
   25f30:	stp	x0, x0, [x19, #24]
   25f34:	str	x0, [x19, #40]
   25f38:	str	q0, [x19]
   25f3c:	ldrb	w0, [x1]
   25f40:	cbz	w0, 260fc <PyInit__decimal@@Base+0x9ebc>
   25f44:	tbz	w0, #7, 25fa4 <PyInit__decimal@@Base+0x9d64>
   25f48:	add	w2, w0, #0x3e
   25f4c:	add	x4, x19, #0x13
   25f50:	and	w2, w2, #0xff
   25f54:	cmp	w2, #0x1d
   25f58:	b.ls	261b4 <PyInit__decimal@@Base+0x9f74>  // b.plast
   25f5c:	cmp	w0, #0xe0
   25f60:	b.eq	262ac <PyInit__decimal@@Base+0xa06c>  // b.none
   25f64:	cmp	w0, #0xec
   25f68:	b.ls	26240 <PyInit__decimal@@Base+0xa000>  // b.plast
   25f6c:	cmp	w0, #0xed
   25f70:	b.eq	262c8 <PyInit__decimal@@Base+0xa088>  // b.none
   25f74:	cmp	w0, #0xef
   25f78:	b.ls	26240 <PyInit__decimal@@Base+0xa000>  // b.plast
   25f7c:	cmp	w0, #0xf0
   25f80:	b.eq	2637c <PyInit__decimal@@Base+0xa13c>  // b.none
   25f84:	cmp	w0, #0xf3
   25f88:	b.ls	2638c <PyInit__decimal@@Base+0xa14c>  // b.plast
   25f8c:	cmp	w0, #0xf4
   25f90:	b.ne	261cc <PyInit__decimal@@Base+0x9f8c>  // b.any
   25f94:	mov	w2, #0x4                   	// #4
   25f98:	mov	w5, #0x8f                  	// #143
   25f9c:	mov	w3, #0x80                  	// #128
   25fa0:	b	2624c <PyInit__decimal@@Base+0xa00c>
   25fa4:	stp	x21, x22, [sp, #32]
   25fa8:	mov	w2, #0x1                   	// #1
   25fac:	strb	w0, [x19, #19]
   25fb0:	strb	wzr, [x19, #20]
   25fb4:	ldrb	w0, [x1]
   25fb8:	cbz	w0, 260c4 <PyInit__decimal@@Base+0x9e84>
   25fbc:	ldrb	w3, [x1, w2, sxtw]
   25fc0:	add	x2, x1, w2, sxtw
   25fc4:	sub	w0, w3, #0x3c
   25fc8:	cmp	w3, #0x5e
   25fcc:	and	w0, w0, #0xff
   25fd0:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   25fd4:	b.hi	260c4 <PyInit__decimal@@Base+0x9e84>  // b.pmore
   25fd8:	strb	w3, [x19, #17]
   25fdc:	mov	w4, #0x1                   	// #1
   25fe0:	add	x3, x2, #0x1
   25fe4:	str	x3, [sp, #72]
   25fe8:	ldrb	w20, [x2, #1]
   25fec:	sub	w0, w20, #0x2b
   25ff0:	cmp	w20, #0x20
   25ff4:	and	w0, w0, #0xfffffffd
   25ff8:	mov	x21, x3
   25ffc:	and	w0, w0, #0xff
   26000:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   26004:	b.ne	2601c <PyInit__decimal@@Base+0x9ddc>  // b.any
   26008:	ldrb	w0, [x3]
   2600c:	add	x21, x3, #0x1
   26010:	strb	w0, [x19, #18]
   26014:	str	x21, [sp, #72]
   26018:	ldrb	w20, [x3, #1]
   2601c:	cmp	w20, #0x30
   26020:	b.eq	2610c <PyInit__decimal@@Base+0x9ecc>  // b.none
   26024:	bl	6880 <__ctype_b_loc@plt>
   26028:	mov	x22, x0
   2602c:	ubfiz	x0, x20, #1, #8
   26030:	ldr	x1, [x22]
   26034:	ldrh	w0, [x1, x0]
   26038:	tbnz	w0, #11, 26178 <PyInit__decimal@@Base+0x9f38>
   2603c:	cmp	w20, #0x2c
   26040:	b.ne	26074 <PyInit__decimal@@Base+0x9e34>  // b.any
   26044:	add	x3, x21, #0x1
   26048:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2604c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   26050:	add	x2, x2, #0x5a8
   26054:	add	x1, x1, #0x5b0
   26058:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2605c:	add	x0, x0, #0x5b8
   26060:	stp	x2, x1, [x19, #24]
   26064:	str	x0, [x19, #40]
   26068:	str	x3, [sp, #72]
   2606c:	ldrb	w20, [x21, #1]
   26070:	mov	x21, x3
   26074:	cmp	w20, #0x2e
   26078:	b.eq	261e0 <PyInit__decimal@@Base+0x9fa0>  // b.none
   2607c:	and	w0, w20, #0xffffffdf
   26080:	cmp	w20, #0x25
   26084:	and	w0, w0, #0xff
   26088:	sub	w1, w0, #0x45
   2608c:	and	w1, w1, #0xff
   26090:	ccmp	w1, #0x2, #0x0, ne  // ne = any
   26094:	b.hi	262d8 <PyInit__decimal@@Base+0xa098>  // b.pmore
   26098:	add	x0, x21, #0x1
   2609c:	str	x0, [sp, #72]
   260a0:	ldrb	w0, [x21]
   260a4:	strb	w0, [x19, #16]
   260a8:	ldrb	w20, [x21, #1]
   260ac:	cmp	w20, #0x0
   260b0:	cset	w0, eq  // eq = none
   260b4:	ldp	x19, x20, [sp, #16]
   260b8:	ldp	x21, x22, [sp, #32]
   260bc:	ldp	x29, x30, [sp], #80
   260c0:	ret
   260c4:	mov	w0, #0x20                  	// #32
   260c8:	sturh	w0, [x19, #19]
   260cc:	ldrb	w20, [x1]
   260d0:	sub	w0, w20, #0x3c
   260d4:	cmp	w20, #0x5e
   260d8:	and	w0, w0, #0xff
   260dc:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   260e0:	b.hi	26234 <PyInit__decimal@@Base+0x9ff4>  // b.pmore
   260e4:	strb	w20, [x19, #17]
   260e8:	add	x3, x1, #0x1
   260ec:	mov	w4, #0x1                   	// #1
   260f0:	str	x3, [sp, #72]
   260f4:	ldrb	w20, [x1, #1]
   260f8:	b	25fec <PyInit__decimal@@Base+0x9dac>
   260fc:	stp	x21, x22, [sp, #32]
   26100:	mov	w2, #0x0                   	// #0
   26104:	strb	wzr, [x19, #19]
   26108:	b	25fb4 <PyInit__decimal@@Base+0x9d74>
   2610c:	cbnz	w4, 26158 <PyInit__decimal@@Base+0x9f18>
   26110:	str	x23, [sp, #48]
   26114:	mov	w0, #0x7a                  	// #122
   26118:	add	x23, x21, #0x1
   2611c:	strb	w0, [x19, #17]
   26120:	str	x23, [sp, #72]
   26124:	ldrb	w0, [x21]
   26128:	strb	w0, [x19, #19]
   2612c:	strb	wzr, [x19, #20]
   26130:	bl	6880 <__ctype_b_loc@plt>
   26134:	mov	x22, x0
   26138:	ldrb	w20, [x21, #1]
   2613c:	ldr	x1, [x22]
   26140:	ubfiz	x0, x20, #1, #8
   26144:	ldrh	w0, [x1, x0]
   26148:	tbz	w0, #11, 262bc <PyInit__decimal@@Base+0xa07c>
   2614c:	cmp	w20, #0x30
   26150:	b.ne	2616c <PyInit__decimal@@Base+0x9f2c>  // b.any
   26154:	ldr	x23, [sp, #48]
   26158:	mov	w0, #0x0                   	// #0
   2615c:	ldp	x19, x20, [sp, #16]
   26160:	ldp	x21, x22, [sp, #32]
   26164:	ldp	x29, x30, [sp], #80
   26168:	ret
   2616c:	mov	x21, x23
   26170:	ldr	x23, [sp, #48]
   26174:	nop
   26178:	bl	6a20 <__errno_location@plt>
   2617c:	mov	x20, x0
   26180:	add	x1, sp, #0x48
   26184:	mov	x0, x21
   26188:	mov	w2, #0xa                   	// #10
   2618c:	str	wzr, [x20]
   26190:	bl	6540 <strtoll@plt>
   26194:	ldr	w1, [x20]
   26198:	str	x0, [x19]
   2619c:	cmp	w1, #0x22
   261a0:	ccmp	w1, #0x16, #0x4, ne  // ne = any
   261a4:	b.eq	26158 <PyInit__decimal@@Base+0x9f18>  // b.none
   261a8:	ldr	x21, [sp, #72]
   261ac:	ldrb	w20, [x21]
   261b0:	b	2603c <PyInit__decimal@@Base+0x9dfc>
   261b4:	strb	w0, [x19, #19]
   261b8:	ldrb	w3, [x1, #1]
   261bc:	sub	w0, w3, #0x80
   261c0:	and	w0, w0, #0xff
   261c4:	cmp	w0, #0x3f
   261c8:	b.ls	26354 <PyInit__decimal@@Base+0xa114>  // b.plast
   261cc:	strb	wzr, [x19, #19]
   261d0:	mov	w0, #0x0                   	// #0
   261d4:	ldp	x19, x20, [sp, #16]
   261d8:	ldp	x29, x30, [sp], #80
   261dc:	ret
   261e0:	add	x20, x21, #0x1
   261e4:	str	x20, [sp, #72]
   261e8:	ldr	x0, [x22]
   261ec:	ldrb	w1, [x21, #1]
   261f0:	ldrh	w0, [x0, x1, lsl #1]
   261f4:	tbz	w0, #11, 26158 <PyInit__decimal@@Base+0x9f18>
   261f8:	bl	6a20 <__errno_location@plt>
   261fc:	mov	x21, x0
   26200:	add	x1, sp, #0x48
   26204:	mov	x0, x20
   26208:	mov	w2, #0xa                   	// #10
   2620c:	str	wzr, [x21]
   26210:	bl	6540 <strtoll@plt>
   26214:	ldr	w1, [x21]
   26218:	str	x0, [x19, #8]
   2621c:	cmp	w1, #0x22
   26220:	ccmp	w1, #0x16, #0x4, ne  // ne = any
   26224:	b.eq	26158 <PyInit__decimal@@Base+0x9f18>  // b.none
   26228:	ldr	x21, [sp, #72]
   2622c:	ldrb	w20, [x21]
   26230:	b	2607c <PyInit__decimal@@Base+0x9e3c>
   26234:	mov	x3, x1
   26238:	mov	w4, #0x0                   	// #0
   2623c:	b	25fec <PyInit__decimal@@Base+0x9dac>
   26240:	mov	w2, #0x3                   	// #3
   26244:	mov	w5, #0xbf                  	// #191
   26248:	mov	w3, #0x80                  	// #128
   2624c:	strb	w0, [x19, #19]
   26250:	ldrb	w0, [x1, #1]
   26254:	cmp	w0, w5
   26258:	ccmp	w0, w3, #0x0, ls  // ls = plast
   2625c:	b.cc	261cc <PyInit__decimal@@Base+0x9f8c>  // b.lo, b.ul, b.last
   26260:	strb	w0, [x19, #20]
   26264:	ldrb	w3, [x1, #2]
   26268:	sub	w0, w3, #0x80
   2626c:	and	w0, w0, #0xff
   26270:	cmp	w0, #0x3f
   26274:	b.hi	261cc <PyInit__decimal@@Base+0x9f8c>  // b.pmore
   26278:	strb	w3, [x19, #21]
   2627c:	cmp	w2, #0x4
   26280:	b.ne	2636c <PyInit__decimal@@Base+0xa12c>  // b.any
   26284:	ldrb	w3, [x1, #3]
   26288:	sub	w0, w3, #0x80
   2628c:	and	w0, w0, #0xff
   26290:	cmp	w0, #0x3f
   26294:	b.hi	261cc <PyInit__decimal@@Base+0x9f8c>  // b.pmore
   26298:	sxtw	x0, w2
   2629c:	stp	x21, x22, [sp, #32]
   262a0:	strb	w3, [x19, #22]
   262a4:	strb	wzr, [x4, x0]
   262a8:	b	25fb4 <PyInit__decimal@@Base+0x9d74>
   262ac:	mov	w2, #0x3                   	// #3
   262b0:	mov	w5, #0xbf                  	// #191
   262b4:	mov	w3, #0xa0                  	// #160
   262b8:	b	2624c <PyInit__decimal@@Base+0xa00c>
   262bc:	mov	x21, x23
   262c0:	ldr	x23, [sp, #48]
   262c4:	b	2603c <PyInit__decimal@@Base+0x9dfc>
   262c8:	mov	w2, #0x3                   	// #3
   262cc:	mov	w5, #0x9f                  	// #159
   262d0:	mov	w3, #0x80                  	// #128
   262d4:	b	2624c <PyInit__decimal@@Base+0xa00c>
   262d8:	cmp	w0, #0x4e
   262dc:	b.ne	260ac <PyInit__decimal@@Base+0x9e6c>  // b.any
   262e0:	ldr	x0, [x19, #32]
   262e4:	ldrb	w0, [x0]
   262e8:	cbnz	w0, 26158 <PyInit__decimal@@Base+0x9f18>
   262ec:	add	x0, x21, #0x1
   262f0:	str	x0, [sp, #72]
   262f4:	mov	w1, #0x67                  	// #103
   262f8:	mov	w0, #0x47                  	// #71
   262fc:	ldrb	w2, [x21]
   26300:	cmp	w2, #0x4e
   26304:	csel	w0, w0, w1, eq  // eq = none
   26308:	strb	w0, [x19, #16]
   2630c:	bl	6630 <localeconv@plt>
   26310:	mov	x1, x0
   26314:	ldr	q0, [x0]
   26318:	ldp	x0, x20, [x0]
   2631c:	stur	q0, [x19, #24]
   26320:	ldr	x1, [x1, #16]
   26324:	str	x1, [x19, #40]
   26328:	bl	64d0 <strlen@plt>
   2632c:	sub	x0, x0, #0x1
   26330:	cmp	x0, #0x3
   26334:	b.hi	26158 <PyInit__decimal@@Base+0x9f18>  // b.pmore
   26338:	mov	x0, x20
   2633c:	bl	64d0 <strlen@plt>
   26340:	cmp	x0, #0x4
   26344:	b.hi	26158 <PyInit__decimal@@Base+0x9f18>  // b.pmore
   26348:	ldr	x0, [sp, #72]
   2634c:	ldrb	w20, [x0]
   26350:	b	260ac <PyInit__decimal@@Base+0x9e6c>
   26354:	mov	x0, #0x2                   	// #2
   26358:	stp	x21, x22, [sp, #32]
   2635c:	mov	w2, w0
   26360:	strb	w3, [x19, #20]
   26364:	strb	wzr, [x4, x0]
   26368:	b	25fb4 <PyInit__decimal@@Base+0x9d74>
   2636c:	mov	x0, #0x3                   	// #3
   26370:	stp	x21, x22, [sp, #32]
   26374:	strb	wzr, [x4, x0]
   26378:	b	25fb4 <PyInit__decimal@@Base+0x9d74>
   2637c:	mov	w2, #0x4                   	// #4
   26380:	mov	w5, #0xbf                  	// #191
   26384:	mov	w3, #0x90                  	// #144
   26388:	b	2624c <PyInit__decimal@@Base+0xa00c>
   2638c:	mov	w2, #0x4                   	// #4
   26390:	mov	w5, #0xbf                  	// #191
   26394:	mov	w3, #0x80                  	// #128
   26398:	b	2624c <PyInit__decimal@@Base+0xa00c>
   2639c:	nop
   263a0:	sub	sp, sp, #0x3a0
   263a4:	mov	w4, #0x30                  	// #48
   263a8:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   263ac:	stp	x29, x30, [sp]
   263b0:	mov	x29, sp
   263b4:	ldr	q0, [x5, #1760]
   263b8:	stp	x19, x20, [sp, #16]
   263bc:	mov	x19, x1
   263c0:	strb	w4, [sp, #320]
   263c4:	add	x4, sp, #0x200
   263c8:	add	x1, sp, #0x1a0
   263cc:	stp	x21, x22, [sp, #32]
   263d0:	mov	x22, x0
   263d4:	stp	x27, x28, [sp, #80]
   263d8:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   263dc:	movk	x0, #0xb6b3, lsl #32
   263e0:	str	x1, [sp, #360]
   263e4:	add	x1, sp, #0x200
   263e8:	stp	xzr, xzr, [x4, #-184]
   263ec:	movk	x0, #0xde0, lsl #48
   263f0:	ldrb	w28, [x19, #16]
   263f4:	ldr	x4, [x19]
   263f8:	str	x2, [sp, #104]
   263fc:	stur	q0, [x1, #-168]
   26400:	mov	x20, x3
   26404:	cmp	x4, x0
   26408:	b.gt	27038 <PyInit__decimal@@Base+0xadf8>
   2640c:	stp	x23, x24, [sp, #48]
   26410:	mov	w21, w28
   26414:	stp	x25, x26, [sp, #64]
   26418:	bl	6880 <__ctype_b_loc@plt>
   2641c:	mov	x23, x0
   26420:	ubfiz	x0, x28, #1, #8
   26424:	ldr	x2, [x23]
   26428:	ldrh	w0, [x2, x0]
   2642c:	tbnz	w0, #8, 2656c <PyInit__decimal@@Base+0xa32c>
   26430:	mov	w0, #0x8                   	// #8
   26434:	str	w0, [sp, #96]
   26438:	ldrb	w0, [x19, #18]
   2643c:	mov	w8, #0x70                  	// #112
   26440:	mov	w7, #0x50                  	// #80
   26444:	mov	w6, #0x60                  	// #96
   26448:	cmp	w0, #0x20
   2644c:	mov	w5, #0x48                  	// #72
   26450:	mov	w4, #0x42                  	// #66
   26454:	mov	w14, #0xb0                  	// #176
   26458:	mov	w13, #0x90                  	// #144
   2645c:	mov	w12, #0xa0                  	// #160
   26460:	mov	w11, #0x88                  	// #136
   26464:	mov	w10, #0x82                  	// #130
   26468:	mov	w27, #0x30                  	// #48
   2646c:	mov	w26, #0x10                  	// #16
   26470:	mov	w21, #0x20                  	// #32
   26474:	mov	w25, #0x2                   	// #2
   26478:	mov	w3, #0x40                  	// #64
   2647c:	mov	w9, #0x80                  	// #128
   26480:	mov	w24, #0x0                   	// #0
   26484:	b.eq	265d4 <PyInit__decimal@@Base+0xa394>  // b.none
   26488:	cmp	w0, #0x2b
   2648c:	b.ne	264a8 <PyInit__decimal@@Base+0xa268>  // b.any
   26490:	mov	w27, w14
   26494:	mov	w26, w13
   26498:	mov	w21, w12
   2649c:	mov	w25, w10
   264a0:	mov	w24, w9
   264a4:	str	w11, [sp, #96]
   264a8:	mov	x0, x22
   264ac:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   264b0:	cbz	w0, 265f8 <PyInit__decimal@@Base+0xa3b8>
   264b4:	ldrb	w0, [x19, #17]
   264b8:	cmp	w0, #0x7a
   264bc:	b.ne	264f0 <PyInit__decimal@@Base+0xa2b0>  // b.any
   264c0:	add	x1, sp, #0x200
   264c4:	mov	w3, #0x3e                  	// #62
   264c8:	ldp	x4, x5, [x19, #16]
   264cc:	stp	x4, x5, [sp, #384]
   264d0:	mov	w0, #0x20                  	// #32
   264d4:	ldp	x6, x7, [x19]
   264d8:	stp	x6, x7, [sp, #368]
   264dc:	strb	w3, [sp, #385]
   264e0:	sturh	w0, [x1, #-125]
   264e4:	ldp	x4, x5, [x19, #32]
   264e8:	add	x19, sp, #0x170
   264ec:	stp	x4, x5, [sp, #400]
   264f0:	cmp	w28, #0x25
   264f4:	b.eq	27060 <PyInit__decimal@@Base+0xae20>  // b.none
   264f8:	add	x21, sp, #0x140
   264fc:	mov	x26, #0x1                   	// #1
   26500:	mov	x3, x26
   26504:	mov	w2, w24
   26508:	mov	x1, x22
   2650c:	add	x0, sp, #0x138
   26510:	bl	242b8 <PyInit__decimal@@Base+0x8078>
   26514:	dup	v0.2d, x0
   26518:	str	q0, [sp, #288]
   2651c:	tbnz	x0, #63, 266ac <PyInit__decimal@@Base+0xa46c>
   26520:	ldr	x0, [x19, #24]
   26524:	ldrb	w0, [x0]
   26528:	cbnz	w0, 26728 <PyInit__decimal@@Base+0xa4e8>
   2652c:	ldr	x23, [x19]
   26530:	cbz	x23, 26540 <PyInit__decimal@@Base+0xa300>
   26534:	ldr	x24, [sp, #296]
   26538:	cmp	x23, x24
   2653c:	b.gt	26e18 <PyInit__decimal@@Base+0xabd8>
   26540:	mov	x0, x21
   26544:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
   26548:	ldp	x29, x30, [sp]
   2654c:	ldp	x19, x20, [sp, #16]
   26550:	ldp	x21, x22, [sp, #32]
   26554:	ldp	x23, x24, [sp, #48]
   26558:	ldp	x25, x26, [sp, #64]
   2655c:	ldp	x27, x28, [sp, #80]
   26560:	ldr	x0, [sp, #312]
   26564:	add	sp, sp, #0x3a0
   26568:	ret
   2656c:	bl	6600 <__ctype_tolower_loc@plt>
   26570:	mov	w27, #0x31                  	// #49
   26574:	ldr	x0, [x0]
   26578:	mov	w8, #0x71                  	// #113
   2657c:	mov	w7, #0x51                  	// #81
   26580:	mov	w6, #0x61                  	// #97
   26584:	mov	w5, #0x49                  	// #73
   26588:	mov	w4, #0x43                  	// #67
   2658c:	ldr	w1, [x0, x21, lsl #2]
   26590:	mov	w0, #0x9                   	// #9
   26594:	str	w0, [sp, #96]
   26598:	mov	w14, #0xb1                  	// #177
   2659c:	ldrb	w0, [x19, #18]
   265a0:	and	w28, w1, #0xff
   265a4:	mov	w13, #0x91                  	// #145
   265a8:	mov	w12, #0xa1                  	// #161
   265ac:	cmp	w0, #0x20
   265b0:	mov	w11, #0x89                  	// #137
   265b4:	mov	w10, #0x83                  	// #131
   265b8:	mov	w26, #0x11                  	// #17
   265bc:	mov	w25, #0x3                   	// #3
   265c0:	mov	w3, #0x41                  	// #65
   265c4:	mov	w9, #0x81                  	// #129
   265c8:	mov	w24, #0x1                   	// #1
   265cc:	mov	w21, #0x21                  	// #33
   265d0:	b.ne	26488 <PyInit__decimal@@Base+0xa248>  // b.any
   265d4:	mov	w27, w8
   265d8:	mov	w26, w7
   265dc:	mov	w21, w6
   265e0:	mov	w25, w4
   265e4:	mov	w24, w3
   265e8:	mov	x0, x22
   265ec:	str	w5, [sp, #96]
   265f0:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   265f4:	cbnz	w0, 264b4 <PyInit__decimal@@Base+0xa274>
   265f8:	str	wzr, [sp, #368]
   265fc:	add	x21, sp, #0x140
   26600:	cmp	w28, #0x66
   26604:	b.eq	26640 <PyInit__decimal@@Base+0xa400>  // b.none
   26608:	b.hi	26708 <PyInit__decimal@@Base+0xa4c8>  // b.pmore
   2660c:	cmp	w28, #0x25
   26610:	b.ne	266e4 <PyInit__decimal@@Base+0xa4a4>  // b.any
   26614:	add	x21, sp, #0x140
   26618:	mov	x1, x22
   2661c:	mov	x0, x21
   26620:	mov	x2, x20
   26624:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   26628:	cbz	w0, 266c0 <PyInit__decimal@@Base+0xa480>
   2662c:	ldr	x0, [sp, #328]
   26630:	mov	w26, w27
   26634:	mov	x22, x21
   26638:	add	x0, x0, #0x2
   2663c:	str	x0, [sp, #328]
   26640:	ldr	x2, [x19, #8]
   26644:	tbnz	x2, #63, 26678 <PyInit__decimal@@Base+0xa438>
   26648:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   2664c:	movk	x0, #0xb6b3, lsl #32
   26650:	movk	x0, #0xde0, lsl #48
   26654:	cmp	x2, x0
   26658:	b.gt	2753c <PyInit__decimal@@Base+0xb2fc>
   2665c:	ldr	x3, [sp, #104]
   26660:	mov	x1, x22
   26664:	neg	x2, x2
   26668:	mov	x22, x21
   2666c:	add	x4, sp, #0x170
   26670:	mov	x0, x21
   26674:	bl	3cb70 <PyInit__decimal@@Base+0x20930>
   26678:	mov	x0, x22
   2667c:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
   26680:	cbnz	w0, 27070 <PyInit__decimal@@Base+0xae30>
   26684:	mov	w25, w26
   26688:	mov	x26, #0x1                   	// #1
   2668c:	ldr	w0, [sp, #368]
   26690:	mov	w1, #0x3be                 	// #958
   26694:	ands	w0, w0, w1
   26698:	b.eq	26700 <PyInit__decimal@@Base+0xa4c0>  // b.none
   2669c:	ldr	w1, [x20]
   266a0:	orr	w0, w1, w0
   266a4:	str	w0, [x20]
   266a8:	b	266b8 <PyInit__decimal@@Base+0xa478>
   266ac:	ldr	w0, [x20]
   266b0:	orr	w0, w0, #0x200
   266b4:	str	w0, [x20]
   266b8:	mov	x0, x21
   266bc:	bl	2aa88 <PyInit__decimal@@Base+0xe848>
   266c0:	mov	x0, #0x0                   	// #0
   266c4:	ldp	x29, x30, [sp]
   266c8:	ldp	x19, x20, [sp, #16]
   266cc:	ldp	x21, x22, [sp, #32]
   266d0:	ldp	x23, x24, [sp, #48]
   266d4:	ldp	x25, x26, [sp, #64]
   266d8:	ldp	x27, x28, [sp, #80]
   266dc:	add	sp, sp, #0x3a0
   266e0:	ret
   266e4:	cmp	w28, #0x65
   266e8:	b.ne	2786c <PyInit__decimal@@Base+0xb62c>  // b.any
   266ec:	ldr	x0, [x19, #8]
   266f0:	tbz	x0, #63, 27768 <PyInit__decimal@@Base+0xb528>
   266f4:	ldr	w25, [sp, #96]
   266f8:	add	x21, sp, #0x140
   266fc:	mov	x26, #0x1                   	// #1
   26700:	mov	w24, w25
   26704:	b	26500 <PyInit__decimal@@Base+0xa2c0>
   26708:	cmp	w28, #0x67
   2670c:	b.ne	2786c <PyInit__decimal@@Base+0xb62c>  // b.any
   26710:	ldr	x27, [x19, #8]
   26714:	tbz	x27, #63, 26f9c <PyInit__decimal@@Base+0xad5c>
   26718:	add	x21, sp, #0x140
   2671c:	mov	w24, w25
   26720:	mov	x26, #0x1                   	// #1
   26724:	b	26500 <PyInit__decimal@@Base+0xa2c0>
   26728:	mov	x0, x22
   2672c:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   26730:	mov	w25, w0
   26734:	cbnz	w0, 2652c <PyInit__decimal@@Base+0xa2ec>
   26738:	mov	x0, #0x23                  	// #35
   2673c:	ldr	x1, [sp, #296]
   26740:	movk	x0, #0xa764, lsl #16
   26744:	movk	x0, #0xb6b3, lsl #32
   26748:	movk	x0, #0xde0, lsl #48
   2674c:	cmp	x1, x0
   26750:	ldr	x26, [sp, #312]
   26754:	b.gt	27574 <PyInit__decimal@@Base+0xb334>
   26758:	mov	x27, x26
   2675c:	ldrb	w1, [x27], #1
   26760:	sub	w0, w1, #0x2b
   26764:	cmp	w1, #0x20
   26768:	and	w0, w0, #0xfffffffd
   2676c:	and	w0, w0, #0xff
   26770:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   26774:	b.ne	270bc <PyInit__decimal@@Base+0xae7c>  // b.any
   26778:	add	x4, x26, #0x2
   2677c:	str	x26, [sp, #96]
   26780:	ldrb	w0, [x27, #1]
   26784:	ldr	x2, [x23]
   26788:	ubfiz	x1, x0, #1, #8
   2678c:	ldrh	w1, [x2, x1]
   26790:	tbz	w1, #11, 2769c <PyInit__decimal@@Base+0xb45c>
   26794:	nop
   26798:	ldrb	w0, [x4, #1]!
   2679c:	ubfiz	x1, x0, #1, #8
   267a0:	ldrh	w1, [x2, x1]
   267a4:	tbnz	w1, #11, 26798 <PyInit__decimal@@Base+0xa558>
   267a8:	sub	x24, x4, x27
   267ac:	cmp	w0, #0x2e
   267b0:	ldr	x0, [x19, #32]
   267b4:	ldr	x22, [sp, #288]
   267b8:	b.eq	275a0 <PyInit__decimal@@Base+0xb360>  // b.none
   267bc:	sub	x5, x4, x26
   267c0:	sub	x23, x22, x5
   267c4:	ldrb	w1, [x0]
   267c8:	cbz	w1, 2652c <PyInit__decimal@@Base+0xa2ec>
   267cc:	ldr	x10, [x19, #40]
   267d0:	ldrb	w1, [x10]
   267d4:	cbz	w1, 2652c <PyInit__decimal@@Base+0xa2ec>
   267d8:	ldr	x1, [sp, #96]
   267dc:	sub	x22, x5, x22
   267e0:	stp	x5, x4, [sp, #120]
   267e4:	mov	x28, x23
   267e8:	cmp	x1, #0x0
   267ec:	cset	x1, ne  // ne = any
   267f0:	str	x1, [sp, #104]
   267f4:	str	x10, [sp, #136]
   267f8:	str	xzr, [sp, #312]
   267fc:	bl	64d0 <strlen@plt>
   26800:	mov	x11, x0
   26804:	dup	v0.2d, x23
   26808:	mov	x7, x23
   2680c:	ldr	x10, [sp, #136]
   26810:	str	xzr, [sp, #112]
   26814:	ldp	x5, x4, [sp, #120]
   26818:	str	x5, [sp, #304]
   2681c:	str	q0, [sp, #288]
   26820:	ldrb	w1, [x10]
   26824:	ldrb	w13, [x19, #17]
   26828:	mov	x0, x24
   2682c:	and	x9, x1, #0xff
   26830:	mov	w12, #0x0                   	// #0
   26834:	sub	w1, w1, #0x1
   26838:	mov	x2, #0x0                   	// #0
   2683c:	and	w1, w1, #0xff
   26840:	cmp	w1, #0xfd
   26844:	ccmp	x0, x9, #0x1, ls  // ls = plast
   26848:	b.ge	2754c <PyInit__decimal@@Base+0xb30c>  // b.tcont
   2684c:	add	x23, x23, x0
   26850:	add	x7, x0, x7
   26854:	sub	x5, x5, x0
   26858:	stp	x23, x7, [sp, #288]
   2685c:	str	x5, [sp, #304]
   26860:	cbnz	x2, 2711c <PyInit__decimal@@Base+0xaedc>
   26864:	cmp	w13, #0x7a
   26868:	b.ne	26884 <PyInit__decimal@@Base+0xa644>  // b.any
   2686c:	ldr	x1, [sp, #104]
   26870:	ldr	x7, [sp, #296]
   26874:	ldr	x3, [x19]
   26878:	add	x2, x7, x1
   2687c:	cmp	x2, x3
   26880:	b.lt	27620 <PyInit__decimal@@Base+0xb3e0>  // b.tstop
   26884:	ldr	x0, [sp, #96]
   26888:	cbz	x0, 268a4 <PyInit__decimal@@Base+0xa664>
   2688c:	ldp	x1, x0, [sp, #296]
   26890:	add	x23, x23, #0x1
   26894:	add	x1, x1, #0x1
   26898:	sub	x0, x0, #0x1
   2689c:	stp	x23, x1, [sp, #288]
   268a0:	str	x0, [sp, #304]
   268a4:	add	x0, x23, #0x1
   268a8:	mov	x1, #0x1                   	// #1
   268ac:	str	x4, [sp, #120]
   268b0:	bl	28278 <PyInit__decimal@@Base+0xc038>
   268b4:	str	x0, [sp, #312]
   268b8:	mov	x23, x0
   268bc:	ldr	x4, [sp, #120]
   268c0:	cbz	x0, 2765c <PyInit__decimal@@Base+0xb41c>
   268c4:	ldr	x0, [x19, #32]
   268c8:	str	x4, [sp, #120]
   268cc:	bl	64d0 <strlen@plt>
   268d0:	mov	x7, x0
   268d4:	dup	v0.2d, x28
   268d8:	subs	x5, x28, #0x1
   268dc:	ldr	x0, [sp, #288]
   268e0:	add	x22, x0, x22
   268e4:	str	x22, [sp, #304]
   268e8:	str	q0, [sp, #288]
   268ec:	b.mi	276f0 <PyInit__decimal@@Base+0xb4b0>  // b.first
   268f0:	ldr	x4, [sp, #120]
   268f4:	add	x1, x5, x22
   268f8:	add	x0, x1, #0x1
   268fc:	sub	x8, x28, #0x10
   26900:	add	x0, x23, x0
   26904:	sub	x1, x1, #0xf
   26908:	add	x8, x4, x8
   2690c:	add	x1, x23, x1
   26910:	cmp	x8, x0
   26914:	add	x0, x4, x28
   26918:	ccmp	x1, x0, #0x2, cc  // cc = lo, ul, last
   2691c:	ccmp	x5, #0xe, #0x0, cs  // cs = hs, nlast
   26920:	b.ls	276cc <PyInit__decimal@@Base+0xb48c>  // b.plast
   26924:	neg	x9, x28, lsr #4
   26928:	mov	x0, #0x0                   	// #0
   2692c:	lsl	x9, x9, #4
   26930:	ldr	q0, [x8, x0]
   26934:	str	q0, [x1, x0]
   26938:	sub	x0, x0, #0x10
   2693c:	cmp	x0, x9
   26940:	b.ne	26930 <PyInit__decimal@@Base+0xa6f0>  // b.any
   26944:	and	x1, x28, #0xfffffffffffffff0
   26948:	sub	x0, x5, x1
   2694c:	cmp	x1, x28
   26950:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26954:	add	x22, x23, x22
   26958:	ldrb	w2, [x4, x0]
   2695c:	subs	x1, x0, #0x1
   26960:	strb	w2, [x22, x0]
   26964:	b.mi	26a78 <PyInit__decimal@@Base+0xa838>  // b.first
   26968:	ldrb	w2, [x4, x1]
   2696c:	cmp	x0, #0x1
   26970:	strb	w2, [x22, x1]
   26974:	sub	x1, x0, #0x2
   26978:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   2697c:	ldrb	w2, [x4, x1]
   26980:	cmp	x0, #0x2
   26984:	strb	w2, [x22, x1]
   26988:	sub	x1, x0, #0x3
   2698c:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26990:	ldrb	w2, [x4, x1]
   26994:	cmp	x0, #0x3
   26998:	strb	w2, [x22, x1]
   2699c:	sub	x1, x0, #0x4
   269a0:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   269a4:	ldrb	w2, [x4, x1]
   269a8:	cmp	x0, #0x4
   269ac:	strb	w2, [x22, x1]
   269b0:	sub	x1, x0, #0x5
   269b4:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   269b8:	ldrb	w2, [x4, x1]
   269bc:	cmp	x0, #0x5
   269c0:	strb	w2, [x22, x1]
   269c4:	sub	x1, x0, #0x6
   269c8:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   269cc:	ldrb	w2, [x4, x1]
   269d0:	cmp	x0, #0x6
   269d4:	strb	w2, [x22, x1]
   269d8:	sub	x1, x0, #0x7
   269dc:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   269e0:	ldrb	w2, [x4, x1]
   269e4:	cmp	x0, #0x7
   269e8:	strb	w2, [x22, x1]
   269ec:	sub	x1, x0, #0x8
   269f0:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   269f4:	ldrb	w2, [x4, x1]
   269f8:	cmp	x0, #0x8
   269fc:	strb	w2, [x22, x1]
   26a00:	sub	x1, x0, #0x9
   26a04:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26a08:	ldrb	w2, [x4, x1]
   26a0c:	cmp	x0, #0x9
   26a10:	strb	w2, [x22, x1]
   26a14:	sub	x1, x0, #0xa
   26a18:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26a1c:	ldrb	w2, [x4, x1]
   26a20:	cmp	x0, #0xa
   26a24:	strb	w2, [x22, x1]
   26a28:	sub	x1, x0, #0xb
   26a2c:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26a30:	ldrb	w2, [x4, x1]
   26a34:	cmp	x0, #0xb
   26a38:	strb	w2, [x22, x1]
   26a3c:	sub	x1, x0, #0xc
   26a40:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26a44:	ldrb	w2, [x4, x1]
   26a48:	cmp	x0, #0xc
   26a4c:	strb	w2, [x22, x1]
   26a50:	sub	x1, x0, #0xd
   26a54:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26a58:	ldrb	w2, [x4, x1]
   26a5c:	cmp	x0, #0xd
   26a60:	strb	w2, [x22, x1]
   26a64:	sub	x0, x0, #0xe
   26a68:	b.eq	26a78 <PyInit__decimal@@Base+0xa838>  // b.none
   26a6c:	ldrb	w1, [x4, x0]
   26a70:	strb	w1, [x22, x0]
   26a74:	nop
   26a78:	ldr	x0, [sp, #112]
   26a7c:	ldp	x28, x1, [sp, #288]
   26a80:	ldp	x22, x23, [sp, #304]
   26a84:	cbz	x0, 26c50 <PyInit__decimal@@Base+0xaa10>
   26a88:	stp	x7, x1, [sp, #120]
   26a8c:	bl	64d0 <strlen@plt>
   26a90:	cmp	x0, #0x0
   26a94:	ldp	x7, x1, [sp, #120]
   26a98:	add	x28, x28, x0
   26a9c:	sub	x22, x22, x0
   26aa0:	str	x22, [sp, #304]
   26aa4:	cinc	x1, x1, ne  // ne = any
   26aa8:	stp	x28, x1, [sp, #288]
   26aac:	cbz	x23, 26c50 <PyInit__decimal@@Base+0xaa10>
   26ab0:	sub	x4, x0, #0x1
   26ab4:	cmn	x4, #0x1
   26ab8:	mov	x8, x4
   26abc:	b.eq	26c50 <PyInit__decimal@@Base+0xaa10>  // b.none
   26ac0:	ldr	x3, [sp, #112]
   26ac4:	add	x1, x4, x22
   26ac8:	add	x9, x1, #0x1
   26acc:	sub	x5, x0, #0x10
   26ad0:	sub	x1, x1, #0xf
   26ad4:	add	x9, x23, x9
   26ad8:	add	x5, x3, x5
   26adc:	add	x2, x23, x1
   26ae0:	cmp	x5, x9
   26ae4:	add	x1, x3, x0
   26ae8:	ccmp	x2, x1, #0x2, cc  // cc = lo, ul, last
   26aec:	ccmp	x4, #0xe, #0x0, cs  // cs = hs, nlast
   26af0:	b.ls	27748 <PyInit__decimal@@Base+0xb508>  // b.plast
   26af4:	neg	x8, x0, lsr #4
   26af8:	mov	x1, #0x0                   	// #0
   26afc:	lsl	x8, x8, #4
   26b00:	ldr	q0, [x5, x1]
   26b04:	str	q0, [x2, x1]
   26b08:	sub	x1, x1, #0x10
   26b0c:	cmp	x1, x8
   26b10:	b.ne	26b00 <PyInit__decimal@@Base+0xa8c0>  // b.any
   26b14:	and	x2, x0, #0xfffffffffffffff0
   26b18:	sub	x1, x4, x2
   26b1c:	cmp	x0, x2
   26b20:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26b24:	ldr	x3, [sp, #112]
   26b28:	add	x22, x23, x22
   26b2c:	sub	x0, x1, #0x1
   26b30:	ldrb	w2, [x3, x1]
   26b34:	strb	w2, [x22, x1]
   26b38:	cbz	x1, 26c48 <PyInit__decimal@@Base+0xaa08>
   26b3c:	ldrb	w2, [x3, x0]
   26b40:	cmp	x1, #0x1
   26b44:	strb	w2, [x22, x0]
   26b48:	sub	x0, x1, #0x2
   26b4c:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26b50:	ldrb	w2, [x3, x0]
   26b54:	cmp	x1, #0x2
   26b58:	strb	w2, [x22, x0]
   26b5c:	sub	x0, x1, #0x3
   26b60:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26b64:	ldrb	w2, [x3, x0]
   26b68:	cmp	x1, #0x3
   26b6c:	strb	w2, [x22, x0]
   26b70:	sub	x0, x1, #0x4
   26b74:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26b78:	ldrb	w2, [x3, x0]
   26b7c:	cmp	x1, #0x4
   26b80:	strb	w2, [x22, x0]
   26b84:	sub	x0, x1, #0x5
   26b88:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26b8c:	ldrb	w2, [x3, x0]
   26b90:	cmp	x1, #0x5
   26b94:	strb	w2, [x22, x0]
   26b98:	sub	x0, x1, #0x6
   26b9c:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26ba0:	ldrb	w2, [x3, x0]
   26ba4:	cmp	x1, #0x6
   26ba8:	strb	w2, [x22, x0]
   26bac:	sub	x0, x1, #0x7
   26bb0:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26bb4:	ldrb	w2, [x3, x0]
   26bb8:	cmp	x1, #0x7
   26bbc:	strb	w2, [x22, x0]
   26bc0:	sub	x0, x1, #0x8
   26bc4:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26bc8:	ldrb	w2, [x3, x0]
   26bcc:	cmp	x1, #0x8
   26bd0:	strb	w2, [x22, x0]
   26bd4:	sub	x0, x1, #0x9
   26bd8:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26bdc:	ldrb	w2, [x3, x0]
   26be0:	cmp	x1, #0x9
   26be4:	strb	w2, [x22, x0]
   26be8:	sub	x0, x1, #0xa
   26bec:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26bf0:	ldrb	w2, [x3, x0]
   26bf4:	cmp	x1, #0xa
   26bf8:	strb	w2, [x22, x0]
   26bfc:	sub	x0, x1, #0xb
   26c00:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26c04:	ldrb	w2, [x3, x0]
   26c08:	cmp	x1, #0xb
   26c0c:	strb	w2, [x22, x0]
   26c10:	sub	x0, x1, #0xc
   26c14:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26c18:	ldrb	w2, [x3, x0]
   26c1c:	cmp	x1, #0xc
   26c20:	strb	w2, [x22, x0]
   26c24:	sub	x0, x1, #0xd
   26c28:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26c2c:	ldrb	w2, [x3, x0]
   26c30:	cmp	x1, #0xd
   26c34:	strb	w2, [x22, x0]
   26c38:	sub	x1, x1, #0xe
   26c3c:	b.eq	26c48 <PyInit__decimal@@Base+0xaa08>  // b.none
   26c40:	ldrb	w0, [x3, x1]
   26c44:	strb	w0, [x22, x1]
   26c48:	ldp	x28, x1, [sp, #288]
   26c4c:	ldp	x22, x23, [sp, #304]
   26c50:	sub	x10, x7, #0x1
   26c54:	and	x11, x7, #0xfffffffffffffff0
   26c58:	neg	x8, x7, lsr #4
   26c5c:	sub	x4, x10, x11
   26c60:	mov	x3, x26
   26c64:	sub	x2, x4, #0x4
   26c68:	str	x2, [sp, #184]
   26c6c:	sub	x2, x4, #0x5
   26c70:	str	x2, [sp, #192]
   26c74:	sub	x2, x4, #0x6
   26c78:	str	x2, [sp, #200]
   26c7c:	sub	x2, x4, #0x7
   26c80:	str	x2, [sp, #216]
   26c84:	sub	x2, x4, #0x8
   26c88:	str	x2, [sp, #208]
   26c8c:	ldr	x9, [x19, #40]
   26c90:	sub	x2, x4, #0x9
   26c94:	str	x2, [sp, #224]
   26c98:	sub	x2, x4, #0xa
   26c9c:	str	x2, [sp, #240]
   26ca0:	sub	x2, x4, #0xb
   26ca4:	ldrb	w0, [x9]
   26ca8:	lsl	x8, x8, #4
   26cac:	str	x2, [sp, #232]
   26cb0:	sub	x2, x4, #0xc
   26cb4:	sub	x12, x4, #0x1
   26cb8:	sub	x13, x4, #0x2
   26cbc:	str	x2, [sp, #264]
   26cc0:	sub	x2, x4, #0xd
   26cc4:	mov	x5, x20
   26cc8:	mov	x6, x21
   26ccc:	mov	x20, x8
   26cd0:	sub	x15, x4, #0x3
   26cd4:	mov	x8, x28
   26cd8:	mov	x26, x13
   26cdc:	mov	x28, x9
   26ce0:	mov	x21, x12
   26ce4:	mov	x9, x22
   26ce8:	and	x16, x0, #0xff
   26cec:	mov	w22, w25
   26cf0:	mov	x25, x7
   26cf4:	str	x2, [sp, #248]
   26cf8:	sub	x2, x4, #0xe
   26cfc:	mov	x14, #0x1                   	// #1
   26d00:	str	x2, [sp, #256]
   26d04:	sub	x2, x7, #0x10
   26d08:	str	x2, [sp, #176]
   26d0c:	sub	w2, w0, #0x1
   26d10:	mov	x7, #0x0                   	// #0
   26d14:	and	w2, w2, #0xff
   26d18:	cmp	w2, #0xfd
   26d1c:	ccmp	x24, x16, #0x1, ls  // ls = plast
   26d20:	b.ge	27594 <PyInit__decimal@@Base+0xb354>  // b.tcont
   26d24:	add	x8, x24, x8
   26d28:	add	x1, x24, x1
   26d2c:	sub	x9, x9, x24
   26d30:	stp	x8, x1, [sp, #288]
   26d34:	str	x9, [sp, #304]
   26d38:	cbz	w22, 2716c <PyInit__decimal@@Base+0xaf2c>
   26d3c:	cbz	x23, 26d8c <PyInit__decimal@@Base+0xab4c>
   26d40:	subs	x0, x24, #0x1
   26d44:	b.mi	26d8c <PyInit__decimal@@Base+0xab4c>  // b.first
   26d48:	add	x0, x0, x9
   26d4c:	sub	x9, x14, x24
   26d50:	add	x0, x0, x9
   26d54:	mov	x2, x24
   26d58:	add	x0, x23, x0
   26d5c:	mov	w1, #0x30                  	// #48
   26d60:	stp	x7, x11, [sp, #112]
   26d64:	stp	x15, x4, [sp, #128]
   26d68:	stp	x3, x5, [sp, #144]
   26d6c:	stp	x6, x10, [sp, #160]
   26d70:	bl	6670 <memset@plt>
   26d74:	mov	x14, #0x1                   	// #1
   26d78:	ldp	x7, x11, [sp, #112]
   26d7c:	ldp	x15, x4, [sp, #128]
   26d80:	ldp	x3, x5, [sp, #144]
   26d84:	ldp	x6, x10, [sp, #160]
   26d88:	ldr	x23, [sp, #312]
   26d8c:	cbnz	x7, 27350 <PyInit__decimal@@Base+0xb110>
   26d90:	ldrb	w0, [x19, #17]
   26d94:	cmp	w0, #0x7a
   26d98:	b.ne	26db4 <PyInit__decimal@@Base+0xab74>  // b.any
   26d9c:	ldr	x0, [sp, #104]
   26da0:	ldr	x1, [sp, #296]
   26da4:	ldr	x7, [x19]
   26da8:	add	x2, x1, x0
   26dac:	cmp	x2, x7
   26db0:	b.lt	2763c <PyInit__decimal@@Base+0xb3fc>  // b.tstop
   26db4:	ldr	x1, [sp, #96]
   26db8:	mov	x26, x3
   26dbc:	mov	x20, x5
   26dc0:	mov	x21, x6
   26dc4:	cbz	x1, 26df8 <PyInit__decimal@@Base+0xabb8>
   26dc8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   26dcc:	ldr	q0, [sp, #288]
   26dd0:	ldr	q1, [x0, #2176]
   26dd4:	ldr	x0, [sp, #304]
   26dd8:	add	v0.2d, v0.2d, v1.2d
   26ddc:	sub	x0, x0, #0x1
   26de0:	str	x0, [sp, #304]
   26de4:	str	q0, [sp, #288]
   26de8:	cbz	x23, 26e04 <PyInit__decimal@@Base+0xabc4>
   26dec:	ldrb	w1, [x1]
   26df0:	strb	w1, [x23, x0]
   26df4:	ldr	x23, [sp, #312]
   26df8:	cbz	x23, 26e04 <PyInit__decimal@@Base+0xabc4>
   26dfc:	ldr	x0, [sp, #288]
   26e00:	strb	wzr, [x23, x0]
   26e04:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   26e08:	mov	x0, x26
   26e0c:	ldr	x1, [x1, #1912]
   26e10:	blr	x1
   26e14:	b	2652c <PyInit__decimal@@Base+0xa2ec>
   26e18:	sub	x23, x23, x24
   26e1c:	add	x0, x19, #0x13
   26e20:	strb	wzr, [sp, #287]
   26e24:	bl	64d0 <strlen@plt>
   26e28:	mov	x22, x0
   26e2c:	mov	x2, #0x1                   	// #1
   26e30:	mul	x24, x0, x23
   26e34:	ldrb	w25, [x19, #17]
   26e38:	ldr	x1, [sp, #288]
   26e3c:	add	x3, sp, #0x11f
   26e40:	ldr	x0, [sp, #312]
   26e44:	add	x1, x1, #0x1
   26e48:	add	x1, x1, x24
   26e4c:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   26e50:	str	x0, [sp, #312]
   26e54:	ldrb	w2, [sp, #287]
   26e58:	mov	x26, x0
   26e5c:	cbnz	w2, 27558 <PyInit__decimal@@Base+0xb318>
   26e60:	cmp	w25, #0x7a
   26e64:	mov	x27, x23
   26e68:	ldr	x20, [sp, #288]
   26e6c:	b.eq	270d4 <PyInit__decimal@@Base+0xae94>  // b.none
   26e70:	cmp	w25, #0x3c
   26e74:	b.eq	26f1c <PyInit__decimal@@Base+0xacdc>  // b.none
   26e78:	sub	w0, w25, #0x3d
   26e7c:	and	w0, w0, #0xff
   26e80:	cmp	w0, #0x1
   26e84:	b.ls	270cc <PyInit__decimal@@Base+0xae8c>  // b.plast
   26e88:	add	x25, x23, x23, lsr #63
   26e8c:	mov	x2, x20
   26e90:	mov	x1, x26
   26e94:	asr	x25, x25, #1
   26e98:	sub	x27, x23, x25
   26e9c:	mul	x3, x22, x25
   26ea0:	add	x0, x26, x3
   26ea4:	add	x20, x20, x3
   26ea8:	bl	6490 <memmove@plt>
   26eac:	cbz	x25, 26f18 <PyInit__decimal@@Base+0xacd8>
   26eb0:	cbz	x22, 26f80 <PyInit__decimal@@Base+0xad40>
   26eb4:	mov	x2, x26
   26eb8:	mov	x3, #0x0                   	// #0
   26ebc:	nop
   26ec0:	ldrb	w0, [x19, #19]
   26ec4:	cmp	x22, #0x1
   26ec8:	strb	w0, [x2]
   26ecc:	b.eq	26f08 <PyInit__decimal@@Base+0xacc8>  // b.none
   26ed0:	ldrb	w0, [x19, #20]
   26ed4:	cmp	x22, #0x2
   26ed8:	strb	w0, [x2, #1]
   26edc:	b.eq	26f08 <PyInit__decimal@@Base+0xacc8>  // b.none
   26ee0:	ldrb	w0, [x19, #21]
   26ee4:	cmp	x22, #0x3
   26ee8:	strb	w0, [x2, #2]
   26eec:	b.eq	26f08 <PyInit__decimal@@Base+0xacc8>  // b.none
   26ef0:	ldrb	w0, [x19, #22]
   26ef4:	cmp	x22, #0x4
   26ef8:	strb	w0, [x2, #3]
   26efc:	b.eq	26f08 <PyInit__decimal@@Base+0xacc8>  // b.none
   26f00:	ldrb	w0, [x19, #23]
   26f04:	strb	w0, [x2, #4]
   26f08:	add	x3, x3, #0x1
   26f0c:	add	x2, x2, x22
   26f10:	cmp	x3, x25
   26f14:	b.cc	26ec0 <PyInit__decimal@@Base+0xac80>  // b.lo, b.ul, b.last
   26f18:	cbz	x27, 26f80 <PyInit__decimal@@Base+0xad40>
   26f1c:	cbz	x22, 26f80 <PyInit__decimal@@Base+0xad40>
   26f20:	add	x1, x26, x20
   26f24:	mov	x0, #0x0                   	// #0
   26f28:	ldrb	w2, [x19, #19]
   26f2c:	cmp	x22, #0x1
   26f30:	strb	w2, [x1]
   26f34:	b.eq	26f70 <PyInit__decimal@@Base+0xad30>  // b.none
   26f38:	ldrb	w2, [x19, #20]
   26f3c:	cmp	x22, #0x2
   26f40:	strb	w2, [x1, #1]
   26f44:	b.eq	26f70 <PyInit__decimal@@Base+0xad30>  // b.none
   26f48:	ldrb	w2, [x19, #21]
   26f4c:	cmp	x22, #0x3
   26f50:	strb	w2, [x1, #2]
   26f54:	b.eq	26f70 <PyInit__decimal@@Base+0xad30>  // b.none
   26f58:	ldrb	w2, [x19, #22]
   26f5c:	cmp	x22, #0x4
   26f60:	strb	w2, [x1, #3]
   26f64:	b.eq	26f70 <PyInit__decimal@@Base+0xad30>  // b.none
   26f68:	ldrb	w2, [x19, #23]
   26f6c:	strb	w2, [x1, #4]
   26f70:	add	x0, x0, #0x1
   26f74:	add	x1, x1, x22
   26f78:	cmp	x0, x27
   26f7c:	b.ne	26f28 <PyInit__decimal@@Base+0xace8>  // b.any
   26f80:	ldp	x0, x1, [sp, #288]
   26f84:	add	x24, x24, x0
   26f88:	add	x23, x1, x23
   26f8c:	ldr	x0, [sp, #312]
   26f90:	stp	x24, x23, [sp, #288]
   26f94:	strb	wzr, [x0, x24]
   26f98:	b	26540 <PyInit__decimal@@Base+0xa300>
   26f9c:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   26fa0:	movk	x0, #0xb6b3, lsl #32
   26fa4:	movk	x0, #0xde0, lsl #48
   26fa8:	cmp	x27, x0
   26fac:	b.gt	27538 <PyInit__decimal@@Base+0xb2f8>
   26fb0:	ldr	x0, [x22, #16]
   26fb4:	cbnz	x27, 270a4 <PyInit__decimal@@Base+0xae64>
   26fb8:	cmp	x0, #0x1
   26fbc:	b.le	26718 <PyInit__decimal@@Base+0xa4d8>
   26fc0:	ldr	x28, [x22, #8]
   26fc4:	mov	x27, #0x1                   	// #1
   26fc8:	add	x0, x0, x28
   26fcc:	sub	x28, x0, #0x1
   26fd0:	mov	x0, x22
   26fd4:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   26fd8:	cbnz	w0, 2767c <PyInit__decimal@@Base+0xb43c>
   26fdc:	mov	x0, x22
   26fe0:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
   26fe4:	cbnz	w0, 2767c <PyInit__decimal@@Base+0xb43c>
   26fe8:	ldr	x3, [sp, #104]
   26fec:	add	x21, sp, #0x140
   26ff0:	add	x24, sp, #0x170
   26ff4:	mov	x1, x22
   26ff8:	mov	x0, x21
   26ffc:	mov	x4, x24
   27000:	mov	x2, x28
   27004:	bl	3ce98 <PyInit__decimal@@Base+0x20c58>
   27008:	ldr	x0, [sp, #336]
   2700c:	mov	x22, x21
   27010:	mov	x26, #0x1                   	// #1
   27014:	cmp	x27, x0
   27018:	b.ge	2668c <PyInit__decimal@@Base+0xa44c>  // b.tcont
   2701c:	ldr	x3, [sp, #104]
   27020:	mov	x4, x24
   27024:	add	x2, x28, x26
   27028:	mov	x1, x21
   2702c:	mov	x0, x21
   27030:	bl	3ce98 <PyInit__decimal@@Base+0x20c58>
   27034:	b	2668c <PyInit__decimal@@Base+0xa44c>
   27038:	ldr	w1, [x3]
   2703c:	mov	x0, #0x0                   	// #0
   27040:	ldp	x29, x30, [sp]
   27044:	orr	w1, w1, #0x100
   27048:	str	w1, [x3]
   2704c:	ldp	x19, x20, [sp, #16]
   27050:	ldp	x21, x22, [sp, #32]
   27054:	ldp	x27, x28, [sp, #80]
   27058:	add	sp, sp, #0x3a0
   2705c:	ret
   27060:	mov	w24, w21
   27064:	mov	x26, #0x1                   	// #1
   27068:	add	x21, sp, #0x140
   2706c:	b	26500 <PyInit__decimal@@Base+0xa2c0>
   27070:	ldr	x0, [x22, #8]
   27074:	mov	w25, w26
   27078:	mov	x26, #0x1                   	// #1
   2707c:	cmp	x0, #0x0
   27080:	b.le	2668c <PyInit__decimal@@Base+0xa44c>
   27084:	ldr	x3, [sp, #104]
   27088:	mov	x1, x22
   2708c:	add	x4, sp, #0x170
   27090:	mov	x0, x21
   27094:	mov	x22, x21
   27098:	mov	x2, #0x0                   	// #0
   2709c:	bl	3cb70 <PyInit__decimal@@Base+0x20930>
   270a0:	b	2668c <PyInit__decimal@@Base+0xa44c>
   270a4:	cmp	x27, x0
   270a8:	b.ge	26718 <PyInit__decimal@@Base+0xa4d8>  // b.tcont
   270ac:	ldr	x28, [x22, #8]
   270b0:	add	x0, x0, x28
   270b4:	sub	x28, x0, x27
   270b8:	b	26fd0 <PyInit__decimal@@Base+0xad90>
   270bc:	mov	x4, x27
   270c0:	mov	x27, x26
   270c4:	str	xzr, [sp, #96]
   270c8:	b	26780 <PyInit__decimal@@Base+0xa540>
   270cc:	cmp	w25, #0x3d
   270d0:	b.ne	270f8 <PyInit__decimal@@Base+0xaeb8>  // b.any
   270d4:	ldrb	w1, [x26]
   270d8:	sub	w0, w1, #0x2b
   270dc:	cmp	w1, #0x20
   270e0:	and	w0, w0, #0xfffffffd
   270e4:	and	w0, w0, #0xff
   270e8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   270ec:	b.ne	270f8 <PyInit__decimal@@Base+0xaeb8>  // b.any
   270f0:	add	x26, x26, #0x1
   270f4:	sub	x20, x20, #0x1
   270f8:	mov	x2, x20
   270fc:	mov	x1, x26
   27100:	add	x0, x26, x24
   27104:	add	x20, x20, x24
   27108:	mov	x25, x23
   2710c:	mov	x27, #0x0                   	// #0
   27110:	bl	6490 <memmove@plt>
   27114:	cbnz	x22, 26eb4 <PyInit__decimal@@Base+0xac74>
   27118:	b	26f80 <PyInit__decimal@@Base+0xad40>
   2711c:	ldp	x7, x5, [sp, #296]
   27120:	cbz	x11, 27148 <PyInit__decimal@@Base+0xaf08>
   27124:	cmp	x2, #0x1
   27128:	add	x23, x23, x11
   2712c:	cset	x0, gt
   27130:	add	x7, x7, #0x1
   27134:	and	x0, x0, x12
   27138:	sub	x5, x5, x11
   2713c:	sub	x2, x2, x0
   27140:	stp	x23, x7, [sp, #288]
   27144:	str	x5, [sp, #304]
   27148:	ldrb	w1, [x10]
   2714c:	cbz	w1, 27160 <PyInit__decimal@@Base+0xaf20>
   27150:	ldrb	w0, [x10, #1]
   27154:	cbz	w0, 27160 <PyInit__decimal@@Base+0xaf20>
   27158:	add	x10, x10, #0x1
   2715c:	mov	w1, w0
   27160:	mov	x0, x2
   27164:	and	x9, x1, #0xff
   27168:	b	26834 <PyInit__decimal@@Base+0xa5f4>
   2716c:	cbz	x23, 26d8c <PyInit__decimal@@Base+0xab4c>
   27170:	subs	x1, x24, #0x1
   27174:	b.mi	26d8c <PyInit__decimal@@Base+0xab4c>  // b.first
   27178:	add	x0, x7, x1
   2717c:	add	x2, x9, x1
   27180:	add	x8, x0, #0x1
   27184:	sub	x12, x2, #0xf
   27188:	add	x8, x27, x8
   2718c:	sub	x0, x0, #0xf
   27190:	add	x12, x23, x12
   27194:	add	x2, x2, #0x1
   27198:	add	x0, x27, x0
   2719c:	cmp	x8, x12
   271a0:	add	x2, x23, x2
   271a4:	ccmp	x0, x2, #0x2, hi  // hi = pmore
   271a8:	ccmp	x1, #0xe, #0x0, cs  // cs = hs, nlast
   271ac:	b.ls	276a4 <PyInit__decimal@@Base+0xb464>  // b.plast
   271b0:	neg	x8, x24, lsr #4
   271b4:	mov	x2, #0x0                   	// #0
   271b8:	lsl	x8, x8, #4
   271bc:	nop
   271c0:	ldr	q0, [x0, x2]
   271c4:	str	q0, [x12, x2]
   271c8:	sub	x2, x2, #0x10
   271cc:	cmp	x2, x8
   271d0:	b.ne	271c0 <PyInit__decimal@@Base+0xaf80>  // b.any
   271d4:	and	x0, x24, #0xfffffffffffffff0
   271d8:	sub	x1, x1, x0
   271dc:	cmp	x24, x0
   271e0:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   271e4:	add	x8, x27, x1
   271e8:	add	x2, x23, x1
   271ec:	subs	x0, x1, #0x1
   271f0:	ldrb	w8, [x8, x7]
   271f4:	strb	w8, [x2, x9]
   271f8:	b.mi	27348 <PyInit__decimal@@Base+0xb108>  // b.first
   271fc:	add	x8, x27, x0
   27200:	add	x0, x23, x0
   27204:	cmp	x1, #0x1
   27208:	sub	x2, x1, #0x2
   2720c:	ldrb	w8, [x8, x7]
   27210:	strb	w8, [x0, x9]
   27214:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27218:	add	x8, x27, x2
   2721c:	add	x2, x23, x2
   27220:	cmp	x1, #0x2
   27224:	sub	x0, x1, #0x3
   27228:	ldrb	w8, [x8, x7]
   2722c:	strb	w8, [x2, x9]
   27230:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27234:	add	x2, x27, x0
   27238:	add	x0, x23, x0
   2723c:	cmp	x1, #0x3
   27240:	sub	x8, x1, #0x4
   27244:	ldrb	w2, [x2, x7]
   27248:	strb	w2, [x0, x9]
   2724c:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27250:	add	x0, x27, x7
   27254:	add	x12, x23, x8
   27258:	cmp	x1, #0x4
   2725c:	sub	x2, x1, #0x5
   27260:	ldrb	w8, [x0, x8]
   27264:	strb	w8, [x12, x9]
   27268:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   2726c:	add	x8, x27, x2
   27270:	add	x2, x23, x2
   27274:	cmp	x1, #0x5
   27278:	sub	x12, x1, #0x6
   2727c:	ldrb	w8, [x8, x7]
   27280:	strb	w8, [x2, x9]
   27284:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27288:	add	x2, x23, x9
   2728c:	ldrb	w13, [x0, x12]
   27290:	cmp	x1, #0x6
   27294:	sub	x8, x1, #0x7
   27298:	strb	w13, [x2, x12]
   2729c:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   272a0:	add	x13, x27, x8
   272a4:	add	x8, x23, x8
   272a8:	cmp	x1, #0x7
   272ac:	sub	x12, x1, #0x8
   272b0:	ldrb	w13, [x13, x7]
   272b4:	strb	w13, [x8, x9]
   272b8:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   272bc:	add	x13, x27, x12
   272c0:	add	x12, x23, x12
   272c4:	cmp	x1, #0x8
   272c8:	sub	x8, x1, #0x9
   272cc:	ldrb	w13, [x13, x7]
   272d0:	strb	w13, [x12, x9]
   272d4:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   272d8:	ldrb	w9, [x0, x8]
   272dc:	cmp	x1, #0x9
   272e0:	strb	w9, [x2, x8]
   272e4:	sub	x8, x1, #0xa
   272e8:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   272ec:	ldrb	w9, [x0, x8]
   272f0:	cmp	x1, #0xa
   272f4:	strb	w9, [x2, x8]
   272f8:	sub	x8, x1, #0xb
   272fc:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27300:	ldrb	w9, [x0, x8]
   27304:	cmp	x1, #0xb
   27308:	strb	w9, [x2, x8]
   2730c:	sub	x8, x1, #0xc
   27310:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27314:	ldrb	w9, [x0, x8]
   27318:	cmp	x1, #0xc
   2731c:	strb	w9, [x2, x8]
   27320:	sub	x8, x1, #0xd
   27324:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   27328:	ldrb	w9, [x0, x8]
   2732c:	cmp	x1, #0xd
   27330:	strb	w9, [x2, x8]
   27334:	sub	x1, x1, #0xe
   27338:	b.eq	27348 <PyInit__decimal@@Base+0xb108>  // b.none
   2733c:	ldrb	w0, [x0, x1]
   27340:	strb	w0, [x2, x1]
   27344:	nop
   27348:	ldr	x23, [sp, #312]
   2734c:	b	26d8c <PyInit__decimal@@Base+0xab4c>
   27350:	mov	x24, x7
   27354:	ldp	x8, x1, [sp, #288]
   27358:	ldr	x9, [sp, #304]
   2735c:	cbz	x25, 27518 <PyInit__decimal@@Base+0xb2d8>
   27360:	cmp	x7, #0x1
   27364:	add	x8, x8, x25
   27368:	add	x1, x1, #0x1
   2736c:	sub	x9, x9, x25
   27370:	cset	x0, gt
   27374:	stp	x8, x1, [sp, #288]
   27378:	and	x0, x0, x22
   2737c:	str	x9, [sp, #304]
   27380:	sub	x24, x7, x0
   27384:	ldr	x2, [x19, #32]
   27388:	cbz	x23, 27518 <PyInit__decimal@@Base+0xb2d8>
   2738c:	add	x0, x25, x9
   27390:	add	x8, x2, x25
   27394:	ldr	x7, [sp, #176]
   27398:	sub	x1, x0, #0x10
   2739c:	add	x1, x23, x1
   273a0:	add	x0, x23, x0
   273a4:	cmp	x8, x1
   273a8:	add	x7, x2, x7
   273ac:	ccmp	x0, x7, #0x0, hi  // hi = pmore
   273b0:	ccmp	x10, #0xe, #0x0, ls  // ls = plast
   273b4:	b.ls	27728 <PyInit__decimal@@Base+0xb4e8>  // b.plast
   273b8:	mov	x0, #0x0                   	// #0
   273bc:	nop
   273c0:	ldr	q0, [x7, x0]
   273c4:	str	q0, [x1, x0]
   273c8:	sub	x0, x0, #0x10
   273cc:	cmp	x20, x0
   273d0:	b.ne	273c0 <PyInit__decimal@@Base+0xb180>  // b.any
   273d4:	cmp	x11, x25
   273d8:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   273dc:	add	x1, x23, x9
   273e0:	ldrb	w0, [x2, x4]
   273e4:	cmn	x21, #0x1
   273e8:	strb	w0, [x1, x4]
   273ec:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   273f0:	ldrb	w0, [x2, x21]
   273f4:	cmn	x26, #0x1
   273f8:	strb	w0, [x1, x21]
   273fc:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27400:	ldrb	w0, [x2, x26]
   27404:	cmn	x15, #0x1
   27408:	strb	w0, [x1, x26]
   2740c:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27410:	ldrb	w0, [x2, x15]
   27414:	ldr	x7, [sp, #184]
   27418:	strb	w0, [x1, x15]
   2741c:	cmn	x7, #0x1
   27420:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27424:	ldrb	w0, [x2, x7]
   27428:	ldr	x8, [sp, #192]
   2742c:	strb	w0, [x1, x7]
   27430:	cmn	x8, #0x1
   27434:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27438:	ldrb	w0, [x2, x8]
   2743c:	strb	w0, [x1, x8]
   27440:	ldr	x8, [sp, #200]
   27444:	cmn	x8, #0x1
   27448:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   2744c:	ldrb	w0, [x2, x8]
   27450:	strb	w0, [x1, x8]
   27454:	ldr	x8, [sp, #216]
   27458:	cmn	x8, #0x1
   2745c:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27460:	ldrb	w0, [x2, x8]
   27464:	strb	w0, [x1, x8]
   27468:	ldr	x8, [sp, #208]
   2746c:	cmn	x8, #0x1
   27470:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27474:	add	x0, x23, x8
   27478:	ldrb	w7, [x2, x8]
   2747c:	ldr	x8, [sp, #224]
   27480:	strb	w7, [x0, x9]
   27484:	cmn	x8, #0x1
   27488:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   2748c:	add	x0, x23, x8
   27490:	ldrb	w7, [x2, x8]
   27494:	ldr	x8, [sp, #240]
   27498:	strb	w7, [x0, x9]
   2749c:	cmn	x8, #0x1
   274a0:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   274a4:	add	x0, x23, x8
   274a8:	ldrb	w7, [x2, x8]
   274ac:	ldr	x8, [sp, #232]
   274b0:	strb	w7, [x0, x9]
   274b4:	cmn	x8, #0x1
   274b8:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   274bc:	add	x0, x23, x8
   274c0:	ldrb	w7, [x2, x8]
   274c4:	ldr	x8, [sp, #264]
   274c8:	strb	w7, [x0, x9]
   274cc:	cmn	x8, #0x1
   274d0:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   274d4:	ldrb	w0, [x2, x8]
   274d8:	strb	w0, [x1, x8]
   274dc:	ldr	x8, [sp, #248]
   274e0:	cmn	x8, #0x1
   274e4:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   274e8:	add	x0, x23, x8
   274ec:	ldrb	w1, [x2, x8]
   274f0:	ldr	x7, [sp, #256]
   274f4:	strb	w1, [x0, x9]
   274f8:	cmn	x7, #0x1
   274fc:	b.eq	27510 <PyInit__decimal@@Base+0xb2d0>  // b.none
   27500:	add	x23, x23, x7
   27504:	ldrb	w0, [x2, x7]
   27508:	strb	w0, [x23, x9]
   2750c:	nop
   27510:	ldp	x8, x1, [sp, #288]
   27514:	ldp	x9, x23, [sp, #304]
   27518:	ldrb	w0, [x28]
   2751c:	cbz	w0, 27530 <PyInit__decimal@@Base+0xb2f0>
   27520:	ldrb	w2, [x28, #1]
   27524:	cbz	w2, 27530 <PyInit__decimal@@Base+0xb2f0>
   27528:	add	x28, x28, #0x1
   2752c:	mov	w0, w2
   27530:	and	x16, x0, #0xff
   27534:	b	26d0c <PyInit__decimal@@Base+0xaacc>
   27538:	add	x21, sp, #0x140
   2753c:	ldr	w0, [x20]
   27540:	orr	w0, w0, #0x100
   27544:	str	w0, [x20]
   27548:	b	266b8 <PyInit__decimal@@Base+0xa478>
   2754c:	sub	x2, x0, x9
   27550:	mov	x0, x9
   27554:	b	2684c <PyInit__decimal@@Base+0xa60c>
   27558:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   2755c:	ldr	w1, [x20]
   27560:	ldr	x2, [x2, #1912]
   27564:	orr	w1, w1, #0x200
   27568:	str	w1, [x20]
   2756c:	blr	x2
   27570:	b	266b8 <PyInit__decimal@@Base+0xa478>
   27574:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   27578:	ldr	w1, [x20]
   2757c:	mov	x0, x26
   27580:	ldr	x2, [x2, #1912]
   27584:	orr	w1, w1, #0x100
   27588:	str	w1, [x20]
   2758c:	blr	x2
   27590:	b	266b8 <PyInit__decimal@@Base+0xa478>
   27594:	sub	x7, x24, x16
   27598:	mov	x24, x16
   2759c:	b	26d24 <PyInit__decimal@@Base+0xaae4>
   275a0:	ldr	x1, [x19, #24]
   275a4:	add	x4, x4, #0x1
   275a8:	str	x1, [sp, #112]
   275ac:	sub	x5, x4, x26
   275b0:	sub	x28, x22, x5
   275b4:	cbz	x1, 276e8 <PyInit__decimal@@Base+0xb4a8>
   275b8:	ldr	x1, [sp, #96]
   275bc:	sub	x22, x5, x22
   275c0:	str	x5, [sp, #120]
   275c4:	cmp	x1, #0x0
   275c8:	str	x4, [sp, #136]
   275cc:	cset	x1, ne  // ne = any
   275d0:	str	x1, [sp, #104]
   275d4:	str	xzr, [sp, #312]
   275d8:	bl	64d0 <strlen@plt>
   275dc:	mov	x11, x0
   275e0:	ldp	x0, x5, [sp, #112]
   275e4:	dup	v0.2d, x28
   275e8:	str	x11, [sp, #128]
   275ec:	str	x5, [sp, #304]
   275f0:	str	q0, [sp, #288]
   275f4:	bl	64d0 <strlen@plt>
   275f8:	ldp	x5, x11, [sp, #120]
   275fc:	cmp	x0, #0x0
   27600:	add	x23, x28, x0
   27604:	cinc	x7, x28, ne  // ne = any
   27608:	stp	x23, x7, [sp, #288]
   2760c:	ldr	x10, [x19, #40]
   27610:	sub	x5, x5, x0
   27614:	str	x5, [sp, #304]
   27618:	ldr	x4, [sp, #136]
   2761c:	b	26820 <PyInit__decimal@@Base+0xa5e0>
   27620:	ldrb	w1, [x10]
   27624:	mov	w12, #0x1                   	// #1
   27628:	ldr	x5, [sp, #304]
   2762c:	and	x9, x1, #0xff
   27630:	sub	x9, x9, x0
   27634:	sub	x0, x3, x2
   27638:	b	26834 <PyInit__decimal@@Base+0xa5f4>
   2763c:	ldrb	w0, [x28]
   27640:	mov	w22, #0x1                   	// #1
   27644:	ldr	x8, [sp, #288]
   27648:	and	x16, x0, #0xff
   2764c:	sub	x16, x16, x24
   27650:	sub	x24, x7, x2
   27654:	ldr	x9, [sp, #304]
   27658:	b	26d0c <PyInit__decimal@@Base+0xaacc>
   2765c:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   27660:	ldr	w1, [x20]
   27664:	mov	x0, x26
   27668:	ldr	x2, [x2, #1912]
   2766c:	orr	w1, w1, #0x200
   27670:	str	w1, [x20]
   27674:	blr	x2
   27678:	b	266b8 <PyInit__decimal@@Base+0xa478>
   2767c:	add	x21, sp, #0x140
   27680:	mov	x1, x22
   27684:	mov	x0, x21
   27688:	add	x2, sp, #0x170
   2768c:	mov	x22, x21
   27690:	mov	x26, #0x1                   	// #1
   27694:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   27698:	b	2668c <PyInit__decimal@@Base+0xa44c>
   2769c:	mov	x24, #0x1                   	// #1
   276a0:	b	267ac <PyInit__decimal@@Base+0xa56c>
   276a4:	add	x2, x23, x9
   276a8:	add	x0, x27, x7
   276ac:	nop
   276b0:	ldrb	w8, [x0, x1]
   276b4:	strb	w8, [x2, x1]
   276b8:	sub	x1, x1, #0x1
   276bc:	cmn	x1, #0x1
   276c0:	b.ne	276b0 <PyInit__decimal@@Base+0xb470>  // b.any
   276c4:	ldr	x23, [sp, #312]
   276c8:	b	26d8c <PyInit__decimal@@Base+0xab4c>
   276cc:	add	x22, x23, x22
   276d0:	ldrb	w0, [x4, x5]
   276d4:	strb	w0, [x22, x5]
   276d8:	sub	x5, x5, #0x1
   276dc:	cmn	x5, #0x1
   276e0:	b.ne	276d0 <PyInit__decimal@@Base+0xb490>  // b.any
   276e4:	b	26a78 <PyInit__decimal@@Base+0xa838>
   276e8:	mov	x23, x28
   276ec:	b	267c4 <PyInit__decimal@@Base+0xa584>
   276f0:	ldr	x0, [sp, #112]
   276f4:	mov	x1, x28
   276f8:	cbz	x0, 26c50 <PyInit__decimal@@Base+0xaa10>
   276fc:	str	x7, [sp, #120]
   27700:	bl	64d0 <strlen@plt>
   27704:	add	x4, x0, x28
   27708:	cmp	x0, #0x0
   2770c:	cinc	x1, x28, ne  // ne = any
   27710:	sub	x22, x22, x0
   27714:	mov	x28, x4
   27718:	stp	x4, x1, [sp, #288]
   2771c:	str	x22, [sp, #304]
   27720:	ldr	x7, [sp, #120]
   27724:	b	26ab0 <PyInit__decimal@@Base+0xa870>
   27728:	add	x1, x23, x9
   2772c:	mov	x0, x10
   27730:	ldrb	w7, [x2, x0]
   27734:	strb	w7, [x1, x0]
   27738:	sub	x0, x0, #0x1
   2773c:	cmn	x0, #0x1
   27740:	b.ne	27730 <PyInit__decimal@@Base+0xb4f0>  // b.any
   27744:	b	27510 <PyInit__decimal@@Base+0xb2d0>
   27748:	add	x22, x23, x22
   2774c:	mov	x1, x3
   27750:	ldrb	w0, [x1, x8]
   27754:	strb	w0, [x22, x8]
   27758:	sub	x8, x8, #0x1
   2775c:	cmn	x8, #0x1
   27760:	b.ne	27750 <PyInit__decimal@@Base+0xb510>  // b.any
   27764:	b	26c48 <PyInit__decimal@@Base+0xaa08>
   27768:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   2776c:	movk	x1, #0xb6b3, lsl #32
   27770:	movk	x1, #0xde0, lsl #48
   27774:	cmp	x0, x1
   27778:	b.gt	27538 <PyInit__decimal@@Base+0xb2f8>
   2777c:	mov	x0, x22
   27780:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
   27784:	cbz	w0, 277a0 <PyInit__decimal@@Base+0xb560>
   27788:	ldr	x0, [x19, #8]
   2778c:	mov	x26, #0x1                   	// #1
   27790:	ldr	w25, [sp, #96]
   27794:	add	x21, sp, #0x140
   27798:	sub	x26, x26, x0
   2779c:	b	2668c <PyInit__decimal@@Base+0xa44c>
   277a0:	ldr	x25, [x19, #8]
   277a4:	add	x25, x25, #0x1
   277a8:	cmp	x25, #0x0
   277ac:	b.le	27820 <PyInit__decimal@@Base+0xb5e0>
   277b0:	mov	x0, x22
   277b4:	ldp	x21, x26, [x22, #8]
   277b8:	bl	2a8c8 <PyInit__decimal@@Base+0xe688>
   277bc:	cbnz	w0, 27810 <PyInit__decimal@@Base+0xb5d0>
   277c0:	mov	x0, x22
   277c4:	bl	2a8d8 <PyInit__decimal@@Base+0xe698>
   277c8:	cbnz	w0, 27810 <PyInit__decimal@@Base+0xb5d0>
   277cc:	ldr	x3, [sp, #104]
   277d0:	add	x21, x21, x26
   277d4:	sub	x26, x21, x25
   277d8:	add	x27, sp, #0x170
   277dc:	add	x21, sp, #0x140
   277e0:	mov	x1, x22
   277e4:	mov	x0, x21
   277e8:	mov	x2, x26
   277ec:	mov	x4, x27
   277f0:	bl	3ce98 <PyInit__decimal@@Base+0x20c58>
   277f4:	ldr	x0, [sp, #336]
   277f8:	cmp	x25, x0
   277fc:	b.lt	27844 <PyInit__decimal@@Base+0xb604>  // b.tstop
   27800:	ldr	w25, [sp, #96]
   27804:	mov	x22, x21
   27808:	mov	x26, #0x1                   	// #1
   2780c:	b	2668c <PyInit__decimal@@Base+0xa44c>
   27810:	ldr	w25, [sp, #96]
   27814:	add	x21, sp, #0x140
   27818:	mov	x1, x22
   2781c:	b	27684 <PyInit__decimal@@Base+0xb444>
   27820:	add	x21, sp, #0x140
   27824:	ldr	w25, [sp, #96]
   27828:	mov	x0, x21
   2782c:	add	x2, sp, #0x170
   27830:	mov	x22, x21
   27834:	mov	w1, #0x100                 	// #256
   27838:	mov	x26, #0x1                   	// #1
   2783c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   27840:	b	2668c <PyInit__decimal@@Base+0xa44c>
   27844:	ldr	x3, [sp, #104]
   27848:	add	x2, x26, #0x1
   2784c:	ldr	w25, [sp, #96]
   27850:	mov	x4, x27
   27854:	mov	x1, x21
   27858:	mov	x0, x21
   2785c:	mov	x22, x21
   27860:	mov	x26, #0x1                   	// #1
   27864:	bl	3ce98 <PyInit__decimal@@Base+0x20c58>
   27868:	b	2668c <PyInit__decimal@@Base+0xa44c>
   2786c:	bl	67c0 <abort@plt>
   27870:	stp	x29, x30, [sp, #-96]!
   27874:	mov	x29, sp
   27878:	stp	x21, x22, [sp, #32]
   2787c:	add	x22, sp, #0x30
   27880:	mov	x21, x2
   27884:	mov	w2, #0x1                   	// #1
   27888:	stp	x19, x20, [sp, #16]
   2788c:	mov	x20, x0
   27890:	mov	x19, x3
   27894:	mov	x0, x22
   27898:	bl	25ef0 <PyInit__decimal@@Base+0x9cb0>
   2789c:	cbz	w0, 278c4 <PyInit__decimal@@Base+0xb684>
   278a0:	mov	x3, x19
   278a4:	mov	x2, x21
   278a8:	mov	x1, x22
   278ac:	mov	x0, x20
   278b0:	bl	263a0 <PyInit__decimal@@Base+0xa160>
   278b4:	ldp	x19, x20, [sp, #16]
   278b8:	ldp	x21, x22, [sp, #32]
   278bc:	ldp	x29, x30, [sp], #96
   278c0:	ret
   278c4:	ldr	w1, [x19]
   278c8:	mov	x0, #0x0                   	// #0
   278cc:	ldp	x21, x22, [sp, #32]
   278d0:	orr	w1, w1, #0x100
   278d4:	str	w1, [x19]
   278d8:	ldp	x19, x20, [sp, #16]
   278dc:	ldp	x29, x30, [sp], #96
   278e0:	ret
   278e4:	nop
   278e8:	stp	x29, x30, [sp, #-48]!
   278ec:	mov	x29, sp
   278f0:	stp	x19, x20, [sp, #16]
   278f4:	mov	w19, w1
   278f8:	mov	x20, x0
   278fc:	stp	x21, x22, [sp, #32]
   27900:	mov	x22, x0
   27904:	mov	w21, w2
   27908:	strb	wzr, [x0]
   2790c:	tbnz	w21, #0, 2796c <PyInit__decimal@@Base+0xb72c>
   27910:	tbnz	w21, #1, 2799c <PyInit__decimal@@Base+0xb75c>
   27914:	tbnz	w21, #2, 279d0 <PyInit__decimal@@Base+0xb790>
   27918:	tbnz	w21, #3, 27a04 <PyInit__decimal@@Base+0xb7c4>
   2791c:	tbnz	w21, #4, 27a38 <PyInit__decimal@@Base+0xb7f8>
   27920:	tbnz	w21, #5, 27a6c <PyInit__decimal@@Base+0xb82c>
   27924:	tbnz	w21, #6, 27aa0 <PyInit__decimal@@Base+0xb860>
   27928:	tbnz	w21, #7, 27ad4 <PyInit__decimal@@Base+0xb894>
   2792c:	tbnz	w21, #8, 27b08 <PyInit__decimal@@Base+0xb8c8>
   27930:	tbnz	w21, #9, 27b3c <PyInit__decimal@@Base+0xb8fc>
   27934:	tbnz	w21, #10, 27b70 <PyInit__decimal@@Base+0xb930>
   27938:	tbnz	w21, #11, 27ba4 <PyInit__decimal@@Base+0xb964>
   2793c:	tbnz	w21, #12, 27bd8 <PyInit__decimal@@Base+0xb998>
   27940:	tbnz	w21, #13, 27c0c <PyInit__decimal@@Base+0xb9cc>
   27944:	tbnz	w21, #14, 27c40 <PyInit__decimal@@Base+0xba00>
   27948:	cmp	x20, x22
   2794c:	mov	w0, #0x0                   	// #0
   27950:	b.eq	2795c <PyInit__decimal@@Base+0xb71c>  // b.none
   27954:	strb	wzr, [x20, #-1]!
   27958:	sub	w0, w20, w22
   2795c:	ldp	x19, x20, [sp, #16]
   27960:	ldp	x21, x22, [sp, #32]
   27964:	ldp	x29, x30, [sp], #48
   27968:	ret
   2796c:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   27970:	sxtw	x1, w1
   27974:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27978:	add	x2, x2, #0x5c0
   2797c:	ldr	x3, [x3, #1632]
   27980:	bl	6610 <snprintf@plt>
   27984:	cmp	w0, #0x0
   27988:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   2798c:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27990:	sub	w19, w19, w0
   27994:	add	x20, x22, w0, sxtw
   27998:	tbz	w21, #1, 27914 <PyInit__decimal@@Base+0xb6d4>
   2799c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   279a0:	sxtw	x1, w19
   279a4:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   279a8:	add	x2, x2, #0x5c0
   279ac:	ldr	x3, [x0, #1640]
   279b0:	mov	x0, x20
   279b4:	bl	6610 <snprintf@plt>
   279b8:	cmp	w0, #0x0
   279bc:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   279c0:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   279c4:	add	x20, x20, w0, sxtw
   279c8:	sub	w19, w19, w0
   279cc:	tbz	w21, #2, 27918 <PyInit__decimal@@Base+0xb6d8>
   279d0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   279d4:	sxtw	x1, w19
   279d8:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   279dc:	add	x2, x2, #0x5c0
   279e0:	ldr	x3, [x0, #1648]
   279e4:	mov	x0, x20
   279e8:	bl	6610 <snprintf@plt>
   279ec:	cmp	w0, #0x0
   279f0:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   279f4:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   279f8:	add	x20, x20, w0, sxtw
   279fc:	sub	w19, w19, w0
   27a00:	tbz	w21, #3, 2791c <PyInit__decimal@@Base+0xb6dc>
   27a04:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27a08:	sxtw	x1, w19
   27a0c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27a10:	add	x2, x2, #0x5c0
   27a14:	ldr	x3, [x0, #1656]
   27a18:	mov	x0, x20
   27a1c:	bl	6610 <snprintf@plt>
   27a20:	cmp	w0, #0x0
   27a24:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27a28:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27a2c:	add	x20, x20, w0, sxtw
   27a30:	sub	w19, w19, w0
   27a34:	tbz	w21, #4, 27920 <PyInit__decimal@@Base+0xb6e0>
   27a38:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27a3c:	sxtw	x1, w19
   27a40:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27a44:	add	x2, x2, #0x5c0
   27a48:	ldr	x3, [x0, #1664]
   27a4c:	mov	x0, x20
   27a50:	bl	6610 <snprintf@plt>
   27a54:	cmp	w0, #0x0
   27a58:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27a5c:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27a60:	add	x20, x20, w0, sxtw
   27a64:	sub	w19, w19, w0
   27a68:	tbz	w21, #5, 27924 <PyInit__decimal@@Base+0xb6e4>
   27a6c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27a70:	sxtw	x1, w19
   27a74:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27a78:	add	x2, x2, #0x5c0
   27a7c:	ldr	x3, [x0, #1672]
   27a80:	mov	x0, x20
   27a84:	bl	6610 <snprintf@plt>
   27a88:	cmp	w0, #0x0
   27a8c:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27a90:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27a94:	add	x20, x20, w0, sxtw
   27a98:	sub	w19, w19, w0
   27a9c:	tbz	w21, #6, 27928 <PyInit__decimal@@Base+0xb6e8>
   27aa0:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27aa4:	sxtw	x1, w19
   27aa8:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27aac:	add	x2, x2, #0x5c0
   27ab0:	ldr	x3, [x0, #1680]
   27ab4:	mov	x0, x20
   27ab8:	bl	6610 <snprintf@plt>
   27abc:	cmp	w0, #0x0
   27ac0:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27ac4:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27ac8:	add	x20, x20, w0, sxtw
   27acc:	sub	w19, w19, w0
   27ad0:	tbz	w21, #7, 2792c <PyInit__decimal@@Base+0xb6ec>
   27ad4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27ad8:	sxtw	x1, w19
   27adc:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27ae0:	add	x2, x2, #0x5c0
   27ae4:	ldr	x3, [x0, #1688]
   27ae8:	mov	x0, x20
   27aec:	bl	6610 <snprintf@plt>
   27af0:	cmp	w0, #0x0
   27af4:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27af8:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27afc:	add	x20, x20, w0, sxtw
   27b00:	sub	w19, w19, w0
   27b04:	tbz	w21, #8, 27930 <PyInit__decimal@@Base+0xb6f0>
   27b08:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27b0c:	sxtw	x1, w19
   27b10:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27b14:	add	x2, x2, #0x5c0
   27b18:	ldr	x3, [x0, #1696]
   27b1c:	mov	x0, x20
   27b20:	bl	6610 <snprintf@plt>
   27b24:	cmp	w0, #0x0
   27b28:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27b2c:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27b30:	add	x20, x20, w0, sxtw
   27b34:	sub	w19, w19, w0
   27b38:	tbz	w21, #9, 27934 <PyInit__decimal@@Base+0xb6f4>
   27b3c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27b40:	sxtw	x1, w19
   27b44:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27b48:	add	x2, x2, #0x5c0
   27b4c:	ldr	x3, [x0, #1704]
   27b50:	mov	x0, x20
   27b54:	bl	6610 <snprintf@plt>
   27b58:	cmp	w0, #0x0
   27b5c:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27b60:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27b64:	add	x20, x20, w0, sxtw
   27b68:	sub	w19, w19, w0
   27b6c:	tbz	w21, #10, 27938 <PyInit__decimal@@Base+0xb6f8>
   27b70:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27b74:	sxtw	x1, w19
   27b78:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27b7c:	add	x2, x2, #0x5c0
   27b80:	ldr	x3, [x0, #1712]
   27b84:	mov	x0, x20
   27b88:	bl	6610 <snprintf@plt>
   27b8c:	cmp	w0, #0x0
   27b90:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27b94:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27b98:	add	x20, x20, w0, sxtw
   27b9c:	sub	w19, w19, w0
   27ba0:	tbz	w21, #11, 2793c <PyInit__decimal@@Base+0xb6fc>
   27ba4:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27ba8:	sxtw	x1, w19
   27bac:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27bb0:	add	x2, x2, #0x5c0
   27bb4:	ldr	x3, [x0, #1720]
   27bb8:	mov	x0, x20
   27bbc:	bl	6610 <snprintf@plt>
   27bc0:	cmp	w0, #0x0
   27bc4:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27bc8:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27bcc:	add	x20, x20, w0, sxtw
   27bd0:	sub	w19, w19, w0
   27bd4:	tbz	w21, #12, 27940 <PyInit__decimal@@Base+0xb700>
   27bd8:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27bdc:	sxtw	x1, w19
   27be0:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27be4:	add	x2, x2, #0x5c0
   27be8:	ldr	x3, [x0, #1728]
   27bec:	mov	x0, x20
   27bf0:	bl	6610 <snprintf@plt>
   27bf4:	cmp	w0, #0x0
   27bf8:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27bfc:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27c00:	add	x20, x20, w0, sxtw
   27c04:	sub	w19, w19, w0
   27c08:	tbz	w21, #13, 27944 <PyInit__decimal@@Base+0xb704>
   27c0c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27c10:	sxtw	x1, w19
   27c14:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27c18:	add	x2, x2, #0x5c0
   27c1c:	ldr	x3, [x0, #1736]
   27c20:	mov	x0, x20
   27c24:	bl	6610 <snprintf@plt>
   27c28:	cmp	w0, #0x0
   27c2c:	ccmp	w19, w0, #0x4, ge  // ge = tcont
   27c30:	b.le	27c70 <PyInit__decimal@@Base+0xba30>
   27c34:	add	x20, x20, w0, sxtw
   27c38:	sub	w19, w19, w0
   27c3c:	tbz	w21, #14, 27948 <PyInit__decimal@@Base+0xb708>
   27c40:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   27c44:	sxtw	x1, w19
   27c48:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27c4c:	add	x2, x2, #0x5c0
   27c50:	ldr	x3, [x0, #1744]
   27c54:	mov	x0, x20
   27c58:	bl	6610 <snprintf@plt>
   27c5c:	cmp	w0, #0x0
   27c60:	ccmp	w0, w19, #0x0, ge  // ge = tcont
   27c64:	b.ge	27c70 <PyInit__decimal@@Base+0xba30>  // b.tcont
   27c68:	add	x20, x20, w0, sxtw
   27c6c:	b	27948 <PyInit__decimal@@Base+0xb708>
   27c70:	mov	w0, #0xffffffff            	// #-1
   27c74:	ldp	x19, x20, [sp, #16]
   27c78:	ldp	x21, x22, [sp, #32]
   27c7c:	ldp	x29, x30, [sp], #48
   27c80:	ret
   27c84:	nop
   27c88:	stp	x29, x30, [sp, #-64]!
   27c8c:	cmp	x3, #0x0
   27c90:	adrp	x4, 65000 <PyInit__decimal@@Base+0x48dc0>
   27c94:	mov	x29, sp
   27c98:	stp	x23, x24, [sp, #48]
   27c9c:	mov	x23, x0
   27ca0:	add	x4, x4, #0x660
   27ca4:	stp	x19, x20, [sp, #16]
   27ca8:	csel	x24, x4, x3, eq  // eq = none
   27cac:	sub	w20, w1, #0x1
   27cb0:	stp	x21, x22, [sp, #32]
   27cb4:	mov	x22, x0
   27cb8:	mov	w0, #0x5b                  	// #91
   27cbc:	strh	w0, [x23], #1
   27cc0:	mov	w21, w2
   27cc4:	mov	x19, x23
   27cc8:	tbnz	w21, #0, 27d30 <PyInit__decimal@@Base+0xbaf0>
   27ccc:	tbnz	w21, #1, 27d60 <PyInit__decimal@@Base+0xbb20>
   27cd0:	tbnz	w21, #2, 27d90 <PyInit__decimal@@Base+0xbb50>
   27cd4:	tbnz	w21, #3, 27dc0 <PyInit__decimal@@Base+0xbb80>
   27cd8:	tbnz	w21, #4, 27df0 <PyInit__decimal@@Base+0xbbb0>
   27cdc:	tbnz	w21, #5, 27e20 <PyInit__decimal@@Base+0xbbe0>
   27ce0:	tbnz	w21, #6, 27e50 <PyInit__decimal@@Base+0xbc10>
   27ce4:	tbnz	w21, #7, 27e80 <PyInit__decimal@@Base+0xbc40>
   27ce8:	tbnz	w21, #8, 27eb0 <PyInit__decimal@@Base+0xbc70>
   27cec:	tbnz	w21, #9, 27ee0 <PyInit__decimal@@Base+0xbca0>
   27cf0:	tbnz	w21, #10, 27f10 <PyInit__decimal@@Base+0xbcd0>
   27cf4:	tbnz	w21, #11, 27f40 <PyInit__decimal@@Base+0xbd00>
   27cf8:	tbnz	w21, #12, 27f70 <PyInit__decimal@@Base+0xbd30>
   27cfc:	tbnz	w21, #13, 27fa0 <PyInit__decimal@@Base+0xbd60>
   27d00:	tbnz	w21, #14, 27fd0 <PyInit__decimal@@Base+0xbd90>
   27d04:	cmp	x19, x23
   27d08:	sub	x19, x19, #0x2
   27d0c:	csel	x19, x19, x23, ne  // ne = any
   27d10:	mov	w0, #0x5d                  	// #93
   27d14:	strh	w0, [x19], #1
   27d18:	sub	w0, w19, w22
   27d1c:	ldp	x19, x20, [sp, #16]
   27d20:	ldp	x21, x22, [sp, #32]
   27d24:	ldp	x23, x24, [sp, #48]
   27d28:	ldp	x29, x30, [sp], #64
   27d2c:	ret
   27d30:	ldr	x3, [x24]
   27d34:	sxtw	x1, w20
   27d38:	mov	x0, x23
   27d3c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27d40:	add	x2, x2, #0x5c8
   27d44:	bl	6610 <snprintf@plt>
   27d48:	cmp	w0, #0x0
   27d4c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27d50:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27d54:	sub	w20, w20, w0
   27d58:	add	x19, x23, w0, sxtw
   27d5c:	tbz	w21, #1, 27cd0 <PyInit__decimal@@Base+0xba90>
   27d60:	ldr	x3, [x24, #8]
   27d64:	sxtw	x1, w20
   27d68:	mov	x0, x19
   27d6c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27d70:	add	x2, x2, #0x5c8
   27d74:	bl	6610 <snprintf@plt>
   27d78:	cmp	w0, #0x0
   27d7c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27d80:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27d84:	add	x19, x19, w0, sxtw
   27d88:	sub	w20, w20, w0
   27d8c:	tbz	w21, #2, 27cd4 <PyInit__decimal@@Base+0xba94>
   27d90:	ldr	x3, [x24, #16]
   27d94:	sxtw	x1, w20
   27d98:	mov	x0, x19
   27d9c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27da0:	add	x2, x2, #0x5c8
   27da4:	bl	6610 <snprintf@plt>
   27da8:	cmp	w0, #0x0
   27dac:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27db0:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27db4:	add	x19, x19, w0, sxtw
   27db8:	sub	w20, w20, w0
   27dbc:	tbz	w21, #3, 27cd8 <PyInit__decimal@@Base+0xba98>
   27dc0:	ldr	x3, [x24, #24]
   27dc4:	sxtw	x1, w20
   27dc8:	mov	x0, x19
   27dcc:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27dd0:	add	x2, x2, #0x5c8
   27dd4:	bl	6610 <snprintf@plt>
   27dd8:	cmp	w0, #0x0
   27ddc:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27de0:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27de4:	add	x19, x19, w0, sxtw
   27de8:	sub	w20, w20, w0
   27dec:	tbz	w21, #4, 27cdc <PyInit__decimal@@Base+0xba9c>
   27df0:	ldr	x3, [x24, #32]
   27df4:	sxtw	x1, w20
   27df8:	mov	x0, x19
   27dfc:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27e00:	add	x2, x2, #0x5c8
   27e04:	bl	6610 <snprintf@plt>
   27e08:	cmp	w0, #0x0
   27e0c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27e10:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27e14:	add	x19, x19, w0, sxtw
   27e18:	sub	w20, w20, w0
   27e1c:	tbz	w21, #5, 27ce0 <PyInit__decimal@@Base+0xbaa0>
   27e20:	ldr	x3, [x24, #40]
   27e24:	sxtw	x1, w20
   27e28:	mov	x0, x19
   27e2c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27e30:	add	x2, x2, #0x5c8
   27e34:	bl	6610 <snprintf@plt>
   27e38:	cmp	w0, #0x0
   27e3c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27e40:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27e44:	add	x19, x19, w0, sxtw
   27e48:	sub	w20, w20, w0
   27e4c:	tbz	w21, #6, 27ce4 <PyInit__decimal@@Base+0xbaa4>
   27e50:	ldr	x3, [x24, #48]
   27e54:	sxtw	x1, w20
   27e58:	mov	x0, x19
   27e5c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27e60:	add	x2, x2, #0x5c8
   27e64:	bl	6610 <snprintf@plt>
   27e68:	cmp	w0, #0x0
   27e6c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27e70:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27e74:	add	x19, x19, w0, sxtw
   27e78:	sub	w20, w20, w0
   27e7c:	tbz	w21, #7, 27ce8 <PyInit__decimal@@Base+0xbaa8>
   27e80:	ldr	x3, [x24, #56]
   27e84:	sxtw	x1, w20
   27e88:	mov	x0, x19
   27e8c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27e90:	add	x2, x2, #0x5c8
   27e94:	bl	6610 <snprintf@plt>
   27e98:	cmp	w0, #0x0
   27e9c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27ea0:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27ea4:	add	x19, x19, w0, sxtw
   27ea8:	sub	w20, w20, w0
   27eac:	tbz	w21, #8, 27cec <PyInit__decimal@@Base+0xbaac>
   27eb0:	ldr	x3, [x24, #64]
   27eb4:	sxtw	x1, w20
   27eb8:	mov	x0, x19
   27ebc:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27ec0:	add	x2, x2, #0x5c8
   27ec4:	bl	6610 <snprintf@plt>
   27ec8:	cmp	w0, #0x0
   27ecc:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27ed0:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27ed4:	add	x19, x19, w0, sxtw
   27ed8:	sub	w20, w20, w0
   27edc:	tbz	w21, #9, 27cf0 <PyInit__decimal@@Base+0xbab0>
   27ee0:	ldr	x3, [x24, #72]
   27ee4:	sxtw	x1, w20
   27ee8:	mov	x0, x19
   27eec:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27ef0:	add	x2, x2, #0x5c8
   27ef4:	bl	6610 <snprintf@plt>
   27ef8:	cmp	w0, #0x0
   27efc:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27f00:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27f04:	add	x19, x19, w0, sxtw
   27f08:	sub	w20, w20, w0
   27f0c:	tbz	w21, #10, 27cf4 <PyInit__decimal@@Base+0xbab4>
   27f10:	ldr	x3, [x24, #80]
   27f14:	sxtw	x1, w20
   27f18:	mov	x0, x19
   27f1c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27f20:	add	x2, x2, #0x5c8
   27f24:	bl	6610 <snprintf@plt>
   27f28:	cmp	w0, #0x0
   27f2c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27f30:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27f34:	add	x19, x19, w0, sxtw
   27f38:	sub	w20, w20, w0
   27f3c:	tbz	w21, #11, 27cf8 <PyInit__decimal@@Base+0xbab8>
   27f40:	ldr	x3, [x24, #88]
   27f44:	sxtw	x1, w20
   27f48:	mov	x0, x19
   27f4c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27f50:	add	x2, x2, #0x5c8
   27f54:	bl	6610 <snprintf@plt>
   27f58:	cmp	w0, #0x0
   27f5c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27f60:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27f64:	add	x19, x19, w0, sxtw
   27f68:	sub	w20, w20, w0
   27f6c:	tbz	w21, #12, 27cfc <PyInit__decimal@@Base+0xbabc>
   27f70:	ldr	x3, [x24, #96]
   27f74:	sxtw	x1, w20
   27f78:	mov	x0, x19
   27f7c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27f80:	add	x2, x2, #0x5c8
   27f84:	bl	6610 <snprintf@plt>
   27f88:	cmp	w0, #0x0
   27f8c:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27f90:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27f94:	add	x19, x19, w0, sxtw
   27f98:	sub	w20, w20, w0
   27f9c:	tbz	w21, #13, 27d00 <PyInit__decimal@@Base+0xbac0>
   27fa0:	ldr	x3, [x24, #104]
   27fa4:	sxtw	x1, w20
   27fa8:	mov	x0, x19
   27fac:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27fb0:	add	x2, x2, #0x5c8
   27fb4:	bl	6610 <snprintf@plt>
   27fb8:	cmp	w0, #0x0
   27fbc:	ccmp	w20, w0, #0x4, ge  // ge = tcont
   27fc0:	b.le	27ff8 <PyInit__decimal@@Base+0xbdb8>
   27fc4:	add	x19, x19, w0, sxtw
   27fc8:	sub	w20, w20, w0
   27fcc:	tbz	w21, #14, 27d04 <PyInit__decimal@@Base+0xbac4>
   27fd0:	ldr	x3, [x24, #112]
   27fd4:	mov	x0, x19
   27fd8:	sxtw	x1, w20
   27fdc:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   27fe0:	add	x2, x2, #0x5c8
   27fe4:	bl	6610 <snprintf@plt>
   27fe8:	cmp	w0, #0x0
   27fec:	ccmp	w0, w20, #0x0, ge  // ge = tcont
   27ff0:	add	x19, x19, w0, sxtw
   27ff4:	b.lt	27d04 <PyInit__decimal@@Base+0xbac4>  // b.tstop
   27ff8:	mov	w0, #0xffffffff            	// #-1
   27ffc:	ldp	x19, x20, [sp, #16]
   28000:	ldp	x21, x22, [sp, #32]
   28004:	ldp	x23, x24, [sp, #48]
   28008:	ldp	x29, x30, [sp], #64
   2800c:	ret
   28010:	stp	x29, x30, [sp, #-112]!
   28014:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   28018:	mov	x29, sp
   2801c:	stp	x23, x24, [sp, #48]
   28020:	mov	x23, x0
   28024:	add	x24, x5, #0x5c8
   28028:	stp	x19, x20, [sp, #16]
   2802c:	mov	x20, x3
   28030:	mov	w3, #0x5b                  	// #91
   28034:	stp	x21, x22, [sp, #32]
   28038:	cmp	x20, #0x0
   2803c:	mov	x19, #0x0                   	// #0
   28040:	stp	x25, x26, [sp, #64]
   28044:	mov	w25, w2
   28048:	mov	w21, #0x0                   	// #0
   2804c:	stp	x27, x28, [sp, #80]
   28050:	sub	w27, w1, #0x1
   28054:	mov	w28, #0x1                   	// #1
   28058:	strh	w3, [x23], #1
   2805c:	mov	w22, #0x3ba                 	// #954
   28060:	str	x0, [sp, #104]
   28064:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   28068:	add	x0, x0, #0x660
   2806c:	mov	x26, x23
   28070:	add	x0, x0, #0x80
   28074:	csel	x20, x0, x20, eq  // eq = none
   28078:	lsl	w4, w28, w19
   2807c:	ands	w4, w4, w25
   28080:	b.eq	280bc <PyInit__decimal@@Base+0xbe7c>  // b.none
   28084:	sxtw	x1, w27
   28088:	mov	x0, x26
   2808c:	mov	x2, x24
   28090:	tst	w4, w22
   28094:	b.eq	280a0 <PyInit__decimal@@Base+0xbe60>  // b.none
   28098:	cbnz	w21, 280bc <PyInit__decimal@@Base+0xbe7c>
   2809c:	mov	w21, #0x1                   	// #1
   280a0:	ldr	x3, [x20, x19, lsl #3]
   280a4:	bl	6610 <snprintf@plt>
   280a8:	cmp	w0, #0x0
   280ac:	ccmp	w0, w27, #0x0, ge  // ge = tcont
   280b0:	add	x26, x26, w0, sxtw
   280b4:	sub	w27, w27, w0
   280b8:	b.ge	28100 <PyInit__decimal@@Base+0xbec0>  // b.tcont
   280bc:	add	x19, x19, #0x1
   280c0:	cmp	x19, #0xf
   280c4:	b.ne	28078 <PyInit__decimal@@Base+0xbe38>  // b.any
   280c8:	cmp	x26, x23
   280cc:	sub	x26, x26, #0x2
   280d0:	csel	x23, x26, x23, ne  // ne = any
   280d4:	mov	w0, #0x5d                  	// #93
   280d8:	strh	w0, [x23], #1
   280dc:	ldr	w0, [sp, #104]
   280e0:	ldp	x19, x20, [sp, #16]
   280e4:	sub	w0, w23, w0
   280e8:	ldp	x21, x22, [sp, #32]
   280ec:	ldp	x23, x24, [sp, #48]
   280f0:	ldp	x25, x26, [sp, #64]
   280f4:	ldp	x27, x28, [sp, #80]
   280f8:	ldp	x29, x30, [sp], #112
   280fc:	ret
   28100:	mov	w0, #0xffffffff            	// #-1
   28104:	ldp	x19, x20, [sp, #16]
   28108:	ldp	x21, x22, [sp, #32]
   2810c:	ldp	x23, x24, [sp, #48]
   28110:	ldp	x25, x26, [sp, #64]
   28114:	ldp	x27, x28, [sp, #80]
   28118:	ldp	x29, x30, [sp], #112
   2811c:	ret
   28120:	stp	x29, x30, [sp, #-48]!
   28124:	mov	x3, #0x1                   	// #1
   28128:	mov	w2, #0x3                   	// #3
   2812c:	mov	x29, sp
   28130:	stp	x19, x20, [sp, #16]
   28134:	mov	x19, x0
   28138:	add	x0, sp, #0x28
   2813c:	bl	242b8 <PyInit__decimal@@Base+0x8078>
   28140:	ldr	x20, [sp, #40]
   28144:	cbz	x20, 28178 <PyInit__decimal@@Base+0xbf38>
   28148:	mov	x2, x20
   2814c:	mov	x0, x19
   28150:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   28154:	add	x1, x1, #0x5d0
   28158:	bl	6a70 <fprintf@plt>
   2815c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   28160:	mov	x0, x20
   28164:	ldr	x1, [x1, #1912]
   28168:	blr	x1
   2816c:	ldp	x19, x20, [sp, #16]
   28170:	ldp	x29, x30, [sp], #48
   28174:	ret
   28178:	mov	x3, x19
   2817c:	mov	x2, #0x19                  	// #25
   28180:	mov	x1, #0x1                   	// #1
   28184:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   28188:	add	x0, x0, #0x5d8
   2818c:	bl	6930 <fwrite@plt>
   28190:	ldp	x19, x20, [sp, #16]
   28194:	ldp	x29, x30, [sp], #48
   28198:	ret
   2819c:	nop
   281a0:	stp	x29, x30, [sp, #-48]!
   281a4:	mov	x1, x0
   281a8:	mov	x3, #0x1                   	// #1
   281ac:	mov	x29, sp
   281b0:	add	x0, sp, #0x28
   281b4:	mov	w2, #0x3                   	// #3
   281b8:	str	x19, [sp, #16]
   281bc:	bl	242b8 <PyInit__decimal@@Base+0x8078>
   281c0:	ldr	x19, [sp, #40]
   281c4:	cbz	x19, 281ec <PyInit__decimal@@Base+0xbfac>
   281c8:	mov	x0, x19
   281cc:	bl	6810 <puts@plt>
   281d0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   281d4:	mov	x0, x19
   281d8:	ldr	x1, [x1, #1912]
   281dc:	blr	x1
   281e0:	ldr	x19, [sp, #16]
   281e4:	ldp	x29, x30, [sp], #48
   281e8:	ret
   281ec:	adrp	x3, 62000 <PyInit__decimal@@Base+0x45dc0>
   281f0:	mov	x2, #0x19                  	// #25
   281f4:	mov	x1, #0x1                   	// #1
   281f8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   281fc:	ldr	x3, [x3, #3904]
   28200:	add	x0, x0, #0x5d8
   28204:	ldr	x3, [x3]
   28208:	bl	6930 <fwrite@plt>
   2820c:	ldr	x19, [sp, #16]
   28210:	ldp	x29, x30, [sp], #48
   28214:	ret
   28218:	stp	x29, x30, [sp, #-32]!
   2821c:	umulh	x2, x0, x1
   28220:	mov	x29, sp
   28224:	stp	x19, x20, [sp, #16]
   28228:	mul	x19, x0, x1
   2822c:	cbnz	x2, 28264 <PyInit__decimal@@Base+0xc024>
   28230:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   28234:	mov	x0, x19
   28238:	ldr	x1, [x1, #1888]
   2823c:	blr	x1
   28240:	mov	x20, x0
   28244:	cbz	x0, 28254 <PyInit__decimal@@Base+0xc014>
   28248:	mov	x2, x19
   2824c:	mov	w1, #0x0                   	// #0
   28250:	bl	6670 <memset@plt>
   28254:	mov	x0, x20
   28258:	ldp	x19, x20, [sp, #16]
   2825c:	ldp	x29, x30, [sp], #32
   28260:	ret
   28264:	mov	x20, #0x0                   	// #0
   28268:	mov	x0, x20
   2826c:	ldp	x19, x20, [sp, #16]
   28270:	ldp	x29, x30, [sp], #32
   28274:	ret
   28278:	umulh	x2, x0, x1
   2827c:	mul	x0, x0, x1
   28280:	cbnz	x2, 28294 <PyInit__decimal@@Base+0xc054>
   28284:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   28288:	ldr	x1, [x1, #1888]
   2828c:	mov	x16, x1
   28290:	br	x16
   28294:	mov	x0, #0x0                   	// #0
   28298:	ret
   2829c:	nop
   282a0:	umulh	x2, x0, x1
   282a4:	cbnz	x2, 282b8 <PyInit__decimal@@Base+0xc078>
   282a8:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   282ac:	ldr	x2, [x2, #1896]
   282b0:	mov	x16, x2
   282b4:	br	x16
   282b8:	mov	x0, #0x0                   	// #0
   282bc:	ret
   282c0:	stp	x29, x30, [sp, #-32]!
   282c4:	mov	x29, sp
   282c8:	stp	x19, x20, [sp, #16]
   282cc:	mov	x20, x3
   282d0:	umulh	x3, x1, x2
   282d4:	mov	x19, x0
   282d8:	mul	x1, x1, x2
   282dc:	cbnz	x3, 282fc <PyInit__decimal@@Base+0xc0bc>
   282e0:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   282e4:	ldr	x2, [x2, #1904]
   282e8:	blr	x2
   282ec:	cbz	x0, 282fc <PyInit__decimal@@Base+0xc0bc>
   282f0:	ldp	x19, x20, [sp, #16]
   282f4:	ldp	x29, x30, [sp], #32
   282f8:	ret
   282fc:	mov	w1, #0x1                   	// #1
   28300:	strb	w1, [x20]
   28304:	mov	x0, x19
   28308:	ldp	x19, x20, [sp, #16]
   2830c:	ldp	x29, x30, [sp], #32
   28310:	ret
   28314:	nop
   28318:	sub	sp, sp, #0x10
   2831c:	umulh	x3, x1, x2
   28320:	mul	x1, x1, x2
   28324:	str	x2, [sp, #8]
   28328:	cbnz	x3, 28348 <PyInit__decimal@@Base+0xc108>
   2832c:	adds	x0, x0, x1
   28330:	b.cs	28348 <PyInit__decimal@@Base+0xc108>  // b.hs, b.nlast
   28334:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   28338:	ldr	x1, [x1, #1888]
   2833c:	add	sp, sp, #0x10
   28340:	mov	x16, x1
   28344:	br	x16
   28348:	mov	x0, #0x0                   	// #0
   2834c:	add	sp, sp, #0x10
   28350:	ret
   28354:	nop
   28358:	stp	x29, x30, [sp, #-48]!
   2835c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   28360:	mov	x29, sp
   28364:	ldr	x1, [x1, #1880]
   28368:	str	x21, [sp, #32]
   2836c:	adrp	x21, 65000 <PyInit__decimal@@Base+0x48dc0>
   28370:	stp	x19, x20, [sp, #16]
   28374:	mov	x20, x0
   28378:	ldr	x2, [x21, #1888]
   2837c:	cmp	x1, x20
   28380:	csel	x20, x1, x20, ge  // ge = tcont
   28384:	mov	x0, #0x30                  	// #48
   28388:	blr	x2
   2838c:	mov	x19, x0
   28390:	cbz	x0, 283bc <PyInit__decimal@@Base+0xc17c>
   28394:	cmp	xzr, x20, lsr #61
   28398:	lsl	x0, x20, #3
   2839c:	b.ne	283d0 <PyInit__decimal@@Base+0xc190>  // b.any
   283a0:	ldr	x1, [x21, #1888]
   283a4:	blr	x1
   283a8:	str	x0, [x19, #40]
   283ac:	cbz	x0, 283d4 <PyInit__decimal@@Base+0xc194>
   283b0:	strb	wzr, [x19]
   283b4:	stp	xzr, xzr, [x19, #8]
   283b8:	stp	xzr, x20, [x19, #24]
   283bc:	mov	x0, x19
   283c0:	ldp	x19, x20, [sp, #16]
   283c4:	ldr	x21, [sp, #32]
   283c8:	ldp	x29, x30, [sp], #48
   283cc:	ret
   283d0:	str	xzr, [x19, #40]
   283d4:	add	x21, x21, #0x760
   283d8:	mov	x0, x19
   283dc:	mov	x19, #0x0                   	// #0
   283e0:	ldr	x1, [x21, #24]
   283e4:	blr	x1
   283e8:	b	283bc <PyInit__decimal@@Base+0xc17c>
   283ec:	nop
   283f0:	stp	x29, x30, [sp, #-48]!
   283f4:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   283f8:	mov	x0, #0x30                  	// #48
   283fc:	mov	x29, sp
   28400:	str	x21, [sp, #32]
   28404:	adrp	x21, 65000 <PyInit__decimal@@Base+0x48dc0>
   28408:	stp	x19, x20, [sp, #16]
   2840c:	ldr	x1, [x21, #1888]
   28410:	ldr	x20, [x2, #1880]
   28414:	blr	x1
   28418:	mov	x19, x0
   2841c:	cbz	x0, 28448 <PyInit__decimal@@Base+0xc208>
   28420:	cmp	xzr, x20, lsr #61
   28424:	lsl	x0, x20, #3
   28428:	b.ne	2845c <PyInit__decimal@@Base+0xc21c>  // b.any
   2842c:	ldr	x1, [x21, #1888]
   28430:	blr	x1
   28434:	str	x0, [x19, #40]
   28438:	cbz	x0, 28460 <PyInit__decimal@@Base+0xc220>
   2843c:	strb	wzr, [x19]
   28440:	stp	xzr, xzr, [x19, #8]
   28444:	stp	xzr, x20, [x19, #24]
   28448:	mov	x0, x19
   2844c:	ldp	x19, x20, [sp, #16]
   28450:	ldr	x21, [sp, #32]
   28454:	ldp	x29, x30, [sp], #48
   28458:	ret
   2845c:	str	xzr, [x19, #40]
   28460:	add	x21, x21, #0x760
   28464:	mov	x0, x19
   28468:	mov	x19, #0x0                   	// #0
   2846c:	ldr	x1, [x21, #24]
   28470:	blr	x1
   28474:	b	28448 <PyInit__decimal@@Base+0xc208>
   28478:	stp	x29, x30, [sp, #-48]!
   2847c:	adrp	x2, 65000 <PyInit__decimal@@Base+0x48dc0>
   28480:	mov	x29, sp
   28484:	stp	x21, x22, [sp, #32]
   28488:	adrp	x21, 65000 <PyInit__decimal@@Base+0x48dc0>
   2848c:	mov	x22, x0
   28490:	ldr	x1, [x21, #1888]
   28494:	stp	x19, x20, [sp, #16]
   28498:	mov	x0, #0x30                  	// #48
   2849c:	ldr	x20, [x2, #1880]
   284a0:	blr	x1
   284a4:	cbz	x0, 284fc <PyInit__decimal@@Base+0xc2bc>
   284a8:	mov	x19, x0
   284ac:	cmp	xzr, x20, lsr #61
   284b0:	lsl	x0, x20, #3
   284b4:	b.ne	284e8 <PyInit__decimal@@Base+0xc2a8>  // b.any
   284b8:	ldr	x1, [x21, #1888]
   284bc:	blr	x1
   284c0:	str	x0, [x19, #40]
   284c4:	cbz	x0, 284ec <PyInit__decimal@@Base+0xc2ac>
   284c8:	strb	wzr, [x19]
   284cc:	mov	x0, x19
   284d0:	stp	xzr, xzr, [x19, #8]
   284d4:	stp	xzr, x20, [x19, #24]
   284d8:	ldp	x19, x20, [sp, #16]
   284dc:	ldp	x21, x22, [sp, #32]
   284e0:	ldp	x29, x30, [sp], #48
   284e4:	ret
   284e8:	str	xzr, [x19, #40]
   284ec:	add	x21, x21, #0x760
   284f0:	mov	x0, x19
   284f4:	ldr	x1, [x21, #24]
   284f8:	blr	x1
   284fc:	mov	x0, x22
   28500:	mov	x19, #0x0                   	// #0
   28504:	mov	w1, #0x200                 	// #512
   28508:	bl	1f870 <PyInit__decimal@@Base+0x3630>
   2850c:	mov	x0, x19
   28510:	ldp	x19, x20, [sp, #16]
   28514:	ldp	x21, x22, [sp, #32]
   28518:	ldp	x29, x30, [sp], #48
   2851c:	ret
   28520:	stp	x29, x30, [sp, #-48]!
   28524:	cmp	xzr, x1, lsr #61
   28528:	mov	x29, sp
   2852c:	stp	x19, x20, [sp, #16]
   28530:	mov	x19, x0
   28534:	stp	x21, x22, [sp, #32]
   28538:	mov	x22, x2
   2853c:	ldr	x21, [x0, #40]
   28540:	b.ne	28590 <PyInit__decimal@@Base+0xc350>  // b.any
   28544:	lsl	x0, x1, #3
   28548:	mov	x20, x1
   2854c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   28550:	ldr	x1, [x1, #1888]
   28554:	blr	x1
   28558:	str	x0, [x19, #40]
   2855c:	cbz	x0, 28590 <PyInit__decimal@@Base+0xc350>
   28560:	ldr	x2, [x19, #32]
   28564:	mov	x1, x21
   28568:	lsl	x2, x2, #3
   2856c:	bl	6470 <memcpy@plt>
   28570:	str	x20, [x19, #32]
   28574:	mov	x0, x19
   28578:	bl	2b280 <PyInit__decimal@@Base+0xf040>
   2857c:	mov	w0, #0x1                   	// #1
   28580:	ldp	x19, x20, [sp, #16]
   28584:	ldp	x21, x22, [sp, #32]
   28588:	ldp	x29, x30, [sp], #48
   2858c:	ret
   28590:	str	x21, [x19, #40]
   28594:	mov	x0, x19
   28598:	bl	2b210 <PyInit__decimal@@Base+0xefd0>
   2859c:	mov	x0, x19
   285a0:	bl	2b250 <PyInit__decimal@@Base+0xf010>
   285a4:	ldr	w1, [x22]
   285a8:	mov	w0, #0x0                   	// #0
   285ac:	stp	xzr, xzr, [x19, #8]
   285b0:	orr	w1, w1, #0x200
   285b4:	str	xzr, [x19, #24]
   285b8:	str	w1, [x22]
   285bc:	ldp	x19, x20, [sp, #16]
   285c0:	ldp	x21, x22, [sp, #32]
   285c4:	ldp	x29, x30, [sp], #48
   285c8:	ret
   285cc:	nop
   285d0:	stp	x29, x30, [sp, #-48]!
   285d4:	cmp	xzr, x1, lsr #61
   285d8:	mov	x29, sp
   285dc:	stp	x19, x20, [sp, #16]
   285e0:	mov	x19, x0
   285e4:	stp	x21, x22, [sp, #32]
   285e8:	mov	x21, x2
   285ec:	ldr	x22, [x0, #40]
   285f0:	b.ne	28634 <PyInit__decimal@@Base+0xc3f4>  // b.any
   285f4:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   285f8:	mov	x20, x1
   285fc:	mov	x0, x20
   28600:	mov	x1, #0x8                   	// #8
   28604:	ldr	x2, [x3, #1896]
   28608:	blr	x2
   2860c:	str	x0, [x19, #40]
   28610:	cbz	x0, 28634 <PyInit__decimal@@Base+0xc3f4>
   28614:	str	x20, [x19, #32]
   28618:	mov	x0, x19
   2861c:	bl	2b280 <PyInit__decimal@@Base+0xf040>
   28620:	mov	w0, #0x1                   	// #1
   28624:	ldp	x19, x20, [sp, #16]
   28628:	ldp	x21, x22, [sp, #32]
   2862c:	ldp	x29, x30, [sp], #48
   28630:	ret
   28634:	str	x22, [x19, #40]
   28638:	mov	x0, x19
   2863c:	bl	2b210 <PyInit__decimal@@Base+0xefd0>
   28640:	mov	x0, x19
   28644:	bl	2b250 <PyInit__decimal@@Base+0xf010>
   28648:	ldr	w1, [x21]
   2864c:	mov	w0, #0x0                   	// #0
   28650:	stp	xzr, xzr, [x19, #8]
   28654:	orr	w1, w1, #0x200
   28658:	str	xzr, [x19, #24]
   2865c:	str	w1, [x21]
   28660:	ldp	x19, x20, [sp, #16]
   28664:	ldp	x21, x22, [sp, #32]
   28668:	ldp	x29, x30, [sp], #48
   2866c:	ret
   28670:	stp	x29, x30, [sp, #-64]!
   28674:	cmp	xzr, x1, lsr #61
   28678:	mov	x29, sp
   2867c:	stp	x19, x20, [sp, #16]
   28680:	mov	x19, x1
   28684:	mov	x20, x0
   28688:	stp	x21, x22, [sp, #32]
   2868c:	mov	x21, x2
   28690:	str	x2, [sp, #56]
   28694:	b.ne	286d4 <PyInit__decimal@@Base+0xc494>  // b.any
   28698:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   2869c:	lsl	x1, x1, #3
   286a0:	ldr	x22, [x20, #40]
   286a4:	ldr	x2, [x0, #1904]
   286a8:	mov	x0, x22
   286ac:	blr	x2
   286b0:	mov	x1, x0
   286b4:	cbz	x0, 286d0 <PyInit__decimal@@Base+0xc490>
   286b8:	mov	w0, #0x1                   	// #1
   286bc:	stp	x19, x1, [x20, #32]
   286c0:	ldp	x19, x20, [sp, #16]
   286c4:	ldp	x21, x22, [sp, #32]
   286c8:	ldp	x29, x30, [sp], #64
   286cc:	ret
   286d0:	str	x22, [x20, #40]
   286d4:	ldr	x1, [x20, #32]
   286d8:	mov	w0, #0x1                   	// #1
   286dc:	cmp	x1, x19
   286e0:	b.ge	286c0 <PyInit__decimal@@Base+0xc480>  // b.tcont
   286e4:	mov	x0, x20
   286e8:	bl	2b210 <PyInit__decimal@@Base+0xefd0>
   286ec:	mov	x0, x20
   286f0:	bl	2b250 <PyInit__decimal@@Base+0xf010>
   286f4:	ldr	w1, [x21]
   286f8:	mov	w0, #0x0                   	// #0
   286fc:	stp	xzr, xzr, [x20, #8]
   28700:	orr	w1, w1, #0x200
   28704:	str	xzr, [x20, #24]
   28708:	str	w1, [x21]
   2870c:	ldp	x19, x20, [sp, #16]
   28710:	ldp	x21, x22, [sp, #32]
   28714:	ldp	x29, x30, [sp], #64
   28718:	ret
   2871c:	nop
   28720:	mov	x6, #0x89e80000            	// #2313682944
   28724:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   28728:	movk	x6, #0x2304, lsl #32
   2872c:	add	x4, x2, x3, lsr #63
   28730:	movk	x6, #0x8ac7, lsl #48
   28734:	ldr	x7, [x5, #368]
   28738:	and	x8, x6, x3, asr #63
   2873c:	add	x8, x8, x3
   28740:	mov	x5, #0x76180000            	// #1981284352
   28744:	movk	x5, #0xdcfb, lsl #32
   28748:	movk	x5, #0x7538, lsl #48
   2874c:	add	x5, x2, x5
   28750:	madd	x9, x4, x7, x8
   28754:	umulh	x7, x4, x7
   28758:	cmp	x9, x8
   2875c:	mov	x8, x6
   28760:	cinc	x7, x7, cc  // cc = lo, ul, last
   28764:	add	x2, x2, x7
   28768:	mvn	x2, x2
   2876c:	mul	x4, x2, x6
   28770:	umulh	x6, x2, x6
   28774:	adds	x3, x3, x4
   28778:	cset	x4, cs  // cs = hs, nlast
   2877c:	add	x6, x6, x4
   28780:	add	x4, x5, x6
   28784:	sub	x2, x4, x2
   28788:	and	x4, x4, x8
   2878c:	str	x2, [x0]
   28790:	add	x4, x4, x3
   28794:	str	x4, [x1]
   28798:	ret
   2879c:	nop
   287a0:	ldr	x3, [x0, #24]
   287a4:	ldr	x4, [x0, #40]
   287a8:	add	x1, x4, x3, lsl #3
   287ac:	ldur	x1, [x1, #-8]
   287b0:	cbz	x1, 28838 <PyInit__decimal@@Base+0xc5f8>
   287b4:	cmp	x3, #0x0
   287b8:	mov	x2, #0x0                   	// #0
   287bc:	b.gt	287d0 <PyInit__decimal@@Base+0xc590>
   287c0:	b	28824 <PyInit__decimal@@Base+0xc5e4>
   287c4:	add	x2, x2, #0x1
   287c8:	cmp	x3, x2
   287cc:	b.eq	28840 <PyInit__decimal@@Base+0xc600>  // b.none
   287d0:	ldr	x1, [x4, x2, lsl #3]
   287d4:	cbz	x1, 287c4 <PyInit__decimal@@Base+0xc584>
   287d8:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   287dc:	add	x3, x2, x2, lsl #2
   287e0:	movk	x4, #0xcccd
   287e4:	mov	x5, #0x9999999999999999    	// #-7378697629483820647
   287e8:	lsl	x3, x3, #2
   287ec:	movk	x5, #0x1999, lsl #48
   287f0:	mul	x6, x1, x4
   287f4:	sub	x2, x3, x2
   287f8:	ror	x3, x6, #1
   287fc:	cmp	x3, x5
   28800:	b.hi	28824 <PyInit__decimal@@Base+0xc5e4>  // b.pmore
   28804:	nop
   28808:	umulh	x1, x1, x4
   2880c:	add	x2, x2, #0x1
   28810:	lsr	x1, x1, #3
   28814:	mul	x3, x1, x4
   28818:	ror	x3, x3, #1
   2881c:	cmp	x3, x5
   28820:	b.ls	28808 <PyInit__decimal@@Base+0xc5c8>  // b.plast
   28824:	ldr	x0, [x0, #8]
   28828:	add	x0, x2, x0
   2882c:	mvn	x0, x0
   28830:	lsr	x0, x0, #63
   28834:	ret
   28838:	mov	w0, #0x1                   	// #1
   2883c:	ret
   28840:	ldr	x0, [x0, #8]
   28844:	mov	x2, #0x0                   	// #0
   28848:	add	x0, x2, x0
   2884c:	mvn	x0, x0
   28850:	lsr	x0, x0, #63
   28854:	b	28834 <PyInit__decimal@@Base+0xc5f4>
   28858:	stp	x29, x30, [sp, #-144]!
   2885c:	cmp	x4, #0x10
   28860:	mov	x29, sp
   28864:	stp	x19, x20, [sp, #16]
   28868:	mov	x20, x5
   2886c:	stp	x21, x22, [sp, #32]
   28870:	mov	x22, x4
   28874:	b.ls	28b20 <PyInit__decimal@@Base+0xc8e0>  // b.plast
   28878:	add	x21, x4, #0x1
   2887c:	stp	x27, x28, [sp, #80]
   28880:	mov	x19, x3
   28884:	lsr	x27, x21, #1
   28888:	stp	x23, x24, [sp, #48]
   2888c:	mov	x28, x0
   28890:	stp	x25, x26, [sp, #64]
   28894:	lsl	x23, x27, #3
   28898:	mov	x24, x2
   2889c:	sub	x22, x4, x27
   288a0:	cmp	x27, x5
   288a4:	add	x8, x1, x23
   288a8:	add	x26, x0, x23
   288ac:	b.cc	2896c <PyInit__decimal@@Base+0xc72c>  // b.lo, b.ul, b.last
   288b0:	stp	x8, x1, [sp, #104]
   288b4:	cmp	x5, x22
   288b8:	b.ls	28ae0 <PyInit__decimal@@Base+0xc8a0>  // b.plast
   288bc:	lsl	x23, x5, #4
   288c0:	mov	x0, x3
   288c4:	add	x23, x23, #0x8
   288c8:	mov	w1, #0x0                   	// #0
   288cc:	mov	x2, x23
   288d0:	bl	6670 <memset@plt>
   288d4:	ldr	x8, [sp, #104]
   288d8:	mov	x5, x22
   288dc:	mov	x4, x20
   288e0:	add	x3, x19, x23
   288e4:	mov	x1, x24
   288e8:	mov	x0, x19
   288ec:	mov	x2, x8
   288f0:	bl	28858 <PyInit__decimal@@Base+0xc618>
   288f4:	ldr	x7, [sp, #112]
   288f8:	orr	x21, x21, #0x1
   288fc:	add	x2, x20, x22
   28900:	mov	x0, x26
   28904:	mov	x1, x19
   28908:	lsl	x21, x21, #3
   2890c:	str	x7, [sp, #104]
   28910:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   28914:	mov	x2, x21
   28918:	mov	x0, x19
   2891c:	mov	w1, #0x0                   	// #0
   28920:	bl	6670 <memset@plt>
   28924:	ldr	x7, [sp, #104]
   28928:	add	x3, x19, x21
   2892c:	mov	x5, x20
   28930:	mov	x4, x27
   28934:	mov	x2, x24
   28938:	mov	x0, x19
   2893c:	mov	x1, x7
   28940:	bl	28858 <PyInit__decimal@@Base+0xc618>
   28944:	add	x2, x27, x20
   28948:	mov	x1, x19
   2894c:	mov	x0, x28
   28950:	ldp	x19, x20, [sp, #16]
   28954:	ldp	x21, x22, [sp, #32]
   28958:	ldp	x23, x24, [sp, #48]
   2895c:	ldp	x25, x26, [sp, #64]
   28960:	ldp	x27, x28, [sp, #80]
   28964:	ldp	x29, x30, [sp], #144
   28968:	b	1d0b8 <PyInit__decimal@@Base+0xe78>
   2896c:	add	x25, x23, #0x8
   28970:	sub	x20, x5, x27
   28974:	add	x25, x3, x25
   28978:	mov	x0, x3
   2897c:	mov	x2, x23
   28980:	str	x8, [sp, #104]
   28984:	str	x1, [sp, #136]
   28988:	bl	6470 <memcpy@plt>
   2898c:	ldr	x8, [sp, #104]
   28990:	str	xzr, [x19, x27, lsl #3]
   28994:	mov	x2, x22
   28998:	mov	x0, x19
   2899c:	mov	x1, x8
   289a0:	str	x8, [sp, #128]
   289a4:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   289a8:	mov	x2, x23
   289ac:	mov	x1, x24
   289b0:	mov	x0, x25
   289b4:	bl	6470 <memcpy@plt>
   289b8:	lsl	x0, x27, #4
   289bc:	add	x9, x20, x22
   289c0:	add	x1, x19, x0
   289c4:	add	x10, x24, x23
   289c8:	add	x5, x27, #0x1
   289cc:	mov	x0, x25
   289d0:	mov	x2, x20
   289d4:	stp	x9, x5, [sp, #104]
   289d8:	str	xzr, [x1, #8]
   289dc:	mov	x1, x10
   289e0:	str	x10, [sp, #120]
   289e4:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   289e8:	ldr	x5, [sp, #112]
   289ec:	lsl	x0, x27, #4
   289f0:	add	x3, x0, #0x10
   289f4:	mov	x2, x25
   289f8:	add	x3, x19, x3
   289fc:	mov	x4, x5
   28a00:	lsl	x25, x22, #4
   28a04:	mov	x1, x19
   28a08:	mov	x0, x26
   28a0c:	add	x25, x25, #0x8
   28a10:	bl	28858 <PyInit__decimal@@Base+0xc618>
   28a14:	mov	x2, x25
   28a18:	mov	x0, x19
   28a1c:	mov	w1, #0x0                   	// #0
   28a20:	bl	6670 <memset@plt>
   28a24:	ldp	x10, x8, [sp, #120]
   28a28:	add	x3, x19, x25
   28a2c:	mov	x5, x20
   28a30:	mov	x4, x22
   28a34:	mov	x0, x19
   28a38:	orr	x20, x21, #0x1
   28a3c:	and	x21, x21, #0xfffffffffffffffe
   28a40:	lsl	x20, x20, #3
   28a44:	mov	x2, x10
   28a48:	mov	x1, x8
   28a4c:	bl	28858 <PyInit__decimal@@Base+0xc618>
   28a50:	ldr	x9, [sp, #104]
   28a54:	add	x0, x26, x23
   28a58:	mov	x1, x19
   28a5c:	mov	x2, x9
   28a60:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   28a64:	ldr	x9, [sp, #104]
   28a68:	mov	x1, x19
   28a6c:	mov	x0, x26
   28a70:	mov	x2, x9
   28a74:	bl	1d3d8 <PyInit__decimal@@Base+0x1198>
   28a78:	mov	x2, x20
   28a7c:	mov	x0, x19
   28a80:	mov	w1, #0x0                   	// #0
   28a84:	bl	6670 <memset@plt>
   28a88:	ldr	x7, [sp, #136]
   28a8c:	mov	x5, x27
   28a90:	mov	x4, x27
   28a94:	add	x3, x19, x20
   28a98:	mov	x1, x7
   28a9c:	mov	x2, x24
   28aa0:	mov	x0, x19
   28aa4:	bl	28858 <PyInit__decimal@@Base+0xc618>
   28aa8:	mov	x2, x21
   28aac:	mov	x1, x19
   28ab0:	mov	x0, x28
   28ab4:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   28ab8:	mov	x2, x21
   28abc:	mov	x1, x19
   28ac0:	mov	x0, x26
   28ac4:	ldp	x19, x20, [sp, #16]
   28ac8:	ldp	x21, x22, [sp, #32]
   28acc:	ldp	x23, x24, [sp, #48]
   28ad0:	ldp	x25, x26, [sp, #64]
   28ad4:	ldp	x27, x28, [sp, #80]
   28ad8:	ldp	x29, x30, [sp], #144
   28adc:	b	1d3d8 <PyInit__decimal@@Base+0x1198>
   28ae0:	lsl	x23, x22, #4
   28ae4:	mov	x0, x3
   28ae8:	add	x23, x23, #0x8
   28aec:	mov	w1, #0x0                   	// #0
   28af0:	mov	x2, x23
   28af4:	bl	6670 <memset@plt>
   28af8:	ldr	x8, [sp, #104]
   28afc:	mov	x5, x20
   28b00:	mov	x4, x22
   28b04:	add	x3, x19, x23
   28b08:	mov	x2, x24
   28b0c:	mov	x0, x19
   28b10:	mov	x1, x8
   28b14:	bl	28858 <PyInit__decimal@@Base+0xc618>
   28b18:	ldr	x7, [sp, #112]
   28b1c:	b	288f8 <PyInit__decimal@@Base+0xc6b8>
   28b20:	mov	x3, x22
   28b24:	mov	x4, x5
   28b28:	ldp	x19, x20, [sp, #16]
   28b2c:	ldp	x21, x22, [sp, #32]
   28b30:	ldp	x29, x30, [sp], #144
   28b34:	b	1d508 <PyInit__decimal@@Base+0x12c8>
   28b38:	cmp	x3, #0x9
   28b3c:	b.hi	28b9c <PyInit__decimal@@Base+0xc95c>  // b.pmore
   28b40:	cmp	x3, #0x4
   28b44:	b.hi	28c4c <PyInit__decimal@@Base+0xca0c>  // b.pmore
   28b48:	cmp	x3, #0x3
   28b4c:	b.eq	28db8 <PyInit__decimal@@Base+0xcb78>  // b.none
   28b50:	cmp	x3, #0x4
   28b54:	b.eq	28d58 <PyInit__decimal@@Base+0xcb18>  // b.none
   28b58:	cmp	x3, #0x1
   28b5c:	b.eq	28cd0 <PyInit__decimal@@Base+0xca90>  // b.none
   28b60:	cmp	x3, #0x2
   28b64:	b.ne	28e88 <PyInit__decimal@@Base+0xcc48>  // b.any
   28b68:	mov	x4, #0xf5c3                	// #62915
   28b6c:	lsr	x3, x2, #2
   28b70:	movk	x4, #0x5c28, lsl #16
   28b74:	movk	x4, #0xc28f, lsl #32
   28b78:	movk	x4, #0x28f5, lsl #48
   28b7c:	umulh	x3, x3, x4
   28b80:	lsr	x3, x3, #2
   28b84:	str	x3, [x0]
   28b88:	add	x0, x3, x3, lsl #1
   28b8c:	add	x3, x3, x0, lsl #3
   28b90:	sub	x2, x2, x3, lsl #2
   28b94:	str	x2, [x1]
   28b98:	ret
   28b9c:	cmp	x3, #0xe
   28ba0:	b.hi	28bf8 <PyInit__decimal@@Base+0xc9b8>  // b.pmore
   28ba4:	cmp	x3, #0xd
   28ba8:	b.eq	28e20 <PyInit__decimal@@Base+0xcbe0>  // b.none
   28bac:	cmp	x3, #0xe
   28bb0:	b.eq	28d24 <PyInit__decimal@@Base+0xcae4>  // b.none
   28bb4:	cmp	x3, #0xb
   28bb8:	b.eq	28c9c <PyInit__decimal@@Base+0xca5c>  // b.none
   28bbc:	cmp	x3, #0xc
   28bc0:	b.ne	28e54 <PyInit__decimal@@Base+0xcc14>  // b.any
   28bc4:	mov	x3, #0x2233                	// #8755
   28bc8:	mov	x4, #0x1000                	// #4096
   28bcc:	movk	x3, #0x5bd4, lsl #16
   28bd0:	movk	x4, #0xd4a5, lsl #16
   28bd4:	movk	x3, #0x3302, lsl #32
   28bd8:	movk	x4, #0xe8, lsl #32
   28bdc:	movk	x3, #0x232f, lsl #48
   28be0:	umulh	x3, x2, x3
   28be4:	lsr	x3, x3, #37
   28be8:	str	x3, [x0]
   28bec:	msub	x2, x3, x4, x2
   28bf0:	str	x2, [x1]
   28bf4:	ret
   28bf8:	cmp	x3, #0x12
   28bfc:	b.eq	28f20 <PyInit__decimal@@Base+0xcce0>  // b.none
   28c00:	cmp	x3, #0x13
   28c04:	b.eq	28efc <PyInit__decimal@@Base+0xccbc>  // b.none
   28c08:	cmp	x3, #0x10
   28c0c:	b.eq	28ec8 <PyInit__decimal@@Base+0xcc88>  // b.none
   28c10:	cmp	x3, #0x11
   28c14:	b.ne	28f54 <PyInit__decimal@@Base+0xcd14>  // b.any
   28c18:	mov	x5, #0x1b53                	// #6995
   28c1c:	lsr	x3, x2, #17
   28c20:	movk	x5, #0xd519, lsl #16
   28c24:	mov	x4, #0x5d8a0000            	// #1569325056
   28c28:	movk	x5, #0x5c3b, lsl #32
   28c2c:	movk	x4, #0x4578, lsl #32
   28c30:	movk	x4, #0x163, lsl #48
   28c34:	umulh	x3, x3, x5
   28c38:	lsr	x3, x3, #22
   28c3c:	str	x3, [x0]
   28c40:	msub	x2, x3, x4, x2
   28c44:	str	x2, [x1]
   28c48:	ret
   28c4c:	cmp	x3, #0x8
   28c50:	b.eq	28df0 <PyInit__decimal@@Base+0xcbb0>  // b.none
   28c54:	cmp	x3, #0x9
   28c58:	b.eq	28d84 <PyInit__decimal@@Base+0xcb44>  // b.none
   28c5c:	cmp	x3, #0x6
   28c60:	b.eq	28cf4 <PyInit__decimal@@Base+0xcab4>  // b.none
   28c64:	cmp	x3, #0x7
   28c68:	b.ne	28e94 <PyInit__decimal@@Base+0xcc54>  // b.any
   28c6c:	mov	x3, #0x42bd                	// #17085
   28c70:	mov	x4, #0x9680                	// #38528
   28c74:	movk	x3, #0xe57a, lsl #16
   28c78:	movk	x4, #0x98, lsl #16
   28c7c:	movk	x3, #0x94d5, lsl #32
   28c80:	movk	x3, #0xd6bf, lsl #48
   28c84:	umulh	x3, x2, x3
   28c88:	lsr	x3, x3, #23
   28c8c:	str	x3, [x0]
   28c90:	msub	x2, x3, x4, x2
   28c94:	str	x2, [x1]
   28c98:	ret
   28c9c:	mov	x3, #0xaaff                	// #43775
   28ca0:	mov	x4, #0xe800                	// #59392
   28ca4:	movk	x3, #0xcb24, lsl #16
   28ca8:	movk	x4, #0x4876, lsl #16
   28cac:	movk	x3, #0xff0b, lsl #32
   28cb0:	movk	x4, #0x17, lsl #32
   28cb4:	movk	x3, #0xafeb, lsl #48
   28cb8:	umulh	x3, x2, x3
   28cbc:	lsr	x3, x3, #36
   28cc0:	str	x3, [x0]
   28cc4:	msub	x2, x3, x4, x2
   28cc8:	str	x2, [x1]
   28ccc:	ret
   28cd0:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   28cd4:	movk	x3, #0xcccd
   28cd8:	umulh	x3, x2, x3
   28cdc:	lsr	x3, x3, #3
   28ce0:	str	x3, [x0]
   28ce4:	add	x3, x3, x3, lsl #2
   28ce8:	sub	x2, x2, x3, lsl #1
   28cec:	str	x2, [x1]
   28cf0:	ret
   28cf4:	mov	x3, #0x34db                	// #13531
   28cf8:	mov	x4, #0x4240                	// #16960
   28cfc:	movk	x3, #0xd7b6, lsl #16
   28d00:	movk	x4, #0xf, lsl #16
   28d04:	movk	x3, #0xde82, lsl #32
   28d08:	movk	x3, #0x431b, lsl #48
   28d0c:	umulh	x3, x2, x3
   28d10:	lsr	x3, x3, #18
   28d14:	str	x3, [x0]
   28d18:	msub	x2, x3, x4, x2
   28d1c:	str	x2, [x1]
   28d20:	ret
   28d24:	mov	x3, #0xcd81                	// #52609
   28d28:	mov	x4, #0x4000                	// #16384
   28d2c:	movk	x3, #0x5095, lsl #16
   28d30:	movk	x4, #0x107a, lsl #16
   28d34:	movk	x3, #0x4dc3, lsl #32
   28d38:	movk	x4, #0x5af3, lsl #32
   28d3c:	movk	x3, #0xb42, lsl #48
   28d40:	umulh	x3, x2, x3
   28d44:	lsr	x3, x3, #42
   28d48:	str	x3, [x0]
   28d4c:	msub	x2, x3, x4, x2
   28d50:	str	x2, [x1]
   28d54:	ret
   28d58:	mov	x3, #0x594b                	// #22859
   28d5c:	mov	x4, #0x2710                	// #10000
   28d60:	movk	x3, #0x3886, lsl #16
   28d64:	movk	x3, #0xc5d6, lsl #32
   28d68:	movk	x3, #0x346d, lsl #48
   28d6c:	umulh	x3, x2, x3
   28d70:	lsr	x3, x3, #11
   28d74:	str	x3, [x0]
   28d78:	msub	x2, x3, x4, x2
   28d7c:	str	x2, [x1]
   28d80:	ret
   28d84:	mov	x5, #0x5a53                	// #23123
   28d88:	lsr	x3, x2, #9
   28d8c:	movk	x5, #0xa09b, lsl #16
   28d90:	mov	x4, #0xca00                	// #51712
   28d94:	movk	x5, #0xb82f, lsl #32
   28d98:	movk	x4, #0x3b9a, lsl #16
   28d9c:	movk	x5, #0x44, lsl #48
   28da0:	umulh	x3, x3, x5
   28da4:	lsr	x3, x3, #11
   28da8:	str	x3, [x0]
   28dac:	msub	x2, x3, x4, x2
   28db0:	str	x2, [x1]
   28db4:	ret
   28db8:	mov	x4, #0xf7cf                	// #63439
   28dbc:	lsr	x3, x2, #3
   28dc0:	movk	x4, #0xe353, lsl #16
   28dc4:	movk	x4, #0x9ba5, lsl #32
   28dc8:	movk	x4, #0x20c4, lsl #48
   28dcc:	umulh	x3, x3, x4
   28dd0:	lsr	x3, x3, #4
   28dd4:	str	x3, [x0]
   28dd8:	lsl	x0, x3, #5
   28ddc:	sub	x0, x0, x3
   28de0:	add	x3, x3, x0, lsl #2
   28de4:	sub	x2, x2, x3, lsl #3
   28de8:	str	x2, [x1]
   28dec:	ret
   28df0:	mov	x3, #0xcefd                	// #52989
   28df4:	mov	x4, #0xe100                	// #57600
   28df8:	movk	x3, #0x8461, lsl #16
   28dfc:	movk	x4, #0x5f5, lsl #16
   28e00:	movk	x3, #0x7711, lsl #32
   28e04:	movk	x3, #0xabcc, lsl #48
   28e08:	umulh	x3, x2, x3
   28e0c:	lsr	x3, x3, #26
   28e10:	str	x3, [x0]
   28e14:	msub	x2, x3, x4, x2
   28e18:	str	x2, [x1]
   28e1c:	ret
   28e20:	mov	x3, #0x385                 	// #901
   28e24:	mov	x4, #0xa000                	// #40960
   28e28:	movk	x3, #0x92ed, lsl #16
   28e2c:	movk	x4, #0x4e72, lsl #16
   28e30:	movk	x3, #0x84d0, lsl #32
   28e34:	movk	x4, #0x918, lsl #32
   28e38:	movk	x3, #0x384b, lsl #48
   28e3c:	umulh	x3, x2, x3
   28e40:	lsr	x3, x3, #41
   28e44:	str	x3, [x0]
   28e48:	msub	x2, x3, x4, x2
   28e4c:	str	x2, [x1]
   28e50:	ret
   28e54:	mov	x3, #0xd5bf                	// #54719
   28e58:	mov	x4, #0xe400                	// #58368
   28e5c:	movk	x3, #0xbded, lsl #16
   28e60:	movk	x4, #0x540b, lsl #16
   28e64:	movk	x3, #0xfece, lsl #32
   28e68:	movk	x4, #0x2, lsl #32
   28e6c:	movk	x3, #0xdbe6, lsl #48
   28e70:	umulh	x3, x2, x3
   28e74:	lsr	x3, x3, #33
   28e78:	str	x3, [x0]
   28e7c:	msub	x2, x3, x4, x2
   28e80:	str	x2, [x1]
   28e84:	ret
   28e88:	str	x2, [x0]
   28e8c:	str	xzr, [x1]
   28e90:	ret
   28e94:	mov	x5, #0x7843                	// #30787
   28e98:	lsr	x3, x2, #5
   28e9c:	movk	x5, #0x71b4, lsl #16
   28ea0:	mov	x4, #0x86a0                	// #34464
   28ea4:	movk	x5, #0x5ac4, lsl #32
   28ea8:	movk	x4, #0x1, lsl #16
   28eac:	movk	x5, #0xa7c, lsl #48
   28eb0:	umulh	x3, x3, x5
   28eb4:	lsr	x3, x3, #7
   28eb8:	str	x3, [x0]
   28ebc:	msub	x2, x3, x4, x2
   28ec0:	str	x2, [x1]
   28ec4:	ret
   28ec8:	mov	x3, #0x7857                	// #30807
   28ecc:	mov	x4, #0x6fc10000            	// #1874919424
   28ed0:	movk	x3, #0xb113, lsl #16
   28ed4:	movk	x4, #0x86f2, lsl #32
   28ed8:	movk	x3, #0x652f, lsl #32
   28edc:	movk	x4, #0x23, lsl #48
   28ee0:	movk	x3, #0x39a5, lsl #48
   28ee4:	umulh	x3, x2, x3
   28ee8:	lsr	x3, x3, #51
   28eec:	str	x3, [x0]
   28ef0:	msub	x2, x3, x4, x2
   28ef4:	str	x2, [x1]
   28ef8:	ret
   28efc:	mov	x4, #0x89e80000            	// #2313682944
   28f00:	movk	x4, #0x2304, lsl #32
   28f04:	movk	x4, #0x8ac7, lsl #48
   28f08:	cmp	x2, x4
   28f0c:	cset	x3, cs  // cs = hs, nlast
   28f10:	str	x3, [x0]
   28f14:	msub	x2, x3, x4, x2
   28f18:	str	x2, [x1]
   28f1c:	ret
   28f20:	mov	x5, #0x490f                	// #18703
   28f24:	lsr	x3, x2, #18
   28f28:	movk	x5, #0x7747, lsl #16
   28f2c:	mov	x4, #0xa7640000            	// #2808348672
   28f30:	movk	x5, #0x49c9, lsl #32
   28f34:	movk	x4, #0xb6b3, lsl #32
   28f38:	movk	x4, #0xde0, lsl #48
   28f3c:	umulh	x3, x3, x5
   28f40:	lsr	x3, x3, #24
   28f44:	str	x3, [x0]
   28f48:	msub	x2, x3, x4, x2
   28f4c:	str	x2, [x1]
   28f50:	ret
   28f54:	mov	x5, #0xeac3                	// #60099
   28f58:	lsr	x3, x2, #15
   28f5c:	movk	x5, #0xf3dc, lsl #16
   28f60:	mov	x4, #0x8000                	// #32768
   28f64:	movk	x5, #0x4075, lsl #32
   28f68:	movk	x4, #0xa4c6, lsl #16
   28f6c:	movk	x5, #0x2, lsl #48
   28f70:	movk	x4, #0x8d7e, lsl #32
   28f74:	movk	x4, #0x3, lsl #48
   28f78:	umulh	x3, x3, x5
   28f7c:	lsr	x3, x3, #20
   28f80:	str	x3, [x0]
   28f84:	msub	x2, x3, x4, x2
   28f88:	str	x2, [x1]
   28f8c:	ret
   28f90:	stp	x29, x30, [sp, #-32]!
   28f94:	mov	x7, x0
   28f98:	mov	x6, x1
   28f9c:	mov	x29, sp
   28fa0:	stp	xzr, xzr, [sp, #16]
   28fa4:	cbz	w2, 29060 <PyInit__decimal@@Base+0xce20>
   28fa8:	add	x2, x0, x6, lsl #3
   28fac:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   28fb0:	add	x1, x1, #0x180
   28fb4:	ldur	x2, [x2, #-8]
   28fb8:	ldr	x0, [x1, #72]
   28fbc:	cmp	x2, x0
   28fc0:	b.cs	29074 <PyInit__decimal@@Base+0xce34>  // b.hs, b.nlast
   28fc4:	ldr	x0, [x1, #32]
   28fc8:	cmp	x2, x0
   28fcc:	b.cc	290bc <PyInit__decimal@@Base+0xce7c>  // b.lo, b.ul, b.last
   28fd0:	ldr	x0, [x1, #48]
   28fd4:	cmp	x2, x0
   28fd8:	b.cc	29148 <PyInit__decimal@@Base+0xcf08>  // b.lo, b.ul, b.last
   28fdc:	ldr	x0, [x1, #64]
   28fe0:	mov	x3, #0x8                   	// #8
   28fe4:	cmp	x2, x0
   28fe8:	b.cs	29000 <PyInit__decimal@@Base+0xcdc0>  // b.hs, b.nlast
   28fec:	ldr	x0, [x1, #56]
   28ff0:	cmp	x2, x0
   28ff4:	cset	x3, cs  // cs = hs, nlast
   28ff8:	add	x3, x3, #0x6
   28ffc:	nop
   29000:	add	x1, sp, #0x18
   29004:	add	x0, sp, #0x10
   29008:	bl	28b38 <PyInit__decimal@@Base+0xc8f8>
   2900c:	cmp	x6, #0x1
   29010:	b.le	29038 <PyInit__decimal@@Base+0xcdf8>
   29014:	ldr	x0, [sp, #24]
   29018:	cbnz	x0, 29038 <PyInit__decimal@@Base+0xcdf8>
   2901c:	sub	x6, x6, #0x2
   29020:	ldr	x1, [x7, x6, lsl #3]
   29024:	sub	x6, x6, #0x1
   29028:	cmn	x6, #0x1
   2902c:	cbnz	x1, 29104 <PyInit__decimal@@Base+0xcec4>
   29030:	b.ne	29020 <PyInit__decimal@@Base+0xcde0>  // b.any
   29034:	str	x1, [sp, #24]
   29038:	ldr	x0, [sp, #16]
   2903c:	cmp	x0, #0x0
   29040:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   29044:	b.ne	2906c <PyInit__decimal@@Base+0xce2c>  // b.any
   29048:	ldr	x1, [sp, #24]
   2904c:	cmp	x1, #0x0
   29050:	cinc	x0, x0, ne  // ne = any
   29054:	b	2906c <PyInit__decimal@@Base+0xce2c>
   29058:	ldr	x1, [x7, x6, lsl #3]
   2905c:	cbnz	x1, 290b0 <PyInit__decimal@@Base+0xce70>
   29060:	subs	x6, x6, #0x1
   29064:	b.pl	29058 <PyInit__decimal@@Base+0xce18>  // b.nfrst
   29068:	mov	x0, #0x0                   	// #0
   2906c:	ldp	x29, x30, [sp], #32
   29070:	ret
   29074:	ldr	x0, [x1, #112]
   29078:	cmp	x2, x0
   2907c:	b.cs	290d8 <PyInit__decimal@@Base+0xce98>  // b.hs, b.nlast
   29080:	ldr	x0, [x1, #88]
   29084:	cmp	x2, x0
   29088:	b.cc	2915c <PyInit__decimal@@Base+0xcf1c>  // b.lo, b.ul, b.last
   2908c:	ldr	x0, [x1, #104]
   29090:	mov	x3, #0xd                   	// #13
   29094:	cmp	x2, x0
   29098:	b.cs	29000 <PyInit__decimal@@Base+0xcdc0>  // b.hs, b.nlast
   2909c:	ldr	x0, [x1, #96]
   290a0:	cmp	x2, x0
   290a4:	cset	x3, cs  // cs = hs, nlast
   290a8:	add	x3, x3, #0xb
   290ac:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   290b0:	mov	x0, #0x1                   	// #1
   290b4:	ldp	x29, x30, [sp], #32
   290b8:	ret
   290bc:	ldr	x0, [x1, #16]
   290c0:	cmp	x2, x0
   290c4:	b.cs	2910c <PyInit__decimal@@Base+0xcecc>  // b.hs, b.nlast
   290c8:	ldr	x0, [x1, #8]
   290cc:	cmp	x2, x0
   290d0:	cset	x3, cs  // cs = hs, nlast
   290d4:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   290d8:	ldr	x0, [x1, #144]
   290dc:	cmp	x2, x0
   290e0:	b.cs	29120 <PyInit__decimal@@Base+0xcee0>  // b.hs, b.nlast
   290e4:	ldr	x0, [x1, #128]
   290e8:	cmp	x2, x0
   290ec:	b.cs	29134 <PyInit__decimal@@Base+0xcef4>  // b.hs, b.nlast
   290f0:	ldr	x0, [x1, #120]
   290f4:	cmp	x2, x0
   290f8:	cset	x3, cs  // cs = hs, nlast
   290fc:	add	x3, x3, #0xe
   29100:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   29104:	mov	x1, #0x1                   	// #1
   29108:	b	29034 <PyInit__decimal@@Base+0xcdf4>
   2910c:	ldr	x0, [x1, #24]
   29110:	cmp	x2, x0
   29114:	cset	x3, cs  // cs = hs, nlast
   29118:	add	x3, x3, #0x2
   2911c:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   29120:	ldr	x0, [x1, #152]
   29124:	cmp	x2, x0
   29128:	cset	x3, cs  // cs = hs, nlast
   2912c:	add	x3, x3, #0x12
   29130:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   29134:	ldr	x0, [x1, #136]
   29138:	cmp	x2, x0
   2913c:	cset	x3, cs  // cs = hs, nlast
   29140:	add	x3, x3, #0x10
   29144:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   29148:	ldr	x0, [x1, #40]
   2914c:	cmp	x2, x0
   29150:	cset	x3, cs  // cs = hs, nlast
   29154:	add	x3, x3, #0x4
   29158:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   2915c:	ldr	x0, [x1, #80]
   29160:	cmp	x2, x0
   29164:	cset	x3, cs  // cs = hs, nlast
   29168:	add	x3, x3, #0x9
   2916c:	b	29000 <PyInit__decimal@@Base+0xcdc0>
   29170:	stp	x29, x30, [sp, #-32]!
   29174:	mov	w3, #0x253                 	// #595
   29178:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2917c:	mov	x29, sp
   29180:	str	x19, [sp, #16]
   29184:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   29188:	add	x2, x2, #0x40
   2918c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   29190:	ldr	x19, [x19, #3904]
   29194:	add	x1, x1, #0x80
   29198:	ldr	x0, [x19]
   2919c:	bl	6a70 <fprintf@plt>
   291a0:	ldr	x3, [x19]
   291a4:	mov	x2, #0x29                  	// #41
   291a8:	mov	x1, #0x1                   	// #1
   291ac:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   291b0:	add	x0, x0, #0x6f0
   291b4:	bl	6930 <fwrite@plt>
   291b8:	ldr	x1, [x19]
   291bc:	mov	w0, #0xa                   	// #10
   291c0:	bl	65b0 <fputc@plt>
   291c4:	bl	67c0 <abort@plt>
   291c8:	stp	x29, x30, [sp, #-32]!
   291cc:	mov	w3, #0x26c                 	// #620
   291d0:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   291d4:	mov	x29, sp
   291d8:	str	x19, [sp, #16]
   291dc:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   291e0:	add	x2, x2, #0x40
   291e4:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   291e8:	ldr	x19, [x19, #3904]
   291ec:	add	x1, x1, #0x80
   291f0:	ldr	x0, [x19]
   291f4:	bl	6a70 <fprintf@plt>
   291f8:	ldr	x3, [x19]
   291fc:	mov	x2, #0x29                  	// #41
   29200:	mov	x1, #0x1                   	// #1
   29204:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   29208:	add	x0, x0, #0x720
   2920c:	bl	6930 <fwrite@plt>
   29210:	ldr	x1, [x19]
   29214:	mov	w0, #0xa                   	// #10
   29218:	bl	65b0 <fputc@plt>
   2921c:	bl	67c0 <abort@plt>
   29220:	stp	x29, x30, [sp, #-32]!
   29224:	add	x0, x0, #0x1
   29228:	mov	x29, sp
   2922c:	str	x19, [sp, #16]
   29230:	lsr	x0, x0, #1
   29234:	add	x0, x0, #0x1
   29238:	tbnz	x0, #63, 2926c <PyInit__decimal@@Base+0xd02c>
   2923c:	lsl	x19, x0, #1
   29240:	cmp	x0, x1
   29244:	b.ls	2925c <PyInit__decimal@@Base+0xd01c>  // b.plast
   29248:	bl	29220 <PyInit__decimal@@Base+0xcfe0>
   2924c:	mvn	x1, x0
   29250:	cmp	x19, x1
   29254:	b.hi	29270 <PyInit__decimal@@Base+0xd030>  // b.pmore
   29258:	add	x19, x19, x0
   2925c:	mov	x0, x19
   29260:	ldr	x19, [sp, #16]
   29264:	ldp	x29, x30, [sp], #32
   29268:	ret
   2926c:	bl	291c8 <PyInit__decimal@@Base+0xcf88>
   29270:	bl	29170 <PyInit__decimal@@Base+0xcf30>
   29274:	nop
   29278:	stp	x29, x30, [sp, #-96]!
   2927c:	mov	x29, sp
   29280:	stp	x19, x20, [sp, #16]
   29284:	mov	x20, x2
   29288:	mvn	x2, x3
   2928c:	stp	x21, x22, [sp, #32]
   29290:	cmp	x20, x2
   29294:	stp	x23, x24, [sp, #48]
   29298:	stp	x25, x26, [sp, #64]
   2929c:	b.hi	29660 <PyInit__decimal@@Base+0xd420>  // b.pmore
   292a0:	mov	x22, x0
   292a4:	add	x0, x20, x3
   292a8:	str	x0, [x4]
   292ac:	mov	x24, x1
   292b0:	mov	x21, x3
   292b4:	mov	x23, x4
   292b8:	cmp	xzr, x0, lsr #32
   292bc:	lsr	x1, x0, #32
   292c0:	b.ne	294f8 <PyInit__decimal@@Base+0xd2b8>  // b.any
   292c4:	mov	x1, x0
   292c8:	mov	w6, #0x10                  	// #16
   292cc:	mov	w2, #0x0                   	// #0
   292d0:	lsr	x5, x1, #16
   292d4:	cmp	x5, #0x0
   292d8:	csel	x5, x5, x1, ne  // ne = any
   292dc:	csel	w6, w6, w2, ne  // ne = any
   292e0:	lsr	x1, x5, #8
   292e4:	cmp	xzr, x5, lsr #8
   292e8:	b.eq	292f4 <PyInit__decimal@@Base+0xd0b4>  // b.none
   292ec:	add	w6, w6, #0x8
   292f0:	mov	x5, x1
   292f4:	cmp	xzr, x5, lsr #4
   292f8:	lsr	x1, x5, #4
   292fc:	b.eq	29308 <PyInit__decimal@@Base+0xd0c8>  // b.none
   29300:	add	w6, w6, #0x4
   29304:	mov	x5, x1
   29308:	cmp	xzr, x5, lsr #2
   2930c:	lsr	x1, x5, #2
   29310:	b.eq	2931c <PyInit__decimal@@Base+0xd0dc>  // b.none
   29314:	add	w6, w6, #0x2
   29318:	mov	x5, x1
   2931c:	sub	w19, w6, #0x1
   29320:	cmp	xzr, x5, lsr #1
   29324:	add	w5, w19, w5
   29328:	csinc	w6, w5, w6, eq  // eq = none
   2932c:	cmp	x0, #0x400
   29330:	b.ls	29504 <PyInit__decimal@@Base+0xd2c4>  // b.plast
   29334:	mov	x1, #0x100000000           	// #4294967296
   29338:	cmp	x0, x1
   2933c:	b.hi	29550 <PyInit__decimal@@Base+0xd310>  // b.pmore
   29340:	mov	x19, #0x1                   	// #1
   29344:	lsl	x19, x19, x6
   29348:	cmp	x0, x19
   2934c:	b.eq	29364 <PyInit__decimal@@Base+0xd124>  // b.none
   29350:	lsr	x1, x19, #1
   29354:	add	x19, x19, x1
   29358:	cmp	x0, x19
   2935c:	b.ls	2956c <PyInit__decimal@@Base+0xd32c>  // b.plast
   29360:	add	x19, x19, x1
   29364:	mov	x0, x19
   29368:	mov	x1, #0x8                   	// #8
   2936c:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   29370:	mov	x25, x0
   29374:	cbz	x0, 29530 <PyInit__decimal@@Base+0xd2f0>
   29378:	mov	x0, x19
   2937c:	mov	x1, #0x8                   	// #8
   29380:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   29384:	mov	x26, x0
   29388:	cbz	x0, 295f4 <PyInit__decimal@@Base+0xd3b4>
   2938c:	mov	x0, x19
   29390:	mov	x1, #0x8                   	// #8
   29394:	stp	x27, x28, [sp, #80]
   29398:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   2939c:	mov	x27, x0
   293a0:	cbz	x0, 29668 <PyInit__decimal@@Base+0xd428>
   293a4:	lsl	x20, x20, #3
   293a8:	mov	x1, x22
   293ac:	mov	x2, x20
   293b0:	mov	x0, x25
   293b4:	bl	6470 <memcpy@plt>
   293b8:	mov	x2, x20
   293bc:	mov	x1, x22
   293c0:	mov	x0, x26
   293c4:	bl	6470 <memcpy@plt>
   293c8:	mov	x2, x20
   293cc:	mov	x1, x22
   293d0:	mov	x0, x27
   293d4:	bl	6470 <memcpy@plt>
   293d8:	cmp	x22, x24
   293dc:	b.eq	295a8 <PyInit__decimal@@Base+0xd368>  // b.none
   293e0:	mov	x0, x19
   293e4:	mov	x1, #0x8                   	// #8
   293e8:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   293ec:	mov	x20, x0
   293f0:	cbz	x0, 295ec <PyInit__decimal@@Base+0xd3ac>
   293f4:	lsl	x22, x21, #3
   293f8:	mov	x1, x24
   293fc:	mov	x2, x22
   29400:	bl	6470 <memcpy@plt>
   29404:	mov	x2, x19
   29408:	mov	x1, x20
   2940c:	mov	x0, x25
   29410:	mov	w3, #0x0                   	// #0
   29414:	bl	1f8a0 <PyInit__decimal@@Base+0x3660>
   29418:	cbz	w0, 29578 <PyInit__decimal@@Base+0xd338>
   2941c:	mov	x2, x22
   29420:	mov	x1, x24
   29424:	mov	x0, x20
   29428:	bl	6470 <memcpy@plt>
   2942c:	subs	x21, x19, x21
   29430:	b.eq	29624 <PyInit__decimal@@Base+0xd3e4>  // b.none
   29434:	lsl	x21, x21, #3
   29438:	add	x28, x20, x22
   2943c:	mov	x2, x21
   29440:	mov	w1, #0x0                   	// #0
   29444:	mov	x0, x28
   29448:	bl	6670 <memset@plt>
   2944c:	mov	x2, x19
   29450:	mov	x1, x20
   29454:	mov	x0, x26
   29458:	mov	w3, #0x1                   	// #1
   2945c:	bl	1f8a0 <PyInit__decimal@@Base+0x3660>
   29460:	cbz	w0, 29578 <PyInit__decimal@@Base+0xd338>
   29464:	mov	x2, x22
   29468:	mov	x1, x24
   2946c:	mov	x0, x20
   29470:	bl	6470 <memcpy@plt>
   29474:	mov	x2, x21
   29478:	mov	x0, x28
   2947c:	mov	w1, #0x0                   	// #0
   29480:	bl	6670 <memset@plt>
   29484:	mov	x2, x19
   29488:	mov	x1, x20
   2948c:	mov	x0, x27
   29490:	mov	w3, #0x2                   	// #2
   29494:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   29498:	bl	1f8a0 <PyInit__decimal@@Base+0x3660>
   2949c:	cbz	w0, 29650 <PyInit__decimal@@Base+0xd410>
   294a0:	ldr	x1, [x19, #1912]
   294a4:	mov	x0, x20
   294a8:	blr	x1
   294ac:	ldr	x3, [x23]
   294b0:	mov	x1, x26
   294b4:	mov	x0, x25
   294b8:	mov	x2, x27
   294bc:	bl	20d60 <PyInit__decimal@@Base+0x4b20>
   294c0:	ldr	x1, [x19, #1912]
   294c4:	mov	x0, x26
   294c8:	blr	x1
   294cc:	ldr	x1, [x19, #1912]
   294d0:	mov	x0, x27
   294d4:	blr	x1
   294d8:	mov	x0, x25
   294dc:	ldp	x19, x20, [sp, #16]
   294e0:	ldp	x21, x22, [sp, #32]
   294e4:	ldp	x23, x24, [sp, #48]
   294e8:	ldp	x25, x26, [sp, #64]
   294ec:	ldp	x27, x28, [sp, #80]
   294f0:	ldp	x29, x30, [sp], #96
   294f4:	ret
   294f8:	mov	w6, #0x30                  	// #48
   294fc:	mov	w2, #0x20                  	// #32
   29500:	b	292d0 <PyInit__decimal@@Base+0xd090>
   29504:	mov	x19, #0x1                   	// #1
   29508:	mov	x1, #0x8                   	// #8
   2950c:	lsl	x19, x19, x6
   29510:	cmp	x0, x19
   29514:	lsl	x0, x19, #1
   29518:	csel	x19, x0, x19, ne  // ne = any
   2951c:	mov	x0, x19
   29520:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   29524:	mov	x25, x0
   29528:	cbnz	x0, 29378 <PyInit__decimal@@Base+0xd138>
   2952c:	nop
   29530:	mov	x25, #0x0                   	// #0
   29534:	mov	x0, x25
   29538:	ldp	x19, x20, [sp, #16]
   2953c:	ldp	x21, x22, [sp, #32]
   29540:	ldp	x23, x24, [sp, #48]
   29544:	ldp	x25, x26, [sp, #64]
   29548:	ldp	x29, x30, [sp], #96
   2954c:	ret
   29550:	mov	x19, #0x180000000           	// #6442450944
   29554:	cmp	x0, x19
   29558:	b.ls	29364 <PyInit__decimal@@Base+0xd124>  // b.plast
   2955c:	mov	x19, #0x300000000           	// #12884901888
   29560:	cmp	x0, x19
   29564:	b.ls	29364 <PyInit__decimal@@Base+0xd124>  // b.plast
   29568:	b	29530 <PyInit__decimal@@Base+0xd2f0>
   2956c:	cmn	x19, #0x1
   29570:	b.ne	29364 <PyInit__decimal@@Base+0xd124>  // b.any
   29574:	b	29530 <PyInit__decimal@@Base+0xd2f0>
   29578:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   2957c:	mov	x0, x20
   29580:	ldr	x1, [x19, #1912]
   29584:	blr	x1
   29588:	ldr	x1, [x19, #1912]
   2958c:	mov	x0, x25
   29590:	mov	x25, #0x0                   	// #0
   29594:	blr	x1
   29598:	ldr	x1, [x19, #1912]
   2959c:	mov	x0, x26
   295a0:	blr	x1
   295a4:	b	294cc <PyInit__decimal@@Base+0xd28c>
   295a8:	mov	x1, x19
   295ac:	mov	x0, x25
   295b0:	mov	w2, #0x0                   	// #0
   295b4:	bl	20300 <PyInit__decimal@@Base+0x40c0>
   295b8:	cbz	w0, 295ec <PyInit__decimal@@Base+0xd3ac>
   295bc:	mov	x1, x19
   295c0:	mov	x0, x26
   295c4:	mov	w2, #0x1                   	// #1
   295c8:	bl	20300 <PyInit__decimal@@Base+0x40c0>
   295cc:	cbz	w0, 295ec <PyInit__decimal@@Base+0xd3ac>
   295d0:	mov	x1, x19
   295d4:	mov	x0, x27
   295d8:	mov	w2, #0x2                   	// #2
   295dc:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   295e0:	bl	20300 <PyInit__decimal@@Base+0x40c0>
   295e4:	cbnz	w0, 294ac <PyInit__decimal@@Base+0xd26c>
   295e8:	b	29588 <PyInit__decimal@@Base+0xd348>
   295ec:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   295f0:	b	29588 <PyInit__decimal@@Base+0xd348>
   295f4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   295f8:	mov	x0, x25
   295fc:	mov	x25, #0x0                   	// #0
   29600:	ldr	x1, [x1, #1912]
   29604:	blr	x1
   29608:	mov	x0, x25
   2960c:	ldp	x19, x20, [sp, #16]
   29610:	ldp	x21, x22, [sp, #32]
   29614:	ldp	x23, x24, [sp, #48]
   29618:	ldp	x25, x26, [sp, #64]
   2961c:	ldp	x29, x30, [sp], #96
   29620:	ret
   29624:	mov	x2, x19
   29628:	mov	x1, x20
   2962c:	mov	x0, x26
   29630:	mov	w3, #0x1                   	// #1
   29634:	bl	1f8a0 <PyInit__decimal@@Base+0x3660>
   29638:	cbz	w0, 29578 <PyInit__decimal@@Base+0xd338>
   2963c:	mov	x2, x22
   29640:	mov	x1, x24
   29644:	mov	x0, x20
   29648:	bl	6470 <memcpy@plt>
   2964c:	b	29484 <PyInit__decimal@@Base+0xd244>
   29650:	ldr	x1, [x19, #1912]
   29654:	mov	x0, x20
   29658:	blr	x1
   2965c:	b	29588 <PyInit__decimal@@Base+0xd348>
   29660:	stp	x27, x28, [sp, #80]
   29664:	bl	29170 <PyInit__decimal@@Base+0xcf30>
   29668:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   2966c:	mov	x0, x25
   29670:	mov	x25, #0x0                   	// #0
   29674:	ldr	x1, [x19, #1912]
   29678:	blr	x1
   2967c:	ldr	x1, [x19, #1912]
   29680:	mov	x0, x26
   29684:	blr	x1
   29688:	ldp	x27, x28, [sp, #80]
   2968c:	b	29534 <PyInit__decimal@@Base+0xd2f4>
   29690:	stp	x29, x30, [sp, #-160]!
   29694:	mov	x29, sp
   29698:	stp	x19, x20, [sp, #16]
   2969c:	mov	x20, x3
   296a0:	mov	x19, x4
   296a4:	stp	x21, x22, [sp, #32]
   296a8:	mov	x3, #0x180000000           	// #6442450944
   296ac:	mov	x21, x5
   296b0:	stp	x25, x26, [sp, #64]
   296b4:	cmp	x4, x3
   296b8:	mov	x25, x0
   296bc:	stp	x27, x28, [sp, #80]
   296c0:	mov	x22, x1
   296c4:	mov	x27, x2
   296c8:	b.hi	29738 <PyInit__decimal@@Base+0xd4f8>  // b.pmore
   296cc:	cmp	x5, #0xc0
   296d0:	b.ls	29808 <PyInit__decimal@@Base+0xd5c8>  // b.plast
   296d4:	mov	x1, x2
   296d8:	mov	x0, x22
   296dc:	add	x4, sp, #0x98
   296e0:	mov	x3, x5
   296e4:	mov	x2, x19
   296e8:	bl	29278 <PyInit__decimal@@Base+0xd038>
   296ec:	mov	x20, x0
   296f0:	mov	w0, #0x0                   	// #0
   296f4:	cbz	x20, 29720 <PyInit__decimal@@Base+0xd4e0>
   296f8:	add	x2, x19, x21
   296fc:	mov	x1, x20
   29700:	mov	x0, x25
   29704:	lsl	x2, x2, #3
   29708:	bl	6470 <memcpy@plt>
   2970c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   29710:	mov	x0, x20
   29714:	ldr	x1, [x1, #1912]
   29718:	blr	x1
   2971c:	mov	w0, #0x1                   	// #1
   29720:	ldp	x19, x20, [sp, #16]
   29724:	ldp	x21, x22, [sp, #32]
   29728:	ldp	x25, x26, [sp, #64]
   2972c:	ldp	x27, x28, [sp, #80]
   29730:	ldp	x29, x30, [sp], #160
   29734:	ret
   29738:	add	x0, x4, #0x1
   2973c:	stp	x23, x24, [sp, #48]
   29740:	lsr	x23, x0, #1
   29744:	str	x0, [sp, #104]
   29748:	sub	x19, x4, x23
   2974c:	cmp	x23, x5
   29750:	lsl	x24, x23, #3
   29754:	add	x26, x1, x24
   29758:	b.cc	29870 <PyInit__decimal@@Base+0xd630>  // b.lo, b.ul, b.last
   2975c:	cmp	x5, x19
   29760:	b.hi	29834 <PyInit__decimal@@Base+0xd5f4>  // b.pmore
   29764:	lsl	x28, x19, #4
   29768:	mov	w1, #0x0                   	// #0
   2976c:	add	x28, x28, #0x8
   29770:	mov	x0, x20
   29774:	mov	x2, x28
   29778:	bl	6670 <memset@plt>
   2977c:	mov	x5, x21
   29780:	mov	x4, x19
   29784:	add	x3, x20, x28
   29788:	mov	x1, x26
   2978c:	mov	x2, x27
   29790:	mov	x0, x20
   29794:	bl	29690 <PyInit__decimal@@Base+0xd450>
   29798:	cbz	w0, 297e8 <PyInit__decimal@@Base+0xd5a8>
   2979c:	add	x2, x21, x19
   297a0:	add	x0, x25, x24
   297a4:	mov	x1, x20
   297a8:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   297ac:	ldr	x0, [sp, #104]
   297b0:	mov	w1, #0x0                   	// #0
   297b4:	orr	x26, x0, #0x1
   297b8:	mov	x0, x20
   297bc:	lsl	x26, x26, #3
   297c0:	mov	x2, x26
   297c4:	bl	6670 <memset@plt>
   297c8:	mov	x5, x21
   297cc:	mov	x4, x23
   297d0:	add	x3, x20, x26
   297d4:	mov	x2, x27
   297d8:	mov	x1, x22
   297dc:	mov	x0, x20
   297e0:	bl	29690 <PyInit__decimal@@Base+0xd450>
   297e4:	cbnz	w0, 299d4 <PyInit__decimal@@Base+0xd794>
   297e8:	mov	w0, #0x0                   	// #0
   297ec:	ldp	x19, x20, [sp, #16]
   297f0:	ldp	x21, x22, [sp, #32]
   297f4:	ldp	x23, x24, [sp, #48]
   297f8:	ldp	x25, x26, [sp, #64]
   297fc:	ldp	x27, x28, [sp, #80]
   29800:	ldp	x29, x30, [sp], #160
   29804:	ret
   29808:	mov	x2, x1
   2980c:	mov	x3, x5
   29810:	mov	x1, x27
   29814:	bl	1d508 <PyInit__decimal@@Base+0x12c8>
   29818:	mov	w0, #0x1                   	// #1
   2981c:	ldp	x19, x20, [sp, #16]
   29820:	ldp	x21, x22, [sp, #32]
   29824:	ldp	x25, x26, [sp, #64]
   29828:	ldp	x27, x28, [sp, #80]
   2982c:	ldp	x29, x30, [sp], #160
   29830:	ret
   29834:	lsl	x28, x5, #4
   29838:	mov	w1, #0x0                   	// #0
   2983c:	add	x28, x28, #0x8
   29840:	mov	x0, x20
   29844:	mov	x2, x28
   29848:	bl	6670 <memset@plt>
   2984c:	mov	x5, x19
   29850:	mov	x4, x21
   29854:	add	x3, x20, x28
   29858:	mov	x2, x26
   2985c:	mov	x1, x27
   29860:	mov	x0, x20
   29864:	bl	29690 <PyInit__decimal@@Base+0xd450>
   29868:	cbnz	w0, 2979c <PyInit__decimal@@Base+0xd55c>
   2986c:	b	297e8 <PyInit__decimal@@Base+0xd5a8>
   29870:	mov	x2, x24
   29874:	mov	x0, x20
   29878:	bl	6470 <memcpy@plt>
   2987c:	str	xzr, [x20, x23, lsl #3]
   29880:	mov	x2, x19
   29884:	mov	x1, x26
   29888:	mov	x0, x20
   2988c:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   29890:	add	x4, x24, #0x8
   29894:	lsl	x28, x23, #4
   29898:	add	x4, x20, x4
   2989c:	mov	x2, x24
   298a0:	mov	x0, x4
   298a4:	mov	x1, x27
   298a8:	sub	x21, x21, x23
   298ac:	bl	6470 <memcpy@plt>
   298b0:	add	x1, x20, x28
   298b4:	mov	x3, x28
   298b8:	add	x7, x27, x24
   298bc:	add	x5, x23, #0x1
   298c0:	mov	x2, x21
   298c4:	stp	x5, x0, [sp, #112]
   298c8:	add	x28, x25, x24
   298cc:	str	xzr, [x1, #8]
   298d0:	mov	x1, x7
   298d4:	stp	x3, x7, [sp, #128]
   298d8:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   298dc:	ldp	x5, x4, [sp, #112]
   298e0:	mov	x0, x28
   298e4:	ldr	x3, [sp, #128]
   298e8:	mov	x1, x20
   298ec:	add	x3, x3, #0x10
   298f0:	mov	x2, x4
   298f4:	add	x3, x20, x3
   298f8:	mov	x4, x5
   298fc:	bl	29690 <PyInit__decimal@@Base+0xd450>
   29900:	cbz	w0, 297e8 <PyInit__decimal@@Base+0xd5a8>
   29904:	lsl	x2, x19, #4
   29908:	mov	w1, #0x0                   	// #0
   2990c:	add	x2, x2, #0x8
   29910:	mov	x0, x20
   29914:	str	x2, [sp, #112]
   29918:	bl	6670 <memset@plt>
   2991c:	ldr	x7, [sp, #136]
   29920:	mov	x5, x21
   29924:	ldr	x2, [sp, #112]
   29928:	mov	x4, x19
   2992c:	mov	x1, x26
   29930:	mov	x0, x20
   29934:	add	x3, x20, x2
   29938:	mov	x2, x7
   2993c:	bl	29690 <PyInit__decimal@@Base+0xd450>
   29940:	cbz	w0, 297e8 <PyInit__decimal@@Base+0xd5a8>
   29944:	add	x19, x21, x19
   29948:	add	x0, x28, x24
   2994c:	mov	x2, x19
   29950:	mov	x1, x20
   29954:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   29958:	mov	x2, x19
   2995c:	mov	x1, x20
   29960:	mov	x0, x28
   29964:	bl	1d3d8 <PyInit__decimal@@Base+0x1198>
   29968:	ldr	x2, [sp, #104]
   2996c:	mov	w1, #0x0                   	// #0
   29970:	mov	x0, x20
   29974:	orr	x19, x2, #0x1
   29978:	and	x26, x2, #0xfffffffffffffffe
   2997c:	lsl	x19, x19, #3
   29980:	mov	x2, x19
   29984:	bl	6670 <memset@plt>
   29988:	mov	x5, x23
   2998c:	mov	x4, x23
   29990:	add	x3, x20, x19
   29994:	mov	x2, x27
   29998:	mov	x1, x22
   2999c:	mov	x0, x20
   299a0:	bl	29690 <PyInit__decimal@@Base+0xd450>
   299a4:	cbz	w0, 297e8 <PyInit__decimal@@Base+0xd5a8>
   299a8:	mov	x0, x25
   299ac:	mov	x2, x26
   299b0:	mov	x1, x20
   299b4:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   299b8:	mov	x0, x28
   299bc:	mov	x2, x26
   299c0:	mov	x1, x20
   299c4:	bl	1d3d8 <PyInit__decimal@@Base+0x1198>
   299c8:	mov	w0, #0x1                   	// #1
   299cc:	ldp	x23, x24, [sp, #48]
   299d0:	b	29720 <PyInit__decimal@@Base+0xd4e0>
   299d4:	add	x2, x23, x21
   299d8:	mov	x0, x25
   299dc:	mov	x1, x20
   299e0:	bl	1d0b8 <PyInit__decimal@@Base+0xe78>
   299e4:	mov	w0, #0x1                   	// #1
   299e8:	ldp	x23, x24, [sp, #48]
   299ec:	b	29720 <PyInit__decimal@@Base+0xd4e0>
   299f0:	mov	x6, #0x435f                	// #17247
   299f4:	mov	x9, x0
   299f8:	movk	x6, #0xd79, lsl #16
   299fc:	mov	x11, x3
   29a00:	movk	x6, #0x35e5, lsl #32
   29a04:	mov	x8, x1
   29a08:	movk	x6, #0xd794, lsl #48
   29a0c:	umulh	x6, x4, x6
   29a10:	lsr	x6, x6, #4
   29a14:	add	x0, x6, x6, lsl #2
   29a18:	add	x3, x9, x6, lsl #3
   29a1c:	lsl	x0, x0, #2
   29a20:	sub	x0, x0, x6
   29a24:	subs	x4, x4, x0
   29a28:	b.eq	29a40 <PyInit__decimal@@Base+0xd800>  // b.none
   29a2c:	b	29a78 <PyInit__decimal@@Base+0xd838>
   29a30:	ldr	x1, [x3, x11, lsl #3]
   29a34:	ldr	x0, [x8, x11, lsl #3]
   29a38:	cmp	x1, x0
   29a3c:	b.ne	29a6c <PyInit__decimal@@Base+0xd82c>  // b.any
   29a40:	sub	x11, x11, #0x1
   29a44:	cmn	x11, #0x1
   29a48:	b.ne	29a30 <PyInit__decimal@@Base+0xd7f0>  // b.any
   29a4c:	b	29a58 <PyInit__decimal@@Base+0xd818>
   29a50:	ldr	x0, [x9, x6, lsl #3]
   29a54:	cbnz	x0, 29a70 <PyInit__decimal@@Base+0xd830>
   29a58:	sub	x6, x6, #0x1
   29a5c:	cmn	x6, #0x1
   29a60:	b.ne	29a50 <PyInit__decimal@@Base+0xd810>  // b.any
   29a64:	mov	w0, #0x0                   	// #0
   29a68:	ret
   29a6c:	b.cc	29f38 <PyInit__decimal@@Base+0xdcf8>  // b.lo, b.ul, b.last
   29a70:	mov	w0, #0x1                   	// #1
   29a74:	ret
   29a78:	sub	x0, x11, #0x1
   29a7c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   29a80:	add	x5, x5, #0x180
   29a84:	stp	x29, x30, [sp, #-112]!
   29a88:	mov	x12, x2
   29a8c:	mov	x29, sp
   29a90:	ldr	x2, [x8, x0, lsl #3]
   29a94:	sub	x13, x12, #0x1
   29a98:	ldr	x10, [x5, x4, lsl #3]
   29a9c:	mov	x7, #0x13                  	// #19
   29aa0:	sub	x7, x7, x4
   29aa4:	add	x0, sp, #0x68
   29aa8:	add	x1, sp, #0x60
   29aac:	mov	x3, x7
   29ab0:	bl	28b38 <PyInit__decimal@@Base+0xc8f8>
   29ab4:	ldr	x0, [sp, #104]
   29ab8:	cbnz	x0, 29d38 <PyInit__decimal@@Base+0xdaf8>
   29abc:	cmp	x11, #0x1
   29ac0:	sub	x1, x11, #0x2
   29ac4:	ldr	x4, [sp, #96]
   29ac8:	b.eq	29f40 <PyInit__decimal@@Base+0xdd00>  // b.none
   29acc:	neg	x11, x11, lsl #3
   29ad0:	mov	x30, #0xd5bf                	// #54719
   29ad4:	add	x11, x11, x13, lsl #3
   29ad8:	mov	x18, #0xcefd                	// #52989
   29adc:	add	x0, x11, #0x10
   29ae0:	mov	x17, #0x5a53                	// #23123
   29ae4:	mov	x16, #0x34db                	// #13531
   29ae8:	mov	x15, #0x42bd                	// #17085
   29aec:	mov	x14, #0x7843                	// #30787
   29af0:	mov	x13, #0xf7cf                	// #63439
   29af4:	mov	x12, #0x594b                	// #22859
   29af8:	mov	x11, #0xf5c3                	// #62915
   29afc:	stp	x19, x20, [sp, #16]
   29b00:	mov	x20, #0x2233                	// #8755
   29b04:	movk	x20, #0x5bd4, lsl #16
   29b08:	stp	x21, x22, [sp, #32]
   29b0c:	mov	x22, #0xaaff                	// #43775
   29b10:	movk	x22, #0xcb24, lsl #16
   29b14:	stp	x23, x24, [sp, #48]
   29b18:	mov	x24, #0xcd81                	// #52609
   29b1c:	movk	x24, #0x5095, lsl #16
   29b20:	stp	x25, x26, [sp, #64]
   29b24:	mov	x26, #0x385                 	// #901
   29b28:	movk	x26, #0x92ed, lsl #16
   29b2c:	mov	x25, #0xa000                	// #40960
   29b30:	mov	x23, #0x4000                	// #16384
   29b34:	mov	x21, #0xe800                	// #59392
   29b38:	mov	x19, #0x1000                	// #4096
   29b3c:	movk	x30, #0xbded, lsl #16
   29b40:	movk	x18, #0x8461, lsl #16
   29b44:	movk	x17, #0xa09b, lsl #16
   29b48:	movk	x16, #0xd7b6, lsl #16
   29b4c:	movk	x15, #0xe57a, lsl #16
   29b50:	movk	x14, #0x71b4, lsl #16
   29b54:	movk	x13, #0xe353, lsl #16
   29b58:	movk	x12, #0x3886, lsl #16
   29b5c:	movk	x11, #0x5c28, lsl #16
   29b60:	stp	x27, x28, [sp, #80]
   29b64:	mov	x28, #0x1b53                	// #6995
   29b68:	mov	x27, #0x5d8a0000            	// #1569325056
   29b6c:	movk	x28, #0xd519, lsl #16
   29b70:	movk	x27, #0x4578, lsl #32
   29b74:	movk	x26, #0x84d0, lsl #32
   29b78:	movk	x25, #0x4e72, lsl #16
   29b7c:	movk	x24, #0x4dc3, lsl #32
   29b80:	movk	x23, #0x107a, lsl #16
   29b84:	movk	x22, #0xff0b, lsl #32
   29b88:	movk	x21, #0x4876, lsl #16
   29b8c:	movk	x20, #0x3302, lsl #32
   29b90:	movk	x19, #0xd4a5, lsl #16
   29b94:	movk	x30, #0xfece, lsl #32
   29b98:	movk	x18, #0x7711, lsl #32
   29b9c:	movk	x17, #0xb82f, lsl #32
   29ba0:	movk	x16, #0xde82, lsl #32
   29ba4:	movk	x15, #0x94d5, lsl #32
   29ba8:	movk	x14, #0x5ac4, lsl #32
   29bac:	movk	x13, #0x9ba5, lsl #32
   29bb0:	movk	x12, #0xc5d6, lsl #32
   29bb4:	movk	x11, #0xc28f, lsl #32
   29bb8:	add	x0, x9, x0
   29bbc:	cmp	x7, #0x9
   29bc0:	movk	x28, #0x5c3b, lsl #32
   29bc4:	movk	x27, #0x163, lsl #48
   29bc8:	movk	x26, #0x384b, lsl #48
   29bcc:	movk	x25, #0x918, lsl #32
   29bd0:	movk	x24, #0xb42, lsl #48
   29bd4:	movk	x23, #0x5af3, lsl #32
   29bd8:	movk	x22, #0xafeb, lsl #48
   29bdc:	movk	x21, #0x17, lsl #32
   29be0:	movk	x20, #0x232f, lsl #48
   29be4:	movk	x19, #0xe8, lsl #32
   29be8:	movk	x30, #0xdbe6, lsl #48
   29bec:	movk	x18, #0xabcc, lsl #48
   29bf0:	movk	x17, #0x44, lsl #48
   29bf4:	movk	x16, #0x431b, lsl #48
   29bf8:	movk	x15, #0xd6bf, lsl #48
   29bfc:	movk	x14, #0xa7c, lsl #48
   29c00:	movk	x13, #0x20c4, lsl #48
   29c04:	movk	x12, #0x346d, lsl #48
   29c08:	movk	x11, #0x28f5, lsl #48
   29c0c:	ldr	x3, [x8, x1, lsl #3]
   29c10:	b.hi	29c7c <PyInit__decimal@@Base+0xda3c>  // b.pmore
   29c14:	nop
   29c18:	cmp	x7, #0x4
   29c1c:	b.hi	29cb4 <PyInit__decimal@@Base+0xda74>  // b.pmore
   29c20:	cmp	x7, #0x3
   29c24:	b.eq	29e10 <PyInit__decimal@@Base+0xdbd0>  // b.none
   29c28:	cmp	x7, #0x4
   29c2c:	b.eq	29dfc <PyInit__decimal@@Base+0xdbbc>  // b.none
   29c30:	cmp	x7, #0x2
   29c34:	b.eq	29de0 <PyInit__decimal@@Base+0xdba0>  // b.none
   29c38:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   29c3c:	movk	x2, #0xcccd
   29c40:	umulh	x2, x3, x2
   29c44:	lsr	x2, x2, #3
   29c48:	add	x5, x2, x2, lsl #2
   29c4c:	sub	x3, x3, x5, lsl #1
   29c50:	ldr	x5, [x0, x1, lsl #3]
   29c54:	madd	x2, x4, x10, x2
   29c58:	cmp	x5, x2
   29c5c:	b.ne	29d54 <PyInit__decimal@@Base+0xdb14>  // b.any
   29c60:	sub	x1, x1, #0x1
   29c64:	cmn	x1, #0x1
   29c68:	b.eq	29d74 <PyInit__decimal@@Base+0xdb34>  // b.none
   29c6c:	mov	x4, x3
   29c70:	cmp	x7, #0x9
   29c74:	ldr	x3, [x8, x1, lsl #3]
   29c78:	b.ls	29c18 <PyInit__decimal@@Base+0xd9d8>  // b.plast
   29c7c:	cmp	x7, #0xe
   29c80:	b.hi	29cec <PyInit__decimal@@Base+0xdaac>  // b.pmore
   29c84:	cmp	x7, #0xd
   29c88:	b.eq	29dd0 <PyInit__decimal@@Base+0xdb90>  // b.none
   29c8c:	cmp	x7, #0xe
   29c90:	b.eq	29dc0 <PyInit__decimal@@Base+0xdb80>  // b.none
   29c94:	cmp	x7, #0xb
   29c98:	b.eq	29eb4 <PyInit__decimal@@Base+0xdc74>  // b.none
   29c9c:	cmp	x7, #0xc
   29ca0:	b.ne	29e98 <PyInit__decimal@@Base+0xdc58>  // b.any
   29ca4:	umulh	x2, x3, x20
   29ca8:	lsr	x2, x2, #37
   29cac:	msub	x3, x2, x19, x3
   29cb0:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29cb4:	cmp	x7, #0x8
   29cb8:	b.eq	29e80 <PyInit__decimal@@Base+0xdc40>  // b.none
   29cbc:	cmp	x7, #0x9
   29cc0:	b.eq	29e64 <PyInit__decimal@@Base+0xdc24>  // b.none
   29cc4:	cmp	x7, #0x6
   29cc8:	b.eq	29e4c <PyInit__decimal@@Base+0xdc0c>  // b.none
   29ccc:	cmp	x7, #0x7
   29cd0:	b.ne	29e30 <PyInit__decimal@@Base+0xdbf0>  // b.any
   29cd4:	umulh	x2, x3, x15
   29cd8:	mov	x5, #0x9680                	// #38528
   29cdc:	movk	x5, #0x98, lsl #16
   29ce0:	lsr	x2, x2, #23
   29ce4:	msub	x3, x2, x5, x3
   29ce8:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29cec:	cmp	x7, #0x11
   29cf0:	b.eq	29f1c <PyInit__decimal@@Base+0xdcdc>  // b.none
   29cf4:	cmp	x7, #0x12
   29cf8:	b.eq	29ef0 <PyInit__decimal@@Base+0xdcb0>  // b.none
   29cfc:	cmp	x7, #0x10
   29d00:	b.eq	29ec4 <PyInit__decimal@@Base+0xdc84>  // b.none
   29d04:	mov	x5, #0xeac3                	// #60099
   29d08:	lsr	x2, x3, #15
   29d0c:	movk	x5, #0xf3dc, lsl #16
   29d10:	movk	x5, #0x4075, lsl #32
   29d14:	movk	x5, #0x2, lsl #48
   29d18:	umulh	x2, x2, x5
   29d1c:	mov	x5, #0x8000                	// #32768
   29d20:	movk	x5, #0xa4c6, lsl #16
   29d24:	movk	x5, #0x8d7e, lsl #32
   29d28:	lsr	x2, x2, #20
   29d2c:	movk	x5, #0x3, lsl #48
   29d30:	msub	x3, x2, x5, x3
   29d34:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29d38:	ldr	x1, [x9, x13, lsl #3]
   29d3c:	cmp	x0, x1
   29d40:	b.eq	29f30 <PyInit__decimal@@Base+0xdcf0>  // b.none
   29d44:	b.hi	29d6c <PyInit__decimal@@Base+0xdb2c>  // b.pmore
   29d48:	mov	w0, #0x1                   	// #1
   29d4c:	ldp	x29, x30, [sp], #112
   29d50:	ret
   29d54:	ldp	x19, x20, [sp, #16]
   29d58:	ldp	x21, x22, [sp, #32]
   29d5c:	ldp	x23, x24, [sp, #48]
   29d60:	ldp	x25, x26, [sp, #64]
   29d64:	ldp	x27, x28, [sp, #80]
   29d68:	b.cs	29d48 <PyInit__decimal@@Base+0xdb08>  // b.hs, b.nlast
   29d6c:	mov	w0, #0xffffffff            	// #-1
   29d70:	b	29d4c <PyInit__decimal@@Base+0xdb0c>
   29d74:	ldp	x19, x20, [sp, #16]
   29d78:	ldp	x21, x22, [sp, #32]
   29d7c:	ldp	x23, x24, [sp, #48]
   29d80:	ldp	x25, x26, [sp, #64]
   29d84:	ldp	x27, x28, [sp, #80]
   29d88:	mul	x5, x10, x3
   29d8c:	ldr	x0, [x9, x6, lsl #3]
   29d90:	cmp	x0, x5
   29d94:	b.eq	29dac <PyInit__decimal@@Base+0xdb6c>  // b.none
   29d98:	b.cs	29d48 <PyInit__decimal@@Base+0xdb08>  // b.hs, b.nlast
   29d9c:	mov	w0, #0xffffffff            	// #-1
   29da0:	b	29d4c <PyInit__decimal@@Base+0xdb0c>
   29da4:	ldr	x0, [x9, x6, lsl #3]
   29da8:	cbnz	x0, 29d48 <PyInit__decimal@@Base+0xdb08>
   29dac:	sub	x6, x6, #0x1
   29db0:	cmn	x6, #0x1
   29db4:	b.ne	29da4 <PyInit__decimal@@Base+0xdb64>  // b.any
   29db8:	mov	w0, #0x0                   	// #0
   29dbc:	b	29d4c <PyInit__decimal@@Base+0xdb0c>
   29dc0:	umulh	x2, x3, x24
   29dc4:	lsr	x2, x2, #42
   29dc8:	msub	x3, x2, x23, x3
   29dcc:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29dd0:	umulh	x2, x3, x26
   29dd4:	lsr	x2, x2, #41
   29dd8:	msub	x3, x2, x25, x3
   29ddc:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29de0:	lsr	x2, x3, #2
   29de4:	umulh	x2, x2, x11
   29de8:	lsr	x2, x2, #2
   29dec:	add	x5, x2, x2, lsl #1
   29df0:	add	x5, x2, x5, lsl #3
   29df4:	sub	x3, x3, x5, lsl #2
   29df8:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29dfc:	umulh	x2, x3, x12
   29e00:	mov	x5, #0x2710                	// #10000
   29e04:	lsr	x2, x2, #11
   29e08:	msub	x3, x2, x5, x3
   29e0c:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29e10:	lsr	x2, x3, #3
   29e14:	umulh	x2, x2, x13
   29e18:	lsr	x2, x2, #4
   29e1c:	lsl	x5, x2, #5
   29e20:	sub	x5, x5, x2
   29e24:	add	x5, x2, x5, lsl #2
   29e28:	sub	x3, x3, x5, lsl #3
   29e2c:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29e30:	lsr	x2, x3, #5
   29e34:	mov	x5, #0x86a0                	// #34464
   29e38:	movk	x5, #0x1, lsl #16
   29e3c:	umulh	x2, x2, x14
   29e40:	lsr	x2, x2, #7
   29e44:	msub	x3, x2, x5, x3
   29e48:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29e4c:	umulh	x2, x3, x16
   29e50:	mov	x5, #0x4240                	// #16960
   29e54:	movk	x5, #0xf, lsl #16
   29e58:	lsr	x2, x2, #18
   29e5c:	msub	x3, x2, x5, x3
   29e60:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29e64:	lsr	x2, x3, #9
   29e68:	mov	x5, #0xca00                	// #51712
   29e6c:	movk	x5, #0x3b9a, lsl #16
   29e70:	umulh	x2, x2, x17
   29e74:	lsr	x2, x2, #11
   29e78:	msub	x3, x2, x5, x3
   29e7c:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29e80:	umulh	x2, x3, x18
   29e84:	mov	x5, #0xe100                	// #57600
   29e88:	movk	x5, #0x5f5, lsl #16
   29e8c:	lsr	x2, x2, #26
   29e90:	msub	x3, x2, x5, x3
   29e94:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29e98:	umulh	x2, x3, x30
   29e9c:	mov	x5, #0xe400                	// #58368
   29ea0:	movk	x5, #0x540b, lsl #16
   29ea4:	movk	x5, #0x2, lsl #32
   29ea8:	lsr	x2, x2, #33
   29eac:	msub	x3, x2, x5, x3
   29eb0:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29eb4:	umulh	x2, x3, x22
   29eb8:	lsr	x2, x2, #36
   29ebc:	msub	x3, x2, x21, x3
   29ec0:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29ec4:	mov	x2, #0x7857                	// #30807
   29ec8:	mov	x5, #0x6fc10000            	// #1874919424
   29ecc:	movk	x2, #0xb113, lsl #16
   29ed0:	movk	x5, #0x86f2, lsl #32
   29ed4:	movk	x2, #0x652f, lsl #32
   29ed8:	movk	x5, #0x23, lsl #48
   29edc:	movk	x2, #0x39a5, lsl #48
   29ee0:	umulh	x2, x3, x2
   29ee4:	lsr	x2, x2, #51
   29ee8:	msub	x3, x2, x5, x3
   29eec:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29ef0:	mov	x5, #0x490f                	// #18703
   29ef4:	lsr	x2, x3, #18
   29ef8:	movk	x5, #0x7747, lsl #16
   29efc:	movk	x5, #0x49c9, lsl #32
   29f00:	umulh	x2, x2, x5
   29f04:	mov	x5, #0xa7640000            	// #2808348672
   29f08:	movk	x5, #0xb6b3, lsl #32
   29f0c:	movk	x5, #0xde0, lsl #48
   29f10:	lsr	x2, x2, #24
   29f14:	msub	x3, x2, x5, x3
   29f18:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29f1c:	lsr	x2, x3, #17
   29f20:	umulh	x2, x2, x28
   29f24:	lsr	x2, x2, #22
   29f28:	msub	x3, x2, x27, x3
   29f2c:	b	29c50 <PyInit__decimal@@Base+0xda10>
   29f30:	sub	x13, x12, #0x2
   29f34:	b	29abc <PyInit__decimal@@Base+0xd87c>
   29f38:	mov	w0, #0xffffffff            	// #-1
   29f3c:	ret
   29f40:	mov	x3, x4
   29f44:	b	29d88 <PyInit__decimal@@Base+0xdb48>
   29f48:	ldr	x3, [x0, #8]
   29f4c:	ldr	x6, [x1, #8]
   29f50:	ldr	x5, [x0, #24]
   29f54:	cmp	x3, x6
   29f58:	b.eq	29fac <PyInit__decimal@@Base+0xdd6c>  // b.none
   29f5c:	sub	x4, x3, x6
   29f60:	cmp	x4, #0x0
   29f64:	ldr	x2, [x1, #24]
   29f68:	ldr	x7, [x0, #40]
   29f6c:	ldr	x0, [x1, #40]
   29f70:	b.le	29f94 <PyInit__decimal@@Base+0xdd54>
   29f74:	stp	x29, x30, [sp, #-16]!
   29f78:	mov	x3, x5
   29f7c:	mov	x1, x7
   29f80:	mov	x29, sp
   29f84:	bl	299f0 <PyInit__decimal@@Base+0xd7b0>
   29f88:	neg	w0, w0
   29f8c:	ldp	x29, x30, [sp], #16
   29f90:	ret
   29f94:	sub	x4, x6, x3
   29f98:	mov	x1, x0
   29f9c:	mov	x3, x2
   29fa0:	mov	x0, x7
   29fa4:	mov	x2, x5
   29fa8:	b	299f0 <PyInit__decimal@@Base+0xd7b0>
   29fac:	subs	x2, x5, #0x1
   29fb0:	b.mi	29fe8 <PyInit__decimal@@Base+0xdda8>  // b.first
   29fb4:	ldr	x4, [x0, #40]
   29fb8:	ldr	x3, [x1, #40]
   29fbc:	b	29fc8 <PyInit__decimal@@Base+0xdd88>
   29fc0:	cmn	x2, #0x1
   29fc4:	b.eq	29fe8 <PyInit__decimal@@Base+0xdda8>  // b.none
   29fc8:	ldr	x1, [x4, x2, lsl #3]
   29fcc:	ldr	x0, [x3, x2, lsl #3]
   29fd0:	sub	x2, x2, #0x1
   29fd4:	cmp	x1, x0
   29fd8:	b.eq	29fc0 <PyInit__decimal@@Base+0xdd80>  // b.none
   29fdc:	mov	w0, #0x1                   	// #1
   29fe0:	cneg	w0, w0, cc  // cc = lo, ul, last
   29fe4:	ret
   29fe8:	mov	w0, #0x0                   	// #0
   29fec:	ret
   29ff0:	cmp	x0, x1
   29ff4:	b.eq	2a084 <PyInit__decimal@@Base+0xde44>  // b.none
   29ff8:	ldrb	w5, [x0]
   29ffc:	ldrb	w4, [x1]
   2a000:	and	w4, w4, #0x2
   2a004:	tbnz	w5, #1, 2a03c <PyInit__decimal@@Base+0xddfc>
   2a008:	cbnz	w4, 2a090 <PyInit__decimal@@Base+0xde50>
   2a00c:	ldr	x5, [x0, #24]
   2a010:	ldr	x6, [x0, #40]
   2a014:	ldr	x4, [x1, #24]
   2a018:	add	x5, x6, x5, lsl #3
   2a01c:	ldr	x6, [x1, #40]
   2a020:	ldur	x5, [x5, #-8]
   2a024:	add	x4, x6, x4, lsl #3
   2a028:	ldur	x4, [x4, #-8]
   2a02c:	cbnz	x5, 2a048 <PyInit__decimal@@Base+0xde08>
   2a030:	cmp	x4, #0x0
   2a034:	csetm	w0, ne  // ne = any
   2a038:	ret
   2a03c:	cmp	w4, #0x0
   2a040:	cset	w0, eq  // eq = none
   2a044:	ret
   2a048:	cbz	x4, 2a07c <PyInit__decimal@@Base+0xde3c>
   2a04c:	ldp	x5, x3, [x0, #8]
   2a050:	ldp	x4, x2, [x1, #8]
   2a054:	add	x3, x5, x3
   2a058:	sub	x5, x3, #0x1
   2a05c:	add	x2, x4, x2
   2a060:	cmp	x3, x2
   2a064:	sub	x2, x2, #0x1
   2a068:	b.eq	2a08c <PyInit__decimal@@Base+0xde4c>  // b.none
   2a06c:	cmp	x5, x2
   2a070:	mov	w0, #0xffffffff            	// #-1
   2a074:	cneg	w0, w0, ge  // ge = tcont
   2a078:	ret
   2a07c:	mov	w0, #0x1                   	// #1
   2a080:	ret
   2a084:	mov	w0, #0x0                   	// #0
   2a088:	ret
   2a08c:	b	29f48 <PyInit__decimal@@Base+0xdd08>
   2a090:	mov	w0, #0xffffffff            	// #-1
   2a094:	ret
   2a098:	cmp	x0, x1
   2a09c:	b.eq	2a178 <PyInit__decimal@@Base+0xdf38>  // b.none
   2a0a0:	stp	x29, x30, [sp, #-32]!
   2a0a4:	mov	x29, sp
   2a0a8:	str	x19, [sp, #16]
   2a0ac:	mov	x19, x0
   2a0b0:	ldrb	w3, [x1]
   2a0b4:	ldrb	w4, [x0]
   2a0b8:	and	w5, w3, #0x2
   2a0bc:	tbz	w4, #1, 2a0e8 <PyInit__decimal@@Base+0xdea8>
   2a0c0:	and	w4, w4, #0x1
   2a0c4:	and	w3, w3, #0x1
   2a0c8:	neg	w0, w4
   2a0cc:	sub	w3, w3, w4
   2a0d0:	cmp	w5, #0x0
   2a0d4:	lsl	w0, w0, #1
   2a0d8:	csinc	w0, w3, w0, ne  // ne = any
   2a0dc:	ldr	x19, [sp, #16]
   2a0e0:	ldp	x29, x30, [sp], #32
   2a0e4:	ret
   2a0e8:	cbnz	w5, 2a180 <PyInit__decimal@@Base+0xdf40>
   2a0ec:	ldr	x6, [x0, #24]
   2a0f0:	ldr	x7, [x0, #40]
   2a0f4:	ldr	x5, [x1, #24]
   2a0f8:	add	x6, x7, x6, lsl #3
   2a0fc:	ldr	x7, [x1, #40]
   2a100:	ldur	x6, [x6, #-8]
   2a104:	add	x5, x7, x5, lsl #3
   2a108:	ldur	x5, [x5, #-8]
   2a10c:	cbz	x6, 2a15c <PyInit__decimal@@Base+0xdf1c>
   2a110:	and	w4, w4, #0x1
   2a114:	cbz	x5, 2a19c <PyInit__decimal@@Base+0xdf5c>
   2a118:	and	w3, w3, #0x1
   2a11c:	cmp	w3, w4
   2a120:	b.ne	2a194 <PyInit__decimal@@Base+0xdf54>  // b.any
   2a124:	ldp	x5, x6, [x0, #8]
   2a128:	ldp	x4, x2, [x1, #8]
   2a12c:	add	x5, x5, x6
   2a130:	sub	x6, x5, #0x1
   2a134:	add	x2, x4, x2
   2a138:	cmp	x2, x5
   2a13c:	sub	x2, x2, #0x1
   2a140:	b.eq	2a1ac <PyInit__decimal@@Base+0xdf6c>  // b.none
   2a144:	neg	w3, w3
   2a148:	cmp	x2, x6
   2a14c:	lsl	w0, w3, #1
   2a150:	add	w3, w0, #0x1
   2a154:	csinv	w0, w3, w0, le
   2a158:	b	2a0dc <PyInit__decimal@@Base+0xde9c>
   2a15c:	sbfx	x3, x3, #0, #1
   2a160:	cmp	x5, #0x0
   2a164:	ldr	x19, [sp, #16]
   2a168:	mvn	w3, w3, lsl #1
   2a16c:	csel	w0, w3, wzr, ne  // ne = any
   2a170:	ldp	x29, x30, [sp], #32
   2a174:	ret
   2a178:	mov	w0, #0x0                   	// #0
   2a17c:	ret
   2a180:	sbfx	x3, x3, #0, #1
   2a184:	ldr	x19, [sp, #16]
   2a188:	mvn	w0, w3, lsl #1
   2a18c:	ldp	x29, x30, [sp], #32
   2a190:	ret
   2a194:	sub	w0, w3, w4
   2a198:	b	2a0dc <PyInit__decimal@@Base+0xde9c>
   2a19c:	neg	w3, w4
   2a1a0:	lsl	w3, w3, #1
   2a1a4:	add	w0, w3, #0x1
   2a1a8:	b	2a0dc <PyInit__decimal@@Base+0xde9c>
   2a1ac:	bl	29f48 <PyInit__decimal@@Base+0xdd08>
   2a1b0:	ldrb	w3, [x19]
   2a1b4:	sbfx	x3, x3, #0, #1
   2a1b8:	lsl	w3, w3, #1
   2a1bc:	madd	w0, w3, w0, w0
   2a1c0:	b	2a0dc <PyInit__decimal@@Base+0xde9c>
   2a1c4:	nop
   2a1c8:	stp	x29, x30, [sp, #-80]!
   2a1cc:	mov	x29, sp
   2a1d0:	stp	x19, x20, [sp, #16]
   2a1d4:	mov	x19, x0
   2a1d8:	mov	x20, x2
   2a1dc:	stp	x21, x22, [sp, #32]
   2a1e0:	mov	x21, x3
   2a1e4:	and	w22, w1, #0xff
   2a1e8:	ldrb	w4, [x0]
   2a1ec:	ldr	x0, [x0, #40]
   2a1f0:	tbnz	w4, #5, 2a210 <PyInit__decimal@@Base+0xdfd0>
   2a1f4:	ldr	x2, [x19, #32]
   2a1f8:	str	x23, [sp, #48]
   2a1fc:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   2a200:	ldr	x1, [x23, #1880]
   2a204:	cmp	x2, x1
   2a208:	b.gt	2a348 <PyInit__decimal@@Base+0xe108>
   2a20c:	ldr	x23, [sp, #48]
   2a210:	mov	x6, #0x89e80000            	// #2313682944
   2a214:	movk	x6, #0x2304, lsl #32
   2a218:	and	w4, w4, #0xfffffff0
   2a21c:	movk	x6, #0x8ac7, lsl #48
   2a220:	cmp	x20, x6
   2a224:	cset	x5, cs  // cs = hs, nlast
   2a228:	orr	w4, w22, w4
   2a22c:	add	x1, x5, #0x1
   2a230:	strb	w4, [x19]
   2a234:	str	x21, [x19, #8]
   2a238:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2a23c:	msub	x6, x5, x6, x20
   2a240:	add	x2, x0, x1, lsl #3
   2a244:	add	x3, x4, #0x180
   2a248:	stp	x6, x5, [x0]
   2a24c:	str	x1, [x19, #24]
   2a250:	ldr	x1, [x3, #72]
   2a254:	ldur	x0, [x2, #-8]
   2a258:	cmp	x0, x1
   2a25c:	b.cs	2a2bc <PyInit__decimal@@Base+0xe07c>  // b.hs, b.nlast
   2a260:	ldr	x1, [x3, #32]
   2a264:	cmp	x0, x1
   2a268:	b.cs	2a28c <PyInit__decimal@@Base+0xe04c>  // b.hs, b.nlast
   2a26c:	ldr	x1, [x3, #16]
   2a270:	cmp	x0, x1
   2a274:	b.cs	2a378 <PyInit__decimal@@Base+0xe138>  // b.hs, b.nlast
   2a278:	ldr	x1, [x3, #8]
   2a27c:	cmp	x0, x1
   2a280:	cset	x2, cs  // cs = hs, nlast
   2a284:	add	x2, x2, #0x1
   2a288:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a28c:	ldr	x1, [x3, #48]
   2a290:	cmp	x0, x1
   2a294:	b.cc	2a3b4 <PyInit__decimal@@Base+0xe174>  // b.lo, b.ul, b.last
   2a298:	ldr	x1, [x3, #64]
   2a29c:	mov	x2, #0x9                   	// #9
   2a2a0:	cmp	x0, x1
   2a2a4:	b.cs	2a2f4 <PyInit__decimal@@Base+0xe0b4>  // b.hs, b.nlast
   2a2a8:	ldr	x1, [x3, #56]
   2a2ac:	cmp	x0, x1
   2a2b0:	cset	x2, cs  // cs = hs, nlast
   2a2b4:	add	x2, x2, #0x7
   2a2b8:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a2bc:	ldr	x1, [x3, #112]
   2a2c0:	cmp	x0, x1
   2a2c4:	b.cs	2a31c <PyInit__decimal@@Base+0xe0dc>  // b.hs, b.nlast
   2a2c8:	ldr	x1, [x3, #88]
   2a2cc:	cmp	x0, x1
   2a2d0:	b.cc	2a3a0 <PyInit__decimal@@Base+0xe160>  // b.lo, b.ul, b.last
   2a2d4:	ldr	x1, [x3, #104]
   2a2d8:	mov	x2, #0xe                   	// #14
   2a2dc:	cmp	x0, x1
   2a2e0:	b.cs	2a2f4 <PyInit__decimal@@Base+0xe0b4>  // b.hs, b.nlast
   2a2e4:	ldr	x1, [x3, #96]
   2a2e8:	cmp	x0, x1
   2a2ec:	cset	x2, cs  // cs = hs, nlast
   2a2f0:	add	x2, x2, #0xc
   2a2f4:	lsl	x1, x5, #2
   2a2f8:	add	x1, x1, x5
   2a2fc:	ldp	x21, x22, [sp, #32]
   2a300:	lsl	x1, x1, #2
   2a304:	sub	x1, x1, x5
   2a308:	add	x1, x1, x2
   2a30c:	str	x1, [x19, #16]
   2a310:	ldp	x19, x20, [sp, #16]
   2a314:	ldp	x29, x30, [sp], #80
   2a318:	ret
   2a31c:	ldr	x1, [x3, #144]
   2a320:	cmp	x0, x1
   2a324:	b.cs	2a38c <PyInit__decimal@@Base+0xe14c>  // b.hs, b.nlast
   2a328:	ldr	x1, [x3, #128]
   2a32c:	cmp	x0, x1
   2a330:	b.cs	2a3c8 <PyInit__decimal@@Base+0xe188>  // b.hs, b.nlast
   2a334:	ldr	x1, [x3, #120]
   2a338:	cmp	x0, x1
   2a33c:	cset	x2, cs  // cs = hs, nlast
   2a340:	add	x2, x2, #0xf
   2a344:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a348:	add	x3, sp, #0x4f
   2a34c:	mov	x2, #0x8                   	// #8
   2a350:	strb	wzr, [sp, #79]
   2a354:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2a358:	ldrb	w1, [sp, #79]
   2a35c:	str	x0, [x19, #40]
   2a360:	cbnz	w1, 2a36c <PyInit__decimal@@Base+0xe12c>
   2a364:	ldr	x1, [x23, #1880]
   2a368:	str	x1, [x19, #32]
   2a36c:	ldrb	w4, [x19]
   2a370:	ldr	x23, [sp, #48]
   2a374:	b	2a210 <PyInit__decimal@@Base+0xdfd0>
   2a378:	ldr	x1, [x3, #24]
   2a37c:	cmp	x0, x1
   2a380:	cset	x2, cs  // cs = hs, nlast
   2a384:	add	x2, x2, #0x3
   2a388:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a38c:	ldr	x1, [x3, #152]
   2a390:	cmp	x0, x1
   2a394:	cset	x2, cs  // cs = hs, nlast
   2a398:	add	x2, x2, #0x13
   2a39c:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a3a0:	ldr	x1, [x3, #80]
   2a3a4:	cmp	x0, x1
   2a3a8:	cset	x2, cs  // cs = hs, nlast
   2a3ac:	add	x2, x2, #0xa
   2a3b0:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a3b4:	ldr	x1, [x3, #40]
   2a3b8:	cmp	x0, x1
   2a3bc:	cset	x2, cs  // cs = hs, nlast
   2a3c0:	add	x2, x2, #0x5
   2a3c4:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a3c8:	ldr	x1, [x3, #136]
   2a3cc:	cmp	x0, x1
   2a3d0:	cset	x2, cs  // cs = hs, nlast
   2a3d4:	add	x2, x2, #0x11
   2a3d8:	b	2a2f4 <PyInit__decimal@@Base+0xe0b4>
   2a3dc:	nop
   2a3e0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2a3e4:	add	x0, x0, #0x750
   2a3e8:	ret
   2a3ec:	nop
   2a3f0:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2a3f4:	add	x2, x2, #0x180
   2a3f8:	mov	x1, x0
   2a3fc:	ldr	x0, [x2, #72]
   2a400:	cmp	x0, x1
   2a404:	b.ls	2a434 <PyInit__decimal@@Base+0xe1f4>  // b.plast
   2a408:	ldr	x0, [x2, #32]
   2a40c:	cmp	x0, x1
   2a410:	b.ls	2a49c <PyInit__decimal@@Base+0xe25c>  // b.plast
   2a414:	ldr	x0, [x2, #16]
   2a418:	cmp	x0, x1
   2a41c:	b.ls	2a4e0 <PyInit__decimal@@Base+0xe2a0>  // b.plast
   2a420:	ldr	x0, [x2, #8]
   2a424:	cmp	x0, x1
   2a428:	cset	w0, ls  // ls = plast
   2a42c:	add	w0, w0, #0x1
   2a430:	ret
   2a434:	ldr	x0, [x2, #112]
   2a438:	cmp	x0, x1
   2a43c:	b.ls	2a470 <PyInit__decimal@@Base+0xe230>  // b.plast
   2a440:	ldr	x0, [x2, #88]
   2a444:	cmp	x0, x1
   2a448:	b.hi	2a4f4 <PyInit__decimal@@Base+0xe2b4>  // b.pmore
   2a44c:	ldr	x3, [x2, #104]
   2a450:	mov	w0, #0xe                   	// #14
   2a454:	cmp	x3, x1
   2a458:	b.ls	2a430 <PyInit__decimal@@Base+0xe1f0>  // b.plast
   2a45c:	ldr	x0, [x2, #96]
   2a460:	cmp	x0, x1
   2a464:	cset	w0, ls  // ls = plast
   2a468:	add	w0, w0, #0xc
   2a46c:	ret
   2a470:	ldr	x0, [x2, #144]
   2a474:	cmp	x0, x1
   2a478:	b.ls	2a4cc <PyInit__decimal@@Base+0xe28c>  // b.plast
   2a47c:	ldr	x0, [x2, #128]
   2a480:	cmp	x0, x1
   2a484:	b.ls	2a51c <PyInit__decimal@@Base+0xe2dc>  // b.plast
   2a488:	ldr	x0, [x2, #120]
   2a48c:	cmp	x0, x1
   2a490:	cset	w0, ls  // ls = plast
   2a494:	add	w0, w0, #0xf
   2a498:	ret
   2a49c:	ldr	x0, [x2, #48]
   2a4a0:	cmp	x0, x1
   2a4a4:	b.hi	2a508 <PyInit__decimal@@Base+0xe2c8>  // b.pmore
   2a4a8:	ldr	x3, [x2, #64]
   2a4ac:	mov	w0, #0x9                   	// #9
   2a4b0:	cmp	x3, x1
   2a4b4:	b.ls	2a430 <PyInit__decimal@@Base+0xe1f0>  // b.plast
   2a4b8:	ldr	x0, [x2, #56]
   2a4bc:	cmp	x0, x1
   2a4c0:	cset	w0, ls  // ls = plast
   2a4c4:	add	w0, w0, #0x7
   2a4c8:	ret
   2a4cc:	ldr	x0, [x2, #152]
   2a4d0:	cmp	x0, x1
   2a4d4:	cset	w0, ls  // ls = plast
   2a4d8:	add	w0, w0, #0x13
   2a4dc:	ret
   2a4e0:	ldr	x0, [x2, #24]
   2a4e4:	cmp	x0, x1
   2a4e8:	cset	w0, ls  // ls = plast
   2a4ec:	add	w0, w0, #0x3
   2a4f0:	ret
   2a4f4:	ldr	x0, [x2, #80]
   2a4f8:	cmp	x0, x1
   2a4fc:	cset	w0, ls  // ls = plast
   2a500:	add	w0, w0, #0xa
   2a504:	ret
   2a508:	ldr	x0, [x2, #40]
   2a50c:	cmp	x0, x1
   2a510:	cset	w0, ls  // ls = plast
   2a514:	add	w0, w0, #0x5
   2a518:	ret
   2a51c:	ldr	x0, [x2, #136]
   2a520:	cmp	x0, x1
   2a524:	cset	w0, ls  // ls = plast
   2a528:	add	w0, w0, #0x11
   2a52c:	ret
   2a530:	ldp	x1, x0, [x0, #8]
   2a534:	add	x0, x1, x0
   2a538:	sub	x0, x0, #0x1
   2a53c:	ret
   2a540:	ldr	x1, [x0, #16]
   2a544:	ldr	x2, [x0]
   2a548:	add	x0, x1, #0x1
   2a54c:	sub	x0, x0, x2
   2a550:	ret
   2a554:	nop
   2a558:	ldp	x2, x1, [x0]
   2a55c:	add	x0, x1, #0x1
   2a560:	sub	x0, x0, x2
   2a564:	ret
   2a568:	ldr	x1, [x0, #24]
   2a56c:	ldr	x0, [x0, #40]
   2a570:	add	x0, x0, x1, lsl #3
   2a574:	ldur	x0, [x0, #-8]
   2a578:	ret
   2a57c:	nop
   2a580:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2a584:	add	x2, x3, #0x180
   2a588:	ldr	x1, [x2, #72]
   2a58c:	cmp	x0, x1
   2a590:	b.cs	2a5f0 <PyInit__decimal@@Base+0xe3b0>  // b.hs, b.nlast
   2a594:	ldr	x1, [x2, #32]
   2a598:	cmp	x0, x1
   2a59c:	b.cs	2a5c4 <PyInit__decimal@@Base+0xe384>  // b.hs, b.nlast
   2a5a0:	ldr	x1, [x2, #16]
   2a5a4:	cmp	x0, x1
   2a5a8:	b.cs	2a650 <PyInit__decimal@@Base+0xe410>  // b.hs, b.nlast
   2a5ac:	ldr	x1, [x2, #8]
   2a5b0:	ldr	x2, [x3, #384]
   2a5b4:	cmp	x0, x1
   2a5b8:	csel	x1, x2, x1, cc  // cc = lo, ul, last
   2a5bc:	udiv	x0, x0, x1
   2a5c0:	ret
   2a5c4:	ldr	x3, [x2, #48]
   2a5c8:	cmp	x0, x3
   2a5cc:	b.cc	2a688 <PyInit__decimal@@Base+0xe448>  // b.lo, b.ul, b.last
   2a5d0:	ldr	x1, [x2, #64]
   2a5d4:	cmp	x0, x1
   2a5d8:	b.cs	2a620 <PyInit__decimal@@Base+0xe3e0>  // b.hs, b.nlast
   2a5dc:	ldr	x1, [x2, #56]
   2a5e0:	cmp	x0, x1
   2a5e4:	csel	x1, x1, x3, cs  // cs = hs, nlast
   2a5e8:	udiv	x0, x0, x1
   2a5ec:	ret
   2a5f0:	ldr	x3, [x2, #112]
   2a5f4:	cmp	x0, x3
   2a5f8:	b.cs	2a628 <PyInit__decimal@@Base+0xe3e8>  // b.hs, b.nlast
   2a5fc:	ldr	x3, [x2, #88]
   2a600:	cmp	x0, x3
   2a604:	b.cc	2a678 <PyInit__decimal@@Base+0xe438>  // b.lo, b.ul, b.last
   2a608:	ldr	x1, [x2, #104]
   2a60c:	cmp	x0, x1
   2a610:	b.cs	2a620 <PyInit__decimal@@Base+0xe3e0>  // b.hs, b.nlast
   2a614:	ldr	x1, [x2, #96]
   2a618:	cmp	x0, x1
   2a61c:	csel	x1, x1, x3, cs  // cs = hs, nlast
   2a620:	udiv	x0, x0, x1
   2a624:	ret
   2a628:	ldr	x1, [x2, #144]
   2a62c:	cmp	x0, x1
   2a630:	b.cs	2a664 <PyInit__decimal@@Base+0xe424>  // b.hs, b.nlast
   2a634:	ldr	x1, [x2, #128]
   2a638:	cmp	x0, x1
   2a63c:	b.cs	2a698 <PyInit__decimal@@Base+0xe458>  // b.hs, b.nlast
   2a640:	ldr	x1, [x2, #120]
   2a644:	cmp	x0, x1
   2a648:	csel	x1, x1, x3, cs  // cs = hs, nlast
   2a64c:	b	2a620 <PyInit__decimal@@Base+0xe3e0>
   2a650:	ldr	x2, [x2, #24]
   2a654:	cmp	x0, x2
   2a658:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   2a65c:	udiv	x0, x0, x1
   2a660:	ret
   2a664:	ldr	x2, [x2, #152]
   2a668:	cmp	x0, x2
   2a66c:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   2a670:	udiv	x0, x0, x1
   2a674:	ret
   2a678:	ldr	x2, [x2, #80]
   2a67c:	cmp	x0, x2
   2a680:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   2a684:	b	2a620 <PyInit__decimal@@Base+0xe3e0>
   2a688:	ldr	x2, [x2, #40]
   2a68c:	cmp	x0, x2
   2a690:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   2a694:	b	2a620 <PyInit__decimal@@Base+0xe3e0>
   2a698:	ldr	x2, [x2, #136]
   2a69c:	cmp	x0, x2
   2a6a0:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   2a6a4:	b	2a620 <PyInit__decimal@@Base+0xe3e0>
   2a6a8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2a6ac:	movk	x1, #0xcccd
   2a6b0:	umulh	x1, x0, x1
   2a6b4:	lsr	x1, x1, #3
   2a6b8:	add	x1, x1, x1, lsl #2
   2a6bc:	sub	x0, x0, x1, lsl #1
   2a6c0:	ret
   2a6c4:	nop
   2a6c8:	mov	x1, #0x9436                	// #37942
   2a6cc:	movk	x1, #0x50d7, lsl #16
   2a6d0:	movk	x1, #0x435e, lsl #32
   2a6d4:	movk	x1, #0xd79, lsl #48
   2a6d8:	smulh	x1, x0, x1
   2a6dc:	sub	x1, x1, x0, asr #63
   2a6e0:	add	x2, x1, x1, lsl #2
   2a6e4:	lsl	x2, x2, #2
   2a6e8:	sub	x2, x2, x1
   2a6ec:	cmp	x0, x2
   2a6f0:	cinc	x0, x1, ne  // ne = any
   2a6f4:	ret
   2a6f8:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2a6fc:	add	x2, x2, #0x180
   2a700:	cmp	x0, #0x0
   2a704:	cneg	x1, x0, lt  // lt = tstop
   2a708:	ldr	x3, [x2, #72]
   2a70c:	cmp	x1, x3
   2a710:	b.cs	2a770 <PyInit__decimal@@Base+0xe530>  // b.hs, b.nlast
   2a714:	ldr	x0, [x2, #32]
   2a718:	cmp	x1, x0
   2a71c:	b.cs	2a740 <PyInit__decimal@@Base+0xe500>  // b.hs, b.nlast
   2a720:	ldr	x0, [x2, #16]
   2a724:	cmp	x1, x0
   2a728:	b.cs	2a7d8 <PyInit__decimal@@Base+0xe598>  // b.hs, b.nlast
   2a72c:	ldr	x0, [x2, #8]
   2a730:	cmp	x1, x0
   2a734:	cset	w0, cs  // cs = hs, nlast
   2a738:	add	w0, w0, #0x1
   2a73c:	ret
   2a740:	ldr	x0, [x2, #48]
   2a744:	cmp	x1, x0
   2a748:	b.cc	2a800 <PyInit__decimal@@Base+0xe5c0>  // b.lo, b.ul, b.last
   2a74c:	ldr	x3, [x2, #64]
   2a750:	mov	w0, #0x9                   	// #9
   2a754:	cmp	x1, x3
   2a758:	b.cs	2a73c <PyInit__decimal@@Base+0xe4fc>  // b.hs, b.nlast
   2a75c:	ldr	x0, [x2, #56]
   2a760:	cmp	x1, x0
   2a764:	cset	w0, cs  // cs = hs, nlast
   2a768:	add	w0, w0, #0x7
   2a76c:	ret
   2a770:	ldr	x0, [x2, #112]
   2a774:	cmp	x1, x0
   2a778:	b.cs	2a7ac <PyInit__decimal@@Base+0xe56c>  // b.hs, b.nlast
   2a77c:	ldr	x0, [x2, #88]
   2a780:	cmp	x1, x0
   2a784:	b.cc	2a814 <PyInit__decimal@@Base+0xe5d4>  // b.lo, b.ul, b.last
   2a788:	ldr	x3, [x2, #104]
   2a78c:	mov	w0, #0xe                   	// #14
   2a790:	cmp	x1, x3
   2a794:	b.cs	2a73c <PyInit__decimal@@Base+0xe4fc>  // b.hs, b.nlast
   2a798:	ldr	x0, [x2, #96]
   2a79c:	cmp	x1, x0
   2a7a0:	cset	w0, cs  // cs = hs, nlast
   2a7a4:	add	w0, w0, #0xc
   2a7a8:	ret
   2a7ac:	ldr	x0, [x2, #144]
   2a7b0:	cmp	x1, x0
   2a7b4:	b.cs	2a7ec <PyInit__decimal@@Base+0xe5ac>  // b.hs, b.nlast
   2a7b8:	ldr	x0, [x2, #128]
   2a7bc:	cmp	x1, x0
   2a7c0:	b.cs	2a828 <PyInit__decimal@@Base+0xe5e8>  // b.hs, b.nlast
   2a7c4:	ldr	x0, [x2, #120]
   2a7c8:	cmp	x1, x0
   2a7cc:	cset	w0, cs  // cs = hs, nlast
   2a7d0:	add	w0, w0, #0xf
   2a7d4:	ret
   2a7d8:	ldr	x0, [x2, #24]
   2a7dc:	cmp	x1, x0
   2a7e0:	cset	w0, cs  // cs = hs, nlast
   2a7e4:	add	w0, w0, #0x3
   2a7e8:	ret
   2a7ec:	ldr	x0, [x2, #152]
   2a7f0:	cmp	x1, x0
   2a7f4:	cset	w0, cs  // cs = hs, nlast
   2a7f8:	add	w0, w0, #0x13
   2a7fc:	ret
   2a800:	ldr	x0, [x2, #40]
   2a804:	cmp	x1, x0
   2a808:	cset	w0, cs  // cs = hs, nlast
   2a80c:	add	w0, w0, #0x5
   2a810:	ret
   2a814:	ldr	x0, [x2, #80]
   2a818:	cmp	x1, x0
   2a81c:	cset	w0, cs  // cs = hs, nlast
   2a820:	add	w0, w0, #0xa
   2a824:	ret
   2a828:	ldr	x0, [x2, #136]
   2a82c:	cmp	x1, x0
   2a830:	cset	w0, cs  // cs = hs, nlast
   2a834:	add	w0, w0, #0x11
   2a838:	ret
   2a83c:	nop
   2a840:	mov	w0, #0x1                   	// #1
   2a844:	ret
   2a848:	ldrb	w0, [x0]
   2a84c:	tst	w0, #0xe
   2a850:	cset	w0, eq  // eq = none
   2a854:	ret
   2a858:	ldrb	w0, [x0]
   2a85c:	and	w0, w0, #0x2
   2a860:	ret
   2a864:	nop
   2a868:	ldrb	w0, [x0]
   2a86c:	and	w0, w0, #0xc
   2a870:	ret
   2a874:	nop
   2a878:	ldrb	w0, [x0]
   2a87c:	and	w0, w0, #0x1
   2a880:	ret
   2a884:	nop
   2a888:	ldrb	w0, [x0]
   2a88c:	mvn	w0, w0
   2a890:	and	w0, w0, #0x1
   2a894:	ret
   2a898:	ldrb	w0, [x0]
   2a89c:	and	w0, w0, #0x4
   2a8a0:	ret
   2a8a4:	nop
   2a8a8:	ldrb	w0, [x0]
   2a8ac:	and	w0, w0, #0x1
   2a8b0:	ret
   2a8b4:	nop
   2a8b8:	ldrb	w0, [x0]
   2a8bc:	and	w0, w0, #0x8
   2a8c0:	ret
   2a8c4:	nop
   2a8c8:	ldrb	w0, [x0]
   2a8cc:	and	w0, w0, #0xe
   2a8d0:	ret
   2a8d4:	nop
   2a8d8:	ldrb	w1, [x0]
   2a8dc:	tst	w1, #0xe
   2a8e0:	b.ne	2a900 <PyInit__decimal@@Base+0xe6c0>  // b.any
   2a8e4:	ldr	x1, [x0, #24]
   2a8e8:	ldr	x0, [x0, #40]
   2a8ec:	add	x0, x0, x1, lsl #3
   2a8f0:	ldur	x0, [x0, #-8]
   2a8f4:	cmp	x0, #0x0
   2a8f8:	cset	w0, eq  // eq = none
   2a8fc:	ret
   2a900:	mov	w0, #0x0                   	// #0
   2a904:	ret
   2a908:	ldr	x1, [x0, #24]
   2a90c:	ldr	x0, [x0, #40]
   2a910:	add	x0, x0, x1, lsl #3
   2a914:	ldur	x0, [x0, #-8]
   2a918:	cmp	x0, #0x0
   2a91c:	cset	w0, eq  // eq = none
   2a920:	ret
   2a924:	nop
   2a928:	mov	x2, x0
   2a92c:	ldrb	w0, [x0]
   2a930:	tst	w0, #0xe
   2a934:	b.ne	2a96c <PyInit__decimal@@Base+0xe72c>  // b.any
   2a938:	ldr	x3, [x2, #24]
   2a93c:	mov	w0, #0x0                   	// #0
   2a940:	ldr	x4, [x2, #40]
   2a944:	add	x3, x4, x3, lsl #3
   2a948:	ldur	x3, [x3, #-8]
   2a94c:	cbz	x3, 2a968 <PyInit__decimal@@Base+0xe728>
   2a950:	ldp	x0, x2, [x2, #8]
   2a954:	ldr	x1, [x1, #16]
   2a958:	add	x0, x0, x2
   2a95c:	sub	x0, x0, #0x1
   2a960:	cmp	x0, x1
   2a964:	cset	w0, ge  // ge = tcont
   2a968:	ret
   2a96c:	mov	w0, #0x0                   	// #0
   2a970:	ret
   2a974:	nop
   2a978:	mov	x2, x0
   2a97c:	ldrb	w0, [x0]
   2a980:	tst	w0, #0xe
   2a984:	b.ne	2a9bc <PyInit__decimal@@Base+0xe77c>  // b.any
   2a988:	ldr	x3, [x2, #24]
   2a98c:	mov	w0, #0x0                   	// #0
   2a990:	ldr	x4, [x2, #40]
   2a994:	add	x3, x4, x3, lsl #3
   2a998:	ldur	x3, [x3, #-8]
   2a99c:	cbz	x3, 2a9b8 <PyInit__decimal@@Base+0xe778>
   2a9a0:	ldp	x0, x2, [x2, #8]
   2a9a4:	ldr	x1, [x1, #16]
   2a9a8:	add	x0, x0, x2
   2a9ac:	sub	x0, x0, #0x1
   2a9b0:	cmp	x0, x1
   2a9b4:	cset	w0, lt  // lt = tstop
   2a9b8:	ret
   2a9bc:	mov	w0, #0x0                   	// #0
   2a9c0:	ret
   2a9c4:	nop
   2a9c8:	and	w0, w0, #0x1
   2a9cc:	ret
   2a9d0:	ldr	x0, [x0, #40]
   2a9d4:	ldr	x0, [x0]
   2a9d8:	and	w0, w0, #0x1
   2a9dc:	ret
   2a9e0:	ldrb	w0, [x0]
   2a9e4:	and	w0, w0, #0x1
   2a9e8:	ret
   2a9ec:	nop
   2a9f0:	ldrb	w0, [x0]
   2a9f4:	sbfx	x0, x0, #0, #1
   2a9f8:	lsl	w0, w0, #1
   2a9fc:	add	w0, w0, #0x1
   2aa00:	ret
   2aa04:	nop
   2aa08:	mov	x0, #0xa                   	// #10
   2aa0c:	ret
   2aa10:	ldrb	w0, [x0]
   2aa14:	eor	x0, x0, #0x10
   2aa18:	ubfx	w0, w0, #4, #1
   2aa1c:	ret
   2aa20:	ldrb	w0, [x0]
   2aa24:	and	w0, w0, #0x10
   2aa28:	ret
   2aa2c:	nop
   2aa30:	ldrb	w0, [x0]
   2aa34:	tst	w0, #0xe0
   2aa38:	cset	w0, eq  // eq = none
   2aa3c:	ret
   2aa40:	ldrb	w0, [x0]
   2aa44:	and	w0, w0, #0x20
   2aa48:	ret
   2aa4c:	nop
   2aa50:	ldrb	w0, [x0]
   2aa54:	and	w0, w0, #0x40
   2aa58:	ret
   2aa5c:	nop
   2aa60:	ldrb	w0, [x0]
   2aa64:	and	w0, w0, #0x80
   2aa68:	ret
   2aa6c:	nop
   2aa70:	cbz	x1, 2aa80 <PyInit__decimal@@Base+0xe840>
   2aa74:	lsl	x2, x1, #3
   2aa78:	mov	w1, #0x0                   	// #0
   2aa7c:	b	6670 <memset@plt>
   2aa80:	ret
   2aa84:	nop
   2aa88:	stp	x29, x30, [sp, #-32]!
   2aa8c:	mov	x29, sp
   2aa90:	str	x19, [sp, #16]
   2aa94:	mov	x19, x0
   2aa98:	ldrb	w0, [x0]
   2aa9c:	tst	w0, #0xe0
   2aaa0:	b.ne	2aab8 <PyInit__decimal@@Base+0xe878>  // b.any
   2aaa4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2aaa8:	ldr	x0, [x19, #40]
   2aaac:	ldr	x1, [x1, #1912]
   2aab0:	blr	x1
   2aab4:	ldrb	w0, [x19]
   2aab8:	tbnz	w0, #4, 2aad8 <PyInit__decimal@@Base+0xe898>
   2aabc:	mov	x0, x19
   2aac0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2aac4:	ldr	x19, [sp, #16]
   2aac8:	ldp	x29, x30, [sp], #32
   2aacc:	ldr	x1, [x1, #1912]
   2aad0:	mov	x16, x1
   2aad4:	br	x16
   2aad8:	ldr	x19, [sp, #16]
   2aadc:	ldp	x29, x30, [sp], #32
   2aae0:	ret
   2aae4:	nop
   2aae8:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   2aaec:	ldr	x5, [x0, #32]
   2aaf0:	ldr	x3, [x3, #1880]
   2aaf4:	cmp	x3, x1
   2aaf8:	csel	x1, x3, x1, ge  // ge = tcont
   2aafc:	cmp	x5, x1
   2ab00:	b.eq	2ab14 <PyInit__decimal@@Base+0xe8d4>  // b.none
   2ab04:	ldrb	w3, [x0]
   2ab08:	tbz	w3, #5, 2ab1c <PyInit__decimal@@Base+0xe8dc>
   2ab0c:	cmp	x5, x1
   2ab10:	b.lt	2ab20 <PyInit__decimal@@Base+0xe8e0>  // b.tstop
   2ab14:	mov	w0, #0x1                   	// #1
   2ab18:	ret
   2ab1c:	b	28670 <PyInit__decimal@@Base+0xc430>
   2ab20:	b	28520 <PyInit__decimal@@Base+0xc2e0>
   2ab24:	nop
   2ab28:	stp	x29, x30, [sp, #-32]!
   2ab2c:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ab30:	mov	x29, sp
   2ab34:	ldr	x3, [x3, #1880]
   2ab38:	stp	x19, x20, [sp, #16]
   2ab3c:	mov	x20, x0
   2ab40:	ldr	x4, [x0, #32]
   2ab44:	cmp	x3, x1
   2ab48:	csel	x19, x3, x1, ge  // ge = tcont
   2ab4c:	cmp	x4, x19
   2ab50:	b.eq	2ab64 <PyInit__decimal@@Base+0xe924>  // b.none
   2ab54:	ldrb	w1, [x0]
   2ab58:	tbz	w1, #5, 2ab88 <PyInit__decimal@@Base+0xe948>
   2ab5c:	cmp	x4, x19
   2ab60:	b.lt	2ab98 <PyInit__decimal@@Base+0xe958>  // b.tstop
   2ab64:	ldr	x0, [x20, #40]
   2ab68:	cbz	x19, 2ab78 <PyInit__decimal@@Base+0xe938>
   2ab6c:	lsl	x2, x19, #3
   2ab70:	mov	w1, #0x0                   	// #0
   2ab74:	bl	6670 <memset@plt>
   2ab78:	mov	w0, #0x1                   	// #1
   2ab7c:	ldp	x19, x20, [sp, #16]
   2ab80:	ldp	x29, x30, [sp], #32
   2ab84:	ret
   2ab88:	mov	x1, x19
   2ab8c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2ab90:	cbnz	w0, 2ab64 <PyInit__decimal@@Base+0xe924>
   2ab94:	b	2ab7c <PyInit__decimal@@Base+0xe93c>
   2ab98:	mov	x1, x19
   2ab9c:	ldp	x19, x20, [sp, #16]
   2aba0:	ldp	x29, x30, [sp], #32
   2aba4:	b	285d0 <PyInit__decimal@@Base+0xc390>
   2aba8:	stp	x29, x30, [sp, #-48]!
   2abac:	mov	x29, sp
   2abb0:	stp	x19, x20, [sp, #16]
   2abb4:	mov	x19, x0
   2abb8:	ldrb	w0, [x0]
   2abbc:	tbnz	w0, #5, 2abd4 <PyInit__decimal@@Base+0xe994>
   2abc0:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
   2abc4:	ldr	x0, [x19, #32]
   2abc8:	ldr	x1, [x20, #1880]
   2abcc:	cmp	x0, x1
   2abd0:	b.gt	2abe0 <PyInit__decimal@@Base+0xe9a0>
   2abd4:	ldp	x19, x20, [sp, #16]
   2abd8:	ldp	x29, x30, [sp], #48
   2abdc:	ret
   2abe0:	ldr	x0, [x19, #40]
   2abe4:	add	x3, sp, #0x2f
   2abe8:	mov	x2, #0x8                   	// #8
   2abec:	strb	wzr, [sp, #47]
   2abf0:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2abf4:	str	x0, [x19, #40]
   2abf8:	ldrb	w1, [sp, #47]
   2abfc:	cbnz	w1, 2abd4 <PyInit__decimal@@Base+0xe994>
   2ac00:	ldr	x0, [x20, #1880]
   2ac04:	str	x0, [x19, #32]
   2ac08:	b	2abd4 <PyInit__decimal@@Base+0xe994>
   2ac0c:	nop
   2ac10:	stp	x29, x30, [sp, #-48]!
   2ac14:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ac18:	mov	x29, sp
   2ac1c:	ldr	x3, [x3, #1880]
   2ac20:	stp	x19, x20, [sp, #16]
   2ac24:	ldr	x5, [x0, #32]
   2ac28:	cmp	x3, x1
   2ac2c:	str	wzr, [sp, #44]
   2ac30:	csel	x1, x3, x1, ge  // ge = tcont
   2ac34:	cmp	x1, x5
   2ac38:	b.eq	2ac50 <PyInit__decimal@@Base+0xea10>  // b.none
   2ac3c:	mov	x20, x2
   2ac40:	ldrb	w2, [x0]
   2ac44:	tbz	w2, #5, 2ac64 <PyInit__decimal@@Base+0xea24>
   2ac48:	cmp	x1, x5
   2ac4c:	b.gt	2ac84 <PyInit__decimal@@Base+0xea44>
   2ac50:	mov	w19, #0x1                   	// #1
   2ac54:	mov	w0, w19
   2ac58:	ldp	x19, x20, [sp, #16]
   2ac5c:	ldp	x29, x30, [sp], #48
   2ac60:	ret
   2ac64:	add	x2, sp, #0x2c
   2ac68:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2ac6c:	mov	w19, w0
   2ac70:	cbnz	w19, 2ac50 <PyInit__decimal@@Base+0xea10>
   2ac74:	ldr	w1, [sp, #44]
   2ac78:	mov	x0, x20
   2ac7c:	bl	1f870 <PyInit__decimal@@Base+0x3630>
   2ac80:	b	2ac54 <PyInit__decimal@@Base+0xea14>
   2ac84:	add	x2, sp, #0x2c
   2ac88:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2ac8c:	mov	w19, w0
   2ac90:	cbnz	w19, 2ac50 <PyInit__decimal@@Base+0xea10>
   2ac94:	b	2ac74 <PyInit__decimal@@Base+0xea34>
   2ac98:	stp	x29, x30, [sp, #-64]!
   2ac9c:	adrp	x3, 65000 <PyInit__decimal@@Base+0x48dc0>
   2aca0:	mov	x29, sp
   2aca4:	ldr	x3, [x3, #1880]
   2aca8:	stp	x19, x20, [sp, #16]
   2acac:	mov	x20, x0
   2acb0:	ldr	x4, [x0, #32]
   2acb4:	cmp	x3, x1
   2acb8:	str	wzr, [sp, #60]
   2acbc:	csel	x19, x3, x1, ge  // ge = tcont
   2acc0:	cmp	x19, x4
   2acc4:	b.eq	2ace4 <PyInit__decimal@@Base+0xeaa4>  // b.none
   2acc8:	str	x21, [sp, #32]
   2accc:	mov	x21, x2
   2acd0:	ldrb	w1, [x0]
   2acd4:	tbz	w1, #5, 2ad08 <PyInit__decimal@@Base+0xeac8>
   2acd8:	cmp	x19, x4
   2acdc:	b.gt	2ad20 <PyInit__decimal@@Base+0xeae0>
   2ace0:	ldr	x21, [sp, #32]
   2ace4:	ldr	x0, [x20, #40]
   2ace8:	cbz	x19, 2acf8 <PyInit__decimal@@Base+0xeab8>
   2acec:	lsl	x2, x19, #3
   2acf0:	mov	w1, #0x0                   	// #0
   2acf4:	bl	6670 <memset@plt>
   2acf8:	mov	w0, #0x1                   	// #1
   2acfc:	ldp	x19, x20, [sp, #16]
   2ad00:	ldp	x29, x30, [sp], #64
   2ad04:	ret
   2ad08:	add	x2, sp, #0x3c
   2ad0c:	mov	x1, x19
   2ad10:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2ad14:	cbz	w0, 2ad30 <PyInit__decimal@@Base+0xeaf0>
   2ad18:	ldr	x21, [sp, #32]
   2ad1c:	b	2ace4 <PyInit__decimal@@Base+0xeaa4>
   2ad20:	mov	x1, x19
   2ad24:	add	x2, sp, #0x3c
   2ad28:	bl	285d0 <PyInit__decimal@@Base+0xc390>
   2ad2c:	cbnz	w0, 2ad50 <PyInit__decimal@@Base+0xeb10>
   2ad30:	ldr	w1, [sp, #60]
   2ad34:	mov	x0, x21
   2ad38:	bl	1f870 <PyInit__decimal@@Base+0x3630>
   2ad3c:	mov	w0, #0x0                   	// #0
   2ad40:	ldp	x19, x20, [sp, #16]
   2ad44:	ldr	x21, [sp, #32]
   2ad48:	ldp	x29, x30, [sp], #64
   2ad4c:	ret
   2ad50:	ldr	x21, [sp, #32]
   2ad54:	b	2acf8 <PyInit__decimal@@Base+0xeab8>
   2ad58:	ldr	x2, [x0, #24]
   2ad5c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2ad60:	ldr	x3, [x0, #40]
   2ad64:	add	x1, x1, #0x180
   2ad68:	add	x3, x3, x2, lsl #3
   2ad6c:	ldr	x4, [x1, #72]
   2ad70:	ldur	x3, [x3, #-8]
   2ad74:	cmp	x4, x3
   2ad78:	b.ls	2ae00 <PyInit__decimal@@Base+0xebc0>  // b.plast
   2ad7c:	ldr	x4, [x1, #32]
   2ad80:	cmp	x4, x3
   2ad84:	b.ls	2adbc <PyInit__decimal@@Base+0xeb7c>  // b.plast
   2ad88:	ldr	x4, [x1, #16]
   2ad8c:	cmp	x4, x3
   2ad90:	b.ls	2ae7c <PyInit__decimal@@Base+0xec3c>  // b.plast
   2ad94:	ldr	x1, [x1, #8]
   2ad98:	cmp	x1, x3
   2ad9c:	sub	x1, x2, #0x1
   2ada0:	cset	x4, ls  // ls = plast
   2ada4:	add	x2, x1, x1, lsl #2
   2ada8:	add	x4, x4, #0x1
   2adac:	add	x2, x4, x2, lsl #2
   2adb0:	sub	x1, x2, x1
   2adb4:	str	x1, [x0, #16]
   2adb8:	ret
   2adbc:	ldr	x4, [x1, #48]
   2adc0:	cmp	x4, x3
   2adc4:	b.hi	2aee0 <PyInit__decimal@@Base+0xeca0>  // b.pmore
   2adc8:	ldr	x5, [x1, #64]
   2adcc:	mov	x4, #0x9                   	// #9
   2add0:	cmp	x5, x3
   2add4:	b.ls	2ae38 <PyInit__decimal@@Base+0xebf8>  // b.plast
   2add8:	ldr	x1, [x1, #56]
   2addc:	cmp	x1, x3
   2ade0:	sub	x1, x2, #0x1
   2ade4:	cset	x4, ls  // ls = plast
   2ade8:	add	x2, x1, x1, lsl #2
   2adec:	add	x4, x4, #0x7
   2adf0:	add	x2, x4, x2, lsl #2
   2adf4:	sub	x1, x2, x1
   2adf8:	str	x1, [x0, #16]
   2adfc:	ret
   2ae00:	ldr	x4, [x1, #112]
   2ae04:	cmp	x4, x3
   2ae08:	b.ls	2ae50 <PyInit__decimal@@Base+0xec10>  // b.plast
   2ae0c:	ldr	x4, [x1, #88]
   2ae10:	cmp	x4, x3
   2ae14:	b.hi	2aecc <PyInit__decimal@@Base+0xec8c>  // b.pmore
   2ae18:	ldr	x5, [x1, #104]
   2ae1c:	mov	x4, #0xe                   	// #14
   2ae20:	cmp	x5, x3
   2ae24:	b.ls	2ae38 <PyInit__decimal@@Base+0xebf8>  // b.plast
   2ae28:	ldr	x1, [x1, #96]
   2ae2c:	cmp	x1, x3
   2ae30:	cset	x4, ls  // ls = plast
   2ae34:	add	x4, x4, #0xc
   2ae38:	sub	x1, x2, #0x1
   2ae3c:	add	x2, x1, x1, lsl #2
   2ae40:	add	x2, x4, x2, lsl #2
   2ae44:	sub	x1, x2, x1
   2ae48:	str	x1, [x0, #16]
   2ae4c:	ret
   2ae50:	ldr	x4, [x1, #144]
   2ae54:	cmp	x4, x3
   2ae58:	b.ls	2aea4 <PyInit__decimal@@Base+0xec64>  // b.plast
   2ae5c:	ldr	x4, [x1, #128]
   2ae60:	cmp	x4, x3
   2ae64:	b.ls	2aef4 <PyInit__decimal@@Base+0xecb4>  // b.plast
   2ae68:	ldr	x1, [x1, #120]
   2ae6c:	cmp	x1, x3
   2ae70:	cset	x4, ls  // ls = plast
   2ae74:	add	x4, x4, #0xf
   2ae78:	b	2ae38 <PyInit__decimal@@Base+0xebf8>
   2ae7c:	ldr	x1, [x1, #24]
   2ae80:	cmp	x1, x3
   2ae84:	sub	x1, x2, #0x1
   2ae88:	cset	x4, ls  // ls = plast
   2ae8c:	add	x2, x1, x1, lsl #2
   2ae90:	add	x4, x4, #0x3
   2ae94:	add	x2, x4, x2, lsl #2
   2ae98:	sub	x1, x2, x1
   2ae9c:	str	x1, [x0, #16]
   2aea0:	ret
   2aea4:	ldr	x1, [x1, #152]
   2aea8:	cmp	x1, x3
   2aeac:	sub	x1, x2, #0x1
   2aeb0:	cset	x4, ls  // ls = plast
   2aeb4:	add	x2, x1, x1, lsl #2
   2aeb8:	add	x4, x4, #0x13
   2aebc:	add	x2, x4, x2, lsl #2
   2aec0:	sub	x1, x2, x1
   2aec4:	str	x1, [x0, #16]
   2aec8:	ret
   2aecc:	ldr	x1, [x1, #80]
   2aed0:	cmp	x1, x3
   2aed4:	cset	x4, ls  // ls = plast
   2aed8:	add	x4, x4, #0xa
   2aedc:	b	2ae38 <PyInit__decimal@@Base+0xebf8>
   2aee0:	ldr	x1, [x1, #40]
   2aee4:	cmp	x1, x3
   2aee8:	cset	x4, ls  // ls = plast
   2aeec:	add	x4, x4, #0x5
   2aef0:	b	2ae38 <PyInit__decimal@@Base+0xebf8>
   2aef4:	ldr	x1, [x1, #136]
   2aef8:	cmp	x1, x3
   2aefc:	cset	x4, ls  // ls = plast
   2af00:	add	x4, x4, #0x11
   2af04:	b	2ae38 <PyInit__decimal@@Base+0xebf8>
   2af08:	stp	x29, x30, [sp, #-48]!
   2af0c:	mov	x29, sp
   2af10:	stp	x19, x20, [sp, #16]
   2af14:	mov	x20, x0
   2af18:	ldr	x0, [x0, #24]
   2af1c:	cmp	x0, #0x0
   2af20:	b.le	2b004 <PyInit__decimal@@Base+0xedc4>
   2af24:	ldr	x0, [x20, #16]
   2af28:	sub	x1, x1, w2, sxtw
   2af2c:	cmp	x1, x0
   2af30:	b.ge	2b004 <PyInit__decimal@@Base+0xedc4>  // b.tcont
   2af34:	cbz	x1, 2b010 <PyInit__decimal@@Base+0xedd0>
   2af38:	mov	x19, #0x9436                	// #37942
   2af3c:	movk	x19, #0x50d7, lsl #16
   2af40:	movk	x19, #0x435e, lsl #32
   2af44:	movk	x19, #0xd79, lsl #48
   2af48:	ldr	x0, [x20, #40]
   2af4c:	smulh	x19, x1, x19
   2af50:	sub	x19, x19, x1, asr #63
   2af54:	add	x2, x19, x19, lsl #2
   2af58:	lsl	x2, x2, #2
   2af5c:	sub	x2, x2, x19
   2af60:	subs	x1, x1, x2
   2af64:	b.eq	2af90 <PyInit__decimal@@Base+0xed50>  // b.none
   2af68:	add	x19, x19, #0x1
   2af6c:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2af70:	add	x3, x3, #0x180
   2af74:	lsl	x2, x19, #3
   2af78:	sub	x2, x2, #0x8
   2af7c:	ldr	x3, [x3, x1, lsl #3]
   2af80:	ldr	x4, [x0, x2]
   2af84:	udiv	x1, x4, x3
   2af88:	msub	x1, x1, x3, x4
   2af8c:	str	x1, [x0, x2]
   2af90:	sub	x1, x0, #0x8
   2af94:	cmp	x19, #0x1
   2af98:	b.gt	2afac <PyInit__decimal@@Base+0xed6c>
   2af9c:	b	2afb4 <PyInit__decimal@@Base+0xed74>
   2afa0:	sub	x19, x19, #0x1
   2afa4:	cmp	x19, #0x1
   2afa8:	b.eq	2afb4 <PyInit__decimal@@Base+0xed74>  // b.none
   2afac:	ldr	x0, [x1, x19, lsl #3]
   2afb0:	cbz	x0, 2afa0 <PyInit__decimal@@Base+0xed60>
   2afb4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2afb8:	ldr	x0, [x20, #32]
   2afbc:	ldr	x1, [x1, #1880]
   2afc0:	cmp	x1, x19
   2afc4:	csel	x1, x1, x19, ge  // ge = tcont
   2afc8:	cmp	x1, x0
   2afcc:	b.eq	2afe0 <PyInit__decimal@@Base+0xeda0>  // b.none
   2afd0:	ldrb	w2, [x20]
   2afd4:	tbz	w2, #5, 2b05c <PyInit__decimal@@Base+0xee1c>
   2afd8:	cmp	x1, x0
   2afdc:	b.gt	2b06c <PyInit__decimal@@Base+0xee2c>
   2afe0:	str	x19, [x20, #24]
   2afe4:	mov	x0, x20
   2afe8:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   2afec:	ldr	x0, [x20, #24]
   2aff0:	ldr	x1, [x20, #40]
   2aff4:	add	x0, x1, x0, lsl #3
   2aff8:	ldur	x0, [x0, #-8]
   2affc:	cbnz	x0, 2b004 <PyInit__decimal@@Base+0xedc4>
   2b000:	stp	xzr, xzr, [x20, #16]
   2b004:	ldp	x19, x20, [sp, #16]
   2b008:	ldp	x29, x30, [sp], #48
   2b00c:	ret
   2b010:	ldrb	w0, [x20]
   2b014:	tbnz	w0, #5, 2b000 <PyInit__decimal@@Base+0xedc0>
   2b018:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   2b01c:	ldr	x0, [x20, #32]
   2b020:	ldr	x1, [x19, #1880]
   2b024:	cmp	x0, x1
   2b028:	b.le	2b000 <PyInit__decimal@@Base+0xedc0>
   2b02c:	ldr	x0, [x20, #40]
   2b030:	add	x3, sp, #0x2c
   2b034:	mov	x2, #0x8                   	// #8
   2b038:	strb	wzr, [sp, #44]
   2b03c:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2b040:	str	x0, [x20, #40]
   2b044:	ldrb	w1, [sp, #44]
   2b048:	cbnz	w1, 2b000 <PyInit__decimal@@Base+0xedc0>
   2b04c:	ldr	x0, [x19, #1880]
   2b050:	stp	xzr, xzr, [x20, #16]
   2b054:	str	x0, [x20, #32]
   2b058:	b	2b004 <PyInit__decimal@@Base+0xedc4>
   2b05c:	add	x2, sp, #0x2c
   2b060:	mov	x0, x20
   2b064:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2b068:	b	2afe0 <PyInit__decimal@@Base+0xeda0>
   2b06c:	add	x2, sp, #0x2c
   2b070:	mov	x0, x20
   2b074:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2b078:	b	2afe0 <PyInit__decimal@@Base+0xeda0>
   2b07c:	nop
   2b080:	stp	x29, x30, [sp, #-48]!
   2b084:	mov	x29, sp
   2b088:	stp	x19, x20, [sp, #16]
   2b08c:	mov	x20, x0
   2b090:	ldr	x0, [x0, #24]
   2b094:	cmp	x0, #0x0
   2b098:	b.le	2b0ac <PyInit__decimal@@Base+0xee6c>
   2b09c:	ldr	x0, [x1]
   2b0a0:	ldr	x1, [x20, #16]
   2b0a4:	cmp	x1, x0
   2b0a8:	b.gt	2b0ec <PyInit__decimal@@Base+0xeeac>
   2b0ac:	ldrb	w1, [x20]
   2b0b0:	tst	w1, #0xe
   2b0b4:	b.ne	2b0e0 <PyInit__decimal@@Base+0xeea0>  // b.any
   2b0b8:	ldr	x0, [x20, #24]
   2b0bc:	ldr	x2, [x20, #40]
   2b0c0:	add	x0, x2, x0, lsl #3
   2b0c4:	ldur	x0, [x0, #-8]
   2b0c8:	cbnz	x0, 2b0e0 <PyInit__decimal@@Base+0xeea0>
   2b0cc:	ldr	x3, [x20, #8]
   2b0d0:	and	w1, w1, #0x1
   2b0d4:	mov	x0, x20
   2b0d8:	mov	x2, #0x0                   	// #0
   2b0dc:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   2b0e0:	ldp	x19, x20, [sp, #16]
   2b0e4:	ldp	x29, x30, [sp], #48
   2b0e8:	ret
   2b0ec:	mov	x19, #0x9436                	// #37942
   2b0f0:	movk	x19, #0x50d7, lsl #16
   2b0f4:	movk	x19, #0x435e, lsl #32
   2b0f8:	movk	x19, #0xd79, lsl #48
   2b0fc:	ldr	x1, [x20, #40]
   2b100:	smulh	x19, x0, x19
   2b104:	sub	x19, x19, x0, asr #63
   2b108:	add	x2, x19, x19, lsl #2
   2b10c:	lsl	x2, x2, #2
   2b110:	sub	x2, x2, x19
   2b114:	subs	x0, x0, x2
   2b118:	b.ne	2b188 <PyInit__decimal@@Base+0xef48>  // b.any
   2b11c:	sub	x1, x1, #0x8
   2b120:	cmp	x19, #0x1
   2b124:	b.gt	2b138 <PyInit__decimal@@Base+0xeef8>
   2b128:	b	2b140 <PyInit__decimal@@Base+0xef00>
   2b12c:	sub	x19, x19, #0x1
   2b130:	cmp	x19, #0x1
   2b134:	b.eq	2b140 <PyInit__decimal@@Base+0xef00>  // b.none
   2b138:	ldr	x0, [x1, x19, lsl #3]
   2b13c:	cbz	x0, 2b12c <PyInit__decimal@@Base+0xeeec>
   2b140:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2b144:	ldr	x0, [x20, #32]
   2b148:	ldr	x1, [x1, #1880]
   2b14c:	cmp	x1, x19
   2b150:	csel	x1, x1, x19, ge  // ge = tcont
   2b154:	cmp	x1, x0
   2b158:	b.eq	2b178 <PyInit__decimal@@Base+0xef38>  // b.none
   2b15c:	ldrb	w2, [x20]
   2b160:	tbz	w2, #5, 2b1b4 <PyInit__decimal@@Base+0xef74>
   2b164:	cmp	x1, x0
   2b168:	b.le	2b178 <PyInit__decimal@@Base+0xef38>
   2b16c:	add	x2, sp, #0x2c
   2b170:	mov	x0, x20
   2b174:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2b178:	str	x19, [x20, #24]
   2b17c:	mov	x0, x20
   2b180:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   2b184:	b	2b0ac <PyInit__decimal@@Base+0xee6c>
   2b188:	add	x19, x19, #0x1
   2b18c:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b190:	add	x3, x3, #0x180
   2b194:	lsl	x2, x19, #3
   2b198:	sub	x2, x2, #0x8
   2b19c:	ldr	x3, [x3, x0, lsl #3]
   2b1a0:	ldr	x4, [x1, x2]
   2b1a4:	udiv	x0, x4, x3
   2b1a8:	msub	x0, x0, x3, x4
   2b1ac:	str	x0, [x1, x2]
   2b1b0:	b	2b11c <PyInit__decimal@@Base+0xeedc>
   2b1b4:	add	x2, sp, #0x2c
   2b1b8:	mov	x0, x20
   2b1bc:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2b1c0:	b	2b178 <PyInit__decimal@@Base+0xef38>
   2b1c4:	nop
   2b1c8:	ldrb	w2, [x0]
   2b1cc:	and	w2, w2, #0xfffffffe
   2b1d0:	orr	w1, w1, w2
   2b1d4:	strb	w1, [x0]
   2b1d8:	ret
   2b1dc:	nop
   2b1e0:	ldrb	w2, [x1]
   2b1e4:	ldrb	w1, [x0]
   2b1e8:	bfxil	w1, w2, #0, #1
   2b1ec:	strb	w1, [x0]
   2b1f0:	ret
   2b1f4:	nop
   2b1f8:	ldrb	w1, [x0]
   2b1fc:	and	w1, w1, #0xfffffff1
   2b200:	orr	w1, w1, #0x2
   2b204:	strb	w1, [x0]
   2b208:	ret
   2b20c:	nop
   2b210:	ldrb	w1, [x0]
   2b214:	and	w1, w1, #0xfffffff1
   2b218:	orr	w1, w1, #0x4
   2b21c:	strb	w1, [x0]
   2b220:	ret
   2b224:	nop
   2b228:	ldrb	w1, [x0]
   2b22c:	and	w1, w1, #0xfffffff1
   2b230:	orr	w1, w1, #0x8
   2b234:	strb	w1, [x0]
   2b238:	ret
   2b23c:	nop
   2b240:	ldrb	w1, [x0]
   2b244:	orr	w1, w1, #0x1
   2b248:	strb	w1, [x0]
   2b24c:	ret
   2b250:	ldrb	w1, [x0]
   2b254:	and	w1, w1, #0xfffffffe
   2b258:	strb	w1, [x0]
   2b25c:	ret
   2b260:	ldrb	w1, [x0]
   2b264:	and	w1, w1, #0xffffffef
   2b268:	strb	w1, [x0]
   2b26c:	ret
   2b270:	ldrb	w1, [x0]
   2b274:	orr	w1, w1, #0x10
   2b278:	strb	w1, [x0]
   2b27c:	ret
   2b280:	ldrb	w1, [x0]
   2b284:	and	w1, w1, #0x1f
   2b288:	strb	w1, [x0]
   2b28c:	ret
   2b290:	ldrb	w1, [x0]
   2b294:	and	w1, w1, #0x1f
   2b298:	orr	w1, w1, #0x20
   2b29c:	strb	w1, [x0]
   2b2a0:	ret
   2b2a4:	nop
   2b2a8:	ldrb	w1, [x0]
   2b2ac:	and	w1, w1, #0x1f
   2b2b0:	orr	w1, w1, #0x40
   2b2b4:	strb	w1, [x0]
   2b2b8:	ret
   2b2bc:	nop
   2b2c0:	ldrb	w1, [x0]
   2b2c4:	and	w1, w1, #0x1f
   2b2c8:	orr	w1, w1, #0xffffff80
   2b2cc:	strb	w1, [x0]
   2b2d0:	ret
   2b2d4:	nop
   2b2d8:	ldrb	w1, [x0]
   2b2dc:	and	w1, w1, #0xfffffff0
   2b2e0:	strb	w1, [x0]
   2b2e4:	ret
   2b2e8:	ldrb	w2, [x0]
   2b2ec:	and	w2, w2, #0xfffffff0
   2b2f0:	orr	w1, w1, w2
   2b2f4:	strb	w1, [x0]
   2b2f8:	ret
   2b2fc:	nop
   2b300:	ldrb	w2, [x1]
   2b304:	ldrb	w1, [x0]
   2b308:	bfxil	w1, w2, #0, #4
   2b30c:	strb	w1, [x0]
   2b310:	ret
   2b314:	nop
   2b318:	stp	x29, x30, [sp, #-48]!
   2b31c:	mov	x29, sp
   2b320:	stp	x19, x20, [sp, #16]
   2b324:	mov	x19, x0
   2b328:	ldrb	w1, [x0]
   2b32c:	ldr	x0, [x0, #40]
   2b330:	tbnz	w1, #5, 2b348 <PyInit__decimal@@Base+0xf108>
   2b334:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
   2b338:	ldr	x2, [x19, #32]
   2b33c:	ldr	x1, [x20, #1880]
   2b340:	cmp	x2, x1
   2b344:	b.gt	2b364 <PyInit__decimal@@Base+0xf124>
   2b348:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   2b34c:	ldr	q0, [x1, #2176]
   2b350:	str	q0, [x19, #16]
   2b354:	ldp	x19, x20, [sp, #16]
   2b358:	str	xzr, [x0]
   2b35c:	ldp	x29, x30, [sp], #48
   2b360:	ret
   2b364:	add	x3, sp, #0x2f
   2b368:	mov	x2, #0x8                   	// #8
   2b36c:	strb	wzr, [sp, #47]
   2b370:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2b374:	ldrb	w1, [sp, #47]
   2b378:	str	x0, [x19, #40]
   2b37c:	cbnz	w1, 2b348 <PyInit__decimal@@Base+0xf108>
   2b380:	ldr	x1, [x20, #1880]
   2b384:	str	x1, [x19, #32]
   2b388:	b	2b348 <PyInit__decimal@@Base+0xf108>
   2b38c:	nop
   2b390:	stp	x29, x30, [sp, #-144]!
   2b394:	mov	x29, sp
   2b398:	stp	x19, x20, [sp, #16]
   2b39c:	mov	x19, x1
   2b3a0:	stp	x21, x22, [sp, #32]
   2b3a4:	mov	x22, x2
   2b3a8:	ldrb	w21, [x1]
   2b3ac:	tst	w21, #0xe
   2b3b0:	b.ne	2b4bc <PyInit__decimal@@Base+0xf27c>  // b.any
   2b3b4:	stp	x23, x24, [sp, #48]
   2b3b8:	mov	w1, w0
   2b3bc:	ldr	x23, [x19, #24]
   2b3c0:	ldr	x7, [x19, #40]
   2b3c4:	mov	x10, x23
   2b3c8:	lsl	x24, x23, #3
   2b3cc:	sub	x20, x24, #0x8
   2b3d0:	add	x9, x7, x20
   2b3d4:	ldr	x0, [x7, x20]
   2b3d8:	cbnz	x0, 2b3f0 <PyInit__decimal@@Base+0xf1b0>
   2b3dc:	ldp	x19, x20, [sp, #16]
   2b3e0:	ldp	x21, x22, [sp, #32]
   2b3e4:	ldp	x23, x24, [sp, #48]
   2b3e8:	ldp	x29, x30, [sp], #144
   2b3ec:	ret
   2b3f0:	cbnz	w1, 2b4b4 <PyInit__decimal@@Base+0xf274>
   2b3f4:	ldr	x8, [x19, #8]
   2b3f8:	str	x25, [sp, #64]
   2b3fc:	ldr	x25, [x19, #16]
   2b400:	add	x11, x25, x8
   2b404:	cmp	x11, #0x14
   2b408:	b.gt	2b48c <PyInit__decimal@@Base+0xf24c>
   2b40c:	tbnz	x8, #63, 2b4dc <PyInit__decimal@@Base+0xf29c>
   2b410:	mov	x1, #0x435f                	// #17247
   2b414:	mov	x3, #0x13                  	// #19
   2b418:	movk	x1, #0xd79, lsl #16
   2b41c:	movk	x1, #0x35e5, lsl #32
   2b420:	movk	x1, #0xd794, lsl #48
   2b424:	umulh	x1, x25, x1
   2b428:	lsr	x1, x1, #4
   2b42c:	add	x2, x1, x1, lsl #2
   2b430:	lsl	x2, x2, #2
   2b434:	sub	x1, x2, x1
   2b438:	subs	x1, x25, x1
   2b43c:	csel	x1, x1, x3, ne  // ne = any
   2b440:	cmp	x23, #0x1
   2b444:	b.le	2b584 <PyInit__decimal@@Base+0xf344>
   2b448:	sub	x5, x1, #0x1
   2b44c:	add	x3, x7, x24
   2b450:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b454:	add	x2, x2, #0x180
   2b458:	mov	x4, #0x14                  	// #20
   2b45c:	sub	x1, x4, x1
   2b460:	ldur	x3, [x3, #-16]
   2b464:	ldr	x4, [x2, x5, lsl #3]
   2b468:	ldr	x2, [x2, x1, lsl #3]
   2b46c:	udiv	x3, x3, x4
   2b470:	mul	x1, x0, x2
   2b474:	umulh	x2, x0, x2
   2b478:	adds	x0, x1, x3
   2b47c:	cset	x1, cs  // cs = hs, nlast
   2b480:	cmp	x2, #0x0
   2b484:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   2b488:	b.eq	2b584 <PyInit__decimal@@Base+0xf344>  // b.none
   2b48c:	ldr	w1, [x22]
   2b490:	mov	x0, #0xffffffffffffffff    	// #-1
   2b494:	ldp	x23, x24, [sp, #48]
   2b498:	orr	w1, w1, #0x100
   2b49c:	ldr	x25, [sp, #64]
   2b4a0:	str	w1, [x22]
   2b4a4:	ldp	x19, x20, [sp, #16]
   2b4a8:	ldp	x21, x22, [sp, #32]
   2b4ac:	ldp	x29, x30, [sp], #144
   2b4b0:	ret
   2b4b4:	tbz	w21, #0, 2b3f4 <PyInit__decimal@@Base+0xf1b4>
   2b4b8:	ldp	x23, x24, [sp, #48]
   2b4bc:	mov	x0, #0xffffffffffffffff    	// #-1
   2b4c0:	ldr	w1, [x22]
   2b4c4:	ldp	x19, x20, [sp, #16]
   2b4c8:	orr	w1, w1, #0x100
   2b4cc:	str	w1, [x22]
   2b4d0:	ldp	x21, x22, [sp, #32]
   2b4d4:	ldp	x29, x30, [sp], #144
   2b4d8:	ret
   2b4dc:	mov	x0, x19
   2b4e0:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2b4e4:	cbz	w0, 2b48c <PyInit__decimal@@Base+0xf24c>
   2b4e8:	mov	x0, #0x2                   	// #2
   2b4ec:	add	x4, sp, #0x50
   2b4f0:	mov	w1, #0x30                  	// #48
   2b4f4:	strb	w1, [sp, #96]
   2b4f8:	stp	x0, x4, [sp, #128]
   2b4fc:	ldr	x0, [x9]
   2b500:	cbz	x0, 2b5d8 <PyInit__decimal@@Base+0xf398>
   2b504:	neg	x3, x8
   2b508:	cmp	x25, x3
   2b50c:	b.le	2b5b8 <PyInit__decimal@@Base+0xf378>
   2b510:	mov	x23, #0x9436                	// #37942
   2b514:	mov	x0, x4
   2b518:	movk	x23, #0x50d7, lsl #16
   2b51c:	mov	x2, x10
   2b520:	movk	x23, #0x435e, lsl #32
   2b524:	mov	x1, x7
   2b528:	movk	x23, #0xd79, lsl #48
   2b52c:	str	x11, [sp, #112]
   2b530:	smulh	x23, x11, x23
   2b534:	sub	x23, x23, x11, asr #63
   2b538:	add	x4, x23, x23, lsl #2
   2b53c:	lsl	x4, x4, #2
   2b540:	sub	x4, x4, x23
   2b544:	cmp	x11, x4
   2b548:	cinc	x23, x23, ne  // ne = any
   2b54c:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2b550:	str	x23, [sp, #120]
   2b554:	ldrb	w0, [sp, #96]
   2b558:	lsl	x24, x23, #3
   2b55c:	ldrb	w1, [x19]
   2b560:	sub	x20, x24, #0x8
   2b564:	ldr	x25, [sp, #112]
   2b568:	ldr	x7, [sp, #136]
   2b56c:	bfxil	w0, w1, #0, #4
   2b570:	strb	w0, [sp, #96]
   2b574:	str	xzr, [sp, #104]
   2b578:	mov	x8, #0x0                   	// #0
   2b57c:	ldr	x0, [x7, x20]
   2b580:	b	2b410 <PyInit__decimal@@Base+0xf1d0>
   2b584:	cbz	x8, 2b5a0 <PyInit__decimal@@Base+0xf360>
   2b588:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b58c:	add	x1, x1, #0x180
   2b590:	ldr	x1, [x1, x8, lsl #3]
   2b594:	umulh	x2, x0, x1
   2b598:	mul	x0, x0, x1
   2b59c:	cbnz	x2, 2b48c <PyInit__decimal@@Base+0xf24c>
   2b5a0:	ldp	x19, x20, [sp, #16]
   2b5a4:	ldp	x21, x22, [sp, #32]
   2b5a8:	ldp	x23, x24, [sp, #48]
   2b5ac:	ldr	x25, [sp, #64]
   2b5b0:	ldp	x29, x30, [sp], #144
   2b5b4:	ret
   2b5b8:	mov	x1, x23
   2b5bc:	cset	w2, eq  // eq = none
   2b5c0:	mov	x0, x7
   2b5c4:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2b5c8:	add	x0, sp, #0x60
   2b5cc:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2b5d0:	ldr	x23, [sp, #120]
   2b5d4:	b	2b554 <PyInit__decimal@@Base+0xf314>
   2b5d8:	and	w21, w21, #0xf
   2b5dc:	mov	x1, x7
   2b5e0:	mov	x2, x24
   2b5e4:	mov	x0, x4
   2b5e8:	orr	w21, w21, #0x30
   2b5ec:	bl	6470 <memcpy@plt>
   2b5f0:	mov	x7, x0
   2b5f4:	strb	w21, [sp, #96]
   2b5f8:	stp	x25, x23, [sp, #112]
   2b5fc:	b	2b574 <PyInit__decimal@@Base+0xf334>
   2b600:	stp	x29, x30, [sp, #-48]!
   2b604:	mov	x3, #0x9436                	// #37942
   2b608:	movk	x3, #0x50d7, lsl #16
   2b60c:	mov	x29, sp
   2b610:	stp	x21, x22, [sp, #32]
   2b614:	mov	x21, x1
   2b618:	movk	x3, #0x435e, lsl #32
   2b61c:	stp	x19, x20, [sp, #16]
   2b620:	mov	x20, x0
   2b624:	movk	x3, #0xd79, lsl #48
   2b628:	ldr	x6, [x0, #32]
   2b62c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2b630:	ldr	x0, [x21]
   2b634:	ldr	x5, [x1, #1880]
   2b638:	smulh	x3, x0, x3
   2b63c:	sub	x3, x3, x0, asr #63
   2b640:	add	x4, x3, x3, lsl #2
   2b644:	lsl	x4, x4, #2
   2b648:	sub	x4, x4, x3
   2b64c:	subs	x19, x0, x4
   2b650:	b.eq	2b730 <PyInit__decimal@@Base+0xf4f0>  // b.none
   2b654:	add	x22, x3, #0x1
   2b658:	cmp	x22, x5
   2b65c:	csel	x1, x22, x5, ge  // ge = tcont
   2b660:	cmp	x1, x6
   2b664:	b.eq	2b67c <PyInit__decimal@@Base+0xf43c>  // b.none
   2b668:	ldrb	w3, [x20]
   2b66c:	tbz	w3, #5, 2b750 <PyInit__decimal@@Base+0xf510>
   2b670:	cmp	x1, x6
   2b674:	b.gt	2b764 <PyInit__decimal@@Base+0xf524>
   2b678:	sub	x3, x22, #0x1
   2b67c:	stp	x0, x22, [x20, #16]
   2b680:	cmp	x19, #0x0
   2b684:	mov	x1, x3
   2b688:	b.le	2b6a8 <PyInit__decimal@@Base+0xf468>
   2b68c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b690:	add	x0, x0, #0x180
   2b694:	ldr	x2, [x20, #40]
   2b698:	sub	x1, x22, #0x2
   2b69c:	ldr	x0, [x0, x19, lsl #3]
   2b6a0:	sub	x0, x0, #0x1
   2b6a4:	str	x0, [x2, x3, lsl #3]
   2b6a8:	tbnz	x1, #63, 2b720 <PyInit__decimal@@Base+0xf4e0>
   2b6ac:	cmp	x1, #0x2
   2b6b0:	add	x4, x1, #0x1
   2b6b4:	ldr	x3, [x20, #40]
   2b6b8:	b.le	2b6f4 <PyInit__decimal@@Base+0xf4b4>
   2b6bc:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b6c0:	add	x0, x3, x1, lsl #3
   2b6c4:	lsr	x2, x4, #1
   2b6c8:	sub	x0, x0, #0x8
   2b6cc:	ldr	q0, [x5, #2112]
   2b6d0:	sub	x2, x0, x2, lsl #4
   2b6d4:	nop
   2b6d8:	str	q0, [x0], #-16
   2b6dc:	cmp	x0, x2
   2b6e0:	b.ne	2b6d8 <PyInit__decimal@@Base+0xf498>  // b.any
   2b6e4:	and	x0, x4, #0xfffffffffffffffe
   2b6e8:	sub	x1, x1, x0
   2b6ec:	cmp	x0, x4
   2b6f0:	b.eq	2b720 <PyInit__decimal@@Base+0xf4e0>  // b.none
   2b6f4:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   2b6f8:	lsl	x2, x1, #3
   2b6fc:	movk	x0, #0x2304, lsl #32
   2b700:	movk	x0, #0x8ac7, lsl #48
   2b704:	str	x0, [x3, x1, lsl #3]
   2b708:	cbz	x1, 2b720 <PyInit__decimal@@Base+0xf4e0>
   2b70c:	add	x3, x3, x2
   2b710:	cmp	x1, #0x1
   2b714:	stur	x0, [x3, #-8]
   2b718:	b.eq	2b720 <PyInit__decimal@@Base+0xf4e0>  // b.none
   2b71c:	stur	x0, [x3, #-16]
   2b720:	ldp	x19, x20, [sp, #16]
   2b724:	ldp	x21, x22, [sp, #32]
   2b728:	ldp	x29, x30, [sp], #48
   2b72c:	ret
   2b730:	cmp	x3, x5
   2b734:	mov	x22, x3
   2b738:	csel	x1, x3, x5, ge  // ge = tcont
   2b73c:	cmp	x1, x6
   2b740:	b.ne	2b668 <PyInit__decimal@@Base+0xf428>  // b.any
   2b744:	sub	x1, x3, #0x1
   2b748:	stp	x0, x3, [x20, #16]
   2b74c:	b	2b6a8 <PyInit__decimal@@Base+0xf468>
   2b750:	mov	x0, x20
   2b754:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2b758:	cbz	w0, 2b720 <PyInit__decimal@@Base+0xf4e0>
   2b75c:	ldr	x0, [x21]
   2b760:	b	2b678 <PyInit__decimal@@Base+0xf438>
   2b764:	mov	x0, x20
   2b768:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2b76c:	b	2b758 <PyInit__decimal@@Base+0xf518>
   2b770:	ldr	x2, [x0, #24]
   2b774:	cmp	x2, #0x0
   2b778:	b.le	2b7e8 <PyInit__decimal@@Base+0xf5a8>
   2b77c:	ldr	x3, [x0, #40]
   2b780:	mov	x0, #0x0                   	// #0
   2b784:	b	2b794 <PyInit__decimal@@Base+0xf554>
   2b788:	add	x0, x0, #0x1
   2b78c:	cmp	x0, x2
   2b790:	b.eq	2b7e8 <PyInit__decimal@@Base+0xf5a8>  // b.none
   2b794:	ldr	x1, [x3, x0, lsl #3]
   2b798:	cbz	x1, 2b788 <PyInit__decimal@@Base+0xf548>
   2b79c:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2b7a0:	add	x2, x0, x0, lsl #2
   2b7a4:	movk	x3, #0xcccd
   2b7a8:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   2b7ac:	lsl	x2, x2, #2
   2b7b0:	movk	x4, #0x1999, lsl #48
   2b7b4:	mul	x5, x1, x3
   2b7b8:	sub	x0, x2, x0
   2b7bc:	ror	x2, x5, #1
   2b7c0:	cmp	x2, x4
   2b7c4:	b.hi	2b7e4 <PyInit__decimal@@Base+0xf5a4>  // b.pmore
   2b7c8:	umulh	x1, x1, x3
   2b7cc:	add	x0, x0, #0x1
   2b7d0:	lsr	x1, x1, #3
   2b7d4:	mul	x2, x1, x3
   2b7d8:	ror	x2, x2, #1
   2b7dc:	cmp	x2, x4
   2b7e0:	b.ls	2b7c8 <PyInit__decimal@@Base+0xf588>  // b.plast
   2b7e4:	ret
   2b7e8:	mov	x0, #0x0                   	// #0
   2b7ec:	ret
   2b7f0:	mov	x3, x0
   2b7f4:	ldrb	w0, [x0]
   2b7f8:	tst	w0, #0xe
   2b7fc:	b.eq	2b808 <PyInit__decimal@@Base+0xf5c8>  // b.none
   2b800:	mov	w0, #0x0                   	// #0
   2b804:	ret
   2b808:	ldr	x2, [x3, #24]
   2b80c:	mov	w0, #0x1                   	// #1
   2b810:	ldr	x4, [x3, #40]
   2b814:	add	x1, x4, x2, lsl #3
   2b818:	ldur	x1, [x1, #-8]
   2b81c:	cbz	x1, 2b804 <PyInit__decimal@@Base+0xf5c4>
   2b820:	cmp	x2, #0x0
   2b824:	b.le	2b8a0 <PyInit__decimal@@Base+0xf660>
   2b828:	mov	x0, #0x0                   	// #0
   2b82c:	b	2b83c <PyInit__decimal@@Base+0xf5fc>
   2b830:	add	x0, x0, #0x1
   2b834:	cmp	x2, x0
   2b838:	b.eq	2b8a0 <PyInit__decimal@@Base+0xf660>  // b.none
   2b83c:	ldr	x1, [x4, x0, lsl #3]
   2b840:	cbz	x1, 2b830 <PyInit__decimal@@Base+0xf5f0>
   2b844:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2b848:	add	x2, x0, x0, lsl #2
   2b84c:	movk	x4, #0xcccd
   2b850:	mov	x5, #0x9999999999999999    	// #-7378697629483820647
   2b854:	lsl	x2, x2, #2
   2b858:	movk	x5, #0x1999, lsl #48
   2b85c:	mul	x6, x1, x4
   2b860:	sub	x2, x2, x0
   2b864:	ror	x0, x6, #1
   2b868:	cmp	x0, x5
   2b86c:	b.hi	2b88c <PyInit__decimal@@Base+0xf64c>  // b.pmore
   2b870:	umulh	x1, x1, x4
   2b874:	add	x2, x2, #0x1
   2b878:	lsr	x1, x1, #3
   2b87c:	mul	x0, x1, x4
   2b880:	ror	x0, x0, #1
   2b884:	cmp	x0, x5
   2b888:	b.ls	2b870 <PyInit__decimal@@Base+0xf630>  // b.plast
   2b88c:	ldr	x0, [x3, #8]
   2b890:	add	x0, x2, x0
   2b894:	mvn	x0, x0
   2b898:	lsr	x0, x0, #63
   2b89c:	ret
   2b8a0:	ldr	x0, [x3, #8]
   2b8a4:	mov	x2, #0x0                   	// #0
   2b8a8:	add	x0, x2, x0
   2b8ac:	mvn	x0, x0
   2b8b0:	lsr	x0, x0, #63
   2b8b4:	b	2b89c <PyInit__decimal@@Base+0xf65c>
   2b8b8:	ldr	x1, [x0, #24]
   2b8bc:	ldr	x2, [x0, #40]
   2b8c0:	add	x1, x2, x1, lsl #3
   2b8c4:	ldur	x1, [x1, #-8]
   2b8c8:	cbz	x1, 2b8ec <PyInit__decimal@@Base+0xf6ac>
   2b8cc:	ldr	x0, [x0, #8]
   2b8d0:	cmp	x0, #0x0
   2b8d4:	b.lt	2b8f4 <PyInit__decimal@@Base+0xf6b4>  // b.tstop
   2b8d8:	mov	w0, #0x0                   	// #0
   2b8dc:	b.ne	2b8e8 <PyInit__decimal@@Base+0xf6a8>  // b.any
   2b8e0:	ldr	x0, [x2]
   2b8e4:	and	w0, w0, #0x1
   2b8e8:	ret
   2b8ec:	mov	w0, #0x0                   	// #0
   2b8f0:	ret
   2b8f4:	mov	x3, #0x435f                	// #17247
   2b8f8:	neg	x1, x0
   2b8fc:	movk	x3, #0xd79, lsl #16
   2b900:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b904:	movk	x3, #0x35e5, lsl #32
   2b908:	add	x5, x5, #0x180
   2b90c:	movk	x3, #0xd794, lsl #48
   2b910:	umulh	x3, x1, x3
   2b914:	lsr	x3, x3, #4
   2b918:	add	x4, x3, x3, lsl #2
   2b91c:	ldr	x0, [x2, x3, lsl #3]
   2b920:	lsl	x2, x4, #2
   2b924:	sub	x3, x2, x3
   2b928:	sub	x1, x1, x3
   2b92c:	ldr	x1, [x5, x1, lsl #3]
   2b930:	udiv	x0, x0, x1
   2b934:	and	w0, w0, #0x1
   2b938:	ret
   2b93c:	nop
   2b940:	ldr	x1, [x0, #24]
   2b944:	ldr	x2, [x0, #40]
   2b948:	add	x1, x2, x1, lsl #3
   2b94c:	ldur	x1, [x1, #-8]
   2b950:	cbz	x1, 2b978 <PyInit__decimal@@Base+0xf738>
   2b954:	ldr	x0, [x0, #8]
   2b958:	cmp	x0, #0x0
   2b95c:	b.lt	2b980 <PyInit__decimal@@Base+0xf740>  // b.tstop
   2b960:	mov	w0, #0x1                   	// #1
   2b964:	b.ne	2b974 <PyInit__decimal@@Base+0xf734>  // b.any
   2b968:	ldr	x0, [x2]
   2b96c:	mvn	w0, w0
   2b970:	and	w0, w0, #0x1
   2b974:	ret
   2b978:	mov	w0, #0x1                   	// #1
   2b97c:	ret
   2b980:	mov	x3, #0x435f                	// #17247
   2b984:	neg	x1, x0
   2b988:	movk	x3, #0xd79, lsl #16
   2b98c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2b990:	movk	x3, #0x35e5, lsl #32
   2b994:	add	x5, x5, #0x180
   2b998:	movk	x3, #0xd794, lsl #48
   2b99c:	umulh	x3, x1, x3
   2b9a0:	lsr	x3, x3, #4
   2b9a4:	add	x4, x3, x3, lsl #2
   2b9a8:	ldr	x0, [x2, x3, lsl #3]
   2b9ac:	lsl	x2, x4, #2
   2b9b0:	sub	x3, x2, x3
   2b9b4:	sub	x1, x1, x3
   2b9b8:	ldr	x1, [x5, x1, lsl #3]
   2b9bc:	udiv	x0, x0, x1
   2b9c0:	mvn	w0, w0
   2b9c4:	and	w0, w0, #0x1
   2b9c8:	ret
   2b9cc:	nop
   2b9d0:	stp	x29, x30, [sp, #-64]!
   2b9d4:	mov	x29, sp
   2b9d8:	stp	x19, x20, [sp, #16]
   2b9dc:	mov	x19, x0
   2b9e0:	and	w20, w1, #0xff
   2b9e4:	stp	x21, x22, [sp, #32]
   2b9e8:	and	w21, w2, #0xff
   2b9ec:	ldrb	w0, [x0]
   2b9f0:	tbnz	w0, #5, 2ba08 <PyInit__decimal@@Base+0xf7c8>
   2b9f4:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
   2b9f8:	ldr	x2, [x19, #32]
   2b9fc:	ldr	x1, [x22, #1880]
   2ba00:	cmp	x2, x1
   2ba04:	b.gt	2ba30 <PyInit__decimal@@Base+0xf7f0>
   2ba08:	orr	w20, w20, w21
   2ba0c:	and	w0, w0, #0xfffffff0
   2ba10:	orr	w0, w0, w20
   2ba14:	strb	w0, [x19]
   2ba18:	stp	xzr, xzr, [x19, #8]
   2ba1c:	ldp	x21, x22, [sp, #32]
   2ba20:	str	xzr, [x19, #24]
   2ba24:	ldp	x19, x20, [sp, #16]
   2ba28:	ldp	x29, x30, [sp], #64
   2ba2c:	ret
   2ba30:	ldr	x0, [x19, #40]
   2ba34:	add	x3, sp, #0x3f
   2ba38:	mov	x2, #0x8                   	// #8
   2ba3c:	strb	wzr, [sp, #63]
   2ba40:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2ba44:	str	x0, [x19, #40]
   2ba48:	ldrb	w1, [sp, #63]
   2ba4c:	cbnz	w1, 2ba58 <PyInit__decimal@@Base+0xf818>
   2ba50:	ldr	x0, [x22, #1880]
   2ba54:	str	x0, [x19, #32]
   2ba58:	ldrb	w0, [x19]
   2ba5c:	b	2ba08 <PyInit__decimal@@Base+0xf7c8>
   2ba60:	stp	x29, x30, [sp, #-64]!
   2ba64:	mov	x29, sp
   2ba68:	stp	x19, x20, [sp, #16]
   2ba6c:	mov	x19, x0
   2ba70:	mov	x20, x2
   2ba74:	stp	x21, x22, [sp, #32]
   2ba78:	mov	w21, w1
   2ba7c:	ldrb	w0, [x0]
   2ba80:	tbnz	w0, #5, 2ba98 <PyInit__decimal@@Base+0xf858>
   2ba84:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ba88:	ldr	x2, [x19, #32]
   2ba8c:	ldr	x1, [x22, #1880]
   2ba90:	cmp	x2, x1
   2ba94:	b.gt	2bac8 <PyInit__decimal@@Base+0xf888>
   2ba98:	and	w0, w0, #0xfffffff0
   2ba9c:	stp	xzr, xzr, [x19, #8]
   2baa0:	orr	w0, w0, #0x4
   2baa4:	strb	w0, [x19]
   2baa8:	ldr	w0, [x20]
   2baac:	orr	w1, w0, w21
   2bab0:	ldp	x21, x22, [sp, #32]
   2bab4:	str	xzr, [x19, #24]
   2bab8:	str	w1, [x20]
   2babc:	ldp	x19, x20, [sp, #16]
   2bac0:	ldp	x29, x30, [sp], #64
   2bac4:	ret
   2bac8:	ldr	x0, [x19, #40]
   2bacc:	add	x3, sp, #0x3f
   2bad0:	mov	x2, #0x8                   	// #8
   2bad4:	strb	wzr, [sp, #63]
   2bad8:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2badc:	str	x0, [x19, #40]
   2bae0:	ldrb	w1, [sp, #63]
   2bae4:	cbnz	w1, 2baf0 <PyInit__decimal@@Base+0xf8b0>
   2bae8:	ldr	x0, [x22, #1880]
   2baec:	str	x0, [x19, #32]
   2baf0:	ldrb	w0, [x19]
   2baf4:	b	2ba98 <PyInit__decimal@@Base+0xf858>
   2baf8:	stp	x29, x30, [sp, #-144]!
   2bafc:	mov	x29, sp
   2bb00:	stp	x19, x20, [sp, #16]
   2bb04:	stp	x21, x22, [sp, #32]
   2bb08:	mov	x22, x1
   2bb0c:	ldrb	w20, [x0]
   2bb10:	tst	w20, #0xe
   2bb14:	b.ne	2bc24 <PyInit__decimal@@Base+0xf9e4>  // b.any
   2bb18:	stp	x23, x24, [sp, #48]
   2bb1c:	mov	x19, x0
   2bb20:	ldr	x23, [x0, #24]
   2bb24:	ldr	x7, [x0, #40]
   2bb28:	mov	x10, x23
   2bb2c:	lsl	x24, x23, #3
   2bb30:	sub	x21, x24, #0x8
   2bb34:	add	x9, x7, x21
   2bb38:	ldr	x1, [x7, x21]
   2bb3c:	cbz	x1, 2bc08 <PyInit__decimal@@Base+0xf9c8>
   2bb40:	tbnz	w20, #0, 2bc20 <PyInit__decimal@@Base+0xf9e0>
   2bb44:	ldr	x8, [x0, #8]
   2bb48:	str	x25, [sp, #64]
   2bb4c:	ldr	x25, [x0, #16]
   2bb50:	add	x11, x25, x8
   2bb54:	cmp	x11, #0x14
   2bb58:	b.gt	2bbdc <PyInit__decimal@@Base+0xf99c>
   2bb5c:	tbnz	x8, #63, 2bc48 <PyInit__decimal@@Base+0xfa08>
   2bb60:	mov	x0, #0x435f                	// #17247
   2bb64:	mov	x3, #0x13                  	// #19
   2bb68:	movk	x0, #0xd79, lsl #16
   2bb6c:	movk	x0, #0x35e5, lsl #32
   2bb70:	movk	x0, #0xd794, lsl #48
   2bb74:	umulh	x0, x25, x0
   2bb78:	lsr	x0, x0, #4
   2bb7c:	add	x2, x0, x0, lsl #2
   2bb80:	lsl	x2, x2, #2
   2bb84:	sub	x0, x2, x0
   2bb88:	subs	x0, x25, x0
   2bb8c:	csel	x0, x0, x3, ne  // ne = any
   2bb90:	cmp	x23, #0x1
   2bb94:	b.le	2bcec <PyInit__decimal@@Base+0xfaac>
   2bb98:	add	x2, x7, x24
   2bb9c:	sub	x5, x0, #0x1
   2bba0:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2bba4:	add	x4, x4, #0x180
   2bba8:	mov	x3, #0x14                  	// #20
   2bbac:	sub	x0, x3, x0
   2bbb0:	ldur	x3, [x2, #-16]
   2bbb4:	ldr	x5, [x4, x5, lsl #3]
   2bbb8:	ldr	x2, [x4, x0, lsl #3]
   2bbbc:	udiv	x3, x3, x5
   2bbc0:	mul	x0, x1, x2
   2bbc4:	umulh	x2, x1, x2
   2bbc8:	adds	x1, x0, x3
   2bbcc:	cset	x0, cs  // cs = hs, nlast
   2bbd0:	cmp	x2, #0x0
   2bbd4:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2bbd8:	b.eq	2bcec <PyInit__decimal@@Base+0xfaac>  // b.none
   2bbdc:	ldr	w0, [x22]
   2bbe0:	mov	x1, #0xffffffffffffffff    	// #-1
   2bbe4:	ldp	x23, x24, [sp, #48]
   2bbe8:	orr	w0, w0, #0x100
   2bbec:	ldr	x25, [sp, #64]
   2bbf0:	str	w0, [x22]
   2bbf4:	mov	x0, x1
   2bbf8:	ldp	x19, x20, [sp, #16]
   2bbfc:	ldp	x21, x22, [sp, #32]
   2bc00:	ldp	x29, x30, [sp], #144
   2bc04:	ret
   2bc08:	mov	x0, x1
   2bc0c:	ldp	x19, x20, [sp, #16]
   2bc10:	ldp	x21, x22, [sp, #32]
   2bc14:	ldp	x23, x24, [sp, #48]
   2bc18:	ldp	x29, x30, [sp], #144
   2bc1c:	ret
   2bc20:	ldp	x23, x24, [sp, #48]
   2bc24:	mov	x1, #0xffffffffffffffff    	// #-1
   2bc28:	ldr	w0, [x22]
   2bc2c:	ldp	x19, x20, [sp, #16]
   2bc30:	orr	w0, w0, #0x100
   2bc34:	str	w0, [x22]
   2bc38:	mov	x0, x1
   2bc3c:	ldp	x21, x22, [sp, #32]
   2bc40:	ldp	x29, x30, [sp], #144
   2bc44:	ret
   2bc48:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2bc4c:	cbz	w0, 2bbdc <PyInit__decimal@@Base+0xf99c>
   2bc50:	mov	x0, #0x2                   	// #2
   2bc54:	add	x4, sp, #0x50
   2bc58:	mov	w1, #0x30                  	// #48
   2bc5c:	strb	w1, [sp, #96]
   2bc60:	stp	x0, x4, [sp, #128]
   2bc64:	ldr	x0, [x9]
   2bc68:	cbz	x0, 2bd44 <PyInit__decimal@@Base+0xfb04>
   2bc6c:	neg	x3, x8
   2bc70:	cmp	x25, x3
   2bc74:	b.le	2bd24 <PyInit__decimal@@Base+0xfae4>
   2bc78:	mov	x23, #0x9436                	// #37942
   2bc7c:	mov	x0, x4
   2bc80:	movk	x23, #0x50d7, lsl #16
   2bc84:	mov	x2, x10
   2bc88:	movk	x23, #0x435e, lsl #32
   2bc8c:	mov	x1, x7
   2bc90:	movk	x23, #0xd79, lsl #48
   2bc94:	str	x11, [sp, #112]
   2bc98:	smulh	x23, x11, x23
   2bc9c:	sub	x23, x23, x11, asr #63
   2bca0:	add	x4, x23, x23, lsl #2
   2bca4:	lsl	x4, x4, #2
   2bca8:	sub	x4, x4, x23
   2bcac:	cmp	x11, x4
   2bcb0:	cinc	x23, x23, ne  // ne = any
   2bcb4:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2bcb8:	str	x23, [sp, #120]
   2bcbc:	ldrb	w0, [sp, #96]
   2bcc0:	lsl	x24, x23, #3
   2bcc4:	ldrb	w1, [x19]
   2bcc8:	sub	x21, x24, #0x8
   2bccc:	ldr	x25, [sp, #112]
   2bcd0:	ldr	x7, [sp, #136]
   2bcd4:	bfxil	w0, w1, #0, #4
   2bcd8:	strb	w0, [sp, #96]
   2bcdc:	str	xzr, [sp, #104]
   2bce0:	mov	x8, #0x0                   	// #0
   2bce4:	ldr	x1, [x7, x21]
   2bce8:	b	2bb60 <PyInit__decimal@@Base+0xf920>
   2bcec:	cbz	x8, 2bd08 <PyInit__decimal@@Base+0xfac8>
   2bcf0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2bcf4:	add	x0, x0, #0x180
   2bcf8:	ldr	x0, [x0, x8, lsl #3]
   2bcfc:	umulh	x2, x1, x0
   2bd00:	mul	x1, x1, x0
   2bd04:	cbnz	x2, 2bbdc <PyInit__decimal@@Base+0xf99c>
   2bd08:	mov	x0, x1
   2bd0c:	ldp	x19, x20, [sp, #16]
   2bd10:	ldp	x21, x22, [sp, #32]
   2bd14:	ldp	x23, x24, [sp, #48]
   2bd18:	ldr	x25, [sp, #64]
   2bd1c:	ldp	x29, x30, [sp], #144
   2bd20:	ret
   2bd24:	mov	x1, x23
   2bd28:	cset	w2, eq  // eq = none
   2bd2c:	mov	x0, x7
   2bd30:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2bd34:	add	x0, sp, #0x60
   2bd38:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2bd3c:	ldr	x23, [sp, #120]
   2bd40:	b	2bcbc <PyInit__decimal@@Base+0xfa7c>
   2bd44:	mov	x1, x7
   2bd48:	mov	x0, x4
   2bd4c:	mov	x2, x24
   2bd50:	bl	6470 <memcpy@plt>
   2bd54:	mov	x4, x0
   2bd58:	and	w0, w20, #0xf
   2bd5c:	orr	w0, w0, #0x30
   2bd60:	mov	x7, x4
   2bd64:	strb	w0, [sp, #96]
   2bd68:	stp	x25, x23, [sp, #112]
   2bd6c:	b	2bcdc <PyInit__decimal@@Base+0xfa9c>
   2bd70:	stp	x29, x30, [sp, #-144]!
   2bd74:	mov	x29, sp
   2bd78:	stp	x21, x22, [sp, #32]
   2bd7c:	mov	x22, x1
   2bd80:	ldrb	w21, [x0]
   2bd84:	tst	w21, #0xe
   2bd88:	b.ne	2becc <PyInit__decimal@@Base+0xfc8c>  // b.any
   2bd8c:	stp	x23, x24, [sp, #48]
   2bd90:	ldr	x23, [x0, #24]
   2bd94:	stp	x19, x20, [sp, #16]
   2bd98:	mov	x19, x0
   2bd9c:	ldr	x7, [x0, #40]
   2bda0:	lsl	x24, x23, #3
   2bda4:	sub	x20, x24, #0x8
   2bda8:	mov	x11, x23
   2bdac:	add	x10, x7, x20
   2bdb0:	ldr	x1, [x7, x20]
   2bdb4:	cbnz	x1, 2bdd0 <PyInit__decimal@@Base+0xfb90>
   2bdb8:	mov	x0, x1
   2bdbc:	ldp	x19, x20, [sp, #16]
   2bdc0:	ldp	x21, x22, [sp, #32]
   2bdc4:	ldp	x23, x24, [sp, #48]
   2bdc8:	ldp	x29, x30, [sp], #144
   2bdcc:	ret
   2bdd0:	ldr	x8, [x0, #8]
   2bdd4:	str	x25, [sp, #64]
   2bdd8:	ldr	x25, [x0, #16]
   2bddc:	add	x9, x25, x8
   2bde0:	cmp	x9, #0x14
   2bde4:	b.gt	2be68 <PyInit__decimal@@Base+0xfc28>
   2bde8:	tbnz	x8, #63, 2beec <PyInit__decimal@@Base+0xfcac>
   2bdec:	mov	x0, #0x435f                	// #17247
   2bdf0:	mov	x3, #0x13                  	// #19
   2bdf4:	movk	x0, #0xd79, lsl #16
   2bdf8:	movk	x0, #0x35e5, lsl #32
   2bdfc:	movk	x0, #0xd794, lsl #48
   2be00:	umulh	x0, x25, x0
   2be04:	lsr	x0, x0, #4
   2be08:	add	x2, x0, x0, lsl #2
   2be0c:	lsl	x2, x2, #2
   2be10:	sub	x0, x2, x0
   2be14:	subs	x0, x25, x0
   2be18:	csel	x0, x0, x3, ne  // ne = any
   2be1c:	cmp	x23, #0x1
   2be20:	b.le	2be94 <PyInit__decimal@@Base+0xfc54>
   2be24:	add	x2, x7, x24
   2be28:	sub	x5, x0, #0x1
   2be2c:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2be30:	add	x4, x4, #0x180
   2be34:	mov	x3, #0x14                  	// #20
   2be38:	sub	x0, x3, x0
   2be3c:	ldur	x3, [x2, #-16]
   2be40:	ldr	x5, [x4, x5, lsl #3]
   2be44:	ldr	x2, [x4, x0, lsl #3]
   2be48:	udiv	x3, x3, x5
   2be4c:	mul	x0, x1, x2
   2be50:	umulh	x2, x1, x2
   2be54:	adds	x1, x0, x3
   2be58:	cset	x0, cs  // cs = hs, nlast
   2be5c:	cmp	x2, #0x0
   2be60:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2be64:	b.eq	2be94 <PyInit__decimal@@Base+0xfc54>  // b.none
   2be68:	ldr	w0, [x22]
   2be6c:	mov	x1, #0xffffffffffffffff    	// #-1
   2be70:	ldp	x19, x20, [sp, #16]
   2be74:	orr	w0, w0, #0x100
   2be78:	ldp	x23, x24, [sp, #48]
   2be7c:	ldr	x25, [sp, #64]
   2be80:	str	w0, [x22]
   2be84:	mov	x0, x1
   2be88:	ldp	x21, x22, [sp, #32]
   2be8c:	ldp	x29, x30, [sp], #144
   2be90:	ret
   2be94:	cbz	x8, 2beb0 <PyInit__decimal@@Base+0xfc70>
   2be98:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2be9c:	add	x0, x0, #0x180
   2bea0:	ldr	x0, [x0, x8, lsl #3]
   2bea4:	umulh	x2, x1, x0
   2bea8:	mul	x1, x1, x0
   2beac:	cbnz	x2, 2be68 <PyInit__decimal@@Base+0xfc28>
   2beb0:	mov	x0, x1
   2beb4:	ldp	x19, x20, [sp, #16]
   2beb8:	ldp	x21, x22, [sp, #32]
   2bebc:	ldp	x23, x24, [sp, #48]
   2bec0:	ldr	x25, [sp, #64]
   2bec4:	ldp	x29, x30, [sp], #144
   2bec8:	ret
   2becc:	ldr	w0, [x22]
   2bed0:	mov	x1, #0xffffffffffffffff    	// #-1
   2bed4:	orr	w0, w0, #0x100
   2bed8:	str	w0, [x22]
   2bedc:	mov	x0, x1
   2bee0:	ldp	x21, x22, [sp, #32]
   2bee4:	ldp	x29, x30, [sp], #144
   2bee8:	ret
   2beec:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2bef0:	cbz	w0, 2be68 <PyInit__decimal@@Base+0xfc28>
   2bef4:	mov	x0, #0x2                   	// #2
   2bef8:	add	x4, sp, #0x50
   2befc:	mov	w1, #0x30                  	// #48
   2bf00:	strb	w1, [sp, #96]
   2bf04:	stp	x0, x4, [sp, #128]
   2bf08:	ldr	x0, [x10]
   2bf0c:	cbz	x0, 2bfb0 <PyInit__decimal@@Base+0xfd70>
   2bf10:	neg	x3, x8
   2bf14:	cmp	x25, x3
   2bf18:	b.le	2bf90 <PyInit__decimal@@Base+0xfd50>
   2bf1c:	mov	x23, #0x9436                	// #37942
   2bf20:	mov	x0, x4
   2bf24:	movk	x23, #0x50d7, lsl #16
   2bf28:	mov	x2, x11
   2bf2c:	movk	x23, #0x435e, lsl #32
   2bf30:	mov	x1, x7
   2bf34:	movk	x23, #0xd79, lsl #48
   2bf38:	str	x9, [sp, #112]
   2bf3c:	smulh	x23, x9, x23
   2bf40:	sub	x23, x23, x9, asr #63
   2bf44:	add	x4, x23, x23, lsl #2
   2bf48:	lsl	x4, x4, #2
   2bf4c:	sub	x4, x4, x23
   2bf50:	cmp	x9, x4
   2bf54:	cinc	x23, x23, ne  // ne = any
   2bf58:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2bf5c:	str	x23, [sp, #120]
   2bf60:	ldrb	w0, [sp, #96]
   2bf64:	lsl	x24, x23, #3
   2bf68:	ldrb	w1, [x19]
   2bf6c:	sub	x20, x24, #0x8
   2bf70:	ldr	x25, [sp, #112]
   2bf74:	ldr	x7, [sp, #136]
   2bf78:	bfxil	w0, w1, #0, #4
   2bf7c:	strb	w0, [sp, #96]
   2bf80:	str	xzr, [sp, #104]
   2bf84:	mov	x8, #0x0                   	// #0
   2bf88:	ldr	x1, [x7, x20]
   2bf8c:	b	2bdec <PyInit__decimal@@Base+0xfbac>
   2bf90:	mov	x1, x23
   2bf94:	cset	w2, eq  // eq = none
   2bf98:	mov	x0, x7
   2bf9c:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2bfa0:	add	x0, sp, #0x60
   2bfa4:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2bfa8:	ldr	x23, [sp, #120]
   2bfac:	b	2bf60 <PyInit__decimal@@Base+0xfd20>
   2bfb0:	and	w21, w21, #0xf
   2bfb4:	mov	x1, x7
   2bfb8:	mov	x2, x24
   2bfbc:	mov	x0, x4
   2bfc0:	orr	w21, w21, #0x30
   2bfc4:	bl	6470 <memcpy@plt>
   2bfc8:	mov	x7, x0
   2bfcc:	strb	w21, [sp, #96]
   2bfd0:	stp	x25, x23, [sp, #112]
   2bfd4:	b	2bf80 <PyInit__decimal@@Base+0xfd40>
   2bfd8:	stp	x29, x30, [sp, #-144]!
   2bfdc:	mov	x29, sp
   2bfe0:	stp	x19, x20, [sp, #16]
   2bfe4:	stp	x23, x24, [sp, #48]
   2bfe8:	mov	x23, x1
   2bfec:	ldrb	w20, [x0]
   2bff0:	tst	w20, #0xe
   2bff4:	b.ne	2c174 <PyInit__decimal@@Base+0xff34>  // b.any
   2bff8:	stp	x21, x22, [sp, #32]
   2bffc:	mov	x19, x0
   2c000:	ldr	x21, [x0, #24]
   2c004:	ldr	x7, [x0, #40]
   2c008:	mov	x11, x21
   2c00c:	lsl	x24, x21, #3
   2c010:	sub	x22, x24, #0x8
   2c014:	add	x10, x7, x22
   2c018:	ldr	x3, [x7, x22]
   2c01c:	cbnz	x3, 2c04c <PyInit__decimal@@Base+0xfe0c>
   2c020:	ldr	w0, [x1]
   2c024:	tbnz	w0, #8, 2c0f8 <PyInit__decimal@@Base+0xfeb8>
   2c028:	and	w20, w20, #0x1
   2c02c:	mov	x0, #0x0                   	// #0
   2c030:	ldp	x21, x22, [sp, #32]
   2c034:	cmp	w20, #0x0
   2c038:	cneg	x0, x0, ne  // ne = any
   2c03c:	ldp	x19, x20, [sp, #16]
   2c040:	ldp	x23, x24, [sp, #48]
   2c044:	ldp	x29, x30, [sp], #144
   2c048:	ret
   2c04c:	ldr	x8, [x0, #8]
   2c050:	str	x25, [sp, #64]
   2c054:	ldr	x25, [x0, #16]
   2c058:	add	x9, x25, x8
   2c05c:	cmp	x9, #0x14
   2c060:	b.gt	2c238 <PyInit__decimal@@Base+0xfff8>
   2c064:	tbnz	x8, #63, 2c194 <PyInit__decimal@@Base+0xff54>
   2c068:	mov	x0, #0x435f                	// #17247
   2c06c:	mov	x2, #0x13                  	// #19
   2c070:	movk	x0, #0xd79, lsl #16
   2c074:	ldr	w4, [x23]
   2c078:	movk	x0, #0x35e5, lsl #32
   2c07c:	movk	x0, #0xd794, lsl #48
   2c080:	umulh	x0, x25, x0
   2c084:	lsr	x0, x0, #4
   2c088:	add	x1, x0, x0, lsl #2
   2c08c:	lsl	x1, x1, #2
   2c090:	sub	x0, x1, x0
   2c094:	subs	x0, x25, x0
   2c098:	csel	x0, x0, x2, ne  // ne = any
   2c09c:	cmp	x21, #0x1
   2c0a0:	b.le	2c110 <PyInit__decimal@@Base+0xfed0>
   2c0a4:	sub	x5, x0, #0x1
   2c0a8:	add	x7, x7, x24
   2c0ac:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c0b0:	add	x1, x1, #0x180
   2c0b4:	mov	x2, #0x14                  	// #20
   2c0b8:	sub	x2, x2, x0
   2c0bc:	ldur	x0, [x7, #-16]
   2c0c0:	ldr	x5, [x1, x5, lsl #3]
   2c0c4:	ldr	x2, [x1, x2, lsl #3]
   2c0c8:	udiv	x0, x0, x5
   2c0cc:	mul	x1, x3, x2
   2c0d0:	umulh	x2, x3, x2
   2c0d4:	adds	x0, x1, x0
   2c0d8:	cset	x1, cs  // cs = hs, nlast
   2c0dc:	cmp	x2, #0x0
   2c0e0:	mov	x3, x0
   2c0e4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   2c0e8:	b.eq	2c110 <PyInit__decimal@@Base+0xfed0>  // b.none
   2c0ec:	orr	w4, w4, #0x100
   2c0f0:	ldr	x25, [sp, #64]
   2c0f4:	str	w4, [x23]
   2c0f8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c0fc:	ldp	x19, x20, [sp, #16]
   2c100:	ldp	x21, x22, [sp, #32]
   2c104:	ldp	x23, x24, [sp, #48]
   2c108:	ldp	x29, x30, [sp], #144
   2c10c:	ret
   2c110:	cbz	x8, 2c12c <PyInit__decimal@@Base+0xfeec>
   2c114:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c118:	add	x0, x0, #0x180
   2c11c:	ldr	x0, [x0, x8, lsl #3]
   2c120:	umulh	x1, x3, x0
   2c124:	mul	x3, x3, x0
   2c128:	cbnz	x1, 2c0ec <PyInit__decimal@@Base+0xfeac>
   2c12c:	tbnz	w4, #8, 2c26c <PyInit__decimal@@Base+0x1002c>
   2c130:	ldrb	w20, [x19]
   2c134:	mov	x0, x3
   2c138:	and	w20, w20, #0x1
   2c13c:	tbz	x3, #63, 2c29c <PyInit__decimal@@Base+0x1005c>
   2c140:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2c144:	cmp	x3, x1
   2c148:	csel	w20, w20, wzr, eq  // eq = none
   2c14c:	cbnz	w20, 2c2a4 <PyInit__decimal@@Base+0x10064>
   2c150:	orr	w4, w4, #0x100
   2c154:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c158:	ldp	x21, x22, [sp, #32]
   2c15c:	ldr	x25, [sp, #64]
   2c160:	str	w4, [x23]
   2c164:	ldp	x19, x20, [sp, #16]
   2c168:	ldp	x23, x24, [sp, #48]
   2c16c:	ldp	x29, x30, [sp], #144
   2c170:	ret
   2c174:	ldr	w1, [x1]
   2c178:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c17c:	ldp	x19, x20, [sp, #16]
   2c180:	orr	w1, w1, #0x100
   2c184:	str	w1, [x23]
   2c188:	ldp	x23, x24, [sp, #48]
   2c18c:	ldp	x29, x30, [sp], #144
   2c190:	ret
   2c194:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2c198:	cbz	w0, 2c238 <PyInit__decimal@@Base+0xfff8>
   2c19c:	mov	x0, #0x2                   	// #2
   2c1a0:	add	x4, sp, #0x50
   2c1a4:	mov	w1, #0x30                  	// #48
   2c1a8:	strb	w1, [sp, #96]
   2c1ac:	stp	x0, x4, [sp, #128]
   2c1b0:	ldr	x0, [x10]
   2c1b4:	cbz	x0, 2c274 <PyInit__decimal@@Base+0x10034>
   2c1b8:	neg	x3, x8
   2c1bc:	cmp	x25, x3
   2c1c0:	b.le	2c24c <PyInit__decimal@@Base+0x1000c>
   2c1c4:	mov	x21, #0x9436                	// #37942
   2c1c8:	mov	x0, x4
   2c1cc:	movk	x21, #0x50d7, lsl #16
   2c1d0:	mov	x2, x11
   2c1d4:	movk	x21, #0x435e, lsl #32
   2c1d8:	mov	x1, x7
   2c1dc:	movk	x21, #0xd79, lsl #48
   2c1e0:	str	x9, [sp, #112]
   2c1e4:	smulh	x21, x9, x21
   2c1e8:	sub	x21, x21, x9, asr #63
   2c1ec:	add	x4, x21, x21, lsl #2
   2c1f0:	lsl	x4, x4, #2
   2c1f4:	sub	x4, x4, x21
   2c1f8:	cmp	x9, x4
   2c1fc:	cinc	x21, x21, ne  // ne = any
   2c200:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2c204:	str	x21, [sp, #120]
   2c208:	ldrb	w0, [sp, #96]
   2c20c:	lsl	x24, x21, #3
   2c210:	ldrb	w1, [x19]
   2c214:	sub	x22, x24, #0x8
   2c218:	ldr	x25, [sp, #112]
   2c21c:	ldr	x7, [sp, #136]
   2c220:	bfxil	w0, w1, #0, #4
   2c224:	strb	w0, [sp, #96]
   2c228:	str	xzr, [sp, #104]
   2c22c:	mov	x8, #0x0                   	// #0
   2c230:	ldr	x3, [x7, x22]
   2c234:	b	2c068 <PyInit__decimal@@Base+0xfe28>
   2c238:	ldr	w0, [x23]
   2c23c:	ldr	x25, [sp, #64]
   2c240:	orr	w0, w0, #0x100
   2c244:	str	w0, [x23]
   2c248:	b	2c0f8 <PyInit__decimal@@Base+0xfeb8>
   2c24c:	mov	x1, x21
   2c250:	cset	w2, eq  // eq = none
   2c254:	mov	x0, x7
   2c258:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2c25c:	add	x0, sp, #0x60
   2c260:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2c264:	ldr	x21, [sp, #120]
   2c268:	b	2c208 <PyInit__decimal@@Base+0xffc8>
   2c26c:	ldr	x25, [sp, #64]
   2c270:	b	2c0f8 <PyInit__decimal@@Base+0xfeb8>
   2c274:	and	w20, w20, #0xf
   2c278:	mov	x1, x7
   2c27c:	mov	x2, x24
   2c280:	mov	x0, x4
   2c284:	orr	w20, w20, #0x30
   2c288:	bl	6470 <memcpy@plt>
   2c28c:	mov	x7, x0
   2c290:	strb	w20, [sp, #96]
   2c294:	stp	x25, x21, [sp, #112]
   2c298:	b	2c228 <PyInit__decimal@@Base+0xffe8>
   2c29c:	ldr	x25, [sp, #64]
   2c2a0:	b	2c030 <PyInit__decimal@@Base+0xfdf0>
   2c2a4:	mov	x0, x1
   2c2a8:	ldp	x21, x22, [sp, #32]
   2c2ac:	ldr	x25, [sp, #64]
   2c2b0:	b	2c03c <PyInit__decimal@@Base+0xfdfc>
   2c2b4:	nop
   2c2b8:	stp	x29, x30, [sp, #-144]!
   2c2bc:	mov	x29, sp
   2c2c0:	stp	x19, x20, [sp, #16]
   2c2c4:	stp	x21, x22, [sp, #32]
   2c2c8:	mov	x22, x1
   2c2cc:	ldrb	w20, [x0]
   2c2d0:	tst	w20, #0xe
   2c2d4:	b.ne	2c3e4 <PyInit__decimal@@Base+0x101a4>  // b.any
   2c2d8:	stp	x23, x24, [sp, #48]
   2c2dc:	mov	x19, x0
   2c2e0:	ldr	x23, [x0, #24]
   2c2e4:	ldr	x7, [x0, #40]
   2c2e8:	mov	x10, x23
   2c2ec:	lsl	x24, x23, #3
   2c2f0:	sub	x21, x24, #0x8
   2c2f4:	add	x9, x7, x21
   2c2f8:	ldr	x1, [x7, x21]
   2c2fc:	cbz	x1, 2c3c8 <PyInit__decimal@@Base+0x10188>
   2c300:	tbnz	w20, #0, 2c3e0 <PyInit__decimal@@Base+0x101a0>
   2c304:	ldr	x8, [x0, #8]
   2c308:	str	x25, [sp, #64]
   2c30c:	ldr	x25, [x0, #16]
   2c310:	add	x11, x25, x8
   2c314:	cmp	x11, #0x14
   2c318:	b.gt	2c39c <PyInit__decimal@@Base+0x1015c>
   2c31c:	tbnz	x8, #63, 2c408 <PyInit__decimal@@Base+0x101c8>
   2c320:	mov	x0, #0x435f                	// #17247
   2c324:	mov	x3, #0x13                  	// #19
   2c328:	movk	x0, #0xd79, lsl #16
   2c32c:	movk	x0, #0x35e5, lsl #32
   2c330:	movk	x0, #0xd794, lsl #48
   2c334:	umulh	x0, x25, x0
   2c338:	lsr	x0, x0, #4
   2c33c:	add	x2, x0, x0, lsl #2
   2c340:	lsl	x2, x2, #2
   2c344:	sub	x0, x2, x0
   2c348:	subs	x0, x25, x0
   2c34c:	csel	x0, x0, x3, ne  // ne = any
   2c350:	cmp	x23, #0x1
   2c354:	b.le	2c4ac <PyInit__decimal@@Base+0x1026c>
   2c358:	add	x2, x7, x24
   2c35c:	sub	x5, x0, #0x1
   2c360:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c364:	add	x4, x4, #0x180
   2c368:	mov	x3, #0x14                  	// #20
   2c36c:	sub	x0, x3, x0
   2c370:	ldur	x3, [x2, #-16]
   2c374:	ldr	x5, [x4, x5, lsl #3]
   2c378:	ldr	x2, [x4, x0, lsl #3]
   2c37c:	udiv	x3, x3, x5
   2c380:	mul	x0, x1, x2
   2c384:	umulh	x2, x1, x2
   2c388:	adds	x1, x0, x3
   2c38c:	cset	x0, cs  // cs = hs, nlast
   2c390:	cmp	x2, #0x0
   2c394:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2c398:	b.eq	2c4ac <PyInit__decimal@@Base+0x1026c>  // b.none
   2c39c:	ldr	w0, [x22]
   2c3a0:	mov	x1, #0xffffffffffffffff    	// #-1
   2c3a4:	ldp	x23, x24, [sp, #48]
   2c3a8:	orr	w0, w0, #0x100
   2c3ac:	ldr	x25, [sp, #64]
   2c3b0:	str	w0, [x22]
   2c3b4:	mov	x0, x1
   2c3b8:	ldp	x19, x20, [sp, #16]
   2c3bc:	ldp	x21, x22, [sp, #32]
   2c3c0:	ldp	x29, x30, [sp], #144
   2c3c4:	ret
   2c3c8:	mov	x0, x1
   2c3cc:	ldp	x19, x20, [sp, #16]
   2c3d0:	ldp	x21, x22, [sp, #32]
   2c3d4:	ldp	x23, x24, [sp, #48]
   2c3d8:	ldp	x29, x30, [sp], #144
   2c3dc:	ret
   2c3e0:	ldp	x23, x24, [sp, #48]
   2c3e4:	mov	x1, #0xffffffffffffffff    	// #-1
   2c3e8:	ldr	w0, [x22]
   2c3ec:	ldp	x19, x20, [sp, #16]
   2c3f0:	orr	w0, w0, #0x100
   2c3f4:	str	w0, [x22]
   2c3f8:	mov	x0, x1
   2c3fc:	ldp	x21, x22, [sp, #32]
   2c400:	ldp	x29, x30, [sp], #144
   2c404:	ret
   2c408:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2c40c:	cbz	w0, 2c39c <PyInit__decimal@@Base+0x1015c>
   2c410:	mov	x0, #0x2                   	// #2
   2c414:	add	x4, sp, #0x50
   2c418:	mov	w1, #0x30                  	// #48
   2c41c:	strb	w1, [sp, #96]
   2c420:	stp	x0, x4, [sp, #128]
   2c424:	ldr	x0, [x9]
   2c428:	cbz	x0, 2c504 <PyInit__decimal@@Base+0x102c4>
   2c42c:	neg	x3, x8
   2c430:	cmp	x25, x3
   2c434:	b.le	2c4e4 <PyInit__decimal@@Base+0x102a4>
   2c438:	mov	x23, #0x9436                	// #37942
   2c43c:	mov	x0, x4
   2c440:	movk	x23, #0x50d7, lsl #16
   2c444:	mov	x2, x10
   2c448:	movk	x23, #0x435e, lsl #32
   2c44c:	mov	x1, x7
   2c450:	movk	x23, #0xd79, lsl #48
   2c454:	str	x11, [sp, #112]
   2c458:	smulh	x23, x11, x23
   2c45c:	sub	x23, x23, x11, asr #63
   2c460:	add	x4, x23, x23, lsl #2
   2c464:	lsl	x4, x4, #2
   2c468:	sub	x4, x4, x23
   2c46c:	cmp	x11, x4
   2c470:	cinc	x23, x23, ne  // ne = any
   2c474:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2c478:	str	x23, [sp, #120]
   2c47c:	ldrb	w0, [sp, #96]
   2c480:	lsl	x24, x23, #3
   2c484:	ldrb	w1, [x19]
   2c488:	sub	x21, x24, #0x8
   2c48c:	ldr	x25, [sp, #112]
   2c490:	ldr	x7, [sp, #136]
   2c494:	bfxil	w0, w1, #0, #4
   2c498:	strb	w0, [sp, #96]
   2c49c:	str	xzr, [sp, #104]
   2c4a0:	mov	x8, #0x0                   	// #0
   2c4a4:	ldr	x1, [x7, x21]
   2c4a8:	b	2c320 <PyInit__decimal@@Base+0x100e0>
   2c4ac:	cbz	x8, 2c4c8 <PyInit__decimal@@Base+0x10288>
   2c4b0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c4b4:	add	x0, x0, #0x180
   2c4b8:	ldr	x0, [x0, x8, lsl #3]
   2c4bc:	umulh	x2, x1, x0
   2c4c0:	mul	x1, x1, x0
   2c4c4:	cbnz	x2, 2c39c <PyInit__decimal@@Base+0x1015c>
   2c4c8:	mov	x0, x1
   2c4cc:	ldp	x19, x20, [sp, #16]
   2c4d0:	ldp	x21, x22, [sp, #32]
   2c4d4:	ldp	x23, x24, [sp, #48]
   2c4d8:	ldr	x25, [sp, #64]
   2c4dc:	ldp	x29, x30, [sp], #144
   2c4e0:	ret
   2c4e4:	mov	x1, x23
   2c4e8:	cset	w2, eq  // eq = none
   2c4ec:	mov	x0, x7
   2c4f0:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2c4f4:	add	x0, sp, #0x60
   2c4f8:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2c4fc:	ldr	x23, [sp, #120]
   2c500:	b	2c47c <PyInit__decimal@@Base+0x1023c>
   2c504:	mov	x1, x7
   2c508:	mov	x0, x4
   2c50c:	mov	x2, x24
   2c510:	bl	6470 <memcpy@plt>
   2c514:	mov	x4, x0
   2c518:	and	w0, w20, #0xf
   2c51c:	orr	w0, w0, #0x30
   2c520:	mov	x7, x4
   2c524:	strb	w0, [sp, #96]
   2c528:	stp	x25, x23, [sp, #112]
   2c52c:	b	2c49c <PyInit__decimal@@Base+0x1025c>
   2c530:	stp	x29, x30, [sp, #-144]!
   2c534:	mov	x29, sp
   2c538:	stp	x19, x20, [sp, #16]
   2c53c:	stp	x23, x24, [sp, #48]
   2c540:	mov	x23, x1
   2c544:	ldrb	w20, [x0]
   2c548:	tst	w20, #0xe
   2c54c:	b.ne	2c6cc <PyInit__decimal@@Base+0x1048c>  // b.any
   2c550:	stp	x21, x22, [sp, #32]
   2c554:	mov	x19, x0
   2c558:	ldr	x21, [x0, #24]
   2c55c:	ldr	x7, [x0, #40]
   2c560:	mov	x11, x21
   2c564:	lsl	x24, x21, #3
   2c568:	sub	x22, x24, #0x8
   2c56c:	add	x10, x7, x22
   2c570:	ldr	x3, [x7, x22]
   2c574:	cbnz	x3, 2c5a4 <PyInit__decimal@@Base+0x10364>
   2c578:	ldr	w0, [x1]
   2c57c:	tbnz	w0, #8, 2c650 <PyInit__decimal@@Base+0x10410>
   2c580:	and	w20, w20, #0x1
   2c584:	mov	x0, #0x0                   	// #0
   2c588:	ldp	x21, x22, [sp, #32]
   2c58c:	cmp	w20, #0x0
   2c590:	cneg	x0, x0, ne  // ne = any
   2c594:	ldp	x19, x20, [sp, #16]
   2c598:	ldp	x23, x24, [sp, #48]
   2c59c:	ldp	x29, x30, [sp], #144
   2c5a0:	ret
   2c5a4:	ldr	x8, [x0, #8]
   2c5a8:	str	x25, [sp, #64]
   2c5ac:	ldr	x25, [x0, #16]
   2c5b0:	add	x9, x25, x8
   2c5b4:	cmp	x9, #0x14
   2c5b8:	b.gt	2c790 <PyInit__decimal@@Base+0x10550>
   2c5bc:	tbnz	x8, #63, 2c6ec <PyInit__decimal@@Base+0x104ac>
   2c5c0:	mov	x0, #0x435f                	// #17247
   2c5c4:	mov	x2, #0x13                  	// #19
   2c5c8:	movk	x0, #0xd79, lsl #16
   2c5cc:	ldr	w4, [x23]
   2c5d0:	movk	x0, #0x35e5, lsl #32
   2c5d4:	movk	x0, #0xd794, lsl #48
   2c5d8:	umulh	x0, x25, x0
   2c5dc:	lsr	x0, x0, #4
   2c5e0:	add	x1, x0, x0, lsl #2
   2c5e4:	lsl	x1, x1, #2
   2c5e8:	sub	x0, x1, x0
   2c5ec:	subs	x0, x25, x0
   2c5f0:	csel	x0, x0, x2, ne  // ne = any
   2c5f4:	cmp	x21, #0x1
   2c5f8:	b.le	2c668 <PyInit__decimal@@Base+0x10428>
   2c5fc:	sub	x5, x0, #0x1
   2c600:	add	x7, x7, x24
   2c604:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c608:	add	x1, x1, #0x180
   2c60c:	mov	x2, #0x14                  	// #20
   2c610:	sub	x2, x2, x0
   2c614:	ldur	x0, [x7, #-16]
   2c618:	ldr	x5, [x1, x5, lsl #3]
   2c61c:	ldr	x2, [x1, x2, lsl #3]
   2c620:	udiv	x0, x0, x5
   2c624:	mul	x1, x3, x2
   2c628:	umulh	x2, x3, x2
   2c62c:	adds	x0, x1, x0
   2c630:	cset	x1, cs  // cs = hs, nlast
   2c634:	cmp	x2, #0x0
   2c638:	mov	x3, x0
   2c63c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   2c640:	b.eq	2c668 <PyInit__decimal@@Base+0x10428>  // b.none
   2c644:	orr	w4, w4, #0x100
   2c648:	ldr	x25, [sp, #64]
   2c64c:	str	w4, [x23]
   2c650:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c654:	ldp	x19, x20, [sp, #16]
   2c658:	ldp	x21, x22, [sp, #32]
   2c65c:	ldp	x23, x24, [sp, #48]
   2c660:	ldp	x29, x30, [sp], #144
   2c664:	ret
   2c668:	cbz	x8, 2c684 <PyInit__decimal@@Base+0x10444>
   2c66c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c670:	add	x0, x0, #0x180
   2c674:	ldr	x0, [x0, x8, lsl #3]
   2c678:	umulh	x1, x3, x0
   2c67c:	mul	x3, x3, x0
   2c680:	cbnz	x1, 2c644 <PyInit__decimal@@Base+0x10404>
   2c684:	tbnz	w4, #8, 2c7c4 <PyInit__decimal@@Base+0x10584>
   2c688:	ldrb	w20, [x19]
   2c68c:	mov	x0, x3
   2c690:	and	w20, w20, #0x1
   2c694:	tbz	x3, #63, 2c7f4 <PyInit__decimal@@Base+0x105b4>
   2c698:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2c69c:	cmp	x3, x1
   2c6a0:	csel	w20, w20, wzr, eq  // eq = none
   2c6a4:	cbnz	w20, 2c7fc <PyInit__decimal@@Base+0x105bc>
   2c6a8:	orr	w4, w4, #0x100
   2c6ac:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c6b0:	ldp	x21, x22, [sp, #32]
   2c6b4:	ldr	x25, [sp, #64]
   2c6b8:	str	w4, [x23]
   2c6bc:	ldp	x19, x20, [sp, #16]
   2c6c0:	ldp	x23, x24, [sp, #48]
   2c6c4:	ldp	x29, x30, [sp], #144
   2c6c8:	ret
   2c6cc:	ldr	w1, [x1]
   2c6d0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2c6d4:	ldp	x19, x20, [sp, #16]
   2c6d8:	orr	w1, w1, #0x100
   2c6dc:	str	w1, [x23]
   2c6e0:	ldp	x23, x24, [sp, #48]
   2c6e4:	ldp	x29, x30, [sp], #144
   2c6e8:	ret
   2c6ec:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2c6f0:	cbz	w0, 2c790 <PyInit__decimal@@Base+0x10550>
   2c6f4:	mov	x0, #0x2                   	// #2
   2c6f8:	add	x4, sp, #0x50
   2c6fc:	mov	w1, #0x30                  	// #48
   2c700:	strb	w1, [sp, #96]
   2c704:	stp	x0, x4, [sp, #128]
   2c708:	ldr	x0, [x10]
   2c70c:	cbz	x0, 2c7cc <PyInit__decimal@@Base+0x1058c>
   2c710:	neg	x3, x8
   2c714:	cmp	x25, x3
   2c718:	b.le	2c7a4 <PyInit__decimal@@Base+0x10564>
   2c71c:	mov	x21, #0x9436                	// #37942
   2c720:	mov	x0, x4
   2c724:	movk	x21, #0x50d7, lsl #16
   2c728:	mov	x2, x11
   2c72c:	movk	x21, #0x435e, lsl #32
   2c730:	mov	x1, x7
   2c734:	movk	x21, #0xd79, lsl #48
   2c738:	str	x9, [sp, #112]
   2c73c:	smulh	x21, x9, x21
   2c740:	sub	x21, x21, x9, asr #63
   2c744:	add	x4, x21, x21, lsl #2
   2c748:	lsl	x4, x4, #2
   2c74c:	sub	x4, x4, x21
   2c750:	cmp	x9, x4
   2c754:	cinc	x21, x21, ne  // ne = any
   2c758:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2c75c:	str	x21, [sp, #120]
   2c760:	ldrb	w0, [sp, #96]
   2c764:	lsl	x24, x21, #3
   2c768:	ldrb	w1, [x19]
   2c76c:	sub	x22, x24, #0x8
   2c770:	ldr	x25, [sp, #112]
   2c774:	ldr	x7, [sp, #136]
   2c778:	bfxil	w0, w1, #0, #4
   2c77c:	strb	w0, [sp, #96]
   2c780:	str	xzr, [sp, #104]
   2c784:	mov	x8, #0x0                   	// #0
   2c788:	ldr	x3, [x7, x22]
   2c78c:	b	2c5c0 <PyInit__decimal@@Base+0x10380>
   2c790:	ldr	w0, [x23]
   2c794:	ldr	x25, [sp, #64]
   2c798:	orr	w0, w0, #0x100
   2c79c:	str	w0, [x23]
   2c7a0:	b	2c650 <PyInit__decimal@@Base+0x10410>
   2c7a4:	mov	x1, x21
   2c7a8:	cset	w2, eq  // eq = none
   2c7ac:	mov	x0, x7
   2c7b0:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2c7b4:	add	x0, sp, #0x60
   2c7b8:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2c7bc:	ldr	x21, [sp, #120]
   2c7c0:	b	2c760 <PyInit__decimal@@Base+0x10520>
   2c7c4:	ldr	x25, [sp, #64]
   2c7c8:	b	2c650 <PyInit__decimal@@Base+0x10410>
   2c7cc:	and	w20, w20, #0xf
   2c7d0:	mov	x1, x7
   2c7d4:	mov	x2, x24
   2c7d8:	mov	x0, x4
   2c7dc:	orr	w20, w20, #0x30
   2c7e0:	bl	6470 <memcpy@plt>
   2c7e4:	mov	x7, x0
   2c7e8:	strb	w20, [sp, #96]
   2c7ec:	stp	x25, x21, [sp, #112]
   2c7f0:	b	2c780 <PyInit__decimal@@Base+0x10540>
   2c7f4:	ldr	x25, [sp, #64]
   2c7f8:	b	2c588 <PyInit__decimal@@Base+0x10348>
   2c7fc:	mov	x0, x1
   2c800:	ldp	x21, x22, [sp, #32]
   2c804:	ldr	x25, [sp, #64]
   2c808:	b	2c594 <PyInit__decimal@@Base+0x10354>
   2c80c:	nop
   2c810:	stp	x29, x30, [sp, #-144]!
   2c814:	mov	x29, sp
   2c818:	stp	x19, x20, [sp, #16]
   2c81c:	stp	x21, x22, [sp, #32]
   2c820:	mov	x22, x1
   2c824:	ldrb	w20, [x0]
   2c828:	tst	w20, #0xe
   2c82c:	b.ne	2c944 <PyInit__decimal@@Base+0x10704>  // b.any
   2c830:	stp	x23, x24, [sp, #48]
   2c834:	mov	x19, x0
   2c838:	ldr	x23, [x0, #24]
   2c83c:	ldr	x7, [x0, #40]
   2c840:	mov	x10, x23
   2c844:	lsl	x24, x23, #3
   2c848:	sub	x21, x24, #0x8
   2c84c:	add	x9, x7, x21
   2c850:	ldr	x1, [x7, x21]
   2c854:	cbnz	x1, 2c878 <PyInit__decimal@@Base+0x10638>
   2c858:	ldr	w1, [x22]
   2c85c:	and	w0, w1, #0x100
   2c860:	tbnz	w1, #8, 2ca54 <PyInit__decimal@@Base+0x10814>
   2c864:	ldp	x19, x20, [sp, #16]
   2c868:	ldp	x21, x22, [sp, #32]
   2c86c:	ldp	x23, x24, [sp, #48]
   2c870:	ldp	x29, x30, [sp], #144
   2c874:	ret
   2c878:	tbnz	w20, #0, 2c940 <PyInit__decimal@@Base+0x10700>
   2c87c:	ldr	x8, [x0, #8]
   2c880:	str	x25, [sp, #64]
   2c884:	ldr	x25, [x0, #16]
   2c888:	add	x11, x25, x8
   2c88c:	cmp	x11, #0x14
   2c890:	b.gt	2ca6c <PyInit__decimal@@Base+0x1082c>
   2c894:	tbnz	x8, #63, 2c964 <PyInit__decimal@@Base+0x10724>
   2c898:	mov	x0, #0x435f                	// #17247
   2c89c:	mov	x4, #0x13                  	// #19
   2c8a0:	movk	x0, #0xd79, lsl #16
   2c8a4:	ldr	w3, [x22]
   2c8a8:	movk	x0, #0x35e5, lsl #32
   2c8ac:	movk	x0, #0xd794, lsl #48
   2c8b0:	umulh	x0, x25, x0
   2c8b4:	lsr	x0, x0, #4
   2c8b8:	add	x2, x0, x0, lsl #2
   2c8bc:	lsl	x2, x2, #2
   2c8c0:	sub	x0, x2, x0
   2c8c4:	subs	x0, x25, x0
   2c8c8:	csel	x0, x0, x4, ne  // ne = any
   2c8cc:	cmp	x23, #0x1
   2c8d0:	b.le	2ca08 <PyInit__decimal@@Base+0x107c8>
   2c8d4:	add	x2, x7, x24
   2c8d8:	sub	x6, x0, #0x1
   2c8dc:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2c8e0:	add	x4, x4, #0x180
   2c8e4:	mov	x5, #0x14                  	// #20
   2c8e8:	sub	x5, x5, x0
   2c8ec:	ldur	x0, [x2, #-16]
   2c8f0:	ldr	x2, [x4, x6, lsl #3]
   2c8f4:	ldr	x4, [x4, x5, lsl #3]
   2c8f8:	udiv	x0, x0, x2
   2c8fc:	mul	x2, x1, x4
   2c900:	umulh	x1, x1, x4
   2c904:	adds	x0, x2, x0
   2c908:	cset	x2, cs  // cs = hs, nlast
   2c90c:	cmp	x1, #0x0
   2c910:	ccmp	x2, #0x0, #0x0, eq  // eq = none
   2c914:	mov	x1, x0
   2c918:	b.eq	2ca08 <PyInit__decimal@@Base+0x107c8>  // b.none
   2c91c:	orr	w3, w3, #0x100
   2c920:	mov	w0, #0xffffffff            	// #-1
   2c924:	ldp	x23, x24, [sp, #48]
   2c928:	ldr	x25, [sp, #64]
   2c92c:	str	w3, [x22]
   2c930:	ldp	x19, x20, [sp, #16]
   2c934:	ldp	x21, x22, [sp, #32]
   2c938:	ldp	x29, x30, [sp], #144
   2c93c:	ret
   2c940:	ldp	x23, x24, [sp, #48]
   2c944:	mov	w0, #0xffffffff            	// #-1
   2c948:	ldr	w1, [x22]
   2c94c:	ldp	x19, x20, [sp, #16]
   2c950:	orr	w1, w1, #0x100
   2c954:	str	w1, [x22]
   2c958:	ldp	x21, x22, [sp, #32]
   2c95c:	ldp	x29, x30, [sp], #144
   2c960:	ret
   2c964:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2c968:	cbz	w0, 2ca6c <PyInit__decimal@@Base+0x1082c>
   2c96c:	mov	x0, #0x2                   	// #2
   2c970:	add	x4, sp, #0x50
   2c974:	mov	w1, #0x30                  	// #48
   2c978:	strb	w1, [sp, #96]
   2c97c:	stp	x0, x4, [sp, #128]
   2c980:	ldr	x0, [x9]
   2c984:	cbz	x0, 2cab4 <PyInit__decimal@@Base+0x10874>
   2c988:	neg	x3, x8
   2c98c:	cmp	x25, x3
   2c990:	b.le	2ca94 <PyInit__decimal@@Base+0x10854>
   2c994:	mov	x23, #0x9436                	// #37942
   2c998:	mov	x0, x4
   2c99c:	movk	x23, #0x50d7, lsl #16
   2c9a0:	mov	x2, x10
   2c9a4:	movk	x23, #0x435e, lsl #32
   2c9a8:	mov	x1, x7
   2c9ac:	movk	x23, #0xd79, lsl #48
   2c9b0:	str	x11, [sp, #112]
   2c9b4:	smulh	x23, x11, x23
   2c9b8:	sub	x23, x23, x11, asr #63
   2c9bc:	add	x4, x23, x23, lsl #2
   2c9c0:	lsl	x4, x4, #2
   2c9c4:	sub	x4, x4, x23
   2c9c8:	cmp	x11, x4
   2c9cc:	cinc	x23, x23, ne  // ne = any
   2c9d0:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2c9d4:	str	x23, [sp, #120]
   2c9d8:	ldrb	w0, [sp, #96]
   2c9dc:	lsl	x24, x23, #3
   2c9e0:	ldrb	w1, [x19]
   2c9e4:	sub	x21, x24, #0x8
   2c9e8:	ldr	x25, [sp, #112]
   2c9ec:	ldr	x7, [sp, #136]
   2c9f0:	bfxil	w0, w1, #0, #4
   2c9f4:	strb	w0, [sp, #96]
   2c9f8:	str	xzr, [sp, #104]
   2c9fc:	mov	x8, #0x0                   	// #0
   2ca00:	ldr	x1, [x7, x21]
   2ca04:	b	2c898 <PyInit__decimal@@Base+0x10658>
   2ca08:	cbz	x8, 2ca24 <PyInit__decimal@@Base+0x107e4>
   2ca0c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2ca10:	add	x0, x0, #0x180
   2ca14:	ldr	x0, [x0, x8, lsl #3]
   2ca18:	umulh	x2, x1, x0
   2ca1c:	mul	x1, x1, x0
   2ca20:	cbnz	x2, 2c91c <PyInit__decimal@@Base+0x106dc>
   2ca24:	tbnz	w3, #8, 2ca50 <PyInit__decimal@@Base+0x10810>
   2ca28:	mov	x0, #0xffffffff            	// #4294967295
   2ca2c:	cmp	x1, x0
   2ca30:	b.hi	2c91c <PyInit__decimal@@Base+0x106dc>  // b.pmore
   2ca34:	mov	w0, w1
   2ca38:	ldp	x19, x20, [sp, #16]
   2ca3c:	ldp	x21, x22, [sp, #32]
   2ca40:	ldp	x23, x24, [sp, #48]
   2ca44:	ldr	x25, [sp, #64]
   2ca48:	ldp	x29, x30, [sp], #144
   2ca4c:	ret
   2ca50:	ldr	x25, [sp, #64]
   2ca54:	mov	w0, #0xffffffff            	// #-1
   2ca58:	ldp	x19, x20, [sp, #16]
   2ca5c:	ldp	x21, x22, [sp, #32]
   2ca60:	ldp	x23, x24, [sp, #48]
   2ca64:	ldp	x29, x30, [sp], #144
   2ca68:	ret
   2ca6c:	ldr	w1, [x22]
   2ca70:	mov	w0, #0xffffffff            	// #-1
   2ca74:	ldp	x23, x24, [sp, #48]
   2ca78:	orr	w1, w1, #0x100
   2ca7c:	ldr	x25, [sp, #64]
   2ca80:	str	w1, [x22]
   2ca84:	ldp	x19, x20, [sp, #16]
   2ca88:	ldp	x21, x22, [sp, #32]
   2ca8c:	ldp	x29, x30, [sp], #144
   2ca90:	ret
   2ca94:	mov	x1, x23
   2ca98:	cset	w2, eq  // eq = none
   2ca9c:	mov	x0, x7
   2caa0:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2caa4:	add	x0, sp, #0x60
   2caa8:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2caac:	ldr	x23, [sp, #120]
   2cab0:	b	2c9d8 <PyInit__decimal@@Base+0x10798>
   2cab4:	mov	x1, x7
   2cab8:	mov	x0, x4
   2cabc:	mov	x2, x24
   2cac0:	bl	6470 <memcpy@plt>
   2cac4:	mov	x4, x0
   2cac8:	and	w0, w20, #0xf
   2cacc:	orr	w0, w0, #0x30
   2cad0:	mov	x7, x4
   2cad4:	strb	w0, [sp, #96]
   2cad8:	stp	x25, x23, [sp, #112]
   2cadc:	b	2c9f8 <PyInit__decimal@@Base+0x107b8>
   2cae0:	stp	x29, x30, [sp, #-144]!
   2cae4:	mov	x29, sp
   2cae8:	stp	x21, x22, [sp, #32]
   2caec:	stp	x23, x24, [sp, #48]
   2caf0:	mov	x23, x1
   2caf4:	ldrb	w21, [x0]
   2caf8:	tst	w21, #0xe
   2cafc:	b.ne	2cc8c <PyInit__decimal@@Base+0x10a4c>  // b.any
   2cb00:	stp	x19, x20, [sp, #16]
   2cb04:	mov	x19, x0
   2cb08:	ldr	x20, [x0, #24]
   2cb0c:	ldr	x7, [x0, #40]
   2cb10:	mov	x11, x20
   2cb14:	lsl	x24, x20, #3
   2cb18:	sub	x22, x24, #0x8
   2cb1c:	add	x10, x7, x22
   2cb20:	ldr	x4, [x7, x22]
   2cb24:	cbnz	x4, 2cb64 <PyInit__decimal@@Base+0x10924>
   2cb28:	ldr	w3, [x1]
   2cb2c:	tbnz	w3, #8, 2cd84 <PyInit__decimal@@Base+0x10b44>
   2cb30:	mov	x0, #0x0                   	// #0
   2cb34:	tbz	w21, #0, 2cb50 <PyInit__decimal@@Base+0x10910>
   2cb38:	neg	x0, x0
   2cb3c:	mov	x1, #0x80000000            	// #2147483648
   2cb40:	add	x1, x0, x1
   2cb44:	mov	x2, #0xffffffff            	// #4294967295
   2cb48:	cmp	x1, x2
   2cb4c:	b.hi	2cd48 <PyInit__decimal@@Base+0x10b08>  // b.pmore
   2cb50:	ldp	x19, x20, [sp, #16]
   2cb54:	ldp	x21, x22, [sp, #32]
   2cb58:	ldp	x23, x24, [sp, #48]
   2cb5c:	ldp	x29, x30, [sp], #144
   2cb60:	ret
   2cb64:	ldr	x9, [x0, #8]
   2cb68:	str	x25, [sp, #64]
   2cb6c:	ldr	x25, [x0, #16]
   2cb70:	add	x8, x25, x9
   2cb74:	cmp	x8, #0x14
   2cb78:	b.gt	2cd68 <PyInit__decimal@@Base+0x10b28>
   2cb7c:	tbnz	x9, #63, 2cca0 <PyInit__decimal@@Base+0x10a60>
   2cb80:	mov	x0, #0x435f                	// #17247
   2cb84:	mov	x2, #0x13                  	// #19
   2cb88:	movk	x0, #0xd79, lsl #16
   2cb8c:	ldr	w3, [x23]
   2cb90:	movk	x0, #0x35e5, lsl #32
   2cb94:	movk	x0, #0xd794, lsl #48
   2cb98:	umulh	x0, x25, x0
   2cb9c:	lsr	x0, x0, #4
   2cba0:	add	x1, x0, x0, lsl #2
   2cba4:	lsl	x1, x1, #2
   2cba8:	sub	x0, x1, x0
   2cbac:	subs	x0, x25, x0
   2cbb0:	csel	x0, x0, x2, ne  // ne = any
   2cbb4:	cmp	x20, #0x1
   2cbb8:	b.le	2cc24 <PyInit__decimal@@Base+0x109e4>
   2cbbc:	sub	x5, x0, #0x1
   2cbc0:	add	x7, x7, x24
   2cbc4:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2cbc8:	add	x1, x1, #0x180
   2cbcc:	mov	x2, #0x14                  	// #20
   2cbd0:	sub	x0, x2, x0
   2cbd4:	ldur	x2, [x7, #-16]
   2cbd8:	ldr	x5, [x1, x5, lsl #3]
   2cbdc:	ldr	x1, [x1, x0, lsl #3]
   2cbe0:	udiv	x2, x2, x5
   2cbe4:	mul	x0, x4, x1
   2cbe8:	umulh	x1, x4, x1
   2cbec:	adds	x4, x0, x2
   2cbf0:	cset	x0, cs  // cs = hs, nlast
   2cbf4:	cmp	x1, #0x0
   2cbf8:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2cbfc:	b.eq	2cc24 <PyInit__decimal@@Base+0x109e4>  // b.none
   2cc00:	orr	w3, w3, #0x100
   2cc04:	mov	w0, #0x7fffffff            	// #2147483647
   2cc08:	ldp	x19, x20, [sp, #16]
   2cc0c:	ldr	x25, [sp, #64]
   2cc10:	str	w3, [x23]
   2cc14:	ldp	x21, x22, [sp, #32]
   2cc18:	ldp	x23, x24, [sp, #48]
   2cc1c:	ldp	x29, x30, [sp], #144
   2cc20:	ret
   2cc24:	cbz	x9, 2cc40 <PyInit__decimal@@Base+0x10a00>
   2cc28:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2cc2c:	add	x0, x0, #0x180
   2cc30:	ldr	x0, [x0, x9, lsl #3]
   2cc34:	umulh	x1, x4, x0
   2cc38:	mul	x4, x4, x0
   2cc3c:	cbnz	x1, 2cc00 <PyInit__decimal@@Base+0x109c0>
   2cc40:	and	w0, w3, #0x100
   2cc44:	cbnz	w0, 2cde4 <PyInit__decimal@@Base+0x10ba4>
   2cc48:	ldrb	w1, [x19]
   2cc4c:	mov	x0, x4
   2cc50:	tbz	x4, #63, 2cdd8 <PyInit__decimal@@Base+0x10b98>
   2cc54:	and	w1, w1, #0x1
   2cc58:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2cc5c:	cmp	x4, x0
   2cc60:	csel	w1, w1, wzr, eq  // eq = none
   2cc64:	cbnz	w1, 2cd44 <PyInit__decimal@@Base+0x10b04>
   2cc68:	orr	w3, w3, #0x100
   2cc6c:	mov	w0, #0x7fffffff            	// #2147483647
   2cc70:	ldp	x19, x20, [sp, #16]
   2cc74:	ldr	x25, [sp, #64]
   2cc78:	str	w3, [x23]
   2cc7c:	ldp	x21, x22, [sp, #32]
   2cc80:	ldp	x23, x24, [sp, #48]
   2cc84:	ldp	x29, x30, [sp], #144
   2cc88:	ret
   2cc8c:	ldr	w0, [x1]
   2cc90:	orr	w0, w0, #0x100
   2cc94:	str	w0, [x1]
   2cc98:	mov	w0, #0x7fffffff            	// #2147483647
   2cc9c:	b	2cc14 <PyInit__decimal@@Base+0x109d4>
   2cca0:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   2cca4:	cbz	w0, 2cd68 <PyInit__decimal@@Base+0x10b28>
   2cca8:	mov	x0, #0x2                   	// #2
   2ccac:	add	x4, sp, #0x50
   2ccb0:	mov	w1, #0x30                  	// #48
   2ccb4:	strb	w1, [sp, #96]
   2ccb8:	stp	x0, x4, [sp, #128]
   2ccbc:	ldr	x0, [x10]
   2ccc0:	cbz	x0, 2cdb0 <PyInit__decimal@@Base+0x10b70>
   2ccc4:	neg	x3, x9
   2ccc8:	cmp	x25, x3
   2cccc:	b.le	2cd90 <PyInit__decimal@@Base+0x10b50>
   2ccd0:	mov	x20, #0x9436                	// #37942
   2ccd4:	mov	x0, x4
   2ccd8:	movk	x20, #0x50d7, lsl #16
   2ccdc:	mov	x2, x11
   2cce0:	movk	x20, #0x435e, lsl #32
   2cce4:	mov	x1, x7
   2cce8:	movk	x20, #0xd79, lsl #48
   2ccec:	str	x8, [sp, #112]
   2ccf0:	smulh	x20, x8, x20
   2ccf4:	sub	x20, x20, x8, asr #63
   2ccf8:	add	x4, x20, x20, lsl #2
   2ccfc:	lsl	x4, x4, #2
   2cd00:	sub	x4, x4, x20
   2cd04:	cmp	x8, x4
   2cd08:	cinc	x20, x20, ne  // ne = any
   2cd0c:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2cd10:	str	x20, [sp, #120]
   2cd14:	ldrb	w0, [sp, #96]
   2cd18:	lsl	x24, x20, #3
   2cd1c:	ldrb	w1, [x19]
   2cd20:	sub	x22, x24, #0x8
   2cd24:	ldr	x25, [sp, #112]
   2cd28:	ldr	x7, [sp, #136]
   2cd2c:	bfxil	w0, w1, #0, #4
   2cd30:	strb	w0, [sp, #96]
   2cd34:	str	xzr, [sp, #104]
   2cd38:	mov	x9, #0x0                   	// #0
   2cd3c:	ldr	x4, [x7, x22]
   2cd40:	b	2cb80 <PyInit__decimal@@Base+0x10940>
   2cd44:	ldr	x25, [sp, #64]
   2cd48:	orr	w3, w3, #0x100
   2cd4c:	ldp	x19, x20, [sp, #16]
   2cd50:	str	w3, [x23]
   2cd54:	mov	w0, #0x7fffffff            	// #2147483647
   2cd58:	ldp	x21, x22, [sp, #32]
   2cd5c:	ldp	x23, x24, [sp, #48]
   2cd60:	ldp	x29, x30, [sp], #144
   2cd64:	ret
   2cd68:	ldr	w0, [x23]
   2cd6c:	ldp	x19, x20, [sp, #16]
   2cd70:	orr	w0, w0, #0x100
   2cd74:	ldr	x25, [sp, #64]
   2cd78:	str	w0, [x23]
   2cd7c:	mov	w0, #0x7fffffff            	// #2147483647
   2cd80:	b	2cc14 <PyInit__decimal@@Base+0x109d4>
   2cd84:	mov	w0, #0x7fffffff            	// #2147483647
   2cd88:	ldp	x19, x20, [sp, #16]
   2cd8c:	b	2cc14 <PyInit__decimal@@Base+0x109d4>
   2cd90:	mov	x1, x20
   2cd94:	cset	w2, eq  // eq = none
   2cd98:	mov	x0, x7
   2cd9c:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2cda0:	add	x0, sp, #0x60
   2cda4:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2cda8:	ldr	x20, [sp, #120]
   2cdac:	b	2cd14 <PyInit__decimal@@Base+0x10ad4>
   2cdb0:	and	w21, w21, #0xf
   2cdb4:	mov	x1, x7
   2cdb8:	mov	x2, x24
   2cdbc:	mov	x0, x4
   2cdc0:	orr	w21, w21, #0x30
   2cdc4:	bl	6470 <memcpy@plt>
   2cdc8:	mov	x7, x0
   2cdcc:	strb	w21, [sp, #96]
   2cdd0:	stp	x25, x20, [sp, #112]
   2cdd4:	b	2cd34 <PyInit__decimal@@Base+0x10af4>
   2cdd8:	ldr	x25, [sp, #64]
   2cddc:	tbz	w1, #0, 2cb3c <PyInit__decimal@@Base+0x108fc>
   2cde0:	b	2cb38 <PyInit__decimal@@Base+0x108f8>
   2cde4:	mov	w0, #0x7fffffff            	// #2147483647
   2cde8:	ldp	x19, x20, [sp, #16]
   2cdec:	ldr	x25, [sp, #64]
   2cdf0:	b	2cc14 <PyInit__decimal@@Base+0x109d4>
   2cdf4:	nop
   2cdf8:	cmp	x0, x1
   2cdfc:	b.eq	2cea4 <PyInit__decimal@@Base+0x10c64>  // b.none
   2ce00:	stp	x29, x30, [sp, #-32]!
   2ce04:	mov	x29, sp
   2ce08:	stp	x19, x20, [sp, #16]
   2ce0c:	mov	x20, x1
   2ce10:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ce14:	ldr	x5, [x0, #32]
   2ce18:	mov	x19, x0
   2ce1c:	ldr	x1, [x1, #1880]
   2ce20:	ldr	x4, [x20, #24]
   2ce24:	ldrb	w3, [x0]
   2ce28:	cmp	x1, x4
   2ce2c:	csel	x1, x1, x4, ge  // ge = tcont
   2ce30:	cmp	x1, x5
   2ce34:	b.eq	2ce44 <PyInit__decimal@@Base+0x10c04>  // b.none
   2ce38:	tbz	w3, #5, 2ce88 <PyInit__decimal@@Base+0x10c48>
   2ce3c:	cmp	x1, x5
   2ce40:	b.gt	2ce9c <PyInit__decimal@@Base+0x10c5c>
   2ce44:	ldrb	w1, [x20]
   2ce48:	and	w3, w3, #0xfffffff0
   2ce4c:	ldr	x0, [x19, #40]
   2ce50:	and	w1, w1, #0xf
   2ce54:	orr	w1, w1, w3
   2ce58:	strb	w1, [x19]
   2ce5c:	ldur	q0, [x20, #8]
   2ce60:	ldr	x1, [x20, #40]
   2ce64:	str	x4, [x19, #24]
   2ce68:	stur	q0, [x19, #8]
   2ce6c:	ldr	x2, [x20, #24]
   2ce70:	lsl	x2, x2, #3
   2ce74:	bl	6470 <memcpy@plt>
   2ce78:	mov	w0, #0x1                   	// #1
   2ce7c:	ldp	x19, x20, [sp, #16]
   2ce80:	ldp	x29, x30, [sp], #32
   2ce84:	ret
   2ce88:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2ce8c:	cbz	w0, 2ce7c <PyInit__decimal@@Base+0x10c3c>
   2ce90:	ldrb	w3, [x19]
   2ce94:	ldr	x4, [x20, #24]
   2ce98:	b	2ce44 <PyInit__decimal@@Base+0x10c04>
   2ce9c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2cea0:	b	2ce8c <PyInit__decimal@@Base+0x10c4c>
   2cea4:	mov	w0, #0x1                   	// #1
   2cea8:	ret
   2ceac:	nop
   2ceb0:	ldrb	w4, [x1]
   2ceb4:	tst	w4, #0xc
   2ceb8:	b.ne	2cec4 <PyInit__decimal@@Base+0x10c84>  // b.any
   2cebc:	mov	w0, #0x0                   	// #0
   2cec0:	ret
   2cec4:	stp	x29, x30, [sp, #-32]!
   2cec8:	ubfx	x4, x4, #3, #1
   2cecc:	mov	x29, sp
   2ced0:	ldr	w5, [x3]
   2ced4:	stp	x19, x20, [sp, #16]
   2ced8:	mov	x19, x0
   2cedc:	mov	x20, x2
   2cee0:	orr	w4, w5, w4, lsl #8
   2cee4:	str	w4, [x3]
   2cee8:	mov	x2, x3
   2ceec:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2cef0:	ldrb	w1, [x19]
   2cef4:	mov	x0, x19
   2cef8:	and	w1, w1, #0xfffffff1
   2cefc:	orr	w1, w1, #0x4
   2cf00:	strb	w1, [x19]
   2cf04:	ldr	w2, [x20, #40]
   2cf08:	ldr	x1, [x20]
   2cf0c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   2cf10:	mov	w0, #0x1                   	// #1
   2cf14:	ldp	x19, x20, [sp, #16]
   2cf18:	ldp	x29, x30, [sp], #32
   2cf1c:	ret
   2cf20:	stp	x29, x30, [sp, #-32]!
   2cf24:	mov	x5, x2
   2cf28:	mov	x29, sp
   2cf2c:	stp	x19, x20, [sp, #16]
   2cf30:	mov	x19, x0
   2cf34:	mov	x20, x3
   2cf38:	ldrb	w0, [x1]
   2cf3c:	ldrb	w2, [x2]
   2cf40:	orr	w3, w0, w2
   2cf44:	tst	w3, #0xc
   2cf48:	b.ne	2cf5c <PyInit__decimal@@Base+0x10d1c>  // b.any
   2cf4c:	mov	w0, #0x0                   	// #0
   2cf50:	ldp	x19, x20, [sp, #16]
   2cf54:	ldp	x29, x30, [sp], #32
   2cf58:	ret
   2cf5c:	tbnz	w0, #3, 2cfb0 <PyInit__decimal@@Base+0x10d70>
   2cf60:	tbz	w2, #3, 2cfc0 <PyInit__decimal@@Base+0x10d80>
   2cf64:	ldr	w0, [x4]
   2cf68:	mov	x1, x5
   2cf6c:	orr	w0, w0, #0x100
   2cf70:	str	w0, [x4]
   2cf74:	mov	x2, x4
   2cf78:	mov	x0, x19
   2cf7c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2cf80:	ldrb	w1, [x19]
   2cf84:	mov	x0, x19
   2cf88:	and	w1, w1, #0xfffffff1
   2cf8c:	orr	w1, w1, #0x4
   2cf90:	strb	w1, [x19]
   2cf94:	ldr	w2, [x20, #40]
   2cf98:	ldr	x1, [x20]
   2cf9c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   2cfa0:	mov	w0, #0x1                   	// #1
   2cfa4:	ldp	x19, x20, [sp, #16]
   2cfa8:	ldp	x29, x30, [sp], #32
   2cfac:	ret
   2cfb0:	ldr	w0, [x4]
   2cfb4:	orr	w0, w0, #0x100
   2cfb8:	str	w0, [x4]
   2cfbc:	b	2cf74 <PyInit__decimal@@Base+0x10d34>
   2cfc0:	tst	x0, #0x4
   2cfc4:	csel	x1, x1, x5, ne  // ne = any
   2cfc8:	b	2cf74 <PyInit__decimal@@Base+0x10d34>
   2cfcc:	nop
   2cfd0:	sub	sp, sp, #0x290
   2cfd4:	stp	x29, x30, [sp]
   2cfd8:	mov	x29, sp
   2cfdc:	stp	x19, x20, [sp, #16]
   2cfe0:	mov	x19, x4
   2cfe4:	stp	x21, x22, [sp, #32]
   2cfe8:	mov	x22, x0
   2cfec:	stp	x23, x24, [sp, #48]
   2cff0:	mov	x23, x1
   2cff4:	mov	x24, x2
   2cff8:	ldrb	w5, [x1]
   2cffc:	tst	w5, #0xe
   2d000:	b.ne	2d010 <PyInit__decimal@@Base+0x10dd0>  // b.any
   2d004:	ldrb	w0, [x2]
   2d008:	tst	w0, #0xe
   2d00c:	b.eq	2d040 <PyInit__decimal@@Base+0x10e00>  // b.none
   2d010:	mov	x4, x19
   2d014:	mov	x2, x24
   2d018:	mov	x1, x23
   2d01c:	mov	x0, x22
   2d020:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   2d024:	cbz	w0, 2d1d4 <PyInit__decimal@@Base+0x10f94>
   2d028:	ldp	x29, x30, [sp]
   2d02c:	ldp	x19, x20, [sp, #16]
   2d030:	ldp	x21, x22, [sp, #32]
   2d034:	ldp	x23, x24, [sp, #48]
   2d038:	add	sp, sp, #0x290
   2d03c:	ret
   2d040:	stp	x25, x26, [sp, #64]
   2d044:	stp	x27, x28, [sp, #80]
   2d048:	ldr	x26, [x2, #24]
   2d04c:	ldr	x27, [x1, #24]
   2d050:	cmp	x26, x27
   2d054:	b.gt	2d20c <PyInit__decimal@@Base+0x10fcc>
   2d058:	mov	x0, x26
   2d05c:	mov	x21, x2
   2d060:	mov	x26, x27
   2d064:	mov	x20, x1
   2d068:	mov	x27, x0
   2d06c:	add	x0, x26, x27
   2d070:	str	x0, [sp, #136]
   2d074:	cmp	x26, #0x1
   2d078:	b.eq	2d4a8 <PyInit__decimal@@Base+0x11268>  // b.none
   2d07c:	cmp	x0, #0x40
   2d080:	b.hi	2d280 <PyInit__decimal@@Base+0x11040>  // b.pmore
   2d084:	cmp	x26, #0x2
   2d088:	ldr	x5, [x20, #40]
   2d08c:	ldr	x28, [x21, #40]
   2d090:	b.eq	2d678 <PyInit__decimal@@Base+0x11438>  // b.none
   2d094:	cbz	x0, 2d748 <PyInit__decimal@@Base+0x11508>
   2d098:	add	x25, sp, #0x90
   2d09c:	lsl	x2, x0, #3
   2d0a0:	mov	w1, #0x0                   	// #0
   2d0a4:	mov	x0, x25
   2d0a8:	str	x5, [sp, #96]
   2d0ac:	bl	6670 <memset@plt>
   2d0b0:	ldr	x5, [sp, #96]
   2d0b4:	cmp	x27, #0x1
   2d0b8:	b.eq	2d490 <PyInit__decimal@@Base+0x11250>  // b.none
   2d0bc:	mov	x4, x26
   2d0c0:	mov	x3, x27
   2d0c4:	mov	x2, x5
   2d0c8:	mov	x1, x28
   2d0cc:	mov	x0, x25
   2d0d0:	bl	1d508 <PyInit__decimal@@Base+0x12c8>
   2d0d4:	adrp	x26, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d0d8:	ldr	x0, [sp, #136]
   2d0dc:	ldr	x1, [x26, #1880]
   2d0e0:	ldr	x2, [x22, #32]
   2d0e4:	cmp	x1, x0
   2d0e8:	csel	x1, x1, x0, ge  // ge = tcont
   2d0ec:	cmp	x1, x2
   2d0f0:	b.eq	2d104 <PyInit__decimal@@Base+0x10ec4>  // b.none
   2d0f4:	ldrb	w3, [x22]
   2d0f8:	tbz	w3, #5, 2d540 <PyInit__decimal@@Base+0x11300>
   2d0fc:	cmp	x1, x2
   2d100:	b.gt	2d738 <PyInit__decimal@@Base+0x114f8>
   2d104:	mov	x4, x25
   2d108:	mov	x5, #0x0                   	// #0
   2d10c:	ldr	x25, [x22, #40]
   2d110:	cbz	x0, 2d750 <PyInit__decimal@@Base+0x11510>
   2d114:	nop
   2d118:	ldr	x0, [x4], #8
   2d11c:	str	x0, [x25, x5, lsl #3]
   2d120:	add	x5, x5, #0x1
   2d124:	ldr	x3, [sp, #136]
   2d128:	cmp	x3, x5
   2d12c:	b.hi	2d118 <PyInit__decimal@@Base+0x10ed8>  // b.pmore
   2d130:	ldrb	w0, [x22]
   2d134:	ldr	x5, [x22, #32]
   2d138:	and	w0, w0, #0xfffffff0
   2d13c:	ldrb	w1, [x23]
   2d140:	cmp	x3, #0x1
   2d144:	ldrb	w4, [x24]
   2d148:	eor	w4, w4, w1
   2d14c:	and	w4, w4, #0x1
   2d150:	orr	w4, w4, w0
   2d154:	strb	w4, [x22]
   2d158:	ldr	x0, [x20, #8]
   2d15c:	ldr	x1, [x21, #8]
   2d160:	add	x0, x0, x1
   2d164:	str	x0, [x22, #8]
   2d168:	b.le	2d188 <PyInit__decimal@@Base+0x10f48>
   2d16c:	sub	x2, x25, #0x8
   2d170:	b	2d180 <PyInit__decimal@@Base+0x10f40>
   2d174:	sub	x3, x3, #0x1
   2d178:	cmp	x3, #0x1
   2d17c:	b.eq	2d188 <PyInit__decimal@@Base+0x10f48>  // b.none
   2d180:	ldr	x1, [x2, x3, lsl #3]
   2d184:	cbz	x1, 2d174 <PyInit__decimal@@Base+0x10f34>
   2d188:	ldr	x1, [x26, #1880]
   2d18c:	str	x3, [x22, #24]
   2d190:	cmp	x1, x3
   2d194:	csel	x1, x1, x3, ge  // ge = tcont
   2d198:	cmp	x1, x5
   2d19c:	b.eq	2d1ac <PyInit__decimal@@Base+0x10f6c>  // b.none
   2d1a0:	tbz	w4, #5, 2d3fc <PyInit__decimal@@Base+0x111bc>
   2d1a4:	cmp	x1, x5
   2d1a8:	b.gt	2d40c <PyInit__decimal@@Base+0x111cc>
   2d1ac:	mov	x0, x22
   2d1b0:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   2d1b4:	ldp	x29, x30, [sp]
   2d1b8:	ldp	x19, x20, [sp, #16]
   2d1bc:	ldp	x21, x22, [sp, #32]
   2d1c0:	ldp	x23, x24, [sp, #48]
   2d1c4:	ldp	x25, x26, [sp, #64]
   2d1c8:	ldp	x27, x28, [sp, #80]
   2d1cc:	add	sp, sp, #0x290
   2d1d0:	ret
   2d1d4:	ldrb	w1, [x23]
   2d1d8:	tbnz	w1, #1, 2d218 <PyInit__decimal@@Base+0x10fd8>
   2d1dc:	tst	w1, #0xe
   2d1e0:	b.ne	2d250 <PyInit__decimal@@Base+0x11010>  // b.any
   2d1e4:	ldr	x0, [x23, #24]
   2d1e8:	ldr	x2, [x23, #40]
   2d1ec:	add	x0, x2, x0, lsl #3
   2d1f0:	ldur	x0, [x0, #-8]
   2d1f4:	cbnz	x0, 2d250 <PyInit__decimal@@Base+0x11010>
   2d1f8:	mov	x2, x19
   2d1fc:	mov	x0, x22
   2d200:	mov	w1, #0x100                 	// #256
   2d204:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   2d208:	b	2d028 <PyInit__decimal@@Base+0x10de8>
   2d20c:	mov	x21, x1
   2d210:	mov	x20, x2
   2d214:	b	2d06c <PyInit__decimal@@Base+0x10e2c>
   2d218:	ldrb	w0, [x24]
   2d21c:	tst	w0, #0xe
   2d220:	b.ne	2d238 <PyInit__decimal@@Base+0x10ff8>  // b.any
   2d224:	ldr	x2, [x24, #24]
   2d228:	ldr	x3, [x24, #40]
   2d22c:	add	x2, x3, x2, lsl #3
   2d230:	ldur	x2, [x2, #-8]
   2d234:	cbz	x2, 2d1f8 <PyInit__decimal@@Base+0x10fb8>
   2d238:	eor	w1, w1, w0
   2d23c:	mov	w2, #0x2                   	// #2
   2d240:	mov	x0, x22
   2d244:	and	w1, w1, #0x1
   2d248:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2d24c:	b	2d028 <PyInit__decimal@@Base+0x10de8>
   2d250:	ldrb	w3, [x24]
   2d254:	mov	x0, x22
   2d258:	mov	w2, #0x2                   	// #2
   2d25c:	eor	w1, w1, w3
   2d260:	and	w1, w1, #0x1
   2d264:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2d268:	ldp	x29, x30, [sp]
   2d26c:	ldp	x19, x20, [sp, #16]
   2d270:	ldp	x21, x22, [sp, #32]
   2d274:	ldp	x23, x24, [sp, #48]
   2d278:	add	sp, sp, #0x290
   2d27c:	ret
   2d280:	cmp	x27, #0x100
   2d284:	b.le	2d45c <PyInit__decimal@@Base+0x1121c>
   2d288:	cmp	x0, #0x400
   2d28c:	ldr	x6, [x20, #40]
   2d290:	ldr	x7, [x21, #40]
   2d294:	b.ls	2d558 <PyInit__decimal@@Base+0x11318>  // b.plast
   2d298:	mov	x1, #0x300000000           	// #12884901888
   2d29c:	cmp	x0, x1
   2d2a0:	b.ls	2d41c <PyInit__decimal@@Base+0x111dc>  // b.plast
   2d2a4:	stp	x6, x7, [sp, #96]
   2d2a8:	mvn	x1, x27
   2d2ac:	cmp	x1, x26
   2d2b0:	b.cc	2d894 <PyInit__decimal@@Base+0x11654>  // b.lo, b.ul, b.last
   2d2b4:	cmn	x0, #0x1
   2d2b8:	b.eq	2d894 <PyInit__decimal@@Base+0x11654>  // b.none
   2d2bc:	add	x28, x26, #0x1
   2d2c0:	add	x0, x0, #0x1
   2d2c4:	lsr	x28, x28, #1
   2d2c8:	add	x4, x28, #0x1
   2d2cc:	lsl	x3, x4, #1
   2d2d0:	stp	x3, x4, [sp, #112]
   2d2d4:	lsr	x1, x4, #63
   2d2d8:	adds	x2, x3, x4
   2d2dc:	cinc	x1, x1, cs  // cs = hs, nlast
   2d2e0:	cbnz	x1, 2d898 <PyInit__decimal@@Base+0x11658>
   2d2e4:	cmp	x0, x2
   2d2e8:	mov	x1, #0x8                   	// #8
   2d2ec:	csel	x0, x0, x2, cs  // cs = hs, nlast
   2d2f0:	str	x0, [sp, #136]
   2d2f4:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   2d2f8:	mov	x25, x0
   2d2fc:	cbz	x0, 2d440 <PyInit__decimal@@Base+0x11200>
   2d300:	mov	x0, #0x180000000           	// #6442450944
   2d304:	cmp	x26, x0
   2d308:	ldp	x6, x7, [sp, #96]
   2d30c:	b.ls	2d39c <PyInit__decimal@@Base+0x1115c>  // b.plast
   2d310:	ldp	x3, x4, [sp, #112]
   2d314:	mov	x1, x0
   2d318:	cmp	x4, x1
   2d31c:	mov	x0, x3
   2d320:	b.ls	2d7bc <PyInit__decimal@@Base+0x1157c>  // b.plast
   2d324:	add	x0, x28, #0x2
   2d328:	lsr	x0, x0, #1
   2d32c:	add	x28, x0, #0x1
   2d330:	cmp	x28, x1
   2d334:	lsl	x28, x28, #1
   2d338:	b.ls	2d388 <PyInit__decimal@@Base+0x11148>  // b.plast
   2d33c:	add	x0, x0, #0x2
   2d340:	lsr	x0, x0, #1
   2d344:	add	x0, x0, #0x1
   2d348:	cmp	x0, x1
   2d34c:	lsl	x2, x0, #1
   2d350:	b.ls	2d878 <PyInit__decimal@@Base+0x11638>  // b.plast
   2d354:	stp	x2, x3, [sp, #112]
   2d358:	bl	29220 <PyInit__decimal@@Base+0xcfe0>
   2d35c:	mvn	x1, x0
   2d360:	ldr	x2, [sp, #112]
   2d364:	cmp	x2, x1
   2d368:	b.hi	2d894 <PyInit__decimal@@Base+0x11654>  // b.pmore
   2d36c:	add	x2, x2, x0
   2d370:	mvn	x0, x2
   2d374:	cmp	x28, x0
   2d378:	b.hi	2d894 <PyInit__decimal@@Base+0x11654>  // b.pmore
   2d37c:	ldp	x6, x7, [sp, #96]
   2d380:	add	x28, x28, x2
   2d384:	ldr	x3, [sp, #120]
   2d388:	mvn	x0, x28
   2d38c:	cmp	x3, x0
   2d390:	b.hi	2d894 <PyInit__decimal@@Base+0x11654>  // b.pmore
   2d394:	adds	x0, x3, x28
   2d398:	b.ne	2d7bc <PyInit__decimal@@Base+0x1157c>  // b.any
   2d39c:	mov	x5, x27
   2d3a0:	mov	x4, x26
   2d3a4:	mov	x2, x7
   2d3a8:	mov	x1, x6
   2d3ac:	mov	x0, x25
   2d3b0:	mov	x3, #0x0                   	// #0
   2d3b4:	bl	29690 <PyInit__decimal@@Base+0xd450>
   2d3b8:	cbz	w0, 2d880 <PyInit__decimal@@Base+0x11640>
   2d3bc:	nop
   2d3c0:	ldrb	w0, [x22]
   2d3c4:	tst	w0, #0xe0
   2d3c8:	b.ne	2d3e0 <PyInit__decimal@@Base+0x111a0>  // b.any
   2d3cc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d3d0:	ldr	x0, [x22, #40]
   2d3d4:	ldr	x1, [x1, #1912]
   2d3d8:	blr	x1
   2d3dc:	ldrb	w0, [x22]
   2d3e0:	ldr	x3, [sp, #136]
   2d3e4:	and	w0, w0, #0x1f
   2d3e8:	adrp	x26, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d3ec:	strb	w0, [x22]
   2d3f0:	mov	x5, x3
   2d3f4:	stp	x3, x25, [x22, #32]
   2d3f8:	b	2d138 <PyInit__decimal@@Base+0x10ef8>
   2d3fc:	mov	x2, x19
   2d400:	mov	x0, x22
   2d404:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2d408:	b	2d1ac <PyInit__decimal@@Base+0x10f6c>
   2d40c:	mov	x2, x19
   2d410:	mov	x0, x22
   2d414:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2d418:	b	2d1ac <PyInit__decimal@@Base+0x10f6c>
   2d41c:	mov	x3, x27
   2d420:	mov	x2, x26
   2d424:	mov	x1, x7
   2d428:	mov	x0, x6
   2d42c:	add	x4, sp, #0x88
   2d430:	bl	29278 <PyInit__decimal@@Base+0xd038>
   2d434:	mov	x25, x0
   2d438:	cbnz	x0, 2d3c0 <PyInit__decimal@@Base+0x11180>
   2d43c:	nop
   2d440:	mov	x2, x19
   2d444:	mov	x0, x22
   2d448:	mov	w1, #0x200                 	// #512
   2d44c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   2d450:	ldp	x25, x26, [sp, #64]
   2d454:	ldp	x27, x28, [sp, #80]
   2d458:	b	2d028 <PyInit__decimal@@Base+0x10de8>
   2d45c:	mov	x1, #0x8                   	// #8
   2d460:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   2d464:	mov	x25, x0
   2d468:	cbz	x0, 2d440 <PyInit__decimal@@Base+0x11200>
   2d46c:	ldr	x3, [x21, #24]
   2d470:	ldr	x4, [x20, #24]
   2d474:	cmp	x3, #0x1
   2d478:	ldr	x5, [x20, #40]
   2d47c:	ldr	x1, [x21, #40]
   2d480:	b.eq	2d78c <PyInit__decimal@@Base+0x1154c>  // b.none
   2d484:	mov	x2, x5
   2d488:	bl	1d508 <PyInit__decimal@@Base+0x12c8>
   2d48c:	b	2d3c0 <PyInit__decimal@@Base+0x11180>
   2d490:	ldr	x3, [x28]
   2d494:	mov	x2, x26
   2d498:	mov	x1, x5
   2d49c:	mov	x0, x25
   2d4a0:	bl	1d458 <PyInit__decimal@@Base+0x1218>
   2d4a4:	b	2d0d4 <PyInit__decimal@@Base+0x10e94>
   2d4a8:	ldr	x0, [x20, #40]
   2d4ac:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2d4b0:	ldr	x3, [x21, #40]
   2d4b4:	mov	x1, #0x89e80000            	// #2313682944
   2d4b8:	ldr	x0, [x0]
   2d4bc:	movk	x1, #0x2304, lsl #32
   2d4c0:	ldr	x3, [x3]
   2d4c4:	movk	x1, #0x8ac7, lsl #48
   2d4c8:	ldr	x6, [x2, #368]
   2d4cc:	mov	x5, #0x76180000            	// #1981284352
   2d4d0:	mul	x2, x0, x3
   2d4d4:	movk	x5, #0xdcfb, lsl #32
   2d4d8:	umulh	x0, x0, x3
   2d4dc:	movk	x5, #0x7538, lsl #48
   2d4e0:	ldr	x25, [x22, #40]
   2d4e4:	and	x4, x1, x2, asr #63
   2d4e8:	add	x4, x4, x2
   2d4ec:	add	x3, x0, x2, lsr #63
   2d4f0:	add	x5, x0, x5
   2d4f4:	adrp	x26, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d4f8:	madd	x7, x3, x6, x4
   2d4fc:	umulh	x3, x3, x6
   2d500:	cmp	x4, x7
   2d504:	cinc	x3, x3, hi  // hi = pmore
   2d508:	add	x0, x0, x3
   2d50c:	mvn	x0, x0
   2d510:	mul	x4, x0, x1
   2d514:	umulh	x3, x0, x1
   2d518:	adds	x2, x2, x4
   2d51c:	adc	x3, x3, x5
   2d520:	and	x1, x3, x1
   2d524:	sub	x3, x3, x0
   2d528:	add	x0, x1, x2
   2d52c:	stp	x0, x3, [x25]
   2d530:	ldrb	w0, [x22]
   2d534:	ldr	x5, [x22, #32]
   2d538:	ldr	x3, [sp, #136]
   2d53c:	b	2d138 <PyInit__decimal@@Base+0x10ef8>
   2d540:	mov	x2, x19
   2d544:	mov	x0, x22
   2d548:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2d54c:	cbz	w0, 2d66c <PyInit__decimal@@Base+0x1142c>
   2d550:	ldr	x0, [sp, #136]
   2d554:	b	2d104 <PyInit__decimal@@Base+0x10ec4>
   2d558:	mvn	x1, x27
   2d55c:	cmp	x1, x26
   2d560:	b.cc	2d894 <PyInit__decimal@@Base+0x11654>  // b.lo, b.ul, b.last
   2d564:	cmn	x0, #0x1
   2d568:	b.eq	2d894 <PyInit__decimal@@Base+0x11654>  // b.none
   2d56c:	add	x28, x26, #0x1
   2d570:	add	x0, x0, #0x1
   2d574:	lsr	x28, x28, #1
   2d578:	add	x4, x28, #0x1
   2d57c:	lsl	x3, x4, #1
   2d580:	lsr	x1, x4, #63
   2d584:	adds	x2, x3, x4
   2d588:	cinc	x1, x1, cs  // cs = hs, nlast
   2d58c:	cbnz	x1, 2d898 <PyInit__decimal@@Base+0x11658>
   2d590:	cmp	x0, x2
   2d594:	mov	x1, #0x8                   	// #8
   2d598:	csel	x0, x0, x2, cs  // cs = hs, nlast
   2d59c:	stp	x6, x7, [sp, #96]
   2d5a0:	stp	x4, x3, [sp, #112]
   2d5a4:	str	x0, [sp, #136]
   2d5a8:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   2d5ac:	mov	x25, x0
   2d5b0:	cbz	x0, 2d440 <PyInit__decimal@@Base+0x11200>
   2d5b4:	cmp	x26, #0x10
   2d5b8:	ldp	x6, x7, [sp, #96]
   2d5bc:	b.ls	2d7a0 <PyInit__decimal@@Base+0x11560>  // b.plast
   2d5c0:	ldp	x4, x3, [sp, #112]
   2d5c4:	cmp	x4, #0x10
   2d5c8:	mov	x0, x3
   2d5cc:	b.ls	2d814 <PyInit__decimal@@Base+0x115d4>  // b.plast
   2d5d0:	add	x0, x28, #0x2
   2d5d4:	lsr	x0, x0, #1
   2d5d8:	add	x28, x0, #0x1
   2d5dc:	cmp	x28, #0x10
   2d5e0:	lsl	x28, x28, #1
   2d5e4:	b.ls	2d638 <PyInit__decimal@@Base+0x113f8>  // b.plast
   2d5e8:	add	x0, x0, #0x2
   2d5ec:	lsr	x0, x0, #1
   2d5f0:	add	x0, x0, #0x1
   2d5f4:	cmp	x0, #0x10
   2d5f8:	lsl	x2, x0, #1
   2d5fc:	b.ls	2d870 <PyInit__decimal@@Base+0x11630>  // b.plast
   2d600:	mov	x1, #0x10                  	// #16
   2d604:	stp	x3, x2, [sp, #112]
   2d608:	bl	29220 <PyInit__decimal@@Base+0xcfe0>
   2d60c:	ldr	x2, [sp, #120]
   2d610:	mvn	x1, x0
   2d614:	cmp	x2, x1
   2d618:	b.hi	2d894 <PyInit__decimal@@Base+0x11654>  // b.pmore
   2d61c:	add	x2, x2, x0
   2d620:	mvn	x0, x2
   2d624:	cmp	x28, x0
   2d628:	b.hi	2d894 <PyInit__decimal@@Base+0x11654>  // b.pmore
   2d62c:	ldp	x6, x7, [sp, #96]
   2d630:	add	x28, x28, x2
   2d634:	ldr	x3, [sp, #112]
   2d638:	mvn	x0, x28
   2d63c:	cmp	x3, x0
   2d640:	b.hi	2d894 <PyInit__decimal@@Base+0x11654>  // b.pmore
   2d644:	adds	x0, x3, x28
   2d648:	b.ne	2d814 <PyInit__decimal@@Base+0x115d4>  // b.any
   2d64c:	mov	x5, x27
   2d650:	mov	x4, x26
   2d654:	mov	x2, x7
   2d658:	mov	x1, x6
   2d65c:	mov	x0, x25
   2d660:	mov	x3, #0x0                   	// #0
   2d664:	bl	28858 <PyInit__decimal@@Base+0xc618>
   2d668:	b	2d3c0 <PyInit__decimal@@Base+0x11180>
   2d66c:	ldp	x25, x26, [sp, #64]
   2d670:	ldp	x27, x28, [sp, #80]
   2d674:	b	2d028 <PyInit__decimal@@Base+0x10de8>
   2d678:	ldr	x2, [x5]
   2d67c:	add	x25, sp, #0x90
   2d680:	ldr	x4, [x28]
   2d684:	add	x11, x25, #0x8
   2d688:	add	x10, x25, #0x10
   2d68c:	mov	x0, x11
   2d690:	mov	x1, x25
   2d694:	str	x5, [sp, #96]
   2d698:	mul	x3, x2, x4
   2d69c:	umulh	x2, x2, x4
   2d6a0:	bl	28720 <PyInit__decimal@@Base+0xc4e0>
   2d6a4:	mov	x1, x11
   2d6a8:	ldr	x5, [sp, #96]
   2d6ac:	mov	x0, x10
   2d6b0:	ldr	x6, [x28]
   2d6b4:	ldr	x2, [x5, #8]
   2d6b8:	ldr	x4, [sp, #152]
   2d6bc:	mul	x3, x2, x6
   2d6c0:	umulh	x2, x2, x6
   2d6c4:	adds	x3, x3, x4
   2d6c8:	cinc	x2, x2, cs  // cs = hs, nlast
   2d6cc:	bl	28720 <PyInit__decimal@@Base+0xc4e0>
   2d6d0:	cmp	x27, #0x1
   2d6d4:	b.eq	2d0d4 <PyInit__decimal@@Base+0x10e94>  // b.none
   2d6d8:	ldr	x5, [sp, #96]
   2d6dc:	add	x0, x25, #0x18
   2d6e0:	ldr	x6, [x28, #8]
   2d6e4:	ldr	x2, [x5]
   2d6e8:	ldr	x4, [sp, #152]
   2d6ec:	mul	x3, x2, x6
   2d6f0:	umulh	x2, x2, x6
   2d6f4:	adds	x3, x3, x4
   2d6f8:	cinc	x2, x2, cs  // cs = hs, nlast
   2d6fc:	bl	28720 <PyInit__decimal@@Base+0xc4e0>
   2d700:	ldr	x5, [sp, #96]
   2d704:	mov	x1, x10
   2d708:	ldr	x6, [x28, #8]
   2d70c:	ldr	x2, [x5, #8]
   2d710:	ldr	x5, [sp, #160]
   2d714:	mul	x3, x2, x6
   2d718:	ldr	x4, [sp, #168]
   2d71c:	umulh	x2, x2, x6
   2d720:	adds	x3, x3, x5
   2d724:	cinc	x2, x2, cs  // cs = hs, nlast
   2d728:	adds	x3, x3, x4
   2d72c:	cinc	x2, x2, cs  // cs = hs, nlast
   2d730:	bl	28720 <PyInit__decimal@@Base+0xc4e0>
   2d734:	b	2d0d4 <PyInit__decimal@@Base+0x10e94>
   2d738:	mov	x2, x19
   2d73c:	mov	x0, x22
   2d740:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2d744:	b	2d54c <PyInit__decimal@@Base+0x1130c>
   2d748:	add	x25, sp, #0x90
   2d74c:	b	2d0b4 <PyInit__decimal@@Base+0x10e74>
   2d750:	ldrb	w1, [x23]
   2d754:	mov	x3, #0x0                   	// #0
   2d758:	ldrb	w0, [x24]
   2d75c:	ldrb	w4, [x22]
   2d760:	eor	w0, w0, w1
   2d764:	and	w0, w0, #0x1
   2d768:	and	w4, w4, #0xf0
   2d76c:	orr	w4, w4, w0
   2d770:	strb	w4, [x22]
   2d774:	ldr	x5, [x22, #32]
   2d778:	ldr	x1, [x20, #8]
   2d77c:	ldr	x0, [x21, #8]
   2d780:	add	x0, x0, x1
   2d784:	str	x0, [x22, #8]
   2d788:	b	2d188 <PyInit__decimal@@Base+0x10f48>
   2d78c:	ldr	x3, [x1]
   2d790:	mov	x2, x4
   2d794:	mov	x1, x5
   2d798:	bl	1d458 <PyInit__decimal@@Base+0x1218>
   2d79c:	b	2d3c0 <PyInit__decimal@@Base+0x11180>
   2d7a0:	mov	x5, x27
   2d7a4:	mov	x4, x26
   2d7a8:	mov	x2, x7
   2d7ac:	mov	x1, x6
   2d7b0:	mov	x3, #0x0                   	// #0
   2d7b4:	bl	28858 <PyInit__decimal@@Base+0xc618>
   2d7b8:	b	2d3c0 <PyInit__decimal@@Base+0x11180>
   2d7bc:	mov	x1, #0x8                   	// #8
   2d7c0:	stp	x6, x7, [sp, #96]
   2d7c4:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   2d7c8:	mov	x28, x0
   2d7cc:	ldp	x6, x7, [sp, #96]
   2d7d0:	cbz	x0, 2d880 <PyInit__decimal@@Base+0x11640>
   2d7d4:	mov	x3, x0
   2d7d8:	mov	x5, x27
   2d7dc:	mov	x4, x26
   2d7e0:	mov	x2, x7
   2d7e4:	mov	x1, x6
   2d7e8:	mov	x0, x25
   2d7ec:	bl	29690 <PyInit__decimal@@Base+0xd450>
   2d7f0:	cbnz	w0, 2d85c <PyInit__decimal@@Base+0x1161c>
   2d7f4:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d7f8:	mov	x0, x25
   2d7fc:	ldr	x1, [x20, #1912]
   2d800:	blr	x1
   2d804:	ldr	x1, [x20, #1912]
   2d808:	mov	x0, x28
   2d80c:	blr	x1
   2d810:	b	2d440 <PyInit__decimal@@Base+0x11200>
   2d814:	mov	x1, #0x8                   	// #8
   2d818:	stp	x6, x7, [sp, #96]
   2d81c:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   2d820:	mov	x28, x0
   2d824:	ldp	x6, x7, [sp, #96]
   2d828:	cbz	x0, 2d880 <PyInit__decimal@@Base+0x11640>
   2d82c:	mov	x1, x6
   2d830:	mov	x3, x0
   2d834:	mov	x5, x27
   2d838:	mov	x0, x25
   2d83c:	mov	x4, x26
   2d840:	mov	x2, x7
   2d844:	bl	28858 <PyInit__decimal@@Base+0xc618>
   2d848:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d84c:	mov	x0, x28
   2d850:	ldr	x1, [x1, #1912]
   2d854:	blr	x1
   2d858:	b	2d3c0 <PyInit__decimal@@Base+0x11180>
   2d85c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d860:	mov	x0, x28
   2d864:	ldr	x1, [x1, #1912]
   2d868:	blr	x1
   2d86c:	b	2d3c0 <PyInit__decimal@@Base+0x11180>
   2d870:	add	x28, x28, x2
   2d874:	b	2d638 <PyInit__decimal@@Base+0x113f8>
   2d878:	add	x28, x28, x2
   2d87c:	b	2d388 <PyInit__decimal@@Base+0x11148>
   2d880:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2d884:	mov	x0, x25
   2d888:	ldr	x1, [x1, #1912]
   2d88c:	blr	x1
   2d890:	b	2d440 <PyInit__decimal@@Base+0x11200>
   2d894:	bl	29170 <PyInit__decimal@@Base+0xcf30>
   2d898:	bl	291c8 <PyInit__decimal@@Base+0xcf88>
   2d89c:	nop
   2d8a0:	stp	x29, x30, [sp, #-32]!
   2d8a4:	mov	x29, sp
   2d8a8:	stp	x19, x20, [sp, #16]
   2d8ac:	mov	x20, x0
   2d8b0:	ldr	x0, [x0, #24]
   2d8b4:	bl	28358 <PyInit__decimal@@Base+0xc118>
   2d8b8:	mov	x19, x0
   2d8bc:	cbz	x0, 2d8f4 <PyInit__decimal@@Base+0x116b4>
   2d8c0:	ldr	x2, [x20, #24]
   2d8c4:	ldr	x1, [x20, #40]
   2d8c8:	ldr	x0, [x0, #40]
   2d8cc:	lsl	x2, x2, #3
   2d8d0:	bl	6470 <memcpy@plt>
   2d8d4:	ldrb	w1, [x20]
   2d8d8:	ldrb	w0, [x19]
   2d8dc:	bfxil	w0, w1, #0, #4
   2d8e0:	strb	w0, [x19]
   2d8e4:	ldur	q0, [x20, #8]
   2d8e8:	stur	q0, [x19, #8]
   2d8ec:	ldr	x0, [x20, #24]
   2d8f0:	str	x0, [x19, #24]
   2d8f4:	mov	x0, x19
   2d8f8:	ldp	x19, x20, [sp, #16]
   2d8fc:	ldp	x29, x30, [sp], #32
   2d900:	ret
   2d904:	nop
   2d908:	stp	x29, x30, [sp, #-32]!
   2d90c:	mov	x29, sp
   2d910:	str	x19, [sp, #16]
   2d914:	mov	x19, x0
   2d918:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2d91c:	cbz	w0, 2d930 <PyInit__decimal@@Base+0x116f0>
   2d920:	ldrb	w1, [x19]
   2d924:	mov	w0, #0x1                   	// #1
   2d928:	and	w1, w1, #0xfffffffe
   2d92c:	strb	w1, [x19]
   2d930:	ldr	x19, [sp, #16]
   2d934:	ldp	x29, x30, [sp], #32
   2d938:	ret
   2d93c:	nop
   2d940:	stp	x29, x30, [sp, #-32]!
   2d944:	mov	x29, sp
   2d948:	str	x19, [sp, #16]
   2d94c:	mov	x19, x0
   2d950:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2d954:	cbz	w0, 2d968 <PyInit__decimal@@Base+0x11728>
   2d958:	ldrb	w1, [x19]
   2d95c:	mov	w0, #0x1                   	// #1
   2d960:	eor	w1, w1, w0
   2d964:	strb	w1, [x19]
   2d968:	ldr	x19, [sp, #16]
   2d96c:	ldp	x29, x30, [sp], #32
   2d970:	ret
   2d974:	nop
   2d978:	stp	x29, x30, [sp, #-32]!
   2d97c:	mov	x4, x2
   2d980:	mov	x2, x3
   2d984:	mov	x29, sp
   2d988:	stp	x19, x20, [sp, #16]
   2d98c:	mov	x19, x0
   2d990:	ldrb	w20, [x4]
   2d994:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2d998:	cbz	w0, 2d9ac <PyInit__decimal@@Base+0x1176c>
   2d99c:	ldrb	w1, [x19]
   2d9a0:	mov	w0, #0x1                   	// #1
   2d9a4:	bfxil	w1, w20, #0, #1
   2d9a8:	strb	w1, [x19]
   2d9ac:	ldp	x19, x20, [sp, #16]
   2d9b0:	ldp	x29, x30, [sp], #32
   2d9b4:	ret
   2d9b8:	ldrb	w3, [x0]
   2d9bc:	tst	w3, #0xe
   2d9c0:	b.ne	2d9d0 <PyInit__decimal@@Base+0x11790>  // b.any
   2d9c4:	ldrb	w4, [x1]
   2d9c8:	tst	w4, #0xe
   2d9cc:	b.eq	2d9e4 <PyInit__decimal@@Base+0x117a4>  // b.none
   2d9d0:	tst	w3, #0xc
   2d9d4:	b.ne	2d9e8 <PyInit__decimal@@Base+0x117a8>  // b.any
   2d9d8:	ldrb	w3, [x1]
   2d9dc:	tst	w3, #0xc
   2d9e0:	b.ne	2d9e8 <PyInit__decimal@@Base+0x117a8>  // b.any
   2d9e4:	b	2a098 <PyInit__decimal@@Base+0xde58>
   2d9e8:	ldr	w0, [x2]
   2d9ec:	orr	w0, w0, #0x100
   2d9f0:	str	w0, [x2]
   2d9f4:	mov	w0, #0x7fffffff            	// #2147483647
   2d9f8:	ret
   2d9fc:	nop
   2da00:	stp	x29, x30, [sp, #-48]!
   2da04:	mov	x29, sp
   2da08:	stp	x19, x20, [sp, #16]
   2da0c:	mov	x19, x1
   2da10:	mov	x20, x2
   2da14:	str	x21, [sp, #32]
   2da18:	mov	x21, x0
   2da1c:	ldrb	w0, [x1]
   2da20:	tst	w0, #0xe
   2da24:	b.ne	2da70 <PyInit__decimal@@Base+0x11830>  // b.any
   2da28:	ldrb	w0, [x2]
   2da2c:	tst	w0, #0xe
   2da30:	b.ne	2da70 <PyInit__decimal@@Base+0x11830>  // b.any
   2da34:	mov	x1, x20
   2da38:	mov	x0, x19
   2da3c:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   2da40:	mov	w19, w0
   2da44:	cmp	w19, #0x0
   2da48:	mov	x0, x21
   2da4c:	lsr	w1, w19, #31
   2da50:	cset	x2, ne  // ne = any
   2da54:	mov	x3, #0x0                   	// #0
   2da58:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   2da5c:	mov	w0, w19
   2da60:	ldp	x19, x20, [sp, #16]
   2da64:	ldr	x21, [sp, #32]
   2da68:	ldp	x29, x30, [sp], #48
   2da6c:	ret
   2da70:	mov	x2, x20
   2da74:	mov	x1, x19
   2da78:	mov	x0, x21
   2da7c:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   2da80:	cbz	w0, 2da34 <PyInit__decimal@@Base+0x117f4>
   2da84:	mov	w19, #0x7fffffff            	// #2147483647
   2da88:	mov	w0, w19
   2da8c:	ldp	x19, x20, [sp, #16]
   2da90:	ldr	x21, [sp, #32]
   2da94:	ldp	x29, x30, [sp], #48
   2da98:	ret
   2da9c:	nop
   2daa0:	stp	x29, x30, [sp, #-48]!
   2daa4:	mov	x29, sp
   2daa8:	stp	x19, x20, [sp, #16]
   2daac:	mov	x19, x1
   2dab0:	mov	x20, x2
   2dab4:	stp	x21, x22, [sp, #32]
   2dab8:	mov	x21, x0
   2dabc:	mov	x22, x4
   2dac0:	ldrb	w0, [x1]
   2dac4:	tst	w0, #0xe
   2dac8:	b.ne	2db14 <PyInit__decimal@@Base+0x118d4>  // b.any
   2dacc:	ldrb	w0, [x2]
   2dad0:	tst	w0, #0xe
   2dad4:	b.ne	2db14 <PyInit__decimal@@Base+0x118d4>  // b.any
   2dad8:	mov	x1, x20
   2dadc:	mov	x0, x19
   2dae0:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   2dae4:	mov	w19, w0
   2dae8:	cmp	w19, #0x0
   2daec:	mov	x0, x21
   2daf0:	lsr	w1, w19, #31
   2daf4:	cset	x2, ne  // ne = any
   2daf8:	mov	x3, #0x0                   	// #0
   2dafc:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   2db00:	mov	w0, w19
   2db04:	ldp	x19, x20, [sp, #16]
   2db08:	ldp	x21, x22, [sp, #32]
   2db0c:	ldp	x29, x30, [sp], #48
   2db10:	ret
   2db14:	mov	x4, x22
   2db18:	mov	x2, x20
   2db1c:	mov	x1, x19
   2db20:	mov	x0, x21
   2db24:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   2db28:	cbz	w0, 2dad8 <PyInit__decimal@@Base+0x11898>
   2db2c:	ldr	w0, [x22]
   2db30:	mov	w19, #0x7fffffff            	// #2147483647
   2db34:	orr	w0, w0, #0x100
   2db38:	str	w0, [x22]
   2db3c:	mov	w0, w19
   2db40:	ldp	x19, x20, [sp, #16]
   2db44:	ldp	x21, x22, [sp, #32]
   2db48:	ldp	x29, x30, [sp], #48
   2db4c:	ret
   2db50:	ldrb	w4, [x0]
   2db54:	ldrb	w3, [x1]
   2db58:	and	w5, w4, #0x1
   2db5c:	and	w2, w3, #0x1
   2db60:	cmp	w2, w5
   2db64:	b.eq	2db70 <PyInit__decimal@@Base+0x11930>  // b.none
   2db68:	sub	w0, w2, w5
   2db6c:	ret
   2db70:	stp	x29, x30, [sp, #-128]!
   2db74:	tst	w4, #0xc
   2db78:	and	w6, w3, #0xc
   2db7c:	mov	x29, sp
   2db80:	stp	x19, x20, [sp, #16]
   2db84:	mov	x19, x0
   2db88:	mov	x20, x1
   2db8c:	b.eq	2dbb8 <PyInit__decimal@@Base+0x11978>  // b.none
   2db90:	cbz	w6, 2dbd4 <PyInit__decimal@@Base+0x11994>
   2db94:	ubfx	x1, x4, #2, #1
   2db98:	ubfx	x0, x3, #2, #1
   2db9c:	cmp	w1, w0
   2dba0:	b.eq	2dc30 <PyInit__decimal@@Base+0x119f0>  // b.none
   2dba4:	neg	w2, w2
   2dba8:	sub	w0, w1, w0
   2dbac:	lsl	w2, w2, #1
   2dbb0:	madd	w0, w2, w0, w0
   2dbb4:	b	2dbc8 <PyInit__decimal@@Base+0x11988>
   2dbb8:	cbz	w6, 2dbec <PyInit__decimal@@Base+0x119ac>
   2dbbc:	neg	w0, w2
   2dbc0:	lsl	w0, w0, #1
   2dbc4:	mvn	w0, w0
   2dbc8:	ldp	x19, x20, [sp, #16]
   2dbcc:	ldp	x29, x30, [sp], #128
   2dbd0:	ret
   2dbd4:	neg	w0, w2
   2dbd8:	ldp	x19, x20, [sp, #16]
   2dbdc:	lsl	w0, w0, #1
   2dbe0:	add	w0, w0, #0x1
   2dbe4:	ldp	x29, x30, [sp], #128
   2dbe8:	ret
   2dbec:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2dbf0:	cbnz	w0, 2dc1c <PyInit__decimal@@Base+0x119dc>
   2dbf4:	ldr	x2, [x19, #8]
   2dbf8:	ldr	x1, [x20, #8]
   2dbfc:	cmp	x2, x1
   2dc00:	b.eq	2dbc8 <PyInit__decimal@@Base+0x11988>  // b.none
   2dc04:	ldrb	w0, [x19]
   2dc08:	sbfx	x0, x0, #0, #1
   2dc0c:	lsl	w0, w0, #1
   2dc10:	mvn	w2, w0
   2dc14:	csinc	w0, w2, w0, lt  // lt = tstop
   2dc18:	b	2dbc8 <PyInit__decimal@@Base+0x11988>
   2dc1c:	ldrb	w1, [x19]
   2dc20:	sbfx	x1, x1, #0, #1
   2dc24:	lsl	w1, w1, #1
   2dc28:	madd	w0, w1, w0, w0
   2dc2c:	b	2dbc8 <PyInit__decimal@@Base+0x11988>
   2dc30:	ldr	x6, [x19, #24]
   2dc34:	ldr	x7, [x20, #24]
   2dc38:	cmp	x6, #0x0
   2dc3c:	b.le	2dc48 <PyInit__decimal@@Base+0x11a08>
   2dc40:	cmp	x7, #0x0
   2dc44:	b.gt	2dc6c <PyInit__decimal@@Base+0x11a2c>
   2dc48:	cmp	x6, #0x0
   2dc4c:	neg	w2, w5
   2dc50:	cset	w0, gt
   2dc54:	cmp	x7, #0x0
   2dc58:	cset	w1, gt
   2dc5c:	lsl	w2, w2, #1
   2dc60:	sub	w0, w0, w1
   2dc64:	madd	w0, w2, w0, w0
   2dc68:	b	2dbc8 <PyInit__decimal@@Base+0x11988>
   2dc6c:	and	w4, w4, #0x1f
   2dc70:	and	w2, w3, #0x1f
   2dc74:	orr	w3, w4, #0x40
   2dc78:	strb	w3, [sp, #32]
   2dc7c:	ldp	x9, x8, [x19, #32]
   2dc80:	orr	w2, w2, #0x40
   2dc84:	ldp	x4, x3, [x20, #32]
   2dc88:	add	x1, sp, #0x50
   2dc8c:	ldr	x10, [x19, #16]
   2dc90:	add	x0, sp, #0x20
   2dc94:	ldr	x5, [x20, #16]
   2dc98:	stp	xzr, x10, [sp, #40]
   2dc9c:	stp	x6, x9, [sp, #56]
   2dca0:	str	x8, [sp, #72]
   2dca4:	strb	w2, [sp, #80]
   2dca8:	stp	xzr, x5, [sp, #88]
   2dcac:	stp	x7, x4, [sp, #104]
   2dcb0:	str	x3, [sp, #120]
   2dcb4:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2dcb8:	mov	w2, w0
   2dcbc:	ldrb	w0, [x19]
   2dcc0:	sbfx	x0, x0, #0, #1
   2dcc4:	lsl	w0, w0, #1
   2dcc8:	madd	w0, w0, w2, w2
   2dccc:	b	2dbc8 <PyInit__decimal@@Base+0x11988>
   2dcd0:	stp	x29, x30, [sp, #-160]!
   2dcd4:	mov	x29, sp
   2dcd8:	str	x23, [sp, #48]
   2dcdc:	mov	x23, x2
   2dce0:	stp	x19, x20, [sp, #16]
   2dce4:	mov	x19, x0
   2dce8:	stp	x21, x22, [sp, #32]
   2dcec:	mov	x22, x1
   2dcf0:	ldrb	w2, [x1]
   2dcf4:	ldrb	w1, [x23]
   2dcf8:	and	w0, w2, #0x1
   2dcfc:	and	w20, w1, #0x1
   2dd00:	cmp	w0, w20
   2dd04:	b.eq	2de48 <PyInit__decimal@@Base+0x11c08>  // b.none
   2dd08:	subs	w20, w20, w0
   2dd0c:	cset	x23, ne  // ne = any
   2dd10:	lsr	w21, w20, #31
   2dd14:	ldrb	w2, [x19]
   2dd18:	ldr	x0, [x19, #40]
   2dd1c:	tbnz	w2, #5, 2dd34 <PyInit__decimal@@Base+0x11af4>
   2dd20:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
   2dd24:	ldr	x3, [x19, #32]
   2dd28:	ldr	x1, [x22, #1880]
   2dd2c:	cmp	x3, x1
   2dd30:	b.gt	2ded4 <PyInit__decimal@@Base+0x11c94>
   2dd34:	and	w2, w2, #0xfffffff0
   2dd38:	str	xzr, [x19, #8]
   2dd3c:	orr	w21, w21, w2
   2dd40:	strb	w21, [x19]
   2dd44:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2dd48:	add	x1, x1, #0x180
   2dd4c:	stp	x23, xzr, [x0]
   2dd50:	mov	x2, #0x1                   	// #1
   2dd54:	str	x2, [x19, #24]
   2dd58:	ldr	x2, [x1, #72]
   2dd5c:	ldr	x0, [x0]
   2dd60:	cmp	x0, x2
   2dd64:	b.cs	2ddf4 <PyInit__decimal@@Base+0x11bb4>  // b.hs, b.nlast
   2dd68:	ldr	x2, [x1, #32]
   2dd6c:	cmp	x0, x2
   2dd70:	b.cs	2ddac <PyInit__decimal@@Base+0x11b6c>  // b.hs, b.nlast
   2dd74:	ldr	x2, [x1, #16]
   2dd78:	cmp	x0, x2
   2dd7c:	b.cs	2df00 <PyInit__decimal@@Base+0x11cc0>  // b.hs, b.nlast
   2dd80:	ldr	x1, [x1, #8]
   2dd84:	ldp	x21, x22, [sp, #32]
   2dd88:	cmp	x0, x1
   2dd8c:	cset	x2, cs  // cs = hs, nlast
   2dd90:	mov	w0, w20
   2dd94:	add	x2, x2, #0x1
   2dd98:	ldr	x23, [sp, #48]
   2dd9c:	str	x2, [x19, #16]
   2dda0:	ldp	x19, x20, [sp, #16]
   2dda4:	ldp	x29, x30, [sp], #160
   2dda8:	ret
   2ddac:	ldr	x2, [x1, #48]
   2ddb0:	cmp	x0, x2
   2ddb4:	b.cc	2df84 <PyInit__decimal@@Base+0x11d44>  // b.lo, b.ul, b.last
   2ddb8:	ldr	x3, [x1, #64]
   2ddbc:	mov	x2, #0x9                   	// #9
   2ddc0:	cmp	x0, x3
   2ddc4:	b.cs	2de2c <PyInit__decimal@@Base+0x11bec>  // b.hs, b.nlast
   2ddc8:	ldr	x1, [x1, #56]
   2ddcc:	ldp	x21, x22, [sp, #32]
   2ddd0:	cmp	x0, x1
   2ddd4:	cset	x2, cs  // cs = hs, nlast
   2ddd8:	mov	w0, w20
   2dddc:	add	x2, x2, #0x7
   2dde0:	ldr	x23, [sp, #48]
   2dde4:	str	x2, [x19, #16]
   2dde8:	ldp	x19, x20, [sp, #16]
   2ddec:	ldp	x29, x30, [sp], #160
   2ddf0:	ret
   2ddf4:	ldr	x2, [x1, #112]
   2ddf8:	cmp	x0, x2
   2ddfc:	b.cs	2de88 <PyInit__decimal@@Base+0x11c48>  // b.hs, b.nlast
   2de00:	ldr	x2, [x1, #88]
   2de04:	cmp	x0, x2
   2de08:	b.cc	2df70 <PyInit__decimal@@Base+0x11d30>  // b.lo, b.ul, b.last
   2de0c:	ldr	x3, [x1, #104]
   2de10:	mov	x2, #0xe                   	// #14
   2de14:	cmp	x0, x3
   2de18:	b.cs	2de2c <PyInit__decimal@@Base+0x11bec>  // b.hs, b.nlast
   2de1c:	ldr	x1, [x1, #96]
   2de20:	cmp	x0, x1
   2de24:	cset	x2, cs  // cs = hs, nlast
   2de28:	add	x2, x2, #0xc
   2de2c:	ldp	x21, x22, [sp, #32]
   2de30:	mov	w0, w20
   2de34:	ldr	x23, [sp, #48]
   2de38:	str	x2, [x19, #16]
   2de3c:	ldp	x19, x20, [sp, #16]
   2de40:	ldp	x29, x30, [sp], #160
   2de44:	ret
   2de48:	tst	w2, #0xc
   2de4c:	and	w21, w1, #0xc
   2de50:	b.eq	2deb4 <PyInit__decimal@@Base+0x11c74>  // b.none
   2de54:	cbz	w21, 2df58 <PyInit__decimal@@Base+0x11d18>
   2de58:	ubfx	x20, x2, #2, #1
   2de5c:	ubfx	x3, x1, #2, #1
   2de60:	cmp	w20, w3
   2de64:	b.eq	2e018 <PyInit__decimal@@Base+0x11dd8>  // b.none
   2de68:	neg	w1, w0
   2de6c:	sub	w20, w20, w3
   2de70:	lsl	w1, w1, #1
   2de74:	madd	w20, w1, w20, w20
   2de78:	cmp	w20, #0x0
   2de7c:	cset	x23, ne  // ne = any
   2de80:	lsr	w21, w20, #31
   2de84:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2de88:	ldr	x2, [x1, #144]
   2de8c:	cmp	x0, x2
   2de90:	b.cs	2df2c <PyInit__decimal@@Base+0x11cec>  // b.hs, b.nlast
   2de94:	ldr	x2, [x1, #128]
   2de98:	cmp	x0, x2
   2de9c:	b.cs	2dfe4 <PyInit__decimal@@Base+0x11da4>  // b.hs, b.nlast
   2dea0:	ldr	x1, [x1, #120]
   2dea4:	cmp	x0, x1
   2dea8:	cset	x2, cs  // cs = hs, nlast
   2deac:	add	x2, x2, #0xf
   2deb0:	b	2de2c <PyInit__decimal@@Base+0x11bec>
   2deb4:	cbz	w21, 2df98 <PyInit__decimal@@Base+0x11d58>
   2deb8:	neg	w20, w0
   2debc:	lsl	w20, w20, #1
   2dec0:	mvn	w20, w20
   2dec4:	cmp	w20, #0x0
   2dec8:	cset	x23, ne  // ne = any
   2decc:	lsr	w21, w20, #31
   2ded0:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2ded4:	add	x3, sp, #0x70
   2ded8:	mov	x2, #0x8                   	// #8
   2dedc:	strb	wzr, [sp, #112]
   2dee0:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2dee4:	ldrb	w1, [sp, #112]
   2dee8:	str	x0, [x19, #40]
   2deec:	cbnz	w1, 2def8 <PyInit__decimal@@Base+0x11cb8>
   2def0:	ldr	x1, [x22, #1880]
   2def4:	str	x1, [x19, #32]
   2def8:	ldrb	w2, [x19]
   2defc:	b	2dd34 <PyInit__decimal@@Base+0x11af4>
   2df00:	ldr	x1, [x1, #24]
   2df04:	ldp	x21, x22, [sp, #32]
   2df08:	cmp	x0, x1
   2df0c:	cset	x2, cs  // cs = hs, nlast
   2df10:	mov	w0, w20
   2df14:	add	x2, x2, #0x3
   2df18:	ldr	x23, [sp, #48]
   2df1c:	str	x2, [x19, #16]
   2df20:	ldp	x19, x20, [sp, #16]
   2df24:	ldp	x29, x30, [sp], #160
   2df28:	ret
   2df2c:	ldr	x1, [x1, #152]
   2df30:	ldp	x21, x22, [sp, #32]
   2df34:	cmp	x0, x1
   2df38:	cset	x2, cs  // cs = hs, nlast
   2df3c:	mov	w0, w20
   2df40:	add	x2, x2, #0x13
   2df44:	ldr	x23, [sp, #48]
   2df48:	str	x2, [x19, #16]
   2df4c:	ldp	x19, x20, [sp, #16]
   2df50:	ldp	x29, x30, [sp], #160
   2df54:	ret
   2df58:	neg	w20, w0
   2df5c:	neg	w21, w20
   2df60:	lsl	w20, w20, #1
   2df64:	adds	w20, w20, #0x1
   2df68:	cset	x23, ne  // ne = any
   2df6c:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2df70:	ldr	x1, [x1, #80]
   2df74:	cmp	x0, x1
   2df78:	cset	x2, cs  // cs = hs, nlast
   2df7c:	add	x2, x2, #0xa
   2df80:	b	2de2c <PyInit__decimal@@Base+0x11bec>
   2df84:	ldr	x1, [x1, #40]
   2df88:	cmp	x0, x1
   2df8c:	cset	x2, cs  // cs = hs, nlast
   2df90:	add	x2, x2, #0x5
   2df94:	b	2de2c <PyInit__decimal@@Base+0x11bec>
   2df98:	mov	x1, x23
   2df9c:	mov	x0, x22
   2dfa0:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2dfa4:	mov	w20, w0
   2dfa8:	cbnz	w0, 2dff8 <PyInit__decimal@@Base+0x11db8>
   2dfac:	ldr	x0, [x23, #8]
   2dfb0:	mov	x23, #0x0                   	// #0
   2dfb4:	ldr	x1, [x22, #8]
   2dfb8:	cmp	x1, x0
   2dfbc:	b.eq	2dd14 <PyInit__decimal@@Base+0x11ad4>  // b.none
   2dfc0:	ldrb	w21, [x22]
   2dfc4:	sbfx	x21, x21, #0, #1
   2dfc8:	lsl	w21, w21, #1
   2dfcc:	b.ge	2e060 <PyInit__decimal@@Base+0x11e20>  // b.tcont
   2dfd0:	mvn	w20, w21
   2dfd4:	cmp	w20, #0x0
   2dfd8:	cset	x23, ne  // ne = any
   2dfdc:	lsr	w21, w20, #31
   2dfe0:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2dfe4:	ldr	x1, [x1, #136]
   2dfe8:	cmp	x0, x1
   2dfec:	cset	x2, cs  // cs = hs, nlast
   2dff0:	add	x2, x2, #0x11
   2dff4:	b	2de2c <PyInit__decimal@@Base+0x11bec>
   2dff8:	ldrb	w0, [x22]
   2dffc:	sbfx	x0, x0, #0, #1
   2e000:	lsl	w0, w0, #1
   2e004:	madd	w20, w0, w20, w20
   2e008:	cmp	w20, #0x0
   2e00c:	cset	x23, ne  // ne = any
   2e010:	lsr	w21, w20, #31
   2e014:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2e018:	ldr	x4, [x22, #24]
   2e01c:	ldr	x5, [x23, #24]
   2e020:	cmp	x4, #0x0
   2e024:	b.le	2e030 <PyInit__decimal@@Base+0x11df0>
   2e028:	cmp	x5, #0x0
   2e02c:	b.gt	2e070 <PyInit__decimal@@Base+0x11e30>
   2e030:	cmp	x4, #0x0
   2e034:	neg	w0, w0
   2e038:	cset	w20, gt
   2e03c:	cmp	x5, #0x0
   2e040:	cset	w1, gt
   2e044:	lsl	w0, w0, #1
   2e048:	sub	w20, w20, w1
   2e04c:	madd	w20, w0, w20, w20
   2e050:	cmp	w20, #0x0
   2e054:	cset	x23, ne  // ne = any
   2e058:	lsr	w21, w20, #31
   2e05c:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2e060:	adds	w20, w21, #0x1
   2e064:	lsr	w21, w21, #31
   2e068:	cset	x23, ne  // ne = any
   2e06c:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2e070:	and	w2, w2, #0x1f
   2e074:	and	w1, w1, #0x1f
   2e078:	orr	w3, w2, #0x40
   2e07c:	strb	w3, [sp, #64]
   2e080:	ldp	x9, x8, [x22, #32]
   2e084:	orr	w2, w1, #0x40
   2e088:	ldp	x6, x3, [x23, #32]
   2e08c:	add	x1, sp, #0x70
   2e090:	ldr	x7, [x23, #16]
   2e094:	add	x0, sp, #0x40
   2e098:	ldr	x10, [x22, #16]
   2e09c:	stp	xzr, x10, [sp, #72]
   2e0a0:	stp	x4, x9, [sp, #88]
   2e0a4:	str	x8, [sp, #104]
   2e0a8:	strb	w2, [sp, #112]
   2e0ac:	stp	xzr, x7, [sp, #120]
   2e0b0:	stp	x5, x6, [sp, #136]
   2e0b4:	str	x3, [sp, #152]
   2e0b8:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2e0bc:	ldrb	w1, [x22]
   2e0c0:	sbfx	x1, x1, #0, #1
   2e0c4:	lsl	w1, w1, #1
   2e0c8:	madd	w20, w1, w0, w0
   2e0cc:	cmp	w20, #0x0
   2e0d0:	cset	x23, ne  // ne = any
   2e0d4:	lsr	w21, w20, #31
   2e0d8:	b	2dd14 <PyInit__decimal@@Base+0x11ad4>
   2e0dc:	nop
   2e0e0:	stp	x29, x30, [sp, #-208]!
   2e0e4:	mov	x29, sp
   2e0e8:	ldrb	w5, [x0]
   2e0ec:	ldrb	w4, [x1]
   2e0f0:	ldur	q3, [x0, #8]
   2e0f4:	and	w3, w5, #0x1e
   2e0f8:	ldur	q1, [x1, #8]
   2e0fc:	and	w2, w4, #0x1e
   2e100:	ldur	q2, [x0, #24]
   2e104:	orr	w3, w3, #0x40
   2e108:	ldur	q0, [x1, #24]
   2e10c:	orr	w2, w2, #0x40
   2e110:	ldr	x7, [x0, #40]
   2e114:	strb	w3, [sp, #16]
   2e118:	ldr	x6, [x1, #40]
   2e11c:	str	x7, [sp, #56]
   2e120:	strb	w2, [sp, #64]
   2e124:	tst	w5, #0xc
   2e128:	str	x6, [sp, #104]
   2e12c:	and	w8, w4, #0xc
   2e130:	stur	q3, [sp, #24]
   2e134:	stur	q2, [sp, #40]
   2e138:	stur	q1, [sp, #72]
   2e13c:	stur	q0, [sp, #88]
   2e140:	ldr	x14, [x0, #16]
   2e144:	ldr	x12, [x1, #16]
   2e148:	ldp	x10, x13, [x0, #24]
   2e14c:	ldp	x9, x11, [x1, #24]
   2e150:	b.eq	2e174 <PyInit__decimal@@Base+0x11f34>  // b.none
   2e154:	mov	w0, #0x1                   	// #1
   2e158:	cbz	w8, 2e16c <PyInit__decimal@@Base+0x11f2c>
   2e15c:	ubfx	x5, x5, #2, #1
   2e160:	ubfx	x4, x4, #2, #1
   2e164:	subs	w0, w5, w4
   2e168:	b.eq	2e1b4 <PyInit__decimal@@Base+0x11f74>  // b.none
   2e16c:	ldp	x29, x30, [sp], #208
   2e170:	ret
   2e174:	mov	w0, #0xffffffff            	// #-1
   2e178:	cbnz	w8, 2e16c <PyInit__decimal@@Base+0x11f2c>
   2e17c:	add	x1, sp, #0x40
   2e180:	add	x0, sp, #0x10
   2e184:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2e188:	cbnz	w0, 2e214 <PyInit__decimal@@Base+0x11fd4>
   2e18c:	ldr	x2, [sp, #24]
   2e190:	ldr	x1, [sp, #72]
   2e194:	cmp	x2, x1
   2e198:	b.eq	2e16c <PyInit__decimal@@Base+0x11f2c>  // b.none
   2e19c:	ldrb	w0, [sp, #16]
   2e1a0:	sbfx	x0, x0, #0, #1
   2e1a4:	lsl	w0, w0, #1
   2e1a8:	mvn	w4, w0
   2e1ac:	csinc	w0, w4, w0, lt  // lt = tstop
   2e1b0:	b	2e16c <PyInit__decimal@@Base+0x11f2c>
   2e1b4:	cmp	x9, #0x0
   2e1b8:	cset	w5, gt
   2e1bc:	cmp	x10, #0x0
   2e1c0:	cset	w4, gt
   2e1c4:	cmp	w5, #0x0
   2e1c8:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   2e1cc:	sub	w0, w4, w5
   2e1d0:	b.eq	2e16c <PyInit__decimal@@Base+0x11f2c>  // b.none
   2e1d4:	add	x1, sp, #0xa0
   2e1d8:	add	x0, sp, #0x70
   2e1dc:	strb	w3, [sp, #112]
   2e1e0:	stp	xzr, x14, [sp, #120]
   2e1e4:	stp	x10, x13, [sp, #136]
   2e1e8:	str	x7, [sp, #152]
   2e1ec:	strb	w2, [sp, #160]
   2e1f0:	stp	xzr, x12, [sp, #168]
   2e1f4:	stp	x9, x11, [sp, #184]
   2e1f8:	str	x6, [sp, #200]
   2e1fc:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2e200:	ldrb	w4, [sp, #16]
   2e204:	sbfx	x4, x4, #0, #1
   2e208:	lsl	w4, w4, #1
   2e20c:	madd	w0, w4, w0, w0
   2e210:	b	2e16c <PyInit__decimal@@Base+0x11f2c>
   2e214:	ldrb	w1, [sp, #16]
   2e218:	sbfx	x1, x1, #0, #1
   2e21c:	lsl	w1, w1, #1
   2e220:	madd	w0, w1, w0, w0
   2e224:	b	2e16c <PyInit__decimal@@Base+0x11f2c>
   2e228:	stp	x29, x30, [sp, #-256]!
   2e22c:	mov	x29, sp
   2e230:	stp	x19, x20, [sp, #16]
   2e234:	mov	x19, x0
   2e238:	stp	x21, x22, [sp, #32]
   2e23c:	ldrb	w5, [x2]
   2e240:	ldrb	w0, [x1]
   2e244:	ldur	q1, [x2, #8]
   2e248:	and	w4, w0, #0x1e
   2e24c:	ldur	q3, [x1, #8]
   2e250:	and	w3, w5, #0x1e
   2e254:	ldur	q0, [x2, #24]
   2e258:	orr	w4, w4, #0x40
   2e25c:	ldur	q2, [x1, #24]
   2e260:	orr	w3, w3, #0x40
   2e264:	ldr	x6, [x2, #40]
   2e268:	strb	w4, [sp, #64]
   2e26c:	ldr	x7, [x1, #40]
   2e270:	str	x7, [sp, #104]
   2e274:	strb	w3, [sp, #112]
   2e278:	tst	w0, #0xc
   2e27c:	str	x6, [sp, #152]
   2e280:	and	w21, w5, #0xc
   2e284:	stur	q3, [sp, #72]
   2e288:	stur	q2, [sp, #88]
   2e28c:	stur	q1, [sp, #120]
   2e290:	stur	q0, [sp, #136]
   2e294:	ldr	x10, [x2, #16]
   2e298:	ldr	x12, [x1, #16]
   2e29c:	ldr	x8, [x2, #24]
   2e2a0:	ldp	x9, x11, [x1, #24]
   2e2a4:	ldr	x2, [x2, #32]
   2e2a8:	b.eq	2e2d0 <PyInit__decimal@@Base+0x12090>  // b.none
   2e2ac:	cbz	w21, 2e37c <PyInit__decimal@@Base+0x1213c>
   2e2b0:	ubfx	x0, x0, #2, #1
   2e2b4:	ubfx	x5, x5, #2, #1
   2e2b8:	cmp	w0, w5
   2e2bc:	b.eq	2e574 <PyInit__decimal@@Base+0x12334>  // b.none
   2e2c0:	subs	w20, w0, w5
   2e2c4:	cset	x22, ne  // ne = any
   2e2c8:	lsr	w21, w20, #31
   2e2cc:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e2d0:	cbz	w21, 2e388 <PyInit__decimal@@Base+0x12148>
   2e2d4:	mov	x22, #0x1                   	// #1
   2e2d8:	mov	w21, w22
   2e2dc:	mov	w20, #0xffffffff            	// #-1
   2e2e0:	ldrb	w2, [x19]
   2e2e4:	ldr	x0, [x19, #40]
   2e2e8:	tbnz	w2, #5, 2e308 <PyInit__decimal@@Base+0x120c8>
   2e2ec:	ldr	x3, [x19, #32]
   2e2f0:	str	x23, [sp, #48]
   2e2f4:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   2e2f8:	ldr	x1, [x23, #1880]
   2e2fc:	cmp	x3, x1
   2e300:	b.gt	2e498 <PyInit__decimal@@Base+0x12258>
   2e304:	ldr	x23, [sp, #48]
   2e308:	and	w2, w2, #0xfffffff0
   2e30c:	orr	w2, w21, w2
   2e310:	strb	w2, [x19]
   2e314:	str	xzr, [x19, #8]
   2e318:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2e31c:	add	x1, x1, #0x180
   2e320:	stp	x22, xzr, [x0]
   2e324:	mov	x2, #0x1                   	// #1
   2e328:	str	x2, [x19, #24]
   2e32c:	ldr	x3, [x1, #72]
   2e330:	ldr	x2, [x0]
   2e334:	cmp	x2, x3
   2e338:	b.cs	2e3d8 <PyInit__decimal@@Base+0x12198>  // b.hs, b.nlast
   2e33c:	ldr	x0, [x1, #32]
   2e340:	cmp	x2, x0
   2e344:	b.cs	2e428 <PyInit__decimal@@Base+0x121e8>  // b.hs, b.nlast
   2e348:	ldr	x0, [x1, #16]
   2e34c:	cmp	x2, x0
   2e350:	b.cs	2e4c8 <PyInit__decimal@@Base+0x12288>  // b.hs, b.nlast
   2e354:	ldr	x0, [x1, #8]
   2e358:	cmp	x2, x0
   2e35c:	cset	x3, cs  // cs = hs, nlast
   2e360:	add	x3, x3, #0x1
   2e364:	ldp	x21, x22, [sp, #32]
   2e368:	str	x3, [x19, #16]
   2e36c:	mov	w0, w20
   2e370:	ldp	x19, x20, [sp, #16]
   2e374:	ldp	x29, x30, [sp], #256
   2e378:	ret
   2e37c:	mov	x22, #0x1                   	// #1
   2e380:	mov	w20, w22
   2e384:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e388:	add	x1, sp, #0x70
   2e38c:	add	x0, sp, #0x40
   2e390:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2e394:	mov	w20, w0
   2e398:	cbnz	w0, 2e554 <PyInit__decimal@@Base+0x12314>
   2e39c:	ldr	x1, [sp, #72]
   2e3a0:	mov	x22, #0x0                   	// #0
   2e3a4:	ldr	x0, [sp, #120]
   2e3a8:	cmp	x1, x0
   2e3ac:	b.eq	2e2e0 <PyInit__decimal@@Base+0x120a0>  // b.none
   2e3b0:	ldrb	w0, [sp, #64]
   2e3b4:	sbfx	x0, x0, #0, #1
   2e3b8:	lsl	w0, w0, #1
   2e3bc:	add	w20, w0, #0x1
   2e3c0:	b.ge	2e5a0 <PyInit__decimal@@Base+0x12360>  // b.tcont
   2e3c4:	mvn	w20, w0
   2e3c8:	cmp	w20, #0x0
   2e3cc:	cset	x22, ne  // ne = any
   2e3d0:	lsr	w21, w20, #31
   2e3d4:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e3d8:	ldr	x0, [x1, #112]
   2e3dc:	cmp	x2, x0
   2e3e0:	b.cs	2e46c <PyInit__decimal@@Base+0x1222c>  // b.hs, b.nlast
   2e3e4:	ldr	x0, [x1, #88]
   2e3e8:	cmp	x2, x0
   2e3ec:	b.cc	2e518 <PyInit__decimal@@Base+0x122d8>  // b.lo, b.ul, b.last
   2e3f0:	ldr	x0, [x1, #104]
   2e3f4:	mov	x3, #0xe                   	// #14
   2e3f8:	cmp	x2, x0
   2e3fc:	b.cs	2e364 <PyInit__decimal@@Base+0x12124>  // b.hs, b.nlast
   2e400:	ldr	x0, [x1, #96]
   2e404:	ldp	x21, x22, [sp, #32]
   2e408:	cmp	x2, x0
   2e40c:	cset	x3, cs  // cs = hs, nlast
   2e410:	mov	w0, w20
   2e414:	add	x3, x3, #0xc
   2e418:	str	x3, [x19, #16]
   2e41c:	ldp	x19, x20, [sp, #16]
   2e420:	ldp	x29, x30, [sp], #256
   2e424:	ret
   2e428:	ldr	x0, [x1, #48]
   2e42c:	cmp	x2, x0
   2e430:	b.cc	2e52c <PyInit__decimal@@Base+0x122ec>  // b.lo, b.ul, b.last
   2e434:	ldr	x0, [x1, #64]
   2e438:	mov	x3, #0x9                   	// #9
   2e43c:	cmp	x2, x0
   2e440:	b.cs	2e364 <PyInit__decimal@@Base+0x12124>  // b.hs, b.nlast
   2e444:	ldr	x0, [x1, #56]
   2e448:	ldp	x21, x22, [sp, #32]
   2e44c:	cmp	x2, x0
   2e450:	cset	x3, cs  // cs = hs, nlast
   2e454:	mov	w0, w20
   2e458:	add	x3, x3, #0x7
   2e45c:	str	x3, [x19, #16]
   2e460:	ldp	x19, x20, [sp, #16]
   2e464:	ldp	x29, x30, [sp], #256
   2e468:	ret
   2e46c:	ldr	x0, [x1, #144]
   2e470:	cmp	x2, x0
   2e474:	b.cs	2e4f0 <PyInit__decimal@@Base+0x122b0>  // b.hs, b.nlast
   2e478:	ldr	x0, [x1, #128]
   2e47c:	cmp	x2, x0
   2e480:	b.cs	2e540 <PyInit__decimal@@Base+0x12300>  // b.hs, b.nlast
   2e484:	ldr	x0, [x1, #120]
   2e488:	cmp	x2, x0
   2e48c:	cset	x3, cs  // cs = hs, nlast
   2e490:	add	x3, x3, #0xf
   2e494:	b	2e364 <PyInit__decimal@@Base+0x12124>
   2e498:	add	x3, sp, #0xd0
   2e49c:	mov	x2, #0x8                   	// #8
   2e4a0:	strb	wzr, [sp, #208]
   2e4a4:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2e4a8:	ldrb	w1, [sp, #208]
   2e4ac:	str	x0, [x19, #40]
   2e4b0:	cbnz	w1, 2e4bc <PyInit__decimal@@Base+0x1227c>
   2e4b4:	ldr	x1, [x23, #1880]
   2e4b8:	str	x1, [x19, #32]
   2e4bc:	ldrb	w2, [x19]
   2e4c0:	ldr	x23, [sp, #48]
   2e4c4:	b	2e308 <PyInit__decimal@@Base+0x120c8>
   2e4c8:	ldr	x0, [x1, #24]
   2e4cc:	ldp	x21, x22, [sp, #32]
   2e4d0:	cmp	x2, x0
   2e4d4:	cset	x3, cs  // cs = hs, nlast
   2e4d8:	mov	w0, w20
   2e4dc:	add	x3, x3, #0x3
   2e4e0:	str	x3, [x19, #16]
   2e4e4:	ldp	x19, x20, [sp, #16]
   2e4e8:	ldp	x29, x30, [sp], #256
   2e4ec:	ret
   2e4f0:	ldr	x0, [x1, #152]
   2e4f4:	ldp	x21, x22, [sp, #32]
   2e4f8:	cmp	x2, x0
   2e4fc:	cset	x3, cs  // cs = hs, nlast
   2e500:	mov	w0, w20
   2e504:	add	x3, x3, #0x13
   2e508:	str	x3, [x19, #16]
   2e50c:	ldp	x19, x20, [sp, #16]
   2e510:	ldp	x29, x30, [sp], #256
   2e514:	ret
   2e518:	ldr	x0, [x1, #80]
   2e51c:	cmp	x2, x0
   2e520:	cset	x3, cs  // cs = hs, nlast
   2e524:	add	x3, x3, #0xa
   2e528:	b	2e364 <PyInit__decimal@@Base+0x12124>
   2e52c:	ldr	x0, [x1, #40]
   2e530:	cmp	x2, x0
   2e534:	cset	x3, cs  // cs = hs, nlast
   2e538:	add	x3, x3, #0x5
   2e53c:	b	2e364 <PyInit__decimal@@Base+0x12124>
   2e540:	ldr	x0, [x1, #136]
   2e544:	cmp	x2, x0
   2e548:	cset	x3, cs  // cs = hs, nlast
   2e54c:	add	x3, x3, #0x11
   2e550:	b	2e364 <PyInit__decimal@@Base+0x12124>
   2e554:	ldrb	w0, [sp, #64]
   2e558:	sbfx	x0, x0, #0, #1
   2e55c:	lsl	w0, w0, #1
   2e560:	madd	w20, w0, w20, w20
   2e564:	cmp	w20, #0x0
   2e568:	cset	x22, ne  // ne = any
   2e56c:	lsr	w21, w20, #31
   2e570:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e574:	cmp	x8, #0x0
   2e578:	cset	w0, gt
   2e57c:	cmp	x9, #0x0
   2e580:	cset	w5, gt
   2e584:	cmp	w0, #0x0
   2e588:	ccmp	w5, #0x0, #0x4, ne  // ne = any
   2e58c:	b.ne	2e5b0 <PyInit__decimal@@Base+0x12370>  // b.any
   2e590:	subs	w20, w5, w0
   2e594:	cset	x22, ne  // ne = any
   2e598:	lsr	w21, w20, #31
   2e59c:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e5a0:	cmp	w20, #0x0
   2e5a4:	lsr	w21, w20, #31
   2e5a8:	cset	x22, ne  // ne = any
   2e5ac:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e5b0:	add	x1, sp, #0xd0
   2e5b4:	add	x0, sp, #0xa0
   2e5b8:	strb	w4, [sp, #160]
   2e5bc:	stp	xzr, x12, [sp, #168]
   2e5c0:	stp	x9, x11, [sp, #184]
   2e5c4:	str	x7, [sp, #200]
   2e5c8:	strb	w3, [sp, #208]
   2e5cc:	stp	xzr, x10, [sp, #216]
   2e5d0:	stp	x8, x2, [sp, #232]
   2e5d4:	str	x6, [sp, #248]
   2e5d8:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   2e5dc:	ldrb	w1, [sp, #64]
   2e5e0:	sbfx	x1, x1, #0, #1
   2e5e4:	lsl	w1, w1, #1
   2e5e8:	madd	w20, w1, w0, w0
   2e5ec:	cmp	w20, #0x0
   2e5f0:	cset	x22, ne  // ne = any
   2e5f4:	lsr	w21, w20, #31
   2e5f8:	b	2e2e0 <PyInit__decimal@@Base+0x120a0>
   2e5fc:	nop
   2e600:	stp	x29, x30, [sp, #-48]!
   2e604:	mov	x29, sp
   2e608:	stp	x21, x22, [sp, #32]
   2e60c:	mov	x22, x2
   2e610:	mov	x2, x3
   2e614:	ldr	x3, [x1, #24]
   2e618:	ldr	x8, [x1, #40]
   2e61c:	add	x5, x8, x3, lsl #3
   2e620:	ldur	x5, [x5, #-8]
   2e624:	cmp	x5, #0x0
   2e628:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   2e62c:	b.eq	2e6e4 <PyInit__decimal@@Base+0x124a4>  // b.none
   2e630:	stp	x19, x20, [sp, #16]
   2e634:	mov	x20, x1
   2e638:	mov	x19, #0x9436                	// #37942
   2e63c:	movk	x19, #0x50d7, lsl #16
   2e640:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2e644:	ldr	x6, [x20, #16]
   2e648:	movk	x19, #0x435e, lsl #32
   2e64c:	movk	x19, #0xd79, lsl #48
   2e650:	mov	x21, x0
   2e654:	add	x6, x22, x6
   2e658:	ldr	x7, [x1, #1880]
   2e65c:	smulh	x19, x6, x19
   2e660:	ldr	x4, [x0, #32]
   2e664:	sub	x19, x19, x6, asr #63
   2e668:	add	x5, x19, x19, lsl #2
   2e66c:	lsl	x5, x5, #2
   2e670:	sub	x5, x5, x19
   2e674:	cmp	x6, x5
   2e678:	cinc	x19, x19, ne  // ne = any
   2e67c:	cmp	x7, x19
   2e680:	csel	x1, x7, x19, ge  // ge = tcont
   2e684:	cmp	x1, x4
   2e688:	b.eq	2e69c <PyInit__decimal@@Base+0x1245c>  // b.none
   2e68c:	ldrb	w5, [x0]
   2e690:	tbz	w5, #5, 2e704 <PyInit__decimal@@Base+0x124c4>
   2e694:	cmp	x1, x4
   2e698:	b.gt	2e6f0 <PyInit__decimal@@Base+0x124b0>
   2e69c:	ldr	x0, [x21, #40]
   2e6a0:	mov	x1, x8
   2e6a4:	mov	x2, x19
   2e6a8:	mov	x4, x22
   2e6ac:	bl	1db80 <PyInit__decimal@@Base+0x1940>
   2e6b0:	ldrb	w2, [x20]
   2e6b4:	mov	w0, #0x1                   	// #1
   2e6b8:	ldrb	w1, [x21]
   2e6bc:	bfxil	w1, w2, #0, #4
   2e6c0:	strb	w1, [x21]
   2e6c4:	ldp	x1, x2, [x20, #8]
   2e6c8:	str	x19, [x21, #24]
   2e6cc:	add	x2, x2, x22
   2e6d0:	stp	x1, x2, [x21, #8]
   2e6d4:	ldp	x19, x20, [sp, #16]
   2e6d8:	ldp	x21, x22, [sp, #32]
   2e6dc:	ldp	x29, x30, [sp], #48
   2e6e0:	ret
   2e6e4:	ldp	x21, x22, [sp, #32]
   2e6e8:	ldp	x29, x30, [sp], #48
   2e6ec:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2e6f0:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2e6f4:	cbz	w0, 2e6d4 <PyInit__decimal@@Base+0x12494>
   2e6f8:	ldr	x3, [x20, #24]
   2e6fc:	ldr	x8, [x20, #40]
   2e700:	b	2e69c <PyInit__decimal@@Base+0x1245c>
   2e704:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2e708:	b	2e6f4 <PyInit__decimal@@Base+0x124b4>
   2e70c:	nop
   2e710:	sub	sp, sp, #0x2e0
   2e714:	mov	w11, #0x30                  	// #48
   2e718:	add	x7, sp, #0xe0
   2e71c:	mov	x8, #0x1                   	// #1
   2e720:	mov	w10, #0xffffff90            	// #-112
   2e724:	stp	x29, x30, [sp]
   2e728:	mov	x29, sp
   2e72c:	ldr	x9, [x2, #8]
   2e730:	stp	x25, x26, [sp, #64]
   2e734:	mov	x26, x1
   2e738:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2e73c:	stp	x19, x20, [sp, #16]
   2e740:	mov	x19, x2
   2e744:	ldr	q2, [x1, #1760]
   2e748:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   2e74c:	ldr	x2, [x26, #8]
   2e750:	stp	x21, x22, [sp, #32]
   2e754:	mov	x21, x0
   2e758:	ldr	q1, [x1, #2224]
   2e75c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   2e760:	stp	x23, x24, [sp, #48]
   2e764:	and	w22, w3, #0xff
   2e768:	mov	x23, x6
   2e76c:	ldr	q0, [x1, #2176]
   2e770:	add	x1, sp, #0x78
   2e774:	stp	x27, x28, [sp, #80]
   2e778:	cmp	x2, x9
   2e77c:	str	x5, [sp, #104]
   2e780:	str	x8, [sp, #120]
   2e784:	strb	w11, [sp, #128]
   2e788:	stp	xzr, xzr, [sp, #136]
   2e78c:	str	x7, [sp, #168]
   2e790:	strb	w10, [sp, #176]
   2e794:	str	x1, [sp, #216]
   2e798:	stur	q2, [sp, #152]
   2e79c:	stur	q1, [sp, #184]
   2e7a0:	stur	q0, [sp, #200]
   2e7a4:	b.eq	2e9dc <PyInit__decimal@@Base+0x1279c>  // b.none
   2e7a8:	b.lt	2e9c8 <PyInit__decimal@@Base+0x12788>  // b.tstop
   2e7ac:	mov	x0, x2
   2e7b0:	mov	x27, x19
   2e7b4:	mov	x2, x9
   2e7b8:	mov	x19, x26
   2e7bc:	mov	x9, x0
   2e7c0:	mov	w25, w8
   2e7c4:	mov	w24, w8
   2e7c8:	mov	w28, #0x0                   	// #0
   2e7cc:	ldr	x5, [x19, #24]
   2e7d0:	ldr	x0, [x19, #40]
   2e7d4:	add	x0, x0, x5, lsl #3
   2e7d8:	ldur	x0, [x0, #-8]
   2e7dc:	cbz	x0, 2e83c <PyInit__decimal@@Base+0x125fc>
   2e7e0:	ldr	x4, [x4]
   2e7e4:	sub	x1, x9, #0x1
   2e7e8:	ldr	x5, [x19, #16]
   2e7ec:	mvn	x0, x4
   2e7f0:	ldr	x6, [x27, #16]
   2e7f4:	add	x3, x1, x5
   2e7f8:	cmp	x5, x4
   2e7fc:	add	x3, x3, x0
   2e800:	sub	x0, x2, #0x1
   2e804:	csel	x1, x1, x3, gt
   2e808:	add	x0, x0, x6
   2e80c:	cmp	x0, x1
   2e810:	b.lt	2ea6c <PyInit__decimal@@Base+0x1282c>  // b.tstop
   2e814:	add	x20, sp, #0x80
   2e818:	sub	x2, x9, x2
   2e81c:	mov	x1, x19
   2e820:	mov	x0, x20
   2e824:	mov	x3, x23
   2e828:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   2e82c:	cbz	w0, 2eb64 <PyInit__decimal@@Base+0x12924>
   2e830:	ldr	x2, [x27, #8]
   2e834:	mov	x19, x20
   2e838:	ldr	x5, [sp, #152]
   2e83c:	ldr	x20, [x27, #24]
   2e840:	str	x2, [x21, #8]
   2e844:	cmp	x20, x5
   2e848:	b.gt	2e86c <PyInit__decimal@@Base+0x1262c>
   2e84c:	mov	x1, x20
   2e850:	mov	x0, x27
   2e854:	mov	x20, x5
   2e858:	mov	x27, x19
   2e85c:	mov	w25, w28
   2e860:	mov	x5, x1
   2e864:	mov	x19, x0
   2e868:	mov	w24, w28
   2e86c:	adrp	x28, 65000 <PyInit__decimal@@Base+0x48dc0>
   2e870:	ldr	x0, [x21, #32]
   2e874:	ldr	x1, [x28, #1880]
   2e878:	cmp	x1, x20
   2e87c:	csel	x1, x1, x20, ge  // ge = tcont
   2e880:	cmp	x1, x0
   2e884:	b.eq	2eaac <PyInit__decimal@@Base+0x1286c>  // b.none
   2e888:	ldrb	w2, [x21]
   2e88c:	tbz	w2, #5, 2ea00 <PyInit__decimal@@Base+0x127c0>
   2e890:	cmp	x1, x0
   2e894:	mov	x9, x20
   2e898:	b.gt	2eacc <PyInit__decimal@@Base+0x1288c>
   2e89c:	ldrb	w0, [x26]
   2e8a0:	mov	x3, x9
   2e8a4:	mov	x4, x5
   2e8a8:	and	w0, w0, #0x1
   2e8ac:	cmp	w0, w22
   2e8b0:	ldr	x2, [x19, #40]
   2e8b4:	ldr	x0, [x21, #40]
   2e8b8:	ldr	x1, [x27, #40]
   2e8bc:	b.eq	2eadc <PyInit__decimal@@Base+0x1289c>  // b.none
   2e8c0:	cmp	x9, x5
   2e8c4:	b.eq	2ea1c <PyInit__decimal@@Base+0x127dc>  // b.none
   2e8c8:	bl	1d288 <PyInit__decimal@@Base+0x1048>
   2e8cc:	ldr	x19, [x27, #24]
   2e8d0:	ldr	x2, [x21, #40]
   2e8d4:	cmp	x19, #0x1
   2e8d8:	lsl	x20, x19, #3
   2e8dc:	sub	x20, x20, #0x8
   2e8e0:	b.gt	2e8f8 <PyInit__decimal@@Base+0x126b8>
   2e8e4:	b	2e900 <PyInit__decimal@@Base+0x126c0>
   2e8e8:	sub	x19, x19, #0x1
   2e8ec:	sub	x20, x20, #0x8
   2e8f0:	cmp	x19, #0x1
   2e8f4:	b.eq	2e9f8 <PyInit__decimal@@Base+0x127b8>  // b.none
   2e8f8:	ldr	x0, [x2, x20]
   2e8fc:	cbz	x0, 2e8e8 <PyInit__decimal@@Base+0x126a8>
   2e900:	ldr	x1, [x28, #1880]
   2e904:	ldr	x3, [x21, #32]
   2e908:	cmp	x1, x19
   2e90c:	csel	x1, x1, x19, ge  // ge = tcont
   2e910:	ldrb	w0, [x21]
   2e914:	cmp	x1, x3
   2e918:	b.eq	2e928 <PyInit__decimal@@Base+0x126e8>  // b.none
   2e91c:	tbz	w0, #5, 2eab4 <PyInit__decimal@@Base+0x12874>
   2e920:	cmp	x1, x3
   2e924:	b.gt	2eb4c <PyInit__decimal@@Base+0x1290c>
   2e928:	str	x19, [x21, #24]
   2e92c:	cbnz	w25, 2e938 <PyInit__decimal@@Base+0x126f8>
   2e930:	ldrb	w22, [x26]
   2e934:	and	w22, w22, #0x1
   2e938:	and	w0, w0, #0xfffffff0
   2e93c:	orr	w22, w22, w0
   2e940:	strb	w22, [x21]
   2e944:	ldr	x0, [x2, x20]
   2e948:	cbnz	x0, 2e96c <PyInit__decimal@@Base+0x1272c>
   2e94c:	ldr	x1, [sp, #104]
   2e950:	and	w22, w22, #0xfe
   2e954:	strb	w22, [x21]
   2e958:	orr	w0, w22, #0x1
   2e95c:	ldr	w1, [x1]
   2e960:	cmp	w1, #0x3
   2e964:	csel	w22, w0, w22, eq  // eq = none
   2e968:	strb	w22, [x21]
   2e96c:	mov	x0, x21
   2e970:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   2e974:	ldrb	w0, [sp, #128]
   2e978:	tst	w0, #0xe0
   2e97c:	b.ne	2e994 <PyInit__decimal@@Base+0x12754>  // b.any
   2e980:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2e984:	ldr	x0, [sp, #168]
   2e988:	ldr	x1, [x1, #1912]
   2e98c:	blr	x1
   2e990:	ldrb	w0, [sp, #128]
   2e994:	tbnz	w0, #4, 2e9a8 <PyInit__decimal@@Base+0x12768>
   2e998:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2e99c:	add	x0, sp, #0x80
   2e9a0:	ldr	x1, [x1, #1912]
   2e9a4:	blr	x1
   2e9a8:	ldp	x29, x30, [sp]
   2e9ac:	ldp	x19, x20, [sp, #16]
   2e9b0:	ldp	x21, x22, [sp, #32]
   2e9b4:	ldp	x23, x24, [sp, #48]
   2e9b8:	ldp	x25, x26, [sp, #64]
   2e9bc:	ldp	x27, x28, [sp, #80]
   2e9c0:	add	sp, sp, #0x2e0
   2e9c4:	ret
   2e9c8:	mov	w28, w8
   2e9cc:	mov	x27, x26
   2e9d0:	mov	w25, #0x0                   	// #0
   2e9d4:	mov	w24, #0x2                   	// #2
   2e9d8:	b	2e7cc <PyInit__decimal@@Base+0x1258c>
   2e9dc:	mov	x27, x19
   2e9e0:	mov	w25, w8
   2e9e4:	mov	x19, x26
   2e9e8:	mov	w24, w8
   2e9ec:	mov	w28, #0x0                   	// #0
   2e9f0:	ldr	x5, [x26, #24]
   2e9f4:	b	2e83c <PyInit__decimal@@Base+0x125fc>
   2e9f8:	mov	x20, #0x0                   	// #0
   2e9fc:	b	2e900 <PyInit__decimal@@Base+0x126c0>
   2ea00:	mov	x2, x23
   2ea04:	mov	x0, x21
   2ea08:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2ea0c:	cbz	w0, 2e974 <PyInit__decimal@@Base+0x12734>
   2ea10:	ldr	x5, [x19, #24]
   2ea14:	ldr	x9, [x27, #24]
   2ea18:	b	2e89c <PyInit__decimal@@Base+0x1265c>
   2ea1c:	subs	x7, x9, #0x1
   2ea20:	b.pl	2ea30 <PyInit__decimal@@Base+0x127f0>  // b.nfrst
   2ea24:	b	2e8c8 <PyInit__decimal@@Base+0x12688>
   2ea28:	cmn	x7, #0x1
   2ea2c:	b.eq	2e8c8 <PyInit__decimal@@Base+0x12688>  // b.none
   2ea30:	ldr	x8, [x1, x7, lsl #3]
   2ea34:	ldr	x6, [x2, x7, lsl #3]
   2ea38:	sub	x7, x7, #0x1
   2ea3c:	cmp	x8, x6
   2ea40:	b.eq	2ea28 <PyInit__decimal@@Base+0x127e8>  // b.none
   2ea44:	b.cs	2e8c8 <PyInit__decimal@@Base+0x12688>  // b.hs, b.nlast
   2ea48:	mov	x4, x1
   2ea4c:	add	w8, w24, #0x1
   2ea50:	mov	x1, x2
   2ea54:	and	w25, w8, #0x1
   2ea58:	mov	x2, x4
   2ea5c:	mov	x3, x5
   2ea60:	mov	x4, x9
   2ea64:	mov	x27, x19
   2ea68:	b	2e8c8 <PyInit__decimal@@Base+0x12688>
   2ea6c:	ldr	x3, [x27, #24]
   2ea70:	mov	x2, x1
   2ea74:	ldr	x5, [x27, #40]
   2ea78:	str	x1, [sp, #184]
   2ea7c:	ldrb	w0, [x27]
   2ea80:	mov	w4, #0xffffff90            	// #-112
   2ea84:	add	x27, sp, #0xb0
   2ea88:	add	x1, x5, x3, lsl #3
   2ea8c:	and	w0, w0, #0xf
   2ea90:	orr	w0, w0, w4
   2ea94:	strb	w0, [sp, #176]
   2ea98:	ldur	x0, [x1, #-8]
   2ea9c:	cmp	x0, #0x0
   2eaa0:	cset	x0, ne  // ne = any
   2eaa4:	str	x0, [sp, #120]
   2eaa8:	b	2e814 <PyInit__decimal@@Base+0x125d4>
   2eaac:	mov	x9, x20
   2eab0:	b	2e89c <PyInit__decimal@@Base+0x1265c>
   2eab4:	mov	x2, x23
   2eab8:	mov	x0, x21
   2eabc:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2eac0:	ldrb	w0, [x21]
   2eac4:	ldr	x2, [x21, #40]
   2eac8:	b	2e928 <PyInit__decimal@@Base+0x126e8>
   2eacc:	mov	x2, x23
   2ead0:	mov	x0, x21
   2ead4:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2ead8:	b	2ea0c <PyInit__decimal@@Base+0x127cc>
   2eadc:	bl	1cf40 <PyInit__decimal@@Base+0xd00>
   2eae0:	mov	x19, x0
   2eae4:	cbz	x0, 2eb34 <PyInit__decimal@@Base+0x128f4>
   2eae8:	ldr	x20, [x27, #24]
   2eaec:	ldr	x0, [x28, #1880]
   2eaf0:	add	x20, x20, #0x1
   2eaf4:	ldr	x2, [x21, #32]
   2eaf8:	cmp	x0, x20
   2eafc:	csel	x1, x0, x20, ge  // ge = tcont
   2eb00:	cmp	x1, x2
   2eb04:	b.eq	2eb28 <PyInit__decimal@@Base+0x128e8>  // b.none
   2eb08:	ldrb	w0, [x21]
   2eb0c:	tbz	w0, #5, 2eb78 <PyInit__decimal@@Base+0x12938>
   2eb10:	cmp	x1, x2
   2eb14:	b.le	2eb28 <PyInit__decimal@@Base+0x128e8>
   2eb18:	mov	x2, x23
   2eb1c:	mov	x0, x21
   2eb20:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2eb24:	cbz	w0, 2e974 <PyInit__decimal@@Base+0x12734>
   2eb28:	ldr	x0, [x21, #40]
   2eb2c:	add	x0, x0, x20, lsl #3
   2eb30:	stur	x19, [x0, #-8]
   2eb34:	ldrb	w0, [x21]
   2eb38:	str	x20, [x21, #24]
   2eb3c:	and	w0, w0, #0xfffffff0
   2eb40:	orr	w22, w22, w0
   2eb44:	strb	w22, [x21]
   2eb48:	b	2e96c <PyInit__decimal@@Base+0x1272c>
   2eb4c:	mov	x2, x23
   2eb50:	mov	x0, x21
   2eb54:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2eb58:	ldrb	w0, [x21]
   2eb5c:	ldr	x2, [x21, #40]
   2eb60:	b	2e928 <PyInit__decimal@@Base+0x126e8>
   2eb64:	mov	x2, x23
   2eb68:	mov	x0, x21
   2eb6c:	mov	w1, #0x200                 	// #512
   2eb70:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   2eb74:	b	2e974 <PyInit__decimal@@Base+0x12734>
   2eb78:	mov	x2, x23
   2eb7c:	mov	x0, x21
   2eb80:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2eb84:	cbnz	w0, 2eb28 <PyInit__decimal@@Base+0x128e8>
   2eb88:	b	2e974 <PyInit__decimal@@Base+0x12734>
   2eb8c:	nop
   2eb90:	stp	x29, x30, [sp, #-64]!
   2eb94:	mov	x29, sp
   2eb98:	stp	x19, x20, [sp, #16]
   2eb9c:	mov	x20, x1
   2eba0:	mov	x19, x0
   2eba4:	ldr	x1, [x0, #24]
   2eba8:	ldr	x0, [x0, #40]
   2ebac:	add	x2, x0, x1, lsl #3
   2ebb0:	ldur	x2, [x2, #-8]
   2ebb4:	str	x21, [sp, #32]
   2ebb8:	mov	x21, #0x0                   	// #0
   2ebbc:	cmp	x2, #0x0
   2ebc0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   2ebc4:	b.ne	2ebdc <PyInit__decimal@@Base+0x1299c>  // b.any
   2ebc8:	mov	x0, x21
   2ebcc:	ldp	x19, x20, [sp, #16]
   2ebd0:	ldr	x21, [sp, #32]
   2ebd4:	ldp	x29, x30, [sp], #64
   2ebd8:	ret
   2ebdc:	ldr	x2, [x19, #16]
   2ebe0:	cmp	x2, x20
   2ebe4:	b.gt	2ec10 <PyInit__decimal@@Base+0x129d0>
   2ebe8:	cset	w2, eq  // eq = none
   2ebec:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   2ebf0:	mov	x21, x0
   2ebf4:	mov	x0, x19
   2ebf8:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2ebfc:	mov	x0, x21
   2ec00:	ldp	x19, x20, [sp, #16]
   2ec04:	ldr	x21, [sp, #32]
   2ec08:	ldp	x29, x30, [sp], #64
   2ec0c:	ret
   2ec10:	mov	x2, x1
   2ec14:	mov	x3, x20
   2ec18:	mov	x1, x0
   2ec1c:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   2ec20:	ldr	x3, [x19, #16]
   2ec24:	mov	x2, #0x9436                	// #37942
   2ec28:	movk	x2, #0x50d7, lsl #16
   2ec2c:	mov	x21, x0
   2ec30:	sub	x3, x3, x20
   2ec34:	movk	x2, #0x435e, lsl #32
   2ec38:	movk	x2, #0xd79, lsl #48
   2ec3c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ec40:	ldr	x4, [x19, #32]
   2ec44:	smulh	x2, x3, x2
   2ec48:	ldr	x1, [x1, #1880]
   2ec4c:	str	x3, [x19, #16]
   2ec50:	sub	x20, x2, x3, asr #63
   2ec54:	add	x0, x20, x20, lsl #2
   2ec58:	lsl	x0, x0, #2
   2ec5c:	sub	x0, x0, x20
   2ec60:	cmp	x3, x0
   2ec64:	cinc	x20, x20, ne  // ne = any
   2ec68:	cmp	x1, x20
   2ec6c:	csel	x1, x1, x20, ge  // ge = tcont
   2ec70:	cmp	x1, x4
   2ec74:	b.eq	2ec88 <PyInit__decimal@@Base+0x12a48>  // b.none
   2ec78:	ldrb	w0, [x19]
   2ec7c:	tbz	w0, #5, 2eca0 <PyInit__decimal@@Base+0x12a60>
   2ec80:	cmp	x1, x4
   2ec84:	b.gt	2ecb4 <PyInit__decimal@@Base+0x12a74>
   2ec88:	str	x20, [x19, #24]
   2ec8c:	mov	x0, x21
   2ec90:	ldp	x19, x20, [sp, #16]
   2ec94:	ldr	x21, [sp, #32]
   2ec98:	ldp	x29, x30, [sp], #64
   2ec9c:	ret
   2eca0:	add	x2, sp, #0x3c
   2eca4:	mov	x0, x19
   2eca8:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2ecac:	str	x20, [x19, #24]
   2ecb0:	b	2ec8c <PyInit__decimal@@Base+0x12a4c>
   2ecb4:	add	x2, sp, #0x3c
   2ecb8:	mov	x0, x19
   2ecbc:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2ecc0:	str	x20, [x19, #24]
   2ecc4:	b	2ec8c <PyInit__decimal@@Base+0x12a4c>
   2ecc8:	stp	x29, x30, [sp, #-80]!
   2eccc:	mov	x29, sp
   2ecd0:	stp	x21, x22, [sp, #32]
   2ecd4:	ldp	x22, x21, [x0, #8]
   2ecd8:	stp	x19, x20, [sp, #16]
   2ecdc:	mov	x20, x1
   2ece0:	ldr	x1, [x1, #8]
   2ece4:	stp	x23, x24, [sp, #48]
   2ece8:	mov	x19, x0
   2ecec:	add	x21, x22, x21
   2ecf0:	mov	x23, x2
   2ecf4:	sub	x21, x21, #0x1
   2ecf8:	cmp	x1, x21
   2ecfc:	b.ge	2ed94 <PyInit__decimal@@Base+0x12b54>  // b.tcont
   2ed00:	ldr	x3, [x0, #24]
   2ed04:	ldr	x2, [x0, #40]
   2ed08:	add	x3, x2, x3, lsl #3
   2ed0c:	ldur	x2, [x3, #-8]
   2ed10:	cbz	x2, 2eec8 <PyInit__decimal@@Base+0x12c88>
   2ed14:	ldr	w1, [x20, #36]
   2ed18:	cmp	w1, #0x3
   2ed1c:	b.eq	2ef80 <PyInit__decimal@@Base+0x12d40>  // b.none
   2ed20:	b.gt	2ee94 <PyInit__decimal@@Base+0x12c54>
   2ed24:	cmp	w1, #0x2
   2ed28:	b.ne	2ed64 <PyInit__decimal@@Base+0x12b24>  // b.any
   2ed2c:	ldrb	w2, [x0]
   2ed30:	tbnz	w2, #0, 2ed70 <PyInit__decimal@@Base+0x12b30>
   2ed34:	mov	w2, w1
   2ed38:	mov	w1, #0x0                   	// #0
   2ed3c:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2ed40:	ldr	w0, [x23]
   2ed44:	mov	w1, #0x1840                	// #6208
   2ed48:	orr	w0, w0, w1
   2ed4c:	str	w0, [x23]
   2ed50:	ldp	x19, x20, [sp, #16]
   2ed54:	ldp	x21, x22, [sp, #32]
   2ed58:	ldp	x23, x24, [sp, #48]
   2ed5c:	ldp	x29, x30, [sp], #80
   2ed60:	ret
   2ed64:	cbz	w1, 2eea8 <PyInit__decimal@@Base+0x12c68>
   2ed68:	cmp	w1, #0x1
   2ed6c:	b.ne	2eec4 <PyInit__decimal@@Base+0x12c84>  // b.any
   2ed70:	mov	x1, x20
   2ed74:	mov	x0, x19
   2ed78:	mov	x2, x23
   2ed7c:	bl	2b600 <PyInit__decimal@@Base+0xf3c0>
   2ed80:	ldp	x1, x0, [x20]
   2ed84:	add	x0, x0, #0x1
   2ed88:	sub	x0, x0, x1
   2ed8c:	str	x0, [x19, #8]
   2ed90:	b	2ed40 <PyInit__decimal@@Base+0x12b00>
   2ed94:	ldr	w2, [x20, #40]
   2ed98:	cbz	w2, 2edb0 <PyInit__decimal@@Base+0x12b70>
   2ed9c:	ldr	x2, [x20]
   2eda0:	add	x1, x1, #0x1
   2eda4:	sub	x24, x1, x2
   2eda8:	cmp	x22, x24
   2edac:	b.gt	2ef0c <PyInit__decimal@@Base+0x12ccc>
   2edb0:	ldr	x0, [x20, #16]
   2edb4:	cmp	x0, x21
   2edb8:	b.le	2ed50 <PyInit__decimal@@Base+0x12b10>
   2edbc:	ldr	x1, [x19, #24]
   2edc0:	add	x0, x0, #0x1
   2edc4:	ldr	x2, [x19, #40]
   2edc8:	ldr	x21, [x20]
   2edcc:	add	x1, x2, x1, lsl #3
   2edd0:	sub	x21, x0, x21
   2edd4:	ldur	x0, [x1, #-8]
   2edd8:	cbz	x0, 2ef70 <PyInit__decimal@@Base+0x12d30>
   2eddc:	ldr	w0, [x23]
   2ede0:	cmp	x22, x21
   2ede4:	orr	w0, w0, #0x2000
   2ede8:	str	w0, [x23]
   2edec:	b.ge	2ed50 <PyInit__decimal@@Base+0x12b10>  // b.tcont
   2edf0:	sub	x1, x21, x22
   2edf4:	mov	x0, x19
   2edf8:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   2edfc:	mov	x22, x0
   2ee00:	ldr	w1, [x20, #36]
   2ee04:	sxtw	x0, w0
   2ee08:	str	x21, [x19, #8]
   2ee0c:	cmp	w1, #0x4
   2ee10:	b.eq	2ef98 <PyInit__decimal@@Base+0x12d58>  // b.none
   2ee14:	b.gt	2f034 <PyInit__decimal@@Base+0x12df4>
   2ee18:	cmp	w1, #0x2
   2ee1c:	b.eq	2f0a0 <PyInit__decimal@@Base+0x12e60>  // b.none
   2ee20:	cmp	w1, #0x3
   2ee24:	b.ne	2f020 <PyInit__decimal@@Base+0x12de0>  // b.any
   2ee28:	cbz	x0, 2f090 <PyInit__decimal@@Base+0x12e50>
   2ee2c:	ldrb	w1, [x19]
   2ee30:	and	w1, w1, #0x1
   2ee34:	ldr	x0, [x19, #40]
   2ee38:	cbnz	w1, 2efac <PyInit__decimal@@Base+0x12d6c>
   2ee3c:	ldr	w1, [x23]
   2ee40:	ldr	x2, [x19, #24]
   2ee44:	mov	w3, #0x5040                	// #20544
   2ee48:	orr	w1, w1, w3
   2ee4c:	add	x2, x0, x2, lsl #3
   2ee50:	ldur	x2, [x2, #-8]
   2ee54:	str	w1, [x23]
   2ee58:	cbnz	x2, 2ed50 <PyInit__decimal@@Base+0x12b10>
   2ee5c:	ldrb	w2, [x19]
   2ee60:	tbnz	w2, #5, 2ee78 <PyInit__decimal@@Base+0x12c38>
   2ee64:	adrp	x20, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ee68:	ldr	x3, [x19, #32]
   2ee6c:	ldr	x2, [x20, #1880]
   2ee70:	cmp	x3, x2
   2ee74:	b.gt	2f0f8 <PyInit__decimal@@Base+0x12eb8>
   2ee78:	adrp	x2, 42000 <PyInit__decimal@@Base+0x25dc0>
   2ee7c:	orr	w1, w1, #0x1
   2ee80:	ldr	q0, [x2, #2176]
   2ee84:	str	q0, [x19, #16]
   2ee88:	str	xzr, [x0]
   2ee8c:	str	w1, [x23]
   2ee90:	b	2ed50 <PyInit__decimal@@Base+0x12b10>
   2ee94:	cmp	w1, #0x7
   2ee98:	b.eq	2ed70 <PyInit__decimal@@Base+0x12b30>  // b.none
   2ee9c:	b.le	2eec0 <PyInit__decimal@@Base+0x12c80>
   2eea0:	cmp	w1, #0x8
   2eea4:	b.ne	2eec4 <PyInit__decimal@@Base+0x12c84>  // b.any
   2eea8:	ldrb	w1, [x19]
   2eeac:	mov	x0, x19
   2eeb0:	mov	w2, #0x2                   	// #2
   2eeb4:	and	w1, w1, #0x1
   2eeb8:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2eebc:	b	2ed40 <PyInit__decimal@@Base+0x12b00>
   2eec0:	b.ne	2eea8 <PyInit__decimal@@Base+0x12c68>  // b.any
   2eec4:	bl	67c0 <abort@plt>
   2eec8:	ldr	w0, [x20, #40]
   2eecc:	str	x1, [x19, #8]
   2eed0:	cbz	w0, 2eee4 <PyInit__decimal@@Base+0x12ca4>
   2eed4:	ldr	x0, [x20]
   2eed8:	add	x1, x1, #0x1
   2eedc:	sub	x1, x1, x0
   2eee0:	str	x1, [x19, #8]
   2eee4:	mov	x0, x19
   2eee8:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   2eeec:	ldr	w0, [x23]
   2eef0:	ldp	x19, x20, [sp, #16]
   2eef4:	orr	w0, w0, #0x1
   2eef8:	str	w0, [x23]
   2eefc:	ldp	x21, x22, [sp, #32]
   2ef00:	ldp	x23, x24, [sp, #48]
   2ef04:	ldp	x29, x30, [sp], #80
   2ef08:	ret
   2ef0c:	add	x2, x22, x2
   2ef10:	mov	x3, x23
   2ef14:	sub	x2, x2, x1
   2ef18:	mov	x1, x0
   2ef1c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   2ef20:	cbz	w0, 2ed50 <PyInit__decimal@@Base+0x12b10>
   2ef24:	ldr	x0, [x19, #24]
   2ef28:	sub	x22, x24, x22
   2ef2c:	ldr	x1, [x19, #40]
   2ef30:	ldr	x24, [x19, #8]
   2ef34:	add	x0, x1, x0, lsl #3
   2ef38:	ldr	w1, [x23]
   2ef3c:	add	x22, x24, x22
   2ef40:	str	x22, [x19, #8]
   2ef44:	orr	w2, w1, #0x1
   2ef48:	ldur	x0, [x0, #-8]
   2ef4c:	str	w2, [x23]
   2ef50:	cbz	x0, 2ed50 <PyInit__decimal@@Base+0x12b10>
   2ef54:	ldr	x0, [x20, #16]
   2ef58:	cmp	x0, x21
   2ef5c:	b.le	2ed50 <PyInit__decimal@@Base+0x12b10>
   2ef60:	mov	w0, #0x2001                	// #8193
   2ef64:	orr	w1, w1, w0
   2ef68:	str	w1, [x23]
   2ef6c:	b	2ed50 <PyInit__decimal@@Base+0x12b10>
   2ef70:	cmp	x22, x21
   2ef74:	b.ge	2ed50 <PyInit__decimal@@Base+0x12b10>  // b.tcont
   2ef78:	str	x21, [x19, #8]
   2ef7c:	b	2eee4 <PyInit__decimal@@Base+0x12ca4>
   2ef80:	ldrb	w1, [x0]
   2ef84:	tbz	w1, #0, 2ed70 <PyInit__decimal@@Base+0x12b30>
   2ef88:	mov	w2, #0x2                   	// #2
   2ef8c:	mov	w1, #0x1                   	// #1
   2ef90:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2ef94:	b	2ed40 <PyInit__decimal@@Base+0x12b00>
   2ef98:	cmp	x0, #0x4
   2ef9c:	cset	w0, hi  // hi = pmore
   2efa0:	cbz	w0, 2f008 <PyInit__decimal@@Base+0x12dc8>
   2efa4:	nop
   2efa8:	ldr	x0, [x19, #40]
   2efac:	ldr	x1, [x19, #24]
   2efb0:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   2efb4:	cbz	x0, 2f000 <PyInit__decimal@@Base+0x12dc0>
   2efb8:	ldp	x2, x3, [x19, #24]
   2efbc:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   2efc0:	ldr	x1, [x0, #1880]
   2efc4:	add	x0, x2, #0x1
   2efc8:	cmp	x0, x1
   2efcc:	csel	x1, x0, x1, ge  // ge = tcont
   2efd0:	cmp	x1, x3
   2efd4:	b.eq	2efe8 <PyInit__decimal@@Base+0x12da8>  // b.none
   2efd8:	ldrb	w0, [x19]
   2efdc:	tbz	w0, #5, 2f0d0 <PyInit__decimal@@Base+0x12e90>
   2efe0:	cmp	x1, x3
   2efe4:	b.gt	2f0e8 <PyInit__decimal@@Base+0x12ea8>
   2efe8:	ldr	x0, [x19, #40]
   2efec:	mov	x1, #0x1                   	// #1
   2eff0:	str	x1, [x0, x2, lsl #3]
   2eff4:	ldr	x0, [x19, #24]
   2eff8:	add	x0, x0, x1
   2effc:	str	x0, [x19, #24]
   2f000:	mov	x0, x19
   2f004:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   2f008:	ldr	w1, [x23]
   2f00c:	orr	w0, w1, #0x1000
   2f010:	str	w0, [x23]
   2f014:	cbz	w22, 2ed50 <PyInit__decimal@@Base+0x12b10>
   2f018:	ldr	x0, [x19, #40]
   2f01c:	b	2ee40 <PyInit__decimal@@Base+0x12c00>
   2f020:	cmp	x0, #0x0
   2f024:	cset	w0, ne  // ne = any
   2f028:	cbnz	w1, 2f008 <PyInit__decimal@@Base+0x12dc8>
   2f02c:	cbz	w0, 2f008 <PyInit__decimal@@Base+0x12dc8>
   2f030:	b	2efa8 <PyInit__decimal@@Base+0x12d68>
   2f034:	cmp	w1, #0x6
   2f038:	b.eq	2f0b4 <PyInit__decimal@@Base+0x12e74>  // b.none
   2f03c:	cmp	w1, #0x7
   2f040:	b.ne	2f078 <PyInit__decimal@@Base+0x12e38>  // b.any
   2f044:	cbz	x0, 2f090 <PyInit__decimal@@Base+0x12e50>
   2f048:	ldr	x0, [x19, #40]
   2f04c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2f050:	movk	x1, #0xcccd
   2f054:	ldr	x2, [x0]
   2f058:	umulh	x1, x2, x1
   2f05c:	lsr	x1, x1, #3
   2f060:	add	x1, x1, x1, lsl #2
   2f064:	sub	x1, x2, x1, lsl #1
   2f068:	cmp	w1, #0x0
   2f06c:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   2f070:	b.eq	2efac <PyInit__decimal@@Base+0x12d6c>  // b.none
   2f074:	b	2ee3c <PyInit__decimal@@Base+0x12bfc>
   2f078:	cmp	x0, #0x5
   2f07c:	cset	w0, hi  // hi = pmore
   2f080:	cmp	w1, #0x5
   2f084:	b.ne	2f008 <PyInit__decimal@@Base+0x12dc8>  // b.any
   2f088:	cbz	w0, 2f008 <PyInit__decimal@@Base+0x12dc8>
   2f08c:	b	2efa8 <PyInit__decimal@@Base+0x12d68>
   2f090:	ldr	w0, [x23]
   2f094:	orr	w0, w0, #0x1000
   2f098:	str	w0, [x23]
   2f09c:	b	2ed50 <PyInit__decimal@@Base+0x12b10>
   2f0a0:	cbz	x0, 2f090 <PyInit__decimal@@Base+0x12e50>
   2f0a4:	ldrb	w1, [x19]
   2f0a8:	mvn	w1, w1
   2f0ac:	and	w1, w1, #0x1
   2f0b0:	b	2ee34 <PyInit__decimal@@Base+0x12bf4>
   2f0b4:	cmp	x0, #0x5
   2f0b8:	b.hi	2efa8 <PyInit__decimal@@Base+0x12d68>  // b.pmore
   2f0bc:	b.ne	2f008 <PyInit__decimal@@Base+0x12dc8>  // b.any
   2f0c0:	ldr	x0, [x19, #40]
   2f0c4:	ldr	x1, [x0]
   2f0c8:	tbz	w1, #0, 2ee3c <PyInit__decimal@@Base+0x12bfc>
   2f0cc:	b	2efac <PyInit__decimal@@Base+0x12d6c>
   2f0d0:	mov	x2, x23
   2f0d4:	mov	x0, x19
   2f0d8:	bl	28670 <PyInit__decimal@@Base+0xc430>
   2f0dc:	cbz	w0, 2f008 <PyInit__decimal@@Base+0x12dc8>
   2f0e0:	ldr	x2, [x19, #24]
   2f0e4:	b	2efe8 <PyInit__decimal@@Base+0x12da8>
   2f0e8:	mov	x2, x23
   2f0ec:	mov	x0, x19
   2f0f0:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   2f0f4:	b	2f0dc <PyInit__decimal@@Base+0x12e9c>
   2f0f8:	mov	x1, x2
   2f0fc:	add	x3, sp, #0x4f
   2f100:	mov	x2, #0x8                   	// #8
   2f104:	strb	wzr, [sp, #79]
   2f108:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2f10c:	str	x0, [x19, #40]
   2f110:	ldrb	w1, [sp, #79]
   2f114:	cbnz	w1, 2f120 <PyInit__decimal@@Base+0x12ee0>
   2f118:	ldr	x1, [x20, #1880]
   2f11c:	str	x1, [x19, #32]
   2f120:	ldr	w1, [x23]
   2f124:	b	2ee78 <PyInit__decimal@@Base+0x12c38>
   2f128:	stp	x29, x30, [sp, #-64]!
   2f12c:	mov	x29, sp
   2f130:	stp	x19, x20, [sp, #16]
   2f134:	mov	x19, x0
   2f138:	stp	x21, x22, [sp, #32]
   2f13c:	mov	x21, x1
   2f140:	mov	x22, x2
   2f144:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   2f148:	ldrb	w0, [x19]
   2f14c:	tst	w0, #0xe
   2f150:	b.ne	2f164 <PyInit__decimal@@Base+0x12f24>  // b.any
   2f154:	ldr	x20, [x21]
   2f158:	ldr	x0, [x19, #16]
   2f15c:	cmp	x0, x20
   2f160:	b.gt	2f174 <PyInit__decimal@@Base+0x12f34>
   2f164:	ldp	x19, x20, [sp, #16]
   2f168:	ldp	x21, x22, [sp, #32]
   2f16c:	ldp	x29, x30, [sp], #64
   2f170:	ret
   2f174:	sub	x20, x0, x20
   2f178:	mov	x0, x19
   2f17c:	mov	x1, x20
   2f180:	str	x23, [sp, #48]
   2f184:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   2f188:	mov	x23, x0
   2f18c:	ldr	x1, [x19, #8]
   2f190:	ldr	w2, [x21, #36]
   2f194:	add	x1, x1, x20
   2f198:	str	x1, [x19, #8]
   2f19c:	cmp	w2, #0x4
   2f1a0:	b.eq	2f304 <PyInit__decimal@@Base+0x130c4>  // b.none
   2f1a4:	b.gt	2f1d0 <PyInit__decimal@@Base+0x12f90>
   2f1a8:	cmp	w2, #0x2
   2f1ac:	b.eq	2f2cc <PyInit__decimal@@Base+0x1308c>  // b.none
   2f1b0:	cmp	w2, #0x3
   2f1b4:	b.ne	2f218 <PyInit__decimal@@Base+0x12fd8>  // b.any
   2f1b8:	cbz	x0, 2f34c <PyInit__decimal@@Base+0x1310c>
   2f1bc:	ldrb	w0, [x19]
   2f1c0:	and	w0, w0, #0x1
   2f1c4:	cbnz	w0, 2f26c <PyInit__decimal@@Base+0x1302c>
   2f1c8:	ldr	w0, [x22]
   2f1cc:	b	2f238 <PyInit__decimal@@Base+0x12ff8>
   2f1d0:	cmp	w2, #0x6
   2f1d4:	b.eq	2f2e4 <PyInit__decimal@@Base+0x130a4>  // b.none
   2f1d8:	cmp	w2, #0x7
   2f1dc:	b.ne	2f258 <PyInit__decimal@@Base+0x13018>  // b.any
   2f1e0:	ldr	x0, [x19, #40]
   2f1e4:	ldr	x2, [x0]
   2f1e8:	cbz	x23, 2f34c <PyInit__decimal@@Base+0x1310c>
   2f1ec:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2f1f0:	movk	x1, #0xcccd
   2f1f4:	umulh	x1, x2, x1
   2f1f8:	lsr	x1, x1, #3
   2f1fc:	add	x1, x1, x1, lsl #2
   2f200:	sub	x1, x2, x1, lsl #1
   2f204:	cmp	w1, #0x0
   2f208:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   2f20c:	b.eq	2f270 <PyInit__decimal@@Base+0x13030>  // b.none
   2f210:	ldr	w0, [x22]
   2f214:	b	2f238 <PyInit__decimal@@Base+0x12ff8>
   2f218:	cmp	x0, #0x0
   2f21c:	cset	w0, ne  // ne = any
   2f220:	cbnz	w2, 2f228 <PyInit__decimal@@Base+0x12fe8>
   2f224:	cbnz	w0, 2f26c <PyInit__decimal@@Base+0x1302c>
   2f228:	ldr	w0, [x22]
   2f22c:	orr	w1, w0, #0x1000
   2f230:	str	w1, [x22]
   2f234:	cbz	x23, 2f2c4 <PyInit__decimal@@Base+0x13084>
   2f238:	mov	w1, #0x1040                	// #4160
   2f23c:	orr	w0, w0, w1
   2f240:	ldr	x23, [sp, #48]
   2f244:	str	w0, [x22]
   2f248:	ldp	x19, x20, [sp, #16]
   2f24c:	ldp	x21, x22, [sp, #32]
   2f250:	ldp	x29, x30, [sp], #64
   2f254:	ret
   2f258:	cmp	x0, #0x5
   2f25c:	cset	w0, hi  // hi = pmore
   2f260:	cmp	w2, #0x5
   2f264:	b.ne	2f228 <PyInit__decimal@@Base+0x12fe8>  // b.any
   2f268:	cbz	w0, 2f228 <PyInit__decimal@@Base+0x12fe8>
   2f26c:	ldr	x0, [x19, #40]
   2f270:	ldr	x1, [x19, #24]
   2f274:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   2f278:	cbnz	x0, 2f314 <PyInit__decimal@@Base+0x130d4>
   2f27c:	mov	x0, x19
   2f280:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   2f284:	ldr	x0, [x21]
   2f288:	ldr	x1, [x19, #16]
   2f28c:	cmp	x1, x0
   2f290:	b.le	2f228 <PyInit__decimal@@Base+0x12fe8>
   2f294:	mov	x0, x19
   2f298:	mov	x1, #0x1                   	// #1
   2f29c:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   2f2a0:	ldr	x0, [x19, #8]
   2f2a4:	mov	x1, x21
   2f2a8:	ldr	x2, [x21]
   2f2ac:	add	x0, x0, #0x1
   2f2b0:	stp	x0, x2, [x19, #8]
   2f2b4:	mov	x0, x19
   2f2b8:	mov	x2, x22
   2f2bc:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   2f2c0:	b	2f228 <PyInit__decimal@@Base+0x12fe8>
   2f2c4:	ldr	x23, [sp, #48]
   2f2c8:	b	2f164 <PyInit__decimal@@Base+0x12f24>
   2f2cc:	cbz	x0, 2f34c <PyInit__decimal@@Base+0x1310c>
   2f2d0:	ldrb	w0, [x19]
   2f2d4:	mvn	w0, w0
   2f2d8:	and	w0, w0, #0x1
   2f2dc:	cbz	w0, 2f1c8 <PyInit__decimal@@Base+0x12f88>
   2f2e0:	b	2f26c <PyInit__decimal@@Base+0x1302c>
   2f2e4:	cmp	x0, #0x5
   2f2e8:	b.hi	2f26c <PyInit__decimal@@Base+0x1302c>  // b.pmore
   2f2ec:	b.ne	2f228 <PyInit__decimal@@Base+0x12fe8>  // b.any
   2f2f0:	ldr	x0, [x19, #40]
   2f2f4:	ldr	x1, [x0]
   2f2f8:	tbnz	w1, #0, 2f270 <PyInit__decimal@@Base+0x13030>
   2f2fc:	ldr	w0, [x22]
   2f300:	b	2f238 <PyInit__decimal@@Base+0x12ff8>
   2f304:	cmp	x0, #0x4
   2f308:	cset	w0, hi  // hi = pmore
   2f30c:	cbz	w0, 2f228 <PyInit__decimal@@Base+0x12fe8>
   2f310:	b	2f26c <PyInit__decimal@@Base+0x1302c>
   2f314:	ldr	x3, [x19, #24]
   2f318:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2f31c:	ldr	x2, [x19, #40]
   2f320:	mov	x1, x21
   2f324:	ldr	x4, [x0, #528]
   2f328:	mov	x0, x19
   2f32c:	add	x3, x2, x3, lsl #3
   2f330:	mov	x2, x22
   2f334:	stur	x4, [x3, #-8]
   2f338:	ldr	x3, [x19, #8]
   2f33c:	add	x3, x3, #0x1
   2f340:	str	x3, [x19, #8]
   2f344:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   2f348:	b	2f228 <PyInit__decimal@@Base+0x12fe8>
   2f34c:	ldr	w0, [x22]
   2f350:	ldr	x23, [sp, #48]
   2f354:	orr	w0, w0, #0x1000
   2f358:	str	w0, [x22]
   2f35c:	b	2f164 <PyInit__decimal@@Base+0x12f24>
   2f360:	ldrb	w4, [x0]
   2f364:	tst	w4, #0xe
   2f368:	b.eq	2f378 <PyInit__decimal@@Base+0x13138>  // b.none
   2f36c:	tst	w4, #0xc
   2f370:	b.ne	2f37c <PyInit__decimal@@Base+0x1313c>  // b.any
   2f374:	ret
   2f378:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   2f37c:	ldr	w2, [x1, #40]
   2f380:	ldr	x1, [x1]
   2f384:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   2f388:	sub	sp, sp, #0x2a0
   2f38c:	mov	w3, #0x30                  	// #48
   2f390:	add	x2, sp, #0xa0
   2f394:	stp	x29, x30, [sp]
   2f398:	mov	x29, sp
   2f39c:	stp	x19, x20, [sp, #16]
   2f3a0:	mov	x19, x0
   2f3a4:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2f3a8:	strb	w3, [sp, #64]
   2f3ac:	ldr	q0, [x0, #1760]
   2f3b0:	stp	x21, x22, [sp, #32]
   2f3b4:	ldp	x3, x0, [x19, #8]
   2f3b8:	stp	xzr, xzr, [sp, #72]
   2f3bc:	str	x2, [sp, #104]
   2f3c0:	stur	q0, [sp, #88]
   2f3c4:	add	x0, x0, x3
   2f3c8:	sub	x21, x0, #0x1
   2f3cc:	cmp	x21, #0x0
   2f3d0:	b.gt	2f4c4 <PyInit__decimal@@Base+0x13284>
   2f3d4:	cmn	x21, #0x1
   2f3d8:	b.lt	2f4a0 <PyInit__decimal@@Base+0x13260>  // b.tstop
   2f3dc:	add	x22, sp, #0x70
   2f3e0:	mov	x20, x1
   2f3e4:	mov	x0, x22
   2f3e8:	str	x23, [sp, #48]
   2f3ec:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   2f3f0:	ldrb	w1, [x19]
   2f3f4:	tst	w1, #0xe
   2f3f8:	b.ne	2f4ec <PyInit__decimal@@Base+0x132ac>  // b.any
   2f3fc:	mov	x6, x20
   2f400:	add	x5, x22, #0x24
   2f404:	mov	x4, x22
   2f408:	add	x23, sp, #0x40
   2f40c:	mov	w3, #0x1                   	// #1
   2f410:	mov	x1, x19
   2f414:	mov	x0, x23
   2f418:	adrp	x2, 62000 <PyInit__decimal@@Base+0x45dc0>
   2f41c:	add	x2, x2, #0xc58
   2f420:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   2f424:	mov	x2, x20
   2f428:	mov	x1, x22
   2f42c:	mov	x0, x23
   2f430:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   2f434:	ldrb	w0, [sp, #64]
   2f438:	tst	w0, #0xe
   2f43c:	and	w1, w0, #0xe0
   2f440:	b.ne	2f558 <PyInit__decimal@@Base+0x13318>  // b.any
   2f444:	ldp	x19, x2, [sp, #72]
   2f448:	add	x19, x19, x2
   2f44c:	cbnz	w1, 2f464 <PyInit__decimal@@Base+0x13224>
   2f450:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2f454:	ldr	x0, [sp, #104]
   2f458:	ldr	x1, [x1, #1912]
   2f45c:	blr	x1
   2f460:	ldrb	w0, [sp, #64]
   2f464:	tbnz	w0, #4, 2f478 <PyInit__decimal@@Base+0x13238>
   2f468:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2f46c:	mov	x0, x23
   2f470:	ldr	x1, [x1, #1912]
   2f474:	blr	x1
   2f478:	cmp	x21, #0x0
   2f47c:	cinc	x19, x19, ne  // ne = any
   2f480:	sub	x19, x19, #0x3
   2f484:	mov	x0, x19
   2f488:	ldp	x29, x30, [sp]
   2f48c:	ldp	x19, x20, [sp, #16]
   2f490:	ldp	x21, x22, [sp, #32]
   2f494:	ldr	x23, [sp, #48]
   2f498:	add	sp, sp, #0x2a0
   2f49c:	ret
   2f4a0:	bl	2a6f8 <PyInit__decimal@@Base+0xe4b8>
   2f4a4:	sub	w19, w0, #0x1
   2f4a8:	sxtw	x19, w19
   2f4ac:	mov	x0, x19
   2f4b0:	ldp	x29, x30, [sp]
   2f4b4:	ldp	x19, x20, [sp, #16]
   2f4b8:	ldp	x21, x22, [sp, #32]
   2f4bc:	add	sp, sp, #0x2a0
   2f4c0:	ret
   2f4c4:	mov	x0, x21
   2f4c8:	bl	2a6f8 <PyInit__decimal@@Base+0xe4b8>
   2f4cc:	sub	w19, w0, #0x1
   2f4d0:	ldp	x29, x30, [sp]
   2f4d4:	sxtw	x19, w19
   2f4d8:	mov	x0, x19
   2f4dc:	ldp	x19, x20, [sp, #16]
   2f4e0:	ldp	x21, x22, [sp, #32]
   2f4e4:	add	sp, sp, #0x2a0
   2f4e8:	ret
   2f4ec:	tst	w1, #0xc
   2f4f0:	b.ne	2f510 <PyInit__decimal@@Base+0x132d0>  // b.any
   2f4f4:	tbz	w1, #1, 2f5ac <PyInit__decimal@@Base+0x1336c>
   2f4f8:	add	x23, sp, #0x40
   2f4fc:	and	w1, w1, #0x1
   2f500:	mov	x0, x23
   2f504:	mov	w2, #0x2                   	// #2
   2f508:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2f50c:	b	2f434 <PyInit__decimal@@Base+0x131f4>
   2f510:	tbz	w1, #3, 2f598 <PyInit__decimal@@Base+0x13358>
   2f514:	ldr	w0, [x20]
   2f518:	orr	w0, w0, #0x100
   2f51c:	str	w0, [x20]
   2f520:	add	x23, sp, #0x40
   2f524:	mov	x2, x20
   2f528:	mov	x1, x19
   2f52c:	mov	x0, x23
   2f530:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   2f534:	ldrb	w3, [sp, #64]
   2f538:	mov	x0, x23
   2f53c:	ldr	w2, [sp, #152]
   2f540:	and	w3, w3, #0xfffffff1
   2f544:	ldr	x1, [sp, #112]
   2f548:	orr	w3, w3, #0x4
   2f54c:	strb	w3, [sp, #64]
   2f550:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   2f554:	b	2f434 <PyInit__decimal@@Base+0x131f4>
   2f558:	cbnz	w1, 2f570 <PyInit__decimal@@Base+0x13330>
   2f55c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2f560:	ldr	x0, [sp, #104]
   2f564:	ldr	x1, [x1, #1912]
   2f568:	blr	x1
   2f56c:	ldrb	w0, [sp, #64]
   2f570:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   2f574:	tbnz	w0, #4, 2f590 <PyInit__decimal@@Base+0x13350>
   2f578:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   2f57c:	mov	x0, x23
   2f580:	ldr	x1, [x1, #1912]
   2f584:	blr	x1
   2f588:	ldr	x23, [sp, #48]
   2f58c:	b	2f4ac <PyInit__decimal@@Base+0x1326c>
   2f590:	ldr	x23, [sp, #48]
   2f594:	b	2f4ac <PyInit__decimal@@Base+0x1326c>
   2f598:	tst	x1, #0x4
   2f59c:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   2f5a0:	add	x0, x0, #0xc58
   2f5a4:	csel	x19, x0, x19, eq  // eq = none
   2f5a8:	b	2f520 <PyInit__decimal@@Base+0x132e0>
   2f5ac:	add	x23, sp, #0x40
   2f5b0:	mov	w2, #0x2                   	// #2
   2f5b4:	mov	x0, x23
   2f5b8:	mov	w1, #0x1                   	// #1
   2f5bc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   2f5c0:	b	2f434 <PyInit__decimal@@Base+0x131f4>
   2f5c4:	nop
   2f5c8:	stp	x29, x30, [sp, #-80]!
   2f5cc:	mov	x29, sp
   2f5d0:	stp	x19, x20, [sp, #16]
   2f5d4:	mov	x19, x0
   2f5d8:	sxtw	x20, w1
   2f5dc:	stp	x21, x22, [sp, #32]
   2f5e0:	mov	x22, x2
   2f5e4:	mov	x21, x3
   2f5e8:	ldrb	w4, [x0]
   2f5ec:	ldr	x0, [x0, #40]
   2f5f0:	tbnz	w4, #5, 2f610 <PyInit__decimal@@Base+0x133d0>
   2f5f4:	ldr	x2, [x19, #32]
   2f5f8:	str	x23, [sp, #48]
   2f5fc:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   2f600:	ldr	x1, [x23, #1880]
   2f604:	cmp	x2, x1
   2f608:	b.gt	2f770 <PyInit__decimal@@Base+0x13530>
   2f60c:	ldr	x23, [sp, #48]
   2f610:	mov	x1, x20
   2f614:	mov	w5, #0x0                   	// #0
   2f618:	tbnz	x20, #63, 2f738 <PyInit__decimal@@Base+0x134f8>
   2f61c:	and	w4, w4, #0xfffffff0
   2f620:	str	xzr, [x19, #8]
   2f624:	orr	w4, w5, w4
   2f628:	strb	w4, [x19]
   2f62c:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2f630:	add	x4, x4, #0x180
   2f634:	stp	x1, xzr, [x0]
   2f638:	mov	x1, #0x1                   	// #1
   2f63c:	str	x1, [x19, #24]
   2f640:	ldr	x1, [x4, #72]
   2f644:	ldr	x0, [x0]
   2f648:	cmp	x0, x1
   2f64c:	b.cs	2f6d8 <PyInit__decimal@@Base+0x13498>  // b.hs, b.nlast
   2f650:	ldr	x1, [x4, #32]
   2f654:	cmp	x0, x1
   2f658:	b.cs	2f6a8 <PyInit__decimal@@Base+0x13468>  // b.hs, b.nlast
   2f65c:	ldr	x1, [x4, #16]
   2f660:	cmp	x0, x1
   2f664:	b.cs	2f7b4 <PyInit__decimal@@Base+0x13574>  // b.hs, b.nlast
   2f668:	ldr	x1, [x4, #8]
   2f66c:	cmp	x0, x1
   2f670:	ldrb	w0, [x19]
   2f674:	cset	x1, cs  // cs = hs, nlast
   2f678:	add	x1, x1, #0x1
   2f67c:	str	x1, [x19, #16]
   2f680:	tst	w0, #0xe
   2f684:	b.ne	2f720 <PyInit__decimal@@Base+0x134e0>  // b.any
   2f688:	mov	x2, x21
   2f68c:	mov	x1, x22
   2f690:	mov	x0, x19
   2f694:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   2f698:	ldp	x19, x20, [sp, #16]
   2f69c:	ldp	x21, x22, [sp, #32]
   2f6a0:	ldp	x29, x30, [sp], #80
   2f6a4:	ret
   2f6a8:	ldr	x1, [x4, #48]
   2f6ac:	cmp	x0, x1
   2f6b0:	b.cc	2f7dc <PyInit__decimal@@Base+0x1359c>  // b.lo, b.ul, b.last
   2f6b4:	ldr	x2, [x4, #64]
   2f6b8:	mov	x1, #0x9                   	// #9
   2f6bc:	cmp	x0, x2
   2f6c0:	b.cs	2f710 <PyInit__decimal@@Base+0x134d0>  // b.hs, b.nlast
   2f6c4:	ldr	x1, [x4, #56]
   2f6c8:	cmp	x0, x1
   2f6cc:	cset	x1, cs  // cs = hs, nlast
   2f6d0:	add	x1, x1, #0x7
   2f6d4:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f6d8:	ldr	x1, [x4, #112]
   2f6dc:	cmp	x0, x1
   2f6e0:	b.cs	2f744 <PyInit__decimal@@Base+0x13504>  // b.hs, b.nlast
   2f6e4:	ldr	x1, [x4, #88]
   2f6e8:	cmp	x0, x1
   2f6ec:	b.cc	2f7c8 <PyInit__decimal@@Base+0x13588>  // b.lo, b.ul, b.last
   2f6f0:	ldr	x2, [x4, #104]
   2f6f4:	mov	x1, #0xe                   	// #14
   2f6f8:	cmp	x0, x2
   2f6fc:	b.cs	2f710 <PyInit__decimal@@Base+0x134d0>  // b.hs, b.nlast
   2f700:	ldr	x1, [x4, #96]
   2f704:	cmp	x0, x1
   2f708:	cset	x1, cs  // cs = hs, nlast
   2f70c:	add	x1, x1, #0xc
   2f710:	ldrb	w0, [x19]
   2f714:	str	x1, [x19, #16]
   2f718:	tst	w0, #0xe
   2f71c:	b.eq	2f688 <PyInit__decimal@@Base+0x13448>  // b.none
   2f720:	tst	w0, #0xc
   2f724:	b.ne	2f7f0 <PyInit__decimal@@Base+0x135b0>  // b.any
   2f728:	ldp	x19, x20, [sp, #16]
   2f72c:	ldp	x21, x22, [sp, #32]
   2f730:	ldp	x29, x30, [sp], #80
   2f734:	ret
   2f738:	neg	x1, x20
   2f73c:	mov	w5, #0x1                   	// #1
   2f740:	b	2f61c <PyInit__decimal@@Base+0x133dc>
   2f744:	ldr	x1, [x4, #144]
   2f748:	cmp	x0, x1
   2f74c:	b.cs	2f7a0 <PyInit__decimal@@Base+0x13560>  // b.hs, b.nlast
   2f750:	ldr	x1, [x4, #128]
   2f754:	cmp	x0, x1
   2f758:	b.cs	2f810 <PyInit__decimal@@Base+0x135d0>  // b.hs, b.nlast
   2f75c:	ldr	x1, [x4, #120]
   2f760:	cmp	x0, x1
   2f764:	cset	x1, cs  // cs = hs, nlast
   2f768:	add	x1, x1, #0xf
   2f76c:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f770:	add	x3, sp, #0x4f
   2f774:	mov	x2, #0x8                   	// #8
   2f778:	strb	wzr, [sp, #79]
   2f77c:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   2f780:	ldrb	w1, [sp, #79]
   2f784:	str	x0, [x19, #40]
   2f788:	cbnz	w1, 2f794 <PyInit__decimal@@Base+0x13554>
   2f78c:	ldr	x1, [x23, #1880]
   2f790:	str	x1, [x19, #32]
   2f794:	ldrb	w4, [x19]
   2f798:	ldr	x23, [sp, #48]
   2f79c:	b	2f610 <PyInit__decimal@@Base+0x133d0>
   2f7a0:	ldr	x1, [x4, #152]
   2f7a4:	cmp	x0, x1
   2f7a8:	cset	x1, cs  // cs = hs, nlast
   2f7ac:	add	x1, x1, #0x13
   2f7b0:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f7b4:	ldr	x1, [x4, #24]
   2f7b8:	cmp	x0, x1
   2f7bc:	cset	x1, cs  // cs = hs, nlast
   2f7c0:	add	x1, x1, #0x3
   2f7c4:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f7c8:	ldr	x1, [x4, #80]
   2f7cc:	cmp	x0, x1
   2f7d0:	cset	x1, cs  // cs = hs, nlast
   2f7d4:	add	x1, x1, #0xa
   2f7d8:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f7dc:	ldr	x1, [x4, #40]
   2f7e0:	cmp	x0, x1
   2f7e4:	cset	x1, cs  // cs = hs, nlast
   2f7e8:	add	x1, x1, #0x5
   2f7ec:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f7f0:	ldr	w2, [x22, #40]
   2f7f4:	mov	x0, x19
   2f7f8:	ldr	x1, [x22]
   2f7fc:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   2f800:	ldp	x19, x20, [sp, #16]
   2f804:	ldp	x21, x22, [sp, #32]
   2f808:	ldp	x29, x30, [sp], #80
   2f80c:	ret
   2f810:	ldr	x1, [x4, #136]
   2f814:	cmp	x0, x1
   2f818:	cset	x1, cs  // cs = hs, nlast
   2f81c:	add	x1, x1, #0x11
   2f820:	b	2f710 <PyInit__decimal@@Base+0x134d0>
   2f824:	nop
   2f828:	mov	x6, #0x89e80000            	// #2313682944
   2f82c:	ldrb	w8, [x0]
   2f830:	movk	x6, #0x2304, lsl #32
   2f834:	str	xzr, [x0, #8]
   2f838:	movk	x6, #0x8ac7, lsl #48
   2f83c:	cmp	x1, x6
   2f840:	cset	x5, cs  // cs = hs, nlast
   2f844:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2f848:	ldr	x7, [x0, #40]
   2f84c:	add	x9, x5, #0x1
   2f850:	msub	x6, x5, x6, x1
   2f854:	and	w1, w8, #0xfffffff0
   2f858:	strb	w1, [x0]
   2f85c:	add	x4, x4, #0x180
   2f860:	add	x8, x7, x9, lsl #3
   2f864:	stp	x6, x5, [x7]
   2f868:	str	x9, [x0, #24]
   2f86c:	mov	x9, x2
   2f870:	ldr	x7, [x4, #72]
   2f874:	ldur	x6, [x8, #-8]
   2f878:	cmp	x6, x7
   2f87c:	b.cs	2f904 <PyInit__decimal@@Base+0x136c4>  // b.hs, b.nlast
   2f880:	ldr	x1, [x4, #32]
   2f884:	cmp	x6, x1
   2f888:	b.cs	2f8d4 <PyInit__decimal@@Base+0x13694>  // b.hs, b.nlast
   2f88c:	ldr	x1, [x4, #16]
   2f890:	cmp	x6, x1
   2f894:	b.cs	2f998 <PyInit__decimal@@Base+0x13758>  // b.hs, b.nlast
   2f898:	ldr	x1, [x4, #8]
   2f89c:	ldrb	w4, [x0]
   2f8a0:	cmp	x6, x1
   2f8a4:	lsl	x1, x5, #2
   2f8a8:	cset	x7, cs  // cs = hs, nlast
   2f8ac:	add	x1, x1, x5
   2f8b0:	add	x7, x7, #0x1
   2f8b4:	tst	w4, #0xe
   2f8b8:	add	x1, x7, x1, lsl #2
   2f8bc:	sub	x1, x1, x5
   2f8c0:	str	x1, [x0, #16]
   2f8c4:	b.ne	2f960 <PyInit__decimal@@Base+0x13720>  // b.any
   2f8c8:	mov	x2, x3
   2f8cc:	mov	x1, x9
   2f8d0:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   2f8d4:	ldr	x1, [x4, #48]
   2f8d8:	cmp	x6, x1
   2f8dc:	b.cc	2f9d4 <PyInit__decimal@@Base+0x13794>  // b.lo, b.ul, b.last
   2f8e0:	ldr	x1, [x4, #64]
   2f8e4:	mov	x7, #0x9                   	// #9
   2f8e8:	cmp	x6, x1
   2f8ec:	b.cs	2f940 <PyInit__decimal@@Base+0x13700>  // b.hs, b.nlast
   2f8f0:	ldr	x1, [x4, #56]
   2f8f4:	cmp	x6, x1
   2f8f8:	cset	x7, cs  // cs = hs, nlast
   2f8fc:	add	x7, x7, #0x7
   2f900:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2f904:	ldr	x1, [x4, #112]
   2f908:	cmp	x6, x1
   2f90c:	b.cs	2f96c <PyInit__decimal@@Base+0x1372c>  // b.hs, b.nlast
   2f910:	ldr	x1, [x4, #88]
   2f914:	cmp	x6, x1
   2f918:	b.cc	2f9c0 <PyInit__decimal@@Base+0x13780>  // b.lo, b.ul, b.last
   2f91c:	ldr	x1, [x4, #104]
   2f920:	mov	x7, #0xe                   	// #14
   2f924:	cmp	x6, x1
   2f928:	b.cs	2f940 <PyInit__decimal@@Base+0x13700>  // b.hs, b.nlast
   2f92c:	ldr	x1, [x4, #96]
   2f930:	cmp	x6, x1
   2f934:	cset	x7, cs  // cs = hs, nlast
   2f938:	add	x7, x7, #0xc
   2f93c:	nop
   2f940:	lsl	x1, x5, #2
   2f944:	ldrb	w4, [x0]
   2f948:	add	x1, x1, x5
   2f94c:	tst	w4, #0xe
   2f950:	add	x1, x7, x1, lsl #2
   2f954:	sub	x1, x1, x5
   2f958:	str	x1, [x0, #16]
   2f95c:	b.eq	2f8c8 <PyInit__decimal@@Base+0x13688>  // b.none
   2f960:	tst	w4, #0xc
   2f964:	b.ne	2f9e8 <PyInit__decimal@@Base+0x137a8>  // b.any
   2f968:	ret
   2f96c:	ldr	x1, [x4, #144]
   2f970:	cmp	x6, x1
   2f974:	b.cs	2f9ac <PyInit__decimal@@Base+0x1376c>  // b.hs, b.nlast
   2f978:	ldr	x1, [x4, #128]
   2f97c:	cmp	x6, x1
   2f980:	b.cs	2f9f4 <PyInit__decimal@@Base+0x137b4>  // b.hs, b.nlast
   2f984:	ldr	x1, [x4, #120]
   2f988:	cmp	x6, x1
   2f98c:	cset	x7, cs  // cs = hs, nlast
   2f990:	add	x7, x7, #0xf
   2f994:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2f998:	ldr	x1, [x4, #24]
   2f99c:	cmp	x6, x1
   2f9a0:	cset	x7, cs  // cs = hs, nlast
   2f9a4:	add	x7, x7, #0x3
   2f9a8:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2f9ac:	ldr	x1, [x4, #152]
   2f9b0:	cmp	x6, x1
   2f9b4:	cset	x7, cs  // cs = hs, nlast
   2f9b8:	add	x7, x7, #0x13
   2f9bc:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2f9c0:	ldr	x1, [x4, #80]
   2f9c4:	cmp	x6, x1
   2f9c8:	cset	x7, cs  // cs = hs, nlast
   2f9cc:	add	x7, x7, #0xa
   2f9d0:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2f9d4:	ldr	x1, [x4, #40]
   2f9d8:	cmp	x6, x1
   2f9dc:	cset	x7, cs  // cs = hs, nlast
   2f9e0:	add	x7, x7, #0x5
   2f9e4:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2f9e8:	ldr	w2, [x9, #40]
   2f9ec:	ldr	x1, [x9]
   2f9f0:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   2f9f4:	ldr	x1, [x4, #136]
   2f9f8:	cmp	x6, x1
   2f9fc:	cset	x7, cs  // cs = hs, nlast
   2fa00:	add	x7, x7, #0x11
   2fa04:	b	2f940 <PyInit__decimal@@Base+0x13700>
   2fa08:	ldr	x5, [x0, #40]
   2fa0c:	str	xzr, [x0, #8]
   2fa10:	ldrb	w7, [x0]
   2fa14:	mov	w6, w1
   2fa18:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2fa1c:	add	x4, x4, #0x180
   2fa20:	and	w7, w7, #0xfffffff0
   2fa24:	strb	w7, [x0]
   2fa28:	stp	x6, xzr, [x5]
   2fa2c:	mov	x9, #0x1                   	// #1
   2fa30:	mov	x7, x2
   2fa34:	str	x9, [x0, #24]
   2fa38:	ldr	x8, [x4, #72]
   2fa3c:	ldr	x1, [x5]
   2fa40:	cmp	x1, x8
   2fa44:	b.cs	2fabc <PyInit__decimal@@Base+0x1387c>  // b.hs, b.nlast
   2fa48:	ldr	x2, [x4, #32]
   2fa4c:	cmp	x1, x2
   2fa50:	b.cs	2fa8c <PyInit__decimal@@Base+0x1384c>  // b.hs, b.nlast
   2fa54:	ldr	x2, [x4, #16]
   2fa58:	cmp	x1, x2
   2fa5c:	b.cs	2fb40 <PyInit__decimal@@Base+0x13900>  // b.hs, b.nlast
   2fa60:	ldr	x2, [x4, #8]
   2fa64:	cmp	x1, x2
   2fa68:	ldrb	w1, [x0]
   2fa6c:	cset	x5, cs  // cs = hs, nlast
   2fa70:	add	x5, x5, x9
   2fa74:	str	x5, [x0, #16]
   2fa78:	tst	w1, #0xe
   2fa7c:	b.ne	2fb08 <PyInit__decimal@@Base+0x138c8>  // b.any
   2fa80:	mov	x2, x3
   2fa84:	mov	x1, x7
   2fa88:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   2fa8c:	ldr	x2, [x4, #48]
   2fa90:	cmp	x1, x2
   2fa94:	b.cc	2fb7c <PyInit__decimal@@Base+0x1393c>  // b.lo, b.ul, b.last
   2fa98:	ldr	x2, [x4, #64]
   2fa9c:	mov	x5, #0x9                   	// #9
   2faa0:	cmp	x1, x2
   2faa4:	b.cs	2faf8 <PyInit__decimal@@Base+0x138b8>  // b.hs, b.nlast
   2faa8:	ldr	x2, [x4, #56]
   2faac:	cmp	x1, x2
   2fab0:	cset	x5, cs  // cs = hs, nlast
   2fab4:	add	x5, x5, #0x7
   2fab8:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fabc:	ldr	x2, [x4, #112]
   2fac0:	cmp	x1, x2
   2fac4:	b.cs	2fb14 <PyInit__decimal@@Base+0x138d4>  // b.hs, b.nlast
   2fac8:	ldr	x2, [x4, #88]
   2facc:	cmp	x1, x2
   2fad0:	b.cc	2fb68 <PyInit__decimal@@Base+0x13928>  // b.lo, b.ul, b.last
   2fad4:	ldr	x2, [x4, #104]
   2fad8:	mov	x5, #0xe                   	// #14
   2fadc:	cmp	x1, x2
   2fae0:	b.cs	2faf8 <PyInit__decimal@@Base+0x138b8>  // b.hs, b.nlast
   2fae4:	ldr	x2, [x4, #96]
   2fae8:	cmp	x1, x2
   2faec:	cset	x5, cs  // cs = hs, nlast
   2faf0:	add	x5, x5, #0xc
   2faf4:	nop
   2faf8:	ldrb	w1, [x0]
   2fafc:	str	x5, [x0, #16]
   2fb00:	tst	w1, #0xe
   2fb04:	b.eq	2fa80 <PyInit__decimal@@Base+0x13840>  // b.none
   2fb08:	tst	w1, #0xc
   2fb0c:	b.ne	2fb90 <PyInit__decimal@@Base+0x13950>  // b.any
   2fb10:	ret
   2fb14:	ldr	x2, [x4, #144]
   2fb18:	cmp	x1, x2
   2fb1c:	b.cs	2fb54 <PyInit__decimal@@Base+0x13914>  // b.hs, b.nlast
   2fb20:	ldr	x2, [x4, #128]
   2fb24:	cmp	x1, x2
   2fb28:	b.cs	2fb9c <PyInit__decimal@@Base+0x1395c>  // b.hs, b.nlast
   2fb2c:	ldr	x2, [x4, #120]
   2fb30:	cmp	x1, x2
   2fb34:	cset	x5, cs  // cs = hs, nlast
   2fb38:	add	x5, x5, #0xf
   2fb3c:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fb40:	ldr	x2, [x4, #24]
   2fb44:	cmp	x1, x2
   2fb48:	cset	x5, cs  // cs = hs, nlast
   2fb4c:	add	x5, x5, #0x3
   2fb50:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fb54:	ldr	x2, [x4, #152]
   2fb58:	cmp	x1, x2
   2fb5c:	cset	x5, cs  // cs = hs, nlast
   2fb60:	add	x5, x5, #0x13
   2fb64:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fb68:	ldr	x2, [x4, #80]
   2fb6c:	cmp	x1, x2
   2fb70:	cset	x5, cs  // cs = hs, nlast
   2fb74:	add	x5, x5, #0xa
   2fb78:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fb7c:	ldr	x2, [x4, #40]
   2fb80:	cmp	x1, x2
   2fb84:	cset	x5, cs  // cs = hs, nlast
   2fb88:	add	x5, x5, #0x5
   2fb8c:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fb90:	ldr	w2, [x7, #40]
   2fb94:	ldr	x1, [x7]
   2fb98:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   2fb9c:	ldr	x2, [x4, #136]
   2fba0:	cmp	x1, x2
   2fba4:	cset	x5, cs  // cs = hs, nlast
   2fba8:	add	x5, x5, #0x11
   2fbac:	b	2faf8 <PyInit__decimal@@Base+0x138b8>
   2fbb0:	mov	x8, x2
   2fbb4:	mov	w5, #0x0                   	// #0
   2fbb8:	tbnz	x1, #63, 2fcc4 <PyInit__decimal@@Base+0x13a84>
   2fbbc:	ldrb	w7, [x0]
   2fbc0:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2fbc4:	ldr	x6, [x0, #40]
   2fbc8:	and	w7, w7, #0xfffffff0
   2fbcc:	orr	w5, w5, w7
   2fbd0:	strb	w5, [x0]
   2fbd4:	str	xzr, [x0, #8]
   2fbd8:	add	x4, x4, #0x180
   2fbdc:	stp	x1, xzr, [x6]
   2fbe0:	mov	x1, #0x1                   	// #1
   2fbe4:	str	x1, [x0, #24]
   2fbe8:	ldr	x5, [x4, #72]
   2fbec:	ldr	x1, [x6]
   2fbf0:	cmp	x1, x5
   2fbf4:	b.cs	2fc6c <PyInit__decimal@@Base+0x13a2c>  // b.hs, b.nlast
   2fbf8:	ldr	x2, [x4, #32]
   2fbfc:	cmp	x1, x2
   2fc00:	b.cs	2fc3c <PyInit__decimal@@Base+0x139fc>  // b.hs, b.nlast
   2fc04:	ldr	x2, [x4, #16]
   2fc08:	cmp	x1, x2
   2fc0c:	b.cs	2fd08 <PyInit__decimal@@Base+0x13ac8>  // b.hs, b.nlast
   2fc10:	ldr	x2, [x4, #8]
   2fc14:	cmp	x1, x2
   2fc18:	ldrb	w1, [x0]
   2fc1c:	cset	x5, cs  // cs = hs, nlast
   2fc20:	add	x5, x5, #0x1
   2fc24:	str	x5, [x0, #16]
   2fc28:	tst	w1, #0xe
   2fc2c:	b.ne	2fcb8 <PyInit__decimal@@Base+0x13a78>  // b.any
   2fc30:	mov	x2, x3
   2fc34:	mov	x1, x8
   2fc38:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   2fc3c:	ldr	x2, [x4, #48]
   2fc40:	cmp	x1, x2
   2fc44:	b.cc	2fd44 <PyInit__decimal@@Base+0x13b04>  // b.lo, b.ul, b.last
   2fc48:	ldr	x2, [x4, #64]
   2fc4c:	mov	x5, #0x9                   	// #9
   2fc50:	cmp	x1, x2
   2fc54:	b.cs	2fca8 <PyInit__decimal@@Base+0x13a68>  // b.hs, b.nlast
   2fc58:	ldr	x2, [x4, #56]
   2fc5c:	cmp	x1, x2
   2fc60:	cset	x5, cs  // cs = hs, nlast
   2fc64:	add	x5, x5, #0x7
   2fc68:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fc6c:	ldr	x2, [x4, #112]
   2fc70:	cmp	x1, x2
   2fc74:	b.cs	2fcdc <PyInit__decimal@@Base+0x13a9c>  // b.hs, b.nlast
   2fc78:	ldr	x2, [x4, #88]
   2fc7c:	cmp	x1, x2
   2fc80:	b.cc	2fd30 <PyInit__decimal@@Base+0x13af0>  // b.lo, b.ul, b.last
   2fc84:	ldr	x2, [x4, #104]
   2fc88:	mov	x5, #0xe                   	// #14
   2fc8c:	cmp	x1, x2
   2fc90:	b.cs	2fca8 <PyInit__decimal@@Base+0x13a68>  // b.hs, b.nlast
   2fc94:	ldr	x2, [x4, #96]
   2fc98:	cmp	x1, x2
   2fc9c:	cset	x5, cs  // cs = hs, nlast
   2fca0:	add	x5, x5, #0xc
   2fca4:	nop
   2fca8:	ldrb	w1, [x0]
   2fcac:	str	x5, [x0, #16]
   2fcb0:	tst	w1, #0xe
   2fcb4:	b.eq	2fc30 <PyInit__decimal@@Base+0x139f0>  // b.none
   2fcb8:	tst	w1, #0xc
   2fcbc:	b.ne	2fd58 <PyInit__decimal@@Base+0x13b18>  // b.any
   2fcc0:	ret
   2fcc4:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   2fcc8:	mov	w5, #0x1                   	// #1
   2fccc:	cmp	x1, x2
   2fcd0:	b.eq	2fbbc <PyInit__decimal@@Base+0x1397c>  // b.none
   2fcd4:	neg	x1, x1
   2fcd8:	b	2fbbc <PyInit__decimal@@Base+0x1397c>
   2fcdc:	ldr	x2, [x4, #144]
   2fce0:	cmp	x1, x2
   2fce4:	b.cs	2fd1c <PyInit__decimal@@Base+0x13adc>  // b.hs, b.nlast
   2fce8:	ldr	x2, [x4, #128]
   2fcec:	cmp	x1, x2
   2fcf0:	b.cs	2fd64 <PyInit__decimal@@Base+0x13b24>  // b.hs, b.nlast
   2fcf4:	ldr	x2, [x4, #120]
   2fcf8:	cmp	x1, x2
   2fcfc:	cset	x5, cs  // cs = hs, nlast
   2fd00:	add	x5, x5, #0xf
   2fd04:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fd08:	ldr	x2, [x4, #24]
   2fd0c:	cmp	x1, x2
   2fd10:	cset	x5, cs  // cs = hs, nlast
   2fd14:	add	x5, x5, #0x3
   2fd18:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fd1c:	ldr	x2, [x4, #152]
   2fd20:	cmp	x1, x2
   2fd24:	cset	x5, cs  // cs = hs, nlast
   2fd28:	add	x5, x5, #0x13
   2fd2c:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fd30:	ldr	x2, [x4, #80]
   2fd34:	cmp	x1, x2
   2fd38:	cset	x5, cs  // cs = hs, nlast
   2fd3c:	add	x5, x5, #0xa
   2fd40:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fd44:	ldr	x2, [x4, #40]
   2fd48:	cmp	x1, x2
   2fd4c:	cset	x5, cs  // cs = hs, nlast
   2fd50:	add	x5, x5, #0x5
   2fd54:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fd58:	ldr	w2, [x8, #40]
   2fd5c:	ldr	x1, [x8]
   2fd60:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   2fd64:	ldr	x2, [x4, #136]
   2fd68:	cmp	x1, x2
   2fd6c:	cset	x5, cs  // cs = hs, nlast
   2fd70:	add	x5, x5, #0x11
   2fd74:	b	2fca8 <PyInit__decimal@@Base+0x13a68>
   2fd78:	mov	x8, x2
   2fd7c:	sxtw	x7, w1
   2fd80:	mov	w4, #0x0                   	// #0
   2fd84:	tbnz	w1, #31, 2fe8c <PyInit__decimal@@Base+0x13c4c>
   2fd88:	ldrb	w6, [x0]
   2fd8c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2fd90:	ldr	x5, [x0, #40]
   2fd94:	and	w6, w6, #0xfffffff0
   2fd98:	orr	w4, w4, w6
   2fd9c:	strb	w4, [x0]
   2fda0:	str	xzr, [x0, #8]
   2fda4:	add	x1, x1, #0x180
   2fda8:	stp	x7, xzr, [x5]
   2fdac:	mov	x4, #0x1                   	// #1
   2fdb0:	str	x4, [x0, #24]
   2fdb4:	ldr	x6, [x1, #72]
   2fdb8:	ldr	x4, [x5]
   2fdbc:	cmp	x4, x6
   2fdc0:	b.cs	2fe38 <PyInit__decimal@@Base+0x13bf8>  // b.hs, b.nlast
   2fdc4:	ldr	x2, [x1, #32]
   2fdc8:	cmp	x4, x2
   2fdcc:	b.cs	2fe08 <PyInit__decimal@@Base+0x13bc8>  // b.hs, b.nlast
   2fdd0:	ldr	x2, [x1, #16]
   2fdd4:	cmp	x4, x2
   2fdd8:	b.cs	2fec4 <PyInit__decimal@@Base+0x13c84>  // b.hs, b.nlast
   2fddc:	ldr	x1, [x1, #8]
   2fde0:	cmp	x4, x1
   2fde4:	ldrb	w1, [x0]
   2fde8:	cset	x5, cs  // cs = hs, nlast
   2fdec:	add	x5, x5, #0x1
   2fdf0:	str	x5, [x0, #16]
   2fdf4:	tst	w1, #0xe
   2fdf8:	b.ne	2fe80 <PyInit__decimal@@Base+0x13c40>  // b.any
   2fdfc:	mov	x2, x3
   2fe00:	mov	x1, x8
   2fe04:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   2fe08:	ldr	x2, [x1, #48]
   2fe0c:	cmp	x4, x2
   2fe10:	b.cc	2ff00 <PyInit__decimal@@Base+0x13cc0>  // b.lo, b.ul, b.last
   2fe14:	ldr	x2, [x1, #64]
   2fe18:	mov	x5, #0x9                   	// #9
   2fe1c:	cmp	x4, x2
   2fe20:	b.cs	2fe70 <PyInit__decimal@@Base+0x13c30>  // b.hs, b.nlast
   2fe24:	ldr	x1, [x1, #56]
   2fe28:	cmp	x4, x1
   2fe2c:	cset	x5, cs  // cs = hs, nlast
   2fe30:	add	x5, x5, #0x7
   2fe34:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2fe38:	ldr	x2, [x1, #112]
   2fe3c:	cmp	x4, x2
   2fe40:	b.cs	2fe98 <PyInit__decimal@@Base+0x13c58>  // b.hs, b.nlast
   2fe44:	ldr	x2, [x1, #88]
   2fe48:	cmp	x4, x2
   2fe4c:	b.cc	2feec <PyInit__decimal@@Base+0x13cac>  // b.lo, b.ul, b.last
   2fe50:	ldr	x2, [x1, #104]
   2fe54:	mov	x5, #0xe                   	// #14
   2fe58:	cmp	x4, x2
   2fe5c:	b.cs	2fe70 <PyInit__decimal@@Base+0x13c30>  // b.hs, b.nlast
   2fe60:	ldr	x1, [x1, #96]
   2fe64:	cmp	x4, x1
   2fe68:	cset	x5, cs  // cs = hs, nlast
   2fe6c:	add	x5, x5, #0xc
   2fe70:	ldrb	w1, [x0]
   2fe74:	str	x5, [x0, #16]
   2fe78:	tst	w1, #0xe
   2fe7c:	b.eq	2fdfc <PyInit__decimal@@Base+0x13bbc>  // b.none
   2fe80:	tst	w1, #0xc
   2fe84:	b.ne	2ff14 <PyInit__decimal@@Base+0x13cd4>  // b.any
   2fe88:	ret
   2fe8c:	neg	x7, x7
   2fe90:	mov	w4, #0x1                   	// #1
   2fe94:	b	2fd88 <PyInit__decimal@@Base+0x13b48>
   2fe98:	ldr	x2, [x1, #144]
   2fe9c:	cmp	x4, x2
   2fea0:	b.cs	2fed8 <PyInit__decimal@@Base+0x13c98>  // b.hs, b.nlast
   2fea4:	ldr	x2, [x1, #128]
   2fea8:	cmp	x4, x2
   2feac:	b.cs	2ff20 <PyInit__decimal@@Base+0x13ce0>  // b.hs, b.nlast
   2feb0:	ldr	x1, [x1, #120]
   2feb4:	cmp	x4, x1
   2feb8:	cset	x5, cs  // cs = hs, nlast
   2febc:	add	x5, x5, #0xf
   2fec0:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2fec4:	ldr	x1, [x1, #24]
   2fec8:	cmp	x4, x1
   2fecc:	cset	x5, cs  // cs = hs, nlast
   2fed0:	add	x5, x5, #0x3
   2fed4:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2fed8:	ldr	x1, [x1, #152]
   2fedc:	cmp	x4, x1
   2fee0:	cset	x5, cs  // cs = hs, nlast
   2fee4:	add	x5, x5, #0x13
   2fee8:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2feec:	ldr	x1, [x1, #80]
   2fef0:	cmp	x4, x1
   2fef4:	cset	x5, cs  // cs = hs, nlast
   2fef8:	add	x5, x5, #0xa
   2fefc:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2ff00:	ldr	x1, [x1, #40]
   2ff04:	cmp	x4, x1
   2ff08:	cset	x5, cs  // cs = hs, nlast
   2ff0c:	add	x5, x5, #0x5
   2ff10:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2ff14:	ldr	w2, [x8, #40]
   2ff18:	ldr	x1, [x8]
   2ff1c:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   2ff20:	ldr	x1, [x1, #136]
   2ff24:	cmp	x4, x1
   2ff28:	cset	x5, cs  // cs = hs, nlast
   2ff2c:	add	x5, x5, #0x11
   2ff30:	b	2fe70 <PyInit__decimal@@Base+0x13c30>
   2ff34:	nop
   2ff38:	stp	x29, x30, [sp, #-80]!
   2ff3c:	mov	x29, sp
   2ff40:	stp	x19, x20, [sp, #16]
   2ff44:	mov	x19, x0
   2ff48:	mov	x20, x1
   2ff4c:	stp	x21, x22, [sp, #32]
   2ff50:	mov	x22, x2
   2ff54:	mov	x21, x3
   2ff58:	ldrb	w4, [x0]
   2ff5c:	ldr	x0, [x0, #40]
   2ff60:	tbnz	w4, #5, 2ff80 <PyInit__decimal@@Base+0x13d40>
   2ff64:	ldr	x2, [x19, #32]
   2ff68:	str	x23, [sp, #48]
   2ff6c:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   2ff70:	ldr	x1, [x23, #1880]
   2ff74:	cmp	x2, x1
   2ff78:	b.gt	300ec <PyInit__decimal@@Base+0x13eac>
   2ff7c:	ldr	x23, [sp, #48]
   2ff80:	mov	x1, x20
   2ff84:	mov	w5, #0x0                   	// #0
   2ff88:	tbnz	x20, #63, 300a8 <PyInit__decimal@@Base+0x13e68>
   2ff8c:	and	w4, w4, #0xfffffff0
   2ff90:	str	xzr, [x19, #8]
   2ff94:	orr	w4, w5, w4
   2ff98:	strb	w4, [x19]
   2ff9c:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   2ffa0:	add	x4, x4, #0x180
   2ffa4:	stp	x1, xzr, [x0]
   2ffa8:	mov	x1, #0x1                   	// #1
   2ffac:	str	x1, [x19, #24]
   2ffb0:	ldr	x1, [x4, #72]
   2ffb4:	ldr	x0, [x0]
   2ffb8:	cmp	x0, x1
   2ffbc:	b.cs	30048 <PyInit__decimal@@Base+0x13e08>  // b.hs, b.nlast
   2ffc0:	ldr	x1, [x4, #32]
   2ffc4:	cmp	x0, x1
   2ffc8:	b.cs	30018 <PyInit__decimal@@Base+0x13dd8>  // b.hs, b.nlast
   2ffcc:	ldr	x1, [x4, #16]
   2ffd0:	cmp	x0, x1
   2ffd4:	b.cs	30130 <PyInit__decimal@@Base+0x13ef0>  // b.hs, b.nlast
   2ffd8:	ldr	x1, [x4, #8]
   2ffdc:	cmp	x0, x1
   2ffe0:	ldrb	w0, [x19]
   2ffe4:	cset	x1, cs  // cs = hs, nlast
   2ffe8:	add	x1, x1, #0x1
   2ffec:	str	x1, [x19, #16]
   2fff0:	tst	w0, #0xe
   2fff4:	b.ne	30090 <PyInit__decimal@@Base+0x13e50>  // b.any
   2fff8:	mov	x2, x21
   2fffc:	mov	x1, x22
   30000:	mov	x0, x19
   30004:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   30008:	ldp	x19, x20, [sp, #16]
   3000c:	ldp	x21, x22, [sp, #32]
   30010:	ldp	x29, x30, [sp], #80
   30014:	ret
   30018:	ldr	x1, [x4, #48]
   3001c:	cmp	x0, x1
   30020:	b.cc	30158 <PyInit__decimal@@Base+0x13f18>  // b.lo, b.ul, b.last
   30024:	ldr	x2, [x4, #64]
   30028:	mov	x1, #0x9                   	// #9
   3002c:	cmp	x0, x2
   30030:	b.cs	30080 <PyInit__decimal@@Base+0x13e40>  // b.hs, b.nlast
   30034:	ldr	x1, [x4, #56]
   30038:	cmp	x0, x1
   3003c:	cset	x1, cs  // cs = hs, nlast
   30040:	add	x1, x1, #0x7
   30044:	b	30080 <PyInit__decimal@@Base+0x13e40>
   30048:	ldr	x1, [x4, #112]
   3004c:	cmp	x0, x1
   30050:	b.cs	300c0 <PyInit__decimal@@Base+0x13e80>  // b.hs, b.nlast
   30054:	ldr	x1, [x4, #88]
   30058:	cmp	x0, x1
   3005c:	b.cc	30144 <PyInit__decimal@@Base+0x13f04>  // b.lo, b.ul, b.last
   30060:	ldr	x2, [x4, #104]
   30064:	mov	x1, #0xe                   	// #14
   30068:	cmp	x0, x2
   3006c:	b.cs	30080 <PyInit__decimal@@Base+0x13e40>  // b.hs, b.nlast
   30070:	ldr	x1, [x4, #96]
   30074:	cmp	x0, x1
   30078:	cset	x1, cs  // cs = hs, nlast
   3007c:	add	x1, x1, #0xc
   30080:	ldrb	w0, [x19]
   30084:	str	x1, [x19, #16]
   30088:	tst	w0, #0xe
   3008c:	b.eq	2fff8 <PyInit__decimal@@Base+0x13db8>  // b.none
   30090:	tst	w0, #0xc
   30094:	b.ne	3016c <PyInit__decimal@@Base+0x13f2c>  // b.any
   30098:	ldp	x19, x20, [sp, #16]
   3009c:	ldp	x21, x22, [sp, #32]
   300a0:	ldp	x29, x30, [sp], #80
   300a4:	ret
   300a8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   300ac:	mov	w5, #0x1                   	// #1
   300b0:	cmp	x20, x2
   300b4:	b.eq	2ff8c <PyInit__decimal@@Base+0x13d4c>  // b.none
   300b8:	neg	x1, x20
   300bc:	b	2ff8c <PyInit__decimal@@Base+0x13d4c>
   300c0:	ldr	x1, [x4, #144]
   300c4:	cmp	x0, x1
   300c8:	b.cs	3011c <PyInit__decimal@@Base+0x13edc>  // b.hs, b.nlast
   300cc:	ldr	x1, [x4, #128]
   300d0:	cmp	x0, x1
   300d4:	b.cs	3018c <PyInit__decimal@@Base+0x13f4c>  // b.hs, b.nlast
   300d8:	ldr	x1, [x4, #120]
   300dc:	cmp	x0, x1
   300e0:	cset	x1, cs  // cs = hs, nlast
   300e4:	add	x1, x1, #0xf
   300e8:	b	30080 <PyInit__decimal@@Base+0x13e40>
   300ec:	add	x3, sp, #0x4f
   300f0:	mov	x2, #0x8                   	// #8
   300f4:	strb	wzr, [sp, #79]
   300f8:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   300fc:	ldrb	w1, [sp, #79]
   30100:	str	x0, [x19, #40]
   30104:	cbnz	w1, 30110 <PyInit__decimal@@Base+0x13ed0>
   30108:	ldr	x1, [x23, #1880]
   3010c:	str	x1, [x19, #32]
   30110:	ldrb	w4, [x19]
   30114:	ldr	x23, [sp, #48]
   30118:	b	2ff80 <PyInit__decimal@@Base+0x13d40>
   3011c:	ldr	x1, [x4, #152]
   30120:	cmp	x0, x1
   30124:	cset	x1, cs  // cs = hs, nlast
   30128:	add	x1, x1, #0x13
   3012c:	b	30080 <PyInit__decimal@@Base+0x13e40>
   30130:	ldr	x1, [x4, #24]
   30134:	cmp	x0, x1
   30138:	cset	x1, cs  // cs = hs, nlast
   3013c:	add	x1, x1, #0x3
   30140:	b	30080 <PyInit__decimal@@Base+0x13e40>
   30144:	ldr	x1, [x4, #80]
   30148:	cmp	x0, x1
   3014c:	cset	x1, cs  // cs = hs, nlast
   30150:	add	x1, x1, #0xa
   30154:	b	30080 <PyInit__decimal@@Base+0x13e40>
   30158:	ldr	x1, [x4, #40]
   3015c:	cmp	x0, x1
   30160:	cset	x1, cs  // cs = hs, nlast
   30164:	add	x1, x1, #0x5
   30168:	b	30080 <PyInit__decimal@@Base+0x13e40>
   3016c:	ldr	w2, [x22, #40]
   30170:	mov	x0, x19
   30174:	ldr	x1, [x22]
   30178:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   3017c:	ldp	x19, x20, [sp, #16]
   30180:	ldp	x21, x22, [sp, #32]
   30184:	ldp	x29, x30, [sp], #80
   30188:	ret
   3018c:	ldr	x1, [x4, #136]
   30190:	cmp	x0, x1
   30194:	cset	x1, cs  // cs = hs, nlast
   30198:	add	x1, x1, #0x11
   3019c:	b	30080 <PyInit__decimal@@Base+0x13e40>
   301a0:	mov	x6, #0x89e80000            	// #2313682944
   301a4:	ldrb	w8, [x0]
   301a8:	movk	x6, #0x2304, lsl #32
   301ac:	str	xzr, [x0, #8]
   301b0:	movk	x6, #0x8ac7, lsl #48
   301b4:	cmp	x1, x6
   301b8:	cset	x5, cs  // cs = hs, nlast
   301bc:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   301c0:	ldr	x7, [x0, #40]
   301c4:	add	x9, x5, #0x1
   301c8:	msub	x6, x5, x6, x1
   301cc:	and	w1, w8, #0xfffffff0
   301d0:	strb	w1, [x0]
   301d4:	add	x4, x4, #0x180
   301d8:	add	x8, x7, x9, lsl #3
   301dc:	stp	x6, x5, [x7]
   301e0:	str	x9, [x0, #24]
   301e4:	mov	x9, x2
   301e8:	ldr	x7, [x4, #72]
   301ec:	ldur	x6, [x8, #-8]
   301f0:	cmp	x6, x7
   301f4:	b.cs	30254 <PyInit__decimal@@Base+0x14014>  // b.hs, b.nlast
   301f8:	ldr	x1, [x4, #32]
   301fc:	cmp	x6, x1
   30200:	b.cs	30224 <PyInit__decimal@@Base+0x13fe4>  // b.hs, b.nlast
   30204:	ldr	x1, [x4, #16]
   30208:	cmp	x6, x1
   3020c:	b.cs	302ec <PyInit__decimal@@Base+0x140ac>  // b.hs, b.nlast
   30210:	ldr	x1, [x4, #8]
   30214:	cmp	x6, x1
   30218:	cset	x7, cs  // cs = hs, nlast
   3021c:	add	x7, x7, #0x1
   30220:	b	30290 <PyInit__decimal@@Base+0x14050>
   30224:	ldr	x1, [x4, #48]
   30228:	cmp	x6, x1
   3022c:	b.cc	30328 <PyInit__decimal@@Base+0x140e8>  // b.lo, b.ul, b.last
   30230:	ldr	x1, [x4, #64]
   30234:	mov	x7, #0x9                   	// #9
   30238:	cmp	x6, x1
   3023c:	b.cs	30290 <PyInit__decimal@@Base+0x14050>  // b.hs, b.nlast
   30240:	ldr	x1, [x4, #56]
   30244:	cmp	x6, x1
   30248:	cset	x7, cs  // cs = hs, nlast
   3024c:	add	x7, x7, #0x7
   30250:	b	30290 <PyInit__decimal@@Base+0x14050>
   30254:	ldr	x1, [x4, #112]
   30258:	cmp	x6, x1
   3025c:	b.cs	302c0 <PyInit__decimal@@Base+0x14080>  // b.hs, b.nlast
   30260:	ldr	x1, [x4, #88]
   30264:	cmp	x6, x1
   30268:	b.cc	30314 <PyInit__decimal@@Base+0x140d4>  // b.lo, b.ul, b.last
   3026c:	ldr	x1, [x4, #104]
   30270:	mov	x7, #0xe                   	// #14
   30274:	cmp	x6, x1
   30278:	b.cs	30290 <PyInit__decimal@@Base+0x14050>  // b.hs, b.nlast
   3027c:	ldr	x1, [x4, #96]
   30280:	cmp	x6, x1
   30284:	cset	x7, cs  // cs = hs, nlast
   30288:	add	x7, x7, #0xc
   3028c:	nop
   30290:	lsl	x1, x5, #2
   30294:	ldrb	w4, [x0]
   30298:	add	x1, x1, x5
   3029c:	tst	w4, #0xe
   302a0:	lsl	x1, x1, #2
   302a4:	sub	x1, x1, x5
   302a8:	add	x1, x1, x7
   302ac:	str	x1, [x0, #16]
   302b0:	b.eq	3033c <PyInit__decimal@@Base+0x140fc>  // b.none
   302b4:	tst	w4, #0xc
   302b8:	b.ne	30348 <PyInit__decimal@@Base+0x14108>  // b.any
   302bc:	ret
   302c0:	ldr	x1, [x4, #144]
   302c4:	cmp	x6, x1
   302c8:	b.cs	30300 <PyInit__decimal@@Base+0x140c0>  // b.hs, b.nlast
   302cc:	ldr	x1, [x4, #128]
   302d0:	cmp	x6, x1
   302d4:	b.cs	30354 <PyInit__decimal@@Base+0x14114>  // b.hs, b.nlast
   302d8:	ldr	x1, [x4, #120]
   302dc:	cmp	x6, x1
   302e0:	cset	x7, cs  // cs = hs, nlast
   302e4:	add	x7, x7, #0xf
   302e8:	b	30290 <PyInit__decimal@@Base+0x14050>
   302ec:	ldr	x1, [x4, #24]
   302f0:	cmp	x6, x1
   302f4:	cset	x7, cs  // cs = hs, nlast
   302f8:	add	x7, x7, #0x3
   302fc:	b	30290 <PyInit__decimal@@Base+0x14050>
   30300:	ldr	x1, [x4, #152]
   30304:	cmp	x6, x1
   30308:	cset	x7, cs  // cs = hs, nlast
   3030c:	add	x7, x7, #0x13
   30310:	b	30290 <PyInit__decimal@@Base+0x14050>
   30314:	ldr	x1, [x4, #80]
   30318:	cmp	x6, x1
   3031c:	cset	x7, cs  // cs = hs, nlast
   30320:	add	x7, x7, #0xa
   30324:	b	30290 <PyInit__decimal@@Base+0x14050>
   30328:	ldr	x1, [x4, #40]
   3032c:	cmp	x6, x1
   30330:	cset	x7, cs  // cs = hs, nlast
   30334:	add	x7, x7, #0x5
   30338:	b	30290 <PyInit__decimal@@Base+0x14050>
   3033c:	mov	x2, x3
   30340:	mov	x1, x9
   30344:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   30348:	ldr	w2, [x9, #40]
   3034c:	ldr	x1, [x9]
   30350:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   30354:	ldr	x1, [x4, #136]
   30358:	cmp	x6, x1
   3035c:	cset	x7, cs  // cs = hs, nlast
   30360:	add	x7, x7, #0x11
   30364:	b	30290 <PyInit__decimal@@Base+0x14050>
   30368:	mov	x8, x2
   3036c:	mov	w5, #0x0                   	// #0
   30370:	tbnz	x1, #63, 3047c <PyInit__decimal@@Base+0x1423c>
   30374:	ldrb	w7, [x0]
   30378:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3037c:	ldr	x6, [x0, #40]
   30380:	and	w7, w7, #0xfffffff0
   30384:	orr	w5, w5, w7
   30388:	strb	w5, [x0]
   3038c:	str	xzr, [x0, #8]
   30390:	add	x4, x4, #0x180
   30394:	stp	x1, xzr, [x6]
   30398:	mov	x1, #0x1                   	// #1
   3039c:	str	x1, [x0, #24]
   303a0:	ldr	x5, [x4, #72]
   303a4:	ldr	x1, [x6]
   303a8:	cmp	x1, x5
   303ac:	b.cs	30424 <PyInit__decimal@@Base+0x141e4>  // b.hs, b.nlast
   303b0:	ldr	x2, [x4, #32]
   303b4:	cmp	x1, x2
   303b8:	b.cs	303f4 <PyInit__decimal@@Base+0x141b4>  // b.hs, b.nlast
   303bc:	ldr	x2, [x4, #16]
   303c0:	cmp	x1, x2
   303c4:	b.cs	304c0 <PyInit__decimal@@Base+0x14280>  // b.hs, b.nlast
   303c8:	ldr	x2, [x4, #8]
   303cc:	cmp	x1, x2
   303d0:	ldrb	w1, [x0]
   303d4:	cset	x5, cs  // cs = hs, nlast
   303d8:	add	x5, x5, #0x1
   303dc:	str	x5, [x0, #16]
   303e0:	tst	w1, #0xe
   303e4:	b.ne	30470 <PyInit__decimal@@Base+0x14230>  // b.any
   303e8:	mov	x2, x3
   303ec:	mov	x1, x8
   303f0:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   303f4:	ldr	x2, [x4, #48]
   303f8:	cmp	x1, x2
   303fc:	b.cc	304fc <PyInit__decimal@@Base+0x142bc>  // b.lo, b.ul, b.last
   30400:	ldr	x2, [x4, #64]
   30404:	mov	x5, #0x9                   	// #9
   30408:	cmp	x1, x2
   3040c:	b.cs	30460 <PyInit__decimal@@Base+0x14220>  // b.hs, b.nlast
   30410:	ldr	x2, [x4, #56]
   30414:	cmp	x1, x2
   30418:	cset	x5, cs  // cs = hs, nlast
   3041c:	add	x5, x5, #0x7
   30420:	b	30460 <PyInit__decimal@@Base+0x14220>
   30424:	ldr	x2, [x4, #112]
   30428:	cmp	x1, x2
   3042c:	b.cs	30494 <PyInit__decimal@@Base+0x14254>  // b.hs, b.nlast
   30430:	ldr	x2, [x4, #88]
   30434:	cmp	x1, x2
   30438:	b.cc	304e8 <PyInit__decimal@@Base+0x142a8>  // b.lo, b.ul, b.last
   3043c:	ldr	x2, [x4, #104]
   30440:	mov	x5, #0xe                   	// #14
   30444:	cmp	x1, x2
   30448:	b.cs	30460 <PyInit__decimal@@Base+0x14220>  // b.hs, b.nlast
   3044c:	ldr	x2, [x4, #96]
   30450:	cmp	x1, x2
   30454:	cset	x5, cs  // cs = hs, nlast
   30458:	add	x5, x5, #0xc
   3045c:	nop
   30460:	ldrb	w1, [x0]
   30464:	str	x5, [x0, #16]
   30468:	tst	w1, #0xe
   3046c:	b.eq	303e8 <PyInit__decimal@@Base+0x141a8>  // b.none
   30470:	tst	w1, #0xc
   30474:	b.ne	30510 <PyInit__decimal@@Base+0x142d0>  // b.any
   30478:	ret
   3047c:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   30480:	mov	w5, #0x1                   	// #1
   30484:	cmp	x1, x2
   30488:	b.eq	30374 <PyInit__decimal@@Base+0x14134>  // b.none
   3048c:	neg	x1, x1
   30490:	b	30374 <PyInit__decimal@@Base+0x14134>
   30494:	ldr	x2, [x4, #144]
   30498:	cmp	x1, x2
   3049c:	b.cs	304d4 <PyInit__decimal@@Base+0x14294>  // b.hs, b.nlast
   304a0:	ldr	x2, [x4, #128]
   304a4:	cmp	x1, x2
   304a8:	b.cs	3051c <PyInit__decimal@@Base+0x142dc>  // b.hs, b.nlast
   304ac:	ldr	x2, [x4, #120]
   304b0:	cmp	x1, x2
   304b4:	cset	x5, cs  // cs = hs, nlast
   304b8:	add	x5, x5, #0xf
   304bc:	b	30460 <PyInit__decimal@@Base+0x14220>
   304c0:	ldr	x2, [x4, #24]
   304c4:	cmp	x1, x2
   304c8:	cset	x5, cs  // cs = hs, nlast
   304cc:	add	x5, x5, #0x3
   304d0:	b	30460 <PyInit__decimal@@Base+0x14220>
   304d4:	ldr	x2, [x4, #152]
   304d8:	cmp	x1, x2
   304dc:	cset	x5, cs  // cs = hs, nlast
   304e0:	add	x5, x5, #0x13
   304e4:	b	30460 <PyInit__decimal@@Base+0x14220>
   304e8:	ldr	x2, [x4, #80]
   304ec:	cmp	x1, x2
   304f0:	cset	x5, cs  // cs = hs, nlast
   304f4:	add	x5, x5, #0xa
   304f8:	b	30460 <PyInit__decimal@@Base+0x14220>
   304fc:	ldr	x2, [x4, #40]
   30500:	cmp	x1, x2
   30504:	cset	x5, cs  // cs = hs, nlast
   30508:	add	x5, x5, #0x5
   3050c:	b	30460 <PyInit__decimal@@Base+0x14220>
   30510:	ldr	w2, [x8, #40]
   30514:	ldr	x1, [x8]
   30518:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   3051c:	ldr	x2, [x4, #136]
   30520:	cmp	x1, x2
   30524:	cset	x5, cs  // cs = hs, nlast
   30528:	add	x5, x5, #0x11
   3052c:	b	30460 <PyInit__decimal@@Base+0x14220>
   30530:	stp	x29, x30, [sp, #-64]!
   30534:	mov	x29, sp
   30538:	stp	x19, x20, [sp, #16]
   3053c:	mov	x20, x0
   30540:	mov	x19, x4
   30544:	stp	x21, x22, [sp, #32]
   30548:	add	x22, sp, #0x3c
   3054c:	mov	x21, x3
   30550:	mov	x4, x22
   30554:	str	wzr, [sp, #60]
   30558:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   3055c:	ldrb	w0, [x20]
   30560:	tst	w0, #0xe
   30564:	b.eq	3059c <PyInit__decimal@@Base+0x1435c>  // b.none
   30568:	tst	w0, #0xc
   3056c:	b.ne	305e8 <PyInit__decimal@@Base+0x143a8>  // b.any
   30570:	ldr	w0, [x19]
   30574:	mov	w2, #0x1041                	// #4161
   30578:	ldr	w1, [sp, #60]
   3057c:	orr	w0, w0, w1
   30580:	str	w0, [x19]
   30584:	tst	w1, w2
   30588:	b.ne	305c8 <PyInit__decimal@@Base+0x14388>  // b.any
   3058c:	ldp	x19, x20, [sp, #16]
   30590:	ldp	x21, x22, [sp, #32]
   30594:	ldp	x29, x30, [sp], #64
   30598:	ret
   3059c:	mov	x2, x22
   305a0:	mov	x1, x21
   305a4:	mov	x0, x20
   305a8:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   305ac:	ldr	w0, [x19]
   305b0:	mov	w2, #0x1041                	// #4161
   305b4:	ldr	w1, [sp, #60]
   305b8:	orr	w0, w0, w1
   305bc:	str	w0, [x19]
   305c0:	tst	w1, w2
   305c4:	b.eq	3058c <PyInit__decimal@@Base+0x1434c>  // b.none
   305c8:	mov	x2, x19
   305cc:	mov	x0, x20
   305d0:	mov	w1, #0x100                 	// #256
   305d4:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   305d8:	ldp	x19, x20, [sp, #16]
   305dc:	ldp	x21, x22, [sp, #32]
   305e0:	ldp	x29, x30, [sp], #64
   305e4:	ret
   305e8:	ldr	w2, [x21, #40]
   305ec:	mov	x0, x20
   305f0:	ldr	x1, [x21]
   305f4:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   305f8:	b	30570 <PyInit__decimal@@Base+0x14330>
   305fc:	nop
   30600:	stp	x29, x30, [sp, #-80]!
   30604:	mov	x29, sp
   30608:	stp	x19, x20, [sp, #16]
   3060c:	mov	x19, x0
   30610:	mov	x20, x1
   30614:	stp	x21, x22, [sp, #32]
   30618:	mov	x22, x2
   3061c:	mov	x21, x3
   30620:	ldrb	w4, [x0]
   30624:	ldr	x0, [x0, #40]
   30628:	tbnz	w4, #5, 30648 <PyInit__decimal@@Base+0x14408>
   3062c:	ldr	x2, [x19, #32]
   30630:	str	x23, [sp, #48]
   30634:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   30638:	ldr	x1, [x23, #1880]
   3063c:	cmp	x2, x1
   30640:	b.gt	307b4 <PyInit__decimal@@Base+0x14574>
   30644:	ldr	x23, [sp, #48]
   30648:	mov	x1, x20
   3064c:	mov	w5, #0x0                   	// #0
   30650:	tbnz	x20, #63, 30770 <PyInit__decimal@@Base+0x14530>
   30654:	and	w4, w4, #0xfffffff0
   30658:	str	xzr, [x19, #8]
   3065c:	orr	w4, w5, w4
   30660:	strb	w4, [x19]
   30664:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   30668:	add	x4, x4, #0x180
   3066c:	stp	x1, xzr, [x0]
   30670:	mov	x1, #0x1                   	// #1
   30674:	str	x1, [x19, #24]
   30678:	ldr	x1, [x4, #72]
   3067c:	ldr	x0, [x0]
   30680:	cmp	x0, x1
   30684:	b.cs	30710 <PyInit__decimal@@Base+0x144d0>  // b.hs, b.nlast
   30688:	ldr	x1, [x4, #32]
   3068c:	cmp	x0, x1
   30690:	b.cs	306e0 <PyInit__decimal@@Base+0x144a0>  // b.hs, b.nlast
   30694:	ldr	x1, [x4, #16]
   30698:	cmp	x0, x1
   3069c:	b.cs	307f8 <PyInit__decimal@@Base+0x145b8>  // b.hs, b.nlast
   306a0:	ldr	x1, [x4, #8]
   306a4:	cmp	x0, x1
   306a8:	ldrb	w0, [x19]
   306ac:	cset	x1, cs  // cs = hs, nlast
   306b0:	add	x1, x1, #0x1
   306b4:	str	x1, [x19, #16]
   306b8:	tst	w0, #0xe
   306bc:	b.ne	30758 <PyInit__decimal@@Base+0x14518>  // b.any
   306c0:	mov	x2, x21
   306c4:	mov	x1, x22
   306c8:	mov	x0, x19
   306cc:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   306d0:	ldp	x19, x20, [sp, #16]
   306d4:	ldp	x21, x22, [sp, #32]
   306d8:	ldp	x29, x30, [sp], #80
   306dc:	ret
   306e0:	ldr	x1, [x4, #48]
   306e4:	cmp	x0, x1
   306e8:	b.cc	30820 <PyInit__decimal@@Base+0x145e0>  // b.lo, b.ul, b.last
   306ec:	ldr	x2, [x4, #64]
   306f0:	mov	x1, #0x9                   	// #9
   306f4:	cmp	x0, x2
   306f8:	b.cs	30748 <PyInit__decimal@@Base+0x14508>  // b.hs, b.nlast
   306fc:	ldr	x1, [x4, #56]
   30700:	cmp	x0, x1
   30704:	cset	x1, cs  // cs = hs, nlast
   30708:	add	x1, x1, #0x7
   3070c:	b	30748 <PyInit__decimal@@Base+0x14508>
   30710:	ldr	x1, [x4, #112]
   30714:	cmp	x0, x1
   30718:	b.cs	30788 <PyInit__decimal@@Base+0x14548>  // b.hs, b.nlast
   3071c:	ldr	x1, [x4, #88]
   30720:	cmp	x0, x1
   30724:	b.cc	3080c <PyInit__decimal@@Base+0x145cc>  // b.lo, b.ul, b.last
   30728:	ldr	x2, [x4, #104]
   3072c:	mov	x1, #0xe                   	// #14
   30730:	cmp	x0, x2
   30734:	b.cs	30748 <PyInit__decimal@@Base+0x14508>  // b.hs, b.nlast
   30738:	ldr	x1, [x4, #96]
   3073c:	cmp	x0, x1
   30740:	cset	x1, cs  // cs = hs, nlast
   30744:	add	x1, x1, #0xc
   30748:	ldrb	w0, [x19]
   3074c:	str	x1, [x19, #16]
   30750:	tst	w0, #0xe
   30754:	b.eq	306c0 <PyInit__decimal@@Base+0x14480>  // b.none
   30758:	tst	w0, #0xc
   3075c:	b.ne	30834 <PyInit__decimal@@Base+0x145f4>  // b.any
   30760:	ldp	x19, x20, [sp, #16]
   30764:	ldp	x21, x22, [sp, #32]
   30768:	ldp	x29, x30, [sp], #80
   3076c:	ret
   30770:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   30774:	mov	w5, #0x1                   	// #1
   30778:	cmp	x20, x2
   3077c:	b.eq	30654 <PyInit__decimal@@Base+0x14414>  // b.none
   30780:	neg	x1, x20
   30784:	b	30654 <PyInit__decimal@@Base+0x14414>
   30788:	ldr	x1, [x4, #144]
   3078c:	cmp	x0, x1
   30790:	b.cs	307e4 <PyInit__decimal@@Base+0x145a4>  // b.hs, b.nlast
   30794:	ldr	x1, [x4, #128]
   30798:	cmp	x0, x1
   3079c:	b.cs	30854 <PyInit__decimal@@Base+0x14614>  // b.hs, b.nlast
   307a0:	ldr	x1, [x4, #120]
   307a4:	cmp	x0, x1
   307a8:	cset	x1, cs  // cs = hs, nlast
   307ac:	add	x1, x1, #0xf
   307b0:	b	30748 <PyInit__decimal@@Base+0x14508>
   307b4:	add	x3, sp, #0x4f
   307b8:	mov	x2, #0x8                   	// #8
   307bc:	strb	wzr, [sp, #79]
   307c0:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   307c4:	ldrb	w1, [sp, #79]
   307c8:	str	x0, [x19, #40]
   307cc:	cbnz	w1, 307d8 <PyInit__decimal@@Base+0x14598>
   307d0:	ldr	x1, [x23, #1880]
   307d4:	str	x1, [x19, #32]
   307d8:	ldrb	w4, [x19]
   307dc:	ldr	x23, [sp, #48]
   307e0:	b	30648 <PyInit__decimal@@Base+0x14408>
   307e4:	ldr	x1, [x4, #152]
   307e8:	cmp	x0, x1
   307ec:	cset	x1, cs  // cs = hs, nlast
   307f0:	add	x1, x1, #0x13
   307f4:	b	30748 <PyInit__decimal@@Base+0x14508>
   307f8:	ldr	x1, [x4, #24]
   307fc:	cmp	x0, x1
   30800:	cset	x1, cs  // cs = hs, nlast
   30804:	add	x1, x1, #0x3
   30808:	b	30748 <PyInit__decimal@@Base+0x14508>
   3080c:	ldr	x1, [x4, #80]
   30810:	cmp	x0, x1
   30814:	cset	x1, cs  // cs = hs, nlast
   30818:	add	x1, x1, #0xa
   3081c:	b	30748 <PyInit__decimal@@Base+0x14508>
   30820:	ldr	x1, [x4, #40]
   30824:	cmp	x0, x1
   30828:	cset	x1, cs  // cs = hs, nlast
   3082c:	add	x1, x1, #0x5
   30830:	b	30748 <PyInit__decimal@@Base+0x14508>
   30834:	ldr	w2, [x22, #40]
   30838:	mov	x0, x19
   3083c:	ldr	x1, [x22]
   30840:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   30844:	ldp	x19, x20, [sp, #16]
   30848:	ldp	x21, x22, [sp, #32]
   3084c:	ldp	x29, x30, [sp], #80
   30850:	ret
   30854:	ldr	x1, [x4, #136]
   30858:	cmp	x0, x1
   3085c:	cset	x1, cs  // cs = hs, nlast
   30860:	add	x1, x1, #0x11
   30864:	b	30748 <PyInit__decimal@@Base+0x14508>
   30868:	stp	x29, x30, [sp, #-80]!
   3086c:	mov	x29, sp
   30870:	stp	x19, x20, [sp, #16]
   30874:	mov	x19, x0
   30878:	mov	x20, x1
   3087c:	stp	x21, x22, [sp, #32]
   30880:	mov	x21, x2
   30884:	mov	x22, x3
   30888:	stp	x23, x24, [sp, #48]
   3088c:	ldrb	w5, [x0]
   30890:	ldr	x0, [x0, #40]
   30894:	tbnz	w5, #5, 308ac <PyInit__decimal@@Base+0x1466c>
   30898:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   3089c:	ldr	x2, [x19, #32]
   308a0:	ldr	x1, [x23, #1880]
   308a4:	cmp	x2, x1
   308a8:	b.gt	309fc <PyInit__decimal@@Base+0x147bc>
   308ac:	mov	x6, #0x89e80000            	// #2313682944
   308b0:	and	w5, w5, #0xfffffff0
   308b4:	movk	x6, #0x2304, lsl #32
   308b8:	strb	w5, [x19]
   308bc:	movk	x6, #0x8ac7, lsl #48
   308c0:	cmp	x20, x6
   308c4:	cset	x4, cs  // cs = hs, nlast
   308c8:	str	xzr, [x19, #8]
   308cc:	add	x1, x4, #0x1
   308d0:	adrp	x23, 48000 <PyInit__decimal@@Base+0x2bdc0>
   308d4:	add	x5, x23, #0x180
   308d8:	msub	x6, x4, x6, x20
   308dc:	add	x2, x0, x1, lsl #3
   308e0:	stp	x6, x4, [x0]
   308e4:	str	x1, [x19, #24]
   308e8:	ldr	x0, [x5, #72]
   308ec:	ldur	x1, [x2, #-8]
   308f0:	cmp	x1, x0
   308f4:	b.cs	30954 <PyInit__decimal@@Base+0x14714>  // b.hs, b.nlast
   308f8:	ldr	x0, [x5, #32]
   308fc:	cmp	x1, x0
   30900:	b.cs	30924 <PyInit__decimal@@Base+0x146e4>  // b.hs, b.nlast
   30904:	ldr	x0, [x5, #16]
   30908:	cmp	x1, x0
   3090c:	b.cs	30a28 <PyInit__decimal@@Base+0x147e8>  // b.hs, b.nlast
   30910:	ldr	x0, [x5, #8]
   30914:	cmp	x1, x0
   30918:	cset	x2, cs  // cs = hs, nlast
   3091c:	add	x2, x2, #0x1
   30920:	b	30990 <PyInit__decimal@@Base+0x14750>
   30924:	ldr	x0, [x5, #48]
   30928:	cmp	x1, x0
   3092c:	b.cc	30a64 <PyInit__decimal@@Base+0x14824>  // b.lo, b.ul, b.last
   30930:	ldr	x0, [x5, #64]
   30934:	mov	x2, #0x9                   	// #9
   30938:	cmp	x1, x0
   3093c:	b.cs	30990 <PyInit__decimal@@Base+0x14750>  // b.hs, b.nlast
   30940:	ldr	x0, [x5, #56]
   30944:	cmp	x1, x0
   30948:	cset	x2, cs  // cs = hs, nlast
   3094c:	add	x2, x2, #0x7
   30950:	b	30990 <PyInit__decimal@@Base+0x14750>
   30954:	ldr	x0, [x5, #112]
   30958:	cmp	x1, x0
   3095c:	b.cs	309d0 <PyInit__decimal@@Base+0x14790>  // b.hs, b.nlast
   30960:	ldr	x0, [x5, #88]
   30964:	cmp	x1, x0
   30968:	b.cc	30a50 <PyInit__decimal@@Base+0x14810>  // b.lo, b.ul, b.last
   3096c:	ldr	x0, [x5, #104]
   30970:	mov	x2, #0xe                   	// #14
   30974:	cmp	x1, x0
   30978:	b.cs	30990 <PyInit__decimal@@Base+0x14750>  // b.hs, b.nlast
   3097c:	ldr	x0, [x5, #96]
   30980:	cmp	x1, x0
   30984:	cset	x2, cs  // cs = hs, nlast
   30988:	add	x2, x2, #0xc
   3098c:	nop
   30990:	lsl	x0, x4, #2
   30994:	ldrb	w1, [x19]
   30998:	add	x0, x0, x4
   3099c:	tst	w1, #0xe
   309a0:	lsl	x0, x0, #2
   309a4:	sub	x0, x0, x4
   309a8:	add	x0, x0, x2
   309ac:	str	x0, [x19, #16]
   309b0:	b.eq	30a78 <PyInit__decimal@@Base+0x14838>  // b.none
   309b4:	tst	w1, #0xc
   309b8:	b.ne	30b08 <PyInit__decimal@@Base+0x148c8>  // b.any
   309bc:	ldp	x19, x20, [sp, #16]
   309c0:	ldp	x21, x22, [sp, #32]
   309c4:	ldp	x23, x24, [sp, #48]
   309c8:	ldp	x29, x30, [sp], #80
   309cc:	ret
   309d0:	ldr	x0, [x5, #144]
   309d4:	cmp	x1, x0
   309d8:	b.cs	30a3c <PyInit__decimal@@Base+0x147fc>  // b.hs, b.nlast
   309dc:	ldr	x0, [x5, #128]
   309e0:	cmp	x1, x0
   309e4:	b.cs	30bb4 <PyInit__decimal@@Base+0x14974>  // b.hs, b.nlast
   309e8:	ldr	x0, [x5, #120]
   309ec:	cmp	x1, x0
   309f0:	cset	x2, cs  // cs = hs, nlast
   309f4:	add	x2, x2, #0xf
   309f8:	b	30990 <PyInit__decimal@@Base+0x14750>
   309fc:	add	x3, sp, #0x4f
   30a00:	mov	x2, #0x8                   	// #8
   30a04:	strb	wzr, [sp, #79]
   30a08:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   30a0c:	ldrb	w1, [sp, #79]
   30a10:	str	x0, [x19, #40]
   30a14:	cbnz	w1, 30a20 <PyInit__decimal@@Base+0x147e0>
   30a18:	ldr	x1, [x23, #1880]
   30a1c:	str	x1, [x19, #32]
   30a20:	ldrb	w5, [x19]
   30a24:	b	308ac <PyInit__decimal@@Base+0x1466c>
   30a28:	ldr	x0, [x5, #24]
   30a2c:	cmp	x1, x0
   30a30:	cset	x2, cs  // cs = hs, nlast
   30a34:	add	x2, x2, #0x3
   30a38:	b	30990 <PyInit__decimal@@Base+0x14750>
   30a3c:	ldr	x0, [x5, #152]
   30a40:	cmp	x1, x0
   30a44:	cset	x2, cs  // cs = hs, nlast
   30a48:	add	x2, x2, #0x13
   30a4c:	b	30990 <PyInit__decimal@@Base+0x14750>
   30a50:	ldr	x0, [x5, #80]
   30a54:	cmp	x1, x0
   30a58:	cset	x2, cs  // cs = hs, nlast
   30a5c:	add	x2, x2, #0xa
   30a60:	b	30990 <PyInit__decimal@@Base+0x14750>
   30a64:	ldr	x0, [x5, #40]
   30a68:	cmp	x1, x0
   30a6c:	cset	x2, cs  // cs = hs, nlast
   30a70:	add	x2, x2, #0x5
   30a74:	b	30990 <PyInit__decimal@@Base+0x14750>
   30a78:	mov	x0, x19
   30a7c:	mov	x2, x22
   30a80:	mov	x1, x21
   30a84:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   30a88:	ldrb	w0, [x19]
   30a8c:	tst	w0, #0xe
   30a90:	b.ne	309bc <PyInit__decimal@@Base+0x1477c>  // b.any
   30a94:	ldr	x20, [x21]
   30a98:	ldr	x1, [x19, #16]
   30a9c:	cmp	x1, x20
   30aa0:	b.le	309bc <PyInit__decimal@@Base+0x1477c>
   30aa4:	sub	x20, x1, x20
   30aa8:	mov	x0, x19
   30aac:	mov	x1, x20
   30ab0:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   30ab4:	ldr	x1, [x19, #8]
   30ab8:	mov	x24, x0
   30abc:	ldr	w2, [x21, #36]
   30ac0:	add	x1, x1, x20
   30ac4:	str	x1, [x19, #8]
   30ac8:	cmp	w2, #0x4
   30acc:	b.eq	30c68 <PyInit__decimal@@Base+0x14a28>  // b.none
   30ad0:	b.gt	30b54 <PyInit__decimal@@Base+0x14914>
   30ad4:	cmp	w2, #0x2
   30ad8:	b.eq	30c50 <PyInit__decimal@@Base+0x14a10>  // b.none
   30adc:	cmp	w2, #0x3
   30ae0:	b.ne	30b2c <PyInit__decimal@@Base+0x148ec>  // b.any
   30ae4:	cbz	x0, 30c20 <PyInit__decimal@@Base+0x149e0>
   30ae8:	ldrb	w0, [x19]
   30aec:	and	w0, w0, #0x1
   30af0:	cbnz	w0, 30bc8 <PyInit__decimal@@Base+0x14988>
   30af4:	ldr	w0, [x22]
   30af8:	mov	w1, #0x1040                	// #4160
   30afc:	orr	w0, w0, w1
   30b00:	str	w0, [x22]
   30b04:	b	309bc <PyInit__decimal@@Base+0x1477c>
   30b08:	ldr	w2, [x21, #40]
   30b0c:	mov	x0, x19
   30b10:	ldr	x1, [x21]
   30b14:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   30b18:	ldp	x19, x20, [sp, #16]
   30b1c:	ldp	x21, x22, [sp, #32]
   30b20:	ldp	x23, x24, [sp, #48]
   30b24:	ldp	x29, x30, [sp], #80
   30b28:	ret
   30b2c:	cmp	x0, #0x0
   30b30:	cset	w0, ne  // ne = any
   30b34:	cbnz	w2, 30b40 <PyInit__decimal@@Base+0x14900>
   30b38:	cbnz	w0, 30bc8 <PyInit__decimal@@Base+0x14988>
   30b3c:	nop
   30b40:	ldr	w0, [x22]
   30b44:	orr	w1, w0, #0x1000
   30b48:	str	w1, [x22]
   30b4c:	cbnz	x24, 30af8 <PyInit__decimal@@Base+0x148b8>
   30b50:	b	309bc <PyInit__decimal@@Base+0x1477c>
   30b54:	cmp	w2, #0x6
   30b58:	b.eq	30c30 <PyInit__decimal@@Base+0x149f0>  // b.none
   30b5c:	cmp	w2, #0x7
   30b60:	b.ne	30b9c <PyInit__decimal@@Base+0x1495c>  // b.any
   30b64:	ldr	x0, [x19, #40]
   30b68:	ldr	x2, [x0]
   30b6c:	cbz	x24, 30c20 <PyInit__decimal@@Base+0x149e0>
   30b70:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   30b74:	movk	x1, #0xcccd
   30b78:	umulh	x1, x2, x1
   30b7c:	lsr	x1, x1, #3
   30b80:	add	x1, x1, x1, lsl #2
   30b84:	sub	x1, x2, x1, lsl #1
   30b88:	cmp	w1, #0x0
   30b8c:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   30b90:	b.eq	30bcc <PyInit__decimal@@Base+0x1498c>  // b.none
   30b94:	ldr	w0, [x22]
   30b98:	b	30af8 <PyInit__decimal@@Base+0x148b8>
   30b9c:	cmp	x0, #0x5
   30ba0:	cset	w0, hi  // hi = pmore
   30ba4:	cmp	w2, #0x5
   30ba8:	b.ne	30b40 <PyInit__decimal@@Base+0x14900>  // b.any
   30bac:	cbz	w0, 30b40 <PyInit__decimal@@Base+0x14900>
   30bb0:	b	30bc8 <PyInit__decimal@@Base+0x14988>
   30bb4:	ldr	x0, [x5, #136]
   30bb8:	cmp	x1, x0
   30bbc:	cset	x2, cs  // cs = hs, nlast
   30bc0:	add	x2, x2, #0x11
   30bc4:	b	30990 <PyInit__decimal@@Base+0x14750>
   30bc8:	ldr	x0, [x19, #40]
   30bcc:	ldr	x1, [x19, #24]
   30bd0:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   30bd4:	cbnz	x0, 30c78 <PyInit__decimal@@Base+0x14a38>
   30bd8:	mov	x0, x19
   30bdc:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   30be0:	ldr	x0, [x21]
   30be4:	ldr	x1, [x19, #16]
   30be8:	cmp	x1, x0
   30bec:	b.le	30b40 <PyInit__decimal@@Base+0x14900>
   30bf0:	mov	x0, x19
   30bf4:	mov	x1, #0x1                   	// #1
   30bf8:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   30bfc:	ldr	x0, [x19, #8]
   30c00:	mov	x1, x21
   30c04:	ldr	x2, [x21]
   30c08:	add	x0, x0, #0x1
   30c0c:	stp	x0, x2, [x19, #8]
   30c10:	mov	x0, x19
   30c14:	mov	x2, x22
   30c18:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   30c1c:	b	30b40 <PyInit__decimal@@Base+0x14900>
   30c20:	ldr	w0, [x22]
   30c24:	orr	w0, w0, #0x1000
   30c28:	str	w0, [x22]
   30c2c:	b	309bc <PyInit__decimal@@Base+0x1477c>
   30c30:	cmp	x0, #0x5
   30c34:	b.hi	30bc8 <PyInit__decimal@@Base+0x14988>  // b.pmore
   30c38:	b.ne	30b40 <PyInit__decimal@@Base+0x14900>  // b.any
   30c3c:	ldr	x0, [x19, #40]
   30c40:	ldr	x1, [x0]
   30c44:	tbnz	w1, #0, 30bcc <PyInit__decimal@@Base+0x1498c>
   30c48:	ldr	w0, [x22]
   30c4c:	b	30af8 <PyInit__decimal@@Base+0x148b8>
   30c50:	cbz	x0, 30c20 <PyInit__decimal@@Base+0x149e0>
   30c54:	ldrb	w0, [x19]
   30c58:	mvn	w0, w0
   30c5c:	and	w0, w0, #0x1
   30c60:	cbz	w0, 30af4 <PyInit__decimal@@Base+0x148b4>
   30c64:	b	30bc8 <PyInit__decimal@@Base+0x14988>
   30c68:	cmp	x0, #0x4
   30c6c:	cset	w0, hi  // hi = pmore
   30c70:	cbz	w0, 30b40 <PyInit__decimal@@Base+0x14900>
   30c74:	b	30bc8 <PyInit__decimal@@Base+0x14988>
   30c78:	ldr	x3, [x19, #24]
   30c7c:	add	x23, x23, #0x180
   30c80:	ldr	x2, [x19, #40]
   30c84:	mov	x1, x21
   30c88:	ldr	x4, [x23, #144]
   30c8c:	mov	x0, x19
   30c90:	add	x3, x2, x3, lsl #3
   30c94:	mov	x2, x22
   30c98:	stur	x4, [x3, #-8]
   30c9c:	ldr	x3, [x19, #8]
   30ca0:	add	x3, x3, #0x1
   30ca4:	str	x3, [x19, #8]
   30ca8:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   30cac:	b	30b40 <PyInit__decimal@@Base+0x14900>
   30cb0:	stp	x29, x30, [sp, #-80]!
   30cb4:	mov	x29, sp
   30cb8:	stp	x19, x20, [sp, #16]
   30cbc:	mov	x19, x0
   30cc0:	mov	x20, x2
   30cc4:	stp	x21, x22, [sp, #32]
   30cc8:	mov	w21, w1
   30ccc:	stp	x23, x24, [sp, #48]
   30cd0:	mov	x23, x3
   30cd4:	ldrb	w4, [x0]
   30cd8:	ldr	x0, [x0, #40]
   30cdc:	tbnz	w4, #5, 30cf4 <PyInit__decimal@@Base+0x14ab4>
   30ce0:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
   30ce4:	ldr	x2, [x19, #32]
   30ce8:	ldr	x1, [x22, #1880]
   30cec:	cmp	x2, x1
   30cf0:	b.gt	30eb0 <PyInit__decimal@@Base+0x14c70>
   30cf4:	and	w4, w4, #0xfffffff0
   30cf8:	strb	w4, [x19]
   30cfc:	str	xzr, [x19, #8]
   30d00:	adrp	x22, 48000 <PyInit__decimal@@Base+0x2bdc0>
   30d04:	add	x4, x22, #0x180
   30d08:	stp	x21, xzr, [x0]
   30d0c:	mov	x1, #0x1                   	// #1
   30d10:	str	x1, [x19, #24]
   30d14:	ldr	x1, [x4, #72]
   30d18:	ldr	x0, [x0]
   30d1c:	cmp	x0, x1
   30d20:	b.cs	30e20 <PyInit__decimal@@Base+0x14be0>  // b.hs, b.nlast
   30d24:	ldr	x1, [x4, #32]
   30d28:	cmp	x0, x1
   30d2c:	b.cs	30df0 <PyInit__decimal@@Base+0x14bb0>  // b.hs, b.nlast
   30d30:	ldr	x1, [x4, #16]
   30d34:	cmp	x0, x1
   30d38:	b.cs	30edc <PyInit__decimal@@Base+0x14c9c>  // b.hs, b.nlast
   30d3c:	ldr	x1, [x4, #8]
   30d40:	cmp	x0, x1
   30d44:	ldrb	w0, [x19]
   30d48:	cset	x1, cs  // cs = hs, nlast
   30d4c:	add	x1, x1, #0x1
   30d50:	str	x1, [x19, #16]
   30d54:	tst	w0, #0xe
   30d58:	b.ne	30e68 <PyInit__decimal@@Base+0x14c28>  // b.any
   30d5c:	nop
   30d60:	mov	x0, x19
   30d64:	mov	x2, x23
   30d68:	mov	x1, x20
   30d6c:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   30d70:	ldrb	w0, [x19]
   30d74:	tst	w0, #0xe
   30d78:	b.ne	30e70 <PyInit__decimal@@Base+0x14c30>  // b.any
   30d7c:	ldr	x21, [x20]
   30d80:	ldr	x1, [x19, #16]
   30d84:	cmp	x1, x21
   30d88:	b.le	30e70 <PyInit__decimal@@Base+0x14c30>
   30d8c:	sub	x21, x1, x21
   30d90:	mov	x0, x19
   30d94:	mov	x1, x21
   30d98:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   30d9c:	ldr	x1, [x19, #8]
   30da0:	mov	x24, x0
   30da4:	ldr	w2, [x20, #36]
   30da8:	add	x1, x1, x21
   30dac:	str	x1, [x19, #8]
   30db0:	cmp	w2, #0x4
   30db4:	b.eq	31088 <PyInit__decimal@@Base+0x14e48>  // b.none
   30db8:	b.gt	30f74 <PyInit__decimal@@Base+0x14d34>
   30dbc:	cmp	w2, #0x2
   30dc0:	b.eq	31070 <PyInit__decimal@@Base+0x14e30>  // b.none
   30dc4:	cmp	w2, #0x3
   30dc8:	b.ne	30f50 <PyInit__decimal@@Base+0x14d10>  // b.any
   30dcc:	cbz	x0, 31040 <PyInit__decimal@@Base+0x14e00>
   30dd0:	ldrb	w0, [x19]
   30dd4:	and	w0, w0, #0x1
   30dd8:	cbnz	w0, 30fe8 <PyInit__decimal@@Base+0x14da8>
   30ddc:	ldr	w0, [x23]
   30de0:	mov	w1, #0x1040                	// #4160
   30de4:	orr	w0, w0, w1
   30de8:	str	w0, [x23]
   30dec:	b	30e70 <PyInit__decimal@@Base+0x14c30>
   30df0:	ldr	x1, [x4, #48]
   30df4:	cmp	x0, x1
   30df8:	b.cc	30f18 <PyInit__decimal@@Base+0x14cd8>  // b.lo, b.ul, b.last
   30dfc:	ldr	x2, [x4, #64]
   30e00:	mov	x1, #0x9                   	// #9
   30e04:	cmp	x0, x2
   30e08:	b.cs	30e58 <PyInit__decimal@@Base+0x14c18>  // b.hs, b.nlast
   30e0c:	ldr	x1, [x4, #56]
   30e10:	cmp	x0, x1
   30e14:	cset	x1, cs  // cs = hs, nlast
   30e18:	add	x1, x1, #0x7
   30e1c:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30e20:	ldr	x1, [x4, #112]
   30e24:	cmp	x0, x1
   30e28:	b.cs	30e84 <PyInit__decimal@@Base+0x14c44>  // b.hs, b.nlast
   30e2c:	ldr	x1, [x4, #88]
   30e30:	cmp	x0, x1
   30e34:	b.cc	30f04 <PyInit__decimal@@Base+0x14cc4>  // b.lo, b.ul, b.last
   30e38:	ldr	x2, [x4, #104]
   30e3c:	mov	x1, #0xe                   	// #14
   30e40:	cmp	x0, x2
   30e44:	b.cs	30e58 <PyInit__decimal@@Base+0x14c18>  // b.hs, b.nlast
   30e48:	ldr	x1, [x4, #96]
   30e4c:	cmp	x0, x1
   30e50:	cset	x1, cs  // cs = hs, nlast
   30e54:	add	x1, x1, #0xc
   30e58:	ldrb	w0, [x19]
   30e5c:	str	x1, [x19, #16]
   30e60:	tst	w0, #0xe
   30e64:	b.eq	30d60 <PyInit__decimal@@Base+0x14b20>  // b.none
   30e68:	tst	w0, #0xc
   30e6c:	b.ne	30f2c <PyInit__decimal@@Base+0x14cec>  // b.any
   30e70:	ldp	x19, x20, [sp, #16]
   30e74:	ldp	x21, x22, [sp, #32]
   30e78:	ldp	x23, x24, [sp, #48]
   30e7c:	ldp	x29, x30, [sp], #80
   30e80:	ret
   30e84:	ldr	x1, [x4, #144]
   30e88:	cmp	x0, x1
   30e8c:	b.cs	30ef0 <PyInit__decimal@@Base+0x14cb0>  // b.hs, b.nlast
   30e90:	ldr	x1, [x4, #128]
   30e94:	cmp	x0, x1
   30e98:	b.cs	30fd4 <PyInit__decimal@@Base+0x14d94>  // b.hs, b.nlast
   30e9c:	ldr	x1, [x4, #120]
   30ea0:	cmp	x0, x1
   30ea4:	cset	x1, cs  // cs = hs, nlast
   30ea8:	add	x1, x1, #0xf
   30eac:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30eb0:	add	x3, sp, #0x4f
   30eb4:	mov	x2, #0x8                   	// #8
   30eb8:	strb	wzr, [sp, #79]
   30ebc:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   30ec0:	ldrb	w1, [sp, #79]
   30ec4:	str	x0, [x19, #40]
   30ec8:	cbnz	w1, 30ed4 <PyInit__decimal@@Base+0x14c94>
   30ecc:	ldr	x1, [x22, #1880]
   30ed0:	str	x1, [x19, #32]
   30ed4:	ldrb	w4, [x19]
   30ed8:	b	30cf4 <PyInit__decimal@@Base+0x14ab4>
   30edc:	ldr	x1, [x4, #24]
   30ee0:	cmp	x0, x1
   30ee4:	cset	x1, cs  // cs = hs, nlast
   30ee8:	add	x1, x1, #0x3
   30eec:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30ef0:	ldr	x1, [x4, #152]
   30ef4:	cmp	x0, x1
   30ef8:	cset	x1, cs  // cs = hs, nlast
   30efc:	add	x1, x1, #0x13
   30f00:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30f04:	ldr	x1, [x4, #80]
   30f08:	cmp	x0, x1
   30f0c:	cset	x1, cs  // cs = hs, nlast
   30f10:	add	x1, x1, #0xa
   30f14:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30f18:	ldr	x1, [x4, #40]
   30f1c:	cmp	x0, x1
   30f20:	cset	x1, cs  // cs = hs, nlast
   30f24:	add	x1, x1, #0x5
   30f28:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30f2c:	ldr	w2, [x20, #40]
   30f30:	mov	x0, x19
   30f34:	ldr	x1, [x20]
   30f38:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   30f3c:	ldp	x19, x20, [sp, #16]
   30f40:	ldp	x21, x22, [sp, #32]
   30f44:	ldp	x23, x24, [sp, #48]
   30f48:	ldp	x29, x30, [sp], #80
   30f4c:	ret
   30f50:	cmp	x0, #0x0
   30f54:	cset	w0, ne  // ne = any
   30f58:	cbnz	w2, 30f60 <PyInit__decimal@@Base+0x14d20>
   30f5c:	cbnz	w0, 30fe8 <PyInit__decimal@@Base+0x14da8>
   30f60:	ldr	w0, [x23]
   30f64:	orr	w1, w0, #0x1000
   30f68:	str	w1, [x23]
   30f6c:	cbnz	x24, 30de0 <PyInit__decimal@@Base+0x14ba0>
   30f70:	b	30e70 <PyInit__decimal@@Base+0x14c30>
   30f74:	cmp	w2, #0x6
   30f78:	b.eq	31050 <PyInit__decimal@@Base+0x14e10>  // b.none
   30f7c:	cmp	w2, #0x7
   30f80:	b.ne	30fbc <PyInit__decimal@@Base+0x14d7c>  // b.any
   30f84:	ldr	x0, [x19, #40]
   30f88:	ldr	x2, [x0]
   30f8c:	cbz	x24, 31040 <PyInit__decimal@@Base+0x14e00>
   30f90:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   30f94:	movk	x1, #0xcccd
   30f98:	umulh	x1, x2, x1
   30f9c:	lsr	x1, x1, #3
   30fa0:	add	x1, x1, x1, lsl #2
   30fa4:	sub	x1, x2, x1, lsl #1
   30fa8:	cmp	w1, #0x0
   30fac:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   30fb0:	b.eq	30fec <PyInit__decimal@@Base+0x14dac>  // b.none
   30fb4:	ldr	w0, [x23]
   30fb8:	b	30de0 <PyInit__decimal@@Base+0x14ba0>
   30fbc:	cmp	x0, #0x5
   30fc0:	cset	w0, hi  // hi = pmore
   30fc4:	cmp	w2, #0x5
   30fc8:	b.ne	30f60 <PyInit__decimal@@Base+0x14d20>  // b.any
   30fcc:	cbz	w0, 30f60 <PyInit__decimal@@Base+0x14d20>
   30fd0:	b	30fe8 <PyInit__decimal@@Base+0x14da8>
   30fd4:	ldr	x1, [x4, #136]
   30fd8:	cmp	x0, x1
   30fdc:	cset	x1, cs  // cs = hs, nlast
   30fe0:	add	x1, x1, #0x11
   30fe4:	b	30e58 <PyInit__decimal@@Base+0x14c18>
   30fe8:	ldr	x0, [x19, #40]
   30fec:	ldr	x1, [x19, #24]
   30ff0:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   30ff4:	cbnz	x0, 31098 <PyInit__decimal@@Base+0x14e58>
   30ff8:	mov	x0, x19
   30ffc:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   31000:	ldr	x0, [x20]
   31004:	ldr	x1, [x19, #16]
   31008:	cmp	x1, x0
   3100c:	b.le	30f60 <PyInit__decimal@@Base+0x14d20>
   31010:	mov	x0, x19
   31014:	mov	x1, #0x1                   	// #1
   31018:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   3101c:	ldr	x0, [x19, #8]
   31020:	mov	x1, x20
   31024:	ldr	x2, [x20]
   31028:	add	x0, x0, #0x1
   3102c:	stp	x0, x2, [x19, #8]
   31030:	mov	x0, x19
   31034:	mov	x2, x23
   31038:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   3103c:	b	30f60 <PyInit__decimal@@Base+0x14d20>
   31040:	ldr	w0, [x23]
   31044:	orr	w0, w0, #0x1000
   31048:	str	w0, [x23]
   3104c:	b	30e70 <PyInit__decimal@@Base+0x14c30>
   31050:	cmp	x0, #0x5
   31054:	b.hi	30fe8 <PyInit__decimal@@Base+0x14da8>  // b.pmore
   31058:	b.ne	30f60 <PyInit__decimal@@Base+0x14d20>  // b.any
   3105c:	ldr	x0, [x19, #40]
   31060:	ldr	x1, [x0]
   31064:	tbnz	w1, #0, 30fec <PyInit__decimal@@Base+0x14dac>
   31068:	ldr	w0, [x23]
   3106c:	b	30de0 <PyInit__decimal@@Base+0x14ba0>
   31070:	cbz	x0, 31040 <PyInit__decimal@@Base+0x14e00>
   31074:	ldrb	w0, [x19]
   31078:	mvn	w0, w0
   3107c:	and	w0, w0, #0x1
   31080:	cbz	w0, 30ddc <PyInit__decimal@@Base+0x14b9c>
   31084:	b	30fe8 <PyInit__decimal@@Base+0x14da8>
   31088:	cmp	x0, #0x4
   3108c:	cset	w0, hi  // hi = pmore
   31090:	cbz	w0, 30f60 <PyInit__decimal@@Base+0x14d20>
   31094:	b	30fe8 <PyInit__decimal@@Base+0x14da8>
   31098:	ldr	x3, [x19, #24]
   3109c:	add	x22, x22, #0x180
   310a0:	ldr	x2, [x19, #40]
   310a4:	mov	x1, x20
   310a8:	ldr	x4, [x22, #144]
   310ac:	mov	x0, x19
   310b0:	add	x3, x2, x3, lsl #3
   310b4:	mov	x2, x23
   310b8:	stur	x4, [x3, #-8]
   310bc:	ldr	x3, [x19, #8]
   310c0:	add	x3, x3, #0x1
   310c4:	str	x3, [x19, #8]
   310c8:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   310cc:	b	30f60 <PyInit__decimal@@Base+0x14d20>
   310d0:	stp	x29, x30, [sp, #-80]!
   310d4:	mov	x29, sp
   310d8:	stp	x19, x20, [sp, #16]
   310dc:	mov	x19, x0
   310e0:	mov	x20, x1
   310e4:	stp	x21, x22, [sp, #32]
   310e8:	mov	x21, x2
   310ec:	mov	x22, x3
   310f0:	stp	x23, x24, [sp, #48]
   310f4:	ldrb	w5, [x0]
   310f8:	ldr	x0, [x0, #40]
   310fc:	tbnz	w5, #5, 31114 <PyInit__decimal@@Base+0x14ed4>
   31100:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   31104:	ldr	x2, [x19, #32]
   31108:	ldr	x1, [x23, #1880]
   3110c:	cmp	x2, x1
   31110:	b.gt	31264 <PyInit__decimal@@Base+0x15024>
   31114:	mov	x6, #0x89e80000            	// #2313682944
   31118:	and	w5, w5, #0xfffffff0
   3111c:	movk	x6, #0x2304, lsl #32
   31120:	strb	w5, [x19]
   31124:	movk	x6, #0x8ac7, lsl #48
   31128:	cmp	x20, x6
   3112c:	cset	x4, cs  // cs = hs, nlast
   31130:	str	xzr, [x19, #8]
   31134:	add	x1, x4, #0x1
   31138:	adrp	x23, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3113c:	add	x5, x23, #0x180
   31140:	msub	x6, x4, x6, x20
   31144:	add	x2, x0, x1, lsl #3
   31148:	stp	x6, x4, [x0]
   3114c:	str	x1, [x19, #24]
   31150:	ldr	x0, [x5, #72]
   31154:	ldur	x1, [x2, #-8]
   31158:	cmp	x1, x0
   3115c:	b.cs	311bc <PyInit__decimal@@Base+0x14f7c>  // b.hs, b.nlast
   31160:	ldr	x0, [x5, #32]
   31164:	cmp	x1, x0
   31168:	b.cs	3118c <PyInit__decimal@@Base+0x14f4c>  // b.hs, b.nlast
   3116c:	ldr	x0, [x5, #16]
   31170:	cmp	x1, x0
   31174:	b.cs	31290 <PyInit__decimal@@Base+0x15050>  // b.hs, b.nlast
   31178:	ldr	x0, [x5, #8]
   3117c:	cmp	x1, x0
   31180:	cset	x2, cs  // cs = hs, nlast
   31184:	add	x2, x2, #0x1
   31188:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   3118c:	ldr	x0, [x5, #48]
   31190:	cmp	x1, x0
   31194:	b.cc	312cc <PyInit__decimal@@Base+0x1508c>  // b.lo, b.ul, b.last
   31198:	ldr	x0, [x5, #64]
   3119c:	mov	x2, #0x9                   	// #9
   311a0:	cmp	x1, x0
   311a4:	b.cs	311f8 <PyInit__decimal@@Base+0x14fb8>  // b.hs, b.nlast
   311a8:	ldr	x0, [x5, #56]
   311ac:	cmp	x1, x0
   311b0:	cset	x2, cs  // cs = hs, nlast
   311b4:	add	x2, x2, #0x7
   311b8:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   311bc:	ldr	x0, [x5, #112]
   311c0:	cmp	x1, x0
   311c4:	b.cs	31238 <PyInit__decimal@@Base+0x14ff8>  // b.hs, b.nlast
   311c8:	ldr	x0, [x5, #88]
   311cc:	cmp	x1, x0
   311d0:	b.cc	312b8 <PyInit__decimal@@Base+0x15078>  // b.lo, b.ul, b.last
   311d4:	ldr	x0, [x5, #104]
   311d8:	mov	x2, #0xe                   	// #14
   311dc:	cmp	x1, x0
   311e0:	b.cs	311f8 <PyInit__decimal@@Base+0x14fb8>  // b.hs, b.nlast
   311e4:	ldr	x0, [x5, #96]
   311e8:	cmp	x1, x0
   311ec:	cset	x2, cs  // cs = hs, nlast
   311f0:	add	x2, x2, #0xc
   311f4:	nop
   311f8:	lsl	x0, x4, #2
   311fc:	ldrb	w1, [x19]
   31200:	add	x0, x0, x4
   31204:	tst	w1, #0xe
   31208:	lsl	x0, x0, #2
   3120c:	sub	x0, x0, x4
   31210:	add	x0, x0, x2
   31214:	str	x0, [x19, #16]
   31218:	b.eq	312e0 <PyInit__decimal@@Base+0x150a0>  // b.none
   3121c:	tst	w1, #0xc
   31220:	b.ne	31370 <PyInit__decimal@@Base+0x15130>  // b.any
   31224:	ldp	x19, x20, [sp, #16]
   31228:	ldp	x21, x22, [sp, #32]
   3122c:	ldp	x23, x24, [sp, #48]
   31230:	ldp	x29, x30, [sp], #80
   31234:	ret
   31238:	ldr	x0, [x5, #144]
   3123c:	cmp	x1, x0
   31240:	b.cs	312a4 <PyInit__decimal@@Base+0x15064>  // b.hs, b.nlast
   31244:	ldr	x0, [x5, #128]
   31248:	cmp	x1, x0
   3124c:	b.cs	3141c <PyInit__decimal@@Base+0x151dc>  // b.hs, b.nlast
   31250:	ldr	x0, [x5, #120]
   31254:	cmp	x1, x0
   31258:	cset	x2, cs  // cs = hs, nlast
   3125c:	add	x2, x2, #0xf
   31260:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   31264:	add	x3, sp, #0x4f
   31268:	mov	x2, #0x8                   	// #8
   3126c:	strb	wzr, [sp, #79]
   31270:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   31274:	ldrb	w1, [sp, #79]
   31278:	str	x0, [x19, #40]
   3127c:	cbnz	w1, 31288 <PyInit__decimal@@Base+0x15048>
   31280:	ldr	x1, [x23, #1880]
   31284:	str	x1, [x19, #32]
   31288:	ldrb	w5, [x19]
   3128c:	b	31114 <PyInit__decimal@@Base+0x14ed4>
   31290:	ldr	x0, [x5, #24]
   31294:	cmp	x1, x0
   31298:	cset	x2, cs  // cs = hs, nlast
   3129c:	add	x2, x2, #0x3
   312a0:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   312a4:	ldr	x0, [x5, #152]
   312a8:	cmp	x1, x0
   312ac:	cset	x2, cs  // cs = hs, nlast
   312b0:	add	x2, x2, #0x13
   312b4:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   312b8:	ldr	x0, [x5, #80]
   312bc:	cmp	x1, x0
   312c0:	cset	x2, cs  // cs = hs, nlast
   312c4:	add	x2, x2, #0xa
   312c8:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   312cc:	ldr	x0, [x5, #40]
   312d0:	cmp	x1, x0
   312d4:	cset	x2, cs  // cs = hs, nlast
   312d8:	add	x2, x2, #0x5
   312dc:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   312e0:	mov	x0, x19
   312e4:	mov	x2, x22
   312e8:	mov	x1, x21
   312ec:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   312f0:	ldrb	w0, [x19]
   312f4:	tst	w0, #0xe
   312f8:	b.ne	31224 <PyInit__decimal@@Base+0x14fe4>  // b.any
   312fc:	ldr	x20, [x21]
   31300:	ldr	x1, [x19, #16]
   31304:	cmp	x1, x20
   31308:	b.le	31224 <PyInit__decimal@@Base+0x14fe4>
   3130c:	sub	x20, x1, x20
   31310:	mov	x0, x19
   31314:	mov	x1, x20
   31318:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   3131c:	ldr	x1, [x19, #8]
   31320:	mov	x24, x0
   31324:	ldr	w2, [x21, #36]
   31328:	add	x1, x1, x20
   3132c:	str	x1, [x19, #8]
   31330:	cmp	w2, #0x4
   31334:	b.eq	314d0 <PyInit__decimal@@Base+0x15290>  // b.none
   31338:	b.gt	313bc <PyInit__decimal@@Base+0x1517c>
   3133c:	cmp	w2, #0x2
   31340:	b.eq	314b8 <PyInit__decimal@@Base+0x15278>  // b.none
   31344:	cmp	w2, #0x3
   31348:	b.ne	31394 <PyInit__decimal@@Base+0x15154>  // b.any
   3134c:	cbz	x0, 31488 <PyInit__decimal@@Base+0x15248>
   31350:	ldrb	w0, [x19]
   31354:	and	w0, w0, #0x1
   31358:	cbnz	w0, 31430 <PyInit__decimal@@Base+0x151f0>
   3135c:	ldr	w0, [x22]
   31360:	mov	w1, #0x1040                	// #4160
   31364:	orr	w0, w0, w1
   31368:	str	w0, [x22]
   3136c:	b	31224 <PyInit__decimal@@Base+0x14fe4>
   31370:	ldr	w2, [x21, #40]
   31374:	mov	x0, x19
   31378:	ldr	x1, [x21]
   3137c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   31380:	ldp	x19, x20, [sp, #16]
   31384:	ldp	x21, x22, [sp, #32]
   31388:	ldp	x23, x24, [sp, #48]
   3138c:	ldp	x29, x30, [sp], #80
   31390:	ret
   31394:	cmp	x0, #0x0
   31398:	cset	w0, ne  // ne = any
   3139c:	cbnz	w2, 313a8 <PyInit__decimal@@Base+0x15168>
   313a0:	cbnz	w0, 31430 <PyInit__decimal@@Base+0x151f0>
   313a4:	nop
   313a8:	ldr	w0, [x22]
   313ac:	orr	w1, w0, #0x1000
   313b0:	str	w1, [x22]
   313b4:	cbnz	x24, 31360 <PyInit__decimal@@Base+0x15120>
   313b8:	b	31224 <PyInit__decimal@@Base+0x14fe4>
   313bc:	cmp	w2, #0x6
   313c0:	b.eq	31498 <PyInit__decimal@@Base+0x15258>  // b.none
   313c4:	cmp	w2, #0x7
   313c8:	b.ne	31404 <PyInit__decimal@@Base+0x151c4>  // b.any
   313cc:	ldr	x0, [x19, #40]
   313d0:	ldr	x2, [x0]
   313d4:	cbz	x24, 31488 <PyInit__decimal@@Base+0x15248>
   313d8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   313dc:	movk	x1, #0xcccd
   313e0:	umulh	x1, x2, x1
   313e4:	lsr	x1, x1, #3
   313e8:	add	x1, x1, x1, lsl #2
   313ec:	sub	x1, x2, x1, lsl #1
   313f0:	cmp	w1, #0x0
   313f4:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   313f8:	b.eq	31434 <PyInit__decimal@@Base+0x151f4>  // b.none
   313fc:	ldr	w0, [x22]
   31400:	b	31360 <PyInit__decimal@@Base+0x15120>
   31404:	cmp	x0, #0x5
   31408:	cset	w0, hi  // hi = pmore
   3140c:	cmp	w2, #0x5
   31410:	b.ne	313a8 <PyInit__decimal@@Base+0x15168>  // b.any
   31414:	cbz	w0, 313a8 <PyInit__decimal@@Base+0x15168>
   31418:	b	31430 <PyInit__decimal@@Base+0x151f0>
   3141c:	ldr	x0, [x5, #136]
   31420:	cmp	x1, x0
   31424:	cset	x2, cs  // cs = hs, nlast
   31428:	add	x2, x2, #0x11
   3142c:	b	311f8 <PyInit__decimal@@Base+0x14fb8>
   31430:	ldr	x0, [x19, #40]
   31434:	ldr	x1, [x19, #24]
   31438:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   3143c:	cbnz	x0, 314e0 <PyInit__decimal@@Base+0x152a0>
   31440:	mov	x0, x19
   31444:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   31448:	ldr	x0, [x21]
   3144c:	ldr	x1, [x19, #16]
   31450:	cmp	x1, x0
   31454:	b.le	313a8 <PyInit__decimal@@Base+0x15168>
   31458:	mov	x0, x19
   3145c:	mov	x1, #0x1                   	// #1
   31460:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   31464:	ldr	x0, [x19, #8]
   31468:	mov	x1, x21
   3146c:	ldr	x2, [x21]
   31470:	add	x0, x0, #0x1
   31474:	stp	x0, x2, [x19, #8]
   31478:	mov	x0, x19
   3147c:	mov	x2, x22
   31480:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   31484:	b	313a8 <PyInit__decimal@@Base+0x15168>
   31488:	ldr	w0, [x22]
   3148c:	orr	w0, w0, #0x1000
   31490:	str	w0, [x22]
   31494:	b	31224 <PyInit__decimal@@Base+0x14fe4>
   31498:	cmp	x0, #0x5
   3149c:	b.hi	31430 <PyInit__decimal@@Base+0x151f0>  // b.pmore
   314a0:	b.ne	313a8 <PyInit__decimal@@Base+0x15168>  // b.any
   314a4:	ldr	x0, [x19, #40]
   314a8:	ldr	x1, [x0]
   314ac:	tbnz	w1, #0, 31434 <PyInit__decimal@@Base+0x151f4>
   314b0:	ldr	w0, [x22]
   314b4:	b	31360 <PyInit__decimal@@Base+0x15120>
   314b8:	cbz	x0, 31488 <PyInit__decimal@@Base+0x15248>
   314bc:	ldrb	w0, [x19]
   314c0:	mvn	w0, w0
   314c4:	and	w0, w0, #0x1
   314c8:	cbz	w0, 3135c <PyInit__decimal@@Base+0x1511c>
   314cc:	b	31430 <PyInit__decimal@@Base+0x151f0>
   314d0:	cmp	x0, #0x4
   314d4:	cset	w0, hi  // hi = pmore
   314d8:	cbz	w0, 313a8 <PyInit__decimal@@Base+0x15168>
   314dc:	b	31430 <PyInit__decimal@@Base+0x151f0>
   314e0:	ldr	x3, [x19, #24]
   314e4:	add	x23, x23, #0x180
   314e8:	ldr	x2, [x19, #40]
   314ec:	mov	x1, x21
   314f0:	ldr	x4, [x23, #144]
   314f4:	mov	x0, x19
   314f8:	add	x3, x2, x3, lsl #3
   314fc:	mov	x2, x22
   31500:	stur	x4, [x3, #-8]
   31504:	ldr	x3, [x19, #8]
   31508:	add	x3, x3, #0x1
   3150c:	str	x3, [x19, #8]
   31510:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   31514:	b	313a8 <PyInit__decimal@@Base+0x15168>
   31518:	stp	x29, x30, [sp, #-64]!
   3151c:	mov	x29, sp
   31520:	stp	x21, x22, [sp, #32]
   31524:	mov	x21, x2
   31528:	ldr	x2, [x1, #24]
   3152c:	stp	x23, x24, [sp, #48]
   31530:	mov	x24, x3
   31534:	ldr	x4, [x1, #40]
   31538:	add	x5, x4, x2, lsl #3
   3153c:	ldur	x5, [x5, #-8]
   31540:	cmp	x5, #0x0
   31544:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   31548:	b.ne	31570 <PyInit__decimal@@Base+0x15330>  // b.any
   3154c:	mov	x2, x3
   31550:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   31554:	cmp	w0, #0x0
   31558:	csetm	x23, eq  // eq = none
   3155c:	mov	x0, x23
   31560:	ldp	x21, x22, [sp, #32]
   31564:	ldp	x23, x24, [sp, #48]
   31568:	ldp	x29, x30, [sp], #64
   3156c:	ret
   31570:	stp	x19, x20, [sp, #16]
   31574:	mov	x19, x1
   31578:	mov	x20, x0
   3157c:	ldr	x1, [x1, #16]
   31580:	cmp	x1, x21
   31584:	b.le	31640 <PyInit__decimal@@Base+0x15400>
   31588:	mov	x22, #0x9436                	// #37942
   3158c:	sub	x1, x1, x21
   31590:	movk	x22, #0x50d7, lsl #16
   31594:	str	x1, [x0, #16]
   31598:	movk	x22, #0x435e, lsl #32
   3159c:	movk	x22, #0xd79, lsl #48
   315a0:	smulh	x22, x1, x22
   315a4:	sub	x22, x22, x1, asr #63
   315a8:	add	x3, x22, x22, lsl #2
   315ac:	lsl	x3, x3, #2
   315b0:	sub	x3, x3, x22
   315b4:	cmp	x1, x3
   315b8:	cinc	x22, x22, ne  // ne = any
   315bc:	cmp	x19, x0
   315c0:	b.eq	31664 <PyInit__decimal@@Base+0x15424>  // b.none
   315c4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   315c8:	ldr	x3, [x0, #32]
   315cc:	ldr	x1, [x1, #1880]
   315d0:	cmp	x1, x22
   315d4:	csel	x1, x1, x22, ge  // ge = tcont
   315d8:	cmp	x1, x3
   315dc:	b.eq	315f0 <PyInit__decimal@@Base+0x153b0>  // b.none
   315e0:	ldrb	w5, [x0]
   315e4:	tbz	w5, #5, 316b8 <PyInit__decimal@@Base+0x15478>
   315e8:	cmp	x1, x3
   315ec:	b.gt	316d4 <PyInit__decimal@@Base+0x15494>
   315f0:	ldr	x0, [x20, #40]
   315f4:	mov	x3, x21
   315f8:	mov	x1, x4
   315fc:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   31600:	mov	x23, x0
   31604:	ldrb	w2, [x20]
   31608:	str	x22, [x20, #24]
   3160c:	ldrb	w0, [x19]
   31610:	and	w2, w2, #0xfffffff0
   31614:	and	w0, w0, #0xf
   31618:	orr	w0, w0, w2
   3161c:	strb	w0, [x20]
   31620:	ldr	x0, [x19, #8]
   31624:	str	x0, [x20, #8]
   31628:	mov	x0, x23
   3162c:	ldp	x19, x20, [sp, #16]
   31630:	ldp	x21, x22, [sp, #32]
   31634:	ldp	x23, x24, [sp, #48]
   31638:	ldp	x29, x30, [sp], #64
   3163c:	ret
   31640:	mov	x1, x2
   31644:	cset	w2, eq  // eq = none
   31648:	mov	x0, x4
   3164c:	bl	28f90 <PyInit__decimal@@Base+0xcd50>
   31650:	mov	x23, x0
   31654:	mov	x0, x20
   31658:	bl	2b318 <PyInit__decimal@@Base+0xf0d8>
   3165c:	ldrb	w2, [x20]
   31660:	b	3160c <PyInit__decimal@@Base+0x153cc>
   31664:	ldr	x0, [x19, #40]
   31668:	mov	x1, x4
   3166c:	mov	x3, x21
   31670:	bl	1e420 <PyInit__decimal@@Base+0x21e0>
   31674:	mov	x23, x0
   31678:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3167c:	ldrb	w2, [x19]
   31680:	ldr	x0, [x19, #32]
   31684:	ldr	x1, [x1, #1880]
   31688:	cmp	x1, x22
   3168c:	csel	x1, x1, x22, ge  // ge = tcont
   31690:	cmp	x1, x0
   31694:	b.eq	31608 <PyInit__decimal@@Base+0x153c8>  // b.none
   31698:	tbz	w2, #5, 316e8 <PyInit__decimal@@Base+0x154a8>
   3169c:	cmp	x1, x0
   316a0:	b.le	31608 <PyInit__decimal@@Base+0x153c8>
   316a4:	mov	x2, x24
   316a8:	mov	x0, x19
   316ac:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   316b0:	ldrb	w2, [x19]
   316b4:	b	31608 <PyInit__decimal@@Base+0x153c8>
   316b8:	mov	x2, x24
   316bc:	bl	28670 <PyInit__decimal@@Base+0xc430>
   316c0:	mov	x23, #0xffffffffffffffff    	// #-1
   316c4:	cbz	w0, 316e0 <PyInit__decimal@@Base+0x154a0>
   316c8:	ldr	x2, [x19, #24]
   316cc:	ldr	x4, [x19, #40]
   316d0:	b	315f0 <PyInit__decimal@@Base+0x153b0>
   316d4:	mov	x2, x24
   316d8:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   316dc:	b	316c0 <PyInit__decimal@@Base+0x15480>
   316e0:	ldp	x19, x20, [sp, #16]
   316e4:	b	3155c <PyInit__decimal@@Base+0x1531c>
   316e8:	mov	x2, x24
   316ec:	mov	x0, x19
   316f0:	bl	28670 <PyInit__decimal@@Base+0xc430>
   316f4:	ldrb	w2, [x19]
   316f8:	b	31608 <PyInit__decimal@@Base+0x153c8>
   316fc:	nop
   31700:	stp	x29, x30, [sp, #-64]!
   31704:	mov	x29, sp
   31708:	stp	x19, x20, [sp, #16]
   3170c:	mov	x20, x1
   31710:	mov	x19, x2
   31714:	stp	x21, x22, [sp, #32]
   31718:	mov	x22, x3
   3171c:	mov	x21, x4
   31720:	ldrb	w1, [x2]
   31724:	tst	w1, #0xe
   31728:	b.ne	31790 <PyInit__decimal@@Base+0x15550>  // b.any
   3172c:	ldr	x2, [x2, #8]
   31730:	tbz	x2, #63, 317a8 <PyInit__decimal@@Base+0x15568>
   31734:	ldr	x3, [x19, #40]
   31738:	str	x23, [sp, #48]
   3173c:	mov	w23, w0
   31740:	ldr	x0, [x19, #24]
   31744:	add	x0, x3, x0, lsl #3
   31748:	ldur	x0, [x0, #-8]
   3174c:	cbz	x0, 3186c <PyInit__decimal@@Base+0x1562c>
   31750:	mov	x1, x19
   31754:	neg	x2, x2
   31758:	mov	x3, x4
   3175c:	mov	x0, x20
   31760:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   31764:	mov	x19, x0
   31768:	cmn	x0, #0x1
   3176c:	b.eq	3177c <PyInit__decimal@@Base+0x1553c>  // b.none
   31770:	str	xzr, [x20, #8]
   31774:	cmp	w23, #0x2
   31778:	b.ne	317c4 <PyInit__decimal@@Base+0x15584>  // b.any
   3177c:	ldr	x23, [sp, #48]
   31780:	ldp	x19, x20, [sp, #16]
   31784:	ldp	x21, x22, [sp, #32]
   31788:	ldp	x29, x30, [sp], #64
   3178c:	ret
   31790:	mov	x2, x3
   31794:	mov	x1, x19
   31798:	mov	x3, x4
   3179c:	mov	x0, x20
   317a0:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   317a4:	cbnz	w0, 31780 <PyInit__decimal@@Base+0x15540>
   317a8:	mov	x2, x21
   317ac:	mov	x1, x19
   317b0:	mov	x0, x20
   317b4:	ldp	x19, x20, [sp, #16]
   317b8:	ldp	x21, x22, [sp, #32]
   317bc:	ldp	x29, x30, [sp], #64
   317c0:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   317c4:	ldr	w0, [x22, #36]
   317c8:	cmp	w0, #0x4
   317cc:	b.eq	31958 <PyInit__decimal@@Base+0x15718>  // b.none
   317d0:	b.gt	31820 <PyInit__decimal@@Base+0x155e0>
   317d4:	cmp	w0, #0x2
   317d8:	b.eq	318bc <PyInit__decimal@@Base+0x1567c>  // b.none
   317dc:	cmp	w0, #0x3
   317e0:	b.ne	318a8 <PyInit__decimal@@Base+0x15668>  // b.any
   317e4:	cbz	x19, 317f8 <PyInit__decimal@@Base+0x155b8>
   317e8:	ldrb	w1, [x20]
   317ec:	and	w1, w1, #0x1
   317f0:	cbnz	w1, 318f0 <PyInit__decimal@@Base+0x156b0>
   317f4:	nop
   317f8:	cbnz	w23, 3177c <PyInit__decimal@@Base+0x1553c>
   317fc:	ldr	w0, [x21]
   31800:	orr	w1, w0, #0x1000
   31804:	str	w1, [x21]
   31808:	cbz	x19, 3177c <PyInit__decimal@@Base+0x1553c>
   3180c:	mov	w1, #0x1040                	// #4160
   31810:	orr	w0, w0, w1
   31814:	ldr	x23, [sp, #48]
   31818:	str	w0, [x21]
   3181c:	b	31780 <PyInit__decimal@@Base+0x15540>
   31820:	cmp	w0, #0x6
   31824:	b.eq	318d4 <PyInit__decimal@@Base+0x15694>  // b.none
   31828:	cmp	w0, #0x7
   3182c:	b.ne	31890 <PyInit__decimal@@Base+0x15650>  // b.any
   31830:	cbz	x19, 317f8 <PyInit__decimal@@Base+0x155b8>
   31834:	ldr	x0, [x20, #40]
   31838:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   3183c:	movk	x1, #0xcccd
   31840:	ldr	x2, [x0]
   31844:	umulh	x1, x2, x1
   31848:	lsr	x1, x1, #3
   3184c:	add	x1, x1, x1, lsl #2
   31850:	sub	x1, x2, x1, lsl #1
   31854:	cmp	w1, #0x0
   31858:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   3185c:	b.eq	318f4 <PyInit__decimal@@Base+0x156b4>  // b.none
   31860:	cbnz	w23, 3177c <PyInit__decimal@@Base+0x1553c>
   31864:	ldr	w0, [x21]
   31868:	b	3180c <PyInit__decimal@@Base+0x155cc>
   3186c:	mov	x0, x20
   31870:	and	w1, w1, #0x1
   31874:	ldp	x19, x20, [sp, #16]
   31878:	mov	x3, #0x0                   	// #0
   3187c:	ldp	x21, x22, [sp, #32]
   31880:	mov	x2, #0x0                   	// #0
   31884:	ldr	x23, [sp, #48]
   31888:	ldp	x29, x30, [sp], #64
   3188c:	b	2a1c8 <PyInit__decimal@@Base+0xdf88>
   31890:	cmp	x19, #0x5
   31894:	cset	w1, hi  // hi = pmore
   31898:	cmp	w0, #0x5
   3189c:	b.ne	317f8 <PyInit__decimal@@Base+0x155b8>  // b.any
   318a0:	cbz	w1, 317f8 <PyInit__decimal@@Base+0x155b8>
   318a4:	b	318f0 <PyInit__decimal@@Base+0x156b0>
   318a8:	cmp	x19, #0x0
   318ac:	cset	w1, ne  // ne = any
   318b0:	cbnz	w0, 317f8 <PyInit__decimal@@Base+0x155b8>
   318b4:	cbz	w1, 317f8 <PyInit__decimal@@Base+0x155b8>
   318b8:	b	318f0 <PyInit__decimal@@Base+0x156b0>
   318bc:	cbz	x19, 317f8 <PyInit__decimal@@Base+0x155b8>
   318c0:	ldrb	w1, [x20]
   318c4:	mvn	w1, w1
   318c8:	and	w1, w1, #0x1
   318cc:	cbz	w1, 317f8 <PyInit__decimal@@Base+0x155b8>
   318d0:	b	318f0 <PyInit__decimal@@Base+0x156b0>
   318d4:	cmp	x19, #0x5
   318d8:	b.hi	318f0 <PyInit__decimal@@Base+0x156b0>  // b.pmore
   318dc:	b.ne	317f8 <PyInit__decimal@@Base+0x155b8>  // b.any
   318e0:	ldr	x0, [x20, #40]
   318e4:	ldr	x1, [x0]
   318e8:	and	w1, w1, #0x1
   318ec:	cbz	w1, 317f8 <PyInit__decimal@@Base+0x155b8>
   318f0:	ldr	x0, [x20, #40]
   318f4:	ldr	x1, [x20, #24]
   318f8:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   318fc:	cbz	x0, 31948 <PyInit__decimal@@Base+0x15708>
   31900:	ldp	x2, x3, [x20, #24]
   31904:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   31908:	ldr	x1, [x0, #1880]
   3190c:	add	x0, x2, #0x1
   31910:	cmp	x0, x1
   31914:	csel	x1, x0, x1, ge  // ge = tcont
   31918:	cmp	x1, x3
   3191c:	b.eq	31930 <PyInit__decimal@@Base+0x156f0>  // b.none
   31920:	ldrb	w0, [x20]
   31924:	tbz	w0, #5, 31968 <PyInit__decimal@@Base+0x15728>
   31928:	cmp	x1, x3
   3192c:	b.gt	31980 <PyInit__decimal@@Base+0x15740>
   31930:	ldr	x0, [x20, #40]
   31934:	mov	x1, #0x1                   	// #1
   31938:	str	x1, [x0, x2, lsl #3]
   3193c:	ldr	x0, [x20, #24]
   31940:	add	x0, x0, x1
   31944:	str	x0, [x20, #24]
   31948:	mov	x0, x20
   3194c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   31950:	cbz	w23, 317fc <PyInit__decimal@@Base+0x155bc>
   31954:	b	3177c <PyInit__decimal@@Base+0x1553c>
   31958:	cmp	x19, #0x4
   3195c:	cset	w1, hi  // hi = pmore
   31960:	cbz	w1, 317f8 <PyInit__decimal@@Base+0x155b8>
   31964:	b	318f0 <PyInit__decimal@@Base+0x156b0>
   31968:	mov	x2, x21
   3196c:	mov	x0, x20
   31970:	bl	28670 <PyInit__decimal@@Base+0xc430>
   31974:	cbz	w0, 317f8 <PyInit__decimal@@Base+0x155b8>
   31978:	ldr	x2, [x20, #24]
   3197c:	b	31930 <PyInit__decimal@@Base+0x156f0>
   31980:	mov	x2, x21
   31984:	mov	x0, x20
   31988:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3198c:	b	31974 <PyInit__decimal@@Base+0x15734>
   31990:	stp	x29, x30, [sp, #-80]!
   31994:	mov	x6, x2
   31998:	mov	x2, x4
   3199c:	mov	x29, sp
   319a0:	stp	x19, x20, [sp, #16]
   319a4:	mov	x20, x0
   319a8:	ldrb	w5, [x1]
   319ac:	tst	w5, #0xe
   319b0:	b.ne	319cc <PyInit__decimal@@Base+0x1578c>  // b.any
   319b4:	ldrb	w7, [x6]
   319b8:	orr	w5, w7, w5
   319bc:	and	w7, w7, #0xe
   319c0:	and	w5, w5, #0x1
   319c4:	orr	w5, w5, w7
   319c8:	cbz	w5, 319e0 <PyInit__decimal@@Base+0x157a0>
   319cc:	mov	x0, x20
   319d0:	mov	w1, #0x100                 	// #256
   319d4:	ldp	x19, x20, [sp, #16]
   319d8:	ldp	x29, x30, [sp], #80
   319dc:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   319e0:	ldr	x4, [x1, #8]
   319e4:	cbnz	x4, 319cc <PyInit__decimal@@Base+0x1578c>
   319e8:	stp	x21, x22, [sp, #32]
   319ec:	ldr	x21, [x6, #8]
   319f0:	cbnz	x21, 31c6c <PyInit__decimal@@Base+0x15a2c>
   319f4:	ldr	x5, [x1, #16]
   319f8:	adrp	x22, 65000 <PyInit__decimal@@Base+0x48dc0>
   319fc:	ldr	x7, [x6, #16]
   31a00:	ldr	x4, [x22, #1880]
   31a04:	cmp	x7, x5
   31a08:	ldr	x5, [x0, #32]
   31a0c:	str	x23, [sp, #48]
   31a10:	csel	x23, x1, x6, le
   31a14:	csel	x19, x6, x1, le
   31a18:	ldr	x1, [x23, #24]
   31a1c:	cmp	x1, x4
   31a20:	csel	x1, x1, x4, ge  // ge = tcont
   31a24:	cmp	x1, x5
   31a28:	b.eq	31a3c <PyInit__decimal@@Base+0x157fc>  // b.none
   31a2c:	ldrb	w4, [x0]
   31a30:	tbz	w4, #5, 31c98 <PyInit__decimal@@Base+0x15a58>
   31a34:	cmp	x1, x5
   31a38:	b.gt	31c74 <PyInit__decimal@@Base+0x15a34>
   31a3c:	ldr	x0, [x19, #24]
   31a40:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   31a44:	adrp	x12, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31a48:	movk	x10, #0xcccd
   31a4c:	sub	x0, x0, #0x1
   31a50:	cmp	x0, #0x0
   31a54:	ldr	x14, [x19, #40]
   31a58:	ldr	x13, [x23, #40]
   31a5c:	b.le	31ca8 <PyInit__decimal@@Base+0x15a68>
   31a60:	add	x6, x12, #0x180
   31a64:	lsl	x15, x21, #3
   31a68:	add	x11, x6, #0x98
   31a6c:	mov	x4, #0x0                   	// #0
   31a70:	ldr	x8, [x14, x21, lsl #3]
   31a74:	ldr	x7, [x13, x21, lsl #3]
   31a78:	b	31a98 <PyInit__decimal@@Base+0x15858>
   31a7c:	tst	x5, x1
   31a80:	b.eq	31a8c <PyInit__decimal@@Base+0x1584c>  // b.none
   31a84:	ldr	x0, [x6]
   31a88:	add	x4, x4, x0
   31a8c:	add	x6, x6, #0x8
   31a90:	cmp	x11, x6
   31a94:	b.eq	31ae8 <PyInit__decimal@@Base+0x158a8>  // b.none
   31a98:	umulh	x9, x8, x10
   31a9c:	umulh	x0, x7, x10
   31aa0:	lsr	x5, x9, #3
   31aa4:	lsr	x1, x0, #3
   31aa8:	add	x5, x5, x5, lsl #2
   31aac:	add	x1, x1, x1, lsl #2
   31ab0:	sub	x5, x8, x5, lsl #1
   31ab4:	lsr	x8, x9, #3
   31ab8:	sub	x1, x7, x1, lsl #1
   31abc:	cmp	x5, #0x1
   31ac0:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   31ac4:	lsr	x7, x0, #3
   31ac8:	b.ls	31a7c <PyInit__decimal@@Base+0x1583c>  // b.plast
   31acc:	mov	x0, x20
   31ad0:	mov	w1, #0x100                 	// #256
   31ad4:	ldp	x19, x20, [sp, #16]
   31ad8:	ldp	x21, x22, [sp, #32]
   31adc:	ldr	x23, [sp, #48]
   31ae0:	ldp	x29, x30, [sp], #80
   31ae4:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   31ae8:	ldr	x0, [x20, #40]
   31aec:	add	x21, x21, #0x1
   31af0:	str	x4, [x0, x15]
   31af4:	ldr	x0, [x19, #24]
   31af8:	sub	x0, x0, #0x1
   31afc:	cmp	x0, x21
   31b00:	b.gt	31a60 <PyInit__decimal@@Base+0x15820>
   31b04:	lsl	x15, x21, #3
   31b08:	add	x14, x14, x15
   31b0c:	add	x1, x13, x15
   31b10:	add	x12, x12, #0x180
   31b14:	ldr	x5, [x14]
   31b18:	ldr	x0, [x12, #72]
   31b1c:	ldr	x6, [x1]
   31b20:	cmp	x5, x0
   31b24:	b.cs	31cb4 <PyInit__decimal@@Base+0x15a74>  // b.hs, b.nlast
   31b28:	ldr	x0, [x12, #32]
   31b2c:	cmp	x5, x0
   31b30:	b.cs	31cf0 <PyInit__decimal@@Base+0x15ab0>  // b.hs, b.nlast
   31b34:	ldr	x0, [x12, #16]
   31b38:	cmp	x5, x0
   31b3c:	b.cs	31de0 <PyInit__decimal@@Base+0x15ba0>  // b.hs, b.nlast
   31b40:	ldr	x0, [x12, #8]
   31b44:	cmp	x5, x0
   31b48:	cset	w0, cs  // cs = hs, nlast
   31b4c:	add	w0, w0, #0x1
   31b50:	sub	w0, w0, #0x1
   31b54:	adrp	x14, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31b58:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   31b5c:	add	x11, x0, #0x2
   31b60:	add	x14, x14, #0x178
   31b64:	mov	x4, #0x1                   	// #1
   31b68:	mov	x12, #0x0                   	// #0
   31b6c:	movk	x10, #0xcccd
   31b70:	umulh	x8, x5, x10
   31b74:	mov	w9, w4
   31b78:	umulh	x7, x6, x10
   31b7c:	lsr	x1, x8, #3
   31b80:	lsr	x0, x7, #3
   31b84:	add	x1, x1, x1, lsl #2
   31b88:	add	x0, x0, x0, lsl #2
   31b8c:	sub	x1, x5, x1, lsl #1
   31b90:	lsr	x5, x8, #3
   31b94:	sub	x0, x6, x0, lsl #1
   31b98:	cmp	x1, #0x1
   31b9c:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   31ba0:	lsr	x6, x7, #3
   31ba4:	b.hi	31acc <PyInit__decimal@@Base+0x1588c>  // b.pmore
   31ba8:	tst	x1, x0
   31bac:	b.eq	31bb8 <PyInit__decimal@@Base+0x15978>  // b.none
   31bb0:	ldr	x0, [x14, x4, lsl #3]
   31bb4:	add	x12, x12, x0
   31bb8:	add	x4, x4, #0x1
   31bbc:	cmp	x11, x4
   31bc0:	b.ne	31b70 <PyInit__decimal@@Base+0x15930>  // b.any
   31bc4:	ldr	x7, [x20, #40]
   31bc8:	cmp	w9, #0x12
   31bcc:	str	x12, [x7, x15]
   31bd0:	b.gt	31c20 <PyInit__decimal@@Base+0x159e0>
   31bd4:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   31bd8:	movk	x5, #0xcccd
   31bdc:	umulh	x1, x6, x5
   31be0:	lsr	x1, x1, #3
   31be4:	add	x0, x1, x1, lsl #2
   31be8:	sub	x6, x6, x0, lsl #1
   31bec:	cmp	x6, #0x1
   31bf0:	b.ls	31c10 <PyInit__decimal@@Base+0x159d0>  // b.plast
   31bf4:	b	31acc <PyInit__decimal@@Base+0x1588c>
   31bf8:	lsr	x0, x4, #3
   31bfc:	add	x0, x0, x0, lsl #2
   31c00:	sub	x0, x1, x0, lsl #1
   31c04:	lsr	x1, x4, #3
   31c08:	cmp	x0, #0x1
   31c0c:	b.hi	31acc <PyInit__decimal@@Base+0x1588c>  // b.pmore
   31c10:	add	w9, w9, #0x1
   31c14:	umulh	x4, x1, x5
   31c18:	cmp	w9, #0x13
   31c1c:	b.ne	31bf8 <PyInit__decimal@@Base+0x159b8>  // b.any
   31c20:	ldr	x8, [x23, #24]
   31c24:	add	x21, x21, #0x1
   31c28:	cmp	x21, x8
   31c2c:	b.ge	31d58 <PyInit__decimal@@Base+0x15b18>  // b.tcont
   31c30:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   31c34:	movk	x6, #0xcccd
   31c38:	mov	w5, #0x13                  	// #19
   31c3c:	ldr	x1, [x13, x21, lsl #3]
   31c40:	b	31c4c <PyInit__decimal@@Base+0x15a0c>
   31c44:	subs	w5, w5, #0x1
   31c48:	b.eq	31d4c <PyInit__decimal@@Base+0x15b0c>  // b.none
   31c4c:	umulh	x4, x1, x6
   31c50:	lsr	x0, x4, #3
   31c54:	add	x0, x0, x0, lsl #2
   31c58:	sub	x0, x1, x0, lsl #1
   31c5c:	lsr	x1, x4, #3
   31c60:	cmp	x0, #0x1
   31c64:	b.ls	31c44 <PyInit__decimal@@Base+0x15a04>  // b.plast
   31c68:	b	31acc <PyInit__decimal@@Base+0x1588c>
   31c6c:	ldp	x21, x22, [sp, #32]
   31c70:	b	319cc <PyInit__decimal@@Base+0x1578c>
   31c74:	stp	x2, x3, [sp, #64]
   31c78:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   31c7c:	ldp	x2, x3, [sp, #64]
   31c80:	cbnz	w0, 31a3c <PyInit__decimal@@Base+0x157fc>
   31c84:	ldp	x19, x20, [sp, #16]
   31c88:	ldp	x21, x22, [sp, #32]
   31c8c:	ldr	x23, [sp, #48]
   31c90:	ldp	x29, x30, [sp], #80
   31c94:	ret
   31c98:	stp	x2, x3, [sp, #64]
   31c9c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   31ca0:	ldp	x2, x3, [sp, #64]
   31ca4:	b	31c80 <PyInit__decimal@@Base+0x15a40>
   31ca8:	mov	x1, x13
   31cac:	mov	x15, #0x0                   	// #0
   31cb0:	b	31b10 <PyInit__decimal@@Base+0x158d0>
   31cb4:	ldr	x0, [x12, #112]
   31cb8:	cmp	x5, x0
   31cbc:	b.cs	31d20 <PyInit__decimal@@Base+0x15ae0>  // b.hs, b.nlast
   31cc0:	ldr	x0, [x12, #88]
   31cc4:	cmp	x5, x0
   31cc8:	b.cc	31e08 <PyInit__decimal@@Base+0x15bc8>  // b.lo, b.ul, b.last
   31ccc:	ldr	x1, [x12, #104]
   31cd0:	mov	w0, #0xe                   	// #14
   31cd4:	cmp	x5, x1
   31cd8:	b.cs	31b50 <PyInit__decimal@@Base+0x15910>  // b.hs, b.nlast
   31cdc:	ldr	x0, [x12, #96]
   31ce0:	cmp	x5, x0
   31ce4:	cset	w0, cs  // cs = hs, nlast
   31ce8:	add	w0, w0, #0xc
   31cec:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31cf0:	ldr	x0, [x12, #48]
   31cf4:	cmp	x5, x0
   31cf8:	b.cc	31e1c <PyInit__decimal@@Base+0x15bdc>  // b.lo, b.ul, b.last
   31cfc:	ldr	x1, [x12, #64]
   31d00:	mov	w0, #0x9                   	// #9
   31d04:	cmp	x5, x1
   31d08:	b.cs	31b50 <PyInit__decimal@@Base+0x15910>  // b.hs, b.nlast
   31d0c:	ldr	x0, [x12, #56]
   31d10:	cmp	x5, x0
   31d14:	cset	w0, cs  // cs = hs, nlast
   31d18:	add	w0, w0, #0x7
   31d1c:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31d20:	ldr	x0, [x12, #144]
   31d24:	cmp	x5, x0
   31d28:	b.cs	31df4 <PyInit__decimal@@Base+0x15bb4>  // b.hs, b.nlast
   31d2c:	ldr	x0, [x12, #128]
   31d30:	cmp	x5, x0
   31d34:	b.cs	31e30 <PyInit__decimal@@Base+0x15bf0>  // b.hs, b.nlast
   31d38:	ldr	x0, [x12, #120]
   31d3c:	cmp	x5, x0
   31d40:	cset	w0, cs  // cs = hs, nlast
   31d44:	add	w0, w0, #0xf
   31d48:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31d4c:	add	x21, x21, #0x1
   31d50:	cmp	x21, x8
   31d54:	b.lt	31c38 <PyInit__decimal@@Base+0x159f8>  // b.tstop
   31d58:	ldrb	w5, [x20]
   31d5c:	and	w0, w5, #0xfffffff0
   31d60:	strb	w0, [x20]
   31d64:	ldr	x0, [x19, #24]
   31d68:	str	xzr, [x20, #8]
   31d6c:	cmp	x0, #0x1
   31d70:	b.le	31d90 <PyInit__decimal@@Base+0x15b50>
   31d74:	sub	x7, x7, #0x8
   31d78:	b	31d88 <PyInit__decimal@@Base+0x15b48>
   31d7c:	sub	x0, x0, #0x1
   31d80:	cmp	x0, #0x1
   31d84:	b.eq	31d90 <PyInit__decimal@@Base+0x15b50>  // b.none
   31d88:	ldr	x1, [x7, x0, lsl #3]
   31d8c:	cbz	x1, 31d7c <PyInit__decimal@@Base+0x15b3c>
   31d90:	ldr	x1, [x22, #1880]
   31d94:	str	x0, [x20, #24]
   31d98:	ldr	x4, [x20, #32]
   31d9c:	cmp	x1, x0
   31da0:	csel	x1, x1, x0, ge  // ge = tcont
   31da4:	cmp	x1, x4
   31da8:	b.eq	31db8 <PyInit__decimal@@Base+0x15b78>  // b.none
   31dac:	tbz	w5, #5, 31e58 <PyInit__decimal@@Base+0x15c18>
   31db0:	cmp	x1, x4
   31db4:	b.gt	31e44 <PyInit__decimal@@Base+0x15c04>
   31db8:	mov	x0, x20
   31dbc:	str	x3, [sp, #64]
   31dc0:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   31dc4:	ldp	x19, x20, [sp, #16]
   31dc8:	ldp	x21, x22, [sp, #32]
   31dcc:	ldr	x23, [sp, #48]
   31dd0:	ldr	x3, [sp, #64]
   31dd4:	ldp	x29, x30, [sp], #80
   31dd8:	mov	x1, x3
   31ddc:	b	2b080 <PyInit__decimal@@Base+0xee40>
   31de0:	ldr	x0, [x12, #24]
   31de4:	cmp	x5, x0
   31de8:	cset	w0, cs  // cs = hs, nlast
   31dec:	add	w0, w0, #0x3
   31df0:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31df4:	ldr	x0, [x12, #152]
   31df8:	cmp	x5, x0
   31dfc:	cset	w0, cs  // cs = hs, nlast
   31e00:	add	w0, w0, #0x13
   31e04:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31e08:	ldr	x0, [x12, #80]
   31e0c:	cmp	x5, x0
   31e10:	cset	w0, cs  // cs = hs, nlast
   31e14:	add	w0, w0, #0xa
   31e18:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31e1c:	ldr	x0, [x12, #40]
   31e20:	cmp	x5, x0
   31e24:	cset	w0, cs  // cs = hs, nlast
   31e28:	add	w0, w0, #0x5
   31e2c:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31e30:	ldr	x0, [x12, #136]
   31e34:	cmp	x5, x0
   31e38:	cset	w0, cs  // cs = hs, nlast
   31e3c:	add	w0, w0, #0x11
   31e40:	b	31b50 <PyInit__decimal@@Base+0x15910>
   31e44:	mov	x0, x20
   31e48:	str	x3, [sp, #64]
   31e4c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   31e50:	ldr	x3, [sp, #64]
   31e54:	b	31db8 <PyInit__decimal@@Base+0x15b78>
   31e58:	mov	x0, x20
   31e5c:	str	x3, [sp, #64]
   31e60:	bl	28670 <PyInit__decimal@@Base+0xc430>
   31e64:	ldr	x3, [sp, #64]
   31e68:	b	31db8 <PyInit__decimal@@Base+0x15b78>
   31e6c:	nop
   31e70:	ldrb	w2, [x0]
   31e74:	tst	w2, #0xc
   31e78:	b.eq	31e98 <PyInit__decimal@@Base+0x15c58>  // b.none
   31e7c:	tst	x2, #0x4
   31e80:	adrp	x1, 41000 <PyInit__decimal@@Base+0x24dc0>
   31e84:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31e88:	add	x1, x1, #0x958
   31e8c:	add	x0, x0, #0x780
   31e90:	csel	x0, x0, x1, ne  // ne = any
   31e94:	ret
   31e98:	and	w3, w2, #0x2
   31e9c:	tbnz	w2, #0, 31ecc <PyInit__decimal@@Base+0x15c8c>
   31ea0:	cbnz	w3, 31ef8 <PyInit__decimal@@Base+0x15cb8>
   31ea4:	tst	w2, #0xe
   31ea8:	b.ne	31f68 <PyInit__decimal@@Base+0x15d28>  // b.any
   31eac:	ldr	x2, [x0, #24]
   31eb0:	ldr	x3, [x0, #40]
   31eb4:	add	x2, x3, x2, lsl #3
   31eb8:	ldur	x2, [x2, #-8]
   31ebc:	cbnz	x2, 31f10 <PyInit__decimal@@Base+0x15cd0>
   31ec0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31ec4:	add	x0, x0, #0x798
   31ec8:	ret
   31ecc:	cbnz	w3, 31f04 <PyInit__decimal@@Base+0x15cc4>
   31ed0:	tst	w2, #0xe
   31ed4:	b.ne	31f74 <PyInit__decimal@@Base+0x15d34>  // b.any
   31ed8:	ldr	x2, [x0, #24]
   31edc:	ldr	x3, [x0, #40]
   31ee0:	add	x2, x3, x2, lsl #3
   31ee4:	ldur	x2, [x2, #-8]
   31ee8:	cbnz	x2, 31f3c <PyInit__decimal@@Base+0x15cfc>
   31eec:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31ef0:	add	x0, x0, #0x7a0
   31ef4:	ret
   31ef8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31efc:	add	x0, x0, #0x7a8
   31f00:	ret
   31f04:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f08:	add	x0, x0, #0x758
   31f0c:	ret
   31f10:	ldp	x2, x0, [x0, #8]
   31f14:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f18:	ldr	x4, [x1, #16]
   31f1c:	add	x3, x3, #0x778
   31f20:	add	x1, x2, x0
   31f24:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f28:	sub	x1, x1, #0x1
   31f2c:	add	x0, x0, #0x788
   31f30:	cmp	x1, x4
   31f34:	csel	x0, x0, x3, lt  // lt = tstop
   31f38:	ret
   31f3c:	ldp	x2, x0, [x0, #8]
   31f40:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f44:	ldr	x4, [x1, #16]
   31f48:	add	x3, x3, #0x7b8
   31f4c:	add	x1, x2, x0
   31f50:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f54:	sub	x1, x1, #0x1
   31f58:	add	x0, x0, #0x768
   31f5c:	cmp	x1, x4
   31f60:	csel	x0, x0, x3, lt  // lt = tstop
   31f64:	ret
   31f68:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f6c:	add	x0, x0, #0x788
   31f70:	ret
   31f74:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   31f78:	add	x0, x0, #0x768
   31f7c:	ret
   31f80:	stp	x29, x30, [sp, #-80]!
   31f84:	mov	x29, sp
   31f88:	stp	x21, x22, [sp, #32]
   31f8c:	mov	x22, x2
   31f90:	mov	x21, x0
   31f94:	ldrb	w4, [x1]
   31f98:	mov	x2, x3
   31f9c:	tst	x4, #0xf
   31fa0:	b.ne	320bc <PyInit__decimal@@Base+0x15e7c>  // b.any
   31fa4:	stp	x23, x24, [sp, #48]
   31fa8:	ldr	x23, [x1, #8]
   31fac:	stp	x19, x20, [sp, #16]
   31fb0:	mov	x20, x1
   31fb4:	cbnz	x23, 320b4 <PyInit__decimal@@Base+0x15e74>
   31fb8:	ldr	x4, [x1, #16]
   31fbc:	mov	x19, #0x9436                	// #37942
   31fc0:	ldr	x1, [x22]
   31fc4:	movk	x19, #0x50d7, lsl #16
   31fc8:	movk	x19, #0x435e, lsl #32
   31fcc:	adrp	x24, 65000 <PyInit__decimal@@Base+0x48dc0>
   31fd0:	cmp	x4, x1
   31fd4:	movk	x19, #0xd79, lsl #48
   31fd8:	csel	x4, x4, x1, ge  // ge = tcont
   31fdc:	ldr	x6, [x24, #1880]
   31fe0:	smulh	x19, x4, x19
   31fe4:	ldr	x3, [x0, #32]
   31fe8:	sub	x19, x19, x4, asr #63
   31fec:	add	x5, x19, x19, lsl #2
   31ff0:	lsl	x5, x5, #2
   31ff4:	sub	x5, x5, x19
   31ff8:	cmp	x4, x5
   31ffc:	cinc	x19, x19, ne  // ne = any
   32000:	cmp	x6, x19
   32004:	csel	x1, x6, x19, ge  // ge = tcont
   32008:	cmp	x1, x3
   3200c:	b.eq	32044 <PyInit__decimal@@Base+0x15e04>  // b.none
   32010:	ldrb	w4, [x0]
   32014:	tbz	w4, #5, 32160 <PyInit__decimal@@Base+0x15f20>
   32018:	cmp	x1, x3
   3201c:	b.le	32044 <PyInit__decimal@@Base+0x15e04>
   32020:	str	x2, [sp, #72]
   32024:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   32028:	ldr	x2, [sp, #72]
   3202c:	cbnz	w0, 32044 <PyInit__decimal@@Base+0x15e04>
   32030:	ldp	x19, x20, [sp, #16]
   32034:	ldp	x21, x22, [sp, #32]
   32038:	ldp	x23, x24, [sp, #48]
   3203c:	ldp	x29, x30, [sp], #80
   32040:	ret
   32044:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   32048:	cmp	x19, #0x0
   3204c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   32050:	movk	x9, #0xcccd
   32054:	b.le	32170 <PyInit__decimal@@Base+0x15f30>
   32058:	ldr	x0, [x20, #24]
   3205c:	mov	x6, #0x0                   	// #0
   32060:	cmp	x0, x23
   32064:	b.le	32070 <PyInit__decimal@@Base+0x15e30>
   32068:	ldr	x0, [x20, #40]
   3206c:	ldr	x6, [x0, x23, lsl #3]
   32070:	add	x5, x1, #0x180
   32074:	add	x10, x5, #0x98
   32078:	mov	x8, #0x0                   	// #0
   3207c:	b	32098 <PyInit__decimal@@Base+0x15e58>
   32080:	cbnz	x4, 3208c <PyInit__decimal@@Base+0x15e4c>
   32084:	ldr	x4, [x5]
   32088:	add	x8, x8, x4
   3208c:	add	x5, x5, #0x8
   32090:	cmp	x10, x5
   32094:	b.eq	320d0 <PyInit__decimal@@Base+0x15e90>  // b.none
   32098:	umulh	x7, x6, x9
   3209c:	lsr	x4, x7, #3
   320a0:	add	x4, x4, x4, lsl #2
   320a4:	sub	x4, x6, x4, lsl #1
   320a8:	lsr	x6, x7, #3
   320ac:	cmp	x4, #0x1
   320b0:	b.ls	32080 <PyInit__decimal@@Base+0x15e40>  // b.plast
   320b4:	ldp	x19, x20, [sp, #16]
   320b8:	ldp	x23, x24, [sp, #48]
   320bc:	mov	x0, x21
   320c0:	ldp	x21, x22, [sp, #32]
   320c4:	mov	w1, #0x100                 	// #256
   320c8:	ldp	x29, x30, [sp], #80
   320cc:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   320d0:	ldr	x0, [x21, #40]
   320d4:	str	x8, [x0, x23, lsl #3]
   320d8:	add	x23, x23, #0x1
   320dc:	cmp	x19, x23
   320e0:	b.ne	32058 <PyInit__decimal@@Base+0x15e18>  // b.any
   320e4:	ldrb	w3, [x21]
   320e8:	cmp	x19, #0x1
   320ec:	str	xzr, [x21, #8]
   320f0:	and	w1, w3, #0xfffffff0
   320f4:	strb	w1, [x21]
   320f8:	b.eq	32118 <PyInit__decimal@@Base+0x15ed8>  // b.none
   320fc:	sub	x0, x0, #0x8
   32100:	b	32110 <PyInit__decimal@@Base+0x15ed0>
   32104:	sub	x19, x19, #0x1
   32108:	cmp	x19, #0x1
   3210c:	b.eq	32118 <PyInit__decimal@@Base+0x15ed8>  // b.none
   32110:	ldr	x1, [x0, x19, lsl #3]
   32114:	cbz	x1, 32104 <PyInit__decimal@@Base+0x15ec4>
   32118:	ldr	x0, [x24, #1880]
   3211c:	str	x19, [x21, #24]
   32120:	ldr	x4, [x21, #32]
   32124:	cmp	x0, x19
   32128:	csel	x1, x0, x19, ge  // ge = tcont
   3212c:	cmp	x1, x4
   32130:	b.eq	32140 <PyInit__decimal@@Base+0x15f00>  // b.none
   32134:	tbz	w3, #5, 32184 <PyInit__decimal@@Base+0x15f44>
   32138:	cmp	x1, x4
   3213c:	b.gt	32190 <PyInit__decimal@@Base+0x15f50>
   32140:	mov	x0, x21
   32144:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   32148:	mov	x1, x22
   3214c:	ldp	x19, x20, [sp, #16]
   32150:	ldp	x21, x22, [sp, #32]
   32154:	ldp	x23, x24, [sp, #48]
   32158:	ldp	x29, x30, [sp], #80
   3215c:	b	2b080 <PyInit__decimal@@Base+0xee40>
   32160:	str	x2, [sp, #72]
   32164:	bl	28670 <PyInit__decimal@@Base+0xc430>
   32168:	ldr	x2, [sp, #72]
   3216c:	b	3202c <PyInit__decimal@@Base+0x15dec>
   32170:	ldrb	w3, [x21]
   32174:	str	xzr, [x21, #8]
   32178:	and	w0, w3, #0xfffffff0
   3217c:	strb	w0, [x21]
   32180:	b	32118 <PyInit__decimal@@Base+0x15ed8>
   32184:	mov	x0, x21
   32188:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3218c:	b	32140 <PyInit__decimal@@Base+0x15f00>
   32190:	mov	x0, x21
   32194:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   32198:	b	32140 <PyInit__decimal@@Base+0x15f00>
   3219c:	nop
   321a0:	stp	x29, x30, [sp, #-32]!
   321a4:	mov	x29, sp
   321a8:	ldrb	w5, [x1]
   321ac:	tst	w5, #0xe
   321b0:	b.ne	3220c <PyInit__decimal@@Base+0x15fcc>  // b.any
   321b4:	mov	x4, x1
   321b8:	ldr	x1, [x1, #24]
   321bc:	ldr	x5, [x4, #40]
   321c0:	add	x1, x5, x1, lsl #3
   321c4:	ldur	x1, [x1, #-8]
   321c8:	cbnz	x1, 321f8 <PyInit__decimal@@Base+0x15fb8>
   321cc:	stp	x19, x20, [sp, #16]
   321d0:	mov	x19, x3
   321d4:	mov	w2, #0x2                   	// #2
   321d8:	mov	w1, #0x1                   	// #1
   321dc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   321e0:	ldr	w0, [x19]
   321e4:	orr	w0, w0, #0x4
   321e8:	str	w0, [x19]
   321ec:	ldp	x19, x20, [sp, #16]
   321f0:	ldp	x29, x30, [sp], #32
   321f4:	ret
   321f8:	ldp	x1, x4, [x4, #8]
   321fc:	ldp	x29, x30, [sp], #32
   32200:	add	x1, x1, x4
   32204:	sub	x1, x1, #0x1
   32208:	b	30600 <PyInit__decimal@@Base+0x143c0>
   3220c:	stp	x19, x20, [sp, #16]
   32210:	mov	x20, x0
   32214:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   32218:	cbnz	w0, 321ec <PyInit__decimal@@Base+0x15fac>
   3221c:	mov	x0, x20
   32220:	mov	w2, #0x2                   	// #2
   32224:	ldp	x19, x20, [sp, #16]
   32228:	mov	w1, #0x0                   	// #0
   3222c:	ldp	x29, x30, [sp], #32
   32230:	b	2b9d0 <PyInit__decimal@@Base+0xf790>
   32234:	nop
   32238:	stp	x29, x30, [sp, #-80]!
   3223c:	mov	x6, x2
   32240:	mov	x2, x4
   32244:	mov	x29, sp
   32248:	stp	x19, x20, [sp, #16]
   3224c:	mov	x20, x0
   32250:	ldrb	w5, [x1]
   32254:	tst	w5, #0xe
   32258:	b.ne	32274 <PyInit__decimal@@Base+0x16034>  // b.any
   3225c:	ldrb	w7, [x6]
   32260:	orr	w5, w7, w5
   32264:	and	w7, w7, #0xe
   32268:	and	w5, w5, #0x1
   3226c:	orr	w5, w5, w7
   32270:	cbz	w5, 32288 <PyInit__decimal@@Base+0x16048>
   32274:	mov	x0, x20
   32278:	mov	w1, #0x100                 	// #256
   3227c:	ldp	x19, x20, [sp, #16]
   32280:	ldp	x29, x30, [sp], #80
   32284:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   32288:	ldr	x4, [x1, #8]
   3228c:	cbnz	x4, 32274 <PyInit__decimal@@Base+0x16034>
   32290:	stp	x21, x22, [sp, #32]
   32294:	ldr	x21, [x6, #8]
   32298:	cbnz	x21, 32544 <PyInit__decimal@@Base+0x16304>
   3229c:	ldr	x5, [x1, #16]
   322a0:	ldr	x7, [x6, #16]
   322a4:	cmp	x7, x5
   322a8:	csel	x22, x1, x6, le
   322ac:	csel	x19, x6, x1, le
   322b0:	ldr	x5, [x0, #32]
   322b4:	ldr	x1, [x22, #24]
   322b8:	str	x23, [sp, #48]
   322bc:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   322c0:	ldr	x4, [x23, #1880]
   322c4:	cmp	x1, x4
   322c8:	csel	x1, x1, x4, ge  // ge = tcont
   322cc:	cmp	x1, x5
   322d0:	b.eq	322e4 <PyInit__decimal@@Base+0x160a4>  // b.none
   322d4:	ldrb	w4, [x0]
   322d8:	tbz	w4, #5, 32570 <PyInit__decimal@@Base+0x16330>
   322dc:	cmp	x1, x5
   322e0:	b.gt	3254c <PyInit__decimal@@Base+0x1630c>
   322e4:	ldr	x0, [x19, #24]
   322e8:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   322ec:	adrp	x12, 48000 <PyInit__decimal@@Base+0x2bdc0>
   322f0:	movk	x10, #0xcccd
   322f4:	sub	x0, x0, #0x1
   322f8:	cmp	x0, #0x0
   322fc:	ldr	x14, [x19, #40]
   32300:	ldr	x13, [x22, #40]
   32304:	b.le	32580 <PyInit__decimal@@Base+0x16340>
   32308:	add	x6, x12, #0x180
   3230c:	lsl	x15, x21, #3
   32310:	add	x11, x6, #0x98
   32314:	mov	x4, #0x0                   	// #0
   32318:	ldr	x8, [x14, x21, lsl #3]
   3231c:	ldr	x7, [x13, x21, lsl #3]
   32320:	b	32340 <PyInit__decimal@@Base+0x16100>
   32324:	orr	x1, x1, x5
   32328:	cbz	x1, 32334 <PyInit__decimal@@Base+0x160f4>
   3232c:	ldr	x0, [x6]
   32330:	add	x4, x4, x0
   32334:	add	x6, x6, #0x8
   32338:	cmp	x11, x6
   3233c:	b.eq	32390 <PyInit__decimal@@Base+0x16150>  // b.none
   32340:	umulh	x9, x8, x10
   32344:	umulh	x0, x7, x10
   32348:	lsr	x1, x9, #3
   3234c:	lsr	x5, x0, #3
   32350:	add	x1, x1, x1, lsl #2
   32354:	add	x5, x5, x5, lsl #2
   32358:	sub	x1, x8, x1, lsl #1
   3235c:	lsr	x8, x9, #3
   32360:	sub	x5, x7, x5, lsl #1
   32364:	cmp	x1, #0x1
   32368:	ccmp	x5, #0x1, #0x2, ls  // ls = plast
   3236c:	lsr	x7, x0, #3
   32370:	b.ls	32324 <PyInit__decimal@@Base+0x160e4>  // b.plast
   32374:	mov	x0, x20
   32378:	mov	w1, #0x100                 	// #256
   3237c:	ldp	x19, x20, [sp, #16]
   32380:	ldp	x21, x22, [sp, #32]
   32384:	ldr	x23, [sp, #48]
   32388:	ldp	x29, x30, [sp], #80
   3238c:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   32390:	ldr	x0, [x20, #40]
   32394:	add	x21, x21, #0x1
   32398:	str	x4, [x0, x15]
   3239c:	ldr	x0, [x19, #24]
   323a0:	sub	x0, x0, #0x1
   323a4:	cmp	x0, x21
   323a8:	b.gt	32308 <PyInit__decimal@@Base+0x160c8>
   323ac:	lsl	x15, x21, #3
   323b0:	add	x14, x14, x15
   323b4:	add	x5, x13, x15
   323b8:	add	x1, x12, #0x180
   323bc:	ldr	x4, [x14]
   323c0:	ldr	x0, [x1, #72]
   323c4:	ldr	x6, [x5]
   323c8:	cmp	x4, x0
   323cc:	b.cs	3258c <PyInit__decimal@@Base+0x1634c>  // b.hs, b.nlast
   323d0:	ldr	x0, [x1, #32]
   323d4:	cmp	x4, x0
   323d8:	b.cs	325c8 <PyInit__decimal@@Base+0x16388>  // b.hs, b.nlast
   323dc:	ldr	x0, [x1, #16]
   323e0:	cmp	x4, x0
   323e4:	b.cs	326bc <PyInit__decimal@@Base+0x1647c>  // b.hs, b.nlast
   323e8:	ldr	x0, [x1, #8]
   323ec:	cmp	x4, x0
   323f0:	cset	w0, cs  // cs = hs, nlast
   323f4:	add	w0, w0, #0x1
   323f8:	sub	w0, w0, #0x1
   323fc:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   32400:	adrp	x17, 48000 <PyInit__decimal@@Base+0x2bdc0>
   32404:	add	x16, x0, #0x2
   32408:	add	x17, x17, #0x178
   3240c:	mov	x5, #0x1                   	// #1
   32410:	mov	x14, #0x0                   	// #0
   32414:	movk	x11, #0xcccd
   32418:	b	32420 <PyInit__decimal@@Base+0x161e0>
   3241c:	mov	x5, x10
   32420:	umulh	x9, x4, x11
   32424:	add	x10, x5, #0x1
   32428:	umulh	x8, x6, x11
   3242c:	mov	w7, w5
   32430:	lsr	x0, x9, #3
   32434:	lsr	x1, x8, #3
   32438:	add	x0, x0, x0, lsl #2
   3243c:	add	x1, x1, x1, lsl #2
   32440:	sub	x0, x4, x0, lsl #1
   32444:	lsr	x4, x9, #3
   32448:	sub	x1, x6, x1, lsl #1
   3244c:	cmp	x0, #0x1
   32450:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   32454:	lsr	x6, x8, #3
   32458:	b.hi	32374 <PyInit__decimal@@Base+0x16134>  // b.pmore
   3245c:	orr	x0, x0, x1
   32460:	cbz	x0, 3246c <PyInit__decimal@@Base+0x1622c>
   32464:	ldr	x0, [x17, x5, lsl #3]
   32468:	add	x14, x14, x0
   3246c:	cmp	x16, x10
   32470:	b.ne	3241c <PyInit__decimal@@Base+0x161dc>  // b.any
   32474:	cmp	w7, #0x12
   32478:	b.gt	324ec <PyInit__decimal@@Base+0x162ac>
   3247c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   32480:	movk	x4, #0xcccd
   32484:	umulh	x8, x6, x4
   32488:	lsr	x0, x8, #3
   3248c:	mov	x8, x0
   32490:	add	x0, x0, x0, lsl #2
   32494:	sub	x0, x6, x0, lsl #1
   32498:	cmp	x0, #0x1
   3249c:	b.hi	32374 <PyInit__decimal@@Base+0x16134>  // b.pmore
   324a0:	sxtw	x1, w7
   324a4:	mov	w6, #0x12                  	// #18
   324a8:	sub	w5, w6, w5
   324ac:	add	x12, x12, #0x180
   324b0:	mov	x7, x4
   324b4:	add	x6, x5, x1
   324b8:	b	324d0 <PyInit__decimal@@Base+0x16290>
   324bc:	add	x0, x0, x0, lsl #2
   324c0:	sub	x0, x8, x0, lsl #1
   324c4:	lsr	x8, x5, #3
   324c8:	cmp	x0, #0x1
   324cc:	b.hi	32374 <PyInit__decimal@@Base+0x16134>  // b.pmore
   324d0:	ldr	x4, [x12, x1, lsl #3]
   324d4:	umulh	x5, x8, x7
   324d8:	cmp	x6, x1
   324dc:	add	x1, x1, #0x1
   324e0:	madd	x14, x0, x4, x14
   324e4:	lsr	x0, x5, #3
   324e8:	b.ne	324bc <PyInit__decimal@@Base+0x1627c>  // b.any
   324ec:	ldr	x7, [x20, #40]
   324f0:	add	x21, x21, #0x1
   324f4:	str	x14, [x7, x15]
   324f8:	ldr	x0, [x22, #24]
   324fc:	cmp	x21, x0
   32500:	b.ge	32638 <PyInit__decimal@@Base+0x163f8>  // b.tcont
   32504:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   32508:	movk	x6, #0xcccd
   3250c:	ldr	x8, [x13, x21, lsl #3]
   32510:	mov	w5, #0x13                  	// #19
   32514:	mov	x1, x8
   32518:	b	32524 <PyInit__decimal@@Base+0x162e4>
   3251c:	subs	w5, w5, #0x1
   32520:	b.eq	32624 <PyInit__decimal@@Base+0x163e4>  // b.none
   32524:	umulh	x4, x1, x6
   32528:	lsr	x0, x4, #3
   3252c:	add	x0, x0, x0, lsl #2
   32530:	sub	x0, x1, x0, lsl #1
   32534:	lsr	x1, x4, #3
   32538:	cmp	x0, #0x1
   3253c:	b.ls	3251c <PyInit__decimal@@Base+0x162dc>  // b.plast
   32540:	b	32374 <PyInit__decimal@@Base+0x16134>
   32544:	ldp	x21, x22, [sp, #32]
   32548:	b	32274 <PyInit__decimal@@Base+0x16034>
   3254c:	stp	x2, x3, [sp, #64]
   32550:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   32554:	ldp	x2, x3, [sp, #64]
   32558:	cbnz	w0, 322e4 <PyInit__decimal@@Base+0x160a4>
   3255c:	ldp	x19, x20, [sp, #16]
   32560:	ldp	x21, x22, [sp, #32]
   32564:	ldr	x23, [sp, #48]
   32568:	ldp	x29, x30, [sp], #80
   3256c:	ret
   32570:	stp	x2, x3, [sp, #64]
   32574:	bl	28670 <PyInit__decimal@@Base+0xc430>
   32578:	ldp	x2, x3, [sp, #64]
   3257c:	b	32558 <PyInit__decimal@@Base+0x16318>
   32580:	mov	x5, x13
   32584:	mov	x15, #0x0                   	// #0
   32588:	b	323b8 <PyInit__decimal@@Base+0x16178>
   3258c:	ldr	x0, [x1, #112]
   32590:	cmp	x4, x0
   32594:	b.cs	325f8 <PyInit__decimal@@Base+0x163b8>  // b.hs, b.nlast
   32598:	ldr	x0, [x1, #88]
   3259c:	cmp	x4, x0
   325a0:	b.cc	326e4 <PyInit__decimal@@Base+0x164a4>  // b.lo, b.ul, b.last
   325a4:	ldr	x5, [x1, #104]
   325a8:	mov	w0, #0xe                   	// #14
   325ac:	cmp	x4, x5
   325b0:	b.cs	323f8 <PyInit__decimal@@Base+0x161b8>  // b.hs, b.nlast
   325b4:	ldr	x0, [x1, #96]
   325b8:	cmp	x4, x0
   325bc:	cset	w0, cs  // cs = hs, nlast
   325c0:	add	w0, w0, #0xc
   325c4:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   325c8:	ldr	x0, [x1, #48]
   325cc:	cmp	x4, x0
   325d0:	b.cc	326f8 <PyInit__decimal@@Base+0x164b8>  // b.lo, b.ul, b.last
   325d4:	ldr	x5, [x1, #64]
   325d8:	mov	w0, #0x9                   	// #9
   325dc:	cmp	x4, x5
   325e0:	b.cs	323f8 <PyInit__decimal@@Base+0x161b8>  // b.hs, b.nlast
   325e4:	ldr	x0, [x1, #56]
   325e8:	cmp	x4, x0
   325ec:	cset	w0, cs  // cs = hs, nlast
   325f0:	add	w0, w0, #0x7
   325f4:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   325f8:	ldr	x0, [x1, #144]
   325fc:	cmp	x4, x0
   32600:	b.cs	326d0 <PyInit__decimal@@Base+0x16490>  // b.hs, b.nlast
   32604:	ldr	x0, [x1, #128]
   32608:	cmp	x4, x0
   3260c:	b.cs	3270c <PyInit__decimal@@Base+0x164cc>  // b.hs, b.nlast
   32610:	ldr	x0, [x1, #120]
   32614:	cmp	x4, x0
   32618:	cset	w0, cs  // cs = hs, nlast
   3261c:	add	w0, w0, #0xf
   32620:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   32624:	str	x8, [x7, x21, lsl #3]
   32628:	add	x21, x21, #0x1
   3262c:	ldr	x0, [x22, #24]
   32630:	cmp	x0, x21
   32634:	b.gt	3250c <PyInit__decimal@@Base+0x162cc>
   32638:	ldrb	w5, [x20]
   3263c:	cmp	x0, #0x1
   32640:	str	xzr, [x20, #8]
   32644:	and	w1, w5, #0xfffffff0
   32648:	strb	w1, [x20]
   3264c:	b.le	3266c <PyInit__decimal@@Base+0x1642c>
   32650:	sub	x7, x7, #0x8
   32654:	b	32664 <PyInit__decimal@@Base+0x16424>
   32658:	sub	x0, x0, #0x1
   3265c:	cmp	x0, #0x1
   32660:	b.eq	3266c <PyInit__decimal@@Base+0x1642c>  // b.none
   32664:	ldr	x1, [x7, x0, lsl #3]
   32668:	cbz	x1, 32658 <PyInit__decimal@@Base+0x16418>
   3266c:	ldr	x1, [x23, #1880]
   32670:	str	x0, [x20, #24]
   32674:	ldr	x4, [x20, #32]
   32678:	cmp	x1, x0
   3267c:	csel	x1, x1, x0, ge  // ge = tcont
   32680:	cmp	x1, x4
   32684:	b.eq	32694 <PyInit__decimal@@Base+0x16454>  // b.none
   32688:	tbz	w5, #5, 32734 <PyInit__decimal@@Base+0x164f4>
   3268c:	cmp	x1, x4
   32690:	b.gt	32720 <PyInit__decimal@@Base+0x164e0>
   32694:	mov	x0, x20
   32698:	str	x3, [sp, #64]
   3269c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   326a0:	ldp	x19, x20, [sp, #16]
   326a4:	ldp	x21, x22, [sp, #32]
   326a8:	ldr	x23, [sp, #48]
   326ac:	ldr	x3, [sp, #64]
   326b0:	ldp	x29, x30, [sp], #80
   326b4:	mov	x1, x3
   326b8:	b	2b080 <PyInit__decimal@@Base+0xee40>
   326bc:	ldr	x0, [x1, #24]
   326c0:	cmp	x4, x0
   326c4:	cset	w0, cs  // cs = hs, nlast
   326c8:	add	w0, w0, #0x3
   326cc:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   326d0:	ldr	x0, [x1, #152]
   326d4:	cmp	x4, x0
   326d8:	cset	w0, cs  // cs = hs, nlast
   326dc:	add	w0, w0, #0x13
   326e0:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   326e4:	ldr	x0, [x1, #80]
   326e8:	cmp	x4, x0
   326ec:	cset	w0, cs  // cs = hs, nlast
   326f0:	add	w0, w0, #0xa
   326f4:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   326f8:	ldr	x0, [x1, #40]
   326fc:	cmp	x4, x0
   32700:	cset	w0, cs  // cs = hs, nlast
   32704:	add	w0, w0, #0x5
   32708:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   3270c:	ldr	x0, [x1, #136]
   32710:	cmp	x4, x0
   32714:	cset	w0, cs  // cs = hs, nlast
   32718:	add	w0, w0, #0x11
   3271c:	b	323f8 <PyInit__decimal@@Base+0x161b8>
   32720:	mov	x0, x20
   32724:	str	x3, [sp, #64]
   32728:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3272c:	ldr	x3, [sp, #64]
   32730:	b	32694 <PyInit__decimal@@Base+0x16454>
   32734:	mov	x0, x20
   32738:	str	x3, [sp, #64]
   3273c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   32740:	ldr	x3, [sp, #64]
   32744:	b	32694 <PyInit__decimal@@Base+0x16454>
   32748:	sub	sp, sp, #0x6f0
   3274c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   32750:	movi	v1.4s, #0x0
   32754:	mov	w7, #0x30                  	// #48
   32758:	add	x8, sp, #0x2f0
   3275c:	stp	x29, x30, [sp]
   32760:	mov	x29, sp
   32764:	ldr	q0, [x5, #1760]
   32768:	stp	x19, x20, [sp, #16]
   3276c:	mov	x20, x1
   32770:	stp	x21, x22, [sp, #32]
   32774:	add	x1, sp, #0xf0
   32778:	add	x5, sp, #0x4f0
   3277c:	stp	x23, x24, [sp, #48]
   32780:	mov	x22, x0
   32784:	mov	x19, x2
   32788:	str	wzr, [sp, #92]
   3278c:	mov	x23, x3
   32790:	strb	w7, [sp, #96]
   32794:	mov	x21, x4
   32798:	str	x1, [sp, #136]
   3279c:	ldrb	w1, [x20]
   327a0:	strb	w7, [sp, #144]
   327a4:	str	x8, [sp, #184]
   327a8:	tst	w1, #0xe
   327ac:	strb	w7, [sp, #192]
   327b0:	str	x5, [sp, #232]
   327b4:	stur	q1, [sp, #104]
   327b8:	stur	q0, [sp, #120]
   327bc:	stur	q1, [sp, #152]
   327c0:	stur	q0, [sp, #168]
   327c4:	stur	q1, [sp, #200]
   327c8:	stur	q0, [sp, #216]
   327cc:	b.ne	32814 <PyInit__decimal@@Base+0x165d4>  // b.any
   327d0:	ldrb	w0, [x2]
   327d4:	tst	w0, #0xe
   327d8:	b.ne	32814 <PyInit__decimal@@Base+0x165d4>  // b.any
   327dc:	ldr	x0, [x19, #8]
   327e0:	cbnz	x0, 327ec <PyInit__decimal@@Base+0x165ac>
   327e4:	ldrb	w0, [x19]
   327e8:	tbz	w0, #1, 32848 <PyInit__decimal@@Base+0x16608>
   327ec:	mov	x2, x21
   327f0:	mov	x0, x22
   327f4:	mov	w1, #0x100                 	// #256
   327f8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   327fc:	ldp	x29, x30, [sp]
   32800:	ldp	x19, x20, [sp, #16]
   32804:	ldp	x21, x22, [sp, #32]
   32808:	ldp	x23, x24, [sp, #48]
   3280c:	add	sp, sp, #0x6f0
   32810:	ret
   32814:	mov	x4, x21
   32818:	mov	x3, x23
   3281c:	mov	x2, x19
   32820:	mov	x1, x20
   32824:	mov	x0, x22
   32828:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   3282c:	cbz	w0, 327dc <PyInit__decimal@@Base+0x1659c>
   32830:	ldp	x29, x30, [sp]
   32834:	ldp	x19, x20, [sp, #16]
   32838:	ldp	x21, x22, [sp, #32]
   3283c:	ldp	x23, x24, [sp, #48]
   32840:	add	sp, sp, #0x6f0
   32844:	ret
   32848:	mov	x0, x19
   3284c:	add	x1, sp, #0x5c
   32850:	bl	2bfd8 <PyInit__decimal@@Base+0xfd98>
   32854:	mov	x19, x0
   32858:	ldr	w1, [sp, #92]
   3285c:	tbnz	w1, #8, 327ec <PyInit__decimal@@Base+0x165ac>
   32860:	ldr	x0, [x23]
   32864:	cmp	x0, x19
   32868:	b.lt	327ec <PyInit__decimal@@Base+0x165ac>  // b.tstop
   3286c:	neg	x1, x0
   32870:	cmp	x1, x19
   32874:	b.gt	327ec <PyInit__decimal@@Base+0x165ac>
   32878:	ldrb	w1, [x20]
   3287c:	tbnz	w1, #1, 329f4 <PyInit__decimal@@Base+0x167b4>
   32880:	str	x25, [sp, #64]
   32884:	sub	x25, x0, x19
   32888:	tbz	x19, #63, 32894 <PyInit__decimal@@Base+0x16654>
   3288c:	neg	x25, x19
   32890:	add	x19, x0, x19
   32894:	ldr	x1, [x20, #16]
   32898:	cmp	x0, x1
   3289c:	b.ge	328c8 <PyInit__decimal@@Base+0x16688>  // b.tcont
   328a0:	add	x24, sp, #0x60
   328a4:	mov	x1, x20
   328a8:	mov	x0, x24
   328ac:	mov	x2, x21
   328b0:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   328b4:	cbz	w0, 32938 <PyInit__decimal@@Base+0x166f8>
   328b8:	mov	x20, x24
   328bc:	mov	x1, x23
   328c0:	mov	x0, x24
   328c4:	bl	2b080 <PyInit__decimal@@Base+0xee40>
   328c8:	add	x24, sp, #0x90
   328cc:	mov	x2, x19
   328d0:	mov	x0, x24
   328d4:	mov	x3, x21
   328d8:	mov	x1, x20
   328dc:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   328e0:	cbz	w0, 32938 <PyInit__decimal@@Base+0x166f8>
   328e4:	mov	x1, x23
   328e8:	mov	x0, x24
   328ec:	add	x19, sp, #0xc0
   328f0:	bl	2b080 <PyInit__decimal@@Base+0xee40>
   328f4:	mov	x2, x25
   328f8:	mov	x1, x20
   328fc:	mov	x0, x19
   32900:	mov	x3, x21
   32904:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   32908:	cmn	x0, #0x1
   3290c:	b.eq	32938 <PyInit__decimal@@Base+0x166f8>  // b.none
   32910:	ldrb	w3, [sp, #192]
   32914:	mov	x6, x21
   32918:	mov	x2, x19
   3291c:	mov	x1, x24
   32920:	mov	x0, x22
   32924:	and	w3, w3, #0x1
   32928:	add	x5, x23, #0x24
   3292c:	mov	x4, x23
   32930:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   32934:	b	32948 <PyInit__decimal@@Base+0x16708>
   32938:	mov	x2, x21
   3293c:	mov	x0, x22
   32940:	mov	w1, #0x200                 	// #512
   32944:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   32948:	ldrb	w0, [sp, #96]
   3294c:	tst	w0, #0xe0
   32950:	b.ne	32968 <PyInit__decimal@@Base+0x16728>  // b.any
   32954:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   32958:	ldr	x0, [sp, #136]
   3295c:	ldr	x1, [x1, #1912]
   32960:	blr	x1
   32964:	ldrb	w0, [sp, #96]
   32968:	tbnz	w0, #4, 3297c <PyInit__decimal@@Base+0x1673c>
   3296c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   32970:	add	x0, sp, #0x60
   32974:	ldr	x1, [x1, #1912]
   32978:	blr	x1
   3297c:	ldrb	w0, [sp, #144]
   32980:	tst	w0, #0xe0
   32984:	b.ne	3299c <PyInit__decimal@@Base+0x1675c>  // b.any
   32988:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3298c:	ldr	x0, [sp, #184]
   32990:	ldr	x1, [x1, #1912]
   32994:	blr	x1
   32998:	ldrb	w0, [sp, #144]
   3299c:	tbnz	w0, #4, 329b0 <PyInit__decimal@@Base+0x16770>
   329a0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   329a4:	add	x0, sp, #0x90
   329a8:	ldr	x1, [x1, #1912]
   329ac:	blr	x1
   329b0:	ldrb	w0, [sp, #192]
   329b4:	tst	w0, #0xe0
   329b8:	b.ne	329d0 <PyInit__decimal@@Base+0x16790>  // b.any
   329bc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   329c0:	ldr	x0, [sp, #232]
   329c4:	ldr	x1, [x1, #1912]
   329c8:	blr	x1
   329cc:	ldrb	w0, [sp, #192]
   329d0:	tbnz	w0, #4, 329ec <PyInit__decimal@@Base+0x167ac>
   329d4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   329d8:	add	x0, sp, #0xc0
   329dc:	ldr	x1, [x1, #1912]
   329e0:	blr	x1
   329e4:	ldr	x25, [sp, #64]
   329e8:	b	327fc <PyInit__decimal@@Base+0x165bc>
   329ec:	ldr	x25, [sp, #64]
   329f0:	b	327fc <PyInit__decimal@@Base+0x165bc>
   329f4:	mov	x2, x21
   329f8:	mov	x1, x20
   329fc:	mov	x0, x22
   32a00:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32a04:	b	327fc <PyInit__decimal@@Base+0x165bc>
   32a08:	stp	x29, x30, [sp, #-80]!
   32a0c:	mov	x29, sp
   32a10:	stp	x19, x20, [sp, #16]
   32a14:	mov	x20, x1
   32a18:	mov	x19, x2
   32a1c:	stp	x21, x22, [sp, #32]
   32a20:	mov	x21, x0
   32a24:	mov	x22, x4
   32a28:	str	x23, [sp, #48]
   32a2c:	mov	x23, x3
   32a30:	str	wzr, [sp, #76]
   32a34:	ldrb	w5, [x1]
   32a38:	tst	w5, #0xe
   32a3c:	b.ne	32a80 <PyInit__decimal@@Base+0x16840>  // b.any
   32a40:	ldrb	w0, [x2]
   32a44:	tst	w0, #0xe
   32a48:	b.ne	32a80 <PyInit__decimal@@Base+0x16840>  // b.any
   32a4c:	ldr	x0, [x19, #8]
   32a50:	cbnz	x0, 32a5c <PyInit__decimal@@Base+0x1681c>
   32a54:	ldrb	w0, [x19]
   32a58:	tbz	w0, #1, 32ab0 <PyInit__decimal@@Base+0x16870>
   32a5c:	mov	x2, x22
   32a60:	mov	x0, x21
   32a64:	mov	w1, #0x100                 	// #256
   32a68:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   32a6c:	ldp	x19, x20, [sp, #16]
   32a70:	ldp	x21, x22, [sp, #32]
   32a74:	ldr	x23, [sp, #48]
   32a78:	ldp	x29, x30, [sp], #80
   32a7c:	ret
   32a80:	mov	x4, x22
   32a84:	mov	x3, x23
   32a88:	mov	x2, x19
   32a8c:	mov	x1, x20
   32a90:	mov	x0, x21
   32a94:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   32a98:	cbz	w0, 32a4c <PyInit__decimal@@Base+0x1680c>
   32a9c:	ldp	x19, x20, [sp, #16]
   32aa0:	ldp	x21, x22, [sp, #32]
   32aa4:	ldr	x23, [sp, #48]
   32aa8:	ldp	x29, x30, [sp], #80
   32aac:	ret
   32ab0:	mov	x1, x19
   32ab4:	add	x2, sp, #0x4c
   32ab8:	mov	w0, #0x0                   	// #0
   32abc:	bl	2b390 <PyInit__decimal@@Base+0xf150>
   32ac0:	mov	x4, x0
   32ac4:	ldp	x1, x0, [x23]
   32ac8:	add	x0, x0, x1
   32acc:	cmp	x4, x0, lsl #1
   32ad0:	b.hi	32a5c <PyInit__decimal@@Base+0x1681c>  // b.pmore
   32ad4:	ldr	w0, [sp, #76]
   32ad8:	tbnz	w0, #8, 32a5c <PyInit__decimal@@Base+0x1681c>
   32adc:	ldrb	w0, [x20]
   32ae0:	tbnz	w0, #1, 32b64 <PyInit__decimal@@Base+0x16924>
   32ae4:	ldrb	w3, [x19]
   32ae8:	mov	x5, #0x1                   	// #1
   32aec:	ldr	x19, [x20, #8]
   32af0:	movk	x5, #0x4ec8, lsl #16
   32af4:	sbfx	x3, x3, #0, #1
   32af8:	movk	x5, #0x6d67, lsl #32
   32afc:	movk	x5, #0x1bc1, lsl #48
   32b00:	mov	x1, x20
   32b04:	lsl	w3, w3, #1
   32b08:	mov	x2, x22
   32b0c:	add	w3, w3, #0x1
   32b10:	mov	x0, x21
   32b14:	sxtw	x3, w3
   32b18:	madd	x19, x3, x4, x19
   32b1c:	cmp	x19, x5
   32b20:	csel	x19, x19, x5, le
   32b24:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32b28:	mov	x0, #0xffffffff626fffff    	// #-2643460097
   32b2c:	mov	x2, x22
   32b30:	movk	x0, #0x2531, lsl #32
   32b34:	mov	x1, x23
   32b38:	movk	x0, #0xc87d, lsl #48
   32b3c:	cmp	x19, x0
   32b40:	csel	x19, x19, x0, ge  // ge = tcont
   32b44:	str	x19, [x21, #8]
   32b48:	mov	x0, x21
   32b4c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   32b50:	ldp	x19, x20, [sp, #16]
   32b54:	ldp	x21, x22, [sp, #32]
   32b58:	ldr	x23, [sp, #48]
   32b5c:	ldp	x29, x30, [sp], #80
   32b60:	ret
   32b64:	mov	x2, x22
   32b68:	mov	x1, x20
   32b6c:	mov	x0, x21
   32b70:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32b74:	b	32a6c <PyInit__decimal@@Base+0x1682c>
   32b78:	stp	x29, x30, [sp, #-64]!
   32b7c:	mov	x29, sp
   32b80:	stp	x19, x20, [sp, #16]
   32b84:	mov	x20, x3
   32b88:	stp	x21, x22, [sp, #32]
   32b8c:	mov	x22, x4
   32b90:	str	x23, [sp, #48]
   32b94:	mov	x23, x0
   32b98:	ldrb	w3, [x1]
   32b9c:	tst	w3, #0xe
   32ba0:	b.ne	32c18 <PyInit__decimal@@Base+0x169d8>  // b.any
   32ba4:	mov	x19, x2
   32ba8:	ldr	x3, [x20]
   32bac:	tbnz	x2, #63, 32bd8 <PyInit__decimal@@Base+0x16998>
   32bb0:	cmp	x2, x3
   32bb4:	b.le	32c40 <PyInit__decimal@@Base+0x16a00>
   32bb8:	mov	x2, x22
   32bbc:	mov	x0, x23
   32bc0:	ldp	x19, x20, [sp, #16]
   32bc4:	mov	w1, #0x100                 	// #256
   32bc8:	ldp	x21, x22, [sp, #32]
   32bcc:	ldr	x23, [sp, #48]
   32bd0:	ldp	x29, x30, [sp], #64
   32bd4:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   32bd8:	neg	x3, x3
   32bdc:	cmp	x3, x2
   32be0:	b.gt	32bb8 <PyInit__decimal@@Base+0x16978>
   32be4:	mov	x2, x4
   32be8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32bec:	cbz	w0, 32c2c <PyInit__decimal@@Base+0x169ec>
   32bf0:	mov	x1, x20
   32bf4:	mov	x0, x23
   32bf8:	bl	2b080 <PyInit__decimal@@Base+0xee40>
   32bfc:	neg	x1, x19
   32c00:	mov	x0, x23
   32c04:	ldp	x19, x20, [sp, #16]
   32c08:	ldp	x21, x22, [sp, #32]
   32c0c:	ldr	x23, [sp, #48]
   32c10:	ldp	x29, x30, [sp], #64
   32c14:	b	2eb90 <PyInit__decimal@@Base+0x12950>
   32c18:	mov	x21, x1
   32c1c:	mov	x2, x20
   32c20:	mov	x3, x4
   32c24:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   32c28:	cbz	w0, 32c64 <PyInit__decimal@@Base+0x16a24>
   32c2c:	ldp	x19, x20, [sp, #16]
   32c30:	ldp	x21, x22, [sp, #32]
   32c34:	ldr	x23, [sp, #48]
   32c38:	ldp	x29, x30, [sp], #64
   32c3c:	ret
   32c40:	mov	x3, x4
   32c44:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   32c48:	mov	x1, x20
   32c4c:	mov	x0, x23
   32c50:	ldp	x19, x20, [sp, #16]
   32c54:	ldp	x21, x22, [sp, #32]
   32c58:	ldr	x23, [sp, #48]
   32c5c:	ldp	x29, x30, [sp], #64
   32c60:	b	2b080 <PyInit__decimal@@Base+0xee40>
   32c64:	mov	x2, x22
   32c68:	mov	x1, x21
   32c6c:	mov	x0, x23
   32c70:	ldp	x19, x20, [sp, #16]
   32c74:	ldp	x21, x22, [sp, #32]
   32c78:	ldr	x23, [sp, #48]
   32c7c:	ldp	x29, x30, [sp], #64
   32c80:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32c84:	nop
   32c88:	stp	x29, x30, [sp, #-80]!
   32c8c:	mov	x29, sp
   32c90:	stp	x19, x20, [sp, #16]
   32c94:	mov	x20, x1
   32c98:	mov	x19, x2
   32c9c:	stp	x21, x22, [sp, #32]
   32ca0:	mov	x21, x0
   32ca4:	mov	x22, x4
   32ca8:	str	x23, [sp, #48]
   32cac:	mov	x23, x3
   32cb0:	str	wzr, [sp, #76]
   32cb4:	ldrb	w0, [x1]
   32cb8:	tst	w0, #0xe
   32cbc:	b.ne	32d00 <PyInit__decimal@@Base+0x16ac0>  // b.any
   32cc0:	ldrb	w0, [x2]
   32cc4:	tst	w0, #0xe
   32cc8:	b.ne	32d00 <PyInit__decimal@@Base+0x16ac0>  // b.any
   32ccc:	ldr	x0, [x19, #8]
   32cd0:	cbnz	x0, 32cdc <PyInit__decimal@@Base+0x16a9c>
   32cd4:	ldrb	w0, [x19]
   32cd8:	tbz	w0, #1, 32d30 <PyInit__decimal@@Base+0x16af0>
   32cdc:	mov	x2, x22
   32ce0:	mov	x0, x21
   32ce4:	mov	w1, #0x100                 	// #256
   32ce8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   32cec:	ldp	x19, x20, [sp, #16]
   32cf0:	ldp	x21, x22, [sp, #32]
   32cf4:	ldr	x23, [sp, #48]
   32cf8:	ldp	x29, x30, [sp], #80
   32cfc:	ret
   32d00:	mov	x4, x22
   32d04:	mov	x3, x23
   32d08:	mov	x2, x19
   32d0c:	mov	x1, x20
   32d10:	mov	x0, x21
   32d14:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   32d18:	cbz	w0, 32ccc <PyInit__decimal@@Base+0x16a8c>
   32d1c:	ldp	x19, x20, [sp, #16]
   32d20:	ldp	x21, x22, [sp, #32]
   32d24:	ldr	x23, [sp, #48]
   32d28:	ldp	x29, x30, [sp], #80
   32d2c:	ret
   32d30:	mov	x1, x19
   32d34:	add	x2, sp, #0x4c
   32d38:	mov	w0, #0x0                   	// #0
   32d3c:	bl	2b390 <PyInit__decimal@@Base+0xf150>
   32d40:	ldr	w1, [sp, #76]
   32d44:	tbnz	w1, #8, 32cdc <PyInit__decimal@@Base+0x16a9c>
   32d48:	ldrb	w2, [x19]
   32d4c:	tbz	x0, #63, 32d70 <PyInit__decimal@@Base+0x16b30>
   32d50:	and	w2, w2, #0x1
   32d54:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   32d58:	cmp	x0, x19
   32d5c:	csel	w2, w2, wzr, eq  // eq = none
   32d60:	cbnz	w2, 32e04 <PyInit__decimal@@Base+0x16bc4>
   32d64:	orr	w1, w1, #0x100
   32d68:	str	w1, [sp, #76]
   32d6c:	b	32cdc <PyInit__decimal@@Base+0x16a9c>
   32d70:	ldr	x1, [x23]
   32d74:	tst	x2, #0x1
   32d78:	cneg	x19, x0, ne  // ne = any
   32d7c:	cmp	x1, x19
   32d80:	b.lt	32cdc <PyInit__decimal@@Base+0x16a9c>  // b.tstop
   32d84:	neg	x1, x1
   32d88:	cmp	x1, x19
   32d8c:	b.gt	32cdc <PyInit__decimal@@Base+0x16a9c>
   32d90:	ldrb	w0, [x20]
   32d94:	tbnz	w0, #1, 32df0 <PyInit__decimal@@Base+0x16bb0>
   32d98:	tbnz	x19, #63, 32dc0 <PyInit__decimal@@Base+0x16b80>
   32d9c:	mov	x3, x22
   32da0:	mov	x2, x19
   32da4:	mov	x1, x20
   32da8:	mov	x0, x21
   32dac:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   32db0:	mov	x1, x23
   32db4:	mov	x0, x21
   32db8:	bl	2b080 <PyInit__decimal@@Base+0xee40>
   32dbc:	b	32cec <PyInit__decimal@@Base+0x16aac>
   32dc0:	mov	x2, x22
   32dc4:	mov	x1, x20
   32dc8:	mov	x0, x21
   32dcc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32dd0:	cbz	w0, 32cec <PyInit__decimal@@Base+0x16aac>
   32dd4:	mov	x1, x23
   32dd8:	mov	x0, x21
   32ddc:	bl	2b080 <PyInit__decimal@@Base+0xee40>
   32de0:	neg	x1, x19
   32de4:	mov	x0, x21
   32de8:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   32dec:	b	32cec <PyInit__decimal@@Base+0x16aac>
   32df0:	mov	x2, x22
   32df4:	mov	x1, x20
   32df8:	mov	x0, x21
   32dfc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   32e00:	b	32cec <PyInit__decimal@@Base+0x16aac>
   32e04:	ldr	x1, [x23]
   32e08:	b	32d84 <PyInit__decimal@@Base+0x16b44>
   32e0c:	nop
   32e10:	stp	x29, x30, [sp, #-80]!
   32e14:	mov	x6, x2
   32e18:	mov	x2, x4
   32e1c:	mov	x29, sp
   32e20:	stp	x19, x20, [sp, #16]
   32e24:	mov	x20, x0
   32e28:	ldrb	w5, [x1]
   32e2c:	tst	w5, #0xe
   32e30:	b.ne	32e4c <PyInit__decimal@@Base+0x16c0c>  // b.any
   32e34:	ldrb	w7, [x6]
   32e38:	orr	w5, w7, w5
   32e3c:	and	w7, w7, #0xe
   32e40:	and	w5, w5, #0x1
   32e44:	orr	w5, w5, w7
   32e48:	cbz	w5, 32e60 <PyInit__decimal@@Base+0x16c20>
   32e4c:	mov	x0, x20
   32e50:	mov	w1, #0x100                 	// #256
   32e54:	ldp	x19, x20, [sp, #16]
   32e58:	ldp	x29, x30, [sp], #80
   32e5c:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   32e60:	ldr	x4, [x1, #8]
   32e64:	cbnz	x4, 32e4c <PyInit__decimal@@Base+0x16c0c>
   32e68:	stp	x21, x22, [sp, #32]
   32e6c:	ldr	x21, [x6, #8]
   32e70:	cbnz	x21, 33118 <PyInit__decimal@@Base+0x16ed8>
   32e74:	ldr	x5, [x1, #16]
   32e78:	ldr	x7, [x6, #16]
   32e7c:	cmp	x7, x5
   32e80:	csel	x22, x1, x6, le
   32e84:	csel	x19, x6, x1, le
   32e88:	ldr	x5, [x0, #32]
   32e8c:	ldr	x1, [x22, #24]
   32e90:	str	x23, [sp, #48]
   32e94:	adrp	x23, 65000 <PyInit__decimal@@Base+0x48dc0>
   32e98:	ldr	x4, [x23, #1880]
   32e9c:	cmp	x1, x4
   32ea0:	csel	x1, x1, x4, ge  // ge = tcont
   32ea4:	cmp	x1, x5
   32ea8:	b.eq	32ebc <PyInit__decimal@@Base+0x16c7c>  // b.none
   32eac:	ldrb	w4, [x0]
   32eb0:	tbz	w4, #5, 33144 <PyInit__decimal@@Base+0x16f04>
   32eb4:	cmp	x1, x5
   32eb8:	b.gt	33120 <PyInit__decimal@@Base+0x16ee0>
   32ebc:	ldr	x0, [x19, #24]
   32ec0:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   32ec4:	adrp	x12, 48000 <PyInit__decimal@@Base+0x2bdc0>
   32ec8:	movk	x10, #0xcccd
   32ecc:	sub	x0, x0, #0x1
   32ed0:	cmp	x0, #0x0
   32ed4:	ldr	x14, [x19, #40]
   32ed8:	ldr	x13, [x22, #40]
   32edc:	b.le	33154 <PyInit__decimal@@Base+0x16f14>
   32ee0:	add	x6, x12, #0x180
   32ee4:	lsl	x15, x21, #3
   32ee8:	add	x11, x6, #0x98
   32eec:	mov	x4, #0x0                   	// #0
   32ef0:	ldr	x8, [x14, x21, lsl #3]
   32ef4:	ldr	x7, [x13, x21, lsl #3]
   32ef8:	b	32f18 <PyInit__decimal@@Base+0x16cd8>
   32efc:	cmp	x5, x1
   32f00:	b.eq	32f0c <PyInit__decimal@@Base+0x16ccc>  // b.none
   32f04:	ldr	x0, [x6]
   32f08:	add	x4, x4, x0
   32f0c:	add	x6, x6, #0x8
   32f10:	cmp	x11, x6
   32f14:	b.eq	32f68 <PyInit__decimal@@Base+0x16d28>  // b.none
   32f18:	umulh	x9, x8, x10
   32f1c:	umulh	x0, x7, x10
   32f20:	lsr	x5, x9, #3
   32f24:	lsr	x1, x0, #3
   32f28:	add	x5, x5, x5, lsl #2
   32f2c:	add	x1, x1, x1, lsl #2
   32f30:	sub	x5, x8, x5, lsl #1
   32f34:	lsr	x8, x9, #3
   32f38:	sub	x1, x7, x1, lsl #1
   32f3c:	cmp	x5, #0x1
   32f40:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   32f44:	lsr	x7, x0, #3
   32f48:	b.ls	32efc <PyInit__decimal@@Base+0x16cbc>  // b.plast
   32f4c:	mov	x0, x20
   32f50:	mov	w1, #0x100                 	// #256
   32f54:	ldp	x19, x20, [sp, #16]
   32f58:	ldp	x21, x22, [sp, #32]
   32f5c:	ldr	x23, [sp, #48]
   32f60:	ldp	x29, x30, [sp], #80
   32f64:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   32f68:	ldr	x0, [x20, #40]
   32f6c:	add	x21, x21, #0x1
   32f70:	str	x4, [x0, x15]
   32f74:	ldr	x0, [x19, #24]
   32f78:	sub	x0, x0, #0x1
   32f7c:	cmp	x0, x21
   32f80:	b.gt	32ee0 <PyInit__decimal@@Base+0x16ca0>
   32f84:	lsl	x16, x21, #3
   32f88:	add	x14, x14, x16
   32f8c:	add	x4, x13, x16
   32f90:	add	x1, x12, #0x180
   32f94:	ldr	x5, [x14]
   32f98:	ldr	x0, [x1, #72]
   32f9c:	ldr	x6, [x4]
   32fa0:	cmp	x5, x0
   32fa4:	b.cs	33160 <PyInit__decimal@@Base+0x16f20>  // b.hs, b.nlast
   32fa8:	ldr	x0, [x1, #32]
   32fac:	cmp	x5, x0
   32fb0:	b.cs	3319c <PyInit__decimal@@Base+0x16f5c>  // b.hs, b.nlast
   32fb4:	ldr	x0, [x1, #16]
   32fb8:	cmp	x5, x0
   32fbc:	b.cs	33290 <PyInit__decimal@@Base+0x17050>  // b.hs, b.nlast
   32fc0:	ldr	x0, [x1, #8]
   32fc4:	cmp	x5, x0
   32fc8:	cset	w0, cs  // cs = hs, nlast
   32fcc:	add	w0, w0, #0x1
   32fd0:	sub	w0, w0, #0x1
   32fd4:	mov	x14, #0xcccccccccccccccc    	// #-3689348814741910324
   32fd8:	adrp	x17, 48000 <PyInit__decimal@@Base+0x2bdc0>
   32fdc:	add	x15, x0, #0x2
   32fe0:	add	x17, x17, #0x178
   32fe4:	mov	x4, #0x1                   	// #1
   32fe8:	mov	x11, #0x0                   	// #0
   32fec:	movk	x14, #0xcccd
   32ff0:	b	32ff8 <PyInit__decimal@@Base+0x16db8>
   32ff4:	mov	x4, x10
   32ff8:	umulh	x9, x5, x14
   32ffc:	add	x10, x4, #0x1
   33000:	umulh	x8, x6, x14
   33004:	mov	w7, w4
   33008:	lsr	x1, x9, #3
   3300c:	lsr	x0, x8, #3
   33010:	add	x1, x1, x1, lsl #2
   33014:	add	x0, x0, x0, lsl #2
   33018:	sub	x1, x5, x1, lsl #1
   3301c:	lsr	x5, x9, #3
   33020:	sub	x0, x6, x0, lsl #1
   33024:	cmp	x1, #0x1
   33028:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   3302c:	lsr	x6, x8, #3
   33030:	b.hi	32f4c <PyInit__decimal@@Base+0x16d0c>  // b.pmore
   33034:	cmp	x1, x0
   33038:	b.eq	33044 <PyInit__decimal@@Base+0x16e04>  // b.none
   3303c:	ldr	x0, [x17, x4, lsl #3]
   33040:	add	x11, x11, x0
   33044:	cmp	x15, x10
   33048:	b.ne	32ff4 <PyInit__decimal@@Base+0x16db4>  // b.any
   3304c:	cmp	w7, #0x12
   33050:	b.gt	330c0 <PyInit__decimal@@Base+0x16e80>
   33054:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   33058:	movk	x8, #0xcccd
   3305c:	umulh	x5, x6, x8
   33060:	lsr	x0, x5, #3
   33064:	mov	x5, x0
   33068:	add	x0, x0, x0, lsl #2
   3306c:	sub	x0, x6, x0, lsl #1
   33070:	cmp	x0, #0x1
   33074:	b.hi	32f4c <PyInit__decimal@@Base+0x16d0c>  // b.pmore
   33078:	sxtw	x1, w7
   3307c:	mov	w7, #0x12                  	// #18
   33080:	sub	w4, w7, w4
   33084:	add	x12, x12, #0x180
   33088:	add	x7, x4, x1
   3308c:	b	330a4 <PyInit__decimal@@Base+0x16e64>
   33090:	add	x0, x0, x0, lsl #2
   33094:	sub	x0, x5, x0, lsl #1
   33098:	lsr	x5, x6, #3
   3309c:	cmp	x0, #0x1
   330a0:	b.hi	32f4c <PyInit__decimal@@Base+0x16d0c>  // b.pmore
   330a4:	ldr	x4, [x12, x1, lsl #3]
   330a8:	umulh	x6, x5, x8
   330ac:	cmp	x7, x1
   330b0:	add	x1, x1, #0x1
   330b4:	madd	x11, x0, x4, x11
   330b8:	lsr	x0, x6, #3
   330bc:	b.ne	33090 <PyInit__decimal@@Base+0x16e50>  // b.any
   330c0:	ldr	x7, [x20, #40]
   330c4:	add	x21, x21, #0x1
   330c8:	str	x11, [x7, x16]
   330cc:	ldr	x0, [x22, #24]
   330d0:	cmp	x21, x0
   330d4:	b.ge	3320c <PyInit__decimal@@Base+0x16fcc>  // b.tcont
   330d8:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   330dc:	movk	x6, #0xcccd
   330e0:	ldr	x8, [x13, x21, lsl #3]
   330e4:	mov	w5, #0x13                  	// #19
   330e8:	mov	x1, x8
   330ec:	b	330f8 <PyInit__decimal@@Base+0x16eb8>
   330f0:	subs	w5, w5, #0x1
   330f4:	b.eq	331f8 <PyInit__decimal@@Base+0x16fb8>  // b.none
   330f8:	umulh	x4, x1, x6
   330fc:	lsr	x0, x4, #3
   33100:	add	x0, x0, x0, lsl #2
   33104:	sub	x0, x1, x0, lsl #1
   33108:	lsr	x1, x4, #3
   3310c:	cmp	x0, #0x1
   33110:	b.ls	330f0 <PyInit__decimal@@Base+0x16eb0>  // b.plast
   33114:	b	32f4c <PyInit__decimal@@Base+0x16d0c>
   33118:	ldp	x21, x22, [sp, #32]
   3311c:	b	32e4c <PyInit__decimal@@Base+0x16c0c>
   33120:	stp	x2, x3, [sp, #64]
   33124:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   33128:	ldp	x2, x3, [sp, #64]
   3312c:	cbnz	w0, 32ebc <PyInit__decimal@@Base+0x16c7c>
   33130:	ldp	x19, x20, [sp, #16]
   33134:	ldp	x21, x22, [sp, #32]
   33138:	ldr	x23, [sp, #48]
   3313c:	ldp	x29, x30, [sp], #80
   33140:	ret
   33144:	stp	x2, x3, [sp, #64]
   33148:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3314c:	ldp	x2, x3, [sp, #64]
   33150:	b	3312c <PyInit__decimal@@Base+0x16eec>
   33154:	mov	x4, x13
   33158:	mov	x16, #0x0                   	// #0
   3315c:	b	32f90 <PyInit__decimal@@Base+0x16d50>
   33160:	ldr	x0, [x1, #112]
   33164:	cmp	x5, x0
   33168:	b.cs	331cc <PyInit__decimal@@Base+0x16f8c>  // b.hs, b.nlast
   3316c:	ldr	x0, [x1, #88]
   33170:	cmp	x5, x0
   33174:	b.cc	332b8 <PyInit__decimal@@Base+0x17078>  // b.lo, b.ul, b.last
   33178:	ldr	x4, [x1, #104]
   3317c:	mov	w0, #0xe                   	// #14
   33180:	cmp	x5, x4
   33184:	b.cs	32fd0 <PyInit__decimal@@Base+0x16d90>  // b.hs, b.nlast
   33188:	ldr	x0, [x1, #96]
   3318c:	cmp	x5, x0
   33190:	cset	w0, cs  // cs = hs, nlast
   33194:	add	w0, w0, #0xc
   33198:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   3319c:	ldr	x0, [x1, #48]
   331a0:	cmp	x5, x0
   331a4:	b.cc	332cc <PyInit__decimal@@Base+0x1708c>  // b.lo, b.ul, b.last
   331a8:	ldr	x4, [x1, #64]
   331ac:	mov	w0, #0x9                   	// #9
   331b0:	cmp	x5, x4
   331b4:	b.cs	32fd0 <PyInit__decimal@@Base+0x16d90>  // b.hs, b.nlast
   331b8:	ldr	x0, [x1, #56]
   331bc:	cmp	x5, x0
   331c0:	cset	w0, cs  // cs = hs, nlast
   331c4:	add	w0, w0, #0x7
   331c8:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   331cc:	ldr	x0, [x1, #144]
   331d0:	cmp	x5, x0
   331d4:	b.cs	332a4 <PyInit__decimal@@Base+0x17064>  // b.hs, b.nlast
   331d8:	ldr	x0, [x1, #128]
   331dc:	cmp	x5, x0
   331e0:	b.cs	332e0 <PyInit__decimal@@Base+0x170a0>  // b.hs, b.nlast
   331e4:	ldr	x0, [x1, #120]
   331e8:	cmp	x5, x0
   331ec:	cset	w0, cs  // cs = hs, nlast
   331f0:	add	w0, w0, #0xf
   331f4:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   331f8:	str	x8, [x7, x21, lsl #3]
   331fc:	add	x21, x21, #0x1
   33200:	ldr	x0, [x22, #24]
   33204:	cmp	x0, x21
   33208:	b.gt	330e0 <PyInit__decimal@@Base+0x16ea0>
   3320c:	ldrb	w5, [x20]
   33210:	cmp	x0, #0x1
   33214:	str	xzr, [x20, #8]
   33218:	and	w1, w5, #0xfffffff0
   3321c:	strb	w1, [x20]
   33220:	b.le	33240 <PyInit__decimal@@Base+0x17000>
   33224:	sub	x7, x7, #0x8
   33228:	b	33238 <PyInit__decimal@@Base+0x16ff8>
   3322c:	sub	x0, x0, #0x1
   33230:	cmp	x0, #0x1
   33234:	b.eq	33240 <PyInit__decimal@@Base+0x17000>  // b.none
   33238:	ldr	x1, [x7, x0, lsl #3]
   3323c:	cbz	x1, 3322c <PyInit__decimal@@Base+0x16fec>
   33240:	ldr	x1, [x23, #1880]
   33244:	str	x0, [x20, #24]
   33248:	ldr	x4, [x20, #32]
   3324c:	cmp	x1, x0
   33250:	csel	x1, x1, x0, ge  // ge = tcont
   33254:	cmp	x1, x4
   33258:	b.eq	33268 <PyInit__decimal@@Base+0x17028>  // b.none
   3325c:	tbz	w5, #5, 33308 <PyInit__decimal@@Base+0x170c8>
   33260:	cmp	x1, x4
   33264:	b.gt	332f4 <PyInit__decimal@@Base+0x170b4>
   33268:	mov	x0, x20
   3326c:	str	x3, [sp, #64]
   33270:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   33274:	ldp	x19, x20, [sp, #16]
   33278:	ldp	x21, x22, [sp, #32]
   3327c:	ldr	x23, [sp, #48]
   33280:	ldr	x3, [sp, #64]
   33284:	ldp	x29, x30, [sp], #80
   33288:	mov	x1, x3
   3328c:	b	2b080 <PyInit__decimal@@Base+0xee40>
   33290:	ldr	x0, [x1, #24]
   33294:	cmp	x5, x0
   33298:	cset	w0, cs  // cs = hs, nlast
   3329c:	add	w0, w0, #0x3
   332a0:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   332a4:	ldr	x0, [x1, #152]
   332a8:	cmp	x5, x0
   332ac:	cset	w0, cs  // cs = hs, nlast
   332b0:	add	w0, w0, #0x13
   332b4:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   332b8:	ldr	x0, [x1, #80]
   332bc:	cmp	x5, x0
   332c0:	cset	w0, cs  // cs = hs, nlast
   332c4:	add	w0, w0, #0xa
   332c8:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   332cc:	ldr	x0, [x1, #40]
   332d0:	cmp	x5, x0
   332d4:	cset	w0, cs  // cs = hs, nlast
   332d8:	add	w0, w0, #0x5
   332dc:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   332e0:	ldr	x0, [x1, #136]
   332e4:	cmp	x5, x0
   332e8:	cset	w0, cs  // cs = hs, nlast
   332ec:	add	w0, w0, #0x11
   332f0:	b	32fd0 <PyInit__decimal@@Base+0x16d90>
   332f4:	mov	x0, x20
   332f8:	str	x3, [sp, #64]
   332fc:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   33300:	ldr	x3, [sp, #64]
   33304:	b	33268 <PyInit__decimal@@Base+0x17028>
   33308:	mov	x0, x20
   3330c:	str	x3, [sp, #64]
   33310:	bl	28670 <PyInit__decimal@@Base+0xc430>
   33314:	ldr	x3, [sp, #64]
   33318:	b	33268 <PyInit__decimal@@Base+0x17028>
   3331c:	nop
   33320:	stp	x29, x30, [sp, #-48]!
   33324:	mov	x29, sp
   33328:	stp	x19, x20, [sp, #16]
   3332c:	mov	x20, x3
   33330:	mov	x19, x0
   33334:	str	x21, [sp, #32]
   33338:	mov	x21, x4
   3333c:	ldrb	w7, [x1]
   33340:	ldrb	w3, [x2]
   33344:	orr	w4, w7, w3
   33348:	tst	w4, #0xe
   3334c:	b.eq	333e4 <PyInit__decimal@@Base+0x171a4>  // b.none
   33350:	tst	w4, #0xc
   33354:	b.ne	3338c <PyInit__decimal@@Base+0x1714c>  // b.any
   33358:	and	w1, w3, #0x1
   3335c:	tbz	w7, #1, 33378 <PyInit__decimal@@Base+0x17138>
   33360:	and	w7, w7, #0x1
   33364:	cmp	w1, w7
   33368:	b.eq	33370 <PyInit__decimal@@Base+0x17130>  // b.none
   3336c:	tbnz	w3, #1, 33430 <PyInit__decimal@@Base+0x171f0>
   33370:	mov	w1, w7
   33374:	mov	x0, x19
   33378:	ldp	x19, x20, [sp, #16]
   3337c:	mov	w2, #0x2                   	// #2
   33380:	ldr	x21, [sp, #32]
   33384:	ldp	x29, x30, [sp], #48
   33388:	b	2b9d0 <PyInit__decimal@@Base+0xf790>
   3338c:	mov	x5, x1
   33390:	tbnz	w7, #3, 33414 <PyInit__decimal@@Base+0x171d4>
   33394:	tbz	w3, #3, 33424 <PyInit__decimal@@Base+0x171e4>
   33398:	ldr	w0, [x21]
   3339c:	mov	x5, x2
   333a0:	orr	w0, w0, #0x100
   333a4:	str	w0, [x21]
   333a8:	mov	x2, x21
   333ac:	mov	x1, x5
   333b0:	mov	x0, x19
   333b4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   333b8:	ldrb	w1, [x19]
   333bc:	mov	x0, x19
   333c0:	and	w1, w1, #0xfffffff1
   333c4:	orr	w1, w1, #0x4
   333c8:	strb	w1, [x19]
   333cc:	ldr	w2, [x20, #40]
   333d0:	ldr	x1, [x20]
   333d4:	ldp	x19, x20, [sp, #16]
   333d8:	ldr	x21, [sp, #32]
   333dc:	ldp	x29, x30, [sp], #48
   333e0:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   333e4:	mov	x6, x21
   333e8:	add	x5, x20, #0x24
   333ec:	mov	x4, x20
   333f0:	and	w3, w3, #0x1
   333f4:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   333f8:	mov	x2, x21
   333fc:	mov	x1, x20
   33400:	mov	x0, x19
   33404:	ldp	x19, x20, [sp, #16]
   33408:	ldr	x21, [sp, #32]
   3340c:	ldp	x29, x30, [sp], #48
   33410:	b	2f360 <PyInit__decimal@@Base+0x13120>
   33414:	ldr	w0, [x21]
   33418:	orr	w0, w0, #0x100
   3341c:	str	w0, [x21]
   33420:	b	333a8 <PyInit__decimal@@Base+0x17168>
   33424:	tst	x7, #0x4
   33428:	csel	x5, x1, x2, ne  // ne = any
   3342c:	b	333a8 <PyInit__decimal@@Base+0x17168>
   33430:	mov	x2, x21
   33434:	mov	w1, #0x100                 	// #256
   33438:	ldp	x19, x20, [sp, #16]
   3343c:	ldr	x21, [sp, #32]
   33440:	ldp	x29, x30, [sp], #48
   33444:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   33448:	stp	x29, x30, [sp, #-48]!
   3344c:	mov	x29, sp
   33450:	stp	x19, x20, [sp, #16]
   33454:	mov	x20, x3
   33458:	mov	x19, x0
   3345c:	str	x21, [sp, #32]
   33460:	mov	x21, x4
   33464:	ldrb	w7, [x1]
   33468:	ldrb	w3, [x2]
   3346c:	orr	w4, w7, w3
   33470:	tst	w4, #0xe
   33474:	b.eq	33510 <PyInit__decimal@@Base+0x172d0>  // b.none
   33478:	tst	w4, #0xc
   3347c:	b.ne	334b8 <PyInit__decimal@@Base+0x17278>  // b.any
   33480:	mvn	w1, w3
   33484:	and	w1, w1, #0x1
   33488:	tbz	w7, #1, 334a4 <PyInit__decimal@@Base+0x17264>
   3348c:	and	w7, w7, #0x1
   33490:	cmp	w1, w7
   33494:	b.eq	3349c <PyInit__decimal@@Base+0x1725c>  // b.none
   33498:	tbnz	w3, #1, 33560 <PyInit__decimal@@Base+0x17320>
   3349c:	mov	w1, w7
   334a0:	mov	x0, x19
   334a4:	ldp	x19, x20, [sp, #16]
   334a8:	mov	w2, #0x2                   	// #2
   334ac:	ldr	x21, [sp, #32]
   334b0:	ldp	x29, x30, [sp], #48
   334b4:	b	2b9d0 <PyInit__decimal@@Base+0xf790>
   334b8:	mov	x5, x1
   334bc:	tbnz	w7, #3, 33544 <PyInit__decimal@@Base+0x17304>
   334c0:	tbz	w3, #3, 33554 <PyInit__decimal@@Base+0x17314>
   334c4:	ldr	w0, [x21]
   334c8:	mov	x5, x2
   334cc:	orr	w0, w0, #0x100
   334d0:	str	w0, [x21]
   334d4:	mov	x2, x21
   334d8:	mov	x1, x5
   334dc:	mov	x0, x19
   334e0:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   334e4:	ldrb	w1, [x19]
   334e8:	mov	x0, x19
   334ec:	and	w1, w1, #0xfffffff1
   334f0:	orr	w1, w1, #0x4
   334f4:	strb	w1, [x19]
   334f8:	ldr	w2, [x20, #40]
   334fc:	ldr	x1, [x20]
   33500:	ldp	x19, x20, [sp, #16]
   33504:	ldr	x21, [sp, #32]
   33508:	ldp	x29, x30, [sp], #48
   3350c:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   33510:	mvn	w3, w3
   33514:	mov	x6, x21
   33518:	add	x5, x20, #0x24
   3351c:	mov	x4, x20
   33520:	and	w3, w3, #0x1
   33524:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   33528:	mov	x2, x21
   3352c:	mov	x1, x20
   33530:	mov	x0, x19
   33534:	ldp	x19, x20, [sp, #16]
   33538:	ldr	x21, [sp, #32]
   3353c:	ldp	x29, x30, [sp], #48
   33540:	b	2f360 <PyInit__decimal@@Base+0x13120>
   33544:	ldr	w0, [x21]
   33548:	orr	w0, w0, #0x100
   3354c:	str	w0, [x21]
   33550:	b	334d4 <PyInit__decimal@@Base+0x17294>
   33554:	tst	x7, #0x4
   33558:	csel	x5, x1, x2, ne  // ne = any
   3355c:	b	334d4 <PyInit__decimal@@Base+0x17294>
   33560:	mov	x2, x21
   33564:	mov	w1, #0x100                 	// #256
   33568:	ldp	x19, x20, [sp, #16]
   3356c:	ldr	x21, [sp, #32]
   33570:	ldp	x29, x30, [sp], #48
   33574:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   33578:	sub	sp, sp, #0x800
   3357c:	mov	w4, #0x50                  	// #80
   33580:	add	x9, sp, #0x200
   33584:	mov	w11, #0x30                  	// #48
   33588:	movi	v2.4s, #0x0
   3358c:	mov	w10, #0xffffff90            	// #-112
   33590:	stp	x29, x30, [sp]
   33594:	mov	x29, sp
   33598:	add	x8, sp, #0x400
   3359c:	add	x7, sp, #0xa0
   335a0:	stp	x19, x20, [sp, #16]
   335a4:	mov	x19, x1
   335a8:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   335ac:	stp	x25, x26, [sp, #64]
   335b0:	cmp	x19, x0
   335b4:	add	x6, sp, #0xa8
   335b8:	ldr	q1, [x1, #1760]
   335bc:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   335c0:	stp	x27, x28, [sp, #80]
   335c4:	mov	x27, x0
   335c8:	add	x0, sp, #0x230
   335cc:	ldr	q4, [x1, #2128]
   335d0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   335d4:	ldur	q6, [x19, #8]
   335d8:	mov	x5, #0x5                   	// #5
   335dc:	ldr	q0, [x1, #2176]
   335e0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   335e4:	ldur	q5, [x19, #24]
   335e8:	mov	x12, #0x3                   	// #3
   335ec:	ldr	q3, [x1, #2224]
   335f0:	str	x3, [sp, #128]
   335f4:	ldrb	w1, [x19]
   335f8:	mov	x20, x2
   335fc:	str	wzr, [sp, #156]
   33600:	and	w1, w1, #0xf
   33604:	stp	x5, x12, [sp, #160]
   33608:	orr	w1, w1, w4
   3360c:	ldr	x4, [x19, #40]
   33610:	strb	w1, [sp, #176]
   33614:	str	x4, [sp, #216]
   33618:	strb	w11, [sp, #224]
   3361c:	str	x9, [sp, #264]
   33620:	strb	w11, [sp, #272]
   33624:	str	x8, [sp, #312]
   33628:	strb	w10, [sp, #320]
   3362c:	str	x7, [sp, #360]
   33630:	strb	w10, [sp, #368]
   33634:	str	x6, [sp, #408]
   33638:	stur	q6, [sp, #184]
   3363c:	stur	q5, [sp, #200]
   33640:	stur	q4, [x0, #-232]
   33644:	stur	q0, [x0, #-216]
   33648:	stur	q3, [x0, #-184]
   3364c:	stur	q0, [x0, #-168]
   33650:	ldr	x0, [x19, #8]
   33654:	str	x0, [sp, #120]
   33658:	stur	q2, [x9, #-232]
   3365c:	stur	q1, [x9, #-216]
   33660:	stur	q2, [sp, #232]
   33664:	stur	q1, [sp, #248]
   33668:	ldr	x1, [x19, #16]
   3366c:	ldr	x0, [x19, #24]
   33670:	b.eq	33ce4 <PyInit__decimal@@Base+0x17aa4>  // b.none
   33674:	add	x2, sp, #0xb0
   33678:	stp	x21, x22, [sp, #32]
   3367c:	mov	x26, x2
   33680:	ldr	x6, [sp, #120]
   33684:	stp	x23, x24, [sp, #48]
   33688:	str	x2, [sp, #136]
   3368c:	mov	x3, #0x435f                	// #17247
   33690:	add	x6, x1, x6
   33694:	movk	x3, #0xd79, lsl #16
   33698:	movk	x3, #0x35e5, lsl #32
   3369c:	movk	x3, #0xd794, lsl #48
   336a0:	umulh	x3, x1, x3
   336a4:	lsr	x3, x3, #4
   336a8:	add	x2, x3, x3, lsl #2
   336ac:	lsl	x2, x2, #2
   336b0:	sub	x3, x2, x3
   336b4:	sub	x3, x1, x3
   336b8:	tbnz	w6, #0, 33794 <PyInit__decimal@@Base+0x17554>
   336bc:	cmp	x1, #0x8
   336c0:	add	x4, x4, x0, lsl #3
   336c4:	mov	x2, #0x2                   	// #2
   336c8:	mov	x6, #0x8                   	// #8
   336cc:	csel	x6, x1, x6, le
   336d0:	sub	x1, x2, x1
   336d4:	cmp	x3, #0x0
   336d8:	str	x1, [x26, #8]
   336dc:	mov	x8, #0x13                  	// #19
   336e0:	csel	x3, x3, x8, ne  // ne = any
   336e4:	and	x7, x6, #0xffffffff
   336e8:	cmp	x3, w6, uxtw
   336ec:	ldur	x2, [x4, #-8]
   336f0:	b.cc	33c7c <PyInit__decimal@@Base+0x17a3c>  // b.lo, b.ul, b.last
   336f4:	sub	x3, x3, x7
   336f8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   336fc:	add	x0, x0, #0x180
   33700:	ldr	x0, [x0, x3, lsl #3]
   33704:	udiv	x2, x2, x0
   33708:	cmp	w6, #0x7
   3370c:	b.gt	33728 <PyInit__decimal@@Base+0x174e8>
   33710:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   33714:	mov	w3, #0x8                   	// #8
   33718:	add	x0, x0, #0x180
   3371c:	sub	w6, w3, w6
   33720:	ldr	x0, [x0, w6, sxtw #3]
   33724:	mul	x2, x2, x0
   33728:	ldr	x0, [x19, #8]
   3372c:	mov	x3, #0x2710                	// #10000
   33730:	mov	x4, #0x3e8                 	// #1000
   33734:	sub	x1, x0, x1
   33738:	add	x1, x1, x1, lsr #63
   3373c:	asr	x0, x1, #1
   33740:	str	x0, [sp, #112]
   33744:	nop
   33748:	add	x19, x4, x3
   3374c:	orr	x0, x19, #0x1
   33750:	lsr	x19, x19, #1
   33754:	mul	x1, x19, x19
   33758:	add	x0, x0, x1
   3375c:	cmp	x1, x2
   33760:	b.hi	3378c <PyInit__decimal@@Base+0x1754c>  // b.pmore
   33764:	cmp	x0, x2
   33768:	b.hi	33804 <PyInit__decimal@@Base+0x175c4>  // b.pmore
   3376c:	add	x4, x19, #0x1
   33770:	add	x19, x4, x3
   33774:	orr	x0, x19, #0x1
   33778:	lsr	x19, x19, #1
   3377c:	mul	x1, x19, x19
   33780:	add	x0, x0, x1
   33784:	cmp	x1, x2
   33788:	b.ls	33764 <PyInit__decimal@@Base+0x17524>  // b.plast
   3378c:	sub	x3, x19, #0x1
   33790:	b	33748 <PyInit__decimal@@Base+0x17508>
   33794:	cmp	x1, #0x7
   33798:	add	x4, x4, x0, lsl #3
   3379c:	mov	x2, #0x1                   	// #1
   337a0:	mov	x6, #0x7                   	// #7
   337a4:	csel	x6, x1, x6, le
   337a8:	sub	x1, x2, x1
   337ac:	cmp	x3, #0x0
   337b0:	str	x1, [x26, #8]
   337b4:	mov	x8, #0x13                  	// #19
   337b8:	csel	x3, x3, x8, ne  // ne = any
   337bc:	and	x7, x6, #0xffffffff
   337c0:	cmp	x3, w6, uxtw
   337c4:	ldur	x2, [x4, #-8]
   337c8:	b.cc	33cb0 <PyInit__decimal@@Base+0x17a70>  // b.lo, b.ul, b.last
   337cc:	sub	x3, x3, x7
   337d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   337d4:	add	x0, x0, #0x180
   337d8:	ldr	x0, [x0, x3, lsl #3]
   337dc:	udiv	x2, x2, x0
   337e0:	cmp	w6, #0x6
   337e4:	b.gt	33728 <PyInit__decimal@@Base+0x174e8>
   337e8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   337ec:	mov	w3, #0x7                   	// #7
   337f0:	add	x0, x0, #0x180
   337f4:	sub	w6, w3, w6
   337f8:	ldr	x0, [x0, w6, sxtw #3]
   337fc:	mul	x2, x2, x0
   33800:	b	33728 <PyInit__decimal@@Base+0x174e8>
   33804:	ldrb	w2, [x27]
   33808:	ldr	x3, [x27, #40]
   3380c:	tbnz	w2, #5, 33824 <PyInit__decimal@@Base+0x175e4>
   33810:	adrp	x21, 65000 <PyInit__decimal@@Base+0x48dc0>
   33814:	ldr	x0, [x27, #32]
   33818:	ldr	x1, [x21, #1880]
   3381c:	cmp	x0, x1
   33820:	b.gt	33d40 <PyInit__decimal@@Base+0x17b00>
   33824:	mov	x1, #0xca00                	// #51712
   33828:	and	w2, w2, #0xfffffff0
   3382c:	movk	x1, #0x3b9a, lsl #16
   33830:	strb	w2, [x27]
   33834:	mov	x2, #0x1                   	// #1
   33838:	mov	x0, x27
   3383c:	udiv	x19, x1, x19
   33840:	mov	x1, #0xfffffffffffffffa    	// #-6
   33844:	add	x23, sp, #0x1d0
   33848:	add	x24, sp, #0x1a0
   3384c:	str	x19, [x3]
   33850:	str	x1, [x27, #8]
   33854:	str	x2, [x27, #24]
   33858:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3385c:	mov	x0, x23
   33860:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   33864:	mov	x0, x24
   33868:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   3386c:	ldr	x0, [x20]
   33870:	mov	w1, #0x8                   	// #8
   33874:	str	w1, [sp, #452]
   33878:	add	x0, x0, #0x1
   3387c:	cmp	x0, #0x3
   33880:	b.le	33a88 <PyInit__decimal@@Base+0x17848>
   33884:	add	x2, sp, #0x600
   33888:	mov	w1, #0x0                   	// #0
   3388c:	nop
   33890:	add	x0, x0, #0x3
   33894:	mov	w19, w1
   33898:	cmp	x0, #0x7
   3389c:	add	w1, w1, #0x1
   338a0:	add	x0, x0, x0, lsr #63
   338a4:	add	x22, x2, w19, sxtw #3
   338a8:	asr	x0, x0, #1
   338ac:	str	x0, [x2, w19, sxtw #3]
   338b0:	b.gt	33890 <PyInit__decimal@@Base+0x17650>
   338b4:	tbnz	w19, #31, 33a88 <PyInit__decimal@@Base+0x17848>
   338b8:	add	x0, sp, #0x140
   338bc:	add	x20, sp, #0x9c
   338c0:	add	x25, sp, #0xe0
   338c4:	add	x21, sp, #0x110
   338c8:	add	x28, sp, #0x170
   338cc:	str	x0, [sp, #96]
   338d0:	b	339b4 <PyInit__decimal@@Base+0x17774>
   338d4:	sub	x6, x0, x6
   338d8:	mov	x3, x20
   338dc:	mov	x2, x6
   338e0:	mov	x1, x26
   338e4:	mov	x0, x21
   338e8:	str	x6, [sp, #104]
   338ec:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   338f0:	ldr	x6, [sp, #104]
   338f4:	mov	x4, x20
   338f8:	ldr	x0, [sp, #280]
   338fc:	mov	x3, x24
   33900:	mov	x2, x25
   33904:	mov	x1, x21
   33908:	add	x6, x0, x6
   3390c:	mov	x0, x21
   33910:	str	x6, [sp, #280]
   33914:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   33918:	ldrb	w0, [sp, #272]
   3391c:	tst	w0, #0xe
   33920:	b.ne	33a24 <PyInit__decimal@@Base+0x177e4>  // b.any
   33924:	mov	x2, x20
   33928:	mov	x1, x24
   3392c:	mov	x0, x21
   33930:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   33934:	mov	x4, x20
   33938:	mov	x3, x23
   3393c:	mov	x2, x21
   33940:	mov	x1, x28
   33944:	mov	x0, x21
   33948:	bl	33448 <PyInit__decimal@@Base+0x17208>
   3394c:	mov	x0, x27
   33950:	mov	x4, x20
   33954:	mov	x3, x24
   33958:	mov	x2, x21
   3395c:	mov	x1, x27
   33960:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   33964:	ldrb	w0, [x27]
   33968:	tst	w0, #0xe
   3396c:	b.eq	33a54 <PyInit__decimal@@Base+0x17814>  // b.none
   33970:	tst	w0, #0xc
   33974:	b.ne	33c40 <PyInit__decimal@@Base+0x17a00>  // b.any
   33978:	ldr	x2, [sp, #96]
   3397c:	mov	x0, x27
   33980:	mov	x4, x20
   33984:	mov	x3, x23
   33988:	mov	x1, x27
   3398c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   33990:	ldrb	w0, [x27]
   33994:	tst	w0, #0xe
   33998:	b.eq	33a68 <PyInit__decimal@@Base+0x17828>  // b.none
   3399c:	tst	w0, #0xc
   339a0:	b.ne	33c54 <PyInit__decimal@@Base+0x17a14>  // b.any
   339a4:	sub	w19, w19, #0x1
   339a8:	sub	x22, x22, #0x8
   339ac:	cmn	w19, #0x1
   339b0:	b.eq	33a88 <PyInit__decimal@@Base+0x17848>  // b.none
   339b4:	ldr	x6, [x22]
   339b8:	mov	x0, x25
   339bc:	mov	x4, x20
   339c0:	mov	x3, x23
   339c4:	add	x6, x6, #0x1
   339c8:	mov	x2, x27
   339cc:	mov	x1, x27
   339d0:	lsl	x6, x6, #1
   339d4:	str	x6, [sp, #416]
   339d8:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   339dc:	ldrb	w0, [sp, #224]
   339e0:	tst	w0, #0xe
   339e4:	b.eq	33a40 <PyInit__decimal@@Base+0x17800>  // b.none
   339e8:	tst	w0, #0xc
   339ec:	b.ne	33c68 <PyInit__decimal@@Base+0x17a28>  // b.any
   339f0:	ldr	x0, [x26, #16]
   339f4:	ldr	x6, [sp, #416]
   339f8:	cmp	x0, x6
   339fc:	b.gt	338d4 <PyInit__decimal@@Base+0x17694>
   33a00:	mov	x0, x21
   33a04:	mov	x4, x20
   33a08:	mov	x3, x24
   33a0c:	mov	x2, x25
   33a10:	mov	x1, x26
   33a14:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   33a18:	ldrb	w0, [sp, #272]
   33a1c:	tst	w0, #0xe
   33a20:	b.eq	33924 <PyInit__decimal@@Base+0x176e4>  // b.none
   33a24:	tst	w0, #0xc
   33a28:	b.eq	33934 <PyInit__decimal@@Base+0x176f4>  // b.none
   33a2c:	ldr	w2, [sp, #456]
   33a30:	mov	x0, x21
   33a34:	ldr	x1, [sp, #416]
   33a38:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   33a3c:	b	33934 <PyInit__decimal@@Base+0x176f4>
   33a40:	mov	x2, x20
   33a44:	mov	x1, x23
   33a48:	mov	x0, x25
   33a4c:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   33a50:	b	339f0 <PyInit__decimal@@Base+0x177b0>
   33a54:	mov	x2, x20
   33a58:	mov	x1, x24
   33a5c:	mov	x0, x27
   33a60:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   33a64:	b	33978 <PyInit__decimal@@Base+0x17738>
   33a68:	mov	x2, x20
   33a6c:	mov	x1, x23
   33a70:	mov	x0, x27
   33a74:	sub	w19, w19, #0x1
   33a78:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   33a7c:	sub	x22, x22, #0x8
   33a80:	cmn	w19, #0x1
   33a84:	b.ne	339b4 <PyInit__decimal@@Base+0x17774>  // b.any
   33a88:	ldr	x6, [x27, #8]
   33a8c:	ldr	x0, [sp, #112]
   33a90:	ldr	x2, [x27, #24]
   33a94:	sub	x0, x6, x0
   33a98:	str	x0, [x27, #8]
   33a9c:	cmp	x2, #0x0
   33aa0:	b.le	33b54 <PyInit__decimal@@Base+0x17914>
   33aa4:	mov	x1, #0x0                   	// #0
   33aa8:	ldr	x3, [x27, #40]
   33aac:	b	33abc <PyInit__decimal@@Base+0x1787c>
   33ab0:	add	x1, x1, #0x1
   33ab4:	cmp	x2, x1
   33ab8:	b.eq	33b54 <PyInit__decimal@@Base+0x17914>  // b.none
   33abc:	ldr	x0, [x3, x1, lsl #3]
   33ac0:	cbz	x0, 33ab0 <PyInit__decimal@@Base+0x17870>
   33ac4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   33ac8:	add	x2, x1, x1, lsl #2
   33acc:	movk	x3, #0xcccd
   33ad0:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   33ad4:	lsl	x2, x2, #2
   33ad8:	movk	x4, #0x1999, lsl #48
   33adc:	mul	x7, x0, x3
   33ae0:	sub	x1, x2, x1
   33ae4:	ror	x2, x7, #1
   33ae8:	cmp	x2, x4
   33aec:	b.hi	33b0c <PyInit__decimal@@Base+0x178cc>  // b.pmore
   33af0:	umulh	x0, x0, x3
   33af4:	add	x1, x1, #0x1
   33af8:	lsr	x0, x0, #3
   33afc:	mul	x2, x0, x3
   33b00:	ror	x2, x2, #1
   33b04:	cmp	x2, x4
   33b08:	b.ls	33af0 <PyInit__decimal@@Base+0x178b0>  // b.plast
   33b0c:	ldr	x0, [sp, #120]
   33b10:	and	x0, x0, #0xfffffffffffffffe
   33b14:	neg	x0, x0
   33b18:	add	x0, x0, x0, lsr #63
   33b1c:	asr	x19, x0, #1
   33b20:	ldr	x0, [sp, #112]
   33b24:	sub	x19, x19, x6
   33b28:	add	x19, x19, x0
   33b2c:	cmp	x19, x1
   33b30:	csel	x19, x19, x1, le
   33b34:	cmp	x19, #0x0
   33b38:	b.le	33b54 <PyInit__decimal@@Base+0x17914>
   33b3c:	mov	x1, x19
   33b40:	mov	x0, x27
   33b44:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   33b48:	ldr	x1, [x27, #8]
   33b4c:	add	x1, x1, x19
   33b50:	str	x1, [x27, #8]
   33b54:	ldrb	w0, [sp, #224]
   33b58:	tst	w0, #0xe0
   33b5c:	b.ne	33b74 <PyInit__decimal@@Base+0x17934>  // b.any
   33b60:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33b64:	ldr	x0, [sp, #264]
   33b68:	ldr	x1, [x1, #1912]
   33b6c:	blr	x1
   33b70:	ldrb	w0, [sp, #224]
   33b74:	tbnz	w0, #4, 33b88 <PyInit__decimal@@Base+0x17948>
   33b78:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33b7c:	add	x0, sp, #0xe0
   33b80:	ldr	x1, [x1, #1912]
   33b84:	blr	x1
   33b88:	ldrb	w0, [sp, #272]
   33b8c:	tst	w0, #0xe0
   33b90:	b.ne	33ba8 <PyInit__decimal@@Base+0x17968>  // b.any
   33b94:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33b98:	ldr	x0, [sp, #312]
   33b9c:	ldr	x1, [x1, #1912]
   33ba0:	blr	x1
   33ba4:	ldrb	w0, [sp, #272]
   33ba8:	tbnz	w0, #4, 33bbc <PyInit__decimal@@Base+0x1797c>
   33bac:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33bb0:	add	x0, sp, #0x110
   33bb4:	ldr	x1, [x1, #1912]
   33bb8:	blr	x1
   33bbc:	ldr	x0, [sp, #136]
   33bc0:	cmp	x26, x0
   33bc4:	b.eq	33bfc <PyInit__decimal@@Base+0x179bc>  // b.none
   33bc8:	ldrb	w0, [x26]
   33bcc:	tst	w0, #0xe0
   33bd0:	b.ne	33be8 <PyInit__decimal@@Base+0x179a8>  // b.any
   33bd4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33bd8:	ldr	x0, [x26, #40]
   33bdc:	ldr	x1, [x1, #1912]
   33be0:	blr	x1
   33be4:	ldrb	w0, [x26]
   33be8:	tbnz	w0, #4, 33bfc <PyInit__decimal@@Base+0x179bc>
   33bec:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33bf0:	mov	x0, x26
   33bf4:	ldr	x1, [x1, #1912]
   33bf8:	blr	x1
   33bfc:	ldr	x4, [sp, #128]
   33c00:	mov	w3, #0x3be                 	// #958
   33c04:	ldr	w0, [sp, #156]
   33c08:	mov	w1, #0x1040                	// #4160
   33c0c:	ldp	x21, x22, [sp, #32]
   33c10:	and	w0, w0, w3
   33c14:	ldr	w2, [x4]
   33c18:	ldp	x23, x24, [sp, #48]
   33c1c:	orr	w0, w0, w2
   33c20:	orr	w0, w0, w1
   33c24:	str	w0, [x4]
   33c28:	ldp	x29, x30, [sp]
   33c2c:	ldp	x19, x20, [sp, #16]
   33c30:	ldp	x25, x26, [sp, #64]
   33c34:	ldp	x27, x28, [sp, #80]
   33c38:	add	sp, sp, #0x800
   33c3c:	ret
   33c40:	ldr	w2, [sp, #456]
   33c44:	mov	x0, x27
   33c48:	ldr	x1, [sp, #416]
   33c4c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   33c50:	b	33978 <PyInit__decimal@@Base+0x17738>
   33c54:	ldr	w2, [sp, #504]
   33c58:	mov	x0, x27
   33c5c:	ldr	x1, [sp, #464]
   33c60:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   33c64:	b	339a4 <PyInit__decimal@@Base+0x17764>
   33c68:	ldr	w2, [sp, #504]
   33c6c:	mov	x0, x25
   33c70:	ldr	x1, [sp, #464]
   33c74:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   33c78:	b	339f0 <PyInit__decimal@@Base+0x177b0>
   33c7c:	cmp	x0, #0x1
   33c80:	b.le	33708 <PyInit__decimal@@Base+0x174c8>
   33c84:	sub	x0, x8, x7
   33c88:	adrp	x8, 48000 <PyInit__decimal@@Base+0x2bdc0>
   33c8c:	add	x0, x0, x3
   33c90:	add	x8, x8, #0x180
   33c94:	ldur	x4, [x4, #-16]
   33c98:	sub	x3, x7, x3
   33c9c:	ldr	x0, [x8, x0, lsl #3]
   33ca0:	ldr	x3, [x8, x3, lsl #3]
   33ca4:	udiv	x0, x4, x0
   33ca8:	madd	x2, x2, x3, x0
   33cac:	b	33708 <PyInit__decimal@@Base+0x174c8>
   33cb0:	cmp	x0, #0x1
   33cb4:	b.le	337e0 <PyInit__decimal@@Base+0x175a0>
   33cb8:	sub	x0, x8, x7
   33cbc:	adrp	x8, 48000 <PyInit__decimal@@Base+0x2bdc0>
   33cc0:	add	x0, x0, x3
   33cc4:	add	x8, x8, #0x180
   33cc8:	ldur	x4, [x4, #-16]
   33ccc:	sub	x3, x7, x3
   33cd0:	ldr	x0, [x8, x0, lsl #3]
   33cd4:	ldr	x3, [x8, x3, lsl #3]
   33cd8:	udiv	x0, x4, x0
   33cdc:	madd	x2, x2, x3, x0
   33ce0:	b	337e0 <PyInit__decimal@@Base+0x175a0>
   33ce4:	bl	28358 <PyInit__decimal@@Base+0xc118>
   33ce8:	mov	x26, x0
   33cec:	cbz	x0, 33d74 <PyInit__decimal@@Base+0x17b34>
   33cf0:	add	x0, sp, #0xb0
   33cf4:	str	x0, [sp, #136]
   33cf8:	ldr	x2, [x19, #24]
   33cfc:	stp	x21, x22, [sp, #32]
   33d00:	ldr	x1, [x19, #40]
   33d04:	lsl	x2, x2, #3
   33d08:	ldr	x0, [x26, #40]
   33d0c:	stp	x23, x24, [sp, #48]
   33d10:	bl	6470 <memcpy@plt>
   33d14:	ldrb	w1, [x19]
   33d18:	ldrb	w0, [x26]
   33d1c:	ldr	x4, [x26, #40]
   33d20:	bfxil	w0, w1, #0, #4
   33d24:	strb	w0, [x26]
   33d28:	ldur	q0, [x19, #8]
   33d2c:	ldp	x6, x1, [x19, #8]
   33d30:	stur	q0, [x26, #8]
   33d34:	ldr	x0, [x19, #24]
   33d38:	str	x0, [x26, #24]
   33d3c:	b	3368c <PyInit__decimal@@Base+0x1744c>
   33d40:	mov	x0, x3
   33d44:	mov	x2, #0x8                   	// #8
   33d48:	add	x3, sp, #0x600
   33d4c:	strb	wzr, [sp, #1536]
   33d50:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   33d54:	str	x0, [x27, #40]
   33d58:	ldrb	w1, [sp, #1536]
   33d5c:	mov	x3, x0
   33d60:	cbnz	w1, 33d6c <PyInit__decimal@@Base+0x17b2c>
   33d64:	ldr	x0, [x21, #1880]
   33d68:	str	x0, [x27, #32]
   33d6c:	ldrb	w2, [x27]
   33d70:	b	33824 <PyInit__decimal@@Base+0x175e4>
   33d74:	ldr	x2, [sp, #128]
   33d78:	mov	x0, x19
   33d7c:	mov	w1, #0x200                 	// #512
   33d80:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   33d84:	b	33c28 <PyInit__decimal@@Base+0x179e8>
   33d88:	sub	sp, sp, #0x7d0
   33d8c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   33d90:	mov	x4, #0x435f                	// #17247
   33d94:	adrp	x10, 48000 <PyInit__decimal@@Base+0x2bdc0>
   33d98:	movk	x4, #0xd79, lsl #16
   33d9c:	add	x13, x10, #0x180
   33da0:	stp	x29, x30, [sp]
   33da4:	mov	x29, sp
   33da8:	movk	x4, #0x35e5, lsl #32
   33dac:	ldp	x18, x11, [x1, #16]
   33db0:	movk	x4, #0xd794, lsl #48
   33db4:	ldr	q0, [x5, #1760]
   33db8:	adrp	x5, 42000 <PyInit__decimal@@Base+0x25dc0>
   33dbc:	movi	v1.4s, #0x0
   33dc0:	str	x2, [sp, #120]
   33dc4:	add	x2, sp, #0x200
   33dc8:	mov	x9, #0x2                   	// #2
   33dcc:	ldr	q3, [x5, #2224]
   33dd0:	adrp	x5, 42000 <PyInit__decimal@@Base+0x25dc0>
   33dd4:	mov	w12, #0x30                  	// #48
   33dd8:	umulh	x4, x18, x4
   33ddc:	add	x8, sp, #0x1d0
   33de0:	add	x7, sp, #0x3d0
   33de4:	add	x6, sp, #0xa8
   33de8:	neg	x15, x18
   33dec:	mov	w17, #0xffffff90            	// #-112
   33df0:	mov	w16, #0x50                  	// #80
   33df4:	stp	x19, x20, [sp, #16]
   33df8:	lsr	x4, x4, #4
   33dfc:	mov	x20, x0
   33e00:	stp	x21, x22, [sp, #32]
   33e04:	mov	x19, x3
   33e08:	stp	x23, x24, [sp, #48]
   33e0c:	stp	x27, x28, [sp, #80]
   33e10:	str	x18, [sp, #152]
   33e14:	str	x9, [sp, #168]
   33e18:	strb	w12, [sp, #272]
   33e1c:	str	x8, [sp, #312]
   33e20:	strb	w12, [sp, #320]
   33e24:	str	x7, [sp, #360]
   33e28:	strb	w17, [sp, #368]
   33e2c:	str	x6, [sp, #408]
   33e30:	strb	w16, [sp, #416]
   33e34:	stp	x15, x18, [sp, #424]
   33e38:	str	x11, [sp, #440]
   33e3c:	ldr	x14, [x1, #32]
   33e40:	ldr	x9, [x1, #40]
   33e44:	ldr	q2, [x5, #2176]
   33e48:	add	x5, x4, x4, lsl #2
   33e4c:	ldr	x21, [x13, #136]
   33e50:	stp	x14, x9, [sp, #448]
   33e54:	lsl	x5, x5, #2
   33e58:	stur	q1, [x2, #-232]
   33e5c:	sub	x4, x5, x4
   33e60:	ldrb	w2, [x1]
   33e64:	str	w2, [sp, #140]
   33e68:	add	x2, sp, #0x200
   33e6c:	ldr	x1, [x1, #8]
   33e70:	str	x1, [sp, #144]
   33e74:	stur	q0, [x2, #-216]
   33e78:	add	x2, sp, #0x240
   33e7c:	lsl	x5, x11, #3
   33e80:	str	xzr, [sp, #1488]
   33e84:	subs	x4, x18, x4
   33e88:	str	x21, [sp, #1496]
   33e8c:	sub	x0, x5, #0x8
   33e90:	stur	q1, [x2, #-248]
   33e94:	stur	q0, [x2, #-232]
   33e98:	stur	q3, [x2, #-200]
   33e9c:	stur	q2, [x2, #-184]
   33ea0:	b.ne	33eec <PyInit__decimal@@Base+0x17cac>  // b.any
   33ea4:	ldr	x1, [x10, #384]
   33ea8:	ldr	x3, [x9, x0]
   33eac:	udiv	x3, x3, x1
   33eb0:	add	x0, x10, #0x180
   33eb4:	ldr	x1, [x0, #72]
   33eb8:	cmp	x1, x3
   33ebc:	b.ls	33f28 <PyInit__decimal@@Base+0x17ce8>  // b.plast
   33ec0:	ldr	x1, [x0, #32]
   33ec4:	cmp	x1, x3
   33ec8:	b.ls	34224 <PyInit__decimal@@Base+0x17fe4>  // b.plast
   33ecc:	ldr	x1, [x0, #16]
   33ed0:	cmp	x1, x3
   33ed4:	b.ls	3427c <PyInit__decimal@@Base+0x1803c>  // b.plast
   33ed8:	ldr	x1, [x0, #8]
   33edc:	cmp	x1, x3
   33ee0:	b.ls	33f60 <PyInit__decimal@@Base+0x17d20>  // b.plast
   33ee4:	ldr	x21, [x0, #144]
   33ee8:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   33eec:	cmp	x11, #0x1
   33ef0:	ldr	x3, [x9, x0]
   33ef4:	b.le	33eb0 <PyInit__decimal@@Base+0x17c70>
   33ef8:	add	x9, x9, x5
   33efc:	mov	x1, #0x13                  	// #19
   33f00:	ldr	x2, [x13, x4, lsl #3]
   33f04:	sub	x4, x1, x4
   33f08:	ldur	x0, [x9, #-16]
   33f0c:	ldr	x1, [x13, x4, lsl #3]
   33f10:	udiv	x0, x0, x2
   33f14:	madd	x3, x3, x1, x0
   33f18:	add	x0, x10, #0x180
   33f1c:	ldr	x1, [x0, #72]
   33f20:	cmp	x1, x3
   33f24:	b.hi	33ec0 <PyInit__decimal@@Base+0x17c80>  // b.pmore
   33f28:	ldr	x2, [x0, #112]
   33f2c:	cmp	x2, x3
   33f30:	b.ls	34250 <PyInit__decimal@@Base+0x18010>  // b.plast
   33f34:	ldr	x2, [x0, #88]
   33f38:	cmp	x2, x3
   33f3c:	b.hi	342b8 <PyInit__decimal@@Base+0x18078>  // b.pmore
   33f40:	ldr	x1, [x0, #104]
   33f44:	cmp	x1, x3
   33f48:	b.ls	345c4 <PyInit__decimal@@Base+0x18384>  // b.plast
   33f4c:	ldr	x1, [x0, #96]
   33f50:	cmp	x1, x3
   33f54:	b.hi	345d4 <PyInit__decimal@@Base+0x18394>  // b.pmore
   33f58:	ldr	x21, [x0, #48]
   33f5c:	nop
   33f60:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   33f64:	ldr	x0, [x20, #32]
   33f68:	mov	x2, #0x2                   	// #2
   33f6c:	ldr	x1, [x1, #1880]
   33f70:	mul	x21, x3, x21
   33f74:	cmp	x1, x2
   33f78:	csel	x1, x1, x2, ge  // ge = tcont
   33f7c:	cmp	x1, x0
   33f80:	b.eq	33f94 <PyInit__decimal@@Base+0x17d54>  // b.none
   33f84:	ldrb	w2, [x20]
   33f88:	tbz	w2, #5, 34584 <PyInit__decimal@@Base+0x18344>
   33f8c:	cmp	x1, x0
   33f90:	b.gt	34594 <PyInit__decimal@@Base+0x18354>
   33f94:	ldr	x0, [x20, #40]
   33f98:	add	x22, sp, #0x5d0
   33f9c:	mov	x3, x21
   33fa0:	mov	x1, x22
   33fa4:	mov	x2, #0x2                   	// #2
   33fa8:	add	x28, sp, #0xb0
   33fac:	bl	1d5f8 <PyInit__decimal@@Base+0x13b8>
   33fb0:	add	x24, sp, #0xe0
   33fb4:	ldrb	w0, [x20]
   33fb8:	mov	x2, #0xffffffffffffffef    	// #-17
   33fbc:	ldr	x1, [x20, #40]
   33fc0:	and	w0, w0, #0xfffffff0
   33fc4:	strb	w0, [x20]
   33fc8:	mov	x0, x20
   33fcc:	str	x2, [x20, #8]
   33fd0:	ldr	x1, [x1, #8]
   33fd4:	cmp	x1, #0x0
   33fd8:	cset	x1, ne  // ne = any
   33fdc:	add	x1, x1, #0x1
   33fe0:	str	x1, [x20, #24]
   33fe4:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   33fe8:	mov	x0, x28
   33fec:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   33ff0:	mov	x0, x24
   33ff4:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   33ff8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   33ffc:	mov	x1, #0xff9d                	// #65437
   34000:	movk	x1, #0x589b, lsl #16
   34004:	mov	w2, #0x8                   	// #8
   34008:	ldr	q1, [x0, #2144]
   3400c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   34010:	movk	x1, #0x494c, lsl #32
   34014:	str	w2, [sp, #212]
   34018:	ldr	q0, [x0, #2160]
   3401c:	movk	x1, #0xf21f, lsl #48
   34020:	ldr	x0, [sp, #120]
   34024:	str	x1, [sp, #240]
   34028:	str	w2, [sp, #260]
   3402c:	mov	w1, #0x0                   	// #0
   34030:	stur	q1, [sp, #184]
   34034:	ldr	x0, [x0]
   34038:	str	q0, [sp, #224]
   3403c:	add	x0, x0, #0x2
   34040:	cmp	x0, #0x10
   34044:	b.le	343ec <PyInit__decimal@@Base+0x181ac>
   34048:	add	x0, x0, #0x1
   3404c:	mov	w21, w1
   34050:	cmp	x0, #0x21
   34054:	add	w1, w1, #0x1
   34058:	add	x0, x0, x0, lsr #63
   3405c:	add	x23, x22, w21, sxtw #3
   34060:	asr	x0, x0, #1
   34064:	str	x0, [x22, w21, sxtw #3]
   34068:	b.gt	34048 <PyInit__decimal@@Base+0x17e08>
   3406c:	tbnz	w21, #31, 343ec <PyInit__decimal@@Base+0x181ac>
   34070:	add	x0, sp, #0x1a0
   34074:	str	x0, [sp, #104]
   34078:	add	x0, sp, #0x170
   3407c:	add	x22, sp, #0x110
   34080:	mov	w27, #0x1041                	// #4161
   34084:	stp	x25, x26, [sp, #64]
   34088:	add	x25, sp, #0xa4
   3408c:	add	x26, sp, #0x140
   34090:	str	x0, [sp, #112]
   34094:	add	x0, sp, #0xa3
   34098:	str	x0, [sp, #128]
   3409c:	b	34180 <PyInit__decimal@@Base+0x17f40>
   340a0:	ldr	x1, [sp, #104]
   340a4:	sub	x2, x2, x0
   340a8:	mov	x3, x19
   340ac:	mov	x0, x26
   340b0:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   340b4:	ldr	x5, [sp, #176]
   340b8:	mov	x0, x26
   340bc:	mov	x4, x19
   340c0:	mov	x3, x28
   340c4:	neg	x5, x5
   340c8:	mov	x2, x22
   340cc:	mov	x1, x26
   340d0:	str	x5, [sp, #328]
   340d4:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   340d8:	ldrb	w0, [sp, #320]
   340dc:	tst	w0, #0xe
   340e0:	b.ne	34208 <PyInit__decimal@@Base+0x17fc8>  // b.any
   340e4:	mov	x2, x19
   340e8:	mov	x1, x28
   340ec:	mov	x0, x26
   340f0:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   340f4:	ldr	x2, [sp, #112]
   340f8:	mov	x0, x22
   340fc:	mov	x4, x25
   34100:	mov	x3, x24
   34104:	mov	x1, x20
   34108:	str	wzr, [sp, #164]
   3410c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   34110:	ldrb	w0, [sp, #272]
   34114:	tst	w0, #0xe
   34118:	b.eq	34338 <PyInit__decimal@@Base+0x180f8>  // b.none
   3411c:	tst	w0, #0xc
   34120:	b.ne	344c8 <PyInit__decimal@@Base+0x18288>  // b.any
   34124:	ldr	w1, [x19]
   34128:	ldr	w0, [sp, #164]
   3412c:	tst	w0, w27
   34130:	orr	w0, w0, w1
   34134:	str	w0, [x19]
   34138:	b.ne	34360 <PyInit__decimal@@Base+0x18120>  // b.any
   3413c:	mov	x1, x22
   34140:	mov	x0, x20
   34144:	mov	x4, x25
   34148:	mov	x3, x24
   3414c:	mov	x2, x26
   34150:	str	wzr, [sp, #164]
   34154:	bl	33448 <PyInit__decimal@@Base+0x17208>
   34158:	ldr	w1, [x19]
   3415c:	ldr	w0, [sp, #164]
   34160:	tst	w0, w27
   34164:	orr	w0, w0, w1
   34168:	str	w0, [x19]
   3416c:	b.ne	343a0 <PyInit__decimal@@Base+0x18160>  // b.any
   34170:	sub	w21, w21, #0x1
   34174:	sub	x23, x23, #0x8
   34178:	cmn	w21, #0x1
   3417c:	b.eq	343e8 <PyInit__decimal@@Base+0x181a8>  // b.none
   34180:	mov	x0, x22
   34184:	mov	x4, x25
   34188:	mov	x3, x24
   3418c:	mov	x2, x20
   34190:	mov	x1, x20
   34194:	str	wzr, [sp, #164]
   34198:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   3419c:	ldrb	w0, [sp, #272]
   341a0:	tst	w0, #0xe
   341a4:	b.eq	342d0 <PyInit__decimal@@Base+0x18090>  // b.none
   341a8:	tst	w0, #0xc
   341ac:	b.ne	344b4 <PyInit__decimal@@Base+0x18274>  // b.any
   341b0:	ldr	w1, [x19]
   341b4:	ldr	w0, [sp, #164]
   341b8:	tst	w0, w27
   341bc:	orr	w0, w0, w1
   341c0:	str	w0, [x19]
   341c4:	b.ne	342f8 <PyInit__decimal@@Base+0x180b8>  // b.any
   341c8:	ldr	x0, [x23]
   341cc:	ldr	x2, [sp, #432]
   341d0:	lsl	x0, x0, #1
   341d4:	add	x0, x0, #0x5
   341d8:	str	x0, [sp, #176]
   341dc:	cmp	x0, x2
   341e0:	b.lt	340a0 <PyInit__decimal@@Base+0x17e60>  // b.tstop
   341e4:	ldr	x1, [sp, #104]
   341e8:	mov	x0, x26
   341ec:	mov	x4, x19
   341f0:	mov	x3, x28
   341f4:	mov	x2, x22
   341f8:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   341fc:	ldrb	w0, [sp, #320]
   34200:	tst	w0, #0xe
   34204:	b.eq	340e4 <PyInit__decimal@@Base+0x17ea4>  // b.none
   34208:	tst	w0, #0xc
   3420c:	b.eq	340f4 <PyInit__decimal@@Base+0x17eb4>  // b.none
   34210:	ldr	w2, [sp, #216]
   34214:	mov	x0, x26
   34218:	ldr	x1, [sp, #176]
   3421c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   34220:	b	340f4 <PyInit__decimal@@Base+0x17eb4>
   34224:	ldr	x1, [x0, #48]
   34228:	cmp	x1, x3
   3422c:	b.hi	342a4 <PyInit__decimal@@Base+0x18064>  // b.pmore
   34230:	ldr	x1, [x0, #64]
   34234:	cmp	x1, x3
   34238:	b.ls	345cc <PyInit__decimal@@Base+0x1838c>  // b.plast
   3423c:	ldr	x1, [x0, #56]
   34240:	cmp	x1, x3
   34244:	b.hi	345dc <PyInit__decimal@@Base+0x1839c>  // b.pmore
   34248:	ldr	x21, [x0, #88]
   3424c:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   34250:	ldr	x1, [x0, #144]
   34254:	cmp	x1, x3
   34258:	b.ls	34290 <PyInit__decimal@@Base+0x18050>  // b.plast
   3425c:	ldr	x1, [x0, #128]
   34260:	cmp	x1, x3
   34264:	b.ls	345b4 <PyInit__decimal@@Base+0x18374>  // b.plast
   34268:	ldr	x1, [x0, #120]
   3426c:	cmp	x1, x3
   34270:	b.ls	345ec <PyInit__decimal@@Base+0x183ac>  // b.plast
   34274:	ldr	x21, [x0, #32]
   34278:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   3427c:	ldr	x1, [x0, #24]
   34280:	cmp	x1, x3
   34284:	b.hi	345ac <PyInit__decimal@@Base+0x1836c>  // b.pmore
   34288:	ldr	x21, [x0, #120]
   3428c:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   34290:	ldr	x1, [x0, #152]
   34294:	cmp	x1, x3
   34298:	b.hi	345a4 <PyInit__decimal@@Base+0x18364>  // b.pmore
   3429c:	ldur	x21, [x0, #-8]
   342a0:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   342a4:	ldr	x1, [x0, #40]
   342a8:	cmp	x1, x3
   342ac:	b.ls	345e4 <PyInit__decimal@@Base+0x183a4>  // b.plast
   342b0:	ldr	x21, [x0, #112]
   342b4:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   342b8:	ldr	x2, [x0, #80]
   342bc:	mov	x21, x1
   342c0:	cmp	x2, x3
   342c4:	b.hi	33f60 <PyInit__decimal@@Base+0x17d20>  // b.pmore
   342c8:	ldr	x21, [x0, #64]
   342cc:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   342d0:	mov	x1, x24
   342d4:	mov	x0, x22
   342d8:	mov	x2, x25
   342dc:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   342e0:	ldr	w1, [x19]
   342e4:	ldr	w0, [sp, #164]
   342e8:	tst	w0, w27
   342ec:	orr	w0, w0, w1
   342f0:	str	w0, [x19]
   342f4:	b.eq	341c8 <PyInit__decimal@@Base+0x17f88>  // b.none
   342f8:	ldrb	w2, [sp, #272]
   342fc:	tbnz	w2, #5, 34314 <PyInit__decimal@@Base+0x180d4>
   34300:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34304:	ldr	x3, [sp, #304]
   34308:	ldr	x1, [x1, #1880]
   3430c:	cmp	x3, x1
   34310:	b.gt	34514 <PyInit__decimal@@Base+0x182d4>
   34314:	orr	w0, w0, #0x100
   34318:	str	w0, [x19]
   3431c:	add	x0, sp, #0x200
   34320:	and	w2, w2, #0xfffffff0
   34324:	orr	w2, w2, #0x4
   34328:	strb	w2, [sp, #272]
   3432c:	str	xzr, [sp, #296]
   34330:	stp	xzr, xzr, [x0, #-232]
   34334:	b	341c8 <PyInit__decimal@@Base+0x17f88>
   34338:	mov	x1, x24
   3433c:	mov	x0, x22
   34340:	mov	x2, x25
   34344:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   34348:	ldr	w1, [x19]
   3434c:	ldr	w0, [sp, #164]
   34350:	tst	w0, w27
   34354:	orr	w0, w0, w1
   34358:	str	w0, [x19]
   3435c:	b.eq	3413c <PyInit__decimal@@Base+0x17efc>  // b.none
   34360:	ldrb	w2, [sp, #272]
   34364:	tbnz	w2, #5, 3437c <PyInit__decimal@@Base+0x1813c>
   34368:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3436c:	ldr	x3, [sp, #304]
   34370:	ldr	x1, [x1, #1880]
   34374:	cmp	x3, x1
   34378:	b.gt	3454c <PyInit__decimal@@Base+0x1830c>
   3437c:	orr	w0, w0, #0x100
   34380:	str	w0, [x19]
   34384:	add	x0, sp, #0x200
   34388:	and	w2, w2, #0xfffffff0
   3438c:	orr	w2, w2, #0x4
   34390:	strb	w2, [sp, #272]
   34394:	str	xzr, [sp, #296]
   34398:	stp	xzr, xzr, [x0, #-232]
   3439c:	b	3413c <PyInit__decimal@@Base+0x17efc>
   343a0:	ldrb	w2, [x20]
   343a4:	tbnz	w2, #5, 343bc <PyInit__decimal@@Base+0x1817c>
   343a8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   343ac:	ldr	x3, [x20, #32]
   343b0:	ldr	x1, [x1, #1880]
   343b4:	cmp	x3, x1
   343b8:	b.gt	344dc <PyInit__decimal@@Base+0x1829c>
   343bc:	and	w2, w2, #0xfffffff0
   343c0:	stp	xzr, xzr, [x20, #8]
   343c4:	orr	w2, w2, #0x4
   343c8:	strb	w2, [x20]
   343cc:	orr	w0, w0, #0x100
   343d0:	str	xzr, [x20, #24]
   343d4:	sub	w21, w21, #0x1
   343d8:	str	w0, [x19]
   343dc:	sub	x23, x23, #0x8
   343e0:	cmn	w21, #0x1
   343e4:	b.ne	34180 <PyInit__decimal@@Base+0x17f40>  // b.any
   343e8:	ldp	x25, x26, [sp, #64]
   343ec:	ldrb	w1, [x20]
   343f0:	tst	w1, #0xe
   343f4:	b.ne	34420 <PyInit__decimal@@Base+0x181e0>  // b.any
   343f8:	ldp	x0, x2, [sp, #144]
   343fc:	and	w1, w1, #0xfffffff0
   34400:	ldr	x3, [x20, #8]
   34404:	add	x2, x0, x2
   34408:	ldr	w0, [sp, #140]
   3440c:	sub	x2, x3, x2
   34410:	str	x2, [x20, #8]
   34414:	and	w0, w0, #0x1
   34418:	orr	w0, w0, w1
   3441c:	strb	w0, [x20]
   34420:	ldrb	w0, [sp, #272]
   34424:	tst	w0, #0xe0
   34428:	b.ne	34440 <PyInit__decimal@@Base+0x18200>  // b.any
   3442c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34430:	ldr	x0, [sp, #312]
   34434:	ldr	x1, [x1, #1912]
   34438:	blr	x1
   3443c:	ldrb	w0, [sp, #272]
   34440:	tbnz	w0, #4, 34454 <PyInit__decimal@@Base+0x18214>
   34444:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34448:	add	x0, sp, #0x110
   3444c:	ldr	x1, [x1, #1912]
   34450:	blr	x1
   34454:	ldrb	w0, [sp, #320]
   34458:	tst	w0, #0xe0
   3445c:	b.ne	34474 <PyInit__decimal@@Base+0x18234>  // b.any
   34460:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34464:	ldr	x0, [sp, #360]
   34468:	ldr	x1, [x1, #1912]
   3446c:	blr	x1
   34470:	ldrb	w0, [sp, #320]
   34474:	tbnz	w0, #4, 34488 <PyInit__decimal@@Base+0x18248>
   34478:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3447c:	add	x0, sp, #0x140
   34480:	ldr	x1, [x1, #1912]
   34484:	blr	x1
   34488:	ldr	x1, [sp, #120]
   3448c:	mov	x2, x19
   34490:	mov	x0, x20
   34494:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   34498:	ldp	x29, x30, [sp]
   3449c:	ldp	x19, x20, [sp, #16]
   344a0:	ldp	x21, x22, [sp, #32]
   344a4:	ldp	x23, x24, [sp, #48]
   344a8:	ldp	x27, x28, [sp, #80]
   344ac:	add	sp, sp, #0x7d0
   344b0:	ret
   344b4:	ldr	w2, [sp, #264]
   344b8:	mov	x0, x22
   344bc:	ldr	x1, [sp, #224]
   344c0:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   344c4:	b	341b0 <PyInit__decimal@@Base+0x17f70>
   344c8:	ldr	w2, [sp, #264]
   344cc:	mov	x0, x22
   344d0:	ldr	x1, [sp, #224]
   344d4:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   344d8:	b	34124 <PyInit__decimal@@Base+0x17ee4>
   344dc:	ldr	x0, [x20, #40]
   344e0:	mov	x2, #0x8                   	// #8
   344e4:	ldr	x3, [sp, #128]
   344e8:	strb	wzr, [sp, #163]
   344ec:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   344f0:	str	x0, [x20, #40]
   344f4:	ldrb	w1, [sp, #163]
   344f8:	cbnz	w1, 34508 <PyInit__decimal@@Base+0x182c8>
   344fc:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   34500:	ldr	x0, [x0, #1880]
   34504:	str	x0, [x20, #32]
   34508:	ldrb	w2, [x20]
   3450c:	ldr	w0, [x19]
   34510:	b	343bc <PyInit__decimal@@Base+0x1817c>
   34514:	ldr	x3, [sp, #128]
   34518:	mov	x2, #0x8                   	// #8
   3451c:	ldr	x0, [sp, #312]
   34520:	strb	wzr, [sp, #163]
   34524:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   34528:	str	x0, [sp, #312]
   3452c:	ldrb	w1, [sp, #163]
   34530:	cbnz	w1, 34540 <PyInit__decimal@@Base+0x18300>
   34534:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   34538:	ldr	x0, [x0, #1880]
   3453c:	str	x0, [sp, #304]
   34540:	ldrb	w2, [sp, #272]
   34544:	ldr	w0, [x19]
   34548:	b	34314 <PyInit__decimal@@Base+0x180d4>
   3454c:	ldr	x3, [sp, #128]
   34550:	mov	x2, #0x8                   	// #8
   34554:	ldr	x0, [sp, #312]
   34558:	strb	wzr, [sp, #163]
   3455c:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   34560:	str	x0, [sp, #312]
   34564:	ldrb	w1, [sp, #163]
   34568:	cbnz	w1, 34578 <PyInit__decimal@@Base+0x18338>
   3456c:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   34570:	ldr	x0, [x0, #1880]
   34574:	str	x0, [sp, #304]
   34578:	ldrb	w2, [sp, #272]
   3457c:	ldr	w0, [x19]
   34580:	b	3437c <PyInit__decimal@@Base+0x1813c>
   34584:	mov	x2, x19
   34588:	mov	x0, x20
   3458c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   34590:	b	33f94 <PyInit__decimal@@Base+0x17d54>
   34594:	mov	x2, x19
   34598:	mov	x0, x20
   3459c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   345a0:	b	33f94 <PyInit__decimal@@Base+0x17d54>
   345a4:	ldr	x21, [x10, #384]
   345a8:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345ac:	ldr	x21, [x0, #128]
   345b0:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345b4:	cmp	x21, x3
   345b8:	b.ls	345f4 <PyInit__decimal@@Base+0x183b4>  // b.plast
   345bc:	ldr	x21, [x0, #16]
   345c0:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345c4:	ldr	x21, [x0, #40]
   345c8:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345cc:	ldr	x21, [x0, #80]
   345d0:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345d4:	ldr	x21, [x0, #56]
   345d8:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345dc:	ldr	x21, [x0, #96]
   345e0:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345e4:	ldr	x21, [x0, #104]
   345e8:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345ec:	ldr	x21, [x0, #24]
   345f0:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345f4:	ldr	x21, [x0, #8]
   345f8:	b	33f60 <PyInit__decimal@@Base+0x17d20>
   345fc:	nop
   34600:	stp	x29, x30, [sp, #-288]!
   34604:	mov	x29, sp
   34608:	stp	x19, x20, [sp, #16]
   3460c:	mov	x20, x0
   34610:	stp	x21, x22, [sp, #32]
   34614:	mov	x21, x1
   34618:	mov	x22, x4
   3461c:	stp	x23, x24, [sp, #48]
   34620:	mov	x24, x3
   34624:	stp	x25, x26, [sp, #64]
   34628:	mov	x25, x2
   3462c:	cmp	x0, x25
   34630:	ldrb	w2, [x2]
   34634:	ccmp	x20, x3, #0x4, ne  // ne = any
   34638:	ldrb	w0, [x3]
   3463c:	and	w2, w2, #0x1e
   34640:	orr	w2, w2, #0x40
   34644:	and	w0, w0, #0x1e
   34648:	strb	w2, [sp, #192]
   3464c:	orr	w0, w0, #0x40
   34650:	ldr	x5, [x3, #16]
   34654:	strb	w0, [sp, #240]
   34658:	ldp	x3, x2, [x25, #16]
   3465c:	stp	xzr, x3, [sp, #200]
   34660:	str	x2, [sp, #216]
   34664:	ldr	x3, [x24, #24]
   34668:	stp	xzr, x5, [sp, #248]
   3466c:	ldr	x2, [x25, #32]
   34670:	str	x2, [sp, #224]
   34674:	ldr	x0, [x25, #40]
   34678:	str	x0, [sp, #232]
   3467c:	str	x3, [sp, #264]
   34680:	ldr	x2, [x24, #32]
   34684:	ldr	x0, [x24, #40]
   34688:	stp	x2, x0, [sp, #272]
   3468c:	b.eq	347e0 <PyInit__decimal@@Base+0x185a0>  // b.none
   34690:	mov	x19, x20
   34694:	stp	x27, x28, [sp, #80]
   34698:	cmp	x21, x25
   3469c:	ccmp	x21, x24, #0x4, ne  // ne = any
   346a0:	b.eq	347b0 <PyInit__decimal@@Base+0x18570>  // b.none
   346a4:	mov	x28, x21
   346a8:	add	x23, sp, #0x90
   346ac:	mov	x0, x23
   346b0:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   346b4:	ldr	x2, [x25, #16]
   346b8:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   346bc:	ldr	x0, [x24, #16]
   346c0:	movk	x1, #0xb6b3, lsl #32
   346c4:	movk	x1, #0xde0, lsl #48
   346c8:	sub	x0, x2, x0
   346cc:	add	x0, x0, #0x4
   346d0:	str	x0, [sp, #144]
   346d4:	cmp	x0, x1
   346d8:	ccmp	x2, x1, #0x0, le
   346dc:	b.le	347f4 <PyInit__decimal@@Base+0x185b4>
   346e0:	ldr	w0, [x22]
   346e4:	orr	w0, w0, #0x8
   346e8:	str	w0, [x22]
   346ec:	cmp	x28, #0x0
   346f0:	cset	w23, ne  // ne = any
   346f4:	cmp	x28, x21
   346f8:	csel	w23, w23, wzr, ne  // ne = any
   346fc:	cmp	x19, #0x0
   34700:	ccmp	x19, x20, #0x4, ne  // ne = any
   34704:	b.eq	3473c <PyInit__decimal@@Base+0x184fc>  // b.none
   34708:	ldrb	w0, [x19]
   3470c:	tst	w0, #0xe0
   34710:	b.ne	34728 <PyInit__decimal@@Base+0x184e8>  // b.any
   34714:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34718:	ldr	x0, [x19, #40]
   3471c:	ldr	x1, [x1, #1912]
   34720:	blr	x1
   34724:	ldrb	w0, [x19]
   34728:	tbnz	w0, #4, 3473c <PyInit__decimal@@Base+0x184fc>
   3472c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34730:	mov	x0, x19
   34734:	ldr	x1, [x1, #1912]
   34738:	blr	x1
   3473c:	cbz	w23, 347d8 <PyInit__decimal@@Base+0x18598>
   34740:	ldrb	w0, [x28]
   34744:	tst	w0, #0xe0
   34748:	b.ne	34760 <PyInit__decimal@@Base+0x18520>  // b.any
   3474c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34750:	ldr	x0, [x28, #40]
   34754:	ldr	x1, [x1, #1912]
   34758:	blr	x1
   3475c:	ldrb	w0, [x28]
   34760:	tbnz	w0, #4, 347d8 <PyInit__decimal@@Base+0x18598>
   34764:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34768:	mov	x0, x28
   3476c:	ldr	x1, [x1, #1912]
   34770:	blr	x1
   34774:	ldp	x27, x28, [sp, #80]
   34778:	mov	x0, x20
   3477c:	mov	w2, #0x4                   	// #4
   34780:	mov	w1, #0x0                   	// #0
   34784:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   34788:	mov	x0, x21
   3478c:	mov	w2, #0x4                   	// #4
   34790:	mov	w1, #0x0                   	// #0
   34794:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   34798:	ldp	x19, x20, [sp, #16]
   3479c:	ldp	x21, x22, [sp, #32]
   347a0:	ldp	x23, x24, [sp, #48]
   347a4:	ldp	x25, x26, [sp, #64]
   347a8:	ldp	x29, x30, [sp], #288
   347ac:	ret
   347b0:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
   347b4:	mov	x28, x0
   347b8:	cbnz	x0, 346a8 <PyInit__decimal@@Base+0x18468>
   347bc:	ldr	w0, [x22]
   347c0:	cmp	x19, #0x0
   347c4:	ccmp	x19, x20, #0x4, ne  // ne = any
   347c8:	mov	w23, #0x0                   	// #0
   347cc:	orr	w0, w0, #0x200
   347d0:	str	w0, [x22]
   347d4:	b.ne	34708 <PyInit__decimal@@Base+0x184c8>  // b.any
   347d8:	ldp	x27, x28, [sp, #80]
   347dc:	b	34778 <PyInit__decimal@@Base+0x18538>
   347e0:	bl	283f0 <PyInit__decimal@@Base+0xc1b0>
   347e4:	mov	x19, x0
   347e8:	cbz	x0, 34ab4 <PyInit__decimal@@Base+0x18874>
   347ec:	stp	x27, x28, [sp, #80]
   347f0:	b	34698 <PyInit__decimal@@Base+0x18458>
   347f4:	add	x24, x23, #0x1c
   347f8:	add	x25, sp, #0xf0
   347fc:	mov	x3, x24
   34800:	mov	x1, x25
   34804:	mov	x2, x23
   34808:	mov	x0, x28
   3480c:	add	x27, sp, #0xc0
   34810:	bl	33d88 <PyInit__decimal@@Base+0x17b48>
   34814:	mov	x4, x24
   34818:	mov	x1, x27
   3481c:	mov	x3, x23
   34820:	mov	x2, x28
   34824:	mov	x0, x19
   34828:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   3482c:	mov	x4, x24
   34830:	mov	x3, x23
   34834:	mov	x2, x19
   34838:	mov	x1, x19
   3483c:	mov	w0, #0x2                   	// #2
   34840:	bl	31700 <PyInit__decimal@@Base+0x154c0>
   34844:	ldr	x6, [sp, #208]
   34848:	mov	x8, #0x2                   	// #2
   3484c:	mov	x7, #0xfffe                	// #65534
   34850:	movk	x8, #0xa764, lsl #16
   34854:	movk	x7, #0x589b, lsl #16
   34858:	add	x6, x6, #0x3
   3485c:	movk	x8, #0xb6b3, lsl #32
   34860:	movk	x7, #0x494c, lsl #32
   34864:	movk	x8, #0xde0, lsl #48
   34868:	movk	x7, #0xf21f, lsl #48
   3486c:	mov	x4, x24
   34870:	mov	x1, x25
   34874:	mov	x3, x23
   34878:	mov	x2, x19
   3487c:	mov	x0, x28
   34880:	add	x26, sp, #0x8c
   34884:	stp	x6, x8, [sp, #144]
   34888:	str	x7, [sp, #160]
   3488c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   34890:	mov	x1, x27
   34894:	mov	x2, x28
   34898:	mov	x0, x28
   3489c:	mov	x4, x26
   348a0:	mov	x3, x23
   348a4:	str	wzr, [sp, #140]
   348a8:	bl	33448 <PyInit__decimal@@Base+0x17208>
   348ac:	ldr	w1, [sp, #140]
   348b0:	mov	w2, #0x1041                	// #4161
   348b4:	ldr	w0, [sp, #172]
   348b8:	tst	w1, w2
   348bc:	orr	w0, w0, w1
   348c0:	str	w0, [sp, #172]
   348c4:	b.ne	34a78 <PyInit__decimal@@Base+0x18838>  // b.any
   348c8:	ldrb	w0, [x19]
   348cc:	mov	w24, #0x4                   	// #4
   348d0:	tst	w0, #0xe
   348d4:	b.ne	349a8 <PyInit__decimal@@Base+0x18768>  // b.any
   348d8:	adrp	x27, 62000 <PyInit__decimal@@Base+0x45dc0>
   348dc:	add	x0, x27, #0xc58
   348e0:	str	x0, [sp, #112]
   348e4:	add	x0, x0, #0x30
   348e8:	mov	w27, #0x1041                	// #4161
   348ec:	str	x0, [sp, #104]
   348f0:	add	x0, x23, #0x1c
   348f4:	str	x0, [sp, #120]
   348f8:	ldrb	w0, [x28]
   348fc:	tst	w0, #0xe
   34900:	b.ne	349a8 <PyInit__decimal@@Base+0x18768>  // b.any
   34904:	subs	w24, w24, #0x1
   34908:	b.eq	34a0c <PyInit__decimal@@Base+0x187cc>  // b.none
   3490c:	ldr	x0, [sp, #104]
   34910:	mov	x1, x28
   34914:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   34918:	cmp	w0, #0x1
   3491c:	b.eq	349c4 <PyInit__decimal@@Base+0x18784>  // b.none
   34920:	mov	x1, x25
   34924:	mov	x0, x28
   34928:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3492c:	cmn	w0, #0x1
   34930:	b.eq	34ac4 <PyInit__decimal@@Base+0x18884>  // b.none
   34934:	mov	x1, x28
   34938:	mov	x0, x28
   3493c:	mov	x4, x26
   34940:	mov	x3, x23
   34944:	mov	x2, x25
   34948:	str	wzr, [sp, #140]
   3494c:	bl	33448 <PyInit__decimal@@Base+0x17208>
   34950:	ldr	w1, [sp, #140]
   34954:	ldr	w0, [sp, #172]
   34958:	tst	w1, w27
   3495c:	orr	w0, w0, w1
   34960:	str	w0, [sp, #172]
   34964:	b.ne	34aa0 <PyInit__decimal@@Base+0x18860>  // b.any
   34968:	ldr	x2, [sp, #112]
   3496c:	mov	x4, x26
   34970:	mov	x3, x23
   34974:	mov	x1, x19
   34978:	mov	x0, x19
   3497c:	str	wzr, [sp, #140]
   34980:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   34984:	ldr	w1, [sp, #140]
   34988:	ldr	w0, [sp, #172]
   3498c:	tst	w1, w27
   34990:	orr	w0, w0, w1
   34994:	str	w0, [sp, #172]
   34998:	b.ne	34a64 <PyInit__decimal@@Base+0x18824>  // b.any
   3499c:	ldrb	w0, [x19]
   349a0:	tst	w0, #0xe
   349a4:	b.eq	348f8 <PyInit__decimal@@Base+0x186b8>  // b.none
   349a8:	ldr	w1, [sp, #172]
   349ac:	mov	w2, #0x3be                 	// #958
   349b0:	ldr	w0, [x22]
   349b4:	and	w1, w1, w2
   349b8:	orr	w0, w0, w1
   349bc:	str	w0, [x22]
   349c0:	b	346ec <PyInit__decimal@@Base+0x184ac>
   349c4:	mov	x1, x28
   349c8:	mov	x0, x28
   349cc:	mov	x4, x26
   349d0:	mov	x3, x23
   349d4:	mov	x2, x25
   349d8:	str	wzr, [sp, #140]
   349dc:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   349e0:	ldr	w1, [sp, #140]
   349e4:	ldr	w0, [sp, #172]
   349e8:	tst	w1, w27
   349ec:	orr	w0, w0, w1
   349f0:	str	w0, [sp, #172]
   349f4:	b.ne	34a8c <PyInit__decimal@@Base+0x1884c>  // b.any
   349f8:	ldr	x0, [sp, #112]
   349fc:	mov	x4, x26
   34a00:	mov	x3, x23
   34a04:	add	x2, x0, #0x60
   34a08:	b	34974 <PyInit__decimal@@Base+0x18734>
   34a0c:	adrp	x23, 62000 <PyInit__decimal@@Base+0x45dc0>
   34a10:	mov	w3, #0x1d0b                	// #7435
   34a14:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   34a18:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   34a1c:	ldr	x23, [x23, #3904]
   34a20:	add	x2, x2, #0x7c0
   34a24:	add	x1, x1, #0x4b8
   34a28:	ldr	x0, [x23]
   34a2c:	bl	6a70 <fprintf@plt>
   34a30:	ldr	x3, [x23]
   34a34:	mov	x2, #0x3c                  	// #60
   34a38:	mov	x1, #0x1                   	// #1
   34a3c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   34a40:	add	x0, x0, #0x800
   34a44:	bl	6930 <fwrite@plt>
   34a48:	ldr	x1, [x23]
   34a4c:	mov	w0, #0xa                   	// #10
   34a50:	bl	65b0 <fputc@plt>
   34a54:	ldr	w0, [x22]
   34a58:	orr	w0, w0, #0x100
   34a5c:	str	w0, [x22]
   34a60:	b	346ec <PyInit__decimal@@Base+0x184ac>
   34a64:	ldr	x2, [sp, #120]
   34a68:	mov	x0, x19
   34a6c:	mov	w1, #0x100                 	// #256
   34a70:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   34a74:	b	3499c <PyInit__decimal@@Base+0x1875c>
   34a78:	mov	x2, x24
   34a7c:	mov	x0, x28
   34a80:	mov	w1, #0x100                 	// #256
   34a84:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   34a88:	b	348c8 <PyInit__decimal@@Base+0x18688>
   34a8c:	ldr	x2, [sp, #120]
   34a90:	mov	x0, x28
   34a94:	mov	w1, #0x100                 	// #256
   34a98:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   34a9c:	b	349f8 <PyInit__decimal@@Base+0x187b8>
   34aa0:	ldr	x2, [sp, #120]
   34aa4:	mov	x0, x28
   34aa8:	mov	w1, #0x100                 	// #256
   34aac:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   34ab0:	b	34968 <PyInit__decimal@@Base+0x18728>
   34ab4:	ldr	w0, [x22]
   34ab8:	orr	w0, w0, #0x200
   34abc:	str	w0, [x22]
   34ac0:	b	34778 <PyInit__decimal@@Base+0x18538>
   34ac4:	cmp	x19, x20
   34ac8:	b.eq	34b1c <PyInit__decimal@@Base+0x188dc>  // b.none
   34acc:	mov	x2, x22
   34ad0:	mov	x1, x19
   34ad4:	mov	x0, x20
   34ad8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   34adc:	cmp	x28, x21
   34ae0:	cset	w23, ne  // ne = any
   34ae4:	cbz	w0, 34708 <PyInit__decimal@@Base+0x184c8>
   34ae8:	ldrb	w0, [x19]
   34aec:	tst	w0, #0xe0
   34af0:	b.ne	34b08 <PyInit__decimal@@Base+0x188c8>  // b.any
   34af4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34af8:	ldr	x0, [x19, #40]
   34afc:	ldr	x1, [x1, #1912]
   34b00:	blr	x1
   34b04:	ldrb	w0, [x19]
   34b08:	tbnz	w0, #4, 34b1c <PyInit__decimal@@Base+0x188dc>
   34b0c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34b10:	mov	x0, x19
   34b14:	ldr	x1, [x1, #1912]
   34b18:	blr	x1
   34b1c:	cmp	x28, x21
   34b20:	b.eq	34b6c <PyInit__decimal@@Base+0x1892c>  // b.none
   34b24:	mov	x2, x22
   34b28:	mov	x1, x28
   34b2c:	mov	x0, x21
   34b30:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   34b34:	cbz	w0, 34b8c <PyInit__decimal@@Base+0x1894c>
   34b38:	ldrb	w0, [x28]
   34b3c:	tst	w0, #0xe0
   34b40:	b.ne	34b58 <PyInit__decimal@@Base+0x18918>  // b.any
   34b44:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34b48:	ldr	x0, [x28, #40]
   34b4c:	ldr	x1, [x1, #1912]
   34b50:	blr	x1
   34b54:	ldrb	w0, [x28]
   34b58:	tbnz	w0, #4, 34b6c <PyInit__decimal@@Base+0x1892c>
   34b5c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34b60:	mov	x0, x28
   34b64:	ldr	x1, [x1, #1912]
   34b68:	blr	x1
   34b6c:	ldr	w1, [sp, #172]
   34b70:	mov	w2, #0x3be                 	// #958
   34b74:	ldr	w0, [x22]
   34b78:	and	w1, w1, w2
   34b7c:	orr	w0, w0, w1
   34b80:	ldp	x27, x28, [sp, #80]
   34b84:	str	w0, [x22]
   34b88:	b	34798 <PyInit__decimal@@Base+0x18558>
   34b8c:	cmp	x19, x20
   34b90:	mov	w23, #0x1                   	// #1
   34b94:	b.ne	34708 <PyInit__decimal@@Base+0x184c8>  // b.any
   34b98:	b	34740 <PyInit__decimal@@Base+0x18500>
   34b9c:	nop
   34ba0:	sub	sp, sp, #0x4d0
   34ba4:	stp	x29, x30, [sp]
   34ba8:	mov	x29, sp
   34bac:	stp	x19, x20, [sp, #16]
   34bb0:	mov	x19, x2
   34bb4:	mov	x20, x3
   34bb8:	stp	x21, x22, [sp, #32]
   34bbc:	mov	w3, #0x30                  	// #48
   34bc0:	mov	x21, x1
   34bc4:	stp	x23, x24, [sp, #48]
   34bc8:	mov	x24, x4
   34bcc:	mov	x23, x5
   34bd0:	stp	x25, x26, [sp, #64]
   34bd4:	stp	x27, x28, [sp, #80]
   34bd8:	ldrb	w26, [x2]
   34bdc:	str	x2, [sp, #96]
   34be0:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   34be4:	ldrb	w27, [x20]
   34be8:	ldr	q0, [x2, #1760]
   34bec:	add	x2, sp, #0xd0
   34bf0:	strb	w3, [sp, #112]
   34bf4:	stp	xzr, xzr, [sp, #120]
   34bf8:	str	x2, [sp, #152]
   34bfc:	orr	w2, w26, w27
   34c00:	stur	q0, [sp, #136]
   34c04:	tst	w2, #0xe
   34c08:	b.eq	34c6c <PyInit__decimal@@Base+0x18a2c>  // b.none
   34c0c:	mov	x4, x5
   34c10:	mov	x3, x24
   34c14:	mov	x2, x20
   34c18:	mov	x1, x19
   34c1c:	mov	x0, x21
   34c20:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   34c24:	cbz	w0, 34c48 <PyInit__decimal@@Base+0x18a08>
   34c28:	ldp	x29, x30, [sp]
   34c2c:	ldp	x19, x20, [sp, #16]
   34c30:	ldp	x21, x22, [sp, #32]
   34c34:	ldp	x23, x24, [sp, #48]
   34c38:	ldp	x25, x26, [sp, #64]
   34c3c:	ldp	x27, x28, [sp, #80]
   34c40:	add	sp, sp, #0x4d0
   34c44:	ret
   34c48:	ldrb	w1, [x19]
   34c4c:	ldrb	w0, [x20]
   34c50:	tbz	w1, #1, 34e38 <PyInit__decimal@@Base+0x18bf8>
   34c54:	tbz	w0, #1, 34f0c <PyInit__decimal@@Base+0x18ccc>
   34c58:	mov	x2, x23
   34c5c:	mov	x0, x21
   34c60:	mov	w1, #0x100                 	// #256
   34c64:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   34c68:	b	34c28 <PyInit__decimal@@Base+0x189e8>
   34c6c:	ldr	x5, [x20, #24]
   34c70:	mov	w25, w0
   34c74:	ldr	x1, [x20, #40]
   34c78:	ldr	x22, [x19, #24]
   34c7c:	add	x1, x1, x5, lsl #3
   34c80:	ldr	x0, [x19, #40]
   34c84:	ldur	x1, [x1, #-8]
   34c88:	add	x0, x0, x22, lsl #3
   34c8c:	ldur	x0, [x0, #-8]
   34c90:	cbz	x1, 34e6c <PyInit__decimal@@Base+0x18c2c>
   34c94:	ldr	x2, [x19, #8]
   34c98:	ldr	x1, [x20, #8]
   34c9c:	sub	x1, x2, x1
   34ca0:	str	x1, [sp, #96]
   34ca4:	cbz	x0, 35020 <PyInit__decimal@@Base+0x18de0>
   34ca8:	ldr	x1, [x4]
   34cac:	ldr	x2, [x20, #16]
   34cb0:	ldr	x0, [x19, #16]
   34cb4:	add	x2, x2, x1
   34cb8:	sub	x2, x2, x0
   34cbc:	add	x28, x2, #0x1
   34cc0:	cmp	x28, #0x0
   34cc4:	b.gt	34f24 <PyInit__decimal@@Base+0x18ce4>
   34cc8:	b.ne	34e84 <PyInit__decimal@@Base+0x18c44>  // b.any
   34ccc:	cmp	x19, x21
   34cd0:	cset	w0, ne  // ne = any
   34cd4:	add	x22, x22, #0x1
   34cd8:	cmp	w0, #0x0
   34cdc:	sub	x22, x22, x5
   34ce0:	ccmp	x20, x21, #0x4, ne  // ne = any
   34ce4:	b.ne	34ec8 <PyInit__decimal@@Base+0x18c88>  // b.any
   34ce8:	cmp	x20, x21
   34cec:	b.eq	3505c <PyInit__decimal@@Base+0x18e1c>  // b.none
   34cf0:	cmp	x5, #0x1
   34cf4:	b.eq	35164 <PyInit__decimal@@Base+0x18f24>  // b.none
   34cf8:	cmp	x5, #0x400
   34cfc:	b.gt	34f5c <PyInit__decimal@@Base+0x18d1c>
   34d00:	ldr	x4, [x19, #24]
   34d04:	mov	x1, #0x0                   	// #0
   34d08:	ldr	x2, [x19, #40]
   34d0c:	ldr	x3, [x20, #40]
   34d10:	ldr	x0, [x21, #40]
   34d14:	bl	1d6c8 <PyInit__decimal@@Base+0x1488>
   34d18:	tbnz	w0, #31, 350b0 <PyInit__decimal@@Base+0x18e70>
   34d1c:	sxtw	x19, w0
   34d20:	ldr	x1, [x21, #40]
   34d24:	cmp	x22, #0x1
   34d28:	sub	x1, x1, #0x8
   34d2c:	b.gt	34d40 <PyInit__decimal@@Base+0x18b00>
   34d30:	b	34d48 <PyInit__decimal@@Base+0x18b08>
   34d34:	sub	x22, x22, #0x1
   34d38:	cmp	x22, #0x1
   34d3c:	b.eq	34d48 <PyInit__decimal@@Base+0x18b08>  // b.none
   34d40:	ldr	x0, [x1, x22, lsl #3]
   34d44:	cbz	x0, 34d34 <PyInit__decimal@@Base+0x18af4>
   34d48:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34d4c:	ldrb	w0, [x21]
   34d50:	ldr	x2, [x21, #32]
   34d54:	ldr	x1, [x1, #1880]
   34d58:	cmp	x1, x22
   34d5c:	csel	x1, x1, x22, ge  // ge = tcont
   34d60:	cmp	x1, x2
   34d64:	b.eq	34d74 <PyInit__decimal@@Base+0x18b34>  // b.none
   34d68:	tbz	w0, #5, 35184 <PyInit__decimal@@Base+0x18f44>
   34d6c:	cmp	x1, x2
   34d70:	b.gt	35198 <PyInit__decimal@@Base+0x18f58>
   34d74:	eor	w26, w26, w27
   34d78:	and	w1, w0, #0xfffffff0
   34d7c:	and	w0, w26, #0x1
   34d80:	str	x22, [x21, #24]
   34d84:	orr	w0, w0, w1
   34d88:	strb	w0, [x21]
   34d8c:	ldr	x0, [sp, #96]
   34d90:	sub	x27, x0, x28
   34d94:	mov	x0, x21
   34d98:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   34d9c:	cbz	x19, 350c4 <PyInit__decimal@@Base+0x18e84>
   34da0:	ldr	x2, [x21, #40]
   34da4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   34da8:	movk	x0, #0xcccd
   34dac:	ldr	x1, [x2]
   34db0:	umulh	x0, x1, x0
   34db4:	lsr	x0, x0, #3
   34db8:	add	x0, x0, x0, lsl #2
   34dbc:	subs	x0, x1, x0, lsl #1
   34dc0:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   34dc4:	b.ne	34dd0 <PyInit__decimal@@Base+0x18b90>  // b.any
   34dc8:	add	x1, x1, #0x1
   34dcc:	str	x1, [x2]
   34dd0:	str	x27, [x21, #8]
   34dd4:	ldrb	w0, [sp, #112]
   34dd8:	tst	w0, #0xe0
   34ddc:	b.ne	34df4 <PyInit__decimal@@Base+0x18bb4>  // b.any
   34de0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34de4:	ldr	x0, [sp, #152]
   34de8:	ldr	x1, [x1, #1912]
   34dec:	blr	x1
   34df0:	ldrb	w0, [sp, #112]
   34df4:	tbnz	w0, #4, 34e08 <PyInit__decimal@@Base+0x18bc8>
   34df8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34dfc:	add	x0, sp, #0x70
   34e00:	ldr	x1, [x1, #1912]
   34e04:	blr	x1
   34e08:	mov	x2, x23
   34e0c:	mov	x1, x24
   34e10:	mov	x0, x21
   34e14:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   34e18:	ldp	x29, x30, [sp]
   34e1c:	ldp	x19, x20, [sp, #16]
   34e20:	ldp	x21, x22, [sp, #32]
   34e24:	ldp	x23, x24, [sp, #48]
   34e28:	ldp	x25, x26, [sp, #64]
   34e2c:	ldp	x27, x28, [sp, #80]
   34e30:	add	sp, sp, #0x4d0
   34e34:	ret
   34e38:	ldr	x2, [x24, #16]
   34e3c:	eor	w1, w1, w0
   34e40:	ldr	x3, [x24]
   34e44:	add	x2, x2, #0x1
   34e48:	mov	x0, x21
   34e4c:	and	w1, w1, #0x1
   34e50:	sub	x3, x2, x3
   34e54:	mov	x2, #0x0                   	// #0
   34e58:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   34e5c:	ldr	w0, [x23]
   34e60:	orr	w0, w0, #0x1
   34e64:	str	w0, [x23]
   34e68:	b	34c28 <PyInit__decimal@@Base+0x189e8>
   34e6c:	cbnz	x0, 34ffc <PyInit__decimal@@Base+0x18dbc>
   34e70:	mov	x2, x23
   34e74:	mov	x0, x21
   34e78:	mov	w1, #0x10                  	// #16
   34e7c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   34e80:	b	34c28 <PyInit__decimal@@Base+0x189e8>
   34e84:	add	x4, sp, #0x70
   34e88:	mvn	x2, x2
   34e8c:	mov	x0, x4
   34e90:	mov	x1, x20
   34e94:	mov	x3, x23
   34e98:	str	x4, [sp, #104]
   34e9c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   34ea0:	ldr	x4, [sp, #104]
   34ea4:	cbz	w0, 350b0 <PyInit__decimal@@Base+0x18e70>
   34ea8:	ldr	x5, [sp, #136]
   34eac:	mov	x22, #0x1                   	// #1
   34eb0:	ldr	x0, [x19, #24]
   34eb4:	sub	x22, x22, x5
   34eb8:	mov	x20, x4
   34ebc:	cmp	x19, x21
   34ec0:	add	x22, x22, x0
   34ec4:	b.eq	34cf0 <PyInit__decimal@@Base+0x18ab0>  // b.none
   34ec8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34ecc:	ldr	x0, [x21, #32]
   34ed0:	ldr	x1, [x1, #1880]
   34ed4:	cmp	x1, x22
   34ed8:	csel	x1, x1, x22, ge  // ge = tcont
   34edc:	cmp	x1, x0
   34ee0:	b.eq	34cf0 <PyInit__decimal@@Base+0x18ab0>  // b.none
   34ee4:	ldrb	w2, [x21]
   34ee8:	tbz	w2, #5, 3504c <PyInit__decimal@@Base+0x18e0c>
   34eec:	cmp	x1, x0
   34ef0:	b.le	34cf0 <PyInit__decimal@@Base+0x18ab0>
   34ef4:	mov	x2, x23
   34ef8:	mov	x0, x21
   34efc:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   34f00:	cbz	w0, 350b0 <PyInit__decimal@@Base+0x18e70>
   34f04:	ldr	x5, [x20, #24]
   34f08:	b	34cf0 <PyInit__decimal@@Base+0x18ab0>
   34f0c:	eor	w1, w1, w0
   34f10:	mov	w2, #0x2                   	// #2
   34f14:	mov	x0, x21
   34f18:	and	w1, w1, #0x1
   34f1c:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   34f20:	b	34c28 <PyInit__decimal@@Base+0x189e8>
   34f24:	add	x4, sp, #0x70
   34f28:	mov	x1, x19
   34f2c:	mov	x0, x4
   34f30:	mov	x3, x23
   34f34:	mov	x2, x28
   34f38:	str	x4, [sp, #104]
   34f3c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   34f40:	ldr	x4, [sp, #104]
   34f44:	cbz	w0, 350b0 <PyInit__decimal@@Base+0x18e70>
   34f48:	mov	x19, x4
   34f4c:	mov	w0, #0x1                   	// #1
   34f50:	ldr	x5, [x20, #24]
   34f54:	ldr	x22, [sp, #136]
   34f58:	b	34cd4 <PyInit__decimal@@Base+0x18a94>
   34f5c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   34f60:	add	x5, sp, #0x2d0
   34f64:	mov	w7, #0x30                  	// #48
   34f68:	add	x22, sp, #0xa0
   34f6c:	ldr	q0, [x0, #1760]
   34f70:	mov	x3, x20
   34f74:	mov	x0, x21
   34f78:	mov	x2, x19
   34f7c:	mov	x1, x22
   34f80:	mov	x4, x23
   34f84:	strb	w7, [sp, #160]
   34f88:	stp	xzr, xzr, [sp, #168]
   34f8c:	stur	q0, [sp, #184]
   34f90:	str	x5, [sp, #200]
   34f94:	bl	34600 <PyInit__decimal@@Base+0x183c0>
   34f98:	ldrb	w0, [x21]
   34f9c:	tst	w0, #0xe
   34fa0:	b.ne	35068 <PyInit__decimal@@Base+0x18e28>  // b.any
   34fa4:	ldrb	w1, [sp, #160]
   34fa8:	tst	w1, #0xe
   34fac:	b.ne	35068 <PyInit__decimal@@Base+0x18e28>  // b.any
   34fb0:	ldr	x2, [sp, #184]
   34fb4:	ldr	x0, [sp, #200]
   34fb8:	add	x2, x0, x2, lsl #3
   34fbc:	ldur	x2, [x2, #-8]
   34fc0:	cmp	x2, #0x0
   34fc4:	cset	x19, ne  // ne = any
   34fc8:	tst	w1, #0xe0
   34fcc:	b.ne	34fe0 <PyInit__decimal@@Base+0x18da0>  // b.any
   34fd0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34fd4:	ldr	x1, [x1, #1912]
   34fd8:	blr	x1
   34fdc:	ldrb	w1, [sp, #160]
   34fe0:	tbnz	w1, #4, 34ff4 <PyInit__decimal@@Base+0x18db4>
   34fe4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   34fe8:	mov	x0, x22
   34fec:	ldr	x1, [x1, #1912]
   34ff0:	blr	x1
   34ff4:	ldr	x22, [x21, #24]
   34ff8:	b	34d20 <PyInit__decimal@@Base+0x18ae0>
   34ffc:	eor	w1, w26, w27
   35000:	mov	x0, x21
   35004:	and	w1, w1, #0x1
   35008:	mov	w2, #0x2                   	// #2
   3500c:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   35010:	ldr	w0, [x23]
   35014:	orr	w0, w0, #0x4
   35018:	str	w0, [x23]
   3501c:	b	34c28 <PyInit__decimal@@Base+0x189e8>
   35020:	mov	x3, x1
   35024:	eor	w1, w26, w27
   35028:	mov	x0, x21
   3502c:	and	w1, w1, #0x1
   35030:	mov	x2, #0x0                   	// #0
   35034:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   35038:	mov	x2, x23
   3503c:	mov	x1, x24
   35040:	mov	x0, x21
   35044:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   35048:	b	34c28 <PyInit__decimal@@Base+0x189e8>
   3504c:	mov	x2, x23
   35050:	mov	x0, x21
   35054:	bl	28670 <PyInit__decimal@@Base+0xc430>
   35058:	b	34f00 <PyInit__decimal@@Base+0x18cc0>
   3505c:	cmp	x22, x5
   35060:	b.le	34cf0 <PyInit__decimal@@Base+0x18ab0>
   35064:	b	34ec8 <PyInit__decimal@@Base+0x18c88>
   35068:	mov	x0, x21
   3506c:	mov	w2, #0x4                   	// #4
   35070:	mov	w1, #0x0                   	// #0
   35074:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   35078:	ldrb	w0, [sp, #160]
   3507c:	tst	w0, #0xe0
   35080:	b.ne	35098 <PyInit__decimal@@Base+0x18e58>  // b.any
   35084:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   35088:	ldr	x0, [sp, #200]
   3508c:	ldr	x1, [x1, #1912]
   35090:	blr	x1
   35094:	ldrb	w0, [sp, #160]
   35098:	tbnz	w0, #4, 34dd4 <PyInit__decimal@@Base+0x18b94>
   3509c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   350a0:	mov	x0, x22
   350a4:	ldr	x1, [x1, #1912]
   350a8:	blr	x1
   350ac:	b	34dd4 <PyInit__decimal@@Base+0x18b94>
   350b0:	mov	x2, x23
   350b4:	mov	x0, x21
   350b8:	mov	w1, #0x200                 	// #512
   350bc:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   350c0:	b	34dd4 <PyInit__decimal@@Base+0x18b94>
   350c4:	cmp	x28, #0x0
   350c8:	cset	w0, gt
   350cc:	tst	w25, w0
   350d0:	b.eq	34dd0 <PyInit__decimal@@Base+0x18b90>  // b.none
   350d4:	ldr	x2, [x21, #24]
   350d8:	cmp	x2, #0x0
   350dc:	b.le	351ac <PyInit__decimal@@Base+0x18f6c>
   350e0:	mov	x1, #0x0                   	// #0
   350e4:	ldr	x3, [x21, #40]
   350e8:	b	350f8 <PyInit__decimal@@Base+0x18eb8>
   350ec:	add	x1, x1, #0x1
   350f0:	cmp	x1, x2
   350f4:	b.eq	351ac <PyInit__decimal@@Base+0x18f6c>  // b.none
   350f8:	ldr	x0, [x3, x1, lsl #3]
   350fc:	cbz	x0, 350ec <PyInit__decimal@@Base+0x18eac>
   35100:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   35104:	add	x2, x1, x1, lsl #2
   35108:	movk	x3, #0xcccd
   3510c:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   35110:	lsl	x2, x2, #2
   35114:	movk	x4, #0x1999, lsl #48
   35118:	mul	x5, x0, x3
   3511c:	sub	x2, x2, x1
   35120:	ror	x1, x5, #1
   35124:	cmp	x1, x4
   35128:	b.hi	3514c <PyInit__decimal@@Base+0x18f0c>  // b.pmore
   3512c:	nop
   35130:	umulh	x0, x0, x3
   35134:	add	x2, x2, #0x1
   35138:	lsr	x0, x0, #3
   3513c:	mul	x1, x0, x3
   35140:	ror	x1, x1, #1
   35144:	cmp	x1, x4
   35148:	b.ls	35130 <PyInit__decimal@@Base+0x18ef0>  // b.plast
   3514c:	cmp	x28, x2
   35150:	mov	x0, x21
   35154:	csel	x1, x28, x2, le
   35158:	add	x27, x27, x1
   3515c:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   35160:	b	34dd0 <PyInit__decimal@@Base+0x18b90>
   35164:	ldr	x0, [x20, #40]
   35168:	ldr	x2, [x19, #24]
   3516c:	ldr	x3, [x0]
   35170:	ldr	x1, [x19, #40]
   35174:	ldr	x0, [x21, #40]
   35178:	bl	1d5f8 <PyInit__decimal@@Base+0x13b8>
   3517c:	mov	x19, x0
   35180:	b	34d20 <PyInit__decimal@@Base+0x18ae0>
   35184:	mov	x2, x23
   35188:	mov	x0, x21
   3518c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   35190:	ldrb	w0, [x21]
   35194:	b	34d74 <PyInit__decimal@@Base+0x18b34>
   35198:	mov	x2, x23
   3519c:	mov	x0, x21
   351a0:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   351a4:	ldrb	w0, [x21]
   351a8:	b	34d74 <PyInit__decimal@@Base+0x18b34>
   351ac:	mov	x2, #0x0                   	// #0
   351b0:	b	3514c <PyInit__decimal@@Base+0x18f0c>
   351b4:	nop
   351b8:	sub	sp, sp, #0x2a0
   351bc:	stp	x29, x30, [sp]
   351c0:	mov	x29, sp
   351c4:	stp	x19, x20, [sp, #16]
   351c8:	mov	x19, x2
   351cc:	mov	x20, x3
   351d0:	stp	x21, x22, [sp, #32]
   351d4:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   351d8:	mov	x22, x0
   351dc:	stp	x23, x24, [sp, #48]
   351e0:	mov	x21, x1
   351e4:	stp	x25, x26, [sp, #64]
   351e8:	mov	x26, x5
   351ec:	stp	x27, x28, [sp, #80]
   351f0:	ldrb	w24, [x3]
   351f4:	ldr	x9, [x19, #24]
   351f8:	stp	xzr, xzr, [sp, #120]
   351fc:	ldrb	w28, [x19]
   35200:	ldr	x3, [x19, #40]
   35204:	eor	w24, w28, w24
   35208:	ldr	q0, [x2, #1760]
   3520c:	mov	w2, #0x30                  	// #48
   35210:	add	x3, x3, x9, lsl #3
   35214:	strb	w2, [sp, #112]
   35218:	ldr	x6, [x19, #8]
   3521c:	stur	q0, [sp, #136]
   35220:	add	x2, sp, #0xa0
   35224:	ldur	x3, [x3, #-8]
   35228:	str	x2, [sp, #152]
   3522c:	ldr	x7, [x20, #8]
   35230:	and	w24, w24, #0x1
   35234:	cmp	x6, x7
   35238:	csel	x25, x6, x7, le
   3523c:	cbz	x3, 354b8 <PyInit__decimal@@Base+0x19278>
   35240:	ldr	x0, [x19, #16]
   35244:	ldr	x1, [x20, #16]
   35248:	add	x0, x6, x0
   3524c:	add	x1, x7, x1
   35250:	subs	x0, x0, x1
   35254:	b.mi	35468 <PyInit__decimal@@Base+0x19228>  // b.first
   35258:	ldr	x1, [x4]
   3525c:	mov	x8, x4
   35260:	cmp	x0, x1
   35264:	b.gt	35580 <PyInit__decimal@@Base+0x19340>
   35268:	cmp	x6, x7
   3526c:	b.eq	35560 <PyInit__decimal@@Base+0x19320>  // b.none
   35270:	str	x4, [sp, #104]
   35274:	sub	x2, x6, x7
   35278:	cmp	x2, #0x0
   3527c:	b.le	35590 <PyInit__decimal@@Base+0x19350>
   35280:	add	x27, sp, #0x70
   35284:	mov	x1, x19
   35288:	mov	x0, x27
   3528c:	mov	x3, x5
   35290:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   35294:	ldr	x8, [sp, #104]
   35298:	cbz	w0, 354cc <PyInit__decimal@@Base+0x1928c>
   3529c:	ldr	x23, [sp, #136]
   352a0:	mov	x19, x27
   352a4:	ldr	x27, [x20, #24]
   352a8:	add	x23, x23, #0x1
   352ac:	sub	x23, x23, x27
   352b0:	cmp	x27, x23
   352b4:	ccmp	x20, x22, #0x0, gt
   352b8:	b.eq	352e8 <PyInit__decimal@@Base+0x190a8>  // b.none
   352bc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   352c0:	ldr	x0, [x22, #32]
   352c4:	ldr	x1, [x1, #1880]
   352c8:	cmp	x1, x23
   352cc:	csel	x1, x1, x23, ge  // ge = tcont
   352d0:	cmp	x1, x0
   352d4:	b.eq	352e8 <PyInit__decimal@@Base+0x190a8>  // b.none
   352d8:	ldrb	w2, [x22]
   352dc:	tbz	w2, #5, 356d0 <PyInit__decimal@@Base+0x19490>
   352e0:	cmp	x1, x0
   352e4:	b.gt	35720 <PyInit__decimal@@Base+0x194e0>
   352e8:	cmp	x21, x19
   352ec:	b.eq	355d8 <PyInit__decimal@@Base+0x19398>  // b.none
   352f0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   352f4:	ldr	x0, [x21, #32]
   352f8:	ldr	x1, [x1, #1880]
   352fc:	cmp	x1, x27
   35300:	csel	x1, x1, x27, ge  // ge = tcont
   35304:	cmp	x1, x0
   35308:	b.eq	355e4 <PyInit__decimal@@Base+0x193a4>  // b.none
   3530c:	ldrb	w2, [x21]
   35310:	tbz	w2, #5, 356b0 <PyInit__decimal@@Base+0x19470>
   35314:	cmp	x1, x0
   35318:	mov	x5, x27
   3531c:	b.gt	35708 <PyInit__decimal@@Base+0x194c8>
   35320:	cmp	x5, #0x1
   35324:	b.eq	355ec <PyInit__decimal@@Base+0x193ac>  // b.none
   35328:	str	x8, [sp, #104]
   3532c:	cmp	x5, #0x400
   35330:	b.gt	35624 <PyInit__decimal@@Base+0x193e4>
   35334:	ldr	x4, [x19, #24]
   35338:	ldr	x2, [x19, #40]
   3533c:	ldr	x3, [x20, #40]
   35340:	ldr	x1, [x21, #40]
   35344:	ldr	x0, [x22, #40]
   35348:	bl	1d6c8 <PyInit__decimal@@Base+0x1488>
   3534c:	cmn	w0, #0x1
   35350:	b.eq	356a0 <PyInit__decimal@@Base+0x19460>  // b.none
   35354:	ldr	x0, [x22, #40]
   35358:	ldr	x8, [sp, #104]
   3535c:	sub	x1, x0, #0x8
   35360:	cmp	x23, #0x1
   35364:	b.gt	35378 <PyInit__decimal@@Base+0x19138>
   35368:	b	35380 <PyInit__decimal@@Base+0x19140>
   3536c:	sub	x23, x23, #0x1
   35370:	cmp	x23, #0x1
   35374:	b.eq	35380 <PyInit__decimal@@Base+0x19140>  // b.none
   35378:	ldr	x0, [x1, x23, lsl #3]
   3537c:	cbz	x0, 3536c <PyInit__decimal@@Base+0x1912c>
   35380:	adrp	x19, 65000 <PyInit__decimal@@Base+0x48dc0>
   35384:	ldr	x0, [x22, #32]
   35388:	ldr	x1, [x19, #1880]
   3538c:	cmp	x1, x23
   35390:	csel	x1, x1, x23, ge  // ge = tcont
   35394:	cmp	x1, x0
   35398:	b.eq	353ac <PyInit__decimal@@Base+0x1916c>  // b.none
   3539c:	ldrb	w2, [x22]
   353a0:	tbz	w2, #5, 356f0 <PyInit__decimal@@Base+0x194b0>
   353a4:	cmp	x1, x0
   353a8:	b.gt	35678 <PyInit__decimal@@Base+0x19438>
   353ac:	str	x23, [x22, #24]
   353b0:	mov	x0, x22
   353b4:	str	x8, [sp, #104]
   353b8:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   353bc:	str	xzr, [x22, #8]
   353c0:	ldrb	w0, [x22]
   353c4:	ldr	x8, [sp, #104]
   353c8:	and	w0, w0, #0xfffffff0
   353cc:	orr	w24, w24, w0
   353d0:	strb	w24, [x22]
   353d4:	ldr	x1, [x22, #16]
   353d8:	ldr	x0, [x8]
   353dc:	cmp	x1, x0
   353e0:	b.gt	35580 <PyInit__decimal@@Base+0x19340>
   353e4:	ldr	x1, [x21, #40]
   353e8:	cmp	x27, #0x1
   353ec:	sub	x1, x1, #0x8
   353f0:	b.gt	35404 <PyInit__decimal@@Base+0x191c4>
   353f4:	b	3540c <PyInit__decimal@@Base+0x191cc>
   353f8:	sub	x27, x27, #0x1
   353fc:	cmp	x27, #0x1
   35400:	b.eq	3540c <PyInit__decimal@@Base+0x191cc>  // b.none
   35404:	ldr	x0, [x1, x27, lsl #3]
   35408:	cbz	x0, 353f8 <PyInit__decimal@@Base+0x191b8>
   3540c:	ldr	x1, [x19, #1880]
   35410:	ldr	x0, [x21, #32]
   35414:	cmp	x1, x27
   35418:	csel	x1, x1, x27, ge  // ge = tcont
   3541c:	cmp	x1, x0
   35420:	b.eq	35440 <PyInit__decimal@@Base+0x19200>  // b.none
   35424:	ldrb	w2, [x21]
   35428:	tbz	w2, #5, 35690 <PyInit__decimal@@Base+0x19450>
   3542c:	cmp	x1, x0
   35430:	b.le	35440 <PyInit__decimal@@Base+0x19200>
   35434:	mov	x2, x26
   35438:	mov	x0, x21
   3543c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   35440:	str	x27, [x21, #24]
   35444:	mov	x0, x21
   35448:	and	w28, w28, #0x1
   3544c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   35450:	str	x25, [x21, #8]
   35454:	ldrb	w0, [x21]
   35458:	and	w0, w0, #0xfffffff0
   3545c:	orr	w28, w0, w28
   35460:	strb	w28, [x21]
   35464:	b	354ec <PyInit__decimal@@Base+0x192ac>
   35468:	cmp	x6, x7
   3546c:	b.gt	35540 <PyInit__decimal@@Base+0x19300>
   35470:	mov	x2, x5
   35474:	mov	x1, x19
   35478:	mov	x0, x21
   3547c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   35480:	cbz	w0, 354cc <PyInit__decimal@@Base+0x1928c>
   35484:	mov	w1, w24
   35488:	mov	x0, x22
   3548c:	mov	x3, #0x0                   	// #0
   35490:	mov	x2, #0x0                   	// #0
   35494:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   35498:	ldp	x29, x30, [sp]
   3549c:	ldp	x19, x20, [sp, #16]
   354a0:	ldp	x21, x22, [sp, #32]
   354a4:	ldp	x23, x24, [sp, #48]
   354a8:	ldp	x25, x26, [sp, #64]
   354ac:	ldp	x27, x28, [sp, #80]
   354b0:	add	sp, sp, #0x2a0
   354b4:	ret
   354b8:	mov	x2, x5
   354bc:	mov	x1, x19
   354c0:	mov	x0, x21
   354c4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   354c8:	cbnz	w0, 35558 <PyInit__decimal@@Base+0x19318>
   354cc:	mov	x0, x22
   354d0:	mov	w2, #0x4                   	// #4
   354d4:	mov	w1, #0x0                   	// #0
   354d8:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   354dc:	mov	x0, x21
   354e0:	mov	w2, #0x4                   	// #4
   354e4:	mov	w1, #0x0                   	// #0
   354e8:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   354ec:	ldrb	w0, [sp, #112]
   354f0:	tst	w0, #0xe0
   354f4:	b.ne	3550c <PyInit__decimal@@Base+0x192cc>  // b.any
   354f8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   354fc:	ldr	x0, [sp, #152]
   35500:	ldr	x1, [x1, #1912]
   35504:	blr	x1
   35508:	ldrb	w0, [sp, #112]
   3550c:	tbnz	w0, #4, 35520 <PyInit__decimal@@Base+0x192e0>
   35510:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   35514:	add	x0, sp, #0x70
   35518:	ldr	x1, [x1, #1912]
   3551c:	blr	x1
   35520:	ldp	x29, x30, [sp]
   35524:	ldp	x19, x20, [sp, #16]
   35528:	ldp	x21, x22, [sp, #32]
   3552c:	ldp	x23, x24, [sp, #48]
   35530:	ldp	x25, x26, [sp, #64]
   35534:	ldp	x27, x28, [sp, #80]
   35538:	add	sp, sp, #0x2a0
   3553c:	ret
   35540:	mov	x3, x5
   35544:	sub	x2, x6, x7
   35548:	mov	x1, x19
   3554c:	mov	x0, x21
   35550:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   35554:	cbz	w0, 354cc <PyInit__decimal@@Base+0x1928c>
   35558:	str	x25, [x21, #8]
   3555c:	b	35484 <PyInit__decimal@@Base+0x19244>
   35560:	ldr	x27, [x20, #24]
   35564:	cmp	x19, x22
   35568:	sub	x23, x9, x27
   3556c:	add	x23, x23, #0x1
   35570:	b.ne	352b0 <PyInit__decimal@@Base+0x19070>  // b.any
   35574:	cmp	x9, x23
   35578:	b.gt	352e8 <PyInit__decimal@@Base+0x190a8>
   3557c:	b	352b0 <PyInit__decimal@@Base+0x19070>
   35580:	ldr	w0, [x26]
   35584:	orr	w0, w0, #0x8
   35588:	str	w0, [x26]
   3558c:	b	354cc <PyInit__decimal@@Base+0x1928c>
   35590:	add	x23, sp, #0x70
   35594:	sub	x2, x7, x6
   35598:	mov	x1, x20
   3559c:	mov	x0, x23
   355a0:	mov	x3, x5
   355a4:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   355a8:	ldr	x8, [sp, #104]
   355ac:	cbz	w0, 354cc <PyInit__decimal@@Base+0x1928c>
   355b0:	ldr	x0, [x19, #24]
   355b4:	mov	x20, x23
   355b8:	ldr	x27, [sp, #136]
   355bc:	cmp	x19, x22
   355c0:	sub	x23, x0, x27
   355c4:	add	x23, x23, #0x1
   355c8:	b.ne	352bc <PyInit__decimal@@Base+0x1907c>  // b.any
   355cc:	cmp	x23, x0
   355d0:	b.ge	352bc <PyInit__decimal@@Base+0x1907c>  // b.tcont
   355d4:	b	352e8 <PyInit__decimal@@Base+0x190a8>
   355d8:	ldr	x0, [x21, #24]
   355dc:	cmp	x0, x27
   355e0:	b.le	352f0 <PyInit__decimal@@Base+0x190b0>
   355e4:	mov	x5, x27
   355e8:	b	35320 <PyInit__decimal@@Base+0x190e0>
   355ec:	ldr	x0, [x20, #40]
   355f0:	ldr	x2, [x19, #24]
   355f4:	ldr	x3, [x0]
   355f8:	cmp	x2, #0x1
   355fc:	ldr	x1, [x19, #40]
   35600:	ldr	x0, [x22, #40]
   35604:	ldr	x19, [x21, #40]
   35608:	b.ne	35660 <PyInit__decimal@@Base+0x19420>  // b.any
   3560c:	ldr	x2, [x1]
   35610:	udiv	x1, x2, x3
   35614:	msub	x3, x1, x3, x2
   35618:	str	x1, [x0]
   3561c:	str	x3, [x19]
   35620:	b	3535c <PyInit__decimal@@Base+0x1911c>
   35624:	mov	x0, x22
   35628:	mov	x3, x20
   3562c:	mov	x2, x19
   35630:	mov	x4, x26
   35634:	mov	x1, x21
   35638:	bl	34600 <PyInit__decimal@@Base+0x183c0>
   3563c:	ldrb	w0, [x22]
   35640:	tst	w0, #0xe
   35644:	b.ne	354cc <PyInit__decimal@@Base+0x1928c>  // b.any
   35648:	ldrb	w0, [x21]
   3564c:	tst	w0, #0xe
   35650:	b.ne	354cc <PyInit__decimal@@Base+0x1928c>  // b.any
   35654:	ldr	x27, [x21, #24]
   35658:	ldr	x23, [x22, #24]
   3565c:	b	35354 <PyInit__decimal@@Base+0x19114>
   35660:	str	x8, [sp, #104]
   35664:	bl	1d5f8 <PyInit__decimal@@Base+0x13b8>
   35668:	str	x0, [x19]
   3566c:	ldr	x0, [x22, #40]
   35670:	ldr	x8, [sp, #104]
   35674:	b	3535c <PyInit__decimal@@Base+0x1911c>
   35678:	mov	x2, x26
   3567c:	mov	x0, x22
   35680:	str	x8, [sp, #104]
   35684:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   35688:	ldr	x8, [sp, #104]
   3568c:	b	353ac <PyInit__decimal@@Base+0x1916c>
   35690:	mov	x2, x26
   35694:	mov	x0, x21
   35698:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3569c:	b	35440 <PyInit__decimal@@Base+0x19200>
   356a0:	ldr	w0, [x26]
   356a4:	orr	w0, w0, #0x200
   356a8:	str	w0, [x26]
   356ac:	b	354cc <PyInit__decimal@@Base+0x1928c>
   356b0:	mov	x2, x26
   356b4:	mov	x0, x21
   356b8:	str	x8, [sp, #104]
   356bc:	bl	28670 <PyInit__decimal@@Base+0xc430>
   356c0:	ldr	x8, [sp, #104]
   356c4:	cbz	w0, 354cc <PyInit__decimal@@Base+0x1928c>
   356c8:	ldr	x5, [x20, #24]
   356cc:	b	35320 <PyInit__decimal@@Base+0x190e0>
   356d0:	mov	x2, x26
   356d4:	mov	x0, x22
   356d8:	str	x8, [sp, #104]
   356dc:	bl	28670 <PyInit__decimal@@Base+0xc430>
   356e0:	ldr	x8, [sp, #104]
   356e4:	cbz	w0, 354cc <PyInit__decimal@@Base+0x1928c>
   356e8:	ldr	x27, [x20, #24]
   356ec:	b	352e8 <PyInit__decimal@@Base+0x190a8>
   356f0:	mov	x2, x26
   356f4:	mov	x0, x22
   356f8:	str	x8, [sp, #104]
   356fc:	bl	28670 <PyInit__decimal@@Base+0xc430>
   35700:	ldr	x8, [sp, #104]
   35704:	b	353ac <PyInit__decimal@@Base+0x1916c>
   35708:	mov	x2, x26
   3570c:	mov	x0, x21
   35710:	str	x8, [sp, #104]
   35714:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   35718:	ldr	x8, [sp, #104]
   3571c:	b	356c4 <PyInit__decimal@@Base+0x19484>
   35720:	mov	x2, x26
   35724:	mov	x0, x22
   35728:	str	x8, [sp, #104]
   3572c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   35730:	ldr	x8, [sp, #104]
   35734:	b	356e4 <PyInit__decimal@@Base+0x194a4>
   35738:	sub	sp, sp, #0x2a0
   3573c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   35740:	stp	x29, x30, [sp]
   35744:	mov	x29, sp
   35748:	ldr	q0, [x5, #1760]
   3574c:	stp	x19, x20, [sp, #16]
   35750:	mov	x19, x2
   35754:	add	x2, sp, #0xa0
   35758:	stp	x21, x22, [sp, #32]
   3575c:	mov	x22, x3
   35760:	mov	w3, #0x30                  	// #48
   35764:	stp	x23, x24, [sp, #48]
   35768:	add	x24, sp, #0x70
   3576c:	mov	x20, x0
   35770:	mov	x21, x1
   35774:	mov	x23, x4
   35778:	mov	x0, x24
   3577c:	strb	w3, [sp, #64]
   35780:	stp	xzr, xzr, [sp, #72]
   35784:	stur	q0, [sp, #88]
   35788:	str	x2, [sp, #104]
   3578c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   35790:	mov	x2, x19
   35794:	mov	w6, #0x0                   	// #0
   35798:	tbnz	x19, #63, 35910 <PyInit__decimal@@Base+0x196d0>
   3579c:	ldrb	w4, [sp, #64]
   357a0:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   357a4:	ldr	x3, [sp, #104]
   357a8:	and	w4, w4, #0xfffffff0
   357ac:	orr	w6, w6, w4
   357b0:	strb	w6, [sp, #64]
   357b4:	str	xzr, [sp, #72]
   357b8:	add	x5, x5, #0x180
   357bc:	stp	x2, xzr, [x3]
   357c0:	mov	x2, #0x1                   	// #1
   357c4:	str	x2, [sp, #88]
   357c8:	ldr	x4, [x5, #72]
   357cc:	ldr	x2, [x3]
   357d0:	cmp	x2, x4
   357d4:	b.cs	35858 <PyInit__decimal@@Base+0x19618>  // b.hs, b.nlast
   357d8:	ldr	x0, [x5, #32]
   357dc:	cmp	x2, x0
   357e0:	b.cs	35828 <PyInit__decimal@@Base+0x195e8>  // b.hs, b.nlast
   357e4:	ldr	x0, [x5, #16]
   357e8:	cmp	x2, x0
   357ec:	b.cs	35968 <PyInit__decimal@@Base+0x19728>  // b.hs, b.nlast
   357f0:	ldr	x0, [x5, #8]
   357f4:	cmp	x2, x0
   357f8:	ldrb	w2, [sp, #64]
   357fc:	cset	x3, cs  // cs = hs, nlast
   35800:	add	x3, x3, #0x1
   35804:	str	x3, [sp, #80]
   35808:	tst	w2, #0xe
   3580c:	b.ne	358a0 <PyInit__decimal@@Base+0x19660>  // b.any
   35810:	add	x19, sp, #0x40
   35814:	mov	x1, x24
   35818:	mov	x0, x19
   3581c:	mov	x2, x23
   35820:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   35824:	b	358ac <PyInit__decimal@@Base+0x1966c>
   35828:	ldr	x0, [x5, #48]
   3582c:	cmp	x2, x0
   35830:	b.cc	3597c <PyInit__decimal@@Base+0x1973c>  // b.lo, b.ul, b.last
   35834:	ldr	x0, [x5, #64]
   35838:	mov	x3, #0x9                   	// #9
   3583c:	cmp	x2, x0
   35840:	b.cs	35890 <PyInit__decimal@@Base+0x19650>  // b.hs, b.nlast
   35844:	ldr	x0, [x5, #56]
   35848:	cmp	x2, x0
   3584c:	cset	x3, cs  // cs = hs, nlast
   35850:	add	x3, x3, #0x7
   35854:	b	35890 <PyInit__decimal@@Base+0x19650>
   35858:	ldr	x0, [x5, #112]
   3585c:	cmp	x2, x0
   35860:	b.cs	35928 <PyInit__decimal@@Base+0x196e8>  // b.hs, b.nlast
   35864:	ldr	x0, [x5, #88]
   35868:	cmp	x2, x0
   3586c:	b.cc	35990 <PyInit__decimal@@Base+0x19750>  // b.lo, b.ul, b.last
   35870:	ldr	x0, [x5, #104]
   35874:	mov	x3, #0xe                   	// #14
   35878:	cmp	x2, x0
   3587c:	b.cs	35890 <PyInit__decimal@@Base+0x19650>  // b.hs, b.nlast
   35880:	ldr	x0, [x5, #96]
   35884:	cmp	x2, x0
   35888:	cset	x3, cs  // cs = hs, nlast
   3588c:	add	x3, x3, #0xc
   35890:	ldrb	w2, [sp, #64]
   35894:	str	x3, [sp, #80]
   35898:	tst	w2, #0xe
   3589c:	b.eq	35810 <PyInit__decimal@@Base+0x195d0>  // b.none
   358a0:	tst	w2, #0xc
   358a4:	add	x19, sp, #0x40
   358a8:	b.ne	359a4 <PyInit__decimal@@Base+0x19764>  // b.any
   358ac:	mov	x0, x20
   358b0:	mov	x4, x23
   358b4:	mov	x3, x22
   358b8:	mov	x1, x21
   358bc:	mov	x2, x19
   358c0:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   358c4:	ldrb	w0, [sp, #64]
   358c8:	tst	w0, #0xe0
   358cc:	b.ne	358e4 <PyInit__decimal@@Base+0x196a4>  // b.any
   358d0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   358d4:	ldr	x0, [sp, #104]
   358d8:	ldr	x1, [x1, #1912]
   358dc:	blr	x1
   358e0:	ldrb	w0, [sp, #64]
   358e4:	tbnz	w0, #4, 358f8 <PyInit__decimal@@Base+0x196b8>
   358e8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   358ec:	mov	x0, x19
   358f0:	ldr	x1, [x1, #1912]
   358f4:	blr	x1
   358f8:	ldp	x29, x30, [sp]
   358fc:	ldp	x19, x20, [sp, #16]
   35900:	ldp	x21, x22, [sp, #32]
   35904:	ldp	x23, x24, [sp, #48]
   35908:	add	sp, sp, #0x2a0
   3590c:	ret
   35910:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   35914:	mov	w6, #0x1                   	// #1
   35918:	cmp	x19, x0
   3591c:	b.eq	3579c <PyInit__decimal@@Base+0x1955c>  // b.none
   35920:	neg	x2, x19
   35924:	b	3579c <PyInit__decimal@@Base+0x1955c>
   35928:	ldr	x0, [x5, #144]
   3592c:	cmp	x2, x0
   35930:	b.cs	35954 <PyInit__decimal@@Base+0x19714>  // b.hs, b.nlast
   35934:	ldr	x0, [x5, #128]
   35938:	cmp	x2, x0
   3593c:	b.cs	359b8 <PyInit__decimal@@Base+0x19778>  // b.hs, b.nlast
   35940:	ldr	x0, [x5, #120]
   35944:	cmp	x2, x0
   35948:	cset	x3, cs  // cs = hs, nlast
   3594c:	add	x3, x3, #0xf
   35950:	b	35890 <PyInit__decimal@@Base+0x19650>
   35954:	ldr	x0, [x5, #152]
   35958:	cmp	x2, x0
   3595c:	cset	x3, cs  // cs = hs, nlast
   35960:	add	x3, x3, #0x13
   35964:	b	35890 <PyInit__decimal@@Base+0x19650>
   35968:	ldr	x0, [x5, #24]
   3596c:	cmp	x2, x0
   35970:	cset	x3, cs  // cs = hs, nlast
   35974:	add	x3, x3, #0x3
   35978:	b	35890 <PyInit__decimal@@Base+0x19650>
   3597c:	ldr	x0, [x5, #40]
   35980:	cmp	x2, x0
   35984:	cset	x3, cs  // cs = hs, nlast
   35988:	add	x3, x3, #0x5
   3598c:	b	35890 <PyInit__decimal@@Base+0x19650>
   35990:	ldr	x0, [x5, #80]
   35994:	cmp	x2, x0
   35998:	cset	x3, cs  // cs = hs, nlast
   3599c:	add	x3, x3, #0xa
   359a0:	b	35890 <PyInit__decimal@@Base+0x19650>
   359a4:	ldr	w2, [sp, #152]
   359a8:	mov	x0, x19
   359ac:	ldr	x1, [sp, #112]
   359b0:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   359b4:	b	358ac <PyInit__decimal@@Base+0x1966c>
   359b8:	ldr	x0, [x5, #136]
   359bc:	cmp	x2, x0
   359c0:	cset	x3, cs  // cs = hs, nlast
   359c4:	add	x3, x3, #0x11
   359c8:	b	35890 <PyInit__decimal@@Base+0x19650>
   359cc:	nop
   359d0:	sub	sp, sp, #0x2a0
   359d4:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   359d8:	stp	x29, x30, [sp]
   359dc:	mov	x29, sp
   359e0:	ldr	q0, [x5, #1760]
   359e4:	stp	x21, x22, [sp, #32]
   359e8:	mov	x22, x2
   359ec:	add	x2, sp, #0xa0
   359f0:	stp	x19, x20, [sp, #16]
   359f4:	mov	x20, x1
   359f8:	mov	w1, #0x30                  	// #48
   359fc:	stp	x23, x24, [sp, #48]
   35a00:	add	x24, sp, #0x70
   35a04:	mov	x21, x3
   35a08:	mov	x23, x4
   35a0c:	mov	x19, x0
   35a10:	mov	x0, x24
   35a14:	strb	w1, [sp, #64]
   35a18:	stp	xzr, xzr, [sp, #72]
   35a1c:	stur	q0, [sp, #88]
   35a20:	str	x2, [sp, #104]
   35a24:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   35a28:	mov	x5, #0x89e80000            	// #2313682944
   35a2c:	ldrb	w6, [sp, #64]
   35a30:	movk	x5, #0x2304, lsl #32
   35a34:	str	xzr, [sp, #72]
   35a38:	movk	x5, #0x8ac7, lsl #48
   35a3c:	cmp	x22, x5
   35a40:	cset	x3, cs  // cs = hs, nlast
   35a44:	ldr	x4, [sp, #104]
   35a48:	add	x7, x3, #0x1
   35a4c:	msub	x2, x3, x5, x22
   35a50:	and	w5, w6, #0xfffffff0
   35a54:	strb	w5, [sp, #64]
   35a58:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   35a5c:	add	x1, x4, x7, lsl #3
   35a60:	add	x5, x5, #0x180
   35a64:	stp	x2, x3, [x4]
   35a68:	str	x7, [sp, #88]
   35a6c:	ldr	x0, [x5, #72]
   35a70:	ldur	x6, [x1, #-8]
   35a74:	cmp	x6, x0
   35a78:	b.cs	35ad8 <PyInit__decimal@@Base+0x19898>  // b.hs, b.nlast
   35a7c:	ldr	x0, [x5, #32]
   35a80:	cmp	x6, x0
   35a84:	b.cs	35aa8 <PyInit__decimal@@Base+0x19868>  // b.hs, b.nlast
   35a88:	ldr	x0, [x5, #16]
   35a8c:	cmp	x6, x0
   35a90:	b.cs	35be4 <PyInit__decimal@@Base+0x199a4>  // b.hs, b.nlast
   35a94:	ldr	x0, [x5, #8]
   35a98:	cmp	x6, x0
   35a9c:	cset	x4, cs  // cs = hs, nlast
   35aa0:	add	x4, x4, #0x1
   35aa4:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35aa8:	ldr	x0, [x5, #48]
   35aac:	cmp	x6, x0
   35ab0:	b.cc	35bf8 <PyInit__decimal@@Base+0x199b8>  // b.lo, b.ul, b.last
   35ab4:	ldr	x0, [x5, #64]
   35ab8:	mov	x4, #0x9                   	// #9
   35abc:	cmp	x6, x0
   35ac0:	b.cs	35b10 <PyInit__decimal@@Base+0x198d0>  // b.hs, b.nlast
   35ac4:	ldr	x0, [x5, #56]
   35ac8:	cmp	x6, x0
   35acc:	cset	x4, cs  // cs = hs, nlast
   35ad0:	add	x4, x4, #0x7
   35ad4:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35ad8:	ldr	x0, [x5, #112]
   35adc:	cmp	x6, x0
   35ae0:	b.cs	35ba4 <PyInit__decimal@@Base+0x19964>  // b.hs, b.nlast
   35ae4:	ldr	x0, [x5, #88]
   35ae8:	cmp	x6, x0
   35aec:	b.cc	35c0c <PyInit__decimal@@Base+0x199cc>  // b.lo, b.ul, b.last
   35af0:	ldr	x0, [x5, #104]
   35af4:	mov	x4, #0xe                   	// #14
   35af8:	cmp	x6, x0
   35afc:	b.cs	35b10 <PyInit__decimal@@Base+0x198d0>  // b.hs, b.nlast
   35b00:	ldr	x0, [x5, #96]
   35b04:	cmp	x6, x0
   35b08:	cset	x4, cs  // cs = hs, nlast
   35b0c:	add	x4, x4, #0xc
   35b10:	lsl	x2, x3, #2
   35b14:	ldrb	w5, [sp, #64]
   35b18:	add	x2, x2, x3
   35b1c:	tst	w5, #0xe
   35b20:	lsl	x2, x2, #2
   35b24:	sub	x2, x2, x3
   35b28:	add	x2, x2, x4
   35b2c:	str	x2, [sp, #80]
   35b30:	b.eq	35c20 <PyInit__decimal@@Base+0x199e0>  // b.none
   35b34:	tst	w5, #0xc
   35b38:	add	x22, sp, #0x40
   35b3c:	b.ne	35c38 <PyInit__decimal@@Base+0x199f8>  // b.any
   35b40:	mov	x0, x19
   35b44:	mov	x4, x23
   35b48:	mov	x3, x21
   35b4c:	mov	x1, x20
   35b50:	mov	x2, x22
   35b54:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   35b58:	ldrb	w0, [sp, #64]
   35b5c:	tst	w0, #0xe0
   35b60:	b.ne	35b78 <PyInit__decimal@@Base+0x19938>  // b.any
   35b64:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   35b68:	ldr	x0, [sp, #104]
   35b6c:	ldr	x1, [x1, #1912]
   35b70:	blr	x1
   35b74:	ldrb	w0, [sp, #64]
   35b78:	tbnz	w0, #4, 35b8c <PyInit__decimal@@Base+0x1994c>
   35b7c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   35b80:	mov	x0, x22
   35b84:	ldr	x1, [x1, #1912]
   35b88:	blr	x1
   35b8c:	ldp	x29, x30, [sp]
   35b90:	ldp	x19, x20, [sp, #16]
   35b94:	ldp	x21, x22, [sp, #32]
   35b98:	ldp	x23, x24, [sp, #48]
   35b9c:	add	sp, sp, #0x2a0
   35ba0:	ret
   35ba4:	ldr	x0, [x5, #144]
   35ba8:	cmp	x6, x0
   35bac:	b.cs	35bd0 <PyInit__decimal@@Base+0x19990>  // b.hs, b.nlast
   35bb0:	ldr	x0, [x5, #128]
   35bb4:	cmp	x6, x0
   35bb8:	b.cs	35c4c <PyInit__decimal@@Base+0x19a0c>  // b.hs, b.nlast
   35bbc:	ldr	x0, [x5, #120]
   35bc0:	cmp	x6, x0
   35bc4:	cset	x4, cs  // cs = hs, nlast
   35bc8:	add	x4, x4, #0xf
   35bcc:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35bd0:	ldr	x0, [x5, #152]
   35bd4:	cmp	x6, x0
   35bd8:	cset	x4, cs  // cs = hs, nlast
   35bdc:	add	x4, x4, #0x13
   35be0:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35be4:	ldr	x0, [x5, #24]
   35be8:	cmp	x6, x0
   35bec:	cset	x4, cs  // cs = hs, nlast
   35bf0:	add	x4, x4, #0x3
   35bf4:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35bf8:	ldr	x0, [x5, #40]
   35bfc:	cmp	x6, x0
   35c00:	cset	x4, cs  // cs = hs, nlast
   35c04:	add	x4, x4, #0x5
   35c08:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35c0c:	ldr	x0, [x5, #80]
   35c10:	cmp	x6, x0
   35c14:	cset	x4, cs  // cs = hs, nlast
   35c18:	add	x4, x4, #0xa
   35c1c:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35c20:	add	x22, sp, #0x40
   35c24:	mov	x1, x24
   35c28:	mov	x0, x22
   35c2c:	mov	x2, x23
   35c30:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   35c34:	b	35b40 <PyInit__decimal@@Base+0x19900>
   35c38:	ldr	w2, [sp, #152]
   35c3c:	mov	x0, x22
   35c40:	ldr	x1, [sp, #112]
   35c44:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   35c48:	b	35b40 <PyInit__decimal@@Base+0x19900>
   35c4c:	ldr	x0, [x5, #136]
   35c50:	cmp	x6, x0
   35c54:	cset	x4, cs  // cs = hs, nlast
   35c58:	add	x4, x4, #0x11
   35c5c:	b	35b10 <PyInit__decimal@@Base+0x198d0>
   35c60:	sub	sp, sp, #0x2a0
   35c64:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   35c68:	stp	x29, x30, [sp]
   35c6c:	mov	x29, sp
   35c70:	ldr	q0, [x5, #1760]
   35c74:	stp	x19, x20, [sp, #16]
   35c78:	mov	x19, x2
   35c7c:	add	x2, sp, #0xa0
   35c80:	stp	x21, x22, [sp, #32]
   35c84:	mov	x22, x3
   35c88:	mov	w3, #0x30                  	// #48
   35c8c:	stp	x23, x24, [sp, #48]
   35c90:	add	x24, sp, #0x70
   35c94:	mov	x20, x0
   35c98:	mov	x21, x1
   35c9c:	mov	x23, x4
   35ca0:	mov	x0, x24
   35ca4:	strb	w3, [sp, #64]
   35ca8:	stp	xzr, xzr, [sp, #72]
   35cac:	stur	q0, [sp, #88]
   35cb0:	str	x2, [sp, #104]
   35cb4:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   35cb8:	mov	x2, x19
   35cbc:	mov	w6, #0x0                   	// #0
   35cc0:	tbnz	x19, #63, 35e38 <PyInit__decimal@@Base+0x19bf8>
   35cc4:	ldrb	w4, [sp, #64]
   35cc8:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   35ccc:	ldr	x3, [sp, #104]
   35cd0:	and	w4, w4, #0xfffffff0
   35cd4:	orr	w6, w6, w4
   35cd8:	strb	w6, [sp, #64]
   35cdc:	str	xzr, [sp, #72]
   35ce0:	add	x5, x5, #0x180
   35ce4:	stp	x2, xzr, [x3]
   35ce8:	mov	x2, #0x1                   	// #1
   35cec:	str	x2, [sp, #88]
   35cf0:	ldr	x4, [x5, #72]
   35cf4:	ldr	x2, [x3]
   35cf8:	cmp	x2, x4
   35cfc:	b.cs	35d80 <PyInit__decimal@@Base+0x19b40>  // b.hs, b.nlast
   35d00:	ldr	x0, [x5, #32]
   35d04:	cmp	x2, x0
   35d08:	b.cs	35d50 <PyInit__decimal@@Base+0x19b10>  // b.hs, b.nlast
   35d0c:	ldr	x0, [x5, #16]
   35d10:	cmp	x2, x0
   35d14:	b.cs	35e90 <PyInit__decimal@@Base+0x19c50>  // b.hs, b.nlast
   35d18:	ldr	x0, [x5, #8]
   35d1c:	cmp	x2, x0
   35d20:	ldrb	w2, [sp, #64]
   35d24:	cset	x3, cs  // cs = hs, nlast
   35d28:	add	x3, x3, #0x1
   35d2c:	str	x3, [sp, #80]
   35d30:	tst	w2, #0xe
   35d34:	b.ne	35dc8 <PyInit__decimal@@Base+0x19b88>  // b.any
   35d38:	add	x19, sp, #0x40
   35d3c:	mov	x1, x24
   35d40:	mov	x0, x19
   35d44:	mov	x2, x23
   35d48:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   35d4c:	b	35dd4 <PyInit__decimal@@Base+0x19b94>
   35d50:	ldr	x0, [x5, #48]
   35d54:	cmp	x2, x0
   35d58:	b.cc	35ea4 <PyInit__decimal@@Base+0x19c64>  // b.lo, b.ul, b.last
   35d5c:	ldr	x0, [x5, #64]
   35d60:	mov	x3, #0x9                   	// #9
   35d64:	cmp	x2, x0
   35d68:	b.cs	35db8 <PyInit__decimal@@Base+0x19b78>  // b.hs, b.nlast
   35d6c:	ldr	x0, [x5, #56]
   35d70:	cmp	x2, x0
   35d74:	cset	x3, cs  // cs = hs, nlast
   35d78:	add	x3, x3, #0x7
   35d7c:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35d80:	ldr	x0, [x5, #112]
   35d84:	cmp	x2, x0
   35d88:	b.cs	35e50 <PyInit__decimal@@Base+0x19c10>  // b.hs, b.nlast
   35d8c:	ldr	x0, [x5, #88]
   35d90:	cmp	x2, x0
   35d94:	b.cc	35eb8 <PyInit__decimal@@Base+0x19c78>  // b.lo, b.ul, b.last
   35d98:	ldr	x0, [x5, #104]
   35d9c:	mov	x3, #0xe                   	// #14
   35da0:	cmp	x2, x0
   35da4:	b.cs	35db8 <PyInit__decimal@@Base+0x19b78>  // b.hs, b.nlast
   35da8:	ldr	x0, [x5, #96]
   35dac:	cmp	x2, x0
   35db0:	cset	x3, cs  // cs = hs, nlast
   35db4:	add	x3, x3, #0xc
   35db8:	ldrb	w2, [sp, #64]
   35dbc:	str	x3, [sp, #80]
   35dc0:	tst	w2, #0xe
   35dc4:	b.eq	35d38 <PyInit__decimal@@Base+0x19af8>  // b.none
   35dc8:	tst	w2, #0xc
   35dcc:	add	x19, sp, #0x40
   35dd0:	b.ne	35ecc <PyInit__decimal@@Base+0x19c8c>  // b.any
   35dd4:	mov	x0, x20
   35dd8:	mov	x4, x23
   35ddc:	mov	x3, x22
   35de0:	mov	x1, x21
   35de4:	mov	x2, x19
   35de8:	bl	33448 <PyInit__decimal@@Base+0x17208>
   35dec:	ldrb	w0, [sp, #64]
   35df0:	tst	w0, #0xe0
   35df4:	b.ne	35e0c <PyInit__decimal@@Base+0x19bcc>  // b.any
   35df8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   35dfc:	ldr	x0, [sp, #104]
   35e00:	ldr	x1, [x1, #1912]
   35e04:	blr	x1
   35e08:	ldrb	w0, [sp, #64]
   35e0c:	tbnz	w0, #4, 35e20 <PyInit__decimal@@Base+0x19be0>
   35e10:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   35e14:	mov	x0, x19
   35e18:	ldr	x1, [x1, #1912]
   35e1c:	blr	x1
   35e20:	ldp	x29, x30, [sp]
   35e24:	ldp	x19, x20, [sp, #16]
   35e28:	ldp	x21, x22, [sp, #32]
   35e2c:	ldp	x23, x24, [sp, #48]
   35e30:	add	sp, sp, #0x2a0
   35e34:	ret
   35e38:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   35e3c:	mov	w6, #0x1                   	// #1
   35e40:	cmp	x19, x0
   35e44:	b.eq	35cc4 <PyInit__decimal@@Base+0x19a84>  // b.none
   35e48:	neg	x2, x19
   35e4c:	b	35cc4 <PyInit__decimal@@Base+0x19a84>
   35e50:	ldr	x0, [x5, #144]
   35e54:	cmp	x2, x0
   35e58:	b.cs	35e7c <PyInit__decimal@@Base+0x19c3c>  // b.hs, b.nlast
   35e5c:	ldr	x0, [x5, #128]
   35e60:	cmp	x2, x0
   35e64:	b.cs	35ee0 <PyInit__decimal@@Base+0x19ca0>  // b.hs, b.nlast
   35e68:	ldr	x0, [x5, #120]
   35e6c:	cmp	x2, x0
   35e70:	cset	x3, cs  // cs = hs, nlast
   35e74:	add	x3, x3, #0xf
   35e78:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35e7c:	ldr	x0, [x5, #152]
   35e80:	cmp	x2, x0
   35e84:	cset	x3, cs  // cs = hs, nlast
   35e88:	add	x3, x3, #0x13
   35e8c:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35e90:	ldr	x0, [x5, #24]
   35e94:	cmp	x2, x0
   35e98:	cset	x3, cs  // cs = hs, nlast
   35e9c:	add	x3, x3, #0x3
   35ea0:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35ea4:	ldr	x0, [x5, #40]
   35ea8:	cmp	x2, x0
   35eac:	cset	x3, cs  // cs = hs, nlast
   35eb0:	add	x3, x3, #0x5
   35eb4:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35eb8:	ldr	x0, [x5, #80]
   35ebc:	cmp	x2, x0
   35ec0:	cset	x3, cs  // cs = hs, nlast
   35ec4:	add	x3, x3, #0xa
   35ec8:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35ecc:	ldr	w2, [sp, #152]
   35ed0:	mov	x0, x19
   35ed4:	ldr	x1, [sp, #112]
   35ed8:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   35edc:	b	35dd4 <PyInit__decimal@@Base+0x19b94>
   35ee0:	ldr	x0, [x5, #136]
   35ee4:	cmp	x2, x0
   35ee8:	cset	x3, cs  // cs = hs, nlast
   35eec:	add	x3, x3, #0x11
   35ef0:	b	35db8 <PyInit__decimal@@Base+0x19b78>
   35ef4:	nop
   35ef8:	sub	sp, sp, #0x2a0
   35efc:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   35f00:	stp	x29, x30, [sp]
   35f04:	mov	x29, sp
   35f08:	ldr	q0, [x5, #1760]
   35f0c:	stp	x21, x22, [sp, #32]
   35f10:	mov	x22, x2
   35f14:	add	x2, sp, #0xa0
   35f18:	stp	x19, x20, [sp, #16]
   35f1c:	mov	x20, x1
   35f20:	mov	w1, #0x30                  	// #48
   35f24:	stp	x23, x24, [sp, #48]
   35f28:	add	x24, sp, #0x70
   35f2c:	mov	x21, x3
   35f30:	mov	x23, x4
   35f34:	mov	x19, x0
   35f38:	mov	x0, x24
   35f3c:	strb	w1, [sp, #64]
   35f40:	stp	xzr, xzr, [sp, #72]
   35f44:	stur	q0, [sp, #88]
   35f48:	str	x2, [sp, #104]
   35f4c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   35f50:	mov	x5, #0x89e80000            	// #2313682944
   35f54:	ldrb	w6, [sp, #64]
   35f58:	movk	x5, #0x2304, lsl #32
   35f5c:	str	xzr, [sp, #72]
   35f60:	movk	x5, #0x8ac7, lsl #48
   35f64:	cmp	x22, x5
   35f68:	cset	x3, cs  // cs = hs, nlast
   35f6c:	ldr	x4, [sp, #104]
   35f70:	add	x7, x3, #0x1
   35f74:	msub	x2, x3, x5, x22
   35f78:	and	w5, w6, #0xfffffff0
   35f7c:	strb	w5, [sp, #64]
   35f80:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   35f84:	add	x1, x4, x7, lsl #3
   35f88:	add	x5, x5, #0x180
   35f8c:	stp	x2, x3, [x4]
   35f90:	str	x7, [sp, #88]
   35f94:	ldr	x0, [x5, #72]
   35f98:	ldur	x6, [x1, #-8]
   35f9c:	cmp	x6, x0
   35fa0:	b.cs	36000 <PyInit__decimal@@Base+0x19dc0>  // b.hs, b.nlast
   35fa4:	ldr	x0, [x5, #32]
   35fa8:	cmp	x6, x0
   35fac:	b.cs	35fd0 <PyInit__decimal@@Base+0x19d90>  // b.hs, b.nlast
   35fb0:	ldr	x0, [x5, #16]
   35fb4:	cmp	x6, x0
   35fb8:	b.cs	3610c <PyInit__decimal@@Base+0x19ecc>  // b.hs, b.nlast
   35fbc:	ldr	x0, [x5, #8]
   35fc0:	cmp	x6, x0
   35fc4:	cset	x4, cs  // cs = hs, nlast
   35fc8:	add	x4, x4, #0x1
   35fcc:	b	36038 <PyInit__decimal@@Base+0x19df8>
   35fd0:	ldr	x0, [x5, #48]
   35fd4:	cmp	x6, x0
   35fd8:	b.cc	36120 <PyInit__decimal@@Base+0x19ee0>  // b.lo, b.ul, b.last
   35fdc:	ldr	x0, [x5, #64]
   35fe0:	mov	x4, #0x9                   	// #9
   35fe4:	cmp	x6, x0
   35fe8:	b.cs	36038 <PyInit__decimal@@Base+0x19df8>  // b.hs, b.nlast
   35fec:	ldr	x0, [x5, #56]
   35ff0:	cmp	x6, x0
   35ff4:	cset	x4, cs  // cs = hs, nlast
   35ff8:	add	x4, x4, #0x7
   35ffc:	b	36038 <PyInit__decimal@@Base+0x19df8>
   36000:	ldr	x0, [x5, #112]
   36004:	cmp	x6, x0
   36008:	b.cs	360cc <PyInit__decimal@@Base+0x19e8c>  // b.hs, b.nlast
   3600c:	ldr	x0, [x5, #88]
   36010:	cmp	x6, x0
   36014:	b.cc	36134 <PyInit__decimal@@Base+0x19ef4>  // b.lo, b.ul, b.last
   36018:	ldr	x0, [x5, #104]
   3601c:	mov	x4, #0xe                   	// #14
   36020:	cmp	x6, x0
   36024:	b.cs	36038 <PyInit__decimal@@Base+0x19df8>  // b.hs, b.nlast
   36028:	ldr	x0, [x5, #96]
   3602c:	cmp	x6, x0
   36030:	cset	x4, cs  // cs = hs, nlast
   36034:	add	x4, x4, #0xc
   36038:	lsl	x2, x3, #2
   3603c:	ldrb	w5, [sp, #64]
   36040:	add	x2, x2, x3
   36044:	tst	w5, #0xe
   36048:	lsl	x2, x2, #2
   3604c:	sub	x2, x2, x3
   36050:	add	x2, x2, x4
   36054:	str	x2, [sp, #80]
   36058:	b.eq	36148 <PyInit__decimal@@Base+0x19f08>  // b.none
   3605c:	tst	w5, #0xc
   36060:	add	x22, sp, #0x40
   36064:	b.ne	36160 <PyInit__decimal@@Base+0x19f20>  // b.any
   36068:	mov	x0, x19
   3606c:	mov	x4, x23
   36070:	mov	x3, x21
   36074:	mov	x1, x20
   36078:	mov	x2, x22
   3607c:	bl	33448 <PyInit__decimal@@Base+0x17208>
   36080:	ldrb	w0, [sp, #64]
   36084:	tst	w0, #0xe0
   36088:	b.ne	360a0 <PyInit__decimal@@Base+0x19e60>  // b.any
   3608c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36090:	ldr	x0, [sp, #104]
   36094:	ldr	x1, [x1, #1912]
   36098:	blr	x1
   3609c:	ldrb	w0, [sp, #64]
   360a0:	tbnz	w0, #4, 360b4 <PyInit__decimal@@Base+0x19e74>
   360a4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   360a8:	mov	x0, x22
   360ac:	ldr	x1, [x1, #1912]
   360b0:	blr	x1
   360b4:	ldp	x29, x30, [sp]
   360b8:	ldp	x19, x20, [sp, #16]
   360bc:	ldp	x21, x22, [sp, #32]
   360c0:	ldp	x23, x24, [sp, #48]
   360c4:	add	sp, sp, #0x2a0
   360c8:	ret
   360cc:	ldr	x0, [x5, #144]
   360d0:	cmp	x6, x0
   360d4:	b.cs	360f8 <PyInit__decimal@@Base+0x19eb8>  // b.hs, b.nlast
   360d8:	ldr	x0, [x5, #128]
   360dc:	cmp	x6, x0
   360e0:	b.cs	36174 <PyInit__decimal@@Base+0x19f34>  // b.hs, b.nlast
   360e4:	ldr	x0, [x5, #120]
   360e8:	cmp	x6, x0
   360ec:	cset	x4, cs  // cs = hs, nlast
   360f0:	add	x4, x4, #0xf
   360f4:	b	36038 <PyInit__decimal@@Base+0x19df8>
   360f8:	ldr	x0, [x5, #152]
   360fc:	cmp	x6, x0
   36100:	cset	x4, cs  // cs = hs, nlast
   36104:	add	x4, x4, #0x13
   36108:	b	36038 <PyInit__decimal@@Base+0x19df8>
   3610c:	ldr	x0, [x5, #24]
   36110:	cmp	x6, x0
   36114:	cset	x4, cs  // cs = hs, nlast
   36118:	add	x4, x4, #0x3
   3611c:	b	36038 <PyInit__decimal@@Base+0x19df8>
   36120:	ldr	x0, [x5, #40]
   36124:	cmp	x6, x0
   36128:	cset	x4, cs  // cs = hs, nlast
   3612c:	add	x4, x4, #0x5
   36130:	b	36038 <PyInit__decimal@@Base+0x19df8>
   36134:	ldr	x0, [x5, #80]
   36138:	cmp	x6, x0
   3613c:	cset	x4, cs  // cs = hs, nlast
   36140:	add	x4, x4, #0xa
   36144:	b	36038 <PyInit__decimal@@Base+0x19df8>
   36148:	add	x22, sp, #0x40
   3614c:	mov	x1, x24
   36150:	mov	x0, x22
   36154:	mov	x2, x23
   36158:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   3615c:	b	36068 <PyInit__decimal@@Base+0x19e28>
   36160:	ldr	w2, [sp, #152]
   36164:	mov	x0, x22
   36168:	ldr	x1, [sp, #112]
   3616c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   36170:	b	36068 <PyInit__decimal@@Base+0x19e28>
   36174:	ldr	x0, [x5, #136]
   36178:	cmp	x6, x0
   3617c:	cset	x4, cs  // cs = hs, nlast
   36180:	add	x4, x4, #0x11
   36184:	b	36038 <PyInit__decimal@@Base+0x19df8>
   36188:	sxtw	x2, w2
   3618c:	b	35738 <PyInit__decimal@@Base+0x194f8>
   36190:	mov	w2, w2
   36194:	b	359d0 <PyInit__decimal@@Base+0x19790>
   36198:	b	35738 <PyInit__decimal@@Base+0x194f8>
   3619c:	nop
   361a0:	b	359d0 <PyInit__decimal@@Base+0x19790>
   361a4:	nop
   361a8:	sxtw	x2, w2
   361ac:	b	35c60 <PyInit__decimal@@Base+0x19a20>
   361b0:	mov	w2, w2
   361b4:	b	35ef8 <PyInit__decimal@@Base+0x19cb8>
   361b8:	b	35c60 <PyInit__decimal@@Base+0x19a20>
   361bc:	nop
   361c0:	b	35ef8 <PyInit__decimal@@Base+0x19cb8>
   361c4:	nop
   361c8:	mov	x7, x1
   361cc:	mov	x5, x2
   361d0:	mov	x6, x3
   361d4:	mov	x1, x0
   361d8:	mov	x3, x5
   361dc:	mov	x2, x7
   361e0:	mov	x5, x4
   361e4:	mov	w0, #0x1                   	// #1
   361e8:	mov	x4, x6
   361ec:	b	34ba0 <PyInit__decimal@@Base+0x18960>
   361f0:	stp	x29, x30, [sp, #-80]!
   361f4:	mov	x29, sp
   361f8:	stp	x19, x20, [sp, #16]
   361fc:	mov	x19, x2
   36200:	mov	x20, x3
   36204:	stp	x21, x22, [sp, #32]
   36208:	mov	x22, x1
   3620c:	mov	x21, x5
   36210:	stp	x23, x24, [sp, #48]
   36214:	mov	x24, x0
   36218:	mov	x23, x4
   3621c:	str	x25, [sp, #64]
   36220:	ldrb	w6, [x2]
   36224:	ldrb	w7, [x3]
   36228:	eor	w8, w6, w7
   3622c:	orr	w6, w6, w7
   36230:	and	w25, w8, #0x1
   36234:	tst	w6, #0xe
   36238:	b.eq	362a0 <PyInit__decimal@@Base+0x1a060>  // b.none
   3623c:	mov	x4, x5
   36240:	mov	x3, x23
   36244:	mov	x2, x20
   36248:	mov	x1, x19
   3624c:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   36250:	cbnz	w0, 363a4 <PyInit__decimal@@Base+0x1a164>
   36254:	ldrb	w1, [x19]
   36258:	ldrb	w0, [x20]
   3625c:	and	w0, w0, #0x2
   36260:	tbnz	w1, #1, 362f0 <PyInit__decimal@@Base+0x1a0b0>
   36264:	cbz	w0, 3640c <PyInit__decimal@@Base+0x1a1cc>
   36268:	mov	x2, x21
   3626c:	mov	x1, x19
   36270:	mov	x0, x22
   36274:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   36278:	mov	x2, x21
   3627c:	cbnz	w0, 36338 <PyInit__decimal@@Base+0x1a0f8>
   36280:	mov	x0, x24
   36284:	mov	w1, #0x200                 	// #512
   36288:	ldp	x19, x20, [sp, #16]
   3628c:	ldp	x21, x22, [sp, #32]
   36290:	ldp	x23, x24, [sp, #48]
   36294:	ldr	x25, [sp, #64]
   36298:	ldp	x29, x30, [sp], #80
   3629c:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   362a0:	ldr	x6, [x3, #24]
   362a4:	ldr	x7, [x3, #40]
   362a8:	add	x6, x7, x6, lsl #3
   362ac:	ldur	x6, [x6, #-8]
   362b0:	cbnz	x6, 3636c <PyInit__decimal@@Base+0x1a12c>
   362b4:	ldr	x1, [x2, #24]
   362b8:	ldr	x2, [x2, #40]
   362bc:	add	x1, x2, x1, lsl #3
   362c0:	ldur	x1, [x1, #-8]
   362c4:	cbnz	x1, 363dc <PyInit__decimal@@Base+0x1a19c>
   362c8:	mov	w2, #0x4                   	// #4
   362cc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   362d0:	mov	x0, x22
   362d4:	mov	w2, #0x4                   	// #4
   362d8:	mov	w1, #0x0                   	// #0
   362dc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   362e0:	ldr	w0, [x21]
   362e4:	orr	w0, w0, #0x10
   362e8:	str	w0, [x21]
   362ec:	b	36320 <PyInit__decimal@@Base+0x1a0e0>
   362f0:	cbz	w0, 363c8 <PyInit__decimal@@Base+0x1a188>
   362f4:	mov	x0, x24
   362f8:	mov	w2, #0x4                   	// #4
   362fc:	mov	w1, #0x0                   	// #0
   36300:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   36304:	mov	x0, x22
   36308:	mov	w2, #0x4                   	// #4
   3630c:	mov	w1, #0x0                   	// #0
   36310:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   36314:	ldr	w0, [x21]
   36318:	orr	w0, w0, #0x100
   3631c:	str	w0, [x21]
   36320:	ldp	x19, x20, [sp, #16]
   36324:	ldp	x21, x22, [sp, #32]
   36328:	ldp	x23, x24, [sp, #48]
   3632c:	ldr	x25, [sp, #64]
   36330:	ldp	x29, x30, [sp], #80
   36334:	ret
   36338:	mov	x1, x23
   3633c:	mov	x0, x22
   36340:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   36344:	mov	w1, w25
   36348:	mov	x0, x24
   3634c:	ldp	x19, x20, [sp, #16]
   36350:	mov	x3, #0x0                   	// #0
   36354:	ldp	x21, x22, [sp, #32]
   36358:	mov	x2, #0x0                   	// #0
   3635c:	ldp	x23, x24, [sp, #48]
   36360:	ldr	x25, [sp, #64]
   36364:	ldp	x29, x30, [sp], #80
   36368:	b	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3636c:	bl	351b8 <PyInit__decimal@@Base+0x18f78>
   36370:	mov	x2, x21
   36374:	mov	x1, x23
   36378:	mov	x0, x24
   3637c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   36380:	mov	x2, x21
   36384:	mov	x1, x23
   36388:	mov	x0, x22
   3638c:	ldp	x19, x20, [sp, #16]
   36390:	ldp	x21, x22, [sp, #32]
   36394:	ldp	x23, x24, [sp, #48]
   36398:	ldr	x25, [sp, #64]
   3639c:	ldp	x29, x30, [sp], #80
   363a0:	b	2f360 <PyInit__decimal@@Base+0x13120>
   363a4:	mov	x2, x21
   363a8:	mov	x1, x24
   363ac:	mov	x0, x22
   363b0:	ldp	x19, x20, [sp, #16]
   363b4:	ldp	x21, x22, [sp, #32]
   363b8:	ldp	x23, x24, [sp, #48]
   363bc:	ldr	x25, [sp, #64]
   363c0:	ldp	x29, x30, [sp], #80
   363c4:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   363c8:	mov	w1, w25
   363cc:	mov	x0, x24
   363d0:	mov	w2, #0x2                   	// #2
   363d4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   363d8:	b	36304 <PyInit__decimal@@Base+0x1a0c4>
   363dc:	mov	w1, w25
   363e0:	mov	w2, #0x2                   	// #2
   363e4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   363e8:	mov	x0, x22
   363ec:	mov	w1, #0x0                   	// #0
   363f0:	mov	w2, #0x4                   	// #4
   363f4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   363f8:	ldr	w0, [x21]
   363fc:	mov	w1, #0x104                 	// #260
   36400:	orr	w0, w0, w1
   36404:	str	w0, [x21]
   36408:	b	36320 <PyInit__decimal@@Base+0x1a0e0>
   3640c:	bl	67c0 <abort@plt>
   36410:	sub	sp, sp, #0x270
   36414:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   36418:	add	x7, sp, #0x70
   3641c:	stp	x29, x30, [sp]
   36420:	mov	x29, sp
   36424:	ldr	q0, [x5, #1760]
   36428:	stp	x19, x20, [sp, #16]
   3642c:	mov	w5, #0x30                  	// #48
   36430:	stp	x21, x22, [sp, #32]
   36434:	mov	x19, x2
   36438:	mov	x22, x0
   3643c:	stp	x23, x24, [sp, #48]
   36440:	mov	x23, x1
   36444:	mov	x24, x4
   36448:	ldrb	w6, [x1]
   3644c:	ldrb	w8, [x2]
   36450:	strb	w5, [sp, #64]
   36454:	stp	xzr, xzr, [sp, #72]
   36458:	str	x7, [sp, #104]
   3645c:	eor	w7, w6, w8
   36460:	orr	w6, w6, w8
   36464:	stur	q0, [sp, #88]
   36468:	and	w20, w7, #0x1
   3646c:	tst	w6, #0xe
   36470:	b.eq	364b8 <PyInit__decimal@@Base+0x1a278>  // b.none
   36474:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   36478:	cbnz	w0, 364a0 <PyInit__decimal@@Base+0x1a260>
   3647c:	ldrb	w1, [x23]
   36480:	ldrb	w0, [x19]
   36484:	and	w0, w0, #0x2
   36488:	tbz	w1, #1, 364f0 <PyInit__decimal@@Base+0x1a2b0>
   3648c:	cbnz	w0, 365b8 <PyInit__decimal@@Base+0x1a378>
   36490:	mov	w1, w20
   36494:	mov	x0, x22
   36498:	mov	w2, #0x2                   	// #2
   3649c:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   364a0:	ldp	x29, x30, [sp]
   364a4:	ldp	x19, x20, [sp, #16]
   364a8:	ldp	x21, x22, [sp, #32]
   364ac:	ldp	x23, x24, [sp, #48]
   364b0:	add	sp, sp, #0x270
   364b4:	ret
   364b8:	ldr	x1, [x2, #24]
   364bc:	ldr	x2, [x2, #40]
   364c0:	add	x1, x2, x1, lsl #3
   364c4:	ldur	x1, [x1, #-8]
   364c8:	cbnz	x1, 36520 <PyInit__decimal@@Base+0x1a2e0>
   364cc:	ldr	x1, [x23, #24]
   364d0:	ldr	x2, [x23, #40]
   364d4:	add	x1, x2, x1, lsl #3
   364d8:	ldur	x1, [x1, #-8]
   364dc:	cbnz	x1, 3659c <PyInit__decimal@@Base+0x1a35c>
   364e0:	mov	x2, x4
   364e4:	mov	w1, #0x10                  	// #16
   364e8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   364ec:	b	364a0 <PyInit__decimal@@Base+0x1a260>
   364f0:	cbz	w0, 365cc <PyInit__decimal@@Base+0x1a38c>
   364f4:	mov	w1, w20
   364f8:	mov	x0, x22
   364fc:	mov	x3, #0x0                   	// #0
   36500:	mov	x2, #0x0                   	// #0
   36504:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   36508:	ldp	x29, x30, [sp]
   3650c:	ldp	x19, x20, [sp, #16]
   36510:	ldp	x21, x22, [sp, #32]
   36514:	ldp	x23, x24, [sp, #48]
   36518:	add	sp, sp, #0x270
   3651c:	ret
   36520:	mov	x21, x3
   36524:	add	x20, sp, #0x40
   36528:	mov	x5, x4
   3652c:	mov	x3, x19
   36530:	mov	x2, x23
   36534:	mov	x1, x20
   36538:	mov	x4, x21
   3653c:	bl	351b8 <PyInit__decimal@@Base+0x18f78>
   36540:	ldrb	w0, [sp, #64]
   36544:	tst	w0, #0xe0
   36548:	b.ne	36560 <PyInit__decimal@@Base+0x1a320>  // b.any
   3654c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36550:	ldr	x0, [sp, #104]
   36554:	ldr	x1, [x1, #1912]
   36558:	blr	x1
   3655c:	ldrb	w0, [sp, #64]
   36560:	tbnz	w0, #4, 36574 <PyInit__decimal@@Base+0x1a334>
   36564:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36568:	mov	x0, x20
   3656c:	ldr	x1, [x1, #1912]
   36570:	blr	x1
   36574:	mov	x2, x24
   36578:	mov	x1, x21
   3657c:	mov	x0, x22
   36580:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   36584:	ldp	x29, x30, [sp]
   36588:	ldp	x19, x20, [sp, #16]
   3658c:	ldp	x21, x22, [sp, #32]
   36590:	ldp	x23, x24, [sp, #48]
   36594:	add	sp, sp, #0x270
   36598:	ret
   3659c:	mov	w1, w20
   365a0:	mov	w2, #0x2                   	// #2
   365a4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   365a8:	ldr	w0, [x24]
   365ac:	orr	w0, w0, #0x4
   365b0:	str	w0, [x24]
   365b4:	b	364a0 <PyInit__decimal@@Base+0x1a260>
   365b8:	mov	x2, x24
   365bc:	mov	x0, x22
   365c0:	mov	w1, #0x100                 	// #256
   365c4:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   365c8:	b	364a0 <PyInit__decimal@@Base+0x1a260>
   365cc:	bl	67c0 <abort@plt>
   365d0:	sub	sp, sp, #0x570
   365d4:	mov	w8, #0x30                  	// #48
   365d8:	movi	v1.4s, #0x0
   365dc:	add	x7, sp, #0x170
   365e0:	mov	x11, #0x600000000           	// #25769803776
   365e4:	stp	x29, x30, [sp]
   365e8:	mov	x29, sp
   365ec:	ldr	w10, [x4, #44]
   365f0:	stp	x23, x24, [sp, #48]
   365f4:	mov	x23, x2
   365f8:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   365fc:	stp	x19, x20, [sp, #16]
   36600:	mov	x19, x4
   36604:	ldp	x6, x13, [x4]
   36608:	stp	x21, x22, [sp, #32]
   3660c:	mov	x21, x5
   36610:	ldr	x12, [x4, #16]
   36614:	stp	x25, x26, [sp, #64]
   36618:	and	w26, w3, #0xff
   3661c:	ldp	x9, x4, [x23, #8]
   36620:	stp	x27, x28, [sp, #80]
   36624:	mov	x28, x0
   36628:	ldr	q0, [x2, #1760]
   3662c:	add	x2, sp, #0x370
   36630:	strb	w8, [sp, #128]
   36634:	add	x4, x4, x9
   36638:	ldrb	w9, [x23]
   3663c:	add	x4, x4, x6
   36640:	str	x7, [sp, #168]
   36644:	add	x14, x4, #0x2
   36648:	strb	w8, [sp, #176]
   3664c:	str	x2, [sp, #216]
   36650:	stp	x14, x13, [sp, #272]
   36654:	stp	x12, xzr, [sp, #288]
   36658:	str	x11, [sp, #304]
   3665c:	str	wzr, [sp, #312]
   36660:	str	w10, [sp, #316]
   36664:	stur	q1, [sp, #136]
   36668:	stur	q0, [sp, #152]
   3666c:	stur	q1, [sp, #184]
   36670:	stur	q0, [sp, #200]
   36674:	tbz	w9, #0, 3681c <PyInit__decimal@@Base+0x1a5dc>
   36678:	add	x7, x4, #0x3
   3667c:	add	x20, sp, #0x110
   36680:	add	x22, sp, #0x80
   36684:	mov	x3, x1
   36688:	mov	w0, #0x1                   	// #1
   3668c:	mov	x1, x22
   36690:	mov	x4, x20
   36694:	adrp	x2, 62000 <PyInit__decimal@@Base+0x45dc0>
   36698:	add	x2, x2, #0xc58
   3669c:	str	x7, [sp, #272]
   366a0:	bl	34ba0 <PyInit__decimal@@Base+0x18960>
   366a4:	ldr	w1, [x21]
   366a8:	mov	w0, #0x3be                 	// #958
   366ac:	tst	w1, w0
   366b0:	b.ne	36998 <PyInit__decimal@@Base+0x1a758>  // b.any
   366b4:	mov	x1, x23
   366b8:	add	x2, x20, #0x1c
   366bc:	mov	w0, #0x0                   	// #0
   366c0:	bl	2b390 <PyInit__decimal@@Base+0xf150>
   366c4:	ldr	w1, [sp, #300]
   366c8:	mov	x24, x0
   366cc:	tbz	w1, #8, 36850 <PyInit__decimal@@Base+0x1a610>
   366d0:	add	x25, sp, #0xb0
   366d4:	mov	x1, x23
   366d8:	mov	x0, x25
   366dc:	mov	x2, x21
   366e0:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   366e4:	cbz	w0, 36998 <PyInit__decimal@@Base+0x1a758>
   366e8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   366ec:	add	x1, sp, #0x78
   366f0:	mov	x3, #0x2                   	// #2
   366f4:	mov	w2, #0xffffff90            	// #-112
   366f8:	ldr	q1, [x0, #2224]
   366fc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x25dc0>
   36700:	add	x23, sp, #0x140
   36704:	str	wzr, [sp, #116]
   36708:	ldr	q0, [x0, #2176]
   3670c:	mov	x0, x23
   36710:	str	x3, [sp, #120]
   36714:	add	x24, sp, #0x74
   36718:	strb	w2, [sp, #224]
   3671c:	add	x27, sp, #0xe0
   36720:	stur	q1, [sp, #232]
   36724:	stur	q0, [sp, #248]
   36728:	str	x1, [sp, #264]
   3672c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   36730:	mov	x2, x21
   36734:	mov	x0, x28
   36738:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   3673c:	add	x1, x1, #0xc58
   36740:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   36744:	ldrb	w1, [sp, #176]
   36748:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3674c:	add	x0, x0, #0x180
   36750:	str	x0, [sp, #104]
   36754:	tst	w1, #0xe
   36758:	ldr	x0, [sp, #200]
   3675c:	ldr	x1, [sp, #216]
   36760:	add	x0, x1, x0, lsl #3
   36764:	ldur	x0, [x0, #-8]
   36768:	b.ne	369ec <PyInit__decimal@@Base+0x1a7ac>  // b.any
   3676c:	cbnz	x0, 369f0 <PyInit__decimal@@Base+0x1a7b0>
   36770:	ldrb	w1, [x28]
   36774:	and	w1, w1, #0xfffffffe
   36778:	orr	w1, w26, w1
   3677c:	strb	w1, [x28]
   36780:	tbnz	w1, #1, 369c8 <PyInit__decimal@@Base+0x1a788>
   36784:	ldrb	w0, [sp, #128]
   36788:	tst	w0, #0xe0
   3678c:	b.ne	367a4 <PyInit__decimal@@Base+0x1a564>  // b.any
   36790:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36794:	ldr	x0, [sp, #168]
   36798:	ldr	x1, [x1, #1912]
   3679c:	blr	x1
   367a0:	ldrb	w0, [sp, #128]
   367a4:	tbnz	w0, #4, 367b8 <PyInit__decimal@@Base+0x1a578>
   367a8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   367ac:	mov	x0, x22
   367b0:	ldr	x1, [x1, #1912]
   367b4:	blr	x1
   367b8:	ldrb	w0, [sp, #176]
   367bc:	tst	w0, #0xe0
   367c0:	b.ne	367d8 <PyInit__decimal@@Base+0x1a598>  // b.any
   367c4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   367c8:	ldr	x0, [sp, #216]
   367cc:	ldr	x1, [x1, #1912]
   367d0:	blr	x1
   367d4:	ldrb	w0, [sp, #176]
   367d8:	tbnz	w0, #4, 367ec <PyInit__decimal@@Base+0x1a5ac>
   367dc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   367e0:	add	x0, sp, #0xb0
   367e4:	ldr	x1, [x1, #1912]
   367e8:	blr	x1
   367ec:	mov	x2, x21
   367f0:	mov	x1, x19
   367f4:	mov	x0, x28
   367f8:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   367fc:	ldp	x29, x30, [sp]
   36800:	ldp	x19, x20, [sp, #16]
   36804:	ldp	x21, x22, [sp, #32]
   36808:	ldp	x23, x24, [sp, #48]
   3680c:	ldp	x25, x26, [sp, #64]
   36810:	ldp	x27, x28, [sp, #80]
   36814:	add	sp, sp, #0x570
   36818:	ret
   3681c:	add	x22, sp, #0x80
   36820:	mov	x2, x5
   36824:	mov	x0, x22
   36828:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3682c:	cbz	w0, 36998 <PyInit__decimal@@Base+0x1a758>
   36830:	add	x20, sp, #0x110
   36834:	mov	x1, x23
   36838:	add	x2, x20, #0x1c
   3683c:	mov	w0, #0x0                   	// #0
   36840:	bl	2b390 <PyInit__decimal@@Base+0xf150>
   36844:	mov	x24, x0
   36848:	ldr	w1, [sp, #300]
   3684c:	tbnz	w1, #8, 366d0 <PyInit__decimal@@Base+0x1a490>
   36850:	str	wzr, [sp, #320]
   36854:	cbz	x0, 369ac <PyInit__decimal@@Base+0x1a76c>
   36858:	mov	x2, x21
   3685c:	mov	x1, x22
   36860:	mov	x0, x28
   36864:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   36868:	cbz	w0, 369c0 <PyInit__decimal@@Base+0x1a780>
   3686c:	cmp	xzr, x24, lsr #32
   36870:	lsr	x2, x24, #32
   36874:	b.eq	36b5c <PyInit__decimal@@Base+0x1a91c>  // b.none
   36878:	mov	w1, #0x30                  	// #48
   3687c:	mov	w3, #0x20                  	// #32
   36880:	lsr	x0, x2, #16
   36884:	cmp	x0, #0x0
   36888:	csel	x0, x0, x2, ne  // ne = any
   3688c:	csel	w1, w1, w3, ne  // ne = any
   36890:	lsr	x2, x0, #8
   36894:	cmp	xzr, x0, lsr #8
   36898:	b.eq	368a4 <PyInit__decimal@@Base+0x1a664>  // b.none
   3689c:	add	w1, w1, #0x8
   368a0:	mov	x0, x2
   368a4:	cmp	xzr, x0, lsr #4
   368a8:	lsr	x2, x0, #4
   368ac:	b.eq	368b8 <PyInit__decimal@@Base+0x1a678>  // b.none
   368b0:	add	w1, w1, #0x4
   368b4:	mov	x0, x2
   368b8:	cmp	xzr, x0, lsr #2
   368bc:	lsr	x2, x0, #2
   368c0:	b.eq	368cc <PyInit__decimal@@Base+0x1a68c>  // b.none
   368c4:	add	w1, w1, #0x2
   368c8:	mov	x0, x2
   368cc:	cmp	xzr, x0, lsr #1
   368d0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   368d4:	cinc	w1, w1, ne  // ne = any
   368d8:	add	x0, x0, #0x220
   368dc:	ldr	x25, [x0, w1, sxtw #3]
   368e0:	cmp	xzr, x25, lsr #1
   368e4:	lsr	x25, x25, #1
   368e8:	b.eq	36af4 <PyInit__decimal@@Base+0x1a8b4>  // b.none
   368ec:	add	x23, sp, #0x140
   368f0:	b	36958 <PyInit__decimal@@Base+0x1a718>
   368f4:	tst	w1, #0xc
   368f8:	b.ne	36adc <PyInit__decimal@@Base+0x1a89c>  // b.any
   368fc:	cbz	x27, 36af8 <PyInit__decimal@@Base+0x1a8b8>
   36900:	mov	x4, x23
   36904:	mov	x3, x20
   36908:	mov	x2, x22
   3690c:	mov	x1, x28
   36910:	mov	x0, x28
   36914:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   36918:	mov	x2, x23
   3691c:	mov	x1, x20
   36920:	mov	x0, x28
   36924:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   36928:	ldrb	w1, [x28]
   3692c:	tst	w1, #0xe
   36930:	b.ne	36af8 <PyInit__decimal@@Base+0x1a8b8>  // b.any
   36934:	ldr	x0, [x28, #24]
   36938:	ldr	x2, [x28, #40]
   3693c:	add	x0, x2, x0, lsl #3
   36940:	ldur	x0, [x0, #-8]
   36944:	cbnz	x0, 36950 <PyInit__decimal@@Base+0x1a710>
   36948:	ldr	w0, [sp, #320]
   3694c:	tbnz	w0, #0, 36afc <PyInit__decimal@@Base+0x1a8bc>
   36950:	lsr	x25, x25, #1
   36954:	cbz	x25, 36af8 <PyInit__decimal@@Base+0x1a8b8>
   36958:	mov	x1, x28
   3695c:	mov	x4, x23
   36960:	mov	x3, x20
   36964:	mov	x2, x28
   36968:	mov	x0, x28
   3696c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   36970:	ldrb	w1, [x28]
   36974:	and	x27, x24, x25
   36978:	tst	w1, #0xe
   3697c:	b.ne	368f4 <PyInit__decimal@@Base+0x1a6b4>  // b.any
   36980:	mov	x2, x23
   36984:	mov	x1, x20
   36988:	mov	x0, x28
   3698c:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   36990:	cbz	x27, 36928 <PyInit__decimal@@Base+0x1a6e8>
   36994:	b	36900 <PyInit__decimal@@Base+0x1a6c0>
   36998:	mov	x0, x28
   3699c:	mov	w2, #0x4                   	// #4
   369a0:	mov	w1, #0x0                   	// #0
   369a4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   369a8:	b	36784 <PyInit__decimal@@Base+0x1a544>
   369ac:	mov	w1, w26
   369b0:	mov	x0, x28
   369b4:	mov	x3, #0x0                   	// #0
   369b8:	mov	x2, #0x1                   	// #1
   369bc:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   369c0:	ldrb	w1, [x28]
   369c4:	tbz	w1, #1, 36784 <PyInit__decimal@@Base+0x1a544>
   369c8:	mov	x3, #0x1                   	// #1
   369cc:	mov	w1, w26
   369d0:	movk	x3, #0x4ec8, lsl #16
   369d4:	mov	x0, x28
   369d8:	movk	x3, #0x6d67, lsl #32
   369dc:	mov	x2, #0x1                   	// #1
   369e0:	movk	x3, #0x1bc1, lsl #48
   369e4:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   369e8:	b	36784 <PyInit__decimal@@Base+0x1a544>
   369ec:	cbz	x0, 36a68 <PyInit__decimal@@Base+0x1a828>
   369f0:	ldr	x0, [sp, #184]
   369f4:	cmp	x0, #0x0
   369f8:	b.lt	36b18 <PyInit__decimal@@Base+0x1a8d8>  // b.tstop
   369fc:	b.ne	36a68 <PyInit__decimal@@Base+0x1a828>  // b.any
   36a00:	ldr	x0, [x1]
   36a04:	and	w0, w0, #0x1
   36a08:	cbz	w0, 36a68 <PyInit__decimal@@Base+0x1a828>
   36a0c:	mov	x4, x24
   36a10:	mov	x3, x20
   36a14:	mov	x2, x22
   36a18:	mov	x1, x28
   36a1c:	mov	x0, x28
   36a20:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   36a24:	mov	x2, x24
   36a28:	mov	x1, x20
   36a2c:	mov	x0, x28
   36a30:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   36a34:	ldr	w0, [x21]
   36a38:	ldr	w2, [sp, #116]
   36a3c:	orr	w0, w0, w2
   36a40:	str	w0, [x21]
   36a44:	ldrb	w1, [x28]
   36a48:	tst	w1, #0xe
   36a4c:	b.ne	36774 <PyInit__decimal@@Base+0x1a534>  // b.any
   36a50:	ldr	x0, [x28, #24]
   36a54:	ldr	x3, [x28, #40]
   36a58:	add	x0, x3, x0, lsl #3
   36a5c:	ldur	x0, [x0, #-8]
   36a60:	cbnz	x0, 36a68 <PyInit__decimal@@Base+0x1a828>
   36a64:	tbnz	w2, #0, 36774 <PyInit__decimal@@Base+0x1a534>
   36a68:	mov	x4, x24
   36a6c:	mov	x3, x20
   36a70:	mov	x2, x22
   36a74:	mov	x1, x22
   36a78:	mov	x0, x22
   36a7c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   36a80:	mov	x2, x24
   36a84:	mov	x1, x20
   36a88:	mov	x0, x22
   36a8c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   36a90:	mov	x1, x25
   36a94:	mov	x0, x25
   36a98:	mov	x4, x24
   36a9c:	mov	x3, x23
   36aa0:	mov	x2, x27
   36aa4:	bl	36410 <PyInit__decimal@@Base+0x1a1d0>
   36aa8:	ldrb	w1, [sp, #176]
   36aac:	ldrb	w0, [sp, #128]
   36ab0:	orr	w0, w1, w0
   36ab4:	tst	w0, #0xc
   36ab8:	b.eq	36754 <PyInit__decimal@@Base+0x1a514>  // b.none
   36abc:	ldr	w3, [sp, #116]
   36ac0:	mov	x2, x21
   36ac4:	mov	x0, x28
   36ac8:	mov	w1, #0x3be                 	// #958
   36acc:	and	w1, w3, w1
   36ad0:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   36ad4:	ldrb	w1, [x28]
   36ad8:	b	36780 <PyInit__decimal@@Base+0x1a540>
   36adc:	ldr	w2, [sp, #312]
   36ae0:	mov	x0, x28
   36ae4:	ldr	x1, [sp, #272]
   36ae8:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   36aec:	cbz	x27, 36928 <PyInit__decimal@@Base+0x1a6e8>
   36af0:	b	36900 <PyInit__decimal@@Base+0x1a6c0>
   36af4:	ldrb	w1, [x28]
   36af8:	ldr	w0, [sp, #320]
   36afc:	ldr	w2, [x21]
   36b00:	and	w1, w1, #0xfffffffe
   36b04:	orr	w1, w26, w1
   36b08:	orr	w0, w2, w0
   36b0c:	str	w0, [x21]
   36b10:	strb	w1, [x28]
   36b14:	b	36780 <PyInit__decimal@@Base+0x1a540>
   36b18:	mov	x2, #0x435f                	// #17247
   36b1c:	neg	x0, x0
   36b20:	movk	x2, #0xd79, lsl #16
   36b24:	movk	x2, #0x35e5, lsl #32
   36b28:	movk	x2, #0xd794, lsl #48
   36b2c:	umulh	x2, x0, x2
   36b30:	lsr	x2, x2, #4
   36b34:	add	x3, x2, x2, lsl #2
   36b38:	ldr	x1, [x1, x2, lsl #3]
   36b3c:	lsl	x3, x3, #2
   36b40:	sub	x2, x3, x2
   36b44:	sub	x0, x0, x2
   36b48:	ldr	x2, [sp, #104]
   36b4c:	ldr	x0, [x2, x0, lsl #3]
   36b50:	udiv	x0, x1, x0
   36b54:	and	w0, w0, #0x1
   36b58:	b	36a08 <PyInit__decimal@@Base+0x1a7c8>
   36b5c:	mov	x2, x24
   36b60:	mov	w1, #0x10                  	// #16
   36b64:	mov	w3, #0x0                   	// #0
   36b68:	b	36880 <PyInit__decimal@@Base+0x1a640>
   36b6c:	nop
   36b70:	sub	sp, sp, #0x2a0
   36b74:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   36b78:	stp	x29, x30, [sp]
   36b7c:	mov	x29, sp
   36b80:	ldr	q0, [x5, #1760]
   36b84:	stp	x19, x20, [sp, #16]
   36b88:	mov	x19, x2
   36b8c:	add	x2, sp, #0xa0
   36b90:	stp	x21, x22, [sp, #32]
   36b94:	mov	x22, x3
   36b98:	mov	w3, #0x30                  	// #48
   36b9c:	stp	x23, x24, [sp, #48]
   36ba0:	add	x24, sp, #0x70
   36ba4:	mov	x20, x0
   36ba8:	mov	x21, x1
   36bac:	mov	x23, x4
   36bb0:	mov	x0, x24
   36bb4:	strb	w3, [sp, #64]
   36bb8:	stp	xzr, xzr, [sp, #72]
   36bbc:	stur	q0, [sp, #88]
   36bc0:	str	x2, [sp, #104]
   36bc4:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   36bc8:	mov	x2, x19
   36bcc:	mov	w7, #0x0                   	// #0
   36bd0:	tbnz	x19, #63, 36d4c <PyInit__decimal@@Base+0x1ab0c>
   36bd4:	ldrb	w4, [sp, #64]
   36bd8:	adrp	x6, 48000 <PyInit__decimal@@Base+0x2bdc0>
   36bdc:	ldr	x3, [sp, #104]
   36be0:	and	w4, w4, #0xfffffff0
   36be4:	orr	w7, w7, w4
   36be8:	strb	w7, [sp, #64]
   36bec:	str	xzr, [sp, #72]
   36bf0:	add	x6, x6, #0x180
   36bf4:	stp	x2, xzr, [x3]
   36bf8:	mov	x2, #0x1                   	// #1
   36bfc:	str	x2, [sp, #88]
   36c00:	ldr	x4, [x6, #72]
   36c04:	ldr	x2, [x3]
   36c08:	cmp	x2, x4
   36c0c:	b.cs	36c90 <PyInit__decimal@@Base+0x1aa50>  // b.hs, b.nlast
   36c10:	ldr	x0, [x6, #32]
   36c14:	cmp	x2, x0
   36c18:	b.cs	36c60 <PyInit__decimal@@Base+0x1aa20>  // b.hs, b.nlast
   36c1c:	ldr	x0, [x6, #16]
   36c20:	cmp	x2, x0
   36c24:	b.cs	36da4 <PyInit__decimal@@Base+0x1ab64>  // b.hs, b.nlast
   36c28:	ldr	x0, [x6, #8]
   36c2c:	cmp	x2, x0
   36c30:	ldrb	w2, [sp, #64]
   36c34:	cset	x3, cs  // cs = hs, nlast
   36c38:	add	x3, x3, #0x1
   36c3c:	str	x3, [sp, #80]
   36c40:	tst	w2, #0xe
   36c44:	b.ne	36cd8 <PyInit__decimal@@Base+0x1aa98>  // b.any
   36c48:	add	x19, sp, #0x40
   36c4c:	mov	x1, x24
   36c50:	mov	x0, x19
   36c54:	mov	x2, x23
   36c58:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   36c5c:	b	36ce4 <PyInit__decimal@@Base+0x1aaa4>
   36c60:	ldr	x0, [x6, #48]
   36c64:	cmp	x2, x0
   36c68:	b.cc	36db8 <PyInit__decimal@@Base+0x1ab78>  // b.lo, b.ul, b.last
   36c6c:	ldr	x0, [x6, #64]
   36c70:	mov	x3, #0x9                   	// #9
   36c74:	cmp	x2, x0
   36c78:	b.cs	36cc8 <PyInit__decimal@@Base+0x1aa88>  // b.hs, b.nlast
   36c7c:	ldr	x0, [x6, #56]
   36c80:	cmp	x2, x0
   36c84:	cset	x3, cs  // cs = hs, nlast
   36c88:	add	x3, x3, #0x7
   36c8c:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36c90:	ldr	x0, [x6, #112]
   36c94:	cmp	x2, x0
   36c98:	b.cs	36d64 <PyInit__decimal@@Base+0x1ab24>  // b.hs, b.nlast
   36c9c:	ldr	x0, [x6, #88]
   36ca0:	cmp	x2, x0
   36ca4:	b.cc	36dcc <PyInit__decimal@@Base+0x1ab8c>  // b.lo, b.ul, b.last
   36ca8:	ldr	x0, [x6, #104]
   36cac:	mov	x3, #0xe                   	// #14
   36cb0:	cmp	x2, x0
   36cb4:	b.cs	36cc8 <PyInit__decimal@@Base+0x1aa88>  // b.hs, b.nlast
   36cb8:	ldr	x0, [x6, #96]
   36cbc:	cmp	x2, x0
   36cc0:	cset	x3, cs  // cs = hs, nlast
   36cc4:	add	x3, x3, #0xc
   36cc8:	ldrb	w2, [sp, #64]
   36ccc:	str	x3, [sp, #80]
   36cd0:	tst	w2, #0xe
   36cd4:	b.eq	36c48 <PyInit__decimal@@Base+0x1aa08>  // b.none
   36cd8:	tst	w2, #0xc
   36cdc:	add	x19, sp, #0x40
   36ce0:	b.ne	36de0 <PyInit__decimal@@Base+0x1aba0>  // b.any
   36ce4:	mov	w0, #0x1                   	// #1
   36ce8:	mov	x5, x23
   36cec:	mov	x4, x22
   36cf0:	mov	x2, x21
   36cf4:	mov	x1, x20
   36cf8:	mov	x3, x19
   36cfc:	bl	34ba0 <PyInit__decimal@@Base+0x18960>
   36d00:	ldrb	w0, [sp, #64]
   36d04:	tst	w0, #0xe0
   36d08:	b.ne	36d20 <PyInit__decimal@@Base+0x1aae0>  // b.any
   36d0c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36d10:	ldr	x0, [sp, #104]
   36d14:	ldr	x1, [x1, #1912]
   36d18:	blr	x1
   36d1c:	ldrb	w0, [sp, #64]
   36d20:	tbnz	w0, #4, 36d34 <PyInit__decimal@@Base+0x1aaf4>
   36d24:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36d28:	mov	x0, x19
   36d2c:	ldr	x1, [x1, #1912]
   36d30:	blr	x1
   36d34:	ldp	x29, x30, [sp]
   36d38:	ldp	x19, x20, [sp, #16]
   36d3c:	ldp	x21, x22, [sp, #32]
   36d40:	ldp	x23, x24, [sp, #48]
   36d44:	add	sp, sp, #0x2a0
   36d48:	ret
   36d4c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   36d50:	mov	w7, #0x1                   	// #1
   36d54:	cmp	x19, x0
   36d58:	b.eq	36bd4 <PyInit__decimal@@Base+0x1a994>  // b.none
   36d5c:	neg	x2, x19
   36d60:	b	36bd4 <PyInit__decimal@@Base+0x1a994>
   36d64:	ldr	x0, [x6, #144]
   36d68:	cmp	x2, x0
   36d6c:	b.cs	36d90 <PyInit__decimal@@Base+0x1ab50>  // b.hs, b.nlast
   36d70:	ldr	x0, [x6, #128]
   36d74:	cmp	x2, x0
   36d78:	b.cs	36df4 <PyInit__decimal@@Base+0x1abb4>  // b.hs, b.nlast
   36d7c:	ldr	x0, [x6, #120]
   36d80:	cmp	x2, x0
   36d84:	cset	x3, cs  // cs = hs, nlast
   36d88:	add	x3, x3, #0xf
   36d8c:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36d90:	ldr	x0, [x6, #152]
   36d94:	cmp	x2, x0
   36d98:	cset	x3, cs  // cs = hs, nlast
   36d9c:	add	x3, x3, #0x13
   36da0:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36da4:	ldr	x0, [x6, #24]
   36da8:	cmp	x2, x0
   36dac:	cset	x3, cs  // cs = hs, nlast
   36db0:	add	x3, x3, #0x3
   36db4:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36db8:	ldr	x0, [x6, #40]
   36dbc:	cmp	x2, x0
   36dc0:	cset	x3, cs  // cs = hs, nlast
   36dc4:	add	x3, x3, #0x5
   36dc8:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36dcc:	ldr	x0, [x6, #80]
   36dd0:	cmp	x2, x0
   36dd4:	cset	x3, cs  // cs = hs, nlast
   36dd8:	add	x3, x3, #0xa
   36ddc:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36de0:	ldr	w2, [sp, #152]
   36de4:	mov	x0, x19
   36de8:	ldr	x1, [sp, #112]
   36dec:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   36df0:	b	36ce4 <PyInit__decimal@@Base+0x1aaa4>
   36df4:	ldr	x0, [x6, #136]
   36df8:	cmp	x2, x0
   36dfc:	cset	x3, cs  // cs = hs, nlast
   36e00:	add	x3, x3, #0x11
   36e04:	b	36cc8 <PyInit__decimal@@Base+0x1aa88>
   36e08:	sub	sp, sp, #0x2a0
   36e0c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   36e10:	stp	x29, x30, [sp]
   36e14:	mov	x29, sp
   36e18:	ldr	q0, [x5, #1760]
   36e1c:	stp	x21, x22, [sp, #32]
   36e20:	mov	x22, x2
   36e24:	add	x2, sp, #0xa0
   36e28:	stp	x19, x20, [sp, #16]
   36e2c:	mov	x20, x1
   36e30:	mov	w1, #0x30                  	// #48
   36e34:	stp	x23, x24, [sp, #48]
   36e38:	add	x24, sp, #0x70
   36e3c:	mov	x21, x3
   36e40:	mov	x23, x4
   36e44:	mov	x19, x0
   36e48:	mov	x0, x24
   36e4c:	strb	w1, [sp, #64]
   36e50:	stp	xzr, xzr, [sp, #72]
   36e54:	stur	q0, [sp, #88]
   36e58:	str	x2, [sp, #104]
   36e5c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   36e60:	mov	x6, #0x89e80000            	// #2313682944
   36e64:	ldrb	w5, [sp, #64]
   36e68:	movk	x6, #0x2304, lsl #32
   36e6c:	str	xzr, [sp, #72]
   36e70:	movk	x6, #0x8ac7, lsl #48
   36e74:	cmp	x22, x6
   36e78:	cset	x3, cs  // cs = hs, nlast
   36e7c:	and	w5, w5, #0xfffffff0
   36e80:	ldr	x4, [sp, #104]
   36e84:	add	x7, x3, #0x1
   36e88:	msub	x2, x3, x6, x22
   36e8c:	strb	w5, [sp, #64]
   36e90:	adrp	x6, 48000 <PyInit__decimal@@Base+0x2bdc0>
   36e94:	add	x6, x6, #0x180
   36e98:	add	x1, x4, x7, lsl #3
   36e9c:	stp	x2, x3, [x4]
   36ea0:	str	x7, [sp, #88]
   36ea4:	ldr	x0, [x6, #72]
   36ea8:	ldur	x7, [x1, #-8]
   36eac:	cmp	x7, x0
   36eb0:	b.cs	36f10 <PyInit__decimal@@Base+0x1acd0>  // b.hs, b.nlast
   36eb4:	ldr	x0, [x6, #32]
   36eb8:	cmp	x7, x0
   36ebc:	b.cs	36ee0 <PyInit__decimal@@Base+0x1aca0>  // b.hs, b.nlast
   36ec0:	ldr	x0, [x6, #16]
   36ec4:	cmp	x7, x0
   36ec8:	b.cs	37020 <PyInit__decimal@@Base+0x1ade0>  // b.hs, b.nlast
   36ecc:	ldr	x0, [x6, #8]
   36ed0:	cmp	x7, x0
   36ed4:	cset	x4, cs  // cs = hs, nlast
   36ed8:	add	x4, x4, #0x1
   36edc:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   36ee0:	ldr	x0, [x6, #48]
   36ee4:	cmp	x7, x0
   36ee8:	b.cc	37034 <PyInit__decimal@@Base+0x1adf4>  // b.lo, b.ul, b.last
   36eec:	ldr	x0, [x6, #64]
   36ef0:	mov	x4, #0x9                   	// #9
   36ef4:	cmp	x7, x0
   36ef8:	b.cs	36f48 <PyInit__decimal@@Base+0x1ad08>  // b.hs, b.nlast
   36efc:	ldr	x0, [x6, #56]
   36f00:	cmp	x7, x0
   36f04:	cset	x4, cs  // cs = hs, nlast
   36f08:	add	x4, x4, #0x7
   36f0c:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   36f10:	ldr	x0, [x6, #112]
   36f14:	cmp	x7, x0
   36f18:	b.cs	36fe0 <PyInit__decimal@@Base+0x1ada0>  // b.hs, b.nlast
   36f1c:	ldr	x0, [x6, #88]
   36f20:	cmp	x7, x0
   36f24:	b.cc	37048 <PyInit__decimal@@Base+0x1ae08>  // b.lo, b.ul, b.last
   36f28:	ldr	x0, [x6, #104]
   36f2c:	mov	x4, #0xe                   	// #14
   36f30:	cmp	x7, x0
   36f34:	b.cs	36f48 <PyInit__decimal@@Base+0x1ad08>  // b.hs, b.nlast
   36f38:	ldr	x0, [x6, #96]
   36f3c:	cmp	x7, x0
   36f40:	cset	x4, cs  // cs = hs, nlast
   36f44:	add	x4, x4, #0xc
   36f48:	lsl	x2, x3, #2
   36f4c:	ldrb	w5, [sp, #64]
   36f50:	add	x2, x2, x3
   36f54:	tst	w5, #0xe
   36f58:	lsl	x2, x2, #2
   36f5c:	sub	x2, x2, x3
   36f60:	add	x2, x2, x4
   36f64:	str	x2, [sp, #80]
   36f68:	b.eq	3705c <PyInit__decimal@@Base+0x1ae1c>  // b.none
   36f6c:	tst	w5, #0xc
   36f70:	add	x22, sp, #0x40
   36f74:	b.ne	37074 <PyInit__decimal@@Base+0x1ae34>  // b.any
   36f78:	mov	w0, #0x1                   	// #1
   36f7c:	mov	x5, x23
   36f80:	mov	x4, x21
   36f84:	mov	x2, x20
   36f88:	mov	x1, x19
   36f8c:	mov	x3, x22
   36f90:	bl	34ba0 <PyInit__decimal@@Base+0x18960>
   36f94:	ldrb	w0, [sp, #64]
   36f98:	tst	w0, #0xe0
   36f9c:	b.ne	36fb4 <PyInit__decimal@@Base+0x1ad74>  // b.any
   36fa0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36fa4:	ldr	x0, [sp, #104]
   36fa8:	ldr	x1, [x1, #1912]
   36fac:	blr	x1
   36fb0:	ldrb	w0, [sp, #64]
   36fb4:	tbnz	w0, #4, 36fc8 <PyInit__decimal@@Base+0x1ad88>
   36fb8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   36fbc:	mov	x0, x22
   36fc0:	ldr	x1, [x1, #1912]
   36fc4:	blr	x1
   36fc8:	ldp	x29, x30, [sp]
   36fcc:	ldp	x19, x20, [sp, #16]
   36fd0:	ldp	x21, x22, [sp, #32]
   36fd4:	ldp	x23, x24, [sp, #48]
   36fd8:	add	sp, sp, #0x2a0
   36fdc:	ret
   36fe0:	ldr	x0, [x6, #144]
   36fe4:	cmp	x7, x0
   36fe8:	b.cs	3700c <PyInit__decimal@@Base+0x1adcc>  // b.hs, b.nlast
   36fec:	ldr	x0, [x6, #128]
   36ff0:	cmp	x7, x0
   36ff4:	b.cs	37088 <PyInit__decimal@@Base+0x1ae48>  // b.hs, b.nlast
   36ff8:	ldr	x0, [x6, #120]
   36ffc:	cmp	x7, x0
   37000:	cset	x4, cs  // cs = hs, nlast
   37004:	add	x4, x4, #0xf
   37008:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   3700c:	ldr	x0, [x6, #152]
   37010:	cmp	x7, x0
   37014:	cset	x4, cs  // cs = hs, nlast
   37018:	add	x4, x4, #0x13
   3701c:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   37020:	ldr	x0, [x6, #24]
   37024:	cmp	x7, x0
   37028:	cset	x4, cs  // cs = hs, nlast
   3702c:	add	x4, x4, #0x3
   37030:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   37034:	ldr	x0, [x6, #40]
   37038:	cmp	x7, x0
   3703c:	cset	x4, cs  // cs = hs, nlast
   37040:	add	x4, x4, #0x5
   37044:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   37048:	ldr	x0, [x6, #80]
   3704c:	cmp	x7, x0
   37050:	cset	x4, cs  // cs = hs, nlast
   37054:	add	x4, x4, #0xa
   37058:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   3705c:	add	x22, sp, #0x40
   37060:	mov	x1, x24
   37064:	mov	x0, x22
   37068:	mov	x2, x23
   3706c:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   37070:	b	36f78 <PyInit__decimal@@Base+0x1ad38>
   37074:	ldr	w2, [sp, #152]
   37078:	mov	x0, x22
   3707c:	ldr	x1, [sp, #112]
   37080:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   37084:	b	36f78 <PyInit__decimal@@Base+0x1ad38>
   37088:	ldr	x0, [x6, #136]
   3708c:	cmp	x7, x0
   37090:	cset	x4, cs  // cs = hs, nlast
   37094:	add	x4, x4, #0x11
   37098:	b	36f48 <PyInit__decimal@@Base+0x1ad08>
   3709c:	nop
   370a0:	sxtw	x2, w2
   370a4:	b	36b70 <PyInit__decimal@@Base+0x1a930>
   370a8:	mov	w2, w2
   370ac:	b	36e08 <PyInit__decimal@@Base+0x1abc8>
   370b0:	b	36b70 <PyInit__decimal@@Base+0x1a930>
   370b4:	nop
   370b8:	b	36e08 <PyInit__decimal@@Base+0x1abc8>
   370bc:	nop
   370c0:	stp	x29, x30, [sp, #-96]!
   370c4:	cmp	x0, x3
   370c8:	mov	x29, sp
   370cc:	stp	x19, x20, [sp, #16]
   370d0:	mov	x19, x0
   370d4:	mov	x20, x5
   370d8:	stp	x21, x22, [sp, #32]
   370dc:	mov	x22, x4
   370e0:	stp	x23, x24, [sp, #48]
   370e4:	str	wzr, [sp, #92]
   370e8:	b.eq	37144 <PyInit__decimal@@Base+0x1af04>  // b.none
   370ec:	add	x23, sp, #0x5c
   370f0:	mov	x21, x3
   370f4:	mov	x3, x4
   370f8:	mov	x4, x23
   370fc:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   37100:	ldr	w1, [sp, #92]
   37104:	tbnz	w1, #8, 37124 <PyInit__decimal@@Base+0x1aee4>
   37108:	mov	x1, x19
   3710c:	mov	x4, x23
   37110:	mov	x3, x22
   37114:	mov	x2, x21
   37118:	mov	x0, x19
   3711c:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   37120:	ldr	w1, [sp, #92]
   37124:	ldr	w0, [x20]
   37128:	orr	w0, w0, w1
   3712c:	str	w0, [x20]
   37130:	ldp	x19, x20, [sp, #16]
   37134:	ldp	x21, x22, [sp, #32]
   37138:	ldp	x23, x24, [sp, #48]
   3713c:	ldp	x29, x30, [sp], #96
   37140:	ret
   37144:	ldr	x0, [x0, #24]
   37148:	mov	x23, x1
   3714c:	mov	x24, x2
   37150:	bl	28358 <PyInit__decimal@@Base+0xc118>
   37154:	mov	x21, x0
   37158:	cbz	x0, 371f8 <PyInit__decimal@@Base+0x1afb8>
   3715c:	ldr	x2, [x19, #24]
   37160:	ldr	x1, [x19, #40]
   37164:	ldr	x0, [x0, #40]
   37168:	lsl	x2, x2, #3
   3716c:	str	x25, [sp, #64]
   37170:	add	x25, sp, #0x5c
   37174:	bl	6470 <memcpy@plt>
   37178:	ldrb	w6, [x19]
   3717c:	mov	x0, x19
   37180:	ldrb	w5, [x21]
   37184:	mov	x2, x24
   37188:	mov	x1, x23
   3718c:	mov	x4, x25
   37190:	mov	x3, x22
   37194:	bfxil	w5, w6, #0, #4
   37198:	strb	w5, [x21]
   3719c:	ldur	q0, [x19, #8]
   371a0:	stur	q0, [x21, #8]
   371a4:	ldr	x5, [x19, #24]
   371a8:	str	x5, [x21, #24]
   371ac:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   371b0:	ldr	w0, [sp, #92]
   371b4:	tbz	w0, #8, 3720c <PyInit__decimal@@Base+0x1afcc>
   371b8:	ldrb	w0, [x21]
   371bc:	tst	w0, #0xe0
   371c0:	b.ne	371d8 <PyInit__decimal@@Base+0x1af98>  // b.any
   371c4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   371c8:	ldr	x0, [x21, #40]
   371cc:	ldr	x1, [x1, #1912]
   371d0:	blr	x1
   371d4:	ldrb	w0, [x21]
   371d8:	tbnz	w0, #4, 371ec <PyInit__decimal@@Base+0x1afac>
   371dc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   371e0:	mov	x0, x21
   371e4:	ldr	x1, [x1, #1912]
   371e8:	blr	x1
   371ec:	ldr	w1, [sp, #92]
   371f0:	ldr	x25, [sp, #64]
   371f4:	b	37124 <PyInit__decimal@@Base+0x1aee4>
   371f8:	mov	x2, x20
   371fc:	mov	x0, x19
   37200:	mov	w1, #0x200                 	// #512
   37204:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   37208:	b	37130 <PyInit__decimal@@Base+0x1aef0>
   3720c:	mov	x4, x25
   37210:	mov	x3, x22
   37214:	mov	x2, x21
   37218:	mov	x1, x19
   3721c:	mov	x0, x19
   37220:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   37224:	b	371b8 <PyInit__decimal@@Base+0x1af78>
   37228:	sub	sp, sp, #0x570
   3722c:	mov	w4, #0x30                  	// #48
   37230:	movi	v1.4s, #0x0
   37234:	mov	w9, #0xffffff90            	// #-112
   37238:	add	x5, sp, #0x170
   3723c:	stp	x29, x30, [sp]
   37240:	mov	x29, sp
   37244:	stp	x21, x22, [sp, #32]
   37248:	mov	x22, x1
   3724c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   37250:	stp	x25, x26, [sp, #64]
   37254:	mov	x25, #0x1                   	// #1
   37258:	ldr	q0, [x1, #1760]
   3725c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   37260:	ldr	x8, [x22, #24]
   37264:	str	x25, [sp, #112]
   37268:	ldr	x7, [x22, #40]
   3726c:	strb	w4, [sp, #128]
   37270:	ldr	q3, [x1, #2224]
   37274:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   37278:	add	x10, x7, x8, lsl #3
   3727c:	strb	w4, [sp, #176]
   37280:	ldr	q2, [x1, #2176]
   37284:	strb	w9, [sp, #224]
   37288:	stp	x23, x24, [sp, #48]
   3728c:	mov	x23, x2
   37290:	add	x4, sp, #0x370
   37294:	stur	q1, [sp, #136]
   37298:	add	x1, sp, #0x70
   3729c:	stur	q0, [sp, #152]
   372a0:	stur	q1, [sp, #184]
   372a4:	stur	q0, [sp, #200]
   372a8:	stur	q3, [sp, #232]
   372ac:	stur	q2, [sp, #248]
   372b0:	ldur	x2, [x10, #-8]
   372b4:	str	x5, [sp, #168]
   372b8:	str	x4, [sp, #216]
   372bc:	str	x1, [sp, #264]
   372c0:	cbz	x2, 37714 <PyInit__decimal@@Base+0x1b4d4>
   372c4:	stp	x19, x20, [sp, #16]
   372c8:	mov	x19, x3
   372cc:	ldp	x4, x3, [x22, #8]
   372d0:	ldrb	w1, [x22]
   372d4:	add	x21, x3, x4
   372d8:	cmp	x21, #0x13
   372dc:	b.le	3731c <PyInit__decimal@@Base+0x1b0dc>
   372e0:	tbnz	w1, #0, 376cc <PyInit__decimal@@Base+0x1b48c>
   372e4:	mov	w1, #0x0                   	// #0
   372e8:	mov	w2, #0x2                   	// #2
   372ec:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   372f0:	ldr	w0, [x19]
   372f4:	mov	w1, #0x1840                	// #6208
   372f8:	orr	w0, w0, w1
   372fc:	str	w0, [x19]
   37300:	ldp	x19, x20, [sp, #16]
   37304:	ldp	x29, x30, [sp]
   37308:	ldp	x21, x22, [sp, #32]
   3730c:	ldp	x23, x24, [sp, #48]
   37310:	ldp	x25, x26, [sp, #64]
   37314:	add	sp, sp, #0x570
   37318:	ret
   3731c:	ldr	x10, [x23]
   37320:	and	w1, w1, #0xe
   37324:	ldr	x11, [x22, #32]
   37328:	add	x5, sp, #0x78
   3732c:	mvn	x10, x10
   37330:	mov	w2, #0x50                  	// #80
   37334:	orr	w2, w1, w2
   37338:	mov	x12, #0x9                   	// #9
   3733c:	add	x24, sp, #0x110
   37340:	add	x20, sp, #0x140
   37344:	mov	x1, x24
   37348:	stp	x27, x28, [sp, #80]
   3734c:	mov	x28, x0
   37350:	mov	x0, x20
   37354:	str	x12, [sp, #120]
   37358:	strb	w9, [sp, #272]
   3735c:	stp	x10, x25, [sp, #280]
   37360:	stp	x25, x25, [sp, #296]
   37364:	str	x5, [sp, #312]
   37368:	strb	w2, [sp, #320]
   3736c:	stp	x4, x3, [sp, #328]
   37370:	stp	x8, x11, [sp, #344]
   37374:	str	x7, [sp, #360]
   37378:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3737c:	cmp	w0, #0x0
   37380:	b.le	3776c <PyInit__decimal@@Base+0x1b52c>
   37384:	cmp	x21, #0x0
   37388:	mov	x0, x20
   3738c:	csel	x21, x21, xzr, ge  // ge = tcont
   37390:	str	x21, [sp, #104]
   37394:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   37398:	ldr	x3, [x23]
   3739c:	mov	x4, #0xa                   	// #10
   373a0:	mov	w5, #0x6                   	// #6
   373a4:	mov	x1, x22
   373a8:	add	x3, x3, #0x2
   373ac:	mov	x2, x19
   373b0:	add	x3, x3, x21
   373b4:	mov	x0, x28
   373b8:	cmp	x3, x4
   373bc:	str	w5, [sp, #356]
   373c0:	csel	x3, x3, x4, ge  // ge = tcont
   373c4:	str	x3, [sp, #320]
   373c8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   373cc:	cbz	w0, 3774c <PyInit__decimal@@Base+0x1b50c>
   373d0:	ldr	x1, [x28, #8]
   373d4:	mov	x2, #0x10000000000000      	// #4503599627370496
   373d8:	ldr	x3, [sp, #104]
   373dc:	ldr	x0, [sp, #320]
   373e0:	sub	x1, x1, x3
   373e4:	str	x1, [x28, #8]
   373e8:	cmp	x0, x2
   373ec:	b.gt	3773c <PyInit__decimal@@Base+0x1b4fc>
   373f0:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   373f4:	add	x3, x2, #0x180
   373f8:	ldr	x2, [x3, #72]
   373fc:	cmp	x0, x2
   37400:	b.cc	3779c <PyInit__decimal@@Base+0x1b55c>  // b.lo, b.ul, b.last
   37404:	ldr	x2, [x3, #112]
   37408:	cmp	x0, x2
   3740c:	b.cs	37868 <PyInit__decimal@@Base+0x1b628>  // b.hs, b.nlast
   37410:	ldr	x2, [x3, #88]
   37414:	cmp	x0, x2
   37418:	b.cc	378fc <PyInit__decimal@@Base+0x1b6bc>  // b.lo, b.ul, b.last
   3741c:	ldr	x4, [x3, #104]
   37420:	mov	x2, #0xd                   	// #13
   37424:	cmp	x0, x4
   37428:	b.cs	37440 <PyInit__decimal@@Base+0x1b200>  // b.hs, b.nlast
   3742c:	ldr	x2, [x3, #96]
   37430:	cmp	x0, x2
   37434:	cset	x2, cs  // cs = hs, nlast
   37438:	add	x2, x2, #0xb
   3743c:	nop
   37440:	scvtf	d0, x0
   37444:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   37448:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3744c:	mov	x7, #0x3                   	// #3
   37450:	ldr	d2, [x0, #2192]
   37454:	ldr	x0, [x28, #16]
   37458:	fmul	d0, d0, d2
   3745c:	ldr	d1, [x3, #2200]
   37460:	add	x1, x1, x0
   37464:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
   37468:	sub	x2, x2, x1
   3746c:	fsub	d0, d0, d1
   37470:	scvtf	d1, x2
   37474:	fdiv	d0, d0, d1
   37478:	fcvtps	x0, d0
   3747c:	cmp	x0, x7
   37480:	csel	x7, x0, x7, ge  // ge = tcont
   37484:	cmp	x0, x3
   37488:	b.eq	3773c <PyInit__decimal@@Base+0x1b4fc>  // b.none
   3748c:	adrp	x27, 62000 <PyInit__decimal@@Base+0x45dc0>
   37490:	add	x26, sp, #0xe0
   37494:	add	x23, sp, #0x80
   37498:	add	x25, x20, #0x1c
   3749c:	add	x27, x27, #0xc58
   374a0:	add	x22, sp, #0xb0
   374a4:	sub	x21, x7, #0x1
   374a8:	mov	x0, x22
   374ac:	mov	x3, #0x0                   	// #0
   374b0:	mov	x2, #0x1                   	// #1
   374b4:	mov	w1, #0x0                   	// #0
   374b8:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   374bc:	nop
   374c0:	ldr	x1, [sp, #264]
   374c4:	mov	x0, x26
   374c8:	str	x21, [x1]
   374cc:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   374d0:	mov	x5, x25
   374d4:	mov	x4, x20
   374d8:	mov	x3, x26
   374dc:	mov	x2, x28
   374e0:	mov	x1, x23
   374e4:	mov	w0, #0x1                   	// #1
   374e8:	bl	34ba0 <PyInit__decimal@@Base+0x18960>
   374ec:	mov	x5, x25
   374f0:	mov	x4, x20
   374f4:	mov	x3, x27
   374f8:	mov	x2, x23
   374fc:	mov	x1, x22
   37500:	mov	x0, x22
   37504:	bl	370c0 <PyInit__decimal@@Base+0x1ae80>
   37508:	subs	x21, x21, #0x1
   3750c:	b.ne	374c0 <PyInit__decimal@@Base+0x1b280>  // b.any
   37510:	ldr	x1, [sp, #104]
   37514:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   37518:	add	x0, x0, #0x180
   3751c:	str	wzr, [sp, #272]
   37520:	ldr	x25, [x0, x1, lsl #3]
   37524:	cbz	x25, 37850 <PyInit__decimal@@Base+0x1b610>
   37528:	mov	x2, x19
   3752c:	mov	x1, x22
   37530:	mov	x0, x28
   37534:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   37538:	cbz	w0, 37638 <PyInit__decimal@@Base+0x1b3f8>
   3753c:	cmp	xzr, x25, lsr #32
   37540:	lsr	x2, x25, #32
   37544:	b.eq	378c4 <PyInit__decimal@@Base+0x1b684>  // b.none
   37548:	mov	w1, #0x30                  	// #48
   3754c:	mov	w3, #0x20                  	// #32
   37550:	lsr	x0, x2, #16
   37554:	cmp	x0, #0x0
   37558:	csel	x0, x0, x2, ne  // ne = any
   3755c:	csel	w1, w1, w3, ne  // ne = any
   37560:	lsr	x2, x0, #8
   37564:	cmp	xzr, x0, lsr #8
   37568:	b.eq	37574 <PyInit__decimal@@Base+0x1b334>  // b.none
   3756c:	add	w1, w1, #0x8
   37570:	mov	x0, x2
   37574:	cmp	xzr, x0, lsr #4
   37578:	lsr	x2, x0, #4
   3757c:	b.eq	37588 <PyInit__decimal@@Base+0x1b348>  // b.none
   37580:	add	w1, w1, #0x4
   37584:	mov	x0, x2
   37588:	cmp	xzr, x0, lsr #2
   3758c:	lsr	x2, x0, #2
   37590:	b.eq	3759c <PyInit__decimal@@Base+0x1b35c>  // b.none
   37594:	add	w1, w1, #0x2
   37598:	mov	x0, x2
   3759c:	cmp	xzr, x0, lsr #1
   375a0:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   375a4:	cinc	w1, w1, ne  // ne = any
   375a8:	add	x0, x0, #0x220
   375ac:	ldr	x21, [x0, w1, sxtw #3]
   375b0:	cmp	xzr, x21, lsr #1
   375b4:	lsr	x21, x21, #1
   375b8:	b.eq	37938 <PyInit__decimal@@Base+0x1b6f8>  // b.none
   375bc:	nop
   375c0:	mov	x0, x28
   375c4:	mov	x4, x24
   375c8:	mov	x3, x20
   375cc:	mov	x2, x28
   375d0:	mov	x1, x28
   375d4:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   375d8:	ldrb	w0, [x28]
   375dc:	and	x26, x25, x21
   375e0:	tst	w0, #0xe
   375e4:	b.eq	3780c <PyInit__decimal@@Base+0x1b5cc>  // b.none
   375e8:	tst	w0, #0xc
   375ec:	b.ne	37824 <PyInit__decimal@@Base+0x1b5e4>  // b.any
   375f0:	cbz	x26, 37620 <PyInit__decimal@@Base+0x1b3e0>
   375f4:	mov	x0, x28
   375f8:	mov	x4, x24
   375fc:	mov	x3, x20
   37600:	mov	x2, x22
   37604:	mov	x1, x28
   37608:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   3760c:	ldrb	w0, [x28]
   37610:	tst	w0, #0xe
   37614:	b.eq	3783c <PyInit__decimal@@Base+0x1b5fc>  // b.none
   37618:	tst	w0, #0xc
   3761c:	b.ne	377c4 <PyInit__decimal@@Base+0x1b584>  // b.any
   37620:	ldr	w1, [sp, #272]
   37624:	ldr	w2, [x19]
   37628:	and	w0, w0, #0xfffffffe
   3762c:	orr	w1, w2, w1
   37630:	str	w1, [x19]
   37634:	strb	w0, [x28]
   37638:	ldrb	w0, [sp, #128]
   3763c:	tst	w0, #0xe0
   37640:	b.ne	37658 <PyInit__decimal@@Base+0x1b418>  // b.any
   37644:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37648:	ldr	x0, [sp, #168]
   3764c:	ldr	x1, [x1, #1912]
   37650:	blr	x1
   37654:	ldrb	w0, [sp, #128]
   37658:	tbnz	w0, #4, 3766c <PyInit__decimal@@Base+0x1b42c>
   3765c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37660:	mov	x0, x23
   37664:	ldr	x1, [x1, #1912]
   37668:	blr	x1
   3766c:	ldrb	w0, [sp, #176]
   37670:	tst	w0, #0xe0
   37674:	b.ne	3768c <PyInit__decimal@@Base+0x1b44c>  // b.any
   37678:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3767c:	ldr	x0, [sp, #216]
   37680:	ldr	x1, [x1, #1912]
   37684:	blr	x1
   37688:	ldrb	w0, [sp, #176]
   3768c:	tbnz	w0, #4, 376a0 <PyInit__decimal@@Base+0x1b460>
   37690:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37694:	mov	x0, x22
   37698:	ldr	x1, [x1, #1912]
   3769c:	blr	x1
   376a0:	ldr	w0, [sp, #348]
   376a4:	mov	w3, #0x3be                 	// #958
   376a8:	ldr	w2, [x19]
   376ac:	mov	w1, #0x1040                	// #4160
   376b0:	and	w0, w0, w3
   376b4:	orr	w0, w0, w2
   376b8:	orr	w0, w0, w1
   376bc:	ldp	x27, x28, [sp, #80]
   376c0:	str	w0, [x19]
   376c4:	ldp	x19, x20, [sp, #16]
   376c8:	b	37304 <PyInit__decimal@@Base+0x1b0c4>
   376cc:	ldr	x4, [x23]
   376d0:	mov	x2, #0x0                   	// #0
   376d4:	ldr	x3, [x23, #16]
   376d8:	mov	w1, #0x0                   	// #0
   376dc:	add	x3, x3, #0x1
   376e0:	sub	x3, x3, x4
   376e4:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   376e8:	ldr	w0, [x19]
   376ec:	mov	w1, #0x7041                	// #28737
   376f0:	ldp	x29, x30, [sp]
   376f4:	orr	w0, w0, w1
   376f8:	str	w0, [x19]
   376fc:	ldp	x19, x20, [sp, #16]
   37700:	ldp	x21, x22, [sp, #32]
   37704:	ldp	x23, x24, [sp, #48]
   37708:	ldp	x25, x26, [sp, #64]
   3770c:	add	sp, sp, #0x570
   37710:	ret
   37714:	mov	x2, x25
   37718:	mov	x3, #0x0                   	// #0
   3771c:	mov	w1, #0x0                   	// #0
   37720:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   37724:	ldp	x29, x30, [sp]
   37728:	ldp	x21, x22, [sp, #32]
   3772c:	ldp	x23, x24, [sp, #48]
   37730:	ldp	x25, x26, [sp, #64]
   37734:	add	sp, sp, #0x570
   37738:	ret
   3773c:	mov	x2, x19
   37740:	mov	x0, x28
   37744:	mov	w1, #0x100                 	// #256
   37748:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3774c:	ldp	x29, x30, [sp]
   37750:	ldp	x19, x20, [sp, #16]
   37754:	ldp	x21, x22, [sp, #32]
   37758:	ldp	x23, x24, [sp, #48]
   3775c:	ldp	x25, x26, [sp, #64]
   37760:	ldp	x27, x28, [sp, #80]
   37764:	add	sp, sp, #0x570
   37768:	ret
   3776c:	mov	x0, x28
   37770:	mov	w1, #0x0                   	// #0
   37774:	mov	x2, x25
   37778:	mov	x3, #0x0                   	// #0
   3777c:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   37780:	ldr	w0, [x19]
   37784:	mov	w1, #0x1040                	// #4160
   37788:	ldp	x27, x28, [sp, #80]
   3778c:	orr	w0, w0, w1
   37790:	str	w0, [x19]
   37794:	ldp	x19, x20, [sp, #16]
   37798:	b	37304 <PyInit__decimal@@Base+0x1b0c4>
   3779c:	ldr	x2, [x3, #32]
   377a0:	cmp	x0, x2
   377a4:	b.cs	37894 <PyInit__decimal@@Base+0x1b654>  // b.hs, b.nlast
   377a8:	ldr	x2, [x3, #16]
   377ac:	cmp	x0, x2
   377b0:	b.cs	378d4 <PyInit__decimal@@Base+0x1b694>  // b.hs, b.nlast
   377b4:	ldr	x2, [x3, #8]
   377b8:	cmp	x0, x2
   377bc:	cset	x2, cs  // cs = hs, nlast
   377c0:	b	37440 <PyInit__decimal@@Base+0x1b200>
   377c4:	ldr	w2, [sp, #360]
   377c8:	mov	x0, x28
   377cc:	ldr	x1, [sp, #320]
   377d0:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   377d4:	nop
   377d8:	ldrb	w0, [x28]
   377dc:	tst	w0, #0xe
   377e0:	b.ne	37620 <PyInit__decimal@@Base+0x1b3e0>  // b.any
   377e4:	ldr	x1, [x28, #24]
   377e8:	ldr	x2, [x28, #40]
   377ec:	add	x1, x2, x1, lsl #3
   377f0:	ldur	x1, [x1, #-8]
   377f4:	cbnz	x1, 37800 <PyInit__decimal@@Base+0x1b5c0>
   377f8:	ldr	w1, [sp, #272]
   377fc:	tbnz	w1, #0, 37624 <PyInit__decimal@@Base+0x1b3e4>
   37800:	lsr	x21, x21, #1
   37804:	cbnz	x21, 375c0 <PyInit__decimal@@Base+0x1b380>
   37808:	b	37620 <PyInit__decimal@@Base+0x1b3e0>
   3780c:	mov	x2, x24
   37810:	mov	x1, x20
   37814:	mov	x0, x28
   37818:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   3781c:	cbz	x26, 377d8 <PyInit__decimal@@Base+0x1b598>
   37820:	b	375f4 <PyInit__decimal@@Base+0x1b3b4>
   37824:	ldr	w2, [sp, #360]
   37828:	mov	x0, x28
   3782c:	ldr	x1, [sp, #320]
   37830:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   37834:	cbz	x26, 377d8 <PyInit__decimal@@Base+0x1b598>
   37838:	b	375f4 <PyInit__decimal@@Base+0x1b3b4>
   3783c:	mov	x2, x24
   37840:	mov	x1, x20
   37844:	mov	x0, x28
   37848:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   3784c:	b	377d8 <PyInit__decimal@@Base+0x1b598>
   37850:	mov	x0, x28
   37854:	mov	x3, #0x0                   	// #0
   37858:	mov	x2, #0x1                   	// #1
   3785c:	mov	w1, #0x0                   	// #0
   37860:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   37864:	b	37638 <PyInit__decimal@@Base+0x1b3f8>
   37868:	ldr	x2, [x3, #144]
   3786c:	cmp	x0, x2
   37870:	b.cs	378e8 <PyInit__decimal@@Base+0x1b6a8>  // b.hs, b.nlast
   37874:	ldr	x2, [x3, #128]
   37878:	cmp	x0, x2
   3787c:	b.cs	37924 <PyInit__decimal@@Base+0x1b6e4>  // b.hs, b.nlast
   37880:	ldr	x2, [x3, #120]
   37884:	cmp	x0, x2
   37888:	cset	x2, cs  // cs = hs, nlast
   3788c:	add	x2, x2, #0xe
   37890:	b	37440 <PyInit__decimal@@Base+0x1b200>
   37894:	ldr	x2, [x3, #48]
   37898:	cmp	x0, x2
   3789c:	b.cc	37910 <PyInit__decimal@@Base+0x1b6d0>  // b.lo, b.ul, b.last
   378a0:	ldr	x4, [x3, #64]
   378a4:	mov	x2, #0x8                   	// #8
   378a8:	cmp	x0, x4
   378ac:	b.cs	37440 <PyInit__decimal@@Base+0x1b200>  // b.hs, b.nlast
   378b0:	ldr	x2, [x3, #56]
   378b4:	cmp	x0, x2
   378b8:	cset	x2, cs  // cs = hs, nlast
   378bc:	add	x2, x2, #0x6
   378c0:	b	37440 <PyInit__decimal@@Base+0x1b200>
   378c4:	mov	x2, x25
   378c8:	mov	w1, #0x10                  	// #16
   378cc:	mov	w3, #0x0                   	// #0
   378d0:	b	37550 <PyInit__decimal@@Base+0x1b310>
   378d4:	ldr	x2, [x3, #24]
   378d8:	cmp	x0, x2
   378dc:	cset	x2, cs  // cs = hs, nlast
   378e0:	add	x2, x2, #0x2
   378e4:	b	37440 <PyInit__decimal@@Base+0x1b200>
   378e8:	ldr	x2, [x3, #152]
   378ec:	cmp	x0, x2
   378f0:	cset	x2, cs  // cs = hs, nlast
   378f4:	add	x2, x2, #0x12
   378f8:	b	37440 <PyInit__decimal@@Base+0x1b200>
   378fc:	ldr	x2, [x3, #80]
   37900:	cmp	x0, x2
   37904:	cset	x2, cs  // cs = hs, nlast
   37908:	add	x2, x2, #0x9
   3790c:	b	37440 <PyInit__decimal@@Base+0x1b200>
   37910:	ldr	x2, [x3, #40]
   37914:	cmp	x0, x2
   37918:	cset	x2, cs  // cs = hs, nlast
   3791c:	add	x2, x2, #0x4
   37920:	b	37440 <PyInit__decimal@@Base+0x1b200>
   37924:	ldr	x2, [x3, #136]
   37928:	cmp	x0, x2
   3792c:	cset	x2, cs  // cs = hs, nlast
   37930:	add	x2, x2, #0x10
   37934:	b	37440 <PyInit__decimal@@Base+0x1b200>
   37938:	ldrb	w0, [x28]
   3793c:	b	37620 <PyInit__decimal@@Base+0x1b3e0>
   37940:	sub	sp, sp, #0x980
   37944:	stp	x29, x30, [sp]
   37948:	mov	x29, sp
   3794c:	stp	x21, x22, [sp, #32]
   37950:	mov	x22, x1
   37954:	stp	x27, x28, [sp, #80]
   37958:	mov	x28, x0
   3795c:	ldrb	w4, [x1]
   37960:	tst	w4, #0xe
   37964:	b.ne	37c80 <PyInit__decimal@@Base+0x1ba40>  // b.any
   37968:	stp	x23, x24, [sp, #48]
   3796c:	mov	x23, x2
   37970:	ldr	x2, [x1, #24]
   37974:	ldr	x4, [x1, #40]
   37978:	add	x2, x4, x2, lsl #3
   3797c:	ldur	x2, [x2, #-8]
   37980:	cbz	x2, 37d6c <PyInit__decimal@@Base+0x1bb2c>
   37984:	ldr	w2, [x23, #44]
   37988:	mov	w4, #0x6                   	// #6
   3798c:	ldp	x6, x7, [x23, #32]
   37990:	stp	x6, x7, [sp, #368]
   37994:	ldp	x8, x9, [x23]
   37998:	stp	x19, x20, [sp, #16]
   3799c:	mov	x19, x3
   379a0:	ldp	x6, x7, [x23, #16]
   379a4:	stp	x8, x9, [sp, #336]
   379a8:	add	x20, sp, #0x150
   379ac:	stp	x6, x7, [sp, #352]
   379b0:	str	w4, [sp, #372]
   379b4:	cbz	w2, 37cf4 <PyInit__decimal@@Base+0x1bab4>
   379b8:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   379bc:	mov	w0, #0x30                  	// #48
   379c0:	strb	w0, [sp, #144]
   379c4:	add	x6, sp, #0x180
   379c8:	ldr	q0, [x2, #1760]
   379cc:	strb	w0, [sp, #192]
   379d0:	strb	w0, [sp, #240]
   379d4:	add	x4, sp, #0x380
   379d8:	strb	w0, [sp, #288]
   379dc:	add	x0, sp, #0x200
   379e0:	movi	v1.4s, #0x0
   379e4:	add	x3, sp, #0x580
   379e8:	add	x2, sp, #0x780
   379ec:	str	x6, [sp, #184]
   379f0:	stur	q0, [x0, #-248]
   379f4:	add	x0, sp, #0x220
   379f8:	cmp	x1, x28
   379fc:	str	x4, [sp, #232]
   37a00:	str	x3, [sp, #280]
   37a04:	str	x2, [sp, #328]
   37a08:	stur	q1, [x0, #-248]
   37a0c:	stur	q0, [x0, #-232]
   37a10:	stur	q1, [sp, #152]
   37a14:	stur	q0, [sp, #168]
   37a18:	stur	q1, [sp, #200]
   37a1c:	stur	q0, [sp, #216]
   37a20:	stur	q1, [sp, #248]
   37a24:	b.eq	37fb0 <PyInit__decimal@@Base+0x1bd70>  // b.none
   37a28:	stp	x25, x26, [sp, #64]
   37a2c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   37a30:	add	x0, x0, #0x180
   37a34:	add	x24, sp, #0xf0
   37a38:	ldr	x1, [x23]
   37a3c:	mov	x21, x0
   37a40:	ldr	x0, [x0, #72]
   37a44:	add	x1, x1, #0x3
   37a48:	add	x26, sp, #0x90
   37a4c:	add	x27, sp, #0xc0
   37a50:	add	x25, x20, #0x1c
   37a54:	mov	x4, x1
   37a58:	stp	x1, x0, [sp, #104]
   37a5c:	add	x0, sp, #0x8c
   37a60:	str	x0, [sp, #120]
   37a64:	str	wzr, [sp, #376]
   37a68:	b	37b34 <PyInit__decimal@@Base+0x1b8f4>
   37a6c:	ldr	x1, [x21, #32]
   37a70:	cmp	x0, x1
   37a74:	b.cs	37bfc <PyInit__decimal@@Base+0x1b9bc>  // b.hs, b.nlast
   37a78:	ldr	x1, [x21, #16]
   37a7c:	cmp	x0, x1
   37a80:	b.cs	37c58 <PyInit__decimal@@Base+0x1ba18>  // b.hs, b.nlast
   37a84:	ldr	x1, [x21, #8]
   37a88:	cmp	x0, x1
   37a8c:	cset	x7, cs  // cs = hs, nlast
   37a90:	add	x7, x7, #0x1
   37a94:	nop
   37a98:	ldr	x8, [x23]
   37a9c:	mov	x4, x25
   37aa0:	mov	x3, x20
   37aa4:	mov	x2, x24
   37aa8:	mov	x1, x28
   37aac:	mov	x0, x26
   37ab0:	str	x7, [sp, #256]
   37ab4:	str	x8, [sp, #336]
   37ab8:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   37abc:	mov	x0, x27
   37ac0:	mov	x4, x25
   37ac4:	mov	x3, x20
   37ac8:	mov	x2, x24
   37acc:	mov	x1, x28
   37ad0:	bl	33448 <PyInit__decimal@@Base+0x17208>
   37ad4:	ldrb	w0, [x28]
   37ad8:	tst	w0, #0xe
   37adc:	b.ne	37f00 <PyInit__decimal@@Base+0x1bcc0>  // b.any
   37ae0:	ldr	x0, [x28, #24]
   37ae4:	ldr	x1, [x28, #40]
   37ae8:	add	x2, x1, x0, lsl #3
   37aec:	ldur	x2, [x2, #-8]
   37af0:	cbz	x2, 37f4c <PyInit__decimal@@Base+0x1bd0c>
   37af4:	ldrb	w0, [sp, #144]
   37af8:	ldrb	w1, [sp, #192]
   37afc:	orr	w0, w0, w1
   37b00:	tst	w0, #0xe
   37b04:	and	w0, w0, #0xff
   37b08:	b.eq	37b14 <PyInit__decimal@@Base+0x1b8d4>  // b.none
   37b0c:	tst	w0, #0xc
   37b10:	b.ne	37bec <PyInit__decimal@@Base+0x1b9ac>  // b.any
   37b14:	mov	x1, x27
   37b18:	mov	x0, x26
   37b1c:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   37b20:	cbz	w0, 37d94 <PyInit__decimal@@Base+0x1bb54>
   37b24:	ldr	x0, [sp, #104]
   37b28:	add	x0, x0, #0x13
   37b2c:	str	x0, [sp, #104]
   37b30:	mov	x4, x0
   37b34:	ldr	x3, [sp, #120]
   37b38:	mov	x2, x20
   37b3c:	mov	x1, x22
   37b40:	mov	x0, x28
   37b44:	str	wzr, [sp, #140]
   37b48:	str	x4, [sp, #336]
   37b4c:	bl	37228 <PyInit__decimal@@Base+0x1afe8>
   37b50:	ldp	x1, x0, [x28, #8]
   37b54:	ldr	x2, [sp, #336]
   37b58:	ldr	w7, [sp, #140]
   37b5c:	ldrb	w3, [sp, #240]
   37b60:	add	x0, x1, x0
   37b64:	sub	x0, x0, x2
   37b68:	ldr	w2, [x19]
   37b6c:	tst	x7, #0x4000
   37b70:	and	w3, w3, #0xfffffff0
   37b74:	csel	x1, x0, x1, eq  // eq = none
   37b78:	orr	w0, w2, w7
   37b7c:	str	w0, [x19]
   37b80:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   37b84:	ldr	x4, [sp, #280]
   37b88:	strb	w3, [sp, #240]
   37b8c:	ldr	q0, [x0, #2176]
   37b90:	str	x1, [sp, #248]
   37b94:	mov	x0, #0x1                   	// #1
   37b98:	ldr	x1, [sp, #112]
   37b9c:	str	q0, [x4]
   37ba0:	str	x0, [sp, #264]
   37ba4:	ldr	x0, [x4]
   37ba8:	cmp	x0, x1
   37bac:	b.cc	37a6c <PyInit__decimal@@Base+0x1b82c>  // b.lo, b.ul, b.last
   37bb0:	ldr	x1, [x21, #112]
   37bb4:	cmp	x0, x1
   37bb8:	b.cs	37c2c <PyInit__decimal@@Base+0x1b9ec>  // b.hs, b.nlast
   37bbc:	ldr	x1, [x21, #88]
   37bc0:	cmp	x0, x1
   37bc4:	b.cc	37cb8 <PyInit__decimal@@Base+0x1ba78>  // b.lo, b.ul, b.last
   37bc8:	ldr	x1, [x21, #104]
   37bcc:	mov	x7, #0xe                   	// #14
   37bd0:	cmp	x0, x1
   37bd4:	b.cs	37a98 <PyInit__decimal@@Base+0x1b858>  // b.hs, b.nlast
   37bd8:	ldr	x1, [x21, #96]
   37bdc:	cmp	x0, x1
   37be0:	cset	x7, cs  // cs = hs, nlast
   37be4:	add	x7, x7, #0xc
   37be8:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37bec:	ldr	w0, [x19]
   37bf0:	orr	w0, w0, #0x100
   37bf4:	str	w0, [x19]
   37bf8:	b	37b24 <PyInit__decimal@@Base+0x1b8e4>
   37bfc:	ldr	x1, [x21, #48]
   37c00:	cmp	x0, x1
   37c04:	b.cc	37ccc <PyInit__decimal@@Base+0x1ba8c>  // b.lo, b.ul, b.last
   37c08:	ldr	x1, [x21, #64]
   37c0c:	mov	x7, #0x9                   	// #9
   37c10:	cmp	x0, x1
   37c14:	b.cs	37a98 <PyInit__decimal@@Base+0x1b858>  // b.hs, b.nlast
   37c18:	ldr	x1, [x21, #56]
   37c1c:	cmp	x0, x1
   37c20:	cset	x7, cs  // cs = hs, nlast
   37c24:	add	x7, x7, #0x7
   37c28:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37c2c:	ldr	x1, [x21, #144]
   37c30:	cmp	x0, x1
   37c34:	b.cs	37c6c <PyInit__decimal@@Base+0x1ba2c>  // b.hs, b.nlast
   37c38:	ldr	x1, [x21, #128]
   37c3c:	cmp	x0, x1
   37c40:	b.cs	37ce0 <PyInit__decimal@@Base+0x1baa0>  // b.hs, b.nlast
   37c44:	ldr	x1, [x21, #120]
   37c48:	cmp	x0, x1
   37c4c:	cset	x7, cs  // cs = hs, nlast
   37c50:	add	x7, x7, #0xf
   37c54:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37c58:	ldr	x1, [x21, #24]
   37c5c:	cmp	x0, x1
   37c60:	cset	x7, cs  // cs = hs, nlast
   37c64:	add	x7, x7, #0x3
   37c68:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37c6c:	ldr	x1, [x21, #152]
   37c70:	cmp	x0, x1
   37c74:	cset	x7, cs  // cs = hs, nlast
   37c78:	add	x7, x7, #0x13
   37c7c:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37c80:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   37c84:	cbnz	w0, 37ca4 <PyInit__decimal@@Base+0x1ba64>
   37c88:	ldrb	w0, [x22]
   37c8c:	tbz	w0, #0, 37f9c <PyInit__decimal@@Base+0x1bd5c>
   37c90:	mov	x0, x28
   37c94:	mov	x3, #0x0                   	// #0
   37c98:	mov	x2, #0x0                   	// #0
   37c9c:	mov	w1, #0x0                   	// #0
   37ca0:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   37ca4:	ldp	x29, x30, [sp]
   37ca8:	ldp	x21, x22, [sp, #32]
   37cac:	ldp	x27, x28, [sp, #80]
   37cb0:	add	sp, sp, #0x980
   37cb4:	ret
   37cb8:	ldr	x1, [x21, #80]
   37cbc:	cmp	x0, x1
   37cc0:	cset	x7, cs  // cs = hs, nlast
   37cc4:	add	x7, x7, #0xa
   37cc8:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37ccc:	ldr	x1, [x21, #40]
   37cd0:	cmp	x0, x1
   37cd4:	cset	x7, cs  // cs = hs, nlast
   37cd8:	add	x7, x7, #0x5
   37cdc:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37ce0:	ldr	x1, [x21, #136]
   37ce4:	cmp	x0, x1
   37ce8:	cset	x7, cs  // cs = hs, nlast
   37cec:	add	x7, x7, #0x11
   37cf0:	b	37a98 <PyInit__decimal@@Base+0x1b858>
   37cf4:	mov	x2, x20
   37cf8:	bl	37228 <PyInit__decimal@@Base+0x1afe8>
   37cfc:	ldrb	w0, [x28]
   37d00:	tst	w0, #0xe
   37d04:	b.ne	37f60 <PyInit__decimal@@Base+0x1bd20>  // b.any
   37d08:	ldp	x21, x0, [x28, #16]
   37d0c:	ldr	x1, [x28, #40]
   37d10:	ldr	x22, [sp, #336]
   37d14:	add	x0, x1, x0, lsl #3
   37d18:	ldur	x0, [x0, #-8]
   37d1c:	cbz	x0, 37d40 <PyInit__decimal@@Base+0x1bb00>
   37d20:	cmp	x21, x22
   37d24:	b.lt	3804c <PyInit__decimal@@Base+0x1be0c>  // b.tstop
   37d28:	ldr	x2, [x28, #8]
   37d2c:	ldr	x0, [sp, #352]
   37d30:	add	x1, x2, x21
   37d34:	sub	x1, x1, #0x1
   37d38:	cmp	x1, x0
   37d3c:	b.lt	37f7c <PyInit__decimal@@Base+0x1bd3c>  // b.tstop
   37d40:	mov	x2, x19
   37d44:	mov	x1, x20
   37d48:	mov	x0, x28
   37d4c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   37d50:	ldp	x29, x30, [sp]
   37d54:	ldp	x19, x20, [sp, #16]
   37d58:	ldp	x21, x22, [sp, #32]
   37d5c:	ldp	x23, x24, [sp, #48]
   37d60:	ldp	x27, x28, [sp, #80]
   37d64:	add	sp, sp, #0x980
   37d68:	ret
   37d6c:	mov	x3, #0x0                   	// #0
   37d70:	mov	x2, #0x1                   	// #1
   37d74:	mov	w1, #0x0                   	// #0
   37d78:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   37d7c:	ldp	x29, x30, [sp]
   37d80:	ldp	x21, x22, [sp, #32]
   37d84:	ldp	x23, x24, [sp, #48]
   37d88:	ldp	x27, x28, [sp, #80]
   37d8c:	add	sp, sp, #0x980
   37d90:	ret
   37d94:	ldr	w0, [x23, #40]
   37d98:	str	w0, [sp, #376]
   37d9c:	ldrb	w0, [x28]
   37da0:	ldr	x21, [x28, #16]
   37da4:	tst	w0, #0xe
   37da8:	ldr	x22, [sp, #336]
   37dac:	b.ne	37f10 <PyInit__decimal@@Base+0x1bcd0>  // b.any
   37db0:	ldr	x0, [x28, #24]
   37db4:	ldr	x1, [x28, #40]
   37db8:	add	x0, x1, x0, lsl #3
   37dbc:	ldur	x0, [x0, #-8]
   37dc0:	cbz	x0, 37e00 <PyInit__decimal@@Base+0x1bbc0>
   37dc4:	cmp	x22, x21
   37dc8:	b.gt	37fec <PyInit__decimal@@Base+0x1bdac>
   37dcc:	ldr	x2, [x28, #8]
   37dd0:	ldr	x1, [sp, #352]
   37dd4:	add	x0, x2, x21
   37dd8:	sub	x0, x0, #0x1
   37ddc:	cmp	x0, x1
   37de0:	b.ge	37e00 <PyInit__decimal@@Base+0x1bbc0>  // b.tcont
   37de4:	add	x1, x1, #0x1
   37de8:	sub	x1, x1, x22
   37dec:	cmp	x1, x2
   37df0:	b.le	37e00 <PyInit__decimal@@Base+0x1bbc0>
   37df4:	ldr	w0, [x19]
   37df8:	orr	w0, w0, #0x4000
   37dfc:	str	w0, [x19]
   37e00:	mov	x0, x28
   37e04:	mov	x2, x19
   37e08:	mov	x1, x20
   37e0c:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   37e10:	ldrb	w0, [sp, #144]
   37e14:	tst	w0, #0xe0
   37e18:	b.ne	37e30 <PyInit__decimal@@Base+0x1bbf0>  // b.any
   37e1c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37e20:	ldr	x0, [sp, #184]
   37e24:	ldr	x1, [x1, #1912]
   37e28:	blr	x1
   37e2c:	ldrb	w0, [sp, #144]
   37e30:	tbnz	w0, #4, 37e44 <PyInit__decimal@@Base+0x1bc04>
   37e34:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37e38:	mov	x0, x26
   37e3c:	ldr	x1, [x1, #1912]
   37e40:	blr	x1
   37e44:	ldrb	w0, [sp, #192]
   37e48:	tst	w0, #0xe0
   37e4c:	b.ne	37e64 <PyInit__decimal@@Base+0x1bc24>  // b.any
   37e50:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37e54:	ldr	x0, [sp, #232]
   37e58:	ldr	x1, [x1, #1912]
   37e5c:	blr	x1
   37e60:	ldrb	w0, [sp, #192]
   37e64:	tbnz	w0, #4, 37e78 <PyInit__decimal@@Base+0x1bc38>
   37e68:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37e6c:	mov	x0, x27
   37e70:	ldr	x1, [x1, #1912]
   37e74:	blr	x1
   37e78:	ldrb	w0, [sp, #240]
   37e7c:	tst	w0, #0xe0
   37e80:	b.ne	37e98 <PyInit__decimal@@Base+0x1bc58>  // b.any
   37e84:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37e88:	ldr	x0, [sp, #280]
   37e8c:	ldr	x1, [x1, #1912]
   37e90:	blr	x1
   37e94:	ldrb	w0, [sp, #240]
   37e98:	tbnz	w0, #4, 37eac <PyInit__decimal@@Base+0x1bc6c>
   37e9c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37ea0:	mov	x0, x24
   37ea4:	ldr	x1, [x1, #1912]
   37ea8:	blr	x1
   37eac:	ldrb	w0, [sp, #288]
   37eb0:	tst	w0, #0xe0
   37eb4:	b.ne	37ecc <PyInit__decimal@@Base+0x1bc8c>  // b.any
   37eb8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37ebc:	ldr	x0, [sp, #328]
   37ec0:	ldr	x1, [x1, #1912]
   37ec4:	blr	x1
   37ec8:	ldrb	w0, [sp, #288]
   37ecc:	tbnz	w0, #4, 37f2c <PyInit__decimal@@Base+0x1bcec>
   37ed0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   37ed4:	add	x0, sp, #0x120
   37ed8:	ldr	x1, [x1, #1912]
   37edc:	blr	x1
   37ee0:	ldp	x29, x30, [sp]
   37ee4:	ldp	x19, x20, [sp, #16]
   37ee8:	ldp	x21, x22, [sp, #32]
   37eec:	ldp	x23, x24, [sp, #48]
   37ef0:	ldp	x25, x26, [sp, #64]
   37ef4:	ldp	x27, x28, [sp, #80]
   37ef8:	add	sp, sp, #0x980
   37efc:	ret
   37f00:	ldr	x21, [x28, #16]
   37f04:	ldr	x22, [sp, #336]
   37f08:	ldr	w0, [x23, #40]
   37f0c:	str	w0, [sp, #376]
   37f10:	ldr	x2, [x28, #8]
   37f14:	ldr	x1, [sp, #352]
   37f18:	add	x21, x2, x21
   37f1c:	sub	x21, x21, #0x1
   37f20:	cmp	x21, x1
   37f24:	b.lt	37de4 <PyInit__decimal@@Base+0x1bba4>  // b.tstop
   37f28:	b	37e00 <PyInit__decimal@@Base+0x1bbc0>
   37f2c:	ldp	x29, x30, [sp]
   37f30:	ldp	x19, x20, [sp, #16]
   37f34:	ldp	x21, x22, [sp, #32]
   37f38:	ldp	x23, x24, [sp, #48]
   37f3c:	ldp	x25, x26, [sp, #64]
   37f40:	ldp	x27, x28, [sp, #80]
   37f44:	add	sp, sp, #0x980
   37f48:	ret
   37f4c:	ldr	w2, [x23, #40]
   37f50:	str	w2, [sp, #376]
   37f54:	ldr	x21, [x28, #16]
   37f58:	ldr	x22, [sp, #336]
   37f5c:	b	37db8 <PyInit__decimal@@Base+0x1bb78>
   37f60:	ldp	x2, x1, [x28, #8]
   37f64:	ldr	x0, [sp, #352]
   37f68:	add	x1, x2, x1
   37f6c:	sub	x1, x1, #0x1
   37f70:	cmp	x1, x0
   37f74:	b.ge	37d40 <PyInit__decimal@@Base+0x1bb00>  // b.tcont
   37f78:	ldr	x22, [sp, #336]
   37f7c:	add	x0, x0, #0x1
   37f80:	sub	x0, x0, x22
   37f84:	cmp	x0, x2
   37f88:	b.le	37d40 <PyInit__decimal@@Base+0x1bb00>
   37f8c:	ldr	w0, [x19]
   37f90:	orr	w0, w0, #0x4000
   37f94:	str	w0, [x19]
   37f98:	b	37d40 <PyInit__decimal@@Base+0x1bb00>
   37f9c:	mov	x0, x28
   37fa0:	mov	w2, #0x2                   	// #2
   37fa4:	mov	w1, #0x0                   	// #0
   37fa8:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   37fac:	b	37ca4 <PyInit__decimal@@Base+0x1ba64>
   37fb0:	add	x21, sp, #0x120
   37fb4:	mov	x2, x19
   37fb8:	mov	x0, x21
   37fbc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   37fc0:	cbz	w0, 37fd0 <PyInit__decimal@@Base+0x1bd90>
   37fc4:	mov	x22, x21
   37fc8:	stp	x25, x26, [sp, #64]
   37fcc:	b	37a2c <PyInit__decimal@@Base+0x1b7ec>
   37fd0:	mov	x2, x19
   37fd4:	mov	x0, x22
   37fd8:	mov	w1, #0x200                 	// #512
   37fdc:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   37fe0:	ldp	x19, x20, [sp, #16]
   37fe4:	ldp	x23, x24, [sp, #48]
   37fe8:	b	37ca4 <PyInit__decimal@@Base+0x1ba64>
   37fec:	sub	x2, x22, x21
   37ff0:	mov	x1, x28
   37ff4:	mov	x3, x19
   37ff8:	mov	x0, x28
   37ffc:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   38000:	ldp	x1, x0, [x28, #8]
   38004:	add	x21, x21, x1
   38008:	sub	x0, x0, #0x1
   3800c:	ldr	x1, [sp, #352]
   38010:	sub	x2, x21, x22
   38014:	str	x2, [x28, #8]
   38018:	add	x0, x0, x2
   3801c:	cmp	x1, x0
   38020:	b.le	37e00 <PyInit__decimal@@Base+0x1bbc0>
   38024:	ldrb	w0, [x28]
   38028:	ldr	x22, [sp, #336]
   3802c:	tst	w0, #0xe
   38030:	b.ne	37de4 <PyInit__decimal@@Base+0x1bba4>  // b.any
   38034:	ldr	x0, [x28, #24]
   38038:	ldr	x3, [x28, #40]
   3803c:	add	x0, x3, x0, lsl #3
   38040:	ldur	x0, [x0, #-8]
   38044:	cbnz	x0, 37de4 <PyInit__decimal@@Base+0x1bba4>
   38048:	b	37e00 <PyInit__decimal@@Base+0x1bbc0>
   3804c:	sub	x2, x22, x21
   38050:	mov	x1, x28
   38054:	mov	x3, x19
   38058:	mov	x0, x28
   3805c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   38060:	ldp	x2, x1, [x28, #8]
   38064:	ldr	x0, [sp, #352]
   38068:	add	x2, x21, x2
   3806c:	sub	x1, x1, #0x1
   38070:	sub	x2, x2, x22
   38074:	str	x2, [x28, #8]
   38078:	add	x1, x1, x2
   3807c:	cmp	x0, x1
   38080:	b.le	37d40 <PyInit__decimal@@Base+0x1bb00>
   38084:	ldrb	w1, [x28]
   38088:	ldr	x22, [sp, #336]
   3808c:	tst	w1, #0xe
   38090:	b.ne	37f7c <PyInit__decimal@@Base+0x1bd3c>  // b.any
   38094:	ldr	x1, [x28, #24]
   38098:	ldr	x3, [x28, #40]
   3809c:	add	x1, x3, x1, lsl #3
   380a0:	ldur	x1, [x1, #-8]
   380a4:	cbnz	x1, 37f7c <PyInit__decimal@@Base+0x1bd3c>
   380a8:	b	37d40 <PyInit__decimal@@Base+0x1bb00>
   380ac:	nop
   380b0:	sub	sp, sp, #0x540
   380b4:	mov	x3, #0x4c0                 	// #1216
   380b8:	add	x5, sp, #0x140
   380bc:	add	x4, sp, #0x78
   380c0:	mov	w7, #0x30                  	// #48
   380c4:	mov	x8, #0xa                   	// #10
   380c8:	stp	x29, x30, [sp]
   380cc:	mov	x29, sp
   380d0:	mov	w6, #0xffffff90            	// #-112
   380d4:	stp	x23, x24, [sp, #48]
   380d8:	mov	x23, x1
   380dc:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   380e0:	subs	x3, x3, x23
   380e4:	stp	x21, x22, [sp, #32]
   380e8:	mov	x21, x2
   380ec:	ldr	q2, [x1, #1760]
   380f0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   380f4:	stp	x25, x26, [sp, #64]
   380f8:	adrp	x25, 62000 <PyInit__decimal@@Base+0x45dc0>
   380fc:	csel	x2, x3, xzr, pl  // pl = nfrst
   38100:	ldr	q1, [x1, #2192]
   38104:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   38108:	mov	x3, x21
   3810c:	stp	x19, x20, [sp, #16]
   38110:	mov	x19, x0
   38114:	ldr	q0, [x1, #2176]
   38118:	add	x1, x25, #0xc58
   3811c:	add	x1, x1, #0x90
   38120:	str	x8, [sp, #120]
   38124:	strb	w7, [sp, #128]
   38128:	stp	xzr, xzr, [sp, #136]
   3812c:	stur	q2, [sp, #152]
   38130:	str	x5, [sp, #168]
   38134:	strb	w6, [sp, #176]
   38138:	stur	q1, [sp, #184]
   3813c:	stur	q0, [sp, #200]
   38140:	str	x4, [sp, #216]
   38144:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   38148:	cmn	x0, #0x1
   3814c:	b.eq	385f0 <PyInit__decimal@@Base+0x1c3b0>  // b.none
   38150:	mov	x20, x0
   38154:	mov	x22, #0x1                   	// #1
   38158:	ldr	x0, [x19, #16]
   3815c:	add	x24, sp, #0x110
   38160:	sub	x0, x22, x0
   38164:	str	x0, [x19, #8]
   38168:	mov	x0, x24
   3816c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   38170:	cmp	x23, #0x4bf
   38174:	b.le	38518 <PyInit__decimal@@Base+0x1c2d8>
   38178:	add	x22, sp, #0xe0
   3817c:	mov	x0, x22
   38180:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   38184:	ldr	x3, [x19, #8]
   38188:	mov	w0, #0x8                   	// #8
   3818c:	str	w0, [sp, #260]
   38190:	add	x0, x23, #0x2
   38194:	neg	x3, x3
   38198:	cmp	x0, x3
   3819c:	b.le	382d0 <PyInit__decimal@@Base+0x1c090>
   381a0:	add	x2, sp, #0x340
   381a4:	mov	w1, #0x0                   	// #0
   381a8:	add	x0, x0, #0x2
   381ac:	mov	w20, w1
   381b0:	add	w1, w1, #0x1
   381b4:	add	x0, x0, x0, lsr #63
   381b8:	add	x26, x2, w20, sxtw #3
   381bc:	asr	x0, x0, #1
   381c0:	str	x0, [x2, w20, sxtw #3]
   381c4:	cmp	x3, x0
   381c8:	b.lt	381a8 <PyInit__decimal@@Base+0x1bf68>  // b.tstop
   381cc:	tbnz	w20, #31, 382d0 <PyInit__decimal@@Base+0x1c090>
   381d0:	stp	x27, x28, [sp, #80]
   381d4:	add	x1, x25, #0xc58
   381d8:	add	x27, sp, #0xb0
   381dc:	ldrb	w0, [x19]
   381e0:	add	x25, sp, #0x80
   381e4:	add	x28, x24, #0x24
   381e8:	str	x1, [sp, #104]
   381ec:	nop
   381f0:	ldr	x4, [x26]
   381f4:	eor	w0, w0, #0x1
   381f8:	strb	w0, [x19]
   381fc:	mov	x3, x21
   38200:	mov	x2, x22
   38204:	mov	x1, x19
   38208:	lsl	x4, x4, #1
   3820c:	mov	x0, x25
   38210:	add	x4, x4, #0x3
   38214:	str	x4, [sp, #224]
   38218:	bl	37228 <PyInit__decimal@@Base+0x1afe8>
   3821c:	ldrb	w0, [x19]
   38220:	mov	x1, x27
   38224:	mov	x4, x21
   38228:	mov	x3, x22
   3822c:	eor	w0, w0, #0x1
   38230:	strb	w0, [x19]
   38234:	mov	x2, x25
   38238:	mov	x0, x25
   3823c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   38240:	ldrb	w1, [sp, #128]
   38244:	tst	w1, #0xe
   38248:	b.eq	383e0 <PyInit__decimal@@Base+0x1c1a0>  // b.none
   3824c:	tst	w1, #0xc
   38250:	b.ne	38324 <PyInit__decimal@@Base+0x1c0e4>  // b.any
   38254:	tbz	w1, #1, 384c0 <PyInit__decimal@@Base+0x1c280>
   38258:	and	w1, w1, #0x1
   3825c:	mov	x0, x25
   38260:	mov	w2, #0x2                   	// #2
   38264:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   38268:	ldrb	w0, [x19]
   3826c:	ldrb	w3, [sp, #128]
   38270:	orr	w1, w0, w3
   38274:	tst	w1, #0xe
   38278:	b.eq	3844c <PyInit__decimal@@Base+0x1c20c>  // b.none
   3827c:	tst	w1, #0xc
   38280:	b.ne	38388 <PyInit__decimal@@Base+0x1c148>  // b.any
   38284:	and	w1, w3, #0x1
   38288:	tbz	w0, #1, 384d4 <PyInit__decimal@@Base+0x1c294>
   3828c:	and	w0, w0, #0x1
   38290:	cmp	w1, w0
   38294:	b.eq	3829c <PyInit__decimal@@Base+0x1c05c>  // b.none
   38298:	tbnz	w3, #1, 386a8 <PyInit__decimal@@Base+0x1c468>
   3829c:	mov	w1, w0
   382a0:	mov	w2, #0x2                   	// #2
   382a4:	mov	x0, x19
   382a8:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   382ac:	nop
   382b0:	ldrb	w0, [x19]
   382b4:	tst	w0, #0xe
   382b8:	b.ne	382cc <PyInit__decimal@@Base+0x1c08c>  // b.any
   382bc:	sub	w20, w20, #0x1
   382c0:	sub	x26, x26, #0x8
   382c4:	cmn	w20, #0x1
   382c8:	b.ne	381f0 <PyInit__decimal@@Base+0x1bfb0>  // b.any
   382cc:	ldp	x27, x28, [sp, #80]
   382d0:	ldrb	w0, [sp, #128]
   382d4:	tst	w0, #0xe0
   382d8:	b.ne	382f0 <PyInit__decimal@@Base+0x1c0b0>  // b.any
   382dc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   382e0:	ldr	x0, [sp, #168]
   382e4:	ldr	x1, [x1, #1912]
   382e8:	blr	x1
   382ec:	ldrb	w0, [sp, #128]
   382f0:	tbz	w0, #4, 383cc <PyInit__decimal@@Base+0x1c18c>
   382f4:	mov	x2, x21
   382f8:	mov	x1, x24
   382fc:	mov	x0, x19
   38300:	str	x23, [sp, #272]
   38304:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   38308:	ldp	x29, x30, [sp]
   3830c:	ldp	x19, x20, [sp, #16]
   38310:	ldp	x21, x22, [sp, #32]
   38314:	ldp	x23, x24, [sp, #48]
   38318:	ldp	x25, x26, [sp, #64]
   3831c:	add	sp, sp, #0x540
   38320:	ret
   38324:	ldr	w2, [sp, #264]
   38328:	mov	x0, x25
   3832c:	ldr	x1, [sp, #224]
   38330:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   38334:	ldrb	w1, [sp, #128]
   38338:	tst	w1, #0xe
   3833c:	b.ne	383f4 <PyInit__decimal@@Base+0x1c1b4>  // b.any
   38340:	ldr	x2, [sp, #104]
   38344:	mov	w3, #0x1                   	// #1
   38348:	mov	x6, x21
   3834c:	mov	x5, x28
   38350:	mov	x4, x24
   38354:	mov	x1, x25
   38358:	mov	x0, x25
   3835c:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   38360:	ldrb	w3, [sp, #128]
   38364:	tst	w3, #0xe
   38368:	b.eq	384f8 <PyInit__decimal@@Base+0x1c2b8>  // b.none
   3836c:	tst	w3, #0xc
   38370:	b.ne	38694 <PyInit__decimal@@Base+0x1c454>  // b.any
   38374:	ldrb	w0, [x19]
   38378:	orr	w1, w0, w3
   3837c:	tst	w1, #0xc
   38380:	b.eq	38284 <PyInit__decimal@@Base+0x1c044>  // b.none
   38384:	nop
   38388:	tbz	w0, #3, 384a8 <PyInit__decimal@@Base+0x1c268>
   3838c:	ldr	w0, [x21]
   38390:	mov	x1, x19
   38394:	orr	w0, w0, #0x100
   38398:	str	w0, [x21]
   3839c:	mov	x2, x21
   383a0:	mov	x0, x19
   383a4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   383a8:	ldrb	w3, [x19]
   383ac:	mov	x0, x19
   383b0:	ldr	w2, [sp, #312]
   383b4:	and	w3, w3, #0xfffffff1
   383b8:	ldr	x1, [sp, #272]
   383bc:	orr	w3, w3, #0x4
   383c0:	strb	w3, [x19]
   383c4:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   383c8:	b	382b0 <PyInit__decimal@@Base+0x1c070>
   383cc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   383d0:	add	x0, sp, #0x80
   383d4:	ldr	x1, [x1, #1912]
   383d8:	blr	x1
   383dc:	b	382f4 <PyInit__decimal@@Base+0x1c0b4>
   383e0:	mov	x2, x21
   383e4:	mov	x1, x22
   383e8:	mov	x0, x25
   383ec:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   383f0:	b	38334 <PyInit__decimal@@Base+0x1c0f4>
   383f4:	tst	w1, #0xc
   383f8:	b.eq	38254 <PyInit__decimal@@Base+0x1c014>  // b.none
   383fc:	tbnz	w1, #3, 38494 <PyInit__decimal@@Base+0x1c254>
   38400:	ldr	x0, [sp, #104]
   38404:	tst	x1, #0x4
   38408:	csel	x1, x0, x25, eq  // eq = none
   3840c:	mov	x2, x21
   38410:	mov	x0, x25
   38414:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38418:	ldrb	w3, [sp, #128]
   3841c:	mov	x0, x25
   38420:	ldr	w2, [sp, #312]
   38424:	and	w3, w3, #0xfffffff1
   38428:	ldr	x1, [sp, #272]
   3842c:	orr	w3, w3, #0x4
   38430:	strb	w3, [sp, #128]
   38434:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   38438:	ldrb	w0, [x19]
   3843c:	ldrb	w3, [sp, #128]
   38440:	orr	w1, w0, w3
   38444:	tst	w1, #0xe
   38448:	b.ne	3827c <PyInit__decimal@@Base+0x1c03c>  // b.any
   3844c:	mov	x0, x19
   38450:	and	w3, w3, #0x1
   38454:	mov	x6, x21
   38458:	mov	x5, x28
   3845c:	mov	x4, x24
   38460:	mov	x2, x25
   38464:	mov	x1, x19
   38468:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   3846c:	ldrb	w0, [x19]
   38470:	tst	w0, #0xe
   38474:	b.eq	384e4 <PyInit__decimal@@Base+0x1c2a4>  // b.none
   38478:	tst	w0, #0xc
   3847c:	b.eq	382cc <PyInit__decimal@@Base+0x1c08c>  // b.none
   38480:	ldr	w2, [sp, #312]
   38484:	mov	x0, x19
   38488:	ldr	x1, [sp, #272]
   3848c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   38490:	b	382b0 <PyInit__decimal@@Base+0x1c070>
   38494:	ldr	w0, [x21]
   38498:	mov	x1, x25
   3849c:	orr	w0, w0, #0x100
   384a0:	str	w0, [x21]
   384a4:	b	3840c <PyInit__decimal@@Base+0x1c1cc>
   384a8:	tbz	w3, #3, 3850c <PyInit__decimal@@Base+0x1c2cc>
   384ac:	ldr	w0, [x21]
   384b0:	mov	x1, x25
   384b4:	orr	w0, w0, #0x100
   384b8:	str	w0, [x21]
   384bc:	b	3839c <PyInit__decimal@@Base+0x1c15c>
   384c0:	mov	x0, x25
   384c4:	mov	w2, #0x2                   	// #2
   384c8:	mov	w1, #0x1                   	// #1
   384cc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   384d0:	b	38268 <PyInit__decimal@@Base+0x1c028>
   384d4:	mov	x0, x19
   384d8:	mov	w2, #0x2                   	// #2
   384dc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   384e0:	b	382b0 <PyInit__decimal@@Base+0x1c070>
   384e4:	mov	x2, x21
   384e8:	mov	x1, x24
   384ec:	mov	x0, x19
   384f0:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   384f4:	b	382b0 <PyInit__decimal@@Base+0x1c070>
   384f8:	mov	x2, x21
   384fc:	mov	x1, x24
   38500:	mov	x0, x25
   38504:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   38508:	b	38268 <PyInit__decimal@@Base+0x1c028>
   3850c:	tst	x0, #0x4
   38510:	csel	x1, x25, x19, eq  // eq = none
   38514:	b	3839c <PyInit__decimal@@Base+0x1c15c>
   38518:	ldr	w0, [sp, #308]
   3851c:	str	x23, [sp, #272]
   38520:	cmp	w0, #0x4
   38524:	b.eq	386f4 <PyInit__decimal@@Base+0x1c4b4>  // b.none
   38528:	b.gt	38580 <PyInit__decimal@@Base+0x1c340>
   3852c:	cmp	w0, #0x2
   38530:	b.eq	386bc <PyInit__decimal@@Base+0x1c47c>  // b.none
   38534:	cmp	w0, #0x3
   38538:	b.ne	385dc <PyInit__decimal@@Base+0x1c39c>  // b.any
   3853c:	cbz	x20, 38554 <PyInit__decimal@@Base+0x1c314>
   38540:	ldrb	w0, [x19]
   38544:	mvn	w0, w0
   38548:	and	w0, w0, #0x1
   3854c:	sub	w22, w22, w0
   38550:	cbnz	w22, 3861c <PyInit__decimal@@Base+0x1c3dc>
   38554:	ldr	w0, [x21]
   38558:	mov	w1, #0x1040                	// #4160
   3855c:	ldp	x29, x30, [sp]
   38560:	orr	w0, w0, w1
   38564:	str	w0, [x21]
   38568:	ldp	x19, x20, [sp, #16]
   3856c:	ldp	x21, x22, [sp, #32]
   38570:	ldp	x23, x24, [sp, #48]
   38574:	ldp	x25, x26, [sp, #64]
   38578:	add	sp, sp, #0x540
   3857c:	ret
   38580:	cmp	w0, #0x6
   38584:	b.eq	386d4 <PyInit__decimal@@Base+0x1c494>  // b.none
   38588:	cmp	w0, #0x7
   3858c:	b.ne	385c4 <PyInit__decimal@@Base+0x1c384>  // b.any
   38590:	cbz	x20, 38554 <PyInit__decimal@@Base+0x1c314>
   38594:	ldr	x0, [x19, #40]
   38598:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   3859c:	movk	x1, #0xcccd
   385a0:	ldr	x2, [x0]
   385a4:	umulh	x1, x2, x1
   385a8:	lsr	x1, x1, #3
   385ac:	add	x1, x1, x1, lsl #2
   385b0:	sub	x1, x2, x1, lsl #1
   385b4:	cmp	w1, #0x0
   385b8:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   385bc:	b.eq	38620 <PyInit__decimal@@Base+0x1c3e0>  // b.none
   385c0:	b	38554 <PyInit__decimal@@Base+0x1c314>
   385c4:	cmp	x20, #0x5
   385c8:	cset	w22, hi  // hi = pmore
   385cc:	cmp	w0, #0x5
   385d0:	b.ne	38554 <PyInit__decimal@@Base+0x1c314>  // b.any
   385d4:	cbz	w22, 38554 <PyInit__decimal@@Base+0x1c314>
   385d8:	b	3861c <PyInit__decimal@@Base+0x1c3dc>
   385dc:	cmp	x20, #0x0
   385e0:	cset	w22, ne  // ne = any
   385e4:	cbnz	w0, 38554 <PyInit__decimal@@Base+0x1c314>
   385e8:	cbz	w22, 38554 <PyInit__decimal@@Base+0x1c314>
   385ec:	b	3861c <PyInit__decimal@@Base+0x1c3dc>
   385f0:	mov	x2, x21
   385f4:	mov	x0, x19
   385f8:	mov	w1, #0x200                 	// #512
   385fc:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   38600:	ldp	x29, x30, [sp]
   38604:	ldp	x19, x20, [sp, #16]
   38608:	ldp	x21, x22, [sp, #32]
   3860c:	ldp	x23, x24, [sp, #48]
   38610:	ldp	x25, x26, [sp, #64]
   38614:	add	sp, sp, #0x540
   38618:	ret
   3861c:	ldr	x0, [x19, #40]
   38620:	ldr	x1, [x19, #24]
   38624:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   38628:	cbz	x0, 38688 <PyInit__decimal@@Base+0x1c448>
   3862c:	ldp	x2, x3, [x19, #24]
   38630:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   38634:	ldr	x1, [x0, #1880]
   38638:	add	x0, x2, #0x1
   3863c:	cmp	x0, x1
   38640:	csel	x1, x0, x1, ge  // ge = tcont
   38644:	cmp	x1, x3
   38648:	b.eq	38670 <PyInit__decimal@@Base+0x1c430>  // b.none
   3864c:	ldrb	w0, [x19]
   38650:	tbz	w0, #5, 38704 <PyInit__decimal@@Base+0x1c4c4>
   38654:	cmp	x1, x3
   38658:	b.le	38670 <PyInit__decimal@@Base+0x1c430>
   3865c:	mov	x2, x21
   38660:	mov	x0, x19
   38664:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   38668:	cbz	w0, 38554 <PyInit__decimal@@Base+0x1c314>
   3866c:	ldr	x2, [x19, #24]
   38670:	mov	x1, #0x1                   	// #1
   38674:	ldr	x0, [x19, #40]
   38678:	str	x1, [x0, x2, lsl #3]
   3867c:	ldr	x0, [x19, #24]
   38680:	add	x0, x0, x1
   38684:	str	x0, [x19, #24]
   38688:	mov	x0, x19
   3868c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   38690:	b	38554 <PyInit__decimal@@Base+0x1c314>
   38694:	ldr	w2, [sp, #312]
   38698:	mov	x0, x25
   3869c:	ldr	x1, [sp, #272]
   386a0:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   386a4:	b	38268 <PyInit__decimal@@Base+0x1c028>
   386a8:	mov	x2, x21
   386ac:	mov	x0, x19
   386b0:	mov	w1, #0x100                 	// #256
   386b4:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   386b8:	b	382b0 <PyInit__decimal@@Base+0x1c070>
   386bc:	cbz	x20, 38554 <PyInit__decimal@@Base+0x1c314>
   386c0:	ldrb	w0, [x19]
   386c4:	and	w0, w0, #0x1
   386c8:	sub	w22, w22, w0
   386cc:	cbz	w22, 38554 <PyInit__decimal@@Base+0x1c314>
   386d0:	b	3861c <PyInit__decimal@@Base+0x1c3dc>
   386d4:	cmp	x20, #0x5
   386d8:	b.hi	3861c <PyInit__decimal@@Base+0x1c3dc>  // b.pmore
   386dc:	b.ne	38554 <PyInit__decimal@@Base+0x1c314>  // b.any
   386e0:	ldr	x0, [x19, #40]
   386e4:	ldr	x22, [x0]
   386e8:	and	w22, w22, #0x1
   386ec:	cbz	w22, 38554 <PyInit__decimal@@Base+0x1c314>
   386f0:	b	3861c <PyInit__decimal@@Base+0x1c3dc>
   386f4:	cmp	x20, #0x4
   386f8:	cset	w22, hi  // hi = pmore
   386fc:	cbz	w22, 38554 <PyInit__decimal@@Base+0x1c314>
   38700:	b	3861c <PyInit__decimal@@Base+0x1c3dc>
   38704:	mov	x2, x21
   38708:	mov	x0, x19
   3870c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   38710:	b	38668 <PyInit__decimal@@Base+0x1c428>
   38714:	nop
   38718:	stp	x29, x30, [sp, #-64]!
   3871c:	mov	x29, sp
   38720:	stp	x19, x20, [sp, #16]
   38724:	mov	x19, x1
   38728:	mov	x20, x2
   3872c:	stp	x21, x22, [sp, #32]
   38730:	mov	x21, x0
   38734:	mov	x22, x4
   38738:	str	x23, [sp, #48]
   3873c:	mov	x23, x3
   38740:	ldrb	w0, [x1]
   38744:	ldrb	w1, [x2]
   38748:	tbz	w0, #2, 38754 <PyInit__decimal@@Base+0x1c514>
   3874c:	tst	w1, #0xc
   38750:	b.eq	387f0 <PyInit__decimal@@Base+0x1c5b0>  // b.none
   38754:	tbz	w1, #2, 38760 <PyInit__decimal@@Base+0x1c520>
   38758:	tst	w0, #0xc
   3875c:	b.eq	387c0 <PyInit__decimal@@Base+0x1c580>  // b.none
   38760:	mov	x4, x22
   38764:	mov	x3, x23
   38768:	mov	x2, x20
   3876c:	mov	x1, x19
   38770:	mov	x0, x21
   38774:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   38778:	cbz	w0, 38790 <PyInit__decimal@@Base+0x1c550>
   3877c:	ldp	x19, x20, [sp, #16]
   38780:	ldp	x21, x22, [sp, #32]
   38784:	ldr	x23, [sp, #48]
   38788:	ldp	x29, x30, [sp], #64
   3878c:	ret
   38790:	mov	x1, x20
   38794:	mov	x0, x19
   38798:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3879c:	cbnz	w0, 387bc <PyInit__decimal@@Base+0x1c57c>
   387a0:	ldrb	w1, [x19]
   387a4:	ldrb	w0, [x20]
   387a8:	and	w1, w1, #0x1
   387ac:	and	w0, w0, #0x1
   387b0:	cmp	w1, w0
   387b4:	b.eq	38820 <PyInit__decimal@@Base+0x1c5e0>  // b.none
   387b8:	sub	w0, w0, w1
   387bc:	tbnz	w0, #31, 387f0 <PyInit__decimal@@Base+0x1c5b0>
   387c0:	mov	x1, x19
   387c4:	mov	x2, x22
   387c8:	mov	x0, x21
   387cc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   387d0:	mov	x2, x22
   387d4:	mov	x1, x23
   387d8:	mov	x0, x21
   387dc:	ldp	x19, x20, [sp, #16]
   387e0:	ldp	x21, x22, [sp, #32]
   387e4:	ldr	x23, [sp, #48]
   387e8:	ldp	x29, x30, [sp], #64
   387ec:	b	2f360 <PyInit__decimal@@Base+0x13120>
   387f0:	mov	x1, x20
   387f4:	mov	x2, x22
   387f8:	mov	x0, x21
   387fc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38800:	mov	x2, x22
   38804:	mov	x1, x23
   38808:	mov	x0, x21
   3880c:	ldp	x19, x20, [sp, #16]
   38810:	ldp	x21, x22, [sp, #32]
   38814:	ldr	x23, [sp, #48]
   38818:	ldp	x29, x30, [sp], #64
   3881c:	b	2f360 <PyInit__decimal@@Base+0x13120>
   38820:	ldr	x3, [x19, #8]
   38824:	neg	w0, w1
   38828:	ldr	x2, [x20, #8]
   3882c:	lsl	w1, w0, #1
   38830:	mov	w0, #0x1                   	// #1
   38834:	cmp	x3, x2
   38838:	cneg	w0, w0, lt  // lt = tstop
   3883c:	madd	w0, w1, w0, w0
   38840:	tbz	w0, #31, 387c0 <PyInit__decimal@@Base+0x1c580>
   38844:	b	387f0 <PyInit__decimal@@Base+0x1c5b0>
   38848:	stp	x29, x30, [sp, #-64]!
   3884c:	mov	x29, sp
   38850:	stp	x19, x20, [sp, #16]
   38854:	mov	x19, x1
   38858:	mov	x20, x2
   3885c:	stp	x21, x22, [sp, #32]
   38860:	mov	x21, x0
   38864:	mov	x22, x4
   38868:	str	x23, [sp, #48]
   3886c:	mov	x23, x3
   38870:	ldrb	w0, [x1]
   38874:	ldrb	w1, [x2]
   38878:	tbz	w0, #2, 38884 <PyInit__decimal@@Base+0x1c644>
   3887c:	tst	w1, #0xc
   38880:	b.eq	38920 <PyInit__decimal@@Base+0x1c6e0>  // b.none
   38884:	tbz	w1, #2, 38890 <PyInit__decimal@@Base+0x1c650>
   38888:	tst	w0, #0xc
   3888c:	b.eq	388f0 <PyInit__decimal@@Base+0x1c6b0>  // b.none
   38890:	mov	x4, x22
   38894:	mov	x3, x23
   38898:	mov	x2, x20
   3889c:	mov	x1, x19
   388a0:	mov	x0, x21
   388a4:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   388a8:	cbz	w0, 388c0 <PyInit__decimal@@Base+0x1c680>
   388ac:	ldp	x19, x20, [sp, #16]
   388b0:	ldp	x21, x22, [sp, #32]
   388b4:	ldr	x23, [sp, #48]
   388b8:	ldp	x29, x30, [sp], #64
   388bc:	ret
   388c0:	mov	x1, x20
   388c4:	mov	x0, x19
   388c8:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   388cc:	cbnz	w0, 388ec <PyInit__decimal@@Base+0x1c6ac>
   388d0:	ldrb	w1, [x19]
   388d4:	ldrb	w0, [x20]
   388d8:	and	w1, w1, #0x1
   388dc:	and	w0, w0, #0x1
   388e0:	cmp	w1, w0
   388e4:	b.eq	38950 <PyInit__decimal@@Base+0x1c710>  // b.none
   388e8:	sub	w0, w0, w1
   388ec:	tbnz	w0, #31, 38920 <PyInit__decimal@@Base+0x1c6e0>
   388f0:	mov	x1, x19
   388f4:	mov	x2, x22
   388f8:	mov	x0, x21
   388fc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38900:	mov	x2, x22
   38904:	mov	x1, x23
   38908:	mov	x0, x21
   3890c:	ldp	x19, x20, [sp, #16]
   38910:	ldp	x21, x22, [sp, #32]
   38914:	ldr	x23, [sp, #48]
   38918:	ldp	x29, x30, [sp], #64
   3891c:	b	2f360 <PyInit__decimal@@Base+0x13120>
   38920:	mov	x1, x20
   38924:	mov	x2, x22
   38928:	mov	x0, x21
   3892c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38930:	mov	x2, x22
   38934:	mov	x1, x23
   38938:	mov	x0, x21
   3893c:	ldp	x19, x20, [sp, #16]
   38940:	ldp	x21, x22, [sp, #32]
   38944:	ldr	x23, [sp, #48]
   38948:	ldp	x29, x30, [sp], #64
   3894c:	b	2f360 <PyInit__decimal@@Base+0x13120>
   38950:	ldr	x3, [x19, #8]
   38954:	neg	w0, w1
   38958:	ldr	x2, [x20, #8]
   3895c:	lsl	w1, w0, #1
   38960:	mov	w0, #0x1                   	// #1
   38964:	cmp	x3, x2
   38968:	cneg	w0, w0, lt  // lt = tstop
   3896c:	madd	w0, w1, w0, w0
   38970:	tbz	w0, #31, 388f0 <PyInit__decimal@@Base+0x1c6b0>
   38974:	b	38920 <PyInit__decimal@@Base+0x1c6e0>
   38978:	stp	x29, x30, [sp, #-64]!
   3897c:	mov	x29, sp
   38980:	stp	x19, x20, [sp, #16]
   38984:	mov	x20, x1
   38988:	mov	x19, x2
   3898c:	stp	x21, x22, [sp, #32]
   38990:	mov	x21, x0
   38994:	mov	x22, x4
   38998:	str	x23, [sp, #48]
   3899c:	mov	x23, x3
   389a0:	ldrb	w0, [x1]
   389a4:	ldrb	w1, [x2]
   389a8:	tbz	w0, #2, 389b4 <PyInit__decimal@@Base+0x1c774>
   389ac:	tst	w1, #0xc
   389b0:	b.eq	38a20 <PyInit__decimal@@Base+0x1c7e0>  // b.none
   389b4:	tbz	w1, #2, 389c0 <PyInit__decimal@@Base+0x1c780>
   389b8:	tst	w0, #0xc
   389bc:	b.eq	38a5c <PyInit__decimal@@Base+0x1c81c>  // b.none
   389c0:	mov	x4, x22
   389c4:	mov	x3, x23
   389c8:	mov	x2, x19
   389cc:	mov	x1, x20
   389d0:	mov	x0, x21
   389d4:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   389d8:	cbz	w0, 389f0 <PyInit__decimal@@Base+0x1c7b0>
   389dc:	ldp	x19, x20, [sp, #16]
   389e0:	ldp	x21, x22, [sp, #32]
   389e4:	ldr	x23, [sp, #48]
   389e8:	ldp	x29, x30, [sp], #64
   389ec:	ret
   389f0:	mov	x1, x19
   389f4:	mov	x0, x20
   389f8:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   389fc:	cbnz	w0, 38a1c <PyInit__decimal@@Base+0x1c7dc>
   38a00:	ldrb	w1, [x20]
   38a04:	ldrb	w0, [x19]
   38a08:	and	w1, w1, #0x1
   38a0c:	and	w0, w0, #0x1
   38a10:	cmp	w1, w0
   38a14:	b.eq	38aa0 <PyInit__decimal@@Base+0x1c860>  // b.none
   38a18:	sub	w0, w0, w1
   38a1c:	tbnz	w0, #31, 38a5c <PyInit__decimal@@Base+0x1c81c>
   38a20:	mov	x1, x19
   38a24:	mov	x2, x22
   38a28:	mov	x0, x21
   38a2c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38a30:	ldrb	w0, [x21]
   38a34:	tst	w0, #0xe
   38a38:	b.ne	38a78 <PyInit__decimal@@Base+0x1c838>  // b.any
   38a3c:	mov	x2, x22
   38a40:	mov	x1, x23
   38a44:	mov	x0, x21
   38a48:	ldp	x19, x20, [sp, #16]
   38a4c:	ldp	x21, x22, [sp, #32]
   38a50:	ldr	x23, [sp, #48]
   38a54:	ldp	x29, x30, [sp], #64
   38a58:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   38a5c:	mov	x1, x20
   38a60:	mov	x2, x22
   38a64:	mov	x0, x21
   38a68:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38a6c:	ldrb	w0, [x21]
   38a70:	tst	w0, #0xe
   38a74:	b.eq	38a3c <PyInit__decimal@@Base+0x1c7fc>  // b.none
   38a78:	tst	w0, #0xc
   38a7c:	b.eq	389dc <PyInit__decimal@@Base+0x1c79c>  // b.none
   38a80:	ldr	w2, [x23, #40]
   38a84:	mov	x0, x21
   38a88:	ldr	x1, [x23]
   38a8c:	ldp	x19, x20, [sp, #16]
   38a90:	ldp	x21, x22, [sp, #32]
   38a94:	ldr	x23, [sp, #48]
   38a98:	ldp	x29, x30, [sp], #64
   38a9c:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   38aa0:	ldr	x2, [x19, #8]
   38aa4:	neg	w0, w1
   38aa8:	ldr	x3, [x20, #8]
   38aac:	lsl	w1, w0, #1
   38ab0:	mov	w0, #0x1                   	// #1
   38ab4:	cmp	x3, x2
   38ab8:	cneg	w0, w0, lt  // lt = tstop
   38abc:	madd	w0, w1, w0, w0
   38ac0:	tbz	w0, #31, 38a20 <PyInit__decimal@@Base+0x1c7e0>
   38ac4:	b	38a5c <PyInit__decimal@@Base+0x1c81c>
   38ac8:	stp	x29, x30, [sp, #-64]!
   38acc:	mov	x29, sp
   38ad0:	stp	x19, x20, [sp, #16]
   38ad4:	mov	x20, x1
   38ad8:	mov	x19, x2
   38adc:	stp	x21, x22, [sp, #32]
   38ae0:	mov	x21, x0
   38ae4:	mov	x22, x4
   38ae8:	str	x23, [sp, #48]
   38aec:	mov	x23, x3
   38af0:	ldrb	w0, [x1]
   38af4:	ldrb	w1, [x2]
   38af8:	tbz	w0, #2, 38b04 <PyInit__decimal@@Base+0x1c8c4>
   38afc:	tst	w1, #0xc
   38b00:	b.eq	38b70 <PyInit__decimal@@Base+0x1c930>  // b.none
   38b04:	tbz	w1, #2, 38b10 <PyInit__decimal@@Base+0x1c8d0>
   38b08:	tst	w0, #0xc
   38b0c:	b.eq	38bac <PyInit__decimal@@Base+0x1c96c>  // b.none
   38b10:	mov	x4, x22
   38b14:	mov	x3, x23
   38b18:	mov	x2, x19
   38b1c:	mov	x1, x20
   38b20:	mov	x0, x21
   38b24:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   38b28:	cbz	w0, 38b40 <PyInit__decimal@@Base+0x1c900>
   38b2c:	ldp	x19, x20, [sp, #16]
   38b30:	ldp	x21, x22, [sp, #32]
   38b34:	ldr	x23, [sp, #48]
   38b38:	ldp	x29, x30, [sp], #64
   38b3c:	ret
   38b40:	mov	x1, x19
   38b44:	mov	x0, x20
   38b48:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   38b4c:	cbnz	w0, 38b6c <PyInit__decimal@@Base+0x1c92c>
   38b50:	ldrb	w1, [x20]
   38b54:	ldrb	w0, [x19]
   38b58:	and	w1, w1, #0x1
   38b5c:	and	w0, w0, #0x1
   38b60:	cmp	w1, w0
   38b64:	b.eq	38bf0 <PyInit__decimal@@Base+0x1c9b0>  // b.none
   38b68:	sub	w0, w0, w1
   38b6c:	tbnz	w0, #31, 38bac <PyInit__decimal@@Base+0x1c96c>
   38b70:	mov	x1, x19
   38b74:	mov	x2, x22
   38b78:	mov	x0, x21
   38b7c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38b80:	ldrb	w0, [x21]
   38b84:	tst	w0, #0xe
   38b88:	b.ne	38bc8 <PyInit__decimal@@Base+0x1c988>  // b.any
   38b8c:	mov	x2, x22
   38b90:	mov	x1, x23
   38b94:	mov	x0, x21
   38b98:	ldp	x19, x20, [sp, #16]
   38b9c:	ldp	x21, x22, [sp, #32]
   38ba0:	ldr	x23, [sp, #48]
   38ba4:	ldp	x29, x30, [sp], #64
   38ba8:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   38bac:	mov	x1, x20
   38bb0:	mov	x2, x22
   38bb4:	mov	x0, x21
   38bb8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   38bbc:	ldrb	w0, [x21]
   38bc0:	tst	w0, #0xe
   38bc4:	b.eq	38b8c <PyInit__decimal@@Base+0x1c94c>  // b.none
   38bc8:	tst	w0, #0xc
   38bcc:	b.eq	38b2c <PyInit__decimal@@Base+0x1c8ec>  // b.none
   38bd0:	ldr	w2, [x23, #40]
   38bd4:	mov	x0, x21
   38bd8:	ldr	x1, [x23]
   38bdc:	ldp	x19, x20, [sp, #16]
   38be0:	ldp	x21, x22, [sp, #32]
   38be4:	ldr	x23, [sp, #48]
   38be8:	ldp	x29, x30, [sp], #64
   38bec:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   38bf0:	ldr	x2, [x19, #8]
   38bf4:	neg	w0, w1
   38bf8:	ldr	x3, [x20, #8]
   38bfc:	lsl	w1, w0, #1
   38c00:	mov	w0, #0x1                   	// #1
   38c04:	cmp	x3, x2
   38c08:	cneg	w0, w0, lt  // lt = tstop
   38c0c:	madd	w0, w1, w0, w0
   38c10:	tbz	w0, #31, 38b70 <PyInit__decimal@@Base+0x1c930>
   38c14:	b	38bac <PyInit__decimal@@Base+0x1c96c>
   38c18:	stp	x29, x30, [sp, #-64]!
   38c1c:	mov	x29, sp
   38c20:	stp	x19, x20, [sp, #16]
   38c24:	mov	x19, x0
   38c28:	mov	x20, x3
   38c2c:	stp	x21, x22, [sp, #32]
   38c30:	mov	x21, x4
   38c34:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   38c38:	ldrb	w0, [x19]
   38c3c:	tst	w0, #0xe
   38c40:	b.eq	38c5c <PyInit__decimal@@Base+0x1ca1c>  // b.none
   38c44:	tst	w0, #0xc
   38c48:	b.ne	38cf4 <PyInit__decimal@@Base+0x1cab4>  // b.any
   38c4c:	ldp	x19, x20, [sp, #16]
   38c50:	ldp	x21, x22, [sp, #32]
   38c54:	ldp	x29, x30, [sp], #64
   38c58:	ret
   38c5c:	mov	x0, x19
   38c60:	mov	x2, x21
   38c64:	mov	x1, x20
   38c68:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   38c6c:	ldrb	w0, [x19]
   38c70:	tst	w0, #0xe
   38c74:	b.ne	38c4c <PyInit__decimal@@Base+0x1ca0c>  // b.any
   38c78:	ldr	x22, [x20]
   38c7c:	ldr	x1, [x19, #16]
   38c80:	cmp	x1, x22
   38c84:	b.le	38c4c <PyInit__decimal@@Base+0x1ca0c>
   38c88:	sub	x22, x1, x22
   38c8c:	mov	x0, x19
   38c90:	mov	x1, x22
   38c94:	str	x23, [sp, #48]
   38c98:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   38c9c:	mov	x23, x0
   38ca0:	ldr	x1, [x19, #8]
   38ca4:	ldr	w2, [x20, #36]
   38ca8:	add	x1, x1, x22
   38cac:	str	x1, [x19, #8]
   38cb0:	cmp	w2, #0x4
   38cb4:	b.eq	38e00 <PyInit__decimal@@Base+0x1cbc0>  // b.none
   38cb8:	b.gt	38d10 <PyInit__decimal@@Base+0x1cad0>
   38cbc:	cmp	w2, #0x2
   38cc0:	b.eq	38e10 <PyInit__decimal@@Base+0x1cbd0>  // b.none
   38cc4:	cmp	w2, #0x3
   38cc8:	b.ne	38d58 <PyInit__decimal@@Base+0x1cb18>  // b.any
   38ccc:	cbz	x0, 38dec <PyInit__decimal@@Base+0x1cbac>
   38cd0:	ldrb	w0, [x19]
   38cd4:	and	w0, w0, #0x1
   38cd8:	cbnz	w0, 38d94 <PyInit__decimal@@Base+0x1cb54>
   38cdc:	ldr	w0, [x21]
   38ce0:	mov	w1, #0x1040                	// #4160
   38ce4:	orr	w0, w0, w1
   38ce8:	ldr	x23, [sp, #48]
   38cec:	str	w0, [x21]
   38cf0:	b	38c4c <PyInit__decimal@@Base+0x1ca0c>
   38cf4:	ldr	w2, [x20, #40]
   38cf8:	mov	x0, x19
   38cfc:	ldr	x1, [x20]
   38d00:	ldp	x19, x20, [sp, #16]
   38d04:	ldp	x21, x22, [sp, #32]
   38d08:	ldp	x29, x30, [sp], #64
   38d0c:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   38d10:	cmp	w2, #0x6
   38d14:	b.eq	38e28 <PyInit__decimal@@Base+0x1cbe8>  // b.none
   38d18:	cmp	w2, #0x7
   38d1c:	b.ne	38d80 <PyInit__decimal@@Base+0x1cb40>  // b.any
   38d20:	ldr	x0, [x19, #40]
   38d24:	ldr	x2, [x0]
   38d28:	cbz	x23, 38dec <PyInit__decimal@@Base+0x1cbac>
   38d2c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   38d30:	movk	x1, #0xcccd
   38d34:	umulh	x1, x2, x1
   38d38:	lsr	x1, x1, #3
   38d3c:	add	x1, x1, x1, lsl #2
   38d40:	sub	x1, x2, x1, lsl #1
   38d44:	cmp	w1, #0x0
   38d48:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   38d4c:	b.eq	38d98 <PyInit__decimal@@Base+0x1cb58>  // b.none
   38d50:	ldr	w0, [x21]
   38d54:	b	38ce0 <PyInit__decimal@@Base+0x1caa0>
   38d58:	cmp	x0, #0x0
   38d5c:	cset	w0, ne  // ne = any
   38d60:	cbnz	w2, 38d68 <PyInit__decimal@@Base+0x1cb28>
   38d64:	cbnz	w0, 38d94 <PyInit__decimal@@Base+0x1cb54>
   38d68:	ldr	w0, [x21]
   38d6c:	orr	w1, w0, #0x1000
   38d70:	str	w1, [x21]
   38d74:	cbnz	x23, 38ce0 <PyInit__decimal@@Base+0x1caa0>
   38d78:	ldr	x23, [sp, #48]
   38d7c:	b	38c4c <PyInit__decimal@@Base+0x1ca0c>
   38d80:	cmp	x0, #0x5
   38d84:	cset	w0, hi  // hi = pmore
   38d88:	cmp	w2, #0x5
   38d8c:	b.ne	38d68 <PyInit__decimal@@Base+0x1cb28>  // b.any
   38d90:	cbz	w0, 38d68 <PyInit__decimal@@Base+0x1cb28>
   38d94:	ldr	x0, [x19, #40]
   38d98:	ldr	x1, [x19, #24]
   38d9c:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   38da0:	cbnz	x0, 38e48 <PyInit__decimal@@Base+0x1cc08>
   38da4:	mov	x0, x19
   38da8:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   38dac:	ldr	x0, [x20]
   38db0:	ldr	x1, [x19, #16]
   38db4:	cmp	x1, x0
   38db8:	b.le	38d68 <PyInit__decimal@@Base+0x1cb28>
   38dbc:	mov	x0, x19
   38dc0:	mov	x1, #0x1                   	// #1
   38dc4:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   38dc8:	ldr	x0, [x19, #8]
   38dcc:	mov	x1, x20
   38dd0:	ldr	x2, [x20]
   38dd4:	add	x0, x0, #0x1
   38dd8:	stp	x0, x2, [x19, #8]
   38ddc:	mov	x0, x19
   38de0:	mov	x2, x21
   38de4:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   38de8:	b	38d68 <PyInit__decimal@@Base+0x1cb28>
   38dec:	ldr	w0, [x21]
   38df0:	ldr	x23, [sp, #48]
   38df4:	orr	w0, w0, #0x1000
   38df8:	str	w0, [x21]
   38dfc:	b	38c4c <PyInit__decimal@@Base+0x1ca0c>
   38e00:	cmp	x0, #0x4
   38e04:	cset	w0, hi  // hi = pmore
   38e08:	cbz	w0, 38d68 <PyInit__decimal@@Base+0x1cb28>
   38e0c:	b	38d94 <PyInit__decimal@@Base+0x1cb54>
   38e10:	cbz	x0, 38dec <PyInit__decimal@@Base+0x1cbac>
   38e14:	ldrb	w0, [x19]
   38e18:	mvn	w0, w0
   38e1c:	and	w0, w0, #0x1
   38e20:	cbz	w0, 38cdc <PyInit__decimal@@Base+0x1ca9c>
   38e24:	b	38d94 <PyInit__decimal@@Base+0x1cb54>
   38e28:	cmp	x0, #0x5
   38e2c:	b.hi	38d94 <PyInit__decimal@@Base+0x1cb54>  // b.pmore
   38e30:	b.ne	38d68 <PyInit__decimal@@Base+0x1cb28>  // b.any
   38e34:	ldr	x0, [x19, #40]
   38e38:	ldr	x1, [x0]
   38e3c:	tbnz	w1, #0, 38d98 <PyInit__decimal@@Base+0x1cb58>
   38e40:	ldr	w0, [x21]
   38e44:	b	38ce0 <PyInit__decimal@@Base+0x1caa0>
   38e48:	ldr	x3, [x19, #24]
   38e4c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   38e50:	ldr	x2, [x19, #40]
   38e54:	mov	x1, x20
   38e58:	ldr	x4, [x0, #528]
   38e5c:	mov	x0, x19
   38e60:	add	x3, x2, x3, lsl #3
   38e64:	mov	x2, x21
   38e68:	stur	x4, [x3, #-8]
   38e6c:	ldr	x3, [x19, #8]
   38e70:	add	x3, x3, #0x1
   38e74:	str	x3, [x19, #8]
   38e78:	bl	2ecc8 <PyInit__decimal@@Base+0x12a88>
   38e7c:	b	38d68 <PyInit__decimal@@Base+0x1cb28>
   38e80:	sub	sp, sp, #0x2a0
   38e84:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   38e88:	stp	x29, x30, [sp]
   38e8c:	mov	x29, sp
   38e90:	ldr	q0, [x5, #1760]
   38e94:	stp	x19, x20, [sp, #16]
   38e98:	mov	x19, x2
   38e9c:	add	x2, sp, #0xa0
   38ea0:	stp	x23, x24, [sp, #48]
   38ea4:	mov	x23, x1
   38ea8:	mov	w1, #0x30                  	// #48
   38eac:	add	x24, sp, #0x70
   38eb0:	mov	x20, x0
   38eb4:	mov	x0, x24
   38eb8:	stp	x21, x22, [sp, #32]
   38ebc:	mov	x22, x3
   38ec0:	mov	x21, x4
   38ec4:	strb	w1, [sp, #64]
   38ec8:	stp	xzr, xzr, [sp, #72]
   38ecc:	stur	q0, [sp, #88]
   38ed0:	str	x2, [sp, #104]
   38ed4:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   38ed8:	mov	x2, x19
   38edc:	mov	w3, #0x0                   	// #0
   38ee0:	tbnz	x19, #63, 3906c <PyInit__decimal@@Base+0x1ce2c>
   38ee4:	ldrb	w6, [sp, #64]
   38ee8:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   38eec:	ldr	x4, [sp, #104]
   38ef0:	and	w6, w6, #0xfffffff0
   38ef4:	orr	w3, w3, w6
   38ef8:	strb	w3, [sp, #64]
   38efc:	str	xzr, [sp, #72]
   38f00:	add	x5, x5, #0x180
   38f04:	stp	x2, xzr, [x4]
   38f08:	mov	x0, #0x1                   	// #1
   38f0c:	str	x0, [sp, #88]
   38f10:	ldr	x0, [x5, #72]
   38f14:	ldr	x2, [x4]
   38f18:	cmp	x2, x0
   38f1c:	b.cs	38fa0 <PyInit__decimal@@Base+0x1cd60>  // b.hs, b.nlast
   38f20:	ldr	x0, [x5, #32]
   38f24:	cmp	x2, x0
   38f28:	b.cs	38f70 <PyInit__decimal@@Base+0x1cd30>  // b.hs, b.nlast
   38f2c:	ldr	x0, [x5, #16]
   38f30:	cmp	x2, x0
   38f34:	b.cs	390c4 <PyInit__decimal@@Base+0x1ce84>  // b.hs, b.nlast
   38f38:	ldr	x0, [x5, #8]
   38f3c:	cmp	x2, x0
   38f40:	ldrb	w2, [sp, #64]
   38f44:	cset	x3, cs  // cs = hs, nlast
   38f48:	add	x3, x3, #0x1
   38f4c:	str	x3, [sp, #80]
   38f50:	tst	w2, #0xe
   38f54:	b.ne	38fe8 <PyInit__decimal@@Base+0x1cda8>  // b.any
   38f58:	add	x19, sp, #0x40
   38f5c:	mov	x1, x24
   38f60:	mov	x0, x19
   38f64:	mov	x2, x21
   38f68:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   38f6c:	b	38ff4 <PyInit__decimal@@Base+0x1cdb4>
   38f70:	ldr	x0, [x5, #48]
   38f74:	cmp	x2, x0
   38f78:	b.cc	390ec <PyInit__decimal@@Base+0x1ceac>  // b.lo, b.ul, b.last
   38f7c:	ldr	x0, [x5, #64]
   38f80:	mov	x3, #0x9                   	// #9
   38f84:	cmp	x2, x0
   38f88:	b.cs	38fd8 <PyInit__decimal@@Base+0x1cd98>  // b.hs, b.nlast
   38f8c:	ldr	x0, [x5, #56]
   38f90:	cmp	x2, x0
   38f94:	cset	x3, cs  // cs = hs, nlast
   38f98:	add	x3, x3, #0x7
   38f9c:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   38fa0:	ldr	x0, [x5, #112]
   38fa4:	cmp	x2, x0
   38fa8:	b.cs	39084 <PyInit__decimal@@Base+0x1ce44>  // b.hs, b.nlast
   38fac:	ldr	x0, [x5, #88]
   38fb0:	cmp	x2, x0
   38fb4:	b.cc	390d8 <PyInit__decimal@@Base+0x1ce98>  // b.lo, b.ul, b.last
   38fb8:	ldr	x0, [x5, #104]
   38fbc:	mov	x3, #0xe                   	// #14
   38fc0:	cmp	x2, x0
   38fc4:	b.cs	38fd8 <PyInit__decimal@@Base+0x1cd98>  // b.hs, b.nlast
   38fc8:	ldr	x0, [x5, #96]
   38fcc:	cmp	x2, x0
   38fd0:	cset	x3, cs  // cs = hs, nlast
   38fd4:	add	x3, x3, #0xc
   38fd8:	ldrb	w2, [sp, #64]
   38fdc:	str	x3, [sp, #80]
   38fe0:	tst	w2, #0xe
   38fe4:	b.eq	38f58 <PyInit__decimal@@Base+0x1cd18>  // b.none
   38fe8:	tst	w2, #0xc
   38fec:	add	x19, sp, #0x40
   38ff0:	b.ne	39114 <PyInit__decimal@@Base+0x1ced4>  // b.any
   38ff4:	mov	x0, x20
   38ff8:	mov	x1, x23
   38ffc:	mov	x4, x21
   39000:	mov	x3, x22
   39004:	mov	x2, x19
   39008:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   3900c:	ldrb	w0, [x20]
   39010:	tst	w0, #0xe
   39014:	b.eq	39100 <PyInit__decimal@@Base+0x1cec0>  // b.none
   39018:	tst	w0, #0xc
   3901c:	b.ne	39128 <PyInit__decimal@@Base+0x1cee8>  // b.any
   39020:	ldrb	w0, [sp, #64]
   39024:	tst	w0, #0xe0
   39028:	b.ne	39040 <PyInit__decimal@@Base+0x1ce00>  // b.any
   3902c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39030:	ldr	x0, [sp, #104]
   39034:	ldr	x1, [x1, #1912]
   39038:	blr	x1
   3903c:	ldrb	w0, [sp, #64]
   39040:	tbnz	w0, #4, 39054 <PyInit__decimal@@Base+0x1ce14>
   39044:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39048:	mov	x0, x19
   3904c:	ldr	x1, [x1, #1912]
   39050:	blr	x1
   39054:	ldp	x29, x30, [sp]
   39058:	ldp	x19, x20, [sp, #16]
   3905c:	ldp	x21, x22, [sp, #32]
   39060:	ldp	x23, x24, [sp, #48]
   39064:	add	sp, sp, #0x2a0
   39068:	ret
   3906c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   39070:	mov	w3, #0x1                   	// #1
   39074:	cmp	x19, x0
   39078:	b.eq	38ee4 <PyInit__decimal@@Base+0x1cca4>  // b.none
   3907c:	neg	x2, x19
   39080:	b	38ee4 <PyInit__decimal@@Base+0x1cca4>
   39084:	ldr	x0, [x5, #144]
   39088:	cmp	x2, x0
   3908c:	b.cs	390b0 <PyInit__decimal@@Base+0x1ce70>  // b.hs, b.nlast
   39090:	ldr	x0, [x5, #128]
   39094:	cmp	x2, x0
   39098:	b.cs	3913c <PyInit__decimal@@Base+0x1cefc>  // b.hs, b.nlast
   3909c:	ldr	x0, [x5, #120]
   390a0:	cmp	x2, x0
   390a4:	cset	x3, cs  // cs = hs, nlast
   390a8:	add	x3, x3, #0xf
   390ac:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   390b0:	ldr	x0, [x5, #152]
   390b4:	cmp	x2, x0
   390b8:	cset	x3, cs  // cs = hs, nlast
   390bc:	add	x3, x3, #0x13
   390c0:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   390c4:	ldr	x0, [x5, #24]
   390c8:	cmp	x2, x0
   390cc:	cset	x3, cs  // cs = hs, nlast
   390d0:	add	x3, x3, #0x3
   390d4:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   390d8:	ldr	x0, [x5, #80]
   390dc:	cmp	x2, x0
   390e0:	cset	x3, cs  // cs = hs, nlast
   390e4:	add	x3, x3, #0xa
   390e8:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   390ec:	ldr	x0, [x5, #40]
   390f0:	cmp	x2, x0
   390f4:	cset	x3, cs  // cs = hs, nlast
   390f8:	add	x3, x3, #0x5
   390fc:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   39100:	mov	x2, x21
   39104:	mov	x1, x22
   39108:	mov	x0, x20
   3910c:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   39110:	b	39020 <PyInit__decimal@@Base+0x1cde0>
   39114:	ldr	w2, [sp, #152]
   39118:	mov	x0, x19
   3911c:	ldr	x1, [sp, #112]
   39120:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   39124:	b	38ff4 <PyInit__decimal@@Base+0x1cdb4>
   39128:	ldr	w2, [x22, #40]
   3912c:	mov	x0, x20
   39130:	ldr	x1, [x22]
   39134:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   39138:	b	39020 <PyInit__decimal@@Base+0x1cde0>
   3913c:	ldr	x0, [x5, #136]
   39140:	cmp	x2, x0
   39144:	cset	x3, cs  // cs = hs, nlast
   39148:	add	x3, x3, #0x11
   3914c:	b	38fd8 <PyInit__decimal@@Base+0x1cd98>
   39150:	sub	sp, sp, #0x970
   39154:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39158:	movi	v1.4s, #0x0
   3915c:	add	x6, sp, #0x170
   39160:	stp	x29, x30, [sp]
   39164:	mov	x29, sp
   39168:	ldr	q0, [x5, #1760]
   3916c:	add	x5, sp, #0x370
   39170:	stp	x25, x26, [sp, #64]
   39174:	mov	x26, x3
   39178:	add	x3, sp, #0x570
   3917c:	stp	x19, x20, [sp, #16]
   39180:	mov	x20, x4
   39184:	mov	x19, x2
   39188:	mov	x2, x4
   3918c:	mov	w4, #0x30                  	// #48
   39190:	stp	x23, x24, [sp, #48]
   39194:	add	x23, sp, #0x80
   39198:	mov	x24, x0
   3919c:	mov	x0, x23
   391a0:	stp	x21, x22, [sp, #32]
   391a4:	mov	x21, x1
   391a8:	strb	w4, [sp, #128]
   391ac:	stur	q1, [sp, #136]
   391b0:	stur	q0, [sp, #152]
   391b4:	str	x6, [sp, #168]
   391b8:	strb	w4, [sp, #176]
   391bc:	stur	q1, [sp, #184]
   391c0:	stur	q0, [sp, #200]
   391c4:	str	x5, [sp, #216]
   391c8:	strb	w4, [sp, #224]
   391cc:	stur	q1, [sp, #232]
   391d0:	stur	q0, [sp, #248]
   391d4:	str	x3, [sp, #264]
   391d8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   391dc:	cbz	w0, 396a0 <PyInit__decimal@@Base+0x1d460>
   391e0:	ldp	x2, x4, [sp, #144]
   391e4:	mov	x0, #0x435f                	// #17247
   391e8:	movk	x0, #0xd79, lsl #16
   391ec:	stp	x27, x28, [sp, #80]
   391f0:	movk	x0, #0x35e5, lsl #32
   391f4:	movk	x0, #0xd794, lsl #48
   391f8:	ldr	x1, [sp, #168]
   391fc:	umulh	x0, x2, x0
   39200:	lsr	x0, x0, #4
   39204:	add	x1, x1, x4, lsl #3
   39208:	add	x3, x0, x0, lsl #2
   3920c:	ldur	x27, [x1, #-8]
   39210:	lsl	x3, x3, #2
   39214:	sub	x0, x3, x0
   39218:	subs	x0, x2, x0
   3921c:	b.ne	394d0 <PyInit__decimal@@Base+0x1d290>  // b.any
   39220:	mov	x0, #0x10                  	// #16
   39224:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39228:	add	x1, x1, #0x180
   3922c:	ldr	x0, [x1, x0, lsl #3]
   39230:	udiv	x27, x27, x0
   39234:	cmp	x27, #0x9
   39238:	b.hi	39510 <PyInit__decimal@@Base+0x1d2d0>  // b.pmore
   3923c:	add	x27, x27, x27, lsl #2
   39240:	lsl	x27, x27, #1
   39244:	add	x27, x27, x27, lsl #2
   39248:	lsl	x27, x27, #1
   3924c:	ldrb	w2, [x24]
   39250:	sub	x22, x27, #0x64
   39254:	ldp	x25, x21, [x21, #8]
   39258:	ldr	x4, [x24, #40]
   3925c:	tbnz	w2, #5, 39274 <PyInit__decimal@@Base+0x1d034>
   39260:	adrp	x28, 65000 <PyInit__decimal@@Base+0x48dc0>
   39264:	ldr	x0, [x24, #32]
   39268:	ldr	x1, [x28, #1880]
   3926c:	cmp	x0, x1
   39270:	b.gt	39764 <PyInit__decimal@@Base+0x1d524>
   39274:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39278:	add	x3, x3, #0x8b0
   3927c:	and	w2, w2, #0xfffffff0
   39280:	strb	w2, [x24]
   39284:	add	x7, x21, x25
   39288:	mov	x6, #0x1                   	// #1
   3928c:	ldrh	w2, [x3, x22, lsl #1]
   39290:	mov	x1, #0xfffffffffffffffd    	// #-3
   39294:	str	x2, [x4]
   39298:	mov	x0, x24
   3929c:	str	x1, [x24, #8]
   392a0:	str	x6, [x24, #24]
   392a4:	str	x7, [sp, #112]
   392a8:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   392ac:	cmp	x22, #0x190
   392b0:	b.hi	396b4 <PyInit__decimal@@Base+0x1d474>  // b.pmore
   392b4:	sub	x1, x6, x21
   392b8:	sub	x0, x7, #0x1
   392bc:	str	x0, [sp, #112]
   392c0:	add	x22, sp, #0x140
   392c4:	add	x21, sp, #0x110
   392c8:	mov	x0, x22
   392cc:	str	x1, [sp, #136]
   392d0:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   392d4:	add	x25, sp, #0xe0
   392d8:	mov	x0, x21
   392dc:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   392e0:	ldr	x1, [x19]
   392e4:	mov	w0, #0x8                   	// #8
   392e8:	str	w0, [sp, #308]
   392ec:	add	x0, x1, #0x2
   392f0:	str	x0, [sp, #104]
   392f4:	ldr	x0, [sp, #112]
   392f8:	cbnz	x0, 3930c <PyInit__decimal@@Base+0x1d0cc>
   392fc:	sub	x27, x27, #0x74
   39300:	add	x25, sp, #0xe0
   39304:	cmp	x27, #0x30f
   39308:	b.hi	396c8 <PyInit__decimal@@Base+0x1d488>  // b.pmore
   3930c:	ldr	x0, [sp, #104]
   39310:	cmp	x0, #0x2
   39314:	b.le	3958c <PyInit__decimal@@Base+0x1d34c>
   39318:	add	x2, sp, #0x770
   3931c:	mov	x1, x0
   39320:	mov	w0, #0x0                   	// #0
   39324:	nop
   39328:	add	x1, x1, #0x2
   3932c:	mov	w19, w0
   39330:	cmp	x1, #0x5
   39334:	add	w0, w0, #0x1
   39338:	add	x1, x1, x1, lsr #63
   3933c:	add	x26, x2, w19, sxtw #3
   39340:	asr	x1, x1, #1
   39344:	str	x1, [x2, w19, sxtw #3]
   39348:	b.gt	39328 <PyInit__decimal@@Base+0x1d0e8>
   3934c:	tbnz	w19, #31, 3958c <PyInit__decimal@@Base+0x1d34c>
   39350:	adrp	x28, 62000 <PyInit__decimal@@Base+0x45dc0>
   39354:	ldrb	w0, [x24]
   39358:	add	x1, x28, #0xc58
   3935c:	add	x27, sp, #0xb0
   39360:	str	x1, [sp, #120]
   39364:	b	39430 <PyInit__decimal@@Base+0x1d1f0>
   39368:	sub	x28, x1, x5
   3936c:	mov	x3, x20
   39370:	mov	x2, x28
   39374:	mov	x1, x23
   39378:	mov	x0, x27
   3937c:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   39380:	ldr	x1, [sp, #184]
   39384:	mov	x4, x20
   39388:	mov	x3, x21
   3938c:	mov	x2, x25
   39390:	add	x5, x1, x28
   39394:	mov	x0, x25
   39398:	mov	x1, x27
   3939c:	str	x5, [sp, #184]
   393a0:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   393a4:	ldrb	w1, [sp, #224]
   393a8:	tst	w1, #0xe
   393ac:	b.ne	3949c <PyInit__decimal@@Base+0x1d25c>  // b.any
   393b0:	mov	x2, x20
   393b4:	mov	x1, x21
   393b8:	mov	x0, x25
   393bc:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   393c0:	ldrb	w1, [sp, #224]
   393c4:	tst	w1, #0xe
   393c8:	b.ne	3951c <PyInit__decimal@@Base+0x1d2dc>  // b.any
   393cc:	ldr	x2, [sp, #120]
   393d0:	mov	x6, x20
   393d4:	add	x5, x22, #0x24
   393d8:	mov	x4, x22
   393dc:	mov	w3, #0x1                   	// #1
   393e0:	mov	x1, x25
   393e4:	mov	x0, x25
   393e8:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   393ec:	mov	x2, x20
   393f0:	mov	x1, x22
   393f4:	mov	x0, x25
   393f8:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   393fc:	mov	x0, x24
   39400:	mov	x4, x20
   39404:	mov	x3, x22
   39408:	mov	x2, x25
   3940c:	mov	x1, x24
   39410:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   39414:	ldrb	w0, [x24]
   39418:	tst	w0, #0xe
   3941c:	b.ne	3958c <PyInit__decimal@@Base+0x1d34c>  // b.any
   39420:	sub	w19, w19, #0x1
   39424:	sub	x26, x26, #0x8
   39428:	cmn	w19, #0x1
   3942c:	b.eq	3958c <PyInit__decimal@@Base+0x1d34c>  // b.none
   39430:	ldr	x4, [x26]
   39434:	eor	w0, w0, #0x1
   39438:	strb	w0, [x24]
   3943c:	mov	x1, x24
   39440:	mov	x0, x25
   39444:	mov	x3, x20
   39448:	lsl	x4, x4, #1
   3944c:	mov	x2, x21
   39450:	add	x4, x4, #0x3
   39454:	str	x4, [sp, #272]
   39458:	bl	37228 <PyInit__decimal@@Base+0x1afe8>
   3945c:	ldrb	w0, [x24]
   39460:	ldr	x1, [sp, #144]
   39464:	eor	w0, w0, #0x1
   39468:	ldr	x5, [sp, #272]
   3946c:	strb	w0, [x24]
   39470:	cmp	x1, x5
   39474:	b.gt	39368 <PyInit__decimal@@Base+0x1d128>
   39478:	mov	x1, x23
   3947c:	mov	x4, x20
   39480:	mov	x3, x21
   39484:	mov	x2, x25
   39488:	mov	x0, x25
   3948c:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   39490:	ldrb	w1, [sp, #224]
   39494:	tst	w1, #0xe
   39498:	b.eq	393b0 <PyInit__decimal@@Base+0x1d170>  // b.none
   3949c:	tst	w1, #0xc
   394a0:	b.ne	394bc <PyInit__decimal@@Base+0x1d27c>  // b.any
   394a4:	tbz	w1, #1, 39578 <PyInit__decimal@@Base+0x1d338>
   394a8:	and	w1, w1, #0x1
   394ac:	mov	x0, x25
   394b0:	mov	w2, #0x2                   	// #2
   394b4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   394b8:	b	393fc <PyInit__decimal@@Base+0x1d1bc>
   394bc:	ldr	w2, [sp, #312]
   394c0:	mov	x0, x25
   394c4:	ldr	x1, [sp, #272]
   394c8:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   394cc:	b	393c0 <PyInit__decimal@@Base+0x1d180>
   394d0:	cmp	x0, #0x2
   394d4:	b.hi	39798 <PyInit__decimal@@Base+0x1d558>  // b.pmore
   394d8:	cmp	x4, #0x1
   394dc:	b.le	39234 <PyInit__decimal@@Base+0x1cff4>
   394e0:	add	x4, x0, #0x10
   394e4:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   394e8:	add	x2, x2, #0x180
   394ec:	mov	x3, #0x3                   	// #3
   394f0:	sub	x0, x3, x0
   394f4:	ldur	x1, [x1, #-16]
   394f8:	ldr	x3, [x2, x4, lsl #3]
   394fc:	ldr	x2, [x2, x0, lsl #3]
   39500:	udiv	x0, x1, x3
   39504:	madd	x27, x27, x2, x0
   39508:	cmp	x27, #0x9
   3950c:	b.ls	3923c <PyInit__decimal@@Base+0x1cffc>  // b.plast
   39510:	cmp	x27, #0x63
   39514:	b.hi	3924c <PyInit__decimal@@Base+0x1d00c>  // b.pmore
   39518:	b	39244 <PyInit__decimal@@Base+0x1d004>
   3951c:	tst	w1, #0xc
   39520:	b.eq	394a4 <PyInit__decimal@@Base+0x1d264>  // b.none
   39524:	tbnz	w1, #3, 39564 <PyInit__decimal@@Base+0x1d324>
   39528:	ldr	x0, [sp, #120]
   3952c:	tst	x1, #0x4
   39530:	csel	x1, x0, x25, eq  // eq = none
   39534:	mov	x2, x20
   39538:	mov	x0, x25
   3953c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   39540:	ldrb	w3, [sp, #224]
   39544:	mov	x0, x25
   39548:	ldr	w2, [sp, #360]
   3954c:	and	w3, w3, #0xfffffff1
   39550:	ldr	x1, [sp, #320]
   39554:	orr	w3, w3, #0x4
   39558:	strb	w3, [sp, #224]
   3955c:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   39560:	b	393fc <PyInit__decimal@@Base+0x1d1bc>
   39564:	ldr	w0, [x20]
   39568:	mov	x1, x25
   3956c:	orr	w0, w0, #0x100
   39570:	str	w0, [x20]
   39574:	b	39534 <PyInit__decimal@@Base+0x1d2f4>
   39578:	mov	x0, x25
   3957c:	mov	w2, #0x2                   	// #2
   39580:	mov	w1, #0x1                   	// #1
   39584:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   39588:	b	393fc <PyInit__decimal@@Base+0x1d1bc>
   3958c:	ldr	x0, [sp, #104]
   39590:	mov	x2, x20
   39594:	add	x1, x0, #0x1
   39598:	mov	x0, x23
   3959c:	bl	380b0 <PyInit__decimal@@Base+0x1be70>
   395a0:	ldr	x2, [sp, #112]
   395a4:	mov	x4, x20
   395a8:	mov	x3, x22
   395ac:	mov	x1, x23
   395b0:	mov	x0, x25
   395b4:	bl	38e80 <PyInit__decimal@@Base+0x1cc40>
   395b8:	mov	x4, x20
   395bc:	mov	x3, x22
   395c0:	mov	x2, x24
   395c4:	mov	x1, x25
   395c8:	mov	x0, x24
   395cc:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   395d0:	ldp	x27, x28, [sp, #80]
   395d4:	mov	w2, #0x1040                	// #4160
   395d8:	ldr	w0, [x20]
   395dc:	ldrb	w1, [sp, #128]
   395e0:	orr	w0, w0, w2
   395e4:	str	w0, [x20]
   395e8:	tst	w1, #0xe0
   395ec:	b.ne	39604 <PyInit__decimal@@Base+0x1d3c4>  // b.any
   395f0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   395f4:	ldr	x0, [sp, #168]
   395f8:	ldr	x1, [x1, #1912]
   395fc:	blr	x1
   39600:	ldrb	w1, [sp, #128]
   39604:	tbnz	w1, #4, 39618 <PyInit__decimal@@Base+0x1d3d8>
   39608:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3960c:	mov	x0, x23
   39610:	ldr	x1, [x1, #1912]
   39614:	blr	x1
   39618:	ldrb	w0, [sp, #176]
   3961c:	tst	w0, #0xe0
   39620:	b.ne	39638 <PyInit__decimal@@Base+0x1d3f8>  // b.any
   39624:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39628:	ldr	x0, [sp, #216]
   3962c:	ldr	x1, [x1, #1912]
   39630:	blr	x1
   39634:	ldrb	w0, [sp, #176]
   39638:	tbnz	w0, #4, 3964c <PyInit__decimal@@Base+0x1d40c>
   3963c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39640:	add	x0, sp, #0xb0
   39644:	ldr	x1, [x1, #1912]
   39648:	blr	x1
   3964c:	ldrb	w0, [sp, #224]
   39650:	tst	w0, #0xe0
   39654:	b.ne	3966c <PyInit__decimal@@Base+0x1d42c>  // b.any
   39658:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3965c:	ldr	x0, [sp, #264]
   39660:	ldr	x1, [x1, #1912]
   39664:	blr	x1
   39668:	ldrb	w0, [sp, #224]
   3966c:	tbnz	w0, #4, 39680 <PyInit__decimal@@Base+0x1d440>
   39670:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39674:	add	x0, sp, #0xe0
   39678:	ldr	x1, [x1, #1912]
   3967c:	blr	x1
   39680:	ldp	x29, x30, [sp]
   39684:	ldp	x19, x20, [sp, #16]
   39688:	ldp	x21, x22, [sp, #32]
   3968c:	ldp	x23, x24, [sp, #48]
   39690:	ldp	x25, x26, [sp, #64]
   39694:	add	sp, sp, #0x970
   39698:	ret
   3969c:	ldp	x27, x28, [sp, #80]
   396a0:	mov	x0, x24
   396a4:	mov	x2, x20
   396a8:	mov	w1, #0x200                 	// #512
   396ac:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   396b0:	b	395d4 <PyInit__decimal@@Base+0x1d394>
   396b4:	ldrb	w0, [x24]
   396b8:	neg	x1, x21
   396bc:	orr	w0, w0, #0x1
   396c0:	strb	w0, [x24]
   396c4:	b	392c0 <PyInit__decimal@@Base+0x1d080>
   396c8:	adrp	x27, 62000 <PyInit__decimal@@Base+0x45dc0>
   396cc:	add	x27, x27, #0xc58
   396d0:	mov	x1, x27
   396d4:	mov	x0, x23
   396d8:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   396dc:	mov	x2, x27
   396e0:	mov	x1, x23
   396e4:	mov	w27, w0
   396e8:	add	x6, x22, #0x1c
   396ec:	mov	x0, x25
   396f0:	add	x5, x22, #0x24
   396f4:	mov	x4, x22
   396f8:	mov	w3, #0x1                   	// #1
   396fc:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   39700:	ldr	w1, [sp, #348]
   39704:	mov	w0, #0x3be                 	// #958
   39708:	tst	w1, w0
   3970c:	b.ne	3969c <PyInit__decimal@@Base+0x1d45c>  // b.any
   39710:	ldr	x1, [sp, #232]
   39714:	tbz	w27, #31, 39720 <PyInit__decimal@@Base+0x1d4e0>
   39718:	add	x1, x1, #0x1
   3971c:	str	x1, [sp, #232]
   39720:	ldr	x0, [sp, #240]
   39724:	ldr	x3, [x26]
   39728:	sub	x2, x0, #0x1
   3972c:	ldr	x0, [x19]
   39730:	add	x4, x2, x1
   39734:	sub	x3, x3, x0
   39738:	add	x0, x3, #0x1
   3973c:	cmp	x4, x0
   39740:	b.lt	397a0 <PyInit__decimal@@Base+0x1d560>  // b.tstop
   39744:	sub	x0, x1, #0x1
   39748:	str	x0, [sp, #232]
   3974c:	ldr	x1, [sp, #104]
   39750:	adds	x0, x0, x2
   39754:	sub	x0, x1, x0
   39758:	csel	x0, x0, x1, mi  // mi = first
   3975c:	str	x0, [sp, #104]
   39760:	b	3930c <PyInit__decimal@@Base+0x1d0cc>
   39764:	mov	x0, x4
   39768:	add	x3, sp, #0x770
   3976c:	mov	x2, #0x8                   	// #8
   39770:	strb	wzr, [sp, #1904]
   39774:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   39778:	str	x0, [x24, #40]
   3977c:	ldrb	w1, [sp, #1904]
   39780:	mov	x4, x0
   39784:	cbnz	w1, 39790 <PyInit__decimal@@Base+0x1d550>
   39788:	ldr	x0, [x28, #1880]
   3978c:	str	x0, [x24, #32]
   39790:	ldrb	w2, [x24]
   39794:	b	39274 <PyInit__decimal@@Base+0x1d034>
   39798:	sub	x0, x0, #0x3
   3979c:	b	39224 <PyInit__decimal@@Base+0x1cfe4>
   397a0:	lsr	w1, w27, #31
   397a4:	mov	x0, x24
   397a8:	mov	x2, #0x1                   	// #1
   397ac:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   397b0:	ldp	x27, x28, [sp, #80]
   397b4:	b	395d4 <PyInit__decimal@@Base+0x1d394>
   397b8:	sub	sp, sp, #0x960
   397bc:	stp	x29, x30, [sp]
   397c0:	mov	x29, sp
   397c4:	stp	x19, x20, [sp, #16]
   397c8:	mov	x19, x3
   397cc:	stp	x27, x28, [sp, #80]
   397d0:	mov	x28, x1
   397d4:	mov	x27, x0
   397d8:	ldrb	w4, [x1]
   397dc:	tst	w4, #0xe
   397e0:	b.ne	399f4 <PyInit__decimal@@Base+0x1d7b4>  // b.any
   397e4:	mov	x20, x2
   397e8:	ldr	x1, [x1, #24]
   397ec:	ldr	x2, [x28, #40]
   397f0:	add	x1, x2, x1, lsl #3
   397f4:	ldur	x1, [x1, #-8]
   397f8:	cbz	x1, 39c40 <PyInit__decimal@@Base+0x1da00>
   397fc:	tbnz	w4, #0, 39a04 <PyInit__decimal@@Base+0x1d7c4>
   39800:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   39804:	mov	x0, x28
   39808:	add	x1, x1, #0xc58
   3980c:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   39810:	cbz	w0, 39c70 <PyInit__decimal@@Base+0x1da30>
   39814:	ldp	x0, x1, [x28, #8]
   39818:	add	x0, x0, x1
   3981c:	subs	x4, x0, #0x1
   39820:	csneg	x0, x4, x0, pl  // pl = nfrst
   39824:	lsl	x0, x0, #1
   39828:	bl	2a6f8 <PyInit__decimal@@Base+0xe4b8>
   3982c:	ldr	x1, [x20, #8]
   39830:	sub	w0, w0, #0x1
   39834:	cmp	x1, w0, sxtw
   39838:	b.lt	39c88 <PyInit__decimal@@Base+0x1da48>  // b.tstop
   3983c:	ldp	x0, x1, [x20, #32]
   39840:	stp	x0, x1, [sp, #336]
   39844:	ldr	w0, [x20, #44]
   39848:	ldp	x8, x9, [x20]
   3984c:	mov	w1, #0x6                   	// #6
   39850:	ldp	x2, x3, [x20, #16]
   39854:	stp	x21, x22, [sp, #32]
   39858:	add	x21, sp, #0x130
   3985c:	stp	x8, x9, [sp, #304]
   39860:	stp	x2, x3, [sp, #320]
   39864:	str	w1, [sp, #340]
   39868:	cbz	w0, 39a4c <PyInit__decimal@@Base+0x1d80c>
   3986c:	mov	w0, #0x30                  	// #48
   39870:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39874:	movi	v1.4s, #0x0
   39878:	strb	w0, [sp, #112]
   3987c:	strb	w0, [sp, #160]
   39880:	add	x4, sp, #0x160
   39884:	strb	w0, [sp, #208]
   39888:	add	x3, sp, #0x360
   3988c:	strb	w0, [sp, #256]
   39890:	add	x0, sp, #0x200
   39894:	ldr	q0, [x1, #1760]
   39898:	add	x2, sp, #0x560
   3989c:	stur	q1, [x0, #-248]
   398a0:	add	x0, sp, #0x210
   398a4:	add	x1, sp, #0x760
   398a8:	str	x4, [sp, #152]
   398ac:	cmp	x28, x27
   398b0:	str	x3, [sp, #200]
   398b4:	str	x2, [sp, #248]
   398b8:	str	x1, [sp, #296]
   398bc:	stur	q0, [x0, #-248]
   398c0:	stur	q1, [sp, #120]
   398c4:	stur	q0, [sp, #136]
   398c8:	stur	q1, [sp, #168]
   398cc:	stur	q0, [sp, #184]
   398d0:	stur	q1, [sp, #216]
   398d4:	stur	q0, [sp, #232]
   398d8:	b.eq	39cac <PyInit__decimal@@Base+0x1da6c>  // b.none
   398dc:	stp	x23, x24, [sp, #48]
   398e0:	stp	x25, x26, [sp, #64]
   398e4:	add	x22, sp, #0xd0
   398e8:	ldr	x23, [x20]
   398ec:	add	x25, sp, #0x70
   398f0:	add	x24, sp, #0xa0
   398f4:	add	x26, x21, #0x1c
   398f8:	add	x23, x23, #0x3
   398fc:	add	x0, x21, #0x10
   39900:	str	x0, [sp, #104]
   39904:	str	wzr, [sp, #344]
   39908:	ldr	x3, [sp, #104]
   3990c:	mov	x4, x19
   39910:	mov	x2, x21
   39914:	mov	x1, x28
   39918:	mov	x0, x27
   3991c:	str	x23, [sp, #304]
   39920:	bl	39150 <PyInit__decimal@@Base+0x1cf10>
   39924:	ldp	x0, x3, [x27, #8]
   39928:	ldr	x2, [sp, #304]
   3992c:	ldrb	w1, [sp, #208]
   39930:	add	x0, x0, x3
   39934:	and	w1, w1, #0xfffffff0
   39938:	sub	x0, x0, x2
   3993c:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39940:	strb	w1, [sp, #208]
   39944:	ldr	q0, [x2, #2176]
   39948:	str	x0, [sp, #216]
   3994c:	ldr	x1, [sp, #248]
   39950:	mov	x0, x22
   39954:	str	q0, [x1]
   39958:	mov	x1, #0x1                   	// #1
   3995c:	str	x1, [sp, #232]
   39960:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   39964:	ldr	x7, [x20]
   39968:	mov	x4, x26
   3996c:	mov	x3, x21
   39970:	mov	x2, x22
   39974:	mov	x1, x27
   39978:	mov	x0, x25
   3997c:	str	x7, [sp, #304]
   39980:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   39984:	mov	x2, x22
   39988:	mov	x1, x27
   3998c:	mov	x0, x24
   39990:	mov	x4, x26
   39994:	mov	x3, x21
   39998:	bl	33448 <PyInit__decimal@@Base+0x17208>
   3999c:	ldrb	w2, [x27]
   399a0:	mov	x1, x24
   399a4:	mov	x0, x25
   399a8:	tst	w2, #0xe
   399ac:	b.ne	39ad8 <PyInit__decimal@@Base+0x1d898>  // b.any
   399b0:	ldr	x2, [x27, #24]
   399b4:	ldr	x3, [x27, #40]
   399b8:	add	x2, x3, x2, lsl #3
   399bc:	ldur	x2, [x2, #-8]
   399c0:	cbz	x2, 39ad8 <PyInit__decimal@@Base+0x1d898>
   399c4:	ldrb	w2, [sp, #112]
   399c8:	ldrb	w3, [sp, #160]
   399cc:	orr	w2, w2, w3
   399d0:	tst	w2, #0xe
   399d4:	and	w2, w2, #0xff
   399d8:	b.eq	399e4 <PyInit__decimal@@Base+0x1d7a4>  // b.none
   399dc:	tst	w2, #0xc
   399e0:	b.ne	39c2c <PyInit__decimal@@Base+0x1d9ec>  // b.any
   399e4:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   399e8:	cbz	w0, 39ad8 <PyInit__decimal@@Base+0x1d898>
   399ec:	add	x23, x23, #0x13
   399f0:	b	39908 <PyInit__decimal@@Base+0x1d6c8>
   399f4:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   399f8:	cbnz	w0, 39a14 <PyInit__decimal@@Base+0x1d7d4>
   399fc:	ldrb	w0, [x28]
   39a00:	tbz	w0, #0, 39a28 <PyInit__decimal@@Base+0x1d7e8>
   39a04:	mov	x2, x19
   39a08:	mov	x0, x27
   39a0c:	mov	w1, #0x100                 	// #256
   39a10:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   39a14:	ldp	x29, x30, [sp]
   39a18:	ldp	x19, x20, [sp, #16]
   39a1c:	ldp	x27, x28, [sp, #80]
   39a20:	add	sp, sp, #0x960
   39a24:	ret
   39a28:	mov	x0, x27
   39a2c:	mov	w2, #0x2                   	// #2
   39a30:	mov	w1, #0x0                   	// #0
   39a34:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   39a38:	ldp	x29, x30, [sp]
   39a3c:	ldp	x19, x20, [sp, #16]
   39a40:	ldp	x27, x28, [sp, #80]
   39a44:	add	sp, sp, #0x960
   39a48:	ret
   39a4c:	mov	x1, x28
   39a50:	mov	x2, x21
   39a54:	mov	x0, x27
   39a58:	mov	x4, x19
   39a5c:	add	x3, x21, #0x10
   39a60:	bl	39150 <PyInit__decimal@@Base+0x1cf10>
   39a64:	ldp	x2, x0, [x27, #8]
   39a68:	ldr	x1, [sp, #320]
   39a6c:	add	x0, x2, x0
   39a70:	sub	x0, x0, #0x1
   39a74:	cmp	x1, x0
   39a78:	b.le	39ac0 <PyInit__decimal@@Base+0x1d880>
   39a7c:	ldrb	w0, [x27]
   39a80:	tst	w0, #0xe
   39a84:	b.ne	39a9c <PyInit__decimal@@Base+0x1d85c>  // b.any
   39a88:	ldr	x0, [x27, #24]
   39a8c:	ldr	x3, [x27, #40]
   39a90:	add	x0, x3, x0, lsl #3
   39a94:	ldur	x0, [x0, #-8]
   39a98:	cbz	x0, 39ac0 <PyInit__decimal@@Base+0x1d880>
   39a9c:	ldr	x3, [sp, #304]
   39aa0:	add	x0, x1, #0x1
   39aa4:	sub	x0, x0, x3
   39aa8:	cmp	x2, x0
   39aac:	b.ge	39ac0 <PyInit__decimal@@Base+0x1d880>  // b.tcont
   39ab0:	ldr	w0, [x19]
   39ab4:	orr	w0, w0, #0x4000
   39ab8:	str	w0, [x19]
   39abc:	nop
   39ac0:	mov	x1, x21
   39ac4:	mov	x2, x19
   39ac8:	mov	x0, x27
   39acc:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   39ad0:	ldp	x21, x22, [sp, #32]
   39ad4:	b	39a14 <PyInit__decimal@@Base+0x1d7d4>
   39ad8:	ldp	x2, x0, [x27, #8]
   39adc:	ldr	w3, [x20, #40]
   39ae0:	ldr	x1, [sp, #320]
   39ae4:	str	w3, [sp, #344]
   39ae8:	add	x0, x2, x0
   39aec:	sub	x0, x0, #0x1
   39af0:	cmp	x1, x0
   39af4:	b.le	39b18 <PyInit__decimal@@Base+0x1d8d8>
   39af8:	ldrb	w0, [x27]
   39afc:	tst	w0, #0xe
   39b00:	b.ne	39c08 <PyInit__decimal@@Base+0x1d9c8>  // b.any
   39b04:	ldr	x0, [x27, #24]
   39b08:	ldr	x3, [x27, #40]
   39b0c:	add	x0, x3, x0, lsl #3
   39b10:	ldur	x0, [x0, #-8]
   39b14:	cbnz	x0, 39c08 <PyInit__decimal@@Base+0x1d9c8>
   39b18:	mov	x0, x27
   39b1c:	mov	x2, x19
   39b20:	mov	x1, x21
   39b24:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   39b28:	ldrb	w0, [sp, #112]
   39b2c:	tst	w0, #0xe0
   39b30:	b.ne	39b48 <PyInit__decimal@@Base+0x1d908>  // b.any
   39b34:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39b38:	ldr	x0, [sp, #152]
   39b3c:	ldr	x1, [x1, #1912]
   39b40:	blr	x1
   39b44:	ldrb	w0, [sp, #112]
   39b48:	tbnz	w0, #4, 39b5c <PyInit__decimal@@Base+0x1d91c>
   39b4c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39b50:	mov	x0, x25
   39b54:	ldr	x1, [x1, #1912]
   39b58:	blr	x1
   39b5c:	ldrb	w0, [sp, #160]
   39b60:	tst	w0, #0xe0
   39b64:	b.ne	39b7c <PyInit__decimal@@Base+0x1d93c>  // b.any
   39b68:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39b6c:	ldr	x0, [sp, #200]
   39b70:	ldr	x1, [x1, #1912]
   39b74:	blr	x1
   39b78:	ldrb	w0, [sp, #160]
   39b7c:	tbnz	w0, #4, 39b90 <PyInit__decimal@@Base+0x1d950>
   39b80:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39b84:	mov	x0, x24
   39b88:	ldr	x1, [x1, #1912]
   39b8c:	blr	x1
   39b90:	ldrb	w0, [sp, #208]
   39b94:	tst	w0, #0xe0
   39b98:	b.ne	39bb0 <PyInit__decimal@@Base+0x1d970>  // b.any
   39b9c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39ba0:	ldr	x0, [sp, #248]
   39ba4:	ldr	x1, [x1, #1912]
   39ba8:	blr	x1
   39bac:	ldrb	w0, [sp, #208]
   39bb0:	tbnz	w0, #4, 39bc4 <PyInit__decimal@@Base+0x1d984>
   39bb4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39bb8:	mov	x0, x22
   39bbc:	ldr	x1, [x1, #1912]
   39bc0:	blr	x1
   39bc4:	ldrb	w0, [sp, #256]
   39bc8:	tst	w0, #0xe0
   39bcc:	b.ne	39be4 <PyInit__decimal@@Base+0x1d9a4>  // b.any
   39bd0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39bd4:	ldr	x0, [sp, #296]
   39bd8:	ldr	x1, [x1, #1912]
   39bdc:	blr	x1
   39be0:	ldrb	w0, [sp, #256]
   39be4:	tbnz	w0, #4, 39c60 <PyInit__decimal@@Base+0x1da20>
   39be8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39bec:	add	x0, sp, #0x100
   39bf0:	ldr	x1, [x1, #1912]
   39bf4:	blr	x1
   39bf8:	ldp	x21, x22, [sp, #32]
   39bfc:	ldp	x23, x24, [sp, #48]
   39c00:	ldp	x25, x26, [sp, #64]
   39c04:	b	39a14 <PyInit__decimal@@Base+0x1d7d4>
   39c08:	ldr	x0, [sp, #304]
   39c0c:	add	x1, x1, #0x1
   39c10:	sub	x1, x1, x0
   39c14:	cmp	x2, x1
   39c18:	b.ge	39b18 <PyInit__decimal@@Base+0x1d8d8>  // b.tcont
   39c1c:	ldr	w0, [x19]
   39c20:	orr	w0, w0, #0x4000
   39c24:	str	w0, [x19]
   39c28:	b	39b18 <PyInit__decimal@@Base+0x1d8d8>
   39c2c:	ldr	w0, [x19]
   39c30:	add	x23, x23, #0x13
   39c34:	orr	w0, w0, #0x100
   39c38:	str	w0, [x19]
   39c3c:	b	39908 <PyInit__decimal@@Base+0x1d6c8>
   39c40:	mov	w2, #0x2                   	// #2
   39c44:	mov	w1, #0x1                   	// #1
   39c48:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   39c4c:	ldp	x29, x30, [sp]
   39c50:	ldp	x19, x20, [sp, #16]
   39c54:	ldp	x27, x28, [sp, #80]
   39c58:	add	sp, sp, #0x960
   39c5c:	ret
   39c60:	ldp	x21, x22, [sp, #32]
   39c64:	ldp	x23, x24, [sp, #48]
   39c68:	ldp	x25, x26, [sp, #64]
   39c6c:	b	39a14 <PyInit__decimal@@Base+0x1d7d4>
   39c70:	mov	x0, x27
   39c74:	mov	x3, #0x0                   	// #0
   39c78:	mov	x2, #0x0                   	// #0
   39c7c:	mov	w1, #0x0                   	// #0
   39c80:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   39c84:	b	39a14 <PyInit__decimal@@Base+0x1d7d4>
   39c88:	ldr	w2, [x19]
   39c8c:	mov	w3, #0x1840                	// #6208
   39c90:	lsr	x1, x4, #63
   39c94:	mov	x0, x27
   39c98:	orr	w2, w2, w3
   39c9c:	str	w2, [x19]
   39ca0:	mov	w2, #0x2                   	// #2
   39ca4:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   39ca8:	b	39a14 <PyInit__decimal@@Base+0x1d7d4>
   39cac:	add	x22, sp, #0x100
   39cb0:	mov	x2, x19
   39cb4:	mov	x0, x22
   39cb8:	mov	x1, x28
   39cbc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   39cc0:	cbz	w0, 39cd4 <PyInit__decimal@@Base+0x1da94>
   39cc4:	mov	x28, x22
   39cc8:	stp	x23, x24, [sp, #48]
   39ccc:	stp	x25, x26, [sp, #64]
   39cd0:	b	398e4 <PyInit__decimal@@Base+0x1d6a4>
   39cd4:	mov	x2, x19
   39cd8:	mov	x0, x28
   39cdc:	mov	w1, #0x200                 	// #512
   39ce0:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   39ce4:	ldp	x21, x22, [sp, #32]
   39ce8:	b	39a14 <PyInit__decimal@@Base+0x1d7d4>
   39cec:	nop
   39cf0:	sub	sp, sp, #0x2b0
   39cf4:	adrp	x6, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39cf8:	stp	x29, x30, [sp]
   39cfc:	mov	x29, sp
   39d00:	ldr	q0, [x6, #1760]
   39d04:	stp	x19, x20, [sp, #16]
   39d08:	mov	x20, x5
   39d0c:	stp	x21, x22, [sp, #32]
   39d10:	mov	x22, x1
   39d14:	mov	x1, x2
   39d18:	mov	x2, x5
   39d1c:	add	x5, sp, #0xb0
   39d20:	str	x25, [sp, #64]
   39d24:	mov	x25, x3
   39d28:	mov	w3, #0x30                  	// #48
   39d2c:	stp	x23, x24, [sp, #48]
   39d30:	add	x23, sp, #0x50
   39d34:	mov	x19, x0
   39d38:	mov	x24, x4
   39d3c:	mov	x0, x23
   39d40:	strb	w3, [sp, #80]
   39d44:	stp	xzr, xzr, [sp, #88]
   39d48:	stur	q0, [sp, #104]
   39d4c:	str	x5, [sp, #120]
   39d50:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   39d54:	cbz	w0, 39e54 <PyInit__decimal@@Base+0x1dc14>
   39d58:	add	x21, sp, #0x80
   39d5c:	mov	x0, x21
   39d60:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   39d64:	ldr	x0, [x25]
   39d68:	mov	w6, #0x6                   	// #6
   39d6c:	ldr	x5, [x22, #16]
   39d70:	add	x25, x21, #0x1c
   39d74:	ldr	w4, [x24]
   39d78:	mov	x1, x22
   39d7c:	cmp	x0, x5
   39d80:	mov	x2, x21
   39d84:	csel	x0, x0, x5, ge  // ge = tcont
   39d88:	mov	x3, x25
   39d8c:	add	x5, x0, #0x17
   39d90:	mov	x0, x19
   39d94:	str	x5, [sp, #128]
   39d98:	str	w6, [sp, #164]
   39d9c:	str	w4, [sp, #172]
   39da0:	bl	397b8 <PyInit__decimal@@Base+0x1d578>
   39da4:	mov	x4, x25
   39da8:	mov	x3, x21
   39dac:	mov	x2, x23
   39db0:	mov	x1, x19
   39db4:	mov	x0, x19
   39db8:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   39dbc:	mov	x2, x25
   39dc0:	mov	x1, x21
   39dc4:	mov	x0, x19
   39dc8:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   39dcc:	mov	x0, x19
   39dd0:	mov	x3, x20
   39dd4:	mov	x2, x21
   39dd8:	mov	x1, x19
   39ddc:	bl	37940 <PyInit__decimal@@Base+0x1b700>
   39de0:	ldrb	w0, [sp, #80]
   39de4:	tst	w0, #0xe0
   39de8:	b.ne	39e00 <PyInit__decimal@@Base+0x1dbc0>  // b.any
   39dec:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39df0:	ldr	x0, [sp, #120]
   39df4:	ldr	x1, [x1, #1912]
   39df8:	blr	x1
   39dfc:	ldrb	w0, [sp, #80]
   39e00:	tbz	w0, #4, 39e40 <PyInit__decimal@@Base+0x1dc00>
   39e04:	ldr	w0, [sp, #156]
   39e08:	mov	w3, #0x3be                 	// #958
   39e0c:	ldr	w2, [x20]
   39e10:	mov	w1, #0x1040                	// #4160
   39e14:	and	w0, w0, w3
   39e18:	orr	w0, w0, w2
   39e1c:	orr	w0, w0, w1
   39e20:	str	w0, [x20]
   39e24:	ldp	x29, x30, [sp]
   39e28:	ldp	x19, x20, [sp, #16]
   39e2c:	ldp	x21, x22, [sp, #32]
   39e30:	ldp	x23, x24, [sp, #48]
   39e34:	ldr	x25, [sp, #64]
   39e38:	add	sp, sp, #0x2b0
   39e3c:	ret
   39e40:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39e44:	mov	x0, x23
   39e48:	ldr	x1, [x1, #1912]
   39e4c:	blr	x1
   39e50:	b	39e04 <PyInit__decimal@@Base+0x1dbc4>
   39e54:	mov	x2, x20
   39e58:	mov	x0, x19
   39e5c:	mov	w1, #0x200                 	// #512
   39e60:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   39e64:	ldp	x29, x30, [sp]
   39e68:	ldp	x19, x20, [sp, #16]
   39e6c:	ldp	x21, x22, [sp, #32]
   39e70:	ldp	x23, x24, [sp, #48]
   39e74:	ldr	x25, [sp, #64]
   39e78:	add	sp, sp, #0x2b0
   39e7c:	ret
   39e80:	sub	sp, sp, #0x2b0
   39e84:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   39e88:	stp	x29, x30, [sp]
   39e8c:	mov	x29, sp
   39e90:	ldr	q0, [x5, #1760]
   39e94:	stp	x21, x22, [sp, #32]
   39e98:	mov	x21, x1
   39e9c:	add	x1, sp, #0xb0
   39ea0:	stp	x19, x20, [sp, #16]
   39ea4:	mov	x20, x3
   39ea8:	stp	x23, x24, [sp, #48]
   39eac:	mov	x24, x2
   39eb0:	mov	w2, #0x30                  	// #48
   39eb4:	add	x22, sp, #0x80
   39eb8:	mov	x19, x4
   39ebc:	mov	w23, w0
   39ec0:	mov	x0, x22
   39ec4:	str	x25, [sp, #64]
   39ec8:	add	x25, sp, #0x50
   39ecc:	strb	w2, [sp, #80]
   39ed0:	stp	xzr, xzr, [sp, #88]
   39ed4:	stur	q0, [sp, #104]
   39ed8:	str	x1, [sp, #120]
   39edc:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   39ee0:	ldr	x5, [x20]
   39ee4:	mov	x1, x24
   39ee8:	mov	x4, x19
   39eec:	mov	x0, x21
   39ef0:	add	x5, x5, #0x3
   39ef4:	add	x3, x22, #0x10
   39ef8:	mov	x2, x22
   39efc:	str	x5, [sp, #128]
   39f00:	bl	39150 <PyInit__decimal@@Base+0x1cf10>
   39f04:	ldr	x1, [sp, #128]
   39f08:	mov	x2, x19
   39f0c:	mov	x0, x25
   39f10:	bl	380b0 <PyInit__decimal@@Base+0x1be70>
   39f14:	cmp	w23, #0x1
   39f18:	b.ne	39f3c <PyInit__decimal@@Base+0x1dcfc>  // b.any
   39f1c:	ldp	x0, x1, [x20, #32]
   39f20:	stp	x0, x1, [sp, #160]
   39f24:	ldp	x2, x3, [x20]
   39f28:	stp	x2, x3, [sp, #128]
   39f2c:	mov	w0, #0x6                   	// #6
   39f30:	ldp	x2, x3, [x20, #16]
   39f34:	stp	x2, x3, [sp, #144]
   39f38:	str	w0, [sp, #164]
   39f3c:	mov	w0, #0x0                   	// #0
   39f40:	mov	x5, x19
   39f44:	mov	x4, x22
   39f48:	mov	x3, x25
   39f4c:	mov	x2, x21
   39f50:	mov	x1, x21
   39f54:	bl	34ba0 <PyInit__decimal@@Base+0x18960>
   39f58:	ldrb	w0, [sp, #80]
   39f5c:	tst	w0, #0xe0
   39f60:	b.ne	39f78 <PyInit__decimal@@Base+0x1dd38>  // b.any
   39f64:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39f68:	ldr	x0, [sp, #120]
   39f6c:	ldr	x1, [x1, #1912]
   39f70:	blr	x1
   39f74:	ldrb	w0, [sp, #80]
   39f78:	tbnz	w0, #4, 39f8c <PyInit__decimal@@Base+0x1dd4c>
   39f7c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   39f80:	mov	x0, x25
   39f84:	ldr	x1, [x1, #1912]
   39f88:	blr	x1
   39f8c:	ldp	x29, x30, [sp]
   39f90:	ldp	x19, x20, [sp, #16]
   39f94:	ldp	x21, x22, [sp, #32]
   39f98:	ldp	x23, x24, [sp, #48]
   39f9c:	ldr	x25, [sp, #64]
   39fa0:	add	sp, sp, #0x2b0
   39fa4:	ret
   39fa8:	sub	sp, sp, #0x950
   39fac:	mov	w6, #0x6                   	// #6
   39fb0:	stp	x29, x30, [sp]
   39fb4:	mov	x29, sp
   39fb8:	ldp	x8, x9, [x2, #32]
   39fbc:	stp	x19, x20, [sp, #16]
   39fc0:	mov	x19, x0
   39fc4:	stp	x27, x28, [sp, #80]
   39fc8:	mov	x20, x3
   39fcc:	mov	x27, x1
   39fd0:	stp	x8, x9, [sp, #320]
   39fd4:	ldrb	w4, [x1]
   39fd8:	ldp	x8, x9, [x2]
   39fdc:	stp	x8, x9, [sp, #288]
   39fe0:	tst	w4, #0xe
   39fe4:	ldp	x8, x9, [x2, #16]
   39fe8:	stp	x8, x9, [sp, #304]
   39fec:	str	w6, [sp, #324]
   39ff0:	b.ne	3a20c <PyInit__decimal@@Base+0x1dfcc>  // b.any
   39ff4:	mov	x28, x2
   39ff8:	ldr	x2, [x1, #24]
   39ffc:	ldr	x6, [x1, #40]
   3a000:	add	x1, x6, x2, lsl #3
   3a004:	ldur	x3, [x1, #-8]
   3a008:	cbz	x3, 3a4b0 <PyInit__decimal@@Base+0x1e270>
   3a00c:	and	w1, w4, #0x1
   3a010:	tbnz	w4, #0, 3a21c <PyInit__decimal@@Base+0x1dfdc>
   3a014:	adrp	x7, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3a018:	add	x4, x7, #0x180
   3a01c:	ldr	x0, [x4, #72]
   3a020:	cmp	x3, x0
   3a024:	b.cs	3a240 <PyInit__decimal@@Base+0x1e000>  // b.hs, b.nlast
   3a028:	ldr	x0, [x4, #32]
   3a02c:	cmp	x3, x0
   3a030:	b.cs	3a298 <PyInit__decimal@@Base+0x1e058>  // b.hs, b.nlast
   3a034:	ldr	x0, [x4, #16]
   3a038:	cmp	x3, x0
   3a03c:	b.cs	3a588 <PyInit__decimal@@Base+0x1e348>  // b.hs, b.nlast
   3a040:	ldr	x0, [x4, #8]
   3a044:	ldr	x4, [x7, #384]
   3a048:	cmp	x3, x0
   3a04c:	csel	x0, x4, x0, cc  // cc = lo, ul, last
   3a050:	cmp	x3, x0
   3a054:	b.eq	3a450 <PyInit__decimal@@Base+0x1e210>  // b.none
   3a058:	ldp	x0, x1, [x27, #8]
   3a05c:	add	x0, x0, x1
   3a060:	subs	x4, x0, #0x1
   3a064:	csneg	x0, x4, x0, pl  // pl = nfrst
   3a068:	bl	2a6f8 <PyInit__decimal@@Base+0xe4b8>
   3a06c:	sub	w0, w0, #0x1
   3a070:	ldr	x1, [x28, #8]
   3a074:	cmp	x1, w0, sxtw
   3a078:	b.lt	3a554 <PyInit__decimal@@Base+0x1e314>  // b.tstop
   3a07c:	ldr	w0, [x28, #44]
   3a080:	cbz	w0, 3a4d0 <PyInit__decimal@@Base+0x1e290>
   3a084:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3a088:	mov	w0, #0x30                  	// #48
   3a08c:	movi	v1.4s, #0x0
   3a090:	strb	w0, [sp, #96]
   3a094:	ldr	q0, [x1, #1760]
   3a098:	strb	w0, [sp, #144]
   3a09c:	strb	w0, [sp, #192]
   3a0a0:	add	x4, sp, #0x150
   3a0a4:	strb	w0, [sp, #240]
   3a0a8:	add	x0, sp, #0x200
   3a0ac:	stp	x21, x22, [sp, #32]
   3a0b0:	add	x3, sp, #0x350
   3a0b4:	add	x2, sp, #0x550
   3a0b8:	add	x1, sp, #0x750
   3a0bc:	str	x4, [sp, #136]
   3a0c0:	str	x3, [sp, #184]
   3a0c4:	cmp	x27, x19
   3a0c8:	str	x2, [sp, #232]
   3a0cc:	str	x1, [sp, #280]
   3a0d0:	stur	q0, [x0, #-248]
   3a0d4:	stur	q1, [sp, #104]
   3a0d8:	stur	q0, [sp, #120]
   3a0dc:	stur	q1, [sp, #152]
   3a0e0:	stur	q0, [sp, #168]
   3a0e4:	stur	q1, [sp, #200]
   3a0e8:	stur	q0, [sp, #216]
   3a0ec:	stur	q1, [sp, #248]
   3a0f0:	b.eq	3a5c8 <PyInit__decimal@@Base+0x1e388>  // b.none
   3a0f4:	stp	x23, x24, [sp, #48]
   3a0f8:	stp	x25, x26, [sp, #64]
   3a0fc:	add	x21, sp, #0x120
   3a100:	ldr	x23, [x28]
   3a104:	add	x26, x21, #0x1c
   3a108:	add	x22, sp, #0xc0
   3a10c:	add	x25, sp, #0x60
   3a110:	add	x24, sp, #0x90
   3a114:	add	x23, x23, #0x3
   3a118:	str	wzr, [sp, #328]
   3a11c:	nop
   3a120:	mov	x4, x20
   3a124:	mov	x3, x21
   3a128:	mov	x2, x27
   3a12c:	mov	x1, x19
   3a130:	mov	w0, #0x0                   	// #0
   3a134:	str	x23, [sp, #288]
   3a138:	bl	39e80 <PyInit__decimal@@Base+0x1dc40>
   3a13c:	ldp	x0, x3, [x19, #8]
   3a140:	ldr	x2, [sp, #288]
   3a144:	ldrb	w1, [sp, #192]
   3a148:	add	x0, x0, x3
   3a14c:	and	w1, w1, #0xfffffff0
   3a150:	sub	x0, x0, x2
   3a154:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3a158:	strb	w1, [sp, #192]
   3a15c:	ldr	q0, [x2, #2176]
   3a160:	str	x0, [sp, #200]
   3a164:	ldr	x1, [sp, #232]
   3a168:	mov	x0, x22
   3a16c:	str	q0, [x1]
   3a170:	mov	x1, #0x1                   	// #1
   3a174:	str	x1, [sp, #216]
   3a178:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3a17c:	ldr	x6, [x28]
   3a180:	mov	x4, x26
   3a184:	mov	x3, x21
   3a188:	mov	x2, x22
   3a18c:	mov	x1, x19
   3a190:	mov	x0, x25
   3a194:	str	x6, [sp, #288]
   3a198:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   3a19c:	mov	x2, x22
   3a1a0:	mov	x1, x19
   3a1a4:	mov	x0, x24
   3a1a8:	mov	x4, x26
   3a1ac:	mov	x3, x21
   3a1b0:	bl	33448 <PyInit__decimal@@Base+0x17208>
   3a1b4:	ldrb	w2, [x19]
   3a1b8:	mov	x1, x24
   3a1bc:	mov	x0, x25
   3a1c0:	tst	w2, #0xe
   3a1c4:	b.ne	3a2e8 <PyInit__decimal@@Base+0x1e0a8>  // b.any
   3a1c8:	ldr	x2, [x19, #24]
   3a1cc:	ldr	x3, [x19, #40]
   3a1d0:	add	x2, x3, x2, lsl #3
   3a1d4:	ldur	x2, [x2, #-8]
   3a1d8:	cbz	x2, 3a2e8 <PyInit__decimal@@Base+0x1e0a8>
   3a1dc:	ldrb	w4, [sp, #96]
   3a1e0:	ldrb	w2, [sp, #144]
   3a1e4:	orr	w4, w4, w2
   3a1e8:	tst	w4, #0xe
   3a1ec:	and	w4, w4, #0xff
   3a1f0:	b.eq	3a1fc <PyInit__decimal@@Base+0x1dfbc>  // b.none
   3a1f4:	tst	w4, #0xc
   3a1f8:	b.ne	3a43c <PyInit__decimal@@Base+0x1e1fc>  // b.any
   3a1fc:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3a200:	cbz	w0, 3a2e8 <PyInit__decimal@@Base+0x1e0a8>
   3a204:	add	x23, x23, #0x13
   3a208:	b	3a120 <PyInit__decimal@@Base+0x1dee0>
   3a20c:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3a210:	cbnz	w0, 3a22c <PyInit__decimal@@Base+0x1dfec>
   3a214:	ldrb	w0, [x27]
   3a218:	tbz	w0, #0, 3a274 <PyInit__decimal@@Base+0x1e034>
   3a21c:	mov	x2, x20
   3a220:	mov	x0, x19
   3a224:	mov	w1, #0x100                 	// #256
   3a228:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3a22c:	ldp	x29, x30, [sp]
   3a230:	ldp	x19, x20, [sp, #16]
   3a234:	ldp	x27, x28, [sp, #80]
   3a238:	add	sp, sp, #0x950
   3a23c:	ret
   3a240:	ldr	x7, [x4, #112]
   3a244:	cmp	x3, x7
   3a248:	b.cs	3a2c0 <PyInit__decimal@@Base+0x1e080>  // b.hs, b.nlast
   3a24c:	ldr	x7, [x4, #88]
   3a250:	cmp	x3, x7
   3a254:	b.cc	3a5b8 <PyInit__decimal@@Base+0x1e378>  // b.lo, b.ul, b.last
   3a258:	ldr	x0, [x4, #104]
   3a25c:	cmp	x3, x0
   3a260:	b.cs	3a050 <PyInit__decimal@@Base+0x1de10>  // b.hs, b.nlast
   3a264:	ldr	x0, [x4, #96]
   3a268:	cmp	x3, x0
   3a26c:	csel	x0, x0, x7, cs  // cs = hs, nlast
   3a270:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a274:	mov	x0, x19
   3a278:	mov	w2, #0x2                   	// #2
   3a27c:	mov	w1, #0x0                   	// #0
   3a280:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3a284:	ldp	x29, x30, [sp]
   3a288:	ldp	x19, x20, [sp, #16]
   3a28c:	ldp	x27, x28, [sp, #80]
   3a290:	add	sp, sp, #0x950
   3a294:	ret
   3a298:	ldr	x7, [x4, #48]
   3a29c:	cmp	x3, x7
   3a2a0:	b.cc	3a5a8 <PyInit__decimal@@Base+0x1e368>  // b.lo, b.ul, b.last
   3a2a4:	ldr	x0, [x4, #64]
   3a2a8:	cmp	x3, x0
   3a2ac:	b.cs	3a050 <PyInit__decimal@@Base+0x1de10>  // b.hs, b.nlast
   3a2b0:	ldr	x0, [x4, #56]
   3a2b4:	cmp	x3, x0
   3a2b8:	csel	x0, x0, x7, cs  // cs = hs, nlast
   3a2bc:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a2c0:	ldr	x0, [x4, #144]
   3a2c4:	cmp	x3, x0
   3a2c8:	b.cs	3a578 <PyInit__decimal@@Base+0x1e338>  // b.hs, b.nlast
   3a2cc:	ldr	x0, [x4, #128]
   3a2d0:	cmp	x3, x0
   3a2d4:	b.cs	3a598 <PyInit__decimal@@Base+0x1e358>  // b.hs, b.nlast
   3a2d8:	ldr	x0, [x4, #120]
   3a2dc:	cmp	x3, x0
   3a2e0:	csel	x0, x0, x7, cs  // cs = hs, nlast
   3a2e4:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a2e8:	ldp	x2, x0, [x19, #8]
   3a2ec:	ldr	w3, [x28, #40]
   3a2f0:	ldr	x1, [sp, #304]
   3a2f4:	str	w3, [sp, #328]
   3a2f8:	add	x0, x2, x0
   3a2fc:	sub	x0, x0, #0x1
   3a300:	cmp	x1, x0
   3a304:	b.le	3a328 <PyInit__decimal@@Base+0x1e0e8>
   3a308:	ldrb	w0, [x19]
   3a30c:	tst	w0, #0xe
   3a310:	b.ne	3a418 <PyInit__decimal@@Base+0x1e1d8>  // b.any
   3a314:	ldr	x0, [x19, #24]
   3a318:	ldr	x3, [x19, #40]
   3a31c:	add	x0, x3, x0, lsl #3
   3a320:	ldur	x0, [x0, #-8]
   3a324:	cbnz	x0, 3a418 <PyInit__decimal@@Base+0x1e1d8>
   3a328:	mov	x0, x19
   3a32c:	mov	x2, x20
   3a330:	mov	x1, x21
   3a334:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3a338:	ldrb	w0, [sp, #96]
   3a33c:	tst	w0, #0xe0
   3a340:	b.ne	3a358 <PyInit__decimal@@Base+0x1e118>  // b.any
   3a344:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a348:	ldr	x0, [sp, #136]
   3a34c:	ldr	x1, [x1, #1912]
   3a350:	blr	x1
   3a354:	ldrb	w0, [sp, #96]
   3a358:	tbnz	w0, #4, 3a36c <PyInit__decimal@@Base+0x1e12c>
   3a35c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a360:	mov	x0, x25
   3a364:	ldr	x1, [x1, #1912]
   3a368:	blr	x1
   3a36c:	ldrb	w0, [sp, #144]
   3a370:	tst	w0, #0xe0
   3a374:	b.ne	3a38c <PyInit__decimal@@Base+0x1e14c>  // b.any
   3a378:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a37c:	ldr	x0, [sp, #184]
   3a380:	ldr	x1, [x1, #1912]
   3a384:	blr	x1
   3a388:	ldrb	w0, [sp, #144]
   3a38c:	tbnz	w0, #4, 3a3a0 <PyInit__decimal@@Base+0x1e160>
   3a390:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a394:	mov	x0, x24
   3a398:	ldr	x1, [x1, #1912]
   3a39c:	blr	x1
   3a3a0:	ldrb	w0, [sp, #192]
   3a3a4:	tst	w0, #0xe0
   3a3a8:	b.ne	3a3c0 <PyInit__decimal@@Base+0x1e180>  // b.any
   3a3ac:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a3b0:	ldr	x0, [sp, #232]
   3a3b4:	ldr	x1, [x1, #1912]
   3a3b8:	blr	x1
   3a3bc:	ldrb	w0, [sp, #192]
   3a3c0:	tbnz	w0, #4, 3a3d4 <PyInit__decimal@@Base+0x1e194>
   3a3c4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a3c8:	mov	x0, x22
   3a3cc:	ldr	x1, [x1, #1912]
   3a3d0:	blr	x1
   3a3d4:	ldrb	w0, [sp, #240]
   3a3d8:	tst	w0, #0xe0
   3a3dc:	b.ne	3a3f4 <PyInit__decimal@@Base+0x1e1b4>  // b.any
   3a3e0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a3e4:	ldr	x0, [sp, #280]
   3a3e8:	ldr	x1, [x1, #1912]
   3a3ec:	blr	x1
   3a3f0:	ldrb	w0, [sp, #240]
   3a3f4:	tbnz	w0, #4, 3a544 <PyInit__decimal@@Base+0x1e304>
   3a3f8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a3fc:	add	x0, sp, #0xf0
   3a400:	ldr	x1, [x1, #1912]
   3a404:	blr	x1
   3a408:	ldp	x21, x22, [sp, #32]
   3a40c:	ldp	x23, x24, [sp, #48]
   3a410:	ldp	x25, x26, [sp, #64]
   3a414:	b	3a22c <PyInit__decimal@@Base+0x1dfec>
   3a418:	ldr	x0, [sp, #288]
   3a41c:	add	x1, x1, #0x1
   3a420:	sub	x1, x1, x0
   3a424:	cmp	x2, x1
   3a428:	b.ge	3a328 <PyInit__decimal@@Base+0x1e0e8>  // b.tcont
   3a42c:	ldr	w0, [x20]
   3a430:	orr	w0, w0, #0x4000
   3a434:	str	w0, [x20]
   3a438:	b	3a328 <PyInit__decimal@@Base+0x1e0e8>
   3a43c:	ldr	w0, [x20]
   3a440:	add	x23, x23, #0x13
   3a444:	orr	w0, w0, #0x100
   3a448:	str	w0, [x20]
   3a44c:	b	3a120 <PyInit__decimal@@Base+0x1dee0>
   3a450:	sub	x0, x2, #0x1
   3a454:	b	3a460 <PyInit__decimal@@Base+0x1e220>
   3a458:	ldr	x2, [x6, x0, lsl #3]
   3a45c:	cbnz	x2, 3a058 <PyInit__decimal@@Base+0x1de18>
   3a460:	subs	x0, x0, #0x1
   3a464:	b.pl	3a458 <PyInit__decimal@@Base+0x1e218>  // b.nfrst
   3a468:	ldp	x0, x2, [x27, #8]
   3a46c:	add	x0, x0, x2
   3a470:	subs	x2, x0, #0x1
   3a474:	b.pl	3a480 <PyInit__decimal@@Base+0x1e240>  // b.nfrst
   3a478:	mov	x1, #0x1                   	// #1
   3a47c:	sub	x2, x1, x0
   3a480:	mov	x3, #0x0                   	// #0
   3a484:	mov	x0, x19
   3a488:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3a48c:	mov	x2, x20
   3a490:	mov	x0, x19
   3a494:	add	x1, sp, #0x120
   3a498:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3a49c:	ldp	x29, x30, [sp]
   3a4a0:	ldp	x19, x20, [sp, #16]
   3a4a4:	ldp	x27, x28, [sp, #80]
   3a4a8:	add	sp, sp, #0x950
   3a4ac:	ret
   3a4b0:	mov	w2, #0x2                   	// #2
   3a4b4:	mov	w1, #0x1                   	// #1
   3a4b8:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3a4bc:	ldp	x29, x30, [sp]
   3a4c0:	ldp	x19, x20, [sp, #16]
   3a4c4:	ldp	x27, x28, [sp, #80]
   3a4c8:	add	sp, sp, #0x950
   3a4cc:	ret
   3a4d0:	mov	x2, x27
   3a4d4:	mov	x1, x19
   3a4d8:	mov	w0, #0x1                   	// #1
   3a4dc:	mov	x4, x20
   3a4e0:	add	x3, sp, #0x120
   3a4e4:	bl	39e80 <PyInit__decimal@@Base+0x1dc40>
   3a4e8:	ldp	x2, x0, [x19, #8]
   3a4ec:	ldr	x1, [sp, #304]
   3a4f0:	add	x0, x2, x0
   3a4f4:	sub	x0, x0, #0x1
   3a4f8:	cmp	x1, x0
   3a4fc:	b.le	3a22c <PyInit__decimal@@Base+0x1dfec>
   3a500:	ldrb	w0, [x19]
   3a504:	tst	w0, #0xe
   3a508:	b.ne	3a520 <PyInit__decimal@@Base+0x1e2e0>  // b.any
   3a50c:	ldr	x0, [x19, #24]
   3a510:	ldr	x3, [x19, #40]
   3a514:	add	x0, x3, x0, lsl #3
   3a518:	ldur	x0, [x0, #-8]
   3a51c:	cbz	x0, 3a22c <PyInit__decimal@@Base+0x1dfec>
   3a520:	ldr	x3, [sp, #288]
   3a524:	add	x0, x1, #0x1
   3a528:	sub	x0, x0, x3
   3a52c:	cmp	x2, x0
   3a530:	b.ge	3a22c <PyInit__decimal@@Base+0x1dfec>  // b.tcont
   3a534:	ldr	w0, [x20]
   3a538:	orr	w0, w0, #0x4000
   3a53c:	str	w0, [x20]
   3a540:	b	3a22c <PyInit__decimal@@Base+0x1dfec>
   3a544:	ldp	x21, x22, [sp, #32]
   3a548:	ldp	x23, x24, [sp, #48]
   3a54c:	ldp	x25, x26, [sp, #64]
   3a550:	b	3a22c <PyInit__decimal@@Base+0x1dfec>
   3a554:	ldr	w2, [x20]
   3a558:	mov	w3, #0x1840                	// #6208
   3a55c:	lsr	x1, x4, #63
   3a560:	mov	x0, x19
   3a564:	orr	w2, w2, w3
   3a568:	str	w2, [x20]
   3a56c:	mov	w2, #0x2                   	// #2
   3a570:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3a574:	b	3a22c <PyInit__decimal@@Base+0x1dfec>
   3a578:	ldr	x4, [x4, #152]
   3a57c:	cmp	x3, x4
   3a580:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   3a584:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a588:	ldr	x4, [x4, #24]
   3a58c:	cmp	x3, x4
   3a590:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   3a594:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a598:	ldr	x4, [x4, #136]
   3a59c:	cmp	x3, x4
   3a5a0:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   3a5a4:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a5a8:	ldr	x4, [x4, #40]
   3a5ac:	cmp	x3, x4
   3a5b0:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   3a5b4:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a5b8:	ldr	x4, [x4, #80]
   3a5bc:	cmp	x3, x4
   3a5c0:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   3a5c4:	b	3a050 <PyInit__decimal@@Base+0x1de10>
   3a5c8:	add	x21, sp, #0xf0
   3a5cc:	mov	x2, x20
   3a5d0:	mov	x0, x21
   3a5d4:	mov	x1, x27
   3a5d8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3a5dc:	cbz	w0, 3a5f0 <PyInit__decimal@@Base+0x1e3b0>
   3a5e0:	mov	x27, x21
   3a5e4:	stp	x23, x24, [sp, #48]
   3a5e8:	stp	x25, x26, [sp, #64]
   3a5ec:	b	3a0fc <PyInit__decimal@@Base+0x1debc>
   3a5f0:	mov	x2, x20
   3a5f4:	mov	x0, x27
   3a5f8:	mov	w1, #0x200                 	// #512
   3a5fc:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3a600:	ldp	x21, x22, [sp, #32]
   3a604:	b	3a22c <PyInit__decimal@@Base+0x1dfec>
   3a608:	sub	sp, sp, #0x2a0
   3a60c:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3a610:	stp	x29, x30, [sp]
   3a614:	mov	x29, sp
   3a618:	ldr	q0, [x5, #1760]
   3a61c:	stp	x23, x24, [sp, #48]
   3a620:	mov	x23, x2
   3a624:	add	x2, sp, #0xa0
   3a628:	stp	x21, x22, [sp, #32]
   3a62c:	mov	x22, x1
   3a630:	mov	w1, #0x30                  	// #48
   3a634:	add	x24, sp, #0x70
   3a638:	mov	x21, x3
   3a63c:	stp	x19, x20, [sp, #16]
   3a640:	mov	x20, x4
   3a644:	mov	x19, x0
   3a648:	mov	x0, x24
   3a64c:	strb	w1, [sp, #64]
   3a650:	stp	xzr, xzr, [sp, #72]
   3a654:	stur	q0, [sp, #88]
   3a658:	str	x2, [sp, #104]
   3a65c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   3a660:	mov	x4, #0x89e80000            	// #2313682944
   3a664:	ldrb	w5, [sp, #64]
   3a668:	movk	x4, #0x2304, lsl #32
   3a66c:	str	xzr, [sp, #72]
   3a670:	movk	x4, #0x8ac7, lsl #48
   3a674:	cmp	x23, x4
   3a678:	cset	x3, cs  // cs = hs, nlast
   3a67c:	and	w5, w5, #0xfffffff0
   3a680:	ldr	x2, [sp, #104]
   3a684:	add	x6, x3, #0x1
   3a688:	msub	x4, x3, x4, x23
   3a68c:	strb	w5, [sp, #64]
   3a690:	adrp	x5, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3a694:	add	x5, x5, #0x180
   3a698:	add	x1, x2, x6, lsl #3
   3a69c:	stp	x4, x3, [x2]
   3a6a0:	str	x6, [sp, #88]
   3a6a4:	ldr	x0, [x5, #72]
   3a6a8:	ldur	x4, [x1, #-8]
   3a6ac:	cmp	x4, x0
   3a6b0:	b.cs	3a748 <PyInit__decimal@@Base+0x1e508>  // b.hs, b.nlast
   3a6b4:	ldr	x0, [x5, #32]
   3a6b8:	cmp	x4, x0
   3a6bc:	b.cs	3a718 <PyInit__decimal@@Base+0x1e4d8>  // b.hs, b.nlast
   3a6c0:	ldr	x0, [x5, #16]
   3a6c4:	cmp	x4, x0
   3a6c8:	b.cs	3a864 <PyInit__decimal@@Base+0x1e624>  // b.hs, b.nlast
   3a6cc:	ldr	x0, [x5, #8]
   3a6d0:	lsl	x2, x3, #2
   3a6d4:	add	x2, x2, x3
   3a6d8:	cmp	x4, x0
   3a6dc:	ldrb	w4, [sp, #64]
   3a6e0:	cset	x6, cs  // cs = hs, nlast
   3a6e4:	add	x6, x6, #0x1
   3a6e8:	tst	w4, #0xe
   3a6ec:	add	x2, x6, x2, lsl #2
   3a6f0:	sub	x2, x2, x3
   3a6f4:	str	x2, [sp, #80]
   3a6f8:	b.ne	3a7a0 <PyInit__decimal@@Base+0x1e560>  // b.any
   3a6fc:	nop
   3a700:	add	x23, sp, #0x40
   3a704:	mov	x1, x24
   3a708:	mov	x0, x23
   3a70c:	mov	x2, x20
   3a710:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   3a714:	b	3a7ac <PyInit__decimal@@Base+0x1e56c>
   3a718:	ldr	x0, [x5, #48]
   3a71c:	cmp	x4, x0
   3a720:	b.cc	3a88c <PyInit__decimal@@Base+0x1e64c>  // b.lo, b.ul, b.last
   3a724:	ldr	x0, [x5, #64]
   3a728:	mov	x6, #0x9                   	// #9
   3a72c:	cmp	x4, x0
   3a730:	b.cs	3a780 <PyInit__decimal@@Base+0x1e540>  // b.hs, b.nlast
   3a734:	ldr	x0, [x5, #56]
   3a738:	cmp	x4, x0
   3a73c:	cset	x6, cs  // cs = hs, nlast
   3a740:	add	x6, x6, #0x7
   3a744:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a748:	ldr	x0, [x5, #112]
   3a74c:	cmp	x4, x0
   3a750:	b.cs	3a824 <PyInit__decimal@@Base+0x1e5e4>  // b.hs, b.nlast
   3a754:	ldr	x0, [x5, #88]
   3a758:	cmp	x4, x0
   3a75c:	b.cc	3a878 <PyInit__decimal@@Base+0x1e638>  // b.lo, b.ul, b.last
   3a760:	ldr	x0, [x5, #104]
   3a764:	mov	x6, #0xe                   	// #14
   3a768:	cmp	x4, x0
   3a76c:	b.cs	3a780 <PyInit__decimal@@Base+0x1e540>  // b.hs, b.nlast
   3a770:	ldr	x0, [x5, #96]
   3a774:	cmp	x4, x0
   3a778:	cset	x6, cs  // cs = hs, nlast
   3a77c:	add	x6, x6, #0xc
   3a780:	lsl	x2, x3, #2
   3a784:	ldrb	w4, [sp, #64]
   3a788:	add	x2, x2, x3
   3a78c:	tst	w4, #0xe
   3a790:	add	x2, x6, x2, lsl #2
   3a794:	sub	x2, x2, x3
   3a798:	str	x2, [sp, #80]
   3a79c:	b.eq	3a700 <PyInit__decimal@@Base+0x1e4c0>  // b.none
   3a7a0:	tst	w4, #0xc
   3a7a4:	add	x23, sp, #0x40
   3a7a8:	b.ne	3a8b4 <PyInit__decimal@@Base+0x1e674>  // b.any
   3a7ac:	mov	x0, x19
   3a7b0:	mov	x1, x22
   3a7b4:	mov	x4, x20
   3a7b8:	mov	x3, x21
   3a7bc:	mov	x2, x23
   3a7c0:	bl	2cfd0 <PyInit__decimal@@Base+0x10d90>
   3a7c4:	ldrb	w0, [x19]
   3a7c8:	tst	w0, #0xe
   3a7cc:	b.eq	3a8a0 <PyInit__decimal@@Base+0x1e660>  // b.none
   3a7d0:	tst	w0, #0xc
   3a7d4:	b.ne	3a8c8 <PyInit__decimal@@Base+0x1e688>  // b.any
   3a7d8:	ldrb	w0, [sp, #64]
   3a7dc:	tst	w0, #0xe0
   3a7e0:	b.ne	3a7f8 <PyInit__decimal@@Base+0x1e5b8>  // b.any
   3a7e4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a7e8:	ldr	x0, [sp, #104]
   3a7ec:	ldr	x1, [x1, #1912]
   3a7f0:	blr	x1
   3a7f4:	ldrb	w0, [sp, #64]
   3a7f8:	tbnz	w0, #4, 3a80c <PyInit__decimal@@Base+0x1e5cc>
   3a7fc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3a800:	mov	x0, x23
   3a804:	ldr	x1, [x1, #1912]
   3a808:	blr	x1
   3a80c:	ldp	x29, x30, [sp]
   3a810:	ldp	x19, x20, [sp, #16]
   3a814:	ldp	x21, x22, [sp, #32]
   3a818:	ldp	x23, x24, [sp, #48]
   3a81c:	add	sp, sp, #0x2a0
   3a820:	ret
   3a824:	ldr	x0, [x5, #144]
   3a828:	cmp	x4, x0
   3a82c:	b.cs	3a850 <PyInit__decimal@@Base+0x1e610>  // b.hs, b.nlast
   3a830:	ldr	x0, [x5, #128]
   3a834:	cmp	x4, x0
   3a838:	b.cs	3a8dc <PyInit__decimal@@Base+0x1e69c>  // b.hs, b.nlast
   3a83c:	ldr	x0, [x5, #120]
   3a840:	cmp	x4, x0
   3a844:	cset	x6, cs  // cs = hs, nlast
   3a848:	add	x6, x6, #0xf
   3a84c:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a850:	ldr	x0, [x5, #152]
   3a854:	cmp	x4, x0
   3a858:	cset	x6, cs  // cs = hs, nlast
   3a85c:	add	x6, x6, #0x13
   3a860:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a864:	ldr	x0, [x5, #24]
   3a868:	cmp	x4, x0
   3a86c:	cset	x6, cs  // cs = hs, nlast
   3a870:	add	x6, x6, #0x3
   3a874:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a878:	ldr	x0, [x5, #80]
   3a87c:	cmp	x4, x0
   3a880:	cset	x6, cs  // cs = hs, nlast
   3a884:	add	x6, x6, #0xa
   3a888:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a88c:	ldr	x0, [x5, #40]
   3a890:	cmp	x4, x0
   3a894:	cset	x6, cs  // cs = hs, nlast
   3a898:	add	x6, x6, #0x5
   3a89c:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a8a0:	mov	x2, x20
   3a8a4:	mov	x1, x21
   3a8a8:	mov	x0, x19
   3a8ac:	bl	2f128 <PyInit__decimal@@Base+0x12ee8>
   3a8b0:	b	3a7d8 <PyInit__decimal@@Base+0x1e598>
   3a8b4:	ldr	w2, [sp, #152]
   3a8b8:	mov	x0, x23
   3a8bc:	ldr	x1, [sp, #112]
   3a8c0:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   3a8c4:	b	3a7ac <PyInit__decimal@@Base+0x1e56c>
   3a8c8:	ldr	w2, [x21, #40]
   3a8cc:	mov	x0, x19
   3a8d0:	ldr	x1, [x21]
   3a8d4:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   3a8d8:	b	3a7d8 <PyInit__decimal@@Base+0x1e598>
   3a8dc:	ldr	x0, [x5, #136]
   3a8e0:	cmp	x4, x0
   3a8e4:	cset	x6, cs  // cs = hs, nlast
   3a8e8:	add	x6, x6, #0x11
   3a8ec:	b	3a780 <PyInit__decimal@@Base+0x1e540>
   3a8f0:	sxtw	x2, w2
   3a8f4:	b	38e80 <PyInit__decimal@@Base+0x1cc40>
   3a8f8:	mov	w2, w2
   3a8fc:	b	3a608 <PyInit__decimal@@Base+0x1e3c8>
   3a900:	b	38e80 <PyInit__decimal@@Base+0x1cc40>
   3a904:	nop
   3a908:	b	3a608 <PyInit__decimal@@Base+0x1e3c8>
   3a90c:	nop
   3a910:	stp	x29, x30, [sp, #-48]!
   3a914:	mov	x29, sp
   3a918:	stp	x19, x20, [sp, #16]
   3a91c:	mov	x19, x1
   3a920:	mov	x20, x0
   3a924:	stp	x21, x22, [sp, #32]
   3a928:	mov	x22, x2
   3a92c:	mov	x21, x3
   3a930:	ldrb	w4, [x1]
   3a934:	tst	w4, #0xe
   3a938:	b.ne	3a9dc <PyInit__decimal@@Base+0x1e79c>  // b.any
   3a93c:	ldr	x0, [x19, #24]
   3a940:	ldr	x1, [x19, #40]
   3a944:	add	x0, x1, x0, lsl #3
   3a948:	ldur	x0, [x0, #-8]
   3a94c:	cbz	x0, 3a9ac <PyInit__decimal@@Base+0x1e76c>
   3a950:	mov	x1, x19
   3a954:	mov	x2, x21
   3a958:	mov	x0, x20
   3a95c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3a960:	cbz	w0, 3aa04 <PyInit__decimal@@Base+0x1e7c4>
   3a964:	ldrb	w0, [x20]
   3a968:	eor	w0, w0, #0x1
   3a96c:	strb	w0, [x20]
   3a970:	tst	w0, #0xe
   3a974:	b.eq	3a990 <PyInit__decimal@@Base+0x1e750>  // b.none
   3a978:	tst	w0, #0xc
   3a97c:	b.ne	3aa0c <PyInit__decimal@@Base+0x1e7cc>  // b.any
   3a980:	ldp	x19, x20, [sp, #16]
   3a984:	ldp	x21, x22, [sp, #32]
   3a988:	ldp	x29, x30, [sp], #48
   3a98c:	ret
   3a990:	mov	x2, x21
   3a994:	mov	x1, x22
   3a998:	mov	x0, x20
   3a99c:	ldp	x19, x20, [sp, #16]
   3a9a0:	ldp	x21, x22, [sp, #32]
   3a9a4:	ldp	x29, x30, [sp], #48
   3a9a8:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   3a9ac:	ldr	w0, [x22, #36]
   3a9b0:	cmp	w0, #0x3
   3a9b4:	b.eq	3a950 <PyInit__decimal@@Base+0x1e710>  // b.none
   3a9b8:	mov	x1, x19
   3a9bc:	mov	x2, x21
   3a9c0:	mov	x0, x20
   3a9c4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3a9c8:	cbz	w0, 3aa04 <PyInit__decimal@@Base+0x1e7c4>
   3a9cc:	ldrb	w0, [x20]
   3a9d0:	and	w0, w0, #0xfe
   3a9d4:	strb	w0, [x20]
   3a9d8:	b	3a970 <PyInit__decimal@@Base+0x1e730>
   3a9dc:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3a9e0:	cbnz	w0, 3a980 <PyInit__decimal@@Base+0x1e740>
   3a9e4:	ldrb	w0, [x19]
   3a9e8:	tst	w0, #0xe
   3a9ec:	b.eq	3a93c <PyInit__decimal@@Base+0x1e6fc>  // b.none
   3a9f0:	mov	x1, x19
   3a9f4:	mov	x2, x21
   3a9f8:	mov	x0, x20
   3a9fc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3aa00:	cbnz	w0, 3a964 <PyInit__decimal@@Base+0x1e724>
   3aa04:	ldrb	w0, [x20]
   3aa08:	b	3a970 <PyInit__decimal@@Base+0x1e730>
   3aa0c:	ldr	w2, [x22, #40]
   3aa10:	mov	x0, x20
   3aa14:	ldr	x1, [x22]
   3aa18:	ldp	x19, x20, [sp, #16]
   3aa1c:	ldp	x21, x22, [sp, #32]
   3aa20:	ldp	x29, x30, [sp], #48
   3aa24:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   3aa28:	stp	x29, x30, [sp, #-48]!
   3aa2c:	mov	x29, sp
   3aa30:	stp	x19, x20, [sp, #16]
   3aa34:	mov	x19, x1
   3aa38:	mov	x20, x0
   3aa3c:	stp	x21, x22, [sp, #32]
   3aa40:	mov	x22, x2
   3aa44:	mov	x21, x3
   3aa48:	ldrb	w4, [x1]
   3aa4c:	tst	w4, #0xe
   3aa50:	b.ne	3aa78 <PyInit__decimal@@Base+0x1e838>  // b.any
   3aa54:	tbz	w4, #0, 3aa98 <PyInit__decimal@@Base+0x1e858>
   3aa58:	mov	x3, x21
   3aa5c:	mov	x2, x22
   3aa60:	mov	x1, x19
   3aa64:	mov	x0, x20
   3aa68:	ldp	x19, x20, [sp, #16]
   3aa6c:	ldp	x21, x22, [sp, #32]
   3aa70:	ldp	x29, x30, [sp], #48
   3aa74:	b	3a910 <PyInit__decimal@@Base+0x1e6d0>
   3aa78:	tst	w4, #0xc
   3aa7c:	b.ne	3ab24 <PyInit__decimal@@Base+0x1e8e4>  // b.any
   3aa80:	tbnz	w4, #0, 3aa58 <PyInit__decimal@@Base+0x1e818>
   3aa84:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3aa88:	cbnz	w0, 3aadc <PyInit__decimal@@Base+0x1e89c>
   3aa8c:	ldrb	w0, [x19]
   3aa90:	tst	w0, #0xe
   3aa94:	b.ne	3aab8 <PyInit__decimal@@Base+0x1e878>  // b.any
   3aa98:	ldr	x0, [x19, #24]
   3aa9c:	ldr	x1, [x19, #40]
   3aaa0:	add	x0, x1, x0, lsl #3
   3aaa4:	ldur	x0, [x0, #-8]
   3aaa8:	cbnz	x0, 3aab8 <PyInit__decimal@@Base+0x1e878>
   3aaac:	ldr	w0, [x22, #36]
   3aab0:	cmp	w0, #0x3
   3aab4:	b.ne	3ab68 <PyInit__decimal@@Base+0x1e928>  // b.any
   3aab8:	mov	x1, x19
   3aabc:	mov	x2, x21
   3aac0:	mov	x0, x20
   3aac4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3aac8:	ldrb	w0, [x20]
   3aacc:	tst	w0, #0xe
   3aad0:	b.eq	3ab08 <PyInit__decimal@@Base+0x1e8c8>  // b.none
   3aad4:	tst	w0, #0xc
   3aad8:	b.ne	3aaec <PyInit__decimal@@Base+0x1e8ac>  // b.any
   3aadc:	ldp	x19, x20, [sp, #16]
   3aae0:	ldp	x21, x22, [sp, #32]
   3aae4:	ldp	x29, x30, [sp], #48
   3aae8:	ret
   3aaec:	ldr	w2, [x22, #40]
   3aaf0:	mov	x0, x20
   3aaf4:	ldr	x1, [x22]
   3aaf8:	ldp	x19, x20, [sp, #16]
   3aafc:	ldp	x21, x22, [sp, #32]
   3ab00:	ldp	x29, x30, [sp], #48
   3ab04:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   3ab08:	mov	x2, x21
   3ab0c:	mov	x1, x22
   3ab10:	mov	x0, x20
   3ab14:	ldp	x19, x20, [sp, #16]
   3ab18:	ldp	x21, x22, [sp, #32]
   3ab1c:	ldp	x29, x30, [sp], #48
   3ab20:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   3ab24:	mov	x2, x3
   3ab28:	ldr	w3, [x3]
   3ab2c:	ubfx	x4, x4, #3, #1
   3ab30:	orr	w4, w3, w4, lsl #8
   3ab34:	str	w4, [x21]
   3ab38:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ab3c:	ldrb	w1, [x20]
   3ab40:	mov	x0, x20
   3ab44:	and	w1, w1, #0xfffffff1
   3ab48:	orr	w1, w1, #0x4
   3ab4c:	strb	w1, [x20]
   3ab50:	ldr	w2, [x22, #40]
   3ab54:	ldr	x1, [x22]
   3ab58:	ldp	x19, x20, [sp, #16]
   3ab5c:	ldp	x21, x22, [sp, #32]
   3ab60:	ldp	x29, x30, [sp], #48
   3ab64:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   3ab68:	mov	x1, x19
   3ab6c:	mov	x2, x21
   3ab70:	mov	x0, x20
   3ab74:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ab78:	cbz	w0, 3aac8 <PyInit__decimal@@Base+0x1e888>
   3ab7c:	ldrb	w0, [x20]
   3ab80:	and	w0, w0, #0xfe
   3ab84:	strb	w0, [x20]
   3ab88:	b	3aacc <PyInit__decimal@@Base+0x1e88c>
   3ab8c:	nop
   3ab90:	stp	x29, x30, [sp, #-48]!
   3ab94:	mov	x29, sp
   3ab98:	stp	x19, x20, [sp, #16]
   3ab9c:	mov	x19, x1
   3aba0:	mov	x20, x0
   3aba4:	stp	x21, x22, [sp, #32]
   3aba8:	mov	x22, x2
   3abac:	mov	x21, x3
   3abb0:	ldrb	w4, [x1]
   3abb4:	tst	w4, #0xe
   3abb8:	b.ne	3ac2c <PyInit__decimal@@Base+0x1e9ec>  // b.any
   3abbc:	ldr	x0, [x19, #24]
   3abc0:	ldr	x1, [x19, #40]
   3abc4:	add	x0, x1, x0, lsl #3
   3abc8:	ldur	x0, [x0, #-8]
   3abcc:	cbnz	x0, 3abdc <PyInit__decimal@@Base+0x1e99c>
   3abd0:	ldr	w0, [x22, #36]
   3abd4:	cmp	w0, #0x3
   3abd8:	b.ne	3ac54 <PyInit__decimal@@Base+0x1ea14>  // b.any
   3abdc:	mov	x1, x19
   3abe0:	mov	x2, x21
   3abe4:	mov	x0, x20
   3abe8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3abec:	ldrb	w0, [x20]
   3abf0:	tst	w0, #0xe
   3abf4:	b.eq	3ac10 <PyInit__decimal@@Base+0x1e9d0>  // b.none
   3abf8:	tst	w0, #0xc
   3abfc:	b.ne	3ac78 <PyInit__decimal@@Base+0x1ea38>  // b.any
   3ac00:	ldp	x19, x20, [sp, #16]
   3ac04:	ldp	x21, x22, [sp, #32]
   3ac08:	ldp	x29, x30, [sp], #48
   3ac0c:	ret
   3ac10:	mov	x2, x21
   3ac14:	mov	x1, x22
   3ac18:	mov	x0, x20
   3ac1c:	ldp	x19, x20, [sp, #16]
   3ac20:	ldp	x21, x22, [sp, #32]
   3ac24:	ldp	x29, x30, [sp], #48
   3ac28:	b	2f128 <PyInit__decimal@@Base+0x12ee8>
   3ac2c:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3ac30:	cbnz	w0, 3ac00 <PyInit__decimal@@Base+0x1e9c0>
   3ac34:	ldrb	w0, [x19]
   3ac38:	tst	w0, #0xe
   3ac3c:	b.eq	3abbc <PyInit__decimal@@Base+0x1e97c>  // b.none
   3ac40:	mov	x1, x19
   3ac44:	mov	x2, x21
   3ac48:	mov	x0, x20
   3ac4c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ac50:	b	3abec <PyInit__decimal@@Base+0x1e9ac>
   3ac54:	mov	x1, x19
   3ac58:	mov	x2, x21
   3ac5c:	mov	x0, x20
   3ac60:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ac64:	cbz	w0, 3abec <PyInit__decimal@@Base+0x1e9ac>
   3ac68:	ldrb	w0, [x20]
   3ac6c:	and	w0, w0, #0xfe
   3ac70:	strb	w0, [x20]
   3ac74:	b	3abf0 <PyInit__decimal@@Base+0x1e9b0>
   3ac78:	ldr	w2, [x22, #40]
   3ac7c:	mov	x0, x20
   3ac80:	ldr	x1, [x22]
   3ac84:	ldp	x19, x20, [sp, #16]
   3ac88:	ldp	x21, x22, [sp, #32]
   3ac8c:	ldp	x29, x30, [sp], #48
   3ac90:	b	2af08 <PyInit__decimal@@Base+0xecc8>
   3ac94:	nop
   3ac98:	stp	x29, x30, [sp, #-176]!
   3ac9c:	mov	w6, #0xffffff90            	// #-112
   3aca0:	mov	x4, #0x1                   	// #1
   3aca4:	mov	x29, sp
   3aca8:	strb	w6, [sp, #128]
   3acac:	add	x5, sp, #0x48
   3acb0:	ldr	x7, [x2]
   3acb4:	stp	x19, x20, [sp, #16]
   3acb8:	mov	x19, x2
   3acbc:	ldr	x6, [x2, #16]
   3acc0:	stp	x21, x22, [sp, #32]
   3acc4:	mov	x20, x1
   3acc8:	sub	x8, x6, x7
   3accc:	str	x4, [sp, #72]
   3acd0:	stp	x8, x4, [sp, #136]
   3acd4:	mov	x21, x0
   3acd8:	mov	x22, x3
   3acdc:	stp	x4, x4, [sp, #152]
   3ace0:	ldrb	w4, [x1]
   3ace4:	str	x5, [sp, #168]
   3ace8:	tst	w4, #0xe
   3acec:	b.eq	3ad38 <PyInit__decimal@@Base+0x1eaf8>  // b.none
   3acf0:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3acf4:	cbnz	w0, 3ad28 <PyInit__decimal@@Base+0x1eae8>
   3acf8:	ldrb	w0, [x20]
   3acfc:	tbnz	w0, #0, 3ae14 <PyInit__decimal@@Base+0x1ebd4>
   3ad00:	ldrb	w3, [x21]
   3ad04:	mov	x0, x21
   3ad08:	mov	x2, x22
   3ad0c:	mov	x1, x19
   3ad10:	and	w3, w3, #0xfffffff0
   3ad14:	strb	w3, [x21]
   3ad18:	bl	2b600 <PyInit__decimal@@Base+0xf3c0>
   3ad1c:	ldrb	w0, [x21]
   3ad20:	tst	w0, #0xc
   3ad24:	b.eq	3adf4 <PyInit__decimal@@Base+0x1ebb4>  // b.none
   3ad28:	ldp	x19, x20, [sp, #16]
   3ad2c:	ldp	x21, x22, [sp, #32]
   3ad30:	ldp	x29, x30, [sp], #176
   3ad34:	ret
   3ad38:	mov	x2, x3
   3ad3c:	mov	x4, #0x300000000           	// #12884901888
   3ad40:	ldr	x5, [x19, #8]
   3ad44:	stp	x7, x5, [sp, #80]
   3ad48:	ldr	x3, [x19, #40]
   3ad4c:	stp	x6, xzr, [sp, #96]
   3ad50:	stp	x4, x3, [sp, #112]
   3ad54:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ad58:	cbz	w0, 3ad28 <PyInit__decimal@@Base+0x1eae8>
   3ad5c:	add	x19, sp, #0x50
   3ad60:	str	x23, [sp, #48]
   3ad64:	add	x23, x19, #0x1c
   3ad68:	mov	x0, x21
   3ad6c:	mov	x1, x19
   3ad70:	mov	x2, x23
   3ad74:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3ad78:	ldr	w0, [sp, #108]
   3ad7c:	tst	w0, #0x3fe
   3ad80:	b.eq	3adac <PyInit__decimal@@Base+0x1eb6c>  // b.none
   3ad84:	ldr	w1, [x22]
   3ad88:	mov	w2, #0x3be                 	// #958
   3ad8c:	and	w0, w0, w2
   3ad90:	orr	w0, w1, w0
   3ad94:	ldr	x23, [sp, #48]
   3ad98:	str	w0, [x22]
   3ad9c:	ldp	x19, x20, [sp, #16]
   3ada0:	ldp	x21, x22, [sp, #32]
   3ada4:	ldp	x29, x30, [sp], #176
   3ada8:	ret
   3adac:	mov	x4, x23
   3adb0:	mov	x3, x19
   3adb4:	mov	x1, x20
   3adb8:	mov	x0, x21
   3adbc:	add	x2, sp, #0x80
   3adc0:	str	wzr, [sp, #108]
   3adc4:	bl	33448 <PyInit__decimal@@Base+0x17208>
   3adc8:	ldr	w1, [sp, #108]
   3adcc:	mov	w2, #0x3be                 	// #958
   3add0:	ldr	w0, [x22]
   3add4:	and	w1, w1, w2
   3add8:	orr	w0, w0, w1
   3addc:	ldr	x23, [sp, #48]
   3ade0:	str	w0, [x22]
   3ade4:	ldp	x19, x20, [sp, #16]
   3ade8:	ldp	x21, x22, [sp, #32]
   3adec:	ldp	x29, x30, [sp], #176
   3adf0:	ret
   3adf4:	ldp	x1, x0, [x19]
   3adf8:	ldp	x19, x20, [sp, #16]
   3adfc:	add	x0, x0, #0x1
   3ae00:	sub	x0, x0, x1
   3ae04:	str	x0, [x21, #8]
   3ae08:	ldp	x21, x22, [sp, #32]
   3ae0c:	ldp	x29, x30, [sp], #176
   3ae10:	ret
   3ae14:	mov	x2, x22
   3ae18:	mov	x1, x20
   3ae1c:	mov	x0, x21
   3ae20:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ae24:	ldp	x19, x20, [sp, #16]
   3ae28:	ldp	x21, x22, [sp, #32]
   3ae2c:	ldp	x29, x30, [sp], #176
   3ae30:	ret
   3ae34:	nop
   3ae38:	stp	x29, x30, [sp, #-176]!
   3ae3c:	mov	w6, #0xffffff90            	// #-112
   3ae40:	mov	x4, #0x1                   	// #1
   3ae44:	mov	x29, sp
   3ae48:	strb	w6, [sp, #128]
   3ae4c:	add	x5, sp, #0x48
   3ae50:	ldr	x7, [x2]
   3ae54:	stp	x19, x20, [sp, #16]
   3ae58:	mov	x19, x2
   3ae5c:	ldr	x6, [x2, #16]
   3ae60:	stp	x21, x22, [sp, #32]
   3ae64:	mov	x20, x1
   3ae68:	sub	x8, x6, x7
   3ae6c:	str	x4, [sp, #72]
   3ae70:	stp	x8, x4, [sp, #136]
   3ae74:	mov	x22, x0
   3ae78:	mov	x21, x3
   3ae7c:	stp	x4, x4, [sp, #152]
   3ae80:	ldrb	w4, [x1]
   3ae84:	str	x5, [sp, #168]
   3ae88:	tst	w4, #0xe
   3ae8c:	b.eq	3aed8 <PyInit__decimal@@Base+0x1ec98>  // b.none
   3ae90:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3ae94:	cbnz	w0, 3aec8 <PyInit__decimal@@Base+0x1ec88>
   3ae98:	ldrb	w0, [x20]
   3ae9c:	tbz	w0, #0, 3afc0 <PyInit__decimal@@Base+0x1ed80>
   3aea0:	ldrb	w3, [x22]
   3aea4:	mov	x0, x22
   3aea8:	mov	x2, x21
   3aeac:	mov	x1, x19
   3aeb0:	and	w3, w3, #0xfffffff0
   3aeb4:	strb	w3, [x22]
   3aeb8:	bl	2b600 <PyInit__decimal@@Base+0xf3c0>
   3aebc:	ldrb	w0, [x22]
   3aec0:	tst	w0, #0xc
   3aec4:	b.eq	3af94 <PyInit__decimal@@Base+0x1ed54>  // b.none
   3aec8:	ldp	x19, x20, [sp, #16]
   3aecc:	ldp	x21, x22, [sp, #32]
   3aed0:	ldp	x29, x30, [sp], #176
   3aed4:	ret
   3aed8:	mov	x2, x3
   3aedc:	mov	x4, #0x200000000           	// #8589934592
   3aee0:	ldr	x5, [x19, #8]
   3aee4:	stp	x7, x5, [sp, #80]
   3aee8:	ldr	x3, [x19, #40]
   3aeec:	stp	x6, xzr, [sp, #96]
   3aef0:	stp	x4, x3, [sp, #112]
   3aef4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3aef8:	cbz	w0, 3aec8 <PyInit__decimal@@Base+0x1ec88>
   3aefc:	add	x19, sp, #0x50
   3af00:	str	x23, [sp, #48]
   3af04:	add	x23, x19, #0x1c
   3af08:	mov	x0, x22
   3af0c:	mov	x1, x19
   3af10:	mov	x2, x23
   3af14:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3af18:	ldr	w0, [sp, #108]
   3af1c:	tst	w0, #0x3fe
   3af20:	b.eq	3af4c <PyInit__decimal@@Base+0x1ed0c>  // b.none
   3af24:	ldr	w1, [x21]
   3af28:	mov	w2, #0x3be                 	// #958
   3af2c:	and	w0, w0, w2
   3af30:	orr	w0, w1, w0
   3af34:	ldr	x23, [sp, #48]
   3af38:	str	w0, [x21]
   3af3c:	ldp	x19, x20, [sp, #16]
   3af40:	ldp	x21, x22, [sp, #32]
   3af44:	ldp	x29, x30, [sp], #176
   3af48:	ret
   3af4c:	mov	x4, x23
   3af50:	mov	x3, x19
   3af54:	mov	x1, x20
   3af58:	mov	x0, x22
   3af5c:	add	x2, sp, #0x80
   3af60:	str	wzr, [sp, #108]
   3af64:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   3af68:	ldr	w1, [sp, #108]
   3af6c:	mov	w2, #0x3be                 	// #958
   3af70:	ldr	w0, [x21]
   3af74:	and	w1, w1, w2
   3af78:	orr	w0, w0, w1
   3af7c:	ldr	x23, [sp, #48]
   3af80:	str	w0, [x21]
   3af84:	ldp	x19, x20, [sp, #16]
   3af88:	ldp	x21, x22, [sp, #32]
   3af8c:	ldp	x29, x30, [sp], #176
   3af90:	ret
   3af94:	and	w0, w0, #0xfffffff0
   3af98:	orr	w0, w0, #0x1
   3af9c:	strb	w0, [x22]
   3afa0:	ldp	x1, x0, [x19]
   3afa4:	ldp	x19, x20, [sp, #16]
   3afa8:	add	x0, x0, #0x1
   3afac:	sub	x0, x0, x1
   3afb0:	str	x0, [x22, #8]
   3afb4:	ldp	x21, x22, [sp, #32]
   3afb8:	ldp	x29, x30, [sp], #176
   3afbc:	ret
   3afc0:	mov	x2, x21
   3afc4:	mov	x1, x20
   3afc8:	mov	x0, x22
   3afcc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3afd0:	ldp	x19, x20, [sp, #16]
   3afd4:	ldp	x21, x22, [sp, #32]
   3afd8:	ldp	x29, x30, [sp], #176
   3afdc:	ret
   3afe0:	stp	x29, x30, [sp, #-64]!
   3afe4:	mov	x29, sp
   3afe8:	stp	x19, x20, [sp, #16]
   3afec:	mov	x19, x0
   3aff0:	mov	x20, x4
   3aff4:	stp	x21, x22, [sp, #32]
   3aff8:	mov	x22, x1
   3affc:	mov	x21, x2
   3b000:	str	x23, [sp, #48]
   3b004:	mov	x23, x3
   3b008:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   3b00c:	cbz	w0, 3b024 <PyInit__decimal@@Base+0x1ede4>
   3b010:	ldp	x19, x20, [sp, #16]
   3b014:	ldp	x21, x22, [sp, #32]
   3b018:	ldr	x23, [sp, #48]
   3b01c:	ldp	x29, x30, [sp], #64
   3b020:	ret
   3b024:	mov	x1, x21
   3b028:	mov	x0, x22
   3b02c:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3b030:	cmp	w0, #0x0
   3b034:	cbz	w0, 3b0d8 <PyInit__decimal@@Base+0x1ee98>
   3b038:	mov	x1, x22
   3b03c:	mov	x3, x20
   3b040:	mov	x2, x23
   3b044:	mov	x0, x19
   3b048:	b.lt	3b0d0 <PyInit__decimal@@Base+0x1ee90>  // b.tstop
   3b04c:	bl	3ac98 <PyInit__decimal@@Base+0x1ea58>
   3b050:	ldrb	w1, [x19]
   3b054:	tbnz	w1, #1, 3b0ac <PyInit__decimal@@Base+0x1ee6c>
   3b058:	ldp	x0, x3, [x19, #8]
   3b05c:	ldr	x2, [x23, #16]
   3b060:	add	x0, x0, x3
   3b064:	sub	x0, x0, #0x1
   3b068:	cmp	x2, x0
   3b06c:	b.le	3b010 <PyInit__decimal@@Base+0x1edd0>
   3b070:	ldr	w2, [x20]
   3b074:	mov	w0, #0x7040                	// #28736
   3b078:	tst	w1, #0xe
   3b07c:	orr	w0, w2, w0
   3b080:	str	w0, [x20]
   3b084:	b.ne	3b010 <PyInit__decimal@@Base+0x1edd0>  // b.any
   3b088:	ldr	x0, [x19, #24]
   3b08c:	ldr	x1, [x19, #40]
   3b090:	add	x0, x1, x0, lsl #3
   3b094:	ldur	x0, [x0, #-8]
   3b098:	cbnz	x0, 3b010 <PyInit__decimal@@Base+0x1edd0>
   3b09c:	mov	w0, #0x7041                	// #28737
   3b0a0:	orr	w2, w2, w0
   3b0a4:	str	w2, [x20]
   3b0a8:	b	3b010 <PyInit__decimal@@Base+0x1edd0>
   3b0ac:	ldr	w0, [x20]
   3b0b0:	mov	w1, #0x1840                	// #6208
   3b0b4:	ldp	x21, x22, [sp, #32]
   3b0b8:	orr	w0, w0, w1
   3b0bc:	str	w0, [x20]
   3b0c0:	ldp	x19, x20, [sp, #16]
   3b0c4:	ldr	x23, [sp, #48]
   3b0c8:	ldp	x29, x30, [sp], #64
   3b0cc:	ret
   3b0d0:	bl	3ae38 <PyInit__decimal@@Base+0x1ebf8>
   3b0d4:	b	3b050 <PyInit__decimal@@Base+0x1ee10>
   3b0d8:	ldrb	w21, [x21]
   3b0dc:	mov	x2, x20
   3b0e0:	mov	x1, x22
   3b0e4:	mov	x0, x19
   3b0e8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3b0ec:	cbz	w0, 3b010 <PyInit__decimal@@Base+0x1edd0>
   3b0f0:	ldrb	w0, [x19]
   3b0f4:	bfxil	w0, w21, #0, #1
   3b0f8:	strb	w0, [x19]
   3b0fc:	b	3b010 <PyInit__decimal@@Base+0x1edd0>
   3b100:	stp	x29, x30, [sp, #-144]!
   3b104:	mov	x29, sp
   3b108:	stp	x19, x20, [sp, #16]
   3b10c:	mov	x19, x1
   3b110:	mov	x20, x2
   3b114:	stp	x21, x22, [sp, #32]
   3b118:	mov	x22, x4
   3b11c:	stp	x23, x24, [sp, #48]
   3b120:	mov	x24, x0
   3b124:	mov	x23, x3
   3b128:	stp	x25, x26, [sp, #64]
   3b12c:	ldrb	w7, [x1]
   3b130:	tst	w7, #0xe
   3b134:	b.ne	3b144 <PyInit__decimal@@Base+0x1ef04>  // b.any
   3b138:	ldrb	w8, [x2]
   3b13c:	ands	w9, w8, #0xe
   3b140:	b.eq	3b290 <PyInit__decimal@@Base+0x1f050>  // b.none
   3b144:	mov	x4, x22
   3b148:	mov	x3, x23
   3b14c:	mov	x2, x20
   3b150:	mov	x1, x19
   3b154:	mov	x0, x24
   3b158:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   3b15c:	mov	w21, w0
   3b160:	cbnz	w0, 3b278 <PyInit__decimal@@Base+0x1f038>
   3b164:	ldrb	w8, [x20]
   3b168:	mov	w25, #0x0                   	// #0
   3b16c:	ldrb	w7, [x19]
   3b170:	ands	w10, w8, #0xe
   3b174:	and	w9, w7, #0xe
   3b178:	b.eq	3b40c <PyInit__decimal@@Base+0x1f1cc>  // b.none
   3b17c:	cbz	w9, 3b2c4 <PyInit__decimal@@Base+0x1f084>
   3b180:	tbz	w7, #0, 3b308 <PyInit__decimal@@Base+0x1f0c8>
   3b184:	cbz	w21, 3b3ac <PyInit__decimal@@Base+0x1f16c>
   3b188:	tbnz	w8, #1, 3b3ac <PyInit__decimal@@Base+0x1f16c>
   3b18c:	tbnz	w7, #1, 3b364 <PyInit__decimal@@Base+0x1f124>
   3b190:	cbnz	w10, 3b1a8 <PyInit__decimal@@Base+0x1ef68>
   3b194:	ldr	x0, [x20, #24]
   3b198:	ldr	x1, [x20, #40]
   3b19c:	add	x0, x1, x0, lsl #3
   3b1a0:	ldur	x0, [x0, #-8]
   3b1a4:	cbz	x0, 3b37c <PyInit__decimal@@Base+0x1f13c>
   3b1a8:	adrp	x26, 62000 <PyInit__decimal@@Base+0x45dc0>
   3b1ac:	mov	x0, x19
   3b1b0:	add	x1, x26, #0xc58
   3b1b4:	str	wzr, [sp, #96]
   3b1b8:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   3b1bc:	cbz	w0, 3b490 <PyInit__decimal@@Base+0x1f250>
   3b1c0:	str	x27, [sp, #80]
   3b1c4:	ldrb	w0, [x19]
   3b1c8:	and	w0, w0, #0xe
   3b1cc:	mov	w2, #0x50                  	// #80
   3b1d0:	orr	w2, w0, w2
   3b1d4:	mov	x1, x22
   3b1d8:	ldp	x27, x0, [x20, #8]
   3b1dc:	strb	w2, [sp, #96]
   3b1e0:	ldur	q1, [x19, #8]
   3b1e4:	ldur	q0, [x19, #24]
   3b1e8:	ldr	x3, [x19, #40]
   3b1ec:	add	x27, x27, x0
   3b1f0:	add	x0, sp, #0x60
   3b1f4:	stur	q1, [sp, #104]
   3b1f8:	stur	q0, [sp, #120]
   3b1fc:	str	x3, [sp, #136]
   3b200:	bl	2f388 <PyInit__decimal@@Base+0x13148>
   3b204:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   3b208:	cmp	x0, x1
   3b20c:	sub	x0, x0, #0x1
   3b210:	b.eq	3b5dc <PyInit__decimal@@Base+0x1f39c>  // b.none
   3b214:	add	x27, x0, x27
   3b218:	ldrb	w2, [x20]
   3b21c:	ldp	x1, x0, [sp, #104]
   3b220:	add	x0, x1, x0
   3b224:	and	w1, w2, #0x1
   3b228:	sub	x0, x0, #0x1
   3b22c:	lsr	x0, x0, #63
   3b230:	cmp	w1, w0
   3b234:	b.eq	3b434 <PyInit__decimal@@Base+0x1f1f4>  // b.none
   3b238:	ldr	x3, [x23]
   3b23c:	ldr	x4, [x23, #16]
   3b240:	sub	x4, x4, x3
   3b244:	add	x0, x4, #0x1
   3b248:	bl	2a6f8 <PyInit__decimal@@Base+0xe4b8>
   3b24c:	cmp	x27, w0, sxtw
   3b250:	b.gt	3b47c <PyInit__decimal@@Base+0x1f23c>
   3b254:	cbz	w21, 3b580 <PyInit__decimal@@Base+0x1f340>
   3b258:	mov	x5, x22
   3b25c:	mov	x4, x23
   3b260:	mov	w3, w25
   3b264:	mov	x2, x20
   3b268:	mov	x1, x19
   3b26c:	mov	x0, x24
   3b270:	bl	365d0 <PyInit__decimal@@Base+0x1a390>
   3b274:	ldr	x27, [sp, #80]
   3b278:	ldp	x19, x20, [sp, #16]
   3b27c:	ldp	x21, x22, [sp, #32]
   3b280:	ldp	x23, x24, [sp, #48]
   3b284:	ldp	x25, x26, [sp, #64]
   3b288:	ldp	x29, x30, [sp], #144
   3b28c:	ret
   3b290:	mov	x0, x2
   3b294:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3b298:	mov	w21, w0
   3b29c:	cbz	w0, 3b344 <PyInit__decimal@@Base+0x1f104>
   3b2a0:	and	w25, w7, #0x1
   3b2a4:	tbz	w7, #0, 3b2b8 <PyInit__decimal@@Base+0x1f078>
   3b2a8:	mov	x0, x20
   3b2ac:	bl	2b8b8 <PyInit__decimal@@Base+0xf678>
   3b2b0:	cmp	w0, #0x0
   3b2b4:	cset	w25, ne  // ne = any
   3b2b8:	mov	w10, #0x0                   	// #0
   3b2bc:	mov	w21, #0x1                   	// #1
   3b2c0:	cbnz	w9, 3b180 <PyInit__decimal@@Base+0x1ef40>
   3b2c4:	ldr	x0, [x19, #24]
   3b2c8:	ldr	x1, [x19, #40]
   3b2cc:	add	x0, x1, x0, lsl #3
   3b2d0:	ldur	x0, [x0, #-8]
   3b2d4:	cbnz	x0, 3b180 <PyInit__decimal@@Base+0x1ef40>
   3b2d8:	cbz	w10, 3b394 <PyInit__decimal@@Base+0x1f154>
   3b2dc:	mov	w1, w25
   3b2e0:	mov	x0, x24
   3b2e4:	tbz	w8, #0, 3b3e0 <PyInit__decimal@@Base+0x1f1a0>
   3b2e8:	mov	w2, #0x2                   	// #2
   3b2ec:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3b2f0:	ldp	x19, x20, [sp, #16]
   3b2f4:	ldp	x21, x22, [sp, #32]
   3b2f8:	ldp	x23, x24, [sp, #48]
   3b2fc:	ldp	x25, x26, [sp, #64]
   3b300:	ldp	x29, x30, [sp], #144
   3b304:	ret
   3b308:	tbz	w8, #1, 3b18c <PyInit__decimal@@Base+0x1ef4c>
   3b30c:	adrp	x21, 62000 <PyInit__decimal@@Base+0x45dc0>
   3b310:	add	x21, x21, #0xc58
   3b314:	mov	x0, x19
   3b318:	mov	x1, x21
   3b31c:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3b320:	cbz	w0, 3b4e4 <PyInit__decimal@@Base+0x1f2a4>
   3b324:	ldrb	w1, [x20]
   3b328:	sbfx	x1, x1, #0, #1
   3b32c:	lsl	w1, w1, #1
   3b330:	madd	w0, w1, w0, w0
   3b334:	tbnz	w0, #31, 3b428 <PyInit__decimal@@Base+0x1f1e8>
   3b338:	mov	w1, w25
   3b33c:	mov	x0, x24
   3b340:	b	3b2e8 <PyInit__decimal@@Base+0x1f0a8>
   3b344:	ldr	x0, [x19, #24]
   3b348:	ldr	x1, [x19, #40]
   3b34c:	add	x0, x1, x0, lsl #3
   3b350:	ldur	x0, [x0, #-8]
   3b354:	cbz	x0, 3b398 <PyInit__decimal@@Base+0x1f158>
   3b358:	mov	w10, #0x0                   	// #0
   3b35c:	mov	w25, #0x0                   	// #0
   3b360:	b	3b180 <PyInit__decimal@@Base+0x1ef40>
   3b364:	cbnz	w10, 3b3d4 <PyInit__decimal@@Base+0x1f194>
   3b368:	ldr	x0, [x20, #24]
   3b36c:	ldr	x1, [x20, #40]
   3b370:	add	x0, x1, x0, lsl #3
   3b374:	ldur	x0, [x0, #-8]
   3b378:	cbnz	x0, 3b3d4 <PyInit__decimal@@Base+0x1f194>
   3b37c:	mov	w1, w25
   3b380:	mov	x0, x24
   3b384:	mov	x3, #0x0                   	// #0
   3b388:	mov	x2, #0x1                   	// #1
   3b38c:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3b390:	b	3b278 <PyInit__decimal@@Base+0x1f038>
   3b394:	mov	w9, w25
   3b398:	ldr	x0, [x20, #24]
   3b39c:	ldr	x1, [x20, #40]
   3b3a0:	add	x0, x1, x0, lsl #3
   3b3a4:	ldur	x0, [x0, #-8]
   3b3a8:	cbnz	x0, 3b404 <PyInit__decimal@@Base+0x1f1c4>
   3b3ac:	mov	x2, x22
   3b3b0:	mov	x0, x24
   3b3b4:	mov	w1, #0x100                 	// #256
   3b3b8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3b3bc:	ldp	x19, x20, [sp, #16]
   3b3c0:	ldp	x21, x22, [sp, #32]
   3b3c4:	ldp	x23, x24, [sp, #48]
   3b3c8:	ldp	x25, x26, [sp, #64]
   3b3cc:	ldp	x29, x30, [sp], #144
   3b3d0:	ret
   3b3d4:	mov	w1, w25
   3b3d8:	mov	x0, x24
   3b3dc:	tbz	w8, #0, 3b2e8 <PyInit__decimal@@Base+0x1f0a8>
   3b3e0:	mov	x3, #0x0                   	// #0
   3b3e4:	mov	x2, #0x0                   	// #0
   3b3e8:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3b3ec:	ldp	x19, x20, [sp, #16]
   3b3f0:	ldp	x21, x22, [sp, #32]
   3b3f4:	ldp	x23, x24, [sp, #48]
   3b3f8:	ldp	x25, x26, [sp, #64]
   3b3fc:	ldp	x29, x30, [sp], #144
   3b400:	ret
   3b404:	mov	w25, w9
   3b408:	b	3b2dc <PyInit__decimal@@Base+0x1f09c>
   3b40c:	mov	x0, x20
   3b410:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3b414:	mov	w25, w10
   3b418:	mov	w21, w0
   3b41c:	cbnz	w0, 3b2a0 <PyInit__decimal@@Base+0x1f060>
   3b420:	cbnz	w9, 3b180 <PyInit__decimal@@Base+0x1ef40>
   3b424:	b	3b2c4 <PyInit__decimal@@Base+0x1f084>
   3b428:	mov	w1, w25
   3b42c:	mov	x0, x24
   3b430:	b	3b3e0 <PyInit__decimal@@Base+0x1f1a0>
   3b434:	ldr	x0, [x23, #8]
   3b438:	bl	2a6f8 <PyInit__decimal@@Base+0xe4b8>
   3b43c:	cmp	x27, w0, sxtw
   3b440:	b.le	3b254 <PyInit__decimal@@Base+0x1f014>
   3b444:	mov	x3, #0x1                   	// #1
   3b448:	mov	w1, w25
   3b44c:	movk	x3, #0x4ec8, lsl #16
   3b450:	mov	x2, #0x1                   	// #1
   3b454:	movk	x3, #0x6d67, lsl #32
   3b458:	mov	x0, x24
   3b45c:	movk	x3, #0x1bc1, lsl #48
   3b460:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3b464:	mov	x2, x22
   3b468:	mov	x1, x23
   3b46c:	mov	x0, x24
   3b470:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3b474:	ldr	x27, [sp, #80]
   3b478:	b	3b278 <PyInit__decimal@@Base+0x1f038>
   3b47c:	mov	x3, x4
   3b480:	mov	w1, w25
   3b484:	mov	x0, x24
   3b488:	mov	x2, #0x1                   	// #1
   3b48c:	b	3b460 <PyInit__decimal@@Base+0x1f220>
   3b490:	mov	x0, x20
   3b494:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3b498:	cbz	w0, 3b52c <PyInit__decimal@@Base+0x1f2ec>
   3b49c:	ldrb	w0, [x20]
   3b4a0:	tbnz	w0, #0, 3b37c <PyInit__decimal@@Base+0x1f13c>
   3b4a4:	ldr	x2, [x19, #8]
   3b4a8:	add	x19, sp, #0x60
   3b4ac:	mov	x1, x20
   3b4b0:	mov	x0, x24
   3b4b4:	mov	x3, x23
   3b4b8:	mov	x4, x19
   3b4bc:	neg	x2, x2
   3b4c0:	bl	38e80 <PyInit__decimal@@Base+0x1cc40>
   3b4c4:	ldr	w0, [sp, #96]
   3b4c8:	mov	w1, #0x3be                 	// #958
   3b4cc:	ands	w0, w0, w1
   3b4d0:	b.eq	3b5f4 <PyInit__decimal@@Base+0x1f3b4>  // b.none
   3b4d4:	ldr	w1, [x22]
   3b4d8:	orr	w0, w1, w0
   3b4dc:	str	w0, [x22]
   3b4e0:	b	3b278 <PyInit__decimal@@Base+0x1f038>
   3b4e4:	ldr	x19, [x23]
   3b4e8:	mov	x1, x21
   3b4ec:	mov	x3, x22
   3b4f0:	mov	x0, x24
   3b4f4:	sub	x2, x19, #0x1
   3b4f8:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3b4fc:	ldrb	w0, [x24]
   3b500:	mov	x1, #0x1                   	// #1
   3b504:	sub	x1, x1, x19
   3b508:	and	w0, w0, #0xfffffff0
   3b50c:	orr	w25, w25, w0
   3b510:	strb	w25, [x24]
   3b514:	ldr	w0, [x22]
   3b518:	str	x1, [x24, #8]
   3b51c:	mov	w1, #0x1040                	// #4160
   3b520:	orr	w0, w0, w1
   3b524:	str	w0, [x22]
   3b528:	b	3b278 <PyInit__decimal@@Base+0x1f038>
   3b52c:	ldrb	w0, [x19]
   3b530:	tbnz	w0, #0, 3b654 <PyInit__decimal@@Base+0x1f414>
   3b534:	ldr	x19, [x23]
   3b538:	mov	w1, #0x1040                	// #4160
   3b53c:	ldr	w0, [x22]
   3b540:	sub	x19, x19, #0x1
   3b544:	orr	w0, w0, w1
   3b548:	str	w0, [x22]
   3b54c:	mov	x3, x22
   3b550:	add	x1, x26, #0xc58
   3b554:	mov	x2, x19
   3b558:	mov	x0, x24
   3b55c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3b560:	cbz	w0, 3b278 <PyInit__decimal@@Base+0x1f038>
   3b564:	ldrb	w0, [x24]
   3b568:	neg	x19, x19
   3b56c:	str	x19, [x24, #8]
   3b570:	and	w0, w0, #0xfffffff0
   3b574:	orr	w25, w25, w0
   3b578:	strb	w25, [x24]
   3b57c:	b	3b278 <PyInit__decimal@@Base+0x1f038>
   3b580:	mov	x0, x24
   3b584:	mov	x2, x20
   3b588:	mov	x1, x19
   3b58c:	mov	x5, x22
   3b590:	add	x4, x23, #0x2c
   3b594:	mov	x3, x23
   3b598:	bl	39cf0 <PyInit__decimal@@Base+0x1dab0>
   3b59c:	ldrb	w0, [x24]
   3b5a0:	tst	w0, #0xe
   3b5a4:	b.eq	3b5c0 <PyInit__decimal@@Base+0x1f380>  // b.none
   3b5a8:	tbz	w0, #1, 3b464 <PyInit__decimal@@Base+0x1f224>
   3b5ac:	mov	x3, #0x1                   	// #1
   3b5b0:	mov	w1, #0x0                   	// #0
   3b5b4:	mov	x2, x3
   3b5b8:	movk	x3, #0x4ec8, lsl #16
   3b5bc:	b	3b454 <PyInit__decimal@@Base+0x1f214>
   3b5c0:	add	x26, x26, #0xc58
   3b5c4:	mov	x0, x24
   3b5c8:	mov	x1, x26
   3b5cc:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3b5d0:	cbz	w0, 3b628 <PyInit__decimal@@Base+0x1f3e8>
   3b5d4:	ldrb	w0, [x24]
   3b5d8:	b	3b5a8 <PyInit__decimal@@Base+0x1f368>
   3b5dc:	mov	x2, x22
   3b5e0:	mov	x0, x24
   3b5e4:	mov	w1, #0x200                 	// #512
   3b5e8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3b5ec:	ldr	x27, [sp, #80]
   3b5f0:	b	3b278 <PyInit__decimal@@Base+0x1f038>
   3b5f4:	mov	x1, x19
   3b5f8:	mov	x0, x24
   3b5fc:	bl	2bfd8 <PyInit__decimal@@Base+0xfd98>
   3b600:	mov	x19, x0
   3b604:	ldr	x1, [x23]
   3b608:	sub	x0, x1, #0x1
   3b60c:	cmp	x19, x0
   3b610:	b.le	3b54c <PyInit__decimal@@Base+0x1f30c>
   3b614:	ldr	w1, [x22]
   3b618:	mov	x19, x0
   3b61c:	orr	w0, w1, #0x1000
   3b620:	str	w0, [x22]
   3b624:	b	3b54c <PyInit__decimal@@Base+0x1f30c>
   3b628:	ldr	x19, [x23]
   3b62c:	mov	x1, x26
   3b630:	mov	x3, x22
   3b634:	mov	x0, x24
   3b638:	sub	x2, x19, #0x1
   3b63c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3b640:	mov	x1, #0x1                   	// #1
   3b644:	ldrb	w0, [x24]
   3b648:	sub	x1, x1, x19
   3b64c:	str	x1, [x24, #8]
   3b650:	b	3b5a8 <PyInit__decimal@@Base+0x1f368>
   3b654:	str	x27, [sp, #80]
   3b658:	b	3b1c8 <PyInit__decimal@@Base+0x1ef88>
   3b65c:	nop
   3b660:	stp	x29, x30, [sp, #-64]!
   3b664:	mov	x29, sp
   3b668:	stp	x19, x20, [sp, #16]
   3b66c:	mov	x19, x1
   3b670:	mov	x20, x2
   3b674:	stp	x21, x22, [sp, #32]
   3b678:	mov	x21, x3
   3b67c:	mov	x22, x0
   3b680:	str	x23, [sp, #48]
   3b684:	mov	x23, x4
   3b688:	ldrb	w5, [x1]
   3b68c:	tst	w5, #0xe
   3b690:	b.ne	3b708 <PyInit__decimal@@Base+0x1f4c8>  // b.any
   3b694:	ldrb	w2, [x2]
   3b698:	tst	w2, #0xe
   3b69c:	b.ne	3b708 <PyInit__decimal@@Base+0x1f4c8>  // b.any
   3b6a0:	ldr	x20, [x20, #8]
   3b6a4:	ldr	x2, [x3, #8]
   3b6a8:	cmp	x2, x20
   3b6ac:	b.lt	3b734 <PyInit__decimal@@Base+0x1f4f4>  // b.tstop
   3b6b0:	ldr	x2, [x21, #16]
   3b6b4:	ldr	x3, [x3]
   3b6b8:	add	x2, x2, #0x1
   3b6bc:	sub	x2, x2, x3
   3b6c0:	cmp	x20, x2
   3b6c4:	b.lt	3b734 <PyInit__decimal@@Base+0x1f4f4>  // b.tstop
   3b6c8:	ldr	x2, [x1, #24]
   3b6cc:	ldr	x4, [x1, #40]
   3b6d0:	add	x2, x4, x2, lsl #3
   3b6d4:	ldur	x2, [x2, #-8]
   3b6d8:	cbnz	x2, 3b788 <PyInit__decimal@@Base+0x1f548>
   3b6dc:	and	w1, w5, #0x1
   3b6e0:	mov	x3, x20
   3b6e4:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3b6e8:	mov	x2, x23
   3b6ec:	mov	x1, x21
   3b6f0:	mov	x0, x22
   3b6f4:	ldp	x19, x20, [sp, #16]
   3b6f8:	ldp	x21, x22, [sp, #32]
   3b6fc:	ldr	x23, [sp, #48]
   3b700:	ldp	x29, x30, [sp], #64
   3b704:	b	2f360 <PyInit__decimal@@Base+0x13120>
   3b708:	mov	x3, x21
   3b70c:	mov	x4, x23
   3b710:	mov	x2, x20
   3b714:	mov	x1, x19
   3b718:	mov	x0, x22
   3b71c:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   3b720:	cbnz	w0, 3b754 <PyInit__decimal@@Base+0x1f514>
   3b724:	ldrb	w0, [x19]
   3b728:	tbz	w0, #1, 3b734 <PyInit__decimal@@Base+0x1f4f4>
   3b72c:	ldrb	w0, [x20]
   3b730:	tbnz	w0, #1, 3b768 <PyInit__decimal@@Base+0x1f528>
   3b734:	mov	x2, x23
   3b738:	mov	x0, x22
   3b73c:	ldp	x19, x20, [sp, #16]
   3b740:	mov	w1, #0x100                 	// #256
   3b744:	ldp	x21, x22, [sp, #32]
   3b748:	ldr	x23, [sp, #48]
   3b74c:	ldp	x29, x30, [sp], #64
   3b750:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   3b754:	ldp	x19, x20, [sp, #16]
   3b758:	ldp	x21, x22, [sp, #32]
   3b75c:	ldr	x23, [sp, #48]
   3b760:	ldp	x29, x30, [sp], #64
   3b764:	ret
   3b768:	mov	x2, x23
   3b76c:	mov	x1, x19
   3b770:	mov	x0, x22
   3b774:	ldp	x19, x20, [sp, #16]
   3b778:	ldp	x21, x22, [sp, #32]
   3b77c:	ldr	x23, [sp, #48]
   3b780:	ldp	x29, x30, [sp], #64
   3b784:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3b788:	ldp	x5, x4, [x1, #8]
   3b78c:	sub	x2, x5, x20
   3b790:	add	x4, x2, x4
   3b794:	cmp	x4, x3
   3b798:	b.gt	3b734 <PyInit__decimal@@Base+0x1f4f4>
   3b79c:	tbnz	x2, #63, 3b800 <PyInit__decimal@@Base+0x1f5c0>
   3b7a0:	mov	x3, x23
   3b7a4:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3b7a8:	cbz	w0, 3b754 <PyInit__decimal@@Base+0x1f514>
   3b7ac:	ldr	x1, [x22, #16]
   3b7b0:	mov	w3, #0x0                   	// #0
   3b7b4:	str	x20, [x22, #8]
   3b7b8:	ldr	x0, [x21, #8]
   3b7bc:	add	x20, x20, x1
   3b7c0:	sub	x20, x20, #0x1
   3b7c4:	cmp	x0, x20
   3b7c8:	b.lt	3b734 <PyInit__decimal@@Base+0x1f4f4>  // b.tstop
   3b7cc:	ldr	x0, [x21, #16]
   3b7d0:	ldr	x1, [x21]
   3b7d4:	add	x0, x0, #0x1
   3b7d8:	sub	x0, x0, x1
   3b7dc:	cmp	x20, x0
   3b7e0:	b.lt	3b734 <PyInit__decimal@@Base+0x1f4f4>  // b.tstop
   3b7e4:	ldr	w4, [x23]
   3b7e8:	mov	x1, x21
   3b7ec:	mov	x0, x22
   3b7f0:	mov	x2, x23
   3b7f4:	orr	w3, w4, w3
   3b7f8:	str	w3, [x23]
   3b7fc:	b	3b6f4 <PyInit__decimal@@Base+0x1f4b4>
   3b800:	sub	x2, x20, x5
   3b804:	mov	x3, x23
   3b808:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   3b80c:	mov	x19, x0
   3b810:	cmn	x0, #0x1
   3b814:	b.eq	3b754 <PyInit__decimal@@Base+0x1f514>  // b.none
   3b818:	ldr	w0, [x21, #36]
   3b81c:	str	x20, [x22, #8]
   3b820:	cmp	w0, #0x4
   3b824:	b.eq	3b988 <PyInit__decimal@@Base+0x1f748>  // b.none
   3b828:	b.gt	3b908 <PyInit__decimal@@Base+0x1f6c8>
   3b82c:	cmp	w0, #0x2
   3b830:	b.eq	3b958 <PyInit__decimal@@Base+0x1f718>  // b.none
   3b834:	cmp	w0, #0x3
   3b838:	b.ne	3b858 <PyInit__decimal@@Base+0x1f618>  // b.any
   3b83c:	cbz	x19, 3b94c <PyInit__decimal@@Base+0x1f70c>
   3b840:	ldrb	w0, [x22]
   3b844:	and	w0, w0, #0x1
   3b848:	cbnz	w0, 3b868 <PyInit__decimal@@Base+0x1f628>
   3b84c:	mov	w3, #0x1040                	// #4160
   3b850:	ldr	x1, [x22, #16]
   3b854:	b	3b7b8 <PyInit__decimal@@Base+0x1f578>
   3b858:	cmp	x19, #0x0
   3b85c:	cset	w1, ne  // ne = any
   3b860:	cbnz	w0, 3b900 <PyInit__decimal@@Base+0x1f6c0>
   3b864:	cbz	w1, 3b900 <PyInit__decimal@@Base+0x1f6c0>
   3b868:	ldr	x1, [x22, #24]
   3b86c:	ldr	x0, [x22, #40]
   3b870:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   3b874:	cbz	x0, 3b8c0 <PyInit__decimal@@Base+0x1f680>
   3b878:	ldp	x0, x3, [x22, #24]
   3b87c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3b880:	ldr	x2, [x1, #1880]
   3b884:	add	x1, x0, #0x1
   3b888:	cmp	x1, x2
   3b88c:	csel	x1, x1, x2, ge  // ge = tcont
   3b890:	cmp	x1, x3
   3b894:	b.eq	3b8a8 <PyInit__decimal@@Base+0x1f668>  // b.none
   3b898:	ldrb	w2, [x22]
   3b89c:	tbz	w2, #5, 3b994 <PyInit__decimal@@Base+0x1f754>
   3b8a0:	cmp	x1, x3
   3b8a4:	b.gt	3b9ac <PyInit__decimal@@Base+0x1f76c>
   3b8a8:	ldr	x1, [x22, #40]
   3b8ac:	mov	x2, #0x1                   	// #1
   3b8b0:	str	x2, [x1, x0, lsl #3]
   3b8b4:	ldr	x0, [x22, #24]
   3b8b8:	add	x0, x0, x2
   3b8bc:	str	x0, [x22, #24]
   3b8c0:	mov	x0, x22
   3b8c4:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3b8c8:	ldr	x0, [x21]
   3b8cc:	ldr	x1, [x22, #16]
   3b8d0:	cmp	x1, x0
   3b8d4:	b.gt	3b734 <PyInit__decimal@@Base+0x1f4f4>
   3b8d8:	ldr	x20, [x22, #8]
   3b8dc:	cmp	x19, #0x0
   3b8e0:	mov	w3, #0x1000                	// #4096
   3b8e4:	mov	w0, #0x1040                	// #4160
   3b8e8:	csel	w3, w3, w0, eq  // eq = none
   3b8ec:	b	3b7b8 <PyInit__decimal@@Base+0x1f578>
   3b8f0:	cmp	x19, #0x5
   3b8f4:	cset	w1, hi  // hi = pmore
   3b8f8:	cmp	w0, #0x5
   3b8fc:	b.eq	3b864 <PyInit__decimal@@Base+0x1f624>  // b.none
   3b900:	ldr	x1, [x22, #16]
   3b904:	b	3b8dc <PyInit__decimal@@Base+0x1f69c>
   3b908:	cmp	w0, #0x6
   3b90c:	b.eq	3b96c <PyInit__decimal@@Base+0x1f72c>  // b.none
   3b910:	cmp	w0, #0x7
   3b914:	b.ne	3b8f0 <PyInit__decimal@@Base+0x1f6b0>  // b.any
   3b918:	cbz	x19, 3b94c <PyInit__decimal@@Base+0x1f70c>
   3b91c:	ldr	x1, [x22, #40]
   3b920:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   3b924:	movk	x0, #0xcccd
   3b928:	ldr	x1, [x1]
   3b92c:	umulh	x0, x1, x0
   3b930:	lsr	x0, x0, #3
   3b934:	add	x0, x0, x0, lsl #2
   3b938:	sub	x0, x1, x0, lsl #1
   3b93c:	cmp	w0, #0x0
   3b940:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3b944:	b.eq	3b868 <PyInit__decimal@@Base+0x1f628>  // b.none
   3b948:	b	3b84c <PyInit__decimal@@Base+0x1f60c>
   3b94c:	mov	w3, #0x1000                	// #4096
   3b950:	ldr	x1, [x22, #16]
   3b954:	b	3b7b8 <PyInit__decimal@@Base+0x1f578>
   3b958:	cbz	x19, 3b94c <PyInit__decimal@@Base+0x1f70c>
   3b95c:	ldrb	w0, [x22]
   3b960:	mvn	w0, w0
   3b964:	and	w0, w0, #0x1
   3b968:	b	3b848 <PyInit__decimal@@Base+0x1f608>
   3b96c:	cmp	x19, #0x5
   3b970:	b.hi	3b868 <PyInit__decimal@@Base+0x1f628>  // b.pmore
   3b974:	b.ne	3b900 <PyInit__decimal@@Base+0x1f6c0>  // b.any
   3b978:	ldr	x0, [x22, #40]
   3b97c:	ldr	x0, [x0]
   3b980:	and	w0, w0, #0x1
   3b984:	b	3b848 <PyInit__decimal@@Base+0x1f608>
   3b988:	cmp	x19, #0x4
   3b98c:	cset	w1, hi  // hi = pmore
   3b990:	b	3b864 <PyInit__decimal@@Base+0x1f624>
   3b994:	mov	x2, x23
   3b998:	mov	x0, x22
   3b99c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3b9a0:	cbz	w0, 3b754 <PyInit__decimal@@Base+0x1f514>
   3b9a4:	ldr	x0, [x22, #24]
   3b9a8:	b	3b8a8 <PyInit__decimal@@Base+0x1f668>
   3b9ac:	mov	x2, x23
   3b9b0:	mov	x0, x22
   3b9b4:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3b9b8:	b	3b9a0 <PyInit__decimal@@Base+0x1f760>
   3b9bc:	nop
   3b9c0:	stp	x29, x30, [sp, #-64]!
   3b9c4:	mov	x29, sp
   3b9c8:	stp	x19, x20, [sp, #16]
   3b9cc:	mov	x19, x0
   3b9d0:	stp	x21, x22, [sp, #32]
   3b9d4:	mov	x21, x3
   3b9d8:	ldrb	w22, [x1]
   3b9dc:	tst	w22, #0xe
   3b9e0:	b.eq	3ba00 <PyInit__decimal@@Base+0x1f7c0>  // b.none
   3b9e4:	mov	x20, x1
   3b9e8:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3b9ec:	cbz	w0, 3bb10 <PyInit__decimal@@Base+0x1f8d0>
   3b9f0:	ldp	x19, x20, [sp, #16]
   3b9f4:	ldp	x21, x22, [sp, #32]
   3b9f8:	ldp	x29, x30, [sp], #64
   3b9fc:	ret
   3ba00:	str	x23, [sp, #48]
   3ba04:	mov	x23, x2
   3ba08:	mov	x2, x3
   3ba0c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ba10:	cbz	w0, 3bafc <PyInit__decimal@@Base+0x1f8bc>
   3ba14:	mov	x0, x19
   3ba18:	mov	x2, x21
   3ba1c:	mov	x1, x23
   3ba20:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3ba24:	ldrb	w0, [x19]
   3ba28:	tst	w0, #0xe
   3ba2c:	b.ne	3bafc <PyInit__decimal@@Base+0x1f8bc>  // b.any
   3ba30:	ldr	x2, [x19, #24]
   3ba34:	ldr	x3, [x19, #40]
   3ba38:	add	x0, x3, x2, lsl #3
   3ba3c:	ldur	x0, [x0, #-8]
   3ba40:	cbz	x0, 3bb2c <PyInit__decimal@@Base+0x1f8ec>
   3ba44:	cmp	x2, #0x0
   3ba48:	mov	x1, #0x0                   	// #0
   3ba4c:	b.gt	3ba60 <PyInit__decimal@@Base+0x1f820>
   3ba50:	b	3bab4 <PyInit__decimal@@Base+0x1f874>
   3ba54:	add	x1, x1, #0x1
   3ba58:	cmp	x2, x1
   3ba5c:	b.eq	3bb50 <PyInit__decimal@@Base+0x1f910>  // b.none
   3ba60:	ldr	x0, [x3, x1, lsl #3]
   3ba64:	cbz	x0, 3ba54 <PyInit__decimal@@Base+0x1f814>
   3ba68:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   3ba6c:	add	x2, x1, x1, lsl #2
   3ba70:	movk	x3, #0xcccd
   3ba74:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   3ba78:	lsl	x2, x2, #2
   3ba7c:	movk	x4, #0x1999, lsl #48
   3ba80:	mul	x5, x0, x3
   3ba84:	sub	x1, x2, x1
   3ba88:	ror	x2, x5, #1
   3ba8c:	cmp	x2, x4
   3ba90:	b.hi	3bab4 <PyInit__decimal@@Base+0x1f874>  // b.pmore
   3ba94:	nop
   3ba98:	umulh	x0, x0, x3
   3ba9c:	add	x1, x1, #0x1
   3baa0:	lsr	x0, x0, #3
   3baa4:	mul	x2, x0, x3
   3baa8:	ror	x2, x2, #1
   3baac:	cmp	x2, x4
   3bab0:	b.ls	3ba98 <PyInit__decimal@@Base+0x1f858>  // b.plast
   3bab4:	ldr	w0, [x23, #40]
   3bab8:	ldr	x20, [x23, #8]
   3babc:	cbz	w0, 3bacc <PyInit__decimal@@Base+0x1f88c>
   3bac0:	ldr	x0, [x23]
   3bac4:	add	x20, x20, #0x1
   3bac8:	sub	x20, x20, x0
   3bacc:	ldr	x2, [x19, #8]
   3bad0:	mov	x0, x19
   3bad4:	sub	x20, x20, x2
   3bad8:	cmp	x20, x1
   3badc:	csel	x20, x20, x1, le
   3bae0:	mov	x1, x20
   3bae4:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   3bae8:	ldr	x1, [x19, #8]
   3baec:	ldr	x23, [sp, #48]
   3baf0:	add	x1, x1, x20
   3baf4:	str	x1, [x19, #8]
   3baf8:	b	3b9f0 <PyInit__decimal@@Base+0x1f7b0>
   3bafc:	ldp	x19, x20, [sp, #16]
   3bb00:	ldp	x21, x22, [sp, #32]
   3bb04:	ldr	x23, [sp, #48]
   3bb08:	ldp	x29, x30, [sp], #64
   3bb0c:	ret
   3bb10:	mov	x2, x21
   3bb14:	mov	x1, x20
   3bb18:	mov	x0, x19
   3bb1c:	ldp	x19, x20, [sp, #16]
   3bb20:	ldp	x21, x22, [sp, #32]
   3bb24:	ldp	x29, x30, [sp], #64
   3bb28:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3bb2c:	and	w1, w22, #0x1
   3bb30:	mov	x0, x19
   3bb34:	ldp	x19, x20, [sp, #16]
   3bb38:	mov	x3, #0x0                   	// #0
   3bb3c:	ldp	x21, x22, [sp, #32]
   3bb40:	mov	x2, #0x0                   	// #0
   3bb44:	ldr	x23, [sp, #48]
   3bb48:	ldp	x29, x30, [sp], #64
   3bb4c:	b	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3bb50:	mov	x1, #0x0                   	// #0
   3bb54:	b	3bab4 <PyInit__decimal@@Base+0x1f874>
   3bb58:	sub	sp, sp, #0x270
   3bb5c:	adrp	x6, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3bb60:	mov	w5, #0x30                  	// #48
   3bb64:	stp	x29, x30, [sp]
   3bb68:	mov	x29, sp
   3bb6c:	ldr	q0, [x6, #1760]
   3bb70:	stp	x19, x20, [sp, #16]
   3bb74:	mov	x19, x1
   3bb78:	stp	x21, x22, [sp, #32]
   3bb7c:	add	x1, sp, #0x70
   3bb80:	mov	x20, x2
   3bb84:	stp	x23, x24, [sp, #48]
   3bb88:	mov	x21, x4
   3bb8c:	mov	x23, x3
   3bb90:	strb	w5, [sp, #64]
   3bb94:	mov	x22, x0
   3bb98:	stp	xzr, xzr, [sp, #72]
   3bb9c:	str	x1, [sp, #104]
   3bba0:	ldrb	w1, [x19]
   3bba4:	stur	q0, [sp, #88]
   3bba8:	tst	w1, #0xe
   3bbac:	b.ne	3bbbc <PyInit__decimal@@Base+0x1f97c>  // b.any
   3bbb0:	ldrb	w1, [x2]
   3bbb4:	tst	w1, #0xe
   3bbb8:	b.eq	3bc20 <PyInit__decimal@@Base+0x1f9e0>  // b.none
   3bbbc:	mov	x4, x21
   3bbc0:	mov	x3, x23
   3bbc4:	mov	x2, x20
   3bbc8:	mov	x1, x19
   3bbcc:	mov	x0, x22
   3bbd0:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   3bbd4:	cbnz	w0, 3bc08 <PyInit__decimal@@Base+0x1f9c8>
   3bbd8:	ldrb	w0, [x19]
   3bbdc:	tbnz	w0, #1, 3bc58 <PyInit__decimal@@Base+0x1fa18>
   3bbe0:	ldrb	w0, [x20]
   3bbe4:	tbz	w0, #1, 3bcfc <PyInit__decimal@@Base+0x1fabc>
   3bbe8:	mov	x1, x19
   3bbec:	mov	x2, x21
   3bbf0:	mov	x0, x22
   3bbf4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3bbf8:	mov	x2, x21
   3bbfc:	mov	x1, x23
   3bc00:	mov	x0, x22
   3bc04:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3bc08:	ldp	x29, x30, [sp]
   3bc0c:	ldp	x19, x20, [sp, #16]
   3bc10:	ldp	x21, x22, [sp, #32]
   3bc14:	ldp	x23, x24, [sp, #48]
   3bc18:	add	sp, sp, #0x270
   3bc1c:	ret
   3bc20:	ldr	x1, [x2, #24]
   3bc24:	ldr	x2, [x2, #40]
   3bc28:	add	x1, x2, x1, lsl #3
   3bc2c:	ldur	x1, [x1, #-8]
   3bc30:	cbnz	x1, 3bc80 <PyInit__decimal@@Base+0x1fa40>
   3bc34:	ldr	x1, [x19, #24]
   3bc38:	ldr	x2, [x19, #40]
   3bc3c:	add	x1, x2, x1, lsl #3
   3bc40:	ldur	x1, [x1, #-8]
   3bc44:	cbnz	x1, 3bc58 <PyInit__decimal@@Base+0x1fa18>
   3bc48:	mov	x2, x4
   3bc4c:	mov	w1, #0x10                  	// #16
   3bc50:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3bc54:	b	3bc08 <PyInit__decimal@@Base+0x1f9c8>
   3bc58:	mov	x2, x21
   3bc5c:	mov	x0, x22
   3bc60:	mov	w1, #0x100                 	// #256
   3bc64:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3bc68:	ldp	x29, x30, [sp]
   3bc6c:	ldp	x19, x20, [sp, #16]
   3bc70:	ldp	x21, x22, [sp, #32]
   3bc74:	ldp	x23, x24, [sp, #48]
   3bc78:	add	sp, sp, #0x270
   3bc7c:	ret
   3bc80:	add	x24, sp, #0x40
   3bc84:	mov	x5, x4
   3bc88:	mov	x0, x24
   3bc8c:	mov	x3, x20
   3bc90:	mov	x2, x19
   3bc94:	mov	x4, x23
   3bc98:	mov	x1, x22
   3bc9c:	bl	351b8 <PyInit__decimal@@Base+0x18f78>
   3bca0:	ldrb	w0, [sp, #64]
   3bca4:	tst	w0, #0xe0
   3bca8:	b.ne	3bcc0 <PyInit__decimal@@Base+0x1fa80>  // b.any
   3bcac:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3bcb0:	ldr	x0, [sp, #104]
   3bcb4:	ldr	x1, [x1, #1912]
   3bcb8:	blr	x1
   3bcbc:	ldrb	w0, [sp, #64]
   3bcc0:	tbnz	w0, #4, 3bcd4 <PyInit__decimal@@Base+0x1fa94>
   3bcc4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3bcc8:	mov	x0, x24
   3bccc:	ldr	x1, [x1, #1912]
   3bcd0:	blr	x1
   3bcd4:	mov	x2, x21
   3bcd8:	mov	x1, x23
   3bcdc:	mov	x0, x22
   3bce0:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3bce4:	ldp	x29, x30, [sp]
   3bce8:	ldp	x19, x20, [sp, #16]
   3bcec:	ldp	x21, x22, [sp, #32]
   3bcf0:	ldp	x23, x24, [sp, #48]
   3bcf4:	add	sp, sp, #0x270
   3bcf8:	ret
   3bcfc:	bl	67c0 <abort@plt>
   3bd00:	sub	sp, sp, #0xa20
   3bd04:	mov	w6, #0x30                  	// #48
   3bd08:	movi	v1.4s, #0x0
   3bd0c:	add	x10, sp, #0x220
   3bd10:	add	x9, sp, #0x420
   3bd14:	mov	x7, #0x2                   	// #2
   3bd18:	stp	x29, x30, [sp]
   3bd1c:	mov	x29, sp
   3bd20:	mov	w14, #0xffffff90            	// #-112
   3bd24:	stp	x19, x20, [sp, #16]
   3bd28:	mov	x19, x1
   3bd2c:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3bd30:	stp	x21, x22, [sp, #32]
   3bd34:	mov	x21, x3
   3bd38:	mov	x20, x2
   3bd3c:	ldr	q0, [x1, #1760]
   3bd40:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   3bd44:	stp	x27, x28, [sp, #80]
   3bd48:	mov	x28, x0
   3bd4c:	add	x0, sp, #0x200
   3bd50:	ldr	q3, [x1, #2224]
   3bd54:	adrp	x1, 42000 <PyInit__decimal@@Base+0x25dc0>
   3bd58:	ldrb	w12, [x2]
   3bd5c:	add	x3, sp, #0x620
   3bd60:	ldr	q2, [x1, #2176]
   3bd64:	stur	q1, [x0, #-248]
   3bd68:	ldrb	w13, [x21]
   3bd6c:	stur	q0, [x0, #-232]
   3bd70:	add	x0, sp, #0x230
   3bd74:	ldrb	w11, [x19]
   3bd78:	add	x2, sp, #0x820
   3bd7c:	add	x1, sp, #0x98
   3bd80:	str	x7, [sp, #152]
   3bd84:	orr	w8, w12, w13
   3bd88:	strb	w6, [sp, #160]
   3bd8c:	orr	w8, w11, w8
   3bd90:	str	x10, [sp, #200]
   3bd94:	mov	x22, x4
   3bd98:	strb	w6, [sp, #208]
   3bd9c:	mov	x27, x5
   3bda0:	str	x9, [sp, #248]
   3bda4:	tst	w8, #0xe
   3bda8:	strb	w6, [sp, #256]
   3bdac:	str	x3, [sp, #296]
   3bdb0:	strb	w6, [sp, #304]
   3bdb4:	str	x2, [sp, #344]
   3bdb8:	strb	w14, [sp, #352]
   3bdbc:	str	x1, [sp, #392]
   3bdc0:	stur	q1, [sp, #168]
   3bdc4:	stur	q0, [sp, #184]
   3bdc8:	stur	q1, [sp, #216]
   3bdcc:	stur	q0, [sp, #232]
   3bdd0:	stur	q1, [x0, #-248]
   3bdd4:	stur	q0, [x0, #-232]
   3bdd8:	stur	q3, [x0, #-200]
   3bddc:	stur	q2, [x0, #-184]
   3bde0:	b.eq	3be84 <PyInit__decimal@@Base+0x1fc44>  // b.none
   3bde4:	tst	w8, #0xc
   3bde8:	b.ne	3be14 <PyInit__decimal@@Base+0x1fbd4>  // b.any
   3bdec:	mov	x2, x27
   3bdf0:	mov	x0, x28
   3bdf4:	mov	w1, #0x100                 	// #256
   3bdf8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3bdfc:	ldp	x29, x30, [sp]
   3be00:	ldp	x19, x20, [sp, #16]
   3be04:	ldp	x21, x22, [sp, #32]
   3be08:	ldp	x27, x28, [sp, #80]
   3be0c:	add	sp, sp, #0xa20
   3be10:	ret
   3be14:	tbnz	w11, #3, 3be74 <PyInit__decimal@@Base+0x1fc34>
   3be18:	tbz	w12, #3, 3bf44 <PyInit__decimal@@Base+0x1fd04>
   3be1c:	ldr	w0, [x5]
   3be20:	mov	x19, x20
   3be24:	orr	w0, w0, #0x100
   3be28:	str	w0, [x5]
   3be2c:	mov	x2, x27
   3be30:	mov	x1, x19
   3be34:	mov	x0, x28
   3be38:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3be3c:	ldrb	w1, [x28]
   3be40:	mov	x0, x28
   3be44:	and	w1, w1, #0xfffffff1
   3be48:	orr	w1, w1, #0x4
   3be4c:	strb	w1, [x28]
   3be50:	ldr	w2, [x22, #40]
   3be54:	ldr	x1, [x22]
   3be58:	bl	2af08 <PyInit__decimal@@Base+0xecc8>
   3be5c:	ldp	x29, x30, [sp]
   3be60:	ldp	x19, x20, [sp, #16]
   3be64:	ldp	x21, x22, [sp, #32]
   3be68:	ldp	x27, x28, [sp, #80]
   3be6c:	add	sp, sp, #0xa20
   3be70:	ret
   3be74:	ldr	w0, [x5]
   3be78:	orr	w0, w0, #0x100
   3be7c:	str	w0, [x5]
   3be80:	b	3be2c <PyInit__decimal@@Base+0x1fbec>
   3be84:	mov	x0, x19
   3be88:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3be8c:	cbz	w0, 3bdec <PyInit__decimal@@Base+0x1fbac>
   3be90:	mov	x0, x20
   3be94:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3be98:	cbz	w0, 3bdec <PyInit__decimal@@Base+0x1fbac>
   3be9c:	mov	x0, x21
   3bea0:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3bea4:	cbz	w0, 3bdec <PyInit__decimal@@Base+0x1fbac>
   3bea8:	ldr	x0, [x21, #24]
   3beac:	ldr	x1, [x21, #40]
   3beb0:	add	x0, x1, x0, lsl #3
   3beb4:	ldur	x0, [x0, #-8]
   3beb8:	cbz	x0, 3bdec <PyInit__decimal@@Base+0x1fbac>
   3bebc:	ldp	x2, x0, [x21, #8]
   3bec0:	ldr	x1, [x22]
   3bec4:	add	x0, x0, x2
   3bec8:	cmp	x0, x1
   3becc:	b.gt	3bdec <PyInit__decimal@@Base+0x1fbac>
   3bed0:	stp	x23, x24, [sp, #48]
   3bed4:	and	w24, w11, #0x1
   3bed8:	tbz	w11, #0, 3beec <PyInit__decimal@@Base+0x1fcac>
   3bedc:	mov	x0, x20
   3bee0:	bl	2b8b8 <PyInit__decimal@@Base+0xf678>
   3bee4:	cmp	w0, #0x0
   3bee8:	cset	w24, ne  // ne = any
   3beec:	ldr	x0, [x20, #24]
   3bef0:	ldr	x1, [x20, #40]
   3bef4:	add	x0, x1, x0, lsl #3
   3bef8:	ldur	x0, [x0, #-8]
   3befc:	cbnz	x0, 3bf6c <PyInit__decimal@@Base+0x1fd2c>
   3bf00:	ldr	x0, [x19, #24]
   3bf04:	ldr	x1, [x19, #40]
   3bf08:	add	x0, x1, x0, lsl #3
   3bf0c:	ldur	x0, [x0, #-8]
   3bf10:	cbz	x0, 3c2e4 <PyInit__decimal@@Base+0x200a4>
   3bf14:	mov	x0, x21
   3bf18:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   3bf1c:	add	x1, x1, #0xc58
   3bf20:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   3bf24:	cmp	w0, #0x0
   3bf28:	mov	w1, w24
   3bf2c:	mov	x0, x28
   3bf30:	cset	x2, ne  // ne = any
   3bf34:	mov	x3, #0x0                   	// #0
   3bf38:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3bf3c:	ldp	x23, x24, [sp, #48]
   3bf40:	b	3bdfc <PyInit__decimal@@Base+0x1fbbc>
   3bf44:	tbnz	w13, #3, 3bf58 <PyInit__decimal@@Base+0x1fd18>
   3bf48:	tbnz	w11, #2, 3be2c <PyInit__decimal@@Base+0x1fbec>
   3bf4c:	tst	x12, #0x4
   3bf50:	csel	x19, x21, x20, eq  // eq = none
   3bf54:	b	3be2c <PyInit__decimal@@Base+0x1fbec>
   3bf58:	ldr	w0, [x5]
   3bf5c:	mov	x19, x21
   3bf60:	orr	w0, w0, #0x100
   3bf64:	str	w0, [x5]
   3bf68:	b	3be2c <PyInit__decimal@@Base+0x1fbec>
   3bf6c:	tbnz	w12, #0, 3c2e4 <PyInit__decimal@@Base+0x200a4>
   3bf70:	ldr	x0, [x19, #24]
   3bf74:	ldr	x1, [x19, #40]
   3bf78:	add	x0, x1, x0, lsl #3
   3bf7c:	ldur	x0, [x0, #-8]
   3bf80:	cbz	x0, 3c2ec <PyInit__decimal@@Base+0x200ac>
   3bf84:	add	x23, sp, #0x190
   3bf88:	mov	x0, x23
   3bf8c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   3bf90:	ldrb	w1, [x21]
   3bf94:	tst	w1, #0xe
   3bf98:	b.ne	3c3a8 <PyInit__decimal@@Base+0x20168>  // b.any
   3bf9c:	ldr	x0, [x21, #24]
   3bfa0:	ldr	x2, [x21, #40]
   3bfa4:	add	x0, x2, x0, lsl #3
   3bfa8:	ldur	x0, [x0, #-8]
   3bfac:	cbnz	x0, 3c310 <PyInit__decimal@@Base+0x200d0>
   3bfb0:	add	x22, sp, #0x100
   3bfb4:	and	w1, w1, #0x1
   3bfb8:	mov	x0, x22
   3bfbc:	mov	x3, #0x0                   	// #0
   3bfc0:	mov	x2, #0x0                   	// #0
   3bfc4:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3bfc8:	ldr	w0, [sp, #428]
   3bfcc:	mov	w1, #0x3be                 	// #958
   3bfd0:	ands	w1, w0, w1
   3bfd4:	b.ne	3c398 <PyInit__decimal@@Base+0x20158>  // b.any
   3bfd8:	ldrb	w8, [sp, #256]
   3bfdc:	add	x5, sp, #0xd0
   3bfe0:	stp	x25, x26, [sp, #64]
   3bfe4:	add	x25, sp, #0xa0
   3bfe8:	and	w8, w8, #0xfffffffe
   3bfec:	mov	x2, x19
   3bff0:	mov	x1, x25
   3bff4:	mov	x19, x5
   3bff8:	mov	x4, x27
   3bffc:	mov	x3, x23
   3c000:	mov	w0, #0x1                   	// #1
   3c004:	str	x5, [sp, #136]
   3c008:	strb	w8, [sp, #256]
   3c00c:	str	wzr, [sp, #428]
   3c010:	bl	31700 <PyInit__decimal@@Base+0x154c0>
   3c014:	ldrb	w8, [sp, #160]
   3c018:	mov	x2, x20
   3c01c:	mov	x1, x19
   3c020:	mov	x4, x27
   3c024:	and	w8, w8, #0xfffffffe
   3c028:	mov	x3, x23
   3c02c:	mov	w0, #0x1                   	// #1
   3c030:	strb	w8, [sp, #160]
   3c034:	ldr	x19, [sp, #168]
   3c038:	str	xzr, [sp, #168]
   3c03c:	bl	31700 <PyInit__decimal@@Base+0x154c0>
   3c040:	adrp	x5, 62000 <PyInit__decimal@@Base+0x45dc0>
   3c044:	mov	x4, x27
   3c048:	ldr	x21, [sp, #216]
   3c04c:	add	x20, x5, #0xc58
   3c050:	mov	x1, x25
   3c054:	mov	x0, x25
   3c058:	mov	x3, x23
   3c05c:	mov	x2, x22
   3c060:	str	x21, [sp, #112]
   3c064:	str	xzr, [sp, #216]
   3c068:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c06c:	mov	x2, x19
   3c070:	mov	x1, x20
   3c074:	mov	x3, x27
   3c078:	mov	x0, x28
   3c07c:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3c080:	mov	x4, x27
   3c084:	mov	x3, x23
   3c088:	mov	x2, x22
   3c08c:	mov	x1, x28
   3c090:	mov	x0, x28
   3c094:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c098:	mov	x4, x27
   3c09c:	mov	x3, x23
   3c0a0:	mov	x2, x28
   3c0a4:	mov	x1, x25
   3c0a8:	mov	x0, x25
   3c0ac:	bl	30530 <PyInit__decimal@@Base+0x142f0>
   3c0b0:	mov	x2, x22
   3c0b4:	mov	x1, x25
   3c0b8:	mov	x0, x25
   3c0bc:	mov	x4, x27
   3c0c0:	mov	x3, x23
   3c0c4:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c0c8:	ldrb	w0, [sp, #160]
   3c0cc:	ldrb	w2, [sp, #208]
   3c0d0:	ldrb	w1, [sp, #256]
   3c0d4:	orr	w0, w0, w2
   3c0d8:	orr	w0, w0, w1
   3c0dc:	tst	w0, #0xe
   3c0e0:	b.ne	3c1f8 <PyInit__decimal@@Base+0x1ffb8>  // b.any
   3c0e4:	cmp	x21, #0x0
   3c0e8:	b.le	3c3c0 <PyInit__decimal@@Base+0x20180>
   3c0ec:	add	x0, sp, #0x1c0
   3c0f0:	add	x21, sp, #0x130
   3c0f4:	stp	x20, x0, [sp, #120]
   3c0f8:	add	x20, sp, #0x1f0
   3c0fc:	str	xzr, [sp, #104]
   3c100:	mov	x0, x20
   3c104:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   3c108:	ldr	x1, [sp, #120]
   3c10c:	mov	x2, x27
   3c110:	mov	x0, x21
   3c114:	mov	w19, #0x4                   	// #4
   3c118:	mov	x26, #0xa                   	// #10
   3c11c:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3c120:	mov	x4, x27
   3c124:	mov	x3, x20
   3c128:	mov	x2, x25
   3c12c:	mov	x1, x25
   3c130:	mov	x0, x25
   3c134:	bl	30530 <PyInit__decimal@@Base+0x142f0>
   3c138:	mov	x4, x27
   3c13c:	mov	x3, x20
   3c140:	mov	x2, x22
   3c144:	mov	x1, x25
   3c148:	mov	x0, x25
   3c14c:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c150:	lsr	x26, x26, #1
   3c154:	subs	w19, w19, #0x1
   3c158:	b.eq	3c194 <PyInit__decimal@@Base+0x1ff54>  // b.none
   3c15c:	tbz	w26, #0, 3c120 <PyInit__decimal@@Base+0x1fee0>
   3c160:	mov	x4, x27
   3c164:	mov	x3, x20
   3c168:	mov	x2, x25
   3c16c:	mov	x1, x21
   3c170:	mov	x0, x21
   3c174:	bl	30530 <PyInit__decimal@@Base+0x142f0>
   3c178:	mov	x4, x27
   3c17c:	mov	x3, x20
   3c180:	mov	x2, x22
   3c184:	mov	x1, x21
   3c188:	mov	x0, x21
   3c18c:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c190:	b	3c120 <PyInit__decimal@@Base+0x1fee0>
   3c194:	ldr	x0, [sp, #104]
   3c198:	ldp	x8, x9, [x21]
   3c19c:	add	x2, x0, #0x1
   3c1a0:	ldp	x0, x1, [x25]
   3c1a4:	stp	x0, x1, [x21]
   3c1a8:	ldr	x0, [sp, #112]
   3c1ac:	str	x2, [sp, #104]
   3c1b0:	ldr	x4, [sp, #128]
   3c1b4:	cmp	x0, x2
   3c1b8:	ldp	x2, x3, [x21, #16]
   3c1bc:	stp	x8, x9, [x25]
   3c1c0:	stp	x8, x9, [x4]
   3c1c4:	stp	x2, x3, [x4, #16]
   3c1c8:	ldp	x8, x9, [x25, #16]
   3c1cc:	stp	x2, x3, [x25, #16]
   3c1d0:	ldp	x0, x1, [x21, #32]
   3c1d4:	stp	x8, x9, [x21, #16]
   3c1d8:	ldp	x2, x3, [x25, #32]
   3c1dc:	stp	x0, x1, [x4, #32]
   3c1e0:	stp	x0, x1, [x25, #32]
   3c1e4:	stp	x2, x3, [x21, #32]
   3c1e8:	b.ne	3c100 <PyInit__decimal@@Base+0x1fec0>  // b.any
   3c1ec:	ldrb	w0, [sp, #160]
   3c1f0:	tst	w0, #0xe
   3c1f4:	b.eq	3c3c0 <PyInit__decimal@@Base+0x20180>  // b.none
   3c1f8:	mov	x0, x28
   3c1fc:	mov	w2, #0x4                   	// #4
   3c200:	mov	w1, #0x0                   	// #0
   3c204:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3c208:	ldp	x25, x26, [sp, #64]
   3c20c:	ldrb	w0, [sp, #160]
   3c210:	tst	w0, #0xe0
   3c214:	b.ne	3c22c <PyInit__decimal@@Base+0x1ffec>  // b.any
   3c218:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c21c:	ldr	x0, [sp, #200]
   3c220:	ldr	x1, [x1, #1912]
   3c224:	blr	x1
   3c228:	ldrb	w0, [sp, #160]
   3c22c:	tbnz	w0, #4, 3c240 <PyInit__decimal@@Base+0x20000>
   3c230:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c234:	add	x0, sp, #0xa0
   3c238:	ldr	x1, [x1, #1912]
   3c23c:	blr	x1
   3c240:	ldrb	w0, [sp, #208]
   3c244:	tst	w0, #0xe0
   3c248:	b.ne	3c260 <PyInit__decimal@@Base+0x20020>  // b.any
   3c24c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c250:	ldr	x0, [sp, #248]
   3c254:	ldr	x1, [x1, #1912]
   3c258:	blr	x1
   3c25c:	ldrb	w0, [sp, #208]
   3c260:	tbnz	w0, #4, 3c274 <PyInit__decimal@@Base+0x20034>
   3c264:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c268:	add	x0, sp, #0xd0
   3c26c:	ldr	x1, [x1, #1912]
   3c270:	blr	x1
   3c274:	ldrb	w0, [sp, #256]
   3c278:	tst	w0, #0xe0
   3c27c:	b.ne	3c294 <PyInit__decimal@@Base+0x20054>  // b.any
   3c280:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c284:	ldr	x0, [sp, #296]
   3c288:	ldr	x1, [x1, #1912]
   3c28c:	blr	x1
   3c290:	ldrb	w0, [sp, #256]
   3c294:	tbnz	w0, #4, 3c2a8 <PyInit__decimal@@Base+0x20068>
   3c298:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c29c:	mov	x0, x22
   3c2a0:	ldr	x1, [x1, #1912]
   3c2a4:	blr	x1
   3c2a8:	ldrb	w0, [sp, #304]
   3c2ac:	tst	w0, #0xe0
   3c2b0:	b.ne	3c2c8 <PyInit__decimal@@Base+0x20088>  // b.any
   3c2b4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c2b8:	ldr	x0, [sp, #344]
   3c2bc:	ldr	x1, [x1, #1912]
   3c2c0:	blr	x1
   3c2c4:	ldrb	w0, [sp, #304]
   3c2c8:	tbnz	w0, #4, 3c308 <PyInit__decimal@@Base+0x200c8>
   3c2cc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c2d0:	add	x0, sp, #0x130
   3c2d4:	ldr	x1, [x1, #1912]
   3c2d8:	blr	x1
   3c2dc:	ldp	x23, x24, [sp, #48]
   3c2e0:	b	3bdfc <PyInit__decimal@@Base+0x1fbbc>
   3c2e4:	ldp	x23, x24, [sp, #48]
   3c2e8:	b	3bdec <PyInit__decimal@@Base+0x1fbac>
   3c2ec:	mov	w1, w24
   3c2f0:	mov	x0, x28
   3c2f4:	mov	x3, #0x0                   	// #0
   3c2f8:	mov	x2, #0x0                   	// #0
   3c2fc:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3c300:	ldp	x23, x24, [sp, #48]
   3c304:	b	3bdfc <PyInit__decimal@@Base+0x1fbbc>
   3c308:	ldp	x23, x24, [sp, #48]
   3c30c:	b	3bdfc <PyInit__decimal@@Base+0x1fbbc>
   3c310:	ldr	x2, [x21, #8]
   3c314:	tbnz	x2, #63, 3c440 <PyInit__decimal@@Base+0x20200>
   3c318:	ldr	x0, [x21, #16]
   3c31c:	mov	x1, #0xa7640000            	// #2808348672
   3c320:	movk	x1, #0xb6b3, lsl #32
   3c324:	add	x22, sp, #0x100
   3c328:	add	x0, x2, x0
   3c32c:	movk	x1, #0xde0, lsl #48
   3c330:	cmp	x0, x1
   3c334:	b.gt	3c42c <PyInit__decimal@@Base+0x201ec>
   3c338:	mov	x1, x21
   3c33c:	mov	x0, x22
   3c340:	add	x3, x23, #0x1c
   3c344:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3c348:	cbz	w0, 3bfc8 <PyInit__decimal@@Base+0x1fd88>
   3c34c:	str	xzr, [sp, #264]
   3c350:	ldrb	w0, [sp, #256]
   3c354:	tst	w0, #0xe
   3c358:	b.ne	3bfc8 <PyInit__decimal@@Base+0x1fd88>  // b.any
   3c35c:	ldr	x0, [sp, #280]
   3c360:	ldr	x1, [sp, #296]
   3c364:	add	x0, x1, x0, lsl #3
   3c368:	ldur	x0, [x0, #-8]
   3c36c:	cbz	x0, 3bfc8 <PyInit__decimal@@Base+0x1fd88>
   3c370:	ldp	x0, x2, [sp, #264]
   3c374:	ldr	x1, [sp, #416]
   3c378:	add	x0, x0, x2
   3c37c:	sub	x0, x0, #0x1
   3c380:	cmp	x0, x1
   3c384:	b.ge	3bfc8 <PyInit__decimal@@Base+0x1fd88>  // b.tcont
   3c388:	ldr	w0, [sp, #428]
   3c38c:	orr	w0, w0, #0x2000
   3c390:	str	w0, [sp, #428]
   3c394:	b	3bfc8 <PyInit__decimal@@Base+0x1fd88>
   3c398:	mov	x2, x27
   3c39c:	mov	x0, x28
   3c3a0:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3c3a4:	b	3c20c <PyInit__decimal@@Base+0x1ffcc>
   3c3a8:	add	x22, sp, #0x100
   3c3ac:	mov	x1, x21
   3c3b0:	mov	x0, x22
   3c3b4:	add	x2, x23, #0x1c
   3c3b8:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3c3bc:	b	3bfc8 <PyInit__decimal@@Base+0x1fd88>
   3c3c0:	adrp	x0, 62000 <PyInit__decimal@@Base+0x45dc0>
   3c3c4:	mov	x2, x27
   3c3c8:	add	x1, x0, #0xc58
   3c3cc:	add	x19, sp, #0x160
   3c3d0:	mov	x0, x28
   3c3d4:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3c3d8:	ldrb	w0, [sp, #208]
   3c3dc:	tst	w0, #0xe
   3c3e0:	b.ne	3c1f8 <PyInit__decimal@@Base+0x1ffb8>  // b.any
   3c3e4:	ldr	x0, [sp, #232]
   3c3e8:	ldr	x1, [sp, #248]
   3c3ec:	add	x0, x1, x0, lsl #3
   3c3f0:	ldur	x0, [x0, #-8]
   3c3f4:	cbnz	x0, 3c4a0 <PyInit__decimal@@Base+0x20260>
   3c3f8:	ldrb	w0, [sp, #160]
   3c3fc:	ldrb	w1, [sp, #256]
   3c400:	orr	w0, w0, w1
   3c404:	tst	w0, #0xe
   3c408:	b.ne	3c1f8 <PyInit__decimal@@Base+0x1ffb8>  // b.any
   3c40c:	ldrb	w0, [x28]
   3c410:	tst	w0, #0xe
   3c414:	b.ne	3c1f8 <PyInit__decimal@@Base+0x1ffb8>  // b.any
   3c418:	and	w0, w0, #0xfffffffe
   3c41c:	orr	w24, w24, w0
   3c420:	strb	w24, [x28]
   3c424:	ldp	x25, x26, [sp, #64]
   3c428:	b	3c20c <PyInit__decimal@@Base+0x1ffcc>
   3c42c:	add	x2, x23, #0x1c
   3c430:	mov	x0, x22
   3c434:	mov	w1, #0x100                 	// #256
   3c438:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3c43c:	b	3bfc8 <PyInit__decimal@@Base+0x1fd88>
   3c440:	add	x22, sp, #0x100
   3c444:	mov	x1, x21
   3c448:	neg	x2, x2
   3c44c:	mov	x0, x22
   3c450:	add	x3, x23, #0x1c
   3c454:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   3c458:	mov	x21, x0
   3c45c:	cmn	x0, #0x1
   3c460:	b.eq	3bfc8 <PyInit__decimal@@Base+0x1fd88>  // b.none
   3c464:	ldr	w0, [sp, #436]
   3c468:	str	xzr, [sp, #264]
   3c46c:	cmp	w0, #0x4
   3c470:	b.eq	3c644 <PyInit__decimal@@Base+0x20404>  // b.none
   3c474:	b.gt	3c588 <PyInit__decimal@@Base+0x20348>
   3c478:	cmp	w0, #0x2
   3c47c:	b.eq	3c60c <PyInit__decimal@@Base+0x203cc>  // b.none
   3c480:	cmp	w0, #0x3
   3c484:	b.ne	3c4f8 <PyInit__decimal@@Base+0x202b8>  // b.any
   3c488:	ldrb	w0, [sp, #256]
   3c48c:	cbz	x21, 3c650 <PyInit__decimal@@Base+0x20410>
   3c490:	and	w0, w0, #0x1
   3c494:	cbnz	w0, 3c508 <PyInit__decimal@@Base+0x202c8>
   3c498:	ldr	w0, [sp, #428]
   3c49c:	b	3c578 <PyInit__decimal@@Base+0x20338>
   3c4a0:	ldr	x0, [sp, #136]
   3c4a4:	bl	2b8b8 <PyInit__decimal@@Base+0xf678>
   3c4a8:	cbnz	w0, 3c5d8 <PyInit__decimal@@Base+0x20398>
   3c4ac:	mov	x4, x27
   3c4b0:	mov	x3, x23
   3c4b4:	mov	x2, x25
   3c4b8:	mov	x1, x25
   3c4bc:	mov	x0, x25
   3c4c0:	bl	30530 <PyInit__decimal@@Base+0x142f0>
   3c4c4:	mov	x4, x27
   3c4c8:	mov	x3, x23
   3c4cc:	mov	x2, x22
   3c4d0:	mov	x1, x25
   3c4d4:	mov	x0, x25
   3c4d8:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c4dc:	ldr	x0, [sp, #136]
   3c4e0:	mov	x4, x27
   3c4e4:	mov	x3, x23
   3c4e8:	mov	x2, x19
   3c4ec:	mov	x1, x0
   3c4f0:	bl	36410 <PyInit__decimal@@Base+0x1a1d0>
   3c4f4:	b	3c3d8 <PyInit__decimal@@Base+0x20198>
   3c4f8:	cbnz	w0, 3c568 <PyInit__decimal@@Base+0x20328>
   3c4fc:	cmp	x21, #0x0
   3c500:	cset	w0, ne  // ne = any
   3c504:	cbz	w0, 3c568 <PyInit__decimal@@Base+0x20328>
   3c508:	ldr	x1, [sp, #280]
   3c50c:	ldr	x0, [sp, #296]
   3c510:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   3c514:	cbz	x0, 3c560 <PyInit__decimal@@Base+0x20320>
   3c518:	ldp	x0, x2, [sp, #280]
   3c51c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c520:	ldr	x3, [x1, #1880]
   3c524:	add	x1, x0, #0x1
   3c528:	cmp	x1, x3
   3c52c:	csel	x1, x1, x3, ge  // ge = tcont
   3c530:	cmp	x1, x2
   3c534:	b.eq	3c548 <PyInit__decimal@@Base+0x20308>  // b.none
   3c538:	ldrb	w3, [sp, #256]
   3c53c:	tbz	w3, #5, 3c678 <PyInit__decimal@@Base+0x20438>
   3c540:	cmp	x1, x2
   3c544:	b.gt	3c660 <PyInit__decimal@@Base+0x20420>
   3c548:	ldr	x1, [sp, #296]
   3c54c:	mov	x2, #0x1                   	// #1
   3c550:	str	x2, [x1, x0, lsl #3]
   3c554:	ldr	x0, [sp, #280]
   3c558:	add	x0, x0, x2
   3c55c:	str	x0, [sp, #280]
   3c560:	mov	x0, x22
   3c564:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3c568:	ldr	w0, [sp, #428]
   3c56c:	orr	w1, w0, #0x1000
   3c570:	str	w1, [sp, #428]
   3c574:	cbz	x21, 3c350 <PyInit__decimal@@Base+0x20110>
   3c578:	mov	w1, #0x1040                	// #4160
   3c57c:	orr	w0, w0, w1
   3c580:	str	w0, [sp, #428]
   3c584:	b	3c350 <PyInit__decimal@@Base+0x20110>
   3c588:	cmp	w0, #0x6
   3c58c:	b.eq	3c624 <PyInit__decimal@@Base+0x203e4>  // b.none
   3c590:	cmp	w0, #0x7
   3c594:	b.ne	3c5c4 <PyInit__decimal@@Base+0x20384>  // b.any
   3c598:	ldr	x0, [sp, #296]
   3c59c:	ldr	x2, [x0]
   3c5a0:	cbz	x21, 3c650 <PyInit__decimal@@Base+0x20410>
   3c5a4:	mov	x1, #0xa                   	// #10
   3c5a8:	udiv	x0, x2, x1
   3c5ac:	msub	x0, x0, x1, x2
   3c5b0:	cmp	w0, #0x0
   3c5b4:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3c5b8:	b.eq	3c508 <PyInit__decimal@@Base+0x202c8>  // b.none
   3c5bc:	ldr	w0, [sp, #428]
   3c5c0:	b	3c578 <PyInit__decimal@@Base+0x20338>
   3c5c4:	cmp	w0, #0x5
   3c5c8:	b.ne	3c568 <PyInit__decimal@@Base+0x20328>  // b.any
   3c5cc:	cmp	x21, #0x5
   3c5d0:	cset	w0, hi  // hi = pmore
   3c5d4:	b	3c504 <PyInit__decimal@@Base+0x202c4>
   3c5d8:	mov	x4, x27
   3c5dc:	mov	x3, x23
   3c5e0:	mov	x2, x25
   3c5e4:	mov	x1, x28
   3c5e8:	mov	x0, x28
   3c5ec:	bl	30530 <PyInit__decimal@@Base+0x142f0>
   3c5f0:	mov	x4, x27
   3c5f4:	mov	x3, x23
   3c5f8:	mov	x2, x22
   3c5fc:	mov	x1, x28
   3c600:	mov	x0, x28
   3c604:	bl	3bb58 <PyInit__decimal@@Base+0x1f918>
   3c608:	b	3c4ac <PyInit__decimal@@Base+0x2026c>
   3c60c:	ldrb	w0, [sp, #256]
   3c610:	cbz	x21, 3c650 <PyInit__decimal@@Base+0x20410>
   3c614:	mvn	w0, w0
   3c618:	and	w0, w0, #0x1
   3c61c:	cbz	w0, 3c498 <PyInit__decimal@@Base+0x20258>
   3c620:	b	3c508 <PyInit__decimal@@Base+0x202c8>
   3c624:	cmp	x21, #0x5
   3c628:	b.hi	3c508 <PyInit__decimal@@Base+0x202c8>  // b.pmore
   3c62c:	b.ne	3c568 <PyInit__decimal@@Base+0x20328>  // b.any
   3c630:	ldr	x0, [sp, #296]
   3c634:	ldr	x0, [x0]
   3c638:	and	w0, w0, #0x1
   3c63c:	cbz	w0, 3c498 <PyInit__decimal@@Base+0x20258>
   3c640:	b	3c508 <PyInit__decimal@@Base+0x202c8>
   3c644:	cmp	x21, #0x4
   3c648:	cset	w0, hi  // hi = pmore
   3c64c:	b	3c504 <PyInit__decimal@@Base+0x202c4>
   3c650:	ldr	w0, [sp, #428]
   3c654:	orr	w0, w0, #0x1000
   3c658:	str	w0, [sp, #428]
   3c65c:	b	3c350 <PyInit__decimal@@Base+0x20110>
   3c660:	add	x2, x23, #0x1c
   3c664:	mov	x0, x22
   3c668:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3c66c:	cbz	w0, 3c568 <PyInit__decimal@@Base+0x20328>
   3c670:	ldr	x0, [sp, #280]
   3c674:	b	3c548 <PyInit__decimal@@Base+0x20308>
   3c678:	add	x2, x23, #0x1c
   3c67c:	mov	x0, x22
   3c680:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3c684:	b	3c66c <PyInit__decimal@@Base+0x2042c>
   3c688:	sub	sp, sp, #0x4f0
   3c68c:	mov	w7, #0x30                  	// #48
   3c690:	movi	v1.4s, #0x0
   3c694:	add	x6, sp, #0xf0
   3c698:	add	x5, sp, #0x2f0
   3c69c:	stp	x29, x30, [sp]
   3c6a0:	mov	x29, sp
   3c6a4:	stp	x19, x20, [sp, #16]
   3c6a8:	mov	x20, x1
   3c6ac:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3c6b0:	stp	x21, x22, [sp, #32]
   3c6b4:	mov	x19, x2
   3c6b8:	mov	x22, x4
   3c6bc:	ldr	q0, [x1, #1760]
   3c6c0:	stp	x23, x24, [sp, #48]
   3c6c4:	mov	x21, x0
   3c6c8:	strb	w7, [sp, #96]
   3c6cc:	mov	x23, x3
   3c6d0:	str	x6, [sp, #136]
   3c6d4:	ldrb	w6, [x20]
   3c6d8:	strb	w7, [sp, #144]
   3c6dc:	str	x5, [sp, #184]
   3c6e0:	tst	w6, #0xe
   3c6e4:	stur	q1, [sp, #104]
   3c6e8:	stur	q0, [sp, #120]
   3c6ec:	stur	q1, [sp, #152]
   3c6f0:	stur	q0, [sp, #168]
   3c6f4:	b.ne	3c820 <PyInit__decimal@@Base+0x205e0>  // b.any
   3c6f8:	ldrb	w1, [x2]
   3c6fc:	tst	w1, #0xe
   3c700:	b.ne	3c820 <PyInit__decimal@@Base+0x205e0>  // b.any
   3c704:	ldr	x1, [x2, #24]
   3c708:	ldr	x2, [x2, #40]
   3c70c:	add	x1, x2, x1, lsl #3
   3c710:	ldur	x1, [x1, #-8]
   3c714:	cbz	x1, 3c8cc <PyInit__decimal@@Base+0x2068c>
   3c718:	cmp	x19, x0
   3c71c:	b.eq	3c8ac <PyInit__decimal@@Base+0x2066c>  // b.none
   3c720:	add	x24, sp, #0x90
   3c724:	mov	x5, x22
   3c728:	mov	x0, x24
   3c72c:	mov	x4, x23
   3c730:	mov	x3, x19
   3c734:	mov	x2, x20
   3c738:	mov	x1, x21
   3c73c:	bl	351b8 <PyInit__decimal@@Base+0x18f78>
   3c740:	ldrb	w0, [sp, #144]
   3c744:	tst	w0, #0xc
   3c748:	b.ne	3c790 <PyInit__decimal@@Base+0x20550>  // b.any
   3c74c:	ldrb	w0, [x21]
   3c750:	tst	w0, #0xc
   3c754:	b.ne	3c790 <PyInit__decimal@@Base+0x20550>  // b.any
   3c758:	ldr	x0, [x21, #24]
   3c75c:	ldr	x1, [x21, #40]
   3c760:	add	x0, x1, x0, lsl #3
   3c764:	ldur	x0, [x0, #-8]
   3c768:	cbz	x0, 3c790 <PyInit__decimal@@Base+0x20550>
   3c76c:	ldp	x0, x3, [x19, #8]
   3c770:	ldp	x1, x2, [x21, #8]
   3c774:	add	x0, x0, x3
   3c778:	add	x1, x1, x2
   3c77c:	sub	x0, x0, x1
   3c780:	add	x0, x0, #0x1
   3c784:	cmp	x0, #0x2
   3c788:	b.ls	3c8f0 <PyInit__decimal@@Base+0x206b0>  // b.plast
   3c78c:	nop
   3c790:	ldrb	w0, [sp, #96]
   3c794:	tst	w0, #0xe0
   3c798:	b.ne	3c7b0 <PyInit__decimal@@Base+0x20570>  // b.any
   3c79c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c7a0:	ldr	x0, [sp, #136]
   3c7a4:	ldr	x1, [x1, #1912]
   3c7a8:	blr	x1
   3c7ac:	ldrb	w0, [sp, #96]
   3c7b0:	tbnz	w0, #4, 3c7c4 <PyInit__decimal@@Base+0x20584>
   3c7b4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c7b8:	add	x0, sp, #0x60
   3c7bc:	ldr	x1, [x1, #1912]
   3c7c0:	blr	x1
   3c7c4:	ldrb	w0, [sp, #144]
   3c7c8:	tst	w0, #0xe0
   3c7cc:	b.ne	3c7e4 <PyInit__decimal@@Base+0x205a4>  // b.any
   3c7d0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c7d4:	ldr	x0, [sp, #184]
   3c7d8:	ldr	x1, [x1, #1912]
   3c7dc:	blr	x1
   3c7e0:	ldrb	w0, [sp, #144]
   3c7e4:	tbnz	w0, #4, 3c7f8 <PyInit__decimal@@Base+0x205b8>
   3c7e8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3c7ec:	mov	x0, x24
   3c7f0:	ldr	x1, [x1, #1912]
   3c7f4:	blr	x1
   3c7f8:	mov	x2, x22
   3c7fc:	mov	x1, x23
   3c800:	mov	x0, x21
   3c804:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3c808:	ldp	x29, x30, [sp]
   3c80c:	ldp	x19, x20, [sp, #16]
   3c810:	ldp	x21, x22, [sp, #32]
   3c814:	ldp	x23, x24, [sp, #48]
   3c818:	add	sp, sp, #0x4f0
   3c81c:	ret
   3c820:	mov	x4, x22
   3c824:	mov	x3, x23
   3c828:	mov	x2, x19
   3c82c:	mov	x1, x20
   3c830:	mov	x0, x21
   3c834:	bl	2cf20 <PyInit__decimal@@Base+0x10ce0>
   3c838:	cbnz	w0, 3c808 <PyInit__decimal@@Base+0x205c8>
   3c83c:	ldrb	w0, [x20]
   3c840:	tbnz	w0, #1, 3c884 <PyInit__decimal@@Base+0x20644>
   3c844:	ldrb	w0, [x19]
   3c848:	tbz	w0, #1, 3cb60 <PyInit__decimal@@Base+0x20920>
   3c84c:	mov	x1, x20
   3c850:	mov	x2, x22
   3c854:	mov	x0, x21
   3c858:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3c85c:	mov	x2, x22
   3c860:	mov	x1, x23
   3c864:	mov	x0, x21
   3c868:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3c86c:	ldp	x29, x30, [sp]
   3c870:	ldp	x19, x20, [sp, #16]
   3c874:	ldp	x21, x22, [sp, #32]
   3c878:	ldp	x23, x24, [sp, #48]
   3c87c:	add	sp, sp, #0x4f0
   3c880:	ret
   3c884:	mov	x2, x22
   3c888:	mov	x0, x21
   3c88c:	mov	w1, #0x100                 	// #256
   3c890:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3c894:	ldp	x29, x30, [sp]
   3c898:	ldp	x19, x20, [sp, #16]
   3c89c:	ldp	x21, x22, [sp, #32]
   3c8a0:	ldp	x23, x24, [sp, #48]
   3c8a4:	add	sp, sp, #0x4f0
   3c8a8:	ret
   3c8ac:	add	x24, sp, #0x60
   3c8b0:	mov	x2, x4
   3c8b4:	mov	x0, x24
   3c8b8:	mov	x1, x19
   3c8bc:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3c8c0:	cbz	w0, 3c9e0 <PyInit__decimal@@Base+0x207a0>
   3c8c4:	mov	x19, x24
   3c8c8:	b	3c720 <PyInit__decimal@@Base+0x204e0>
   3c8cc:	ldr	x1, [x20, #24]
   3c8d0:	ldr	x2, [x20, #40]
   3c8d4:	add	x1, x2, x1, lsl #3
   3c8d8:	ldur	x1, [x1, #-8]
   3c8dc:	cbnz	x1, 3c884 <PyInit__decimal@@Base+0x20644>
   3c8e0:	mov	x2, x4
   3c8e4:	mov	w1, #0x10                  	// #16
   3c8e8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3c8ec:	b	3c808 <PyInit__decimal@@Base+0x205c8>
   3c8f0:	ldr	x0, [sp, #168]
   3c8f4:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3c8f8:	ldr	x3, [sp, #184]
   3c8fc:	add	x2, x2, #0x180
   3c900:	stp	x25, x26, [sp, #64]
   3c904:	add	x4, x3, x0, lsl #3
   3c908:	stp	x27, x28, [sp, #80]
   3c90c:	ldr	x1, [x2, #72]
   3c910:	ldur	x4, [x4, #-8]
   3c914:	cmp	x4, x1
   3c918:	b.cs	3ca24 <PyInit__decimal@@Base+0x207e4>  // b.hs, b.nlast
   3c91c:	ldr	x5, [x2, #32]
   3c920:	cmp	x4, x5
   3c924:	b.cs	3ca9c <PyInit__decimal@@Base+0x2085c>  // b.hs, b.nlast
   3c928:	ldr	x6, [x2, #16]
   3c92c:	cmp	x4, x6
   3c930:	b.cs	3caf4 <PyInit__decimal@@Base+0x208b4>  // b.hs, b.nlast
   3c934:	ldr	x1, [x2, #8]
   3c938:	cmp	x4, x1
   3c93c:	csel	x1, x1, x6, cc  // cc = lo, ul, last
   3c940:	sub	x1, x1, #0x1
   3c944:	mov	w26, #0x0                   	// #0
   3c948:	cmp	x4, x1
   3c94c:	b.eq	3c9f4 <PyInit__decimal@@Base+0x207b4>  // b.none
   3c950:	mov	x0, x24
   3c954:	add	x25, sp, #0xc0
   3c958:	bl	2b8b8 <PyInit__decimal@@Base+0xf678>
   3c95c:	mov	w27, w0
   3c960:	mov	x0, x25
   3c964:	ldr	x28, [sp, #160]
   3c968:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   3c96c:	ldrb	w1, [x19]
   3c970:	mov	x2, x19
   3c974:	ldrb	w0, [x20]
   3c978:	and	w3, w1, #0x1
   3c97c:	and	w0, w0, #0x1
   3c980:	cmp	w3, w0
   3c984:	b.ne	3c990 <PyInit__decimal@@Base+0x20750>  // b.any
   3c988:	mvn	w1, w1
   3c98c:	and	w3, w1, #0x1
   3c990:	mov	x1, x21
   3c994:	mov	x0, x24
   3c998:	add	x6, x25, #0x1c
   3c99c:	add	x5, x25, #0x24
   3c9a0:	mov	x4, x25
   3c9a4:	bl	2e710 <PyInit__decimal@@Base+0x124d0>
   3c9a8:	ldr	w0, [sp, #220]
   3c9ac:	mov	w1, #0x3be                 	// #958
   3c9b0:	ands	w1, w0, w1
   3c9b4:	b.ne	3ca84 <PyInit__decimal@@Base+0x20844>  // b.any
   3c9b8:	mov	x1, x21
   3c9bc:	mov	x0, x24
   3c9c0:	bl	29ff0 <PyInit__decimal@@Base+0xddb0>
   3c9c4:	cmp	w0, #0x0
   3c9c8:	b.lt	3ca58 <PyInit__decimal@@Base+0x20818>  // b.tstop
   3c9cc:	ccmp	w27, #0x0, #0x4, eq  // eq = none
   3c9d0:	b.ne	3ca58 <PyInit__decimal@@Base+0x20818>  // b.any
   3c9d4:	ldp	x25, x26, [sp, #64]
   3c9d8:	ldp	x27, x28, [sp, #80]
   3c9dc:	b	3c790 <PyInit__decimal@@Base+0x20550>
   3c9e0:	mov	x2, x22
   3c9e4:	mov	x0, x19
   3c9e8:	mov	w1, #0x200                 	// #512
   3c9ec:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3c9f0:	b	3c808 <PyInit__decimal@@Base+0x205c8>
   3c9f4:	mov	x2, #0xffffffff89e7ffff    	// #-1981284353
   3c9f8:	sub	x0, x0, #0x1
   3c9fc:	movk	x2, #0x2304, lsl #32
   3ca00:	movk	x2, #0x8ac7, lsl #48
   3ca04:	b	3ca14 <PyInit__decimal@@Base+0x207d4>
   3ca08:	ldr	x1, [x3, x0, lsl #3]
   3ca0c:	cmp	x1, x2
   3ca10:	b.ne	3caec <PyInit__decimal@@Base+0x208ac>  // b.any
   3ca14:	subs	x0, x0, #0x1
   3ca18:	b.pl	3ca08 <PyInit__decimal@@Base+0x207c8>  // b.nfrst
   3ca1c:	mov	w26, #0x1                   	// #1
   3ca20:	b	3c950 <PyInit__decimal@@Base+0x20710>
   3ca24:	ldr	x1, [x2, #112]
   3ca28:	cmp	x4, x1
   3ca2c:	b.cs	3cac4 <PyInit__decimal@@Base+0x20884>  // b.hs, b.nlast
   3ca30:	ldr	x5, [x2, #88]
   3ca34:	cmp	x4, x5
   3ca38:	b.cc	3cb18 <PyInit__decimal@@Base+0x208d8>  // b.lo, b.ul, b.last
   3ca3c:	ldr	x5, [x2, #104]
   3ca40:	cmp	x4, x5
   3ca44:	b.cs	3c940 <PyInit__decimal@@Base+0x20700>  // b.hs, b.nlast
   3ca48:	ldr	x1, [x2, #96]
   3ca4c:	cmp	x4, x1
   3ca50:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   3ca54:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3ca58:	mov	x2, x22
   3ca5c:	cbz	w26, 3ca6c <PyInit__decimal@@Base+0x2082c>
   3ca60:	ldr	x0, [x23]
   3ca64:	cmp	x0, x28
   3ca68:	b.eq	3cb48 <PyInit__decimal@@Base+0x20908>  // b.none
   3ca6c:	mov	x1, x24
   3ca70:	mov	x0, x21
   3ca74:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3ca78:	ldp	x25, x26, [sp, #64]
   3ca7c:	ldp	x27, x28, [sp, #80]
   3ca80:	b	3c790 <PyInit__decimal@@Base+0x20550>
   3ca84:	mov	x2, x22
   3ca88:	mov	x0, x21
   3ca8c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3ca90:	ldp	x25, x26, [sp, #64]
   3ca94:	ldp	x27, x28, [sp, #80]
   3ca98:	b	3c790 <PyInit__decimal@@Base+0x20550>
   3ca9c:	ldr	x5, [x2, #48]
   3caa0:	cmp	x4, x5
   3caa4:	b.cc	3cb28 <PyInit__decimal@@Base+0x208e8>  // b.lo, b.ul, b.last
   3caa8:	ldr	x5, [x2, #64]
   3caac:	cmp	x4, x5
   3cab0:	b.cs	3c940 <PyInit__decimal@@Base+0x20700>  // b.hs, b.nlast
   3cab4:	ldr	x1, [x2, #56]
   3cab8:	cmp	x4, x1
   3cabc:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   3cac0:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3cac4:	ldr	x5, [x2, #144]
   3cac8:	cmp	x4, x5
   3cacc:	b.cs	3cb04 <PyInit__decimal@@Base+0x208c4>  // b.hs, b.nlast
   3cad0:	ldr	x6, [x2, #128]
   3cad4:	cmp	x4, x6
   3cad8:	b.cs	3cb38 <PyInit__decimal@@Base+0x208f8>  // b.hs, b.nlast
   3cadc:	ldr	x1, [x2, #120]
   3cae0:	cmp	x4, x1
   3cae4:	csel	x1, x1, x6, cc  // cc = lo, ul, last
   3cae8:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3caec:	mov	w26, #0x0                   	// #0
   3caf0:	b	3c950 <PyInit__decimal@@Base+0x20710>
   3caf4:	ldr	x1, [x2, #24]
   3caf8:	cmp	x4, x1
   3cafc:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   3cb00:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3cb04:	ldr	x1, [x2, #152]
   3cb08:	cmp	x4, x1
   3cb0c:	b.cc	3c940 <PyInit__decimal@@Base+0x20700>  // b.lo, b.ul, b.last
   3cb10:	ldr	x1, [x2, #160]
   3cb14:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3cb18:	ldr	x1, [x2, #80]
   3cb1c:	cmp	x4, x1
   3cb20:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   3cb24:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3cb28:	ldr	x1, [x2, #40]
   3cb2c:	cmp	x4, x1
   3cb30:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   3cb34:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3cb38:	ldr	x1, [x2, #136]
   3cb3c:	cmp	x4, x1
   3cb40:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   3cb44:	b	3c940 <PyInit__decimal@@Base+0x20700>
   3cb48:	mov	x0, x21
   3cb4c:	mov	w1, #0x8                   	// #8
   3cb50:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3cb54:	ldp	x25, x26, [sp, #64]
   3cb58:	ldp	x27, x28, [sp, #80]
   3cb5c:	b	3c790 <PyInit__decimal@@Base+0x20550>
   3cb60:	stp	x25, x26, [sp, #64]
   3cb64:	stp	x27, x28, [sp, #80]
   3cb68:	bl	67c0 <abort@plt>
   3cb6c:	nop
   3cb70:	stp	x29, x30, [sp, #-64]!
   3cb74:	mov	x5, #0xfffd                	// #65533
   3cb78:	movk	x5, #0x4ec7, lsl #16
   3cb7c:	mov	x29, sp
   3cb80:	movk	x5, #0x6d67, lsl #32
   3cb84:	movk	x5, #0x1bc1, lsl #48
   3cb88:	add	x5, x2, x5
   3cb8c:	stp	x19, x20, [sp, #16]
   3cb90:	mov	x19, x2
   3cb94:	mov	x2, #0xfffd                	// #65533
   3cb98:	stp	x21, x22, [sp, #32]
   3cb9c:	movk	x2, #0xf62b, lsl #16
   3cba0:	movk	x2, #0x241a, lsl #32
   3cba4:	mov	x21, x4
   3cba8:	movk	x2, #0x29a2, lsl #48
   3cbac:	mov	x20, x0
   3cbb0:	cmp	x5, x2
   3cbb4:	b.hi	3cc80 <PyInit__decimal@@Base+0x20a40>  // b.pmore
   3cbb8:	ldrb	w4, [x1]
   3cbbc:	tst	w4, #0xe
   3cbc0:	b.ne	3cd08 <PyInit__decimal@@Base+0x20ac8>  // b.any
   3cbc4:	mov	x22, x3
   3cbc8:	ldr	x2, [x1, #24]
   3cbcc:	ldr	x3, [x1, #40]
   3cbd0:	add	x2, x3, x2, lsl #3
   3cbd4:	ldur	x2, [x2, #-8]
   3cbd8:	cbnz	x2, 3cbf4 <PyInit__decimal@@Base+0x209b4>
   3cbdc:	mov	x3, x19
   3cbe0:	and	w1, w4, #0x1
   3cbe4:	ldp	x19, x20, [sp, #16]
   3cbe8:	ldp	x21, x22, [sp, #32]
   3cbec:	ldp	x29, x30, [sp], #64
   3cbf0:	b	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3cbf4:	ldr	x3, [x1, #8]
   3cbf8:	subs	x2, x3, x19
   3cbfc:	b.mi	3cc9c <PyInit__decimal@@Base+0x20a5c>  // b.first
   3cc00:	ldr	x3, [x1, #16]
   3cc04:	mov	x4, #0xa7640000            	// #2808348672
   3cc08:	movk	x4, #0xb6b3, lsl #32
   3cc0c:	add	x3, x2, x3
   3cc10:	movk	x4, #0xde0, lsl #48
   3cc14:	cmp	x3, x4
   3cc18:	b.gt	3cc80 <PyInit__decimal@@Base+0x20a40>
   3cc1c:	mov	x3, x21
   3cc20:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3cc24:	cbz	w0, 3cc70 <PyInit__decimal@@Base+0x20a30>
   3cc28:	ldrb	w0, [x20]
   3cc2c:	str	x19, [x20, #8]
   3cc30:	tst	w0, #0xe
   3cc34:	b.ne	3cc70 <PyInit__decimal@@Base+0x20a30>  // b.any
   3cc38:	ldr	x0, [x20, #24]
   3cc3c:	ldr	x1, [x20, #40]
   3cc40:	add	x0, x1, x0, lsl #3
   3cc44:	ldur	x0, [x0, #-8]
   3cc48:	cbz	x0, 3cc70 <PyInit__decimal@@Base+0x20a30>
   3cc4c:	ldp	x0, x2, [x20, #8]
   3cc50:	ldr	x1, [x22, #16]
   3cc54:	add	x0, x0, x2
   3cc58:	sub	x0, x0, #0x1
   3cc5c:	cmp	x0, x1
   3cc60:	b.ge	3cc70 <PyInit__decimal@@Base+0x20a30>  // b.tcont
   3cc64:	ldr	w0, [x21]
   3cc68:	orr	w0, w0, #0x2000
   3cc6c:	str	w0, [x21]
   3cc70:	ldp	x19, x20, [sp, #16]
   3cc74:	ldp	x21, x22, [sp, #32]
   3cc78:	ldp	x29, x30, [sp], #64
   3cc7c:	ret
   3cc80:	mov	x2, x21
   3cc84:	mov	x0, x20
   3cc88:	ldp	x19, x20, [sp, #16]
   3cc8c:	mov	w1, #0x100                 	// #256
   3cc90:	ldp	x21, x22, [sp, #32]
   3cc94:	ldp	x29, x30, [sp], #64
   3cc98:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   3cc9c:	sub	x2, x19, x3
   3cca0:	mov	x3, x21
   3cca4:	str	x23, [sp, #48]
   3cca8:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   3ccac:	mov	x23, x0
   3ccb0:	cmn	x0, #0x1
   3ccb4:	b.eq	3cd1c <PyInit__decimal@@Base+0x20adc>  // b.none
   3ccb8:	ldr	w0, [x22, #36]
   3ccbc:	str	x19, [x20, #8]
   3ccc0:	cmp	w0, #0x4
   3ccc4:	b.eq	3ce04 <PyInit__decimal@@Base+0x20bc4>  // b.none
   3ccc8:	b.gt	3cdb8 <PyInit__decimal@@Base+0x20b78>
   3cccc:	cmp	w0, #0x2
   3ccd0:	b.eq	3ce30 <PyInit__decimal@@Base+0x20bf0>  // b.none
   3ccd4:	cmp	w0, #0x3
   3ccd8:	b.ne	3cd24 <PyInit__decimal@@Base+0x20ae4>  // b.any
   3ccdc:	ldrb	w0, [x20]
   3cce0:	cbz	x23, 3cdd8 <PyInit__decimal@@Base+0x20b98>
   3cce4:	and	w0, w0, #0x1
   3cce8:	cbnz	w0, 3cd54 <PyInit__decimal@@Base+0x20b14>
   3ccec:	ldrb	w0, [x20]
   3ccf0:	ldr	w1, [x21]
   3ccf4:	mov	w2, #0x1040                	// #4160
   3ccf8:	orr	w1, w1, w2
   3ccfc:	ldr	x23, [sp, #48]
   3cd00:	str	w1, [x21]
   3cd04:	b	3cc30 <PyInit__decimal@@Base+0x209f0>
   3cd08:	mov	x2, x21
   3cd0c:	ldp	x19, x20, [sp, #16]
   3cd10:	ldp	x21, x22, [sp, #32]
   3cd14:	ldp	x29, x30, [sp], #64
   3cd18:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3cd1c:	ldr	x23, [sp, #48]
   3cd20:	b	3cc70 <PyInit__decimal@@Base+0x20a30>
   3cd24:	cmp	x23, #0x0
   3cd28:	cset	w1, ne  // ne = any
   3cd2c:	cbnz	w0, 3cd38 <PyInit__decimal@@Base+0x20af8>
   3cd30:	cbnz	w1, 3cd54 <PyInit__decimal@@Base+0x20b14>
   3cd34:	nop
   3cd38:	ldr	w1, [x21]
   3cd3c:	orr	w0, w1, #0x1000
   3cd40:	str	w0, [x21]
   3cd44:	ldrb	w0, [x20]
   3cd48:	cbnz	x23, 3ccf4 <PyInit__decimal@@Base+0x20ab4>
   3cd4c:	ldr	x23, [sp, #48]
   3cd50:	b	3cc30 <PyInit__decimal@@Base+0x209f0>
   3cd54:	ldr	x0, [x20, #40]
   3cd58:	ldr	x1, [x20, #24]
   3cd5c:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   3cd60:	cbz	x0, 3cdac <PyInit__decimal@@Base+0x20b6c>
   3cd64:	ldp	x2, x3, [x20, #24]
   3cd68:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   3cd6c:	ldr	x1, [x0, #1880]
   3cd70:	add	x0, x2, #0x1
   3cd74:	cmp	x0, x1
   3cd78:	csel	x1, x0, x1, ge  // ge = tcont
   3cd7c:	cmp	x1, x3
   3cd80:	b.eq	3cd94 <PyInit__decimal@@Base+0x20b54>  // b.none
   3cd84:	ldrb	w0, [x20]
   3cd88:	tbz	w0, #5, 3ce6c <PyInit__decimal@@Base+0x20c2c>
   3cd8c:	cmp	x1, x3
   3cd90:	b.gt	3ce84 <PyInit__decimal@@Base+0x20c44>
   3cd94:	ldr	x0, [x20, #40]
   3cd98:	mov	x1, #0x1                   	// #1
   3cd9c:	str	x1, [x0, x2, lsl #3]
   3cda0:	ldr	x0, [x20, #24]
   3cda4:	add	x0, x0, x1
   3cda8:	str	x0, [x20, #24]
   3cdac:	mov	x0, x20
   3cdb0:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3cdb4:	b	3cd38 <PyInit__decimal@@Base+0x20af8>
   3cdb8:	cmp	w0, #0x6
   3cdbc:	b.eq	3ce14 <PyInit__decimal@@Base+0x20bd4>  // b.none
   3cdc0:	cmp	w0, #0x7
   3cdc4:	b.ne	3cdec <PyInit__decimal@@Base+0x20bac>  // b.any
   3cdc8:	ldr	x0, [x20, #40]
   3cdcc:	ldr	x2, [x0]
   3cdd0:	cbnz	x23, 3ce44 <PyInit__decimal@@Base+0x20c04>
   3cdd4:	ldrb	w0, [x20]
   3cdd8:	ldr	w1, [x21]
   3cddc:	ldr	x23, [sp, #48]
   3cde0:	orr	w1, w1, #0x1000
   3cde4:	str	w1, [x21]
   3cde8:	b	3cc30 <PyInit__decimal@@Base+0x209f0>
   3cdec:	cmp	x23, #0x5
   3cdf0:	cset	w1, hi  // hi = pmore
   3cdf4:	cmp	w0, #0x5
   3cdf8:	b.ne	3cd38 <PyInit__decimal@@Base+0x20af8>  // b.any
   3cdfc:	cbz	w1, 3cd38 <PyInit__decimal@@Base+0x20af8>
   3ce00:	b	3cd54 <PyInit__decimal@@Base+0x20b14>
   3ce04:	cmp	x23, #0x4
   3ce08:	cset	w1, hi  // hi = pmore
   3ce0c:	cbz	w1, 3cd38 <PyInit__decimal@@Base+0x20af8>
   3ce10:	b	3cd54 <PyInit__decimal@@Base+0x20b14>
   3ce14:	cmp	x23, #0x5
   3ce18:	b.hi	3cd54 <PyInit__decimal@@Base+0x20b14>  // b.pmore
   3ce1c:	b.ne	3cd38 <PyInit__decimal@@Base+0x20af8>  // b.any
   3ce20:	ldr	x0, [x20, #40]
   3ce24:	ldr	x0, [x0]
   3ce28:	and	w0, w0, #0x1
   3ce2c:	b	3cce8 <PyInit__decimal@@Base+0x20aa8>
   3ce30:	ldrb	w0, [x20]
   3ce34:	cbz	x23, 3cdd8 <PyInit__decimal@@Base+0x20b98>
   3ce38:	mvn	w0, w0
   3ce3c:	and	w0, w0, #0x1
   3ce40:	b	3cce8 <PyInit__decimal@@Base+0x20aa8>
   3ce44:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   3ce48:	movk	x1, #0xcccd
   3ce4c:	umulh	x1, x2, x1
   3ce50:	lsr	x1, x1, #3
   3ce54:	add	x1, x1, x1, lsl #2
   3ce58:	sub	x1, x2, x1, lsl #1
   3ce5c:	cmp	w1, #0x0
   3ce60:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   3ce64:	b.eq	3cd58 <PyInit__decimal@@Base+0x20b18>  // b.none
   3ce68:	b	3ccec <PyInit__decimal@@Base+0x20aac>
   3ce6c:	mov	x2, x21
   3ce70:	mov	x0, x20
   3ce74:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3ce78:	cbz	w0, 3cd38 <PyInit__decimal@@Base+0x20af8>
   3ce7c:	ldr	x2, [x20, #24]
   3ce80:	b	3cd94 <PyInit__decimal@@Base+0x20b54>
   3ce84:	mov	x2, x21
   3ce88:	mov	x0, x20
   3ce8c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3ce90:	b	3ce78 <PyInit__decimal@@Base+0x20c38>
   3ce94:	nop
   3ce98:	stp	x29, x30, [sp, #-64]!
   3ce9c:	mov	x5, #0xfffc                	// #65532
   3cea0:	movk	x5, #0xf62b, lsl #16
   3cea4:	mov	x29, sp
   3cea8:	movk	x5, #0x241a, lsl #32
   3ceac:	movk	x5, #0x29a2, lsl #48
   3ceb0:	add	x5, x2, x5
   3ceb4:	stp	x19, x20, [sp, #16]
   3ceb8:	mov	x19, x2
   3cebc:	mov	x2, #0xfffc                	// #65532
   3cec0:	stp	x21, x22, [sp, #32]
   3cec4:	movk	x2, #0x9d8f, lsl #16
   3cec8:	movk	x2, #0xdace, lsl #32
   3cecc:	mov	x21, x4
   3ced0:	movk	x2, #0x3782, lsl #48
   3ced4:	mov	x20, x0
   3ced8:	cmp	x5, x2
   3cedc:	b.hi	3cfa8 <PyInit__decimal@@Base+0x20d68>  // b.pmore
   3cee0:	ldrb	w4, [x1]
   3cee4:	tst	w4, #0xe
   3cee8:	b.ne	3d030 <PyInit__decimal@@Base+0x20df0>  // b.any
   3ceec:	mov	x22, x3
   3cef0:	ldr	x2, [x1, #24]
   3cef4:	ldr	x3, [x1, #40]
   3cef8:	add	x2, x3, x2, lsl #3
   3cefc:	ldur	x2, [x2, #-8]
   3cf00:	cbnz	x2, 3cf1c <PyInit__decimal@@Base+0x20cdc>
   3cf04:	mov	x3, x19
   3cf08:	and	w1, w4, #0x1
   3cf0c:	ldp	x19, x20, [sp, #16]
   3cf10:	ldp	x21, x22, [sp, #32]
   3cf14:	ldp	x29, x30, [sp], #64
   3cf18:	b	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3cf1c:	ldr	x3, [x1, #8]
   3cf20:	subs	x2, x3, x19
   3cf24:	b.mi	3cfc4 <PyInit__decimal@@Base+0x20d84>  // b.first
   3cf28:	ldr	x3, [x1, #16]
   3cf2c:	mov	x4, #0xa7640000            	// #2808348672
   3cf30:	movk	x4, #0xb6b3, lsl #32
   3cf34:	add	x3, x2, x3
   3cf38:	movk	x4, #0xde0, lsl #48
   3cf3c:	cmp	x3, x4
   3cf40:	b.gt	3cfa8 <PyInit__decimal@@Base+0x20d68>
   3cf44:	mov	x3, x21
   3cf48:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3cf4c:	cbz	w0, 3cf98 <PyInit__decimal@@Base+0x20d58>
   3cf50:	ldrb	w0, [x20]
   3cf54:	str	x19, [x20, #8]
   3cf58:	tst	w0, #0xe
   3cf5c:	b.ne	3cf98 <PyInit__decimal@@Base+0x20d58>  // b.any
   3cf60:	ldr	x0, [x20, #24]
   3cf64:	ldr	x1, [x20, #40]
   3cf68:	add	x0, x1, x0, lsl #3
   3cf6c:	ldur	x0, [x0, #-8]
   3cf70:	cbz	x0, 3cf98 <PyInit__decimal@@Base+0x20d58>
   3cf74:	ldp	x0, x2, [x20, #8]
   3cf78:	ldr	x1, [x22, #16]
   3cf7c:	add	x0, x0, x2
   3cf80:	sub	x0, x0, #0x1
   3cf84:	cmp	x0, x1
   3cf88:	b.ge	3cf98 <PyInit__decimal@@Base+0x20d58>  // b.tcont
   3cf8c:	ldr	w0, [x21]
   3cf90:	orr	w0, w0, #0x2000
   3cf94:	str	w0, [x21]
   3cf98:	ldp	x19, x20, [sp, #16]
   3cf9c:	ldp	x21, x22, [sp, #32]
   3cfa0:	ldp	x29, x30, [sp], #64
   3cfa4:	ret
   3cfa8:	mov	x2, x21
   3cfac:	mov	x0, x20
   3cfb0:	ldp	x19, x20, [sp, #16]
   3cfb4:	mov	w1, #0x100                 	// #256
   3cfb8:	ldp	x21, x22, [sp, #32]
   3cfbc:	ldp	x29, x30, [sp], #64
   3cfc0:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   3cfc4:	sub	x2, x19, x3
   3cfc8:	mov	x3, x21
   3cfcc:	str	x23, [sp, #48]
   3cfd0:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   3cfd4:	mov	x23, x0
   3cfd8:	cmn	x0, #0x1
   3cfdc:	b.eq	3d044 <PyInit__decimal@@Base+0x20e04>  // b.none
   3cfe0:	ldr	w0, [x22, #36]
   3cfe4:	str	x19, [x20, #8]
   3cfe8:	cmp	w0, #0x4
   3cfec:	b.eq	3d12c <PyInit__decimal@@Base+0x20eec>  // b.none
   3cff0:	b.gt	3d0e0 <PyInit__decimal@@Base+0x20ea0>
   3cff4:	cmp	w0, #0x2
   3cff8:	b.eq	3d158 <PyInit__decimal@@Base+0x20f18>  // b.none
   3cffc:	cmp	w0, #0x3
   3d000:	b.ne	3d04c <PyInit__decimal@@Base+0x20e0c>  // b.any
   3d004:	ldrb	w0, [x20]
   3d008:	cbz	x23, 3d100 <PyInit__decimal@@Base+0x20ec0>
   3d00c:	and	w0, w0, #0x1
   3d010:	cbnz	w0, 3d07c <PyInit__decimal@@Base+0x20e3c>
   3d014:	ldrb	w0, [x20]
   3d018:	ldr	w1, [x21]
   3d01c:	mov	w2, #0x1040                	// #4160
   3d020:	orr	w1, w1, w2
   3d024:	ldr	x23, [sp, #48]
   3d028:	str	w1, [x21]
   3d02c:	b	3cf58 <PyInit__decimal@@Base+0x20d18>
   3d030:	mov	x2, x21
   3d034:	ldp	x19, x20, [sp, #16]
   3d038:	ldp	x21, x22, [sp, #32]
   3d03c:	ldp	x29, x30, [sp], #64
   3d040:	b	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3d044:	ldr	x23, [sp, #48]
   3d048:	b	3cf98 <PyInit__decimal@@Base+0x20d58>
   3d04c:	cmp	x23, #0x0
   3d050:	cset	w1, ne  // ne = any
   3d054:	cbnz	w0, 3d060 <PyInit__decimal@@Base+0x20e20>
   3d058:	cbnz	w1, 3d07c <PyInit__decimal@@Base+0x20e3c>
   3d05c:	nop
   3d060:	ldr	w1, [x21]
   3d064:	orr	w0, w1, #0x1000
   3d068:	str	w0, [x21]
   3d06c:	ldrb	w0, [x20]
   3d070:	cbnz	x23, 3d01c <PyInit__decimal@@Base+0x20ddc>
   3d074:	ldr	x23, [sp, #48]
   3d078:	b	3cf58 <PyInit__decimal@@Base+0x20d18>
   3d07c:	ldr	x0, [x20, #40]
   3d080:	ldr	x1, [x20, #24]
   3d084:	bl	1d218 <PyInit__decimal@@Base+0xfd8>
   3d088:	cbz	x0, 3d0d4 <PyInit__decimal@@Base+0x20e94>
   3d08c:	ldp	x2, x3, [x20, #24]
   3d090:	adrp	x0, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d094:	ldr	x1, [x0, #1880]
   3d098:	add	x0, x2, #0x1
   3d09c:	cmp	x0, x1
   3d0a0:	csel	x1, x0, x1, ge  // ge = tcont
   3d0a4:	cmp	x1, x3
   3d0a8:	b.eq	3d0bc <PyInit__decimal@@Base+0x20e7c>  // b.none
   3d0ac:	ldrb	w0, [x20]
   3d0b0:	tbz	w0, #5, 3d194 <PyInit__decimal@@Base+0x20f54>
   3d0b4:	cmp	x1, x3
   3d0b8:	b.gt	3d1ac <PyInit__decimal@@Base+0x20f6c>
   3d0bc:	ldr	x0, [x20, #40]
   3d0c0:	mov	x1, #0x1                   	// #1
   3d0c4:	str	x1, [x0, x2, lsl #3]
   3d0c8:	ldr	x0, [x20, #24]
   3d0cc:	add	x0, x0, x1
   3d0d0:	str	x0, [x20, #24]
   3d0d4:	mov	x0, x20
   3d0d8:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3d0dc:	b	3d060 <PyInit__decimal@@Base+0x20e20>
   3d0e0:	cmp	w0, #0x6
   3d0e4:	b.eq	3d13c <PyInit__decimal@@Base+0x20efc>  // b.none
   3d0e8:	cmp	w0, #0x7
   3d0ec:	b.ne	3d114 <PyInit__decimal@@Base+0x20ed4>  // b.any
   3d0f0:	ldr	x0, [x20, #40]
   3d0f4:	ldr	x2, [x0]
   3d0f8:	cbnz	x23, 3d16c <PyInit__decimal@@Base+0x20f2c>
   3d0fc:	ldrb	w0, [x20]
   3d100:	ldr	w1, [x21]
   3d104:	ldr	x23, [sp, #48]
   3d108:	orr	w1, w1, #0x1000
   3d10c:	str	w1, [x21]
   3d110:	b	3cf58 <PyInit__decimal@@Base+0x20d18>
   3d114:	cmp	x23, #0x5
   3d118:	cset	w1, hi  // hi = pmore
   3d11c:	cmp	w0, #0x5
   3d120:	b.ne	3d060 <PyInit__decimal@@Base+0x20e20>  // b.any
   3d124:	cbz	w1, 3d060 <PyInit__decimal@@Base+0x20e20>
   3d128:	b	3d07c <PyInit__decimal@@Base+0x20e3c>
   3d12c:	cmp	x23, #0x4
   3d130:	cset	w1, hi  // hi = pmore
   3d134:	cbz	w1, 3d060 <PyInit__decimal@@Base+0x20e20>
   3d138:	b	3d07c <PyInit__decimal@@Base+0x20e3c>
   3d13c:	cmp	x23, #0x5
   3d140:	b.hi	3d07c <PyInit__decimal@@Base+0x20e3c>  // b.pmore
   3d144:	b.ne	3d060 <PyInit__decimal@@Base+0x20e20>  // b.any
   3d148:	ldr	x0, [x20, #40]
   3d14c:	ldr	x0, [x0]
   3d150:	and	w0, w0, #0x1
   3d154:	b	3d010 <PyInit__decimal@@Base+0x20dd0>
   3d158:	ldrb	w0, [x20]
   3d15c:	cbz	x23, 3d100 <PyInit__decimal@@Base+0x20ec0>
   3d160:	mvn	w0, w0
   3d164:	and	w0, w0, #0x1
   3d168:	b	3d010 <PyInit__decimal@@Base+0x20dd0>
   3d16c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   3d170:	movk	x1, #0xcccd
   3d174:	umulh	x1, x2, x1
   3d178:	lsr	x1, x1, #3
   3d17c:	add	x1, x1, x1, lsl #2
   3d180:	sub	x1, x2, x1, lsl #1
   3d184:	cmp	w1, #0x0
   3d188:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   3d18c:	b.eq	3d080 <PyInit__decimal@@Base+0x20e40>  // b.none
   3d190:	b	3d014 <PyInit__decimal@@Base+0x20dd4>
   3d194:	mov	x2, x21
   3d198:	mov	x0, x20
   3d19c:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3d1a0:	cbz	w0, 3d060 <PyInit__decimal@@Base+0x20e20>
   3d1a4:	ldr	x2, [x20, #24]
   3d1a8:	b	3d0bc <PyInit__decimal@@Base+0x20e7c>
   3d1ac:	mov	x2, x21
   3d1b0:	mov	x0, x20
   3d1b4:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3d1b8:	b	3d1a0 <PyInit__decimal@@Base+0x20f60>
   3d1bc:	nop
   3d1c0:	mov	x4, x1
   3d1c4:	mov	x5, x2
   3d1c8:	mov	x1, x0
   3d1cc:	mov	x2, x4
   3d1d0:	mov	w0, #0x0                   	// #0
   3d1d4:	mov	x4, x3
   3d1d8:	mov	x3, x5
   3d1dc:	b	31700 <PyInit__decimal@@Base+0x154c0>
   3d1e0:	mov	x4, x1
   3d1e4:	mov	x5, x2
   3d1e8:	mov	x1, x0
   3d1ec:	mov	x2, x4
   3d1f0:	mov	w0, #0x1                   	// #1
   3d1f4:	mov	x4, x3
   3d1f8:	mov	x3, x5
   3d1fc:	b	31700 <PyInit__decimal@@Base+0x154c0>
   3d200:	mov	x4, x1
   3d204:	mov	x5, x2
   3d208:	mov	x1, x0
   3d20c:	mov	x2, x4
   3d210:	mov	w0, #0x2                   	// #2
   3d214:	mov	x4, x3
   3d218:	mov	x3, x5
   3d21c:	b	31700 <PyInit__decimal@@Base+0x154c0>
   3d220:	mov	x5, x2
   3d224:	stp	x29, x30, [sp, #-64]!
   3d228:	mov	x2, x1
   3d22c:	mov	x29, sp
   3d230:	ldp	x10, x11, [x5]
   3d234:	mov	x1, x0
   3d238:	ldp	x8, x9, [x5, #16]
   3d23c:	mov	x4, x3
   3d240:	ldp	x6, x7, [x5, #32]
   3d244:	stp	x6, x7, [sp, #48]
   3d248:	add	x3, sp, #0x10
   3d24c:	mov	w0, #0x1                   	// #1
   3d250:	stp	x10, x11, [sp, #16]
   3d254:	mov	w6, #0x3                   	// #3
   3d258:	stp	x8, x9, [sp, #32]
   3d25c:	str	w6, [sp, #52]
   3d260:	bl	31700 <PyInit__decimal@@Base+0x154c0>
   3d264:	ldp	x29, x30, [sp], #64
   3d268:	ret
   3d26c:	nop
   3d270:	mov	x5, x2
   3d274:	stp	x29, x30, [sp, #-64]!
   3d278:	mov	x2, x1
   3d27c:	mov	x29, sp
   3d280:	ldp	x10, x11, [x5]
   3d284:	mov	x1, x0
   3d288:	ldp	x8, x9, [x5, #16]
   3d28c:	mov	x4, x3
   3d290:	ldp	x6, x7, [x5, #32]
   3d294:	stp	x6, x7, [sp, #48]
   3d298:	add	x3, sp, #0x10
   3d29c:	mov	w0, #0x1                   	// #1
   3d2a0:	stp	x10, x11, [sp, #16]
   3d2a4:	mov	w6, #0x2                   	// #2
   3d2a8:	stp	x8, x9, [sp, #32]
   3d2ac:	str	w6, [sp, #52]
   3d2b0:	bl	31700 <PyInit__decimal@@Base+0x154c0>
   3d2b4:	ldp	x29, x30, [sp], #64
   3d2b8:	ret
   3d2bc:	nop
   3d2c0:	ldrb	w2, [x0]
   3d2c4:	tst	w2, #0xe
   3d2c8:	b.ne	3d2ec <PyInit__decimal@@Base+0x210ac>  // b.any
   3d2cc:	ldrb	w3, [x1]
   3d2d0:	tst	w3, #0xe
   3d2d4:	b.ne	3d2ec <PyInit__decimal@@Base+0x210ac>  // b.any
   3d2d8:	ldr	x2, [x0, #8]
   3d2dc:	ldr	x0, [x1, #8]
   3d2e0:	cmp	x2, x0
   3d2e4:	cset	w0, eq  // eq = none
   3d2e8:	ret
   3d2ec:	tst	w2, #0xc
   3d2f0:	b.ne	3d308 <PyInit__decimal@@Base+0x210c8>  // b.any
   3d2f4:	mov	w0, #0x0                   	// #0
   3d2f8:	tbz	w2, #1, 3d2e8 <PyInit__decimal@@Base+0x210a8>
   3d2fc:	ldrb	w0, [x1]
   3d300:	ubfx	x0, x0, #1, #1
   3d304:	ret
   3d308:	ldrb	w3, [x1]
   3d30c:	mov	w0, #0x1                   	// #1
   3d310:	tst	w3, #0xc
   3d314:	b.eq	3d2f4 <PyInit__decimal@@Base+0x210b4>  // b.none
   3d318:	ret
   3d31c:	nop
   3d320:	stp	x29, x30, [sp, #-96]!
   3d324:	mov	x29, sp
   3d328:	stp	x19, x20, [sp, #16]
   3d32c:	mov	x19, x1
   3d330:	mov	x20, x3
   3d334:	stp	x21, x22, [sp, #32]
   3d338:	mov	x22, x0
   3d33c:	mov	x21, x2
   3d340:	ldrb	w4, [x1]
   3d344:	tst	w4, #0xe
   3d348:	b.ne	3d3dc <PyInit__decimal@@Base+0x2119c>  // b.any
   3d34c:	ldr	x2, [x1, #24]
   3d350:	and	w4, w4, #0x1
   3d354:	ldr	x5, [x1, #40]
   3d358:	add	x2, x5, x2, lsl #3
   3d35c:	ldur	x2, [x2, #-8]
   3d360:	cbz	x2, 3d3b4 <PyInit__decimal@@Base+0x21174>
   3d364:	cbnz	w4, 3d3ec <PyInit__decimal@@Base+0x211ac>
   3d368:	ldp	x2, x8, [x21]
   3d36c:	ldp	x6, x7, [x21, #16]
   3d370:	stp	x6, x7, [sp, #64]
   3d374:	ldp	x4, x5, [x21, #32]
   3d378:	stp	x4, x5, [sp, #80]
   3d37c:	add	x4, x2, #0x2
   3d380:	add	x2, sp, #0x30
   3d384:	mov	w5, #0x6                   	// #6
   3d388:	stp	x4, x8, [sp, #48]
   3d38c:	str	w5, [sp, #84]
   3d390:	bl	33578 <PyInit__decimal@@Base+0x17338>
   3d394:	mov	x2, x20
   3d398:	mov	x1, x21
   3d39c:	mov	x0, x22
   3d3a0:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3d3a4:	ldp	x19, x20, [sp, #16]
   3d3a8:	ldp	x21, x22, [sp, #32]
   3d3ac:	ldp	x29, x30, [sp], #96
   3d3b0:	ret
   3d3b4:	mov	w1, w4
   3d3b8:	mov	w2, #0x2                   	// #2
   3d3bc:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3d3c0:	ldr	w0, [x20]
   3d3c4:	ldp	x21, x22, [sp, #32]
   3d3c8:	orr	w0, w0, #0x4
   3d3cc:	str	w0, [x20]
   3d3d0:	ldp	x19, x20, [sp, #16]
   3d3d4:	ldp	x29, x30, [sp], #96
   3d3d8:	ret
   3d3dc:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3d3e0:	cbnz	w0, 3d3a4 <PyInit__decimal@@Base+0x21164>
   3d3e4:	ldrb	w0, [x19]
   3d3e8:	tbz	w0, #0, 3d40c <PyInit__decimal@@Base+0x211cc>
   3d3ec:	mov	x2, x20
   3d3f0:	mov	x0, x22
   3d3f4:	mov	w1, #0x100                 	// #256
   3d3f8:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3d3fc:	ldp	x19, x20, [sp, #16]
   3d400:	ldp	x21, x22, [sp, #32]
   3d404:	ldp	x29, x30, [sp], #96
   3d408:	ret
   3d40c:	ldr	x4, [x21]
   3d410:	mov	x0, x22
   3d414:	ldr	x3, [x21, #16]
   3d418:	mov	x2, #0x0                   	// #0
   3d41c:	mov	w1, #0x0                   	// #0
   3d420:	add	x3, x3, #0x1
   3d424:	sub	x3, x3, x4
   3d428:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3d42c:	ldr	w0, [x20]
   3d430:	ldp	x21, x22, [sp, #32]
   3d434:	orr	w0, w0, #0x1
   3d438:	str	w0, [x20]
   3d43c:	ldp	x19, x20, [sp, #16]
   3d440:	ldp	x29, x30, [sp], #96
   3d444:	ret
   3d448:	sub	sp, sp, #0x790
   3d44c:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3d450:	movi	v1.4s, #0x0
   3d454:	add	x5, sp, #0x98
   3d458:	mov	w8, #0x30                  	// #48
   3d45c:	add	x10, sp, #0x190
   3d460:	stp	x29, x30, [sp]
   3d464:	mov	x29, sp
   3d468:	add	x9, sp, #0x390
   3d46c:	ldr	q0, [x4, #1760]
   3d470:	adrp	x4, 42000 <PyInit__decimal@@Base+0x25dc0>
   3d474:	str	x5, [sp, #344]
   3d478:	add	x5, sp, #0x200
   3d47c:	ldr	q3, [x4, #2224]
   3d480:	adrp	x4, 42000 <PyInit__decimal@@Base+0x25dc0>
   3d484:	stp	x19, x20, [sp, #16]
   3d488:	add	x7, sp, #0x590
   3d48c:	mov	w11, #0xffffff90            	// #-112
   3d490:	stp	x21, x22, [sp, #32]
   3d494:	mov	x21, #0x2                   	// #2
   3d498:	mov	x19, x3
   3d49c:	stp	x23, x24, [sp, #48]
   3d4a0:	mov	x23, x1
   3d4a4:	stp	x27, x28, [sp, #80]
   3d4a8:	mov	x28, x0
   3d4ac:	ldr	q2, [x4, #2176]
   3d4b0:	stur	q1, [x5, #-248]
   3d4b4:	ldrb	w4, [x1]
   3d4b8:	stur	q0, [x5, #-232]
   3d4bc:	add	x5, sp, #0x230
   3d4c0:	tst	w4, #0xe
   3d4c4:	str	x21, [sp, #152]
   3d4c8:	strb	w8, [sp, #160]
   3d4cc:	str	x10, [sp, #200]
   3d4d0:	strb	w8, [sp, #208]
   3d4d4:	str	x9, [sp, #248]
   3d4d8:	strb	w8, [sp, #256]
   3d4dc:	str	x7, [sp, #296]
   3d4e0:	strb	w11, [sp, #304]
   3d4e4:	stur	q3, [x5, #-248]
   3d4e8:	stur	q2, [x5, #-232]
   3d4ec:	stur	q1, [sp, #168]
   3d4f0:	stur	q0, [sp, #184]
   3d4f4:	stur	q1, [sp, #216]
   3d4f8:	stur	q0, [sp, #232]
   3d4fc:	b.ne	3d6f8 <PyInit__decimal@@Base+0x214b8>  // b.any
   3d500:	mov	x20, x2
   3d504:	and	w1, w4, #0x1
   3d508:	ldr	x2, [x23, #24]
   3d50c:	ldr	x3, [x23, #40]
   3d510:	ldr	x22, [x23, #8]
   3d514:	add	x2, x3, x2, lsl #3
   3d518:	asr	x22, x22, #1
   3d51c:	ldur	x2, [x2, #-8]
   3d520:	cbnz	x2, 3d558 <PyInit__decimal@@Base+0x21318>
   3d524:	mov	x3, x22
   3d528:	bl	2a1c8 <PyInit__decimal@@Base+0xdf88>
   3d52c:	mov	x2, x19
   3d530:	mov	x1, x20
   3d534:	mov	x0, x28
   3d538:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3d53c:	ldp	x29, x30, [sp]
   3d540:	ldp	x19, x20, [sp, #16]
   3d544:	ldp	x21, x22, [sp, #32]
   3d548:	ldp	x23, x24, [sp, #48]
   3d54c:	ldp	x27, x28, [sp, #80]
   3d550:	add	sp, sp, #0x790
   3d554:	ret
   3d558:	cbnz	w1, 3d708 <PyInit__decimal@@Base+0x214c8>
   3d55c:	add	x21, sp, #0x160
   3d560:	add	x24, sp, #0xa0
   3d564:	mov	x0, x21
   3d568:	stp	x25, x26, [sp, #64]
   3d56c:	bl	1f5d0 <PyInit__decimal@@Base+0x3390>
   3d570:	mov	x0, x24
   3d574:	mov	x2, x19
   3d578:	mov	x1, x23
   3d57c:	ldr	x25, [x20]
   3d580:	bl	2cdf8 <PyInit__decimal@@Base+0x10bb8>
   3d584:	cbz	w0, 3d760 <PyInit__decimal@@Base+0x21520>
   3d588:	ldr	x0, [x23, #8]
   3d58c:	str	xzr, [sp, #168]
   3d590:	tbnz	w0, #0, 3d878 <PyInit__decimal@@Base+0x21638>
   3d594:	ldr	x23, [x23, #16]
   3d598:	add	x23, x23, #0x1
   3d59c:	asr	x23, x23, #1
   3d5a0:	add	x25, x25, #0x1
   3d5a4:	subs	x0, x25, x23
   3d5a8:	str	x0, [sp, #112]
   3d5ac:	b.mi	3d85c <PyInit__decimal@@Base+0x2161c>  // b.first
   3d5b0:	lsl	x2, x0, #1
   3d5b4:	mov	x3, x19
   3d5b8:	mov	x1, x24
   3d5bc:	mov	x0, x24
   3d5c0:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3d5c4:	cbz	w0, 3d760 <PyInit__decimal@@Base+0x21520>
   3d5c8:	mov	w0, #0x1                   	// #1
   3d5cc:	str	w0, [sp, #132]
   3d5d0:	sub	x4, x23, x25
   3d5d4:	str	x4, [sp, #136]
   3d5d8:	add	x4, x4, x22
   3d5dc:	adrp	x1, 62000 <PyInit__decimal@@Base+0x45dc0>
   3d5e0:	mov	x2, x25
   3d5e4:	mov	x3, x19
   3d5e8:	add	x1, x1, #0xc58
   3d5ec:	mov	x0, x28
   3d5f0:	str	x4, [sp, #120]
   3d5f4:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3d5f8:	cbz	w0, 3d760 <PyInit__decimal@@Base+0x21520>
   3d5fc:	add	x0, sp, #0x130
   3d600:	add	x26, sp, #0x100
   3d604:	add	x23, sp, #0xd0
   3d608:	add	x25, x21, #0x1c
   3d60c:	add	x27, sp, #0x94
   3d610:	str	x0, [sp, #104]
   3d614:	b	3d640 <PyInit__decimal@@Base+0x21400>
   3d618:	ldrb	w0, [x28]
   3d61c:	tst	w0, #0xe
   3d620:	b.ne	3d6dc <PyInit__decimal@@Base+0x2149c>  // b.any
   3d624:	ldr	x3, [sp, #104]
   3d628:	mov	x5, x25
   3d62c:	mov	x4, x21
   3d630:	mov	x2, x28
   3d634:	mov	x1, x26
   3d638:	mov	x0, x28
   3d63c:	bl	351b8 <PyInit__decimal@@Base+0x18f78>
   3d640:	mov	x3, x28
   3d644:	mov	x2, x24
   3d648:	mov	x1, x26
   3d64c:	mov	x0, x23
   3d650:	mov	x5, x25
   3d654:	mov	x4, x21
   3d658:	bl	351b8 <PyInit__decimal@@Base+0x18f78>
   3d65c:	ldrb	w3, [sp, #208]
   3d660:	mov	x1, x23
   3d664:	ldrb	w2, [x28]
   3d668:	mov	x0, x28
   3d66c:	orr	w2, w2, w3
   3d670:	tst	w2, #0xe
   3d674:	b.ne	3d8a0 <PyInit__decimal@@Base+0x21660>  // b.any
   3d678:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3d67c:	mov	w5, w0
   3d680:	mov	x4, x27
   3d684:	mov	x3, x21
   3d688:	mov	x2, x23
   3d68c:	mov	x1, x28
   3d690:	mov	x0, x28
   3d694:	cmp	w5, #0x0
   3d698:	b.le	3d8b8 <PyInit__decimal@@Base+0x21678>
   3d69c:	str	wzr, [sp, #148]
   3d6a0:	bl	33320 <PyInit__decimal@@Base+0x170e0>
   3d6a4:	ldr	w1, [sp, #148]
   3d6a8:	mov	w2, #0x1041                	// #4161
   3d6ac:	ldr	w0, [sp, #380]
   3d6b0:	tst	w1, w2
   3d6b4:	orr	w0, w0, w1
   3d6b8:	str	w0, [sp, #380]
   3d6bc:	b.eq	3d618 <PyInit__decimal@@Base+0x213d8>  // b.none
   3d6c0:	mov	x0, x28
   3d6c4:	mov	x2, x25
   3d6c8:	mov	w1, #0x100                 	// #256
   3d6cc:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3d6d0:	ldrb	w0, [x28]
   3d6d4:	tst	w0, #0xe
   3d6d8:	b.eq	3d624 <PyInit__decimal@@Base+0x213e4>  // b.none
   3d6dc:	ldr	w3, [sp, #380]
   3d6e0:	mov	x2, x19
   3d6e4:	mov	x0, x28
   3d6e8:	mov	w1, #0x3be                 	// #958
   3d6ec:	and	w1, w3, w1
   3d6f0:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3d6f4:	b	3d770 <PyInit__decimal@@Base+0x21530>
   3d6f8:	bl	2ceb0 <PyInit__decimal@@Base+0x10c70>
   3d6fc:	cbnz	w0, 3d53c <PyInit__decimal@@Base+0x212fc>
   3d700:	ldrb	w0, [x23]
   3d704:	tbz	w0, #0, 3d734 <PyInit__decimal@@Base+0x214f4>
   3d708:	mov	x2, x19
   3d70c:	mov	x0, x28
   3d710:	mov	w1, #0x100                 	// #256
   3d714:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3d718:	ldp	x29, x30, [sp]
   3d71c:	ldp	x19, x20, [sp, #16]
   3d720:	ldp	x21, x22, [sp, #32]
   3d724:	ldp	x23, x24, [sp, #48]
   3d728:	ldp	x27, x28, [sp, #80]
   3d72c:	add	sp, sp, #0x790
   3d730:	ret
   3d734:	mov	w2, w21
   3d738:	mov	x0, x28
   3d73c:	mov	w1, #0x0                   	// #0
   3d740:	bl	2b9d0 <PyInit__decimal@@Base+0xf790>
   3d744:	ldp	x29, x30, [sp]
   3d748:	ldp	x19, x20, [sp, #16]
   3d74c:	ldp	x21, x22, [sp, #32]
   3d750:	ldp	x23, x24, [sp, #48]
   3d754:	ldp	x27, x28, [sp, #80]
   3d758:	add	sp, sp, #0x790
   3d75c:	ret
   3d760:	mov	x2, x19
   3d764:	mov	x0, x28
   3d768:	mov	w1, #0x200                 	// #512
   3d76c:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3d770:	ldrb	w0, [sp, #160]
   3d774:	tst	w0, #0xe0
   3d778:	b.ne	3d790 <PyInit__decimal@@Base+0x21550>  // b.any
   3d77c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d780:	ldr	x0, [sp, #200]
   3d784:	ldr	x1, [x1, #1912]
   3d788:	blr	x1
   3d78c:	ldrb	w0, [sp, #160]
   3d790:	tbnz	w0, #4, 3d7a4 <PyInit__decimal@@Base+0x21564>
   3d794:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d798:	mov	x0, x24
   3d79c:	ldr	x1, [x1, #1912]
   3d7a0:	blr	x1
   3d7a4:	ldrb	w0, [sp, #208]
   3d7a8:	tst	w0, #0xe0
   3d7ac:	b.ne	3d7c4 <PyInit__decimal@@Base+0x21584>  // b.any
   3d7b0:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d7b4:	ldr	x0, [sp, #248]
   3d7b8:	ldr	x1, [x1, #1912]
   3d7bc:	blr	x1
   3d7c0:	ldrb	w0, [sp, #208]
   3d7c4:	tbnz	w0, #4, 3d7d8 <PyInit__decimal@@Base+0x21598>
   3d7c8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d7cc:	add	x0, sp, #0xd0
   3d7d0:	ldr	x1, [x1, #1912]
   3d7d4:	blr	x1
   3d7d8:	ldrb	w0, [sp, #256]
   3d7dc:	tst	w0, #0xe0
   3d7e0:	b.ne	3d7f8 <PyInit__decimal@@Base+0x215b8>  // b.any
   3d7e4:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d7e8:	ldr	x0, [sp, #296]
   3d7ec:	ldr	x1, [x1, #1912]
   3d7f0:	blr	x1
   3d7f4:	ldrb	w0, [sp, #256]
   3d7f8:	tbnz	w0, #4, 3d80c <PyInit__decimal@@Base+0x215cc>
   3d7fc:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3d800:	add	x0, sp, #0x100
   3d804:	ldr	x1, [x1, #1912]
   3d808:	blr	x1
   3d80c:	ldp	x8, x9, [x20]
   3d810:	mov	w3, #0x6                   	// #6
   3d814:	ldp	x4, x5, [x20, #16]
   3d818:	mov	x2, x19
   3d81c:	ldp	x0, x1, [x20, #32]
   3d820:	stp	x0, x1, [sp, #384]
   3d824:	mov	x1, x21
   3d828:	mov	x0, x28
   3d82c:	stp	x8, x9, [sp, #352]
   3d830:	stp	x4, x5, [sp, #368]
   3d834:	str	w3, [sp, #388]
   3d838:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3d83c:	ldp	x29, x30, [sp]
   3d840:	ldp	x19, x20, [sp, #16]
   3d844:	ldp	x21, x22, [sp, #32]
   3d848:	ldp	x23, x24, [sp, #48]
   3d84c:	ldp	x25, x26, [sp, #64]
   3d850:	ldp	x27, x28, [sp, #80]
   3d854:	add	sp, sp, #0x790
   3d858:	ret
   3d85c:	neg	x1, x0, lsl #1
   3d860:	mov	x0, x24
   3d864:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   3d868:	cmp	x0, #0x0
   3d86c:	cset	w0, eq  // eq = none
   3d870:	str	w0, [sp, #132]
   3d874:	b	3d5d0 <PyInit__decimal@@Base+0x21390>
   3d878:	mov	x3, x19
   3d87c:	mov	x1, x24
   3d880:	mov	x0, x24
   3d884:	mov	x2, #0x1                   	// #1
   3d888:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3d88c:	cbz	w0, 3d760 <PyInit__decimal@@Base+0x21520>
   3d890:	ldr	x23, [x23, #16]
   3d894:	asr	x23, x23, #1
   3d898:	add	x23, x23, #0x1
   3d89c:	b	3d5a0 <PyInit__decimal@@Base+0x21360>
   3d8a0:	ldr	w3, [sp, #380]
   3d8a4:	mov	x2, x19
   3d8a8:	mov	w1, #0x3be                 	// #958
   3d8ac:	and	w1, w3, w1
   3d8b0:	bl	2ba60 <PyInit__decimal@@Base+0xf820>
   3d8b4:	b	3d770 <PyInit__decimal@@Base+0x21530>
   3d8b8:	ldr	w0, [sp, #132]
   3d8bc:	cbnz	w0, 3d900 <PyInit__decimal@@Base+0x216c0>
   3d8c0:	ldr	x2, [x28, #40]
   3d8c4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   3d8c8:	movk	x0, #0xcccd
   3d8cc:	ldr	x1, [x2]
   3d8d0:	umulh	x0, x1, x0
   3d8d4:	lsr	x0, x0, #3
   3d8d8:	add	x0, x0, x0, lsl #2
   3d8dc:	sub	x0, x1, x0, lsl #1
   3d8e0:	cmp	w0, #0x0
   3d8e4:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   3d8e8:	b.ne	3d8f4 <PyInit__decimal@@Base+0x216b4>  // b.any
   3d8ec:	add	x1, x1, #0x1
   3d8f0:	str	x1, [x2]
   3d8f4:	ldr	x0, [sp, #120]
   3d8f8:	str	x0, [x28, #8]
   3d8fc:	b	3d770 <PyInit__decimal@@Base+0x21530>
   3d900:	mov	x0, x26
   3d904:	mov	x4, x25
   3d908:	mov	x2, x28
   3d90c:	bl	30530 <PyInit__decimal@@Base+0x142f0>
   3d910:	ldrb	w0, [sp, #256]
   3d914:	tst	w0, #0xe
   3d918:	b.ne	3d6dc <PyInit__decimal@@Base+0x2149c>  // b.any
   3d91c:	mov	x0, x26
   3d920:	mov	x1, x24
   3d924:	bl	2a098 <PyInit__decimal@@Base+0xde58>
   3d928:	cbnz	w0, 3d8c0 <PyInit__decimal@@Base+0x21680>
   3d92c:	ldr	x0, [sp, #112]
   3d930:	tbnz	x0, #63, 3d948 <PyInit__decimal@@Base+0x21708>
   3d934:	mov	x1, x0
   3d938:	mov	x0, x28
   3d93c:	str	x22, [sp, #120]
   3d940:	bl	2eb90 <PyInit__decimal@@Base+0x12950>
   3d944:	b	3d8f4 <PyInit__decimal@@Base+0x216b4>
   3d948:	ldr	x2, [sp, #136]
   3d94c:	mov	x3, x19
   3d950:	mov	x1, x28
   3d954:	mov	x0, x28
   3d958:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3d95c:	cbz	w0, 3d760 <PyInit__decimal@@Base+0x21520>
   3d960:	str	x22, [sp, #120]
   3d964:	b	3d8f4 <PyInit__decimal@@Base+0x216b4>
   3d968:	mov	x2, x0
   3d96c:	ldrb	w0, [x0]
   3d970:	tst	w0, #0xe
   3d974:	b.ne	3d994 <PyInit__decimal@@Base+0x21754>  // b.any
   3d978:	ldr	x3, [x2, #24]
   3d97c:	mov	x0, #0x1                   	// #1
   3d980:	ldr	x4, [x2, #40]
   3d984:	add	x3, x4, x3, lsl #3
   3d988:	ldur	x3, [x3, #-8]
   3d98c:	cbnz	x3, 3d994 <PyInit__decimal@@Base+0x21754>
   3d990:	ret
   3d994:	stp	x29, x30, [sp, #-32]!
   3d998:	mov	x0, #0xbcfe                	// #48382
   3d99c:	movk	x0, #0xa84f, lsl #16
   3d9a0:	mov	x29, sp
   3d9a4:	ldr	x3, [x2, #8]
   3d9a8:	str	x19, [sp, #16]
   3d9ac:	ldr	x19, [x2, #16]
   3d9b0:	movk	x0, #0xa209, lsl #32
   3d9b4:	movk	x0, #0x9, lsl #48
   3d9b8:	add	x19, x19, x3
   3d9bc:	cmp	x19, x0
   3d9c0:	b.hi	3d9f8 <PyInit__decimal@@Base+0x217b8>  // b.pmore
   3d9c4:	ucvtf	d0, w1
   3d9c8:	bl	6620 <log10@plt>
   3d9cc:	scvtf	d1, x19
   3d9d0:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   3d9d4:	fmov	d2, x0
   3d9d8:	fdiv	d0, d1, d0
   3d9dc:	fcmpe	d0, d2
   3d9e0:	b.gt	3d9f8 <PyInit__decimal@@Base+0x217b8>
   3d9e4:	fcvtzu	x0, d0
   3d9e8:	ldr	x19, [sp, #16]
   3d9ec:	ldp	x29, x30, [sp], #32
   3d9f0:	add	x0, x0, #0x1
   3d9f4:	ret
   3d9f8:	mov	x0, #0xffffffffffffffff    	// #-1
   3d9fc:	ldr	x19, [sp, #16]
   3da00:	ldp	x29, x30, [sp], #32
   3da04:	ret
   3da08:	sub	sp, sp, #0x2b0
   3da0c:	adrp	x6, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3da10:	mov	w5, #0x30                  	// #48
   3da14:	stp	x29, x30, [sp]
   3da18:	mov	x29, sp
   3da1c:	ldr	q0, [x6, #1760]
   3da20:	stp	x19, x20, [sp, #16]
   3da24:	mov	x19, x3
   3da28:	stp	x21, x22, [sp, #32]
   3da2c:	add	x3, sp, #0xb0
   3da30:	mov	x22, x4
   3da34:	stp	x25, x26, [sp, #64]
   3da38:	strb	w5, [sp, #128]
   3da3c:	stp	xzr, xzr, [sp, #136]
   3da40:	str	x3, [sp, #168]
   3da44:	ldrb	w3, [x19]
   3da48:	stur	q0, [sp, #152]
   3da4c:	tst	w3, #0xe
   3da50:	b.ne	3dbb0 <PyInit__decimal@@Base+0x21970>  // b.any
   3da54:	mov	x20, x0
   3da58:	mov	x21, x1
   3da5c:	mov	x0, x19
   3da60:	stp	x23, x24, [sp, #48]
   3da64:	mov	w23, w2
   3da68:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3da6c:	cbz	w0, 3dbac <PyInit__decimal@@Base+0x2196c>
   3da70:	ldr	x1, [x19, #24]
   3da74:	str	wzr, [sp, #108]
   3da78:	ldr	x2, [x19, #40]
   3da7c:	ldr	x0, [x20]
   3da80:	add	x1, x2, x1, lsl #3
   3da84:	ldur	x1, [x1, #-8]
   3da88:	cbz	x0, 3dc78 <PyInit__decimal@@Base+0x21a38>
   3da8c:	cbz	x1, 3dbdc <PyInit__decimal@@Base+0x2199c>
   3da90:	ldr	x2, [x19, #8]
   3da94:	tbnz	x2, #63, 3dc58 <PyInit__decimal@@Base+0x21a18>
   3da98:	mov	x1, x19
   3da9c:	mov	x3, x22
   3daa0:	add	x0, sp, #0x80
   3daa4:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3daa8:	cbz	w0, 3dc08 <PyInit__decimal@@Base+0x219c8>
   3daac:	ldr	x25, [sp, #168]
   3dab0:	stp	x27, x28, [sp, #80]
   3dab4:	add	x28, sp, #0x7f
   3dab8:	ldr	x19, [sp, #152]
   3dabc:	sub	x27, x25, #0x8
   3dac0:	mov	x24, #0x0                   	// #0
   3dac4:	nop
   3dac8:	cmp	x24, x21
   3dacc:	add	x26, x24, #0x1
   3dad0:	b.cc	3dafc <PyInit__decimal@@Base+0x218bc>  // b.lo, b.ul, b.last
   3dad4:	ldr	x0, [x20]
   3dad8:	mov	x1, x26
   3dadc:	mov	x3, x28
   3dae0:	mov	x2, #0x2                   	// #2
   3dae4:	strb	wzr, [sp, #127]
   3dae8:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   3daec:	str	x0, [x20]
   3daf0:	ldrb	w1, [sp, #127]
   3daf4:	cbnz	w1, 3dc04 <PyInit__decimal@@Base+0x219c4>
   3daf8:	mov	x21, x26
   3dafc:	mov	x1, x25
   3db00:	mov	x3, x23
   3db04:	mov	x2, x19
   3db08:	mov	x0, x25
   3db0c:	bl	1d5f8 <PyInit__decimal@@Base+0x13b8>
   3db10:	ldr	x1, [x20]
   3db14:	cmp	x19, #0x1
   3db18:	strh	w0, [x1, x24, lsl #1]
   3db1c:	b.gt	3db30 <PyInit__decimal@@Base+0x218f0>
   3db20:	b	3db40 <PyInit__decimal@@Base+0x21900>
   3db24:	sub	x19, x19, #0x1
   3db28:	cmp	x19, #0x1
   3db2c:	b.eq	3db40 <PyInit__decimal@@Base+0x21900>  // b.none
   3db30:	ldr	x0, [x27, x19, lsl #3]
   3db34:	cbz	x0, 3db24 <PyInit__decimal@@Base+0x218e4>
   3db38:	mov	x24, x26
   3db3c:	b	3dac8 <PyInit__decimal@@Base+0x21888>
   3db40:	add	x0, x25, x19, lsl #3
   3db44:	ldur	x0, [x0, #-8]
   3db48:	cbnz	x0, 3db38 <PyInit__decimal@@Base+0x218f8>
   3db4c:	cmn	x26, #0x1
   3db50:	ldp	x27, x28, [sp, #80]
   3db54:	b.eq	3dc08 <PyInit__decimal@@Base+0x219c8>  // b.none
   3db58:	ldrb	w0, [sp, #128]
   3db5c:	tst	w0, #0xe0
   3db60:	b.ne	3db78 <PyInit__decimal@@Base+0x21938>  // b.any
   3db64:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3db68:	ldr	x0, [sp, #168]
   3db6c:	ldr	x1, [x1, #1912]
   3db70:	blr	x1
   3db74:	ldrb	w0, [sp, #128]
   3db78:	tbnz	w0, #4, 3dc38 <PyInit__decimal@@Base+0x219f8>
   3db7c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3db80:	add	x0, sp, #0x80
   3db84:	ldr	x1, [x1, #1912]
   3db88:	blr	x1
   3db8c:	mov	x0, x26
   3db90:	ldp	x29, x30, [sp]
   3db94:	ldp	x19, x20, [sp, #16]
   3db98:	ldp	x21, x22, [sp, #32]
   3db9c:	ldp	x23, x24, [sp, #48]
   3dba0:	ldp	x25, x26, [sp, #64]
   3dba4:	add	sp, sp, #0x2b0
   3dba8:	ret
   3dbac:	ldp	x23, x24, [sp, #48]
   3dbb0:	mov	x26, #0xffffffffffffffff    	// #-1
   3dbb4:	ldr	w0, [x22]
   3dbb8:	orr	w0, w0, #0x100
   3dbbc:	str	w0, [x22]
   3dbc0:	mov	x0, x26
   3dbc4:	ldp	x29, x30, [sp]
   3dbc8:	ldp	x19, x20, [sp, #16]
   3dbcc:	ldp	x21, x22, [sp, #32]
   3dbd0:	ldp	x25, x26, [sp, #64]
   3dbd4:	add	sp, sp, #0x2b0
   3dbd8:	ret
   3dbdc:	strh	wzr, [x0]
   3dbe0:	mov	x26, #0x1                   	// #1
   3dbe4:	mov	x0, x26
   3dbe8:	ldp	x29, x30, [sp]
   3dbec:	ldp	x19, x20, [sp, #16]
   3dbf0:	ldp	x21, x22, [sp, #32]
   3dbf4:	ldp	x23, x24, [sp, #48]
   3dbf8:	ldp	x25, x26, [sp, #64]
   3dbfc:	add	sp, sp, #0x2b0
   3dc00:	ret
   3dc04:	ldp	x27, x28, [sp, #80]
   3dc08:	ldr	w0, [sp, #108]
   3dc0c:	cbz	w0, 3dc24 <PyInit__decimal@@Base+0x219e4>
   3dc10:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3dc14:	ldr	x0, [x20]
   3dc18:	ldr	x1, [x1, #1912]
   3dc1c:	blr	x1
   3dc20:	str	xzr, [x20]
   3dc24:	ldr	w0, [x22]
   3dc28:	mov	x26, #0xffffffffffffffff    	// #-1
   3dc2c:	orr	w0, w0, #0x200
   3dc30:	str	w0, [x22]
   3dc34:	b	3db58 <PyInit__decimal@@Base+0x21918>
   3dc38:	mov	x0, x26
   3dc3c:	ldp	x29, x30, [sp]
   3dc40:	ldp	x19, x20, [sp, #16]
   3dc44:	ldp	x21, x22, [sp, #32]
   3dc48:	ldp	x23, x24, [sp, #48]
   3dc4c:	ldp	x25, x26, [sp, #64]
   3dc50:	add	sp, sp, #0x2b0
   3dc54:	ret
   3dc58:	neg	x2, x2
   3dc5c:	mov	x1, x19
   3dc60:	mov	x3, x22
   3dc64:	add	x0, sp, #0x80
   3dc68:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   3dc6c:	cmn	x0, #0x1
   3dc70:	b.ne	3daac <PyInit__decimal@@Base+0x2186c>  // b.any
   3dc74:	b	3dc08 <PyInit__decimal@@Base+0x219c8>
   3dc78:	cbnz	x1, 3dcc0 <PyInit__decimal@@Base+0x21a80>
   3dc7c:	mov	x21, #0x1                   	// #1
   3dc80:	mov	x0, x21
   3dc84:	mov	x1, #0x2                   	// #2
   3dc88:	bl	28278 <PyInit__decimal@@Base+0xc038>
   3dc8c:	str	x0, [x20]
   3dc90:	cbz	x0, 3dc24 <PyInit__decimal@@Base+0x219e4>
   3dc94:	ldrb	w1, [x19]
   3dc98:	mov	w2, #0x1                   	// #1
   3dc9c:	str	w2, [sp, #108]
   3dca0:	tst	w1, #0xe
   3dca4:	b.ne	3da90 <PyInit__decimal@@Base+0x21850>  // b.any
   3dca8:	ldr	x1, [x19, #24]
   3dcac:	ldr	x2, [x19, #40]
   3dcb0:	add	x1, x2, x1, lsl #3
   3dcb4:	ldur	x1, [x1, #-8]
   3dcb8:	cbnz	x1, 3da90 <PyInit__decimal@@Base+0x21850>
   3dcbc:	b	3dbdc <PyInit__decimal@@Base+0x2199c>
   3dcc0:	ldp	x1, x21, [x19, #8]
   3dcc4:	mov	x0, #0xbcfe                	// #48382
   3dcc8:	movk	x0, #0xa84f, lsl #16
   3dccc:	movk	x0, #0xa209, lsl #32
   3dcd0:	movk	x0, #0x9, lsl #48
   3dcd4:	add	x21, x21, x1
   3dcd8:	cmp	x21, x0
   3dcdc:	b.hi	3dd10 <PyInit__decimal@@Base+0x21ad0>  // b.pmore
   3dce0:	ucvtf	d0, w23
   3dce4:	bl	6620 <log10@plt>
   3dce8:	scvtf	d1, x21
   3dcec:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   3dcf0:	fmov	d2, x0
   3dcf4:	fdiv	d0, d1, d0
   3dcf8:	fcmpe	d0, d2
   3dcfc:	b.gt	3dd10 <PyInit__decimal@@Base+0x21ad0>
   3dd00:	fcvtzu	x21, d0
   3dd04:	cmn	x21, #0x2
   3dd08:	add	x21, x21, #0x1
   3dd0c:	b.ne	3dc80 <PyInit__decimal@@Base+0x21a40>  // b.any
   3dd10:	ldr	w0, [x22]
   3dd14:	mov	x26, #0xffffffffffffffff    	// #-1
   3dd18:	ldp	x23, x24, [sp, #48]
   3dd1c:	orr	w0, w0, #0x100
   3dd20:	str	w0, [x22]
   3dd24:	b	3dbc0 <PyInit__decimal@@Base+0x21980>
   3dd28:	sub	sp, sp, #0x2b0
   3dd2c:	adrp	x6, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3dd30:	mov	w5, #0x30                  	// #48
   3dd34:	stp	x29, x30, [sp]
   3dd38:	mov	x29, sp
   3dd3c:	ldr	q0, [x6, #1760]
   3dd40:	stp	x19, x20, [sp, #16]
   3dd44:	mov	x19, x3
   3dd48:	stp	x21, x22, [sp, #32]
   3dd4c:	add	x3, sp, #0xb0
   3dd50:	mov	x22, x4
   3dd54:	stp	x27, x28, [sp, #80]
   3dd58:	strb	w5, [sp, #128]
   3dd5c:	stp	xzr, xzr, [sp, #136]
   3dd60:	str	x3, [sp, #168]
   3dd64:	ldrb	w3, [x19]
   3dd68:	stur	q0, [sp, #152]
   3dd6c:	tst	w3, #0xe
   3dd70:	b.ne	3dedc <PyInit__decimal@@Base+0x21c9c>  // b.any
   3dd74:	mov	x20, x0
   3dd78:	mov	x21, x1
   3dd7c:	mov	x0, x19
   3dd80:	stp	x23, x24, [sp, #48]
   3dd84:	mov	w23, w2
   3dd88:	bl	287a0 <PyInit__decimal@@Base+0xc560>
   3dd8c:	cbz	w0, 3ded8 <PyInit__decimal@@Base+0x21c98>
   3dd90:	ldr	x1, [x19, #24]
   3dd94:	str	wzr, [sp, #108]
   3dd98:	ldr	x2, [x19, #40]
   3dd9c:	ldr	x0, [x20]
   3dda0:	add	x1, x2, x1, lsl #3
   3dda4:	ldur	x1, [x1, #-8]
   3dda8:	cbz	x0, 3dfa4 <PyInit__decimal@@Base+0x21d64>
   3ddac:	cbz	x1, 3df08 <PyInit__decimal@@Base+0x21cc8>
   3ddb0:	ldr	x2, [x19, #8]
   3ddb4:	tbnz	x2, #63, 3df84 <PyInit__decimal@@Base+0x21d44>
   3ddb8:	mov	x1, x19
   3ddbc:	mov	x3, x22
   3ddc0:	add	x0, sp, #0x80
   3ddc4:	bl	2e600 <PyInit__decimal@@Base+0x123c0>
   3ddc8:	cbz	w0, 3df34 <PyInit__decimal@@Base+0x21cf4>
   3ddcc:	stp	x25, x26, [sp, #64]
   3ddd0:	add	x28, sp, #0x7f
   3ddd4:	mov	x24, #0x0                   	// #0
   3ddd8:	ldr	x25, [sp, #168]
   3dddc:	ldr	x19, [sp, #152]
   3dde0:	sub	x26, x25, #0x8
   3dde4:	nop
   3dde8:	cmp	x24, x21
   3ddec:	add	x27, x24, #0x1
   3ddf0:	b.cc	3de1c <PyInit__decimal@@Base+0x21bdc>  // b.lo, b.ul, b.last
   3ddf4:	ldr	x0, [x20]
   3ddf8:	mov	x1, x27
   3ddfc:	mov	x3, x28
   3de00:	mov	x2, #0x4                   	// #4
   3de04:	strb	wzr, [sp, #127]
   3de08:	bl	282c0 <PyInit__decimal@@Base+0xc080>
   3de0c:	str	x0, [x20]
   3de10:	ldrb	w1, [sp, #127]
   3de14:	cbnz	w1, 3df30 <PyInit__decimal@@Base+0x21cf0>
   3de18:	mov	x21, x27
   3de1c:	mov	x4, #0x89e80000            	// #2313682944
   3de20:	mov	x1, x25
   3de24:	movk	x4, #0x2304, lsl #32
   3de28:	mov	x3, x23
   3de2c:	mov	x2, x19
   3de30:	mov	x0, x25
   3de34:	movk	x4, #0x8ac7, lsl #48
   3de38:	bl	1f300 <PyInit__decimal@@Base+0x30c0>
   3de3c:	ldr	x1, [x20]
   3de40:	cmp	x19, #0x1
   3de44:	str	w0, [x1, x24, lsl #2]
   3de48:	b.gt	3de5c <PyInit__decimal@@Base+0x21c1c>
   3de4c:	b	3de6c <PyInit__decimal@@Base+0x21c2c>
   3de50:	sub	x19, x19, #0x1
   3de54:	cmp	x19, #0x1
   3de58:	b.eq	3de6c <PyInit__decimal@@Base+0x21c2c>  // b.none
   3de5c:	ldr	x0, [x26, x19, lsl #3]
   3de60:	cbz	x0, 3de50 <PyInit__decimal@@Base+0x21c10>
   3de64:	mov	x24, x27
   3de68:	b	3dde8 <PyInit__decimal@@Base+0x21ba8>
   3de6c:	add	x0, x25, x19, lsl #3
   3de70:	ldur	x0, [x0, #-8]
   3de74:	cbnz	x0, 3de64 <PyInit__decimal@@Base+0x21c24>
   3de78:	cmn	x27, #0x1
   3de7c:	ldp	x25, x26, [sp, #64]
   3de80:	b.eq	3df34 <PyInit__decimal@@Base+0x21cf4>  // b.none
   3de84:	ldrb	w0, [sp, #128]
   3de88:	tst	w0, #0xe0
   3de8c:	b.ne	3dea4 <PyInit__decimal@@Base+0x21c64>  // b.any
   3de90:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3de94:	ldr	x0, [sp, #168]
   3de98:	ldr	x1, [x1, #1912]
   3de9c:	blr	x1
   3dea0:	ldrb	w0, [sp, #128]
   3dea4:	tbnz	w0, #4, 3df64 <PyInit__decimal@@Base+0x21d24>
   3dea8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3deac:	add	x0, sp, #0x80
   3deb0:	ldr	x1, [x1, #1912]
   3deb4:	blr	x1
   3deb8:	mov	x0, x27
   3debc:	ldp	x29, x30, [sp]
   3dec0:	ldp	x19, x20, [sp, #16]
   3dec4:	ldp	x21, x22, [sp, #32]
   3dec8:	ldp	x23, x24, [sp, #48]
   3decc:	ldp	x27, x28, [sp, #80]
   3ded0:	add	sp, sp, #0x2b0
   3ded4:	ret
   3ded8:	ldp	x23, x24, [sp, #48]
   3dedc:	mov	x27, #0xffffffffffffffff    	// #-1
   3dee0:	ldr	w0, [x22]
   3dee4:	orr	w0, w0, #0x100
   3dee8:	str	w0, [x22]
   3deec:	mov	x0, x27
   3def0:	ldp	x29, x30, [sp]
   3def4:	ldp	x19, x20, [sp, #16]
   3def8:	ldp	x21, x22, [sp, #32]
   3defc:	ldp	x27, x28, [sp, #80]
   3df00:	add	sp, sp, #0x2b0
   3df04:	ret
   3df08:	ldp	x23, x24, [sp, #48]
   3df0c:	str	wzr, [x0]
   3df10:	mov	x27, #0x1                   	// #1
   3df14:	mov	x0, x27
   3df18:	ldp	x29, x30, [sp]
   3df1c:	ldp	x19, x20, [sp, #16]
   3df20:	ldp	x21, x22, [sp, #32]
   3df24:	ldp	x27, x28, [sp, #80]
   3df28:	add	sp, sp, #0x2b0
   3df2c:	ret
   3df30:	ldp	x25, x26, [sp, #64]
   3df34:	ldr	w0, [sp, #108]
   3df38:	cbz	w0, 3df50 <PyInit__decimal@@Base+0x21d10>
   3df3c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3df40:	ldr	x0, [x20]
   3df44:	ldr	x1, [x1, #1912]
   3df48:	blr	x1
   3df4c:	str	xzr, [x20]
   3df50:	ldr	w0, [x22]
   3df54:	mov	x27, #0xffffffffffffffff    	// #-1
   3df58:	orr	w0, w0, #0x200
   3df5c:	str	w0, [x22]
   3df60:	b	3de84 <PyInit__decimal@@Base+0x21c44>
   3df64:	mov	x0, x27
   3df68:	ldp	x29, x30, [sp]
   3df6c:	ldp	x19, x20, [sp, #16]
   3df70:	ldp	x21, x22, [sp, #32]
   3df74:	ldp	x23, x24, [sp, #48]
   3df78:	ldp	x27, x28, [sp, #80]
   3df7c:	add	sp, sp, #0x2b0
   3df80:	ret
   3df84:	neg	x2, x2
   3df88:	mov	x1, x19
   3df8c:	mov	x3, x22
   3df90:	add	x0, sp, #0x80
   3df94:	bl	31518 <PyInit__decimal@@Base+0x152d8>
   3df98:	cmn	x0, #0x1
   3df9c:	b.ne	3ddcc <PyInit__decimal@@Base+0x21b8c>  // b.any
   3dfa0:	b	3df34 <PyInit__decimal@@Base+0x21cf4>
   3dfa4:	cbnz	x1, 3dfec <PyInit__decimal@@Base+0x21dac>
   3dfa8:	mov	x21, #0x1                   	// #1
   3dfac:	mov	x0, x21
   3dfb0:	mov	x1, #0x4                   	// #4
   3dfb4:	bl	28278 <PyInit__decimal@@Base+0xc038>
   3dfb8:	str	x0, [x20]
   3dfbc:	cbz	x0, 3df50 <PyInit__decimal@@Base+0x21d10>
   3dfc0:	ldrb	w1, [x19]
   3dfc4:	mov	w2, #0x1                   	// #1
   3dfc8:	str	w2, [sp, #108]
   3dfcc:	tst	w1, #0xe
   3dfd0:	b.ne	3ddb0 <PyInit__decimal@@Base+0x21b70>  // b.any
   3dfd4:	ldr	x1, [x19, #24]
   3dfd8:	ldr	x2, [x19, #40]
   3dfdc:	add	x1, x2, x1, lsl #3
   3dfe0:	ldur	x1, [x1, #-8]
   3dfe4:	cbnz	x1, 3ddb0 <PyInit__decimal@@Base+0x21b70>
   3dfe8:	b	3df08 <PyInit__decimal@@Base+0x21cc8>
   3dfec:	ldp	x1, x21, [x19, #8]
   3dff0:	mov	x0, #0xbcfe                	// #48382
   3dff4:	movk	x0, #0xa84f, lsl #16
   3dff8:	movk	x0, #0xa209, lsl #32
   3dffc:	movk	x0, #0x9, lsl #48
   3e000:	add	x21, x21, x1
   3e004:	cmp	x21, x0
   3e008:	b.hi	3e040 <PyInit__decimal@@Base+0x21e00>  // b.pmore
   3e00c:	ucvtf	d0, w23
   3e010:	bl	6620 <log10@plt>
   3e014:	scvtf	d1, x21
   3e018:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   3e01c:	fmov	d2, x0
   3e020:	fdiv	d0, d1, d0
   3e024:	fcmpe	d0, d2
   3e028:	b.gt	3e040 <PyInit__decimal@@Base+0x21e00>
   3e02c:	fcvtzu	x21, d0
   3e030:	cmn	x21, #0x2
   3e034:	add	x21, x21, #0x1
   3e038:	b.ne	3dfac <PyInit__decimal@@Base+0x21d6c>  // b.any
   3e03c:	nop
   3e040:	ldr	w0, [x22]
   3e044:	mov	x27, #0xffffffffffffffff    	// #-1
   3e048:	ldp	x23, x24, [sp, #48]
   3e04c:	orr	w0, w0, #0x100
   3e050:	str	w0, [x22]
   3e054:	b	3deec <PyInit__decimal@@Base+0x21cac>
   3e058:	stp	x29, x30, [sp, #-112]!
   3e05c:	mov	x29, sp
   3e060:	stp	x25, x26, [sp, #64]
   3e064:	mov	x25, x6
   3e068:	stp	x27, x28, [sp, #80]
   3e06c:	mov	x27, x0
   3e070:	and	w0, w3, #0xff
   3e074:	str	w0, [sp, #100]
   3e078:	mov	x0, #0x20000000000000      	// #9007199254740992
   3e07c:	str	x5, [sp, #104]
   3e080:	cmp	x2, x0
   3e084:	b.hi	3e300 <PyInit__decimal@@Base+0x220c0>  // b.pmore
   3e088:	stp	x23, x24, [sp, #48]
   3e08c:	mov	w23, w4
   3e090:	ucvtf	d0, w23
   3e094:	stp	x19, x20, [sp, #16]
   3e098:	mov	x20, x2
   3e09c:	mov	x19, x1
   3e0a0:	bl	6620 <log10@plt>
   3e0a4:	fmov	d1, #1.900000000000000000e+01
   3e0a8:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3e0ac:	fdiv	d1, d0, d1
   3e0b0:	scvtf	d0, x20
   3e0b4:	ldr	d2, [x0, #2208]
   3e0b8:	fmul	d0, d0, d1
   3e0bc:	fcmpe	d0, d2
   3e0c0:	b.ge	3e31c <PyInit__decimal@@Base+0x220dc>  // b.tcont
   3e0c4:	stp	x21, x22, [sp, #32]
   3e0c8:	fcvtzs	x22, d0
   3e0cc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3e0d0:	add	x22, x22, #0x1
   3e0d4:	cmp	x22, x0
   3e0d8:	b.eq	3e2f0 <PyInit__decimal@@Base+0x220b0>  // b.none
   3e0dc:	mov	x0, x20
   3e0e0:	mov	x1, #0x8                   	// #8
   3e0e4:	bl	28278 <PyInit__decimal@@Base+0xc038>
   3e0e8:	mov	x24, x0
   3e0ec:	cbz	x0, 3e48c <PyInit__decimal@@Base+0x2224c>
   3e0f0:	cbz	x20, 3e45c <PyInit__decimal@@Base+0x2221c>
   3e0f4:	sub	x3, x20, #0x1
   3e0f8:	cmp	x3, #0x6
   3e0fc:	b.ls	3e4b8 <PyInit__decimal@@Base+0x22278>  // b.plast
   3e100:	lsr	x1, x20, #3
   3e104:	mov	x2, x19
   3e108:	add	x1, x19, x1, lsl #4
   3e10c:	nop
   3e110:	ldr	q0, [x2], #16
   3e114:	uxtl	v1.4s, v0.4h
   3e118:	cmp	x2, x1
   3e11c:	uxtl2	v0.4s, v0.8h
   3e120:	uxtl	v3.2d, v1.2s
   3e124:	uxtl	v2.2d, v0.2s
   3e128:	uxtl2	v1.2d, v1.4s
   3e12c:	uxtl2	v0.2d, v0.4s
   3e130:	stp	q3, q1, [x0]
   3e134:	stp	q2, q0, [x0, #32]
   3e138:	add	x0, x0, #0x40
   3e13c:	b.ne	3e110 <PyInit__decimal@@Base+0x21ed0>  // b.any
   3e140:	tst	x20, #0x7
   3e144:	and	x0, x20, #0xfffffffffffffff8
   3e148:	b.eq	3e1cc <PyInit__decimal@@Base+0x21f8c>  // b.none
   3e14c:	ldrh	w2, [x19, x0, lsl #1]
   3e150:	add	x1, x0, #0x1
   3e154:	str	x2, [x24, x0, lsl #3]
   3e158:	cmp	x20, x1
   3e15c:	b.ls	3e4c0 <PyInit__decimal@@Base+0x22280>  // b.plast
   3e160:	ldrh	w4, [x19, x1, lsl #1]
   3e164:	add	x2, x0, #0x2
   3e168:	str	x4, [x24, x1, lsl #3]
   3e16c:	cmp	x20, x2
   3e170:	b.ls	3e1cc <PyInit__decimal@@Base+0x21f8c>  // b.plast
   3e174:	ldrh	w4, [x19, x2, lsl #1]
   3e178:	add	x1, x0, #0x3
   3e17c:	str	x4, [x24, x2, lsl #3]
   3e180:	cmp	x20, x1
   3e184:	b.ls	3e1cc <PyInit__decimal@@Base+0x21f8c>  // b.plast
   3e188:	ldrh	w4, [x19, x1, lsl #1]
   3e18c:	add	x2, x0, #0x4
   3e190:	str	x4, [x24, x1, lsl #3]
   3e194:	cmp	x20, x2
   3e198:	b.ls	3e1cc <PyInit__decimal@@Base+0x21f8c>  // b.plast
   3e19c:	ldrh	w4, [x19, x2, lsl #1]
   3e1a0:	add	x1, x0, #0x5
   3e1a4:	str	x4, [x24, x2, lsl #3]
   3e1a8:	cmp	x20, x1
   3e1ac:	b.ls	3e1cc <PyInit__decimal@@Base+0x21f8c>  // b.plast
   3e1b0:	ldrh	w2, [x19, x1, lsl #1]
   3e1b4:	add	x0, x0, #0x6
   3e1b8:	str	x2, [x24, x1, lsl #3]
   3e1bc:	cmp	x20, x0
   3e1c0:	b.ls	3e1cc <PyInit__decimal@@Base+0x21f8c>  // b.plast
   3e1c4:	ldrh	w1, [x19, x0, lsl #1]
   3e1c8:	str	x1, [x24, x0, lsl #3]
   3e1cc:	adrp	x26, 65000 <PyInit__decimal@@Base+0x48dc0>
   3e1d0:	ldr	x0, [x27, #32]
   3e1d4:	ldr	x1, [x26, #1880]
   3e1d8:	cmp	x1, x22
   3e1dc:	csel	x1, x1, x22, ge  // ge = tcont
   3e1e0:	cmp	x1, x0
   3e1e4:	b.eq	3e438 <PyInit__decimal@@Base+0x221f8>  // b.none
   3e1e8:	ldrb	w2, [x27]
   3e1ec:	tbz	w2, #5, 3e328 <PyInit__decimal@@Base+0x220e8>
   3e1f0:	cmp	x0, x1
   3e1f4:	sub	x3, x20, #0x1
   3e1f8:	b.lt	3e428 <PyInit__decimal@@Base+0x221e8>  // b.tstop
   3e1fc:	ldr	x1, [x27, #40]
   3e200:	cmp	x20, #0x1
   3e204:	ldr	x0, [x24, x3, lsl #3]
   3e208:	sub	x20, x20, #0x2
   3e20c:	str	x0, [x1]
   3e210:	mov	x19, #0x1                   	// #1
   3e214:	b.eq	3e370 <PyInit__decimal@@Base+0x22130>  // b.none
   3e218:	mov	x19, #0x1                   	// #1
   3e21c:	b	3e2cc <PyInit__decimal@@Base+0x2208c>
   3e220:	cmp	x22, x19
   3e224:	add	x21, x19, #0x1
   3e228:	b.gt	3e258 <PyInit__decimal@@Base+0x22018>
   3e22c:	ldr	x1, [x26, #1880]
   3e230:	ldr	x0, [x27, #32]
   3e234:	cmp	x1, x21
   3e238:	csel	x1, x1, x21, ge  // ge = tcont
   3e23c:	cmp	x1, x0
   3e240:	b.eq	3e3e0 <PyInit__decimal@@Base+0x221a0>  // b.none
   3e244:	ldrb	w2, [x27]
   3e248:	tbz	w2, #5, 3e3d0 <PyInit__decimal@@Base+0x22190>
   3e24c:	cmp	x1, x0
   3e250:	mov	x22, x21
   3e254:	b.gt	3e400 <PyInit__decimal@@Base+0x221c0>
   3e258:	ldr	x0, [x27, #40]
   3e25c:	str	x28, [x0, x19, lsl #3]
   3e260:	mov	x19, x21
   3e264:	ldr	x2, [x24, x20, lsl #3]
   3e268:	mov	x1, x21
   3e26c:	bl	1d158 <PyInit__decimal@@Base+0xf18>
   3e270:	mov	x28, x0
   3e274:	cbz	x0, 3e2bc <PyInit__decimal@@Base+0x2207c>
   3e278:	cmp	x19, x22
   3e27c:	add	x19, x19, #0x1
   3e280:	b.lt	3e2b0 <PyInit__decimal@@Base+0x22070>  // b.tstop
   3e284:	ldr	x1, [x26, #1880]
   3e288:	ldr	x0, [x27, #32]
   3e28c:	cmp	x1, x19
   3e290:	csel	x1, x1, x19, ge  // ge = tcont
   3e294:	cmp	x1, x0
   3e298:	b.eq	3e3f8 <PyInit__decimal@@Base+0x221b8>  // b.none
   3e29c:	ldrb	w2, [x27]
   3e2a0:	tbz	w2, #5, 3e3e8 <PyInit__decimal@@Base+0x221a8>
   3e2a4:	cmp	x1, x0
   3e2a8:	mov	x22, x19
   3e2ac:	b.gt	3e414 <PyInit__decimal@@Base+0x221d4>
   3e2b0:	ldr	x0, [x27, #40]
   3e2b4:	str	x28, [x0, x21, lsl #3]
   3e2b8:	mov	x21, x19
   3e2bc:	sub	x20, x20, #0x1
   3e2c0:	cmn	x20, #0x1
   3e2c4:	b.eq	3e368 <PyInit__decimal@@Base+0x22128>  // b.none
   3e2c8:	ldr	x1, [x27, #40]
   3e2cc:	mov	x3, x23
   3e2d0:	mov	x2, x19
   3e2d4:	mov	x0, x1
   3e2d8:	mov	x21, x19
   3e2dc:	bl	1f188 <PyInit__decimal@@Base+0x2f48>
   3e2e0:	mov	x28, x0
   3e2e4:	cbnz	x0, 3e220 <PyInit__decimal@@Base+0x21fe0>
   3e2e8:	ldr	x0, [x27, #40]
   3e2ec:	b	3e264 <PyInit__decimal@@Base+0x22024>
   3e2f0:	ldp	x19, x20, [sp, #16]
   3e2f4:	ldp	x21, x22, [sp, #32]
   3e2f8:	ldp	x23, x24, [sp, #48]
   3e2fc:	nop
   3e300:	mov	x2, x25
   3e304:	mov	x0, x27
   3e308:	mov	w1, #0x100                 	// #256
   3e30c:	ldp	x25, x26, [sp, #64]
   3e310:	ldp	x27, x28, [sp, #80]
   3e314:	ldp	x29, x30, [sp], #112
   3e318:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   3e31c:	ldp	x19, x20, [sp, #16]
   3e320:	ldp	x23, x24, [sp, #48]
   3e324:	b	3e300 <PyInit__decimal@@Base+0x220c0>
   3e328:	mov	x2, x25
   3e32c:	mov	x0, x27
   3e330:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e334:	sub	x3, x20, #0x1
   3e338:	cbnz	w0, 3e1fc <PyInit__decimal@@Base+0x21fbc>
   3e33c:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3e340:	mov	x0, x24
   3e344:	ldp	x19, x20, [sp, #16]
   3e348:	ldr	x1, [x1, #1912]
   3e34c:	ldp	x21, x22, [sp, #32]
   3e350:	mov	x16, x1
   3e354:	ldp	x23, x24, [sp, #48]
   3e358:	ldp	x25, x26, [sp, #64]
   3e35c:	ldp	x27, x28, [sp, #80]
   3e360:	ldp	x29, x30, [sp], #112
   3e364:	br	x16
   3e368:	cmn	x21, #0x1
   3e36c:	b.eq	3e33c <PyInit__decimal@@Base+0x220fc>  // b.none
   3e370:	ldrb	w1, [x27]
   3e374:	mov	x0, x27
   3e378:	ldr	w2, [sp, #100]
   3e37c:	and	w1, w1, #0xfffffff0
   3e380:	str	xzr, [x27, #8]
   3e384:	orr	w28, w2, w1
   3e388:	strb	w28, [x27]
   3e38c:	str	x19, [x27, #24]
   3e390:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3e394:	ldp	x1, x2, [x27, #24]
   3e398:	ldr	x0, [x26, #1880]
   3e39c:	cmp	x1, x0
   3e3a0:	csel	x1, x1, x0, ge  // ge = tcont
   3e3a4:	cmp	x1, x2
   3e3a8:	b.eq	3e3bc <PyInit__decimal@@Base+0x2217c>  // b.none
   3e3ac:	ldrb	w0, [x27]
   3e3b0:	tbz	w0, #5, 3e44c <PyInit__decimal@@Base+0x2220c>
   3e3b4:	cmp	x1, x2
   3e3b8:	b.gt	3e4a8 <PyInit__decimal@@Base+0x22268>
   3e3bc:	ldr	x1, [sp, #104]
   3e3c0:	mov	x2, x25
   3e3c4:	mov	x0, x27
   3e3c8:	bl	2f360 <PyInit__decimal@@Base+0x13120>
   3e3cc:	b	3e33c <PyInit__decimal@@Base+0x220fc>
   3e3d0:	mov	x2, x25
   3e3d4:	mov	x0, x27
   3e3d8:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e3dc:	cbz	w0, 3e33c <PyInit__decimal@@Base+0x220fc>
   3e3e0:	mov	x22, x21
   3e3e4:	b	3e258 <PyInit__decimal@@Base+0x22018>
   3e3e8:	mov	x2, x25
   3e3ec:	mov	x0, x27
   3e3f0:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e3f4:	cbz	w0, 3e33c <PyInit__decimal@@Base+0x220fc>
   3e3f8:	mov	x22, x19
   3e3fc:	b	3e2b0 <PyInit__decimal@@Base+0x22070>
   3e400:	mov	x2, x25
   3e404:	mov	x0, x27
   3e408:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e40c:	cbnz	w0, 3e3e0 <PyInit__decimal@@Base+0x221a0>
   3e410:	b	3e33c <PyInit__decimal@@Base+0x220fc>
   3e414:	mov	x2, x25
   3e418:	mov	x0, x27
   3e41c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e420:	cbnz	w0, 3e3f8 <PyInit__decimal@@Base+0x221b8>
   3e424:	b	3e33c <PyInit__decimal@@Base+0x220fc>
   3e428:	mov	x2, x25
   3e42c:	mov	x0, x27
   3e430:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e434:	b	3e334 <PyInit__decimal@@Base+0x220f4>
   3e438:	ldr	x1, [x27, #40]
   3e43c:	sub	x20, x20, #0x2
   3e440:	ldr	x0, [x24, x3, lsl #3]
   3e444:	str	x0, [x1]
   3e448:	b	3e218 <PyInit__decimal@@Base+0x21fd8>
   3e44c:	mov	x2, x25
   3e450:	mov	x0, x27
   3e454:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e458:	b	3e3bc <PyInit__decimal@@Base+0x2217c>
   3e45c:	adrp	x26, 65000 <PyInit__decimal@@Base+0x48dc0>
   3e460:	ldr	x0, [x27, #32]
   3e464:	ldr	x1, [x26, #1880]
   3e468:	cmp	x1, x22
   3e46c:	csel	x1, x1, x22, ge  // ge = tcont
   3e470:	cmp	x1, x0
   3e474:	b.ne	3e1e8 <PyInit__decimal@@Base+0x21fa8>  // b.any
   3e478:	ldr	x1, [x27, #40]
   3e47c:	mov	x20, #0xfffffffffffffffe    	// #-2
   3e480:	ldur	x0, [x24, #-8]
   3e484:	str	x0, [x1]
   3e488:	b	3e218 <PyInit__decimal@@Base+0x21fd8>
   3e48c:	mov	x2, x25
   3e490:	mov	x0, x27
   3e494:	mov	w1, #0x200                 	// #512
   3e498:	ldp	x19, x20, [sp, #16]
   3e49c:	ldp	x21, x22, [sp, #32]
   3e4a0:	ldp	x23, x24, [sp, #48]
   3e4a4:	b	3e30c <PyInit__decimal@@Base+0x220cc>
   3e4a8:	mov	x2, x25
   3e4ac:	mov	x0, x27
   3e4b0:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e4b4:	b	3e3bc <PyInit__decimal@@Base+0x2217c>
   3e4b8:	mov	x0, #0x0                   	// #0
   3e4bc:	b	3e14c <PyInit__decimal@@Base+0x21f0c>
   3e4c0:	adrp	x26, 65000 <PyInit__decimal@@Base+0x48dc0>
   3e4c4:	ldr	x0, [x27, #32]
   3e4c8:	ldr	x1, [x26, #1880]
   3e4cc:	cmp	x1, x22
   3e4d0:	csel	x1, x1, x22, ge  // ge = tcont
   3e4d4:	cmp	x1, x0
   3e4d8:	b.ne	3e1e8 <PyInit__decimal@@Base+0x21fa8>  // b.any
   3e4dc:	b	3e1fc <PyInit__decimal@@Base+0x21fbc>
   3e4e0:	stp	x29, x30, [sp, #-128]!
   3e4e4:	mov	x29, sp
   3e4e8:	stp	x19, x20, [sp, #16]
   3e4ec:	mov	x19, x0
   3e4f0:	and	w0, w3, #0xff
   3e4f4:	stp	x21, x22, [sp, #32]
   3e4f8:	mov	x22, x6
   3e4fc:	str	w0, [sp, #108]
   3e500:	mov	x0, #0x20000000000000      	// #9007199254740992
   3e504:	str	x5, [sp, #112]
   3e508:	cmp	x2, x0
   3e50c:	b.hi	3e6b0 <PyInit__decimal@@Base+0x22470>  // b.pmore
   3e510:	ucvtf	d0, w4
   3e514:	mov	x21, x2
   3e518:	stp	x23, x24, [sp, #48]
   3e51c:	mov	x24, x1
   3e520:	mov	w23, w4
   3e524:	bl	6620 <log10@plt>
   3e528:	fmov	d1, #1.900000000000000000e+01
   3e52c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3e530:	fdiv	d1, d0, d1
   3e534:	scvtf	d0, x21
   3e538:	ldr	d2, [x0, #2208]
   3e53c:	fmul	d0, d0, d1
   3e540:	fcmpe	d0, d2
   3e544:	b.ge	3e6cc <PyInit__decimal@@Base+0x2248c>  // b.tcont
   3e548:	fcvtzs	x5, d0
   3e54c:	stp	x25, x26, [sp, #64]
   3e550:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   3e554:	stp	x27, x28, [sp, #80]
   3e558:	add	x26, x5, #0x1
   3e55c:	cmp	x26, x0
   3e560:	b.eq	3e6a4 <PyInit__decimal@@Base+0x22464>  // b.none
   3e564:	adrp	x25, 65000 <PyInit__decimal@@Base+0x48dc0>
   3e568:	ldr	x0, [x19, #32]
   3e56c:	ldr	x1, [x25, #1880]
   3e570:	cmp	x1, x26
   3e574:	csel	x1, x1, x26, ge  // ge = tcont
   3e578:	cmp	x1, x0
   3e57c:	b.eq	3e590 <PyInit__decimal@@Base+0x22350>  // b.none
   3e580:	ldrb	w2, [x19]
   3e584:	tbz	w2, #5, 3e80c <PyInit__decimal@@Base+0x225cc>
   3e588:	cmp	x1, x0
   3e58c:	b.gt	3e7d0 <PyInit__decimal@@Base+0x22590>
   3e590:	mov	w1, w23
   3e594:	sub	x0, x21, #0x1
   3e598:	str	x1, [sp, #96]
   3e59c:	mov	x27, #0x89e80000            	// #2313682944
   3e5a0:	ldr	x1, [x19, #40]
   3e5a4:	movk	x27, #0x2304, lsl #32
   3e5a8:	ldr	w0, [x24, x0, lsl #2]
   3e5ac:	cmp	x21, #0x1
   3e5b0:	mov	x20, #0x1                   	// #1
   3e5b4:	sub	x21, x21, #0x2
   3e5b8:	str	x0, [x1]
   3e5bc:	movk	x27, #0x8ac7, lsl #48
   3e5c0:	b.ne	3e67c <PyInit__decimal@@Base+0x2243c>  // b.any
   3e5c4:	b	3e75c <PyInit__decimal@@Base+0x2251c>
   3e5c8:	cmp	x26, x20
   3e5cc:	add	x28, x20, #0x1
   3e5d0:	b.gt	3e600 <PyInit__decimal@@Base+0x223c0>
   3e5d4:	ldr	x1, [x25, #1880]
   3e5d8:	ldr	x0, [x19, #32]
   3e5dc:	cmp	x1, x28
   3e5e0:	csel	x1, x1, x28, ge  // ge = tcont
   3e5e4:	cmp	x1, x0
   3e5e8:	b.eq	3e71c <PyInit__decimal@@Base+0x224dc>  // b.none
   3e5ec:	ldrb	w2, [x19]
   3e5f0:	tbz	w2, #5, 3e70c <PyInit__decimal@@Base+0x224cc>
   3e5f4:	cmp	x1, x0
   3e5f8:	mov	x26, x28
   3e5fc:	b.gt	3e724 <PyInit__decimal@@Base+0x224e4>
   3e600:	ldr	x0, [x19, #40]
   3e604:	str	x23, [x0, x20, lsl #3]
   3e608:	mov	x20, x28
   3e60c:	ldr	w2, [x24, x21, lsl #2]
   3e610:	mov	x3, x27
   3e614:	mov	x1, x28
   3e618:	bl	1f0f0 <PyInit__decimal@@Base+0x2eb0>
   3e61c:	mov	x3, x0
   3e620:	cbz	x0, 3e66c <PyInit__decimal@@Base+0x2242c>
   3e624:	cmp	x20, x26
   3e628:	add	x20, x20, #0x1
   3e62c:	b.lt	3e660 <PyInit__decimal@@Base+0x22420>  // b.tstop
   3e630:	ldr	x1, [x25, #1880]
   3e634:	ldr	x0, [x19, #32]
   3e638:	cmp	x1, x20
   3e63c:	csel	x1, x1, x20, ge  // ge = tcont
   3e640:	cmp	x1, x0
   3e644:	b.eq	3e704 <PyInit__decimal@@Base+0x224c4>  // b.none
   3e648:	ldrb	w2, [x19]
   3e64c:	tbz	w2, #5, 3e6ec <PyInit__decimal@@Base+0x224ac>
   3e650:	cmp	x1, x0
   3e654:	mov	x26, x20
   3e658:	b.gt	3e738 <PyInit__decimal@@Base+0x224f8>
   3e65c:	nop
   3e660:	ldr	x0, [x19, #40]
   3e664:	str	x3, [x0, x28, lsl #3]
   3e668:	mov	x28, x20
   3e66c:	sub	x21, x21, #0x1
   3e670:	cmn	x21, #0x1
   3e674:	b.eq	3e754 <PyInit__decimal@@Base+0x22514>  // b.none
   3e678:	ldr	x1, [x19, #40]
   3e67c:	mov	x4, x27
   3e680:	ldr	x3, [sp, #96]
   3e684:	mov	x2, x20
   3e688:	mov	x0, x1
   3e68c:	mov	x28, x20
   3e690:	bl	1f238 <PyInit__decimal@@Base+0x2ff8>
   3e694:	mov	x23, x0
   3e698:	cbnz	x0, 3e5c8 <PyInit__decimal@@Base+0x22388>
   3e69c:	ldr	x0, [x19, #40]
   3e6a0:	b	3e60c <PyInit__decimal@@Base+0x223cc>
   3e6a4:	ldp	x23, x24, [sp, #48]
   3e6a8:	ldp	x25, x26, [sp, #64]
   3e6ac:	ldp	x27, x28, [sp, #80]
   3e6b0:	mov	x2, x22
   3e6b4:	mov	x0, x19
   3e6b8:	mov	w1, #0x100                 	// #256
   3e6bc:	ldp	x19, x20, [sp, #16]
   3e6c0:	ldp	x21, x22, [sp, #32]
   3e6c4:	ldp	x29, x30, [sp], #128
   3e6c8:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   3e6cc:	mov	x2, x22
   3e6d0:	mov	x0, x19
   3e6d4:	ldp	x19, x20, [sp, #16]
   3e6d8:	mov	w1, #0x100                 	// #256
   3e6dc:	ldp	x21, x22, [sp, #32]
   3e6e0:	ldp	x23, x24, [sp, #48]
   3e6e4:	ldp	x29, x30, [sp], #128
   3e6e8:	b	2ba60 <PyInit__decimal@@Base+0xf820>
   3e6ec:	mov	x2, x22
   3e6f0:	mov	x0, x19
   3e6f4:	str	x3, [sp, #120]
   3e6f8:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e6fc:	ldr	x3, [sp, #120]
   3e700:	cbz	w0, 3e7e0 <PyInit__decimal@@Base+0x225a0>
   3e704:	mov	x26, x20
   3e708:	b	3e660 <PyInit__decimal@@Base+0x22420>
   3e70c:	mov	x2, x22
   3e710:	mov	x0, x19
   3e714:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e718:	cbz	w0, 3e7e0 <PyInit__decimal@@Base+0x225a0>
   3e71c:	mov	x26, x28
   3e720:	b	3e600 <PyInit__decimal@@Base+0x223c0>
   3e724:	mov	x2, x22
   3e728:	mov	x0, x19
   3e72c:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e730:	cbnz	w0, 3e71c <PyInit__decimal@@Base+0x224dc>
   3e734:	b	3e7e0 <PyInit__decimal@@Base+0x225a0>
   3e738:	mov	x2, x22
   3e73c:	mov	x0, x19
   3e740:	str	x3, [sp, #120]
   3e744:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e748:	ldr	x3, [sp, #120]
   3e74c:	cbnz	w0, 3e704 <PyInit__decimal@@Base+0x224c4>
   3e750:	b	3e7e0 <PyInit__decimal@@Base+0x225a0>
   3e754:	cmn	x28, #0x1
   3e758:	b.eq	3e7e0 <PyInit__decimal@@Base+0x225a0>  // b.none
   3e75c:	ldrb	w1, [x19]
   3e760:	mov	x0, x19
   3e764:	ldr	w2, [sp, #108]
   3e768:	and	w1, w1, #0xfffffff0
   3e76c:	str	xzr, [x19, #8]
   3e770:	orr	w28, w2, w1
   3e774:	strb	w28, [x19]
   3e778:	str	x20, [x19, #24]
   3e77c:	bl	2ad58 <PyInit__decimal@@Base+0xeb18>
   3e780:	ldp	x1, x2, [x19, #24]
   3e784:	ldr	x0, [x25, #1880]
   3e788:	cmp	x1, x0
   3e78c:	csel	x1, x1, x0, ge  // ge = tcont
   3e790:	cmp	x1, x2
   3e794:	b.eq	3e7a8 <PyInit__decimal@@Base+0x22568>  // b.none
   3e798:	ldrb	w0, [x19]
   3e79c:	tbz	w0, #5, 3e7fc <PyInit__decimal@@Base+0x225bc>
   3e7a0:	cmp	x1, x2
   3e7a4:	b.gt	3e81c <PyInit__decimal@@Base+0x225dc>
   3e7a8:	mov	x2, x22
   3e7ac:	mov	x0, x19
   3e7b0:	ldp	x19, x20, [sp, #16]
   3e7b4:	ldp	x21, x22, [sp, #32]
   3e7b8:	ldp	x23, x24, [sp, #48]
   3e7bc:	ldp	x25, x26, [sp, #64]
   3e7c0:	ldp	x27, x28, [sp, #80]
   3e7c4:	ldr	x1, [sp, #112]
   3e7c8:	ldp	x29, x30, [sp], #128
   3e7cc:	b	2f360 <PyInit__decimal@@Base+0x13120>
   3e7d0:	mov	x2, x22
   3e7d4:	mov	x0, x19
   3e7d8:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e7dc:	cbnz	w0, 3e590 <PyInit__decimal@@Base+0x22350>
   3e7e0:	ldp	x19, x20, [sp, #16]
   3e7e4:	ldp	x21, x22, [sp, #32]
   3e7e8:	ldp	x23, x24, [sp, #48]
   3e7ec:	ldp	x25, x26, [sp, #64]
   3e7f0:	ldp	x27, x28, [sp, #80]
   3e7f4:	ldp	x29, x30, [sp], #128
   3e7f8:	ret
   3e7fc:	mov	x2, x22
   3e800:	mov	x0, x19
   3e804:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e808:	b	3e7a8 <PyInit__decimal@@Base+0x22568>
   3e80c:	mov	x2, x22
   3e810:	mov	x0, x19
   3e814:	bl	28670 <PyInit__decimal@@Base+0xc430>
   3e818:	b	3e7dc <PyInit__decimal@@Base+0x2259c>
   3e81c:	mov	x2, x22
   3e820:	mov	x0, x19
   3e824:	bl	28520 <PyInit__decimal@@Base+0xc2e0>
   3e828:	b	3e7a8 <PyInit__decimal@@Base+0x22568>
   3e82c:	nop
   3e830:	sxtw	x2, w2
   3e834:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3e838:	add	x3, x3, #0x460
   3e83c:	adrp	x4, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3e840:	add	x4, x4, #0x440
   3e844:	cmn	w1, #0x1
   3e848:	ldr	x3, [x3, x2, lsl #3]
   3e84c:	ldr	x1, [x4, x2, lsl #3]
   3e850:	sub	x2, x3, #0x1
   3e854:	udiv	x5, x2, x0
   3e858:	b.eq	3eab0 <PyInit__decimal@@Base+0x22870>  // b.none
   3e85c:	cmp	x2, x0
   3e860:	and	x7, x3, #0x100000000
   3e864:	and	x6, x3, #0x400000000
   3e868:	mov	x0, #0x1                   	// #1
   3e86c:	b.cs	3e958 <PyInit__decimal@@Base+0x22718>  // b.hs, b.nlast
   3e870:	b	3e9bc <PyInit__decimal@@Base+0x2277c>
   3e874:	mul	x4, x0, x1
   3e878:	umulh	x1, x0, x1
   3e87c:	subs	x8, x4, x1
   3e880:	cmp	x4, x1
   3e884:	cset	x10, cc  // cc = lo, ul, last
   3e888:	cbnz	x7, 3e9c0 <PyInit__decimal@@Base+0x22780>
   3e88c:	cbz	x6, 3ea4c <PyInit__decimal@@Base+0x2280c>
   3e890:	lsr	x0, x1, #30
   3e894:	lsl	x1, x1, #34
   3e898:	adds	x1, x1, x8
   3e89c:	sub	x0, x0, x10
   3e8a0:	cinc	x0, x0, cs  // cs = hs, nlast
   3e8a4:	sub	x8, x9, x2
   3e8a8:	subs	x10, x1, x0
   3e8ac:	cmp	x1, x0
   3e8b0:	lsr	x4, x0, #30
   3e8b4:	lsl	x0, x0, #34
   3e8b8:	sbc	x4, x4, xzr
   3e8bc:	adds	x1, x10, x0
   3e8c0:	cinc	x4, x4, cs  // cs = hs, nlast
   3e8c4:	subs	x0, x1, x4
   3e8c8:	cmp	x1, x4
   3e8cc:	lsr	x10, x4, #30
   3e8d0:	lsl	x4, x4, #34
   3e8d4:	sbc	x10, x10, xzr
   3e8d8:	adds	x4, x0, x4
   3e8dc:	cinc	x10, x10, cs  // cs = hs, nlast
   3e8e0:	sub	x1, x4, x3
   3e8e4:	cmp	x10, #0x0
   3e8e8:	ccmp	x3, x4, #0x0, eq  // eq = none
   3e8ec:	csel	x0, x1, x4, ls  // ls = plast
   3e8f0:	cmp	x9, x8
   3e8f4:	lsr	x1, x2, #30
   3e8f8:	lsl	x2, x2, #34
   3e8fc:	sbc	x1, x1, xzr
   3e900:	adds	x2, x2, x8
   3e904:	cinc	x1, x1, cs  // cs = hs, nlast
   3e908:	subs	x4, x2, x1
   3e90c:	cmp	x2, x1
   3e910:	lsr	x2, x1, #30
   3e914:	lsl	x1, x1, #34
   3e918:	sbc	x2, x2, xzr
   3e91c:	adds	x4, x4, x1
   3e920:	cinc	x2, x2, cs  // cs = hs, nlast
   3e924:	subs	x1, x4, x2
   3e928:	cmp	x4, x2
   3e92c:	lsr	x4, x2, #30
   3e930:	lsl	x2, x2, #34
   3e934:	sbc	x4, x4, xzr
   3e938:	adds	x1, x1, x2
   3e93c:	cinc	x4, x4, cs  // cs = hs, nlast
   3e940:	sub	x2, x1, x3
   3e944:	cmp	x4, #0x0
   3e948:	ccmp	x3, x1, #0x0, eq  // eq = none
   3e94c:	csel	x1, x2, x1, ls  // ls = plast
   3e950:	lsr	x5, x5, #1
   3e954:	cbz	x5, 3e9bc <PyInit__decimal@@Base+0x2277c>
   3e958:	mul	x9, x1, x1
   3e95c:	umulh	x2, x1, x1
   3e960:	tbnz	w5, #0, 3e874 <PyInit__decimal@@Base+0x22634>
   3e964:	cbnz	x7, 3ea00 <PyInit__decimal@@Base+0x227c0>
   3e968:	sub	x8, x9, x2
   3e96c:	cbnz	x6, 3e8f0 <PyInit__decimal@@Base+0x226b0>
   3e970:	cmp	x9, x8
   3e974:	lsr	x1, x2, #24
   3e978:	lsl	x2, x2, #40
   3e97c:	sbc	x1, x1, xzr
   3e980:	adds	x2, x2, x8
   3e984:	cinc	x1, x1, cs  // cs = hs, nlast
   3e988:	subs	x4, x2, x1
   3e98c:	cmp	x2, x1
   3e990:	lsr	x2, x1, #24
   3e994:	lsl	x1, x1, #40
   3e998:	sbc	x2, x2, xzr
   3e99c:	adds	x4, x4, x1
   3e9a0:	cinc	x2, x2, cs  // cs = hs, nlast
   3e9a4:	subs	x1, x4, x2
   3e9a8:	cmp	x4, x2
   3e9ac:	lsr	x4, x2, #24
   3e9b0:	lsl	x2, x2, #40
   3e9b4:	b	3e934 <PyInit__decimal@@Base+0x226f4>
   3e9b8:	mov	x0, #0x1                   	// #1
   3e9bc:	ret
   3e9c0:	lsr	x4, x1, #32
   3e9c4:	lsl	x1, x1, #32
   3e9c8:	adds	x1, x1, x8
   3e9cc:	sub	x4, x4, x10
   3e9d0:	cinc	x4, x4, cs  // cs = hs, nlast
   3e9d4:	subs	x0, x1, x4
   3e9d8:	cmp	x1, x4
   3e9dc:	lsr	x8, x4, #32
   3e9e0:	lsl	x4, x4, #32
   3e9e4:	sbc	x8, x8, xzr
   3e9e8:	adds	x4, x0, x4
   3e9ec:	cinc	x8, x8, cs  // cs = hs, nlast
   3e9f0:	sub	x1, x4, x3
   3e9f4:	cmp	x8, #0x0
   3e9f8:	ccmp	x3, x4, #0x0, eq  // eq = none
   3e9fc:	csel	x0, x1, x4, ls  // ls = plast
   3ea00:	subs	x1, x9, x2
   3ea04:	lsr	x4, x2, #32
   3ea08:	cmp	x9, x2
   3ea0c:	lsl	x2, x2, #32
   3ea10:	sbc	x4, x4, xzr
   3ea14:	adds	x2, x1, x2
   3ea18:	cinc	x4, x4, cs  // cs = hs, nlast
   3ea1c:	subs	x1, x2, x4
   3ea20:	cmp	x2, x4
   3ea24:	lsr	x8, x4, #32
   3ea28:	lsl	x4, x4, #32
   3ea2c:	sbc	x8, x8, xzr
   3ea30:	adds	x4, x1, x4
   3ea34:	cinc	x8, x8, cs  // cs = hs, nlast
   3ea38:	sub	x2, x4, x3
   3ea3c:	cmp	x8, #0x0
   3ea40:	ccmp	x3, x4, #0x0, eq  // eq = none
   3ea44:	csel	x1, x2, x4, ls  // ls = plast
   3ea48:	b	3e950 <PyInit__decimal@@Base+0x22710>
   3ea4c:	lsr	x0, x1, #24
   3ea50:	lsl	x1, x1, #40
   3ea54:	adds	x1, x1, x8
   3ea58:	sub	x0, x0, x10
   3ea5c:	cinc	x0, x0, cs  // cs = hs, nlast
   3ea60:	sub	x8, x9, x2
   3ea64:	subs	x10, x1, x0
   3ea68:	cmp	x1, x0
   3ea6c:	lsr	x4, x0, #24
   3ea70:	lsl	x0, x0, #40
   3ea74:	sbc	x4, x4, xzr
   3ea78:	adds	x1, x10, x0
   3ea7c:	cinc	x4, x4, cs  // cs = hs, nlast
   3ea80:	subs	x0, x1, x4
   3ea84:	cmp	x1, x4
   3ea88:	lsr	x10, x4, #24
   3ea8c:	lsl	x4, x4, #40
   3ea90:	sbc	x10, x10, xzr
   3ea94:	adds	x4, x0, x4
   3ea98:	cinc	x10, x10, cs  // cs = hs, nlast
   3ea9c:	sub	x1, x4, x3
   3eaa0:	cmp	x10, #0x0
   3eaa4:	ccmp	x3, x4, #0x0, eq  // eq = none
   3eaa8:	csel	x0, x1, x4, ls  // ls = plast
   3eaac:	b	3e970 <PyInit__decimal@@Base+0x22730>
   3eab0:	subs	x5, x2, x5
   3eab4:	b.eq	3e9b8 <PyInit__decimal@@Base+0x22778>  // b.none
   3eab8:	and	x6, x3, #0x100000000
   3eabc:	and	x7, x3, #0x400000000
   3eac0:	mov	x0, #0x1                   	// #1
   3eac4:	b	3ebac <PyInit__decimal@@Base+0x2296c>
   3eac8:	mul	x4, x0, x1
   3eacc:	umulh	x1, x0, x1
   3ead0:	subs	x9, x4, x1
   3ead4:	cmp	x4, x1
   3ead8:	cset	x10, cc  // cc = lo, ul, last
   3eadc:	cbnz	x6, 3ec0c <PyInit__decimal@@Base+0x229cc>
   3eae0:	cbz	x7, 3ec98 <PyInit__decimal@@Base+0x22a58>
   3eae4:	lsr	x0, x1, #30
   3eae8:	lsl	x1, x1, #34
   3eaec:	adds	x1, x1, x9
   3eaf0:	sub	x0, x0, x10
   3eaf4:	cinc	x0, x0, cs  // cs = hs, nlast
   3eaf8:	sub	x4, x8, x2
   3eafc:	subs	x10, x1, x0
   3eb00:	cmp	x1, x0
   3eb04:	lsr	x9, x0, #30
   3eb08:	lsl	x0, x0, #34
   3eb0c:	sbc	x9, x9, xzr
   3eb10:	adds	x1, x10, x0
   3eb14:	cinc	x9, x9, cs  // cs = hs, nlast
   3eb18:	subs	x0, x1, x9
   3eb1c:	cmp	x1, x9
   3eb20:	lsr	x10, x9, #30
   3eb24:	lsl	x9, x9, #34
   3eb28:	sbc	x10, x10, xzr
   3eb2c:	adds	x9, x0, x9
   3eb30:	cinc	x10, x10, cs  // cs = hs, nlast
   3eb34:	sub	x1, x9, x3
   3eb38:	cmp	x10, #0x0
   3eb3c:	ccmp	x3, x9, #0x0, eq  // eq = none
   3eb40:	csel	x0, x1, x9, ls  // ls = plast
   3eb44:	cmp	x8, x4
   3eb48:	lsr	x1, x2, #30
   3eb4c:	lsl	x2, x2, #34
   3eb50:	sbc	x1, x1, xzr
   3eb54:	adds	x2, x2, x4
   3eb58:	cinc	x1, x1, cs  // cs = hs, nlast
   3eb5c:	subs	x4, x2, x1
   3eb60:	cmp	x2, x1
   3eb64:	lsr	x2, x1, #30
   3eb68:	lsl	x1, x1, #34
   3eb6c:	sbc	x2, x2, xzr
   3eb70:	adds	x4, x4, x1
   3eb74:	cinc	x2, x2, cs  // cs = hs, nlast
   3eb78:	subs	x1, x4, x2
   3eb7c:	cmp	x4, x2
   3eb80:	lsr	x4, x2, #30
   3eb84:	lsl	x2, x2, #34
   3eb88:	sbc	x4, x4, xzr
   3eb8c:	adds	x1, x1, x2
   3eb90:	cinc	x4, x4, cs  // cs = hs, nlast
   3eb94:	sub	x2, x1, x3
   3eb98:	cmp	x4, #0x0
   3eb9c:	ccmp	x3, x1, #0x0, eq  // eq = none
   3eba0:	csel	x1, x2, x1, ls  // ls = plast
   3eba4:	lsr	x5, x5, #1
   3eba8:	cbz	x5, 3e9bc <PyInit__decimal@@Base+0x2277c>
   3ebac:	mul	x8, x1, x1
   3ebb0:	umulh	x2, x1, x1
   3ebb4:	tbnz	w5, #0, 3eac8 <PyInit__decimal@@Base+0x22888>
   3ebb8:	cbnz	x6, 3ec4c <PyInit__decimal@@Base+0x22a0c>
   3ebbc:	sub	x4, x8, x2
   3ebc0:	cbnz	x7, 3eb44 <PyInit__decimal@@Base+0x22904>
   3ebc4:	cmp	x8, x4
   3ebc8:	lsr	x1, x2, #24
   3ebcc:	lsl	x2, x2, #40
   3ebd0:	sbc	x1, x1, xzr
   3ebd4:	adds	x2, x2, x4
   3ebd8:	cinc	x1, x1, cs  // cs = hs, nlast
   3ebdc:	subs	x4, x2, x1
   3ebe0:	cmp	x2, x1
   3ebe4:	lsr	x2, x1, #24
   3ebe8:	lsl	x1, x1, #40
   3ebec:	sbc	x2, x2, xzr
   3ebf0:	adds	x4, x4, x1
   3ebf4:	cinc	x2, x2, cs  // cs = hs, nlast
   3ebf8:	subs	x1, x4, x2
   3ebfc:	cmp	x4, x2
   3ec00:	lsr	x4, x2, #24
   3ec04:	lsl	x2, x2, #40
   3ec08:	b	3eb88 <PyInit__decimal@@Base+0x22948>
   3ec0c:	lsr	x4, x1, #32
   3ec10:	lsl	x1, x1, #32
   3ec14:	adds	x1, x1, x9
   3ec18:	sub	x4, x4, x10
   3ec1c:	cinc	x4, x4, cs  // cs = hs, nlast
   3ec20:	subs	x0, x1, x4
   3ec24:	cmp	x1, x4
   3ec28:	lsr	x9, x4, #32
   3ec2c:	lsl	x4, x4, #32
   3ec30:	sbc	x9, x9, xzr
   3ec34:	adds	x4, x0, x4
   3ec38:	cinc	x9, x9, cs  // cs = hs, nlast
   3ec3c:	sub	x1, x4, x3
   3ec40:	cmp	x9, #0x0
   3ec44:	ccmp	x3, x4, #0x0, eq  // eq = none
   3ec48:	csel	x0, x1, x4, ls  // ls = plast
   3ec4c:	subs	x1, x8, x2
   3ec50:	lsr	x4, x2, #32
   3ec54:	cmp	x8, x2
   3ec58:	lsl	x2, x2, #32
   3ec5c:	sbc	x4, x4, xzr
   3ec60:	adds	x2, x1, x2
   3ec64:	cinc	x4, x4, cs  // cs = hs, nlast
   3ec68:	subs	x1, x2, x4
   3ec6c:	cmp	x2, x4
   3ec70:	lsr	x8, x4, #32
   3ec74:	lsl	x4, x4, #32
   3ec78:	sbc	x8, x8, xzr
   3ec7c:	adds	x4, x1, x4
   3ec80:	cinc	x8, x8, cs  // cs = hs, nlast
   3ec84:	sub	x2, x4, x3
   3ec88:	cmp	x8, #0x0
   3ec8c:	ccmp	x3, x4, #0x0, eq  // eq = none
   3ec90:	csel	x1, x2, x4, ls  // ls = plast
   3ec94:	b	3eba4 <PyInit__decimal@@Base+0x22964>
   3ec98:	lsr	x0, x1, #24
   3ec9c:	lsl	x1, x1, #40
   3eca0:	adds	x1, x1, x9
   3eca4:	sub	x0, x0, x10
   3eca8:	cinc	x0, x0, cs  // cs = hs, nlast
   3ecac:	sub	x4, x8, x2
   3ecb0:	subs	x10, x1, x0
   3ecb4:	cmp	x1, x0
   3ecb8:	lsr	x9, x0, #24
   3ecbc:	lsl	x0, x0, #40
   3ecc0:	sbc	x9, x9, xzr
   3ecc4:	adds	x1, x10, x0
   3ecc8:	cinc	x9, x9, cs  // cs = hs, nlast
   3eccc:	subs	x0, x1, x9
   3ecd0:	cmp	x1, x9
   3ecd4:	lsr	x10, x9, #24
   3ecd8:	lsl	x9, x9, #40
   3ecdc:	sbc	x10, x10, xzr
   3ece0:	adds	x9, x0, x9
   3ece4:	cinc	x10, x10, cs  // cs = hs, nlast
   3ece8:	sub	x1, x9, x3
   3ecec:	cmp	x10, #0x0
   3ecf0:	ccmp	x3, x9, #0x0, eq  // eq = none
   3ecf4:	csel	x0, x1, x9, ls  // ls = plast
   3ecf8:	b	3ebc4 <PyInit__decimal@@Base+0x22984>
   3ecfc:	nop
   3ed00:	stp	x29, x30, [sp, #-48]!
   3ed04:	mov	x29, sp
   3ed08:	stp	x19, x20, [sp, #16]
   3ed0c:	lsr	x19, x0, #1
   3ed10:	mov	w20, w2
   3ed14:	mov	x2, #0x8                   	// #8
   3ed18:	stp	x21, x22, [sp, #32]
   3ed1c:	mov	x21, x0
   3ed20:	mov	w22, w1
   3ed24:	mov	x0, #0x18                  	// #24
   3ed28:	mov	x1, x19
   3ed2c:	bl	28318 <PyInit__decimal@@Base+0xc0d8>
   3ed30:	mov	x12, x0
   3ed34:	cbz	x0, 3ee7c <PyInit__decimal@@Base+0x22c3c>
   3ed38:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3ed3c:	add	x3, x3, #0x460
   3ed40:	mov	w1, w22
   3ed44:	mov	x0, x21
   3ed48:	mov	w2, w20
   3ed4c:	ldr	x11, [x3, w20, sxtw #3]
   3ed50:	bl	3e830 <PyInit__decimal@@Base+0x225f0>
   3ed54:	str	w20, [x12]
   3ed58:	stp	x11, x0, [x12, #8]
   3ed5c:	cbz	x19, 3ee7c <PyInit__decimal@@Base+0x22c3c>
   3ed60:	and	x9, x11, #0x100000000
   3ed64:	and	x10, x11, #0x400000000
   3ed68:	add	x8, x12, #0x18
   3ed6c:	mov	x7, #0x0                   	// #0
   3ed70:	mov	x1, #0x1                   	// #1
   3ed74:	b	3ee14 <PyInit__decimal@@Base+0x22bd4>
   3ed78:	lsr	x3, x1, #24
   3ed7c:	lsl	x4, x1, #40
   3ed80:	adds	x4, x4, x2
   3ed84:	sub	x3, x3, x13
   3ed88:	cinc	x3, x3, cs  // cs = hs, nlast
   3ed8c:	lsr	x5, x1, #30
   3ed90:	subs	x6, x4, x3
   3ed94:	lsl	x1, x1, #34
   3ed98:	cmp	x4, x3
   3ed9c:	lsr	x4, x3, #24
   3eda0:	lsl	x3, x3, #40
   3eda4:	sbc	x4, x4, xzr
   3eda8:	adds	x3, x6, x3
   3edac:	sub	x5, x5, x13
   3edb0:	cinc	x4, x4, cs  // cs = hs, nlast
   3edb4:	cbz	x10, 3ee90 <PyInit__decimal@@Base+0x22c50>
   3edb8:	adds	x1, x1, x2
   3edbc:	cinc	x5, x5, cs  // cs = hs, nlast
   3edc0:	subs	x3, x1, x5
   3edc4:	cmp	x1, x5
   3edc8:	lsr	x2, x5, #30
   3edcc:	lsl	x5, x5, #34
   3edd0:	sbc	x2, x2, xzr
   3edd4:	adds	x5, x3, x5
   3edd8:	cinc	x2, x2, cs  // cs = hs, nlast
   3eddc:	subs	x1, x5, x2
   3ede0:	cmp	x5, x2
   3ede4:	lsr	x3, x2, #30
   3ede8:	lsl	x2, x2, #34
   3edec:	sbc	x3, x3, xzr
   3edf0:	adds	x2, x1, x2
   3edf4:	cinc	x3, x3, cs  // cs = hs, nlast
   3edf8:	sub	x1, x2, x11
   3edfc:	cmp	x3, #0x0
   3ee00:	ccmp	x11, x2, #0x0, eq  // eq = none
   3ee04:	csel	x1, x1, x2, ls  // ls = plast
   3ee08:	add	x7, x7, #0x1
   3ee0c:	cmp	x19, x7
   3ee10:	b.eq	3ee7c <PyInit__decimal@@Base+0x22c3c>  // b.none
   3ee14:	mul	x3, x1, x0
   3ee18:	str	x1, [x8, x7, lsl #3]
   3ee1c:	umulh	x1, x1, x0
   3ee20:	subs	x2, x3, x1
   3ee24:	cmp	x3, x1
   3ee28:	cset	x13, cc  // cc = lo, ul, last
   3ee2c:	cbz	x9, 3ed78 <PyInit__decimal@@Base+0x22b38>
   3ee30:	lsr	x3, x1, #32
   3ee34:	lsl	x1, x1, #32
   3ee38:	adds	x2, x1, x2
   3ee3c:	sub	x3, x3, x13
   3ee40:	cinc	x3, x3, cs  // cs = hs, nlast
   3ee44:	add	x7, x7, #0x1
   3ee48:	subs	x1, x2, x3
   3ee4c:	cmp	x2, x3
   3ee50:	lsr	x2, x3, #32
   3ee54:	lsl	x3, x3, #32
   3ee58:	sbc	x2, x2, xzr
   3ee5c:	adds	x3, x1, x3
   3ee60:	cinc	x2, x2, cs  // cs = hs, nlast
   3ee64:	sub	x1, x3, x11
   3ee68:	cmp	x2, #0x0
   3ee6c:	ccmp	x11, x3, #0x0, eq  // eq = none
   3ee70:	csel	x1, x1, x3, ls  // ls = plast
   3ee74:	cmp	x19, x7
   3ee78:	b.ne	3ee14 <PyInit__decimal@@Base+0x22bd4>  // b.any
   3ee7c:	mov	x0, x12
   3ee80:	ldp	x19, x20, [sp, #16]
   3ee84:	ldp	x21, x22, [sp, #32]
   3ee88:	ldp	x29, x30, [sp], #48
   3ee8c:	ret
   3ee90:	subs	x1, x3, x4
   3ee94:	lsr	x2, x4, #24
   3ee98:	cmp	x3, x4
   3ee9c:	lsl	x4, x4, #40
   3eea0:	sbc	x2, x2, xzr
   3eea4:	adds	x4, x1, x4
   3eea8:	cinc	x2, x2, cs  // cs = hs, nlast
   3eeac:	sub	x1, x4, x11
   3eeb0:	cmp	x2, #0x0
   3eeb4:	ccmp	x11, x4, #0x0, eq  // eq = none
   3eeb8:	csel	x1, x1, x4, ls  // ls = plast
   3eebc:	b	3ee08 <PyInit__decimal@@Base+0x22bc8>
   3eec0:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3eec4:	add	x3, x3, #0x460
   3eec8:	stp	x29, x30, [sp, #-16]!
   3eecc:	mov	x12, x0
   3eed0:	mov	x0, #0x3                   	// #3
   3eed4:	mov	x29, sp
   3eed8:	ldr	x11, [x3, w2, sxtw #3]
   3eedc:	bl	3e830 <PyInit__decimal@@Base+0x225f0>
   3eee0:	and	x6, x11, #0x100000000
   3eee4:	mov	x3, #0x1                   	// #1
   3eee8:	and	x5, x11, #0x400000000
   3eeec:	mov	x1, x3
   3eef0:	mov	w4, #0x2                   	// #2
   3eef4:	mov	x2, #0x2                   	// #2
   3eef8:	stp	x3, x0, [x12]
   3eefc:	b	3efec <PyInit__decimal@@Base+0x22dac>
   3ef00:	mul	x3, x1, x0
   3ef04:	umulh	x1, x1, x0
   3ef08:	subs	x0, x3, x1
   3ef0c:	cmp	x3, x1
   3ef10:	cset	x8, cc  // cc = lo, ul, last
   3ef14:	cbnz	x6, 3f05c <PyInit__decimal@@Base+0x22e1c>
   3ef18:	cbz	x5, 3f0e8 <PyInit__decimal@@Base+0x22ea8>
   3ef1c:	lsr	x7, x1, #30
   3ef20:	lsl	x1, x1, #34
   3ef24:	adds	x1, x1, x0
   3ef28:	sub	x7, x7, x8
   3ef2c:	cinc	x7, x7, cs  // cs = hs, nlast
   3ef30:	sub	x8, x9, x2
   3ef34:	subs	x0, x1, x7
   3ef38:	cmp	x1, x7
   3ef3c:	lsr	x3, x7, #30
   3ef40:	lsl	x7, x7, #34
   3ef44:	sbc	x3, x3, xzr
   3ef48:	adds	x7, x0, x7
   3ef4c:	cinc	x3, x3, cs  // cs = hs, nlast
   3ef50:	subs	x1, x7, x3
   3ef54:	cmp	x7, x3
   3ef58:	lsr	x7, x3, #30
   3ef5c:	lsl	x3, x3, #34
   3ef60:	sbc	x7, x7, xzr
   3ef64:	adds	x3, x1, x3
   3ef68:	cinc	x7, x7, cs  // cs = hs, nlast
   3ef6c:	sub	x1, x3, x11
   3ef70:	cmp	x7, #0x0
   3ef74:	ccmp	x11, x3, #0x0, eq  // eq = none
   3ef78:	csel	x1, x1, x3, ls  // ls = plast
   3ef7c:	cmp	x9, x8
   3ef80:	lsr	x0, x2, #30
   3ef84:	lsl	x2, x2, #34
   3ef88:	sbc	x0, x0, xzr
   3ef8c:	adds	x2, x2, x8
   3ef90:	cinc	x0, x0, cs  // cs = hs, nlast
   3ef94:	subs	x3, x2, x0
   3ef98:	cmp	x2, x0
   3ef9c:	lsr	x2, x0, #30
   3efa0:	lsl	x0, x0, #34
   3efa4:	sbc	x2, x2, xzr
   3efa8:	adds	x3, x3, x0
   3efac:	cinc	x2, x2, cs  // cs = hs, nlast
   3efb0:	subs	x0, x3, x2
   3efb4:	cmp	x3, x2
   3efb8:	lsr	x3, x2, #30
   3efbc:	lsl	x2, x2, #34
   3efc0:	sbc	x3, x3, xzr
   3efc4:	adds	x0, x0, x2
   3efc8:	cinc	x3, x3, cs  // cs = hs, nlast
   3efcc:	sub	x2, x0, x11
   3efd0:	cmp	x3, #0x0
   3efd4:	ccmp	x11, x0, #0x0, eq  // eq = none
   3efd8:	csel	x0, x2, x0, ls  // ls = plast
   3efdc:	cmp	w4, #0x1
   3efe0:	mov	x2, #0x1                   	// #1
   3efe4:	b.eq	3f050 <PyInit__decimal@@Base+0x22e10>  // b.none
   3efe8:	mov	w4, w2
   3efec:	cmp	x2, #0x1
   3eff0:	mul	x9, x0, x0
   3eff4:	umulh	x2, x0, x0
   3eff8:	b.eq	3ef00 <PyInit__decimal@@Base+0x22cc0>  // b.none
   3effc:	cbnz	x6, 3f09c <PyInit__decimal@@Base+0x22e5c>
   3f000:	sub	x8, x9, x2
   3f004:	cbnz	x5, 3ef7c <PyInit__decimal@@Base+0x22d3c>
   3f008:	cmp	x9, x8
   3f00c:	lsr	x3, x2, #24
   3f010:	lsl	x2, x2, #40
   3f014:	sbc	x3, x3, xzr
   3f018:	adds	x2, x2, x8
   3f01c:	cinc	x3, x3, cs  // cs = hs, nlast
   3f020:	subs	x0, x2, x3
   3f024:	cmp	x2, x3
   3f028:	lsr	x2, x3, #24
   3f02c:	lsl	x3, x3, #40
   3f030:	sbc	x2, x2, xzr
   3f034:	adds	x3, x0, x3
   3f038:	cinc	x2, x2, cs  // cs = hs, nlast
   3f03c:	subs	x0, x3, x2
   3f040:	cmp	x3, x2
   3f044:	lsr	x3, x2, #24
   3f048:	lsl	x2, x2, #40
   3f04c:	b	3efc0 <PyInit__decimal@@Base+0x22d80>
   3f050:	str	x1, [x12, #16]
   3f054:	ldp	x29, x30, [sp], #16
   3f058:	ret
   3f05c:	lsr	x3, x1, #32
   3f060:	lsl	x1, x1, #32
   3f064:	adds	x1, x1, x0
   3f068:	sub	x3, x3, x8
   3f06c:	cinc	x3, x3, cs  // cs = hs, nlast
   3f070:	subs	x0, x1, x3
   3f074:	cmp	x1, x3
   3f078:	lsr	x7, x3, #32
   3f07c:	lsl	x3, x3, #32
   3f080:	sbc	x7, x7, xzr
   3f084:	adds	x3, x0, x3
   3f088:	cinc	x7, x7, cs  // cs = hs, nlast
   3f08c:	sub	x1, x3, x11
   3f090:	cmp	x7, #0x0
   3f094:	ccmp	x11, x3, #0x0, eq  // eq = none
   3f098:	csel	x1, x1, x3, ls  // ls = plast
   3f09c:	subs	x0, x9, x2
   3f0a0:	lsr	x3, x2, #32
   3f0a4:	cmp	x9, x2
   3f0a8:	lsl	x2, x2, #32
   3f0ac:	sbc	x3, x3, xzr
   3f0b0:	adds	x2, x0, x2
   3f0b4:	cinc	x3, x3, cs  // cs = hs, nlast
   3f0b8:	subs	x0, x2, x3
   3f0bc:	cmp	x2, x3
   3f0c0:	lsr	x7, x3, #32
   3f0c4:	lsl	x3, x3, #32
   3f0c8:	sbc	x7, x7, xzr
   3f0cc:	adds	x3, x0, x3
   3f0d0:	cinc	x7, x7, cs  // cs = hs, nlast
   3f0d4:	sub	x2, x3, x11
   3f0d8:	cmp	x7, #0x0
   3f0dc:	ccmp	x11, x3, #0x0, eq  // eq = none
   3f0e0:	csel	x0, x2, x3, ls  // ls = plast
   3f0e4:	b	3efdc <PyInit__decimal@@Base+0x22d9c>
   3f0e8:	lsr	x7, x1, #24
   3f0ec:	lsl	x1, x1, #40
   3f0f0:	adds	x1, x1, x0
   3f0f4:	sub	x7, x7, x8
   3f0f8:	cinc	x7, x7, cs  // cs = hs, nlast
   3f0fc:	sub	x8, x9, x2
   3f100:	subs	x0, x1, x7
   3f104:	cmp	x1, x7
   3f108:	lsr	x3, x7, #24
   3f10c:	lsl	x7, x7, #40
   3f110:	sbc	x3, x3, xzr
   3f114:	adds	x7, x0, x7
   3f118:	cinc	x3, x3, cs  // cs = hs, nlast
   3f11c:	subs	x1, x7, x3
   3f120:	cmp	x7, x3
   3f124:	lsr	x7, x3, #24
   3f128:	lsl	x3, x3, #40
   3f12c:	sbc	x7, x7, xzr
   3f130:	adds	x3, x1, x3
   3f134:	cinc	x7, x7, cs  // cs = hs, nlast
   3f138:	sub	x1, x3, x11
   3f13c:	cmp	x7, #0x0
   3f140:	ccmp	x11, x3, #0x0, eq  // eq = none
   3f144:	csel	x1, x1, x3, ls  // ls = plast
   3f148:	b	3f008 <PyInit__decimal@@Base+0x22dc8>
   3f14c:	nop
   3f150:	stp	x29, x30, [sp, #-112]!
   3f154:	cmp	xzr, x1, lsr #32
   3f158:	mov	x29, sp
   3f15c:	stp	x19, x20, [sp, #16]
   3f160:	mov	x19, x0
   3f164:	stp	x21, x22, [sp, #32]
   3f168:	stp	x23, x24, [sp, #48]
   3f16c:	mov	w24, w2
   3f170:	stp	x25, x26, [sp, #64]
   3f174:	stp	x27, x28, [sp, #80]
   3f178:	mov	x28, x1
   3f17c:	b.eq	3f23c <PyInit__decimal@@Base+0x22ffc>  // b.none
   3f180:	lsr	x1, x1, #32
   3f184:	mov	w26, #0x30                  	// #48
   3f188:	mov	w2, #0x20                  	// #32
   3f18c:	lsr	x0, x1, #16
   3f190:	cmp	x0, #0x0
   3f194:	csel	x0, x0, x1, ne  // ne = any
   3f198:	csel	w26, w26, w2, ne  // ne = any
   3f19c:	lsr	x1, x0, #8
   3f1a0:	cmp	xzr, x0, lsr #8
   3f1a4:	b.eq	3f1b0 <PyInit__decimal@@Base+0x22f70>  // b.none
   3f1a8:	add	w26, w26, #0x8
   3f1ac:	mov	x0, x1
   3f1b0:	cmp	xzr, x0, lsr #4
   3f1b4:	lsr	x1, x0, #4
   3f1b8:	b.eq	3f1c4 <PyInit__decimal@@Base+0x22f84>  // b.none
   3f1bc:	add	w26, w26, #0x4
   3f1c0:	mov	x0, x1
   3f1c4:	cmp	xzr, x0, lsr #2
   3f1c8:	lsr	x1, x0, #2
   3f1cc:	b.eq	3f1d8 <PyInit__decimal@@Base+0x22f98>  // b.none
   3f1d0:	add	w26, w26, #0x2
   3f1d4:	mov	x0, x1
   3f1d8:	sub	w1, w26, #0x1
   3f1dc:	cmp	xzr, x0, lsr #1
   3f1e0:	add	w0, w1, w0
   3f1e4:	mov	x27, #0x1                   	// #1
   3f1e8:	csinc	w26, w0, w26, eq  // eq = none
   3f1ec:	mov	x0, x19
   3f1f0:	sxtw	x21, w26
   3f1f4:	lsr	x21, x21, #1
   3f1f8:	str	w21, [sp, #108]
   3f1fc:	sub	w26, w26, w21
   3f200:	lsl	x22, x27, x21
   3f204:	mov	x2, x22
   3f208:	lsl	x27, x27, x26
   3f20c:	mov	x1, x27
   3f210:	bl	40d30 <PyInit__decimal@@Base+0x24af0>
   3f214:	cbnz	w0, 3f248 <PyInit__decimal@@Base+0x23008>
   3f218:	mov	w26, #0x0                   	// #0
   3f21c:	mov	w0, w26
   3f220:	ldp	x19, x20, [sp, #16]
   3f224:	ldp	x21, x22, [sp, #32]
   3f228:	ldp	x23, x24, [sp, #48]
   3f22c:	ldp	x25, x26, [sp, #64]
   3f230:	ldp	x27, x28, [sp, #80]
   3f234:	ldp	x29, x30, [sp], #112
   3f238:	ret
   3f23c:	mov	w26, #0x10                  	// #16
   3f240:	mov	w2, #0x0                   	// #0
   3f244:	b	3f18c <PyInit__decimal@@Base+0x22f4c>
   3f248:	mov	w2, w24
   3f24c:	mov	x0, x27
   3f250:	mov	w1, #0xffffffff            	// #-1
   3f254:	bl	3ed00 <PyInit__decimal@@Base+0x22ac0>
   3f258:	mov	x20, x0
   3f25c:	cbz	x0, 3f218 <PyInit__decimal@@Base+0x22fd8>
   3f260:	add	x23, x19, x28, lsl #3
   3f264:	cmp	x19, x23
   3f268:	b.cs	3f294 <PyInit__decimal@@Base+0x23054>  // b.hs, b.nlast
   3f26c:	mov	x0, #0x8                   	// #8
   3f270:	mov	x25, x19
   3f274:	lsl	x26, x0, x26
   3f278:	mov	x0, x25
   3f27c:	mov	x2, x20
   3f280:	mov	x1, x27
   3f284:	add	x25, x25, x26
   3f288:	bl	211b8 <PyInit__decimal@@Base+0x4f78>
   3f28c:	cmp	x25, x23
   3f290:	b.cc	3f278 <PyInit__decimal@@Base+0x23038>  // b.lo, b.ul, b.last
   3f294:	mov	x2, x27
   3f298:	mov	x1, x22
   3f29c:	mov	x0, x19
   3f2a0:	bl	40d30 <PyInit__decimal@@Base+0x24af0>
   3f2a4:	mov	w26, w0
   3f2a8:	cbnz	w0, 3f2dc <PyInit__decimal@@Base+0x2309c>
   3f2ac:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   3f2b0:	mov	x0, x20
   3f2b4:	ldr	x1, [x1, #1912]
   3f2b8:	blr	x1
   3f2bc:	mov	w0, w26
   3f2c0:	ldp	x19, x20, [sp, #16]
   3f2c4:	ldp	x21, x22, [sp, #32]
   3f2c8:	ldp	x23, x24, [sp, #48]
   3f2cc:	ldp	x25, x26, [sp, #64]
   3f2d0:	ldp	x27, x28, [sp, #80]
   3f2d4:	ldp	x29, x30, [sp], #112
   3f2d8:	ret
   3f2dc:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3f2e0:	add	x3, x3, #0x460
   3f2e4:	mov	x0, x28
   3f2e8:	mov	w2, w24
   3f2ec:	mov	w1, #0xffffffff            	// #-1
   3f2f0:	ldr	x26, [x3, w24, sxtw #3]
   3f2f4:	bl	3e830 <PyInit__decimal@@Base+0x225f0>
   3f2f8:	cmp	x27, #0x1
   3f2fc:	b.ls	3fa80 <PyInit__decimal@@Base+0x23840>  // b.plast
   3f300:	sub	x6, x22, #0x1
   3f304:	and	x3, x26, #0x100000000
   3f308:	and	x6, x6, #0xfffffffffffffffe
   3f30c:	and	x4, x26, #0x400000000
   3f310:	add	x7, x19, #0x10
   3f314:	mov	x5, #0x1                   	// #1
   3f318:	mov	x1, x0
   3f31c:	mov	x9, x5
   3f320:	mov	x2, #0x1                   	// #1
   3f324:	b	3f414 <PyInit__decimal@@Base+0x231d4>
   3f328:	mul	x12, x2, x1
   3f32c:	umulh	x2, x2, x1
   3f330:	subs	x1, x12, x2
   3f334:	cbnz	x3, 3f838 <PyInit__decimal@@Base+0x235f8>
   3f338:	cmp	x12, x2
   3f33c:	cset	x12, cc  // cc = lo, ul, last
   3f340:	cbz	x4, 3f880 <PyInit__decimal@@Base+0x23640>
   3f344:	lsr	x10, x2, #30
   3f348:	lsl	x2, x2, #34
   3f34c:	adds	x1, x2, x1
   3f350:	sub	x10, x10, x12
   3f354:	cinc	x10, x10, cs  // cs = hs, nlast
   3f358:	subs	x2, x1, x10
   3f35c:	cmp	x1, x10
   3f360:	lsr	x1, x10, #30
   3f364:	lsl	x10, x10, #34
   3f368:	sbc	x1, x1, xzr
   3f36c:	adds	x10, x2, x10
   3f370:	cinc	x1, x1, cs  // cs = hs, nlast
   3f374:	subs	x2, x10, x1
   3f378:	cmp	x10, x1
   3f37c:	lsr	x10, x1, #30
   3f380:	lsl	x1, x1, #34
   3f384:	sbc	x10, x10, xzr
   3f388:	adds	x1, x2, x1
   3f38c:	cinc	x10, x10, cs  // cs = hs, nlast
   3f390:	sub	x2, x1, x26
   3f394:	cmp	x10, #0x0
   3f398:	ccmp	x26, x1, #0x0, eq  // eq = none
   3f39c:	csel	x2, x2, x1, ls  // ls = plast
   3f3a0:	subs	x10, x11, x8
   3f3a4:	cmp	x11, x8
   3f3a8:	cset	x11, cc  // cc = lo, ul, last
   3f3ac:	cbz	x4, 3f7f4 <PyInit__decimal@@Base+0x235b4>
   3f3b0:	lsr	x1, x8, #30
   3f3b4:	lsl	x8, x8, #34
   3f3b8:	adds	x8, x8, x10
   3f3bc:	sub	x1, x1, x11
   3f3c0:	cinc	x1, x1, cs  // cs = hs, nlast
   3f3c4:	subs	x10, x8, x1
   3f3c8:	cmp	x8, x1
   3f3cc:	lsr	x8, x1, #30
   3f3d0:	lsl	x1, x1, #34
   3f3d4:	sbc	x8, x8, xzr
   3f3d8:	adds	x10, x10, x1
   3f3dc:	cinc	x8, x8, cs  // cs = hs, nlast
   3f3e0:	subs	x1, x10, x8
   3f3e4:	cmp	x10, x8
   3f3e8:	lsr	x10, x8, #30
   3f3ec:	lsl	x8, x8, #34
   3f3f0:	sbc	x10, x10, xzr
   3f3f4:	adds	x8, x1, x8
   3f3f8:	cinc	x10, x10, cs  // cs = hs, nlast
   3f3fc:	sub	x1, x8, x26
   3f400:	cmp	x10, #0x0
   3f404:	lsr	x9, x9, #1
   3f408:	ccmp	x26, x8, #0x0, eq  // eq = none
   3f40c:	csel	x1, x1, x8, ls  // ls = plast
   3f410:	cbz	x9, 3f474 <PyInit__decimal@@Base+0x23234>
   3f414:	mul	x11, x1, x1
   3f418:	umulh	x8, x1, x1
   3f41c:	tbnz	w9, #0, 3f328 <PyInit__decimal@@Base+0x230e8>
   3f420:	cbz	x3, 3f3a0 <PyInit__decimal@@Base+0x23160>
   3f424:	subs	x1, x11, x8
   3f428:	lsr	x10, x8, #32
   3f42c:	cmp	x11, x8
   3f430:	lsl	x8, x8, #32
   3f434:	sbc	x10, x10, xzr
   3f438:	adds	x8, x1, x8
   3f43c:	cinc	x10, x10, cs  // cs = hs, nlast
   3f440:	lsr	x9, x9, #1
   3f444:	subs	x1, x8, x10
   3f448:	cmp	x8, x10
   3f44c:	lsr	x8, x10, #32
   3f450:	lsl	x10, x10, #32
   3f454:	sbc	x8, x8, xzr
   3f458:	adds	x10, x1, x10
   3f45c:	cinc	x8, x8, cs  // cs = hs, nlast
   3f460:	sub	x1, x10, x26
   3f464:	cmp	x8, #0x0
   3f468:	ccmp	x26, x10, #0x0, eq  // eq = none
   3f46c:	csel	x1, x1, x10, ls  // ls = plast
   3f470:	cbnz	x9, 3f414 <PyInit__decimal@@Base+0x231d4>
   3f474:	mul	x8, x2, x2
   3f478:	umulh	x1, x2, x2
   3f47c:	subs	x9, x8, x1
   3f480:	cmp	x8, x1
   3f484:	cset	x10, cc  // cc = lo, ul, last
   3f488:	cbnz	x3, 3fb0c <PyInit__decimal@@Base+0x238cc>
   3f48c:	cbz	x4, 3fb50 <PyInit__decimal@@Base+0x23910>
   3f490:	lsr	x8, x1, #30
   3f494:	lsl	x1, x1, #34
   3f498:	adds	x1, x1, x9
   3f49c:	sub	x8, x8, x10
   3f4a0:	cinc	x8, x8, cs  // cs = hs, nlast
   3f4a4:	subs	x9, x1, x8
   3f4a8:	cmp	x1, x8
   3f4ac:	lsr	x1, x8, #30
   3f4b0:	lsl	x8, x8, #34
   3f4b4:	sbc	x1, x1, xzr
   3f4b8:	adds	x8, x9, x8
   3f4bc:	cinc	x1, x1, cs  // cs = hs, nlast
   3f4c0:	subs	x11, x8, x1
   3f4c4:	cmp	x8, x1
   3f4c8:	lsr	x8, x1, #30
   3f4cc:	lsl	x1, x1, #34
   3f4d0:	sbc	x8, x8, xzr
   3f4d4:	adds	x1, x11, x1
   3f4d8:	cinc	x8, x8, cs  // cs = hs, nlast
   3f4dc:	sub	x11, x1, x26
   3f4e0:	cmp	x8, #0x0
   3f4e4:	ccmp	x26, x1, #0x0, eq  // eq = none
   3f4e8:	csel	x11, x11, x1, ls  // ls = plast
   3f4ec:	cbz	x22, 3fa74 <PyInit__decimal@@Base+0x23834>
   3f4f0:	ldrb	w1, [sp, #108]
   3f4f4:	mov	x8, #0x1                   	// #1
   3f4f8:	lsl	x10, x5, x1
   3f4fc:	add	x12, x10, x6
   3f500:	add	x10, x19, x10, lsl #3
   3f504:	add	x12, x7, x12, lsl #3
   3f508:	b	3f6c0 <PyInit__decimal@@Base+0x23480>
   3f50c:	cbz	x4, 3f8c4 <PyInit__decimal@@Base+0x23684>
   3f510:	lsr	x13, x1, #30
   3f514:	lsl	x1, x1, #34
   3f518:	adds	x1, x1, x14
   3f51c:	sub	x13, x13, x15
   3f520:	cinc	x13, x13, cs  // cs = hs, nlast
   3f524:	mul	x14, x2, x9
   3f528:	subs	x15, x1, x13
   3f52c:	umulh	x9, x2, x9
   3f530:	cmp	x1, x13
   3f534:	lsr	x16, x13, #30
   3f538:	lsl	x13, x13, #34
   3f53c:	sbc	x16, x16, xzr
   3f540:	adds	x13, x15, x13
   3f544:	lsr	x1, x9, #30
   3f548:	cinc	x16, x16, cs  // cs = hs, nlast
   3f54c:	lsl	x15, x9, #34
   3f550:	subs	x28, x13, x16
   3f554:	mul	x18, x8, x11
   3f558:	cmp	x13, x16
   3f55c:	lsr	x17, x16, #30
   3f560:	lsl	x16, x16, #34
   3f564:	sbc	x17, x17, xzr
   3f568:	adds	x16, x28, x16
   3f56c:	umulh	x8, x8, x11
   3f570:	cinc	x17, x17, cs  // cs = hs, nlast
   3f574:	sub	x13, x16, x26
   3f578:	cmp	x17, #0x0
   3f57c:	mul	x17, x2, x11
   3f580:	ccmp	x26, x16, #0x0, eq  // eq = none
   3f584:	lsl	x30, x8, #34
   3f588:	csel	x13, x13, x16, ls  // ls = plast
   3f58c:	subs	x16, x14, x9
   3f590:	cmp	x14, x9
   3f594:	lsr	x14, x8, #30
   3f598:	sbc	x1, x1, xzr
   3f59c:	adds	x15, x16, x15
   3f5a0:	cinc	x1, x1, cs  // cs = hs, nlast
   3f5a4:	umulh	x2, x2, x11
   3f5a8:	subs	x28, x15, x1
   3f5ac:	cmp	x15, x1
   3f5b0:	lsr	x16, x1, #30
   3f5b4:	lsl	x1, x1, #34
   3f5b8:	sbc	x16, x16, xzr
   3f5bc:	adds	x1, x28, x1
   3f5c0:	lsr	x9, x2, #30
   3f5c4:	cinc	x16, x16, cs  // cs = hs, nlast
   3f5c8:	lsl	x28, x2, #34
   3f5cc:	subs	x15, x1, x16
   3f5d0:	cmp	x1, x16
   3f5d4:	lsr	x1, x16, #30
   3f5d8:	lsl	x16, x16, #34
   3f5dc:	sbc	x1, x1, xzr
   3f5e0:	adds	x16, x15, x16
   3f5e4:	cinc	x1, x1, cs  // cs = hs, nlast
   3f5e8:	sub	x15, x16, x26
   3f5ec:	cmp	x1, #0x0
   3f5f0:	ccmp	x26, x16, #0x0, eq  // eq = none
   3f5f4:	csel	x15, x15, x16, ls  // ls = plast
   3f5f8:	subs	x1, x18, x8
   3f5fc:	cmp	x18, x8
   3f600:	sbc	x14, x14, xzr
   3f604:	adds	x30, x1, x30
   3f608:	cinc	x14, x14, cs  // cs = hs, nlast
   3f60c:	subs	x8, x30, x14
   3f610:	cmp	x30, x14
   3f614:	lsr	x1, x14, #30
   3f618:	lsl	x14, x14, #34
   3f61c:	sbc	x1, x1, xzr
   3f620:	adds	x14, x8, x14
   3f624:	cinc	x1, x1, cs  // cs = hs, nlast
   3f628:	subs	x8, x14, x1
   3f62c:	cmp	x14, x1
   3f630:	lsr	x14, x1, #30
   3f634:	lsl	x1, x1, #34
   3f638:	sbc	x14, x14, xzr
   3f63c:	adds	x1, x8, x1
   3f640:	cinc	x14, x14, cs  // cs = hs, nlast
   3f644:	sub	x8, x1, x26
   3f648:	cmp	x14, #0x0
   3f64c:	ccmp	x26, x1, #0x0, eq  // eq = none
   3f650:	csel	x8, x8, x1, ls  // ls = plast
   3f654:	subs	x1, x17, x2
   3f658:	cmp	x17, x2
   3f65c:	sbc	x9, x9, xzr
   3f660:	adds	x28, x1, x28
   3f664:	cinc	x9, x9, cs  // cs = hs, nlast
   3f668:	subs	x2, x28, x9
   3f66c:	cmp	x28, x9
   3f670:	lsr	x1, x9, #30
   3f674:	lsl	x9, x9, #34
   3f678:	sbc	x1, x1, xzr
   3f67c:	adds	x9, x2, x9
   3f680:	cinc	x1, x1, cs  // cs = hs, nlast
   3f684:	subs	x2, x9, x1
   3f688:	cmp	x9, x1
   3f68c:	lsr	x9, x1, #30
   3f690:	lsl	x1, x1, #34
   3f694:	sbc	x9, x9, xzr
   3f698:	adds	x1, x2, x1
   3f69c:	cinc	x9, x9, cs  // cs = hs, nlast
   3f6a0:	stp	x13, x15, [x10]
   3f6a4:	cmp	x9, #0x0
   3f6a8:	ccmp	x26, x1, #0x0, eq  // eq = none
   3f6ac:	sub	x2, x1, x26
   3f6b0:	add	x10, x10, #0x10
   3f6b4:	csel	x2, x2, x1, ls  // ls = plast
   3f6b8:	cmp	x10, x12
   3f6bc:	b.eq	3fa74 <PyInit__decimal@@Base+0x23834>  // b.none
   3f6c0:	ldp	x1, x9, [x10]
   3f6c4:	mul	x13, x8, x1
   3f6c8:	umulh	x1, x8, x1
   3f6cc:	subs	x14, x13, x1
   3f6d0:	cmp	x13, x1
   3f6d4:	cset	x15, cc  // cc = lo, ul, last
   3f6d8:	cbz	x3, 3f50c <PyInit__decimal@@Base+0x232cc>
   3f6dc:	lsr	x13, x1, #32
   3f6e0:	lsl	x1, x1, #32
   3f6e4:	adds	x1, x1, x14
   3f6e8:	sub	x13, x13, x15
   3f6ec:	cinc	x13, x13, cs  // cs = hs, nlast
   3f6f0:	mul	x14, x9, x2
   3f6f4:	subs	x15, x1, x13
   3f6f8:	umulh	x9, x9, x2
   3f6fc:	cmp	x1, x13
   3f700:	lsr	x16, x13, #32
   3f704:	lsl	x13, x13, #32
   3f708:	sbc	x16, x16, xzr
   3f70c:	adds	x13, x15, x13
   3f710:	lsr	x1, x9, #32
   3f714:	cinc	x16, x16, cs  // cs = hs, nlast
   3f718:	sub	x17, x13, x26
   3f71c:	cmp	x16, #0x0
   3f720:	lsl	x15, x9, #32
   3f724:	ccmp	x26, x13, #0x0, eq  // eq = none
   3f728:	mul	x16, x8, x11
   3f72c:	csel	x13, x17, x13, ls  // ls = plast
   3f730:	subs	x17, x14, x9
   3f734:	cmp	x14, x9
   3f738:	umulh	x8, x8, x11
   3f73c:	sbc	x1, x1, xzr
   3f740:	adds	x17, x17, x15
   3f744:	cinc	x1, x1, cs  // cs = hs, nlast
   3f748:	mul	x14, x2, x11
   3f74c:	subs	x15, x17, x1
   3f750:	lsr	x9, x8, #32
   3f754:	cmp	x17, x1
   3f758:	lsr	x17, x1, #32
   3f75c:	lsl	x1, x1, #32
   3f760:	sbc	x17, x17, xzr
   3f764:	adds	x1, x15, x1
   3f768:	lsl	x18, x8, #32
   3f76c:	cinc	x17, x17, cs  // cs = hs, nlast
   3f770:	sub	x15, x1, x26
   3f774:	cmp	x17, #0x0
   3f778:	umulh	x2, x2, x11
   3f77c:	ccmp	x26, x1, #0x0, eq  // eq = none
   3f780:	csel	x15, x15, x1, ls  // ls = plast
   3f784:	subs	x17, x16, x8
   3f788:	cmp	x16, x8
   3f78c:	lsr	x1, x2, #32
   3f790:	sbc	x9, x9, xzr
   3f794:	adds	x17, x17, x18
   3f798:	cinc	x9, x9, cs  // cs = hs, nlast
   3f79c:	lsl	x16, x2, #32
   3f7a0:	subs	x8, x17, x9
   3f7a4:	cmp	x17, x9
   3f7a8:	lsr	x17, x9, #32
   3f7ac:	lsl	x9, x9, #32
   3f7b0:	sbc	x17, x17, xzr
   3f7b4:	adds	x9, x8, x9
   3f7b8:	cinc	x17, x17, cs  // cs = hs, nlast
   3f7bc:	sub	x8, x9, x26
   3f7c0:	cmp	x17, #0x0
   3f7c4:	ccmp	x26, x9, #0x0, eq  // eq = none
   3f7c8:	csel	x8, x8, x9, ls  // ls = plast
   3f7cc:	subs	x9, x14, x2
   3f7d0:	cmp	x14, x2
   3f7d4:	sbc	x1, x1, xzr
   3f7d8:	adds	x9, x9, x16
   3f7dc:	cinc	x1, x1, cs  // cs = hs, nlast
   3f7e0:	subs	x2, x9, x1
   3f7e4:	cmp	x9, x1
   3f7e8:	lsr	x9, x1, #32
   3f7ec:	lsl	x1, x1, #32
   3f7f0:	b	3f694 <PyInit__decimal@@Base+0x23454>
   3f7f4:	lsr	x1, x8, #24
   3f7f8:	lsl	x8, x8, #40
   3f7fc:	adds	x8, x8, x10
   3f800:	sub	x1, x1, x11
   3f804:	cinc	x1, x1, cs  // cs = hs, nlast
   3f808:	subs	x10, x8, x1
   3f80c:	cmp	x8, x1
   3f810:	lsr	x8, x1, #24
   3f814:	lsl	x1, x1, #40
   3f818:	sbc	x8, x8, xzr
   3f81c:	adds	x10, x10, x1
   3f820:	cinc	x8, x8, cs  // cs = hs, nlast
   3f824:	subs	x1, x10, x8
   3f828:	cmp	x10, x8
   3f82c:	lsr	x10, x8, #24
   3f830:	lsl	x8, x8, #40
   3f834:	b	3f3f0 <PyInit__decimal@@Base+0x231b0>
   3f838:	cmp	x12, x2
   3f83c:	lsr	x10, x2, #32
   3f840:	lsl	x2, x2, #32
   3f844:	sbc	x10, x10, xzr
   3f848:	adds	x1, x1, x2
   3f84c:	cinc	x10, x10, cs  // cs = hs, nlast
   3f850:	subs	x2, x1, x10
   3f854:	cmp	x1, x10
   3f858:	lsr	x1, x10, #32
   3f85c:	lsl	x10, x10, #32
   3f860:	sbc	x1, x1, xzr
   3f864:	adds	x10, x2, x10
   3f868:	cinc	x1, x1, cs  // cs = hs, nlast
   3f86c:	sub	x2, x10, x26
   3f870:	cmp	x1, #0x0
   3f874:	ccmp	x26, x10, #0x0, eq  // eq = none
   3f878:	csel	x2, x2, x10, ls  // ls = plast
   3f87c:	b	3f424 <PyInit__decimal@@Base+0x231e4>
   3f880:	lsr	x10, x2, #24
   3f884:	lsl	x2, x2, #40
   3f888:	adds	x1, x2, x1
   3f88c:	sub	x10, x10, x12
   3f890:	cinc	x10, x10, cs  // cs = hs, nlast
   3f894:	subs	x2, x1, x10
   3f898:	cmp	x1, x10
   3f89c:	lsr	x1, x10, #24
   3f8a0:	lsl	x10, x10, #40
   3f8a4:	sbc	x1, x1, xzr
   3f8a8:	adds	x10, x2, x10
   3f8ac:	cinc	x1, x1, cs  // cs = hs, nlast
   3f8b0:	subs	x2, x10, x1
   3f8b4:	cmp	x10, x1
   3f8b8:	lsr	x10, x1, #24
   3f8bc:	lsl	x1, x1, #40
   3f8c0:	b	3f384 <PyInit__decimal@@Base+0x23144>
   3f8c4:	lsr	x13, x1, #24
   3f8c8:	lsl	x1, x1, #40
   3f8cc:	adds	x1, x1, x14
   3f8d0:	sub	x13, x13, x15
   3f8d4:	cinc	x13, x13, cs  // cs = hs, nlast
   3f8d8:	mul	x14, x9, x2
   3f8dc:	subs	x15, x1, x13
   3f8e0:	umulh	x9, x9, x2
   3f8e4:	cmp	x1, x13
   3f8e8:	lsr	x16, x13, #24
   3f8ec:	lsl	x13, x13, #40
   3f8f0:	sbc	x16, x16, xzr
   3f8f4:	adds	x13, x15, x13
   3f8f8:	lsr	x1, x9, #24
   3f8fc:	cinc	x16, x16, cs  // cs = hs, nlast
   3f900:	lsl	x15, x9, #40
   3f904:	subs	x28, x13, x16
   3f908:	mul	x18, x8, x11
   3f90c:	cmp	x13, x16
   3f910:	lsr	x17, x16, #24
   3f914:	lsl	x16, x16, #40
   3f918:	sbc	x17, x17, xzr
   3f91c:	adds	x16, x28, x16
   3f920:	umulh	x8, x8, x11
   3f924:	cinc	x17, x17, cs  // cs = hs, nlast
   3f928:	sub	x13, x16, x26
   3f92c:	cmp	x17, #0x0
   3f930:	mul	x17, x2, x11
   3f934:	ccmp	x26, x16, #0x0, eq  // eq = none
   3f938:	lsl	x28, x8, #40
   3f93c:	csel	x13, x13, x16, ls  // ls = plast
   3f940:	subs	x16, x14, x9
   3f944:	cmp	x14, x9
   3f948:	lsr	x9, x8, #24
   3f94c:	sbc	x1, x1, xzr
   3f950:	adds	x15, x16, x15
   3f954:	cinc	x1, x1, cs  // cs = hs, nlast
   3f958:	umulh	x2, x2, x11
   3f95c:	subs	x30, x15, x1
   3f960:	cmp	x15, x1
   3f964:	lsr	x16, x1, #24
   3f968:	lsl	x1, x1, #40
   3f96c:	sbc	x16, x16, xzr
   3f970:	adds	x1, x30, x1
   3f974:	lsr	x14, x2, #24
   3f978:	cinc	x16, x16, cs  // cs = hs, nlast
   3f97c:	lsl	x30, x2, #40
   3f980:	subs	x15, x1, x16
   3f984:	cmp	x1, x16
   3f988:	lsr	x1, x16, #24
   3f98c:	lsl	x16, x16, #40
   3f990:	sbc	x1, x1, xzr
   3f994:	adds	x16, x15, x16
   3f998:	cinc	x1, x1, cs  // cs = hs, nlast
   3f99c:	sub	x15, x16, x26
   3f9a0:	cmp	x1, #0x0
   3f9a4:	ccmp	x26, x16, #0x0, eq  // eq = none
   3f9a8:	csel	x15, x15, x16, ls  // ls = plast
   3f9ac:	subs	x1, x18, x8
   3f9b0:	cmp	x18, x8
   3f9b4:	stp	x13, x15, [x10]
   3f9b8:	sbc	x9, x9, xzr
   3f9bc:	adds	x28, x1, x28
   3f9c0:	add	x10, x10, #0x10
   3f9c4:	cinc	x9, x9, cs  // cs = hs, nlast
   3f9c8:	subs	x8, x28, x9
   3f9cc:	cmp	x28, x9
   3f9d0:	lsr	x1, x9, #24
   3f9d4:	lsl	x9, x9, #40
   3f9d8:	sbc	x1, x1, xzr
   3f9dc:	adds	x9, x8, x9
   3f9e0:	cinc	x1, x1, cs  // cs = hs, nlast
   3f9e4:	subs	x8, x9, x1
   3f9e8:	cmp	x9, x1
   3f9ec:	lsr	x9, x1, #24
   3f9f0:	lsl	x1, x1, #40
   3f9f4:	sbc	x9, x9, xzr
   3f9f8:	adds	x1, x8, x1
   3f9fc:	cinc	x9, x9, cs  // cs = hs, nlast
   3fa00:	sub	x8, x1, x26
   3fa04:	cmp	x9, #0x0
   3fa08:	ccmp	x26, x1, #0x0, eq  // eq = none
   3fa0c:	csel	x8, x8, x1, ls  // ls = plast
   3fa10:	subs	x1, x17, x2
   3fa14:	cmp	x17, x2
   3fa18:	sbc	x14, x14, xzr
   3fa1c:	adds	x30, x1, x30
   3fa20:	cinc	x14, x14, cs  // cs = hs, nlast
   3fa24:	subs	x1, x30, x14
   3fa28:	cmp	x30, x14
   3fa2c:	lsr	x9, x14, #24
   3fa30:	lsl	x14, x14, #40
   3fa34:	sbc	x9, x9, xzr
   3fa38:	adds	x14, x1, x14
   3fa3c:	cinc	x9, x9, cs  // cs = hs, nlast
   3fa40:	subs	x2, x14, x9
   3fa44:	cmp	x14, x9
   3fa48:	lsr	x1, x9, #24
   3fa4c:	lsl	x9, x9, #40
   3fa50:	sbc	x1, x1, xzr
   3fa54:	adds	x9, x2, x9
   3fa58:	cinc	x1, x1, cs  // cs = hs, nlast
   3fa5c:	sub	x2, x9, x26
   3fa60:	cmp	x1, #0x0
   3fa64:	ccmp	x26, x9, #0x0, eq  // eq = none
   3fa68:	csel	x2, x2, x9, ls  // ls = plast
   3fa6c:	cmp	x10, x12
   3fa70:	b.ne	3f6c0 <PyInit__decimal@@Base+0x23480>  // b.any
   3fa74:	add	x5, x5, #0x1
   3fa78:	cmp	x27, x5
   3fa7c:	b.ne	3f318 <PyInit__decimal@@Base+0x230d8>  // b.any
   3fa80:	cmp	x22, x27
   3fa84:	adrp	x25, 65000 <PyInit__decimal@@Base+0x48dc0>
   3fa88:	b.eq	3fab0 <PyInit__decimal@@Base+0x23870>  // b.none
   3fa8c:	ldr	x1, [x25, #1912]
   3fa90:	mov	x0, x20
   3fa94:	blr	x1
   3fa98:	mov	w2, w24
   3fa9c:	mov	x0, x22
   3faa0:	mov	w1, #0xffffffff            	// #-1
   3faa4:	bl	3ed00 <PyInit__decimal@@Base+0x22ac0>
   3faa8:	mov	x20, x0
   3faac:	cbz	x0, 3f218 <PyInit__decimal@@Base+0x22fd8>
   3fab0:	mov	x0, #0x8                   	// #8
   3fab4:	cmp	x19, x23
   3fab8:	lsl	x21, x0, x21
   3fabc:	b.cs	3fadc <PyInit__decimal@@Base+0x2389c>  // b.hs, b.nlast
   3fac0:	mov	x0, x19
   3fac4:	mov	x2, x20
   3fac8:	mov	x1, x22
   3facc:	add	x19, x19, x21
   3fad0:	bl	211b8 <PyInit__decimal@@Base+0x4f78>
   3fad4:	cmp	x19, x23
   3fad8:	b.cc	3fac0 <PyInit__decimal@@Base+0x23880>  // b.lo, b.ul, b.last
   3fadc:	ldr	x1, [x25, #1912]
   3fae0:	mov	x0, x20
   3fae4:	mov	w26, #0x1                   	// #1
   3fae8:	blr	x1
   3faec:	mov	w0, w26
   3faf0:	ldp	x19, x20, [sp, #16]
   3faf4:	ldp	x21, x22, [sp, #32]
   3faf8:	ldp	x23, x24, [sp, #48]
   3fafc:	ldp	x25, x26, [sp, #64]
   3fb00:	ldp	x27, x28, [sp, #80]
   3fb04:	ldp	x29, x30, [sp], #112
   3fb08:	ret
   3fb0c:	lsr	x8, x1, #32
   3fb10:	lsl	x1, x1, #32
   3fb14:	adds	x1, x1, x9
   3fb18:	sub	x8, x8, x10
   3fb1c:	cinc	x8, x8, cs  // cs = hs, nlast
   3fb20:	subs	x11, x1, x8
   3fb24:	cmp	x1, x8
   3fb28:	lsr	x1, x8, #32
   3fb2c:	lsl	x8, x8, #32
   3fb30:	sbc	x1, x1, xzr
   3fb34:	adds	x8, x11, x8
   3fb38:	cinc	x1, x1, cs  // cs = hs, nlast
   3fb3c:	sub	x11, x8, x26
   3fb40:	cmp	x1, #0x0
   3fb44:	ccmp	x26, x8, #0x0, eq  // eq = none
   3fb48:	csel	x11, x11, x8, ls  // ls = plast
   3fb4c:	b	3f4ec <PyInit__decimal@@Base+0x232ac>
   3fb50:	lsr	x8, x1, #24
   3fb54:	lsl	x1, x1, #40
   3fb58:	adds	x1, x1, x9
   3fb5c:	sub	x8, x8, x10
   3fb60:	cinc	x8, x8, cs  // cs = hs, nlast
   3fb64:	subs	x9, x1, x8
   3fb68:	cmp	x1, x8
   3fb6c:	lsr	x1, x8, #24
   3fb70:	lsl	x8, x8, #40
   3fb74:	sbc	x1, x1, xzr
   3fb78:	adds	x8, x9, x8
   3fb7c:	cinc	x1, x1, cs  // cs = hs, nlast
   3fb80:	subs	x11, x8, x1
   3fb84:	cmp	x8, x1
   3fb88:	lsr	x8, x1, #24
   3fb8c:	lsl	x1, x1, #40
   3fb90:	b	3f4d0 <PyInit__decimal@@Base+0x23290>
   3fb94:	nop
   3fb98:	stp	x29, x30, [sp, #-112]!
   3fb9c:	cmp	xzr, x1, lsr #32
   3fba0:	mov	x29, sp
   3fba4:	stp	x19, x20, [sp, #16]
   3fba8:	stp	x21, x22, [sp, #32]
   3fbac:	stp	x23, x24, [sp, #48]
   3fbb0:	mov	x23, x0
   3fbb4:	stp	x25, x26, [sp, #64]
   3fbb8:	mov	w26, w2
   3fbbc:	stp	x27, x28, [sp, #80]
   3fbc0:	mov	x28, x1
   3fbc4:	b.eq	40598 <PyInit__decimal@@Base+0x24358>  // b.none
   3fbc8:	lsr	x2, x1, #32
   3fbcc:	mov	w3, #0x20                  	// #32
   3fbd0:	mov	w1, #0x30                  	// #48
   3fbd4:	lsr	x0, x2, #16
   3fbd8:	cmp	x0, #0x0
   3fbdc:	csel	x0, x0, x2, ne  // ne = any
   3fbe0:	csel	w1, w1, w3, ne  // ne = any
   3fbe4:	lsr	x2, x0, #8
   3fbe8:	cmp	xzr, x0, lsr #8
   3fbec:	b.eq	3fbf8 <PyInit__decimal@@Base+0x239b8>  // b.none
   3fbf0:	add	w1, w1, #0x8
   3fbf4:	mov	x0, x2
   3fbf8:	cmp	xzr, x0, lsr #4
   3fbfc:	lsr	x2, x0, #4
   3fc00:	b.eq	3fc0c <PyInit__decimal@@Base+0x239cc>  // b.none
   3fc04:	add	w1, w1, #0x4
   3fc08:	mov	x0, x2
   3fc0c:	cmp	xzr, x0, lsr #2
   3fc10:	lsr	x2, x0, #2
   3fc14:	b.eq	3fc20 <PyInit__decimal@@Base+0x239e0>  // b.none
   3fc18:	add	w1, w1, #0x2
   3fc1c:	mov	x0, x2
   3fc20:	sub	w22, w1, #0x1
   3fc24:	cmp	xzr, x0, lsr #1
   3fc28:	add	w22, w22, w0
   3fc2c:	mov	x19, #0x1                   	// #1
   3fc30:	csinc	w22, w22, w1, eq  // eq = none
   3fc34:	mov	w2, w26
   3fc38:	mov	w1, w19
   3fc3c:	sxtw	x27, w22
   3fc40:	lsr	x27, x27, #1
   3fc44:	sub	w0, w22, w27
   3fc48:	mov	w25, w27
   3fc4c:	mov	w3, w0
   3fc50:	lsl	x20, x19, x27
   3fc54:	mov	x0, x20
   3fc58:	str	w3, [sp, #108]
   3fc5c:	lsl	x19, x19, x3
   3fc60:	bl	3ed00 <PyInit__decimal@@Base+0x22ac0>
   3fc64:	mov	x21, x0
   3fc68:	cbz	x0, 405d8 <PyInit__decimal@@Base+0x24398>
   3fc6c:	add	x24, x23, x28, lsl #3
   3fc70:	cmp	x23, x24
   3fc74:	b.cs	3fca4 <PyInit__decimal@@Base+0x23a64>  // b.hs, b.nlast
   3fc78:	mov	x0, #0x8                   	// #8
   3fc7c:	mov	x22, x23
   3fc80:	lsl	x27, x0, x27
   3fc84:	nop
   3fc88:	mov	x0, x22
   3fc8c:	mov	x2, x21
   3fc90:	mov	x1, x20
   3fc94:	add	x22, x22, x27
   3fc98:	bl	211b8 <PyInit__decimal@@Base+0x4f78>
   3fc9c:	cmp	x22, x24
   3fca0:	b.cc	3fc88 <PyInit__decimal@@Base+0x23a48>  // b.lo, b.ul, b.last
   3fca4:	adrp	x3, 48000 <PyInit__decimal@@Base+0x2bdc0>
   3fca8:	add	x3, x3, #0x460
   3fcac:	mov	x0, x28
   3fcb0:	mov	w2, w26
   3fcb4:	mov	w1, #0x1                   	// #1
   3fcb8:	ldr	x27, [x3, w26, sxtw #3]
   3fcbc:	bl	3e830 <PyInit__decimal@@Base+0x225f0>
   3fcc0:	str	x0, [sp, #96]
   3fcc4:	cmp	x19, #0x1
   3fcc8:	mov	x6, x0
   3fccc:	b.ls	4044c <PyInit__decimal@@Base+0x2420c>  // b.plast
   3fcd0:	sub	x5, x20, #0x1
   3fcd4:	and	x2, x27, #0x100000000
   3fcd8:	and	x5, x5, #0xfffffffffffffffe
   3fcdc:	and	x3, x27, #0x400000000
   3fce0:	add	x7, x23, #0x10
   3fce4:	mov	x4, #0x1                   	// #1
   3fce8:	mov	x1, x6
   3fcec:	mov	x9, x4
   3fcf0:	mov	x0, #0x1                   	// #1
   3fcf4:	b	3fde4 <PyInit__decimal@@Base+0x23ba4>
   3fcf8:	mul	x12, x0, x1
   3fcfc:	umulh	x0, x0, x1
   3fd00:	subs	x1, x12, x0
   3fd04:	cbnz	x2, 40204 <PyInit__decimal@@Base+0x23fc4>
   3fd08:	cmp	x12, x0
   3fd0c:	cset	x12, cc  // cc = lo, ul, last
   3fd10:	cbz	x3, 4024c <PyInit__decimal@@Base+0x2400c>
   3fd14:	lsr	x10, x0, #30
   3fd18:	lsl	x0, x0, #34
   3fd1c:	adds	x0, x0, x1
   3fd20:	sub	x10, x10, x12
   3fd24:	cinc	x10, x10, cs  // cs = hs, nlast
   3fd28:	subs	x12, x0, x10
   3fd2c:	cmp	x0, x10
   3fd30:	lsr	x1, x10, #30
   3fd34:	lsl	x10, x10, #34
   3fd38:	sbc	x1, x1, xzr
   3fd3c:	adds	x10, x12, x10
   3fd40:	cinc	x1, x1, cs  // cs = hs, nlast
   3fd44:	subs	x0, x10, x1
   3fd48:	cmp	x10, x1
   3fd4c:	lsr	x10, x1, #30
   3fd50:	lsl	x1, x1, #34
   3fd54:	sbc	x10, x10, xzr
   3fd58:	adds	x1, x0, x1
   3fd5c:	cinc	x10, x10, cs  // cs = hs, nlast
   3fd60:	sub	x0, x1, x27
   3fd64:	cmp	x10, #0x0
   3fd68:	ccmp	x27, x1, #0x0, eq  // eq = none
   3fd6c:	csel	x0, x0, x1, ls  // ls = plast
   3fd70:	subs	x10, x11, x8
   3fd74:	cmp	x11, x8
   3fd78:	cset	x11, cc  // cc = lo, ul, last
   3fd7c:	cbz	x3, 401c0 <PyInit__decimal@@Base+0x23f80>
   3fd80:	lsr	x1, x8, #30
   3fd84:	lsl	x8, x8, #34
   3fd88:	adds	x8, x8, x10
   3fd8c:	sub	x1, x1, x11
   3fd90:	cinc	x1, x1, cs  // cs = hs, nlast
   3fd94:	subs	x10, x8, x1
   3fd98:	cmp	x8, x1
   3fd9c:	lsr	x8, x1, #30
   3fda0:	lsl	x1, x1, #34
   3fda4:	sbc	x8, x8, xzr
   3fda8:	adds	x10, x10, x1
   3fdac:	cinc	x8, x8, cs  // cs = hs, nlast
   3fdb0:	subs	x1, x10, x8
   3fdb4:	cmp	x10, x8
   3fdb8:	lsr	x10, x8, #30
   3fdbc:	lsl	x8, x8, #34
   3fdc0:	sbc	x10, x10, xzr
   3fdc4:	adds	x8, x1, x8
   3fdc8:	cinc	x10, x10, cs  // cs = hs, nlast
   3fdcc:	sub	x1, x8, x27
   3fdd0:	cmp	x10, #0x0
   3fdd4:	lsr	x9, x9, #1
   3fdd8:	ccmp	x27, x8, #0x0, eq  // eq = none
   3fddc:	csel	x1, x1, x8, ls  // ls = plast
   3fde0:	cbz	x9, 3fe44 <PyInit__decimal@@Base+0x23c04>
   3fde4:	mul	x11, x1, x1
   3fde8:	umulh	x8, x1, x1
   3fdec:	tbnz	w9, #0, 3fcf8 <PyInit__decimal@@Base+0x23ab8>
   3fdf0:	cbz	x2, 3fd70 <PyInit__decimal@@Base+0x23b30>
   3fdf4:	subs	x1, x11, x8
   3fdf8:	lsr	x10, x8, #32
   3fdfc:	cmp	x11, x8
   3fe00:	lsl	x8, x8, #32
   3fe04:	sbc	x10, x10, xzr
   3fe08:	adds	x8, x1, x8
   3fe0c:	cinc	x10, x10, cs  // cs = hs, nlast
   3fe10:	lsr	x9, x9, #1
   3fe14:	subs	x1, x8, x10
   3fe18:	cmp	x8, x10
   3fe1c:	lsr	x8, x10, #32
   3fe20:	lsl	x10, x10, #32
   3fe24:	sbc	x8, x8, xzr
   3fe28:	adds	x10, x1, x10
   3fe2c:	cinc	x8, x8, cs  // cs = hs, nlast
   3fe30:	sub	x1, x10, x27
   3fe34:	cmp	x8, #0x0
   3fe38:	ccmp	x27, x10, #0x0, eq  // eq = none
   3fe3c:	csel	x1, x1, x10, ls  // ls = plast
   3fe40:	cbnz	x9, 3fde4 <PyInit__decimal@@Base+0x23ba4>
   3fe44:	mul	x8, x0, x0
   3fe48:	umulh	x1, x0, x0
   3fe4c:	subs	x9, x8, x1
   3fe50:	cmp	x8, x1
   3fe54:	cset	x10, cc  // cc = lo, ul, last
   3fe58:	cbnz	x2, 40510 <PyInit__decimal@@Base+0x242d0>
   3fe5c:	cbz	x3, 40554 <PyInit__decimal@@Base+0x24314>
   3fe60:	lsr	x8, x1, #30
   3fe64:	lsl	x1, x1, #34
   3fe68:	adds	x1, x1, x9
   3fe6c:	sub	x8, x8, x10
   3fe70:	cinc	x8, x8, cs  // cs = hs, nlast
   3fe74:	subs	x9, x1, x8
   3fe78:	cmp	x1, x8
   3fe7c:	lsr	x1, x8, #30
   3fe80:	lsl	x8, x8, #34
   3fe84:	sbc	x1, x1, xzr
   3fe88:	adds	x8, x9, x8
   3fe8c:	cinc	x1, x1, cs  // cs = hs, nlast
   3fe90:	subs	x11, x8, x1
   3fe94:	cmp	x8, x1
   3fe98:	lsr	x8, x1, #30
   3fe9c:	lsl	x1, x1, #34
   3fea0:	sbc	x8, x8, xzr
   3fea4:	adds	x1, x11, x1
   3fea8:	cinc	x8, x8, cs  // cs = hs, nlast
   3feac:	sub	x11, x1, x27
   3feb0:	cmp	x8, #0x0
   3feb4:	ccmp	x27, x1, #0x0, eq  // eq = none
   3feb8:	csel	x11, x11, x1, ls  // ls = plast
   3febc:	cbz	x20, 40440 <PyInit__decimal@@Base+0x24200>
   3fec0:	lsl	x10, x4, x25
   3fec4:	add	x12, x10, x5
   3fec8:	mov	x8, #0x1                   	// #1
   3fecc:	add	x10, x23, x10, lsl #3
   3fed0:	add	x12, x7, x12, lsl #3
   3fed4:	b	4008c <PyInit__decimal@@Base+0x23e4c>
   3fed8:	cbz	x3, 40290 <PyInit__decimal@@Base+0x24050>
   3fedc:	lsr	x13, x1, #30
   3fee0:	lsl	x1, x1, #34
   3fee4:	adds	x1, x1, x14
   3fee8:	sub	x13, x13, x15
   3feec:	cinc	x13, x13, cs  // cs = hs, nlast
   3fef0:	mul	x15, x9, x0
   3fef4:	subs	x17, x1, x13
   3fef8:	umulh	x9, x9, x0
   3fefc:	cmp	x1, x13
   3ff00:	lsr	x14, x13, #30
   3ff04:	lsl	x13, x13, #34
   3ff08:	sbc	x14, x14, xzr
   3ff0c:	adds	x17, x17, x13
   3ff10:	lsr	x1, x9, #30
   3ff14:	cinc	x14, x14, cs  // cs = hs, nlast
   3ff18:	lsl	x16, x9, #34
   3ff1c:	subs	x13, x17, x14
   3ff20:	mul	x28, x8, x11
   3ff24:	cmp	x17, x14
   3ff28:	lsr	x17, x14, #30
   3ff2c:	lsl	x14, x14, #34
   3ff30:	sbc	x17, x17, xzr
   3ff34:	adds	x13, x13, x14
   3ff38:	umulh	x8, x8, x11
   3ff3c:	cinc	x17, x17, cs  // cs = hs, nlast
   3ff40:	sub	x18, x13, x27
   3ff44:	cmp	x17, #0x0
   3ff48:	mul	x17, x0, x11
   3ff4c:	ccmp	x27, x13, #0x0, eq  // eq = none
   3ff50:	lsr	x14, x8, #30
   3ff54:	csel	x13, x18, x13, ls  // ls = plast
   3ff58:	subs	x18, x15, x9
   3ff5c:	cmp	x15, x9
   3ff60:	lsl	x30, x8, #34
   3ff64:	sbc	x1, x1, xzr
   3ff68:	adds	x16, x18, x16
   3ff6c:	cinc	x1, x1, cs  // cs = hs, nlast
   3ff70:	umulh	x0, x0, x11
   3ff74:	subs	x9, x16, x1
   3ff78:	cmp	x16, x1
   3ff7c:	lsr	x16, x1, #30
   3ff80:	lsl	x1, x1, #34
   3ff84:	sbc	x16, x16, xzr
   3ff88:	adds	x1, x9, x1
   3ff8c:	lsl	x18, x0, #34
   3ff90:	cinc	x16, x16, cs  // cs = hs, nlast
   3ff94:	lsr	x9, x0, #30
   3ff98:	subs	x15, x1, x16
   3ff9c:	cmp	x1, x16
   3ffa0:	lsr	x1, x16, #30
   3ffa4:	lsl	x16, x16, #34
   3ffa8:	sbc	x1, x1, xzr
   3ffac:	adds	x16, x15, x16
   3ffb0:	cinc	x1, x1, cs  // cs = hs, nlast
   3ffb4:	sub	x15, x16, x27
   3ffb8:	cmp	x1, #0x0
   3ffbc:	ccmp	x27, x16, #0x0, eq  // eq = none
   3ffc0:	csel	x15, x15, x16, ls  // ls = plast
   3ffc4:	subs	x1, x28, x8
   3ffc8:	cmp	x28, x8
   3ffcc:	sbc	x14, x14, xzr
   3ffd0:	adds	x30, x1, x30
   3ffd4:	cinc	x14, x14, cs  // cs = hs, nlast
   3ffd8:	subs	x8, x30, x14
   3ffdc:	cmp	x30, x14
   3ffe0:	lsr	x1, x14, #30
   3ffe4:	lsl	x14, x14, #34
   3ffe8:	sbc	x1, x1, xzr
   3ffec:	adds	x14, x8, x14
   3fff0:	cinc	x1, x1, cs  // cs = hs, nlast
   3fff4:	subs	x8, x14, x1
   3fff8:	cmp	x14, x1
   3fffc:	lsr	x14, x1, #30
   40000:	lsl	x1, x1, #34
   40004:	sbc	x14, x14, xzr
   40008:	adds	x1, x8, x1
   4000c:	cinc	x14, x14, cs  // cs = hs, nlast
   40010:	sub	x8, x1, x27
   40014:	cmp	x14, #0x0
   40018:	ccmp	x27, x1, #0x0, eq  // eq = none
   4001c:	csel	x8, x8, x1, ls  // ls = plast
   40020:	subs	x1, x17, x0
   40024:	cmp	x17, x0
   40028:	sbc	x9, x9, xzr
   4002c:	adds	x18, x1, x18
   40030:	cinc	x9, x9, cs  // cs = hs, nlast
   40034:	subs	x0, x18, x9
   40038:	cmp	x18, x9
   4003c:	lsr	x1, x9, #30
   40040:	lsl	x9, x9, #34
   40044:	sbc	x1, x1, xzr
   40048:	adds	x9, x0, x9
   4004c:	cinc	x1, x1, cs  // cs = hs, nlast
   40050:	subs	x0, x9, x1
   40054:	cmp	x9, x1
   40058:	lsr	x9, x1, #30
   4005c:	lsl	x1, x1, #34
   40060:	sbc	x9, x9, xzr
   40064:	adds	x1, x0, x1
   40068:	cinc	x9, x9, cs  // cs = hs, nlast
   4006c:	stp	x13, x15, [x10]
   40070:	cmp	x9, #0x0
   40074:	ccmp	x27, x1, #0x0, eq  // eq = none
   40078:	sub	x0, x1, x27
   4007c:	add	x10, x10, #0x10
   40080:	csel	x0, x0, x1, ls  // ls = plast
   40084:	cmp	x10, x12
   40088:	b.eq	40440 <PyInit__decimal@@Base+0x24200>  // b.none
   4008c:	ldp	x1, x9, [x10]
   40090:	mul	x13, x8, x1
   40094:	umulh	x1, x8, x1
   40098:	subs	x14, x13, x1
   4009c:	cmp	x13, x1
   400a0:	cset	x15, cc  // cc = lo, ul, last
   400a4:	cbz	x2, 3fed8 <PyInit__decimal@@Base+0x23c98>
   400a8:	lsr	x13, x1, #32
   400ac:	lsl	x1, x1, #32
   400b0:	adds	x1, x1, x14
   400b4:	sub	x13, x13, x15
   400b8:	cinc	x13, x13, cs  // cs = hs, nlast
   400bc:	mul	x14, x9, x0
   400c0:	subs	x15, x1, x13
   400c4:	umulh	x9, x9, x0
   400c8:	cmp	x1, x13
   400cc:	lsr	x16, x13, #32
   400d0:	lsl	x13, x13, #32
   400d4:	sbc	x16, x16, xzr
   400d8:	adds	x13, x15, x13
   400dc:	lsr	x1, x9, #32
   400e0:	cinc	x16, x16, cs  // cs = hs, nlast
   400e4:	sub	x17, x13, x27
   400e8:	cmp	x16, #0x0
   400ec:	lsl	x15, x9, #32
   400f0:	ccmp	x27, x13, #0x0, eq  // eq = none
   400f4:	mul	x16, x8, x11
   400f8:	csel	x13, x17, x13, ls  // ls = plast
   400fc:	subs	x17, x14, x9
   40100:	cmp	x14, x9
   40104:	umulh	x8, x8, x11
   40108:	sbc	x1, x1, xzr
   4010c:	adds	x17, x17, x15
   40110:	cinc	x1, x1, cs  // cs = hs, nlast
   40114:	mul	x14, x0, x11
   40118:	subs	x15, x17, x1
   4011c:	lsr	x9, x8, #32
   40120:	cmp	x17, x1
   40124:	lsr	x17, x1, #32
   40128:	lsl	x1, x1, #32
   4012c:	sbc	x17, x17, xzr
   40130:	adds	x1, x15, x1
   40134:	lsl	x18, x8, #32
   40138:	cinc	x17, x17, cs  // cs = hs, nlast
   4013c:	sub	x15, x1, x27
   40140:	cmp	x17, #0x0
   40144:	umulh	x0, x0, x11
   40148:	ccmp	x27, x1, #0x0, eq  // eq = none
   4014c:	csel	x15, x15, x1, ls  // ls = plast
   40150:	subs	x17, x16, x8
   40154:	cmp	x16, x8
   40158:	lsr	x1, x0, #32
   4015c:	sbc	x9, x9, xzr
   40160:	adds	x17, x17, x18
   40164:	cinc	x9, x9, cs  // cs = hs, nlast
   40168:	lsl	x16, x0, #32
   4016c:	subs	x8, x17, x9
   40170:	cmp	x17, x9
   40174:	lsr	x17, x9, #32
   40178:	lsl	x9, x9, #32
   4017c:	sbc	x17, x17, xzr
   40180:	adds	x9, x8, x9
   40184:	cinc	x17, x17, cs  // cs = hs, nlast
   40188:	sub	x8, x9, x27
   4018c:	cmp	x17, #0x0
   40190:	ccmp	x27, x9, #0x0, eq  // eq = none
   40194:	csel	x8, x8, x9, ls  // ls = plast
   40198:	subs	x9, x14, x0
   4019c:	cmp	x14, x0
   401a0:	sbc	x1, x1, xzr
   401a4:	adds	x9, x9, x16
   401a8:	cinc	x1, x1, cs  // cs = hs, nlast
   401ac:	subs	x0, x9, x1
   401b0:	cmp	x9, x1
   401b4:	lsr	x9, x1, #32
   401b8:	lsl	x1, x1, #32
   401bc:	b	40060 <PyInit__decimal@@Base+0x23e20>
   401c0:	lsr	x1, x8, #24
   401c4:	lsl	x8, x8, #40
   401c8:	adds	x8, x8, x10
   401cc:	sub	x1, x1, x11
   401d0:	cinc	x1, x1, cs  // cs = hs, nlast
   401d4:	subs	x10, x8, x1
   401d8:	cmp	x8, x1
   401dc:	lsr	x8, x1, #24
   401e0:	lsl	x1, x1, #40
   401e4:	sbc	x8, x8, xzr
   401e8:	adds	x10, x10, x1
   401ec:	cinc	x8, x8, cs  // cs = hs, nlast
   401f0:	subs	x1, x10, x8
   401f4:	cmp	x10, x8
   401f8:	lsr	x10, x8, #24
   401fc:	lsl	x8, x8, #40
   40200:	b	3fdc0 <PyInit__decimal@@Base+0x23b80>
   40204:	cmp	x12, x0
   40208:	lsr	x10, x0, #32
   4020c:	lsl	x0, x0, #32
   40210:	sbc	x10, x10, xzr
   40214:	adds	x1, x1, x0
   40218:	cinc	x10, x10, cs  // cs = hs, nlast
   4021c:	subs	x0, x1, x10
   40220:	cmp	x1, x10
   40224:	lsr	x1, x10, #32
   40228:	lsl	x10, x10, #32
   4022c:	sbc	x1, x1, xzr
   40230:	adds	x10, x0, x10
   40234:	cinc	x1, x1, cs  // cs = hs, nlast
   40238:	sub	x0, x10, x27
   4023c:	cmp	x1, #0x0
   40240:	ccmp	x27, x10, #0x0, eq  // eq = none
   40244:	csel	x0, x0, x10, ls  // ls = plast
   40248:	b	3fdf4 <PyInit__decimal@@Base+0x23bb4>
   4024c:	lsr	x10, x0, #24
   40250:	lsl	x0, x0, #40
   40254:	adds	x0, x0, x1
   40258:	sub	x10, x10, x12
   4025c:	cinc	x10, x10, cs  // cs = hs, nlast
   40260:	subs	x12, x0, x10
   40264:	cmp	x0, x10
   40268:	lsr	x1, x10, #24
   4026c:	lsl	x10, x10, #40
   40270:	sbc	x1, x1, xzr
   40274:	adds	x10, x12, x10
   40278:	cinc	x1, x1, cs  // cs = hs, nlast
   4027c:	subs	x0, x10, x1
   40280:	cmp	x10, x1
   40284:	lsr	x10, x1, #24
   40288:	lsl	x1, x1, #40
   4028c:	b	3fd54 <PyInit__decimal@@Base+0x23b14>
   40290:	lsr	x13, x1, #24
   40294:	lsl	x1, x1, #40
   40298:	adds	x1, x1, x14
   4029c:	sub	x13, x13, x15
   402a0:	cinc	x13, x13, cs  // cs = hs, nlast
   402a4:	mul	x14, x0, x9
   402a8:	subs	x17, x1, x13
   402ac:	umulh	x9, x0, x9
   402b0:	cmp	x1, x13
   402b4:	lsr	x16, x13, #24
   402b8:	lsl	x13, x13, #40
   402bc:	sbc	x16, x16, xzr
   402c0:	adds	x17, x17, x13
   402c4:	lsr	x1, x9, #24
   402c8:	cinc	x16, x16, cs  // cs = hs, nlast
   402cc:	lsl	x15, x9, #40
   402d0:	subs	x13, x17, x16
   402d4:	mul	x30, x8, x11
   402d8:	cmp	x17, x16
   402dc:	lsr	x17, x16, #24
   402e0:	lsl	x16, x16, #40
   402e4:	sbc	x17, x17, xzr
   402e8:	adds	x13, x13, x16
   402ec:	umulh	x8, x8, x11
   402f0:	cinc	x17, x17, cs  // cs = hs, nlast
   402f4:	sub	x18, x13, x27
   402f8:	cmp	x17, #0x0
   402fc:	mul	x17, x0, x11
   40300:	ccmp	x27, x13, #0x0, eq  // eq = none
   40304:	lsr	x16, x8, #24
   40308:	csel	x13, x18, x13, ls  // ls = plast
   4030c:	subs	x18, x14, x9
   40310:	cmp	x14, x9
   40314:	lsl	x28, x8, #40
   40318:	sbc	x1, x1, xzr
   4031c:	adds	x15, x18, x15
   40320:	cinc	x1, x1, cs  // cs = hs, nlast
   40324:	umulh	x0, x0, x11
   40328:	subs	x14, x15, x1
   4032c:	cmp	x15, x1
   40330:	lsr	x9, x1, #24
   40334:	lsl	x1, x1, #40
   40338:	sbc	x9, x9, xzr
   4033c:	adds	x1, x14, x1
   40340:	lsl	x18, x0, #40
   40344:	cinc	x9, x9, cs  // cs = hs, nlast
   40348:	lsr	x14, x0, #24
   4034c:	subs	x15, x1, x9
   40350:	cmp	x1, x9
   40354:	lsr	x1, x9, #24
   40358:	lsl	x9, x9, #40
   4035c:	sbc	x1, x1, xzr
   40360:	adds	x9, x15, x9
   40364:	cinc	x1, x1, cs  // cs = hs, nlast
   40368:	sub	x15, x9, x27
   4036c:	cmp	x1, #0x0
   40370:	ccmp	x27, x9, #0x0, eq  // eq = none
   40374:	csel	x15, x15, x9, ls  // ls = plast
   40378:	subs	x1, x30, x8
   4037c:	cmp	x30, x8
   40380:	stp	x13, x15, [x10]
   40384:	sbc	x16, x16, xzr
   40388:	adds	x28, x1, x28
   4038c:	add	x10, x10, #0x10
   40390:	cinc	x16, x16, cs  // cs = hs, nlast
   40394:	subs	x8, x28, x16
   40398:	cmp	x28, x16
   4039c:	lsr	x1, x16, #24
   403a0:	lsl	x16, x16, #40
   403a4:	sbc	x1, x1, xzr
   403a8:	adds	x16, x8, x16
   403ac:	cinc	x1, x1, cs  // cs = hs, nlast
   403b0:	subs	x8, x16, x1
   403b4:	cmp	x16, x1
   403b8:	lsr	x9, x1, #24
   403bc:	lsl	x1, x1, #40
   403c0:	sbc	x9, x9, xzr
   403c4:	adds	x1, x8, x1
   403c8:	cinc	x9, x9, cs  // cs = hs, nlast
   403cc:	sub	x8, x1, x27
   403d0:	cmp	x9, #0x0
   403d4:	ccmp	x27, x1, #0x0, eq  // eq = none
   403d8:	csel	x8, x8, x1, ls  // ls = plast
   403dc:	subs	x1, x17, x0
   403e0:	cmp	x17, x0
   403e4:	sbc	x14, x14, xzr
   403e8:	adds	x18, x1, x18
   403ec:	cinc	x14, x14, cs  // cs = hs, nlast
   403f0:	subs	x0, x18, x14
   403f4:	cmp	x18, x14
   403f8:	lsr	x9, x14, #24
   403fc:	lsl	x14, x14, #40
   40400:	sbc	x9, x9, xzr
   40404:	adds	x14, x0, x14
   40408:	cinc	x9, x9, cs  // cs = hs, nlast
   4040c:	subs	x0, x14, x9
   40410:	cmp	x14, x9
   40414:	lsr	x1, x9, #24
   40418:	lsl	x9, x9, #40
   4041c:	sbc	x1, x1, xzr
   40420:	adds	x9, x0, x9
   40424:	cinc	x1, x1, cs  // cs = hs, nlast
   40428:	sub	x0, x9, x27
   4042c:	cmp	x1, #0x0
   40430:	ccmp	x27, x9, #0x0, eq  // eq = none
   40434:	csel	x0, x0, x9, ls  // ls = plast
   40438:	cmp	x10, x12
   4043c:	b.ne	4008c <PyInit__decimal@@Base+0x23e4c>  // b.any
   40440:	add	x4, x4, #0x1
   40444:	cmp	x19, x4
   40448:	b.ne	3fce8 <PyInit__decimal@@Base+0x23aa8>  // b.any
   4044c:	mov	x2, x20
   40450:	mov	x1, x19
   40454:	mov	x0, x23
   40458:	bl	40d30 <PyInit__decimal@@Base+0x24af0>
   4045c:	str	w0, [sp, #96]
   40460:	mov	w25, w0
   40464:	cbz	w25, 405a8 <PyInit__decimal@@Base+0x24368>
   40468:	cmp	x20, x19
   4046c:	adrp	x27, 65000 <PyInit__decimal@@Base+0x48dc0>
   40470:	b.eq	40498 <PyInit__decimal@@Base+0x24258>  // b.none
   40474:	ldr	x1, [x27, #1912]
   40478:	mov	x0, x21
   4047c:	blr	x1
   40480:	mov	w2, w26
   40484:	mov	x0, x19
   40488:	mov	w1, #0x1                   	// #1
   4048c:	bl	3ed00 <PyInit__decimal@@Base+0x22ac0>
   40490:	mov	x21, x0
   40494:	cbz	x0, 405d8 <PyInit__decimal@@Base+0x24398>
   40498:	cmp	x23, x24
   4049c:	b.cs	404cc <PyInit__decimal@@Base+0x2428c>  // b.hs, b.nlast
   404a0:	ldrb	w1, [sp, #108]
   404a4:	mov	x0, #0x8                   	// #8
   404a8:	mov	x25, x23
   404ac:	lsl	x22, x0, x1
   404b0:	mov	x0, x25
   404b4:	mov	x2, x21
   404b8:	mov	x1, x19
   404bc:	add	x25, x25, x22
   404c0:	bl	211b8 <PyInit__decimal@@Base+0x4f78>
   404c4:	cmp	x25, x24
   404c8:	b.cc	404b0 <PyInit__decimal@@Base+0x24270>  // b.lo, b.ul, b.last
   404cc:	ldr	x1, [x27, #1912]
   404d0:	mov	x0, x21
   404d4:	blr	x1
   404d8:	mov	x2, x19
   404dc:	mov	x1, x20
   404e0:	mov	x0, x23
   404e4:	bl	40d30 <PyInit__decimal@@Base+0x24af0>
   404e8:	cmp	w0, #0x0
   404ec:	cset	w25, ne  // ne = any
   404f0:	mov	w0, w25
   404f4:	ldp	x19, x20, [sp, #16]
   404f8:	ldp	x21, x22, [sp, #32]
   404fc:	ldp	x23, x24, [sp, #48]
   40500:	ldp	x25, x26, [sp, #64]
   40504:	ldp	x27, x28, [sp, #80]
   40508:	ldp	x29, x30, [sp], #112
   4050c:	ret
   40510:	lsr	x8, x1, #32
   40514:	lsl	x1, x1, #32
   40518:	adds	x1, x1, x9
   4051c:	sub	x8, x8, x10
   40520:	cinc	x8, x8, cs  // cs = hs, nlast
   40524:	subs	x11, x1, x8
   40528:	cmp	x1, x8
   4052c:	lsr	x1, x8, #32
   40530:	lsl	x8, x8, #32
   40534:	sbc	x1, x1, xzr
   40538:	adds	x8, x11, x8
   4053c:	cinc	x1, x1, cs  // cs = hs, nlast
   40540:	sub	x11, x8, x27
   40544:	cmp	x1, #0x0
   40548:	ccmp	x27, x8, #0x0, eq  // eq = none
   4054c:	csel	x11, x11, x8, ls  // ls = plast
   40550:	b	3febc <PyInit__decimal@@Base+0x23c7c>
   40554:	lsr	x8, x1, #24
   40558:	lsl	x1, x1, #40
   4055c:	adds	x1, x1, x9
   40560:	sub	x8, x8, x10
   40564:	cinc	x8, x8, cs  // cs = hs, nlast
   40568:	subs	x9, x1, x8
   4056c:	cmp	x1, x8
   40570:	lsr	x1, x8, #24
   40574:	lsl	x8, x8, #40
   40578:	sbc	x1, x1, xzr
   4057c:	adds	x8, x9, x8
   40580:	cinc	x1, x1, cs  // cs = hs, nlast
   40584:	subs	x11, x8, x1
   40588:	cmp	x8, x1
   4058c:	lsr	x8, x1, #24
   40590:	lsl	x1, x1, #40
   40594:	b	3fea0 <PyInit__decimal@@Base+0x23c60>
   40598:	mov	x2, x1
   4059c:	mov	w3, #0x0                   	// #0
   405a0:	mov	w1, #0x10                  	// #16
   405a4:	b	3fbd4 <PyInit__decimal@@Base+0x23994>
   405a8:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   405ac:	mov	x0, x21
   405b0:	ldr	x1, [x1, #1912]
   405b4:	blr	x1
   405b8:	mov	w0, w25
   405bc:	ldp	x19, x20, [sp, #16]
   405c0:	ldp	x21, x22, [sp, #32]
   405c4:	ldp	x23, x24, [sp, #48]
   405c8:	ldp	x25, x26, [sp, #64]
   405cc:	ldp	x27, x28, [sp, #80]
   405d0:	ldp	x29, x30, [sp], #112
   405d4:	ret
   405d8:	mov	w25, #0x0                   	// #0
   405dc:	mov	w0, w25
   405e0:	ldp	x19, x20, [sp, #16]
   405e4:	ldp	x21, x22, [sp, #32]
   405e8:	ldp	x23, x24, [sp, #48]
   405ec:	ldp	x25, x26, [sp, #64]
   405f0:	ldp	x27, x28, [sp, #80]
   405f4:	ldp	x29, x30, [sp], #112
   405f8:	ret
   405fc:	nop
   40600:	sub	sp, sp, #0xf0
   40604:	cmp	w3, #0x0
   40608:	sub	sp, sp, #0x10, lsl #12
   4060c:	stp	x29, x30, [sp]
   40610:	mov	x29, sp
   40614:	stp	x0, x2, [sp, #112]
   40618:	mov	x2, #0x2                   	// #2
   4061c:	stp	x19, x20, [sp, #16]
   40620:	mov	x19, x1
   40624:	str	x1, [sp, #208]
   40628:	lsr	x1, x1, #3
   4062c:	add	x0, x1, #0x1
   40630:	mov	x1, #0x8                   	// #8
   40634:	stp	x25, x26, [sp, #64]
   40638:	csel	x25, x19, x2, eq  // eq = none
   4063c:	bl	282a0 <PyInit__decimal@@Base+0xc060>
   40640:	cbz	x0, 408c4 <PyInit__decimal@@Base+0x24684>
   40644:	stp	x27, x28, [sp, #80]
   40648:	mov	x28, x0
   4064c:	cbz	x19, 40888 <PyInit__decimal@@Base+0x24648>
   40650:	ldr	x1, [sp, #120]
   40654:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   40658:	add	x0, x0, #0x220
   4065c:	str	x0, [sp, #128]
   40660:	mov	x27, #0x1                   	// #1
   40664:	stp	x21, x22, [sp, #32]
   40668:	lsr	x0, x1, #1
   4066c:	str	x0, [sp, #152]
   40670:	lsl	x0, x1, #1
   40674:	str	x0, [sp, #216]
   40678:	mov	x0, #0x80f0                	// #33008
   4067c:	add	x0, sp, x0
   40680:	stp	x23, x24, [sp, #48]
   40684:	sub	x24, x1, #0x1
   40688:	str	x1, [sp, #200]
   4068c:	str	x0, [sp, #224]
   40690:	add	x0, sp, #0xf0
   40694:	str	x0, [sp, #232]
   40698:	b	406bc <PyInit__decimal@@Base+0x2447c>
   4069c:	ldr	x0, [sp, #200]
   406a0:	add	x27, x27, #0x2
   406a4:	ldr	x1, [sp, #216]
   406a8:	add	x0, x0, x1
   406ac:	str	x0, [sp, #200]
   406b0:	ldr	x0, [sp, #208]
   406b4:	cmp	x0, x27
   406b8:	b.cc	40880 <PyInit__decimal@@Base+0x24640>  // b.lo, b.ul, b.last
   406bc:	lsr	x0, x27, #6
   406c0:	and	x1, x27, #0x3f
   406c4:	add	x2, x28, x0, lsl #3
   406c8:	str	x2, [sp, #160]
   406cc:	ldr	x2, [sp, #128]
   406d0:	ldr	x0, [x28, x0, lsl #3]
   406d4:	ldr	x1, [x2, x1, lsl #3]
   406d8:	str	x1, [sp, #168]
   406dc:	ands	x0, x1, x0
   406e0:	str	x0, [sp, #136]
   406e4:	b.ne	4069c <PyInit__decimal@@Base+0x2445c>  // b.any
   406e8:	ldr	x1, [sp, #152]
   406ec:	cbz	x1, 4069c <PyInit__decimal@@Base+0x2445c>
   406f0:	mul	x2, x25, x27
   406f4:	str	x27, [sp, #104]
   406f8:	ldr	x0, [sp, #200]
   406fc:	str	x2, [sp, #184]
   40700:	umulh	x2, x25, x27
   40704:	str	x2, [sp, #192]
   40708:	ldr	x2, [sp, #112]
   4070c:	lsr	x0, x0, #1
   40710:	ldp	x20, x19, [sp, #224]
   40714:	add	x1, x0, x1
   40718:	add	x0, x2, x0, lsl #3
   4071c:	str	x0, [sp, #144]
   40720:	add	x0, x2, x1, lsl #3
   40724:	str	x0, [sp, #176]
   40728:	ldp	x0, x1, [sp, #136]
   4072c:	ldr	x2, [sp, #176]
   40730:	sub	x21, x2, x1
   40734:	add	x0, x0, #0x1, lsl #12
   40738:	ldr	x2, [sp, #152]
   4073c:	lsl	x23, x0, #3
   40740:	str	x0, [sp, #136]
   40744:	sub	x23, x23, #0x8, lsl #12
   40748:	cmp	x0, x2
   4074c:	mov	x2, #0x8000                	// #32768
   40750:	csel	x21, x21, x2, cs  // cs = hs, nlast
   40754:	mov	x0, x19
   40758:	mov	x2, x21
   4075c:	bl	6470 <memcpy@plt>
   40760:	ldp	x22, x1, [sp, #184]
   40764:	mov	x2, x24
   40768:	mov	x3, #0x0                   	// #0
   4076c:	mov	x0, x22
   40770:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   40774:	msub	x26, x24, x0, x22
   40778:	mov	x1, x19
   4077c:	ldp	x0, x2, [sp, #104]
   40780:	cmp	x26, x0
   40784:	ldr	x0, [sp, #120]
   40788:	mul	x0, x0, x26
   4078c:	lsr	x0, x0, #1
   40790:	add	x0, x2, x0, lsl #3
   40794:	b.ne	407a4 <PyInit__decimal@@Base+0x24564>  // b.any
   40798:	b	408b8 <PyInit__decimal@@Base+0x24678>
   4079c:	mov	x20, x19
   407a0:	mov	x19, x22
   407a4:	add	x22, x0, x23
   407a8:	mov	x2, x21
   407ac:	mov	x1, x22
   407b0:	mov	x0, x20
   407b4:	bl	6470 <memcpy@plt>
   407b8:	mul	x27, x25, x26
   407bc:	mov	x2, x21
   407c0:	mov	x1, x19
   407c4:	mov	x0, x22
   407c8:	bl	6470 <memcpy@plt>
   407cc:	ldr	x4, [sp, #128]
   407d0:	lsr	x5, x26, #6
   407d4:	and	x0, x26, #0x3f
   407d8:	umulh	x1, x25, x26
   407dc:	mov	x2, x24
   407e0:	mov	x22, x20
   407e4:	ldr	x3, [x28, x5, lsl #3]
   407e8:	ldr	x6, [x4, x0, lsl #3]
   407ec:	mov	x0, x27
   407f0:	orr	x3, x3, x6
   407f4:	str	x3, [x28, x5, lsl #3]
   407f8:	mov	x3, #0x0                   	// #0
   407fc:	bl	41188 <PyInit__decimal@@Base+0x24f48>
   40800:	msub	x26, x24, x0, x27
   40804:	ldp	x0, x1, [sp, #104]
   40808:	cmp	x26, x0
   4080c:	ldr	x0, [sp, #120]
   40810:	mul	x0, x0, x26
   40814:	lsr	x0, x0, #1
   40818:	add	x0, x1, x0, lsl #3
   4081c:	b.ne	4079c <PyInit__decimal@@Base+0x2455c>  // b.any
   40820:	mov	x2, x21
   40824:	mov	x1, x20
   40828:	add	x0, x0, x23
   4082c:	bl	6470 <memcpy@plt>
   40830:	ldp	x2, x3, [sp, #144]
   40834:	ldr	x1, [sp, #160]
   40838:	add	x2, x2, #0x8, lsl #12
   4083c:	str	x2, [sp, #144]
   40840:	ldr	x2, [sp, #136]
   40844:	ldr	x0, [x1]
   40848:	cmp	x2, x3
   4084c:	ldr	x2, [sp, #168]
   40850:	orr	x0, x0, x2
   40854:	str	x0, [x1]
   40858:	b.cc	40728 <PyInit__decimal@@Base+0x244e8>  // b.lo, b.ul, b.last
   4085c:	ldr	x0, [sp, #200]
   40860:	ldr	x1, [sp, #216]
   40864:	ldr	x27, [sp, #104]
   40868:	add	x0, x0, x1
   4086c:	str	x0, [sp, #200]
   40870:	ldr	x0, [sp, #208]
   40874:	add	x27, x27, #0x2
   40878:	cmp	x0, x27
   4087c:	b.cs	406bc <PyInit__decimal@@Base+0x2447c>  // b.hs, b.nlast
   40880:	ldp	x21, x22, [sp, #32]
   40884:	ldp	x23, x24, [sp, #48]
   40888:	adrp	x1, 65000 <PyInit__decimal@@Base+0x48dc0>
   4088c:	mov	x0, x28
   40890:	ldr	x1, [x1, #1912]
   40894:	blr	x1
   40898:	ldp	x29, x30, [sp]
   4089c:	mov	w0, #0x1                   	// #1
   408a0:	ldp	x19, x20, [sp, #16]
   408a4:	ldp	x25, x26, [sp, #64]
   408a8:	ldp	x27, x28, [sp, #80]
   408ac:	add	sp, sp, #0xf0
   408b0:	add	sp, sp, #0x10, lsl #12
   408b4:	ret
   408b8:	mov	x19, x20
   408bc:	mov	x20, x1
   408c0:	b	40820 <PyInit__decimal@@Base+0x245e0>
   408c4:	ldp	x29, x30, [sp]
   408c8:	mov	w0, #0x0                   	// #0
   408cc:	ldp	x19, x20, [sp, #16]
   408d0:	ldp	x25, x26, [sp, #64]
   408d4:	add	sp, sp, #0xf0
   408d8:	add	sp, sp, #0x10, lsl #12
   408dc:	ret
   408e0:	stp	x29, x30, [sp, #-32]!
   408e4:	mov	w3, #0x26c                 	// #620
   408e8:	adrp	x2, 48000 <PyInit__decimal@@Base+0x2bdc0>
   408ec:	mov	x29, sp
   408f0:	str	x19, [sp, #16]
   408f4:	adrp	x19, 62000 <PyInit__decimal@@Base+0x45dc0>
   408f8:	add	x2, x2, #0x40
   408fc:	adrp	x1, 48000 <PyInit__decimal@@Base+0x2bdc0>
   40900:	ldr	x19, [x19, #3904]
   40904:	add	x1, x1, #0x80
   40908:	ldr	x0, [x19]
   4090c:	bl	6a70 <fprintf@plt>
   40910:	ldr	x3, [x19]
   40914:	mov	x2, #0x29                  	// #41
   40918:	mov	x1, #0x1                   	// #1
   4091c:	adrp	x0, 48000 <PyInit__decimal@@Base+0x2bdc0>
   40920:	add	x0, x0, #0x720
   40924:	bl	6930 <fwrite@plt>
   40928:	ldr	x1, [x19]
   4092c:	mov	w0, #0xa                   	// #10
   40930:	bl	65b0 <fputc@plt>
   40934:	bl	67c0 <abort@plt>
   40938:	sub	sp, sp, #0xb0
   4093c:	cmp	x1, #0x80
   40940:	sub	sp, sp, #0x40, lsl #12
   40944:	stp	x29, x30, [sp]
   40948:	mov	x29, sp
   4094c:	stp	x23, x24, [sp, #48]
   40950:	mov	x23, x1
   40954:	str	x1, [sp, #144]
   40958:	b.ls	40c48 <PyInit__decimal@@Base+0x24a08>  // b.plast
   4095c:	stp	x19, x20, [sp, #16]
   40960:	stp	x21, x22, [sp, #32]
   40964:	stp	x25, x26, [sp, #64]
   40968:	stp	x27, x28, [sp, #80]
   4096c:	nop
   40970:	lsr	x23, x23, #1
   40974:	cmp	x23, #0x80
   40978:	b.hi	40970 <PyInit__decimal@@Base+0x24730>  // b.pmore
   4097c:	ldr	x1, [sp, #144]
   40980:	lsl	x28, x23, #3
   40984:	add	x24, x28, #0x8
   40988:	add	x25, sp, #0xb0
   4098c:	lsl	x20, x1, #3
   40990:	mov	x1, x0
   40994:	add	x0, x20, #0x8
   40998:	stp	xzr, x1, [sp, #128]
   4099c:	mul	x0, x0, x23
   409a0:	stp	x1, x0, [sp, #160]
   409a4:	mul	x1, x20, x23
   409a8:	add	x0, sp, #0x20, lsl #12
   409ac:	add	x0, x0, #0xb0
   409b0:	str	x0, [sp, #104]
   409b4:	str	x1, [sp, #152]
   409b8:	ldr	x0, [sp, #160]
   409bc:	str	x0, [sp, #120]
   409c0:	ldr	x0, [sp, #128]
   409c4:	str	x0, [sp, #112]
   409c8:	ldr	x0, [sp, #112]
   409cc:	mov	x3, x25
   409d0:	ldr	x1, [sp, #136]
   409d4:	mov	x19, #0x0                   	// #0
   409d8:	add	x21, x1, x0, lsl #3
   409dc:	mov	x22, x21
   409e0:	mov	x1, x22
   409e4:	mov	x0, x3
   409e8:	mov	x2, x28
   409ec:	mov	x26, x19
   409f0:	bl	6470 <memcpy@plt>
   409f4:	add	x19, x19, #0x1
   409f8:	add	x22, x22, x20
   409fc:	add	x3, x0, x28
   40a00:	cmp	x23, x19
   40a04:	b.ne	409e0 <PyInit__decimal@@Base+0x247a0>  // b.any
   40a08:	cmp	x23, #0x1
   40a0c:	b.eq	40a70 <PyInit__decimal@@Base+0x24830>  // b.none
   40a10:	mov	x6, #0x1                   	// #1
   40a14:	add	x7, x25, #0x8
   40a18:	mov	x1, x6
   40a1c:	mov	x0, x23
   40a20:	add	x10, x26, #0x2
   40a24:	nop
   40a28:	add	x0, x25, x0, lsl #3
   40a2c:	mov	x4, x7
   40a30:	mov	x3, x1
   40a34:	nop
   40a38:	ldr	x9, [x0]
   40a3c:	add	x3, x3, #0x1
   40a40:	ldr	x8, [x4]
   40a44:	str	x9, [x4], #8
   40a48:	str	x8, [x0]
   40a4c:	cmp	x19, x3
   40a50:	add	x0, x0, x28
   40a54:	b.hi	40a38 <PyInit__decimal@@Base+0x247f8>  // b.pmore
   40a58:	add	x6, x6, x10
   40a5c:	cmp	x1, x26
   40a60:	add	x7, x7, x24
   40a64:	add	x1, x1, #0x1
   40a68:	add	x0, x6, x26
   40a6c:	b.ne	40a28 <PyInit__decimal@@Base+0x247e8>  // b.any
   40a70:	ldr	x1, [sp, #112]
   40a74:	ldr	x0, [sp, #128]
   40a78:	cmp	x0, x1
   40a7c:	b.eq	40bf4 <PyInit__decimal@@Base+0x249b4>  // b.none
   40a80:	ldr	x26, [sp, #120]
   40a84:	mov	x27, #0x0                   	// #0
   40a88:	ldr	x4, [sp, #104]
   40a8c:	mov	x22, x26
   40a90:	mov	x1, x26
   40a94:	mov	x0, x4
   40a98:	mov	x2, x28
   40a9c:	mov	x19, x27
   40aa0:	bl	6470 <memcpy@plt>
   40aa4:	add	x27, x27, #0x1
   40aa8:	add	x26, x26, x20
   40aac:	add	x4, x0, x28
   40ab0:	cmp	x23, x27
   40ab4:	b.ne	40a90 <PyInit__decimal@@Base+0x24850>  // b.any
   40ab8:	cmp	x23, #0x1
   40abc:	b.eq	40b20 <PyInit__decimal@@Base+0x248e0>  // b.none
   40ac0:	ldr	x0, [sp, #104]
   40ac4:	mov	x6, #0x1                   	// #1
   40ac8:	add	x10, x19, #0x2
   40acc:	mov	x1, x6
   40ad0:	add	x9, x0, #0x8
   40ad4:	mov	x0, x23
   40ad8:	ldr	x2, [sp, #104]
   40adc:	mov	x5, x9
   40ae0:	mov	x4, x1
   40ae4:	add	x0, x2, x0, lsl #3
   40ae8:	ldr	x8, [x0]
   40aec:	add	x4, x4, #0x1
   40af0:	ldr	x7, [x5]
   40af4:	str	x8, [x5], #8
   40af8:	str	x7, [x0]
   40afc:	cmp	x27, x4
   40b00:	add	x0, x0, x28
   40b04:	b.hi	40ae8 <PyInit__decimal@@Base+0x248a8>  // b.pmore
   40b08:	add	x6, x6, x10
   40b0c:	cmp	x1, x19
   40b10:	add	x9, x9, x24
   40b14:	add	x1, x1, #0x1
   40b18:	add	x0, x6, x19
   40b1c:	b.ne	40ad8 <PyInit__decimal@@Base+0x24898>  // b.any
   40b20:	mov	x27, x25
   40b24:	mov	x26, #0x0                   	// #0
   40b28:	mov	x1, x27
   40b2c:	mov	x0, x22
   40b30:	mov	x2, x28
   40b34:	bl	6470 <memcpy@plt>
   40b38:	cmp	x26, x19
   40b3c:	add	x27, x27, x28
   40b40:	add	x22, x22, x20
   40b44:	add	x26, x26, #0x1
   40b48:	b.ne	40b28 <PyInit__decimal@@Base+0x248e8>  // b.any
   40b4c:	ldr	x26, [sp, #104]
   40b50:	mov	x22, #0x0                   	// #0
   40b54:	nop
   40b58:	mov	x1, x26
   40b5c:	mov	x0, x21
   40b60:	mov	x2, x28
   40b64:	bl	6470 <memcpy@plt>
   40b68:	cmp	x22, x19
   40b6c:	add	x26, x26, x28
   40b70:	add	x21, x21, x20
   40b74:	add	x22, x22, #0x1
   40b78:	b.ne	40b58 <PyInit__decimal@@Base+0x24918>  // b.any
   40b7c:	ldp	x0, x1, [sp, #112]
   40b80:	ldr	x2, [sp, #152]
   40b84:	add	x1, x1, x2
   40b88:	add	x0, x0, x23
   40b8c:	stp	x0, x1, [sp, #112]
   40b90:	ldr	x1, [sp, #144]
   40b94:	cmp	x1, x0
   40b98:	b.hi	409c8 <PyInit__decimal@@Base+0x24788>  // b.pmore
   40b9c:	ldp	x1, x2, [sp, #160]
   40ba0:	ldr	x0, [sp, #128]
   40ba4:	add	x0, x0, x23
   40ba8:	str	x0, [sp, #128]
   40bac:	add	x1, x1, x2
   40bb0:	str	x1, [sp, #160]
   40bb4:	ldr	x1, [sp, #144]
   40bb8:	cmp	x1, x0
   40bbc:	ldr	x0, [sp, #136]
   40bc0:	ldr	x1, [sp, #152]
   40bc4:	add	x0, x0, x1
   40bc8:	str	x0, [sp, #136]
   40bcc:	b.hi	409b8 <PyInit__decimal@@Base+0x24778>  // b.pmore
   40bd0:	ldp	x19, x20, [sp, #16]
   40bd4:	ldp	x21, x22, [sp, #32]
   40bd8:	ldp	x25, x26, [sp, #64]
   40bdc:	ldp	x27, x28, [sp, #80]
   40be0:	ldp	x29, x30, [sp]
   40be4:	ldp	x23, x24, [sp, #48]
   40be8:	add	sp, sp, #0xb0
   40bec:	add	sp, sp, #0x40, lsl #12
   40bf0:	ret
   40bf4:	mov	x22, x25
   40bf8:	mov	x19, #0x0                   	// #0
   40bfc:	nop
   40c00:	mov	x1, x22
   40c04:	mov	x0, x21
   40c08:	mov	x2, x28
   40c0c:	bl	6470 <memcpy@plt>
   40c10:	cmp	x26, x19
   40c14:	add	x22, x22, x28
   40c18:	add	x21, x21, x20
   40c1c:	add	x19, x19, #0x1
   40c20:	b.ne	40c00 <PyInit__decimal@@Base+0x249c0>  // b.any
   40c24:	ldp	x0, x1, [sp, #112]
   40c28:	ldr	x2, [sp, #152]
   40c2c:	add	x1, x1, x2
   40c30:	add	x0, x0, x23
   40c34:	stp	x0, x1, [sp, #112]
   40c38:	ldr	x1, [sp, #144]
   40c3c:	cmp	x1, x0
   40c40:	b.hi	409c8 <PyInit__decimal@@Base+0x24788>  // b.pmore
   40c44:	b	40b9c <PyInit__decimal@@Base+0x2495c>
   40c48:	cbz	x1, 40be0 <PyInit__decimal@@Base+0x249a0>
   40c4c:	stp	x19, x20, [sp, #16]
   40c50:	stp	x21, x22, [sp, #32]
   40c54:	stp	x25, x26, [sp, #64]
   40c58:	stp	x27, x28, [sp, #80]
   40c5c:	b	4097c <PyInit__decimal@@Base+0x2473c>
   40c60:	cbz	x2, 40cbc <PyInit__decimal@@Base+0x24a7c>
   40c64:	cbz	x3, 40cbc <PyInit__decimal@@Base+0x24a7c>
   40c68:	cmp	x2, #0x1
   40c6c:	b.ne	40ce0 <PyInit__decimal@@Base+0x24aa0>  // b.any
   40c70:	add	x2, x1, #0xf
   40c74:	sub	x4, x3, #0x1
   40c78:	sub	x2, x2, x0
   40c7c:	cmp	x2, #0x1e
   40c80:	ccmp	x4, #0x9, #0x0, hi  // hi = pmore
   40c84:	b.ls	40cc0 <PyInit__decimal@@Base+0x24a80>  // b.plast
   40c88:	lsr	x4, x3, #1
   40c8c:	mov	x2, #0x0                   	// #0
   40c90:	lsl	x4, x4, #4
   40c94:	nop
   40c98:	ldr	q0, [x1, x2]
   40c9c:	str	q0, [x0, x2]
   40ca0:	add	x2, x2, #0x10
   40ca4:	cmp	x4, x2
   40ca8:	b.ne	40c98 <PyInit__decimal@@Base+0x24a58>  // b.any
   40cac:	and	x2, x3, #0xfffffffffffffffe
   40cb0:	tbz	w3, #0, 40cbc <PyInit__decimal@@Base+0x24a7c>
   40cb4:	ldr	x1, [x1, x2, lsl #3]
   40cb8:	str	x1, [x0, x2, lsl #3]
   40cbc:	ret
   40cc0:	mov	x2, #0x0                   	// #0
   40cc4:	nop
   40cc8:	ldr	x4, [x1, x2, lsl #3]
   40ccc:	str	x4, [x0, x2, lsl #3]
   40cd0:	add	x2, x2, #0x1
   40cd4:	cmp	x3, x2
   40cd8:	b.ne	40cc8 <PyInit__decimal@@Base+0x24a88>  // b.any
   40cdc:	ret
   40ce0:	lsl	x8, x2, #3
   40ce4:	mov	x7, x3
   40ce8:	mov	x10, #0x0                   	// #0
   40cec:	mov	x9, #0x0                   	// #0
   40cf0:	mov	x5, x0
   40cf4:	mov	x4, x10
   40cf8:	ldr	x6, [x1, x4, lsl #3]
   40cfc:	str	x6, [x5]
   40d00:	add	x4, x4, #0x1
   40d04:	add	x5, x5, x8
   40d08:	cmp	x4, x7
   40d0c:	b.ne	40cf8 <PyInit__decimal@@Base+0x24ab8>  // b.any
   40d10:	add	x9, x9, #0x1
   40d14:	add	x10, x10, x3
   40d18:	cmp	x2, x9
   40d1c:	add	x0, x0, #0x8
   40d20:	add	x7, x7, x3
   40d24:	b.ne	40cf0 <PyInit__decimal@@Base+0x24ab0>  // b.any
   40d28:	ret
   40d2c:	nop
   40d30:	stp	x29, x30, [sp, #-48]!
   40d34:	umulh	x3, x1, x2
   40d38:	mov	x29, sp
   40d3c:	stp	x19, x20, [sp, #16]
   40d40:	stp	x21, x22, [sp, #32]
   40d44:	mul	x22, x1, x2
   40d48:	cbnz	x3, 40e00 <PyInit__decimal@@Base+0x24bc0>
   40d4c:	mov	x20, x1
   40d50:	mov	x19, x2
   40d54:	cmp	x1, x2
   40d58:	b.eq	40de8 <PyInit__decimal@@Base+0x24ba8>  // b.none
   40d5c:	lsl	x3, x1, #1
   40d60:	tbnz	x1, #63, 40e00 <PyInit__decimal@@Base+0x24bc0>
   40d64:	mov	x21, x0
   40d68:	cmp	x2, x3
   40d6c:	b.eq	40dc4 <PyInit__decimal@@Base+0x24b84>  // b.none
   40d70:	lsl	x1, x2, #1
   40d74:	tbnz	x2, #63, 40e00 <PyInit__decimal@@Base+0x24bc0>
   40d78:	cmp	x20, x1
   40d7c:	b.ne	40e04 <PyInit__decimal@@Base+0x24bc4>  // b.any
   40d80:	mov	x1, x2
   40d84:	bl	40938 <PyInit__decimal@@Base+0x246f8>
   40d88:	lsr	x0, x22, #1
   40d8c:	mov	x1, x19
   40d90:	add	x0, x21, x0, lsl #3
   40d94:	bl	40938 <PyInit__decimal@@Base+0x246f8>
   40d98:	mov	x2, x20
   40d9c:	mov	x1, x19
   40da0:	mov	x0, x21
   40da4:	mov	w3, #0x1                   	// #1
   40da8:	bl	40600 <PyInit__decimal@@Base+0x243c0>
   40dac:	cmp	w0, #0x0
   40db0:	cset	w0, ne  // ne = any
   40db4:	ldp	x19, x20, [sp, #16]
   40db8:	ldp	x21, x22, [sp, #32]
   40dbc:	ldp	x29, x30, [sp], #48
   40dc0:	ret
   40dc4:	mov	w3, #0x0                   	// #0
   40dc8:	bl	40600 <PyInit__decimal@@Base+0x243c0>
   40dcc:	cbz	w0, 40db4 <PyInit__decimal@@Base+0x24b74>
   40dd0:	mov	x1, x20
   40dd4:	mov	x0, x21
   40dd8:	bl	40938 <PyInit__decimal@@Base+0x246f8>
   40ddc:	lsr	x0, x22, #1
   40de0:	mov	x1, x20
   40de4:	add	x0, x21, x0, lsl #3
   40de8:	bl	40938 <PyInit__decimal@@Base+0x246f8>
   40dec:	mov	w0, #0x1                   	// #1
   40df0:	ldp	x19, x20, [sp, #16]
   40df4:	ldp	x21, x22, [sp, #32]
   40df8:	ldp	x29, x30, [sp], #48
   40dfc:	ret
   40e00:	bl	408e0 <PyInit__decimal@@Base+0x246a0>
   40e04:	bl	67c0 <abort@plt>
   40e08:	mov	x4, #0xffffffffffffffff    	// #-1
   40e0c:	mov	x6, #0x0                   	// #0
   40e10:	tbnz	x1, #63, 40ef0 <PyInit__decimal@@Base+0x24cb0>
   40e14:	tbz	x3, #63, 40e24 <PyInit__decimal@@Base+0x24be4>
   40e18:	negs	x2, x2
   40e1c:	mov	x6, x4
   40e20:	ngc	x3, x3
   40e24:	mov	x4, x2
   40e28:	mov	x7, x0
   40e2c:	mov	x5, x1
   40e30:	cbnz	x3, 40edc <PyInit__decimal@@Base+0x24c9c>
   40e34:	cmp	x2, x1
   40e38:	b.ls	41004 <PyInit__decimal@@Base+0x24dc4>  // b.plast
   40e3c:	clz	x0, x2
   40e40:	cbz	x0, 40e5c <PyInit__decimal@@Base+0x24c1c>
   40e44:	neg	w1, w0
   40e48:	lsl	x3, x5, x0
   40e4c:	lsl	x4, x2, x0
   40e50:	lsr	x5, x7, x1
   40e54:	orr	x5, x5, x3
   40e58:	lsl	x7, x7, x0
   40e5c:	lsr	x2, x4, #32
   40e60:	and	x8, x4, #0xffffffff
   40e64:	udiv	x3, x5, x2
   40e68:	mov	x0, x3
   40e6c:	msub	x3, x3, x2, x5
   40e70:	mul	x5, x8, x0
   40e74:	extr	x1, x3, x7, #32
   40e78:	cmp	x5, x1
   40e7c:	b.ls	40e90 <PyInit__decimal@@Base+0x24c50>  // b.plast
   40e80:	adds	x1, x4, x1
   40e84:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
   40e88:	b.hi	41178 <PyInit__decimal@@Base+0x24f38>  // b.pmore
   40e8c:	sub	x0, x0, #0x1
   40e90:	sub	x1, x1, x5
   40e94:	udiv	x5, x1, x2
   40e98:	msub	x1, x5, x2, x1
   40e9c:	mov	x2, x7
   40ea0:	mul	x8, x8, x5
   40ea4:	mov	x3, x5
   40ea8:	bfi	x2, x1, #32, #32
   40eac:	cmp	x8, x2
   40eb0:	b.ls	40ec4 <PyInit__decimal@@Base+0x24c84>  // b.plast
   40eb4:	adds	x2, x4, x2
   40eb8:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   40ebc:	cinc	x3, x5, ls  // ls = plast
   40ec0:	sub	x3, x3, #0x2
   40ec4:	orr	x0, x3, x0, lsl #32
   40ec8:	mov	x1, #0x0                   	// #0
   40ecc:	cbz	x6, 40ed8 <PyInit__decimal@@Base+0x24c98>
   40ed0:	negs	x0, x0
   40ed4:	ngc	x1, x1
   40ed8:	ret
   40edc:	cmp	x3, x1
   40ee0:	b.ls	40f04 <PyInit__decimal@@Base+0x24cc4>  // b.plast
   40ee4:	mov	x1, #0x0                   	// #0
   40ee8:	mov	x0, #0x0                   	// #0
   40eec:	b	40ecc <PyInit__decimal@@Base+0x24c8c>
   40ef0:	negs	x0, x0
   40ef4:	mov	x4, #0x0                   	// #0
   40ef8:	ngc	x1, x1
   40efc:	mov	x6, #0xffffffffffffffff    	// #-1
   40f00:	b	40e14 <PyInit__decimal@@Base+0x24bd4>
   40f04:	clz	x8, x3
   40f08:	cbz	x8, 41120 <PyInit__decimal@@Base+0x24ee0>
   40f0c:	mov	x4, #0x40                  	// #64
   40f10:	sub	x4, x4, x8
   40f14:	lsl	x3, x3, x8
   40f18:	lsr	x5, x2, x4
   40f1c:	orr	x3, x5, x3
   40f20:	lsr	x7, x1, x4
   40f24:	and	x9, x3, #0xffffffff
   40f28:	lsr	x11, x3, #32
   40f2c:	lsl	x1, x1, x8
   40f30:	lsr	x4, x0, x4
   40f34:	orr	x4, x4, x1
   40f38:	lsl	x2, x2, x8
   40f3c:	udiv	x5, x7, x11
   40f40:	mov	x1, x5
   40f44:	msub	x5, x5, x11, x7
   40f48:	mul	x7, x9, x1
   40f4c:	extr	x5, x5, x4, #32
   40f50:	cmp	x7, x5
   40f54:	b.ls	40f68 <PyInit__decimal@@Base+0x24d28>  // b.plast
   40f58:	adds	x5, x3, x5
   40f5c:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   40f60:	b.hi	41160 <PyInit__decimal@@Base+0x24f20>  // b.pmore
   40f64:	sub	x1, x1, #0x1
   40f68:	sub	x7, x5, x7
   40f6c:	udiv	x10, x7, x11
   40f70:	msub	x7, x10, x11, x7
   40f74:	mov	x5, x10
   40f78:	mul	x9, x9, x10
   40f7c:	bfi	x4, x7, #32, #32
   40f80:	cmp	x9, x4
   40f84:	b.ls	40f98 <PyInit__decimal@@Base+0x24d58>  // b.plast
   40f88:	adds	x4, x3, x4
   40f8c:	ccmp	x9, x4, #0x0, cc  // cc = lo, ul, last
   40f90:	b.hi	41148 <PyInit__decimal@@Base+0x24f08>  // b.pmore
   40f94:	sub	x5, x10, #0x1
   40f98:	orr	x1, x5, x1, lsl #32
   40f9c:	and	x10, x2, #0xffffffff
   40fa0:	mov	w5, w5
   40fa4:	lsr	x2, x2, #32
   40fa8:	lsr	x7, x1, #32
   40fac:	sub	x4, x4, x9
   40fb0:	mov	x11, #0x100000000           	// #4294967296
   40fb4:	mul	x12, x5, x10
   40fb8:	mul	x9, x7, x10
   40fbc:	madd	x5, x5, x2, x9
   40fc0:	mul	x2, x7, x2
   40fc4:	add	x3, x5, x12, lsr #32
   40fc8:	add	x5, x2, x11
   40fcc:	cmp	x9, x3
   40fd0:	csel	x2, x5, x2, hi  // hi = pmore
   40fd4:	add	x2, x2, x3, lsr #32
   40fd8:	cmp	x4, x2
   40fdc:	b.cc	40ff8 <PyInit__decimal@@Base+0x24db8>  // b.lo, b.ul, b.last
   40fe0:	and	x12, x12, #0xffffffff
   40fe4:	lsl	x0, x0, x8
   40fe8:	add	x3, x12, x3, lsl #32
   40fec:	cmp	x0, x3
   40ff0:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
   40ff4:	b.ne	41130 <PyInit__decimal@@Base+0x24ef0>  // b.any
   40ff8:	sub	x0, x1, #0x1
   40ffc:	mov	x1, #0x0                   	// #0
   41000:	b	40ecc <PyInit__decimal@@Base+0x24c8c>
   41004:	cbnz	x2, 41010 <PyInit__decimal@@Base+0x24dd0>
   41008:	mov	x2, #0x1                   	// #1
   4100c:	udiv	x4, x2, x3
   41010:	clz	x8, x4
   41014:	cbnz	x8, 41090 <PyInit__decimal@@Base+0x24e50>
   41018:	lsr	x11, x4, #32
   4101c:	and	x10, x4, #0xffffffff
   41020:	sub	x3, x1, x4
   41024:	mov	x1, #0x1                   	// #1
   41028:	udiv	x5, x3, x11
   4102c:	mov	x0, x5
   41030:	msub	x5, x5, x11, x3
   41034:	mul	x2, x0, x10
   41038:	extr	x3, x5, x7, #32
   4103c:	cmp	x2, x3
   41040:	b.ls	41054 <PyInit__decimal@@Base+0x24e14>  // b.plast
   41044:	adds	x3, x4, x3
   41048:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   4104c:	b.hi	4116c <PyInit__decimal@@Base+0x24f2c>  // b.pmore
   41050:	sub	x0, x0, #0x1
   41054:	sub	x3, x3, x2
   41058:	mov	x2, x7
   4105c:	udiv	x9, x3, x11
   41060:	msub	x3, x9, x11, x3
   41064:	mov	x8, x9
   41068:	mul	x5, x9, x10
   4106c:	bfi	x2, x3, #32, #32
   41070:	cmp	x5, x2
   41074:	b.ls	41088 <PyInit__decimal@@Base+0x24e48>  // b.plast
   41078:	adds	x2, x4, x2
   4107c:	ccmp	x5, x2, #0x0, cc  // cc = lo, ul, last
   41080:	cinc	x8, x9, ls  // ls = plast
   41084:	sub	x8, x8, #0x2
   41088:	orr	x0, x8, x0, lsl #32
   4108c:	b	40ecc <PyInit__decimal@@Base+0x24c8c>
   41090:	lsl	x4, x4, x8
   41094:	mov	x2, #0x40                  	// #64
   41098:	sub	x2, x2, x8
   4109c:	lsr	x11, x4, #32
   410a0:	lsl	x3, x1, x8
   410a4:	and	x10, x4, #0xffffffff
   410a8:	lsr	x1, x1, x2
   410ac:	lsr	x5, x0, x2
   410b0:	orr	x5, x5, x3
   410b4:	udiv	x2, x1, x11
   410b8:	lsl	x7, x0, x8
   410bc:	msub	x1, x2, x11, x1
   410c0:	mov	x0, x2
   410c4:	mul	x2, x10, x2
   410c8:	extr	x1, x1, x5, #32
   410cc:	cmp	x2, x1
   410d0:	b.ls	410e4 <PyInit__decimal@@Base+0x24ea4>  // b.plast
   410d4:	adds	x1, x4, x1
   410d8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   410dc:	b.hi	4113c <PyInit__decimal@@Base+0x24efc>  // b.pmore
   410e0:	sub	x0, x0, #0x1
   410e4:	sub	x1, x1, x2
   410e8:	udiv	x2, x1, x11
   410ec:	msub	x1, x2, x11, x1
   410f0:	mov	x8, x2
   410f4:	mul	x3, x10, x2
   410f8:	bfi	x5, x1, #32, #32
   410fc:	cmp	x3, x5
   41100:	b.ls	41114 <PyInit__decimal@@Base+0x24ed4>  // b.plast
   41104:	adds	x5, x4, x5
   41108:	ccmp	x3, x5, #0x0, cc  // cc = lo, ul, last
   4110c:	b.hi	41154 <PyInit__decimal@@Base+0x24f14>  // b.pmore
   41110:	sub	x8, x2, #0x1
   41114:	sub	x3, x5, x3
   41118:	orr	x1, x8, x0, lsl #32
   4111c:	b	41028 <PyInit__decimal@@Base+0x24de8>
   41120:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   41124:	mov	x1, #0x0                   	// #0
   41128:	cset	x0, ls  // ls = plast
   4112c:	b	40ecc <PyInit__decimal@@Base+0x24c8c>
   41130:	mov	x0, x1
   41134:	mov	x1, #0x0                   	// #0
   41138:	b	40ecc <PyInit__decimal@@Base+0x24c8c>
   4113c:	sub	x0, x0, #0x2
   41140:	add	x1, x1, x4
   41144:	b	410e4 <PyInit__decimal@@Base+0x24ea4>
   41148:	sub	x5, x10, #0x2
   4114c:	add	x4, x4, x3
   41150:	b	40f98 <PyInit__decimal@@Base+0x24d58>
   41154:	sub	x8, x2, #0x2
   41158:	add	x5, x5, x4
   4115c:	b	41114 <PyInit__decimal@@Base+0x24ed4>
   41160:	sub	x1, x1, #0x2
   41164:	add	x5, x5, x3
   41168:	b	40f68 <PyInit__decimal@@Base+0x24d28>
   4116c:	sub	x0, x0, #0x2
   41170:	add	x3, x3, x4
   41174:	b	41054 <PyInit__decimal@@Base+0x24e14>
   41178:	sub	x0, x0, #0x2
   4117c:	add	x1, x1, x4
   41180:	b	40e90 <PyInit__decimal@@Base+0x24c50>
   41184:	nop
   41188:	mov	x4, x2
   4118c:	mov	x5, x0
   41190:	mov	x6, x1
   41194:	cbnz	x3, 41230 <PyInit__decimal@@Base+0x24ff0>
   41198:	cmp	x2, x1
   4119c:	b.ls	41344 <PyInit__decimal@@Base+0x25104>  // b.plast
   411a0:	clz	x0, x2
   411a4:	cbz	x0, 411c0 <PyInit__decimal@@Base+0x24f80>
   411a8:	neg	w1, w0
   411ac:	lsl	x2, x6, x0
   411b0:	lsl	x4, x4, x0
   411b4:	lsr	x6, x5, x1
   411b8:	orr	x6, x6, x2
   411bc:	lsl	x5, x5, x0
   411c0:	lsr	x3, x4, #32
   411c4:	and	x7, x4, #0xffffffff
   411c8:	udiv	x2, x6, x3
   411cc:	mov	x0, x2
   411d0:	msub	x2, x2, x3, x6
   411d4:	mul	x6, x7, x0
   411d8:	extr	x1, x2, x5, #32
   411dc:	cmp	x6, x1
   411e0:	b.ls	411f4 <PyInit__decimal@@Base+0x24fb4>  // b.plast
   411e4:	adds	x1, x4, x1
   411e8:	ccmp	x6, x1, #0x0, cc  // cc = lo, ul, last
   411ec:	b.hi	414b4 <PyInit__decimal@@Base+0x25274>  // b.pmore
   411f0:	sub	x0, x0, #0x1
   411f4:	sub	x1, x1, x6
   411f8:	udiv	x6, x1, x3
   411fc:	msub	x1, x6, x3, x1
   41200:	mov	x2, x6
   41204:	mul	x7, x7, x6
   41208:	bfi	x5, x1, #32, #32
   4120c:	cmp	x7, x5
   41210:	b.ls	41224 <PyInit__decimal@@Base+0x24fe4>  // b.plast
   41214:	adds	x5, x4, x5
   41218:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   4121c:	cinc	x2, x6, ls  // ls = plast
   41220:	sub	x2, x2, #0x2
   41224:	orr	x0, x2, x0, lsl #32
   41228:	mov	x1, #0x0                   	// #0
   4122c:	ret
   41230:	cmp	x3, x1
   41234:	b.ls	41244 <PyInit__decimal@@Base+0x25004>  // b.plast
   41238:	mov	x1, #0x0                   	// #0
   4123c:	mov	x0, #0x0                   	// #0
   41240:	ret
   41244:	clz	x7, x3
   41248:	cbz	x7, 4145c <PyInit__decimal@@Base+0x2521c>
   4124c:	mov	x4, #0x40                  	// #64
   41250:	sub	x4, x4, x7
   41254:	lsl	x3, x3, x7
   41258:	lsr	x5, x2, x4
   4125c:	orr	x3, x5, x3
   41260:	lsr	x6, x1, x4
   41264:	and	x8, x3, #0xffffffff
   41268:	lsr	x10, x3, #32
   4126c:	lsr	x4, x0, x4
   41270:	lsl	x1, x1, x7
   41274:	orr	x1, x4, x1
   41278:	lsl	x2, x2, x7
   4127c:	udiv	x5, x6, x10
   41280:	mov	x4, x5
   41284:	msub	x5, x5, x10, x6
   41288:	mul	x6, x8, x4
   4128c:	extr	x5, x5, x1, #32
   41290:	cmp	x6, x5
   41294:	b.ls	412a8 <PyInit__decimal@@Base+0x25068>  // b.plast
   41298:	adds	x5, x3, x5
   4129c:	ccmp	x6, x5, #0x0, cc  // cc = lo, ul, last
   412a0:	b.hi	4149c <PyInit__decimal@@Base+0x2525c>  // b.pmore
   412a4:	sub	x4, x4, #0x1
   412a8:	sub	x6, x5, x6
   412ac:	udiv	x9, x6, x10
   412b0:	msub	x6, x9, x10, x6
   412b4:	mov	x5, x9
   412b8:	mul	x8, x8, x9
   412bc:	bfi	x1, x6, #32, #32
   412c0:	cmp	x8, x1
   412c4:	b.ls	412d8 <PyInit__decimal@@Base+0x25098>  // b.plast
   412c8:	adds	x1, x3, x1
   412cc:	ccmp	x8, x1, #0x0, cc  // cc = lo, ul, last
   412d0:	b.hi	41484 <PyInit__decimal@@Base+0x25244>  // b.pmore
   412d4:	sub	x5, x9, #0x1
   412d8:	orr	x4, x5, x4, lsl #32
   412dc:	and	x9, x2, #0xffffffff
   412e0:	mov	w5, w5
   412e4:	lsr	x2, x2, #32
   412e8:	lsr	x6, x4, #32
   412ec:	sub	x1, x1, x8
   412f0:	mov	x10, #0x100000000           	// #4294967296
   412f4:	mul	x11, x5, x9
   412f8:	mul	x8, x6, x9
   412fc:	madd	x5, x5, x2, x8
   41300:	mul	x2, x6, x2
   41304:	add	x3, x5, x11, lsr #32
   41308:	add	x5, x2, x10
   4130c:	cmp	x8, x3
   41310:	csel	x2, x5, x2, hi  // hi = pmore
   41314:	add	x2, x2, x3, lsr #32
   41318:	cmp	x1, x2
   4131c:	b.cc	41338 <PyInit__decimal@@Base+0x250f8>  // b.lo, b.ul, b.last
   41320:	and	x11, x11, #0xffffffff
   41324:	lsl	x0, x0, x7
   41328:	add	x3, x11, x3, lsl #32
   4132c:	cmp	x0, x3
   41330:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   41334:	b.ne	4146c <PyInit__decimal@@Base+0x2522c>  // b.any
   41338:	sub	x0, x4, #0x1
   4133c:	mov	x1, #0x0                   	// #0
   41340:	ret
   41344:	cbnz	x2, 41350 <PyInit__decimal@@Base+0x25110>
   41348:	mov	x2, #0x1                   	// #1
   4134c:	udiv	x4, x2, x4
   41350:	clz	x8, x4
   41354:	cbnz	x8, 413cc <PyInit__decimal@@Base+0x2518c>
   41358:	lsr	x6, x4, #32
   4135c:	and	x7, x4, #0xffffffff
   41360:	sub	x2, x1, x4
   41364:	mov	x1, #0x1                   	// #1
   41368:	udiv	x3, x2, x6
   4136c:	mov	x0, x3
   41370:	msub	x3, x3, x6, x2
   41374:	mul	x8, x0, x7
   41378:	extr	x2, x3, x5, #32
   4137c:	cmp	x8, x2
   41380:	b.ls	41394 <PyInit__decimal@@Base+0x25154>  // b.plast
   41384:	adds	x2, x4, x2
   41388:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   4138c:	b.hi	414a8 <PyInit__decimal@@Base+0x25268>  // b.pmore
   41390:	sub	x0, x0, #0x1
   41394:	sub	x2, x2, x8
   41398:	udiv	x8, x2, x6
   4139c:	msub	x2, x8, x6, x2
   413a0:	mov	x3, x8
   413a4:	mul	x7, x8, x7
   413a8:	bfi	x5, x2, #32, #32
   413ac:	cmp	x7, x5
   413b0:	b.ls	413c4 <PyInit__decimal@@Base+0x25184>  // b.plast
   413b4:	adds	x4, x4, x5
   413b8:	ccmp	x7, x4, #0x0, cc  // cc = lo, ul, last
   413bc:	cinc	x3, x8, ls  // ls = plast
   413c0:	sub	x3, x3, #0x2
   413c4:	orr	x0, x3, x0, lsl #32
   413c8:	ret
   413cc:	lsl	x4, x4, x8
   413d0:	mov	x3, #0x40                  	// #64
   413d4:	sub	x3, x3, x8
   413d8:	lsr	x6, x4, #32
   413dc:	lsl	x2, x1, x8
   413e0:	and	x7, x4, #0xffffffff
   413e4:	lsr	x1, x1, x3
   413e8:	lsr	x3, x0, x3
   413ec:	orr	x3, x3, x2
   413f0:	udiv	x2, x1, x6
   413f4:	lsl	x5, x0, x8
   413f8:	msub	x1, x2, x6, x1
   413fc:	mov	x0, x2
   41400:	mul	x2, x7, x2
   41404:	extr	x1, x1, x3, #32
   41408:	cmp	x2, x1
   4140c:	b.ls	41420 <PyInit__decimal@@Base+0x251e0>  // b.plast
   41410:	adds	x1, x4, x1
   41414:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   41418:	b.hi	41478 <PyInit__decimal@@Base+0x25238>  // b.pmore
   4141c:	sub	x0, x0, #0x1
   41420:	sub	x1, x1, x2
   41424:	udiv	x2, x1, x6
   41428:	msub	x1, x2, x6, x1
   4142c:	mov	x8, x2
   41430:	mul	x2, x7, x2
   41434:	bfi	x3, x1, #32, #32
   41438:	cmp	x2, x3
   4143c:	b.ls	41450 <PyInit__decimal@@Base+0x25210>  // b.plast
   41440:	adds	x3, x4, x3
   41444:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   41448:	b.hi	41490 <PyInit__decimal@@Base+0x25250>  // b.pmore
   4144c:	sub	x8, x8, #0x1
   41450:	sub	x2, x3, x2
   41454:	orr	x1, x8, x0, lsl #32
   41458:	b	41368 <PyInit__decimal@@Base+0x25128>
   4145c:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   41460:	mov	x1, #0x0                   	// #0
   41464:	cset	x0, ls  // ls = plast
   41468:	ret
   4146c:	mov	x0, x4
   41470:	mov	x1, #0x0                   	// #0
   41474:	ret
   41478:	sub	x0, x0, #0x2
   4147c:	add	x1, x1, x4
   41480:	b	41420 <PyInit__decimal@@Base+0x251e0>
   41484:	sub	x5, x9, #0x2
   41488:	add	x1, x1, x3
   4148c:	b	412d8 <PyInit__decimal@@Base+0x25098>
   41490:	sub	x8, x8, #0x2
   41494:	add	x3, x3, x4
   41498:	b	41450 <PyInit__decimal@@Base+0x25210>
   4149c:	sub	x4, x4, #0x2
   414a0:	add	x5, x5, x3
   414a4:	b	412a8 <PyInit__decimal@@Base+0x25068>
   414a8:	sub	x0, x0, #0x2
   414ac:	add	x2, x2, x4
   414b0:	b	41394 <PyInit__decimal@@Base+0x25154>
   414b4:	sub	x0, x0, #0x2
   414b8:	add	x1, x1, x4
   414bc:	b	411f4 <PyInit__decimal@@Base+0x24fb4>

Disassembly of section .fini:

00000000000414c0 <.fini>:
   414c0:	stp	x29, x30, [sp, #-16]!
   414c4:	mov	x29, sp
   414c8:	ldp	x29, x30, [sp], #16
   414cc:	ret
